
../repos/coreutils/src/tsort:     file format elf32-littlearm


Disassembly of section .init:

00010da0 <.init>:
   10da0:	push	{r3, lr}
   10da4:	bl	11060 <__assert_fail@plt+0x48>
   10da8:	pop	{r3, pc}

Disassembly of section .plt:

00010dac <calloc@plt-0x14>:
   10dac:	push	{lr}		; (str lr, [sp, #-4]!)
   10db0:	ldr	lr, [pc, #4]	; 10dbc <calloc@plt-0x4>
   10db4:	add	lr, pc, lr
   10db8:	ldr	pc, [lr, #8]!
   10dbc:	andeq	fp, r1, r4, asr #4

00010dc0 <calloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #110592	; 0x1b000
   10dc8:	ldr	pc, [ip, #580]!	; 0x244

00010dcc <fputs_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #110592	; 0x1b000
   10dd4:	ldr	pc, [ip, #572]!	; 0x23c

00010dd8 <raise@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #110592	; 0x1b000
   10de0:	ldr	pc, [ip, #564]!	; 0x234

00010de4 <strcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #110592	; 0x1b000
   10dec:	ldr	pc, [ip, #556]!	; 0x22c

00010df0 <posix_fadvise64@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #110592	; 0x1b000
   10df8:	ldr	pc, [ip, #548]!	; 0x224

00010dfc <printf@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #110592	; 0x1b000
   10e04:	ldr	pc, [ip, #540]!	; 0x21c

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #110592	; 0x1b000
   10e10:	ldr	pc, [ip, #532]!	; 0x214

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #110592	; 0x1b000
   10e1c:	ldr	pc, [ip, #524]!	; 0x20c

00010e20 <_exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #110592	; 0x1b000
   10e28:	ldr	pc, [ip, #516]!	; 0x204

00010e2c <memcpy@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #110592	; 0x1b000
   10e34:	ldr	pc, [ip, #508]!	; 0x1fc

00010e38 <mbsinit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #110592	; 0x1b000
   10e40:	ldr	pc, [ip, #500]!	; 0x1f4

00010e44 <memcmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #110592	; 0x1b000
   10e4c:	ldr	pc, [ip, #492]!	; 0x1ec

00010e50 <getc_unlocked@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #110592	; 0x1b000
   10e58:	ldr	pc, [ip, #484]!	; 0x1e4

00010e5c <dup2@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #110592	; 0x1b000
   10e64:	ldr	pc, [ip, #476]!	; 0x1dc

00010e68 <realloc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #110592	; 0x1b000
   10e70:	ldr	pc, [ip, #468]!	; 0x1d4

00010e74 <textdomain@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #110592	; 0x1b000
   10e7c:	ldr	pc, [ip, #460]!	; 0x1cc

00010e80 <iswprint@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #110592	; 0x1b000
   10e88:	ldr	pc, [ip, #452]!	; 0x1c4

00010e8c <lseek64@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #110592	; 0x1b000
   10e94:	ldr	pc, [ip, #444]!	; 0x1bc

00010e98 <__ctype_get_mb_cur_max@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #110592	; 0x1b000
   10ea0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea4 <__fpending@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #110592	; 0x1b000
   10eac:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb0 <ferror_unlocked@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #110592	; 0x1b000
   10eb8:	ldr	pc, [ip, #420]!	; 0x1a4

00010ebc <mbrtowc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #110592	; 0x1b000
   10ec4:	ldr	pc, [ip, #412]!	; 0x19c

00010ec8 <error@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #110592	; 0x1b000
   10ed0:	ldr	pc, [ip, #404]!	; 0x194

00010ed4 <open64@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #110592	; 0x1b000
   10edc:	ldr	pc, [ip, #396]!	; 0x18c

00010ee0 <puts@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #110592	; 0x1b000
   10ee8:	ldr	pc, [ip, #388]!	; 0x184

00010eec <malloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #110592	; 0x1b000
   10ef4:	ldr	pc, [ip, #380]!	; 0x17c

00010ef8 <__libc_start_main@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #110592	; 0x1b000
   10f00:	ldr	pc, [ip, #372]!	; 0x174

00010f04 <__freading@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #110592	; 0x1b000
   10f0c:	ldr	pc, [ip, #364]!	; 0x16c

00010f10 <__gmon_start__@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #110592	; 0x1b000
   10f18:	ldr	pc, [ip, #356]!	; 0x164

00010f1c <freopen64@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #110592	; 0x1b000
   10f24:	ldr	pc, [ip, #348]!	; 0x15c

00010f28 <getopt_long@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #110592	; 0x1b000
   10f30:	ldr	pc, [ip, #340]!	; 0x154

00010f34 <__ctype_b_loc@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #110592	; 0x1b000
   10f3c:	ldr	pc, [ip, #332]!	; 0x14c

00010f40 <exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #110592	; 0x1b000
   10f48:	ldr	pc, [ip, #324]!	; 0x144

00010f4c <gettext@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #110592	; 0x1b000
   10f54:	ldr	pc, [ip, #316]!	; 0x13c

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #110592	; 0x1b000
   10f60:	ldr	pc, [ip, #308]!	; 0x134

00010f64 <fprintf@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #110592	; 0x1b000
   10f6c:	ldr	pc, [ip, #300]!	; 0x12c

00010f70 <__errno_location@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #110592	; 0x1b000
   10f78:	ldr	pc, [ip, #292]!	; 0x124

00010f7c <__cxa_atexit@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #110592	; 0x1b000
   10f84:	ldr	pc, [ip, #284]!	; 0x11c

00010f88 <memset@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #110592	; 0x1b000
   10f90:	ldr	pc, [ip, #276]!	; 0x114

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #110592	; 0x1b000
   10f9c:	ldr	pc, [ip, #268]!	; 0x10c

00010fa0 <fclose@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #110592	; 0x1b000
   10fa8:	ldr	pc, [ip, #260]!	; 0x104

00010fac <fseeko64@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #110592	; 0x1b000
   10fb4:	ldr	pc, [ip, #252]!	; 0xfc

00010fb8 <setlocale@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #110592	; 0x1b000
   10fc0:	ldr	pc, [ip, #244]!	; 0xf4

00010fc4 <strrchr@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #110592	; 0x1b000
   10fcc:	ldr	pc, [ip, #236]!	; 0xec

00010fd0 <nl_langinfo@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #110592	; 0x1b000
   10fd8:	ldr	pc, [ip, #228]!	; 0xe4

00010fdc <bindtextdomain@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #110592	; 0x1b000
   10fe4:	ldr	pc, [ip, #220]!	; 0xdc

00010fe8 <fputs@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #110592	; 0x1b000
   10ff0:	ldr	pc, [ip, #212]!	; 0xd4

00010ff4 <strncmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #110592	; 0x1b000
   10ffc:	ldr	pc, [ip, #204]!	; 0xcc

00011000 <abort@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #110592	; 0x1b000
   11008:	ldr	pc, [ip, #196]!	; 0xc4

0001100c <close@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #110592	; 0x1b000
   11014:	ldr	pc, [ip, #188]!	; 0xbc

00011018 <__assert_fail@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #110592	; 0x1b000
   11020:	ldr	pc, [ip, #180]!	; 0xb4

Disassembly of section .text:

00011024 <.text>:
   11024:	mov	fp, #0
   11028:	mov	lr, #0
   1102c:	pop	{r1}		; (ldr r1, [sp], #4)
   11030:	mov	r2, sp
   11034:	push	{r2}		; (str r2, [sp, #-4]!)
   11038:	push	{r0}		; (str r0, [sp, #-4]!)
   1103c:	ldr	ip, [pc, #16]	; 11054 <__assert_fail@plt+0x3c>
   11040:	push	{ip}		; (str ip, [sp, #-4]!)
   11044:	ldr	r0, [pc, #12]	; 11058 <__assert_fail@plt+0x40>
   11048:	ldr	r3, [pc, #12]	; 1105c <__assert_fail@plt+0x44>
   1104c:	bl	10ef8 <__libc_start_main@plt>
   11050:	bl	11000 <abort@plt>
   11054:	strdeq	fp, [r1], -r0
   11058:	andeq	r1, r1, r8, lsl #8
   1105c:	muleq	r1, r0, r5
   11060:	ldr	r3, [pc, #20]	; 1107c <__assert_fail@plt+0x64>
   11064:	ldr	r2, [pc, #20]	; 11080 <__assert_fail@plt+0x68>
   11068:	add	r3, pc, r3
   1106c:	ldr	r2, [r3, r2]
   11070:	cmp	r2, #0
   11074:	bxeq	lr
   11078:	b	10f10 <__gmon_start__@plt>
   1107c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11080:	ldrdeq	r0, [r0], -r8
   11084:	ldr	r0, [pc, #24]	; 110a4 <__assert_fail@plt+0x8c>
   11088:	ldr	r3, [pc, #24]	; 110a8 <__assert_fail@plt+0x90>
   1108c:	cmp	r3, r0
   11090:	bxeq	lr
   11094:	ldr	r3, [pc, #16]	; 110ac <__assert_fail@plt+0x94>
   11098:	cmp	r3, #0
   1109c:	bxeq	lr
   110a0:	bx	r3
   110a4:	andeq	ip, r2, ip, lsr #2
   110a8:	andeq	ip, r2, ip, lsr #2
   110ac:	andeq	r0, r0, r0
   110b0:	ldr	r0, [pc, #36]	; 110dc <__assert_fail@plt+0xc4>
   110b4:	ldr	r1, [pc, #36]	; 110e0 <__assert_fail@plt+0xc8>
   110b8:	sub	r1, r1, r0
   110bc:	asr	r1, r1, #2
   110c0:	add	r1, r1, r1, lsr #31
   110c4:	asrs	r1, r1, #1
   110c8:	bxeq	lr
   110cc:	ldr	r3, [pc, #16]	; 110e4 <__assert_fail@plt+0xcc>
   110d0:	cmp	r3, #0
   110d4:	bxeq	lr
   110d8:	bx	r3
   110dc:	andeq	ip, r2, ip, lsr #2
   110e0:	andeq	ip, r2, ip, lsr #2
   110e4:	andeq	r0, r0, r0
   110e8:	push	{r4, lr}
   110ec:	ldr	r4, [pc, #24]	; 1110c <__assert_fail@plt+0xf4>
   110f0:	ldrb	r3, [r4]
   110f4:	cmp	r3, #0
   110f8:	popne	{r4, pc}
   110fc:	bl	11084 <__assert_fail@plt+0x6c>
   11100:	mov	r3, #1
   11104:	strb	r3, [r4]
   11108:	pop	{r4, pc}
   1110c:	andeq	ip, r2, r4, asr r1
   11110:	b	110b0 <__assert_fail@plt+0x98>
   11114:	push	{fp, lr}
   11118:	mov	fp, sp
   1111c:	sub	sp, sp, #32
   11120:	str	r0, [fp, #-4]
   11124:	ldr	r0, [fp, #-4]
   11128:	cmp	r0, #0
   1112c:	beq	1117c <__assert_fail@plt+0x164>
   11130:	b	11134 <__assert_fail@plt+0x11c>
   11134:	movw	r0, #49472	; 0xc140
   11138:	movt	r0, #2
   1113c:	ldr	r0, [r0]
   11140:	movw	r1, #46616	; 0xb618
   11144:	movt	r1, #1
   11148:	str	r0, [fp, #-8]
   1114c:	mov	r0, r1
   11150:	bl	10f4c <gettext@plt>
   11154:	movw	r1, #49520	; 0xc170
   11158:	movt	r1, #2
   1115c:	ldr	r2, [r1]
   11160:	ldr	r1, [fp, #-8]
   11164:	str	r0, [fp, #-12]
   11168:	mov	r0, r1
   1116c:	ldr	r1, [fp, #-12]
   11170:	bl	10f64 <fprintf@plt>
   11174:	str	r0, [sp, #16]
   11178:	b	11218 <__assert_fail@plt+0x200>
   1117c:	movw	r0, #46655	; 0xb63f
   11180:	movt	r0, #1
   11184:	bl	10f4c <gettext@plt>
   11188:	movw	lr, #49520	; 0xc170
   1118c:	movt	lr, #2
   11190:	ldr	r1, [lr]
   11194:	bl	10dfc <printf@plt>
   11198:	str	r0, [sp, #12]
   1119c:	bl	11220 <__assert_fail@plt+0x208>
   111a0:	movw	r0, #47298	; 0xb8c2
   111a4:	movt	r0, #1
   111a8:	bl	10f4c <gettext@plt>
   111ac:	movw	r1, #49484	; 0xc14c
   111b0:	movt	r1, #2
   111b4:	ldr	r1, [r1]
   111b8:	bl	10dcc <fputs_unlocked@plt>
   111bc:	movw	r1, #46755	; 0xb6a3
   111c0:	movt	r1, #1
   111c4:	str	r0, [sp, #8]
   111c8:	mov	r0, r1
   111cc:	bl	10f4c <gettext@plt>
   111d0:	movw	r1, #49484	; 0xc14c
   111d4:	movt	r1, #2
   111d8:	ldr	r1, [r1]
   111dc:	bl	10dcc <fputs_unlocked@plt>
   111e0:	movw	r1, #46800	; 0xb6d0
   111e4:	movt	r1, #1
   111e8:	str	r0, [sp, #4]
   111ec:	mov	r0, r1
   111f0:	bl	10f4c <gettext@plt>
   111f4:	movw	r1, #49484	; 0xc14c
   111f8:	movt	r1, #2
   111fc:	ldr	r1, [r1]
   11200:	bl	10dcc <fputs_unlocked@plt>
   11204:	movw	r1, #46854	; 0xb706
   11208:	movt	r1, #1
   1120c:	str	r0, [sp]
   11210:	mov	r0, r1
   11214:	bl	11254 <__assert_fail@plt+0x23c>
   11218:	ldr	r0, [fp, #-4]
   1121c:	bl	10f40 <exit@plt>
   11220:	push	{fp, lr}
   11224:	mov	fp, sp
   11228:	sub	sp, sp, #8
   1122c:	movw	r0, #46929	; 0xb751
   11230:	movt	r0, #1
   11234:	bl	10f4c <gettext@plt>
   11238:	movw	lr, #49484	; 0xc14c
   1123c:	movt	lr, #2
   11240:	ldr	r1, [lr]
   11244:	bl	10dcc <fputs_unlocked@plt>
   11248:	str	r0, [sp, #4]
   1124c:	mov	sp, fp
   11250:	pop	{fp, pc}
   11254:	push	{fp, lr}
   11258:	mov	fp, sp
   1125c:	sub	sp, sp, #96	; 0x60
   11260:	add	r1, sp, #36	; 0x24
   11264:	movw	r2, #47596	; 0xb9ec
   11268:	movt	r2, #1
   1126c:	str	r0, [fp, #-4]
   11270:	mov	r0, r1
   11274:	str	r1, [sp, #20]
   11278:	mov	r1, r2
   1127c:	movw	r2, #56	; 0x38
   11280:	bl	10e2c <memcpy@plt>
   11284:	ldr	r0, [fp, #-4]
   11288:	str	r0, [sp, #32]
   1128c:	ldr	r0, [sp, #20]
   11290:	str	r0, [sp, #28]
   11294:	ldr	r0, [sp, #28]
   11298:	ldr	r0, [r0]
   1129c:	movw	r1, #0
   112a0:	cmp	r0, r1
   112a4:	movw	r0, #0
   112a8:	str	r0, [sp, #16]
   112ac:	beq	112d8 <__assert_fail@plt+0x2c0>
   112b0:	ldr	r0, [fp, #-4]
   112b4:	ldr	r1, [sp, #28]
   112b8:	ldr	r1, [r1]
   112bc:	bl	10de4 <strcmp@plt>
   112c0:	cmp	r0, #0
   112c4:	movw	r0, #0
   112c8:	moveq	r0, #1
   112cc:	mvn	r1, #0
   112d0:	eor	r0, r0, r1
   112d4:	str	r0, [sp, #16]
   112d8:	ldr	r0, [sp, #16]
   112dc:	tst	r0, #1
   112e0:	beq	112f4 <__assert_fail@plt+0x2dc>
   112e4:	ldr	r0, [sp, #28]
   112e8:	add	r0, r0, #8
   112ec:	str	r0, [sp, #28]
   112f0:	b	11294 <__assert_fail@plt+0x27c>
   112f4:	ldr	r0, [sp, #28]
   112f8:	ldr	r0, [r0, #4]
   112fc:	movw	r1, #0
   11300:	cmp	r0, r1
   11304:	beq	11314 <__assert_fail@plt+0x2fc>
   11308:	ldr	r0, [sp, #28]
   1130c:	ldr	r0, [r0, #4]
   11310:	str	r0, [sp, #32]
   11314:	movw	r0, #47080	; 0xb7e8
   11318:	movt	r0, #1
   1131c:	bl	10f4c <gettext@plt>
   11320:	movw	r1, #46884	; 0xb724
   11324:	movt	r1, #1
   11328:	movw	r2, #47103	; 0xb7ff
   1132c:	movt	r2, #1
   11330:	bl	10dfc <printf@plt>
   11334:	movw	r1, #5
   11338:	str	r0, [sp, #12]
   1133c:	mov	r0, r1
   11340:	movw	r1, #0
   11344:	bl	10fb8 <setlocale@plt>
   11348:	str	r0, [sp, #24]
   1134c:	ldr	r0, [sp, #24]
   11350:	movw	r1, #0
   11354:	cmp	r0, r1
   11358:	beq	11398 <__assert_fail@plt+0x380>
   1135c:	ldr	r0, [sp, #24]
   11360:	movw	r1, #47143	; 0xb827
   11364:	movt	r1, #1
   11368:	movw	r2, #3
   1136c:	bl	10ff4 <strncmp@plt>
   11370:	cmp	r0, #0
   11374:	beq	11398 <__assert_fail@plt+0x380>
   11378:	movw	r0, #47147	; 0xb82b
   1137c:	movt	r0, #1
   11380:	bl	10f4c <gettext@plt>
   11384:	movw	lr, #49484	; 0xc14c
   11388:	movt	lr, #2
   1138c:	ldr	r1, [lr]
   11390:	bl	10dcc <fputs_unlocked@plt>
   11394:	str	r0, [sp, #8]
   11398:	movw	r0, #47218	; 0xb872
   1139c:	movt	r0, #1
   113a0:	bl	10f4c <gettext@plt>
   113a4:	ldr	r2, [fp, #-4]
   113a8:	movw	r1, #47103	; 0xb7ff
   113ac:	movt	r1, #1
   113b0:	bl	10dfc <printf@plt>
   113b4:	movw	r1, #47245	; 0xb88d
   113b8:	movt	r1, #1
   113bc:	str	r0, [sp, #4]
   113c0:	mov	r0, r1
   113c4:	bl	10f4c <gettext@plt>
   113c8:	ldr	r1, [sp, #32]
   113cc:	ldr	r2, [sp, #32]
   113d0:	ldr	lr, [fp, #-4]
   113d4:	cmp	r2, lr
   113d8:	movw	r2, #0
   113dc:	moveq	r2, #1
   113e0:	tst	r2, #1
   113e4:	movw	r2, #47299	; 0xb8c3
   113e8:	movt	r2, #1
   113ec:	movw	lr, #47013	; 0xb7a5
   113f0:	movt	lr, #1
   113f4:	movne	r2, lr
   113f8:	bl	10dfc <printf@plt>
   113fc:	str	r0, [sp]
   11400:	mov	sp, fp
   11404:	pop	{fp, pc}
   11408:	push	{fp, lr}
   1140c:	mov	fp, sp
   11410:	sub	sp, sp, #64	; 0x40
   11414:	movw	r2, #0
   11418:	str	r2, [fp, #-4]
   1141c:	str	r0, [fp, #-8]
   11420:	str	r1, [fp, #-12]
   11424:	ldr	r0, [fp, #-12]
   11428:	ldr	r0, [r0]
   1142c:	bl	12de4 <__assert_fail@plt+0x1dcc>
   11430:	movw	r0, #6
   11434:	movw	r1, #47299	; 0xb8c3
   11438:	movt	r1, #1
   1143c:	bl	10fb8 <setlocale@plt>
   11440:	movw	r1, #46888	; 0xb728
   11444:	movt	r1, #1
   11448:	str	r0, [fp, #-16]
   1144c:	mov	r0, r1
   11450:	movw	r1, #46860	; 0xb70c
   11454:	movt	r1, #1
   11458:	bl	10fdc <bindtextdomain@plt>
   1145c:	movw	r1, #46888	; 0xb728
   11460:	movt	r1, #1
   11464:	str	r0, [fp, #-20]	; 0xffffffec
   11468:	mov	r0, r1
   1146c:	bl	10e74 <textdomain@plt>
   11470:	movw	r1, #9328	; 0x2470
   11474:	movt	r1, #1
   11478:	str	r0, [fp, #-24]	; 0xffffffe8
   1147c:	mov	r0, r1
   11480:	bl	1b5f4 <__assert_fail@plt+0xa5dc>
   11484:	ldr	r1, [fp, #-8]
   11488:	ldr	r2, [fp, #-12]
   1148c:	movw	lr, #49380	; 0xc0e4
   11490:	movt	lr, #2
   11494:	ldr	lr, [lr]
   11498:	str	r0, [fp, #-28]	; 0xffffffe4
   1149c:	mov	r0, r1
   114a0:	mov	r1, r2
   114a4:	movw	r2, #46854	; 0xb706
   114a8:	movt	r2, #1
   114ac:	movw	r3, #46884	; 0xb724
   114b0:	movt	r3, #1
   114b4:	str	lr, [sp]
   114b8:	movw	lr, #1
   114bc:	and	lr, lr, #1
   114c0:	str	lr, [sp, #4]
   114c4:	movw	lr, #4372	; 0x1114
   114c8:	movt	lr, #1
   114cc:	str	lr, [sp, #8]
   114d0:	movw	lr, #46898	; 0xb732
   114d4:	movt	lr, #1
   114d8:	str	lr, [sp, #12]
   114dc:	movw	lr, #0
   114e0:	str	lr, [sp, #16]
   114e4:	bl	12c94 <__assert_fail@plt+0x1c7c>
   114e8:	ldr	r0, [fp, #-8]
   114ec:	movw	r1, #49464	; 0xc138
   114f0:	movt	r1, #2
   114f4:	ldr	r1, [r1]
   114f8:	sub	r0, r0, r1
   114fc:	movw	r1, #1
   11500:	cmp	r1, r0
   11504:	bge	1155c <__assert_fail@plt+0x544>
   11508:	movw	r0, #46912	; 0xb740
   1150c:	movt	r0, #1
   11510:	bl	10f4c <gettext@plt>
   11514:	ldr	lr, [fp, #-12]
   11518:	movw	r1, #49464	; 0xc138
   1151c:	movt	r1, #2
   11520:	ldr	r1, [r1]
   11524:	add	r1, r1, #1
   11528:	add	r1, lr, r1, lsl #2
   1152c:	ldr	r1, [r1]
   11530:	str	r0, [sp, #32]
   11534:	mov	r0, r1
   11538:	bl	15440 <__assert_fail@plt+0x4428>
   1153c:	movw	r1, #0
   11540:	str	r0, [sp, #28]
   11544:	mov	r0, r1
   11548:	ldr	r2, [sp, #32]
   1154c:	ldr	r3, [sp, #28]
   11550:	bl	10ec8 <error@plt>
   11554:	movw	r0, #1
   11558:	bl	11114 <__assert_fail@plt+0xfc>
   1155c:	movw	r0, #49464	; 0xc138
   11560:	movt	r0, #2
   11564:	ldr	r0, [r0]
   11568:	ldr	r1, [fp, #-8]
   1156c:	cmp	r0, r1
   11570:	bne	11584 <__assert_fail@plt+0x56c>
   11574:	movw	r0, #47826	; 0xbad2
   11578:	movt	r0, #1
   1157c:	str	r0, [sp, #24]
   11580:	b	115a0 <__assert_fail@plt+0x588>
   11584:	ldr	r0, [fp, #-12]
   11588:	movw	r1, #49464	; 0xc138
   1158c:	movt	r1, #2
   11590:	ldr	r1, [r1]
   11594:	add	r0, r0, r1, lsl #2
   11598:	ldr	r0, [r0]
   1159c:	str	r0, [sp, #24]
   115a0:	ldr	r0, [sp, #24]
   115a4:	bl	115b4 <__assert_fail@plt+0x59c>
   115a8:	ldr	r0, [fp, #-4]
   115ac:	mov	sp, fp
   115b0:	pop	{fp, pc}
   115b4:	push	{fp, lr}
   115b8:	mov	fp, sp
   115bc:	sub	sp, sp, #88	; 0x58
   115c0:	str	r0, [fp, #-4]
   115c4:	movw	r0, #1
   115c8:	strb	r0, [fp, #-5]
   115cc:	movw	r0, #0
   115d0:	str	r0, [fp, #-16]
   115d4:	str	r0, [fp, #-20]	; 0xffffffec
   115d8:	ldr	r1, [fp, #-4]
   115dc:	movw	r2, #47826	; 0xbad2
   115e0:	movt	r2, #1
   115e4:	str	r0, [sp, #44]	; 0x2c
   115e8:	mov	r0, r1
   115ec:	mov	r1, r2
   115f0:	bl	10de4 <strcmp@plt>
   115f4:	cmp	r0, #0
   115f8:	movw	r0, #0
   115fc:	moveq	r0, #1
   11600:	and	r0, r0, #1
   11604:	strb	r0, [fp, #-29]	; 0xffffffe3
   11608:	ldr	r0, [sp, #44]	; 0x2c
   1160c:	bl	119d4 <__assert_fail@plt+0x9bc>
   11610:	str	r0, [fp, #-12]
   11614:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11618:	tst	r0, #1
   1161c:	bne	11688 <__assert_fail@plt+0x670>
   11620:	ldr	r0, [fp, #-4]
   11624:	movw	r1, #49480	; 0xc148
   11628:	movt	r1, #2
   1162c:	ldr	r2, [r1]
   11630:	movw	r1, #47677	; 0xba3d
   11634:	movt	r1, #1
   11638:	bl	127ec <__assert_fail@plt+0x17d4>
   1163c:	movw	r1, #0
   11640:	cmp	r0, r1
   11644:	bne	11688 <__assert_fail@plt+0x670>
   11648:	bl	10f70 <__errno_location@plt>
   1164c:	ldr	r1, [r0]
   11650:	ldr	r2, [fp, #-4]
   11654:	movw	r0, #0
   11658:	movw	lr, #3
   1165c:	str	r1, [sp, #40]	; 0x28
   11660:	mov	r1, lr
   11664:	bl	151fc <__assert_fail@plt+0x41e4>
   11668:	movw	r1, #1
   1166c:	str	r0, [sp, #36]	; 0x24
   11670:	mov	r0, r1
   11674:	ldr	r1, [sp, #40]	; 0x28
   11678:	movw	r2, #47683	; 0xba43
   1167c:	movt	r2, #1
   11680:	ldr	r3, [sp, #36]	; 0x24
   11684:	bl	10ec8 <error@plt>
   11688:	movw	r0, #49480	; 0xc148
   1168c:	movt	r0, #2
   11690:	ldr	r0, [r0]
   11694:	movw	r1, #2
   11698:	bl	125f8 <__assert_fail@plt+0x15e0>
   1169c:	sub	r0, fp, #28
   116a0:	bl	15578 <__assert_fail@plt+0x4560>
   116a4:	movw	r0, #49480	; 0xc148
   116a8:	movt	r0, #2
   116ac:	ldr	r0, [r0]
   116b0:	movw	r1, #47296	; 0xb8c0
   116b4:	movt	r1, #1
   116b8:	movw	r2, #3
   116bc:	sub	r3, fp, #28
   116c0:	bl	1559c <__assert_fail@plt+0x4584>
   116c4:	str	r0, [fp, #-36]	; 0xffffffdc
   116c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116cc:	cmn	r0, #1
   116d0:	bne	116d8 <__assert_fail@plt+0x6c0>
   116d4:	b	11748 <__assert_fail@plt+0x730>
   116d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116dc:	cmp	r0, #0
   116e0:	beq	116e8 <__assert_fail@plt+0x6d0>
   116e4:	b	11708 <__assert_fail@plt+0x6f0>
   116e8:	movw	r0, #47300	; 0xb8c4
   116ec:	movt	r0, #1
   116f0:	movw	r1, #47309	; 0xb8cd
   116f4:	movt	r1, #1
   116f8:	movw	r2, #458	; 0x1ca
   116fc:	movw	r3, #47321	; 0xb8d9
   11700:	movt	r3, #1
   11704:	bl	11018 <__assert_fail@plt>
   11708:	ldr	r0, [fp, #-12]
   1170c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11710:	bl	11a1c <__assert_fail@plt+0xa04>
   11714:	str	r0, [fp, #-20]	; 0xffffffec
   11718:	ldr	r0, [fp, #-16]
   1171c:	movw	r1, #0
   11720:	cmp	r0, r1
   11724:	beq	1173c <__assert_fail@plt+0x724>
   11728:	ldr	r0, [fp, #-16]
   1172c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11730:	bl	11f74 <__assert_fail@plt+0xf5c>
   11734:	movw	r0, #0
   11738:	str	r0, [fp, #-20]	; 0xffffffec
   1173c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11740:	str	r0, [fp, #-16]
   11744:	b	116a4 <__assert_fail@plt+0x68c>
   11748:	ldr	r0, [fp, #-20]	; 0xffffffec
   1174c:	movw	r1, #0
   11750:	cmp	r0, r1
   11754:	beq	11798 <__assert_fail@plt+0x780>
   11758:	movw	r0, #47346	; 0xb8f2
   1175c:	movt	r0, #1
   11760:	bl	10f4c <gettext@plt>
   11764:	ldr	r2, [fp, #-4]
   11768:	movw	lr, #0
   1176c:	str	r0, [sp, #32]
   11770:	mov	r0, lr
   11774:	movw	r1, #3
   11778:	bl	151fc <__assert_fail@plt+0x41e4>
   1177c:	movw	r1, #1
   11780:	str	r0, [sp, #28]
   11784:	mov	r0, r1
   11788:	movw	r1, #0
   1178c:	ldr	r2, [sp, #32]
   11790:	ldr	r3, [sp, #28]
   11794:	bl	10ec8 <error@plt>
   11798:	ldr	r0, [fp, #-12]
   1179c:	movw	r1, #8244	; 0x2034
   117a0:	movt	r1, #1
   117a4:	bl	11ff0 <__assert_fail@plt+0xfd8>
   117a8:	movw	r0, #49496	; 0xc158
   117ac:	movt	r0, #2
   117b0:	ldr	r0, [r0]
   117b4:	cmp	r0, #0
   117b8:	bls	11944 <__assert_fail@plt+0x92c>
   117bc:	ldr	r0, [fp, #-12]
   117c0:	movw	r1, #8288	; 0x2060
   117c4:	movt	r1, #1
   117c8:	bl	11ff0 <__assert_fail@plt+0xfd8>
   117cc:	movw	r0, #49500	; 0xc15c
   117d0:	movt	r0, #2
   117d4:	ldr	r0, [r0]
   117d8:	movw	r1, #0
   117dc:	cmp	r0, r1
   117e0:	beq	118bc <__assert_fail@plt+0x8a4>
   117e4:	movw	r0, #49500	; 0xc15c
   117e8:	movt	r0, #2
   117ec:	ldr	r1, [r0]
   117f0:	ldr	r1, [r1, #24]
   117f4:	str	r1, [fp, #-40]	; 0xffffffd8
   117f8:	ldr	r0, [r0]
   117fc:	ldr	r0, [r0]
   11800:	bl	10ee0 <puts@plt>
   11804:	movw	r1, #49500	; 0xc15c
   11808:	movt	r1, #2
   1180c:	ldr	r1, [r1]
   11810:	movw	lr, #1
   11814:	strb	lr, [r1, #13]
   11818:	movw	r1, #49496	; 0xc158
   1181c:	movt	r1, #2
   11820:	ldr	lr, [r1]
   11824:	mvn	r2, #0
   11828:	add	r2, lr, r2
   1182c:	str	r2, [r1]
   11830:	str	r0, [sp, #24]
   11834:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11838:	movw	r1, #0
   1183c:	cmp	r0, r1
   11840:	beq	118a4 <__assert_fail@plt+0x88c>
   11844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11848:	ldr	r0, [r0]
   1184c:	ldr	r1, [r0, #16]
   11850:	mvn	r2, #0
   11854:	add	r1, r1, r2
   11858:	str	r1, [r0, #16]
   1185c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11860:	ldr	r0, [r0]
   11864:	ldr	r0, [r0, #16]
   11868:	cmp	r0, #0
   1186c:	bne	11894 <__assert_fail@plt+0x87c>
   11870:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11874:	ldr	r0, [r0]
   11878:	movw	r1, #49504	; 0xc160
   1187c:	movt	r1, #2
   11880:	ldr	r2, [r1]
   11884:	str	r0, [r2, #20]
   11888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1188c:	ldr	r0, [r0]
   11890:	str	r0, [r1]
   11894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11898:	ldr	r0, [r0, #4]
   1189c:	str	r0, [fp, #-40]	; 0xffffffd8
   118a0:	b	11834 <__assert_fail@plt+0x81c>
   118a4:	movw	r0, #49500	; 0xc15c
   118a8:	movt	r0, #2
   118ac:	ldr	r1, [r0]
   118b0:	ldr	r1, [r1, #20]
   118b4:	str	r1, [r0]
   118b8:	b	117cc <__assert_fail@plt+0x7b4>
   118bc:	movw	r0, #49496	; 0xc158
   118c0:	movt	r0, #2
   118c4:	ldr	r0, [r0]
   118c8:	cmp	r0, #0
   118cc:	bls	11940 <__assert_fail@plt+0x928>
   118d0:	movw	r0, #47389	; 0xb91d
   118d4:	movt	r0, #1
   118d8:	bl	10f4c <gettext@plt>
   118dc:	ldr	r2, [fp, #-4]
   118e0:	movw	lr, #0
   118e4:	str	r0, [sp, #20]
   118e8:	mov	r0, lr
   118ec:	movw	r1, #3
   118f0:	bl	151fc <__assert_fail@plt+0x41e4>
   118f4:	movw	r1, #0
   118f8:	str	r0, [sp, #16]
   118fc:	mov	r0, r1
   11900:	ldr	r2, [sp, #20]
   11904:	ldr	r3, [sp, #16]
   11908:	bl	10ec8 <error@plt>
   1190c:	movw	r0, #0
   11910:	strb	r0, [fp, #-5]
   11914:	ldr	r0, [fp, #-12]
   11918:	movw	r1, #8424	; 0x20e8
   1191c:	movt	r1, #1
   11920:	bl	11ff0 <__assert_fail@plt+0xfd8>
   11924:	movw	r0, #49508	; 0xc164
   11928:	movt	r0, #2
   1192c:	ldr	r0, [r0]
   11930:	movw	r1, #0
   11934:	cmp	r0, r1
   11938:	bne	11914 <__assert_fail@plt+0x8fc>
   1193c:	b	11940 <__assert_fail@plt+0x928>
   11940:	b	117a8 <__assert_fail@plt+0x790>
   11944:	movw	r0, #49480	; 0xc148
   11948:	movt	r0, #2
   1194c:	ldr	r0, [r0]
   11950:	bl	12650 <__assert_fail@plt+0x1638>
   11954:	cmp	r0, #0
   11958:	beq	119c0 <__assert_fail@plt+0x9a8>
   1195c:	bl	10f70 <__errno_location@plt>
   11960:	ldr	r1, [r0]
   11964:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11968:	tst	r0, #1
   1196c:	str	r1, [sp, #12]
   11970:	beq	11988 <__assert_fail@plt+0x970>
   11974:	movw	r0, #47416	; 0xb938
   11978:	movt	r0, #1
   1197c:	bl	10f4c <gettext@plt>
   11980:	str	r0, [sp, #8]
   11984:	b	1199c <__assert_fail@plt+0x984>
   11988:	ldr	r2, [fp, #-4]
   1198c:	movw	r0, #0
   11990:	movw	r1, #3
   11994:	bl	151fc <__assert_fail@plt+0x41e4>
   11998:	str	r0, [sp, #8]
   1199c:	ldr	r0, [sp, #8]
   119a0:	movw	r1, #1
   119a4:	str	r0, [sp, #4]
   119a8:	mov	r0, r1
   119ac:	ldr	r1, [sp, #12]
   119b0:	movw	r2, #47683	; 0xba43
   119b4:	movt	r2, #1
   119b8:	ldr	r3, [sp, #4]
   119bc:	bl	10ec8 <error@plt>
   119c0:	ldrb	r0, [fp, #-5]
   119c4:	tst	r0, #1
   119c8:	movw	r0, #0
   119cc:	moveq	r0, #1
   119d0:	bl	10f40 <exit@plt>
   119d4:	push	{fp, lr}
   119d8:	mov	fp, sp
   119dc:	sub	sp, sp, #8
   119e0:	str	r0, [sp, #4]
   119e4:	movw	r0, #28
   119e8:	bl	18f38 <__assert_fail@plt+0x7f20>
   119ec:	str	r0, [sp]
   119f0:	ldr	r0, [sp, #4]
   119f4:	movw	lr, #0
   119f8:	cmp	r0, lr
   119fc:	beq	11a10 <__assert_fail@plt+0x9f8>
   11a00:	ldr	r0, [sp, #4]
   11a04:	bl	190a0 <__assert_fail@plt+0x8088>
   11a08:	ldr	lr, [sp]
   11a0c:	str	r0, [lr]
   11a10:	ldr	r0, [sp]
   11a14:	mov	sp, fp
   11a18:	pop	{fp, pc}
   11a1c:	push	{fp, lr}
   11a20:	mov	fp, sp
   11a24:	sub	sp, sp, #40	; 0x28
   11a28:	str	r0, [fp, #-8]
   11a2c:	str	r1, [fp, #-12]
   11a30:	ldr	r0, [fp, #-8]
   11a34:	movw	r1, #0
   11a38:	cmp	r0, r1
   11a3c:	beq	11a44 <__assert_fail@plt+0xa2c>
   11a40:	b	11a64 <__assert_fail@plt+0xa4c>
   11a44:	movw	r0, #47431	; 0xb947
   11a48:	movt	r0, #1
   11a4c:	movw	r1, #47309	; 0xb8cd
   11a50:	movt	r1, #1
   11a54:	movw	r2, #126	; 0x7e
   11a58:	movw	r3, #47436	; 0xb94c
   11a5c:	movt	r3, #1
   11a60:	bl	11018 <__assert_fail@plt>
   11a64:	ldr	r0, [fp, #-8]
   11a68:	ldr	r0, [r0, #8]
   11a6c:	movw	r1, #0
   11a70:	cmp	r0, r1
   11a74:	bne	11a90 <__assert_fail@plt+0xa78>
   11a78:	ldr	r0, [fp, #-12]
   11a7c:	bl	119d4 <__assert_fail@plt+0x9bc>
   11a80:	ldr	lr, [fp, #-8]
   11a84:	str	r0, [lr, #8]
   11a88:	str	r0, [fp, #-4]
   11a8c:	b	11f68 <__assert_fail@plt+0xf50>
   11a90:	ldr	r0, [fp, #-8]
   11a94:	str	r0, [sp, #8]
   11a98:	ldr	r0, [fp, #-8]
   11a9c:	ldr	r0, [r0, #8]
   11aa0:	str	r0, [fp, #-16]
   11aa4:	str	r0, [sp, #12]
   11aa8:	ldr	r0, [fp, #-12]
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	beq	11ae0 <__assert_fail@plt+0xac8>
   11ab8:	ldr	r0, [fp, #-16]
   11abc:	movw	r1, #0
   11ac0:	cmp	r0, r1
   11ac4:	beq	11ae0 <__assert_fail@plt+0xac8>
   11ac8:	ldr	r0, [fp, #-16]
   11acc:	ldr	r0, [r0]
   11ad0:	movw	r1, #0
   11ad4:	cmp	r0, r1
   11ad8:	beq	11ae0 <__assert_fail@plt+0xac8>
   11adc:	b	11b00 <__assert_fail@plt+0xae8>
   11ae0:	movw	r0, #47490	; 0xb982
   11ae4:	movt	r0, #1
   11ae8:	movw	r1, #47309	; 0xb8cd
   11aec:	movt	r1, #1
   11af0:	movw	r2, #140	; 0x8c
   11af4:	movw	r3, #47436	; 0xb94c
   11af8:	movt	r3, #1
   11afc:	bl	11018 <__assert_fail@plt>
   11b00:	ldr	r0, [fp, #-12]
   11b04:	ldr	r1, [fp, #-16]
   11b08:	ldr	r1, [r1]
   11b0c:	bl	10de4 <strcmp@plt>
   11b10:	str	r0, [sp, #4]
   11b14:	ldr	r0, [sp, #4]
   11b18:	cmp	r0, #0
   11b1c:	bne	11b2c <__assert_fail@plt+0xb14>
   11b20:	ldr	r0, [fp, #-16]
   11b24:	str	r0, [fp, #-4]
   11b28:	b	11f68 <__assert_fail@plt+0xf50>
   11b2c:	ldr	r0, [sp, #4]
   11b30:	cmp	r0, #0
   11b34:	bge	11b48 <__assert_fail@plt+0xb30>
   11b38:	ldr	r0, [fp, #-16]
   11b3c:	ldr	r0, [r0, #4]
   11b40:	str	r0, [sp, #20]
   11b44:	b	11b54 <__assert_fail@plt+0xb3c>
   11b48:	ldr	r0, [fp, #-16]
   11b4c:	ldr	r0, [r0, #8]
   11b50:	str	r0, [sp, #20]
   11b54:	ldr	r0, [sp, #20]
   11b58:	movw	r1, #0
   11b5c:	cmp	r0, r1
   11b60:	bne	11f3c <__assert_fail@plt+0xf24>
   11b64:	ldr	r0, [fp, #-12]
   11b68:	bl	119d4 <__assert_fail@plt+0x9bc>
   11b6c:	str	r0, [sp, #20]
   11b70:	ldr	r0, [sp, #4]
   11b74:	cmp	r0, #0
   11b78:	bge	11b8c <__assert_fail@plt+0xb74>
   11b7c:	ldr	r0, [sp, #20]
   11b80:	ldr	r1, [fp, #-16]
   11b84:	str	r0, [r1, #4]
   11b88:	b	11b98 <__assert_fail@plt+0xb80>
   11b8c:	ldr	r0, [sp, #20]
   11b90:	ldr	r1, [fp, #-16]
   11b94:	str	r0, [r1, #8]
   11b98:	ldr	r0, [fp, #-12]
   11b9c:	movw	r1, #0
   11ba0:	cmp	r0, r1
   11ba4:	beq	11be8 <__assert_fail@plt+0xbd0>
   11ba8:	ldr	r0, [sp, #12]
   11bac:	movw	r1, #0
   11bb0:	cmp	r0, r1
   11bb4:	beq	11be8 <__assert_fail@plt+0xbd0>
   11bb8:	ldr	r0, [sp, #12]
   11bbc:	ldr	r0, [r0]
   11bc0:	movw	r1, #0
   11bc4:	cmp	r0, r1
   11bc8:	beq	11be8 <__assert_fail@plt+0xbd0>
   11bcc:	ldr	r0, [fp, #-12]
   11bd0:	ldr	r1, [sp, #12]
   11bd4:	ldr	r1, [r1]
   11bd8:	bl	10de4 <strcmp@plt>
   11bdc:	cmp	r0, #0
   11be0:	beq	11be8 <__assert_fail@plt+0xbd0>
   11be4:	b	11c08 <__assert_fail@plt+0xbf0>
   11be8:	movw	r0, #47509	; 0xb995
   11bec:	movt	r0, #1
   11bf0:	movw	r1, #47309	; 0xb8cd
   11bf4:	movt	r1, #1
   11bf8:	movw	r2, #163	; 0xa3
   11bfc:	movw	r3, #47436	; 0xb94c
   11c00:	movt	r3, #1
   11c04:	bl	11018 <__assert_fail@plt>
   11c08:	ldr	r0, [fp, #-12]
   11c0c:	ldr	r1, [sp, #12]
   11c10:	ldr	r1, [r1]
   11c14:	bl	10de4 <strcmp@plt>
   11c18:	cmp	r0, #0
   11c1c:	bge	11c3c <__assert_fail@plt+0xc24>
   11c20:	ldr	r0, [sp, #12]
   11c24:	ldr	r0, [r0, #4]
   11c28:	str	r0, [fp, #-16]
   11c2c:	str	r0, [sp, #16]
   11c30:	mvn	r0, #0
   11c34:	str	r0, [sp, #4]
   11c38:	b	11c54 <__assert_fail@plt+0xc3c>
   11c3c:	ldr	r0, [sp, #12]
   11c40:	ldr	r0, [r0, #8]
   11c44:	str	r0, [fp, #-16]
   11c48:	str	r0, [sp, #16]
   11c4c:	movw	r0, #1
   11c50:	str	r0, [sp, #4]
   11c54:	b	11c58 <__assert_fail@plt+0xc40>
   11c58:	ldr	r0, [fp, #-16]
   11c5c:	ldr	r1, [sp, #20]
   11c60:	cmp	r0, r1
   11c64:	beq	11d28 <__assert_fail@plt+0xd10>
   11c68:	ldr	r0, [fp, #-12]
   11c6c:	movw	r1, #0
   11c70:	cmp	r0, r1
   11c74:	beq	11cb8 <__assert_fail@plt+0xca0>
   11c78:	ldr	r0, [fp, #-16]
   11c7c:	movw	r1, #0
   11c80:	cmp	r0, r1
   11c84:	beq	11cb8 <__assert_fail@plt+0xca0>
   11c88:	ldr	r0, [fp, #-16]
   11c8c:	ldr	r0, [r0]
   11c90:	movw	r1, #0
   11c94:	cmp	r0, r1
   11c98:	beq	11cb8 <__assert_fail@plt+0xca0>
   11c9c:	ldr	r0, [fp, #-12]
   11ca0:	ldr	r1, [fp, #-16]
   11ca4:	ldr	r1, [r1]
   11ca8:	bl	10de4 <strcmp@plt>
   11cac:	cmp	r0, #0
   11cb0:	beq	11cb8 <__assert_fail@plt+0xca0>
   11cb4:	b	11cd8 <__assert_fail@plt+0xcc0>
   11cb8:	movw	r0, #47552	; 0xb9c0
   11cbc:	movt	r0, #1
   11cc0:	movw	r1, #47309	; 0xb8cd
   11cc4:	movt	r1, #1
   11cc8:	movw	r2, #177	; 0xb1
   11ccc:	movw	r3, #47436	; 0xb94c
   11cd0:	movt	r3, #1
   11cd4:	bl	11018 <__assert_fail@plt>
   11cd8:	ldr	r0, [fp, #-12]
   11cdc:	ldr	r1, [fp, #-16]
   11ce0:	ldr	r1, [r1]
   11ce4:	bl	10de4 <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	bge	11d0c <__assert_fail@plt+0xcf4>
   11cf0:	ldr	r0, [fp, #-16]
   11cf4:	movw	r1, #255	; 0xff
   11cf8:	strb	r1, [r0, #12]
   11cfc:	ldr	r0, [fp, #-16]
   11d00:	ldr	r0, [r0, #4]
   11d04:	str	r0, [fp, #-16]
   11d08:	b	11d24 <__assert_fail@plt+0xd0c>
   11d0c:	ldr	r0, [fp, #-16]
   11d10:	movw	r1, #1
   11d14:	strb	r1, [r0, #12]
   11d18:	ldr	r0, [fp, #-16]
   11d1c:	ldr	r0, [r0, #8]
   11d20:	str	r0, [fp, #-16]
   11d24:	b	11c58 <__assert_fail@plt+0xc40>
   11d28:	ldr	r0, [sp, #12]
   11d2c:	ldrsb	r0, [r0, #12]
   11d30:	cmp	r0, #0
   11d34:	beq	11d54 <__assert_fail@plt+0xd3c>
   11d38:	ldr	r0, [sp, #12]
   11d3c:	ldrsb	r0, [r0, #12]
   11d40:	ldr	r1, [sp, #4]
   11d44:	movw	r2, #0
   11d48:	sub	r1, r2, r1
   11d4c:	cmp	r0, r1
   11d50:	bne	11d74 <__assert_fail@plt+0xd5c>
   11d54:	ldr	r0, [sp, #4]
   11d58:	ldr	r1, [sp, #12]
   11d5c:	ldrsb	r2, [r1, #12]
   11d60:	add	r0, r2, r0
   11d64:	strb	r0, [r1, #12]
   11d68:	ldr	r0, [sp, #20]
   11d6c:	str	r0, [fp, #-4]
   11d70:	b	11f68 <__assert_fail@plt+0xf50>
   11d74:	ldr	r0, [sp, #16]
   11d78:	ldrsb	r0, [r0, #12]
   11d7c:	ldr	r1, [sp, #4]
   11d80:	cmp	r0, r1
   11d84:	bne	11df0 <__assert_fail@plt+0xdd8>
   11d88:	ldr	r0, [sp, #16]
   11d8c:	str	r0, [fp, #-16]
   11d90:	ldr	r0, [sp, #4]
   11d94:	cmp	r0, #0
   11d98:	bge	11dbc <__assert_fail@plt+0xda4>
   11d9c:	ldr	r0, [sp, #16]
   11da0:	ldr	r0, [r0, #8]
   11da4:	ldr	r1, [sp, #12]
   11da8:	str	r0, [r1, #4]
   11dac:	ldr	r0, [sp, #12]
   11db0:	ldr	r1, [sp, #16]
   11db4:	str	r0, [r1, #8]
   11db8:	b	11dd8 <__assert_fail@plt+0xdc0>
   11dbc:	ldr	r0, [sp, #16]
   11dc0:	ldr	r0, [r0, #4]
   11dc4:	ldr	r1, [sp, #12]
   11dc8:	str	r0, [r1, #8]
   11dcc:	ldr	r0, [sp, #12]
   11dd0:	ldr	r1, [sp, #16]
   11dd4:	str	r0, [r1, #4]
   11dd8:	ldr	r0, [sp, #16]
   11ddc:	movw	r1, #0
   11de0:	strb	r1, [r0, #12]
   11de4:	ldr	r0, [sp, #12]
   11de8:	strb	r1, [r0, #12]
   11dec:	b	11f00 <__assert_fail@plt+0xee8>
   11df0:	ldr	r0, [sp, #4]
   11df4:	cmp	r0, #0
   11df8:	bge	11e44 <__assert_fail@plt+0xe2c>
   11dfc:	ldr	r0, [sp, #16]
   11e00:	ldr	r0, [r0, #8]
   11e04:	str	r0, [fp, #-16]
   11e08:	ldr	r0, [fp, #-16]
   11e0c:	ldr	r0, [r0, #4]
   11e10:	ldr	r1, [sp, #16]
   11e14:	str	r0, [r1, #8]
   11e18:	ldr	r0, [sp, #16]
   11e1c:	ldr	r1, [fp, #-16]
   11e20:	str	r0, [r1, #4]
   11e24:	ldr	r0, [fp, #-16]
   11e28:	ldr	r0, [r0, #8]
   11e2c:	ldr	r1, [sp, #12]
   11e30:	str	r0, [r1, #4]
   11e34:	ldr	r0, [sp, #12]
   11e38:	ldr	r1, [fp, #-16]
   11e3c:	str	r0, [r1, #8]
   11e40:	b	11e88 <__assert_fail@plt+0xe70>
   11e44:	ldr	r0, [sp, #16]
   11e48:	ldr	r0, [r0, #4]
   11e4c:	str	r0, [fp, #-16]
   11e50:	ldr	r0, [fp, #-16]
   11e54:	ldr	r0, [r0, #8]
   11e58:	ldr	r1, [sp, #16]
   11e5c:	str	r0, [r1, #4]
   11e60:	ldr	r0, [sp, #16]
   11e64:	ldr	r1, [fp, #-16]
   11e68:	str	r0, [r1, #8]
   11e6c:	ldr	r0, [fp, #-16]
   11e70:	ldr	r0, [r0, #4]
   11e74:	ldr	r1, [sp, #12]
   11e78:	str	r0, [r1, #8]
   11e7c:	ldr	r0, [sp, #12]
   11e80:	ldr	r1, [fp, #-16]
   11e84:	str	r0, [r1, #4]
   11e88:	ldr	r0, [sp, #12]
   11e8c:	movw	r1, #0
   11e90:	strb	r1, [r0, #12]
   11e94:	ldr	r0, [sp, #16]
   11e98:	strb	r1, [r0, #12]
   11e9c:	ldr	r0, [fp, #-16]
   11ea0:	ldrsb	r0, [r0, #12]
   11ea4:	ldr	r1, [sp, #4]
   11ea8:	cmp	r0, r1
   11eac:	bne	11ec8 <__assert_fail@plt+0xeb0>
   11eb0:	ldr	r0, [sp, #4]
   11eb4:	movw	r1, #0
   11eb8:	sub	r0, r1, r0
   11ebc:	ldr	r1, [sp, #12]
   11ec0:	strb	r0, [r1, #12]
   11ec4:	b	11ef4 <__assert_fail@plt+0xedc>
   11ec8:	ldr	r0, [fp, #-16]
   11ecc:	ldrsb	r0, [r0, #12]
   11ed0:	ldr	r1, [sp, #4]
   11ed4:	movw	r2, #0
   11ed8:	sub	r1, r2, r1
   11edc:	cmp	r0, r1
   11ee0:	bne	11ef0 <__assert_fail@plt+0xed8>
   11ee4:	ldr	r0, [sp, #4]
   11ee8:	ldr	r1, [sp, #16]
   11eec:	strb	r0, [r1, #12]
   11ef0:	b	11ef4 <__assert_fail@plt+0xedc>
   11ef4:	ldr	r0, [fp, #-16]
   11ef8:	movw	r1, #0
   11efc:	strb	r1, [r0, #12]
   11f00:	ldr	r0, [sp, #12]
   11f04:	ldr	r1, [sp, #8]
   11f08:	ldr	r1, [r1, #8]
   11f0c:	cmp	r0, r1
   11f10:	bne	11f24 <__assert_fail@plt+0xf0c>
   11f14:	ldr	r0, [fp, #-16]
   11f18:	ldr	r1, [sp, #8]
   11f1c:	str	r0, [r1, #8]
   11f20:	b	11f30 <__assert_fail@plt+0xf18>
   11f24:	ldr	r0, [fp, #-16]
   11f28:	ldr	r1, [sp, #8]
   11f2c:	str	r0, [r1, #4]
   11f30:	ldr	r0, [sp, #20]
   11f34:	str	r0, [fp, #-4]
   11f38:	b	11f68 <__assert_fail@plt+0xf50>
   11f3c:	ldr	r0, [sp, #20]
   11f40:	ldrsb	r0, [r0, #12]
   11f44:	cmp	r0, #0
   11f48:	beq	11f5c <__assert_fail@plt+0xf44>
   11f4c:	ldr	r0, [fp, #-16]
   11f50:	str	r0, [sp, #8]
   11f54:	ldr	r0, [sp, #20]
   11f58:	str	r0, [sp, #12]
   11f5c:	ldr	r0, [sp, #20]
   11f60:	str	r0, [fp, #-16]
   11f64:	b	11aa8 <__assert_fail@plt+0xa90>
   11f68:	ldr	r0, [fp, #-4]
   11f6c:	mov	sp, fp
   11f70:	pop	{fp, pc}
   11f74:	push	{fp, lr}
   11f78:	mov	fp, sp
   11f7c:	sub	sp, sp, #16
   11f80:	str	r0, [fp, #-4]
   11f84:	str	r1, [sp, #8]
   11f88:	ldr	r0, [fp, #-4]
   11f8c:	ldr	r0, [r0]
   11f90:	ldr	r1, [sp, #8]
   11f94:	ldr	r1, [r1]
   11f98:	bl	10de4 <strcmp@plt>
   11f9c:	cmp	r0, #0
   11fa0:	beq	11fe8 <__assert_fail@plt+0xfd0>
   11fa4:	ldr	r0, [sp, #8]
   11fa8:	ldr	r1, [r0, #16]
   11fac:	add	r1, r1, #1
   11fb0:	str	r1, [r0, #16]
   11fb4:	movw	r0, #8
   11fb8:	bl	162fc <__assert_fail@plt+0x52e4>
   11fbc:	str	r0, [sp, #4]
   11fc0:	ldr	r0, [sp, #8]
   11fc4:	ldr	r1, [sp, #4]
   11fc8:	str	r0, [r1]
   11fcc:	ldr	r0, [fp, #-4]
   11fd0:	ldr	r0, [r0, #24]
   11fd4:	ldr	r1, [sp, #4]
   11fd8:	str	r0, [r1, #4]
   11fdc:	ldr	r0, [sp, #4]
   11fe0:	ldr	r1, [fp, #-4]
   11fe4:	str	r0, [r1, #24]
   11fe8:	mov	sp, fp
   11fec:	pop	{fp, pc}
   11ff0:	push	{fp, lr}
   11ff4:	mov	fp, sp
   11ff8:	sub	sp, sp, #16
   11ffc:	str	r0, [fp, #-4]
   12000:	str	r1, [sp, #8]
   12004:	ldr	r0, [fp, #-4]
   12008:	ldr	r0, [r0, #8]
   1200c:	movw	r1, #0
   12010:	cmp	r0, r1
   12014:	beq	1202c <__assert_fail@plt+0x1014>
   12018:	ldr	r0, [fp, #-4]
   1201c:	ldr	r0, [r0, #8]
   12020:	ldr	r1, [sp, #8]
   12024:	bl	122f8 <__assert_fail@plt+0x12e0>
   12028:	str	r0, [sp, #4]
   1202c:	mov	sp, fp
   12030:	pop	{fp, pc}
   12034:	sub	sp, sp, #4
   12038:	str	r0, [sp]
   1203c:	movw	r0, #49496	; 0xc158
   12040:	movt	r0, #2
   12044:	ldr	r1, [r0]
   12048:	add	r1, r1, #1
   1204c:	str	r1, [r0]
   12050:	movw	r0, #0
   12054:	and	r0, r0, #1
   12058:	add	sp, sp, #4
   1205c:	bx	lr
   12060:	sub	sp, sp, #4
   12064:	str	r0, [sp]
   12068:	ldr	r0, [sp]
   1206c:	ldr	r0, [r0, #16]
   12070:	cmp	r0, #0
   12074:	bne	120d8 <__assert_fail@plt+0x10c0>
   12078:	ldr	r0, [sp]
   1207c:	ldrb	r0, [r0, #13]
   12080:	tst	r0, #1
   12084:	bne	120d8 <__assert_fail@plt+0x10c0>
   12088:	movw	r0, #49500	; 0xc15c
   1208c:	movt	r0, #2
   12090:	ldr	r0, [r0]
   12094:	movw	r1, #0
   12098:	cmp	r0, r1
   1209c:	bne	120b4 <__assert_fail@plt+0x109c>
   120a0:	ldr	r0, [sp]
   120a4:	movw	r1, #49500	; 0xc15c
   120a8:	movt	r1, #2
   120ac:	str	r0, [r1]
   120b0:	b	120c8 <__assert_fail@plt+0x10b0>
   120b4:	ldr	r0, [sp]
   120b8:	movw	r1, #49504	; 0xc160
   120bc:	movt	r1, #2
   120c0:	ldr	r1, [r1]
   120c4:	str	r0, [r1, #20]
   120c8:	ldr	r0, [sp]
   120cc:	movw	r1, #49504	; 0xc160
   120d0:	movt	r1, #2
   120d4:	str	r0, [r1]
   120d8:	movw	r0, #0
   120dc:	and	r0, r0, #1
   120e0:	add	sp, sp, #4
   120e4:	bx	lr
   120e8:	push	{fp, lr}
   120ec:	mov	fp, sp
   120f0:	sub	sp, sp, #32
   120f4:	str	r0, [fp, #-8]
   120f8:	ldr	r0, [fp, #-8]
   120fc:	ldr	r0, [r0, #16]
   12100:	cmp	r0, #0
   12104:	bls	122dc <__assert_fail@plt+0x12c4>
   12108:	movw	r0, #49508	; 0xc164
   1210c:	movt	r0, #2
   12110:	ldr	r0, [r0]
   12114:	movw	r1, #0
   12118:	cmp	r0, r1
   1211c:	bne	12134 <__assert_fail@plt+0x111c>
   12120:	ldr	r0, [fp, #-8]
   12124:	movw	r1, #49508	; 0xc164
   12128:	movt	r1, #2
   1212c:	str	r0, [r1]
   12130:	b	122d8 <__assert_fail@plt+0x12c0>
   12134:	ldr	r0, [fp, #-8]
   12138:	add	r0, r0, #24
   1213c:	str	r0, [fp, #-12]
   12140:	ldr	r0, [fp, #-12]
   12144:	ldr	r0, [r0]
   12148:	movw	r1, #0
   1214c:	cmp	r0, r1
   12150:	beq	122d4 <__assert_fail@plt+0x12bc>
   12154:	ldr	r0, [fp, #-12]
   12158:	ldr	r0, [r0]
   1215c:	ldr	r0, [r0]
   12160:	movw	r1, #49508	; 0xc164
   12164:	movt	r1, #2
   12168:	ldr	r1, [r1]
   1216c:	cmp	r0, r1
   12170:	bne	122c0 <__assert_fail@plt+0x12a8>
   12174:	ldr	r0, [fp, #-8]
   12178:	ldr	r0, [r0, #20]
   1217c:	movw	r1, #0
   12180:	cmp	r0, r1
   12184:	beq	122a0 <__assert_fail@plt+0x1288>
   12188:	b	1218c <__assert_fail@plt+0x1174>
   1218c:	movw	r0, #49508	; 0xc164
   12190:	movt	r0, #2
   12194:	ldr	r0, [r0]
   12198:	movw	r1, #0
   1219c:	cmp	r0, r1
   121a0:	beq	12248 <__assert_fail@plt+0x1230>
   121a4:	movw	r0, #49508	; 0xc164
   121a8:	movt	r0, #2
   121ac:	ldr	r1, [r0]
   121b0:	ldr	r1, [r1, #20]
   121b4:	str	r1, [sp, #16]
   121b8:	ldr	r0, [r0]
   121bc:	ldr	r3, [r0]
   121c0:	movw	r0, #0
   121c4:	str	r0, [sp, #4]
   121c8:	ldr	r1, [sp, #4]
   121cc:	movw	r2, #47683	; 0xba43
   121d0:	movt	r2, #1
   121d4:	bl	10ec8 <error@plt>
   121d8:	movw	r0, #49508	; 0xc164
   121dc:	movt	r0, #2
   121e0:	ldr	r0, [r0]
   121e4:	ldr	r1, [fp, #-8]
   121e8:	cmp	r0, r1
   121ec:	bne	12228 <__assert_fail@plt+0x1210>
   121f0:	ldr	r0, [fp, #-12]
   121f4:	ldr	r0, [r0]
   121f8:	str	r0, [sp, #12]
   121fc:	ldr	r0, [sp, #12]
   12200:	ldr	r0, [r0]
   12204:	ldr	r1, [r0, #16]
   12208:	mvn	r2, #0
   1220c:	add	r1, r1, r2
   12210:	str	r1, [r0, #16]
   12214:	ldr	r0, [sp, #12]
   12218:	ldr	r0, [r0, #4]
   1221c:	ldr	r1, [fp, #-12]
   12220:	str	r0, [r1]
   12224:	b	12248 <__assert_fail@plt+0x1230>
   12228:	movw	r0, #49508	; 0xc164
   1222c:	movt	r0, #2
   12230:	ldr	r1, [r0]
   12234:	movw	r2, #0
   12238:	str	r2, [r1, #20]
   1223c:	ldr	r1, [sp, #16]
   12240:	str	r1, [r0]
   12244:	b	1218c <__assert_fail@plt+0x1174>
   12248:	b	1224c <__assert_fail@plt+0x1234>
   1224c:	movw	r0, #49508	; 0xc164
   12250:	movt	r0, #2
   12254:	ldr	r0, [r0]
   12258:	movw	r1, #0
   1225c:	cmp	r0, r1
   12260:	beq	12290 <__assert_fail@plt+0x1278>
   12264:	movw	r0, #49508	; 0xc164
   12268:	movt	r0, #2
   1226c:	ldr	r1, [r0]
   12270:	ldr	r1, [r1, #20]
   12274:	str	r1, [sp, #8]
   12278:	ldr	r1, [r0]
   1227c:	movw	r2, #0
   12280:	str	r2, [r1, #20]
   12284:	ldr	r1, [sp, #8]
   12288:	str	r1, [r0]
   1228c:	b	1224c <__assert_fail@plt+0x1234>
   12290:	movw	r0, #1
   12294:	and	r0, r0, #1
   12298:	strb	r0, [fp, #-1]
   1229c:	b	122e8 <__assert_fail@plt+0x12d0>
   122a0:	movw	r0, #49508	; 0xc164
   122a4:	movt	r0, #2
   122a8:	ldr	r1, [r0]
   122ac:	ldr	r2, [fp, #-8]
   122b0:	str	r1, [r2, #20]
   122b4:	ldr	r1, [fp, #-8]
   122b8:	str	r1, [r0]
   122bc:	b	122d4 <__assert_fail@plt+0x12bc>
   122c0:	ldr	r0, [fp, #-12]
   122c4:	ldr	r0, [r0]
   122c8:	add	r0, r0, #4
   122cc:	str	r0, [fp, #-12]
   122d0:	b	12140 <__assert_fail@plt+0x1128>
   122d4:	b	122d8 <__assert_fail@plt+0x12c0>
   122d8:	b	122dc <__assert_fail@plt+0x12c4>
   122dc:	movw	r0, #0
   122e0:	and	r0, r0, #1
   122e4:	strb	r0, [fp, #-1]
   122e8:	ldrb	r0, [fp, #-1]
   122ec:	and	r0, r0, #1
   122f0:	mov	sp, fp
   122f4:	pop	{fp, pc}
   122f8:	push	{fp, lr}
   122fc:	mov	fp, sp
   12300:	sub	sp, sp, #24
   12304:	str	r0, [fp, #-8]
   12308:	str	r1, [sp, #12]
   1230c:	ldr	r0, [fp, #-8]
   12310:	ldr	r0, [r0, #4]
   12314:	movw	r1, #0
   12318:	cmp	r0, r1
   1231c:	bne	12358 <__assert_fail@plt+0x1340>
   12320:	ldr	r0, [fp, #-8]
   12324:	ldr	r0, [r0, #8]
   12328:	movw	r1, #0
   1232c:	cmp	r0, r1
   12330:	bne	12358 <__assert_fail@plt+0x1340>
   12334:	ldr	r0, [sp, #12]
   12338:	ldr	r1, [fp, #-8]
   1233c:	str	r0, [sp, #8]
   12340:	mov	r0, r1
   12344:	ldr	r1, [sp, #8]
   12348:	blx	r1
   1234c:	and	r0, r0, #1
   12350:	strb	r0, [fp, #-1]
   12354:	b	12418 <__assert_fail@plt+0x1400>
   12358:	ldr	r0, [fp, #-8]
   1235c:	ldr	r0, [r0, #4]
   12360:	movw	r1, #0
   12364:	cmp	r0, r1
   12368:	beq	12398 <__assert_fail@plt+0x1380>
   1236c:	ldr	r0, [fp, #-8]
   12370:	ldr	r0, [r0, #4]
   12374:	ldr	r1, [sp, #12]
   12378:	bl	122f8 <__assert_fail@plt+0x12e0>
   1237c:	tst	r0, #1
   12380:	beq	12394 <__assert_fail@plt+0x137c>
   12384:	movw	r0, #1
   12388:	and	r0, r0, #1
   1238c:	strb	r0, [fp, #-1]
   12390:	b	12418 <__assert_fail@plt+0x1400>
   12394:	b	12398 <__assert_fail@plt+0x1380>
   12398:	ldr	r0, [sp, #12]
   1239c:	ldr	r1, [fp, #-8]
   123a0:	str	r0, [sp, #4]
   123a4:	mov	r0, r1
   123a8:	ldr	r1, [sp, #4]
   123ac:	blx	r1
   123b0:	tst	r0, #1
   123b4:	beq	123c8 <__assert_fail@plt+0x13b0>
   123b8:	movw	r0, #1
   123bc:	and	r0, r0, #1
   123c0:	strb	r0, [fp, #-1]
   123c4:	b	12418 <__assert_fail@plt+0x1400>
   123c8:	ldr	r0, [fp, #-8]
   123cc:	ldr	r0, [r0, #8]
   123d0:	movw	r1, #0
   123d4:	cmp	r0, r1
   123d8:	beq	12408 <__assert_fail@plt+0x13f0>
   123dc:	ldr	r0, [fp, #-8]
   123e0:	ldr	r0, [r0, #8]
   123e4:	ldr	r1, [sp, #12]
   123e8:	bl	122f8 <__assert_fail@plt+0x12e0>
   123ec:	tst	r0, #1
   123f0:	beq	12404 <__assert_fail@plt+0x13ec>
   123f4:	movw	r0, #1
   123f8:	and	r0, r0, #1
   123fc:	strb	r0, [fp, #-1]
   12400:	b	12418 <__assert_fail@plt+0x1400>
   12404:	b	12408 <__assert_fail@plt+0x13f0>
   12408:	b	1240c <__assert_fail@plt+0x13f4>
   1240c:	movw	r0, #0
   12410:	and	r0, r0, #1
   12414:	strb	r0, [fp, #-1]
   12418:	ldrb	r0, [fp, #-1]
   1241c:	and	r0, r0, #1
   12420:	mov	sp, fp
   12424:	pop	{fp, pc}
   12428:	sub	sp, sp, #4
   1242c:	str	r0, [sp]
   12430:	ldr	r0, [sp]
   12434:	movw	r1, #49512	; 0xc168
   12438:	movt	r1, #2
   1243c:	str	r0, [r1]
   12440:	add	sp, sp, #4
   12444:	bx	lr
   12448:	sub	sp, sp, #4
   1244c:	and	r0, r0, #1
   12450:	strb	r0, [sp, #3]
   12454:	ldrb	r0, [sp, #3]
   12458:	and	r0, r0, #1
   1245c:	movw	r1, #49516	; 0xc16c
   12460:	movt	r1, #2
   12464:	strb	r0, [r1]
   12468:	add	sp, sp, #4
   1246c:	bx	lr
   12470:	push	{fp, lr}
   12474:	mov	fp, sp
   12478:	sub	sp, sp, #24
   1247c:	movw	r0, #49484	; 0xc14c
   12480:	movt	r0, #2
   12484:	ldr	r0, [r0]
   12488:	bl	19390 <__assert_fail@plt+0x8378>
   1248c:	cmp	r0, #0
   12490:	beq	12560 <__assert_fail@plt+0x1548>
   12494:	movw	r0, #49516	; 0xc16c
   12498:	movt	r0, #2
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	beq	124b8 <__assert_fail@plt+0x14a0>
   124a8:	bl	10f70 <__errno_location@plt>
   124ac:	ldr	r0, [r0]
   124b0:	cmp	r0, #32
   124b4:	beq	12560 <__assert_fail@plt+0x1548>
   124b8:	movw	r0, #47667	; 0xba33
   124bc:	movt	r0, #1
   124c0:	bl	10f4c <gettext@plt>
   124c4:	str	r0, [fp, #-4]
   124c8:	movw	r0, #49512	; 0xc168
   124cc:	movt	r0, #2
   124d0:	ldr	r0, [r0]
   124d4:	movw	lr, #0
   124d8:	cmp	r0, lr
   124dc:	beq	12534 <__assert_fail@plt+0x151c>
   124e0:	bl	10f70 <__errno_location@plt>
   124e4:	ldr	r1, [r0]
   124e8:	movw	r0, #49512	; 0xc168
   124ec:	movt	r0, #2
   124f0:	ldr	r0, [r0]
   124f4:	str	r1, [fp, #-8]
   124f8:	bl	151a4 <__assert_fail@plt+0x418c>
   124fc:	ldr	r1, [fp, #-4]
   12500:	movw	lr, #0
   12504:	str	r0, [sp, #12]
   12508:	mov	r0, lr
   1250c:	ldr	lr, [fp, #-8]
   12510:	str	r1, [sp, #8]
   12514:	mov	r1, lr
   12518:	movw	r2, #47679	; 0xba3f
   1251c:	movt	r2, #1
   12520:	ldr	r3, [sp, #12]
   12524:	ldr	ip, [sp, #8]
   12528:	str	ip, [sp]
   1252c:	bl	10ec8 <error@plt>
   12530:	b	12550 <__assert_fail@plt+0x1538>
   12534:	bl	10f70 <__errno_location@plt>
   12538:	ldr	r1, [r0]
   1253c:	ldr	r3, [fp, #-4]
   12540:	movw	r0, #0
   12544:	movw	r2, #47683	; 0xba43
   12548:	movt	r2, #1
   1254c:	bl	10ec8 <error@plt>
   12550:	movw	r0, #49384	; 0xc0e8
   12554:	movt	r0, #2
   12558:	ldr	r0, [r0]
   1255c:	bl	10e20 <_exit@plt>
   12560:	movw	r0, #49472	; 0xc140
   12564:	movt	r0, #2
   12568:	ldr	r0, [r0]
   1256c:	bl	19390 <__assert_fail@plt+0x8378>
   12570:	cmp	r0, #0
   12574:	beq	12588 <__assert_fail@plt+0x1570>
   12578:	movw	r0, #49384	; 0xc0e8
   1257c:	movt	r0, #2
   12580:	ldr	r0, [r0]
   12584:	bl	10e20 <_exit@plt>
   12588:	mov	sp, fp
   1258c:	pop	{fp, pc}
   12590:	push	{r4, r5, fp, lr}
   12594:	add	fp, sp, #8
   12598:	sub	sp, sp, #48	; 0x30
   1259c:	ldr	r1, [fp, #12]
   125a0:	ldr	ip, [fp, #8]
   125a4:	ldr	lr, [fp, #16]
   125a8:	str	r0, [fp, #-12]
   125ac:	str	r3, [fp, #-20]	; 0xffffffec
   125b0:	str	r2, [fp, #-24]	; 0xffffffe8
   125b4:	str	r1, [sp, #28]
   125b8:	str	ip, [sp, #24]
   125bc:	ldr	r0, [fp, #-12]
   125c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   125c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   125c8:	ldr	r1, [sp, #24]
   125cc:	ldr	ip, [sp, #28]
   125d0:	ldr	r4, [fp, #16]
   125d4:	mov	r5, sp
   125d8:	str	r4, [r5, #8]
   125dc:	str	ip, [r5, #4]
   125e0:	str	r1, [r5]
   125e4:	str	lr, [sp, #20]
   125e8:	bl	10df0 <posix_fadvise64@plt>
   125ec:	str	r0, [sp, #16]
   125f0:	sub	sp, fp, #8
   125f4:	pop	{r4, r5, fp, pc}
   125f8:	push	{fp, lr}
   125fc:	mov	fp, sp
   12600:	sub	sp, sp, #24
   12604:	str	r0, [fp, #-4]
   12608:	str	r1, [fp, #-8]
   1260c:	ldr	r0, [fp, #-4]
   12610:	movw	r1, #0
   12614:	cmp	r0, r1
   12618:	beq	12648 <__assert_fail@plt+0x1630>
   1261c:	ldr	r0, [fp, #-4]
   12620:	bl	10f94 <fileno@plt>
   12624:	ldr	lr, [fp, #-8]
   12628:	mov	r1, sp
   1262c:	str	lr, [r1, #8]
   12630:	mov	lr, #0
   12634:	str	lr, [r1, #4]
   12638:	str	lr, [r1]
   1263c:	mov	r2, lr
   12640:	mov	r3, lr
   12644:	bl	12590 <__assert_fail@plt+0x1578>
   12648:	mov	sp, fp
   1264c:	pop	{fp, pc}
   12650:	push	{fp, lr}
   12654:	mov	fp, sp
   12658:	sub	sp, sp, #32
   1265c:	str	r0, [fp, #-8]
   12660:	movw	r0, #0
   12664:	str	r0, [fp, #-12]
   12668:	str	r0, [sp, #12]
   1266c:	ldr	r0, [fp, #-8]
   12670:	bl	10f94 <fileno@plt>
   12674:	str	r0, [sp, #16]
   12678:	ldr	r0, [sp, #16]
   1267c:	cmp	r0, #0
   12680:	bge	12694 <__assert_fail@plt+0x167c>
   12684:	ldr	r0, [fp, #-8]
   12688:	bl	10fa0 <fclose@plt>
   1268c:	str	r0, [fp, #-4]
   12690:	b	12730 <__assert_fail@plt+0x1718>
   12694:	ldr	r0, [fp, #-8]
   12698:	bl	10f04 <__freading@plt>
   1269c:	cmp	r0, #0
   126a0:	beq	126d8 <__assert_fail@plt+0x16c0>
   126a4:	ldr	r0, [fp, #-8]
   126a8:	bl	10f94 <fileno@plt>
   126ac:	mov	lr, sp
   126b0:	mov	r1, #1
   126b4:	str	r1, [lr]
   126b8:	mov	r1, #0
   126bc:	mov	r2, r1
   126c0:	mov	r3, r1
   126c4:	bl	10e8c <lseek64@plt>
   126c8:	and	r0, r0, r1
   126cc:	cmn	r0, #1
   126d0:	beq	126f4 <__assert_fail@plt+0x16dc>
   126d4:	b	126d8 <__assert_fail@plt+0x16c0>
   126d8:	ldr	r0, [fp, #-8]
   126dc:	bl	1273c <__assert_fail@plt+0x1724>
   126e0:	cmp	r0, #0
   126e4:	beq	126f4 <__assert_fail@plt+0x16dc>
   126e8:	bl	10f70 <__errno_location@plt>
   126ec:	ldr	r0, [r0]
   126f0:	str	r0, [fp, #-12]
   126f4:	ldr	r0, [fp, #-8]
   126f8:	bl	10fa0 <fclose@plt>
   126fc:	str	r0, [sp, #12]
   12700:	ldr	r0, [fp, #-12]
   12704:	cmp	r0, #0
   12708:	beq	12728 <__assert_fail@plt+0x1710>
   1270c:	ldr	r0, [fp, #-12]
   12710:	str	r0, [sp, #8]
   12714:	bl	10f70 <__errno_location@plt>
   12718:	ldr	lr, [sp, #8]
   1271c:	str	lr, [r0]
   12720:	mvn	r0, #0
   12724:	str	r0, [sp, #12]
   12728:	ldr	r0, [sp, #12]
   1272c:	str	r0, [fp, #-4]
   12730:	ldr	r0, [fp, #-4]
   12734:	mov	sp, fp
   12738:	pop	{fp, pc}
   1273c:	push	{fp, lr}
   12740:	mov	fp, sp
   12744:	sub	sp, sp, #8
   12748:	str	r0, [sp]
   1274c:	ldr	r0, [sp]
   12750:	movw	r1, #0
   12754:	cmp	r0, r1
   12758:	beq	1276c <__assert_fail@plt+0x1754>
   1275c:	ldr	r0, [sp]
   12760:	bl	10f04 <__freading@plt>
   12764:	cmp	r0, #0
   12768:	bne	1277c <__assert_fail@plt+0x1764>
   1276c:	ldr	r0, [sp]
   12770:	bl	10e08 <fflush@plt>
   12774:	str	r0, [sp, #4]
   12778:	b	12790 <__assert_fail@plt+0x1778>
   1277c:	ldr	r0, [sp]
   12780:	bl	1279c <__assert_fail@plt+0x1784>
   12784:	ldr	r0, [sp]
   12788:	bl	10e08 <fflush@plt>
   1278c:	str	r0, [sp, #4]
   12790:	ldr	r0, [sp, #4]
   12794:	mov	sp, fp
   12798:	pop	{fp, pc}
   1279c:	push	{fp, lr}
   127a0:	mov	fp, sp
   127a4:	sub	sp, sp, #16
   127a8:	str	r0, [fp, #-4]
   127ac:	ldr	r0, [fp, #-4]
   127b0:	ldr	r0, [r0]
   127b4:	and	r0, r0, #256	; 0x100
   127b8:	cmp	r0, #0
   127bc:	beq	127e4 <__assert_fail@plt+0x17cc>
   127c0:	ldr	r0, [fp, #-4]
   127c4:	mov	r1, sp
   127c8:	mov	r2, #1
   127cc:	str	r2, [r1]
   127d0:	mov	r1, #0
   127d4:	mov	r2, r1
   127d8:	mov	r3, r1
   127dc:	bl	12a60 <__assert_fail@plt+0x1a48>
   127e0:	str	r0, [sp, #8]
   127e4:	mov	sp, fp
   127e8:	pop	{fp, pc}
   127ec:	push	{fp, lr}
   127f0:	mov	fp, sp
   127f4:	sub	sp, sp, #56	; 0x38
   127f8:	str	r0, [fp, #-4]
   127fc:	str	r1, [fp, #-8]
   12800:	str	r2, [fp, #-12]
   12804:	mov	r0, #0
   12808:	strb	r0, [fp, #-13]
   1280c:	strb	r0, [fp, #-14]
   12810:	strb	r0, [fp, #-15]
   12814:	ldr	r0, [fp, #-12]
   12818:	bl	10f94 <fileno@plt>
   1281c:	mov	r1, r0
   12820:	cmp	r0, #0
   12824:	str	r1, [fp, #-24]	; 0xffffffe8
   12828:	beq	128bc <__assert_fail@plt+0x18a4>
   1282c:	b	12830 <__assert_fail@plt+0x1818>
   12830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12834:	cmp	r0, #1
   12838:	beq	12898 <__assert_fail@plt+0x1880>
   1283c:	b	12840 <__assert_fail@plt+0x1828>
   12840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12844:	cmp	r0, #2
   12848:	beq	12874 <__assert_fail@plt+0x185c>
   1284c:	b	12850 <__assert_fail@plt+0x1838>
   12850:	movw	r0, #2
   12854:	str	r0, [sp, #28]
   12858:	ldr	r1, [sp, #28]
   1285c:	bl	10e5c <dup2@plt>
   12860:	cmp	r0, #2
   12864:	beq	12870 <__assert_fail@plt+0x1858>
   12868:	movw	r0, #1
   1286c:	strb	r0, [fp, #-15]
   12870:	b	12874 <__assert_fail@plt+0x185c>
   12874:	movw	r0, #1
   12878:	str	r0, [sp, #24]
   1287c:	ldr	r1, [sp, #24]
   12880:	bl	10e5c <dup2@plt>
   12884:	cmp	r0, #1
   12888:	beq	12894 <__assert_fail@plt+0x187c>
   1288c:	movw	r0, #1
   12890:	strb	r0, [fp, #-14]
   12894:	b	12898 <__assert_fail@plt+0x1880>
   12898:	movw	r0, #0
   1289c:	str	r0, [sp, #20]
   128a0:	ldr	r1, [sp, #20]
   128a4:	bl	10e5c <dup2@plt>
   128a8:	cmp	r0, #0
   128ac:	beq	128b8 <__assert_fail@plt+0x18a0>
   128b0:	movw	r0, #1
   128b4:	strb	r0, [fp, #-13]
   128b8:	b	128bc <__assert_fail@plt+0x18a4>
   128bc:	b	128c0 <__assert_fail@plt+0x18a8>
   128c0:	ldrb	r0, [fp, #-13]
   128c4:	tst	r0, #1
   128c8:	beq	128e8 <__assert_fail@plt+0x18d0>
   128cc:	movw	r0, #0
   128d0:	bl	129d8 <__assert_fail@plt+0x19c0>
   128d4:	tst	r0, #1
   128d8:	bne	128e8 <__assert_fail@plt+0x18d0>
   128dc:	movw	r0, #0
   128e0:	str	r0, [fp, #-12]
   128e4:	b	12954 <__assert_fail@plt+0x193c>
   128e8:	ldrb	r0, [fp, #-14]
   128ec:	tst	r0, #1
   128f0:	beq	12910 <__assert_fail@plt+0x18f8>
   128f4:	movw	r0, #1
   128f8:	bl	129d8 <__assert_fail@plt+0x19c0>
   128fc:	tst	r0, #1
   12900:	bne	12910 <__assert_fail@plt+0x18f8>
   12904:	movw	r0, #0
   12908:	str	r0, [fp, #-12]
   1290c:	b	12950 <__assert_fail@plt+0x1938>
   12910:	ldrb	r0, [fp, #-15]
   12914:	tst	r0, #1
   12918:	beq	12938 <__assert_fail@plt+0x1920>
   1291c:	movw	r0, #2
   12920:	bl	129d8 <__assert_fail@plt+0x19c0>
   12924:	tst	r0, #1
   12928:	bne	12938 <__assert_fail@plt+0x1920>
   1292c:	movw	r0, #0
   12930:	str	r0, [fp, #-12]
   12934:	b	1294c <__assert_fail@plt+0x1934>
   12938:	ldr	r0, [fp, #-4]
   1293c:	ldr	r1, [fp, #-8]
   12940:	ldr	r2, [fp, #-12]
   12944:	bl	10f1c <freopen64@plt>
   12948:	str	r0, [fp, #-12]
   1294c:	b	12950 <__assert_fail@plt+0x1938>
   12950:	b	12954 <__assert_fail@plt+0x193c>
   12954:	bl	10f70 <__errno_location@plt>
   12958:	ldr	r0, [r0]
   1295c:	str	r0, [fp, #-20]	; 0xffffffec
   12960:	ldrb	r0, [fp, #-15]
   12964:	tst	r0, #1
   12968:	beq	12978 <__assert_fail@plt+0x1960>
   1296c:	movw	r0, #2
   12970:	bl	1100c <close@plt>
   12974:	str	r0, [sp, #16]
   12978:	ldrb	r0, [fp, #-14]
   1297c:	tst	r0, #1
   12980:	beq	12990 <__assert_fail@plt+0x1978>
   12984:	movw	r0, #1
   12988:	bl	1100c <close@plt>
   1298c:	str	r0, [sp, #12]
   12990:	ldrb	r0, [fp, #-13]
   12994:	tst	r0, #1
   12998:	beq	129a8 <__assert_fail@plt+0x1990>
   1299c:	movw	r0, #0
   129a0:	bl	1100c <close@plt>
   129a4:	str	r0, [sp, #8]
   129a8:	ldr	r0, [fp, #-12]
   129ac:	movw	r1, #0
   129b0:	cmp	r0, r1
   129b4:	bne	129cc <__assert_fail@plt+0x19b4>
   129b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   129bc:	str	r0, [sp, #4]
   129c0:	bl	10f70 <__errno_location@plt>
   129c4:	ldr	lr, [sp, #4]
   129c8:	str	lr, [r0]
   129cc:	ldr	r0, [fp, #-12]
   129d0:	mov	sp, fp
   129d4:	pop	{fp, pc}
   129d8:	push	{fp, lr}
   129dc:	mov	fp, sp
   129e0:	sub	sp, sp, #16
   129e4:	str	r0, [sp, #8]
   129e8:	movw	r0, #47686	; 0xba46
   129ec:	movt	r0, #1
   129f0:	movw	r1, #0
   129f4:	bl	10ed4 <open64@plt>
   129f8:	str	r0, [sp, #4]
   129fc:	ldr	r0, [sp, #4]
   12a00:	ldr	r1, [sp, #8]
   12a04:	cmp	r0, r1
   12a08:	beq	12a44 <__assert_fail@plt+0x1a2c>
   12a0c:	ldr	r0, [sp, #4]
   12a10:	movw	r1, #0
   12a14:	cmp	r1, r0
   12a18:	bgt	12a34 <__assert_fail@plt+0x1a1c>
   12a1c:	ldr	r0, [sp, #4]
   12a20:	bl	1100c <close@plt>
   12a24:	str	r0, [sp]
   12a28:	bl	10f70 <__errno_location@plt>
   12a2c:	movw	lr, #9
   12a30:	str	lr, [r0]
   12a34:	movw	r0, #0
   12a38:	and	r0, r0, #1
   12a3c:	strb	r0, [fp, #-1]
   12a40:	b	12a50 <__assert_fail@plt+0x1a38>
   12a44:	movw	r0, #1
   12a48:	and	r0, r0, #1
   12a4c:	strb	r0, [fp, #-1]
   12a50:	ldrb	r0, [fp, #-1]
   12a54:	and	r0, r0, #1
   12a58:	mov	sp, fp
   12a5c:	pop	{fp, pc}
   12a60:	push	{fp, lr}
   12a64:	mov	fp, sp
   12a68:	sub	sp, sp, #32
   12a6c:	ldr	r1, [fp, #8]
   12a70:	str	r0, [fp, #-8]
   12a74:	str	r3, [sp, #20]
   12a78:	str	r2, [sp, #16]
   12a7c:	ldr	r0, [fp, #-8]
   12a80:	ldr	r0, [r0, #8]
   12a84:	ldr	r2, [fp, #-8]
   12a88:	ldr	r2, [r2, #4]
   12a8c:	cmp	r0, r2
   12a90:	str	r1, [sp, #4]
   12a94:	bne	12b40 <__assert_fail@plt+0x1b28>
   12a98:	ldr	r0, [fp, #-8]
   12a9c:	ldr	r0, [r0, #20]
   12aa0:	ldr	r1, [fp, #-8]
   12aa4:	ldr	r1, [r1, #16]
   12aa8:	cmp	r0, r1
   12aac:	bne	12b40 <__assert_fail@plt+0x1b28>
   12ab0:	ldr	r0, [fp, #-8]
   12ab4:	ldr	r0, [r0, #36]	; 0x24
   12ab8:	movw	r1, #0
   12abc:	cmp	r0, r1
   12ac0:	bne	12b40 <__assert_fail@plt+0x1b28>
   12ac4:	ldr	r0, [fp, #-8]
   12ac8:	bl	10f94 <fileno@plt>
   12acc:	ldr	r2, [sp, #16]
   12ad0:	ldr	r3, [sp, #20]
   12ad4:	ldr	lr, [fp, #8]
   12ad8:	mov	r1, sp
   12adc:	str	lr, [r1]
   12ae0:	bl	10e8c <lseek64@plt>
   12ae4:	str	r1, [sp, #12]
   12ae8:	str	r0, [sp, #8]
   12aec:	ldr	r0, [sp, #8]
   12af0:	ldr	r1, [sp, #12]
   12af4:	and	r0, r0, r1
   12af8:	cmn	r0, #1
   12afc:	bne	12b10 <__assert_fail@plt+0x1af8>
   12b00:	b	12b04 <__assert_fail@plt+0x1aec>
   12b04:	mvn	r0, #0
   12b08:	str	r0, [fp, #-4]
   12b0c:	b	12b60 <__assert_fail@plt+0x1b48>
   12b10:	ldr	r0, [fp, #-8]
   12b14:	ldr	r1, [r0]
   12b18:	bic	r1, r1, #16
   12b1c:	str	r1, [r0]
   12b20:	ldr	r0, [sp, #8]
   12b24:	ldr	r1, [sp, #12]
   12b28:	ldr	r2, [fp, #-8]
   12b2c:	str	r1, [r2, #84]	; 0x54
   12b30:	str	r0, [r2, #80]	; 0x50
   12b34:	movw	r0, #0
   12b38:	str	r0, [fp, #-4]
   12b3c:	b	12b60 <__assert_fail@plt+0x1b48>
   12b40:	ldr	r0, [fp, #-8]
   12b44:	ldr	r2, [sp, #16]
   12b48:	ldr	r3, [sp, #20]
   12b4c:	ldr	r1, [fp, #8]
   12b50:	mov	ip, sp
   12b54:	str	r1, [ip]
   12b58:	bl	10fac <fseeko64@plt>
   12b5c:	str	r0, [fp, #-4]
   12b60:	ldr	r0, [fp, #-4]
   12b64:	mov	sp, fp
   12b68:	pop	{fp, pc}
   12b6c:	push	{fp, lr}
   12b70:	mov	fp, sp
   12b74:	sub	sp, sp, #48	; 0x30
   12b78:	ldr	ip, [fp, #12]
   12b7c:	ldr	lr, [fp, #8]
   12b80:	str	r0, [fp, #-4]
   12b84:	str	r1, [fp, #-8]
   12b88:	str	r2, [fp, #-12]
   12b8c:	str	r3, [fp, #-16]
   12b90:	movw	r0, #49488	; 0xc150
   12b94:	movt	r0, #2
   12b98:	ldr	r1, [r0]
   12b9c:	str	r1, [sp, #24]
   12ba0:	movw	r1, #0
   12ba4:	str	r1, [r0]
   12ba8:	ldr	r0, [fp, #-4]
   12bac:	cmp	r0, #2
   12bb0:	str	lr, [sp, #16]
   12bb4:	str	ip, [sp, #12]
   12bb8:	bne	12c6c <__assert_fail@plt+0x1c54>
   12bbc:	ldr	r0, [fp, #-4]
   12bc0:	ldr	r1, [fp, #-8]
   12bc4:	movw	r2, #47696	; 0xba50
   12bc8:	movt	r2, #1
   12bcc:	movw	r3, #47712	; 0xba60
   12bd0:	movt	r3, #1
   12bd4:	movw	ip, #0
   12bd8:	str	ip, [sp]
   12bdc:	bl	10f28 <getopt_long@plt>
   12be0:	str	r0, [fp, #-20]	; 0xffffffec
   12be4:	cmn	r0, #1
   12be8:	beq	12c6c <__assert_fail@plt+0x1c54>
   12bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bf0:	cmp	r0, #104	; 0x68
   12bf4:	str	r0, [sp, #8]
   12bf8:	beq	12c10 <__assert_fail@plt+0x1bf8>
   12bfc:	b	12c00 <__assert_fail@plt+0x1be8>
   12c00:	ldr	r0, [sp, #8]
   12c04:	cmp	r0, #118	; 0x76
   12c08:	beq	12c2c <__assert_fail@plt+0x1c14>
   12c0c:	b	12c64 <__assert_fail@plt+0x1c4c>
   12c10:	ldr	r0, [fp, #12]
   12c14:	movw	r1, #0
   12c18:	str	r0, [sp, #4]
   12c1c:	mov	r0, r1
   12c20:	ldr	r1, [sp, #4]
   12c24:	blx	r1
   12c28:	b	12c68 <__assert_fail@plt+0x1c50>
   12c2c:	add	r0, fp, #16
   12c30:	str	r0, [sp, #20]
   12c34:	movw	r0, #49484	; 0xc14c
   12c38:	movt	r0, #2
   12c3c:	ldr	r0, [r0]
   12c40:	ldr	r1, [fp, #-12]
   12c44:	ldr	r2, [fp, #-16]
   12c48:	ldr	r3, [fp, #8]
   12c4c:	ldr	ip, [sp, #20]
   12c50:	mov	lr, sp
   12c54:	str	ip, [lr]
   12c58:	bl	16094 <__assert_fail@plt+0x507c>
   12c5c:	movw	r0, #0
   12c60:	bl	10f40 <exit@plt>
   12c64:	b	12c68 <__assert_fail@plt+0x1c50>
   12c68:	b	12c6c <__assert_fail@plt+0x1c54>
   12c6c:	ldr	r0, [sp, #24]
   12c70:	movw	r1, #49488	; 0xc150
   12c74:	movt	r1, #2
   12c78:	str	r0, [r1]
   12c7c:	movw	r0, #49464	; 0xc138
   12c80:	movt	r0, #2
   12c84:	movw	r1, #0
   12c88:	str	r1, [r0]
   12c8c:	mov	sp, fp
   12c90:	pop	{fp, pc}
   12c94:	push	{r4, sl, fp, lr}
   12c98:	add	fp, sp, #8
   12c9c:	sub	sp, sp, #64	; 0x40
   12ca0:	ldr	ip, [fp, #16]
   12ca4:	ldr	lr, [fp, #12]
   12ca8:	ldr	r4, [fp, #8]
   12cac:	str	r0, [fp, #-12]
   12cb0:	str	r1, [fp, #-16]
   12cb4:	str	r2, [fp, #-20]	; 0xffffffec
   12cb8:	str	r3, [fp, #-24]	; 0xffffffe8
   12cbc:	and	r0, lr, #1
   12cc0:	strb	r0, [fp, #-25]	; 0xffffffe7
   12cc4:	movw	r0, #49488	; 0xc150
   12cc8:	movt	r0, #2
   12ccc:	ldr	r1, [r0]
   12cd0:	str	r1, [sp, #36]	; 0x24
   12cd4:	movw	r1, #1
   12cd8:	str	r1, [r0]
   12cdc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12ce0:	tst	r0, #1
   12ce4:	movw	r0, #47696	; 0xba50
   12ce8:	movt	r0, #1
   12cec:	movw	r1, #47299	; 0xb8c3
   12cf0:	movt	r1, #1
   12cf4:	movne	r0, r1
   12cf8:	str	r0, [sp, #32]
   12cfc:	ldr	r0, [fp, #-12]
   12d00:	ldr	r1, [fp, #-16]
   12d04:	ldr	r2, [sp, #32]
   12d08:	movw	r3, #47712	; 0xba60
   12d0c:	movt	r3, #1
   12d10:	movw	lr, #0
   12d14:	str	lr, [sp]
   12d18:	str	r4, [sp, #24]
   12d1c:	str	ip, [sp, #20]
   12d20:	bl	10f28 <getopt_long@plt>
   12d24:	str	r0, [fp, #-32]	; 0xffffffe0
   12d28:	cmn	r0, #1
   12d2c:	beq	12dcc <__assert_fail@plt+0x1db4>
   12d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d34:	cmp	r0, #104	; 0x68
   12d38:	str	r0, [sp, #16]
   12d3c:	beq	12d54 <__assert_fail@plt+0x1d3c>
   12d40:	b	12d44 <__assert_fail@plt+0x1d2c>
   12d44:	ldr	r0, [sp, #16]
   12d48:	cmp	r0, #118	; 0x76
   12d4c:	beq	12d70 <__assert_fail@plt+0x1d58>
   12d50:	b	12da8 <__assert_fail@plt+0x1d90>
   12d54:	ldr	r0, [fp, #16]
   12d58:	movw	r1, #0
   12d5c:	str	r0, [sp, #12]
   12d60:	mov	r0, r1
   12d64:	ldr	r1, [sp, #12]
   12d68:	blx	r1
   12d6c:	b	12dc8 <__assert_fail@plt+0x1db0>
   12d70:	add	r0, fp, #20
   12d74:	str	r0, [sp, #28]
   12d78:	movw	r0, #49484	; 0xc14c
   12d7c:	movt	r0, #2
   12d80:	ldr	r0, [r0]
   12d84:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d8c:	ldr	r3, [fp, #8]
   12d90:	ldr	ip, [sp, #28]
   12d94:	mov	lr, sp
   12d98:	str	ip, [lr]
   12d9c:	bl	16094 <__assert_fail@plt+0x507c>
   12da0:	movw	r0, #0
   12da4:	bl	10f40 <exit@plt>
   12da8:	ldr	r0, [fp, #16]
   12dac:	movw	r1, #49384	; 0xc0e8
   12db0:	movt	r1, #2
   12db4:	ldr	r1, [r1]
   12db8:	str	r0, [sp, #8]
   12dbc:	mov	r0, r1
   12dc0:	ldr	r1, [sp, #8]
   12dc4:	blx	r1
   12dc8:	b	12dcc <__assert_fail@plt+0x1db4>
   12dcc:	ldr	r0, [sp, #36]	; 0x24
   12dd0:	movw	r1, #49488	; 0xc150
   12dd4:	movt	r1, #2
   12dd8:	str	r0, [r1]
   12ddc:	sub	sp, fp, #8
   12de0:	pop	{r4, sl, fp, pc}
   12de4:	push	{fp, lr}
   12de8:	mov	fp, sp
   12dec:	sub	sp, sp, #24
   12df0:	str	r0, [fp, #-4]
   12df4:	ldr	r0, [fp, #-4]
   12df8:	movw	r1, #0
   12dfc:	cmp	r0, r1
   12e00:	bne	12e24 <__assert_fail@plt+0x1e0c>
   12e04:	movw	r0, #49472	; 0xc140
   12e08:	movt	r0, #2
   12e0c:	ldr	r1, [r0]
   12e10:	movw	r0, #47760	; 0xba90
   12e14:	movt	r0, #1
   12e18:	bl	10fe8 <fputs@plt>
   12e1c:	str	r0, [sp, #8]
   12e20:	bl	11000 <abort@plt>
   12e24:	ldr	r0, [fp, #-4]
   12e28:	movw	r1, #47	; 0x2f
   12e2c:	bl	10fc4 <strrchr@plt>
   12e30:	str	r0, [fp, #-8]
   12e34:	ldr	r0, [fp, #-8]
   12e38:	movw	r1, #0
   12e3c:	cmp	r0, r1
   12e40:	beq	12e54 <__assert_fail@plt+0x1e3c>
   12e44:	ldr	r0, [fp, #-8]
   12e48:	add	r0, r0, #1
   12e4c:	str	r0, [sp, #4]
   12e50:	b	12e5c <__assert_fail@plt+0x1e44>
   12e54:	ldr	r0, [fp, #-4]
   12e58:	str	r0, [sp, #4]
   12e5c:	ldr	r0, [sp, #4]
   12e60:	str	r0, [sp, #12]
   12e64:	ldr	r0, [sp, #12]
   12e68:	ldr	r1, [fp, #-4]
   12e6c:	sub	r0, r0, r1
   12e70:	cmp	r0, #7
   12e74:	blt	12ee0 <__assert_fail@plt+0x1ec8>
   12e78:	ldr	r0, [sp, #12]
   12e7c:	mvn	r1, #6
   12e80:	add	r0, r0, r1
   12e84:	movw	r1, #47816	; 0xbac8
   12e88:	movt	r1, #1
   12e8c:	movw	r2, #7
   12e90:	bl	10ff4 <strncmp@plt>
   12e94:	cmp	r0, #0
   12e98:	bne	12ee0 <__assert_fail@plt+0x1ec8>
   12e9c:	ldr	r0, [sp, #12]
   12ea0:	str	r0, [fp, #-4]
   12ea4:	ldr	r0, [sp, #12]
   12ea8:	movw	r1, #47824	; 0xbad0
   12eac:	movt	r1, #1
   12eb0:	movw	r2, #3
   12eb4:	bl	10ff4 <strncmp@plt>
   12eb8:	cmp	r0, #0
   12ebc:	bne	12edc <__assert_fail@plt+0x1ec4>
   12ec0:	ldr	r0, [sp, #12]
   12ec4:	add	r0, r0, #3
   12ec8:	str	r0, [fp, #-4]
   12ecc:	ldr	r0, [fp, #-4]
   12ed0:	movw	r1, #49456	; 0xc130
   12ed4:	movt	r1, #2
   12ed8:	str	r0, [r1]
   12edc:	b	12ee0 <__assert_fail@plt+0x1ec8>
   12ee0:	ldr	r0, [fp, #-4]
   12ee4:	movw	r1, #49520	; 0xc170
   12ee8:	movt	r1, #2
   12eec:	str	r0, [r1]
   12ef0:	ldr	r0, [fp, #-4]
   12ef4:	movw	r1, #49460	; 0xc134
   12ef8:	movt	r1, #2
   12efc:	str	r0, [r1]
   12f00:	mov	sp, fp
   12f04:	pop	{fp, pc}
   12f08:	push	{fp, lr}
   12f0c:	mov	fp, sp
   12f10:	sub	sp, sp, #24
   12f14:	str	r0, [fp, #-4]
   12f18:	bl	10f70 <__errno_location@plt>
   12f1c:	ldr	r0, [r0]
   12f20:	str	r0, [fp, #-8]
   12f24:	ldr	r0, [fp, #-4]
   12f28:	movw	lr, #0
   12f2c:	cmp	r0, lr
   12f30:	beq	12f40 <__assert_fail@plt+0x1f28>
   12f34:	ldr	r0, [fp, #-4]
   12f38:	str	r0, [sp, #8]
   12f3c:	b	12f50 <__assert_fail@plt+0x1f38>
   12f40:	movw	r0, #49524	; 0xc174
   12f44:	movt	r0, #2
   12f48:	str	r0, [sp, #8]
   12f4c:	b	12f50 <__assert_fail@plt+0x1f38>
   12f50:	ldr	r0, [sp, #8]
   12f54:	movw	r1, #48	; 0x30
   12f58:	bl	18fd8 <__assert_fail@plt+0x7fc0>
   12f5c:	str	r0, [sp, #12]
   12f60:	ldr	r0, [fp, #-8]
   12f64:	str	r0, [sp, #4]
   12f68:	bl	10f70 <__errno_location@plt>
   12f6c:	ldr	r1, [sp, #4]
   12f70:	str	r1, [r0]
   12f74:	ldr	r0, [sp, #12]
   12f78:	mov	sp, fp
   12f7c:	pop	{fp, pc}
   12f80:	sub	sp, sp, #8
   12f84:	str	r0, [sp, #4]
   12f88:	ldr	r0, [sp, #4]
   12f8c:	movw	r1, #0
   12f90:	cmp	r0, r1
   12f94:	beq	12fa4 <__assert_fail@plt+0x1f8c>
   12f98:	ldr	r0, [sp, #4]
   12f9c:	str	r0, [sp]
   12fa0:	b	12fb4 <__assert_fail@plt+0x1f9c>
   12fa4:	movw	r0, #49524	; 0xc174
   12fa8:	movt	r0, #2
   12fac:	str	r0, [sp]
   12fb0:	b	12fb4 <__assert_fail@plt+0x1f9c>
   12fb4:	ldr	r0, [sp]
   12fb8:	ldr	r0, [r0]
   12fbc:	add	sp, sp, #8
   12fc0:	bx	lr
   12fc4:	sub	sp, sp, #16
   12fc8:	str	r0, [sp, #12]
   12fcc:	str	r1, [sp, #8]
   12fd0:	ldr	r0, [sp, #8]
   12fd4:	ldr	r1, [sp, #12]
   12fd8:	movw	r2, #0
   12fdc:	cmp	r1, r2
   12fe0:	str	r0, [sp, #4]
   12fe4:	beq	12ff4 <__assert_fail@plt+0x1fdc>
   12fe8:	ldr	r0, [sp, #12]
   12fec:	str	r0, [sp]
   12ff0:	b	13004 <__assert_fail@plt+0x1fec>
   12ff4:	movw	r0, #49524	; 0xc174
   12ff8:	movt	r0, #2
   12ffc:	str	r0, [sp]
   13000:	b	13004 <__assert_fail@plt+0x1fec>
   13004:	ldr	r0, [sp]
   13008:	ldr	r1, [sp, #4]
   1300c:	str	r1, [r0]
   13010:	add	sp, sp, #16
   13014:	bx	lr
   13018:	sub	sp, sp, #32
   1301c:	str	r0, [sp, #28]
   13020:	strb	r1, [sp, #27]
   13024:	str	r2, [sp, #20]
   13028:	ldrb	r0, [sp, #27]
   1302c:	strb	r0, [sp, #19]
   13030:	ldr	r0, [sp, #28]
   13034:	movw	r1, #0
   13038:	cmp	r0, r1
   1303c:	beq	1304c <__assert_fail@plt+0x2034>
   13040:	ldr	r0, [sp, #28]
   13044:	str	r0, [sp]
   13048:	b	1305c <__assert_fail@plt+0x2044>
   1304c:	movw	r0, #49524	; 0xc174
   13050:	movt	r0, #2
   13054:	str	r0, [sp]
   13058:	b	1305c <__assert_fail@plt+0x2044>
   1305c:	ldr	r0, [sp]
   13060:	add	r0, r0, #8
   13064:	ldrb	r1, [sp, #19]
   13068:	lsr	r1, r1, #5
   1306c:	add	r0, r0, r1, lsl #2
   13070:	str	r0, [sp, #12]
   13074:	ldrb	r0, [sp, #19]
   13078:	and	r0, r0, #31
   1307c:	str	r0, [sp, #8]
   13080:	ldr	r0, [sp, #12]
   13084:	ldr	r0, [r0]
   13088:	ldr	r1, [sp, #8]
   1308c:	lsr	r0, r0, r1
   13090:	and	r0, r0, #1
   13094:	str	r0, [sp, #4]
   13098:	ldr	r0, [sp, #20]
   1309c:	and	r0, r0, #1
   130a0:	ldr	r1, [sp, #4]
   130a4:	eor	r0, r0, r1
   130a8:	ldr	r1, [sp, #8]
   130ac:	lsl	r0, r0, r1
   130b0:	ldr	r1, [sp, #12]
   130b4:	ldr	r2, [r1]
   130b8:	eor	r0, r2, r0
   130bc:	str	r0, [r1]
   130c0:	ldr	r0, [sp, #4]
   130c4:	add	sp, sp, #32
   130c8:	bx	lr
   130cc:	sub	sp, sp, #12
   130d0:	str	r0, [sp, #8]
   130d4:	str	r1, [sp, #4]
   130d8:	ldr	r0, [sp, #8]
   130dc:	movw	r1, #0
   130e0:	cmp	r0, r1
   130e4:	bne	130f4 <__assert_fail@plt+0x20dc>
   130e8:	movw	r0, #49524	; 0xc174
   130ec:	movt	r0, #2
   130f0:	str	r0, [sp, #8]
   130f4:	ldr	r0, [sp, #8]
   130f8:	ldr	r0, [r0, #4]
   130fc:	str	r0, [sp]
   13100:	ldr	r0, [sp, #4]
   13104:	ldr	r1, [sp, #8]
   13108:	str	r0, [r1, #4]
   1310c:	ldr	r0, [sp]
   13110:	add	sp, sp, #12
   13114:	bx	lr
   13118:	push	{fp, lr}
   1311c:	mov	fp, sp
   13120:	sub	sp, sp, #16
   13124:	str	r0, [fp, #-4]
   13128:	str	r1, [sp, #8]
   1312c:	str	r2, [sp, #4]
   13130:	ldr	r0, [fp, #-4]
   13134:	movw	r1, #0
   13138:	cmp	r0, r1
   1313c:	bne	1314c <__assert_fail@plt+0x2134>
   13140:	movw	r0, #49524	; 0xc174
   13144:	movt	r0, #2
   13148:	str	r0, [fp, #-4]
   1314c:	ldr	r0, [fp, #-4]
   13150:	movw	r1, #10
   13154:	str	r1, [r0]
   13158:	ldr	r0, [sp, #8]
   1315c:	movw	r1, #0
   13160:	cmp	r0, r1
   13164:	beq	13178 <__assert_fail@plt+0x2160>
   13168:	ldr	r0, [sp, #4]
   1316c:	movw	r1, #0
   13170:	cmp	r0, r1
   13174:	bne	1317c <__assert_fail@plt+0x2164>
   13178:	bl	11000 <abort@plt>
   1317c:	ldr	r0, [sp, #8]
   13180:	ldr	r1, [fp, #-4]
   13184:	str	r0, [r1, #40]	; 0x28
   13188:	ldr	r0, [sp, #4]
   1318c:	ldr	r1, [fp, #-4]
   13190:	str	r0, [r1, #44]	; 0x2c
   13194:	mov	sp, fp
   13198:	pop	{fp, pc}
   1319c:	push	{r4, r5, r6, sl, fp, lr}
   131a0:	add	fp, sp, #16
   131a4:	sub	sp, sp, #64	; 0x40
   131a8:	ldr	ip, [fp, #8]
   131ac:	str	r0, [fp, #-20]	; 0xffffffec
   131b0:	str	r1, [fp, #-24]	; 0xffffffe8
   131b4:	str	r2, [fp, #-28]	; 0xffffffe4
   131b8:	str	r3, [fp, #-32]	; 0xffffffe0
   131bc:	ldr	r0, [fp, #8]
   131c0:	movw	r1, #0
   131c4:	cmp	r0, r1
   131c8:	str	ip, [sp, #32]
   131cc:	beq	131dc <__assert_fail@plt+0x21c4>
   131d0:	ldr	r0, [fp, #8]
   131d4:	str	r0, [sp, #28]
   131d8:	b	131ec <__assert_fail@plt+0x21d4>
   131dc:	movw	r0, #49524	; 0xc174
   131e0:	movt	r0, #2
   131e4:	str	r0, [sp, #28]
   131e8:	b	131ec <__assert_fail@plt+0x21d4>
   131ec:	ldr	r0, [sp, #28]
   131f0:	str	r0, [fp, #-36]	; 0xffffffdc
   131f4:	bl	10f70 <__errno_location@plt>
   131f8:	ldr	r0, [r0]
   131fc:	str	r0, [sp, #40]	; 0x28
   13200:	ldr	r0, [fp, #-20]	; 0xffffffec
   13204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13208:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1320c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13210:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13214:	ldr	lr, [lr]
   13218:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1321c:	ldr	ip, [ip, #4]
   13220:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13224:	add	r4, r4, #8
   13228:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1322c:	ldr	r5, [r5, #40]	; 0x28
   13230:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13234:	ldr	r6, [r6, #44]	; 0x2c
   13238:	str	lr, [sp]
   1323c:	str	ip, [sp, #4]
   13240:	str	r4, [sp, #8]
   13244:	str	r5, [sp, #12]
   13248:	str	r6, [sp, #16]
   1324c:	bl	13274 <__assert_fail@plt+0x225c>
   13250:	str	r0, [sp, #36]	; 0x24
   13254:	ldr	r0, [sp, #40]	; 0x28
   13258:	str	r0, [sp, #24]
   1325c:	bl	10f70 <__errno_location@plt>
   13260:	ldr	r1, [sp, #24]
   13264:	str	r1, [r0]
   13268:	ldr	r0, [sp, #36]	; 0x24
   1326c:	sub	sp, fp, #16
   13270:	pop	{r4, r5, r6, sl, fp, pc}
   13274:	push	{r4, r5, r6, sl, fp, lr}
   13278:	add	fp, sp, #16
   1327c:	sub	sp, sp, #168	; 0xa8
   13280:	ldr	ip, [fp, #24]
   13284:	ldr	lr, [fp, #20]
   13288:	ldr	r4, [fp, #16]
   1328c:	ldr	r5, [fp, #12]
   13290:	ldr	r6, [fp, #8]
   13294:	str	r0, [fp, #-24]	; 0xffffffe8
   13298:	str	r1, [fp, #-28]	; 0xffffffe4
   1329c:	str	r2, [fp, #-32]	; 0xffffffe0
   132a0:	str	r3, [fp, #-36]	; 0xffffffdc
   132a4:	movw	r0, #0
   132a8:	str	r0, [fp, #-44]	; 0xffffffd4
   132ac:	str	r0, [fp, #-48]	; 0xffffffd0
   132b0:	str	r0, [fp, #-52]	; 0xffffffcc
   132b4:	str	r0, [fp, #-56]	; 0xffffffc8
   132b8:	movw	r0, #0
   132bc:	strb	r0, [fp, #-57]	; 0xffffffc7
   132c0:	str	r6, [sp, #80]	; 0x50
   132c4:	str	lr, [sp, #76]	; 0x4c
   132c8:	str	r4, [sp, #72]	; 0x48
   132cc:	str	r5, [sp, #68]	; 0x44
   132d0:	str	ip, [sp, #64]	; 0x40
   132d4:	bl	10e98 <__ctype_get_mb_cur_max@plt>
   132d8:	cmp	r0, #1
   132dc:	movw	r0, #0
   132e0:	moveq	r0, #1
   132e4:	and	r0, r0, #1
   132e8:	strb	r0, [fp, #-58]	; 0xffffffc6
   132ec:	ldr	r0, [fp, #12]
   132f0:	and	r0, r0, #2
   132f4:	cmp	r0, #0
   132f8:	movw	r0, #0
   132fc:	movne	r0, #1
   13300:	and	r0, r0, #1
   13304:	strb	r0, [fp, #-59]	; 0xffffffc5
   13308:	movw	r0, #0
   1330c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13310:	strb	r0, [fp, #-61]	; 0xffffffc3
   13314:	movw	r0, #1
   13318:	strb	r0, [fp, #-62]	; 0xffffffc2
   1331c:	ldr	r0, [fp, #8]
   13320:	cmp	r0, #10
   13324:	str	r0, [sp, #60]	; 0x3c
   13328:	bhi	13550 <__assert_fail@plt+0x2538>
   1332c:	add	r0, pc, #8
   13330:	ldr	r1, [sp, #60]	; 0x3c
   13334:	ldr	r0, [r0, r1, lsl #2]
   13338:	mov	pc, r0
   1333c:	andeq	r3, r1, r4, asr #10
   13340:	andeq	r3, r1, r0, asr #9
   13344:	andeq	r3, r1, r0, ror #9
   13348:			; <UNDEFINED> instruction: 0x000134b8
   1334c:	andeq	r3, r1, r8, asr #9
   13350:	andeq	r3, r1, r8, ror r3
   13354:	andeq	r3, r1, r8, ror #6
   13358:	ldrdeq	r3, [r1], -ip
   1335c:	strdeq	r3, [r1], -r0
   13360:	strdeq	r3, [r1], -r0
   13364:	strdeq	r3, [r1], -r0
   13368:	movw	r0, #5
   1336c:	str	r0, [fp, #8]
   13370:	movw	r0, #1
   13374:	strb	r0, [fp, #-59]	; 0xffffffc5
   13378:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1337c:	tst	r0, #1
   13380:	bne	133bc <__assert_fail@plt+0x23a4>
   13384:	b	13388 <__assert_fail@plt+0x2370>
   13388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1338c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13390:	cmp	r0, r1
   13394:	bcs	133ac <__assert_fail@plt+0x2394>
   13398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1339c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133a0:	add	r0, r0, r1
   133a4:	movw	r1, #34	; 0x22
   133a8:	strb	r1, [r0]
   133ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133b0:	add	r0, r0, #1
   133b4:	str	r0, [fp, #-44]	; 0xffffffd4
   133b8:	b	133bc <__assert_fail@plt+0x23a4>
   133bc:	movw	r0, #1
   133c0:	strb	r0, [fp, #-57]	; 0xffffffc7
   133c4:	movw	r0, #47904	; 0xbb20
   133c8:	movt	r0, #1
   133cc:	str	r0, [fp, #-52]	; 0xffffffcc
   133d0:	movw	r0, #1
   133d4:	str	r0, [fp, #-56]	; 0xffffffc8
   133d8:	b	13554 <__assert_fail@plt+0x253c>
   133dc:	movw	r0, #1
   133e0:	strb	r0, [fp, #-57]	; 0xffffffc7
   133e4:	movw	r0, #0
   133e8:	strb	r0, [fp, #-59]	; 0xffffffc5
   133ec:	b	13554 <__assert_fail@plt+0x253c>
   133f0:	ldr	r0, [fp, #8]
   133f4:	cmp	r0, #10
   133f8:	beq	13424 <__assert_fail@plt+0x240c>
   133fc:	ldr	r1, [fp, #8]
   13400:	movw	r0, #47906	; 0xbb22
   13404:	movt	r0, #1
   13408:	bl	15464 <__assert_fail@plt+0x444c>
   1340c:	str	r0, [fp, #20]
   13410:	ldr	r1, [fp, #8]
   13414:	movw	r0, #47908	; 0xbb24
   13418:	movt	r0, #1
   1341c:	bl	15464 <__assert_fail@plt+0x444c>
   13420:	str	r0, [fp, #24]
   13424:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13428:	tst	r0, #1
   1342c:	bne	13498 <__assert_fail@plt+0x2480>
   13430:	ldr	r0, [fp, #20]
   13434:	str	r0, [fp, #-52]	; 0xffffffcc
   13438:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1343c:	ldrsb	r0, [r0]
   13440:	cmp	r0, #0
   13444:	beq	13494 <__assert_fail@plt+0x247c>
   13448:	b	1344c <__assert_fail@plt+0x2434>
   1344c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13450:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13454:	cmp	r0, r1
   13458:	bcs	13474 <__assert_fail@plt+0x245c>
   1345c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13460:	ldrb	r0, [r0]
   13464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13468:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1346c:	add	r1, r1, r2
   13470:	strb	r0, [r1]
   13474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13478:	add	r0, r0, #1
   1347c:	str	r0, [fp, #-44]	; 0xffffffd4
   13480:	b	13484 <__assert_fail@plt+0x246c>
   13484:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13488:	add	r0, r0, #1
   1348c:	str	r0, [fp, #-52]	; 0xffffffcc
   13490:	b	13438 <__assert_fail@plt+0x2420>
   13494:	b	13498 <__assert_fail@plt+0x2480>
   13498:	movw	r0, #1
   1349c:	strb	r0, [fp, #-57]	; 0xffffffc7
   134a0:	ldr	r0, [fp, #24]
   134a4:	str	r0, [fp, #-52]	; 0xffffffcc
   134a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   134ac:	bl	10f58 <strlen@plt>
   134b0:	str	r0, [fp, #-56]	; 0xffffffc8
   134b4:	b	13554 <__assert_fail@plt+0x253c>
   134b8:	movw	r0, #1
   134bc:	strb	r0, [fp, #-57]	; 0xffffffc7
   134c0:	movw	r0, #1
   134c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   134c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134cc:	tst	r0, #1
   134d0:	bne	134dc <__assert_fail@plt+0x24c4>
   134d4:	movw	r0, #1
   134d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   134dc:	b	134e0 <__assert_fail@plt+0x24c8>
   134e0:	movw	r0, #2
   134e4:	str	r0, [fp, #8]
   134e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134ec:	tst	r0, #1
   134f0:	bne	1352c <__assert_fail@plt+0x2514>
   134f4:	b	134f8 <__assert_fail@plt+0x24e0>
   134f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13500:	cmp	r0, r1
   13504:	bcs	1351c <__assert_fail@plt+0x2504>
   13508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1350c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13510:	add	r0, r0, r1
   13514:	movw	r1, #39	; 0x27
   13518:	strb	r1, [r0]
   1351c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13520:	add	r0, r0, #1
   13524:	str	r0, [fp, #-44]	; 0xffffffd4
   13528:	b	1352c <__assert_fail@plt+0x2514>
   1352c:	movw	r0, #47908	; 0xbb24
   13530:	movt	r0, #1
   13534:	str	r0, [fp, #-52]	; 0xffffffcc
   13538:	movw	r0, #1
   1353c:	str	r0, [fp, #-56]	; 0xffffffc8
   13540:	b	13554 <__assert_fail@plt+0x253c>
   13544:	movw	r0, #0
   13548:	strb	r0, [fp, #-59]	; 0xffffffc5
   1354c:	b	13554 <__assert_fail@plt+0x253c>
   13550:	bl	11000 <abort@plt>
   13554:	movw	r0, #0
   13558:	str	r0, [fp, #-40]	; 0xffffffd8
   1355c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13560:	cmn	r0, #1
   13564:	bne	13590 <__assert_fail@plt+0x2578>
   13568:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1356c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13570:	add	r0, r0, r1
   13574:	ldrb	r0, [r0]
   13578:	cmp	r0, #0
   1357c:	movw	r0, #0
   13580:	moveq	r0, #1
   13584:	and	r0, r0, #1
   13588:	str	r0, [sp, #56]	; 0x38
   1358c:	b	135ac <__assert_fail@plt+0x2594>
   13590:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13594:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13598:	cmp	r0, r1
   1359c:	movw	r0, #0
   135a0:	moveq	r0, #1
   135a4:	and	r0, r0, #1
   135a8:	str	r0, [sp, #56]	; 0x38
   135ac:	ldr	r0, [sp, #56]	; 0x38
   135b0:	cmp	r0, #0
   135b4:	movw	r0, #0
   135b8:	movne	r0, #1
   135bc:	mvn	r1, #0
   135c0:	eor	r0, r0, r1
   135c4:	tst	r0, #1
   135c8:	beq	147b8 <__assert_fail@plt+0x37a0>
   135cc:	movw	r0, #0
   135d0:	strb	r0, [fp, #-65]	; 0xffffffbf
   135d4:	strb	r0, [fp, #-66]	; 0xffffffbe
   135d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   135dc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   135e0:	tst	r0, #1
   135e4:	beq	13690 <__assert_fail@plt+0x2678>
   135e8:	ldr	r0, [fp, #8]
   135ec:	cmp	r0, #2
   135f0:	beq	13690 <__assert_fail@plt+0x2678>
   135f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135f8:	cmp	r0, #0
   135fc:	beq	13690 <__assert_fail@plt+0x2678>
   13600:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13604:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13608:	add	r0, r0, r1
   1360c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13610:	cmn	r1, #1
   13614:	str	r0, [sp, #52]	; 0x34
   13618:	bne	13640 <__assert_fail@plt+0x2628>
   1361c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13620:	movw	r1, #1
   13624:	cmp	r1, r0
   13628:	bcs	13640 <__assert_fail@plt+0x2628>
   1362c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13630:	bl	10f58 <strlen@plt>
   13634:	str	r0, [fp, #-36]	; 0xffffffdc
   13638:	str	r0, [sp, #48]	; 0x30
   1363c:	b	13648 <__assert_fail@plt+0x2630>
   13640:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13644:	str	r0, [sp, #48]	; 0x30
   13648:	ldr	r0, [sp, #48]	; 0x30
   1364c:	ldr	r1, [sp, #52]	; 0x34
   13650:	cmp	r1, r0
   13654:	bhi	13690 <__assert_fail@plt+0x2678>
   13658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1365c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13660:	add	r0, r0, r1
   13664:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13668:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1366c:	bl	10e44 <memcmp@plt>
   13670:	cmp	r0, #0
   13674:	bne	13690 <__assert_fail@plt+0x2678>
   13678:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1367c:	tst	r0, #1
   13680:	beq	13688 <__assert_fail@plt+0x2670>
   13684:	b	14938 <__assert_fail@plt+0x3920>
   13688:	movw	r0, #1
   1368c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13694:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13698:	ldrb	r0, [r0, r1]
   1369c:	strb	r0, [fp, #-63]	; 0xffffffc1
   136a0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   136a4:	mov	r1, r0
   136a8:	cmp	r0, #126	; 0x7e
   136ac:	str	r1, [sp, #44]	; 0x2c
   136b0:	bhi	13f20 <__assert_fail@plt+0x2f08>
   136b4:	add	r0, pc, #8
   136b8:	ldr	r1, [sp, #44]	; 0x2c
   136bc:	ldr	r0, [r0, r1, lsl #2]
   136c0:	mov	pc, r0
   136c4:	andeq	r3, r1, r0, asr #17
   136c8:	andeq	r3, r1, r0, lsr #30
   136cc:	andeq	r3, r1, r0, lsr #30
   136d0:	andeq	r3, r1, r0, lsr #30
   136d4:	andeq	r3, r1, r0, lsr #30
   136d8:	andeq	r3, r1, r0, lsr #30
   136dc:	andeq	r3, r1, r0, lsr #30
   136e0:	andeq	r3, r1, r8, asr #25
   136e4:	ldrdeq	r3, [r1], -r4
   136e8:	andeq	r3, r1, r4, lsl #26
   136ec:	andeq	r3, r1, ip, ror #25
   136f0:	andeq	r3, r1, r0, lsl sp
   136f4:	andeq	r3, r1, r0, ror #25
   136f8:	strdeq	r3, [r1], -r8
   136fc:	andeq	r3, r1, r0, lsr #30
   13700:	andeq	r3, r1, r0, lsr #30
   13704:	andeq	r3, r1, r0, lsr #30
   13708:	andeq	r3, r1, r0, lsr #30
   1370c:	andeq	r3, r1, r0, lsr #30
   13710:	andeq	r3, r1, r0, lsr #30
   13714:	andeq	r3, r1, r0, lsr #30
   13718:	andeq	r3, r1, r0, lsr #30
   1371c:	andeq	r3, r1, r0, lsr #30
   13720:	andeq	r3, r1, r0, lsr #30
   13724:	andeq	r3, r1, r0, lsr #30
   13728:	andeq	r3, r1, r0, lsr #30
   1372c:	andeq	r3, r1, r0, lsr #30
   13730:	andeq	r3, r1, r0, lsr #30
   13734:	andeq	r3, r1, r0, lsr #30
   13738:	andeq	r3, r1, r0, lsr #30
   1373c:	andeq	r3, r1, r0, lsr #30
   13740:	andeq	r3, r1, r0, lsr #30
   13744:	strdeq	r3, [r1], -r4
   13748:	strdeq	r3, [r1], -ip
   1374c:	strdeq	r3, [r1], -ip
   13750:	andeq	r3, r1, r0, ror #27
   13754:	strdeq	r3, [r1], -ip
   13758:	andeq	r3, r1, r4, lsl pc
   1375c:	strdeq	r3, [r1], -ip
   13760:	andeq	r3, r1, ip, lsl lr
   13764:	strdeq	r3, [r1], -ip
   13768:	strdeq	r3, [r1], -ip
   1376c:	strdeq	r3, [r1], -ip
   13770:	andeq	r3, r1, r4, lsl pc
   13774:	andeq	r3, r1, r4, lsl pc
   13778:	andeq	r3, r1, r4, lsl pc
   1377c:	andeq	r3, r1, r4, lsl pc
   13780:	andeq	r3, r1, r4, lsl pc
   13784:	andeq	r3, r1, r4, lsl pc
   13788:	andeq	r3, r1, r4, lsl pc
   1378c:	andeq	r3, r1, r4, lsl pc
   13790:	andeq	r3, r1, r4, lsl pc
   13794:	andeq	r3, r1, r4, lsl pc
   13798:	andeq	r3, r1, r4, lsl pc
   1379c:	andeq	r3, r1, r4, lsl pc
   137a0:	andeq	r3, r1, r4, lsl pc
   137a4:	andeq	r3, r1, r4, lsl pc
   137a8:	andeq	r3, r1, r4, lsl pc
   137ac:	andeq	r3, r1, r4, lsl pc
   137b0:	strdeq	r3, [r1], -ip
   137b4:	strdeq	r3, [r1], -ip
   137b8:	strdeq	r3, [r1], -ip
   137bc:	strdeq	r3, [r1], -ip
   137c0:	andeq	r3, r1, ip, asr #21
   137c4:	andeq	r3, r1, r0, lsr #30
   137c8:	andeq	r3, r1, r4, lsl pc
   137cc:	andeq	r3, r1, r4, lsl pc
   137d0:	andeq	r3, r1, r4, lsl pc
   137d4:	andeq	r3, r1, r4, lsl pc
   137d8:	andeq	r3, r1, r4, lsl pc
   137dc:	andeq	r3, r1, r4, lsl pc
   137e0:	andeq	r3, r1, r4, lsl pc
   137e4:	andeq	r3, r1, r4, lsl pc
   137e8:	andeq	r3, r1, r4, lsl pc
   137ec:	andeq	r3, r1, r4, lsl pc
   137f0:	andeq	r3, r1, r4, lsl pc
   137f4:	andeq	r3, r1, r4, lsl pc
   137f8:	andeq	r3, r1, r4, lsl pc
   137fc:	andeq	r3, r1, r4, lsl pc
   13800:	andeq	r3, r1, r4, lsl pc
   13804:	andeq	r3, r1, r4, lsl pc
   13808:	andeq	r3, r1, r4, lsl pc
   1380c:	andeq	r3, r1, r4, lsl pc
   13810:	andeq	r3, r1, r4, lsl pc
   13814:	andeq	r3, r1, r4, lsl pc
   13818:	andeq	r3, r1, r4, lsl pc
   1381c:	andeq	r3, r1, r4, lsl pc
   13820:	andeq	r3, r1, r4, lsl pc
   13824:	andeq	r3, r1, r4, lsl pc
   13828:	andeq	r3, r1, r4, lsl pc
   1382c:	andeq	r3, r1, r4, lsl pc
   13830:	strdeq	r3, [r1], -ip
   13834:	andeq	r3, r1, ip, lsl sp
   13838:	andeq	r3, r1, r4, lsl pc
   1383c:	strdeq	r3, [r1], -ip
   13840:	andeq	r3, r1, r4, lsl pc
   13844:	strdeq	r3, [r1], -ip
   13848:	andeq	r3, r1, r4, lsl pc
   1384c:	andeq	r3, r1, r4, lsl pc
   13850:	andeq	r3, r1, r4, lsl pc
   13854:	andeq	r3, r1, r4, lsl pc
   13858:	andeq	r3, r1, r4, lsl pc
   1385c:	andeq	r3, r1, r4, lsl pc
   13860:	andeq	r3, r1, r4, lsl pc
   13864:	andeq	r3, r1, r4, lsl pc
   13868:	andeq	r3, r1, r4, lsl pc
   1386c:	andeq	r3, r1, r4, lsl pc
   13870:	andeq	r3, r1, r4, lsl pc
   13874:	andeq	r3, r1, r4, lsl pc
   13878:	andeq	r3, r1, r4, lsl pc
   1387c:	andeq	r3, r1, r4, lsl pc
   13880:	andeq	r3, r1, r4, lsl pc
   13884:	andeq	r3, r1, r4, lsl pc
   13888:	andeq	r3, r1, r4, lsl pc
   1388c:	andeq	r3, r1, r4, lsl pc
   13890:	andeq	r3, r1, r4, lsl pc
   13894:	andeq	r3, r1, r4, lsl pc
   13898:	andeq	r3, r1, r4, lsl pc
   1389c:	andeq	r3, r1, r4, lsl pc
   138a0:	andeq	r3, r1, r4, lsl pc
   138a4:	andeq	r3, r1, r4, lsl pc
   138a8:	andeq	r3, r1, r4, lsl pc
   138ac:	andeq	r3, r1, r4, lsl pc
   138b0:	andeq	r3, r1, ip, lsr #27
   138b4:	strdeq	r3, [r1], -ip
   138b8:	andeq	r3, r1, ip, lsr #27
   138bc:	andeq	r3, r1, r0, ror #27
   138c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   138c4:	tst	r0, #1
   138c8:	beq	13ab0 <__assert_fail@plt+0x2a98>
   138cc:	b	138d0 <__assert_fail@plt+0x28b8>
   138d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   138d4:	tst	r0, #1
   138d8:	beq	138e0 <__assert_fail@plt+0x28c8>
   138dc:	b	14938 <__assert_fail@plt+0x3920>
   138e0:	movw	r0, #1
   138e4:	strb	r0, [fp, #-66]	; 0xffffffbe
   138e8:	ldr	r0, [fp, #8]
   138ec:	cmp	r0, #2
   138f0:	bne	139a4 <__assert_fail@plt+0x298c>
   138f4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   138f8:	tst	r0, #1
   138fc:	bne	139a4 <__assert_fail@plt+0x298c>
   13900:	b	13904 <__assert_fail@plt+0x28ec>
   13904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1390c:	cmp	r0, r1
   13910:	bcs	13928 <__assert_fail@plt+0x2910>
   13914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13918:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1391c:	add	r0, r0, r1
   13920:	movw	r1, #39	; 0x27
   13924:	strb	r1, [r0]
   13928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1392c:	add	r0, r0, #1
   13930:	str	r0, [fp, #-44]	; 0xffffffd4
   13934:	b	13938 <__assert_fail@plt+0x2920>
   13938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1393c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13940:	cmp	r0, r1
   13944:	bcs	1395c <__assert_fail@plt+0x2944>
   13948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1394c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13950:	add	r0, r0, r1
   13954:	movw	r1, #36	; 0x24
   13958:	strb	r1, [r0]
   1395c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13960:	add	r0, r0, #1
   13964:	str	r0, [fp, #-44]	; 0xffffffd4
   13968:	b	1396c <__assert_fail@plt+0x2954>
   1396c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13974:	cmp	r0, r1
   13978:	bcs	13990 <__assert_fail@plt+0x2978>
   1397c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13984:	add	r0, r0, r1
   13988:	movw	r1, #39	; 0x27
   1398c:	strb	r1, [r0]
   13990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13994:	add	r0, r0, #1
   13998:	str	r0, [fp, #-44]	; 0xffffffd4
   1399c:	movw	r0, #1
   139a0:	strb	r0, [fp, #-60]	; 0xffffffc4
   139a4:	b	139a8 <__assert_fail@plt+0x2990>
   139a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139b0:	cmp	r0, r1
   139b4:	bcs	139cc <__assert_fail@plt+0x29b4>
   139b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139c0:	add	r0, r0, r1
   139c4:	movw	r1, #92	; 0x5c
   139c8:	strb	r1, [r0]
   139cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139d0:	add	r0, r0, #1
   139d4:	str	r0, [fp, #-44]	; 0xffffffd4
   139d8:	b	139dc <__assert_fail@plt+0x29c4>
   139dc:	ldr	r0, [fp, #8]
   139e0:	cmp	r0, #2
   139e4:	beq	13aa4 <__assert_fail@plt+0x2a8c>
   139e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139ec:	add	r0, r0, #1
   139f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139f4:	cmp	r0, r1
   139f8:	bcs	13aa4 <__assert_fail@plt+0x2a8c>
   139fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a04:	add	r1, r1, #1
   13a08:	add	r0, r0, r1
   13a0c:	ldrb	r0, [r0]
   13a10:	movw	r1, #48	; 0x30
   13a14:	cmp	r1, r0
   13a18:	bgt	13aa4 <__assert_fail@plt+0x2a8c>
   13a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a24:	add	r1, r1, #1
   13a28:	add	r0, r0, r1
   13a2c:	ldrb	r0, [r0]
   13a30:	cmp	r0, #57	; 0x39
   13a34:	bgt	13aa4 <__assert_fail@plt+0x2a8c>
   13a38:	b	13a3c <__assert_fail@plt+0x2a24>
   13a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a44:	cmp	r0, r1
   13a48:	bcs	13a60 <__assert_fail@plt+0x2a48>
   13a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a54:	add	r0, r0, r1
   13a58:	movw	r1, #48	; 0x30
   13a5c:	strb	r1, [r0]
   13a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a64:	add	r0, r0, #1
   13a68:	str	r0, [fp, #-44]	; 0xffffffd4
   13a6c:	b	13a70 <__assert_fail@plt+0x2a58>
   13a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a78:	cmp	r0, r1
   13a7c:	bcs	13a94 <__assert_fail@plt+0x2a7c>
   13a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a88:	add	r0, r0, r1
   13a8c:	movw	r1, #48	; 0x30
   13a90:	strb	r1, [r0]
   13a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a98:	add	r0, r0, #1
   13a9c:	str	r0, [fp, #-44]	; 0xffffffd4
   13aa0:	b	13aa4 <__assert_fail@plt+0x2a8c>
   13aa4:	movw	r0, #48	; 0x30
   13aa8:	strb	r0, [fp, #-63]	; 0xffffffc1
   13aac:	b	13ac8 <__assert_fail@plt+0x2ab0>
   13ab0:	ldr	r0, [fp, #12]
   13ab4:	and	r0, r0, #1
   13ab8:	cmp	r0, #0
   13abc:	beq	13ac4 <__assert_fail@plt+0x2aac>
   13ac0:	b	147a8 <__assert_fail@plt+0x3790>
   13ac4:	b	13ac8 <__assert_fail@plt+0x2ab0>
   13ac8:	b	14544 <__assert_fail@plt+0x352c>
   13acc:	ldr	r0, [fp, #8]
   13ad0:	cmp	r0, #2
   13ad4:	str	r0, [sp, #40]	; 0x28
   13ad8:	beq	13af0 <__assert_fail@plt+0x2ad8>
   13adc:	b	13ae0 <__assert_fail@plt+0x2ac8>
   13ae0:	ldr	r0, [sp, #40]	; 0x28
   13ae4:	cmp	r0, #5
   13ae8:	beq	13b04 <__assert_fail@plt+0x2aec>
   13aec:	b	13cc0 <__assert_fail@plt+0x2ca8>
   13af0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13af4:	tst	r0, #1
   13af8:	beq	13b00 <__assert_fail@plt+0x2ae8>
   13afc:	b	14938 <__assert_fail@plt+0x3920>
   13b00:	b	13cc4 <__assert_fail@plt+0x2cac>
   13b04:	ldr	r0, [fp, #12]
   13b08:	and	r0, r0, #4
   13b0c:	cmp	r0, #0
   13b10:	beq	13cbc <__assert_fail@plt+0x2ca4>
   13b14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b18:	add	r0, r0, #2
   13b1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b20:	cmp	r0, r1
   13b24:	bcs	13cbc <__assert_fail@plt+0x2ca4>
   13b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b30:	add	r1, r1, #1
   13b34:	add	r0, r0, r1
   13b38:	ldrb	r0, [r0]
   13b3c:	cmp	r0, #63	; 0x3f
   13b40:	bne	13cbc <__assert_fail@plt+0x2ca4>
   13b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b4c:	add	r0, r0, r1
   13b50:	ldrb	r0, [r0, #2]
   13b54:	mov	r1, r0
   13b58:	cmp	r0, #33	; 0x21
   13b5c:	str	r1, [sp, #36]	; 0x24
   13b60:	beq	13bb0 <__assert_fail@plt+0x2b98>
   13b64:	b	13b68 <__assert_fail@plt+0x2b50>
   13b68:	ldr	r0, [sp, #36]	; 0x24
   13b6c:	sub	r1, r0, #39	; 0x27
   13b70:	cmp	r1, #3
   13b74:	bcc	13bb0 <__assert_fail@plt+0x2b98>
   13b78:	b	13b7c <__assert_fail@plt+0x2b64>
   13b7c:	ldr	r0, [sp, #36]	; 0x24
   13b80:	cmp	r0, #45	; 0x2d
   13b84:	beq	13bb0 <__assert_fail@plt+0x2b98>
   13b88:	b	13b8c <__assert_fail@plt+0x2b74>
   13b8c:	ldr	r0, [sp, #36]	; 0x24
   13b90:	cmp	r0, #47	; 0x2f
   13b94:	beq	13bb0 <__assert_fail@plt+0x2b98>
   13b98:	b	13b9c <__assert_fail@plt+0x2b84>
   13b9c:	ldr	r0, [sp, #36]	; 0x24
   13ba0:	sub	r1, r0, #60	; 0x3c
   13ba4:	cmp	r1, #2
   13ba8:	bhi	13cb4 <__assert_fail@plt+0x2c9c>
   13bac:	b	13bb0 <__assert_fail@plt+0x2b98>
   13bb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bb4:	tst	r0, #1
   13bb8:	beq	13bc0 <__assert_fail@plt+0x2ba8>
   13bbc:	b	14938 <__assert_fail@plt+0x3920>
   13bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13bc8:	add	r1, r1, #2
   13bcc:	add	r0, r0, r1
   13bd0:	ldrb	r0, [r0]
   13bd4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bdc:	add	r0, r0, #2
   13be0:	str	r0, [fp, #-40]	; 0xffffffd8
   13be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13be8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bec:	cmp	r0, r1
   13bf0:	bcs	13c08 <__assert_fail@plt+0x2bf0>
   13bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bfc:	add	r0, r0, r1
   13c00:	movw	r1, #63	; 0x3f
   13c04:	strb	r1, [r0]
   13c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c0c:	add	r0, r0, #1
   13c10:	str	r0, [fp, #-44]	; 0xffffffd4
   13c14:	b	13c18 <__assert_fail@plt+0x2c00>
   13c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c20:	cmp	r0, r1
   13c24:	bcs	13c3c <__assert_fail@plt+0x2c24>
   13c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c30:	add	r0, r0, r1
   13c34:	movw	r1, #34	; 0x22
   13c38:	strb	r1, [r0]
   13c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c40:	add	r0, r0, #1
   13c44:	str	r0, [fp, #-44]	; 0xffffffd4
   13c48:	b	13c4c <__assert_fail@plt+0x2c34>
   13c4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c54:	cmp	r0, r1
   13c58:	bcs	13c70 <__assert_fail@plt+0x2c58>
   13c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c64:	add	r0, r0, r1
   13c68:	movw	r1, #34	; 0x22
   13c6c:	strb	r1, [r0]
   13c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c74:	add	r0, r0, #1
   13c78:	str	r0, [fp, #-44]	; 0xffffffd4
   13c7c:	b	13c80 <__assert_fail@plt+0x2c68>
   13c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c88:	cmp	r0, r1
   13c8c:	bcs	13ca4 <__assert_fail@plt+0x2c8c>
   13c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c98:	add	r0, r0, r1
   13c9c:	movw	r1, #63	; 0x3f
   13ca0:	strb	r1, [r0]
   13ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ca8:	add	r0, r0, #1
   13cac:	str	r0, [fp, #-44]	; 0xffffffd4
   13cb0:	b	13cb8 <__assert_fail@plt+0x2ca0>
   13cb4:	b	13cb8 <__assert_fail@plt+0x2ca0>
   13cb8:	b	13cbc <__assert_fail@plt+0x2ca4>
   13cbc:	b	13cc4 <__assert_fail@plt+0x2cac>
   13cc0:	b	13cc4 <__assert_fail@plt+0x2cac>
   13cc4:	b	14544 <__assert_fail@plt+0x352c>
   13cc8:	movw	r0, #97	; 0x61
   13ccc:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cd0:	b	13d90 <__assert_fail@plt+0x2d78>
   13cd4:	movw	r0, #98	; 0x62
   13cd8:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cdc:	b	13d90 <__assert_fail@plt+0x2d78>
   13ce0:	movw	r0, #102	; 0x66
   13ce4:	strb	r0, [fp, #-64]	; 0xffffffc0
   13ce8:	b	13d90 <__assert_fail@plt+0x2d78>
   13cec:	movw	r0, #110	; 0x6e
   13cf0:	strb	r0, [fp, #-64]	; 0xffffffc0
   13cf4:	b	13d70 <__assert_fail@plt+0x2d58>
   13cf8:	movw	r0, #114	; 0x72
   13cfc:	strb	r0, [fp, #-64]	; 0xffffffc0
   13d00:	b	13d70 <__assert_fail@plt+0x2d58>
   13d04:	movw	r0, #116	; 0x74
   13d08:	strb	r0, [fp, #-64]	; 0xffffffc0
   13d0c:	b	13d70 <__assert_fail@plt+0x2d58>
   13d10:	movw	r0, #118	; 0x76
   13d14:	strb	r0, [fp, #-64]	; 0xffffffc0
   13d18:	b	13d90 <__assert_fail@plt+0x2d78>
   13d1c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13d20:	strb	r0, [fp, #-64]	; 0xffffffc0
   13d24:	ldr	r0, [fp, #8]
   13d28:	cmp	r0, #2
   13d2c:	bne	13d44 <__assert_fail@plt+0x2d2c>
   13d30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d34:	tst	r0, #1
   13d38:	beq	13d40 <__assert_fail@plt+0x2d28>
   13d3c:	b	14938 <__assert_fail@plt+0x3920>
   13d40:	b	146cc <__assert_fail@plt+0x36b4>
   13d44:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13d48:	tst	r0, #1
   13d4c:	beq	13d6c <__assert_fail@plt+0x2d54>
   13d50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d54:	tst	r0, #1
   13d58:	beq	13d6c <__assert_fail@plt+0x2d54>
   13d5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d60:	cmp	r0, #0
   13d64:	beq	13d6c <__assert_fail@plt+0x2d54>
   13d68:	b	146cc <__assert_fail@plt+0x36b4>
   13d6c:	b	13d70 <__assert_fail@plt+0x2d58>
   13d70:	ldr	r0, [fp, #8]
   13d74:	cmp	r0, #2
   13d78:	bne	13d8c <__assert_fail@plt+0x2d74>
   13d7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d80:	tst	r0, #1
   13d84:	beq	13d8c <__assert_fail@plt+0x2d74>
   13d88:	b	14938 <__assert_fail@plt+0x3920>
   13d8c:	b	13d90 <__assert_fail@plt+0x2d78>
   13d90:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13d94:	tst	r0, #1
   13d98:	beq	13da8 <__assert_fail@plt+0x2d90>
   13d9c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13da0:	strb	r0, [fp, #-63]	; 0xffffffc1
   13da4:	b	145b8 <__assert_fail@plt+0x35a0>
   13da8:	b	14544 <__assert_fail@plt+0x352c>
   13dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13db0:	cmn	r0, #1
   13db4:	bne	13dcc <__assert_fail@plt+0x2db4>
   13db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dbc:	ldrb	r0, [r0, #1]
   13dc0:	cmp	r0, #0
   13dc4:	beq	13ddc <__assert_fail@plt+0x2dc4>
   13dc8:	b	13dd8 <__assert_fail@plt+0x2dc0>
   13dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13dd0:	cmp	r0, #1
   13dd4:	beq	13ddc <__assert_fail@plt+0x2dc4>
   13dd8:	b	14544 <__assert_fail@plt+0x352c>
   13ddc:	b	13de0 <__assert_fail@plt+0x2dc8>
   13de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13de4:	cmp	r0, #0
   13de8:	beq	13df0 <__assert_fail@plt+0x2dd8>
   13dec:	b	14544 <__assert_fail@plt+0x352c>
   13df0:	b	13df4 <__assert_fail@plt+0x2ddc>
   13df4:	movw	r0, #1
   13df8:	strb	r0, [fp, #-67]	; 0xffffffbd
   13dfc:	ldr	r0, [fp, #8]
   13e00:	cmp	r0, #2
   13e04:	bne	13e18 <__assert_fail@plt+0x2e00>
   13e08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e0c:	tst	r0, #1
   13e10:	beq	13e18 <__assert_fail@plt+0x2e00>
   13e14:	b	14938 <__assert_fail@plt+0x3920>
   13e18:	b	14544 <__assert_fail@plt+0x352c>
   13e1c:	movw	r0, #1
   13e20:	strb	r0, [fp, #-61]	; 0xffffffc3
   13e24:	strb	r0, [fp, #-67]	; 0xffffffbd
   13e28:	ldr	r0, [fp, #8]
   13e2c:	cmp	r0, #2
   13e30:	bne	13f10 <__assert_fail@plt+0x2ef8>
   13e34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e38:	tst	r0, #1
   13e3c:	beq	13e44 <__assert_fail@plt+0x2e2c>
   13e40:	b	14938 <__assert_fail@plt+0x3920>
   13e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e48:	cmp	r0, #0
   13e4c:	beq	13e6c <__assert_fail@plt+0x2e54>
   13e50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e54:	cmp	r0, #0
   13e58:	bne	13e6c <__assert_fail@plt+0x2e54>
   13e5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e60:	str	r0, [fp, #-48]	; 0xffffffd0
   13e64:	movw	r0, #0
   13e68:	str	r0, [fp, #-28]	; 0xffffffe4
   13e6c:	b	13e70 <__assert_fail@plt+0x2e58>
   13e70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e78:	cmp	r0, r1
   13e7c:	bcs	13e94 <__assert_fail@plt+0x2e7c>
   13e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e88:	add	r0, r0, r1
   13e8c:	movw	r1, #39	; 0x27
   13e90:	strb	r1, [r0]
   13e94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e98:	add	r0, r0, #1
   13e9c:	str	r0, [fp, #-44]	; 0xffffffd4
   13ea0:	b	13ea4 <__assert_fail@plt+0x2e8c>
   13ea4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13eac:	cmp	r0, r1
   13eb0:	bcs	13ec8 <__assert_fail@plt+0x2eb0>
   13eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ebc:	add	r0, r0, r1
   13ec0:	movw	r1, #92	; 0x5c
   13ec4:	strb	r1, [r0]
   13ec8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ecc:	add	r0, r0, #1
   13ed0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ed4:	b	13ed8 <__assert_fail@plt+0x2ec0>
   13ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ee0:	cmp	r0, r1
   13ee4:	bcs	13efc <__assert_fail@plt+0x2ee4>
   13ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ef0:	add	r0, r0, r1
   13ef4:	movw	r1, #39	; 0x27
   13ef8:	strb	r1, [r0]
   13efc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f00:	add	r0, r0, #1
   13f04:	str	r0, [fp, #-44]	; 0xffffffd4
   13f08:	movw	r0, #0
   13f0c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13f10:	b	14544 <__assert_fail@plt+0x352c>
   13f14:	movw	r0, #1
   13f18:	strb	r0, [fp, #-67]	; 0xffffffbd
   13f1c:	b	14544 <__assert_fail@plt+0x352c>
   13f20:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13f24:	tst	r0, #1
   13f28:	beq	13f6c <__assert_fail@plt+0x2f54>
   13f2c:	mov	r0, #1
   13f30:	str	r0, [fp, #-72]	; 0xffffffb8
   13f34:	bl	10f34 <__ctype_b_loc@plt>
   13f38:	ldr	r0, [r0]
   13f3c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   13f40:	mov	r1, lr
   13f44:	add	r0, r0, lr, lsl #1
   13f48:	ldrh	r0, [r0]
   13f4c:	and	r0, r0, #16384	; 0x4000
   13f50:	cmp	r0, #0
   13f54:	movw	r0, #0
   13f58:	movne	r0, #1
   13f5c:	and	r0, r0, #1
   13f60:	strb	r0, [fp, #-73]	; 0xffffffb7
   13f64:	str	r1, [sp, #32]
   13f68:	b	141f8 <__assert_fail@plt+0x31e0>
   13f6c:	sub	r0, fp, #84	; 0x54
   13f70:	movw	r1, #0
   13f74:	and	r1, r1, #255	; 0xff
   13f78:	movw	r2, #8
   13f7c:	bl	10f88 <memset@plt>
   13f80:	movw	r0, #0
   13f84:	str	r0, [fp, #-72]	; 0xffffffb8
   13f88:	movw	r0, #1
   13f8c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13f90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f94:	cmn	r0, #1
   13f98:	bne	13fa8 <__assert_fail@plt+0x2f90>
   13f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fa0:	bl	10f58 <strlen@plt>
   13fa4:	str	r0, [fp, #-36]	; 0xffffffdc
   13fa8:	b	13fac <__assert_fail@plt+0x2f94>
   13fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13fb4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13fb8:	add	r1, r1, r2
   13fbc:	add	r1, r0, r1
   13fc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13fc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13fc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13fcc:	add	r2, r2, r3
   13fd0:	sub	r2, r0, r2
   13fd4:	sub	r0, fp, #88	; 0x58
   13fd8:	sub	r3, fp, #84	; 0x54
   13fdc:	bl	196d0 <__assert_fail@plt+0x86b8>
   13fe0:	str	r0, [sp, #92]	; 0x5c
   13fe4:	ldr	r0, [sp, #92]	; 0x5c
   13fe8:	cmp	r0, #0
   13fec:	bne	13ff4 <__assert_fail@plt+0x2fdc>
   13ff0:	b	141f4 <__assert_fail@plt+0x31dc>
   13ff4:	ldr	r0, [sp, #92]	; 0x5c
   13ff8:	cmn	r0, #1
   13ffc:	bne	1400c <__assert_fail@plt+0x2ff4>
   14000:	movw	r0, #0
   14004:	strb	r0, [fp, #-73]	; 0xffffffb7
   14008:	b	141f4 <__assert_fail@plt+0x31dc>
   1400c:	ldr	r0, [sp, #92]	; 0x5c
   14010:	cmn	r0, #2
   14014:	bne	14088 <__assert_fail@plt+0x3070>
   14018:	movw	r0, #0
   1401c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14020:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14024:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14028:	add	r0, r0, r1
   1402c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14030:	cmp	r0, r1
   14034:	movw	r0, #0
   14038:	str	r0, [sp, #28]
   1403c:	bcs	14068 <__assert_fail@plt+0x3050>
   14040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14044:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14048:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1404c:	add	r1, r1, r2
   14050:	add	r0, r0, r1
   14054:	ldrb	r0, [r0]
   14058:	cmp	r0, #0
   1405c:	movw	r0, #0
   14060:	movne	r0, #1
   14064:	str	r0, [sp, #28]
   14068:	ldr	r0, [sp, #28]
   1406c:	tst	r0, #1
   14070:	beq	14084 <__assert_fail@plt+0x306c>
   14074:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14078:	add	r0, r0, #1
   1407c:	str	r0, [fp, #-72]	; 0xffffffb8
   14080:	b	14020 <__assert_fail@plt+0x3008>
   14084:	b	141f4 <__assert_fail@plt+0x31dc>
   14088:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1408c:	tst	r0, #1
   14090:	beq	1419c <__assert_fail@plt+0x3184>
   14094:	ldr	r0, [fp, #8]
   14098:	cmp	r0, #2
   1409c:	bne	1419c <__assert_fail@plt+0x3184>
   140a0:	movw	r0, #1
   140a4:	str	r0, [sp, #88]	; 0x58
   140a8:	ldr	r0, [sp, #88]	; 0x58
   140ac:	ldr	r1, [sp, #92]	; 0x5c
   140b0:	cmp	r0, r1
   140b4:	bcs	14198 <__assert_fail@plt+0x3180>
   140b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   140c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   140c4:	add	r1, r1, r2
   140c8:	ldr	r2, [sp, #88]	; 0x58
   140cc:	add	r1, r1, r2
   140d0:	ldrb	r0, [r0, r1]
   140d4:	sub	r0, r0, #91	; 0x5b
   140d8:	cmp	r0, #33	; 0x21
   140dc:	str	r0, [sp, #24]
   140e0:	bhi	14180 <__assert_fail@plt+0x3168>
   140e4:	add	r0, pc, #8
   140e8:	ldr	r1, [sp, #24]
   140ec:	ldr	r0, [r0, r1, lsl #2]
   140f0:	mov	pc, r0
   140f4:	andeq	r4, r1, ip, ror r1
   140f8:	andeq	r4, r1, ip, ror r1
   140fc:	andeq	r4, r1, r0, lsl #3
   14100:	andeq	r4, r1, ip, ror r1
   14104:	andeq	r4, r1, r0, lsl #3
   14108:	andeq	r4, r1, ip, ror r1
   1410c:	andeq	r4, r1, r0, lsl #3
   14110:	andeq	r4, r1, r0, lsl #3
   14114:	andeq	r4, r1, r0, lsl #3
   14118:	andeq	r4, r1, r0, lsl #3
   1411c:	andeq	r4, r1, r0, lsl #3
   14120:	andeq	r4, r1, r0, lsl #3
   14124:	andeq	r4, r1, r0, lsl #3
   14128:	andeq	r4, r1, r0, lsl #3
   1412c:	andeq	r4, r1, r0, lsl #3
   14130:	andeq	r4, r1, r0, lsl #3
   14134:	andeq	r4, r1, r0, lsl #3
   14138:	andeq	r4, r1, r0, lsl #3
   1413c:	andeq	r4, r1, r0, lsl #3
   14140:	andeq	r4, r1, r0, lsl #3
   14144:	andeq	r4, r1, r0, lsl #3
   14148:	andeq	r4, r1, r0, lsl #3
   1414c:	andeq	r4, r1, r0, lsl #3
   14150:	andeq	r4, r1, r0, lsl #3
   14154:	andeq	r4, r1, r0, lsl #3
   14158:	andeq	r4, r1, r0, lsl #3
   1415c:	andeq	r4, r1, r0, lsl #3
   14160:	andeq	r4, r1, r0, lsl #3
   14164:	andeq	r4, r1, r0, lsl #3
   14168:	andeq	r4, r1, r0, lsl #3
   1416c:	andeq	r4, r1, r0, lsl #3
   14170:	andeq	r4, r1, r0, lsl #3
   14174:	andeq	r4, r1, r0, lsl #3
   14178:	andeq	r4, r1, ip, ror r1
   1417c:	b	14938 <__assert_fail@plt+0x3920>
   14180:	b	14184 <__assert_fail@plt+0x316c>
   14184:	b	14188 <__assert_fail@plt+0x3170>
   14188:	ldr	r0, [sp, #88]	; 0x58
   1418c:	add	r0, r0, #1
   14190:	str	r0, [sp, #88]	; 0x58
   14194:	b	140a8 <__assert_fail@plt+0x3090>
   14198:	b	1419c <__assert_fail@plt+0x3184>
   1419c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   141a0:	bl	10e80 <iswprint@plt>
   141a4:	cmp	r0, #0
   141a8:	bne	141b4 <__assert_fail@plt+0x319c>
   141ac:	movw	r0, #0
   141b0:	strb	r0, [fp, #-73]	; 0xffffffb7
   141b4:	ldr	r0, [sp, #92]	; 0x5c
   141b8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   141bc:	add	r0, r1, r0
   141c0:	str	r0, [fp, #-72]	; 0xffffffb8
   141c4:	b	141c8 <__assert_fail@plt+0x31b0>
   141c8:	b	141cc <__assert_fail@plt+0x31b4>
   141cc:	b	141d0 <__assert_fail@plt+0x31b8>
   141d0:	sub	r0, fp, #84	; 0x54
   141d4:	bl	10e38 <mbsinit@plt>
   141d8:	cmp	r0, #0
   141dc:	movw	r0, #0
   141e0:	movne	r0, #1
   141e4:	mvn	lr, #0
   141e8:	eor	r0, r0, lr
   141ec:	tst	r0, #1
   141f0:	bne	13fac <__assert_fail@plt+0x2f94>
   141f4:	b	141f8 <__assert_fail@plt+0x31e0>
   141f8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   141fc:	and	r0, r0, #1
   14200:	strb	r0, [fp, #-67]	; 0xffffffbd
   14204:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14208:	movw	r1, #1
   1420c:	cmp	r1, r0
   14210:	bcc	1422c <__assert_fail@plt+0x3214>
   14214:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14218:	tst	r0, #1
   1421c:	beq	14540 <__assert_fail@plt+0x3528>
   14220:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14224:	tst	r0, #1
   14228:	bne	14540 <__assert_fail@plt+0x3528>
   1422c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14230:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14234:	add	r0, r0, r1
   14238:	str	r0, [sp, #84]	; 0x54
   1423c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14240:	tst	r0, #1
   14244:	beq	143f4 <__assert_fail@plt+0x33dc>
   14248:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1424c:	tst	r0, #1
   14250:	bne	143f4 <__assert_fail@plt+0x33dc>
   14254:	b	14258 <__assert_fail@plt+0x3240>
   14258:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1425c:	tst	r0, #1
   14260:	beq	14268 <__assert_fail@plt+0x3250>
   14264:	b	14938 <__assert_fail@plt+0x3920>
   14268:	movw	r0, #1
   1426c:	strb	r0, [fp, #-66]	; 0xffffffbe
   14270:	ldr	r0, [fp, #8]
   14274:	cmp	r0, #2
   14278:	bne	1432c <__assert_fail@plt+0x3314>
   1427c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14280:	tst	r0, #1
   14284:	bne	1432c <__assert_fail@plt+0x3314>
   14288:	b	1428c <__assert_fail@plt+0x3274>
   1428c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14290:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14294:	cmp	r0, r1
   14298:	bcs	142b0 <__assert_fail@plt+0x3298>
   1429c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142a4:	add	r0, r0, r1
   142a8:	movw	r1, #39	; 0x27
   142ac:	strb	r1, [r0]
   142b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b4:	add	r0, r0, #1
   142b8:	str	r0, [fp, #-44]	; 0xffffffd4
   142bc:	b	142c0 <__assert_fail@plt+0x32a8>
   142c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142c8:	cmp	r0, r1
   142cc:	bcs	142e4 <__assert_fail@plt+0x32cc>
   142d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142d8:	add	r0, r0, r1
   142dc:	movw	r1, #36	; 0x24
   142e0:	strb	r1, [r0]
   142e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142e8:	add	r0, r0, #1
   142ec:	str	r0, [fp, #-44]	; 0xffffffd4
   142f0:	b	142f4 <__assert_fail@plt+0x32dc>
   142f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142fc:	cmp	r0, r1
   14300:	bcs	14318 <__assert_fail@plt+0x3300>
   14304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14308:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1430c:	add	r0, r0, r1
   14310:	movw	r1, #39	; 0x27
   14314:	strb	r1, [r0]
   14318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1431c:	add	r0, r0, #1
   14320:	str	r0, [fp, #-44]	; 0xffffffd4
   14324:	movw	r0, #1
   14328:	strb	r0, [fp, #-60]	; 0xffffffc4
   1432c:	b	14330 <__assert_fail@plt+0x3318>
   14330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14338:	cmp	r0, r1
   1433c:	bcs	14354 <__assert_fail@plt+0x333c>
   14340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14348:	add	r0, r0, r1
   1434c:	movw	r1, #92	; 0x5c
   14350:	strb	r1, [r0]
   14354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14358:	add	r0, r0, #1
   1435c:	str	r0, [fp, #-44]	; 0xffffffd4
   14360:	b	14364 <__assert_fail@plt+0x334c>
   14364:	b	14368 <__assert_fail@plt+0x3350>
   14368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1436c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14370:	cmp	r0, r1
   14374:	bcs	14394 <__assert_fail@plt+0x337c>
   14378:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1437c:	asr	r0, r0, #6
   14380:	add	r0, r0, #48	; 0x30
   14384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14388:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1438c:	add	r1, r1, r2
   14390:	strb	r0, [r1]
   14394:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14398:	add	r0, r0, #1
   1439c:	str	r0, [fp, #-44]	; 0xffffffd4
   143a0:	b	143a4 <__assert_fail@plt+0x338c>
   143a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143ac:	cmp	r0, r1
   143b0:	bcs	143d4 <__assert_fail@plt+0x33bc>
   143b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   143b8:	asr	r0, r0, #3
   143bc:	and	r0, r0, #7
   143c0:	add	r0, r0, #48	; 0x30
   143c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   143c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   143cc:	add	r1, r1, r2
   143d0:	strb	r0, [r1]
   143d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143d8:	add	r0, r0, #1
   143dc:	str	r0, [fp, #-44]	; 0xffffffd4
   143e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   143e4:	and	r0, r0, #7
   143e8:	add	r0, r0, #48	; 0x30
   143ec:	strb	r0, [fp, #-63]	; 0xffffffc1
   143f0:	b	14440 <__assert_fail@plt+0x3428>
   143f4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   143f8:	tst	r0, #1
   143fc:	beq	1443c <__assert_fail@plt+0x3424>
   14400:	b	14404 <__assert_fail@plt+0x33ec>
   14404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1440c:	cmp	r0, r1
   14410:	bcs	14428 <__assert_fail@plt+0x3410>
   14414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14418:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1441c:	add	r0, r0, r1
   14420:	movw	r1, #92	; 0x5c
   14424:	strb	r1, [r0]
   14428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1442c:	add	r0, r0, #1
   14430:	str	r0, [fp, #-44]	; 0xffffffd4
   14434:	movw	r0, #0
   14438:	strb	r0, [fp, #-65]	; 0xffffffbf
   1443c:	b	14440 <__assert_fail@plt+0x3428>
   14440:	ldr	r0, [sp, #84]	; 0x54
   14444:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14448:	add	r1, r1, #1
   1444c:	cmp	r0, r1
   14450:	bhi	14458 <__assert_fail@plt+0x3440>
   14454:	b	1453c <__assert_fail@plt+0x3524>
   14458:	b	1445c <__assert_fail@plt+0x3444>
   1445c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14460:	tst	r0, #1
   14464:	beq	144e4 <__assert_fail@plt+0x34cc>
   14468:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1446c:	tst	r0, #1
   14470:	bne	144e4 <__assert_fail@plt+0x34cc>
   14474:	b	14478 <__assert_fail@plt+0x3460>
   14478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1447c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14480:	cmp	r0, r1
   14484:	bcs	1449c <__assert_fail@plt+0x3484>
   14488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1448c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14490:	add	r0, r0, r1
   14494:	movw	r1, #39	; 0x27
   14498:	strb	r1, [r0]
   1449c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144a0:	add	r0, r0, #1
   144a4:	str	r0, [fp, #-44]	; 0xffffffd4
   144a8:	b	144ac <__assert_fail@plt+0x3494>
   144ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144b4:	cmp	r0, r1
   144b8:	bcs	144d0 <__assert_fail@plt+0x34b8>
   144bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144c4:	add	r0, r0, r1
   144c8:	movw	r1, #39	; 0x27
   144cc:	strb	r1, [r0]
   144d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144d4:	add	r0, r0, #1
   144d8:	str	r0, [fp, #-44]	; 0xffffffd4
   144dc:	movw	r0, #0
   144e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   144e4:	b	144e8 <__assert_fail@plt+0x34d0>
   144e8:	b	144ec <__assert_fail@plt+0x34d4>
   144ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144f4:	cmp	r0, r1
   144f8:	bcs	14510 <__assert_fail@plt+0x34f8>
   144fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14504:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14508:	add	r1, r1, r2
   1450c:	strb	r0, [r1]
   14510:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14514:	add	r0, r0, #1
   14518:	str	r0, [fp, #-44]	; 0xffffffd4
   1451c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14520:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14524:	add	r1, r1, #1
   14528:	str	r1, [fp, #-40]	; 0xffffffd8
   1452c:	add	r0, r0, r1
   14530:	ldrb	r0, [r0]
   14534:	strb	r0, [fp, #-63]	; 0xffffffc1
   14538:	b	1423c <__assert_fail@plt+0x3224>
   1453c:	b	146cc <__assert_fail@plt+0x36b4>
   14540:	b	14544 <__assert_fail@plt+0x352c>
   14544:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14548:	tst	r0, #1
   1454c:	beq	1455c <__assert_fail@plt+0x3544>
   14550:	ldr	r0, [fp, #8]
   14554:	cmp	r0, #2
   14558:	bne	14568 <__assert_fail@plt+0x3550>
   1455c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14560:	tst	r0, #1
   14564:	beq	145a4 <__assert_fail@plt+0x358c>
   14568:	ldr	r0, [fp, #16]
   1456c:	movw	r1, #0
   14570:	cmp	r0, r1
   14574:	beq	145a4 <__assert_fail@plt+0x358c>
   14578:	ldr	r0, [fp, #16]
   1457c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14580:	lsr	r1, r1, #5
   14584:	add	r0, r0, r1, lsl #2
   14588:	ldr	r0, [r0]
   1458c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14590:	and	r1, r1, #31
   14594:	lsr	r0, r0, r1
   14598:	and	r0, r0, #1
   1459c:	cmp	r0, #0
   145a0:	bne	145b4 <__assert_fail@plt+0x359c>
   145a4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   145a8:	tst	r0, #1
   145ac:	bne	145b4 <__assert_fail@plt+0x359c>
   145b0:	b	146cc <__assert_fail@plt+0x36b4>
   145b4:	b	145b8 <__assert_fail@plt+0x35a0>
   145b8:	b	145bc <__assert_fail@plt+0x35a4>
   145bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145c0:	tst	r0, #1
   145c4:	beq	145cc <__assert_fail@plt+0x35b4>
   145c8:	b	14938 <__assert_fail@plt+0x3920>
   145cc:	movw	r0, #1
   145d0:	strb	r0, [fp, #-66]	; 0xffffffbe
   145d4:	ldr	r0, [fp, #8]
   145d8:	cmp	r0, #2
   145dc:	bne	14690 <__assert_fail@plt+0x3678>
   145e0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   145e4:	tst	r0, #1
   145e8:	bne	14690 <__assert_fail@plt+0x3678>
   145ec:	b	145f0 <__assert_fail@plt+0x35d8>
   145f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145f8:	cmp	r0, r1
   145fc:	bcs	14614 <__assert_fail@plt+0x35fc>
   14600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14604:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14608:	add	r0, r0, r1
   1460c:	movw	r1, #39	; 0x27
   14610:	strb	r1, [r0]
   14614:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14618:	add	r0, r0, #1
   1461c:	str	r0, [fp, #-44]	; 0xffffffd4
   14620:	b	14624 <__assert_fail@plt+0x360c>
   14624:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14628:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1462c:	cmp	r0, r1
   14630:	bcs	14648 <__assert_fail@plt+0x3630>
   14634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14638:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1463c:	add	r0, r0, r1
   14640:	movw	r1, #36	; 0x24
   14644:	strb	r1, [r0]
   14648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1464c:	add	r0, r0, #1
   14650:	str	r0, [fp, #-44]	; 0xffffffd4
   14654:	b	14658 <__assert_fail@plt+0x3640>
   14658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1465c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14660:	cmp	r0, r1
   14664:	bcs	1467c <__assert_fail@plt+0x3664>
   14668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1466c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14670:	add	r0, r0, r1
   14674:	movw	r1, #39	; 0x27
   14678:	strb	r1, [r0]
   1467c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14680:	add	r0, r0, #1
   14684:	str	r0, [fp, #-44]	; 0xffffffd4
   14688:	movw	r0, #1
   1468c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14690:	b	14694 <__assert_fail@plt+0x367c>
   14694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1469c:	cmp	r0, r1
   146a0:	bcs	146b8 <__assert_fail@plt+0x36a0>
   146a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146ac:	add	r0, r0, r1
   146b0:	movw	r1, #92	; 0x5c
   146b4:	strb	r1, [r0]
   146b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146bc:	add	r0, r0, #1
   146c0:	str	r0, [fp, #-44]	; 0xffffffd4
   146c4:	b	146c8 <__assert_fail@plt+0x36b0>
   146c8:	b	146cc <__assert_fail@plt+0x36b4>
   146cc:	b	146d0 <__assert_fail@plt+0x36b8>
   146d0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   146d4:	tst	r0, #1
   146d8:	beq	14758 <__assert_fail@plt+0x3740>
   146dc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   146e0:	tst	r0, #1
   146e4:	bne	14758 <__assert_fail@plt+0x3740>
   146e8:	b	146ec <__assert_fail@plt+0x36d4>
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f4:	cmp	r0, r1
   146f8:	bcs	14710 <__assert_fail@plt+0x36f8>
   146fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14704:	add	r0, r0, r1
   14708:	movw	r1, #39	; 0x27
   1470c:	strb	r1, [r0]
   14710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14714:	add	r0, r0, #1
   14718:	str	r0, [fp, #-44]	; 0xffffffd4
   1471c:	b	14720 <__assert_fail@plt+0x3708>
   14720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14728:	cmp	r0, r1
   1472c:	bcs	14744 <__assert_fail@plt+0x372c>
   14730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14734:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14738:	add	r0, r0, r1
   1473c:	movw	r1, #39	; 0x27
   14740:	strb	r1, [r0]
   14744:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14748:	add	r0, r0, #1
   1474c:	str	r0, [fp, #-44]	; 0xffffffd4
   14750:	movw	r0, #0
   14754:	strb	r0, [fp, #-60]	; 0xffffffc4
   14758:	b	1475c <__assert_fail@plt+0x3744>
   1475c:	b	14760 <__assert_fail@plt+0x3748>
   14760:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14768:	cmp	r0, r1
   1476c:	bcs	14784 <__assert_fail@plt+0x376c>
   14770:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14778:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1477c:	add	r1, r1, r2
   14780:	strb	r0, [r1]
   14784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14788:	add	r0, r0, #1
   1478c:	str	r0, [fp, #-44]	; 0xffffffd4
   14790:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14794:	tst	r0, #1
   14798:	bne	147a4 <__assert_fail@plt+0x378c>
   1479c:	movw	r0, #0
   147a0:	strb	r0, [fp, #-62]	; 0xffffffc2
   147a4:	b	147a8 <__assert_fail@plt+0x3790>
   147a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147ac:	add	r0, r0, #1
   147b0:	str	r0, [fp, #-40]	; 0xffffffd8
   147b4:	b	1355c <__assert_fail@plt+0x2544>
   147b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147bc:	cmp	r0, #0
   147c0:	bne	147e0 <__assert_fail@plt+0x37c8>
   147c4:	ldr	r0, [fp, #8]
   147c8:	cmp	r0, #2
   147cc:	bne	147e0 <__assert_fail@plt+0x37c8>
   147d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   147d4:	tst	r0, #1
   147d8:	beq	147e0 <__assert_fail@plt+0x37c8>
   147dc:	b	14938 <__assert_fail@plt+0x3920>
   147e0:	ldr	r0, [fp, #8]
   147e4:	cmp	r0, #2
   147e8:	bne	14888 <__assert_fail@plt+0x3870>
   147ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   147f0:	tst	r0, #1
   147f4:	bne	14888 <__assert_fail@plt+0x3870>
   147f8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   147fc:	tst	r0, #1
   14800:	beq	14888 <__assert_fail@plt+0x3870>
   14804:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14808:	tst	r0, #1
   1480c:	beq	14854 <__assert_fail@plt+0x383c>
   14810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14814:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14818:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1481c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14820:	ldr	ip, [fp, #12]
   14824:	ldr	lr, [fp, #16]
   14828:	ldr	r4, [fp, #20]
   1482c:	ldr	r5, [fp, #24]
   14830:	movw	r6, #5
   14834:	str	r6, [sp]
   14838:	str	ip, [sp, #4]
   1483c:	str	lr, [sp, #8]
   14840:	str	r4, [sp, #12]
   14844:	str	r5, [sp, #16]
   14848:	bl	13274 <__assert_fail@plt+0x225c>
   1484c:	str	r0, [fp, #-20]	; 0xffffffec
   14850:	b	149a0 <__assert_fail@plt+0x3988>
   14854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14858:	cmp	r0, #0
   1485c:	bne	14880 <__assert_fail@plt+0x3868>
   14860:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14864:	cmp	r0, #0
   14868:	beq	14880 <__assert_fail@plt+0x3868>
   1486c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14870:	str	r0, [fp, #-28]	; 0xffffffe4
   14874:	movw	r0, #0
   14878:	str	r0, [fp, #-44]	; 0xffffffd4
   1487c:	b	1331c <__assert_fail@plt+0x2304>
   14880:	b	14884 <__assert_fail@plt+0x386c>
   14884:	b	14888 <__assert_fail@plt+0x3870>
   14888:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1488c:	movw	r1, #0
   14890:	cmp	r0, r1
   14894:	beq	14908 <__assert_fail@plt+0x38f0>
   14898:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1489c:	tst	r0, #1
   148a0:	bne	14908 <__assert_fail@plt+0x38f0>
   148a4:	b	148a8 <__assert_fail@plt+0x3890>
   148a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   148ac:	ldrsb	r0, [r0]
   148b0:	cmp	r0, #0
   148b4:	beq	14904 <__assert_fail@plt+0x38ec>
   148b8:	b	148bc <__assert_fail@plt+0x38a4>
   148bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148c4:	cmp	r0, r1
   148c8:	bcs	148e4 <__assert_fail@plt+0x38cc>
   148cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   148d0:	ldrb	r0, [r0]
   148d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148dc:	add	r1, r1, r2
   148e0:	strb	r0, [r1]
   148e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148e8:	add	r0, r0, #1
   148ec:	str	r0, [fp, #-44]	; 0xffffffd4
   148f0:	b	148f4 <__assert_fail@plt+0x38dc>
   148f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   148f8:	add	r0, r0, #1
   148fc:	str	r0, [fp, #-52]	; 0xffffffcc
   14900:	b	148a8 <__assert_fail@plt+0x3890>
   14904:	b	14908 <__assert_fail@plt+0x38f0>
   14908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1490c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14910:	cmp	r0, r1
   14914:	bcs	1492c <__assert_fail@plt+0x3914>
   14918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1491c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14920:	add	r0, r0, r1
   14924:	movw	r1, #0
   14928:	strb	r1, [r0]
   1492c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14930:	str	r0, [fp, #-20]	; 0xffffffec
   14934:	b	149a0 <__assert_fail@plt+0x3988>
   14938:	ldr	r0, [fp, #8]
   1493c:	cmp	r0, #2
   14940:	bne	14958 <__assert_fail@plt+0x3940>
   14944:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14948:	tst	r0, #1
   1494c:	beq	14958 <__assert_fail@plt+0x3940>
   14950:	movw	r0, #4
   14954:	str	r0, [fp, #8]
   14958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1495c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14960:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14964:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14968:	ldr	ip, [fp, #8]
   1496c:	ldr	lr, [fp, #12]
   14970:	mvn	r4, #2
   14974:	and	lr, lr, r4
   14978:	ldr	r4, [fp, #20]
   1497c:	ldr	r5, [fp, #24]
   14980:	str	ip, [sp]
   14984:	str	lr, [sp, #4]
   14988:	movw	ip, #0
   1498c:	str	ip, [sp, #8]
   14990:	str	r4, [sp, #12]
   14994:	str	r5, [sp, #16]
   14998:	bl	13274 <__assert_fail@plt+0x225c>
   1499c:	str	r0, [fp, #-20]	; 0xffffffec
   149a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   149a4:	sub	sp, fp, #16
   149a8:	pop	{r4, r5, r6, sl, fp, pc}
   149ac:	push	{fp, lr}
   149b0:	mov	fp, sp
   149b4:	sub	sp, sp, #16
   149b8:	str	r0, [fp, #-4]
   149bc:	str	r1, [sp, #8]
   149c0:	str	r2, [sp, #4]
   149c4:	ldr	r0, [fp, #-4]
   149c8:	ldr	r1, [sp, #8]
   149cc:	ldr	r3, [sp, #4]
   149d0:	movw	r2, #0
   149d4:	bl	149e0 <__assert_fail@plt+0x39c8>
   149d8:	mov	sp, fp
   149dc:	pop	{fp, pc}
   149e0:	push	{r4, r5, r6, sl, fp, lr}
   149e4:	add	fp, sp, #16
   149e8:	sub	sp, sp, #72	; 0x48
   149ec:	str	r0, [fp, #-20]	; 0xffffffec
   149f0:	str	r1, [fp, #-24]	; 0xffffffe8
   149f4:	str	r2, [fp, #-28]	; 0xffffffe4
   149f8:	str	r3, [fp, #-32]	; 0xffffffe0
   149fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a00:	movw	r1, #0
   14a04:	cmp	r0, r1
   14a08:	beq	14a18 <__assert_fail@plt+0x3a00>
   14a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a10:	str	r0, [sp, #32]
   14a14:	b	14a28 <__assert_fail@plt+0x3a10>
   14a18:	movw	r0, #49524	; 0xc174
   14a1c:	movt	r0, #2
   14a20:	str	r0, [sp, #32]
   14a24:	b	14a28 <__assert_fail@plt+0x3a10>
   14a28:	ldr	r0, [sp, #32]
   14a2c:	str	r0, [fp, #-36]	; 0xffffffdc
   14a30:	bl	10f70 <__errno_location@plt>
   14a34:	ldr	r0, [r0]
   14a38:	str	r0, [fp, #-40]	; 0xffffffd8
   14a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a40:	ldr	r0, [r0, #4]
   14a44:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14a48:	movw	r1, #0
   14a4c:	cmp	lr, r1
   14a50:	movw	lr, #0
   14a54:	movne	lr, #1
   14a58:	tst	lr, #1
   14a5c:	mov	lr, r1
   14a60:	moveq	lr, #1
   14a64:	orr	r0, r0, lr
   14a68:	str	r0, [sp, #44]	; 0x2c
   14a6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a78:	ldr	r0, [r0]
   14a7c:	ldr	lr, [sp, #44]	; 0x2c
   14a80:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14a84:	add	ip, ip, #8
   14a88:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14a8c:	ldr	r4, [r4, #40]	; 0x28
   14a90:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14a94:	ldr	r5, [r5, #44]	; 0x2c
   14a98:	str	r0, [sp, #28]
   14a9c:	mov	r0, r1
   14aa0:	ldr	r6, [sp, #28]
   14aa4:	str	r6, [sp]
   14aa8:	str	lr, [sp, #4]
   14aac:	str	ip, [sp, #8]
   14ab0:	str	r4, [sp, #12]
   14ab4:	str	r5, [sp, #16]
   14ab8:	bl	13274 <__assert_fail@plt+0x225c>
   14abc:	add	r0, r0, #1
   14ac0:	str	r0, [sp, #40]	; 0x28
   14ac4:	ldr	r0, [sp, #40]	; 0x28
   14ac8:	bl	16374 <__assert_fail@plt+0x535c>
   14acc:	str	r0, [sp, #36]	; 0x24
   14ad0:	ldr	r0, [sp, #36]	; 0x24
   14ad4:	ldr	r1, [sp, #40]	; 0x28
   14ad8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ae0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14ae4:	ldr	ip, [ip]
   14ae8:	ldr	lr, [sp, #44]	; 0x2c
   14aec:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14af0:	add	r4, r4, #8
   14af4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14af8:	ldr	r5, [r5, #40]	; 0x28
   14afc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14b00:	ldr	r6, [r6, #44]	; 0x2c
   14b04:	str	ip, [sp]
   14b08:	str	lr, [sp, #4]
   14b0c:	str	r4, [sp, #8]
   14b10:	str	r5, [sp, #12]
   14b14:	str	r6, [sp, #16]
   14b18:	bl	13274 <__assert_fail@plt+0x225c>
   14b1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b20:	str	r0, [sp, #24]
   14b24:	str	r1, [sp, #20]
   14b28:	bl	10f70 <__errno_location@plt>
   14b2c:	ldr	r1, [sp, #20]
   14b30:	str	r1, [r0]
   14b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14b38:	movw	r2, #0
   14b3c:	cmp	r0, r2
   14b40:	beq	14b54 <__assert_fail@plt+0x3b3c>
   14b44:	ldr	r0, [sp, #40]	; 0x28
   14b48:	sub	r0, r0, #1
   14b4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b50:	str	r0, [r1]
   14b54:	ldr	r0, [sp, #36]	; 0x24
   14b58:	sub	sp, fp, #16
   14b5c:	pop	{r4, r5, r6, sl, fp, pc}
   14b60:	push	{fp, lr}
   14b64:	mov	fp, sp
   14b68:	sub	sp, sp, #8
   14b6c:	movw	r0, #49388	; 0xc0ec
   14b70:	movt	r0, #2
   14b74:	ldr	r0, [r0]
   14b78:	str	r0, [sp, #4]
   14b7c:	movw	r0, #1
   14b80:	str	r0, [sp]
   14b84:	ldr	r0, [sp]
   14b88:	movw	r1, #49392	; 0xc0f0
   14b8c:	movt	r1, #2
   14b90:	ldr	r1, [r1]
   14b94:	cmp	r0, r1
   14b98:	bge	14bc0 <__assert_fail@plt+0x3ba8>
   14b9c:	ldr	r0, [sp, #4]
   14ba0:	ldr	r1, [sp]
   14ba4:	add	r0, r0, r1, lsl #3
   14ba8:	ldr	r0, [r0, #4]
   14bac:	bl	19460 <__assert_fail@plt+0x8448>
   14bb0:	ldr	r0, [sp]
   14bb4:	add	r0, r0, #1
   14bb8:	str	r0, [sp]
   14bbc:	b	14b84 <__assert_fail@plt+0x3b6c>
   14bc0:	ldr	r0, [sp, #4]
   14bc4:	ldr	r0, [r0, #4]
   14bc8:	movw	r1, #49572	; 0xc1a4
   14bcc:	movt	r1, #2
   14bd0:	cmp	r0, r1
   14bd4:	beq	14c00 <__assert_fail@plt+0x3be8>
   14bd8:	ldr	r0, [sp, #4]
   14bdc:	ldr	r0, [r0, #4]
   14be0:	bl	19460 <__assert_fail@plt+0x8448>
   14be4:	movw	r0, #256	; 0x100
   14be8:	movw	lr, #49396	; 0xc0f4
   14bec:	movt	lr, #2
   14bf0:	str	r0, [lr]
   14bf4:	movw	r0, #49572	; 0xc1a4
   14bf8:	movt	r0, #2
   14bfc:	str	r0, [lr, #4]
   14c00:	ldr	r0, [sp, #4]
   14c04:	movw	r1, #49396	; 0xc0f4
   14c08:	movt	r1, #2
   14c0c:	cmp	r0, r1
   14c10:	beq	14c30 <__assert_fail@plt+0x3c18>
   14c14:	ldr	r0, [sp, #4]
   14c18:	bl	19460 <__assert_fail@plt+0x8448>
   14c1c:	movw	r0, #49388	; 0xc0ec
   14c20:	movt	r0, #2
   14c24:	movw	lr, #49396	; 0xc0f4
   14c28:	movt	lr, #2
   14c2c:	str	lr, [r0]
   14c30:	movw	r0, #49392	; 0xc0f0
   14c34:	movt	r0, #2
   14c38:	movw	r1, #1
   14c3c:	str	r1, [r0]
   14c40:	mov	sp, fp
   14c44:	pop	{fp, pc}
   14c48:	push	{fp, lr}
   14c4c:	mov	fp, sp
   14c50:	sub	sp, sp, #8
   14c54:	str	r0, [sp, #4]
   14c58:	str	r1, [sp]
   14c5c:	ldr	r0, [sp, #4]
   14c60:	ldr	r1, [sp]
   14c64:	mvn	r2, #0
   14c68:	movw	r3, #49524	; 0xc174
   14c6c:	movt	r3, #2
   14c70:	bl	14c7c <__assert_fail@plt+0x3c64>
   14c74:	mov	sp, fp
   14c78:	pop	{fp, pc}
   14c7c:	push	{r4, r5, r6, sl, fp, lr}
   14c80:	add	fp, sp, #16
   14c84:	sub	sp, sp, #88	; 0x58
   14c88:	str	r0, [fp, #-20]	; 0xffffffec
   14c8c:	str	r1, [fp, #-24]	; 0xffffffe8
   14c90:	str	r2, [fp, #-28]	; 0xffffffe4
   14c94:	str	r3, [fp, #-32]	; 0xffffffe0
   14c98:	bl	10f70 <__errno_location@plt>
   14c9c:	ldr	r1, [pc, #676]	; 14f48 <__assert_fail@plt+0x3f30>
   14ca0:	ldr	r0, [r0]
   14ca4:	str	r0, [fp, #-36]	; 0xffffffdc
   14ca8:	movw	r0, #49388	; 0xc0ec
   14cac:	movt	r0, #2
   14cb0:	ldr	r0, [r0]
   14cb4:	str	r0, [fp, #-40]	; 0xffffffd8
   14cb8:	str	r1, [fp, #-44]	; 0xffffffd4
   14cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cc0:	movw	r1, #0
   14cc4:	cmp	r1, r0
   14cc8:	bgt	14cdc <__assert_fail@plt+0x3cc4>
   14ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cd4:	cmp	r0, r1
   14cd8:	blt	14ce0 <__assert_fail@plt+0x3cc8>
   14cdc:	bl	11000 <abort@plt>
   14ce0:	movw	r0, #49392	; 0xc0f0
   14ce4:	movt	r0, #2
   14ce8:	ldr	r0, [r0]
   14cec:	ldr	r1, [fp, #-20]	; 0xffffffec
   14cf0:	cmp	r0, r1
   14cf4:	bgt	14dec <__assert_fail@plt+0x3dd4>
   14cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cfc:	movw	r1, #49396	; 0xc0f4
   14d00:	movt	r1, #2
   14d04:	cmp	r0, r1
   14d08:	movw	r0, #0
   14d0c:	moveq	r0, #1
   14d10:	and	r0, r0, #1
   14d14:	strb	r0, [fp, #-45]	; 0xffffffd3
   14d18:	movw	r0, #49392	; 0xc0f0
   14d1c:	movt	r0, #2
   14d20:	ldr	r0, [r0]
   14d24:	str	r0, [sp, #52]	; 0x34
   14d28:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14d2c:	tst	r0, #1
   14d30:	beq	14d40 <__assert_fail@plt+0x3d28>
   14d34:	movw	r0, #0
   14d38:	str	r0, [sp, #32]
   14d3c:	b	14d48 <__assert_fail@plt+0x3d30>
   14d40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d44:	str	r0, [sp, #32]
   14d48:	ldr	r0, [sp, #32]
   14d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d50:	movw	r2, #49392	; 0xc0f0
   14d54:	movt	r2, #2
   14d58:	ldr	r2, [r2]
   14d5c:	sub	r1, r1, r2
   14d60:	add	r2, r1, #1
   14d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14d68:	add	r1, sp, #52	; 0x34
   14d6c:	movw	ip, #8
   14d70:	str	ip, [sp]
   14d74:	bl	165b0 <__assert_fail@plt+0x5598>
   14d78:	str	r0, [fp, #-40]	; 0xffffffd8
   14d7c:	movw	r1, #49388	; 0xc0ec
   14d80:	movt	r1, #2
   14d84:	str	r0, [r1]
   14d88:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14d8c:	tst	r0, #1
   14d90:	beq	14db0 <__assert_fail@plt+0x3d98>
   14d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d98:	movw	r1, #49396	; 0xc0f4
   14d9c:	movt	r1, #2
   14da0:	ldr	r2, [r1]
   14da4:	str	r2, [r0]
   14da8:	ldr	r1, [r1, #4]
   14dac:	str	r1, [r0, #4]
   14db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14db4:	movw	r1, #49392	; 0xc0f0
   14db8:	movt	r1, #2
   14dbc:	ldr	r1, [r1]
   14dc0:	add	r0, r0, r1, lsl #3
   14dc4:	ldr	r2, [sp, #52]	; 0x34
   14dc8:	sub	r1, r2, r1
   14dcc:	lsl	r2, r1, #3
   14dd0:	movw	r1, #0
   14dd4:	and	r1, r1, #255	; 0xff
   14dd8:	bl	10f88 <memset@plt>
   14ddc:	ldr	r0, [sp, #52]	; 0x34
   14de0:	movw	r1, #49392	; 0xc0f0
   14de4:	movt	r1, #2
   14de8:	str	r0, [r1]
   14dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14df4:	ldr	r0, [r0, r1, lsl #3]
   14df8:	str	r0, [sp, #48]	; 0x30
   14dfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e04:	add	r0, r0, r1, lsl #3
   14e08:	ldr	r0, [r0, #4]
   14e0c:	str	r0, [sp, #44]	; 0x2c
   14e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e14:	ldr	r0, [r0, #4]
   14e18:	orr	r0, r0, #1
   14e1c:	str	r0, [sp, #40]	; 0x28
   14e20:	ldr	r0, [sp, #44]	; 0x2c
   14e24:	ldr	r1, [sp, #48]	; 0x30
   14e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e30:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14e34:	ldr	ip, [ip]
   14e38:	ldr	lr, [sp, #40]	; 0x28
   14e3c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14e40:	add	r4, r4, #8
   14e44:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14e48:	ldr	r5, [r5, #40]	; 0x28
   14e4c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14e50:	ldr	r6, [r6, #44]	; 0x2c
   14e54:	str	ip, [sp]
   14e58:	str	lr, [sp, #4]
   14e5c:	str	r4, [sp, #8]
   14e60:	str	r5, [sp, #12]
   14e64:	str	r6, [sp, #16]
   14e68:	bl	13274 <__assert_fail@plt+0x225c>
   14e6c:	str	r0, [sp, #36]	; 0x24
   14e70:	ldr	r0, [sp, #48]	; 0x30
   14e74:	ldr	r1, [sp, #36]	; 0x24
   14e78:	cmp	r0, r1
   14e7c:	bhi	14f28 <__assert_fail@plt+0x3f10>
   14e80:	ldr	r0, [sp, #36]	; 0x24
   14e84:	add	r0, r0, #1
   14e88:	str	r0, [sp, #48]	; 0x30
   14e8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e90:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e94:	add	r1, r1, r2, lsl #3
   14e98:	str	r0, [r1]
   14e9c:	ldr	r0, [sp, #44]	; 0x2c
   14ea0:	movw	r1, #49572	; 0xc1a4
   14ea4:	movt	r1, #2
   14ea8:	cmp	r0, r1
   14eac:	beq	14eb8 <__assert_fail@plt+0x3ea0>
   14eb0:	ldr	r0, [sp, #44]	; 0x2c
   14eb4:	bl	19460 <__assert_fail@plt+0x8448>
   14eb8:	ldr	r0, [sp, #48]	; 0x30
   14ebc:	bl	16374 <__assert_fail@plt+0x535c>
   14ec0:	mov	lr, r0
   14ec4:	str	r0, [sp, #44]	; 0x2c
   14ec8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ecc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ed0:	add	r0, r0, r1, lsl #3
   14ed4:	str	lr, [r0, #4]
   14ed8:	ldr	r0, [sp, #44]	; 0x2c
   14edc:	ldr	r1, [sp, #48]	; 0x30
   14ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ee8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14eec:	ldr	lr, [lr]
   14ef0:	ldr	ip, [sp, #40]	; 0x28
   14ef4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14ef8:	add	r4, r4, #8
   14efc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14f00:	ldr	r5, [r5, #40]	; 0x28
   14f04:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14f08:	ldr	r6, [r6, #44]	; 0x2c
   14f0c:	str	lr, [sp]
   14f10:	str	ip, [sp, #4]
   14f14:	str	r4, [sp, #8]
   14f18:	str	r5, [sp, #12]
   14f1c:	str	r6, [sp, #16]
   14f20:	bl	13274 <__assert_fail@plt+0x225c>
   14f24:	str	r0, [sp, #28]
   14f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f2c:	str	r0, [sp, #24]
   14f30:	bl	10f70 <__errno_location@plt>
   14f34:	ldr	lr, [sp, #24]
   14f38:	str	lr, [r0]
   14f3c:	ldr	r0, [sp, #44]	; 0x2c
   14f40:	sub	sp, fp, #16
   14f44:	pop	{r4, r5, r6, sl, fp, pc}
   14f48:	svcvc	0x00ffffff
   14f4c:	push	{fp, lr}
   14f50:	mov	fp, sp
   14f54:	sub	sp, sp, #16
   14f58:	str	r0, [fp, #-4]
   14f5c:	str	r1, [sp, #8]
   14f60:	str	r2, [sp, #4]
   14f64:	ldr	r0, [fp, #-4]
   14f68:	ldr	r1, [sp, #8]
   14f6c:	ldr	r2, [sp, #4]
   14f70:	movw	r3, #49524	; 0xc174
   14f74:	movt	r3, #2
   14f78:	bl	14c7c <__assert_fail@plt+0x3c64>
   14f7c:	mov	sp, fp
   14f80:	pop	{fp, pc}
   14f84:	push	{fp, lr}
   14f88:	mov	fp, sp
   14f8c:	sub	sp, sp, #8
   14f90:	str	r0, [sp, #4]
   14f94:	ldr	r1, [sp, #4]
   14f98:	movw	r0, #0
   14f9c:	bl	14c48 <__assert_fail@plt+0x3c30>
   14fa0:	mov	sp, fp
   14fa4:	pop	{fp, pc}
   14fa8:	push	{fp, lr}
   14fac:	mov	fp, sp
   14fb0:	sub	sp, sp, #8
   14fb4:	str	r0, [sp, #4]
   14fb8:	str	r1, [sp]
   14fbc:	ldr	r1, [sp, #4]
   14fc0:	ldr	r2, [sp]
   14fc4:	movw	r0, #0
   14fc8:	bl	14f4c <__assert_fail@plt+0x3f34>
   14fcc:	mov	sp, fp
   14fd0:	pop	{fp, pc}
   14fd4:	push	{fp, lr}
   14fd8:	mov	fp, sp
   14fdc:	sub	sp, sp, #64	; 0x40
   14fe0:	str	r0, [fp, #-4]
   14fe4:	str	r1, [fp, #-8]
   14fe8:	str	r2, [fp, #-12]
   14fec:	ldr	r1, [fp, #-8]
   14ff0:	add	r0, sp, #4
   14ff4:	bl	15014 <__assert_fail@plt+0x3ffc>
   14ff8:	ldr	r0, [fp, #-4]
   14ffc:	ldr	r1, [fp, #-12]
   15000:	mvn	r2, #0
   15004:	add	r3, sp, #4
   15008:	bl	14c7c <__assert_fail@plt+0x3c64>
   1500c:	mov	sp, fp
   15010:	pop	{fp, pc}
   15014:	push	{fp, lr}
   15018:	mov	fp, sp
   1501c:	sub	sp, sp, #8
   15020:	str	r1, [sp, #4]
   15024:	mov	r1, r0
   15028:	str	r0, [sp]
   1502c:	mov	r0, r1
   15030:	movw	r1, #0
   15034:	and	r1, r1, #255	; 0xff
   15038:	movw	r2, #48	; 0x30
   1503c:	bl	10f88 <memset@plt>
   15040:	ldr	r0, [sp, #4]
   15044:	cmp	r0, #10
   15048:	bne	15050 <__assert_fail@plt+0x4038>
   1504c:	bl	11000 <abort@plt>
   15050:	ldr	r0, [sp, #4]
   15054:	ldr	r1, [sp]
   15058:	str	r0, [r1]
   1505c:	mov	sp, fp
   15060:	pop	{fp, pc}
   15064:	push	{fp, lr}
   15068:	mov	fp, sp
   1506c:	sub	sp, sp, #64	; 0x40
   15070:	str	r0, [fp, #-4]
   15074:	str	r1, [fp, #-8]
   15078:	str	r2, [fp, #-12]
   1507c:	str	r3, [fp, #-16]
   15080:	ldr	r1, [fp, #-8]
   15084:	mov	r0, sp
   15088:	bl	15014 <__assert_fail@plt+0x3ffc>
   1508c:	ldr	r0, [fp, #-4]
   15090:	ldr	r1, [fp, #-12]
   15094:	ldr	r2, [fp, #-16]
   15098:	mov	r3, sp
   1509c:	bl	14c7c <__assert_fail@plt+0x3c64>
   150a0:	mov	sp, fp
   150a4:	pop	{fp, pc}
   150a8:	push	{fp, lr}
   150ac:	mov	fp, sp
   150b0:	sub	sp, sp, #8
   150b4:	str	r0, [sp, #4]
   150b8:	str	r1, [sp]
   150bc:	ldr	r1, [sp, #4]
   150c0:	ldr	r2, [sp]
   150c4:	movw	r0, #0
   150c8:	bl	14fd4 <__assert_fail@plt+0x3fbc>
   150cc:	mov	sp, fp
   150d0:	pop	{fp, pc}
   150d4:	push	{fp, lr}
   150d8:	mov	fp, sp
   150dc:	sub	sp, sp, #16
   150e0:	str	r0, [fp, #-4]
   150e4:	str	r1, [sp, #8]
   150e8:	str	r2, [sp, #4]
   150ec:	ldr	r1, [fp, #-4]
   150f0:	ldr	r2, [sp, #8]
   150f4:	ldr	r3, [sp, #4]
   150f8:	movw	r0, #0
   150fc:	bl	15064 <__assert_fail@plt+0x404c>
   15100:	mov	sp, fp
   15104:	pop	{fp, pc}
   15108:	push	{fp, lr}
   1510c:	mov	fp, sp
   15110:	sub	sp, sp, #72	; 0x48
   15114:	movw	r3, #49524	; 0xc174
   15118:	movt	r3, #2
   1511c:	str	r0, [fp, #-4]
   15120:	str	r1, [fp, #-8]
   15124:	strb	r2, [fp, #-9]
   15128:	add	r0, sp, #12
   1512c:	mov	r1, r0
   15130:	str	r0, [sp, #8]
   15134:	mov	r0, r1
   15138:	mov	r1, r3
   1513c:	movw	r2, #48	; 0x30
   15140:	bl	10e2c <memcpy@plt>
   15144:	ldr	r0, [sp, #8]
   15148:	ldrb	r1, [fp, #-9]
   1514c:	movw	r2, #1
   15150:	bl	13018 <__assert_fail@plt+0x2000>
   15154:	ldr	r1, [fp, #-4]
   15158:	ldr	r2, [fp, #-8]
   1515c:	movw	r3, #0
   15160:	str	r0, [sp, #4]
   15164:	mov	r0, r3
   15168:	add	r3, sp, #12
   1516c:	bl	14c7c <__assert_fail@plt+0x3c64>
   15170:	mov	sp, fp
   15174:	pop	{fp, pc}
   15178:	push	{fp, lr}
   1517c:	mov	fp, sp
   15180:	sub	sp, sp, #8
   15184:	str	r0, [sp, #4]
   15188:	strb	r1, [sp, #3]
   1518c:	ldr	r0, [sp, #4]
   15190:	mvn	r1, #0
   15194:	ldrb	r2, [sp, #3]
   15198:	bl	15108 <__assert_fail@plt+0x40f0>
   1519c:	mov	sp, fp
   151a0:	pop	{fp, pc}
   151a4:	push	{fp, lr}
   151a8:	mov	fp, sp
   151ac:	sub	sp, sp, #8
   151b0:	str	r0, [sp, #4]
   151b4:	ldr	r0, [sp, #4]
   151b8:	movw	r1, #58	; 0x3a
   151bc:	and	r1, r1, #255	; 0xff
   151c0:	bl	15178 <__assert_fail@plt+0x4160>
   151c4:	mov	sp, fp
   151c8:	pop	{fp, pc}
   151cc:	push	{fp, lr}
   151d0:	mov	fp, sp
   151d4:	sub	sp, sp, #8
   151d8:	str	r0, [sp, #4]
   151dc:	str	r1, [sp]
   151e0:	ldr	r0, [sp, #4]
   151e4:	ldr	r1, [sp]
   151e8:	movw	r2, #58	; 0x3a
   151ec:	and	r2, r2, #255	; 0xff
   151f0:	bl	15108 <__assert_fail@plt+0x40f0>
   151f4:	mov	sp, fp
   151f8:	pop	{fp, pc}
   151fc:	push	{fp, lr}
   15200:	mov	fp, sp
   15204:	sub	sp, sp, #120	; 0x78
   15208:	str	r0, [fp, #-4]
   1520c:	str	r1, [fp, #-8]
   15210:	str	r2, [fp, #-12]
   15214:	ldr	r1, [fp, #-8]
   15218:	add	r0, sp, #12
   1521c:	bl	15014 <__assert_fail@plt+0x3ffc>
   15220:	add	r0, sp, #60	; 0x3c
   15224:	mov	r1, r0
   15228:	add	r2, sp, #12
   1522c:	str	r0, [sp, #8]
   15230:	mov	r0, r1
   15234:	mov	r1, r2
   15238:	movw	r2, #48	; 0x30
   1523c:	bl	10e2c <memcpy@plt>
   15240:	ldr	r0, [sp, #8]
   15244:	movw	r1, #58	; 0x3a
   15248:	and	r1, r1, #255	; 0xff
   1524c:	movw	r2, #1
   15250:	bl	13018 <__assert_fail@plt+0x2000>
   15254:	ldr	r1, [fp, #-4]
   15258:	ldr	r2, [fp, #-12]
   1525c:	str	r0, [sp, #4]
   15260:	mov	r0, r1
   15264:	mov	r1, r2
   15268:	mvn	r2, #0
   1526c:	add	r3, sp, #60	; 0x3c
   15270:	bl	14c7c <__assert_fail@plt+0x3c64>
   15274:	mov	sp, fp
   15278:	pop	{fp, pc}
   1527c:	push	{fp, lr}
   15280:	mov	fp, sp
   15284:	sub	sp, sp, #24
   15288:	str	r0, [fp, #-4]
   1528c:	str	r1, [fp, #-8]
   15290:	str	r2, [sp, #12]
   15294:	str	r3, [sp, #8]
   15298:	ldr	r0, [fp, #-4]
   1529c:	ldr	r1, [fp, #-8]
   152a0:	ldr	r2, [sp, #12]
   152a4:	ldr	r3, [sp, #8]
   152a8:	mvn	ip, #0
   152ac:	str	ip, [sp]
   152b0:	bl	152bc <__assert_fail@plt+0x42a4>
   152b4:	mov	sp, fp
   152b8:	pop	{fp, pc}
   152bc:	push	{fp, lr}
   152c0:	mov	fp, sp
   152c4:	sub	sp, sp, #72	; 0x48
   152c8:	ldr	ip, [fp, #8]
   152cc:	movw	lr, #49524	; 0xc174
   152d0:	movt	lr, #2
   152d4:	str	r0, [fp, #-4]
   152d8:	str	r1, [fp, #-8]
   152dc:	str	r2, [fp, #-12]
   152e0:	str	r3, [fp, #-16]
   152e4:	add	r0, sp, #8
   152e8:	mov	r1, r0
   152ec:	str	r0, [sp, #4]
   152f0:	mov	r0, r1
   152f4:	mov	r1, lr
   152f8:	movw	r2, #48	; 0x30
   152fc:	str	ip, [sp]
   15300:	bl	10e2c <memcpy@plt>
   15304:	ldr	r1, [fp, #-8]
   15308:	ldr	r2, [fp, #-12]
   1530c:	ldr	r0, [sp, #4]
   15310:	bl	13118 <__assert_fail@plt+0x2100>
   15314:	ldr	r0, [fp, #-4]
   15318:	ldr	r1, [fp, #-16]
   1531c:	ldr	r2, [fp, #8]
   15320:	add	r3, sp, #8
   15324:	bl	14c7c <__assert_fail@plt+0x3c64>
   15328:	mov	sp, fp
   1532c:	pop	{fp, pc}
   15330:	push	{fp, lr}
   15334:	mov	fp, sp
   15338:	sub	sp, sp, #16
   1533c:	str	r0, [fp, #-4]
   15340:	str	r1, [sp, #8]
   15344:	str	r2, [sp, #4]
   15348:	ldr	r1, [fp, #-4]
   1534c:	ldr	r2, [sp, #8]
   15350:	ldr	r3, [sp, #4]
   15354:	movw	r0, #0
   15358:	bl	1527c <__assert_fail@plt+0x4264>
   1535c:	mov	sp, fp
   15360:	pop	{fp, pc}
   15364:	push	{fp, lr}
   15368:	mov	fp, sp
   1536c:	sub	sp, sp, #24
   15370:	str	r0, [fp, #-4]
   15374:	str	r1, [fp, #-8]
   15378:	str	r2, [sp, #12]
   1537c:	str	r3, [sp, #8]
   15380:	ldr	r1, [fp, #-4]
   15384:	ldr	r2, [fp, #-8]
   15388:	ldr	r3, [sp, #12]
   1538c:	ldr	r0, [sp, #8]
   15390:	movw	ip, #0
   15394:	str	r0, [sp, #4]
   15398:	mov	r0, ip
   1539c:	ldr	ip, [sp, #4]
   153a0:	str	ip, [sp]
   153a4:	bl	152bc <__assert_fail@plt+0x42a4>
   153a8:	mov	sp, fp
   153ac:	pop	{fp, pc}
   153b0:	push	{fp, lr}
   153b4:	mov	fp, sp
   153b8:	sub	sp, sp, #16
   153bc:	str	r0, [fp, #-4]
   153c0:	str	r1, [sp, #8]
   153c4:	str	r2, [sp, #4]
   153c8:	ldr	r0, [fp, #-4]
   153cc:	ldr	r1, [sp, #8]
   153d0:	ldr	r2, [sp, #4]
   153d4:	movw	r3, #49404	; 0xc0fc
   153d8:	movt	r3, #2
   153dc:	bl	14c7c <__assert_fail@plt+0x3c64>
   153e0:	mov	sp, fp
   153e4:	pop	{fp, pc}
   153e8:	push	{fp, lr}
   153ec:	mov	fp, sp
   153f0:	sub	sp, sp, #8
   153f4:	str	r0, [sp, #4]
   153f8:	str	r1, [sp]
   153fc:	ldr	r1, [sp, #4]
   15400:	ldr	r2, [sp]
   15404:	movw	r0, #0
   15408:	bl	153b0 <__assert_fail@plt+0x4398>
   1540c:	mov	sp, fp
   15410:	pop	{fp, pc}
   15414:	push	{fp, lr}
   15418:	mov	fp, sp
   1541c:	sub	sp, sp, #8
   15420:	str	r0, [sp, #4]
   15424:	str	r1, [sp]
   15428:	ldr	r0, [sp, #4]
   1542c:	ldr	r1, [sp]
   15430:	mvn	r2, #0
   15434:	bl	153b0 <__assert_fail@plt+0x4398>
   15438:	mov	sp, fp
   1543c:	pop	{fp, pc}
   15440:	push	{fp, lr}
   15444:	mov	fp, sp
   15448:	sub	sp, sp, #8
   1544c:	str	r0, [sp, #4]
   15450:	ldr	r1, [sp, #4]
   15454:	movw	r0, #0
   15458:	bl	15414 <__assert_fail@plt+0x43fc>
   1545c:	mov	sp, fp
   15460:	pop	{fp, pc}
   15464:	push	{fp, lr}
   15468:	mov	fp, sp
   1546c:	sub	sp, sp, #24
   15470:	str	r0, [fp, #-8]
   15474:	str	r1, [sp, #12]
   15478:	ldr	r0, [fp, #-8]
   1547c:	bl	10f4c <gettext@plt>
   15480:	str	r0, [sp, #8]
   15484:	ldr	r0, [sp, #8]
   15488:	ldr	r1, [fp, #-8]
   1548c:	cmp	r0, r1
   15490:	beq	154a0 <__assert_fail@plt+0x4488>
   15494:	ldr	r0, [sp, #8]
   15498:	str	r0, [fp, #-4]
   1549c:	b	1556c <__assert_fail@plt+0x4554>
   154a0:	bl	19674 <__assert_fail@plt+0x865c>
   154a4:	str	r0, [sp, #4]
   154a8:	ldr	r0, [sp, #4]
   154ac:	movw	r1, #47910	; 0xbb26
   154b0:	movt	r1, #1
   154b4:	bl	192d8 <__assert_fail@plt+0x82c0>
   154b8:	cmp	r0, #0
   154bc:	bne	154f4 <__assert_fail@plt+0x44dc>
   154c0:	ldr	r0, [fp, #-8]
   154c4:	ldrb	r0, [r0]
   154c8:	cmp	r0, #96	; 0x60
   154cc:	movw	r0, #0
   154d0:	moveq	r0, #1
   154d4:	tst	r0, #1
   154d8:	movw	r0, #47920	; 0xbb30
   154dc:	movt	r0, #1
   154e0:	movw	r1, #47916	; 0xbb2c
   154e4:	movt	r1, #1
   154e8:	movne	r0, r1
   154ec:	str	r0, [fp, #-4]
   154f0:	b	1556c <__assert_fail@plt+0x4554>
   154f4:	ldr	r0, [sp, #4]
   154f8:	movw	r1, #47924	; 0xbb34
   154fc:	movt	r1, #1
   15500:	bl	192d8 <__assert_fail@plt+0x82c0>
   15504:	cmp	r0, #0
   15508:	bne	15540 <__assert_fail@plt+0x4528>
   1550c:	ldr	r0, [fp, #-8]
   15510:	ldrb	r0, [r0]
   15514:	cmp	r0, #96	; 0x60
   15518:	movw	r0, #0
   1551c:	moveq	r0, #1
   15520:	tst	r0, #1
   15524:	movw	r0, #47936	; 0xbb40
   15528:	movt	r0, #1
   1552c:	movw	r1, #47932	; 0xbb3c
   15530:	movt	r1, #1
   15534:	movne	r0, r1
   15538:	str	r0, [fp, #-4]
   1553c:	b	1556c <__assert_fail@plt+0x4554>
   15540:	ldr	r0, [sp, #12]
   15544:	cmp	r0, #9
   15548:	movw	r0, #0
   1554c:	moveq	r0, #1
   15550:	tst	r0, #1
   15554:	movw	r0, #47908	; 0xbb24
   15558:	movt	r0, #1
   1555c:	movw	r1, #47904	; 0xbb20
   15560:	movt	r1, #1
   15564:	movne	r0, r1
   15568:	str	r0, [fp, #-4]
   1556c:	ldr	r0, [fp, #-4]
   15570:	mov	sp, fp
   15574:	pop	{fp, pc}
   15578:	sub	sp, sp, #4
   1557c:	str	r0, [sp]
   15580:	ldr	r0, [sp]
   15584:	movw	r1, #0
   15588:	str	r1, [r0]
   1558c:	ldr	r0, [sp]
   15590:	str	r1, [r0, #4]
   15594:	add	sp, sp, #4
   15598:	bx	lr
   1559c:	push	{fp, lr}
   155a0:	mov	fp, sp
   155a4:	sub	sp, sp, #88	; 0x58
   155a8:	add	ip, sp, #28
   155ac:	str	r0, [fp, #-8]
   155b0:	str	r1, [fp, #-12]
   155b4:	str	r2, [fp, #-16]
   155b8:	str	r3, [fp, #-20]	; 0xffffffec
   155bc:	mov	r0, ip
   155c0:	movw	r1, #0
   155c4:	and	r1, r1, #255	; 0xff
   155c8:	movw	r2, #32
   155cc:	bl	10f88 <memset@plt>
   155d0:	movw	r0, #0
   155d4:	str	r0, [fp, #-28]	; 0xffffffe4
   155d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   155dc:	ldr	r1, [fp, #-16]
   155e0:	cmp	r0, r1
   155e4:	bcs	15618 <__assert_fail@plt+0x4600>
   155e8:	add	r1, sp, #28
   155ec:	ldr	r0, [fp, #-12]
   155f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   155f4:	add	r0, r0, r2
   155f8:	ldrb	r0, [r0]
   155fc:	strb	r0, [sp, #27]
   15600:	ldrb	r0, [sp, #27]
   15604:	bl	15788 <__assert_fail@plt+0x4770>
   15608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1560c:	add	r0, r0, #1
   15610:	str	r0, [fp, #-28]	; 0xffffffe4
   15614:	b	155d8 <__assert_fail@plt+0x45c0>
   15618:	ldr	r0, [fp, #-8]
   1561c:	bl	10e50 <getc_unlocked@plt>
   15620:	str	r0, [fp, #-24]	; 0xffffffe8
   15624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15628:	cmp	r0, #0
   1562c:	movw	r0, #0
   15630:	str	r0, [sp, #12]
   15634:	blt	15648 <__assert_fail@plt+0x4630>
   15638:	add	r1, sp, #28
   1563c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15640:	bl	157cc <__assert_fail@plt+0x47b4>
   15644:	str	r0, [sp, #12]
   15648:	ldr	r0, [sp, #12]
   1564c:	tst	r0, #1
   15650:	beq	15668 <__assert_fail@plt+0x4650>
   15654:	b	15658 <__assert_fail@plt+0x4640>
   15658:	ldr	r0, [fp, #-8]
   1565c:	bl	10e50 <getc_unlocked@plt>
   15660:	str	r0, [fp, #-24]	; 0xffffffe8
   15664:	b	15624 <__assert_fail@plt+0x460c>
   15668:	ldr	r0, [fp, #-20]	; 0xffffffec
   1566c:	ldr	r0, [r0, #4]
   15670:	str	r0, [sp, #20]
   15674:	ldr	r0, [fp, #-20]	; 0xffffffec
   15678:	ldr	r0, [r0]
   1567c:	str	r0, [sp, #16]
   15680:	movw	r0, #0
   15684:	str	r0, [fp, #-28]	; 0xffffffe4
   15688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1568c:	cmp	r0, #0
   15690:	bge	156ac <__assert_fail@plt+0x4694>
   15694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15698:	cmp	r0, #0
   1569c:	bne	156ac <__assert_fail@plt+0x4694>
   156a0:	mvn	r0, #0
   156a4:	str	r0, [fp, #-4]
   156a8:	b	1577c <__assert_fail@plt+0x4764>
   156ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156b0:	ldr	r1, [sp, #16]
   156b4:	cmp	r0, r1
   156b8:	bne	156e0 <__assert_fail@plt+0x46c8>
   156bc:	ldr	r0, [sp, #20]
   156c0:	add	r1, sp, #16
   156c4:	movw	r2, #1
   156c8:	str	r2, [sp, #8]
   156cc:	mvn	r3, #0
   156d0:	ldr	ip, [sp, #8]
   156d4:	str	ip, [sp]
   156d8:	bl	165b0 <__assert_fail@plt+0x5598>
   156dc:	str	r0, [sp, #20]
   156e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e4:	cmp	r0, #0
   156e8:	bge	15704 <__assert_fail@plt+0x46ec>
   156ec:	ldr	r0, [sp, #20]
   156f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156f4:	add	r0, r0, r1
   156f8:	movw	r1, #0
   156fc:	strb	r1, [r0]
   15700:	b	1575c <__assert_fail@plt+0x4744>
   15704:	add	r1, sp, #28
   15708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1570c:	bl	157cc <__assert_fail@plt+0x47b4>
   15710:	tst	r0, #1
   15714:	beq	15730 <__assert_fail@plt+0x4718>
   15718:	ldr	r0, [sp, #20]
   1571c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15720:	add	r0, r0, r1
   15724:	movw	r1, #0
   15728:	strb	r1, [r0]
   1572c:	b	1575c <__assert_fail@plt+0x4744>
   15730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15734:	ldr	r1, [sp, #20]
   15738:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1573c:	add	r3, r2, #1
   15740:	str	r3, [fp, #-28]	; 0xffffffe4
   15744:	add	r1, r1, r2
   15748:	strb	r0, [r1]
   1574c:	ldr	r0, [fp, #-8]
   15750:	bl	10e50 <getc_unlocked@plt>
   15754:	str	r0, [fp, #-24]	; 0xffffffe8
   15758:	b	15688 <__assert_fail@plt+0x4670>
   1575c:	ldr	r0, [sp, #20]
   15760:	ldr	r1, [fp, #-20]	; 0xffffffec
   15764:	str	r0, [r1, #4]
   15768:	ldr	r0, [sp, #16]
   1576c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15770:	str	r0, [r1]
   15774:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15778:	str	r0, [fp, #-4]
   1577c:	ldr	r0, [fp, #-4]
   15780:	mov	sp, fp
   15784:	pop	{fp, pc}
   15788:	sub	sp, sp, #12
   1578c:	str	r0, [sp, #8]
   15790:	str	r1, [sp, #4]
   15794:	mov	r0, #1
   15798:	str	r0, [sp]
   1579c:	ldr	r0, [sp]
   157a0:	ldr	r1, [sp, #8]
   157a4:	and	r2, r1, #31
   157a8:	lsl	r0, r0, r2
   157ac:	ldr	r2, [sp, #4]
   157b0:	lsr	r1, r1, #5
   157b4:	add	r1, r2, r1, lsl #2
   157b8:	ldr	r2, [r1]
   157bc:	orr	r0, r2, r0
   157c0:	str	r0, [r1]
   157c4:	add	sp, sp, #12
   157c8:	bx	lr
   157cc:	sub	sp, sp, #8
   157d0:	str	r0, [sp, #4]
   157d4:	str	r1, [sp]
   157d8:	ldr	r0, [sp]
   157dc:	ldr	r1, [sp, #4]
   157e0:	lsr	r1, r1, #5
   157e4:	add	r0, r0, r1, lsl #2
   157e8:	ldr	r0, [r0]
   157ec:	ldr	r1, [sp, #4]
   157f0:	and	r1, r1, #31
   157f4:	lsr	r0, r0, r1
   157f8:	and	r0, r0, #1
   157fc:	cmp	r0, #0
   15800:	movw	r0, #0
   15804:	movne	r0, #1
   15808:	and	r0, r0, #1
   1580c:	add	sp, sp, #8
   15810:	bx	lr
   15814:	push	{fp, lr}
   15818:	mov	fp, sp
   1581c:	sub	sp, sp, #72	; 0x48
   15820:	ldr	ip, [fp, #12]
   15824:	ldr	lr, [fp, #8]
   15828:	str	r0, [fp, #-4]
   1582c:	str	r1, [fp, #-8]
   15830:	str	r2, [fp, #-12]
   15834:	str	r3, [fp, #-16]
   15838:	sub	r0, fp, #24
   1583c:	str	r0, [fp, #-28]	; 0xffffffe4
   15840:	ldr	r0, [fp, #-8]
   15844:	cmp	r0, #0
   15848:	str	lr, [sp, #16]
   1584c:	str	ip, [sp, #12]
   15850:	bne	15860 <__assert_fail@plt+0x4848>
   15854:	movw	r0, #64	; 0x40
   15858:	str	r0, [fp, #-8]
   1585c:	b	1586c <__assert_fail@plt+0x4854>
   15860:	ldr	r0, [fp, #-8]
   15864:	add	r0, r0, #1
   15868:	str	r0, [fp, #-8]
   1586c:	ldr	r0, [fp, #-8]
   15870:	str	r0, [sp, #32]
   15874:	ldr	r0, [sp, #32]
   15878:	movw	r1, #4
   1587c:	bl	16454 <__assert_fail@plt+0x543c>
   15880:	str	r0, [fp, #-32]	; 0xffffffe0
   15884:	ldr	r0, [sp, #32]
   15888:	movw	r1, #4
   1588c:	bl	16454 <__assert_fail@plt+0x543c>
   15890:	str	r0, [sp, #36]	; 0x24
   15894:	movw	r0, #0
   15898:	str	r0, [sp, #28]
   1589c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   158a0:	bl	15578 <__assert_fail@plt+0x4560>
   158a4:	ldr	r0, [fp, #-4]
   158a8:	ldr	r1, [fp, #-12]
   158ac:	ldr	r2, [fp, #-16]
   158b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158b4:	bl	1559c <__assert_fail@plt+0x4584>
   158b8:	str	r0, [sp, #20]
   158bc:	ldr	r0, [sp, #28]
   158c0:	ldr	r1, [sp, #32]
   158c4:	cmp	r0, r1
   158c8:	blt	15900 <__assert_fail@plt+0x48e8>
   158cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158d0:	add	r1, sp, #32
   158d4:	movw	r2, #1
   158d8:	mvn	r3, #0
   158dc:	movw	ip, #4
   158e0:	str	ip, [sp]
   158e4:	bl	165b0 <__assert_fail@plt+0x5598>
   158e8:	str	r0, [fp, #-32]	; 0xffffffe0
   158ec:	ldr	r0, [sp, #36]	; 0x24
   158f0:	ldr	r1, [sp, #32]
   158f4:	movw	r2, #4
   158f8:	bl	16288 <__assert_fail@plt+0x5270>
   158fc:	str	r0, [sp, #36]	; 0x24
   15900:	ldr	r0, [sp, #20]
   15904:	cmn	r0, #1
   15908:	bne	15934 <__assert_fail@plt+0x491c>
   1590c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15910:	ldr	r1, [sp, #28]
   15914:	mov	r2, #0
   15918:	str	r2, [r0, r1, lsl #2]
   1591c:	ldr	r0, [sp, #36]	; 0x24
   15920:	ldr	r1, [sp, #28]
   15924:	add	r0, r0, r1, lsl #2
   15928:	movw	r1, #0
   1592c:	str	r1, [r0]
   15930:	b	1599c <__assert_fail@plt+0x4984>
   15934:	ldr	r0, [sp, #20]
   15938:	add	r0, r0, #1
   1593c:	mov	r1, #1
   15940:	bl	16454 <__assert_fail@plt+0x543c>
   15944:	str	r0, [sp, #24]
   15948:	ldr	r0, [sp, #20]
   1594c:	ldr	r1, [sp, #36]	; 0x24
   15950:	ldr	lr, [sp, #28]
   15954:	str	r0, [r1, lr, lsl #2]
   15958:	ldr	r0, [sp, #24]
   1595c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15960:	ldr	r1, [r1, #4]
   15964:	ldr	lr, [sp, #20]
   15968:	add	r2, lr, #1
   1596c:	str	r0, [sp, #8]
   15970:	bl	10e2c <memcpy@plt>
   15974:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15978:	ldr	r2, [sp, #28]
   1597c:	add	r1, r1, r2, lsl #2
   15980:	ldr	r2, [sp, #8]
   15984:	str	r2, [r1]
   15988:	ldr	r1, [sp, #28]
   1598c:	add	r1, r1, #1
   15990:	str	r1, [sp, #28]
   15994:	str	r0, [sp, #4]
   15998:	b	158a4 <__assert_fail@plt+0x488c>
   1599c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   159a0:	ldr	r0, [r0, #4]
   159a4:	bl	19460 <__assert_fail@plt+0x8448>
   159a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159ac:	ldr	lr, [fp, #8]
   159b0:	str	r0, [lr]
   159b4:	ldr	r0, [fp, #12]
   159b8:	movw	lr, #0
   159bc:	cmp	r0, lr
   159c0:	beq	159d4 <__assert_fail@plt+0x49bc>
   159c4:	ldr	r0, [sp, #36]	; 0x24
   159c8:	ldr	r1, [fp, #12]
   159cc:	str	r0, [r1]
   159d0:	b	159dc <__assert_fail@plt+0x49c4>
   159d4:	ldr	r0, [sp, #36]	; 0x24
   159d8:	bl	19460 <__assert_fail@plt+0x8448>
   159dc:	ldr	r0, [sp, #28]
   159e0:	mov	sp, fp
   159e4:	pop	{fp, pc}
   159e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159ec:	add	fp, sp, #28
   159f0:	sub	sp, sp, #260	; 0x104
   159f4:	ldr	ip, [fp, #12]
   159f8:	ldr	lr, [fp, #8]
   159fc:	str	r0, [fp, #-32]	; 0xffffffe0
   15a00:	str	r1, [fp, #-36]	; 0xffffffdc
   15a04:	str	r2, [fp, #-40]	; 0xffffffd8
   15a08:	str	r3, [fp, #-44]	; 0xffffffd4
   15a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15a10:	movw	r1, #0
   15a14:	cmp	r0, r1
   15a18:	str	lr, [fp, #-48]	; 0xffffffd0
   15a1c:	str	ip, [fp, #-52]	; 0xffffffcc
   15a20:	beq	15a58 <__assert_fail@plt+0x4a40>
   15a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15a2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15a30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a34:	movw	ip, #48024	; 0xbb98
   15a38:	movt	ip, #1
   15a3c:	str	r1, [fp, #-56]	; 0xffffffc8
   15a40:	mov	r1, ip
   15a44:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15a48:	str	ip, [sp]
   15a4c:	bl	10f64 <fprintf@plt>
   15a50:	str	r0, [fp, #-60]	; 0xffffffc4
   15a54:	b	15a74 <__assert_fail@plt+0x4a5c>
   15a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15a60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a64:	movw	r1, #48036	; 0xbba4
   15a68:	movt	r1, #1
   15a6c:	bl	10f64 <fprintf@plt>
   15a70:	str	r0, [fp, #-64]	; 0xffffffc0
   15a74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a78:	movw	r1, #48043	; 0xbbab
   15a7c:	movt	r1, #1
   15a80:	str	r0, [fp, #-68]	; 0xffffffbc
   15a84:	mov	r0, r1
   15a88:	bl	10f4c <gettext@plt>
   15a8c:	movw	r1, #48761	; 0xbe79
   15a90:	movt	r1, #1
   15a94:	movw	r3, #2022	; 0x7e6
   15a98:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15a9c:	str	r0, [fp, #-72]	; 0xffffffb8
   15aa0:	mov	r0, lr
   15aa4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15aa8:	bl	10f64 <fprintf@plt>
   15aac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ab0:	movw	r2, #47298	; 0xb8c2
   15ab4:	movt	r2, #1
   15ab8:	str	r0, [fp, #-76]	; 0xffffffb4
   15abc:	mov	r0, r2
   15ac0:	str	r2, [fp, #-80]	; 0xffffffb0
   15ac4:	bl	10dcc <fputs_unlocked@plt>
   15ac8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15acc:	movw	r2, #48047	; 0xbbaf
   15ad0:	movt	r2, #1
   15ad4:	str	r0, [fp, #-84]	; 0xffffffac
   15ad8:	mov	r0, r2
   15adc:	str	r1, [fp, #-88]	; 0xffffffa8
   15ae0:	bl	10f4c <gettext@plt>
   15ae4:	movw	r2, #48218	; 0xbc5a
   15ae8:	movt	r2, #1
   15aec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15af0:	str	r0, [fp, #-92]	; 0xffffffa4
   15af4:	mov	r0, r1
   15af8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15afc:	bl	10f64 <fprintf@plt>
   15b00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b04:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15b08:	str	r0, [fp, #-96]	; 0xffffffa0
   15b0c:	mov	r0, r2
   15b10:	bl	10dcc <fputs_unlocked@plt>
   15b14:	ldr	r1, [fp, #12]
   15b18:	cmp	r1, #9
   15b1c:	str	r0, [fp, #-100]	; 0xffffff9c
   15b20:	str	r1, [fp, #-104]	; 0xffffff98
   15b24:	bhi	15f64 <__assert_fail@plt+0x4f4c>
   15b28:	add	r0, pc, #8
   15b2c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15b30:	ldr	r0, [r0, r1, lsl #2]
   15b34:	mov	pc, r0
   15b38:	andeq	r5, r1, r0, ror #22
   15b3c:	andeq	r5, r1, r4, ror #22
   15b40:	andeq	r5, r1, r0, lsr #23
   15b44:	andeq	r5, r1, r4, ror #23
   15b48:	andeq	r5, r1, r0, asr #24
   15b4c:	andeq	r5, r1, r8, lsr #25
   15b50:	andeq	r5, r1, ip, lsl sp
   15b54:	muleq	r1, ip, sp
   15b58:	andeq	r5, r1, r8, lsr #28
   15b5c:	andeq	r5, r1, r0, asr #29
   15b60:	b	16004 <__assert_fail@plt+0x4fec>
   15b64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b68:	movw	r1, #48252	; 0xbc7c
   15b6c:	movt	r1, #1
   15b70:	str	r0, [fp, #-108]	; 0xffffff94
   15b74:	mov	r0, r1
   15b78:	bl	10f4c <gettext@plt>
   15b7c:	ldr	r1, [fp, #8]
   15b80:	ldr	r2, [r1]
   15b84:	ldr	r1, [fp, #-108]	; 0xffffff94
   15b88:	str	r0, [fp, #-112]	; 0xffffff90
   15b8c:	mov	r0, r1
   15b90:	ldr	r1, [fp, #-112]	; 0xffffff90
   15b94:	bl	10f64 <fprintf@plt>
   15b98:	str	r0, [fp, #-116]	; 0xffffff8c
   15b9c:	b	16004 <__assert_fail@plt+0x4fec>
   15ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ba4:	movw	r1, #48268	; 0xbc8c
   15ba8:	movt	r1, #1
   15bac:	str	r0, [fp, #-120]	; 0xffffff88
   15bb0:	mov	r0, r1
   15bb4:	bl	10f4c <gettext@plt>
   15bb8:	ldr	r1, [fp, #8]
   15bbc:	ldr	r2, [r1]
   15bc0:	ldr	r1, [fp, #8]
   15bc4:	ldr	r3, [r1, #4]
   15bc8:	ldr	r1, [fp, #-120]	; 0xffffff88
   15bcc:	str	r0, [fp, #-124]	; 0xffffff84
   15bd0:	mov	r0, r1
   15bd4:	ldr	r1, [fp, #-124]	; 0xffffff84
   15bd8:	bl	10f64 <fprintf@plt>
   15bdc:	str	r0, [fp, #-128]	; 0xffffff80
   15be0:	b	16004 <__assert_fail@plt+0x4fec>
   15be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15be8:	movw	r1, #48291	; 0xbca3
   15bec:	movt	r1, #1
   15bf0:	str	r0, [fp, #-132]	; 0xffffff7c
   15bf4:	mov	r0, r1
   15bf8:	bl	10f4c <gettext@plt>
   15bfc:	ldr	r1, [fp, #8]
   15c00:	ldr	r2, [r1]
   15c04:	ldr	r1, [fp, #8]
   15c08:	ldr	r3, [r1, #4]
   15c0c:	ldr	r1, [fp, #8]
   15c10:	ldr	r1, [r1, #8]
   15c14:	ldr	lr, [fp, #-132]	; 0xffffff7c
   15c18:	str	r0, [fp, #-136]	; 0xffffff78
   15c1c:	mov	r0, lr
   15c20:	ldr	ip, [fp, #-136]	; 0xffffff78
   15c24:	str	r1, [fp, #-140]	; 0xffffff74
   15c28:	mov	r1, ip
   15c2c:	ldr	r4, [fp, #-140]	; 0xffffff74
   15c30:	str	r4, [sp]
   15c34:	bl	10f64 <fprintf@plt>
   15c38:	str	r0, [sp, #144]	; 0x90
   15c3c:	b	16004 <__assert_fail@plt+0x4fec>
   15c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c44:	movw	r1, #48319	; 0xbcbf
   15c48:	movt	r1, #1
   15c4c:	str	r0, [sp, #140]	; 0x8c
   15c50:	mov	r0, r1
   15c54:	bl	10f4c <gettext@plt>
   15c58:	ldr	r1, [fp, #8]
   15c5c:	ldr	r2, [r1]
   15c60:	ldr	r1, [fp, #8]
   15c64:	ldr	r3, [r1, #4]
   15c68:	ldr	r1, [fp, #8]
   15c6c:	ldr	r1, [r1, #8]
   15c70:	ldr	lr, [fp, #8]
   15c74:	ldr	lr, [lr, #12]
   15c78:	ldr	ip, [sp, #140]	; 0x8c
   15c7c:	str	r0, [sp, #136]	; 0x88
   15c80:	mov	r0, ip
   15c84:	ldr	r4, [sp, #136]	; 0x88
   15c88:	str	r1, [sp, #132]	; 0x84
   15c8c:	mov	r1, r4
   15c90:	ldr	r5, [sp, #132]	; 0x84
   15c94:	str	r5, [sp]
   15c98:	str	lr, [sp, #4]
   15c9c:	bl	10f64 <fprintf@plt>
   15ca0:	str	r0, [sp, #128]	; 0x80
   15ca4:	b	16004 <__assert_fail@plt+0x4fec>
   15ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cac:	movw	r1, #48351	; 0xbcdf
   15cb0:	movt	r1, #1
   15cb4:	str	r0, [sp, #124]	; 0x7c
   15cb8:	mov	r0, r1
   15cbc:	bl	10f4c <gettext@plt>
   15cc0:	ldr	r1, [fp, #8]
   15cc4:	ldr	r2, [r1]
   15cc8:	ldr	r1, [fp, #8]
   15ccc:	ldr	r3, [r1, #4]
   15cd0:	ldr	r1, [fp, #8]
   15cd4:	ldr	r1, [r1, #8]
   15cd8:	ldr	lr, [fp, #8]
   15cdc:	ldr	lr, [lr, #12]
   15ce0:	ldr	ip, [fp, #8]
   15ce4:	ldr	ip, [ip, #16]
   15ce8:	ldr	r4, [sp, #124]	; 0x7c
   15cec:	str	r0, [sp, #120]	; 0x78
   15cf0:	mov	r0, r4
   15cf4:	ldr	r5, [sp, #120]	; 0x78
   15cf8:	str	r1, [sp, #116]	; 0x74
   15cfc:	mov	r1, r5
   15d00:	ldr	r6, [sp, #116]	; 0x74
   15d04:	str	r6, [sp]
   15d08:	str	lr, [sp, #4]
   15d0c:	str	ip, [sp, #8]
   15d10:	bl	10f64 <fprintf@plt>
   15d14:	str	r0, [sp, #112]	; 0x70
   15d18:	b	16004 <__assert_fail@plt+0x4fec>
   15d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d20:	movw	r1, #48387	; 0xbd03
   15d24:	movt	r1, #1
   15d28:	str	r0, [sp, #108]	; 0x6c
   15d2c:	mov	r0, r1
   15d30:	bl	10f4c <gettext@plt>
   15d34:	ldr	r1, [fp, #8]
   15d38:	ldr	r2, [r1]
   15d3c:	ldr	r1, [fp, #8]
   15d40:	ldr	r3, [r1, #4]
   15d44:	ldr	r1, [fp, #8]
   15d48:	ldr	r1, [r1, #8]
   15d4c:	ldr	lr, [fp, #8]
   15d50:	ldr	lr, [lr, #12]
   15d54:	ldr	ip, [fp, #8]
   15d58:	ldr	ip, [ip, #16]
   15d5c:	ldr	r4, [fp, #8]
   15d60:	ldr	r4, [r4, #20]
   15d64:	ldr	r5, [sp, #108]	; 0x6c
   15d68:	str	r0, [sp, #104]	; 0x68
   15d6c:	mov	r0, r5
   15d70:	ldr	r6, [sp, #104]	; 0x68
   15d74:	str	r1, [sp, #100]	; 0x64
   15d78:	mov	r1, r6
   15d7c:	ldr	r7, [sp, #100]	; 0x64
   15d80:	str	r7, [sp]
   15d84:	str	lr, [sp, #4]
   15d88:	str	ip, [sp, #8]
   15d8c:	str	r4, [sp, #12]
   15d90:	bl	10f64 <fprintf@plt>
   15d94:	str	r0, [sp, #96]	; 0x60
   15d98:	b	16004 <__assert_fail@plt+0x4fec>
   15d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15da0:	movw	r1, #48427	; 0xbd2b
   15da4:	movt	r1, #1
   15da8:	str	r0, [sp, #92]	; 0x5c
   15dac:	mov	r0, r1
   15db0:	bl	10f4c <gettext@plt>
   15db4:	ldr	r1, [fp, #8]
   15db8:	ldr	r2, [r1]
   15dbc:	ldr	r1, [fp, #8]
   15dc0:	ldr	r3, [r1, #4]
   15dc4:	ldr	r1, [fp, #8]
   15dc8:	ldr	r1, [r1, #8]
   15dcc:	ldr	lr, [fp, #8]
   15dd0:	ldr	lr, [lr, #12]
   15dd4:	ldr	ip, [fp, #8]
   15dd8:	ldr	ip, [ip, #16]
   15ddc:	ldr	r4, [fp, #8]
   15de0:	ldr	r4, [r4, #20]
   15de4:	ldr	r5, [fp, #8]
   15de8:	ldr	r5, [r5, #24]
   15dec:	ldr	r6, [sp, #92]	; 0x5c
   15df0:	str	r0, [sp, #88]	; 0x58
   15df4:	mov	r0, r6
   15df8:	ldr	r7, [sp, #88]	; 0x58
   15dfc:	str	r1, [sp, #84]	; 0x54
   15e00:	mov	r1, r7
   15e04:	ldr	r8, [sp, #84]	; 0x54
   15e08:	str	r8, [sp]
   15e0c:	str	lr, [sp, #4]
   15e10:	str	ip, [sp, #8]
   15e14:	str	r4, [sp, #12]
   15e18:	str	r5, [sp, #16]
   15e1c:	bl	10f64 <fprintf@plt>
   15e20:	str	r0, [sp, #80]	; 0x50
   15e24:	b	16004 <__assert_fail@plt+0x4fec>
   15e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e2c:	movw	r1, #48471	; 0xbd57
   15e30:	movt	r1, #1
   15e34:	str	r0, [sp, #76]	; 0x4c
   15e38:	mov	r0, r1
   15e3c:	bl	10f4c <gettext@plt>
   15e40:	ldr	r1, [fp, #8]
   15e44:	ldr	r2, [r1]
   15e48:	ldr	r1, [fp, #8]
   15e4c:	ldr	r3, [r1, #4]
   15e50:	ldr	r1, [fp, #8]
   15e54:	ldr	r1, [r1, #8]
   15e58:	ldr	lr, [fp, #8]
   15e5c:	ldr	lr, [lr, #12]
   15e60:	ldr	ip, [fp, #8]
   15e64:	ldr	ip, [ip, #16]
   15e68:	ldr	r4, [fp, #8]
   15e6c:	ldr	r4, [r4, #20]
   15e70:	ldr	r5, [fp, #8]
   15e74:	ldr	r5, [r5, #24]
   15e78:	ldr	r6, [fp, #8]
   15e7c:	ldr	r6, [r6, #28]
   15e80:	ldr	r7, [sp, #76]	; 0x4c
   15e84:	str	r0, [sp, #72]	; 0x48
   15e88:	mov	r0, r7
   15e8c:	ldr	r8, [sp, #72]	; 0x48
   15e90:	str	r1, [sp, #68]	; 0x44
   15e94:	mov	r1, r8
   15e98:	ldr	r9, [sp, #68]	; 0x44
   15e9c:	str	r9, [sp]
   15ea0:	str	lr, [sp, #4]
   15ea4:	str	ip, [sp, #8]
   15ea8:	str	r4, [sp, #12]
   15eac:	str	r5, [sp, #16]
   15eb0:	str	r6, [sp, #20]
   15eb4:	bl	10f64 <fprintf@plt>
   15eb8:	str	r0, [sp, #64]	; 0x40
   15ebc:	b	16004 <__assert_fail@plt+0x4fec>
   15ec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ec4:	movw	r1, #48519	; 0xbd87
   15ec8:	movt	r1, #1
   15ecc:	str	r0, [sp, #60]	; 0x3c
   15ed0:	mov	r0, r1
   15ed4:	bl	10f4c <gettext@plt>
   15ed8:	ldr	r1, [fp, #8]
   15edc:	ldr	r2, [r1]
   15ee0:	ldr	r1, [fp, #8]
   15ee4:	ldr	r3, [r1, #4]
   15ee8:	ldr	r1, [fp, #8]
   15eec:	ldr	r1, [r1, #8]
   15ef0:	ldr	lr, [fp, #8]
   15ef4:	ldr	lr, [lr, #12]
   15ef8:	ldr	ip, [fp, #8]
   15efc:	ldr	ip, [ip, #16]
   15f00:	ldr	r4, [fp, #8]
   15f04:	ldr	r4, [r4, #20]
   15f08:	ldr	r5, [fp, #8]
   15f0c:	ldr	r5, [r5, #24]
   15f10:	ldr	r6, [fp, #8]
   15f14:	ldr	r6, [r6, #28]
   15f18:	ldr	r7, [fp, #8]
   15f1c:	ldr	r7, [r7, #32]
   15f20:	ldr	r8, [sp, #60]	; 0x3c
   15f24:	str	r0, [sp, #56]	; 0x38
   15f28:	mov	r0, r8
   15f2c:	ldr	r9, [sp, #56]	; 0x38
   15f30:	str	r1, [sp, #52]	; 0x34
   15f34:	mov	r1, r9
   15f38:	ldr	sl, [sp, #52]	; 0x34
   15f3c:	str	sl, [sp]
   15f40:	str	lr, [sp, #4]
   15f44:	str	ip, [sp, #8]
   15f48:	str	r4, [sp, #12]
   15f4c:	str	r5, [sp, #16]
   15f50:	str	r6, [sp, #20]
   15f54:	str	r7, [sp, #24]
   15f58:	bl	10f64 <fprintf@plt>
   15f5c:	str	r0, [sp, #48]	; 0x30
   15f60:	b	16004 <__assert_fail@plt+0x4fec>
   15f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f68:	movw	r1, #48571	; 0xbdbb
   15f6c:	movt	r1, #1
   15f70:	str	r0, [sp, #44]	; 0x2c
   15f74:	mov	r0, r1
   15f78:	bl	10f4c <gettext@plt>
   15f7c:	ldr	r1, [fp, #8]
   15f80:	ldr	r2, [r1]
   15f84:	ldr	r1, [fp, #8]
   15f88:	ldr	r3, [r1, #4]
   15f8c:	ldr	r1, [fp, #8]
   15f90:	ldr	r1, [r1, #8]
   15f94:	ldr	lr, [fp, #8]
   15f98:	ldr	lr, [lr, #12]
   15f9c:	ldr	ip, [fp, #8]
   15fa0:	ldr	ip, [ip, #16]
   15fa4:	ldr	r4, [fp, #8]
   15fa8:	ldr	r4, [r4, #20]
   15fac:	ldr	r5, [fp, #8]
   15fb0:	ldr	r5, [r5, #24]
   15fb4:	ldr	r6, [fp, #8]
   15fb8:	ldr	r6, [r6, #28]
   15fbc:	ldr	r7, [fp, #8]
   15fc0:	ldr	r7, [r7, #32]
   15fc4:	ldr	r8, [sp, #44]	; 0x2c
   15fc8:	str	r0, [sp, #40]	; 0x28
   15fcc:	mov	r0, r8
   15fd0:	ldr	r9, [sp, #40]	; 0x28
   15fd4:	str	r1, [sp, #36]	; 0x24
   15fd8:	mov	r1, r9
   15fdc:	ldr	sl, [sp, #36]	; 0x24
   15fe0:	str	sl, [sp]
   15fe4:	str	lr, [sp, #4]
   15fe8:	str	ip, [sp, #8]
   15fec:	str	r4, [sp, #12]
   15ff0:	str	r5, [sp, #16]
   15ff4:	str	r6, [sp, #20]
   15ff8:	str	r7, [sp, #24]
   15ffc:	bl	10f64 <fprintf@plt>
   16000:	str	r0, [sp, #32]
   16004:	sub	sp, fp, #28
   16008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1600c:	push	{fp, lr}
   16010:	mov	fp, sp
   16014:	sub	sp, sp, #32
   16018:	ldr	ip, [fp, #8]
   1601c:	str	r0, [fp, #-4]
   16020:	str	r1, [fp, #-8]
   16024:	str	r2, [fp, #-12]
   16028:	str	r3, [sp, #16]
   1602c:	movw	r0, #0
   16030:	str	r0, [sp, #12]
   16034:	str	ip, [sp, #8]
   16038:	ldr	r0, [fp, #8]
   1603c:	ldr	r1, [sp, #12]
   16040:	add	r0, r0, r1, lsl #2
   16044:	ldr	r0, [r0]
   16048:	movw	r1, #0
   1604c:	cmp	r0, r1
   16050:	beq	16068 <__assert_fail@plt+0x5050>
   16054:	b	16058 <__assert_fail@plt+0x5040>
   16058:	ldr	r0, [sp, #12]
   1605c:	add	r0, r0, #1
   16060:	str	r0, [sp, #12]
   16064:	b	16038 <__assert_fail@plt+0x5020>
   16068:	ldr	r0, [fp, #-4]
   1606c:	ldr	r1, [fp, #-8]
   16070:	ldr	r2, [fp, #-12]
   16074:	ldr	r3, [sp, #16]
   16078:	ldr	ip, [fp, #8]
   1607c:	ldr	lr, [sp, #12]
   16080:	str	ip, [sp]
   16084:	str	lr, [sp, #4]
   16088:	bl	159e8 <__assert_fail@plt+0x49d0>
   1608c:	mov	sp, fp
   16090:	pop	{fp, pc}
   16094:	push	{fp, lr}
   16098:	mov	fp, sp
   1609c:	sub	sp, sp, #80	; 0x50
   160a0:	ldr	ip, [fp, #8]
   160a4:	str	ip, [fp, #-4]
   160a8:	str	r0, [fp, #-8]
   160ac:	str	r1, [fp, #-12]
   160b0:	str	r2, [fp, #-16]
   160b4:	str	r3, [fp, #-20]	; 0xffffffec
   160b8:	movw	r0, #0
   160bc:	str	r0, [fp, #-24]	; 0xffffffe8
   160c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c4:	cmp	r0, #10
   160c8:	movw	r0, #0
   160cc:	str	r0, [sp, #12]
   160d0:	bcs	16108 <__assert_fail@plt+0x50f0>
   160d4:	ldr	r0, [fp, #-4]
   160d8:	add	r1, r0, #4
   160dc:	str	r1, [fp, #-4]
   160e0:	ldr	r0, [r0]
   160e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160e8:	add	r2, sp, #16
   160ec:	add	r1, r2, r1, lsl #2
   160f0:	str	r0, [r1]
   160f4:	movw	r1, #0
   160f8:	cmp	r0, r1
   160fc:	movw	r0, #0
   16100:	movne	r0, #1
   16104:	str	r0, [sp, #12]
   16108:	ldr	r0, [sp, #12]
   1610c:	tst	r0, #1
   16110:	beq	16128 <__assert_fail@plt+0x5110>
   16114:	b	16118 <__assert_fail@plt+0x5100>
   16118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1611c:	add	r0, r0, #1
   16120:	str	r0, [fp, #-24]	; 0xffffffe8
   16124:	b	160c0 <__assert_fail@plt+0x50a8>
   16128:	add	r0, sp, #16
   1612c:	ldr	r1, [fp, #-8]
   16130:	ldr	r2, [fp, #-12]
   16134:	ldr	r3, [fp, #-16]
   16138:	ldr	ip, [fp, #-20]	; 0xffffffec
   1613c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16140:	str	r0, [sp, #8]
   16144:	mov	r0, r1
   16148:	mov	r1, r2
   1614c:	mov	r2, r3
   16150:	mov	r3, ip
   16154:	ldr	ip, [sp, #8]
   16158:	str	ip, [sp]
   1615c:	str	lr, [sp, #4]
   16160:	bl	159e8 <__assert_fail@plt+0x49d0>
   16164:	mov	sp, fp
   16168:	pop	{fp, pc}
   1616c:	push	{fp, lr}
   16170:	mov	fp, sp
   16174:	sub	sp, sp, #32
   16178:	str	r0, [fp, #-4]
   1617c:	str	r1, [fp, #-8]
   16180:	str	r2, [fp, #-12]
   16184:	str	r3, [sp, #16]
   16188:	add	r0, fp, #8
   1618c:	str	r0, [sp, #12]
   16190:	ldr	r0, [fp, #-4]
   16194:	ldr	r1, [fp, #-8]
   16198:	ldr	r2, [fp, #-12]
   1619c:	ldr	r3, [sp, #16]
   161a0:	ldr	ip, [sp, #12]
   161a4:	mov	lr, sp
   161a8:	str	ip, [lr]
   161ac:	bl	16094 <__assert_fail@plt+0x507c>
   161b0:	add	r0, sp, #12
   161b4:	str	r0, [sp, #8]
   161b8:	mov	sp, fp
   161bc:	pop	{fp, pc}
   161c0:	push	{fp, lr}
   161c4:	mov	fp, sp
   161c8:	sub	sp, sp, #16
   161cc:	movw	r0, #49484	; 0xc14c
   161d0:	movt	r0, #2
   161d4:	ldr	r1, [r0]
   161d8:	movw	r0, #47298	; 0xb8c2
   161dc:	movt	r0, #1
   161e0:	bl	10dcc <fputs_unlocked@plt>
   161e4:	movw	r1, #48631	; 0xbdf7
   161e8:	movt	r1, #1
   161ec:	str	r0, [fp, #-4]
   161f0:	mov	r0, r1
   161f4:	bl	10f4c <gettext@plt>
   161f8:	movw	r1, #48651	; 0xbe0b
   161fc:	movt	r1, #1
   16200:	bl	10dfc <printf@plt>
   16204:	movw	r1, #48673	; 0xbe21
   16208:	movt	r1, #1
   1620c:	str	r0, [sp, #8]
   16210:	mov	r0, r1
   16214:	bl	10f4c <gettext@plt>
   16218:	movw	r1, #46884	; 0xb724
   1621c:	movt	r1, #1
   16220:	movw	r2, #47103	; 0xb7ff
   16224:	movt	r2, #1
   16228:	bl	10dfc <printf@plt>
   1622c:	movw	r1, #48693	; 0xbe35
   16230:	movt	r1, #1
   16234:	str	r0, [sp, #4]
   16238:	mov	r0, r1
   1623c:	bl	10f4c <gettext@plt>
   16240:	movw	r1, #48732	; 0xbe5c
   16244:	movt	r1, #1
   16248:	bl	10dfc <printf@plt>
   1624c:	str	r0, [sp]
   16250:	mov	sp, fp
   16254:	pop	{fp, pc}
   16258:	push	{fp, lr}
   1625c:	mov	fp, sp
   16260:	sub	sp, sp, #16
   16264:	str	r0, [fp, #-4]
   16268:	str	r1, [sp, #8]
   1626c:	str	r2, [sp, #4]
   16270:	ldr	r0, [fp, #-4]
   16274:	ldr	r1, [sp, #8]
   16278:	ldr	r2, [sp, #4]
   1627c:	bl	16288 <__assert_fail@plt+0x5270>
   16280:	mov	sp, fp
   16284:	pop	{fp, pc}
   16288:	push	{fp, lr}
   1628c:	mov	fp, sp
   16290:	sub	sp, sp, #16
   16294:	str	r0, [fp, #-4]
   16298:	str	r1, [sp, #8]
   1629c:	str	r2, [sp, #4]
   162a0:	ldr	r0, [fp, #-4]
   162a4:	ldr	r1, [sp, #8]
   162a8:	ldr	r2, [sp, #4]
   162ac:	bl	19780 <__assert_fail@plt+0x8768>
   162b0:	str	r0, [sp]
   162b4:	ldr	r0, [sp]
   162b8:	movw	r1, #0
   162bc:	cmp	r0, r1
   162c0:	bne	162f0 <__assert_fail@plt+0x52d8>
   162c4:	ldr	r0, [fp, #-4]
   162c8:	movw	r1, #0
   162cc:	cmp	r0, r1
   162d0:	beq	162ec <__assert_fail@plt+0x52d4>
   162d4:	ldr	r0, [sp, #8]
   162d8:	cmp	r0, #0
   162dc:	beq	162f0 <__assert_fail@plt+0x52d8>
   162e0:	ldr	r0, [sp, #4]
   162e4:	cmp	r0, #0
   162e8:	beq	162f0 <__assert_fail@plt+0x52d8>
   162ec:	bl	190d8 <__assert_fail@plt+0x80c0>
   162f0:	ldr	r0, [sp]
   162f4:	mov	sp, fp
   162f8:	pop	{fp, pc}
   162fc:	push	{fp, lr}
   16300:	mov	fp, sp
   16304:	sub	sp, sp, #8
   16308:	str	r0, [sp, #4]
   1630c:	ldr	r0, [sp, #4]
   16310:	bl	191c4 <__assert_fail@plt+0x81ac>
   16314:	bl	16320 <__assert_fail@plt+0x5308>
   16318:	mov	sp, fp
   1631c:	pop	{fp, pc}
   16320:	push	{fp, lr}
   16324:	mov	fp, sp
   16328:	sub	sp, sp, #8
   1632c:	str	r0, [sp, #4]
   16330:	ldr	r0, [sp, #4]
   16334:	movw	r1, #0
   16338:	cmp	r0, r1
   1633c:	bne	16344 <__assert_fail@plt+0x532c>
   16340:	bl	190d8 <__assert_fail@plt+0x80c0>
   16344:	ldr	r0, [sp, #4]
   16348:	mov	sp, fp
   1634c:	pop	{fp, pc}
   16350:	push	{fp, lr}
   16354:	mov	fp, sp
   16358:	sub	sp, sp, #8
   1635c:	str	r0, [sp, #4]
   16360:	ldr	r0, [sp, #4]
   16364:	bl	194bc <__assert_fail@plt+0x84a4>
   16368:	bl	16320 <__assert_fail@plt+0x5308>
   1636c:	mov	sp, fp
   16370:	pop	{fp, pc}
   16374:	push	{fp, lr}
   16378:	mov	fp, sp
   1637c:	sub	sp, sp, #8
   16380:	str	r0, [sp, #4]
   16384:	ldr	r0, [sp, #4]
   16388:	bl	162fc <__assert_fail@plt+0x52e4>
   1638c:	mov	sp, fp
   16390:	pop	{fp, pc}
   16394:	push	{fp, lr}
   16398:	mov	fp, sp
   1639c:	sub	sp, sp, #16
   163a0:	str	r0, [fp, #-4]
   163a4:	str	r1, [sp, #8]
   163a8:	ldr	r0, [fp, #-4]
   163ac:	ldr	r1, [sp, #8]
   163b0:	bl	19234 <__assert_fail@plt+0x821c>
   163b4:	str	r0, [sp, #4]
   163b8:	ldr	r0, [sp, #4]
   163bc:	movw	r1, #0
   163c0:	cmp	r0, r1
   163c4:	bne	163e8 <__assert_fail@plt+0x53d0>
   163c8:	ldr	r0, [fp, #-4]
   163cc:	movw	r1, #0
   163d0:	cmp	r0, r1
   163d4:	beq	163e4 <__assert_fail@plt+0x53cc>
   163d8:	ldr	r0, [sp, #8]
   163dc:	cmp	r0, #0
   163e0:	beq	163e8 <__assert_fail@plt+0x53d0>
   163e4:	bl	190d8 <__assert_fail@plt+0x80c0>
   163e8:	ldr	r0, [sp, #4]
   163ec:	mov	sp, fp
   163f0:	pop	{fp, pc}
   163f4:	push	{fp, lr}
   163f8:	mov	fp, sp
   163fc:	sub	sp, sp, #8
   16400:	str	r0, [sp, #4]
   16404:	str	r1, [sp]
   16408:	ldr	r0, [sp, #4]
   1640c:	ldr	r1, [sp]
   16410:	bl	194fc <__assert_fail@plt+0x84e4>
   16414:	bl	16320 <__assert_fail@plt+0x5308>
   16418:	mov	sp, fp
   1641c:	pop	{fp, pc}
   16420:	push	{fp, lr}
   16424:	mov	fp, sp
   16428:	sub	sp, sp, #16
   1642c:	str	r0, [fp, #-4]
   16430:	str	r1, [sp, #8]
   16434:	str	r2, [sp, #4]
   16438:	ldr	r0, [fp, #-4]
   1643c:	ldr	r1, [sp, #8]
   16440:	ldr	r2, [sp, #4]
   16444:	bl	195f4 <__assert_fail@plt+0x85dc>
   16448:	bl	16320 <__assert_fail@plt+0x5308>
   1644c:	mov	sp, fp
   16450:	pop	{fp, pc}
   16454:	push	{fp, lr}
   16458:	mov	fp, sp
   1645c:	sub	sp, sp, #8
   16460:	str	r0, [sp, #4]
   16464:	str	r1, [sp]
   16468:	ldr	r1, [sp, #4]
   1646c:	ldr	r2, [sp]
   16470:	movw	r0, #0
   16474:	bl	16288 <__assert_fail@plt+0x5270>
   16478:	mov	sp, fp
   1647c:	pop	{fp, pc}
   16480:	push	{fp, lr}
   16484:	mov	fp, sp
   16488:	sub	sp, sp, #8
   1648c:	str	r0, [sp, #4]
   16490:	str	r1, [sp]
   16494:	ldr	r1, [sp, #4]
   16498:	ldr	r2, [sp]
   1649c:	movw	r0, #0
   164a0:	bl	16420 <__assert_fail@plt+0x5408>
   164a4:	mov	sp, fp
   164a8:	pop	{fp, pc}
   164ac:	push	{fp, lr}
   164b0:	mov	fp, sp
   164b4:	sub	sp, sp, #8
   164b8:	str	r0, [sp, #4]
   164bc:	str	r1, [sp]
   164c0:	ldr	r0, [sp, #4]
   164c4:	ldr	r1, [sp]
   164c8:	movw	r2, #1
   164cc:	bl	164d8 <__assert_fail@plt+0x54c0>
   164d0:	mov	sp, fp
   164d4:	pop	{fp, pc}
   164d8:	push	{fp, lr}
   164dc:	mov	fp, sp
   164e0:	sub	sp, sp, #16
   164e4:	str	r0, [fp, #-4]
   164e8:	str	r1, [sp, #8]
   164ec:	str	r2, [sp, #4]
   164f0:	ldr	r0, [sp, #8]
   164f4:	ldr	r0, [r0]
   164f8:	str	r0, [sp]
   164fc:	ldr	r0, [fp, #-4]
   16500:	movw	r1, #0
   16504:	cmp	r0, r1
   16508:	bne	16554 <__assert_fail@plt+0x553c>
   1650c:	ldr	r0, [sp]
   16510:	cmp	r0, #0
   16514:	bne	16550 <__assert_fail@plt+0x5538>
   16518:	ldr	r0, [sp, #4]
   1651c:	movw	r1, #64	; 0x40
   16520:	udiv	r0, r1, r0
   16524:	str	r0, [sp]
   16528:	ldr	r0, [sp]
   1652c:	cmp	r0, #0
   16530:	movw	r0, #0
   16534:	movne	r0, #1
   16538:	mvn	r1, #0
   1653c:	eor	r0, r0, r1
   16540:	and	r0, r0, #1
   16544:	ldr	r1, [sp]
   16548:	add	r0, r1, r0
   1654c:	str	r0, [sp]
   16550:	b	16584 <__assert_fail@plt+0x556c>
   16554:	ldr	r0, [sp]
   16558:	ldr	r1, [sp]
   1655c:	lsr	r1, r1, #1
   16560:	add	r1, r1, #1
   16564:	adds	r0, r0, r1
   16568:	mov	r1, #0
   1656c:	adc	r1, r1, #0
   16570:	str	r0, [sp]
   16574:	tst	r1, #1
   16578:	beq	16580 <__assert_fail@plt+0x5568>
   1657c:	bl	190d8 <__assert_fail@plt+0x80c0>
   16580:	b	16584 <__assert_fail@plt+0x556c>
   16584:	ldr	r0, [fp, #-4]
   16588:	ldr	r1, [sp]
   1658c:	ldr	r2, [sp, #4]
   16590:	bl	16288 <__assert_fail@plt+0x5270>
   16594:	str	r0, [fp, #-4]
   16598:	ldr	r0, [sp]
   1659c:	ldr	r1, [sp, #8]
   165a0:	str	r0, [r1]
   165a4:	ldr	r0, [fp, #-4]
   165a8:	mov	sp, fp
   165ac:	pop	{fp, pc}
   165b0:	push	{fp, lr}
   165b4:	mov	fp, sp
   165b8:	sub	sp, sp, #376	; 0x178
   165bc:	ldr	ip, [fp, #8]
   165c0:	str	r0, [fp, #-4]
   165c4:	str	r1, [fp, #-8]
   165c8:	str	r2, [fp, #-12]
   165cc:	str	r3, [fp, #-16]
   165d0:	ldr	r0, [fp, #-8]
   165d4:	ldr	r0, [r0]
   165d8:	str	r0, [fp, #-20]	; 0xffffffec
   165dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   165e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   165e4:	asr	r1, r1, #1
   165e8:	add	r1, r0, r1
   165ec:	mov	r2, #1
   165f0:	cmp	r1, r0
   165f4:	movwvc	r2, #0
   165f8:	str	r1, [fp, #-24]	; 0xffffffe8
   165fc:	tst	r2, #1
   16600:	str	ip, [fp, #-36]	; 0xffffffdc
   16604:	beq	16610 <__assert_fail@plt+0x55f8>
   16608:	ldr	r0, [pc, #4044]	; 175dc <__assert_fail@plt+0x65c4>
   1660c:	str	r0, [fp, #-24]	; 0xffffffe8
   16610:	ldr	r0, [fp, #-16]
   16614:	movw	r1, #0
   16618:	cmp	r1, r0
   1661c:	bgt	16638 <__assert_fail@plt+0x5620>
   16620:	ldr	r0, [fp, #-16]
   16624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16628:	cmp	r0, r1
   1662c:	bge	16638 <__assert_fail@plt+0x5620>
   16630:	ldr	r0, [fp, #-16]
   16634:	str	r0, [fp, #-24]	; 0xffffffe8
   16638:	b	16a10 <__assert_fail@plt+0x59f8>
   1663c:	b	16640 <__assert_fail@plt+0x5628>
   16640:	ldr	r0, [fp, #8]
   16644:	cmp	r0, #0
   16648:	bge	1675c <__assert_fail@plt+0x5744>
   1664c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16650:	cmp	r0, #0
   16654:	bge	166e0 <__assert_fail@plt+0x56c8>
   16658:	b	1665c <__assert_fail@plt+0x5644>
   1665c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16660:	ldr	r1, [fp, #8]
   16664:	movw	r2, #127	; 0x7f
   16668:	sdiv	r1, r2, r1
   1666c:	cmp	r0, r1
   16670:	blt	167fc <__assert_fail@plt+0x57e4>
   16674:	b	16814 <__assert_fail@plt+0x57fc>
   16678:	b	1667c <__assert_fail@plt+0x5664>
   1667c:	ldr	r0, [pc, #4076]	; 17670 <__assert_fail@plt+0x6658>
   16680:	ldr	r1, [fp, #8]
   16684:	cmp	r1, r0
   16688:	blt	166a0 <__assert_fail@plt+0x5688>
   1668c:	b	166ac <__assert_fail@plt+0x5694>
   16690:	ldr	r0, [fp, #8]
   16694:	movw	r1, #0
   16698:	cmp	r1, r0
   1669c:	bge	166ac <__assert_fail@plt+0x5694>
   166a0:	movw	r0, #0
   166a4:	str	r0, [fp, #-40]	; 0xffffffd8
   166a8:	b	166c4 <__assert_fail@plt+0x56ac>
   166ac:	ldr	r0, [fp, #8]
   166b0:	movw	r1, #0
   166b4:	sub	r0, r1, r0
   166b8:	movw	r1, #127	; 0x7f
   166bc:	sdiv	r0, r1, r0
   166c0:	str	r0, [fp, #-40]	; 0xffffffd8
   166c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166cc:	mvn	r2, #0
   166d0:	sub	r1, r2, r1
   166d4:	cmp	r0, r1
   166d8:	ble	167fc <__assert_fail@plt+0x57e4>
   166dc:	b	16814 <__assert_fail@plt+0x57fc>
   166e0:	b	166e4 <__assert_fail@plt+0x56cc>
   166e4:	b	16740 <__assert_fail@plt+0x5728>
   166e8:	b	16740 <__assert_fail@plt+0x5728>
   166ec:	ldr	r0, [fp, #8]
   166f0:	cmn	r0, #1
   166f4:	bne	16740 <__assert_fail@plt+0x5728>
   166f8:	b	166fc <__assert_fail@plt+0x56e4>
   166fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16700:	mvn	r1, #127	; 0x7f
   16704:	add	r0, r0, r1
   16708:	movw	r1, #0
   1670c:	cmp	r1, r0
   16710:	blt	167fc <__assert_fail@plt+0x57e4>
   16714:	b	16814 <__assert_fail@plt+0x57fc>
   16718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1671c:	movw	r1, #0
   16720:	cmp	r1, r0
   16724:	bge	16814 <__assert_fail@plt+0x57fc>
   16728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1672c:	sub	r0, r0, #1
   16730:	movw	r1, #127	; 0x7f
   16734:	cmp	r1, r0
   16738:	blt	167fc <__assert_fail@plt+0x57e4>
   1673c:	b	16814 <__assert_fail@plt+0x57fc>
   16740:	ldr	r0, [fp, #8]
   16744:	mvn	r1, #127	; 0x7f
   16748:	sdiv	r0, r1, r0
   1674c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16750:	cmp	r0, r1
   16754:	blt	167fc <__assert_fail@plt+0x57e4>
   16758:	b	16814 <__assert_fail@plt+0x57fc>
   1675c:	ldr	r0, [fp, #8]
   16760:	cmp	r0, #0
   16764:	bne	1676c <__assert_fail@plt+0x5754>
   16768:	b	16814 <__assert_fail@plt+0x57fc>
   1676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16770:	cmp	r0, #0
   16774:	bge	167e4 <__assert_fail@plt+0x57cc>
   16778:	b	1677c <__assert_fail@plt+0x5764>
   1677c:	b	167c8 <__assert_fail@plt+0x57b0>
   16780:	b	167c8 <__assert_fail@plt+0x57b0>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	cmn	r0, #1
   1678c:	bne	167c8 <__assert_fail@plt+0x57b0>
   16790:	b	16794 <__assert_fail@plt+0x577c>
   16794:	ldr	r0, [fp, #8]
   16798:	mvn	r1, #127	; 0x7f
   1679c:	add	r0, r0, r1
   167a0:	movw	r1, #0
   167a4:	cmp	r1, r0
   167a8:	blt	167fc <__assert_fail@plt+0x57e4>
   167ac:	b	16814 <__assert_fail@plt+0x57fc>
   167b0:	ldr	r0, [fp, #8]
   167b4:	sub	r0, r0, #1
   167b8:	movw	r1, #127	; 0x7f
   167bc:	cmp	r1, r0
   167c0:	blt	167fc <__assert_fail@plt+0x57e4>
   167c4:	b	16814 <__assert_fail@plt+0x57fc>
   167c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167cc:	mvn	r1, #127	; 0x7f
   167d0:	sdiv	r0, r1, r0
   167d4:	ldr	r1, [fp, #8]
   167d8:	cmp	r0, r1
   167dc:	blt	167fc <__assert_fail@plt+0x57e4>
   167e0:	b	16814 <__assert_fail@plt+0x57fc>
   167e4:	ldr	r0, [fp, #8]
   167e8:	movw	r1, #127	; 0x7f
   167ec:	sdiv	r0, r1, r0
   167f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167f4:	cmp	r0, r1
   167f8:	bge	16814 <__assert_fail@plt+0x57fc>
   167fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16800:	ldr	r1, [fp, #8]
   16804:	mul	r0, r0, r1
   16808:	sxtb	r0, r0
   1680c:	str	r0, [fp, #-28]	; 0xffffffe4
   16810:	b	17a28 <__assert_fail@plt+0x6a10>
   16814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16818:	ldr	r1, [fp, #8]
   1681c:	mul	r0, r0, r1
   16820:	sxtb	r0, r0
   16824:	str	r0, [fp, #-28]	; 0xffffffe4
   16828:	b	17a38 <__assert_fail@plt+0x6a20>
   1682c:	ldr	r0, [fp, #8]
   16830:	cmp	r0, #0
   16834:	bge	16944 <__assert_fail@plt+0x592c>
   16838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1683c:	cmp	r0, #0
   16840:	bge	168cc <__assert_fail@plt+0x58b4>
   16844:	b	16848 <__assert_fail@plt+0x5830>
   16848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1684c:	ldr	r1, [fp, #8]
   16850:	movw	r2, #255	; 0xff
   16854:	sdiv	r1, r2, r1
   16858:	cmp	r0, r1
   1685c:	blt	169e0 <__assert_fail@plt+0x59c8>
   16860:	b	169f8 <__assert_fail@plt+0x59e0>
   16864:	b	16868 <__assert_fail@plt+0x5850>
   16868:	ldr	r0, [pc, #3584]	; 17670 <__assert_fail@plt+0x6658>
   1686c:	ldr	r1, [fp, #8]
   16870:	cmp	r1, r0
   16874:	blt	1688c <__assert_fail@plt+0x5874>
   16878:	b	16898 <__assert_fail@plt+0x5880>
   1687c:	ldr	r0, [fp, #8]
   16880:	movw	r1, #0
   16884:	cmp	r1, r0
   16888:	bge	16898 <__assert_fail@plt+0x5880>
   1688c:	movw	r0, #0
   16890:	str	r0, [fp, #-44]	; 0xffffffd4
   16894:	b	168b0 <__assert_fail@plt+0x5898>
   16898:	ldr	r0, [fp, #8]
   1689c:	movw	r1, #0
   168a0:	sub	r0, r1, r0
   168a4:	movw	r1, #255	; 0xff
   168a8:	sdiv	r0, r1, r0
   168ac:	str	r0, [fp, #-44]	; 0xffffffd4
   168b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168b8:	mvn	r2, #0
   168bc:	sub	r1, r2, r1
   168c0:	cmp	r0, r1
   168c4:	ble	169e0 <__assert_fail@plt+0x59c8>
   168c8:	b	169f8 <__assert_fail@plt+0x59e0>
   168cc:	b	168d0 <__assert_fail@plt+0x58b8>
   168d0:	b	16928 <__assert_fail@plt+0x5910>
   168d4:	b	16928 <__assert_fail@plt+0x5910>
   168d8:	ldr	r0, [fp, #8]
   168dc:	cmn	r0, #1
   168e0:	bne	16928 <__assert_fail@plt+0x5910>
   168e4:	b	168e8 <__assert_fail@plt+0x58d0>
   168e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168ec:	add	r0, r0, #0
   168f0:	movw	r1, #0
   168f4:	cmp	r1, r0
   168f8:	blt	169e0 <__assert_fail@plt+0x59c8>
   168fc:	b	169f8 <__assert_fail@plt+0x59e0>
   16900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16904:	movw	r1, #0
   16908:	cmp	r1, r0
   1690c:	bge	169f8 <__assert_fail@plt+0x59e0>
   16910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16914:	sub	r0, r0, #1
   16918:	mvn	r1, #0
   1691c:	cmp	r1, r0
   16920:	blt	169e0 <__assert_fail@plt+0x59c8>
   16924:	b	169f8 <__assert_fail@plt+0x59e0>
   16928:	ldr	r0, [fp, #8]
   1692c:	movw	r1, #0
   16930:	sdiv	r0, r1, r0
   16934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16938:	cmp	r0, r1
   1693c:	blt	169e0 <__assert_fail@plt+0x59c8>
   16940:	b	169f8 <__assert_fail@plt+0x59e0>
   16944:	ldr	r0, [fp, #8]
   16948:	cmp	r0, #0
   1694c:	bne	16954 <__assert_fail@plt+0x593c>
   16950:	b	169f8 <__assert_fail@plt+0x59e0>
   16954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16958:	cmp	r0, #0
   1695c:	bge	169c8 <__assert_fail@plt+0x59b0>
   16960:	b	16964 <__assert_fail@plt+0x594c>
   16964:	b	169ac <__assert_fail@plt+0x5994>
   16968:	b	169ac <__assert_fail@plt+0x5994>
   1696c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16970:	cmn	r0, #1
   16974:	bne	169ac <__assert_fail@plt+0x5994>
   16978:	b	1697c <__assert_fail@plt+0x5964>
   1697c:	ldr	r0, [fp, #8]
   16980:	add	r0, r0, #0
   16984:	movw	r1, #0
   16988:	cmp	r1, r0
   1698c:	blt	169e0 <__assert_fail@plt+0x59c8>
   16990:	b	169f8 <__assert_fail@plt+0x59e0>
   16994:	ldr	r0, [fp, #8]
   16998:	sub	r0, r0, #1
   1699c:	mvn	r1, #0
   169a0:	cmp	r1, r0
   169a4:	blt	169e0 <__assert_fail@plt+0x59c8>
   169a8:	b	169f8 <__assert_fail@plt+0x59e0>
   169ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b0:	movw	r1, #0
   169b4:	sdiv	r0, r1, r0
   169b8:	ldr	r1, [fp, #8]
   169bc:	cmp	r0, r1
   169c0:	blt	169e0 <__assert_fail@plt+0x59c8>
   169c4:	b	169f8 <__assert_fail@plt+0x59e0>
   169c8:	ldr	r0, [fp, #8]
   169cc:	movw	r1, #255	; 0xff
   169d0:	sdiv	r0, r1, r0
   169d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169d8:	cmp	r0, r1
   169dc:	bge	169f8 <__assert_fail@plt+0x59e0>
   169e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169e4:	ldr	r1, [fp, #8]
   169e8:	mul	r0, r0, r1
   169ec:	and	r0, r0, #255	; 0xff
   169f0:	str	r0, [fp, #-28]	; 0xffffffe4
   169f4:	b	17a28 <__assert_fail@plt+0x6a10>
   169f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169fc:	ldr	r1, [fp, #8]
   16a00:	mul	r0, r0, r1
   16a04:	and	r0, r0, #255	; 0xff
   16a08:	str	r0, [fp, #-28]	; 0xffffffe4
   16a0c:	b	17a38 <__assert_fail@plt+0x6a20>
   16a10:	b	16de8 <__assert_fail@plt+0x5dd0>
   16a14:	b	16a18 <__assert_fail@plt+0x5a00>
   16a18:	ldr	r0, [fp, #8]
   16a1c:	cmp	r0, #0
   16a20:	bge	16b34 <__assert_fail@plt+0x5b1c>
   16a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a28:	cmp	r0, #0
   16a2c:	bge	16ab8 <__assert_fail@plt+0x5aa0>
   16a30:	b	16a34 <__assert_fail@plt+0x5a1c>
   16a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a38:	ldr	r1, [fp, #8]
   16a3c:	movw	r2, #32767	; 0x7fff
   16a40:	sdiv	r1, r2, r1
   16a44:	cmp	r0, r1
   16a48:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16a4c:	b	16bec <__assert_fail@plt+0x5bd4>
   16a50:	b	16a54 <__assert_fail@plt+0x5a3c>
   16a54:	ldr	r0, [pc, #3092]	; 17670 <__assert_fail@plt+0x6658>
   16a58:	ldr	r1, [fp, #8]
   16a5c:	cmp	r1, r0
   16a60:	blt	16a78 <__assert_fail@plt+0x5a60>
   16a64:	b	16a84 <__assert_fail@plt+0x5a6c>
   16a68:	ldr	r0, [fp, #8]
   16a6c:	movw	r1, #0
   16a70:	cmp	r1, r0
   16a74:	bge	16a84 <__assert_fail@plt+0x5a6c>
   16a78:	movw	r0, #0
   16a7c:	str	r0, [fp, #-48]	; 0xffffffd0
   16a80:	b	16a9c <__assert_fail@plt+0x5a84>
   16a84:	ldr	r0, [fp, #8]
   16a88:	movw	r1, #0
   16a8c:	sub	r0, r1, r0
   16a90:	movw	r1, #32767	; 0x7fff
   16a94:	sdiv	r0, r1, r0
   16a98:	str	r0, [fp, #-48]	; 0xffffffd0
   16a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16aa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aa4:	mvn	r2, #0
   16aa8:	sub	r1, r2, r1
   16aac:	cmp	r0, r1
   16ab0:	ble	16bd4 <__assert_fail@plt+0x5bbc>
   16ab4:	b	16bec <__assert_fail@plt+0x5bd4>
   16ab8:	b	16abc <__assert_fail@plt+0x5aa4>
   16abc:	b	16b18 <__assert_fail@plt+0x5b00>
   16ac0:	b	16b18 <__assert_fail@plt+0x5b00>
   16ac4:	ldr	r0, [fp, #8]
   16ac8:	cmn	r0, #1
   16acc:	bne	16b18 <__assert_fail@plt+0x5b00>
   16ad0:	b	16ad4 <__assert_fail@plt+0x5abc>
   16ad4:	ldr	r0, [pc, #3928]	; 17a34 <__assert_fail@plt+0x6a1c>
   16ad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16adc:	add	r0, r1, r0
   16ae0:	movw	r1, #0
   16ae4:	cmp	r1, r0
   16ae8:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16aec:	b	16bec <__assert_fail@plt+0x5bd4>
   16af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af4:	movw	r1, #0
   16af8:	cmp	r1, r0
   16afc:	bge	16bec <__assert_fail@plt+0x5bd4>
   16b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b04:	sub	r0, r0, #1
   16b08:	movw	r1, #32767	; 0x7fff
   16b0c:	cmp	r1, r0
   16b10:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16b14:	b	16bec <__assert_fail@plt+0x5bd4>
   16b18:	ldr	r0, [pc, #3860]	; 17a34 <__assert_fail@plt+0x6a1c>
   16b1c:	ldr	r1, [fp, #8]
   16b20:	sdiv	r0, r0, r1
   16b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b28:	cmp	r0, r1
   16b2c:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16b30:	b	16bec <__assert_fail@plt+0x5bd4>
   16b34:	ldr	r0, [fp, #8]
   16b38:	cmp	r0, #0
   16b3c:	bne	16b44 <__assert_fail@plt+0x5b2c>
   16b40:	b	16bec <__assert_fail@plt+0x5bd4>
   16b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b48:	cmp	r0, #0
   16b4c:	bge	16bbc <__assert_fail@plt+0x5ba4>
   16b50:	b	16b54 <__assert_fail@plt+0x5b3c>
   16b54:	b	16ba0 <__assert_fail@plt+0x5b88>
   16b58:	b	16ba0 <__assert_fail@plt+0x5b88>
   16b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b60:	cmn	r0, #1
   16b64:	bne	16ba0 <__assert_fail@plt+0x5b88>
   16b68:	b	16b6c <__assert_fail@plt+0x5b54>
   16b6c:	ldr	r0, [pc, #3776]	; 17a34 <__assert_fail@plt+0x6a1c>
   16b70:	ldr	r1, [fp, #8]
   16b74:	add	r0, r1, r0
   16b78:	movw	r1, #0
   16b7c:	cmp	r1, r0
   16b80:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16b84:	b	16bec <__assert_fail@plt+0x5bd4>
   16b88:	ldr	r0, [fp, #8]
   16b8c:	sub	r0, r0, #1
   16b90:	movw	r1, #32767	; 0x7fff
   16b94:	cmp	r1, r0
   16b98:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16b9c:	b	16bec <__assert_fail@plt+0x5bd4>
   16ba0:	ldr	r0, [pc, #3724]	; 17a34 <__assert_fail@plt+0x6a1c>
   16ba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ba8:	sdiv	r0, r0, r1
   16bac:	ldr	r1, [fp, #8]
   16bb0:	cmp	r0, r1
   16bb4:	blt	16bd4 <__assert_fail@plt+0x5bbc>
   16bb8:	b	16bec <__assert_fail@plt+0x5bd4>
   16bbc:	ldr	r0, [fp, #8]
   16bc0:	movw	r1, #32767	; 0x7fff
   16bc4:	sdiv	r0, r1, r0
   16bc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bcc:	cmp	r0, r1
   16bd0:	bge	16bec <__assert_fail@plt+0x5bd4>
   16bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd8:	ldr	r1, [fp, #8]
   16bdc:	mul	r0, r0, r1
   16be0:	sxth	r0, r0
   16be4:	str	r0, [fp, #-28]	; 0xffffffe4
   16be8:	b	17a28 <__assert_fail@plt+0x6a10>
   16bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf0:	ldr	r1, [fp, #8]
   16bf4:	mul	r0, r0, r1
   16bf8:	sxth	r0, r0
   16bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   16c00:	b	17a38 <__assert_fail@plt+0x6a20>
   16c04:	ldr	r0, [fp, #8]
   16c08:	cmp	r0, #0
   16c0c:	bge	16d1c <__assert_fail@plt+0x5d04>
   16c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c14:	cmp	r0, #0
   16c18:	bge	16ca4 <__assert_fail@plt+0x5c8c>
   16c1c:	b	16c20 <__assert_fail@plt+0x5c08>
   16c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c24:	ldr	r1, [fp, #8]
   16c28:	movw	r2, #65535	; 0xffff
   16c2c:	sdiv	r1, r2, r1
   16c30:	cmp	r0, r1
   16c34:	blt	16db8 <__assert_fail@plt+0x5da0>
   16c38:	b	16dd0 <__assert_fail@plt+0x5db8>
   16c3c:	b	16c40 <__assert_fail@plt+0x5c28>
   16c40:	ldr	r0, [pc, #2600]	; 17670 <__assert_fail@plt+0x6658>
   16c44:	ldr	r1, [fp, #8]
   16c48:	cmp	r1, r0
   16c4c:	blt	16c64 <__assert_fail@plt+0x5c4c>
   16c50:	b	16c70 <__assert_fail@plt+0x5c58>
   16c54:	ldr	r0, [fp, #8]
   16c58:	movw	r1, #0
   16c5c:	cmp	r1, r0
   16c60:	bge	16c70 <__assert_fail@plt+0x5c58>
   16c64:	movw	r0, #0
   16c68:	str	r0, [fp, #-52]	; 0xffffffcc
   16c6c:	b	16c88 <__assert_fail@plt+0x5c70>
   16c70:	ldr	r0, [fp, #8]
   16c74:	movw	r1, #0
   16c78:	sub	r0, r1, r0
   16c7c:	movw	r1, #65535	; 0xffff
   16c80:	sdiv	r0, r1, r0
   16c84:	str	r0, [fp, #-52]	; 0xffffffcc
   16c88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16c8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c90:	mvn	r2, #0
   16c94:	sub	r1, r2, r1
   16c98:	cmp	r0, r1
   16c9c:	ble	16db8 <__assert_fail@plt+0x5da0>
   16ca0:	b	16dd0 <__assert_fail@plt+0x5db8>
   16ca4:	b	16ca8 <__assert_fail@plt+0x5c90>
   16ca8:	b	16d00 <__assert_fail@plt+0x5ce8>
   16cac:	b	16d00 <__assert_fail@plt+0x5ce8>
   16cb0:	ldr	r0, [fp, #8]
   16cb4:	cmn	r0, #1
   16cb8:	bne	16d00 <__assert_fail@plt+0x5ce8>
   16cbc:	b	16cc0 <__assert_fail@plt+0x5ca8>
   16cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cc4:	add	r0, r0, #0
   16cc8:	movw	r1, #0
   16ccc:	cmp	r1, r0
   16cd0:	blt	16db8 <__assert_fail@plt+0x5da0>
   16cd4:	b	16dd0 <__assert_fail@plt+0x5db8>
   16cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cdc:	movw	r1, #0
   16ce0:	cmp	r1, r0
   16ce4:	bge	16dd0 <__assert_fail@plt+0x5db8>
   16ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cec:	sub	r0, r0, #1
   16cf0:	mvn	r1, #0
   16cf4:	cmp	r1, r0
   16cf8:	blt	16db8 <__assert_fail@plt+0x5da0>
   16cfc:	b	16dd0 <__assert_fail@plt+0x5db8>
   16d00:	ldr	r0, [fp, #8]
   16d04:	movw	r1, #0
   16d08:	sdiv	r0, r1, r0
   16d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d10:	cmp	r0, r1
   16d14:	blt	16db8 <__assert_fail@plt+0x5da0>
   16d18:	b	16dd0 <__assert_fail@plt+0x5db8>
   16d1c:	ldr	r0, [fp, #8]
   16d20:	cmp	r0, #0
   16d24:	bne	16d2c <__assert_fail@plt+0x5d14>
   16d28:	b	16dd0 <__assert_fail@plt+0x5db8>
   16d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d30:	cmp	r0, #0
   16d34:	bge	16da0 <__assert_fail@plt+0x5d88>
   16d38:	b	16d3c <__assert_fail@plt+0x5d24>
   16d3c:	b	16d84 <__assert_fail@plt+0x5d6c>
   16d40:	b	16d84 <__assert_fail@plt+0x5d6c>
   16d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d48:	cmn	r0, #1
   16d4c:	bne	16d84 <__assert_fail@plt+0x5d6c>
   16d50:	b	16d54 <__assert_fail@plt+0x5d3c>
   16d54:	ldr	r0, [fp, #8]
   16d58:	add	r0, r0, #0
   16d5c:	movw	r1, #0
   16d60:	cmp	r1, r0
   16d64:	blt	16db8 <__assert_fail@plt+0x5da0>
   16d68:	b	16dd0 <__assert_fail@plt+0x5db8>
   16d6c:	ldr	r0, [fp, #8]
   16d70:	sub	r0, r0, #1
   16d74:	mvn	r1, #0
   16d78:	cmp	r1, r0
   16d7c:	blt	16db8 <__assert_fail@plt+0x5da0>
   16d80:	b	16dd0 <__assert_fail@plt+0x5db8>
   16d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d88:	movw	r1, #0
   16d8c:	sdiv	r0, r1, r0
   16d90:	ldr	r1, [fp, #8]
   16d94:	cmp	r0, r1
   16d98:	blt	16db8 <__assert_fail@plt+0x5da0>
   16d9c:	b	16dd0 <__assert_fail@plt+0x5db8>
   16da0:	ldr	r0, [fp, #8]
   16da4:	movw	r1, #65535	; 0xffff
   16da8:	sdiv	r0, r1, r0
   16dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16db0:	cmp	r0, r1
   16db4:	bge	16dd0 <__assert_fail@plt+0x5db8>
   16db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dbc:	ldr	r1, [fp, #8]
   16dc0:	mul	r0, r0, r1
   16dc4:	uxth	r0, r0
   16dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16dcc:	b	17a28 <__assert_fail@plt+0x6a10>
   16dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dd4:	ldr	r1, [fp, #8]
   16dd8:	mul	r0, r0, r1
   16ddc:	uxth	r0, r0
   16de0:	str	r0, [fp, #-28]	; 0xffffffe4
   16de4:	b	17a38 <__assert_fail@plt+0x6a20>
   16de8:	b	16dec <__assert_fail@plt+0x5dd4>
   16dec:	b	16df0 <__assert_fail@plt+0x5dd8>
   16df0:	ldr	r0, [fp, #8]
   16df4:	cmp	r0, #0
   16df8:	bge	16efc <__assert_fail@plt+0x5ee4>
   16dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e00:	cmp	r0, #0
   16e04:	bge	16e90 <__assert_fail@plt+0x5e78>
   16e08:	b	16e0c <__assert_fail@plt+0x5df4>
   16e0c:	ldr	r0, [pc, #1992]	; 175dc <__assert_fail@plt+0x65c4>
   16e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e14:	ldr	r2, [fp, #8]
   16e18:	sdiv	r0, r0, r2
   16e1c:	cmp	r1, r0
   16e20:	blt	16f8c <__assert_fail@plt+0x5f74>
   16e24:	b	16fa0 <__assert_fail@plt+0x5f88>
   16e28:	b	16e2c <__assert_fail@plt+0x5e14>
   16e2c:	ldr	r0, [pc, #2108]	; 17670 <__assert_fail@plt+0x6658>
   16e30:	ldr	r1, [fp, #8]
   16e34:	cmp	r1, r0
   16e38:	blt	16e50 <__assert_fail@plt+0x5e38>
   16e3c:	b	16e5c <__assert_fail@plt+0x5e44>
   16e40:	ldr	r0, [fp, #8]
   16e44:	movw	r1, #0
   16e48:	cmp	r1, r0
   16e4c:	bge	16e5c <__assert_fail@plt+0x5e44>
   16e50:	movw	r0, #0
   16e54:	str	r0, [fp, #-56]	; 0xffffffc8
   16e58:	b	16e74 <__assert_fail@plt+0x5e5c>
   16e5c:	ldr	r0, [pc, #1912]	; 175dc <__assert_fail@plt+0x65c4>
   16e60:	ldr	r1, [fp, #8]
   16e64:	movw	r2, #0
   16e68:	sub	r1, r2, r1
   16e6c:	sdiv	r0, r0, r1
   16e70:	str	r0, [fp, #-56]	; 0xffffffc8
   16e74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e7c:	mvn	r2, #0
   16e80:	sub	r1, r2, r1
   16e84:	cmp	r0, r1
   16e88:	ble	16f8c <__assert_fail@plt+0x5f74>
   16e8c:	b	16fa0 <__assert_fail@plt+0x5f88>
   16e90:	ldr	r0, [fp, #8]
   16e94:	cmn	r0, #1
   16e98:	bne	16ee0 <__assert_fail@plt+0x5ec8>
   16e9c:	b	16ea0 <__assert_fail@plt+0x5e88>
   16ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea4:	add	r0, r0, #-2147483648	; 0x80000000
   16ea8:	movw	r1, #0
   16eac:	cmp	r1, r0
   16eb0:	blt	16f8c <__assert_fail@plt+0x5f74>
   16eb4:	b	16fa0 <__assert_fail@plt+0x5f88>
   16eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ebc:	movw	r1, #0
   16ec0:	cmp	r1, r0
   16ec4:	bge	16fa0 <__assert_fail@plt+0x5f88>
   16ec8:	ldr	r0, [pc, #1804]	; 175dc <__assert_fail@plt+0x65c4>
   16ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ed0:	sub	r1, r1, #1
   16ed4:	cmp	r0, r1
   16ed8:	blt	16f8c <__assert_fail@plt+0x5f74>
   16edc:	b	16fa0 <__assert_fail@plt+0x5f88>
   16ee0:	ldr	r0, [pc, #4072]	; 17ed0 <__assert_fail@plt+0x6eb8>
   16ee4:	ldr	r1, [fp, #8]
   16ee8:	sdiv	r0, r0, r1
   16eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ef0:	cmp	r0, r1
   16ef4:	blt	16f8c <__assert_fail@plt+0x5f74>
   16ef8:	b	16fa0 <__assert_fail@plt+0x5f88>
   16efc:	ldr	r0, [fp, #8]
   16f00:	cmp	r0, #0
   16f04:	bne	16f0c <__assert_fail@plt+0x5ef4>
   16f08:	b	16fa0 <__assert_fail@plt+0x5f88>
   16f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f10:	cmp	r0, #0
   16f14:	bge	16f74 <__assert_fail@plt+0x5f5c>
   16f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f1c:	cmn	r0, #1
   16f20:	bne	16f58 <__assert_fail@plt+0x5f40>
   16f24:	b	16f28 <__assert_fail@plt+0x5f10>
   16f28:	ldr	r0, [fp, #8]
   16f2c:	add	r0, r0, #-2147483648	; 0x80000000
   16f30:	movw	r1, #0
   16f34:	cmp	r1, r0
   16f38:	blt	16f8c <__assert_fail@plt+0x5f74>
   16f3c:	b	16fa0 <__assert_fail@plt+0x5f88>
   16f40:	ldr	r0, [pc, #1684]	; 175dc <__assert_fail@plt+0x65c4>
   16f44:	ldr	r1, [fp, #8]
   16f48:	sub	r1, r1, #1
   16f4c:	cmp	r0, r1
   16f50:	blt	16f8c <__assert_fail@plt+0x5f74>
   16f54:	b	16fa0 <__assert_fail@plt+0x5f88>
   16f58:	ldr	r0, [pc, #3952]	; 17ed0 <__assert_fail@plt+0x6eb8>
   16f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f60:	sdiv	r0, r0, r1
   16f64:	ldr	r1, [fp, #8]
   16f68:	cmp	r0, r1
   16f6c:	blt	16f8c <__assert_fail@plt+0x5f74>
   16f70:	b	16fa0 <__assert_fail@plt+0x5f88>
   16f74:	ldr	r0, [pc, #1632]	; 175dc <__assert_fail@plt+0x65c4>
   16f78:	ldr	r1, [fp, #8]
   16f7c:	sdiv	r0, r0, r1
   16f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f84:	cmp	r0, r1
   16f88:	bge	16fa0 <__assert_fail@plt+0x5f88>
   16f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f90:	ldr	r1, [fp, #8]
   16f94:	mul	r0, r0, r1
   16f98:	str	r0, [fp, #-28]	; 0xffffffe4
   16f9c:	b	17a28 <__assert_fail@plt+0x6a10>
   16fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa4:	ldr	r1, [fp, #8]
   16fa8:	mul	r0, r0, r1
   16fac:	str	r0, [fp, #-28]	; 0xffffffe4
   16fb0:	b	17a38 <__assert_fail@plt+0x6a20>
   16fb4:	ldr	r0, [fp, #8]
   16fb8:	cmp	r0, #0
   16fbc:	bge	170cc <__assert_fail@plt+0x60b4>
   16fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fc4:	cmp	r0, #0
   16fc8:	bge	17054 <__assert_fail@plt+0x603c>
   16fcc:	b	16fec <__assert_fail@plt+0x5fd4>
   16fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd4:	ldr	r1, [fp, #8]
   16fd8:	mvn	r2, #0
   16fdc:	udiv	r1, r2, r1
   16fe0:	cmp	r0, r1
   16fe4:	bcc	17168 <__assert_fail@plt+0x6150>
   16fe8:	b	1717c <__assert_fail@plt+0x6164>
   16fec:	b	16ff0 <__assert_fail@plt+0x5fd8>
   16ff0:	ldr	r0, [pc, #1656]	; 17670 <__assert_fail@plt+0x6658>
   16ff4:	ldr	r1, [fp, #8]
   16ff8:	cmp	r1, r0
   16ffc:	blt	17014 <__assert_fail@plt+0x5ffc>
   17000:	b	17020 <__assert_fail@plt+0x6008>
   17004:	ldr	r0, [fp, #8]
   17008:	movw	r1, #0
   1700c:	cmp	r1, r0
   17010:	bge	17020 <__assert_fail@plt+0x6008>
   17014:	movw	r0, #1
   17018:	str	r0, [fp, #-60]	; 0xffffffc4
   1701c:	b	17038 <__assert_fail@plt+0x6020>
   17020:	ldr	r0, [fp, #8]
   17024:	movw	r1, #0
   17028:	sub	r0, r1, r0
   1702c:	mvn	r1, #0
   17030:	udiv	r0, r1, r0
   17034:	str	r0, [fp, #-60]	; 0xffffffc4
   17038:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1703c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17040:	mvn	r2, #0
   17044:	sub	r1, r2, r1
   17048:	cmp	r0, r1
   1704c:	bls	17168 <__assert_fail@plt+0x6150>
   17050:	b	1717c <__assert_fail@plt+0x6164>
   17054:	b	17058 <__assert_fail@plt+0x6040>
   17058:	b	170b0 <__assert_fail@plt+0x6098>
   1705c:	b	170b0 <__assert_fail@plt+0x6098>
   17060:	ldr	r0, [fp, #8]
   17064:	cmn	r0, #1
   17068:	bne	170b0 <__assert_fail@plt+0x6098>
   1706c:	b	17070 <__assert_fail@plt+0x6058>
   17070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17074:	add	r0, r0, #0
   17078:	movw	r1, #0
   1707c:	cmp	r1, r0
   17080:	blt	17168 <__assert_fail@plt+0x6150>
   17084:	b	1717c <__assert_fail@plt+0x6164>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	movw	r1, #0
   17090:	cmp	r1, r0
   17094:	bge	1717c <__assert_fail@plt+0x6164>
   17098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1709c:	sub	r0, r0, #1
   170a0:	mvn	r1, #0
   170a4:	cmp	r1, r0
   170a8:	blt	17168 <__assert_fail@plt+0x6150>
   170ac:	b	1717c <__assert_fail@plt+0x6164>
   170b0:	ldr	r0, [fp, #8]
   170b4:	movw	r1, #0
   170b8:	sdiv	r0, r1, r0
   170bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170c0:	cmp	r0, r1
   170c4:	blt	17168 <__assert_fail@plt+0x6150>
   170c8:	b	1717c <__assert_fail@plt+0x6164>
   170cc:	ldr	r0, [fp, #8]
   170d0:	cmp	r0, #0
   170d4:	bne	170dc <__assert_fail@plt+0x60c4>
   170d8:	b	1717c <__assert_fail@plt+0x6164>
   170dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e0:	cmp	r0, #0
   170e4:	bge	17150 <__assert_fail@plt+0x6138>
   170e8:	b	170ec <__assert_fail@plt+0x60d4>
   170ec:	b	17134 <__assert_fail@plt+0x611c>
   170f0:	b	17134 <__assert_fail@plt+0x611c>
   170f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f8:	cmn	r0, #1
   170fc:	bne	17134 <__assert_fail@plt+0x611c>
   17100:	b	17104 <__assert_fail@plt+0x60ec>
   17104:	ldr	r0, [fp, #8]
   17108:	add	r0, r0, #0
   1710c:	movw	r1, #0
   17110:	cmp	r1, r0
   17114:	blt	17168 <__assert_fail@plt+0x6150>
   17118:	b	1717c <__assert_fail@plt+0x6164>
   1711c:	ldr	r0, [fp, #8]
   17120:	sub	r0, r0, #1
   17124:	mvn	r1, #0
   17128:	cmp	r1, r0
   1712c:	blt	17168 <__assert_fail@plt+0x6150>
   17130:	b	1717c <__assert_fail@plt+0x6164>
   17134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17138:	movw	r1, #0
   1713c:	sdiv	r0, r1, r0
   17140:	ldr	r1, [fp, #8]
   17144:	cmp	r0, r1
   17148:	blt	17168 <__assert_fail@plt+0x6150>
   1714c:	b	1717c <__assert_fail@plt+0x6164>
   17150:	ldr	r0, [fp, #8]
   17154:	mvn	r1, #0
   17158:	udiv	r0, r1, r0
   1715c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17160:	cmp	r0, r1
   17164:	bcs	1717c <__assert_fail@plt+0x6164>
   17168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1716c:	ldr	r1, [fp, #8]
   17170:	mul	r0, r0, r1
   17174:	str	r0, [fp, #-28]	; 0xffffffe4
   17178:	b	17a28 <__assert_fail@plt+0x6a10>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	ldr	r1, [fp, #8]
   17184:	mul	r0, r0, r1
   17188:	str	r0, [fp, #-28]	; 0xffffffe4
   1718c:	b	17a38 <__assert_fail@plt+0x6a20>
   17190:	b	17194 <__assert_fail@plt+0x617c>
   17194:	b	17198 <__assert_fail@plt+0x6180>
   17198:	ldr	r0, [fp, #8]
   1719c:	cmp	r0, #0
   171a0:	bge	172a4 <__assert_fail@plt+0x628c>
   171a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a8:	cmp	r0, #0
   171ac:	bge	17238 <__assert_fail@plt+0x6220>
   171b0:	b	171b4 <__assert_fail@plt+0x619c>
   171b4:	ldr	r0, [pc, #1056]	; 175dc <__assert_fail@plt+0x65c4>
   171b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171bc:	ldr	r2, [fp, #8]
   171c0:	sdiv	r0, r0, r2
   171c4:	cmp	r1, r0
   171c8:	blt	17334 <__assert_fail@plt+0x631c>
   171cc:	b	17348 <__assert_fail@plt+0x6330>
   171d0:	b	171d4 <__assert_fail@plt+0x61bc>
   171d4:	ldr	r0, [pc, #1172]	; 17670 <__assert_fail@plt+0x6658>
   171d8:	ldr	r1, [fp, #8]
   171dc:	cmp	r1, r0
   171e0:	blt	171f8 <__assert_fail@plt+0x61e0>
   171e4:	b	17204 <__assert_fail@plt+0x61ec>
   171e8:	ldr	r0, [fp, #8]
   171ec:	movw	r1, #0
   171f0:	cmp	r1, r0
   171f4:	bge	17204 <__assert_fail@plt+0x61ec>
   171f8:	movw	r0, #0
   171fc:	str	r0, [fp, #-64]	; 0xffffffc0
   17200:	b	1721c <__assert_fail@plt+0x6204>
   17204:	ldr	r0, [pc, #976]	; 175dc <__assert_fail@plt+0x65c4>
   17208:	ldr	r1, [fp, #8]
   1720c:	movw	r2, #0
   17210:	sub	r1, r2, r1
   17214:	sdiv	r0, r0, r1
   17218:	str	r0, [fp, #-64]	; 0xffffffc0
   1721c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17220:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17224:	mvn	r2, #0
   17228:	sub	r1, r2, r1
   1722c:	cmp	r0, r1
   17230:	ble	17334 <__assert_fail@plt+0x631c>
   17234:	b	17348 <__assert_fail@plt+0x6330>
   17238:	ldr	r0, [fp, #8]
   1723c:	cmn	r0, #1
   17240:	bne	17288 <__assert_fail@plt+0x6270>
   17244:	b	17248 <__assert_fail@plt+0x6230>
   17248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1724c:	add	r0, r0, #-2147483648	; 0x80000000
   17250:	movw	r1, #0
   17254:	cmp	r1, r0
   17258:	blt	17334 <__assert_fail@plt+0x631c>
   1725c:	b	17348 <__assert_fail@plt+0x6330>
   17260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17264:	movw	r1, #0
   17268:	cmp	r1, r0
   1726c:	bge	17348 <__assert_fail@plt+0x6330>
   17270:	ldr	r0, [pc, #868]	; 175dc <__assert_fail@plt+0x65c4>
   17274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17278:	sub	r1, r1, #1
   1727c:	cmp	r0, r1
   17280:	blt	17334 <__assert_fail@plt+0x631c>
   17284:	b	17348 <__assert_fail@plt+0x6330>
   17288:	ldr	r0, [pc, #3136]	; 17ed0 <__assert_fail@plt+0x6eb8>
   1728c:	ldr	r1, [fp, #8]
   17290:	sdiv	r0, r0, r1
   17294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17298:	cmp	r0, r1
   1729c:	blt	17334 <__assert_fail@plt+0x631c>
   172a0:	b	17348 <__assert_fail@plt+0x6330>
   172a4:	ldr	r0, [fp, #8]
   172a8:	cmp	r0, #0
   172ac:	bne	172b4 <__assert_fail@plt+0x629c>
   172b0:	b	17348 <__assert_fail@plt+0x6330>
   172b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b8:	cmp	r0, #0
   172bc:	bge	1731c <__assert_fail@plt+0x6304>
   172c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c4:	cmn	r0, #1
   172c8:	bne	17300 <__assert_fail@plt+0x62e8>
   172cc:	b	172d0 <__assert_fail@plt+0x62b8>
   172d0:	ldr	r0, [fp, #8]
   172d4:	add	r0, r0, #-2147483648	; 0x80000000
   172d8:	movw	r1, #0
   172dc:	cmp	r1, r0
   172e0:	blt	17334 <__assert_fail@plt+0x631c>
   172e4:	b	17348 <__assert_fail@plt+0x6330>
   172e8:	ldr	r0, [pc, #748]	; 175dc <__assert_fail@plt+0x65c4>
   172ec:	ldr	r1, [fp, #8]
   172f0:	sub	r1, r1, #1
   172f4:	cmp	r0, r1
   172f8:	blt	17334 <__assert_fail@plt+0x631c>
   172fc:	b	17348 <__assert_fail@plt+0x6330>
   17300:	ldr	r0, [pc, #3016]	; 17ed0 <__assert_fail@plt+0x6eb8>
   17304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17308:	sdiv	r0, r0, r1
   1730c:	ldr	r1, [fp, #8]
   17310:	cmp	r0, r1
   17314:	blt	17334 <__assert_fail@plt+0x631c>
   17318:	b	17348 <__assert_fail@plt+0x6330>
   1731c:	ldr	r0, [pc, #696]	; 175dc <__assert_fail@plt+0x65c4>
   17320:	ldr	r1, [fp, #8]
   17324:	sdiv	r0, r0, r1
   17328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1732c:	cmp	r0, r1
   17330:	bge	17348 <__assert_fail@plt+0x6330>
   17334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r1, [fp, #8]
   1733c:	mul	r0, r0, r1
   17340:	str	r0, [fp, #-28]	; 0xffffffe4
   17344:	b	17a28 <__assert_fail@plt+0x6a10>
   17348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1734c:	ldr	r1, [fp, #8]
   17350:	mul	r0, r0, r1
   17354:	str	r0, [fp, #-28]	; 0xffffffe4
   17358:	b	17a38 <__assert_fail@plt+0x6a20>
   1735c:	ldr	r0, [fp, #8]
   17360:	cmp	r0, #0
   17364:	bge	17474 <__assert_fail@plt+0x645c>
   17368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1736c:	cmp	r0, #0
   17370:	bge	173fc <__assert_fail@plt+0x63e4>
   17374:	b	17394 <__assert_fail@plt+0x637c>
   17378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1737c:	ldr	r1, [fp, #8]
   17380:	mvn	r2, #0
   17384:	udiv	r1, r2, r1
   17388:	cmp	r0, r1
   1738c:	bcc	17510 <__assert_fail@plt+0x64f8>
   17390:	b	17524 <__assert_fail@plt+0x650c>
   17394:	b	17398 <__assert_fail@plt+0x6380>
   17398:	ldr	r0, [pc, #720]	; 17670 <__assert_fail@plt+0x6658>
   1739c:	ldr	r1, [fp, #8]
   173a0:	cmp	r1, r0
   173a4:	blt	173bc <__assert_fail@plt+0x63a4>
   173a8:	b	173c8 <__assert_fail@plt+0x63b0>
   173ac:	ldr	r0, [fp, #8]
   173b0:	movw	r1, #0
   173b4:	cmp	r1, r0
   173b8:	bge	173c8 <__assert_fail@plt+0x63b0>
   173bc:	movw	r0, #1
   173c0:	str	r0, [fp, #-68]	; 0xffffffbc
   173c4:	b	173e0 <__assert_fail@plt+0x63c8>
   173c8:	ldr	r0, [fp, #8]
   173cc:	movw	r1, #0
   173d0:	sub	r0, r1, r0
   173d4:	mvn	r1, #0
   173d8:	udiv	r0, r1, r0
   173dc:	str	r0, [fp, #-68]	; 0xffffffbc
   173e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   173e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173e8:	mvn	r2, #0
   173ec:	sub	r1, r2, r1
   173f0:	cmp	r0, r1
   173f4:	bls	17510 <__assert_fail@plt+0x64f8>
   173f8:	b	17524 <__assert_fail@plt+0x650c>
   173fc:	b	17400 <__assert_fail@plt+0x63e8>
   17400:	b	17458 <__assert_fail@plt+0x6440>
   17404:	b	17458 <__assert_fail@plt+0x6440>
   17408:	ldr	r0, [fp, #8]
   1740c:	cmn	r0, #1
   17410:	bne	17458 <__assert_fail@plt+0x6440>
   17414:	b	17418 <__assert_fail@plt+0x6400>
   17418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1741c:	add	r0, r0, #0
   17420:	movw	r1, #0
   17424:	cmp	r1, r0
   17428:	blt	17510 <__assert_fail@plt+0x64f8>
   1742c:	b	17524 <__assert_fail@plt+0x650c>
   17430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17434:	movw	r1, #0
   17438:	cmp	r1, r0
   1743c:	bge	17524 <__assert_fail@plt+0x650c>
   17440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17444:	sub	r0, r0, #1
   17448:	mvn	r1, #0
   1744c:	cmp	r1, r0
   17450:	blt	17510 <__assert_fail@plt+0x64f8>
   17454:	b	17524 <__assert_fail@plt+0x650c>
   17458:	ldr	r0, [fp, #8]
   1745c:	movw	r1, #0
   17460:	sdiv	r0, r1, r0
   17464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17468:	cmp	r0, r1
   1746c:	blt	17510 <__assert_fail@plt+0x64f8>
   17470:	b	17524 <__assert_fail@plt+0x650c>
   17474:	ldr	r0, [fp, #8]
   17478:	cmp	r0, #0
   1747c:	bne	17484 <__assert_fail@plt+0x646c>
   17480:	b	17524 <__assert_fail@plt+0x650c>
   17484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17488:	cmp	r0, #0
   1748c:	bge	174f8 <__assert_fail@plt+0x64e0>
   17490:	b	17494 <__assert_fail@plt+0x647c>
   17494:	b	174dc <__assert_fail@plt+0x64c4>
   17498:	b	174dc <__assert_fail@plt+0x64c4>
   1749c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a0:	cmn	r0, #1
   174a4:	bne	174dc <__assert_fail@plt+0x64c4>
   174a8:	b	174ac <__assert_fail@plt+0x6494>
   174ac:	ldr	r0, [fp, #8]
   174b0:	add	r0, r0, #0
   174b4:	movw	r1, #0
   174b8:	cmp	r1, r0
   174bc:	blt	17510 <__assert_fail@plt+0x64f8>
   174c0:	b	17524 <__assert_fail@plt+0x650c>
   174c4:	ldr	r0, [fp, #8]
   174c8:	sub	r0, r0, #1
   174cc:	mvn	r1, #0
   174d0:	cmp	r1, r0
   174d4:	blt	17510 <__assert_fail@plt+0x64f8>
   174d8:	b	17524 <__assert_fail@plt+0x650c>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	movw	r1, #0
   174e4:	sdiv	r0, r1, r0
   174e8:	ldr	r1, [fp, #8]
   174ec:	cmp	r0, r1
   174f0:	blt	17510 <__assert_fail@plt+0x64f8>
   174f4:	b	17524 <__assert_fail@plt+0x650c>
   174f8:	ldr	r0, [fp, #8]
   174fc:	mvn	r1, #0
   17500:	udiv	r0, r1, r0
   17504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17508:	cmp	r0, r1
   1750c:	bcs	17524 <__assert_fail@plt+0x650c>
   17510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17514:	ldr	r1, [fp, #8]
   17518:	mul	r0, r0, r1
   1751c:	str	r0, [fp, #-28]	; 0xffffffe4
   17520:	b	17a28 <__assert_fail@plt+0x6a10>
   17524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17528:	ldr	r1, [fp, #8]
   1752c:	mul	r0, r0, r1
   17530:	str	r0, [fp, #-28]	; 0xffffffe4
   17534:	b	17a38 <__assert_fail@plt+0x6a20>
   17538:	b	1753c <__assert_fail@plt+0x6524>
   1753c:	ldr	r0, [fp, #8]
   17540:	cmp	r0, #0
   17544:	bge	176d4 <__assert_fail@plt+0x66bc>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	cmp	r0, #0
   17550:	bge	1763c <__assert_fail@plt+0x6624>
   17554:	b	17558 <__assert_fail@plt+0x6540>
   17558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1755c:	ldr	r1, [fp, #8]
   17560:	asr	r3, r1, #31
   17564:	mvn	r2, #0
   17568:	mvn	ip, #-2147483648	; 0x80000000
   1756c:	str	r0, [fp, #-72]	; 0xffffffb8
   17570:	mov	r0, r2
   17574:	str	r1, [fp, #-76]	; 0xffffffb4
   17578:	mov	r1, ip
   1757c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17580:	bl	1b348 <__assert_fail@plt+0xa330>
   17584:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17588:	subs	r0, r2, r0
   1758c:	rscs	r1, r1, r2, asr #31
   17590:	str	r0, [fp, #-80]	; 0xffffffb0
   17594:	str	r1, [fp, #-84]	; 0xffffffac
   17598:	blt	177b4 <__assert_fail@plt+0x679c>
   1759c:	b	177c8 <__assert_fail@plt+0x67b0>
   175a0:	b	175a4 <__assert_fail@plt+0x658c>
   175a4:	ldr	r0, [pc, #196]	; 17670 <__assert_fail@plt+0x6658>
   175a8:	ldr	r1, [fp, #8]
   175ac:	cmp	r1, r0
   175b0:	blt	175c8 <__assert_fail@plt+0x65b0>
   175b4:	b	175e0 <__assert_fail@plt+0x65c8>
   175b8:	ldr	r0, [fp, #8]
   175bc:	movw	r1, #0
   175c0:	cmp	r1, r0
   175c4:	bge	175e0 <__assert_fail@plt+0x65c8>
   175c8:	mov	r0, #0
   175cc:	mvn	r1, #0
   175d0:	str	r1, [fp, #-88]	; 0xffffffa8
   175d4:	str	r0, [fp, #-92]	; 0xffffffa4
   175d8:	b	17614 <__assert_fail@plt+0x65fc>
   175dc:	svcvc	0x00ffffff
   175e0:	ldr	r0, [fp, #8]
   175e4:	rsb	r0, r0, #0
   175e8:	asr	r3, r0, #31
   175ec:	mvn	r1, #0
   175f0:	mvn	r2, #-2147483648	; 0x80000000
   175f4:	str	r0, [fp, #-96]	; 0xffffffa0
   175f8:	mov	r0, r1
   175fc:	mov	r1, r2
   17600:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17604:	bl	1b348 <__assert_fail@plt+0xa330>
   17608:	str	r0, [fp, #-88]	; 0xffffffa8
   1760c:	str	r1, [fp, #-92]	; 0xffffffa4
   17610:	b	17614 <__assert_fail@plt+0x65fc>
   17614:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17618:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1761c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17620:	mvn	r2, r2
   17624:	subs	r1, r2, r1
   17628:	rscs	r0, r0, r2, asr #31
   1762c:	str	r1, [fp, #-100]	; 0xffffff9c
   17630:	str	r0, [fp, #-104]	; 0xffffff98
   17634:	bge	177b4 <__assert_fail@plt+0x679c>
   17638:	b	177c8 <__assert_fail@plt+0x67b0>
   1763c:	ldr	r0, [fp, #8]
   17640:	cmn	r0, #1
   17644:	bne	17694 <__assert_fail@plt+0x667c>
   17648:	b	1764c <__assert_fail@plt+0x6634>
   1764c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17650:	mov	r1, #-2147483648	; 0x80000000
   17654:	add	r1, r1, r0, asr #31
   17658:	rsbs	r0, r0, #0
   1765c:	rscs	r1, r1, #0
   17660:	str	r0, [fp, #-108]	; 0xffffff94
   17664:	str	r1, [fp, #-112]	; 0xffffff90
   17668:	blt	177b4 <__assert_fail@plt+0x679c>
   1766c:	b	177c8 <__assert_fail@plt+0x67b0>
   17670:	andhi	r0, r0, r1
   17674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17678:	movw	r1, #0
   1767c:	cmp	r1, r0
   17680:	bge	177c8 <__assert_fail@plt+0x67b0>
   17684:	mov	r0, #0
   17688:	cmp	r0, #0
   1768c:	bne	177b4 <__assert_fail@plt+0x679c>
   17690:	b	177c8 <__assert_fail@plt+0x67b0>
   17694:	ldr	r0, [fp, #8]
   17698:	asr	r3, r0, #31
   1769c:	mov	r1, #0
   176a0:	mov	r2, #-2147483648	; 0x80000000
   176a4:	str	r0, [fp, #-116]	; 0xffffff8c
   176a8:	mov	r0, r1
   176ac:	mov	r1, r2
   176b0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   176b4:	bl	1b348 <__assert_fail@plt+0xa330>
   176b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176bc:	subs	r0, r0, r2
   176c0:	sbcs	r1, r1, r2, asr #31
   176c4:	str	r0, [fp, #-120]	; 0xffffff88
   176c8:	str	r1, [fp, #-124]	; 0xffffff84
   176cc:	blt	177b4 <__assert_fail@plt+0x679c>
   176d0:	b	177c8 <__assert_fail@plt+0x67b0>
   176d4:	ldr	r0, [fp, #8]
   176d8:	cmp	r0, #0
   176dc:	bne	176e4 <__assert_fail@plt+0x66cc>
   176e0:	b	177c8 <__assert_fail@plt+0x67b0>
   176e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176e8:	cmp	r0, #0
   176ec:	bge	17774 <__assert_fail@plt+0x675c>
   176f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f4:	cmn	r0, #1
   176f8:	bne	17734 <__assert_fail@plt+0x671c>
   176fc:	b	17700 <__assert_fail@plt+0x66e8>
   17700:	ldr	r0, [fp, #8]
   17704:	mov	r1, #-2147483648	; 0x80000000
   17708:	add	r1, r1, r0, asr #31
   1770c:	rsbs	r0, r0, #0
   17710:	rscs	r1, r1, #0
   17714:	str	r0, [fp, #-128]	; 0xffffff80
   17718:	str	r1, [fp, #-132]	; 0xffffff7c
   1771c:	blt	177b4 <__assert_fail@plt+0x679c>
   17720:	b	177c8 <__assert_fail@plt+0x67b0>
   17724:	mov	r0, #0
   17728:	cmp	r0, #0
   1772c:	bne	177b4 <__assert_fail@plt+0x679c>
   17730:	b	177c8 <__assert_fail@plt+0x67b0>
   17734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17738:	asr	r3, r0, #31
   1773c:	mov	r1, #0
   17740:	mov	r2, #-2147483648	; 0x80000000
   17744:	str	r0, [fp, #-136]	; 0xffffff78
   17748:	mov	r0, r1
   1774c:	mov	r1, r2
   17750:	ldr	r2, [fp, #-136]	; 0xffffff78
   17754:	bl	1b348 <__assert_fail@plt+0xa330>
   17758:	ldr	r2, [fp, #8]
   1775c:	subs	r0, r0, r2
   17760:	sbcs	r1, r1, r2, asr #31
   17764:	str	r0, [fp, #-140]	; 0xffffff74
   17768:	str	r1, [fp, #-144]	; 0xffffff70
   1776c:	blt	177b4 <__assert_fail@plt+0x679c>
   17770:	b	177c8 <__assert_fail@plt+0x67b0>
   17774:	ldr	r0, [fp, #8]
   17778:	asr	r3, r0, #31
   1777c:	mvn	r1, #0
   17780:	mvn	r2, #-2147483648	; 0x80000000
   17784:	str	r0, [fp, #-148]	; 0xffffff6c
   17788:	mov	r0, r1
   1778c:	mov	r1, r2
   17790:	ldr	r2, [fp, #-148]	; 0xffffff6c
   17794:	bl	1b348 <__assert_fail@plt+0xa330>
   17798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1779c:	subs	r0, r0, r2
   177a0:	sbcs	r1, r1, r2, asr #31
   177a4:	str	r0, [fp, #-152]	; 0xffffff68
   177a8:	str	r1, [fp, #-156]	; 0xffffff64
   177ac:	bge	177c8 <__assert_fail@plt+0x67b0>
   177b0:	b	177b4 <__assert_fail@plt+0x679c>
   177b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177b8:	ldr	r1, [fp, #8]
   177bc:	mul	r0, r0, r1
   177c0:	str	r0, [fp, #-28]	; 0xffffffe4
   177c4:	b	17a28 <__assert_fail@plt+0x6a10>
   177c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177cc:	ldr	r1, [fp, #8]
   177d0:	mul	r0, r0, r1
   177d4:	str	r0, [fp, #-28]	; 0xffffffe4
   177d8:	b	17a38 <__assert_fail@plt+0x6a20>
   177dc:	ldr	r0, [fp, #8]
   177e0:	cmp	r0, #0
   177e4:	bge	17944 <__assert_fail@plt+0x692c>
   177e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177ec:	cmp	r0, #0
   177f0:	bge	178cc <__assert_fail@plt+0x68b4>
   177f4:	b	1783c <__assert_fail@plt+0x6824>
   177f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177fc:	ldr	r1, [fp, #8]
   17800:	asr	r3, r1, #31
   17804:	mvn	r2, #0
   17808:	str	r0, [fp, #-160]	; 0xffffff60
   1780c:	mov	r0, r2
   17810:	str	r1, [fp, #-164]	; 0xffffff5c
   17814:	mov	r1, r2
   17818:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1781c:	bl	1b41c <__assert_fail@plt+0xa404>
   17820:	ldr	r2, [fp, #-160]	; 0xffffff60
   17824:	subs	r0, r2, r0
   17828:	rscs	r1, r1, r2, asr #31
   1782c:	str	r0, [fp, #-168]	; 0xffffff58
   17830:	str	r1, [fp, #-172]	; 0xffffff54
   17834:	bcc	17a00 <__assert_fail@plt+0x69e8>
   17838:	b	17a14 <__assert_fail@plt+0x69fc>
   1783c:	b	17840 <__assert_fail@plt+0x6828>
   17840:	ldr	r0, [pc, #-472]	; 17670 <__assert_fail@plt+0x6658>
   17844:	ldr	r1, [fp, #8]
   17848:	cmp	r1, r0
   1784c:	blt	17864 <__assert_fail@plt+0x684c>
   17850:	b	17878 <__assert_fail@plt+0x6860>
   17854:	ldr	r0, [fp, #8]
   17858:	movw	r1, #0
   1785c:	cmp	r1, r0
   17860:	bge	17878 <__assert_fail@plt+0x6860>
   17864:	mov	r0, #1
   17868:	mvn	r1, #0
   1786c:	str	r1, [fp, #-176]	; 0xffffff50
   17870:	str	r0, [fp, #-180]	; 0xffffff4c
   17874:	b	178a4 <__assert_fail@plt+0x688c>
   17878:	ldr	r0, [fp, #8]
   1787c:	rsb	r0, r0, #0
   17880:	asr	r3, r0, #31
   17884:	mvn	r1, #0
   17888:	str	r0, [fp, #-184]	; 0xffffff48
   1788c:	mov	r0, r1
   17890:	ldr	r2, [fp, #-184]	; 0xffffff48
   17894:	bl	1b41c <__assert_fail@plt+0xa404>
   17898:	str	r0, [fp, #-176]	; 0xffffff50
   1789c:	str	r1, [fp, #-180]	; 0xffffff4c
   178a0:	b	178a4 <__assert_fail@plt+0x688c>
   178a4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   178a8:	ldr	r1, [fp, #-176]	; 0xffffff50
   178ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178b0:	mvn	r2, r2
   178b4:	subs	r1, r2, r1
   178b8:	rscs	r0, r0, r2, asr #31
   178bc:	str	r1, [sp, #188]	; 0xbc
   178c0:	str	r0, [sp, #184]	; 0xb8
   178c4:	bcs	17a00 <__assert_fail@plt+0x69e8>
   178c8:	b	17a14 <__assert_fail@plt+0x69fc>
   178cc:	b	178d0 <__assert_fail@plt+0x68b8>
   178d0:	b	17928 <__assert_fail@plt+0x6910>
   178d4:	b	17928 <__assert_fail@plt+0x6910>
   178d8:	ldr	r0, [fp, #8]
   178dc:	cmn	r0, #1
   178e0:	bne	17928 <__assert_fail@plt+0x6910>
   178e4:	b	178e8 <__assert_fail@plt+0x68d0>
   178e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178ec:	add	r0, r0, #0
   178f0:	movw	r1, #0
   178f4:	cmp	r1, r0
   178f8:	blt	17a00 <__assert_fail@plt+0x69e8>
   178fc:	b	17a14 <__assert_fail@plt+0x69fc>
   17900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17904:	movw	r1, #0
   17908:	cmp	r1, r0
   1790c:	bge	17a14 <__assert_fail@plt+0x69fc>
   17910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17914:	sub	r0, r0, #1
   17918:	mvn	r1, #0
   1791c:	cmp	r1, r0
   17920:	blt	17a00 <__assert_fail@plt+0x69e8>
   17924:	b	17a14 <__assert_fail@plt+0x69fc>
   17928:	ldr	r0, [fp, #8]
   1792c:	movw	r1, #0
   17930:	sdiv	r0, r1, r0
   17934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17938:	cmp	r0, r1
   1793c:	blt	17a00 <__assert_fail@plt+0x69e8>
   17940:	b	17a14 <__assert_fail@plt+0x69fc>
   17944:	ldr	r0, [fp, #8]
   17948:	cmp	r0, #0
   1794c:	bne	17954 <__assert_fail@plt+0x693c>
   17950:	b	17a14 <__assert_fail@plt+0x69fc>
   17954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17958:	cmp	r0, #0
   1795c:	bge	179c8 <__assert_fail@plt+0x69b0>
   17960:	b	17964 <__assert_fail@plt+0x694c>
   17964:	b	179ac <__assert_fail@plt+0x6994>
   17968:	b	179ac <__assert_fail@plt+0x6994>
   1796c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17970:	cmn	r0, #1
   17974:	bne	179ac <__assert_fail@plt+0x6994>
   17978:	b	1797c <__assert_fail@plt+0x6964>
   1797c:	ldr	r0, [fp, #8]
   17980:	add	r0, r0, #0
   17984:	movw	r1, #0
   17988:	cmp	r1, r0
   1798c:	blt	17a00 <__assert_fail@plt+0x69e8>
   17990:	b	17a14 <__assert_fail@plt+0x69fc>
   17994:	ldr	r0, [fp, #8]
   17998:	sub	r0, r0, #1
   1799c:	mvn	r1, #0
   179a0:	cmp	r1, r0
   179a4:	blt	17a00 <__assert_fail@plt+0x69e8>
   179a8:	b	17a14 <__assert_fail@plt+0x69fc>
   179ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b0:	movw	r1, #0
   179b4:	sdiv	r0, r1, r0
   179b8:	ldr	r1, [fp, #8]
   179bc:	cmp	r0, r1
   179c0:	blt	17a00 <__assert_fail@plt+0x69e8>
   179c4:	b	17a14 <__assert_fail@plt+0x69fc>
   179c8:	ldr	r0, [fp, #8]
   179cc:	asr	r3, r0, #31
   179d0:	mvn	r1, #0
   179d4:	str	r0, [sp, #180]	; 0xb4
   179d8:	mov	r0, r1
   179dc:	ldr	r2, [sp, #180]	; 0xb4
   179e0:	bl	1b41c <__assert_fail@plt+0xa404>
   179e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   179e8:	subs	r0, r0, r2
   179ec:	sbcs	r1, r1, r2, asr #31
   179f0:	str	r0, [sp, #176]	; 0xb0
   179f4:	str	r1, [sp, #172]	; 0xac
   179f8:	bcs	17a14 <__assert_fail@plt+0x69fc>
   179fc:	b	17a00 <__assert_fail@plt+0x69e8>
   17a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a04:	ldr	r1, [fp, #8]
   17a08:	mul	r0, r0, r1
   17a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a10:	b	17a28 <__assert_fail@plt+0x6a10>
   17a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a18:	ldr	r1, [fp, #8]
   17a1c:	mul	r0, r0, r1
   17a20:	str	r0, [fp, #-28]	; 0xffffffe4
   17a24:	b	17a38 <__assert_fail@plt+0x6a20>
   17a28:	ldr	r0, [pc, #-1108]	; 175dc <__assert_fail@plt+0x65c4>
   17a2c:	str	r0, [sp, #168]	; 0xa8
   17a30:	b	17a58 <__assert_fail@plt+0x6a40>
   17a34:			; <UNDEFINED> instruction: 0xffff8000
   17a38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a3c:	cmp	r0, #64	; 0x40
   17a40:	movw	r0, #0
   17a44:	movlt	r0, #1
   17a48:	tst	r0, #1
   17a4c:	movw	r0, #64	; 0x40
   17a50:	moveq	r0, #0
   17a54:	str	r0, [sp, #168]	; 0xa8
   17a58:	ldr	r0, [sp, #168]	; 0xa8
   17a5c:	str	r0, [fp, #-32]	; 0xffffffe0
   17a60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a64:	cmp	r0, #0
   17a68:	beq	17a98 <__assert_fail@plt+0x6a80>
   17a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a70:	ldr	r1, [fp, #8]
   17a74:	sdiv	r0, r0, r1
   17a78:	str	r0, [fp, #-24]	; 0xffffffe8
   17a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a80:	mov	r1, r0
   17a84:	ldr	r2, [fp, #8]
   17a88:	sdiv	r3, r0, r2
   17a8c:	mls	r0, r3, r2, r0
   17a90:	sub	r0, r1, r0
   17a94:	str	r0, [fp, #-28]	; 0xffffffe4
   17a98:	ldr	r0, [fp, #-4]
   17a9c:	movw	r1, #0
   17aa0:	cmp	r0, r1
   17aa4:	bne	17ab4 <__assert_fail@plt+0x6a9c>
   17aa8:	ldr	r0, [fp, #-8]
   17aac:	movw	r1, #0
   17ab0:	str	r1, [r0]
   17ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17abc:	sub	r0, r0, r1
   17ac0:	ldr	r1, [fp, #-12]
   17ac4:	cmp	r0, r1
   17ac8:	bge	18f00 <__assert_fail@plt+0x7ee8>
   17acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ad0:	ldr	r1, [fp, #-12]
   17ad4:	add	r1, r0, r1
   17ad8:	mov	r2, #1
   17adc:	cmp	r1, r0
   17ae0:	movwvc	r2, #0
   17ae4:	str	r1, [fp, #-24]	; 0xffffffe8
   17ae8:	tst	r2, #1
   17aec:	bne	18efc <__assert_fail@plt+0x7ee4>
   17af0:	ldr	r0, [fp, #-16]
   17af4:	movw	r1, #0
   17af8:	cmp	r1, r0
   17afc:	bgt	17b10 <__assert_fail@plt+0x6af8>
   17b00:	ldr	r0, [fp, #-16]
   17b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b08:	cmp	r0, r1
   17b0c:	blt	18efc <__assert_fail@plt+0x7ee4>
   17b10:	b	17eec <__assert_fail@plt+0x6ed4>
   17b14:	b	17b18 <__assert_fail@plt+0x6b00>
   17b18:	ldr	r0, [fp, #8]
   17b1c:	cmp	r0, #0
   17b20:	bge	17c34 <__assert_fail@plt+0x6c1c>
   17b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b28:	cmp	r0, #0
   17b2c:	bge	17bb8 <__assert_fail@plt+0x6ba0>
   17b30:	b	17b34 <__assert_fail@plt+0x6b1c>
   17b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b38:	ldr	r1, [fp, #8]
   17b3c:	movw	r2, #127	; 0x7f
   17b40:	sdiv	r1, r2, r1
   17b44:	cmp	r0, r1
   17b48:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17b4c:	b	17cec <__assert_fail@plt+0x6cd4>
   17b50:	b	17b54 <__assert_fail@plt+0x6b3c>
   17b54:	ldr	r0, [pc, #-1260]	; 17670 <__assert_fail@plt+0x6658>
   17b58:	ldr	r1, [fp, #8]
   17b5c:	cmp	r1, r0
   17b60:	blt	17b78 <__assert_fail@plt+0x6b60>
   17b64:	b	17b84 <__assert_fail@plt+0x6b6c>
   17b68:	ldr	r0, [fp, #8]
   17b6c:	movw	r1, #0
   17b70:	cmp	r1, r0
   17b74:	bge	17b84 <__assert_fail@plt+0x6b6c>
   17b78:	movw	r0, #0
   17b7c:	str	r0, [sp, #164]	; 0xa4
   17b80:	b	17b9c <__assert_fail@plt+0x6b84>
   17b84:	ldr	r0, [fp, #8]
   17b88:	movw	r1, #0
   17b8c:	sub	r0, r1, r0
   17b90:	movw	r1, #127	; 0x7f
   17b94:	sdiv	r0, r1, r0
   17b98:	str	r0, [sp, #164]	; 0xa4
   17b9c:	ldr	r0, [sp, #164]	; 0xa4
   17ba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ba4:	mvn	r2, #0
   17ba8:	sub	r1, r2, r1
   17bac:	cmp	r0, r1
   17bb0:	ble	17cd4 <__assert_fail@plt+0x6cbc>
   17bb4:	b	17cec <__assert_fail@plt+0x6cd4>
   17bb8:	b	17bbc <__assert_fail@plt+0x6ba4>
   17bbc:	b	17c18 <__assert_fail@plt+0x6c00>
   17bc0:	b	17c18 <__assert_fail@plt+0x6c00>
   17bc4:	ldr	r0, [fp, #8]
   17bc8:	cmn	r0, #1
   17bcc:	bne	17c18 <__assert_fail@plt+0x6c00>
   17bd0:	b	17bd4 <__assert_fail@plt+0x6bbc>
   17bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd8:	mvn	r1, #127	; 0x7f
   17bdc:	add	r0, r0, r1
   17be0:	movw	r1, #0
   17be4:	cmp	r1, r0
   17be8:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17bec:	b	17cec <__assert_fail@plt+0x6cd4>
   17bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf4:	movw	r1, #0
   17bf8:	cmp	r1, r0
   17bfc:	bge	17cec <__assert_fail@plt+0x6cd4>
   17c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c04:	sub	r0, r0, #1
   17c08:	movw	r1, #127	; 0x7f
   17c0c:	cmp	r1, r0
   17c10:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17c14:	b	17cec <__assert_fail@plt+0x6cd4>
   17c18:	ldr	r0, [fp, #8]
   17c1c:	mvn	r1, #127	; 0x7f
   17c20:	sdiv	r0, r1, r0
   17c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c28:	cmp	r0, r1
   17c2c:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17c30:	b	17cec <__assert_fail@plt+0x6cd4>
   17c34:	ldr	r0, [fp, #8]
   17c38:	cmp	r0, #0
   17c3c:	bne	17c44 <__assert_fail@plt+0x6c2c>
   17c40:	b	17cec <__assert_fail@plt+0x6cd4>
   17c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c48:	cmp	r0, #0
   17c4c:	bge	17cbc <__assert_fail@plt+0x6ca4>
   17c50:	b	17c54 <__assert_fail@plt+0x6c3c>
   17c54:	b	17ca0 <__assert_fail@plt+0x6c88>
   17c58:	b	17ca0 <__assert_fail@plt+0x6c88>
   17c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c60:	cmn	r0, #1
   17c64:	bne	17ca0 <__assert_fail@plt+0x6c88>
   17c68:	b	17c6c <__assert_fail@plt+0x6c54>
   17c6c:	ldr	r0, [fp, #8]
   17c70:	mvn	r1, #127	; 0x7f
   17c74:	add	r0, r0, r1
   17c78:	movw	r1, #0
   17c7c:	cmp	r1, r0
   17c80:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17c84:	b	17cec <__assert_fail@plt+0x6cd4>
   17c88:	ldr	r0, [fp, #8]
   17c8c:	sub	r0, r0, #1
   17c90:	movw	r1, #127	; 0x7f
   17c94:	cmp	r1, r0
   17c98:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17c9c:	b	17cec <__assert_fail@plt+0x6cd4>
   17ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca4:	mvn	r1, #127	; 0x7f
   17ca8:	sdiv	r0, r1, r0
   17cac:	ldr	r1, [fp, #8]
   17cb0:	cmp	r0, r1
   17cb4:	blt	17cd4 <__assert_fail@plt+0x6cbc>
   17cb8:	b	17cec <__assert_fail@plt+0x6cd4>
   17cbc:	ldr	r0, [fp, #8]
   17cc0:	movw	r1, #127	; 0x7f
   17cc4:	sdiv	r0, r1, r0
   17cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ccc:	cmp	r0, r1
   17cd0:	bge	17cec <__assert_fail@plt+0x6cd4>
   17cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd8:	ldr	r1, [fp, #8]
   17cdc:	mul	r0, r0, r1
   17ce0:	sxtb	r0, r0
   17ce4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ce8:	b	18efc <__assert_fail@plt+0x7ee4>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	ldr	r1, [fp, #8]
   17cf4:	mul	r0, r0, r1
   17cf8:	sxtb	r0, r0
   17cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   17d00:	b	18f00 <__assert_fail@plt+0x7ee8>
   17d04:	ldr	r0, [fp, #8]
   17d08:	cmp	r0, #0
   17d0c:	bge	17e1c <__assert_fail@plt+0x6e04>
   17d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d14:	cmp	r0, #0
   17d18:	bge	17da4 <__assert_fail@plt+0x6d8c>
   17d1c:	b	17d20 <__assert_fail@plt+0x6d08>
   17d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d24:	ldr	r1, [fp, #8]
   17d28:	movw	r2, #255	; 0xff
   17d2c:	sdiv	r1, r2, r1
   17d30:	cmp	r0, r1
   17d34:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17d38:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17d3c:	b	17d40 <__assert_fail@plt+0x6d28>
   17d40:	ldr	r0, [pc, #-1752]	; 17670 <__assert_fail@plt+0x6658>
   17d44:	ldr	r1, [fp, #8]
   17d48:	cmp	r1, r0
   17d4c:	blt	17d64 <__assert_fail@plt+0x6d4c>
   17d50:	b	17d70 <__assert_fail@plt+0x6d58>
   17d54:	ldr	r0, [fp, #8]
   17d58:	movw	r1, #0
   17d5c:	cmp	r1, r0
   17d60:	bge	17d70 <__assert_fail@plt+0x6d58>
   17d64:	movw	r0, #0
   17d68:	str	r0, [sp, #160]	; 0xa0
   17d6c:	b	17d88 <__assert_fail@plt+0x6d70>
   17d70:	ldr	r0, [fp, #8]
   17d74:	movw	r1, #0
   17d78:	sub	r0, r1, r0
   17d7c:	movw	r1, #255	; 0xff
   17d80:	sdiv	r0, r1, r0
   17d84:	str	r0, [sp, #160]	; 0xa0
   17d88:	ldr	r0, [sp, #160]	; 0xa0
   17d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d90:	mvn	r2, #0
   17d94:	sub	r1, r2, r1
   17d98:	cmp	r0, r1
   17d9c:	ble	17eb8 <__assert_fail@plt+0x6ea0>
   17da0:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17da4:	b	17da8 <__assert_fail@plt+0x6d90>
   17da8:	b	17e00 <__assert_fail@plt+0x6de8>
   17dac:	b	17e00 <__assert_fail@plt+0x6de8>
   17db0:	ldr	r0, [fp, #8]
   17db4:	cmn	r0, #1
   17db8:	bne	17e00 <__assert_fail@plt+0x6de8>
   17dbc:	b	17dc0 <__assert_fail@plt+0x6da8>
   17dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc4:	add	r0, r0, #0
   17dc8:	movw	r1, #0
   17dcc:	cmp	r1, r0
   17dd0:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17dd4:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ddc:	movw	r1, #0
   17de0:	cmp	r1, r0
   17de4:	bge	17ed4 <__assert_fail@plt+0x6ebc>
   17de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dec:	sub	r0, r0, #1
   17df0:	mvn	r1, #0
   17df4:	cmp	r1, r0
   17df8:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17dfc:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17e00:	ldr	r0, [fp, #8]
   17e04:	movw	r1, #0
   17e08:	sdiv	r0, r1, r0
   17e0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e10:	cmp	r0, r1
   17e14:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17e18:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17e1c:	ldr	r0, [fp, #8]
   17e20:	cmp	r0, #0
   17e24:	bne	17e2c <__assert_fail@plt+0x6e14>
   17e28:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e30:	cmp	r0, #0
   17e34:	bge	17ea0 <__assert_fail@plt+0x6e88>
   17e38:	b	17e3c <__assert_fail@plt+0x6e24>
   17e3c:	b	17e84 <__assert_fail@plt+0x6e6c>
   17e40:	b	17e84 <__assert_fail@plt+0x6e6c>
   17e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e48:	cmn	r0, #1
   17e4c:	bne	17e84 <__assert_fail@plt+0x6e6c>
   17e50:	b	17e54 <__assert_fail@plt+0x6e3c>
   17e54:	ldr	r0, [fp, #8]
   17e58:	add	r0, r0, #0
   17e5c:	movw	r1, #0
   17e60:	cmp	r1, r0
   17e64:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17e68:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17e6c:	ldr	r0, [fp, #8]
   17e70:	sub	r0, r0, #1
   17e74:	mvn	r1, #0
   17e78:	cmp	r1, r0
   17e7c:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17e80:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e88:	movw	r1, #0
   17e8c:	sdiv	r0, r1, r0
   17e90:	ldr	r1, [fp, #8]
   17e94:	cmp	r0, r1
   17e98:	blt	17eb8 <__assert_fail@plt+0x6ea0>
   17e9c:	b	17ed4 <__assert_fail@plt+0x6ebc>
   17ea0:	ldr	r0, [fp, #8]
   17ea4:	movw	r1, #255	; 0xff
   17ea8:	sdiv	r0, r1, r0
   17eac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eb0:	cmp	r0, r1
   17eb4:	bge	17ed4 <__assert_fail@plt+0x6ebc>
   17eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ebc:	ldr	r1, [fp, #8]
   17ec0:	mul	r0, r0, r1
   17ec4:	and	r0, r0, #255	; 0xff
   17ec8:	str	r0, [fp, #-28]	; 0xffffffe4
   17ecc:	b	18efc <__assert_fail@plt+0x7ee4>
   17ed0:	andhi	r0, r0, r0
   17ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ed8:	ldr	r1, [fp, #8]
   17edc:	mul	r0, r0, r1
   17ee0:	and	r0, r0, #255	; 0xff
   17ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ee8:	b	18f00 <__assert_fail@plt+0x7ee8>
   17eec:	b	182c4 <__assert_fail@plt+0x72ac>
   17ef0:	b	17ef4 <__assert_fail@plt+0x6edc>
   17ef4:	ldr	r0, [fp, #8]
   17ef8:	cmp	r0, #0
   17efc:	bge	18010 <__assert_fail@plt+0x6ff8>
   17f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f04:	cmp	r0, #0
   17f08:	bge	17f94 <__assert_fail@plt+0x6f7c>
   17f0c:	b	17f10 <__assert_fail@plt+0x6ef8>
   17f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f14:	ldr	r1, [fp, #8]
   17f18:	movw	r2, #32767	; 0x7fff
   17f1c:	sdiv	r1, r2, r1
   17f20:	cmp	r0, r1
   17f24:	blt	180b0 <__assert_fail@plt+0x7098>
   17f28:	b	180c8 <__assert_fail@plt+0x70b0>
   17f2c:	b	17f30 <__assert_fail@plt+0x6f18>
   17f30:	ldr	r0, [pc, #4084]	; 18f2c <__assert_fail@plt+0x7f14>
   17f34:	ldr	r1, [fp, #8]
   17f38:	cmp	r1, r0
   17f3c:	blt	17f54 <__assert_fail@plt+0x6f3c>
   17f40:	b	17f60 <__assert_fail@plt+0x6f48>
   17f44:	ldr	r0, [fp, #8]
   17f48:	movw	r1, #0
   17f4c:	cmp	r1, r0
   17f50:	bge	17f60 <__assert_fail@plt+0x6f48>
   17f54:	movw	r0, #0
   17f58:	str	r0, [sp, #156]	; 0x9c
   17f5c:	b	17f78 <__assert_fail@plt+0x6f60>
   17f60:	ldr	r0, [fp, #8]
   17f64:	movw	r1, #0
   17f68:	sub	r0, r1, r0
   17f6c:	movw	r1, #32767	; 0x7fff
   17f70:	sdiv	r0, r1, r0
   17f74:	str	r0, [sp, #156]	; 0x9c
   17f78:	ldr	r0, [sp, #156]	; 0x9c
   17f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f80:	mvn	r2, #0
   17f84:	sub	r1, r2, r1
   17f88:	cmp	r0, r1
   17f8c:	ble	180b0 <__assert_fail@plt+0x7098>
   17f90:	b	180c8 <__assert_fail@plt+0x70b0>
   17f94:	b	17f98 <__assert_fail@plt+0x6f80>
   17f98:	b	17ff4 <__assert_fail@plt+0x6fdc>
   17f9c:	b	17ff4 <__assert_fail@plt+0x6fdc>
   17fa0:	ldr	r0, [fp, #8]
   17fa4:	cmn	r0, #1
   17fa8:	bne	17ff4 <__assert_fail@plt+0x6fdc>
   17fac:	b	17fb0 <__assert_fail@plt+0x6f98>
   17fb0:	ldr	r0, [pc, #3964]	; 18f34 <__assert_fail@plt+0x7f1c>
   17fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fb8:	add	r0, r1, r0
   17fbc:	movw	r1, #0
   17fc0:	cmp	r1, r0
   17fc4:	blt	180b0 <__assert_fail@plt+0x7098>
   17fc8:	b	180c8 <__assert_fail@plt+0x70b0>
   17fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd0:	movw	r1, #0
   17fd4:	cmp	r1, r0
   17fd8:	bge	180c8 <__assert_fail@plt+0x70b0>
   17fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe0:	sub	r0, r0, #1
   17fe4:	movw	r1, #32767	; 0x7fff
   17fe8:	cmp	r1, r0
   17fec:	blt	180b0 <__assert_fail@plt+0x7098>
   17ff0:	b	180c8 <__assert_fail@plt+0x70b0>
   17ff4:	ldr	r0, [pc, #3896]	; 18f34 <__assert_fail@plt+0x7f1c>
   17ff8:	ldr	r1, [fp, #8]
   17ffc:	sdiv	r0, r0, r1
   18000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18004:	cmp	r0, r1
   18008:	blt	180b0 <__assert_fail@plt+0x7098>
   1800c:	b	180c8 <__assert_fail@plt+0x70b0>
   18010:	ldr	r0, [fp, #8]
   18014:	cmp	r0, #0
   18018:	bne	18020 <__assert_fail@plt+0x7008>
   1801c:	b	180c8 <__assert_fail@plt+0x70b0>
   18020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18024:	cmp	r0, #0
   18028:	bge	18098 <__assert_fail@plt+0x7080>
   1802c:	b	18030 <__assert_fail@plt+0x7018>
   18030:	b	1807c <__assert_fail@plt+0x7064>
   18034:	b	1807c <__assert_fail@plt+0x7064>
   18038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1803c:	cmn	r0, #1
   18040:	bne	1807c <__assert_fail@plt+0x7064>
   18044:	b	18048 <__assert_fail@plt+0x7030>
   18048:	ldr	r0, [pc, #3812]	; 18f34 <__assert_fail@plt+0x7f1c>
   1804c:	ldr	r1, [fp, #8]
   18050:	add	r0, r1, r0
   18054:	movw	r1, #0
   18058:	cmp	r1, r0
   1805c:	blt	180b0 <__assert_fail@plt+0x7098>
   18060:	b	180c8 <__assert_fail@plt+0x70b0>
   18064:	ldr	r0, [fp, #8]
   18068:	sub	r0, r0, #1
   1806c:	movw	r1, #32767	; 0x7fff
   18070:	cmp	r1, r0
   18074:	blt	180b0 <__assert_fail@plt+0x7098>
   18078:	b	180c8 <__assert_fail@plt+0x70b0>
   1807c:	ldr	r0, [pc, #3760]	; 18f34 <__assert_fail@plt+0x7f1c>
   18080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18084:	sdiv	r0, r0, r1
   18088:	ldr	r1, [fp, #8]
   1808c:	cmp	r0, r1
   18090:	blt	180b0 <__assert_fail@plt+0x7098>
   18094:	b	180c8 <__assert_fail@plt+0x70b0>
   18098:	ldr	r0, [fp, #8]
   1809c:	movw	r1, #32767	; 0x7fff
   180a0:	sdiv	r0, r1, r0
   180a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180a8:	cmp	r0, r1
   180ac:	bge	180c8 <__assert_fail@plt+0x70b0>
   180b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b4:	ldr	r1, [fp, #8]
   180b8:	mul	r0, r0, r1
   180bc:	sxth	r0, r0
   180c0:	str	r0, [fp, #-28]	; 0xffffffe4
   180c4:	b	18efc <__assert_fail@plt+0x7ee4>
   180c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180cc:	ldr	r1, [fp, #8]
   180d0:	mul	r0, r0, r1
   180d4:	sxth	r0, r0
   180d8:	str	r0, [fp, #-28]	; 0xffffffe4
   180dc:	b	18f00 <__assert_fail@plt+0x7ee8>
   180e0:	ldr	r0, [fp, #8]
   180e4:	cmp	r0, #0
   180e8:	bge	181f8 <__assert_fail@plt+0x71e0>
   180ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f0:	cmp	r0, #0
   180f4:	bge	18180 <__assert_fail@plt+0x7168>
   180f8:	b	180fc <__assert_fail@plt+0x70e4>
   180fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18100:	ldr	r1, [fp, #8]
   18104:	movw	r2, #65535	; 0xffff
   18108:	sdiv	r1, r2, r1
   1810c:	cmp	r0, r1
   18110:	blt	18294 <__assert_fail@plt+0x727c>
   18114:	b	182ac <__assert_fail@plt+0x7294>
   18118:	b	1811c <__assert_fail@plt+0x7104>
   1811c:	ldr	r0, [pc, #3592]	; 18f2c <__assert_fail@plt+0x7f14>
   18120:	ldr	r1, [fp, #8]
   18124:	cmp	r1, r0
   18128:	blt	18140 <__assert_fail@plt+0x7128>
   1812c:	b	1814c <__assert_fail@plt+0x7134>
   18130:	ldr	r0, [fp, #8]
   18134:	movw	r1, #0
   18138:	cmp	r1, r0
   1813c:	bge	1814c <__assert_fail@plt+0x7134>
   18140:	movw	r0, #0
   18144:	str	r0, [sp, #152]	; 0x98
   18148:	b	18164 <__assert_fail@plt+0x714c>
   1814c:	ldr	r0, [fp, #8]
   18150:	movw	r1, #0
   18154:	sub	r0, r1, r0
   18158:	movw	r1, #65535	; 0xffff
   1815c:	sdiv	r0, r1, r0
   18160:	str	r0, [sp, #152]	; 0x98
   18164:	ldr	r0, [sp, #152]	; 0x98
   18168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1816c:	mvn	r2, #0
   18170:	sub	r1, r2, r1
   18174:	cmp	r0, r1
   18178:	ble	18294 <__assert_fail@plt+0x727c>
   1817c:	b	182ac <__assert_fail@plt+0x7294>
   18180:	b	18184 <__assert_fail@plt+0x716c>
   18184:	b	181dc <__assert_fail@plt+0x71c4>
   18188:	b	181dc <__assert_fail@plt+0x71c4>
   1818c:	ldr	r0, [fp, #8]
   18190:	cmn	r0, #1
   18194:	bne	181dc <__assert_fail@plt+0x71c4>
   18198:	b	1819c <__assert_fail@plt+0x7184>
   1819c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a0:	add	r0, r0, #0
   181a4:	movw	r1, #0
   181a8:	cmp	r1, r0
   181ac:	blt	18294 <__assert_fail@plt+0x727c>
   181b0:	b	182ac <__assert_fail@plt+0x7294>
   181b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181b8:	movw	r1, #0
   181bc:	cmp	r1, r0
   181c0:	bge	182ac <__assert_fail@plt+0x7294>
   181c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c8:	sub	r0, r0, #1
   181cc:	mvn	r1, #0
   181d0:	cmp	r1, r0
   181d4:	blt	18294 <__assert_fail@plt+0x727c>
   181d8:	b	182ac <__assert_fail@plt+0x7294>
   181dc:	ldr	r0, [fp, #8]
   181e0:	movw	r1, #0
   181e4:	sdiv	r0, r1, r0
   181e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181ec:	cmp	r0, r1
   181f0:	blt	18294 <__assert_fail@plt+0x727c>
   181f4:	b	182ac <__assert_fail@plt+0x7294>
   181f8:	ldr	r0, [fp, #8]
   181fc:	cmp	r0, #0
   18200:	bne	18208 <__assert_fail@plt+0x71f0>
   18204:	b	182ac <__assert_fail@plt+0x7294>
   18208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1820c:	cmp	r0, #0
   18210:	bge	1827c <__assert_fail@plt+0x7264>
   18214:	b	18218 <__assert_fail@plt+0x7200>
   18218:	b	18260 <__assert_fail@plt+0x7248>
   1821c:	b	18260 <__assert_fail@plt+0x7248>
   18220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18224:	cmn	r0, #1
   18228:	bne	18260 <__assert_fail@plt+0x7248>
   1822c:	b	18230 <__assert_fail@plt+0x7218>
   18230:	ldr	r0, [fp, #8]
   18234:	add	r0, r0, #0
   18238:	movw	r1, #0
   1823c:	cmp	r1, r0
   18240:	blt	18294 <__assert_fail@plt+0x727c>
   18244:	b	182ac <__assert_fail@plt+0x7294>
   18248:	ldr	r0, [fp, #8]
   1824c:	sub	r0, r0, #1
   18250:	mvn	r1, #0
   18254:	cmp	r1, r0
   18258:	blt	18294 <__assert_fail@plt+0x727c>
   1825c:	b	182ac <__assert_fail@plt+0x7294>
   18260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18264:	movw	r1, #0
   18268:	sdiv	r0, r1, r0
   1826c:	ldr	r1, [fp, #8]
   18270:	cmp	r0, r1
   18274:	blt	18294 <__assert_fail@plt+0x727c>
   18278:	b	182ac <__assert_fail@plt+0x7294>
   1827c:	ldr	r0, [fp, #8]
   18280:	movw	r1, #65535	; 0xffff
   18284:	sdiv	r0, r1, r0
   18288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1828c:	cmp	r0, r1
   18290:	bge	182ac <__assert_fail@plt+0x7294>
   18294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18298:	ldr	r1, [fp, #8]
   1829c:	mul	r0, r0, r1
   182a0:	uxth	r0, r0
   182a4:	str	r0, [fp, #-28]	; 0xffffffe4
   182a8:	b	18efc <__assert_fail@plt+0x7ee4>
   182ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182b0:	ldr	r1, [fp, #8]
   182b4:	mul	r0, r0, r1
   182b8:	uxth	r0, r0
   182bc:	str	r0, [fp, #-28]	; 0xffffffe4
   182c0:	b	18f00 <__assert_fail@plt+0x7ee8>
   182c4:	b	182c8 <__assert_fail@plt+0x72b0>
   182c8:	b	182cc <__assert_fail@plt+0x72b4>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	bge	183d8 <__assert_fail@plt+0x73c0>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	cmp	r0, #0
   182e0:	bge	1836c <__assert_fail@plt+0x7354>
   182e4:	b	182e8 <__assert_fail@plt+0x72d0>
   182e8:	ldr	r0, [pc, #3128]	; 18f28 <__assert_fail@plt+0x7f10>
   182ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182f0:	ldr	r2, [fp, #8]
   182f4:	sdiv	r0, r0, r2
   182f8:	cmp	r1, r0
   182fc:	blt	18468 <__assert_fail@plt+0x7450>
   18300:	b	1847c <__assert_fail@plt+0x7464>
   18304:	b	18308 <__assert_fail@plt+0x72f0>
   18308:	ldr	r0, [pc, #3100]	; 18f2c <__assert_fail@plt+0x7f14>
   1830c:	ldr	r1, [fp, #8]
   18310:	cmp	r1, r0
   18314:	blt	1832c <__assert_fail@plt+0x7314>
   18318:	b	18338 <__assert_fail@plt+0x7320>
   1831c:	ldr	r0, [fp, #8]
   18320:	movw	r1, #0
   18324:	cmp	r1, r0
   18328:	bge	18338 <__assert_fail@plt+0x7320>
   1832c:	movw	r0, #0
   18330:	str	r0, [sp, #148]	; 0x94
   18334:	b	18350 <__assert_fail@plt+0x7338>
   18338:	ldr	r0, [pc, #3048]	; 18f28 <__assert_fail@plt+0x7f10>
   1833c:	ldr	r1, [fp, #8]
   18340:	movw	r2, #0
   18344:	sub	r1, r2, r1
   18348:	sdiv	r0, r0, r1
   1834c:	str	r0, [sp, #148]	; 0x94
   18350:	ldr	r0, [sp, #148]	; 0x94
   18354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18358:	mvn	r2, #0
   1835c:	sub	r1, r2, r1
   18360:	cmp	r0, r1
   18364:	ble	18468 <__assert_fail@plt+0x7450>
   18368:	b	1847c <__assert_fail@plt+0x7464>
   1836c:	ldr	r0, [fp, #8]
   18370:	cmn	r0, #1
   18374:	bne	183bc <__assert_fail@plt+0x73a4>
   18378:	b	1837c <__assert_fail@plt+0x7364>
   1837c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18380:	add	r0, r0, #-2147483648	; 0x80000000
   18384:	movw	r1, #0
   18388:	cmp	r1, r0
   1838c:	blt	18468 <__assert_fail@plt+0x7450>
   18390:	b	1847c <__assert_fail@plt+0x7464>
   18394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18398:	movw	r1, #0
   1839c:	cmp	r1, r0
   183a0:	bge	1847c <__assert_fail@plt+0x7464>
   183a4:	ldr	r0, [pc, #2940]	; 18f28 <__assert_fail@plt+0x7f10>
   183a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183ac:	sub	r1, r1, #1
   183b0:	cmp	r0, r1
   183b4:	blt	18468 <__assert_fail@plt+0x7450>
   183b8:	b	1847c <__assert_fail@plt+0x7464>
   183bc:	ldr	r0, [pc, #2924]	; 18f30 <__assert_fail@plt+0x7f18>
   183c0:	ldr	r1, [fp, #8]
   183c4:	sdiv	r0, r0, r1
   183c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183cc:	cmp	r0, r1
   183d0:	blt	18468 <__assert_fail@plt+0x7450>
   183d4:	b	1847c <__assert_fail@plt+0x7464>
   183d8:	ldr	r0, [fp, #8]
   183dc:	cmp	r0, #0
   183e0:	bne	183e8 <__assert_fail@plt+0x73d0>
   183e4:	b	1847c <__assert_fail@plt+0x7464>
   183e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ec:	cmp	r0, #0
   183f0:	bge	18450 <__assert_fail@plt+0x7438>
   183f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f8:	cmn	r0, #1
   183fc:	bne	18434 <__assert_fail@plt+0x741c>
   18400:	b	18404 <__assert_fail@plt+0x73ec>
   18404:	ldr	r0, [fp, #8]
   18408:	add	r0, r0, #-2147483648	; 0x80000000
   1840c:	movw	r1, #0
   18410:	cmp	r1, r0
   18414:	blt	18468 <__assert_fail@plt+0x7450>
   18418:	b	1847c <__assert_fail@plt+0x7464>
   1841c:	ldr	r0, [pc, #2820]	; 18f28 <__assert_fail@plt+0x7f10>
   18420:	ldr	r1, [fp, #8]
   18424:	sub	r1, r1, #1
   18428:	cmp	r0, r1
   1842c:	blt	18468 <__assert_fail@plt+0x7450>
   18430:	b	1847c <__assert_fail@plt+0x7464>
   18434:	ldr	r0, [pc, #2804]	; 18f30 <__assert_fail@plt+0x7f18>
   18438:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1843c:	sdiv	r0, r0, r1
   18440:	ldr	r1, [fp, #8]
   18444:	cmp	r0, r1
   18448:	blt	18468 <__assert_fail@plt+0x7450>
   1844c:	b	1847c <__assert_fail@plt+0x7464>
   18450:	ldr	r0, [pc, #2768]	; 18f28 <__assert_fail@plt+0x7f10>
   18454:	ldr	r1, [fp, #8]
   18458:	sdiv	r0, r0, r1
   1845c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18460:	cmp	r0, r1
   18464:	bge	1847c <__assert_fail@plt+0x7464>
   18468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1846c:	ldr	r1, [fp, #8]
   18470:	mul	r0, r0, r1
   18474:	str	r0, [fp, #-28]	; 0xffffffe4
   18478:	b	18efc <__assert_fail@plt+0x7ee4>
   1847c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18480:	ldr	r1, [fp, #8]
   18484:	mul	r0, r0, r1
   18488:	str	r0, [fp, #-28]	; 0xffffffe4
   1848c:	b	18f00 <__assert_fail@plt+0x7ee8>
   18490:	ldr	r0, [fp, #8]
   18494:	cmp	r0, #0
   18498:	bge	185a8 <__assert_fail@plt+0x7590>
   1849c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a0:	cmp	r0, #0
   184a4:	bge	18530 <__assert_fail@plt+0x7518>
   184a8:	b	184c8 <__assert_fail@plt+0x74b0>
   184ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b0:	ldr	r1, [fp, #8]
   184b4:	mvn	r2, #0
   184b8:	udiv	r1, r2, r1
   184bc:	cmp	r0, r1
   184c0:	bcc	18644 <__assert_fail@plt+0x762c>
   184c4:	b	18658 <__assert_fail@plt+0x7640>
   184c8:	b	184cc <__assert_fail@plt+0x74b4>
   184cc:	ldr	r0, [pc, #2648]	; 18f2c <__assert_fail@plt+0x7f14>
   184d0:	ldr	r1, [fp, #8]
   184d4:	cmp	r1, r0
   184d8:	blt	184f0 <__assert_fail@plt+0x74d8>
   184dc:	b	184fc <__assert_fail@plt+0x74e4>
   184e0:	ldr	r0, [fp, #8]
   184e4:	movw	r1, #0
   184e8:	cmp	r1, r0
   184ec:	bge	184fc <__assert_fail@plt+0x74e4>
   184f0:	movw	r0, #1
   184f4:	str	r0, [sp, #144]	; 0x90
   184f8:	b	18514 <__assert_fail@plt+0x74fc>
   184fc:	ldr	r0, [fp, #8]
   18500:	movw	r1, #0
   18504:	sub	r0, r1, r0
   18508:	mvn	r1, #0
   1850c:	udiv	r0, r1, r0
   18510:	str	r0, [sp, #144]	; 0x90
   18514:	ldr	r0, [sp, #144]	; 0x90
   18518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1851c:	mvn	r2, #0
   18520:	sub	r1, r2, r1
   18524:	cmp	r0, r1
   18528:	bls	18644 <__assert_fail@plt+0x762c>
   1852c:	b	18658 <__assert_fail@plt+0x7640>
   18530:	b	18534 <__assert_fail@plt+0x751c>
   18534:	b	1858c <__assert_fail@plt+0x7574>
   18538:	b	1858c <__assert_fail@plt+0x7574>
   1853c:	ldr	r0, [fp, #8]
   18540:	cmn	r0, #1
   18544:	bne	1858c <__assert_fail@plt+0x7574>
   18548:	b	1854c <__assert_fail@plt+0x7534>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	add	r0, r0, #0
   18554:	movw	r1, #0
   18558:	cmp	r1, r0
   1855c:	blt	18644 <__assert_fail@plt+0x762c>
   18560:	b	18658 <__assert_fail@plt+0x7640>
   18564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18568:	movw	r1, #0
   1856c:	cmp	r1, r0
   18570:	bge	18658 <__assert_fail@plt+0x7640>
   18574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18578:	sub	r0, r0, #1
   1857c:	mvn	r1, #0
   18580:	cmp	r1, r0
   18584:	blt	18644 <__assert_fail@plt+0x762c>
   18588:	b	18658 <__assert_fail@plt+0x7640>
   1858c:	ldr	r0, [fp, #8]
   18590:	movw	r1, #0
   18594:	sdiv	r0, r1, r0
   18598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1859c:	cmp	r0, r1
   185a0:	blt	18644 <__assert_fail@plt+0x762c>
   185a4:	b	18658 <__assert_fail@plt+0x7640>
   185a8:	ldr	r0, [fp, #8]
   185ac:	cmp	r0, #0
   185b0:	bne	185b8 <__assert_fail@plt+0x75a0>
   185b4:	b	18658 <__assert_fail@plt+0x7640>
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	cmp	r0, #0
   185c0:	bge	1862c <__assert_fail@plt+0x7614>
   185c4:	b	185c8 <__assert_fail@plt+0x75b0>
   185c8:	b	18610 <__assert_fail@plt+0x75f8>
   185cc:	b	18610 <__assert_fail@plt+0x75f8>
   185d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185d4:	cmn	r0, #1
   185d8:	bne	18610 <__assert_fail@plt+0x75f8>
   185dc:	b	185e0 <__assert_fail@plt+0x75c8>
   185e0:	ldr	r0, [fp, #8]
   185e4:	add	r0, r0, #0
   185e8:	movw	r1, #0
   185ec:	cmp	r1, r0
   185f0:	blt	18644 <__assert_fail@plt+0x762c>
   185f4:	b	18658 <__assert_fail@plt+0x7640>
   185f8:	ldr	r0, [fp, #8]
   185fc:	sub	r0, r0, #1
   18600:	mvn	r1, #0
   18604:	cmp	r1, r0
   18608:	blt	18644 <__assert_fail@plt+0x762c>
   1860c:	b	18658 <__assert_fail@plt+0x7640>
   18610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18614:	movw	r1, #0
   18618:	sdiv	r0, r1, r0
   1861c:	ldr	r1, [fp, #8]
   18620:	cmp	r0, r1
   18624:	blt	18644 <__assert_fail@plt+0x762c>
   18628:	b	18658 <__assert_fail@plt+0x7640>
   1862c:	ldr	r0, [fp, #8]
   18630:	mvn	r1, #0
   18634:	udiv	r0, r1, r0
   18638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1863c:	cmp	r0, r1
   18640:	bcs	18658 <__assert_fail@plt+0x7640>
   18644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18648:	ldr	r1, [fp, #8]
   1864c:	mul	r0, r0, r1
   18650:	str	r0, [fp, #-28]	; 0xffffffe4
   18654:	b	18efc <__assert_fail@plt+0x7ee4>
   18658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1865c:	ldr	r1, [fp, #8]
   18660:	mul	r0, r0, r1
   18664:	str	r0, [fp, #-28]	; 0xffffffe4
   18668:	b	18f00 <__assert_fail@plt+0x7ee8>
   1866c:	b	18670 <__assert_fail@plt+0x7658>
   18670:	b	18674 <__assert_fail@plt+0x765c>
   18674:	ldr	r0, [fp, #8]
   18678:	cmp	r0, #0
   1867c:	bge	18780 <__assert_fail@plt+0x7768>
   18680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18684:	cmp	r0, #0
   18688:	bge	18714 <__assert_fail@plt+0x76fc>
   1868c:	b	18690 <__assert_fail@plt+0x7678>
   18690:	ldr	r0, [pc, #2192]	; 18f28 <__assert_fail@plt+0x7f10>
   18694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18698:	ldr	r2, [fp, #8]
   1869c:	sdiv	r0, r0, r2
   186a0:	cmp	r1, r0
   186a4:	blt	18810 <__assert_fail@plt+0x77f8>
   186a8:	b	18824 <__assert_fail@plt+0x780c>
   186ac:	b	186b0 <__assert_fail@plt+0x7698>
   186b0:	ldr	r0, [pc, #2164]	; 18f2c <__assert_fail@plt+0x7f14>
   186b4:	ldr	r1, [fp, #8]
   186b8:	cmp	r1, r0
   186bc:	blt	186d4 <__assert_fail@plt+0x76bc>
   186c0:	b	186e0 <__assert_fail@plt+0x76c8>
   186c4:	ldr	r0, [fp, #8]
   186c8:	movw	r1, #0
   186cc:	cmp	r1, r0
   186d0:	bge	186e0 <__assert_fail@plt+0x76c8>
   186d4:	movw	r0, #0
   186d8:	str	r0, [sp, #140]	; 0x8c
   186dc:	b	186f8 <__assert_fail@plt+0x76e0>
   186e0:	ldr	r0, [pc, #2112]	; 18f28 <__assert_fail@plt+0x7f10>
   186e4:	ldr	r1, [fp, #8]
   186e8:	movw	r2, #0
   186ec:	sub	r1, r2, r1
   186f0:	sdiv	r0, r0, r1
   186f4:	str	r0, [sp, #140]	; 0x8c
   186f8:	ldr	r0, [sp, #140]	; 0x8c
   186fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18700:	mvn	r2, #0
   18704:	sub	r1, r2, r1
   18708:	cmp	r0, r1
   1870c:	ble	18810 <__assert_fail@plt+0x77f8>
   18710:	b	18824 <__assert_fail@plt+0x780c>
   18714:	ldr	r0, [fp, #8]
   18718:	cmn	r0, #1
   1871c:	bne	18764 <__assert_fail@plt+0x774c>
   18720:	b	18724 <__assert_fail@plt+0x770c>
   18724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18728:	add	r0, r0, #-2147483648	; 0x80000000
   1872c:	movw	r1, #0
   18730:	cmp	r1, r0
   18734:	blt	18810 <__assert_fail@plt+0x77f8>
   18738:	b	18824 <__assert_fail@plt+0x780c>
   1873c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18740:	movw	r1, #0
   18744:	cmp	r1, r0
   18748:	bge	18824 <__assert_fail@plt+0x780c>
   1874c:	ldr	r0, [pc, #2004]	; 18f28 <__assert_fail@plt+0x7f10>
   18750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18754:	sub	r1, r1, #1
   18758:	cmp	r0, r1
   1875c:	blt	18810 <__assert_fail@plt+0x77f8>
   18760:	b	18824 <__assert_fail@plt+0x780c>
   18764:	ldr	r0, [pc, #1988]	; 18f30 <__assert_fail@plt+0x7f18>
   18768:	ldr	r1, [fp, #8]
   1876c:	sdiv	r0, r0, r1
   18770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18774:	cmp	r0, r1
   18778:	blt	18810 <__assert_fail@plt+0x77f8>
   1877c:	b	18824 <__assert_fail@plt+0x780c>
   18780:	ldr	r0, [fp, #8]
   18784:	cmp	r0, #0
   18788:	bne	18790 <__assert_fail@plt+0x7778>
   1878c:	b	18824 <__assert_fail@plt+0x780c>
   18790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18794:	cmp	r0, #0
   18798:	bge	187f8 <__assert_fail@plt+0x77e0>
   1879c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a0:	cmn	r0, #1
   187a4:	bne	187dc <__assert_fail@plt+0x77c4>
   187a8:	b	187ac <__assert_fail@plt+0x7794>
   187ac:	ldr	r0, [fp, #8]
   187b0:	add	r0, r0, #-2147483648	; 0x80000000
   187b4:	movw	r1, #0
   187b8:	cmp	r1, r0
   187bc:	blt	18810 <__assert_fail@plt+0x77f8>
   187c0:	b	18824 <__assert_fail@plt+0x780c>
   187c4:	ldr	r0, [pc, #1884]	; 18f28 <__assert_fail@plt+0x7f10>
   187c8:	ldr	r1, [fp, #8]
   187cc:	sub	r1, r1, #1
   187d0:	cmp	r0, r1
   187d4:	blt	18810 <__assert_fail@plt+0x77f8>
   187d8:	b	18824 <__assert_fail@plt+0x780c>
   187dc:	ldr	r0, [pc, #1868]	; 18f30 <__assert_fail@plt+0x7f18>
   187e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187e4:	sdiv	r0, r0, r1
   187e8:	ldr	r1, [fp, #8]
   187ec:	cmp	r0, r1
   187f0:	blt	18810 <__assert_fail@plt+0x77f8>
   187f4:	b	18824 <__assert_fail@plt+0x780c>
   187f8:	ldr	r0, [pc, #1832]	; 18f28 <__assert_fail@plt+0x7f10>
   187fc:	ldr	r1, [fp, #8]
   18800:	sdiv	r0, r0, r1
   18804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18808:	cmp	r0, r1
   1880c:	bge	18824 <__assert_fail@plt+0x780c>
   18810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18814:	ldr	r1, [fp, #8]
   18818:	mul	r0, r0, r1
   1881c:	str	r0, [fp, #-28]	; 0xffffffe4
   18820:	b	18efc <__assert_fail@plt+0x7ee4>
   18824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18828:	ldr	r1, [fp, #8]
   1882c:	mul	r0, r0, r1
   18830:	str	r0, [fp, #-28]	; 0xffffffe4
   18834:	b	18f00 <__assert_fail@plt+0x7ee8>
   18838:	ldr	r0, [fp, #8]
   1883c:	cmp	r0, #0
   18840:	bge	18950 <__assert_fail@plt+0x7938>
   18844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18848:	cmp	r0, #0
   1884c:	bge	188d8 <__assert_fail@plt+0x78c0>
   18850:	b	18870 <__assert_fail@plt+0x7858>
   18854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18858:	ldr	r1, [fp, #8]
   1885c:	mvn	r2, #0
   18860:	udiv	r1, r2, r1
   18864:	cmp	r0, r1
   18868:	bcc	189ec <__assert_fail@plt+0x79d4>
   1886c:	b	18a00 <__assert_fail@plt+0x79e8>
   18870:	b	18874 <__assert_fail@plt+0x785c>
   18874:	ldr	r0, [pc, #1712]	; 18f2c <__assert_fail@plt+0x7f14>
   18878:	ldr	r1, [fp, #8]
   1887c:	cmp	r1, r0
   18880:	blt	18898 <__assert_fail@plt+0x7880>
   18884:	b	188a4 <__assert_fail@plt+0x788c>
   18888:	ldr	r0, [fp, #8]
   1888c:	movw	r1, #0
   18890:	cmp	r1, r0
   18894:	bge	188a4 <__assert_fail@plt+0x788c>
   18898:	movw	r0, #1
   1889c:	str	r0, [sp, #136]	; 0x88
   188a0:	b	188bc <__assert_fail@plt+0x78a4>
   188a4:	ldr	r0, [fp, #8]
   188a8:	movw	r1, #0
   188ac:	sub	r0, r1, r0
   188b0:	mvn	r1, #0
   188b4:	udiv	r0, r1, r0
   188b8:	str	r0, [sp, #136]	; 0x88
   188bc:	ldr	r0, [sp, #136]	; 0x88
   188c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188c4:	mvn	r2, #0
   188c8:	sub	r1, r2, r1
   188cc:	cmp	r0, r1
   188d0:	bls	189ec <__assert_fail@plt+0x79d4>
   188d4:	b	18a00 <__assert_fail@plt+0x79e8>
   188d8:	b	188dc <__assert_fail@plt+0x78c4>
   188dc:	b	18934 <__assert_fail@plt+0x791c>
   188e0:	b	18934 <__assert_fail@plt+0x791c>
   188e4:	ldr	r0, [fp, #8]
   188e8:	cmn	r0, #1
   188ec:	bne	18934 <__assert_fail@plt+0x791c>
   188f0:	b	188f4 <__assert_fail@plt+0x78dc>
   188f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188f8:	add	r0, r0, #0
   188fc:	movw	r1, #0
   18900:	cmp	r1, r0
   18904:	blt	189ec <__assert_fail@plt+0x79d4>
   18908:	b	18a00 <__assert_fail@plt+0x79e8>
   1890c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18910:	movw	r1, #0
   18914:	cmp	r1, r0
   18918:	bge	18a00 <__assert_fail@plt+0x79e8>
   1891c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18920:	sub	r0, r0, #1
   18924:	mvn	r1, #0
   18928:	cmp	r1, r0
   1892c:	blt	189ec <__assert_fail@plt+0x79d4>
   18930:	b	18a00 <__assert_fail@plt+0x79e8>
   18934:	ldr	r0, [fp, #8]
   18938:	movw	r1, #0
   1893c:	sdiv	r0, r1, r0
   18940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18944:	cmp	r0, r1
   18948:	blt	189ec <__assert_fail@plt+0x79d4>
   1894c:	b	18a00 <__assert_fail@plt+0x79e8>
   18950:	ldr	r0, [fp, #8]
   18954:	cmp	r0, #0
   18958:	bne	18960 <__assert_fail@plt+0x7948>
   1895c:	b	18a00 <__assert_fail@plt+0x79e8>
   18960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18964:	cmp	r0, #0
   18968:	bge	189d4 <__assert_fail@plt+0x79bc>
   1896c:	b	18970 <__assert_fail@plt+0x7958>
   18970:	b	189b8 <__assert_fail@plt+0x79a0>
   18974:	b	189b8 <__assert_fail@plt+0x79a0>
   18978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1897c:	cmn	r0, #1
   18980:	bne	189b8 <__assert_fail@plt+0x79a0>
   18984:	b	18988 <__assert_fail@plt+0x7970>
   18988:	ldr	r0, [fp, #8]
   1898c:	add	r0, r0, #0
   18990:	movw	r1, #0
   18994:	cmp	r1, r0
   18998:	blt	189ec <__assert_fail@plt+0x79d4>
   1899c:	b	18a00 <__assert_fail@plt+0x79e8>
   189a0:	ldr	r0, [fp, #8]
   189a4:	sub	r0, r0, #1
   189a8:	mvn	r1, #0
   189ac:	cmp	r1, r0
   189b0:	blt	189ec <__assert_fail@plt+0x79d4>
   189b4:	b	18a00 <__assert_fail@plt+0x79e8>
   189b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189bc:	movw	r1, #0
   189c0:	sdiv	r0, r1, r0
   189c4:	ldr	r1, [fp, #8]
   189c8:	cmp	r0, r1
   189cc:	blt	189ec <__assert_fail@plt+0x79d4>
   189d0:	b	18a00 <__assert_fail@plt+0x79e8>
   189d4:	ldr	r0, [fp, #8]
   189d8:	mvn	r1, #0
   189dc:	udiv	r0, r1, r0
   189e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189e4:	cmp	r0, r1
   189e8:	bcs	18a00 <__assert_fail@plt+0x79e8>
   189ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189f0:	ldr	r1, [fp, #8]
   189f4:	mul	r0, r0, r1
   189f8:	str	r0, [fp, #-28]	; 0xffffffe4
   189fc:	b	18efc <__assert_fail@plt+0x7ee4>
   18a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a04:	ldr	r1, [fp, #8]
   18a08:	mul	r0, r0, r1
   18a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   18a10:	b	18f00 <__assert_fail@plt+0x7ee8>
   18a14:	b	18a18 <__assert_fail@plt+0x7a00>
   18a18:	ldr	r0, [fp, #8]
   18a1c:	cmp	r0, #0
   18a20:	bge	18ba8 <__assert_fail@plt+0x7b90>
   18a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a28:	cmp	r0, #0
   18a2c:	bge	18b14 <__assert_fail@plt+0x7afc>
   18a30:	b	18a34 <__assert_fail@plt+0x7a1c>
   18a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a38:	ldr	r1, [fp, #8]
   18a3c:	asr	r3, r1, #31
   18a40:	mvn	r2, #0
   18a44:	mvn	ip, #-2147483648	; 0x80000000
   18a48:	str	r0, [sp, #132]	; 0x84
   18a4c:	mov	r0, r2
   18a50:	str	r1, [sp, #128]	; 0x80
   18a54:	mov	r1, ip
   18a58:	ldr	r2, [sp, #128]	; 0x80
   18a5c:	bl	1b348 <__assert_fail@plt+0xa330>
   18a60:	ldr	r2, [sp, #132]	; 0x84
   18a64:	subs	r0, r2, r0
   18a68:	rscs	r1, r1, r2, asr #31
   18a6c:	str	r0, [sp, #124]	; 0x7c
   18a70:	str	r1, [sp, #120]	; 0x78
   18a74:	blt	18c88 <__assert_fail@plt+0x7c70>
   18a78:	b	18c9c <__assert_fail@plt+0x7c84>
   18a7c:	b	18a80 <__assert_fail@plt+0x7a68>
   18a80:	ldr	r0, [pc, #1188]	; 18f2c <__assert_fail@plt+0x7f14>
   18a84:	ldr	r1, [fp, #8]
   18a88:	cmp	r1, r0
   18a8c:	blt	18aa4 <__assert_fail@plt+0x7a8c>
   18a90:	b	18ab8 <__assert_fail@plt+0x7aa0>
   18a94:	ldr	r0, [fp, #8]
   18a98:	movw	r1, #0
   18a9c:	cmp	r1, r0
   18aa0:	bge	18ab8 <__assert_fail@plt+0x7aa0>
   18aa4:	mov	r0, #0
   18aa8:	mvn	r1, #0
   18aac:	str	r1, [sp, #116]	; 0x74
   18ab0:	str	r0, [sp, #112]	; 0x70
   18ab4:	b	18aec <__assert_fail@plt+0x7ad4>
   18ab8:	ldr	r0, [fp, #8]
   18abc:	rsb	r0, r0, #0
   18ac0:	asr	r3, r0, #31
   18ac4:	mvn	r1, #0
   18ac8:	mvn	r2, #-2147483648	; 0x80000000
   18acc:	str	r0, [sp, #108]	; 0x6c
   18ad0:	mov	r0, r1
   18ad4:	mov	r1, r2
   18ad8:	ldr	r2, [sp, #108]	; 0x6c
   18adc:	bl	1b348 <__assert_fail@plt+0xa330>
   18ae0:	str	r0, [sp, #116]	; 0x74
   18ae4:	str	r1, [sp, #112]	; 0x70
   18ae8:	b	18aec <__assert_fail@plt+0x7ad4>
   18aec:	ldr	r0, [sp, #112]	; 0x70
   18af0:	ldr	r1, [sp, #116]	; 0x74
   18af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18af8:	mvn	r2, r2
   18afc:	subs	r1, r2, r1
   18b00:	rscs	r0, r0, r2, asr #31
   18b04:	str	r1, [sp, #104]	; 0x68
   18b08:	str	r0, [sp, #100]	; 0x64
   18b0c:	bge	18c88 <__assert_fail@plt+0x7c70>
   18b10:	b	18c9c <__assert_fail@plt+0x7c84>
   18b14:	ldr	r0, [fp, #8]
   18b18:	cmn	r0, #1
   18b1c:	bne	18b68 <__assert_fail@plt+0x7b50>
   18b20:	b	18b24 <__assert_fail@plt+0x7b0c>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	mov	r1, #-2147483648	; 0x80000000
   18b2c:	add	r1, r1, r0, asr #31
   18b30:	rsbs	r0, r0, #0
   18b34:	rscs	r1, r1, #0
   18b38:	str	r0, [sp, #96]	; 0x60
   18b3c:	str	r1, [sp, #92]	; 0x5c
   18b40:	blt	18c88 <__assert_fail@plt+0x7c70>
   18b44:	b	18c9c <__assert_fail@plt+0x7c84>
   18b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b4c:	movw	r1, #0
   18b50:	cmp	r1, r0
   18b54:	bge	18c9c <__assert_fail@plt+0x7c84>
   18b58:	mov	r0, #0
   18b5c:	cmp	r0, #0
   18b60:	bne	18c88 <__assert_fail@plt+0x7c70>
   18b64:	b	18c9c <__assert_fail@plt+0x7c84>
   18b68:	ldr	r0, [fp, #8]
   18b6c:	asr	r3, r0, #31
   18b70:	mov	r1, #0
   18b74:	mov	r2, #-2147483648	; 0x80000000
   18b78:	str	r0, [sp, #88]	; 0x58
   18b7c:	mov	r0, r1
   18b80:	mov	r1, r2
   18b84:	ldr	r2, [sp, #88]	; 0x58
   18b88:	bl	1b348 <__assert_fail@plt+0xa330>
   18b8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b90:	subs	r0, r0, r2
   18b94:	sbcs	r1, r1, r2, asr #31
   18b98:	str	r0, [sp, #84]	; 0x54
   18b9c:	str	r1, [sp, #80]	; 0x50
   18ba0:	blt	18c88 <__assert_fail@plt+0x7c70>
   18ba4:	b	18c9c <__assert_fail@plt+0x7c84>
   18ba8:	ldr	r0, [fp, #8]
   18bac:	cmp	r0, #0
   18bb0:	bne	18bb8 <__assert_fail@plt+0x7ba0>
   18bb4:	b	18c9c <__assert_fail@plt+0x7c84>
   18bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bbc:	cmp	r0, #0
   18bc0:	bge	18c48 <__assert_fail@plt+0x7c30>
   18bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc8:	cmn	r0, #1
   18bcc:	bne	18c08 <__assert_fail@plt+0x7bf0>
   18bd0:	b	18bd4 <__assert_fail@plt+0x7bbc>
   18bd4:	ldr	r0, [fp, #8]
   18bd8:	mov	r1, #-2147483648	; 0x80000000
   18bdc:	add	r1, r1, r0, asr #31
   18be0:	rsbs	r0, r0, #0
   18be4:	rscs	r1, r1, #0
   18be8:	str	r0, [sp, #76]	; 0x4c
   18bec:	str	r1, [sp, #72]	; 0x48
   18bf0:	blt	18c88 <__assert_fail@plt+0x7c70>
   18bf4:	b	18c9c <__assert_fail@plt+0x7c84>
   18bf8:	mov	r0, #0
   18bfc:	cmp	r0, #0
   18c00:	bne	18c88 <__assert_fail@plt+0x7c70>
   18c04:	b	18c9c <__assert_fail@plt+0x7c84>
   18c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c0c:	asr	r3, r0, #31
   18c10:	mov	r1, #0
   18c14:	mov	r2, #-2147483648	; 0x80000000
   18c18:	str	r0, [sp, #68]	; 0x44
   18c1c:	mov	r0, r1
   18c20:	mov	r1, r2
   18c24:	ldr	r2, [sp, #68]	; 0x44
   18c28:	bl	1b348 <__assert_fail@plt+0xa330>
   18c2c:	ldr	r2, [fp, #8]
   18c30:	subs	r0, r0, r2
   18c34:	sbcs	r1, r1, r2, asr #31
   18c38:	str	r0, [sp, #64]	; 0x40
   18c3c:	str	r1, [sp, #60]	; 0x3c
   18c40:	blt	18c88 <__assert_fail@plt+0x7c70>
   18c44:	b	18c9c <__assert_fail@plt+0x7c84>
   18c48:	ldr	r0, [fp, #8]
   18c4c:	asr	r3, r0, #31
   18c50:	mvn	r1, #0
   18c54:	mvn	r2, #-2147483648	; 0x80000000
   18c58:	str	r0, [sp, #56]	; 0x38
   18c5c:	mov	r0, r1
   18c60:	mov	r1, r2
   18c64:	ldr	r2, [sp, #56]	; 0x38
   18c68:	bl	1b348 <__assert_fail@plt+0xa330>
   18c6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c70:	subs	r0, r0, r2
   18c74:	sbcs	r1, r1, r2, asr #31
   18c78:	str	r0, [sp, #52]	; 0x34
   18c7c:	str	r1, [sp, #48]	; 0x30
   18c80:	bge	18c9c <__assert_fail@plt+0x7c84>
   18c84:	b	18c88 <__assert_fail@plt+0x7c70>
   18c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c8c:	ldr	r1, [fp, #8]
   18c90:	mul	r0, r0, r1
   18c94:	str	r0, [fp, #-28]	; 0xffffffe4
   18c98:	b	18efc <__assert_fail@plt+0x7ee4>
   18c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca0:	ldr	r1, [fp, #8]
   18ca4:	mul	r0, r0, r1
   18ca8:	str	r0, [fp, #-28]	; 0xffffffe4
   18cac:	b	18f00 <__assert_fail@plt+0x7ee8>
   18cb0:	ldr	r0, [fp, #8]
   18cb4:	cmp	r0, #0
   18cb8:	bge	18e18 <__assert_fail@plt+0x7e00>
   18cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc0:	cmp	r0, #0
   18cc4:	bge	18da0 <__assert_fail@plt+0x7d88>
   18cc8:	b	18d10 <__assert_fail@plt+0x7cf8>
   18ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd0:	ldr	r1, [fp, #8]
   18cd4:	asr	r3, r1, #31
   18cd8:	mvn	r2, #0
   18cdc:	str	r0, [sp, #44]	; 0x2c
   18ce0:	mov	r0, r2
   18ce4:	str	r1, [sp, #40]	; 0x28
   18ce8:	mov	r1, r2
   18cec:	ldr	r2, [sp, #40]	; 0x28
   18cf0:	bl	1b41c <__assert_fail@plt+0xa404>
   18cf4:	ldr	r2, [sp, #44]	; 0x2c
   18cf8:	subs	r0, r2, r0
   18cfc:	rscs	r1, r1, r2, asr #31
   18d00:	str	r0, [sp, #36]	; 0x24
   18d04:	str	r1, [sp, #32]
   18d08:	bcc	18ed4 <__assert_fail@plt+0x7ebc>
   18d0c:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18d10:	b	18d14 <__assert_fail@plt+0x7cfc>
   18d14:	ldr	r0, [pc, #528]	; 18f2c <__assert_fail@plt+0x7f14>
   18d18:	ldr	r1, [fp, #8]
   18d1c:	cmp	r1, r0
   18d20:	blt	18d38 <__assert_fail@plt+0x7d20>
   18d24:	b	18d4c <__assert_fail@plt+0x7d34>
   18d28:	ldr	r0, [fp, #8]
   18d2c:	movw	r1, #0
   18d30:	cmp	r1, r0
   18d34:	bge	18d4c <__assert_fail@plt+0x7d34>
   18d38:	mov	r0, #1
   18d3c:	mvn	r1, #0
   18d40:	str	r1, [sp, #28]
   18d44:	str	r0, [sp, #24]
   18d48:	b	18d78 <__assert_fail@plt+0x7d60>
   18d4c:	ldr	r0, [fp, #8]
   18d50:	rsb	r0, r0, #0
   18d54:	asr	r3, r0, #31
   18d58:	mvn	r1, #0
   18d5c:	str	r0, [sp, #20]
   18d60:	mov	r0, r1
   18d64:	ldr	r2, [sp, #20]
   18d68:	bl	1b41c <__assert_fail@plt+0xa404>
   18d6c:	str	r0, [sp, #28]
   18d70:	str	r1, [sp, #24]
   18d74:	b	18d78 <__assert_fail@plt+0x7d60>
   18d78:	ldr	r0, [sp, #24]
   18d7c:	ldr	r1, [sp, #28]
   18d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d84:	mvn	r2, r2
   18d88:	subs	r1, r2, r1
   18d8c:	rscs	r0, r0, r2, asr #31
   18d90:	str	r1, [sp, #16]
   18d94:	str	r0, [sp, #12]
   18d98:	bcs	18ed4 <__assert_fail@plt+0x7ebc>
   18d9c:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18da0:	b	18da4 <__assert_fail@plt+0x7d8c>
   18da4:	b	18dfc <__assert_fail@plt+0x7de4>
   18da8:	b	18dfc <__assert_fail@plt+0x7de4>
   18dac:	ldr	r0, [fp, #8]
   18db0:	cmn	r0, #1
   18db4:	bne	18dfc <__assert_fail@plt+0x7de4>
   18db8:	b	18dbc <__assert_fail@plt+0x7da4>
   18dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc0:	add	r0, r0, #0
   18dc4:	movw	r1, #0
   18dc8:	cmp	r1, r0
   18dcc:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18dd0:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd8:	movw	r1, #0
   18ddc:	cmp	r1, r0
   18de0:	bge	18ee8 <__assert_fail@plt+0x7ed0>
   18de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de8:	sub	r0, r0, #1
   18dec:	mvn	r1, #0
   18df0:	cmp	r1, r0
   18df4:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18df8:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18dfc:	ldr	r0, [fp, #8]
   18e00:	movw	r1, #0
   18e04:	sdiv	r0, r1, r0
   18e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e0c:	cmp	r0, r1
   18e10:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18e14:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18e18:	ldr	r0, [fp, #8]
   18e1c:	cmp	r0, #0
   18e20:	bne	18e28 <__assert_fail@plt+0x7e10>
   18e24:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e2c:	cmp	r0, #0
   18e30:	bge	18e9c <__assert_fail@plt+0x7e84>
   18e34:	b	18e38 <__assert_fail@plt+0x7e20>
   18e38:	b	18e80 <__assert_fail@plt+0x7e68>
   18e3c:	b	18e80 <__assert_fail@plt+0x7e68>
   18e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e44:	cmn	r0, #1
   18e48:	bne	18e80 <__assert_fail@plt+0x7e68>
   18e4c:	b	18e50 <__assert_fail@plt+0x7e38>
   18e50:	ldr	r0, [fp, #8]
   18e54:	add	r0, r0, #0
   18e58:	movw	r1, #0
   18e5c:	cmp	r1, r0
   18e60:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18e64:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18e68:	ldr	r0, [fp, #8]
   18e6c:	sub	r0, r0, #1
   18e70:	mvn	r1, #0
   18e74:	cmp	r1, r0
   18e78:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18e7c:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e84:	movw	r1, #0
   18e88:	sdiv	r0, r1, r0
   18e8c:	ldr	r1, [fp, #8]
   18e90:	cmp	r0, r1
   18e94:	blt	18ed4 <__assert_fail@plt+0x7ebc>
   18e98:	b	18ee8 <__assert_fail@plt+0x7ed0>
   18e9c:	ldr	r0, [fp, #8]
   18ea0:	asr	r3, r0, #31
   18ea4:	mvn	r1, #0
   18ea8:	str	r0, [sp, #8]
   18eac:	mov	r0, r1
   18eb0:	ldr	r2, [sp, #8]
   18eb4:	bl	1b41c <__assert_fail@plt+0xa404>
   18eb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ebc:	subs	r0, r0, r2
   18ec0:	sbcs	r1, r1, r2, asr #31
   18ec4:	str	r0, [sp, #4]
   18ec8:	str	r1, [sp]
   18ecc:	bcs	18ee8 <__assert_fail@plt+0x7ed0>
   18ed0:	b	18ed4 <__assert_fail@plt+0x7ebc>
   18ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed8:	ldr	r1, [fp, #8]
   18edc:	mul	r0, r0, r1
   18ee0:	str	r0, [fp, #-28]	; 0xffffffe4
   18ee4:	b	18efc <__assert_fail@plt+0x7ee4>
   18ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eec:	ldr	r1, [fp, #8]
   18ef0:	mul	r0, r0, r1
   18ef4:	str	r0, [fp, #-28]	; 0xffffffe4
   18ef8:	b	18f00 <__assert_fail@plt+0x7ee8>
   18efc:	bl	190d8 <__assert_fail@plt+0x80c0>
   18f00:	ldr	r0, [fp, #-4]
   18f04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f08:	bl	16394 <__assert_fail@plt+0x537c>
   18f0c:	str	r0, [fp, #-4]
   18f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f14:	ldr	r1, [fp, #-8]
   18f18:	str	r0, [r1]
   18f1c:	ldr	r0, [fp, #-4]
   18f20:	mov	sp, fp
   18f24:	pop	{fp, pc}
   18f28:	svcvc	0x00ffffff
   18f2c:	andhi	r0, r0, r1
   18f30:	andhi	r0, r0, r0
   18f34:			; <UNDEFINED> instruction: 0xffff8000
   18f38:	push	{fp, lr}
   18f3c:	mov	fp, sp
   18f40:	sub	sp, sp, #8
   18f44:	str	r0, [sp, #4]
   18f48:	ldr	r0, [sp, #4]
   18f4c:	movw	r1, #1
   18f50:	bl	18f5c <__assert_fail@plt+0x7f44>
   18f54:	mov	sp, fp
   18f58:	pop	{fp, pc}
   18f5c:	push	{fp, lr}
   18f60:	mov	fp, sp
   18f64:	sub	sp, sp, #8
   18f68:	str	r0, [sp, #4]
   18f6c:	str	r1, [sp]
   18f70:	ldr	r0, [sp, #4]
   18f74:	ldr	r1, [sp]
   18f78:	bl	19128 <__assert_fail@plt+0x8110>
   18f7c:	bl	16320 <__assert_fail@plt+0x5308>
   18f80:	mov	sp, fp
   18f84:	pop	{fp, pc}
   18f88:	push	{fp, lr}
   18f8c:	mov	fp, sp
   18f90:	sub	sp, sp, #8
   18f94:	str	r0, [sp, #4]
   18f98:	ldr	r0, [sp, #4]
   18f9c:	movw	r1, #1
   18fa0:	bl	18fac <__assert_fail@plt+0x7f94>
   18fa4:	mov	sp, fp
   18fa8:	pop	{fp, pc}
   18fac:	push	{fp, lr}
   18fb0:	mov	fp, sp
   18fb4:	sub	sp, sp, #8
   18fb8:	str	r0, [sp, #4]
   18fbc:	str	r1, [sp]
   18fc0:	ldr	r0, [sp, #4]
   18fc4:	ldr	r1, [sp]
   18fc8:	bl	19564 <__assert_fail@plt+0x854c>
   18fcc:	bl	16320 <__assert_fail@plt+0x5308>
   18fd0:	mov	sp, fp
   18fd4:	pop	{fp, pc}
   18fd8:	push	{fp, lr}
   18fdc:	mov	fp, sp
   18fe0:	sub	sp, sp, #16
   18fe4:	str	r0, [fp, #-4]
   18fe8:	str	r1, [sp, #8]
   18fec:	ldr	r0, [sp, #8]
   18ff0:	bl	162fc <__assert_fail@plt+0x52e4>
   18ff4:	ldr	r1, [fp, #-4]
   18ff8:	ldr	r2, [sp, #8]
   18ffc:	str	r0, [sp, #4]
   19000:	bl	10e2c <memcpy@plt>
   19004:	ldr	r0, [sp, #4]
   19008:	mov	sp, fp
   1900c:	pop	{fp, pc}
   19010:	push	{fp, lr}
   19014:	mov	fp, sp
   19018:	sub	sp, sp, #16
   1901c:	str	r0, [fp, #-4]
   19020:	str	r1, [sp, #8]
   19024:	ldr	r0, [sp, #8]
   19028:	bl	16350 <__assert_fail@plt+0x5338>
   1902c:	ldr	r1, [fp, #-4]
   19030:	ldr	r2, [sp, #8]
   19034:	str	r0, [sp, #4]
   19038:	bl	10e2c <memcpy@plt>
   1903c:	ldr	r0, [sp, #4]
   19040:	mov	sp, fp
   19044:	pop	{fp, pc}
   19048:	push	{fp, lr}
   1904c:	mov	fp, sp
   19050:	sub	sp, sp, #16
   19054:	str	r0, [fp, #-4]
   19058:	str	r1, [sp, #8]
   1905c:	ldr	r0, [sp, #8]
   19060:	add	r0, r0, #1
   19064:	bl	16350 <__assert_fail@plt+0x5338>
   19068:	str	r0, [sp, #4]
   1906c:	ldr	r0, [sp, #4]
   19070:	ldr	r1, [sp, #8]
   19074:	add	r0, r0, r1
   19078:	movw	r1, #0
   1907c:	strb	r1, [r0]
   19080:	ldr	r0, [sp, #4]
   19084:	ldr	r1, [fp, #-4]
   19088:	ldr	r2, [sp, #8]
   1908c:	str	r0, [sp]
   19090:	bl	10e2c <memcpy@plt>
   19094:	ldr	r0, [sp]
   19098:	mov	sp, fp
   1909c:	pop	{fp, pc}
   190a0:	push	{fp, lr}
   190a4:	mov	fp, sp
   190a8:	sub	sp, sp, #8
   190ac:	str	r0, [sp, #4]
   190b0:	ldr	r0, [sp, #4]
   190b4:	ldr	r1, [sp, #4]
   190b8:	str	r0, [sp]
   190bc:	mov	r0, r1
   190c0:	bl	10f58 <strlen@plt>
   190c4:	add	r1, r0, #1
   190c8:	ldr	r0, [sp]
   190cc:	bl	18fd8 <__assert_fail@plt+0x7fc0>
   190d0:	mov	sp, fp
   190d4:	pop	{fp, pc}
   190d8:	push	{fp, lr}
   190dc:	mov	fp, sp
   190e0:	sub	sp, sp, #8
   190e4:	movw	r0, #49384	; 0xc0e8
   190e8:	movt	r0, #2
   190ec:	ldr	r0, [r0]
   190f0:	movw	r1, #48808	; 0xbea8
   190f4:	movt	r1, #1
   190f8:	str	r0, [sp, #4]
   190fc:	mov	r0, r1
   19100:	bl	10f4c <gettext@plt>
   19104:	ldr	r1, [sp, #4]
   19108:	str	r0, [sp]
   1910c:	mov	r0, r1
   19110:	movw	r1, #0
   19114:	movw	r2, #47683	; 0xba43
   19118:	movt	r2, #1
   1911c:	ldr	r3, [sp]
   19120:	bl	10ec8 <error@plt>
   19124:	bl	11000 <abort@plt>
   19128:	push	{fp, lr}
   1912c:	mov	fp, sp
   19130:	sub	sp, sp, #16
   19134:	str	r0, [sp, #8]
   19138:	str	r1, [sp, #4]
   1913c:	ldr	r0, [sp, #8]
   19140:	cmp	r0, #0
   19144:	beq	19154 <__assert_fail@plt+0x813c>
   19148:	ldr	r0, [sp, #4]
   1914c:	cmp	r0, #0
   19150:	bne	19160 <__assert_fail@plt+0x8148>
   19154:	movw	r0, #1
   19158:	str	r0, [sp, #4]
   1915c:	str	r0, [sp, #8]
   19160:	ldr	r0, [sp, #4]
   19164:	cmp	r0, #0
   19168:	beq	1919c <__assert_fail@plt+0x8184>
   1916c:	ldr	r0, [pc, #76]	; 191c0 <__assert_fail@plt+0x81a8>
   19170:	ldr	r1, [sp, #4]
   19174:	udiv	r0, r0, r1
   19178:	ldr	r1, [sp, #8]
   1917c:	cmp	r0, r1
   19180:	bcs	1919c <__assert_fail@plt+0x8184>
   19184:	bl	10f70 <__errno_location@plt>
   19188:	movw	lr, #12
   1918c:	str	lr, [r0]
   19190:	movw	r0, #0
   19194:	str	r0, [fp, #-4]
   19198:	b	191b4 <__assert_fail@plt+0x819c>
   1919c:	ldr	r0, [sp, #8]
   191a0:	ldr	r1, [sp, #4]
   191a4:	bl	10dc0 <calloc@plt>
   191a8:	str	r0, [sp]
   191ac:	ldr	r0, [sp]
   191b0:	str	r0, [fp, #-4]
   191b4:	ldr	r0, [fp, #-4]
   191b8:	mov	sp, fp
   191bc:	pop	{fp, pc}
   191c0:	svcvc	0x00ffffff
   191c4:	push	{fp, lr}
   191c8:	mov	fp, sp
   191cc:	sub	sp, sp, #16
   191d0:	str	r0, [sp, #8]
   191d4:	ldr	r0, [sp, #8]
   191d8:	cmp	r0, #0
   191dc:	bne	191e8 <__assert_fail@plt+0x81d0>
   191e0:	movw	r0, #1
   191e4:	str	r0, [sp, #8]
   191e8:	ldr	r0, [pc, #64]	; 19230 <__assert_fail@plt+0x8218>
   191ec:	ldr	r1, [sp, #8]
   191f0:	cmp	r0, r1
   191f4:	bcs	19210 <__assert_fail@plt+0x81f8>
   191f8:	bl	10f70 <__errno_location@plt>
   191fc:	movw	lr, #12
   19200:	str	lr, [r0]
   19204:	movw	r0, #0
   19208:	str	r0, [fp, #-4]
   1920c:	b	19224 <__assert_fail@plt+0x820c>
   19210:	ldr	r0, [sp, #8]
   19214:	bl	10eec <malloc@plt>
   19218:	str	r0, [sp, #4]
   1921c:	ldr	r0, [sp, #4]
   19220:	str	r0, [fp, #-4]
   19224:	ldr	r0, [fp, #-4]
   19228:	mov	sp, fp
   1922c:	pop	{fp, pc}
   19230:	svcvc	0x00ffffff
   19234:	push	{fp, lr}
   19238:	mov	fp, sp
   1923c:	sub	sp, sp, #16
   19240:	str	r0, [sp, #8]
   19244:	str	r1, [sp, #4]
   19248:	ldr	r0, [sp, #8]
   1924c:	movw	r1, #0
   19250:	cmp	r0, r1
   19254:	bne	19268 <__assert_fail@plt+0x8250>
   19258:	ldr	r0, [sp, #4]
   1925c:	bl	191c4 <__assert_fail@plt+0x81ac>
   19260:	str	r0, [fp, #-4]
   19264:	b	192c8 <__assert_fail@plt+0x82b0>
   19268:	ldr	r0, [sp, #4]
   1926c:	cmp	r0, #0
   19270:	bne	19288 <__assert_fail@plt+0x8270>
   19274:	ldr	r0, [sp, #8]
   19278:	bl	19460 <__assert_fail@plt+0x8448>
   1927c:	movw	r0, #0
   19280:	str	r0, [fp, #-4]
   19284:	b	192c8 <__assert_fail@plt+0x82b0>
   19288:	ldr	r0, [pc, #68]	; 192d4 <__assert_fail@plt+0x82bc>
   1928c:	ldr	r1, [sp, #4]
   19290:	cmp	r0, r1
   19294:	bcs	192b0 <__assert_fail@plt+0x8298>
   19298:	bl	10f70 <__errno_location@plt>
   1929c:	movw	lr, #12
   192a0:	str	lr, [r0]
   192a4:	movw	r0, #0
   192a8:	str	r0, [fp, #-4]
   192ac:	b	192c8 <__assert_fail@plt+0x82b0>
   192b0:	ldr	r0, [sp, #8]
   192b4:	ldr	r1, [sp, #4]
   192b8:	bl	10e68 <realloc@plt>
   192bc:	str	r0, [sp]
   192c0:	ldr	r0, [sp]
   192c4:	str	r0, [fp, #-4]
   192c8:	ldr	r0, [fp, #-4]
   192cc:	mov	sp, fp
   192d0:	pop	{fp, pc}
   192d4:	svcvc	0x00ffffff
   192d8:	push	{fp, lr}
   192dc:	mov	fp, sp
   192e0:	sub	sp, sp, #24
   192e4:	str	r0, [fp, #-8]
   192e8:	str	r1, [sp, #12]
   192ec:	ldr	r0, [fp, #-8]
   192f0:	str	r0, [sp, #8]
   192f4:	ldr	r0, [sp, #12]
   192f8:	str	r0, [sp, #4]
   192fc:	ldr	r0, [sp, #8]
   19300:	ldr	r1, [sp, #4]
   19304:	cmp	r0, r1
   19308:	bne	19318 <__assert_fail@plt+0x8300>
   1930c:	movw	r0, #0
   19310:	str	r0, [fp, #-4]
   19314:	b	19384 <__assert_fail@plt+0x836c>
   19318:	b	1931c <__assert_fail@plt+0x8304>
   1931c:	ldr	r0, [sp, #8]
   19320:	ldrb	r0, [r0]
   19324:	bl	1b0c8 <__assert_fail@plt+0xa0b0>
   19328:	strb	r0, [sp, #3]
   1932c:	ldr	r0, [sp, #4]
   19330:	ldrb	r0, [r0]
   19334:	bl	1b0c8 <__assert_fail@plt+0xa0b0>
   19338:	strb	r0, [sp, #2]
   1933c:	ldrb	r0, [sp, #3]
   19340:	cmp	r0, #0
   19344:	bne	1934c <__assert_fail@plt+0x8334>
   19348:	b	19374 <__assert_fail@plt+0x835c>
   1934c:	ldr	r0, [sp, #8]
   19350:	add	r0, r0, #1
   19354:	str	r0, [sp, #8]
   19358:	ldr	r0, [sp, #4]
   1935c:	add	r0, r0, #1
   19360:	str	r0, [sp, #4]
   19364:	ldrb	r0, [sp, #3]
   19368:	ldrb	r1, [sp, #2]
   1936c:	cmp	r0, r1
   19370:	beq	1931c <__assert_fail@plt+0x8304>
   19374:	ldrb	r0, [sp, #3]
   19378:	ldrb	r1, [sp, #2]
   1937c:	sub	r0, r0, r1
   19380:	str	r0, [fp, #-4]
   19384:	ldr	r0, [fp, #-4]
   19388:	mov	sp, fp
   1938c:	pop	{fp, pc}
   19390:	push	{fp, lr}
   19394:	mov	fp, sp
   19398:	sub	sp, sp, #16
   1939c:	str	r0, [sp, #8]
   193a0:	ldr	r0, [sp, #8]
   193a4:	bl	10ea4 <__fpending@plt>
   193a8:	cmp	r0, #0
   193ac:	movw	r0, #0
   193b0:	movne	r0, #1
   193b4:	and	r0, r0, #1
   193b8:	strb	r0, [sp, #7]
   193bc:	ldr	r0, [sp, #8]
   193c0:	bl	10eb0 <ferror_unlocked@plt>
   193c4:	cmp	r0, #0
   193c8:	movw	r0, #0
   193cc:	movne	r0, #1
   193d0:	and	r0, r0, #1
   193d4:	strb	r0, [sp, #6]
   193d8:	ldr	r0, [sp, #8]
   193dc:	bl	12650 <__assert_fail@plt+0x1638>
   193e0:	cmp	r0, #0
   193e4:	movw	r0, #0
   193e8:	movne	r0, #1
   193ec:	and	r0, r0, #1
   193f0:	strb	r0, [sp, #5]
   193f4:	ldrb	r0, [sp, #6]
   193f8:	tst	r0, #1
   193fc:	bne	19428 <__assert_fail@plt+0x8410>
   19400:	ldrb	r0, [sp, #5]
   19404:	tst	r0, #1
   19408:	beq	1944c <__assert_fail@plt+0x8434>
   1940c:	ldrb	r0, [sp, #7]
   19410:	tst	r0, #1
   19414:	bne	19428 <__assert_fail@plt+0x8410>
   19418:	bl	10f70 <__errno_location@plt>
   1941c:	ldr	r0, [r0]
   19420:	cmp	r0, #9
   19424:	beq	1944c <__assert_fail@plt+0x8434>
   19428:	ldrb	r0, [sp, #5]
   1942c:	tst	r0, #1
   19430:	bne	19440 <__assert_fail@plt+0x8428>
   19434:	bl	10f70 <__errno_location@plt>
   19438:	movw	lr, #0
   1943c:	str	lr, [r0]
   19440:	mvn	r0, #0
   19444:	str	r0, [fp, #-4]
   19448:	b	19454 <__assert_fail@plt+0x843c>
   1944c:	movw	r0, #0
   19450:	str	r0, [fp, #-4]
   19454:	ldr	r0, [fp, #-4]
   19458:	mov	sp, fp
   1945c:	pop	{fp, pc}
   19460:	push	{fp, lr}
   19464:	mov	fp, sp
   19468:	sub	sp, sp, #16
   1946c:	str	r0, [fp, #-4]
   19470:	bl	10f70 <__errno_location@plt>
   19474:	ldr	r0, [r0]
   19478:	str	r0, [sp, #8]
   1947c:	ldr	r0, [fp, #-4]
   19480:	bl	10e14 <free@plt>
   19484:	ldr	r0, [sp, #8]
   19488:	str	r0, [sp, #4]
   1948c:	bl	10f70 <__errno_location@plt>
   19490:	ldr	lr, [sp, #4]
   19494:	str	lr, [r0]
   19498:	mov	sp, fp
   1949c:	pop	{fp, pc}
   194a0:	push	{fp, lr}
   194a4:	mov	fp, sp
   194a8:	bl	10f70 <__errno_location@plt>
   194ac:	movw	lr, #12
   194b0:	str	lr, [r0]
   194b4:	movw	r0, #0
   194b8:	pop	{fp, pc}
   194bc:	push	{fp, lr}
   194c0:	mov	fp, sp
   194c4:	sub	sp, sp, #8
   194c8:	str	r0, [sp, #4]
   194cc:	ldr	r0, [sp, #4]
   194d0:	cmn	r0, #1
   194d4:	bhi	194e8 <__assert_fail@plt+0x84d0>
   194d8:	ldr	r0, [sp, #4]
   194dc:	bl	191c4 <__assert_fail@plt+0x81ac>
   194e0:	str	r0, [sp]
   194e4:	b	194f0 <__assert_fail@plt+0x84d8>
   194e8:	bl	194a0 <__assert_fail@plt+0x8488>
   194ec:	str	r0, [sp]
   194f0:	ldr	r0, [sp]
   194f4:	mov	sp, fp
   194f8:	pop	{fp, pc}
   194fc:	push	{fp, lr}
   19500:	mov	fp, sp
   19504:	sub	sp, sp, #16
   19508:	str	r0, [fp, #-4]
   1950c:	str	r1, [sp, #8]
   19510:	ldr	r0, [sp, #8]
   19514:	cmn	r0, #1
   19518:	bhi	19550 <__assert_fail@plt+0x8538>
   1951c:	ldr	r0, [fp, #-4]
   19520:	ldr	r1, [sp, #8]
   19524:	ldr	r2, [sp, #8]
   19528:	cmp	r2, #0
   1952c:	movw	r2, #0
   19530:	movne	r2, #1
   19534:	mvn	r3, #0
   19538:	eor	r2, r2, r3
   1953c:	and	r2, r2, #1
   19540:	orr	r1, r1, r2
   19544:	bl	19234 <__assert_fail@plt+0x821c>
   19548:	str	r0, [sp, #4]
   1954c:	b	19558 <__assert_fail@plt+0x8540>
   19550:	bl	194a0 <__assert_fail@plt+0x8488>
   19554:	str	r0, [sp, #4]
   19558:	ldr	r0, [sp, #4]
   1955c:	mov	sp, fp
   19560:	pop	{fp, pc}
   19564:	push	{fp, lr}
   19568:	mov	fp, sp
   1956c:	sub	sp, sp, #16
   19570:	str	r0, [sp, #8]
   19574:	str	r1, [sp, #4]
   19578:	ldr	r0, [sp, #8]
   1957c:	mvn	r1, #0
   19580:	cmp	r1, r0
   19584:	bcs	195a8 <__assert_fail@plt+0x8590>
   19588:	ldr	r0, [sp, #4]
   1958c:	cmp	r0, #0
   19590:	beq	195a0 <__assert_fail@plt+0x8588>
   19594:	bl	194a0 <__assert_fail@plt+0x8488>
   19598:	str	r0, [fp, #-4]
   1959c:	b	195e8 <__assert_fail@plt+0x85d0>
   195a0:	movw	r0, #0
   195a4:	str	r0, [sp, #8]
   195a8:	ldr	r0, [sp, #4]
   195ac:	mvn	r1, #0
   195b0:	cmp	r1, r0
   195b4:	bcs	195d8 <__assert_fail@plt+0x85c0>
   195b8:	ldr	r0, [sp, #8]
   195bc:	cmp	r0, #0
   195c0:	beq	195d0 <__assert_fail@plt+0x85b8>
   195c4:	bl	194a0 <__assert_fail@plt+0x8488>
   195c8:	str	r0, [fp, #-4]
   195cc:	b	195e8 <__assert_fail@plt+0x85d0>
   195d0:	movw	r0, #0
   195d4:	str	r0, [sp, #4]
   195d8:	ldr	r0, [sp, #8]
   195dc:	ldr	r1, [sp, #4]
   195e0:	bl	19128 <__assert_fail@plt+0x8110>
   195e4:	str	r0, [fp, #-4]
   195e8:	ldr	r0, [fp, #-4]
   195ec:	mov	sp, fp
   195f0:	pop	{fp, pc}
   195f4:	push	{fp, lr}
   195f8:	mov	fp, sp
   195fc:	sub	sp, sp, #16
   19600:	str	r0, [fp, #-4]
   19604:	str	r1, [sp, #8]
   19608:	str	r2, [sp, #4]
   1960c:	ldr	r0, [sp, #8]
   19610:	cmp	r0, #0
   19614:	beq	19624 <__assert_fail@plt+0x860c>
   19618:	ldr	r0, [sp, #4]
   1961c:	cmp	r0, #0
   19620:	bne	19630 <__assert_fail@plt+0x8618>
   19624:	movw	r0, #1
   19628:	str	r0, [sp, #4]
   1962c:	str	r0, [sp, #8]
   19630:	ldr	r0, [sp, #8]
   19634:	cmn	r0, #1
   19638:	bhi	19660 <__assert_fail@plt+0x8648>
   1963c:	ldr	r0, [sp, #4]
   19640:	cmn	r0, #1
   19644:	bhi	19660 <__assert_fail@plt+0x8648>
   19648:	ldr	r0, [fp, #-4]
   1964c:	ldr	r1, [sp, #8]
   19650:	ldr	r2, [sp, #4]
   19654:	bl	19780 <__assert_fail@plt+0x8768>
   19658:	str	r0, [sp]
   1965c:	b	19668 <__assert_fail@plt+0x8650>
   19660:	bl	194a0 <__assert_fail@plt+0x8488>
   19664:	str	r0, [sp]
   19668:	ldr	r0, [sp]
   1966c:	mov	sp, fp
   19670:	pop	{fp, pc}
   19674:	push	{fp, lr}
   19678:	mov	fp, sp
   1967c:	sub	sp, sp, #8
   19680:	movw	r0, #14
   19684:	bl	10fd0 <nl_langinfo@plt>
   19688:	str	r0, [sp, #4]
   1968c:	ldr	r0, [sp, #4]
   19690:	movw	lr, #0
   19694:	cmp	r0, lr
   19698:	bne	196a8 <__assert_fail@plt+0x8690>
   1969c:	movw	r0, #47299	; 0xb8c3
   196a0:	movt	r0, #1
   196a4:	str	r0, [sp, #4]
   196a8:	ldr	r0, [sp, #4]
   196ac:	ldrb	r0, [r0]
   196b0:	cmp	r0, #0
   196b4:	bne	196c4 <__assert_fail@plt+0x86ac>
   196b8:	movw	r0, #48825	; 0xbeb9
   196bc:	movt	r0, #1
   196c0:	str	r0, [sp, #4]
   196c4:	ldr	r0, [sp, #4]
   196c8:	mov	sp, fp
   196cc:	pop	{fp, pc}
   196d0:	push	{fp, lr}
   196d4:	mov	fp, sp
   196d8:	sub	sp, sp, #32
   196dc:	str	r0, [fp, #-8]
   196e0:	str	r1, [fp, #-12]
   196e4:	str	r2, [sp, #16]
   196e8:	str	r3, [sp, #12]
   196ec:	ldr	r0, [fp, #-8]
   196f0:	movw	r1, #0
   196f4:	cmp	r0, r1
   196f8:	bne	19704 <__assert_fail@plt+0x86ec>
   196fc:	add	r0, sp, #4
   19700:	str	r0, [fp, #-8]
   19704:	ldr	r0, [fp, #-8]
   19708:	ldr	r1, [fp, #-12]
   1970c:	ldr	r2, [sp, #16]
   19710:	ldr	r3, [sp, #12]
   19714:	bl	10ebc <mbrtowc@plt>
   19718:	str	r0, [sp, #8]
   1971c:	ldr	r0, [sp, #8]
   19720:	mvn	r1, #1
   19724:	cmp	r1, r0
   19728:	bhi	1976c <__assert_fail@plt+0x8754>
   1972c:	ldr	r0, [sp, #16]
   19730:	cmp	r0, #0
   19734:	beq	1976c <__assert_fail@plt+0x8754>
   19738:	movw	r0, #0
   1973c:	bl	1b150 <__assert_fail@plt+0xa138>
   19740:	tst	r0, #1
   19744:	bne	1976c <__assert_fail@plt+0x8754>
   19748:	ldr	r0, [fp, #-12]
   1974c:	ldrb	r0, [r0]
   19750:	strb	r0, [sp, #3]
   19754:	ldrb	r0, [sp, #3]
   19758:	ldr	r1, [fp, #-8]
   1975c:	str	r0, [r1]
   19760:	movw	r0, #1
   19764:	str	r0, [fp, #-4]
   19768:	b	19774 <__assert_fail@plt+0x875c>
   1976c:	ldr	r0, [sp, #8]
   19770:	str	r0, [fp, #-4]
   19774:	ldr	r0, [fp, #-4]
   19778:	mov	sp, fp
   1977c:	pop	{fp, pc}
   19780:	push	{fp, lr}
   19784:	mov	fp, sp
   19788:	sub	sp, sp, #176	; 0xb0
   1978c:	str	r0, [fp, #-8]
   19790:	str	r1, [fp, #-12]
   19794:	str	r2, [fp, #-16]
   19798:	b	19b50 <__assert_fail@plt+0x8b38>
   1979c:	b	19970 <__assert_fail@plt+0x8958>
   197a0:	ldr	r0, [fp, #-16]
   197a4:	cmp	r0, #0
   197a8:	bcs	198ac <__assert_fail@plt+0x8894>
   197ac:	ldr	r0, [fp, #-12]
   197b0:	cmp	r0, #0
   197b4:	bcs	1983c <__assert_fail@plt+0x8824>
   197b8:	b	197d8 <__assert_fail@plt+0x87c0>
   197bc:	ldr	r0, [fp, #-12]
   197c0:	ldr	r1, [fp, #-16]
   197c4:	movw	r2, #127	; 0x7f
   197c8:	udiv	r1, r2, r1
   197cc:	cmp	r0, r1
   197d0:	bcc	19940 <__assert_fail@plt+0x8928>
   197d4:	b	19958 <__assert_fail@plt+0x8940>
   197d8:	b	197ec <__assert_fail@plt+0x87d4>
   197dc:	ldr	r0, [fp, #-16]
   197e0:	cmp	r0, #1
   197e4:	bcc	197fc <__assert_fail@plt+0x87e4>
   197e8:	b	19808 <__assert_fail@plt+0x87f0>
   197ec:	ldr	r0, [fp, #-16]
   197f0:	movw	r1, #0
   197f4:	cmp	r1, r0
   197f8:	bcs	19808 <__assert_fail@plt+0x87f0>
   197fc:	movw	r0, #0
   19800:	str	r0, [fp, #-24]	; 0xffffffe8
   19804:	b	19820 <__assert_fail@plt+0x8808>
   19808:	ldr	r0, [fp, #-16]
   1980c:	movw	r1, #0
   19810:	sub	r0, r1, r0
   19814:	movw	r1, #127	; 0x7f
   19818:	udiv	r0, r1, r0
   1981c:	str	r0, [fp, #-24]	; 0xffffffe8
   19820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19824:	ldr	r1, [fp, #-12]
   19828:	mvn	r2, #0
   1982c:	sub	r1, r2, r1
   19830:	cmp	r0, r1
   19834:	bls	19940 <__assert_fail@plt+0x8928>
   19838:	b	19958 <__assert_fail@plt+0x8940>
   1983c:	ldr	r0, [fp, #-16]
   19840:	cmn	r0, #1
   19844:	bne	19890 <__assert_fail@plt+0x8878>
   19848:	b	19868 <__assert_fail@plt+0x8850>
   1984c:	ldr	r0, [fp, #-12]
   19850:	mvn	r1, #127	; 0x7f
   19854:	add	r0, r0, r1
   19858:	movw	r1, #0
   1985c:	cmp	r1, r0
   19860:	bcc	19940 <__assert_fail@plt+0x8928>
   19864:	b	19958 <__assert_fail@plt+0x8940>
   19868:	ldr	r0, [fp, #-12]
   1986c:	movw	r1, #0
   19870:	cmp	r1, r0
   19874:	bcs	19958 <__assert_fail@plt+0x8940>
   19878:	ldr	r0, [fp, #-12]
   1987c:	sub	r0, r0, #1
   19880:	movw	r1, #127	; 0x7f
   19884:	cmp	r1, r0
   19888:	bcc	19940 <__assert_fail@plt+0x8928>
   1988c:	b	19958 <__assert_fail@plt+0x8940>
   19890:	ldr	r0, [fp, #-16]
   19894:	mvn	r1, #127	; 0x7f
   19898:	udiv	r0, r1, r0
   1989c:	ldr	r1, [fp, #-12]
   198a0:	cmp	r0, r1
   198a4:	bcc	19940 <__assert_fail@plt+0x8928>
   198a8:	b	19958 <__assert_fail@plt+0x8940>
   198ac:	ldr	r0, [fp, #-16]
   198b0:	cmp	r0, #0
   198b4:	bne	198bc <__assert_fail@plt+0x88a4>
   198b8:	b	19958 <__assert_fail@plt+0x8940>
   198bc:	ldr	r0, [fp, #-12]
   198c0:	cmp	r0, #0
   198c4:	bcs	19928 <__assert_fail@plt+0x8910>
   198c8:	ldr	r0, [fp, #-12]
   198cc:	cmn	r0, #1
   198d0:	bne	1990c <__assert_fail@plt+0x88f4>
   198d4:	b	198f4 <__assert_fail@plt+0x88dc>
   198d8:	ldr	r0, [fp, #-16]
   198dc:	mvn	r1, #127	; 0x7f
   198e0:	add	r0, r0, r1
   198e4:	movw	r1, #0
   198e8:	cmp	r1, r0
   198ec:	bcc	19940 <__assert_fail@plt+0x8928>
   198f0:	b	19958 <__assert_fail@plt+0x8940>
   198f4:	ldr	r0, [fp, #-16]
   198f8:	sub	r0, r0, #1
   198fc:	movw	r1, #127	; 0x7f
   19900:	cmp	r1, r0
   19904:	bcc	19940 <__assert_fail@plt+0x8928>
   19908:	b	19958 <__assert_fail@plt+0x8940>
   1990c:	ldr	r0, [fp, #-12]
   19910:	mvn	r1, #127	; 0x7f
   19914:	udiv	r0, r1, r0
   19918:	ldr	r1, [fp, #-16]
   1991c:	cmp	r0, r1
   19920:	bcc	19940 <__assert_fail@plt+0x8928>
   19924:	b	19958 <__assert_fail@plt+0x8940>
   19928:	ldr	r0, [fp, #-16]
   1992c:	movw	r1, #127	; 0x7f
   19930:	udiv	r0, r1, r0
   19934:	ldr	r1, [fp, #-12]
   19938:	cmp	r0, r1
   1993c:	bcs	19958 <__assert_fail@plt+0x8940>
   19940:	ldr	r0, [fp, #-12]
   19944:	ldr	r1, [fp, #-16]
   19948:	mul	r0, r0, r1
   1994c:	sxtb	r0, r0
   19950:	str	r0, [fp, #-20]	; 0xffffffec
   19954:	b	1aad0 <__assert_fail@plt+0x9ab8>
   19958:	ldr	r0, [fp, #-12]
   1995c:	ldr	r1, [fp, #-16]
   19960:	mul	r0, r0, r1
   19964:	sxtb	r0, r0
   19968:	str	r0, [fp, #-20]	; 0xffffffec
   1996c:	b	1aae8 <__assert_fail@plt+0x9ad0>
   19970:	ldr	r0, [fp, #-16]
   19974:	cmp	r0, #0
   19978:	bcs	19a84 <__assert_fail@plt+0x8a6c>
   1997c:	ldr	r0, [fp, #-12]
   19980:	cmp	r0, #0
   19984:	bcs	19a0c <__assert_fail@plt+0x89f4>
   19988:	b	199a8 <__assert_fail@plt+0x8990>
   1998c:	ldr	r0, [fp, #-12]
   19990:	ldr	r1, [fp, #-16]
   19994:	movw	r2, #255	; 0xff
   19998:	udiv	r1, r2, r1
   1999c:	cmp	r0, r1
   199a0:	bcc	19b20 <__assert_fail@plt+0x8b08>
   199a4:	b	19b38 <__assert_fail@plt+0x8b20>
   199a8:	b	199bc <__assert_fail@plt+0x89a4>
   199ac:	ldr	r0, [fp, #-16]
   199b0:	cmp	r0, #1
   199b4:	bcc	199cc <__assert_fail@plt+0x89b4>
   199b8:	b	199d8 <__assert_fail@plt+0x89c0>
   199bc:	ldr	r0, [fp, #-16]
   199c0:	movw	r1, #0
   199c4:	cmp	r1, r0
   199c8:	bcs	199d8 <__assert_fail@plt+0x89c0>
   199cc:	movw	r0, #0
   199d0:	str	r0, [fp, #-28]	; 0xffffffe4
   199d4:	b	199f0 <__assert_fail@plt+0x89d8>
   199d8:	ldr	r0, [fp, #-16]
   199dc:	movw	r1, #0
   199e0:	sub	r0, r1, r0
   199e4:	movw	r1, #255	; 0xff
   199e8:	udiv	r0, r1, r0
   199ec:	str	r0, [fp, #-28]	; 0xffffffe4
   199f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   199f4:	ldr	r1, [fp, #-12]
   199f8:	mvn	r2, #0
   199fc:	sub	r1, r2, r1
   19a00:	cmp	r0, r1
   19a04:	bls	19b20 <__assert_fail@plt+0x8b08>
   19a08:	b	19b38 <__assert_fail@plt+0x8b20>
   19a0c:	b	19a14 <__assert_fail@plt+0x89fc>
   19a10:	b	19a18 <__assert_fail@plt+0x8a00>
   19a14:	b	19a68 <__assert_fail@plt+0x8a50>
   19a18:	ldr	r0, [fp, #-16]
   19a1c:	cmn	r0, #1
   19a20:	bne	19a68 <__assert_fail@plt+0x8a50>
   19a24:	b	19a40 <__assert_fail@plt+0x8a28>
   19a28:	ldr	r0, [fp, #-12]
   19a2c:	add	r0, r0, #0
   19a30:	movw	r1, #0
   19a34:	cmp	r1, r0
   19a38:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19a3c:	b	19b38 <__assert_fail@plt+0x8b20>
   19a40:	ldr	r0, [fp, #-12]
   19a44:	movw	r1, #0
   19a48:	cmp	r1, r0
   19a4c:	bcs	19b38 <__assert_fail@plt+0x8b20>
   19a50:	ldr	r0, [fp, #-12]
   19a54:	sub	r0, r0, #1
   19a58:	mvn	r1, #0
   19a5c:	cmp	r1, r0
   19a60:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19a64:	b	19b38 <__assert_fail@plt+0x8b20>
   19a68:	ldr	r0, [fp, #-16]
   19a6c:	movw	r1, #0
   19a70:	udiv	r0, r1, r0
   19a74:	ldr	r1, [fp, #-12]
   19a78:	cmp	r0, r1
   19a7c:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19a80:	b	19b38 <__assert_fail@plt+0x8b20>
   19a84:	ldr	r0, [fp, #-16]
   19a88:	cmp	r0, #0
   19a8c:	bne	19a94 <__assert_fail@plt+0x8a7c>
   19a90:	b	19b38 <__assert_fail@plt+0x8b20>
   19a94:	ldr	r0, [fp, #-12]
   19a98:	cmp	r0, #0
   19a9c:	bcs	19b08 <__assert_fail@plt+0x8af0>
   19aa0:	b	19aa8 <__assert_fail@plt+0x8a90>
   19aa4:	b	19aac <__assert_fail@plt+0x8a94>
   19aa8:	b	19aec <__assert_fail@plt+0x8ad4>
   19aac:	ldr	r0, [fp, #-12]
   19ab0:	cmn	r0, #1
   19ab4:	bne	19aec <__assert_fail@plt+0x8ad4>
   19ab8:	b	19ad4 <__assert_fail@plt+0x8abc>
   19abc:	ldr	r0, [fp, #-16]
   19ac0:	add	r0, r0, #0
   19ac4:	movw	r1, #0
   19ac8:	cmp	r1, r0
   19acc:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19ad0:	b	19b38 <__assert_fail@plt+0x8b20>
   19ad4:	ldr	r0, [fp, #-16]
   19ad8:	sub	r0, r0, #1
   19adc:	mvn	r1, #0
   19ae0:	cmp	r1, r0
   19ae4:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19ae8:	b	19b38 <__assert_fail@plt+0x8b20>
   19aec:	ldr	r0, [fp, #-12]
   19af0:	movw	r1, #0
   19af4:	udiv	r0, r1, r0
   19af8:	ldr	r1, [fp, #-16]
   19afc:	cmp	r0, r1
   19b00:	bcc	19b20 <__assert_fail@plt+0x8b08>
   19b04:	b	19b38 <__assert_fail@plt+0x8b20>
   19b08:	ldr	r0, [fp, #-16]
   19b0c:	movw	r1, #255	; 0xff
   19b10:	udiv	r0, r1, r0
   19b14:	ldr	r1, [fp, #-12]
   19b18:	cmp	r0, r1
   19b1c:	bcs	19b38 <__assert_fail@plt+0x8b20>
   19b20:	ldr	r0, [fp, #-12]
   19b24:	ldr	r1, [fp, #-16]
   19b28:	mul	r0, r0, r1
   19b2c:	and	r0, r0, #255	; 0xff
   19b30:	str	r0, [fp, #-20]	; 0xffffffec
   19b34:	b	1aad0 <__assert_fail@plt+0x9ab8>
   19b38:	ldr	r0, [fp, #-12]
   19b3c:	ldr	r1, [fp, #-16]
   19b40:	mul	r0, r0, r1
   19b44:	and	r0, r0, #255	; 0xff
   19b48:	str	r0, [fp, #-20]	; 0xffffffec
   19b4c:	b	1aae8 <__assert_fail@plt+0x9ad0>
   19b50:	b	19f08 <__assert_fail@plt+0x8ef0>
   19b54:	b	19d28 <__assert_fail@plt+0x8d10>
   19b58:	ldr	r0, [fp, #-16]
   19b5c:	cmp	r0, #0
   19b60:	bcs	19c64 <__assert_fail@plt+0x8c4c>
   19b64:	ldr	r0, [fp, #-12]
   19b68:	cmp	r0, #0
   19b6c:	bcs	19bf4 <__assert_fail@plt+0x8bdc>
   19b70:	b	19b90 <__assert_fail@plt+0x8b78>
   19b74:	ldr	r0, [fp, #-12]
   19b78:	ldr	r1, [fp, #-16]
   19b7c:	movw	r2, #32767	; 0x7fff
   19b80:	udiv	r1, r2, r1
   19b84:	cmp	r0, r1
   19b88:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19b8c:	b	19d10 <__assert_fail@plt+0x8cf8>
   19b90:	b	19ba4 <__assert_fail@plt+0x8b8c>
   19b94:	ldr	r0, [fp, #-16]
   19b98:	cmp	r0, #1
   19b9c:	bcc	19bb4 <__assert_fail@plt+0x8b9c>
   19ba0:	b	19bc0 <__assert_fail@plt+0x8ba8>
   19ba4:	ldr	r0, [fp, #-16]
   19ba8:	movw	r1, #0
   19bac:	cmp	r1, r0
   19bb0:	bcs	19bc0 <__assert_fail@plt+0x8ba8>
   19bb4:	movw	r0, #0
   19bb8:	str	r0, [fp, #-32]	; 0xffffffe0
   19bbc:	b	19bd8 <__assert_fail@plt+0x8bc0>
   19bc0:	ldr	r0, [fp, #-16]
   19bc4:	movw	r1, #0
   19bc8:	sub	r0, r1, r0
   19bcc:	movw	r1, #32767	; 0x7fff
   19bd0:	udiv	r0, r1, r0
   19bd4:	str	r0, [fp, #-32]	; 0xffffffe0
   19bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bdc:	ldr	r1, [fp, #-12]
   19be0:	mvn	r2, #0
   19be4:	sub	r1, r2, r1
   19be8:	cmp	r0, r1
   19bec:	bls	19cf8 <__assert_fail@plt+0x8ce0>
   19bf0:	b	19d10 <__assert_fail@plt+0x8cf8>
   19bf4:	ldr	r0, [fp, #-16]
   19bf8:	cmn	r0, #1
   19bfc:	bne	19c48 <__assert_fail@plt+0x8c30>
   19c00:	b	19c20 <__assert_fail@plt+0x8c08>
   19c04:	ldr	r0, [pc, #3840]	; 1ab0c <__assert_fail@plt+0x9af4>
   19c08:	ldr	r1, [fp, #-12]
   19c0c:	add	r0, r1, r0
   19c10:	movw	r1, #0
   19c14:	cmp	r1, r0
   19c18:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19c1c:	b	19d10 <__assert_fail@plt+0x8cf8>
   19c20:	ldr	r0, [fp, #-12]
   19c24:	movw	r1, #0
   19c28:	cmp	r1, r0
   19c2c:	bcs	19d10 <__assert_fail@plt+0x8cf8>
   19c30:	ldr	r0, [fp, #-12]
   19c34:	sub	r0, r0, #1
   19c38:	movw	r1, #32767	; 0x7fff
   19c3c:	cmp	r1, r0
   19c40:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19c44:	b	19d10 <__assert_fail@plt+0x8cf8>
   19c48:	ldr	r0, [pc, #3772]	; 1ab0c <__assert_fail@plt+0x9af4>
   19c4c:	ldr	r1, [fp, #-16]
   19c50:	udiv	r0, r0, r1
   19c54:	ldr	r1, [fp, #-12]
   19c58:	cmp	r0, r1
   19c5c:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19c60:	b	19d10 <__assert_fail@plt+0x8cf8>
   19c64:	ldr	r0, [fp, #-16]
   19c68:	cmp	r0, #0
   19c6c:	bne	19c74 <__assert_fail@plt+0x8c5c>
   19c70:	b	19d10 <__assert_fail@plt+0x8cf8>
   19c74:	ldr	r0, [fp, #-12]
   19c78:	cmp	r0, #0
   19c7c:	bcs	19ce0 <__assert_fail@plt+0x8cc8>
   19c80:	ldr	r0, [fp, #-12]
   19c84:	cmn	r0, #1
   19c88:	bne	19cc4 <__assert_fail@plt+0x8cac>
   19c8c:	b	19cac <__assert_fail@plt+0x8c94>
   19c90:	ldr	r0, [pc, #3700]	; 1ab0c <__assert_fail@plt+0x9af4>
   19c94:	ldr	r1, [fp, #-16]
   19c98:	add	r0, r1, r0
   19c9c:	movw	r1, #0
   19ca0:	cmp	r1, r0
   19ca4:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19ca8:	b	19d10 <__assert_fail@plt+0x8cf8>
   19cac:	ldr	r0, [fp, #-16]
   19cb0:	sub	r0, r0, #1
   19cb4:	movw	r1, #32767	; 0x7fff
   19cb8:	cmp	r1, r0
   19cbc:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19cc0:	b	19d10 <__assert_fail@plt+0x8cf8>
   19cc4:	ldr	r0, [pc, #3648]	; 1ab0c <__assert_fail@plt+0x9af4>
   19cc8:	ldr	r1, [fp, #-12]
   19ccc:	udiv	r0, r0, r1
   19cd0:	ldr	r1, [fp, #-16]
   19cd4:	cmp	r0, r1
   19cd8:	bcc	19cf8 <__assert_fail@plt+0x8ce0>
   19cdc:	b	19d10 <__assert_fail@plt+0x8cf8>
   19ce0:	ldr	r0, [fp, #-16]
   19ce4:	movw	r1, #32767	; 0x7fff
   19ce8:	udiv	r0, r1, r0
   19cec:	ldr	r1, [fp, #-12]
   19cf0:	cmp	r0, r1
   19cf4:	bcs	19d10 <__assert_fail@plt+0x8cf8>
   19cf8:	ldr	r0, [fp, #-12]
   19cfc:	ldr	r1, [fp, #-16]
   19d00:	mul	r0, r0, r1
   19d04:	sxth	r0, r0
   19d08:	str	r0, [fp, #-20]	; 0xffffffec
   19d0c:	b	1aad0 <__assert_fail@plt+0x9ab8>
   19d10:	ldr	r0, [fp, #-12]
   19d14:	ldr	r1, [fp, #-16]
   19d18:	mul	r0, r0, r1
   19d1c:	sxth	r0, r0
   19d20:	str	r0, [fp, #-20]	; 0xffffffec
   19d24:	b	1aae8 <__assert_fail@plt+0x9ad0>
   19d28:	ldr	r0, [fp, #-16]
   19d2c:	cmp	r0, #0
   19d30:	bcs	19e3c <__assert_fail@plt+0x8e24>
   19d34:	ldr	r0, [fp, #-12]
   19d38:	cmp	r0, #0
   19d3c:	bcs	19dc4 <__assert_fail@plt+0x8dac>
   19d40:	b	19d60 <__assert_fail@plt+0x8d48>
   19d44:	ldr	r0, [fp, #-12]
   19d48:	ldr	r1, [fp, #-16]
   19d4c:	movw	r2, #65535	; 0xffff
   19d50:	udiv	r1, r2, r1
   19d54:	cmp	r0, r1
   19d58:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19d5c:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19d60:	b	19d74 <__assert_fail@plt+0x8d5c>
   19d64:	ldr	r0, [fp, #-16]
   19d68:	cmp	r0, #1
   19d6c:	bcc	19d84 <__assert_fail@plt+0x8d6c>
   19d70:	b	19d90 <__assert_fail@plt+0x8d78>
   19d74:	ldr	r0, [fp, #-16]
   19d78:	movw	r1, #0
   19d7c:	cmp	r1, r0
   19d80:	bcs	19d90 <__assert_fail@plt+0x8d78>
   19d84:	movw	r0, #0
   19d88:	str	r0, [fp, #-36]	; 0xffffffdc
   19d8c:	b	19da8 <__assert_fail@plt+0x8d90>
   19d90:	ldr	r0, [fp, #-16]
   19d94:	movw	r1, #0
   19d98:	sub	r0, r1, r0
   19d9c:	movw	r1, #65535	; 0xffff
   19da0:	udiv	r0, r1, r0
   19da4:	str	r0, [fp, #-36]	; 0xffffffdc
   19da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19dac:	ldr	r1, [fp, #-12]
   19db0:	mvn	r2, #0
   19db4:	sub	r1, r2, r1
   19db8:	cmp	r0, r1
   19dbc:	bls	19ed8 <__assert_fail@plt+0x8ec0>
   19dc0:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19dc4:	b	19dcc <__assert_fail@plt+0x8db4>
   19dc8:	b	19dd0 <__assert_fail@plt+0x8db8>
   19dcc:	b	19e20 <__assert_fail@plt+0x8e08>
   19dd0:	ldr	r0, [fp, #-16]
   19dd4:	cmn	r0, #1
   19dd8:	bne	19e20 <__assert_fail@plt+0x8e08>
   19ddc:	b	19df8 <__assert_fail@plt+0x8de0>
   19de0:	ldr	r0, [fp, #-12]
   19de4:	add	r0, r0, #0
   19de8:	movw	r1, #0
   19dec:	cmp	r1, r0
   19df0:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19df4:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19df8:	ldr	r0, [fp, #-12]
   19dfc:	movw	r1, #0
   19e00:	cmp	r1, r0
   19e04:	bcs	19ef0 <__assert_fail@plt+0x8ed8>
   19e08:	ldr	r0, [fp, #-12]
   19e0c:	sub	r0, r0, #1
   19e10:	mvn	r1, #0
   19e14:	cmp	r1, r0
   19e18:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19e1c:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19e20:	ldr	r0, [fp, #-16]
   19e24:	movw	r1, #0
   19e28:	udiv	r0, r1, r0
   19e2c:	ldr	r1, [fp, #-12]
   19e30:	cmp	r0, r1
   19e34:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19e38:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19e3c:	ldr	r0, [fp, #-16]
   19e40:	cmp	r0, #0
   19e44:	bne	19e4c <__assert_fail@plt+0x8e34>
   19e48:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19e4c:	ldr	r0, [fp, #-12]
   19e50:	cmp	r0, #0
   19e54:	bcs	19ec0 <__assert_fail@plt+0x8ea8>
   19e58:	b	19e60 <__assert_fail@plt+0x8e48>
   19e5c:	b	19e64 <__assert_fail@plt+0x8e4c>
   19e60:	b	19ea4 <__assert_fail@plt+0x8e8c>
   19e64:	ldr	r0, [fp, #-12]
   19e68:	cmn	r0, #1
   19e6c:	bne	19ea4 <__assert_fail@plt+0x8e8c>
   19e70:	b	19e8c <__assert_fail@plt+0x8e74>
   19e74:	ldr	r0, [fp, #-16]
   19e78:	add	r0, r0, #0
   19e7c:	movw	r1, #0
   19e80:	cmp	r1, r0
   19e84:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19e88:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19e8c:	ldr	r0, [fp, #-16]
   19e90:	sub	r0, r0, #1
   19e94:	mvn	r1, #0
   19e98:	cmp	r1, r0
   19e9c:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19ea0:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19ea4:	ldr	r0, [fp, #-12]
   19ea8:	movw	r1, #0
   19eac:	udiv	r0, r1, r0
   19eb0:	ldr	r1, [fp, #-16]
   19eb4:	cmp	r0, r1
   19eb8:	bcc	19ed8 <__assert_fail@plt+0x8ec0>
   19ebc:	b	19ef0 <__assert_fail@plt+0x8ed8>
   19ec0:	ldr	r0, [fp, #-16]
   19ec4:	movw	r1, #65535	; 0xffff
   19ec8:	udiv	r0, r1, r0
   19ecc:	ldr	r1, [fp, #-12]
   19ed0:	cmp	r0, r1
   19ed4:	bcs	19ef0 <__assert_fail@plt+0x8ed8>
   19ed8:	ldr	r0, [fp, #-12]
   19edc:	ldr	r1, [fp, #-16]
   19ee0:	mul	r0, r0, r1
   19ee4:	uxth	r0, r0
   19ee8:	str	r0, [fp, #-20]	; 0xffffffec
   19eec:	b	1aad0 <__assert_fail@plt+0x9ab8>
   19ef0:	ldr	r0, [fp, #-12]
   19ef4:	ldr	r1, [fp, #-16]
   19ef8:	mul	r0, r0, r1
   19efc:	uxth	r0, r0
   19f00:	str	r0, [fp, #-20]	; 0xffffffec
   19f04:	b	1aae8 <__assert_fail@plt+0x9ad0>
   19f08:	b	19f0c <__assert_fail@plt+0x8ef4>
   19f0c:	b	1a0d0 <__assert_fail@plt+0x90b8>
   19f10:	ldr	r0, [fp, #-16]
   19f14:	cmp	r0, #0
   19f18:	bcs	1a018 <__assert_fail@plt+0x9000>
   19f1c:	ldr	r0, [fp, #-12]
   19f20:	cmp	r0, #0
   19f24:	bcs	19fac <__assert_fail@plt+0x8f94>
   19f28:	b	19f48 <__assert_fail@plt+0x8f30>
   19f2c:	ldr	r0, [pc, #3024]	; 1ab04 <__assert_fail@plt+0x9aec>
   19f30:	ldr	r1, [fp, #-12]
   19f34:	ldr	r2, [fp, #-16]
   19f38:	udiv	r0, r0, r2
   19f3c:	cmp	r1, r0
   19f40:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   19f44:	b	1a0bc <__assert_fail@plt+0x90a4>
   19f48:	b	19f5c <__assert_fail@plt+0x8f44>
   19f4c:	ldr	r0, [fp, #-16]
   19f50:	cmp	r0, #1
   19f54:	bcc	19f6c <__assert_fail@plt+0x8f54>
   19f58:	b	19f78 <__assert_fail@plt+0x8f60>
   19f5c:	ldr	r0, [fp, #-16]
   19f60:	movw	r1, #0
   19f64:	cmp	r1, r0
   19f68:	bcs	19f78 <__assert_fail@plt+0x8f60>
   19f6c:	movw	r0, #0
   19f70:	str	r0, [fp, #-40]	; 0xffffffd8
   19f74:	b	19f90 <__assert_fail@plt+0x8f78>
   19f78:	ldr	r0, [pc, #2948]	; 1ab04 <__assert_fail@plt+0x9aec>
   19f7c:	ldr	r1, [fp, #-16]
   19f80:	movw	r2, #0
   19f84:	sub	r1, r2, r1
   19f88:	udiv	r0, r0, r1
   19f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   19f90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f94:	ldr	r1, [fp, #-12]
   19f98:	mvn	r2, #0
   19f9c:	sub	r1, r2, r1
   19fa0:	cmp	r0, r1
   19fa4:	bls	1a0a8 <__assert_fail@plt+0x9090>
   19fa8:	b	1a0bc <__assert_fail@plt+0x90a4>
   19fac:	ldr	r0, [fp, #-16]
   19fb0:	cmn	r0, #1
   19fb4:	bne	19ffc <__assert_fail@plt+0x8fe4>
   19fb8:	b	19fd4 <__assert_fail@plt+0x8fbc>
   19fbc:	ldr	r0, [fp, #-12]
   19fc0:	add	r0, r0, #-2147483648	; 0x80000000
   19fc4:	movw	r1, #0
   19fc8:	cmp	r1, r0
   19fcc:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   19fd0:	b	1a0bc <__assert_fail@plt+0x90a4>
   19fd4:	ldr	r0, [fp, #-12]
   19fd8:	movw	r1, #0
   19fdc:	cmp	r1, r0
   19fe0:	bcs	1a0bc <__assert_fail@plt+0x90a4>
   19fe4:	ldr	r0, [pc, #2840]	; 1ab04 <__assert_fail@plt+0x9aec>
   19fe8:	ldr	r1, [fp, #-12]
   19fec:	sub	r1, r1, #1
   19ff0:	cmp	r0, r1
   19ff4:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   19ff8:	b	1a0bc <__assert_fail@plt+0x90a4>
   19ffc:	ldr	r0, [pc, #2820]	; 1ab08 <__assert_fail@plt+0x9af0>
   1a000:	ldr	r1, [fp, #-16]
   1a004:	udiv	r0, r0, r1
   1a008:	ldr	r1, [fp, #-12]
   1a00c:	cmp	r0, r1
   1a010:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   1a014:	b	1a0bc <__assert_fail@plt+0x90a4>
   1a018:	ldr	r0, [fp, #-16]
   1a01c:	cmp	r0, #0
   1a020:	bne	1a028 <__assert_fail@plt+0x9010>
   1a024:	b	1a0bc <__assert_fail@plt+0x90a4>
   1a028:	ldr	r0, [fp, #-12]
   1a02c:	cmp	r0, #0
   1a030:	bcs	1a090 <__assert_fail@plt+0x9078>
   1a034:	ldr	r0, [fp, #-12]
   1a038:	cmn	r0, #1
   1a03c:	bne	1a074 <__assert_fail@plt+0x905c>
   1a040:	b	1a05c <__assert_fail@plt+0x9044>
   1a044:	ldr	r0, [fp, #-16]
   1a048:	add	r0, r0, #-2147483648	; 0x80000000
   1a04c:	movw	r1, #0
   1a050:	cmp	r1, r0
   1a054:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   1a058:	b	1a0bc <__assert_fail@plt+0x90a4>
   1a05c:	ldr	r0, [pc, #2720]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a060:	ldr	r1, [fp, #-16]
   1a064:	sub	r1, r1, #1
   1a068:	cmp	r0, r1
   1a06c:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   1a070:	b	1a0bc <__assert_fail@plt+0x90a4>
   1a074:	ldr	r0, [pc, #2700]	; 1ab08 <__assert_fail@plt+0x9af0>
   1a078:	ldr	r1, [fp, #-12]
   1a07c:	udiv	r0, r0, r1
   1a080:	ldr	r1, [fp, #-16]
   1a084:	cmp	r0, r1
   1a088:	bcc	1a0a8 <__assert_fail@plt+0x9090>
   1a08c:	b	1a0bc <__assert_fail@plt+0x90a4>
   1a090:	ldr	r0, [pc, #2668]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a094:	ldr	r1, [fp, #-16]
   1a098:	udiv	r0, r0, r1
   1a09c:	ldr	r1, [fp, #-12]
   1a0a0:	cmp	r0, r1
   1a0a4:	bcs	1a0bc <__assert_fail@plt+0x90a4>
   1a0a8:	ldr	r0, [fp, #-12]
   1a0ac:	ldr	r1, [fp, #-16]
   1a0b0:	mul	r0, r0, r1
   1a0b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a0b8:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1a0bc:	ldr	r0, [fp, #-12]
   1a0c0:	ldr	r1, [fp, #-16]
   1a0c4:	mul	r0, r0, r1
   1a0c8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0cc:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1a0d0:	ldr	r0, [fp, #-16]
   1a0d4:	cmp	r0, #0
   1a0d8:	bcs	1a1e4 <__assert_fail@plt+0x91cc>
   1a0dc:	ldr	r0, [fp, #-12]
   1a0e0:	cmp	r0, #0
   1a0e4:	bcs	1a16c <__assert_fail@plt+0x9154>
   1a0e8:	b	1a108 <__assert_fail@plt+0x90f0>
   1a0ec:	ldr	r0, [fp, #-12]
   1a0f0:	ldr	r1, [fp, #-16]
   1a0f4:	mvn	r2, #0
   1a0f8:	udiv	r1, r2, r1
   1a0fc:	cmp	r0, r1
   1a100:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a104:	b	1a294 <__assert_fail@plt+0x927c>
   1a108:	b	1a11c <__assert_fail@plt+0x9104>
   1a10c:	ldr	r0, [fp, #-16]
   1a110:	cmp	r0, #1
   1a114:	bcc	1a12c <__assert_fail@plt+0x9114>
   1a118:	b	1a138 <__assert_fail@plt+0x9120>
   1a11c:	ldr	r0, [fp, #-16]
   1a120:	movw	r1, #0
   1a124:	cmp	r1, r0
   1a128:	bcs	1a138 <__assert_fail@plt+0x9120>
   1a12c:	movw	r0, #1
   1a130:	str	r0, [fp, #-44]	; 0xffffffd4
   1a134:	b	1a150 <__assert_fail@plt+0x9138>
   1a138:	ldr	r0, [fp, #-16]
   1a13c:	movw	r1, #0
   1a140:	sub	r0, r1, r0
   1a144:	mvn	r1, #0
   1a148:	udiv	r0, r1, r0
   1a14c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a154:	ldr	r1, [fp, #-12]
   1a158:	mvn	r2, #0
   1a15c:	sub	r1, r2, r1
   1a160:	cmp	r0, r1
   1a164:	bls	1a280 <__assert_fail@plt+0x9268>
   1a168:	b	1a294 <__assert_fail@plt+0x927c>
   1a16c:	b	1a174 <__assert_fail@plt+0x915c>
   1a170:	b	1a178 <__assert_fail@plt+0x9160>
   1a174:	b	1a1c8 <__assert_fail@plt+0x91b0>
   1a178:	ldr	r0, [fp, #-16]
   1a17c:	cmn	r0, #1
   1a180:	bne	1a1c8 <__assert_fail@plt+0x91b0>
   1a184:	b	1a1a0 <__assert_fail@plt+0x9188>
   1a188:	ldr	r0, [fp, #-12]
   1a18c:	add	r0, r0, #0
   1a190:	movw	r1, #0
   1a194:	cmp	r1, r0
   1a198:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a19c:	b	1a294 <__assert_fail@plt+0x927c>
   1a1a0:	ldr	r0, [fp, #-12]
   1a1a4:	movw	r1, #0
   1a1a8:	cmp	r1, r0
   1a1ac:	bcs	1a294 <__assert_fail@plt+0x927c>
   1a1b0:	ldr	r0, [fp, #-12]
   1a1b4:	sub	r0, r0, #1
   1a1b8:	mvn	r1, #0
   1a1bc:	cmp	r1, r0
   1a1c0:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a1c4:	b	1a294 <__assert_fail@plt+0x927c>
   1a1c8:	ldr	r0, [fp, #-16]
   1a1cc:	movw	r1, #0
   1a1d0:	udiv	r0, r1, r0
   1a1d4:	ldr	r1, [fp, #-12]
   1a1d8:	cmp	r0, r1
   1a1dc:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a1e0:	b	1a294 <__assert_fail@plt+0x927c>
   1a1e4:	ldr	r0, [fp, #-16]
   1a1e8:	cmp	r0, #0
   1a1ec:	bne	1a1f4 <__assert_fail@plt+0x91dc>
   1a1f0:	b	1a294 <__assert_fail@plt+0x927c>
   1a1f4:	ldr	r0, [fp, #-12]
   1a1f8:	cmp	r0, #0
   1a1fc:	bcs	1a268 <__assert_fail@plt+0x9250>
   1a200:	b	1a208 <__assert_fail@plt+0x91f0>
   1a204:	b	1a20c <__assert_fail@plt+0x91f4>
   1a208:	b	1a24c <__assert_fail@plt+0x9234>
   1a20c:	ldr	r0, [fp, #-12]
   1a210:	cmn	r0, #1
   1a214:	bne	1a24c <__assert_fail@plt+0x9234>
   1a218:	b	1a234 <__assert_fail@plt+0x921c>
   1a21c:	ldr	r0, [fp, #-16]
   1a220:	add	r0, r0, #0
   1a224:	movw	r1, #0
   1a228:	cmp	r1, r0
   1a22c:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a230:	b	1a294 <__assert_fail@plt+0x927c>
   1a234:	ldr	r0, [fp, #-16]
   1a238:	sub	r0, r0, #1
   1a23c:	mvn	r1, #0
   1a240:	cmp	r1, r0
   1a244:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a248:	b	1a294 <__assert_fail@plt+0x927c>
   1a24c:	ldr	r0, [fp, #-12]
   1a250:	movw	r1, #0
   1a254:	udiv	r0, r1, r0
   1a258:	ldr	r1, [fp, #-16]
   1a25c:	cmp	r0, r1
   1a260:	bcc	1a280 <__assert_fail@plt+0x9268>
   1a264:	b	1a294 <__assert_fail@plt+0x927c>
   1a268:	ldr	r0, [fp, #-16]
   1a26c:	mvn	r1, #0
   1a270:	udiv	r0, r1, r0
   1a274:	ldr	r1, [fp, #-12]
   1a278:	cmp	r0, r1
   1a27c:	bcs	1a294 <__assert_fail@plt+0x927c>
   1a280:	ldr	r0, [fp, #-12]
   1a284:	ldr	r1, [fp, #-16]
   1a288:	mul	r0, r0, r1
   1a28c:	str	r0, [fp, #-20]	; 0xffffffec
   1a290:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1a294:	ldr	r0, [fp, #-12]
   1a298:	ldr	r1, [fp, #-16]
   1a29c:	mul	r0, r0, r1
   1a2a0:	str	r0, [fp, #-20]	; 0xffffffec
   1a2a4:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1a2a8:	b	1a2ac <__assert_fail@plt+0x9294>
   1a2ac:	b	1a470 <__assert_fail@plt+0x9458>
   1a2b0:	ldr	r0, [fp, #-16]
   1a2b4:	cmp	r0, #0
   1a2b8:	bcs	1a3b8 <__assert_fail@plt+0x93a0>
   1a2bc:	ldr	r0, [fp, #-12]
   1a2c0:	cmp	r0, #0
   1a2c4:	bcs	1a34c <__assert_fail@plt+0x9334>
   1a2c8:	b	1a2e8 <__assert_fail@plt+0x92d0>
   1a2cc:	ldr	r0, [pc, #2096]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a2d0:	ldr	r1, [fp, #-12]
   1a2d4:	ldr	r2, [fp, #-16]
   1a2d8:	udiv	r0, r0, r2
   1a2dc:	cmp	r1, r0
   1a2e0:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a2e4:	b	1a45c <__assert_fail@plt+0x9444>
   1a2e8:	b	1a2fc <__assert_fail@plt+0x92e4>
   1a2ec:	ldr	r0, [fp, #-16]
   1a2f0:	cmp	r0, #1
   1a2f4:	bcc	1a30c <__assert_fail@plt+0x92f4>
   1a2f8:	b	1a318 <__assert_fail@plt+0x9300>
   1a2fc:	ldr	r0, [fp, #-16]
   1a300:	movw	r1, #0
   1a304:	cmp	r1, r0
   1a308:	bcs	1a318 <__assert_fail@plt+0x9300>
   1a30c:	movw	r0, #0
   1a310:	str	r0, [fp, #-48]	; 0xffffffd0
   1a314:	b	1a330 <__assert_fail@plt+0x9318>
   1a318:	ldr	r0, [pc, #2020]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a31c:	ldr	r1, [fp, #-16]
   1a320:	movw	r2, #0
   1a324:	sub	r1, r2, r1
   1a328:	udiv	r0, r0, r1
   1a32c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a330:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a334:	ldr	r1, [fp, #-12]
   1a338:	mvn	r2, #0
   1a33c:	sub	r1, r2, r1
   1a340:	cmp	r0, r1
   1a344:	bls	1a448 <__assert_fail@plt+0x9430>
   1a348:	b	1a45c <__assert_fail@plt+0x9444>
   1a34c:	ldr	r0, [fp, #-16]
   1a350:	cmn	r0, #1
   1a354:	bne	1a39c <__assert_fail@plt+0x9384>
   1a358:	b	1a374 <__assert_fail@plt+0x935c>
   1a35c:	ldr	r0, [fp, #-12]
   1a360:	add	r0, r0, #-2147483648	; 0x80000000
   1a364:	movw	r1, #0
   1a368:	cmp	r1, r0
   1a36c:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a370:	b	1a45c <__assert_fail@plt+0x9444>
   1a374:	ldr	r0, [fp, #-12]
   1a378:	movw	r1, #0
   1a37c:	cmp	r1, r0
   1a380:	bcs	1a45c <__assert_fail@plt+0x9444>
   1a384:	ldr	r0, [pc, #1912]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a388:	ldr	r1, [fp, #-12]
   1a38c:	sub	r1, r1, #1
   1a390:	cmp	r0, r1
   1a394:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a398:	b	1a45c <__assert_fail@plt+0x9444>
   1a39c:	ldr	r0, [pc, #1892]	; 1ab08 <__assert_fail@plt+0x9af0>
   1a3a0:	ldr	r1, [fp, #-16]
   1a3a4:	udiv	r0, r0, r1
   1a3a8:	ldr	r1, [fp, #-12]
   1a3ac:	cmp	r0, r1
   1a3b0:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a3b4:	b	1a45c <__assert_fail@plt+0x9444>
   1a3b8:	ldr	r0, [fp, #-16]
   1a3bc:	cmp	r0, #0
   1a3c0:	bne	1a3c8 <__assert_fail@plt+0x93b0>
   1a3c4:	b	1a45c <__assert_fail@plt+0x9444>
   1a3c8:	ldr	r0, [fp, #-12]
   1a3cc:	cmp	r0, #0
   1a3d0:	bcs	1a430 <__assert_fail@plt+0x9418>
   1a3d4:	ldr	r0, [fp, #-12]
   1a3d8:	cmn	r0, #1
   1a3dc:	bne	1a414 <__assert_fail@plt+0x93fc>
   1a3e0:	b	1a3fc <__assert_fail@plt+0x93e4>
   1a3e4:	ldr	r0, [fp, #-16]
   1a3e8:	add	r0, r0, #-2147483648	; 0x80000000
   1a3ec:	movw	r1, #0
   1a3f0:	cmp	r1, r0
   1a3f4:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a3f8:	b	1a45c <__assert_fail@plt+0x9444>
   1a3fc:	ldr	r0, [pc, #1792]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a400:	ldr	r1, [fp, #-16]
   1a404:	sub	r1, r1, #1
   1a408:	cmp	r0, r1
   1a40c:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a410:	b	1a45c <__assert_fail@plt+0x9444>
   1a414:	ldr	r0, [pc, #1772]	; 1ab08 <__assert_fail@plt+0x9af0>
   1a418:	ldr	r1, [fp, #-12]
   1a41c:	udiv	r0, r0, r1
   1a420:	ldr	r1, [fp, #-16]
   1a424:	cmp	r0, r1
   1a428:	bcc	1a448 <__assert_fail@plt+0x9430>
   1a42c:	b	1a45c <__assert_fail@plt+0x9444>
   1a430:	ldr	r0, [pc, #1740]	; 1ab04 <__assert_fail@plt+0x9aec>
   1a434:	ldr	r1, [fp, #-16]
   1a438:	udiv	r0, r0, r1
   1a43c:	ldr	r1, [fp, #-12]
   1a440:	cmp	r0, r1
   1a444:	bcs	1a45c <__assert_fail@plt+0x9444>
   1a448:	ldr	r0, [fp, #-12]
   1a44c:	ldr	r1, [fp, #-16]
   1a450:	mul	r0, r0, r1
   1a454:	str	r0, [fp, #-20]	; 0xffffffec
   1a458:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1a45c:	ldr	r0, [fp, #-12]
   1a460:	ldr	r1, [fp, #-16]
   1a464:	mul	r0, r0, r1
   1a468:	str	r0, [fp, #-20]	; 0xffffffec
   1a46c:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1a470:	ldr	r0, [fp, #-16]
   1a474:	cmp	r0, #0
   1a478:	bcs	1a584 <__assert_fail@plt+0x956c>
   1a47c:	ldr	r0, [fp, #-12]
   1a480:	cmp	r0, #0
   1a484:	bcs	1a50c <__assert_fail@plt+0x94f4>
   1a488:	b	1a4a8 <__assert_fail@plt+0x9490>
   1a48c:	ldr	r0, [fp, #-12]
   1a490:	ldr	r1, [fp, #-16]
   1a494:	mvn	r2, #0
   1a498:	udiv	r1, r2, r1
   1a49c:	cmp	r0, r1
   1a4a0:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a4a4:	b	1a634 <__assert_fail@plt+0x961c>
   1a4a8:	b	1a4bc <__assert_fail@plt+0x94a4>
   1a4ac:	ldr	r0, [fp, #-16]
   1a4b0:	cmp	r0, #1
   1a4b4:	bcc	1a4cc <__assert_fail@plt+0x94b4>
   1a4b8:	b	1a4d8 <__assert_fail@plt+0x94c0>
   1a4bc:	ldr	r0, [fp, #-16]
   1a4c0:	movw	r1, #0
   1a4c4:	cmp	r1, r0
   1a4c8:	bcs	1a4d8 <__assert_fail@plt+0x94c0>
   1a4cc:	movw	r0, #1
   1a4d0:	str	r0, [fp, #-52]	; 0xffffffcc
   1a4d4:	b	1a4f0 <__assert_fail@plt+0x94d8>
   1a4d8:	ldr	r0, [fp, #-16]
   1a4dc:	movw	r1, #0
   1a4e0:	sub	r0, r1, r0
   1a4e4:	mvn	r1, #0
   1a4e8:	udiv	r0, r1, r0
   1a4ec:	str	r0, [fp, #-52]	; 0xffffffcc
   1a4f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a4f4:	ldr	r1, [fp, #-12]
   1a4f8:	mvn	r2, #0
   1a4fc:	sub	r1, r2, r1
   1a500:	cmp	r0, r1
   1a504:	bls	1a620 <__assert_fail@plt+0x9608>
   1a508:	b	1a634 <__assert_fail@plt+0x961c>
   1a50c:	b	1a514 <__assert_fail@plt+0x94fc>
   1a510:	b	1a518 <__assert_fail@plt+0x9500>
   1a514:	b	1a568 <__assert_fail@plt+0x9550>
   1a518:	ldr	r0, [fp, #-16]
   1a51c:	cmn	r0, #1
   1a520:	bne	1a568 <__assert_fail@plt+0x9550>
   1a524:	b	1a540 <__assert_fail@plt+0x9528>
   1a528:	ldr	r0, [fp, #-12]
   1a52c:	add	r0, r0, #0
   1a530:	movw	r1, #0
   1a534:	cmp	r1, r0
   1a538:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a53c:	b	1a634 <__assert_fail@plt+0x961c>
   1a540:	ldr	r0, [fp, #-12]
   1a544:	movw	r1, #0
   1a548:	cmp	r1, r0
   1a54c:	bcs	1a634 <__assert_fail@plt+0x961c>
   1a550:	ldr	r0, [fp, #-12]
   1a554:	sub	r0, r0, #1
   1a558:	mvn	r1, #0
   1a55c:	cmp	r1, r0
   1a560:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a564:	b	1a634 <__assert_fail@plt+0x961c>
   1a568:	ldr	r0, [fp, #-16]
   1a56c:	movw	r1, #0
   1a570:	udiv	r0, r1, r0
   1a574:	ldr	r1, [fp, #-12]
   1a578:	cmp	r0, r1
   1a57c:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a580:	b	1a634 <__assert_fail@plt+0x961c>
   1a584:	ldr	r0, [fp, #-16]
   1a588:	cmp	r0, #0
   1a58c:	bne	1a594 <__assert_fail@plt+0x957c>
   1a590:	b	1a634 <__assert_fail@plt+0x961c>
   1a594:	ldr	r0, [fp, #-12]
   1a598:	cmp	r0, #0
   1a59c:	bcs	1a608 <__assert_fail@plt+0x95f0>
   1a5a0:	b	1a5a8 <__assert_fail@plt+0x9590>
   1a5a4:	b	1a5ac <__assert_fail@plt+0x9594>
   1a5a8:	b	1a5ec <__assert_fail@plt+0x95d4>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	cmn	r0, #1
   1a5b4:	bne	1a5ec <__assert_fail@plt+0x95d4>
   1a5b8:	b	1a5d4 <__assert_fail@plt+0x95bc>
   1a5bc:	ldr	r0, [fp, #-16]
   1a5c0:	add	r0, r0, #0
   1a5c4:	movw	r1, #0
   1a5c8:	cmp	r1, r0
   1a5cc:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a5d0:	b	1a634 <__assert_fail@plt+0x961c>
   1a5d4:	ldr	r0, [fp, #-16]
   1a5d8:	sub	r0, r0, #1
   1a5dc:	mvn	r1, #0
   1a5e0:	cmp	r1, r0
   1a5e4:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a5e8:	b	1a634 <__assert_fail@plt+0x961c>
   1a5ec:	ldr	r0, [fp, #-12]
   1a5f0:	movw	r1, #0
   1a5f4:	udiv	r0, r1, r0
   1a5f8:	ldr	r1, [fp, #-16]
   1a5fc:	cmp	r0, r1
   1a600:	bcc	1a620 <__assert_fail@plt+0x9608>
   1a604:	b	1a634 <__assert_fail@plt+0x961c>
   1a608:	ldr	r0, [fp, #-16]
   1a60c:	mvn	r1, #0
   1a610:	udiv	r0, r1, r0
   1a614:	ldr	r1, [fp, #-12]
   1a618:	cmp	r0, r1
   1a61c:	bcs	1a634 <__assert_fail@plt+0x961c>
   1a620:	ldr	r0, [fp, #-12]
   1a624:	ldr	r1, [fp, #-16]
   1a628:	mul	r0, r0, r1
   1a62c:	str	r0, [fp, #-20]	; 0xffffffec
   1a630:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1a634:	ldr	r0, [fp, #-12]
   1a638:	ldr	r1, [fp, #-16]
   1a63c:	mul	r0, r0, r1
   1a640:	str	r0, [fp, #-20]	; 0xffffffec
   1a644:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1a648:	b	1a89c <__assert_fail@plt+0x9884>
   1a64c:	ldr	r0, [fp, #-16]
   1a650:	cmp	r0, #0
   1a654:	bcs	1a7b4 <__assert_fail@plt+0x979c>
   1a658:	ldr	r0, [fp, #-12]
   1a65c:	cmp	r0, #0
   1a660:	bcs	1a730 <__assert_fail@plt+0x9718>
   1a664:	b	1a668 <__assert_fail@plt+0x9650>
   1a668:	ldr	r0, [fp, #-12]
   1a66c:	ldr	r2, [fp, #-16]
   1a670:	mvn	r1, #0
   1a674:	mvn	r3, #-2147483648	; 0x80000000
   1a678:	mov	ip, #0
   1a67c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a680:	mov	r0, r1
   1a684:	mov	r1, r3
   1a688:	mov	r3, ip
   1a68c:	bl	1b41c <__assert_fail@plt+0xa404>
   1a690:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a694:	subs	r0, r2, r0
   1a698:	rscs	r1, r1, #0
   1a69c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a6a0:	str	r1, [fp, #-64]	; 0xffffffc0
   1a6a4:	blt	1a874 <__assert_fail@plt+0x985c>
   1a6a8:	b	1a888 <__assert_fail@plt+0x9870>
   1a6ac:	b	1a6c0 <__assert_fail@plt+0x96a8>
   1a6b0:	ldr	r0, [fp, #-16]
   1a6b4:	cmp	r0, #1
   1a6b8:	bcc	1a6d0 <__assert_fail@plt+0x96b8>
   1a6bc:	b	1a6e4 <__assert_fail@plt+0x96cc>
   1a6c0:	ldr	r0, [fp, #-16]
   1a6c4:	movw	r1, #0
   1a6c8:	cmp	r1, r0
   1a6cc:	bcs	1a6e4 <__assert_fail@plt+0x96cc>
   1a6d0:	mov	r0, #0
   1a6d4:	mvn	r1, #0
   1a6d8:	str	r1, [fp, #-68]	; 0xffffffbc
   1a6dc:	str	r0, [fp, #-72]	; 0xffffffb8
   1a6e0:	b	1a708 <__assert_fail@plt+0x96f0>
   1a6e4:	ldr	r0, [fp, #-16]
   1a6e8:	rsb	r2, r0, #0
   1a6ec:	mvn	r0, #0
   1a6f0:	mvn	r1, #-2147483648	; 0x80000000
   1a6f4:	mov	r3, #0
   1a6f8:	bl	1b41c <__assert_fail@plt+0xa404>
   1a6fc:	str	r0, [fp, #-68]	; 0xffffffbc
   1a700:	str	r1, [fp, #-72]	; 0xffffffb8
   1a704:	b	1a708 <__assert_fail@plt+0x96f0>
   1a708:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a70c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a710:	ldr	r2, [fp, #-12]
   1a714:	mvn	r2, r2
   1a718:	subs	r1, r2, r1
   1a71c:	rscs	r0, r0, #0
   1a720:	str	r1, [fp, #-76]	; 0xffffffb4
   1a724:	str	r0, [fp, #-80]	; 0xffffffb0
   1a728:	bge	1a874 <__assert_fail@plt+0x985c>
   1a72c:	b	1a888 <__assert_fail@plt+0x9870>
   1a730:	ldr	r0, [fp, #-16]
   1a734:	cmn	r0, #1
   1a738:	bne	1a780 <__assert_fail@plt+0x9768>
   1a73c:	b	1a760 <__assert_fail@plt+0x9748>
   1a740:	ldr	r0, [fp, #-12]
   1a744:	rsbs	r0, r0, #0
   1a748:	mov	r1, #0
   1a74c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a750:	str	r0, [fp, #-84]	; 0xffffffac
   1a754:	str	r1, [sp, #88]	; 0x58
   1a758:	blt	1a874 <__assert_fail@plt+0x985c>
   1a75c:	b	1a888 <__assert_fail@plt+0x9870>
   1a760:	ldr	r0, [fp, #-12]
   1a764:	movw	r1, #0
   1a768:	cmp	r1, r0
   1a76c:	bcs	1a888 <__assert_fail@plt+0x9870>
   1a770:	mov	r0, #0
   1a774:	cmp	r0, #0
   1a778:	bne	1a874 <__assert_fail@plt+0x985c>
   1a77c:	b	1a888 <__assert_fail@plt+0x9870>
   1a780:	ldr	r2, [fp, #-16]
   1a784:	mov	r1, #-2147483648	; 0x80000000
   1a788:	mov	r0, #0
   1a78c:	str	r0, [sp, #84]	; 0x54
   1a790:	ldr	r3, [sp, #84]	; 0x54
   1a794:	bl	1b348 <__assert_fail@plt+0xa330>
   1a798:	ldr	r2, [fp, #-12]
   1a79c:	subs	r0, r0, r2
   1a7a0:	sbcs	r1, r1, #0
   1a7a4:	str	r0, [sp, #80]	; 0x50
   1a7a8:	str	r1, [sp, #76]	; 0x4c
   1a7ac:	blt	1a874 <__assert_fail@plt+0x985c>
   1a7b0:	b	1a888 <__assert_fail@plt+0x9870>
   1a7b4:	ldr	r0, [fp, #-16]
   1a7b8:	cmp	r0, #0
   1a7bc:	bne	1a7c4 <__assert_fail@plt+0x97ac>
   1a7c0:	b	1a888 <__assert_fail@plt+0x9870>
   1a7c4:	ldr	r0, [fp, #-12]
   1a7c8:	cmp	r0, #0
   1a7cc:	bcs	1a844 <__assert_fail@plt+0x982c>
   1a7d0:	ldr	r0, [fp, #-12]
   1a7d4:	cmn	r0, #1
   1a7d8:	bne	1a810 <__assert_fail@plt+0x97f8>
   1a7dc:	b	1a800 <__assert_fail@plt+0x97e8>
   1a7e0:	ldr	r0, [fp, #-16]
   1a7e4:	rsbs	r0, r0, #0
   1a7e8:	mov	r1, #0
   1a7ec:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a7f0:	str	r0, [sp, #72]	; 0x48
   1a7f4:	str	r1, [sp, #68]	; 0x44
   1a7f8:	blt	1a874 <__assert_fail@plt+0x985c>
   1a7fc:	b	1a888 <__assert_fail@plt+0x9870>
   1a800:	mov	r0, #0
   1a804:	cmp	r0, #0
   1a808:	bne	1a874 <__assert_fail@plt+0x985c>
   1a80c:	b	1a888 <__assert_fail@plt+0x9870>
   1a810:	ldr	r2, [fp, #-12]
   1a814:	mov	r1, #-2147483648	; 0x80000000
   1a818:	mov	r0, #0
   1a81c:	str	r0, [sp, #64]	; 0x40
   1a820:	ldr	r3, [sp, #64]	; 0x40
   1a824:	bl	1b348 <__assert_fail@plt+0xa330>
   1a828:	ldr	r2, [fp, #-16]
   1a82c:	subs	r0, r0, r2
   1a830:	sbcs	r1, r1, #0
   1a834:	str	r0, [sp, #60]	; 0x3c
   1a838:	str	r1, [sp, #56]	; 0x38
   1a83c:	blt	1a874 <__assert_fail@plt+0x985c>
   1a840:	b	1a888 <__assert_fail@plt+0x9870>
   1a844:	ldr	r2, [fp, #-16]
   1a848:	mvn	r0, #0
   1a84c:	mvn	r1, #-2147483648	; 0x80000000
   1a850:	mov	r3, #0
   1a854:	bl	1b41c <__assert_fail@plt+0xa404>
   1a858:	ldr	r2, [fp, #-12]
   1a85c:	subs	r0, r0, r2
   1a860:	sbcs	r1, r1, #0
   1a864:	str	r0, [sp, #52]	; 0x34
   1a868:	str	r1, [sp, #48]	; 0x30
   1a86c:	bge	1a888 <__assert_fail@plt+0x9870>
   1a870:	b	1a874 <__assert_fail@plt+0x985c>
   1a874:	ldr	r0, [fp, #-12]
   1a878:	ldr	r1, [fp, #-16]
   1a87c:	mul	r0, r0, r1
   1a880:	str	r0, [fp, #-20]	; 0xffffffec
   1a884:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1a888:	ldr	r0, [fp, #-12]
   1a88c:	ldr	r1, [fp, #-16]
   1a890:	mul	r0, r0, r1
   1a894:	str	r0, [fp, #-20]	; 0xffffffec
   1a898:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1a89c:	ldr	r0, [fp, #-16]
   1a8a0:	cmp	r0, #0
   1a8a4:	bcs	1a9f0 <__assert_fail@plt+0x99d8>
   1a8a8:	ldr	r0, [fp, #-12]
   1a8ac:	cmp	r0, #0
   1a8b0:	bcs	1a978 <__assert_fail@plt+0x9960>
   1a8b4:	b	1a8f0 <__assert_fail@plt+0x98d8>
   1a8b8:	ldr	r0, [fp, #-12]
   1a8bc:	ldr	r2, [fp, #-16]
   1a8c0:	mvn	r1, #0
   1a8c4:	mov	r3, #0
   1a8c8:	str	r0, [sp, #44]	; 0x2c
   1a8cc:	mov	r0, r1
   1a8d0:	bl	1b41c <__assert_fail@plt+0xa404>
   1a8d4:	ldr	r2, [sp, #44]	; 0x2c
   1a8d8:	subs	r0, r2, r0
   1a8dc:	rscs	r1, r1, #0
   1a8e0:	str	r0, [sp, #40]	; 0x28
   1a8e4:	str	r1, [sp, #36]	; 0x24
   1a8e8:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1a8ec:	b	1aabc <__assert_fail@plt+0x9aa4>
   1a8f0:	b	1a904 <__assert_fail@plt+0x98ec>
   1a8f4:	ldr	r0, [fp, #-16]
   1a8f8:	cmp	r0, #1
   1a8fc:	bcc	1a914 <__assert_fail@plt+0x98fc>
   1a900:	b	1a928 <__assert_fail@plt+0x9910>
   1a904:	ldr	r0, [fp, #-16]
   1a908:	movw	r1, #0
   1a90c:	cmp	r1, r0
   1a910:	bcs	1a928 <__assert_fail@plt+0x9910>
   1a914:	mov	r0, #1
   1a918:	mvn	r1, #0
   1a91c:	str	r1, [sp, #32]
   1a920:	str	r0, [sp, #28]
   1a924:	b	1a950 <__assert_fail@plt+0x9938>
   1a928:	ldr	r0, [fp, #-16]
   1a92c:	rsb	r2, r0, #0
   1a930:	mvn	r0, #0
   1a934:	mov	r3, #0
   1a938:	str	r0, [sp, #24]
   1a93c:	ldr	r1, [sp, #24]
   1a940:	bl	1b41c <__assert_fail@plt+0xa404>
   1a944:	str	r0, [sp, #32]
   1a948:	str	r1, [sp, #28]
   1a94c:	b	1a950 <__assert_fail@plt+0x9938>
   1a950:	ldr	r0, [sp, #28]
   1a954:	ldr	r1, [sp, #32]
   1a958:	ldr	r2, [fp, #-12]
   1a95c:	mvn	r2, r2
   1a960:	subs	r1, r2, r1
   1a964:	rscs	r0, r0, #0
   1a968:	str	r1, [sp, #20]
   1a96c:	str	r0, [sp, #16]
   1a970:	bcs	1aaa8 <__assert_fail@plt+0x9a90>
   1a974:	b	1aabc <__assert_fail@plt+0x9aa4>
   1a978:	b	1a980 <__assert_fail@plt+0x9968>
   1a97c:	b	1a984 <__assert_fail@plt+0x996c>
   1a980:	b	1a9d4 <__assert_fail@plt+0x99bc>
   1a984:	ldr	r0, [fp, #-16]
   1a988:	cmn	r0, #1
   1a98c:	bne	1a9d4 <__assert_fail@plt+0x99bc>
   1a990:	b	1a9ac <__assert_fail@plt+0x9994>
   1a994:	ldr	r0, [fp, #-12]
   1a998:	add	r0, r0, #0
   1a99c:	movw	r1, #0
   1a9a0:	cmp	r1, r0
   1a9a4:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1a9a8:	b	1aabc <__assert_fail@plt+0x9aa4>
   1a9ac:	ldr	r0, [fp, #-12]
   1a9b0:	movw	r1, #0
   1a9b4:	cmp	r1, r0
   1a9b8:	bcs	1aabc <__assert_fail@plt+0x9aa4>
   1a9bc:	ldr	r0, [fp, #-12]
   1a9c0:	sub	r0, r0, #1
   1a9c4:	mvn	r1, #0
   1a9c8:	cmp	r1, r0
   1a9cc:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1a9d0:	b	1aabc <__assert_fail@plt+0x9aa4>
   1a9d4:	ldr	r0, [fp, #-16]
   1a9d8:	movw	r1, #0
   1a9dc:	udiv	r0, r1, r0
   1a9e0:	ldr	r1, [fp, #-12]
   1a9e4:	cmp	r0, r1
   1a9e8:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1a9ec:	b	1aabc <__assert_fail@plt+0x9aa4>
   1a9f0:	ldr	r0, [fp, #-16]
   1a9f4:	cmp	r0, #0
   1a9f8:	bne	1aa00 <__assert_fail@plt+0x99e8>
   1a9fc:	b	1aabc <__assert_fail@plt+0x9aa4>
   1aa00:	ldr	r0, [fp, #-12]
   1aa04:	cmp	r0, #0
   1aa08:	bcs	1aa74 <__assert_fail@plt+0x9a5c>
   1aa0c:	b	1aa14 <__assert_fail@plt+0x99fc>
   1aa10:	b	1aa18 <__assert_fail@plt+0x9a00>
   1aa14:	b	1aa58 <__assert_fail@plt+0x9a40>
   1aa18:	ldr	r0, [fp, #-12]
   1aa1c:	cmn	r0, #1
   1aa20:	bne	1aa58 <__assert_fail@plt+0x9a40>
   1aa24:	b	1aa40 <__assert_fail@plt+0x9a28>
   1aa28:	ldr	r0, [fp, #-16]
   1aa2c:	add	r0, r0, #0
   1aa30:	movw	r1, #0
   1aa34:	cmp	r1, r0
   1aa38:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1aa3c:	b	1aabc <__assert_fail@plt+0x9aa4>
   1aa40:	ldr	r0, [fp, #-16]
   1aa44:	sub	r0, r0, #1
   1aa48:	mvn	r1, #0
   1aa4c:	cmp	r1, r0
   1aa50:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1aa54:	b	1aabc <__assert_fail@plt+0x9aa4>
   1aa58:	ldr	r0, [fp, #-12]
   1aa5c:	movw	r1, #0
   1aa60:	udiv	r0, r1, r0
   1aa64:	ldr	r1, [fp, #-16]
   1aa68:	cmp	r0, r1
   1aa6c:	bcc	1aaa8 <__assert_fail@plt+0x9a90>
   1aa70:	b	1aabc <__assert_fail@plt+0x9aa4>
   1aa74:	ldr	r2, [fp, #-16]
   1aa78:	mvn	r0, #0
   1aa7c:	mov	r3, #0
   1aa80:	str	r0, [sp, #12]
   1aa84:	ldr	r1, [sp, #12]
   1aa88:	bl	1b41c <__assert_fail@plt+0xa404>
   1aa8c:	ldr	r2, [fp, #-12]
   1aa90:	subs	r0, r0, r2
   1aa94:	sbcs	r1, r1, #0
   1aa98:	str	r0, [sp, #8]
   1aa9c:	str	r1, [sp, #4]
   1aaa0:	bcs	1aabc <__assert_fail@plt+0x9aa4>
   1aaa4:	b	1aaa8 <__assert_fail@plt+0x9a90>
   1aaa8:	ldr	r0, [fp, #-12]
   1aaac:	ldr	r1, [fp, #-16]
   1aab0:	mul	r0, r0, r1
   1aab4:	str	r0, [fp, #-20]	; 0xffffffec
   1aab8:	b	1aad0 <__assert_fail@plt+0x9ab8>
   1aabc:	ldr	r0, [fp, #-12]
   1aac0:	ldr	r1, [fp, #-16]
   1aac4:	mul	r0, r0, r1
   1aac8:	str	r0, [fp, #-20]	; 0xffffffec
   1aacc:	b	1aae8 <__assert_fail@plt+0x9ad0>
   1aad0:	bl	10f70 <__errno_location@plt>
   1aad4:	movw	lr, #12
   1aad8:	str	lr, [r0]
   1aadc:	movw	r0, #0
   1aae0:	str	r0, [fp, #-4]
   1aae4:	b	1aaf8 <__assert_fail@plt+0x9ae0>
   1aae8:	ldr	r0, [fp, #-8]
   1aaec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aaf0:	bl	19234 <__assert_fail@plt+0x821c>
   1aaf4:	str	r0, [fp, #-4]
   1aaf8:	ldr	r0, [fp, #-4]
   1aafc:	mov	sp, fp
   1ab00:	pop	{fp, pc}
   1ab04:	svcvc	0x00ffffff
   1ab08:	andhi	r0, r0, r0
   1ab0c:			; <UNDEFINED> instruction: 0xffff8000
   1ab10:	sub	sp, sp, #12
   1ab14:	str	r0, [sp, #4]
   1ab18:	ldr	r0, [sp, #4]
   1ab1c:	sub	r1, r0, #48	; 0x30
   1ab20:	cmp	r1, #10
   1ab24:	str	r0, [sp]
   1ab28:	bcc	1ab58 <__assert_fail@plt+0x9b40>
   1ab2c:	b	1ab30 <__assert_fail@plt+0x9b18>
   1ab30:	ldr	r0, [sp]
   1ab34:	sub	r1, r0, #65	; 0x41
   1ab38:	cmp	r1, #26
   1ab3c:	bcc	1ab58 <__assert_fail@plt+0x9b40>
   1ab40:	b	1ab44 <__assert_fail@plt+0x9b2c>
   1ab44:	ldr	r0, [sp]
   1ab48:	sub	r1, r0, #97	; 0x61
   1ab4c:	cmp	r1, #25
   1ab50:	bhi	1ab68 <__assert_fail@plt+0x9b50>
   1ab54:	b	1ab58 <__assert_fail@plt+0x9b40>
   1ab58:	movw	r0, #1
   1ab5c:	and	r0, r0, #1
   1ab60:	strb	r0, [sp, #11]
   1ab64:	b	1ab74 <__assert_fail@plt+0x9b5c>
   1ab68:	movw	r0, #0
   1ab6c:	and	r0, r0, #1
   1ab70:	strb	r0, [sp, #11]
   1ab74:	ldrb	r0, [sp, #11]
   1ab78:	and	r0, r0, #1
   1ab7c:	add	sp, sp, #12
   1ab80:	bx	lr
   1ab84:	sub	sp, sp, #12
   1ab88:	str	r0, [sp, #4]
   1ab8c:	ldr	r0, [sp, #4]
   1ab90:	sub	r1, r0, #65	; 0x41
   1ab94:	cmp	r1, #26
   1ab98:	str	r0, [sp]
   1ab9c:	bcc	1abb8 <__assert_fail@plt+0x9ba0>
   1aba0:	b	1aba4 <__assert_fail@plt+0x9b8c>
   1aba4:	ldr	r0, [sp]
   1aba8:	sub	r1, r0, #97	; 0x61
   1abac:	cmp	r1, #25
   1abb0:	bhi	1abc8 <__assert_fail@plt+0x9bb0>
   1abb4:	b	1abb8 <__assert_fail@plt+0x9ba0>
   1abb8:	movw	r0, #1
   1abbc:	and	r0, r0, #1
   1abc0:	strb	r0, [sp, #11]
   1abc4:	b	1abd4 <__assert_fail@plt+0x9bbc>
   1abc8:	movw	r0, #0
   1abcc:	and	r0, r0, #1
   1abd0:	strb	r0, [sp, #11]
   1abd4:	ldrb	r0, [sp, #11]
   1abd8:	and	r0, r0, #1
   1abdc:	add	sp, sp, #12
   1abe0:	bx	lr
   1abe4:	sub	sp, sp, #8
   1abe8:	str	r0, [sp]
   1abec:	ldr	r0, [sp]
   1abf0:	cmp	r0, #127	; 0x7f
   1abf4:	bhi	1ac0c <__assert_fail@plt+0x9bf4>
   1abf8:	b	1abfc <__assert_fail@plt+0x9be4>
   1abfc:	movw	r0, #1
   1ac00:	and	r0, r0, #1
   1ac04:	strb	r0, [sp, #7]
   1ac08:	b	1ac18 <__assert_fail@plt+0x9c00>
   1ac0c:	movw	r0, #0
   1ac10:	and	r0, r0, #1
   1ac14:	strb	r0, [sp, #7]
   1ac18:	ldrb	r0, [sp, #7]
   1ac1c:	and	r0, r0, #1
   1ac20:	add	sp, sp, #8
   1ac24:	bx	lr
   1ac28:	sub	sp, sp, #8
   1ac2c:	str	r0, [sp, #4]
   1ac30:	ldr	r0, [sp, #4]
   1ac34:	cmp	r0, #32
   1ac38:	movw	r0, #1
   1ac3c:	str	r0, [sp]
   1ac40:	beq	1ac58 <__assert_fail@plt+0x9c40>
   1ac44:	ldr	r0, [sp, #4]
   1ac48:	cmp	r0, #9
   1ac4c:	movw	r0, #0
   1ac50:	moveq	r0, #1
   1ac54:	str	r0, [sp]
   1ac58:	ldr	r0, [sp]
   1ac5c:	and	r0, r0, #1
   1ac60:	add	sp, sp, #8
   1ac64:	bx	lr
   1ac68:	sub	sp, sp, #12
   1ac6c:	str	r0, [sp, #4]
   1ac70:	ldr	r0, [sp, #4]
   1ac74:	cmp	r0, #32
   1ac78:	str	r0, [sp]
   1ac7c:	bcc	1ac94 <__assert_fail@plt+0x9c7c>
   1ac80:	b	1ac84 <__assert_fail@plt+0x9c6c>
   1ac84:	ldr	r0, [sp]
   1ac88:	cmp	r0, #127	; 0x7f
   1ac8c:	bne	1aca4 <__assert_fail@plt+0x9c8c>
   1ac90:	b	1ac94 <__assert_fail@plt+0x9c7c>
   1ac94:	movw	r0, #1
   1ac98:	and	r0, r0, #1
   1ac9c:	strb	r0, [sp, #11]
   1aca0:	b	1acb0 <__assert_fail@plt+0x9c98>
   1aca4:	movw	r0, #0
   1aca8:	and	r0, r0, #1
   1acac:	strb	r0, [sp, #11]
   1acb0:	ldrb	r0, [sp, #11]
   1acb4:	and	r0, r0, #1
   1acb8:	add	sp, sp, #12
   1acbc:	bx	lr
   1acc0:	sub	sp, sp, #8
   1acc4:	str	r0, [sp]
   1acc8:	ldr	r0, [sp]
   1accc:	sub	r0, r0, #48	; 0x30
   1acd0:	cmp	r0, #9
   1acd4:	bhi	1acec <__assert_fail@plt+0x9cd4>
   1acd8:	b	1acdc <__assert_fail@plt+0x9cc4>
   1acdc:	movw	r0, #1
   1ace0:	and	r0, r0, #1
   1ace4:	strb	r0, [sp, #7]
   1ace8:	b	1acf8 <__assert_fail@plt+0x9ce0>
   1acec:	movw	r0, #0
   1acf0:	and	r0, r0, #1
   1acf4:	strb	r0, [sp, #7]
   1acf8:	ldrb	r0, [sp, #7]
   1acfc:	and	r0, r0, #1
   1ad00:	add	sp, sp, #8
   1ad04:	bx	lr
   1ad08:	sub	sp, sp, #8
   1ad0c:	str	r0, [sp]
   1ad10:	ldr	r0, [sp]
   1ad14:	sub	r0, r0, #33	; 0x21
   1ad18:	cmp	r0, #93	; 0x5d
   1ad1c:	bhi	1ad34 <__assert_fail@plt+0x9d1c>
   1ad20:	b	1ad24 <__assert_fail@plt+0x9d0c>
   1ad24:	movw	r0, #1
   1ad28:	and	r0, r0, #1
   1ad2c:	strb	r0, [sp, #7]
   1ad30:	b	1ad40 <__assert_fail@plt+0x9d28>
   1ad34:	movw	r0, #0
   1ad38:	and	r0, r0, #1
   1ad3c:	strb	r0, [sp, #7]
   1ad40:	ldrb	r0, [sp, #7]
   1ad44:	and	r0, r0, #1
   1ad48:	add	sp, sp, #8
   1ad4c:	bx	lr
   1ad50:	sub	sp, sp, #8
   1ad54:	str	r0, [sp]
   1ad58:	ldr	r0, [sp]
   1ad5c:	sub	r0, r0, #97	; 0x61
   1ad60:	cmp	r0, #25
   1ad64:	bhi	1ad7c <__assert_fail@plt+0x9d64>
   1ad68:	b	1ad6c <__assert_fail@plt+0x9d54>
   1ad6c:	movw	r0, #1
   1ad70:	and	r0, r0, #1
   1ad74:	strb	r0, [sp, #7]
   1ad78:	b	1ad88 <__assert_fail@plt+0x9d70>
   1ad7c:	movw	r0, #0
   1ad80:	and	r0, r0, #1
   1ad84:	strb	r0, [sp, #7]
   1ad88:	ldrb	r0, [sp, #7]
   1ad8c:	and	r0, r0, #1
   1ad90:	add	sp, sp, #8
   1ad94:	bx	lr
   1ad98:	sub	sp, sp, #8
   1ad9c:	str	r0, [sp]
   1ada0:	ldr	r0, [sp]
   1ada4:	sub	r0, r0, #32
   1ada8:	cmp	r0, #94	; 0x5e
   1adac:	bhi	1adc4 <__assert_fail@plt+0x9dac>
   1adb0:	b	1adb4 <__assert_fail@plt+0x9d9c>
   1adb4:	movw	r0, #1
   1adb8:	and	r0, r0, #1
   1adbc:	strb	r0, [sp, #7]
   1adc0:	b	1add0 <__assert_fail@plt+0x9db8>
   1adc4:	movw	r0, #0
   1adc8:	and	r0, r0, #1
   1adcc:	strb	r0, [sp, #7]
   1add0:	ldrb	r0, [sp, #7]
   1add4:	and	r0, r0, #1
   1add8:	add	sp, sp, #8
   1addc:	bx	lr
   1ade0:	sub	sp, sp, #12
   1ade4:	str	r0, [sp, #4]
   1ade8:	ldr	r0, [sp, #4]
   1adec:	sub	r0, r0, #33	; 0x21
   1adf0:	cmp	r0, #93	; 0x5d
   1adf4:	str	r0, [sp]
   1adf8:	bhi	1af94 <__assert_fail@plt+0x9f7c>
   1adfc:	add	r0, pc, #8
   1ae00:	ldr	r1, [sp]
   1ae04:	ldr	r0, [r0, r1, lsl #2]
   1ae08:	mov	pc, r0
   1ae0c:	andeq	sl, r1, r4, lsl #31
   1ae10:	andeq	sl, r1, r4, lsl #31
   1ae14:	andeq	sl, r1, r4, lsl #31
   1ae18:	andeq	sl, r1, r4, lsl #31
   1ae1c:	andeq	sl, r1, r4, lsl #31
   1ae20:	andeq	sl, r1, r4, lsl #31
   1ae24:	andeq	sl, r1, r4, lsl #31
   1ae28:	andeq	sl, r1, r4, lsl #31
   1ae2c:	andeq	sl, r1, r4, lsl #31
   1ae30:	andeq	sl, r1, r4, lsl #31
   1ae34:	andeq	sl, r1, r4, lsl #31
   1ae38:	andeq	sl, r1, r4, lsl #31
   1ae3c:	andeq	sl, r1, r4, lsl #31
   1ae40:	andeq	sl, r1, r4, lsl #31
   1ae44:	andeq	sl, r1, r4, lsl #31
   1ae48:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae50:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae54:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae58:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae5c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae60:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae64:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae68:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae6c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae70:	andeq	sl, r1, r4, lsl #31
   1ae74:	andeq	sl, r1, r4, lsl #31
   1ae78:	andeq	sl, r1, r4, lsl #31
   1ae7c:	andeq	sl, r1, r4, lsl #31
   1ae80:	andeq	sl, r1, r4, lsl #31
   1ae84:	andeq	sl, r1, r4, lsl #31
   1ae88:	andeq	sl, r1, r4, lsl #31
   1ae8c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae90:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae94:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae98:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ae9c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aea0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aea4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aea8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aeac:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aeb0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aeb4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aeb8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aebc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aec0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aec4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aec8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aecc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aed0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aed4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aed8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aedc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aee0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aee4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aee8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aeec:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aef0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1aef4:	andeq	sl, r1, r4, lsl #31
   1aef8:	andeq	sl, r1, r4, lsl #31
   1aefc:	andeq	sl, r1, r4, lsl #31
   1af00:	andeq	sl, r1, r4, lsl #31
   1af04:	andeq	sl, r1, r4, lsl #31
   1af08:	andeq	sl, r1, r4, lsl #31
   1af0c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af10:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af14:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af18:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af1c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af20:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af24:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af28:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af2c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af30:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af34:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af38:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af3c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af40:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af44:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af48:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af50:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af54:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af58:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af5c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af60:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af64:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af68:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af6c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af70:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af74:	andeq	sl, r1, r4, lsl #31
   1af78:	andeq	sl, r1, r4, lsl #31
   1af7c:	andeq	sl, r1, r4, lsl #31
   1af80:	andeq	sl, r1, r4, lsl #31
   1af84:	movw	r0, #1
   1af88:	and	r0, r0, #1
   1af8c:	strb	r0, [sp, #11]
   1af90:	b	1afa0 <__assert_fail@plt+0x9f88>
   1af94:	movw	r0, #0
   1af98:	and	r0, r0, #1
   1af9c:	strb	r0, [sp, #11]
   1afa0:	ldrb	r0, [sp, #11]
   1afa4:	and	r0, r0, #1
   1afa8:	add	sp, sp, #12
   1afac:	bx	lr
   1afb0:	sub	sp, sp, #12
   1afb4:	str	r0, [sp, #4]
   1afb8:	ldr	r0, [sp, #4]
   1afbc:	sub	r1, r0, #9
   1afc0:	cmp	r1, #5
   1afc4:	str	r0, [sp]
   1afc8:	bcc	1afe0 <__assert_fail@plt+0x9fc8>
   1afcc:	b	1afd0 <__assert_fail@plt+0x9fb8>
   1afd0:	ldr	r0, [sp]
   1afd4:	cmp	r0, #32
   1afd8:	bne	1aff0 <__assert_fail@plt+0x9fd8>
   1afdc:	b	1afe0 <__assert_fail@plt+0x9fc8>
   1afe0:	movw	r0, #1
   1afe4:	and	r0, r0, #1
   1afe8:	strb	r0, [sp, #11]
   1afec:	b	1affc <__assert_fail@plt+0x9fe4>
   1aff0:	movw	r0, #0
   1aff4:	and	r0, r0, #1
   1aff8:	strb	r0, [sp, #11]
   1affc:	ldrb	r0, [sp, #11]
   1b000:	and	r0, r0, #1
   1b004:	add	sp, sp, #12
   1b008:	bx	lr
   1b00c:	sub	sp, sp, #8
   1b010:	str	r0, [sp]
   1b014:	ldr	r0, [sp]
   1b018:	sub	r0, r0, #65	; 0x41
   1b01c:	cmp	r0, #25
   1b020:	bhi	1b038 <__assert_fail@plt+0xa020>
   1b024:	b	1b028 <__assert_fail@plt+0xa010>
   1b028:	movw	r0, #1
   1b02c:	and	r0, r0, #1
   1b030:	strb	r0, [sp, #7]
   1b034:	b	1b044 <__assert_fail@plt+0xa02c>
   1b038:	movw	r0, #0
   1b03c:	and	r0, r0, #1
   1b040:	strb	r0, [sp, #7]
   1b044:	ldrb	r0, [sp, #7]
   1b048:	and	r0, r0, #1
   1b04c:	add	sp, sp, #8
   1b050:	bx	lr
   1b054:	sub	sp, sp, #12
   1b058:	str	r0, [sp, #4]
   1b05c:	ldr	r0, [sp, #4]
   1b060:	sub	r1, r0, #48	; 0x30
   1b064:	cmp	r1, #10
   1b068:	str	r0, [sp]
   1b06c:	bcc	1b09c <__assert_fail@plt+0xa084>
   1b070:	b	1b074 <__assert_fail@plt+0xa05c>
   1b074:	ldr	r0, [sp]
   1b078:	sub	r1, r0, #65	; 0x41
   1b07c:	cmp	r1, #6
   1b080:	bcc	1b09c <__assert_fail@plt+0xa084>
   1b084:	b	1b088 <__assert_fail@plt+0xa070>
   1b088:	ldr	r0, [sp]
   1b08c:	sub	r1, r0, #97	; 0x61
   1b090:	cmp	r1, #5
   1b094:	bhi	1b0ac <__assert_fail@plt+0xa094>
   1b098:	b	1b09c <__assert_fail@plt+0xa084>
   1b09c:	movw	r0, #1
   1b0a0:	and	r0, r0, #1
   1b0a4:	strb	r0, [sp, #11]
   1b0a8:	b	1b0b8 <__assert_fail@plt+0xa0a0>
   1b0ac:	movw	r0, #0
   1b0b0:	and	r0, r0, #1
   1b0b4:	strb	r0, [sp, #11]
   1b0b8:	ldrb	r0, [sp, #11]
   1b0bc:	and	r0, r0, #1
   1b0c0:	add	sp, sp, #12
   1b0c4:	bx	lr
   1b0c8:	sub	sp, sp, #8
   1b0cc:	str	r0, [sp]
   1b0d0:	ldr	r0, [sp]
   1b0d4:	sub	r0, r0, #65	; 0x41
   1b0d8:	cmp	r0, #25
   1b0dc:	bhi	1b0f8 <__assert_fail@plt+0xa0e0>
   1b0e0:	b	1b0e4 <__assert_fail@plt+0xa0cc>
   1b0e4:	ldr	r0, [sp]
   1b0e8:	sub	r0, r0, #65	; 0x41
   1b0ec:	add	r0, r0, #97	; 0x61
   1b0f0:	str	r0, [sp, #4]
   1b0f4:	b	1b100 <__assert_fail@plt+0xa0e8>
   1b0f8:	ldr	r0, [sp]
   1b0fc:	str	r0, [sp, #4]
   1b100:	ldr	r0, [sp, #4]
   1b104:	add	sp, sp, #8
   1b108:	bx	lr
   1b10c:	sub	sp, sp, #8
   1b110:	str	r0, [sp]
   1b114:	ldr	r0, [sp]
   1b118:	sub	r0, r0, #97	; 0x61
   1b11c:	cmp	r0, #25
   1b120:	bhi	1b13c <__assert_fail@plt+0xa124>
   1b124:	b	1b128 <__assert_fail@plt+0xa110>
   1b128:	ldr	r0, [sp]
   1b12c:	sub	r0, r0, #97	; 0x61
   1b130:	add	r0, r0, #65	; 0x41
   1b134:	str	r0, [sp, #4]
   1b138:	b	1b144 <__assert_fail@plt+0xa12c>
   1b13c:	ldr	r0, [sp]
   1b140:	str	r0, [sp, #4]
   1b144:	ldr	r0, [sp, #4]
   1b148:	add	sp, sp, #8
   1b14c:	bx	lr
   1b150:	push	{r4, r5, fp, lr}
   1b154:	add	fp, sp, #8
   1b158:	sub	sp, sp, #272	; 0x110
   1b15c:	add	r1, sp, #7
   1b160:	str	r0, [fp, #-16]
   1b164:	ldr	r0, [fp, #-16]
   1b168:	movw	r2, #257	; 0x101
   1b16c:	bl	1b1ec <__assert_fail@plt+0xa1d4>
   1b170:	cmp	r0, #0
   1b174:	beq	1b188 <__assert_fail@plt+0xa170>
   1b178:	movw	r0, #0
   1b17c:	and	r0, r0, #1
   1b180:	strb	r0, [fp, #-9]
   1b184:	b	1b1dc <__assert_fail@plt+0xa1c4>
   1b188:	add	r0, sp, #7
   1b18c:	movw	r1, #48831	; 0xbebf
   1b190:	movt	r1, #1
   1b194:	bl	10de4 <strcmp@plt>
   1b198:	cmp	r0, #0
   1b19c:	movw	r0, #1
   1b1a0:	str	r0, [sp]
   1b1a4:	beq	1b1c8 <__assert_fail@plt+0xa1b0>
   1b1a8:	add	r0, sp, #7
   1b1ac:	movw	r1, #48833	; 0xbec1
   1b1b0:	movt	r1, #1
   1b1b4:	bl	10de4 <strcmp@plt>
   1b1b8:	cmp	r0, #0
   1b1bc:	movw	r0, #0
   1b1c0:	moveq	r0, #1
   1b1c4:	str	r0, [sp]
   1b1c8:	ldr	r0, [sp]
   1b1cc:	mvn	r1, #0
   1b1d0:	eor	r0, r0, r1
   1b1d4:	and	r0, r0, #1
   1b1d8:	strb	r0, [fp, #-9]
   1b1dc:	ldrb	r0, [fp, #-9]
   1b1e0:	and	r0, r0, #1
   1b1e4:	sub	sp, fp, #8
   1b1e8:	pop	{r4, r5, fp, pc}
   1b1ec:	push	{fp, lr}
   1b1f0:	mov	fp, sp
   1b1f4:	sub	sp, sp, #16
   1b1f8:	str	r0, [fp, #-4]
   1b1fc:	str	r1, [sp, #8]
   1b200:	str	r2, [sp, #4]
   1b204:	ldr	r0, [fp, #-4]
   1b208:	ldr	r1, [sp, #8]
   1b20c:	ldr	r2, [sp, #4]
   1b210:	bl	1b21c <__assert_fail@plt+0xa204>
   1b214:	mov	sp, fp
   1b218:	pop	{fp, pc}
   1b21c:	push	{fp, lr}
   1b220:	mov	fp, sp
   1b224:	sub	sp, sp, #24
   1b228:	str	r0, [fp, #-8]
   1b22c:	str	r1, [sp, #12]
   1b230:	str	r2, [sp, #8]
   1b234:	ldr	r0, [fp, #-8]
   1b238:	bl	1b31c <__assert_fail@plt+0xa304>
   1b23c:	str	r0, [sp, #4]
   1b240:	ldr	r0, [sp, #4]
   1b244:	movw	r1, #0
   1b248:	cmp	r0, r1
   1b24c:	bne	1b274 <__assert_fail@plt+0xa25c>
   1b250:	ldr	r0, [sp, #8]
   1b254:	cmp	r0, #0
   1b258:	bls	1b268 <__assert_fail@plt+0xa250>
   1b25c:	ldr	r0, [sp, #12]
   1b260:	movw	r1, #0
   1b264:	strb	r1, [r0]
   1b268:	movw	r0, #22
   1b26c:	str	r0, [fp, #-4]
   1b270:	b	1b2f0 <__assert_fail@plt+0xa2d8>
   1b274:	ldr	r0, [sp, #4]
   1b278:	bl	10f58 <strlen@plt>
   1b27c:	str	r0, [sp]
   1b280:	ldr	r0, [sp]
   1b284:	ldr	lr, [sp, #8]
   1b288:	cmp	r0, lr
   1b28c:	bcs	1b2b0 <__assert_fail@plt+0xa298>
   1b290:	ldr	r0, [sp, #12]
   1b294:	ldr	r1, [sp, #4]
   1b298:	ldr	r2, [sp]
   1b29c:	add	r2, r2, #1
   1b2a0:	bl	10e2c <memcpy@plt>
   1b2a4:	movw	r0, #0
   1b2a8:	str	r0, [fp, #-4]
   1b2ac:	b	1b2f0 <__assert_fail@plt+0xa2d8>
   1b2b0:	ldr	r0, [sp, #8]
   1b2b4:	cmp	r0, #0
   1b2b8:	bls	1b2e8 <__assert_fail@plt+0xa2d0>
   1b2bc:	ldr	r0, [sp, #12]
   1b2c0:	ldr	r1, [sp, #4]
   1b2c4:	ldr	r2, [sp, #8]
   1b2c8:	sub	r2, r2, #1
   1b2cc:	bl	10e2c <memcpy@plt>
   1b2d0:	ldr	r0, [sp, #12]
   1b2d4:	ldr	r1, [sp, #8]
   1b2d8:	sub	r1, r1, #1
   1b2dc:	add	r0, r0, r1
   1b2e0:	movw	r1, #0
   1b2e4:	strb	r1, [r0]
   1b2e8:	movw	r0, #34	; 0x22
   1b2ec:	str	r0, [fp, #-4]
   1b2f0:	ldr	r0, [fp, #-4]
   1b2f4:	mov	sp, fp
   1b2f8:	pop	{fp, pc}
   1b2fc:	push	{fp, lr}
   1b300:	mov	fp, sp
   1b304:	sub	sp, sp, #8
   1b308:	str	r0, [sp, #4]
   1b30c:	ldr	r0, [sp, #4]
   1b310:	bl	1b31c <__assert_fail@plt+0xa304>
   1b314:	mov	sp, fp
   1b318:	pop	{fp, pc}
   1b31c:	push	{fp, lr}
   1b320:	mov	fp, sp
   1b324:	sub	sp, sp, #8
   1b328:	str	r0, [sp, #4]
   1b32c:	ldr	r0, [sp, #4]
   1b330:	movw	r1, #0
   1b334:	bl	10fb8 <setlocale@plt>
   1b338:	str	r0, [sp]
   1b33c:	ldr	r0, [sp]
   1b340:	mov	sp, fp
   1b344:	pop	{fp, pc}
   1b348:	cmp	r3, #0
   1b34c:	cmpeq	r2, #0
   1b350:	bne	1b374 <__assert_fail@plt+0xa35c>
   1b354:	cmp	r1, #0
   1b358:	movlt	r1, #-2147483648	; 0x80000000
   1b35c:	movlt	r0, #0
   1b360:	blt	1b370 <__assert_fail@plt+0xa358>
   1b364:	cmpeq	r0, #0
   1b368:	mvnne	r1, #-2147483648	; 0x80000000
   1b36c:	mvnne	r0, #0
   1b370:	b	1b458 <__assert_fail@plt+0xa440>
   1b374:	sub	sp, sp, #8
   1b378:	push	{sp, lr}
   1b37c:	cmp	r1, #0
   1b380:	blt	1b3a0 <__assert_fail@plt+0xa388>
   1b384:	cmp	r3, #0
   1b388:	blt	1b3d4 <__assert_fail@plt+0xa3bc>
   1b38c:	bl	1b468 <__assert_fail@plt+0xa450>
   1b390:	ldr	lr, [sp, #4]
   1b394:	add	sp, sp, #8
   1b398:	pop	{r2, r3}
   1b39c:	bx	lr
   1b3a0:	rsbs	r0, r0, #0
   1b3a4:	sbc	r1, r1, r1, lsl #1
   1b3a8:	cmp	r3, #0
   1b3ac:	blt	1b3f8 <__assert_fail@plt+0xa3e0>
   1b3b0:	bl	1b468 <__assert_fail@plt+0xa450>
   1b3b4:	ldr	lr, [sp, #4]
   1b3b8:	add	sp, sp, #8
   1b3bc:	pop	{r2, r3}
   1b3c0:	rsbs	r0, r0, #0
   1b3c4:	sbc	r1, r1, r1, lsl #1
   1b3c8:	rsbs	r2, r2, #0
   1b3cc:	sbc	r3, r3, r3, lsl #1
   1b3d0:	bx	lr
   1b3d4:	rsbs	r2, r2, #0
   1b3d8:	sbc	r3, r3, r3, lsl #1
   1b3dc:	bl	1b468 <__assert_fail@plt+0xa450>
   1b3e0:	ldr	lr, [sp, #4]
   1b3e4:	add	sp, sp, #8
   1b3e8:	pop	{r2, r3}
   1b3ec:	rsbs	r0, r0, #0
   1b3f0:	sbc	r1, r1, r1, lsl #1
   1b3f4:	bx	lr
   1b3f8:	rsbs	r2, r2, #0
   1b3fc:	sbc	r3, r3, r3, lsl #1
   1b400:	bl	1b468 <__assert_fail@plt+0xa450>
   1b404:	ldr	lr, [sp, #4]
   1b408:	add	sp, sp, #8
   1b40c:	pop	{r2, r3}
   1b410:	rsbs	r2, r2, #0
   1b414:	sbc	r3, r3, r3, lsl #1
   1b418:	bx	lr
   1b41c:	cmp	r3, #0
   1b420:	cmpeq	r2, #0
   1b424:	bne	1b43c <__assert_fail@plt+0xa424>
   1b428:	cmp	r1, #0
   1b42c:	cmpeq	r0, #0
   1b430:	mvnne	r1, #0
   1b434:	mvnne	r0, #0
   1b438:	b	1b458 <__assert_fail@plt+0xa440>
   1b43c:	sub	sp, sp, #8
   1b440:	push	{sp, lr}
   1b444:	bl	1b468 <__assert_fail@plt+0xa450>
   1b448:	ldr	lr, [sp, #4]
   1b44c:	add	sp, sp, #8
   1b450:	pop	{r2, r3}
   1b454:	bx	lr
   1b458:	push	{r1, lr}
   1b45c:	mov	r0, #8
   1b460:	bl	10dd8 <raise@plt>
   1b464:	pop	{r1, pc}
   1b468:	cmp	r1, r3
   1b46c:	cmpeq	r0, r2
   1b470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b474:	mov	r4, r0
   1b478:	movcc	r0, #0
   1b47c:	mov	r5, r1
   1b480:	ldr	lr, [sp, #36]	; 0x24
   1b484:	movcc	r1, r0
   1b488:	bcc	1b584 <__assert_fail@plt+0xa56c>
   1b48c:	cmp	r3, #0
   1b490:	clzeq	ip, r2
   1b494:	clzne	ip, r3
   1b498:	addeq	ip, ip, #32
   1b49c:	cmp	r5, #0
   1b4a0:	clzeq	r1, r4
   1b4a4:	addeq	r1, r1, #32
   1b4a8:	clzne	r1, r5
   1b4ac:	sub	ip, ip, r1
   1b4b0:	sub	sl, ip, #32
   1b4b4:	lsl	r9, r3, ip
   1b4b8:	rsb	fp, ip, #32
   1b4bc:	orr	r9, r9, r2, lsl sl
   1b4c0:	orr	r9, r9, r2, lsr fp
   1b4c4:	lsl	r8, r2, ip
   1b4c8:	cmp	r5, r9
   1b4cc:	cmpeq	r4, r8
   1b4d0:	movcc	r0, #0
   1b4d4:	movcc	r1, r0
   1b4d8:	bcc	1b4f4 <__assert_fail@plt+0xa4dc>
   1b4dc:	mov	r0, #1
   1b4e0:	subs	r4, r4, r8
   1b4e4:	lsl	r1, r0, sl
   1b4e8:	orr	r1, r1, r0, lsr fp
   1b4ec:	lsl	r0, r0, ip
   1b4f0:	sbc	r5, r5, r9
   1b4f4:	cmp	ip, #0
   1b4f8:	beq	1b584 <__assert_fail@plt+0xa56c>
   1b4fc:	lsr	r6, r8, #1
   1b500:	orr	r6, r6, r9, lsl #31
   1b504:	lsr	r7, r9, #1
   1b508:	mov	r2, ip
   1b50c:	b	1b530 <__assert_fail@plt+0xa518>
   1b510:	subs	r3, r4, r6
   1b514:	sbc	r8, r5, r7
   1b518:	adds	r3, r3, r3
   1b51c:	adc	r8, r8, r8
   1b520:	adds	r4, r3, #1
   1b524:	adc	r5, r8, #0
   1b528:	subs	r2, r2, #1
   1b52c:	beq	1b54c <__assert_fail@plt+0xa534>
   1b530:	cmp	r5, r7
   1b534:	cmpeq	r4, r6
   1b538:	bcs	1b510 <__assert_fail@plt+0xa4f8>
   1b53c:	adds	r4, r4, r4
   1b540:	adc	r5, r5, r5
   1b544:	subs	r2, r2, #1
   1b548:	bne	1b530 <__assert_fail@plt+0xa518>
   1b54c:	lsr	r3, r4, ip
   1b550:	orr	r3, r3, r5, lsl fp
   1b554:	lsr	r2, r5, ip
   1b558:	orr	r3, r3, r5, lsr sl
   1b55c:	adds	r0, r0, r4
   1b560:	mov	r4, r3
   1b564:	lsl	r3, r2, ip
   1b568:	orr	r3, r3, r4, lsl sl
   1b56c:	lsl	ip, r4, ip
   1b570:	orr	r3, r3, r4, lsr fp
   1b574:	adc	r1, r1, r5
   1b578:	subs	r0, r0, ip
   1b57c:	mov	r5, r2
   1b580:	sbc	r1, r1, r3
   1b584:	cmp	lr, #0
   1b588:	strdne	r4, [lr]
   1b58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b594:	mov	r7, r0
   1b598:	ldr	r6, [pc, #72]	; 1b5e8 <__assert_fail@plt+0xa5d0>
   1b59c:	ldr	r5, [pc, #72]	; 1b5ec <__assert_fail@plt+0xa5d4>
   1b5a0:	add	r6, pc, r6
   1b5a4:	add	r5, pc, r5
   1b5a8:	sub	r6, r6, r5
   1b5ac:	mov	r8, r1
   1b5b0:	mov	r9, r2
   1b5b4:	bl	10da0 <calloc@plt-0x20>
   1b5b8:	asrs	r6, r6, #2
   1b5bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b5c0:	mov	r4, #0
   1b5c4:	add	r4, r4, #1
   1b5c8:	ldr	r3, [r5], #4
   1b5cc:	mov	r2, r9
   1b5d0:	mov	r1, r8
   1b5d4:	mov	r0, r7
   1b5d8:	blx	r3
   1b5dc:	cmp	r6, r4
   1b5e0:	bne	1b5c4 <__assert_fail@plt+0xa5ac>
   1b5e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b5e8:	andeq	r0, r1, r4, ror #18
   1b5ec:	andeq	r0, r1, ip, asr r9
   1b5f0:	bx	lr
   1b5f4:	ldr	r3, [pc, #12]	; 1b608 <__assert_fail@plt+0xa5f0>
   1b5f8:	mov	r1, #0
   1b5fc:	add	r3, pc, r3
   1b600:	ldr	r2, [r3]
   1b604:	b	10f7c <__cxa_atexit@plt>
   1b608:	ldrdeq	r0, [r1], -ip

Disassembly of section .fini:

0001b60c <.fini>:
   1b60c:	push	{r3, lr}
   1b610:	pop	{r3, pc}
