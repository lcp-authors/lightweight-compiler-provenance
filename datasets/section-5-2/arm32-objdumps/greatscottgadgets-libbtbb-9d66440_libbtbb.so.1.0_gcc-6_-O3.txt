
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000020a4 <.init>:
    20a4:	push	{r3, lr}
    20a8:	bl	2520 <__assert_fail@plt+0xc>
    20ac:	pop	{r3, pc}

Disassembly of section .plt:

000020b0 <calloc@plt-0x14>:
    20b0:	push	{lr}		; (str lr, [sp, #-4]!)
    20b4:	ldr	lr, [pc, #4]	; 20c0 <calloc@plt-0x4>
    20b8:	add	lr, pc, lr
    20bc:	ldr	pc, [lr, #8]!
    20c0:	andeq	r8, r2, r0, asr #30

000020c4 <calloc@plt>:
    20c4:	add	ip, pc, #0, 12
    20c8:	add	ip, ip, #40, 20	; 0x28000
    20cc:	ldr	pc, [ip, #3904]!	; 0xf40

000020d0 <raise@plt>:
    20d0:	add	ip, pc, #0, 12
    20d4:	add	ip, ip, #40, 20	; 0x28000
    20d8:	ldr	pc, [ip, #3896]!	; 0xf38

000020dc <btbb_piconet_new@plt>:
    20dc:	add	ip, pc, #0, 12
    20e0:	add	ip, ip, #40, 20	; 0x28000
    20e4:	ldr	pc, [ip, #3888]!	; 0xf30

000020e8 <gen_hop_pattern@plt>:
    20e8:	add	ip, pc, #0, 12
    20ec:	add	ip, ip, #40, 20	; 0x28000
    20f0:	ldr	pc, [ip, #3880]!	; 0xf28

000020f4 <count_bits@plt>:
    20f4:	add	ip, pc, #0, 12
    20f8:	add	ip, ip, #40, 20	; 0x28000
    20fc:	ldr	pc, [ip, #3872]!	; 0xf20

00002100 <__cxa_finalize@plt>:
    2100:	add	ip, pc, #0, 12
    2104:	add	ip, ip, #40, 20	; 0x28000
    2108:	ldr	pc, [ip, #3864]!	; 0xf18

0000210c <btbb_get_payload_packed@plt>:
    210c:	add	ip, pc, #0, 12
    2110:	add	ip, ip, #40, 20	; 0x28000
    2114:	ldr	pc, [ip, #3856]!	; 0xf10

00002118 <printf@plt>:
    2118:	add	ip, pc, #0, 12
    211c:	add	ip, ip, #40, 20	; 0x28000
    2120:	ldr	pc, [ip, #3848]!	; 0xf08

00002124 <fopen@plt>:
    2124:	add	ip, pc, #0, 12
    2128:	add	ip, ip, #40, 20	; 0x28000
    212c:	ldr	pc, [ip, #3840]!	; 0xf00

00002130 <lell_packet_is_data@plt>:
    2130:	add	ip, pc, #0, 12
    2134:	add	ip, ip, #40, 20	; 0x28000
    2138:	ldr	pc, [ip, #3832]!	; 0xef8

0000213c <fflush@plt>:
    213c:	add	ip, pc, #0, 12
    2140:	add	ip, ip, #40, 20	; 0x28000
    2144:	ldr	pc, [ip, #3824]!	; 0xef0

00002148 <btbb_packet_set_flag@plt>:
    2148:	add	ip, pc, #0, 12
    214c:	add	ip, ip, #40, 20	; 0x28000
    2150:	ldr	pc, [ip, #3816]!	; 0xee8

00002154 <pcapng_append_interface_option@plt>:
    2154:	add	ip, pc, #0, 12
    2158:	add	ip, ip, #40, 20	; 0x28000
    215c:	ldr	pc, [ip, #3808]!	; 0xee0

00002160 <free@plt>:
    2160:	add	ip, pc, #0, 12
    2164:	add	ip, ip, #40, 20	; 0x28000
    2168:	ldr	pc, [ip, #3800]!	; 0xed8

0000216c <btbb_packet_get_modulation@plt>:
    216c:	add	ip, pc, #0, 12
    2170:	add	ip, ip, #40, 20	; 0x28000
    2174:	ldr	pc, [ip, #3792]!	; 0xed0

00002178 <btbb_packet_get_ac_errors@plt>:
    2178:	add	ip, pc, #0, 12
    217c:	add	ip, ip, #40, 20	; 0x28000
    2180:	ldr	pc, [ip, #3784]!	; 0xec8

00002184 <memcpy@plt>:
    2184:	add	ip, pc, #0, 12
    2188:	add	ip, ip, #40, 20	; 0x28000
    218c:	ldr	pc, [ip, #3776]!	; 0xec0

00002190 <btbb_uap_from_header@plt>:
    2190:	add	ip, pc, #0, 12
    2194:	add	ip, ip, #40, 20	; 0x28000
    2198:	ldr	pc, [ip, #3768]!	; 0xeb8

0000219c <btbb_packet_get_flag@plt>:
    219c:	add	ip, pc, #0, 12
    21a0:	add	ip, ip, #40, 20	; 0x28000
    21a4:	ldr	pc, [ip, #3760]!	; 0xeb0

000021a8 <fhs@plt>:
    21a8:	add	ip, pc, #0, 12
    21ac:	add	ip, ip, #40, 20	; 0x28000
    21b0:	ldr	pc, [ip, #3752]!	; 0xea8

000021b4 <EV4@plt>:
    21b4:	add	ip, pc, #0, 12
    21b8:	add	ip, ip, #40, 20	; 0x28000
    21bc:	ldr	pc, [ip, #3744]!	; 0xea0

000021c0 <btbb_piconet_get_uap@plt>:
    21c0:	add	ip, pc, #0, 12
    21c4:	add	ip, ip, #40, 20	; 0x28000
    21c8:	ldr	pc, [ip, #3736]!	; 0xe98

000021cc <memcmp@plt>:
    21cc:	add	ip, pc, #0, 12
    21d0:	add	ip, ip, #40, 20	; 0x28000
    21d4:	ldr	pc, [ip, #3728]!	; 0xe90

000021d8 <lell_pcap_close@plt>:
    21d8:	add	ip, pc, #0, 12
    21dc:	add	ip, ip, #40, 20	; 0x28000
    21e0:	ldr	pc, [ip, #3720]!	; 0xe88

000021e4 <btbb_piconet_get_channel_seen@plt>:
    21e4:	add	ip, pc, #0, 12
    21e8:	add	ip, ip, #40, 20	; 0x28000
    21ec:	ldr	pc, [ip, #3712]!	; 0xe80

000021f0 <btbb_pcap_open@plt>:
    21f0:	add	ip, pc, #0, 12
    21f4:	add	ip, ip, #40, 20	; 0x28000
    21f8:	ldr	pc, [ip, #3704]!	; 0xe78

000021fc <btbb_header_present@plt>:
    21fc:	add	ip, pc, #0, 12
    2200:	add	ip, ip, #40, 20	; 0x28000
    2204:	ldr	pc, [ip, #3696]!	; 0xe70

00002208 <btbb_piconet_get_flag@plt>:
    2208:	add	ip, pc, #0, 12
    220c:	add	ip, ip, #40, 20	; 0x28000
    2210:	ldr	pc, [ip, #3688]!	; 0xe68

00002214 <pcapng_create@plt>:
    2214:	add	ip, pc, #0, 12
    2218:	add	ip, ip, #40, 20	; 0x28000
    221c:	ldr	pc, [ip, #3680]!	; 0xe60

00002220 <DM@plt>:
    2220:	add	ip, pc, #0, 12
    2224:	add	ip, ip, #40, 20	; 0x28000
    2228:	ldr	pc, [ip, #3672]!	; 0xe58

0000222c <btbb_piconet_set_flag@plt>:
    222c:	add	ip, pc, #0, 12
    2230:	add	ip, ip, #40, 20	; 0x28000
    2234:	ldr	pc, [ip, #3664]!	; 0xe50

00002238 <HV@plt>:
    2238:	add	ip, pc, #0, 12
    223c:	add	ip, ip, #40, 20	; 0x28000
    2240:	ldr	pc, [ip, #3656]!	; 0xe48

00002244 <perror@plt>:
    2244:	add	ip, pc, #0, 12
    2248:	add	ip, ip, #40, 20	; 0x28000
    224c:	ldr	pc, [ip, #3648]!	; 0xe40

00002250 <btbb_piconet_set_channel_seen@plt>:
    2250:	add	ip, pc, #0, 12
    2254:	add	ip, ip, #40, 20	; 0x28000
    2258:	ldr	pc, [ip, #3640]!	; 0xe38

0000225c <perm_table_init@plt>:
    225c:	add	ip, pc, #0, 12
    2260:	add	ip, ip, #40, 20	; 0x28000
    2264:	ldr	pc, [ip, #3632]!	; 0xe30

00002268 <btbb_packet_set_uap@plt>:
    2268:	add	ip, pc, #0, 12
    226c:	add	ip, ip, #40, 20	; 0x28000
    2270:	ldr	pc, [ip, #3624]!	; 0xe28

00002274 <fwrite@plt>:
    2274:	add	ip, pc, #0, 12
    2278:	add	ip, ip, #40, 20	; 0x28000
    227c:	ldr	pc, [ip, #3616]!	; 0xe20

00002280 <btbb_gen_syncword@plt>:
    2280:	add	ip, pc, #0, 12
    2284:	add	ip, ip, #40, 20	; 0x28000
    2288:	ldr	pc, [ip, #3608]!	; 0xe18

0000228c <btbb_pcap_close@plt>:
    228c:	add	ip, pc, #0, 12
    2290:	add	ip, ip, #40, 20	; 0x28000
    2294:	ldr	pc, [ip, #3600]!	; 0xe10

00002298 <crc_check@plt>:
    2298:	add	ip, pc, #0, 12
    229c:	add	ip, ip, #40, 20	; 0x28000
    22a0:	ldr	pc, [ip, #3592]!	; 0xe08

000022a4 <btbb_decode@plt>:
    22a4:	add	ip, pc, #0, 12
    22a8:	add	ip, ip, #40, 20	; 0x28000
    22ac:	ldr	pc, [ip, #3584]!	; 0xe00

000022b0 <btbb_winnow@plt>:
    22b0:	add	ip, pc, #0, 12
    22b4:	add	ip, ip, #40, 20	; 0x28000
    22b8:	ldr	pc, [ip, #3576]!	; 0xdf8

000022bc <lell_get_adv_type_str@plt>:
    22bc:	add	ip, pc, #0, 12
    22c0:	add	ip, ip, #40, 20	; 0x28000
    22c4:	ldr	pc, [ip, #3568]!	; 0xdf0

000022c8 <get_hop_pattern@plt>:
    22c8:	add	ip, pc, #0, 12
    22cc:	add	ip, ip, #40, 20	; 0x28000
    22d0:	ldr	pc, [ip, #3560]!	; 0xde8

000022d4 <puts@plt>:
    22d4:	add	ip, pc, #0, 12
    22d8:	add	ip, ip, #40, 20	; 0x28000
    22dc:	ldr	pc, [ip, #3552]!	; 0xde0

000022e0 <malloc@plt>:
    22e0:	add	ip, pc, #0, 12
    22e4:	add	ip, ip, #40, 20	; 0x28000
    22e8:	ldr	pc, [ip, #3544]!	; 0xdd8

000022ec <try_hop@plt>:
    22ec:	add	ip, pc, #0, 12
    22f0:	add	ip, ip, #40, 20	; 0x28000
    22f4:	ldr	pc, [ip, #3536]!	; 0xdd0

000022f8 <btbb_packet_new@plt>:
    22f8:	add	ip, pc, #0, 12
    22fc:	add	ip, ip, #40, 20	; 0x28000
    2300:	ldr	pc, [ip, #3528]!	; 0xdc8

00002304 <btbb_pcap_dump@plt>:
    2304:	add	ip, pc, #0, 12
    2308:	add	ip, ip, #40, 20	; 0x28000
    230c:	ldr	pc, [ip, #3520]!	; 0xdc0

00002310 <__gmon_start__@plt>:
    2310:	add	ip, pc, #0, 12
    2314:	add	ip, ip, #40, 20	; 0x28000
    2318:	ldr	pc, [ip, #3512]!	; 0xdb8

0000231c <open@plt>:
    231c:	add	ip, pc, #0, 12
    2320:	add	ip, ip, #40, 20	; 0x28000
    2324:	ldr	pc, [ip, #3504]!	; 0xdb0

00002328 <__ctype_b_loc@plt>:
    2328:	add	ip, pc, #0, 12
    232c:	add	ip, ip, #40, 20	; 0x28000
    2330:	ldr	pc, [ip, #3496]!	; 0xda8

00002334 <exit@plt>:
    2334:	add	ip, pc, #0, 12
    2338:	add	ip, ip, #40, 20	; 0x28000
    233c:	ldr	pc, [ip, #3488]!	; 0xda0

00002340 <btbb_packet_get_payload_length@plt>:
    2340:	add	ip, pc, #0, 12
    2344:	add	ip, ip, #40, 20	; 0x28000
    2348:	ldr	pc, [ip, #3480]!	; 0xd98

0000234c <strlen@plt>:
    234c:	add	ip, pc, #0, 12
    2350:	add	ip, ip, #40, 20	; 0x28000
    2354:	ldr	pc, [ip, #3472]!	; 0xd90

00002358 <btbb_decode_header@plt>:
    2358:	add	ip, pc, #0, 12
    235c:	add	ip, ip, #40, 20	; 0x28000
    2360:	ldr	pc, [ip, #3464]!	; 0xd88

00002364 <mmap@plt>:
    2364:	add	ip, pc, #0, 12
    2368:	add	ip, ip, #40, 20	; 0x28000
    236c:	ldr	pc, [ip, #3456]!	; 0xd80

00002370 <btbb_packet_get_header_packed@plt>:
    2370:	add	ip, pc, #0, 12
    2374:	add	ip, ip, #40, 20	; 0x28000
    2378:	ldr	pc, [ip, #3448]!	; 0xd78

0000237c <lell_pcapng_record_connect_req@plt>:
    237c:	add	ip, pc, #0, 12
    2380:	add	ip, ip, #40, 20	; 0x28000
    2384:	ldr	pc, [ip, #3440]!	; 0xd70

00002388 <lell_get_channel_k@plt>:
    2388:	add	ip, pc, #0, 12
    238c:	add	ip, ip, #40, 20	; 0x28000
    2390:	ldr	pc, [ip, #3432]!	; 0xd68

00002394 <fprintf@plt>:
    2394:	add	ip, pc, #0, 12
    2398:	add	ip, ip, #40, 20	; 0x28000
    239c:	ldr	pc, [ip, #3424]!	; 0xd60

000023a0 <getpagesize@plt>:
    23a0:	add	ip, pc, #0, 12
    23a4:	add	ip, ip, #40, 20	; 0x28000
    23a8:	ldr	pc, [ip, #3416]!	; 0xd58

000023ac <pcapng_append_packet@plt>:
    23ac:	add	ip, pc, #0, 12
    23b0:	add	ip, ip, #40, 20	; 0x28000
    23b4:	ldr	pc, [ip, #3408]!	; 0xd50

000023b8 <btbb_packet_get_transport@plt>:
    23b8:	add	ip, pc, #0, 12
    23bc:	add	ip, ip, #40, 20	; 0x28000
    23c0:	ldr	pc, [ip, #3400]!	; 0xd48

000023c4 <__errno_location@plt>:
    23c4:	add	ip, pc, #0, 12
    23c8:	add	ip, ip, #40, 20	; 0x28000
    23cc:	ldr	pc, [ip, #3392]!	; 0xd40

000023d0 <find_known_lap@plt>:
    23d0:	add	ip, pc, #0, 12
    23d4:	add	ip, ip, #40, 20	; 0x28000
    23d8:	ldr	pc, [ip, #3384]!	; 0xd38

000023dc <address_precalc@plt>:
    23dc:	add	ip, pc, #0, 12
    23e0:	add	ip, ip, #40, 20	; 0x28000
    23e4:	ldr	pc, [ip, #3376]!	; 0xd30

000023e8 <memset@plt>:
    23e8:	add	ip, pc, #0, 12
    23ec:	add	ip, ip, #40, 20	; 0x28000
    23f0:	ldr	pc, [ip, #3368]!	; 0xd28

000023f4 <putchar@plt>:
    23f4:	add	ip, pc, #0, 12
    23f8:	add	ip, ip, #40, 20	; 0x28000
    23fc:	ldr	pc, [ip, #3360]!	; 0xd20

00002400 <strncpy@plt>:
    2400:	add	ip, pc, #0, 12
    2404:	add	ip, ip, #40, 20	; 0x28000
    2408:	ldr	pc, [ip, #3352]!	; 0xd18

0000240c <EV3@plt>:
    240c:	add	ip, pc, #0, 12
    2410:	add	ip, ip, #40, 20	; 0x28000
    2414:	ldr	pc, [ip, #3344]!	; 0xd10

00002418 <btbb_packet_get_lap@plt>:
    2418:	add	ip, pc, #0, 12
    241c:	add	ip, ip, #40, 20	; 0x28000
    2420:	ldr	pc, [ip, #3336]!	; 0xd08

00002424 <lell_packet_new@plt>:
    2424:	add	ip, pc, #0, 12
    2428:	add	ip, ip, #40, 20	; 0x28000
    242c:	ldr	pc, [ip, #3328]!	; 0xd00

00002430 <bt_compidtostr@plt>:
    2430:	add	ip, pc, #0, 12
    2434:	add	ip, ip, #40, 20	; 0x28000
    2438:	ldr	pc, [ip, #3320]!	; 0xcf8

0000243c <write@plt>:
    243c:	add	ip, pc, #0, 12
    2440:	add	ip, ip, #40, 20	; 0x28000
    2444:	ldr	pc, [ip, #3312]!	; 0xcf0

00002448 <get_piconet@plt>:
    2448:	add	ip, pc, #0, 12
    244c:	add	ip, ip, #40, 20	; 0x28000
    2450:	ldr	pc, [ip, #3304]!	; 0xce8

00002454 <perm5@plt>:
    2454:	add	ip, pc, #0, 12
    2458:	add	ip, ip, #40, 20	; 0x28000
    245c:	ldr	pc, [ip, #3296]!	; 0xce0

00002460 <fclose@plt>:
    2460:	add	ip, pc, #0, 12
    2464:	add	ip, ip, #40, 20	; 0x28000
    2468:	ldr	pc, [ip, #3288]!	; 0xcd8

0000246c <EV5@plt>:
    246c:	add	ip, pc, #0, 12
    2470:	add	ip, ip, #40, 20	; 0x28000
    2474:	ldr	pc, [ip, #3280]!	; 0xcd0

00002478 <munmap@plt>:
    2478:	add	ip, pc, #0, 12
    247c:	add	ip, ip, #40, 20	; 0x28000
    2480:	ldr	pc, [ip, #3272]!	; 0xcc8

00002484 <DH@plt>:
    2484:	add	ip, pc, #0, 12
    2488:	add	ip, ip, #40, 20	; 0x28000
    248c:	ldr	pc, [ip, #3264]!	; 0xcc0

00002490 <btbb_packet_get_channel@plt>:
    2490:	add	ip, pc, #0, 12
    2494:	add	ip, ip, #40, 20	; 0x28000
    2498:	ldr	pc, [ip, #3256]!	; 0xcb8

0000249c <precalc@plt>:
    249c:	add	ip, pc, #0, 12
    24a0:	add	ip, ip, #40, 20	; 0x28000
    24a4:	ldr	pc, [ip, #3248]!	; 0xcb0

000024a8 <btbb_decode_payload@plt>:
    24a8:	add	ip, pc, #0, 12
    24ac:	add	ip, ip, #40, 20	; 0x28000
    24b0:	ldr	pc, [ip, #3240]!	; 0xca8

000024b4 <promiscuous_packet_search@plt>:
    24b4:	add	ip, pc, #0, 12
    24b8:	add	ip, ip, #40, 20	; 0x28000
    24bc:	ldr	pc, [ip, #3232]!	; 0xca0

000024c0 <pcapng_close@plt>:
    24c0:	add	ip, pc, #0, 12
    24c4:	add	ip, ip, #40, 20	; 0x28000
    24c8:	ldr	pc, [ip, #3224]!	; 0xc98

000024cc <btbb_print_packet@plt>:
    24cc:	add	ip, pc, #0, 12
    24d0:	add	ip, ip, #40, 20	; 0x28000
    24d4:	ldr	pc, [ip, #3216]!	; 0xc90

000024d8 <fast_perm@plt>:
    24d8:	add	ip, pc, #0, 12
    24dc:	add	ip, ip, #40, 20	; 0x28000
    24e0:	ldr	pc, [ip, #3208]!	; 0xc88

000024e4 <try_clock@plt>:
    24e4:	add	ip, pc, #0, 12
    24e8:	add	ip, ip, #40, 20	; 0x28000
    24ec:	ldr	pc, [ip, #3200]!	; 0xc80

000024f0 <btbb_init_hop_reversal@plt>:
    24f0:	add	ip, pc, #0, 12
    24f4:	add	ip, ip, #40, 20	; 0x28000
    24f8:	ldr	pc, [ip, #3192]!	; 0xc78

000024fc <btbb_init_piconet@plt>:
    24fc:	add	ip, pc, #0, 12
    2500:	add	ip, ip, #40, 20	; 0x28000
    2504:	ldr	pc, [ip, #3184]!	; 0xc70

00002508 <close@plt>:
    2508:	add	ip, pc, #0, 12
    250c:	add	ip, ip, #40, 20	; 0x28000
    2510:	ldr	pc, [ip, #3176]!	; 0xc68

00002514 <__assert_fail@plt>:
    2514:	add	ip, pc, #0, 12
    2518:	add	ip, ip, #40, 20	; 0x28000
    251c:	ldr	pc, [ip, #3168]!	; 0xc60

Disassembly of section .text:

00002520 <btbb_gen_syncword@@Base-0x1708>:
    2520:	ldr	r3, [pc, #20]	; 253c <__assert_fail@plt+0x28>
    2524:	ldr	r2, [pc, #20]	; 2540 <__assert_fail@plt+0x2c>
    2528:	add	r3, pc, r3
    252c:	ldr	r2, [r3, r2]
    2530:	cmp	r2, #0
    2534:	bxeq	lr
    2538:	b	2310 <__gmon_start__@plt>
    253c:	ldrdeq	r8, [r2], -r0
    2540:	muleq	r0, r4, r1
    2544:	ldr	r3, [pc, #52]	; 2580 <__assert_fail@plt+0x6c>
    2548:	ldr	r0, [pc, #52]	; 2584 <__assert_fail@plt+0x70>
    254c:	add	r3, pc, r3
    2550:	add	r0, pc, r0
    2554:	add	r3, r3, #3
    2558:	sub	r3, r3, r0
    255c:	cmp	r3, #6
    2560:	ldr	r3, [pc, #32]	; 2588 <__assert_fail@plt+0x74>
    2564:	add	r3, pc, r3
    2568:	bxls	lr
    256c:	ldr	r2, [pc, #24]	; 258c <__assert_fail@plt+0x78>
    2570:	ldr	r3, [r3, r2]
    2574:	cmp	r3, #0
    2578:	bxeq	lr
    257c:	bx	r3
    2580:	andeq	r8, r2, r8, asr ip
    2584:	andeq	r8, r2, r4, asr ip
    2588:	muleq	r2, r4, sl
    258c:	andeq	r0, r0, r4, lsl #3
    2590:	ldr	r1, [pc, #56]	; 25d0 <__assert_fail@plt+0xbc>
    2594:	ldr	r0, [pc, #56]	; 25d4 <__assert_fail@plt+0xc0>
    2598:	add	r1, pc, r1
    259c:	add	r0, pc, r0
    25a0:	sub	r1, r1, r0
    25a4:	ldr	r3, [pc, #44]	; 25d8 <__assert_fail@plt+0xc4>
    25a8:	asr	r1, r1, #2
    25ac:	add	r3, pc, r3
    25b0:	add	r1, r1, r1, lsr #31
    25b4:	asrs	r1, r1, #1
    25b8:	bxeq	lr
    25bc:	ldr	r2, [pc, #24]	; 25dc <__assert_fail@plt+0xc8>
    25c0:	ldr	r3, [r3, r2]
    25c4:	cmp	r3, #0
    25c8:	bxeq	lr
    25cc:	bx	r3
    25d0:	andeq	r8, r2, ip, lsl #24
    25d4:	andeq	r8, r2, r8, lsl #24
    25d8:	andeq	r8, r2, ip, asr #20
    25dc:	andeq	r0, r0, r0, lsr #3
    25e0:	ldr	r3, [pc, #76]	; 2634 <__assert_fail@plt+0x120>
    25e4:	ldr	r2, [pc, #76]	; 2638 <__assert_fail@plt+0x124>
    25e8:	add	r3, pc, r3
    25ec:	add	r2, pc, r2
    25f0:	ldrb	r3, [r3]
    25f4:	cmp	r3, #0
    25f8:	bxne	lr
    25fc:	ldr	r3, [pc, #56]	; 263c <__assert_fail@plt+0x128>
    2600:	push	{r4, lr}
    2604:	ldr	r3, [r2, r3]
    2608:	cmp	r3, #0
    260c:	beq	261c <__assert_fail@plt+0x108>
    2610:	ldr	r3, [pc, #40]	; 2640 <__assert_fail@plt+0x12c>
    2614:	ldr	r0, [pc, r3]
    2618:	bl	2100 <__cxa_finalize@plt>
    261c:	bl	2544 <__assert_fail@plt+0x30>
    2620:	ldr	r3, [pc, #28]	; 2644 <__assert_fail@plt+0x130>
    2624:	mov	r2, #1
    2628:	add	r3, pc, r3
    262c:	strb	r2, [r3]
    2630:	pop	{r4, pc}
    2634:			; <UNDEFINED> instruction: 0x00028bbc
    2638:	andeq	r8, r2, ip, lsl #20
    263c:	andeq	r0, r0, r0, lsl #3
    2640:	andeq	r8, r2, r8, lsl #23
    2644:	andeq	r8, r2, ip, ror fp
    2648:	ldr	r0, [pc, #56]	; 2688 <__assert_fail@plt+0x174>
    264c:	ldr	r3, [pc, #56]	; 268c <__assert_fail@plt+0x178>
    2650:	add	r0, pc, r0
    2654:	ldr	r2, [r0]
    2658:	add	r3, pc, r3
    265c:	cmp	r2, #0
    2660:	bne	2668 <__assert_fail@plt+0x154>
    2664:	b	2590 <__assert_fail@plt+0x7c>
    2668:	ldr	r2, [pc, #32]	; 2690 <__assert_fail@plt+0x17c>
    266c:	ldr	r3, [r3, r2]
    2670:	cmp	r3, #0
    2674:	beq	2664 <__assert_fail@plt+0x150>
    2678:	push	{r4, lr}
    267c:	blx	r3
    2680:	pop	{r4, lr}
    2684:	b	2590 <__assert_fail@plt+0x7c>
    2688:	ldrdeq	r8, [r2], -ip
    268c:	andeq	r8, r2, r0, lsr #19
    2690:	muleq	r0, r8, r1
    2694:	andeq	r0, r0, r0
    2698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    269c:	mov	r6, r0
    26a0:	sub	sp, sp, #28
    26a4:	mov	r0, #48	; 0x30
    26a8:	mov	r7, r1
    26ac:	mov	r4, r2
    26b0:	mov	r5, r3
    26b4:	bl	22e0 <malloc@plt>
    26b8:	ldr	r3, [pc, #896]	; 2a40 <__assert_fail@plt+0x52c>
    26bc:	mov	r1, #0
    26c0:	add	r3, pc, r3
    26c4:	mov	r2, #8
    26c8:	ldr	ip, [r3]
    26cc:	cmp	ip, r1
    26d0:	str	r0, [sp, #20]
    26d4:	strd	r6, [r0]
    26d8:	strd	r4, [r0, #8]
    26dc:	str	r0, [r0, #36]	; 0x24
    26e0:	str	r1, [r0, #24]
    26e4:	str	r2, [r0, #40]	; 0x28
    26e8:	beq	29a8 <__assert_fail@plt+0x494>
    26ec:	ldr	sl, [ip, #16]
    26f0:	mov	r7, r0
    26f4:	add	r4, r0, #16
    26f8:	ldr	r2, [sl, #16]
    26fc:	ldr	r3, [sl, #20]
    2700:	sub	r3, r2, r3
    2704:	str	r0, [r2, #8]
    2708:	str	r3, [r0, #20]
    270c:	str	r4, [sl, #16]
    2710:	ldr	r3, [sl, #12]
    2714:	ldr	r1, [pc, #808]	; 2a44 <__assert_fail@plt+0x530>
    2718:	add	r3, r3, #1
    271c:	str	r3, [sl, #12]
    2720:	ldrb	r3, [r7, #4]
    2724:	ldrb	r0, [r7, #7]
    2728:	ldrb	r6, [r7]
    272c:	ldrb	r2, [r7, #3]
    2730:	add	r1, r3, r1
    2734:	ldr	r3, [pc, #780]	; 2a48 <__assert_fail@plt+0x534>
    2738:	ldrb	r5, [r7, #6]
    273c:	ldrb	lr, [r7, #2]
    2740:	add	r3, r6, r3
    2744:	add	r0, r1, r0, lsl #24
    2748:	add	r2, r3, r2, lsl #24
    274c:	ldrb	r1, [r7, #5]
    2750:	ldrb	r3, [r7, #1]
    2754:	add	r0, r0, r5, lsl #16
    2758:	add	r2, r2, lr, lsl #16
    275c:	add	r0, r0, r1, lsl #8
    2760:	add	r2, r2, r3, lsl #8
    2764:	ldr	r1, [pc, #736]	; 2a4c <__assert_fail@plt+0x538>
    2768:	ldr	r3, [pc, #736]	; 2a50 <__assert_fail@plt+0x53c>
    276c:	sub	r2, r2, r0
    2770:	eor	r1, r1, r2
    2774:	add	r3, r0, r3
    2778:	ldr	r2, [pc, #724]	; 2a54 <__assert_fail@plt+0x540>
    277c:	sub	r3, r3, r1
    2780:	eor	r3, r3, r1, lsl #8
    2784:	sub	r2, r2, r1
    2788:	sub	r2, r2, r3
    278c:	eor	r2, r2, r3, lsr #13
    2790:	sub	r1, r1, r3
    2794:	sub	r1, r1, r2
    2798:	eor	r1, r1, r2, lsr #12
    279c:	sub	r3, r3, r2
    27a0:	sub	r3, r3, r1
    27a4:	eor	r3, r3, r1, lsl #16
    27a8:	sub	r2, r2, r1
    27ac:	sub	r2, r2, r3
    27b0:	eor	r2, r2, r3, lsr #5
    27b4:	sub	r1, r1, r3
    27b8:	str	sl, [r7, #16]
    27bc:	sub	r1, r1, r2
    27c0:	ldr	r0, [ip, #16]
    27c4:	eor	r1, r1, r2, lsr #3
    27c8:	sub	r3, r3, r2
    27cc:	sub	r3, r3, r1
    27d0:	eor	r3, r3, r1, lsl #10
    27d4:	sub	r2, r2, r1
    27d8:	ldr	r1, [r0, #4]
    27dc:	sub	r2, r2, r3
    27e0:	eor	r3, r2, r3, lsr #15
    27e4:	sub	r2, r1, #1
    27e8:	and	r2, r2, r3
    27ec:	ldr	r0, [r0]
    27f0:	add	r2, r2, r2, lsl #1
    27f4:	mov	r5, #0
    27f8:	lsl	r2, r2, #2
    27fc:	add	ip, r0, r2
    2800:	ldr	lr, [r0, r2]
    2804:	ldr	r1, [ip, #4]
    2808:	str	r3, [r7, #44]	; 0x2c
    280c:	ldr	r3, [ip, #8]
    2810:	cmp	lr, r5
    2814:	add	r3, r3, #1
    2818:	add	r1, r1, #1
    281c:	add	r3, r3, r3, lsl #2
    2820:	str	r1, [ip, #4]
    2824:	str	lr, [r7, #32]
    2828:	str	r5, [r7, #28]
    282c:	strne	r4, [lr, #12]
    2830:	cmp	r1, r3, lsl #1
    2834:	str	r4, [r0, r2]
    2838:	bcc	29a0 <__assert_fail@plt+0x48c>
    283c:	ldr	r3, [sl, #36]	; 0x24
    2840:	cmp	r3, #1
    2844:	beq	29a0 <__assert_fail@plt+0x48c>
    2848:	ldr	r0, [sl, #4]
    284c:	mov	r1, #1
    2850:	add	r0, r0, r0, lsl r1
    2854:	lsl	r0, r0, #3
    2858:	bl	20c4 <calloc@plt>
    285c:	subs	r7, r0, #0
    2860:	beq	2a38 <__assert_fail@plt+0x524>
    2864:	ldr	r1, [sl, #4]
    2868:	ldr	ip, [sl, #12]
    286c:	ldr	r0, [sl, #8]
    2870:	lsl	r2, r1, #1
    2874:	sub	r3, r2, #1
    2878:	tst	ip, r3
    287c:	add	r0, r0, #1
    2880:	movne	r9, #1
    2884:	moveq	r9, #0
    2888:	add	r9, r9, ip, lsr r0
    288c:	cmp	r1, #0
    2890:	mov	r0, #0
    2894:	str	r9, [sl, #24]
    2898:	str	r0, [sl, #28]
    289c:	beq	2a28 <__assert_fail@plt+0x514>
    28a0:	add	r2, r2, r1
    28a4:	mov	fp, r0
    28a8:	ldr	r1, [sl]
    28ac:	lsl	r2, r2, #2
    28b0:	str	r0, [sp, #8]
    28b4:	str	r1, [sp, #12]
    28b8:	str	r2, [sp, #16]
    28bc:	ldr	r2, [sp, #12]
    28c0:	ldr	r1, [sp, #8]
    28c4:	ldr	r5, [r2, r1]
    28c8:	cmp	r5, #0
    28cc:	beq	2938 <__assert_fail@plt+0x424>
    28d0:	ldr	r4, [r5, #28]
    28d4:	ldr	r8, [r5, #16]
    28d8:	and	r4, r4, r3
    28dc:	add	r4, r4, r4, lsl #1
    28e0:	add	r6, r7, r4, lsl #2
    28e4:	ldr	r0, [r6, #4]
    28e8:	add	r0, r0, #1
    28ec:	cmp	r9, r0
    28f0:	str	r0, [r6, #4]
    28f4:	bcs	2918 <__assert_fail@plt+0x404>
    28f8:	ldr	r2, [sl, #28]
    28fc:	mov	r1, r9
    2900:	add	r2, r2, #1
    2904:	str	r2, [sl, #28]
    2908:	str	r3, [sp, #4]
    290c:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
    2910:	ldr	r3, [sp, #4]
    2914:	str	r0, [r6, #8]
    2918:	ldr	r2, [r7, r4, lsl #2]
    291c:	str	fp, [r5, #12]
    2920:	cmp	r2, #0
    2924:	str	r2, [r5, #16]
    2928:	strne	r5, [r2, #12]
    292c:	str	r5, [r7, r4, lsl #2]
    2930:	subs	r5, r8, #0
    2934:	bne	28d0 <__assert_fail@plt+0x3bc>
    2938:	ldr	r2, [sp, #8]
    293c:	ldr	r1, [sp, #16]
    2940:	add	r2, r2, #12
    2944:	cmp	r2, r1
    2948:	str	r2, [sp, #8]
    294c:	bne	28bc <__assert_fail@plt+0x3a8>
    2950:	ldr	r0, [sp, #12]
    2954:	bl	2160 <free@plt>
    2958:	ldr	r3, [sp, #20]
    295c:	ldr	r3, [r3, #16]
    2960:	ldmib	r3, {r1, r2, ip}
    2964:	ldr	r0, [r3, #28]
    2968:	str	r7, [r3]
    296c:	add	r2, r2, #1
    2970:	lsl	r1, r1, #1
    2974:	cmp	r0, ip, lsr #1
    2978:	stmib	r3, {r1, r2}
    297c:	movls	r2, #0
    2980:	strls	r2, [r3, #32]
    2984:	bls	29a0 <__assert_fail@plt+0x48c>
    2988:	ldr	r2, [r3, #32]
    298c:	add	r2, r2, #1
    2990:	cmp	r2, #1
    2994:	str	r2, [r3, #32]
    2998:	movhi	r2, #1
    299c:	strhi	r2, [r3, #36]	; 0x24
    29a0:	add	sp, sp, #28
    29a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    29a8:	mov	r4, r0
    29ac:	mov	r1, #1
    29b0:	mov	r0, #44	; 0x2c
    29b4:	str	ip, [r4, #20]
    29b8:	str	r4, [r3]
    29bc:	bl	20c4 <calloc@plt>
    29c0:	mov	r2, r4
    29c4:	cmp	r0, #0
    29c8:	mov	r5, r0
    29cc:	str	r0, [r2, #16]
    29d0:	beq	2a38 <__assert_fail@plt+0x524>
    29d4:	ldr	r6, [sp, #20]
    29d8:	mov	ip, #32
    29dc:	mov	r2, #5
    29e0:	mov	r3, #16
    29e4:	add	r4, r6, #16
    29e8:	mov	r1, #1
    29ec:	mov	r0, #384	; 0x180
    29f0:	str	r4, [r5, #16]
    29f4:	str	ip, [r5, #4]
    29f8:	str	r2, [r5, #8]
    29fc:	str	r3, [r5, #20]
    2a00:	bl	20c4 <calloc@plt>
    2a04:	cmp	r0, #0
    2a08:	str	r0, [r5]
    2a0c:	beq	2a38 <__assert_fail@plt+0x524>
    2a10:	ldr	r3, [pc, #64]	; 2a58 <__assert_fail@plt+0x544>
    2a14:	mov	sl, r5
    2a18:	str	r3, [r5, #40]	; 0x28
    2a1c:	mov	ip, r6
    2a20:	ldr	r7, [sp, #20]
    2a24:	b	2710 <__assert_fail@plt+0x1fc>
    2a28:	ldr	r3, [sl]
    2a2c:	str	r3, [sp, #12]
    2a30:	mov	r0, r3
    2a34:	b	2954 <__assert_fail@plt+0x440>
    2a38:	mvn	r0, #0
    2a3c:	bl	2334 <exit@plt>
    2a40:	andeq	r8, r2, r8, ror #21
    2a44:			; <UNDEFINED> instruction: 0x9e3779b9
    2a48:	svcls	0x0049bac2
    2a4c:	andeq	pc, r7, sp, ror #14
    2a50:	tsteq	r2, r9, lsl #2
    2a54:	mcr2	14, 7, fp, cr13, cr7, {7}
    2a58:	andsge	r1, r1, r1, ror #31
    2a5c:	ldr	r3, [pc, #736]	; 2d44 <__assert_fail@plt+0x830>
    2a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a64:	sub	sp, sp, #28
    2a68:	smull	r3, r2, r3, r1
    2a6c:	str	r1, [sp, #16]
    2a70:	asr	r3, r1, #31
    2a74:	rsb	r3, r3, r2, asr #2
    2a78:	mov	r4, r0
    2a7c:	add	r3, r3, r3, lsl #2
    2a80:	sub	r3, r1, r3, lsl #1
    2a84:	ands	r3, r3, #255	; 0xff
    2a88:	rsbne	r3, r3, #10
    2a8c:	movne	r2, r1
    2a90:	addne	r3, r2, r3
    2a94:	strne	r3, [sp, #16]
    2a98:	ldr	r5, [sp, #16]
    2a9c:	mov	r0, r5
    2aa0:	bl	22e0 <malloc@plt>
    2aa4:	cmp	r5, #0
    2aa8:	mov	r3, r5
    2aac:	movgt	r3, #0
    2ab0:	strgt	r3, [sp, #12]
    2ab4:	str	r0, [sp, #20]
    2ab8:	ble	2ca8 <__assert_fail@plt+0x794>
    2abc:	ldrb	r3, [r4, #2]
    2ac0:	ldrb	r2, [r4, #1]
    2ac4:	ldrb	r1, [r4]
    2ac8:	str	r3, [sp, #8]
    2acc:	lsl	r3, r3, #2
    2ad0:	str	r2, [sp, #4]
    2ad4:	orr	r3, r3, r2, lsl #1
    2ad8:	ldrb	r2, [r4, #12]
    2adc:	ldrb	sl, [r4, #11]
    2ae0:	mov	r5, r1
    2ae4:	ldrb	r1, [r4, #3]
    2ae8:	ldrb	ip, [r4, #4]
    2aec:	ldrb	r9, [r4, #10]
    2af0:	ldrb	lr, [r4, #5]
    2af4:	lsl	r2, r2, #2
    2af8:	str	r5, [sp]
    2afc:	orr	r3, r3, r5
    2b00:	orr	r2, r2, sl, lsl #1
    2b04:	ldrb	r5, [r4, #6]
    2b08:	ldrb	sl, [r4, #13]
    2b0c:	ldrb	r6, [r4, #7]
    2b10:	orr	r2, r2, r9
    2b14:	orr	r3, r3, r1, lsl #3
    2b18:	ldrb	r9, [r4, #14]
    2b1c:	ldrb	r7, [r4, #8]
    2b20:	orr	r3, r3, ip, lsl #4
    2b24:	ldrb	r8, [r4, #9]
    2b28:	orr	r3, r3, lr, lsl #5
    2b2c:	orr	r2, r2, sl, lsl #3
    2b30:	orr	r3, r3, r5, lsl #6
    2b34:	orr	r2, r2, r9, lsl #4
    2b38:	orr	r3, r3, r6, lsl #7
    2b3c:	ldrb	r9, [sp, #8]
    2b40:	orr	r3, r3, r7, lsl #8
    2b44:	orr	r3, r3, r8, lsl #9
    2b48:	strb	r9, [r0, #2]
    2b4c:	ldrb	r9, [sp, #4]
    2b50:	uxth	r3, r3
    2b54:	and	fp, r3, #1
    2b58:	ldr	sl, [pc, #488]	; 2d48 <__assert_fail@plt+0x834>
    2b5c:	cmp	fp, #0
    2b60:	strb	r9, [r0, #1]
    2b64:	ldr	fp, [pc, #480]	; 2d4c <__assert_fail@plt+0x838>
    2b68:	ldrb	r9, [sp]
    2b6c:	movne	fp, sl
    2b70:	ldr	sl, [pc, #472]	; 2d50 <__assert_fail@plt+0x83c>
    2b74:	moveq	sl, #0
    2b78:	tst	r3, #2
    2b7c:	movne	sl, fp
    2b80:	tst	r3, #4
    2b84:	strb	r9, [r0]
    2b88:	strb	r1, [r0, #3]
    2b8c:	strb	ip, [r0, #4]
    2b90:	strb	lr, [r0, #5]
    2b94:	strb	r5, [r0, #6]
    2b98:	strb	r6, [r0, #7]
    2b9c:	strb	r7, [r0, #8]
    2ba0:	strb	r8, [r0, #9]
    2ba4:	uxtb	r2, r2
    2ba8:	eorne	sl, sl, #7168	; 0x1c00
    2bac:	eorne	sl, sl, #4
    2bb0:	tst	r3, #8
    2bb4:	eorne	sl, sl, #14336	; 0x3800
    2bb8:	eorne	sl, sl, #8
    2bbc:	tst	r3, #16
    2bc0:	eorne	sl, sl, #28672	; 0x7000
    2bc4:	eorne	sl, sl, #16
    2bc8:	tst	r3, #32
    2bcc:	eorne	sl, sl, #19456	; 0x4c00
    2bd0:	eorne	sl, sl, #32
    2bd4:	tst	r3, #64	; 0x40
    2bd8:	eorne	sl, sl, #13376	; 0x3440
    2bdc:	tst	r3, #128	; 0x80
    2be0:	eorne	sl, sl, #26624	; 0x6800
    2be4:	eorne	sl, sl, #128	; 0x80
    2be8:	tst	r3, #256	; 0x100
    2bec:	eorne	sl, sl, #32000	; 0x7d00
    2bf0:	tst	r3, #512	; 0x200
    2bf4:	eorne	sl, sl, #22016	; 0x5600
    2bf8:	eor	r2, r2, sl, lsr #10
    2bfc:	sub	r3, r2, #1
    2c00:	tst	r3, r2
    2c04:	beq	2c84 <__assert_fail@plt+0x770>
    2c08:	sub	r2, r2, #7
    2c0c:	cmp	r2, #24
    2c10:	addls	pc, pc, r2, lsl #2
    2c14:	b	2d28 <__assert_fail@plt+0x814>
    2c18:	b	2d18 <__assert_fail@plt+0x804>
    2c1c:	b	2d28 <__assert_fail@plt+0x814>
    2c20:	b	2d28 <__assert_fail@plt+0x814>
    2c24:	b	2d28 <__assert_fail@plt+0x814>
    2c28:	b	2d08 <__assert_fail@plt+0x7f4>
    2c2c:	b	2d28 <__assert_fail@plt+0x814>
    2c30:	b	2cfc <__assert_fail@plt+0x7e8>
    2c34:	b	2cf0 <__assert_fail@plt+0x7dc>
    2c38:	b	2d28 <__assert_fail@plt+0x814>
    2c3c:	b	2d28 <__assert_fail@plt+0x814>
    2c40:	b	2d28 <__assert_fail@plt+0x814>
    2c44:	b	2d28 <__assert_fail@plt+0x814>
    2c48:	b	2ce4 <__assert_fail@plt+0x7d0>
    2c4c:	b	2d28 <__assert_fail@plt+0x814>
    2c50:	b	2cd8 <__assert_fail@plt+0x7c4>
    2c54:	b	2cc8 <__assert_fail@plt+0x7b4>
    2c58:	b	2d28 <__assert_fail@plt+0x814>
    2c5c:	b	2d28 <__assert_fail@plt+0x814>
    2c60:	b	2d28 <__assert_fail@plt+0x814>
    2c64:	b	2c7c <__assert_fail@plt+0x768>
    2c68:	b	2d28 <__assert_fail@plt+0x814>
    2c6c:	b	2cbc <__assert_fail@plt+0x7a8>
    2c70:	b	2d28 <__assert_fail@plt+0x814>
    2c74:	b	2d28 <__assert_fail@plt+0x814>
    2c78:	b	2cb0 <__assert_fail@plt+0x79c>
    2c7c:	eor	r6, r6, #1
    2c80:	strb	r6, [r0, #7]
    2c84:	ldr	r3, [sp, #12]
    2c88:	ldr	r2, [sp, #16]
    2c8c:	add	r3, r3, #10
    2c90:	cmp	r2, r3
    2c94:	str	r3, [sp, #12]
    2c98:	add	r4, r4, #15
    2c9c:	add	r0, r0, #10
    2ca0:	bgt	2abc <__assert_fail@plt+0x5a8>
    2ca4:	ldr	r0, [sp, #20]
    2ca8:	add	sp, sp, #28
    2cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2cb0:	eor	r7, r7, #1
    2cb4:	strb	r7, [r0, #8]
    2cb8:	b	2c84 <__assert_fail@plt+0x770>
    2cbc:	eor	ip, ip, #1
    2cc0:	strb	ip, [r0, #4]
    2cc4:	b	2c84 <__assert_fail@plt+0x770>
    2cc8:	ldr	r3, [sp, #4]
    2ccc:	eor	r3, r3, #1
    2cd0:	strb	r3, [r0, #1]
    2cd4:	b	2c84 <__assert_fail@plt+0x770>
    2cd8:	eor	r8, r8, #1
    2cdc:	strb	r8, [r0, #9]
    2ce0:	b	2c84 <__assert_fail@plt+0x770>
    2ce4:	eor	lr, lr, #1
    2ce8:	strb	lr, [r0, #5]
    2cec:	b	2c84 <__assert_fail@plt+0x770>
    2cf0:	eor	r1, r1, #1
    2cf4:	strb	r1, [r0, #3]
    2cf8:	b	2c84 <__assert_fail@plt+0x770>
    2cfc:	eor	r5, r5, #1
    2d00:	strb	r5, [r0, #6]
    2d04:	b	2c84 <__assert_fail@plt+0x770>
    2d08:	ldr	r3, [sp]
    2d0c:	eor	r3, r3, #1
    2d10:	strb	r3, [r0]
    2d14:	b	2c84 <__assert_fail@plt+0x770>
    2d18:	ldr	r3, [sp, #8]
    2d1c:	eor	r3, r3, #1
    2d20:	strb	r3, [r0, #2]
    2d24:	b	2c84 <__assert_fail@plt+0x770>
    2d28:	ldr	r0, [sp, #20]
    2d2c:	bl	2160 <free@plt>
    2d30:	mov	r3, #0
    2d34:	mov	r0, r3
    2d38:	str	r3, [sp, #20]
    2d3c:	add	sp, sp, #28
    2d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2d44:	strbtvs	r6, [r6], -r7, ror #12
    2d48:	andeq	r7, r0, r3, lsl #8
    2d4c:	andeq	r5, r0, r2, lsl #16
    2d50:	andeq	r2, r0, r1, lsl #24
    2d54:	push	{r4, lr}
    2d58:	ldrb	r2, [r0, #9]
    2d5c:	ldr	ip, [r0, #64]	; 0x40
    2d60:	sub	ip, ip, #2
    2d64:	lsl	r3, r2, #7
    2d68:	asr	r1, r2, #5
    2d6c:	orr	r3, r3, r2, lsr #7
    2d70:	and	r1, r1, #2
    2d74:	asr	r4, r2, #3
    2d78:	orr	r3, r3, r1
    2d7c:	and	r4, r4, #4
    2d80:	asr	r1, r2, #1
    2d84:	orr	r3, r3, r4
    2d88:	and	r1, r1, #8
    2d8c:	lsl	r4, r2, #1
    2d90:	orr	r3, r3, r1
    2d94:	and	r4, r4, #16
    2d98:	lsl	r1, r2, #3
    2d9c:	and	r1, r1, #32
    2da0:	orr	r3, r3, r4
    2da4:	lsl	r2, r2, #5
    2da8:	orr	r3, r3, r1
    2dac:	and	r1, r2, #64	; 0x40
    2db0:	orr	r3, r3, r1
    2db4:	lsl	ip, ip, #3
    2db8:	uxtb	r3, r3
    2dbc:	cmp	ip, #0
    2dc0:	lsl	r1, r3, #8
    2dc4:	ble	2e10 <__assert_fail@plt+0x8fc>
    2dc8:	add	lr, r0, #68	; 0x44
    2dcc:	mov	r2, #0
    2dd0:	ldrb	r4, [lr, r2]
    2dd4:	lsr	r3, r1, #1
    2dd8:	add	r2, r2, #1
    2ddc:	eor	r1, r1, r4
    2de0:	uxth	r2, r2
    2de4:	orr	r3, r3, r1, lsl #15
    2de8:	cmp	ip, r2
    2dec:	sxth	r3, r3
    2df0:	lsr	r1, r3, #5
    2df4:	and	r1, r1, #1024	; 0x400
    2df8:	eor	r3, r3, r1
    2dfc:	lsr	r1, r3, #12
    2e00:	and	r1, r1, #8
    2e04:	eor	r3, r3, r1
    2e08:	uxth	r1, r3
    2e0c:	bgt	2dd0 <__assert_fail@plt+0x8bc>
    2e10:	add	ip, ip, #68	; 0x44
    2e14:	add	r3, r0, ip
    2e18:	ldrb	r0, [r0, ip]
    2e1c:	ldrb	ip, [r3, #1]
    2e20:	ldrb	r2, [r3, #2]
    2e24:	ldrb	r4, [r3, #3]
    2e28:	ldrb	lr, [r3, #4]
    2e2c:	orr	r0, r0, ip, lsl #1
    2e30:	ldrb	ip, [r3, #5]
    2e34:	orr	r0, r0, r2, lsl #2
    2e38:	ldrb	r2, [r3, #6]
    2e3c:	orr	r0, r0, r4, lsl #3
    2e40:	ldrb	r4, [r3, #7]
    2e44:	orr	r0, r0, lr, lsl #4
    2e48:	ldrb	lr, [r3, #8]
    2e4c:	orr	r0, r0, ip, lsl #5
    2e50:	ldrb	ip, [r3, #9]
    2e54:	orr	r0, r0, r2, lsl #6
    2e58:	ldrb	r2, [r3, #10]
    2e5c:	orr	r0, r0, r4, lsl #7
    2e60:	ldrb	r4, [r3, #11]
    2e64:	orr	r0, r0, lr, lsl #8
    2e68:	ldrb	lr, [r3, #12]
    2e6c:	orr	r0, r0, ip, lsl #9
    2e70:	ldrb	ip, [r3, #13]
    2e74:	orr	r0, r0, r2, lsl #10
    2e78:	ldrb	r2, [r3, #14]
    2e7c:	orr	r0, r0, r4, lsl #11
    2e80:	ldrb	r3, [r3, #15]
    2e84:	orr	r0, r0, lr, lsl #12
    2e88:	orr	r0, r0, ip, lsl #13
    2e8c:	orr	r0, r0, r2, lsl #14
    2e90:	orr	r0, r0, r3, lsl #15
    2e94:	uxth	r0, r0
    2e98:	sub	r0, r0, r1
    2e9c:	clz	r0, r0
    2ea0:	lsr	r0, r0, #5
    2ea4:	pop	{r4, pc}
    2ea8:	cmp	r2, #57	; 0x39
    2eac:	bxgt	lr
    2eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2eb4:	sub	sp, sp, #556	; 0x22c
    2eb8:	add	ip, sp, #544	; 0x220
    2ebc:	add	sl, r2, #1
    2ec0:	strd	r0, [ip]
    2ec4:	ldr	r1, [pc, #1948]	; 3668 <__assert_fail@plt+0x1154>
    2ec8:	ldr	r0, [pc, #1948]	; 366c <__assert_fail@plt+0x1158>
    2ecc:	add	r1, pc, r1
    2ed0:	ldr	ip, [pc, #1944]	; 3670 <__assert_fail@plt+0x115c>
    2ed4:	add	r0, pc, r0
    2ed8:	add	r2, r1, #2048	; 0x800
    2edc:	add	ip, pc, ip
    2ee0:	str	r2, [sp, #524]	; 0x20c
    2ee4:	sub	r2, r0, #4080	; 0xff0
    2ee8:	str	r3, [sp, #100]	; 0x64
    2eec:	str	r2, [sp, #532]	; 0x214
    2ef0:	sub	r3, r3, #9
    2ef4:	add	r2, ip, #2048	; 0x800
    2ef8:	str	r1, [sp, #520]	; 0x208
    2efc:	str	r0, [sp, #528]	; 0x210
    2f00:	str	ip, [sp, #536]	; 0x218
    2f04:	str	r2, [sp, #540]	; 0x21c
    2f08:	str	r3, [sp, #112]	; 0x70
    2f0c:	strd	r6, [sp, #128]	; 0x80
    2f10:	strd	r4, [sp, #24]
    2f14:	mov	r2, #1
    2f18:	sub	r1, sl, #33	; 0x21
    2f1c:	ldr	r0, [sp, #100]	; 0x64
    2f20:	lsl	r1, r2, r1
    2f24:	sub	r3, sl, #1
    2f28:	str	r1, [sp, #236]	; 0xec
    2f2c:	cmp	r0, r2
    2f30:	rsb	r1, r3, #32
    2f34:	ldr	r0, [sp, #236]	; 0xec
    2f38:	lsl	r3, r2, r3
    2f3c:	orr	r1, r0, r2, lsr r1
    2f40:	str	r1, [sp, #236]	; 0xec
    2f44:	add	r1, sp, #544	; 0x220
    2f48:	str	r3, [sp, #232]	; 0xe8
    2f4c:	ldrd	r0, [r1]
    2f50:	ldrd	r2, [sp, #232]	; 0xe8
    2f54:	mov	lr, #0
    2f58:	orr	r3, r3, r1
    2f5c:	orr	r2, r2, r0
    2f60:	add	r1, sp, #288	; 0x120
    2f64:	strd	r2, [r1]
    2f68:	beq	3b40 <__assert_fail@plt+0x162c>
    2f6c:	cmp	sl, #58	; 0x3a
    2f70:	beq	3c20 <__assert_fail@plt+0x170c>
    2f74:	ldr	r3, [pc, #1784]	; 3674 <__assert_fail@plt+0x1160>
    2f78:	ldr	r2, [pc, #1784]	; 3678 <__assert_fail@plt+0x1164>
    2f7c:	add	r3, pc, r3
    2f80:	add	r1, sl, #1
    2f84:	add	r2, pc, r2
    2f88:	str	r3, [sp, #504]	; 0x1f8
    2f8c:	mov	fp, r1
    2f90:	sub	r3, r3, #4080	; 0xff0
    2f94:	str	r3, [sp, #508]	; 0x1fc
    2f98:	add	r3, r2, #2048	; 0x800
    2f9c:	str	r2, [sp, #512]	; 0x200
    2fa0:	str	r1, [sp, #460]	; 0x1cc
    2fa4:	str	r3, [sp, #516]	; 0x204
    2fa8:	mov	r2, #1
    2fac:	sub	r1, fp, #33	; 0x21
    2fb0:	ldr	r0, [sp, #100]	; 0x64
    2fb4:	lsl	r1, r2, r1
    2fb8:	sub	r3, fp, #1
    2fbc:	str	r1, [sp, #244]	; 0xf4
    2fc0:	cmp	r0, #2
    2fc4:	rsb	r1, r3, #32
    2fc8:	ldr	r0, [sp, #244]	; 0xf4
    2fcc:	lsl	r3, r2, r3
    2fd0:	orr	r1, r0, r2, lsr r1
    2fd4:	str	r3, [sp, #240]	; 0xf0
    2fd8:	add	r3, sp, #288	; 0x120
    2fdc:	str	r1, [sp, #244]	; 0xf4
    2fe0:	ldrd	r0, [sp, #240]	; 0xf0
    2fe4:	ldrd	r2, [r3]
    2fe8:	mov	lr, #0
    2fec:	orr	r3, r3, r1
    2ff0:	orr	r2, r2, r0
    2ff4:	add	r1, sp, #296	; 0x128
    2ff8:	strd	r2, [r1]
    2ffc:	beq	3a4c <__assert_fail@plt+0x1538>
    3000:	cmp	fp, #58	; 0x3a
    3004:	beq	3b38 <__assert_fail@plt+0x1624>
    3008:	ldr	r3, [pc, #1644]	; 367c <__assert_fail@plt+0x1168>
    300c:	ldr	r2, [pc, #1644]	; 3680 <__assert_fail@plt+0x116c>
    3010:	add	r3, pc, r3
    3014:	add	r1, fp, #1
    3018:	add	r2, pc, r2
    301c:	str	r3, [sp, #488]	; 0x1e8
    3020:	mov	fp, r1
    3024:	sub	r3, r3, #4080	; 0xff0
    3028:	str	r3, [sp, #492]	; 0x1ec
    302c:	add	r3, r2, #2048	; 0x800
    3030:	str	r2, [sp, #496]	; 0x1f0
    3034:	str	r1, [sp, #444]	; 0x1bc
    3038:	str	r3, [sp, #500]	; 0x1f4
    303c:	mov	r2, #1
    3040:	sub	r1, fp, #33	; 0x21
    3044:	ldr	r0, [sp, #100]	; 0x64
    3048:	lsl	r1, r2, r1
    304c:	sub	r3, fp, #1
    3050:	str	r1, [sp, #252]	; 0xfc
    3054:	cmp	r0, #3
    3058:	rsb	r1, r3, #32
    305c:	ldr	r0, [sp, #252]	; 0xfc
    3060:	lsl	r3, r2, r3
    3064:	orr	r1, r0, r2, lsr r1
    3068:	str	r3, [sp, #248]	; 0xf8
    306c:	add	r3, sp, #296	; 0x128
    3070:	str	r1, [sp, #252]	; 0xfc
    3074:	ldrd	r0, [sp, #248]	; 0xf8
    3078:	ldrd	r2, [r3]
    307c:	mov	lr, #0
    3080:	orr	r3, r3, r1
    3084:	orr	r2, r2, r0
    3088:	add	r1, sp, #304	; 0x130
    308c:	strd	r2, [r1]
    3090:	beq	3960 <__assert_fail@plt+0x144c>
    3094:	cmp	fp, #58	; 0x3a
    3098:	beq	3b30 <__assert_fail@plt+0x161c>
    309c:	ldr	r3, [pc, #1504]	; 3684 <__assert_fail@plt+0x1170>
    30a0:	ldr	r2, [pc, #1504]	; 3688 <__assert_fail@plt+0x1174>
    30a4:	add	r3, pc, r3
    30a8:	add	r1, fp, #1
    30ac:	add	r2, pc, r2
    30b0:	str	r3, [sp, #472]	; 0x1d8
    30b4:	mov	fp, r1
    30b8:	sub	r3, r3, #4080	; 0xff0
    30bc:	str	r3, [sp, #476]	; 0x1dc
    30c0:	add	r3, r2, #2048	; 0x800
    30c4:	str	r2, [sp, #480]	; 0x1e0
    30c8:	str	r1, [sp, #448]	; 0x1c0
    30cc:	str	r3, [sp, #484]	; 0x1e4
    30d0:	mov	r2, #1
    30d4:	sub	r1, fp, #33	; 0x21
    30d8:	ldr	r0, [sp, #100]	; 0x64
    30dc:	lsl	r1, r2, r1
    30e0:	sub	r3, fp, #1
    30e4:	str	r1, [sp, #260]	; 0x104
    30e8:	cmp	r0, #4
    30ec:	rsb	r1, r3, #32
    30f0:	ldr	r0, [sp, #260]	; 0x104
    30f4:	lsl	r3, r2, r3
    30f8:	orr	r1, r0, r2, lsr r1
    30fc:	str	r3, [sp, #256]	; 0x100
    3100:	str	r1, [sp, #260]	; 0x104
    3104:	add	r3, sp, #304	; 0x130
    3108:	add	r1, sp, #256	; 0x100
    310c:	ldrd	r2, [r3]
    3110:	ldrd	r0, [r1]
    3114:	mov	lr, #0
    3118:	orr	r3, r3, r1
    311c:	orr	r2, r2, r0
    3120:	add	r1, sp, #312	; 0x138
    3124:	strd	r2, [r1]
    3128:	beq	3868 <__assert_fail@plt+0x1354>
    312c:	cmp	fp, #58	; 0x3a
    3130:	beq	3a44 <__assert_fail@plt+0x1530>
    3134:	ldr	r3, [pc, #1360]	; 368c <__assert_fail@plt+0x1178>
    3138:	ldr	r2, [pc, #1360]	; 3690 <__assert_fail@plt+0x117c>
    313c:	add	r3, pc, r3
    3140:	add	r1, fp, #1
    3144:	add	r2, pc, r2
    3148:	str	r3, [sp, #464]	; 0x1d0
    314c:	mov	fp, r1
    3150:	sub	r3, r3, #4080	; 0xff0
    3154:	str	r3, [sp, #468]	; 0x1d4
    3158:	add	r3, r2, #2048	; 0x800
    315c:	str	r2, [sp, #284]	; 0x11c
    3160:	str	r1, [sp, #452]	; 0x1c4
    3164:	str	r3, [sp, #440]	; 0x1b8
    3168:	mov	r2, #1
    316c:	sub	r1, fp, #33	; 0x21
    3170:	ldr	r0, [sp, #100]	; 0x64
    3174:	lsl	r1, r2, r1
    3178:	sub	r3, fp, #1
    317c:	str	r1, [sp, #268]	; 0x10c
    3180:	cmp	r0, #5
    3184:	rsb	r1, r3, #32
    3188:	ldr	r0, [sp, #268]	; 0x10c
    318c:	lsl	r3, r2, r3
    3190:	orr	r1, r0, r2, lsr r1
    3194:	str	r3, [sp, #264]	; 0x108
    3198:	str	r1, [sp, #268]	; 0x10c
    319c:	add	r3, sp, #312	; 0x138
    31a0:	add	r1, sp, #264	; 0x108
    31a4:	ldrd	r2, [r3]
    31a8:	ldrd	r0, [r1]
    31ac:	mov	lr, #0
    31b0:	orr	r2, r2, r0
    31b4:	orr	r3, r3, r1
    31b8:	strd	r2, [sp, #200]	; 0xc8
    31bc:	beq	3784 <__assert_fail@plt+0x1270>
    31c0:	cmp	fp, #58	; 0x3a
    31c4:	beq	394c <__assert_fail@plt+0x1438>
    31c8:	ldr	r3, [pc, #1220]	; 3694 <__assert_fail@plt+0x1180>
    31cc:	ldr	r2, [pc, #1220]	; 3698 <__assert_fail@plt+0x1184>
    31d0:	add	r3, pc, r3
    31d4:	add	r1, fp, #1
    31d8:	add	r2, pc, r2
    31dc:	str	r3, [sp, #276]	; 0x114
    31e0:	mov	fp, r1
    31e4:	sub	r3, r3, #4080	; 0xff0
    31e8:	str	r3, [sp, #280]	; 0x118
    31ec:	add	r3, r2, #2048	; 0x800
    31f0:	str	r2, [sp, #192]	; 0xc0
    31f4:	str	r1, [sp, #456]	; 0x1c8
    31f8:	str	r3, [sp, #196]	; 0xc4
    31fc:	mov	r2, #1
    3200:	sub	r1, fp, #33	; 0x21
    3204:	ldr	r0, [sp, #100]	; 0x64
    3208:	lsl	r1, r2, r1
    320c:	sub	r3, fp, #1
    3210:	str	r1, [sp, #180]	; 0xb4
    3214:	cmp	r0, #6
    3218:	rsb	r1, r3, #32
    321c:	ldr	r0, [sp, #180]	; 0xb4
    3220:	lsl	r3, r2, r3
    3224:	orr	r1, r0, r2, lsr r1
    3228:	str	r3, [sp, #176]	; 0xb0
    322c:	str	r1, [sp, #180]	; 0xb4
    3230:	ldrd	r2, [sp, #200]	; 0xc8
    3234:	ldrd	r0, [sp, #176]	; 0xb0
    3238:	mov	ip, #0
    323c:	orr	r2, r2, r0
    3240:	orr	r3, r3, r1
    3244:	strd	r2, [sp, #168]	; 0xa8
    3248:	beq	36b0 <__assert_fail@plt+0x119c>
    324c:	cmp	fp, #58	; 0x3a
    3250:	beq	3860 <__assert_fail@plt+0x134c>
    3254:	ldr	r3, [pc, #1088]	; 369c <__assert_fail@plt+0x1188>
    3258:	ldr	r2, [pc, #1088]	; 36a0 <__assert_fail@plt+0x118c>
    325c:	add	r3, pc, r3
    3260:	add	r2, pc, r2
    3264:	str	r3, [sp, #184]	; 0xb8
    3268:	sub	r3, r3, #4080	; 0xff0
    326c:	add	fp, fp, #1
    3270:	str	r3, [sp, #188]	; 0xbc
    3274:	add	r3, r2, #2048	; 0x800
    3278:	str	r2, [sp, #124]	; 0x7c
    327c:	str	fp, [sp, #272]	; 0x110
    3280:	str	r3, [sp, #136]	; 0x88
    3284:	mov	r2, #1
    3288:	sub	r1, fp, #33	; 0x21
    328c:	ldr	r0, [sp, #100]	; 0x64
    3290:	lsl	r1, r2, r1
    3294:	sub	r3, fp, #1
    3298:	str	r1, [sp, #108]	; 0x6c
    329c:	cmp	r0, #7
    32a0:	rsb	r1, r3, #32
    32a4:	ldr	r0, [sp, #108]	; 0x6c
    32a8:	lsl	r3, r2, r3
    32ac:	orr	r1, r0, r2, lsr r1
    32b0:	str	r3, [sp, #104]	; 0x68
    32b4:	str	r1, [sp, #108]	; 0x6c
    32b8:	ldrd	r2, [sp, #168]	; 0xa8
    32bc:	ldrd	r0, [sp, #104]	; 0x68
    32c0:	mov	ip, #0
    32c4:	orr	r2, r2, r0
    32c8:	orr	r3, r3, r1
    32cc:	strd	r2, [sp, #88]	; 0x58
    32d0:	beq	3588 <__assert_fail@plt+0x1074>
    32d4:	cmp	fp, #58	; 0x3a
    32d8:	beq	377c <__assert_fail@plt+0x1268>
    32dc:	ldr	r3, [pc, #960]	; 36a4 <__assert_fail@plt+0x1190>
    32e0:	ldr	r2, [pc, #960]	; 36a8 <__assert_fail@plt+0x1194>
    32e4:	add	r1, fp, #1
    32e8:	add	r3, pc, r3
    32ec:	ldrd	r8, [sp, #24]
    32f0:	add	r2, pc, r2
    32f4:	str	r3, [sp, #116]	; 0x74
    32f8:	mov	r7, r1
    32fc:	sub	r3, r3, #4080	; 0xff0
    3300:	str	r3, [sp, #120]	; 0x78
    3304:	add	r3, r2, #2048	; 0x800
    3308:	str	r2, [sp, #60]	; 0x3c
    330c:	str	r1, [sp, #140]	; 0x8c
    3310:	str	r1, [sp, #48]	; 0x30
    3314:	str	r3, [sp, #96]	; 0x60
    3318:	mov	r4, #1
    331c:	sub	r2, r7, #33	; 0x21
    3320:	ldr	r1, [sp, #100]	; 0x64
    3324:	lsl	r2, r4, r2
    3328:	sub	r3, r7, #1
    332c:	str	r2, [sp, #36]	; 0x24
    3330:	cmp	r1, #8
    3334:	rsb	r2, r3, #32
    3338:	ldr	r1, [sp, #36]	; 0x24
    333c:	lsl	r3, r4, r3
    3340:	orr	r2, r1, r4, lsr r2
    3344:	str	r3, [sp, #32]
    3348:	str	r2, [sp, #36]	; 0x24
    334c:	ldrd	r0, [sp, #32]
    3350:	ldrd	r2, [sp, #88]	; 0x58
    3354:	mov	lr, #0
    3358:	orr	r2, r2, r0
    335c:	orr	r3, r3, r1
    3360:	strd	r2, [sp, #24]
    3364:	beq	3480 <__assert_fail@plt+0xf6c>
    3368:	cmp	r7, #58	; 0x3a
    336c:	beq	3538 <__assert_fail@plt+0x1024>
    3370:	ldr	r3, [sp, #112]	; 0x70
    3374:	cmp	r3, lr
    3378:	bne	3544 <__assert_fail@plt+0x1030>
    337c:	ldr	r3, [pc, #808]	; 36ac <__assert_fail@plt+0x1198>
    3380:	str	r4, [sp, #56]	; 0x38
    3384:	add	r3, pc, r3
    3388:	sub	r6, r3, #4080	; 0xff0
    338c:	str	r3, [sp, #52]	; 0x34
    3390:	ldr	r2, [sp, #56]	; 0x38
    3394:	sub	r3, r7, #32
    3398:	add	r5, pc, #704	; 0x2c0
    339c:	ldrd	r4, [r5]
    33a0:	lsl	r9, r2, r3
    33a4:	rsb	r3, r7, #32
    33a8:	lsl	r8, r2, r7
    33ac:	orr	r9, r9, r2, lsr r3
    33b0:	ldrd	r2, [sp, #24]
    33b4:	ldr	r0, [sp, #52]	; 0x34
    33b8:	mov	r1, #0
    33bc:	orr	r3, r3, r9
    33c0:	eor	r5, r5, r3
    33c4:	orr	r2, r2, r8
    33c8:	str	r5, [sp]
    33cc:	strd	r2, [sp, #40]	; 0x28
    33d0:	lsr	r3, r5, #8
    33d4:	str	r1, [sp, #4]
    33d8:	str	r3, [sp, #8]
    33dc:	sub	ip, r0, #2032	; 0x7f0
    33e0:	lsr	r3, r5, #16
    33e4:	lsr	r0, r5, #24
    33e8:	str	r3, [sp, #16]
    33ec:	ldrd	sl, [sp]
    33f0:	ldr	r3, [sp, #60]	; 0x3c
    33f4:	lsl	r0, r0, #3
    33f8:	str	r1, [sp, #12]
    33fc:	str	r1, [sp, #20]
    3400:	and	sl, sl, #255	; 0xff
    3404:	ldrd	r0, [r0, r3]
    3408:	eor	r4, r4, r2
    340c:	ldr	r3, [sp, #96]	; 0x60
    3410:	lsl	r2, sl, #3
    3414:	ldrd	sl, [sp, #8]
    3418:	eor	r0, r0, r4
    341c:	ldrd	r4, [sp, #16]
    3420:	add	r2, r3, r2
    3424:	and	sl, sl, #255	; 0xff
    3428:	ldrd	r2, [r2]
    342c:	and	r4, r4, #255	; 0xff
    3430:	add	sl, r6, sl, lsl #3
    3434:	add	r4, ip, r4, lsl #3
    3438:	eor	r2, r2, r0
    343c:	eor	r3, r3, r1
    3440:	ldrd	r0, [sl, #-8]
    3444:	ldrd	r4, [r4, #-8]
    3448:	add	r7, r7, #1
    344c:	eor	r0, r0, r2
    3450:	eor	r1, r1, r3
    3454:	eor	r0, r0, r4
    3458:	ldrd	r2, [sp, #40]	; 0x28
    345c:	eor	r1, r1, r5
    3460:	bl	2698 <__assert_fail@plt+0x184>
    3464:	cmp	r7, #58	; 0x3a
    3468:	bne	3390 <__assert_fail@plt+0xe7c>
    346c:	ldr	r3, [sp, #48]	; 0x30
    3470:	add	r3, r3, #1
    3474:	str	r3, [sp, #48]	; 0x30
    3478:	mov	r7, r3
    347c:	b	3318 <__assert_fail@plt+0xe04>
    3480:	add	r1, pc, #472	; 0x1d8
    3484:	ldrd	r0, [r1]
    3488:	mov	r5, r3
    348c:	mov	r4, r2
    3490:	eor	r5, r5, r1
    3494:	eor	r4, r4, r0
    3498:	mov	r0, r4
    349c:	lsr	r4, r5, #8
    34a0:	str	lr, [sp, #68]	; 0x44
    34a4:	str	r4, [sp, #72]	; 0x48
    34a8:	str	r5, [sp, #64]	; 0x40
    34ac:	lsr	r4, r5, #16
    34b0:	str	r4, [sp, #80]	; 0x50
    34b4:	lsr	sl, r5, #24
    34b8:	ldrd	r4, [sp, #64]	; 0x40
    34bc:	str	lr, [sp, #76]	; 0x4c
    34c0:	str	lr, [sp, #84]	; 0x54
    34c4:	ldr	lr, [sp, #124]	; 0x7c
    34c8:	lsl	sl, sl, #3
    34cc:	and	r4, r4, #255	; 0xff
    34d0:	ldrd	sl, [sl, lr]
    34d4:	ldr	lr, [sp, #136]	; 0x88
    34d8:	lsl	r1, r4, #3
    34dc:	ldrd	r4, [sp, #72]	; 0x48
    34e0:	ldrd	r6, [lr, r1]
    34e4:	eor	sl, sl, r0
    34e8:	ldrd	r0, [sp, #80]	; 0x50
    34ec:	ldr	ip, [sp, #116]	; 0x74
    34f0:	ldr	lr, [sp, #120]	; 0x78
    34f4:	and	r4, r4, #255	; 0xff
    34f8:	and	r0, r0, #255	; 0xff
    34fc:	add	r4, lr, r4, lsl #3
    3500:	sub	ip, ip, #2032	; 0x7f0
    3504:	add	ip, ip, r0, lsl #3
    3508:	ldrd	r0, [r4, #-8]
    350c:	ldrd	r4, [ip, #-8]
    3510:	eor	r6, r6, sl
    3514:	eor	r7, r7, fp
    3518:	eor	r0, r0, r6
    351c:	eor	r1, r1, r7
    3520:	eor	r0, r0, r4
    3524:	eor	r1, r1, r5
    3528:	bl	2698 <__assert_fail@plt+0x184>
    352c:	ldr	r3, [sp, #48]	; 0x30
    3530:	cmp	r3, #58	; 0x3a
    3534:	bne	3470 <__assert_fail@plt+0xf5c>
    3538:	strd	r8, [sp, #24]
    353c:	ldr	fp, [sp, #140]	; 0x8c
    3540:	b	3284 <__assert_fail@plt+0xd70>
    3544:	mov	r6, r3
    3548:	sub	r3, r7, #32
    354c:	rsb	r2, r7, #32
    3550:	lsl	fp, r4, r3
    3554:	ldrd	r0, [sp, #24]
    3558:	orr	fp, fp, r4, lsr r2
    355c:	lsl	sl, r4, r7
    3560:	add	r7, r7, #1
    3564:	mov	r3, r6
    3568:	orr	r0, r0, sl
    356c:	orr	r1, r1, fp
    3570:	mov	r2, r7
    3574:	bl	2ea8 <__assert_fail@plt+0x994>
    3578:	cmp	r7, #58	; 0x3a
    357c:	bne	3548 <__assert_fail@plt+0x1034>
    3580:	strd	sl, [sp, #128]	; 0x80
    3584:	b	346c <__assert_fail@plt+0xf58>
    3588:	add	r5, pc, #208	; 0xd0
    358c:	ldrd	r4, [r5]
    3590:	mov	r1, r3
    3594:	mov	r0, r2
    3598:	eor	r1, r1, r5
    359c:	mov	r5, r1
    35a0:	str	r1, [sp, #144]	; 0x90
    35a4:	lsr	r1, r1, #8
    35a8:	ldr	lr, [sp, #184]	; 0xb8
    35ac:	str	ip, [sp, #148]	; 0x94
    35b0:	str	r1, [sp, #152]	; 0x98
    35b4:	eor	r0, r0, r4
    35b8:	lsr	r1, r5, #16
    35bc:	mov	r4, r0
    35c0:	str	r1, [sp, #160]	; 0xa0
    35c4:	ldrd	r0, [sp, #144]	; 0x90
    35c8:	sub	sl, lr, #2032	; 0x7f0
    35cc:	lsr	lr, r5, #24
    35d0:	ldr	r1, [sp, #192]	; 0xc0
    35d4:	and	r0, r0, #255	; 0xff
    35d8:	lsl	lr, lr, #3
    35dc:	str	ip, [sp, #156]	; 0x9c
    35e0:	str	ip, [sp, #164]	; 0xa4
    35e4:	lsl	ip, r0, #3
    35e8:	ldrd	r0, [r1, lr]
    35ec:	ldr	lr, [sp, #196]	; 0xc4
    35f0:	mov	r8, r0
    35f4:	mov	r9, r1
    35f8:	ldrd	r0, [sp, #152]	; 0x98
    35fc:	eor	r8, r8, r4
    3600:	ldrd	r4, [sp, #160]	; 0xa0
    3604:	ldrd	r6, [lr, ip]
    3608:	and	r0, r0, #255	; 0xff
    360c:	ldr	ip, [sp, #188]	; 0xbc
    3610:	and	r4, r4, #255	; 0xff
    3614:	add	r0, ip, r0, lsl #3
    3618:	add	r4, sl, r4, lsl #3
    361c:	ldrd	r0, [r0, #-8]
    3620:	ldrd	r4, [r4, #-8]
    3624:	eor	r6, r6, r8
    3628:	eor	r7, r7, r9
    362c:	eor	r6, r6, r0
    3630:	eor	r7, r7, r1
    3634:	mov	r0, r6
    3638:	mov	r1, r7
    363c:	eor	r0, r0, r4
    3640:	eor	r1, r1, r5
    3644:	bl	2698 <__assert_fail@plt+0x184>
    3648:	cmp	fp, #58	; 0x3a
    364c:	beq	377c <__assert_fail@plt+0x1268>
    3650:	add	r3, fp, #1
    3654:	str	r3, [sp, #140]	; 0x8c
    3658:	mov	fp, r3
    365c:	b	3284 <__assert_fail@plt+0xd70>
    3660:			; <UNDEFINED> instruction: 0xff614e1b
    3664:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    3668:	andeq	pc, r0, r4, ror #3
    366c:	ldrdeq	r1, [r1], -r4
    3670:	ldrdeq	pc, [r0], -r4
    3674:	andeq	r1, r1, ip, lsr #2
    3678:	andeq	pc, r0, ip, lsr #2
    367c:	muleq	r1, r8, r0
    3680:	muleq	r0, r8, r0
    3684:	andeq	r1, r1, r4
    3688:	andeq	pc, r0, r4
    368c:	andeq	r0, r1, ip, ror #30
    3690:	andeq	lr, r0, ip, ror #30
    3694:	ldrdeq	r0, [r1], -r8
    3698:	ldrdeq	lr, [r0], -r8
    369c:	andeq	r0, r1, ip, asr #28
    36a0:	andeq	lr, r0, r0, asr lr
    36a4:	andeq	r0, r1, r0, asr #27
    36a8:	andeq	lr, r0, r0, asr #27
    36ac:	andeq	r0, r1, r4, lsr #26
    36b0:	add	r1, pc, #672	; 0x2a0
    36b4:	ldrd	r0, [r1]
    36b8:	mov	r5, r3
    36bc:	ldr	lr, [sp, #276]	; 0x114
    36c0:	eor	r5, r5, r1
    36c4:	mov	r4, r2
    36c8:	eor	r4, r4, r0
    36cc:	mov	r0, r4
    36d0:	str	ip, [sp, #212]	; 0xd4
    36d4:	sub	sl, lr, #2032	; 0x7f0
    36d8:	str	r5, [sp, #208]	; 0xd0
    36dc:	lsr	lr, r5, #8
    36e0:	lsr	r4, r5, #16
    36e4:	str	lr, [sp, #216]	; 0xd8
    36e8:	str	r4, [sp, #224]	; 0xe0
    36ec:	lsr	lr, r5, #24
    36f0:	ldrd	r4, [sp, #208]	; 0xd0
    36f4:	str	ip, [sp, #220]	; 0xdc
    36f8:	str	ip, [sp, #228]	; 0xe4
    36fc:	ldr	ip, [sp, #284]	; 0x11c
    3700:	and	r4, r4, #255	; 0xff
    3704:	lsl	lr, lr, #3
    3708:	lsl	r1, r4, #3
    370c:	ldrd	r4, [ip, lr]
    3710:	ldr	ip, [sp, #440]	; 0x1b8
    3714:	mov	r8, r4
    3718:	mov	r9, r5
    371c:	ldrd	r4, [sp, #216]	; 0xd8
    3720:	ldrd	r6, [ip, r1]
    3724:	eor	r8, r8, r0
    3728:	ldrd	r0, [sp, #224]	; 0xe0
    372c:	ldr	ip, [sp, #280]	; 0x118
    3730:	and	r4, r4, #255	; 0xff
    3734:	and	r0, r0, #255	; 0xff
    3738:	add	r4, ip, r4, lsl #3
    373c:	add	ip, sl, r0, lsl #3
    3740:	ldrd	r0, [r4, #-8]
    3744:	eor	r6, r6, r8
    3748:	ldrd	r4, [ip, #-8]
    374c:	eor	r7, r7, r9
    3750:	eor	r6, r6, r0
    3754:	eor	r7, r7, r1
    3758:	mov	r0, r6
    375c:	mov	r1, r7
    3760:	eor	r0, r0, r4
    3764:	eor	r1, r1, r5
    3768:	bl	2698 <__assert_fail@plt+0x184>
    376c:	cmp	fp, #58	; 0x3a
    3770:	beq	3860 <__assert_fail@plt+0x134c>
    3774:	add	r3, fp, #1
    3778:	str	r3, [sp, #272]	; 0x110
    377c:	ldr	fp, [sp, #272]	; 0x110
    3780:	b	31fc <__assert_fail@plt+0xce8>
    3784:	add	r5, pc, #460	; 0x1cc
    3788:	ldrd	r4, [r5]
    378c:	mov	r1, r3
    3790:	mov	r0, r2
    3794:	eor	r1, r1, r5
    3798:	mov	r5, r1
    379c:	str	r1, [sp, #320]	; 0x140
    37a0:	lsr	r1, r1, #8
    37a4:	str	r1, [sp, #328]	; 0x148
    37a8:	lsr	r1, r5, #16
    37ac:	str	r1, [sp, #336]	; 0x150
    37b0:	add	r1, sp, #320	; 0x140
    37b4:	ldr	ip, [sp, #464]	; 0x1d0
    37b8:	eor	r0, r0, r4
    37bc:	mov	r4, r0
    37c0:	str	lr, [sp, #324]	; 0x144
    37c4:	ldrd	r0, [r1]
    37c8:	sub	sl, ip, #2032	; 0x7f0
    37cc:	lsr	ip, r5, #24
    37d0:	ldr	r1, [sp, #480]	; 0x1e0
    37d4:	and	r0, r0, #255	; 0xff
    37d8:	lsl	ip, ip, #3
    37dc:	str	lr, [sp, #332]	; 0x14c
    37e0:	str	lr, [sp, #340]	; 0x154
    37e4:	lsl	lr, r0, #3
    37e8:	ldrd	r0, [r1, ip]
    37ec:	ldr	ip, [sp, #484]	; 0x1e4
    37f0:	mov	r9, r1
    37f4:	add	r1, sp, #328	; 0x148
    37f8:	mov	r8, r0
    37fc:	ldrd	r0, [r1]
    3800:	add	r1, sp, #336	; 0x150
    3804:	eor	r8, r8, r4
    3808:	ldrd	r4, [r1]
    380c:	ldrd	r6, [ip, lr]
    3810:	and	r0, r0, #255	; 0xff
    3814:	ldr	ip, [sp, #468]	; 0x1d4
    3818:	and	r4, r4, #255	; 0xff
    381c:	add	r0, ip, r0, lsl #3
    3820:	add	sl, sl, r4, lsl #3
    3824:	ldrd	r0, [r0, #-8]
    3828:	ldrd	r4, [sl, #-8]
    382c:	eor	r6, r6, r8
    3830:	eor	r7, r7, r9
    3834:	eor	r6, r6, r0
    3838:	eor	r7, r7, r1
    383c:	mov	r0, r6
    3840:	mov	r1, r7
    3844:	eor	r0, r0, r4
    3848:	eor	r1, r1, r5
    384c:	bl	2698 <__assert_fail@plt+0x184>
    3850:	cmp	fp, #58	; 0x3a
    3854:	beq	394c <__assert_fail@plt+0x1438>
    3858:	add	r3, fp, #1
    385c:	str	r3, [sp, #456]	; 0x1c8
    3860:	ldr	fp, [sp, #456]	; 0x1c8
    3864:	b	3168 <__assert_fail@plt+0xc54>
    3868:	add	r3, sp, #312	; 0x138
    386c:	add	r5, pc, #228	; 0xe4
    3870:	ldrd	r4, [r5]
    3874:	ldrd	r0, [r3]
    3878:	ldr	ip, [sp, #472]	; 0x1d8
    387c:	str	lr, [sp, #348]	; 0x15c
    3880:	mov	r3, r1
    3884:	eor	r1, r1, r5
    3888:	mov	r5, r1
    388c:	str	r1, [sp, #344]	; 0x158
    3890:	lsr	r1, r1, #8
    3894:	str	r1, [sp, #352]	; 0x160
    3898:	lsr	r1, r5, #16
    389c:	str	r1, [sp, #360]	; 0x168
    38a0:	add	r1, sp, #344	; 0x158
    38a4:	mov	r2, r0
    38a8:	eor	r0, r0, r4
    38ac:	mov	r4, r0
    38b0:	ldrd	r0, [r1]
    38b4:	sub	sl, ip, #2032	; 0x7f0
    38b8:	lsr	ip, r5, #24
    38bc:	ldr	r1, [sp, #496]	; 0x1f0
    38c0:	and	r0, r0, #255	; 0xff
    38c4:	lsl	ip, ip, #3
    38c8:	str	lr, [sp, #356]	; 0x164
    38cc:	str	lr, [sp, #364]	; 0x16c
    38d0:	lsl	lr, r0, #3
    38d4:	ldrd	r0, [r1, ip]
    38d8:	ldr	ip, [sp, #500]	; 0x1f4
    38dc:	mov	r9, r1
    38e0:	add	r1, sp, #352	; 0x160
    38e4:	mov	r8, r0
    38e8:	ldrd	r0, [r1]
    38ec:	add	r1, sp, #360	; 0x168
    38f0:	eor	r8, r8, r4
    38f4:	ldrd	r4, [r1]
    38f8:	ldrd	r6, [ip, lr]
    38fc:	and	r0, r0, #255	; 0xff
    3900:	ldr	ip, [sp, #476]	; 0x1dc
    3904:	and	r4, r4, #255	; 0xff
    3908:	add	r0, ip, r0, lsl #3
    390c:	add	sl, sl, r4, lsl #3
    3910:	ldrd	r0, [r0, #-8]
    3914:	ldrd	r4, [sl, #-8]
    3918:	eor	r6, r6, r8
    391c:	eor	r7, r7, r9
    3920:	eor	r6, r6, r0
    3924:	eor	r7, r7, r1
    3928:	mov	r0, r6
    392c:	mov	r1, r7
    3930:	eor	r0, r0, r4
    3934:	eor	r1, r1, r5
    3938:	bl	2698 <__assert_fail@plt+0x184>
    393c:	cmp	fp, #58	; 0x3a
    3940:	beq	3a44 <__assert_fail@plt+0x1530>
    3944:	add	r3, fp, #1
    3948:	str	r3, [sp, #452]	; 0x1c4
    394c:	ldr	fp, [sp, #452]	; 0x1c4
    3950:	b	30d0 <__assert_fail@plt+0xbbc>
    3954:	nop			; (mov r0, r0)
    3958:			; <UNDEFINED> instruction: 0xff614e1b
    395c:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    3960:	add	r3, sp, #304	; 0x130
    3964:	sub	r5, pc, #20
    3968:	ldrd	r4, [r5]
    396c:	ldrd	r0, [r3]
    3970:	ldr	ip, [sp, #488]	; 0x1e8
    3974:	str	lr, [sp, #372]	; 0x174
    3978:	mov	r3, r1
    397c:	eor	r1, r1, r5
    3980:	mov	r5, r1
    3984:	str	r1, [sp, #368]	; 0x170
    3988:	lsr	r1, r1, #8
    398c:	str	r1, [sp, #376]	; 0x178
    3990:	lsr	r1, r5, #16
    3994:	str	r1, [sp, #384]	; 0x180
    3998:	add	r1, sp, #368	; 0x170
    399c:	mov	r2, r0
    39a0:	eor	r0, r0, r4
    39a4:	mov	r4, r0
    39a8:	ldrd	r0, [r1]
    39ac:	sub	sl, ip, #2032	; 0x7f0
    39b0:	lsr	ip, r5, #24
    39b4:	ldr	r1, [sp, #512]	; 0x200
    39b8:	and	r0, r0, #255	; 0xff
    39bc:	lsl	ip, ip, #3
    39c0:	str	lr, [sp, #380]	; 0x17c
    39c4:	str	lr, [sp, #388]	; 0x184
    39c8:	lsl	lr, r0, #3
    39cc:	ldrd	r0, [r1, ip]
    39d0:	ldr	ip, [sp, #516]	; 0x204
    39d4:	mov	r9, r1
    39d8:	add	r1, sp, #376	; 0x178
    39dc:	mov	r8, r0
    39e0:	ldrd	r0, [r1]
    39e4:	add	r1, sp, #384	; 0x180
    39e8:	eor	r8, r8, r4
    39ec:	ldrd	r4, [r1]
    39f0:	ldrd	r6, [ip, lr]
    39f4:	and	r0, r0, #255	; 0xff
    39f8:	ldr	ip, [sp, #492]	; 0x1ec
    39fc:	and	r4, r4, #255	; 0xff
    3a00:	add	r0, ip, r0, lsl #3
    3a04:	add	sl, sl, r4, lsl #3
    3a08:	ldrd	r0, [r0, #-8]
    3a0c:	ldrd	r4, [sl, #-8]
    3a10:	eor	r6, r6, r8
    3a14:	eor	r7, r7, r9
    3a18:	eor	r6, r6, r0
    3a1c:	eor	r7, r7, r1
    3a20:	mov	r0, r6
    3a24:	mov	r1, r7
    3a28:	eor	r0, r0, r4
    3a2c:	eor	r1, r1, r5
    3a30:	bl	2698 <__assert_fail@plt+0x184>
    3a34:	cmp	fp, #58	; 0x3a
    3a38:	beq	3b30 <__assert_fail@plt+0x161c>
    3a3c:	add	r3, fp, #1
    3a40:	str	r3, [sp, #448]	; 0x1c0
    3a44:	ldr	fp, [sp, #448]	; 0x1c0
    3a48:	b	303c <__assert_fail@plt+0xb28>
    3a4c:	add	r3, sp, #296	; 0x128
    3a50:	sub	r5, pc, #256	; 0x100
    3a54:	ldrd	r4, [r5]
    3a58:	ldrd	r0, [r3]
    3a5c:	ldr	ip, [sp, #504]	; 0x1f8
    3a60:	str	lr, [sp, #396]	; 0x18c
    3a64:	mov	r3, r1
    3a68:	eor	r1, r1, r5
    3a6c:	mov	r5, r1
    3a70:	str	r1, [sp, #392]	; 0x188
    3a74:	lsr	r1, r1, #8
    3a78:	str	r1, [sp, #400]	; 0x190
    3a7c:	lsr	r1, r5, #16
    3a80:	str	r1, [sp, #408]	; 0x198
    3a84:	add	r1, sp, #392	; 0x188
    3a88:	mov	r2, r0
    3a8c:	eor	r0, r0, r4
    3a90:	mov	r4, r0
    3a94:	ldrd	r0, [r1]
    3a98:	sub	sl, ip, #2032	; 0x7f0
    3a9c:	lsr	ip, r5, #24
    3aa0:	ldr	r1, [sp, #536]	; 0x218
    3aa4:	and	r0, r0, #255	; 0xff
    3aa8:	lsl	ip, ip, #3
    3aac:	str	lr, [sp, #404]	; 0x194
    3ab0:	str	lr, [sp, #412]	; 0x19c
    3ab4:	lsl	lr, r0, #3
    3ab8:	ldrd	r0, [r1, ip]
    3abc:	ldr	ip, [sp, #540]	; 0x21c
    3ac0:	mov	r9, r1
    3ac4:	add	r1, sp, #400	; 0x190
    3ac8:	mov	r8, r0
    3acc:	ldrd	r0, [r1]
    3ad0:	add	r1, sp, #408	; 0x198
    3ad4:	eor	r8, r8, r4
    3ad8:	ldrd	r4, [r1]
    3adc:	ldrd	r6, [ip, lr]
    3ae0:	and	r0, r0, #255	; 0xff
    3ae4:	ldr	ip, [sp, #508]	; 0x1fc
    3ae8:	and	r4, r4, #255	; 0xff
    3aec:	add	r0, ip, r0, lsl #3
    3af0:	add	sl, sl, r4, lsl #3
    3af4:	ldrd	r0, [r0, #-8]
    3af8:	ldrd	r4, [sl, #-8]
    3afc:	eor	r6, r6, r8
    3b00:	eor	r7, r7, r9
    3b04:	eor	r6, r6, r0
    3b08:	eor	r7, r7, r1
    3b0c:	mov	r0, r6
    3b10:	mov	r1, r7
    3b14:	eor	r0, r0, r4
    3b18:	eor	r1, r1, r5
    3b1c:	bl	2698 <__assert_fail@plt+0x184>
    3b20:	cmp	fp, #58	; 0x3a
    3b24:	beq	3b38 <__assert_fail@plt+0x1624>
    3b28:	add	r3, fp, #1
    3b2c:	str	r3, [sp, #444]	; 0x1bc
    3b30:	ldr	fp, [sp, #444]	; 0x1bc
    3b34:	b	2fa8 <__assert_fail@plt+0xa94>
    3b38:	ldr	sl, [sp, #460]	; 0x1cc
    3b3c:	b	2f14 <__assert_fail@plt+0xa00>
    3b40:	add	r3, sp, #288	; 0x120
    3b44:	sub	r5, pc, #500	; 0x1f4
    3b48:	ldrd	r4, [r5]
    3b4c:	ldrd	r0, [r3]
    3b50:	ldr	ip, [sp, #528]	; 0x210
    3b54:	str	lr, [sp, #420]	; 0x1a4
    3b58:	mov	r3, r1
    3b5c:	eor	r1, r1, r5
    3b60:	mov	r5, r1
    3b64:	str	r1, [sp, #416]	; 0x1a0
    3b68:	lsr	r1, r1, #8
    3b6c:	str	r1, [sp, #424]	; 0x1a8
    3b70:	lsr	r1, r5, #16
    3b74:	str	r1, [sp, #432]	; 0x1b0
    3b78:	add	r1, sp, #416	; 0x1a0
    3b7c:	mov	r2, r0
    3b80:	eor	r0, r0, r4
    3b84:	mov	r4, r0
    3b88:	ldrd	r0, [r1]
    3b8c:	sub	fp, ip, #2032	; 0x7f0
    3b90:	lsr	ip, r5, #24
    3b94:	ldr	r1, [sp, #520]	; 0x208
    3b98:	and	r0, r0, #255	; 0xff
    3b9c:	lsl	ip, ip, #3
    3ba0:	str	lr, [sp, #428]	; 0x1ac
    3ba4:	str	lr, [sp, #436]	; 0x1b4
    3ba8:	lsl	lr, r0, #3
    3bac:	ldrd	r0, [r1, ip]
    3bb0:	ldr	ip, [sp, #524]	; 0x20c
    3bb4:	mov	r9, r1
    3bb8:	add	r1, sp, #424	; 0x1a8
    3bbc:	mov	r8, r0
    3bc0:	ldrd	r0, [r1]
    3bc4:	add	r1, sp, #432	; 0x1b0
    3bc8:	eor	r8, r8, r4
    3bcc:	ldrd	r4, [r1]
    3bd0:	ldrd	r6, [ip, lr]
    3bd4:	and	r0, r0, #255	; 0xff
    3bd8:	ldr	ip, [sp, #532]	; 0x214
    3bdc:	and	r4, r4, #255	; 0xff
    3be0:	add	r0, ip, r0, lsl #3
    3be4:	add	fp, fp, r4, lsl #3
    3be8:	ldrd	r0, [r0, #-8]
    3bec:	ldrd	r4, [fp, #-8]
    3bf0:	eor	r6, r6, r8
    3bf4:	eor	r7, r7, r9
    3bf8:	eor	r6, r6, r0
    3bfc:	eor	r7, r7, r1
    3c00:	mov	r0, r6
    3c04:	mov	r1, r7
    3c08:	eor	r0, r0, r4
    3c0c:	eor	r1, r1, r5
    3c10:	bl	2698 <__assert_fail@plt+0x184>
    3c14:	cmp	sl, #57	; 0x39
    3c18:	add	sl, sl, #1
    3c1c:	ble	2f14 <__assert_fail@plt+0xa00>
    3c20:	add	sp, sp, #556	; 0x22c
    3c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00003c28 <btbb_gen_syncword@@Base>:
    3c28:	ldr	r2, [pc, #80]	; 3c80 <btbb_gen_syncword@@Base+0x58>
    3c2c:	push	{r4, r5, r6, r7}
    3c30:	add	r2, pc, r2
    3c34:	add	r7, pc, #60	; 0x3c
    3c38:	ldrd	r6, [r7]
    3c3c:	add	r2, r2, #8
    3c40:	mov	r3, #0
    3c44:	mov	r1, #8388608	; 0x800000
    3c48:	ands	ip, r0, r1, asr r3
    3c4c:	add	r3, r3, #1
    3c50:	ldrdne	r4, [r2]
    3c54:	eorne	r6, r6, r4
    3c58:	eorne	r7, r7, r5
    3c5c:	cmp	r3, #24
    3c60:	add	r2, r2, #8
    3c64:	bne	3c48 <btbb_gen_syncword@@Base+0x20>
    3c68:	mov	r0, r6
    3c6c:	mov	r1, r7
    3c70:	pop	{r4, r5, r6, r7}
    3c74:	bx	lr
    3c78:			; <UNDEFINED> instruction: 0xc7820e7e
    3c7c:	andlt	r0, r0, r2
    3c80:	andeq	r0, r1, r8, ror r4

00003c84 <btbb_get_release@@Base>:
    3c84:	ldr	r0, [pc, #4]	; 3c90 <btbb_get_release@@Base+0xc>
    3c88:	add	r0, pc, r0
    3c8c:	bx	lr
    3c90:	andeq	r0, r1, ip, ror #20

00003c94 <btbb_get_version@@Base>:
    3c94:	ldr	r0, [pc, #4]	; 3ca0 <btbb_get_version@@Base+0xc>
    3c98:	add	r0, pc, r0
    3c9c:	bx	lr
    3ca0:	andeq	r0, r1, r8, ror #20

00003ca4 <btbb_init@@Base>:
    3ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3ca8:	sub	sp, sp, #132	; 0x84
    3cac:	ldr	r3, [pc, #884]	; 4028 <btbb_init@@Base+0x384>
    3cb0:	cmp	r0, #5
    3cb4:	str	r0, [sp, #124]	; 0x7c
    3cb8:	add	r3, pc, r3
    3cbc:	bhi	3ff4 <btbb_init@@Base+0x350>
    3cc0:	ldr	r3, [pc, #868]	; 402c <btbb_init@@Base+0x388>
    3cc4:	ldr	r2, [sp, #124]	; 0x7c
    3cc8:	add	r3, pc, r3
    3ccc:	cmp	r2, #0
    3cd0:	ldr	r3, [r3]
    3cd4:	clz	r3, r3
    3cd8:	lsr	r3, r3, #5
    3cdc:	moveq	r3, #0
    3ce0:	cmp	r3, #0
    3ce4:	bne	3cf4 <btbb_init@@Base+0x50>
    3ce8:	mov	r0, #0
    3cec:	add	sp, sp, #132	; 0x84
    3cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3cf4:	ldr	r3, [pc, #820]	; 4030 <btbb_init@@Base+0x38c>
    3cf8:	ldr	r2, [pc, #820]	; 4034 <btbb_init@@Base+0x390>
    3cfc:	add	r3, pc, r3
    3d00:	ldr	r1, [pc, #816]	; 4038 <btbb_init@@Base+0x394>
    3d04:	add	r2, pc, r2
    3d08:	str	r3, [sp, #100]	; 0x64
    3d0c:	add	r3, r3, #2048	; 0x800
    3d10:	add	r1, pc, r1
    3d14:	str	r3, [sp, #104]	; 0x68
    3d18:	sub	r3, r2, #4080	; 0xff0
    3d1c:	str	r3, [sp, #120]	; 0x78
    3d20:	add	r3, r1, #2048	; 0x800
    3d24:	str	r3, [sp, #88]	; 0x58
    3d28:	mvn	r3, #0
    3d2c:	str	r3, [sp, #96]	; 0x60
    3d30:	mov	r3, #1
    3d34:	str	r2, [sp, #108]	; 0x6c
    3d38:	str	r1, [sp, #60]	; 0x3c
    3d3c:	str	r3, [sp, #92]	; 0x5c
    3d40:	mov	r3, #1
    3d44:	mov	r1, r3
    3d48:	str	r3, [sp, #52]	; 0x34
    3d4c:	mov	r4, #1
    3d50:	sub	r2, r1, #33	; 0x21
    3d54:	ldr	r0, [sp, #92]	; 0x5c
    3d58:	lsl	r2, r4, r2
    3d5c:	sub	r3, r1, #1
    3d60:	str	r2, [sp, #12]
    3d64:	cmp	r0, r4
    3d68:	rsb	r2, r3, #32
    3d6c:	ldr	r0, [sp, #12]
    3d70:	lsl	r3, r4, r3
    3d74:	orr	r2, r0, r4, lsr r2
    3d78:	mov	lr, #0
    3d7c:	str	r2, [sp, #12]
    3d80:	str	r3, [sp, #8]
    3d84:	beq	3ec0 <btbb_init@@Base+0x21c>
    3d88:	cmp	r1, #58	; 0x3a
    3d8c:	mov	r9, r1
    3d90:	beq	3f88 <btbb_init@@Base+0x2e4>
    3d94:	ldr	r3, [sp, #96]	; 0x60
    3d98:	cmp	r3, #0
    3d9c:	bne	3fb0 <btbb_init@@Base+0x30c>
    3da0:	ldr	r3, [pc, #660]	; 403c <btbb_init@@Base+0x398>
    3da4:	strd	r6, [sp, #112]	; 0x70
    3da8:	add	r3, pc, r3
    3dac:	mov	r8, r4
    3db0:	mov	r7, r3
    3db4:	sub	r2, r3, #4080	; 0xff0
    3db8:	str	r2, [sp, #56]	; 0x38
    3dbc:	sub	r3, r9, #32
    3dc0:	add	fp, pc, #600	; 0x258
    3dc4:	ldrd	sl, [fp]
    3dc8:	lsl	r3, r8, r3
    3dcc:	str	r3, [sp, #4]
    3dd0:	ldr	r2, [sp, #4]
    3dd4:	rsb	r3, r9, #32
    3dd8:	mov	r1, #0
    3ddc:	orr	r3, r2, r8, lsr r3
    3de0:	str	r3, [sp, #4]
    3de4:	lsl	r3, r8, r9
    3de8:	str	r3, [sp]
    3dec:	ldrd	r4, [sp]
    3df0:	ldrd	r2, [sp, #8]
    3df4:	str	r1, [sp, #20]
    3df8:	str	r1, [sp, #28]
    3dfc:	orr	r3, r3, r5
    3e00:	eor	fp, fp, r3
    3e04:	orr	r2, r2, r4
    3e08:	str	fp, [sp, #16]
    3e0c:	strd	r2, [sp, #40]	; 0x28
    3e10:	lsr	r3, fp, #8
    3e14:	str	r3, [sp, #24]
    3e18:	lsr	r0, fp, #24
    3e1c:	lsr	r3, fp, #16
    3e20:	str	r3, [sp, #32]
    3e24:	ldrd	r4, [sp, #16]
    3e28:	ldr	r3, [sp, #60]	; 0x3c
    3e2c:	lsl	r0, r0, #3
    3e30:	eor	sl, sl, r2
    3e34:	and	r4, r4, #255	; 0xff
    3e38:	ldrd	r2, [r3, r0]
    3e3c:	str	r1, [sp, #36]	; 0x24
    3e40:	ldr	r0, [sp, #88]	; 0x58
    3e44:	lsl	r1, r4, #3
    3e48:	ldrd	r4, [sp, #24]
    3e4c:	eor	r2, r2, sl
    3e50:	ldrd	sl, [sp, #32]
    3e54:	add	r0, r0, r1
    3e58:	ldr	lr, [sp, #56]	; 0x38
    3e5c:	and	r4, r4, #255	; 0xff
    3e60:	ldrd	r0, [r0]
    3e64:	and	sl, sl, #255	; 0xff
    3e68:	add	r4, lr, r4, lsl #3
    3e6c:	sub	ip, r7, #2032	; 0x7f0
    3e70:	add	sl, ip, sl, lsl #3
    3e74:	eor	r2, r2, r0
    3e78:	eor	r3, r3, r1
    3e7c:	ldrd	r0, [r4, #-8]
    3e80:	ldrd	r4, [sl, #-8]
    3e84:	add	r9, r9, #1
    3e88:	eor	r0, r0, r2
    3e8c:	eor	r1, r1, r3
    3e90:	eor	r0, r0, r4
    3e94:	ldrd	r2, [sp, #40]	; 0x28
    3e98:	eor	r1, r1, r5
    3e9c:	bl	2698 <__assert_fail@plt+0x184>
    3ea0:	cmp	r9, #58	; 0x3a
    3ea4:	bne	3dbc <btbb_init@@Base+0x118>
    3ea8:	ldrd	r6, [sp, #112]	; 0x70
    3eac:	ldr	r3, [sp, #52]	; 0x34
    3eb0:	add	r3, r3, #1
    3eb4:	str	r3, [sp, #52]	; 0x34
    3eb8:	mov	r1, r3
    3ebc:	b	3d4c <btbb_init@@Base+0xa8>
    3ec0:	ldrd	sl, [sp, #8]
    3ec4:	add	r3, pc, #340	; 0x154
    3ec8:	ldrd	r2, [r3]
    3ecc:	ldr	r1, [sp, #108]	; 0x6c
    3ed0:	mov	r0, sl
    3ed4:	sub	ip, r1, #2032	; 0x7f0
    3ed8:	mov	r1, fp
    3edc:	eor	r1, r1, r3
    3ee0:	mov	r3, r1
    3ee4:	str	r1, [sp, #64]	; 0x40
    3ee8:	lsr	r1, r1, #8
    3eec:	str	lr, [sp, #68]	; 0x44
    3ef0:	str	r1, [sp, #72]	; 0x48
    3ef4:	eor	r0, r0, r2
    3ef8:	lsr	r1, r3, #16
    3efc:	mov	r2, r0
    3f00:	str	r1, [sp, #80]	; 0x50
    3f04:	ldrd	r0, [sp, #64]	; 0x40
    3f08:	lsr	r4, r3, #24
    3f0c:	ldr	r1, [sp, #100]	; 0x64
    3f10:	and	r0, r0, #255	; 0xff
    3f14:	lsl	r4, r4, #3
    3f18:	str	lr, [sp, #76]	; 0x4c
    3f1c:	str	lr, [sp, #84]	; 0x54
    3f20:	lsl	r3, r0, #3
    3f24:	ldr	lr, [sp, #104]	; 0x68
    3f28:	ldrd	r0, [r1, r4]
    3f2c:	ldrd	r8, [sp, #72]	; 0x48
    3f30:	ldrd	r4, [lr, r3]
    3f34:	eor	r0, r0, r2
    3f38:	ldrd	r2, [sp, #80]	; 0x50
    3f3c:	ldr	lr, [sp, #120]	; 0x78
    3f40:	and	r8, r8, #255	; 0xff
    3f44:	and	r2, r2, #255	; 0xff
    3f48:	add	r8, lr, r8, lsl #3
    3f4c:	add	r2, ip, r2, lsl #3
    3f50:	eor	r4, r4, r0
    3f54:	eor	r5, r5, r1
    3f58:	ldrd	r0, [r8, #-8]
    3f5c:	ldrd	r2, [r2, #-8]
    3f60:	eor	r0, r0, r4
    3f64:	eor	r1, r1, r5
    3f68:	eor	r0, r0, r2
    3f6c:	eor	r1, r1, r3
    3f70:	mov	r2, sl
    3f74:	mov	r3, fp
    3f78:	bl	2698 <__assert_fail@plt+0x184>
    3f7c:	ldr	r3, [sp, #52]	; 0x34
    3f80:	cmp	r3, #58	; 0x3a
    3f84:	bne	3eb0 <btbb_init@@Base+0x20c>
    3f88:	ldr	r3, [sp, #92]	; 0x5c
    3f8c:	ldr	r2, [sp, #124]	; 0x7c
    3f90:	add	r3, r3, #1
    3f94:	str	r3, [sp, #92]	; 0x5c
    3f98:	cmp	r2, r3
    3f9c:	ldr	r3, [sp, #96]	; 0x60
    3fa0:	add	r3, r3, #1
    3fa4:	str	r3, [sp, #96]	; 0x60
    3fa8:	bge	3d40 <btbb_init@@Base+0x9c>
    3fac:	b	3ce8 <btbb_init@@Base+0x44>
    3fb0:	ldrd	sl, [sp, #8]
    3fb4:	mov	r8, r3
    3fb8:	sub	r3, r9, #32
    3fbc:	rsb	r2, r9, #32
    3fc0:	lsl	r7, r4, r3
    3fc4:	lsl	r6, r4, r9
    3fc8:	orr	r7, r7, r4, lsr r2
    3fcc:	add	r9, r9, #1
    3fd0:	mov	r3, r8
    3fd4:	orr	r0, sl, r6
    3fd8:	orr	r1, fp, r7
    3fdc:	mov	r2, r9
    3fe0:	bl	2ea8 <__assert_fail@plt+0x994>
    3fe4:	cmp	r9, #58	; 0x3a
    3fe8:	bne	3fb8 <btbb_init@@Base+0x314>
    3fec:	ldr	r3, [sp, #52]	; 0x34
    3ff0:	b	3eb0 <btbb_init@@Base+0x20c>
    3ff4:	ldr	r0, [pc, #68]	; 4040 <btbb_init@@Base+0x39c>
    3ff8:	ldr	r2, [pc, #68]	; 4044 <btbb_init@@Base+0x3a0>
    3ffc:	ldr	r1, [pc, #68]	; 4048 <btbb_init@@Base+0x3a4>
    4000:	ldr	r3, [r3, r0]
    4004:	add	r2, pc, r2
    4008:	add	r1, pc, r1
    400c:	add	r2, r2, #200	; 0xc8
    4010:	ldr	r0, [r3]
    4014:	bl	2394 <fprintf@plt>
    4018:	mvn	r0, #0
    401c:	b	3cec <btbb_init@@Base+0x48>
    4020:			; <UNDEFINED> instruction: 0xff614e1b
    4024:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    4028:	andeq	r7, r2, r0, asr #6
    402c:	andeq	r7, r2, r0, ror #9
    4030:			; <UNDEFINED> instruction: 0x0000e3b4
    4034:	andeq	r0, r1, r4, lsr #7
    4038:	andeq	lr, r0, r0, lsr #7
    403c:	andeq	r0, r1, r0, lsl #6
    4040:	andeq	r0, r0, r8, lsl #3
    4044:	andeq	r0, r1, r4, lsr #1
    4048:	strdeq	r0, [r1], -ip

0000404c <btbb_packet_new@@Base>:
    404c:	push	{r4, lr}
    4050:	mov	r1, #5952	; 0x1740
    4054:	mov	r0, #1
    4058:	bl	20c4 <calloc@plt>
    405c:	ldr	r3, [pc, #64]	; 40a4 <btbb_packet_new@@Base+0x58>
    4060:	add	r3, pc, r3
    4064:	subs	r4, r0, #0
    4068:	beq	407c <btbb_packet_new@@Base+0x30>
    406c:	mov	r3, #1
    4070:	str	r3, [r4]
    4074:	mov	r0, r4
    4078:	pop	{r4, pc}
    407c:	ldr	r0, [pc, #36]	; 40a8 <btbb_packet_new@@Base+0x5c>
    4080:	mov	r2, #25
    4084:	mov	r1, #1
    4088:	ldr	r3, [r3, r0]
    408c:	ldr	r0, [pc, #24]	; 40ac <btbb_packet_new@@Base+0x60>
    4090:	ldr	r3, [r3]
    4094:	add	r0, pc, r0
    4098:	bl	2274 <fwrite@plt>
    409c:	mov	r0, r4
    40a0:	pop	{r4, pc}
    40a4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
    40a8:	andeq	r0, r0, r8, lsl #3
    40ac:	muleq	r1, r0, r6

000040b0 <btbb_packet_ref@@Base>:
    40b0:	ldr	r3, [r0]
    40b4:	add	r3, r3, #1
    40b8:	str	r3, [r0]
    40bc:	bx	lr

000040c0 <btbb_packet_unref@@Base>:
    40c0:	ldr	r3, [r0]
    40c4:	subs	r3, r3, #1
    40c8:	beq	40d4 <btbb_packet_unref@@Base+0x14>
    40cc:	str	r3, [r0]
    40d0:	bx	lr
    40d4:	b	2160 <free@plt>

000040d8 <btbb_packet_get_lap@@Base>:
    40d8:	ldr	r0, [r0, #12]
    40dc:	bx	lr

000040e0 <btbb_packet_get_uap@@Base>:
    40e0:	ldrb	r0, [r0, #9]
    40e4:	bx	lr

000040e8 <btbb_packet_get_nap@@Base>:
    40e8:	ldrh	r0, [r0, #10]
    40ec:	bx	lr

000040f0 <btbb_packet_get_clkn@@Base>:
    40f0:	ldr	r0, [r0, #2816]	; 0xb00
    40f4:	bx	lr

000040f8 <btbb_packet_get_channel@@Base>:
    40f8:	ldrb	r0, [r0, #8]
    40fc:	bx	lr

00004100 <btbb_packet_set_modulation@@Base>:
    4100:	strb	r1, [r0, #16]
    4104:	bx	lr

00004108 <btbb_packet_get_modulation@@Base>:
    4108:	ldrb	r0, [r0, #16]
    410c:	bx	lr

00004110 <btbb_packet_set_transport@@Base>:
    4110:	strb	r1, [r0, #17]
    4114:	bx	lr

00004118 <btbb_packet_get_transport@@Base>:
    4118:	ldrb	r0, [r0, #17]
    411c:	bx	lr

00004120 <btbb_packet_get_ac_errors@@Base>:
    4120:	ldrb	r0, [r0, #2820]	; 0xb04
    4124:	bx	lr

00004128 <promiscuous_packet_search@@Base>:
    4128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    412c:	cmp	r1, #0
    4130:	ldrb	r4, [r0, #58]	; 0x3a
    4134:	ldrb	lr, [r0, #59]	; 0x3b
    4138:	ldrb	ip, [r0, #57]	; 0x39
    413c:	ldrb	r5, [r0, #60]	; 0x3c
    4140:	sub	sp, sp, #92	; 0x5c
    4144:	orr	ip, ip, r4, lsl #1
    4148:	ldrb	r4, [r0, #61]	; 0x3d
    414c:	orr	ip, ip, lr, lsl #2
    4150:	ldrb	lr, [r0, #62]	; 0x3e
    4154:	orr	ip, ip, r5, lsl #3
    4158:	orr	ip, ip, r4, lsl #4
    415c:	orr	ip, ip, lr, lsl #5
    4160:	ble	44f4 <promiscuous_packet_search@@Base+0x3cc>
    4164:	str	r3, [sp, #68]	; 0x44
    4168:	ldr	r3, [pc, #928]	; 4510 <promiscuous_packet_search@@Base+0x3e8>
    416c:	str	r2, [sp, #76]	; 0x4c
    4170:	add	r3, pc, r3
    4174:	ldr	r2, [pc, #920]	; 4514 <promiscuous_packet_search@@Base+0x3ec>
    4178:	ldr	r3, [r3]
    417c:	add	r2, pc, r2
    4180:	str	r3, [sp, #72]	; 0x48
    4184:	ldr	r3, [pc, #908]	; 4518 <promiscuous_packet_search@@Base+0x3f0>
    4188:	str	r1, [sp, #12]
    418c:	add	r3, pc, r3
    4190:	ldr	r1, [pc, #900]	; 451c <promiscuous_packet_search@@Base+0x3f4>
    4194:	str	r3, [sp, #8]
    4198:	add	r3, r2, #352	; 0x160
    419c:	add	r1, pc, r1
    41a0:	lsl	ip, ip, #1
    41a4:	str	r3, [sp, #52]	; 0x34
    41a8:	sub	r3, r2, #4080	; 0xff0
    41ac:	str	r3, [sp, #64]	; 0x40
    41b0:	mov	r7, #0
    41b4:	add	r3, r1, #2048	; 0x800
    41b8:	add	lr, r0, #62	; 0x3e
    41bc:	uxtb	r5, ip
    41c0:	str	r2, [sp, #48]	; 0x30
    41c4:	str	r1, [sp, #56]	; 0x38
    41c8:	str	r3, [sp, #60]	; 0x3c
    41cc:	mov	r4, r7
    41d0:	b	41e8 <promiscuous_packet_search@@Base+0xc0>
    41d4:	ldr	r3, [sp, #12]
    41d8:	add	r4, r4, #1
    41dc:	cmp	r3, r4
    41e0:	mov	lr, r8
    41e4:	beq	44f4 <promiscuous_packet_search@@Base+0x3cc>
    41e8:	ldrb	r3, [lr, #1]
    41ec:	lsr	r5, r5, #1
    41f0:	add	r8, lr, #1
    41f4:	orr	r5, r5, r3, lsl #6
    41f8:	ldr	r3, [sp, #8]
    41fc:	uxtb	r5, r5
    4200:	add	r3, r3, r5
    4204:	ldrb	r3, [r3, #212]	; 0xd4
    4208:	cmp	r3, #1
    420c:	bhi	41d4 <promiscuous_packet_search@@Base+0xac>
    4210:	sub	lr, lr, #63	; 0x3f
    4214:	mov	r2, #0
    4218:	mov	r3, #0
    421c:	mov	ip, #0
    4220:	ldrb	r0, [lr, #1]!
    4224:	sub	r1, ip, #32
    4228:	lsl	fp, r0, r1
    422c:	rsb	r1, ip, #32
    4230:	lsl	sl, r0, ip
    4234:	orr	fp, fp, r0, lsr r1
    4238:	add	ip, ip, #1
    423c:	cmp	ip, #64	; 0x40
    4240:	orr	r2, r2, sl
    4244:	orr	r3, r3, fp
    4248:	bne	4220 <promiscuous_packet_search@@Base+0xf8>
    424c:	lsr	r1, r3, #25
    4250:	ldr	r0, [sp, #52]	; 0x34
    4254:	bic	r3, r3, #-33554432	; 0xfe000000
    4258:	add	r1, r0, r1, lsl #3
    425c:	ldr	r0, [sp, #48]	; 0x30
    4260:	sub	ip, r0, #2032	; 0x7f0
    4264:	ldrd	r0, [r1, #-8]
    4268:	orr	r6, r2, r0
    426c:	orr	r7, r3, r1
    4270:	add	r1, pc, #656	; 0x290
    4274:	ldrd	r0, [r1]
    4278:	mov	r3, #0
    427c:	str	r3, [sp, #4]
    4280:	eor	r1, r1, r7
    4284:	str	r1, [sp]
    4288:	lsr	r3, r1, #8
    428c:	str	r3, [sp, #16]
    4290:	ldrd	r2, [sp]
    4294:	eor	r0, r0, r6
    4298:	strd	r6, [sp, #40]	; 0x28
    429c:	str	r3, [sp, #20]
    42a0:	ldrd	r6, [sp, #16]
    42a4:	lsr	lr, r1, #16
    42a8:	str	lr, [sp, #24]
    42ac:	mov	lr, #0
    42b0:	str	lr, [sp, #28]
    42b4:	and	r6, r6, #255	; 0xff
    42b8:	ldr	lr, [sp, #64]	; 0x40
    42bc:	and	r2, r2, #255	; 0xff
    42c0:	add	r6, lr, r6, lsl #3
    42c4:	ldr	r3, [sp, #60]	; 0x3c
    42c8:	ldrd	r6, [r6, #-8]
    42cc:	lsl	r2, r2, #3
    42d0:	lsr	r1, r1, #24
    42d4:	strd	r6, [sp, #32]
    42d8:	ldrd	r6, [r3, r2]
    42dc:	ldrd	r2, [sp, #24]
    42e0:	lsl	r1, r1, #3
    42e4:	ldr	lr, [sp, #128]	; 0x80
    42e8:	and	r2, r2, #255	; 0xff
    42ec:	ldrb	r9, [sp, #4]
    42f0:	add	ip, ip, r2, lsl #3
    42f4:	ldrd	r2, [sp, #32]
    42f8:	strb	r9, [lr]
    42fc:	eor	r2, r2, r6
    4300:	eor	r2, r2, r0
    4304:	ldr	r0, [sp, #56]	; 0x38
    4308:	eor	r3, r3, r7
    430c:	add	r0, r0, r1
    4310:	ldrd	r6, [ip, #-8]
    4314:	ldrd	r0, [r0]
    4318:	eor	r3, r3, r7
    431c:	cmp	r3, r1
    4320:	eor	r2, r2, r6
    4324:	cmpeq	r2, r0
    4328:	ldreq	r0, [sp, #4]
    432c:	bne	4360 <promiscuous_packet_search@@Base+0x238>
    4330:	ldr	r3, [sp, #68]	; 0x44
    4334:	cmp	r3, r0
    4338:	blt	41d4 <promiscuous_packet_search@@Base+0xac>
    433c:	ldr	r3, [sp, #44]	; 0x2c
    4340:	ldr	r2, [sp, #76]	; 0x4c
    4344:	mov	r7, r4
    4348:	lsr	r3, r3, #2
    434c:	bic	r3, r3, #-16777216	; 0xff000000
    4350:	mov	r0, r7
    4354:	str	r3, [r2]
    4358:	add	sp, sp, #92	; 0x5c
    435c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4360:	ldr	lr, [sp, #72]	; 0x48
    4364:	eor	r2, r2, r0
    4368:	eor	r3, r3, r1
    436c:	cmp	lr, #0
    4370:	strd	r2, [sp, #80]	; 0x50
    4374:	beq	44e0 <promiscuous_packet_search@@Base+0x3b8>
    4378:	ldrb	r2, [sp, #84]	; 0x54
    437c:	ldrb	r3, [sp, #80]	; 0x50
    4380:	ldrb	r1, [sp, #87]	; 0x57
    4384:	add	r2, r2, #-1644167168	; 0x9e000000
    4388:	ldrb	ip, [sp, #83]	; 0x53
    438c:	ldrb	r0, [sp, #86]	; 0x56
    4390:	add	r2, r2, #3620864	; 0x374000
    4394:	add	r3, r3, #-1627389952	; 0x9f000000
    4398:	add	r2, r2, #14720	; 0x3980
    439c:	add	r3, r3, #4784128	; 0x490000
    43a0:	add	r2, r2, #57	; 0x39
    43a4:	add	r3, r3, #47616	; 0xba00
    43a8:	add	r2, r2, r1, lsl #24
    43ac:	add	r3, r3, #194	; 0xc2
    43b0:	ldrb	r1, [sp, #82]	; 0x52
    43b4:	add	r3, r3, ip, lsl #24
    43b8:	add	r2, r2, r0, lsl #16
    43bc:	ldrb	ip, [sp, #85]	; 0x55
    43c0:	ldrb	r0, [sp, #81]	; 0x51
    43c4:	add	r3, r3, r1, lsl #16
    43c8:	add	r2, r2, ip, lsl #8
    43cc:	add	r3, r3, r0, lsl #8
    43d0:	sub	r3, r3, r2
    43d4:	ldr	ip, [pc, #324]	; 4520 <promiscuous_packet_search@@Base+0x3f8>
    43d8:	eor	r3, r3, #520192	; 0x7f000
    43dc:	eor	r3, r3, #1888	; 0x760
    43e0:	eor	r3, r3, #13
    43e4:	add	ip, r2, ip
    43e8:	ldr	r0, [pc, #308]	; 4524 <promiscuous_packet_search@@Base+0x3fc>
    43ec:	sub	r1, ip, r3
    43f0:	eor	r1, r1, r3, lsl #8
    43f4:	sub	r0, r0, r3
    43f8:	sub	r0, r0, r1
    43fc:	eor	r0, r0, r1, lsr #13
    4400:	sub	r2, r3, r1
    4404:	sub	r2, r2, r0
    4408:	eor	r2, r2, r0, lsr #12
    440c:	sub	r1, r1, r0
    4410:	sub	r1, r1, r2
    4414:	eor	r1, r1, r2, lsl #16
    4418:	sub	r3, r0, r2
    441c:	sub	r3, r3, r1
    4420:	eor	r3, r3, r1, lsr #5
    4424:	sub	r2, r2, r1
    4428:	sub	r2, r2, r3
    442c:	ldr	r0, [lr, #16]
    4430:	eor	r2, r2, r3, lsr #3
    4434:	sub	r1, r1, r3
    4438:	sub	r1, r1, r2
    443c:	eor	r1, r1, r2, lsl #10
    4440:	sub	r3, r3, r2
    4444:	ldr	r2, [r0, #4]
    4448:	sub	r3, r3, r1
    444c:	sub	r2, r2, #1
    4450:	eor	r3, r3, r1, lsr #15
    4454:	and	r3, r3, r2
    4458:	ldr	r2, [r0]
    445c:	add	r3, r3, r3, lsl #1
    4460:	ldr	r6, [r2, r3, lsl #2]
    4464:	cmp	r6, #0
    4468:	beq	44e0 <promiscuous_packet_search@@Base+0x3b8>
    446c:	ldr	r9, [r0, #20]
    4470:	rsb	r9, r9, #0
    4474:	adds	r6, r6, r9
    4478:	beq	44e0 <promiscuous_packet_search@@Base+0x3b8>
    447c:	add	r7, sp, #80	; 0x50
    4480:	b	4498 <promiscuous_packet_search@@Base+0x370>
    4484:	ldr	r3, [r6, #32]
    4488:	cmp	r3, #0
    448c:	beq	44e0 <promiscuous_packet_search@@Base+0x3b8>
    4490:	adds	r6, r3, r9
    4494:	beq	44e0 <promiscuous_packet_search@@Base+0x3b8>
    4498:	ldr	r3, [r6, #40]	; 0x28
    449c:	cmp	r3, #8
    44a0:	bne	4484 <promiscuous_packet_search@@Base+0x35c>
    44a4:	mov	r2, #8
    44a8:	mov	r1, r7
    44ac:	ldr	r0, [r6, #36]	; 0x24
    44b0:	bl	21cc <memcmp@plt>
    44b4:	cmp	r0, #0
    44b8:	bne	4484 <promiscuous_packet_search@@Base+0x35c>
    44bc:	ldrd	r0, [r6, #8]
    44c0:	ldrd	r2, [sp, #40]	; 0x28
    44c4:	eor	r3, r3, r1
    44c8:	eor	r2, r2, r0
    44cc:	strd	r2, [sp, #40]	; 0x28
    44d0:	bl	11f20 <lell_pcapng_close@@Base+0x27c>
    44d4:	ldr	r3, [sp, #128]	; 0x80
    44d8:	strb	r0, [r3]
    44dc:	b	4330 <promiscuous_packet_search@@Base+0x208>
    44e0:	ldr	r2, [sp, #128]	; 0x80
    44e4:	mvn	r3, #0
    44e8:	mov	r0, #255	; 0xff
    44ec:	strb	r3, [r2]
    44f0:	b	4330 <promiscuous_packet_search@@Base+0x208>
    44f4:	mvn	r7, #0
    44f8:	mov	r0, r7
    44fc:	add	sp, sp, #92	; 0x5c
    4500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4504:	nop			; (mov r0, r0)
    4508:	bllt	ff319900 <perm_table@@Base+0xff2ee73c>
    450c:	orrhi	r8, r4, #9600	; 0x2580
    4510:	andeq	r7, r2, r8, lsr r0
    4514:	andeq	pc, r0, ip, lsr #30
    4518:	andeq	pc, r0, ip, lsl pc	; <UNPREDICTABLE>
    451c:	andeq	sp, r0, r4, lsl pc
    4520:	tsteq	r2, r9, lsl #2
    4524:	mcr2	14, 7, fp, cr13, cr7, {7}

00004528 <find_known_lap@@Base>:
    4528:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    452c:	mov	r6, r0
    4530:	mov	r0, r2
    4534:	mov	r7, r1
    4538:	mov	r8, r3
    453c:	bl	2280 <btbb_gen_syncword@plt>
    4540:	cmp	r7, #0
    4544:	movgt	r9, #0
    4548:	movgt	sl, r0
    454c:	movgt	fp, r1
    4550:	ble	45bc <find_known_lap@@Base+0x94>
    4554:	sub	lr, r9, #1
    4558:	add	lr, r6, lr
    455c:	mov	r0, #0
    4560:	mov	r1, #0
    4564:	mov	ip, #0
    4568:	ldrb	r2, [lr, #1]!
    456c:	sub	r3, ip, #32
    4570:	lsl	r5, r2, r3
    4574:	rsb	r3, ip, #32
    4578:	lsl	r4, r2, ip
    457c:	orr	r5, r5, r2, lsr r3
    4580:	add	ip, ip, #1
    4584:	cmp	ip, #64	; 0x40
    4588:	orr	r0, r0, r4
    458c:	orr	r1, r1, r5
    4590:	bne	4568 <find_known_lap@@Base+0x40>
    4594:	eor	r0, r0, sl
    4598:	eor	r1, r1, fp
    459c:	bl	11f20 <lell_pcapng_close@@Base+0x27c>
    45a0:	ldr	r3, [sp, #40]	; 0x28
    45a4:	cmp	r0, r8
    45a8:	strb	r0, [r3]
    45ac:	ble	45c0 <find_known_lap@@Base+0x98>
    45b0:	add	r9, r9, #1
    45b4:	cmp	r7, r9
    45b8:	bne	4554 <find_known_lap@@Base+0x2c>
    45bc:	mvn	r9, #0
    45c0:	mov	r0, r9
    45c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000045c8 <btbb_packet_set_data@@Base>:
    45c8:	ldr	ip, [pc, #236]	; 46bc <btbb_packet_set_data@@Base+0xf4>
    45cc:	push	{r4, r5, r6, r7, r8, r9, lr}
    45d0:	cmp	r2, ip
    45d4:	movge	r2, ip
    45d8:	cmp	r2, #0
    45dc:	add	r7, r0, #2816	; 0xb00
    45e0:	ldr	r6, [sp, #28]
    45e4:	ble	4684 <btbb_packet_set_data@@Base+0xbc>
    45e8:	add	ip, r7, #12
    45ec:	add	lr, r7, #8
    45f0:	add	r4, r1, #4
    45f4:	cmp	lr, r4
    45f8:	cmpcc	r1, ip
    45fc:	movcs	ip, #1
    4600:	movcc	ip, #0
    4604:	cmp	r2, #8
    4608:	movls	ip, #0
    460c:	andhi	ip, ip, #1
    4610:	cmp	ip, #0
    4614:	beq	4698 <btbb_packet_set_data@@Base+0xd0>
    4618:	sub	r8, r2, #4
    461c:	mov	r4, r1
    4620:	lsr	r8, r8, #2
    4624:	add	r8, r8, #1
    4628:	mov	ip, #0
    462c:	lsl	r9, r8, #2
    4630:	add	ip, ip, #1
    4634:	ldr	r5, [r4], #4
    4638:	cmp	r8, ip
    463c:	str	r5, [lr], #4
    4640:	bhi	4630 <btbb_packet_set_data@@Base+0x68>
    4644:	cmp	r2, r9
    4648:	beq	4684 <btbb_packet_set_data@@Base+0xbc>
    464c:	ldrb	r4, [r1, r8, lsl #2]
    4650:	add	lr, r0, r9
    4654:	add	ip, r9, #1
    4658:	cmp	ip, r2
    465c:	strb	r4, [lr, #2824]	; 0xb08
    4660:	bge	4684 <btbb_packet_set_data@@Base+0xbc>
    4664:	ldrb	lr, [r1, ip]
    4668:	add	r9, r9, #2
    466c:	add	ip, r0, ip
    4670:	cmp	r2, r9
    4674:	strb	lr, [ip, #2824]	; 0xb08
    4678:	ldrbgt	r1, [r1, r9]
    467c:	addgt	r9, r0, r9
    4680:	strbgt	r1, [r9, #2824]	; 0xb08
    4684:	lsr	r6, r6, #1
    4688:	strh	r2, [r7, #6]
    468c:	str	r6, [r0, #2816]	; 0xb00
    4690:	strb	r3, [r0, #8]
    4694:	pop	{r4, r5, r6, r7, r8, r9, pc}
    4698:	sub	r4, r2, #1
    469c:	add	r4, r1, r4
    46a0:	add	ip, r7, #7
    46a4:	sub	r1, r1, #1
    46a8:	ldrb	lr, [r1, #1]!
    46ac:	cmp	r1, r4
    46b0:	strb	lr, [ip, #1]!
    46b4:	bne	46a8 <btbb_packet_set_data@@Base+0xe0>
    46b8:	b	4684 <btbb_packet_set_data@@Base+0xbc>
    46bc:	andeq	r0, r0, r5, lsr ip

000046c0 <btbb_packet_set_flag@@Base>:
    46c0:	mov	r3, #1
    46c4:	cmp	r2, #0
    46c8:	lsl	r1, r3, r1
    46cc:	ldr	r2, [r0, #4]
    46d0:	biceq	r1, r2, r1
    46d4:	orrne	r1, r1, r2
    46d8:	str	r1, [r0, #4]
    46dc:	bx	lr

000046e0 <btbb_packet_set_uap@@Base>:
    46e0:	strb	r1, [r0, #9]
    46e4:	mov	r2, #1
    46e8:	mov	r1, #2
    46ec:	b	2148 <btbb_packet_set_flag@plt>

000046f0 <btbb_find_ac@@Base>:
    46f0:	push	{r4, lr}
    46f4:	sub	sp, sp, #24
    46f8:	cmn	r2, #1
    46fc:	str	r2, [sp, #12]
    4700:	beq	4758 <btbb_find_ac@@Base+0x68>
    4704:	add	ip, sp, #23
    4708:	str	ip, [sp]
    470c:	bl	23d0 <find_known_lap@plt>
    4710:	mov	r4, r0
    4714:	cmp	r4, #0
    4718:	blt	474c <btbb_find_ac@@Base+0x5c>
    471c:	ldr	r3, [sp, #32]
    4720:	ldr	r0, [r3]
    4724:	cmp	r0, #0
    4728:	beq	4770 <btbb_find_ac@@Base+0x80>
    472c:	ldrb	r2, [sp, #23]
    4730:	ldr	r3, [sp, #12]
    4734:	mov	r1, #0
    4738:	strb	r2, [r0, #2820]	; 0xb04
    473c:	str	r3, [r0, #12]
    4740:	str	r1, [r0, #4]
    4744:	mov	r2, #1
    4748:	bl	2148 <btbb_packet_set_flag@plt>
    474c:	mov	r0, r4
    4750:	add	sp, sp, #24
    4754:	pop	{r4, pc}
    4758:	add	r2, sp, #23
    475c:	str	r2, [sp]
    4760:	add	r2, sp, #12
    4764:	bl	24b4 <promiscuous_packet_search@plt>
    4768:	mov	r4, r0
    476c:	b	4714 <btbb_find_ac@@Base+0x24>
    4770:	bl	22f8 <btbb_packet_new@plt>
    4774:	ldr	r3, [sp, #32]
    4778:	str	r0, [r3]
    477c:	b	472c <btbb_find_ac@@Base+0x3c>

00004780 <btbb_packet_get_flag@@Base>:
    4780:	ldr	r3, [r0, #4]
    4784:	mov	r2, #1
    4788:	ands	r3, r3, r2, lsl r1
    478c:	movne	r0, r2
    4790:	moveq	r0, #0
    4794:	bx	lr

00004798 <btbb_get_symbols@@Base>:
    4798:	add	r0, r0, #2816	; 0xb00
    479c:	add	r0, r0, #8
    47a0:	bx	lr

000047a4 <btbb_packet_get_payload_length@@Base>:
    47a4:	ldr	r0, [r0, #64]	; 0x40
    47a8:	bx	lr

000047ac <btbb_get_payload@@Base>:
    47ac:	add	r0, r0, #68	; 0x44
    47b0:	bx	lr

000047b4 <btbb_get_payload_packed@@Base>:
    47b4:	ldr	r3, [r0, #64]	; 0x40
    47b8:	cmp	r3, #0
    47bc:	ble	4830 <btbb_get_payload_packed@@Base+0x7c>
    47c0:	sub	ip, r1, #1
    47c4:	mov	r2, r0
    47c8:	mov	r1, #0
    47cc:	push	{r4, r5, r6, lr}
    47d0:	add	r1, r1, #1
    47d4:	ldrb	r3, [r2, #70]	; 0x46
    47d8:	ldrb	r5, [r2, #69]	; 0x45
    47dc:	ldrb	r4, [r2, #68]	; 0x44
    47e0:	ldrb	lr, [r2, #71]	; 0x47
    47e4:	ldrb	r6, [r2, #72]	; 0x48
    47e8:	lsl	r3, r3, #2
    47ec:	orr	r3, r3, r5, lsl #1
    47f0:	ldrb	r5, [r2, #73]	; 0x49
    47f4:	orr	r3, r3, r4
    47f8:	ldrb	r4, [r2, #74]	; 0x4a
    47fc:	orr	r3, r3, lr, lsl #3
    4800:	ldrb	lr, [r2, #75]	; 0x4b
    4804:	orr	r3, r3, r6, lsl #4
    4808:	orr	r3, r3, r5, lsl #5
    480c:	orr	r3, r3, r4, lsl #6
    4810:	orr	r3, r3, lr, lsl #7
    4814:	strb	r3, [ip, #1]!
    4818:	ldr	r3, [r0, #64]	; 0x40
    481c:	add	r2, r2, #8
    4820:	cmp	r3, r1
    4824:	bgt	47d0 <btbb_get_payload_packed@@Base+0x1c>
    4828:	mov	r0, r3
    482c:	pop	{r4, r5, r6, pc}
    4830:	mov	r0, r3
    4834:	bx	lr

00004838 <btbb_packet_get_type@@Base>:
    4838:	ldrb	r0, [r0, #18]
    483c:	bx	lr

00004840 <btbb_packet_get_lt_addr@@Base>:
    4840:	ldrb	r0, [r0, #19]
    4844:	bx	lr

00004848 <btbb_packet_get_header_flags@@Base>:
    4848:	ldrb	r0, [r0, #20]
    484c:	bx	lr

00004850 <btbb_packet_get_hec@@Base>:
    4850:	ldrb	r0, [r0, #21]
    4854:	bx	lr

00004858 <btbb_packet_get_header_packed@@Base>:
    4858:	mov	r2, #0
    485c:	add	r0, r0, #21
    4860:	mov	r3, r2
    4864:	ldrb	r1, [r0, #1]!
    4868:	orr	r2, r2, r1, lsl r3
    486c:	add	r3, r3, #1
    4870:	cmp	r3, #18
    4874:	bne	4864 <btbb_packet_get_header_packed@@Base+0xc>
    4878:	mov	r0, r2
    487c:	bx	lr

00004880 <fhs@@Base>:
    4880:	add	r3, r1, #2816	; 0xb00
    4884:	ldr	r2, [pc, #628]	; 4b00 <fhs@@Base+0x280>
    4888:	ldrh	ip, [r3, #6]
    488c:	mov	r3, #20
    4890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4894:	cmp	ip, r2
    4898:	sub	sp, sp, #20
    489c:	str	r3, [r1, #64]	; 0x40
    48a0:	movle	r6, #1
    48a4:	bgt	48b4 <fhs@@Base+0x34>
    48a8:	mov	r0, r6
    48ac:	add	sp, sp, #20
    48b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48b4:	mov	r4, r0
    48b8:	add	r0, r1, #2944	; 0xb80
    48bc:	mov	r5, r1
    48c0:	add	r0, r0, #2
    48c4:	mov	r1, #160	; 0xa0
    48c8:	bl	2a5c <__assert_fail@plt+0x548>
    48cc:	subs	r3, r0, #0
    48d0:	str	r3, [sp, #8]
    48d4:	moveq	r6, r3
    48d8:	beq	48a8 <fhs@@Base+0x28>
    48dc:	ldr	r3, [pc, #544]	; 4b04 <fhs@@Base+0x284>
    48e0:	and	r0, r4, #63	; 0x3f
    48e4:	add	r3, pc, r3
    48e8:	add	r0, r3, r0
    48ec:	ldr	r8, [pc, #532]	; 4b08 <fhs@@Base+0x288>
    48f0:	ldrb	r0, [r0, #1368]	; 0x558
    48f4:	ldr	r6, [r5, #64]	; 0x40
    48f8:	add	r0, r0, #18
    48fc:	lsl	r6, r6, #3
    4900:	smull	r2, r3, r8, r0
    4904:	add	r3, r3, r0
    4908:	asr	r2, r0, #31
    490c:	rsb	r7, r2, r3, asr #6
    4910:	cmp	r6, #0
    4914:	rsb	r3, r7, r7, lsl #7
    4918:	sub	r7, r0, r3
    491c:	ble	498c <fhs@@Base+0x10c>
    4920:	ldr	r3, [pc, #484]	; 4b0c <fhs@@Base+0x28c>
    4924:	add	r9, r5, #67	; 0x43
    4928:	add	r3, pc, r3
    492c:	mov	fp, r3
    4930:	ldr	r3, [sp, #8]
    4934:	add	r6, r3, r6
    4938:	mov	r4, r3
    493c:	mov	r1, #0
    4940:	mov	r0, r5
    4944:	bl	219c <btbb_packet_get_flag@plt>
    4948:	add	r2, r7, #1
    494c:	mov	r3, r2
    4950:	smull	r1, ip, r8, r2
    4954:	add	r7, fp, r7
    4958:	add	ip, ip, r2
    495c:	asr	sl, r2, #31
    4960:	cmp	r0, #0
    4964:	beq	4ab0 <fhs@@Base+0x230>
    4968:	ldrb	r3, [r4], #1
    496c:	ldrb	r1, [r7, #1432]	; 0x598
    4970:	rsb	r7, sl, ip, asr #6
    4974:	cmp	r4, r6
    4978:	eor	r3, r3, r1
    497c:	rsb	r7, r7, r7, lsl #7
    4980:	sub	r7, r2, r7
    4984:	strb	r3, [r9, #1]!
    4988:	bne	493c <fhs@@Base+0xbc>
    498c:	mov	r0, r5
    4990:	bl	2d54 <__assert_fail@plt+0x840>
    4994:	cmp	r0, #0
    4998:	bne	4a98 <fhs@@Base+0x218>
    499c:	ldr	r3, [pc, #364]	; 4b10 <fhs@@Base+0x290>
    49a0:	ldr	r2, [pc, #364]	; 4b14 <fhs@@Base+0x294>
    49a4:	add	r3, pc, r3
    49a8:	add	r3, r3, #1360	; 0x550
    49ac:	add	r2, pc, r2
    49b0:	str	r2, [sp]
    49b4:	ldr	r4, [pc, #332]	; 4b08 <fhs@@Base+0x288>
    49b8:	add	r2, r3, #39	; 0x27
    49bc:	add	r3, r3, #71	; 0x47
    49c0:	str	r3, [sp, #12]
    49c4:	mov	fp, r0
    49c8:	mov	r3, r2
    49cc:	str	r2, [sp, #4]
    49d0:	ldrb	r0, [r3, #1]!
    49d4:	ldr	r6, [r5, #64]	; 0x40
    49d8:	add	r0, r0, #18
    49dc:	str	r3, [sp, #4]
    49e0:	smull	r2, r3, r4, r0
    49e4:	add	r3, r3, r0
    49e8:	asr	r2, r0, #31
    49ec:	rsb	r7, r2, r3, asr #6
    49f0:	lsl	r6, r6, #3
    49f4:	rsb	r3, r7, r7, lsl #7
    49f8:	cmp	r6, #0
    49fc:	sub	r7, r0, r3
    4a00:	ble	4a68 <fhs@@Base+0x1e8>
    4a04:	ldr	r3, [sp, #8]
    4a08:	add	r9, r5, #67	; 0x43
    4a0c:	add	r6, r3, r6
    4a10:	mov	r8, r3
    4a14:	mov	r1, fp
    4a18:	mov	r0, r5
    4a1c:	bl	219c <btbb_packet_get_flag@plt>
    4a20:	add	r2, r7, #1
    4a24:	ldr	lr, [sp]
    4a28:	smull	r1, ip, r4, r2
    4a2c:	mov	r3, r2
    4a30:	add	r7, lr, r7
    4a34:	add	ip, ip, r2
    4a38:	asr	sl, r2, #31
    4a3c:	cmp	r0, #0
    4a40:	beq	4ae0 <fhs@@Base+0x260>
    4a44:	ldrb	r3, [r8], #1
    4a48:	ldrb	r1, [r7, #1432]	; 0x598
    4a4c:	rsb	r7, sl, ip, asr #6
    4a50:	cmp	r6, r8
    4a54:	eor	r3, r3, r1
    4a58:	rsb	r7, r7, r7, lsl #7
    4a5c:	sub	r7, r2, r7
    4a60:	strb	r3, [r9, #1]!
    4a64:	bne	4a14 <fhs@@Base+0x194>
    4a68:	mov	r0, r5
    4a6c:	bl	2d54 <__assert_fail@plt+0x840>
    4a70:	cmp	r0, #0
    4a74:	bne	4a98 <fhs@@Base+0x218>
    4a78:	ldr	r3, [sp, #4]
    4a7c:	ldr	r2, [sp, #12]
    4a80:	cmp	r3, r2
    4a84:	bne	49d0 <fhs@@Base+0x150>
    4a88:	mov	r6, r0
    4a8c:	ldr	r0, [sp, #8]
    4a90:	bl	2160 <free@plt>
    4a94:	b	48a8 <fhs@@Base+0x28>
    4a98:	ldr	r0, [sp, #8]
    4a9c:	bl	2160 <free@plt>
    4aa0:	mov	r6, #1000	; 0x3e8
    4aa4:	mov	r0, r6
    4aa8:	add	sp, sp, #20
    4aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ab0:	ldrb	r2, [r4], #1
    4ab4:	rsb	r7, sl, ip, asr #6
    4ab8:	cmp	r4, r6
    4abc:	rsb	r7, r7, r7, lsl #7
    4ac0:	sub	r7, r3, r7
    4ac4:	strb	r2, [r9, #1]!
    4ac8:	bne	493c <fhs@@Base+0xbc>
    4acc:	mov	r0, r5
    4ad0:	bl	2d54 <__assert_fail@plt+0x840>
    4ad4:	cmp	r0, #0
    4ad8:	beq	499c <fhs@@Base+0x11c>
    4adc:	b	4a98 <fhs@@Base+0x218>
    4ae0:	ldrb	r2, [r8], #1
    4ae4:	rsb	r7, sl, ip, asr #6
    4ae8:	cmp	r6, r8
    4aec:	rsb	r7, r7, r7, lsl #7
    4af0:	sub	r7, r3, r7
    4af4:	strb	r2, [r9, #1]!
    4af8:	bne	4a14 <fhs@@Base+0x194>
    4afc:	b	4a68 <fhs@@Base+0x1e8>
    4b00:	andeq	r0, r0, r9, ror #2
    4b04:	andeq	pc, r0, r4, asr #15
    4b08:	tsthi	r2, r9, lsl #8
    4b0c:	andeq	pc, r0, r0, lsl #15
    4b10:	andeq	pc, r0, r4, lsl #14
    4b14:	strdeq	pc, [r0], -ip

00004b18 <DM@@Base>:
    4b18:	add	r2, r1, #2816	; 0xb00
    4b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4b20:	mov	r4, r1
    4b24:	ldrb	r3, [r1, #18]
    4b28:	ldrh	r2, [r2, #6]
    4b2c:	sub	sp, sp, #28
    4b30:	add	r1, r1, #2944	; 0xb80
    4b34:	mov	r5, r0
    4b38:	add	r1, r1, #2
    4b3c:	sub	r0, r2, #122	; 0x7a
    4b40:	sub	r3, r3, #3
    4b44:	mov	fp, r0
    4b48:	str	r1, [sp, #4]
    4b4c:	cmp	r3, #11
    4b50:	addls	pc, pc, r3, lsl #2
    4b54:	b	4b98 <DM@@Base+0x80>
    4b58:	b	4ba4 <DM@@Base+0x8c>
    4b5c:	b	4b98 <DM@@Base+0x80>
    4b60:	b	4b98 <DM@@Base+0x80>
    4b64:	b	4b98 <DM@@Base+0x80>
    4b68:	b	4b98 <DM@@Base+0x80>
    4b6c:	b	4e60 <DM@@Base+0x348>
    4b70:	b	4b98 <DM@@Base+0x80>
    4b74:	b	4d24 <DM@@Base+0x20c>
    4b78:	b	4b98 <DM@@Base+0x80>
    4b7c:	b	4b98 <DM@@Base+0x80>
    4b80:	b	4b98 <DM@@Base+0x80>
    4b84:	b	4b88 <DM@@Base+0x70>
    4b88:	mov	r3, #228	; 0xe4
    4b8c:	cmp	fp, #29
    4b90:	str	r3, [sp, #8]
    4b94:	bgt	4d34 <DM@@Base+0x21c>
    4b98:	mov	r0, #0
    4b9c:	add	sp, sp, #28
    4ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ba4:	mov	r3, #20
    4ba8:	str	r3, [sp, #8]
    4bac:	cmp	fp, #14
    4bb0:	ble	4b98 <DM@@Base+0x80>
    4bb4:	mov	r1, #8
    4bb8:	ldr	r0, [sp, #4]
    4bbc:	bl	2a5c <__assert_fail@plt+0x548>
    4bc0:	subs	r3, r0, #0
    4bc4:	mov	r7, r3
    4bc8:	str	r3, [sp, #20]
    4bcc:	beq	4b98 <DM@@Base+0x80>
    4bd0:	ldr	r3, [pc, #956]	; 4f94 <DM@@Base+0x47c>
    4bd4:	and	r2, r5, #63	; 0x3f
    4bd8:	add	r3, pc, r3
    4bdc:	add	r5, r3, r2
    4be0:	ldr	r3, [pc, #944]	; 4f98 <DM@@Base+0x480>
    4be4:	ldrb	r0, [r5, #1368]	; 0x558
    4be8:	ldr	r2, [pc, #940]	; 4f9c <DM@@Base+0x484>
    4bec:	mov	r8, r3
    4bf0:	add	r0, r0, #18
    4bf4:	add	r2, pc, r2
    4bf8:	str	r2, [sp, #16]
    4bfc:	smull	r2, r3, r3, r0
    4c00:	add	r3, r3, r0
    4c04:	asr	r2, r0, #31
    4c08:	rsb	r6, r2, r3, asr #6
    4c0c:	add	r5, r4, #43	; 0x2b
    4c10:	rsb	r3, r6, r6, lsl #7
    4c14:	sub	r6, r0, r3
    4c18:	mov	r9, r6
    4c1c:	add	r3, r4, #51	; 0x33
    4c20:	str	r3, [sp, #12]
    4c24:	mov	r1, #0
    4c28:	mov	r0, r4
    4c2c:	bl	219c <btbb_packet_get_flag@plt>
    4c30:	add	r2, r9, #1
    4c34:	ldr	lr, [sp, #16]
    4c38:	smull	r1, ip, r8, r2
    4c3c:	mov	r3, r2
    4c40:	add	r9, lr, r9
    4c44:	add	ip, ip, r2
    4c48:	asr	sl, r2, #31
    4c4c:	cmp	r0, #0
    4c50:	beq	4e80 <DM@@Base+0x368>
    4c54:	ldrb	r1, [r9, #1432]	; 0x598
    4c58:	ldrb	r3, [r7], #1
    4c5c:	rsb	r9, sl, ip, asr #6
    4c60:	eor	r3, r3, r1
    4c64:	strb	r3, [r5, #1]!
    4c68:	ldr	r3, [sp, #12]
    4c6c:	rsb	r9, r9, r9, lsl #7
    4c70:	cmp	r5, r3
    4c74:	sub	r9, r2, r9
    4c78:	bne	4c24 <DM@@Base+0x10c>
    4c7c:	ldr	r0, [sp, #20]
    4c80:	bl	2160 <free@plt>
    4c84:	ldrb	r2, [r4, #48]	; 0x30
    4c88:	ldrb	r1, [r4, #47]	; 0x2f
    4c8c:	ldrb	ip, [r4, #49]	; 0x31
    4c90:	ldrb	r0, [r4, #50]	; 0x32
    4c94:	orr	r1, r1, r2, lsl #1
    4c98:	ldrb	r2, [r4, #51]	; 0x33
    4c9c:	orr	r1, r1, ip, lsl #2
    4ca0:	orr	r1, r1, r0, lsl #3
    4ca4:	mov	r0, #1
    4ca8:	orr	r1, r1, r2, lsl #4
    4cac:	uxtb	r1, r1
    4cb0:	add	r2, r1, #3
    4cb4:	ldrb	r1, [r4, #18]
    4cb8:	sub	r1, r1, #3
    4cbc:	uxtb	r1, r1
    4cc0:	cmp	r1, #12
    4cc4:	movhi	r1, #0
    4cc8:	ldrls	ip, [pc, #720]	; 4fa0 <DM@@Base+0x488>
    4ccc:	addls	ip, pc, ip
    4cd0:	addls	r1, ip, r1, lsl #2
    4cd4:	ldrls	r1, [r1, #1560]	; 0x618
    4cd8:	cmp	r1, r2
    4cdc:	ldrb	lr, [r4, #45]	; 0x2d
    4ce0:	movge	r1, r2
    4ce4:	ldrb	r2, [r4, #44]	; 0x2c
    4ce8:	ldr	r3, [sp, #8]
    4cec:	ldrb	ip, [r4, #46]	; 0x2e
    4cf0:	orr	r2, r2, lr, lsl #1
    4cf4:	cmp	r1, r3
    4cf8:	str	r1, [r4, #64]	; 0x40
    4cfc:	str	r0, [r4, #40]	; 0x28
    4d00:	strb	r2, [r4, #60]	; 0x3c
    4d04:	strb	ip, [r4, #61]	; 0x3d
    4d08:	bgt	4d18 <DM@@Base+0x200>
    4d0c:	lsl	r5, r1, #3
    4d10:	cmp	r5, fp
    4d14:	ble	4ea4 <DM@@Base+0x38c>
    4d18:	mov	r0, #1
    4d1c:	add	sp, sp, #28
    4d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4d24:	mov	r3, #125	; 0x7d
    4d28:	cmp	fp, #29
    4d2c:	str	r3, [sp, #8]
    4d30:	ble	4b98 <DM@@Base+0x80>
    4d34:	mov	r1, #16
    4d38:	ldr	r0, [sp, #4]
    4d3c:	bl	2a5c <__assert_fail@plt+0x548>
    4d40:	subs	r3, r0, #0
    4d44:	str	r3, [sp, #20]
    4d48:	beq	4b98 <DM@@Base+0x80>
    4d4c:	mov	r7, r3
    4d50:	ldr	r3, [pc, #588]	; 4fa4 <DM@@Base+0x48c>
    4d54:	and	r2, r5, #63	; 0x3f
    4d58:	add	r3, pc, r3
    4d5c:	add	r5, r3, r2
    4d60:	ldr	r3, [pc, #560]	; 4f98 <DM@@Base+0x480>
    4d64:	ldrb	r0, [r5, #1368]	; 0x558
    4d68:	ldr	r2, [pc, #568]	; 4fa8 <DM@@Base+0x490>
    4d6c:	mov	r8, r3
    4d70:	add	r0, r0, #18
    4d74:	add	r2, pc, r2
    4d78:	str	r2, [sp, #16]
    4d7c:	smull	r2, r3, r3, r0
    4d80:	add	r3, r3, r0
    4d84:	asr	r2, r0, #31
    4d88:	rsb	r6, r2, r3, asr #6
    4d8c:	add	r5, r4, #43	; 0x2b
    4d90:	rsb	r3, r6, r6, lsl #7
    4d94:	sub	r6, r0, r3
    4d98:	mov	r9, r6
    4d9c:	add	r3, r4, #59	; 0x3b
    4da0:	str	r3, [sp, #12]
    4da4:	mov	r1, #0
    4da8:	mov	r0, r4
    4dac:	bl	219c <btbb_packet_get_flag@plt>
    4db0:	add	r2, r9, #1
    4db4:	ldr	lr, [sp, #16]
    4db8:	smull	r1, ip, r8, r2
    4dbc:	mov	r3, r2
    4dc0:	add	r9, lr, r9
    4dc4:	add	ip, ip, r2
    4dc8:	asr	sl, r2, #31
    4dcc:	cmp	r0, #0
    4dd0:	beq	4f70 <DM@@Base+0x458>
    4dd4:	ldrb	r1, [r9, #1432]	; 0x598
    4dd8:	ldrb	r3, [r7], #1
    4ddc:	rsb	r9, sl, ip, asr #6
    4de0:	eor	r3, r3, r1
    4de4:	strb	r3, [r5, #1]!
    4de8:	ldr	r3, [sp, #12]
    4dec:	rsb	r9, r9, r9, lsl #7
    4df0:	cmp	r5, r3
    4df4:	sub	r9, r2, r9
    4df8:	bne	4da4 <DM@@Base+0x28c>
    4dfc:	ldr	r0, [sp, #20]
    4e00:	bl	2160 <free@plt>
    4e04:	ldrb	r2, [r4, #48]	; 0x30
    4e08:	ldrb	ip, [r4, #49]	; 0x31
    4e0c:	ldrb	r1, [r4, #47]	; 0x2f
    4e10:	ldrb	r0, [r4, #50]	; 0x32
    4e14:	orr	r1, r1, r2, lsl #1
    4e18:	ldrb	r2, [r4, #51]	; 0x33
    4e1c:	orr	r1, r1, ip, lsl #2
    4e20:	orr	r1, r1, r0, lsl #3
    4e24:	ldrb	r0, [r4, #52]	; 0x34
    4e28:	ldrb	ip, [r4, #53]	; 0x35
    4e2c:	orr	r1, r1, r2, lsl #4
    4e30:	ldrb	r2, [r4, #54]	; 0x36
    4e34:	orr	r1, r1, r0, lsl #5
    4e38:	orr	r1, r1, ip, lsl #6
    4e3c:	ldrb	r0, [r4, #55]	; 0x37
    4e40:	orr	r1, r1, r2, lsl #7
    4e44:	ldrb	r2, [r4, #56]	; 0x38
    4e48:	orr	r1, r1, r0, lsl #8
    4e4c:	mov	r0, #2
    4e50:	orr	r1, r1, r2, lsl #9
    4e54:	uxth	r1, r1
    4e58:	add	r2, r1, #4
    4e5c:	b	4cb4 <DM@@Base+0x19c>
    4e60:	add	r3, r4, #3024	; 0xbd0
    4e64:	add	r3, r3, #2
    4e68:	sub	r2, r2, #202	; 0xca
    4e6c:	str	r3, [sp, #4]
    4e70:	mov	r3, #12
    4e74:	mov	fp, r2
    4e78:	str	r3, [sp, #8]
    4e7c:	b	4bac <DM@@Base+0x94>
    4e80:	ldrb	r2, [r7], #1
    4e84:	rsb	r9, sl, ip, asr #6
    4e88:	strb	r2, [r5, #1]!
    4e8c:	ldr	r2, [sp, #12]
    4e90:	rsb	r9, r9, r9, lsl #7
    4e94:	cmp	r2, r5
    4e98:	sub	r9, r3, r9
    4e9c:	bne	4c24 <DM@@Base+0x10c>
    4ea0:	b	4c7c <DM@@Base+0x164>
    4ea4:	ldr	r0, [sp, #4]
    4ea8:	mov	r1, r5
    4eac:	bl	2a5c <__assert_fail@plt+0x548>
    4eb0:	subs	r3, r0, #0
    4eb4:	str	r3, [sp, #4]
    4eb8:	beq	4b98 <DM@@Base+0x80>
    4ebc:	cmp	r5, #0
    4ec0:	ble	4f30 <DM@@Base+0x418>
    4ec4:	ldr	r7, [pc, #224]	; 4fac <DM@@Base+0x494>
    4ec8:	add	r2, r3, r5
    4ecc:	ldr	r8, [pc, #196]	; 4f98 <DM@@Base+0x480>
    4ed0:	add	r7, pc, r7
    4ed4:	mov	fp, r2
    4ed8:	add	r9, r4, #67	; 0x43
    4edc:	mov	r5, r3
    4ee0:	mov	r1, #0
    4ee4:	mov	r0, r4
    4ee8:	bl	219c <btbb_packet_get_flag@plt>
    4eec:	add	r2, r6, #1
    4ef0:	mov	r3, r2
    4ef4:	smull	r1, ip, r8, r2
    4ef8:	add	r6, r7, r6
    4efc:	add	ip, ip, r2
    4f00:	asr	sl, r2, #31
    4f04:	cmp	r0, #0
    4f08:	beq	4f50 <DM@@Base+0x438>
    4f0c:	ldrb	r3, [r5], #1
    4f10:	ldrb	r1, [r6, #1432]	; 0x598
    4f14:	rsb	r6, sl, ip, asr #6
    4f18:	cmp	fp, r5
    4f1c:	eor	r3, r3, r1
    4f20:	rsb	r6, r6, r6, lsl #7
    4f24:	sub	r6, r2, r6
    4f28:	strb	r3, [r9, #1]!
    4f2c:	bne	4ee0 <DM@@Base+0x3c8>
    4f30:	ldr	r0, [sp, #4]
    4f34:	bl	2160 <free@plt>
    4f38:	mov	r0, r4
    4f3c:	bl	2d54 <__assert_fail@plt+0x840>
    4f40:	cmp	r0, #0
    4f44:	moveq	r0, #2
    4f48:	movne	r0, #10
    4f4c:	b	4b9c <DM@@Base+0x84>
    4f50:	ldrb	r2, [r5], #1
    4f54:	rsb	r6, sl, ip, asr #6
    4f58:	cmp	r5, fp
    4f5c:	rsb	r6, r6, r6, lsl #7
    4f60:	sub	r6, r3, r6
    4f64:	strb	r2, [r9, #1]!
    4f68:	bne	4ee0 <DM@@Base+0x3c8>
    4f6c:	b	4f30 <DM@@Base+0x418>
    4f70:	ldrb	r2, [r7], #1
    4f74:	rsb	r9, sl, ip, asr #6
    4f78:	strb	r2, [r5, #1]!
    4f7c:	ldr	r2, [sp, #12]
    4f80:	rsb	r9, r9, r9, lsl #7
    4f84:	cmp	r2, r5
    4f88:	sub	r9, r3, r9
    4f8c:	bne	4da4 <DM@@Base+0x28c>
    4f90:	b	4dfc <DM@@Base+0x2e4>
    4f94:	ldrdeq	pc, [r0], -r0
    4f98:	tsthi	r2, r9, lsl #8
    4f9c:			; <UNDEFINED> instruction: 0x0000f4b4
    4fa0:	ldrdeq	pc, [r0], -ip
    4fa4:	andeq	pc, r0, r0, asr r3	; <UNPREDICTABLE>
    4fa8:	andeq	pc, r0, r4, lsr r3	; <UNPREDICTABLE>
    4fac:	ldrdeq	pc, [r0], -r8

00004fb0 <DH@@Base>:
    4fb0:	add	r2, r1, #2816	; 0xb00
    4fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4fb8:	sub	sp, sp, #20
    4fbc:	ldrh	r2, [r2, #6]
    4fc0:	ldrb	r3, [r1, #18]
    4fc4:	add	r5, r1, #2944	; 0xb80
    4fc8:	sub	r2, r2, #122	; 0x7a
    4fcc:	str	r2, [sp, #4]
    4fd0:	sub	r3, r3, #4
    4fd4:	add	r2, r5, #2
    4fd8:	mov	r6, r1
    4fdc:	str	r2, [sp, #8]
    4fe0:	cmp	r3, #11
    4fe4:	addls	pc, pc, r3, lsl #2
    4fe8:	b	5180 <DH@@Base+0x1d0>
    4fec:	b	501c <DH@@Base+0x6c>
    4ff0:	b	5180 <DH@@Base+0x1d0>
    4ff4:	b	5180 <DH@@Base+0x1d0>
    4ff8:	b	5180 <DH@@Base+0x1d0>
    4ffc:	b	5180 <DH@@Base+0x1d0>
    5000:	b	501c <DH@@Base+0x6c>
    5004:	b	5180 <DH@@Base+0x1d0>
    5008:	b	52a8 <DH@@Base+0x2f8>
    500c:	b	5180 <DH@@Base+0x1d0>
    5010:	b	5180 <DH@@Base+0x1d0>
    5014:	b	5180 <DH@@Base+0x1d0>
    5018:	b	518c <DH@@Base+0x1dc>
    501c:	ldr	r3, [sp, #4]
    5020:	cmp	r3, #7
    5024:	ble	5180 <DH@@Base+0x1d0>
    5028:	ldr	r3, [pc, #892]	; 53ac <DH@@Base+0x3fc>
    502c:	and	r0, r0, #63	; 0x3f
    5030:	add	r3, pc, r3
    5034:	add	r0, r3, r0
    5038:	ldr	fp, [pc, #880]	; 53b0 <DH@@Base+0x400>
    503c:	ldrb	r3, [r0, #1368]	; 0x558
    5040:	mov	sl, r2
    5044:	ldr	r2, [pc, #872]	; 53b4 <DH@@Base+0x404>
    5048:	add	r3, r3, #18
    504c:	add	r2, pc, r2
    5050:	str	r2, [sp]
    5054:	mov	r7, fp
    5058:	smull	r2, fp, fp, r3
    505c:	add	fp, fp, r3
    5060:	asr	r1, r3, #31
    5064:	rsb	fp, r1, fp, asr #6
    5068:	add	r4, r6, #43	; 0x2b
    506c:	rsb	fp, fp, fp, lsl #7
    5070:	sub	fp, r3, fp
    5074:	add	r3, r6, #51	; 0x33
    5078:	mov	r5, fp
    507c:	mov	r9, r3
    5080:	mov	r1, #0
    5084:	mov	r0, r6
    5088:	bl	219c <btbb_packet_get_flag@plt>
    508c:	add	r2, r5, #1
    5090:	ldr	lr, [sp]
    5094:	smull	r1, ip, r7, r2
    5098:	mov	r3, r2
    509c:	add	r5, lr, r5
    50a0:	add	ip, ip, r2
    50a4:	asr	r8, r2, #31
    50a8:	cmp	r0, #0
    50ac:	beq	52b4 <DH@@Base+0x304>
    50b0:	ldrb	r1, [r5, #1432]	; 0x598
    50b4:	ldrb	r3, [sl], #1
    50b8:	rsb	r5, r8, ip, asr #6
    50bc:	eor	r3, r3, r1
    50c0:	rsb	r5, r5, r5, lsl #7
    50c4:	strb	r3, [r4, #1]!
    50c8:	cmp	r4, r9
    50cc:	sub	r5, r2, r5
    50d0:	bne	5080 <DH@@Base+0xd0>
    50d4:	ldrb	r2, [r6, #48]	; 0x30
    50d8:	ldrb	r3, [r6, #47]	; 0x2f
    50dc:	ldrb	r0, [r6, #49]	; 0x31
    50e0:	ldrb	r1, [r6, #50]	; 0x32
    50e4:	orr	r3, r3, r2, lsl #1
    50e8:	ldrb	r2, [r6, #51]	; 0x33
    50ec:	orr	r3, r3, r0, lsl #2
    50f0:	orr	r3, r3, r1, lsl #3
    50f4:	mov	r1, #30
    50f8:	orr	r3, r3, r2, lsl #4
    50fc:	mov	r2, #1
    5100:	uxtb	r3, r3
    5104:	add	r3, r3, #3
    5108:	str	r1, [sp, #12]
    510c:	ldrb	r0, [r6, #18]
    5110:	sub	r1, r0, #3
    5114:	uxtb	r1, r1
    5118:	cmp	r1, #12
    511c:	movhi	r4, #0
    5120:	ldrls	ip, [pc, #656]	; 53b8 <DH@@Base+0x408>
    5124:	addls	ip, pc, ip
    5128:	addls	r1, ip, r1, lsl #2
    512c:	ldrls	r4, [r1, #1560]	; 0x618
    5130:	cmp	r4, r3
    5134:	ldr	ip, [sp, #12]
    5138:	ldrb	lr, [r6, #45]	; 0x2d
    513c:	movlt	r3, r4
    5140:	ldrb	r1, [r6, #44]	; 0x2c
    5144:	cmp	r3, ip
    5148:	ldrb	ip, [r6, #46]	; 0x2e
    514c:	orr	r1, r1, lr, lsl #1
    5150:	str	r3, [r6, #64]	; 0x40
    5154:	str	r2, [r6, #40]	; 0x28
    5158:	strb	r1, [r6, #60]	; 0x3c
    515c:	strb	ip, [r6, #61]	; 0x3d
    5160:	bgt	5174 <DH@@Base+0x1c4>
    5164:	ldr	r2, [sp, #4]
    5168:	lsl	r3, r3, #3
    516c:	cmp	r2, r3
    5170:	bge	52f4 <DH@@Base+0x344>
    5174:	mov	r0, #1
    5178:	add	sp, sp, #20
    517c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5180:	mov	r0, #0
    5184:	add	sp, sp, #20
    5188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    518c:	ldr	r3, [pc, #552]	; 53bc <DH@@Base+0x40c>
    5190:	str	r3, [sp, #12]
    5194:	ldr	r3, [sp, #4]
    5198:	cmp	r3, #15
    519c:	ble	5180 <DH@@Base+0x1d0>
    51a0:	ldr	r3, [pc, #536]	; 53c0 <DH@@Base+0x410>
    51a4:	and	r0, r0, #63	; 0x3f
    51a8:	add	r3, pc, r3
    51ac:	add	r0, r3, r0
    51b0:	ldr	r2, [pc, #504]	; 53b0 <DH@@Base+0x400>
    51b4:	ldrb	r3, [r0, #1368]	; 0x558
    51b8:	mov	r9, r2
    51bc:	ldr	r1, [pc, #512]	; 53c4 <DH@@Base+0x414>
    51c0:	add	r3, r3, #18
    51c4:	add	r1, pc, r1
    51c8:	smull	r2, fp, r2, r3
    51cc:	str	r1, [sp]
    51d0:	add	fp, fp, r3
    51d4:	asr	r1, r3, #31
    51d8:	rsb	fp, r1, fp, asr #6
    51dc:	ldr	r5, [sp, #8]
    51e0:	rsb	fp, fp, fp, lsl #7
    51e4:	sub	fp, r3, fp
    51e8:	add	r3, r6, #59	; 0x3b
    51ec:	add	r4, r6, #43	; 0x2b
    51f0:	mov	sl, fp
    51f4:	mov	r8, r3
    51f8:	mov	r1, #0
    51fc:	mov	r0, r6
    5200:	bl	219c <btbb_packet_get_flag@plt>
    5204:	add	r2, sl, #1
    5208:	ldr	lr, [sp]
    520c:	smull	r1, ip, r9, r2
    5210:	mov	r3, r2
    5214:	add	sl, lr, sl
    5218:	add	ip, ip, r2
    521c:	asr	r7, r2, #31
    5220:	cmp	r0, #0
    5224:	beq	52d4 <DH@@Base+0x324>
    5228:	ldrb	r1, [sl, #1432]	; 0x598
    522c:	ldrb	r3, [r5], #1
    5230:	rsb	sl, r7, ip, asr #6
    5234:	eor	r3, r3, r1
    5238:	rsb	sl, sl, sl, lsl #7
    523c:	strb	r3, [r4, #1]!
    5240:	cmp	r4, r8
    5244:	sub	sl, r2, sl
    5248:	bne	51f8 <DH@@Base+0x248>
    524c:	ldrb	r1, [r6, #48]	; 0x30
    5250:	ldrb	r0, [r6, #49]	; 0x31
    5254:	ldrb	r3, [r6, #47]	; 0x2f
    5258:	ldrb	r2, [r6, #50]	; 0x32
    525c:	orr	r3, r3, r1, lsl #1
    5260:	ldrb	r1, [r6, #51]	; 0x33
    5264:	orr	r3, r3, r0, lsl #2
    5268:	orr	r3, r3, r2, lsl #3
    526c:	ldrb	r2, [r6, #52]	; 0x34
    5270:	ldrb	r0, [r6, #53]	; 0x35
    5274:	orr	r3, r3, r1, lsl #4
    5278:	ldrb	r1, [r6, #54]	; 0x36
    527c:	orr	r3, r3, r2, lsl #5
    5280:	orr	r3, r3, r0, lsl #6
    5284:	ldrb	r2, [r6, #55]	; 0x37
    5288:	orr	r3, r3, r1, lsl #7
    528c:	ldrb	r1, [r6, #56]	; 0x38
    5290:	orr	r3, r3, r2, lsl #8
    5294:	mov	r2, #2
    5298:	orr	r3, r3, r1, lsl #9
    529c:	uxth	r3, r3
    52a0:	add	r3, r3, #4
    52a4:	b	510c <DH@@Base+0x15c>
    52a8:	mov	r3, #187	; 0xbb
    52ac:	str	r3, [sp, #12]
    52b0:	b	5194 <DH@@Base+0x1e4>
    52b4:	ldrb	r2, [sl], #1
    52b8:	rsb	r5, r8, ip, asr #6
    52bc:	strb	r2, [r4, #1]!
    52c0:	rsb	r5, r5, r5, lsl #7
    52c4:	cmp	r9, r4
    52c8:	sub	r5, r3, r5
    52cc:	bne	5080 <DH@@Base+0xd0>
    52d0:	b	50d4 <DH@@Base+0x124>
    52d4:	ldrb	r2, [r5], #1
    52d8:	rsb	sl, r7, ip, asr #6
    52dc:	strb	r2, [r4, #1]!
    52e0:	rsb	sl, sl, sl, lsl #7
    52e4:	cmp	r8, r4
    52e8:	sub	sl, r3, sl
    52ec:	bne	51f8 <DH@@Base+0x248>
    52f0:	b	524c <DH@@Base+0x29c>
    52f4:	cmp	r3, #0
    52f8:	ble	5368 <DH@@Base+0x3b8>
    52fc:	ldr	r5, [sp, #8]
    5300:	ldr	r7, [pc, #192]	; 53c8 <DH@@Base+0x418>
    5304:	ldr	r9, [pc, #164]	; 53b0 <DH@@Base+0x400>
    5308:	add	r7, pc, r7
    530c:	add	r4, r5, r3
    5310:	add	r8, r6, #67	; 0x43
    5314:	mov	r1, #0
    5318:	mov	r0, r6
    531c:	bl	219c <btbb_packet_get_flag@plt>
    5320:	add	r2, fp, #1
    5324:	mov	r3, r2
    5328:	smull	r1, ip, r9, r2
    532c:	add	fp, r7, fp
    5330:	add	ip, ip, r2
    5334:	asr	lr, r2, #31
    5338:	cmp	r0, #0
    533c:	beq	538c <DH@@Base+0x3dc>
    5340:	ldrb	r3, [r5], #1
    5344:	ldrb	r1, [fp, #1432]	; 0x598
    5348:	rsb	fp, lr, ip, asr #6
    534c:	cmp	r4, r5
    5350:	eor	r3, r3, r1
    5354:	rsb	fp, fp, fp, lsl #7
    5358:	sub	fp, r2, fp
    535c:	strb	r3, [r8, #1]!
    5360:	bne	5314 <DH@@Base+0x364>
    5364:	ldrb	r0, [r6, #18]
    5368:	cmp	r0, #9
    536c:	moveq	r0, #2
    5370:	beq	5184 <DH@@Base+0x1d4>
    5374:	mov	r0, r6
    5378:	bl	2d54 <__assert_fail@plt+0x840>
    537c:	cmp	r0, #0
    5380:	moveq	r0, #2
    5384:	movne	r0, #10
    5388:	b	5184 <DH@@Base+0x1d4>
    538c:	ldrb	r2, [r5], #1
    5390:	rsb	fp, lr, ip, asr #6
    5394:	cmp	r5, r4
    5398:	rsb	fp, fp, fp, lsl #7
    539c:	sub	fp, r3, fp
    53a0:	strb	r2, [r8, #1]!
    53a4:	bne	5314 <DH@@Base+0x364>
    53a8:	b	5364 <DH@@Base+0x3b4>
    53ac:	andeq	pc, r0, r8, ror r0	; <UNPREDICTABLE>
    53b0:	tsthi	r2, r9, lsl #8
    53b4:	andeq	pc, r0, ip, asr r0	; <UNPREDICTABLE>
    53b8:	andeq	lr, r0, r4, lsl #31
    53bc:	andeq	r0, r0, r7, asr r1
    53c0:	andeq	lr, r0, r0, lsl #30
    53c4:	andeq	lr, r0, r4, ror #29
    53c8:	andeq	lr, r0, r0, lsr #27

000053cc <EV3@@Base>:
    53cc:	add	r2, r1, #2816	; 0xb00
    53d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    53d4:	add	r3, r1, #2944	; 0xb80
    53d8:	ldrh	r2, [r2, #6]
    53dc:	sub	sp, sp, #20
    53e0:	mov	r4, #0
    53e4:	sub	r2, r2, #122	; 0x7a
    53e8:	add	r3, r3, #2
    53ec:	cmp	r2, #7
    53f0:	str	r2, [sp, #12]
    53f4:	str	r3, [sp]
    53f8:	str	r4, [r1, #64]	; 0x40
    53fc:	ble	54f0 <EV3@@Base+0x124>
    5400:	ldr	r3, [pc, #324]	; 554c <EV3@@Base+0x180>
    5404:	and	r2, r0, #63	; 0x3f
    5408:	add	r3, pc, r3
    540c:	add	r3, r3, r2
    5410:	add	r6, r1, #2944	; 0xb80
    5414:	ldrb	r3, [r3, #1368]	; 0x558
    5418:	ldr	r9, [pc, #304]	; 5550 <EV3@@Base+0x184>
    541c:	mov	r5, r1
    5420:	str	r3, [sp, #8]
    5424:	add	r3, r1, #68	; 0x44
    5428:	str	r3, [sp, #4]
    542c:	ldr	r3, [pc, #288]	; 5554 <EV3@@Base+0x188>
    5430:	add	r6, r6, #10
    5434:	add	r3, pc, r3
    5438:	mov	fp, r3
    543c:	ldr	r3, [sp, #8]
    5440:	add	r0, r4, #18
    5444:	add	r0, r0, r3
    5448:	ldr	r3, [sp, #4]
    544c:	ldr	r8, [sp]
    5450:	add	r4, r3, r4
    5454:	smull	r2, r3, r9, r0
    5458:	add	r3, r3, r0
    545c:	asr	r2, r0, #31
    5460:	rsb	r7, r2, r3, asr #6
    5464:	rsb	r3, r7, r7, lsl #7
    5468:	sub	r7, r0, r3
    546c:	mov	r1, #0
    5470:	mov	r0, r5
    5474:	bl	219c <btbb_packet_get_flag@plt>
    5478:	add	r2, r7, #1
    547c:	mov	r3, r2
    5480:	smull	r1, ip, r9, r2
    5484:	asr	sl, r2, #31
    5488:	add	r7, fp, r7
    548c:	add	ip, ip, r2
    5490:	mov	lr, sl
    5494:	cmp	r0, #0
    5498:	beq	54fc <EV3@@Base+0x130>
    549c:	ldrb	r3, [r8], #1
    54a0:	ldrb	r1, [r7, #1432]	; 0x598
    54a4:	rsb	r7, sl, ip, asr #6
    54a8:	cmp	r6, r8
    54ac:	eor	r3, r3, r1
    54b0:	rsb	r7, r7, r7, lsl #7
    54b4:	sub	r7, r2, r7
    54b8:	strb	r3, [r4], #1
    54bc:	bne	546c <EV3@@Base+0xa0>
    54c0:	ldr	r4, [r5, #64]	; 0x40
    54c4:	cmp	r4, #2
    54c8:	bgt	5524 <EV3@@Base+0x158>
    54cc:	add	r4, r4, #1
    54d0:	cmp	r4, #31
    54d4:	str	r4, [r5, #64]	; 0x40
    54d8:	bgt	5540 <EV3@@Base+0x174>
    54dc:	lsl	r4, r4, #3
    54e0:	ldr	r2, [sp, #12]
    54e4:	add	r3, r4, #7
    54e8:	cmp	r2, r3
    54ec:	bgt	543c <EV3@@Base+0x70>
    54f0:	mov	r0, #1
    54f4:	add	sp, sp, #20
    54f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    54fc:	ldrb	r2, [r8], #1
    5500:	rsb	r7, sl, ip, asr #6
    5504:	cmp	r6, r8
    5508:	rsb	r7, r7, r7, lsl #7
    550c:	sub	r7, r3, r7
    5510:	strb	r2, [r4], #1
    5514:	bne	546c <EV3@@Base+0xa0>
    5518:	ldr	r4, [r5, #64]	; 0x40
    551c:	cmp	r4, #2
    5520:	ble	54cc <EV3@@Base+0x100>
    5524:	mov	r0, r5
    5528:	bl	2d54 <__assert_fail@plt+0x840>
    552c:	cmp	r0, #0
    5530:	beq	54cc <EV3@@Base+0x100>
    5534:	mov	r0, #10
    5538:	add	sp, sp, #20
    553c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5540:	mov	r0, #2
    5544:	add	sp, sp, #20
    5548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    554c:	andeq	lr, r0, r0, lsr #25
    5550:	tsthi	r2, r9, lsl #8
    5554:	andeq	lr, r0, r4, ror ip

00005558 <EV4@@Base>:
    5558:	add	r2, r1, #2816	; 0xb00
    555c:	ldr	r3, [pc, #448]	; 5724 <EV4@@Base+0x1cc>
    5560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5564:	mov	r4, r1
    5568:	ldrh	r1, [r2, #6]
    556c:	sub	sp, sp, #28
    5570:	add	r3, pc, r3
    5574:	and	r0, r0, #63	; 0x3f
    5578:	add	r3, r3, r0
    557c:	mov	ip, #0
    5580:	add	r2, r4, #2944	; 0xb80
    5584:	ldr	lr, [pc, #412]	; 5728 <EV4@@Base+0x1d0>
    5588:	str	r3, [sp, #20]
    558c:	ldr	r5, [pc, #408]	; 572c <EV4@@Base+0x1d4>
    5590:	sub	r3, r1, #122	; 0x7a
    5594:	str	r3, [sp, #12]
    5598:	add	r8, r4, #67	; 0x43
    559c:	add	r3, r2, #2
    55a0:	mov	r6, ip
    55a4:	add	lr, pc, lr
    55a8:	str	r3, [sp, #16]
    55ac:	mov	r3, #1
    55b0:	str	lr, [sp]
    55b4:	str	ip, [sp, #8]
    55b8:	str	r3, [r4, #64]	; 0x40
    55bc:	ldr	r2, [sp, #8]
    55c0:	ldr	r1, [sp, #12]
    55c4:	add	r3, r2, #14
    55c8:	cmp	r1, r3
    55cc:	ble	5708 <EV4@@Base+0x1b0>
    55d0:	ldr	r0, [sp, #16]
    55d4:	mov	r1, #10
    55d8:	add	r0, r0, r2
    55dc:	bl	2a5c <__assert_fail@plt+0x548>
    55e0:	subs	r3, r0, #0
    55e4:	str	r3, [sp, #4]
    55e8:	beq	5710 <EV4@@Base+0x1b8>
    55ec:	mov	r9, r3
    55f0:	ldr	r3, [sp, #20]
    55f4:	add	r0, r6, #18
    55f8:	ldrb	r3, [r3, #1368]	; 0x558
    55fc:	add	r0, r0, r3
    5600:	add	r3, r8, #10
    5604:	mov	fp, r3
    5608:	smull	r2, r3, r5, r0
    560c:	add	r3, r3, r0
    5610:	asr	r2, r0, #31
    5614:	rsb	r7, r2, r3, asr #6
    5618:	rsb	r3, r7, r7, lsl #7
    561c:	sub	r7, r0, r3
    5620:	mov	r1, #0
    5624:	mov	r0, r4
    5628:	bl	219c <btbb_packet_get_flag@plt>
    562c:	add	r2, r7, #1
    5630:	ldr	lr, [sp]
    5634:	smull	r1, ip, r5, r2
    5638:	mov	r3, r2
    563c:	add	r7, lr, r7
    5640:	add	ip, ip, r2
    5644:	asr	sl, r2, #31
    5648:	cmp	r0, #0
    564c:	beq	56c0 <EV4@@Base+0x168>
    5650:	ldrb	r1, [r7, #1432]	; 0x598
    5654:	ldrb	r3, [r9], #1
    5658:	rsb	r7, sl, ip, asr #6
    565c:	eor	r3, r3, r1
    5660:	rsb	r7, r7, r7, lsl #7
    5664:	strb	r3, [r8, #1]!
    5668:	cmp	r8, fp
    566c:	sub	r7, r2, r7
    5670:	bne	5620 <EV4@@Base+0xc8>
    5674:	ldr	r0, [sp, #4]
    5678:	bl	2160 <free@plt>
    567c:	ldr	r8, [r4, #64]	; 0x40
    5680:	lsl	r7, r8, #3
    5684:	cmp	r7, r6
    5688:	ble	569c <EV4@@Base+0x144>
    568c:	b	56e0 <EV4@@Base+0x188>
    5690:	cmp	r7, r6
    5694:	str	r8, [r4, #64]	; 0x40
    5698:	bgt	56e0 <EV4@@Base+0x188>
    569c:	mov	r0, r4
    56a0:	bl	2d54 <__assert_fail@plt+0x840>
    56a4:	add	r7, r7, #8
    56a8:	add	r8, r8, #1
    56ac:	cmp	r0, #0
    56b0:	beq	5690 <EV4@@Base+0x138>
    56b4:	mov	r0, #10
    56b8:	add	sp, sp, #28
    56bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    56c0:	ldrb	r2, [r9], #1
    56c4:	rsb	r7, sl, ip, asr #6
    56c8:	strb	r2, [r8, #1]!
    56cc:	rsb	r7, r7, r7, lsl #7
    56d0:	cmp	r8, fp
    56d4:	sub	r7, r3, r7
    56d8:	bne	5620 <EV4@@Base+0xc8>
    56dc:	b	5674 <EV4@@Base+0x11c>
    56e0:	ldr	r3, [sp, #8]
    56e4:	ldr	r2, [pc, #68]	; 5730 <EV4@@Base+0x1d8>
    56e8:	add	r3, r3, #15
    56ec:	cmp	r3, r2
    56f0:	str	r3, [sp, #8]
    56f4:	add	r6, r6, #10
    56f8:	mov	r8, fp
    56fc:	bne	55bc <EV4@@Base+0x64>
    5700:	mov	r0, #2
    5704:	b	56b8 <EV4@@Base+0x160>
    5708:	mov	r0, #1
    570c:	b	56b8 <EV4@@Base+0x160>
    5710:	ldr	r3, [sp, #8]
    5714:	cmp	r3, #44	; 0x2c
    5718:	movle	r0, #0
    571c:	movgt	r0, #1
    5720:	b	56b8 <EV4@@Base+0x160>
    5724:	andeq	lr, r0, r8, lsr fp
    5728:	andeq	lr, r0, r4, lsl #22
    572c:	tsthi	r2, r9, lsl #8
    5730:			; <UNDEFINED> instruction: 0x000005be

00005734 <EV5@@Base>:
    5734:	add	r2, r1, #2816	; 0xb00
    5738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    573c:	add	r3, r1, #2944	; 0xb80
    5740:	ldrh	r2, [r2, #6]
    5744:	sub	sp, sp, #20
    5748:	mov	r4, #0
    574c:	sub	r2, r2, #122	; 0x7a
    5750:	add	r3, r3, #2
    5754:	cmp	r2, #7
    5758:	str	r2, [sp, #12]
    575c:	str	r3, [sp]
    5760:	str	r4, [r1, #64]	; 0x40
    5764:	ble	5858 <EV5@@Base+0x124>
    5768:	ldr	r3, [pc, #324]	; 58b4 <EV5@@Base+0x180>
    576c:	and	r2, r0, #63	; 0x3f
    5770:	add	r3, pc, r3
    5774:	add	r3, r3, r2
    5778:	add	r6, r1, #2944	; 0xb80
    577c:	ldrb	r3, [r3, #1368]	; 0x558
    5780:	ldr	r9, [pc, #304]	; 58b8 <EV5@@Base+0x184>
    5784:	mov	r5, r1
    5788:	str	r3, [sp, #8]
    578c:	add	r3, r1, #68	; 0x44
    5790:	str	r3, [sp, #4]
    5794:	ldr	r3, [pc, #288]	; 58bc <EV5@@Base+0x188>
    5798:	add	r6, r6, #10
    579c:	add	r3, pc, r3
    57a0:	mov	fp, r3
    57a4:	ldr	r3, [sp, #8]
    57a8:	add	r0, r4, #18
    57ac:	add	r0, r0, r3
    57b0:	ldr	r3, [sp, #4]
    57b4:	ldr	r8, [sp]
    57b8:	add	r4, r3, r4
    57bc:	smull	r2, r3, r9, r0
    57c0:	add	r3, r3, r0
    57c4:	asr	r2, r0, #31
    57c8:	rsb	r7, r2, r3, asr #6
    57cc:	rsb	r3, r7, r7, lsl #7
    57d0:	sub	r7, r0, r3
    57d4:	mov	r1, #0
    57d8:	mov	r0, r5
    57dc:	bl	219c <btbb_packet_get_flag@plt>
    57e0:	add	r2, r7, #1
    57e4:	mov	r3, r2
    57e8:	smull	r1, ip, r9, r2
    57ec:	asr	sl, r2, #31
    57f0:	add	r7, fp, r7
    57f4:	add	ip, ip, r2
    57f8:	mov	lr, sl
    57fc:	cmp	r0, #0
    5800:	beq	5864 <EV5@@Base+0x130>
    5804:	ldrb	r3, [r8], #1
    5808:	ldrb	r1, [r7, #1432]	; 0x598
    580c:	rsb	r7, sl, ip, asr #6
    5810:	cmp	r6, r8
    5814:	eor	r3, r3, r1
    5818:	rsb	r7, r7, r7, lsl #7
    581c:	sub	r7, r2, r7
    5820:	strb	r3, [r4], #1
    5824:	bne	57d4 <EV5@@Base+0xa0>
    5828:	ldr	r4, [r5, #64]	; 0x40
    582c:	cmp	r4, #2
    5830:	bgt	588c <EV5@@Base+0x158>
    5834:	add	r4, r4, #1
    5838:	cmp	r4, #181	; 0xb5
    583c:	str	r4, [r5, #64]	; 0x40
    5840:	bgt	58a8 <EV5@@Base+0x174>
    5844:	lsl	r4, r4, #3
    5848:	ldr	r2, [sp, #12]
    584c:	add	r3, r4, #7
    5850:	cmp	r2, r3
    5854:	bgt	57a4 <EV5@@Base+0x70>
    5858:	mov	r0, #1
    585c:	add	sp, sp, #20
    5860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5864:	ldrb	r2, [r8], #1
    5868:	rsb	r7, sl, ip, asr #6
    586c:	cmp	r6, r8
    5870:	rsb	r7, r7, r7, lsl #7
    5874:	sub	r7, r3, r7
    5878:	strb	r2, [r4], #1
    587c:	bne	57d4 <EV5@@Base+0xa0>
    5880:	ldr	r4, [r5, #64]	; 0x40
    5884:	cmp	r4, #2
    5888:	ble	5834 <EV5@@Base+0x100>
    588c:	mov	r0, r5
    5890:	bl	2d54 <__assert_fail@plt+0x840>
    5894:	cmp	r0, #0
    5898:	beq	5834 <EV5@@Base+0x100>
    589c:	mov	r0, #10
    58a0:	add	sp, sp, #20
    58a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58a8:	mov	r0, #2
    58ac:	add	sp, sp, #20
    58b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58b4:	andeq	lr, r0, r8, lsr r9
    58b8:	tsthi	r2, r9, lsl #8
    58bc:	andeq	lr, r0, ip, lsl #18

000058c0 <HV@@Base>:
    58c0:	add	r2, r1, #2816	; 0xb00
    58c4:	ldr	r3, [pc, #936]	; 5c74 <HV@@Base+0x3b4>
    58c8:	ldrh	r2, [r2, #6]
    58cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    58d0:	mov	r9, #0
    58d4:	cmp	r2, r3
    58d8:	sub	sp, sp, #92	; 0x5c
    58dc:	str	r9, [r1, #40]	; 0x28
    58e0:	strle	r9, [r1, #64]	; 0x40
    58e4:	movle	r0, #1
    58e8:	ble	591c <HV@@Base+0x5c>
    58ec:	mov	r5, r1
    58f0:	ldrb	r1, [r1, #18]
    58f4:	add	r4, r5, #2944	; 0xb80
    58f8:	mov	r6, r0
    58fc:	cmp	r1, #6
    5900:	add	r4, r4, #2
    5904:	beq	5924 <HV@@Base+0x64>
    5908:	cmp	r1, #7
    590c:	beq	5b88 <HV@@Base+0x2c8>
    5910:	cmp	r1, #5
    5914:	beq	5a44 <HV@@Base+0x184>
    5918:	mov	r0, #2
    591c:	add	sp, sp, #92	; 0x5c
    5920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5924:	mov	r0, r4
    5928:	mov	r1, #160	; 0xa0
    592c:	bl	2a5c <__assert_fail@plt+0x548>
    5930:	subs	r3, r0, #0
    5934:	str	r3, [sp, #4]
    5938:	moveq	r0, r3
    593c:	beq	591c <HV@@Base+0x5c>
    5940:	mov	r3, #20
    5944:	mov	r2, #1
    5948:	str	r3, [r5, #64]	; 0x40
    594c:	mov	r0, r5
    5950:	mov	r1, #7
    5954:	bl	2148 <btbb_packet_set_flag@plt>
    5958:	ldr	r3, [pc, #792]	; 5c78 <HV@@Base+0x3b8>
    595c:	and	r0, r6, #63	; 0x3f
    5960:	add	r3, pc, r3
    5964:	add	r6, r3, r0
    5968:	ldr	r8, [pc, #780]	; 5c7c <HV@@Base+0x3bc>
    596c:	ldrb	r0, [r6, #1368]	; 0x558
    5970:	ldr	r6, [r5, #64]	; 0x40
    5974:	add	r0, r0, #18
    5978:	lsl	r6, r6, #3
    597c:	smull	r2, r3, r8, r0
    5980:	add	r3, r3, r0
    5984:	asr	r2, r0, #31
    5988:	rsb	r7, r2, r3, asr #6
    598c:	cmp	r6, #0
    5990:	rsb	r3, r7, r7, lsl #7
    5994:	sub	r7, r0, r3
    5998:	ble	5a10 <HV@@Base+0x150>
    599c:	ldr	r3, [pc, #732]	; 5c80 <HV@@Base+0x3c0>
    59a0:	mov	fp, r9
    59a4:	add	r3, pc, r3
    59a8:	str	r3, [sp]
    59ac:	ldr	r3, [sp, #4]
    59b0:	add	r9, r5, #67	; 0x43
    59b4:	add	r6, r3, r6
    59b8:	mov	r4, r3
    59bc:	mov	r1, fp
    59c0:	mov	r0, r5
    59c4:	bl	219c <btbb_packet_get_flag@plt>
    59c8:	add	r2, r7, #1
    59cc:	ldr	lr, [sp]
    59d0:	smull	r1, ip, r8, r2
    59d4:	mov	r3, r2
    59d8:	add	r7, lr, r7
    59dc:	add	ip, ip, r2
    59e0:	asr	sl, r2, #31
    59e4:	cmp	r0, #0
    59e8:	beq	5a24 <HV@@Base+0x164>
    59ec:	ldrb	r3, [r4], #1
    59f0:	ldrb	r1, [r7, #1432]	; 0x598
    59f4:	rsb	r7, sl, ip, asr #6
    59f8:	cmp	r4, r6
    59fc:	eor	r3, r3, r1
    5a00:	rsb	r7, r7, r7, lsl #7
    5a04:	sub	r7, r2, r7
    5a08:	strb	r3, [r9, #1]!
    5a0c:	bne	59bc <HV@@Base+0xfc>
    5a10:	ldr	r0, [sp, #4]
    5a14:	bl	2160 <free@plt>
    5a18:	mov	r0, #2
    5a1c:	add	sp, sp, #92	; 0x5c
    5a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5a24:	ldrb	r2, [r4], #1
    5a28:	rsb	r7, sl, ip, asr #6
    5a2c:	cmp	r6, r4
    5a30:	rsb	r7, r7, r7, lsl #7
    5a34:	sub	r7, r3, r7
    5a38:	strb	r2, [r9, #1]!
    5a3c:	bne	59bc <HV@@Base+0xfc>
    5a40:	b	5a10 <HV@@Base+0x150>
    5a44:	add	r0, sp, #7
    5a48:	add	lr, sp, #87	; 0x57
    5a4c:	ldrb	r3, [r4]
    5a50:	ldrb	r7, [r4, #2]
    5a54:	ldrb	ip, [r4, #1]
    5a58:	add	r4, r4, #3
    5a5c:	orr	r1, r3, r7
    5a60:	eor	r2, ip, r3
    5a64:	and	r1, r1, ip
    5a68:	and	r8, r3, r7
    5a6c:	eor	ip, ip, r7
    5a70:	orr	r1, r1, r8
    5a74:	orr	r2, r2, ip
    5a78:	eor	r3, r3, r7
    5a7c:	strb	r1, [r0, #1]!
    5a80:	orr	r3, r2, r3
    5a84:	cmp	lr, r0
    5a88:	add	r9, r9, r3
    5a8c:	bne	5a4c <HV@@Base+0x18c>
    5a90:	cmp	r9, #19
    5a94:	movgt	r0, #0
    5a98:	bgt	591c <HV@@Base+0x5c>
    5a9c:	mov	r3, #10
    5aa0:	mov	r2, #1
    5aa4:	str	r3, [r5, #64]	; 0x40
    5aa8:	mov	r0, r5
    5aac:	mov	r1, #7
    5ab0:	bl	2148 <btbb_packet_set_flag@plt>
    5ab4:	ldr	r3, [pc, #456]	; 5c84 <HV@@Base+0x3c4>
    5ab8:	and	r0, r6, #63	; 0x3f
    5abc:	add	r3, pc, r3
    5ac0:	add	r6, r3, r0
    5ac4:	ldr	r8, [pc, #432]	; 5c7c <HV@@Base+0x3bc>
    5ac8:	ldrb	r0, [r6, #1368]	; 0x558
    5acc:	ldr	r6, [r5, #64]	; 0x40
    5ad0:	add	r4, r5, #68	; 0x44
    5ad4:	add	r0, r0, #18
    5ad8:	lsl	r6, r6, #3
    5adc:	smull	r2, r3, r8, r0
    5ae0:	add	r3, r3, r0
    5ae4:	asr	r2, r0, #31
    5ae8:	rsb	r7, r2, r3, asr #6
    5aec:	cmp	r6, #0
    5af0:	rsb	r3, r7, r7, lsl #7
    5af4:	sub	r7, r0, r3
    5af8:	ble	5918 <HV@@Base+0x58>
    5afc:	ldr	r3, [pc, #388]	; 5c88 <HV@@Base+0x3c8>
    5b00:	add	r6, r4, r6
    5b04:	add	r3, pc, r3
    5b08:	mov	fp, r3
    5b0c:	add	r9, sp, #8
    5b10:	mov	r1, #0
    5b14:	mov	r0, r5
    5b18:	bl	219c <btbb_packet_get_flag@plt>
    5b1c:	add	r2, r7, #1
    5b20:	mov	r3, r2
    5b24:	smull	r1, ip, r8, r2
    5b28:	asr	sl, r2, #31
    5b2c:	add	r7, fp, r7
    5b30:	add	ip, ip, r2
    5b34:	mov	lr, sl
    5b38:	cmp	r0, #0
    5b3c:	beq	5b68 <HV@@Base+0x2a8>
    5b40:	ldrb	r1, [r7, #1432]	; 0x598
    5b44:	ldrb	r3, [r9], #1
    5b48:	rsb	r7, sl, ip, asr #6
    5b4c:	eor	r3, r3, r1
    5b50:	rsb	r7, r7, r7, lsl #7
    5b54:	strb	r3, [r4], #1
    5b58:	cmp	r4, r6
    5b5c:	sub	r7, r2, r7
    5b60:	bne	5b10 <HV@@Base+0x250>
    5b64:	b	5918 <HV@@Base+0x58>
    5b68:	ldrb	r2, [r9], #1
    5b6c:	rsb	r7, sl, ip, asr #6
    5b70:	strb	r2, [r4], #1
    5b74:	rsb	r7, r7, r7, lsl #7
    5b78:	cmp	r4, r6
    5b7c:	sub	r7, r3, r7
    5b80:	bne	5b10 <HV@@Base+0x250>
    5b84:	b	5918 <HV@@Base+0x58>
    5b88:	mov	r3, #30
    5b8c:	mov	r2, #1
    5b90:	str	r3, [r5, #64]	; 0x40
    5b94:	mov	r0, r5
    5b98:	bl	2148 <btbb_packet_set_flag@plt>
    5b9c:	ldr	r3, [pc, #232]	; 5c8c <HV@@Base+0x3cc>
    5ba0:	and	r6, r6, #63	; 0x3f
    5ba4:	add	r3, pc, r3
    5ba8:	add	r6, r3, r6
    5bac:	ldr	r8, [pc, #200]	; 5c7c <HV@@Base+0x3bc>
    5bb0:	ldrb	r0, [r6, #1368]	; 0x558
    5bb4:	ldr	r6, [r5, #64]	; 0x40
    5bb8:	add	r0, r0, #18
    5bbc:	lsl	r6, r6, #3
    5bc0:	smull	r2, r3, r8, r0
    5bc4:	add	r3, r3, r0
    5bc8:	asr	r2, r0, #31
    5bcc:	rsb	r7, r2, r3, asr #6
    5bd0:	cmp	r6, #0
    5bd4:	rsb	r3, r7, r7, lsl #7
    5bd8:	sub	r7, r0, r3
    5bdc:	ble	5918 <HV@@Base+0x58>
    5be0:	ldr	r3, [pc, #168]	; 5c90 <HV@@Base+0x3d0>
    5be4:	mov	fp, r9
    5be8:	add	r6, r4, r6
    5bec:	add	r9, r5, #67	; 0x43
    5bf0:	add	r3, pc, r3
    5bf4:	str	r3, [sp]
    5bf8:	mov	r1, fp
    5bfc:	mov	r0, r5
    5c00:	bl	219c <btbb_packet_get_flag@plt>
    5c04:	add	r2, r7, #1
    5c08:	ldr	lr, [sp]
    5c0c:	smull	r1, ip, r8, r2
    5c10:	asr	sl, r2, #31
    5c14:	add	r7, lr, r7
    5c18:	mov	r3, r2
    5c1c:	add	ip, ip, r2
    5c20:	mov	lr, sl
    5c24:	cmp	r0, #0
    5c28:	beq	5c54 <HV@@Base+0x394>
    5c2c:	ldrb	r3, [r4], #1
    5c30:	ldrb	r1, [r7, #1432]	; 0x598
    5c34:	rsb	r7, sl, ip, asr #6
    5c38:	cmp	r6, r4
    5c3c:	eor	r3, r3, r1
    5c40:	rsb	r7, r7, r7, lsl #7
    5c44:	sub	r7, r2, r7
    5c48:	strb	r3, [r9, #1]!
    5c4c:	bne	5bf8 <HV@@Base+0x338>
    5c50:	b	5918 <HV@@Base+0x58>
    5c54:	ldrb	r2, [r4], #1
    5c58:	rsb	r7, sl, ip, asr #6
    5c5c:	cmp	r6, r4
    5c60:	rsb	r7, r7, r7, lsl #7
    5c64:	sub	r7, r3, r7
    5c68:	strb	r2, [r9, #1]!
    5c6c:	bne	5bf8 <HV@@Base+0x338>
    5c70:	b	5918 <HV@@Base+0x58>
    5c74:	andeq	r0, r0, r9, ror #2
    5c78:	andeq	lr, r0, r8, asr #14
    5c7c:	tsthi	r2, r9, lsl #8
    5c80:	andeq	lr, r0, r4, lsl #14
    5c84:	andeq	lr, r0, ip, ror #11
    5c88:	andeq	lr, r0, r4, lsr #11
    5c8c:	andeq	lr, r0, r4, lsl #10
    5c90:			; <UNDEFINED> instruction: 0x0000e4b8

00005c94 <crc_check@@Base>:
    5c94:	ldrb	r3, [r1, #18]
    5c98:	push	{r4, lr}
    5c9c:	mov	r4, r1
    5ca0:	sub	r3, r3, #2
    5ca4:	cmp	r3, #13
    5ca8:	addls	pc, pc, r3, lsl #2
    5cac:	b	5d60 <crc_check@@Base+0xcc>
    5cb0:	b	5d10 <crc_check@@Base+0x7c>
    5cb4:	b	5d38 <crc_check@@Base+0xa4>
    5cb8:	b	5d40 <crc_check@@Base+0xac>
    5cbc:	b	5d48 <crc_check@@Base+0xb4>
    5cc0:	b	5d60 <crc_check@@Base+0xcc>
    5cc4:	b	5d50 <crc_check@@Base+0xbc>
    5cc8:	b	5d38 <crc_check@@Base+0xa4>
    5ccc:	b	5d60 <crc_check@@Base+0xcc>
    5cd0:	b	5d38 <crc_check@@Base+0xa4>
    5cd4:	b	5d40 <crc_check@@Base+0xac>
    5cd8:	b	5d58 <crc_check@@Base+0xc4>
    5cdc:	b	5ce8 <crc_check@@Base+0x54>
    5ce0:	b	5d38 <crc_check@@Base+0xa4>
    5ce4:	b	5d40 <crc_check@@Base+0xac>
    5ce8:	bl	246c <EV5@plt>
    5cec:	cmp	r0, #0
    5cf0:	bne	5d1c <crc_check@@Base+0x88>
    5cf4:	ldrb	r3, [r4, #18]
    5cf8:	sub	r0, r3, #2
    5cfc:	cmp	r3, #5
    5d00:	cmpne	r0, #1
    5d04:	movhi	r0, #1
    5d08:	movls	r0, #0
    5d0c:	pop	{r4, pc}
    5d10:	bl	21a8 <fhs@plt>
    5d14:	cmp	r0, #0
    5d18:	beq	5cf4 <crc_check@@Base+0x60>
    5d1c:	cmp	r0, #1
    5d20:	pople	{r4, pc}
    5d24:	ldrb	r3, [r4, #18]
    5d28:	cmp	r3, #13
    5d2c:	cmpne	r3, #7
    5d30:	moveq	r0, #1
    5d34:	pop	{r4, pc}
    5d38:	bl	2220 <DM@plt>
    5d3c:	b	5cec <crc_check@@Base+0x58>
    5d40:	bl	2484 <DH@plt>
    5d44:	b	5cec <crc_check@@Base+0x58>
    5d48:	bl	2238 <HV@plt>
    5d4c:	b	5cec <crc_check@@Base+0x58>
    5d50:	bl	240c <EV3@plt>
    5d54:	b	5cec <crc_check@@Base+0x58>
    5d58:	bl	21b4 <EV4@plt>
    5d5c:	b	5cec <crc_check@@Base+0x58>
    5d60:	mov	r0, #1
    5d64:	pop	{r4, pc}

00005d68 <try_clock@@Base>:
    5d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5d6c:	add	r4, r1, #2880	; 0xb40
    5d70:	sub	sp, sp, #44	; 0x2c
    5d74:	add	r4, r4, #12
    5d78:	sub	r6, sp, #1
    5d7c:	add	r8, sp, #17
    5d80:	mov	r7, #0
    5d84:	ldrb	r3, [r4]
    5d88:	ldrb	r5, [r4, #2]
    5d8c:	ldrb	lr, [r4, #1]
    5d90:	add	r4, r4, #3
    5d94:	orr	ip, r3, r5
    5d98:	eor	r2, lr, r3
    5d9c:	and	ip, ip, lr
    5da0:	and	r9, r3, r5
    5da4:	eor	lr, lr, r5
    5da8:	orr	ip, ip, r9
    5dac:	orr	r2, r2, lr
    5db0:	eor	r3, r3, r5
    5db4:	strb	ip, [r6, #1]!
    5db8:	orr	r3, r2, r3
    5dbc:	cmp	r6, r8
    5dc0:	add	r7, r7, r3
    5dc4:	bne	5d84 <try_clock@@Base+0x1c>
    5dc8:	cmp	r7, #3
    5dcc:	movgt	r0, #0
    5dd0:	ble	5ddc <try_clock@@Base+0x74>
    5dd4:	add	sp, sp, #44	; 0x2c
    5dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ddc:	ldr	r3, [pc, #808]	; 610c <try_clock@@Base+0x3a4>
    5de0:	and	r0, r0, #63	; 0x3f
    5de4:	add	r3, pc, r3
    5de8:	add	r0, r3, r0
    5dec:	ldr	r3, [pc, #796]	; 6110 <try_clock@@Base+0x3a8>
    5df0:	ldrb	r0, [r0, #1368]	; 0x558
    5df4:	mov	r9, r3
    5df8:	ldr	r7, [pc, #788]	; 6114 <try_clock@@Base+0x3ac>
    5dfc:	mov	r5, r1
    5e00:	smull	r2, r3, r3, r0
    5e04:	add	r3, r3, r0
    5e08:	add	r7, pc, r7
    5e0c:	asr	r6, r3, #6
    5e10:	add	r3, sp, #37	; 0x25
    5e14:	mov	fp, r3
    5e18:	rsb	r3, r6, r6, lsl #7
    5e1c:	add	r4, sp, #19
    5e20:	mov	r8, sp
    5e24:	sub	r6, r0, r3
    5e28:	mov	r1, #0
    5e2c:	mov	r0, r5
    5e30:	bl	219c <btbb_packet_get_flag@plt>
    5e34:	add	r2, r6, #1
    5e38:	mov	r3, r2
    5e3c:	smull	r1, ip, r9, r2
    5e40:	add	r6, r7, r6
    5e44:	add	ip, ip, r2
    5e48:	asr	sl, r2, #31
    5e4c:	cmp	r0, #0
    5e50:	beq	60ec <try_clock@@Base+0x384>
    5e54:	ldrb	r1, [r6, #1432]	; 0x598
    5e58:	ldrb	r3, [r8], #1
    5e5c:	rsb	r6, sl, ip, asr #6
    5e60:	eor	r3, r3, r1
    5e64:	rsb	r6, r6, r6, lsl #7
    5e68:	strb	r3, [r4, #1]!
    5e6c:	cmp	fp, r4
    5e70:	sub	r6, r2, r6
    5e74:	bne	5e28 <try_clock@@Base+0xc0>
    5e78:	ldrb	ip, [sp, #31]
    5e7c:	ldrb	lr, [sp, #21]
    5e80:	ldrb	r2, [sp, #30]
    5e84:	ldrb	r1, [sp, #32]
    5e88:	ldrb	r4, [sp, #22]
    5e8c:	ldrb	r3, [sp, #20]
    5e90:	ldrb	r0, [sp, #33]	; 0x21
    5e94:	orr	r2, r2, ip, lsl #1
    5e98:	ldrb	ip, [sp, #34]	; 0x22
    5e9c:	orr	r3, r3, lr, lsl #1
    5ea0:	ldrb	lr, [sp, #35]	; 0x23
    5ea4:	orr	r2, r2, r1, lsl #2
    5ea8:	orr	r3, r3, r4, lsl #2
    5eac:	ldrb	r1, [sp, #23]
    5eb0:	ldrb	r4, [sp, #36]	; 0x24
    5eb4:	orr	r2, r2, r0, lsl #3
    5eb8:	ldrb	r0, [sp, #24]
    5ebc:	orr	r2, r2, ip, lsl #4
    5ec0:	ldrb	ip, [sp, #25]
    5ec4:	ldrb	r6, [sp, #37]	; 0x25
    5ec8:	orr	r2, r2, lr, lsl #5
    5ecc:	ldrb	lr, [sp, #26]
    5ed0:	orr	r3, r3, r1, lsl #3
    5ed4:	orr	r2, r2, r4, lsl #6
    5ed8:	ldrb	r4, [sp, #27]
    5edc:	orr	r3, r3, r0, lsl #4
    5ee0:	ldrb	r8, [sp, #28]
    5ee4:	orr	r3, r3, ip, lsl #5
    5ee8:	ldrb	r7, [sp, #29]
    5eec:	orr	r2, r2, r6, lsl #7
    5ef0:	orr	r3, r3, lr, lsl #6
    5ef4:	orr	r3, r3, r4, lsl #7
    5ef8:	sxtb	r2, r2
    5efc:	orr	r3, r3, r8, lsl #8
    5f00:	orr	r3, r3, r7, lsl #9
    5f04:	uxtb	r6, r2
    5f08:	eor	r4, r6, #101	; 0x65
    5f0c:	cmp	r2, #0
    5f10:	sxth	r3, r3
    5f14:	movlt	r6, r4
    5f18:	uxth	r4, r3
    5f1c:	lsr	r2, r6, #7
    5f20:	eor	r2, r2, r4, lsr #9
    5f24:	and	r2, r2, #1
    5f28:	orr	r2, r2, r6, lsl #1
    5f2c:	orr	r1, r1, r0, lsl #1
    5f30:	sxtb	r2, r2
    5f34:	cmp	r2, #0
    5f38:	uxtb	r0, r2
    5f3c:	orr	ip, r1, ip, lsl #2
    5f40:	eor	r1, r0, #101	; 0x65
    5f44:	movge	r1, r0
    5f48:	orr	lr, ip, lr, lsl #3
    5f4c:	lsr	r2, r1, #7
    5f50:	eor	r2, r2, r4, lsr #8
    5f54:	and	r2, r2, #1
    5f58:	orr	r2, r2, r1, lsl #1
    5f5c:	strb	lr, [r5, #18]
    5f60:	sxtb	r2, r2
    5f64:	cmp	r2, #0
    5f68:	uxtb	r0, r2
    5f6c:	eor	r1, r0, #101	; 0x65
    5f70:	movge	r1, r0
    5f74:	lsr	r2, r1, #7
    5f78:	eor	r2, r2, r4, lsr #7
    5f7c:	and	r2, r2, #1
    5f80:	orr	r2, r2, r1, lsl #1
    5f84:	sxtb	r2, r2
    5f88:	cmp	r2, #0
    5f8c:	uxtb	r0, r2
    5f90:	eor	r1, r0, #101	; 0x65
    5f94:	movge	r1, r0
    5f98:	lsr	r2, r1, #7
    5f9c:	eor	r2, r2, r4, lsr #6
    5fa0:	and	r2, r2, #1
    5fa4:	orr	r2, r2, r1, lsl #1
    5fa8:	sxtb	r2, r2
    5fac:	cmp	r2, #0
    5fb0:	uxtb	r0, r2
    5fb4:	eor	r1, r0, #101	; 0x65
    5fb8:	movge	r1, r0
    5fbc:	lsr	r2, r1, #7
    5fc0:	eor	r2, r2, r4, lsr #5
    5fc4:	and	r2, r2, #1
    5fc8:	orr	r2, r2, r1, lsl #1
    5fcc:	sxtb	r2, r2
    5fd0:	cmp	r2, #0
    5fd4:	uxtb	r0, r2
    5fd8:	eor	r1, r0, #101	; 0x65
    5fdc:	movge	r1, r0
    5fe0:	lsr	r2, r1, #7
    5fe4:	eor	r2, r2, r4, lsr #4
    5fe8:	and	r2, r2, #1
    5fec:	orr	r2, r2, r1, lsl #1
    5ff0:	sxtb	r2, r2
    5ff4:	cmp	r2, #0
    5ff8:	uxtb	r0, r2
    5ffc:	eor	r1, r0, #101	; 0x65
    6000:	movge	r2, r0
    6004:	movlt	r2, r1
    6008:	lsr	r1, r2, #7
    600c:	eor	r1, r1, r4, lsr #3
    6010:	and	r1, r1, #1
    6014:	orr	r1, r1, r2, lsl #1
    6018:	sxtb	r1, r1
    601c:	cmp	r1, #0
    6020:	uxtb	r0, r1
    6024:	eor	r2, r0, #101	; 0x65
    6028:	movge	r2, r0
    602c:	lsr	r1, r2, #7
    6030:	eor	r1, r1, r4, lsr #2
    6034:	and	r1, r1, #1
    6038:	orr	r1, r1, r2, lsl #1
    603c:	sxtb	r1, r1
    6040:	cmp	r1, #0
    6044:	uxtb	r0, r1
    6048:	eor	r2, r0, #101	; 0x65
    604c:	movge	r1, r0
    6050:	movlt	r1, r2
    6054:	lsr	r2, r1, #7
    6058:	eor	r2, r2, r4, lsr #1
    605c:	and	r2, r2, #1
    6060:	orr	r2, r2, r1, lsl #1
    6064:	sxtb	r2, r2
    6068:	cmp	r2, #0
    606c:	uxtb	r0, r2
    6070:	eor	r1, r0, #101	; 0x65
    6074:	movlt	r2, r1
    6078:	movge	r2, r0
    607c:	eor	r3, r3, r2, lsr #7
    6080:	and	r3, r3, #1
    6084:	orr	r3, r3, r2, lsl #1
    6088:	uxtb	r3, r3
    608c:	lsl	r0, r3, #7
    6090:	asr	r2, r3, #5
    6094:	orr	r0, r0, r3, lsr #7
    6098:	and	r2, r2, #2
    609c:	asr	r1, r3, #3
    60a0:	orr	r0, r0, r2
    60a4:	and	r1, r1, #4
    60a8:	asr	r2, r3, #1
    60ac:	orr	r0, r0, r1
    60b0:	and	r2, r2, #8
    60b4:	lsl	r1, r3, #1
    60b8:	orr	r0, r0, r2
    60bc:	and	r1, r1, #16
    60c0:	lsl	r2, r3, #3
    60c4:	orr	r0, r0, r1
    60c8:	and	r2, r2, #32
    60cc:	lsl	r3, r3, #5
    60d0:	orr	r0, r0, r2
    60d4:	and	r3, r3, #64	; 0x40
    60d8:	orr	r0, r0, r3
    60dc:	uxtb	r0, r0
    60e0:	strb	r0, [r5, #9]
    60e4:	add	sp, sp, #44	; 0x2c
    60e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60ec:	ldrb	r2, [r8], #1
    60f0:	rsb	r6, sl, ip, asr #6
    60f4:	strb	r2, [r4, #1]!
    60f8:	rsb	r6, r6, r6, lsl #7
    60fc:	cmp	fp, r4
    6100:	sub	r6, r3, r6
    6104:	bne	5e28 <try_clock@@Base+0xc0>
    6108:	b	5e78 <try_clock@@Base+0x110>
    610c:	andeq	lr, r0, r4, asr #5
    6110:	tsthi	r2, r9, lsl #8
    6114:	andeq	lr, r0, r0, lsr #5

00006118 <btbb_decode_header@@Base>:
    6118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    611c:	mov	r1, #4
    6120:	sub	sp, sp, #36	; 0x24
    6124:	mov	r8, r0
    6128:	bl	219c <btbb_packet_get_flag@plt>
    612c:	cmp	r0, #0
    6130:	bne	6140 <btbb_decode_header@@Base+0x28>
    6134:	mov	r0, #0
    6138:	add	sp, sp, #36	; 0x24
    613c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6140:	add	lr, r8, #2880	; 0xb40
    6144:	add	lr, lr, #12
    6148:	add	r4, sp, #11
    614c:	add	r6, sp, #29
    6150:	mov	r5, #0
    6154:	ldrb	r3, [lr]
    6158:	ldrb	ip, [lr, #2]
    615c:	ldrb	r0, [lr, #1]
    6160:	add	lr, lr, #3
    6164:	orr	r1, r3, ip
    6168:	eor	r2, r0, r3
    616c:	and	r1, r1, r0
    6170:	and	r7, r3, ip
    6174:	eor	r0, r0, ip
    6178:	orr	r1, r1, r7
    617c:	orr	r2, r2, r0
    6180:	eor	r3, r3, ip
    6184:	strb	r1, [r4, #1]!
    6188:	orr	r3, r2, r3
    618c:	cmp	r4, r6
    6190:	add	r5, r5, r3
    6194:	bne	6154 <btbb_decode_header@@Base+0x3c>
    6198:	cmp	r5, #3
    619c:	bgt	6134 <btbb_decode_header@@Base+0x1c>
    61a0:	ldr	r3, [r8, #2816]	; 0xb00
    61a4:	ldr	r2, [pc, #844]	; 64f8 <btbb_decode_header@@Base+0x3e0>
    61a8:	and	r3, r3, #63	; 0x3f
    61ac:	add	r2, pc, r2
    61b0:	add	r2, r2, r3
    61b4:	ldr	r3, [pc, #832]	; 64fc <btbb_decode_header@@Base+0x3e4>
    61b8:	ldrb	r0, [r2, #1368]	; 0x558
    61bc:	mov	r9, r3
    61c0:	ldr	r7, [pc, #824]	; 6500 <btbb_decode_header@@Base+0x3e8>
    61c4:	add	r6, r8, #21
    61c8:	smull	r2, r3, r3, r0
    61cc:	add	r3, r3, r0
    61d0:	add	r7, pc, r7
    61d4:	asr	r5, r3, #6
    61d8:	add	r3, sp, #30
    61dc:	mov	fp, r3
    61e0:	rsb	r3, r5, r5, lsl #7
    61e4:	add	r4, sp, #12
    61e8:	sub	r5, r0, r3
    61ec:	mov	r1, #0
    61f0:	mov	r0, r8
    61f4:	bl	219c <btbb_packet_get_flag@plt>
    61f8:	add	r2, r5, #1
    61fc:	mov	r3, r2
    6200:	smull	r1, ip, r9, r2
    6204:	add	r5, r7, r5
    6208:	add	ip, ip, r2
    620c:	asr	sl, r2, #31
    6210:	cmp	r0, #0
    6214:	beq	64d8 <btbb_decode_header@@Base+0x3c0>
    6218:	ldrb	r1, [r5, #1432]	; 0x598
    621c:	ldrb	r3, [r4], #1
    6220:	rsb	r5, sl, ip, asr #6
    6224:	eor	r3, r3, r1
    6228:	rsb	r5, r5, r5, lsl #7
    622c:	cmp	fp, r4
    6230:	sub	r5, r2, r5
    6234:	strb	r3, [r6, #1]!
    6238:	bne	61ec <btbb_decode_header@@Base+0xd4>
    623c:	ldrb	r4, [r8, #33]	; 0x21
    6240:	ldrb	lr, [r8, #34]	; 0x22
    6244:	ldrb	r5, [r8, #23]
    6248:	ldrb	r2, [r8, #32]
    624c:	ldrb	r1, [r8, #35]	; 0x23
    6250:	ldrb	ip, [r8, #24]
    6254:	ldrb	fp, [r8, #22]
    6258:	ldrb	r3, [r8, #36]	; 0x24
    625c:	ldrb	r0, [r8, #25]
    6260:	ldrb	r6, [r8, #26]
    6264:	orr	r2, r2, r4, lsl #1
    6268:	orr	r2, r2, lr, lsl #2
    626c:	ldrb	r4, [r8, #37]	; 0x25
    6270:	orr	fp, fp, r5, lsl #1
    6274:	ldrb	r7, [r8, #27]
    6278:	ldrb	lr, [r8, #38]	; 0x26
    627c:	orr	r2, r2, r1, lsl #3
    6280:	orr	fp, fp, ip, lsl #2
    6284:	ldrb	r5, [r8, #28]
    6288:	ldrb	r1, [r8, #39]	; 0x27
    628c:	orr	r2, r2, r3, lsl #4
    6290:	ldrb	ip, [r8, #29]
    6294:	orr	r3, fp, r0, lsl #3
    6298:	orr	r3, r3, r6, lsl #4
    629c:	str	r6, [sp, #4]
    62a0:	ldrb	r6, [r8, #30]
    62a4:	orr	r2, r2, r4, lsl #5
    62a8:	orr	r3, r3, r7, lsl #5
    62ac:	ldrb	r4, [r8, #31]
    62b0:	orr	r2, r2, lr, lsl #6
    62b4:	orr	r3, r3, r5, lsl #6
    62b8:	orr	r2, r2, r1, lsl #7
    62bc:	orr	r3, r3, ip, lsl #7
    62c0:	orr	r3, r3, r6, lsl #8
    62c4:	sxtb	r2, r2
    62c8:	orr	r3, r3, r4, lsl #9
    62cc:	uxtb	lr, r2
    62d0:	cmp	r2, #0
    62d4:	sxth	r3, r3
    62d8:	eor	r9, lr, #101	; 0x65
    62dc:	movge	r9, lr
    62e0:	uxth	r1, r3
    62e4:	lsr	r2, r9, #7
    62e8:	eor	r2, r2, r1, lsr #9
    62ec:	and	r2, r2, #1
    62f0:	orr	r2, r2, r9, lsl #1
    62f4:	ldrb	r9, [r8, #9]
    62f8:	sxtb	r2, r2
    62fc:	cmp	r2, #0
    6300:	str	r9, [sp]
    6304:	uxtb	r9, r2
    6308:	eor	sl, r9, #101	; 0x65
    630c:	movlt	r9, sl
    6310:	lsr	r2, r9, #7
    6314:	eor	r2, r2, r1, lsr #8
    6318:	and	r2, r2, #1
    631c:	orr	r2, r2, r9, lsl #1
    6320:	sxtb	r2, r2
    6324:	cmp	r2, #0
    6328:	uxtb	r9, r2
    632c:	eor	sl, r9, #101	; 0x65
    6330:	movlt	r9, sl
    6334:	lsr	r2, r9, #7
    6338:	eor	r2, r2, r1, lsr #7
    633c:	and	r2, r2, #1
    6340:	orr	r2, r2, r9, lsl #1
    6344:	sxtb	r2, r2
    6348:	cmp	r2, #0
    634c:	uxtb	r9, r2
    6350:	eor	sl, r9, #101	; 0x65
    6354:	movlt	r9, sl
    6358:	lsr	r2, r9, #7
    635c:	eor	r2, r2, r1, lsr #6
    6360:	and	r2, r2, #1
    6364:	orr	r2, r2, r9, lsl #1
    6368:	sxtb	r2, r2
    636c:	cmp	r2, #0
    6370:	uxtb	r9, r2
    6374:	eor	sl, r9, #101	; 0x65
    6378:	movlt	r9, sl
    637c:	lsr	r2, r9, #7
    6380:	eor	r2, r2, r1, lsr #5
    6384:	and	r2, r2, #1
    6388:	orr	r2, r2, r9, lsl #1
    638c:	sxtb	r2, r2
    6390:	cmp	r2, #0
    6394:	uxtb	r9, r2
    6398:	eor	sl, r9, #101	; 0x65
    639c:	movlt	r9, sl
    63a0:	lsr	r2, r9, #7
    63a4:	eor	r2, r2, r1, lsr #4
    63a8:	and	r2, r2, #1
    63ac:	orr	r2, r2, r9, lsl #1
    63b0:	sxtb	r2, r2
    63b4:	cmp	r2, #0
    63b8:	uxtb	r9, r2
    63bc:	eor	sl, r9, #101	; 0x65
    63c0:	movlt	r9, sl
    63c4:	lsr	r2, r9, #7
    63c8:	eor	r2, r2, r1, lsr #3
    63cc:	and	r2, r2, #1
    63d0:	orr	r2, r2, r9, lsl #1
    63d4:	sxtb	r2, r2
    63d8:	cmp	r2, #0
    63dc:	uxtb	r9, r2
    63e0:	eor	sl, r9, #101	; 0x65
    63e4:	movlt	r9, sl
    63e8:	lsr	r2, r9, #7
    63ec:	eor	r2, r2, r1, lsr #2
    63f0:	and	r2, r2, #1
    63f4:	orr	r2, r2, r9, lsl #1
    63f8:	sxtb	r2, r2
    63fc:	cmp	r2, #0
    6400:	uxtb	sl, r2
    6404:	eor	r9, sl, #101	; 0x65
    6408:	movlt	r2, r9
    640c:	movge	r2, sl
    6410:	lsr	sl, r2, #7
    6414:	eor	sl, sl, r1, lsr #1
    6418:	and	sl, sl, #1
    641c:	orr	r2, sl, r2, lsl #1
    6420:	sxtb	r2, r2
    6424:	cmp	r2, #0
    6428:	uxtb	r1, r2
    642c:	eor	r9, r1, #101	; 0x65
    6430:	movlt	r2, r9
    6434:	movge	r2, r1
    6438:	eor	r3, r3, r2, lsr #7
    643c:	and	r3, r3, #1
    6440:	orr	r3, r3, r2, lsl #1
    6444:	uxtb	r3, r3
    6448:	lsl	r9, r3, #7
    644c:	asr	r1, r3, #5
    6450:	orr	r9, r9, r3, lsr #7
    6454:	asr	r2, r3, #3
    6458:	and	r1, r1, #2
    645c:	orr	r1, r9, r1
    6460:	and	r2, r2, #4
    6464:	asr	r9, r3, #1
    6468:	orr	r1, r1, r2
    646c:	and	r9, r9, #8
    6470:	lsl	r2, r3, #1
    6474:	orr	r1, r1, r9
    6478:	and	r2, r2, #16
    647c:	lsl	r9, r3, #3
    6480:	and	r9, r9, #32
    6484:	orr	r2, r1, r2
    6488:	lsl	sl, r3, #5
    648c:	orr	r2, r2, r9
    6490:	and	r3, sl, #64	; 0x40
    6494:	orr	r3, r2, r3
    6498:	ldr	r9, [sp]
    649c:	uxtb	r3, r3
    64a0:	cmp	r9, r3
    64a4:	bne	6134 <btbb_decode_header@@Base+0x1c>
    64a8:	ldr	r3, [sp, #4]
    64ac:	orr	ip, ip, r6, lsl #1
    64b0:	orr	r4, ip, r4, lsl #2
    64b4:	orr	r0, r0, r3, lsl #1
    64b8:	orr	r7, r0, r7, lsl #2
    64bc:	orr	r5, r7, r5, lsl #3
    64c0:	mov	r0, #1
    64c4:	strb	r5, [r8, #18]
    64c8:	strb	r4, [r8, #20]
    64cc:	strb	fp, [r8, #19]
    64d0:	strb	lr, [r8, #21]
    64d4:	b	6138 <btbb_decode_header@@Base+0x20>
    64d8:	ldrb	r2, [r4], #1
    64dc:	rsb	r5, sl, ip, asr #6
    64e0:	cmp	r4, fp
    64e4:	rsb	r5, r5, r5, lsl #7
    64e8:	sub	r5, r3, r5
    64ec:	strb	r2, [r6, #1]!
    64f0:	bne	61ec <btbb_decode_header@@Base+0xd4>
    64f4:	b	623c <btbb_decode_header@@Base+0x124>
    64f8:	strdeq	sp, [r0], -ip
    64fc:	tsthi	r2, r9, lsl #8
    6500:	ldrdeq	sp, [r0], -r8

00006504 <btbb_decode_payload@@Base>:
    6504:	push	{r4, r5, r6, lr}
    6508:	mov	r2, #0
    650c:	ldrb	r3, [r0, #18]
    6510:	mov	r4, r0
    6514:	str	r2, [r0, #40]	; 0x28
    6518:	cmp	r3, #15
    651c:	addls	pc, pc, r3, lsl #2
    6520:	b	6618 <btbb_decode_payload@@Base+0x114>
    6524:	b	65cc <btbb_decode_payload@@Base+0xc8>
    6528:	b	65cc <btbb_decode_payload@@Base+0xc8>
    652c:	b	65dc <btbb_decode_payload@@Base+0xd8>
    6530:	b	6564 <btbb_decode_payload@@Base+0x60>
    6534:	b	658c <btbb_decode_payload@@Base+0x88>
    6538:	b	65b8 <btbb_decode_payload@@Base+0xb4>
    653c:	b	65b8 <btbb_decode_payload@@Base+0xb4>
    6540:	b	65a0 <btbb_decode_payload@@Base+0x9c>
    6544:	b	6564 <btbb_decode_payload@@Base+0x60>
    6548:	b	658c <btbb_decode_payload@@Base+0x88>
    654c:	b	6564 <btbb_decode_payload@@Base+0x60>
    6550:	b	658c <btbb_decode_payload@@Base+0x88>
    6554:	b	65f0 <btbb_decode_payload@@Base+0xec>
    6558:	b	6604 <btbb_decode_payload@@Base+0x100>
    655c:	b	6564 <btbb_decode_payload@@Base+0x60>
    6560:	b	658c <btbb_decode_payload@@Base+0x88>
    6564:	mov	r1, r0
    6568:	ldr	r0, [r0, #2816]	; 0xb00
    656c:	bl	2220 <DM@plt>
    6570:	mov	r5, r0
    6574:	mov	r0, r4
    6578:	mov	r2, #1
    657c:	mov	r1, #7
    6580:	bl	2148 <btbb_packet_set_flag@plt>
    6584:	mov	r0, r5
    6588:	pop	{r4, r5, r6, pc}
    658c:	mov	r1, r0
    6590:	ldr	r0, [r0, #2816]	; 0xb00
    6594:	bl	2484 <DH@plt>
    6598:	mov	r5, r0
    659c:	b	6574 <btbb_decode_payload@@Base+0x70>
    65a0:	mov	r1, r0
    65a4:	ldr	r0, [r0, #2816]	; 0xb00
    65a8:	bl	240c <EV3@plt>
    65ac:	cmp	r0, #1
    65b0:	mov	r5, r0
    65b4:	bgt	6574 <btbb_decode_payload@@Base+0x70>
    65b8:	mov	r1, r4
    65bc:	ldr	r0, [r4, #2816]	; 0xb00
    65c0:	bl	2238 <HV@plt>
    65c4:	mov	r5, r0
    65c8:	b	6574 <btbb_decode_payload@@Base+0x70>
    65cc:	mov	r3, #0
    65d0:	str	r3, [r0, #64]	; 0x40
    65d4:	mov	r5, #1
    65d8:	b	6574 <btbb_decode_payload@@Base+0x70>
    65dc:	mov	r1, r0
    65e0:	ldr	r0, [r0, #2816]	; 0xb00
    65e4:	bl	21a8 <fhs@plt>
    65e8:	mov	r5, r0
    65ec:	b	6574 <btbb_decode_payload@@Base+0x70>
    65f0:	mov	r1, r0
    65f4:	ldr	r0, [r0, #2816]	; 0xb00
    65f8:	bl	21b4 <EV4@plt>
    65fc:	mov	r5, r0
    6600:	b	6574 <btbb_decode_payload@@Base+0x70>
    6604:	mov	r1, r0
    6608:	ldr	r0, [r0, #2816]	; 0xb00
    660c:	bl	246c <EV5@plt>
    6610:	mov	r5, r0
    6614:	b	6574 <btbb_decode_payload@@Base+0x70>
    6618:	mov	r5, #0
    661c:	b	6574 <btbb_decode_payload@@Base+0x70>

00006620 <btbb_print_packet@@Base>:
    6620:	push	{r4, r5, r6, r7, r8, lr}
    6624:	mov	r1, #7
    6628:	mov	r4, r0
    662c:	bl	219c <btbb_packet_get_flag@plt>
    6630:	cmp	r0, #0
    6634:	popeq	{r4, r5, r6, r7, r8, pc}
    6638:	ldrb	r2, [r4, #18]
    663c:	ldr	r3, [pc, #252]	; 6740 <btbb_print_packet@@Base+0x120>
    6640:	ldr	r0, [pc, #252]	; 6744 <btbb_print_packet@@Base+0x124>
    6644:	add	r3, pc, r3
    6648:	add	r0, pc, r0
    664c:	ldr	r1, [r3, r2, lsl #2]
    6650:	bl	2118 <printf@plt>
    6654:	ldr	r3, [r4, #40]	; 0x28
    6658:	cmp	r3, #0
    665c:	ble	66a0 <btbb_print_packet@@Base+0x80>
    6660:	ldr	r0, [pc, #224]	; 6748 <btbb_print_packet@@Base+0x128>
    6664:	ldrb	r1, [r4, #19]
    6668:	add	r0, pc, r0
    666c:	bl	2118 <printf@plt>
    6670:	ldr	r0, [pc, #212]	; 674c <btbb_print_packet@@Base+0x12c>
    6674:	ldrb	r1, [r4, #60]	; 0x3c
    6678:	add	r0, pc, r0
    667c:	bl	2118 <printf@plt>
    6680:	ldr	r0, [pc, #200]	; 6750 <btbb_print_packet@@Base+0x130>
    6684:	ldrb	r1, [r4, #61]	; 0x3d
    6688:	add	r0, pc, r0
    668c:	bl	2118 <printf@plt>
    6690:	ldr	r0, [pc, #188]	; 6754 <btbb_print_packet@@Base+0x134>
    6694:	ldr	r1, [r4, #64]	; 0x40
    6698:	add	r0, pc, r0
    669c:	bl	2118 <printf@plt>
    66a0:	ldr	r3, [r4, #64]	; 0x40
    66a4:	cmp	r3, #0
    66a8:	popeq	{r4, r5, r6, r7, r8, pc}
    66ac:	ldr	r0, [pc, #164]	; 6758 <btbb_print_packet@@Base+0x138>
    66b0:	ldr	r5, [pc, #164]	; 675c <btbb_print_packet@@Base+0x13c>
    66b4:	add	r0, pc, r0
    66b8:	bl	2118 <printf@plt>
    66bc:	ldr	r3, [r4, #64]	; 0x40
    66c0:	add	r5, pc, r5
    66c4:	cmp	r3, #0
    66c8:	add	r6, r4, #68	; 0x44
    66cc:	mov	r7, #0
    66d0:	ble	6734 <btbb_print_packet@@Base+0x114>
    66d4:	ldrb	r1, [r6, #2]
    66d8:	ldrb	r0, [r6, #1]
    66dc:	ldrb	r2, [r6]
    66e0:	ldrb	r3, [r6, #3]
    66e4:	ldrb	ip, [r6, #4]
    66e8:	lsl	r1, r1, #2
    66ec:	orr	r1, r1, r0, lsl #1
    66f0:	ldrb	r0, [r6, #5]
    66f4:	orr	r1, r1, r2
    66f8:	ldrb	r2, [r6, #6]
    66fc:	orr	r1, r1, r3, lsl #3
    6700:	ldrb	r3, [r6, #7]
    6704:	orr	r1, r1, ip, lsl #4
    6708:	orr	r1, r1, r0, lsl #5
    670c:	orr	r1, r1, r2, lsl #6
    6710:	orr	r1, r1, r3, lsl #7
    6714:	mov	r0, r5
    6718:	uxtb	r1, r1
    671c:	bl	2118 <printf@plt>
    6720:	ldr	r3, [r4, #64]	; 0x40
    6724:	add	r7, r7, #1
    6728:	cmp	r7, r3
    672c:	add	r6, r6, #8
    6730:	blt	66d4 <btbb_print_packet@@Base+0xb4>
    6734:	mov	r0, #10
    6738:	pop	{r4, r5, r6, r7, r8, lr}
    673c:	b	23f4 <putchar@plt>
    6740:	andeq	r4, r2, ip, ror #15
    6744:	strdeq	lr, [r0], -r8
    6748:	andeq	lr, r0, r4, ror #1
    674c:	andeq	lr, r0, r4, ror #1
    6750:	andeq	lr, r0, r0, ror #1
    6754:	ldrdeq	lr, [r0], -ip
    6758:	ldrdeq	lr, [r0], -r8
    675c:	andeq	lr, r0, r0, lsl #14

00006760 <btbb_decode@@Base>:
    6760:	push	{r4, r5, r6, lr}
    6764:	mov	r2, #0
    6768:	mov	r4, r0
    676c:	mov	r1, #7
    6770:	bl	2148 <btbb_packet_set_flag@plt>
    6774:	mov	r0, r4
    6778:	bl	2358 <btbb_decode_header@plt>
    677c:	subs	r5, r0, #0
    6780:	bne	678c <btbb_decode@@Base+0x2c>
    6784:	mov	r0, r5
    6788:	pop	{r4, r5, r6, pc}
    678c:	mov	r0, r4
    6790:	bl	24a8 <btbb_decode_payload@plt>
    6794:	subs	r5, r0, #0
    6798:	ble	6784 <btbb_decode@@Base+0x24>
    679c:	ldr	r1, [r4, #2816]	; 0xb00
    67a0:	ldr	r0, [pc, #28]	; 67c4 <btbb_decode@@Base+0x64>
    67a4:	mov	r2, r5
    67a8:	and	r1, r1, #63	; 0x3f
    67ac:	add	r0, pc, r0
    67b0:	bl	2118 <printf@plt>
    67b4:	mov	r0, r4
    67b8:	bl	24cc <btbb_print_packet@plt>
    67bc:	mov	r0, r5
    67c0:	pop	{r4, r5, r6, pc}
    67c4:	andeq	sp, r0, ip, ror #31

000067c8 <tun_format@@Base>:
    67c8:	push	{r4, r5, r6, r7, r8, lr}
    67cc:	mov	r5, r0
    67d0:	ldr	r0, [r0, #64]	; 0x40
    67d4:	add	r0, r0, #9
    67d8:	bl	22e0 <malloc@plt>
    67dc:	ldr	r3, [r5, #2816]	; 0xb00
    67e0:	ldrb	r2, [r5, #8]
    67e4:	mov	r1, #5
    67e8:	lsr	r6, r3, #8
    67ec:	lsr	lr, r3, #16
    67f0:	lsr	ip, r3, #24
    67f4:	mov	r4, r0
    67f8:	mov	r0, r5
    67fc:	strb	r3, [r4]
    6800:	strb	lr, [r4, #2]
    6804:	strb	ip, [r4, #3]
    6808:	strb	r2, [r4, #4]
    680c:	strb	r6, [r4, #1]
    6810:	bl	219c <btbb_packet_get_flag@plt>
    6814:	mov	r1, #1
    6818:	mov	r6, r0
    681c:	mov	r0, r5
    6820:	bl	219c <btbb_packet_get_flag@plt>
    6824:	ldrb	r1, [r5, #33]	; 0x21
    6828:	ldrb	ip, [r5, #34]	; 0x22
    682c:	ldrb	r3, [r5, #32]
    6830:	ldrb	lr, [r5, #23]
    6834:	ldrb	r2, [r5, #22]
    6838:	orr	r3, r3, r1, lsl #1
    683c:	ldrb	r1, [r5, #24]
    6840:	orr	r3, r3, ip, lsl #2
    6844:	ldrb	ip, [r5, #25]
    6848:	orr	r2, r2, lr, lsl #1
    684c:	ldrb	lr, [r5, #35]	; 0x23
    6850:	orr	r2, r2, r1, lsl #2
    6854:	ldrb	r1, [r5, #36]	; 0x24
    6858:	orr	r2, r2, ip, lsl #3
    685c:	ldrb	ip, [r5, #37]	; 0x25
    6860:	orr	r3, r3, lr, lsl #3
    6864:	ldrb	lr, [r5, #26]
    6868:	orr	r3, r3, r1, lsl #4
    686c:	ldrb	r1, [r5, #27]
    6870:	orr	r3, r3, ip, lsl #5
    6874:	ldrb	ip, [r5, #38]	; 0x26
    6878:	orr	r2, r2, lr, lsl #4
    687c:	ldrb	lr, [r5, #30]
    6880:	orr	r2, r2, r1, lsl #5
    6884:	ldrb	r1, [r5, #29]
    6888:	orr	r3, r3, ip, lsl #6
    688c:	ldrb	ip, [r5, #31]
    6890:	orr	r1, r1, lr, lsl #1
    6894:	ldrb	r7, [r5, #28]
    6898:	ldrb	lr, [r5, #39]	; 0x27
    689c:	orr	r1, r1, ip, lsl #2
    68a0:	ldr	ip, [r5, #64]	; 0x40
    68a4:	orr	r2, r2, r7, lsl #6
    68a8:	orr	r0, r6, r0, lsl #1
    68ac:	orr	r3, r3, lr, lsl #7
    68b0:	cmp	ip, #0
    68b4:	strb	r0, [r4, #5]
    68b8:	strb	r2, [r4, #6]
    68bc:	strb	r1, [r4, #7]
    68c0:	strb	r3, [r4, #8]
    68c4:	ble	6924 <tun_format@@Base+0x15c>
    68c8:	mov	r2, r5
    68cc:	add	ip, r5, ip, lsl #3
    68d0:	add	r1, r4, #8
    68d4:	ldrb	r3, [r2, #70]	; 0x46
    68d8:	ldrb	r5, [r2, #69]	; 0x45
    68dc:	ldrb	lr, [r2, #68]	; 0x44
    68e0:	ldrb	r0, [r2, #71]	; 0x47
    68e4:	ldrb	r6, [r2, #72]	; 0x48
    68e8:	lsl	r3, r3, #2
    68ec:	orr	r3, r3, r5, lsl #1
    68f0:	ldrb	r5, [r2, #73]	; 0x49
    68f4:	orr	r3, r3, lr
    68f8:	ldrb	lr, [r2, #74]	; 0x4a
    68fc:	orr	r3, r3, r0, lsl #3
    6900:	ldrb	r0, [r2, #75]	; 0x4b
    6904:	orr	r3, r3, r6, lsl #4
    6908:	orr	r3, r3, r5, lsl #5
    690c:	orr	r3, r3, lr, lsl #6
    6910:	add	r2, r2, #8
    6914:	orr	r3, r3, r0, lsl #7
    6918:	cmp	ip, r2
    691c:	strb	r3, [r1, #1]!
    6920:	bne	68d4 <tun_format@@Base+0x10c>
    6924:	mov	r0, r4
    6928:	pop	{r4, r5, r6, r7, r8, pc}

0000692c <btbb_header_present@@Base>:
    692c:	add	r3, r0, #2816	; 0xb00
    6930:	ldrh	r3, [r3, #6]
    6934:	cmp	r3, #121	; 0x79
    6938:	bls	69c8 <btbb_header_present@@Base+0x9c>
    693c:	push	{r4, lr}
    6940:	ldrb	r3, [r0, #2887]	; 0xb47
    6944:	ldrb	ip, [r0, #2888]	; 0xb48
    6948:	ldrb	r4, [r0, #2889]	; 0xb49
    694c:	ldrb	r1, [r0, #2890]	; 0xb4a
    6950:	clz	lr, r3
    6954:	ldrb	r2, [r0, #2891]	; 0xb4b
    6958:	lsr	lr, lr, #5
    695c:	eor	r4, r4, r3
    6960:	eor	ip, ip, lr
    6964:	add	ip, ip, r4
    6968:	eor	r1, r1, lr
    696c:	eor	r2, r2, r3
    6970:	add	r4, r0, #2944	; 0xb80
    6974:	add	r3, r0, #2880	; 0xb40
    6978:	add	r1, r1, ip
    697c:	add	r0, r2, r1
    6980:	add	r3, r3, #12
    6984:	add	r4, r4, #2
    6988:	ldrb	r1, [r3]
    698c:	ldrb	ip, [r3, #1]
    6990:	ldrb	lr, [r3, #2]
    6994:	add	r3, r3, #3
    6998:	eor	r2, r1, ip
    699c:	eor	ip, ip, lr
    69a0:	orr	r2, r2, ip
    69a4:	eor	r1, r1, lr
    69a8:	orr	r2, r2, r1
    69ac:	cmp	r4, r3
    69b0:	add	r0, r0, r2
    69b4:	bne	6988 <btbb_header_present@@Base+0x5c>
    69b8:	cmp	r0, #4
    69bc:	movgt	r0, #0
    69c0:	movle	r0, #1
    69c4:	pop	{r4, pc}
    69c8:	mov	r0, #0
    69cc:	bx	lr

000069d0 <lap_from_fhs@@Base>:
    69d0:	mov	r2, #0
    69d4:	add	r0, r0, #101	; 0x65
    69d8:	mov	r3, r2
    69dc:	ldrb	r1, [r0, #1]!
    69e0:	orr	r2, r2, r1, lsl r3
    69e4:	add	r3, r3, #1
    69e8:	cmp	r3, #24
    69ec:	bne	69dc <lap_from_fhs@@Base+0xc>
    69f0:	mov	r0, r2
    69f4:	bx	lr

000069f8 <uap_from_fhs@@Base>:
    69f8:	push	{lr}		; (str lr, [sp, #-4]!)
    69fc:	ldrb	ip, [r0, #133]	; 0x85
    6a00:	ldrb	r1, [r0, #134]	; 0x86
    6a04:	ldrb	r3, [r0, #132]	; 0x84
    6a08:	ldrb	r2, [r0, #135]	; 0x87
    6a0c:	ldrb	lr, [r0, #136]	; 0x88
    6a10:	orr	r3, r3, ip, lsl #1
    6a14:	ldrb	ip, [r0, #137]	; 0x89
    6a18:	orr	r3, r3, r1, lsl #2
    6a1c:	ldrb	r1, [r0, #138]	; 0x8a
    6a20:	orr	r3, r3, r2, lsl #3
    6a24:	ldrb	r2, [r0, #139]	; 0x8b
    6a28:	orr	r0, r3, lr, lsl #4
    6a2c:	orr	r0, r0, ip, lsl #5
    6a30:	orr	r0, r0, r1, lsl #6
    6a34:	orr	r0, r0, r2, lsl #7
    6a38:	uxtb	r0, r0
    6a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00006a40 <nap_from_fhs@@Base>:
    6a40:	push	{lr}		; (str lr, [sp, #-4]!)
    6a44:	ldrb	ip, [r0, #141]	; 0x8d
    6a48:	ldrb	r1, [r0, #142]	; 0x8e
    6a4c:	ldrb	r3, [r0, #140]	; 0x8c
    6a50:	ldrb	r2, [r0, #143]	; 0x8f
    6a54:	ldrb	lr, [r0, #144]	; 0x90
    6a58:	orr	r3, r3, ip, lsl #1
    6a5c:	ldrb	ip, [r0, #145]	; 0x91
    6a60:	orr	r3, r3, r1, lsl #2
    6a64:	ldrb	r1, [r0, #146]	; 0x92
    6a68:	orr	r3, r3, r2, lsl #3
    6a6c:	ldrb	r2, [r0, #147]	; 0x93
    6a70:	orr	r3, r3, lr, lsl #4
    6a74:	ldrb	lr, [r0, #148]	; 0x94
    6a78:	orr	r3, r3, ip, lsl #5
    6a7c:	ldrb	ip, [r0, #149]	; 0x95
    6a80:	orr	r3, r3, r1, lsl #6
    6a84:	ldrb	r1, [r0, #150]	; 0x96
    6a88:	orr	r3, r3, r2, lsl #7
    6a8c:	ldrb	r2, [r0, #151]	; 0x97
    6a90:	orr	r3, r3, lr, lsl #8
    6a94:	ldrb	lr, [r0, #152]	; 0x98
    6a98:	orr	r3, r3, ip, lsl #9
    6a9c:	ldrb	ip, [r0, #153]	; 0x99
    6aa0:	orr	r3, r3, r1, lsl #10
    6aa4:	ldrb	r1, [r0, #154]	; 0x9a
    6aa8:	orr	r3, r3, r2, lsl #11
    6aac:	ldrb	r2, [r0, #155]	; 0x9b
    6ab0:	orr	r0, r3, lr, lsl #12
    6ab4:	orr	r0, r0, ip, lsl #13
    6ab8:	orr	r0, r0, r1, lsl #14
    6abc:	orr	r0, r0, r2, lsl #15
    6ac0:	uxth	r0, r0
    6ac4:	pop	{pc}		; (ldr pc, [sp], #4)

00006ac8 <clock_from_fhs@@Base>:
    6ac8:	mov	r2, #0
    6acc:	add	r0, r0, #182	; 0xb6
    6ad0:	mov	r3, r2
    6ad4:	ldrb	r1, [r0, #1]!
    6ad8:	orr	r2, r2, r1, lsl r3
    6adc:	add	r3, r3, #1
    6ae0:	cmp	r3, #26
    6ae4:	bne	6ad4 <clock_from_fhs@@Base+0xc>
    6ae8:	mov	r0, r2
    6aec:	bx	lr

00006af0 <count_bits@@Base>:
    6af0:	subs	r3, r0, #0
    6af4:	beq	6b10 <count_bits@@Base+0x20>
    6af8:	mov	r0, #0
    6afc:	sub	r2, r3, #1
    6b00:	ands	r3, r2, r3
    6b04:	add	r0, r0, #1
    6b08:	bne	6afc <count_bits@@Base+0xc>
    6b0c:	bx	lr
    6b10:	mov	r0, r3
    6b14:	bx	lr

00006b18 <btbb_piconet_new@@Base>:
    6b18:	push	{r4, lr}
    6b1c:	mov	r0, #1
    6b20:	ldr	r1, [pc, #12]	; 6b34 <btbb_piconet_new@@Base+0x1c>
    6b24:	bl	20c4 <calloc@plt>
    6b28:	mov	r3, #1
    6b2c:	str	r3, [r0]
    6b30:	pop	{r4, pc}
    6b34:	andeq	r1, r0, ip, lsl r6

00006b38 <btbb_piconet_ref@@Base>:
    6b38:	ldr	r3, [r0]
    6b3c:	add	r3, r3, #1
    6b40:	str	r3, [r0]
    6b44:	bx	lr

00006b48 <btbb_piconet_unref@@Base>:
    6b48:	ldr	r3, [r0]
    6b4c:	subs	r3, r3, #1
    6b50:	beq	6b5c <btbb_piconet_unref@@Base+0x14>
    6b54:	str	r3, [r0]
    6b58:	bx	lr
    6b5c:	b	2160 <free@plt>

00006b60 <btbb_init_survey@@Base>:
    6b60:	ldr	r3, [pc, #16]	; 6b78 <btbb_init_survey@@Base+0x18>
    6b64:	mov	r2, #1
    6b68:	add	r3, pc, r3
    6b6c:	mov	r0, #0
    6b70:	str	r2, [r3]
    6b74:	bx	lr
    6b78:	andeq	r4, r2, r4, asr #12

00006b7c <btbb_piconet_set_flag@@Base>:
    6b7c:	mov	r3, #1
    6b80:	cmp	r2, #0
    6b84:	lsl	r1, r3, r1
    6b88:	ldr	r2, [r0, #4]
    6b8c:	biceq	r1, r2, r1
    6b90:	orrne	r1, r1, r2
    6b94:	str	r1, [r0, #4]
    6b98:	bx	lr

00006b9c <btbb_init_piconet@@Base>:
    6b9c:	str	r1, [r0, #24]
    6ba0:	mov	r2, #1
    6ba4:	mov	r1, #3
    6ba8:	b	222c <btbb_piconet_set_flag@plt>

00006bac <btbb_piconet_get_flag@@Base>:
    6bac:	ldr	r3, [r0, #4]
    6bb0:	mov	r2, #1
    6bb4:	ands	r3, r3, r2, lsl r1
    6bb8:	movne	r0, r2
    6bbc:	moveq	r0, #0
    6bc0:	bx	lr

00006bc4 <btbb_piconet_set_uap@@Base>:
    6bc4:	strb	r1, [r0, #28]
    6bc8:	mov	r2, #1
    6bcc:	mov	r1, #2
    6bd0:	b	222c <btbb_piconet_set_flag@plt>

00006bd4 <btbb_piconet_get_uap@@Base>:
    6bd4:	ldrb	r0, [r0, #28]
    6bd8:	bx	lr

00006bdc <btbb_piconet_get_lap@@Base>:
    6bdc:	ldr	r0, [r0, #24]
    6be0:	bx	lr

00006be4 <btbb_piconet_get_nap@@Base>:
    6be4:	ldrh	r0, [r0, #30]
    6be8:	bx	lr

00006bec <btbb_piconet_get_bdaddr@@Base>:
    6bec:	ldrb	r1, [r0, #28]
    6bf0:	ldrh	r3, [r0, #30]
    6bf4:	ldr	r0, [r0, #24]
    6bf8:	mov	r2, #0
    6bfc:	orr	r2, r2, r0
    6c00:	lsl	r0, r1, #24
    6c04:	orr	r2, r2, r0
    6c08:	mov	r0, r2
    6c0c:	mov	r1, r3
    6c10:	bx	lr

00006c14 <btbb_piconet_get_clk_offset@@Base>:
    6c14:	add	r0, r0, #4096	; 0x1000
    6c18:	ldr	r0, [r0, #1552]	; 0x610
    6c1c:	bx	lr

00006c20 <btbb_piconet_set_clk_offset@@Base>:
    6c20:	add	r0, r0, #4096	; 0x1000
    6c24:	str	r1, [r0, #1552]	; 0x610
    6c28:	bx	lr

00006c2c <btbb_piconet_get_afh_map@@Base>:
    6c2c:	add	r0, r0, #12
    6c30:	bx	lr

00006c34 <btbb_piconet_set_channel_seen@@Base>:
    6c34:	add	ip, r0, r1, lsr #3
    6c38:	and	r1, r1, #7
    6c3c:	ldrb	r3, [ip, #12]
    6c40:	mov	r2, r0
    6c44:	asr	r0, r3, r1
    6c48:	tst	r0, #1
    6c4c:	bne	6c74 <btbb_piconet_set_channel_seen@@Base+0x40>
    6c50:	push	{lr}		; (str lr, [sp, #-4]!)
    6c54:	mov	lr, #1
    6c58:	mov	r0, lr
    6c5c:	orr	r1, r3, lr, lsl r1
    6c60:	strb	r1, [ip, #12]
    6c64:	ldrb	r3, [r2, #22]
    6c68:	add	r3, r3, lr
    6c6c:	strb	r3, [r2, #22]
    6c70:	pop	{pc}		; (ldr pc, [sp], #4)
    6c74:	mov	r0, #0
    6c78:	bx	lr

00006c7c <btbb_piconet_clear_channel_seen@@Base>:
    6c7c:	add	ip, r0, r1, lsr #3
    6c80:	and	r1, r1, #7
    6c84:	ldrb	r2, [ip, #12]
    6c88:	asr	r3, r2, r1
    6c8c:	ands	r3, r3, #1
    6c90:	beq	6cb8 <btbb_piconet_clear_channel_seen@@Base+0x3c>
    6c94:	push	{lr}		; (str lr, [sp, #-4]!)
    6c98:	mov	lr, #1
    6c9c:	bic	r1, r2, lr, lsl r1
    6ca0:	strb	r1, [ip, #12]
    6ca4:	ldrb	r2, [r0, #22]
    6ca8:	sub	r2, r2, #1
    6cac:	strb	r2, [r0, #22]
    6cb0:	mov	r0, lr
    6cb4:	pop	{pc}		; (ldr pc, [sp], #4)
    6cb8:	mov	r0, r3
    6cbc:	bx	lr

00006cc0 <btbb_piconet_get_channel_seen@@Base>:
    6cc0:	cmp	r1, #78	; 0x4e
    6cc4:	addls	r0, r0, r1, lsr #3
    6cc8:	andls	r1, r1, #7
    6ccc:	ldrbls	r0, [r0, #12]
    6cd0:	asrls	r0, r0, r1
    6cd4:	andls	r0, r0, #1
    6cd8:	movhi	r0, #1
    6cdc:	bx	lr

00006ce0 <precalc@@Base>:
    6ce0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6ce4:	mov	r8, #0
    6ce8:	mov	r4, r0
    6cec:	ldr	r5, [pc, #144]	; 6d84 <precalc@@Base+0xa4>
    6cf0:	add	r9, r0, #56	; 0x38
    6cf4:	mov	r7, r8
    6cf8:	mov	r6, #11
    6cfc:	b	6d10 <precalc@@Base+0x30>
    6d00:	add	r8, r8, #2
    6d04:	cmp	r8, #158	; 0x9e
    6d08:	add	r9, r9, #4
    6d0c:	beq	6d80 <precalc@@Base+0xa0>
    6d10:	mov	r1, r6
    6d14:	mov	r0, r4
    6d18:	bl	2208 <btbb_piconet_get_flag@plt>
    6d1c:	smull	r2, r3, r5, r8
    6d20:	asr	r2, r8, #31
    6d24:	rsb	r3, r2, r3, asr #5
    6d28:	add	r2, r3, r3, lsl #2
    6d2c:	rsb	r3, r3, r2, lsl #4
    6d30:	sub	r3, r8, r3
    6d34:	cmp	r0, #0
    6d38:	streq	r3, [r9]
    6d3c:	beq	6d00 <precalc@@Base+0x20>
    6d40:	smull	r3, sl, r5, r8
    6d44:	asr	r3, r8, #31
    6d48:	rsb	sl, r3, sl, asr #5
    6d4c:	rsb	sl, sl, r2, lsl #4
    6d50:	sub	sl, r8, sl
    6d54:	mov	r0, r4
    6d58:	uxtb	r1, sl
    6d5c:	bl	21e4 <btbb_piconet_get_channel_seen@plt>
    6d60:	add	r3, r7, #14
    6d64:	add	r8, r8, #2
    6d68:	add	r9, r9, #4
    6d6c:	cmp	r0, #0
    6d70:	strne	sl, [r4, r3, lsl #2]
    6d74:	addne	r7, r7, #1
    6d78:	cmp	r8, #158	; 0x9e
    6d7c:	bne	6d10 <precalc@@Base+0x30>
    6d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6d84:	sbfxvs	r3, r5, #20, #19

00006d88 <address_precalc@@Base>:
    6d88:	asr	r2, r0, #7
    6d8c:	asr	r3, r0, #6
    6d90:	and	r3, r3, #32
    6d94:	and	r2, r2, #64	; 0x40
    6d98:	orr	r2, r2, r3
    6d9c:	asr	r3, r0, #5
    6da0:	push	{r4, r5, r6, lr}
    6da4:	and	r3, r3, #16
    6da8:	asr	lr, r0, #4
    6dac:	asr	r4, r0, #3
    6db0:	and	ip, lr, #16
    6db4:	and	r5, lr, #8
    6db8:	and	r6, r4, #8
    6dbc:	asr	lr, r0, #2
    6dc0:	add	r3, r2, r3
    6dc4:	and	r4, r4, #4
    6dc8:	orr	r2, ip, r6
    6dcc:	add	r3, r3, r5
    6dd0:	and	r6, lr, #4
    6dd4:	asr	ip, r0, #1
    6dd8:	add	r2, r2, r6
    6ddc:	and	lr, lr, #2
    6de0:	and	r6, ip, #2
    6de4:	add	r3, r3, r4
    6de8:	ldr	r4, [pc, #64]	; 6e30 <address_precalc@@Base+0xa8>
    6dec:	asr	r5, r0, #23
    6df0:	add	r2, r2, r6
    6df4:	add	r3, r3, lr
    6df8:	and	r6, r0, #1
    6dfc:	asr	lr, r0, #19
    6e00:	and	ip, ip, #1
    6e04:	and	r5, r5, #31
    6e08:	and	lr, lr, #15
    6e0c:	add	r2, r2, r6
    6e10:	add	r3, r3, ip
    6e14:	and	r0, r4, r0, asr #10
    6e18:	str	r5, [r1, #44]	; 0x2c
    6e1c:	str	lr, [r1, #36]	; 0x24
    6e20:	str	r2, [r1, #48]	; 0x30
    6e24:	str	r3, [r1, #40]	; 0x28
    6e28:	str	r0, [r1, #52]	; 0x34
    6e2c:	pop	{r4, r5, r6, pc}
    6e30:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00006e34 <perm5@@Base>:
    6e34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e38:	mov	lr, r2
    6e3c:	ldr	r8, [pc, #928]	; 71e4 <perm5@@Base+0x3b0>
    6e40:	mov	r5, r0
    6e44:	add	r8, pc, r8
    6e48:	mov	r9, r8
    6e4c:	mov	r4, r1
    6e50:	ldm	r9!, {r0, r1, r2, r3}
    6e54:	sub	sp, sp, #156	; 0x9c
    6e58:	add	fp, sp, #40	; 0x28
    6e5c:	add	r8, r8, #56	; 0x38
    6e60:	stmia	fp!, {r0, r1, r2, r3}
    6e64:	add	ip, sp, #96	; 0x60
    6e68:	ldm	r9!, {r0, r1, r2, r3}
    6e6c:	asr	r7, r5, #1
    6e70:	asr	r6, r5, #2
    6e74:	asr	sl, r5, #3
    6e78:	stmia	fp!, {r0, r1, r2, r3}
    6e7c:	and	r7, r7, #1
    6e80:	ldm	r9!, {r0, r1, r2, r3}
    6e84:	and	r6, r6, #1
    6e88:	and	sl, sl, #1
    6e8c:	tst	r4, #16
    6e90:	stmia	fp!, {r0, r1, r2, r3}
    6e94:	asr	r3, r5, #4
    6e98:	ldm	r9, {r0, r1}
    6e9c:	and	r9, r3, #1
    6ea0:	and	r5, r5, #1
    6ea4:	stm	fp, {r0, r1}
    6ea8:	ldm	r8!, {r0, r1, r2, r3}
    6eac:	asr	fp, lr, #1
    6eb0:	str	r7, [sp, #24]
    6eb4:	str	r6, [sp, #28]
    6eb8:	stmia	ip!, {r0, r1, r2, r3}
    6ebc:	asr	r6, lr, #2
    6ec0:	ldm	r8!, {r0, r1, r2, r3}
    6ec4:	asr	r7, lr, #3
    6ec8:	str	sl, [sp, #32]
    6ecc:	str	r9, [sp, #36]	; 0x24
    6ed0:	stmia	ip!, {r0, r1, r2, r3}
    6ed4:	asr	r9, lr, #7
    6ed8:	ldm	r8!, {r0, r1, r2, r3}
    6edc:	asr	sl, lr, #8
    6ee0:	and	fp, fp, #1
    6ee4:	str	r5, [sp, #20]
    6ee8:	stmia	ip!, {r0, r1, r2, r3}
    6eec:	asr	r3, lr, #4
    6ef0:	ldm	r8, {r0, r1}
    6ef4:	asr	r2, lr, #5
    6ef8:	asr	r8, lr, #6
    6efc:	stm	ip, {r0, r1}
    6f00:	and	r3, r3, #1
    6f04:	asr	r1, r4, #1
    6f08:	asr	r0, r4, #2
    6f0c:	asr	ip, r4, #3
    6f10:	and	lr, lr, #1
    6f14:	and	r6, r6, #1
    6f18:	and	r7, r7, #1
    6f1c:	str	r3, [sp, #8]
    6f20:	and	r2, r2, #1
    6f24:	and	r8, r8, #1
    6f28:	and	r9, r9, #1
    6f2c:	and	sl, sl, #1
    6f30:	str	lr, [sp, #4]
    6f34:	and	r1, r1, #1
    6f38:	and	r0, r0, #1
    6f3c:	and	ip, ip, #1
    6f40:	and	r4, r4, #1
    6f44:	beq	6f74 <perm5@@Base+0x140>
    6f48:	ldr	r5, [sp, #92]	; 0x5c
    6f4c:	add	r3, sp, #152	; 0x98
    6f50:	ldr	lr, [sp, #148]	; 0x94
    6f54:	add	r5, r3, r5, lsl #2
    6f58:	add	lr, r3, lr, lsl #2
    6f5c:	ldr	r3, [r5, #-132]	; 0xffffff7c
    6f60:	str	r3, [sp, #12]
    6f64:	ldr	r3, [lr, #-132]	; 0xffffff7c
    6f68:	str	r3, [r5, #-132]	; 0xffffff7c
    6f6c:	ldr	r3, [sp, #12]
    6f70:	str	r3, [lr, #-132]	; 0xffffff7c
    6f74:	cmp	ip, #0
    6f78:	beq	6fa0 <perm5@@Base+0x16c>
    6f7c:	ldr	lr, [sp, #88]	; 0x58
    6f80:	ldr	ip, [sp, #144]	; 0x90
    6f84:	add	r3, sp, #152	; 0x98
    6f88:	add	lr, r3, lr, lsl #2
    6f8c:	add	ip, r3, ip, lsl #2
    6f90:	ldr	r5, [lr, #-132]	; 0xffffff7c
    6f94:	ldr	r3, [ip, #-132]	; 0xffffff7c
    6f98:	str	r3, [lr, #-132]	; 0xffffff7c
    6f9c:	str	r5, [ip, #-132]	; 0xffffff7c
    6fa0:	cmp	r0, #0
    6fa4:	beq	6fcc <perm5@@Base+0x198>
    6fa8:	ldr	ip, [sp, #84]	; 0x54
    6fac:	ldr	r0, [sp, #140]	; 0x8c
    6fb0:	add	r3, sp, #152	; 0x98
    6fb4:	add	ip, r3, ip, lsl #2
    6fb8:	add	r0, r3, r0, lsl #2
    6fbc:	ldr	lr, [ip, #-132]	; 0xffffff7c
    6fc0:	ldr	r5, [r0, #-132]	; 0xffffff7c
    6fc4:	str	r5, [ip, #-132]	; 0xffffff7c
    6fc8:	str	lr, [r0, #-132]	; 0xffffff7c
    6fcc:	cmp	r1, #0
    6fd0:	beq	6ff8 <perm5@@Base+0x1c4>
    6fd4:	ldr	r0, [sp, #80]	; 0x50
    6fd8:	ldr	r1, [sp, #136]	; 0x88
    6fdc:	add	r3, sp, #152	; 0x98
    6fe0:	add	r0, r3, r0, lsl #2
    6fe4:	add	r1, r3, r1, lsl #2
    6fe8:	ldr	ip, [r0, #-132]	; 0xffffff7c
    6fec:	ldr	lr, [r1, #-132]	; 0xffffff7c
    6ff0:	str	lr, [r0, #-132]	; 0xffffff7c
    6ff4:	str	ip, [r1, #-132]	; 0xffffff7c
    6ff8:	cmp	r4, #0
    6ffc:	beq	7024 <perm5@@Base+0x1f0>
    7000:	ldr	r0, [sp, #76]	; 0x4c
    7004:	ldr	r1, [sp, #132]	; 0x84
    7008:	add	r3, sp, #152	; 0x98
    700c:	add	r0, r3, r0, lsl #2
    7010:	add	r1, r3, r1, lsl #2
    7014:	ldr	ip, [r0, #-132]	; 0xffffff7c
    7018:	ldr	lr, [r1, #-132]	; 0xffffff7c
    701c:	str	lr, [r0, #-132]	; 0xffffff7c
    7020:	str	ip, [r1, #-132]	; 0xffffff7c
    7024:	cmp	sl, #0
    7028:	beq	7050 <perm5@@Base+0x21c>
    702c:	ldr	r0, [sp, #72]	; 0x48
    7030:	ldr	r1, [sp, #128]	; 0x80
    7034:	add	r3, sp, #152	; 0x98
    7038:	add	r0, r3, r0, lsl #2
    703c:	add	r1, r3, r1, lsl #2
    7040:	ldr	ip, [r0, #-132]	; 0xffffff7c
    7044:	ldr	lr, [r1, #-132]	; 0xffffff7c
    7048:	str	lr, [r0, #-132]	; 0xffffff7c
    704c:	str	ip, [r1, #-132]	; 0xffffff7c
    7050:	cmp	r9, #0
    7054:	beq	707c <perm5@@Base+0x248>
    7058:	ldr	r0, [sp, #68]	; 0x44
    705c:	ldr	r1, [sp, #124]	; 0x7c
    7060:	add	r3, sp, #152	; 0x98
    7064:	add	r0, r3, r0, lsl #2
    7068:	add	r1, r3, r1, lsl #2
    706c:	ldr	ip, [r0, #-132]	; 0xffffff7c
    7070:	ldr	lr, [r1, #-132]	; 0xffffff7c
    7074:	str	lr, [r0, #-132]	; 0xffffff7c
    7078:	str	ip, [r1, #-132]	; 0xffffff7c
    707c:	cmp	r8, #0
    7080:	beq	70a8 <perm5@@Base+0x274>
    7084:	ldr	r0, [sp, #64]	; 0x40
    7088:	ldr	r1, [sp, #120]	; 0x78
    708c:	add	r3, sp, #152	; 0x98
    7090:	add	r0, r3, r0, lsl #2
    7094:	add	r1, r3, r1, lsl #2
    7098:	ldr	ip, [r0, #-132]	; 0xffffff7c
    709c:	ldr	lr, [r1, #-132]	; 0xffffff7c
    70a0:	str	lr, [r0, #-132]	; 0xffffff7c
    70a4:	str	ip, [r1, #-132]	; 0xffffff7c
    70a8:	cmp	r2, #0
    70ac:	beq	70d4 <perm5@@Base+0x2a0>
    70b0:	ldr	r1, [sp, #60]	; 0x3c
    70b4:	ldr	r2, [sp, #116]	; 0x74
    70b8:	add	r3, sp, #152	; 0x98
    70bc:	add	r1, r3, r1, lsl #2
    70c0:	add	r2, r3, r2, lsl #2
    70c4:	ldr	r0, [r1, #-132]	; 0xffffff7c
    70c8:	ldr	ip, [r2, #-132]	; 0xffffff7c
    70cc:	str	ip, [r1, #-132]	; 0xffffff7c
    70d0:	str	r0, [r2, #-132]	; 0xffffff7c
    70d4:	ldr	r3, [sp, #8]
    70d8:	cmp	r3, #0
    70dc:	beq	7104 <perm5@@Base+0x2d0>
    70e0:	ldr	r2, [sp, #56]	; 0x38
    70e4:	ldr	r3, [sp, #112]	; 0x70
    70e8:	add	r1, sp, #152	; 0x98
    70ec:	add	r2, r1, r2, lsl #2
    70f0:	add	r3, r1, r3, lsl #2
    70f4:	ldr	r1, [r2, #-132]	; 0xffffff7c
    70f8:	ldr	r0, [r3, #-132]	; 0xffffff7c
    70fc:	str	r0, [r2, #-132]	; 0xffffff7c
    7100:	str	r1, [r3, #-132]	; 0xffffff7c
    7104:	cmp	r7, #0
    7108:	beq	7130 <perm5@@Base+0x2fc>
    710c:	ldr	r2, [sp, #52]	; 0x34
    7110:	ldr	r3, [sp, #108]	; 0x6c
    7114:	add	r1, sp, #152	; 0x98
    7118:	add	r2, r1, r2, lsl #2
    711c:	add	r3, r1, r3, lsl #2
    7120:	ldr	r1, [r2, #-132]	; 0xffffff7c
    7124:	ldr	r0, [r3, #-132]	; 0xffffff7c
    7128:	str	r0, [r2, #-132]	; 0xffffff7c
    712c:	str	r1, [r3, #-132]	; 0xffffff7c
    7130:	cmp	r6, #0
    7134:	beq	715c <perm5@@Base+0x328>
    7138:	ldr	r2, [sp, #48]	; 0x30
    713c:	ldr	r3, [sp, #104]	; 0x68
    7140:	add	r1, sp, #152	; 0x98
    7144:	add	r2, r1, r2, lsl #2
    7148:	add	r3, r1, r3, lsl #2
    714c:	ldr	r1, [r2, #-132]	; 0xffffff7c
    7150:	ldr	r0, [r3, #-132]	; 0xffffff7c
    7154:	str	r0, [r2, #-132]	; 0xffffff7c
    7158:	str	r1, [r3, #-132]	; 0xffffff7c
    715c:	cmp	fp, #0
    7160:	beq	7188 <perm5@@Base+0x354>
    7164:	ldr	r2, [sp, #44]	; 0x2c
    7168:	ldr	r3, [sp, #100]	; 0x64
    716c:	add	r1, sp, #152	; 0x98
    7170:	add	r2, r1, r2, lsl #2
    7174:	add	r3, r1, r3, lsl #2
    7178:	ldr	r1, [r2, #-132]	; 0xffffff7c
    717c:	ldr	r0, [r3, #-132]	; 0xffffff7c
    7180:	str	r0, [r2, #-132]	; 0xffffff7c
    7184:	str	r1, [r3, #-132]	; 0xffffff7c
    7188:	ldr	r3, [sp, #4]
    718c:	cmp	r3, #0
    7190:	beq	71b8 <perm5@@Base+0x384>
    7194:	ldr	r2, [sp, #40]	; 0x28
    7198:	ldr	r3, [sp, #96]	; 0x60
    719c:	add	r1, sp, #152	; 0x98
    71a0:	add	r2, r1, r2, lsl #2
    71a4:	add	r3, r1, r3, lsl #2
    71a8:	ldr	r1, [r2, #-132]	; 0xffffff7c
    71ac:	ldr	r0, [r3, #-132]	; 0xffffff7c
    71b0:	str	r0, [r2, #-132]	; 0xffffff7c
    71b4:	str	r1, [r3, #-132]	; 0xffffff7c
    71b8:	ldr	r0, [sp, #24]
    71bc:	ldr	r3, [sp, #20]
    71c0:	ldr	r1, [sp, #28]
    71c4:	ldr	r2, [sp, #32]
    71c8:	add	r3, r3, r0, lsl #1
    71cc:	ldr	r0, [sp, #36]	; 0x24
    71d0:	add	r3, r3, r1, lsl #2
    71d4:	add	r3, r3, r2, lsl #3
    71d8:	add	r0, r3, r0, lsl #4
    71dc:	add	sp, sp, #156	; 0x9c
    71e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    71e4:	andeq	sp, r0, r0, lsr #20

000071e8 <perm_table_init@@Base>:
    71e8:	ldr	r3, [pc, #104]	; 7258 <perm_table_init@@Base+0x70>
    71ec:	ldr	r2, [pc, #104]	; 725c <perm_table_init@@Base+0x74>
    71f0:	add	r3, pc, r3
    71f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    71f8:	mov	r7, #0
    71fc:	ldr	r9, [r3, r2]
    7200:	sub	r9, r9, #1
    7204:	mov	r8, r9
    7208:	mov	r6, #0
    720c:	mov	r5, r8
    7210:	mov	r4, #0
    7214:	mov	r2, r4
    7218:	mov	r1, r6
    721c:	mov	r0, r7
    7220:	bl	2454 <perm5@plt>
    7224:	add	r4, r4, #1
    7228:	cmp	r4, #512	; 0x200
    722c:	strb	r0, [r5, #1]!
    7230:	bne	7214 <perm_table_init@@Base+0x2c>
    7234:	add	r6, r6, #1
    7238:	cmp	r6, #32
    723c:	add	r8, r8, #512	; 0x200
    7240:	bne	720c <perm_table_init@@Base+0x24>
    7244:	add	r7, r7, #1
    7248:	cmp	r7, #32
    724c:	add	r9, r9, #16384	; 0x4000
    7250:	bne	7204 <perm_table_init@@Base+0x1c>
    7254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7258:	andeq	r3, r2, r8, lsl #28
    725c:	andeq	r0, r0, ip, lsl #3

00007260 <fast_perm@@Base>:
    7260:	push	{r4, r5, r6, r7, r8, lr}
    7264:	mov	r8, r0
    7268:	ldr	r5, [pc, #64]	; 72b0 <fast_perm@@Base+0x50>
    726c:	ldr	r3, [pc, #64]	; 72b4 <fast_perm@@Base+0x54>
    7270:	add	r5, pc, r5
    7274:	mov	r4, r1
    7278:	ldr	r6, [r5, r3]
    727c:	mov	r7, r2
    7280:	ldr	r3, [r6]
    7284:	cmp	r3, #0
    7288:	bne	7298 <fast_perm@@Base+0x38>
    728c:	bl	225c <perm_table_init@plt>
    7290:	mov	r3, #1
    7294:	str	r3, [r6]
    7298:	ldr	r3, [pc, #24]	; 72b8 <fast_perm@@Base+0x58>
    729c:	add	r4, r4, r8, lsl #5
    72a0:	ldr	r1, [r5, r3]
    72a4:	add	r1, r1, r4, lsl #9
    72a8:	ldrb	r0, [r1, r7]
    72ac:	pop	{r4, r5, r6, r7, r8, pc}
    72b0:	andeq	r3, r2, r8, lsl #27
    72b4:	muleq	r0, r0, r1
    72b8:	andeq	r0, r0, ip, lsl #3

000072bc <gen_hop_pattern@@Base>:
    72bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    72c0:	mov	fp, r0
    72c4:	ldr	r0, [pc, #784]	; 75dc <gen_hop_pattern@@Base+0x320>
    72c8:	sub	sp, sp, #68	; 0x44
    72cc:	add	r0, pc, r0
    72d0:	bl	22d4 <puts@plt>
    72d4:	mov	r0, #134217728	; 0x8000000
    72d8:	bl	22e0 <malloc@plt>
    72dc:	mov	r3, #0
    72e0:	str	r3, [sp, #12]
    72e4:	str	r3, [sp, #8]
    72e8:	str	r3, [sp, #44]	; 0x2c
    72ec:	mov	r9, #11
    72f0:	str	r0, [fp, #372]	; 0x174
    72f4:	mov	r0, fp
    72f8:	bl	249c <precalc@plt>
    72fc:	ldrb	r3, [fp, #28]
    7300:	ldr	r0, [fp, #24]
    7304:	mov	r1, fp
    7308:	orr	r0, r0, r3, lsl #24
    730c:	bic	r0, r0, #-268435456	; 0xf0000000
    7310:	bl	23dc <address_precalc@plt>
    7314:	ldr	r3, [sp, #44]	; 0x2c
    7318:	lsl	r2, r3, #2
    731c:	str	r3, [sp, #48]	; 0x30
    7320:	mov	r3, #0
    7324:	str	r2, [sp, #56]	; 0x38
    7328:	str	r3, [sp, #40]	; 0x28
    732c:	ldr	r2, [sp, #56]	; 0x38
    7330:	ldr	r3, [fp, #44]	; 0x2c
    7334:	str	r2, [sp, #60]	; 0x3c
    7338:	ldr	r2, [sp, #40]	; 0x28
    733c:	eor	r3, r2, r3
    7340:	str	r3, [sp, #32]
    7344:	ldr	r3, [sp, #48]	; 0x30
    7348:	str	r3, [sp, #52]	; 0x34
    734c:	mov	r3, #0
    7350:	str	r3, [sp, #36]	; 0x24
    7354:	ldr	r3, [fp, #48]	; 0x30
    7358:	ldr	r2, [sp, #36]	; 0x24
    735c:	ldr	r5, [sp, #60]	; 0x3c
    7360:	eor	r3, r2, r3
    7364:	str	r3, [sp]
    7368:	eor	r3, r3, #31
    736c:	str	r3, [sp, #4]
    7370:	ldr	r3, [sp, #52]	; 0x34
    7374:	mov	r6, r5
    7378:	str	r3, [sp, #28]
    737c:	mov	r3, #0
    7380:	str	r3, [sp, #24]
    7384:	ldr	r3, [sp, #24]
    7388:	ldr	r8, [fp, #52]	; 0x34
    738c:	ldr	r7, [sp, #32]
    7390:	eor	r8, r8, r3
    7394:	ldr	r3, [sp, #8]
    7398:	add	sl, r6, #64	; 0x40
    739c:	add	r3, r3, #32
    73a0:	str	r3, [sp, #16]
    73a4:	ldr	r3, [sp, #12]
    73a8:	add	r3, r3, #32
    73ac:	str	r3, [sp, #20]
    73b0:	asr	r3, r7, #31
    73b4:	ldr	r2, [fp, #36]	; 0x24
    73b8:	lsr	r3, r3, #27
    73bc:	add	r4, r7, r3
    73c0:	and	r4, r4, #31
    73c4:	sub	r4, r4, r3
    73c8:	eor	r4, r4, r2
    73cc:	ldr	r1, [sp]
    73d0:	mov	r2, r8
    73d4:	mov	r0, r4
    73d8:	bl	24d8 <fast_perm@plt>
    73dc:	mov	r1, r9
    73e0:	mov	r5, r0
    73e4:	mov	r0, fp
    73e8:	bl	2208 <btbb_piconet_get_flag@plt>
    73ec:	cmp	r0, #0
    73f0:	ldr	r0, [fp, #40]	; 0x28
    73f4:	beq	75a4 <gen_hop_pattern@@Base+0x2e8>
    73f8:	ldr	r3, [sp, #12]
    73fc:	add	r0, r5, r0
    7400:	ldrb	r1, [fp, #22]
    7404:	add	r0, r0, r3
    7408:	bl	11eb4 <lell_pcapng_close@@Base+0x210>
    740c:	ldr	r3, [fp, #372]	; 0x174
    7410:	add	r1, r1, #14
    7414:	ldr	r2, [fp, r1, lsl #2]
    7418:	strb	r2, [r3, r6]
    741c:	mov	r0, r4
    7420:	mov	r2, r8
    7424:	ldr	r1, [sp, #4]
    7428:	bl	24d8 <fast_perm@plt>
    742c:	mov	r1, r9
    7430:	mov	r4, r0
    7434:	mov	r0, fp
    7438:	bl	2208 <btbb_piconet_get_flag@plt>
    743c:	cmp	r0, #0
    7440:	ldr	r0, [fp, #40]	; 0x28
    7444:	beq	7558 <gen_hop_pattern@@Base+0x29c>
    7448:	ldr	r2, [sp, #20]
    744c:	ldr	r3, [fp, #372]	; 0x174
    7450:	add	r0, r4, r0
    7454:	ldrb	r1, [fp, #22]
    7458:	add	r0, r0, r2
    745c:	add	r4, r3, r6
    7460:	bl	11eb4 <lell_pcapng_close@@Base+0x210>
    7464:	add	r6, r6, #2
    7468:	cmp	sl, r6
    746c:	add	r7, r7, #1
    7470:	add	r1, r1, #14
    7474:	ldr	r3, [fp, r1, lsl #2]
    7478:	strb	r3, [r4, #1]
    747c:	bne	73b0 <gen_hop_pattern@@Base+0xf4>
    7480:	ldr	r2, [sp, #24]
    7484:	ldr	r3, [sp, #28]
    7488:	add	r2, r2, #1
    748c:	mov	r4, r2
    7490:	str	r2, [sp, #24]
    7494:	ldr	r2, [pc, #324]	; 75e0 <gen_hop_pattern@@Base+0x324>
    7498:	add	r3, r3, #16
    749c:	str	r3, [sp, #28]
    74a0:	umull	r1, r2, r2, r3
    74a4:	ldrb	r1, [fp, #22]
    74a8:	mov	r6, sl
    74ac:	lsr	r2, r2, #6
    74b0:	mov	r0, r2
    74b4:	add	r2, r2, r2, lsl #2
    74b8:	rsb	r2, r0, r2, lsl #4
    74bc:	sub	r3, r3, r2
    74c0:	mov	r0, r3
    74c4:	str	r3, [sp, #8]
    74c8:	bl	11eb4 <lell_pcapng_close@@Base+0x210>
    74cc:	cmp	r4, #512	; 0x200
    74d0:	str	r1, [sp, #12]
    74d4:	bne	7384 <gen_hop_pattern@@Base+0xc8>
    74d8:	ldr	r3, [sp, #36]	; 0x24
    74dc:	add	r3, r3, #1
    74e0:	str	r3, [sp, #36]	; 0x24
    74e4:	cmp	r3, #32
    74e8:	ldr	r3, [sp, #60]	; 0x3c
    74ec:	add	r3, r3, #32768	; 0x8000
    74f0:	str	r3, [sp, #60]	; 0x3c
    74f4:	ldr	r3, [sp, #52]	; 0x34
    74f8:	add	r3, r3, #8192	; 0x2000
    74fc:	str	r3, [sp, #52]	; 0x34
    7500:	bne	7354 <gen_hop_pattern@@Base+0x98>
    7504:	ldr	r3, [sp, #40]	; 0x28
    7508:	add	r3, r3, #1
    750c:	str	r3, [sp, #40]	; 0x28
    7510:	cmp	r3, #32
    7514:	ldr	r3, [sp, #56]	; 0x38
    7518:	add	r3, r3, #1048576	; 0x100000
    751c:	str	r3, [sp, #56]	; 0x38
    7520:	ldr	r3, [sp, #48]	; 0x30
    7524:	add	r3, r3, #262144	; 0x40000
    7528:	str	r3, [sp, #48]	; 0x30
    752c:	bne	732c <gen_hop_pattern@@Base+0x70>
    7530:	ldr	r3, [sp, #44]	; 0x2c
    7534:	add	r3, r3, #8388608	; 0x800000
    7538:	cmp	r3, #33554432	; 0x2000000
    753c:	str	r3, [sp, #44]	; 0x2c
    7540:	bne	7318 <gen_hop_pattern@@Base+0x5c>
    7544:	ldr	r0, [pc, #152]	; 75e4 <gen_hop_pattern@@Base+0x328>
    7548:	add	r0, pc, r0
    754c:	add	sp, sp, #68	; 0x44
    7550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7554:	b	22d4 <puts@plt>
    7558:	ldr	r3, [sp, #16]
    755c:	add	r4, r4, r0
    7560:	add	r4, r4, r3
    7564:	ldr	r3, [pc, #116]	; 75e0 <gen_hop_pattern@@Base+0x324>
    7568:	ldr	r2, [fp, #372]	; 0x174
    756c:	add	r7, r7, #1
    7570:	umull	r1, r3, r3, r4
    7574:	add	r2, r2, r6
    7578:	lsr	r3, r3, #6
    757c:	add	r6, r6, #2
    7580:	add	r1, r3, r3, lsl #2
    7584:	cmp	r6, sl
    7588:	rsb	r3, r3, r1, lsl #4
    758c:	sub	r4, r4, r3
    7590:	add	r4, r4, #14
    7594:	ldr	r3, [fp, r4, lsl #2]
    7598:	strb	r3, [r2, #1]
    759c:	bne	73b0 <gen_hop_pattern@@Base+0xf4>
    75a0:	b	7480 <gen_hop_pattern@@Base+0x1c4>
    75a4:	ldr	r3, [sp, #8]
    75a8:	add	r5, r5, r0
    75ac:	add	r5, r5, r3
    75b0:	ldr	r3, [pc, #40]	; 75e0 <gen_hop_pattern@@Base+0x324>
    75b4:	ldr	r2, [fp, #372]	; 0x174
    75b8:	umull	r1, r3, r3, r5
    75bc:	lsr	r3, r3, #6
    75c0:	add	r1, r3, r3, lsl #2
    75c4:	rsb	r3, r3, r1, lsl #4
    75c8:	sub	r5, r5, r3
    75cc:	add	r5, r5, #14
    75d0:	ldr	r3, [fp, r5, lsl #2]
    75d4:	strb	r3, [r2, r6]
    75d8:	b	741c <gen_hop_pattern@@Base+0x160>
    75dc:	andeq	sp, r0, r8, lsl #12
    75e0:	svcgt	0x006474a9
    75e4:			; <UNDEFINED> instruction: 0x0000d3b4

000075e8 <get_hop_pattern@@Base>:
    75e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    75ec:	mov	r1, #11
    75f0:	sub	sp, sp, #36	; 0x24
    75f4:	mov	r8, r0
    75f8:	bl	2208 <btbb_piconet_get_flag@plt>
    75fc:	ldrb	ip, [r8, #28]
    7600:	ldr	r1, [pc, #1212]	; 7ac4 <get_hop_pattern@@Base+0x4dc>
    7604:	ldr	lr, [r8, #24]
    7608:	mov	r2, #0
    760c:	ldrb	r3, [r8, #22]
    7610:	add	r1, pc, r1
    7614:	lsl	ip, ip, #24
    7618:	orr	r6, r2, lr
    761c:	orr	r6, r6, ip
    7620:	ldr	r1, [r1, #4]
    7624:	orr	r6, r6, r2
    7628:	cmp	r1, r2
    762c:	lsl	r5, r0, #7
    7630:	orr	r7, r3, r5
    7634:	strd	r6, [sp, #24]
    7638:	beq	7764 <get_hop_pattern@@Base+0x17c>
    763c:	mov	r4, r2
    7640:	ldrb	r2, [sp, #24]
    7644:	ldrb	ip, [sp, #27]
    7648:	ldr	r3, [pc, #1144]	; 7ac8 <get_hop_pattern@@Base+0x4e0>
    764c:	ldrb	r0, [sp, #26]
    7650:	add	r3, r2, r3
    7654:	ldrb	r2, [sp, #25]
    7658:	add	r3, r3, ip, lsl #24
    765c:	add	r3, r3, r0, lsl #16
    7660:	ldr	r0, [pc, #1124]	; 7acc <get_hop_pattern@@Base+0x4e4>
    7664:	add	r3, r3, r2, lsl #8
    7668:	ldr	r2, [pc, #1120]	; 7ad0 <get_hop_pattern@@Base+0x4e8>
    766c:	eor	r0, r0, r3
    7670:	ldr	r3, [pc, #1116]	; 7ad4 <get_hop_pattern@@Base+0x4ec>
    7674:	sub	r2, r2, r0
    7678:	eor	r2, r2, r0, lsl #8
    767c:	sub	r3, r3, r0
    7680:	sub	r3, r3, r2
    7684:	eor	r3, r3, r2, lsr #13
    7688:	sub	r0, r0, r2
    768c:	sub	r0, r0, r3
    7690:	eor	r0, r0, r3, lsr #12
    7694:	sub	r2, r2, r3
    7698:	sub	r2, r2, r0
    769c:	eor	r2, r2, r0, lsl #16
    76a0:	sub	r3, r3, r0
    76a4:	sub	r3, r3, r2
    76a8:	eor	r3, r3, r2, lsr #5
    76ac:	sub	r0, r0, r2
    76b0:	ldr	r1, [r1, #12]
    76b4:	sub	r0, r0, r3
    76b8:	eor	r0, r0, r3, lsr #3
    76bc:	sub	r2, r2, r3
    76c0:	sub	r2, r2, r0
    76c4:	eor	r2, r2, r0, lsl #10
    76c8:	sub	r3, r3, r0
    76cc:	ldr	r0, [r1, #4]
    76d0:	sub	r3, r3, r2
    76d4:	eor	r3, r3, r2, lsr #15
    76d8:	sub	r2, r0, #1
    76dc:	and	r3, r3, r2
    76e0:	ldr	r2, [r1]
    76e4:	add	r3, r3, r3, lsl #1
    76e8:	ldr	r3, [r2, r3, lsl #2]
    76ec:	cmp	r3, r4
    76f0:	beq	7764 <get_hop_pattern@@Base+0x17c>
    76f4:	ldr	r5, [r1, #20]
    76f8:	rsb	r5, r5, #0
    76fc:	adds	r4, r3, r5
    7700:	beq	7764 <get_hop_pattern@@Base+0x17c>
    7704:	add	sl, sp, #24
    7708:	mov	r9, #4
    770c:	b	7724 <get_hop_pattern@@Base+0x13c>
    7710:	ldr	r3, [r4, #28]
    7714:	cmp	r3, #0
    7718:	beq	7764 <get_hop_pattern@@Base+0x17c>
    771c:	adds	r4, r3, r5
    7720:	beq	7764 <get_hop_pattern@@Base+0x17c>
    7724:	ldr	r3, [r4, #36]	; 0x24
    7728:	cmp	r3, #4
    772c:	bne	7710 <get_hop_pattern@@Base+0x128>
    7730:	mov	r2, r9
    7734:	mov	r1, sl
    7738:	ldr	r0, [r4, #32]
    773c:	bl	21cc <memcmp@plt>
    7740:	cmp	r0, #0
    7744:	bne	7710 <get_hop_pattern@@Base+0x128>
    7748:	ldr	r0, [pc, #904]	; 7ad8 <get_hop_pattern@@Base+0x4f0>
    774c:	add	r0, pc, r0
    7750:	bl	22d4 <puts@plt>
    7754:	ldr	r3, [r4, #8]
    7758:	str	r3, [r8, #372]	; 0x174
    775c:	add	sp, sp, #36	; 0x24
    7760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7764:	mov	r0, r8
    7768:	bl	20e8 <gen_hop_pattern@plt>
    776c:	mov	r0, #48	; 0x30
    7770:	bl	22e0 <malloc@plt>
    7774:	ldr	r3, [pc, #864]	; 7adc <get_hop_pattern@@Base+0x4f4>
    7778:	mov	r1, #0
    777c:	add	r3, pc, r3
    7780:	mov	r2, #4
    7784:	ldr	ip, [r3, #4]
    7788:	cmp	ip, r1
    778c:	mov	sl, r0
    7790:	ldr	r0, [r8, #372]	; 0x174
    7794:	strd	r6, [sl]
    7798:	str	sl, [sl, #32]
    779c:	str	r0, [sl, #8]
    77a0:	str	r1, [sl, #20]
    77a4:	str	r2, [sl, #36]	; 0x24
    77a8:	beq	7a3c <get_hop_pattern@@Base+0x454>
    77ac:	ldr	fp, [ip, #12]
    77b0:	add	r4, sl, #12
    77b4:	ldr	r2, [fp, #16]
    77b8:	ldr	r3, [fp, #20]
    77bc:	sub	r3, r2, r3
    77c0:	str	sl, [r2, #8]
    77c4:	str	r3, [sl, #16]
    77c8:	str	r4, [fp, #16]
    77cc:	ldr	r2, [fp, #12]
    77d0:	ldr	r3, [pc, #752]	; 7ac8 <get_hop_pattern@@Base+0x4e0>
    77d4:	add	r2, r2, #1
    77d8:	str	r2, [fp, #12]
    77dc:	ldrb	lr, [sl]
    77e0:	ldrb	r2, [sl, #3]
    77e4:	ldrb	r1, [sl, #2]
    77e8:	ldrb	r0, [sl, #1]
    77ec:	add	r3, lr, r3
    77f0:	add	r2, r3, r2, lsl #24
    77f4:	add	r2, r2, r1, lsl #16
    77f8:	ldr	r1, [pc, #716]	; 7acc <get_hop_pattern@@Base+0x4e4>
    77fc:	add	r2, r2, r0, lsl #8
    7800:	ldr	r3, [pc, #712]	; 7ad0 <get_hop_pattern@@Base+0x4e8>
    7804:	eor	r1, r1, r2
    7808:	ldr	r2, [pc, #708]	; 7ad4 <get_hop_pattern@@Base+0x4ec>
    780c:	sub	r3, r3, r1
    7810:	eor	r3, r3, r1, lsl #8
    7814:	sub	r2, r2, r1
    7818:	sub	r2, r2, r3
    781c:	eor	r2, r2, r3, lsr #13
    7820:	sub	r1, r1, r3
    7824:	sub	r1, r1, r2
    7828:	eor	r1, r1, r2, lsr #12
    782c:	sub	r3, r3, r2
    7830:	sub	r3, r3, r1
    7834:	eor	r3, r3, r1, lsl #16
    7838:	sub	r2, r2, r1
    783c:	sub	r2, r2, r3
    7840:	eor	r2, r2, r3, lsr #5
    7844:	sub	r1, r1, r3
    7848:	str	fp, [sl, #12]
    784c:	sub	r1, r1, r2
    7850:	ldr	r0, [ip, #12]
    7854:	eor	r1, r1, r2, lsr #3
    7858:	sub	r3, r3, r2
    785c:	sub	r3, r3, r1
    7860:	eor	r3, r3, r1, lsl #10
    7864:	sub	r2, r2, r1
    7868:	ldr	r1, [r0, #4]
    786c:	sub	r2, r2, r3
    7870:	eor	r3, r2, r3, lsr #15
    7874:	sub	r2, r1, #1
    7878:	and	r2, r2, r3
    787c:	ldr	r0, [r0]
    7880:	add	r2, r2, r2, lsl #1
    7884:	mov	r5, #0
    7888:	lsl	r2, r2, #2
    788c:	add	ip, r0, r2
    7890:	ldr	lr, [r0, r2]
    7894:	ldr	r1, [ip, #4]
    7898:	str	r3, [sl, #40]	; 0x28
    789c:	ldr	r3, [ip, #8]
    78a0:	cmp	lr, r5
    78a4:	add	r3, r3, #1
    78a8:	add	r1, r1, #1
    78ac:	add	r3, r3, r3, lsl #2
    78b0:	str	r1, [ip, #4]
    78b4:	str	lr, [sl, #28]
    78b8:	str	r5, [sl, #24]
    78bc:	strne	r4, [lr, #12]
    78c0:	cmp	r1, r3, lsl #1
    78c4:	str	r4, [r0, r2]
    78c8:	bcc	775c <get_hop_pattern@@Base+0x174>
    78cc:	ldr	r3, [fp, #36]	; 0x24
    78d0:	cmp	r3, #1
    78d4:	beq	775c <get_hop_pattern@@Base+0x174>
    78d8:	ldr	r0, [fp, #4]
    78dc:	mov	r1, #1
    78e0:	add	r0, r0, r0, lsl r1
    78e4:	lsl	r0, r0, #3
    78e8:	bl	20c4 <calloc@plt>
    78ec:	subs	r7, r0, #0
    78f0:	beq	7abc <get_hop_pattern@@Base+0x4d4>
    78f4:	ldr	r1, [fp, #4]
    78f8:	ldr	ip, [fp, #12]
    78fc:	ldr	r0, [fp, #8]
    7900:	lsl	r2, r1, #1
    7904:	sub	r3, r2, #1
    7908:	tst	ip, r3
    790c:	add	r0, r0, #1
    7910:	movne	r9, #1
    7914:	moveq	r9, #0
    7918:	add	r9, r9, ip, lsr r0
    791c:	cmp	r1, #0
    7920:	mov	r0, #0
    7924:	str	r9, [fp, #24]
    7928:	str	r0, [fp, #28]
    792c:	beq	7aac <get_hop_pattern@@Base+0x4c4>
    7930:	add	r2, r2, r1
    7934:	str	sl, [sp, #20]
    7938:	lsl	r2, r2, #2
    793c:	ldr	r1, [fp]
    7940:	str	r2, [sp, #16]
    7944:	mov	sl, r3
    7948:	mov	r2, r0
    794c:	str	r0, [sp, #8]
    7950:	str	r1, [sp, #12]
    7954:	ldr	r3, [sp, #12]
    7958:	ldr	r1, [sp, #8]
    795c:	ldr	r5, [r3, r1]
    7960:	cmp	r5, #0
    7964:	beq	79d0 <get_hop_pattern@@Base+0x3e8>
    7968:	ldr	r4, [r5, #28]
    796c:	ldr	r8, [r5, #16]
    7970:	and	r4, r4, sl
    7974:	add	r4, r4, r4, lsl #1
    7978:	add	r6, r7, r4, lsl #2
    797c:	ldr	r0, [r6, #4]
    7980:	add	r0, r0, #1
    7984:	cmp	r9, r0
    7988:	str	r0, [r6, #4]
    798c:	bcs	79b0 <get_hop_pattern@@Base+0x3c8>
    7990:	ldr	r3, [fp, #28]
    7994:	mov	r1, r9
    7998:	add	r3, r3, #1
    799c:	str	r3, [fp, #28]
    79a0:	str	r2, [sp, #4]
    79a4:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
    79a8:	ldr	r2, [sp, #4]
    79ac:	str	r0, [r6, #8]
    79b0:	ldr	r3, [r7, r4, lsl #2]
    79b4:	str	r2, [r5, #12]
    79b8:	cmp	r3, #0
    79bc:	str	r3, [r5, #16]
    79c0:	strne	r5, [r3, #12]
    79c4:	str	r5, [r7, r4, lsl #2]
    79c8:	subs	r5, r8, #0
    79cc:	bne	7968 <get_hop_pattern@@Base+0x380>
    79d0:	ldr	r3, [sp, #8]
    79d4:	ldr	r1, [sp, #16]
    79d8:	add	r3, r3, #12
    79dc:	cmp	r1, r3
    79e0:	str	r3, [sp, #8]
    79e4:	bne	7954 <get_hop_pattern@@Base+0x36c>
    79e8:	ldr	sl, [sp, #20]
    79ec:	ldr	r0, [sp, #12]
    79f0:	bl	2160 <free@plt>
    79f4:	ldr	r3, [sl, #12]
    79f8:	ldmib	r3, {r1, r2, ip}
    79fc:	ldr	r0, [r3, #28]
    7a00:	str	r7, [r3]
    7a04:	add	r2, r2, #1
    7a08:	lsl	r1, r1, #1
    7a0c:	cmp	r0, ip, lsr #1
    7a10:	stmib	r3, {r1, r2}
    7a14:	movls	r2, #0
    7a18:	strls	r2, [r3, #32]
    7a1c:	bls	775c <get_hop_pattern@@Base+0x174>
    7a20:	ldr	r2, [r3, #32]
    7a24:	add	r2, r2, #1
    7a28:	cmp	r2, #1
    7a2c:	str	r2, [r3, #32]
    7a30:	movhi	r2, #1
    7a34:	strhi	r2, [r3, #36]	; 0x24
    7a38:	b	775c <get_hop_pattern@@Base+0x174>
    7a3c:	mov	r1, #1
    7a40:	mov	r0, #44	; 0x2c
    7a44:	str	ip, [sl, #16]
    7a48:	str	sl, [r3, #4]
    7a4c:	bl	20c4 <calloc@plt>
    7a50:	cmp	r0, #0
    7a54:	mov	r5, r0
    7a58:	str	r0, [sl, #12]
    7a5c:	beq	7abc <get_hop_pattern@@Base+0x4d4>
    7a60:	mov	ip, #32
    7a64:	mov	r2, #5
    7a68:	mov	r3, #12
    7a6c:	add	r4, sl, #12
    7a70:	mov	r1, #1
    7a74:	mov	r0, #384	; 0x180
    7a78:	str	r4, [r5, #16]
    7a7c:	str	ip, [r5, #4]
    7a80:	str	r2, [r5, #8]
    7a84:	str	r3, [r5, #20]
    7a88:	bl	20c4 <calloc@plt>
    7a8c:	cmp	r0, #0
    7a90:	str	r0, [r5]
    7a94:	beq	7abc <get_hop_pattern@@Base+0x4d4>
    7a98:	ldr	r3, [pc, #64]	; 7ae0 <get_hop_pattern@@Base+0x4f8>
    7a9c:	mov	fp, r5
    7aa0:	str	r3, [r5, #40]	; 0x28
    7aa4:	mov	ip, sl
    7aa8:	b	77cc <get_hop_pattern@@Base+0x1e4>
    7aac:	ldr	r3, [fp]
    7ab0:	str	r3, [sp, #12]
    7ab4:	mov	r0, r3
    7ab8:	b	79f0 <get_hop_pattern@@Base+0x408>
    7abc:	mvn	r0, #0
    7ac0:	bl	2334 <exit@plt>
    7ac4:	muleq	r2, ip, fp
    7ac8:	tsteq	r2, sp, lsl #2
    7acc:	andeq	pc, r7, sp, ror #14
    7ad0:	svcls	0x0049bac6
    7ad4:	mcr2	14, 7, fp, cr13, cr3, {7}
    7ad8:	ldrdeq	sp, [r0], -r0
    7adc:	andeq	r3, r2, r0, lsr sl
    7ae0:	andsge	r1, r1, r1, ror #31

00007ae4 <btbb_piconet_set_afh_map@@Base>:
    7ae4:	push	{r4, r5, r6, r7, r8, lr}
    7ae8:	mov	r5, r0
    7aec:	sub	r6, r1, #1
    7af0:	add	r4, r0, #11
    7af4:	add	r7, r0, #21
    7af8:	mov	r3, #0
    7afc:	strb	r3, [r0, #22]
    7b00:	ldrb	r0, [r6, #1]!
    7b04:	strb	r0, [r4, #1]!
    7b08:	bl	20f4 <count_bits@plt>
    7b0c:	ldrb	r3, [r5, #22]
    7b10:	cmp	r4, r7
    7b14:	add	r0, r3, r0
    7b18:	strb	r0, [r5, #22]
    7b1c:	bne	7b00 <btbb_piconet_set_afh_map@@Base+0x1c>
    7b20:	mov	r1, #2
    7b24:	mov	r0, r5
    7b28:	bl	2208 <btbb_piconet_get_flag@plt>
    7b2c:	cmp	r0, #0
    7b30:	popeq	{r4, r5, r6, r7, r8, pc}
    7b34:	mov	r0, r5
    7b38:	pop	{r4, r5, r6, r7, r8, lr}
    7b3c:	b	22c8 <get_hop_pattern@plt>

00007b40 <single_hop@@Base>:
    7b40:	push	{r4, r5, r6, r7, r8, lr}
    7b44:	mov	r4, r1
    7b48:	ldr	r2, [r1, #52]	; 0x34
    7b4c:	ldr	r3, [r4, #44]	; 0x2c
    7b50:	asr	r1, r0, #1
    7b54:	and	r1, r1, #1
    7b58:	ldr	lr, [r4, #48]	; 0x30
    7b5c:	eor	r2, r2, r0, asr #7
    7b60:	eor	r3, r3, r0, asr #21
    7b64:	mov	ip, r0
    7b68:	eor	lr, lr, r0, asr #16
    7b6c:	add	r3, r3, r0, lsr #2
    7b70:	lsl	r7, r1, #5
    7b74:	ldr	r0, [r4, #36]	; 0x24
    7b78:	lsl	r2, r2, #23
    7b7c:	and	lr, lr, #31
    7b80:	and	r3, r3, #31
    7b84:	sub	r1, r7, r1
    7b88:	ldr	r6, [pc, #172]	; 7c3c <single_hop@@Base+0xfc>
    7b8c:	eor	r1, r1, lr
    7b90:	eor	r0, r0, r3
    7b94:	lsr	r2, r2, #23
    7b98:	and	r6, r6, ip, asr #3
    7b9c:	bl	24d8 <fast_perm@plt>
    7ba0:	mov	r1, #11
    7ba4:	mov	r5, r0
    7ba8:	mov	r0, r4
    7bac:	bl	2208 <btbb_piconet_get_flag@plt>
    7bb0:	cmp	r0, #0
    7bb4:	bne	7c04 <single_hop@@Base+0xc4>
    7bb8:	ldr	r3, [pc, #128]	; 7c40 <single_hop@@Base+0x100>
    7bbc:	ldr	r1, [r4, #40]	; 0x28
    7bc0:	umull	r0, r2, r3, r6
    7bc4:	add	r5, r5, r1
    7bc8:	lsr	r2, r2, #6
    7bcc:	add	r1, r2, r2, lsl #2
    7bd0:	rsb	r2, r2, r1, lsl #4
    7bd4:	sub	r6, r6, r2
    7bd8:	add	r7, r6, r7
    7bdc:	add	r5, r5, r7
    7be0:	umull	r2, r3, r3, r5
    7be4:	lsr	r3, r3, #6
    7be8:	add	r2, r3, r3, lsl #2
    7bec:	rsb	r3, r3, r2, lsl #4
    7bf0:	sub	r5, r5, r3
    7bf4:	add	r5, r5, #14
    7bf8:	ldr	r0, [r4, r5, lsl #2]
    7bfc:	uxtb	r0, r0
    7c00:	pop	{r4, r5, r6, r7, r8, pc}
    7c04:	ldrb	r8, [r4, #22]
    7c08:	ldr	r3, [r4, #40]	; 0x28
    7c0c:	mov	r0, r6
    7c10:	mov	r1, r8
    7c14:	add	r5, r5, r3
    7c18:	bl	11eb4 <lell_pcapng_close@@Base+0x210>
    7c1c:	add	r1, r1, r7
    7c20:	add	r0, r5, r1
    7c24:	mov	r1, r8
    7c28:	bl	11eb4 <lell_pcapng_close@@Base+0x210>
    7c2c:	add	r1, r1, #14
    7c30:	ldr	r0, [r4, r1, lsl #2]
    7c34:	uxtb	r0, r0
    7c38:	pop	{r4, r5, r6, r7, r8, pc}
    7c3c:	ldrsheq	pc, [pc, #240]	; 7d34 <btbb_init_hop_reversal@@Base+0xe4>	; <UNPREDICTABLE>
    7c40:	svcgt	0x006474a9

00007c44 <hop@@Base>:
    7c44:	ldr	r3, [r1, #372]	; 0x174
    7c48:	ldrb	r0, [r3, r0]
    7c4c:	bx	lr

00007c50 <btbb_init_hop_reversal@@Base>:
    7c50:	push	{r4, r5, r6, r7, r8, lr}
    7c54:	mov	r4, r0
    7c58:	mov	r0, r1
    7c5c:	mov	r5, r1
    7c60:	bl	22c8 <get_hop_pattern@plt>
    7c64:	ldr	r3, [pc, #248]	; 7d64 <btbb_init_hop_reversal@@Base+0x114>
    7c68:	cmp	r4, #0
    7c6c:	ldr	r0, [pc, #244]	; 7d68 <btbb_init_hop_reversal@@Base+0x118>
    7c70:	movne	r0, r3
    7c74:	bl	22e0 <malloc@plt>
    7c78:	add	r3, r5, #4096	; 0x1000
    7c7c:	ldr	ip, [r5, #8]
    7c80:	ldr	r1, [r3, #1552]	; 0x610
    7c84:	ldr	r2, [r3, #1556]	; 0x614
    7c88:	cmp	ip, #0
    7c8c:	add	r1, r1, r2
    7c90:	and	r1, r1, #63	; 0x3f
    7c94:	str	r0, [r5, #32]
    7c98:	ldrb	lr, [r3, #552]	; 0x228
    7c9c:	bne	7d14 <btbb_init_hop_reversal@@Base+0xc4>
    7ca0:	ldr	r2, [r5, #372]	; 0x174
    7ca4:	ldrb	r3, [r2, r1]
    7ca8:	cmp	r3, lr
    7cac:	streq	r1, [r0, ip, lsl #2]
    7cb0:	add	r1, r1, #64	; 0x40
    7cb4:	addeq	ip, ip, #1
    7cb8:	cmn	r1, #-134217727	; 0xf8000001
    7cbc:	ble	7ca4 <btbb_init_hop_reversal@@Base+0x54>
    7cc0:	mov	r6, #0
    7cc4:	str	ip, [r5, #376]	; 0x178
    7cc8:	mov	r0, r5
    7ccc:	str	r6, [r5, #388]	; 0x184
    7cd0:	mov	r2, #1
    7cd4:	mov	r1, #9
    7cd8:	bl	222c <btbb_piconet_set_flag@plt>
    7cdc:	mov	r2, r6
    7ce0:	mov	r0, r5
    7ce4:	mov	r1, #5
    7ce8:	bl	222c <btbb_piconet_set_flag@plt>
    7cec:	mov	r2, r4
    7cf0:	mov	r0, r5
    7cf4:	mov	r1, #13
    7cf8:	bl	222c <btbb_piconet_set_flag@plt>
    7cfc:	ldr	r0, [pc, #104]	; 7d6c <btbb_init_hop_reversal@@Base+0x11c>
    7d00:	ldr	r1, [r5, #376]	; 0x178
    7d04:	add	r0, pc, r0
    7d08:	bl	2118 <printf@plt>
    7d0c:	ldr	r0, [r5, #376]	; 0x178
    7d10:	pop	{r4, r5, r6, r7, r8, pc}
    7d14:	ldr	r7, [r5, #372]	; 0x174
    7d18:	ldr	r6, [pc, #80]	; 7d70 <btbb_init_hop_reversal@@Base+0x120>
    7d1c:	mov	ip, #0
    7d20:	ldrb	r3, [r7, r1]
    7d24:	add	r3, r3, #24
    7d28:	smull	r2, r8, r6, r3
    7d2c:	asr	r2, r3, #31
    7d30:	rsb	r2, r2, r8, asr #3
    7d34:	add	r2, r2, r2, lsl #2
    7d38:	add	r2, r2, r2, lsl #2
    7d3c:	sub	r3, r3, r2
    7d40:	add	r3, r3, #26
    7d44:	uxtb	r3, r3
    7d48:	cmp	lr, r3
    7d4c:	streq	r1, [r0, ip, lsl #2]
    7d50:	add	r1, r1, #64	; 0x40
    7d54:	addeq	ip, ip, #1
    7d58:	cmn	r1, #-134217727	; 0xf8000001
    7d5c:	ble	7d20 <btbb_init_hop_reversal@@Base+0xd0>
    7d60:	b	7cc0 <btbb_init_hop_reversal@@Base+0x70>
    7d64:	andeq	r3, sl, r0, ror sp
    7d68:	muleq	r3, r0, sp
    7d6c:	andeq	ip, r0, ip, lsr ip
    7d70:	mvnpl	r8, pc, lsl r5

00007d74 <btbb_winnow@@Base>:
    7d74:	ldr	r3, [r0, #388]	; 0x184
    7d78:	ldr	r2, [r0, #380]	; 0x17c
    7d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7d80:	cmp	r3, r2
    7d84:	ldr	r9, [r0, #376]	; 0x178
    7d88:	sub	sp, sp, #12
    7d8c:	mov	r5, r9
    7d90:	bge	7f60 <btbb_winnow@@Base+0x1ec>
    7d94:	ldr	r2, [pc, #560]	; 7fcc <btbb_winnow@@Base+0x258>
    7d98:	ldr	r7, [pc, #560]	; 7fd0 <btbb_winnow@@Base+0x25c>
    7d9c:	mov	r4, r0
    7da0:	add	r2, pc, r2
    7da4:	str	r2, [sp, #4]
    7da8:	add	r2, r4, r3
    7dac:	add	r2, r2, #4608	; 0x1200
    7db0:	add	r3, r3, #162	; 0xa2
    7db4:	cmp	r9, #0
    7db8:	ldrb	r6, [r2, #40]	; 0x28
    7dbc:	ldr	r8, [r4, r3, lsl #2]
    7dc0:	ble	7ec0 <btbb_winnow@@Base+0x14c>
    7dc4:	ldr	sl, [r4, #32]
    7dc8:	mov	r5, #0
    7dcc:	ldr	lr, [r4, #372]	; 0x174
    7dd0:	mov	r0, sl
    7dd4:	mov	r1, r5
    7dd8:	ldr	r3, [r4, #8]
    7ddc:	ldr	r2, [r0]
    7de0:	cmp	r3, #0
    7de4:	add	r3, r2, r8
    7de8:	bic	r3, r3, #-134217728	; 0xf8000000
    7dec:	ldrb	r3, [lr, r3]
    7df0:	beq	7e18 <btbb_winnow@@Base+0xa4>
    7df4:	add	r3, r3, #24
    7df8:	smull	ip, fp, r7, r3
    7dfc:	asr	ip, r3, #31
    7e00:	rsb	ip, ip, fp, asr #3
    7e04:	add	ip, ip, ip, lsl #2
    7e08:	add	ip, ip, ip, lsl #2
    7e0c:	sub	r3, r3, ip
    7e10:	add	r3, r3, #26
    7e14:	uxtb	r3, r3
    7e18:	cmp	r6, r3
    7e1c:	streq	r2, [sl, r5, lsl #2]
    7e20:	ldreq	r9, [r4, #376]	; 0x178
    7e24:	add	r1, r1, #1
    7e28:	addeq	r5, r5, #1
    7e2c:	cmp	r1, r9
    7e30:	add	r0, r0, #4
    7e34:	blt	7dd8 <btbb_winnow@@Base+0x64>
    7e38:	cmp	r5, #1
    7e3c:	str	r5, [r4, #376]	; 0x178
    7e40:	beq	7f6c <btbb_winnow@@Base+0x1f8>
    7e44:	cmp	r5, #0
    7e48:	beq	7ec8 <btbb_winnow@@Base+0x154>
    7e4c:	cmp	r5, #1
    7e50:	beq	7f60 <btbb_winnow@@Base+0x1ec>
    7e54:	ldr	r2, [r4, #380]	; 0x17c
    7e58:	cmp	r2, #0
    7e5c:	ble	7ea4 <btbb_winnow@@Base+0x130>
    7e60:	ldr	r2, [r4, #388]	; 0x184
    7e64:	mov	r1, #12
    7e68:	sub	r3, r2, #1
    7e6c:	add	r3, r4, r3
    7e70:	add	r3, r3, #4608	; 0x1200
    7e74:	add	r2, r2, #161	; 0xa1
    7e78:	mov	r0, r4
    7e7c:	ldrb	sl, [r3, #40]	; 0x28
    7e80:	ldr	r9, [r4, r2, lsl #2]
    7e84:	bl	2208 <btbb_piconet_get_flag@plt>
    7e88:	cmp	r0, #0
    7e8c:	bne	7ea0 <btbb_winnow@@Base+0x12c>
    7e90:	add	r9, r9, #1
    7e94:	cmp	r9, r8
    7e98:	cmpeq	r6, sl
    7e9c:	beq	7fb0 <btbb_winnow@@Base+0x23c>
    7ea0:	ldr	r2, [r4, #380]	; 0x17c
    7ea4:	ldr	r3, [r4, #388]	; 0x184
    7ea8:	add	r3, r3, #1
    7eac:	cmp	r3, r2
    7eb0:	str	r3, [r4, #388]	; 0x184
    7eb4:	bge	7f60 <btbb_winnow@@Base+0x1ec>
    7eb8:	ldr	r9, [r4, #376]	; 0x178
    7ebc:	b	7da8 <btbb_winnow@@Base+0x34>
    7ec0:	mov	r3, #0
    7ec4:	str	r3, [r4, #376]	; 0x178
    7ec8:	mov	r1, #9
    7ecc:	mov	r0, r4
    7ed0:	bl	2208 <btbb_piconet_get_flag@plt>
    7ed4:	cmp	r0, #0
    7ed8:	beq	7eec <btbb_winnow@@Base+0x178>
    7edc:	ldr	r0, [r4, #32]
    7ee0:	bl	2160 <free@plt>
    7ee4:	mov	r3, #0
    7ee8:	str	r3, [r4, #372]	; 0x174
    7eec:	mov	r2, #0
    7ef0:	mov	r1, #10
    7ef4:	mov	r0, r4
    7ef8:	bl	222c <btbb_piconet_set_flag@plt>
    7efc:	mov	r2, #0
    7f00:	mov	r1, #9
    7f04:	mov	r0, r4
    7f08:	bl	222c <btbb_piconet_set_flag@plt>
    7f0c:	mov	r2, #0
    7f10:	mov	r1, #2
    7f14:	mov	r0, r4
    7f18:	bl	222c <btbb_piconet_set_flag@plt>
    7f1c:	mov	r5, #0
    7f20:	mov	r2, #0
    7f24:	mov	r1, #4
    7f28:	mov	r0, r4
    7f2c:	bl	222c <btbb_piconet_set_flag@plt>
    7f30:	mov	r2, r5
    7f34:	mov	r1, #5
    7f38:	mov	r0, r4
    7f3c:	bl	222c <btbb_piconet_set_flag@plt>
    7f40:	mov	r1, #12
    7f44:	str	r5, [r4, #380]	; 0x17c
    7f48:	mov	r0, r4
    7f4c:	bl	2208 <btbb_piconet_get_flag@plt>
    7f50:	mov	r1, #11
    7f54:	mov	r2, r0
    7f58:	mov	r0, r4
    7f5c:	bl	222c <btbb_piconet_set_flag@plt>
    7f60:	mov	r0, r5
    7f64:	add	sp, sp, #12
    7f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7f6c:	add	r2, r4, #4096	; 0x1000
    7f70:	ldr	r1, [sl]
    7f74:	ldr	r3, [r2, #1556]	; 0x614
    7f78:	ldr	r0, [pc, #84]	; 7fd4 <btbb_winnow@@Base+0x260>
    7f7c:	lsl	r3, r3, #1
    7f80:	rsb	r3, r3, r1, lsl #1
    7f84:	str	r3, [r2, #1552]	; 0x610
    7f88:	add	r0, pc, r0
    7f8c:	ldr	r1, [sl]
    7f90:	bl	2118 <printf@plt>
    7f94:	mov	r0, r4
    7f98:	mov	r2, r5
    7f9c:	mov	r1, #5
    7fa0:	bl	222c <btbb_piconet_set_flag@plt>
    7fa4:	mov	r0, r5
    7fa8:	add	sp, sp, #12
    7fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7fb0:	mov	r0, r4
    7fb4:	mov	r2, #1
    7fb8:	mov	r1, #12
    7fbc:	bl	222c <btbb_piconet_set_flag@plt>
    7fc0:	ldr	r0, [sp, #4]
    7fc4:	bl	22d4 <puts@plt>
    7fc8:	b	7ea0 <btbb_winnow@@Base+0x12c>
    7fcc:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    7fd0:	mvnpl	r8, pc, lsl r5
    7fd4:	ldrdeq	ip, [r0], -r8

00007fd8 <btbb_uap_from_header@@Base>:
    7fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7fdc:	mov	r6, r0
    7fe0:	sub	sp, sp, #12
    7fe4:	ldr	r3, [r6, #2816]	; 0xb00
    7fe8:	mov	r4, r1
    7fec:	mov	r0, r1
    7ff0:	mov	r1, #10
    7ff4:	mov	r5, r3
    7ff8:	str	r3, [sp]
    7ffc:	bl	2208 <btbb_piconet_get_flag@plt>
    8000:	cmp	r0, #0
    8004:	addeq	r3, r4, #4096	; 0x1000
    8008:	moveq	r2, r5
    800c:	streq	r2, [r3, #1556]	; 0x614
    8010:	mov	r0, r4
    8014:	ldrb	r1, [r6, #8]
    8018:	bl	2250 <btbb_piconet_set_channel_seen@plt>
    801c:	ldr	r3, [r4, #380]	; 0x17c
    8020:	cmp	r3, #1000	; 0x3e8
    8024:	bge	8290 <btbb_uap_from_header@@Base+0x2b8>
    8028:	add	r9, r4, #4096	; 0x1000
    802c:	ldr	ip, [sp]
    8030:	ldr	r1, [r9, #1556]	; 0x614
    8034:	add	r0, r3, #162	; 0xa2
    8038:	sub	r1, ip, r1
    803c:	str	r1, [r4, r0, lsl #2]
    8040:	add	r2, r4, r3
    8044:	ldrb	r1, [r6, #8]
    8048:	add	r2, r2, #4608	; 0x1200
    804c:	mov	r7, #0
    8050:	strb	r1, [r2, #40]	; 0x28
    8054:	ldr	r2, [r4, #384]	; 0x180
    8058:	mov	r5, r7
    805c:	add	sl, r4, #392	; 0x188
    8060:	add	r3, r3, #1
    8064:	add	r2, r2, #1
    8068:	str	r3, [r4, #380]	; 0x17c
    806c:	str	r2, [r4, #384]	; 0x180
    8070:	str	r7, [sp, #4]
    8074:	ldr	r2, [sl]
    8078:	cmp	r2, #0
    807c:	blt	8250 <btbb_uap_from_header@@Base+0x278>
    8080:	ldr	r3, [sp]
    8084:	ldr	fp, [r9, #1556]	; 0x614
    8088:	mov	r1, r6
    808c:	sub	fp, r3, fp
    8090:	add	fp, fp, r5
    8094:	and	fp, fp, #63	; 0x3f
    8098:	mov	r0, fp
    809c:	bl	24e4 <try_clock@plt>
    80a0:	mov	r1, #10
    80a4:	mov	r8, r0
    80a8:	mov	r0, r4
    80ac:	bl	2208 <btbb_piconet_get_flag@plt>
    80b0:	cmp	r0, #0
    80b4:	beq	8188 <btbb_uap_from_header@@Base+0x1b0>
    80b8:	ldr	r2, [sl]
    80bc:	cmp	r8, r2
    80c0:	beq	8188 <btbb_uap_from_header@@Base+0x1b0>
    80c4:	mov	r1, #2
    80c8:	mov	r0, r4
    80cc:	bl	2208 <btbb_piconet_get_flag@plt>
    80d0:	mvn	r3, #0
    80d4:	str	r3, [sl]
    80d8:	add	r5, r5, #1
    80dc:	cmp	r5, #64	; 0x40
    80e0:	add	sl, sl, #4
    80e4:	bne	8074 <btbb_uap_from_header@@Base+0x9c>
    80e8:	mov	r2, #1
    80ec:	mov	r1, #10
    80f0:	mov	r0, r4
    80f4:	bl	222c <btbb_piconet_set_flag@plt>
    80f8:	cmp	r7, #1
    80fc:	beq	8344 <btbb_uap_from_header@@Base+0x36c>
    8100:	cmp	r7, #0
    8104:	movne	r7, #0
    8108:	bne	8244 <btbb_uap_from_header@@Base+0x26c>
    810c:	mov	r1, #9
    8110:	mov	r0, r4
    8114:	bl	2208 <btbb_piconet_get_flag@plt>
    8118:	cmp	r0, #0
    811c:	beq	812c <btbb_uap_from_header@@Base+0x154>
    8120:	ldr	r0, [r4, #32]
    8124:	bl	2160 <free@plt>
    8128:	str	r7, [r4, #372]	; 0x174
    812c:	mov	r2, #0
    8130:	mov	r1, #10
    8134:	mov	r0, r4
    8138:	bl	222c <btbb_piconet_set_flag@plt>
    813c:	mov	r2, #0
    8140:	mov	r1, #9
    8144:	mov	r0, r4
    8148:	bl	222c <btbb_piconet_set_flag@plt>
    814c:	mov	r2, #0
    8150:	mov	r1, #2
    8154:	mov	r0, r4
    8158:	bl	222c <btbb_piconet_set_flag@plt>
    815c:	mov	r2, #0
    8160:	mov	r1, #4
    8164:	mov	r0, r4
    8168:	bl	222c <btbb_piconet_set_flag@plt>
    816c:	mov	r2, #0
    8170:	mov	r1, #5
    8174:	mov	r0, r4
    8178:	bl	222c <btbb_piconet_set_flag@plt>
    817c:	mov	r3, #0
    8180:	str	r3, [r4, #380]	; 0x17c
    8184:	b	8308 <btbb_uap_from_header@@Base+0x330>
    8188:	mov	r0, fp
    818c:	mov	r1, r6
    8190:	bl	2298 <crc_check@plt>
    8194:	mov	r1, #2
    8198:	mov	fp, r0
    819c:	mov	r0, r4
    81a0:	bl	2208 <btbb_piconet_get_flag@plt>
    81a4:	cmp	r0, #0
    81a8:	bne	8268 <btbb_uap_from_header@@Base+0x290>
    81ac:	add	fp, fp, #1
    81b0:	cmp	fp, #3
    81b4:	addls	pc, pc, fp, lsl #2
    81b8:	b	81dc <btbb_uap_from_header@@Base+0x204>
    81bc:	b	80d0 <btbb_uap_from_header@@Base+0xf8>
    81c0:	b	80d0 <btbb_uap_from_header@@Base+0xf8>
    81c4:	b	81cc <btbb_uap_from_header@@Base+0x1f4>
    81c8:	b	81cc <btbb_uap_from_header@@Base+0x1f4>
    81cc:	str	r8, [sl]
    81d0:	add	r7, r7, #1
    81d4:	str	r5, [sp, #4]
    81d8:	b	80d8 <btbb_uap_from_header@@Base+0x100>
    81dc:	ldr	r3, [r9, #1556]	; 0x614
    81e0:	mov	r1, #2
    81e4:	sub	r5, r5, r3
    81e8:	and	r5, r5, #63	; 0x3f
    81ec:	str	r5, [r9, #1552]	; 0x610
    81f0:	mov	r0, r4
    81f4:	bl	2208 <btbb_piconet_get_flag@plt>
    81f8:	cmp	r0, #0
    81fc:	beq	8278 <btbb_uap_from_header@@Base+0x2a0>
    8200:	ldr	r0, [pc, #464]	; 83d8 <btbb_uap_from_header@@Base+0x400>
    8204:	ldr	r1, [r9, #1552]	; 0x610
    8208:	ldr	r2, [r4, #384]	; 0x180
    820c:	add	r0, pc, r0
    8210:	bl	2118 <printf@plt>
    8214:	mov	r2, #1
    8218:	mov	r1, #4
    821c:	mov	r0, r4
    8220:	strb	r8, [r4, #28]
    8224:	bl	222c <btbb_piconet_set_flag@plt>
    8228:	mov	r7, #1
    822c:	mov	r2, #1
    8230:	mov	r1, #2
    8234:	mov	r0, r4
    8238:	bl	222c <btbb_piconet_set_flag@plt>
    823c:	mov	r3, #0
    8240:	str	r3, [r4, #384]	; 0x180
    8244:	mov	r0, r7
    8248:	add	sp, sp, #12
    824c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8250:	mov	r1, #10
    8254:	mov	r0, r4
    8258:	bl	2208 <btbb_piconet_get_flag@plt>
    825c:	cmp	r0, #0
    8260:	beq	8080 <btbb_uap_from_header@@Base+0xa8>
    8264:	b	80d8 <btbb_uap_from_header@@Base+0x100>
    8268:	ldrb	r2, [r4, #28]
    826c:	cmp	r2, r8
    8270:	bne	80d0 <btbb_uap_from_header@@Base+0xf8>
    8274:	b	81ac <btbb_uap_from_header@@Base+0x1d4>
    8278:	ldr	r0, [pc, #348]	; 83dc <btbb_uap_from_header@@Base+0x404>
    827c:	ldr	r2, [r4, #384]	; 0x180
    8280:	mov	r1, r8
    8284:	add	r0, pc, r0
    8288:	bl	2118 <printf@plt>
    828c:	b	8214 <btbb_uap_from_header@@Base+0x23c>
    8290:	ldr	r0, [pc, #328]	; 83e0 <btbb_uap_from_header@@Base+0x408>
    8294:	add	r0, pc, r0
    8298:	bl	22d4 <puts@plt>
    829c:	mov	r1, #9
    82a0:	mov	r0, r4
    82a4:	bl	2208 <btbb_piconet_get_flag@plt>
    82a8:	cmp	r0, #0
    82ac:	bne	8330 <btbb_uap_from_header@@Base+0x358>
    82b0:	mov	r2, #0
    82b4:	mov	r1, #10
    82b8:	mov	r0, r4
    82bc:	bl	222c <btbb_piconet_set_flag@plt>
    82c0:	mov	r2, #0
    82c4:	mov	r1, #9
    82c8:	mov	r0, r4
    82cc:	bl	222c <btbb_piconet_set_flag@plt>
    82d0:	mov	r2, #0
    82d4:	mov	r1, #2
    82d8:	mov	r0, r4
    82dc:	bl	222c <btbb_piconet_set_flag@plt>
    82e0:	mov	r7, #0
    82e4:	mov	r2, #0
    82e8:	mov	r1, #4
    82ec:	mov	r0, r4
    82f0:	bl	222c <btbb_piconet_set_flag@plt>
    82f4:	mov	r2, r7
    82f8:	mov	r1, #5
    82fc:	mov	r0, r4
    8300:	bl	222c <btbb_piconet_set_flag@plt>
    8304:	str	r7, [r4, #380]	; 0x17c
    8308:	mov	r1, #12
    830c:	mov	r0, r4
    8310:	bl	2208 <btbb_piconet_get_flag@plt>
    8314:	mov	r1, #11
    8318:	mov	r2, r0
    831c:	mov	r0, r4
    8320:	bl	222c <btbb_piconet_set_flag@plt>
    8324:	mov	r0, r7
    8328:	add	sp, sp, #12
    832c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8330:	ldr	r0, [r4, #32]
    8334:	bl	2160 <free@plt>
    8338:	mov	r3, #0
    833c:	str	r3, [r4, #372]	; 0x174
    8340:	b	82b0 <btbb_uap_from_header@@Base+0x2d8>
    8344:	ldr	r3, [r9, #1556]	; 0x614
    8348:	ldr	r5, [sp, #4]
    834c:	mov	r1, #2
    8350:	sub	r3, r5, r3
    8354:	and	r3, r3, #63	; 0x3f
    8358:	str	r3, [r9, #1552]	; 0x610
    835c:	mov	r0, r4
    8360:	bl	2208 <btbb_piconet_get_flag@plt>
    8364:	cmp	r0, #0
    8368:	bne	83b8 <btbb_uap_from_header@@Base+0x3e0>
    836c:	add	r5, r5, #98	; 0x62
    8370:	ldr	r0, [pc, #108]	; 83e4 <btbb_uap_from_header@@Base+0x40c>
    8374:	ldr	r2, [r4, #384]	; 0x180
    8378:	ldr	r1, [r4, r5, lsl #2]
    837c:	add	r0, pc, r0
    8380:	bl	2118 <printf@plt>
    8384:	ldr	r3, [r4, r5, lsl #2]
    8388:	mov	r2, #1
    838c:	strb	r3, [r4, #28]
    8390:	mov	r1, #4
    8394:	mov	r0, r4
    8398:	bl	222c <btbb_piconet_set_flag@plt>
    839c:	mov	r2, #1
    83a0:	mov	r1, #2
    83a4:	mov	r0, r4
    83a8:	bl	222c <btbb_piconet_set_flag@plt>
    83ac:	mov	r3, #0
    83b0:	str	r3, [r4, #384]	; 0x180
    83b4:	b	8244 <btbb_uap_from_header@@Base+0x26c>
    83b8:	ldr	r0, [pc, #40]	; 83e8 <btbb_uap_from_header@@Base+0x410>
    83bc:	ldr	r1, [r9, #1552]	; 0x610
    83c0:	ldr	r2, [r4, #384]	; 0x180
    83c4:	add	r0, pc, r0
    83c8:	bl	2118 <printf@plt>
    83cc:	ldr	r3, [sp, #4]
    83d0:	add	r5, r3, #98	; 0x62
    83d4:	b	8384 <btbb_uap_from_header@@Base+0x3ac>
    83d8:	strdeq	ip, [r0], -r4
    83dc:	andeq	ip, r0, r4, asr #14
    83e0:	andeq	ip, r0, ip, lsl #14
    83e4:			; <UNDEFINED> instruction: 0x0000c6bc
    83e8:	andeq	ip, r0, r0, lsr #13

000083ec <try_hop@@Base>:
    83ec:	push	{r4, r5, r6, r7, r8, lr}
    83f0:	mov	r4, r1
    83f4:	ldrb	r6, [r1, #28]
    83f8:	mov	r5, r0
    83fc:	bl	22a4 <btbb_decode@plt>
    8400:	mov	r0, r4
    8404:	mov	r1, #9
    8408:	bl	2208 <btbb_piconet_get_flag@plt>
    840c:	cmp	r0, #0
    8410:	beq	849c <try_hop@@Base+0xb0>
    8414:	add	r7, r4, #4096	; 0x1000
    8418:	ldr	r3, [r4, #380]	; 0x17c
    841c:	ldr	r0, [r7, #1556]	; 0x614
    8420:	ldr	r2, [r5, #2816]	; 0xb00
    8424:	add	r1, r3, #162	; 0xa2
    8428:	sub	r2, r2, r0
    842c:	str	r2, [r4, r1, lsl #2]
    8430:	add	r2, r4, r3
    8434:	ldrb	r1, [r5, #8]
    8438:	add	r2, r2, #4608	; 0x1200
    843c:	add	r3, r3, #1
    8440:	strb	r1, [r2, #40]	; 0x28
    8444:	ldr	r2, [r4, #384]	; 0x180
    8448:	str	r3, [r4, #380]	; 0x17c
    844c:	add	r3, r2, #1
    8450:	str	r3, [r4, #384]	; 0x180
    8454:	mov	r0, r4
    8458:	bl	22b0 <btbb_winnow@plt>
    845c:	mov	r1, #5
    8460:	mov	r0, r4
    8464:	bl	2208 <btbb_piconet_get_flag@plt>
    8468:	cmp	r0, #0
    846c:	bne	851c <try_hop@@Base+0x130>
    8470:	mov	r1, #2
    8474:	mov	r0, r4
    8478:	bl	2208 <btbb_piconet_get_flag@plt>
    847c:	cmp	r0, #0
    8480:	popne	{r4, r5, r6, r7, r8, pc}
    8484:	mov	r2, #1
    8488:	mov	r1, #2
    848c:	mov	r0, r4
    8490:	bl	222c <btbb_piconet_set_flag@plt>
    8494:	strb	r6, [r4, #28]
    8498:	pop	{r4, r5, r6, r7, r8, pc}
    849c:	mov	r1, #4
    84a0:	mov	r0, r4
    84a4:	bl	2208 <btbb_piconet_get_flag@plt>
    84a8:	mov	r1, r4
    84ac:	subs	r7, r0, #0
    84b0:	mov	r0, r5
    84b4:	beq	84f4 <try_hop@@Base+0x108>
    84b8:	bl	2190 <btbb_uap_from_header@plt>
    84bc:	mov	r1, #5
    84c0:	mov	r0, r4
    84c4:	bl	2208 <btbb_piconet_get_flag@plt>
    84c8:	cmp	r0, #0
    84cc:	beq	8470 <try_hop@@Base+0x84>
    84d0:	ldr	r0, [pc, #124]	; 8554 <try_hop@@Base+0x168>
    84d4:	add	r0, pc, r0
    84d8:	bl	22d4 <puts@plt>
    84dc:	add	r3, r4, #4096	; 0x1000
    84e0:	ldr	r0, [pc, #112]	; 8558 <try_hop@@Base+0x16c>
    84e4:	ldr	r1, [r3, #1552]	; 0x610
    84e8:	add	r0, pc, r0
    84ec:	bl	2118 <printf@plt>
    84f0:	b	8470 <try_hop@@Base+0x84>
    84f4:	bl	2190 <btbb_uap_from_header@plt>
    84f8:	cmp	r0, #0
    84fc:	beq	8470 <try_hop@@Base+0x84>
    8500:	ldrb	r3, [r4, #28]
    8504:	cmp	r3, r6
    8508:	beq	853c <try_hop@@Base+0x150>
    850c:	ldr	r0, [pc, #72]	; 855c <try_hop@@Base+0x170>
    8510:	add	r0, pc, r0
    8514:	bl	22d4 <puts@plt>
    8518:	b	8470 <try_hop@@Base+0x84>
    851c:	ldr	r0, [pc, #60]	; 8560 <try_hop@@Base+0x174>
    8520:	add	r0, pc, r0
    8524:	bl	22d4 <puts@plt>
    8528:	ldr	r0, [pc, #52]	; 8564 <try_hop@@Base+0x178>
    852c:	ldr	r1, [r7, #1552]	; 0x610
    8530:	add	r0, pc, r0
    8534:	bl	2118 <printf@plt>
    8538:	b	8470 <try_hop@@Base+0x84>
    853c:	mov	r0, r7
    8540:	mov	r1, r4
    8544:	bl	24f0 <btbb_init_hop_reversal@plt>
    8548:	mov	r0, r4
    854c:	bl	22b0 <btbb_winnow@plt>
    8550:	b	8470 <try_hop@@Base+0x84>
    8554:			; <UNDEFINED> instruction: 0x0000c5bc
    8558:			; <UNDEFINED> instruction: 0x0000c5b4
    855c:	andeq	ip, r0, r0, lsr #11
    8560:	andeq	ip, r0, r0, ror r5
    8564:	andeq	ip, r0, ip, ror #10

00008568 <btbb_print_afh_map@@Base>:
    8568:	mov	ip, r0
    856c:	push	{r4, r5, r6, lr}
    8570:	sub	sp, sp, #32
    8574:	ldrb	r4, [ip, #21]
    8578:	ldrb	lr, [ip, #20]
    857c:	ldrb	r3, [ip, #14]
    8580:	ldrb	r2, [ip, #13]
    8584:	ldrb	r1, [ip, #12]
    8588:	ldrb	r6, [ip, #19]
    858c:	ldrb	r5, [ip, #18]
    8590:	str	r4, [sp, #24]
    8594:	ldrb	r4, [ip, #17]
    8598:	str	lr, [sp, #20]
    859c:	ldrb	lr, [ip, #16]
    85a0:	ldrb	ip, [ip, #15]
    85a4:	ldr	r0, [pc, #28]	; 85c8 <btbb_print_afh_map@@Base+0x60>
    85a8:	str	r6, [sp, #16]
    85ac:	str	r5, [sp, #12]
    85b0:	str	r4, [sp, #8]
    85b4:	stm	sp, {ip, lr}
    85b8:	add	r0, pc, r0
    85bc:	bl	2118 <printf@plt>
    85c0:	add	sp, sp, #32
    85c4:	pop	{r4, r5, r6, pc}
    85c8:	andeq	ip, r0, r0, lsl r5

000085cc <get_piconet@@Base>:
    85cc:	ldr	r3, [pc, #1176]	; 8a6c <get_piconet@@Base+0x4a0>
    85d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    85d4:	add	r3, pc, r3
    85d8:	sub	sp, sp, #28
    85dc:	str	r0, [sp, #20]
    85e0:	ldr	r0, [r3, #8]
    85e4:	cmp	r0, #0
    85e8:	beq	8704 <get_piconet@@Base+0x138>
    85ec:	ldrb	lr, [sp, #20]
    85f0:	ldrb	ip, [sp, #23]
    85f4:	ldrb	r1, [sp, #22]
    85f8:	ldr	r3, [pc, #1136]	; 8a70 <get_piconet@@Base+0x4a4>
    85fc:	ldrb	r2, [sp, #21]
    8600:	add	r3, lr, r3
    8604:	add	r3, r3, ip, lsl #24
    8608:	add	r3, r3, r1, lsl #16
    860c:	ldr	r1, [pc, #1120]	; 8a74 <get_piconet@@Base+0x4a8>
    8610:	add	r3, r3, r2, lsl #8
    8614:	ldr	r2, [pc, #1116]	; 8a78 <get_piconet@@Base+0x4ac>
    8618:	eor	r1, r1, r3
    861c:	ldr	r3, [pc, #1112]	; 8a7c <get_piconet@@Base+0x4b0>
    8620:	sub	r2, r2, r1
    8624:	eor	r2, r2, r1, lsl #8
    8628:	sub	r3, r3, r1
    862c:	sub	r3, r3, r2
    8630:	eor	r3, r3, r2, lsr #13
    8634:	sub	r1, r1, r2
    8638:	sub	r1, r1, r3
    863c:	eor	r1, r1, r3, lsr #12
    8640:	sub	r2, r2, r3
    8644:	sub	r2, r2, r1
    8648:	eor	r2, r2, r1, lsl #16
    864c:	sub	r3, r3, r1
    8650:	sub	r3, r3, r2
    8654:	eor	r3, r3, r2, lsr #5
    8658:	sub	r1, r1, r2
    865c:	ldr	r0, [r0, #8]
    8660:	sub	r1, r1, r3
    8664:	eor	r1, r1, r3, lsr #3
    8668:	sub	r2, r2, r3
    866c:	sub	r2, r2, r1
    8670:	eor	r2, r2, r1, lsl #10
    8674:	sub	r3, r3, r1
    8678:	ldr	r1, [r0, #4]
    867c:	sub	r3, r3, r2
    8680:	eor	r3, r3, r2, lsr #15
    8684:	sub	r2, r1, #1
    8688:	and	r3, r3, r2
    868c:	ldr	r2, [r0]
    8690:	add	r3, r3, r3, lsl #1
    8694:	ldr	r3, [r2, r3, lsl #2]
    8698:	cmp	r3, #0
    869c:	beq	8704 <get_piconet@@Base+0x138>
    86a0:	ldr	r5, [r0, #20]
    86a4:	rsb	r5, r5, #0
    86a8:	adds	r4, r3, r5
    86ac:	beq	8704 <get_piconet@@Base+0x138>
    86b0:	add	r7, sp, #20
    86b4:	mov	r6, #4
    86b8:	b	86d0 <get_piconet@@Base+0x104>
    86bc:	ldr	r3, [r4, #24]
    86c0:	cmp	r3, #0
    86c4:	beq	8704 <get_piconet@@Base+0x138>
    86c8:	adds	r4, r3, r5
    86cc:	beq	8704 <get_piconet@@Base+0x138>
    86d0:	ldr	r3, [r4, #32]
    86d4:	cmp	r3, #4
    86d8:	bne	86bc <get_piconet@@Base+0xf0>
    86dc:	mov	r2, r6
    86e0:	mov	r1, r7
    86e4:	ldr	r0, [r4, #28]
    86e8:	bl	21cc <memcmp@plt>
    86ec:	cmp	r0, #0
    86f0:	bne	86bc <get_piconet@@Base+0xf0>
    86f4:	ldr	fp, [r4, #4]
    86f8:	mov	r0, fp
    86fc:	add	sp, sp, #28
    8700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8704:	bl	20dc <btbb_piconet_new@plt>
    8708:	ldr	r4, [sp, #20]
    870c:	mov	r1, r4
    8710:	mov	fp, r0
    8714:	bl	24fc <btbb_init_piconet@plt>
    8718:	mov	r0, #40	; 0x28
    871c:	bl	22e0 <malloc@plt>
    8720:	ldr	r3, [pc, #856]	; 8a80 <get_piconet@@Base+0x4b4>
    8724:	mov	r1, #0
    8728:	add	r3, pc, r3
    872c:	mov	r2, #4
    8730:	ldr	ip, [r3, #8]
    8734:	cmp	ip, r1
    8738:	mov	r9, r0
    873c:	str	r4, [r0]
    8740:	str	fp, [r0, #4]
    8744:	str	r0, [r9, #28]
    8748:	str	r1, [r0, #16]
    874c:	str	r2, [r0, #32]
    8750:	beq	89e4 <get_piconet@@Base+0x418>
    8754:	ldr	r3, [ip, #8]
    8758:	add	r4, r9, #8
    875c:	ldr	r1, [r3, #16]
    8760:	ldr	r2, [r3, #20]
    8764:	sub	r2, r1, r2
    8768:	str	r9, [r1, #8]
    876c:	str	r2, [r9, #12]
    8770:	str	r4, [r3, #16]
    8774:	ldr	r1, [r3, #12]
    8778:	ldr	r2, [pc, #752]	; 8a70 <get_piconet@@Base+0x4a4>
    877c:	add	r1, r1, #1
    8780:	str	r1, [r3, #12]
    8784:	ldrb	r5, [r9]
    8788:	ldrb	r1, [r9, #3]
    878c:	ldrb	lr, [r9, #2]
    8790:	ldrb	r0, [r9, #1]
    8794:	add	r2, r5, r2
    8798:	add	r1, r2, r1, lsl #24
    879c:	add	r1, r1, lr, lsl #16
    87a0:	ldr	r2, [pc, #716]	; 8a74 <get_piconet@@Base+0x4a8>
    87a4:	add	r1, r1, r0, lsl #8
    87a8:	ldr	lr, [pc, #712]	; 8a78 <get_piconet@@Base+0x4ac>
    87ac:	eor	r2, r2, r1
    87b0:	ldr	r1, [pc, #708]	; 8a7c <get_piconet@@Base+0x4b0>
    87b4:	sub	lr, lr, r2
    87b8:	eor	lr, lr, r2, lsl #8
    87bc:	sub	r1, r1, r2
    87c0:	sub	r1, r1, lr
    87c4:	eor	r0, r1, lr, lsr #13
    87c8:	sub	r1, r2, lr
    87cc:	sub	r1, r1, r0
    87d0:	eor	r1, r1, r0, lsr #12
    87d4:	sub	r2, lr, r0
    87d8:	sub	r2, r2, r1
    87dc:	eor	lr, r2, r1, lsl #16
    87e0:	sub	r2, r0, r1
    87e4:	sub	r2, r2, lr
    87e8:	eor	r2, r2, lr, lsr #5
    87ec:	sub	r1, r1, lr
    87f0:	str	r3, [r9, #8]
    87f4:	sub	r1, r1, r2
    87f8:	ldr	ip, [ip, #8]
    87fc:	eor	r1, r1, r2, lsr #3
    8800:	sub	r0, lr, r2
    8804:	sub	r0, r0, r1
    8808:	eor	r0, r0, r1, lsl #10
    880c:	sub	r1, r2, r1
    8810:	ldr	r2, [ip, #4]
    8814:	sub	r1, r1, r0
    8818:	eor	r1, r1, r0, lsr #15
    881c:	sub	r2, r2, #1
    8820:	and	r2, r2, r1
    8824:	ldr	ip, [ip]
    8828:	add	r2, r2, r2, lsl #1
    882c:	mov	r6, #0
    8830:	lsl	r2, r2, #2
    8834:	add	lr, ip, r2
    8838:	ldr	r5, [ip, r2]
    883c:	ldr	r0, [lr, #4]
    8840:	str	r1, [r9, #36]	; 0x24
    8844:	ldr	r1, [lr, #8]
    8848:	cmp	r5, r6
    884c:	add	r0, r0, #1
    8850:	str	r0, [lr, #4]
    8854:	str	r5, [r9, #24]
    8858:	str	r6, [r9, #20]
    885c:	strne	r4, [r5, #12]
    8860:	str	r4, [ip, r2]
    8864:	add	r2, r1, #1
    8868:	add	r2, r2, r2, lsl #2
    886c:	cmp	r0, r2, lsl #1
    8870:	bcc	86f8 <get_piconet@@Base+0x12c>
    8874:	ldr	r2, [r3, #36]	; 0x24
    8878:	cmp	r2, #1
    887c:	beq	86f8 <get_piconet@@Base+0x12c>
    8880:	ldr	r0, [r3, #4]
    8884:	mov	r1, #1
    8888:	str	r3, [sp]
    888c:	add	r0, r0, r0, lsl r1
    8890:	lsl	r0, r0, #3
    8894:	bl	20c4 <calloc@plt>
    8898:	subs	r7, r0, #0
    889c:	beq	8a64 <get_piconet@@Base+0x498>
    88a0:	ldr	r3, [sp]
    88a4:	ldmib	r3, {r0, ip, lr}
    88a8:	lsl	r1, r0, #1
    88ac:	sub	r2, r1, #1
    88b0:	tst	lr, r2
    88b4:	add	ip, ip, #1
    88b8:	movne	sl, #1
    88bc:	moveq	sl, #0
    88c0:	add	sl, sl, lr, lsr ip
    88c4:	cmp	r0, #0
    88c8:	mov	ip, #0
    88cc:	str	sl, [r3, #24]
    88d0:	str	ip, [r3, #28]
    88d4:	beq	8a54 <get_piconet@@Base+0x488>
    88d8:	add	r1, r1, r0
    88dc:	str	r9, [sp, #12]
    88e0:	ldr	r0, [r3]
    88e4:	str	fp, [sp, #16]
    88e8:	mov	r9, r2
    88ec:	mov	fp, r3
    88f0:	lsl	r1, r1, #2
    88f4:	str	ip, [sp]
    88f8:	str	r0, [sp, #4]
    88fc:	str	r1, [sp, #8]
    8900:	ldm	sp, {r2, r3}
    8904:	ldr	r5, [r3, r2]
    8908:	cmp	r5, #0
    890c:	beq	8974 <get_piconet@@Base+0x3a8>
    8910:	ldr	r4, [r5, #28]
    8914:	ldr	r6, [r5, #16]
    8918:	and	r4, r4, r9
    891c:	add	r4, r4, r4, lsl #1
    8920:	add	r8, r7, r4, lsl #2
    8924:	ldr	r0, [r8, #4]
    8928:	add	r0, r0, #1
    892c:	cmp	sl, r0
    8930:	str	r0, [r8, #4]
    8934:	bcs	8950 <get_piconet@@Base+0x384>
    8938:	ldr	r3, [fp, #28]
    893c:	mov	r1, sl
    8940:	add	r3, r3, #1
    8944:	str	r3, [fp, #28]
    8948:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
    894c:	str	r0, [r8, #8]
    8950:	ldr	r3, [r7, r4, lsl #2]
    8954:	mov	r2, #0
    8958:	cmp	r3, r2
    895c:	str	r2, [r5, #12]
    8960:	str	r3, [r5, #16]
    8964:	strne	r5, [r3, #12]
    8968:	str	r5, [r7, r4, lsl #2]
    896c:	subs	r5, r6, #0
    8970:	bne	8910 <get_piconet@@Base+0x344>
    8974:	ldr	r3, [sp]
    8978:	ldr	r2, [sp, #8]
    897c:	add	r3, r3, #12
    8980:	cmp	r2, r3
    8984:	str	r3, [sp]
    8988:	bne	8900 <get_piconet@@Base+0x334>
    898c:	ldr	r9, [sp, #12]
    8990:	ldr	fp, [sp, #16]
    8994:	ldr	r0, [sp, #4]
    8998:	bl	2160 <free@plt>
    899c:	ldr	r3, [r9, #8]
    89a0:	ldmib	r3, {r1, r2, ip}
    89a4:	ldr	r0, [r3, #28]
    89a8:	str	r7, [r3]
    89ac:	add	r2, r2, #1
    89b0:	lsl	r1, r1, #1
    89b4:	cmp	r0, ip, lsr #1
    89b8:	stmib	r3, {r1, r2}
    89bc:	movls	r2, #0
    89c0:	strls	r2, [r3, #32]
    89c4:	bls	86f8 <get_piconet@@Base+0x12c>
    89c8:	ldr	r2, [r3, #32]
    89cc:	add	r2, r2, #1
    89d0:	cmp	r2, #1
    89d4:	str	r2, [r3, #32]
    89d8:	movhi	r2, #1
    89dc:	strhi	r2, [r3, #36]	; 0x24
    89e0:	b	86f8 <get_piconet@@Base+0x12c>
    89e4:	mov	r1, #1
    89e8:	mov	r0, #44	; 0x2c
    89ec:	str	ip, [r9, #12]
    89f0:	str	r9, [r3, #8]
    89f4:	bl	20c4 <calloc@plt>
    89f8:	cmp	r0, #0
    89fc:	mov	r5, r0
    8a00:	str	r0, [r9, #8]
    8a04:	beq	8a64 <get_piconet@@Base+0x498>
    8a08:	mov	r0, #32
    8a0c:	mov	r2, #5
    8a10:	mov	r3, #8
    8a14:	add	r4, r9, #8
    8a18:	str	r0, [r5, #4]
    8a1c:	mov	r1, #1
    8a20:	str	r4, [r5, #16]
    8a24:	mov	r0, #384	; 0x180
    8a28:	str	r2, [r5, #8]
    8a2c:	str	r3, [r5, #20]
    8a30:	bl	20c4 <calloc@plt>
    8a34:	cmp	r0, #0
    8a38:	str	r0, [r5]
    8a3c:	beq	8a64 <get_piconet@@Base+0x498>
    8a40:	ldr	r2, [pc, #60]	; 8a84 <get_piconet@@Base+0x4b8>
    8a44:	mov	r3, r5
    8a48:	str	r2, [r5, #40]	; 0x28
    8a4c:	mov	ip, r9
    8a50:	b	8774 <get_piconet@@Base+0x1a8>
    8a54:	ldr	r3, [r3]
    8a58:	str	r3, [sp, #4]
    8a5c:	mov	r0, r3
    8a60:	b	8998 <get_piconet@@Base+0x3cc>
    8a64:	mvn	r0, #0
    8a68:	bl	2334 <exit@plt>
    8a6c:	ldrdeq	r2, [r2], -r8
    8a70:	tsteq	r2, sp, lsl #2
    8a74:	andeq	pc, r7, sp, ror #14
    8a78:	svcls	0x0049bac6
    8a7c:	mcr2	14, 7, fp, cr13, cr3, {7}
    8a80:	andeq	r2, r2, r4, lsl #21
    8a84:	andsge	r1, r1, r1, ror #31

00008a88 <btbb_next_survey_result@@Base>:
    8a88:	ldr	r2, [pc, #44]	; 8abc <btbb_next_survey_result@@Base+0x34>
    8a8c:	push	{r4, lr}
    8a90:	add	r2, pc, r2
    8a94:	ldr	r4, [r2, #8]
    8a98:	cmp	r4, #0
    8a9c:	beq	8ab4 <btbb_next_survey_result@@Base+0x2c>
    8aa0:	ldr	r1, [r4, #16]
    8aa4:	mov	r0, r4
    8aa8:	str	r1, [r2, #8]
    8aac:	ldr	r4, [r4, #4]
    8ab0:	bl	2160 <free@plt>
    8ab4:	mov	r0, r4
    8ab8:	pop	{r4, pc}
    8abc:	andeq	r2, r2, ip, lsl r7

00008ac0 <btbb_process_packet@@Base>:
    8ac0:	ldr	r3, [pc, #372]	; 8c3c <btbb_process_packet@@Base+0x17c>
    8ac4:	push	{r4, r5, r6, r7, r8, lr}
    8ac8:	add	r3, pc, r3
    8acc:	mov	r5, r0
    8ad0:	ldr	r7, [r3]
    8ad4:	cmp	r7, #0
    8ad8:	bne	8b94 <btbb_process_packet@@Base+0xd4>
    8adc:	cmp	r1, #0
    8ae0:	mov	r4, r1
    8ae4:	beq	8b08 <btbb_process_packet@@Base+0x48>
    8ae8:	ldrb	r1, [r0, #8]
    8aec:	mov	r0, r4
    8af0:	bl	2250 <btbb_piconet_set_channel_seen@plt>
    8af4:	mov	r1, #3
    8af8:	mov	r0, r4
    8afc:	bl	2208 <btbb_piconet_get_flag@plt>
    8b00:	cmp	r0, #0
    8b04:	bne	8b14 <btbb_process_packet@@Base+0x54>
    8b08:	mov	r6, #0
    8b0c:	mov	r0, r6
    8b10:	pop	{r4, r5, r6, r7, r8, pc}
    8b14:	mov	r0, r5
    8b18:	bl	21fc <btbb_header_present@plt>
    8b1c:	cmp	r0, #0
    8b20:	beq	8b08 <btbb_process_packet@@Base+0x48>
    8b24:	mov	r1, #14
    8b28:	mov	r0, r4
    8b2c:	bl	2208 <btbb_piconet_get_flag@plt>
    8b30:	subs	r6, r0, #0
    8b34:	mov	r0, r4
    8b38:	bne	8bdc <btbb_process_packet@@Base+0x11c>
    8b3c:	bl	21c0 <btbb_piconet_get_uap@plt>
    8b40:	cmp	r0, #0
    8b44:	beq	8bcc <btbb_process_packet@@Base+0x10c>
    8b48:	mov	r0, r5
    8b4c:	mov	r1, r4
    8b50:	bl	22ec <try_hop@plt>
    8b54:	mov	r1, #4
    8b58:	mov	r0, r4
    8b5c:	bl	2208 <btbb_piconet_get_flag@plt>
    8b60:	cmp	r0, #0
    8b64:	beq	8b08 <btbb_process_packet@@Base+0x48>
    8b68:	mov	r1, #5
    8b6c:	mov	r0, r4
    8b70:	bl	2208 <btbb_piconet_get_flag@plt>
    8b74:	cmp	r0, #0
    8b78:	beq	8b08 <btbb_process_packet@@Base+0x48>
    8b7c:	mov	r0, r4
    8b80:	mov	r2, #1
    8b84:	mov	r1, #14
    8b88:	bl	222c <btbb_piconet_set_flag@plt>
    8b8c:	mvn	r6, #0
    8b90:	b	8b0c <btbb_process_packet@@Base+0x4c>
    8b94:	bl	2418 <btbb_packet_get_lap@plt>
    8b98:	bl	2448 <get_piconet@plt>
    8b9c:	ldrb	r1, [r5, #8]
    8ba0:	mov	r4, r0
    8ba4:	bl	2250 <btbb_piconet_set_channel_seen@plt>
    8ba8:	mov	r0, r5
    8bac:	bl	21fc <btbb_header_present@plt>
    8bb0:	cmp	r0, #0
    8bb4:	beq	8b08 <btbb_process_packet@@Base+0x48>
    8bb8:	mov	r1, #2
    8bbc:	mov	r0, r4
    8bc0:	bl	2208 <btbb_piconet_get_flag@plt>
    8bc4:	subs	r6, r0, #0
    8bc8:	bne	8b08 <btbb_process_packet@@Base+0x48>
    8bcc:	mov	r1, r4
    8bd0:	mov	r0, r5
    8bd4:	bl	2190 <btbb_uap_from_header@plt>
    8bd8:	b	8b0c <btbb_process_packet@@Base+0x4c>
    8bdc:	bl	21c0 <btbb_piconet_get_uap@plt>
    8be0:	mov	r1, r0
    8be4:	mov	r0, r5
    8be8:	bl	2268 <btbb_packet_set_uap@plt>
    8bec:	mov	r2, #1
    8bf0:	mov	r1, #4
    8bf4:	mov	r0, r5
    8bf8:	bl	2148 <btbb_packet_set_flag@plt>
    8bfc:	mov	r2, #1
    8c00:	mov	r1, #5
    8c04:	mov	r0, r5
    8c08:	bl	2148 <btbb_packet_set_flag@plt>
    8c0c:	mov	r0, r5
    8c10:	bl	22a4 <btbb_decode@plt>
    8c14:	subs	r6, r0, #0
    8c18:	beq	8c2c <btbb_process_packet@@Base+0x16c>
    8c1c:	mov	r0, r5
    8c20:	bl	24cc <btbb_print_packet@plt>
    8c24:	mov	r6, r7
    8c28:	b	8b0c <btbb_process_packet@@Base+0x4c>
    8c2c:	ldr	r0, [pc, #12]	; 8c40 <btbb_process_packet@@Base+0x180>
    8c30:	add	r0, pc, r0
    8c34:	bl	22d4 <puts@plt>
    8c38:	b	8b0c <btbb_process_packet@@Base+0x4c>
    8c3c:	andeq	r2, r2, r4, ror #13
    8c40:	ldrdeq	fp, [r0], -r0
    8c44:	andeq	r0, r0, r0
    8c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c4c:	sub	sp, sp, #580	; 0x244
    8c50:	ldr	r5, [pc, #1000]	; 9040 <btbb_process_packet@@Base+0x580>
    8c54:	mov	r4, r0
    8c58:	add	r5, pc, r5
    8c5c:	mov	r1, r5
    8c60:	mov	r2, #256	; 0x100
    8c64:	add	r0, sp, #64	; 0x40
    8c68:	bl	2184 <memcpy@plt>
    8c6c:	add	r1, r5, #256	; 0x100
    8c70:	mov	r2, #256	; 0x100
    8c74:	add	r0, sp, #320	; 0x140
    8c78:	bl	2184 <memcpy@plt>
    8c7c:	uxtb	r6, r4
    8c80:	add	r3, sp, #576	; 0x240
    8c84:	add	r3, r3, r6
    8c88:	tst	r4, #1
    8c8c:	add	r2, sp, #576	; 0x240
    8c90:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    8c94:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    8c98:	lsr	r3, r4, #8
    8c9c:	tst	r4, #128	; 0x80
    8ca0:	uxtb	ip, r3
    8ca4:	add	r2, r2, ip
    8ca8:	ldr	lr, [pc, #916]	; 9044 <btbb_process_packet@@Base+0x584>
    8cac:	ldrbne	r7, [r2, #-256]	; 0xffffff00
    8cb0:	ldrbeq	r7, [r2, #-512]	; 0xfffffe00
    8cb4:	lsr	r2, r4, #16
    8cb8:	tst	r3, #128	; 0x80
    8cbc:	uxtb	sl, r2
    8cc0:	add	r3, sp, #576	; 0x240
    8cc4:	add	r3, r3, sl
    8cc8:	add	lr, pc, lr
    8ccc:	add	lr, lr, #512	; 0x200
    8cd0:	mov	r5, sp
    8cd4:	add	r0, r0, r7
    8cd8:	ldrbne	r7, [r3, #-256]	; 0xffffff00
    8cdc:	ldrbeq	r7, [r3, #-512]	; 0xfffffe00
    8ce0:	lsr	r3, r4, #24
    8ce4:	tst	r2, #128	; 0x80
    8ce8:	add	r2, sp, #576	; 0x240
    8cec:	uxtb	r8, r3
    8cf0:	add	r3, r2, r3
    8cf4:	add	r7, r7, r0
    8cf8:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    8cfc:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    8d00:	add	r3, sp, #576	; 0x240
    8d04:	add	r9, r3, r8, lsr #2
    8d08:	add	r0, r0, r7
    8d0c:	cmp	r0, #24
    8d10:	subgt	r7, r0, #24
    8d14:	ldm	lr!, {r0, r1, r2, r3}
    8d18:	movle	r7, #0
    8d1c:	cmp	r6, ip
    8d20:	cmpeq	r6, sl
    8d24:	moveq	ip, #1
    8d28:	stmia	r5!, {r0, r1, r2, r3}
    8d2c:	movne	ip, #0
    8d30:	ldm	lr!, {r0, r1, r2, r3}
    8d34:	cmp	r6, r8
    8d38:	movne	r6, #0
    8d3c:	andeq	r6, ip, #1
    8d40:	ldr	ip, [pc, #768]	; 9048 <btbb_process_packet@@Base+0x588>
    8d44:	stmia	r5!, {r0, r1, r2, r3}
    8d48:	cmp	r4, ip
    8d4c:	ldm	lr!, {r0, r1, r2, r3}
    8d50:	moveq	r8, #1
    8d54:	movne	r8, #0
    8d58:	eor	ip, ip, r4
    8d5c:	stmia	r5!, {r0, r1, r2, r3}
    8d60:	ldm	lr, {r0, r1, r2, r3}
    8d64:	stm	r5, {r0, r1, r2, r3}
    8d68:	ldrb	r0, [r9, #-576]	; 0xfffffdc0
    8d6c:	rsb	r0, r0, #1
    8d70:	add	r0, r0, r7
    8d74:	add	r0, r6, r0
    8d78:	add	r3, r8, r0
    8d7c:	mov	r0, #0
    8d80:	beq	8da4 <btbb_process_packet@@Base+0x2e4>
    8d84:	add	r0, r0, #1
    8d88:	sub	r2, ip, #1
    8d8c:	ands	ip, ip, r2
    8d90:	uxtb	r0, r0
    8d94:	bne	8d84 <btbb_process_packet@@Base+0x2c4>
    8d98:	sub	r0, r0, #1
    8d9c:	clz	r0, r0
    8da0:	lsr	r0, r0, #5
    8da4:	ldr	ip, [pc, #672]	; 904c <btbb_process_packet@@Base+0x58c>
    8da8:	ldr	r1, [pc, #672]	; 9050 <btbb_process_packet@@Base+0x590>
    8dac:	ldr	r7, [pc, #672]	; 9054 <btbb_process_packet@@Base+0x594>
    8db0:	ldr	r8, [pc, #672]	; 9058 <btbb_process_packet@@Base+0x598>
    8db4:	ldr	fp, [pc, #672]	; 905c <btbb_process_packet@@Base+0x59c>
    8db8:	ldr	sl, [pc, #672]	; 9060 <btbb_process_packet@@Base+0x5a0>
    8dbc:	ldr	r9, [pc, #672]	; 9064 <btbb_process_packet@@Base+0x5a4>
    8dc0:	ldr	lr, [pc, #672]	; 9068 <btbb_process_packet@@Base+0x5a8>
    8dc4:	ldr	r5, [pc, #672]	; 906c <btbb_process_packet@@Base+0x5ac>
    8dc8:	add	r0, r3, r0
    8dcc:	mov	r2, #0
    8dd0:	and	r3, ip, r4, lsr r2
    8dd4:	cmp	r3, r1
    8dd8:	bhi	8e34 <btbb_process_packet@@Base+0x374>
    8ddc:	cmp	r3, lr
    8de0:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8de4:	cmp	r3, r5
    8de8:	bhi	8ea8 <btbb_process_packet@@Base+0x3e8>
    8dec:	ldr	r6, [pc, #636]	; 9070 <btbb_process_packet@@Base+0x5b0>
    8df0:	cmp	r3, r6
    8df4:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8df8:	ldr	r6, [pc, #628]	; 9074 <btbb_process_packet@@Base+0x5b4>
    8dfc:	cmp	r3, r6
    8e00:	bls	8f50 <btbb_process_packet@@Base+0x490>
    8e04:	cmp	r3, #512	; 0x200
    8e08:	bcs	8f94 <btbb_process_packet@@Base+0x4d4>
    8e0c:	cmp	r3, #508	; 0x1fc
    8e10:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8e14:	cmp	r3, #384	; 0x180
    8e18:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8e1c:	add	r0, r0, #1
    8e20:	add	r2, r2, #4
    8e24:	cmp	r2, #24
    8e28:	bne	8dd0 <btbb_process_packet@@Base+0x310>
    8e2c:	add	sp, sp, #580	; 0x244
    8e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e34:	cmp	r3, #2944	; 0xb80
    8e38:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8e3c:	bhi	8e6c <btbb_process_packet@@Base+0x3ac>
    8e40:	cmp	r3, #2432	; 0x980
    8e44:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8e48:	bhi	8f28 <btbb_process_packet@@Base+0x468>
    8e4c:	cmp	r3, r9
    8e50:	bhi	900c <btbb_process_packet@@Base+0x54c>
    8e54:	ldr	r6, [pc, #540]	; 9078 <btbb_process_packet@@Base+0x5b8>
    8e58:	cmp	r3, r6
    8e5c:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8e60:	cmp	r3, #1920	; 0x780
    8e64:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8e68:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8e6c:	cmp	r3, r7
    8e70:	bhi	8edc <btbb_process_packet@@Base+0x41c>
    8e74:	cmp	r3, r8
    8e78:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8e7c:	cmp	r3, #3200	; 0xc80
    8e80:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8e84:	bls	902c <btbb_process_packet@@Base+0x56c>
    8e88:	cmp	r3, fp
    8e8c:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    8e90:	ldr	r6, [pc, #484]	; 907c <btbb_process_packet@@Base+0x5bc>
    8e94:	cmp	r3, r6
    8e98:	bls	8e1c <btbb_process_packet@@Base+0x35c>
    8e9c:	cmp	r3, #3456	; 0xd80
    8ea0:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8ea4:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8ea8:	ldr	r6, [pc, #464]	; 9080 <btbb_process_packet@@Base+0x5c0>
    8eac:	cmp	r3, r6
    8eb0:	bhi	8f08 <btbb_process_packet@@Base+0x448>
    8eb4:	sub	r6, r6, #3
    8eb8:	cmp	r3, r6
    8ebc:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8ec0:	cmp	r3, #1024	; 0x400
    8ec4:	bhi	8f70 <btbb_process_packet@@Base+0x4b0>
    8ec8:	cmp	r3, #1016	; 0x3f8
    8ecc:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8ed0:	cmp	r3, #896	; 0x380
    8ed4:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8ed8:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8edc:	cmp	r3, #3968	; 0xf80
    8ee0:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8ee4:	bhi	8fd0 <btbb_process_packet@@Base+0x510>
    8ee8:	cmp	r3, #3712	; 0xe80
    8eec:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8ef0:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    8ef4:	sub	r3, r3, #3824	; 0xef0
    8ef8:	sub	r3, r3, #14
    8efc:	cmp	r3, #3
    8f00:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    8f04:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8f08:	cmp	r3, #1536	; 0x600
    8f0c:	bcs	8fb0 <btbb_process_packet@@Base+0x4f0>
    8f10:	ldr	r6, [pc, #364]	; 9084 <btbb_process_packet@@Base+0x5c4>
    8f14:	cmp	r3, r6
    8f18:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8f1c:	cmp	r3, #1408	; 0x580
    8f20:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8f24:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8f28:	cmp	r3, sl
    8f2c:	bhi	8fec <btbb_process_packet@@Base+0x52c>
    8f30:	ldr	r6, [pc, #336]	; 9088 <btbb_process_packet@@Base+0x5c8>
    8f34:	cmp	r3, r6
    8f38:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8f3c:	sub	r3, r3, #2544	; 0x9f0
    8f40:	sub	r3, r3, #12
    8f44:	cmp	r3, #3
    8f48:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    8f4c:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8f50:	cmp	r3, #254	; 0xfe
    8f54:	bcs	8e1c <btbb_process_packet@@Base+0x35c>
    8f58:	cmp	r3, #31
    8f5c:	bls	8e1c <btbb_process_packet@@Base+0x35c>
    8f60:	sub	r3, r3, #127	; 0x7f
    8f64:	cmp	r3, #1
    8f68:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    8f6c:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8f70:	ldr	r6, [pc, #276]	; 908c <btbb_process_packet@@Base+0x5cc>
    8f74:	cmp	r3, r6
    8f78:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    8f7c:	add	r6, r6, #5
    8f80:	cmp	r3, r6
    8f84:	bls	8e1c <btbb_process_packet@@Base+0x35c>
    8f88:	cmp	r3, #1152	; 0x480
    8f8c:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8f90:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8f94:	cmp	r3, #512	; 0x200
    8f98:	bls	8e20 <btbb_process_packet@@Base+0x360>
    8f9c:	cmp	r3, #516	; 0x204
    8fa0:	bcc	8e1c <btbb_process_packet@@Base+0x35c>
    8fa4:	cmp	r3, #640	; 0x280
    8fa8:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8fac:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8fb0:	cmp	r3, #1536	; 0x600
    8fb4:	bls	8e20 <btbb_process_packet@@Base+0x360>
    8fb8:	ldr	r6, [pc, #208]	; 9090 <btbb_process_packet@@Base+0x5d0>
    8fbc:	cmp	r3, r6
    8fc0:	bls	8e1c <btbb_process_packet@@Base+0x35c>
    8fc4:	cmp	r3, #1664	; 0x680
    8fc8:	bne	8e20 <btbb_process_packet@@Base+0x360>
    8fcc:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8fd0:	cmp	r3, #4064	; 0xfe0
    8fd4:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8fd8:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    8fdc:	sub	r3, r3, #4080	; 0xff0
    8fe0:	cmp	r3, #15
    8fe4:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    8fe8:	b	8e1c <btbb_process_packet@@Base+0x35c>
    8fec:	cmp	r3, #2688	; 0xa80
    8ff0:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    8ff4:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    8ff8:	sub	r3, r3, #2800	; 0xaf0
    8ffc:	sub	r3, r3, #14
    9000:	cmp	r3, #3
    9004:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    9008:	b	8e1c <btbb_process_packet@@Base+0x35c>
    900c:	cmp	r3, #2176	; 0x880
    9010:	beq	8e1c <btbb_process_packet@@Base+0x35c>
    9014:	bcc	8e20 <btbb_process_packet@@Base+0x360>
    9018:	sub	r3, r3, #2288	; 0x8f0
    901c:	sub	r3, r3, #14
    9020:	cmp	r3, #3
    9024:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    9028:	b	8e1c <btbb_process_packet@@Base+0x35c>
    902c:	sub	r3, r3, #3056	; 0xbf0
    9030:	sub	r3, r3, #8
    9034:	cmp	r3, #15
    9038:	bhi	8e20 <btbb_process_packet@@Base+0x360>
    903c:	b	8e1c <btbb_process_packet@@Base+0x35c>
    9040:	andeq	fp, r0, r0, asr #29
    9044:	andeq	fp, r0, r0, asr lr
    9048:	mcrhi	14, 4, fp, cr9, cr6, {6}
    904c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    9050:	andeq	r0, r0, r1, lsl #14
    9054:	andeq	r0, r0, r3, lsl #28
    9058:	strdeq	r0, [r0], -ip
    905c:	strdeq	r0, [r0], -lr
    9060:	andeq	r0, r0, r3, lsl #20
    9064:	andeq	r0, r0, pc, lsl #16
    9068:	strdeq	r0, [r0], -lr
    906c:	andeq	r0, r0, r1, lsl #6
    9070:	strdeq	r0, [r0], -lr
    9074:	andeq	r0, r0, r1, lsl #2
    9078:	strdeq	r0, [r0], -r4
    907c:	andeq	r0, r0, r1, lsl #26
    9080:	andeq	r0, r0, r1, lsl #10
    9084:	strdeq	r0, [r0], -ip
    9088:	andeq	r0, r0, r1, lsl #20
    908c:	andeq	r0, r0, r2, lsl #8
    9090:	andeq	r0, r0, r3, lsl #12
    9094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9098:	vpush	{d8}
    909c:	subs	r8, r1, #0
    90a0:	sub	sp, sp, #52	; 0x34
    90a4:	ble	9468 <btbb_process_packet@@Base+0x9a8>
    90a8:	ldrb	r4, [r0]
    90ac:	mov	r7, r0
    90b0:	add	r6, r4, #1
    90b4:	cmp	r8, r6
    90b8:	blt	976c <btbb_process_packet@@Base+0xcac>
    90bc:	cmp	r4, #0
    90c0:	beq	9794 <btbb_process_packet@@Base+0xcd4>
    90c4:	ldr	r3, [pc, #996]	; 94b0 <btbb_process_packet@@Base+0x9f0>
    90c8:	ldr	r2, [pc, #996]	; 94b4 <btbb_process_packet@@Base+0x9f4>
    90cc:	add	r3, pc, r3
    90d0:	str	r3, [sp, #4]
    90d4:	ldr	r3, [pc, #988]	; 94b8 <btbb_process_packet@@Base+0x9f8>
    90d8:	add	r2, pc, r2
    90dc:	add	r3, pc, r3
    90e0:	str	r3, [sp, #28]
    90e4:	ldr	r3, [pc, #976]	; 94bc <btbb_process_packet@@Base+0x9fc>
    90e8:	mov	r5, #0
    90ec:	add	r3, pc, r3
    90f0:	str	r3, [sp, #20]
    90f4:	ldr	r3, [pc, #964]	; 94c0 <btbb_process_packet@@Base+0xa00>
    90f8:	vldr	d8, [pc, #936]	; 94a8 <btbb_process_packet@@Base+0x9e8>
    90fc:	add	r3, pc, r3
    9100:	str	r2, [sp, #24]
    9104:	mov	sl, #1
    9108:	str	r5, [sp]
    910c:	mov	r9, r3
    9110:	b	918c <btbb_process_packet@@Base+0x6cc>
    9114:	cmp	r5, #18
    9118:	beq	9474 <btbb_process_packet@@Base+0x9b4>
    911c:	bhi	9318 <btbb_process_packet@@Base+0x858>
    9120:	cmp	r5, #9
    9124:	beq	95d8 <btbb_process_packet@@Base+0xb18>
    9128:	cmp	r5, #10
    912c:	bne	9590 <btbb_process_packet@@Base+0xad0>
    9130:	ldr	r0, [pc, #908]	; 94c4 <btbb_process_packet@@Base+0xa04>
    9134:	add	r0, pc, r0
    9138:	bl	22d4 <puts@plt>
    913c:	ldr	r0, [pc, #900]	; 94c8 <btbb_process_packet@@Base+0xa08>
    9140:	add	r0, pc, r0
    9144:	bl	2118 <printf@plt>
    9148:	cmp	r4, #2
    914c:	beq	9918 <btbb_process_packet@@Base+0xe58>
    9150:	ldr	r0, [pc, #884]	; 94cc <btbb_process_packet@@Base+0xa0c>
    9154:	sub	r1, r4, #1
    9158:	add	r0, pc, r0
    915c:	bl	2118 <printf@plt>
    9160:	cmp	r8, r6
    9164:	ble	9468 <btbb_process_packet@@Base+0x9a8>
    9168:	ldrb	r4, [r7, r6]
    916c:	add	sl, r6, #1
    9170:	add	r3, r4, sl
    9174:	cmp	r8, r3
    9178:	blt	9770 <btbb_process_packet@@Base+0xcb0>
    917c:	cmp	r4, #0
    9180:	str	r6, [sp]
    9184:	beq	9794 <btbb_process_packet@@Base+0xcd4>
    9188:	mov	r6, r3
    918c:	ldrb	r5, [r7, sl]
    9190:	ldr	r0, [sp, #4]
    9194:	add	fp, r7, sl
    9198:	mov	r1, r5
    919c:	bl	2118 <printf@plt>
    91a0:	cmp	r5, #7
    91a4:	beq	9690 <btbb_process_packet@@Base+0xbd0>
    91a8:	bhi	9114 <btbb_process_packet@@Base+0x654>
    91ac:	cmp	r5, #2
    91b0:	beq	9634 <btbb_process_packet@@Base+0xb74>
    91b4:	bls	93b8 <btbb_process_packet@@Base+0x8f8>
    91b8:	cmp	r5, #3
    91bc:	beq	96b8 <btbb_process_packet@@Base+0xbf8>
    91c0:	cmp	r5, #6
    91c4:	bne	9590 <btbb_process_packet@@Base+0xad0>
    91c8:	ldr	r0, [pc, #768]	; 94d0 <btbb_process_packet@@Base+0xa10>
    91cc:	sub	r4, r4, #1
    91d0:	add	r0, pc, r0
    91d4:	bl	22d4 <puts@plt>
    91d8:	ands	r2, r4, #15
    91dc:	bne	96a8 <btbb_process_packet@@Base+0xbe8>
    91e0:	cmp	r4, #0
    91e4:	beq	9160 <btbb_process_packet@@Base+0x6a0>
    91e8:	ldr	r1, [sp]
    91ec:	mov	fp, r2
    91f0:	add	r3, r7, r1
    91f4:	add	r5, r1, #2
    91f8:	ldrb	r3, [r3, #2]
    91fc:	add	r5, r7, r5
    9200:	strb	r3, [sp, #47]	; 0x2f
    9204:	add	r3, sp, #36	; 0x24
    9208:	str	r3, [sp, #12]
    920c:	add	r3, sp, #47	; 0x2f
    9210:	str	r3, [sp, #16]
    9214:	add	fp, fp, #1
    9218:	cmp	fp, r4
    921c:	beq	9160 <btbb_process_packet@@Base+0x6a0>
    9220:	and	r3, fp, #15
    9224:	mvn	r2, r3
    9228:	ldrb	r1, [r5, #1]!
    922c:	cmp	r3, #15
    9230:	add	r2, r2, #16
    9234:	add	r3, sp, #32
    9238:	strb	r1, [r3, r2]
    923c:	bne	9214 <btbb_process_packet@@Base+0x754>
    9240:	add	sl, sp, #32
    9244:	ldr	r0, [sp, #20]
    9248:	bl	2118 <printf@plt>
    924c:	str	r4, [sp]
    9250:	mov	r4, sl
    9254:	ldr	sl, [sp, #12]
    9258:	ldrb	r1, [r4], #1
    925c:	mov	r0, r9
    9260:	bl	2118 <printf@plt>
    9264:	cmp	sl, r4
    9268:	bne	9258 <btbb_process_packet@@Base+0x798>
    926c:	mov	r0, #45	; 0x2d
    9270:	ldr	r4, [sp]
    9274:	bl	23f4 <putchar@plt>
    9278:	ldrb	r1, [sp, #36]	; 0x24
    927c:	mov	r0, r9
    9280:	bl	2118 <printf@plt>
    9284:	ldrb	r1, [sp, #37]	; 0x25
    9288:	mov	r0, r9
    928c:	bl	2118 <printf@plt>
    9290:	mov	r0, #45	; 0x2d
    9294:	bl	23f4 <putchar@plt>
    9298:	ldrb	r1, [sp, #38]	; 0x26
    929c:	mov	r0, r9
    92a0:	bl	2118 <printf@plt>
    92a4:	ldrb	r1, [sp, #39]	; 0x27
    92a8:	mov	r0, r9
    92ac:	bl	2118 <printf@plt>
    92b0:	add	sl, sp, #48	; 0x30
    92b4:	mov	r0, #45	; 0x2d
    92b8:	bl	23f4 <putchar@plt>
    92bc:	ldrb	r1, [sp, #40]	; 0x28
    92c0:	mov	r0, r9
    92c4:	bl	2118 <printf@plt>
    92c8:	ldrb	r1, [sl, #-7]!
    92cc:	mov	r0, r9
    92d0:	bl	2118 <printf@plt>
    92d4:	mov	r0, #45	; 0x2d
    92d8:	bl	23f4 <putchar@plt>
    92dc:	str	r4, [sp]
    92e0:	str	r5, [sp, #8]
    92e4:	mov	r4, sl
    92e8:	ldr	r5, [sp, #24]
    92ec:	ldr	sl, [sp, #16]
    92f0:	ldrb	r1, [r4, #1]!
    92f4:	mov	r0, r5
    92f8:	bl	2118 <printf@plt>
    92fc:	cmp	sl, r4
    9300:	bne	92f0 <btbb_process_packet@@Base+0x830>
    9304:	mov	r0, #10
    9308:	ldr	r4, [sp]
    930c:	ldr	r5, [sp, #8]
    9310:	bl	23f4 <putchar@plt>
    9314:	b	9214 <btbb_process_packet@@Base+0x754>
    9318:	cmp	r5, #22
    931c:	beq	96c8 <btbb_process_packet@@Base+0xc08>
    9320:	cmp	r5, #255	; 0xff
    9324:	bne	9590 <btbb_process_packet@@Base+0xad0>
    9328:	ldr	r5, [pc, #420]	; 94d4 <btbb_process_packet@@Base+0xa14>
    932c:	ldr	r0, [pc, #420]	; 94d8 <btbb_process_packet@@Base+0xa18>
    9330:	add	r5, pc, r5
    9334:	add	r0, pc, r0
    9338:	bl	22d4 <puts@plt>
    933c:	mov	r0, r5
    9340:	bl	2118 <printf@plt>
    9344:	cmp	r4, #2
    9348:	ble	9758 <btbb_process_packet@@Base+0xc98>
    934c:	ldrb	r0, [fp, #2]
    9350:	ldrb	r3, [fp, #1]
    9354:	orr	r0, r3, r0, lsl #8
    9358:	bl	2430 <bt_compidtostr@plt>
    935c:	mov	r1, r0
    9360:	ldr	r0, [pc, #372]	; 94dc <btbb_process_packet@@Base+0xa1c>
    9364:	add	r0, pc, r0
    9368:	bl	2118 <printf@plt>
    936c:	mov	r0, r5
    9370:	bl	2118 <printf@plt>
    9374:	ldr	r0, [pc, #356]	; 94e0 <btbb_process_packet@@Base+0xa20>
    9378:	add	r0, pc, r0
    937c:	bl	2118 <printf@plt>
    9380:	cmp	r4, #3
    9384:	beq	9458 <btbb_process_packet@@Base+0x998>
    9388:	ldr	r5, [pc, #340]	; 94e4 <btbb_process_packet@@Base+0xa24>
    938c:	add	r4, r4, sl
    9390:	add	sl, sl, #3
    9394:	add	r5, pc, r5
    9398:	add	r4, r7, r4
    939c:	add	sl, r7, sl
    93a0:	ldrb	r1, [sl], #1
    93a4:	mov	r0, r5
    93a8:	bl	2118 <printf@plt>
    93ac:	cmp	r4, sl
    93b0:	bne	93a0 <btbb_process_packet@@Base+0x8e0>
    93b4:	b	9458 <btbb_process_packet@@Base+0x998>
    93b8:	cmp	r5, #1
    93bc:	bne	9590 <btbb_process_packet@@Base+0xad0>
    93c0:	ldr	r0, [pc, #288]	; 94e8 <btbb_process_packet@@Base+0xa28>
    93c4:	ldr	r5, [pc, #288]	; 94ec <btbb_process_packet@@Base+0xa2c>
    93c8:	add	r0, pc, r0
    93cc:	bl	22d4 <puts@plt>
    93d0:	ldr	r0, [pc, #280]	; 94f0 <btbb_process_packet@@Base+0xa30>
    93d4:	add	sl, sl, #1
    93d8:	add	r0, pc, r0
    93dc:	bl	2118 <printf@plt>
    93e0:	add	r5, pc, r5
    93e4:	add	r4, r7, sl
    93e8:	mov	fp, #7
    93ec:	ldrb	r1, [r4]
    93f0:	mov	r0, r5
    93f4:	asr	r1, r1, fp
    93f8:	sub	fp, fp, #1
    93fc:	and	r1, r1, #1
    9400:	bl	2118 <printf@plt>
    9404:	cmn	fp, #1
    9408:	bne	93ec <btbb_process_packet@@Base+0x92c>
    940c:	mov	r0, #10
    9410:	bl	23f4 <putchar@plt>
    9414:	ldrb	r3, [r7, sl]
    9418:	tst	r3, #1
    941c:	bne	97ac <btbb_process_packet@@Base+0xcec>
    9420:	tst	r3, #2
    9424:	bne	97d0 <btbb_process_packet@@Base+0xd10>
    9428:	tst	r3, #4
    942c:	bne	97f4 <btbb_process_packet@@Base+0xd34>
    9430:	tst	r3, #8
    9434:	bne	9818 <btbb_process_packet@@Base+0xd58>
    9438:	tst	r3, #16
    943c:	bne	983c <btbb_process_packet@@Base+0xd7c>
    9440:	tst	r3, #32
    9444:	bne	9860 <btbb_process_packet@@Base+0xda0>
    9448:	tst	r3, #64	; 0x40
    944c:	bne	9884 <btbb_process_packet@@Base+0xdc4>
    9450:	lsrs	r3, r3, #7
    9454:	bne	98a8 <btbb_process_packet@@Base+0xde8>
    9458:	mov	r0, #10
    945c:	bl	23f4 <putchar@plt>
    9460:	cmp	r8, r6
    9464:	bgt	9168 <btbb_process_packet@@Base+0x6a8>
    9468:	add	sp, sp, #52	; 0x34
    946c:	vpop	{d8}
    9470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9474:	ldr	r0, [pc, #120]	; 94f4 <btbb_process_packet@@Base+0xa34>
    9478:	add	r0, pc, r0
    947c:	bl	22d4 <puts@plt>
    9480:	ldr	r0, [pc, #112]	; 94f8 <btbb_process_packet@@Base+0xa38>
    9484:	add	r0, pc, r0
    9488:	bl	2118 <printf@plt>
    948c:	cmp	r4, #5
    9490:	beq	98c4 <btbb_process_packet@@Base+0xe04>
    9494:	ldr	r0, [pc, #96]	; 94fc <btbb_process_packet@@Base+0xa3c>
    9498:	sub	r1, r4, #1
    949c:	add	r0, pc, r0
    94a0:	bl	2118 <printf@plt>
    94a4:	b	9160 <btbb_process_packet@@Base+0x6a0>
    94a8:	andeq	r0, r0, r0
    94ac:	svccc	0x00f40000
    94b0:	andeq	fp, r0, r8, ror #25
    94b4:	muleq	r0, r0, lr
    94b8:	muleq	r0, r4, lr
    94bc:	strdeq	fp, [r0], -r0
    94c0:	andeq	fp, r0, ip, ror #28
    94c4:	andeq	fp, r0, r0, lsl #29
    94c8:	muleq	r0, ip, ip
    94cc:	andeq	fp, r0, r8, ror lr
    94d0:	andeq	fp, r0, r0, asr sp
    94d4:	andeq	fp, r0, ip, lsr #21
    94d8:	andeq	fp, r0, r8, ror #26
    94dc:	andeq	fp, r0, r8, asr sp
    94e0:	andeq	fp, r0, r4, asr sp
    94e4:	andeq	fp, r0, ip, lsr #20
    94e8:	andeq	fp, r0, r0, lsl #20
    94ec:	strdeq	fp, [r0], -r4
    94f0:	andeq	fp, r0, r4, lsl #20
    94f4:	andeq	fp, r0, r8, ror fp
    94f8:	andeq	fp, r0, r8, asr r9
    94fc:	muleq	r0, r0, fp
    9500:	andeq	fp, r0, r0, asr #16
    9504:	andeq	fp, r0, r8, lsl #16
    9508:	andeq	fp, r0, r0, asr #19
    950c:	strdeq	fp, [r0], -r4
    9510:	muleq	r0, r0, r8
    9514:	andeq	fp, r0, r0, lsr #17
    9518:			; <UNDEFINED> instruction: 0x0000b8b4
    951c:	andeq	fp, r0, r4, lsr r8
    9520:	andeq	fp, r0, r0, lsl #19
    9524:	andeq	fp, r0, r4, lsl #14
    9528:	andeq	fp, r0, r0, ror #18
    952c:	andeq	fp, r0, r0, asr r9
    9530:	andeq	fp, r0, r0, lsr #13
    9534:	andeq	fp, r0, ip, lsr #18
    9538:	andeq	fp, r0, r8, lsl r9
    953c:	strdeq	fp, [r0], -r8
    9540:	andeq	fp, r0, r0, asr #11
    9544:	andeq	fp, r0, r8, lsr #12
    9548:	andeq	fp, r0, ip, lsr #12
    954c:	andeq	fp, r0, r4, lsl #12
    9550:	andeq	fp, r0, r8, lsr #12
    9554:	andeq	fp, r0, r0, ror #11
    9558:	andeq	fp, r0, r4, lsr #12
    955c:			; <UNDEFINED> instruction: 0x0000b5bc
    9560:	andeq	fp, r0, r8, lsl r6
    9564:	muleq	r0, r8, r5
    9568:	andeq	fp, r0, r4, lsr r6
    956c:	andeq	fp, r0, r4, ror r5
    9570:	andeq	fp, r0, ip, asr #12
    9574:	andeq	fp, r0, r0, asr r5
    9578:	andeq	fp, r0, r8, lsr #12
    957c:	andeq	fp, r0, ip, lsr #10
    9580:	andeq	fp, r0, r4, lsl #12
    9584:	andeq	fp, r0, r0, asr #14
    9588:	andeq	fp, r0, r4, lsr #14
    958c:	andeq	fp, r0, r8, lsr #13
    9590:	mov	r0, #10
    9594:	bl	23f4 <putchar@plt>
    9598:	ldr	r0, [pc, #-160]	; 9500 <btbb_process_packet@@Base+0xa40>
    959c:	add	r0, pc, r0
    95a0:	bl	2118 <printf@plt>
    95a4:	cmp	r4, #1
    95a8:	beq	9458 <btbb_process_packet@@Base+0x998>
    95ac:	add	r4, r4, sl
    95b0:	ldr	r5, [pc, #-180]	; 9504 <btbb_process_packet@@Base+0xa44>
    95b4:	sub	r4, r4, #1
    95b8:	add	r5, pc, r5
    95bc:	add	r4, r7, r4
    95c0:	ldrb	r1, [fp, #1]!
    95c4:	mov	r0, r5
    95c8:	bl	2118 <printf@plt>
    95cc:	cmp	fp, r4
    95d0:	bne	95c0 <btbb_process_packet@@Base+0xb00>
    95d4:	b	9458 <btbb_process_packet@@Base+0x998>
    95d8:	ldr	r0, [pc, #-216]	; 9508 <btbb_process_packet@@Base+0xa48>
    95dc:	add	r0, pc, r0
    95e0:	bl	22d4 <puts@plt>
    95e4:	ldr	r0, [pc, #-224]	; 950c <btbb_process_packet@@Base+0xa4c>
    95e8:	add	r0, pc, r0
    95ec:	bl	2118 <printf@plt>
    95f0:	cmp	r4, #1
    95f4:	beq	9458 <btbb_process_packet@@Base+0x998>
    95f8:	bl	2328 <__ctype_b_loc@plt>
    95fc:	add	r4, r4, sl
    9600:	sub	r4, r4, #1
    9604:	add	r4, r7, r4
    9608:	mov	r5, r0
    960c:	ldrb	r0, [fp, #1]!
    9610:	ldr	r2, [r5]
    9614:	lsl	r3, r0, #1
    9618:	ldrh	r3, [r2, r3]
    961c:	tst	r3, #16384	; 0x4000
    9620:	moveq	r0, #46	; 0x2e
    9624:	bl	23f4 <putchar@plt>
    9628:	cmp	r4, fp
    962c:	bne	960c <btbb_process_packet@@Base+0xb4c>
    9630:	b	9458 <btbb_process_packet@@Base+0x998>
    9634:	ldr	r0, [pc, #-300]	; 9510 <btbb_process_packet@@Base+0xa50>
    9638:	add	r0, pc, r0
    963c:	bl	22d4 <puts@plt>
    9640:	sub	r3, r4, #1
    9644:	tst	r3, #1
    9648:	bne	9160 <btbb_process_packet@@Base+0x6a0>
    964c:	cmp	r3, #0
    9650:	beq	9160 <btbb_process_packet@@Base+0x6a0>
    9654:	ldr	r2, [sp]
    9658:	sub	r4, r4, #2
    965c:	bic	r4, r4, #1
    9660:	add	r3, r2, #2
    9664:	ldr	sl, [pc, #-344]	; 9514 <btbb_process_packet@@Base+0xa54>
    9668:	add	r4, r4, r3
    966c:	add	sl, pc, sl
    9670:	add	r4, r7, r4
    9674:	add	r5, r7, r2
    9678:	ldrh	r1, [r5, #2]!
    967c:	mov	r0, sl
    9680:	bl	2118 <printf@plt>
    9684:	cmp	r4, r5
    9688:	bne	9678 <btbb_process_packet@@Base+0xbb8>
    968c:	b	9160 <btbb_process_packet@@Base+0x6a0>
    9690:	ldr	r0, [pc, #-384]	; 9518 <btbb_process_packet@@Base+0xa58>
    9694:	sub	r4, r4, #1
    9698:	add	r0, pc, r0
    969c:	bl	22d4 <puts@plt>
    96a0:	ands	r2, r4, #15
    96a4:	beq	91e0 <btbb_process_packet@@Base+0x720>
    96a8:	mov	r1, r4
    96ac:	ldr	r0, [sp, #28]
    96b0:	bl	2118 <printf@plt>
    96b4:	b	9160 <btbb_process_packet@@Base+0x6a0>
    96b8:	ldr	r0, [pc, #-420]	; 951c <btbb_process_packet@@Base+0xa5c>
    96bc:	add	r0, pc, r0
    96c0:	bl	22d4 <puts@plt>
    96c4:	b	9640 <btbb_process_packet@@Base+0xb80>
    96c8:	ldr	r0, [pc, #-432]	; 9520 <btbb_process_packet@@Base+0xa60>
    96cc:	add	r0, pc, r0
    96d0:	bl	22d4 <puts@plt>
    96d4:	ldr	r0, [pc, #-440]	; 9524 <btbb_process_packet@@Base+0xa64>
    96d8:	add	r0, pc, r0
    96dc:	bl	2118 <printf@plt>
    96e0:	cmp	r4, #2
    96e4:	ble	9744 <btbb_process_packet@@Base+0xc84>
    96e8:	add	sl, sl, #2
    96ec:	ldrb	r3, [fp, #1]
    96f0:	ldrb	r1, [r7, sl]
    96f4:	ldr	r0, [pc, #-468]	; 9528 <btbb_process_packet@@Base+0xa68>
    96f8:	add	sl, r7, sl
    96fc:	add	r0, pc, r0
    9700:	orr	r1, r3, r1, lsl #8
    9704:	bl	2118 <printf@plt>
    9708:	cmp	r4, #3
    970c:	beq	9458 <btbb_process_packet@@Base+0x998>
    9710:	ldr	r0, [pc, #-492]	; 952c <btbb_process_packet@@Base+0xa6c>
    9714:	ldr	r5, [pc, #-492]	; 9530 <btbb_process_packet@@Base+0xa70>
    9718:	add	r0, pc, r0
    971c:	bl	2118 <printf@plt>
    9720:	add	r5, pc, r5
    9724:	mov	fp, #3
    9728:	add	fp, fp, #1
    972c:	ldrb	r1, [sl, #1]!
    9730:	mov	r0, r5
    9734:	bl	2118 <printf@plt>
    9738:	cmp	fp, r4
    973c:	blt	9728 <btbb_process_packet@@Base+0xc68>
    9740:	b	9458 <btbb_process_packet@@Base+0x998>
    9744:	ldr	r0, [pc, #-536]	; 9534 <btbb_process_packet@@Base+0xa74>
    9748:	sub	r1, r4, #1
    974c:	add	r0, pc, r0
    9750:	bl	2118 <printf@plt>
    9754:	b	9160 <btbb_process_packet@@Base+0x6a0>
    9758:	ldr	r0, [pc, #-552]	; 9538 <btbb_process_packet@@Base+0xa78>
    975c:	sub	r1, r4, #1
    9760:	add	r0, pc, r0
    9764:	bl	2118 <printf@plt>
    9768:	b	9160 <btbb_process_packet@@Base+0x6a0>
    976c:	mov	sl, #1
    9770:	ldr	r0, [pc, #-572]	; 953c <btbb_process_packet@@Base+0xa7c>
    9774:	mov	r3, r8
    9778:	mov	r2, r4
    977c:	mov	r1, sl
    9780:	add	r0, pc, r0
    9784:	add	sp, sp, #52	; 0x34
    9788:	vpop	{d8}
    978c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9790:	b	2118 <printf@plt>
    9794:	ldr	r0, [pc, #-604]	; 9540 <btbb_process_packet@@Base+0xa80>
    9798:	add	r0, pc, r0
    979c:	add	sp, sp, #52	; 0x34
    97a0:	vpop	{d8}
    97a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    97a8:	b	22d4 <puts@plt>
    97ac:	ldr	r0, [pc, #-624]	; 9544 <btbb_process_packet@@Base+0xa84>
    97b0:	add	r0, pc, r0
    97b4:	bl	2118 <printf@plt>
    97b8:	ldr	r0, [pc, #-632]	; 9548 <btbb_process_packet@@Base+0xa88>
    97bc:	add	r0, pc, r0
    97c0:	bl	22d4 <puts@plt>
    97c4:	ldrb	r3, [r7, sl]
    97c8:	tst	r3, #2
    97cc:	beq	9428 <btbb_process_packet@@Base+0x968>
    97d0:	ldr	r0, [pc, #-652]	; 954c <btbb_process_packet@@Base+0xa8c>
    97d4:	add	r0, pc, r0
    97d8:	bl	2118 <printf@plt>
    97dc:	ldr	r0, [pc, #-660]	; 9550 <btbb_process_packet@@Base+0xa90>
    97e0:	add	r0, pc, r0
    97e4:	bl	22d4 <puts@plt>
    97e8:	ldrb	r3, [r7, sl]
    97ec:	tst	r3, #4
    97f0:	beq	9430 <btbb_process_packet@@Base+0x970>
    97f4:	ldr	r0, [pc, #-680]	; 9554 <btbb_process_packet@@Base+0xa94>
    97f8:	add	r0, pc, r0
    97fc:	bl	2118 <printf@plt>
    9800:	ldr	r0, [pc, #-688]	; 9558 <btbb_process_packet@@Base+0xa98>
    9804:	add	r0, pc, r0
    9808:	bl	22d4 <puts@plt>
    980c:	ldrb	r3, [r7, sl]
    9810:	tst	r3, #8
    9814:	beq	9438 <btbb_process_packet@@Base+0x978>
    9818:	ldr	r0, [pc, #-708]	; 955c <btbb_process_packet@@Base+0xa9c>
    981c:	add	r0, pc, r0
    9820:	bl	2118 <printf@plt>
    9824:	ldr	r0, [pc, #-716]	; 9560 <btbb_process_packet@@Base+0xaa0>
    9828:	add	r0, pc, r0
    982c:	bl	22d4 <puts@plt>
    9830:	ldrb	r3, [r7, sl]
    9834:	tst	r3, #16
    9838:	beq	9440 <btbb_process_packet@@Base+0x980>
    983c:	ldr	r0, [pc, #-736]	; 9564 <btbb_process_packet@@Base+0xaa4>
    9840:	add	r0, pc, r0
    9844:	bl	2118 <printf@plt>
    9848:	ldr	r0, [pc, #-744]	; 9568 <btbb_process_packet@@Base+0xaa8>
    984c:	add	r0, pc, r0
    9850:	bl	22d4 <puts@plt>
    9854:	ldrb	r3, [r7, sl]
    9858:	tst	r3, #32
    985c:	beq	9448 <btbb_process_packet@@Base+0x988>
    9860:	ldr	r0, [pc, #-764]	; 956c <btbb_process_packet@@Base+0xaac>
    9864:	add	r0, pc, r0
    9868:	bl	2118 <printf@plt>
    986c:	ldr	r0, [pc, #-772]	; 9570 <btbb_process_packet@@Base+0xab0>
    9870:	add	r0, pc, r0
    9874:	bl	22d4 <puts@plt>
    9878:	ldrb	r3, [r7, sl]
    987c:	tst	r3, #64	; 0x40
    9880:	beq	9450 <btbb_process_packet@@Base+0x990>
    9884:	ldr	r0, [pc, #-792]	; 9574 <btbb_process_packet@@Base+0xab4>
    9888:	add	r0, pc, r0
    988c:	bl	2118 <printf@plt>
    9890:	ldr	r0, [pc, #-800]	; 9578 <btbb_process_packet@@Base+0xab8>
    9894:	add	r0, pc, r0
    9898:	bl	22d4 <puts@plt>
    989c:	ldrb	r3, [r7, sl]
    98a0:	lsrs	r3, r3, #7
    98a4:	beq	9458 <btbb_process_packet@@Base+0x998>
    98a8:	ldr	r0, [pc, #-820]	; 957c <btbb_process_packet@@Base+0xabc>
    98ac:	add	r0, pc, r0
    98b0:	bl	2118 <printf@plt>
    98b4:	ldr	r0, [pc, #-828]	; 9580 <btbb_process_packet@@Base+0xac0>
    98b8:	add	r0, pc, r0
    98bc:	bl	22d4 <puts@plt>
    98c0:	b	9458 <btbb_process_packet@@Base+0x998>
    98c4:	ldrb	r2, [fp, #2]
    98c8:	ldrb	r3, [fp, #1]
    98cc:	ldr	r0, [pc, #-848]	; 9584 <btbb_process_packet@@Base+0xac4>
    98d0:	orr	r3, r3, r2, lsl #8
    98d4:	add	r0, pc, r0
    98d8:	vmov	s15, r3
    98dc:	vcvt.f64.s32	d7, s15
    98e0:	vmul.f64	d7, d7, d8
    98e4:	vmov	r2, r3, d7
    98e8:	bl	2118 <printf@plt>
    98ec:	ldrb	r2, [fp, #4]
    98f0:	ldrb	r3, [fp, #3]
    98f4:	ldr	r0, [pc, #-884]	; 9588 <btbb_process_packet@@Base+0xac8>
    98f8:	orr	r3, r3, r2, lsl #8
    98fc:	add	r0, pc, r0
    9900:	vmov	s15, r3
    9904:	vcvt.f64.s32	d7, s15
    9908:	vmul.f64	d7, d7, d8
    990c:	vmov	r2, r3, d7
    9910:	bl	2118 <printf@plt>
    9914:	b	9160 <btbb_process_packet@@Base+0x6a0>
    9918:	ldr	r0, [pc, #-916]	; 958c <btbb_process_packet@@Base+0xacc>
    991c:	ldrb	r1, [fp, #1]
    9920:	add	r0, pc, r0
    9924:	bl	2118 <printf@plt>
    9928:	b	9160 <btbb_process_packet@@Base+0x6a0>

0000992c <lell_packet_new@@Base>:
    992c:	push	{r4, lr}
    9930:	mov	r1, #104	; 0x68
    9934:	mov	r0, #1
    9938:	bl	20c4 <calloc@plt>
    993c:	mov	r3, #1
    9940:	str	r3, [r0, #96]	; 0x60
    9944:	pop	{r4, pc}

00009948 <lell_packet_ref@@Base>:
    9948:	ldr	r3, [r0, #96]	; 0x60
    994c:	add	r3, r3, #1
    9950:	str	r3, [r0, #96]	; 0x60
    9954:	bx	lr

00009958 <lell_packet_unref@@Base>:
    9958:	ldr	r3, [r0, #96]	; 0x60
    995c:	subs	r3, r3, #1
    9960:	beq	996c <lell_packet_unref@@Base+0x14>
    9964:	str	r3, [r0, #96]	; 0x60
    9968:	bx	lr
    996c:	b	2160 <free@plt>

00009970 <lell_packet_is_data@@Base>:
    9970:	ldrb	r0, [r0, #68]	; 0x44
    9974:	cmp	r0, #36	; 0x24
    9978:	movhi	r0, #0
    997c:	movls	r0, #1
    9980:	bx	lr

00009984 <lell_allocate_and_decode@@Base>:
    9984:	push	{r4, r5, r6, r7, r8, lr}
    9988:	mov	r5, r0
    998c:	mov	r6, r3
    9990:	mov	r4, r1
    9994:	mov	r7, r2
    9998:	bl	2424 <lell_packet_new@plt>
    999c:	mov	r3, r5
    99a0:	add	r2, r5, #64	; 0x40
    99a4:	mov	r1, r0
    99a8:	str	r0, [r6]
    99ac:	ldr	r5, [r3]
    99b0:	ldr	lr, [r3, #4]
    99b4:	ldr	ip, [r3, #8]
    99b8:	ldr	r0, [r3, #12]
    99bc:	add	r3, r3, #16
    99c0:	cmp	r3, r2
    99c4:	str	r5, [r1]
    99c8:	str	lr, [r1, #4]
    99cc:	str	ip, [r1, #8]
    99d0:	str	r0, [r1, #12]
    99d4:	add	r1, r1, #16
    99d8:	bne	99ac <lell_allocate_and_decode@@Base+0x28>
    99dc:	ldr	r3, [pc, #364]	; 9b50 <lell_allocate_and_decode@@Base+0x1cc>
    99e0:	ldr	r0, [r6]
    99e4:	cmp	r4, r3
    99e8:	beq	9af8 <lell_allocate_and_decode@@Base+0x174>
    99ec:	add	r3, r3, #23
    99f0:	cmp	r4, r3
    99f4:	bhi	9ac0 <lell_allocate_and_decode@@Base+0x13c>
    99f8:	sub	r4, r4, #2400	; 0x960
    99fc:	sub	r3, r4, #4
    9a00:	add	r3, r3, r3, lsr #31
    9a04:	asr	r3, r3, #1
    9a08:	uxtb	r3, r3
    9a0c:	sub	r4, r4, #2
    9a10:	ldr	r2, [r0]
    9a14:	add	r4, r4, r4, lsr #31
    9a18:	strb	r3, [r0, #68]	; 0x44
    9a1c:	asr	r4, r4, #1
    9a20:	strb	r4, [r0, #69]	; 0x45
    9a24:	str	r7, [r0, #76]	; 0x4c
    9a28:	str	r2, [r0, #64]	; 0x40
    9a2c:	bl	2130 <lell_packet_is_data@plt>
    9a30:	subs	r5, r0, #0
    9a34:	bne	9b04 <lell_allocate_and_decode@@Base+0x180>
    9a38:	ldr	r1, [r6]
    9a3c:	ldr	r6, [pc, #272]	; 9b54 <lell_allocate_and_decode@@Base+0x1d0>
    9a40:	ldrb	ip, [r1, #4]
    9a44:	ldrb	r2, [r1, #100]	; 0x64
    9a48:	ldrb	r4, [r1, #5]
    9a4c:	ldr	r3, [r1, #64]	; 0x40
    9a50:	bic	r2, r2, #1
    9a54:	and	r0, ip, #15
    9a58:	cmp	r3, r6
    9a5c:	orreq	r2, r2, #1
    9a60:	lsr	lr, ip, #6
    9a64:	and	r4, r4, #63	; 0x3f
    9a68:	and	lr, lr, #1
    9a6c:	lsr	ip, ip, #7
    9a70:	strb	r0, [r1, #80]	; 0x50
    9a74:	ands	r0, r2, #1
    9a78:	str	r4, [r1, #72]	; 0x48
    9a7c:	str	lr, [r1, #84]	; 0x54
    9a80:	str	ip, [r1, #88]	; 0x58
    9a84:	strb	r2, [r1, #100]	; 0x64
    9a88:	bne	9ab8 <lell_allocate_and_decode@@Base+0x134>
    9a8c:	cmp	r3, r6
    9a90:	eor	r3, r3, r6
    9a94:	beq	9b48 <lell_allocate_and_decode@@Base+0x1c4>
    9a98:	add	r0, r0, #1
    9a9c:	sub	r2, r3, #1
    9aa0:	ands	r3, r3, r2
    9aa4:	uxtb	r0, r0
    9aa8:	bne	9a98 <lell_allocate_and_decode@@Base+0x114>
    9aac:	cmp	r0, #1
    9ab0:	movne	r5, #32
    9ab4:	moveq	r5, #1
    9ab8:	str	r5, [r1, #92]	; 0x5c
    9abc:	pop	{r4, r5, r6, r7, r8, pc}
    9ac0:	ldr	r3, [pc, #144]	; 9b58 <lell_allocate_and_decode@@Base+0x1d4>
    9ac4:	cmp	r4, r3
    9ac8:	beq	9b3c <lell_allocate_and_decode@@Base+0x1b8>
    9acc:	cmp	r4, #2480	; 0x9b0
    9ad0:	subcc	r3, r4, #2416	; 0x970
    9ad4:	subcc	r3, r3, #12
    9ad8:	subcs	r4, r4, #2400	; 0x960
    9adc:	addcc	r3, r3, r3, lsr #31
    9ae0:	movcs	r3, #39	; 0x27
    9ae4:	asrcc	r3, r3, #1
    9ae8:	addcc	r3, r3, #11
    9aec:	subcc	r4, r4, #2400	; 0x960
    9af0:	uxtbcc	r3, r3
    9af4:	b	9a0c <lell_allocate_and_decode@@Base+0x88>
    9af8:	mov	r3, #37	; 0x25
    9afc:	mov	r4, #2
    9b00:	b	9a0c <lell_allocate_and_decode@@Base+0x88>
    9b04:	ldr	r4, [r6]
    9b08:	ldrb	r3, [r4, #5]
    9b0c:	ldr	r0, [r4, #64]	; 0x40
    9b10:	and	r3, r3, #31
    9b14:	str	r3, [r4, #72]	; 0x48
    9b18:	bl	8c48 <btbb_process_packet@@Base+0x188>
    9b1c:	ldrb	r3, [r4, #100]	; 0x64
    9b20:	bic	r3, r3, #1
    9b24:	str	r0, [r4, #92]	; 0x5c
    9b28:	cmp	r0, #0
    9b2c:	movne	r0, r3
    9b30:	orreq	r0, r3, #1
    9b34:	strb	r0, [r4, #100]	; 0x64
    9b38:	pop	{r4, r5, r6, r7, r8, pc}
    9b3c:	mov	r3, #38	; 0x26
    9b40:	mov	r4, #26
    9b44:	b	9a0c <lell_allocate_and_decode@@Base+0x88>
    9b48:	mov	r5, #32
    9b4c:	b	9ab8 <lell_allocate_and_decode@@Base+0x134>
    9b50:	andeq	r0, r0, r2, ror #18
    9b54:	mcrhi	14, 4, fp, cr9, cr6, {6}
    9b58:	andeq	r0, r0, sl, ror r9

00009b5c <lell_get_access_address@@Base>:
    9b5c:	ldr	r0, [r0, #64]	; 0x40
    9b60:	bx	lr

00009b64 <lell_get_access_address_offenses@@Base>:
    9b64:	ldr	r0, [r0, #92]	; 0x5c
    9b68:	bx	lr

00009b6c <lell_get_channel_index@@Base>:
    9b6c:	ldrb	r0, [r0, #68]	; 0x44
    9b70:	bx	lr

00009b74 <lell_get_channel_k@@Base>:
    9b74:	ldrb	r0, [r0, #69]	; 0x45
    9b78:	bx	lr

00009b7c <lell_get_adv_type_str@@Base>:
    9b7c:	push	{r4, lr}
    9b80:	mov	r4, r0
    9b84:	bl	2130 <lell_packet_is_data@plt>
    9b88:	cmp	r0, #0
    9b8c:	bne	9bb8 <lell_get_adv_type_str@@Base+0x3c>
    9b90:	ldrb	r3, [r4, #80]	; 0x50
    9b94:	cmp	r3, #6
    9b98:	bhi	9bac <lell_get_adv_type_str@@Base+0x30>
    9b9c:	ldr	r2, [pc, #28]	; 9bc0 <lell_get_adv_type_str@@Base+0x44>
    9ba0:	add	r2, pc, r2
    9ba4:	ldr	r0, [r2, r3, lsl #2]
    9ba8:	pop	{r4, pc}
    9bac:	ldr	r0, [pc, #16]	; 9bc4 <lell_get_adv_type_str@@Base+0x48>
    9bb0:	add	r0, pc, r0
    9bb4:	pop	{r4, pc}
    9bb8:	mov	r0, #0
    9bbc:	pop	{r4, pc}
    9bc0:	ldrdeq	r1, [r2], -r0
    9bc4:	andeq	fp, r0, r4, lsr #10

00009bc8 <lell_print@@Base>:
    9bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9bcc:	mov	r6, r0
    9bd0:	bl	2130 <lell_packet_is_data@plt>
    9bd4:	ldrb	r3, [r6, #100]	; 0x64
    9bd8:	cmp	r0, #0
    9bdc:	beq	9d10 <lell_print@@Base+0x148>
    9be0:	ldrb	r4, [r6, #4]
    9be4:	ldr	r2, [pc, #1772]	; a2d8 <lell_print@@Base+0x710>
    9be8:	tst	r3, #1
    9bec:	ldr	r1, [r6, #64]	; 0x40
    9bf0:	add	r2, pc, r2
    9bf4:	and	r4, r4, #3
    9bf8:	ldreq	r2, [pc, #1756]	; a2dc <lell_print@@Base+0x714>
    9bfc:	addeq	r2, pc, r2
    9c00:	ldr	r0, [pc, #1752]	; a2e0 <lell_print@@Base+0x718>
    9c04:	ldr	r3, [r6, #72]	; 0x48
    9c08:	add	r0, pc, r0
    9c0c:	bl	2118 <printf@plt>
    9c10:	ldr	r5, [pc, #1740]	; a2e4 <lell_print@@Base+0x71c>
    9c14:	ldr	r0, [pc, #1740]	; a2e8 <lell_print@@Base+0x720>
    9c18:	ldrb	r1, [r6, #68]	; 0x44
    9c1c:	add	r5, pc, r5
    9c20:	add	r0, pc, r0
    9c24:	bl	2118 <printf@plt>
    9c28:	add	r3, r5, r4, lsl #2
    9c2c:	ldr	r0, [pc, #1720]	; a2ec <lell_print@@Base+0x724>
    9c30:	ldr	r2, [r3, #28]
    9c34:	mov	r1, r4
    9c38:	add	r0, pc, r0
    9c3c:	bl	2118 <printf@plt>
    9c40:	ldrb	r1, [r6, #4]
    9c44:	ldr	r0, [pc, #1700]	; a2f0 <lell_print@@Base+0x728>
    9c48:	add	r0, pc, r0
    9c4c:	lsr	r3, r1, #4
    9c50:	lsr	r2, r1, #3
    9c54:	lsr	r1, r1, #2
    9c58:	and	r3, r3, #1
    9c5c:	and	r2, r2, #1
    9c60:	and	r1, r1, #1
    9c64:	bl	2118 <printf@plt>
    9c68:	cmp	r4, #3
    9c6c:	beq	9d8c <lell_print@@Base+0x1c4>
    9c70:	mov	r0, #10
    9c74:	bl	23f4 <putchar@plt>
    9c78:	ldr	r0, [pc, #1652]	; a2f4 <lell_print@@Base+0x72c>
    9c7c:	ldr	r7, [pc, #1652]	; a2f8 <lell_print@@Base+0x730>
    9c80:	add	r0, pc, r0
    9c84:	bl	2118 <printf@plt>
    9c88:	ldr	r3, [r6, #72]	; 0x48
    9c8c:	add	r7, pc, r7
    9c90:	cmp	r3, #0
    9c94:	add	r5, r6, #5
    9c98:	mov	r4, #6
    9c9c:	ble	9cc0 <lell_print@@Base+0xf8>
    9ca0:	ldrb	r1, [r5, #1]!
    9ca4:	mov	r0, r7
    9ca8:	bl	2118 <printf@plt>
    9cac:	ldr	r3, [r6, #72]	; 0x48
    9cb0:	add	r4, r4, #1
    9cb4:	add	r3, r3, #5
    9cb8:	cmp	r3, r4
    9cbc:	bge	9ca0 <lell_print@@Base+0xd8>
    9cc0:	mov	r0, #10
    9cc4:	bl	23f4 <putchar@plt>
    9cc8:	ldr	r0, [pc, #1580]	; a2fc <lell_print@@Base+0x734>
    9ccc:	ldr	r5, [pc, #1580]	; a300 <lell_print@@Base+0x738>
    9cd0:	add	r0, pc, r0
    9cd4:	bl	2118 <printf@plt>
    9cd8:	mov	r4, #0
    9cdc:	add	r5, pc, r5
    9ce0:	ldr	r2, [r6, #72]	; 0x48
    9ce4:	add	r3, r6, r4
    9ce8:	add	r3, r3, r2
    9cec:	add	r4, r4, #1
    9cf0:	ldrb	r1, [r3, #6]
    9cf4:	mov	r0, r5
    9cf8:	bl	2118 <printf@plt>
    9cfc:	cmp	r4, #3
    9d00:	bne	9ce0 <lell_print@@Base+0x118>
    9d04:	mov	r0, #10
    9d08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9d0c:	b	23f4 <putchar@plt>
    9d10:	ldr	r2, [pc, #1516]	; a304 <lell_print@@Base+0x73c>
    9d14:	tst	r3, #1
    9d18:	ldr	r1, [r6, #64]	; 0x40
    9d1c:	add	r2, pc, r2
    9d20:	ldreq	r2, [pc, #1504]	; a308 <lell_print@@Base+0x740>
    9d24:	addeq	r2, pc, r2
    9d28:	ldr	r0, [pc, #1500]	; a30c <lell_print@@Base+0x744>
    9d2c:	ldr	r3, [r6, #72]	; 0x48
    9d30:	add	r0, pc, r0
    9d34:	bl	2118 <printf@plt>
    9d38:	ldr	r0, [pc, #1488]	; a310 <lell_print@@Base+0x748>
    9d3c:	ldrb	r1, [r6, #68]	; 0x44
    9d40:	add	r0, pc, r0
    9d44:	bl	2118 <printf@plt>
    9d48:	mov	r0, r6
    9d4c:	bl	22bc <lell_get_adv_type_str@plt>
    9d50:	mov	r1, r0
    9d54:	ldr	r0, [pc, #1464]	; a314 <lell_print@@Base+0x74c>
    9d58:	add	r0, pc, r0
    9d5c:	bl	2118 <printf@plt>
    9d60:	ldrb	r3, [r6, #80]	; 0x50
    9d64:	cmp	r3, #6
    9d68:	addls	pc, pc, r3, lsl #2
    9d6c:	b	9c70 <lell_print@@Base+0xa8>
    9d70:	b	9db4 <lell_print@@Base+0x1ec>
    9d74:	b	9e84 <lell_print@@Base+0x2bc>
    9d78:	b	9db4 <lell_print@@Base+0x1ec>
    9d7c:	b	9ff4 <lell_print@@Base+0x42c>
    9d80:	b	9f48 <lell_print@@Base+0x380>
    9d84:	b	a0b8 <lell_print@@Base+0x4f0>
    9d88:	b	9db4 <lell_print@@Base+0x1ec>
    9d8c:	ldrb	r1, [r6, #6]
    9d90:	ldr	r0, [pc, #1408]	; a318 <lell_print@@Base+0x750>
    9d94:	cmp	r1, #20
    9d98:	movlt	r3, r1
    9d9c:	movge	r3, #20
    9da0:	add	r0, pc, r0
    9da4:	add	r5, r5, r3, lsl #2
    9da8:	ldr	r2, [r5, #44]	; 0x2c
    9dac:	bl	2118 <printf@plt>
    9db0:	b	9c70 <lell_print@@Base+0xa8>
    9db4:	mov	r5, r6
    9db8:	ldr	r1, [pc, #1372]	; a31c <lell_print@@Base+0x754>
    9dbc:	ldr	r0, [pc, #1372]	; a320 <lell_print@@Base+0x758>
    9dc0:	ldrb	r2, [r5, #11]!
    9dc4:	add	r1, pc, r1
    9dc8:	add	r0, pc, r0
    9dcc:	ldr	r9, [r6, #84]	; 0x54
    9dd0:	bl	2118 <printf@plt>
    9dd4:	ldr	r8, [pc, #1352]	; a324 <lell_print@@Base+0x75c>
    9dd8:	mov	r4, r5
    9ddc:	add	r8, pc, r8
    9de0:	add	r7, r6, #6
    9de4:	ldrb	r1, [r4, #-1]!
    9de8:	mov	r0, r8
    9dec:	bl	2118 <printf@plt>
    9df0:	cmp	r7, r4
    9df4:	bne	9de4 <lell_print@@Base+0x21c>
    9df8:	ldr	r1, [pc, #1320]	; a328 <lell_print@@Base+0x760>
    9dfc:	cmp	r9, #0
    9e00:	add	r1, pc, r1
    9e04:	ldreq	r1, [pc, #1312]	; a32c <lell_print@@Base+0x764>
    9e08:	addeq	r1, pc, r1
    9e0c:	ldr	r0, [pc, #1308]	; a330 <lell_print@@Base+0x768>
    9e10:	add	r0, pc, r0
    9e14:	bl	2118 <printf@plt>
    9e18:	ldr	r3, [r6, #72]	; 0x48
    9e1c:	cmp	r3, #6
    9e20:	ble	9c70 <lell_print@@Base+0xa8>
    9e24:	ldr	r0, [pc, #1288]	; a334 <lell_print@@Base+0x76c>
    9e28:	add	r0, pc, r0
    9e2c:	bl	2118 <printf@plt>
    9e30:	ldr	r3, [r6, #72]	; 0x48
    9e34:	cmp	r3, #6
    9e38:	ble	9e68 <lell_print@@Base+0x2a0>
    9e3c:	ldr	r7, [pc, #1268]	; a338 <lell_print@@Base+0x770>
    9e40:	mov	r4, #0
    9e44:	add	r7, pc, r7
    9e48:	ldrb	r1, [r5, #1]!
    9e4c:	mov	r0, r7
    9e50:	bl	2118 <printf@plt>
    9e54:	ldr	r3, [r6, #72]	; 0x48
    9e58:	add	r4, r4, #1
    9e5c:	sub	r3, r3, #6
    9e60:	cmp	r3, r4
    9e64:	bgt	9e48 <lell_print@@Base+0x280>
    9e68:	mov	r0, #10
    9e6c:	bl	23f4 <putchar@plt>
    9e70:	ldr	r1, [r6, #72]	; 0x48
    9e74:	add	r0, r6, #12
    9e78:	sub	r1, r1, #6
    9e7c:	bl	9094 <btbb_process_packet@@Base+0x5d4>
    9e80:	b	9c70 <lell_print@@Base+0xa8>
    9e84:	mov	r4, r6
    9e88:	ldr	r1, [pc, #1196]	; a33c <lell_print@@Base+0x774>
    9e8c:	ldr	r0, [pc, #1196]	; a340 <lell_print@@Base+0x778>
    9e90:	add	r1, pc, r1
    9e94:	ldrb	r2, [r4, #11]!
    9e98:	add	r0, pc, r0
    9e9c:	ldr	r8, [r6, #84]	; 0x54
    9ea0:	bl	2118 <printf@plt>
    9ea4:	ldr	r7, [pc, #1176]	; a344 <lell_print@@Base+0x77c>
    9ea8:	add	r5, r6, #6
    9eac:	add	r7, pc, r7
    9eb0:	ldrb	r1, [r4, #-1]!
    9eb4:	mov	r0, r7
    9eb8:	bl	2118 <printf@plt>
    9ebc:	cmp	r5, r4
    9ec0:	bne	9eb0 <lell_print@@Base+0x2e8>
    9ec4:	ldr	r1, [pc, #1148]	; a348 <lell_print@@Base+0x780>
    9ec8:	cmp	r8, #0
    9ecc:	add	r1, pc, r1
    9ed0:	ldreq	r1, [pc, #1140]	; a34c <lell_print@@Base+0x784>
    9ed4:	addeq	r1, pc, r1
    9ed8:	ldr	r0, [pc, #1136]	; a350 <lell_print@@Base+0x788>
    9edc:	mov	r4, r6
    9ee0:	add	r0, pc, r0
    9ee4:	bl	2118 <printf@plt>
    9ee8:	ldr	r1, [pc, #1124]	; a354 <lell_print@@Base+0x78c>
    9eec:	ldr	r0, [pc, #1124]	; a358 <lell_print@@Base+0x790>
    9ef0:	ldrb	r2, [r4, #17]!
    9ef4:	add	r1, pc, r1
    9ef8:	add	r0, pc, r0
    9efc:	ldr	r8, [r6, #88]	; 0x58
    9f00:	bl	2118 <printf@plt>
    9f04:	ldr	r7, [pc, #1104]	; a35c <lell_print@@Base+0x794>
    9f08:	add	r5, r6, #12
    9f0c:	add	r7, pc, r7
    9f10:	ldrb	r1, [r4, #-1]!
    9f14:	mov	r0, r7
    9f18:	bl	2118 <printf@plt>
    9f1c:	cmp	r5, r4
    9f20:	bne	9f10 <lell_print@@Base+0x348>
    9f24:	ldr	r1, [pc, #1076]	; a360 <lell_print@@Base+0x798>
    9f28:	cmp	r8, #0
    9f2c:	add	r1, pc, r1
    9f30:	ldreq	r1, [pc, #1068]	; a364 <lell_print@@Base+0x79c>
    9f34:	addeq	r1, pc, r1
    9f38:	ldr	r0, [pc, #1064]	; a368 <lell_print@@Base+0x7a0>
    9f3c:	add	r0, pc, r0
    9f40:	bl	2118 <printf@plt>
    9f44:	b	9c70 <lell_print@@Base+0xa8>
    9f48:	mov	r5, r6
    9f4c:	ldr	r1, [pc, #1048]	; a36c <lell_print@@Base+0x7a4>
    9f50:	ldr	r0, [pc, #1048]	; a370 <lell_print@@Base+0x7a8>
    9f54:	ldrb	r2, [r5, #11]!
    9f58:	add	r1, pc, r1
    9f5c:	add	r0, pc, r0
    9f60:	ldr	r9, [r6, #84]	; 0x54
    9f64:	bl	2118 <printf@plt>
    9f68:	ldr	r8, [pc, #1028]	; a374 <lell_print@@Base+0x7ac>
    9f6c:	mov	r4, r5
    9f70:	add	r8, pc, r8
    9f74:	add	r7, r6, #6
    9f78:	ldrb	r1, [r4, #-1]!
    9f7c:	mov	r0, r8
    9f80:	bl	2118 <printf@plt>
    9f84:	cmp	r7, r4
    9f88:	bne	9f78 <lell_print@@Base+0x3b0>
    9f8c:	ldr	r1, [pc, #996]	; a378 <lell_print@@Base+0x7b0>
    9f90:	cmp	r9, #0
    9f94:	add	r1, pc, r1
    9f98:	ldreq	r1, [pc, #988]	; a37c <lell_print@@Base+0x7b4>
    9f9c:	addeq	r1, pc, r1
    9fa0:	ldr	r0, [pc, #984]	; a380 <lell_print@@Base+0x7b8>
    9fa4:	ldr	r7, [pc, #984]	; a384 <lell_print@@Base+0x7bc>
    9fa8:	add	r0, pc, r0
    9fac:	bl	2118 <printf@plt>
    9fb0:	ldr	r0, [pc, #976]	; a388 <lell_print@@Base+0x7c0>
    9fb4:	add	r7, pc, r7
    9fb8:	add	r0, pc, r0
    9fbc:	bl	2118 <printf@plt>
    9fc0:	ldr	r3, [r6, #72]	; 0x48
    9fc4:	mov	r4, #0
    9fc8:	cmp	r3, #6
    9fcc:	ble	9e68 <lell_print@@Base+0x2a0>
    9fd0:	ldrb	r1, [r5, #1]!
    9fd4:	mov	r0, r7
    9fd8:	bl	2118 <printf@plt>
    9fdc:	ldr	r3, [r6, #72]	; 0x48
    9fe0:	add	r4, r4, #1
    9fe4:	sub	r3, r3, #6
    9fe8:	cmp	r3, r4
    9fec:	bgt	9fd0 <lell_print@@Base+0x408>
    9ff0:	b	9e68 <lell_print@@Base+0x2a0>
    9ff4:	mov	r4, r6
    9ff8:	ldr	r1, [pc, #908]	; a38c <lell_print@@Base+0x7c4>
    9ffc:	ldr	r0, [pc, #908]	; a390 <lell_print@@Base+0x7c8>
    a000:	add	r1, pc, r1
    a004:	ldrb	r2, [r4, #11]!
    a008:	add	r0, pc, r0
    a00c:	ldr	r8, [r6, #84]	; 0x54
    a010:	bl	2118 <printf@plt>
    a014:	ldr	r7, [pc, #888]	; a394 <lell_print@@Base+0x7cc>
    a018:	add	r5, r6, #6
    a01c:	add	r7, pc, r7
    a020:	ldrb	r1, [r4, #-1]!
    a024:	mov	r0, r7
    a028:	bl	2118 <printf@plt>
    a02c:	cmp	r5, r4
    a030:	bne	a020 <lell_print@@Base+0x458>
    a034:	ldr	r1, [pc, #860]	; a398 <lell_print@@Base+0x7d0>
    a038:	cmp	r8, #0
    a03c:	add	r1, pc, r1
    a040:	ldreq	r1, [pc, #852]	; a39c <lell_print@@Base+0x7d4>
    a044:	addeq	r1, pc, r1
    a048:	ldr	r0, [pc, #848]	; a3a0 <lell_print@@Base+0x7d8>
    a04c:	mov	r4, r6
    a050:	add	r0, pc, r0
    a054:	bl	2118 <printf@plt>
    a058:	ldr	r1, [pc, #836]	; a3a4 <lell_print@@Base+0x7dc>
    a05c:	ldr	r0, [pc, #836]	; a3a8 <lell_print@@Base+0x7e0>
    a060:	ldrb	r2, [r4, #17]!
    a064:	add	r1, pc, r1
    a068:	add	r0, pc, r0
    a06c:	ldr	r8, [r6, #88]	; 0x58
    a070:	bl	2118 <printf@plt>
    a074:	ldr	r7, [pc, #816]	; a3ac <lell_print@@Base+0x7e4>
    a078:	add	r5, r6, #12
    a07c:	add	r7, pc, r7
    a080:	ldrb	r1, [r4, #-1]!
    a084:	mov	r0, r7
    a088:	bl	2118 <printf@plt>
    a08c:	cmp	r5, r4
    a090:	bne	a080 <lell_print@@Base+0x4b8>
    a094:	ldr	r1, [pc, #788]	; a3b0 <lell_print@@Base+0x7e8>
    a098:	cmp	r8, #0
    a09c:	add	r1, pc, r1
    a0a0:	ldreq	r1, [pc, #780]	; a3b4 <lell_print@@Base+0x7ec>
    a0a4:	addeq	r1, pc, r1
    a0a8:	ldr	r0, [pc, #776]	; a3b8 <lell_print@@Base+0x7f0>
    a0ac:	add	r0, pc, r0
    a0b0:	bl	2118 <printf@plt>
    a0b4:	b	9c70 <lell_print@@Base+0xa8>
    a0b8:	mov	r4, r6
    a0bc:	ldr	r1, [pc, #760]	; a3bc <lell_print@@Base+0x7f4>
    a0c0:	ldr	r0, [pc, #760]	; a3c0 <lell_print@@Base+0x7f8>
    a0c4:	add	r1, pc, r1
    a0c8:	ldrb	r2, [r4, #11]!
    a0cc:	add	r0, pc, r0
    a0d0:	ldr	r8, [r6, #84]	; 0x54
    a0d4:	bl	2118 <printf@plt>
    a0d8:	ldr	r7, [pc, #740]	; a3c4 <lell_print@@Base+0x7fc>
    a0dc:	add	r5, r6, #6
    a0e0:	add	r7, pc, r7
    a0e4:	ldrb	r1, [r4, #-1]!
    a0e8:	mov	r0, r7
    a0ec:	bl	2118 <printf@plt>
    a0f0:	cmp	r5, r4
    a0f4:	bne	a0e4 <lell_print@@Base+0x51c>
    a0f8:	ldr	r1, [pc, #712]	; a3c8 <lell_print@@Base+0x800>
    a0fc:	cmp	r8, #0
    a100:	add	r1, pc, r1
    a104:	ldreq	r1, [pc, #704]	; a3cc <lell_print@@Base+0x804>
    a108:	addeq	r1, pc, r1
    a10c:	ldr	r0, [pc, #700]	; a3d0 <lell_print@@Base+0x808>
    a110:	mov	r4, r6
    a114:	add	r0, pc, r0
    a118:	bl	2118 <printf@plt>
    a11c:	ldr	r1, [pc, #688]	; a3d4 <lell_print@@Base+0x80c>
    a120:	ldr	r0, [pc, #688]	; a3d8 <lell_print@@Base+0x810>
    a124:	ldrb	r2, [r4, #17]!
    a128:	add	r1, pc, r1
    a12c:	add	r0, pc, r0
    a130:	ldr	r8, [r6, #88]	; 0x58
    a134:	bl	2118 <printf@plt>
    a138:	ldr	r7, [pc, #668]	; a3dc <lell_print@@Base+0x814>
    a13c:	add	r5, r6, #12
    a140:	add	r7, pc, r7
    a144:	ldrb	r1, [r4, #-1]!
    a148:	mov	r0, r7
    a14c:	bl	2118 <printf@plt>
    a150:	cmp	r4, r5
    a154:	bne	a144 <lell_print@@Base+0x57c>
    a158:	ldr	r1, [pc, #640]	; a3e0 <lell_print@@Base+0x818>
    a15c:	cmp	r8, #0
    a160:	add	r1, pc, r1
    a164:	ldreq	r1, [pc, #632]	; a3e4 <lell_print@@Base+0x81c>
    a168:	addeq	r1, pc, r1
    a16c:	ldr	r0, [pc, #628]	; a3e8 <lell_print@@Base+0x820>
    a170:	ldr	r4, [pc, #628]	; a3ec <lell_print@@Base+0x824>
    a174:	add	r0, pc, r0
    a178:	bl	2118 <printf@plt>
    a17c:	ldr	r1, [pc, #620]	; a3f0 <lell_print@@Base+0x828>
    a180:	ldr	r0, [pc, #620]	; a3f4 <lell_print@@Base+0x82c>
    a184:	ldr	r2, [r6, #18]
    a188:	add	r1, pc, r1
    a18c:	add	r0, pc, r0
    a190:	bl	2118 <printf@plt>
    a194:	ldrb	r3, [r6, #23]
    a198:	ldrb	r0, [r6, #24]
    a19c:	ldrb	r2, [r6, #22]
    a1a0:	ldr	r1, [pc, #592]	; a3f8 <lell_print@@Base+0x830>
    a1a4:	lsl	r3, r3, #8
    a1a8:	orr	r3, r3, r0, lsl #16
    a1ac:	ldr	r0, [pc, #584]	; a3fc <lell_print@@Base+0x834>
    a1b0:	orr	r2, r3, r2
    a1b4:	add	r1, pc, r1
    a1b8:	add	r0, pc, r0
    a1bc:	bl	2118 <printf@plt>
    a1c0:	ldrb	r3, [r6, #25]
    a1c4:	ldr	r1, [pc, #564]	; a400 <lell_print@@Base+0x838>
    a1c8:	ldr	r0, [pc, #564]	; a404 <lell_print@@Base+0x83c>
    a1cc:	mov	r2, r3
    a1d0:	add	r1, pc, r1
    a1d4:	add	r0, pc, r0
    a1d8:	bl	2118 <printf@plt>
    a1dc:	ldrb	r2, [r6, #27]
    a1e0:	ldrb	r3, [r6, #26]
    a1e4:	ldr	r1, [pc, #540]	; a408 <lell_print@@Base+0x840>
    a1e8:	add	r4, pc, r4
    a1ec:	orr	r3, r3, r2, lsl #8
    a1f0:	mov	r2, r3
    a1f4:	add	r1, pc, r1
    a1f8:	mov	r0, r4
    a1fc:	bl	2118 <printf@plt>
    a200:	ldrb	r2, [r6, #29]
    a204:	ldrb	r3, [r6, #28]
    a208:	ldr	r1, [pc, #508]	; a40c <lell_print@@Base+0x844>
    a20c:	mov	r0, r4
    a210:	orr	r3, r3, r2, lsl #8
    a214:	mov	r2, r3
    a218:	add	r1, pc, r1
    a21c:	bl	2118 <printf@plt>
    a220:	ldrb	r2, [r6, #31]
    a224:	ldrb	r3, [r6, #30]
    a228:	ldr	r1, [pc, #480]	; a410 <lell_print@@Base+0x848>
    a22c:	mov	r0, r4
    a230:	orr	r3, r3, r2, lsl #8
    a234:	mov	r2, r3
    a238:	add	r1, pc, r1
    a23c:	bl	2118 <printf@plt>
    a240:	ldrb	r2, [r6, #33]	; 0x21
    a244:	ldrb	r3, [r6, #32]
    a248:	ldr	r1, [pc, #452]	; a414 <lell_print@@Base+0x84c>
    a24c:	mov	r0, r4
    a250:	orr	r3, r3, r2, lsl #8
    a254:	add	r1, pc, r1
    a258:	mov	r2, r3
    a25c:	bl	2118 <printf@plt>
    a260:	ldr	r0, [pc, #432]	; a418 <lell_print@@Base+0x850>
    a264:	ldr	r7, [pc, #432]	; a41c <lell_print@@Base+0x854>
    a268:	add	r0, pc, r0
    a26c:	bl	2118 <printf@plt>
    a270:	add	r7, pc, r7
    a274:	add	r4, r6, #34	; 0x22
    a278:	add	r5, r6, #39	; 0x27
    a27c:	ldrb	r1, [r4], #1
    a280:	mov	r0, r7
    a284:	bl	2118 <printf@plt>
    a288:	cmp	r5, r4
    a28c:	bne	a27c <lell_print@@Base+0x6b4>
    a290:	mov	r0, #10
    a294:	bl	23f4 <putchar@plt>
    a298:	ldrb	r1, [r6, #39]	; 0x27
    a29c:	ldr	r0, [pc, #380]	; a420 <lell_print@@Base+0x858>
    a2a0:	and	r1, r1, #31
    a2a4:	add	r0, pc, r0
    a2a8:	bl	2118 <printf@plt>
    a2ac:	ldrb	r2, [r6, #39]	; 0x27
    a2b0:	ldr	r3, [pc, #364]	; a424 <lell_print@@Base+0x85c>
    a2b4:	ldr	r0, [pc, #364]	; a428 <lell_print@@Base+0x860>
    a2b8:	add	r3, pc, r3
    a2bc:	lsr	r2, r2, #5
    a2c0:	mov	r1, r2
    a2c4:	add	r3, r3, r2, lsl #2
    a2c8:	add	r0, pc, r0
    a2cc:	ldr	r2, [r3, #128]	; 0x80
    a2d0:	bl	2118 <printf@plt>
    a2d4:	b	9c70 <lell_print@@Base+0xa8>
    a2d8:	andeq	fp, r0, ip, ror #9
    a2dc:	andeq	fp, r0, r8, ror #9
    a2e0:	strdeq	fp, [r0], -r4
    a2e4:	andeq	r1, r2, r4, asr r2
    a2e8:	andeq	fp, r0, r0, lsl #10
    a2ec:	andeq	fp, r0, r0, lsl #10
    a2f0:	andeq	fp, r0, r4, lsl #10
    a2f4:	andeq	fp, r0, r4, asr r6
    a2f8:	andeq	fp, r0, r4, lsr r1
    a2fc:	andeq	fp, r0, r0, lsl r6
    a300:	andeq	fp, r0, r4, ror #1
    a304:	andeq	fp, r0, r0, asr #7
    a308:	andeq	fp, r0, r0, asr #7
    a30c:	andeq	fp, r0, r4, asr r4
    a310:	andeq	fp, r0, r0, ror #7
    a314:	andeq	fp, r0, r4, asr r4
    a318:	andeq	fp, r0, ip, asr #7
    a31c:	strdeq	fp, [r0], -r8
    a320:	strdeq	fp, [r0], -ip
    a324:	strdeq	fp, [r0], -r4
    a328:	andeq	fp, r0, ip, ror #5
    a32c:	andeq	fp, r0, ip, ror #5
    a330:	andeq	fp, r0, r8, asr #7
    a334:			; <UNDEFINED> instruction: 0x0000b3b8
    a338:	andeq	sl, r0, ip, ror pc
    a33c:	andeq	fp, r0, ip, lsr #6
    a340:	andeq	fp, r0, ip, lsr #6
    a344:	andeq	fp, r0, r4, lsr #6
    a348:	andeq	fp, r0, r0, lsr #4
    a34c:	andeq	fp, r0, r0, lsr #4
    a350:	strdeq	fp, [r0], -r8
    a354:	strdeq	fp, [r0], -ip
    a358:	andeq	fp, r0, ip, asr #5
    a35c:	andeq	fp, r0, r4, asr #5
    a360:	andeq	fp, r0, r0, asr #3
    a364:	andeq	fp, r0, r0, asr #3
    a368:	muleq	r0, ip, r2
    a36c:	andeq	fp, r0, r4, ror #4
    a370:	andeq	fp, r0, r8, ror #4
    a374:	andeq	fp, r0, r0, ror #4
    a378:	andeq	fp, r0, r8, asr r1
    a37c:	andeq	fp, r0, r8, asr r1
    a380:	andeq	fp, r0, r0, lsr r2
    a384:	andeq	sl, r0, ip, lsl #28
    a388:	andeq	fp, r0, r8, asr #4
    a38c:	strdeq	fp, [r0], -r8
    a390:			; <UNDEFINED> instruction: 0x0000b1bc
    a394:			; <UNDEFINED> instruction: 0x0000b1b4
    a398:	strheq	fp, [r0], -r0
    a39c:	strheq	fp, [r0], -r0
    a3a0:	andeq	fp, r0, r8, lsl #3
    a3a4:	andeq	fp, r0, r8, asr r1
    a3a8:	andeq	fp, r0, ip, asr r1
    a3ac:	andeq	fp, r0, r4, asr r1
    a3b0:	andeq	fp, r0, r0, asr r0
    a3b4:	andeq	fp, r0, r0, asr r0
    a3b8:	andeq	fp, r0, ip, lsr #2
    a3bc:	andeq	fp, r0, ip, lsr #2
    a3c0:	strdeq	fp, [r0], -r8
    a3c4:	strdeq	fp, [r0], -r0
    a3c8:	andeq	sl, r0, ip, ror #31
    a3cc:	andeq	sl, r0, ip, ror #31
    a3d0:	andeq	fp, r0, r4, asr #1
    a3d4:	muleq	r0, r4, r0
    a3d8:	muleq	r0, r8, r0
    a3dc:	muleq	r0, r0, r0
    a3e0:	andeq	sl, r0, ip, lsl #31
    a3e4:	andeq	sl, r0, ip, lsl #31
    a3e8:	andeq	fp, r0, r4, rrx
    a3ec:	andeq	fp, r0, r4, lsl #1
    a3f0:	andeq	fp, r0, ip, lsl #1
    a3f4:	muleq	r0, r0, r0
    a3f8:	andeq	fp, r0, r4, ror r0
    a3fc:	andeq	fp, r0, ip, ror r0
    a400:	andeq	fp, r0, r0, ror r0
    a404:	andeq	fp, r0, r8, ror r0
    a408:	andeq	fp, r0, ip, rrx
    a40c:	andeq	fp, r0, r8, rrx
    a410:	andeq	fp, r0, r4, asr r0
    a414:	andeq	fp, r0, r4, asr #32
    a418:	andeq	fp, r0, ip, lsr r0
    a41c:	andeq	sl, r0, r0, asr fp
    a420:	andeq	fp, r0, ip
    a424:			; <UNDEFINED> instruction: 0x00020bb8
    a428:	strdeq	sl, [r0], -r8

0000a42c <bt_compidtostr@@Base>:
    a42c:	ldr	r3, [pc, #3704]	; b2ac <bt_compidtostr@@Base+0xe80>
    a430:	cmp	r0, r3
    a434:	beq	f4a0 <bt_compidtostr@@Base+0x5074>
    a438:	bls	a4c8 <bt_compidtostr@@Base+0x9c>
    a43c:	ldr	r3, [pc, #3692]	; b2b0 <bt_compidtostr@@Base+0xe84>
    a440:	cmp	r0, r3
    a444:	beq	f878 <bt_compidtostr@@Base+0x544c>
    a448:	bhi	a5b4 <bt_compidtostr@@Base+0x188>
    a44c:	sub	r3, r3, #130	; 0x82
    a450:	cmp	r0, r3
    a454:	beq	fcb0 <bt_compidtostr@@Base+0x5884>
    a458:	bls	a700 <bt_compidtostr@@Base+0x2d4>
    a45c:	ldr	r3, [pc, #3664]	; b2b4 <bt_compidtostr@@Base+0xe88>
    a460:	cmp	r0, r3
    a464:	beq	f704 <bt_compidtostr@@Base+0x52d8>
    a468:	bhi	a940 <bt_compidtostr@@Base+0x514>
    a46c:	sub	r3, r3, #33	; 0x21
    a470:	cmp	r0, r3
    a474:	beq	f6f8 <bt_compidtostr@@Base+0x52cc>
    a478:	bls	ae3c <bt_compidtostr@@Base+0xa10>
    a47c:	ldr	r3, [pc, #3636]	; b2b8 <bt_compidtostr@@Base+0xe8c>
    a480:	cmp	r0, r3
    a484:	beq	e98c <bt_compidtostr@@Base+0x4560>
    a488:	bhi	b010 <bt_compidtostr@@Base+0xbe4>
    a48c:	sub	r3, r3, #8
    a490:	cmp	r0, r3
    a494:	beq	f77c <bt_compidtostr@@Base+0x5350>
    a498:	bhi	bb60 <bt_compidtostr@@Base+0x1734>
    a49c:	sub	r3, r3, #4
    a4a0:	cmp	r0, r3
    a4a4:	beq	e254 <bt_compidtostr@@Base+0x3e28>
    a4a8:	bhi	cbdc <bt_compidtostr@@Base+0x27b0>
    a4ac:	sub	r3, r3, #2
    a4b0:	cmp	r0, r3
    a4b4:	beq	ff5c <bt_compidtostr@@Base+0x5b30>
    a4b8:	bls	ff50 <bt_compidtostr@@Base+0x5b24>
    a4bc:	ldr	r0, [pc, #3576]	; b2bc <bt_compidtostr@@Base+0xe90>
    a4c0:	add	r0, pc, r0
    a4c4:	bx	lr
    a4c8:	sub	r3, r3, #260	; 0x104
    a4cc:	cmp	r0, r3
    a4d0:	beq	f4ac <bt_compidtostr@@Base+0x5080>
    a4d4:	bhi	a538 <bt_compidtostr@@Base+0x10c>
    a4d8:	cmp	r0, #129	; 0x81
    a4dc:	beq	fcbc <bt_compidtostr@@Base+0x5890>
    a4e0:	bls	a768 <bt_compidtostr@@Base+0x33c>
    a4e4:	cmp	r0, #194	; 0xc2
    a4e8:	beq	fe54 <bt_compidtostr@@Base+0x5a28>
    a4ec:	bhi	a9f0 <bt_compidtostr@@Base+0x5c4>
    a4f0:	cmp	r0, #161	; 0xa1
    a4f4:	beq	fe48 <bt_compidtostr@@Base+0x5a1c>
    a4f8:	bls	ae00 <bt_compidtostr@@Base+0x9d4>
    a4fc:	cmp	r0, #177	; 0xb1
    a500:	beq	e50c <bt_compidtostr@@Base+0x40e0>
    a504:	bhi	b060 <bt_compidtostr@@Base+0xc34>
    a508:	cmp	r0, #169	; 0xa9
    a50c:	beq	f854 <bt_compidtostr@@Base+0x5428>
    a510:	bhi	ba78 <bt_compidtostr@@Base+0x164c>
    a514:	cmp	r0, #165	; 0xa5
    a518:	beq	e3d4 <bt_compidtostr@@Base+0x3fa8>
    a51c:	bhi	cf24 <bt_compidtostr@@Base+0x2af8>
    a520:	cmp	r0, #163	; 0xa3
    a524:	beq	ff2c <bt_compidtostr@@Base+0x5b00>
    a528:	bls	ff20 <bt_compidtostr@@Base+0x5af4>
    a52c:	ldr	r0, [pc, #3468]	; b2c0 <bt_compidtostr@@Base+0xe94>
    a530:	add	r0, pc, r0
    a534:	bx	lr
    a538:	ldr	r3, [pc, #3460]	; b2c4 <bt_compidtostr@@Base+0xe98>
    a53c:	cmp	r0, r3
    a540:	beq	f4b8 <bt_compidtostr@@Base+0x508c>
    a544:	bls	a698 <bt_compidtostr@@Base+0x26c>
    a548:	ldr	r3, [pc, #3448]	; b2c8 <bt_compidtostr@@Base+0xe9c>
    a54c:	cmp	r0, r3
    a550:	beq	fcec <bt_compidtostr@@Base+0x58c0>
    a554:	bhi	a998 <bt_compidtostr@@Base+0x56c>
    a558:	sub	r3, r3, #33	; 0x21
    a55c:	cmp	r0, r3
    a560:	beq	fce0 <bt_compidtostr@@Base+0x58b4>
    a564:	bls	ad68 <bt_compidtostr@@Base+0x93c>
    a568:	ldr	r3, [pc, #3420]	; b2cc <bt_compidtostr@@Base+0xea0>
    a56c:	cmp	r0, r3
    a570:	beq	e44c <bt_compidtostr@@Base+0x4020>
    a574:	bhi	afc0 <bt_compidtostr@@Base+0xb94>
    a578:	sub	r3, r3, #8
    a57c:	cmp	r0, r3
    a580:	beq	f770 <bt_compidtostr@@Base+0x5344>
    a584:	bhi	bb34 <bt_compidtostr@@Base+0x1708>
    a588:	sub	r3, r3, #4
    a58c:	cmp	r0, r3
    a590:	beq	e0d4 <bt_compidtostr@@Base+0x3ca8>
    a594:	bhi	c884 <bt_compidtostr@@Base+0x2458>
    a598:	sub	r3, r3, #2
    a59c:	cmp	r0, r3
    a5a0:	beq	fefc <bt_compidtostr@@Base+0x5ad0>
    a5a4:	bls	fef0 <bt_compidtostr@@Base+0x5ac4>
    a5a8:	ldr	r0, [pc, #3360]	; b2d0 <bt_compidtostr@@Base+0xea4>
    a5ac:	add	r0, pc, r0
    a5b0:	bx	lr
    a5b4:	ldr	r3, [pc, #3352]	; b2d4 <bt_compidtostr@@Base+0xea8>
    a5b8:	cmp	r0, r3
    a5bc:	beq	f4c4 <bt_compidtostr@@Base+0x5098>
    a5c0:	bls	a630 <bt_compidtostr@@Base+0x204>
    a5c4:	ldr	r3, [pc, #3340]	; b2d8 <bt_compidtostr@@Base+0xeac>
    a5c8:	cmp	r0, r3
    a5cc:	beq	f3ec <bt_compidtostr@@Base+0x4fc0>
    a5d0:	bhi	a89c <bt_compidtostr@@Base+0x470>
    a5d4:	sub	r3, r3, #33	; 0x21
    a5d8:	cmp	r0, r3
    a5dc:	beq	f3e0 <bt_compidtostr@@Base+0x4fb4>
    a5e0:	bls	ac04 <bt_compidtostr@@Base+0x7d8>
    a5e4:	ldr	r3, [pc, #3312]	; b2dc <bt_compidtostr@@Base+0xeb0>
    a5e8:	cmp	r0, r3
    a5ec:	beq	f728 <bt_compidtostr@@Base+0x52fc>
    a5f0:	bhi	aec8 <bt_compidtostr@@Base+0xa9c>
    a5f4:	sub	r3, r3, #8
    a5f8:	cmp	r0, r3
    a5fc:	beq	f710 <bt_compidtostr@@Base+0x52e4>
    a600:	bhi	bc80 <bt_compidtostr@@Base+0x1854>
    a604:	sub	r3, r3, #4
    a608:	cmp	r0, r3
    a60c:	beq	e1f4 <bt_compidtostr@@Base+0x3dc8>
    a610:	bhi	cb0c <bt_compidtostr@@Base+0x26e0>
    a614:	sub	r3, r3, #2
    a618:	cmp	r0, r3
    a61c:	beq	fddc <bt_compidtostr@@Base+0x59b0>
    a620:	bls	fdd0 <bt_compidtostr@@Base+0x59a4>
    a624:	ldr	r0, [pc, #3252]	; b2e0 <bt_compidtostr@@Base+0xeb4>
    a628:	add	r0, pc, r0
    a62c:	bx	lr
    a630:	cmp	r0, #844	; 0x34c
    a634:	beq	f3d4 <bt_compidtostr@@Base+0x4fa8>
    a638:	bhi	a7bc <bt_compidtostr@@Base+0x390>
    a63c:	sub	r3, r3, #98	; 0x62
    a640:	cmp	r0, r3
    a644:	beq	f3c8 <bt_compidtostr@@Base+0x4f9c>
    a648:	bls	ace0 <bt_compidtostr@@Base+0x8b4>
    a64c:	ldr	r3, [pc, #3216]	; b2e4 <bt_compidtostr@@Base+0xeb8>
    a650:	cmp	r0, r3
    a654:	beq	e68c <bt_compidtostr@@Base+0x4260>
    a658:	bhi	af18 <bt_compidtostr@@Base+0xaec>
    a65c:	sub	r3, r3, #8
    a660:	cmp	r0, r3
    a664:	beq	f848 <bt_compidtostr@@Base+0x541c>
    a668:	bhi	ba4c <bt_compidtostr@@Base+0x1620>
    a66c:	sub	r3, r3, #4
    a670:	cmp	r0, r3
    a674:	beq	e194 <bt_compidtostr@@Base+0x3d68>
    a678:	bhi	ca2c <bt_compidtostr@@Base+0x2600>
    a67c:	sub	r3, r3, #2
    a680:	cmp	r0, r3
    a684:	beq	fe6c <bt_compidtostr@@Base+0x5a40>
    a688:	bls	fe60 <bt_compidtostr@@Base+0x5a34>
    a68c:	ldr	r0, [pc, #3156]	; b2e8 <bt_compidtostr@@Base+0xebc>
    a690:	add	r0, pc, r0
    a694:	bx	lr
    a698:	cmp	r0, #324	; 0x144
    a69c:	beq	fd04 <bt_compidtostr@@Base+0x58d8>
    a6a0:	bhi	a850 <bt_compidtostr@@Base+0x424>
    a6a4:	sub	r3, r3, #98	; 0x62
    a6a8:	cmp	r0, r3
    a6ac:	beq	fcf8 <bt_compidtostr@@Base+0x58cc>
    a6b0:	bls	abb8 <bt_compidtostr@@Base+0x78c>
    a6b4:	ldr	r3, [pc, #3120]	; b2ec <bt_compidtostr@@Base+0xec0>
    a6b8:	cmp	r0, r3
    a6bc:	beq	e4ac <bt_compidtostr@@Base+0x4080>
    a6c0:	bhi	b0a0 <bt_compidtostr@@Base+0xc74>
    a6c4:	sub	r3, r3, #8
    a6c8:	cmp	r0, r3
    a6cc:	beq	f860 <bt_compidtostr@@Base+0x5434>
    a6d0:	bhi	ba9c <bt_compidtostr@@Base+0x1670>
    a6d4:	sub	r3, r3, #4
    a6d8:	cmp	r0, r3
    a6dc:	beq	e104 <bt_compidtostr@@Base+0x3cd8>
    a6e0:	bhi	c8f0 <bt_compidtostr@@Base+0x24c4>
    a6e4:	sub	r3, r3, #2
    a6e8:	cmp	r0, r3
    a6ec:	beq	1013c <bt_compidtostr@@Base+0x5d10>
    a6f0:	bls	10130 <bt_compidtostr@@Base+0x5d04>
    a6f4:	ldr	r0, [pc, #3060]	; b2f0 <bt_compidtostr@@Base+0xec4>
    a6f8:	add	r0, pc, r0
    a6fc:	bx	lr
    a700:	cmp	r0, #584	; 0x248
    a704:	beq	fcd4 <bt_compidtostr@@Base+0x58a8>
    a708:	bhi	a8f4 <bt_compidtostr@@Base+0x4c8>
    a70c:	sub	r3, r3, #98	; 0x62
    a710:	cmp	r0, r3
    a714:	beq	fcc8 <bt_compidtostr@@Base+0x589c>
    a718:	bls	adb4 <bt_compidtostr@@Base+0x988>
    a71c:	ldr	r3, [pc, #3024]	; b2f4 <bt_compidtostr@@Base+0xec8>
    a720:	cmp	r0, r3
    a724:	beq	e8cc <bt_compidtostr@@Base+0x44a0>
    a728:	bhi	af6c <bt_compidtostr@@Base+0xb40>
    a72c:	sub	r3, r3, #8
    a730:	cmp	r0, r3
    a734:	beq	f6b0 <bt_compidtostr@@Base+0x5284>
    a738:	bhi	bc2c <bt_compidtostr@@Base+0x1800>
    a73c:	sub	r3, r3, #4
    a740:	cmp	r0, r3
    a744:	beq	e23c <bt_compidtostr@@Base+0x3e10>
    a748:	bhi	cba8 <bt_compidtostr@@Base+0x277c>
    a74c:	sub	r3, r3, #2
    a750:	cmp	r0, r3
    a754:	beq	f95c <bt_compidtostr@@Base+0x5530>
    a758:	bls	f950 <bt_compidtostr@@Base+0x5524>
    a75c:	ldr	r0, [pc, #2964]	; b2f8 <bt_compidtostr@@Base+0xecc>
    a760:	add	r0, pc, r0
    a764:	bx	lr
    a768:	cmp	r0, #64	; 0x40
    a76c:	beq	fe3c <bt_compidtostr@@Base+0x5a10>
    a770:	bhi	a808 <bt_compidtostr@@Base+0x3dc>
    a774:	cmp	r0, #31
    a778:	beq	fe30 <bt_compidtostr@@Base+0x5a04>
    a77c:	bls	aa78 <bt_compidtostr@@Base+0x64c>
    a780:	cmp	r0, #47	; 0x2f
    a784:	beq	f884 <bt_compidtostr@@Base+0x5458>
    a788:	bhi	ae88 <bt_compidtostr@@Base+0xa5c>
    a78c:	cmp	r0, #39	; 0x27
    a790:	beq	f86c <bt_compidtostr@@Base+0x5440>
    a794:	bhi	bac8 <bt_compidtostr@@Base+0x169c>
    a798:	cmp	r0, #35	; 0x23
    a79c:	beq	e134 <bt_compidtostr@@Base+0x3d08>
    a7a0:	bhi	c960 <bt_compidtostr@@Base+0x2534>
    a7a4:	cmp	r0, #33	; 0x21
    a7a8:	beq	fd7c <bt_compidtostr@@Base+0x5950>
    a7ac:	bls	fd70 <bt_compidtostr@@Base+0x5944>
    a7b0:	ldr	r0, [pc, #2884]	; b2fc <bt_compidtostr@@Base+0xed0>
    a7b4:	add	r0, pc, r0
    a7b8:	bx	lr
    a7bc:	cmp	r0, #876	; 0x36c
    a7c0:	beq	f470 <bt_compidtostr@@Base+0x5044>
    a7c4:	bls	aa38 <bt_compidtostr@@Base+0x60c>
    a7c8:	cmp	r0, #892	; 0x37c
    a7cc:	beq	f230 <bt_compidtostr@@Base+0x4e04>
    a7d0:	bhi	b0f4 <bt_compidtostr@@Base+0xcc8>
    a7d4:	cmp	r0, #884	; 0x374
    a7d8:	beq	f7a0 <bt_compidtostr@@Base+0x5374>
    a7dc:	bhi	bb8c <bt_compidtostr@@Base+0x1760>
    a7e0:	cmp	r0, #880	; 0x370
    a7e4:	beq	e11c <bt_compidtostr@@Base+0x3cf0>
    a7e8:	bhi	c928 <bt_compidtostr@@Base+0x24fc>
    a7ec:	ldr	r3, [pc, #2828]	; b300 <bt_compidtostr@@Base+0xed4>
    a7f0:	cmp	r0, r3
    a7f4:	beq	f6d4 <bt_compidtostr@@Base+0x52a8>
    a7f8:	bls	f6c8 <bt_compidtostr@@Base+0x529c>
    a7fc:	ldr	r0, [pc, #2816]	; b304 <bt_compidtostr@@Base+0xed8>
    a800:	add	r0, pc, r0
    a804:	bx	lr
    a808:	cmp	r0, #96	; 0x60
    a80c:	beq	f47c <bt_compidtostr@@Base+0x5050>
    a810:	bls	aaf4 <bt_compidtostr@@Base+0x6c8>
    a814:	cmp	r0, #112	; 0x70
    a818:	beq	f170 <bt_compidtostr@@Base+0x4d44>
    a81c:	bhi	b224 <bt_compidtostr@@Base+0xdf8>
    a820:	cmp	r0, #104	; 0x68
    a824:	beq	f788 <bt_compidtostr@@Base+0x535c>
    a828:	bhi	baec <bt_compidtostr@@Base+0x16c0>
    a82c:	cmp	r0, #100	; 0x64
    a830:	beq	e0a4 <bt_compidtostr@@Base+0x3c78>
    a834:	bhi	c820 <bt_compidtostr@@Base+0x23f4>
    a838:	cmp	r0, #98	; 0x62
    a83c:	beq	ffbc <bt_compidtostr@@Base+0x5b90>
    a840:	bls	ffb0 <bt_compidtostr@@Base+0x5b84>
    a844:	ldr	r0, [pc, #2748]	; b308 <bt_compidtostr@@Base+0xedc>
    a848:	add	r0, pc, r0
    a84c:	bx	lr
    a850:	cmp	r0, #356	; 0x164
    a854:	beq	f488 <bt_compidtostr@@Base+0x505c>
    a858:	bls	aab4 <bt_compidtostr@@Base+0x688>
    a85c:	cmp	r0, #372	; 0x174
    a860:	beq	e62c <bt_compidtostr@@Base+0x4200>
    a864:	bhi	b698 <bt_compidtostr@@Base+0x126c>
    a868:	cmp	r0, #364	; 0x16c
    a86c:	beq	f7dc <bt_compidtostr@@Base+0x53b0>
    a870:	bhi	bc04 <bt_compidtostr@@Base+0x17d8>
    a874:	cmp	r0, #360	; 0x168
    a878:	beq	e164 <bt_compidtostr@@Base+0x3d38>
    a87c:	bhi	c9c4 <bt_compidtostr@@Base+0x2598>
    a880:	ldr	r3, [pc, #2692]	; b30c <bt_compidtostr@@Base+0xee0>
    a884:	cmp	r0, r3
    a888:	beq	1007c <bt_compidtostr@@Base+0x5c50>
    a88c:	bls	10070 <bt_compidtostr@@Base+0x5c44>
    a890:	ldr	r0, [pc, #2680]	; b310 <bt_compidtostr@@Base+0xee4>
    a894:	add	r0, pc, r0
    a898:	bx	lr
    a89c:	ldr	r3, [pc, #2672]	; b314 <bt_compidtostr@@Base+0xee8>
    a8a0:	cmp	r0, r3
    a8a4:	beq	f3f8 <bt_compidtostr@@Base+0x4fcc>
    a8a8:	bls	ab30 <bt_compidtostr@@Base+0x704>
    a8ac:	ldr	r3, [pc, #2660]	; b318 <bt_compidtostr@@Base+0xeec>
    a8b0:	cmp	r0, r3
    a8b4:	beq	f110 <bt_compidtostr@@Base+0x4ce4>
    a8b8:	bhi	b644 <bt_compidtostr@@Base+0x1218>
    a8bc:	sub	r3, r3, #8
    a8c0:	cmp	r0, r3
    a8c4:	beq	f7d0 <bt_compidtostr@@Base+0x53a4>
    a8c8:	bhi	bbdc <bt_compidtostr@@Base+0x17b0>
    a8cc:	sub	r3, r3, #4
    a8d0:	cmp	r0, r3
    a8d4:	beq	e3a4 <bt_compidtostr@@Base+0x3f78>
    a8d8:	bhi	cec0 <bt_compidtostr@@Base+0x2a94>
    a8dc:	cmp	r0, #1008	; 0x3f0
    a8e0:	beq	ffec <bt_compidtostr@@Base+0x5bc0>
    a8e4:	bls	ffe0 <bt_compidtostr@@Base+0x5bb4>
    a8e8:	ldr	r0, [pc, #2604]	; b31c <bt_compidtostr@@Base+0xef0>
    a8ec:	add	r0, pc, r0
    a8f0:	bx	lr
    a8f4:	cmp	r0, #616	; 0x268
    a8f8:	beq	f494 <bt_compidtostr@@Base+0x5068>
    a8fc:	bls	ab78 <bt_compidtostr@@Base+0x74c>
    a900:	cmp	r0, #632	; 0x278
    a904:	beq	f0b0 <bt_compidtostr@@Base+0x4c84>
    a908:	bhi	b18c <bt_compidtostr@@Base+0xd60>
    a90c:	cmp	r0, #624	; 0x270
    a910:	beq	db58 <bt_compidtostr@@Base+0x372c>
    a914:	bhi	bcf8 <bt_compidtostr@@Base+0x18cc>
    a918:	cmp	r0, #620	; 0x26c
    a91c:	beq	e1c4 <bt_compidtostr@@Base+0x3d98>
    a920:	bhi	ca9c <bt_compidtostr@@Base+0x2670>
    a924:	ldr	r3, [pc, #2548]	; b320 <bt_compidtostr@@Base+0xef4>
    a928:	cmp	r0, r3
    a92c:	beq	101fc <bt_compidtostr@@Base+0x5dd0>
    a930:	bls	101f0 <bt_compidtostr@@Base+0x5dc4>
    a934:	ldr	r0, [pc, #2536]	; b324 <bt_compidtostr@@Base+0xef8>
    a938:	add	r0, pc, r0
    a93c:	bx	lr
    a940:	ldr	r3, [pc, #2528]	; b328 <bt_compidtostr@@Base+0xefc>
    a944:	cmp	r0, r3
    a948:	beq	f404 <bt_compidtostr@@Base+0x4fd8>
    a94c:	bls	ac98 <bt_compidtostr@@Base+0x86c>
    a950:	ldr	r3, [pc, #2516]	; b32c <bt_compidtostr@@Base+0xf00>
    a954:	cmp	r0, r3
    a958:	beq	e5cc <bt_compidtostr@@Base+0x41a0>
    a95c:	bhi	b1d4 <bt_compidtostr@@Base+0xda8>
    a960:	sub	r3, r3, #8
    a964:	cmp	r0, r3
    a968:	beq	db7c <bt_compidtostr@@Base+0x3750>
    a96c:	bhi	bd20 <bt_compidtostr@@Base+0x18f4>
    a970:	sub	r3, r3, #4
    a974:	cmp	r0, r3
    a978:	beq	e344 <bt_compidtostr@@Base+0x3f18>
    a97c:	bhi	cdf8 <bt_compidtostr@@Base+0x29cc>
    a980:	cmp	r0, #748	; 0x2ec
    a984:	beq	1025c <bt_compidtostr@@Base+0x5e30>
    a988:	bls	10250 <bt_compidtostr@@Base+0x5e24>
    a98c:	ldr	r0, [pc, #2460]	; b330 <bt_compidtostr@@Base+0xf04>
    a990:	add	r0, pc, r0
    a994:	bx	lr
    a998:	ldr	r3, [pc, #2452]	; b334 <bt_compidtostr@@Base+0xf08>
    a99c:	cmp	r0, r3
    a9a0:	beq	f3b0 <bt_compidtostr@@Base+0x4f84>
    a9a4:	bls	ac50 <bt_compidtostr@@Base+0x824>
    a9a8:	ldr	r3, [pc, #2440]	; b338 <bt_compidtostr@@Base+0xf0c>
    a9ac:	cmp	r0, r3
    a9b0:	beq	e80c <bt_compidtostr@@Base+0x43e0>
    a9b4:	bhi	b13c <bt_compidtostr@@Base+0xd10>
    a9b8:	sub	r3, r3, #8
    a9bc:	cmp	r0, r3
    a9c0:	beq	f6bc <bt_compidtostr@@Base+0x5290>
    a9c4:	bhi	bc58 <bt_compidtostr@@Base+0x182c>
    a9c8:	sub	r3, r3, #4
    a9cc:	cmp	r0, r3
    a9d0:	beq	e284 <bt_compidtostr@@Base+0x3e58>
    a9d4:	bhi	cc4c <bt_compidtostr@@Base+0x2820>
    a9d8:	cmp	r0, #488	; 0x1e8
    a9dc:	beq	1019c <bt_compidtostr@@Base+0x5d70>
    a9e0:	bls	10190 <bt_compidtostr@@Base+0x5d64>
    a9e4:	ldr	r0, [pc, #2384]	; b33c <bt_compidtostr@@Base+0xf10>
    a9e8:	add	r0, pc, r0
    a9ec:	bx	lr
    a9f0:	cmp	r0, #226	; 0xe2
    a9f4:	beq	f3bc <bt_compidtostr@@Base+0x4f90>
    a9f8:	bls	ad2c <bt_compidtostr@@Base+0x900>
    a9fc:	cmp	r0, #242	; 0xf2
    aa00:	beq	e7ac <bt_compidtostr@@Base+0x4380>
    aa04:	bhi	b264 <bt_compidtostr@@Base+0xe38>
    aa08:	cmp	r0, #234	; 0xea
    aa0c:	beq	f794 <bt_compidtostr@@Base+0x5368>
    aa10:	bhi	bb10 <bt_compidtostr@@Base+0x16e4>
    aa14:	cmp	r0, #230	; 0xe6
    aa18:	beq	e224 <bt_compidtostr@@Base+0x3df8>
    aa1c:	bhi	cb78 <bt_compidtostr@@Base+0x274c>
    aa20:	cmp	r0, #228	; 0xe4
    aa24:	beq	1001c <bt_compidtostr@@Base+0x5bf0>
    aa28:	bls	10010 <bt_compidtostr@@Base+0x5be4>
    aa2c:	ldr	r0, [pc, #2316]	; b340 <bt_compidtostr@@Base+0xf14>
    aa30:	add	r0, pc, r0
    aa34:	bx	lr
    aa38:	cmp	r0, #860	; 0x35c
    aa3c:	beq	fb3c <bt_compidtostr@@Base+0x5710>
    aa40:	bhi	b778 <bt_compidtostr@@Base+0x134c>
    aa44:	cmp	r0, #852	; 0x354
    aa48:	beq	dd5c <bt_compidtostr@@Base+0x3930>
    aa4c:	bhi	bf64 <bt_compidtostr@@Base+0x1b38>
    aa50:	cmp	r0, #848	; 0x350
    aa54:	beq	e20c <bt_compidtostr@@Base+0x3de0>
    aa58:	bhi	cb44 <bt_compidtostr@@Base+0x2718>
    aa5c:	ldr	r3, [pc, #2272]	; b344 <bt_compidtostr@@Base+0xf18>
    aa60:	cmp	r0, r3
    aa64:	beq	fc5c <bt_compidtostr@@Base+0x5830>
    aa68:	bls	fc50 <bt_compidtostr@@Base+0x5824>
    aa6c:	ldr	r0, [pc, #2260]	; b348 <bt_compidtostr@@Base+0xf1c>
    aa70:	add	r0, pc, r0
    aa74:	bx	lr
    aa78:	cmp	r0, #15
    aa7c:	beq	fa94 <bt_compidtostr@@Base+0x5668>
    aa80:	bhi	b9b0 <bt_compidtostr@@Base+0x1584>
    aa84:	cmp	r0, #7
    aa88:	beq	d93c <bt_compidtostr@@Base+0x3510>
    aa8c:	bhi	c1e8 <bt_compidtostr@@Base+0x1dbc>
    aa90:	cmp	r0, #3
    aa94:	beq	e32c <bt_compidtostr@@Base+0x3f00>
    aa98:	bhi	cdc4 <bt_compidtostr@@Base+0x2998>
    aa9c:	cmp	r0, #1
    aaa0:	beq	faac <bt_compidtostr@@Base+0x5680>
    aaa4:	bls	faa0 <bt_compidtostr@@Base+0x5674>
    aaa8:	ldr	r0, [pc, #2204]	; b34c <bt_compidtostr@@Base+0xf20>
    aaac:	add	r0, pc, r0
    aab0:	bx	lr
    aab4:	cmp	r0, #340	; 0x154
    aab8:	beq	fa7c <bt_compidtostr@@Base+0x5650>
    aabc:	bhi	b940 <bt_compidtostr@@Base+0x1514>
    aac0:	cmp	r0, #332	; 0x14c
    aac4:	beq	d8ac <bt_compidtostr@@Base+0x3480>
    aac8:	bhi	c0a4 <bt_compidtostr@@Base+0x1c78>
    aacc:	cmp	r0, #328	; 0x148
    aad0:	beq	e1ac <bt_compidtostr@@Base+0x3d80>
    aad4:	bhi	ca64 <bt_compidtostr@@Base+0x2638>
    aad8:	ldr	r3, [pc, #2160]	; b350 <bt_compidtostr@@Base+0xf24>
    aadc:	cmp	r0, r3
    aae0:	beq	fadc <bt_compidtostr@@Base+0x56b0>
    aae4:	bls	fad0 <bt_compidtostr@@Base+0x56a4>
    aae8:	ldr	r0, [pc, #2148]	; b354 <bt_compidtostr@@Base+0xf28>
    aaec:	add	r0, pc, r0
    aaf0:	bx	lr
    aaf4:	cmp	r0, #80	; 0x50
    aaf8:	beq	f9bc <bt_compidtostr@@Base+0x5590>
    aafc:	bhi	b85c <bt_compidtostr@@Base+0x1430>
    ab00:	cmp	r0, #72	; 0x48
    ab04:	beq	d96c <bt_compidtostr@@Base+0x3540>
    ab08:	bhi	c144 <bt_compidtostr@@Base+0x1d18>
    ab0c:	cmp	r0, #68	; 0x44
    ab10:	beq	d7ec <bt_compidtostr@@Base+0x33c0>
    ab14:	bhi	d61c <bt_compidtostr@@Base+0x31f0>
    ab18:	cmp	r0, #66	; 0x42
    ab1c:	beq	fbcc <bt_compidtostr@@Base+0x57a0>
    ab20:	bls	fbc0 <bt_compidtostr@@Base+0x5794>
    ab24:	ldr	r0, [pc, #2092]	; b358 <bt_compidtostr@@Base+0xf2c>
    ab28:	add	r0, pc, r0
    ab2c:	bx	lr
    ab30:	sub	r3, r3, #16
    ab34:	cmp	r0, r3
    ab38:	beq	f734 <bt_compidtostr@@Base+0x5308>
    ab3c:	bhi	b710 <bt_compidtostr@@Base+0x12e4>
    ab40:	sub	r3, r3, #8
    ab44:	cmp	r0, r3
    ab48:	beq	dc9c <bt_compidtostr@@Base+0x3870>
    ab4c:	bhi	be68 <bt_compidtostr@@Base+0x1a3c>
    ab50:	sub	r3, r3, #4
    ab54:	cmp	r0, r3
    ab58:	beq	e2e4 <bt_compidtostr@@Base+0x3eb8>
    ab5c:	bhi	cd24 <bt_compidtostr@@Base+0x28f8>
    ab60:	cmp	r0, #976	; 0x3d0
    ab64:	beq	100dc <bt_compidtostr@@Base+0x5cb0>
    ab68:	bls	100d0 <bt_compidtostr@@Base+0x5ca4>
    ab6c:	ldr	r0, [pc, #2024]	; b35c <bt_compidtostr@@Base+0xf30>
    ab70:	add	r0, pc, r0
    ab74:	bx	lr
    ab78:	cmp	r0, #600	; 0x258
    ab7c:	beq	f830 <bt_compidtostr@@Base+0x5404>
    ab80:	bhi	b9e0 <bt_compidtostr@@Base+0x15b4>
    ab84:	cmp	r0, #592	; 0x250
    ab88:	beq	d87c <bt_compidtostr@@Base+0x3450>
    ab8c:	bhi	c0f0 <bt_compidtostr@@Base+0x1cc4>
    ab90:	cmp	r0, #588	; 0x24c
    ab94:	beq	e0bc <bt_compidtostr@@Base+0x3c90>
    ab98:	bhi	c850 <bt_compidtostr@@Base+0x2424>
    ab9c:	ldr	r3, [pc, #1980]	; b360 <bt_compidtostr@@Base+0xf34>
    aba0:	cmp	r0, r3
    aba4:	beq	f8fc <bt_compidtostr@@Base+0x54d0>
    aba8:	bls	f8f0 <bt_compidtostr@@Base+0x54c4>
    abac:	ldr	r0, [pc, #1968]	; b364 <bt_compidtostr@@Base+0xf38>
    abb0:	add	r0, pc, r0
    abb4:	bx	lr
    abb8:	sub	r3, r3, #16
    abbc:	cmp	r0, r3
    abc0:	beq	f9d4 <bt_compidtostr@@Base+0x55a8>
    abc4:	bhi	b8c8 <bt_compidtostr@@Base+0x149c>
    abc8:	sub	r3, r3, #8
    abcc:	cmp	r0, r3
    abd0:	beq	ddbc <bt_compidtostr@@Base+0x3990>
    abd4:	bhi	bfb8 <bt_compidtostr@@Base+0x1b8c>
    abd8:	sub	r3, r3, #4
    abdc:	cmp	r0, r3
    abe0:	beq	e0ec <bt_compidtostr@@Base+0x3cc0>
    abe4:	bhi	c8b8 <bt_compidtostr@@Base+0x248c>
    abe8:	sub	r3, r3, #2
    abec:	cmp	r0, r3
    abf0:	beq	f9ec <bt_compidtostr@@Base+0x55c0>
    abf4:	bls	f9e0 <bt_compidtostr@@Base+0x55b4>
    abf8:	ldr	r0, [pc, #1896]	; b368 <bt_compidtostr@@Base+0xf3c>
    abfc:	add	r0, pc, r0
    ac00:	bx	lr
    ac04:	sub	r3, r3, #16
    ac08:	cmp	r0, r3
    ac0c:	beq	f9b0 <bt_compidtostr@@Base+0x5584>
    ac10:	bhi	b820 <bt_compidtostr@@Base+0x13f4>
    ac14:	sub	r3, r3, #8
    ac18:	cmp	r0, r3
    ac1c:	beq	d978 <bt_compidtostr@@Base+0x354c>
    ac20:	bhi	c168 <bt_compidtostr@@Base+0x1d3c>
    ac24:	sub	r3, r3, #4
    ac28:	cmp	r0, r3
    ac2c:	beq	e2cc <bt_compidtostr@@Base+0x3ea0>
    ac30:	bhi	ccec <bt_compidtostr@@Base+0x28c0>
    ac34:	sub	r3, r3, #2
    ac38:	cmp	r0, r3
    ac3c:	beq	fb9c <bt_compidtostr@@Base+0x5770>
    ac40:	bls	fb90 <bt_compidtostr@@Base+0x5764>
    ac44:	ldr	r0, [pc, #1824]	; b36c <bt_compidtostr@@Base+0xf40>
    ac48:	add	r0, pc, r0
    ac4c:	bx	lr
    ac50:	sub	r3, r3, #16
    ac54:	cmp	r0, r3
    ac58:	beq	f83c <bt_compidtostr@@Base+0x5410>
    ac5c:	bhi	ba14 <bt_compidtostr@@Base+0x15e8>
    ac60:	sub	r3, r3, #8
    ac64:	cmp	r0, r3
    ac68:	beq	d9fc <bt_compidtostr@@Base+0x35d0>
    ac6c:	bhi	c238 <bt_compidtostr@@Base+0x1e0c>
    ac70:	sub	r3, r3, #4
    ac74:	cmp	r0, r3
    ac78:	beq	e3bc <bt_compidtostr@@Base+0x3f90>
    ac7c:	bhi	cef4 <bt_compidtostr@@Base+0x2ac8>
    ac80:	cmp	r0, #456	; 0x1c8
    ac84:	beq	f92c <bt_compidtostr@@Base+0x5500>
    ac88:	bls	f920 <bt_compidtostr@@Base+0x54f4>
    ac8c:	ldr	r0, [pc, #1756]	; b370 <bt_compidtostr@@Base+0xf44>
    ac90:	add	r0, pc, r0
    ac94:	bx	lr
    ac98:	sub	r3, r3, #16
    ac9c:	cmp	r0, r3
    aca0:	beq	fb54 <bt_compidtostr@@Base+0x5728>
    aca4:	bhi	b7e8 <bt_compidtostr@@Base+0x13bc>
    aca8:	sub	r3, r3, #8
    acac:	cmp	r0, r3
    acb0:	beq	dc0c <bt_compidtostr@@Base+0x37e0>
    acb4:	bhi	bdc0 <bt_compidtostr@@Base+0x1994>
    acb8:	sub	r3, r3, #4
    acbc:	cmp	r0, r3
    acc0:	beq	e14c <bt_compidtostr@@Base+0x3d20>
    acc4:	bhi	c990 <bt_compidtostr@@Base+0x2564>
    acc8:	cmp	r0, #716	; 0x2cc
    accc:	beq	fb6c <bt_compidtostr@@Base+0x5740>
    acd0:	bls	fb60 <bt_compidtostr@@Base+0x5734>
    acd4:	ldr	r0, [pc, #1688]	; b374 <bt_compidtostr@@Base+0xf48>
    acd8:	add	r0, pc, r0
    acdc:	bx	lr
    ace0:	sub	r3, r3, #16
    ace4:	cmp	r0, r3
    ace8:	beq	f9c8 <bt_compidtostr@@Base+0x559c>
    acec:	bhi	b88c <bt_compidtostr@@Base+0x1460>
    acf0:	sub	r3, r3, #8
    acf4:	cmp	r0, r3
    acf8:	beq	d918 <bt_compidtostr@@Base+0x34ec>
    acfc:	bhi	c1bc <bt_compidtostr@@Base+0x1d90>
    ad00:	sub	r3, r3, #4
    ad04:	cmp	r0, r3
    ad08:	beq	e26c <bt_compidtostr@@Base+0x3e40>
    ad0c:	bhi	cc14 <bt_compidtostr@@Base+0x27e8>
    ad10:	sub	r3, r3, #2
    ad14:	cmp	r0, r3
    ad18:	beq	fa1c <bt_compidtostr@@Base+0x55f0>
    ad1c:	bls	fa10 <bt_compidtostr@@Base+0x55e4>
    ad20:	ldr	r0, [pc, #1616]	; b378 <bt_compidtostr@@Base+0xf4c>
    ad24:	add	r0, pc, r0
    ad28:	bx	lr
    ad2c:	cmp	r0, #210	; 0xd2
    ad30:	beq	fb30 <bt_compidtostr@@Base+0x5704>
    ad34:	bhi	b748 <bt_compidtostr@@Base+0x131c>
    ad38:	cmp	r0, #202	; 0xca
    ad3c:	beq	d8b8 <bt_compidtostr@@Base+0x348c>
    ad40:	bhi	c0cc <bt_compidtostr@@Base+0x1ca0>
    ad44:	cmp	r0, #198	; 0xc6
    ad48:	beq	e38c <bt_compidtostr@@Base+0x3f60>
    ad4c:	bhi	ce8c <bt_compidtostr@@Base+0x2a60>
    ad50:	cmp	r0, #196	; 0xc4
    ad54:	beq	fc2c <bt_compidtostr@@Base+0x5800>
    ad58:	bls	fc20 <bt_compidtostr@@Base+0x57f4>
    ad5c:	ldr	r0, [pc, #1560]	; b37c <bt_compidtostr@@Base+0xf50>
    ad60:	add	r0, pc, r0
    ad64:	bx	lr
    ad68:	sub	r3, r3, #16
    ad6c:	cmp	r0, r3
    ad70:	beq	fa88 <bt_compidtostr@@Base+0x565c>
    ad74:	bhi	b974 <bt_compidtostr@@Base+0x1548>
    ad78:	sub	r3, r3, #8
    ad7c:	cmp	r0, r3
    ad80:	beq	dd2c <bt_compidtostr@@Base+0x3900>
    ad84:	bhi	bf0c <bt_compidtostr@@Base+0x1ae0>
    ad88:	sub	r3, r3, #4
    ad8c:	cmp	r0, r3
    ad90:	beq	d81c <bt_compidtostr@@Base+0x33f0>
    ad94:	bhi	d684 <bt_compidtostr@@Base+0x3258>
    ad98:	sub	r3, r3, #2
    ad9c:	cmp	r0, r3
    ada0:	beq	fb0c <bt_compidtostr@@Base+0x56e0>
    ada4:	bls	fb00 <bt_compidtostr@@Base+0x56d4>
    ada8:	ldr	r0, [pc, #1488]	; b380 <bt_compidtostr@@Base+0xf54>
    adac:	add	r0, pc, r0
    adb0:	bx	lr
    adb4:	sub	r3, r3, #16
    adb8:	cmp	r0, r3
    adbc:	beq	fa70 <bt_compidtostr@@Base+0x5644>
    adc0:	bhi	b904 <bt_compidtostr@@Base+0x14d8>
    adc4:	sub	r3, r3, #8
    adc8:	cmp	r0, r3
    adcc:	beq	d948 <bt_compidtostr@@Base+0x351c>
    add0:	bhi	c20c <bt_compidtostr@@Base+0x1de0>
    add4:	sub	r3, r3, #4
    add8:	cmp	r0, r3
    addc:	beq	e3ec <bt_compidtostr@@Base+0x3fc0>
    ade0:	bhi	cf54 <bt_compidtostr@@Base+0x2b28>
    ade4:	sub	r3, r3, #2
    ade8:	cmp	r0, r3
    adec:	beq	fa4c <bt_compidtostr@@Base+0x5620>
    adf0:	bls	fa40 <bt_compidtostr@@Base+0x5614>
    adf4:	ldr	r0, [pc, #1416]	; b384 <bt_compidtostr@@Base+0xf58>
    adf8:	add	r0, pc, r0
    adfc:	bx	lr
    ae00:	cmp	r0, #145	; 0x91
    ae04:	beq	fd10 <bt_compidtostr@@Base+0x58e4>
    ae08:	bhi	b6e0 <bt_compidtostr@@Base+0x12b4>
    ae0c:	cmp	r0, #137	; 0x89
    ae10:	beq	f71c <bt_compidtostr@@Base+0x52f0>
    ae14:	bhi	bcac <bt_compidtostr@@Base+0x1880>
    ae18:	cmp	r0, #133	; 0x85
    ae1c:	beq	e08c <bt_compidtostr@@Base+0x3c60>
    ae20:	bhi	c7ec <bt_compidtostr@@Base+0x23c0>
    ae24:	cmp	r0, #131	; 0x83
    ae28:	beq	fbfc <bt_compidtostr@@Base+0x57d0>
    ae2c:	bls	fbf0 <bt_compidtostr@@Base+0x57c4>
    ae30:	ldr	r0, [pc, #1360]	; b388 <bt_compidtostr@@Base+0xf5c>
    ae34:	add	r0, pc, r0
    ae38:	bx	lr
    ae3c:	sub	r3, r3, #16
    ae40:	cmp	r0, r3
    ae44:	beq	fb48 <bt_compidtostr@@Base+0x571c>
    ae48:	bhi	b7ac <bt_compidtostr@@Base+0x1380>
    ae4c:	sub	r3, r3, #8
    ae50:	cmp	r0, r3
    ae54:	beq	d888 <bt_compidtostr@@Base+0x345c>
    ae58:	bhi	c118 <bt_compidtostr@@Base+0x1cec>
    ae5c:	sub	r3, r3, #4
    ae60:	cmp	r0, r3
    ae64:	beq	d7bc <bt_compidtostr@@Base+0x3390>
    ae68:	bhi	d6ec <bt_compidtostr@@Base+0x32c0>
    ae6c:	sub	r3, r3, #2
    ae70:	cmp	r0, r3
    ae74:	beq	fc8c <bt_compidtostr@@Base+0x5860>
    ae78:	bls	fc80 <bt_compidtostr@@Base+0x5854>
    ae7c:	ldr	r0, [pc, #1288]	; b38c <bt_compidtostr@@Base+0xf60>
    ae80:	add	r0, pc, r0
    ae84:	bx	lr
    ae88:	cmp	r0, #55	; 0x37
    ae8c:	beq	dbb8 <bt_compidtostr@@Base+0x378c>
    ae90:	bls	bd9c <bt_compidtostr@@Base+0x1970>
    ae94:	cmp	r0, #59	; 0x3b
    ae98:	beq	df90 <bt_compidtostr@@Base+0x3b64>
    ae9c:	bls	c5c4 <bt_compidtostr@@Base+0x2198>
    aea0:	cmp	r0, #61	; 0x3d
    aea4:	beq	e770 <bt_compidtostr@@Base+0x4344>
    aea8:	bcc	e764 <bt_compidtostr@@Base+0x4338>
    aeac:	cmp	r0, #62	; 0x3e
    aeb0:	beq	e758 <bt_compidtostr@@Base+0x432c>
    aeb4:	cmp	r0, #63	; 0x3f
    aeb8:	bne	e74c <bt_compidtostr@@Base+0x4320>
    aebc:	ldr	r0, [pc, #1228]	; b390 <bt_compidtostr@@Base+0xf64>
    aec0:	add	r0, pc, r0
    aec4:	bx	lr
    aec8:	ldr	r3, [pc, #1220]	; b394 <bt_compidtostr@@Base+0xf68>
    aecc:	cmp	r0, r3
    aed0:	beq	dd38 <bt_compidtostr@@Base+0x390c>
    aed4:	bls	bf38 <bt_compidtostr@@Base+0x1b0c>
    aed8:	ldr	r3, [pc, #1208]	; b398 <bt_compidtostr@@Base+0xf6c>
    aedc:	cmp	r0, r3
    aee0:	beq	dfa8 <bt_compidtostr@@Base+0x3b7c>
    aee4:	bls	c5f4 <bt_compidtostr@@Base+0x21c8>
    aee8:	ldr	r3, [pc, #1196]	; b39c <bt_compidtostr@@Base+0xf70>
    aeec:	cmp	r0, r3
    aef0:	beq	e6b0 <bt_compidtostr@@Base+0x4284>
    aef4:	bcc	e6a4 <bt_compidtostr@@Base+0x4278>
    aef8:	cmp	r0, #972	; 0x3cc
    aefc:	beq	e698 <bt_compidtostr@@Base+0x426c>
    af00:	add	r3, r3, #2
    af04:	cmp	r0, r3
    af08:	bne	e74c <bt_compidtostr@@Base+0x4320>
    af0c:	ldr	r0, [pc, #1164]	; b3a0 <bt_compidtostr@@Base+0xf74>
    af10:	add	r0, pc, r0
    af14:	bx	lr
    af18:	ldr	r3, [pc, #1156]	; b3a4 <bt_compidtostr@@Base+0xf78>
    af1c:	cmp	r0, r3
    af20:	beq	dc48 <bt_compidtostr@@Base+0x381c>
    af24:	bls	be3c <bt_compidtostr@@Base+0x1a10>
    af28:	ldr	r3, [pc, #1144]	; b3a8 <bt_compidtostr@@Base+0xf7c>
    af2c:	cmp	r0, r3
    af30:	beq	e020 <bt_compidtostr@@Base+0x3bf4>
    af34:	bls	c6fc <bt_compidtostr@@Base+0x22d0>
    af38:	ldr	r3, [pc, #1132]	; b3ac <bt_compidtostr@@Base+0xf80>
    af3c:	cmp	r0, r3
    af40:	beq	e8f0 <bt_compidtostr@@Base+0x44c4>
    af44:	bcc	e8e4 <bt_compidtostr@@Base+0x44b8>
    af48:	add	r3, r3, #1
    af4c:	cmp	r0, r3
    af50:	beq	e8d8 <bt_compidtostr@@Base+0x44ac>
    af54:	add	r3, r3, #1
    af58:	cmp	r0, r3
    af5c:	bne	e74c <bt_compidtostr@@Base+0x4320>
    af60:	ldr	r0, [pc, #1096]	; b3b0 <bt_compidtostr@@Base+0xf84>
    af64:	add	r0, pc, r0
    af68:	bx	lr
    af6c:	ldr	r3, [pc, #1088]	; b3b4 <bt_compidtostr@@Base+0xf88>
    af70:	cmp	r0, r3
    af74:	beq	db88 <bt_compidtostr@@Base+0x375c>
    af78:	bls	bd48 <bt_compidtostr@@Base+0x191c>
    af7c:	ldr	r3, [pc, #1076]	; b3b8 <bt_compidtostr@@Base+0xf8c>
    af80:	cmp	r0, r3
    af84:	beq	dff0 <bt_compidtostr@@Base+0x3bc4>
    af88:	bls	c694 <bt_compidtostr@@Base+0x2268>
    af8c:	ldr	r3, [pc, #1064]	; b3bc <bt_compidtostr@@Base+0xf90>
    af90:	cmp	r0, r3
    af94:	beq	e470 <bt_compidtostr@@Base+0x4044>
    af98:	bcc	e464 <bt_compidtostr@@Base+0x4038>
    af9c:	add	r3, r3, #1
    afa0:	cmp	r0, r3
    afa4:	beq	e458 <bt_compidtostr@@Base+0x402c>
    afa8:	add	r3, r3, #1
    afac:	cmp	r0, r3
    afb0:	bne	e74c <bt_compidtostr@@Base+0x4320>
    afb4:	ldr	r0, [pc, #1028]	; b3c0 <bt_compidtostr@@Base+0xf94>
    afb8:	add	r0, pc, r0
    afbc:	bx	lr
    afc0:	ldr	r3, [pc, #1020]	; b3c4 <bt_compidtostr@@Base+0xf98>
    afc4:	cmp	r0, r3
    afc8:	beq	dd68 <bt_compidtostr@@Base+0x393c>
    afcc:	bls	bf8c <bt_compidtostr@@Base+0x1b60>
    afd0:	ldr	r3, [pc, #1008]	; b3c8 <bt_compidtostr@@Base+0xf9c>
    afd4:	cmp	r0, r3
    afd8:	beq	e050 <bt_compidtostr@@Base+0x3c24>
    afdc:	bls	c764 <bt_compidtostr@@Base+0x2338>
    afe0:	ldr	r3, [pc, #996]	; b3cc <bt_compidtostr@@Base+0xfa0>
    afe4:	cmp	r0, r3
    afe8:	beq	f014 <bt_compidtostr@@Base+0x4be8>
    afec:	bcc	f008 <bt_compidtostr@@Base+0x4bdc>
    aff0:	cmp	r0, #452	; 0x1c4
    aff4:	beq	effc <bt_compidtostr@@Base+0x4bd0>
    aff8:	add	r3, r3, #2
    affc:	cmp	r0, r3
    b000:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b004:	ldr	r0, [pc, #964]	; b3d0 <bt_compidtostr@@Base+0xfa4>
    b008:	add	r0, pc, r0
    b00c:	bx	lr
    b010:	ldr	r3, [pc, #956]	; b3d4 <bt_compidtostr@@Base+0xfa8>
    b014:	cmp	r0, r3
    b018:	beq	dca8 <bt_compidtostr@@Base+0x387c>
    b01c:	bls	be90 <bt_compidtostr@@Base+0x1a64>
    b020:	ldr	r3, [pc, #944]	; b3d8 <bt_compidtostr@@Base+0xfac>
    b024:	cmp	r0, r3
    b028:	beq	e05c <bt_compidtostr@@Base+0x3c30>
    b02c:	bls	c780 <bt_compidtostr@@Base+0x2354>
    b030:	ldr	r3, [pc, #932]	; b3dc <bt_compidtostr@@Base+0xfb0>
    b034:	cmp	r0, r3
    b038:	beq	e530 <bt_compidtostr@@Base+0x4104>
    b03c:	bcc	e524 <bt_compidtostr@@Base+0x40f8>
    b040:	cmp	r0, #712	; 0x2c8
    b044:	beq	e518 <bt_compidtostr@@Base+0x40ec>
    b048:	add	r3, r3, #2
    b04c:	cmp	r0, r3
    b050:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b054:	ldr	r0, [pc, #900]	; b3e0 <bt_compidtostr@@Base+0xfb4>
    b058:	add	r0, pc, r0
    b05c:	bx	lr
    b060:	cmp	r0, #185	; 0xb9
    b064:	beq	ddc8 <bt_compidtostr@@Base+0x399c>
    b068:	bls	bfe4 <bt_compidtostr@@Base+0x1bb8>
    b06c:	cmp	r0, #189	; 0xbd
    b070:	beq	df78 <bt_compidtostr@@Base+0x3b4c>
    b074:	bls	c594 <bt_compidtostr@@Base+0x2168>
    b078:	cmp	r0, #191	; 0xbf
    b07c:	beq	e4d0 <bt_compidtostr@@Base+0x40a4>
    b080:	bcc	e4c4 <bt_compidtostr@@Base+0x4098>
    b084:	cmp	r0, #192	; 0xc0
    b088:	beq	e4b8 <bt_compidtostr@@Base+0x408c>
    b08c:	cmp	r0, #193	; 0xc1
    b090:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b094:	ldr	r0, [pc, #840]	; b3e4 <bt_compidtostr@@Base+0xfb8>
    b098:	add	r0, pc, r0
    b09c:	bx	lr
    b0a0:	ldr	r3, [pc, #832]	; b3e8 <bt_compidtostr@@Base+0xfbc>
    b0a4:	cmp	r0, r3
    b0a8:	beq	dc3c <bt_compidtostr@@Base+0x3810>
    b0ac:	bls	be10 <bt_compidtostr@@Base+0x19e4>
    b0b0:	ldr	r3, [pc, #820]	; b3ec <bt_compidtostr@@Base+0xfc0>
    b0b4:	cmp	r0, r3
    b0b8:	beq	dfc0 <bt_compidtostr@@Base+0x3b94>
    b0bc:	bls	c62c <bt_compidtostr@@Base+0x2200>
    b0c0:	ldr	r3, [pc, #808]	; b3f0 <bt_compidtostr@@Base+0xfc4>
    b0c4:	cmp	r0, r3
    b0c8:	beq	f254 <bt_compidtostr@@Base+0x4e28>
    b0cc:	bcc	f248 <bt_compidtostr@@Base+0x4e1c>
    b0d0:	add	r3, r3, #1
    b0d4:	cmp	r0, r3
    b0d8:	beq	f23c <bt_compidtostr@@Base+0x4e10>
    b0dc:	add	r3, r3, #1
    b0e0:	cmp	r0, r3
    b0e4:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b0e8:	ldr	r0, [pc, #772]	; b3f4 <bt_compidtostr@@Base+0xfc8>
    b0ec:	add	r0, pc, r0
    b0f0:	bx	lr
    b0f4:	cmp	r0, #900	; 0x384
    b0f8:	beq	dcd8 <bt_compidtostr@@Base+0x38ac>
    b0fc:	bls	bee4 <bt_compidtostr@@Base+0x1ab8>
    b100:	cmp	r0, #904	; 0x388
    b104:	beq	df48 <bt_compidtostr@@Base+0x3b1c>
    b108:	bls	c524 <bt_compidtostr@@Base+0x20f8>
    b10c:	ldr	r3, [pc, #740]	; b3f8 <bt_compidtostr@@Base+0xfcc>
    b110:	cmp	r0, r3
    b114:	beq	e830 <bt_compidtostr@@Base+0x4404>
    b118:	bcc	e824 <bt_compidtostr@@Base+0x43f8>
    b11c:	add	r3, r3, #1
    b120:	cmp	r0, r3
    b124:	beq	e818 <bt_compidtostr@@Base+0x43ec>
    b128:	cmp	r0, #908	; 0x38c
    b12c:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b130:	ldr	r0, [pc, #708]	; b3fc <bt_compidtostr@@Base+0xfd0>
    b134:	add	r0, pc, r0
    b138:	bx	lr
    b13c:	ldr	r3, [pc, #700]	; b400 <bt_compidtostr@@Base+0xfd4>
    b140:	cmp	r0, r3
    b144:	beq	dbac <bt_compidtostr@@Base+0x3780>
    b148:	bls	bd74 <bt_compidtostr@@Base+0x1948>
    b14c:	ldr	r3, [pc, #688]	; b404 <bt_compidtostr@@Base+0xfd8>
    b150:	cmp	r0, r3
    b154:	beq	e044 <bt_compidtostr@@Base+0x3c18>
    b158:	bls	c74c <bt_compidtostr@@Base+0x2320>
    b15c:	cmp	r0, #516	; 0x204
    b160:	beq	f0d4 <bt_compidtostr@@Base+0x4ca8>
    b164:	bcc	f0c8 <bt_compidtostr@@Base+0x4c9c>
    b168:	ldr	r3, [pc, #664]	; b408 <bt_compidtostr@@Base+0xfdc>
    b16c:	cmp	r0, r3
    b170:	beq	f0bc <bt_compidtostr@@Base+0x4c90>
    b174:	add	r3, r3, #1
    b178:	cmp	r0, r3
    b17c:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b180:	ldr	r0, [pc, #644]	; b40c <bt_compidtostr@@Base+0xfe0>
    b184:	add	r0, pc, r0
    b188:	bx	lr
    b18c:	cmp	r0, #640	; 0x280
    b190:	beq	dc18 <bt_compidtostr@@Base+0x37ec>
    b194:	bls	bde8 <bt_compidtostr@@Base+0x19bc>
    b198:	cmp	r0, #644	; 0x284
    b19c:	beq	df60 <bt_compidtostr@@Base+0x3b34>
    b1a0:	bls	c55c <bt_compidtostr@@Base+0x2130>
    b1a4:	ldr	r3, [pc, #612]	; b410 <bt_compidtostr@@Base+0xfe4>
    b1a8:	cmp	r0, r3
    b1ac:	beq	e5f0 <bt_compidtostr@@Base+0x41c4>
    b1b0:	bcc	e5e4 <bt_compidtostr@@Base+0x41b8>
    b1b4:	add	r3, r3, #1
    b1b8:	cmp	r0, r3
    b1bc:	beq	e5d8 <bt_compidtostr@@Base+0x41ac>
    b1c0:	cmp	r0, #648	; 0x288
    b1c4:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b1c8:	ldr	r0, [pc, #580]	; b414 <bt_compidtostr@@Base+0xfe8>
    b1cc:	add	r0, pc, r0
    b1d0:	bx	lr
    b1d4:	ldr	r3, [pc, #572]	; b418 <bt_compidtostr@@Base+0xfec>
    b1d8:	cmp	r0, r3
    b1dc:	beq	dccc <bt_compidtostr@@Base+0x38a0>
    b1e0:	bls	bebc <bt_compidtostr@@Base+0x1a90>
    b1e4:	ldr	r3, [pc, #560]	; b41c <bt_compidtostr@@Base+0xff0>
    b1e8:	cmp	r0, r3
    b1ec:	beq	e008 <bt_compidtostr@@Base+0x3bdc>
    b1f0:	bls	c6c8 <bt_compidtostr@@Base+0x229c>
    b1f4:	cmp	r0, #776	; 0x308
    b1f8:	beq	f194 <bt_compidtostr@@Base+0x4d68>
    b1fc:	bcc	f188 <bt_compidtostr@@Base+0x4d5c>
    b200:	ldr	r3, [pc, #536]	; b420 <bt_compidtostr@@Base+0xff4>
    b204:	cmp	r0, r3
    b208:	beq	f17c <bt_compidtostr@@Base+0x4d50>
    b20c:	add	r3, r3, #1
    b210:	cmp	r0, r3
    b214:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b218:	ldr	r0, [pc, #516]	; b424 <bt_compidtostr@@Base+0xff8>
    b21c:	add	r0, pc, r0
    b220:	bx	lr
    b224:	cmp	r0, #120	; 0x78
    b228:	beq	ddf8 <bt_compidtostr@@Base+0x39cc>
    b22c:	bls	c02c <bt_compidtostr@@Base+0x1c00>
    b230:	cmp	r0, #124	; 0x7c
    b234:	beq	dfd8 <bt_compidtostr@@Base+0x3bac>
    b238:	bls	c664 <bt_compidtostr@@Base+0x2238>
    b23c:	cmp	r0, #126	; 0x7e
    b240:	beq	e7d0 <bt_compidtostr@@Base+0x43a4>
    b244:	bcc	e7c4 <bt_compidtostr@@Base+0x4398>
    b248:	cmp	r0, #127	; 0x7f
    b24c:	beq	e7b8 <bt_compidtostr@@Base+0x438c>
    b250:	cmp	r0, #128	; 0x80
    b254:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b258:	ldr	r0, [pc, #456]	; b428 <bt_compidtostr@@Base+0xffc>
    b25c:	add	r0, pc, r0
    b260:	bx	lr
    b264:	cmp	r0, #250	; 0xfa
    b268:	beq	ddec <bt_compidtostr@@Base+0x39c0>
    b26c:	bls	c008 <bt_compidtostr@@Base+0x1bdc>
    b270:	cmp	r0, #254	; 0xfe
    b274:	beq	e038 <bt_compidtostr@@Base+0x3c0c>
    b278:	bls	c734 <bt_compidtostr@@Base+0x2308>
    b27c:	cmp	r0, #256	; 0x100
    b280:	beq	f134 <bt_compidtostr@@Base+0x4d08>
    b284:	bcc	f128 <bt_compidtostr@@Base+0x4cfc>
    b288:	ldr	r3, [pc, #412]	; b42c <bt_compidtostr@@Base+0x1000>
    b28c:	cmp	r0, r3
    b290:	beq	f11c <bt_compidtostr@@Base+0x4cf0>
    b294:	add	r3, r3, #1
    b298:	cmp	r0, r3
    b29c:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b2a0:	ldr	r0, [pc, #392]	; b430 <bt_compidtostr@@Base+0x1004>
    b2a4:	add	r0, pc, r0
    b2a8:	bx	lr
    b2ac:	andeq	r0, r0, r7, lsl #4
    b2b0:	andeq	r0, r0, fp, lsl #6
    b2b4:	andeq	r0, r0, sl, asr #5
    b2b8:			; <UNDEFINED> instruction: 0x000002b9
    b2bc:	strdeq	lr, [r0], -r8
    b2c0:	andeq	fp, r0, r4, asr pc
    b2c4:	andeq	r0, r0, r5, lsl #3
    b2c8:	andeq	r0, r0, r6, asr #3
    b2cc:			; <UNDEFINED> instruction: 0x000001b5
    b2d0:	muleq	r0, r0, r3
    b2d4:	andeq	r0, r0, sp, lsl #7
    b2d8:	andeq	r0, r0, lr, asr #7
    b2dc:			; <UNDEFINED> instruction: 0x000003bd
    b2e0:	andeq	pc, r0, r4, asr #24
    b2e4:	andeq	r0, r0, fp, lsr r3
    b2e8:	andeq	pc, r0, r8, lsr #4
    b2ec:	andeq	r0, r0, r3, lsr r1
    b2f0:	strdeq	ip, [r0], -r8
    b2f4:	andeq	r0, r0, r7, lsr r2
    b2f8:	andeq	sp, r0, r4, lsl ip
    b2fc:	muleq	r0, ip, r0
    b300:	andeq	r0, r0, lr, ror #6
    b304:	andeq	pc, r0, r4, lsl #11
    b308:	andeq	fp, r0, r0, lsr r6
    b30c:	andeq	r0, r0, r6, ror #2
    b310:			; <UNDEFINED> instruction: 0x0000cbbc
    b314:	andeq	r0, r0, lr, ror #7
    b318:	strdeq	r0, [r0], -lr
    b31c:	andeq	pc, r0, r4, asr #29
    b320:	andeq	r0, r0, sl, ror #4
    b324:	andeq	sp, r0, r8, lsl #31
    b328:	andeq	r0, r0, sl, ror #5
    b32c:	strdeq	r0, [r0], -sl
    b330:	andeq	lr, r0, r0, lsl #20
    b334:	andeq	r0, r0, r6, ror #3
    b338:	strdeq	r0, [r0], -r6
    b33c:	andeq	sp, r0, ip, lsr r4
    b340:	andeq	fp, r0, r4, lsr #31
    b344:	andeq	r0, r0, lr, asr #6
    b348:	muleq	r0, r4, r0
    b34c:	andeq	sl, r0, ip, asr #22
    b350:	andeq	r0, r0, r6, asr #2
    b354:	andeq	ip, r0, ip, asr #13
    b358:	andeq	fp, r0, ip, rrx
    b35c:			; <UNDEFINED> instruction: 0x0000f9b0
    b360:	andeq	r0, r0, sl, asr #4
    b364:	andeq	sp, r0, r0, ror #20
    b368:	andeq	ip, r0, r0, lsr #1
    b36c:	andeq	pc, r0, r0, asr #7
    b370:	andeq	ip, r0, r0, lsr pc
    b374:	andeq	lr, r0, ip, ror #7
    b378:	andeq	lr, r0, r0, lsr #18
    b37c:	andeq	fp, r0, r4, lsl #20
    b380:	andeq	ip, r0, r0, lsl #18
    b384:	andeq	sp, r0, r0, lsl #6
    b388:	andeq	fp, r0, ip, lsr #6
    b38c:	ldrdeq	sp, [r0], -r8
    b390:	andeq	sl, r0, r8, asr ip
    b394:	andeq	r0, r0, r5, asr #7
    b398:	andeq	r0, r0, r9, asr #7
    b39c:	andeq	r0, r0, fp, asr #7
    b3a0:	ldrdeq	pc, [r0], -r0
    b3a4:	andeq	r0, r0, r3, asr #6
    b3a8:	andeq	r0, r0, r7, asr #6
    b3ac:	andeq	r0, r0, r9, asr #6
    b3b0:	andeq	lr, r0, ip, asr #22
    b3b4:	andeq	r0, r0, pc, lsr r2
    b3b8:	andeq	r0, r0, r3, asr #4
    b3bc:	andeq	r0, r0, r5, asr #4
    b3c0:	andeq	sp, r0, r0, lsl r6
    b3c4:			; <UNDEFINED> instruction: 0x000001bd
    b3c8:	andeq	r0, r0, r1, asr #3
    b3cc:	andeq	r0, r0, r3, asr #3
    b3d0:	andeq	ip, r0, r8, ror fp
    b3d4:	andeq	r0, r0, r1, asr #5
    b3d8:	andeq	r0, r0, r5, asr #5
    b3dc:	andeq	r0, r0, r7, asr #5
    b3e0:	andeq	lr, r0, ip, lsl r0
    b3e4:	andeq	fp, r0, r8, ror r6
    b3e8:	andeq	r0, r0, fp, lsr r1
    b3ec:	andeq	r0, r0, pc, lsr r1
    b3f0:	andeq	r0, r0, r1, asr #2
    b3f4:	muleq	r0, r0, r0
    b3f8:	andeq	r0, r0, sl, lsl #7
    b3fc:	andeq	lr, r0, r0, lsr #29
    b400:	strdeq	r0, [r0], -lr
    b404:	andeq	r0, r0, r2, lsl #4
    b408:	andeq	r0, r0, r5, lsl #4
    b40c:	andeq	ip, r0, r0, lsr pc
    b410:	andeq	r0, r0, r6, lsl #5
    b414:	andeq	sp, r0, r8, asr #18
    b418:	andeq	r0, r0, r2, lsl #6
    b41c:	andeq	r0, r0, r6, lsl #6
    b420:	andeq	r0, r0, r9, lsl #6
    b424:	andeq	lr, r0, r4, ror #7
    b428:	muleq	r0, r4, lr
    b42c:	andeq	r0, r0, r1, lsl #2
    b430:	andeq	fp, r0, r4, lsl #19
    b434:	andeq	r0, r0, r6, lsl #8
    b438:	andeq	r0, r0, sl, lsl #8
    b43c:	andeq	r0, r0, ip, lsl #8
    b440:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b444:	andeq	pc, r0, r0, ror #6
    b448:	andeq	r0, r0, r2, lsl #3
    b44c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    b450:	andeq	sl, r0, r8, lsl #24
    b454:	andeq	r0, r0, r6, ror #7
    b458:	andeq	lr, r0, r4, lsr pc
    b45c:	andeq	fp, r0, ip, lsl r1
    b460:	andeq	r0, r0, lr, asr r3
    b464:			; <UNDEFINED> instruction: 0x0000e4b8
    b468:	andeq	r0, r0, r1, lsr #5
    b46c:	andeq	sp, r0, r8, ror r4
    b470:	andeq	r0, r0, r2, ror #5
    b474:	andeq	sp, r0, r4, ror #19
    b478:	andeq	r0, r0, r5, lsr #7
    b47c:	andeq	lr, r0, r0, ror #17
    b480:	andeq	sl, r0, r8, ror #8
    b484:	andeq	r0, r0, r3, lsr #6
    b488:	andeq	sp, r0, r4, asr #29
    b48c:	andeq	r0, r0, fp, lsl r1
    b490:	andeq	fp, r0, r4, ror #9
    b494:	andeq	r0, r0, pc, lsl r2
    b498:	andeq	ip, r0, r4, lsl #18
    b49c:	andeq	r0, r0, r6, asr r1
    b4a0:	andeq	fp, r0, r0, ror r9
    b4a4:	muleq	r0, sp, r1
    b4a8:	andeq	fp, r0, r8, asr #28
    b4ac:	andeq	r9, r0, ip, asr #26
    b4b0:	andeq	r0, r0, sl, asr r2
    b4b4:	andeq	ip, r0, ip, ror sp
    b4b8:	ldrdeq	r0, [r0], -lr
    b4bc:	muleq	r0, r8, r2
    b4c0:	andeq	r0, r0, r7, lsr r3
    b4c4:	ldrdeq	sp, [r0], -r8
    b4c8:	muleq	r0, r8, sl
    b4cc:	andeq	r0, r0, pc, lsr #2
    b4d0:	ldrdeq	fp, [r0], -ip
    b4d4:	andeq	r9, r0, ip, lsl lr
    b4d8:	andeq	sl, r0, ip, lsl #8
    b4dc:	andeq	sl, r0, r4, asr pc
    b4e0:			; <UNDEFINED> instruction: 0x000001b1
    b4e4:	andeq	fp, r0, r8, lsl #29
    b4e8:			; <UNDEFINED> instruction: 0x000002b5
    b4ec:	ldrdeq	sp, [r0], -r8
    b4f0:	andeq	r0, r0, r6, ror r3
    b4f4:	andeq	lr, r0, ip, ror #4
    b4f8:	andeq	r0, r0, r6, ror r1
    b4fc:	andeq	fp, r0, r4, lsr #19
    b500:	strdeq	r0, [r0], -sl
    b504:	andeq	lr, r0, r0, asr ip
    b508:	andeq	r0, r0, lr, ror #2
    b50c:	andeq	fp, r0, r8, lsr #17
    b510:	andeq	r0, r0, r3, lsr r2
    b514:	ldrdeq	ip, [r0], -r4
    b518:	strdeq	r0, [r0], -r2
    b51c:	andeq	ip, r0, ip, asr r2
    b520:			; <UNDEFINED> instruction: 0x000003b9
    b524:	andeq	lr, r0, ip, ror #12
    b528:	andeq	sl, r0, r8, lsr #10
    b52c:	andeq	r0, r0, r2, ror #3
    b530:	andeq	ip, r0, r8, lsr #1
    b534:	andeq	r0, r0, r2, ror r2
    b538:	andeq	ip, r0, r4, asr ip
    b53c:	strdeq	r0, [r0], -r6
    b540:	andeq	sp, r0, r4, ror #13
    b544:	andeq	ip, r0, r0, ror #14
    b548:	andeq	ip, r0, ip, lsl #4
    b54c:	andeq	r9, r0, ip, ror #23
    b550:	ldrdeq	r0, [r0], -r6
    b554:	andeq	sp, r0, r4, ror r3
    b558:	andeq	r0, r0, sl, ror r2
    b55c:	andeq	ip, r0, r0, lsl #24
    b560:	andeq	fp, r0, r4, lsl r2
    b564:	andeq	sp, r0, r0, ror #22
    b568:	ldrdeq	r0, [r0], -sl
    b56c:	andeq	lr, r0, r8, lsr r7
    b570:	andeq	sp, r0, ip, asr r0
    b574:	andeq	sp, r0, r4, lsl r6
    b578:	andeq	r0, r0, lr, ror r3
    b57c:			; <UNDEFINED> instruction: 0x0000dfb4
    b580:	muleq	r0, r1, r1
    b584:	andeq	fp, r0, r0, lsr #16
    b588:	andeq	lr, r0, r8, ror #8
    b58c:	andeq	r0, r0, r6, asr r3
    b590:	andeq	sp, r0, r4, asr #24
    b594:	andeq	fp, r0, ip, asr #21
    b598:	andeq	r0, r0, pc, lsl #2
    b59c:	andeq	sl, r0, ip, ror #26
    b5a0:	ldrdeq	sl, [r0], -ip
    b5a4:	andeq	sl, r0, r8, lsr #22
    b5a8:	andeq	r9, r0, ip, lsl #31
    b5ac:	andeq	r0, r0, r5, lsr #5
    b5b0:	andeq	ip, r0, r4, lsl #25
    b5b4:	andeq	lr, r0, r0, asr r8
    b5b8:	andeq	r0, r0, lr, asr #2
    b5bc:	muleq	r0, r4, r1
    b5c0:	andeq	sl, r0, ip, ror #13
    b5c4:	andeq	r0, r0, r2, asr r2
    b5c8:			; <UNDEFINED> instruction: 0x0000c5b8
    b5cc:	muleq	r0, r5, r2
    b5d0:	muleq	r0, r8, sl
    b5d4:	ldrdeq	r9, [r0], -ip
    b5d8:	muleq	r0, r9, r3
    b5dc:	strdeq	sp, [r0], -r4
    b5e0:	andeq	r0, r0, lr, asr r1
    b5e4:	ldrdeq	fp, [r0], -ip
    b5e8:	andeq	r0, r0, r7, lsl r3
    b5ec:	strdeq	sp, [r0], -ip
    b5f0:	andeq	r9, r0, r0, ror #8
    b5f4:	andeq	r0, r0, r3, lsl r2
    b5f8:	andeq	fp, r0, r0, lsl #31
    b5fc:	ldrdeq	r0, [r0], -r2
    b600:	strdeq	fp, [r0], -ip
    b604:	andeq	r0, r0, r6, ror #6
    b608:	andeq	sp, r0, r0, lsl #21
    b60c:	andeq	r0, r0, r9, lsr #7
    b610:	andeq	sp, r0, r4, lsr pc
    b614:	andeq	r0, r0, r6, ror #5
    b618:	andeq	ip, r0, r4, ror #31
    b61c:	andeq	sl, r0, r4, ror #1
    b620:	muleq	r0, r8, sl
    b624:	andeq	r0, r0, r3, lsr #4
    b628:	andeq	fp, r0, ip, lsl #31
    b62c:	andeq	r0, r0, sl, ror #7
    b630:	andeq	lr, r0, r4, lsr #7
    b634:	andeq	r0, r0, r7, lsr #6
    b638:	andeq	sp, r0, ip, ror r4
    b63c:	andeq	r0, r0, pc, lsl r1
    b640:			; <UNDEFINED> instruction: 0x0000aab0
    b644:	ldr	r3, [pc, #-536]	; b434 <bt_compidtostr@@Base+0x1008>
    b648:	cmp	r0, r3
    b64c:	beq	d8e8 <bt_compidtostr@@Base+0x34bc>
    b650:	bls	c07c <bt_compidtostr@@Base+0x1c50>
    b654:	ldr	r3, [pc, #-548]	; b438 <bt_compidtostr@@Base+0x100c>
    b658:	cmp	r0, r3
    b65c:	beq	df3c <bt_compidtostr@@Base+0x3b10>
    b660:	bls	c508 <bt_compidtostr@@Base+0x20dc>
    b664:	ldr	r3, [pc, #-560]	; b43c <bt_compidtostr@@Base+0x1010>
    b668:	cmp	r0, r3
    b66c:	beq	e650 <bt_compidtostr@@Base+0x4224>
    b670:	bcc	e644 <bt_compidtostr@@Base+0x4218>
    b674:	add	r3, r3, #1
    b678:	cmp	r0, r3
    b67c:	beq	e638 <bt_compidtostr@@Base+0x420c>
    b680:	ldr	r3, [pc, #-584]	; b440 <bt_compidtostr@@Base+0x1014>
    b684:	cmp	r0, r3
    b688:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b68c:	ldr	r0, [pc, #-592]	; b444 <bt_compidtostr@@Base+0x1018>
    b690:	add	r0, pc, r0
    b694:	bx	lr
    b698:	cmp	r0, #380	; 0x17c
    b69c:	beq	f7ac <bt_compidtostr@@Base+0x5380>
    b6a0:	bls	bbb4 <bt_compidtostr@@Base+0x1788>
    b6a4:	cmp	r0, #384	; 0x180
    b6a8:	beq	e29c <bt_compidtostr@@Base+0x3e70>
    b6ac:	bls	cc80 <bt_compidtostr@@Base+0x2854>
    b6b0:	ldr	r3, [pc, #-624]	; b448 <bt_compidtostr@@Base+0x101c>
    b6b4:	cmp	r0, r3
    b6b8:	beq	fd34 <bt_compidtostr@@Base+0x5908>
    b6bc:	bcc	fd28 <bt_compidtostr@@Base+0x58fc>
    b6c0:	add	r3, r3, #1
    b6c4:	cmp	r0, r3
    b6c8:	beq	fd1c <bt_compidtostr@@Base+0x58f0>
    b6cc:	cmp	r0, #388	; 0x184
    b6d0:	bne	e74c <bt_compidtostr@@Base+0x4320>
    b6d4:	ldr	r0, [pc, #-656]	; b44c <bt_compidtostr@@Base+0x1020>
    b6d8:	add	r0, pc, r0
    b6dc:	bx	lr
    b6e0:	cmp	r0, #153	; 0x99
    b6e4:	beq	da8c <bt_compidtostr@@Base+0x3660>
    b6e8:	bhi	c2dc <bt_compidtostr@@Base+0x1eb0>
    b6ec:	cmp	r0, #149	; 0x95
    b6f0:	beq	dffc <bt_compidtostr@@Base+0x3bd0>
    b6f4:	bhi	c6b0 <bt_compidtostr@@Base+0x2284>
    b6f8:	cmp	r0, #147	; 0x93
    b6fc:	beq	dc78 <bt_compidtostr@@Base+0x384c>
    b700:	bls	dc6c <bt_compidtostr@@Base+0x3840>
    b704:	ldr	r0, [pc, #-700]	; b450 <bt_compidtostr@@Base+0x1024>
    b708:	add	r0, pc, r0
    b70c:	bx	lr
    b710:	ldr	r3, [pc, #-708]	; b454 <bt_compidtostr@@Base+0x1028>
    b714:	cmp	r0, r3
    b718:	beq	dac8 <bt_compidtostr@@Base+0x369c>
    b71c:	bhi	c350 <bt_compidtostr@@Base+0x1f24>
    b720:	sub	r3, r3, #4
    b724:	cmp	r0, r3
    b728:	beq	dfe4 <bt_compidtostr@@Base+0x3bb8>
    b72c:	bhi	c67c <bt_compidtostr@@Base+0x2250>
    b730:	cmp	r0, #992	; 0x3e0
    b734:	beq	d8d0 <bt_compidtostr@@Base+0x34a4>
    b738:	bls	d8c4 <bt_compidtostr@@Base+0x3498>
    b73c:	ldr	r0, [pc, #-748]	; b458 <bt_compidtostr@@Base+0x102c>
    b740:	add	r0, pc, r0
    b744:	bx	lr
    b748:	cmp	r0, #218	; 0xda
    b74c:	beq	deac <bt_compidtostr@@Base+0x3a80>
    b750:	bhi	c3d0 <bt_compidtostr@@Base+0x1fa4>
    b754:	cmp	r0, #214	; 0xd6
    b758:	beq	df18 <bt_compidtostr@@Base+0x3aec>
    b75c:	bhi	c4bc <bt_compidtostr@@Base+0x2090>
    b760:	cmp	r0, #212	; 0xd4
    b764:	beq	dd98 <bt_compidtostr@@Base+0x396c>
    b768:	bls	dd8c <bt_compidtostr@@Base+0x3960>
    b76c:	ldr	r0, [pc, #-792]	; b45c <bt_compidtostr@@Base+0x1030>
    b770:	add	r0, pc, r0
    b774:	bx	lr
    b778:	cmp	r0, #868	; 0x364
    b77c:	beq	da08 <bt_compidtostr@@Base+0x35dc>
    b780:	bhi	c260 <bt_compidtostr@@Base+0x1e34>
    b784:	cmp	r0, #864	; 0x360
    b788:	beq	df54 <bt_compidtostr@@Base+0x3b28>
    b78c:	bhi	c540 <bt_compidtostr@@Base+0x2114>
    b790:	ldr	r3, [pc, #-824]	; b460 <bt_compidtostr@@Base+0x1034>
    b794:	cmp	r0, r3
    b798:	beq	d8a0 <bt_compidtostr@@Base+0x3474>
    b79c:	bls	d894 <bt_compidtostr@@Base+0x3468>
    b7a0:	ldr	r0, [pc, #-836]	; b464 <bt_compidtostr@@Base+0x1038>
    b7a4:	add	r0, pc, r0
    b7a8:	bx	lr
    b7ac:	ldr	r3, [pc, #-844]	; b468 <bt_compidtostr@@Base+0x103c>
    b7b0:	cmp	r0, r3
    b7b4:	beq	d8dc <bt_compidtostr@@Base+0x34b0>
    b7b8:	bhi	c050 <bt_compidtostr@@Base+0x1c24>
    b7bc:	sub	r3, r3, #4
    b7c0:	cmp	r0, r3
    b7c4:	beq	e068 <bt_compidtostr@@Base+0x3c3c>
    b7c8:	bhi	c79c <bt_compidtostr@@Base+0x2370>
    b7cc:	sub	r3, r3, #2
    b7d0:	cmp	r0, r3
    b7d4:	beq	dbe8 <bt_compidtostr@@Base+0x37bc>
    b7d8:	bls	dbdc <bt_compidtostr@@Base+0x37b0>
    b7dc:	ldr	r0, [pc, #-888]	; b46c <bt_compidtostr@@Base+0x1040>
    b7e0:	add	r0, pc, r0
    b7e4:	bx	lr
    b7e8:	ldr	r3, [pc, #-896]	; b470 <bt_compidtostr@@Base+0x1044>
    b7ec:	cmp	r0, r3
    b7f0:	beq	da38 <bt_compidtostr@@Base+0x360c>
    b7f4:	bhi	c2b4 <bt_compidtostr@@Base+0x1e88>
    b7f8:	sub	r3, r3, #4
    b7fc:	cmp	r0, r3
    b800:	beq	df9c <bt_compidtostr@@Base+0x3b70>
    b804:	bhi	c5dc <bt_compidtostr@@Base+0x21b0>
    b808:	cmp	r0, #732	; 0x2dc
    b80c:	beq	d990 <bt_compidtostr@@Base+0x3564>
    b810:	bls	d984 <bt_compidtostr@@Base+0x3558>
    b814:	ldr	r0, [pc, #-936]	; b474 <bt_compidtostr@@Base+0x1048>
    b818:	add	r0, pc, r0
    b81c:	bx	lr
    b820:	ldr	r3, [pc, #-944]	; b478 <bt_compidtostr@@Base+0x104c>
    b824:	cmp	r0, r3
    b828:	beq	da2c <bt_compidtostr@@Base+0x3600>
    b82c:	bhi	c288 <bt_compidtostr@@Base+0x1e5c>
    b830:	sub	r3, r3, #4
    b834:	cmp	r0, r3
    b838:	beq	dfcc <bt_compidtostr@@Base+0x3ba0>
    b83c:	bhi	c648 <bt_compidtostr@@Base+0x221c>
    b840:	sub	r3, r3, #2
    b844:	cmp	r0, r3
    b848:	beq	d9a8 <bt_compidtostr@@Base+0x357c>
    b84c:	bls	d99c <bt_compidtostr@@Base+0x3570>
    b850:	ldr	r0, [pc, #-988]	; b47c <bt_compidtostr@@Base+0x1050>
    b854:	add	r0, pc, r0
    b858:	bx	lr
    b85c:	cmp	r0, #88	; 0x58
    b860:	beq	da98 <bt_compidtostr@@Base+0x366c>
    b864:	bhi	c300 <bt_compidtostr@@Base+0x1ed4>
    b868:	cmp	r0, #84	; 0x54
    b86c:	beq	df84 <bt_compidtostr@@Base+0x3b58>
    b870:	bhi	c5ac <bt_compidtostr@@Base+0x2180>
    b874:	cmp	r0, #82	; 0x52
    b878:	beq	d930 <bt_compidtostr@@Base+0x3504>
    b87c:	bls	d924 <bt_compidtostr@@Base+0x34f8>
    b880:	ldr	r0, [pc, #-1032]	; b480 <bt_compidtostr@@Base+0x1054>
    b884:	add	r0, pc, r0
    b888:	bx	lr
    b88c:	ldr	r3, [pc, #-1040]	; b484 <bt_compidtostr@@Base+0x1058>
    b890:	cmp	r0, r3
    b894:	beq	daec <bt_compidtostr@@Base+0x36c0>
    b898:	bhi	c378 <bt_compidtostr@@Base+0x1f4c>
    b89c:	sub	r3, r3, #4
    b8a0:	cmp	r0, r3
    b8a4:	beq	e02c <bt_compidtostr@@Base+0x3c00>
    b8a8:	bhi	c718 <bt_compidtostr@@Base+0x22ec>
    b8ac:	sub	r3, r3, #2
    b8b0:	cmp	r0, r3
    b8b4:	beq	ddb0 <bt_compidtostr@@Base+0x3984>
    b8b8:	bls	dda4 <bt_compidtostr@@Base+0x3978>
    b8bc:	ldr	r0, [pc, #-1084]	; b488 <bt_compidtostr@@Base+0x105c>
    b8c0:	add	r0, pc, r0
    b8c4:	bx	lr
    b8c8:	ldr	r3, [pc, #-1092]	; b48c <bt_compidtostr@@Base+0x1060>
    b8cc:	cmp	r0, r3
    b8d0:	beq	daf8 <bt_compidtostr@@Base+0x36cc>
    b8d4:	bhi	c3a4 <bt_compidtostr@@Base+0x1f78>
    b8d8:	sub	r3, r3, #4
    b8dc:	cmp	r0, r3
    b8e0:	beq	e014 <bt_compidtostr@@Base+0x3be8>
    b8e4:	bhi	c6e0 <bt_compidtostr@@Base+0x22b4>
    b8e8:	sub	r3, r3, #2
    b8ec:	cmp	r0, r3
    b8f0:	beq	d960 <bt_compidtostr@@Base+0x3534>
    b8f4:	bls	d954 <bt_compidtostr@@Base+0x3528>
    b8f8:	ldr	r0, [pc, #-1136]	; b490 <bt_compidtostr@@Base+0x1064>
    b8fc:	add	r0, pc, r0
    b900:	bx	lr
    b904:	ldr	r3, [pc, #-1144]	; b494 <bt_compidtostr@@Base+0x1068>
    b908:	cmp	r0, r3
    b90c:	beq	dabc <bt_compidtostr@@Base+0x3690>
    b910:	bhi	c324 <bt_compidtostr@@Base+0x1ef8>
    b914:	sub	r3, r3, #4
    b918:	cmp	r0, r3
    b91c:	beq	dfb4 <bt_compidtostr@@Base+0x3b88>
    b920:	bhi	c610 <bt_compidtostr@@Base+0x21e4>
    b924:	sub	r3, r3, #2
    b928:	cmp	r0, r3
    b92c:	beq	d858 <bt_compidtostr@@Base+0x342c>
    b930:	bls	d84c <bt_compidtostr@@Base+0x3420>
    b934:	ldr	r0, [pc, #-1188]	; b498 <bt_compidtostr@@Base+0x106c>
    b938:	add	r0, pc, r0
    b93c:	bx	lr
    b940:	cmp	r0, #348	; 0x15c
    b944:	beq	d90c <bt_compidtostr@@Base+0x34e0>
    b948:	bhi	c194 <bt_compidtostr@@Base+0x1d68>
    b94c:	cmp	r0, #344	; 0x158
    b950:	beq	df6c <bt_compidtostr@@Base+0x3b40>
    b954:	bhi	c578 <bt_compidtostr@@Base+0x214c>
    b958:	ldr	r3, [pc, #-1220]	; b49c <bt_compidtostr@@Base+0x1070>
    b95c:	cmp	r0, r3
    b960:	beq	dd08 <bt_compidtostr@@Base+0x38dc>
    b964:	bls	dcfc <bt_compidtostr@@Base+0x38d0>
    b968:	ldr	r0, [pc, #-1232]	; b4a0 <bt_compidtostr@@Base+0x1074>
    b96c:	add	r0, pc, r0
    b970:	bx	lr
    b974:	ldr	r3, [pc, #-1240]	; b4a4 <bt_compidtostr@@Base+0x1078>
    b978:	cmp	r0, r3
    b97c:	beq	de4c <bt_compidtostr@@Base+0x3a20>
    b980:	bhi	c418 <bt_compidtostr@@Base+0x1fec>
    b984:	sub	r3, r3, #4
    b988:	cmp	r0, r3
    b98c:	beq	df24 <bt_compidtostr@@Base+0x3af8>
    b990:	bhi	c4d4 <bt_compidtostr@@Base+0x20a8>
    b994:	sub	r3, r3, #2
    b998:	cmp	r0, r3
    b99c:	beq	d9d8 <bt_compidtostr@@Base+0x35ac>
    b9a0:	bls	d9cc <bt_compidtostr@@Base+0x35a0>
    b9a4:	ldr	r0, [pc, #-1284]	; b4a8 <bt_compidtostr@@Base+0x107c>
    b9a8:	add	r0, pc, r0
    b9ac:	bx	lr
    b9b0:	cmp	r0, #23
    b9b4:	beq	deb8 <bt_compidtostr@@Base+0x3a8c>
    b9b8:	bhi	c3f4 <bt_compidtostr@@Base+0x1fc8>
    b9bc:	cmp	r0, #19
    b9c0:	beq	df0c <bt_compidtostr@@Base+0x3ae0>
    b9c4:	bhi	c4a4 <bt_compidtostr@@Base+0x2078>
    b9c8:	cmp	r0, #17
    b9cc:	beq	d870 <bt_compidtostr@@Base+0x3444>
    b9d0:	bls	d864 <bt_compidtostr@@Base+0x3438>
    b9d4:	ldr	r0, [pc, #-1328]	; b4ac <bt_compidtostr@@Base+0x1080>
    b9d8:	add	r0, pc, r0
    b9dc:	bx	lr
    b9e0:	cmp	r0, #608	; 0x260
    b9e4:	beq	de58 <bt_compidtostr@@Base+0x3a2c>
    b9e8:	bhi	c444 <bt_compidtostr@@Base+0x2018>
    b9ec:	cmp	r0, #604	; 0x25c
    b9f0:	beq	de64 <bt_compidtostr@@Base+0x3a38>
    b9f4:	bhi	c46c <bt_compidtostr@@Base+0x2040>
    b9f8:	ldr	r3, [pc, #-1360]	; b4b0 <bt_compidtostr@@Base+0x1084>
    b9fc:	cmp	r0, r3
    ba00:	beq	d9f0 <bt_compidtostr@@Base+0x35c4>
    ba04:	bls	d9e4 <bt_compidtostr@@Base+0x35b8>
    ba08:	ldr	r0, [pc, #-1372]	; b4b4 <bt_compidtostr@@Base+0x1088>
    ba0c:	add	r0, pc, r0
    ba10:	bx	lr
    ba14:	ldr	r3, [pc, #-1380]	; b4b8 <bt_compidtostr@@Base+0x108c>
    ba18:	cmp	r0, r3
    ba1c:	beq	db4c <bt_compidtostr@@Base+0x3720>
    ba20:	bhi	bcd0 <bt_compidtostr@@Base+0x18a4>
    ba24:	sub	r3, r3, #4
    ba28:	cmp	r0, r3
    ba2c:	beq	df30 <bt_compidtostr@@Base+0x3b04>
    ba30:	bhi	c4f0 <bt_compidtostr@@Base+0x20c4>
    ba34:	cmp	r0, #472	; 0x1d8
    ba38:	beq	f6ec <bt_compidtostr@@Base+0x52c0>
    ba3c:	bls	f6e0 <bt_compidtostr@@Base+0x52b4>
    ba40:	ldr	r0, [pc, #-1420]	; b4bc <bt_compidtostr@@Base+0x1090>
    ba44:	add	r0, pc, r0
    ba48:	bx	lr
    ba4c:	ldr	r3, [pc, #-1428]	; b4c0 <bt_compidtostr@@Base+0x1094>
    ba50:	cmp	r0, r3
    ba54:	beq	e404 <bt_compidtostr@@Base+0x3fd8>
    ba58:	bhi	cf88 <bt_compidtostr@@Base+0x2b5c>
    ba5c:	sub	r3, r3, #2
    ba60:	cmp	r0, r3
    ba64:	beq	1016c <bt_compidtostr@@Base+0x5d40>
    ba68:	bls	10160 <bt_compidtostr@@Base+0x5d34>
    ba6c:	ldr	r0, [pc, #-1456]	; b4c4 <bt_compidtostr@@Base+0x1098>
    ba70:	add	r0, pc, r0
    ba74:	bx	lr
    ba78:	cmp	r0, #173	; 0xad
    ba7c:	beq	e41c <bt_compidtostr@@Base+0x3ff0>
    ba80:	bhi	cfc0 <bt_compidtostr@@Base+0x2b94>
    ba84:	cmp	r0, #171	; 0xab
    ba88:	beq	f98c <bt_compidtostr@@Base+0x5560>
    ba8c:	bls	f980 <bt_compidtostr@@Base+0x5554>
    ba90:	ldr	r0, [pc, #-1488]	; b4c8 <bt_compidtostr@@Base+0x109c>
    ba94:	add	r0, pc, r0
    ba98:	bx	lr
    ba9c:	ldr	r3, [pc, #-1496]	; b4cc <bt_compidtostr@@Base+0x10a0>
    baa0:	cmp	r0, r3
    baa4:	beq	e2b4 <bt_compidtostr@@Base+0x3e88>
    baa8:	bhi	ccb4 <bt_compidtostr@@Base+0x2888>
    baac:	sub	r3, r3, #2
    bab0:	cmp	r0, r3
    bab4:	beq	fdac <bt_compidtostr@@Base+0x5980>
    bab8:	bls	fda0 <bt_compidtostr@@Base+0x5974>
    babc:	ldr	r0, [pc, #-1524]	; b4d0 <bt_compidtostr@@Base+0x10a4>
    bac0:	add	r0, pc, r0
    bac4:	bx	lr
    bac8:	cmp	r0, #43	; 0x2b
    bacc:	beq	d7d4 <bt_compidtostr@@Base+0x33a8>
    bad0:	bhi	d724 <bt_compidtostr@@Base+0x32f8>
    bad4:	cmp	r0, #41	; 0x29
    bad8:	beq	1004c <bt_compidtostr@@Base+0x5c20>
    badc:	bls	10040 <bt_compidtostr@@Base+0x5c14>
    bae0:	ldr	r0, [pc, #-1556]	; b4d4 <bt_compidtostr@@Base+0x10a8>
    bae4:	add	r0, pc, r0
    bae8:	bx	lr
    baec:	cmp	r0, #108	; 0x6c
    baf0:	beq	e17c <bt_compidtostr@@Base+0x3d50>
    baf4:	bhi	c9f8 <bt_compidtostr@@Base+0x25cc>
    baf8:	cmp	r0, #106	; 0x6a
    bafc:	beq	f89c <bt_compidtostr@@Base+0x5470>
    bb00:	bls	f890 <bt_compidtostr@@Base+0x5464>
    bb04:	ldr	r0, [pc, #-1588]	; b4d8 <bt_compidtostr@@Base+0x10ac>
    bb08:	add	r0, pc, r0
    bb0c:	bx	lr
    bb10:	cmp	r0, #238	; 0xee
    bb14:	beq	d834 <bt_compidtostr@@Base+0x3408>
    bb18:	bhi	d6b8 <bt_compidtostr@@Base+0x328c>
    bb1c:	cmp	r0, #236	; 0xec
    bb20:	beq	ff8c <bt_compidtostr@@Base+0x5b60>
    bb24:	bls	ff80 <bt_compidtostr@@Base+0x5b54>
    bb28:	ldr	r0, [pc, #-1620]	; b4dc <bt_compidtostr@@Base+0x10b0>
    bb2c:	add	r0, pc, r0
    bb30:	bx	lr
    bb34:	ldr	r3, [pc, #-1628]	; b4e0 <bt_compidtostr@@Base+0x10b4>
    bb38:	cmp	r0, r3
    bb3c:	beq	e2fc <bt_compidtostr@@Base+0x3ed0>
    bb40:	bhi	cd54 <bt_compidtostr@@Base+0x2928>
    bb44:	sub	r3, r3, #2
    bb48:	cmp	r0, r3
    bb4c:	beq	f8cc <bt_compidtostr@@Base+0x54a0>
    bb50:	bls	f8c0 <bt_compidtostr@@Base+0x5494>
    bb54:	ldr	r0, [pc, #-1656]	; b4e4 <bt_compidtostr@@Base+0x10b8>
    bb58:	add	r0, pc, r0
    bb5c:	bx	lr
    bb60:	ldr	r3, [pc, #-1664]	; b4e8 <bt_compidtostr@@Base+0x10bc>
    bb64:	cmp	r0, r3
    bb68:	beq	d7c8 <bt_compidtostr@@Base+0x339c>
    bb6c:	bhi	d708 <bt_compidtostr@@Base+0x32dc>
    bb70:	sub	r3, r3, #2
    bb74:	cmp	r0, r3
    bb78:	beq	1022c <bt_compidtostr@@Base+0x5e00>
    bb7c:	bls	10220 <bt_compidtostr@@Base+0x5df4>
    bb80:	ldr	r0, [pc, #-1692]	; b4ec <bt_compidtostr@@Base+0x10c0>
    bb84:	add	r0, pc, r0
    bb88:	bx	lr
    bb8c:	cmp	r0, #888	; 0x378
    bb90:	beq	e074 <bt_compidtostr@@Base+0x3c48>
    bb94:	bhi	c7b8 <bt_compidtostr@@Base+0x238c>
    bb98:	ldr	r3, [pc, #-1712]	; b4f0 <bt_compidtostr@@Base+0x10c4>
    bb9c:	cmp	r0, r3
    bba0:	beq	fd4c <bt_compidtostr@@Base+0x5920>
    bba4:	bls	fd40 <bt_compidtostr@@Base+0x5914>
    bba8:	ldr	r0, [pc, #-1724]	; b4f4 <bt_compidtostr@@Base+0x10c8>
    bbac:	add	r0, pc, r0
    bbb0:	bx	lr
    bbb4:	cmp	r0, #376	; 0x178
    bbb8:	beq	d804 <bt_compidtostr@@Base+0x33d8>
    bbbc:	bhi	d650 <bt_compidtostr@@Base+0x3224>
    bbc0:	ldr	r3, [pc, #-1744]	; b4f8 <bt_compidtostr@@Base+0x10cc>
    bbc4:	cmp	r0, r3
    bbc8:	beq	100ac <bt_compidtostr@@Base+0x5c80>
    bbcc:	bls	100a0 <bt_compidtostr@@Base+0x5c74>
    bbd0:	ldr	r0, [pc, #-1756]	; b4fc <bt_compidtostr@@Base+0x10d0>
    bbd4:	add	r0, pc, r0
    bbd8:	bx	lr
    bbdc:	ldr	r3, [pc, #-1764]	; b500 <bt_compidtostr@@Base+0x10d4>
    bbe0:	cmp	r0, r3
    bbe4:	beq	e35c <bt_compidtostr@@Base+0x3f30>
    bbe8:	bhi	ce28 <bt_compidtostr@@Base+0x29fc>
    bbec:	cmp	r0, #1016	; 0x3f8
    bbf0:	beq	f80c <bt_compidtostr@@Base+0x53e0>
    bbf4:	bls	f800 <bt_compidtostr@@Base+0x53d4>
    bbf8:	ldr	r0, [pc, #-1788]	; b504 <bt_compidtostr@@Base+0x10d8>
    bbfc:	add	r0, pc, r0
    bc00:	bx	lr
    bc04:	cmp	r0, #368	; 0x170
    bc08:	beq	e314 <bt_compidtostr@@Base+0x3ee8>
    bc0c:	bhi	cd8c <bt_compidtostr@@Base+0x2960>
    bc10:	ldr	r3, [pc, #-1808]	; b508 <bt_compidtostr@@Base+0x10dc>
    bc14:	cmp	r0, r3
    bc18:	beq	fe9c <bt_compidtostr@@Base+0x5a70>
    bc1c:	bls	fe90 <bt_compidtostr@@Base+0x5a64>
    bc20:	ldr	r0, [pc, #-1820]	; b50c <bt_compidtostr@@Base+0x10e0>
    bc24:	add	r0, pc, r0
    bc28:	bx	lr
    bc2c:	ldr	r3, [pc, #-1828]	; b510 <bt_compidtostr@@Base+0x10e4>
    bc30:	cmp	r0, r3
    bc34:	beq	d7e0 <bt_compidtostr@@Base+0x33b4>
    bc38:	bhi	d73c <bt_compidtostr@@Base+0x3310>
    bc3c:	sub	r3, r3, #2
    bc40:	cmp	r0, r3
    bc44:	beq	101cc <bt_compidtostr@@Base+0x5da0>
    bc48:	bls	101c0 <bt_compidtostr@@Base+0x5d94>
    bc4c:	ldr	r0, [pc, #-1856]	; b514 <bt_compidtostr@@Base+0x10e8>
    bc50:	add	r0, pc, r0
    bc54:	bx	lr
    bc58:	ldr	r3, [pc, #-1864]	; b518 <bt_compidtostr@@Base+0x10ec>
    bc5c:	cmp	r0, r3
    bc60:	beq	e374 <bt_compidtostr@@Base+0x3f48>
    bc64:	bhi	ce5c <bt_compidtostr@@Base+0x2a30>
    bc68:	cmp	r0, #496	; 0x1f0
    bc6c:	beq	fe0c <bt_compidtostr@@Base+0x59e0>
    bc70:	bls	fe00 <bt_compidtostr@@Base+0x59d4>
    bc74:	ldr	r0, [pc, #-1888]	; b51c <bt_compidtostr@@Base+0x10f0>
    bc78:	add	r0, pc, r0
    bc7c:	bx	lr
    bc80:	ldr	r3, [pc, #-1896]	; b520 <bt_compidtostr@@Base+0x10f4>
    bc84:	cmp	r0, r3
    bc88:	beq	d78c <bt_compidtostr@@Base+0x3360>
    bc8c:	bhi	d758 <bt_compidtostr@@Base+0x332c>
    bc90:	sub	r3, r3, #2
    bc94:	cmp	r0, r3
    bc98:	beq	1010c <bt_compidtostr@@Base+0x5ce0>
    bc9c:	bls	10100 <bt_compidtostr@@Base+0x5cd4>
    bca0:	ldr	r0, [pc, #-1924]	; b524 <bt_compidtostr@@Base+0x10f8>
    bca4:	add	r0, pc, r0
    bca8:	bx	lr
    bcac:	cmp	r0, #141	; 0x8d
    bcb0:	beq	e434 <bt_compidtostr@@Base+0x4008>
    bcb4:	bhi	cff0 <bt_compidtostr@@Base+0x2bc4>
    bcb8:	cmp	r0, #139	; 0x8b
    bcbc:	beq	fecc <bt_compidtostr@@Base+0x5aa0>
    bcc0:	bls	fec0 <bt_compidtostr@@Base+0x5a94>
    bcc4:	ldr	r0, [pc, #-1956]	; b528 <bt_compidtostr@@Base+0x10fc>
    bcc8:	add	r0, pc, r0
    bccc:	bx	lr
    bcd0:	ldr	r3, [pc, #-1964]	; b52c <bt_compidtostr@@Base+0x1100>
    bcd4:	cmp	r0, r3
    bcd8:	beq	d798 <bt_compidtostr@@Base+0x336c>
    bcdc:	bhi	d774 <bt_compidtostr@@Base+0x3348>
    bce0:	cmp	r0, #480	; 0x1e0
    bce4:	beq	1028c <bt_compidtostr@@Base+0x5e60>
    bce8:	bls	10280 <bt_compidtostr@@Base+0x5e54>
    bcec:	ldr	r0, [pc, #-1988]	; b530 <bt_compidtostr@@Base+0x1104>
    bcf0:	add	r0, pc, r0
    bcf4:	bx	lr
    bcf8:	cmp	r0, #628	; 0x274
    bcfc:	beq	e1dc <bt_compidtostr@@Base+0x3db0>
    bd00:	bhi	cad4 <bt_compidtostr@@Base+0x26a8>
    bd04:	ldr	r3, [pc, #-2008]	; b534 <bt_compidtostr@@Base+0x1108>
    bd08:	cmp	r0, r3
    bd0c:	beq	f74c <bt_compidtostr@@Base+0x5320>
    bd10:	bls	f740 <bt_compidtostr@@Base+0x5314>
    bd14:	ldr	r0, [pc, #-2020]	; b538 <bt_compidtostr@@Base+0x110c>
    bd18:	add	r0, pc, r0
    bd1c:	bx	lr
    bd20:	ldr	r3, [pc, #-2028]	; b53c <bt_compidtostr@@Base+0x1110>
    bd24:	cmp	r0, r3
    bd28:	beq	e080 <bt_compidtostr@@Base+0x3c54>
    bd2c:	bhi	c7d4 <bt_compidtostr@@Base+0x23a8>
    bd30:	cmp	r0, #756	; 0x2f4
    bd34:	beq	e488 <bt_compidtostr@@Base+0x405c>
    bd38:	bls	e47c <bt_compidtostr@@Base+0x4050>
    bd3c:	ldr	r0, [pc, #-2052]	; b540 <bt_compidtostr@@Base+0x1114>
    bd40:	add	r0, pc, r0
    bd44:	bx	lr
    bd48:	sub	r3, r3, #4
    bd4c:	cmp	r0, r3
    bd50:	beq	e098 <bt_compidtostr@@Base+0x3c6c>
    bd54:	bhi	c804 <bt_compidtostr@@Base+0x23d8>
    bd58:	sub	r3, r3, #2
    bd5c:	cmp	r0, r3
    bd60:	beq	f0ec <bt_compidtostr@@Base+0x4cc0>
    bd64:	bls	f0e0 <bt_compidtostr@@Base+0x4cb4>
    bd68:	ldr	r0, [pc, #-2092]	; b544 <bt_compidtostr@@Base+0x1118>
    bd6c:	add	r0, pc, r0
    bd70:	bx	lr
    bd74:	sub	r3, r3, #4
    bd78:	cmp	r0, r3
    bd7c:	beq	e0b0 <bt_compidtostr@@Base+0x3c84>
    bd80:	bhi	c838 <bt_compidtostr@@Base+0x240c>
    bd84:	cmp	r0, #504	; 0x1f8
    bd88:	beq	e788 <bt_compidtostr@@Base+0x435c>
    bd8c:	bls	e77c <bt_compidtostr@@Base+0x4350>
    bd90:	ldr	r0, [pc, #-2128]	; b548 <bt_compidtostr@@Base+0x111c>
    bd94:	add	r0, pc, r0
    bd98:	bx	lr
    bd9c:	cmp	r0, #51	; 0x33
    bda0:	beq	e0c8 <bt_compidtostr@@Base+0x3c9c>
    bda4:	bhi	c86c <bt_compidtostr@@Base+0x2440>
    bda8:	cmp	r0, #49	; 0x31
    bdac:	beq	f41c <bt_compidtostr@@Base+0x4ff0>
    bdb0:	bls	f410 <bt_compidtostr@@Base+0x4fe4>
    bdb4:	ldr	r0, [pc, #-2160]	; b54c <bt_compidtostr@@Base+0x1120>
    bdb8:	add	r0, pc, r0
    bdbc:	bx	lr
    bdc0:	ldr	r3, [pc, #-2168]	; b550 <bt_compidtostr@@Base+0x1124>
    bdc4:	cmp	r0, r3
    bdc8:	beq	e0e0 <bt_compidtostr@@Base+0x3cb4>
    bdcc:	bhi	c8a0 <bt_compidtostr@@Base+0x2474>
    bdd0:	cmp	r0, #724	; 0x2d4
    bdd4:	beq	e608 <bt_compidtostr@@Base+0x41dc>
    bdd8:	bls	e5fc <bt_compidtostr@@Base+0x41d0>
    bddc:	ldr	r0, [pc, #-2192]	; b554 <bt_compidtostr@@Base+0x1128>
    bde0:	add	r0, pc, r0
    bde4:	bx	lr
    bde8:	cmp	r0, #636	; 0x27c
    bdec:	beq	e0f8 <bt_compidtostr@@Base+0x3ccc>
    bdf0:	bhi	c8d4 <bt_compidtostr@@Base+0x24a8>
    bdf4:	ldr	r3, [pc, #-2212]	; b558 <bt_compidtostr@@Base+0x112c>
    bdf8:	cmp	r0, r3
    bdfc:	beq	f26c <bt_compidtostr@@Base+0x4e40>
    be00:	bls	f260 <bt_compidtostr@@Base+0x4e34>
    be04:	ldr	r0, [pc, #-2224]	; b55c <bt_compidtostr@@Base+0x1130>
    be08:	add	r0, pc, r0
    be0c:	bx	lr
    be10:	sub	r3, r3, #4
    be14:	cmp	r0, r3
    be18:	beq	e110 <bt_compidtostr@@Base+0x3ce4>
    be1c:	bhi	c90c <bt_compidtostr@@Base+0x24e0>
    be20:	sub	r3, r3, #2
    be24:	cmp	r0, r3
    be28:	beq	e908 <bt_compidtostr@@Base+0x44dc>
    be2c:	bls	e8fc <bt_compidtostr@@Base+0x44d0>
    be30:	ldr	r0, [pc, #-2264]	; b560 <bt_compidtostr@@Base+0x1134>
    be34:	add	r0, pc, r0
    be38:	bx	lr
    be3c:	sub	r3, r3, #4
    be40:	cmp	r0, r3
    be44:	beq	e128 <bt_compidtostr@@Base+0x3cfc>
    be48:	bhi	c944 <bt_compidtostr@@Base+0x2518>
    be4c:	sub	r3, r3, #2
    be50:	cmp	r0, r3
    be54:	beq	f53c <bt_compidtostr@@Base+0x5110>
    be58:	bls	f530 <bt_compidtostr@@Base+0x5104>
    be5c:	ldr	r0, [pc, #-2304]	; b564 <bt_compidtostr@@Base+0x1138>
    be60:	add	r0, pc, r0
    be64:	bx	lr
    be68:	ldr	r3, [pc, #-2312]	; b568 <bt_compidtostr@@Base+0x113c>
    be6c:	cmp	r0, r3
    be70:	beq	e140 <bt_compidtostr@@Base+0x3d14>
    be74:	bhi	c978 <bt_compidtostr@@Base+0x254c>
    be78:	cmp	r0, #984	; 0x3d8
    be7c:	beq	e548 <bt_compidtostr@@Base+0x411c>
    be80:	bls	e53c <bt_compidtostr@@Base+0x4110>
    be84:	ldr	r0, [pc, #-2336]	; b56c <bt_compidtostr@@Base+0x1140>
    be88:	add	r0, pc, r0
    be8c:	bx	lr
    be90:	sub	r3, r3, #4
    be94:	cmp	r0, r3
    be98:	beq	e158 <bt_compidtostr@@Base+0x3d2c>
    be9c:	bhi	c9a8 <bt_compidtostr@@Base+0x257c>
    bea0:	sub	r3, r3, #2
    bea4:	cmp	r0, r3
    bea8:	beq	f1ac <bt_compidtostr@@Base+0x4d80>
    beac:	bls	f1a0 <bt_compidtostr@@Base+0x4d74>
    beb0:	ldr	r0, [pc, #-2376]	; b570 <bt_compidtostr@@Base+0x1144>
    beb4:	add	r0, pc, r0
    beb8:	bx	lr
    bebc:	sub	r3, r3, #4
    bec0:	cmp	r0, r3
    bec4:	beq	e170 <bt_compidtostr@@Base+0x3d44>
    bec8:	bhi	c9e0 <bt_compidtostr@@Base+0x25b4>
    becc:	cmp	r0, #764	; 0x2fc
    bed0:	beq	e848 <bt_compidtostr@@Base+0x441c>
    bed4:	bls	e83c <bt_compidtostr@@Base+0x4410>
    bed8:	ldr	r0, [pc, #-2412]	; b574 <bt_compidtostr@@Base+0x1148>
    bedc:	add	r0, pc, r0
    bee0:	bx	lr
    bee4:	cmp	r0, #896	; 0x380
    bee8:	beq	e188 <bt_compidtostr@@Base+0x3d5c>
    beec:	bhi	ca10 <bt_compidtostr@@Base+0x25e4>
    bef0:	ldr	r3, [pc, #-2432]	; b578 <bt_compidtostr@@Base+0x114c>
    bef4:	cmp	r0, r3
    bef8:	beq	f4dc <bt_compidtostr@@Base+0x50b0>
    befc:	bls	f4d0 <bt_compidtostr@@Base+0x50a4>
    bf00:	ldr	r0, [pc, #-2444]	; b57c <bt_compidtostr@@Base+0x1150>
    bf04:	add	r0, pc, r0
    bf08:	bx	lr
    bf0c:	ldr	r3, [pc, #-2452]	; b580 <bt_compidtostr@@Base+0x1154>
    bf10:	cmp	r0, r3
    bf14:	beq	e1a0 <bt_compidtostr@@Base+0x3d74>
    bf18:	bhi	ca48 <bt_compidtostr@@Base+0x261c>
    bf1c:	sub	r3, r3, #2
    bf20:	cmp	r0, r3
    bf24:	beq	e6c8 <bt_compidtostr@@Base+0x429c>
    bf28:	bls	e6bc <bt_compidtostr@@Base+0x4290>
    bf2c:	ldr	r0, [pc, #-2480]	; b584 <bt_compidtostr@@Base+0x1158>
    bf30:	add	r0, pc, r0
    bf34:	bx	lr
    bf38:	sub	r3, r3, #4
    bf3c:	cmp	r0, r3
    bf40:	beq	e1b8 <bt_compidtostr@@Base+0x3d8c>
    bf44:	bhi	ca80 <bt_compidtostr@@Base+0x2654>
    bf48:	sub	r3, r3, #2
    bf4c:	cmp	r0, r3
    bf50:	beq	f2fc <bt_compidtostr@@Base+0x4ed0>
    bf54:	bls	f2f0 <bt_compidtostr@@Base+0x4ec4>
    bf58:	ldr	r0, [pc, #-2520]	; b588 <bt_compidtostr@@Base+0x115c>
    bf5c:	add	r0, pc, r0
    bf60:	bx	lr
    bf64:	cmp	r0, #856	; 0x358
    bf68:	beq	e1d0 <bt_compidtostr@@Base+0x3da4>
    bf6c:	bhi	cab8 <bt_compidtostr@@Base+0x268c>
    bf70:	ldr	r3, [pc, #-2540]	; b58c <bt_compidtostr@@Base+0x1160>
    bf74:	cmp	r0, r3
    bf78:	beq	f02c <bt_compidtostr@@Base+0x4c00>
    bf7c:	bls	f020 <bt_compidtostr@@Base+0x4bf4>
    bf80:	ldr	r0, [pc, #-2552]	; b590 <bt_compidtostr@@Base+0x1164>
    bf84:	add	r0, pc, r0
    bf88:	bx	lr
    bf8c:	sub	r3, r3, #4
    bf90:	cmp	r0, r3
    bf94:	beq	e1e8 <bt_compidtostr@@Base+0x3dbc>
    bf98:	bhi	caf0 <bt_compidtostr@@Base+0x26c4>
    bf9c:	sub	r3, r3, #2
    bfa0:	cmp	r0, r3
    bfa4:	beq	f5fc <bt_compidtostr@@Base+0x51d0>
    bfa8:	bls	f5f0 <bt_compidtostr@@Base+0x51c4>
    bfac:	ldr	r0, [pc, #-2592]	; b594 <bt_compidtostr@@Base+0x1168>
    bfb0:	add	r0, pc, r0
    bfb4:	bx	lr
    bfb8:	ldr	r3, [pc, #-2600]	; b598 <bt_compidtostr@@Base+0x116c>
    bfbc:	cmp	r0, r3
    bfc0:	beq	e200 <bt_compidtostr@@Base+0x3dd4>
    bfc4:	bhi	cb28 <bt_compidtostr@@Base+0x26fc>
    bfc8:	sub	r3, r3, #2
    bfcc:	cmp	r0, r3
    bfd0:	beq	e4e8 <bt_compidtostr@@Base+0x40bc>
    bfd4:	bls	e4dc <bt_compidtostr@@Base+0x40b0>
    bfd8:	ldr	r0, [pc, #-2628]	; b59c <bt_compidtostr@@Base+0x1170>
    bfdc:	add	r0, pc, r0
    bfe0:	bx	lr
    bfe4:	cmp	r0, #181	; 0xb5
    bfe8:	beq	e218 <bt_compidtostr@@Base+0x3dec>
    bfec:	bhi	cb60 <bt_compidtostr@@Base+0x2734>
    bff0:	cmp	r0, #179	; 0xb3
    bff4:	beq	f14c <bt_compidtostr@@Base+0x4d20>
    bff8:	bls	f140 <bt_compidtostr@@Base+0x4d14>
    bffc:	ldr	r0, [pc, #-2660]	; b5a0 <bt_compidtostr@@Base+0x1174>
    c000:	add	r0, pc, r0
    c004:	bx	lr
    c008:	cmp	r0, #246	; 0xf6
    c00c:	beq	e230 <bt_compidtostr@@Base+0x3e04>
    c010:	bhi	cb90 <bt_compidtostr@@Base+0x2764>
    c014:	cmp	r0, #244	; 0xf4
    c018:	beq	e7e8 <bt_compidtostr@@Base+0x43bc>
    c01c:	bls	e7dc <bt_compidtostr@@Base+0x43b0>
    c020:	ldr	r0, [pc, #-2692]	; b5a4 <bt_compidtostr@@Base+0x1178>
    c024:	add	r0, pc, r0
    c028:	bx	lr
    c02c:	cmp	r0, #116	; 0x74
    c030:	beq	e248 <bt_compidtostr@@Base+0x3e1c>
    c034:	bhi	cbc4 <bt_compidtostr@@Base+0x2798>
    c038:	cmp	r0, #114	; 0x72
    c03c:	beq	f44c <bt_compidtostr@@Base+0x5020>
    c040:	bls	f440 <bt_compidtostr@@Base+0x5014>
    c044:	ldr	r0, [pc, #-2724]	; b5a8 <bt_compidtostr@@Base+0x117c>
    c048:	add	r0, pc, r0
    c04c:	bx	lr
    c050:	ldr	r3, [pc, #-2732]	; b5ac <bt_compidtostr@@Base+0x1180>
    c054:	cmp	r0, r3
    c058:	beq	e260 <bt_compidtostr@@Base+0x3e34>
    c05c:	bhi	cbf8 <bt_compidtostr@@Base+0x27cc>
    c060:	sub	r3, r3, #2
    c064:	cmp	r0, r3
    c068:	beq	e668 <bt_compidtostr@@Base+0x423c>
    c06c:	bls	e65c <bt_compidtostr@@Base+0x4230>
    c070:	ldr	r0, [pc, #-2760]	; b5b0 <bt_compidtostr@@Base+0x1184>
    c074:	add	r0, pc, r0
    c078:	bx	lr
    c07c:	sub	r3, r3, #4
    c080:	cmp	r0, r3
    c084:	beq	e278 <bt_compidtostr@@Base+0x3e4c>
    c088:	bhi	cc30 <bt_compidtostr@@Base+0x2804>
    c08c:	cmp	r0, #1024	; 0x400
    c090:	beq	f29c <bt_compidtostr@@Base+0x4e70>
    c094:	bls	f290 <bt_compidtostr@@Base+0x4e64>
    c098:	ldr	r0, [pc, #-2796]	; b5b4 <bt_compidtostr@@Base+0x1188>
    c09c:	add	r0, pc, r0
    c0a0:	bx	lr
    c0a4:	cmp	r0, #336	; 0x150
    c0a8:	beq	e290 <bt_compidtostr@@Base+0x3e64>
    c0ac:	bhi	cc64 <bt_compidtostr@@Base+0x2838>
    c0b0:	ldr	r3, [pc, #-2816]	; b5b8 <bt_compidtostr@@Base+0x118c>
    c0b4:	cmp	r0, r3
    c0b8:	beq	e938 <bt_compidtostr@@Base+0x450c>
    c0bc:	bls	e92c <bt_compidtostr@@Base+0x4500>
    c0c0:	ldr	r0, [pc, #-2828]	; b5bc <bt_compidtostr@@Base+0x1190>
    c0c4:	add	r0, pc, r0
    c0c8:	bx	lr
    c0cc:	cmp	r0, #206	; 0xce
    c0d0:	beq	e2a8 <bt_compidtostr@@Base+0x3e7c>
    c0d4:	bhi	cc9c <bt_compidtostr@@Base+0x2870>
    c0d8:	cmp	r0, #204	; 0xcc
    c0dc:	beq	f59c <bt_compidtostr@@Base+0x5170>
    c0e0:	bls	f590 <bt_compidtostr@@Base+0x5164>
    c0e4:	ldr	r0, [pc, #-2860]	; b5c0 <bt_compidtostr@@Base+0x1194>
    c0e8:	add	r0, pc, r0
    c0ec:	bx	lr
    c0f0:	cmp	r0, #596	; 0x254
    c0f4:	beq	e2c0 <bt_compidtostr@@Base+0x3e94>
    c0f8:	bhi	ccd0 <bt_compidtostr@@Base+0x28a4>
    c0fc:	ldr	r3, [pc, #-2880]	; b5c4 <bt_compidtostr@@Base+0x1198>
    c100:	cmp	r0, r3
    c104:	beq	e578 <bt_compidtostr@@Base+0x414c>
    c108:	bls	e56c <bt_compidtostr@@Base+0x4140>
    c10c:	ldr	r0, [pc, #-2892]	; b5c8 <bt_compidtostr@@Base+0x119c>
    c110:	add	r0, pc, r0
    c114:	bx	lr
    c118:	ldr	r3, [pc, #-2900]	; b5cc <bt_compidtostr@@Base+0x11a0>
    c11c:	cmp	r0, r3
    c120:	beq	e2d8 <bt_compidtostr@@Base+0x3eac>
    c124:	bhi	cd08 <bt_compidtostr@@Base+0x28dc>
    c128:	sub	r3, r3, #2
    c12c:	cmp	r0, r3
    c130:	beq	f1dc <bt_compidtostr@@Base+0x4db0>
    c134:	bls	f1d0 <bt_compidtostr@@Base+0x4da4>
    c138:	ldr	r0, [pc, #-2928]	; b5d0 <bt_compidtostr@@Base+0x11a4>
    c13c:	add	r0, pc, r0
    c140:	bx	lr
    c144:	cmp	r0, #76	; 0x4c
    c148:	beq	e2f0 <bt_compidtostr@@Base+0x3ec4>
    c14c:	bhi	cd3c <bt_compidtostr@@Base+0x2910>
    c150:	cmp	r0, #74	; 0x4a
    c154:	beq	e878 <bt_compidtostr@@Base+0x444c>
    c158:	bls	e86c <bt_compidtostr@@Base+0x4440>
    c15c:	ldr	r0, [pc, #-2960]	; b5d4 <bt_compidtostr@@Base+0x11a8>
    c160:	add	r0, pc, r0
    c164:	bx	lr
    c168:	ldr	r3, [pc, #-2968]	; b5d8 <bt_compidtostr@@Base+0x11ac>
    c16c:	cmp	r0, r3
    c170:	beq	e308 <bt_compidtostr@@Base+0x3edc>
    c174:	bhi	cd70 <bt_compidtostr@@Base+0x2944>
    c178:	sub	r3, r3, #2
    c17c:	cmp	r0, r3
    c180:	beq	f50c <bt_compidtostr@@Base+0x50e0>
    c184:	bls	f500 <bt_compidtostr@@Base+0x50d4>
    c188:	ldr	r0, [pc, #-2996]	; b5dc <bt_compidtostr@@Base+0x11b0>
    c18c:	add	r0, pc, r0
    c190:	bx	lr
    c194:	cmp	r0, #352	; 0x160
    c198:	beq	e320 <bt_compidtostr@@Base+0x3ef4>
    c19c:	bhi	cda8 <bt_compidtostr@@Base+0x297c>
    c1a0:	ldr	r3, [pc, #-3016]	; b5e0 <bt_compidtostr@@Base+0x11b4>
    c1a4:	cmp	r0, r3
    c1a8:	beq	e6f8 <bt_compidtostr@@Base+0x42cc>
    c1ac:	bls	e6ec <bt_compidtostr@@Base+0x42c0>
    c1b0:	ldr	r0, [pc, #-3028]	; b5e4 <bt_compidtostr@@Base+0x11b8>
    c1b4:	add	r0, pc, r0
    c1b8:	bx	lr
    c1bc:	ldr	r3, [pc, #-3036]	; b5e8 <bt_compidtostr@@Base+0x11bc>
    c1c0:	cmp	r0, r3
    c1c4:	beq	e338 <bt_compidtostr@@Base+0x3f0c>
    c1c8:	bhi	cddc <bt_compidtostr@@Base+0x29b0>
    c1cc:	sub	r3, r3, #2
    c1d0:	cmp	r0, r3
    c1d4:	beq	f35c <bt_compidtostr@@Base+0x4f30>
    c1d8:	bls	f350 <bt_compidtostr@@Base+0x4f24>
    c1dc:	ldr	r0, [pc, #-3064]	; b5ec <bt_compidtostr@@Base+0x11c0>
    c1e0:	add	r0, pc, r0
    c1e4:	bx	lr
    c1e8:	cmp	r0, #11
    c1ec:	beq	e350 <bt_compidtostr@@Base+0x3f24>
    c1f0:	bhi	ce10 <bt_compidtostr@@Base+0x29e4>
    c1f4:	cmp	r0, #9
    c1f8:	beq	f05c <bt_compidtostr@@Base+0x4c30>
    c1fc:	bls	f050 <bt_compidtostr@@Base+0x4c24>
    c200:	ldr	r0, [pc, #-3096]	; b5f0 <bt_compidtostr@@Base+0x11c4>
    c204:	add	r0, pc, r0
    c208:	bx	lr
    c20c:	ldr	r3, [pc, #-3104]	; b5f4 <bt_compidtostr@@Base+0x11c8>
    c210:	cmp	r0, r3
    c214:	beq	e368 <bt_compidtostr@@Base+0x3f3c>
    c218:	bhi	ce40 <bt_compidtostr@@Base+0x2a14>
    c21c:	sub	r3, r3, #2
    c220:	cmp	r0, r3
    c224:	beq	f65c <bt_compidtostr@@Base+0x5230>
    c228:	bls	f650 <bt_compidtostr@@Base+0x5224>
    c22c:	ldr	r0, [pc, #-3132]	; b5f8 <bt_compidtostr@@Base+0x11cc>
    c230:	add	r0, pc, r0
    c234:	bx	lr
    c238:	ldr	r3, [pc, #-3140]	; b5fc <bt_compidtostr@@Base+0x11d0>
    c23c:	cmp	r0, r3
    c240:	beq	e380 <bt_compidtostr@@Base+0x3f54>
    c244:	bhi	ce74 <bt_compidtostr@@Base+0x2a48>
    c248:	cmp	r0, #464	; 0x1d0
    c24c:	beq	e5a8 <bt_compidtostr@@Base+0x417c>
    c250:	bls	e59c <bt_compidtostr@@Base+0x4170>
    c254:	ldr	r0, [pc, #-3164]	; b600 <bt_compidtostr@@Base+0x11d4>
    c258:	add	r0, pc, r0
    c25c:	bx	lr
    c260:	cmp	r0, #872	; 0x368
    c264:	beq	e398 <bt_compidtostr@@Base+0x3f6c>
    c268:	bhi	cea4 <bt_compidtostr@@Base+0x2a78>
    c26c:	ldr	r3, [pc, #-3184]	; b604 <bt_compidtostr@@Base+0x11d8>
    c270:	cmp	r0, r3
    c274:	beq	f20c <bt_compidtostr@@Base+0x4de0>
    c278:	bls	f200 <bt_compidtostr@@Base+0x4dd4>
    c27c:	ldr	r0, [pc, #-3196]	; b608 <bt_compidtostr@@Base+0x11dc>
    c280:	add	r0, pc, r0
    c284:	bx	lr
    c288:	ldr	r3, [pc, #-3204]	; b60c <bt_compidtostr@@Base+0x11e0>
    c28c:	cmp	r0, r3
    c290:	beq	e3b0 <bt_compidtostr@@Base+0x3f84>
    c294:	bhi	ced8 <bt_compidtostr@@Base+0x2aac>
    c298:	sub	r3, r3, #2
    c29c:	cmp	r0, r3
    c2a0:	beq	e8a8 <bt_compidtostr@@Base+0x447c>
    c2a4:	bls	e89c <bt_compidtostr@@Base+0x4470>
    c2a8:	ldr	r0, [pc, #-3232]	; b610 <bt_compidtostr@@Base+0x11e4>
    c2ac:	add	r0, pc, r0
    c2b0:	bx	lr
    c2b4:	ldr	r3, [pc, #-3240]	; b614 <bt_compidtostr@@Base+0x11e8>
    c2b8:	cmp	r0, r3
    c2bc:	beq	e3c8 <bt_compidtostr@@Base+0x3f9c>
    c2c0:	bhi	cf0c <bt_compidtostr@@Base+0x2ae0>
    c2c4:	cmp	r0, #740	; 0x2e4
    c2c8:	beq	f56c <bt_compidtostr@@Base+0x5140>
    c2cc:	bls	f560 <bt_compidtostr@@Base+0x5134>
    c2d0:	ldr	r0, [pc, #-3264]	; b618 <bt_compidtostr@@Base+0x11ec>
    c2d4:	add	r0, pc, r0
    c2d8:	bx	lr
    c2dc:	cmp	r0, #157	; 0x9d
    c2e0:	beq	e3e0 <bt_compidtostr@@Base+0x3fb4>
    c2e4:	bhi	cf3c <bt_compidtostr@@Base+0x2b10>
    c2e8:	cmp	r0, #155	; 0x9b
    c2ec:	beq	e728 <bt_compidtostr@@Base+0x42fc>
    c2f0:	bls	e71c <bt_compidtostr@@Base+0x42f0>
    c2f4:	ldr	r0, [pc, #-3296]	; b61c <bt_compidtostr@@Base+0x11f0>
    c2f8:	add	r0, pc, r0
    c2fc:	bx	lr
    c300:	cmp	r0, #92	; 0x5c
    c304:	beq	e3f8 <bt_compidtostr@@Base+0x3fcc>
    c308:	bhi	cf70 <bt_compidtostr@@Base+0x2b44>
    c30c:	cmp	r0, #90	; 0x5a
    c310:	beq	f2cc <bt_compidtostr@@Base+0x4ea0>
    c314:	bls	f2c0 <bt_compidtostr@@Base+0x4e94>
    c318:	ldr	r0, [pc, #-3328]	; b620 <bt_compidtostr@@Base+0x11f4>
    c31c:	add	r0, pc, r0
    c320:	bx	lr
    c324:	ldr	r3, [pc, #-3336]	; b624 <bt_compidtostr@@Base+0x11f8>
    c328:	cmp	r0, r3
    c32c:	beq	e410 <bt_compidtostr@@Base+0x3fe4>
    c330:	bhi	cfa4 <bt_compidtostr@@Base+0x2b78>
    c334:	sub	r3, r3, #2
    c338:	cmp	r0, r3
    c33c:	beq	e968 <bt_compidtostr@@Base+0x453c>
    c340:	bls	e95c <bt_compidtostr@@Base+0x4530>
    c344:	ldr	r0, [pc, #-3364]	; b628 <bt_compidtostr@@Base+0x11fc>
    c348:	add	r0, pc, r0
    c34c:	bx	lr
    c350:	ldr	r3, [pc, #-3372]	; b62c <bt_compidtostr@@Base+0x1200>
    c354:	cmp	r0, r3
    c358:	beq	e428 <bt_compidtostr@@Base+0x3ffc>
    c35c:	bhi	cfd8 <bt_compidtostr@@Base+0x2bac>
    c360:	cmp	r0, #1000	; 0x3e8
    c364:	beq	f62c <bt_compidtostr@@Base+0x5200>
    c368:	bls	f620 <bt_compidtostr@@Base+0x51f4>
    c36c:	ldr	r0, [pc, #-3396]	; b630 <bt_compidtostr@@Base+0x1204>
    c370:	add	r0, pc, r0
    c374:	bx	lr
    c378:	ldr	r3, [pc, #-3404]	; b634 <bt_compidtostr@@Base+0x1208>
    c37c:	cmp	r0, r3
    c380:	beq	e440 <bt_compidtostr@@Base+0x4014>
    c384:	bhi	d008 <bt_compidtostr@@Base+0x2bdc>
    c388:	sub	r3, r3, #2
    c38c:	cmp	r0, r3
    c390:	beq	f08c <bt_compidtostr@@Base+0x4c60>
    c394:	bls	f080 <bt_compidtostr@@Base+0x4c54>
    c398:	ldr	r0, [pc, #-3432]	; b638 <bt_compidtostr@@Base+0x120c>
    c39c:	add	r0, pc, r0
    c3a0:	bx	lr
    c3a4:	ldr	r3, [pc, #-3440]	; b63c <bt_compidtostr@@Base+0x1210>
    c3a8:	cmp	r0, r3
    c3ac:	beq	d7f8 <bt_compidtostr@@Base+0x33cc>
    c3b0:	bhi	d634 <bt_compidtostr@@Base+0x3208>
    c3b4:	sub	r3, r3, #2
    c3b8:	cmp	r0, r3
    c3bc:	beq	f32c <bt_compidtostr@@Base+0x4f00>
    c3c0:	bls	f320 <bt_compidtostr@@Base+0x4ef4>
    c3c4:	ldr	r0, [pc, #-3468]	; b640 <bt_compidtostr@@Base+0x1214>
    c3c8:	add	r0, pc, r0
    c3cc:	bx	lr
    c3d0:	cmp	r0, #222	; 0xde
    c3d4:	beq	d810 <bt_compidtostr@@Base+0x33e4>
    c3d8:	bhi	d66c <bt_compidtostr@@Base+0x3240>
    c3dc:	cmp	r0, #220	; 0xdc
    c3e0:	beq	f5cc <bt_compidtostr@@Base+0x51a0>
    c3e4:	bls	f5c0 <bt_compidtostr@@Base+0x5194>
    c3e8:	ldr	r0, [pc, #3124]	; d024 <bt_compidtostr@@Base+0x2bf8>
    c3ec:	add	r0, pc, r0
    c3f0:	bx	lr
    c3f4:	cmp	r0, #27
    c3f8:	beq	d828 <bt_compidtostr@@Base+0x33fc>
    c3fc:	bhi	d6a0 <bt_compidtostr@@Base+0x3274>
    c400:	cmp	r0, #25
    c404:	beq	f38c <bt_compidtostr@@Base+0x4f60>
    c408:	bls	f380 <bt_compidtostr@@Base+0x4f54>
    c40c:	ldr	r0, [pc, #3092]	; d028 <bt_compidtostr@@Base+0x2bfc>
    c410:	add	r0, pc, r0
    c414:	bx	lr
    c418:	ldr	r3, [pc, #3084]	; d02c <bt_compidtostr@@Base+0x2c00>
    c41c:	cmp	r0, r3
    c420:	beq	d840 <bt_compidtostr@@Base+0x3414>
    c424:	bhi	d6d0 <bt_compidtostr@@Base+0x32a4>
    c428:	sub	r3, r3, #2
    c42c:	cmp	r0, r3
    c430:	beq	f68c <bt_compidtostr@@Base+0x5260>
    c434:	bls	f680 <bt_compidtostr@@Base+0x5254>
    c438:	ldr	r0, [pc, #3056]	; d030 <bt_compidtostr@@Base+0x2c04>
    c43c:	add	r0, pc, r0
    c440:	bx	lr
    c444:	cmp	r0, #612	; 0x264
    c448:	beq	de70 <bt_compidtostr@@Base+0x3a44>
    c44c:	bhi	c488 <bt_compidtostr@@Base+0x205c>
    c450:	ldr	r3, [pc, #3036]	; d034 <bt_compidtostr@@Base+0x2c08>
    c454:	cmp	r0, r3
    c458:	beq	de88 <bt_compidtostr@@Base+0x3a5c>
    c45c:	bls	de7c <bt_compidtostr@@Base+0x3a50>
    c460:	ldr	r0, [pc, #3024]	; d038 <bt_compidtostr@@Base+0x2c0c>
    c464:	add	r0, pc, r0
    c468:	bx	lr
    c46c:	ldr	r3, [pc, #3016]	; d03c <bt_compidtostr@@Base+0x2c10>
    c470:	cmp	r0, r3
    c474:	beq	dea0 <bt_compidtostr@@Base+0x3a74>
    c478:	bls	de94 <bt_compidtostr@@Base+0x3a68>
    c47c:	ldr	r0, [pc, #3004]	; d040 <bt_compidtostr@@Base+0x2c14>
    c480:	add	r0, pc, r0
    c484:	bx	lr
    c488:	ldr	r3, [pc, #2996]	; d044 <bt_compidtostr@@Base+0x2c18>
    c48c:	cmp	r0, r3
    c490:	beq	ded0 <bt_compidtostr@@Base+0x3aa4>
    c494:	bls	dec4 <bt_compidtostr@@Base+0x3a98>
    c498:	ldr	r0, [pc, #2984]	; d048 <bt_compidtostr@@Base+0x2c1c>
    c49c:	add	r0, pc, r0
    c4a0:	bx	lr
    c4a4:	cmp	r0, #21
    c4a8:	beq	dee8 <bt_compidtostr@@Base+0x3abc>
    c4ac:	bls	dedc <bt_compidtostr@@Base+0x3ab0>
    c4b0:	ldr	r0, [pc, #2964]	; d04c <bt_compidtostr@@Base+0x2c20>
    c4b4:	add	r0, pc, r0
    c4b8:	bx	lr
    c4bc:	cmp	r0, #216	; 0xd8
    c4c0:	beq	df00 <bt_compidtostr@@Base+0x3ad4>
    c4c4:	bls	def4 <bt_compidtostr@@Base+0x3ac8>
    c4c8:	ldr	r0, [pc, #2944]	; d050 <bt_compidtostr@@Base+0x2c24>
    c4cc:	add	r0, pc, r0
    c4d0:	bx	lr
    c4d4:	ldr	r3, [pc, #2936]	; d054 <bt_compidtostr@@Base+0x2c28>
    c4d8:	cmp	r0, r3
    c4dc:	beq	db70 <bt_compidtostr@@Base+0x3744>
    c4e0:	bls	db64 <bt_compidtostr@@Base+0x3738>
    c4e4:	ldr	r0, [pc, #2924]	; d058 <bt_compidtostr@@Base+0x2c2c>
    c4e8:	add	r0, pc, r0
    c4ec:	bx	lr
    c4f0:	cmp	r0, #476	; 0x1dc
    c4f4:	beq	d900 <bt_compidtostr@@Base+0x34d4>
    c4f8:	bls	d8f4 <bt_compidtostr@@Base+0x34c8>
    c4fc:	ldr	r0, [pc, #2904]	; d05c <bt_compidtostr@@Base+0x2c30>
    c500:	add	r0, pc, r0
    c504:	bx	lr
    c508:	sub	r3, r3, #2
    c50c:	cmp	r0, r3
    c510:	beq	dcf0 <bt_compidtostr@@Base+0x38c4>
    c514:	bls	dce4 <bt_compidtostr@@Base+0x38b8>
    c518:	ldr	r0, [pc, #2880]	; d060 <bt_compidtostr@@Base+0x2c34>
    c51c:	add	r0, pc, r0
    c520:	bx	lr
    c524:	ldr	r3, [pc, #2872]	; d064 <bt_compidtostr@@Base+0x2c38>
    c528:	cmp	r0, r3
    c52c:	beq	da20 <bt_compidtostr@@Base+0x35f4>
    c530:	bls	da14 <bt_compidtostr@@Base+0x35e8>
    c534:	ldr	r0, [pc, #2860]	; d068 <bt_compidtostr@@Base+0x2c3c>
    c538:	add	r0, pc, r0
    c53c:	bx	lr
    c540:	ldr	r3, [pc, #2852]	; d06c <bt_compidtostr@@Base+0x2c40>
    c544:	cmp	r0, r3
    c548:	beq	dc30 <bt_compidtostr@@Base+0x3804>
    c54c:	bls	dc24 <bt_compidtostr@@Base+0x37f8>
    c550:	ldr	r0, [pc, #2840]	; d070 <bt_compidtostr@@Base+0x2c44>
    c554:	add	r0, pc, r0
    c558:	bx	lr
    c55c:	ldr	r3, [pc, #2832]	; d074 <bt_compidtostr@@Base+0x2c48>
    c560:	cmp	r0, r3
    c564:	beq	d9c0 <bt_compidtostr@@Base+0x3594>
    c568:	bls	d9b4 <bt_compidtostr@@Base+0x3588>
    c56c:	ldr	r0, [pc, #2820]	; d078 <bt_compidtostr@@Base+0x2c4c>
    c570:	add	r0, pc, r0
    c574:	bx	lr
    c578:	ldr	r3, [pc, #2812]	; d07c <bt_compidtostr@@Base+0x2c50>
    c57c:	cmp	r0, r3
    c580:	beq	dde0 <bt_compidtostr@@Base+0x39b4>
    c584:	bls	ddd4 <bt_compidtostr@@Base+0x39a8>
    c588:	ldr	r0, [pc, #2800]	; d080 <bt_compidtostr@@Base+0x2c54>
    c58c:	add	r0, pc, r0
    c590:	bx	lr
    c594:	cmp	r0, #187	; 0xbb
    c598:	beq	dab0 <bt_compidtostr@@Base+0x3684>
    c59c:	bls	daa4 <bt_compidtostr@@Base+0x3678>
    c5a0:	ldr	r0, [pc, #2780]	; d084 <bt_compidtostr@@Base+0x2c58>
    c5a4:	add	r0, pc, r0
    c5a8:	bx	lr
    c5ac:	cmp	r0, #86	; 0x56
    c5b0:	beq	dbd0 <bt_compidtostr@@Base+0x37a4>
    c5b4:	bls	dbc4 <bt_compidtostr@@Base+0x3798>
    c5b8:	ldr	r0, [pc, #2760]	; d088 <bt_compidtostr@@Base+0x2c5c>
    c5bc:	add	r0, pc, r0
    c5c0:	bx	lr
    c5c4:	cmp	r0, #57	; 0x39
    c5c8:	beq	da50 <bt_compidtostr@@Base+0x3624>
    c5cc:	bls	da44 <bt_compidtostr@@Base+0x3618>
    c5d0:	ldr	r0, [pc, #2740]	; d08c <bt_compidtostr@@Base+0x2c60>
    c5d4:	add	r0, pc, r0
    c5d8:	bx	lr
    c5dc:	cmp	r0, #736	; 0x2e0
    c5e0:	beq	dd50 <bt_compidtostr@@Base+0x3924>
    c5e4:	bls	dd44 <bt_compidtostr@@Base+0x3918>
    c5e8:	ldr	r0, [pc, #2720]	; d090 <bt_compidtostr@@Base+0x2c64>
    c5ec:	add	r0, pc, r0
    c5f0:	bx	lr
    c5f4:	sub	r3, r3, #2
    c5f8:	cmp	r0, r3
    c5fc:	beq	db28 <bt_compidtostr@@Base+0x36fc>
    c600:	bls	db1c <bt_compidtostr@@Base+0x36f0>
    c604:	ldr	r0, [pc, #2696]	; d094 <bt_compidtostr@@Base+0x2c68>
    c608:	add	r0, pc, r0
    c60c:	bx	lr
    c610:	ldr	r3, [pc, #2688]	; d098 <bt_compidtostr@@Base+0x2c6c>
    c614:	cmp	r0, r3
    c618:	beq	dc90 <bt_compidtostr@@Base+0x3864>
    c61c:	bls	dc84 <bt_compidtostr@@Base+0x3858>
    c620:	ldr	r0, [pc, #2676]	; d09c <bt_compidtostr@@Base+0x2c70>
    c624:	add	r0, pc, r0
    c628:	bx	lr
    c62c:	sub	r3, r3, #2
    c630:	cmp	r0, r3
    c634:	beq	da68 <bt_compidtostr@@Base+0x363c>
    c638:	bls	da5c <bt_compidtostr@@Base+0x3630>
    c63c:	ldr	r0, [pc, #2652]	; d0a0 <bt_compidtostr@@Base+0x2c74>
    c640:	add	r0, pc, r0
    c644:	bx	lr
    c648:	ldr	r3, [pc, #2644]	; d0a4 <bt_compidtostr@@Base+0x2c78>
    c64c:	cmp	r0, r3
    c650:	beq	de10 <bt_compidtostr@@Base+0x39e4>
    c654:	bls	de04 <bt_compidtostr@@Base+0x39d8>
    c658:	ldr	r0, [pc, #2632]	; d0a8 <bt_compidtostr@@Base+0x2c7c>
    c65c:	add	r0, pc, r0
    c660:	bx	lr
    c664:	cmp	r0, #122	; 0x7a
    c668:	beq	dae0 <bt_compidtostr@@Base+0x36b4>
    c66c:	bls	dad4 <bt_compidtostr@@Base+0x36a8>
    c670:	ldr	r0, [pc, #2612]	; d0ac <bt_compidtostr@@Base+0x2c80>
    c674:	add	r0, pc, r0
    c678:	bx	lr
    c67c:	cmp	r0, #996	; 0x3e4
    c680:	beq	dba0 <bt_compidtostr@@Base+0x3774>
    c684:	bls	db94 <bt_compidtostr@@Base+0x3768>
    c688:	ldr	r0, [pc, #2592]	; d0b0 <bt_compidtostr@@Base+0x2c84>
    c68c:	add	r0, pc, r0
    c690:	bx	lr
    c694:	sub	r3, r3, #2
    c698:	cmp	r0, r3
    c69c:	beq	da80 <bt_compidtostr@@Base+0x3654>
    c6a0:	bls	da74 <bt_compidtostr@@Base+0x3648>
    c6a4:	ldr	r0, [pc, #2568]	; d0b4 <bt_compidtostr@@Base+0x2c88>
    c6a8:	add	r0, pc, r0
    c6ac:	bx	lr
    c6b0:	cmp	r0, #151	; 0x97
    c6b4:	beq	dd20 <bt_compidtostr@@Base+0x38f4>
    c6b8:	bls	dd14 <bt_compidtostr@@Base+0x38e8>
    c6bc:	ldr	r0, [pc, #2548]	; d0b8 <bt_compidtostr@@Base+0x2c8c>
    c6c0:	add	r0, pc, r0
    c6c4:	bx	lr
    c6c8:	cmp	r0, #772	; 0x304
    c6cc:	beq	db10 <bt_compidtostr@@Base+0x36e4>
    c6d0:	bls	db04 <bt_compidtostr@@Base+0x36d8>
    c6d4:	ldr	r0, [pc, #2528]	; d0bc <bt_compidtostr@@Base+0x2c90>
    c6d8:	add	r0, pc, r0
    c6dc:	bx	lr
    c6e0:	ldr	r3, [pc, #2520]	; d0c0 <bt_compidtostr@@Base+0x2c94>
    c6e4:	cmp	r0, r3
    c6e8:	beq	dc60 <bt_compidtostr@@Base+0x3834>
    c6ec:	bls	dc54 <bt_compidtostr@@Base+0x3828>
    c6f0:	ldr	r0, [pc, #2508]	; d0c4 <bt_compidtostr@@Base+0x2c98>
    c6f4:	add	r0, pc, r0
    c6f8:	bx	lr
    c6fc:	sub	r3, r3, #2
    c700:	cmp	r0, r3
    c704:	beq	db40 <bt_compidtostr@@Base+0x3714>
    c708:	bls	db34 <bt_compidtostr@@Base+0x3708>
    c70c:	ldr	r0, [pc, #2484]	; d0c8 <bt_compidtostr@@Base+0x2c9c>
    c710:	add	r0, pc, r0
    c714:	bx	lr
    c718:	ldr	r3, [pc, #2476]	; d0cc <bt_compidtostr@@Base+0x2ca0>
    c71c:	cmp	r0, r3
    c720:	beq	de28 <bt_compidtostr@@Base+0x39fc>
    c724:	bls	de1c <bt_compidtostr@@Base+0x39f0>
    c728:	ldr	r0, [pc, #2464]	; d0d0 <bt_compidtostr@@Base+0x2ca4>
    c72c:	add	r0, pc, r0
    c730:	bx	lr
    c734:	cmp	r0, #252	; 0xfc
    c738:	beq	dc00 <bt_compidtostr@@Base+0x37d4>
    c73c:	bls	dbf4 <bt_compidtostr@@Base+0x37c8>
    c740:	ldr	r0, [pc, #2444]	; d0d4 <bt_compidtostr@@Base+0x2ca8>
    c744:	add	r0, pc, r0
    c748:	bx	lr
    c74c:	cmp	r0, #512	; 0x200
    c750:	beq	dd80 <bt_compidtostr@@Base+0x3954>
    c754:	bls	dd74 <bt_compidtostr@@Base+0x3948>
    c758:	ldr	r0, [pc, #2424]	; d0d8 <bt_compidtostr@@Base+0x2cac>
    c75c:	add	r0, pc, r0
    c760:	bx	lr
    c764:	sub	r3, r3, #2
    c768:	cmp	r0, r3
    c76c:	beq	dcc0 <bt_compidtostr@@Base+0x3894>
    c770:	bls	dcb4 <bt_compidtostr@@Base+0x3888>
    c774:	ldr	r0, [pc, #2400]	; d0dc <bt_compidtostr@@Base+0x2cb0>
    c778:	add	r0, pc, r0
    c77c:	bx	lr
    c780:	sub	r3, r3, #2
    c784:	cmp	r0, r3
    c788:	beq	de40 <bt_compidtostr@@Base+0x3a14>
    c78c:	bls	de34 <bt_compidtostr@@Base+0x3a08>
    c790:	ldr	r0, [pc, #2376]	; d0e0 <bt_compidtostr@@Base+0x2cb4>
    c794:	add	r0, pc, r0
    c798:	bx	lr
    c79c:	ldr	r3, [pc, #2368]	; d0e4 <bt_compidtostr@@Base+0x2cb8>
    c7a0:	cmp	r0, r3
    c7a4:	beq	fd64 <bt_compidtostr@@Base+0x5938>
    c7a8:	bls	fd58 <bt_compidtostr@@Base+0x592c>
    c7ac:	ldr	r0, [pc, #2356]	; d0e8 <bt_compidtostr@@Base+0x2cbc>
    c7b0:	add	r0, pc, r0
    c7b4:	bx	lr
    c7b8:	ldr	r3, [pc, #2348]	; d0ec <bt_compidtostr@@Base+0x2cc0>
    c7bc:	cmp	r0, r3
    c7c0:	beq	e4a0 <bt_compidtostr@@Base+0x4074>
    c7c4:	bls	e494 <bt_compidtostr@@Base+0x4068>
    c7c8:	ldr	r0, [pc, #2336]	; d0f0 <bt_compidtostr@@Base+0x2cc4>
    c7cc:	add	r0, pc, r0
    c7d0:	bx	lr
    c7d4:	cmp	r0, #760	; 0x2f8
    c7d8:	beq	fc14 <bt_compidtostr@@Base+0x57e8>
    c7dc:	bls	fc08 <bt_compidtostr@@Base+0x57dc>
    c7e0:	ldr	r0, [pc, #2316]	; d0f4 <bt_compidtostr@@Base+0x2cc8>
    c7e4:	add	r0, pc, r0
    c7e8:	bx	lr
    c7ec:	cmp	r0, #135	; 0x87
    c7f0:	beq	f104 <bt_compidtostr@@Base+0x4cd8>
    c7f4:	bls	f0f8 <bt_compidtostr@@Base+0x4ccc>
    c7f8:	ldr	r0, [pc, #2296]	; d0f8 <bt_compidtostr@@Base+0x2ccc>
    c7fc:	add	r0, pc, r0
    c800:	bx	lr
    c804:	ldr	r3, [pc, #2288]	; d0fc <bt_compidtostr@@Base+0x2cd0>
    c808:	cmp	r0, r3
    c80c:	beq	ffd4 <bt_compidtostr@@Base+0x5ba8>
    c810:	bls	ffc8 <bt_compidtostr@@Base+0x5b9c>
    c814:	ldr	r0, [pc, #2276]	; d100 <bt_compidtostr@@Base+0x2cd4>
    c818:	add	r0, pc, r0
    c81c:	bx	lr
    c820:	cmp	r0, #102	; 0x66
    c824:	beq	e7a0 <bt_compidtostr@@Base+0x4374>
    c828:	bls	e794 <bt_compidtostr@@Base+0x4368>
    c82c:	ldr	r0, [pc, #2256]	; d104 <bt_compidtostr@@Base+0x2cd8>
    c830:	add	r0, pc, r0
    c834:	bx	lr
    c838:	cmp	r0, #508	; 0x1fc
    c83c:	beq	f914 <bt_compidtostr@@Base+0x54e8>
    c840:	bls	f908 <bt_compidtostr@@Base+0x54dc>
    c844:	ldr	r0, [pc, #2236]	; d108 <bt_compidtostr@@Base+0x2cdc>
    c848:	add	r0, pc, r0
    c84c:	bx	lr
    c850:	ldr	r3, [pc, #2228]	; d10c <bt_compidtostr@@Base+0x2ce0>
    c854:	cmp	r0, r3
    c858:	beq	f434 <bt_compidtostr@@Base+0x5008>
    c85c:	bls	f428 <bt_compidtostr@@Base+0x4ffc>
    c860:	ldr	r0, [pc, #2216]	; d110 <bt_compidtostr@@Base+0x2ce4>
    c864:	add	r0, pc, r0
    c868:	bx	lr
    c86c:	cmp	r0, #53	; 0x35
    c870:	beq	ff14 <bt_compidtostr@@Base+0x5ae8>
    c874:	bls	ff08 <bt_compidtostr@@Base+0x5adc>
    c878:	ldr	r0, [pc, #2196]	; d114 <bt_compidtostr@@Base+0x2ce8>
    c87c:	add	r0, pc, r0
    c880:	bx	lr
    c884:	ldr	r3, [pc, #2188]	; d118 <bt_compidtostr@@Base+0x2cec>
    c888:	cmp	r0, r3
    c88c:	beq	e620 <bt_compidtostr@@Base+0x41f4>
    c890:	bls	e614 <bt_compidtostr@@Base+0x41e8>
    c894:	ldr	r0, [pc, #2176]	; d11c <bt_compidtostr@@Base+0x2cf0>
    c898:	add	r0, pc, r0
    c89c:	bx	lr
    c8a0:	cmp	r0, #728	; 0x2d8
    c8a4:	beq	fa04 <bt_compidtostr@@Base+0x55d8>
    c8a8:	bls	f9f8 <bt_compidtostr@@Base+0x55cc>
    c8ac:	ldr	r0, [pc, #2156]	; d120 <bt_compidtostr@@Base+0x2cf4>
    c8b0:	add	r0, pc, r0
    c8b4:	bx	lr
    c8b8:	ldr	r3, [pc, #2148]	; d124 <bt_compidtostr@@Base+0x2cf8>
    c8bc:	cmp	r0, r3
    c8c0:	beq	f284 <bt_compidtostr@@Base+0x4e58>
    c8c4:	bls	f278 <bt_compidtostr@@Base+0x4e4c>
    c8c8:	ldr	r0, [pc, #2136]	; d128 <bt_compidtostr@@Base+0x2cfc>
    c8cc:	add	r0, pc, r0
    c8d0:	bx	lr
    c8d4:	ldr	r3, [pc, #2128]	; d12c <bt_compidtostr@@Base+0x2d00>
    c8d8:	cmp	r0, r3
    c8dc:	beq	10154 <bt_compidtostr@@Base+0x5d28>
    c8e0:	bls	10148 <bt_compidtostr@@Base+0x5d1c>
    c8e4:	ldr	r0, [pc, #2116]	; d130 <bt_compidtostr@@Base+0x2d04>
    c8e8:	add	r0, pc, r0
    c8ec:	bx	lr
    c8f0:	ldr	r3, [pc, #2108]	; d134 <bt_compidtostr@@Base+0x2d08>
    c8f4:	cmp	r0, r3
    c8f8:	beq	e920 <bt_compidtostr@@Base+0x44f4>
    c8fc:	bls	e914 <bt_compidtostr@@Base+0x44e8>
    c900:	ldr	r0, [pc, #2096]	; d138 <bt_compidtostr@@Base+0x2d0c>
    c904:	add	r0, pc, r0
    c908:	bx	lr
    c90c:	ldr	r3, [pc, #2088]	; d13c <bt_compidtostr@@Base+0x2d10>
    c910:	cmp	r0, r3
    c914:	beq	f7f4 <bt_compidtostr@@Base+0x53c8>
    c918:	bls	f7e8 <bt_compidtostr@@Base+0x53bc>
    c91c:	ldr	r0, [pc, #2076]	; d140 <bt_compidtostr@@Base+0x2d14>
    c920:	add	r0, pc, r0
    c924:	bx	lr
    c928:	ldr	r3, [pc, #2068]	; d144 <bt_compidtostr@@Base+0x2d18>
    c92c:	cmp	r0, r3
    c930:	beq	f554 <bt_compidtostr@@Base+0x5128>
    c934:	bls	f548 <bt_compidtostr@@Base+0x511c>
    c938:	ldr	r0, [pc, #2056]	; d148 <bt_compidtostr@@Base+0x2d1c>
    c93c:	add	r0, pc, r0
    c940:	bx	lr
    c944:	ldr	r3, [pc, #2048]	; d14c <bt_compidtostr@@Base+0x2d20>
    c948:	cmp	r0, r3
    c94c:	beq	fd94 <bt_compidtostr@@Base+0x5968>
    c950:	bls	fd88 <bt_compidtostr@@Base+0x595c>
    c954:	ldr	r0, [pc, #2036]	; d150 <bt_compidtostr@@Base+0x2d24>
    c958:	add	r0, pc, r0
    c95c:	bx	lr
    c960:	cmp	r0, #37	; 0x25
    c964:	beq	e560 <bt_compidtostr@@Base+0x4134>
    c968:	bls	e554 <bt_compidtostr@@Base+0x4128>
    c96c:	ldr	r0, [pc, #2016]	; d154 <bt_compidtostr@@Base+0x2d28>
    c970:	add	r0, pc, r0
    c974:	bx	lr
    c978:	cmp	r0, #988	; 0x3dc
    c97c:	beq	fb84 <bt_compidtostr@@Base+0x5758>
    c980:	bls	fb78 <bt_compidtostr@@Base+0x574c>
    c984:	ldr	r0, [pc, #1996]	; d158 <bt_compidtostr@@Base+0x2d2c>
    c988:	add	r0, pc, r0
    c98c:	bx	lr
    c990:	cmp	r0, #720	; 0x2d0
    c994:	beq	f1c4 <bt_compidtostr@@Base+0x4d98>
    c998:	bls	f1b8 <bt_compidtostr@@Base+0x4d8c>
    c99c:	ldr	r0, [pc, #1976]	; d15c <bt_compidtostr@@Base+0x2d30>
    c9a0:	add	r0, pc, r0
    c9a4:	bx	lr
    c9a8:	ldr	r3, [pc, #1968]	; d160 <bt_compidtostr@@Base+0x2d34>
    c9ac:	cmp	r0, r3
    c9b0:	beq	10094 <bt_compidtostr@@Base+0x5c68>
    c9b4:	bls	10088 <bt_compidtostr@@Base+0x5c5c>
    c9b8:	ldr	r0, [pc, #1956]	; d164 <bt_compidtostr@@Base+0x2d38>
    c9bc:	add	r0, pc, r0
    c9c0:	bx	lr
    c9c4:	ldr	r3, [pc, #1948]	; d168 <bt_compidtostr@@Base+0x2d3c>
    c9c8:	cmp	r0, r3
    c9cc:	beq	e860 <bt_compidtostr@@Base+0x4434>
    c9d0:	bls	e854 <bt_compidtostr@@Base+0x4428>
    c9d4:	ldr	r0, [pc, #1936]	; d16c <bt_compidtostr@@Base+0x2d40>
    c9d8:	add	r0, pc, r0
    c9dc:	bx	lr
    c9e0:	cmp	r0, #768	; 0x300
    c9e4:	beq	f8b4 <bt_compidtostr@@Base+0x5488>
    c9e8:	bls	f8a8 <bt_compidtostr@@Base+0x547c>
    c9ec:	ldr	r0, [pc, #1916]	; d170 <bt_compidtostr@@Base+0x2d44>
    c9f0:	add	r0, pc, r0
    c9f4:	bx	lr
    c9f8:	cmp	r0, #110	; 0x6e
    c9fc:	beq	f4f4 <bt_compidtostr@@Base+0x50c8>
    ca00:	bls	f4e8 <bt_compidtostr@@Base+0x50bc>
    ca04:	ldr	r0, [pc, #1896]	; d174 <bt_compidtostr@@Base+0x2d48>
    ca08:	add	r0, pc, r0
    ca0c:	bx	lr
    ca10:	ldr	r3, [pc, #1888]	; d178 <bt_compidtostr@@Base+0x2d4c>
    ca14:	cmp	r0, r3
    ca18:	beq	fe84 <bt_compidtostr@@Base+0x5a58>
    ca1c:	bls	fe78 <bt_compidtostr@@Base+0x5a4c>
    ca20:	ldr	r0, [pc, #1876]	; d17c <bt_compidtostr@@Base+0x2d50>
    ca24:	add	r0, pc, r0
    ca28:	bx	lr
    ca2c:	ldr	r3, [pc, #1868]	; d180 <bt_compidtostr@@Base+0x2d54>
    ca30:	cmp	r0, r3
    ca34:	beq	e6e0 <bt_compidtostr@@Base+0x42b4>
    ca38:	bls	e6d4 <bt_compidtostr@@Base+0x42a8>
    ca3c:	ldr	r0, [pc, #1856]	; d184 <bt_compidtostr@@Base+0x2d58>
    ca40:	add	r0, pc, r0
    ca44:	bx	lr
    ca48:	ldr	r3, [pc, #1848]	; d188 <bt_compidtostr@@Base+0x2d5c>
    ca4c:	cmp	r0, r3
    ca50:	beq	faf4 <bt_compidtostr@@Base+0x56c8>
    ca54:	bls	fae8 <bt_compidtostr@@Base+0x56bc>
    ca58:	ldr	r0, [pc, #1836]	; d18c <bt_compidtostr@@Base+0x2d60>
    ca5c:	add	r0, pc, r0
    ca60:	bx	lr
    ca64:	ldr	r3, [pc, #1828]	; d190 <bt_compidtostr@@Base+0x2d64>
    ca68:	cmp	r0, r3
    ca6c:	beq	f314 <bt_compidtostr@@Base+0x4ee8>
    ca70:	bls	f308 <bt_compidtostr@@Base+0x4edc>
    ca74:	ldr	r0, [pc, #1816]	; d194 <bt_compidtostr@@Base+0x2d68>
    ca78:	add	r0, pc, r0
    ca7c:	bx	lr
    ca80:	ldr	r3, [pc, #1808]	; d198 <bt_compidtostr@@Base+0x2d6c>
    ca84:	cmp	r0, r3
    ca88:	beq	10214 <bt_compidtostr@@Base+0x5de8>
    ca8c:	bls	10208 <bt_compidtostr@@Base+0x5ddc>
    ca90:	ldr	r0, [pc, #1796]	; d19c <bt_compidtostr@@Base+0x2d70>
    ca94:	add	r0, pc, r0
    ca98:	bx	lr
    ca9c:	ldr	r3, [pc, #1788]	; d1a0 <bt_compidtostr@@Base+0x2d74>
    caa0:	cmp	r0, r3
    caa4:	beq	f044 <bt_compidtostr@@Base+0x4c18>
    caa8:	bls	f038 <bt_compidtostr@@Base+0x4c0c>
    caac:	ldr	r0, [pc, #1776]	; d1a4 <bt_compidtostr@@Base+0x2d78>
    cab0:	add	r0, pc, r0
    cab4:	bx	lr
    cab8:	ldr	r3, [pc, #1768]	; d1a8 <bt_compidtostr@@Base+0x2d7c>
    cabc:	cmp	r0, r3
    cac0:	beq	f764 <bt_compidtostr@@Base+0x5338>
    cac4:	bls	f758 <bt_compidtostr@@Base+0x532c>
    cac8:	ldr	r0, [pc, #1756]	; d1ac <bt_compidtostr@@Base+0x2d80>
    cacc:	add	r0, pc, r0
    cad0:	bx	lr
    cad4:	ldr	r3, [pc, #1748]	; d1b0 <bt_compidtostr@@Base+0x2d84>
    cad8:	cmp	r0, r3
    cadc:	beq	f614 <bt_compidtostr@@Base+0x51e8>
    cae0:	bls	f608 <bt_compidtostr@@Base+0x51dc>
    cae4:	ldr	r0, [pc, #1736]	; d1b4 <bt_compidtostr@@Base+0x2d88>
    cae8:	add	r0, pc, r0
    caec:	bx	lr
    caf0:	ldr	r3, [pc, #1728]	; d1b8 <bt_compidtostr@@Base+0x2d8c>
    caf4:	cmp	r0, r3
    caf8:	beq	fdf4 <bt_compidtostr@@Base+0x59c8>
    cafc:	bls	fde8 <bt_compidtostr@@Base+0x59bc>
    cb00:	ldr	r0, [pc, #1716]	; d1bc <bt_compidtostr@@Base+0x2d90>
    cb04:	add	r0, pc, r0
    cb08:	bx	lr
    cb0c:	ldr	r3, [pc, #1708]	; d1c0 <bt_compidtostr@@Base+0x2d94>
    cb10:	cmp	r0, r3
    cb14:	beq	e500 <bt_compidtostr@@Base+0x40d4>
    cb18:	bls	e4f4 <bt_compidtostr@@Base+0x40c8>
    cb1c:	ldr	r0, [pc, #1696]	; d1c4 <bt_compidtostr@@Base+0x2d98>
    cb20:	add	r0, pc, r0
    cb24:	bx	lr
    cb28:	ldr	r3, [pc, #1688]	; d1c8 <bt_compidtostr@@Base+0x2d9c>
    cb2c:	cmp	r0, r3
    cb30:	beq	fc74 <bt_compidtostr@@Base+0x5848>
    cb34:	bls	fc68 <bt_compidtostr@@Base+0x583c>
    cb38:	ldr	r0, [pc, #1676]	; d1cc <bt_compidtostr@@Base+0x2da0>
    cb3c:	add	r0, pc, r0
    cb40:	bx	lr
    cb44:	ldr	r3, [pc, #1668]	; d1d0 <bt_compidtostr@@Base+0x2da4>
    cb48:	cmp	r0, r3
    cb4c:	beq	f164 <bt_compidtostr@@Base+0x4d38>
    cb50:	bls	f158 <bt_compidtostr@@Base+0x4d2c>
    cb54:	ldr	r0, [pc, #1656]	; d1d4 <bt_compidtostr@@Base+0x2da8>
    cb58:	add	r0, pc, r0
    cb5c:	bx	lr
    cb60:	cmp	r0, #183	; 0xb7
    cb64:	beq	10034 <bt_compidtostr@@Base+0x5c08>
    cb68:	bls	10028 <bt_compidtostr@@Base+0x5bfc>
    cb6c:	ldr	r0, [pc, #1636]	; d1d8 <bt_compidtostr@@Base+0x2dac>
    cb70:	add	r0, pc, r0
    cb74:	bx	lr
    cb78:	cmp	r0, #232	; 0xe8
    cb7c:	beq	e800 <bt_compidtostr@@Base+0x43d4>
    cb80:	bls	e7f4 <bt_compidtostr@@Base+0x43c8>
    cb84:	ldr	r0, [pc, #1616]	; d1dc <bt_compidtostr@@Base+0x2db0>
    cb88:	add	r0, pc, r0
    cb8c:	bx	lr
    cb90:	cmp	r0, #248	; 0xf8
    cb94:	beq	f974 <bt_compidtostr@@Base+0x5548>
    cb98:	bls	f968 <bt_compidtostr@@Base+0x553c>
    cb9c:	ldr	r0, [pc, #1596]	; d1e0 <bt_compidtostr@@Base+0x2db4>
    cba0:	add	r0, pc, r0
    cba4:	bx	lr
    cba8:	ldr	r3, [pc, #1588]	; d1e4 <bt_compidtostr@@Base+0x2db8>
    cbac:	cmp	r0, r3
    cbb0:	beq	f464 <bt_compidtostr@@Base+0x5038>
    cbb4:	bls	f458 <bt_compidtostr@@Base+0x502c>
    cbb8:	ldr	r0, [pc, #1576]	; d1e8 <bt_compidtostr@@Base+0x2dbc>
    cbbc:	add	r0, pc, r0
    cbc0:	bx	lr
    cbc4:	cmp	r0, #118	; 0x76
    cbc8:	beq	ff74 <bt_compidtostr@@Base+0x5b48>
    cbcc:	bls	ff68 <bt_compidtostr@@Base+0x5b3c>
    cbd0:	ldr	r0, [pc, #1556]	; d1ec <bt_compidtostr@@Base+0x2dc0>
    cbd4:	add	r0, pc, r0
    cbd8:	bx	lr
    cbdc:	ldr	r3, [pc, #1548]	; d1f0 <bt_compidtostr@@Base+0x2dc4>
    cbe0:	cmp	r0, r3
    cbe4:	beq	e680 <bt_compidtostr@@Base+0x4254>
    cbe8:	bls	e674 <bt_compidtostr@@Base+0x4248>
    cbec:	ldr	r0, [pc, #1536]	; d1f4 <bt_compidtostr@@Base+0x2dc8>
    cbf0:	add	r0, pc, r0
    cbf4:	bx	lr
    cbf8:	ldr	r3, [pc, #1528]	; d1f8 <bt_compidtostr@@Base+0x2dcc>
    cbfc:	cmp	r0, r3
    cc00:	beq	fa34 <bt_compidtostr@@Base+0x5608>
    cc04:	bls	fa28 <bt_compidtostr@@Base+0x55fc>
    cc08:	ldr	r0, [pc, #1516]	; d1fc <bt_compidtostr@@Base+0x2dd0>
    cc0c:	add	r0, pc, r0
    cc10:	bx	lr
    cc14:	ldr	r3, [pc, #1508]	; d200 <bt_compidtostr@@Base+0x2dd4>
    cc18:	cmp	r0, r3
    cc1c:	beq	f2b4 <bt_compidtostr@@Base+0x4e88>
    cc20:	bls	f2a8 <bt_compidtostr@@Base+0x4e7c>
    cc24:	ldr	r0, [pc, #1496]	; d204 <bt_compidtostr@@Base+0x2dd8>
    cc28:	add	r0, pc, r0
    cc2c:	bx	lr
    cc30:	ldr	r3, [pc, #1488]	; d208 <bt_compidtostr@@Base+0x2ddc>
    cc34:	cmp	r0, r3
    cc38:	beq	101b4 <bt_compidtostr@@Base+0x5d88>
    cc3c:	bls	101a8 <bt_compidtostr@@Base+0x5d7c>
    cc40:	ldr	r0, [pc, #1476]	; d20c <bt_compidtostr@@Base+0x2de0>
    cc44:	add	r0, pc, r0
    cc48:	bx	lr
    cc4c:	cmp	r0, #492	; 0x1ec
    cc50:	beq	e950 <bt_compidtostr@@Base+0x4524>
    cc54:	bls	e944 <bt_compidtostr@@Base+0x4518>
    cc58:	ldr	r0, [pc, #1456]	; d210 <bt_compidtostr@@Base+0x2de4>
    cc5c:	add	r0, pc, r0
    cc60:	bx	lr
    cc64:	ldr	r3, [pc, #1448]	; d214 <bt_compidtostr@@Base+0x2de8>
    cc68:	cmp	r0, r3
    cc6c:	beq	f7c4 <bt_compidtostr@@Base+0x5398>
    cc70:	bls	f7b8 <bt_compidtostr@@Base+0x538c>
    cc74:	ldr	r0, [pc, #1436]	; d218 <bt_compidtostr@@Base+0x2dec>
    cc78:	add	r0, pc, r0
    cc7c:	bx	lr
    cc80:	ldr	r3, [pc, #1428]	; d21c <bt_compidtostr@@Base+0x2df0>
    cc84:	cmp	r0, r3
    cc88:	beq	f5b4 <bt_compidtostr@@Base+0x5188>
    cc8c:	bls	f5a8 <bt_compidtostr@@Base+0x517c>
    cc90:	ldr	r0, [pc, #1416]	; d220 <bt_compidtostr@@Base+0x2df4>
    cc94:	add	r0, pc, r0
    cc98:	bx	lr
    cc9c:	cmp	r0, #208	; 0xd0
    cca0:	beq	fdc4 <bt_compidtostr@@Base+0x5998>
    cca4:	bls	fdb8 <bt_compidtostr@@Base+0x598c>
    cca8:	ldr	r0, [pc, #1396]	; d224 <bt_compidtostr@@Base+0x2df8>
    ccac:	add	r0, pc, r0
    ccb0:	bx	lr
    ccb4:	ldr	r3, [pc, #1388]	; d228 <bt_compidtostr@@Base+0x2dfc>
    ccb8:	cmp	r0, r3
    ccbc:	beq	e590 <bt_compidtostr@@Base+0x4164>
    ccc0:	bls	e584 <bt_compidtostr@@Base+0x4158>
    ccc4:	ldr	r0, [pc, #1376]	; d22c <bt_compidtostr@@Base+0x2e00>
    ccc8:	add	r0, pc, r0
    cccc:	bx	lr
    ccd0:	ldr	r3, [pc, #1368]	; d230 <bt_compidtostr@@Base+0x2e04>
    ccd4:	cmp	r0, r3
    ccd8:	beq	fbb4 <bt_compidtostr@@Base+0x5788>
    ccdc:	bls	fba8 <bt_compidtostr@@Base+0x577c>
    cce0:	ldr	r0, [pc, #1356]	; d234 <bt_compidtostr@@Base+0x2e08>
    cce4:	add	r0, pc, r0
    cce8:	bx	lr
    ccec:	ldr	r3, [pc, #1348]	; d238 <bt_compidtostr@@Base+0x2e0c>
    ccf0:	cmp	r0, r3
    ccf4:	beq	f1f4 <bt_compidtostr@@Base+0x4dc8>
    ccf8:	bls	f1e8 <bt_compidtostr@@Base+0x4dbc>
    ccfc:	ldr	r0, [pc, #1336]	; d23c <bt_compidtostr@@Base+0x2e10>
    cd00:	add	r0, pc, r0
    cd04:	bx	lr
    cd08:	ldr	r3, [pc, #1328]	; d240 <bt_compidtostr@@Base+0x2e14>
    cd0c:	cmp	r0, r3
    cd10:	beq	100f4 <bt_compidtostr@@Base+0x5cc8>
    cd14:	bls	100e8 <bt_compidtostr@@Base+0x5cbc>
    cd18:	ldr	r0, [pc, #1316]	; d244 <bt_compidtostr@@Base+0x2e18>
    cd1c:	add	r0, pc, r0
    cd20:	bx	lr
    cd24:	cmp	r0, #980	; 0x3d4
    cd28:	beq	e890 <bt_compidtostr@@Base+0x4464>
    cd2c:	bls	e884 <bt_compidtostr@@Base+0x4458>
    cd30:	ldr	r0, [pc, #1296]	; d248 <bt_compidtostr@@Base+0x2e1c>
    cd34:	add	r0, pc, r0
    cd38:	bx	lr
    cd3c:	cmp	r0, #78	; 0x4e
    cd40:	beq	f8e4 <bt_compidtostr@@Base+0x54b8>
    cd44:	bls	f8d8 <bt_compidtostr@@Base+0x54ac>
    cd48:	ldr	r0, [pc, #1276]	; d24c <bt_compidtostr@@Base+0x2e20>
    cd4c:	add	r0, pc, r0
    cd50:	bx	lr
    cd54:	ldr	r3, [pc, #1268]	; d250 <bt_compidtostr@@Base+0x2e24>
    cd58:	cmp	r0, r3
    cd5c:	beq	f524 <bt_compidtostr@@Base+0x50f8>
    cd60:	bls	f518 <bt_compidtostr@@Base+0x50ec>
    cd64:	ldr	r0, [pc, #1256]	; d254 <bt_compidtostr@@Base+0x2e28>
    cd68:	add	r0, pc, r0
    cd6c:	bx	lr
    cd70:	ldr	r3, [pc, #1248]	; d258 <bt_compidtostr@@Base+0x2e2c>
    cd74:	cmp	r0, r3
    cd78:	beq	feb4 <bt_compidtostr@@Base+0x5a88>
    cd7c:	bls	fea8 <bt_compidtostr@@Base+0x5a7c>
    cd80:	ldr	r0, [pc, #1236]	; d25c <bt_compidtostr@@Base+0x2e30>
    cd84:	add	r0, pc, r0
    cd88:	bx	lr
    cd8c:	ldr	r3, [pc, #1228]	; d260 <bt_compidtostr@@Base+0x2e34>
    cd90:	cmp	r0, r3
    cd94:	beq	e710 <bt_compidtostr@@Base+0x42e4>
    cd98:	bls	e704 <bt_compidtostr@@Base+0x42d8>
    cd9c:	ldr	r0, [pc, #1216]	; d264 <bt_compidtostr@@Base+0x2e38>
    cda0:	add	r0, pc, r0
    cda4:	bx	lr
    cda8:	ldr	r3, [pc, #1208]	; d268 <bt_compidtostr@@Base+0x2e3c>
    cdac:	cmp	r0, r3
    cdb0:	beq	fac4 <bt_compidtostr@@Base+0x5698>
    cdb4:	bls	fab8 <bt_compidtostr@@Base+0x568c>
    cdb8:	ldr	r0, [pc, #1196]	; d26c <bt_compidtostr@@Base+0x2e40>
    cdbc:	add	r0, pc, r0
    cdc0:	bx	lr
    cdc4:	cmp	r0, #5
    cdc8:	beq	f374 <bt_compidtostr@@Base+0x4f48>
    cdcc:	bls	f368 <bt_compidtostr@@Base+0x4f3c>
    cdd0:	ldr	r0, [pc, #1176]	; d270 <bt_compidtostr@@Base+0x2e44>
    cdd4:	add	r0, pc, r0
    cdd8:	bx	lr
    cddc:	ldr	r3, [pc, #1168]	; d274 <bt_compidtostr@@Base+0x2e48>
    cde0:	cmp	r0, r3
    cde4:	beq	10274 <bt_compidtostr@@Base+0x5e48>
    cde8:	bls	10268 <bt_compidtostr@@Base+0x5e3c>
    cdec:	ldr	r0, [pc, #1156]	; d278 <bt_compidtostr@@Base+0x2e4c>
    cdf0:	add	r0, pc, r0
    cdf4:	bx	lr
    cdf8:	cmp	r0, #752	; 0x2f0
    cdfc:	beq	f074 <bt_compidtostr@@Base+0x4c48>
    ce00:	bls	f068 <bt_compidtostr@@Base+0x4c3c>
    ce04:	ldr	r0, [pc, #1136]	; d27c <bt_compidtostr@@Base+0x2e50>
    ce08:	add	r0, pc, r0
    ce0c:	bx	lr
    ce10:	cmp	r0, #13
    ce14:	beq	f824 <bt_compidtostr@@Base+0x53f8>
    ce18:	bls	f818 <bt_compidtostr@@Base+0x53ec>
    ce1c:	ldr	r0, [pc, #1116]	; d280 <bt_compidtostr@@Base+0x2e54>
    ce20:	add	r0, pc, r0
    ce24:	bx	lr
    ce28:	cmp	r0, #1020	; 0x3fc
    ce2c:	beq	f674 <bt_compidtostr@@Base+0x5248>
    ce30:	bls	f668 <bt_compidtostr@@Base+0x523c>
    ce34:	ldr	r0, [pc, #1096]	; d284 <bt_compidtostr@@Base+0x2e58>
    ce38:	add	r0, pc, r0
    ce3c:	bx	lr
    ce40:	ldr	r3, [pc, #1088]	; d288 <bt_compidtostr@@Base+0x2e5c>
    ce44:	cmp	r0, r3
    ce48:	beq	fe24 <bt_compidtostr@@Base+0x59f8>
    ce4c:	bls	fe18 <bt_compidtostr@@Base+0x59ec>
    ce50:	ldr	r0, [pc, #1076]	; d28c <bt_compidtostr@@Base+0x2e60>
    ce54:	add	r0, pc, r0
    ce58:	bx	lr
    ce5c:	cmp	r0, #500	; 0x1f4
    ce60:	beq	e5c0 <bt_compidtostr@@Base+0x4194>
    ce64:	bls	e5b4 <bt_compidtostr@@Base+0x4188>
    ce68:	ldr	r0, [pc, #1056]	; d290 <bt_compidtostr@@Base+0x2e64>
    ce6c:	add	r0, pc, r0
    ce70:	bx	lr
    ce74:	cmp	r0, #468	; 0x1d4
    ce78:	beq	fc44 <bt_compidtostr@@Base+0x5818>
    ce7c:	bls	fc38 <bt_compidtostr@@Base+0x580c>
    ce80:	ldr	r0, [pc, #1036]	; d294 <bt_compidtostr@@Base+0x2e68>
    ce84:	add	r0, pc, r0
    ce88:	bx	lr
    ce8c:	cmp	r0, #200	; 0xc8
    ce90:	beq	f224 <bt_compidtostr@@Base+0x4df8>
    ce94:	bls	f218 <bt_compidtostr@@Base+0x4dec>
    ce98:	ldr	r0, [pc, #1016]	; d298 <bt_compidtostr@@Base+0x2e6c>
    ce9c:	add	r0, pc, r0
    cea0:	bx	lr
    cea4:	ldr	r3, [pc, #1008]	; d29c <bt_compidtostr@@Base+0x2e70>
    cea8:	cmp	r0, r3
    ceac:	beq	10004 <bt_compidtostr@@Base+0x5bd8>
    ceb0:	bls	fff8 <bt_compidtostr@@Base+0x5bcc>
    ceb4:	ldr	r0, [pc, #996]	; d2a0 <bt_compidtostr@@Base+0x2e74>
    ceb8:	add	r0, pc, r0
    cebc:	bx	lr
    cec0:	cmp	r0, #1012	; 0x3f4
    cec4:	beq	e8c0 <bt_compidtostr@@Base+0x4494>
    cec8:	bls	e8b4 <bt_compidtostr@@Base+0x4488>
    cecc:	ldr	r0, [pc, #976]	; d2a4 <bt_compidtostr@@Base+0x2e78>
    ced0:	add	r0, pc, r0
    ced4:	bx	lr
    ced8:	ldr	r3, [pc, #968]	; d2a8 <bt_compidtostr@@Base+0x2e7c>
    cedc:	cmp	r0, r3
    cee0:	beq	f944 <bt_compidtostr@@Base+0x5518>
    cee4:	bls	f938 <bt_compidtostr@@Base+0x550c>
    cee8:	ldr	r0, [pc, #956]	; d2ac <bt_compidtostr@@Base+0x2e80>
    ceec:	add	r0, pc, r0
    cef0:	bx	lr
    cef4:	cmp	r0, #460	; 0x1cc
    cef8:	beq	f584 <bt_compidtostr@@Base+0x5158>
    cefc:	bls	f578 <bt_compidtostr@@Base+0x514c>
    cf00:	ldr	r0, [pc, #936]	; d2b0 <bt_compidtostr@@Base+0x2e84>
    cf04:	add	r0, pc, r0
    cf08:	bx	lr
    cf0c:	cmp	r0, #744	; 0x2e8
    cf10:	beq	ff44 <bt_compidtostr@@Base+0x5b18>
    cf14:	bls	ff38 <bt_compidtostr@@Base+0x5b0c>
    cf18:	ldr	r0, [pc, #916]	; d2b4 <bt_compidtostr@@Base+0x2e88>
    cf1c:	add	r0, pc, r0
    cf20:	bx	lr
    cf24:	cmp	r0, #167	; 0xa7
    cf28:	beq	e740 <bt_compidtostr@@Base+0x4314>
    cf2c:	bls	e734 <bt_compidtostr@@Base+0x4308>
    cf30:	ldr	r0, [pc, #896]	; d2b8 <bt_compidtostr@@Base+0x2e8c>
    cf34:	add	r0, pc, r0
    cf38:	bx	lr
    cf3c:	cmp	r0, #159	; 0x9f
    cf40:	beq	fa64 <bt_compidtostr@@Base+0x5638>
    cf44:	bls	fa58 <bt_compidtostr@@Base+0x562c>
    cf48:	ldr	r0, [pc, #876]	; d2bc <bt_compidtostr@@Base+0x2e90>
    cf4c:	add	r0, pc, r0
    cf50:	bx	lr
    cf54:	ldr	r3, [pc, #868]	; d2c0 <bt_compidtostr@@Base+0x2e94>
    cf58:	cmp	r0, r3
    cf5c:	beq	f2e4 <bt_compidtostr@@Base+0x4eb8>
    cf60:	bls	f2d8 <bt_compidtostr@@Base+0x4eac>
    cf64:	ldr	r0, [pc, #856]	; d2c4 <bt_compidtostr@@Base+0x2e98>
    cf68:	add	r0, pc, r0
    cf6c:	bx	lr
    cf70:	cmp	r0, #94	; 0x5e
    cf74:	beq	10184 <bt_compidtostr@@Base+0x5d58>
    cf78:	bls	10178 <bt_compidtostr@@Base+0x5d4c>
    cf7c:	ldr	r0, [pc, #836]	; d2c8 <bt_compidtostr@@Base+0x2e9c>
    cf80:	add	r0, pc, r0
    cf84:	bx	lr
    cf88:	ldr	r3, [pc, #828]	; d2cc <bt_compidtostr@@Base+0x2ea0>
    cf8c:	cmp	r0, r3
    cf90:	beq	e980 <bt_compidtostr@@Base+0x4554>
    cf94:	bls	e974 <bt_compidtostr@@Base+0x4548>
    cf98:	ldr	r0, [pc, #816]	; d2d0 <bt_compidtostr@@Base+0x2ea4>
    cf9c:	add	r0, pc, r0
    cfa0:	bx	lr
    cfa4:	ldr	r3, [pc, #808]	; d2d4 <bt_compidtostr@@Base+0x2ea8>
    cfa8:	cmp	r0, r3
    cfac:	beq	f9a4 <bt_compidtostr@@Base+0x5578>
    cfb0:	bls	f998 <bt_compidtostr@@Base+0x556c>
    cfb4:	ldr	r0, [pc, #796]	; d2d8 <bt_compidtostr@@Base+0x2eac>
    cfb8:	add	r0, pc, r0
    cfbc:	bx	lr
    cfc0:	cmp	r0, #175	; 0xaf
    cfc4:	beq	f644 <bt_compidtostr@@Base+0x5218>
    cfc8:	bls	f638 <bt_compidtostr@@Base+0x520c>
    cfcc:	ldr	r0, [pc, #776]	; d2dc <bt_compidtostr@@Base+0x2eb0>
    cfd0:	add	r0, pc, r0
    cfd4:	bx	lr
    cfd8:	cmp	r0, #1004	; 0x3ec
    cfdc:	beq	fee4 <bt_compidtostr@@Base+0x5ab8>
    cfe0:	bls	fed8 <bt_compidtostr@@Base+0x5aac>
    cfe4:	ldr	r0, [pc, #756]	; d2e0 <bt_compidtostr@@Base+0x2eb4>
    cfe8:	add	r0, pc, r0
    cfec:	bx	lr
    cff0:	cmp	r0, #143	; 0x8f
    cff4:	beq	f0a4 <bt_compidtostr@@Base+0x4c78>
    cff8:	bls	f098 <bt_compidtostr@@Base+0x4c6c>
    cffc:	ldr	r0, [pc, #736]	; d2e4 <bt_compidtostr@@Base+0x2eb8>
    d000:	add	r0, pc, r0
    d004:	bx	lr
    d008:	ldr	r3, [pc, #728]	; d2e8 <bt_compidtostr@@Base+0x2ebc>
    d00c:	cmp	r0, r3
    d010:	beq	fbe4 <bt_compidtostr@@Base+0x57b8>
    d014:	bls	fbd8 <bt_compidtostr@@Base+0x57ac>
    d018:	ldr	r0, [pc, #716]	; d2ec <bt_compidtostr@@Base+0x2ec0>
    d01c:	add	r0, pc, r0
    d020:	bx	lr
    d024:	andeq	sl, r0, r4, ror #10
    d028:			; <UNDEFINED> instruction: 0x000093b8
    d02c:	andeq	r0, r0, r1, lsr #3
    d030:	andeq	fp, r0, r4, ror #8
    d034:	andeq	r0, r0, r2, ror #4
    d038:	andeq	ip, r0, r0, ror #7
    d03c:	andeq	r0, r0, lr, asr r2
    d040:	andeq	ip, r0, ip, ror r3
    d044:	andeq	r0, r0, r6, ror #4
    d048:	strdeq	ip, [r0], -r0
    d04c:	andeq	r9, r0, r0, asr #5
    d050:	andeq	sl, r0, ip, lsr r4
    d054:	muleq	r0, fp, r1
    d058:	andeq	fp, r0, r0, lsl #7
    d05c:	andeq	fp, r0, r0, lsr r8
    d060:	andeq	lr, r0, ip, ror r4
    d064:	andeq	r0, r0, r6, lsl #7
    d068:	andeq	sp, r0, ip, lsr sl
    d06c:	andeq	r0, r0, r2, ror #6
    d070:	andeq	sp, r0, r8, asr #14
    d074:	andeq	r0, r0, r2, lsl #5
    d078:	andeq	ip, r0, r8, lsr r5
    d07c:	andeq	r0, r0, sl, asr r1
    d080:	andeq	sl, r0, ip, lsr #27
    d084:	strdeq	sl, [r0], -ip
    d088:	andeq	r9, r0, ip, lsl #15
    d08c:	andeq	r9, r0, r8, lsr #9
    d090:	andeq	ip, r0, r0, lsl #25
    d094:	andeq	sp, r0, r0, ror lr
    d098:	andeq	r0, r0, sp, lsl r2
    d09c:	andeq	fp, r0, ip, asr ip
    d0a0:	andeq	sl, r0, ip, asr #21
    d0a4:	andeq	r0, r0, r3, lsr #7
    d0a8:	andeq	sp, r0, r4, lsr fp
    d0ac:	andeq	r9, r0, r4, lsl #20
    d0b0:	andeq	lr, r0, r0, lsr r0
    d0b4:	ldrdeq	fp, [r0], -r4
    d0b8:	andeq	r9, r0, r8, lsr #25
    d0bc:	andeq	ip, r0, ip, asr #29
    d0c0:	andeq	r0, r0, r9, lsl r1
    d0c4:	andeq	sl, r0, ip, asr #14
    d0c8:	andeq	sp, r0, r8, asr r3
    d0cc:	andeq	r0, r0, r1, lsr #6
    d0d0:	andeq	sp, r0, r0, lsr #1
    d0d4:	muleq	r0, r8, r4
    d0d8:	andeq	fp, r0, r0, lsl r9
    d0dc:			; <UNDEFINED> instruction: 0x0000b3b4
    d0e0:	andeq	ip, r0, r8, lsr r8
    d0e4:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    d0e8:	andeq	ip, r0, r4, lsl #10
    d0ec:	andeq	r0, r0, sl, ror r3
    d0f0:	andeq	sp, r0, r0, lsr #13
    d0f4:	muleq	r0, r0, ip
    d0f8:			; <UNDEFINED> instruction: 0x000099b4
    d0fc:	andeq	r0, r0, sp, lsr r2
    d100:	andeq	fp, r0, r4, lsl sp
    d104:	muleq	r0, ip, r6
    d108:	muleq	r0, ip, r7
    d10c:	andeq	r0, r0, lr, asr #4
    d110:	andeq	fp, r0, r4, lsl #28
    d114:	muleq	r0, ip, r1
    d118:	andeq	r0, r0, fp, lsr #3
    d11c:	andeq	fp, r0, r4, ror #1
    d120:	andeq	ip, r0, ip, ror #17
    d124:	andeq	r0, r0, r9, lsl #2
    d128:	andeq	sl, r0, r4, lsr r4
    d12c:	andeq	r0, r0, lr, ror r2
    d130:	andeq	ip, r0, r4, lsl #3
    d134:	andeq	r0, r0, r9, lsr #2
    d138:	andeq	sl, r0, r0, asr #12
    d13c:	andeq	r0, r0, r9, lsr r1
    d140:	muleq	r0, r4, r7
    d144:	andeq	r0, r0, r2, ror r3
    d148:	andeq	sp, r0, r4, lsl #9
    d14c:	andeq	r0, r0, r1, asr #6
    d150:	strheq	sp, [r0], -ip
    d154:	andeq	r8, r0, r0, asr pc
    d158:	andeq	sp, r0, r8, ror ip
    d15c:	andeq	ip, r0, r4, ror r7
    d160:			; <UNDEFINED> instruction: 0x000002bf
    d164:	andeq	ip, r0, r8, lsr #11
    d168:	andeq	r0, r0, sl, ror #2
    d16c:	andeq	sl, r0, r4, asr #21
    d170:	andeq	ip, r0, r4, ror #22
    d174:	andeq	r9, r0, r4, ror r5
    d178:	andeq	r0, r0, r2, lsl #7
    d17c:	andeq	sp, r0, r4, ror #9
    d180:	andeq	r0, r0, r1, lsr r3
    d184:	andeq	ip, r0, r4, asr #29
    d188:	muleq	r0, r3, r1
    d18c:	andeq	sl, r0, ip, asr #26
    d190:	andeq	r0, r0, sl, asr #2
    d194:	andeq	sl, r0, ip, lsl #15
    d198:	andeq	r0, r0, r3, asr #7
    d19c:	andeq	sp, r0, r8, lsl #19
    d1a0:	andeq	r0, r0, lr, ror #4
    d1a4:	andeq	fp, r0, r0, ror lr
    d1a8:	andeq	r0, r0, sl, asr r3
    d1ac:	andeq	sp, r0, r8, asr r1
    d1b0:	andeq	r0, r0, r6, ror r2
    d1b4:	andeq	fp, r0, r8, asr #29
    d1b8:			; <UNDEFINED> instruction: 0x000001bb
    d1bc:	andeq	sl, r0, r8, asr #31
    d1c0:			; <UNDEFINED> instruction: 0x000003b3
    d1c4:			; <UNDEFINED> instruction: 0x0000d7b8
    d1c8:	andeq	r0, r0, r1, lsl r1
    d1cc:	andeq	sl, r0, r0, ror #4
    d1d0:	andeq	r0, r0, r2, asr r3
    d1d4:	andeq	sp, r0, r0, lsl r0
    d1d8:			; <UNDEFINED> instruction: 0x00009ab8
    d1dc:	muleq	r0, ip, lr
    d1e0:	strdeq	r9, [r0], -ip
    d1e4:	andeq	r0, r0, sp, lsr #4
    d1e8:	andeq	fp, r0, r4, lsl #16
    d1ec:	andeq	r9, r0, ip, asr r4
    d1f0:	andeq	r0, r0, pc, lsr #5
    d1f4:	andeq	ip, r0, r8, lsr #4
    d1f8:	andeq	r0, r0, r7, lsr #5
    d1fc:	andeq	ip, r0, r4, ror r1
    d200:	andeq	r0, r0, r1, lsl r3
    d204:	andeq	ip, r0, r8, asr sl
    d208:	andeq	r0, r0, r4, lsl #8
    d20c:	andeq	sp, r0, r0, lsl sp
    d210:	andeq	fp, r0, ip, lsr #4
    d214:	andeq	r0, r0, r2, asr r1
    d218:	andeq	sl, r0, ip, lsr #12
    d21c:	andeq	r0, r0, lr, ror r1
    d220:	andeq	sl, r0, r0, ror r9
    d224:	andeq	r9, r0, r4, ror fp
    d228:	andeq	r0, r0, r1, lsr r1
    d22c:	andeq	sl, r0, r0, lsr r3
    d230:	andeq	r0, r0, r6, asr r2
    d234:	andeq	fp, r0, r0, lsr sl
    d238:	muleq	r0, r3, r3
    d23c:	andeq	sp, r0, ip, lsr r3
    d240:	muleq	r0, r7, r2
    d244:	andeq	fp, r0, ip, ror #29
    d248:	andeq	sp, r0, r4, asr #16
    d24c:	andeq	r8, r0, r0, asr pc
    d250:			; <UNDEFINED> instruction: 0x000001b3
    d254:	andeq	sl, r0, r0, asr #25
    d258:	muleq	r0, fp, r3
    d25c:	andeq	sp, r0, r4, asr r3
    d260:	andeq	r0, r0, r2, ror r1
    d264:	muleq	r0, r8, r7
    d268:	andeq	r0, r0, r2, ror #2
    d26c:	andeq	sl, r0, r8, lsl #12
    d270:	andeq	r8, r0, r4, asr r8
    d274:	andeq	r0, r0, r9, lsl r3
    d278:	andeq	ip, r0, r0, asr r9
    d27c:	andeq	ip, r0, r0, ror #11
    d280:	muleq	r0, r4, r8
    d284:	andeq	sp, r0, r8, ror #20
    d288:	andeq	r0, r0, r5, lsl r2
    d28c:			; <UNDEFINED> instruction: 0x0000b3b4
    d290:	andeq	fp, r0, r4, asr #1
    d294:	andeq	sl, r0, ip, lsl #28
    d298:	andeq	r9, r0, r8, lsl #18
    d29c:	andeq	r0, r0, sl, ror #6
    d2a0:	andeq	ip, r0, ip, lsl #29
    d2a4:	andeq	sp, r0, r8, lsr r9
    d2a8:	andeq	r0, r0, fp, lsr #7
    d2ac:	andeq	sp, r0, r0, asr #6
    d2b0:	strdeq	sl, [r0], -r8
    d2b4:	andeq	ip, r0, ip, lsl r4
    d2b8:	muleq	r0, r8, r5
    d2bc:	ldrdeq	r9, [r0], -r0
    d2c0:	andeq	r0, r0, sp, lsl #4
    d2c4:	strdeq	fp, [r0], -r4
    d2c8:	andeq	r8, r0, ip, lsr #29
    d2cc:	andeq	r0, r0, r9, lsr r3
    d2d0:	ldrdeq	ip, [r0], -r4
    d2d4:	andeq	r0, r0, r5, lsr #4
    d2d8:	andeq	fp, r0, ip, ror #6
    d2dc:	andeq	r9, r0, r8, lsr #11
    d2e0:	andeq	sp, r0, r0, lsl #15
    d2e4:	muleq	r0, ip, r2
    d2e8:	andeq	r0, r0, r9, lsr #6
    d2ec:	andeq	ip, r0, r4, asr r8
    d2f0:			; <UNDEFINED> instruction: 0x000085b4
    d2f4:	andeq	r0, r0, r1, lsr #2
    d2f8:	andeq	r9, r0, r8, ror r8
    d2fc:	andeq	r0, r0, sl, ror r1
    d300:	andeq	r9, r0, r0, ror pc
    d304:	andeq	r9, r0, r4, lsl r3
    d308:	andeq	r0, r0, fp, lsl #3
    d30c:	andeq	sl, r0, r4, ror r0
    d310:	andeq	r8, r0, r8, ror #2
    d314:	andeq	r9, r0, r0, lsl r4
    d318:	andeq	r0, r0, r3, lsr #3
    d31c:	andeq	sl, r0, r0, lsl #4
    d320:	andeq	r0, r0, pc, lsl #5
    d324:	muleq	r0, ip, r4
    d328:			; <UNDEFINED> instruction: 0x000002b7
    d32c:	andeq	fp, r0, r0, lsr #15
    d330:	andeq	r8, r0, r4, lsr #4
    d334:	andeq	r0, r0, r5, lsr r2
    d338:	andeq	sl, r0, r4, asr #26
    d33c:			; <UNDEFINED> instruction: 0x000003bb
    d340:	andeq	ip, r0, r0, lsl ip
    d344:	andeq	sl, r0, r4, asr r6
    d348:	muleq	r0, r0, fp
    d34c:	andeq	sl, r0, r8, lsl #12
    d350:	andeq	sl, r0, ip, lsl #12
    d354:	andeq	sl, r0, r0, lsl r6
    d358:	andeq	fp, r0, r8, lsr #7
    d35c:	andeq	fp, r0, r0, lsr #13
    d360:	andeq	r8, r0, r4, asr #2
    d364:	andeq	sl, r0, r8, asr ip
    d368:			; <UNDEFINED> instruction: 0x000083b0
    d36c:	andeq	r9, r0, ip, lsl #13
    d370:	andeq	r9, r0, ip, ror sp
    d374:	andeq	r9, r0, r0, asr r1
    d378:	muleq	r0, r8, lr
    d37c:	andeq	r7, r0, ip, lsr #31
    d380:	andeq	r9, r0, ip, asr r2
    d384:	andeq	sl, r0, ip, ror r0
    d388:	ldrdeq	sl, [r0], -r0
    d38c:	ldrdeq	sl, [r0], -r0
    d390:	muleq	r0, r8, lr
    d394:	andeq	r7, r0, r0, lsr #29
    d398:	andeq	sl, r0, r8, lsl #28
    d39c:	andeq	fp, r0, ip, lsl r3
    d3a0:	andeq	ip, r0, ip, lsr #7
    d3a4:	andeq	ip, r0, r4, lsr #7
    d3a8:	andeq	r9, r0, r0, ror #18
    d3ac:	strdeq	r8, [r0], -r0
    d3b0:	andeq	ip, r0, r8, ror #26
    d3b4:	andeq	ip, r0, r4, ror sp
    d3b8:	andeq	fp, r0, ip, ror #7
    d3bc:	andeq	sp, r0, r4, lsl #1
    d3c0:	andeq	sl, r0, r4, lsl r4
    d3c4:	andeq	sl, r0, ip, lsl r4
    d3c8:	andeq	r9, r0, r4, asr #20
    d3cc:	andeq	fp, r0, r0, lsl #27
    d3d0:	muleq	r0, r8, r3
    d3d4:	andeq	r8, r0, r8, lsr #7
    d3d8:	strdeq	r7, [r0], -r4
    d3dc:	andeq	sl, r0, ip, lsr #16
    d3e0:	andeq	r9, r0, r4, ror r4
    d3e4:	andeq	r9, r0, r0, ror r4
    d3e8:	andeq	r8, r0, ip, ror r2
    d3ec:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    d3f0:	andeq	fp, r0, ip, lsr r8
    d3f4:	andeq	fp, r0, ip, asr #16
    d3f8:	andeq	ip, r0, ip, ror #14
    d3fc:	andeq	ip, r0, r4, ror r7
    d400:	ldrdeq	fp, [r0], -ip
    d404:	ldrdeq	fp, [r0], -r8
    d408:	strdeq	r9, [r0], -ip
    d40c:	andeq	r9, r0, r4, lsl #28
    d410:	andeq	sl, r0, r8, asr sp
    d414:	andeq	sl, r0, r4, asr sp
    d418:	andeq	sl, r0, ip, lsl r2
    d41c:	muleq	r0, ip, r2
    d420:	andeq	ip, r0, r8, lsl r5
    d424:	andeq	ip, r0, r0, asr #10
    d428:	andeq	ip, r0, r0, ror r7
    d42c:	andeq	fp, r0, r4, asr #16
    d430:	andeq	r8, r0, r8
    d434:	andeq	r8, r0, r4
    d438:	andeq	r9, r0, ip, ror r6
    d43c:	muleq	r0, r0, r6
    d440:	andeq	sl, r0, r0, ror #21
    d444:	andeq	sl, r0, ip, ror #21
    d448:	andeq	r8, r0, r8, ror #17
    d44c:	ldrdeq	r8, [r0], -r4
    d450:	andeq	r8, r0, r0, asr #23
    d454:	ldrdeq	r8, [r0], -r0
    d458:	andeq	sl, r0, ip, asr #15
    d45c:	strdeq	ip, [r0], -r8
    d460:	andeq	r8, r0, r8, ror r5
    d464:	andeq	r8, r0, r8, ror r5
    d468:	strdeq	fp, [r0], -r0
    d46c:	andeq	r9, r0, r8, asr r3
    d470:	andeq	fp, r0, r8, ror sl
    d474:	andeq	fp, r0, r0, lsl #21
    d478:	andeq	ip, r0, ip, lsr #18
    d47c:	andeq	ip, r0, ip, lsr #18
    d480:	andeq	fp, r0, r0, lsl pc
    d484:	andeq	fp, r0, r0, lsl pc
    d488:	andeq	sl, r0, r8, lsl #4
    d48c:	ldrdeq	sl, [r0], -r8
    d490:	andeq	r9, r0, r8, asr #25
    d494:	andeq	r9, r0, r4, ror #25
    d498:	andeq	fp, r0, ip, ror r8
    d49c:			; <UNDEFINED> instruction: 0x0000a9b4
    d4a0:	andeq	ip, r0, r4, lsl #22
    d4a4:	andeq	ip, r0, ip, lsl #22
    d4a8:	andeq	sl, r0, r8, asr r4
    d4ac:	andeq	r7, r0, ip, ror lr
    d4b0:	andeq	r8, r0, r8, asr #2
    d4b4:	andeq	r8, r0, r0, asr r1
    d4b8:	andeq	fp, r0, r0, asr r0
    d4bc:	andeq	fp, r0, r4, asr r0
    d4c0:	andeq	r8, r0, r0, asr #31
    d4c4:	andeq	r8, r0, r4, asr #31
    d4c8:	andeq	fp, r0, r4, lsl r5
    d4cc:	andeq	sl, r0, r4, ror #28
    d4d0:	andeq	ip, r0, r0, asr r0
    d4d4:	andeq	ip, r0, r4, asr r0
    d4d8:	muleq	r0, r0, r4
    d4dc:	ldrdeq	fp, [r0], -ip
    d4e0:			; <UNDEFINED> instruction: 0x000091b4
    d4e4:	andeq	r9, r0, r0, asr #3
    d4e8:	andeq	r8, r0, r0, ror r6
    d4ec:	andeq	r8, r0, r8, ror r6
    d4f0:	andeq	sl, r0, r0, ror #11
    d4f4:	andeq	sl, r0, r4, ror #11
    d4f8:	strdeq	ip, [r0], -r0
    d4fc:	andeq	fp, r0, r8, asr #5
    d500:	andeq	r9, r0, r8, lsr lr
    d504:	andeq	r9, r0, r0, asr #28
    d508:	muleq	r0, ip, r8
    d50c:	andeq	ip, r0, r0, asr #4
    d510:	muleq	r0, r0, ip
    d514:	muleq	r0, r4, ip
    d518:	andeq	r9, r0, r4, asr #11
    d51c:	andeq	r9, r0, r0, asr #11
    d520:	andeq	r8, r0, r4, lsr #12
    d524:	andeq	r8, r0, r0, lsr r6
    d528:	andeq	r9, r0, r4, ror #19
    d52c:	strdeq	ip, [r0], -r8
    d530:	strdeq	fp, [r0], -r0
    d534:	andeq	fp, r0, r0, lsl #10
    d538:	andeq	fp, r0, r4, lsr #28
    d53c:	andeq	r9, r0, r0, ror sp
    d540:	andeq	sl, r0, ip, lsr #5
    d544:	andeq	sl, r0, r0, asr #5
    d548:	andeq	r8, r0, r8, asr #21
    d54c:	andeq	r8, r0, r4, ror #21
    d550:			; <UNDEFINED> instruction: 0x0000b9b4
    d554:	andeq	fp, r0, r0, asr #19
    d558:	andeq	r8, r0, r0, asr pc
    d55c:	andeq	r8, r0, r4, lsl #17
    d560:	andeq	r9, r0, r4, asr #10
    d564:	andeq	r9, r0, r8, asr #10
    d568:			; <UNDEFINED> instruction: 0x00008db8
    d56c:	andeq	r8, r0, r8, asr #4
    d570:	andeq	ip, r0, r4, asr r3
    d574:	andeq	ip, r0, ip, asr r3
    d578:	andeq	fp, r0, r4, lsl #19
    d57c:	muleq	r0, r4, r9
    d580:	andeq	fp, r0, r0, asr r1
    d584:	andeq	fp, r0, ip, asr r1
    d588:	andeq	r9, r0, ip, lsr #20
    d58c:			; <UNDEFINED> instruction: 0x0000a9b8
    d590:	andeq	sl, r0, r0, asr #18
    d594:	andeq	sl, r0, r0, ror #19
    d598:	muleq	r0, ip, r9
    d59c:	muleq	r0, ip, r9
    d5a0:	andeq	sl, r0, r4, lsr r9
    d5a4:	andeq	sl, r0, r4, asr #18
    d5a8:	andeq	r8, r0, r0, ror sl
    d5ac:	andeq	r7, r0, ip, asr #17
    d5b0:	muleq	r0, r8, r9
    d5b4:	muleq	r0, ip, r9
    d5b8:	andeq	r7, r0, r4, ror #16
    d5bc:	andeq	r7, r0, r8, ror r8
    d5c0:	andeq	r8, r0, ip, asr #19
    d5c4:	ldrdeq	r8, [r0], -ip
    d5c8:	andeq	r7, r0, r0, lsr #16
    d5cc:	muleq	r0, r0, r9
    d5d0:	strdeq	r9, [r0], -r4
    d5d4:			; <UNDEFINED> instruction: 0x00009dbc
    d5d8:	andeq	ip, r0, r0, ror #20
    d5dc:	andeq	ip, r0, ip, lsr r0
    d5e0:	andeq	fp, r0, ip, lsl #26
    d5e4:	andeq	sl, r0, ip, asr fp
    d5e8:	muleq	r0, ip, r3
    d5ec:	andeq	r8, r0, r4, lsr r7
    d5f0:	andeq	r7, r0, r4, ror sp
    d5f4:	andeq	r7, r0, r4, lsl fp
    d5f8:	andeq	fp, r0, r0, lsl #5
    d5fc:	andeq	ip, r0, r0, ror #9
    d600:	muleq	r0, ip, r2
    d604:	andeq	r9, r0, r4, asr r1
    d608:	andeq	ip, r0, ip, ror r1
    d60c:	strheq	r8, [r0], -r4
    d610:	andeq	ip, r0, r8, lsr #13
    d614:	muleq	r0, r4, r5
    d618:	andeq	r8, r0, r8, lsr #6
    d61c:	cmp	r0, #70	; 0x46
    d620:	beq	f344 <bt_compidtostr@@Base+0x4f18>
    d624:	bls	f338 <bt_compidtostr@@Base+0x4f0c>
    d628:	ldr	r0, [pc, #-832]	; d2f0 <bt_compidtostr@@Base+0x2ec4>
    d62c:	add	r0, pc, r0
    d630:	bx	lr
    d634:	ldr	r3, [pc, #-840]	; d2f4 <bt_compidtostr@@Base+0x2ec8>
    d638:	cmp	r0, r3
    d63c:	beq	100c4 <bt_compidtostr@@Base+0x5c98>
    d640:	bls	100b8 <bt_compidtostr@@Base+0x5c8c>
    d644:	ldr	r0, [pc, #-852]	; d2f8 <bt_compidtostr@@Base+0x2ecc>
    d648:	add	r0, pc, r0
    d64c:	bx	lr
    d650:	ldr	r3, [pc, #-860]	; d2fc <bt_compidtostr@@Base+0x2ed0>
    d654:	cmp	r0, r3
    d658:	beq	f5e4 <bt_compidtostr@@Base+0x51b8>
    d65c:	bls	f5d8 <bt_compidtostr@@Base+0x51ac>
    d660:	ldr	r0, [pc, #-872]	; d300 <bt_compidtostr@@Base+0x2ed4>
    d664:	add	r0, pc, r0
    d668:	bx	lr
    d66c:	cmp	r0, #224	; 0xe0
    d670:	beq	fb24 <bt_compidtostr@@Base+0x56f8>
    d674:	bls	fb18 <bt_compidtostr@@Base+0x56ec>
    d678:	ldr	r0, [pc, #-892]	; d304 <bt_compidtostr@@Base+0x2ed8>
    d67c:	add	r0, pc, r0
    d680:	bx	lr
    d684:	ldr	r3, [pc, #-900]	; d308 <bt_compidtostr@@Base+0x2edc>
    d688:	cmp	r0, r3
    d68c:	beq	f3a4 <bt_compidtostr@@Base+0x4f78>
    d690:	bls	f398 <bt_compidtostr@@Base+0x4f6c>
    d694:	ldr	r0, [pc, #-912]	; d30c <bt_compidtostr@@Base+0x2ee0>
    d698:	add	r0, pc, r0
    d69c:	bx	lr
    d6a0:	cmp	r0, #29
    d6a4:	beq	ffa4 <bt_compidtostr@@Base+0x5b78>
    d6a8:	bls	ff98 <bt_compidtostr@@Base+0x5b6c>
    d6ac:	ldr	r0, [pc, #-932]	; d310 <bt_compidtostr@@Base+0x2ee4>
    d6b0:	add	r0, pc, r0
    d6b4:	bx	lr
    d6b8:	cmp	r0, #240	; 0xf0
    d6bc:	beq	f6a4 <bt_compidtostr@@Base+0x5278>
    d6c0:	bls	f698 <bt_compidtostr@@Base+0x526c>
    d6c4:	ldr	r0, [pc, #-952]	; d314 <bt_compidtostr@@Base+0x2ee8>
    d6c8:	add	r0, pc, r0
    d6cc:	bx	lr
    d6d0:	ldr	r3, [pc, #-960]	; d318 <bt_compidtostr@@Base+0x2eec>
    d6d4:	cmp	r0, r3
    d6d8:	beq	fca4 <bt_compidtostr@@Base+0x5878>
    d6dc:	bls	fc98 <bt_compidtostr@@Base+0x586c>
    d6e0:	ldr	r0, [pc, #-972]	; d31c <bt_compidtostr@@Base+0x2ef0>
    d6e4:	add	r0, pc, r0
    d6e8:	bx	lr
    d6ec:	ldr	r3, [pc, #-980]	; d320 <bt_compidtostr@@Base+0x2ef4>
    d6f0:	cmp	r0, r3
    d6f4:	beq	10244 <bt_compidtostr@@Base+0x5e18>
    d6f8:	bls	10238 <bt_compidtostr@@Base+0x5e0c>
    d6fc:	ldr	r0, [pc, #-992]	; d324 <bt_compidtostr@@Base+0x2ef8>
    d700:	add	r0, pc, r0
    d704:	bx	lr
    d708:	ldr	r3, [pc, #-1000]	; d328 <bt_compidtostr@@Base+0x2efc>
    d70c:	cmp	r0, r3
    d710:	beq	10064 <bt_compidtostr@@Base+0x5c38>
    d714:	bls	10058 <bt_compidtostr@@Base+0x5c2c>
    d718:	ldr	r0, [pc, #-1012]	; d32c <bt_compidtostr@@Base+0x2f00>
    d71c:	add	r0, pc, r0
    d720:	bx	lr
    d724:	cmp	r0, #45	; 0x2d
    d728:	beq	101e4 <bt_compidtostr@@Base+0x5db8>
    d72c:	bls	101d8 <bt_compidtostr@@Base+0x5dac>
    d730:	ldr	r0, [pc, #-1032]	; d330 <bt_compidtostr@@Base+0x2f04>
    d734:	add	r0, pc, r0
    d738:	bx	lr
    d73c:	ldr	r3, [pc, #-1040]	; d334 <bt_compidtostr@@Base+0x2f08>
    d740:	cmp	r0, r3
    d744:	beq	10124 <bt_compidtostr@@Base+0x5cf8>
    d748:	bls	10118 <bt_compidtostr@@Base+0x5cec>
    d74c:	ldr	r0, [pc, #-1052]	; d338 <bt_compidtostr@@Base+0x2f0c>
    d750:	add	r0, pc, r0
    d754:	bx	lr
    d758:	ldr	r3, [pc, #-1060]	; d33c <bt_compidtostr@@Base+0x2f10>
    d75c:	cmp	r0, r3
    d760:	beq	102a4 <bt_compidtostr@@Base+0x5e78>
    d764:	bls	10298 <bt_compidtostr@@Base+0x5e6c>
    d768:	ldr	r0, [pc, #-1072]	; d340 <bt_compidtostr@@Base+0x2f14>
    d76c:	add	r0, pc, r0
    d770:	bx	lr
    d774:	cmp	r0, #484	; 0x1e4
    d778:	beq	d7b0 <bt_compidtostr@@Base+0x3384>
    d77c:	bls	d7a4 <bt_compidtostr@@Base+0x3378>
    d780:	ldr	r0, [pc, #-1092]	; d344 <bt_compidtostr@@Base+0x2f18>
    d784:	add	r0, pc, r0
    d788:	bx	lr
    d78c:	ldr	r0, [pc, #-1100]	; d348 <bt_compidtostr@@Base+0x2f1c>
    d790:	add	r0, pc, r0
    d794:	bx	lr
    d798:	ldr	r0, [pc, #-1108]	; d34c <bt_compidtostr@@Base+0x2f20>
    d79c:	add	r0, pc, r0
    d7a0:	bx	lr
    d7a4:	ldr	r0, [pc, #-1116]	; d350 <bt_compidtostr@@Base+0x2f24>
    d7a8:	add	r0, pc, r0
    d7ac:	bx	lr
    d7b0:	ldr	r0, [pc, #-1124]	; d354 <bt_compidtostr@@Base+0x2f28>
    d7b4:	add	r0, pc, r0
    d7b8:	bx	lr
    d7bc:	ldr	r0, [pc, #-1132]	; d358 <bt_compidtostr@@Base+0x2f2c>
    d7c0:	add	r0, pc, r0
    d7c4:	bx	lr
    d7c8:	ldr	r0, [pc, #-1140]	; d35c <bt_compidtostr@@Base+0x2f30>
    d7cc:	add	r0, pc, r0
    d7d0:	bx	lr
    d7d4:	ldr	r0, [pc, #-1148]	; d360 <bt_compidtostr@@Base+0x2f34>
    d7d8:	add	r0, pc, r0
    d7dc:	bx	lr
    d7e0:	ldr	r0, [pc, #-1156]	; d364 <bt_compidtostr@@Base+0x2f38>
    d7e4:	add	r0, pc, r0
    d7e8:	bx	lr
    d7ec:	ldr	r0, [pc, #-1164]	; d368 <bt_compidtostr@@Base+0x2f3c>
    d7f0:	add	r0, pc, r0
    d7f4:	bx	lr
    d7f8:	ldr	r0, [pc, #-1172]	; d36c <bt_compidtostr@@Base+0x2f40>
    d7fc:	add	r0, pc, r0
    d800:	bx	lr
    d804:	ldr	r0, [pc, #-1180]	; d370 <bt_compidtostr@@Base+0x2f44>
    d808:	add	r0, pc, r0
    d80c:	bx	lr
    d810:	ldr	r0, [pc, #-1188]	; d374 <bt_compidtostr@@Base+0x2f48>
    d814:	add	r0, pc, r0
    d818:	bx	lr
    d81c:	ldr	r0, [pc, #-1196]	; d378 <bt_compidtostr@@Base+0x2f4c>
    d820:	add	r0, pc, r0
    d824:	bx	lr
    d828:	ldr	r0, [pc, #-1204]	; d37c <bt_compidtostr@@Base+0x2f50>
    d82c:	add	r0, pc, r0
    d830:	bx	lr
    d834:	ldr	r0, [pc, #-1212]	; d380 <bt_compidtostr@@Base+0x2f54>
    d838:	add	r0, pc, r0
    d83c:	bx	lr
    d840:	ldr	r0, [pc, #-1220]	; d384 <bt_compidtostr@@Base+0x2f58>
    d844:	add	r0, pc, r0
    d848:	bx	lr
    d84c:	ldr	r0, [pc, #-1228]	; d388 <bt_compidtostr@@Base+0x2f5c>
    d850:	add	r0, pc, r0
    d854:	bx	lr
    d858:	ldr	r0, [pc, #-1236]	; d38c <bt_compidtostr@@Base+0x2f60>
    d85c:	add	r0, pc, r0
    d860:	bx	lr
    d864:	ldr	r0, [pc, #-1244]	; d390 <bt_compidtostr@@Base+0x2f64>
    d868:	add	r0, pc, r0
    d86c:	bx	lr
    d870:	ldr	r0, [pc, #-1252]	; d394 <bt_compidtostr@@Base+0x2f68>
    d874:	add	r0, pc, r0
    d878:	bx	lr
    d87c:	ldr	r0, [pc, #-1260]	; d398 <bt_compidtostr@@Base+0x2f6c>
    d880:	add	r0, pc, r0
    d884:	bx	lr
    d888:	ldr	r0, [pc, #-1268]	; d39c <bt_compidtostr@@Base+0x2f70>
    d88c:	add	r0, pc, r0
    d890:	bx	lr
    d894:	ldr	r0, [pc, #-1276]	; d3a0 <bt_compidtostr@@Base+0x2f74>
    d898:	add	r0, pc, r0
    d89c:	bx	lr
    d8a0:	ldr	r0, [pc, #-1284]	; d3a4 <bt_compidtostr@@Base+0x2f78>
    d8a4:	add	r0, pc, r0
    d8a8:	bx	lr
    d8ac:	ldr	r0, [pc, #-1292]	; d3a8 <bt_compidtostr@@Base+0x2f7c>
    d8b0:	add	r0, pc, r0
    d8b4:	bx	lr
    d8b8:	ldr	r0, [pc, #-1300]	; d3ac <bt_compidtostr@@Base+0x2f80>
    d8bc:	add	r0, pc, r0
    d8c0:	bx	lr
    d8c4:	ldr	r0, [pc, #-1308]	; d3b0 <bt_compidtostr@@Base+0x2f84>
    d8c8:	add	r0, pc, r0
    d8cc:	bx	lr
    d8d0:	ldr	r0, [pc, #-1316]	; d3b4 <bt_compidtostr@@Base+0x2f88>
    d8d4:	add	r0, pc, r0
    d8d8:	bx	lr
    d8dc:	ldr	r0, [pc, #-1324]	; d3b8 <bt_compidtostr@@Base+0x2f8c>
    d8e0:	add	r0, pc, r0
    d8e4:	bx	lr
    d8e8:	ldr	r0, [pc, #-1332]	; d3bc <bt_compidtostr@@Base+0x2f90>
    d8ec:	add	r0, pc, r0
    d8f0:	bx	lr
    d8f4:	ldr	r0, [pc, #-1340]	; d3c0 <bt_compidtostr@@Base+0x2f94>
    d8f8:	add	r0, pc, r0
    d8fc:	bx	lr
    d900:	ldr	r0, [pc, #-1348]	; d3c4 <bt_compidtostr@@Base+0x2f98>
    d904:	add	r0, pc, r0
    d908:	bx	lr
    d90c:	ldr	r0, [pc, #-1356]	; d3c8 <bt_compidtostr@@Base+0x2f9c>
    d910:	add	r0, pc, r0
    d914:	bx	lr
    d918:	ldr	r0, [pc, #-1364]	; d3cc <bt_compidtostr@@Base+0x2fa0>
    d91c:	add	r0, pc, r0
    d920:	bx	lr
    d924:	ldr	r0, [pc, #-1372]	; d3d0 <bt_compidtostr@@Base+0x2fa4>
    d928:	add	r0, pc, r0
    d92c:	bx	lr
    d930:	ldr	r0, [pc, #-1380]	; d3d4 <bt_compidtostr@@Base+0x2fa8>
    d934:	add	r0, pc, r0
    d938:	bx	lr
    d93c:	ldr	r0, [pc, #-1388]	; d3d8 <bt_compidtostr@@Base+0x2fac>
    d940:	add	r0, pc, r0
    d944:	bx	lr
    d948:	ldr	r0, [pc, #-1396]	; d3dc <bt_compidtostr@@Base+0x2fb0>
    d94c:	add	r0, pc, r0
    d950:	bx	lr
    d954:	ldr	r0, [pc, #-1404]	; d3e0 <bt_compidtostr@@Base+0x2fb4>
    d958:	add	r0, pc, r0
    d95c:	bx	lr
    d960:	ldr	r0, [pc, #-1412]	; d3e4 <bt_compidtostr@@Base+0x2fb8>
    d964:	add	r0, pc, r0
    d968:	bx	lr
    d96c:	ldr	r0, [pc, #-1420]	; d3e8 <bt_compidtostr@@Base+0x2fbc>
    d970:	add	r0, pc, r0
    d974:	bx	lr
    d978:	ldr	r0, [pc, #-1428]	; d3ec <bt_compidtostr@@Base+0x2fc0>
    d97c:	add	r0, pc, r0
    d980:	bx	lr
    d984:	ldr	r0, [pc, #-1436]	; d3f0 <bt_compidtostr@@Base+0x2fc4>
    d988:	add	r0, pc, r0
    d98c:	bx	lr
    d990:	ldr	r0, [pc, #-1444]	; d3f4 <bt_compidtostr@@Base+0x2fc8>
    d994:	add	r0, pc, r0
    d998:	bx	lr
    d99c:	ldr	r0, [pc, #-1452]	; d3f8 <bt_compidtostr@@Base+0x2fcc>
    d9a0:	add	r0, pc, r0
    d9a4:	bx	lr
    d9a8:	ldr	r0, [pc, #-1460]	; d3fc <bt_compidtostr@@Base+0x2fd0>
    d9ac:	add	r0, pc, r0
    d9b0:	bx	lr
    d9b4:	ldr	r0, [pc, #-1468]	; d400 <bt_compidtostr@@Base+0x2fd4>
    d9b8:	add	r0, pc, r0
    d9bc:	bx	lr
    d9c0:	ldr	r0, [pc, #-1476]	; d404 <bt_compidtostr@@Base+0x2fd8>
    d9c4:	add	r0, pc, r0
    d9c8:	bx	lr
    d9cc:	ldr	r0, [pc, #-1484]	; d408 <bt_compidtostr@@Base+0x2fdc>
    d9d0:	add	r0, pc, r0
    d9d4:	bx	lr
    d9d8:	ldr	r0, [pc, #-1492]	; d40c <bt_compidtostr@@Base+0x2fe0>
    d9dc:	add	r0, pc, r0
    d9e0:	bx	lr
    d9e4:	ldr	r0, [pc, #-1500]	; d410 <bt_compidtostr@@Base+0x2fe4>
    d9e8:	add	r0, pc, r0
    d9ec:	bx	lr
    d9f0:	ldr	r0, [pc, #-1508]	; d414 <bt_compidtostr@@Base+0x2fe8>
    d9f4:	add	r0, pc, r0
    d9f8:	bx	lr
    d9fc:	ldr	r0, [pc, #-1516]	; d418 <bt_compidtostr@@Base+0x2fec>
    da00:	add	r0, pc, r0
    da04:	bx	lr
    da08:	ldr	r0, [pc, #-1524]	; d41c <bt_compidtostr@@Base+0x2ff0>
    da0c:	add	r0, pc, r0
    da10:	bx	lr
    da14:	ldr	r0, [pc, #-1532]	; d420 <bt_compidtostr@@Base+0x2ff4>
    da18:	add	r0, pc, r0
    da1c:	bx	lr
    da20:	ldr	r0, [pc, #-1540]	; d424 <bt_compidtostr@@Base+0x2ff8>
    da24:	add	r0, pc, r0
    da28:	bx	lr
    da2c:	ldr	r0, [pc, #-1548]	; d428 <bt_compidtostr@@Base+0x2ffc>
    da30:	add	r0, pc, r0
    da34:	bx	lr
    da38:	ldr	r0, [pc, #-1556]	; d42c <bt_compidtostr@@Base+0x3000>
    da3c:	add	r0, pc, r0
    da40:	bx	lr
    da44:	ldr	r0, [pc, #-1564]	; d430 <bt_compidtostr@@Base+0x3004>
    da48:	add	r0, pc, r0
    da4c:	bx	lr
    da50:	ldr	r0, [pc, #-1572]	; d434 <bt_compidtostr@@Base+0x3008>
    da54:	add	r0, pc, r0
    da58:	bx	lr
    da5c:	ldr	r0, [pc, #-1580]	; d438 <bt_compidtostr@@Base+0x300c>
    da60:	add	r0, pc, r0
    da64:	bx	lr
    da68:	ldr	r0, [pc, #-1588]	; d43c <bt_compidtostr@@Base+0x3010>
    da6c:	add	r0, pc, r0
    da70:	bx	lr
    da74:	ldr	r0, [pc, #-1596]	; d440 <bt_compidtostr@@Base+0x3014>
    da78:	add	r0, pc, r0
    da7c:	bx	lr
    da80:	ldr	r0, [pc, #-1604]	; d444 <bt_compidtostr@@Base+0x3018>
    da84:	add	r0, pc, r0
    da88:	bx	lr
    da8c:	ldr	r0, [pc, #-1612]	; d448 <bt_compidtostr@@Base+0x301c>
    da90:	add	r0, pc, r0
    da94:	bx	lr
    da98:	ldr	r0, [pc, #-1620]	; d44c <bt_compidtostr@@Base+0x3020>
    da9c:	add	r0, pc, r0
    daa0:	bx	lr
    daa4:	ldr	r0, [pc, #-1628]	; d450 <bt_compidtostr@@Base+0x3024>
    daa8:	add	r0, pc, r0
    daac:	bx	lr
    dab0:	ldr	r0, [pc, #-1636]	; d454 <bt_compidtostr@@Base+0x3028>
    dab4:	add	r0, pc, r0
    dab8:	bx	lr
    dabc:	ldr	r0, [pc, #-1644]	; d458 <bt_compidtostr@@Base+0x302c>
    dac0:	add	r0, pc, r0
    dac4:	bx	lr
    dac8:	ldr	r0, [pc, #-1652]	; d45c <bt_compidtostr@@Base+0x3030>
    dacc:	add	r0, pc, r0
    dad0:	bx	lr
    dad4:	ldr	r0, [pc, #-1660]	; d460 <bt_compidtostr@@Base+0x3034>
    dad8:	add	r0, pc, r0
    dadc:	bx	lr
    dae0:	ldr	r0, [pc, #-1668]	; d464 <bt_compidtostr@@Base+0x3038>
    dae4:	add	r0, pc, r0
    dae8:	bx	lr
    daec:	ldr	r0, [pc, #-1676]	; d468 <bt_compidtostr@@Base+0x303c>
    daf0:	add	r0, pc, r0
    daf4:	bx	lr
    daf8:	ldr	r0, [pc, #-1684]	; d46c <bt_compidtostr@@Base+0x3040>
    dafc:	add	r0, pc, r0
    db00:	bx	lr
    db04:	ldr	r0, [pc, #-1692]	; d470 <bt_compidtostr@@Base+0x3044>
    db08:	add	r0, pc, r0
    db0c:	bx	lr
    db10:	ldr	r0, [pc, #-1700]	; d474 <bt_compidtostr@@Base+0x3048>
    db14:	add	r0, pc, r0
    db18:	bx	lr
    db1c:	ldr	r0, [pc, #-1708]	; d478 <bt_compidtostr@@Base+0x304c>
    db20:	add	r0, pc, r0
    db24:	bx	lr
    db28:	ldr	r0, [pc, #-1716]	; d47c <bt_compidtostr@@Base+0x3050>
    db2c:	add	r0, pc, r0
    db30:	bx	lr
    db34:	ldr	r0, [pc, #-1724]	; d480 <bt_compidtostr@@Base+0x3054>
    db38:	add	r0, pc, r0
    db3c:	bx	lr
    db40:	ldr	r0, [pc, #-1732]	; d484 <bt_compidtostr@@Base+0x3058>
    db44:	add	r0, pc, r0
    db48:	bx	lr
    db4c:	ldr	r0, [pc, #-1740]	; d488 <bt_compidtostr@@Base+0x305c>
    db50:	add	r0, pc, r0
    db54:	bx	lr
    db58:	ldr	r0, [pc, #-1748]	; d48c <bt_compidtostr@@Base+0x3060>
    db5c:	add	r0, pc, r0
    db60:	bx	lr
    db64:	ldr	r0, [pc, #-1756]	; d490 <bt_compidtostr@@Base+0x3064>
    db68:	add	r0, pc, r0
    db6c:	bx	lr
    db70:	ldr	r0, [pc, #-1764]	; d494 <bt_compidtostr@@Base+0x3068>
    db74:	add	r0, pc, r0
    db78:	bx	lr
    db7c:	ldr	r0, [pc, #-1772]	; d498 <bt_compidtostr@@Base+0x306c>
    db80:	add	r0, pc, r0
    db84:	bx	lr
    db88:	ldr	r0, [pc, #-1780]	; d49c <bt_compidtostr@@Base+0x3070>
    db8c:	add	r0, pc, r0
    db90:	bx	lr
    db94:	ldr	r0, [pc, #-1788]	; d4a0 <bt_compidtostr@@Base+0x3074>
    db98:	add	r0, pc, r0
    db9c:	bx	lr
    dba0:	ldr	r0, [pc, #-1796]	; d4a4 <bt_compidtostr@@Base+0x3078>
    dba4:	add	r0, pc, r0
    dba8:	bx	lr
    dbac:	ldr	r0, [pc, #-1804]	; d4a8 <bt_compidtostr@@Base+0x307c>
    dbb0:	add	r0, pc, r0
    dbb4:	bx	lr
    dbb8:	ldr	r0, [pc, #-1812]	; d4ac <bt_compidtostr@@Base+0x3080>
    dbbc:	add	r0, pc, r0
    dbc0:	bx	lr
    dbc4:	ldr	r0, [pc, #-1820]	; d4b0 <bt_compidtostr@@Base+0x3084>
    dbc8:	add	r0, pc, r0
    dbcc:	bx	lr
    dbd0:	ldr	r0, [pc, #-1828]	; d4b4 <bt_compidtostr@@Base+0x3088>
    dbd4:	add	r0, pc, r0
    dbd8:	bx	lr
    dbdc:	ldr	r0, [pc, #-1836]	; d4b8 <bt_compidtostr@@Base+0x308c>
    dbe0:	add	r0, pc, r0
    dbe4:	bx	lr
    dbe8:	ldr	r0, [pc, #-1844]	; d4bc <bt_compidtostr@@Base+0x3090>
    dbec:	add	r0, pc, r0
    dbf0:	bx	lr
    dbf4:	ldr	r0, [pc, #-1852]	; d4c0 <bt_compidtostr@@Base+0x3094>
    dbf8:	add	r0, pc, r0
    dbfc:	bx	lr
    dc00:	ldr	r0, [pc, #-1860]	; d4c4 <bt_compidtostr@@Base+0x3098>
    dc04:	add	r0, pc, r0
    dc08:	bx	lr
    dc0c:	ldr	r0, [pc, #-1868]	; d4c8 <bt_compidtostr@@Base+0x309c>
    dc10:	add	r0, pc, r0
    dc14:	bx	lr
    dc18:	ldr	r0, [pc, #-1876]	; d4cc <bt_compidtostr@@Base+0x30a0>
    dc1c:	add	r0, pc, r0
    dc20:	bx	lr
    dc24:	ldr	r0, [pc, #-1884]	; d4d0 <bt_compidtostr@@Base+0x30a4>
    dc28:	add	r0, pc, r0
    dc2c:	bx	lr
    dc30:	ldr	r0, [pc, #-1892]	; d4d4 <bt_compidtostr@@Base+0x30a8>
    dc34:	add	r0, pc, r0
    dc38:	bx	lr
    dc3c:	ldr	r0, [pc, #-1900]	; d4d8 <bt_compidtostr@@Base+0x30ac>
    dc40:	add	r0, pc, r0
    dc44:	bx	lr
    dc48:	ldr	r0, [pc, #-1908]	; d4dc <bt_compidtostr@@Base+0x30b0>
    dc4c:	add	r0, pc, r0
    dc50:	bx	lr
    dc54:	ldr	r0, [pc, #-1916]	; d4e0 <bt_compidtostr@@Base+0x30b4>
    dc58:	add	r0, pc, r0
    dc5c:	bx	lr
    dc60:	ldr	r0, [pc, #-1924]	; d4e4 <bt_compidtostr@@Base+0x30b8>
    dc64:	add	r0, pc, r0
    dc68:	bx	lr
    dc6c:	ldr	r0, [pc, #-1932]	; d4e8 <bt_compidtostr@@Base+0x30bc>
    dc70:	add	r0, pc, r0
    dc74:	bx	lr
    dc78:	ldr	r0, [pc, #-1940]	; d4ec <bt_compidtostr@@Base+0x30c0>
    dc7c:	add	r0, pc, r0
    dc80:	bx	lr
    dc84:	ldr	r0, [pc, #-1948]	; d4f0 <bt_compidtostr@@Base+0x30c4>
    dc88:	add	r0, pc, r0
    dc8c:	bx	lr
    dc90:	ldr	r0, [pc, #-1956]	; d4f4 <bt_compidtostr@@Base+0x30c8>
    dc94:	add	r0, pc, r0
    dc98:	bx	lr
    dc9c:	ldr	r0, [pc, #-1964]	; d4f8 <bt_compidtostr@@Base+0x30cc>
    dca0:	add	r0, pc, r0
    dca4:	bx	lr
    dca8:	ldr	r0, [pc, #-1972]	; d4fc <bt_compidtostr@@Base+0x30d0>
    dcac:	add	r0, pc, r0
    dcb0:	bx	lr
    dcb4:	ldr	r0, [pc, #-1980]	; d500 <bt_compidtostr@@Base+0x30d4>
    dcb8:	add	r0, pc, r0
    dcbc:	bx	lr
    dcc0:	ldr	r0, [pc, #-1988]	; d504 <bt_compidtostr@@Base+0x30d8>
    dcc4:	add	r0, pc, r0
    dcc8:	bx	lr
    dccc:	ldr	r0, [pc, #-1996]	; d508 <bt_compidtostr@@Base+0x30dc>
    dcd0:	add	r0, pc, r0
    dcd4:	bx	lr
    dcd8:	ldr	r0, [pc, #-2004]	; d50c <bt_compidtostr@@Base+0x30e0>
    dcdc:	add	r0, pc, r0
    dce0:	bx	lr
    dce4:	ldr	r0, [pc, #-2012]	; d510 <bt_compidtostr@@Base+0x30e4>
    dce8:	add	r0, pc, r0
    dcec:	bx	lr
    dcf0:	ldr	r0, [pc, #-2020]	; d514 <bt_compidtostr@@Base+0x30e8>
    dcf4:	add	r0, pc, r0
    dcf8:	bx	lr
    dcfc:	ldr	r0, [pc, #-2028]	; d518 <bt_compidtostr@@Base+0x30ec>
    dd00:	add	r0, pc, r0
    dd04:	bx	lr
    dd08:	ldr	r0, [pc, #-2036]	; d51c <bt_compidtostr@@Base+0x30f0>
    dd0c:	add	r0, pc, r0
    dd10:	bx	lr
    dd14:	ldr	r0, [pc, #-2044]	; d520 <bt_compidtostr@@Base+0x30f4>
    dd18:	add	r0, pc, r0
    dd1c:	bx	lr
    dd20:	ldr	r0, [pc, #-2052]	; d524 <bt_compidtostr@@Base+0x30f8>
    dd24:	add	r0, pc, r0
    dd28:	bx	lr
    dd2c:	ldr	r0, [pc, #-2060]	; d528 <bt_compidtostr@@Base+0x30fc>
    dd30:	add	r0, pc, r0
    dd34:	bx	lr
    dd38:	ldr	r0, [pc, #-2068]	; d52c <bt_compidtostr@@Base+0x3100>
    dd3c:	add	r0, pc, r0
    dd40:	bx	lr
    dd44:	ldr	r0, [pc, #-2076]	; d530 <bt_compidtostr@@Base+0x3104>
    dd48:	add	r0, pc, r0
    dd4c:	bx	lr
    dd50:	ldr	r0, [pc, #-2084]	; d534 <bt_compidtostr@@Base+0x3108>
    dd54:	add	r0, pc, r0
    dd58:	bx	lr
    dd5c:	ldr	r0, [pc, #-2092]	; d538 <bt_compidtostr@@Base+0x310c>
    dd60:	add	r0, pc, r0
    dd64:	bx	lr
    dd68:	ldr	r0, [pc, #-2100]	; d53c <bt_compidtostr@@Base+0x3110>
    dd6c:	add	r0, pc, r0
    dd70:	bx	lr
    dd74:	ldr	r0, [pc, #-2108]	; d540 <bt_compidtostr@@Base+0x3114>
    dd78:	add	r0, pc, r0
    dd7c:	bx	lr
    dd80:	ldr	r0, [pc, #-2116]	; d544 <bt_compidtostr@@Base+0x3118>
    dd84:	add	r0, pc, r0
    dd88:	bx	lr
    dd8c:	ldr	r0, [pc, #-2124]	; d548 <bt_compidtostr@@Base+0x311c>
    dd90:	add	r0, pc, r0
    dd94:	bx	lr
    dd98:	ldr	r0, [pc, #-2132]	; d54c <bt_compidtostr@@Base+0x3120>
    dd9c:	add	r0, pc, r0
    dda0:	bx	lr
    dda4:	ldr	r0, [pc, #-2140]	; d550 <bt_compidtostr@@Base+0x3124>
    dda8:	add	r0, pc, r0
    ddac:	bx	lr
    ddb0:	ldr	r0, [pc, #-2148]	; d554 <bt_compidtostr@@Base+0x3128>
    ddb4:	add	r0, pc, r0
    ddb8:	bx	lr
    ddbc:	ldr	r0, [pc, #-2156]	; d558 <bt_compidtostr@@Base+0x312c>
    ddc0:	add	r0, pc, r0
    ddc4:	bx	lr
    ddc8:	ldr	r0, [pc, #-2164]	; d55c <bt_compidtostr@@Base+0x3130>
    ddcc:	add	r0, pc, r0
    ddd0:	bx	lr
    ddd4:	ldr	r0, [pc, #-2172]	; d560 <bt_compidtostr@@Base+0x3134>
    ddd8:	add	r0, pc, r0
    dddc:	bx	lr
    dde0:	ldr	r0, [pc, #-2180]	; d564 <bt_compidtostr@@Base+0x3138>
    dde4:	add	r0, pc, r0
    dde8:	bx	lr
    ddec:	ldr	r0, [pc, #-2188]	; d568 <bt_compidtostr@@Base+0x313c>
    ddf0:	add	r0, pc, r0
    ddf4:	bx	lr
    ddf8:	ldr	r0, [pc, #-2196]	; d56c <bt_compidtostr@@Base+0x3140>
    ddfc:	add	r0, pc, r0
    de00:	bx	lr
    de04:	ldr	r0, [pc, #-2204]	; d570 <bt_compidtostr@@Base+0x3144>
    de08:	add	r0, pc, r0
    de0c:	bx	lr
    de10:	ldr	r0, [pc, #-2212]	; d574 <bt_compidtostr@@Base+0x3148>
    de14:	add	r0, pc, r0
    de18:	bx	lr
    de1c:	ldr	r0, [pc, #-2220]	; d578 <bt_compidtostr@@Base+0x314c>
    de20:	add	r0, pc, r0
    de24:	bx	lr
    de28:	ldr	r0, [pc, #-2228]	; d57c <bt_compidtostr@@Base+0x3150>
    de2c:	add	r0, pc, r0
    de30:	bx	lr
    de34:	ldr	r0, [pc, #-2236]	; d580 <bt_compidtostr@@Base+0x3154>
    de38:	add	r0, pc, r0
    de3c:	bx	lr
    de40:	ldr	r0, [pc, #-2244]	; d584 <bt_compidtostr@@Base+0x3158>
    de44:	add	r0, pc, r0
    de48:	bx	lr
    de4c:	ldr	r0, [pc, #-2252]	; d588 <bt_compidtostr@@Base+0x315c>
    de50:	add	r0, pc, r0
    de54:	bx	lr
    de58:	ldr	r0, [pc, #-2260]	; d58c <bt_compidtostr@@Base+0x3160>
    de5c:	add	r0, pc, r0
    de60:	bx	lr
    de64:	ldr	r0, [pc, #-2268]	; d590 <bt_compidtostr@@Base+0x3164>
    de68:	add	r0, pc, r0
    de6c:	bx	lr
    de70:	ldr	r0, [pc, #-2276]	; d594 <bt_compidtostr@@Base+0x3168>
    de74:	add	r0, pc, r0
    de78:	bx	lr
    de7c:	ldr	r0, [pc, #-2284]	; d598 <bt_compidtostr@@Base+0x316c>
    de80:	add	r0, pc, r0
    de84:	bx	lr
    de88:	ldr	r0, [pc, #-2292]	; d59c <bt_compidtostr@@Base+0x3170>
    de8c:	add	r0, pc, r0
    de90:	bx	lr
    de94:	ldr	r0, [pc, #-2300]	; d5a0 <bt_compidtostr@@Base+0x3174>
    de98:	add	r0, pc, r0
    de9c:	bx	lr
    dea0:	ldr	r0, [pc, #-2308]	; d5a4 <bt_compidtostr@@Base+0x3178>
    dea4:	add	r0, pc, r0
    dea8:	bx	lr
    deac:	ldr	r0, [pc, #-2316]	; d5a8 <bt_compidtostr@@Base+0x317c>
    deb0:	add	r0, pc, r0
    deb4:	bx	lr
    deb8:	ldr	r0, [pc, #-2324]	; d5ac <bt_compidtostr@@Base+0x3180>
    debc:	add	r0, pc, r0
    dec0:	bx	lr
    dec4:	ldr	r0, [pc, #-2332]	; d5b0 <bt_compidtostr@@Base+0x3184>
    dec8:	add	r0, pc, r0
    decc:	bx	lr
    ded0:	ldr	r0, [pc, #-2340]	; d5b4 <bt_compidtostr@@Base+0x3188>
    ded4:	add	r0, pc, r0
    ded8:	bx	lr
    dedc:	ldr	r0, [pc, #-2348]	; d5b8 <bt_compidtostr@@Base+0x318c>
    dee0:	add	r0, pc, r0
    dee4:	bx	lr
    dee8:	ldr	r0, [pc, #-2356]	; d5bc <bt_compidtostr@@Base+0x3190>
    deec:	add	r0, pc, r0
    def0:	bx	lr
    def4:	ldr	r0, [pc, #-2364]	; d5c0 <bt_compidtostr@@Base+0x3194>
    def8:	add	r0, pc, r0
    defc:	bx	lr
    df00:	ldr	r0, [pc, #-2372]	; d5c4 <bt_compidtostr@@Base+0x3198>
    df04:	add	r0, pc, r0
    df08:	bx	lr
    df0c:	ldr	r0, [pc, #-2380]	; d5c8 <bt_compidtostr@@Base+0x319c>
    df10:	add	r0, pc, r0
    df14:	bx	lr
    df18:	ldr	r0, [pc, #-2388]	; d5cc <bt_compidtostr@@Base+0x31a0>
    df1c:	add	r0, pc, r0
    df20:	bx	lr
    df24:	ldr	r0, [pc, #-2396]	; d5d0 <bt_compidtostr@@Base+0x31a4>
    df28:	add	r0, pc, r0
    df2c:	bx	lr
    df30:	ldr	r0, [pc, #-2404]	; d5d4 <bt_compidtostr@@Base+0x31a8>
    df34:	add	r0, pc, r0
    df38:	bx	lr
    df3c:	ldr	r0, [pc, #-2412]	; d5d8 <bt_compidtostr@@Base+0x31ac>
    df40:	add	r0, pc, r0
    df44:	bx	lr
    df48:	ldr	r0, [pc, #-2420]	; d5dc <bt_compidtostr@@Base+0x31b0>
    df4c:	add	r0, pc, r0
    df50:	bx	lr
    df54:	ldr	r0, [pc, #-2428]	; d5e0 <bt_compidtostr@@Base+0x31b4>
    df58:	add	r0, pc, r0
    df5c:	bx	lr
    df60:	ldr	r0, [pc, #-2436]	; d5e4 <bt_compidtostr@@Base+0x31b8>
    df64:	add	r0, pc, r0
    df68:	bx	lr
    df6c:	ldr	r0, [pc, #-2444]	; d5e8 <bt_compidtostr@@Base+0x31bc>
    df70:	add	r0, pc, r0
    df74:	bx	lr
    df78:	ldr	r0, [pc, #-2452]	; d5ec <bt_compidtostr@@Base+0x31c0>
    df7c:	add	r0, pc, r0
    df80:	bx	lr
    df84:	ldr	r0, [pc, #-2460]	; d5f0 <bt_compidtostr@@Base+0x31c4>
    df88:	add	r0, pc, r0
    df8c:	bx	lr
    df90:	ldr	r0, [pc, #-2468]	; d5f4 <bt_compidtostr@@Base+0x31c8>
    df94:	add	r0, pc, r0
    df98:	bx	lr
    df9c:	ldr	r0, [pc, #-2476]	; d5f8 <bt_compidtostr@@Base+0x31cc>
    dfa0:	add	r0, pc, r0
    dfa4:	bx	lr
    dfa8:	ldr	r0, [pc, #-2484]	; d5fc <bt_compidtostr@@Base+0x31d0>
    dfac:	add	r0, pc, r0
    dfb0:	bx	lr
    dfb4:	ldr	r0, [pc, #-2492]	; d600 <bt_compidtostr@@Base+0x31d4>
    dfb8:	add	r0, pc, r0
    dfbc:	bx	lr
    dfc0:	ldr	r0, [pc, #-2500]	; d604 <bt_compidtostr@@Base+0x31d8>
    dfc4:	add	r0, pc, r0
    dfc8:	bx	lr
    dfcc:	ldr	r0, [pc, #-2508]	; d608 <bt_compidtostr@@Base+0x31dc>
    dfd0:	add	r0, pc, r0
    dfd4:	bx	lr
    dfd8:	ldr	r0, [pc, #-2516]	; d60c <bt_compidtostr@@Base+0x31e0>
    dfdc:	add	r0, pc, r0
    dfe0:	bx	lr
    dfe4:	ldr	r0, [pc, #-2524]	; d610 <bt_compidtostr@@Base+0x31e4>
    dfe8:	add	r0, pc, r0
    dfec:	bx	lr
    dff0:	ldr	r0, [pc, #-2532]	; d614 <bt_compidtostr@@Base+0x31e8>
    dff4:	add	r0, pc, r0
    dff8:	bx	lr
    dffc:	ldr	r0, [pc, #-2540]	; d618 <bt_compidtostr@@Base+0x31ec>
    e000:	add	r0, pc, r0
    e004:	bx	lr
    e008:	ldr	r0, [pc, #2440]	; e998 <bt_compidtostr@@Base+0x456c>
    e00c:	add	r0, pc, r0
    e010:	bx	lr
    e014:	ldr	r0, [pc, #2432]	; e99c <bt_compidtostr@@Base+0x4570>
    e018:	add	r0, pc, r0
    e01c:	bx	lr
    e020:	ldr	r0, [pc, #2424]	; e9a0 <bt_compidtostr@@Base+0x4574>
    e024:	add	r0, pc, r0
    e028:	bx	lr
    e02c:	ldr	r0, [pc, #2416]	; e9a4 <bt_compidtostr@@Base+0x4578>
    e030:	add	r0, pc, r0
    e034:	bx	lr
    e038:	ldr	r0, [pc, #2408]	; e9a8 <bt_compidtostr@@Base+0x457c>
    e03c:	add	r0, pc, r0
    e040:	bx	lr
    e044:	ldr	r0, [pc, #2400]	; e9ac <bt_compidtostr@@Base+0x4580>
    e048:	add	r0, pc, r0
    e04c:	bx	lr
    e050:	ldr	r0, [pc, #2392]	; e9b0 <bt_compidtostr@@Base+0x4584>
    e054:	add	r0, pc, r0
    e058:	bx	lr
    e05c:	ldr	r0, [pc, #2384]	; e9b4 <bt_compidtostr@@Base+0x4588>
    e060:	add	r0, pc, r0
    e064:	bx	lr
    e068:	ldr	r0, [pc, #2376]	; e9b8 <bt_compidtostr@@Base+0x458c>
    e06c:	add	r0, pc, r0
    e070:	bx	lr
    e074:	ldr	r0, [pc, #2368]	; e9bc <bt_compidtostr@@Base+0x4590>
    e078:	add	r0, pc, r0
    e07c:	bx	lr
    e080:	ldr	r0, [pc, #2360]	; e9c0 <bt_compidtostr@@Base+0x4594>
    e084:	add	r0, pc, r0
    e088:	bx	lr
    e08c:	ldr	r0, [pc, #2352]	; e9c4 <bt_compidtostr@@Base+0x4598>
    e090:	add	r0, pc, r0
    e094:	bx	lr
    e098:	ldr	r0, [pc, #2344]	; e9c8 <bt_compidtostr@@Base+0x459c>
    e09c:	add	r0, pc, r0
    e0a0:	bx	lr
    e0a4:	ldr	r0, [pc, #2336]	; e9cc <bt_compidtostr@@Base+0x45a0>
    e0a8:	add	r0, pc, r0
    e0ac:	bx	lr
    e0b0:	ldr	r0, [pc, #2328]	; e9d0 <bt_compidtostr@@Base+0x45a4>
    e0b4:	add	r0, pc, r0
    e0b8:	bx	lr
    e0bc:	ldr	r0, [pc, #2320]	; e9d4 <bt_compidtostr@@Base+0x45a8>
    e0c0:	add	r0, pc, r0
    e0c4:	bx	lr
    e0c8:	ldr	r0, [pc, #2312]	; e9d8 <bt_compidtostr@@Base+0x45ac>
    e0cc:	add	r0, pc, r0
    e0d0:	bx	lr
    e0d4:	ldr	r0, [pc, #2304]	; e9dc <bt_compidtostr@@Base+0x45b0>
    e0d8:	add	r0, pc, r0
    e0dc:	bx	lr
    e0e0:	ldr	r0, [pc, #2296]	; e9e0 <bt_compidtostr@@Base+0x45b4>
    e0e4:	add	r0, pc, r0
    e0e8:	bx	lr
    e0ec:	ldr	r0, [pc, #2288]	; e9e4 <bt_compidtostr@@Base+0x45b8>
    e0f0:	add	r0, pc, r0
    e0f4:	bx	lr
    e0f8:	ldr	r0, [pc, #2280]	; e9e8 <bt_compidtostr@@Base+0x45bc>
    e0fc:	add	r0, pc, r0
    e100:	bx	lr
    e104:	ldr	r0, [pc, #2272]	; e9ec <bt_compidtostr@@Base+0x45c0>
    e108:	add	r0, pc, r0
    e10c:	bx	lr
    e110:	ldr	r0, [pc, #2264]	; e9f0 <bt_compidtostr@@Base+0x45c4>
    e114:	add	r0, pc, r0
    e118:	bx	lr
    e11c:	ldr	r0, [pc, #2256]	; e9f4 <bt_compidtostr@@Base+0x45c8>
    e120:	add	r0, pc, r0
    e124:	bx	lr
    e128:	ldr	r0, [pc, #2248]	; e9f8 <bt_compidtostr@@Base+0x45cc>
    e12c:	add	r0, pc, r0
    e130:	bx	lr
    e134:	ldr	r0, [pc, #2240]	; e9fc <bt_compidtostr@@Base+0x45d0>
    e138:	add	r0, pc, r0
    e13c:	bx	lr
    e140:	ldr	r0, [pc, #2232]	; ea00 <bt_compidtostr@@Base+0x45d4>
    e144:	add	r0, pc, r0
    e148:	bx	lr
    e14c:	ldr	r0, [pc, #2224]	; ea04 <bt_compidtostr@@Base+0x45d8>
    e150:	add	r0, pc, r0
    e154:	bx	lr
    e158:	ldr	r0, [pc, #2216]	; ea08 <bt_compidtostr@@Base+0x45dc>
    e15c:	add	r0, pc, r0
    e160:	bx	lr
    e164:	ldr	r0, [pc, #2208]	; ea0c <bt_compidtostr@@Base+0x45e0>
    e168:	add	r0, pc, r0
    e16c:	bx	lr
    e170:	ldr	r0, [pc, #2200]	; ea10 <bt_compidtostr@@Base+0x45e4>
    e174:	add	r0, pc, r0
    e178:	bx	lr
    e17c:	ldr	r0, [pc, #2192]	; ea14 <bt_compidtostr@@Base+0x45e8>
    e180:	add	r0, pc, r0
    e184:	bx	lr
    e188:	ldr	r0, [pc, #2184]	; ea18 <bt_compidtostr@@Base+0x45ec>
    e18c:	add	r0, pc, r0
    e190:	bx	lr
    e194:	ldr	r0, [pc, #2176]	; ea1c <bt_compidtostr@@Base+0x45f0>
    e198:	add	r0, pc, r0
    e19c:	bx	lr
    e1a0:	ldr	r0, [pc, #2168]	; ea20 <bt_compidtostr@@Base+0x45f4>
    e1a4:	add	r0, pc, r0
    e1a8:	bx	lr
    e1ac:	ldr	r0, [pc, #2160]	; ea24 <bt_compidtostr@@Base+0x45f8>
    e1b0:	add	r0, pc, r0
    e1b4:	bx	lr
    e1b8:	ldr	r0, [pc, #2152]	; ea28 <bt_compidtostr@@Base+0x45fc>
    e1bc:	add	r0, pc, r0
    e1c0:	bx	lr
    e1c4:	ldr	r0, [pc, #2144]	; ea2c <bt_compidtostr@@Base+0x4600>
    e1c8:	add	r0, pc, r0
    e1cc:	bx	lr
    e1d0:	ldr	r0, [pc, #2136]	; ea30 <bt_compidtostr@@Base+0x4604>
    e1d4:	add	r0, pc, r0
    e1d8:	bx	lr
    e1dc:	ldr	r0, [pc, #2128]	; ea34 <bt_compidtostr@@Base+0x4608>
    e1e0:	add	r0, pc, r0
    e1e4:	bx	lr
    e1e8:	ldr	r0, [pc, #2120]	; ea38 <bt_compidtostr@@Base+0x460c>
    e1ec:	add	r0, pc, r0
    e1f0:	bx	lr
    e1f4:	ldr	r0, [pc, #2112]	; ea3c <bt_compidtostr@@Base+0x4610>
    e1f8:	add	r0, pc, r0
    e1fc:	bx	lr
    e200:	ldr	r0, [pc, #2104]	; ea40 <bt_compidtostr@@Base+0x4614>
    e204:	add	r0, pc, r0
    e208:	bx	lr
    e20c:	ldr	r0, [pc, #2096]	; ea44 <bt_compidtostr@@Base+0x4618>
    e210:	add	r0, pc, r0
    e214:	bx	lr
    e218:	ldr	r0, [pc, #2088]	; ea48 <bt_compidtostr@@Base+0x461c>
    e21c:	add	r0, pc, r0
    e220:	bx	lr
    e224:	ldr	r0, [pc, #2080]	; ea4c <bt_compidtostr@@Base+0x4620>
    e228:	add	r0, pc, r0
    e22c:	bx	lr
    e230:	ldr	r0, [pc, #2072]	; ea50 <bt_compidtostr@@Base+0x4624>
    e234:	add	r0, pc, r0
    e238:	bx	lr
    e23c:	ldr	r0, [pc, #2064]	; ea54 <bt_compidtostr@@Base+0x4628>
    e240:	add	r0, pc, r0
    e244:	bx	lr
    e248:	ldr	r0, [pc, #2056]	; ea58 <bt_compidtostr@@Base+0x462c>
    e24c:	add	r0, pc, r0
    e250:	bx	lr
    e254:	ldr	r0, [pc, #2048]	; ea5c <bt_compidtostr@@Base+0x4630>
    e258:	add	r0, pc, r0
    e25c:	bx	lr
    e260:	ldr	r0, [pc, #2040]	; ea60 <bt_compidtostr@@Base+0x4634>
    e264:	add	r0, pc, r0
    e268:	bx	lr
    e26c:	ldr	r0, [pc, #2032]	; ea64 <bt_compidtostr@@Base+0x4638>
    e270:	add	r0, pc, r0
    e274:	bx	lr
    e278:	ldr	r0, [pc, #2024]	; ea68 <bt_compidtostr@@Base+0x463c>
    e27c:	add	r0, pc, r0
    e280:	bx	lr
    e284:	ldr	r0, [pc, #2016]	; ea6c <bt_compidtostr@@Base+0x4640>
    e288:	add	r0, pc, r0
    e28c:	bx	lr
    e290:	ldr	r0, [pc, #2008]	; ea70 <bt_compidtostr@@Base+0x4644>
    e294:	add	r0, pc, r0
    e298:	bx	lr
    e29c:	ldr	r0, [pc, #2000]	; ea74 <bt_compidtostr@@Base+0x4648>
    e2a0:	add	r0, pc, r0
    e2a4:	bx	lr
    e2a8:	ldr	r0, [pc, #1992]	; ea78 <bt_compidtostr@@Base+0x464c>
    e2ac:	add	r0, pc, r0
    e2b0:	bx	lr
    e2b4:	ldr	r0, [pc, #1984]	; ea7c <bt_compidtostr@@Base+0x4650>
    e2b8:	add	r0, pc, r0
    e2bc:	bx	lr
    e2c0:	ldr	r0, [pc, #1976]	; ea80 <bt_compidtostr@@Base+0x4654>
    e2c4:	add	r0, pc, r0
    e2c8:	bx	lr
    e2cc:	ldr	r0, [pc, #1968]	; ea84 <bt_compidtostr@@Base+0x4658>
    e2d0:	add	r0, pc, r0
    e2d4:	bx	lr
    e2d8:	ldr	r0, [pc, #1960]	; ea88 <bt_compidtostr@@Base+0x465c>
    e2dc:	add	r0, pc, r0
    e2e0:	bx	lr
    e2e4:	ldr	r0, [pc, #1952]	; ea8c <bt_compidtostr@@Base+0x4660>
    e2e8:	add	r0, pc, r0
    e2ec:	bx	lr
    e2f0:	ldr	r0, [pc, #1944]	; ea90 <bt_compidtostr@@Base+0x4664>
    e2f4:	add	r0, pc, r0
    e2f8:	bx	lr
    e2fc:	ldr	r0, [pc, #1936]	; ea94 <bt_compidtostr@@Base+0x4668>
    e300:	add	r0, pc, r0
    e304:	bx	lr
    e308:	ldr	r0, [pc, #1928]	; ea98 <bt_compidtostr@@Base+0x466c>
    e30c:	add	r0, pc, r0
    e310:	bx	lr
    e314:	ldr	r0, [pc, #1920]	; ea9c <bt_compidtostr@@Base+0x4670>
    e318:	add	r0, pc, r0
    e31c:	bx	lr
    e320:	ldr	r0, [pc, #1912]	; eaa0 <bt_compidtostr@@Base+0x4674>
    e324:	add	r0, pc, r0
    e328:	bx	lr
    e32c:	ldr	r0, [pc, #1904]	; eaa4 <bt_compidtostr@@Base+0x4678>
    e330:	add	r0, pc, r0
    e334:	bx	lr
    e338:	ldr	r0, [pc, #1896]	; eaa8 <bt_compidtostr@@Base+0x467c>
    e33c:	add	r0, pc, r0
    e340:	bx	lr
    e344:	ldr	r0, [pc, #1888]	; eaac <bt_compidtostr@@Base+0x4680>
    e348:	add	r0, pc, r0
    e34c:	bx	lr
    e350:	ldr	r0, [pc, #1880]	; eab0 <bt_compidtostr@@Base+0x4684>
    e354:	add	r0, pc, r0
    e358:	bx	lr
    e35c:	ldr	r0, [pc, #1872]	; eab4 <bt_compidtostr@@Base+0x4688>
    e360:	add	r0, pc, r0
    e364:	bx	lr
    e368:	ldr	r0, [pc, #1864]	; eab8 <bt_compidtostr@@Base+0x468c>
    e36c:	add	r0, pc, r0
    e370:	bx	lr
    e374:	ldr	r0, [pc, #1856]	; eabc <bt_compidtostr@@Base+0x4690>
    e378:	add	r0, pc, r0
    e37c:	bx	lr
    e380:	ldr	r0, [pc, #1848]	; eac0 <bt_compidtostr@@Base+0x4694>
    e384:	add	r0, pc, r0
    e388:	bx	lr
    e38c:	ldr	r0, [pc, #1840]	; eac4 <bt_compidtostr@@Base+0x4698>
    e390:	add	r0, pc, r0
    e394:	bx	lr
    e398:	ldr	r0, [pc, #1832]	; eac8 <bt_compidtostr@@Base+0x469c>
    e39c:	add	r0, pc, r0
    e3a0:	bx	lr
    e3a4:	ldr	r0, [pc, #1824]	; eacc <bt_compidtostr@@Base+0x46a0>
    e3a8:	add	r0, pc, r0
    e3ac:	bx	lr
    e3b0:	ldr	r0, [pc, #1816]	; ead0 <bt_compidtostr@@Base+0x46a4>
    e3b4:	add	r0, pc, r0
    e3b8:	bx	lr
    e3bc:	ldr	r0, [pc, #1808]	; ead4 <bt_compidtostr@@Base+0x46a8>
    e3c0:	add	r0, pc, r0
    e3c4:	bx	lr
    e3c8:	ldr	r0, [pc, #1800]	; ead8 <bt_compidtostr@@Base+0x46ac>
    e3cc:	add	r0, pc, r0
    e3d0:	bx	lr
    e3d4:	ldr	r0, [pc, #1792]	; eadc <bt_compidtostr@@Base+0x46b0>
    e3d8:	add	r0, pc, r0
    e3dc:	bx	lr
    e3e0:	ldr	r0, [pc, #1784]	; eae0 <bt_compidtostr@@Base+0x46b4>
    e3e4:	add	r0, pc, r0
    e3e8:	bx	lr
    e3ec:	ldr	r0, [pc, #1776]	; eae4 <bt_compidtostr@@Base+0x46b8>
    e3f0:	add	r0, pc, r0
    e3f4:	bx	lr
    e3f8:	ldr	r0, [pc, #1768]	; eae8 <bt_compidtostr@@Base+0x46bc>
    e3fc:	add	r0, pc, r0
    e400:	bx	lr
    e404:	ldr	r0, [pc, #1760]	; eaec <bt_compidtostr@@Base+0x46c0>
    e408:	add	r0, pc, r0
    e40c:	bx	lr
    e410:	ldr	r0, [pc, #1752]	; eaf0 <bt_compidtostr@@Base+0x46c4>
    e414:	add	r0, pc, r0
    e418:	bx	lr
    e41c:	ldr	r0, [pc, #1744]	; eaf4 <bt_compidtostr@@Base+0x46c8>
    e420:	add	r0, pc, r0
    e424:	bx	lr
    e428:	ldr	r0, [pc, #1736]	; eaf8 <bt_compidtostr@@Base+0x46cc>
    e42c:	add	r0, pc, r0
    e430:	bx	lr
    e434:	ldr	r0, [pc, #1728]	; eafc <bt_compidtostr@@Base+0x46d0>
    e438:	add	r0, pc, r0
    e43c:	bx	lr
    e440:	ldr	r0, [pc, #1720]	; eb00 <bt_compidtostr@@Base+0x46d4>
    e444:	add	r0, pc, r0
    e448:	bx	lr
    e44c:	ldr	r0, [pc, #1712]	; eb04 <bt_compidtostr@@Base+0x46d8>
    e450:	add	r0, pc, r0
    e454:	bx	lr
    e458:	ldr	r0, [pc, #1704]	; eb08 <bt_compidtostr@@Base+0x46dc>
    e45c:	add	r0, pc, r0
    e460:	bx	lr
    e464:	ldr	r0, [pc, #1696]	; eb0c <bt_compidtostr@@Base+0x46e0>
    e468:	add	r0, pc, r0
    e46c:	bx	lr
    e470:	ldr	r0, [pc, #1688]	; eb10 <bt_compidtostr@@Base+0x46e4>
    e474:	add	r0, pc, r0
    e478:	bx	lr
    e47c:	ldr	r0, [pc, #1680]	; eb14 <bt_compidtostr@@Base+0x46e8>
    e480:	add	r0, pc, r0
    e484:	bx	lr
    e488:	ldr	r0, [pc, #1672]	; eb18 <bt_compidtostr@@Base+0x46ec>
    e48c:	add	r0, pc, r0
    e490:	bx	lr
    e494:	ldr	r0, [pc, #1664]	; eb1c <bt_compidtostr@@Base+0x46f0>
    e498:	add	r0, pc, r0
    e49c:	bx	lr
    e4a0:	ldr	r0, [pc, #1656]	; eb20 <bt_compidtostr@@Base+0x46f4>
    e4a4:	add	r0, pc, r0
    e4a8:	bx	lr
    e4ac:	ldr	r0, [pc, #1648]	; eb24 <bt_compidtostr@@Base+0x46f8>
    e4b0:	add	r0, pc, r0
    e4b4:	bx	lr
    e4b8:	ldr	r0, [pc, #1640]	; eb28 <bt_compidtostr@@Base+0x46fc>
    e4bc:	add	r0, pc, r0
    e4c0:	bx	lr
    e4c4:	ldr	r0, [pc, #1632]	; eb2c <bt_compidtostr@@Base+0x4700>
    e4c8:	add	r0, pc, r0
    e4cc:	bx	lr
    e4d0:	ldr	r0, [pc, #1624]	; eb30 <bt_compidtostr@@Base+0x4704>
    e4d4:	add	r0, pc, r0
    e4d8:	bx	lr
    e4dc:	ldr	r0, [pc, #1616]	; eb34 <bt_compidtostr@@Base+0x4708>
    e4e0:	add	r0, pc, r0
    e4e4:	bx	lr
    e4e8:	ldr	r0, [pc, #1608]	; eb38 <bt_compidtostr@@Base+0x470c>
    e4ec:	add	r0, pc, r0
    e4f0:	bx	lr
    e4f4:	ldr	r0, [pc, #1600]	; eb3c <bt_compidtostr@@Base+0x4710>
    e4f8:	add	r0, pc, r0
    e4fc:	bx	lr
    e500:	ldr	r0, [pc, #1592]	; eb40 <bt_compidtostr@@Base+0x4714>
    e504:	add	r0, pc, r0
    e508:	bx	lr
    e50c:	ldr	r0, [pc, #1584]	; eb44 <bt_compidtostr@@Base+0x4718>
    e510:	add	r0, pc, r0
    e514:	bx	lr
    e518:	ldr	r0, [pc, #1576]	; eb48 <bt_compidtostr@@Base+0x471c>
    e51c:	add	r0, pc, r0
    e520:	bx	lr
    e524:	ldr	r0, [pc, #1568]	; eb4c <bt_compidtostr@@Base+0x4720>
    e528:	add	r0, pc, r0
    e52c:	bx	lr
    e530:	ldr	r0, [pc, #1560]	; eb50 <bt_compidtostr@@Base+0x4724>
    e534:	add	r0, pc, r0
    e538:	bx	lr
    e53c:	ldr	r0, [pc, #1552]	; eb54 <bt_compidtostr@@Base+0x4728>
    e540:	add	r0, pc, r0
    e544:	bx	lr
    e548:	ldr	r0, [pc, #1544]	; eb58 <bt_compidtostr@@Base+0x472c>
    e54c:	add	r0, pc, r0
    e550:	bx	lr
    e554:	ldr	r0, [pc, #1536]	; eb5c <bt_compidtostr@@Base+0x4730>
    e558:	add	r0, pc, r0
    e55c:	bx	lr
    e560:	ldr	r0, [pc, #1528]	; eb60 <bt_compidtostr@@Base+0x4734>
    e564:	add	r0, pc, r0
    e568:	bx	lr
    e56c:	ldr	r0, [pc, #1520]	; eb64 <bt_compidtostr@@Base+0x4738>
    e570:	add	r0, pc, r0
    e574:	bx	lr
    e578:	ldr	r0, [pc, #1512]	; eb68 <bt_compidtostr@@Base+0x473c>
    e57c:	add	r0, pc, r0
    e580:	bx	lr
    e584:	ldr	r0, [pc, #1504]	; eb6c <bt_compidtostr@@Base+0x4740>
    e588:	add	r0, pc, r0
    e58c:	bx	lr
    e590:	ldr	r0, [pc, #1496]	; eb70 <bt_compidtostr@@Base+0x4744>
    e594:	add	r0, pc, r0
    e598:	bx	lr
    e59c:	ldr	r0, [pc, #1488]	; eb74 <bt_compidtostr@@Base+0x4748>
    e5a0:	add	r0, pc, r0
    e5a4:	bx	lr
    e5a8:	ldr	r0, [pc, #1480]	; eb78 <bt_compidtostr@@Base+0x474c>
    e5ac:	add	r0, pc, r0
    e5b0:	bx	lr
    e5b4:	ldr	r0, [pc, #1472]	; eb7c <bt_compidtostr@@Base+0x4750>
    e5b8:	add	r0, pc, r0
    e5bc:	bx	lr
    e5c0:	ldr	r0, [pc, #1464]	; eb80 <bt_compidtostr@@Base+0x4754>
    e5c4:	add	r0, pc, r0
    e5c8:	bx	lr
    e5cc:	ldr	r0, [pc, #1456]	; eb84 <bt_compidtostr@@Base+0x4758>
    e5d0:	add	r0, pc, r0
    e5d4:	bx	lr
    e5d8:	ldr	r0, [pc, #1448]	; eb88 <bt_compidtostr@@Base+0x475c>
    e5dc:	add	r0, pc, r0
    e5e0:	bx	lr
    e5e4:	ldr	r0, [pc, #1440]	; eb8c <bt_compidtostr@@Base+0x4760>
    e5e8:	add	r0, pc, r0
    e5ec:	bx	lr
    e5f0:	ldr	r0, [pc, #1432]	; eb90 <bt_compidtostr@@Base+0x4764>
    e5f4:	add	r0, pc, r0
    e5f8:	bx	lr
    e5fc:	ldr	r0, [pc, #1424]	; eb94 <bt_compidtostr@@Base+0x4768>
    e600:	add	r0, pc, r0
    e604:	bx	lr
    e608:	ldr	r0, [pc, #1416]	; eb98 <bt_compidtostr@@Base+0x476c>
    e60c:	add	r0, pc, r0
    e610:	bx	lr
    e614:	ldr	r0, [pc, #1408]	; eb9c <bt_compidtostr@@Base+0x4770>
    e618:	add	r0, pc, r0
    e61c:	bx	lr
    e620:	ldr	r0, [pc, #1400]	; eba0 <bt_compidtostr@@Base+0x4774>
    e624:	add	r0, pc, r0
    e628:	bx	lr
    e62c:	ldr	r0, [pc, #1392]	; eba4 <bt_compidtostr@@Base+0x4778>
    e630:	add	r0, pc, r0
    e634:	bx	lr
    e638:	ldr	r0, [pc, #1384]	; eba8 <bt_compidtostr@@Base+0x477c>
    e63c:	add	r0, pc, r0
    e640:	bx	lr
    e644:	ldr	r0, [pc, #1376]	; ebac <bt_compidtostr@@Base+0x4780>
    e648:	add	r0, pc, r0
    e64c:	bx	lr
    e650:	ldr	r0, [pc, #1368]	; ebb0 <bt_compidtostr@@Base+0x4784>
    e654:	add	r0, pc, r0
    e658:	bx	lr
    e65c:	ldr	r0, [pc, #1360]	; ebb4 <bt_compidtostr@@Base+0x4788>
    e660:	add	r0, pc, r0
    e664:	bx	lr
    e668:	ldr	r0, [pc, #1352]	; ebb8 <bt_compidtostr@@Base+0x478c>
    e66c:	add	r0, pc, r0
    e670:	bx	lr
    e674:	ldr	r0, [pc, #1344]	; ebbc <bt_compidtostr@@Base+0x4790>
    e678:	add	r0, pc, r0
    e67c:	bx	lr
    e680:	ldr	r0, [pc, #1336]	; ebc0 <bt_compidtostr@@Base+0x4794>
    e684:	add	r0, pc, r0
    e688:	bx	lr
    e68c:	ldr	r0, [pc, #1328]	; ebc4 <bt_compidtostr@@Base+0x4798>
    e690:	add	r0, pc, r0
    e694:	bx	lr
    e698:	ldr	r0, [pc, #1320]	; ebc8 <bt_compidtostr@@Base+0x479c>
    e69c:	add	r0, pc, r0
    e6a0:	bx	lr
    e6a4:	ldr	r0, [pc, #1312]	; ebcc <bt_compidtostr@@Base+0x47a0>
    e6a8:	add	r0, pc, r0
    e6ac:	bx	lr
    e6b0:	ldr	r0, [pc, #1304]	; ebd0 <bt_compidtostr@@Base+0x47a4>
    e6b4:	add	r0, pc, r0
    e6b8:	bx	lr
    e6bc:	ldr	r0, [pc, #1296]	; ebd4 <bt_compidtostr@@Base+0x47a8>
    e6c0:	add	r0, pc, r0
    e6c4:	bx	lr
    e6c8:	ldr	r0, [pc, #1288]	; ebd8 <bt_compidtostr@@Base+0x47ac>
    e6cc:	add	r0, pc, r0
    e6d0:	bx	lr
    e6d4:	ldr	r0, [pc, #1280]	; ebdc <bt_compidtostr@@Base+0x47b0>
    e6d8:	add	r0, pc, r0
    e6dc:	bx	lr
    e6e0:	ldr	r0, [pc, #1272]	; ebe0 <bt_compidtostr@@Base+0x47b4>
    e6e4:	add	r0, pc, r0
    e6e8:	bx	lr
    e6ec:	ldr	r0, [pc, #1264]	; ebe4 <bt_compidtostr@@Base+0x47b8>
    e6f0:	add	r0, pc, r0
    e6f4:	bx	lr
    e6f8:	ldr	r0, [pc, #1256]	; ebe8 <bt_compidtostr@@Base+0x47bc>
    e6fc:	add	r0, pc, r0
    e700:	bx	lr
    e704:	ldr	r0, [pc, #1248]	; ebec <bt_compidtostr@@Base+0x47c0>
    e708:	add	r0, pc, r0
    e70c:	bx	lr
    e710:	ldr	r0, [pc, #1240]	; ebf0 <bt_compidtostr@@Base+0x47c4>
    e714:	add	r0, pc, r0
    e718:	bx	lr
    e71c:	ldr	r0, [pc, #1232]	; ebf4 <bt_compidtostr@@Base+0x47c8>
    e720:	add	r0, pc, r0
    e724:	bx	lr
    e728:	ldr	r0, [pc, #1224]	; ebf8 <bt_compidtostr@@Base+0x47cc>
    e72c:	add	r0, pc, r0
    e730:	bx	lr
    e734:	ldr	r0, [pc, #1216]	; ebfc <bt_compidtostr@@Base+0x47d0>
    e738:	add	r0, pc, r0
    e73c:	bx	lr
    e740:	ldr	r0, [pc, #1208]	; ec00 <bt_compidtostr@@Base+0x47d4>
    e744:	add	r0, pc, r0
    e748:	bx	lr
    e74c:	ldr	r0, [pc, #1200]	; ec04 <bt_compidtostr@@Base+0x47d8>
    e750:	add	r0, pc, r0
    e754:	bx	lr
    e758:	ldr	r0, [pc, #1192]	; ec08 <bt_compidtostr@@Base+0x47dc>
    e75c:	add	r0, pc, r0
    e760:	bx	lr
    e764:	ldr	r0, [pc, #1184]	; ec0c <bt_compidtostr@@Base+0x47e0>
    e768:	add	r0, pc, r0
    e76c:	bx	lr
    e770:	ldr	r0, [pc, #1176]	; ec10 <bt_compidtostr@@Base+0x47e4>
    e774:	add	r0, pc, r0
    e778:	bx	lr
    e77c:	ldr	r0, [pc, #1168]	; ec14 <bt_compidtostr@@Base+0x47e8>
    e780:	add	r0, pc, r0
    e784:	bx	lr
    e788:	ldr	r0, [pc, #1160]	; ec18 <bt_compidtostr@@Base+0x47ec>
    e78c:	add	r0, pc, r0
    e790:	bx	lr
    e794:	ldr	r0, [pc, #1152]	; ec1c <bt_compidtostr@@Base+0x47f0>
    e798:	add	r0, pc, r0
    e79c:	bx	lr
    e7a0:	ldr	r0, [pc, #1144]	; ec20 <bt_compidtostr@@Base+0x47f4>
    e7a4:	add	r0, pc, r0
    e7a8:	bx	lr
    e7ac:	ldr	r0, [pc, #1136]	; ec24 <bt_compidtostr@@Base+0x47f8>
    e7b0:	add	r0, pc, r0
    e7b4:	bx	lr
    e7b8:	ldr	r0, [pc, #1128]	; ec28 <bt_compidtostr@@Base+0x47fc>
    e7bc:	add	r0, pc, r0
    e7c0:	bx	lr
    e7c4:	ldr	r0, [pc, #1120]	; ec2c <bt_compidtostr@@Base+0x4800>
    e7c8:	add	r0, pc, r0
    e7cc:	bx	lr
    e7d0:	ldr	r0, [pc, #1112]	; ec30 <bt_compidtostr@@Base+0x4804>
    e7d4:	add	r0, pc, r0
    e7d8:	bx	lr
    e7dc:	ldr	r0, [pc, #1104]	; ec34 <bt_compidtostr@@Base+0x4808>
    e7e0:	add	r0, pc, r0
    e7e4:	bx	lr
    e7e8:	ldr	r0, [pc, #1096]	; ec38 <bt_compidtostr@@Base+0x480c>
    e7ec:	add	r0, pc, r0
    e7f0:	bx	lr
    e7f4:	ldr	r0, [pc, #1088]	; ec3c <bt_compidtostr@@Base+0x4810>
    e7f8:	add	r0, pc, r0
    e7fc:	bx	lr
    e800:	ldr	r0, [pc, #1080]	; ec40 <bt_compidtostr@@Base+0x4814>
    e804:	add	r0, pc, r0
    e808:	bx	lr
    e80c:	ldr	r0, [pc, #1072]	; ec44 <bt_compidtostr@@Base+0x4818>
    e810:	add	r0, pc, r0
    e814:	bx	lr
    e818:	ldr	r0, [pc, #1064]	; ec48 <bt_compidtostr@@Base+0x481c>
    e81c:	add	r0, pc, r0
    e820:	bx	lr
    e824:	ldr	r0, [pc, #1056]	; ec4c <bt_compidtostr@@Base+0x4820>
    e828:	add	r0, pc, r0
    e82c:	bx	lr
    e830:	ldr	r0, [pc, #1048]	; ec50 <bt_compidtostr@@Base+0x4824>
    e834:	add	r0, pc, r0
    e838:	bx	lr
    e83c:	ldr	r0, [pc, #1040]	; ec54 <bt_compidtostr@@Base+0x4828>
    e840:	add	r0, pc, r0
    e844:	bx	lr
    e848:	ldr	r0, [pc, #1032]	; ec58 <bt_compidtostr@@Base+0x482c>
    e84c:	add	r0, pc, r0
    e850:	bx	lr
    e854:	ldr	r0, [pc, #1024]	; ec5c <bt_compidtostr@@Base+0x4830>
    e858:	add	r0, pc, r0
    e85c:	bx	lr
    e860:	ldr	r0, [pc, #1016]	; ec60 <bt_compidtostr@@Base+0x4834>
    e864:	add	r0, pc, r0
    e868:	bx	lr
    e86c:	ldr	r0, [pc, #1008]	; ec64 <bt_compidtostr@@Base+0x4838>
    e870:	add	r0, pc, r0
    e874:	bx	lr
    e878:	ldr	r0, [pc, #1000]	; ec68 <bt_compidtostr@@Base+0x483c>
    e87c:	add	r0, pc, r0
    e880:	bx	lr
    e884:	ldr	r0, [pc, #992]	; ec6c <bt_compidtostr@@Base+0x4840>
    e888:	add	r0, pc, r0
    e88c:	bx	lr
    e890:	ldr	r0, [pc, #984]	; ec70 <bt_compidtostr@@Base+0x4844>
    e894:	add	r0, pc, r0
    e898:	bx	lr
    e89c:	ldr	r0, [pc, #976]	; ec74 <bt_compidtostr@@Base+0x4848>
    e8a0:	add	r0, pc, r0
    e8a4:	bx	lr
    e8a8:	ldr	r0, [pc, #968]	; ec78 <bt_compidtostr@@Base+0x484c>
    e8ac:	add	r0, pc, r0
    e8b0:	bx	lr
    e8b4:	ldr	r0, [pc, #960]	; ec7c <bt_compidtostr@@Base+0x4850>
    e8b8:	add	r0, pc, r0
    e8bc:	bx	lr
    e8c0:	ldr	r0, [pc, #952]	; ec80 <bt_compidtostr@@Base+0x4854>
    e8c4:	add	r0, pc, r0
    e8c8:	bx	lr
    e8cc:	ldr	r0, [pc, #944]	; ec84 <bt_compidtostr@@Base+0x4858>
    e8d0:	add	r0, pc, r0
    e8d4:	bx	lr
    e8d8:	ldr	r0, [pc, #936]	; ec88 <bt_compidtostr@@Base+0x485c>
    e8dc:	add	r0, pc, r0
    e8e0:	bx	lr
    e8e4:	ldr	r0, [pc, #928]	; ec8c <bt_compidtostr@@Base+0x4860>
    e8e8:	add	r0, pc, r0
    e8ec:	bx	lr
    e8f0:	ldr	r0, [pc, #920]	; ec90 <bt_compidtostr@@Base+0x4864>
    e8f4:	add	r0, pc, r0
    e8f8:	bx	lr
    e8fc:	ldr	r0, [pc, #912]	; ec94 <bt_compidtostr@@Base+0x4868>
    e900:	add	r0, pc, r0
    e904:	bx	lr
    e908:	ldr	r0, [pc, #904]	; ec98 <bt_compidtostr@@Base+0x486c>
    e90c:	add	r0, pc, r0
    e910:	bx	lr
    e914:	ldr	r0, [pc, #896]	; ec9c <bt_compidtostr@@Base+0x4870>
    e918:	add	r0, pc, r0
    e91c:	bx	lr
    e920:	ldr	r0, [pc, #888]	; eca0 <bt_compidtostr@@Base+0x4874>
    e924:	add	r0, pc, r0
    e928:	bx	lr
    e92c:	ldr	r0, [pc, #880]	; eca4 <bt_compidtostr@@Base+0x4878>
    e930:	add	r0, pc, r0
    e934:	bx	lr
    e938:	ldr	r0, [pc, #872]	; eca8 <bt_compidtostr@@Base+0x487c>
    e93c:	add	r0, pc, r0
    e940:	bx	lr
    e944:	ldr	r0, [pc, #864]	; ecac <bt_compidtostr@@Base+0x4880>
    e948:	add	r0, pc, r0
    e94c:	bx	lr
    e950:	ldr	r0, [pc, #856]	; ecb0 <bt_compidtostr@@Base+0x4884>
    e954:	add	r0, pc, r0
    e958:	bx	lr
    e95c:	ldr	r0, [pc, #848]	; ecb4 <bt_compidtostr@@Base+0x4888>
    e960:	add	r0, pc, r0
    e964:	bx	lr
    e968:	ldr	r0, [pc, #840]	; ecb8 <bt_compidtostr@@Base+0x488c>
    e96c:	add	r0, pc, r0
    e970:	bx	lr
    e974:	ldr	r0, [pc, #832]	; ecbc <bt_compidtostr@@Base+0x4890>
    e978:	add	r0, pc, r0
    e97c:	bx	lr
    e980:	ldr	r0, [pc, #824]	; ecc0 <bt_compidtostr@@Base+0x4894>
    e984:	add	r0, pc, r0
    e988:	bx	lr
    e98c:	ldr	r0, [pc, #816]	; ecc4 <bt_compidtostr@@Base+0x4898>
    e990:	add	r0, pc, r0
    e994:	bx	lr
    e998:	andeq	fp, r0, r4, lsr #11
    e99c:	ldrdeq	r8, [r0], -ip
    e9a0:	andeq	fp, r0, r0, ror #20
    e9a4:	andeq	fp, r0, r0, ror #14
    e9a8:	andeq	r6, r0, r0, lsl #29
    e9ac:	andeq	sl, r0, r0, lsr r0
    e9b0:	andeq	r9, r0, r8, ror #21
    e9b4:	andeq	sl, r0, r4, lsl #31
    e9b8:	andeq	sl, r0, r8, lsl #24
    e9bc:	andeq	fp, r0, ip, lsr #27
    e9c0:			; <UNDEFINED> instruction: 0x0000b3b4
    e9c4:	andeq	r8, r0, r4, ror #1
    e9c8:	andeq	sl, r0, r4, asr #8
    e9cc:	andeq	r7, r0, r0, ror #27
    e9d0:	strdeq	r9, [r0], -ip
    e9d4:	andeq	sl, r0, ip, asr r5
    e9d8:	strdeq	r7, [r0], -r4
    e9dc:	andeq	r9, r0, ip, ror #16
    e9e0:	andeq	fp, r0, r4, lsl #1
    e9e4:	andeq	r8, r0, ip, asr #23
    e9e8:	andeq	sl, r0, r4, lsl r9
    e9ec:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    e9f0:	andeq	r8, r0, r0, ror #30
    e9f4:	andeq	fp, r0, r0, ror ip
    e9f8:	andeq	fp, r0, r0, lsr #17
    e9fc:	andeq	r7, r0, r8, lsr #14
    ea00:	muleq	r0, r0, r4
    ea04:	andeq	sl, r0, r8, lsl #31
    ea08:	andeq	sl, r0, r0, asr #27
    ea0c:	strdeq	r9, [r0], -ip
    ea10:	andeq	fp, r0, ip, lsl #7
    ea14:	andeq	r7, r0, r8, lsr #27
    ea18:	andeq	fp, r0, r8, lsr sp
    ea1c:	andeq	fp, r0, ip, lsr #14
    ea20:	andeq	r9, r0, ip, asr #11
    ea24:	andeq	r9, r0, ip, lsl r0
    ea28:	andeq	ip, r0, ip, lsl r2
    ea2c:	andeq	sl, r0, ip, lsl r7
    ea30:	andeq	fp, r0, r8, lsl #20
    ea34:	muleq	r0, r8, r7
    ea38:	muleq	r0, ip, r8
    ea3c:	andeq	ip, r0, r4, lsl #1
    ea40:	andeq	r8, r0, ip, asr #22
    ea44:	andeq	fp, r0, r0, lsl r9
    ea48:	ldrdeq	r8, [r0], -ip
    ea4c:	andeq	r8, r0, ip, asr #15
    ea50:	andeq	r8, r0, r8, lsr #18
    ea54:	andeq	sl, r0, r0, asr r1
    ea58:	muleq	r0, ip, sp
    ea5c:	andeq	sl, r0, r0, lsl #23
    ea60:	andeq	sl, r0, ip, lsr #21
    ea64:	andeq	fp, r0, r0, ror #7
    ea68:	muleq	r0, r4, r6
    ea6c:	andeq	r9, r0, r8, lsr #23
    ea70:	ldrdeq	r8, [r0], -r4
    ea74:	andeq	r9, r0, r0, ror r3
    ea78:	andeq	r8, r0, r4, asr #10
    ea7c:	strdeq	r8, [r0], -r0
    ea80:	andeq	sl, r0, r0, lsl r4
    ea84:	andeq	fp, r0, r8, asr #26
    ea88:	andeq	sl, r0, r4, lsl #18
    ea8c:	andeq	ip, r0, r8, asr #4
    ea90:	andeq	r7, r0, r8, ror #18
    ea94:	strdeq	r9, [r0], -ip
    ea98:	andeq	fp, r0, r8, lsl #27
    ea9c:	andeq	r9, r0, r4, asr #3
    eaa0:	andeq	r9, r0, ip, ror r0
    eaa4:	ldrdeq	r7, [r0], -r4
    eaa8:			; <UNDEFINED> instruction: 0x0000b3bc
    eaac:	andeq	fp, r0, r8, asr r0
    eab0:	andeq	r7, r0, r8, lsr #6
    eab4:	andeq	ip, r0, r8, lsl #10
    eab8:	andeq	r9, r0, r8, asr lr
    eabc:	andeq	r9, r0, ip, ror fp
    eac0:	ldrdeq	r9, [r0], -r8
    eac4:	strdeq	r8, [r0], -r0
    eac8:	andeq	fp, r0, r8, ror r9
    eacc:	andeq	ip, r0, r4, lsr #8
    ead0:	andeq	fp, r0, ip, lsr lr
    ead4:	andeq	r9, r0, r8, lsl #16
    ead8:	andeq	sl, r0, r0, lsr pc
    eadc:	strheq	r8, [r0], -r8	; <UNPREDICTABLE>
    eae0:	andeq	r8, r0, r8
    eae4:	andeq	r9, r0, r8, lsl sp
    eae8:	ldrdeq	r7, [r0], -r8
    eaec:	andeq	fp, r0, r8, asr #10
    eaf0:	ldrdeq	r9, [r0], -r0
    eaf4:	andeq	r8, r0, r4, lsr #2
    eaf8:	andeq	ip, r0, r0, lsl r3
    eafc:	andeq	r7, r0, r8, lsl #28
    eb00:	strdeq	fp, [r0], -ip
    eb04:	andeq	r9, r0, ip, ror #11
    eb08:	andeq	sl, r0, r4, asr r1
    eb0c:	andeq	sl, r0, ip, lsr #2
    eb10:	andeq	sl, r0, ip, lsr #2
    eb14:	andeq	sl, r0, r8, lsl #31
    eb18:	andeq	sl, r0, ip, lsl #31
    eb1c:	andeq	fp, r0, r0, lsr #19
    eb20:	andeq	fp, r0, r0, asr #19
    eb24:	andeq	r8, r0, r4, asr fp
    eb28:	andeq	r8, r0, r4, lsr r2
    eb2c:	strdeq	r8, [r0], -ip
    eb30:	andeq	r8, r0, r0, lsl #4
    eb34:	andeq	r8, r0, ip, lsr r8
    eb38:	andeq	r8, r0, r8, asr #16
    eb3c:	andeq	fp, r0, r4, lsr #27
    eb40:			; <UNDEFINED> instruction: 0x0000bdb4
    eb44:	andeq	r8, r0, r4, lsl #1
    eb48:	andeq	sl, r0, r0, lsr fp
    eb4c:	strdeq	sl, [r0], -r4
    eb50:	strdeq	sl, [r0], -r8
    eb54:	andeq	ip, r0, r4, rrx
    eb58:	andeq	ip, r0, r4, rrx
    eb5c:	andeq	r7, r0, r8, lsr #6
    eb60:	andeq	r7, r0, r4, lsr #6
    eb64:	andeq	sl, r0, r0, lsr r1
    eb68:	andeq	sl, r0, r8, lsr r1
    eb6c:	andeq	r8, r0, r4, lsr sl
    eb70:	andeq	r8, r0, r0, asr #20
    eb74:	muleq	r0, r8, r6
    eb78:	muleq	r0, r0, r6
    eb7c:	andeq	r9, r0, r8, asr #18
    eb80:	andeq	r9, r0, r4, asr r9
    eb84:	andeq	sl, r0, r4, asr #29
    eb88:	andeq	sl, r0, r4, lsr #10
    eb8c:	andeq	sl, r0, ip, ror #9
    eb90:	strdeq	sl, [r0], -ip
    eb94:	andeq	sl, r0, r0, lsr fp
    eb98:	andeq	sl, r0, ip, lsr fp
    eb9c:	andeq	r9, r0, r8, lsr r3
    eba0:	andeq	r9, r0, r8, asr #6
    eba4:	andeq	r8, r0, r8, lsl pc
    eba8:	muleq	r0, r4, r3
    ebac:	andeq	ip, r0, r4, ror #6
    ebb0:	andeq	ip, r0, r8, ror #6
    ebb4:	andeq	sl, r0, r4, lsl #13
    ebb8:	andeq	sl, r0, r4, lsl #13
    ebbc:	andeq	sl, r0, r4, ror r7
    ebc0:	andeq	sl, r0, ip, ror r7
    ebc4:	strdeq	fp, [r0], -r4
    ebc8:	andeq	fp, r0, ip, lsr #28
    ebcc:	strdeq	fp, [r0], -r4
    ebd0:	andeq	fp, r0, r8, lsl #28
    ebd4:	andeq	r9, r0, ip, rrx
    ebd8:	andeq	r9, r0, r0, ror r0
    ebdc:	strdeq	fp, [r0], -r8
    ebe0:	andeq	fp, r0, r4, lsl #4
    ebe4:	andeq	r8, r0, r4, ror ip
    ebe8:	andeq	r8, r0, r8, ror ip
    ebec:	andeq	r8, r0, ip, ror #27
    ebf0:	strdeq	r8, [r0], -ip
    ebf4:	andeq	r7, r0, r0, lsl #25
    ebf8:	andeq	r7, r0, ip, ror ip
    ebfc:	andeq	r7, r0, ip, ror #26
    ec00:	andeq	r7, r0, r4, ror sp
    ec04:			; <UNDEFINED> instruction: 0x0000c2b0
    ec08:	andeq	r7, r0, r4, lsr #7
    ec0c:	andeq	r7, r0, r4, asr r3
    ec10:	andeq	r7, r0, ip, ror r3
    ec14:	ldrdeq	r9, [r0], -r4
    ec18:	ldrdeq	r9, [r0], -ip
    ec1c:	andeq	r7, r0, ip, lsl #14
    ec20:	andeq	r7, r0, r8, lsl r7
    ec24:	andeq	r8, r0, r4, asr #6
    ec28:	andeq	r7, r0, r4, lsr #18
    ec2c:	ldrdeq	r7, [r0], -r8
    ec30:	andeq	r7, r0, r8, ror #17
    ec34:	andeq	r8, r0, r8, asr #6
    ec38:	andeq	r8, r0, r0, asr r3
    ec3c:	andeq	r8, r0, r8, lsl #4
    ec40:	andeq	r8, r0, ip, lsl #4
    ec44:	andeq	r9, r0, r8, lsr r7
    ec48:			; <UNDEFINED> instruction: 0x0000b7b0
    ec4c:	andeq	fp, r0, r8, ror r7
    ec50:	andeq	fp, r0, r4, lsl #15
    ec54:	andeq	sl, r0, r8, ror #24
    ec58:	andeq	sl, r0, r8, ror ip
    ec5c:	andeq	r8, r0, ip, lsl ip
    ec60:	andeq	r8, r0, ip, lsl ip
    ec64:	muleq	r0, ip, r3
    ec68:	andeq	r7, r0, r4, lsr #7
    ec6c:	andeq	fp, r0, r8, asr #25
    ec70:	ldrdeq	fp, [r0], -r4
    ec74:	andeq	fp, r0, r8, lsr #18
    ec78:	andeq	fp, r0, r8, lsr #18
    ec7c:	andeq	fp, r0, r8, lsr #30
    ec80:	andeq	fp, r0, ip, lsr #30
    ec84:	ldrdeq	r9, [r0], -r4
    ec88:	andeq	fp, r0, ip, asr #3
    ec8c:			; <UNDEFINED> instruction: 0x0000b1b0
    ec90:	andeq	fp, r0, ip, lsr #3
    ec94:	andeq	r8, r0, ip, lsl r7
    ec98:	andeq	r8, r0, ip, lsr #14
    ec9c:	andeq	r8, r0, r4, lsl #12
    eca0:	andeq	r8, r0, ip, lsl #12
    eca4:	strdeq	r8, [r0], -r0
    eca8:	andeq	r8, r0, ip, lsl #18
    ecac:	andeq	r9, r0, ip, lsl #10
    ecb0:	andeq	r9, r0, ip, lsl #10
    ecb4:	andeq	r9, r0, r8, asr #18
    ecb8:	andeq	r9, r0, r0, asr r9
    ecbc:	andeq	sl, r0, ip, ror #31
    ecc0:	ldrdeq	sl, [r0], -r4
    ecc4:	andeq	sl, r0, r0, asr #10
    ecc8:	andeq	r8, r0, r8, ror #22
    eccc:	andeq	r8, r0, r0, asr #22
    ecd0:	andeq	r8, r0, r8, asr #22
    ecd4:	andeq	sl, r0, r8, ror fp
    ecd8:	andeq	sl, r0, r0, lsl #23
    ecdc:	andeq	r9, r0, r4, asr #17
    ece0:	andeq	r9, r0, r8, asr #17
    ece4:	andeq	r6, r0, r8, ror #11
    ece8:	andeq	r6, r0, r8, ror #11
    ecec:	andeq	sl, r0, r0, asr r3
    ecf0:	andeq	sl, r0, ip, asr r3
    ecf4:	andeq	sl, r0, r4, ror r7
    ecf8:	andeq	sl, r0, r4, ror r7
    ecfc:			; <UNDEFINED> instruction: 0x000071b4
    ed00:			; <UNDEFINED> instruction: 0x000071b8
    ed04:	andeq	r9, r0, r8, lsl #18
    ed08:	andeq	r8, r0, r0, ror #31
    ed0c:			; <UNDEFINED> instruction: 0x00008fb8
    ed10:			; <UNDEFINED> instruction: 0x00008fb8
    ed14:	ldrdeq	r9, [r0], -r0
    ed18:	ldrdeq	r9, [r0], -r0
    ed1c:	andeq	r7, r0, ip, lsl #1
    ed20:	andeq	r7, r0, ip, lsl #1
    ed24:	andeq	fp, r0, r4, lsr #15
    ed28:	strdeq	r7, [r0], -ip
    ed2c:	andeq	r7, r0, r4, asr #21
    ed30:	andeq	r7, r0, ip, asr #21
    ed34:	andeq	r7, r0, ip, ror #8
    ed38:	andeq	r7, r0, ip, ror #8
    ed3c:	ldrdeq	sl, [r0], -ip
    ed40:	ldrdeq	sl, [r0], -ip
    ed44:	andeq	r6, r0, r4, lsl lr
    ed48:	andeq	sl, r0, r4, ror r4
    ed4c:	andeq	sl, r0, ip, lsr r4
    ed50:	andeq	sl, r0, ip, asr #8
    ed54:	andeq	r9, r0, r0, asr #26
    ed58:	andeq	r9, r0, r0, asr sp
    ed5c:	andeq	r9, r0, ip, asr #30
    ed60:	andeq	r9, r0, r8, asr #30
    ed64:	andeq	r9, r0, r4, ror #19
    ed68:	andeq	r9, r0, r8, ror #19
    ed6c:	andeq	sl, r0, ip, lsr lr
    ed70:	andeq	sl, r0, r4, lsr lr
    ed74:			; <UNDEFINED> instruction: 0x0000aabc
    ed78:	andeq	sl, r0, r4, asr #21
    ed7c:	andeq	r7, r0, r0, ror r5
    ed80:	andeq	r7, r0, r0, ror r5
    ed84:	andeq	sl, r0, ip, asr #24
    ed88:	andeq	r7, r0, r8, lsr #30
    ed8c:	andeq	r7, r0, r8, ror #29
    ed90:	andeq	r7, r0, r0, lsl #30
    ed94:	andeq	r9, r0, r0, ror r7
    ed98:	andeq	r9, r0, r8, lsl #15
    ed9c:	andeq	r7, r0, ip, asr sl
    eda0:	andeq	r7, r0, r0, ror sl
    eda4:	andeq	fp, r0, r0, lsr r6
    eda8:	andeq	fp, r0, r0, lsr r6
    edac:			; <UNDEFINED> instruction: 0x0000a3b4
    edb0:			; <UNDEFINED> instruction: 0x0000a3bc
    edb4:			; <UNDEFINED> instruction: 0x00006ab8
    edb8:	andeq	r6, r0, r8, asr #21
    edbc:	andeq	r8, r0, r8, asr #28
    edc0:	andeq	r8, r0, r8, asr lr
    edc4:	andeq	fp, r0, r0, lsr #1
    edc8:	andeq	fp, r0, ip, lsr #1
    edcc:	ldrdeq	r7, [r0], -r4
    edd0:	ldrdeq	r7, [r0], -r8
    edd4:	andeq	r7, r0, r0, asr #22
    edd8:	andeq	r7, r0, ip, lsr fp
    eddc:	andeq	r6, r0, r4, ror r8
    ede0:	andeq	r6, r0, r8, lsl #17
    ede4:	andeq	sl, r0, r8, asr r3
    ede8:	andeq	sl, r0, r0, ror #6
    edec:	andeq	r6, r0, r4, lsr #5
    edf0:	andeq	r6, r0, r8, lsr #5
    edf4:	andeq	r6, r0, r0, lsl r4
    edf8:	andeq	r6, r0, r8, lsl r4
    edfc:	andeq	r8, r0, r8, lsr r3
    ee00:	andeq	r8, r0, ip, asr #6
    ee04:	andeq	r8, r0, r8, lsr sl
    ee08:	ldrdeq	r7, [r0], -ip
    ee0c:			; <UNDEFINED> instruction: 0x0000a4bc
    ee10:	andeq	sl, r0, r8, ror #13
    ee14:	andeq	sl, r0, r4, asr lr
    ee18:	andeq	fp, r0, r8, lsl #2
    ee1c:	andeq	fp, r0, r4, lsl #7
    ee20:	andeq	r9, r0, r0, asr pc
    ee24:	andeq	r6, r0, ip, ror #10
    ee28:	andeq	r6, r0, r4, ror r5
    ee2c:	andeq	r9, r0, r4, lsl #4
    ee30:	andeq	r9, r0, r0, lsl r2
    ee34:	andeq	r6, r0, r4, asr fp
    ee38:	andeq	r6, r0, r8, asr fp
    ee3c:	andeq	r8, r0, r4, asr #30
    ee40:	andeq	r8, r0, r0, asr pc
    ee44:	andeq	sl, r0, r8, ror #17
    ee48:			; <UNDEFINED> instruction: 0x000069bc
    ee4c:	andeq	r7, r0, ip, asr #30
    ee50:	andeq	r9, r0, r4, lsl #8
    ee54:	andeq	r8, r0, r4, lsr #24
    ee58:	andeq	r7, r0, ip, lsl #15
    ee5c:			; <UNDEFINED> instruction: 0x000081b8
    ee60:	andeq	sl, r0, r8, lsl fp
    ee64:	andeq	sl, r0, r4, asr #19
    ee68:	andeq	sl, r0, r8, asr #19
    ee6c:	andeq	r6, r0, ip, asr sl
    ee70:	andeq	r6, r0, r0, ror #20
    ee74:	andeq	sl, r0, r0, ror #22
    ee78:	andeq	sl, r0, r0, ror #22
    ee7c:	strdeq	r8, [r0], -r4
    ee80:	strdeq	r8, [r0], -r4
    ee84:	andeq	sl, r0, r8, ror #8
    ee88:	andeq	sl, r0, r8, ror #8
    ee8c:	andeq	sl, r0, r8, asr r8
    ee90:	andeq	sl, r0, r4, asr r8
    ee94:	andeq	r9, r0, r8, lsr #26
    ee98:	andeq	r9, r0, r8, lsr sp
    ee9c:	andeq	r8, r0, r0, ror #12
    eea0:	andeq	r8, r0, r4, ror #12
    eea4:	andeq	r7, r0, r0, lsr #4
    eea8:	andeq	r7, r0, r0, lsr #4
    eeac:	andeq	r8, r0, r0, asr #32
    eeb0:	andeq	r8, r0, r0, asr #32
    eeb4:	andeq	r7, r0, r8, ror #6
    eeb8:	andeq	r7, r0, ip, ror #6
    eebc:	andeq	r7, r0, r4, asr #31
    eec0:	ldrdeq	r7, [r0], -r8
    eec4:	andeq	r8, r0, r8, asr r4
    eec8:	andeq	r8, r0, r0, ror #8
    eecc:	andeq	r9, r0, ip, ror r3
    eed0:	andeq	r9, r0, r8, ror r3
    eed4:	strheq	fp, [r0], -r4
    eed8:	andeq	fp, r0, r0, asr #1
    eedc:	andeq	r6, r0, r4, lsr #30
    eee0:	andeq	r6, r0, r8, lsr #30
    eee4:	andeq	r8, r0, r4, lsr fp
    eee8:	andeq	r8, r0, r0, lsr fp
    eeec:	andeq	fp, r0, r8, lsl r2
    eef0:	andeq	fp, r0, r8, lsl r2
    eef4:	andeq	r8, r0, r4, lsl #4
    eef8:	andeq	r8, r0, r0, lsl #4
    eefc:	andeq	r7, r0, r8, lsl r4
    ef00:	andeq	r7, r0, r0, lsr #8
    ef04:	andeq	r8, r0, r8, lsl sp
    ef08:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    ef0c:	muleq	r0, r8, r6
    ef10:	muleq	r0, ip, r6
    ef14:	andeq	r8, r0, ip, asr #11
    ef18:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    ef1c:	muleq	r0, r4, r6
    ef20:	andeq	r9, r0, ip, ror r9
    ef24:	ldrdeq	sl, [r0], -r8
    ef28:	muleq	r0, r8, sl
    ef2c:	andeq	sl, r0, r0, ror #24
    ef30:	andeq	sl, r0, r4, ror #29
    ef34:	andeq	r9, r0, r4, lsl #4
    ef38:	andeq	r9, r0, r4, lsl #4
    ef3c:	muleq	r0, r0, r4
    ef40:	muleq	r0, ip, r4
    ef44:	andeq	r8, r0, r0, lsr #4
    ef48:			; <UNDEFINED> instruction: 0x000096b4
    ef4c:	andeq	r6, r0, r0, asr r7
    ef50:	muleq	r0, ip, r2
    ef54:	andeq	sl, r0, ip, lsr #12
    ef58:	andeq	r7, r0, r0, lsr lr
    ef5c:	andeq	r7, r0, r0, asr #21
    ef60:			; <UNDEFINED> instruction: 0x00007abc
    ef64:	andeq	fp, r0, r0, asr #32
    ef68:	andeq	r7, r0, r4, asr #25
    ef6c:	andeq	r7, r0, r0, lsr #17
    ef70:	andeq	r7, r0, r0, lsr #17
    ef74:	andeq	fp, r0, r8, lsr #32
    ef78:	andeq	fp, r0, ip, lsr #32
    ef7c:	andeq	r5, r0, r0, ror lr
    ef80:	andeq	r5, r0, r4, ror lr
    ef84:	andeq	r8, r0, r0, lsl #30
    ef88:	andeq	r8, r0, ip, asr r4
    ef8c:	ldrdeq	sl, [r0], -r0
    ef90:	andeq	r6, r0, r8, lsl #25
    ef94:	andeq	r7, r0, r4, lsl #14
    ef98:	andeq	r6, r0, r0, rrx
    ef9c:	andeq	r9, r0, ip, lsl #27
    efa0:	andeq	r6, r0, r0, ror #1
    efa4:	andeq	r6, r0, r8, asr r6
    efa8:	andeq	r6, r0, r4, ror #12
    efac:	andeq	r9, r0, r0, lsl #25
    efb0:	andeq	r9, r0, ip, lsl #25
    efb4:	andeq	r8, r0, ip, ror #1
    efb8:	strdeq	r8, [r0], -r4
    efbc:	andeq	r6, r0, ip, lsl #7
    efc0:	andeq	r6, r0, r0, lsr #7
    efc4:	strdeq	r8, [r0], -ip
    efc8:	andeq	r8, r0, r4, lsl #26
    efcc:			; <UNDEFINED> instruction: 0x000086b0
    efd0:			; <UNDEFINED> instruction: 0x000086b8
    efd4:	andeq	r8, r0, r8, ror r2
    efd8:	andeq	r8, r0, ip, ror r2
    efdc:	andeq	sl, r0, r4, asr #17
    efe0:	andeq	sl, r0, r8, asr #17
    efe4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    efe8:	andeq	r8, r0, r0, lsl #20
    efec:	andeq	r7, r0, r4, lsl #4
    eff0:	andeq	r7, r0, r0, lsl r2
    eff4:	andeq	r6, r0, r4, ror fp
    eff8:	andeq	r6, r0, r8, ror fp
    effc:	ldr	r0, [pc, #-828]	; ecc8 <bt_compidtostr@@Base+0x489c>
    f000:	add	r0, pc, r0
    f004:	bx	lr
    f008:	ldr	r0, [pc, #-836]	; eccc <bt_compidtostr@@Base+0x48a0>
    f00c:	add	r0, pc, r0
    f010:	bx	lr
    f014:	ldr	r0, [pc, #-844]	; ecd0 <bt_compidtostr@@Base+0x48a4>
    f018:	add	r0, pc, r0
    f01c:	bx	lr
    f020:	ldr	r0, [pc, #-852]	; ecd4 <bt_compidtostr@@Base+0x48a8>
    f024:	add	r0, pc, r0
    f028:	bx	lr
    f02c:	ldr	r0, [pc, #-860]	; ecd8 <bt_compidtostr@@Base+0x48ac>
    f030:	add	r0, pc, r0
    f034:	bx	lr
    f038:	ldr	r0, [pc, #-868]	; ecdc <bt_compidtostr@@Base+0x48b0>
    f03c:	add	r0, pc, r0
    f040:	bx	lr
    f044:	ldr	r0, [pc, #-876]	; ece0 <bt_compidtostr@@Base+0x48b4>
    f048:	add	r0, pc, r0
    f04c:	bx	lr
    f050:	ldr	r0, [pc, #-884]	; ece4 <bt_compidtostr@@Base+0x48b8>
    f054:	add	r0, pc, r0
    f058:	bx	lr
    f05c:	ldr	r0, [pc, #-892]	; ece8 <bt_compidtostr@@Base+0x48bc>
    f060:	add	r0, pc, r0
    f064:	bx	lr
    f068:	ldr	r0, [pc, #-900]	; ecec <bt_compidtostr@@Base+0x48c0>
    f06c:	add	r0, pc, r0
    f070:	bx	lr
    f074:	ldr	r0, [pc, #-908]	; ecf0 <bt_compidtostr@@Base+0x48c4>
    f078:	add	r0, pc, r0
    f07c:	bx	lr
    f080:	ldr	r0, [pc, #-916]	; ecf4 <bt_compidtostr@@Base+0x48c8>
    f084:	add	r0, pc, r0
    f088:	bx	lr
    f08c:	ldr	r0, [pc, #-924]	; ecf8 <bt_compidtostr@@Base+0x48cc>
    f090:	add	r0, pc, r0
    f094:	bx	lr
    f098:	ldr	r0, [pc, #-932]	; ecfc <bt_compidtostr@@Base+0x48d0>
    f09c:	add	r0, pc, r0
    f0a0:	bx	lr
    f0a4:	ldr	r0, [pc, #-940]	; ed00 <bt_compidtostr@@Base+0x48d4>
    f0a8:	add	r0, pc, r0
    f0ac:	bx	lr
    f0b0:	ldr	r0, [pc, #-948]	; ed04 <bt_compidtostr@@Base+0x48d8>
    f0b4:	add	r0, pc, r0
    f0b8:	bx	lr
    f0bc:	ldr	r0, [pc, #-956]	; ed08 <bt_compidtostr@@Base+0x48dc>
    f0c0:	add	r0, pc, r0
    f0c4:	bx	lr
    f0c8:	ldr	r0, [pc, #-964]	; ed0c <bt_compidtostr@@Base+0x48e0>
    f0cc:	add	r0, pc, r0
    f0d0:	bx	lr
    f0d4:	ldr	r0, [pc, #-972]	; ed10 <bt_compidtostr@@Base+0x48e4>
    f0d8:	add	r0, pc, r0
    f0dc:	bx	lr
    f0e0:	ldr	r0, [pc, #-980]	; ed14 <bt_compidtostr@@Base+0x48e8>
    f0e4:	add	r0, pc, r0
    f0e8:	bx	lr
    f0ec:	ldr	r0, [pc, #-988]	; ed18 <bt_compidtostr@@Base+0x48ec>
    f0f0:	add	r0, pc, r0
    f0f4:	bx	lr
    f0f8:	ldr	r0, [pc, #-996]	; ed1c <bt_compidtostr@@Base+0x48f0>
    f0fc:	add	r0, pc, r0
    f100:	bx	lr
    f104:	ldr	r0, [pc, #-1004]	; ed20 <bt_compidtostr@@Base+0x48f4>
    f108:	add	r0, pc, r0
    f10c:	bx	lr
    f110:	ldr	r0, [pc, #-1012]	; ed24 <bt_compidtostr@@Base+0x48f8>
    f114:	add	r0, pc, r0
    f118:	bx	lr
    f11c:	ldr	r0, [pc, #-1020]	; ed28 <bt_compidtostr@@Base+0x48fc>
    f120:	add	r0, pc, r0
    f124:	bx	lr
    f128:	ldr	r0, [pc, #-1028]	; ed2c <bt_compidtostr@@Base+0x4900>
    f12c:	add	r0, pc, r0
    f130:	bx	lr
    f134:	ldr	r0, [pc, #-1036]	; ed30 <bt_compidtostr@@Base+0x4904>
    f138:	add	r0, pc, r0
    f13c:	bx	lr
    f140:	ldr	r0, [pc, #-1044]	; ed34 <bt_compidtostr@@Base+0x4908>
    f144:	add	r0, pc, r0
    f148:	bx	lr
    f14c:	ldr	r0, [pc, #-1052]	; ed38 <bt_compidtostr@@Base+0x490c>
    f150:	add	r0, pc, r0
    f154:	bx	lr
    f158:	ldr	r0, [pc, #-1060]	; ed3c <bt_compidtostr@@Base+0x4910>
    f15c:	add	r0, pc, r0
    f160:	bx	lr
    f164:	ldr	r0, [pc, #-1068]	; ed40 <bt_compidtostr@@Base+0x4914>
    f168:	add	r0, pc, r0
    f16c:	bx	lr
    f170:	ldr	r0, [pc, #-1076]	; ed44 <bt_compidtostr@@Base+0x4918>
    f174:	add	r0, pc, r0
    f178:	bx	lr
    f17c:	ldr	r0, [pc, #-1084]	; ed48 <bt_compidtostr@@Base+0x491c>
    f180:	add	r0, pc, r0
    f184:	bx	lr
    f188:	ldr	r0, [pc, #-1092]	; ed4c <bt_compidtostr@@Base+0x4920>
    f18c:	add	r0, pc, r0
    f190:	bx	lr
    f194:	ldr	r0, [pc, #-1100]	; ed50 <bt_compidtostr@@Base+0x4924>
    f198:	add	r0, pc, r0
    f19c:	bx	lr
    f1a0:	ldr	r0, [pc, #-1108]	; ed54 <bt_compidtostr@@Base+0x4928>
    f1a4:	add	r0, pc, r0
    f1a8:	bx	lr
    f1ac:	ldr	r0, [pc, #-1116]	; ed58 <bt_compidtostr@@Base+0x492c>
    f1b0:	add	r0, pc, r0
    f1b4:	bx	lr
    f1b8:	ldr	r0, [pc, #-1124]	; ed5c <bt_compidtostr@@Base+0x4930>
    f1bc:	add	r0, pc, r0
    f1c0:	bx	lr
    f1c4:	ldr	r0, [pc, #-1132]	; ed60 <bt_compidtostr@@Base+0x4934>
    f1c8:	add	r0, pc, r0
    f1cc:	bx	lr
    f1d0:	ldr	r0, [pc, #-1140]	; ed64 <bt_compidtostr@@Base+0x4938>
    f1d4:	add	r0, pc, r0
    f1d8:	bx	lr
    f1dc:	ldr	r0, [pc, #-1148]	; ed68 <bt_compidtostr@@Base+0x493c>
    f1e0:	add	r0, pc, r0
    f1e4:	bx	lr
    f1e8:	ldr	r0, [pc, #-1156]	; ed6c <bt_compidtostr@@Base+0x4940>
    f1ec:	add	r0, pc, r0
    f1f0:	bx	lr
    f1f4:	ldr	r0, [pc, #-1164]	; ed70 <bt_compidtostr@@Base+0x4944>
    f1f8:	add	r0, pc, r0
    f1fc:	bx	lr
    f200:	ldr	r0, [pc, #-1172]	; ed74 <bt_compidtostr@@Base+0x4948>
    f204:	add	r0, pc, r0
    f208:	bx	lr
    f20c:	ldr	r0, [pc, #-1180]	; ed78 <bt_compidtostr@@Base+0x494c>
    f210:	add	r0, pc, r0
    f214:	bx	lr
    f218:	ldr	r0, [pc, #-1188]	; ed7c <bt_compidtostr@@Base+0x4950>
    f21c:	add	r0, pc, r0
    f220:	bx	lr
    f224:	ldr	r0, [pc, #-1196]	; ed80 <bt_compidtostr@@Base+0x4954>
    f228:	add	r0, pc, r0
    f22c:	bx	lr
    f230:	ldr	r0, [pc, #-1204]	; ed84 <bt_compidtostr@@Base+0x4958>
    f234:	add	r0, pc, r0
    f238:	bx	lr
    f23c:	ldr	r0, [pc, #-1212]	; ed88 <bt_compidtostr@@Base+0x495c>
    f240:	add	r0, pc, r0
    f244:	bx	lr
    f248:	ldr	r0, [pc, #-1220]	; ed8c <bt_compidtostr@@Base+0x4960>
    f24c:	add	r0, pc, r0
    f250:	bx	lr
    f254:	ldr	r0, [pc, #-1228]	; ed90 <bt_compidtostr@@Base+0x4964>
    f258:	add	r0, pc, r0
    f25c:	bx	lr
    f260:	ldr	r0, [pc, #-1236]	; ed94 <bt_compidtostr@@Base+0x4968>
    f264:	add	r0, pc, r0
    f268:	bx	lr
    f26c:	ldr	r0, [pc, #-1244]	; ed98 <bt_compidtostr@@Base+0x496c>
    f270:	add	r0, pc, r0
    f274:	bx	lr
    f278:	ldr	r0, [pc, #-1252]	; ed9c <bt_compidtostr@@Base+0x4970>
    f27c:	add	r0, pc, r0
    f280:	bx	lr
    f284:	ldr	r0, [pc, #-1260]	; eda0 <bt_compidtostr@@Base+0x4974>
    f288:	add	r0, pc, r0
    f28c:	bx	lr
    f290:	ldr	r0, [pc, #-1268]	; eda4 <bt_compidtostr@@Base+0x4978>
    f294:	add	r0, pc, r0
    f298:	bx	lr
    f29c:	ldr	r0, [pc, #-1276]	; eda8 <bt_compidtostr@@Base+0x497c>
    f2a0:	add	r0, pc, r0
    f2a4:	bx	lr
    f2a8:	ldr	r0, [pc, #-1284]	; edac <bt_compidtostr@@Base+0x4980>
    f2ac:	add	r0, pc, r0
    f2b0:	bx	lr
    f2b4:	ldr	r0, [pc, #-1292]	; edb0 <bt_compidtostr@@Base+0x4984>
    f2b8:	add	r0, pc, r0
    f2bc:	bx	lr
    f2c0:	ldr	r0, [pc, #-1300]	; edb4 <bt_compidtostr@@Base+0x4988>
    f2c4:	add	r0, pc, r0
    f2c8:	bx	lr
    f2cc:	ldr	r0, [pc, #-1308]	; edb8 <bt_compidtostr@@Base+0x498c>
    f2d0:	add	r0, pc, r0
    f2d4:	bx	lr
    f2d8:	ldr	r0, [pc, #-1316]	; edbc <bt_compidtostr@@Base+0x4990>
    f2dc:	add	r0, pc, r0
    f2e0:	bx	lr
    f2e4:	ldr	r0, [pc, #-1324]	; edc0 <bt_compidtostr@@Base+0x4994>
    f2e8:	add	r0, pc, r0
    f2ec:	bx	lr
    f2f0:	ldr	r0, [pc, #-1332]	; edc4 <bt_compidtostr@@Base+0x4998>
    f2f4:	add	r0, pc, r0
    f2f8:	bx	lr
    f2fc:	ldr	r0, [pc, #-1340]	; edc8 <bt_compidtostr@@Base+0x499c>
    f300:	add	r0, pc, r0
    f304:	bx	lr
    f308:	ldr	r0, [pc, #-1348]	; edcc <bt_compidtostr@@Base+0x49a0>
    f30c:	add	r0, pc, r0
    f310:	bx	lr
    f314:	ldr	r0, [pc, #-1356]	; edd0 <bt_compidtostr@@Base+0x49a4>
    f318:	add	r0, pc, r0
    f31c:	bx	lr
    f320:	ldr	r0, [pc, #-1364]	; edd4 <bt_compidtostr@@Base+0x49a8>
    f324:	add	r0, pc, r0
    f328:	bx	lr
    f32c:	ldr	r0, [pc, #-1372]	; edd8 <bt_compidtostr@@Base+0x49ac>
    f330:	add	r0, pc, r0
    f334:	bx	lr
    f338:	ldr	r0, [pc, #-1380]	; eddc <bt_compidtostr@@Base+0x49b0>
    f33c:	add	r0, pc, r0
    f340:	bx	lr
    f344:	ldr	r0, [pc, #-1388]	; ede0 <bt_compidtostr@@Base+0x49b4>
    f348:	add	r0, pc, r0
    f34c:	bx	lr
    f350:	ldr	r0, [pc, #-1396]	; ede4 <bt_compidtostr@@Base+0x49b8>
    f354:	add	r0, pc, r0
    f358:	bx	lr
    f35c:	ldr	r0, [pc, #-1404]	; ede8 <bt_compidtostr@@Base+0x49bc>
    f360:	add	r0, pc, r0
    f364:	bx	lr
    f368:	ldr	r0, [pc, #-1412]	; edec <bt_compidtostr@@Base+0x49c0>
    f36c:	add	r0, pc, r0
    f370:	bx	lr
    f374:	ldr	r0, [pc, #-1420]	; edf0 <bt_compidtostr@@Base+0x49c4>
    f378:	add	r0, pc, r0
    f37c:	bx	lr
    f380:	ldr	r0, [pc, #-1428]	; edf4 <bt_compidtostr@@Base+0x49c8>
    f384:	add	r0, pc, r0
    f388:	bx	lr
    f38c:	ldr	r0, [pc, #-1436]	; edf8 <bt_compidtostr@@Base+0x49cc>
    f390:	add	r0, pc, r0
    f394:	bx	lr
    f398:	ldr	r0, [pc, #-1444]	; edfc <bt_compidtostr@@Base+0x49d0>
    f39c:	add	r0, pc, r0
    f3a0:	bx	lr
    f3a4:	ldr	r0, [pc, #-1452]	; ee00 <bt_compidtostr@@Base+0x49d4>
    f3a8:	add	r0, pc, r0
    f3ac:	bx	lr
    f3b0:	ldr	r0, [pc, #-1460]	; ee04 <bt_compidtostr@@Base+0x49d8>
    f3b4:	add	r0, pc, r0
    f3b8:	bx	lr
    f3bc:	ldr	r0, [pc, #-1468]	; ee08 <bt_compidtostr@@Base+0x49dc>
    f3c0:	add	r0, pc, r0
    f3c4:	bx	lr
    f3c8:	ldr	r0, [pc, #-1476]	; ee0c <bt_compidtostr@@Base+0x49e0>
    f3cc:	add	r0, pc, r0
    f3d0:	bx	lr
    f3d4:	ldr	r0, [pc, #-1484]	; ee10 <bt_compidtostr@@Base+0x49e4>
    f3d8:	add	r0, pc, r0
    f3dc:	bx	lr
    f3e0:	ldr	r0, [pc, #-1492]	; ee14 <bt_compidtostr@@Base+0x49e8>
    f3e4:	add	r0, pc, r0
    f3e8:	bx	lr
    f3ec:	ldr	r0, [pc, #-1500]	; ee18 <bt_compidtostr@@Base+0x49ec>
    f3f0:	add	r0, pc, r0
    f3f4:	bx	lr
    f3f8:	ldr	r0, [pc, #-1508]	; ee1c <bt_compidtostr@@Base+0x49f0>
    f3fc:	add	r0, pc, r0
    f400:	bx	lr
    f404:	ldr	r0, [pc, #-1516]	; ee20 <bt_compidtostr@@Base+0x49f4>
    f408:	add	r0, pc, r0
    f40c:	bx	lr
    f410:	ldr	r0, [pc, #-1524]	; ee24 <bt_compidtostr@@Base+0x49f8>
    f414:	add	r0, pc, r0
    f418:	bx	lr
    f41c:	ldr	r0, [pc, #-1532]	; ee28 <bt_compidtostr@@Base+0x49fc>
    f420:	add	r0, pc, r0
    f424:	bx	lr
    f428:	ldr	r0, [pc, #-1540]	; ee2c <bt_compidtostr@@Base+0x4a00>
    f42c:	add	r0, pc, r0
    f430:	bx	lr
    f434:	ldr	r0, [pc, #-1548]	; ee30 <bt_compidtostr@@Base+0x4a04>
    f438:	add	r0, pc, r0
    f43c:	bx	lr
    f440:	ldr	r0, [pc, #-1556]	; ee34 <bt_compidtostr@@Base+0x4a08>
    f444:	add	r0, pc, r0
    f448:	bx	lr
    f44c:	ldr	r0, [pc, #-1564]	; ee38 <bt_compidtostr@@Base+0x4a0c>
    f450:	add	r0, pc, r0
    f454:	bx	lr
    f458:	ldr	r0, [pc, #-1572]	; ee3c <bt_compidtostr@@Base+0x4a10>
    f45c:	add	r0, pc, r0
    f460:	bx	lr
    f464:	ldr	r0, [pc, #-1580]	; ee40 <bt_compidtostr@@Base+0x4a14>
    f468:	add	r0, pc, r0
    f46c:	bx	lr
    f470:	ldr	r0, [pc, #-1588]	; ee44 <bt_compidtostr@@Base+0x4a18>
    f474:	add	r0, pc, r0
    f478:	bx	lr
    f47c:	ldr	r0, [pc, #-1596]	; ee48 <bt_compidtostr@@Base+0x4a1c>
    f480:	add	r0, pc, r0
    f484:	bx	lr
    f488:	ldr	r0, [pc, #-1604]	; ee4c <bt_compidtostr@@Base+0x4a20>
    f48c:	add	r0, pc, r0
    f490:	bx	lr
    f494:	ldr	r0, [pc, #-1612]	; ee50 <bt_compidtostr@@Base+0x4a24>
    f498:	add	r0, pc, r0
    f49c:	bx	lr
    f4a0:	ldr	r0, [pc, #-1620]	; ee54 <bt_compidtostr@@Base+0x4a28>
    f4a4:	add	r0, pc, r0
    f4a8:	bx	lr
    f4ac:	ldr	r0, [pc, #-1628]	; ee58 <bt_compidtostr@@Base+0x4a2c>
    f4b0:	add	r0, pc, r0
    f4b4:	bx	lr
    f4b8:	ldr	r0, [pc, #-1636]	; ee5c <bt_compidtostr@@Base+0x4a30>
    f4bc:	add	r0, pc, r0
    f4c0:	bx	lr
    f4c4:	ldr	r0, [pc, #-1644]	; ee60 <bt_compidtostr@@Base+0x4a34>
    f4c8:	add	r0, pc, r0
    f4cc:	bx	lr
    f4d0:	ldr	r0, [pc, #-1652]	; ee64 <bt_compidtostr@@Base+0x4a38>
    f4d4:	add	r0, pc, r0
    f4d8:	bx	lr
    f4dc:	ldr	r0, [pc, #-1660]	; ee68 <bt_compidtostr@@Base+0x4a3c>
    f4e0:	add	r0, pc, r0
    f4e4:	bx	lr
    f4e8:	ldr	r0, [pc, #-1668]	; ee6c <bt_compidtostr@@Base+0x4a40>
    f4ec:	add	r0, pc, r0
    f4f0:	bx	lr
    f4f4:	ldr	r0, [pc, #-1676]	; ee70 <bt_compidtostr@@Base+0x4a44>
    f4f8:	add	r0, pc, r0
    f4fc:	bx	lr
    f500:	ldr	r0, [pc, #-1684]	; ee74 <bt_compidtostr@@Base+0x4a48>
    f504:	add	r0, pc, r0
    f508:	bx	lr
    f50c:	ldr	r0, [pc, #-1692]	; ee78 <bt_compidtostr@@Base+0x4a4c>
    f510:	add	r0, pc, r0
    f514:	bx	lr
    f518:	ldr	r0, [pc, #-1700]	; ee7c <bt_compidtostr@@Base+0x4a50>
    f51c:	add	r0, pc, r0
    f520:	bx	lr
    f524:	ldr	r0, [pc, #-1708]	; ee80 <bt_compidtostr@@Base+0x4a54>
    f528:	add	r0, pc, r0
    f52c:	bx	lr
    f530:	ldr	r0, [pc, #-1716]	; ee84 <bt_compidtostr@@Base+0x4a58>
    f534:	add	r0, pc, r0
    f538:	bx	lr
    f53c:	ldr	r0, [pc, #-1724]	; ee88 <bt_compidtostr@@Base+0x4a5c>
    f540:	add	r0, pc, r0
    f544:	bx	lr
    f548:	ldr	r0, [pc, #-1732]	; ee8c <bt_compidtostr@@Base+0x4a60>
    f54c:	add	r0, pc, r0
    f550:	bx	lr
    f554:	ldr	r0, [pc, #-1740]	; ee90 <bt_compidtostr@@Base+0x4a64>
    f558:	add	r0, pc, r0
    f55c:	bx	lr
    f560:	ldr	r0, [pc, #-1748]	; ee94 <bt_compidtostr@@Base+0x4a68>
    f564:	add	r0, pc, r0
    f568:	bx	lr
    f56c:	ldr	r0, [pc, #-1756]	; ee98 <bt_compidtostr@@Base+0x4a6c>
    f570:	add	r0, pc, r0
    f574:	bx	lr
    f578:	ldr	r0, [pc, #-1764]	; ee9c <bt_compidtostr@@Base+0x4a70>
    f57c:	add	r0, pc, r0
    f580:	bx	lr
    f584:	ldr	r0, [pc, #-1772]	; eea0 <bt_compidtostr@@Base+0x4a74>
    f588:	add	r0, pc, r0
    f58c:	bx	lr
    f590:	ldr	r0, [pc, #-1780]	; eea4 <bt_compidtostr@@Base+0x4a78>
    f594:	add	r0, pc, r0
    f598:	bx	lr
    f59c:	ldr	r0, [pc, #-1788]	; eea8 <bt_compidtostr@@Base+0x4a7c>
    f5a0:	add	r0, pc, r0
    f5a4:	bx	lr
    f5a8:	ldr	r0, [pc, #-1796]	; eeac <bt_compidtostr@@Base+0x4a80>
    f5ac:	add	r0, pc, r0
    f5b0:	bx	lr
    f5b4:	ldr	r0, [pc, #-1804]	; eeb0 <bt_compidtostr@@Base+0x4a84>
    f5b8:	add	r0, pc, r0
    f5bc:	bx	lr
    f5c0:	ldr	r0, [pc, #-1812]	; eeb4 <bt_compidtostr@@Base+0x4a88>
    f5c4:	add	r0, pc, r0
    f5c8:	bx	lr
    f5cc:	ldr	r0, [pc, #-1820]	; eeb8 <bt_compidtostr@@Base+0x4a8c>
    f5d0:	add	r0, pc, r0
    f5d4:	bx	lr
    f5d8:	ldr	r0, [pc, #-1828]	; eebc <bt_compidtostr@@Base+0x4a90>
    f5dc:	add	r0, pc, r0
    f5e0:	bx	lr
    f5e4:	ldr	r0, [pc, #-1836]	; eec0 <bt_compidtostr@@Base+0x4a94>
    f5e8:	add	r0, pc, r0
    f5ec:	bx	lr
    f5f0:	ldr	r0, [pc, #-1844]	; eec4 <bt_compidtostr@@Base+0x4a98>
    f5f4:	add	r0, pc, r0
    f5f8:	bx	lr
    f5fc:	ldr	r0, [pc, #-1852]	; eec8 <bt_compidtostr@@Base+0x4a9c>
    f600:	add	r0, pc, r0
    f604:	bx	lr
    f608:	ldr	r0, [pc, #-1860]	; eecc <bt_compidtostr@@Base+0x4aa0>
    f60c:	add	r0, pc, r0
    f610:	bx	lr
    f614:	ldr	r0, [pc, #-1868]	; eed0 <bt_compidtostr@@Base+0x4aa4>
    f618:	add	r0, pc, r0
    f61c:	bx	lr
    f620:	ldr	r0, [pc, #-1876]	; eed4 <bt_compidtostr@@Base+0x4aa8>
    f624:	add	r0, pc, r0
    f628:	bx	lr
    f62c:	ldr	r0, [pc, #-1884]	; eed8 <bt_compidtostr@@Base+0x4aac>
    f630:	add	r0, pc, r0
    f634:	bx	lr
    f638:	ldr	r0, [pc, #-1892]	; eedc <bt_compidtostr@@Base+0x4ab0>
    f63c:	add	r0, pc, r0
    f640:	bx	lr
    f644:	ldr	r0, [pc, #-1900]	; eee0 <bt_compidtostr@@Base+0x4ab4>
    f648:	add	r0, pc, r0
    f64c:	bx	lr
    f650:	ldr	r0, [pc, #-1908]	; eee4 <bt_compidtostr@@Base+0x4ab8>
    f654:	add	r0, pc, r0
    f658:	bx	lr
    f65c:	ldr	r0, [pc, #-1916]	; eee8 <bt_compidtostr@@Base+0x4abc>
    f660:	add	r0, pc, r0
    f664:	bx	lr
    f668:	ldr	r0, [pc, #-1924]	; eeec <bt_compidtostr@@Base+0x4ac0>
    f66c:	add	r0, pc, r0
    f670:	bx	lr
    f674:	ldr	r0, [pc, #-1932]	; eef0 <bt_compidtostr@@Base+0x4ac4>
    f678:	add	r0, pc, r0
    f67c:	bx	lr
    f680:	ldr	r0, [pc, #-1940]	; eef4 <bt_compidtostr@@Base+0x4ac8>
    f684:	add	r0, pc, r0
    f688:	bx	lr
    f68c:	ldr	r0, [pc, #-1948]	; eef8 <bt_compidtostr@@Base+0x4acc>
    f690:	add	r0, pc, r0
    f694:	bx	lr
    f698:	ldr	r0, [pc, #-1956]	; eefc <bt_compidtostr@@Base+0x4ad0>
    f69c:	add	r0, pc, r0
    f6a0:	bx	lr
    f6a4:	ldr	r0, [pc, #-1964]	; ef00 <bt_compidtostr@@Base+0x4ad4>
    f6a8:	add	r0, pc, r0
    f6ac:	bx	lr
    f6b0:	ldr	r0, [pc, #-1972]	; ef04 <bt_compidtostr@@Base+0x4ad8>
    f6b4:	add	r0, pc, r0
    f6b8:	bx	lr
    f6bc:	ldr	r0, [pc, #-1980]	; ef08 <bt_compidtostr@@Base+0x4adc>
    f6c0:	add	r0, pc, r0
    f6c4:	bx	lr
    f6c8:	ldr	r0, [pc, #-1988]	; ef0c <bt_compidtostr@@Base+0x4ae0>
    f6cc:	add	r0, pc, r0
    f6d0:	bx	lr
    f6d4:	ldr	r0, [pc, #-1996]	; ef10 <bt_compidtostr@@Base+0x4ae4>
    f6d8:	add	r0, pc, r0
    f6dc:	bx	lr
    f6e0:	ldr	r0, [pc, #-2004]	; ef14 <bt_compidtostr@@Base+0x4ae8>
    f6e4:	add	r0, pc, r0
    f6e8:	bx	lr
    f6ec:	ldr	r0, [pc, #-2012]	; ef18 <bt_compidtostr@@Base+0x4aec>
    f6f0:	add	r0, pc, r0
    f6f4:	bx	lr
    f6f8:	ldr	r0, [pc, #-2020]	; ef1c <bt_compidtostr@@Base+0x4af0>
    f6fc:	add	r0, pc, r0
    f700:	bx	lr
    f704:	ldr	r0, [pc, #-2028]	; ef20 <bt_compidtostr@@Base+0x4af4>
    f708:	add	r0, pc, r0
    f70c:	bx	lr
    f710:	ldr	r0, [pc, #-2036]	; ef24 <bt_compidtostr@@Base+0x4af8>
    f714:	add	r0, pc, r0
    f718:	bx	lr
    f71c:	ldr	r0, [pc, #-2044]	; ef28 <bt_compidtostr@@Base+0x4afc>
    f720:	add	r0, pc, r0
    f724:	bx	lr
    f728:	ldr	r0, [pc, #-2052]	; ef2c <bt_compidtostr@@Base+0x4b00>
    f72c:	add	r0, pc, r0
    f730:	bx	lr
    f734:	ldr	r0, [pc, #-2060]	; ef30 <bt_compidtostr@@Base+0x4b04>
    f738:	add	r0, pc, r0
    f73c:	bx	lr
    f740:	ldr	r0, [pc, #-2068]	; ef34 <bt_compidtostr@@Base+0x4b08>
    f744:	add	r0, pc, r0
    f748:	bx	lr
    f74c:	ldr	r0, [pc, #-2076]	; ef38 <bt_compidtostr@@Base+0x4b0c>
    f750:	add	r0, pc, r0
    f754:	bx	lr
    f758:	ldr	r0, [pc, #-2084]	; ef3c <bt_compidtostr@@Base+0x4b10>
    f75c:	add	r0, pc, r0
    f760:	bx	lr
    f764:	ldr	r0, [pc, #-2092]	; ef40 <bt_compidtostr@@Base+0x4b14>
    f768:	add	r0, pc, r0
    f76c:	bx	lr
    f770:	ldr	r0, [pc, #-2100]	; ef44 <bt_compidtostr@@Base+0x4b18>
    f774:	add	r0, pc, r0
    f778:	bx	lr
    f77c:	ldr	r0, [pc, #-2108]	; ef48 <bt_compidtostr@@Base+0x4b1c>
    f780:	add	r0, pc, r0
    f784:	bx	lr
    f788:	ldr	r0, [pc, #-2116]	; ef4c <bt_compidtostr@@Base+0x4b20>
    f78c:	add	r0, pc, r0
    f790:	bx	lr
    f794:	ldr	r0, [pc, #-2124]	; ef50 <bt_compidtostr@@Base+0x4b24>
    f798:	add	r0, pc, r0
    f79c:	bx	lr
    f7a0:	ldr	r0, [pc, #-2132]	; ef54 <bt_compidtostr@@Base+0x4b28>
    f7a4:	add	r0, pc, r0
    f7a8:	bx	lr
    f7ac:	ldr	r0, [pc, #-2140]	; ef58 <bt_compidtostr@@Base+0x4b2c>
    f7b0:	add	r0, pc, r0
    f7b4:	bx	lr
    f7b8:	ldr	r0, [pc, #-2148]	; ef5c <bt_compidtostr@@Base+0x4b30>
    f7bc:	add	r0, pc, r0
    f7c0:	bx	lr
    f7c4:	ldr	r0, [pc, #-2156]	; ef60 <bt_compidtostr@@Base+0x4b34>
    f7c8:	add	r0, pc, r0
    f7cc:	bx	lr
    f7d0:	ldr	r0, [pc, #-2164]	; ef64 <bt_compidtostr@@Base+0x4b38>
    f7d4:	add	r0, pc, r0
    f7d8:	bx	lr
    f7dc:	ldr	r0, [pc, #-2172]	; ef68 <bt_compidtostr@@Base+0x4b3c>
    f7e0:	add	r0, pc, r0
    f7e4:	bx	lr
    f7e8:	ldr	r0, [pc, #-2180]	; ef6c <bt_compidtostr@@Base+0x4b40>
    f7ec:	add	r0, pc, r0
    f7f0:	bx	lr
    f7f4:	ldr	r0, [pc, #-2188]	; ef70 <bt_compidtostr@@Base+0x4b44>
    f7f8:	add	r0, pc, r0
    f7fc:	bx	lr
    f800:	ldr	r0, [pc, #-2196]	; ef74 <bt_compidtostr@@Base+0x4b48>
    f804:	add	r0, pc, r0
    f808:	bx	lr
    f80c:	ldr	r0, [pc, #-2204]	; ef78 <bt_compidtostr@@Base+0x4b4c>
    f810:	add	r0, pc, r0
    f814:	bx	lr
    f818:	ldr	r0, [pc, #-2212]	; ef7c <bt_compidtostr@@Base+0x4b50>
    f81c:	add	r0, pc, r0
    f820:	bx	lr
    f824:	ldr	r0, [pc, #-2220]	; ef80 <bt_compidtostr@@Base+0x4b54>
    f828:	add	r0, pc, r0
    f82c:	bx	lr
    f830:	ldr	r0, [pc, #-2228]	; ef84 <bt_compidtostr@@Base+0x4b58>
    f834:	add	r0, pc, r0
    f838:	bx	lr
    f83c:	ldr	r0, [pc, #-2236]	; ef88 <bt_compidtostr@@Base+0x4b5c>
    f840:	add	r0, pc, r0
    f844:	bx	lr
    f848:	ldr	r0, [pc, #-2244]	; ef8c <bt_compidtostr@@Base+0x4b60>
    f84c:	add	r0, pc, r0
    f850:	bx	lr
    f854:	ldr	r0, [pc, #-2252]	; ef90 <bt_compidtostr@@Base+0x4b64>
    f858:	add	r0, pc, r0
    f85c:	bx	lr
    f860:	ldr	r0, [pc, #-2260]	; ef94 <bt_compidtostr@@Base+0x4b68>
    f864:	add	r0, pc, r0
    f868:	bx	lr
    f86c:	ldr	r0, [pc, #-2268]	; ef98 <bt_compidtostr@@Base+0x4b6c>
    f870:	add	r0, pc, r0
    f874:	bx	lr
    f878:	ldr	r0, [pc, #-2276]	; ef9c <bt_compidtostr@@Base+0x4b70>
    f87c:	add	r0, pc, r0
    f880:	bx	lr
    f884:	ldr	r0, [pc, #-2284]	; efa0 <bt_compidtostr@@Base+0x4b74>
    f888:	add	r0, pc, r0
    f88c:	bx	lr
    f890:	ldr	r0, [pc, #-2292]	; efa4 <bt_compidtostr@@Base+0x4b78>
    f894:	add	r0, pc, r0
    f898:	bx	lr
    f89c:	ldr	r0, [pc, #-2300]	; efa8 <bt_compidtostr@@Base+0x4b7c>
    f8a0:	add	r0, pc, r0
    f8a4:	bx	lr
    f8a8:	ldr	r0, [pc, #-2308]	; efac <bt_compidtostr@@Base+0x4b80>
    f8ac:	add	r0, pc, r0
    f8b0:	bx	lr
    f8b4:	ldr	r0, [pc, #-2316]	; efb0 <bt_compidtostr@@Base+0x4b84>
    f8b8:	add	r0, pc, r0
    f8bc:	bx	lr
    f8c0:	ldr	r0, [pc, #-2324]	; efb4 <bt_compidtostr@@Base+0x4b88>
    f8c4:	add	r0, pc, r0
    f8c8:	bx	lr
    f8cc:	ldr	r0, [pc, #-2332]	; efb8 <bt_compidtostr@@Base+0x4b8c>
    f8d0:	add	r0, pc, r0
    f8d4:	bx	lr
    f8d8:	ldr	r0, [pc, #-2340]	; efbc <bt_compidtostr@@Base+0x4b90>
    f8dc:	add	r0, pc, r0
    f8e0:	bx	lr
    f8e4:	ldr	r0, [pc, #-2348]	; efc0 <bt_compidtostr@@Base+0x4b94>
    f8e8:	add	r0, pc, r0
    f8ec:	bx	lr
    f8f0:	ldr	r0, [pc, #-2356]	; efc4 <bt_compidtostr@@Base+0x4b98>
    f8f4:	add	r0, pc, r0
    f8f8:	bx	lr
    f8fc:	ldr	r0, [pc, #-2364]	; efc8 <bt_compidtostr@@Base+0x4b9c>
    f900:	add	r0, pc, r0
    f904:	bx	lr
    f908:	ldr	r0, [pc, #-2372]	; efcc <bt_compidtostr@@Base+0x4ba0>
    f90c:	add	r0, pc, r0
    f910:	bx	lr
    f914:	ldr	r0, [pc, #-2380]	; efd0 <bt_compidtostr@@Base+0x4ba4>
    f918:	add	r0, pc, r0
    f91c:	bx	lr
    f920:	ldr	r0, [pc, #-2388]	; efd4 <bt_compidtostr@@Base+0x4ba8>
    f924:	add	r0, pc, r0
    f928:	bx	lr
    f92c:	ldr	r0, [pc, #-2396]	; efd8 <bt_compidtostr@@Base+0x4bac>
    f930:	add	r0, pc, r0
    f934:	bx	lr
    f938:	ldr	r0, [pc, #-2404]	; efdc <bt_compidtostr@@Base+0x4bb0>
    f93c:	add	r0, pc, r0
    f940:	bx	lr
    f944:	ldr	r0, [pc, #-2412]	; efe0 <bt_compidtostr@@Base+0x4bb4>
    f948:	add	r0, pc, r0
    f94c:	bx	lr
    f950:	ldr	r0, [pc, #-2420]	; efe4 <bt_compidtostr@@Base+0x4bb8>
    f954:	add	r0, pc, r0
    f958:	bx	lr
    f95c:	ldr	r0, [pc, #-2428]	; efe8 <bt_compidtostr@@Base+0x4bbc>
    f960:	add	r0, pc, r0
    f964:	bx	lr
    f968:	ldr	r0, [pc, #-2436]	; efec <bt_compidtostr@@Base+0x4bc0>
    f96c:	add	r0, pc, r0
    f970:	bx	lr
    f974:	ldr	r0, [pc, #-2444]	; eff0 <bt_compidtostr@@Base+0x4bc4>
    f978:	add	r0, pc, r0
    f97c:	bx	lr
    f980:	ldr	r0, [pc, #-2452]	; eff4 <bt_compidtostr@@Base+0x4bc8>
    f984:	add	r0, pc, r0
    f988:	bx	lr
    f98c:	ldr	r0, [pc, #-2460]	; eff8 <bt_compidtostr@@Base+0x4bcc>
    f990:	add	r0, pc, r0
    f994:	bx	lr
    f998:	ldr	r0, [pc, #2320]	; 102b0 <bt_compidtostr@@Base+0x5e84>
    f99c:	add	r0, pc, r0
    f9a0:	bx	lr
    f9a4:	ldr	r0, [pc, #2312]	; 102b4 <bt_compidtostr@@Base+0x5e88>
    f9a8:	add	r0, pc, r0
    f9ac:	bx	lr
    f9b0:	ldr	r0, [pc, #2304]	; 102b8 <bt_compidtostr@@Base+0x5e8c>
    f9b4:	add	r0, pc, r0
    f9b8:	bx	lr
    f9bc:	ldr	r0, [pc, #2296]	; 102bc <bt_compidtostr@@Base+0x5e90>
    f9c0:	add	r0, pc, r0
    f9c4:	bx	lr
    f9c8:	ldr	r0, [pc, #2288]	; 102c0 <bt_compidtostr@@Base+0x5e94>
    f9cc:	add	r0, pc, r0
    f9d0:	bx	lr
    f9d4:	ldr	r0, [pc, #2280]	; 102c4 <bt_compidtostr@@Base+0x5e98>
    f9d8:	add	r0, pc, r0
    f9dc:	bx	lr
    f9e0:	ldr	r0, [pc, #2272]	; 102c8 <bt_compidtostr@@Base+0x5e9c>
    f9e4:	add	r0, pc, r0
    f9e8:	bx	lr
    f9ec:	ldr	r0, [pc, #2264]	; 102cc <bt_compidtostr@@Base+0x5ea0>
    f9f0:	add	r0, pc, r0
    f9f4:	bx	lr
    f9f8:	ldr	r0, [pc, #2256]	; 102d0 <bt_compidtostr@@Base+0x5ea4>
    f9fc:	add	r0, pc, r0
    fa00:	bx	lr
    fa04:	ldr	r0, [pc, #2248]	; 102d4 <bt_compidtostr@@Base+0x5ea8>
    fa08:	add	r0, pc, r0
    fa0c:	bx	lr
    fa10:	ldr	r0, [pc, #2240]	; 102d8 <bt_compidtostr@@Base+0x5eac>
    fa14:	add	r0, pc, r0
    fa18:	bx	lr
    fa1c:	ldr	r0, [pc, #2232]	; 102dc <bt_compidtostr@@Base+0x5eb0>
    fa20:	add	r0, pc, r0
    fa24:	bx	lr
    fa28:	ldr	r0, [pc, #2224]	; 102e0 <bt_compidtostr@@Base+0x5eb4>
    fa2c:	add	r0, pc, r0
    fa30:	bx	lr
    fa34:	ldr	r0, [pc, #2216]	; 102e4 <bt_compidtostr@@Base+0x5eb8>
    fa38:	add	r0, pc, r0
    fa3c:	bx	lr
    fa40:	ldr	r0, [pc, #2208]	; 102e8 <bt_compidtostr@@Base+0x5ebc>
    fa44:	add	r0, pc, r0
    fa48:	bx	lr
    fa4c:	ldr	r0, [pc, #2200]	; 102ec <bt_compidtostr@@Base+0x5ec0>
    fa50:	add	r0, pc, r0
    fa54:	bx	lr
    fa58:	ldr	r0, [pc, #2192]	; 102f0 <bt_compidtostr@@Base+0x5ec4>
    fa5c:	add	r0, pc, r0
    fa60:	bx	lr
    fa64:	ldr	r0, [pc, #2184]	; 102f4 <bt_compidtostr@@Base+0x5ec8>
    fa68:	add	r0, pc, r0
    fa6c:	bx	lr
    fa70:	ldr	r0, [pc, #2176]	; 102f8 <bt_compidtostr@@Base+0x5ecc>
    fa74:	add	r0, pc, r0
    fa78:	bx	lr
    fa7c:	ldr	r0, [pc, #2168]	; 102fc <bt_compidtostr@@Base+0x5ed0>
    fa80:	add	r0, pc, r0
    fa84:	bx	lr
    fa88:	ldr	r0, [pc, #2160]	; 10300 <bt_compidtostr@@Base+0x5ed4>
    fa8c:	add	r0, pc, r0
    fa90:	bx	lr
    fa94:	ldr	r0, [pc, #2152]	; 10304 <bt_compidtostr@@Base+0x5ed8>
    fa98:	add	r0, pc, r0
    fa9c:	bx	lr
    faa0:	ldr	r0, [pc, #2144]	; 10308 <bt_compidtostr@@Base+0x5edc>
    faa4:	add	r0, pc, r0
    faa8:	bx	lr
    faac:	ldr	r0, [pc, #2136]	; 1030c <bt_compidtostr@@Base+0x5ee0>
    fab0:	add	r0, pc, r0
    fab4:	bx	lr
    fab8:	ldr	r0, [pc, #2128]	; 10310 <bt_compidtostr@@Base+0x5ee4>
    fabc:	add	r0, pc, r0
    fac0:	bx	lr
    fac4:	ldr	r0, [pc, #2120]	; 10314 <bt_compidtostr@@Base+0x5ee8>
    fac8:	add	r0, pc, r0
    facc:	bx	lr
    fad0:	ldr	r0, [pc, #2112]	; 10318 <bt_compidtostr@@Base+0x5eec>
    fad4:	add	r0, pc, r0
    fad8:	bx	lr
    fadc:	ldr	r0, [pc, #2104]	; 1031c <bt_compidtostr@@Base+0x5ef0>
    fae0:	add	r0, pc, r0
    fae4:	bx	lr
    fae8:	ldr	r0, [pc, #2096]	; 10320 <bt_compidtostr@@Base+0x5ef4>
    faec:	add	r0, pc, r0
    faf0:	bx	lr
    faf4:	ldr	r0, [pc, #2088]	; 10324 <bt_compidtostr@@Base+0x5ef8>
    faf8:	add	r0, pc, r0
    fafc:	bx	lr
    fb00:	ldr	r0, [pc, #2080]	; 10328 <bt_compidtostr@@Base+0x5efc>
    fb04:	add	r0, pc, r0
    fb08:	bx	lr
    fb0c:	ldr	r0, [pc, #2072]	; 1032c <bt_compidtostr@@Base+0x5f00>
    fb10:	add	r0, pc, r0
    fb14:	bx	lr
    fb18:	ldr	r0, [pc, #2064]	; 10330 <bt_compidtostr@@Base+0x5f04>
    fb1c:	add	r0, pc, r0
    fb20:	bx	lr
    fb24:	ldr	r0, [pc, #2056]	; 10334 <bt_compidtostr@@Base+0x5f08>
    fb28:	add	r0, pc, r0
    fb2c:	bx	lr
    fb30:	ldr	r0, [pc, #2048]	; 10338 <bt_compidtostr@@Base+0x5f0c>
    fb34:	add	r0, pc, r0
    fb38:	bx	lr
    fb3c:	ldr	r0, [pc, #2040]	; 1033c <bt_compidtostr@@Base+0x5f10>
    fb40:	add	r0, pc, r0
    fb44:	bx	lr
    fb48:	ldr	r0, [pc, #2032]	; 10340 <bt_compidtostr@@Base+0x5f14>
    fb4c:	add	r0, pc, r0
    fb50:	bx	lr
    fb54:	ldr	r0, [pc, #2024]	; 10344 <bt_compidtostr@@Base+0x5f18>
    fb58:	add	r0, pc, r0
    fb5c:	bx	lr
    fb60:	ldr	r0, [pc, #2016]	; 10348 <bt_compidtostr@@Base+0x5f1c>
    fb64:	add	r0, pc, r0
    fb68:	bx	lr
    fb6c:	ldr	r0, [pc, #2008]	; 1034c <bt_compidtostr@@Base+0x5f20>
    fb70:	add	r0, pc, r0
    fb74:	bx	lr
    fb78:	ldr	r0, [pc, #2000]	; 10350 <bt_compidtostr@@Base+0x5f24>
    fb7c:	add	r0, pc, r0
    fb80:	bx	lr
    fb84:	ldr	r0, [pc, #1992]	; 10354 <bt_compidtostr@@Base+0x5f28>
    fb88:	add	r0, pc, r0
    fb8c:	bx	lr
    fb90:	ldr	r0, [pc, #1984]	; 10358 <bt_compidtostr@@Base+0x5f2c>
    fb94:	add	r0, pc, r0
    fb98:	bx	lr
    fb9c:	ldr	r0, [pc, #1976]	; 1035c <bt_compidtostr@@Base+0x5f30>
    fba0:	add	r0, pc, r0
    fba4:	bx	lr
    fba8:	ldr	r0, [pc, #1968]	; 10360 <bt_compidtostr@@Base+0x5f34>
    fbac:	add	r0, pc, r0
    fbb0:	bx	lr
    fbb4:	ldr	r0, [pc, #1960]	; 10364 <bt_compidtostr@@Base+0x5f38>
    fbb8:	add	r0, pc, r0
    fbbc:	bx	lr
    fbc0:	ldr	r0, [pc, #1952]	; 10368 <bt_compidtostr@@Base+0x5f3c>
    fbc4:	add	r0, pc, r0
    fbc8:	bx	lr
    fbcc:	ldr	r0, [pc, #1944]	; 1036c <bt_compidtostr@@Base+0x5f40>
    fbd0:	add	r0, pc, r0
    fbd4:	bx	lr
    fbd8:	ldr	r0, [pc, #1936]	; 10370 <bt_compidtostr@@Base+0x5f44>
    fbdc:	add	r0, pc, r0
    fbe0:	bx	lr
    fbe4:	ldr	r0, [pc, #1928]	; 10374 <bt_compidtostr@@Base+0x5f48>
    fbe8:	add	r0, pc, r0
    fbec:	bx	lr
    fbf0:	ldr	r0, [pc, #1920]	; 10378 <bt_compidtostr@@Base+0x5f4c>
    fbf4:	add	r0, pc, r0
    fbf8:	bx	lr
    fbfc:	ldr	r0, [pc, #1912]	; 1037c <bt_compidtostr@@Base+0x5f50>
    fc00:	add	r0, pc, r0
    fc04:	bx	lr
    fc08:	ldr	r0, [pc, #1904]	; 10380 <bt_compidtostr@@Base+0x5f54>
    fc0c:	add	r0, pc, r0
    fc10:	bx	lr
    fc14:	ldr	r0, [pc, #1896]	; 10384 <bt_compidtostr@@Base+0x5f58>
    fc18:	add	r0, pc, r0
    fc1c:	bx	lr
    fc20:	ldr	r0, [pc, #1888]	; 10388 <bt_compidtostr@@Base+0x5f5c>
    fc24:	add	r0, pc, r0
    fc28:	bx	lr
    fc2c:	ldr	r0, [pc, #1880]	; 1038c <bt_compidtostr@@Base+0x5f60>
    fc30:	add	r0, pc, r0
    fc34:	bx	lr
    fc38:	ldr	r0, [pc, #1872]	; 10390 <bt_compidtostr@@Base+0x5f64>
    fc3c:	add	r0, pc, r0
    fc40:	bx	lr
    fc44:	ldr	r0, [pc, #1864]	; 10394 <bt_compidtostr@@Base+0x5f68>
    fc48:	add	r0, pc, r0
    fc4c:	bx	lr
    fc50:	ldr	r0, [pc, #1856]	; 10398 <bt_compidtostr@@Base+0x5f6c>
    fc54:	add	r0, pc, r0
    fc58:	bx	lr
    fc5c:	ldr	r0, [pc, #1848]	; 1039c <bt_compidtostr@@Base+0x5f70>
    fc60:	add	r0, pc, r0
    fc64:	bx	lr
    fc68:	ldr	r0, [pc, #1840]	; 103a0 <bt_compidtostr@@Base+0x5f74>
    fc6c:	add	r0, pc, r0
    fc70:	bx	lr
    fc74:	ldr	r0, [pc, #1832]	; 103a4 <bt_compidtostr@@Base+0x5f78>
    fc78:	add	r0, pc, r0
    fc7c:	bx	lr
    fc80:	ldr	r0, [pc, #1824]	; 103a8 <bt_compidtostr@@Base+0x5f7c>
    fc84:	add	r0, pc, r0
    fc88:	bx	lr
    fc8c:	ldr	r0, [pc, #1816]	; 103ac <bt_compidtostr@@Base+0x5f80>
    fc90:	add	r0, pc, r0
    fc94:	bx	lr
    fc98:	ldr	r0, [pc, #1808]	; 103b0 <bt_compidtostr@@Base+0x5f84>
    fc9c:	add	r0, pc, r0
    fca0:	bx	lr
    fca4:	ldr	r0, [pc, #1800]	; 103b4 <bt_compidtostr@@Base+0x5f88>
    fca8:	add	r0, pc, r0
    fcac:	bx	lr
    fcb0:	ldr	r0, [pc, #1792]	; 103b8 <bt_compidtostr@@Base+0x5f8c>
    fcb4:	add	r0, pc, r0
    fcb8:	bx	lr
    fcbc:	ldr	r0, [pc, #1784]	; 103bc <bt_compidtostr@@Base+0x5f90>
    fcc0:	add	r0, pc, r0
    fcc4:	bx	lr
    fcc8:	ldr	r0, [pc, #1776]	; 103c0 <bt_compidtostr@@Base+0x5f94>
    fccc:	add	r0, pc, r0
    fcd0:	bx	lr
    fcd4:	ldr	r0, [pc, #1768]	; 103c4 <bt_compidtostr@@Base+0x5f98>
    fcd8:	add	r0, pc, r0
    fcdc:	bx	lr
    fce0:	ldr	r0, [pc, #1760]	; 103c8 <bt_compidtostr@@Base+0x5f9c>
    fce4:	add	r0, pc, r0
    fce8:	bx	lr
    fcec:	ldr	r0, [pc, #1752]	; 103cc <bt_compidtostr@@Base+0x5fa0>
    fcf0:	add	r0, pc, r0
    fcf4:	bx	lr
    fcf8:	ldr	r0, [pc, #1744]	; 103d0 <bt_compidtostr@@Base+0x5fa4>
    fcfc:	add	r0, pc, r0
    fd00:	bx	lr
    fd04:	ldr	r0, [pc, #1736]	; 103d4 <bt_compidtostr@@Base+0x5fa8>
    fd08:	add	r0, pc, r0
    fd0c:	bx	lr
    fd10:	ldr	r0, [pc, #1728]	; 103d8 <bt_compidtostr@@Base+0x5fac>
    fd14:	add	r0, pc, r0
    fd18:	bx	lr
    fd1c:	ldr	r0, [pc, #1720]	; 103dc <bt_compidtostr@@Base+0x5fb0>
    fd20:	add	r0, pc, r0
    fd24:	bx	lr
    fd28:	ldr	r0, [pc, #1712]	; 103e0 <bt_compidtostr@@Base+0x5fb4>
    fd2c:	add	r0, pc, r0
    fd30:	bx	lr
    fd34:	ldr	r0, [pc, #1704]	; 103e4 <bt_compidtostr@@Base+0x5fb8>
    fd38:	add	r0, pc, r0
    fd3c:	bx	lr
    fd40:	ldr	r0, [pc, #1696]	; 103e8 <bt_compidtostr@@Base+0x5fbc>
    fd44:	add	r0, pc, r0
    fd48:	bx	lr
    fd4c:	ldr	r0, [pc, #1688]	; 103ec <bt_compidtostr@@Base+0x5fc0>
    fd50:	add	r0, pc, r0
    fd54:	bx	lr
    fd58:	ldr	r0, [pc, #1680]	; 103f0 <bt_compidtostr@@Base+0x5fc4>
    fd5c:	add	r0, pc, r0
    fd60:	bx	lr
    fd64:	ldr	r0, [pc, #1672]	; 103f4 <bt_compidtostr@@Base+0x5fc8>
    fd68:	add	r0, pc, r0
    fd6c:	bx	lr
    fd70:	ldr	r0, [pc, #1664]	; 103f8 <bt_compidtostr@@Base+0x5fcc>
    fd74:	add	r0, pc, r0
    fd78:	bx	lr
    fd7c:	ldr	r0, [pc, #1656]	; 103fc <bt_compidtostr@@Base+0x5fd0>
    fd80:	add	r0, pc, r0
    fd84:	bx	lr
    fd88:	ldr	r0, [pc, #1648]	; 10400 <bt_compidtostr@@Base+0x5fd4>
    fd8c:	add	r0, pc, r0
    fd90:	bx	lr
    fd94:	ldr	r0, [pc, #1640]	; 10404 <bt_compidtostr@@Base+0x5fd8>
    fd98:	add	r0, pc, r0
    fd9c:	bx	lr
    fda0:	ldr	r0, [pc, #1632]	; 10408 <bt_compidtostr@@Base+0x5fdc>
    fda4:	add	r0, pc, r0
    fda8:	bx	lr
    fdac:	ldr	r0, [pc, #1624]	; 1040c <bt_compidtostr@@Base+0x5fe0>
    fdb0:	add	r0, pc, r0
    fdb4:	bx	lr
    fdb8:	ldr	r0, [pc, #1616]	; 10410 <bt_compidtostr@@Base+0x5fe4>
    fdbc:	add	r0, pc, r0
    fdc0:	bx	lr
    fdc4:	ldr	r0, [pc, #1608]	; 10414 <bt_compidtostr@@Base+0x5fe8>
    fdc8:	add	r0, pc, r0
    fdcc:	bx	lr
    fdd0:	ldr	r0, [pc, #1600]	; 10418 <bt_compidtostr@@Base+0x5fec>
    fdd4:	add	r0, pc, r0
    fdd8:	bx	lr
    fddc:	ldr	r0, [pc, #1592]	; 1041c <bt_compidtostr@@Base+0x5ff0>
    fde0:	add	r0, pc, r0
    fde4:	bx	lr
    fde8:	ldr	r0, [pc, #1584]	; 10420 <bt_compidtostr@@Base+0x5ff4>
    fdec:	add	r0, pc, r0
    fdf0:	bx	lr
    fdf4:	ldr	r0, [pc, #1576]	; 10424 <bt_compidtostr@@Base+0x5ff8>
    fdf8:	add	r0, pc, r0
    fdfc:	bx	lr
    fe00:	ldr	r0, [pc, #1568]	; 10428 <bt_compidtostr@@Base+0x5ffc>
    fe04:	add	r0, pc, r0
    fe08:	bx	lr
    fe0c:	ldr	r0, [pc, #1560]	; 1042c <bt_compidtostr@@Base+0x6000>
    fe10:	add	r0, pc, r0
    fe14:	bx	lr
    fe18:	ldr	r0, [pc, #1552]	; 10430 <bt_compidtostr@@Base+0x6004>
    fe1c:	add	r0, pc, r0
    fe20:	bx	lr
    fe24:	ldr	r0, [pc, #1544]	; 10434 <bt_compidtostr@@Base+0x6008>
    fe28:	add	r0, pc, r0
    fe2c:	bx	lr
    fe30:	ldr	r0, [pc, #1536]	; 10438 <bt_compidtostr@@Base+0x600c>
    fe34:	add	r0, pc, r0
    fe38:	bx	lr
    fe3c:	ldr	r0, [pc, #1528]	; 1043c <bt_compidtostr@@Base+0x6010>
    fe40:	add	r0, pc, r0
    fe44:	bx	lr
    fe48:	ldr	r0, [pc, #1520]	; 10440 <bt_compidtostr@@Base+0x6014>
    fe4c:	add	r0, pc, r0
    fe50:	bx	lr
    fe54:	ldr	r0, [pc, #1512]	; 10444 <bt_compidtostr@@Base+0x6018>
    fe58:	add	r0, pc, r0
    fe5c:	bx	lr
    fe60:	ldr	r0, [pc, #1504]	; 10448 <bt_compidtostr@@Base+0x601c>
    fe64:	add	r0, pc, r0
    fe68:	bx	lr
    fe6c:	ldr	r0, [pc, #1496]	; 1044c <bt_compidtostr@@Base+0x6020>
    fe70:	add	r0, pc, r0
    fe74:	bx	lr
    fe78:	ldr	r0, [pc, #1488]	; 10450 <bt_compidtostr@@Base+0x6024>
    fe7c:	add	r0, pc, r0
    fe80:	bx	lr
    fe84:	ldr	r0, [pc, #1480]	; 10454 <bt_compidtostr@@Base+0x6028>
    fe88:	add	r0, pc, r0
    fe8c:	bx	lr
    fe90:	ldr	r0, [pc, #1472]	; 10458 <bt_compidtostr@@Base+0x602c>
    fe94:	add	r0, pc, r0
    fe98:	bx	lr
    fe9c:	ldr	r0, [pc, #1464]	; 1045c <bt_compidtostr@@Base+0x6030>
    fea0:	add	r0, pc, r0
    fea4:	bx	lr
    fea8:	ldr	r0, [pc, #1456]	; 10460 <bt_compidtostr@@Base+0x6034>
    feac:	add	r0, pc, r0
    feb0:	bx	lr
    feb4:	ldr	r0, [pc, #1448]	; 10464 <bt_compidtostr@@Base+0x6038>
    feb8:	add	r0, pc, r0
    febc:	bx	lr
    fec0:	ldr	r0, [pc, #1440]	; 10468 <bt_compidtostr@@Base+0x603c>
    fec4:	add	r0, pc, r0
    fec8:	bx	lr
    fecc:	ldr	r0, [pc, #1432]	; 1046c <bt_compidtostr@@Base+0x6040>
    fed0:	add	r0, pc, r0
    fed4:	bx	lr
    fed8:	ldr	r0, [pc, #1424]	; 10470 <bt_compidtostr@@Base+0x6044>
    fedc:	add	r0, pc, r0
    fee0:	bx	lr
    fee4:	ldr	r0, [pc, #1416]	; 10474 <bt_compidtostr@@Base+0x6048>
    fee8:	add	r0, pc, r0
    feec:	bx	lr
    fef0:	ldr	r0, [pc, #1408]	; 10478 <bt_compidtostr@@Base+0x604c>
    fef4:	add	r0, pc, r0
    fef8:	bx	lr
    fefc:	ldr	r0, [pc, #1400]	; 1047c <bt_compidtostr@@Base+0x6050>
    ff00:	add	r0, pc, r0
    ff04:	bx	lr
    ff08:	ldr	r0, [pc, #1392]	; 10480 <bt_compidtostr@@Base+0x6054>
    ff0c:	add	r0, pc, r0
    ff10:	bx	lr
    ff14:	ldr	r0, [pc, #1384]	; 10484 <bt_compidtostr@@Base+0x6058>
    ff18:	add	r0, pc, r0
    ff1c:	bx	lr
    ff20:	ldr	r0, [pc, #1376]	; 10488 <bt_compidtostr@@Base+0x605c>
    ff24:	add	r0, pc, r0
    ff28:	bx	lr
    ff2c:	ldr	r0, [pc, #1368]	; 1048c <bt_compidtostr@@Base+0x6060>
    ff30:	add	r0, pc, r0
    ff34:	bx	lr
    ff38:	ldr	r0, [pc, #1360]	; 10490 <bt_compidtostr@@Base+0x6064>
    ff3c:	add	r0, pc, r0
    ff40:	bx	lr
    ff44:	ldr	r0, [pc, #1352]	; 10494 <bt_compidtostr@@Base+0x6068>
    ff48:	add	r0, pc, r0
    ff4c:	bx	lr
    ff50:	ldr	r0, [pc, #1344]	; 10498 <bt_compidtostr@@Base+0x606c>
    ff54:	add	r0, pc, r0
    ff58:	bx	lr
    ff5c:	ldr	r0, [pc, #1336]	; 1049c <bt_compidtostr@@Base+0x6070>
    ff60:	add	r0, pc, r0
    ff64:	bx	lr
    ff68:	ldr	r0, [pc, #1328]	; 104a0 <bt_compidtostr@@Base+0x6074>
    ff6c:	add	r0, pc, r0
    ff70:	bx	lr
    ff74:	ldr	r0, [pc, #1320]	; 104a4 <bt_compidtostr@@Base+0x6078>
    ff78:	add	r0, pc, r0
    ff7c:	bx	lr
    ff80:	ldr	r0, [pc, #1312]	; 104a8 <bt_compidtostr@@Base+0x607c>
    ff84:	add	r0, pc, r0
    ff88:	bx	lr
    ff8c:	ldr	r0, [pc, #1304]	; 104ac <bt_compidtostr@@Base+0x6080>
    ff90:	add	r0, pc, r0
    ff94:	bx	lr
    ff98:	ldr	r0, [pc, #1296]	; 104b0 <bt_compidtostr@@Base+0x6084>
    ff9c:	add	r0, pc, r0
    ffa0:	bx	lr
    ffa4:	ldr	r0, [pc, #1288]	; 104b4 <bt_compidtostr@@Base+0x6088>
    ffa8:	add	r0, pc, r0
    ffac:	bx	lr
    ffb0:	ldr	r0, [pc, #1280]	; 104b8 <bt_compidtostr@@Base+0x608c>
    ffb4:	add	r0, pc, r0
    ffb8:	bx	lr
    ffbc:	ldr	r0, [pc, #1272]	; 104bc <bt_compidtostr@@Base+0x6090>
    ffc0:	add	r0, pc, r0
    ffc4:	bx	lr
    ffc8:	ldr	r0, [pc, #1264]	; 104c0 <bt_compidtostr@@Base+0x6094>
    ffcc:	add	r0, pc, r0
    ffd0:	bx	lr
    ffd4:	ldr	r0, [pc, #1256]	; 104c4 <bt_compidtostr@@Base+0x6098>
    ffd8:	add	r0, pc, r0
    ffdc:	bx	lr
    ffe0:	ldr	r0, [pc, #1248]	; 104c8 <bt_compidtostr@@Base+0x609c>
    ffe4:	add	r0, pc, r0
    ffe8:	bx	lr
    ffec:	ldr	r0, [pc, #1240]	; 104cc <bt_compidtostr@@Base+0x60a0>
    fff0:	add	r0, pc, r0
    fff4:	bx	lr
    fff8:	ldr	r0, [pc, #1232]	; 104d0 <bt_compidtostr@@Base+0x60a4>
    fffc:	add	r0, pc, r0
   10000:	bx	lr
   10004:	ldr	r0, [pc, #1224]	; 104d4 <bt_compidtostr@@Base+0x60a8>
   10008:	add	r0, pc, r0
   1000c:	bx	lr
   10010:	ldr	r0, [pc, #1216]	; 104d8 <bt_compidtostr@@Base+0x60ac>
   10014:	add	r0, pc, r0
   10018:	bx	lr
   1001c:	ldr	r0, [pc, #1208]	; 104dc <bt_compidtostr@@Base+0x60b0>
   10020:	add	r0, pc, r0
   10024:	bx	lr
   10028:	ldr	r0, [pc, #1200]	; 104e0 <bt_compidtostr@@Base+0x60b4>
   1002c:	add	r0, pc, r0
   10030:	bx	lr
   10034:	ldr	r0, [pc, #1192]	; 104e4 <bt_compidtostr@@Base+0x60b8>
   10038:	add	r0, pc, r0
   1003c:	bx	lr
   10040:	ldr	r0, [pc, #1184]	; 104e8 <bt_compidtostr@@Base+0x60bc>
   10044:	add	r0, pc, r0
   10048:	bx	lr
   1004c:	ldr	r0, [pc, #1176]	; 104ec <bt_compidtostr@@Base+0x60c0>
   10050:	add	r0, pc, r0
   10054:	bx	lr
   10058:	ldr	r0, [pc, #1168]	; 104f0 <bt_compidtostr@@Base+0x60c4>
   1005c:	add	r0, pc, r0
   10060:	bx	lr
   10064:	ldr	r0, [pc, #1160]	; 104f4 <bt_compidtostr@@Base+0x60c8>
   10068:	add	r0, pc, r0
   1006c:	bx	lr
   10070:	ldr	r0, [pc, #1152]	; 104f8 <bt_compidtostr@@Base+0x60cc>
   10074:	add	r0, pc, r0
   10078:	bx	lr
   1007c:	ldr	r0, [pc, #1144]	; 104fc <bt_compidtostr@@Base+0x60d0>
   10080:	add	r0, pc, r0
   10084:	bx	lr
   10088:	ldr	r0, [pc, #1136]	; 10500 <bt_compidtostr@@Base+0x60d4>
   1008c:	add	r0, pc, r0
   10090:	bx	lr
   10094:	ldr	r0, [pc, #1128]	; 10504 <bt_compidtostr@@Base+0x60d8>
   10098:	add	r0, pc, r0
   1009c:	bx	lr
   100a0:	ldr	r0, [pc, #1120]	; 10508 <bt_compidtostr@@Base+0x60dc>
   100a4:	add	r0, pc, r0
   100a8:	bx	lr
   100ac:	ldr	r0, [pc, #1112]	; 1050c <bt_compidtostr@@Base+0x60e0>
   100b0:	add	r0, pc, r0
   100b4:	bx	lr
   100b8:	ldr	r0, [pc, #1104]	; 10510 <bt_compidtostr@@Base+0x60e4>
   100bc:	add	r0, pc, r0
   100c0:	bx	lr
   100c4:	ldr	r0, [pc, #1096]	; 10514 <bt_compidtostr@@Base+0x60e8>
   100c8:	add	r0, pc, r0
   100cc:	bx	lr
   100d0:	ldr	r0, [pc, #1088]	; 10518 <bt_compidtostr@@Base+0x60ec>
   100d4:	add	r0, pc, r0
   100d8:	bx	lr
   100dc:	ldr	r0, [pc, #1080]	; 1051c <bt_compidtostr@@Base+0x60f0>
   100e0:	add	r0, pc, r0
   100e4:	bx	lr
   100e8:	ldr	r0, [pc, #1072]	; 10520 <bt_compidtostr@@Base+0x60f4>
   100ec:	add	r0, pc, r0
   100f0:	bx	lr
   100f4:	ldr	r0, [pc, #1064]	; 10524 <bt_compidtostr@@Base+0x60f8>
   100f8:	add	r0, pc, r0
   100fc:	bx	lr
   10100:	ldr	r0, [pc, #1056]	; 10528 <bt_compidtostr@@Base+0x60fc>
   10104:	add	r0, pc, r0
   10108:	bx	lr
   1010c:	ldr	r0, [pc, #1048]	; 1052c <bt_compidtostr@@Base+0x6100>
   10110:	add	r0, pc, r0
   10114:	bx	lr
   10118:	ldr	r0, [pc, #1040]	; 10530 <bt_compidtostr@@Base+0x6104>
   1011c:	add	r0, pc, r0
   10120:	bx	lr
   10124:	ldr	r0, [pc, #1032]	; 10534 <bt_compidtostr@@Base+0x6108>
   10128:	add	r0, pc, r0
   1012c:	bx	lr
   10130:	ldr	r0, [pc, #1024]	; 10538 <bt_compidtostr@@Base+0x610c>
   10134:	add	r0, pc, r0
   10138:	bx	lr
   1013c:	ldr	r0, [pc, #1016]	; 1053c <bt_compidtostr@@Base+0x6110>
   10140:	add	r0, pc, r0
   10144:	bx	lr
   10148:	ldr	r0, [pc, #1008]	; 10540 <bt_compidtostr@@Base+0x6114>
   1014c:	add	r0, pc, r0
   10150:	bx	lr
   10154:	ldr	r0, [pc, #1000]	; 10544 <bt_compidtostr@@Base+0x6118>
   10158:	add	r0, pc, r0
   1015c:	bx	lr
   10160:	ldr	r0, [pc, #992]	; 10548 <bt_compidtostr@@Base+0x611c>
   10164:	add	r0, pc, r0
   10168:	bx	lr
   1016c:	ldr	r0, [pc, #984]	; 1054c <bt_compidtostr@@Base+0x6120>
   10170:	add	r0, pc, r0
   10174:	bx	lr
   10178:	ldr	r0, [pc, #976]	; 10550 <bt_compidtostr@@Base+0x6124>
   1017c:	add	r0, pc, r0
   10180:	bx	lr
   10184:	ldr	r0, [pc, #968]	; 10554 <bt_compidtostr@@Base+0x6128>
   10188:	add	r0, pc, r0
   1018c:	bx	lr
   10190:	ldr	r0, [pc, #960]	; 10558 <bt_compidtostr@@Base+0x612c>
   10194:	add	r0, pc, r0
   10198:	bx	lr
   1019c:	ldr	r0, [pc, #952]	; 1055c <bt_compidtostr@@Base+0x6130>
   101a0:	add	r0, pc, r0
   101a4:	bx	lr
   101a8:	ldr	r0, [pc, #944]	; 10560 <bt_compidtostr@@Base+0x6134>
   101ac:	add	r0, pc, r0
   101b0:	bx	lr
   101b4:	ldr	r0, [pc, #936]	; 10564 <bt_compidtostr@@Base+0x6138>
   101b8:	add	r0, pc, r0
   101bc:	bx	lr
   101c0:	ldr	r0, [pc, #928]	; 10568 <bt_compidtostr@@Base+0x613c>
   101c4:	add	r0, pc, r0
   101c8:	bx	lr
   101cc:	ldr	r0, [pc, #920]	; 1056c <bt_compidtostr@@Base+0x6140>
   101d0:	add	r0, pc, r0
   101d4:	bx	lr
   101d8:	ldr	r0, [pc, #912]	; 10570 <bt_compidtostr@@Base+0x6144>
   101dc:	add	r0, pc, r0
   101e0:	bx	lr
   101e4:	ldr	r0, [pc, #904]	; 10574 <bt_compidtostr@@Base+0x6148>
   101e8:	add	r0, pc, r0
   101ec:	bx	lr
   101f0:	ldr	r0, [pc, #896]	; 10578 <bt_compidtostr@@Base+0x614c>
   101f4:	add	r0, pc, r0
   101f8:	bx	lr
   101fc:	ldr	r0, [pc, #888]	; 1057c <bt_compidtostr@@Base+0x6150>
   10200:	add	r0, pc, r0
   10204:	bx	lr
   10208:	ldr	r0, [pc, #880]	; 10580 <bt_compidtostr@@Base+0x6154>
   1020c:	add	r0, pc, r0
   10210:	bx	lr
   10214:	ldr	r0, [pc, #872]	; 10584 <bt_compidtostr@@Base+0x6158>
   10218:	add	r0, pc, r0
   1021c:	bx	lr
   10220:	ldr	r0, [pc, #864]	; 10588 <bt_compidtostr@@Base+0x615c>
   10224:	add	r0, pc, r0
   10228:	bx	lr
   1022c:	ldr	r0, [pc, #856]	; 1058c <bt_compidtostr@@Base+0x6160>
   10230:	add	r0, pc, r0
   10234:	bx	lr
   10238:	ldr	r0, [pc, #848]	; 10590 <bt_compidtostr@@Base+0x6164>
   1023c:	add	r0, pc, r0
   10240:	bx	lr
   10244:	ldr	r0, [pc, #840]	; 10594 <bt_compidtostr@@Base+0x6168>
   10248:	add	r0, pc, r0
   1024c:	bx	lr
   10250:	ldr	r0, [pc, #832]	; 10598 <bt_compidtostr@@Base+0x616c>
   10254:	add	r0, pc, r0
   10258:	bx	lr
   1025c:	ldr	r0, [pc, #824]	; 1059c <bt_compidtostr@@Base+0x6170>
   10260:	add	r0, pc, r0
   10264:	bx	lr
   10268:	ldr	r0, [pc, #816]	; 105a0 <bt_compidtostr@@Base+0x6174>
   1026c:	add	r0, pc, r0
   10270:	bx	lr
   10274:	ldr	r0, [pc, #808]	; 105a4 <bt_compidtostr@@Base+0x6178>
   10278:	add	r0, pc, r0
   1027c:	bx	lr
   10280:	ldr	r0, [pc, #800]	; 105a8 <bt_compidtostr@@Base+0x617c>
   10284:	add	r0, pc, r0
   10288:	bx	lr
   1028c:	ldr	r0, [pc, #792]	; 105ac <bt_compidtostr@@Base+0x6180>
   10290:	add	r0, pc, r0
   10294:	bx	lr
   10298:	ldr	r0, [pc, #784]	; 105b0 <bt_compidtostr@@Base+0x6184>
   1029c:	add	r0, pc, r0
   102a0:	bx	lr
   102a4:	ldr	r0, [pc, #776]	; 105b4 <bt_compidtostr@@Base+0x6188>
   102a8:	add	r0, pc, r0
   102ac:	bx	lr
   102b0:	andeq	r8, r0, r4, ror #18
   102b4:	andeq	r8, r0, r4, ror #18
   102b8:	andeq	sl, r0, r8, lsr r7
   102bc:	strdeq	r6, [r0], -r0
   102c0:	andeq	r9, r0, r8, lsl #27
   102c4:	ldrdeq	r7, [r0], -r0
   102c8:	andeq	r7, r0, ip, ror #4
   102cc:	andeq	r7, r0, r0, lsl #5
   102d0:	andeq	r9, r0, ip, ror r7
   102d4:	andeq	r9, r0, ip, lsl #15
   102d8:	andeq	r9, r0, r4, lsl ip
   102dc:	andeq	r9, r0, r4, lsl ip
   102e0:	andeq	r9, r0, r0, lsr #6
   102e4:	andeq	r9, r0, r8, lsr #6
   102e8:	muleq	r0, r0, r6
   102ec:	muleq	r0, r4, r6
   102f0:	andeq	r6, r0, r0, lsr #19
   102f4:	andeq	r6, r0, r8, lsr #19
   102f8:	muleq	r0, ip, r7
   102fc:	andeq	r7, r0, r0, lsr r8
   10300:	andeq	r7, r0, r8, lsr sp
   10304:	andeq	r5, r0, r0, asr ip
   10308:	andeq	r5, r0, r0, lsr #22
   1030c:	andeq	r5, r0, r4, lsr fp
   10310:	andeq	r7, r0, ip, ror #17
   10314:	andeq	r7, r0, r8, ror #17
   10318:	andeq	r7, r0, r8, asr #13
   1031c:	ldrdeq	r7, [r0], -r0
   10320:	muleq	r0, r4, ip
   10324:	muleq	r0, r8, ip
   10328:	andeq	r7, r0, r0, lsl #23
   1032c:	andeq	r7, r0, r8, lsl #23
   10330:	andeq	r6, r0, r4, asr lr
   10334:	andeq	r6, r0, r0, ror #28
   10338:	andeq	r6, r0, r8, lsl #26
   1033c:	strdeq	sl, [r0], -r0
   10340:	andeq	r9, r0, r8, asr #1
   10344:	andeq	r9, r0, r0, ror #12
   10348:	andeq	r9, r0, r4, lsr r5
   1034c:	andeq	r9, r0, ip, lsr r5
   10350:	andeq	sl, r0, r8, ror #20
   10354:	andeq	sl, r0, ip, ror #20
   10358:	andeq	sl, r0, r8, asr r4
   1035c:	andeq	sl, r0, ip, asr r4
   10360:	andeq	r8, r0, r4, lsr fp
   10364:	andeq	r8, r0, r8, asr #22
   10368:	andeq	r5, r0, r0, lsl #31
   1036c:	andeq	r5, r0, r0, lsr #31
   10370:	andeq	r9, r0, r8, ror ip
   10374:	andeq	r9, r0, ip, ror ip
   10378:	andeq	r6, r0, r0, lsr r5
   1037c:	andeq	r6, r0, r4, asr #10
   10380:	andeq	r9, r0, r0, asr #16
   10384:	andeq	r9, r0, ip, asr #16
   10388:	andeq	r6, r0, r4, lsr #22
   1038c:	andeq	r6, r0, r4, lsr #22
   10390:	andeq	r8, r0, r4, lsr r0
   10394:	andeq	r8, r0, r8, lsr r0
   10398:	andeq	r9, r0, r4, lsl #29
   1039c:	muleq	r0, r4, lr
   103a0:	andeq	r7, r0, r8, lsl #2
   103a4:	andeq	r7, r0, r4, lsl r1
   103a8:			; <UNDEFINED> instruction: 0x00008eb8
   103ac:			; <UNDEFINED> instruction: 0x00008eb8
   103b0:	andeq	r7, r0, ip, lsr #24
   103b4:	andeq	r7, r0, r4, lsr ip
   103b8:	andeq	r8, r0, ip, ror lr
   103bc:	andeq	r6, r0, r4, asr r4
   103c0:	andeq	r8, r0, r8, ror #12
   103c4:	andeq	r8, r0, r0, lsl #18
   103c8:	andeq	r7, r0, r8, lsl ip
   103cc:	muleq	r0, ip, lr
   103d0:	ldrdeq	r7, [r0], -r4
   103d4:	andeq	r7, r0, r4, lsl #9
   103d8:	andeq	r6, r0, r4, lsr #11
   103dc:	andeq	r7, r0, ip, lsr r9
   103e0:	andeq	r7, r0, r0, lsl #18
   103e4:	andeq	r7, r0, r4, lsl r9
   103e8:	andeq	sl, r0, r0, lsr #1
   103ec:	andeq	sl, r0, r0, lsr #1
   103f0:	andeq	r8, r0, ip, lsr #30
   103f4:	andeq	r8, r0, r4, lsr pc
   103f8:			; <UNDEFINED> instruction: 0x00005abc
   103fc:	andeq	r5, r0, r0, asr #21
   10400:	andeq	r9, r0, ip, asr ip
   10404:	andeq	r9, r0, r0, ror #24
   10408:	andeq	r7, r0, ip, asr #3
   1040c:	ldrdeq	r7, [r0], -r8
   10410:	andeq	r6, r0, r8, asr #20
   10414:	andeq	r6, r0, r8, asr #20
   10418:	andeq	sl, r0, r8, ror #8
   1041c:	andeq	sl, r0, ip, ror #8
   10420:	andeq	r7, r0, r8, lsr #25
   10424:			; <UNDEFINED> instruction: 0x00007cb0
   10428:	andeq	r8, r0, r4, lsr #1
   1042c:	strheq	r8, [r0], -r8	; <UNPREDICTABLE>
   10430:			; <UNDEFINED> instruction: 0x000083b4
   10434:	andeq	r8, r0, r8, asr #7
   10438:	strdeq	r5, [r0], -r0
   1043c:	andeq	r5, r0, ip, ror #25
   10440:	strdeq	r6, [r0], -r4
   10444:	andeq	r6, r0, r4, ror #17
   10448:	andeq	r9, r0, ip, lsr #20
   1044c:	andeq	r9, r0, r4, lsr sl
   10450:	andeq	sl, r0, r0, rrx
   10454:	andeq	sl, r0, r8, rrx
   10458:	andeq	r7, r0, ip, lsl r6
   1045c:	andeq	r7, r0, r0, lsr #12
   10460:	strdeq	sl, [r0], -ip
   10464:	strdeq	sl, [r0], -r8
   10468:	andeq	r6, r0, r4, lsl #6
   1046c:	andeq	r6, r0, r0, lsl #6
   10470:	andeq	sl, r0, ip, ror #16
   10474:	andeq	sl, r0, r0, ror r8
   10478:	andeq	r7, r0, r0, lsr #20
   1047c:	andeq	r7, r0, r4, lsr #20
   10480:	andeq	r5, r0, r0, asr #21
   10484:	andeq	r5, r0, r4, ror #21
   10488:	andeq	r6, r0, r4, lsr r5
   1048c:	andeq	r6, r0, r4, asr #10
   10490:	andeq	r9, r0, r8, asr #7
   10494:	ldrdeq	r9, [r0], -r4
   10498:	andeq	r8, r0, r8, asr #28
   1049c:	andeq	r8, r0, r8, asr #28
   104a0:	andeq	r6, r0, r8, lsl #1
   104a4:	muleq	r0, ip, r0
   104a8:	andeq	r6, r0, ip, asr #21
   104ac:	ldrdeq	r6, [r0], -r8
   104b0:	andeq	r5, r0, r8, asr r8
   104b4:	andeq	r5, r0, r4, ror #16
   104b8:	muleq	r0, ip, lr
   104bc:	andeq	r5, r0, r8, lsr #29
   104c0:	andeq	r8, r0, r4, asr #10
   104c4:	andeq	r8, r0, r4, asr #10
   104c8:			; <UNDEFINED> instruction: 0x0000a7b0
   104cc:			; <UNDEFINED> instruction: 0x0000a7b8
   104d0:	andeq	r9, r0, r8, lsr #26
   104d4:	andeq	r9, r0, r8, lsr #26
   104d8:	muleq	r0, r8, r9
   104dc:	andeq	r6, r0, r0, lsr #19
   104e0:	ldrdeq	r6, [r0], -ip
   104e4:	andeq	r6, r0, r4, ror #11
   104e8:	muleq	r0, ip, r8
   104ec:	andeq	r5, r0, r4, lsr #17
   104f0:	andeq	r8, r0, r4, lsr lr
   104f4:	andeq	r8, r0, ip, lsr lr
   104f8:	muleq	r0, r8, r3
   104fc:	andeq	r7, r0, r0, asr #7
   10500:	muleq	r0, ip, lr
   10504:			; <UNDEFINED> instruction: 0x00008eb0
   10508:			; <UNDEFINED> instruction: 0x000074b4
   1050c:			; <UNDEFINED> instruction: 0x000074bc
   10510:	ldrdeq	r6, [r0], -ip
   10514:	ldrdeq	r6, [r0], -ip
   10518:	andeq	sl, r0, r4, lsr r4
   1051c:	andeq	sl, r0, r4, lsr r4
   10520:	andeq	r8, r0, r4, lsl #22
   10524:	andeq	r8, r0, r0, lsl #22
   10528:	strdeq	sl, [r0], -r8
   1052c:	strdeq	sl, [r0], -r4
   10530:	andeq	r8, r0, r4, asr #6
   10534:	andeq	r8, r0, r0, ror #6
   10538:	andeq	r6, r0, r8, lsr #27
   1053c:	andeq	r6, r0, r8, lsr #27
   10540:	ldrdeq	r8, [r0], -r4
   10544:	andeq	r8, r0, r4, lsl #18
   10548:	andeq	r9, r0, r4, asr #15
   1054c:	andeq	r9, r0, r8, asr #15
   10550:	andeq	r5, r0, r4, ror ip
   10554:	andeq	r5, r0, ip, lsl #25
   10558:	andeq	r7, r0, r8, ror ip
   1055c:	andeq	r7, r0, ip, ror ip
   10560:	andeq	sl, r0, r0, lsl #15
   10564:	andeq	sl, r0, ip, lsl #15
   10568:	andeq	r8, r0, r8, lsr r2
   1056c:	andeq	r8, r0, ip, asr #4
   10570:	andeq	r5, r0, r8, asr #14
   10574:	andeq	r5, r0, ip, asr r7
   10578:			; <UNDEFINED> instruction: 0x000086b0
   1057c:			; <UNDEFINED> instruction: 0x000086b8
   10580:	andeq	sl, r0, r8, ror #3
   10584:	andeq	sl, r0, ip, ror #3
   10588:	andeq	r8, r0, ip, lsl ip
   1058c:	andeq	r8, r0, ip, lsl ip
   10590:	andeq	r8, r0, r4, lsr r9
   10594:	andeq	r8, r0, r8, lsr r9
   10598:	andeq	r9, r0, r4, lsl r1
   1059c:	andeq	r9, r0, ip, lsl r1
   105a0:	andeq	r9, r0, r8, lsr #9
   105a4:			; <UNDEFINED> instruction: 0x000094b4
   105a8:	strdeq	r7, [r0], -r4
   105ac:	strdeq	r7, [r0], -ip
   105b0:	muleq	r0, ip, r0
   105b4:	strheq	sl, [r0], -ip

000105b8 <btbb_pcap_open@@Base>:
   105b8:	push	{r4, lr}
   105bc:	sub	sp, sp, #24
   105c0:	ldr	lr, [pc, #80]	; 10618 <btbb_pcap_open@@Base+0x60>
   105c4:	str	r1, [sp, #20]
   105c8:	ldr	r1, [pc, #76]	; 1061c <btbb_pcap_open@@Base+0x64>
   105cc:	ldr	ip, [pc, #76]	; 10620 <btbb_pcap_open@@Base+0x68>
   105d0:	mov	r3, #0
   105d4:	add	r1, pc, r1
   105d8:	str	r2, [sp, #16]
   105dc:	str	lr, [sp]
   105e0:	str	ip, [sp, #4]
   105e4:	str	r3, [sp, #8]
   105e8:	str	r3, [sp, #12]
   105ec:	bl	2124 <fopen@plt>
   105f0:	subs	r4, r0, #0
   105f4:	beq	1060c <btbb_pcap_open@@Base+0x54>
   105f8:	mov	r3, r4
   105fc:	mov	r2, #1
   10600:	mov	r1, #24
   10604:	mov	r0, sp
   10608:	bl	2274 <fwrite@plt>
   1060c:	mov	r0, r4
   10610:	add	sp, sp, #24
   10614:	pop	{r4, pc}
   10618:			; <UNDEFINED> instruction: 0xa1b23c4d
   1061c:	andeq	sl, r0, ip, lsr r4
   10620:	andeq	r0, r4, r2

00010624 <btbb_pcap_dump@@Base>:
   10624:	push	{r4, r5, r6, lr}
   10628:	mov	r4, r1
   1062c:	mov	r5, r0
   10630:	mov	r6, r2
   10634:	mov	r3, r0
   10638:	mov	r2, #1
   1063c:	mov	r0, r1
   10640:	mov	r1, #16
   10644:	bl	2274 <fwrite@plt>
   10648:	ldrb	r0, [r4, #9]
   1064c:	ldrb	r2, [r4, #10]
   10650:	ldrb	r3, [r4, #8]
   10654:	ldrb	r1, [r4, #11]
   10658:	orr	r3, r3, r0, lsl #8
   1065c:	orr	r3, r3, r2, lsl #16
   10660:	mov	r0, r6
   10664:	orr	r1, r3, r1, lsl #24
   10668:	mov	r2, #1
   1066c:	mov	r3, r5
   10670:	bl	2274 <fwrite@plt>
   10674:	mov	r0, r5
   10678:	pop	{r4, r5, r6, lr}
   1067c:	b	213c <fflush@plt>

00010680 <btbb_pcap_append_packet@@Base>:
   10680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10684:	add	fp, sp, #32
   10688:	cmp	r0, #0
   1068c:	sub	sp, sp, #484	; 0x1e4
   10690:	ldrsb	r9, [fp, #4]
   10694:	ldrsb	sl, [fp, #8]
   10698:	ldrb	r7, [fp, #16]
   1069c:	beq	10850 <btbb_pcap_append_packet@@Base+0x1d0>
   106a0:	ldr	r1, [r0]
   106a4:	cmp	r1, #0
   106a8:	beq	10850 <btbb_pcap_append_packet@@Base+0x1d0>
   106ac:	sub	r1, fp, #484	; 0x1e4
   106b0:	cmp	sl, r9
   106b4:	strd	r2, [r1]
   106b8:	ldr	r1, [fp, #12]
   106bc:	movge	r2, #3
   106c0:	movlt	r2, #7
   106c4:	movge	r3, #19
   106c8:	movlt	r3, #23
   106cc:	cmn	r1, #1
   106d0:	moveq	r3, r2
   106d4:	cmp	r7, #255	; 0xff
   106d8:	movne	r2, #128	; 0x80
   106dc:	moveq	r2, #0
   106e0:	orr	r3, r2, r3
   106e4:	str	r0, [fp, #-516]	; 0xfffffdfc
   106e8:	ldr	r0, [fp, #20]
   106ec:	str	r3, [fp, #-488]	; 0xfffffe18
   106f0:	bl	2340 <btbb_packet_get_payload_length@plt>
   106f4:	str	sp, [fp, #-512]	; 0xfffffe00
   106f8:	sub	r5, fp, #476	; 0x1dc
   106fc:	add	r3, r0, #7
   10700:	bic	r3, r3, #7
   10704:	sub	sp, sp, r3
   10708:	mov	r1, sp
   1070c:	mov	r4, r0
   10710:	ldr	r0, [fp, #20]
   10714:	bl	210c <btbb_get_payload_packed@plt>
   10718:	cmp	r4, #400	; 0x190
   1071c:	ldr	r0, [fp, #20]
   10720:	movcs	r4, #400	; 0x190
   10724:	bl	2490 <btbb_packet_get_channel@plt>
   10728:	add	r8, r4, #22
   1072c:	str	r0, [fp, #-500]	; 0xfffffe0c
   10730:	ldr	r0, [fp, #20]
   10734:	bl	2178 <btbb_packet_get_ac_errors@plt>
   10738:	str	r0, [fp, #-504]	; 0xfffffe08
   1073c:	ldr	r0, [fp, #20]
   10740:	bl	23b8 <btbb_packet_get_transport@plt>
   10744:	str	r0, [fp, #-508]	; 0xfffffe04
   10748:	ldr	r0, [fp, #20]
   1074c:	bl	216c <btbb_packet_get_modulation@plt>
   10750:	mov	r6, r0
   10754:	ldr	r0, [fp, #20]
   10758:	bl	2418 <btbb_packet_get_lap@plt>
   1075c:	str	r0, [fp, #-492]	; 0xfffffe14
   10760:	ldr	r0, [fp, #20]
   10764:	bl	2370 <btbb_packet_get_header_packed@plt>
   10768:	sub	r1, fp, #484	; 0x1e4
   1076c:	add	r3, pc, #228	; 0xe4
   10770:	ldrd	r2, [r3]
   10774:	str	r0, [fp, #-496]	; 0xfffffe10
   10778:	ldrd	r0, [r1]
   1077c:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   10780:	sub	r1, fp, #484	; 0x1e4
   10784:	add	r3, pc, #204	; 0xcc
   10788:	ldrd	r2, [r3]
   1078c:	str	r0, [fp, #-476]	; 0xfffffe24
   10790:	ldrd	r0, [r1]
   10794:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   10798:	ldr	r1, [fp, #12]
   1079c:	cmp	r4, #0
   107a0:	bic	r3, r1, #-16777216	; 0xff000000
   107a4:	ldr	r1, [fp, #-508]	; 0xfffffe04
   107a8:	orr	r7, r3, r7, lsl #24
   107ac:	mov	r3, #0
   107b0:	orr	r6, r6, r1, lsl #4
   107b4:	ldrb	r1, [fp, #-500]	; 0xfffffe0c
   107b8:	strb	r6, [fp, #-456]	; 0xfffffe38
   107bc:	ldr	r6, [fp, #-488]	; 0xfffffe18
   107c0:	strb	r1, [fp, #-460]	; 0xfffffe34
   107c4:	ldrb	r1, [fp, #-504]	; 0xfffffe08
   107c8:	str	r7, [fp, #-448]	; 0xfffffe40
   107cc:	strb	r9, [fp, #-459]	; 0xfffffe35
   107d0:	strb	r1, [fp, #-457]	; 0xfffffe37
   107d4:	ldr	r1, [fp, #-492]	; 0xfffffe14
   107d8:	strb	sl, [fp, #-458]	; 0xfffffe36
   107dc:	str	r1, [fp, #-452]	; 0xfffffe3c
   107e0:	ldr	r1, [fp, #-496]	; 0xfffffe10
   107e4:	strh	r6, [r5, #36]	; 0x24
   107e8:	str	r1, [fp, #-444]	; 0xfffffe44
   107ec:	str	r8, [fp, #-468]	; 0xfffffe2c
   107f0:	str	r8, [fp, #-464]	; 0xfffffe30
   107f4:	strh	r3, [r5, #22]
   107f8:	strb	r3, [fp, #-455]	; 0xfffffe39
   107fc:	str	r2, [fp, #-472]	; 0xfffffe28
   10800:	bne	10834 <btbb_pcap_append_packet@@Base+0x1b4>
   10804:	sub	r3, fp, #488	; 0x1e8
   10808:	ldrh	r3, [r3]
   1080c:	strh	r3, [r5, #36]	; 0x24
   10810:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   10814:	mov	r1, r5
   10818:	sub	r2, fp, #460	; 0x1cc
   1081c:	ldr	r0, [r3]
   10820:	bl	2304 <btbb_pcap_dump@plt>
   10824:	ldr	sp, [fp, #-512]	; 0xfffffe00
   10828:	mov	r0, #0
   1082c:	sub	sp, fp, #32
   10830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10834:	mov	r2, r4
   10838:	mov	r1, sp
   1083c:	add	r0, r5, #38	; 0x26
   10840:	bl	2184 <memcpy@plt>
   10844:	orr	r3, r6, #32
   10848:	strh	r3, [r5, #36]	; 0x24
   1084c:	b	10810 <btbb_pcap_append_packet@@Base+0x190>
   10850:	mvn	r0, #0
   10854:	b	1082c <btbb_pcap_append_packet@@Base+0x1ac>
   10858:	blcc	fe6c3060 <perm_table@@Base+0xfe697e9c>
   1085c:	andeq	r0, r0, r0

00010860 <btbb_pcap_close@@Base>:
   10860:	push	{r4, lr}
   10864:	subs	r4, r0, #0
   10868:	beq	1088c <btbb_pcap_close@@Base+0x2c>
   1086c:	ldr	r0, [r4]
   10870:	cmp	r0, #0
   10874:	beq	1087c <btbb_pcap_close@@Base+0x1c>
   10878:	bl	2460 <fclose@plt>
   1087c:	mov	r0, r4
   10880:	bl	2160 <free@plt>
   10884:	mov	r0, #0
   10888:	pop	{r4, pc}
   1088c:	mvn	r0, #0
   10890:	pop	{r4, pc}

00010894 <btbb_pcap_create_file@@Base>:
   10894:	push	{r4, r5, r6, lr}
   10898:	mov	r5, r0
   1089c:	mov	r6, r1
   108a0:	mov	r0, #4
   108a4:	mov	r1, #1
   108a8:	bl	20c4 <calloc@plt>
   108ac:	subs	r4, r0, #0
   108b0:	beq	108e0 <btbb_pcap_create_file@@Base+0x4c>
   108b4:	mov	r0, r5
   108b8:	mov	r2, #400	; 0x190
   108bc:	mov	r1, #255	; 0xff
   108c0:	bl	21f0 <btbb_pcap_open@plt>
   108c4:	cmp	r0, #0
   108c8:	str	r0, [r4]
   108cc:	beq	108f4 <btbb_pcap_create_file@@Base+0x60>
   108d0:	mov	r5, #0
   108d4:	str	r4, [r6]
   108d8:	mov	r0, r5
   108dc:	pop	{r4, r5, r6, pc}
   108e0:	mvn	r5, #2
   108e4:	mov	r0, r4
   108e8:	bl	228c <btbb_pcap_close@plt>
   108ec:	mov	r0, r5
   108f0:	pop	{r4, r5, r6, pc}
   108f4:	ldr	r0, [pc, #12]	; 10908 <btbb_pcap_create_file@@Base+0x74>
   108f8:	mvn	r5, #1
   108fc:	add	r0, pc, r0
   10900:	bl	2244 <perror@plt>
   10904:	b	108e4 <btbb_pcap_create_file@@Base+0x50>
   10908:	andeq	sl, r0, r8, lsl r1

0001090c <lell_pcap_append_packet@@Base>:
   1090c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10910:	sub	sp, sp, #308	; 0x134
   10914:	add	r1, sp, #344	; 0x158
   10918:	cmp	r0, #0
   1091c:	ldrsb	r9, [r1]
   10920:	add	r1, sp, #348	; 0x15c
   10924:	ldr	r4, [sp, #356]	; 0x164
   10928:	ldrsb	r8, [r1]
   1092c:	beq	10a1c <lell_pcap_append_packet@@Base+0x110>
   10930:	ldr	r1, [r0]
   10934:	cmp	r1, #0
   10938:	beq	10a1c <lell_pcap_append_packet@@Base+0x110>
   1093c:	ldr	r1, [r0, #4]
   10940:	cmp	r1, #256	; 0x100
   10944:	bne	10a1c <lell_pcap_append_packet@@Base+0x110>
   10948:	cmp	r8, r9
   1094c:	movge	r1, #35	; 0x23
   10950:	movlt	r1, #39	; 0x27
   10954:	str	r0, [sp, #8]
   10958:	mov	r0, r4
   1095c:	movge	r7, #51	; 0x33
   10960:	movlt	r7, #55	; 0x37
   10964:	strd	r2, [sp]
   10968:	str	r1, [sp, #12]
   1096c:	bl	2130 <lell_packet_is_data@plt>
   10970:	ldr	r6, [r4, #72]	; 0x48
   10974:	ldr	r1, [sp, #12]
   10978:	add	r5, r6, #9
   1097c:	add	r3, pc, #164	; 0xa4
   10980:	ldrd	r2, [r3]
   10984:	ldrb	fp, [r4, #69]	; 0x45
   10988:	ldrb	sl, [r4, #92]	; 0x5c
   1098c:	add	r6, r6, #19
   10990:	cmp	r0, #0
   10994:	movne	r7, r1
   10998:	cmp	r5, #255	; 0xff
   1099c:	ldrd	r0, [sp]
   109a0:	movcs	r5, #255	; 0xff
   109a4:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   109a8:	add	r3, pc, #120	; 0x78
   109ac:	ldrd	r2, [r3]
   109b0:	str	r0, [sp, #20]
   109b4:	ldrd	r0, [sp]
   109b8:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   109bc:	ldr	ip, [sp, #352]	; 0x160
   109c0:	add	r3, r5, #10
   109c4:	mov	r1, r4
   109c8:	add	r0, sp, #46	; 0x2e
   109cc:	str	ip, [sp, #40]	; 0x28
   109d0:	str	r3, [sp, #32]
   109d4:	str	r6, [sp, #28]
   109d8:	strb	r9, [sp, #37]	; 0x25
   109dc:	strb	r8, [sp, #38]	; 0x26
   109e0:	strh	r7, [sp, #44]	; 0x2c
   109e4:	strb	fp, [sp, #36]	; 0x24
   109e8:	strb	sl, [sp, #39]	; 0x27
   109ec:	add	r4, sp, #20
   109f0:	str	r2, [sp, #24]
   109f4:	mov	r2, r5
   109f8:	bl	2184 <memcpy@plt>
   109fc:	ldr	r3, [sp, #8]
   10a00:	mov	r1, r4
   10a04:	add	r2, sp, #36	; 0x24
   10a08:	ldr	r0, [r3]
   10a0c:	bl	2304 <btbb_pcap_dump@plt>
   10a10:	mov	r0, #0
   10a14:	add	sp, sp, #308	; 0x134
   10a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a1c:	mvn	r0, #0
   10a20:	add	sp, sp, #308	; 0x134
   10a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a28:	blcc	fe6c3230 <perm_table@@Base+0xfe69806c>
   10a2c:	andeq	r0, r0, r0

00010a30 <lell_pcap_append_ppi_packet@@Base>:
   10a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a34:	sub	sp, sp, #324	; 0x144
   10a38:	add	r1, sp, #364	; 0x16c
   10a3c:	subs	r5, r0, #0
   10a40:	ldrsb	r1, [r1]
   10a44:	ldrb	ip, [sp, #376]	; 0x178
   10a48:	ldrb	fp, [sp, #360]	; 0x168
   10a4c:	str	r1, [sp, #12]
   10a50:	add	r1, sp, #368	; 0x170
   10a54:	str	ip, [sp, #20]
   10a58:	ldrsb	sl, [r1]
   10a5c:	add	r1, sp, #372	; 0x174
   10a60:	ldr	r8, [sp, #380]	; 0x17c
   10a64:	ldrsb	r0, [r1]
   10a68:	str	r0, [sp, #16]
   10a6c:	beq	10b80 <lell_pcap_append_ppi_packet@@Base+0x150>
   10a70:	ldr	r1, [r5]
   10a74:	cmp	r1, #0
   10a78:	beq	10b80 <lell_pcap_append_ppi_packet@@Base+0x150>
   10a7c:	ldr	r1, [r5, #4]
   10a80:	cmp	r1, #192	; 0xc0
   10a84:	bne	10b80 <lell_pcap_append_ppi_packet@@Base+0x150>
   10a88:	mov	r0, r8
   10a8c:	strd	r2, [sp]
   10a90:	bl	2388 <lell_get_channel_k@plt>
   10a94:	ldr	r9, [r8, #72]	; 0x48
   10a98:	add	r3, pc, #240	; 0xf0
   10a9c:	ldrd	r2, [r3]
   10aa0:	add	r7, r9, #9
   10aa4:	cmp	r7, #255	; 0xff
   10aa8:	movcs	r7, #255	; 0xff
   10aac:	add	r9, r9, #33	; 0x21
   10ab0:	mov	r6, #0
   10ab4:	mov	r4, r0
   10ab8:	ldrd	r0, [sp]
   10abc:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   10ac0:	add	r3, pc, #200	; 0xc8
   10ac4:	ldrd	r2, [r3]
   10ac8:	add	r4, r4, #1200	; 0x4b0
   10acc:	add	r4, r4, #1
   10ad0:	lsl	r4, r4, #1
   10ad4:	uxth	r4, r4
   10ad8:	str	r0, [sp, #24]
   10adc:	ldrd	r0, [sp]
   10ae0:	bl	11ed4 <lell_pcapng_close@@Base+0x230>
   10ae4:	ldrb	r0, [sp, #16]
   10ae8:	strb	r4, [sp, #53]	; 0x35
   10aec:	str	r9, [sp, #36]	; 0x24
   10af0:	lsr	r4, r4, #8
   10af4:	ldrb	r9, [sp, #12]
   10af8:	ldr	lr, [r8, #76]	; 0x4c
   10afc:	ldrb	r3, [r5, #8]
   10b00:	strb	r4, [sp, #54]	; 0x36
   10b04:	mov	r1, r8
   10b08:	add	r4, r7, #24
   10b0c:	strb	sl, [sp, #60]	; 0x3c
   10b10:	mov	r8, #24
   10b14:	ldrb	sl, [sp, #20]
   10b18:	ldr	ip, [pc, #120]	; 10b98 <lell_pcap_append_ppi_packet@@Base+0x168>
   10b1c:	str	r4, [sp, #32]
   10b20:	add	r4, sp, r8
   10b24:	strb	r9, [sp, #61]	; 0x3d
   10b28:	strb	r0, [sp, #62]	; 0x3e
   10b2c:	mov	r9, #147	; 0x93
   10b30:	add	r0, sp, #64	; 0x40
   10b34:	strb	r3, [sp, #52]	; 0x34
   10b38:	str	ip, [sp, #48]	; 0x30
   10b3c:	str	lr, [sp, #56]	; 0x38
   10b40:	strb	fp, [sp, #55]	; 0x37
   10b44:	strb	sl, [sp, #63]	; 0x3f
   10b48:	strh	r8, [r4, #18]
   10b4c:	strb	r6, [sp, #40]	; 0x28
   10b50:	strb	r6, [sp, #41]	; 0x29
   10b54:	str	r9, [sp, #44]	; 0x2c
   10b58:	str	r2, [sp, #28]
   10b5c:	mov	r2, r7
   10b60:	bl	2184 <memcpy@plt>
   10b64:	ldr	r0, [r5]
   10b68:	mov	r1, r4
   10b6c:	add	r2, sp, #40	; 0x28
   10b70:	bl	2304 <btbb_pcap_dump@plt>
   10b74:	mov	r0, r6
   10b78:	add	sp, sp, #324	; 0x144
   10b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b80:	mvn	r0, #0
   10b84:	add	sp, sp, #324	; 0x144
   10b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b8c:	nop			; (mov r0, r0)
   10b90:	blcc	fe6c3398 <perm_table@@Base+0xfe6981d4>
   10b94:	andeq	r0, r0, r0
   10b98:	andeq	r7, ip, r6, lsr r5

00010b9c <lell_pcap_close@@Base>:
   10b9c:	push	{r4, lr}
   10ba0:	subs	r4, r0, #0
   10ba4:	beq	10bc8 <lell_pcap_close@@Base+0x2c>
   10ba8:	ldr	r0, [r4]
   10bac:	cmp	r0, #0
   10bb0:	beq	10bb8 <lell_pcap_close@@Base+0x1c>
   10bb4:	bl	2460 <fclose@plt>
   10bb8:	mov	r0, r4
   10bbc:	bl	2160 <free@plt>
   10bc0:	mov	r0, #0
   10bc4:	pop	{r4, pc}
   10bc8:	mvn	r0, #0
   10bcc:	pop	{r4, pc}

00010bd0 <lell_pcap_ppi_create_file@@Base>:
   10bd0:	push	{r4, r5, r6, r7, r8, lr}
   10bd4:	mov	r5, r0
   10bd8:	mov	r6, r1
   10bdc:	mov	r0, #12
   10be0:	mov	r1, #1
   10be4:	mov	r7, r2
   10be8:	bl	20c4 <calloc@plt>
   10bec:	subs	r4, r0, #0
   10bf0:	beq	10c40 <lell_pcap_ppi_create_file@@Base+0x70>
   10bf4:	mov	r0, r5
   10bf8:	mov	r2, #400	; 0x190
   10bfc:	mov	r1, #192	; 0xc0
   10c00:	bl	21f0 <btbb_pcap_open@plt>
   10c04:	cmp	r0, #0
   10c08:	str	r0, [r4]
   10c0c:	beq	10c2c <lell_pcap_ppi_create_file@@Base+0x5c>
   10c10:	mov	r3, #192	; 0xc0
   10c14:	mov	r5, #0
   10c18:	str	r4, [r7]
   10c1c:	strb	r6, [r4, #8]
   10c20:	str	r3, [r4, #4]
   10c24:	mov	r0, r5
   10c28:	pop	{r4, r5, r6, r7, r8, pc}
   10c2c:	mvn	r5, #1
   10c30:	mov	r0, r4
   10c34:	bl	21d8 <lell_pcap_close@plt>
   10c38:	mov	r0, r5
   10c3c:	pop	{r4, r5, r6, r7, r8, pc}
   10c40:	mvn	r5, #2
   10c44:	b	10c30 <lell_pcap_ppi_create_file@@Base+0x60>

00010c48 <lell_pcap_create_file@@Base>:
   10c48:	push	{r4, r5, r6, lr}
   10c4c:	mov	r5, r0
   10c50:	mov	r6, r1
   10c54:	mov	r0, #12
   10c58:	mov	r1, #1
   10c5c:	bl	20c4 <calloc@plt>
   10c60:	subs	r4, r0, #0
   10c64:	beq	10cb0 <lell_pcap_create_file@@Base+0x68>
   10c68:	mov	r0, r5
   10c6c:	mov	r2, #400	; 0x190
   10c70:	mov	r1, #256	; 0x100
   10c74:	bl	21f0 <btbb_pcap_open@plt>
   10c78:	cmp	r0, #0
   10c7c:	str	r0, [r4]
   10c80:	beq	10c9c <lell_pcap_create_file@@Base+0x54>
   10c84:	mov	r3, #256	; 0x100
   10c88:	mov	r5, #0
   10c8c:	str	r4, [r6]
   10c90:	str	r3, [r4, #4]
   10c94:	mov	r0, r5
   10c98:	pop	{r4, r5, r6, pc}
   10c9c:	mvn	r5, #1
   10ca0:	mov	r0, r4
   10ca4:	bl	21d8 <lell_pcap_close@plt>
   10ca8:	mov	r0, r5
   10cac:	pop	{r4, r5, r6, pc}
   10cb0:	mvn	r5, #2
   10cb4:	b	10ca0 <lell_pcap_create_file@@Base+0x58>

00010cb8 <pcapng_append_section_option@@Base>:
   10cb8:	cmp	r0, #0
   10cbc:	beq	10d54 <pcapng_append_section_option@@Base+0x9c>
   10cc0:	ldr	r3, [r0]
   10cc4:	cmn	r3, #1
   10cc8:	beq	10d54 <pcapng_append_section_option@@Base+0x9c>
   10ccc:	ldr	r3, [r0, #4]
   10cd0:	sub	r2, r3, #1
   10cd4:	cmn	r2, #3
   10cd8:	bls	10ce4 <pcapng_append_section_option@@Base+0x2c>
   10cdc:	mov	r0, #5
   10ce0:	bx	lr
   10ce4:	ldr	r2, [r0, #12]
   10ce8:	cmp	r2, #0
   10cec:	cmpne	r1, #0
   10cf0:	beq	10cdc <pcapng_append_section_option@@Base+0x24>
   10cf4:	push	{r4, r5, r6, lr}
   10cf8:	mov	r4, r0
   10cfc:	ldrb	lr, [r1, #3]
   10d00:	ldrb	r5, [r1, #2]
   10d04:	add	r0, r3, r2
   10d08:	orr	r5, r5, lr, lsl #8
   10d0c:	add	r2, r5, #4
   10d10:	bl	2184 <memcpy@plt>
   10d14:	ldr	r0, [r4, #12]
   10d18:	ldr	r2, [r4, #8]
   10d1c:	add	r3, r5, #7
   10d20:	ldr	r1, [pc, #52]	; 10d5c <pcapng_append_section_option@@Base+0xa4>
   10d24:	bic	r3, r3, #3
   10d28:	add	r3, r3, r0
   10d2c:	add	r1, pc, r1
   10d30:	sub	r2, r2, #12
   10d34:	sub	r2, r2, r3
   10d38:	ldr	ip, [r4, #4]
   10d3c:	strh	r2, [r1, #2]
   10d40:	ldr	r2, [r1]
   10d44:	str	r3, [r4, #12]
   10d48:	mov	r0, #0
   10d4c:	str	r2, [ip, r3]
   10d50:	pop	{r4, r5, r6, pc}
   10d54:	mov	r0, #1
   10d58:	bx	lr
   10d5c:	andeq	sl, r1, r4, ror r4

00010d60 <pcapng_append_interface_option@@Base>:
   10d60:	cmp	r0, #0
   10d64:	beq	10dfc <pcapng_append_interface_option@@Base+0x9c>
   10d68:	ldr	r3, [r0]
   10d6c:	cmn	r3, #1
   10d70:	beq	10dfc <pcapng_append_interface_option@@Base+0x9c>
   10d74:	ldr	r3, [r0, #16]
   10d78:	sub	r2, r3, #1
   10d7c:	cmn	r2, #3
   10d80:	bls	10d8c <pcapng_append_interface_option@@Base+0x2c>
   10d84:	mov	r0, #5
   10d88:	bx	lr
   10d8c:	ldr	r2, [r0, #24]
   10d90:	cmp	r2, #0
   10d94:	cmpne	r1, #0
   10d98:	beq	10d84 <pcapng_append_interface_option@@Base+0x24>
   10d9c:	push	{r4, r5, r6, lr}
   10da0:	mov	r4, r0
   10da4:	ldrb	lr, [r1, #3]
   10da8:	ldrb	r5, [r1, #2]
   10dac:	add	r0, r3, r2
   10db0:	orr	r5, r5, lr, lsl #8
   10db4:	add	r2, r5, #4
   10db8:	bl	2184 <memcpy@plt>
   10dbc:	ldr	r0, [r4, #24]
   10dc0:	ldr	r2, [r4, #20]
   10dc4:	add	r3, r5, #7
   10dc8:	ldr	r1, [pc, #52]	; 10e04 <pcapng_append_interface_option@@Base+0xa4>
   10dcc:	bic	r3, r3, #3
   10dd0:	add	r3, r3, r0
   10dd4:	add	r1, pc, r1
   10dd8:	sub	r2, r2, #12
   10ddc:	sub	r2, r2, r3
   10de0:	ldr	ip, [r4, #16]
   10de4:	strh	r2, [r1, #2]
   10de8:	ldr	r2, [r1]
   10dec:	str	r3, [r4, #24]
   10df0:	mov	r0, #0
   10df4:	str	r2, [ip, r3]
   10df8:	pop	{r4, r5, r6, pc}
   10dfc:	mov	r0, #1
   10e00:	bx	lr
   10e04:	andeq	sl, r1, ip, asr #7

00010e08 <pcapng_append_packet@@Base>:
   10e08:	push	{r4, r5, r6, r7, r8, lr}
   10e0c:	subs	r5, r0, #0
   10e10:	beq	10ed0 <pcapng_append_packet@@Base+0xc8>
   10e14:	ldr	r0, [r5]
   10e18:	cmn	r0, #1
   10e1c:	beq	10ed0 <pcapng_append_packet@@Base+0xc8>
   10e20:	ldrb	ip, [r1, #5]
   10e24:	ldrb	r2, [r1, #6]
   10e28:	ldrb	r4, [r1, #4]
   10e2c:	ldrb	r3, [r1, #7]
   10e30:	orr	r4, r4, ip, lsl #8
   10e34:	orr	r4, r4, r2, lsl #16
   10e38:	orr	r4, r4, r3, lsl #24
   10e3c:	mov	r2, r4
   10e40:	bl	243c <write@plt>
   10e44:	cmn	r0, #1
   10e48:	beq	10ed8 <pcapng_append_packet@@Base+0xd0>
   10e4c:	ldr	r3, [r5, #4]
   10e50:	mov	r0, #0
   10e54:	ldrb	r2, [r3, #17]
   10e58:	ldrb	r1, [r3, #16]
   10e5c:	ldrb	ip, [r3, #21]
   10e60:	ldrb	r8, [r3, #18]
   10e64:	orr	r1, r1, r2, lsl #8
   10e68:	ldrb	r2, [r3, #20]
   10e6c:	ldrb	lr, [r3, #22]
   10e70:	ldrb	r5, [r3, #19]
   10e74:	orr	r2, r2, ip, lsl #8
   10e78:	ldrb	ip, [r3, #23]
   10e7c:	orr	r1, r1, r8, lsl #16
   10e80:	orr	r6, r1, r5, lsl #24
   10e84:	orr	r2, r2, lr, lsl #16
   10e88:	adds	r6, r6, r4
   10e8c:	orr	r7, r2, ip, lsl #24
   10e90:	adc	r7, r7, #0
   10e94:	lsr	r2, r6, #8
   10e98:	lsr	r4, r6, #16
   10e9c:	lsr	lr, r6, #24
   10ea0:	lsr	ip, r7, #8
   10ea4:	strb	r2, [r3, #17]
   10ea8:	lsr	r1, r7, #16
   10eac:	lsr	r2, r7, #24
   10eb0:	strb	r6, [r3, #16]
   10eb4:	strb	r7, [r3, #20]
   10eb8:	strb	r4, [r3, #18]
   10ebc:	strb	lr, [r3, #19]
   10ec0:	strb	ip, [r3, #21]
   10ec4:	strb	r1, [r3, #22]
   10ec8:	strb	r2, [r3, #23]
   10ecc:	pop	{r4, r5, r6, r7, r8, pc}
   10ed0:	mov	r0, #1
   10ed4:	pop	{r4, r5, r6, r7, r8, pc}
   10ed8:	mov	r0, #0
   10edc:	pop	{r4, r5, r6, r7, r8, pc}

00010ee0 <pcapng_close@@Base>:
   10ee0:	push	{r4, lr}
   10ee4:	mov	r4, r0
   10ee8:	ldr	r0, [r0, #16]
   10eec:	sub	r3, r0, #1
   10ef0:	cmn	r3, #3
   10ef4:	bls	10f20 <pcapng_close@@Base+0x40>
   10ef8:	ldr	r0, [r4, #4]
   10efc:	sub	r3, r0, #1
   10f00:	cmn	r3, #3
   10f04:	bls	10f38 <pcapng_close@@Base+0x58>
   10f08:	ldr	r0, [r4]
   10f0c:	cmn	r0, #1
   10f10:	beq	10f18 <pcapng_close@@Base+0x38>
   10f14:	bl	2508 <close@plt>
   10f18:	mov	r0, #0
   10f1c:	pop	{r4, pc}
   10f20:	ldr	r1, [r4, #20]
   10f24:	bl	2478 <munmap@plt>
   10f28:	ldr	r0, [r4, #4]
   10f2c:	sub	r3, r0, #1
   10f30:	cmn	r3, #3
   10f34:	bhi	10f08 <pcapng_close@@Base+0x28>
   10f38:	ldr	r1, [r4, #8]
   10f3c:	bl	2478 <munmap@plt>
   10f40:	b	10f08 <pcapng_close@@Base+0x28>

00010f44 <pcapng_create@@Base>:
   10f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f48:	sub	sp, sp, #52	; 0x34
   10f4c:	mov	r4, r0
   10f50:	mov	r5, r1
   10f54:	mov	r8, r2
   10f58:	str	r3, [sp, #12]
   10f5c:	bl	23a0 <getpagesize@plt>
   10f60:	mov	r3, #0
   10f64:	str	r3, [r4, #4]
   10f68:	str	r3, [r4, #16]
   10f6c:	str	r3, [r4, #24]
   10f70:	str	r3, [r4, #20]
   10f74:	str	r3, [r4, #12]
   10f78:	str	r3, [r4, #8]
   10f7c:	ldrh	r3, [sp, #88]	; 0x58
   10f80:	mov	r2, #432	; 0x1b0
   10f84:	mov	r1, #194	; 0xc2
   10f88:	str	r3, [sp, #16]
   10f8c:	ldr	r9, [sp, #96]	; 0x60
   10f90:	mov	sl, r0
   10f94:	mov	r0, r5
   10f98:	bl	231c <open@plt>
   10f9c:	cmn	r0, #1
   10fa0:	mov	r5, r0
   10fa4:	str	r0, [r4]
   10fa8:	beq	11430 <pcapng_create@@Base+0x4ec>
   10fac:	ldr	ip, [pc, #1320]	; 114dc <pcapng_create@@Base+0x598>
   10fb0:	add	lr, sp, #24
   10fb4:	add	ip, pc, ip
   10fb8:	add	ip, ip, #68	; 0x44
   10fbc:	mov	r6, #24
   10fc0:	ldm	ip!, {r0, r1, r2, r3}
   10fc4:	str	r6, [r4, #8]
   10fc8:	stmia	lr!, {r0, r1, r2, r3}
   10fcc:	add	r3, sp, r6
   10fd0:	ldm	ip, {r0, r1}
   10fd4:	mov	r2, r6
   10fd8:	str	r3, [sp, #20]
   10fdc:	stm	lr, {r0, r1}
   10fe0:	mov	r0, r5
   10fe4:	mov	r1, r3
   10fe8:	bl	243c <write@plt>
   10fec:	cmp	r8, #0
   10ff0:	cmnne	r0, #1
   10ff4:	ldreq	r5, [r4, #8]
   10ff8:	beq	110d4 <pcapng_create@@Base+0x190>
   10ffc:	ldrb	r2, [r8, #1]
   11000:	ldrb	r3, [r8]
   11004:	orrs	r3, r3, r2, lsl #8
   11008:	beq	114d0 <pcapng_create@@Base+0x58c>
   1100c:	ldrb	r2, [r8, #3]
   11010:	ldrb	r3, [r8, #2]
   11014:	orrs	r3, r3, r2, lsl #8
   11018:	beq	114d0 <pcapng_create@@Base+0x58c>
   1101c:	ldr	r6, [pc, #1212]	; 114e0 <pcapng_create@@Base+0x59c>
   11020:	mov	r7, #1
   11024:	add	r6, pc, r6
   11028:	add	r6, r6, #92	; 0x5c
   1102c:	add	fp, r3, #3
   11030:	add	r2, r3, #4
   11034:	bic	fp, fp, #3
   11038:	mov	r1, r8
   1103c:	ldr	r0, [r4]
   11040:	sub	r5, fp, r3
   11044:	bl	243c <write@plt>
   11048:	adds	r3, r0, #1
   1104c:	movne	r3, #1
   11050:	cmp	r5, #0
   11054:	cmnne	r0, #1
   11058:	beq	11088 <pcapng_create@@Base+0x144>
   1105c:	mov	r2, r7
   11060:	mov	r1, r6
   11064:	ldr	r0, [r4]
   11068:	bl	243c <write@plt>
   1106c:	adds	r3, r0, #1
   11070:	movne	r3, #1
   11074:	subs	r5, r5, #1
   11078:	moveq	r2, #0
   1107c:	andne	r2, r3, #1
   11080:	cmp	r2, #0
   11084:	bne	1105c <pcapng_create@@Base+0x118>
   11088:	add	r1, fp, #4
   1108c:	ldr	r2, [r4, #8]
   11090:	adds	r8, r8, r1
   11094:	moveq	r3, #0
   11098:	andne	r3, r3, #1
   1109c:	add	r2, r2, #4
   110a0:	add	fp, r2, fp
   110a4:	cmp	r3, #0
   110a8:	str	fp, [r4, #8]
   110ac:	beq	110d0 <pcapng_create@@Base+0x18c>
   110b0:	ldrb	r2, [r8, #1]
   110b4:	ldrb	r3, [r8]
   110b8:	orrs	r3, r3, r2, lsl #8
   110bc:	beq	110d0 <pcapng_create@@Base+0x18c>
   110c0:	ldrb	r5, [r8, #3]
   110c4:	ldrb	r3, [r8, #2]
   110c8:	orrs	r3, r3, r5, lsl #8
   110cc:	bne	1102c <pcapng_create@@Base+0xe8>
   110d0:	mov	r5, fp
   110d4:	cmn	r0, #1
   110d8:	str	r5, [r4, #12]
   110dc:	beq	11458 <pcapng_create@@Base+0x514>
   110e0:	ldr	r3, [sp, #12]
   110e4:	mov	r1, sl
   110e8:	add	r0, r3, #3
   110ec:	add	r0, r0, sl
   110f0:	add	r0, r0, r5
   110f4:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
   110f8:	mul	r1, sl, r0
   110fc:	subs	r5, r1, r5
   11100:	str	r1, [r4, #8]
   11104:	beq	11478 <pcapng_create@@Base+0x534>
   11108:	ldr	r7, [pc, #980]	; 114e4 <pcapng_create@@Base+0x5a0>
   1110c:	mov	r8, #1
   11110:	add	r7, pc, r7
   11114:	add	r7, r7, #92	; 0x5c
   11118:	mov	r2, r8
   1111c:	mov	r1, r7
   11120:	ldr	r0, [r4]
   11124:	bl	243c <write@plt>
   11128:	subs	r5, r5, #1
   1112c:	movne	r3, #1
   11130:	moveq	r3, #0
   11134:	adds	r2, r0, #1
   11138:	movne	r2, #1
   1113c:	ands	r3, r3, r2
   11140:	bne	11118 <pcapng_create@@Base+0x1d4>
   11144:	mov	r6, r0
   11148:	mov	r0, r3
   1114c:	ldr	r3, [r4]
   11150:	ldr	r1, [r4, #8]
   11154:	mov	r2, #3
   11158:	str	r3, [sp]
   1115c:	str	r0, [sp, #4]
   11160:	mov	r3, #1
   11164:	bl	2364 <mmap@plt>
   11168:	cmn	r6, #1
   1116c:	str	r0, [r4, #4]
   11170:	beq	11458 <pcapng_create@@Base+0x514>
   11174:	cmn	r0, #1
   11178:	beq	11470 <pcapng_create@@Base+0x52c>
   1117c:	ldr	r0, [sp, #20]
   11180:	mov	r3, #0
   11184:	mov	r2, #16
   11188:	str	r3, [r0, #8]
   1118c:	str	r3, [r0, #4]
   11190:	ldrh	r3, [sp, #16]
   11194:	ldr	ip, [sp, #92]	; 0x5c
   11198:	mov	r1, r0
   1119c:	str	r2, [r4, #20]
   111a0:	mov	r8, #1
   111a4:	ldr	r0, [r4]
   111a8:	str	ip, [sp, #36]	; 0x24
   111ac:	strh	r3, [sp, #32]
   111b0:	str	r8, [sp, #24]
   111b4:	bl	243c <write@plt>
   111b8:	cmp	r9, #0
   111bc:	cmnne	r0, #1
   111c0:	ldreq	r6, [r4, #20]
   111c4:	beq	11298 <pcapng_create@@Base+0x354>
   111c8:	ldrb	r2, [r9, #1]
   111cc:	ldrb	r3, [r9]
   111d0:	orrs	r3, r3, r2, lsl #8
   111d4:	beq	114c4 <pcapng_create@@Base+0x580>
   111d8:	ldrb	r3, [r9, #3]
   111dc:	ldrb	r5, [r9, #2]
   111e0:	orrs	r5, r5, r3, lsl #8
   111e4:	beq	114c4 <pcapng_create@@Base+0x580>
   111e8:	ldr	r7, [pc, #760]	; 114e8 <pcapng_create@@Base+0x5a4>
   111ec:	add	r7, pc, r7
   111f0:	add	r7, r7, #92	; 0x5c
   111f4:	add	r2, r5, #4
   111f8:	mov	r1, r9
   111fc:	ldr	r0, [r4]
   11200:	bl	243c <write@plt>
   11204:	add	r6, r5, #3
   11208:	bic	r6, r6, #3
   1120c:	sub	r5, r6, r5
   11210:	adds	r3, r0, #1
   11214:	movne	r3, #1
   11218:	cmp	r5, #0
   1121c:	cmnne	r0, #1
   11220:	beq	11250 <pcapng_create@@Base+0x30c>
   11224:	mov	r2, r8
   11228:	mov	r1, r7
   1122c:	ldr	r0, [r4]
   11230:	bl	243c <write@plt>
   11234:	adds	r3, r0, #1
   11238:	movne	r3, #1
   1123c:	subs	r5, r5, #1
   11240:	moveq	r2, #0
   11244:	andne	r2, r3, #1
   11248:	cmp	r2, #0
   1124c:	bne	11224 <pcapng_create@@Base+0x2e0>
   11250:	add	r1, r6, #4
   11254:	ldr	r2, [r4, #20]
   11258:	adds	r9, r9, r1
   1125c:	moveq	r3, #0
   11260:	andne	r3, r3, #1
   11264:	add	r2, r2, #4
   11268:	add	r6, r2, r6
   1126c:	cmp	r3, #0
   11270:	str	r6, [r4, #20]
   11274:	beq	11298 <pcapng_create@@Base+0x354>
   11278:	ldrb	r2, [r9, #1]
   1127c:	ldrb	r3, [r9]
   11280:	orrs	r3, r3, r2, lsl #8
   11284:	beq	11298 <pcapng_create@@Base+0x354>
   11288:	ldrb	r3, [r9, #3]
   1128c:	ldrb	r5, [r9, #2]
   11290:	orrs	r5, r5, r3, lsl #8
   11294:	bne	111f4 <pcapng_create@@Base+0x2b0>
   11298:	cmn	r0, #1
   1129c:	str	r6, [r4, #24]
   112a0:	beq	11458 <pcapng_create@@Base+0x514>
   112a4:	ldr	r3, [sp, #100]	; 0x64
   112a8:	mov	r1, sl
   112ac:	add	r0, r3, #3
   112b0:	add	r0, r0, sl
   112b4:	add	r0, r0, r6
   112b8:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
   112bc:	mul	r1, sl, r0
   112c0:	subs	r5, r1, r6
   112c4:	str	r1, [r4, #20]
   112c8:	beq	1149c <pcapng_create@@Base+0x558>
   112cc:	ldr	r7, [pc, #536]	; 114ec <pcapng_create@@Base+0x5a8>
   112d0:	mov	r8, #1
   112d4:	add	r7, pc, r7
   112d8:	add	r7, r7, #92	; 0x5c
   112dc:	mov	r2, r8
   112e0:	mov	r1, r7
   112e4:	ldr	r0, [r4]
   112e8:	bl	243c <write@plt>
   112ec:	subs	r5, r5, #1
   112f0:	movne	r3, #1
   112f4:	moveq	r3, #0
   112f8:	adds	r2, r0, #1
   112fc:	movne	r2, #1
   11300:	ands	r3, r3, r2
   11304:	bne	112dc <pcapng_create@@Base+0x398>
   11308:	ldr	r2, [r4, #8]
   1130c:	mov	r6, r0
   11310:	mov	r0, r3
   11314:	ldr	r3, [r4]
   11318:	ldr	r1, [r4, #20]
   1131c:	str	r2, [sp, #4]
   11320:	str	r3, [sp]
   11324:	mov	r2, #3
   11328:	mov	r3, #1
   1132c:	bl	2364 <mmap@plt>
   11330:	cmn	r6, #1
   11334:	str	r0, [r4, #16]
   11338:	beq	11458 <pcapng_create@@Base+0x514>
   1133c:	cmn	r0, #1
   11340:	beq	11470 <pcapng_create@@Base+0x52c>
   11344:	ldr	r3, [r4, #8]
   11348:	ldr	r0, [pc, #416]	; 114f0 <pcapng_create@@Base+0x5ac>
   1134c:	ldr	r1, [r4, #12]
   11350:	add	r0, pc, r0
   11354:	sub	r3, r3, #12
   11358:	ldr	ip, [r4, #4]
   1135c:	sub	r3, r3, r1
   11360:	strh	r3, [r0, #2]
   11364:	ldr	r3, [r0]
   11368:	mov	r2, #0
   1136c:	str	r3, [ip, r1]
   11370:	ldmib	r4, {r1, r3}
   11374:	bic	ip, r3, #3
   11378:	add	ip, r1, ip
   1137c:	lsr	lr, r3, #8
   11380:	strb	lr, [r1, #5]
   11384:	lsr	r5, r3, #16
   11388:	lsr	lr, r3, #24
   1138c:	strb	r3, [r1, #4]
   11390:	strb	r5, [r1, #6]
   11394:	strb	lr, [r1, #7]
   11398:	str	r3, [ip, #-4]
   1139c:	ldr	r3, [r4, #20]
   113a0:	ldr	r1, [r4, #24]
   113a4:	sub	r3, r3, #12
   113a8:	ldr	ip, [r4, #16]
   113ac:	sub	r3, r3, r1
   113b0:	strh	r3, [r0, #2]
   113b4:	ldr	r3, [r0]
   113b8:	mov	r5, r2
   113bc:	str	r3, [ip, r1]
   113c0:	ldr	r3, [r4, #20]
   113c4:	ldr	r1, [r4, #16]
   113c8:	bic	r0, r3, #3
   113cc:	add	r0, r1, r0
   113d0:	lsr	ip, r3, #8
   113d4:	strb	ip, [r1, #5]
   113d8:	lsr	lr, r3, #16
   113dc:	lsr	ip, r3, #24
   113e0:	strb	r3, [r1, #4]
   113e4:	strb	lr, [r1, #6]
   113e8:	strb	ip, [r1, #7]
   113ec:	str	r3, [r0, #-4]
   113f0:	ldr	r1, [r4, #20]
   113f4:	ldr	r3, [r4, #4]
   113f8:	lsr	r0, r1, #24
   113fc:	lsr	lr, r1, #8
   11400:	lsr	ip, r1, #16
   11404:	strb	r0, [r3, #19]
   11408:	strb	r1, [r3, #16]
   1140c:	strb	lr, [r3, #17]
   11410:	strb	ip, [r3, #18]
   11414:	mov	r0, r5
   11418:	strb	r2, [r3, #20]
   1141c:	strb	r2, [r3, #21]
   11420:	strb	r2, [r3, #22]
   11424:	strb	r2, [r3, #23]
   11428:	add	sp, sp, #52	; 0x34
   1142c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11430:	bl	23c4 <__errno_location@plt>
   11434:	ldr	r3, [r0]
   11438:	sub	r3, r3, #12
   1143c:	cmp	r3, #16
   11440:	bhi	11458 <pcapng_create@@Base+0x514>
   11444:	ldr	r2, [pc, #168]	; 114f4 <pcapng_create@@Base+0x5b0>
   11448:	add	r2, pc, r2
   1144c:	ldr	r3, [r2, r3, lsl #2]
   11450:	cmp	r3, #0
   11454:	beq	10fac <pcapng_create@@Base+0x68>
   11458:	mov	r5, #6
   1145c:	mov	r0, r4
   11460:	bl	24c0 <pcapng_close@plt>
   11464:	mov	r0, r5
   11468:	add	sp, sp, #52	; 0x34
   1146c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11470:	mov	r5, #7
   11474:	b	1145c <pcapng_create@@Base+0x518>
   11478:	ldr	r3, [r4]
   1147c:	mov	r0, r5
   11480:	str	r3, [sp]
   11484:	str	r5, [sp, #4]
   11488:	mov	r3, #1
   1148c:	mov	r2, #3
   11490:	bl	2364 <mmap@plt>
   11494:	str	r0, [r4, #4]
   11498:	b	11174 <pcapng_create@@Base+0x230>
   1149c:	ldr	r2, [r4, #8]
   114a0:	ldr	r3, [r4]
   114a4:	mov	r0, r5
   114a8:	str	r2, [sp, #4]
   114ac:	str	r3, [sp]
   114b0:	mov	r2, #3
   114b4:	mov	r3, #1
   114b8:	bl	2364 <mmap@plt>
   114bc:	str	r0, [r4, #16]
   114c0:	b	1133c <pcapng_create@@Base+0x3f8>
   114c4:	ldr	r6, [r4, #20]
   114c8:	str	r6, [r4, #24]
   114cc:	b	112a4 <pcapng_create@@Base+0x360>
   114d0:	ldr	r5, [r4, #8]
   114d4:	str	r5, [r4, #12]
   114d8:	b	110e0 <pcapng_create@@Base+0x19c>
   114dc:	andeq	r9, r0, ip, ror #20
   114e0:	strdeq	r9, [r0], -ip
   114e4:	andeq	r9, r0, r0, lsl r9
   114e8:	andeq	r9, r0, r4, lsr r8
   114ec:	andeq	r9, r0, ip, asr #14
   114f0:	andeq	r9, r1, r0, asr lr
   114f4:	ldrdeq	r9, [r0], -r8

000114f8 <btbb_pcapng_create_file@@Base>:
   114f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   114fc:	mov	r9, r0
   11500:	sub	sp, sp, #292	; 0x124
   11504:	mov	r0, #28
   11508:	mov	r4, r1
   1150c:	mov	r6, r2
   11510:	bl	22e0 <malloc@plt>
   11514:	ldr	r8, [pc, #340]	; 11670 <btbb_pcapng_create_file@@Base+0x178>
   11518:	add	r8, pc, r8
   1151c:	subs	r5, r0, #0
   11520:	beq	11668 <btbb_pcapng_create_file@@Base+0x170>
   11524:	add	r7, sp, #28
   11528:	mov	r0, r7
   1152c:	mov	r2, #260	; 0x104
   11530:	mov	r1, #0
   11534:	bl	23e8 <memset@plt>
   11538:	mov	r3, #3
   1153c:	cmp	r4, #0
   11540:	strh	r3, [r7]
   11544:	beq	11574 <btbb_pcapng_create_file@@Base+0x7c>
   11548:	mov	r1, r4
   1154c:	add	r4, sp, #32
   11550:	mov	r0, r4
   11554:	mov	r2, #256	; 0x100
   11558:	bl	2400 <strncpy@plt>
   1155c:	mov	r0, r4
   11560:	mov	r3, #0
   11564:	strb	r3, [sp, #287]	; 0x11f
   11568:	bl	234c <strlen@plt>
   1156c:	mov	r4, r7
   11570:	strh	r0, [r7, #2]
   11574:	bl	23a0 <getpagesize@plt>
   11578:	ldr	r2, [pc, #244]	; 11674 <btbb_pcapng_create_file@@Base+0x17c>
   1157c:	mov	ip, #400	; 0x190
   11580:	mov	r1, r9
   11584:	ldr	r2, [r8, r2]
   11588:	str	r4, [sp, #8]
   1158c:	mov	r3, r0
   11590:	mov	r0, #255	; 0xff
   11594:	str	r3, [sp, #12]
   11598:	stm	sp, {r0, ip}
   1159c:	mov	r0, r5
   115a0:	bl	2214 <pcapng_create@plt>
   115a4:	subs	r7, r0, #0
   115a8:	moveq	lr, #1
   115ac:	beq	115d8 <btbb_pcapng_create_file@@Base+0xe0>
   115b0:	mov	r0, r5
   115b4:	rsb	r7, r7, #0
   115b8:	bl	2160 <free@plt>
   115bc:	mov	r0, r7
   115c0:	add	sp, sp, #292	; 0x124
   115c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   115c8:	add	r3, r1, #3
   115cc:	bic	r3, r3, #3
   115d0:	add	r3, r3, #4
   115d4:	add	r4, r4, r3
   115d8:	adds	ip, r4, #0
   115dc:	movne	ip, #1
   115e0:	mov	r2, r7
   115e4:	b	1160c <btbb_pcapng_create_file@@Base+0x114>
   115e8:	ldrh	r3, [r4]
   115ec:	mov	r2, lr
   115f0:	cmp	r3, #0
   115f4:	beq	11634 <btbb_pcapng_create_file@@Base+0x13c>
   115f8:	ldrh	r1, [r4, #2]
   115fc:	cmp	r1, #0
   11600:	beq	11634 <btbb_pcapng_create_file@@Base+0x13c>
   11604:	cmp	r3, #9
   11608:	bne	115c8 <btbb_pcapng_create_file@@Base+0xd0>
   1160c:	eor	r3, r2, #1
   11610:	tst	r3, ip
   11614:	bne	115e8 <btbb_pcapng_create_file@@Base+0xf0>
   11618:	cmp	r2, #0
   1161c:	beq	11634 <btbb_pcapng_create_file@@Base+0x13c>
   11620:	mov	r7, #0
   11624:	mov	r0, r7
   11628:	str	r5, [r6]
   1162c:	add	sp, sp, #292	; 0x124
   11630:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11634:	ldr	r3, [pc, #60]	; 11678 <btbb_pcapng_create_file@@Base+0x180>
   11638:	add	r3, pc, r3
   1163c:	ldm	r3, {r0, r1}
   11640:	str	r0, [sp, #20]
   11644:	strb	r1, [sp, #24]
   11648:	mov	r0, r5
   1164c:	add	r1, sp, #20
   11650:	bl	2154 <pcapng_append_interface_option@plt>
   11654:	subs	r7, r0, #0
   11658:	beq	11620 <btbb_pcapng_create_file@@Base+0x128>
   1165c:	mov	r0, r5
   11660:	bl	24c0 <pcapng_close@plt>
   11664:	b	115b0 <btbb_pcapng_create_file@@Base+0xb8>
   11668:	mvn	r7, #4
   1166c:	b	115bc <btbb_pcapng_create_file@@Base+0xc4>
   11670:	andeq	r9, r1, r0, ror #21
   11674:	muleq	r0, ip, r1
   11678:	andeq	r9, r0, r8, asr #8

0001167c <btbb_pcapng_append_packet@@Base>:
   1167c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11680:	add	fp, sp, #32
   11684:	sub	sp, sp, #492	; 0x1ec
   11688:	ldrsb	r9, [fp, #4]
   1168c:	ldrsb	r8, [fp, #8]
   11690:	ldrb	sl, [fp, #16]
   11694:	ldr	r5, [fp, #12]
   11698:	cmp	r8, r9
   1169c:	movge	ip, #3
   116a0:	movlt	ip, #7
   116a4:	movge	r1, #19
   116a8:	movlt	r1, #23
   116ac:	cmn	r5, #1
   116b0:	moveq	r1, ip
   116b4:	cmp	sl, #255	; 0xff
   116b8:	movne	r6, #128	; 0x80
   116bc:	moveq	r6, #0
   116c0:	str	r0, [fp, #-524]	; 0xfffffdf4
   116c4:	ldr	r0, [fp, #20]
   116c8:	str	r3, [fp, #-520]	; 0xfffffdf8
   116cc:	orr	r6, r6, r1
   116d0:	str	r2, [fp, #-508]	; 0xfffffe04
   116d4:	bl	2340 <btbb_packet_get_payload_length@plt>
   116d8:	bic	r5, r5, #-16777216	; 0xff000000
   116dc:	sub	r7, fp, #488	; 0x1e8
   116e0:	orr	r5, r5, sl, lsl #24
   116e4:	add	r2, r0, #7
   116e8:	bic	r2, r2, #7
   116ec:	sub	sp, sp, r2
   116f0:	mov	r1, sp
   116f4:	mov	r4, r0
   116f8:	ldr	r0, [fp, #20]
   116fc:	bl	210c <btbb_get_payload_packed@plt>
   11700:	cmp	r4, #400	; 0x190
   11704:	ldr	r0, [fp, #20]
   11708:	movge	r4, #400	; 0x190
   1170c:	bl	2490 <btbb_packet_get_channel@plt>
   11710:	add	sl, r4, #61	; 0x3d
   11714:	bic	sl, sl, #3
   11718:	str	r0, [fp, #-500]	; 0xfffffe0c
   1171c:	ldr	r0, [fp, #20]
   11720:	bl	2178 <btbb_packet_get_ac_errors@plt>
   11724:	str	r0, [fp, #-504]	; 0xfffffe08
   11728:	ldr	r0, [fp, #20]
   1172c:	bl	23b8 <btbb_packet_get_transport@plt>
   11730:	str	r0, [fp, #-516]	; 0xfffffdfc
   11734:	ldr	r0, [fp, #20]
   11738:	bl	216c <btbb_packet_get_modulation@plt>
   1173c:	str	r0, [fp, #-512]	; 0xfffffe00
   11740:	ldr	r0, [fp, #20]
   11744:	bl	2418 <btbb_packet_get_lap@plt>
   11748:	str	r0, [fp, #-496]	; 0xfffffe10
   1174c:	ldr	r0, [fp, #20]
   11750:	bl	2370 <btbb_packet_get_header_packed@plt>
   11754:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   11758:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1175c:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   11760:	orr	r2, r2, r1, lsl #4
   11764:	strb	r2, [fp, #-456]	; 0xfffffe38
   11768:	ldr	r2, [fp, #-508]	; 0xfffffe04
   1176c:	add	r1, r4, #22
   11770:	str	r2, [fp, #-472]	; 0xfffffe28
   11774:	ldrb	r2, [fp, #-500]	; 0xfffffe0c
   11778:	str	r3, [fp, #-476]	; 0xfffffe24
   1177c:	mov	ip, #6
   11780:	strb	r2, [fp, #-460]	; 0xfffffe34
   11784:	ldrb	r2, [fp, #-504]	; 0xfffffe08
   11788:	mov	r3, #0
   1178c:	cmp	r4, #0
   11790:	strb	r2, [fp, #-457]	; 0xfffffe37
   11794:	ldr	r2, [fp, #-496]	; 0xfffffe10
   11798:	str	r5, [fp, #-448]	; 0xfffffe40
   1179c:	strb	r9, [fp, #-459]	; 0xfffffe35
   117a0:	strb	r8, [fp, #-458]	; 0xfffffe36
   117a4:	str	r2, [fp, #-452]	; 0xfffffe3c
   117a8:	strh	r6, [r7, #48]	; 0x30
   117ac:	str	sl, [fp, #-484]	; 0xfffffe1c
   117b0:	str	r1, [fp, #-468]	; 0xfffffe2c
   117b4:	str	r1, [fp, #-464]	; 0xfffffe30
   117b8:	strh	r3, [r7, #34]	; 0x22
   117bc:	str	r3, [fp, #-480]	; 0xfffffe20
   117c0:	strb	r3, [fp, #-455]	; 0xfffffe39
   117c4:	str	ip, [fp, #-488]	; 0xfffffe18
   117c8:	str	r0, [fp, #-444]	; 0xfffffe44
   117cc:	beq	117f4 <btbb_pcapng_append_packet@@Base+0x178>
   117d0:	cmp	r4, #400	; 0x190
   117d4:	bhi	11824 <btbb_pcapng_append_packet@@Base+0x1a8>
   117d8:	mov	r2, r4
   117dc:	mov	r1, sp
   117e0:	add	r0, r7, #50	; 0x32
   117e4:	orr	r6, r6, #32
   117e8:	bl	2184 <memcpy@plt>
   117ec:	strh	r6, [r7, #48]	; 0x30
   117f0:	b	117f8 <btbb_pcapng_append_packet@@Base+0x17c>
   117f4:	strh	r6, [r7, #48]	; 0x30
   117f8:	sub	r3, fp, #36	; 0x24
   117fc:	add	r3, r3, sl
   11800:	mov	r2, #0
   11804:	mov	r1, r7
   11808:	ldr	r0, [fp, #-524]	; 0xfffffdf4
   1180c:	str	sl, [r3, #-456]	; 0xfffffe38
   11810:	str	r2, [r3, #-460]	; 0xfffffe34
   11814:	bl	23ac <pcapng_append_packet@plt>
   11818:	rsb	r0, r0, #0
   1181c:	sub	sp, fp, #32
   11820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11824:	ldr	r3, [pc, #28]	; 11848 <btbb_pcapng_append_packet@@Base+0x1cc>
   11828:	ldr	r1, [pc, #28]	; 1184c <btbb_pcapng_append_packet@@Base+0x1d0>
   1182c:	ldr	r0, [pc, #28]	; 11850 <btbb_pcapng_append_packet@@Base+0x1d4>
   11830:	add	r3, pc, r3
   11834:	mov	r2, #221	; 0xdd
   11838:	add	r3, r3, #8
   1183c:	add	r1, pc, r1
   11840:	add	r0, pc, r0
   11844:	bl	2514 <__assert_fail@plt>
   11848:	andeq	r9, r0, r0, asr r2
   1184c:	muleq	r0, r8, r2
   11850:	andeq	r9, r0, r4, ror #5

00011854 <btbb_pcapng_record_bdaddr@@Base>:
   11854:	push	{r4, r5, lr}
   11858:	sub	sp, sp, #20
   1185c:	ldr	ip, [pc, #76]	; 118b0 <btbb_pcapng_record_bdaddr@@Base+0x5c>
   11860:	ldrb	r4, [sp, #32]
   11864:	ldrb	lr, [sp, #36]	; 0x24
   11868:	lsr	r1, r3, #8
   1186c:	lsr	r5, r2, #8
   11870:	strb	r2, [sp, #8]
   11874:	strb	r3, [sp, #12]
   11878:	strb	r1, [sp, #13]
   1187c:	lsr	r3, r2, #16
   11880:	add	r1, sp, #4
   11884:	lsr	r2, r2, #24
   11888:	strb	r5, [sp, #9]
   1188c:	strb	r3, [sp, #10]
   11890:	strb	r2, [sp, #11]
   11894:	strb	r4, [sp, #14]
   11898:	strb	lr, [sp, #15]
   1189c:	str	ip, [sp, #4]
   118a0:	bl	2154 <pcapng_append_interface_option@plt>
   118a4:	rsb	r0, r0, #0
   118a8:	add	sp, sp, #20
   118ac:	pop	{r4, r5, pc}
   118b0:	andeq	sp, ip, r0, asr #6

000118b4 <btbb_pcapng_record_btclock@@Base>:
   118b4:	push	{r4, r5, lr}
   118b8:	sub	sp, sp, #28
   118bc:	ldr	r3, [pc, #56]	; 118fc <btbb_pcapng_record_btclock@@Base+0x48>
   118c0:	ldr	r5, [sp, #40]	; 0x28
   118c4:	ldr	r4, [sp, #44]	; 0x2c
   118c8:	ldr	lr, [sp, #48]	; 0x30
   118cc:	ldr	ip, [sp, #52]	; 0x34
   118d0:	mov	r1, sp
   118d4:	str	r2, [sp, #12]
   118d8:	str	r5, [sp, #4]
   118dc:	str	r4, [sp, #8]
   118e0:	str	lr, [sp, #16]
   118e4:	str	ip, [sp, #20]
   118e8:	str	r3, [sp]
   118ec:	bl	2154 <pcapng_append_interface_option@plt>
   118f0:	rsb	r0, r0, #0
   118f4:	add	sp, sp, #28
   118f8:	pop	{r4, r5, pc}
   118fc:	andseq	sp, r8, r1, asr #6

00011900 <btbb_pcapng_close@@Base>:
   11900:	push	{r4, lr}
   11904:	mov	r4, r0
   11908:	bl	24c0 <pcapng_close@plt>
   1190c:	cmp	r4, #0
   11910:	beq	1191c <btbb_pcapng_close@@Base+0x1c>
   11914:	mov	r0, r4
   11918:	bl	2160 <free@plt>
   1191c:	mvn	r0, #0
   11920:	pop	{r4, pc}

00011924 <lell_pcapng_create_file@@Base>:
   11924:	push	{r4, r5, r6, r7, r8, r9, lr}
   11928:	mov	r9, r0
   1192c:	sub	sp, sp, #292	; 0x124
   11930:	mov	r0, #28
   11934:	mov	r4, r1
   11938:	mov	r6, r2
   1193c:	bl	22e0 <malloc@plt>
   11940:	ldr	r8, [pc, #340]	; 11a9c <lell_pcapng_create_file@@Base+0x178>
   11944:	add	r8, pc, r8
   11948:	subs	r5, r0, #0
   1194c:	beq	11a94 <lell_pcapng_create_file@@Base+0x170>
   11950:	add	r7, sp, #28
   11954:	mov	r0, r7
   11958:	mov	r2, #260	; 0x104
   1195c:	mov	r1, #0
   11960:	bl	23e8 <memset@plt>
   11964:	mov	r3, #3
   11968:	cmp	r4, #0
   1196c:	strh	r3, [r7]
   11970:	beq	119a0 <lell_pcapng_create_file@@Base+0x7c>
   11974:	mov	r1, r4
   11978:	add	r4, sp, #32
   1197c:	mov	r0, r4
   11980:	mov	r2, #256	; 0x100
   11984:	bl	2400 <strncpy@plt>
   11988:	mov	r0, r4
   1198c:	mov	r3, #0
   11990:	strb	r3, [sp, #287]	; 0x11f
   11994:	bl	234c <strlen@plt>
   11998:	mov	r4, r7
   1199c:	strh	r0, [r7, #2]
   119a0:	bl	23a0 <getpagesize@plt>
   119a4:	ldr	r2, [pc, #244]	; 11aa0 <lell_pcapng_create_file@@Base+0x17c>
   119a8:	mov	ip, #64	; 0x40
   119ac:	mov	r1, r9
   119b0:	ldr	r2, [r8, r2]
   119b4:	str	r4, [sp, #8]
   119b8:	mov	r3, r0
   119bc:	mov	r0, #256	; 0x100
   119c0:	str	r3, [sp, #12]
   119c4:	stm	sp, {r0, ip}
   119c8:	mov	r0, r5
   119cc:	bl	2214 <pcapng_create@plt>
   119d0:	subs	r7, r0, #0
   119d4:	moveq	lr, #1
   119d8:	beq	11a04 <lell_pcapng_create_file@@Base+0xe0>
   119dc:	mov	r0, r5
   119e0:	rsb	r7, r7, #0
   119e4:	bl	2160 <free@plt>
   119e8:	mov	r0, r7
   119ec:	add	sp, sp, #292	; 0x124
   119f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   119f4:	add	r3, r1, #3
   119f8:	bic	r3, r3, #3
   119fc:	add	r3, r3, #4
   11a00:	add	r4, r4, r3
   11a04:	adds	ip, r4, #0
   11a08:	movne	ip, #1
   11a0c:	mov	r2, r7
   11a10:	b	11a38 <lell_pcapng_create_file@@Base+0x114>
   11a14:	ldrh	r3, [r4]
   11a18:	mov	r2, lr
   11a1c:	cmp	r3, #0
   11a20:	beq	11a60 <lell_pcapng_create_file@@Base+0x13c>
   11a24:	ldrh	r1, [r4, #2]
   11a28:	cmp	r1, #0
   11a2c:	beq	11a60 <lell_pcapng_create_file@@Base+0x13c>
   11a30:	cmp	r3, #9
   11a34:	bne	119f4 <lell_pcapng_create_file@@Base+0xd0>
   11a38:	eor	r3, r2, #1
   11a3c:	tst	r3, ip
   11a40:	bne	11a14 <lell_pcapng_create_file@@Base+0xf0>
   11a44:	cmp	r2, #0
   11a48:	beq	11a60 <lell_pcapng_create_file@@Base+0x13c>
   11a4c:	mov	r7, #0
   11a50:	mov	r0, r7
   11a54:	str	r5, [r6]
   11a58:	add	sp, sp, #292	; 0x124
   11a5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11a60:	ldr	r3, [pc, #60]	; 11aa4 <lell_pcapng_create_file@@Base+0x180>
   11a64:	add	r3, pc, r3
   11a68:	ldm	r3, {r0, r1}
   11a6c:	str	r0, [sp, #20]
   11a70:	strb	r1, [sp, #24]
   11a74:	mov	r0, r5
   11a78:	add	r1, sp, #20
   11a7c:	bl	2154 <pcapng_append_interface_option@plt>
   11a80:	subs	r7, r0, #0
   11a84:	beq	11a4c <lell_pcapng_create_file@@Base+0x128>
   11a88:	mov	r0, r5
   11a8c:	bl	24c0 <pcapng_close@plt>
   11a90:	b	119dc <lell_pcapng_create_file@@Base+0xb8>
   11a94:	mvn	r7, #4
   11a98:	b	119e8 <lell_pcapng_create_file@@Base+0xc4>
   11a9c:			; <UNDEFINED> instruction: 0x000196b4
   11aa0:	muleq	r0, ip, r1
   11aa4:	andeq	r9, r0, ip, lsl r0

00011aa8 <lell_pcapng_record_connect_req@@Base>:
   11aa8:	push	{r4, r5, r6, r7, r8, r9, lr}
   11aac:	sub	sp, sp, #52	; 0x34
   11ab0:	mov	r7, r2
   11ab4:	mov	r8, r0
   11ab8:	mov	r2, #46	; 0x2e
   11abc:	mov	r0, sp
   11ac0:	mov	r1, #0
   11ac4:	mov	r6, r3
   11ac8:	bl	23e8 <memset@plt>
   11acc:	ldr	ip, [sp, #80]	; 0x50
   11ad0:	ldr	r2, [pc, #92]	; 11b34 <lell_pcapng_record_connect_req@@Base+0x8c>
   11ad4:	mov	r5, sp
   11ad8:	add	r9, ip, #32
   11adc:	add	r4, sp, #12
   11ae0:	str	r7, [sp, #4]
   11ae4:	str	r6, [sp, #8]
   11ae8:	str	r2, [sp]
   11aec:	ldr	r0, [ip]
   11af0:	ldr	r1, [ip, #4]
   11af4:	ldr	r2, [ip, #8]
   11af8:	ldr	r3, [ip, #12]
   11afc:	mov	lr, r4
   11b00:	add	ip, ip, #16
   11b04:	cmp	ip, r9
   11b08:	stmia	lr!, {r0, r1, r2, r3}
   11b0c:	mov	r4, lr
   11b10:	bne	11aec <lell_pcapng_record_connect_req@@Base+0x44>
   11b14:	ldrh	r3, [ip]
   11b18:	mov	r1, r5
   11b1c:	mov	r0, r8
   11b20:	strh	r3, [lr]
   11b24:	bl	2154 <pcapng_append_interface_option@plt>
   11b28:	rsb	r0, r0, #0
   11b2c:	add	sp, sp, #52	; 0x34
   11b30:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11b34:	eoreq	sp, lr, r0, lsl #7

00011b38 <lell_pcapng_append_packet@@Base>:
   11b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b3c:	sub	sp, sp, #324	; 0x144
   11b40:	add	ip, sp, #364	; 0x16c
   11b44:	add	r1, sp, #360	; 0x168
   11b48:	ldrsb	r8, [ip]
   11b4c:	ldrsb	r1, [r1]
   11b50:	ldr	r4, [sp, #372]	; 0x174
   11b54:	mov	r9, r0
   11b58:	cmp	r8, r1
   11b5c:	mov	r0, r4
   11b60:	movge	r6, #35	; 0x23
   11b64:	movlt	r6, #39	; 0x27
   11b68:	movge	r7, #51	; 0x33
   11b6c:	movlt	r7, #55	; 0x37
   11b70:	str	r1, [sp, #12]
   11b74:	mov	fp, r2
   11b78:	mov	sl, r3
   11b7c:	bl	2130 <lell_packet_is_data@plt>
   11b80:	ldr	r3, [r4, #72]	; 0x48
   11b84:	ldrb	lr, [r4, #69]	; 0x45
   11b88:	add	r2, r3, #9
   11b8c:	ldrb	ip, [r4, #92]	; 0x5c
   11b90:	ldr	r1, [sp, #12]
   11b94:	cmp	r0, #0
   11b98:	movne	r7, r6
   11b9c:	cmp	r2, #255	; 0xff
   11ba0:	bhi	11c70 <lell_pcapng_append_packet@@Base+0x138>
   11ba4:	add	r5, r3, #58	; 0x3a
   11ba8:	strb	ip, [sp, #47]	; 0x2f
   11bac:	add	r3, r3, #19
   11bb0:	ldr	ip, [sp, #368]	; 0x170
   11bb4:	bic	r5, r5, #3
   11bb8:	str	r3, [sp, #36]	; 0x24
   11bbc:	str	r3, [sp, #40]	; 0x28
   11bc0:	strb	lr, [sp, #44]	; 0x2c
   11bc4:	mov	r3, #0
   11bc8:	mov	lr, #6
   11bcc:	strb	r1, [sp, #45]	; 0x2d
   11bd0:	add	r0, sp, #54	; 0x36
   11bd4:	mov	r1, r4
   11bd8:	str	r5, [sp, #20]
   11bdc:	str	ip, [sp, #48]	; 0x30
   11be0:	str	lr, [sp, #16]
   11be4:	str	r3, [sp, #24]
   11be8:	str	r3, [sp, #12]
   11bec:	str	sl, [sp, #28]
   11bf0:	str	fp, [sp, #32]
   11bf4:	strb	r8, [sp, #46]	; 0x2e
   11bf8:	strh	r7, [sp, #52]	; 0x34
   11bfc:	bl	2184 <memcpy@plt>
   11c00:	add	r3, sp, #320	; 0x140
   11c04:	add	r2, r3, r5
   11c08:	ldr	r3, [sp, #12]
   11c0c:	add	r6, sp, #16
   11c10:	str	r5, [r2, #-308]	; 0xfffffecc
   11c14:	mov	r1, r6
   11c18:	mov	r0, r9
   11c1c:	str	r3, [r2, #-312]	; 0xfffffec8
   11c20:	bl	23ac <pcapng_append_packet@plt>
   11c24:	rsb	r5, r0, #0
   11c28:	cmp	r5, #0
   11c2c:	beq	11c3c <lell_pcapng_append_packet@@Base+0x104>
   11c30:	mov	r0, r5
   11c34:	add	sp, sp, #324	; 0x144
   11c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c3c:	mov	r0, r4
   11c40:	bl	2130 <lell_packet_is_data@plt>
   11c44:	cmp	r0, #0
   11c48:	bne	11c30 <lell_pcapng_append_packet@@Base+0xf8>
   11c4c:	ldrb	r3, [r4, #80]	; 0x50
   11c50:	cmp	r3, #5
   11c54:	bne	11c30 <lell_pcapng_append_packet@@Base+0xf8>
   11c58:	str	r4, [sp]
   11c5c:	mov	r2, fp
   11c60:	mov	r3, sl
   11c64:	mov	r0, r9
   11c68:	bl	237c <lell_pcapng_record_connect_req@plt>
   11c6c:	b	11c30 <lell_pcapng_append_packet@@Base+0xf8>
   11c70:	ldr	r3, [pc, #28]	; 11c94 <lell_pcapng_append_packet@@Base+0x15c>
   11c74:	ldr	r1, [pc, #28]	; 11c98 <lell_pcapng_append_packet@@Base+0x160>
   11c78:	ldr	r0, [pc, #28]	; 11c9c <lell_pcapng_append_packet@@Base+0x164>
   11c7c:	add	r3, pc, r3
   11c80:	ldr	r2, [pc, #24]	; 11ca0 <lell_pcapng_append_packet@@Base+0x168>
   11c84:	add	r3, r3, #40	; 0x28
   11c88:	add	r1, pc, r1
   11c8c:	add	r0, pc, r0
   11c90:	bl	2514 <__assert_fail@plt>
   11c94:	andeq	r8, r0, r4, lsl #28
   11c98:	andeq	r8, r0, ip, asr #28
   11c9c:	ldrdeq	r8, [r0], -r0
   11ca0:			; <UNDEFINED> instruction: 0x000001b9

00011ca4 <lell_pcapng_close@@Base>:
   11ca4:	push	{r4, lr}
   11ca8:	mov	r4, r0
   11cac:	bl	24c0 <pcapng_close@plt>
   11cb0:	cmp	r4, #0
   11cb4:	beq	11cc0 <lell_pcapng_close@@Base+0x1c>
   11cb8:	mov	r0, r4
   11cbc:	bl	2160 <free@plt>
   11cc0:	mvn	r0, #0
   11cc4:	pop	{r4, pc}
   11cc8:	subs	r2, r1, #1
   11ccc:	bxeq	lr
   11cd0:	bcc	11ea8 <lell_pcapng_close@@Base+0x204>
   11cd4:	cmp	r0, r1
   11cd8:	bls	11e8c <lell_pcapng_close@@Base+0x1e8>
   11cdc:	tst	r1, r2
   11ce0:	beq	11e98 <lell_pcapng_close@@Base+0x1f4>
   11ce4:	clz	r3, r0
   11ce8:	clz	r2, r1
   11cec:	sub	r3, r2, r3
   11cf0:	rsbs	r3, r3, #31
   11cf4:	addne	r3, r3, r3, lsl #1
   11cf8:	mov	r2, #0
   11cfc:	addne	pc, pc, r3, lsl #2
   11d00:	nop			; (mov r0, r0)
   11d04:	cmp	r0, r1, lsl #31
   11d08:	adc	r2, r2, r2
   11d0c:	subcs	r0, r0, r1, lsl #31
   11d10:	cmp	r0, r1, lsl #30
   11d14:	adc	r2, r2, r2
   11d18:	subcs	r0, r0, r1, lsl #30
   11d1c:	cmp	r0, r1, lsl #29
   11d20:	adc	r2, r2, r2
   11d24:	subcs	r0, r0, r1, lsl #29
   11d28:	cmp	r0, r1, lsl #28
   11d2c:	adc	r2, r2, r2
   11d30:	subcs	r0, r0, r1, lsl #28
   11d34:	cmp	r0, r1, lsl #27
   11d38:	adc	r2, r2, r2
   11d3c:	subcs	r0, r0, r1, lsl #27
   11d40:	cmp	r0, r1, lsl #26
   11d44:	adc	r2, r2, r2
   11d48:	subcs	r0, r0, r1, lsl #26
   11d4c:	cmp	r0, r1, lsl #25
   11d50:	adc	r2, r2, r2
   11d54:	subcs	r0, r0, r1, lsl #25
   11d58:	cmp	r0, r1, lsl #24
   11d5c:	adc	r2, r2, r2
   11d60:	subcs	r0, r0, r1, lsl #24
   11d64:	cmp	r0, r1, lsl #23
   11d68:	adc	r2, r2, r2
   11d6c:	subcs	r0, r0, r1, lsl #23
   11d70:	cmp	r0, r1, lsl #22
   11d74:	adc	r2, r2, r2
   11d78:	subcs	r0, r0, r1, lsl #22
   11d7c:	cmp	r0, r1, lsl #21
   11d80:	adc	r2, r2, r2
   11d84:	subcs	r0, r0, r1, lsl #21
   11d88:	cmp	r0, r1, lsl #20
   11d8c:	adc	r2, r2, r2
   11d90:	subcs	r0, r0, r1, lsl #20
   11d94:	cmp	r0, r1, lsl #19
   11d98:	adc	r2, r2, r2
   11d9c:	subcs	r0, r0, r1, lsl #19
   11da0:	cmp	r0, r1, lsl #18
   11da4:	adc	r2, r2, r2
   11da8:	subcs	r0, r0, r1, lsl #18
   11dac:	cmp	r0, r1, lsl #17
   11db0:	adc	r2, r2, r2
   11db4:	subcs	r0, r0, r1, lsl #17
   11db8:	cmp	r0, r1, lsl #16
   11dbc:	adc	r2, r2, r2
   11dc0:	subcs	r0, r0, r1, lsl #16
   11dc4:	cmp	r0, r1, lsl #15
   11dc8:	adc	r2, r2, r2
   11dcc:	subcs	r0, r0, r1, lsl #15
   11dd0:	cmp	r0, r1, lsl #14
   11dd4:	adc	r2, r2, r2
   11dd8:	subcs	r0, r0, r1, lsl #14
   11ddc:	cmp	r0, r1, lsl #13
   11de0:	adc	r2, r2, r2
   11de4:	subcs	r0, r0, r1, lsl #13
   11de8:	cmp	r0, r1, lsl #12
   11dec:	adc	r2, r2, r2
   11df0:	subcs	r0, r0, r1, lsl #12
   11df4:	cmp	r0, r1, lsl #11
   11df8:	adc	r2, r2, r2
   11dfc:	subcs	r0, r0, r1, lsl #11
   11e00:	cmp	r0, r1, lsl #10
   11e04:	adc	r2, r2, r2
   11e08:	subcs	r0, r0, r1, lsl #10
   11e0c:	cmp	r0, r1, lsl #9
   11e10:	adc	r2, r2, r2
   11e14:	subcs	r0, r0, r1, lsl #9
   11e18:	cmp	r0, r1, lsl #8
   11e1c:	adc	r2, r2, r2
   11e20:	subcs	r0, r0, r1, lsl #8
   11e24:	cmp	r0, r1, lsl #7
   11e28:	adc	r2, r2, r2
   11e2c:	subcs	r0, r0, r1, lsl #7
   11e30:	cmp	r0, r1, lsl #6
   11e34:	adc	r2, r2, r2
   11e38:	subcs	r0, r0, r1, lsl #6
   11e3c:	cmp	r0, r1, lsl #5
   11e40:	adc	r2, r2, r2
   11e44:	subcs	r0, r0, r1, lsl #5
   11e48:	cmp	r0, r1, lsl #4
   11e4c:	adc	r2, r2, r2
   11e50:	subcs	r0, r0, r1, lsl #4
   11e54:	cmp	r0, r1, lsl #3
   11e58:	adc	r2, r2, r2
   11e5c:	subcs	r0, r0, r1, lsl #3
   11e60:	cmp	r0, r1, lsl #2
   11e64:	adc	r2, r2, r2
   11e68:	subcs	r0, r0, r1, lsl #2
   11e6c:	cmp	r0, r1, lsl #1
   11e70:	adc	r2, r2, r2
   11e74:	subcs	r0, r0, r1, lsl #1
   11e78:	cmp	r0, r1
   11e7c:	adc	r2, r2, r2
   11e80:	subcs	r0, r0, r1
   11e84:	mov	r0, r2
   11e88:	bx	lr
   11e8c:	moveq	r0, #1
   11e90:	movne	r0, #0
   11e94:	bx	lr
   11e98:	clz	r2, r1
   11e9c:	rsb	r2, r2, #31
   11ea0:	lsr	r0, r0, r2
   11ea4:	bx	lr
   11ea8:	cmp	r0, #0
   11eac:	mvnne	r0, #0
   11eb0:	b	11f10 <lell_pcapng_close@@Base+0x26c>
   11eb4:	cmp	r1, #0
   11eb8:	beq	11ea8 <lell_pcapng_close@@Base+0x204>
   11ebc:	push	{r0, r1, lr}
   11ec0:	bl	11cc8 <lell_pcapng_close@@Base+0x24>
   11ec4:	pop	{r1, r2, lr}
   11ec8:	mul	r3, r2, r0
   11ecc:	sub	r1, r1, r3
   11ed0:	bx	lr
   11ed4:	cmp	r3, #0
   11ed8:	cmpeq	r2, #0
   11edc:	bne	11ef4 <lell_pcapng_close@@Base+0x250>
   11ee0:	cmp	r1, #0
   11ee4:	cmpeq	r0, #0
   11ee8:	mvnne	r1, #0
   11eec:	mvnne	r0, #0
   11ef0:	b	11f10 <lell_pcapng_close@@Base+0x26c>
   11ef4:	sub	sp, sp, #8
   11ef8:	push	{sp, lr}
   11efc:	bl	11f84 <lell_pcapng_close@@Base+0x2e0>
   11f00:	ldr	lr, [sp, #4]
   11f04:	add	sp, sp, #8
   11f08:	pop	{r2, r3}
   11f0c:	bx	lr
   11f10:	push	{r1, lr}
   11f14:	mov	r0, #8
   11f18:	bl	20d0 <raise@plt>
   11f1c:	pop	{r1, pc}
   11f20:	ldr	ip, [pc, #80]	; 11f78 <lell_pcapng_close@@Base+0x2d4>
   11f24:	ldr	r2, [pc, #80]	; 11f7c <lell_pcapng_close@@Base+0x2d8>
   11f28:	and	r3, ip, r0, lsr #1
   11f2c:	and	ip, ip, r1, lsr #1
   11f30:	sub	ip, r1, ip
   11f34:	sub	r0, r0, r3
   11f38:	and	r3, r0, r2
   11f3c:	and	r1, ip, r2
   11f40:	and	r0, r2, r0, lsr #2
   11f44:	and	r2, r2, ip, lsr #2
   11f48:	add	r3, r3, r0
   11f4c:	add	r1, r1, r2
   11f50:	ldr	r0, [pc, #40]	; 11f80 <lell_pcapng_close@@Base+0x2dc>
   11f54:	add	r1, r1, r1, lsr #4
   11f58:	add	r3, r3, r3, lsr #4
   11f5c:	and	r3, r3, r0
   11f60:	and	r0, r0, r1
   11f64:	add	r0, r0, r3
   11f68:	add	r0, r0, r0, lsl #8
   11f6c:	add	r0, r0, r0, lsl #16
   11f70:	lsr	r0, r0, #24
   11f74:	bx	lr
   11f78:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   11f7c:	teqcc	r3, #-872415232	; 0xcc000000
   11f80:	svceq	0x000f0f0f
   11f84:	cmp	r1, r3
   11f88:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f8c:	cmpeq	r0, r2
   11f90:	mov	r4, r0
   11f94:	mov	r5, r1
   11f98:	ldr	r9, [sp, #28]
   11f9c:	movcc	r0, #0
   11fa0:	movcc	r1, #0
   11fa4:	bcc	1209c <lell_pcapng_close@@Base+0x3f8>
   11fa8:	cmp	r3, #0
   11fac:	clzeq	ip, r2
   11fb0:	clzne	ip, r3
   11fb4:	addeq	ip, ip, #32
   11fb8:	cmp	r5, #0
   11fbc:	clzeq	r1, r4
   11fc0:	addeq	r1, r1, #32
   11fc4:	clzne	r1, r5
   11fc8:	sub	ip, ip, r1
   11fcc:	sub	lr, ip, #32
   11fd0:	lsl	r7, r3, ip
   11fd4:	rsb	r8, ip, #32
   11fd8:	orr	r7, r7, r2, lsl lr
   11fdc:	orr	r7, r7, r2, lsr r8
   11fe0:	lsl	r6, r2, ip
   11fe4:	cmp	r5, r7
   11fe8:	cmpeq	r4, r6
   11fec:	movcc	r0, #0
   11ff0:	movcc	r1, #0
   11ff4:	bcc	12010 <lell_pcapng_close@@Base+0x36c>
   11ff8:	mov	r3, #1
   11ffc:	subs	r4, r4, r6
   12000:	lsl	r1, r3, lr
   12004:	lsl	r0, r3, ip
   12008:	orr	r1, r1, r3, lsr r8
   1200c:	sbc	r5, r5, r7
   12010:	cmp	ip, #0
   12014:	beq	1209c <lell_pcapng_close@@Base+0x3f8>
   12018:	lsrs	r3, r7, #1
   1201c:	rrx	r2, r6
   12020:	mov	r6, ip
   12024:	b	12048 <lell_pcapng_close@@Base+0x3a4>
   12028:	subs	r4, r4, r2
   1202c:	sbc	r5, r5, r3
   12030:	adds	r4, r4, r4
   12034:	adc	r5, r5, r5
   12038:	adds	r4, r4, #1
   1203c:	adc	r5, r5, #0
   12040:	subs	r6, r6, #1
   12044:	beq	12064 <lell_pcapng_close@@Base+0x3c0>
   12048:	cmp	r5, r3
   1204c:	cmpeq	r4, r2
   12050:	bcs	12028 <lell_pcapng_close@@Base+0x384>
   12054:	adds	r4, r4, r4
   12058:	adc	r5, r5, r5
   1205c:	subs	r6, r6, #1
   12060:	bne	12048 <lell_pcapng_close@@Base+0x3a4>
   12064:	lsr	r6, r4, ip
   12068:	lsr	r7, r5, ip
   1206c:	orr	r6, r6, r5, lsl r8
   12070:	adds	r2, r0, r4
   12074:	orr	r6, r6, r5, lsr lr
   12078:	adc	r3, r1, r5
   1207c:	lsl	r1, r7, ip
   12080:	orr	r1, r1, r6, lsl lr
   12084:	lsl	r0, r6, ip
   12088:	orr	r1, r1, r6, lsr r8
   1208c:	subs	r0, r2, r0
   12090:	mov	r4, r6
   12094:	mov	r5, r7
   12098:	sbc	r1, r3, r1
   1209c:	cmp	r9, #0
   120a0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   120a4:	strd	r4, [r9]
   120a8:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

000120ac <.fini>:
   120ac:	push	{r3, lr}
   120b0:	pop	{r3, pc}
