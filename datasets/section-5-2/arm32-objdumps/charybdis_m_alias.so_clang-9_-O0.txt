
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000844 <_init>:
 844:	push	{r3, lr}
 848:	bl	984 <call_weak_fn>
 84c:	pop	{r3, pc}

Disassembly of section .plt:

00000850 <.plt>:
 850:	push	{lr}		; (str lr, [sp, #-4]!)
 854:	ldr	lr, [pc, #4]	; 860 <.plt+0x10>
 858:	add	lr, pc, lr
 85c:	ldr	pc, [lr, #8]!
 860:	.word	0x000117a0

00000864 <calloc@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #1952]!	; 0x7a0

00000870 <mod_del_cmd@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #1944]!	; 0x798

0000087c <__cxa_finalize@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #1936]!	; 0x790

00000888 <sendto_one@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #1928]!	; 0x788

00000894 <free@plt>:
 894:	add	ip, pc, #0, 12
 898:	add	ip, ip, #69632	; 0x11000
 89c:	ldr	pc, [ip, #1920]!	; 0x780

000008a0 <memcpy@plt>:
 8a0:	add	ip, pc, #0, 12
 8a4:	add	ip, ip, #69632	; 0x11000
 8a8:	ldr	pc, [ip, #1912]!	; 0x778

000008ac <rb_outofmemory@plt>:
 8ac:	add	ip, pc, #0, 12
 8b0:	add	ip, ip, #69632	; 0x11000
 8b4:	ldr	pc, [ip, #1904]!	; 0x770

000008b8 <rb_free_rb_dlink_node@plt>:
 8b8:	add	ip, pc, #0, 12
 8bc:	add	ip, ip, #69632	; 0x11000
 8c0:	ldr	pc, [ip, #1896]!	; 0x768

000008c4 <strcpy@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1888]!	; 0x760

000008d0 <rb_dictionary_foreach_start@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1880]!	; 0x758

000008dc <msgbuf_reconstruct_tail@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1872]!	; 0x750

000008e8 <__gmon_start__@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1864]!	; 0x748

000008f4 <rb_make_rb_dlink_node@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1856]!	; 0x740

00000900 <sendto_one_numeric@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1848]!	; 0x738

0000090c <strlen@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1840]!	; 0x730

00000918 <strchr@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1832]!	; 0x728

00000924 <find_server@plt>:
 924:	add	ip, pc, #0, 12
 928:	add	ip, ip, #69632	; 0x11000
 92c:	ldr	pc, [ip, #1824]!	; 0x720

00000930 <rb_dictionary_foreach_cur@plt>:
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #69632	; 0x11000
 938:	ldr	pc, [ip, #1816]!	; 0x718

0000093c <find_named_person@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #69632	; 0x11000
 944:	ldr	pc, [ip, #1808]!	; 0x710

00000948 <flood_endgrace@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #69632	; 0x11000
 950:	ldr	pc, [ip, #1800]!	; 0x708

00000954 <rb_dictionary_foreach_next@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #69632	; 0x11000
 95c:	ldr	pc, [ip, #1792]!	; 0x700

00000960 <mod_add_cmd@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #69632	; 0x11000
 968:	ldr	pc, [ip, #1784]!	; 0x6f8

0000096c <rb_dictionary_retrieve@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #69632	; 0x11000
 974:	ldr	pc, [ip, #1776]!	; 0x6f0

00000978 <__assert_fail@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #69632	; 0x11000
 980:	ldr	pc, [ip, #1768]!	; 0x6e8

Disassembly of section .text:

00000984 <call_weak_fn>:
     984:	ldr	r3, [pc, #20]	; 9a0 <call_weak_fn+0x1c>
     988:	ldr	r2, [pc, #20]	; 9a4 <call_weak_fn+0x20>
     98c:	add	r3, pc, r3
     990:	ldr	r2, [r3, r2]
     994:	cmp	r2, #0
     998:	bxeq	lr
     99c:	b	8e8 <__gmon_start__@plt>
     9a0:	.word	0x0001166c
     9a4:	.word	0x00000078

000009a8 <deregister_tm_clones>:
     9a8:	ldr	r0, [pc, #44]	; 9dc <deregister_tm_clones+0x34>
     9ac:	ldr	r3, [pc, #44]	; 9e0 <deregister_tm_clones+0x38>
     9b0:	add	r0, pc, r0
     9b4:	add	r3, pc, r3
     9b8:	cmp	r3, r0
     9bc:	ldr	r3, [pc, #32]	; 9e4 <deregister_tm_clones+0x3c>
     9c0:	add	r3, pc, r3
     9c4:	bxeq	lr
     9c8:	ldr	r2, [pc, #24]	; 9e8 <deregister_tm_clones+0x40>
     9cc:	ldr	r3, [r3, r2]
     9d0:	cmp	r3, #0
     9d4:	bxeq	lr
     9d8:	bx	r3
     9dc:	.word	0x00011710
     9e0:	.word	0x0001170c
     9e4:	.word	0x00011638
     9e8:	.word	0x00000070

000009ec <register_tm_clones>:
     9ec:	ldr	r0, [pc, #56]	; a2c <register_tm_clones+0x40>
     9f0:	ldr	r3, [pc, #56]	; a30 <register_tm_clones+0x44>
     9f4:	add	r0, pc, r0
     9f8:	add	r3, pc, r3
     9fc:	sub	r1, r3, r0
     a00:	ldr	r3, [pc, #44]	; a34 <register_tm_clones+0x48>
     a04:	asr	r1, r1, #2
     a08:	add	r3, pc, r3
     a0c:	add	r1, r1, r1, lsr #31
     a10:	asrs	r1, r1, #1
     a14:	bxeq	lr
     a18:	ldr	r2, [pc, #24]	; a38 <register_tm_clones+0x4c>
     a1c:	ldr	r3, [r3, r2]
     a20:	cmp	r3, #0
     a24:	bxeq	lr
     a28:	bx	r3
     a2c:	.word	0x000116cc
     a30:	.word	0x000116c8
     a34:	.word	0x000115f0
     a38:	.word	0x0000007c

00000a3c <__do_global_dtors_aux>:
     a3c:	ldr	r3, [pc, #76]	; a90 <__do_global_dtors_aux+0x54>
     a40:	ldr	r2, [pc, #76]	; a94 <__do_global_dtors_aux+0x58>
     a44:	add	r3, pc, r3
     a48:	add	r2, pc, r2
     a4c:	ldrb	r3, [r3]
     a50:	cmp	r3, #0
     a54:	bxne	lr
     a58:	ldr	r3, [pc, #56]	; a98 <__do_global_dtors_aux+0x5c>
     a5c:	push	{r4, lr}
     a60:	ldr	r3, [r2, r3]
     a64:	cmp	r3, #0
     a68:	beq	a78 <__do_global_dtors_aux+0x3c>
     a6c:	ldr	r3, [pc, #40]	; a9c <__do_global_dtors_aux+0x60>
     a70:	ldr	r0, [pc, r3]
     a74:	bl	87c <__cxa_finalize@plt>
     a78:	bl	9a8 <deregister_tm_clones>
     a7c:	ldr	r3, [pc, #28]	; aa0 <__do_global_dtors_aux+0x64>
     a80:	mov	r2, #1
     a84:	add	r3, pc, r3
     a88:	strb	r2, [r3]
     a8c:	pop	{r4, pc}
     a90:	.word	0x0001167c
     a94:	.word	0x000115b0
     a98:	.word	0x0000006c
     a9c:	.word	0x0001160c
     aa0:	.word	0x0001163c

00000aa4 <frame_dummy>:
     aa4:	b	9ec <register_tm_clones>

00000aa8 <reload_aliases>:
     aa8:	push	{fp, lr}
     aac:	mov	fp, sp
     ab0:	sub	sp, sp, #8
     ab4:	str	r0, [sp, #4]
     ab8:	bl	1144 <destroy_aliases>
     abc:	bl	af0 <create_aliases>
     ac0:	movw	r0, #0
     ac4:	mov	sp, fp
     ac8:	pop	{fp, pc}

00000acc <_modinit>:
     acc:	push	{fp, lr}
     ad0:	mov	fp, sp
     ad4:	bl	af0 <create_aliases>
     ad8:	movw	r0, #0
     adc:	pop	{fp, pc}

00000ae0 <_moddeinit>:
     ae0:	push	{fp, lr}
     ae4:	mov	fp, sp
     ae8:	bl	1144 <destroy_aliases>
     aec:	pop	{fp, pc}

00000af0 <create_aliases>:
     af0:	push	{fp, lr}
     af4:	mov	fp, sp
     af8:	sub	sp, sp, #40	; 0x28
     afc:	ldr	r0, [pc, #240]	; bf4 <create_aliases+0x104>
     b00:	ldr	r0, [pc, r0]
     b04:	ldr	r0, [r0]
     b08:	sub	r1, fp, #8
     b0c:	bl	8d0 <rb_dictionary_foreach_start@plt>
     b10:	ldr	r0, [pc, #224]	; bf8 <create_aliases+0x108>
     b14:	ldr	r0, [pc, r0]
     b18:	ldr	r0, [r0]
     b1c:	sub	r1, fp, #8
     b20:	bl	930 <rb_dictionary_foreach_cur@plt>
     b24:	str	r0, [fp, #-12]
     b28:	movw	r1, #0
     b2c:	cmp	r0, r1
     b30:	beq	bec <create_aliases+0xfc>
     b34:	ldr	r0, [fp, #-12]
     b38:	ldr	r0, [r0]
     b3c:	bl	90c <strlen@plt>
     b40:	add	r0, r0, #68	; 0x44
     b44:	add	r0, r0, #1
     b48:	bl	c08 <rb_malloc>
     b4c:	ldr	r1, [pc, #172]	; c00 <create_aliases+0x110>
     b50:	add	r1, pc, r1
     b54:	str	r0, [fp, #-16]
     b58:	ldr	r0, [fp, #-16]
     b5c:	add	r0, r0, #68	; 0x44
     b60:	str	r0, [sp, #20]
     b64:	ldr	r0, [sp, #20]
     b68:	ldr	r2, [fp, #-12]
     b6c:	ldr	r2, [r2]
     b70:	str	r1, [sp, #16]
     b74:	mov	r1, r2
     b78:	bl	8c4 <strcpy@plt>
     b7c:	ldr	r1, [sp, #20]
     b80:	ldr	r2, [fp, #-16]
     b84:	str	r1, [r2]
     b88:	ldr	r1, [fp, #-16]
     b8c:	add	r1, r1, #20
     b90:	str	r0, [sp, #12]
     b94:	mov	r0, r1
     b98:	ldr	r1, [sp, #16]
     b9c:	movw	r2, #48	; 0x30
     ba0:	bl	8a0 <memcpy@plt>
     ba4:	ldr	r0, [fp, #-16]
     ba8:	bl	960 <mod_add_cmd@plt>
     bac:	ldr	r0, [fp, #-16]
     bb0:	str	r0, [sp, #8]
     bb4:	bl	8f4 <rb_make_rb_dlink_node@plt>
     bb8:	ldr	r1, [pc, #60]	; bfc <create_aliases+0x10c>
     bbc:	add	r2, pc, r1
     bc0:	ldr	r1, [sp, #8]
     bc4:	str	r0, [sp, #4]
     bc8:	mov	r0, r1
     bcc:	ldr	r1, [sp, #4]
     bd0:	bl	c60 <rb_dlinkAdd>
     bd4:	ldr	r0, [pc, #40]	; c04 <create_aliases+0x114>
     bd8:	ldr	r0, [pc, r0]
     bdc:	ldr	r0, [r0]
     be0:	sub	r1, fp, #8
     be4:	bl	954 <rb_dictionary_foreach_next@plt>
     be8:	b	b10 <create_aliases+0x20>
     bec:	mov	sp, fp
     bf0:	pop	{fp, pc}
     bf4:	.word	0x0001156c
     bf8:	.word	0x00011558
     bfc:	.word	0x00011508
     c00:	.word	0x00011370
     c04:	.word	0x00011494

00000c08 <rb_malloc>:
     c08:	push	{fp, lr}
     c0c:	mov	fp, sp
     c10:	sub	sp, sp, #8
     c14:	str	r0, [sp, #4]
     c18:	ldr	r1, [sp, #4]
     c1c:	movw	r0, #1
     c20:	bl	864 <calloc@plt>
     c24:	str	r0, [sp]
     c28:	ldr	r0, [sp]
     c2c:	movw	r1, #0
     c30:	cmp	r0, r1
     c34:	movw	r0, #0
     c38:	moveq	r0, #1
     c3c:	mvn	r1, #0
     c40:	eor	r0, r0, r1
     c44:	eor	r0, r0, r1
     c48:	tst	r0, #1
     c4c:	beq	c54 <rb_malloc+0x4c>
     c50:	bl	8ac <rb_outofmemory@plt>
     c54:	ldr	r0, [sp]
     c58:	mov	sp, fp
     c5c:	pop	{fp, pc}

00000c60 <rb_dlinkAdd>:
     c60:	push	{fp, lr}
     c64:	mov	fp, sp
     c68:	sub	sp, sp, #16
     c6c:	str	r0, [fp, #-4]
     c70:	str	r1, [sp, #8]
     c74:	str	r2, [sp, #4]
     c78:	ldr	r0, [fp, #-4]
     c7c:	movw	r1, #0
     c80:	cmp	r0, r1
     c84:	beq	c8c <rb_dlinkAdd+0x2c>
     c88:	b	cac <rb_dlinkAdd+0x4c>
     c8c:	ldr	r0, [pc, #276]	; da8 <rb_dlinkAdd+0x148>
     c90:	add	r0, pc, r0
     c94:	ldr	r1, [pc, #272]	; dac <rb_dlinkAdd+0x14c>
     c98:	add	r1, pc, r1
     c9c:	ldr	r2, [pc, #268]	; db0 <rb_dlinkAdd+0x150>
     ca0:	add	r3, pc, r2
     ca4:	movw	r2, #143	; 0x8f
     ca8:	bl	978 <__assert_fail@plt>
     cac:	ldr	r0, [sp, #8]
     cb0:	movw	r1, #0
     cb4:	cmp	r0, r1
     cb8:	beq	cc0 <rb_dlinkAdd+0x60>
     cbc:	b	ce0 <rb_dlinkAdd+0x80>
     cc0:	ldr	r0, [pc, #236]	; db4 <rb_dlinkAdd+0x154>
     cc4:	add	r0, pc, r0
     cc8:	ldr	r1, [pc, #232]	; db8 <rb_dlinkAdd+0x158>
     ccc:	add	r1, pc, r1
     cd0:	ldr	r2, [pc, #228]	; dbc <rb_dlinkAdd+0x15c>
     cd4:	add	r3, pc, r2
     cd8:	movw	r2, #144	; 0x90
     cdc:	bl	978 <__assert_fail@plt>
     ce0:	ldr	r0, [sp, #4]
     ce4:	movw	r1, #0
     ce8:	cmp	r0, r1
     cec:	beq	cf4 <rb_dlinkAdd+0x94>
     cf0:	b	d14 <rb_dlinkAdd+0xb4>
     cf4:	ldr	r0, [pc, #196]	; dc0 <rb_dlinkAdd+0x160>
     cf8:	add	r0, pc, r0
     cfc:	ldr	r1, [pc, #192]	; dc4 <rb_dlinkAdd+0x164>
     d00:	add	r1, pc, r1
     d04:	ldr	r2, [pc, #188]	; dc8 <rb_dlinkAdd+0x168>
     d08:	add	r3, pc, r2
     d0c:	movw	r2, #145	; 0x91
     d10:	bl	978 <__assert_fail@plt>
     d14:	ldr	r0, [fp, #-4]
     d18:	ldr	r1, [sp, #8]
     d1c:	str	r0, [r1]
     d20:	ldr	r0, [sp, #8]
     d24:	movw	r1, #0
     d28:	str	r1, [r0, #4]
     d2c:	ldr	r0, [sp, #4]
     d30:	ldr	r0, [r0]
     d34:	ldr	r2, [sp, #8]
     d38:	str	r0, [r2, #8]
     d3c:	ldr	r0, [sp, #4]
     d40:	ldr	r0, [r0]
     d44:	cmp	r0, r1
     d48:	beq	d60 <rb_dlinkAdd+0x100>
     d4c:	ldr	r0, [sp, #8]
     d50:	ldr	r1, [sp, #4]
     d54:	ldr	r1, [r1]
     d58:	str	r0, [r1, #4]
     d5c:	b	d84 <rb_dlinkAdd+0x124>
     d60:	ldr	r0, [sp, #4]
     d64:	ldr	r0, [r0, #4]
     d68:	movw	r1, #0
     d6c:	cmp	r0, r1
     d70:	bne	d80 <rb_dlinkAdd+0x120>
     d74:	ldr	r0, [sp, #8]
     d78:	ldr	r1, [sp, #4]
     d7c:	str	r0, [r1, #4]
     d80:	b	d84 <rb_dlinkAdd+0x124>
     d84:	ldr	r0, [sp, #8]
     d88:	ldr	r1, [sp, #4]
     d8c:	str	r0, [r1]
     d90:	ldr	r0, [sp, #4]
     d94:	ldr	r1, [r0, #8]
     d98:	add	r1, r1, #1
     d9c:	str	r1, [r0, #8]
     da0:	mov	sp, fp
     da4:	pop	{fp, pc}
     da8:	.word	0x00000798
     dac:	.word	0x0000079d
     db0:	.word	0x000007b1
     db4:	.word	0x000007c8
     db8:	.word	0x00000769
     dbc:	.word	0x0000077d
     dc0:	.word	0x0000079e
     dc4:	.word	0x00000735
     dc8:	.word	0x00000749

00000dcc <m_alias>:
     dcc:	push	{fp, lr}
     dd0:	mov	fp, sp
     dd4:	sub	sp, sp, #72	; 0x48
     dd8:	ldr	ip, [fp, #8]
     ddc:	ldr	lr, [pc, #836]	; 1128 <m_alias+0x35c>
     de0:	ldr	lr, [pc, lr]
     de4:	str	r0, [fp, #-4]
     de8:	str	r1, [fp, #-8]
     dec:	str	r2, [fp, #-12]
     df0:	str	r3, [fp, #-16]
     df4:	ldr	r0, [lr]
     df8:	ldr	r1, [fp, #-4]
     dfc:	ldr	r1, [r1, #192]	; 0xc0
     e00:	str	ip, [fp, #-32]	; 0xffffffe0
     e04:	bl	96c <rb_dictionary_retrieve@plt>
     e08:	str	r0, [fp, #-24]	; 0xffffffe8
     e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e10:	movw	r1, #0
     e14:	cmp	r0, r1
     e18:	bne	e74 <m_alias+0xa8>
     e1c:	ldr	r0, [fp, #-8]
     e20:	ldrh	r0, [r0, #80]	; 0x50
     e24:	cmp	r0, #64	; 0x40
     e28:	bne	e70 <m_alias+0xa4>
     e2c:	ldr	r0, [fp, #-8]
     e30:	ldr	r0, [r0, #24]
     e34:	movw	r1, #0
     e38:	cmp	r0, r1
     e3c:	beq	e70 <m_alias+0xa4>
     e40:	ldr	r0, [pc, #756]	; 113c <m_alias+0x370>
     e44:	add	r1, pc, r0
     e48:	ldr	r0, [pc, #752]	; 1140 <m_alias+0x374>
     e4c:	ldr	r0, [pc, r0]
     e50:	add	r2, r0, #88	; 0x58
     e54:	ldr	r0, [fp, #-8]
     e58:	ldr	r3, [fp, #-8]
     e5c:	add	r3, r3, #88	; 0x58
     e60:	ldr	ip, [fp, #-4]
     e64:	ldr	ip, [ip, #192]	; 0xc0
     e68:	str	ip, [sp]
     e6c:	bl	888 <sendto_one@plt>
     e70:	b	1120 <m_alias+0x354>
     e74:	ldr	r0, [fp, #-8]
     e78:	ldrb	r0, [r0, #65]	; 0x41
     e7c:	tst	r0, #1
     e80:	bne	ea4 <m_alias+0xd8>
     e84:	b	e88 <m_alias+0xbc>
     e88:	ldr	r0, [fp, #-8]
     e8c:	ldr	r0, [r0, #432]	; 0x1b0
     e90:	ldr	r0, [r0, #116]	; 0x74
     e94:	cmp	r0, #20
     e98:	bls	ea4 <m_alias+0xd8>
     e9c:	ldr	r0, [fp, #-8]
     ea0:	bl	948 <flood_endgrace@plt>
     ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ea8:	ldr	r0, [r0, #4]
     eac:	movw	r1, #64	; 0x40
     eb0:	bl	918 <strchr@plt>
     eb4:	str	r0, [fp, #-28]	; 0xffffffe4
     eb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ebc:	movw	r1, #0
     ec0:	cmp	r0, r1
     ec4:	beq	f08 <m_alias+0x13c>
     ec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ecc:	add	r1, r0, #1
     ed0:	movw	r0, #0
     ed4:	bl	924 <find_server@plt>
     ed8:	str	r0, [fp, #-20]	; 0xffffffec
     edc:	ldr	r0, [fp, #-20]	; 0xffffffec
     ee0:	movw	r1, #0
     ee4:	cmp	r0, r1
     ee8:	beq	f04 <m_alias+0x138>
     eec:	ldr	r0, [fp, #-20]	; 0xffffffec
     ef0:	ldrh	r0, [r0, #80]	; 0x50
     ef4:	cmp	r0, #4
     ef8:	bne	f04 <m_alias+0x138>
     efc:	movw	r0, #0
     f00:	str	r0, [fp, #-20]	; 0xffffffec
     f04:	b	f48 <m_alias+0x17c>
     f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f0c:	ldr	r0, [r0, #4]
     f10:	bl	93c <find_named_person@plt>
     f14:	str	r0, [fp, #-20]	; 0xffffffec
     f18:	ldr	r0, [fp, #-20]	; 0xffffffec
     f1c:	movw	r1, #0
     f20:	cmp	r0, r1
     f24:	beq	f44 <m_alias+0x178>
     f28:	ldr	r0, [fp, #-20]	; 0xffffffec
     f2c:	ldr	r0, [r0, #56]	; 0x38
     f30:	and	r0, r0, #64	; 0x40
     f34:	cmp	r0, #0
     f38:	bne	f44 <m_alias+0x178>
     f3c:	movw	r0, #0
     f40:	str	r0, [fp, #-20]	; 0xffffffec
     f44:	b	f48 <m_alias+0x17c>
     f48:	ldr	r0, [fp, #-20]	; 0xffffffec
     f4c:	movw	r1, #0
     f50:	cmp	r0, r1
     f54:	bne	f78 <m_alias+0x1ac>
     f58:	ldr	r0, [pc, #472]	; 1138 <m_alias+0x36c>
     f5c:	add	r2, pc, r0
     f60:	ldr	r0, [fp, #-8]
     f64:	ldr	r1, [fp, #-24]	; 0xffffffe8
     f68:	ldr	r3, [r1, #4]
     f6c:	movw	r1, #440	; 0x1b8
     f70:	bl	900 <sendto_one_numeric@plt>
     f74:	b	1120 <m_alias+0x354>
     f78:	ldr	r0, [fp, #-4]
     f7c:	movw	r1, #1
     f80:	bl	8dc <msgbuf_reconstruct_tail@plt>
     f84:	ldr	r0, [fp, #8]
     f88:	ldr	r0, [r0, #4]
     f8c:	movw	r1, #0
     f90:	cmp	r0, r1
     f94:	beq	fac <m_alias+0x1e0>
     f98:	ldr	r0, [fp, #8]
     f9c:	ldr	r0, [r0, #4]
     fa0:	ldrb	r0, [r0]
     fa4:	cmp	r0, #0
     fa8:	bne	fd4 <m_alias+0x208>
     fac:	ldr	r0, [pc, #380]	; 1130 <m_alias+0x364>
     fb0:	add	r1, pc, r0
     fb4:	ldr	r0, [pc, #376]	; 1134 <m_alias+0x368>
     fb8:	ldr	r0, [pc, r0]
     fbc:	add	r2, r0, #88	; 0x58
     fc0:	ldr	r0, [fp, #-8]
     fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     fc8:	add	r3, r3, #88	; 0x58
     fcc:	bl	888 <sendto_one@plt>
     fd0:	b	1120 <m_alias+0x354>
     fd4:	ldr	r0, [fp, #-20]	; 0xffffffec
     fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
     fdc:	ldr	r1, [r1, #36]	; 0x24
     fe0:	ldrh	r1, [r1, #80]	; 0x50
     fe4:	cmp	r1, #32
     fe8:	str	r0, [sp, #36]	; 0x24
     fec:	bne	103c <m_alias+0x270>
     ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
     ff4:	ldr	r0, [r0, #36]	; 0x24
     ff8:	ldrb	r0, [r0, #396]	; 0x18c
     ffc:	cmp	r0, #0
    1000:	beq	103c <m_alias+0x270>
    1004:	ldr	r0, [fp, #-8]
    1008:	ldrb	r0, [r0, #396]	; 0x18c
    100c:	cmp	r0, #0
    1010:	beq	1024 <m_alias+0x258>
    1014:	ldr	r0, [fp, #-8]
    1018:	add	r0, r0, #396	; 0x18c
    101c:	str	r0, [sp, #32]
    1020:	b	1030 <m_alias+0x264>
    1024:	ldr	r0, [fp, #-8]
    1028:	add	r0, r0, #88	; 0x58
    102c:	str	r0, [sp, #32]
    1030:	ldr	r0, [sp, #32]
    1034:	str	r0, [sp, #28]
    1038:	b	1048 <m_alias+0x27c>
    103c:	ldr	r0, [fp, #-8]
    1040:	add	r0, r0, #88	; 0x58
    1044:	str	r0, [sp, #28]
    1048:	ldr	r0, [sp, #28]
    104c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1050:	movw	r2, #0
    1054:	cmp	r1, r2
    1058:	str	r0, [sp, #24]
    105c:	beq	1070 <m_alias+0x2a4>
    1060:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1064:	ldr	r0, [r0, #4]
    1068:	str	r0, [sp, #20]
    106c:	b	10e4 <m_alias+0x318>
    1070:	ldr	r0, [fp, #-20]	; 0xffffffec
    1074:	ldr	r0, [r0, #36]	; 0x24
    1078:	ldrh	r0, [r0, #80]	; 0x50
    107c:	cmp	r0, #32
    1080:	bne	10d0 <m_alias+0x304>
    1084:	ldr	r0, [fp, #-20]	; 0xffffffec
    1088:	ldr	r0, [r0, #36]	; 0x24
    108c:	ldrb	r0, [r0, #396]	; 0x18c
    1090:	cmp	r0, #0
    1094:	beq	10d0 <m_alias+0x304>
    1098:	ldr	r0, [fp, #-20]	; 0xffffffec
    109c:	ldrb	r0, [r0, #396]	; 0x18c
    10a0:	cmp	r0, #0
    10a4:	beq	10b8 <m_alias+0x2ec>
    10a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    10ac:	add	r0, r0, #396	; 0x18c
    10b0:	str	r0, [sp, #16]
    10b4:	b	10c4 <m_alias+0x2f8>
    10b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    10bc:	add	r0, r0, #88	; 0x58
    10c0:	str	r0, [sp, #16]
    10c4:	ldr	r0, [sp, #16]
    10c8:	str	r0, [sp, #12]
    10cc:	b	10dc <m_alias+0x310>
    10d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    10d4:	add	r0, r0, #88	; 0x58
    10d8:	str	r0, [sp, #12]
    10dc:	ldr	r0, [sp, #12]
    10e0:	str	r0, [sp, #20]
    10e4:	ldr	r0, [sp, #20]
    10e8:	ldr	r1, [pc, #60]	; 112c <m_alias+0x360>
    10ec:	add	r1, pc, r1
    10f0:	ldr	r2, [fp, #8]
    10f4:	ldr	r2, [r2, #4]
    10f8:	ldr	r3, [sp, #36]	; 0x24
    10fc:	str	r0, [sp, #8]
    1100:	mov	r0, r3
    1104:	ldr	ip, [sp, #24]
    1108:	str	r2, [sp, #4]
    110c:	mov	r2, ip
    1110:	ldr	r3, [sp, #8]
    1114:	ldr	lr, [sp, #4]
    1118:	str	lr, [sp]
    111c:	bl	888 <sendto_one@plt>
    1120:	mov	sp, fp
    1124:	pop	{fp, pc}
    1128:	.word	0x0001128c
    112c:	.word	0x00000329
    1130:	.word	0x00000449
    1134:	.word	0x000110c0
    1138:	.word	0x00000476
    113c:	.word	0x0000056f
    1140:	.word	0x0001122c

00001144 <destroy_aliases>:
    1144:	push	{fp, lr}
    1148:	mov	fp, sp
    114c:	sub	sp, sp, #16
    1150:	ldr	r0, [pc, #200]	; 1220 <destroy_aliases+0xdc>
    1154:	add	r0, pc, r0
    1158:	ldr	r0, [r0]
    115c:	str	r0, [fp, #-4]
    1160:	ldr	r0, [fp, #-4]
    1164:	movw	r1, #0
    1168:	cmp	r0, r1
    116c:	beq	1180 <destroy_aliases+0x3c>
    1170:	ldr	r0, [fp, #-4]
    1174:	ldr	r0, [r0, #8]
    1178:	str	r0, [sp, #4]
    117c:	b	118c <destroy_aliases+0x48>
    1180:	movw	r0, #0
    1184:	str	r0, [sp, #4]
    1188:	b	118c <destroy_aliases+0x48>
    118c:	ldr	r0, [sp, #4]
    1190:	str	r0, [sp, #8]
    1194:	ldr	r0, [fp, #-4]
    1198:	movw	r1, #0
    119c:	cmp	r0, r1
    11a0:	beq	1218 <destroy_aliases+0xd4>
    11a4:	ldr	r0, [fp, #-4]
    11a8:	ldr	r0, [r0]
    11ac:	bl	870 <mod_del_cmd@plt>
    11b0:	ldr	r0, [fp, #-4]
    11b4:	ldr	r0, [r0]
    11b8:	bl	1228 <rb_free>
    11bc:	ldr	r0, [pc, #96]	; 1224 <destroy_aliases+0xe0>
    11c0:	add	r1, pc, r0
    11c4:	ldr	r0, [fp, #-4]
    11c8:	bl	1270 <rb_dlinkDelete>
    11cc:	ldr	r0, [fp, #-4]
    11d0:	bl	8b8 <rb_free_rb_dlink_node@plt>
    11d4:	b	11d8 <destroy_aliases+0x94>
    11d8:	ldr	r0, [sp, #8]
    11dc:	str	r0, [fp, #-4]
    11e0:	ldr	r0, [fp, #-4]
    11e4:	movw	r1, #0
    11e8:	cmp	r0, r1
    11ec:	beq	1200 <destroy_aliases+0xbc>
    11f0:	ldr	r0, [fp, #-4]
    11f4:	ldr	r0, [r0, #8]
    11f8:	str	r0, [sp]
    11fc:	b	120c <destroy_aliases+0xc8>
    1200:	movw	r0, #0
    1204:	str	r0, [sp]
    1208:	b	120c <destroy_aliases+0xc8>
    120c:	ldr	r0, [sp]
    1210:	str	r0, [sp, #8]
    1214:	b	1194 <destroy_aliases+0x50>
    1218:	mov	sp, fp
    121c:	pop	{fp, pc}
    1220:	.word	0x00010f70
    1224:	.word	0x00010f04

00001228 <rb_free>:
    1228:	push	{fp, lr}
    122c:	mov	fp, sp
    1230:	sub	sp, sp, #8
    1234:	str	r0, [sp, #4]
    1238:	ldr	r0, [sp, #4]
    123c:	movw	r1, #0
    1240:	cmp	r0, r1
    1244:	movw	r0, #0
    1248:	movne	r0, #1
    124c:	mvn	r1, #0
    1250:	eor	r0, r0, r1
    1254:	eor	r0, r0, r1
    1258:	tst	r0, #1
    125c:	beq	1268 <rb_free+0x40>
    1260:	ldr	r0, [sp, #4]
    1264:	bl	894 <free@plt>
    1268:	mov	sp, fp
    126c:	pop	{fp, pc}

00001270 <rb_dlinkDelete>:
    1270:	push	{fp, lr}
    1274:	mov	fp, sp
    1278:	sub	sp, sp, #8
    127c:	str	r0, [sp, #4]
    1280:	str	r1, [sp]
    1284:	ldr	r0, [sp, #4]
    1288:	movw	r1, #0
    128c:	cmp	r0, r1
    1290:	beq	1298 <rb_dlinkDelete+0x28>
    1294:	b	12b8 <rb_dlinkDelete+0x48>
    1298:	ldr	r0, [pc, #244]	; 1394 <rb_dlinkDelete+0x124>
    129c:	add	r0, pc, r0
    12a0:	ldr	r1, [pc, #240]	; 1398 <rb_dlinkDelete+0x128>
    12a4:	add	r1, pc, r1
    12a8:	ldr	r2, [pc, #236]	; 139c <rb_dlinkDelete+0x12c>
    12ac:	add	r3, pc, r2
    12b0:	movw	r2, #235	; 0xeb
    12b4:	bl	978 <__assert_fail@plt>
    12b8:	ldr	r0, [sp]
    12bc:	movw	r1, #0
    12c0:	cmp	r0, r1
    12c4:	beq	12cc <rb_dlinkDelete+0x5c>
    12c8:	b	12ec <rb_dlinkDelete+0x7c>
    12cc:	ldr	r0, [pc, #204]	; 13a0 <rb_dlinkDelete+0x130>
    12d0:	add	r0, pc, r0
    12d4:	ldr	r1, [pc, #200]	; 13a4 <rb_dlinkDelete+0x134>
    12d8:	add	r1, pc, r1
    12dc:	ldr	r2, [pc, #196]	; 13a8 <rb_dlinkDelete+0x138>
    12e0:	add	r3, pc, r2
    12e4:	movw	r2, #236	; 0xec
    12e8:	bl	978 <__assert_fail@plt>
    12ec:	ldr	r0, [sp, #4]
    12f0:	ldr	r0, [r0, #8]
    12f4:	movw	r1, #0
    12f8:	cmp	r0, r1
    12fc:	beq	1318 <rb_dlinkDelete+0xa8>
    1300:	ldr	r0, [sp, #4]
    1304:	ldr	r0, [r0, #4]
    1308:	ldr	r1, [sp, #4]
    130c:	ldr	r1, [r1, #8]
    1310:	str	r0, [r1, #4]
    1314:	b	1328 <rb_dlinkDelete+0xb8>
    1318:	ldr	r0, [sp, #4]
    131c:	ldr	r0, [r0, #4]
    1320:	ldr	r1, [sp]
    1324:	str	r0, [r1, #4]
    1328:	ldr	r0, [sp, #4]
    132c:	ldr	r0, [r0, #4]
    1330:	movw	r1, #0
    1334:	cmp	r0, r1
    1338:	beq	1354 <rb_dlinkDelete+0xe4>
    133c:	ldr	r0, [sp, #4]
    1340:	ldr	r0, [r0, #8]
    1344:	ldr	r1, [sp, #4]
    1348:	ldr	r1, [r1, #4]
    134c:	str	r0, [r1, #8]
    1350:	b	1364 <rb_dlinkDelete+0xf4>
    1354:	ldr	r0, [sp, #4]
    1358:	ldr	r0, [r0, #8]
    135c:	ldr	r1, [sp]
    1360:	str	r0, [r1]
    1364:	ldr	r0, [sp, #4]
    1368:	movw	r1, #0
    136c:	str	r1, [r0, #4]
    1370:	ldr	r0, [sp, #4]
    1374:	str	r1, [r0, #8]
    1378:	ldr	r0, [sp]
    137c:	ldr	r1, [r0, #8]
    1380:	mvn	r2, #0
    1384:	add	r1, r1, r2
    1388:	str	r1, [r0, #8]
    138c:	mov	sp, fp
    1390:	pop	{fp, pc}
    1394:	.word	0x000001f0
    1398:	.word	0x00000191
    139c:	.word	0x000001f7
    13a0:	.word	0x000001c6
    13a4:	.word	0x0000015d
    13a8:	.word	0x000001c3

Disassembly of section .fini:

000013ac <_fini>:
    13ac:	push	{r3, lr}
    13b0:	pop	{r3, pc}
