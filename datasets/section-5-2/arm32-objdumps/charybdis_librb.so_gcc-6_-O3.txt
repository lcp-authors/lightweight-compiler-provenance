
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

00004344 <_init>:
    4344:	push	{r3, lr}
    4348:	bl	4d28 <call_weak_fn>
    434c:	pop	{r3, pc}

Disassembly of section .plt:

00004350 <.plt>:
    4350:	push	{lr}		; (str lr, [sp, #-4]!)
    4354:	ldr	lr, [pc, #4]	; 4360 <.plt+0x10>
    4358:	add	lr, pc, lr
    435c:	ldr	pc, [lr, #8]!
    4360:	.word	0x00028ca0

00004364 <rb_helper_run@plt>:
    4364:	add	ip, pc, #0, 12
    4368:	add	ip, ip, #40, 20	; 0x28000
    436c:	ldr	pc, [ip, #3232]!	; 0xca0

00004370 <TLS_method@plt>:
    4370:	add	ip, pc, #0, 12
    4374:	add	ip, ip, #40, 20	; 0x28000
    4378:	ldr	pc, [ip, #3224]!	; 0xc98

0000437c <open@plt>:
    437c:	add	ip, pc, #0, 12
    4380:	add	ip, ip, #40, 20	; 0x28000
    4384:	ldr	pc, [ip, #3216]!	; 0xc90

00004388 <rb_init_netio@plt>:
    4388:	add	ip, pc, #0, 12
    438c:	add	ip, ip, #40, 20	; 0x28000
    4390:	ldr	pc, [ip, #3208]!	; 0xc88

00004394 <sigemptyset@plt>:
    4394:	add	ip, pc, #0, 12
    4398:	add	ip, ip, #40, 20	; 0x28000
    439c:	ldr	pc, [ip, #3200]!	; 0xc80

000043a0 <strerror@plt>:
    43a0:	add	ip, pc, #0, 12
    43a4:	add	ip, ip, #40, 20	; 0x28000
    43a8:	ldr	pc, [ip, #3192]!	; 0xc78

000043ac <rb_radixtree_elem_delete@plt>:
    43ac:	add	ip, pc, #0, 12
    43b0:	add	ip, ip, #40, 20	; 0x28000
    43b4:	ldr	pc, [ip, #3184]!	; 0xc70

000043b8 <getdtablesize@plt>:
    43b8:	add	ip, pc, #0, 12
    43bc:	add	ip, ip, #40, 20	; 0x28000
    43c0:	ldr	pc, [ip, #3176]!	; 0xc68

000043c4 <abort@plt>:
    43c4:	add	ip, pc, #0, 12
    43c8:	add	ip, ip, #40, 20	; 0x28000
    43cc:	ldr	pc, [ip, #3168]!	; 0xc60

000043d0 <connect@plt>:
    43d0:	add	ip, pc, #0, 12
    43d4:	add	ip, ip, #40, 20	; 0x28000
    43d8:	ldr	pc, [ip, #3160]!	; 0xc58

000043dc <rb_ignore_errno@plt>:
    43dc:	add	ip, pc, #0, 12
    43e0:	add	ip, ip, #40, 20	; 0x28000
    43e4:	ldr	pc, [ip, #3152]!	; 0xc50

000043e8 <rb_settimeout@plt>:
    43e8:	add	ip, pc, #0, 12
    43ec:	add	ip, ip, #40, 20	; 0x28000
    43f0:	ldr	pc, [ip, #3144]!	; 0xc48

000043f4 <SSL_CTX_set_cipher_list@plt>:
    43f4:	add	ip, pc, #0, 12
    43f8:	add	ip, ip, #40, 20	; 0x28000
    43fc:	ldr	pc, [ip, #3136]!	; 0xc40

00004400 <ERR_get_error@plt>:
    4400:	add	ip, pc, #0, 12
    4404:	add	ip, ip, #40, 20	; 0x28000
    4408:	ldr	pc, [ip, #3128]!	; 0xc38

0000440c <rb_radixtree_foreach_start@plt>:
    440c:	add	ip, pc, #0, 12
    4410:	add	ip, ip, #40, 20	; 0x28000
    4414:	ldr	pc, [ip, #3120]!	; 0xc30

00004418 <strcasestr@plt>:
    4418:	add	ip, pc, #0, 12
    441c:	add	ip, ip, #40, 20	; 0x28000
    4420:	ldr	pc, [ip, #3112]!	; 0xc28

00004424 <rb_connect_tcp@plt>:
    4424:	add	ip, pc, #0, 12
    4428:	add	ip, ip, #40, 20	; 0x28000
    442c:	ldr	pc, [ip, #3104]!	; 0xc20

00004430 <RAND_load_file@plt>:
    4430:	add	ip, pc, #0, 12
    4434:	add	ip, ip, #40, 20	; 0x28000
    4438:	ldr	pc, [ip, #3096]!	; 0xc18

0000443c <signalfd@plt>:
    443c:	add	ip, pc, #0, 12
    4440:	add	ip, ip, #40, 20	; 0x28000
    4444:	ldr	pc, [ip, #3088]!	; 0xc10

00004448 <rb_radixtree_foreach_next@plt>:
    4448:	add	ip, pc, #0, 12
    444c:	add	ip, ip, #40, 20	; 0x28000
    4450:	ldr	pc, [ip, #3080]!	; 0xc08

00004454 <memcmp@plt>:
    4454:	add	ip, pc, #0, 12
    4458:	add	ip, ip, #40, 20	; 0x28000
    445c:	ldr	pc, [ip, #3072]!	; 0xc00

00004460 <SSL_CTX_free@plt>:
    4460:	add	ip, pc, #0, 12
    4464:	add	ip, ip, #40, 20	; 0x28000
    4468:	ldr	pc, [ip, #3064]!	; 0xbf8

0000446c <rb_getmaxconnect@plt>:
    446c:	add	ip, pc, #0, 12
    4470:	add	ip, ip, #40, 20	; 0x28000
    4474:	ldr	pc, [ip, #3056]!	; 0xbf0

00004478 <sigwaitinfo@plt>:
    4478:	add	ip, pc, #0, 12
    447c:	add	ip, ip, #40, 20	; 0x28000
    4480:	ldr	pc, [ip, #3048]!	; 0xbe8

00004484 <__libc_current_sigrtmin@plt>:
    4484:	add	ip, pc, #0, 12
    4488:	add	ip, ip, #40, 20	; 0x28000
    448c:	ldr	pc, [ip, #3040]!	; 0xbe0

00004490 <__xstat@plt>:
    4490:	add	ip, pc, #0, 12
    4494:	add	ip, ip, #40, 20	; 0x28000
    4498:	ldr	pc, [ip, #3032]!	; 0xbd8

0000449c <rb_event_delete@plt>:
    449c:	add	ip, pc, #0, 12
    44a0:	add	ip, ip, #40, 20	; 0x28000
    44a4:	ldr	pc, [ip, #3024]!	; 0xbd0

000044a8 <rb_setselect@plt>:
    44a8:	add	ip, pc, #0, 12
    44ac:	add	ip, ip, #40, 20	; 0x28000
    44b0:	ldr	pc, [ip, #3016]!	; 0xbc8

000044b4 <rb_fd_ssl@plt>:
    44b4:	add	ip, pc, #0, 12
    44b8:	add	ip, ip, #40, 20	; 0x28000
    44bc:	ldr	pc, [ip, #3008]!	; 0xbc0

000044c0 <sigtimedwait@plt>:
    44c0:	add	ip, pc, #0, 12
    44c4:	add	ip, ip, #40, 20	; 0x28000
    44c8:	ldr	pc, [ip, #3000]!	; 0xbb8

000044cc <rb_setenv@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #40, 20	; 0x28000
    44d4:	ldr	pc, [ip, #2992]!	; 0xbb0

000044d8 <signal@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #40, 20	; 0x28000
    44e0:	ldr	pc, [ip, #2984]!	; 0xba8

000044e4 <rb_get_fd@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #40, 20	; 0x28000
    44ec:	ldr	pc, [ip, #2976]!	; 0xba0

000044f0 <epoll_create@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #40, 20	; 0x28000
    44f8:	ldr	pc, [ip, #2968]!	; 0xb98

000044fc <rb_clear_patricia@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #40, 20	; 0x28000
    4504:	ldr	pc, [ip, #2960]!	; 0xb90

00004508 <__gmon_start__@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #40, 20	; 0x28000
    4510:	ldr	pc, [ip, #2952]!	; 0xb88

00004514 <SSL_CTX_clear_options@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #40, 20	; 0x28000
    451c:	ldr	pc, [ip, #2944]!	; 0xb80

00004520 <SSL_get_current_cipher@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #40, 20	; 0x28000
    4528:	ldr	pc, [ip, #2936]!	; 0xb78

0000452c <timer_create@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #40, 20	; 0x28000
    4534:	ldr	pc, [ip, #2928]!	; 0xb70

00004538 <X509_get_X509_PUBKEY@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #40, 20	; 0x28000
    4540:	ldr	pc, [ip, #2920]!	; 0xb68

00004544 <rb_select@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #40, 20	; 0x28000
    454c:	ldr	pc, [ip, #2912]!	; 0xb60

00004550 <rb_patricia_search_best@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #40, 20	; 0x28000
    4558:	ldr	pc, [ip, #2904]!	; 0xb58

0000455c <vsnprintf@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #40, 20	; 0x28000
    4564:	ldr	pc, [ip, #2896]!	; 0xb50

00004568 <socketpair@plt>:
    4568:	add	ip, pc, #0, 12
    456c:	add	ip, ip, #40, 20	; 0x28000
    4570:	ldr	pc, [ip, #2888]!	; 0xb48

00004574 <strncpy@plt>:
    4574:	add	ip, pc, #0, 12
    4578:	add	ip, ip, #40, 20	; 0x28000
    457c:	ldr	pc, [ip, #2880]!	; 0xb40

00004580 <fclose@plt>:
    4580:	add	ip, pc, #0, 12
    4584:	add	ip, ip, #40, 20	; 0x28000
    4588:	ldr	pc, [ip, #2872]!	; 0xb38

0000458c <recv@plt>:
    458c:	add	ip, pc, #0, 12
    4590:	add	ip, ip, #40, 20	; 0x28000
    4594:	ldr	pc, [ip, #2864]!	; 0xb30

00004598 <getenv@plt>:
    4598:	add	ip, pc, #0, 12
    459c:	add	ip, ip, #40, 20	; 0x28000
    45a0:	ldr	pc, [ip, #2856]!	; 0xb28

000045a4 <ERR_error_string_n@plt>:
    45a4:	add	ip, pc, #0, 12
    45a8:	add	ip, ip, #40, 20	; 0x28000
    45ac:	ldr	pc, [ip, #2848]!	; 0xb20

000045b0 <strchr@plt>:
    45b0:	add	ip, pc, #0, 12
    45b4:	add	ip, ip, #40, 20	; 0x28000
    45b8:	ldr	pc, [ip, #2840]!	; 0xb18

000045bc <rb_gettimeofday@plt>:
    45bc:	add	ip, pc, #0, 12
    45c0:	add	ip, ip, #40, 20	; 0x28000
    45c4:	ldr	pc, [ip, #2832]!	; 0xb10

000045c8 <strcasecmp@plt>:
    45c8:	add	ip, pc, #0, 12
    45cc:	add	ip, ip, #40, 20	; 0x28000
    45d0:	ldr	pc, [ip, #2824]!	; 0xb08

000045d4 <rb_helper_restart@plt>:
    45d4:	add	ip, pc, #0, 12
    45d8:	add	ip, ip, #40, 20	; 0x28000
    45dc:	ldr	pc, [ip, #2816]!	; 0xb00

000045e0 <listen@plt>:
    45e0:	add	ip, pc, #0, 12
    45e4:	add	ip, ip, #40, 20	; 0x28000
    45e8:	ldr	pc, [ip, #2808]!	; 0xaf8

000045ec <calloc@plt>:
    45ec:	add	ip, pc, #0, 12
    45f0:	add	ip, ip, #40, 20	; 0x28000
    45f4:	ldr	pc, [ip, #2800]!	; 0xaf0

000045f8 <SSL_write@plt>:
    45f8:	add	ip, pc, #0, 12
    45fc:	add	ip, ip, #40, 20	; 0x28000
    4600:	ldr	pc, [ip, #2792]!	; 0xae8

00004604 <rb_event_init@plt>:
    4604:	add	ip, pc, #0, 12
    4608:	add	ip, ip, #40, 20	; 0x28000
    460c:	ldr	pc, [ip, #2784]!	; 0xae0

00004610 <fopen@plt>:
    4610:	add	ip, pc, #0, 12
    4614:	add	ip, ip, #40, 20	; 0x28000
    4618:	ldr	pc, [ip, #2776]!	; 0xad8

0000461c <rb_set_nb@plt>:
    461c:	add	ip, pc, #0, 12
    4620:	add	ip, ip, #40, 20	; 0x28000
    4624:	ldr	pc, [ip, #2768]!	; 0xad0

00004628 <memset@plt>:
    4628:	add	ip, pc, #0, 12
    462c:	add	ip, ip, #40, 20	; 0x28000
    4630:	ldr	pc, [ip, #2760]!	; 0xac8

00004634 <rb_inet_pton@plt>:
    4634:	add	ip, pc, #0, 12
    4638:	add	ip, ip, #40, 20	; 0x28000
    463c:	ldr	pc, [ip, #2752]!	; 0xac0

00004640 <rb_radixtree_stats@plt>:
    4640:	add	ip, pc, #0, 12
    4644:	add	ip, ip, #40, 20	; 0x28000
    4648:	ldr	pc, [ip, #2744]!	; 0xab8

0000464c <strrchr@plt>:
    464c:	add	ip, pc, #0, 12
    4650:	add	ip, ip, #40, 20	; 0x28000
    4654:	ldr	pc, [ip, #2736]!	; 0xab0

00004658 <rb_write@plt>:
    4658:	add	ip, pc, #0, 12
    465c:	add	ip, ip, #40, 20	; 0x28000
    4660:	ldr	pc, [ip, #2728]!	; 0xaa8

00004664 <SSL_set_fd@plt>:
    4664:	add	ip, pc, #0, 12
    4668:	add	ip, ip, #40, 20	; 0x28000
    466c:	ldr	pc, [ip, #2720]!	; 0xaa0

00004670 <SSL_CTX_ctrl@plt>:
    4670:	add	ip, pc, #0, 12
    4674:	add	ip, ip, #40, 20	; 0x28000
    4678:	ldr	pc, [ip, #2712]!	; 0xa98

0000467c <rb_linebuf_parse@plt>:
    467c:	add	ip, pc, #0, 12
    4680:	add	ip, ip, #40, 20	; 0x28000
    4684:	ldr	pc, [ip, #2704]!	; 0xa90

00004688 <writev@plt>:
    4688:	add	ip, pc, #0, 12
    468c:	add	ip, ip, #40, 20	; 0x28000
    4690:	ldr	pc, [ip, #2696]!	; 0xa88

00004694 <rb_fsnprint@plt>:
    4694:	add	ip, pc, #0, 12
    4698:	add	ip, ip, #40, 20	; 0x28000
    469c:	ldr	pc, [ip, #2688]!	; 0xa80

000046a0 <rb_strlcpy@plt>:
    46a0:	add	ip, pc, #0, 12
    46a4:	add	ip, ip, #40, 20	; 0x28000
    46a8:	ldr	pc, [ip, #2680]!	; 0xa78

000046ac <rb_patricia_search_best2@plt>:
    46ac:	add	ip, pc, #0, 12
    46b0:	add	ip, ip, #40, 20	; 0x28000
    46b4:	ldr	pc, [ip, #2672]!	; 0xa70

000046b8 <SSL_CIPHER_get_name@plt>:
    46b8:	add	ip, pc, #0, 12
    46bc:	add	ip, ip, #40, 20	; 0x28000
    46c0:	ldr	pc, [ip, #2664]!	; 0xa68

000046c4 <posix_spawnattr_init@plt>:
    46c4:	add	ip, pc, #0, 12
    46c8:	add	ip, ip, #40, 20	; 0x28000
    46cc:	ldr	pc, [ip, #2656]!	; 0xa60

000046d0 <OpenSSL_version_num@plt>:
    46d0:	add	ip, pc, #0, 12
    46d4:	add	ip, ip, #40, 20	; 0x28000
    46d8:	ldr	pc, [ip, #2648]!	; 0xa58

000046dc <rb_dictionary_foreach_next@plt>:
    46dc:	add	ip, pc, #0, 12
    46e0:	add	ip, ip, #40, 20	; 0x28000
    46e4:	ldr	pc, [ip, #2640]!	; 0xa50

000046e8 <rb_kill@plt>:
    46e8:	add	ip, pc, #0, 12
    46ec:	add	ip, ip, #40, 20	; 0x28000
    46f0:	ldr	pc, [ip, #2632]!	; 0xa48

000046f4 <free@plt>:
    46f4:	add	ip, pc, #0, 12
    46f8:	add	ip, ip, #40, 20	; 0x28000
    46fc:	ldr	pc, [ip, #2624]!	; 0xa40

00004700 <sendmsg@plt>:
    4700:	add	ip, pc, #0, 12
    4704:	add	ip, ip, #40, 20	; 0x28000
    4708:	ldr	pc, [ip, #2616]!	; 0xa38

0000470c <read@plt>:
    470c:	add	ip, pc, #0, 12
    4710:	add	ip, ip, #40, 20	; 0x28000
    4714:	ldr	pc, [ip, #2608]!	; 0xa30

00004718 <rb_radixtree_elem_add@plt>:
    4718:	add	ip, pc, #0, 12
    471c:	add	ip, ip, #40, 20	; 0x28000
    4720:	ldr	pc, [ip, #2600]!	; 0xa28

00004724 <write@plt>:
    4724:	add	ip, pc, #0, 12
    4728:	add	ip, ip, #40, 20	; 0x28000
    472c:	ldr	pc, [ip, #2592]!	; 0xa20

00004730 <SSL_new@plt>:
    4730:	add	ip, pc, #0, 12
    4734:	add	ip, ip, #40, 20	; 0x28000
    4738:	ldr	pc, [ip, #2584]!	; 0xa18

0000473c <access@plt>:
    473c:	add	ip, pc, #0, 12
    4740:	add	ip, ip, #40, 20	; 0x28000
    4744:	ldr	pc, [ip, #2576]!	; 0xa10

00004748 <rb_lib_loop@plt>:
    4748:	add	ip, pc, #0, 12
    474c:	add	ip, ip, #40, 20	; 0x28000
    4750:	ldr	pc, [ip, #2568]!	; 0xa08

00004754 <timer_settime@plt>:
    4754:	add	ip, pc, #0, 12
    4758:	add	ip, ip, #40, 20	; 0x28000
    475c:	ldr	pc, [ip, #2560]!	; 0xa00

00004760 <gettimeofday@plt>:
    4760:	add	ip, pc, #0, 12
    4764:	add	ip, ip, #40, 20	; 0x28000
    4768:	ldr	pc, [ip, #2552]!	; 0x9f8

0000476c <accept@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #40, 20	; 0x28000
    4774:	ldr	pc, [ip, #2544]!	; 0x9f0

00004778 <SSL_read@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #40, 20	; 0x28000
    4780:	ldr	pc, [ip, #2536]!	; 0x9e8

00004784 <rb_read@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #40, 20	; 0x28000
    478c:	ldr	pc, [ip, #2528]!	; 0x9e0

00004790 <socket@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #40, 20	; 0x28000
    4798:	ldr	pc, [ip, #2520]!	; 0x9d8

0000479c <rb_linebuf_get@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #40, 20	; 0x28000
    47a4:	ldr	pc, [ip, #2512]!	; 0x9d0

000047a8 <rb_radixtree_foreach_cur@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #40, 20	; 0x28000
    47b0:	ldr	pc, [ip, #2504]!	; 0x9c8

000047b4 <epoll_wait@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #40, 20	; 0x28000
    47bc:	ldr	pc, [ip, #2496]!	; 0x9c0

000047c0 <SSL_do_handshake@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #40, 20	; 0x28000
    47c8:	ldr	pc, [ip, #2488]!	; 0x9b8

000047cc <rb_linebuf_flush@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #40, 20	; 0x28000
    47d4:	ldr	pc, [ip, #2480]!	; 0x9b0

000047d8 <posix_spawn@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #40, 20	; 0x28000
    47e0:	ldr	pc, [ip, #2472]!	; 0x9a8

000047e4 <strlen@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #40, 20	; 0x28000
    47ec:	ldr	pc, [ip, #2464]!	; 0x9a0

000047f0 <rb_current_time@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #40, 20	; 0x28000
    47f8:	ldr	pc, [ip, #2456]!	; 0x998

000047fc <strtoul@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #40, 20	; 0x28000
    4804:	ldr	pc, [ip, #2448]!	; 0x990

00004808 <memcpy@plt>:
    4808:	add	ip, pc, #0, 12
    480c:	add	ip, ip, #40, 20	; 0x28000
    4810:	ldr	pc, [ip, #2440]!	; 0x988

00004814 <PEM_read_X509@plt>:
    4814:	add	ip, pc, #0, 12
    4818:	add	ip, ip, #40, 20	; 0x28000
    481c:	ldr	pc, [ip, #2432]!	; 0x980

00004820 <posix_spawnattr_setflags@plt>:
    4820:	add	ip, pc, #0, 12
    4824:	add	ip, ip, #40, 20	; 0x28000
    4828:	ldr	pc, [ip, #2424]!	; 0x978

0000482c <__ctype_tolower_loc@plt>:
    482c:	add	ip, pc, #0, 12
    4830:	add	ip, ip, #40, 20	; 0x28000
    4834:	ldr	pc, [ip, #2416]!	; 0x970

00004838 <SSL_CTX_use_certificate_chain_file@plt>:
    4838:	add	ip, pc, #0, 12
    483c:	add	ip, ip, #40, 20	; 0x28000
    4840:	ldr	pc, [ip, #2408]!	; 0x968

00004844 <rb_free_rb_dlink_node@plt>:
    4844:	add	ip, pc, #0, 12
    4848:	add	ip, ip, #40, 20	; 0x28000
    484c:	ldr	pc, [ip, #2400]!	; 0x960

00004850 <SSL_CTX_set_options@plt>:
    4850:	add	ip, pc, #0, 12
    4854:	add	ip, ip, #40, 20	; 0x28000
    4858:	ldr	pc, [ip, #2392]!	; 0x958

0000485c <posix_spawnattr_destroy@plt>:
    485c:	add	ip, pc, #0, 12
    4860:	add	ip, ip, #40, 20	; 0x28000
    4864:	ldr	pc, [ip, #2384]!	; 0x950

00004868 <rb_close@plt>:
    4868:	add	ip, pc, #0, 12
    486c:	add	ip, ip, #40, 20	; 0x28000
    4870:	ldr	pc, [ip, #2376]!	; 0x948

00004874 <strtol@plt>:
    4874:	add	ip, pc, #0, 12
    4878:	add	ip, ip, #40, 20	; 0x28000
    487c:	ldr	pc, [ip, #2368]!	; 0x940

00004880 <sigaddset@plt>:
    4880:	add	ip, pc, #0, 12
    4884:	add	ip, ip, #40, 20	; 0x28000
    4888:	ldr	pc, [ip, #2360]!	; 0x938

0000488c <strcpy@plt>:
    488c:	add	ip, pc, #0, 12
    4890:	add	ip, ip, #40, 20	; 0x28000
    4894:	ldr	pc, [ip, #2352]!	; 0x930

00004898 <waitpid@plt>:
    4898:	add	ip, pc, #0, 12
    489c:	add	ip, ip, #40, 20	; 0x28000
    48a0:	ldr	pc, [ip, #2344]!	; 0x928

000048a4 <rb_run_one_event@plt>:
    48a4:	add	ip, pc, #0, 12
    48a8:	add	ip, ip, #40, 20	; 0x28000
    48ac:	ldr	pc, [ip, #2336]!	; 0x920

000048b0 <rb_patricia_search_exact@plt>:
    48b0:	add	ip, pc, #0, 12
    48b4:	add	ip, ip, #40, 20	; 0x28000
    48b8:	ldr	pc, [ip, #2328]!	; 0x918

000048bc <strncat@plt>:
    48bc:	add	ip, pc, #0, 12
    48c0:	add	ip, ip, #40, 20	; 0x28000
    48c4:	ldr	pc, [ip, #2320]!	; 0x910

000048c8 <rb_bh_free@plt>:
    48c8:	add	ip, pc, #0, 12
    48cc:	add	ip, ip, #40, 20	; 0x28000
    48d0:	ldr	pc, [ip, #2312]!	; 0x908

000048d4 <rb_init_rb_dlink_nodes@plt>:
    48d4:	add	ip, pc, #0, 12
    48d8:	add	ip, ip, #40, 20	; 0x28000
    48dc:	ldr	pc, [ip, #2304]!	; 0x900

000048e0 <raise@plt>:
    48e0:	add	ip, pc, #0, 12
    48e4:	add	ip, ip, #40, 20	; 0x28000
    48e8:	ldr	pc, [ip, #2296]!	; 0x8f8

000048ec <EVP_sha1@plt>:
    48ec:	add	ip, pc, #0, 12
    48f0:	add	ip, ip, #40, 20	; 0x28000
    48f4:	ldr	pc, [ip, #2288]!	; 0x8f0

000048f8 <rb_patricia_lookup@plt>:
    48f8:	add	ip, pc, #0, 12
    48fc:	add	ip, ip, #40, 20	; 0x28000
    4900:	ldr	pc, [ip, #2280]!	; 0x8e8

00004904 <shutdown@plt>:
    4904:	add	ip, pc, #0, 12
    4908:	add	ip, ip, #40, 20	; 0x28000
    490c:	ldr	pc, [ip, #2272]!	; 0x8e0

00004910 <bind@plt>:
    4910:	add	ip, pc, #0, 12
    4914:	add	ip, ip, #40, 20	; 0x28000
    4918:	ldr	pc, [ip, #2264]!	; 0x8d8

0000491c <rb_lib_log@plt>:
    491c:	add	ip, pc, #0, 12
    4920:	add	ip, ip, #40, 20	; 0x28000
    4924:	ldr	pc, [ip, #2256]!	; 0x8d0

00004928 <SSL_CTX_use_PrivateKey_file@plt>:
    4928:	add	ip, pc, #0, 12
    492c:	add	ip, ip, #40, 20	; 0x28000
    4930:	ldr	pc, [ip, #2248]!	; 0x8c8

00004934 <select@plt>:
    4934:	add	ip, pc, #0, 12
    4938:	add	ip, ip, #40, 20	; 0x28000
    493c:	ldr	pc, [ip, #2240]!	; 0x8c0

00004940 <close@plt>:
    4940:	add	ip, pc, #0, 12
    4944:	add	ip, ip, #40, 20	; 0x28000
    4948:	ldr	pc, [ip, #2232]!	; 0x8b8

0000494c <rb_inet_ntop@plt>:
    494c:	add	ip, pc, #0, 12
    4950:	add	ip, ip, #40, 20	; 0x28000
    4954:	ldr	pc, [ip, #2224]!	; 0x8b0

00004958 <rb_bh_alloc@plt>:
    4958:	add	ip, pc, #0, 12
    495c:	add	ip, ip, #40, 20	; 0x28000
    4960:	ldr	pc, [ip, #2216]!	; 0x8a8

00004964 <SSL_free@plt>:
    4964:	add	ip, pc, #0, 12
    4968:	add	ip, ip, #40, 20	; 0x28000
    496c:	ldr	pc, [ip, #2208]!	; 0x8a0

00004970 <rb_pipe@plt>:
    4970:	add	ip, pc, #0, 12
    4974:	add	ip, ip, #40, 20	; 0x28000
    4978:	ldr	pc, [ip, #2200]!	; 0x898

0000497c <strncasecmp@plt>:
    497c:	add	ip, pc, #0, 12
    4980:	add	ip, ip, #40, 20	; 0x28000
    4984:	ldr	pc, [ip, #2192]!	; 0x890

00004988 <rb_outofmemory@plt>:
    4988:	add	ip, pc, #0, 12
    498c:	add	ip, ip, #40, 20	; 0x28000
    4990:	ldr	pc, [ip, #2184]!	; 0x888

00004994 <rb_set_time@plt>:
    4994:	add	ip, pc, #0, 12
    4998:	add	ip, ip, #40, 20	; 0x28000
    499c:	ldr	pc, [ip, #2176]!	; 0x880

000049a0 <rb_dictionary_stats@plt>:
    49a0:	add	ip, pc, #0, 12
    49a4:	add	ip, ip, #40, 20	; 0x28000
    49a8:	ldr	pc, [ip, #2168]!	; 0x878

000049ac <malloc@plt>:
    49ac:	add	ip, pc, #0, 12
    49b0:	add	ip, ip, #40, 20	; 0x28000
    49b4:	ldr	pc, [ip, #2160]!	; 0x870

000049b8 <sigprocmask@plt>:
    49b8:	add	ip, pc, #0, 12
    49bc:	add	ip, ip, #40, 20	; 0x28000
    49c0:	ldr	pc, [ip, #2152]!	; 0x868

000049c4 <rb_event_run@plt>:
    49c4:	add	ip, pc, #0, 12
    49c8:	add	ip, ip, #40, 20	; 0x28000
    49cc:	ldr	pc, [ip, #2144]!	; 0x860

000049d0 <SSL_set_accept_state@plt>:
    49d0:	add	ip, pc, #0, 12
    49d4:	add	ip, ip, #40, 20	; 0x28000
    49d8:	ldr	pc, [ip, #2136]!	; 0x858

000049dc <rb_init_bh@plt>:
    49dc:	add	ip, pc, #0, 12
    49e0:	add	ip, ip, #40, 20	; 0x28000
    49e4:	ldr	pc, [ip, #2128]!	; 0x850

000049e8 <PEM_read_DHparams@plt>:
    49e8:	add	ip, pc, #0, 12
    49ec:	add	ip, ip, #40, 20	; 0x28000
    49f0:	ldr	pc, [ip, #2120]!	; 0x848

000049f4 <gmtime_r@plt>:
    49f4:	add	ip, pc, #0, 12
    49f8:	add	ip, ip, #40, 20	; 0x28000
    49fc:	ldr	pc, [ip, #2112]!	; 0x840

00004a00 <poll@plt>:
    4a00:	add	ip, pc, #0, 12
    4a04:	add	ip, ip, #40, 20	; 0x28000
    4a08:	ldr	pc, [ip, #2104]!	; 0x838

00004a0c <ASN1_item_digest@plt>:
    4a0c:	add	ip, pc, #0, 12
    4a10:	add	ip, ip, #40, 20	; 0x28000
    4a14:	ldr	pc, [ip, #2096]!	; 0x830

00004a18 <strnlen@plt>:
    4a18:	add	ip, pc, #0, 12
    4a1c:	add	ip, ip, #40, 20	; 0x28000
    4a20:	ldr	pc, [ip, #2088]!	; 0x828

00004a24 <SSL_get_peer_certificate@plt>:
    4a24:	add	ip, pc, #0, 12
    4a28:	add	ip, ip, #40, 20	; 0x28000
    4a2c:	ldr	pc, [ip, #2080]!	; 0x820

00004a30 <rb_dictionary_find@plt>:
    4a30:	add	ip, pc, #0, 12
    4a34:	add	ip, ip, #40, 20	; 0x28000
    4a38:	ldr	pc, [ip, #2072]!	; 0x818

00004a3c <rb_lib_init@plt>:
    4a3c:	add	ip, pc, #0, 12
    4a40:	add	ip, ip, #40, 20	; 0x28000
    4a44:	ldr	pc, [ip, #2064]!	; 0x810

00004a48 <SSL_get_verify_result@plt>:
    4a48:	add	ip, pc, #0, 12
    4a4c:	add	ip, ip, #40, 20	; 0x28000
    4a50:	ldr	pc, [ip, #2056]!	; 0x808

00004a54 <strtok_r@plt>:
    4a54:	add	ip, pc, #0, 12
    4a58:	add	ip, ip, #40, 20	; 0x28000
    4a5c:	ldr	pc, [ip, #2048]!	; 0x800

00004a60 <rb_lib_restart@plt>:
    4a60:	add	ip, pc, #0, 12
    4a64:	add	ip, ip, #40, 20	; 0x28000
    4a68:	ldr	pc, [ip, #2040]!	; 0x7f8

00004a6c <DH_free@plt>:
    4a6c:	add	ip, pc, #0, 12
    4a70:	add	ip, ip, #40, 20	; 0x28000
    4a74:	ldr	pc, [ip, #2032]!	; 0x7f0

00004a78 <timer_delete@plt>:
    4a78:	add	ip, pc, #0, 12
    4a7c:	add	ip, ip, #40, 20	; 0x28000
    4a80:	ldr	pc, [ip, #2024]!	; 0x7e8

00004a84 <rb_open@plt>:
    4a84:	add	ip, pc, #0, 12
    4a88:	add	ip, ip, #40, 20	; 0x28000
    4a8c:	ldr	pc, [ip, #2016]!	; 0x7e0

00004a90 <rb_get_sockerr@plt>:
    4a90:	add	ip, pc, #0, 12
    4a94:	add	ip, ip, #40, 20	; 0x28000
    4a98:	ldr	pc, [ip, #2008]!	; 0x7d8

00004a9c <send@plt>:
    4a9c:	add	ip, pc, #0, 12
    4aa0:	add	ip, ip, #40, 20	; 0x28000
    4aa4:	ldr	pc, [ip, #2000]!	; 0x7d0

00004aa8 <SSL_shutdown@plt>:
    4aa8:	add	ip, pc, #0, 12
    4aac:	add	ip, ip, #40, 20	; 0x28000
    4ab0:	ldr	pc, [ip, #1992]!	; 0x7c8

00004ab4 <rb_bh_create@plt>:
    4ab4:	add	ip, pc, #0, 12
    4ab8:	add	ip, ip, #40, 20	; 0x28000
    4abc:	ldr	pc, [ip, #1984]!	; 0x7c0

00004ac0 <dup2@plt>:
    4ac0:	add	ip, pc, #0, 12
    4ac4:	add	ip, ip, #40, 20	; 0x28000
    4ac8:	ldr	pc, [ip, #1976]!	; 0x7b8

00004acc <getpid@plt>:
    4acc:	add	ip, pc, #0, 12
    4ad0:	add	ip, ip, #40, 20	; 0x28000
    4ad4:	ldr	pc, [ip, #1968]!	; 0x7b0

00004ad8 <rb_writev@plt>:
    4ad8:	add	ip, pc, #0, 12
    4adc:	add	ip, ip, #40, 20	; 0x28000
    4ae0:	ldr	pc, [ip, #1960]!	; 0x7a8

00004ae4 <RAND_bytes@plt>:
    4ae4:	add	ip, pc, #0, 12
    4ae8:	add	ip, ip, #40, 20	; 0x28000
    4aec:	ldr	pc, [ip, #1952]!	; 0x7a0

00004af0 <rb_linebuf_newbuf@plt>:
    4af0:	add	ip, pc, #0, 12
    4af4:	add	ip, ip, #40, 20	; 0x28000
    4af8:	ldr	pc, [ip, #1944]!	; 0x798

00004afc <rb_fdlist_init@plt>:
    4afc:	add	ip, pc, #0, 12
    4b00:	add	ip, ip, #40, 20	; 0x28000
    4b04:	ldr	pc, [ip, #1936]!	; 0x790

00004b08 <rb_event_add@plt>:
    4b08:	add	ip, pc, #0, 12
    4b0c:	add	ip, ip, #40, 20	; 0x28000
    4b10:	ldr	pc, [ip, #1928]!	; 0x788

00004b14 <readlink@plt>:
    4b14:	add	ip, pc, #0, 12
    4b18:	add	ip, ip, #40, 20	; 0x28000
    4b1c:	ldr	pc, [ip, #1920]!	; 0x780

00004b20 <SSL_CTX_new@plt>:
    4b20:	add	ip, pc, #0, 12
    4b24:	add	ip, ip, #40, 20	; 0x28000
    4b28:	ldr	pc, [ip, #1912]!	; 0x778

00004b2c <rb_setup_fd@plt>:
    4b2c:	add	ip, pc, #0, 12
    4b30:	add	ip, ip, #40, 20	; 0x28000
    4b34:	ldr	pc, [ip, #1904]!	; 0x770

00004b38 <recvmsg@plt>:
    4b38:	add	ip, pc, #0, 12
    4b3c:	add	ip, ip, #40, 20	; 0x28000
    4b40:	ldr	pc, [ip, #1896]!	; 0x768

00004b44 <rand@plt>:
    4b44:	add	ip, pc, #0, 12
    4b48:	add	ip, ip, #40, 20	; 0x28000
    4b4c:	ldr	pc, [ip, #1888]!	; 0x760

00004b50 <rb_linebuf_init@plt>:
    4b50:	add	ip, pc, #0, 12
    4b54:	add	ip, ip, #40, 20	; 0x28000
    4b58:	ldr	pc, [ip, #1880]!	; 0x758

00004b5c <__fxstat@plt>:
    4b5c:	add	ip, pc, #0, 12
    4b60:	add	ip, ip, #40, 20	; 0x28000
    4b64:	ldr	pc, [ip, #1872]!	; 0x750

00004b68 <SSL_set_connect_state@plt>:
    4b68:	add	ip, pc, #0, 12
    4b6c:	add	ip, ip, #40, 20	; 0x28000
    4b70:	ldr	pc, [ip, #1864]!	; 0x748

00004b74 <rb_radixtree_elem_find@plt>:
    4b74:	add	ip, pc, #0, 12
    4b78:	add	ip, ip, #40, 20	; 0x28000
    4b7c:	ldr	pc, [ip, #1856]!	; 0x740

00004b80 <rb_make_rb_dlink_node@plt>:
    4b80:	add	ip, pc, #0, 12
    4b84:	add	ip, ip, #40, 20	; 0x28000
    4b88:	ldr	pc, [ip, #1848]!	; 0x738

00004b8c <rb_strlcat@plt>:
    4b8c:	add	ip, pc, #0, 12
    4b90:	add	ip, ip, #40, 20	; 0x28000
    4b94:	ldr	pc, [ip, #1840]!	; 0x730

00004b98 <rb_spawn_process@plt>:
    4b98:	add	ip, pc, #0, 12
    4b9c:	add	ip, ip, #40, 20	; 0x28000
    4ba0:	ldr	pc, [ip, #1832]!	; 0x728

00004ba4 <EVP_sha512@plt>:
    4ba4:	add	ip, pc, #0, 12
    4ba8:	add	ip, ip, #40, 20	; 0x28000
    4bac:	ldr	pc, [ip, #1824]!	; 0x720

00004bb0 <snprintf@plt>:
    4bb0:	add	ip, pc, #0, 12
    4bb4:	add	ip, ip, #40, 20	; 0x28000
    4bb8:	ldr	pc, [ip, #1816]!	; 0x718

00004bbc <RAND_status@plt>:
    4bbc:	add	ip, pc, #0, 12
    4bc0:	add	ip, ip, #40, 20	; 0x28000
    4bc4:	ldr	pc, [ip, #1808]!	; 0x710

00004bc8 <timerfd_create@plt>:
    4bc8:	add	ip, pc, #0, 12
    4bcc:	add	ip, ip, #40, 20	; 0x28000
    4bd0:	ldr	pc, [ip, #1800]!	; 0x708

00004bd4 <EVP_sha256@plt>:
    4bd4:	add	ip, pc, #0, 12
    4bd8:	add	ip, ip, #40, 20	; 0x28000
    4bdc:	ldr	pc, [ip, #1792]!	; 0x700

00004be0 <strcspn@plt>:
    4be0:	add	ip, pc, #0, 12
    4be4:	add	ip, ip, #40, 20	; 0x28000
    4be8:	ldr	pc, [ip, #1784]!	; 0x6f8

00004bec <rb_linebuf_put@plt>:
    4bec:	add	ip, pc, #0, 12
    4bf0:	add	ip, ip, #40, 20	; 0x28000
    4bf4:	ldr	pc, [ip, #1776]!	; 0x6f0

00004bf8 <rb_listen@plt>:
    4bf8:	add	ip, pc, #0, 12
    4bfc:	add	ip, ip, #40, 20	; 0x28000
    4c00:	ldr	pc, [ip, #1768]!	; 0x6e8

00004c04 <fcntl@plt>:
    4c04:	add	ip, pc, #0, 12
    4c08:	add	ip, ip, #40, 20	; 0x28000
    4c0c:	ldr	pc, [ip, #1760]!	; 0x6e0

00004c10 <strncmp@plt>:
    4c10:	add	ip, pc, #0, 12
    4c14:	add	ip, ip, #40, 20	; 0x28000
    4c18:	ldr	pc, [ip, #1752]!	; 0x6d8

00004c1c <kill@plt>:
    4c1c:	add	ip, pc, #0, 12
    4c20:	add	ip, ip, #40, 20	; 0x28000
    4c24:	ldr	pc, [ip, #1744]!	; 0x6d0

00004c28 <nanosleep@plt>:
    4c28:	add	ip, pc, #0, 12
    4c2c:	add	ip, ip, #40, 20	; 0x28000
    4c30:	ldr	pc, [ip, #1736]!	; 0x6c8

00004c34 <rb_event_next@plt>:
    4c34:	add	ip, pc, #0, 12
    4c38:	add	ip, ip, #40, 20	; 0x28000
    4c3c:	ldr	pc, [ip, #1728]!	; 0x6c0

00004c40 <realloc@plt>:
    4c40:	add	ip, pc, #0, 12
    4c44:	add	ip, ip, #40, 20	; 0x28000
    4c48:	ldr	pc, [ip, #1720]!	; 0x6b8

00004c4c <timerfd_settime@plt>:
    4c4c:	add	ip, pc, #0, 12
    4c50:	add	ip, ip, #40, 20	; 0x28000
    4c54:	ldr	pc, [ip, #1712]!	; 0x6b0

00004c58 <epoll_ctl@plt>:
    4c58:	add	ip, pc, #0, 12
    4c5c:	add	ip, ip, #40, 20	; 0x28000
    4c60:	ldr	pc, [ip, #1704]!	; 0x6a8

00004c64 <X509_free@plt>:
    4c64:	add	ip, pc, #0, 12
    4c68:	add	ip, ip, #40, 20	; 0x28000
    4c6c:	ldr	pc, [ip, #1696]!	; 0x6a0

00004c70 <readv@plt>:
    4c70:	add	ip, pc, #0, 12
    4c74:	add	ip, ip, #40, 20	; 0x28000
    4c78:	ldr	pc, [ip, #1688]!	; 0x698

00004c7c <getsockopt@plt>:
    4c7c:	add	ip, pc, #0, 12
    4c80:	add	ip, ip, #40, 20	; 0x28000
    4c84:	ldr	pc, [ip, #1680]!	; 0x690

00004c88 <pipe@plt>:
    4c88:	add	ip, pc, #0, 12
    4c8c:	add	ip, ip, #40, 20	; 0x28000
    4c90:	ldr	pc, [ip, #1672]!	; 0x688

00004c94 <OpenSSL_version@plt>:
    4c94:	add	ip, pc, #0, 12
    4c98:	add	ip, ip, #40, 20	; 0x28000
    4c9c:	ldr	pc, [ip, #1664]!	; 0x680

00004ca0 <setsockopt@plt>:
    4ca0:	add	ip, pc, #0, 12
    4ca4:	add	ip, ip, #40, 20	; 0x28000
    4ca8:	ldr	pc, [ip, #1656]!	; 0x678

00004cac <SSL_get_error@plt>:
    4cac:	add	ip, pc, #0, 12
    4cb0:	add	ip, ip, #40, 20	; 0x28000
    4cb4:	ldr	pc, [ip, #1648]!	; 0x670

00004cb8 <SSL_get_version@plt>:
    4cb8:	add	ip, pc, #0, 12
    4cbc:	add	ip, ip, #40, 20	; 0x28000
    4cc0:	ldr	pc, [ip, #1640]!	; 0x668

00004cc4 <rb_radixtree_delete@plt>:
    4cc4:	add	ip, pc, #0, 12
    4cc8:	add	ip, ip, #40, 20	; 0x28000
    4ccc:	ldr	pc, [ip, #1632]!	; 0x660

00004cd0 <setenv@plt>:
    4cd0:	add	ip, pc, #0, 12
    4cd4:	add	ip, ip, #40, 20	; 0x28000
    4cd8:	ldr	pc, [ip, #1624]!	; 0x658

00004cdc <strcmp@plt>:
    4cdc:	add	ip, pc, #0, 12
    4ce0:	add	ip, ip, #40, 20	; 0x28000
    4ce4:	ldr	pc, [ip, #1616]!	; 0x650

00004ce8 <__errno_location@plt>:
    4ce8:	add	ip, pc, #0, 12
    4cec:	add	ip, ip, #40, 20	; 0x28000
    4cf0:	ldr	pc, [ip, #1608]!	; 0x648

00004cf4 <__cxa_finalize@plt>:
    4cf4:	add	ip, pc, #0, 12
    4cf8:	add	ip, ip, #40, 20	; 0x28000
    4cfc:	ldr	pc, [ip, #1600]!	; 0x640

00004d00 <sprintf@plt>:
    4d00:	add	ip, pc, #0, 12
    4d04:	add	ip, ip, #40, 20	; 0x28000
    4d08:	ldr	pc, [ip, #1592]!	; 0x638

00004d0c <rb_bh_usage@plt>:
    4d0c:	add	ip, pc, #0, 12
    4d10:	add	ip, ip, #40, 20	; 0x28000
    4d14:	ldr	pc, [ip, #1584]!	; 0x630

00004d18 <SSL_CTX_set_verify@plt>:
    4d18:	add	ip, pc, #0, 12
    4d1c:	add	ip, ip, #40, 20	; 0x28000
    4d20:	ldr	pc, [ip, #1576]!	; 0x628

Disassembly of section .text:

00004d28 <call_weak_fn>:
    4d28:	ldr	r3, [pc, #20]	; 4d44 <call_weak_fn+0x1c>
    4d2c:	ldr	r2, [pc, #20]	; 4d48 <call_weak_fn+0x20>
    4d30:	add	r3, pc, r3
    4d34:	ldr	r2, [r3, r2]
    4d38:	cmp	r2, #0
    4d3c:	bxeq	lr
    4d40:	b	4508 <__gmon_start__@plt>
    4d44:	.word	0x000282c8
    4d48:	.word	0x0000035c

00004d4c <deregister_tm_clones>:
    4d4c:	ldr	r3, [pc, #52]	; 4d88 <deregister_tm_clones+0x3c>
    4d50:	ldr	r0, [pc, #52]	; 4d8c <deregister_tm_clones+0x40>
    4d54:	add	r3, pc, r3
    4d58:	add	r0, pc, r0
    4d5c:	add	r3, r3, #3
    4d60:	sub	r3, r3, r0
    4d64:	cmp	r3, #6
    4d68:	ldr	r3, [pc, #32]	; 4d90 <deregister_tm_clones+0x44>
    4d6c:	add	r3, pc, r3
    4d70:	bxls	lr
    4d74:	ldr	r2, [pc, #24]	; 4d94 <deregister_tm_clones+0x48>
    4d78:	ldr	r3, [r3, r2]
    4d7c:	cmp	r3, #0
    4d80:	bxeq	lr
    4d84:	bx	r3
    4d88:	.word	0x00028774
    4d8c:	.word	0x00028770
    4d90:	.word	0x0002828c
    4d94:	.word	0x0000037c

00004d98 <register_tm_clones>:
    4d98:	ldr	r1, [pc, #56]	; 4dd8 <register_tm_clones+0x40>
    4d9c:	ldr	r0, [pc, #56]	; 4ddc <register_tm_clones+0x44>
    4da0:	add	r1, pc, r1
    4da4:	add	r0, pc, r0
    4da8:	sub	r1, r1, r0
    4dac:	ldr	r3, [pc, #44]	; 4de0 <register_tm_clones+0x48>
    4db0:	asr	r1, r1, #2
    4db4:	add	r3, pc, r3
    4db8:	add	r1, r1, r1, lsr #31
    4dbc:	asrs	r1, r1, #1
    4dc0:	bxeq	lr
    4dc4:	ldr	r2, [pc, #24]	; 4de4 <register_tm_clones+0x4c>
    4dc8:	ldr	r3, [r3, r2]
    4dcc:	cmp	r3, #0
    4dd0:	bxeq	lr
    4dd4:	bx	r3
    4dd8:	.word	0x00028728
    4ddc:	.word	0x00028724
    4de0:	.word	0x00028244
    4de4:	.word	0x0000038c

00004de8 <__do_global_dtors_aux>:
    4de8:	ldr	r3, [pc, #76]	; 4e3c <__do_global_dtors_aux+0x54>
    4dec:	ldr	r2, [pc, #76]	; 4e40 <__do_global_dtors_aux+0x58>
    4df0:	add	r3, pc, r3
    4df4:	add	r2, pc, r2
    4df8:	ldrb	r3, [r3]
    4dfc:	cmp	r3, #0
    4e00:	bxne	lr
    4e04:	ldr	r3, [pc, #56]	; 4e44 <__do_global_dtors_aux+0x5c>
    4e08:	push	{r4, lr}
    4e0c:	ldr	r3, [r2, r3]
    4e10:	cmp	r3, #0
    4e14:	beq	4e24 <__do_global_dtors_aux+0x3c>
    4e18:	ldr	r3, [pc, #40]	; 4e48 <__do_global_dtors_aux+0x60>
    4e1c:	ldr	r0, [pc, r3]
    4e20:	bl	4cf4 <__cxa_finalize@plt>
    4e24:	bl	4d4c <deregister_tm_clones>
    4e28:	ldr	r3, [pc, #28]	; 4e4c <__do_global_dtors_aux+0x64>
    4e2c:	mov	r2, #1
    4e30:	add	r3, pc, r3
    4e34:	strb	r2, [r3]
    4e38:	pop	{r4, pc}
    4e3c:	.word	0x000286d8
    4e40:	.word	0x00028204
    4e44:	.word	0x0000041c
    4e48:	.word	0x00028600
    4e4c:	.word	0x00028698

00004e50 <frame_dummy>:
    4e50:	ldr	r0, [pc, #56]	; 4e90 <frame_dummy+0x40>
    4e54:	ldr	r3, [pc, #56]	; 4e94 <frame_dummy+0x44>
    4e58:	add	r0, pc, r0
    4e5c:	ldr	r2, [r0]
    4e60:	add	r3, pc, r3
    4e64:	cmp	r2, #0
    4e68:	bne	4e70 <frame_dummy+0x20>
    4e6c:	b	4d98 <register_tm_clones>
    4e70:	ldr	r2, [pc, #32]	; 4e98 <frame_dummy+0x48>
    4e74:	ldr	r3, [r3, r2]
    4e78:	cmp	r3, #0
    4e7c:	beq	4e6c <frame_dummy+0x1c>
    4e80:	push	{r4, lr}
    4e84:	blx	r3
    4e88:	pop	{r4, lr}
    4e8c:	b	4d98 <register_tm_clones>
    4e90:	.word	0x00027be0
    4e94:	.word	0x00028198
    4e98:	.word	0x00000360

00004e9c <rb_spawn_process>:
    4e9c:	push	{r4, r5, r6, r7, lr}
    4ea0:	sub	sp, sp, #356	; 0x164
    4ea4:	add	r4, sp, #16
    4ea8:	mov	r7, r0
    4eac:	mov	r0, r4
    4eb0:	mov	r6, r1
    4eb4:	ldr	r5, [pc, #116]	; 4f30 <rb_spawn_process+0x94>
    4eb8:	bl	46c4 <posix_spawnattr_init@plt>
    4ebc:	mov	r1, #64	; 0x40
    4ec0:	mov	r0, r4
    4ec4:	bl	4820 <posix_spawnattr_setflags@plt>
    4ec8:	ldr	r2, [pc, #100]	; 4f34 <rb_spawn_process+0x98>
    4ecc:	add	r5, pc, r5
    4ed0:	mov	r1, r7
    4ed4:	ldr	r0, [r5, r2]
    4ed8:	str	r6, [sp]
    4edc:	mov	r3, r4
    4ee0:	ldr	ip, [r0]
    4ee4:	mov	r2, #0
    4ee8:	str	ip, [sp, #4]
    4eec:	add	r0, sp, #12
    4ef0:	bl	47d8 <posix_spawn@plt>
    4ef4:	mov	r6, r0
    4ef8:	mov	r0, r4
    4efc:	bl	485c <posix_spawnattr_destroy@plt>
    4f00:	cmp	r6, #0
    4f04:	beq	4f20 <rb_spawn_process+0x84>
    4f08:	bl	4ce8 <__errno_location@plt>
    4f0c:	mvn	r3, #0
    4f10:	str	r6, [r0]
    4f14:	mov	r0, r3
    4f18:	add	sp, sp, #356	; 0x164
    4f1c:	pop	{r4, r5, r6, r7, pc}
    4f20:	ldr	r3, [sp, #12]
    4f24:	mov	r0, r3
    4f28:	add	sp, sp, #356	; 0x164
    4f2c:	pop	{r4, r5, r6, r7, pc}
    4f30:	.word	0x0002812c
    4f34:	.word	0x000003a4

00004f38 <rb_gettimeofday>:
    4f38:	b	4760 <gettimeofday@plt>

00004f3c <rb_sleep>:
    4f3c:	mov	r3, #1000	; 0x3e8
    4f40:	push	{lr}		; (str lr, [sp, #-4]!)
    4f44:	sub	sp, sp, #12
    4f48:	add	r2, sp, #8
    4f4c:	mul	r3, r3, r1
    4f50:	str	r0, [r2, #-8]!
    4f54:	mov	r1, #0
    4f58:	mov	r0, r2
    4f5c:	str	r3, [sp, #4]
    4f60:	bl	4c28 <nanosleep@plt>
    4f64:	add	sp, sp, #12
    4f68:	pop	{pc}		; (ldr pc, [sp], #4)

00004f6c <rb_strerror>:
    4f6c:	b	43a0 <strerror@plt>

00004f70 <rb_kill>:
    4f70:	b	4c1c <kill@plt>

00004f74 <rb_setenv>:
    4f74:	b	4cd0 <setenv@plt>

00004f78 <rb_waitpid>:
    4f78:	b	4898 <waitpid@plt>

00004f7c <rb_getpid>:
    4f7c:	b	4acc <getpid@plt>

00004f80 <rb_path_to_self>:
    4f80:	push	{r4, lr}
    4f84:	mov	r2, #4096	; 0x1000
    4f88:	ldr	r4, [pc, #32]	; 4fb0 <rb_path_to_self+0x30>
    4f8c:	ldr	r0, [pc, #32]	; 4fb4 <rb_path_to_self+0x34>
    4f90:	add	r4, pc, r4
    4f94:	mov	r1, r4
    4f98:	add	r0, pc, r0
    4f9c:	bl	4b14 <readlink@plt>
    4fa0:	cmn	r0, #1
    4fa4:	movne	r0, r4
    4fa8:	moveq	r0, #0
    4fac:	pop	{r4, pc}
    4fb0:	.word	0x0002853c
    4fb4:	.word	0x00015238

00004fb8 <rb_init_netio_win32>:
    4fb8:	push	{r4, lr}
    4fbc:	bl	4ce8 <__errno_location@plt>
    4fc0:	mov	r3, #38	; 0x26
    4fc4:	str	r3, [r0]
    4fc8:	mvn	r0, #0
    4fcc:	pop	{r4, pc}

00004fd0 <rb_setselect_win32>:
    4fd0:	push	{r4, lr}
    4fd4:	bl	4ce8 <__errno_location@plt>
    4fd8:	mov	r3, #38	; 0x26
    4fdc:	str	r3, [r0]
    4fe0:	pop	{r4, pc}

00004fe4 <rb_select_win32>:
    4fe4:	push	{r4, lr}
    4fe8:	bl	4ce8 <__errno_location@plt>
    4fec:	mov	r3, #38	; 0x26
    4ff0:	str	r3, [r0]
    4ff4:	mvn	r0, #0
    4ff8:	pop	{r4, pc}

00004ffc <rb_setup_fd_win32>:
    4ffc:	push	{r4, lr}
    5000:	bl	4ce8 <__errno_location@plt>
    5004:	mov	r3, #38	; 0x26
    5008:	str	r3, [r0]
    500c:	mvn	r0, #0
    5010:	pop	{r4, pc}
    5014:	andeq	r0, r0, r0

00005018 <rb_des_init>:
    5018:	ldr	r3, [pc, #3936]	; 5f80 <rb_des_init+0xf68>
    501c:	add	r3, pc, r3
    5020:	ldr	r2, [r3]
    5024:	cmp	r2, #1
    5028:	bxeq	lr
    502c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5030:	add	r7, r3, #19
    5034:	ldr	r9, [pc, #3912]	; 5f84 <rb_des_init+0xf6c>
    5038:	ldr	r8, [pc, #3912]	; 5f88 <rb_des_init+0xf70>
    503c:	sub	sp, sp, #116	; 0x74
    5040:	mov	r6, r7
    5044:	mov	ip, #14
    5048:	add	r9, pc, r9
    504c:	add	r8, pc, r8
    5050:	mov	r5, #0
    5054:	str	r5, [r3, #4]
    5058:	str	r5, [r3, #8]
    505c:	str	r5, [r3, #12]
    5060:	str	r5, [r3, #16]
    5064:	mov	r0, r6
    5068:	mov	r3, #0
    506c:	add	lr, r9, r5, lsl #6
    5070:	b	5078 <rb_des_init+0x60>
    5074:	ldrb	ip, [lr, r2]
    5078:	add	r3, r3, #1
    507c:	and	r2, r3, #32
    5080:	lsl	r4, r3, #27
    5084:	lsl	r1, r3, #4
    5088:	orr	r2, r2, r4, lsr #28
    508c:	and	r1, r1, #16
    5090:	cmp	r3, #64	; 0x40
    5094:	orr	r2, r2, r1
    5098:	strb	ip, [r0, #1]!
    509c:	bne	5074 <rb_des_init+0x5c>
    50a0:	add	r5, r5, #1
    50a4:	cmp	r5, #8
    50a8:	add	r6, r6, #64	; 0x40
    50ac:	ldrbne	ip, [r8, r5, lsl #6]
    50b0:	bne	5064 <rb_des_init+0x4c>
    50b4:	ldr	r9, [pc, #3792]	; 5f8c <rb_des_init+0xf74>
    50b8:	mov	r8, #0
    50bc:	add	r9, pc, r9
    50c0:	mov	r5, r7
    50c4:	mov	lr, #0
    50c8:	add	r6, r7, #64	; 0x40
    50cc:	add	r4, r9, r8, lsl #12
    50d0:	ldrb	ip, [r5, #1]!
    50d4:	mov	r0, r6
    50d8:	mov	r3, #0
    50dc:	lsl	ip, ip, #4
    50e0:	sxtb	ip, ip
    50e4:	ldrb	r1, [r0, #1]!
    50e8:	orr	r2, lr, r3
    50ec:	add	r2, r4, r2
    50f0:	add	r3, r3, #1
    50f4:	orr	r1, ip, r1
    50f8:	cmp	r3, #64	; 0x40
    50fc:	strb	r1, [r2, #532]	; 0x214
    5100:	bne	50e4 <rb_des_init+0xcc>
    5104:	add	lr, lr, #64	; 0x40
    5108:	cmp	lr, #4096	; 0x1000
    510c:	bne	50d0 <rb_des_init+0xb8>
    5110:	add	r8, r8, #1
    5114:	cmp	r8, #4
    5118:	add	r7, r7, #128	; 0x80
    511c:	bne	50c0 <rb_des_init+0xa8>
    5120:	ldr	r0, [pc, #3688]	; 5f90 <rb_des_init+0xf78>
    5124:	ldr	r3, [pc, #3688]	; 5f94 <rb_des_init+0xf7c>
    5128:	add	r0, pc, r0
    512c:	add	r3, pc, r3
    5130:	add	r0, r0, #512	; 0x200
    5134:	add	ip, r3, #548	; 0x224
    5138:	sub	r0, r0, #1
    513c:	sub	ip, ip, #1
    5140:	mov	r2, #0
    5144:	ldrb	r1, [r0, #1]!
    5148:	sub	r1, r1, #1
    514c:	uxtb	r1, r1
    5150:	add	lr, r3, r1
    5154:	strb	r1, [ip, #1]!
    5158:	strb	r2, [lr, #612]	; 0x264
    515c:	add	r2, r2, #1
    5160:	cmp	r2, #64	; 0x40
    5164:	bne	5144 <rb_des_init+0x12c>
    5168:	add	r3, r3, #676	; 0x2a4
    516c:	mov	r0, r3
    5170:	mov	r1, #255	; 0xff
    5174:	bl	4628 <memset@plt>
    5178:	ldr	r1, [pc, #3608]	; 5f98 <rb_des_init+0xf80>
    517c:	mov	r2, #0
    5180:	add	r1, pc, r1
    5184:	add	r1, r1, #576	; 0x240
    5188:	sub	r1, r1, #1
    518c:	sub	r3, r0, #676	; 0x2a4
    5190:	ldrb	r0, [r1, #1]!
    5194:	add	r0, r3, r0
    5198:	strb	r2, [r0, #675]	; 0x2a3
    519c:	add	r2, r2, #1
    51a0:	cmp	r2, #56	; 0x38
    51a4:	bne	5190 <rb_des_init+0x178>
    51a8:	add	r3, r3, #740	; 0x2e4
    51ac:	mov	r0, r3
    51b0:	mov	r1, #255	; 0xff
    51b4:	bl	4628 <memset@plt>
    51b8:	ldr	r2, [pc, #3548]	; 5f9c <rb_des_init+0xf84>
    51bc:	mov	r1, #0
    51c0:	add	r2, pc, r2
    51c4:	add	r2, r2, #632	; 0x278
    51c8:	sub	r2, r2, #1
    51cc:	sub	r3, r0, #740	; 0x2e4
    51d0:	ldrb	r0, [r2, #1]!
    51d4:	add	r0, r3, r0
    51d8:	strb	r1, [r0, #739]	; 0x2e3
    51dc:	add	r1, r1, #1
    51e0:	cmp	r1, #48	; 0x30
    51e4:	bne	51d0 <rb_des_init+0x1b8>
    51e8:	ldr	r2, [pc, #3504]	; 5fa0 <rb_des_init+0xf88>
    51ec:	ldr	r5, [pc, #3504]	; 5fa4 <rb_des_init+0xf8c>
    51f0:	add	r2, pc, r2
    51f4:	mov	ip, r2
    51f8:	str	r2, [sp, #96]	; 0x60
    51fc:	ldr	r2, [pc, #3492]	; 5fa8 <rb_des_init+0xf90>
    5200:	add	r5, pc, r5
    5204:	add	r2, pc, r2
    5208:	str	r5, [sp, #4]
    520c:	ldr	r5, [pc, #3480]	; 5fac <rb_des_init+0xf94>
    5210:	mov	r4, r2
    5214:	str	r2, [sp, #104]	; 0x68
    5218:	ldr	r2, [pc, #3472]	; 5fb0 <rb_des_init+0xf98>
    521c:	add	r5, pc, r5
    5220:	ldr	r0, [pc, #3468]	; 5fb4 <rb_des_init+0xf9c>
    5224:	ldr	r1, [pc, #3468]	; 5fb8 <rb_des_init+0xfa0>
    5228:	sub	lr, ip, #3216	; 0xc90
    522c:	add	r2, pc, r2
    5230:	sub	ip, r4, #3216	; 0xc90
    5234:	str	r5, [sp, #8]
    5238:	mov	r4, #0
    523c:	ldr	r5, [pc, #3448]	; 5fbc <rb_des_init+0xfa4>
    5240:	add	r2, r2, #820	; 0x334
    5244:	add	r0, pc, r0
    5248:	add	r1, pc, r1
    524c:	add	sl, r3, #740	; 0x2e4
    5250:	mov	r9, r4
    5254:	add	r8, r3, #676	; 0x2a4
    5258:	add	r5, pc, r5
    525c:	sub	lr, lr, #12
    5260:	sub	ip, ip, #4
    5264:	add	r0, r0, #804	; 0x324
    5268:	add	r1, r1, #812	; 0x32c
    526c:	str	r2, [sp, #92]	; 0x5c
    5270:	add	r7, r3, #548	; 0x224
    5274:	add	r2, r3, #796	; 0x31c
    5278:	add	r6, r3, #612	; 0x264
    527c:	str	r4, [sp, #64]	; 0x40
    5280:	str	r5, [sp, #12]
    5284:	str	lr, [sp, #100]	; 0x64
    5288:	str	ip, [sp, #108]	; 0x6c
    528c:	str	r0, [sp, #84]	; 0x54
    5290:	str	r1, [sp, #88]	; 0x58
    5294:	str	r2, [sp, #80]	; 0x50
    5298:	str	r4, [sp, #68]	; 0x44
    529c:	str	r6, [sp, #72]	; 0x48
    52a0:	str	r7, [sp, #76]	; 0x4c
    52a4:	ldr	r3, [sp, #64]	; 0x40
    52a8:	ldr	r2, [sp, #80]	; 0x50
    52ac:	ldr	r1, [sp, #84]	; 0x54
    52b0:	ldr	lr, [sp, #88]	; 0x58
    52b4:	ldr	r4, [sp, #92]	; 0x5c
    52b8:	str	r9, [r2, r3, lsl #1]
    52bc:	str	r9, [r1, r3, lsl #1]
    52c0:	str	r9, [lr, r3, lsl #1]
    52c4:	str	r9, [r4, r3, lsl #1]
    52c8:	ldr	r3, [sp, #68]	; 0x44
    52cc:	ldr	r5, [pc, #3308]	; 5fc0 <rb_des_init+0xfa8>
    52d0:	add	r0, r1, r3
    52d4:	add	r1, lr, r3
    52d8:	ldr	lr, [pc, #3300]	; 5fc4 <rb_des_init+0xfac>
    52dc:	add	ip, r2, r3
    52e0:	add	lr, pc, lr
    52e4:	str	lr, [sp]
    52e8:	ldr	lr, [pc, #3288]	; 5fc8 <rb_des_init+0xfb0>
    52ec:	add	r2, r4, r3
    52f0:	add	lr, pc, lr
    52f4:	str	lr, [sp, #16]
    52f8:	ldr	lr, [pc, #3276]	; 5fcc <rb_des_init+0xfb4>
    52fc:	add	r5, pc, r5
    5300:	add	lr, pc, lr
    5304:	str	lr, [sp, #20]
    5308:	ldr	lr, [pc, #3264]	; 5fd0 <rb_des_init+0xfb8>
    530c:	ldr	r4, [pc, #3264]	; 5fd4 <rb_des_init+0xfbc>
    5310:	add	lr, pc, lr
    5314:	str	lr, [sp, #24]
    5318:	ldr	lr, [pc, #3256]	; 5fd8 <rb_des_init+0xfc0>
    531c:	ldr	fp, [pc, #3256]	; 5fdc <rb_des_init+0xfc4>
    5320:	add	lr, pc, lr
    5324:	str	lr, [sp, #28]
    5328:	ldr	lr, [pc, #3248]	; 5fe0 <rb_des_init+0xfc8>
    532c:	str	r5, [sp, #32]
    5330:	add	lr, pc, lr
    5334:	str	r8, [sp, #36]	; 0x24
    5338:	mov	r3, #0
    533c:	add	r4, pc, r4
    5340:	add	fp, pc, fp
    5344:	ldr	r5, [sp, #72]	; 0x48
    5348:	ldr	r7, [sp, #76]	; 0x4c
    534c:	str	sl, [sp, #40]	; 0x28
    5350:	mov	r6, lr
    5354:	ldr	r8, [sp, #32]
    5358:	b	5610 <rb_des_init+0x5f8>
    535c:	ldr	sl, [sp, #4]
    5360:	add	lr, sl, lr, lsl #2
    5364:	ldr	sl, [ip]
    5368:	ldr	lr, [lr, #680]	; 0x2a8
    536c:	orr	lr, sl, lr
    5370:	str	lr, [ip]
    5374:	ldrb	lr, [r7, #1]
    5378:	cmp	lr, #31
    537c:	ble	5648 <rb_des_init+0x630>
    5380:	ldr	sl, [sp]
    5384:	add	lr, sl, lr, lsl #2
    5388:	ldr	sl, [r2]
    538c:	ldr	lr, [lr, #552]	; 0x228
    5390:	orr	lr, sl, lr
    5394:	str	lr, [r2]
    5398:	tst	r3, #32
    539c:	beq	53e4 <rb_des_init+0x3cc>
    53a0:	ldrb	lr, [r5, #2]
    53a4:	cmp	lr, #31
    53a8:	bgt	56cc <rb_des_init+0x6b4>
    53ac:	add	lr, r4, lr, lsl #2
    53b0:	ldr	sl, [ip]
    53b4:	ldr	lr, [lr, #680]	; 0x2a8
    53b8:	orr	lr, sl, lr
    53bc:	str	lr, [ip]
    53c0:	ldrb	lr, [r7, #2]
    53c4:	cmp	lr, #31
    53c8:	ble	56b0 <rb_des_init+0x698>
    53cc:	ldr	sl, [sp, #24]
    53d0:	add	lr, sl, lr, lsl #2
    53d4:	ldr	sl, [r2]
    53d8:	ldr	lr, [lr, #552]	; 0x228
    53dc:	orr	lr, sl, lr
    53e0:	str	lr, [r2]
    53e4:	tst	r3, #16
    53e8:	beq	543c <rb_des_init+0x424>
    53ec:	ldrb	lr, [r5, #3]
    53f0:	cmp	lr, #31
    53f4:	bgt	5664 <rb_des_init+0x64c>
    53f8:	add	lr, fp, lr, lsl #2
    53fc:	ldr	sl, [ip]
    5400:	ldr	lr, [lr, #680]	; 0x2a8
    5404:	orr	lr, sl, lr
    5408:	str	lr, [ip]
    540c:	ldrb	lr, [r7, #3]
    5410:	cmp	lr, #31
    5414:	addgt	lr, r8, lr, lsl #2
    5418:	addle	lr, r6, lr, lsl #2
    541c:	ldrgt	sl, [r2]
    5420:	ldrgt	lr, [lr, #552]	; 0x228
    5424:	ldrle	sl, [r1]
    5428:	ldrle	lr, [lr, #680]	; 0x2a8
    542c:	orrgt	lr, sl, lr
    5430:	orrle	lr, sl, lr
    5434:	strgt	lr, [r2]
    5438:	strle	lr, [r1]
    543c:	tst	r3, #8
    5440:	beq	5494 <rb_des_init+0x47c>
    5444:	ldrb	lr, [r5, #4]
    5448:	cmp	lr, #31
    544c:	bgt	5b78 <rb_des_init+0xb60>
    5450:	ldr	sl, [pc, #2956]	; 5fe4 <rb_des_init+0xfcc>
    5454:	add	sl, pc, sl
    5458:	add	lr, sl, lr, lsl #2
    545c:	ldr	sl, [ip]
    5460:	ldr	lr, [lr, #680]	; 0x2a8
    5464:	orr	lr, sl, lr
    5468:	str	lr, [ip]
    546c:	ldrb	lr, [r7, #4]
    5470:	cmp	lr, #31
    5474:	ble	5b58 <rb_des_init+0xb40>
    5478:	ldr	sl, [pc, #2920]	; 5fe8 <rb_des_init+0xfd0>
    547c:	add	sl, pc, sl
    5480:	add	lr, sl, lr, lsl #2
    5484:	ldr	sl, [r2]
    5488:	ldr	lr, [lr, #552]	; 0x228
    548c:	orr	lr, sl, lr
    5490:	str	lr, [r2]
    5494:	tst	r3, #4
    5498:	beq	54ec <rb_des_init+0x4d4>
    549c:	ldrb	lr, [r5, #5]
    54a0:	cmp	lr, #31
    54a4:	bgt	5bb8 <rb_des_init+0xba0>
    54a8:	ldr	sl, [pc, #2876]	; 5fec <rb_des_init+0xfd4>
    54ac:	add	sl, pc, sl
    54b0:	add	lr, sl, lr, lsl #2
    54b4:	ldr	sl, [ip]
    54b8:	ldr	lr, [lr, #680]	; 0x2a8
    54bc:	orr	lr, sl, lr
    54c0:	str	lr, [ip]
    54c4:	ldrb	lr, [r7, #5]
    54c8:	cmp	lr, #31
    54cc:	ble	5b98 <rb_des_init+0xb80>
    54d0:	ldr	sl, [pc, #2840]	; 5ff0 <rb_des_init+0xfd8>
    54d4:	add	sl, pc, sl
    54d8:	add	lr, sl, lr, lsl #2
    54dc:	ldr	sl, [r2]
    54e0:	ldr	lr, [lr, #552]	; 0x228
    54e4:	orr	lr, sl, lr
    54e8:	str	lr, [r2]
    54ec:	tst	r3, #2
    54f0:	beq	5544 <rb_des_init+0x52c>
    54f4:	ldrb	lr, [r5, #6]
    54f8:	cmp	lr, #31
    54fc:	bgt	5708 <rb_des_init+0x6f0>
    5500:	ldr	sl, [pc, #2796]	; 5ff4 <rb_des_init+0xfdc>
    5504:	add	sl, pc, sl
    5508:	add	lr, sl, lr, lsl #2
    550c:	ldr	sl, [ip]
    5510:	ldr	lr, [lr, #680]	; 0x2a8
    5514:	orr	lr, sl, lr
    5518:	str	lr, [ip]
    551c:	ldrb	lr, [r7, #6]
    5520:	cmp	lr, #31
    5524:	ble	56e8 <rb_des_init+0x6d0>
    5528:	ldr	sl, [pc, #2760]	; 5ff8 <rb_des_init+0xfe0>
    552c:	add	sl, pc, sl
    5530:	add	lr, sl, lr, lsl #2
    5534:	ldr	sl, [r2]
    5538:	ldr	lr, [lr, #552]	; 0x228
    553c:	orr	lr, sl, lr
    5540:	str	lr, [r2]
    5544:	tst	r3, #1
    5548:	beq	559c <rb_des_init+0x584>
    554c:	ldrb	lr, [r5, #7]
    5550:	cmp	lr, #31
    5554:	bgt	5b38 <rb_des_init+0xb20>
    5558:	ldr	sl, [pc, #2716]	; 5ffc <rb_des_init+0xfe4>
    555c:	add	sl, pc, sl
    5560:	add	lr, sl, lr, lsl #2
    5564:	ldr	sl, [ip]
    5568:	ldr	lr, [lr, #680]	; 0x2a8
    556c:	orr	lr, sl, lr
    5570:	str	lr, [ip]
    5574:	ldrb	lr, [r7, #7]
    5578:	cmp	lr, #31
    557c:	ble	5728 <rb_des_init+0x710>
    5580:	ldr	sl, [pc, #2680]	; 6000 <rb_des_init+0xfe8>
    5584:	add	sl, pc, sl
    5588:	add	lr, sl, lr, lsl #2
    558c:	ldr	sl, [r2]
    5590:	ldr	lr, [lr, #552]	; 0x228
    5594:	orr	lr, sl, lr
    5598:	str	lr, [r2]
    559c:	add	r3, r3, #1
    55a0:	cmp	r3, #256	; 0x100
    55a4:	beq	5750 <rb_des_init+0x738>
    55a8:	tst	r3, #128	; 0x80
    55ac:	str	r9, [ip, #4]
    55b0:	str	r9, [r0, #4]
    55b4:	str	r9, [r1, #4]
    55b8:	str	r9, [r2, #4]
    55bc:	beq	5600 <rb_des_init+0x5e8>
    55c0:	ldrb	lr, [r5]
    55c4:	cmp	lr, #31
    55c8:	bgt	5698 <rb_des_init+0x680>
    55cc:	ldr	sl, [pc, #2608]	; 6004 <rb_des_init+0xfec>
    55d0:	add	sl, pc, sl
    55d4:	add	lr, sl, lr, lsl #2
    55d8:	ldr	lr, [lr, #680]	; 0x2a8
    55dc:	str	lr, [ip, #4]
    55e0:	ldrb	lr, [r7]
    55e4:	cmp	lr, #31
    55e8:	ble	5680 <rb_des_init+0x668>
    55ec:	ldr	sl, [pc, #2580]	; 6008 <rb_des_init+0xff0>
    55f0:	add	sl, pc, sl
    55f4:	add	lr, sl, lr, lsl #2
    55f8:	ldr	lr, [lr, #552]	; 0x228
    55fc:	str	lr, [r2, #4]
    5600:	add	ip, ip, #4
    5604:	add	r0, r0, #4
    5608:	add	r1, r1, #4
    560c:	add	r2, r2, #4
    5610:	tst	r3, #64	; 0x40
    5614:	beq	5398 <rb_des_init+0x380>
    5618:	ldrb	lr, [r5, #1]
    561c:	cmp	lr, #31
    5620:	ble	535c <rb_des_init+0x344>
    5624:	ldr	sl, [sp, #8]
    5628:	add	lr, sl, lr, lsl #2
    562c:	ldr	sl, [r0]
    5630:	ldr	lr, [lr, #552]	; 0x228
    5634:	orr	lr, sl, lr
    5638:	str	lr, [r0]
    563c:	ldrb	lr, [r7, #1]
    5640:	cmp	lr, #31
    5644:	bgt	5380 <rb_des_init+0x368>
    5648:	ldr	sl, [sp, #12]
    564c:	add	lr, sl, lr, lsl #2
    5650:	ldr	sl, [r1]
    5654:	ldr	lr, [lr, #680]	; 0x2a8
    5658:	orr	lr, sl, lr
    565c:	str	lr, [r1]
    5660:	b	5398 <rb_des_init+0x380>
    5664:	ldr	sl, [sp, #28]
    5668:	add	lr, sl, lr, lsl #2
    566c:	ldr	sl, [r0]
    5670:	ldr	lr, [lr, #552]	; 0x228
    5674:	orr	lr, sl, lr
    5678:	str	lr, [r0]
    567c:	b	540c <rb_des_init+0x3f4>
    5680:	ldr	sl, [pc, #2436]	; 600c <rb_des_init+0xff4>
    5684:	add	sl, pc, sl
    5688:	add	lr, sl, lr, lsl #2
    568c:	ldr	lr, [lr, #680]	; 0x2a8
    5690:	str	lr, [r1, #4]
    5694:	b	5600 <rb_des_init+0x5e8>
    5698:	ldr	sl, [pc, #2416]	; 6010 <rb_des_init+0xff8>
    569c:	add	sl, pc, sl
    56a0:	add	lr, sl, lr, lsl #2
    56a4:	ldr	lr, [lr, #552]	; 0x228
    56a8:	str	lr, [r0, #4]
    56ac:	b	55e0 <rb_des_init+0x5c8>
    56b0:	ldr	sl, [sp, #20]
    56b4:	add	lr, sl, lr, lsl #2
    56b8:	ldr	sl, [r1]
    56bc:	ldr	lr, [lr, #680]	; 0x2a8
    56c0:	orr	lr, sl, lr
    56c4:	str	lr, [r1]
    56c8:	b	53e4 <rb_des_init+0x3cc>
    56cc:	ldr	sl, [sp, #16]
    56d0:	add	lr, sl, lr, lsl #2
    56d4:	ldr	sl, [r0]
    56d8:	ldr	lr, [lr, #552]	; 0x228
    56dc:	orr	lr, sl, lr
    56e0:	str	lr, [r0]
    56e4:	b	53c0 <rb_des_init+0x3a8>
    56e8:	ldr	sl, [pc, #2340]	; 6014 <rb_des_init+0xffc>
    56ec:	add	sl, pc, sl
    56f0:	add	lr, sl, lr, lsl #2
    56f4:	ldr	sl, [r1]
    56f8:	ldr	lr, [lr, #680]	; 0x2a8
    56fc:	orr	lr, sl, lr
    5700:	str	lr, [r1]
    5704:	b	5544 <rb_des_init+0x52c>
    5708:	ldr	sl, [pc, #2312]	; 6018 <rb_des_init+0x1000>
    570c:	add	sl, pc, sl
    5710:	add	lr, sl, lr, lsl #2
    5714:	ldr	sl, [r0]
    5718:	ldr	lr, [lr, #552]	; 0x228
    571c:	orr	lr, sl, lr
    5720:	str	lr, [r0]
    5724:	b	551c <rb_des_init+0x504>
    5728:	ldr	sl, [pc, #2284]	; 601c <rb_des_init+0x1004>
    572c:	add	r3, r3, #1
    5730:	add	sl, pc, sl
    5734:	add	lr, sl, lr, lsl #2
    5738:	ldr	sl, [r1]
    573c:	ldr	lr, [lr, #680]	; 0x2a8
    5740:	cmp	r3, #256	; 0x100
    5744:	orr	lr, sl, lr
    5748:	str	lr, [r1]
    574c:	bne	55a8 <rb_des_init+0x590>
    5750:	ldr	r3, [sp, #96]	; 0x60
    5754:	ldr	ip, [sp, #64]	; 0x40
    5758:	add	r0, r3, #868	; 0x364
    575c:	ldr	r3, [sp, #104]	; 0x68
    5760:	sub	r2, ip, #4
    5764:	add	r1, r3, #876	; 0x36c
    5768:	add	r6, r1, r2
    576c:	ldr	r1, [pc, #2220]	; 6020 <rb_des_init+0x1008>
    5770:	ldr	r8, [sp, #36]	; 0x24
    5774:	add	r1, pc, r1
    5778:	str	r1, [sp, #16]
    577c:	ldr	r1, [pc, #2208]	; 6024 <rb_des_init+0x100c>
    5780:	ldr	sl, [sp, #40]	; 0x28
    5784:	add	r1, pc, r1
    5788:	str	r1, [sp, #20]
    578c:	ldr	r1, [pc, #2196]	; 6028 <rb_des_init+0x1010>
    5790:	ldr	lr, [sp, #100]	; 0x64
    5794:	add	r1, pc, r1
    5798:	str	r1, [sp, #24]
    579c:	ldr	r1, [pc, #2184]	; 602c <rb_des_init+0x1014>
    57a0:	ldr	r4, [sp, #108]	; 0x6c
    57a4:	add	r1, pc, r1
    57a8:	str	r1, [sp, #28]
    57ac:	ldr	r1, [pc, #2172]	; 6030 <rb_des_init+0x1018>
    57b0:	mov	r3, #0
    57b4:	add	r1, pc, r1
    57b8:	str	r1, [sp, #32]
    57bc:	ldr	r1, [pc, #2160]	; 6034 <rb_des_init+0x101c>
    57c0:	str	r9, [ip, lr]
    57c4:	add	r1, pc, r1
    57c8:	str	r1, [sp, #36]	; 0x24
    57cc:	ldr	r1, [pc, #2148]	; 6038 <rb_des_init+0x1020>
    57d0:	str	r9, [r0, ip]!
    57d4:	add	r1, pc, r1
    57d8:	str	r1, [sp, #40]	; 0x28
    57dc:	ldr	r1, [pc, #2136]	; 603c <rb_des_init+0x1024>
    57e0:	add	r4, r4, r2
    57e4:	add	r1, pc, r1
    57e8:	str	r1, [sp, #44]	; 0x2c
    57ec:	ldr	r1, [pc, #2124]	; 6040 <rb_des_init+0x1028>
    57f0:	mov	r2, r3
    57f4:	add	r1, pc, r1
    57f8:	str	r1, [sp, #48]	; 0x30
    57fc:	ldr	r1, [pc, #2112]	; 6044 <rb_des_init+0x102c>
    5800:	add	ip, lr, ip
    5804:	add	r1, pc, r1
    5808:	str	r1, [sp, #52]	; 0x34
    580c:	ldr	r1, [pc, #2100]	; 6048 <rb_des_init+0x1030>
    5810:	add	r1, pc, r1
    5814:	str	r1, [sp, #56]	; 0x38
    5818:	ldr	r1, [pc, #2092]	; 604c <rb_des_init+0x1034>
    581c:	add	r1, pc, r1
    5820:	str	r1, [sp, #60]	; 0x3c
    5824:	ands	r7, r3, #32
    5828:	beq	5858 <rb_des_init+0x840>
    582c:	ldrb	r1, [r8, #1]
    5830:	cmp	r1, #255	; 0xff
    5834:	beq	5858 <rb_des_init+0x840>
    5838:	cmp	r1, #27
    583c:	ble	5ec0 <rb_des_init+0xea8>
    5840:	ldr	lr, [sp, #20]
    5844:	add	r1, lr, r1, lsl #2
    5848:	ldr	lr, [r0]
    584c:	ldr	r1, [r1, #584]	; 0x248
    5850:	orr	r1, lr, r1
    5854:	str	r1, [r0]
    5858:	ands	r5, r3, #16
    585c:	beq	588c <rb_des_init+0x874>
    5860:	ldrb	r1, [r8, #2]
    5864:	cmp	r1, #255	; 0xff
    5868:	beq	588c <rb_des_init+0x874>
    586c:	cmp	r1, #27
    5870:	ble	5edc <rb_des_init+0xec4>
    5874:	ldr	lr, [sp, #28]
    5878:	add	r1, lr, r1, lsl #2
    587c:	ldr	lr, [r0]
    5880:	ldr	r1, [r1, #584]	; 0x248
    5884:	orr	r1, lr, r1
    5888:	str	r1, [r0]
    588c:	ands	lr, r3, #8
    5890:	beq	58c0 <rb_des_init+0x8a8>
    5894:	ldrb	r1, [r8, #3]
    5898:	cmp	r1, #255	; 0xff
    589c:	beq	58c0 <rb_des_init+0x8a8>
    58a0:	cmp	r1, #27
    58a4:	ble	5ef8 <rb_des_init+0xee0>
    58a8:	ldr	fp, [sp, #36]	; 0x24
    58ac:	add	r1, fp, r1, lsl #2
    58b0:	ldr	fp, [r0]
    58b4:	ldr	r1, [r1, #584]	; 0x248
    58b8:	orr	r1, fp, r1
    58bc:	str	r1, [r0]
    58c0:	ands	r1, r3, #4
    58c4:	str	r1, [sp]
    58c8:	beq	58f8 <rb_des_init+0x8e0>
    58cc:	ldrb	r1, [r8, #4]
    58d0:	cmp	r1, #255	; 0xff
    58d4:	beq	58f8 <rb_des_init+0x8e0>
    58d8:	cmp	r1, #27
    58dc:	ble	5f14 <rb_des_init+0xefc>
    58e0:	ldr	fp, [sp, #44]	; 0x2c
    58e4:	add	r1, fp, r1, lsl #2
    58e8:	ldr	fp, [r0]
    58ec:	ldr	r1, [r1, #584]	; 0x248
    58f0:	orr	r1, fp, r1
    58f4:	str	r1, [r0]
    58f8:	ands	r1, r3, #2
    58fc:	str	r1, [sp]
    5900:	beq	5930 <rb_des_init+0x918>
    5904:	ldrb	r1, [r8, #5]
    5908:	cmp	r1, #255	; 0xff
    590c:	beq	5930 <rb_des_init+0x918>
    5910:	cmp	r1, #27
    5914:	ble	5f30 <rb_des_init+0xf18>
    5918:	ldr	fp, [sp, #52]	; 0x34
    591c:	add	r1, fp, r1, lsl #2
    5920:	ldr	fp, [r0]
    5924:	ldr	r1, [r1, #584]	; 0x248
    5928:	orr	r1, fp, r1
    592c:	str	r1, [r0]
    5930:	ands	r1, r3, #1
    5934:	str	r1, [sp]
    5938:	beq	5968 <rb_des_init+0x950>
    593c:	ldrb	r1, [r8, #6]
    5940:	cmp	r1, #255	; 0xff
    5944:	beq	5968 <rb_des_init+0x950>
    5948:	cmp	r1, #27
    594c:	ble	5f4c <rb_des_init+0xf34>
    5950:	ldr	fp, [sp, #60]	; 0x3c
    5954:	add	r1, fp, r1, lsl #2
    5958:	ldr	fp, [r0]
    595c:	ldr	r1, [r1, #584]	; 0x248
    5960:	orr	r1, fp, r1
    5964:	str	r1, [r0]
    5968:	cmp	r2, #0
    596c:	str	r9, [r4, #4]!
    5970:	str	r9, [r6, #4]!
    5974:	beq	5bdc <rb_des_init+0xbc4>
    5978:	ldrb	fp, [sl]
    597c:	cmp	fp, #255	; 0xff
    5980:	beq	5bd8 <rb_des_init+0xbc0>
    5984:	cmp	fp, #23
    5988:	ble	5be4 <rb_des_init+0xbcc>
    598c:	ldr	r1, [pc, #1724]	; 6050 <rb_des_init+0x1038>
    5990:	mov	r2, #0
    5994:	add	r1, pc, r1
    5998:	add	r1, r1, fp, lsl #2
    599c:	ldr	r1, [r1, #616]	; 0x268
    59a0:	str	r1, [r6]
    59a4:	cmp	r7, #0
    59a8:	beq	59d8 <rb_des_init+0x9c0>
    59ac:	ldrb	r7, [sl, #1]
    59b0:	cmp	r7, #255	; 0xff
    59b4:	beq	59d8 <rb_des_init+0x9c0>
    59b8:	cmp	r7, #23
    59bc:	ble	5ea4 <rb_des_init+0xe8c>
    59c0:	ldr	fp, [pc, #1676]	; 6054 <rb_des_init+0x103c>
    59c4:	add	fp, pc, fp
    59c8:	add	r7, fp, r7, lsl #2
    59cc:	ldr	r7, [r7, #616]	; 0x268
    59d0:	orr	r1, r1, r7
    59d4:	str	r1, [r6]
    59d8:	cmp	r5, #0
    59dc:	beq	5a0c <rb_des_init+0x9f4>
    59e0:	ldrb	r5, [sl, #2]
    59e4:	cmp	r5, #255	; 0xff
    59e8:	beq	5a0c <rb_des_init+0x9f4>
    59ec:	cmp	r5, #23
    59f0:	ble	5c00 <rb_des_init+0xbe8>
    59f4:	ldr	r7, [pc, #1628]	; 6058 <rb_des_init+0x1040>
    59f8:	add	r7, pc, r7
    59fc:	add	r5, r7, r5, lsl #2
    5a00:	ldr	r5, [r5, #616]	; 0x268
    5a04:	orr	r1, r1, r5
    5a08:	str	r1, [r6]
    5a0c:	cmp	lr, #0
    5a10:	beq	5a40 <rb_des_init+0xa28>
    5a14:	ldrb	lr, [sl, #3]
    5a18:	cmp	lr, #255	; 0xff
    5a1c:	beq	5a40 <rb_des_init+0xa28>
    5a20:	cmp	lr, #23
    5a24:	ble	5c1c <rb_des_init+0xc04>
    5a28:	ldr	r5, [pc, #1580]	; 605c <rb_des_init+0x1044>
    5a2c:	add	r5, pc, r5
    5a30:	add	lr, r5, lr, lsl #2
    5a34:	ldr	lr, [lr, #616]	; 0x268
    5a38:	orr	r1, r1, lr
    5a3c:	str	r1, [r6]
    5a40:	ands	lr, r3, #4
    5a44:	cmp	lr, #0
    5a48:	beq	5a78 <rb_des_init+0xa60>
    5a4c:	ldrb	lr, [sl, #4]
    5a50:	cmp	lr, #255	; 0xff
    5a54:	beq	5a78 <rb_des_init+0xa60>
    5a58:	cmp	lr, #23
    5a5c:	ble	5c38 <rb_des_init+0xc20>
    5a60:	ldr	r5, [pc, #1528]	; 6060 <rb_des_init+0x1048>
    5a64:	add	r5, pc, r5
    5a68:	add	lr, r5, lr, lsl #2
    5a6c:	ldr	lr, [lr, #616]	; 0x268
    5a70:	orr	r1, r1, lr
    5a74:	str	r1, [r6]
    5a78:	ands	lr, r3, #2
    5a7c:	cmp	lr, #0
    5a80:	beq	5ab0 <rb_des_init+0xa98>
    5a84:	ldrb	lr, [sl, #5]
    5a88:	cmp	lr, #255	; 0xff
    5a8c:	beq	5ab0 <rb_des_init+0xa98>
    5a90:	cmp	lr, #23
    5a94:	ble	5c54 <rb_des_init+0xc3c>
    5a98:	ldr	r5, [pc, #1476]	; 6064 <rb_des_init+0x104c>
    5a9c:	add	r5, pc, r5
    5aa0:	add	lr, r5, lr, lsl #2
    5aa4:	ldr	lr, [lr, #616]	; 0x268
    5aa8:	orr	r1, r1, lr
    5aac:	str	r1, [r6]
    5ab0:	ands	lr, r3, #1
    5ab4:	cmp	lr, #0
    5ab8:	beq	5ae8 <rb_des_init+0xad0>
    5abc:	ldrb	lr, [sl, #6]
    5ac0:	cmp	lr, #255	; 0xff
    5ac4:	beq	5ae8 <rb_des_init+0xad0>
    5ac8:	cmp	lr, #23
    5acc:	ble	5c70 <rb_des_init+0xc58>
    5ad0:	ldr	r2, [pc, #1424]	; 6068 <rb_des_init+0x1050>
    5ad4:	add	r2, pc, r2
    5ad8:	add	lr, r2, lr, lsl #2
    5adc:	ldr	r2, [lr, #616]	; 0x268
    5ae0:	orr	r1, r2, r1
    5ae4:	str	r1, [r6]
    5ae8:	add	r3, r3, #1
    5aec:	cmp	r3, #128	; 0x80
    5af0:	beq	5c94 <rb_des_init+0xc7c>
    5af4:	ands	r2, r3, #64	; 0x40
    5af8:	str	r9, [ip, #4]!
    5afc:	str	r9, [r0, #4]!
    5b00:	beq	5824 <rb_des_init+0x80c>
    5b04:	ldrb	r1, [r8]
    5b08:	cmp	r1, #255	; 0xff
    5b0c:	beq	5824 <rb_des_init+0x80c>
    5b10:	cmp	r1, #27
    5b14:	ble	5f68 <rb_des_init+0xf50>
    5b18:	ldr	lr, [pc, #1356]	; 606c <rb_des_init+0x1054>
    5b1c:	ands	r7, r3, #32
    5b20:	add	lr, pc, lr
    5b24:	add	r1, lr, r1, lsl #2
    5b28:	ldr	r1, [r1, #584]	; 0x248
    5b2c:	str	r1, [r0]
    5b30:	beq	5858 <rb_des_init+0x840>
    5b34:	b	582c <rb_des_init+0x814>
    5b38:	ldr	sl, [pc, #1328]	; 6070 <rb_des_init+0x1058>
    5b3c:	add	sl, pc, sl
    5b40:	add	lr, sl, lr, lsl #2
    5b44:	ldr	sl, [r0]
    5b48:	ldr	lr, [lr, #552]	; 0x228
    5b4c:	orr	lr, sl, lr
    5b50:	str	lr, [r0]
    5b54:	b	5574 <rb_des_init+0x55c>
    5b58:	ldr	sl, [pc, #1300]	; 6074 <rb_des_init+0x105c>
    5b5c:	add	sl, pc, sl
    5b60:	add	lr, sl, lr, lsl #2
    5b64:	ldr	sl, [r1]
    5b68:	ldr	lr, [lr, #680]	; 0x2a8
    5b6c:	orr	lr, sl, lr
    5b70:	str	lr, [r1]
    5b74:	b	5494 <rb_des_init+0x47c>
    5b78:	ldr	sl, [pc, #1272]	; 6078 <rb_des_init+0x1060>
    5b7c:	add	sl, pc, sl
    5b80:	add	lr, sl, lr, lsl #2
    5b84:	ldr	sl, [r0]
    5b88:	ldr	lr, [lr, #552]	; 0x228
    5b8c:	orr	lr, sl, lr
    5b90:	str	lr, [r0]
    5b94:	b	546c <rb_des_init+0x454>
    5b98:	ldr	sl, [pc, #1244]	; 607c <rb_des_init+0x1064>
    5b9c:	add	sl, pc, sl
    5ba0:	add	lr, sl, lr, lsl #2
    5ba4:	ldr	sl, [r1]
    5ba8:	ldr	lr, [lr, #680]	; 0x2a8
    5bac:	orr	lr, sl, lr
    5bb0:	str	lr, [r1]
    5bb4:	b	54ec <rb_des_init+0x4d4>
    5bb8:	ldr	sl, [pc, #1216]	; 6080 <rb_des_init+0x1068>
    5bbc:	add	sl, pc, sl
    5bc0:	add	lr, sl, lr, lsl #2
    5bc4:	ldr	sl, [r0]
    5bc8:	ldr	lr, [lr, #552]	; 0x228
    5bcc:	orr	lr, sl, lr
    5bd0:	str	lr, [r0]
    5bd4:	b	54c4 <rb_des_init+0x4ac>
    5bd8:	mov	r2, #0
    5bdc:	mov	r1, r2
    5be0:	b	59a4 <rb_des_init+0x98c>
    5be4:	ldr	r2, [pc, #1176]	; 6084 <rb_des_init+0x106c>
    5be8:	mov	r1, #0
    5bec:	add	r2, pc, r2
    5bf0:	add	r2, r2, fp, lsl #2
    5bf4:	ldr	r2, [r2, #712]	; 0x2c8
    5bf8:	str	r2, [r4]
    5bfc:	b	59a4 <rb_des_init+0x98c>
    5c00:	ldr	r7, [pc, #1152]	; 6088 <rb_des_init+0x1070>
    5c04:	add	r7, pc, r7
    5c08:	add	r5, r7, r5, lsl #2
    5c0c:	ldr	r5, [r5, #712]	; 0x2c8
    5c10:	orr	r2, r2, r5
    5c14:	str	r2, [r4]
    5c18:	b	5a0c <rb_des_init+0x9f4>
    5c1c:	ldr	r5, [pc, #1128]	; 608c <rb_des_init+0x1074>
    5c20:	add	r5, pc, r5
    5c24:	add	lr, r5, lr, lsl #2
    5c28:	ldr	lr, [lr, #712]	; 0x2c8
    5c2c:	orr	r2, r2, lr
    5c30:	str	r2, [r4]
    5c34:	b	5a40 <rb_des_init+0xa28>
    5c38:	ldr	r5, [pc, #1104]	; 6090 <rb_des_init+0x1078>
    5c3c:	add	r5, pc, r5
    5c40:	add	lr, r5, lr, lsl #2
    5c44:	ldr	lr, [lr, #712]	; 0x2c8
    5c48:	orr	r2, r2, lr
    5c4c:	str	r2, [r4]
    5c50:	b	5a78 <rb_des_init+0xa60>
    5c54:	ldr	r5, [pc, #1080]	; 6094 <rb_des_init+0x107c>
    5c58:	add	r5, pc, r5
    5c5c:	add	lr, r5, lr, lsl #2
    5c60:	ldr	lr, [lr, #712]	; 0x2c8
    5c64:	orr	r2, r2, lr
    5c68:	str	r2, [r4]
    5c6c:	b	5ab0 <rb_des_init+0xa98>
    5c70:	ldr	r1, [pc, #1056]	; 6098 <rb_des_init+0x1080>
    5c74:	add	r3, r3, #1
    5c78:	add	r1, pc, r1
    5c7c:	add	lr, r1, lr, lsl #2
    5c80:	cmp	r3, #128	; 0x80
    5c84:	ldr	r1, [lr, #712]	; 0x2c8
    5c88:	orr	r2, r1, r2
    5c8c:	str	r2, [r4]
    5c90:	bne	5af4 <rb_des_init+0xadc>
    5c94:	ldr	r3, [sp, #64]	; 0x40
    5c98:	add	sl, sl, #7
    5c9c:	add	r3, r3, #512	; 0x200
    5ca0:	str	r3, [sp, #64]	; 0x40
    5ca4:	cmp	r3, #4096	; 0x1000
    5ca8:	ldr	r3, [sp, #76]	; 0x4c
    5cac:	add	r8, r8, #8
    5cb0:	add	r3, r3, #8
    5cb4:	str	r3, [sp, #76]	; 0x4c
    5cb8:	ldr	r3, [sp, #72]	; 0x48
    5cbc:	add	r3, r3, #8
    5cc0:	str	r3, [sp, #72]	; 0x48
    5cc4:	ldr	r3, [sp, #68]	; 0x44
    5cc8:	add	r3, r3, #1024	; 0x400
    5ccc:	str	r3, [sp, #68]	; 0x44
    5cd0:	bne	52a4 <rb_des_init+0x28c>
    5cd4:	ldr	r3, [pc, #960]	; 609c <rb_des_init+0x1084>
    5cd8:	ldr	r1, [pc, #960]	; 60a0 <rb_des_init+0x1088>
    5cdc:	add	r3, pc, r3
    5ce0:	add	r3, r3, #808	; 0x328
    5ce4:	mov	r2, #0
    5ce8:	sub	r3, r3, #1
    5cec:	add	r1, pc, r1
    5cf0:	ldrb	r0, [r3, #1]!
    5cf4:	add	r0, r1, r0
    5cf8:	strb	r2, [r0, #827]	; 0x33b
    5cfc:	add	r2, r2, #1
    5d00:	cmp	r2, #32
    5d04:	bne	5cf0 <rb_des_init+0xcd8>
    5d08:	ldr	sl, [pc, #916]	; 60a4 <rb_des_init+0x108c>
    5d0c:	ldr	r9, [pc, #916]	; 60a8 <rb_des_init+0x1090>
    5d10:	ldr	r8, [pc, #916]	; 60ac <rb_des_init+0x1094>
    5d14:	ldr	r7, [pc, #916]	; 60b0 <rb_des_init+0x1098>
    5d18:	ldr	r6, [pc, #916]	; 60b4 <rb_des_init+0x109c>
    5d1c:	ldr	r5, [pc, #916]	; 60b8 <rb_des_init+0x10a0>
    5d20:	ldr	r4, [pc, #916]	; 60bc <rb_des_init+0x10a4>
    5d24:	ldr	lr, [pc, #916]	; 60c0 <rb_des_init+0x10a8>
    5d28:	mov	fp, #0
    5d2c:	add	r1, r1, #828	; 0x33c
    5d30:	add	sl, pc, sl
    5d34:	add	r9, pc, r9
    5d38:	add	r8, pc, r8
    5d3c:	add	r7, pc, r7
    5d40:	add	r6, pc, r6
    5d44:	add	r5, pc, r5
    5d48:	add	r4, pc, r4
    5d4c:	add	lr, pc, lr
    5d50:	mov	ip, fp
    5d54:	add	r3, r1, #32
    5d58:	str	r3, [sp]
    5d5c:	ldr	r2, [sp]
    5d60:	mov	r3, #0
    5d64:	str	fp, [sp, #4]
    5d68:	str	ip, [r2, fp]!
    5d6c:	b	5d8c <rb_des_init+0xd74>
    5d70:	tst	r3, #128	; 0x80
    5d74:	str	ip, [r2, #4]
    5d78:	ldrbne	r0, [r1]
    5d7c:	add	r2, r2, #4
    5d80:	addne	r0, lr, r0, lsl #2
    5d84:	ldrne	r0, [r0, #680]	; 0x2a8
    5d88:	strne	r0, [r2]
    5d8c:	tst	r3, #64	; 0x40
    5d90:	beq	5dac <rb_des_init+0xd94>
    5d94:	ldrb	r0, [r1, #1]
    5d98:	ldr	fp, [r2]
    5d9c:	add	r0, sl, r0, lsl #2
    5da0:	ldr	r0, [r0, #680]	; 0x2a8
    5da4:	orr	r0, fp, r0
    5da8:	str	r0, [r2]
    5dac:	tst	r3, #32
    5db0:	beq	5dcc <rb_des_init+0xdb4>
    5db4:	ldrb	r0, [r1, #2]
    5db8:	ldr	fp, [r2]
    5dbc:	add	r0, r9, r0, lsl #2
    5dc0:	ldr	r0, [r0, #680]	; 0x2a8
    5dc4:	orr	r0, fp, r0
    5dc8:	str	r0, [r2]
    5dcc:	tst	r3, #16
    5dd0:	beq	5dec <rb_des_init+0xdd4>
    5dd4:	ldrb	r0, [r1, #3]
    5dd8:	ldr	fp, [r2]
    5ddc:	add	r0, r8, r0, lsl #2
    5de0:	ldr	r0, [r0, #680]	; 0x2a8
    5de4:	orr	r0, fp, r0
    5de8:	str	r0, [r2]
    5dec:	tst	r3, #8
    5df0:	beq	5e0c <rb_des_init+0xdf4>
    5df4:	ldrb	r0, [r1, #4]
    5df8:	ldr	fp, [r2]
    5dfc:	add	r0, r7, r0, lsl #2
    5e00:	ldr	r0, [r0, #680]	; 0x2a8
    5e04:	orr	r0, fp, r0
    5e08:	str	r0, [r2]
    5e0c:	tst	r3, #4
    5e10:	beq	5e2c <rb_des_init+0xe14>
    5e14:	ldrb	r0, [r1, #5]
    5e18:	ldr	fp, [r2]
    5e1c:	add	r0, r6, r0, lsl #2
    5e20:	ldr	r0, [r0, #680]	; 0x2a8
    5e24:	orr	r0, fp, r0
    5e28:	str	r0, [r2]
    5e2c:	tst	r3, #2
    5e30:	beq	5e4c <rb_des_init+0xe34>
    5e34:	ldrb	r0, [r1, #6]
    5e38:	ldr	fp, [r2]
    5e3c:	add	r0, r5, r0, lsl #2
    5e40:	ldr	r0, [r0, #680]	; 0x2a8
    5e44:	orr	r0, fp, r0
    5e48:	str	r0, [r2]
    5e4c:	tst	r3, #1
    5e50:	beq	5e6c <rb_des_init+0xe54>
    5e54:	ldrb	r0, [r1, #7]
    5e58:	ldr	fp, [r2]
    5e5c:	add	r0, r4, r0, lsl #2
    5e60:	ldr	r0, [r0, #680]	; 0x2a8
    5e64:	orr	r0, fp, r0
    5e68:	str	r0, [r2]
    5e6c:	add	r3, r3, #1
    5e70:	cmp	r3, #256	; 0x100
    5e74:	bne	5d70 <rb_des_init+0xd58>
    5e78:	ldr	fp, [sp, #4]
    5e7c:	add	r1, r1, #8
    5e80:	add	fp, fp, #1024	; 0x400
    5e84:	cmp	fp, #4096	; 0x1000
    5e88:	bne	5d5c <rb_des_init+0xd44>
    5e8c:	ldr	r3, [pc, #560]	; 60c4 <rb_des_init+0x10ac>
    5e90:	mov	r2, #1
    5e94:	add	r3, pc, r3
    5e98:	str	r2, [r3]
    5e9c:	add	sp, sp, #116	; 0x74
    5ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ea4:	ldr	fp, [pc, #540]	; 60c8 <rb_des_init+0x10b0>
    5ea8:	add	fp, pc, fp
    5eac:	add	r7, fp, r7, lsl #2
    5eb0:	ldr	r7, [r7, #712]	; 0x2c8
    5eb4:	orr	r2, r2, r7
    5eb8:	str	r2, [r4]
    5ebc:	b	59d8 <rb_des_init+0x9c0>
    5ec0:	ldr	lr, [sp, #16]
    5ec4:	add	r1, lr, r1, lsl #2
    5ec8:	ldr	lr, [ip]
    5ecc:	ldr	r1, [r1, #696]	; 0x2b8
    5ed0:	orr	r1, lr, r1
    5ed4:	str	r1, [ip]
    5ed8:	b	5858 <rb_des_init+0x840>
    5edc:	ldr	lr, [sp, #24]
    5ee0:	add	r1, lr, r1, lsl #2
    5ee4:	ldr	lr, [ip]
    5ee8:	ldr	r1, [r1, #696]	; 0x2b8
    5eec:	orr	r1, lr, r1
    5ef0:	str	r1, [ip]
    5ef4:	b	588c <rb_des_init+0x874>
    5ef8:	ldr	fp, [sp, #32]
    5efc:	add	r1, fp, r1, lsl #2
    5f00:	ldr	fp, [ip]
    5f04:	ldr	r1, [r1, #696]	; 0x2b8
    5f08:	orr	r1, fp, r1
    5f0c:	str	r1, [ip]
    5f10:	b	58c0 <rb_des_init+0x8a8>
    5f14:	ldr	fp, [sp, #40]	; 0x28
    5f18:	add	r1, fp, r1, lsl #2
    5f1c:	ldr	fp, [ip]
    5f20:	ldr	r1, [r1, #696]	; 0x2b8
    5f24:	orr	r1, fp, r1
    5f28:	str	r1, [ip]
    5f2c:	b	58f8 <rb_des_init+0x8e0>
    5f30:	ldr	fp, [sp, #48]	; 0x30
    5f34:	add	r1, fp, r1, lsl #2
    5f38:	ldr	fp, [ip]
    5f3c:	ldr	r1, [r1, #696]	; 0x2b8
    5f40:	orr	r1, fp, r1
    5f44:	str	r1, [ip]
    5f48:	b	5930 <rb_des_init+0x918>
    5f4c:	ldr	fp, [sp, #56]	; 0x38
    5f50:	add	r1, fp, r1, lsl #2
    5f54:	ldr	fp, [ip]
    5f58:	ldr	r1, [r1, #696]	; 0x2b8
    5f5c:	orr	r1, fp, r1
    5f60:	str	r1, [ip]
    5f64:	b	5968 <rb_des_init+0x950>
    5f68:	ldr	lr, [pc, #348]	; 60cc <rb_des_init+0x10b4>
    5f6c:	add	lr, pc, lr
    5f70:	add	r1, lr, r1, lsl #2
    5f74:	ldr	r1, [r1, #696]	; 0x2b8
    5f78:	str	r1, [ip]
    5f7c:	b	5824 <rb_des_init+0x80c>
    5f80:	.word	0x000294b0
    5f84:	.word	0x00015198
    5f88:	.word	0x00015194
    5f8c:	.word	0x00029410
    5f90:	.word	0x000150b8
    5f94:	.word	0x0002d390
    5f98:	.word	0x00015060
    5f9c:	.word	0x00015020
    5fa0:	.word	0x000372a4
    5fa4:	.word	0x00014fe0
    5fa8:	.word	0x00039288
    5fac:	.word	0x00014fc4
    5fb0:	.word	0x00033278
    5fb4:	.word	0x0002f270
    5fb8:	.word	0x00031264
    5fbc:	.word	0x00014f88
    5fc0:	.word	0x00014ee4
    5fc4:	.word	0x00014f00
    5fc8:	.word	0x00014ef0
    5fcc:	.word	0x00014ee0
    5fd0:	.word	0x00014ed0
    5fd4:	.word	0x00014ea4
    5fd8:	.word	0x00014ec0
    5fdc:	.word	0x00014ea0
    5fe0:	.word	0x00014eb0
    5fe4:	.word	0x00014d8c
    5fe8:	.word	0x00014d64
    5fec:	.word	0x00014d34
    5ff0:	.word	0x00014d0c
    5ff4:	.word	0x00014cdc
    5ff8:	.word	0x00014cb4
    5ffc:	.word	0x00014c84
    6000:	.word	0x00014c5c
    6004:	.word	0x00014c10
    6008:	.word	0x00014bf0
    600c:	.word	0x00014b5c
    6010:	.word	0x00014b44
    6014:	.word	0x00014af4
    6018:	.word	0x00014ad4
    601c:	.word	0x00014ab0
    6020:	.word	0x00014a6c
    6024:	.word	0x00014a5c
    6028:	.word	0x00014a4c
    602c:	.word	0x00014a3c
    6030:	.word	0x00014a2c
    6034:	.word	0x00014a1c
    6038:	.word	0x00014a0c
    603c:	.word	0x000149fc
    6040:	.word	0x000149ec
    6044:	.word	0x000149dc
    6048:	.word	0x000149d0
    604c:	.word	0x000149c4
    6050:	.word	0x0001484c
    6054:	.word	0x0001481c
    6058:	.word	0x000147e8
    605c:	.word	0x000147b4
    6060:	.word	0x0001477c
    6064:	.word	0x00014744
    6068:	.word	0x0001470c
    606c:	.word	0x000146c0
    6070:	.word	0x000146a4
    6074:	.word	0x00014684
    6078:	.word	0x00014664
    607c:	.word	0x00014644
    6080:	.word	0x00014624
    6084:	.word	0x000145f4
    6088:	.word	0x000145dc
    608c:	.word	0x000145c0
    6090:	.word	0x000145a4
    6094:	.word	0x00014588
    6098:	.word	0x00014568
    609c:	.word	0x00014504
    60a0:	.word	0x000347b0
    60a4:	.word	0x000144b0
    60a8:	.word	0x000144ac
    60ac:	.word	0x000144a8
    60b0:	.word	0x000144a4
    60b4:	.word	0x000144a0
    60b8:	.word	0x0001449c
    60bc:	.word	0x00014498
    60c0:	.word	0x00014494
    60c4:	.word	0x00028638
    60c8:	.word	0x00014338
    60cc:	.word	0x00014274

000060d0 <rb_sha256_process_block>:
    60d0:	ldr	r3, [r2, #32]
    60d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    60d8:	add	r3, r1, r3
    60dc:	sub	sp, sp, #324	; 0x144
    60e0:	str	r3, [r2, #32]
    60e4:	cmp	r1, r3
    60e8:	lsr	r3, r1, #2
    60ec:	str	r3, [sp, #44]	; 0x2c
    60f0:	str	r2, [sp, #60]	; 0x3c
    60f4:	mov	r3, r2
    60f8:	ldr	r2, [r2]
    60fc:	str	r2, [sp, #24]
    6100:	ldr	r2, [r3, #4]
    6104:	str	r2, [sp, #28]
    6108:	ldr	r2, [r3, #8]
    610c:	str	r2, [sp, #20]
    6110:	ldr	r2, [r3, #12]
    6114:	str	r2, [sp, #16]
    6118:	ldr	r2, [r3, #16]
    611c:	str	r2, [sp, #12]
    6120:	ldr	r2, [r3, #20]
    6124:	str	r2, [sp, #8]
    6128:	ldr	r2, [r3, #24]
    612c:	str	r2, [sp, #32]
    6130:	ldr	r2, [r3, #28]
    6134:	str	r2, [sp, #36]	; 0x24
    6138:	movhi	r2, r3
    613c:	ldrhi	r3, [r3, #36]	; 0x24
    6140:	addhi	r3, r3, #1
    6144:	strhi	r3, [r2, #36]	; 0x24
    6148:	ldr	r3, [sp, #44]	; 0x2c
    614c:	cmp	r3, #0
    6150:	beq	6440 <rb_sha256_process_block+0x370>
    6154:	ldr	r3, [pc, #816]	; 648c <rb_sha256_process_block+0x3bc>
    6158:	add	fp, sp, #64	; 0x40
    615c:	add	r3, pc, r3
    6160:	add	r3, r3, #840	; 0x348
    6164:	str	r3, [sp, #4]
    6168:	add	r3, sp, #308	; 0x134
    616c:	str	r3, [sp, #48]	; 0x30
    6170:	add	r3, sp, #248	; 0xf8
    6174:	add	r2, r0, #64	; 0x40
    6178:	str	r3, [sp, #52]	; 0x34
    617c:	add	r3, sp, #316	; 0x13c
    6180:	str	r2, [sp, #40]	; 0x28
    6184:	str	r3, [sp, #56]	; 0x38
    6188:	ldr	r6, [sp, #40]	; 0x28
    618c:	ldr	r2, [r6, #-60]	; 0xffffffc4
    6190:	ldr	lr, [r6, #-52]	; 0xffffffcc
    6194:	ldr	r3, [r6, #-56]	; 0xffffffc8
    6198:	rev	r2, r2
    619c:	ldr	r0, [r6, #-48]	; 0xffffffd0
    61a0:	rev	lr, lr
    61a4:	str	r2, [sp, #68]	; 0x44
    61a8:	ldr	r2, [r6, #-36]	; 0xffffffdc
    61ac:	ldr	r5, [r6, #-24]	; 0xffffffe8
    61b0:	ldr	ip, [r6, #-44]	; 0xffffffd4
    61b4:	ldr	r1, [r6, #-40]	; 0xffffffd8
    61b8:	rev	r3, r3
    61bc:	str	lr, [sp, #76]	; 0x4c
    61c0:	ldr	lr, [r6, #-28]	; 0xffffffe4
    61c4:	rev	r0, r0
    61c8:	str	r3, [sp, #72]	; 0x48
    61cc:	rev	r2, r2
    61d0:	ldr	r3, [r6, #-32]	; 0xffffffe0
    61d4:	rev	ip, ip
    61d8:	rev	r1, r1
    61dc:	str	r0, [sp, #80]	; 0x50
    61e0:	str	r2, [sp, #92]	; 0x5c
    61e4:	rev	r0, lr
    61e8:	ldr	r2, [r6, #-12]
    61ec:	rev	lr, r5
    61f0:	ldr	r5, [r6, #-8]
    61f4:	ldr	r4, [r6, #-64]	; 0xffffffc0
    61f8:	rev	r3, r3
    61fc:	str	ip, [sp, #84]	; 0x54
    6200:	str	r1, [sp, #88]	; 0x58
    6204:	ldr	ip, [r6, #-20]	; 0xffffffec
    6208:	ldr	r1, [r6, #-16]
    620c:	str	r0, [sp, #100]	; 0x64
    6210:	ldr	r0, [r6, #-4]
    6214:	str	r3, [sp, #96]	; 0x60
    6218:	str	lr, [sp, #104]	; 0x68
    621c:	rev	r3, r2
    6220:	mov	lr, fp
    6224:	rev	r2, r5
    6228:	mov	r5, #16
    622c:	rev	r4, r4
    6230:	rev	ip, ip
    6234:	rev	r1, r1
    6238:	rev	r0, r0
    623c:	str	r4, [sp, #64]	; 0x40
    6240:	str	ip, [sp, #108]	; 0x6c
    6244:	str	r1, [sp, #112]	; 0x70
    6248:	str	r3, [sp, #116]	; 0x74
    624c:	str	r2, [sp, #120]	; 0x78
    6250:	str	r0, [sp, #124]	; 0x7c
    6254:	ror	ip, r2, #19
    6258:	eor	ip, ip, r2, ror #17
    625c:	eor	r2, ip, r2, lsr #10
    6260:	ror	r3, r0, #19
    6264:	add	r2, r2, r4
    6268:	eor	r3, r3, r0, ror #17
    626c:	ldmib	lr, {r1, r4}
    6270:	ldr	ip, [lr, #36]	; 0x24
    6274:	eor	r3, r3, r0, lsr #10
    6278:	ldr	r0, [lr, #40]	; 0x28
    627c:	add	ip, r2, ip
    6280:	add	r3, r3, r0
    6284:	ror	r2, r1, #18
    6288:	ror	r0, r4, #18
    628c:	eor	r2, r2, r1, ror #7
    6290:	eor	r0, r0, r4, ror #7
    6294:	add	r5, r5, #2
    6298:	eor	r2, r2, r1, lsr #3
    629c:	add	r3, r3, r1
    62a0:	eor	r0, r0, r4, lsr #3
    62a4:	add	r2, ip, r2
    62a8:	add	r0, r3, r0
    62ac:	cmp	r5, #62	; 0x3e
    62b0:	str	r2, [lr, #64]	; 0x40
    62b4:	str	r0, [lr, #68]	; 0x44
    62b8:	add	lr, lr, #8
    62bc:	bne	6254 <rb_sha256_process_block+0x184>
    62c0:	ldr	r4, [sp, #48]	; 0x30
    62c4:	ldr	lr, [sp, #52]	; 0x34
    62c8:	ldr	ip, [sp, #56]	; 0x38
    62cc:	ldr	r2, [lr, #56]	; 0x38
    62d0:	mov	r5, lr
    62d4:	ldr	r1, [lr, #4]!
    62d8:	ror	r3, r2, #19
    62dc:	ldr	r0, [r5, #36]	; 0x24
    62e0:	eor	r3, r3, r2, ror #17
    62e4:	ldr	r5, [r5]
    62e8:	eor	r3, r3, r2, lsr #10
    62ec:	ror	r2, r1, #18
    62f0:	add	r0, r0, r5
    62f4:	eor	r2, r2, r1, ror #7
    62f8:	add	r3, r3, r0
    62fc:	eor	r2, r2, r1, lsr #3
    6300:	add	r3, r3, r2
    6304:	str	r3, [r4, #4]!
    6308:	cmp	r4, ip
    630c:	bne	62cc <rb_sha256_process_block+0x1fc>
    6310:	ldr	r3, [sp, #36]	; 0x24
    6314:	ldr	r8, [sp, #32]
    6318:	ldr	r9, [sp, #8]
    631c:	ldr	lr, [sp, #12]
    6320:	ldr	sl, [sp, #16]
    6324:	ldr	r6, [sp, #20]
    6328:	ldr	r7, [sp, #28]
    632c:	ldr	r4, [sp, #24]
    6330:	mov	r5, #0
    6334:	b	6350 <rb_sha256_process_block+0x280>
    6338:	mov	r8, r9
    633c:	mov	r6, r7
    6340:	mov	r9, lr
    6344:	mov	r7, r4
    6348:	mov	lr, r0
    634c:	mov	r4, r2
    6350:	ldr	r2, [sp, #4]
    6354:	ldr	r1, [fp, r5, lsl #2]
    6358:	ror	r0, lr, #11
    635c:	ldr	ip, [r2, r5, lsl #2]
    6360:	eor	r0, r0, lr, ror #6
    6364:	add	r1, ip, r1
    6368:	eor	r0, r0, lr, ror #25
    636c:	and	ip, r9, lr
    6370:	bic	r2, r8, lr
    6374:	add	r0, r0, r1
    6378:	eor	r2, r2, ip
    637c:	ror	r1, r4, #13
    6380:	eor	ip, r6, r7
    6384:	add	r2, r0, r2
    6388:	eor	r1, r1, r4, ror #2
    638c:	and	r0, r6, r7
    6390:	and	ip, ip, r4
    6394:	eor	ip, ip, r0
    6398:	add	r5, r5, #1
    639c:	eor	r1, r1, r4, ror #22
    63a0:	add	r2, r2, r3
    63a4:	add	r1, r1, ip
    63a8:	cmp	r5, #64	; 0x40
    63ac:	add	r0, r2, sl
    63b0:	mov	r3, r8
    63b4:	add	r2, r2, r1
    63b8:	mov	sl, r6
    63bc:	bne	6338 <rb_sha256_process_block+0x268>
    63c0:	ldr	r3, [sp, #44]	; 0x2c
    63c4:	mov	r1, r0
    63c8:	subs	r3, r3, #16
    63cc:	str	r3, [sp, #44]	; 0x2c
    63d0:	ldr	r3, [sp, #24]
    63d4:	add	r3, r3, r2
    63d8:	str	r3, [sp, #24]
    63dc:	ldr	r3, [sp, #28]
    63e0:	add	r3, r3, r4
    63e4:	str	r3, [sp, #28]
    63e8:	ldr	r3, [sp, #20]
    63ec:	add	r3, r3, r7
    63f0:	str	r3, [sp, #20]
    63f4:	ldr	r3, [sp, #16]
    63f8:	add	r3, r3, r6
    63fc:	str	r3, [sp, #16]
    6400:	ldr	r3, [sp, #12]
    6404:	add	r3, r3, r1
    6408:	str	r3, [sp, #12]
    640c:	ldr	r3, [sp, #8]
    6410:	add	r3, r3, lr
    6414:	str	r3, [sp, #8]
    6418:	ldr	r3, [sp, #32]
    641c:	add	r3, r3, r9
    6420:	str	r3, [sp, #32]
    6424:	ldr	r3, [sp, #36]	; 0x24
    6428:	add	r3, r3, r8
    642c:	str	r3, [sp, #36]	; 0x24
    6430:	ldr	r3, [sp, #40]	; 0x28
    6434:	add	r3, r3, #64	; 0x40
    6438:	str	r3, [sp, #40]	; 0x28
    643c:	bne	6188 <rb_sha256_process_block+0xb8>
    6440:	ldr	r3, [sp, #60]	; 0x3c
    6444:	ldr	r2, [sp, #24]
    6448:	str	r2, [r3]
    644c:	ldr	r2, [sp, #28]
    6450:	str	r2, [r3, #4]
    6454:	ldr	r2, [sp, #20]
    6458:	str	r2, [r3, #8]
    645c:	ldr	r2, [sp, #16]
    6460:	str	r2, [r3, #12]
    6464:	ldr	r2, [sp, #12]
    6468:	str	r2, [r3, #16]
    646c:	ldr	r2, [sp, #8]
    6470:	str	r2, [r3, #20]
    6474:	ldr	r2, [sp, #32]
    6478:	str	r2, [r3, #24]
    647c:	ldr	r2, [sp, #36]	; 0x24
    6480:	str	r2, [r3, #28]
    6484:	add	sp, sp, #324	; 0x144
    6488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    648c:	.word	0x00014084

00006490 <rb_sha512_process_block>:
    6490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6494:	sub	sp, sp, #1004	; 0x3ec
    6498:	mov	ip, r2
    649c:	str	r2, [sp, #356]	; 0x164
    64a0:	ldrd	r2, [r2, #64]	; 0x40
    64a4:	mov	r5, #0
    64a8:	adds	r6, r2, r1
    64ac:	adc	r7, r3, r5
    64b0:	lsr	r2, r1, #3
    64b4:	cmp	r5, r7
    64b8:	str	r2, [sp, #324]	; 0x144
    64bc:	ldrd	r2, [ip]
    64c0:	cmpeq	r1, r6
    64c4:	add	r1, sp, #296	; 0x128
    64c8:	strd	r6, [ip, #64]	; 0x40
    64cc:	strd	r2, [r1]
    64d0:	ldrd	r2, [ip, #8]
    64d4:	mov	r1, ip
    64d8:	add	ip, sp, #288	; 0x120
    64dc:	strd	r2, [ip]
    64e0:	ldrd	r2, [r1, #16]
    64e4:	add	ip, sp, #280	; 0x118
    64e8:	strd	r2, [ip]
    64ec:	ldrd	r2, [r1, #24]
    64f0:	add	ip, sp, #272	; 0x110
    64f4:	strd	r2, [ip]
    64f8:	ldrd	r2, [r1, #32]
    64fc:	add	ip, sp, #264	; 0x108
    6500:	strd	r2, [ip]
    6504:	ldrd	r2, [r1, #40]	; 0x28
    6508:	add	ip, sp, #256	; 0x100
    650c:	strd	r2, [ip]
    6510:	ldrd	r2, [r1, #48]	; 0x30
    6514:	add	ip, sp, #304	; 0x130
    6518:	strd	r2, [ip]
    651c:	ldrd	r2, [r1, #56]	; 0x38
    6520:	add	ip, sp, #312	; 0x138
    6524:	strd	r2, [ip]
    6528:	bls	653c <rb_sha512_process_block+0xac>
    652c:	ldrd	r2, [r1, #72]	; 0x48
    6530:	adds	r4, r2, #1
    6534:	adc	r5, r3, #0
    6538:	strd	r4, [r1, #72]	; 0x48
    653c:	ldr	r3, [sp, #324]	; 0x144
    6540:	cmp	r3, #0
    6544:	beq	6d88 <rb_sha512_process_block+0x8f8>
    6548:	ldr	r3, [pc, #2216]	; 6df8 <rb_sha512_process_block+0x968>
    654c:	add	r2, r0, #128	; 0x80
    6550:	add	r3, pc, r3
    6554:	add	r3, r3, #1088	; 0x440
    6558:	add	r3, r3, #8
    655c:	str	r3, [sp, #248]	; 0xf8
    6560:	add	r3, sp, #360	; 0x168
    6564:	str	r3, [sp, #344]	; 0x158
    6568:	add	r3, sp, #976	; 0x3d0
    656c:	str	r3, [sp, #348]	; 0x15c
    6570:	add	r3, sp, #856	; 0x358
    6574:	str	r3, [sp, #352]	; 0x160
    6578:	add	r3, sp, #992	; 0x3e0
    657c:	str	r2, [sp, #320]	; 0x140
    6580:	str	r3, [sp, #252]	; 0xfc
    6584:	ldr	r9, [sp, #320]	; 0x140
    6588:	ldr	r3, [r9, #-124]	; 0xffffff84
    658c:	ldr	r0, [r9, #-116]	; 0xffffff8c
    6590:	ldr	lr, [r9, #-108]	; 0xffffff94
    6594:	ldr	r2, [r9, #-128]	; 0xffffff80
    6598:	rev	r3, r3
    659c:	ldr	r1, [r9, #-120]	; 0xffffff88
    65a0:	str	r3, [sp, #16]
    65a4:	rev	r2, r2
    65a8:	rev	r3, r0
    65ac:	rev	r0, lr
    65b0:	ldr	lr, [sp, #344]	; 0x158
    65b4:	str	r2, [sp, #20]
    65b8:	ldr	ip, [r9, #-112]	; 0xffffff90
    65bc:	rev	r8, r1
    65c0:	str	r3, [sp]
    65c4:	ldrd	r2, [sp, #16]
    65c8:	str	r8, [lr, #12]
    65cc:	mov	r8, lr
    65d0:	rev	r1, ip
    65d4:	strd	r2, [lr]
    65d8:	ldr	r4, [r9, #-104]	; 0xffffff98
    65dc:	ldr	r5, [r9, #-100]	; 0xffffff9c
    65e0:	ldr	r6, [r9, #-96]	; 0xffffffa0
    65e4:	ldr	r7, [r9, #-92]	; 0xffffffa4
    65e8:	ldr	r3, [sp]
    65ec:	str	r1, [r8, #20]
    65f0:	ldr	r1, [r9, #-80]	; 0xffffffb0
    65f4:	str	r3, [lr, #8]
    65f8:	rev	r4, r4
    65fc:	ldr	r3, [r9, #-68]	; 0xffffffbc
    6600:	rev	r5, r5
    6604:	rev	r6, r6
    6608:	rev	r7, r7
    660c:	rev	r1, r1
    6610:	ldr	ip, [r9, #-88]	; 0xffffffa8
    6614:	ldr	lr, [r9, #-84]	; 0xffffffac
    6618:	str	r0, [r8, #16]
    661c:	str	r4, [r8, #28]
    6620:	ldr	r0, [r9, #-76]	; 0xffffffb4
    6624:	ldr	r2, [r9, #-72]	; 0xffffffb8
    6628:	str	r5, [r8, #24]
    662c:	str	r6, [r8, #36]	; 0x24
    6630:	str	r7, [r8, #32]
    6634:	str	r1, [r8, #52]	; 0x34
    6638:	ldr	r1, [r9, #-8]
    663c:	rev	r3, r3
    6640:	str	r3, [r8, #56]	; 0x38
    6644:	rev	lr, lr
    6648:	rev	r3, r1
    664c:	ldr	r1, [r9, #-56]	; 0xffffffc8
    6650:	ldr	r6, [r9, #-16]
    6654:	str	lr, [r8, #40]	; 0x28
    6658:	ldr	lr, [r9, #-12]
    665c:	rev	ip, ip
    6660:	rev	r0, r0
    6664:	rev	r1, r1
    6668:	str	ip, [r8, #44]	; 0x2c
    666c:	str	r0, [r8, #48]	; 0x30
    6670:	ldr	ip, [r9, #-64]	; 0xffffffc0
    6674:	ldr	r0, [r9, #-60]	; 0xffffffc4
    6678:	rev	r4, lr
    667c:	rev	r5, r6
    6680:	ldr	lr, [r9, #-52]	; 0xffffffcc
    6684:	ldr	r6, [r9, #-48]	; 0xffffffd0
    6688:	str	r1, [r8, #76]	; 0x4c
    668c:	ldr	r1, [r9, #-40]	; 0xffffffd8
    6690:	ldr	r7, [r9, #-4]
    6694:	rev	r2, r2
    6698:	rev	ip, ip
    669c:	rev	r0, r0
    66a0:	rev	lr, lr
    66a4:	rev	r6, r6
    66a8:	rev	r1, r1
    66ac:	str	r2, [r8, #60]	; 0x3c
    66b0:	str	ip, [r8, #68]	; 0x44
    66b4:	rev	r2, r7
    66b8:	str	r0, [r8, #64]	; 0x40
    66bc:	ldr	r7, [r9, #-44]	; 0xffffffd4
    66c0:	str	lr, [r8, #72]	; 0x48
    66c4:	str	r6, [r8, #84]	; 0x54
    66c8:	ldr	lr, [r9, #-36]	; 0xffffffdc
    66cc:	ldr	ip, [r9, #-32]	; 0xffffffe0
    66d0:	ldr	r0, [r9, #-28]	; 0xffffffe4
    66d4:	str	r1, [r8, #92]	; 0x5c
    66d8:	ldr	r6, [r9, #-20]	; 0xffffffec
    66dc:	ldr	r1, [r9, #-24]	; 0xffffffe8
    66e0:	rev	lr, lr
    66e4:	rev	ip, ip
    66e8:	rev	r7, r7
    66ec:	rev	r0, r0
    66f0:	rev	r1, r1
    66f4:	rev	r6, r6
    66f8:	str	lr, [r8, #88]	; 0x58
    66fc:	strd	r4, [r8, #112]	; 0x70
    6700:	strd	r2, [r8, #120]	; 0x78
    6704:	str	r7, [r8, #80]	; 0x50
    6708:	str	ip, [r8, #100]	; 0x64
    670c:	mov	ip, r8
    6710:	str	r0, [r8, #96]	; 0x60
    6714:	str	r1, [r8, #108]	; 0x6c
    6718:	str	r6, [r8, #104]	; 0x68
    671c:	ldrd	r8, [sp, #16]
    6720:	mov	lr, #16
    6724:	strd	r4, [sp, #8]
    6728:	strd	r2, [sp]
    672c:	ldrd	r4, [sp, #8]
    6730:	ldrd	r6, [ip, #8]
    6734:	add	lr, lr, #2
    6738:	lsr	r0, r4, #19
    673c:	lsr	r3, r4, #6
    6740:	str	r3, [sp, #144]	; 0x90
    6744:	lsl	r1, r5, #3
    6748:	orr	r3, r0, r5, lsl #13
    674c:	str	r3, [sp, #176]	; 0xb0
    6750:	orr	r3, r1, r4, lsr #29
    6754:	str	r3, [sp, #188]	; 0xbc
    6758:	ldr	r3, [sp, #144]	; 0x90
    675c:	lsr	r0, r5, #19
    6760:	orr	r3, r3, r5, lsl #26
    6764:	lsl	r1, r4, #3
    6768:	str	r3, [sp, #144]	; 0x90
    676c:	orr	r3, r0, r4, lsl #13
    6770:	str	r3, [sp, #180]	; 0xb4
    6774:	orr	r3, r1, r5, lsr #29
    6778:	str	r3, [sp, #184]	; 0xb8
    677c:	lsr	r3, r5, #6
    6780:	str	r3, [sp, #148]	; 0x94
    6784:	ldrd	r4, [sp, #176]	; 0xb0
    6788:	ldrd	r2, [sp, #184]	; 0xb8
    678c:	ldrd	r0, [sp]
    6790:	add	ip, ip, #16
    6794:	eor	r4, r4, r2
    6798:	eor	r5, r5, r3
    679c:	ldrd	r2, [sp, #144]	; 0x90
    67a0:	eor	r2, r2, r4
    67a4:	adds	r4, r2, r8
    67a8:	eor	r3, r3, r5
    67ac:	adc	r5, r3, r9
    67b0:	mov	r2, r0
    67b4:	lsr	r3, r0, #6
    67b8:	orr	r3, r3, r1, lsl #26
    67bc:	lsl	r1, r1, #3
    67c0:	str	r3, [sp, #160]	; 0xa0
    67c4:	orr	r3, r1, r2, lsr #29
    67c8:	str	r3, [sp, #212]	; 0xd4
    67cc:	ldrd	r2, [sp]
    67d0:	ldrd	r8, [ip]
    67d4:	lsr	r1, r2, #19
    67d8:	orr	r3, r1, r3, lsl #13
    67dc:	ldrd	r0, [sp]
    67e0:	str	r3, [sp, #216]	; 0xd8
    67e4:	lsr	r2, r6, #1
    67e8:	lsr	r3, r1, #6
    67ec:	str	r3, [sp, #164]	; 0xa4
    67f0:	lsr	r3, r6, #7
    67f4:	str	r3, [sp, #152]	; 0x98
    67f8:	lsr	r3, r8, #7
    67fc:	str	r3, [sp, #168]	; 0xa8
    6800:	mov	r3, r1
    6804:	lsl	r1, r0, #3
    6808:	orr	r3, r1, r3, lsr #29
    680c:	ldrd	r0, [sp]
    6810:	str	r3, [sp, #208]	; 0xd0
    6814:	orr	r2, r2, r7, lsl #31
    6818:	lsr	r3, r1, #19
    681c:	orr	r3, r3, r0, lsl #13
    6820:	str	r3, [sp, #220]	; 0xdc
    6824:	lsr	r3, r6, #8
    6828:	ldr	r1, [sp, #152]	; 0x98
    682c:	orr	r3, r3, r7, lsl #24
    6830:	str	r2, [sp, #192]	; 0xc0
    6834:	str	r3, [sp, #200]	; 0xc8
    6838:	lsr	r2, r7, #1
    683c:	lsr	r3, r7, #8
    6840:	orr	r1, r1, r7, lsl #25
    6844:	orr	r2, r2, r6, lsl #31
    6848:	orr	r3, r3, r6, lsl #24
    684c:	str	r1, [sp, #152]	; 0x98
    6850:	str	r2, [sp, #196]	; 0xc4
    6854:	str	r3, [sp, #204]	; 0xcc
    6858:	ldr	r3, [sp, #168]	; 0xa8
    685c:	lsr	r1, r8, #8
    6860:	orr	r3, r3, r9, lsl #25
    6864:	str	r3, [sp, #168]	; 0xa8
    6868:	lsr	r3, r7, #7
    686c:	str	r3, [sp, #156]	; 0x9c
    6870:	lsr	r3, r9, #7
    6874:	str	r3, [sp, #172]	; 0xac
    6878:	ldrd	r2, [ip, #56]	; 0x38
    687c:	orr	r1, r1, r9, lsl #24
    6880:	str	r1, [sp, #224]	; 0xe0
    6884:	lsr	r1, r8, #1
    6888:	adds	r2, r2, r4
    688c:	orr	r1, r1, r9, lsl #31
    6890:	adc	r3, r3, r5
    6894:	str	r1, [sp, #232]	; 0xe8
    6898:	ldrd	r4, [sp, #192]	; 0xc0
    689c:	ldrd	r0, [sp, #200]	; 0xc8
    68a0:	eor	r5, r5, r1
    68a4:	lsr	r1, r9, #8
    68a8:	orr	r1, r1, r8, lsl #24
    68ac:	str	r1, [sp, #228]	; 0xe4
    68b0:	lsr	r1, r9, #1
    68b4:	orr	r1, r1, r8, lsl #31
    68b8:	eor	r4, r4, r0
    68bc:	str	r1, [sp, #236]	; 0xec
    68c0:	ldrd	r0, [sp, #152]	; 0x98
    68c4:	eor	r0, r0, r4
    68c8:	adds	r0, r0, r2
    68cc:	eor	r1, r1, r5
    68d0:	adc	r1, r1, r3
    68d4:	ldrd	r2, [sp, #216]	; 0xd8
    68d8:	strd	r0, [sp, #8]
    68dc:	ldrd	r0, [sp, #208]	; 0xd0
    68e0:	ldrd	r4, [sp, #232]	; 0xe8
    68e4:	eor	r0, r0, r2
    68e8:	eor	r1, r1, r3
    68ec:	ldrd	r2, [sp, #160]	; 0xa0
    68f0:	eor	r2, r2, r0
    68f4:	eor	r3, r3, r1
    68f8:	mov	r0, r2
    68fc:	mov	r1, r3
    6900:	ldrd	r2, [ip, #64]	; 0x40
    6904:	adds	r2, r2, r0
    6908:	adc	r3, r3, r1
    690c:	adds	r0, r2, r6
    6910:	adc	r1, r3, r7
    6914:	ldrd	r2, [sp, #224]	; 0xe0
    6918:	eor	r2, r2, r4
    691c:	eor	r3, r3, r5
    6920:	ldrd	r4, [sp, #168]	; 0xa8
    6924:	eor	r4, r4, r2
    6928:	adds	r4, r4, r0
    692c:	eor	r5, r5, r3
    6930:	adc	r5, r5, r1
    6934:	ldrd	r0, [sp, #8]
    6938:	mov	r2, r4
    693c:	mov	r3, r5
    6940:	cmp	lr, #78	; 0x4e
    6944:	strd	r0, [ip, #112]	; 0x70
    6948:	strd	r2, [ip, #120]	; 0x78
    694c:	strd	r2, [sp]
    6950:	bne	672c <rb_sha512_process_block+0x29c>
    6954:	ldr	lr, [sp, #348]	; 0x15c
    6958:	ldr	ip, [sp, #352]	; 0x160
    695c:	ldr	r4, [ip, #116]	; 0x74
    6960:	ldr	r3, [ip, #112]	; 0x70
    6964:	ldr	r7, [ip, #8]
    6968:	lsl	r1, r4, #3
    696c:	orr	r1, r1, r3, lsr #29
    6970:	lsr	r5, r4, #19
    6974:	lsr	r0, r3, #19
    6978:	lsr	sl, r3, #6
    697c:	str	r1, [sp, #92]	; 0x5c
    6980:	lsl	r1, r3, #3
    6984:	orr	r3, r5, r3, lsl #13
    6988:	str	r3, [sp, #84]	; 0x54
    698c:	ldrd	r2, [ip]
    6990:	orr	r0, r0, r4, lsl #13
    6994:	orr	r1, r1, r4, lsr #29
    6998:	str	r0, [sp, #80]	; 0x50
    699c:	str	r1, [sp, #88]	; 0x58
    69a0:	strd	r2, [sp]
    69a4:	orr	sl, sl, r4, lsl #26
    69a8:	ldrd	r2, [sp, #88]	; 0x58
    69ac:	lsr	fp, r4, #6
    69b0:	ldrd	r4, [sp, #80]	; 0x50
    69b4:	ldrd	r0, [ip, #72]	; 0x48
    69b8:	ldr	r6, [ip, #12]
    69bc:	eor	r4, r4, r2
    69c0:	eor	r5, r5, r3
    69c4:	ldrd	r2, [sp]
    69c8:	lsr	r8, r7, #7
    69cc:	orr	r8, r8, r6, lsl #25
    69d0:	adds	r2, r2, r0
    69d4:	adc	r3, r3, r1
    69d8:	lsr	r1, r7, #1
    69dc:	strd	r2, [sp]
    69e0:	orr	r3, r1, r6, lsl #31
    69e4:	lsr	r1, r7, #8
    69e8:	str	r3, [sp, #96]	; 0x60
    69ec:	orr	r3, r1, r6, lsl #24
    69f0:	lsr	r1, r6, #1
    69f4:	str	r3, [sp, #104]	; 0x68
    69f8:	orr	r3, r1, r7, lsl #31
    69fc:	lsr	r1, r6, #8
    6a00:	str	r3, [sp, #100]	; 0x64
    6a04:	orr	r3, r1, r7, lsl #24
    6a08:	str	r3, [sp, #108]	; 0x6c
    6a0c:	ldrd	r2, [sp, #104]	; 0x68
    6a10:	lsr	r9, r6, #7
    6a14:	ldrd	r6, [sp, #96]	; 0x60
    6a18:	ldrd	r0, [sp]
    6a1c:	eor	r4, r4, sl
    6a20:	eor	r6, r6, r2
    6a24:	eor	r7, r7, r3
    6a28:	adds	r0, r0, r4
    6a2c:	eor	r5, r5, fp
    6a30:	eor	r6, r6, r8
    6a34:	adc	r1, r1, r5
    6a38:	eor	r7, r7, r9
    6a3c:	adds	r2, r0, r6
    6a40:	adc	r3, r1, r7
    6a44:	add	ip, ip, #8
    6a48:	strd	r2, [lr, #8]!
    6a4c:	ldr	r3, [sp, #252]	; 0xfc
    6a50:	cmp	lr, r3
    6a54:	bne	695c <rb_sha512_process_block+0x4cc>
    6a58:	add	r3, sp, #328	; 0x148
    6a5c:	mov	ip, #0
    6a60:	strd	r8, [r3]
    6a64:	add	r3, sp, #312	; 0x138
    6a68:	ldrd	r2, [r3]
    6a6c:	strd	r2, [sp, #120]	; 0x78
    6a70:	add	r3, sp, #304	; 0x130
    6a74:	ldrd	r2, [r3]
    6a78:	strd	r2, [sp, #16]
    6a7c:	add	r3, sp, #256	; 0x100
    6a80:	ldrd	r2, [r3]
    6a84:	strd	r2, [sp, #24]
    6a88:	add	r3, sp, #264	; 0x108
    6a8c:	ldrd	r6, [r3]
    6a90:	add	r3, sp, #272	; 0x110
    6a94:	ldrd	r2, [r3]
    6a98:	strd	r2, [sp, #112]	; 0x70
    6a9c:	add	r3, sp, #280	; 0x118
    6aa0:	ldrd	r2, [r3]
    6aa4:	strd	r2, [sp]
    6aa8:	add	r3, sp, #288	; 0x120
    6aac:	ldrd	r2, [r3]
    6ab0:	strd	r2, [sp, #8]
    6ab4:	add	r3, sp, #296	; 0x128
    6ab8:	ldrd	r8, [r3]
    6abc:	add	r3, sp, #336	; 0x150
    6ac0:	strd	sl, [r3]
    6ac4:	ldr	r3, [sp, #344]	; 0x158
    6ac8:	str	r3, [sp, #244]	; 0xf4
    6acc:	b	6af8 <rb_sha512_process_block+0x668>
    6ad0:	ldrd	r0, [sp, #24]
    6ad4:	strd	r6, [sp, #24]
    6ad8:	mov	r6, r2
    6adc:	strd	r0, [sp, #16]
    6ae0:	ldrd	r0, [sp, #8]
    6ae4:	mov	r7, r3
    6ae8:	strd	r8, [sp, #8]
    6aec:	mov	r8, r4
    6af0:	mov	r9, r5
    6af4:	strd	r0, [sp]
    6af8:	lsr	r2, r6, #14
    6afc:	orr	r2, r2, r7, lsl #18
    6b00:	lsr	r3, r6, #18
    6b04:	str	r2, [sp, #32]
    6b08:	ldr	r0, [sp, #248]	; 0xf8
    6b0c:	orr	r3, r3, r7, lsl #14
    6b10:	lsr	r1, r7, #14
    6b14:	lsr	r2, r7, #18
    6b18:	str	r3, [sp, #40]	; 0x28
    6b1c:	orr	r1, r1, r6, lsl #18
    6b20:	orr	r2, r2, r6, lsl #14
    6b24:	lsl	r3, r7, #23
    6b28:	str	r2, [sp, #44]	; 0x2c
    6b2c:	str	r1, [sp, #36]	; 0x24
    6b30:	orr	r3, r3, r6, lsr #9
    6b34:	ldrd	r4, [ip, r0]
    6b38:	ldrd	sl, [sp, #40]	; 0x28
    6b3c:	str	r3, [sp, #52]	; 0x34
    6b40:	ldrd	r0, [sp, #32]
    6b44:	lsl	r3, r6, #23
    6b48:	orr	r3, r3, r7, lsr #9
    6b4c:	str	r3, [sp, #48]	; 0x30
    6b50:	lsr	r3, r8, #28
    6b54:	eor	r0, r0, sl
    6b58:	eor	r1, r1, fp
    6b5c:	orr	r3, r3, r9, lsl #4
    6b60:	ldrd	sl, [sp, #48]	; 0x30
    6b64:	str	r3, [sp, #56]	; 0x38
    6b68:	ldr	r2, [sp, #244]	; 0xf4
    6b6c:	lsl	r3, r9, #30
    6b70:	orr	r3, r3, r8, lsr #2
    6b74:	str	r3, [sp, #68]	; 0x44
    6b78:	eor	sl, sl, r0
    6b7c:	eor	fp, fp, r1
    6b80:	lsr	r3, r9, #28
    6b84:	mov	r0, sl
    6b88:	mov	r1, fp
    6b8c:	orr	r3, r3, r8, lsl #4
    6b90:	ldrd	sl, [r2, ip]
    6b94:	str	r3, [sp, #60]	; 0x3c
    6b98:	lsl	r3, r8, #30
    6b9c:	orr	r3, r3, r9, lsr #2
    6ba0:	adds	sl, sl, r4
    6ba4:	str	r3, [sp, #64]	; 0x40
    6ba8:	lsl	r3, r9, #25
    6bac:	adc	fp, fp, r5
    6bb0:	orr	r3, r3, r8, lsr #7
    6bb4:	adds	r2, r0, sl
    6bb8:	str	r3, [sp, #76]	; 0x4c
    6bbc:	adc	r3, r1, fp
    6bc0:	ldrd	r4, [sp, #16]
    6bc4:	strd	r2, [sp, #128]	; 0x80
    6bc8:	ldrd	r2, [sp, #24]
    6bcc:	lsl	lr, r8, #25
    6bd0:	orr	r1, lr, r9, lsr #7
    6bd4:	str	r1, [sp, #72]	; 0x48
    6bd8:	and	r2, r2, r6
    6bdc:	ldrd	r0, [sp, #128]	; 0x80
    6be0:	and	r3, r3, r7
    6be4:	bic	r4, r4, r6
    6be8:	bic	r5, r5, r7
    6bec:	ldrd	sl, [sp, #8]
    6bf0:	eor	r4, r4, r2
    6bf4:	eor	r5, r5, r3
    6bf8:	ldrd	r2, [sp]
    6bfc:	adds	r0, r0, r4
    6c00:	adc	r1, r1, r5
    6c04:	eor	r2, r2, sl
    6c08:	ldrd	r4, [sp, #56]	; 0x38
    6c0c:	eor	r3, r3, fp
    6c10:	ldrd	sl, [sp, #64]	; 0x40
    6c14:	and	r2, r2, r8
    6c18:	and	r3, r3, r9
    6c1c:	eor	r4, r4, sl
    6c20:	eor	r5, r5, fp
    6c24:	ldrd	sl, [sp, #72]	; 0x48
    6c28:	strd	r2, [sp, #136]	; 0x88
    6c2c:	ldrd	r2, [sp, #8]
    6c30:	eor	sl, sl, r4
    6c34:	eor	fp, fp, r5
    6c38:	ldrd	r4, [sp]
    6c3c:	add	ip, ip, #8
    6c40:	and	r4, r4, r2
    6c44:	and	r5, r5, r3
    6c48:	mov	r2, r4
    6c4c:	mov	r3, r5
    6c50:	ldrd	r4, [sp, #136]	; 0x88
    6c54:	eor	r4, r4, r2
    6c58:	eor	r5, r5, r3
    6c5c:	ldrd	r2, [sp, #120]	; 0x78
    6c60:	adds	r2, r2, r0
    6c64:	adc	r3, r3, r1
    6c68:	mov	r0, r2
    6c6c:	mov	r1, r3
    6c70:	ldrd	r2, [sp, #112]	; 0x70
    6c74:	adds	sl, sl, r4
    6c78:	adc	fp, fp, r5
    6c7c:	adds	r2, r2, r0
    6c80:	adc	r3, r3, r1
    6c84:	adds	r4, sl, r0
    6c88:	adc	r5, fp, r1
    6c8c:	ldrd	r0, [sp]
    6c90:	cmp	ip, #640	; 0x280
    6c94:	strd	r0, [sp, #112]	; 0x70
    6c98:	ldrd	r0, [sp, #16]
    6c9c:	strd	r0, [sp, #120]	; 0x78
    6ca0:	bne	6ad0 <rb_sha512_process_block+0x640>
    6ca4:	add	r1, sp, #296	; 0x128
    6ca8:	add	ip, sp, #296	; 0x128
    6cac:	ldrd	r0, [r1]
    6cb0:	adds	r0, r0, r4
    6cb4:	adc	r1, r1, r5
    6cb8:	strd	r0, [ip]
    6cbc:	add	r1, sp, #288	; 0x120
    6cc0:	add	ip, sp, #288	; 0x120
    6cc4:	ldrd	r0, [r1]
    6cc8:	adds	r0, r0, r8
    6ccc:	adc	r1, r1, r9
    6cd0:	strd	r0, [ip]
    6cd4:	add	ip, sp, #280	; 0x118
    6cd8:	ldrd	r0, [sp, #8]
    6cdc:	ldrd	r4, [ip]
    6ce0:	adds	r0, r0, r4
    6ce4:	adc	r1, r1, r5
    6ce8:	strd	r0, [ip]
    6cec:	add	ip, sp, #272	; 0x110
    6cf0:	ldrd	r0, [sp]
    6cf4:	ldrd	r4, [ip]
    6cf8:	adds	r0, r0, r4
    6cfc:	adc	r1, r1, r5
    6d00:	strd	r0, [ip]
    6d04:	add	r1, sp, #264	; 0x108
    6d08:	ldrd	r0, [r1]
    6d0c:	adds	r0, r0, r2
    6d10:	adc	r1, r1, r3
    6d14:	add	r3, sp, #264	; 0x108
    6d18:	strd	r0, [r3]
    6d1c:	add	r3, sp, #256	; 0x100
    6d20:	add	r1, sp, #256	; 0x100
    6d24:	ldrd	r2, [r3]
    6d28:	adds	r2, r2, r6
    6d2c:	adc	r3, r3, r7
    6d30:	strd	r2, [r1]
    6d34:	add	r1, sp, #304	; 0x130
    6d38:	ldrd	r2, [sp, #24]
    6d3c:	ldrd	r0, [r1]
    6d40:	adds	r2, r2, r0
    6d44:	adc	r3, r3, r1
    6d48:	add	r1, sp, #304	; 0x130
    6d4c:	strd	r2, [r1]
    6d50:	add	r1, sp, #312	; 0x138
    6d54:	ldrd	r2, [sp, #16]
    6d58:	ldrd	r0, [r1]
    6d5c:	adds	r2, r2, r0
    6d60:	adc	r3, r3, r1
    6d64:	add	r1, sp, #312	; 0x138
    6d68:	strd	r2, [r1]
    6d6c:	ldr	r3, [sp, #324]	; 0x144
    6d70:	subs	r3, r3, #16
    6d74:	str	r3, [sp, #324]	; 0x144
    6d78:	ldr	r3, [sp, #320]	; 0x140
    6d7c:	add	r3, r3, #128	; 0x80
    6d80:	str	r3, [sp, #320]	; 0x140
    6d84:	bne	6584 <rb_sha512_process_block+0xf4>
    6d88:	add	r2, sp, #296	; 0x128
    6d8c:	ldr	r3, [sp, #356]	; 0x164
    6d90:	ldrd	r0, [r2]
    6d94:	add	r2, sp, #288	; 0x120
    6d98:	strd	r0, [r3]
    6d9c:	ldrd	r0, [r2]
    6da0:	add	r2, sp, #280	; 0x118
    6da4:	strd	r0, [r3, #8]
    6da8:	ldrd	r0, [r2]
    6dac:	add	r2, sp, #272	; 0x110
    6db0:	strd	r0, [r3, #16]
    6db4:	ldrd	r0, [r2]
    6db8:	add	r2, sp, #264	; 0x108
    6dbc:	strd	r0, [r3, #24]
    6dc0:	ldrd	r0, [r2]
    6dc4:	add	r2, sp, #256	; 0x100
    6dc8:	strd	r0, [r3, #32]
    6dcc:	ldrd	r0, [r2]
    6dd0:	add	r2, sp, #304	; 0x130
    6dd4:	strd	r0, [r3, #40]	; 0x28
    6dd8:	ldrd	r0, [r2]
    6ddc:	strd	r0, [r3, #48]	; 0x30
    6de0:	mov	r1, r3
    6de4:	add	r3, sp, #312	; 0x138
    6de8:	ldrd	r2, [r3]
    6dec:	strd	r2, [r1, #56]	; 0x38
    6df0:	add	sp, sp, #1004	; 0x3ec
    6df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6df8:	.word	0x00013c90

00006dfc <MD5Transform>:
    6dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e00:	sub	sp, sp, #68	; 0x44
    6e04:	ldm	r0, {r7, lr}
    6e08:	ldr	r5, [r0, #8]
    6e0c:	ldr	r6, [r0, #12]
    6e10:	mov	ip, r0
    6e14:	mov	r4, r1
    6e18:	add	sl, r1, #64	; 0x40
    6e1c:	mov	r9, sp
    6e20:	ldr	r0, [r4]
    6e24:	ldr	r1, [r4, #4]
    6e28:	ldr	r2, [r4, #8]
    6e2c:	ldr	r3, [r4, #12]
    6e30:	mov	r8, r9
    6e34:	add	r4, r4, #16
    6e38:	cmp	r4, sl
    6e3c:	stmia	r8!, {r0, r1, r2, r3}
    6e40:	mov	r9, r8
    6e44:	bne	6e20 <MD5Transform+0x24>
    6e48:	ldr	r2, [sp]
    6e4c:	ldr	r3, [pc, #2240]	; 7714 <MD5Transform+0x918>
    6e50:	eor	sl, r5, r6
    6e54:	add	r3, r2, r3
    6e58:	and	sl, sl, lr
    6e5c:	add	r3, r3, r7
    6e60:	eor	sl, sl, r6
    6e64:	add	sl, sl, r3
    6e68:	ldr	r2, [sp, #4]
    6e6c:	ldr	r3, [pc, #2212]	; 7718 <MD5Transform+0x91c>
    6e70:	add	sl, lr, sl, ror #25
    6e74:	eor	r9, lr, r5
    6e78:	and	r9, r9, sl
    6e7c:	add	r3, r2, r3
    6e80:	add	r3, r3, r6
    6e84:	eor	r9, r9, r5
    6e88:	add	r9, r9, r3
    6e8c:	ldr	r2, [sp, #8]
    6e90:	ldr	r3, [pc, #2180]	; 771c <MD5Transform+0x920>
    6e94:	add	r9, sl, r9, ror #20
    6e98:	eor	r4, lr, sl
    6e9c:	and	r4, r4, r9
    6ea0:	add	r3, r2, r3
    6ea4:	add	r3, r3, r5
    6ea8:	eor	r4, r4, lr
    6eac:	add	r4, r4, r3
    6eb0:	ldr	r2, [sp, #12]
    6eb4:	ldr	r3, [pc, #2148]	; 7720 <MD5Transform+0x924>
    6eb8:	add	r4, r9, r4, ror #15
    6ebc:	eor	r1, sl, r9
    6ec0:	and	r1, r1, r4
    6ec4:	add	r3, r2, r3
    6ec8:	add	r3, r3, lr
    6ecc:	eor	r1, r1, sl
    6ed0:	add	r1, r1, r3
    6ed4:	ldr	r0, [pc, #2120]	; 7724 <MD5Transform+0x928>
    6ed8:	ldr	r3, [sp, #16]
    6edc:	add	r1, r4, r1, ror #10
    6ee0:	eor	r2, r9, r4
    6ee4:	add	r0, r3, r0
    6ee8:	and	r2, r2, r1
    6eec:	add	sl, r0, sl
    6ef0:	eor	r3, r2, r9
    6ef4:	add	r3, r3, sl
    6ef8:	ldr	r8, [sp, #20]
    6efc:	ldr	r0, [pc, #2084]	; 7728 <MD5Transform+0x92c>
    6f00:	add	r3, r1, r3, ror #25
    6f04:	eor	r2, r4, r1
    6f08:	add	r0, r8, r0
    6f0c:	and	r2, r2, r3
    6f10:	add	r9, r0, r9
    6f14:	eor	r8, r2, r4
    6f18:	add	r8, r8, r9
    6f1c:	ldr	r0, [sp, #24]
    6f20:	ldr	fp, [pc, #2052]	; 772c <MD5Transform+0x930>
    6f24:	add	r8, r3, r8, ror #20
    6f28:	eor	r2, r1, r3
    6f2c:	add	fp, r0, fp
    6f30:	and	r2, r2, r8
    6f34:	add	r4, fp, r4
    6f38:	eor	r0, r2, r1
    6f3c:	add	r0, r0, r4
    6f40:	ldr	r9, [sp, #28]
    6f44:	ldr	r2, [pc, #2020]	; 7730 <MD5Transform+0x934>
    6f48:	add	r0, r8, r0, ror #15
    6f4c:	eor	r4, r3, r8
    6f50:	add	r2, r9, r2
    6f54:	and	r4, r4, r0
    6f58:	add	r1, r2, r1
    6f5c:	eor	r2, r4, r3
    6f60:	add	r2, r2, r1
    6f64:	ldr	r9, [sp, #32]
    6f68:	ldr	r4, [pc, #1988]	; 7734 <MD5Transform+0x938>
    6f6c:	add	r2, r0, r2, ror #10
    6f70:	eor	r1, r8, r0
    6f74:	add	r4, r9, r4
    6f78:	and	r1, r1, r2
    6f7c:	add	r3, r4, r3
    6f80:	eor	fp, r1, r8
    6f84:	add	fp, fp, r3
    6f88:	ldr	r4, [sp, #36]	; 0x24
    6f8c:	ldr	r1, [pc, #1956]	; 7738 <MD5Transform+0x93c>
    6f90:	add	fp, r2, fp, ror #25
    6f94:	eor	r3, r0, r2
    6f98:	add	r1, r4, r1
    6f9c:	and	r3, r3, fp
    6fa0:	add	r8, r1, r8
    6fa4:	eor	sl, r3, r0
    6fa8:	add	sl, sl, r8
    6fac:	ldr	r3, [sp, #40]	; 0x28
    6fb0:	add	sl, fp, sl, ror #20
    6fb4:	sub	r1, r3, #41984	; 0xa400
    6fb8:	eor	r3, r2, fp
    6fbc:	and	r3, r3, sl
    6fc0:	sub	r1, r1, #79	; 0x4f
    6fc4:	add	r0, r1, r0
    6fc8:	eor	r4, r3, r2
    6fcc:	add	r4, r4, r0
    6fd0:	ldr	r1, [sp, #44]	; 0x2c
    6fd4:	ldr	r8, [pc, #1888]	; 773c <MD5Transform+0x940>
    6fd8:	add	r4, sl, r4, ror #15
    6fdc:	eor	r3, fp, sl
    6fe0:	add	r8, r1, r8
    6fe4:	and	r3, r3, r4
    6fe8:	add	r2, r8, r2
    6fec:	eor	r1, r3, fp
    6ff0:	add	r1, r1, r2
    6ff4:	ldr	r9, [sp, #48]	; 0x30
    6ff8:	ldr	r3, [pc, #1856]	; 7740 <MD5Transform+0x944>
    6ffc:	add	r1, r4, r1, ror #10
    7000:	eor	r2, sl, r4
    7004:	add	r3, r9, r3
    7008:	and	r2, r2, r1
    700c:	add	fp, r3, fp
    7010:	eor	r3, r2, sl
    7014:	add	r3, r3, fp
    7018:	ldr	r8, [sp, #52]	; 0x34
    701c:	ldr	r0, [pc, #1824]	; 7744 <MD5Transform+0x948>
    7020:	add	r3, r1, r3, ror #25
    7024:	eor	r2, r4, r1
    7028:	add	r0, r8, r0
    702c:	and	r2, r2, r3
    7030:	add	sl, r0, sl
    7034:	eor	r8, r2, r4
    7038:	add	r8, r8, sl
    703c:	ldr	fp, [pc, #1796]	; 7748 <MD5Transform+0x94c>
    7040:	ldr	sl, [sp, #56]	; 0x38
    7044:	add	r8, r3, r8, ror #20
    7048:	eor	r2, r1, r3
    704c:	add	fp, sl, fp
    7050:	and	r2, r2, r8
    7054:	add	r4, fp, r4
    7058:	eor	r0, r2, r1
    705c:	add	r0, r0, r4
    7060:	ldr	fp, [sp, #60]	; 0x3c
    7064:	ldr	r2, [pc, #1760]	; 774c <MD5Transform+0x950>
    7068:	add	r0, r8, r0, ror #15
    706c:	eor	r4, r3, r8
    7070:	add	r2, fp, r2
    7074:	and	r4, r4, r0
    7078:	add	r1, r2, r1
    707c:	eor	r2, r4, r3
    7080:	add	r2, r2, r1
    7084:	ldr	fp, [sp, #4]
    7088:	add	r2, r0, r2, ror #10
    708c:	ldr	r4, [pc, #1724]	; 7750 <MD5Transform+0x954>
    7090:	eor	r1, r0, r2
    7094:	add	r4, fp, r4
    7098:	and	r1, r1, r8
    709c:	add	r3, r4, r3
    70a0:	eor	fp, r1, r0
    70a4:	add	fp, fp, r3
    70a8:	ldr	r4, [sp, #24]
    70ac:	add	fp, r2, fp, ror #27
    70b0:	ldr	r1, [pc, #1692]	; 7754 <MD5Transform+0x958>
    70b4:	eor	r3, r2, fp
    70b8:	add	r1, r4, r1
    70bc:	and	r3, r3, r0
    70c0:	eor	r3, r3, r2
    70c4:	add	r8, r1, r8
    70c8:	add	r8, r3, r8
    70cc:	ldr	r1, [sp, #44]	; 0x2c
    70d0:	add	r8, fp, r8, ror #23
    70d4:	ldr	r4, [pc, #1660]	; 7758 <MD5Transform+0x95c>
    70d8:	eor	r3, fp, r8
    70dc:	add	r4, r1, r4
    70e0:	and	r3, r3, r2
    70e4:	add	r0, r4, r0
    70e8:	eor	r4, r3, fp
    70ec:	add	r4, r4, r0
    70f0:	ldr	r1, [pc, #1636]	; 775c <MD5Transform+0x960>
    70f4:	add	r4, r8, r4, ror #18
    70f8:	ldr	r0, [sp]
    70fc:	eor	r3, r8, r4
    7100:	add	r1, r0, r1
    7104:	and	r3, r3, fp
    7108:	eor	r3, r3, r8
    710c:	add	r2, r1, r2
    7110:	add	r2, r3, r2
    7114:	ldr	r0, [sp, #20]
    7118:	add	r2, r4, r2, ror #12
    711c:	ldr	r3, [pc, #1596]	; 7760 <MD5Transform+0x964>
    7120:	eor	r1, r4, r2
    7124:	add	r3, r0, r3
    7128:	and	r1, r1, r8
    712c:	add	fp, r3, fp
    7130:	eor	r3, r1, r4
    7134:	add	r3, r3, fp
    7138:	ldr	r1, [pc, #1572]	; 7764 <MD5Transform+0x968>
    713c:	add	r3, r2, r3, ror #27
    7140:	ldr	fp, [sp, #40]	; 0x28
    7144:	eor	r0, r2, r3
    7148:	add	r1, fp, r1
    714c:	and	r0, r0, r4
    7150:	add	r8, r1, r8
    7154:	eor	r1, r0, r2
    7158:	add	r1, r1, r8
    715c:	ldr	fp, [sp, #60]	; 0x3c
    7160:	add	r1, r3, r1, ror #23
    7164:	ldr	r0, [pc, #1532]	; 7768 <MD5Transform+0x96c>
    7168:	eor	r8, r3, r1
    716c:	add	r0, fp, r0
    7170:	and	r8, r8, r2
    7174:	add	r4, r0, r4
    7178:	eor	r0, r8, r3
    717c:	add	r0, r0, r4
    7180:	ldr	fp, [sp, #16]
    7184:	add	r0, r1, r0, ror #18
    7188:	ldr	r8, [pc, #1500]	; 776c <MD5Transform+0x970>
    718c:	eor	r4, r1, r0
    7190:	add	r8, fp, r8
    7194:	and	r4, r4, r3
    7198:	eor	r4, r4, r1
    719c:	add	r2, r8, r2
    71a0:	add	r2, r4, r2
    71a4:	ldr	fp, [sp, #36]	; 0x24
    71a8:	add	r2, r0, r2, ror #12
    71ac:	ldr	r8, [pc, #1468]	; 7770 <MD5Transform+0x974>
    71b0:	eor	r4, r0, r2
    71b4:	add	r8, fp, r8
    71b8:	and	r4, r4, r1
    71bc:	add	r3, r8, r3
    71c0:	eor	fp, r4, r0
    71c4:	add	fp, fp, r3
    71c8:	ldr	r4, [pc, #1444]	; 7774 <MD5Transform+0x978>
    71cc:	add	fp, r2, fp, ror #27
    71d0:	eor	r3, r2, fp
    71d4:	add	r4, sl, r4
    71d8:	and	r3, r3, r0
    71dc:	add	r1, r4, r1
    71e0:	eor	r8, r3, r2
    71e4:	add	r8, r8, r1
    71e8:	ldr	r4, [pc, #1416]	; 7778 <MD5Transform+0x97c>
    71ec:	add	r8, fp, r8, ror #23
    71f0:	ldr	r1, [sp, #12]
    71f4:	eor	r3, fp, r8
    71f8:	add	r4, r1, r4
    71fc:	and	r3, r3, r2
    7200:	add	r0, r4, r0
    7204:	eor	r4, r3, fp
    7208:	add	r4, r4, r0
    720c:	ldr	r1, [pc, #1384]	; 777c <MD5Transform+0x980>
    7210:	add	r4, r8, r4, ror #18
    7214:	ldr	r0, [sp, #32]
    7218:	eor	r3, r8, r4
    721c:	add	r1, r0, r1
    7220:	and	r3, r3, fp
    7224:	eor	r3, r3, r8
    7228:	add	r2, r1, r2
    722c:	add	r2, r3, r2
    7230:	ldr	r0, [sp, #52]	; 0x34
    7234:	add	r2, r4, r2, ror #12
    7238:	ldr	r3, [pc, #1344]	; 7780 <MD5Transform+0x984>
    723c:	eor	r1, r4, r2
    7240:	add	r3, r0, r3
    7244:	and	r1, r1, r8
    7248:	add	fp, r3, fp
    724c:	eor	r3, r1, r4
    7250:	add	r3, r3, fp
    7254:	ldr	r1, [pc, #1320]	; 7784 <MD5Transform+0x988>
    7258:	add	r3, r2, r3, ror #27
    725c:	ldr	fp, [sp, #8]
    7260:	eor	r0, r2, r3
    7264:	add	r1, fp, r1
    7268:	and	r0, r0, r4
    726c:	add	r8, r1, r8
    7270:	eor	r1, r0, r2
    7274:	add	r1, r1, r8
    7278:	ldr	fp, [sp, #28]
    727c:	add	r1, r3, r1, ror #23
    7280:	ldr	r0, [pc, #1280]	; 7788 <MD5Transform+0x98c>
    7284:	eor	r8, r3, r1
    7288:	add	r0, fp, r0
    728c:	and	r8, r8, r2
    7290:	add	r4, r0, r4
    7294:	eor	r0, r8, r3
    7298:	add	r0, r0, r4
    729c:	ldr	r8, [pc, #1256]	; 778c <MD5Transform+0x990>
    72a0:	add	r0, r1, r0, ror #18
    72a4:	eor	fp, r1, r0
    72a8:	add	r8, r9, r8
    72ac:	and	r4, r3, fp
    72b0:	eor	r4, r4, r1
    72b4:	add	r2, r8, r2
    72b8:	add	r2, r4, r2
    72bc:	ldr	r8, [pc, #1228]	; 7790 <MD5Transform+0x994>
    72c0:	ldr	r4, [sp, #20]
    72c4:	add	r2, r0, r2, ror #12
    72c8:	add	r8, r4, r8
    72cc:	eor	fp, fp, r2
    72d0:	add	r3, r8, r3
    72d4:	ldr	r4, [sp, #32]
    72d8:	add	r3, fp, r3
    72dc:	ldr	fp, [pc, #1200]	; 7794 <MD5Transform+0x998>
    72e0:	add	r3, r2, r3, ror #28
    72e4:	add	fp, r4, fp
    72e8:	eor	r4, r0, r2
    72ec:	eor	r4, r4, r3
    72f0:	add	r1, fp, r1
    72f4:	add	r1, r4, r1
    72f8:	ldr	r8, [pc, #1176]	; 7798 <MD5Transform+0x99c>
    72fc:	ldr	r4, [sp, #44]	; 0x2c
    7300:	add	r1, r3, r1, ror #21
    7304:	add	r8, r4, r8
    7308:	eor	r4, r2, r3
    730c:	eor	r4, r4, r1
    7310:	add	r0, r8, r0
    7314:	add	r0, r4, r0
    7318:	ldr	r8, [pc, #1148]	; 779c <MD5Transform+0x9a0>
    731c:	add	r0, r1, r0, ror #16
    7320:	add	r8, sl, r8
    7324:	eor	fp, r3, r1
    7328:	eor	fp, fp, r0
    732c:	add	r2, r8, r2
    7330:	ldr	r4, [sp, #4]
    7334:	add	r2, fp, r2
    7338:	ldr	fp, [pc, #1120]	; 77a0 <MD5Transform+0x9a4>
    733c:	add	r2, r0, r2, ror #9
    7340:	add	fp, r4, fp
    7344:	eor	r4, r1, r0
    7348:	add	r3, fp, r3
    734c:	eor	fp, r4, r2
    7350:	add	fp, fp, r3
    7354:	ldr	r4, [pc, #1096]	; 77a4 <MD5Transform+0x9a8>
    7358:	ldr	r3, [sp, #16]
    735c:	add	fp, r2, fp, ror #28
    7360:	add	r4, r3, r4
    7364:	eor	r3, r0, r2
    7368:	eor	r3, r3, fp
    736c:	add	r1, r4, r1
    7370:	add	r1, r3, r1
    7374:	ldr	r4, [pc, #1068]	; 77a8 <MD5Transform+0x9ac>
    7378:	ldr	r3, [sp, #28]
    737c:	add	r1, fp, r1, ror #21
    7380:	add	r4, r3, r4
    7384:	eor	r3, r2, fp
    7388:	eor	r3, r3, r1
    738c:	add	r0, r4, r0
    7390:	add	r0, r3, r0
    7394:	ldr	r8, [pc, #1040]	; 77ac <MD5Transform+0x9b0>
    7398:	ldr	r3, [sp, #40]	; 0x28
    739c:	add	r0, r1, r0, ror #16
    73a0:	add	r8, r3, r8
    73a4:	eor	r3, fp, r1
    73a8:	add	r2, r8, r2
    73ac:	eor	r8, r3, r0
    73b0:	add	r8, r8, r2
    73b4:	ldr	r3, [sp, #52]	; 0x34
    73b8:	ldr	r2, [pc, #1008]	; 77b0 <MD5Transform+0x9b4>
    73bc:	add	r8, r0, r8, ror #9
    73c0:	eor	r4, r1, r0
    73c4:	add	r2, r3, r2
    73c8:	add	fp, r2, fp
    73cc:	eor	r2, r4, r8
    73d0:	ldr	r3, [sp]
    73d4:	add	r2, r2, fp
    73d8:	ldr	r4, [pc, #980]	; 77b4 <MD5Transform+0x9b8>
    73dc:	add	r2, r8, r2, ror #28
    73e0:	add	r4, r3, r4
    73e4:	eor	r3, r0, r8
    73e8:	add	r1, r4, r1
    73ec:	eor	fp, r3, r2
    73f0:	add	fp, fp, r1
    73f4:	ldr	r3, [sp, #12]
    73f8:	ldr	r4, [pc, #952]	; 77b8 <MD5Transform+0x9bc>
    73fc:	add	fp, r2, fp, ror #21
    7400:	add	r4, r3, r4
    7404:	eor	r3, r8, r2
    7408:	add	r0, r4, r0
    740c:	eor	r4, r3, fp
    7410:	ldr	r1, [sp, #24]
    7414:	add	r4, r4, r0
    7418:	ldr	r3, [pc, #924]	; 77bc <MD5Transform+0x9c0>
    741c:	add	r4, fp, r4, ror #16
    7420:	add	r3, r1, r3
    7424:	eor	r1, r2, fp
    7428:	add	r8, r3, r8
    742c:	eor	r3, r1, r4
    7430:	add	r3, r3, r8
    7434:	ldr	r1, [sp, #36]	; 0x24
    7438:	ldr	r0, [pc, #896]	; 77c0 <MD5Transform+0x9c4>
    743c:	add	r3, r4, r3, ror #9
    7440:	add	r0, r1, r0
    7444:	eor	r1, fp, r4
    7448:	add	r2, r0, r2
    744c:	eor	r8, r1, r3
    7450:	add	r8, r8, r2
    7454:	ldr	r0, [pc, #872]	; 77c4 <MD5Transform+0x9c8>
    7458:	add	r8, r3, r8, ror #28
    745c:	eor	r2, r4, r3
    7460:	add	r0, r9, r0
    7464:	add	fp, r0, fp
    7468:	eor	r0, r2, r8
    746c:	add	r0, r0, fp
    7470:	ldr	r2, [sp, #60]	; 0x3c
    7474:	ldr	r1, [pc, #844]	; 77c8 <MD5Transform+0x9cc>
    7478:	add	r0, r8, r0, ror #21
    747c:	add	r1, r2, r1
    7480:	eor	r2, r3, r8
    7484:	add	r4, r1, r4
    7488:	eor	r1, r2, r0
    748c:	add	r1, r1, r4
    7490:	ldr	r2, [sp, #8]
    7494:	ldr	r4, [pc, #816]	; 77cc <MD5Transform+0x9d0>
    7498:	add	r1, r0, r1, ror #16
    749c:	add	r4, r2, r4
    74a0:	eor	r2, r8, r0
    74a4:	add	r3, r4, r3
    74a8:	eor	r4, r2, r1
    74ac:	add	r4, r4, r3
    74b0:	ldr	fp, [sp]
    74b4:	ldr	r2, [pc, #788]	; 77d0 <MD5Transform+0x9d4>
    74b8:	add	r4, r1, r4, ror #9
    74bc:	mvn	r3, r0
    74c0:	add	r2, fp, r2
    74c4:	orr	r3, r3, r4
    74c8:	add	r8, r2, r8
    74cc:	eor	r2, r3, r1
    74d0:	add	r2, r2, r8
    74d4:	ldr	fp, [pc, #760]	; 77d4 <MD5Transform+0x9d8>
    74d8:	ldr	r8, [sp, #28]
    74dc:	add	r2, r4, r2, ror #26
    74e0:	mvn	r3, r1
    74e4:	add	fp, r8, fp
    74e8:	orr	r3, r3, r2
    74ec:	eor	r3, r3, r4
    74f0:	add	r0, fp, r0
    74f4:	add	r0, r3, r0
    74f8:	ldr	fp, [pc, #728]	; 77d8 <MD5Transform+0x9dc>
    74fc:	add	r0, r2, r0, ror #22
    7500:	mvn	r8, r4
    7504:	add	fp, sl, fp
    7508:	orr	r8, r8, r0
    750c:	eor	r8, r8, r2
    7510:	add	r1, fp, r1
    7514:	add	r1, r8, r1
    7518:	ldr	sl, [sp, #20]
    751c:	ldr	r3, [pc, #696]	; 77dc <MD5Transform+0x9e0>
    7520:	add	r1, r0, r1, ror #17
    7524:	mvn	r8, r2
    7528:	add	r3, sl, r3
    752c:	orr	r8, r8, r1
    7530:	eor	r8, r8, r0
    7534:	add	r4, r3, r4
    7538:	add	r4, r8, r4
    753c:	ldr	sl, [pc, #668]	; 77e0 <MD5Transform+0x9e4>
    7540:	add	r4, r1, r4, ror #11
    7544:	mvn	r3, r0
    7548:	add	sl, r9, sl
    754c:	orr	r3, r3, r4
    7550:	eor	r3, r3, r1
    7554:	add	r2, sl, r2
    7558:	add	r2, r3, r2
    755c:	ldr	fp, [pc, #640]	; 77e4 <MD5Transform+0x9e8>
    7560:	ldr	r3, [sp, #12]
    7564:	add	r2, r4, r2, ror #26
    7568:	mvn	r8, r1
    756c:	add	fp, r3, fp
    7570:	orr	r8, r8, r2
    7574:	eor	r8, r8, r4
    7578:	add	r0, fp, r0
    757c:	add	r0, r8, r0
    7580:	ldr	r9, [pc, #608]	; 77e8 <MD5Transform+0x9ec>
    7584:	ldr	r8, [sp, #40]	; 0x28
    7588:	add	r0, r2, r0, ror #22
    758c:	mvn	r3, r4
    7590:	add	r9, r8, r9
    7594:	orr	r3, r3, r0
    7598:	eor	r3, r3, r2
    759c:	add	r1, r9, r1
    75a0:	add	r1, r3, r1
    75a4:	ldr	r9, [sp, #4]
    75a8:	ldr	r8, [pc, #572]	; 77ec <MD5Transform+0x9f0>
    75ac:	add	r1, r0, r1, ror #17
    75b0:	mvn	r3, r2
    75b4:	add	r8, r9, r8
    75b8:	orr	r3, r3, r1
    75bc:	eor	r3, r3, r0
    75c0:	add	r4, r8, r4
    75c4:	add	r4, r3, r4
    75c8:	ldr	sl, [pc, #544]	; 77f0 <MD5Transform+0x9f4>
    75cc:	ldr	r3, [sp, #32]
    75d0:	add	r4, r1, r4, ror #11
    75d4:	mvn	r8, r0
    75d8:	add	sl, r3, sl
    75dc:	orr	r8, r8, r4
    75e0:	eor	r8, r8, r1
    75e4:	add	r2, sl, r2
    75e8:	add	r2, r8, r2
    75ec:	ldr	fp, [pc, #512]	; 77f4 <MD5Transform+0x9f8>
    75f0:	ldr	r8, [sp, #60]	; 0x3c
    75f4:	add	r2, r4, r2, ror #26
    75f8:	mvn	r3, r1
    75fc:	add	fp, r8, fp
    7600:	orr	r3, r3, r2
    7604:	eor	r3, r3, r4
    7608:	add	r0, fp, r0
    760c:	add	r0, r3, r0
    7610:	ldr	r9, [pc, #480]	; 77f8 <MD5Transform+0x9fc>
    7614:	ldr	r3, [sp, #24]
    7618:	add	r0, r2, r0, ror #22
    761c:	mvn	r8, r4
    7620:	add	r9, r3, r9
    7624:	orr	r8, r8, r0
    7628:	eor	r8, r8, r2
    762c:	add	r1, r9, r1
    7630:	add	r1, r8, r1
    7634:	ldr	sl, [pc, #448]	; 77fc <MD5Transform+0xa00>
    7638:	ldr	r8, [sp, #52]	; 0x34
    763c:	add	r1, r0, r1, ror #17
    7640:	mvn	r3, r2
    7644:	add	sl, r8, sl
    7648:	orr	r3, r3, r1
    764c:	eor	r3, r3, r0
    7650:	add	r4, sl, r4
    7654:	add	r4, r3, r4
    7658:	ldr	r9, [pc, #416]	; 7800 <MD5Transform+0xa04>
    765c:	ldr	r3, [sp, #16]
    7660:	add	r4, r1, r4, ror #11
    7664:	mvn	r8, r0
    7668:	orr	r8, r8, r4
    766c:	add	r9, r3, r9
    7670:	add	r9, r9, r2
    7674:	eor	r2, r8, r1
    7678:	add	r2, r2, r9
    767c:	ldr	r8, [sp, #44]	; 0x2c
    7680:	ldr	fp, [pc, #380]	; 7804 <MD5Transform+0xa08>
    7684:	add	r2, r4, r2, ror #26
    7688:	mvn	r3, r1
    768c:	orr	r3, r3, r2
    7690:	add	fp, r8, fp
    7694:	add	fp, fp, r0
    7698:	eor	r0, r3, r4
    769c:	add	r0, r0, fp
    76a0:	ldr	r8, [sp, #8]
    76a4:	ldr	r9, [pc, #348]	; 7808 <MD5Transform+0xa0c>
    76a8:	add	r0, r2, r0, ror #22
    76ac:	mvn	r3, r4
    76b0:	orr	r3, r3, r0
    76b4:	add	r9, r8, r9
    76b8:	add	r9, r9, r1
    76bc:	eor	r1, r3, r2
    76c0:	add	r1, r1, r9
    76c4:	ldr	r8, [sp, #36]	; 0x24
    76c8:	ldr	sl, [pc, #316]	; 780c <MD5Transform+0xa10>
    76cc:	add	r1, r0, r1, ror #17
    76d0:	mvn	r3, r2
    76d4:	orr	r3, r3, r1
    76d8:	add	sl, r8, sl
    76dc:	eor	r3, r3, r0
    76e0:	add	r4, sl, r4
    76e4:	add	r4, r3, r4
    76e8:	add	lr, lr, r1
    76ec:	add	r7, r7, r2
    76f0:	add	r6, r6, r0
    76f4:	add	r5, r5, r1
    76f8:	add	lr, lr, r4, ror #11
    76fc:	str	r7, [ip]
    7700:	str	r6, [ip, #12]
    7704:	str	r5, [ip, #8]
    7708:	str	lr, [ip, #4]
    770c:	add	sp, sp, #68	; 0x44
    7710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7714:	.word	0xd76aa478
    7718:	.word	0xe8c7b756
    771c:	.word	0x242070db
    7720:	.word	0xc1bdceee
    7724:	.word	0xf57c0faf
    7728:	.word	0x4787c62a
    772c:	.word	0xa8304613
    7730:	.word	0xfd469501
    7734:	.word	0x698098d8
    7738:	.word	0x8b44f7af
    773c:	.word	0x895cd7be
    7740:	.word	0x6b901122
    7744:	.word	0xfd987193
    7748:	.word	0xa679438e
    774c:	.word	0x49b40821
    7750:	.word	0xf61e2562
    7754:	.word	0xc040b340
    7758:	.word	0x265e5a51
    775c:	.word	0xe9b6c7aa
    7760:	.word	0xd62f105d
    7764:	.word	0x02441453
    7768:	.word	0xd8a1e681
    776c:	.word	0xe7d3fbc8
    7770:	.word	0x21e1cde6
    7774:	.word	0xc33707d6
    7778:	.word	0xf4d50d87
    777c:	.word	0x455a14ed
    7780:	.word	0xa9e3e905
    7784:	.word	0xfcefa3f8
    7788:	.word	0x676f02d9
    778c:	.word	0x8d2a4c8a
    7790:	.word	0xfffa3942
    7794:	.word	0x8771f681
    7798:	.word	0x6d9d6122
    779c:	.word	0xfde5380c
    77a0:	.word	0xa4beea44
    77a4:	.word	0x4bdecfa9
    77a8:	.word	0xf6bb4b60
    77ac:	.word	0xbebfbc70
    77b0:	.word	0x289b7ec6
    77b4:	.word	0xeaa127fa
    77b8:	.word	0xd4ef3085
    77bc:	.word	0x04881d05
    77c0:	.word	0xd9d4d039
    77c4:	.word	0xe6db99e5
    77c8:	.word	0x1fa27cf8
    77cc:	.word	0xc4ac5665
    77d0:	.word	0xf4292244
    77d4:	.word	0x432aff97
    77d8:	.word	0xab9423a7
    77dc:	.word	0xfc93a039
    77e0:	.word	0x655b59c3
    77e4:	.word	0x8f0ccc92
    77e8:	.word	0xffeff47d
    77ec:	.word	0x85845dd1
    77f0:	.word	0x6fa87e4f
    77f4:	.word	0xfe2ce6e0
    77f8:	.word	0xa3014314
    77fc:	.word	0x4e0811a1
    7800:	.word	0xf7537e82
    7804:	.word	0xbd3af235
    7808:	.word	0x2ad7d2bb
    780c:	.word	0xeb86d391

00007810 <rb_sha256_process_bytes>:
    7810:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7814:	mov	r6, r2
    7818:	ldr	r4, [r2, #40]	; 0x28
    781c:	mov	r8, r0
    7820:	cmp	r4, #0
    7824:	mov	r5, r1
    7828:	bne	7918 <rb_sha256_process_bytes+0x108>
    782c:	cmp	r5, #63	; 0x3f
    7830:	bls	790c <rb_sha256_process_bytes+0xfc>
    7834:	tst	r8, #3
    7838:	beq	78f0 <rb_sha256_process_bytes+0xe0>
    783c:	cmp	r5, #64	; 0x40
    7840:	beq	78c4 <rb_sha256_process_bytes+0xb4>
    7844:	add	r7, r6, #44	; 0x2c
    7848:	mov	sl, r5
    784c:	mov	r4, r8
    7850:	mov	r9, #64	; 0x40
    7854:	add	r2, r4, #64	; 0x40
    7858:	mov	r3, r7
    785c:	ldr	lr, [r4]
    7860:	ldr	ip, [r4, #4]
    7864:	ldr	r0, [r4, #8]
    7868:	ldr	r1, [r4, #12]
    786c:	add	r4, r4, #16
    7870:	cmp	r4, r2
    7874:	str	lr, [r3]
    7878:	str	ip, [r3, #4]
    787c:	str	r0, [r3, #8]
    7880:	str	r1, [r3, #12]
    7884:	add	r3, r3, #16
    7888:	bne	785c <rb_sha256_process_bytes+0x4c>
    788c:	sub	sl, sl, #64	; 0x40
    7890:	mov	r2, r6
    7894:	mov	r1, r9
    7898:	mov	r0, r7
    789c:	bl	60d0 <rb_sha256_process_block>
    78a0:	cmp	sl, #64	; 0x40
    78a4:	bhi	7854 <rb_sha256_process_bytes+0x44>
    78a8:	sub	r3, r5, #65	; 0x41
    78ac:	bic	r2, r3, #63	; 0x3f
    78b0:	mov	r3, r2
    78b4:	sub	r5, r5, #64	; 0x40
    78b8:	add	r2, r2, #64	; 0x40
    78bc:	sub	r5, r5, r3
    78c0:	add	r8, r8, r2
    78c4:	ldr	r4, [r6, #40]	; 0x28
    78c8:	mov	r1, r8
    78cc:	add	r0, r4, #44	; 0x2c
    78d0:	add	r0, r6, r0
    78d4:	add	r4, r4, r5
    78d8:	mov	r2, r5
    78dc:	bl	4808 <memcpy@plt>
    78e0:	cmp	r4, #63	; 0x3f
    78e4:	bhi	7958 <rb_sha256_process_bytes+0x148>
    78e8:	str	r4, [r6, #40]	; 0x28
    78ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    78f0:	bic	r4, r5, #63	; 0x3f
    78f4:	mov	r0, r8
    78f8:	mov	r1, r4
    78fc:	mov	r2, r6
    7900:	bl	60d0 <rb_sha256_process_block>
    7904:	and	r5, r5, #63	; 0x3f
    7908:	add	r8, r8, r4
    790c:	cmp	r5, #0
    7910:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    7914:	b	78c4 <rb_sha256_process_bytes+0xb4>
    7918:	rsb	r7, r4, #128	; 0x80
    791c:	cmp	r7, r1
    7920:	movcs	r7, r1
    7924:	add	r0, r4, #44	; 0x2c
    7928:	mov	r1, r8
    792c:	mov	r2, r7
    7930:	add	r0, r6, r0
    7934:	bl	4808 <memcpy@plt>
    7938:	ldr	r1, [r6, #40]	; 0x28
    793c:	add	r1, r7, r1
    7940:	cmp	r1, #64	; 0x40
    7944:	str	r1, [r6, #40]	; 0x28
    7948:	bhi	7988 <rb_sha256_process_bytes+0x178>
    794c:	add	r8, r8, r7
    7950:	sub	r5, r5, r7
    7954:	b	782c <rb_sha256_process_bytes+0x1c>
    7958:	add	r5, r6, #44	; 0x2c
    795c:	sub	r4, r4, #64	; 0x40
    7960:	mov	r0, r5
    7964:	mov	r2, r6
    7968:	mov	r1, #64	; 0x40
    796c:	bl	60d0 <rb_sha256_process_block>
    7970:	mov	r0, r5
    7974:	mov	r2, r4
    7978:	add	r1, r6, #108	; 0x6c
    797c:	bl	4808 <memcpy@plt>
    7980:	str	r4, [r6, #40]	; 0x28
    7984:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7988:	add	r9, r6, #44	; 0x2c
    798c:	mov	r0, r9
    7990:	mov	r2, r6
    7994:	bic	r1, r1, #63	; 0x3f
    7998:	bl	60d0 <rb_sha256_process_block>
    799c:	ldr	r2, [r6, #40]	; 0x28
    79a0:	add	r1, r4, r7
    79a4:	bic	r1, r1, #63	; 0x3f
    79a8:	and	r2, r2, #63	; 0x3f
    79ac:	add	r1, r1, #44	; 0x2c
    79b0:	add	r1, r6, r1
    79b4:	mov	r0, r9
    79b8:	str	r2, [r6, #40]	; 0x28
    79bc:	bl	4808 <memcpy@plt>
    79c0:	b	794c <rb_sha256_process_bytes+0x13c>

000079c4 <rb_sha256_finish_ctx>:
    79c4:	push	{r4, r5, r6, r7, r8, lr}
    79c8:	mov	r5, r1
    79cc:	ldr	r6, [r0, #40]	; 0x28
    79d0:	ldr	r3, [r0, #32]
    79d4:	ldr	r1, [pc, #252]	; 7ad8 <rb_sha256_finish_ctx+0x114>
    79d8:	add	r3, r6, r3
    79dc:	cmp	r6, r3
    79e0:	str	r3, [r0, #32]
    79e4:	ldrhi	r3, [r0, #36]	; 0x24
    79e8:	add	r1, pc, r1
    79ec:	addhi	r3, r3, #1
    79f0:	strhi	r3, [r0, #36]	; 0x24
    79f4:	cmp	r6, #55	; 0x37
    79f8:	mov	r4, r0
    79fc:	rsbhi	r7, r6, #120	; 0x78
    7a00:	rsbls	r7, r6, #56	; 0x38
    7a04:	add	r0, r6, #44	; 0x2c
    7a08:	add	r1, r1, #1728	; 0x6c0
    7a0c:	mov	r2, r7
    7a10:	add	r1, r1, #8
    7a14:	add	r0, r4, r0
    7a18:	bl	4808 <memcpy@plt>
    7a1c:	ldr	r3, [r4, #32]
    7a20:	add	r1, r7, r6
    7a24:	add	lr, r4, r1
    7a28:	lsl	ip, r3, #3
    7a2c:	lsl	r0, r3, #11
    7a30:	and	r0, r0, #16711680	; 0xff0000
    7a34:	orr	r0, r0, ip, lsr #24
    7a38:	lsr	ip, ip, #8
    7a3c:	and	ip, ip, #65280	; 0xff00
    7a40:	orr	r0, r0, r3, lsl #27
    7a44:	orr	r0, r0, ip
    7a48:	str	r0, [lr, #48]	; 0x30
    7a4c:	ldr	r2, [r4, #36]	; 0x24
    7a50:	lsr	r3, r3, #29
    7a54:	add	r0, r4, #44	; 0x2c
    7a58:	orr	r3, r3, r2, lsl #3
    7a5c:	rev	r3, r3
    7a60:	str	r3, [lr, #44]	; 0x2c
    7a64:	add	r1, r1, #8
    7a68:	mov	r2, r4
    7a6c:	bl	60d0 <rb_sha256_process_block>
    7a70:	ldr	r3, [r4]
    7a74:	mov	r0, r5
    7a78:	rev	r3, r3
    7a7c:	str	r3, [r5]
    7a80:	ldr	r3, [r4, #4]
    7a84:	rev	r3, r3
    7a88:	str	r3, [r5, #4]
    7a8c:	ldr	r3, [r4, #8]
    7a90:	rev	r3, r3
    7a94:	str	r3, [r5, #8]
    7a98:	ldr	r3, [r4, #12]
    7a9c:	rev	r3, r3
    7aa0:	str	r3, [r5, #12]
    7aa4:	ldr	r3, [r4, #16]
    7aa8:	rev	r3, r3
    7aac:	str	r3, [r5, #16]
    7ab0:	ldr	r3, [r4, #20]
    7ab4:	rev	r3, r3
    7ab8:	str	r3, [r5, #20]
    7abc:	ldr	r3, [r4, #24]
    7ac0:	rev	r3, r3
    7ac4:	str	r3, [r5, #24]
    7ac8:	ldr	r3, [r4, #28]
    7acc:	rev	r3, r3
    7ad0:	str	r3, [r5, #28]
    7ad4:	pop	{r4, r5, r6, r7, r8, pc}
    7ad8:	.word	0x000127f8

00007adc <rb_sha512_process_bytes>:
    7adc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7ae0:	mov	r6, r2
    7ae4:	ldrd	r4, [r2, #80]	; 0x50
    7ae8:	mov	r9, r0
    7aec:	mov	r8, r1
    7af0:	orrs	r3, r4, r5
    7af4:	bne	7bc4 <rb_sha512_process_bytes+0xe8>
    7af8:	cmp	r8, #127	; 0x7f
    7afc:	bls	7bb8 <rb_sha512_process_bytes+0xdc>
    7b00:	tst	r9, #7
    7b04:	beq	7b9c <rb_sha512_process_bytes+0xc0>
    7b08:	cmp	r8, #128	; 0x80
    7b0c:	beq	7b68 <rb_sha512_process_bytes+0x8c>
    7b10:	add	sl, r6, #88	; 0x58
    7b14:	mov	r5, r8
    7b18:	mov	r4, r9
    7b1c:	mov	r7, #128	; 0x80
    7b20:	mov	r1, r4
    7b24:	mov	r2, r7
    7b28:	mov	r0, sl
    7b2c:	bl	4808 <memcpy@plt>
    7b30:	sub	r5, r5, #128	; 0x80
    7b34:	mov	r2, r6
    7b38:	mov	r1, r7
    7b3c:	bl	6490 <rb_sha512_process_block>
    7b40:	cmp	r5, #128	; 0x80
    7b44:	add	r4, r4, #128	; 0x80
    7b48:	bhi	7b20 <rb_sha512_process_bytes+0x44>
    7b4c:	sub	r3, r8, #129	; 0x81
    7b50:	bic	r2, r3, #127	; 0x7f
    7b54:	mov	r3, r2
    7b58:	sub	r8, r8, #128	; 0x80
    7b5c:	add	r2, r2, #128	; 0x80
    7b60:	sub	r8, r8, r3
    7b64:	add	r9, r9, r2
    7b68:	ldr	r4, [r6, #80]	; 0x50
    7b6c:	mov	r1, r9
    7b70:	add	r0, r4, #88	; 0x58
    7b74:	add	r0, r6, r0
    7b78:	add	r4, r4, r8
    7b7c:	mov	r2, r8
    7b80:	bl	4808 <memcpy@plt>
    7b84:	cmp	r4, #127	; 0x7f
    7b88:	bhi	7c0c <rb_sha512_process_bytes+0x130>
    7b8c:	mov	r3, #0
    7b90:	str	r4, [r6, #80]	; 0x50
    7b94:	str	r3, [r6, #84]	; 0x54
    7b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7b9c:	bic	r4, r8, #127	; 0x7f
    7ba0:	mov	r0, r9
    7ba4:	mov	r1, r4
    7ba8:	mov	r2, r6
    7bac:	bl	6490 <rb_sha512_process_block>
    7bb0:	and	r8, r8, #127	; 0x7f
    7bb4:	add	r9, r9, r4
    7bb8:	cmp	r8, #0
    7bbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    7bc0:	b	7b68 <rb_sha512_process_bytes+0x8c>
    7bc4:	rsb	r7, r4, #256	; 0x100
    7bc8:	cmp	r7, r1
    7bcc:	movcs	r7, r1
    7bd0:	add	r0, r4, #88	; 0x58
    7bd4:	mov	r2, r7
    7bd8:	add	r0, r6, r0
    7bdc:	mov	r1, r9
    7be0:	bl	4808 <memcpy@plt>
    7be4:	ldrd	r2, [r6, #80]	; 0x50
    7be8:	adds	r2, r2, r7
    7bec:	adc	r3, r3, #0
    7bf0:	cmp	r3, #0
    7bf4:	cmpeq	r2, #128	; 0x80
    7bf8:	strd	r2, [r6, #80]	; 0x50
    7bfc:	bhi	7c38 <rb_sha512_process_bytes+0x15c>
    7c00:	add	r9, r9, r7
    7c04:	sub	r8, r8, r7
    7c08:	b	7af8 <rb_sha512_process_bytes+0x1c>
    7c0c:	add	r5, r6, #88	; 0x58
    7c10:	mov	r0, r5
    7c14:	mov	r2, r6
    7c18:	sub	r4, r4, #128	; 0x80
    7c1c:	mov	r1, #128	; 0x80
    7c20:	bl	6490 <rb_sha512_process_block>
    7c24:	mov	r0, r5
    7c28:	mov	r2, r4
    7c2c:	add	r1, r6, #216	; 0xd8
    7c30:	bl	4808 <memcpy@plt>
    7c34:	b	7b8c <rb_sha512_process_bytes+0xb0>
    7c38:	add	r5, r6, #88	; 0x58
    7c3c:	bic	r1, r2, #127	; 0x7f
    7c40:	mov	r0, r5
    7c44:	mov	r2, r6
    7c48:	bl	6490 <rb_sha512_process_block>
    7c4c:	ldrd	r2, [r6, #80]	; 0x50
    7c50:	add	r1, r7, r4
    7c54:	mov	r3, #0
    7c58:	and	r2, r2, #127	; 0x7f
    7c5c:	bic	r1, r1, #127	; 0x7f
    7c60:	add	r1, r1, #88	; 0x58
    7c64:	add	r1, r6, r1
    7c68:	mov	r0, r5
    7c6c:	strd	r2, [r6, #80]	; 0x50
    7c70:	bl	4808 <memcpy@plt>
    7c74:	b	7c00 <rb_sha512_process_bytes+0x124>

00007c78 <rb_sha512_finish_ctx>:
    7c78:	ldrd	r2, [r0, #80]	; 0x50
    7c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c80:	mov	r4, r0
    7c84:	mov	r6, r2
    7c88:	mov	r7, r3
    7c8c:	ldrd	r2, [r0, #64]	; 0x40
    7c90:	mov	r5, r1
    7c94:	sub	sp, sp, #36	; 0x24
    7c98:	adds	r0, r6, r2
    7c9c:	adc	r1, r7, r3
    7ca0:	mov	r2, r0
    7ca4:	mov	r3, r1
    7ca8:	cmp	r7, r1
    7cac:	cmpeq	r6, r0
    7cb0:	strd	r6, [sp, #8]
    7cb4:	strd	r2, [r4, #64]	; 0x40
    7cb8:	bls	7ccc <rb_sha512_finish_ctx+0x54>
    7cbc:	ldrd	r2, [r4, #72]	; 0x48
    7cc0:	adds	r2, r2, #1
    7cc4:	adc	r3, r3, #0
    7cc8:	strd	r2, [r4, #72]	; 0x48
    7ccc:	ldrd	r2, [sp, #8]
    7cd0:	mov	r8, #0
    7cd4:	mov	sl, #0
    7cd8:	cmp	r3, #0
    7cdc:	cmpeq	r2, #111	; 0x6f
    7ce0:	mov	r3, r2
    7ce4:	rsbls	r3, r3, #112	; 0x70
    7ce8:	rsbhi	r3, r2, #240	; 0xf0
    7cec:	mov	r1, r2
    7cf0:	str	r3, [sp, #16]
    7cf4:	mov	r3, r1
    7cf8:	ldr	r1, [pc, #528]	; 7f10 <rb_sha512_finish_ctx+0x298>
    7cfc:	add	r0, r3, #88	; 0x58
    7d00:	add	r1, pc, r1
    7d04:	add	r1, r1, #1792	; 0x700
    7d08:	str	r2, [sp, #20]
    7d0c:	add	r1, r1, #8
    7d10:	ldr	r2, [sp, #16]
    7d14:	add	r0, r4, r0
    7d18:	bl	4808 <memcpy@plt>
    7d1c:	ldr	r3, [r4, #64]	; 0x40
    7d20:	ldr	ip, [r4, #68]	; 0x44
    7d24:	ldr	lr, [sp, #16]
    7d28:	lsl	r2, r3, #11
    7d2c:	str	r2, [sp, #4]
    7d30:	lsl	r7, ip, #11
    7d34:	mov	r2, #0
    7d38:	str	r2, [sp]
    7d3c:	orr	r7, r7, r3, lsr #21
    7d40:	and	r9, r7, #255	; 0xff
    7d44:	ldrd	r6, [sp]
    7d48:	strd	r8, [sp, #24]
    7d4c:	lsl	r1, ip, #27
    7d50:	mov	r8, r6
    7d54:	mov	r6, #0
    7d58:	orr	r6, r6, sl
    7d5c:	orr	r1, r1, r3, lsr #5
    7d60:	lsl	r2, ip, #3
    7d64:	orr	r6, r6, r8
    7d68:	ldrd	r8, [sp, #24]
    7d6c:	orr	r2, r2, r3, lsr #29
    7d70:	lsl	r0, r3, #27
    7d74:	and	fp, r1, #65280	; 0xff00
    7d78:	lsl	r3, r3, #3
    7d7c:	and	r7, r7, #16711680	; 0xff0000
    7d80:	orr	r7, r7, fp
    7d84:	orr	r7, r7, r0
    7d88:	lsr	sl, r3, #8
    7d8c:	lsr	r0, r2, #24
    7d90:	orr	r8, r8, r6
    7d94:	orr	r6, r8, r0
    7d98:	orr	sl, sl, r2, lsl #24
    7d9c:	orr	r9, r9, r7
    7da0:	mov	r1, #0
    7da4:	lsr	r0, r3, #24
    7da8:	lsr	fp, r2, #8
    7dac:	orr	r7, r9, r1
    7db0:	orr	r0, r0, r2, lsl #8
    7db4:	mov	r3, #0
    7db8:	and	r2, sl, #-16777216	; 0xff000000
    7dbc:	orr	r6, r6, r2
    7dc0:	orr	r7, r7, r3
    7dc4:	ldrd	r2, [sp, #8]
    7dc8:	and	r0, r0, #16711680	; 0xff0000
    7dcc:	mov	r1, #0
    7dd0:	adds	r2, r2, lr
    7dd4:	and	r8, fp, #65280	; 0xff00
    7dd8:	orr	r0, r0, r6
    7ddc:	orr	r1, r1, r7
    7de0:	mov	r9, #0
    7de4:	add	r3, r4, r2
    7de8:	orr	r0, r0, r8
    7dec:	orr	r1, r1, r9
    7df0:	add	r2, r4, r2
    7df4:	strd	r0, [r3, #96]	; 0x60
    7df8:	ldr	lr, [r4, #76]	; 0x4c
    7dfc:	ldr	r3, [r4, #72]	; 0x48
    7e00:	lsr	r0, ip, #29
    7e04:	lsl	fp, lr, #3
    7e08:	orr	fp, fp, r3, lsr #29
    7e0c:	ldr	lr, [sp, #16]
    7e10:	mov	r1, #0
    7e14:	lsl	sl, r3, #3
    7e18:	ldr	r3, [sp, #20]
    7e1c:	orr	fp, fp, r1
    7e20:	orr	sl, sl, r0
    7e24:	add	r1, lr, r3
    7e28:	rev	sl, sl
    7e2c:	rev	r3, fp
    7e30:	str	r3, [r2, #88]	; 0x58
    7e34:	str	sl, [r2, #92]	; 0x5c
    7e38:	add	r0, r4, #88	; 0x58
    7e3c:	mov	r2, r4
    7e40:	add	r1, r1, #16
    7e44:	bl	6490 <rb_sha512_process_block>
    7e48:	ldm	r4, {r2, r3}
    7e4c:	mov	r0, r5
    7e50:	rev	r2, r2
    7e54:	rev	r3, r3
    7e58:	str	r2, [r5, #4]
    7e5c:	str	r3, [r5]
    7e60:	ldr	r2, [r4, #8]
    7e64:	ldr	r3, [r4, #12]
    7e68:	rev	r2, r2
    7e6c:	rev	r3, r3
    7e70:	str	r2, [r5, #12]
    7e74:	str	r3, [r5, #8]
    7e78:	ldr	r2, [r4, #16]
    7e7c:	ldr	r3, [r4, #20]
    7e80:	rev	r2, r2
    7e84:	rev	r3, r3
    7e88:	str	r2, [r5, #20]
    7e8c:	str	r3, [r5, #16]
    7e90:	ldr	r2, [r4, #24]
    7e94:	ldr	r3, [r4, #28]
    7e98:	rev	r2, r2
    7e9c:	rev	r3, r3
    7ea0:	str	r2, [r5, #28]
    7ea4:	str	r3, [r5, #24]
    7ea8:	ldr	r2, [r4, #32]
    7eac:	ldr	r3, [r4, #36]	; 0x24
    7eb0:	rev	r2, r2
    7eb4:	rev	r3, r3
    7eb8:	str	r2, [r5, #36]	; 0x24
    7ebc:	str	r3, [r5, #32]
    7ec0:	ldr	r2, [r4, #40]	; 0x28
    7ec4:	ldr	r3, [r4, #44]	; 0x2c
    7ec8:	rev	r2, r2
    7ecc:	rev	r3, r3
    7ed0:	str	r2, [r5, #44]	; 0x2c
    7ed4:	str	r3, [r5, #40]	; 0x28
    7ed8:	ldr	r2, [r4, #48]	; 0x30
    7edc:	ldr	r3, [r4, #52]	; 0x34
    7ee0:	rev	r2, r2
    7ee4:	rev	r3, r3
    7ee8:	str	r2, [r5, #52]	; 0x34
    7eec:	str	r3, [r5, #48]	; 0x30
    7ef0:	ldr	r2, [r4, #56]	; 0x38
    7ef4:	ldr	r3, [r4, #60]	; 0x3c
    7ef8:	rev	r2, r2
    7efc:	rev	r3, r3
    7f00:	str	r2, [r5, #60]	; 0x3c
    7f04:	str	r3, [r5, #56]	; 0x38
    7f08:	add	sp, sp, #36	; 0x24
    7f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7f10:	.word	0x000124e0

00007f14 <rb_sha256_process_bytes.constprop.3>:
    7f14:	cmp	r1, #63	; 0x3f
    7f18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7f1c:	mov	r5, r1
    7f20:	mov	sl, r0
    7f24:	mov	r7, r2
    7f28:	bls	7ffc <rb_sha256_process_bytes.constprop.3+0xe8>
    7f2c:	tst	r0, #3
    7f30:	beq	7fe8 <rb_sha256_process_bytes.constprop.3+0xd4>
    7f34:	cmp	r1, #64	; 0x40
    7f38:	beq	7fbc <rb_sha256_process_bytes.constprop.3+0xa8>
    7f3c:	add	r6, r2, #44	; 0x2c
    7f40:	mov	r8, r1
    7f44:	mov	r4, r0
    7f48:	mov	r9, #64	; 0x40
    7f4c:	add	r2, r4, #64	; 0x40
    7f50:	mov	r3, r6
    7f54:	ldr	lr, [r4]
    7f58:	ldr	ip, [r4, #4]
    7f5c:	ldr	r0, [r4, #8]
    7f60:	ldr	r1, [r4, #12]
    7f64:	add	r4, r4, #16
    7f68:	cmp	r4, r2
    7f6c:	str	lr, [r3]
    7f70:	str	ip, [r3, #4]
    7f74:	str	r0, [r3, #8]
    7f78:	str	r1, [r3, #12]
    7f7c:	add	r3, r3, #16
    7f80:	bne	7f54 <rb_sha256_process_bytes.constprop.3+0x40>
    7f84:	sub	r8, r8, #64	; 0x40
    7f88:	mov	r2, r7
    7f8c:	mov	r1, r9
    7f90:	mov	r0, r6
    7f94:	bl	60d0 <rb_sha256_process_block>
    7f98:	cmp	r8, #64	; 0x40
    7f9c:	bhi	7f4c <rb_sha256_process_bytes.constprop.3+0x38>
    7fa0:	sub	r3, r5, #65	; 0x41
    7fa4:	bic	r2, r3, #63	; 0x3f
    7fa8:	mov	r3, r2
    7fac:	sub	r5, r5, #64	; 0x40
    7fb0:	add	r2, r2, #64	; 0x40
    7fb4:	sub	r5, r5, r3
    7fb8:	add	sl, sl, r2
    7fbc:	ldr	r4, [r7, #40]	; 0x28
    7fc0:	mov	r1, sl
    7fc4:	add	r0, r4, #44	; 0x2c
    7fc8:	add	r0, r7, r0
    7fcc:	add	r4, r5, r4
    7fd0:	mov	r2, r5
    7fd4:	bl	4808 <memcpy@plt>
    7fd8:	cmp	r4, #63	; 0x3f
    7fdc:	bhi	8008 <rb_sha256_process_bytes.constprop.3+0xf4>
    7fe0:	str	r4, [r7, #40]	; 0x28
    7fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7fe8:	bic	r4, r1, #63	; 0x3f
    7fec:	mov	r1, r4
    7ff0:	bl	60d0 <rb_sha256_process_block>
    7ff4:	add	sl, sl, r4
    7ff8:	and	r5, r5, #63	; 0x3f
    7ffc:	cmp	r5, #0
    8000:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    8004:	b	7fbc <rb_sha256_process_bytes.constprop.3+0xa8>
    8008:	add	r5, r7, #44	; 0x2c
    800c:	sub	r4, r4, #64	; 0x40
    8010:	mov	r0, r5
    8014:	mov	r2, r7
    8018:	mov	r1, #64	; 0x40
    801c:	bl	60d0 <rb_sha256_process_block>
    8020:	mov	r0, r5
    8024:	mov	r2, r4
    8028:	add	r1, r7, #108	; 0x6c
    802c:	bl	4808 <memcpy@plt>
    8030:	str	r4, [r7, #40]	; 0x28
    8034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00008038 <rb_sha256_crypt_r>:
    8038:	ldr	ip, [pc, #3860]	; 8f54 <rb_sha256_crypt_r+0xf1c>
    803c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8040:	add	ip, pc, ip
    8044:	add	fp, sp, #32
    8048:	mov	r4, r0
    804c:	add	r0, ip, #1920	; 0x780
    8050:	sub	sp, sp, #468	; 0x1d4
    8054:	add	r0, r0, #8
    8058:	str	r2, [fp, #-468]	; 0xfffffe2c
    805c:	mov	r2, #3
    8060:	str	r3, [fp, #-476]	; 0xfffffe24
    8064:	mov	r5, r1
    8068:	str	r1, [fp, #-460]	; 0xfffffe34
    806c:	bl	4c10 <strncmp@plt>
    8070:	ldr	r1, [pc, #3808]	; 8f58 <rb_sha256_crypt_r+0xf20>
    8074:	mov	r2, #7
    8078:	add	r1, pc, r1
    807c:	add	r1, r1, #1920	; 0x780
    8080:	add	r1, r1, #12
    8084:	cmp	r0, #0
    8088:	moveq	r3, r5
    808c:	addeq	r3, r3, #3
    8090:	streq	r3, [fp, #-460]	; 0xfffffe34
    8094:	ldr	r0, [fp, #-460]	; 0xfffffe34
    8098:	bl	4c10 <strncmp@plt>
    809c:	subs	r3, r0, #0
    80a0:	str	r3, [fp, #-480]	; 0xfffffe20
    80a4:	beq	8dc8 <rb_sha256_crypt_r+0xd90>
    80a8:	ldr	r3, [pc, #3756]	; 8f5c <rb_sha256_crypt_r+0xf24>
    80ac:	sub	sl, fp, #208	; 0xd0
    80b0:	str	r3, [fp, #-456]	; 0xfffffe38
    80b4:	mov	r3, #0
    80b8:	str	r3, [fp, #-480]	; 0xfffffe20
    80bc:	ldr	r1, [pc, #3740]	; 8f60 <rb_sha256_crypt_r+0xf28>
    80c0:	ldr	r0, [fp, #-460]	; 0xfffffe34
    80c4:	add	r1, pc, r1
    80c8:	bl	4be0 <strcspn@plt>
    80cc:	cmp	r0, #16
    80d0:	movcc	r3, r0
    80d4:	movcs	r3, #16
    80d8:	mov	r0, r4
    80dc:	str	r3, [fp, #-452]	; 0xfffffe3c
    80e0:	bl	47e4 <strlen@plt>
    80e4:	ands	r3, r4, #3
    80e8:	streq	r3, [fp, #-484]	; 0xfffffe1c
    80ec:	mov	r8, r0
    80f0:	bne	8e88 <rb_sha256_crypt_r+0xe50>
    80f4:	ldr	r3, [fp, #-460]	; 0xfffffe34
    80f8:	ands	r3, r3, #3
    80fc:	streq	r3, [fp, #-488]	; 0xfffffe18
    8100:	bne	8e60 <rb_sha256_crypt_r+0xe28>
    8104:	ldr	r3, [pc, #3672]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    8108:	ldr	r6, [pc, #3672]	; 8f68 <rb_sha256_crypt_r+0xf30>
    810c:	str	r3, [fp, #-372]	; 0xfffffe8c
    8110:	ldr	r3, [pc, #3668]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8114:	ldr	r5, [pc, #3668]	; 8f70 <rb_sha256_crypt_r+0xf38>
    8118:	str	r3, [fp, #-368]	; 0xfffffe90
    811c:	ldr	r3, [pc, #3664]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    8120:	sub	r7, fp, #380	; 0x17c
    8124:	str	r3, [fp, #-364]	; 0xfffffe94
    8128:	ldr	r3, [pc, #3656]	; 8f78 <rb_sha256_crypt_r+0xf40>
    812c:	mov	r9, #0
    8130:	str	r3, [fp, #-360]	; 0xfffffe98
    8134:	ldr	r3, [pc, #3648]	; 8f7c <rb_sha256_crypt_r+0xf44>
    8138:	mov	r2, r7
    813c:	str	r3, [fp, #-356]	; 0xfffffe9c
    8140:	ldr	r3, [pc, #3640]	; 8f80 <rb_sha256_crypt_r+0xf48>
    8144:	mov	r1, r8
    8148:	mov	r0, r4
    814c:	str	r3, [fp, #-352]	; 0xfffffea0
    8150:	str	r9, [fp, #-344]	; 0xfffffea8
    8154:	str	r9, [fp, #-348]	; 0xfffffea4
    8158:	str	r9, [fp, #-340]	; 0xfffffeac
    815c:	str	r6, [fp, #-380]	; 0xfffffe84
    8160:	str	r5, [fp, #-376]	; 0xfffffe88
    8164:	bl	7f14 <rb_sha256_process_bytes.constprop.3>
    8168:	mov	r2, r7
    816c:	ldr	r1, [fp, #-452]	; 0xfffffe3c
    8170:	ldr	r0, [fp, #-460]	; 0xfffffe34
    8174:	bl	7810 <rb_sha256_process_bytes>
    8178:	ldr	r3, [pc, #3556]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    817c:	mov	r2, sl
    8180:	str	r3, [fp, #-200]	; 0xffffff38
    8184:	ldr	r3, [pc, #3552]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8188:	mov	r1, r8
    818c:	str	r3, [fp, #-196]	; 0xffffff3c
    8190:	ldr	r3, [pc, #3548]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    8194:	mov	r0, r4
    8198:	str	r3, [fp, #-192]	; 0xffffff40
    819c:	ldr	r3, [pc, #3540]	; 8f78 <rb_sha256_crypt_r+0xf40>
    81a0:	str	r9, [fp, #-172]	; 0xffffff54
    81a4:	str	r3, [fp, #-188]	; 0xffffff44
    81a8:	ldr	r3, [pc, #3532]	; 8f7c <rb_sha256_crypt_r+0xf44>
    81ac:	str	r9, [fp, #-176]	; 0xffffff50
    81b0:	str	r3, [fp, #-184]	; 0xffffff48
    81b4:	ldr	r3, [pc, #3524]	; 8f80 <rb_sha256_crypt_r+0xf48>
    81b8:	str	r9, [fp, #-168]	; 0xffffff58
    81bc:	str	r3, [fp, #-180]	; 0xffffff4c
    81c0:	str	r6, [fp, #-208]	; 0xffffff30
    81c4:	str	r5, [fp, #-204]	; 0xffffff34
    81c8:	bl	7f14 <rb_sha256_process_bytes.constprop.3>
    81cc:	mov	r2, sl
    81d0:	ldr	r1, [fp, #-452]	; 0xfffffe3c
    81d4:	ldr	r0, [fp, #-460]	; 0xfffffe34
    81d8:	bl	7810 <rb_sha256_process_bytes>
    81dc:	sub	r9, fp, #444	; 0x1bc
    81e0:	mov	r2, sl
    81e4:	mov	r1, r8
    81e8:	mov	r0, r4
    81ec:	bl	7810 <rb_sha256_process_bytes>
    81f0:	mov	r1, r9
    81f4:	mov	r0, sl
    81f8:	bl	79c4 <rb_sha256_finish_ctx>
    81fc:	cmp	r8, #32
    8200:	bls	8ec4 <rb_sha256_crypt_r+0xe8c>
    8204:	mov	r6, r8
    8208:	mov	r5, #32
    820c:	sub	r6, r6, #32
    8210:	mov	r2, r7
    8214:	mov	r1, r5
    8218:	mov	r0, r9
    821c:	bl	7810 <rb_sha256_process_bytes>
    8220:	cmp	r6, #32
    8224:	bhi	820c <rb_sha256_crypt_r+0x1d4>
    8228:	sub	r3, r8, #33	; 0x21
    822c:	bic	r3, r3, #31
    8230:	sub	r1, r8, #32
    8234:	sub	r1, r1, r3
    8238:	mov	r2, r7
    823c:	mov	r0, r9
    8240:	bl	7810 <rb_sha256_process_bytes>
    8244:	mov	r6, r8
    8248:	mov	r5, #32
    824c:	tst	r6, #1
    8250:	mov	r2, r7
    8254:	mov	r1, r5
    8258:	mov	r0, r9
    825c:	moveq	r2, r7
    8260:	moveq	r1, r8
    8264:	moveq	r0, r4
    8268:	bl	7810 <rb_sha256_process_bytes>
    826c:	lsrs	r6, r6, #1
    8270:	bne	824c <rb_sha256_crypt_r+0x214>
    8274:	mov	r1, r9
    8278:	mov	r0, r7
    827c:	bl	79c4 <rb_sha256_finish_ctx>
    8280:	ldr	r2, [pc, #3296]	; 8f68 <rb_sha256_crypt_r+0xf30>
    8284:	ldr	r3, [pc, #3300]	; 8f70 <rb_sha256_crypt_r+0xf38>
    8288:	ldr	r1, [pc, #3284]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    828c:	str	r2, [fp, #-208]	; 0xffffff30
    8290:	str	r3, [fp, #-204]	; 0xffffff34
    8294:	ldr	r2, [pc, #3280]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8298:	ldr	r3, [pc, #3284]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    829c:	str	r1, [fp, #-200]	; 0xffffff38
    82a0:	str	r2, [fp, #-196]	; 0xffffff3c
    82a4:	ldr	r1, [pc, #3276]	; 8f78 <rb_sha256_crypt_r+0xf40>
    82a8:	ldr	r2, [pc, #3276]	; 8f7c <rb_sha256_crypt_r+0xf44>
    82ac:	str	r3, [fp, #-192]	; 0xffffff40
    82b0:	ldr	r3, [pc, #3272]	; 8f80 <rb_sha256_crypt_r+0xf48>
    82b4:	mov	r5, #0
    82b8:	str	r1, [fp, #-188]	; 0xffffff44
    82bc:	str	r2, [fp, #-184]	; 0xffffff48
    82c0:	str	r3, [fp, #-180]	; 0xffffff4c
    82c4:	str	r5, [fp, #-172]	; 0xffffff54
    82c8:	str	r5, [fp, #-176]	; 0xffffff50
    82cc:	str	r5, [fp, #-168]	; 0xffffff58
    82d0:	add	r5, r5, #1
    82d4:	mov	r2, sl
    82d8:	mov	r1, r8
    82dc:	mov	r0, r4
    82e0:	bl	7810 <rb_sha256_process_bytes>
    82e4:	cmp	r8, r5
    82e8:	bne	82d0 <rb_sha256_crypt_r+0x298>
    82ec:	sub	r3, fp, #412	; 0x19c
    82f0:	mov	r1, r3
    82f4:	mov	r0, sl
    82f8:	mov	r6, r3
    82fc:	str	r3, [fp, #-472]	; 0xfffffe28
    8300:	bl	79c4 <rb_sha256_finish_ctx>
    8304:	add	r3, r8, #14
    8308:	bic	r3, r3, #7
    830c:	sub	sp, sp, r3
    8310:	cmp	r8, #31
    8314:	add	r3, sp, #8
    8318:	str	r3, [fp, #-448]	; 0xfffffe40
    831c:	movls	r0, r3
    8320:	movls	r2, r8
    8324:	bls	8370 <rb_sha256_crypt_r+0x338>
    8328:	add	r5, sp, #40	; 0x28
    832c:	mov	r4, r8
    8330:	mov	lr, r6
    8334:	sub	ip, r5, #32
    8338:	ldm	lr!, {r0, r1, r2, r3}
    833c:	sub	r4, r4, #32
    8340:	cmp	r4, #31
    8344:	add	r5, r5, #32
    8348:	stmia	ip!, {r0, r1, r2, r3}
    834c:	ldm	lr, {r0, r1, r2, r3}
    8350:	stm	ip, {r0, r1, r2, r3}
    8354:	bhi	8330 <rb_sha256_crypt_r+0x2f8>
    8358:	sub	r0, r8, #32
    835c:	bic	r0, r0, #31
    8360:	ldr	r3, [fp, #-448]	; 0xfffffe40
    8364:	add	r0, r0, #32
    8368:	add	r0, r3, r0
    836c:	and	r2, r8, #31
    8370:	ldr	r1, [fp, #-472]	; 0xfffffe28
    8374:	bl	4808 <memcpy@plt>
    8378:	ldr	r0, [pc, #3048]	; 8f68 <rb_sha256_crypt_r+0xf30>
    837c:	ldr	r1, [pc, #3052]	; 8f70 <rb_sha256_crypt_r+0xf38>
    8380:	ldr	r2, [pc, #3036]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    8384:	ldr	r3, [pc, #3040]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8388:	ldr	r5, [fp, #-452]	; 0xfffffe3c
    838c:	ldr	r6, [fp, #-460]	; 0xfffffe34
    8390:	str	r0, [fp, #-208]	; 0xffffff30
    8394:	str	r1, [fp, #-204]	; 0xffffff34
    8398:	ldr	r0, [pc, #3028]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    839c:	ldr	r1, [pc, #3028]	; 8f78 <rb_sha256_crypt_r+0xf40>
    83a0:	str	r2, [fp, #-200]	; 0xffffff38
    83a4:	str	r3, [fp, #-196]	; 0xffffff3c
    83a8:	ldr	r2, [pc, #3020]	; 8f7c <rb_sha256_crypt_r+0xf44>
    83ac:	ldr	r3, [pc, #3020]	; 8f80 <rb_sha256_crypt_r+0xf48>
    83b0:	mov	r4, #0
    83b4:	str	r0, [fp, #-192]	; 0xffffff40
    83b8:	str	r1, [fp, #-188]	; 0xffffff44
    83bc:	str	r2, [fp, #-184]	; 0xffffff48
    83c0:	str	r3, [fp, #-180]	; 0xffffff4c
    83c4:	str	r4, [fp, #-172]	; 0xffffff54
    83c8:	str	r4, [fp, #-176]	; 0xffffff50
    83cc:	str	r4, [fp, #-168]	; 0xffffff58
    83d0:	mov	r2, sl
    83d4:	mov	r1, r5
    83d8:	mov	r0, r6
    83dc:	bl	7810 <rb_sha256_process_bytes>
    83e0:	ldrb	r3, [fp, #-444]	; 0xfffffe44
    83e4:	add	r4, r4, #1
    83e8:	add	r3, r3, #16
    83ec:	cmp	r3, r4
    83f0:	bhi	83d0 <rb_sha256_crypt_r+0x398>
    83f4:	ldr	r4, [fp, #-472]	; 0xfffffe28
    83f8:	mov	r0, sl
    83fc:	mov	r1, r4
    8400:	bl	79c4 <rb_sha256_finish_ctx>
    8404:	ldr	r2, [fp, #-452]	; 0xfffffe3c
    8408:	mov	r1, r4
    840c:	add	r3, r2, #14
    8410:	bic	r3, r3, #7
    8414:	sub	sp, sp, r3
    8418:	add	r3, sp, #8
    841c:	mov	r0, r3
    8420:	str	r3, [fp, #-464]	; 0xfffffe30
    8424:	bl	4808 <memcpy@plt>
    8428:	ldr	r6, [pc, #2888]	; 8f78 <rb_sha256_crypt_r+0xf40>
    842c:	mov	r5, #0
    8430:	ldr	ip, [pc, #2864]	; 8f68 <rb_sha256_crypt_r+0xf30>
    8434:	ldr	r3, [pc, #2864]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8438:	str	ip, [fp, #-380]	; 0xfffffe84
    843c:	ldr	ip, [pc, #2860]	; 8f70 <rb_sha256_crypt_r+0xf38>
    8440:	ands	r4, r5, #1
    8444:	str	ip, [fp, #-376]	; 0xfffffe88
    8448:	ldr	ip, [pc, #2836]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    844c:	str	r3, [fp, #-368]	; 0xfffffe90
    8450:	str	ip, [fp, #-372]	; 0xfffffe8c
    8454:	ldr	ip, [pc, #2840]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    8458:	ldr	r3, [pc, #2848]	; 8f80 <rb_sha256_crypt_r+0xf48>
    845c:	str	ip, [fp, #-364]	; 0xfffffe94
    8460:	ldr	ip, [pc, #2836]	; 8f7c <rb_sha256_crypt_r+0xf44>
    8464:	mov	r2, r7
    8468:	mov	r1, #32
    846c:	mov	r0, r9
    8470:	str	r3, [fp, #-352]	; 0xfffffea0
    8474:	movne	r1, r8
    8478:	mov	r3, #0
    847c:	ldrne	r0, [fp, #-448]	; 0xfffffe40
    8480:	str	r3, [fp, #-344]	; 0xfffffea8
    8484:	str	r3, [fp, #-348]	; 0xfffffea4
    8488:	str	r3, [fp, #-340]	; 0xfffffeac
    848c:	str	r6, [fp, #-360]	; 0xfffffe98
    8490:	str	ip, [fp, #-356]	; 0xfffffe9c
    8494:	bl	7810 <rb_sha256_process_bytes>
    8498:	ldr	r3, [pc, #2788]	; 8f84 <rb_sha256_crypt_r+0xf4c>
    849c:	umull	r2, r3, r3, r5
    84a0:	lsr	r3, r3, #1
    84a4:	add	r3, r3, r3, lsl #1
    84a8:	cmp	r5, r3
    84ac:	bne	8db4 <rb_sha256_crypt_r+0xd7c>
    84b0:	ldr	r3, [pc, #2768]	; 8f88 <rb_sha256_crypt_r+0xf50>
    84b4:	umull	r2, r3, r3, r5
    84b8:	sub	r2, r5, r3
    84bc:	add	r3, r3, r2, lsr #1
    84c0:	lsr	r3, r3, #2
    84c4:	rsb	r3, r3, r3, lsl #3
    84c8:	cmp	r5, r3
    84cc:	bne	8da0 <rb_sha256_crypt_r+0xd68>
    84d0:	cmp	r4, #0
    84d4:	mov	r2, r7
    84d8:	mov	r1, #32
    84dc:	mov	r0, r9
    84e0:	beq	8d70 <rb_sha256_crypt_r+0xd38>
    84e4:	bl	7810 <rb_sha256_process_bytes>
    84e8:	mov	r1, r9
    84ec:	mov	r0, r7
    84f0:	bl	79c4 <rb_sha256_finish_ctx>
    84f4:	ldr	r3, [fp, #-456]	; 0xfffffe38
    84f8:	add	r5, r5, #1
    84fc:	cmp	r3, r5
    8500:	bne	8430 <rb_sha256_crypt_r+0x3f8>
    8504:	ldr	r3, [fp, #-476]	; 0xfffffe24
    8508:	ldr	r4, [fp, #-468]	; 0xfffffe2c
    850c:	mov	r1, #0
    8510:	bic	r5, r3, r3, asr #31
    8514:	mov	r0, r4
    8518:	mov	r2, r5
    851c:	bl	4628 <memset@plt>
    8520:	ldr	r1, [pc, #2660]	; 8f8c <rb_sha256_crypt_r+0xf54>
    8524:	mov	r2, r5
    8528:	add	r1, pc, r1
    852c:	add	r1, r1, #1920	; 0x780
    8530:	add	r1, r1, #8
    8534:	mov	r0, r4
    8538:	bl	4574 <strncpy@plt>
    853c:	mov	r0, r4
    8540:	mov	r1, #0
    8544:	bl	45b0 <strchr@plt>
    8548:	subs	r4, r0, #0
    854c:	ldreq	r3, [fp, #-468]	; 0xfffffe2c
    8550:	addeq	r4, r3, r5
    8554:	ldr	r3, [fp, #-480]	; 0xfffffe20
    8558:	cmp	r3, #0
    855c:	ldr	r3, [fp, #-476]	; 0xfffffe24
    8560:	sub	r5, r3, #3
    8564:	bne	8e28 <rb_sha256_crypt_r+0xdf0>
    8568:	ldr	r2, [fp, #-452]	; 0xfffffe3c
    856c:	mov	r1, #0
    8570:	mov	r0, r4
    8574:	bl	4628 <memset@plt>
    8578:	bic	r6, r5, r5, asr #31
    857c:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    8580:	ldr	r1, [fp, #-460]	; 0xfffffe34
    8584:	cmp	r6, r3
    8588:	movcs	r6, r3
    858c:	mov	r2, r6
    8590:	mov	r0, r4
    8594:	bl	4574 <strncpy@plt>
    8598:	mov	r1, #0
    859c:	ldr	r0, [fp, #-468]	; 0xfffffe2c
    85a0:	bl	45b0 <strchr@plt>
    85a4:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    85a8:	sub	r5, r5, r6
    85ac:	cmp	r0, #0
    85b0:	moveq	r0, r3
    85b4:	cmp	r5, #0
    85b8:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    85bc:	mov	r3, #36	; 0x24
    85c0:	strb	r3, [r0]
    85c4:	ldrb	r3, [fp, #-434]	; 0xfffffe4e
    85c8:	ldrb	r1, [fp, #-444]	; 0xfffffe44
    85cc:	ldrb	r2, [fp, #-424]	; 0xfffffe58
    85d0:	cmp	r5, #1
    85d4:	lsl	r3, r3, #8
    85d8:	orr	r3, r3, r1, lsl #16
    85dc:	orr	r3, r3, r2
    85e0:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    85e4:	ldr	r1, [pc, #2468]	; 8f90 <rb_sha256_crypt_r+0xf58>
    85e8:	and	r2, r3, #63	; 0x3f
    85ec:	add	r1, pc, r1
    85f0:	add	r2, r1, r2
    85f4:	sub	ip, r5, #2
    85f8:	ldrb	lr, [r2, #1940]	; 0x794
    85fc:	cmp	ip, #0
    8600:	add	r2, r0, #2
    8604:	strb	lr, [r0, #1]
    8608:	lsr	lr, r3, #6
    860c:	ble	8668 <rb_sha256_crypt_r+0x630>
    8610:	and	lr, lr, #63	; 0x3f
    8614:	add	lr, r1, lr
    8618:	sub	ip, r5, #3
    861c:	ldrb	lr, [lr, #1940]	; 0x794
    8620:	cmp	ip, #0
    8624:	add	r2, r0, #3
    8628:	strb	lr, [r0, #2]
    862c:	lsr	lr, r3, #12
    8630:	ble	8668 <rb_sha256_crypt_r+0x630>
    8634:	and	lr, lr, #63	; 0x3f
    8638:	sub	ip, r5, #4
    863c:	add	lr, r1, lr
    8640:	cmp	ip, #0
    8644:	lsr	r3, r3, #18
    8648:	ldrb	r2, [lr, #1940]	; 0x794
    864c:	addgt	r3, r1, r3
    8650:	subgt	ip, r5, #5
    8654:	ldrbgt	r3, [r3, #1940]	; 0x794
    8658:	strb	r2, [r0, #3]
    865c:	add	r2, r0, #4
    8660:	addgt	r2, r0, #5
    8664:	strbgt	r3, [r0, #4]
    8668:	ldrb	r3, [fp, #-443]	; 0xfffffe45
    866c:	ldrb	r0, [fp, #-423]	; 0xfffffe59
    8670:	ldrb	r1, [fp, #-433]	; 0xfffffe4f
    8674:	cmp	ip, #0
    8678:	lsl	r3, r3, #8
    867c:	orr	r3, r3, r0, lsl #16
    8680:	orr	r3, r3, r1
    8684:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8688:	ldr	lr, [pc, #2308]	; 8f94 <rb_sha256_crypt_r+0xf5c>
    868c:	and	r1, r3, #63	; 0x3f
    8690:	add	lr, pc, lr
    8694:	add	r1, lr, r1
    8698:	sub	r0, ip, #1
    869c:	ldrb	r4, [r1, #1940]	; 0x794
    86a0:	cmp	r0, #0
    86a4:	add	r1, r2, #1
    86a8:	strb	r4, [r2]
    86ac:	lsr	r4, r3, #6
    86b0:	ble	870c <rb_sha256_crypt_r+0x6d4>
    86b4:	and	r4, r4, #63	; 0x3f
    86b8:	add	r4, lr, r4
    86bc:	sub	r0, ip, #2
    86c0:	ldrb	r4, [r4, #1940]	; 0x794
    86c4:	cmp	r0, #0
    86c8:	add	r1, r2, #2
    86cc:	strb	r4, [r2, #1]
    86d0:	lsr	r4, r3, #12
    86d4:	ble	870c <rb_sha256_crypt_r+0x6d4>
    86d8:	and	r4, r4, #63	; 0x3f
    86dc:	sub	r0, ip, #3
    86e0:	add	r4, lr, r4
    86e4:	cmp	r0, #0
    86e8:	lsr	r3, r3, #18
    86ec:	ldrb	r1, [r4, #1940]	; 0x794
    86f0:	addgt	r3, lr, r3
    86f4:	subgt	r0, ip, #4
    86f8:	ldrbgt	r3, [r3, #1940]	; 0x794
    86fc:	strb	r1, [r2, #2]
    8700:	add	r1, r2, #3
    8704:	addgt	r1, r2, #4
    8708:	strbgt	r3, [r2, #3]
    870c:	ldrb	r3, [fp, #-422]	; 0xfffffe5a
    8710:	ldrb	ip, [fp, #-432]	; 0xfffffe50
    8714:	ldrb	r2, [fp, #-442]	; 0xfffffe46
    8718:	cmp	r0, #0
    871c:	lsl	r3, r3, #8
    8720:	orr	r3, r3, ip, lsl #16
    8724:	orr	r3, r3, r2
    8728:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    872c:	ldr	lr, [pc, #2148]	; 8f98 <rb_sha256_crypt_r+0xf60>
    8730:	and	r2, r3, #63	; 0x3f
    8734:	add	lr, pc, lr
    8738:	add	r2, lr, r2
    873c:	sub	ip, r0, #1
    8740:	ldrb	r4, [r2, #1940]	; 0x794
    8744:	cmp	ip, #0
    8748:	add	r2, r1, #1
    874c:	strb	r4, [r1]
    8750:	lsr	r4, r3, #6
    8754:	ble	87b0 <rb_sha256_crypt_r+0x778>
    8758:	and	r4, r4, #63	; 0x3f
    875c:	add	r4, lr, r4
    8760:	sub	ip, r0, #2
    8764:	ldrb	r4, [r4, #1940]	; 0x794
    8768:	cmp	ip, #0
    876c:	add	r2, r1, #2
    8770:	strb	r4, [r1, #1]
    8774:	lsr	r4, r3, #12
    8778:	ble	87b0 <rb_sha256_crypt_r+0x778>
    877c:	and	r4, r4, #63	; 0x3f
    8780:	sub	ip, r0, #3
    8784:	add	r4, lr, r4
    8788:	cmp	ip, #0
    878c:	lsr	r3, r3, #18
    8790:	ldrb	r2, [r4, #1940]	; 0x794
    8794:	addgt	r3, lr, r3
    8798:	subgt	ip, r0, #4
    879c:	ldrbgt	r3, [r3, #1940]	; 0x794
    87a0:	strb	r2, [r1, #2]
    87a4:	add	r2, r1, #3
    87a8:	addgt	r2, r1, #4
    87ac:	strbgt	r3, [r1, #3]
    87b0:	ldrb	r3, [fp, #-431]	; 0xfffffe51
    87b4:	ldrb	r0, [fp, #-441]	; 0xfffffe47
    87b8:	ldrb	r1, [fp, #-421]	; 0xfffffe5b
    87bc:	cmp	ip, #0
    87c0:	lsl	r3, r3, #8
    87c4:	orr	r3, r3, r0, lsl #16
    87c8:	orr	r3, r3, r1
    87cc:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    87d0:	ldr	lr, [pc, #1988]	; 8f9c <rb_sha256_crypt_r+0xf64>
    87d4:	and	r1, r3, #63	; 0x3f
    87d8:	add	lr, pc, lr
    87dc:	add	r1, lr, r1
    87e0:	sub	r0, ip, #1
    87e4:	ldrb	r4, [r1, #1940]	; 0x794
    87e8:	cmp	r0, #0
    87ec:	add	r1, r2, #1
    87f0:	strb	r4, [r2]
    87f4:	lsr	r4, r3, #6
    87f8:	ble	8854 <rb_sha256_crypt_r+0x81c>
    87fc:	and	r4, r4, #63	; 0x3f
    8800:	add	r4, lr, r4
    8804:	sub	r0, ip, #2
    8808:	ldrb	r4, [r4, #1940]	; 0x794
    880c:	cmp	r0, #0
    8810:	add	r1, r2, #2
    8814:	strb	r4, [r2, #1]
    8818:	lsr	r4, r3, #12
    881c:	ble	8854 <rb_sha256_crypt_r+0x81c>
    8820:	and	r4, r4, #63	; 0x3f
    8824:	sub	r0, ip, #3
    8828:	add	r4, lr, r4
    882c:	cmp	r0, #0
    8830:	lsr	r3, r3, #18
    8834:	ldrb	r1, [r4, #1940]	; 0x794
    8838:	addgt	r3, lr, r3
    883c:	subgt	r0, ip, #4
    8840:	ldrbgt	r3, [r3, #1940]	; 0x794
    8844:	strb	r1, [r2, #2]
    8848:	add	r1, r2, #3
    884c:	addgt	r1, r2, #4
    8850:	strbgt	r3, [r2, #3]
    8854:	ldrb	r3, [fp, #-440]	; 0xfffffe48
    8858:	ldrb	ip, [fp, #-420]	; 0xfffffe5c
    885c:	ldrb	r2, [fp, #-430]	; 0xfffffe52
    8860:	cmp	r0, #0
    8864:	lsl	r3, r3, #8
    8868:	orr	r3, r3, ip, lsl #16
    886c:	orr	r3, r3, r2
    8870:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8874:	ldr	lr, [pc, #1828]	; 8fa0 <rb_sha256_crypt_r+0xf68>
    8878:	and	r2, r3, #63	; 0x3f
    887c:	add	lr, pc, lr
    8880:	add	r2, lr, r2
    8884:	sub	ip, r0, #1
    8888:	ldrb	r4, [r2, #1940]	; 0x794
    888c:	cmp	ip, #0
    8890:	add	r2, r1, #1
    8894:	strb	r4, [r1]
    8898:	lsr	r4, r3, #6
    889c:	ble	88f8 <rb_sha256_crypt_r+0x8c0>
    88a0:	and	r4, r4, #63	; 0x3f
    88a4:	add	r4, lr, r4
    88a8:	sub	ip, r0, #2
    88ac:	ldrb	r4, [r4, #1940]	; 0x794
    88b0:	cmp	ip, #0
    88b4:	add	r2, r1, #2
    88b8:	strb	r4, [r1, #1]
    88bc:	lsr	r4, r3, #12
    88c0:	ble	88f8 <rb_sha256_crypt_r+0x8c0>
    88c4:	and	r4, r4, #63	; 0x3f
    88c8:	sub	ip, r0, #3
    88cc:	add	r4, lr, r4
    88d0:	cmp	ip, #0
    88d4:	lsr	r3, r3, #18
    88d8:	ldrb	r2, [r4, #1940]	; 0x794
    88dc:	addgt	r3, lr, r3
    88e0:	subgt	ip, r0, #4
    88e4:	ldrbgt	r3, [r3, #1940]	; 0x794
    88e8:	strb	r2, [r1, #2]
    88ec:	add	r2, r1, #3
    88f0:	addgt	r2, r1, #4
    88f4:	strbgt	r3, [r1, #3]
    88f8:	ldrb	r3, [fp, #-419]	; 0xfffffe5d
    88fc:	ldrb	r0, [fp, #-429]	; 0xfffffe53
    8900:	ldrb	r1, [fp, #-439]	; 0xfffffe49
    8904:	cmp	ip, #0
    8908:	lsl	r3, r3, #8
    890c:	orr	r3, r3, r0, lsl #16
    8910:	orr	r3, r3, r1
    8914:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8918:	ldr	lr, [pc, #1668]	; 8fa4 <rb_sha256_crypt_r+0xf6c>
    891c:	and	r1, r3, #63	; 0x3f
    8920:	add	lr, pc, lr
    8924:	add	r1, lr, r1
    8928:	sub	r0, ip, #1
    892c:	ldrb	r4, [r1, #1940]	; 0x794
    8930:	cmp	r0, #0
    8934:	add	r1, r2, #1
    8938:	strb	r4, [r2]
    893c:	lsr	r4, r3, #6
    8940:	ble	899c <rb_sha256_crypt_r+0x964>
    8944:	and	r4, r4, #63	; 0x3f
    8948:	add	r4, lr, r4
    894c:	sub	r0, ip, #2
    8950:	ldrb	r4, [r4, #1940]	; 0x794
    8954:	cmp	r0, #0
    8958:	add	r1, r2, #2
    895c:	strb	r4, [r2, #1]
    8960:	lsr	r4, r3, #12
    8964:	ble	899c <rb_sha256_crypt_r+0x964>
    8968:	and	r4, r4, #63	; 0x3f
    896c:	sub	r0, ip, #3
    8970:	add	r4, lr, r4
    8974:	cmp	r0, #0
    8978:	lsr	r3, r3, #18
    897c:	ldrb	r1, [r4, #1940]	; 0x794
    8980:	addgt	r3, lr, r3
    8984:	subgt	r0, ip, #4
    8988:	ldrbgt	r3, [r3, #1940]	; 0x794
    898c:	strb	r1, [r2, #2]
    8990:	add	r1, r2, #3
    8994:	addgt	r1, r2, #4
    8998:	strbgt	r3, [r2, #3]
    899c:	ldrb	r3, [fp, #-428]	; 0xfffffe54
    89a0:	ldrb	ip, [fp, #-438]	; 0xfffffe4a
    89a4:	ldrb	r2, [fp, #-418]	; 0xfffffe5e
    89a8:	cmp	r0, #0
    89ac:	lsl	r3, r3, #8
    89b0:	orr	r3, r3, ip, lsl #16
    89b4:	orr	r3, r3, r2
    89b8:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    89bc:	ldr	lr, [pc, #1508]	; 8fa8 <rb_sha256_crypt_r+0xf70>
    89c0:	and	r2, r3, #63	; 0x3f
    89c4:	add	lr, pc, lr
    89c8:	add	r2, lr, r2
    89cc:	sub	ip, r0, #1
    89d0:	ldrb	r4, [r2, #1940]	; 0x794
    89d4:	cmp	ip, #0
    89d8:	add	r2, r1, #1
    89dc:	strb	r4, [r1]
    89e0:	lsr	r4, r3, #6
    89e4:	ble	8a40 <rb_sha256_crypt_r+0xa08>
    89e8:	and	r4, r4, #63	; 0x3f
    89ec:	add	r4, lr, r4
    89f0:	sub	ip, r0, #2
    89f4:	ldrb	r4, [r4, #1940]	; 0x794
    89f8:	cmp	ip, #0
    89fc:	add	r2, r1, #2
    8a00:	strb	r4, [r1, #1]
    8a04:	lsr	r4, r3, #12
    8a08:	ble	8a40 <rb_sha256_crypt_r+0xa08>
    8a0c:	and	r4, r4, #63	; 0x3f
    8a10:	sub	ip, r0, #3
    8a14:	add	r4, lr, r4
    8a18:	cmp	ip, #0
    8a1c:	lsr	r3, r3, #18
    8a20:	ldrb	r2, [r4, #1940]	; 0x794
    8a24:	addgt	r3, lr, r3
    8a28:	subgt	ip, r0, #4
    8a2c:	ldrbgt	r3, [r3, #1940]	; 0x794
    8a30:	strb	r2, [r1, #2]
    8a34:	add	r2, r1, #3
    8a38:	addgt	r2, r1, #4
    8a3c:	strbgt	r3, [r1, #3]
    8a40:	ldrb	r3, [fp, #-437]	; 0xfffffe4b
    8a44:	ldrb	r0, [fp, #-417]	; 0xfffffe5f
    8a48:	ldrb	r1, [fp, #-427]	; 0xfffffe55
    8a4c:	cmp	ip, #0
    8a50:	lsl	r3, r3, #8
    8a54:	orr	r3, r3, r0, lsl #16
    8a58:	orr	r3, r3, r1
    8a5c:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8a60:	ldr	lr, [pc, #1348]	; 8fac <rb_sha256_crypt_r+0xf74>
    8a64:	and	r1, r3, #63	; 0x3f
    8a68:	add	lr, pc, lr
    8a6c:	add	r1, lr, r1
    8a70:	sub	r0, ip, #1
    8a74:	ldrb	r4, [r1, #1940]	; 0x794
    8a78:	cmp	r0, #0
    8a7c:	add	r1, r2, #1
    8a80:	strb	r4, [r2]
    8a84:	lsr	r4, r3, #6
    8a88:	ble	8ae4 <rb_sha256_crypt_r+0xaac>
    8a8c:	and	r4, r4, #63	; 0x3f
    8a90:	add	r4, lr, r4
    8a94:	sub	r0, ip, #2
    8a98:	ldrb	r4, [r4, #1940]	; 0x794
    8a9c:	cmp	r0, #0
    8aa0:	add	r1, r2, #2
    8aa4:	strb	r4, [r2, #1]
    8aa8:	lsr	r4, r3, #12
    8aac:	ble	8ae4 <rb_sha256_crypt_r+0xaac>
    8ab0:	and	r4, r4, #63	; 0x3f
    8ab4:	sub	r0, ip, #3
    8ab8:	add	r4, lr, r4
    8abc:	cmp	r0, #0
    8ac0:	lsr	r3, r3, #18
    8ac4:	ldrb	r1, [r4, #1940]	; 0x794
    8ac8:	addgt	r3, lr, r3
    8acc:	subgt	r0, ip, #4
    8ad0:	ldrbgt	r3, [r3, #1940]	; 0x794
    8ad4:	strb	r1, [r2, #2]
    8ad8:	add	r1, r2, #3
    8adc:	addgt	r1, r2, #4
    8ae0:	strbgt	r3, [r2, #3]
    8ae4:	ldrb	r2, [fp, #-416]	; 0xfffffe60
    8ae8:	ldrb	ip, [fp, #-426]	; 0xfffffe56
    8aec:	ldrb	r3, [fp, #-436]	; 0xfffffe4c
    8af0:	cmp	r0, #0
    8af4:	lsl	r2, r2, #8
    8af8:	orr	r2, r2, ip, lsl #16
    8afc:	orr	r2, r2, r3
    8b00:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8b04:	ldr	lr, [pc, #1188]	; 8fb0 <rb_sha256_crypt_r+0xf78>
    8b08:	and	ip, r2, #63	; 0x3f
    8b0c:	add	lr, pc, lr
    8b10:	add	ip, lr, ip
    8b14:	sub	r3, r0, #1
    8b18:	ldrb	r4, [ip, #1940]	; 0x794
    8b1c:	cmp	r3, #0
    8b20:	add	ip, r1, #1
    8b24:	strb	r4, [r1]
    8b28:	lsr	r4, r2, #6
    8b2c:	ble	8b88 <rb_sha256_crypt_r+0xb50>
    8b30:	and	r4, r4, #63	; 0x3f
    8b34:	add	r4, lr, r4
    8b38:	sub	r3, r0, #2
    8b3c:	ldrb	r4, [r4, #1940]	; 0x794
    8b40:	cmp	r3, #0
    8b44:	add	ip, r1, #2
    8b48:	strb	r4, [r1, #1]
    8b4c:	lsr	r4, r2, #12
    8b50:	ble	8b88 <rb_sha256_crypt_r+0xb50>
    8b54:	and	r4, r4, #63	; 0x3f
    8b58:	sub	r3, r0, #3
    8b5c:	add	r4, lr, r4
    8b60:	cmp	r3, #0
    8b64:	lsr	r2, r2, #18
    8b68:	ldrb	ip, [r4, #1940]	; 0x794
    8b6c:	addgt	r2, lr, r2
    8b70:	subgt	r3, r0, #4
    8b74:	ldrbgt	r2, [r2, #1940]	; 0x794
    8b78:	strb	ip, [r1, #2]
    8b7c:	add	ip, r1, #3
    8b80:	addgt	ip, r1, #4
    8b84:	strbgt	r2, [r1, #3]
    8b88:	ldrb	r2, [fp, #-425]	; 0xfffffe57
    8b8c:	ldrb	r0, [fp, #-435]	; 0xfffffe4d
    8b90:	ldrb	r1, [fp, #-415]	; 0xfffffe61
    8b94:	cmp	r3, #0
    8b98:	lsl	r2, r2, #8
    8b9c:	orr	r2, r2, r0, lsl #16
    8ba0:	orr	r2, r2, r1
    8ba4:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8ba8:	ldr	r1, [pc, #1028]	; 8fb4 <rb_sha256_crypt_r+0xf7c>
    8bac:	and	r0, r2, #63	; 0x3f
    8bb0:	add	r1, pc, r1
    8bb4:	add	r0, r1, r0
    8bb8:	sub	lr, r3, #1
    8bbc:	ldrb	r0, [r0, #1940]	; 0x794
    8bc0:	cmp	lr, #0
    8bc4:	lsr	lr, r2, #6
    8bc8:	strb	r0, [ip]
    8bcc:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8bd0:	and	lr, lr, #63	; 0x3f
    8bd4:	add	lr, r1, lr
    8bd8:	sub	r0, r3, #2
    8bdc:	ldrb	lr, [lr, #1940]	; 0x794
    8be0:	cmp	r0, #0
    8be4:	lsr	r0, r2, #12
    8be8:	strb	lr, [ip, #1]
    8bec:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8bf0:	and	r0, r0, #63	; 0x3f
    8bf4:	add	r0, r1, r0
    8bf8:	sub	lr, r3, #3
    8bfc:	ldrb	r0, [r0, #1940]	; 0x794
    8c00:	cmp	lr, #0
    8c04:	lsr	r2, r2, #18
    8c08:	strb	r0, [ip, #2]
    8c0c:	ble	8eb0 <rb_sha256_crypt_r+0xe78>
    8c10:	add	r2, r1, r2
    8c14:	cmp	r3, #4
    8c18:	ldrb	r2, [r2, #1940]	; 0x794
    8c1c:	strb	r2, [ip, #3]
    8c20:	ldrh	r2, [r9, #30]
    8c24:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8c28:	and	r0, r2, #63	; 0x3f
    8c2c:	add	r0, r1, r0
    8c30:	cmp	r3, #5
    8c34:	ldrb	lr, [r0, #1940]	; 0x794
    8c38:	lsr	r0, r2, #6
    8c3c:	strb	lr, [ip, #4]
    8c40:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8c44:	and	r0, r0, #63	; 0x3f
    8c48:	add	r0, r1, r0
    8c4c:	cmp	r3, #6
    8c50:	ldrb	r0, [r0, #1940]	; 0x794
    8c54:	lsr	r2, r2, #12
    8c58:	strb	r0, [ip, #5]
    8c5c:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8c60:	add	r1, r1, r2
    8c64:	cmp	r3, #7
    8c68:	ldrb	r3, [r1, #1940]	; 0x794
    8c6c:	strb	r3, [ip, #6]
    8c70:	beq	8eb0 <rb_sha256_crypt_r+0xe78>
    8c74:	ldr	r4, [fp, #-468]	; 0xfffffe2c
    8c78:	mov	r3, #0
    8c7c:	strb	r3, [ip, #7]
    8c80:	ldr	r2, [pc, #736]	; 8f68 <rb_sha256_crypt_r+0xf30>
    8c84:	ldr	r3, [pc, #740]	; 8f70 <rb_sha256_crypt_r+0xf38>
    8c88:	ldr	r0, [pc, #724]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    8c8c:	str	r2, [fp, #-380]	; 0xfffffe84
    8c90:	str	r3, [fp, #-376]	; 0xfffffe88
    8c94:	ldr	r2, [pc, #720]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8c98:	ldr	r3, [pc, #724]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    8c9c:	str	r0, [fp, #-372]	; 0xfffffe8c
    8ca0:	ldr	r0, [pc, #720]	; 8f78 <rb_sha256_crypt_r+0xf40>
    8ca4:	str	r2, [fp, #-368]	; 0xfffffe90
    8ca8:	str	r3, [fp, #-364]	; 0xfffffe94
    8cac:	ldr	r2, [pc, #712]	; 8f7c <rb_sha256_crypt_r+0xf44>
    8cb0:	ldr	r3, [pc, #712]	; 8f80 <rb_sha256_crypt_r+0xf48>
    8cb4:	mov	r5, #0
    8cb8:	mov	r1, r9
    8cbc:	str	r0, [fp, #-360]	; 0xfffffe98
    8cc0:	mov	r0, r7
    8cc4:	str	r3, [fp, #-352]	; 0xfffffea0
    8cc8:	str	r2, [fp, #-356]	; 0xfffffe9c
    8ccc:	str	r5, [fp, #-344]	; 0xfffffea8
    8cd0:	str	r5, [fp, #-348]	; 0xfffffea4
    8cd4:	str	r5, [fp, #-340]	; 0xfffffeac
    8cd8:	bl	79c4 <rb_sha256_finish_ctx>
    8cdc:	mov	r1, r5
    8ce0:	mov	r2, #32
    8ce4:	ldr	r0, [fp, #-472]	; 0xfffffe28
    8ce8:	bl	4628 <memset@plt>
    8cec:	mov	r2, r8
    8cf0:	mov	r1, r5
    8cf4:	ldr	r0, [fp, #-448]	; 0xfffffe40
    8cf8:	bl	4628 <memset@plt>
    8cfc:	ldr	r2, [fp, #-452]	; 0xfffffe3c
    8d00:	mov	r1, r5
    8d04:	ldr	r0, [fp, #-464]	; 0xfffffe30
    8d08:	bl	4628 <memset@plt>
    8d0c:	mov	r1, r5
    8d10:	mov	r2, #172	; 0xac
    8d14:	mov	r0, r7
    8d18:	bl	4628 <memset@plt>
    8d1c:	mov	r0, sl
    8d20:	mov	r1, r5
    8d24:	mov	r2, #172	; 0xac
    8d28:	bl	4628 <memset@plt>
    8d2c:	ldr	r3, [fp, #-484]	; 0xfffffe1c
    8d30:	cmp	r3, r5
    8d34:	beq	8d48 <rb_sha256_crypt_r+0xd10>
    8d38:	mov	r2, r8
    8d3c:	mov	r1, r5
    8d40:	mov	r0, r3
    8d44:	bl	4628 <memset@plt>
    8d48:	ldr	r3, [fp, #-488]	; 0xfffffe18
    8d4c:	cmp	r3, #0
    8d50:	beq	8d64 <rb_sha256_crypt_r+0xd2c>
    8d54:	ldr	r2, [fp, #-452]	; 0xfffffe3c
    8d58:	mov	r0, r3
    8d5c:	mov	r1, #0
    8d60:	bl	4628 <memset@plt>
    8d64:	mov	r0, r4
    8d68:	sub	sp, fp, #32
    8d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d70:	mov	r2, r7
    8d74:	mov	r1, r8
    8d78:	ldr	r0, [fp, #-448]	; 0xfffffe40
    8d7c:	bl	7810 <rb_sha256_process_bytes>
    8d80:	mov	r1, r9
    8d84:	mov	r0, r7
    8d88:	bl	79c4 <rb_sha256_finish_ctx>
    8d8c:	ldr	r3, [fp, #-456]	; 0xfffffe38
    8d90:	add	r5, r5, #1
    8d94:	cmp	r3, r5
    8d98:	bne	8430 <rb_sha256_crypt_r+0x3f8>
    8d9c:	b	8504 <rb_sha256_crypt_r+0x4cc>
    8da0:	mov	r2, r7
    8da4:	mov	r1, r8
    8da8:	ldr	r0, [fp, #-448]	; 0xfffffe40
    8dac:	bl	7810 <rb_sha256_process_bytes>
    8db0:	b	84d0 <rb_sha256_crypt_r+0x498>
    8db4:	mov	r2, r7
    8db8:	ldr	r1, [fp, #-452]	; 0xfffffe3c
    8dbc:	ldr	r0, [fp, #-464]	; 0xfffffe30
    8dc0:	bl	7810 <rb_sha256_process_bytes>
    8dc4:	b	84b0 <rb_sha256_crypt_r+0x478>
    8dc8:	ldr	r3, [fp, #-460]	; 0xfffffe34
    8dcc:	sub	sl, fp, #208	; 0xd0
    8dd0:	mov	r2, #10
    8dd4:	add	r0, r3, #7
    8dd8:	mov	r1, sl
    8ddc:	bl	47fc <strtoul@plt>
    8de0:	ldr	r3, [fp, #-208]	; 0xffffff30
    8de4:	ldrb	r2, [r3]
    8de8:	cmp	r2, #36	; 0x24
    8dec:	ldrne	r3, [pc, #360]	; 8f5c <rb_sha256_crypt_r+0xf24>
    8df0:	strne	r3, [fp, #-456]	; 0xfffffe38
    8df4:	bne	80bc <rb_sha256_crypt_r+0x84>
    8df8:	ldr	r2, [pc, #440]	; 8fb8 <rb_sha256_crypt_r+0xf80>
    8dfc:	add	r3, r3, #1
    8e00:	cmp	r0, r2
    8e04:	str	r3, [fp, #-460]	; 0xfffffe34
    8e08:	movcc	r3, r0
    8e0c:	movcs	r3, r2
    8e10:	cmp	r3, #1000	; 0x3e8
    8e14:	movcc	r3, #1000	; 0x3e8
    8e18:	str	r3, [fp, #-456]	; 0xfffffe38
    8e1c:	mov	r3, #1
    8e20:	str	r3, [fp, #-480]	; 0xfffffe20
    8e24:	b	80bc <rb_sha256_crypt_r+0x84>
    8e28:	ldr	r2, [fp, #-456]	; 0xfffffe38
    8e2c:	ldr	r3, [pc, #392]	; 8fbc <rb_sha256_crypt_r+0xf84>
    8e30:	str	r2, [sp]
    8e34:	add	r3, pc, r3
    8e38:	ldr	r2, [pc, #384]	; 8fc0 <rb_sha256_crypt_r+0xf88>
    8e3c:	add	r3, r3, #1920	; 0x780
    8e40:	bic	r1, r5, r5, asr #31
    8e44:	mov	r0, r4
    8e48:	add	r3, r3, #12
    8e4c:	add	r2, pc, r2
    8e50:	bl	4bb0 <snprintf@plt>
    8e54:	add	r4, r4, r0
    8e58:	sub	r5, r5, r0
    8e5c:	b	8568 <rb_sha256_crypt_r+0x530>
    8e60:	ldr	r2, [fp, #-452]	; 0xfffffe3c
    8e64:	ldr	r1, [fp, #-460]	; 0xfffffe34
    8e68:	add	r3, r2, #18
    8e6c:	bic	r3, r3, #7
    8e70:	sub	sp, sp, r3
    8e74:	add	r0, sp, #12
    8e78:	bl	4808 <memcpy@plt>
    8e7c:	str	r0, [fp, #-460]	; 0xfffffe34
    8e80:	str	r0, [fp, #-488]	; 0xfffffe18
    8e84:	b	8104 <rb_sha256_crypt_r+0xcc>
    8e88:	add	r3, r0, #18
    8e8c:	bic	r3, r3, #7
    8e90:	sub	sp, sp, r3
    8e94:	mov	r1, r4
    8e98:	add	r0, sp, #12
    8e9c:	mov	r2, r8
    8ea0:	bl	4808 <memcpy@plt>
    8ea4:	mov	r4, r0
    8ea8:	str	r0, [fp, #-484]	; 0xfffffe1c
    8eac:	b	80f4 <rb_sha256_crypt_r+0xbc>
    8eb0:	bl	4ce8 <__errno_location@plt>
    8eb4:	mov	r3, #34	; 0x22
    8eb8:	mov	r4, #0
    8ebc:	str	r3, [r0]
    8ec0:	b	8c80 <rb_sha256_crypt_r+0xc48>
    8ec4:	mov	r2, r7
    8ec8:	mov	r1, r8
    8ecc:	mov	r0, r9
    8ed0:	bl	7810 <rb_sha256_process_bytes>
    8ed4:	cmp	r8, #0
    8ed8:	bne	8244 <rb_sha256_crypt_r+0x20c>
    8edc:	sub	r3, fp, #412	; 0x19c
    8ee0:	mov	r1, r9
    8ee4:	mov	r0, r7
    8ee8:	mov	r4, r3
    8eec:	str	r3, [fp, #-472]	; 0xfffffe28
    8ef0:	bl	79c4 <rb_sha256_finish_ctx>
    8ef4:	ldr	r3, [pc, #104]	; 8f64 <rb_sha256_crypt_r+0xf2c>
    8ef8:	mov	r1, r4
    8efc:	str	r3, [fp, #-200]	; 0xffffff38
    8f00:	ldr	r3, [pc, #100]	; 8f6c <rb_sha256_crypt_r+0xf34>
    8f04:	mov	r0, sl
    8f08:	str	r3, [fp, #-196]	; 0xffffff3c
    8f0c:	ldr	r3, [pc, #96]	; 8f74 <rb_sha256_crypt_r+0xf3c>
    8f10:	str	r6, [fp, #-208]	; 0xffffff30
    8f14:	str	r3, [fp, #-192]	; 0xffffff40
    8f18:	ldr	r3, [pc, #88]	; 8f78 <rb_sha256_crypt_r+0xf40>
    8f1c:	str	r5, [fp, #-204]	; 0xffffff34
    8f20:	str	r3, [fp, #-188]	; 0xffffff44
    8f24:	ldr	r3, [pc, #80]	; 8f7c <rb_sha256_crypt_r+0xf44>
    8f28:	str	r8, [fp, #-172]	; 0xffffff54
    8f2c:	str	r3, [fp, #-184]	; 0xffffff48
    8f30:	ldr	r3, [pc, #72]	; 8f80 <rb_sha256_crypt_r+0xf48>
    8f34:	str	r8, [fp, #-176]	; 0xffffff50
    8f38:	str	r3, [fp, #-180]	; 0xffffff4c
    8f3c:	str	r8, [fp, #-168]	; 0xffffff58
    8f40:	bl	79c4 <rb_sha256_finish_ctx>
    8f44:	add	r0, sp, #8
    8f48:	str	r0, [fp, #-448]	; 0xfffffe40
    8f4c:	mov	r2, r8
    8f50:	b	8370 <rb_sha256_crypt_r+0x338>
    8f54:	.word	0x000121a0
    8f58:	.word	0x00012168
    8f5c:	.word	0x00001388
    8f60:	.word	0x00012910
    8f64:	.word	0x3c6ef372
    8f68:	.word	0x6a09e667
    8f6c:	.word	0xa54ff53a
    8f70:	.word	0xbb67ae85
    8f74:	.word	0x510e527f
    8f78:	.word	0x9b05688c
    8f7c:	.word	0x1f83d9ab
    8f80:	.word	0x5be0cd19
    8f84:	.word	0xaaaaaaab
    8f88:	.word	0x24924925
    8f8c:	.word	0x00011cb8
    8f90:	.word	0x00011bf4
    8f94:	.word	0x00011b50
    8f98:	.word	0x00011aac
    8f9c:	.word	0x00011a08
    8fa0:	.word	0x00011964
    8fa4:	.word	0x000118c0
    8fa8:	.word	0x0001181c
    8fac:	.word	0x00011778
    8fb0:	.word	0x000116d4
    8fb4:	.word	0x00011630
    8fb8:	.word	0x3b9ac9ff
    8fbc:	.word	0x000113ac
    8fc0:	.word	0x00011b8c

00008fc4 <rb_sha512_crypt_r>:
    8fc4:	ldr	ip, [pc, #1156]	; 9450 <rb_sha512_crypt_r+0x48c>
    8fc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8fcc:	add	ip, pc, ip
    8fd0:	add	fp, sp, #32
    8fd4:	mov	r6, r0
    8fd8:	add	r0, ip, #2000	; 0x7d0
    8fdc:	sub	sp, sp, #884	; 0x374
    8fe0:	add	r0, r0, #8
    8fe4:	str	r2, [fp, #-880]	; 0xfffffc90
    8fe8:	mov	r2, #3
    8fec:	str	r3, [fp, #-896]	; 0xfffffc80
    8ff0:	mov	r4, r1
    8ff4:	str	r1, [fp, #-856]	; 0xfffffca8
    8ff8:	bl	4c10 <strncmp@plt>
    8ffc:	ldr	r1, [pc, #1104]	; 9454 <rb_sha512_crypt_r+0x490>
    9000:	mov	r2, #7
    9004:	add	r1, pc, r1
    9008:	add	r1, r1, #2000	; 0x7d0
    900c:	add	r1, r1, #12
    9010:	cmp	r0, #0
    9014:	addeq	r3, r4, #3
    9018:	streq	r3, [fp, #-856]	; 0xfffffca8
    901c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    9020:	bl	4c10 <strncmp@plt>
    9024:	subs	r3, r0, #0
    9028:	str	r3, [fp, #-892]	; 0xfffffc84
    902c:	beq	a9d0 <rb_sha512_crypt_r+0x1a0c>
    9030:	ldr	r3, [pc, #1056]	; 9458 <rb_sha512_crypt_r+0x494>
    9034:	str	r3, [fp, #-872]	; 0xfffffc98
    9038:	mov	r3, #0
    903c:	str	r3, [fp, #-892]	; 0xfffffc84
    9040:	sub	r3, fp, #380	; 0x17c
    9044:	str	r3, [fp, #-876]	; 0xfffffc94
    9048:	ldr	r1, [pc, #1036]	; 945c <rb_sha512_crypt_r+0x498>
    904c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    9050:	add	r1, pc, r1
    9054:	bl	4be0 <strcspn@plt>
    9058:	cmp	r0, #16
    905c:	movcc	r3, r0
    9060:	movcs	r3, #16
    9064:	mov	r0, r6
    9068:	str	r3, [fp, #-868]	; 0xfffffc9c
    906c:	bl	47e4 <strlen@plt>
    9070:	ands	r3, r6, #7
    9074:	streq	r3, [fp, #-900]	; 0xfffffc7c
    9078:	mov	sl, r0
    907c:	bne	a95c <rb_sha512_crypt_r+0x1998>
    9080:	ldr	r3, [fp, #-856]	; 0xfffffca8
    9084:	ands	r3, r3, #7
    9088:	streq	r3, [fp, #-904]	; 0xfffffc78
    908c:	bne	a934 <rb_sha512_crypt_r+0x1970>
    9090:	add	r3, pc, #888	; 0x378
    9094:	ldrd	r2, [r3]
    9098:	sub	r4, fp, #724	; 0x2d4
    909c:	mov	r8, #0
    90a0:	strd	r2, [r4]
    90a4:	add	r3, pc, #876	; 0x36c
    90a8:	ldrd	r2, [r3]
    90ac:	mov	r9, #0
    90b0:	cmp	sl, #127	; 0x7f
    90b4:	strd	r2, [r4, #8]
    90b8:	add	r3, pc, #864	; 0x360
    90bc:	ldrd	r2, [r3]
    90c0:	strd	r8, [r4, #72]	; 0x48
    90c4:	strd	r8, [r4, #64]	; 0x40
    90c8:	strd	r2, [r4, #16]
    90cc:	add	r3, pc, #852	; 0x354
    90d0:	ldrd	r2, [r3]
    90d4:	strd	r8, [r4, #80]	; 0x50
    90d8:	strd	r2, [r4, #24]
    90dc:	add	r3, pc, #844	; 0x34c
    90e0:	ldrd	r2, [r3]
    90e4:	strd	r2, [r4, #32]
    90e8:	add	r3, pc, #840	; 0x348
    90ec:	ldrd	r2, [r3]
    90f0:	strd	r2, [r4, #40]	; 0x28
    90f4:	add	r3, pc, #836	; 0x344
    90f8:	ldrd	r2, [r3]
    90fc:	strd	r2, [r4, #48]	; 0x30
    9100:	add	r3, pc, #832	; 0x340
    9104:	ldrd	r2, [r3]
    9108:	strd	r2, [r4, #56]	; 0x38
    910c:	bls	a748 <rb_sha512_crypt_r+0x1784>
    9110:	tst	r6, #7
    9114:	beq	aa34 <rb_sha512_crypt_r+0x1a70>
    9118:	cmp	sl, #128	; 0x80
    911c:	beq	abb8 <rb_sha512_crypt_r+0x1bf4>
    9120:	mov	r9, sl
    9124:	mov	r5, r6
    9128:	sub	r8, fp, #636	; 0x27c
    912c:	mov	r7, #128	; 0x80
    9130:	mov	r1, r5
    9134:	mov	r2, r7
    9138:	mov	r0, r8
    913c:	bl	4808 <memcpy@plt>
    9140:	sub	r9, r9, #128	; 0x80
    9144:	mov	r2, r4
    9148:	mov	r1, r7
    914c:	bl	6490 <rb_sha512_process_block>
    9150:	cmp	r9, #128	; 0x80
    9154:	add	r5, r5, #128	; 0x80
    9158:	bhi	9130 <rb_sha512_crypt_r+0x16c>
    915c:	sub	r2, sl, #129	; 0x81
    9160:	bic	r1, r2, #127	; 0x7f
    9164:	bic	r3, r2, #127	; 0x7f
    9168:	add	r1, r1, #128	; 0x80
    916c:	sub	r2, sl, #128	; 0x80
    9170:	add	r1, r6, r1
    9174:	sub	r2, r2, r3
    9178:	ldr	r5, [r4, #80]	; 0x50
    917c:	add	r0, r5, #88	; 0x58
    9180:	add	r0, r4, r0
    9184:	add	r5, r5, r2
    9188:	bl	4808 <memcpy@plt>
    918c:	cmp	r5, #127	; 0x7f
    9190:	bhi	aaf8 <rb_sha512_crypt_r+0x1b34>
    9194:	mov	r3, #0
    9198:	mov	r2, r4
    919c:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    91a0:	ldr	r0, [fp, #-856]	; 0xfffffca8
    91a4:	str	r5, [r4, #80]	; 0x50
    91a8:	str	r3, [r4, #84]	; 0x54
    91ac:	bl	7adc <rb_sha512_process_bytes>
    91b0:	add	r3, pc, #600	; 0x258
    91b4:	ldrd	r2, [r3]
    91b8:	sub	r5, fp, #372	; 0x174
    91bc:	add	r1, pc, #596	; 0x254
    91c0:	ldrd	r0, [r1]
    91c4:	strd	r2, [r5, #-8]
    91c8:	add	r3, pc, #592	; 0x250
    91cc:	ldrd	r2, [r3]
    91d0:	strd	r0, [r5]
    91d4:	add	r1, pc, #588	; 0x24c
    91d8:	ldrd	r0, [r1]
    91dc:	strd	r2, [r5, #8]
    91e0:	add	r3, pc, #584	; 0x248
    91e4:	ldrd	r2, [r3]
    91e8:	strd	r0, [r5, #16]
    91ec:	add	r1, pc, #580	; 0x244
    91f0:	ldrd	r0, [r1]
    91f4:	strd	r2, [r5, #24]
    91f8:	add	r3, pc, #576	; 0x240
    91fc:	ldrd	r2, [r3]
    9200:	strd	r0, [r5, #32]
    9204:	add	r1, pc, #572	; 0x23c
    9208:	ldrd	r0, [r1]
    920c:	strd	r2, [r5, #40]	; 0x28
    9210:	mov	r2, #0
    9214:	mov	r3, #0
    9218:	cmp	sl, #127	; 0x7f
    921c:	strd	r0, [r5, #48]	; 0x30
    9220:	strd	r2, [r5, #64]	; 0x40
    9224:	strd	r2, [r5, #56]	; 0x38
    9228:	strd	r2, [r5, #72]	; 0x48
    922c:	bls	a914 <rb_sha512_crypt_r+0x1950>
    9230:	tst	r6, #7
    9234:	beq	aad4 <rb_sha512_crypt_r+0x1b10>
    9238:	cmp	sl, #128	; 0x80
    923c:	bls	abd4 <rb_sha512_crypt_r+0x1c10>
    9240:	mov	r9, sl
    9244:	sub	r3, fp, #292	; 0x124
    9248:	str	sl, [fp, #-860]	; 0xfffffca4
    924c:	ldr	sl, [fp, #-876]	; 0xfffffc94
    9250:	str	r4, [fp, #-864]	; 0xfffffca0
    9254:	mov	r7, r6
    9258:	mov	r4, r9
    925c:	mov	r8, #128	; 0x80
    9260:	mov	r9, r3
    9264:	mov	r1, r7
    9268:	mov	r2, r8
    926c:	mov	r0, r9
    9270:	bl	4808 <memcpy@plt>
    9274:	sub	r4, r4, #128	; 0x80
    9278:	mov	r2, sl
    927c:	mov	r1, r8
    9280:	bl	6490 <rb_sha512_process_block>
    9284:	cmp	r4, #128	; 0x80
    9288:	add	r7, r7, #128	; 0x80
    928c:	bhi	9264 <rb_sha512_crypt_r+0x2a0>
    9290:	ldr	sl, [fp, #-860]	; 0xfffffca4
    9294:	ldr	r4, [fp, #-864]	; 0xfffffca0
    9298:	sub	r2, sl, #129	; 0x81
    929c:	bic	r1, r2, #127	; 0x7f
    92a0:	bic	r3, r2, #127	; 0x7f
    92a4:	add	r1, r1, #128	; 0x80
    92a8:	sub	r2, sl, #128	; 0x80
    92ac:	add	r1, r6, r1
    92b0:	sub	r2, r2, r3
    92b4:	ldr	r7, [r5, #72]	; 0x48
    92b8:	ldr	r3, [fp, #-876]	; 0xfffffc94
    92bc:	add	r0, r7, #88	; 0x58
    92c0:	add	r0, r3, r0
    92c4:	add	r7, r7, r2
    92c8:	bl	4808 <memcpy@plt>
    92cc:	cmp	r7, #127	; 0x7f
    92d0:	bhi	ab88 <rb_sha512_crypt_r+0x1bc4>
    92d4:	mov	r3, #0
    92d8:	str	r7, [r5, #72]	; 0x48
    92dc:	str	r3, [r5, #76]	; 0x4c
    92e0:	ldr	r7, [fp, #-876]	; 0xfffffc94
    92e4:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    92e8:	mov	r2, r7
    92ec:	ldr	r0, [fp, #-856]	; 0xfffffca8
    92f0:	bl	7adc <rb_sha512_process_bytes>
    92f4:	sub	r9, fp, #852	; 0x354
    92f8:	mov	r2, r7
    92fc:	mov	r1, sl
    9300:	mov	r0, r6
    9304:	bl	7adc <rb_sha512_process_bytes>
    9308:	mov	r1, r9
    930c:	mov	r0, r7
    9310:	bl	7c78 <rb_sha512_finish_ctx>
    9314:	cmp	sl, #64	; 0x40
    9318:	bls	a804 <rb_sha512_crypt_r+0x1840>
    931c:	mov	r8, sl
    9320:	mov	r7, #64	; 0x40
    9324:	sub	r8, r8, #64	; 0x40
    9328:	mov	r2, r4
    932c:	mov	r1, r7
    9330:	mov	r0, r9
    9334:	bl	7adc <rb_sha512_process_bytes>
    9338:	cmp	r8, #64	; 0x40
    933c:	bhi	9324 <rb_sha512_crypt_r+0x360>
    9340:	sub	r3, sl, #65	; 0x41
    9344:	bic	r3, r3, #63	; 0x3f
    9348:	sub	r1, sl, #64	; 0x40
    934c:	sub	r1, r1, r3
    9350:	mov	r2, r4
    9354:	mov	r0, r9
    9358:	bl	7adc <rb_sha512_process_bytes>
    935c:	mov	r8, sl
    9360:	mov	r7, #64	; 0x40
    9364:	tst	r8, #1
    9368:	mov	r2, r4
    936c:	mov	r1, r7
    9370:	mov	r0, r9
    9374:	moveq	r2, r4
    9378:	moveq	r1, sl
    937c:	moveq	r0, r6
    9380:	bl	7adc <rb_sha512_process_bytes>
    9384:	lsrs	r8, r8, #1
    9388:	bne	9364 <rb_sha512_crypt_r+0x3a0>
    938c:	mov	r1, r9
    9390:	mov	r0, r4
    9394:	bl	7c78 <rb_sha512_finish_ctx>
    9398:	add	r3, pc, #112	; 0x70
    939c:	ldrd	r2, [r3]
    93a0:	add	r1, pc, #112	; 0x70
    93a4:	ldrd	r0, [r1]
    93a8:	ldr	r8, [fp, #-876]	; 0xfffffc94
    93ac:	strd	r2, [r5, #-8]
    93b0:	add	r3, pc, #104	; 0x68
    93b4:	ldrd	r2, [r3]
    93b8:	strd	r0, [r5]
    93bc:	add	r1, pc, #100	; 0x64
    93c0:	ldrd	r0, [r1]
    93c4:	strd	r2, [r5, #8]
    93c8:	add	r3, pc, #96	; 0x60
    93cc:	ldrd	r2, [r3]
    93d0:	strd	r0, [r5, #16]
    93d4:	add	r1, pc, #92	; 0x5c
    93d8:	ldrd	r0, [r1]
    93dc:	strd	r2, [r5, #24]
    93e0:	add	r3, pc, #88	; 0x58
    93e4:	ldrd	r2, [r3]
    93e8:	strd	r0, [r5, #32]
    93ec:	add	r1, pc, #84	; 0x54
    93f0:	ldrd	r0, [r1]
    93f4:	strd	r2, [r5, #40]	; 0x28
    93f8:	mov	r7, #0
    93fc:	mov	r2, #0
    9400:	mov	r3, #0
    9404:	strd	r0, [r5, #48]	; 0x30
    9408:	b	9460 <rb_sha512_crypt_r+0x49c>
    940c:	nop			; (mov r0, r0)
    9410:	.word	0xf3bcc908
    9414:	.word	0x6a09e667
    9418:	.word	0x84caa73b
    941c:	.word	0xbb67ae85
    9420:	.word	0xfe94f82b
    9424:	.word	0x3c6ef372
    9428:	.word	0x5f1d36f1
    942c:	.word	0xa54ff53a
    9430:	.word	0xade682d1
    9434:	.word	0x510e527f
    9438:	.word	0x2b3e6c1f
    943c:	.word	0x9b05688c
    9440:	.word	0xfb41bd6b
    9444:	.word	0x1f83d9ab
    9448:	.word	0x137e2179
    944c:	.word	0x5be0cd19
    9450:	.word	0x00011214
    9454:	.word	0x000111dc
    9458:	.word	0x00001388
    945c:	.word	0x00011984
    9460:	strd	r2, [r5, #64]	; 0x40
    9464:	strd	r2, [r5, #56]	; 0x38
    9468:	strd	r2, [r5, #72]	; 0x48
    946c:	add	r7, r7, #1
    9470:	mov	r2, r8
    9474:	mov	r1, sl
    9478:	mov	r0, r6
    947c:	bl	7adc <rb_sha512_process_bytes>
    9480:	cmp	sl, r7
    9484:	bne	946c <rb_sha512_crypt_r+0x4a8>
    9488:	sub	r3, fp, #788	; 0x314
    948c:	mov	r1, r3
    9490:	ldr	r0, [fp, #-876]	; 0xfffffc94
    9494:	str	r3, [fp, #-888]	; 0xfffffc88
    9498:	bl	7c78 <rb_sha512_finish_ctx>
    949c:	add	r3, sl, #14
    94a0:	bic	r3, r3, #7
    94a4:	sub	sp, sp, r3
    94a8:	cmp	sl, #63	; 0x3f
    94ac:	add	r8, sp, #8
    94b0:	movls	r0, r8
    94b4:	movls	r2, sl
    94b8:	bls	951c <rb_sha512_crypt_r+0x558>
    94bc:	mov	r6, sl
    94c0:	str	sl, [fp, #-860]	; 0xfffffca4
    94c4:	ldr	sl, [fp, #-888]	; 0xfffffc88
    94c8:	add	r7, r8, #64	; 0x40
    94cc:	mov	lr, sl
    94d0:	sub	ip, r7, #64	; 0x40
    94d4:	ldm	lr!, {r0, r1, r2, r3}
    94d8:	sub	r6, r6, #64	; 0x40
    94dc:	cmp	r6, #63	; 0x3f
    94e0:	add	r7, r7, #64	; 0x40
    94e4:	stmia	ip!, {r0, r1, r2, r3}
    94e8:	ldm	lr!, {r0, r1, r2, r3}
    94ec:	stmia	ip!, {r0, r1, r2, r3}
    94f0:	ldm	lr!, {r0, r1, r2, r3}
    94f4:	stmia	ip!, {r0, r1, r2, r3}
    94f8:	ldm	lr, {r0, r1, r2, r3}
    94fc:	stm	ip, {r0, r1, r2, r3}
    9500:	bhi	94cc <rb_sha512_crypt_r+0x508>
    9504:	ldr	sl, [fp, #-860]	; 0xfffffca4
    9508:	sub	r0, sl, #64	; 0x40
    950c:	bic	r0, r0, #63	; 0x3f
    9510:	add	r0, r0, #64	; 0x40
    9514:	add	r0, r8, r0
    9518:	and	r2, sl, #63	; 0x3f
    951c:	ldr	r1, [fp, #-888]	; 0xfffffc88
    9520:	bl	4808 <memcpy@plt>
    9524:	add	r1, pc, #924	; 0x39c
    9528:	ldrd	r0, [r1]
    952c:	add	r3, pc, #924	; 0x39c
    9530:	ldrd	r2, [r3]
    9534:	add	r7, pc, #924	; 0x39c
    9538:	ldrd	r6, [r7]
    953c:	strd	r0, [r5]
    9540:	add	r1, pc, #920	; 0x398
    9544:	ldrd	r0, [r1]
    9548:	strd	r2, [r5, #8]
    954c:	add	r3, pc, #916	; 0x394
    9550:	ldrd	r2, [r3]
    9554:	strd	r0, [r5, #16]
    9558:	add	r1, pc, #912	; 0x390
    955c:	ldrd	r0, [r1]
    9560:	strd	r2, [r5, #24]
    9564:	add	r3, pc, #908	; 0x38c
    9568:	ldrd	r2, [r3]
    956c:	strd	r0, [r5, #32]
    9570:	add	r1, pc, #904	; 0x388
    9574:	ldrd	r0, [r1]
    9578:	strd	r2, [r5, #40]	; 0x28
    957c:	mov	r2, #0
    9580:	mov	r3, #0
    9584:	strd	r6, [r5, #-8]
    9588:	strd	r0, [r5, #48]	; 0x30
    958c:	strd	r2, [r5, #64]	; 0x40
    9590:	strd	r2, [r5, #56]	; 0x38
    9594:	strd	r2, [r5, #72]	; 0x48
    9598:	mov	r5, #0
    959c:	str	r4, [fp, #-860]	; 0xfffffca4
    95a0:	ldr	r6, [fp, #-868]	; 0xfffffc9c
    95a4:	mov	r4, r5
    95a8:	ldr	r7, [fp, #-856]	; 0xfffffca8
    95ac:	ldr	r5, [fp, #-876]	; 0xfffffc94
    95b0:	mov	r2, r5
    95b4:	mov	r1, r6
    95b8:	mov	r0, r7
    95bc:	bl	7adc <rb_sha512_process_bytes>
    95c0:	ldrb	r2, [fp, #-852]	; 0xfffffcac
    95c4:	add	r4, r4, #1
    95c8:	add	r2, r2, #16
    95cc:	cmp	r2, r4
    95d0:	bhi	95b0 <rb_sha512_crypt_r+0x5ec>
    95d4:	ldr	r5, [fp, #-888]	; 0xfffffc88
    95d8:	ldr	r0, [fp, #-876]	; 0xfffffc94
    95dc:	mov	r1, r5
    95e0:	ldr	r4, [fp, #-860]	; 0xfffffca4
    95e4:	bl	7c78 <rb_sha512_finish_ctx>
    95e8:	ldr	r2, [fp, #-868]	; 0xfffffc9c
    95ec:	mov	r1, r5
    95f0:	add	r3, r2, #14
    95f4:	bic	r3, r3, #7
    95f8:	sub	sp, sp, r3
    95fc:	add	r3, sp, #8
    9600:	mov	r0, r3
    9604:	str	r3, [fp, #-884]	; 0xfffffc8c
    9608:	mov	r5, #0
    960c:	bl	4808 <memcpy@plt>
    9610:	str	sl, [fp, #-860]	; 0xfffffca4
    9614:	mov	sl, r9
    9618:	str	r8, [fp, #-864]	; 0xfffffca0
    961c:	add	r9, pc, #676	; 0x2a4
    9620:	ldrd	r8, [r9]
    9624:	add	r7, pc, #684	; 0x2ac
    9628:	ldrd	r6, [r7]
    962c:	mov	r2, r4
    9630:	strd	r8, [r4, #8]
    9634:	add	r9, pc, #684	; 0x2ac
    9638:	ldrd	r8, [r9]
    963c:	strd	r6, [r4]
    9640:	add	r7, pc, #664	; 0x298
    9644:	ldrd	r6, [r7]
    9648:	strd	r8, [r4, #32]
    964c:	add	r9, pc, #668	; 0x29c
    9650:	ldrd	r8, [r9]
    9654:	strd	r6, [r4, #24]
    9658:	add	r7, pc, #664	; 0x298
    965c:	ldrd	r6, [r7]
    9660:	strd	r8, [r4, #40]	; 0x28
    9664:	add	r9, pc, #660	; 0x294
    9668:	ldrd	r8, [r9]
    966c:	strd	r6, [r4, #48]	; 0x30
    9670:	mov	r6, #0
    9674:	mov	r7, #0
    9678:	strd	r8, [r4, #56]	; 0x38
    967c:	strd	r6, [r4, #72]	; 0x48
    9680:	strd	r6, [r4, #64]	; 0x40
    9684:	strd	r6, [r4, #80]	; 0x50
    9688:	add	r9, pc, #576	; 0x240
    968c:	ldrd	r8, [r9]
    9690:	ands	r6, r5, #1
    9694:	mov	r1, #64	; 0x40
    9698:	mov	r0, sl
    969c:	ldrne	r1, [fp, #-860]	; 0xfffffca4
    96a0:	ldrne	r0, [fp, #-864]	; 0xfffffca0
    96a4:	strd	r8, [r4, #16]
    96a8:	bl	7adc <rb_sha512_process_bytes>
    96ac:	ldr	r3, [pc, #596]	; 9908 <rb_sha512_crypt_r+0x944>
    96b0:	umull	r2, r3, r3, r5
    96b4:	lsr	r3, r3, #1
    96b8:	add	r3, r3, r3, lsl #1
    96bc:	cmp	r5, r3
    96c0:	bne	a900 <rb_sha512_crypt_r+0x193c>
    96c4:	ldr	r3, [pc, #576]	; 990c <rb_sha512_crypt_r+0x948>
    96c8:	umull	r2, r3, r3, r5
    96cc:	sub	r2, r5, r3
    96d0:	add	r3, r3, r2, lsr #1
    96d4:	lsr	r3, r3, #2
    96d8:	rsb	r3, r3, r3, lsl #3
    96dc:	cmp	r5, r3
    96e0:	bne	a8ec <rb_sha512_crypt_r+0x1928>
    96e4:	cmp	r6, #0
    96e8:	mov	r2, r4
    96ec:	mov	r1, #64	; 0x40
    96f0:	mov	r0, sl
    96f4:	beq	a8bc <rb_sha512_crypt_r+0x18f8>
    96f8:	bl	7adc <rb_sha512_process_bytes>
    96fc:	mov	r1, sl
    9700:	mov	r0, r4
    9704:	bl	7c78 <rb_sha512_finish_ctx>
    9708:	ldr	r3, [fp, #-872]	; 0xfffffc98
    970c:	add	r5, r5, #1
    9710:	cmp	r3, r5
    9714:	bne	961c <rb_sha512_crypt_r+0x658>
    9718:	ldr	r3, [fp, #-896]	; 0xfffffc80
    971c:	ldr	r5, [fp, #-880]	; 0xfffffc90
    9720:	mov	r1, #0
    9724:	bic	r6, r3, r3, asr #31
    9728:	mov	r0, r5
    972c:	mov	r2, r6
    9730:	mov	r9, sl
    9734:	ldr	r8, [fp, #-864]	; 0xfffffca0
    9738:	ldr	sl, [fp, #-860]	; 0xfffffca4
    973c:	bl	4628 <memset@plt>
    9740:	ldr	r1, [pc, #456]	; 9910 <rb_sha512_crypt_r+0x94c>
    9744:	mov	r2, r6
    9748:	add	r1, pc, r1
    974c:	add	r1, r1, #2000	; 0x7d0
    9750:	add	r1, r1, #8
    9754:	mov	r0, r5
    9758:	bl	4574 <strncpy@plt>
    975c:	mov	r0, r5
    9760:	mov	r1, #0
    9764:	bl	45b0 <strchr@plt>
    9768:	subs	r5, r0, #0
    976c:	ldreq	r3, [fp, #-880]	; 0xfffffc90
    9770:	addeq	r5, r3, r6
    9774:	ldr	r3, [fp, #-892]	; 0xfffffc84
    9778:	cmp	r3, #0
    977c:	ldr	r3, [fp, #-896]	; 0xfffffc80
    9780:	sub	r6, r3, #3
    9784:	bne	ab24 <rb_sha512_crypt_r+0x1b60>
    9788:	ldr	r3, [fp, #-868]	; 0xfffffc9c
    978c:	bic	r7, r6, r6, asr #31
    9790:	cmp	r7, r3
    9794:	movcs	r7, r3
    9798:	mov	r2, r7
    979c:	mov	r1, #0
    97a0:	mov	r0, r5
    97a4:	bl	4628 <memset@plt>
    97a8:	mov	r2, r7
    97ac:	ldr	r1, [fp, #-856]	; 0xfffffca8
    97b0:	mov	r0, r5
    97b4:	bl	4574 <strncpy@plt>
    97b8:	mov	r1, #0
    97bc:	ldr	r0, [fp, #-880]	; 0xfffffc90
    97c0:	bl	45b0 <strchr@plt>
    97c4:	sub	r6, r6, r7
    97c8:	cmp	r0, #0
    97cc:	ldreq	r3, [fp, #-880]	; 0xfffffc90
    97d0:	ldreq	r2, [fp, #-868]	; 0xfffffc9c
    97d4:	addeq	r0, r3, r2
    97d8:	cmp	r6, #0
    97dc:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    97e0:	ldrb	r3, [fp, #-831]	; 0xfffffcc1
    97e4:	ldrb	r1, [fp, #-852]	; 0xfffffcac
    97e8:	ldrb	r2, [fp, #-810]	; 0xfffffcd6
    97ec:	cmp	r6, #1
    97f0:	lsl	r3, r3, #8
    97f4:	orr	r3, r3, r1, lsl #16
    97f8:	mov	r1, #36	; 0x24
    97fc:	orr	r3, r3, r2
    9800:	strb	r1, [r0]
    9804:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    9808:	ldr	r2, [pc, #260]	; 9914 <rb_sha512_crypt_r+0x950>
    980c:	and	r1, r3, #63	; 0x3f
    9810:	add	r2, pc, r2
    9814:	add	r1, r2, r1
    9818:	sub	lr, r6, #2
    981c:	ldrb	ip, [r1, #1940]	; 0x794
    9820:	cmp	lr, #0
    9824:	add	r1, r0, #2
    9828:	strb	ip, [r0, #1]
    982c:	lsr	ip, r3, #6
    9830:	ble	988c <rb_sha512_crypt_r+0x8c8>
    9834:	and	ip, ip, #63	; 0x3f
    9838:	add	ip, r2, ip
    983c:	sub	lr, r6, #3
    9840:	ldrb	ip, [ip, #1940]	; 0x794
    9844:	cmp	lr, #0
    9848:	add	r1, r0, #3
    984c:	strb	ip, [r0, #2]
    9850:	lsr	ip, r3, #12
    9854:	ble	988c <rb_sha512_crypt_r+0x8c8>
    9858:	and	ip, ip, #63	; 0x3f
    985c:	sub	lr, r6, #4
    9860:	add	ip, r2, ip
    9864:	cmp	lr, #0
    9868:	lsr	r3, r3, #18
    986c:	ldrb	r1, [ip, #1940]	; 0x794
    9870:	addgt	r3, r2, r3
    9874:	subgt	lr, r6, #5
    9878:	ldrbgt	r3, [r3, #1940]	; 0x794
    987c:	strb	r1, [r0, #3]
    9880:	add	r1, r0, #4
    9884:	addgt	r1, r0, #5
    9888:	strbgt	r3, [r0, #4]
    988c:	ldrb	r3, [fp, #-809]	; 0xfffffcd7
    9890:	ldrb	r0, [fp, #-830]	; 0xfffffcc2
    9894:	ldrb	r2, [fp, #-851]	; 0xfffffcad
    9898:	cmp	lr, #0
    989c:	lsl	r3, r3, #8
    98a0:	orr	r3, r3, r0, lsl #16
    98a4:	orr	r3, r3, r2
    98a8:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    98ac:	ldr	r0, [pc, #100]	; 9918 <rb_sha512_crypt_r+0x954>
    98b0:	and	r2, r3, #63	; 0x3f
    98b4:	add	r0, pc, r0
    98b8:	add	r2, r0, r2
    98bc:	sub	ip, lr, #1
    98c0:	b	9968 <rb_sha512_crypt_r+0x9a4>
    98c4:	nop			; (mov r0, r0)
    98c8:	.word	0x84caa73b
    98cc:	.word	0xbb67ae85
    98d0:	.word	0xfe94f82b
    98d4:	.word	0x3c6ef372
    98d8:	.word	0xf3bcc908
    98dc:	.word	0x6a09e667
    98e0:	.word	0x5f1d36f1
    98e4:	.word	0xa54ff53a
    98e8:	.word	0xade682d1
    98ec:	.word	0x510e527f
    98f0:	.word	0x2b3e6c1f
    98f4:	.word	0x9b05688c
    98f8:	.word	0xfb41bd6b
    98fc:	.word	0x1f83d9ab
    9900:	.word	0x137e2179
    9904:	.word	0x5be0cd19
    9908:	.word	0xaaaaaaab
    990c:	.word	0x24924925
    9910:	.word	0x00010a98
    9914:	.word	0x000109d0
    9918:	.word	0x0001092c
    991c:	.word	0x000107e0
    9920:	.word	0x0001073c
    9924:	.word	0x00010698
    9928:	.word	0x000105f4
    992c:	.word	0x00010550
    9930:	.word	0x000104ac
    9934:	.word	0x00010408
    9938:	.word	0x00010364
    993c:	.word	0x000102c0
    9940:	.word	0x0001021c
    9944:	.word	0x00010178
    9948:	.word	0x000100d4
    994c:	.word	0x00010030
    9950:	.word	0x0000ff8c
    9954:	.word	0x0000fee8
    9958:	.word	0x0000fe44
    995c:	.word	0x0000fda0
    9960:	.word	0x0000fcfc
    9964:	.word	0x0000fc58
    9968:	ldrb	r5, [r2, #1940]	; 0x794
    996c:	cmp	ip, #0
    9970:	add	r2, r1, #1
    9974:	strb	r5, [r1]
    9978:	lsr	r5, r3, #6
    997c:	ble	99d8 <rb_sha512_crypt_r+0xa14>
    9980:	and	r5, r5, #63	; 0x3f
    9984:	add	r5, r0, r5
    9988:	sub	ip, lr, #2
    998c:	ldrb	r5, [r5, #1940]	; 0x794
    9990:	cmp	ip, #0
    9994:	add	r2, r1, #2
    9998:	strb	r5, [r1, #1]
    999c:	lsr	r5, r3, #12
    99a0:	ble	99d8 <rb_sha512_crypt_r+0xa14>
    99a4:	and	r5, r5, #63	; 0x3f
    99a8:	sub	ip, lr, #3
    99ac:	add	r5, r0, r5
    99b0:	cmp	ip, #0
    99b4:	lsr	r3, r3, #18
    99b8:	ldrb	r2, [r5, #1940]	; 0x794
    99bc:	addgt	r3, r0, r3
    99c0:	subgt	ip, lr, #4
    99c4:	ldrbgt	r3, [r3, #1940]	; 0x794
    99c8:	strb	r2, [r1, #2]
    99cc:	add	r2, r1, #3
    99d0:	addgt	r2, r1, #4
    99d4:	strbgt	r3, [r1, #3]
    99d8:	ldrb	r3, [fp, #-850]	; 0xfffffcae
    99dc:	ldrb	r0, [fp, #-808]	; 0xfffffcd8
    99e0:	ldrb	r1, [fp, #-829]	; 0xfffffcc3
    99e4:	cmp	ip, #0
    99e8:	lsl	r3, r3, #8
    99ec:	orr	r3, r3, r0, lsl #16
    99f0:	orr	r3, r3, r1
    99f4:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    99f8:	ldr	lr, [pc, #-228]	; 991c <rb_sha512_crypt_r+0x958>
    99fc:	and	r1, r3, #63	; 0x3f
    9a00:	add	lr, pc, lr
    9a04:	add	r1, lr, r1
    9a08:	sub	r0, ip, #1
    9a0c:	ldrb	r5, [r1, #1940]	; 0x794
    9a10:	cmp	r0, #0
    9a14:	add	r1, r2, #1
    9a18:	strb	r5, [r2]
    9a1c:	lsr	r5, r3, #6
    9a20:	ble	9a7c <rb_sha512_crypt_r+0xab8>
    9a24:	and	r5, r5, #63	; 0x3f
    9a28:	add	r5, lr, r5
    9a2c:	sub	r0, ip, #2
    9a30:	ldrb	r5, [r5, #1940]	; 0x794
    9a34:	cmp	r0, #0
    9a38:	add	r1, r2, #2
    9a3c:	strb	r5, [r2, #1]
    9a40:	lsr	r5, r3, #12
    9a44:	ble	9a7c <rb_sha512_crypt_r+0xab8>
    9a48:	and	r5, r5, #63	; 0x3f
    9a4c:	sub	r0, ip, #3
    9a50:	add	r5, lr, r5
    9a54:	cmp	r0, #0
    9a58:	lsr	r3, r3, #18
    9a5c:	ldrb	r1, [r5, #1940]	; 0x794
    9a60:	addgt	r3, lr, r3
    9a64:	subgt	r0, ip, #4
    9a68:	ldrbgt	r3, [r3, #1940]	; 0x794
    9a6c:	strb	r1, [r2, #2]
    9a70:	add	r1, r2, #3
    9a74:	addgt	r1, r2, #4
    9a78:	strbgt	r3, [r2, #3]
    9a7c:	ldrb	r3, [fp, #-828]	; 0xfffffcc4
    9a80:	ldrb	ip, [fp, #-849]	; 0xfffffcaf
    9a84:	ldrb	r2, [fp, #-807]	; 0xfffffcd9
    9a88:	cmp	r0, #0
    9a8c:	lsl	r3, r3, #8
    9a90:	orr	r3, r3, ip, lsl #16
    9a94:	orr	r3, r3, r2
    9a98:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    9a9c:	ldr	lr, [pc, #-388]	; 9920 <rb_sha512_crypt_r+0x95c>
    9aa0:	and	r2, r3, #63	; 0x3f
    9aa4:	add	lr, pc, lr
    9aa8:	add	r2, lr, r2
    9aac:	sub	ip, r0, #1
    9ab0:	ldrb	r5, [r2, #1940]	; 0x794
    9ab4:	cmp	ip, #0
    9ab8:	add	r2, r1, #1
    9abc:	strb	r5, [r1]
    9ac0:	lsr	r5, r3, #6
    9ac4:	ble	9b20 <rb_sha512_crypt_r+0xb5c>
    9ac8:	and	r5, r5, #63	; 0x3f
    9acc:	add	r5, lr, r5
    9ad0:	sub	ip, r0, #2
    9ad4:	ldrb	r5, [r5, #1940]	; 0x794
    9ad8:	cmp	ip, #0
    9adc:	add	r2, r1, #2
    9ae0:	strb	r5, [r1, #1]
    9ae4:	lsr	r5, r3, #12
    9ae8:	ble	9b20 <rb_sha512_crypt_r+0xb5c>
    9aec:	and	r5, r5, #63	; 0x3f
    9af0:	sub	ip, r0, #3
    9af4:	add	r5, lr, r5
    9af8:	cmp	ip, #0
    9afc:	lsr	r3, r3, #18
    9b00:	ldrb	r2, [r5, #1940]	; 0x794
    9b04:	addgt	r3, lr, r3
    9b08:	subgt	ip, r0, #4
    9b0c:	ldrbgt	r3, [r3, #1940]	; 0x794
    9b10:	strb	r2, [r1, #2]
    9b14:	add	r2, r1, #3
    9b18:	addgt	r2, r1, #4
    9b1c:	strbgt	r3, [r1, #3]
    9b20:	ldrb	r3, [fp, #-806]	; 0xfffffcda
    9b24:	ldrb	r0, [fp, #-827]	; 0xfffffcc5
    9b28:	ldrb	r1, [fp, #-848]	; 0xfffffcb0
    9b2c:	cmp	ip, #0
    9b30:	lsl	r3, r3, #8
    9b34:	orr	r3, r3, r0, lsl #16
    9b38:	orr	r3, r3, r1
    9b3c:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    9b40:	ldr	lr, [pc, #-548]	; 9924 <rb_sha512_crypt_r+0x960>
    9b44:	and	r1, r3, #63	; 0x3f
    9b48:	add	lr, pc, lr
    9b4c:	add	r1, lr, r1
    9b50:	sub	r0, ip, #1
    9b54:	ldrb	r5, [r1, #1940]	; 0x794
    9b58:	cmp	r0, #0
    9b5c:	add	r1, r2, #1
    9b60:	strb	r5, [r2]
    9b64:	lsr	r5, r3, #6
    9b68:	ble	9bc4 <rb_sha512_crypt_r+0xc00>
    9b6c:	and	r5, r5, #63	; 0x3f
    9b70:	add	r5, lr, r5
    9b74:	sub	r0, ip, #2
    9b78:	ldrb	r5, [r5, #1940]	; 0x794
    9b7c:	cmp	r0, #0
    9b80:	add	r1, r2, #2
    9b84:	strb	r5, [r2, #1]
    9b88:	lsr	r5, r3, #12
    9b8c:	ble	9bc4 <rb_sha512_crypt_r+0xc00>
    9b90:	and	r5, r5, #63	; 0x3f
    9b94:	sub	r0, ip, #3
    9b98:	add	r5, lr, r5
    9b9c:	cmp	r0, #0
    9ba0:	lsr	r3, r3, #18
    9ba4:	ldrb	r1, [r5, #1940]	; 0x794
    9ba8:	addgt	r3, lr, r3
    9bac:	subgt	r0, ip, #4
    9bb0:	ldrbgt	r3, [r3, #1940]	; 0x794
    9bb4:	strb	r1, [r2, #2]
    9bb8:	add	r1, r2, #3
    9bbc:	addgt	r1, r2, #4
    9bc0:	strbgt	r3, [r2, #3]
    9bc4:	ldrb	r3, [fp, #-847]	; 0xfffffcb1
    9bc8:	ldrb	ip, [fp, #-805]	; 0xfffffcdb
    9bcc:	ldrb	r2, [fp, #-826]	; 0xfffffcc6
    9bd0:	cmp	r0, #0
    9bd4:	lsl	r3, r3, #8
    9bd8:	orr	r3, r3, ip, lsl #16
    9bdc:	orr	r3, r3, r2
    9be0:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    9be4:	ldr	lr, [pc, #-708]	; 9928 <rb_sha512_crypt_r+0x964>
    9be8:	and	r2, r3, #63	; 0x3f
    9bec:	add	lr, pc, lr
    9bf0:	add	r2, lr, r2
    9bf4:	sub	ip, r0, #1
    9bf8:	ldrb	r5, [r2, #1940]	; 0x794
    9bfc:	cmp	ip, #0
    9c00:	add	r2, r1, #1
    9c04:	strb	r5, [r1]
    9c08:	lsr	r5, r3, #6
    9c0c:	ble	9c68 <rb_sha512_crypt_r+0xca4>
    9c10:	and	r5, r5, #63	; 0x3f
    9c14:	add	r5, lr, r5
    9c18:	sub	ip, r0, #2
    9c1c:	ldrb	r5, [r5, #1940]	; 0x794
    9c20:	cmp	ip, #0
    9c24:	add	r2, r1, #2
    9c28:	strb	r5, [r1, #1]
    9c2c:	lsr	r5, r3, #12
    9c30:	ble	9c68 <rb_sha512_crypt_r+0xca4>
    9c34:	and	r5, r5, #63	; 0x3f
    9c38:	sub	ip, r0, #3
    9c3c:	add	r5, lr, r5
    9c40:	cmp	ip, #0
    9c44:	lsr	r3, r3, #18
    9c48:	ldrb	r2, [r5, #1940]	; 0x794
    9c4c:	addgt	r3, lr, r3
    9c50:	subgt	ip, r0, #4
    9c54:	ldrbgt	r3, [r3, #1940]	; 0x794
    9c58:	strb	r2, [r1, #2]
    9c5c:	add	r2, r1, #3
    9c60:	addgt	r2, r1, #4
    9c64:	strbgt	r3, [r1, #3]
    9c68:	ldrb	r3, [fp, #-825]	; 0xfffffcc7
    9c6c:	ldrb	r0, [fp, #-846]	; 0xfffffcb2
    9c70:	ldrb	r1, [fp, #-804]	; 0xfffffcdc
    9c74:	cmp	ip, #0
    9c78:	lsl	r3, r3, #8
    9c7c:	orr	r3, r3, r0, lsl #16
    9c80:	orr	r3, r3, r1
    9c84:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    9c88:	ldr	lr, [pc, #-868]	; 992c <rb_sha512_crypt_r+0x968>
    9c8c:	and	r1, r3, #63	; 0x3f
    9c90:	add	lr, pc, lr
    9c94:	add	r1, lr, r1
    9c98:	sub	r0, ip, #1
    9c9c:	ldrb	r5, [r1, #1940]	; 0x794
    9ca0:	cmp	r0, #0
    9ca4:	add	r1, r2, #1
    9ca8:	strb	r5, [r2]
    9cac:	lsr	r5, r3, #6
    9cb0:	ble	9d0c <rb_sha512_crypt_r+0xd48>
    9cb4:	and	r5, r5, #63	; 0x3f
    9cb8:	add	r5, lr, r5
    9cbc:	sub	r0, ip, #2
    9cc0:	ldrb	r5, [r5, #1940]	; 0x794
    9cc4:	cmp	r0, #0
    9cc8:	add	r1, r2, #2
    9ccc:	strb	r5, [r2, #1]
    9cd0:	lsr	r5, r3, #12
    9cd4:	ble	9d0c <rb_sha512_crypt_r+0xd48>
    9cd8:	and	r5, r5, #63	; 0x3f
    9cdc:	sub	r0, ip, #3
    9ce0:	add	r5, lr, r5
    9ce4:	cmp	r0, #0
    9ce8:	lsr	r3, r3, #18
    9cec:	ldrb	r1, [r5, #1940]	; 0x794
    9cf0:	addgt	r3, lr, r3
    9cf4:	subgt	r0, ip, #4
    9cf8:	ldrbgt	r3, [r3, #1940]	; 0x794
    9cfc:	strb	r1, [r2, #2]
    9d00:	add	r1, r2, #3
    9d04:	addgt	r1, r2, #4
    9d08:	strbgt	r3, [r2, #3]
    9d0c:	ldrb	r3, [fp, #-803]	; 0xfffffcdd
    9d10:	ldrb	ip, [fp, #-824]	; 0xfffffcc8
    9d14:	ldrb	r2, [fp, #-845]	; 0xfffffcb3
    9d18:	cmp	r0, #0
    9d1c:	lsl	r3, r3, #8
    9d20:	orr	r3, r3, ip, lsl #16
    9d24:	orr	r3, r3, r2
    9d28:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    9d2c:	ldr	lr, [pc, #-1028]	; 9930 <rb_sha512_crypt_r+0x96c>
    9d30:	and	r2, r3, #63	; 0x3f
    9d34:	add	lr, pc, lr
    9d38:	add	r2, lr, r2
    9d3c:	sub	ip, r0, #1
    9d40:	ldrb	r5, [r2, #1940]	; 0x794
    9d44:	cmp	ip, #0
    9d48:	add	r2, r1, #1
    9d4c:	strb	r5, [r1]
    9d50:	lsr	r5, r3, #6
    9d54:	ble	9db0 <rb_sha512_crypt_r+0xdec>
    9d58:	and	r5, r5, #63	; 0x3f
    9d5c:	add	r5, lr, r5
    9d60:	sub	ip, r0, #2
    9d64:	ldrb	r5, [r5, #1940]	; 0x794
    9d68:	cmp	ip, #0
    9d6c:	add	r2, r1, #2
    9d70:	strb	r5, [r1, #1]
    9d74:	lsr	r5, r3, #12
    9d78:	ble	9db0 <rb_sha512_crypt_r+0xdec>
    9d7c:	and	r5, r5, #63	; 0x3f
    9d80:	sub	ip, r0, #3
    9d84:	add	r5, lr, r5
    9d88:	cmp	ip, #0
    9d8c:	lsr	r3, r3, #18
    9d90:	ldrb	r2, [r5, #1940]	; 0x794
    9d94:	addgt	r3, lr, r3
    9d98:	subgt	ip, r0, #4
    9d9c:	ldrbgt	r3, [r3, #1940]	; 0x794
    9da0:	strb	r2, [r1, #2]
    9da4:	add	r2, r1, #3
    9da8:	addgt	r2, r1, #4
    9dac:	strbgt	r3, [r1, #3]
    9db0:	ldrb	r3, [fp, #-844]	; 0xfffffcb4
    9db4:	ldrb	r0, [fp, #-802]	; 0xfffffcde
    9db8:	ldrb	r1, [fp, #-823]	; 0xfffffcc9
    9dbc:	cmp	ip, #0
    9dc0:	lsl	r3, r3, #8
    9dc4:	orr	r3, r3, r0, lsl #16
    9dc8:	orr	r3, r3, r1
    9dcc:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    9dd0:	ldr	lr, [pc, #-1188]	; 9934 <rb_sha512_crypt_r+0x970>
    9dd4:	and	r1, r3, #63	; 0x3f
    9dd8:	add	lr, pc, lr
    9ddc:	add	r1, lr, r1
    9de0:	sub	r0, ip, #1
    9de4:	ldrb	r5, [r1, #1940]	; 0x794
    9de8:	cmp	r0, #0
    9dec:	add	r1, r2, #1
    9df0:	strb	r5, [r2]
    9df4:	lsr	r5, r3, #6
    9df8:	ble	9e54 <rb_sha512_crypt_r+0xe90>
    9dfc:	and	r5, r5, #63	; 0x3f
    9e00:	add	r5, lr, r5
    9e04:	sub	r0, ip, #2
    9e08:	ldrb	r5, [r5, #1940]	; 0x794
    9e0c:	cmp	r0, #0
    9e10:	add	r1, r2, #2
    9e14:	strb	r5, [r2, #1]
    9e18:	lsr	r5, r3, #12
    9e1c:	ble	9e54 <rb_sha512_crypt_r+0xe90>
    9e20:	and	r5, r5, #63	; 0x3f
    9e24:	sub	r0, ip, #3
    9e28:	add	r5, lr, r5
    9e2c:	cmp	r0, #0
    9e30:	lsr	r3, r3, #18
    9e34:	ldrb	r1, [r5, #1940]	; 0x794
    9e38:	addgt	r3, lr, r3
    9e3c:	subgt	r0, ip, #4
    9e40:	ldrbgt	r3, [r3, #1940]	; 0x794
    9e44:	strb	r1, [r2, #2]
    9e48:	add	r1, r2, #3
    9e4c:	addgt	r1, r2, #4
    9e50:	strbgt	r3, [r2, #3]
    9e54:	ldrb	r3, [fp, #-822]	; 0xfffffcca
    9e58:	ldrb	ip, [fp, #-843]	; 0xfffffcb5
    9e5c:	ldrb	r2, [fp, #-801]	; 0xfffffcdf
    9e60:	cmp	r0, #0
    9e64:	lsl	r3, r3, #8
    9e68:	orr	r3, r3, ip, lsl #16
    9e6c:	orr	r3, r3, r2
    9e70:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    9e74:	ldr	lr, [pc, #-1348]	; 9938 <rb_sha512_crypt_r+0x974>
    9e78:	and	r2, r3, #63	; 0x3f
    9e7c:	add	lr, pc, lr
    9e80:	add	r2, lr, r2
    9e84:	sub	ip, r0, #1
    9e88:	ldrb	r5, [r2, #1940]	; 0x794
    9e8c:	cmp	ip, #0
    9e90:	add	r2, r1, #1
    9e94:	strb	r5, [r1]
    9e98:	lsr	r5, r3, #6
    9e9c:	ble	9ef8 <rb_sha512_crypt_r+0xf34>
    9ea0:	and	r5, r5, #63	; 0x3f
    9ea4:	add	r5, lr, r5
    9ea8:	sub	ip, r0, #2
    9eac:	ldrb	r5, [r5, #1940]	; 0x794
    9eb0:	cmp	ip, #0
    9eb4:	add	r2, r1, #2
    9eb8:	strb	r5, [r1, #1]
    9ebc:	lsr	r5, r3, #12
    9ec0:	ble	9ef8 <rb_sha512_crypt_r+0xf34>
    9ec4:	and	r5, r5, #63	; 0x3f
    9ec8:	sub	ip, r0, #3
    9ecc:	add	r5, lr, r5
    9ed0:	cmp	ip, #0
    9ed4:	lsr	r3, r3, #18
    9ed8:	ldrb	r2, [r5, #1940]	; 0x794
    9edc:	addgt	r3, lr, r3
    9ee0:	subgt	ip, r0, #4
    9ee4:	ldrbgt	r3, [r3, #1940]	; 0x794
    9ee8:	strb	r2, [r1, #2]
    9eec:	add	r2, r1, #3
    9ef0:	addgt	r2, r1, #4
    9ef4:	strbgt	r3, [r1, #3]
    9ef8:	ldrb	r3, [fp, #-800]	; 0xfffffce0
    9efc:	ldrb	r0, [fp, #-821]	; 0xfffffccb
    9f00:	ldrb	r1, [fp, #-842]	; 0xfffffcb6
    9f04:	cmp	ip, #0
    9f08:	lsl	r3, r3, #8
    9f0c:	orr	r3, r3, r0, lsl #16
    9f10:	orr	r3, r3, r1
    9f14:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    9f18:	ldr	lr, [pc, #-1508]	; 993c <rb_sha512_crypt_r+0x978>
    9f1c:	and	r1, r3, #63	; 0x3f
    9f20:	add	lr, pc, lr
    9f24:	add	r1, lr, r1
    9f28:	sub	r0, ip, #1
    9f2c:	ldrb	r5, [r1, #1940]	; 0x794
    9f30:	cmp	r0, #0
    9f34:	add	r1, r2, #1
    9f38:	strb	r5, [r2]
    9f3c:	lsr	r5, r3, #6
    9f40:	ble	9f9c <rb_sha512_crypt_r+0xfd8>
    9f44:	and	r5, r5, #63	; 0x3f
    9f48:	add	r5, lr, r5
    9f4c:	sub	r0, ip, #2
    9f50:	ldrb	r5, [r5, #1940]	; 0x794
    9f54:	cmp	r0, #0
    9f58:	add	r1, r2, #2
    9f5c:	strb	r5, [r2, #1]
    9f60:	lsr	r5, r3, #12
    9f64:	ble	9f9c <rb_sha512_crypt_r+0xfd8>
    9f68:	and	r5, r5, #63	; 0x3f
    9f6c:	sub	r0, ip, #3
    9f70:	add	r5, lr, r5
    9f74:	cmp	r0, #0
    9f78:	lsr	r3, r3, #18
    9f7c:	ldrb	r1, [r5, #1940]	; 0x794
    9f80:	addgt	r3, lr, r3
    9f84:	subgt	r0, ip, #4
    9f88:	ldrbgt	r3, [r3, #1940]	; 0x794
    9f8c:	strb	r1, [r2, #2]
    9f90:	add	r1, r2, #3
    9f94:	addgt	r1, r2, #4
    9f98:	strbgt	r3, [r2, #3]
    9f9c:	ldrb	r3, [fp, #-841]	; 0xfffffcb7
    9fa0:	ldrb	ip, [fp, #-799]	; 0xfffffce1
    9fa4:	ldrb	r2, [fp, #-820]	; 0xfffffccc
    9fa8:	cmp	r0, #0
    9fac:	lsl	r3, r3, #8
    9fb0:	orr	r3, r3, ip, lsl #16
    9fb4:	orr	r3, r3, r2
    9fb8:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    9fbc:	ldr	lr, [pc, #-1668]	; 9940 <rb_sha512_crypt_r+0x97c>
    9fc0:	and	r2, r3, #63	; 0x3f
    9fc4:	add	lr, pc, lr
    9fc8:	add	r2, lr, r2
    9fcc:	sub	ip, r0, #1
    9fd0:	ldrb	r5, [r2, #1940]	; 0x794
    9fd4:	cmp	ip, #0
    9fd8:	add	r2, r1, #1
    9fdc:	strb	r5, [r1]
    9fe0:	lsr	r5, r3, #6
    9fe4:	ble	a040 <rb_sha512_crypt_r+0x107c>
    9fe8:	and	r5, r5, #63	; 0x3f
    9fec:	add	r5, lr, r5
    9ff0:	sub	ip, r0, #2
    9ff4:	ldrb	r5, [r5, #1940]	; 0x794
    9ff8:	cmp	ip, #0
    9ffc:	add	r2, r1, #2
    a000:	strb	r5, [r1, #1]
    a004:	lsr	r5, r3, #12
    a008:	ble	a040 <rb_sha512_crypt_r+0x107c>
    a00c:	and	r5, r5, #63	; 0x3f
    a010:	sub	ip, r0, #3
    a014:	add	r5, lr, r5
    a018:	cmp	ip, #0
    a01c:	lsr	r3, r3, #18
    a020:	ldrb	r2, [r5, #1940]	; 0x794
    a024:	addgt	r3, lr, r3
    a028:	subgt	ip, r0, #4
    a02c:	ldrbgt	r3, [r3, #1940]	; 0x794
    a030:	strb	r2, [r1, #2]
    a034:	add	r2, r1, #3
    a038:	addgt	r2, r1, #4
    a03c:	strbgt	r3, [r1, #3]
    a040:	ldrb	r3, [fp, #-819]	; 0xfffffccd
    a044:	ldrb	r0, [fp, #-840]	; 0xfffffcb8
    a048:	ldrb	r1, [fp, #-798]	; 0xfffffce2
    a04c:	cmp	ip, #0
    a050:	lsl	r3, r3, #8
    a054:	orr	r3, r3, r0, lsl #16
    a058:	orr	r3, r3, r1
    a05c:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a060:	ldr	lr, [pc, #-1828]	; 9944 <rb_sha512_crypt_r+0x980>
    a064:	and	r1, r3, #63	; 0x3f
    a068:	add	lr, pc, lr
    a06c:	add	r1, lr, r1
    a070:	sub	r0, ip, #1
    a074:	ldrb	r5, [r1, #1940]	; 0x794
    a078:	cmp	r0, #0
    a07c:	add	r1, r2, #1
    a080:	strb	r5, [r2]
    a084:	lsr	r5, r3, #6
    a088:	ble	a0e4 <rb_sha512_crypt_r+0x1120>
    a08c:	and	r5, r5, #63	; 0x3f
    a090:	add	r5, lr, r5
    a094:	sub	r0, ip, #2
    a098:	ldrb	r5, [r5, #1940]	; 0x794
    a09c:	cmp	r0, #0
    a0a0:	add	r1, r2, #2
    a0a4:	strb	r5, [r2, #1]
    a0a8:	lsr	r5, r3, #12
    a0ac:	ble	a0e4 <rb_sha512_crypt_r+0x1120>
    a0b0:	and	r5, r5, #63	; 0x3f
    a0b4:	sub	r0, ip, #3
    a0b8:	add	r5, lr, r5
    a0bc:	cmp	r0, #0
    a0c0:	lsr	r3, r3, #18
    a0c4:	ldrb	r1, [r5, #1940]	; 0x794
    a0c8:	addgt	r3, lr, r3
    a0cc:	subgt	r0, ip, #4
    a0d0:	ldrbgt	r3, [r3, #1940]	; 0x794
    a0d4:	strb	r1, [r2, #2]
    a0d8:	add	r1, r2, #3
    a0dc:	addgt	r1, r2, #4
    a0e0:	strbgt	r3, [r2, #3]
    a0e4:	ldrb	r3, [fp, #-797]	; 0xfffffce3
    a0e8:	ldrb	ip, [fp, #-818]	; 0xfffffcce
    a0ec:	ldrb	r2, [fp, #-839]	; 0xfffffcb9
    a0f0:	cmp	r0, #0
    a0f4:	lsl	r3, r3, #8
    a0f8:	orr	r3, r3, ip, lsl #16
    a0fc:	orr	r3, r3, r2
    a100:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a104:	ldr	lr, [pc, #-1988]	; 9948 <rb_sha512_crypt_r+0x984>
    a108:	and	r2, r3, #63	; 0x3f
    a10c:	add	lr, pc, lr
    a110:	add	r2, lr, r2
    a114:	sub	ip, r0, #1
    a118:	ldrb	r5, [r2, #1940]	; 0x794
    a11c:	cmp	ip, #0
    a120:	add	r2, r1, #1
    a124:	strb	r5, [r1]
    a128:	lsr	r5, r3, #6
    a12c:	ble	a188 <rb_sha512_crypt_r+0x11c4>
    a130:	and	r5, r5, #63	; 0x3f
    a134:	add	r5, lr, r5
    a138:	sub	ip, r0, #2
    a13c:	ldrb	r5, [r5, #1940]	; 0x794
    a140:	cmp	ip, #0
    a144:	add	r2, r1, #2
    a148:	strb	r5, [r1, #1]
    a14c:	lsr	r5, r3, #12
    a150:	ble	a188 <rb_sha512_crypt_r+0x11c4>
    a154:	and	r5, r5, #63	; 0x3f
    a158:	sub	ip, r0, #3
    a15c:	add	r5, lr, r5
    a160:	cmp	ip, #0
    a164:	lsr	r3, r3, #18
    a168:	ldrb	r2, [r5, #1940]	; 0x794
    a16c:	addgt	r3, lr, r3
    a170:	subgt	ip, r0, #4
    a174:	ldrbgt	r3, [r3, #1940]	; 0x794
    a178:	strb	r2, [r1, #2]
    a17c:	add	r2, r1, #3
    a180:	addgt	r2, r1, #4
    a184:	strbgt	r3, [r1, #3]
    a188:	ldrb	r3, [fp, #-838]	; 0xfffffcba
    a18c:	ldrb	r0, [fp, #-796]	; 0xfffffce4
    a190:	ldrb	r1, [fp, #-817]	; 0xfffffccf
    a194:	cmp	ip, #0
    a198:	lsl	r3, r3, #8
    a19c:	orr	r3, r3, r0, lsl #16
    a1a0:	orr	r3, r3, r1
    a1a4:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a1a8:	ldr	lr, [pc, #-2148]	; 994c <rb_sha512_crypt_r+0x988>
    a1ac:	and	r1, r3, #63	; 0x3f
    a1b0:	add	lr, pc, lr
    a1b4:	add	r1, lr, r1
    a1b8:	sub	r0, ip, #1
    a1bc:	ldrb	r5, [r1, #1940]	; 0x794
    a1c0:	cmp	r0, #0
    a1c4:	add	r1, r2, #1
    a1c8:	strb	r5, [r2]
    a1cc:	lsr	r5, r3, #6
    a1d0:	ble	a22c <rb_sha512_crypt_r+0x1268>
    a1d4:	and	r5, r5, #63	; 0x3f
    a1d8:	add	r5, lr, r5
    a1dc:	sub	r0, ip, #2
    a1e0:	ldrb	r5, [r5, #1940]	; 0x794
    a1e4:	cmp	r0, #0
    a1e8:	add	r1, r2, #2
    a1ec:	strb	r5, [r2, #1]
    a1f0:	lsr	r5, r3, #12
    a1f4:	ble	a22c <rb_sha512_crypt_r+0x1268>
    a1f8:	and	r5, r5, #63	; 0x3f
    a1fc:	sub	r0, ip, #3
    a200:	add	r5, lr, r5
    a204:	cmp	r0, #0
    a208:	lsr	r3, r3, #18
    a20c:	ldrb	r1, [r5, #1940]	; 0x794
    a210:	addgt	r3, lr, r3
    a214:	subgt	r0, ip, #4
    a218:	ldrbgt	r3, [r3, #1940]	; 0x794
    a21c:	strb	r1, [r2, #2]
    a220:	add	r1, r2, #3
    a224:	addgt	r1, r2, #4
    a228:	strbgt	r3, [r2, #3]
    a22c:	ldrb	r3, [fp, #-816]	; 0xfffffcd0
    a230:	ldrb	ip, [fp, #-837]	; 0xfffffcbb
    a234:	ldrb	r2, [fp, #-795]	; 0xfffffce5
    a238:	cmp	r0, #0
    a23c:	lsl	r3, r3, #8
    a240:	orr	r3, r3, ip, lsl #16
    a244:	orr	r3, r3, r2
    a248:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a24c:	ldr	lr, [pc, #-2308]	; 9950 <rb_sha512_crypt_r+0x98c>
    a250:	and	r2, r3, #63	; 0x3f
    a254:	add	lr, pc, lr
    a258:	add	r2, lr, r2
    a25c:	sub	ip, r0, #1
    a260:	ldrb	r5, [r2, #1940]	; 0x794
    a264:	cmp	ip, #0
    a268:	add	r2, r1, #1
    a26c:	strb	r5, [r1]
    a270:	lsr	r5, r3, #6
    a274:	ble	a2d0 <rb_sha512_crypt_r+0x130c>
    a278:	and	r5, r5, #63	; 0x3f
    a27c:	add	r5, lr, r5
    a280:	sub	ip, r0, #2
    a284:	ldrb	r5, [r5, #1940]	; 0x794
    a288:	cmp	ip, #0
    a28c:	add	r2, r1, #2
    a290:	strb	r5, [r1, #1]
    a294:	lsr	r5, r3, #12
    a298:	ble	a2d0 <rb_sha512_crypt_r+0x130c>
    a29c:	and	r5, r5, #63	; 0x3f
    a2a0:	sub	ip, r0, #3
    a2a4:	add	r5, lr, r5
    a2a8:	cmp	ip, #0
    a2ac:	lsr	r3, r3, #18
    a2b0:	ldrb	r2, [r5, #1940]	; 0x794
    a2b4:	addgt	r3, lr, r3
    a2b8:	subgt	ip, r0, #4
    a2bc:	ldrbgt	r3, [r3, #1940]	; 0x794
    a2c0:	strb	r2, [r1, #2]
    a2c4:	add	r2, r1, #3
    a2c8:	addgt	r2, r1, #4
    a2cc:	strbgt	r3, [r1, #3]
    a2d0:	ldrb	r3, [fp, #-794]	; 0xfffffce6
    a2d4:	ldrb	r0, [fp, #-815]	; 0xfffffcd1
    a2d8:	ldrb	r1, [fp, #-836]	; 0xfffffcbc
    a2dc:	cmp	ip, #0
    a2e0:	lsl	r3, r3, #8
    a2e4:	orr	r3, r3, r0, lsl #16
    a2e8:	orr	r3, r3, r1
    a2ec:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a2f0:	ldr	lr, [pc, #-2468]	; 9954 <rb_sha512_crypt_r+0x990>
    a2f4:	and	r1, r3, #63	; 0x3f
    a2f8:	add	lr, pc, lr
    a2fc:	add	r1, lr, r1
    a300:	sub	r0, ip, #1
    a304:	ldrb	r5, [r1, #1940]	; 0x794
    a308:	cmp	r0, #0
    a30c:	add	r1, r2, #1
    a310:	strb	r5, [r2]
    a314:	lsr	r5, r3, #6
    a318:	ble	a374 <rb_sha512_crypt_r+0x13b0>
    a31c:	and	r5, r5, #63	; 0x3f
    a320:	add	r5, lr, r5
    a324:	sub	r0, ip, #2
    a328:	ldrb	r5, [r5, #1940]	; 0x794
    a32c:	cmp	r0, #0
    a330:	add	r1, r2, #2
    a334:	strb	r5, [r2, #1]
    a338:	lsr	r5, r3, #12
    a33c:	ble	a374 <rb_sha512_crypt_r+0x13b0>
    a340:	and	r5, r5, #63	; 0x3f
    a344:	sub	r0, ip, #3
    a348:	add	r5, lr, r5
    a34c:	cmp	r0, #0
    a350:	lsr	r3, r3, #18
    a354:	ldrb	r1, [r5, #1940]	; 0x794
    a358:	addgt	r3, lr, r3
    a35c:	subgt	r0, ip, #4
    a360:	ldrbgt	r3, [r3, #1940]	; 0x794
    a364:	strb	r1, [r2, #2]
    a368:	add	r1, r2, #3
    a36c:	addgt	r1, r2, #4
    a370:	strbgt	r3, [r2, #3]
    a374:	ldrb	r3, [fp, #-835]	; 0xfffffcbd
    a378:	ldrb	ip, [fp, #-793]	; 0xfffffce7
    a37c:	ldrb	r2, [fp, #-814]	; 0xfffffcd2
    a380:	cmp	r0, #0
    a384:	lsl	r3, r3, #8
    a388:	orr	r3, r3, ip, lsl #16
    a38c:	orr	r3, r3, r2
    a390:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a394:	ldr	lr, [pc, #-2628]	; 9958 <rb_sha512_crypt_r+0x994>
    a398:	and	r2, r3, #63	; 0x3f
    a39c:	add	lr, pc, lr
    a3a0:	add	r2, lr, r2
    a3a4:	sub	ip, r0, #1
    a3a8:	ldrb	r5, [r2, #1940]	; 0x794
    a3ac:	cmp	ip, #0
    a3b0:	add	r2, r1, #1
    a3b4:	strb	r5, [r1]
    a3b8:	lsr	r5, r3, #6
    a3bc:	ble	a418 <rb_sha512_crypt_r+0x1454>
    a3c0:	and	r5, r5, #63	; 0x3f
    a3c4:	add	r5, lr, r5
    a3c8:	sub	ip, r0, #2
    a3cc:	ldrb	r5, [r5, #1940]	; 0x794
    a3d0:	cmp	ip, #0
    a3d4:	add	r2, r1, #2
    a3d8:	strb	r5, [r1, #1]
    a3dc:	lsr	r5, r3, #12
    a3e0:	ble	a418 <rb_sha512_crypt_r+0x1454>
    a3e4:	and	r5, r5, #63	; 0x3f
    a3e8:	sub	ip, r0, #3
    a3ec:	add	r5, lr, r5
    a3f0:	cmp	ip, #0
    a3f4:	lsr	r3, r3, #18
    a3f8:	ldrb	r2, [r5, #1940]	; 0x794
    a3fc:	addgt	r3, lr, r3
    a400:	subgt	ip, r0, #4
    a404:	ldrbgt	r3, [r3, #1940]	; 0x794
    a408:	strb	r2, [r1, #2]
    a40c:	add	r2, r1, #3
    a410:	addgt	r2, r1, #4
    a414:	strbgt	r3, [r1, #3]
    a418:	ldrb	r3, [fp, #-813]	; 0xfffffcd3
    a41c:	ldrb	r0, [fp, #-834]	; 0xfffffcbe
    a420:	ldrb	r1, [fp, #-792]	; 0xfffffce8
    a424:	cmp	ip, #0
    a428:	lsl	r3, r3, #8
    a42c:	orr	r3, r3, r0, lsl #16
    a430:	orr	r3, r3, r1
    a434:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a438:	ldr	lr, [pc, #-2788]	; 995c <rb_sha512_crypt_r+0x998>
    a43c:	and	r1, r3, #63	; 0x3f
    a440:	add	lr, pc, lr
    a444:	add	r1, lr, r1
    a448:	sub	r0, ip, #1
    a44c:	ldrb	r5, [r1, #1940]	; 0x794
    a450:	cmp	r0, #0
    a454:	add	r1, r2, #1
    a458:	strb	r5, [r2]
    a45c:	lsr	r5, r3, #6
    a460:	ble	a4bc <rb_sha512_crypt_r+0x14f8>
    a464:	and	r5, r5, #63	; 0x3f
    a468:	add	r5, lr, r5
    a46c:	sub	r0, ip, #2
    a470:	ldrb	r5, [r5, #1940]	; 0x794
    a474:	cmp	r0, #0
    a478:	add	r1, r2, #2
    a47c:	strb	r5, [r2, #1]
    a480:	lsr	r5, r3, #12
    a484:	ble	a4bc <rb_sha512_crypt_r+0x14f8>
    a488:	and	r5, r5, #63	; 0x3f
    a48c:	sub	r0, ip, #3
    a490:	add	r5, lr, r5
    a494:	cmp	r0, #0
    a498:	lsr	r3, r3, #18
    a49c:	ldrb	r1, [r5, #1940]	; 0x794
    a4a0:	addgt	r3, lr, r3
    a4a4:	subgt	r0, ip, #4
    a4a8:	ldrbgt	r3, [r3, #1940]	; 0x794
    a4ac:	strb	r1, [r2, #2]
    a4b0:	add	r1, r2, #3
    a4b4:	addgt	r1, r2, #4
    a4b8:	strbgt	r3, [r2, #3]
    a4bc:	ldrb	r2, [fp, #-791]	; 0xfffffce9
    a4c0:	ldrb	ip, [fp, #-812]	; 0xfffffcd4
    a4c4:	ldrb	r3, [fp, #-833]	; 0xfffffcbf
    a4c8:	cmp	r0, #0
    a4cc:	lsl	r2, r2, #8
    a4d0:	orr	r2, r2, ip, lsl #16
    a4d4:	orr	r2, r2, r3
    a4d8:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a4dc:	ldr	lr, [pc, #-2948]	; 9960 <rb_sha512_crypt_r+0x99c>
    a4e0:	and	ip, r2, #63	; 0x3f
    a4e4:	add	lr, pc, lr
    a4e8:	add	ip, lr, ip
    a4ec:	sub	r3, r0, #1
    a4f0:	ldrb	r5, [ip, #1940]	; 0x794
    a4f4:	cmp	r3, #0
    a4f8:	add	ip, r1, #1
    a4fc:	strb	r5, [r1]
    a500:	lsr	r5, r2, #6
    a504:	ble	a560 <rb_sha512_crypt_r+0x159c>
    a508:	and	r5, r5, #63	; 0x3f
    a50c:	add	r5, lr, r5
    a510:	sub	r3, r0, #2
    a514:	ldrb	r5, [r5, #1940]	; 0x794
    a518:	cmp	r3, #0
    a51c:	add	ip, r1, #2
    a520:	strb	r5, [r1, #1]
    a524:	lsr	r5, r2, #12
    a528:	ble	a560 <rb_sha512_crypt_r+0x159c>
    a52c:	and	r5, r5, #63	; 0x3f
    a530:	sub	r3, r0, #3
    a534:	add	r5, lr, r5
    a538:	cmp	r3, #0
    a53c:	lsr	r2, r2, #18
    a540:	ldrb	ip, [r5, #1940]	; 0x794
    a544:	addgt	r2, lr, r2
    a548:	subgt	r3, r0, #4
    a54c:	ldrbgt	r2, [r2, #1940]	; 0x794
    a550:	strb	ip, [r1, #2]
    a554:	add	ip, r1, #3
    a558:	addgt	ip, r1, #4
    a55c:	strbgt	r2, [r1, #3]
    a560:	ldrb	r2, [fp, #-832]	; 0xfffffcc0
    a564:	ldrb	r0, [fp, #-790]	; 0xfffffcea
    a568:	ldrb	r1, [fp, #-811]	; 0xfffffcd5
    a56c:	cmp	r3, #0
    a570:	lsl	r2, r2, #8
    a574:	orr	r2, r2, r0, lsl #16
    a578:	orr	r2, r2, r1
    a57c:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a580:	ldr	r1, [pc, #-3108]	; 9964 <rb_sha512_crypt_r+0x9a0>
    a584:	and	r0, r2, #63	; 0x3f
    a588:	add	r1, pc, r1
    a58c:	add	r0, r1, r0
    a590:	sub	lr, r3, #1
    a594:	ldrb	r0, [r0, #1940]	; 0x794
    a598:	cmp	lr, #0
    a59c:	lsr	lr, r2, #6
    a5a0:	strb	r0, [ip]
    a5a4:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a5a8:	and	lr, lr, #63	; 0x3f
    a5ac:	add	lr, r1, lr
    a5b0:	sub	r0, r3, #2
    a5b4:	ldrb	lr, [lr, #1940]	; 0x794
    a5b8:	cmp	r0, #0
    a5bc:	lsr	r0, r2, #12
    a5c0:	strb	lr, [ip, #1]
    a5c4:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a5c8:	and	r0, r0, #63	; 0x3f
    a5cc:	add	r0, r1, r0
    a5d0:	sub	lr, r3, #3
    a5d4:	ldrb	r0, [r0, #1940]	; 0x794
    a5d8:	cmp	lr, #0
    a5dc:	lsr	r2, r2, #18
    a5e0:	strb	r0, [ip, #2]
    a5e4:	ble	ab74 <rb_sha512_crypt_r+0x1bb0>
    a5e8:	add	r2, r1, r2
    a5ec:	cmp	r3, #4
    a5f0:	ldrb	r0, [r2, #1940]	; 0x794
    a5f4:	ldrb	r2, [fp, #-789]	; 0xfffffceb
    a5f8:	strb	r0, [ip, #3]
    a5fc:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a600:	and	r0, r2, #63	; 0x3f
    a604:	add	r0, r1, r0
    a608:	cmp	r3, #5
    a60c:	ldrb	r0, [r0, #1940]	; 0x794
    a610:	lsr	r2, r2, #6
    a614:	strb	r0, [ip, #4]
    a618:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a61c:	add	r2, r1, r2
    a620:	cmp	r3, #6
    a624:	ldrb	r3, [r2, #1940]	; 0x794
    a628:	strb	r3, [ip, #5]
    a62c:	beq	ab74 <rb_sha512_crypt_r+0x1bb0>
    a630:	ldr	r5, [fp, #-880]	; 0xfffffc90
    a634:	mov	r3, #0
    a638:	strb	r3, [ip, #6]
    a63c:	add	r3, pc, #836	; 0x344
    a640:	ldrd	r2, [r3]
    a644:	add	r7, pc, #836	; 0x344
    a648:	ldrd	r6, [r7]
    a64c:	mov	r1, r9
    a650:	strd	r2, [r4]
    a654:	add	r3, pc, #828	; 0x33c
    a658:	ldrd	r2, [r3]
    a65c:	strd	r6, [r4, #8]
    a660:	add	r7, pc, #824	; 0x338
    a664:	ldrd	r6, [r7]
    a668:	strd	r2, [r4, #16]
    a66c:	add	r3, pc, #820	; 0x334
    a670:	ldrd	r2, [r3]
    a674:	strd	r6, [r4, #24]
    a678:	add	r7, pc, #816	; 0x330
    a67c:	ldrd	r6, [r7]
    a680:	strd	r2, [r4, #32]
    a684:	add	r3, pc, #812	; 0x32c
    a688:	ldrd	r2, [r3]
    a68c:	strd	r6, [r4, #40]	; 0x28
    a690:	add	r7, pc, #808	; 0x328
    a694:	ldrd	r6, [r7]
    a698:	strd	r2, [r4, #48]	; 0x30
    a69c:	mov	r3, #0
    a6a0:	mov	r2, #0
    a6a4:	mov	r0, r4
    a6a8:	strd	r2, [r4, #72]	; 0x48
    a6ac:	strd	r2, [r4, #64]	; 0x40
    a6b0:	strd	r2, [r4, #80]	; 0x50
    a6b4:	strd	r6, [r4, #56]	; 0x38
    a6b8:	bl	7c78 <rb_sha512_finish_ctx>
    a6bc:	mov	r2, #64	; 0x40
    a6c0:	mov	r1, #0
    a6c4:	ldr	r0, [fp, #-888]	; 0xfffffc88
    a6c8:	bl	4628 <memset@plt>
    a6cc:	mov	r2, sl
    a6d0:	mov	r1, #0
    a6d4:	mov	r0, r8
    a6d8:	bl	4628 <memset@plt>
    a6dc:	ldr	r2, [fp, #-868]	; 0xfffffc9c
    a6e0:	mov	r1, #0
    a6e4:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    a6e8:	bl	4628 <memset@plt>
    a6ec:	mov	r2, #344	; 0x158
    a6f0:	mov	r1, #0
    a6f4:	mov	r0, r4
    a6f8:	bl	4628 <memset@plt>
    a6fc:	ldr	r0, [fp, #-876]	; 0xfffffc94
    a700:	mov	r2, #344	; 0x158
    a704:	mov	r1, #0
    a708:	bl	4628 <memset@plt>
    a70c:	ldr	r0, [fp, #-900]	; 0xfffffc7c
    a710:	cmp	r0, #0
    a714:	beq	a724 <rb_sha512_crypt_r+0x1760>
    a718:	mov	r2, sl
    a71c:	mov	r1, #0
    a720:	bl	4628 <memset@plt>
    a724:	ldr	r0, [fp, #-904]	; 0xfffffc78
    a728:	cmp	r0, #0
    a72c:	beq	a73c <rb_sha512_crypt_r+0x1778>
    a730:	ldr	r2, [fp, #-868]	; 0xfffffc9c
    a734:	mov	r1, #0
    a738:	bl	4628 <memset@plt>
    a73c:	mov	r0, r5
    a740:	sub	sp, fp, #32
    a744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a748:	cmp	sl, #0
    a74c:	bne	ab5c <rb_sha512_crypt_r+0x1b98>
    a750:	mov	r2, r4
    a754:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    a758:	ldr	r0, [fp, #-856]	; 0xfffffca8
    a75c:	bl	7adc <rb_sha512_process_bytes>
    a760:	add	r3, pc, #544	; 0x220
    a764:	ldrd	r2, [r3]
    a768:	sub	r5, fp, #372	; 0x174
    a76c:	strd	r2, [r5, #-8]
    a770:	add	r3, pc, #536	; 0x218
    a774:	ldrd	r2, [r3]
    a778:	strd	r8, [r5, #64]	; 0x40
    a77c:	strd	r8, [r5, #56]	; 0x38
    a780:	strd	r2, [r5]
    a784:	add	r3, pc, #524	; 0x20c
    a788:	ldrd	r2, [r3]
    a78c:	strd	r8, [r5, #72]	; 0x48
    a790:	strd	r2, [r5, #8]
    a794:	add	r3, pc, #516	; 0x204
    a798:	ldrd	r2, [r3]
    a79c:	strd	r2, [r5, #16]
    a7a0:	add	r3, pc, #512	; 0x200
    a7a4:	ldrd	r2, [r3]
    a7a8:	strd	r2, [r5, #24]
    a7ac:	add	r3, pc, #508	; 0x1fc
    a7b0:	ldrd	r2, [r3]
    a7b4:	strd	r2, [r5, #32]
    a7b8:	add	r3, pc, #504	; 0x1f8
    a7bc:	ldrd	r2, [r3]
    a7c0:	strd	r2, [r5, #40]	; 0x28
    a7c4:	add	r3, pc, #500	; 0x1f4
    a7c8:	ldrd	r2, [r3]
    a7cc:	strd	r2, [r5, #48]	; 0x30
    a7d0:	ldr	r7, [fp, #-876]	; 0xfffffc94
    a7d4:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    a7d8:	mov	r2, r7
    a7dc:	ldr	r0, [fp, #-856]	; 0xfffffca8
    a7e0:	bl	7adc <rb_sha512_process_bytes>
    a7e4:	sub	r9, fp, #852	; 0x354
    a7e8:	mov	r1, #0
    a7ec:	mov	r0, r6
    a7f0:	mov	r2, r7
    a7f4:	bl	7adc <rb_sha512_process_bytes>
    a7f8:	mov	r1, r9
    a7fc:	mov	r0, r7
    a800:	bl	7c78 <rb_sha512_finish_ctx>
    a804:	mov	r2, r4
    a808:	mov	r1, sl
    a80c:	mov	r0, r9
    a810:	bl	7adc <rb_sha512_process_bytes>
    a814:	cmp	sl, #0
    a818:	bne	935c <rb_sha512_crypt_r+0x398>
    a81c:	mov	r1, r9
    a820:	mov	r0, r4
    a824:	bl	7c78 <rb_sha512_finish_ctx>
    a828:	add	r1, pc, #344	; 0x158
    a82c:	ldrd	r0, [r1]
    a830:	add	r7, pc, #352	; 0x160
    a834:	ldrd	r6, [r7]
    a838:	add	r3, pc, #336	; 0x150
    a83c:	ldrd	r2, [r3]
    a840:	strd	r0, [r5, #-8]
    a844:	add	r1, pc, #340	; 0x154
    a848:	ldrd	r0, [r1]
    a84c:	strd	r6, [r5, #8]
    a850:	add	r7, pc, #344	; 0x158
    a854:	ldrd	r6, [r7]
    a858:	strd	r2, [r5]
    a85c:	add	r3, pc, #324	; 0x144
    a860:	ldrd	r2, [r3]
    a864:	strd	r0, [r5, #16]
    a868:	add	r1, pc, #328	; 0x148
    a86c:	ldrd	r0, [r1]
    a870:	strd	r6, [r5, #32]
    a874:	add	r7, pc, #324	; 0x144
    a878:	ldrd	r6, [r7]
    a87c:	strd	r2, [r5, #24]
    a880:	mov	r2, #0
    a884:	mov	r3, #0
    a888:	strd	r0, [r5, #40]	; 0x28
    a88c:	sub	r1, fp, #788	; 0x314
    a890:	ldr	r0, [fp, #-876]	; 0xfffffc94
    a894:	strd	r2, [r5, #64]	; 0x40
    a898:	strd	r2, [r5, #56]	; 0x38
    a89c:	strd	r2, [r5, #72]	; 0x48
    a8a0:	str	r1, [fp, #-888]	; 0xfffffc88
    a8a4:	strd	r6, [r5, #48]	; 0x30
    a8a8:	bl	7c78 <rb_sha512_finish_ctx>
    a8ac:	add	r0, sp, #8
    a8b0:	mov	r8, r0
    a8b4:	mov	r2, sl
    a8b8:	b	951c <rb_sha512_crypt_r+0x558>
    a8bc:	mov	r2, r4
    a8c0:	ldr	r1, [fp, #-860]	; 0xfffffca4
    a8c4:	ldr	r0, [fp, #-864]	; 0xfffffca0
    a8c8:	bl	7adc <rb_sha512_process_bytes>
    a8cc:	mov	r1, sl
    a8d0:	mov	r0, r4
    a8d4:	bl	7c78 <rb_sha512_finish_ctx>
    a8d8:	ldr	r3, [fp, #-872]	; 0xfffffc98
    a8dc:	add	r5, r5, #1
    a8e0:	cmp	r3, r5
    a8e4:	bne	961c <rb_sha512_crypt_r+0x658>
    a8e8:	b	9718 <rb_sha512_crypt_r+0x754>
    a8ec:	mov	r2, r4
    a8f0:	ldr	r1, [fp, #-860]	; 0xfffffca4
    a8f4:	ldr	r0, [fp, #-864]	; 0xfffffca0
    a8f8:	bl	7adc <rb_sha512_process_bytes>
    a8fc:	b	96e4 <rb_sha512_crypt_r+0x720>
    a900:	mov	r2, r4
    a904:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    a908:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    a90c:	bl	7adc <rb_sha512_process_bytes>
    a910:	b	96c4 <rb_sha512_crypt_r+0x700>
    a914:	cmp	sl, #0
    a918:	beq	a7d0 <rb_sha512_crypt_r+0x180c>
    a91c:	mov	r2, sl
    a920:	mov	r1, r6
    a924:	sub	r0, fp, #292	; 0x124
    a928:	bl	4808 <memcpy@plt>
    a92c:	mov	r7, sl
    a930:	b	92d4 <rb_sha512_crypt_r+0x310>
    a934:	ldr	r2, [fp, #-868]	; 0xfffffc9c
    a938:	ldr	r1, [fp, #-856]	; 0xfffffca8
    a93c:	add	r3, r2, #22
    a940:	bic	r3, r3, #7
    a944:	sub	sp, sp, r3
    a948:	add	r0, sp, #16
    a94c:	bl	4808 <memcpy@plt>
    a950:	str	r0, [fp, #-856]	; 0xfffffca8
    a954:	str	r0, [fp, #-904]	; 0xfffffc78
    a958:	b	9090 <rb_sha512_crypt_r+0xcc>
    a95c:	add	r3, r0, #22
    a960:	bic	r3, r3, #7
    a964:	sub	sp, sp, r3
    a968:	mov	r1, r6
    a96c:	add	r0, sp, #16
    a970:	mov	r2, sl
    a974:	bl	4808 <memcpy@plt>
    a978:	mov	r6, r0
    a97c:	str	r0, [fp, #-900]	; 0xfffffc7c
    a980:	b	9080 <rb_sha512_crypt_r+0xbc>
    a984:	nop			; (mov r0, r0)
    a988:	.word	0xf3bcc908
    a98c:	.word	0x6a09e667
    a990:	.word	0x84caa73b
    a994:	.word	0xbb67ae85
    a998:	.word	0xfe94f82b
    a99c:	.word	0x3c6ef372
    a9a0:	.word	0x5f1d36f1
    a9a4:	.word	0xa54ff53a
    a9a8:	.word	0xade682d1
    a9ac:	.word	0x510e527f
    a9b0:	.word	0x2b3e6c1f
    a9b4:	.word	0x9b05688c
    a9b8:	.word	0xfb41bd6b
    a9bc:	.word	0x1f83d9ab
    a9c0:	.word	0x137e2179
    a9c4:	.word	0x5be0cd19
    a9c8:	.word	0x00001388
    a9cc:	.word	0x3b9ac9ff
    a9d0:	sub	r3, fp, #380	; 0x17c
    a9d4:	str	r3, [fp, #-876]	; 0xfffffc94
    a9d8:	mov	r1, r3
    a9dc:	ldr	r3, [fp, #-856]	; 0xfffffca8
    a9e0:	mov	r2, #10
    a9e4:	add	r0, r3, #7
    a9e8:	bl	47fc <strtoul@plt>
    a9ec:	ldr	r3, [fp, #-380]	; 0xfffffe84
    a9f0:	ldrb	r2, [r3]
    a9f4:	cmp	r2, #36	; 0x24
    a9f8:	ldrne	r3, [pc, #-56]	; a9c8 <rb_sha512_crypt_r+0x1a04>
    a9fc:	strne	r3, [fp, #-872]	; 0xfffffc98
    aa00:	bne	9048 <rb_sha512_crypt_r+0x84>
    aa04:	ldr	r2, [pc, #-64]	; a9cc <rb_sha512_crypt_r+0x1a08>
    aa08:	add	r3, r3, #1
    aa0c:	cmp	r0, r2
    aa10:	str	r3, [fp, #-856]	; 0xfffffca8
    aa14:	movcc	r3, r0
    aa18:	movcs	r3, r2
    aa1c:	cmp	r3, #1000	; 0x3e8
    aa20:	movcc	r3, #1000	; 0x3e8
    aa24:	str	r3, [fp, #-872]	; 0xfffffc98
    aa28:	mov	r3, #1
    aa2c:	str	r3, [fp, #-892]	; 0xfffffc84
    aa30:	b	9048 <rb_sha512_crypt_r+0x84>
    aa34:	bic	r5, sl, #127	; 0x7f
    aa38:	mov	r1, r5
    aa3c:	mov	r2, r4
    aa40:	mov	r0, r6
    aa44:	bl	6490 <rb_sha512_process_block>
    aa48:	ands	r2, sl, #127	; 0x7f
    aa4c:	addne	r1, r6, r5
    aa50:	bne	9178 <rb_sha512_crypt_r+0x1b4>
    aa54:	mov	r2, r4
    aa58:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    aa5c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    aa60:	bl	7adc <rb_sha512_process_bytes>
    aa64:	add	r3, pc, #396	; 0x18c
    aa68:	ldrd	r2, [r3]
    aa6c:	sub	r5, fp, #372	; 0x174
    aa70:	strd	r2, [r5, #-8]
    aa74:	add	r3, pc, #388	; 0x184
    aa78:	ldrd	r2, [r3]
    aa7c:	strd	r8, [r5, #64]	; 0x40
    aa80:	strd	r8, [r5, #56]	; 0x38
    aa84:	strd	r2, [r5]
    aa88:	add	r3, pc, #376	; 0x178
    aa8c:	ldrd	r2, [r3]
    aa90:	strd	r8, [r5, #72]	; 0x48
    aa94:	strd	r2, [r5, #8]
    aa98:	add	r3, pc, #368	; 0x170
    aa9c:	ldrd	r2, [r3]
    aaa0:	strd	r2, [r5, #16]
    aaa4:	add	r3, pc, #364	; 0x16c
    aaa8:	ldrd	r2, [r3]
    aaac:	strd	r2, [r5, #24]
    aab0:	add	r3, pc, #360	; 0x168
    aab4:	ldrd	r2, [r3]
    aab8:	strd	r2, [r5, #32]
    aabc:	add	r3, pc, #356	; 0x164
    aac0:	ldrd	r2, [r3]
    aac4:	strd	r2, [r5, #40]	; 0x28
    aac8:	add	r3, pc, #352	; 0x160
    aacc:	ldrd	r2, [r3]
    aad0:	strd	r2, [r5, #48]	; 0x30
    aad4:	bic	r7, sl, #127	; 0x7f
    aad8:	mov	r1, r7
    aadc:	ldr	r2, [fp, #-876]	; 0xfffffc94
    aae0:	mov	r0, r6
    aae4:	bl	6490 <rb_sha512_process_block>
    aae8:	ands	r2, sl, #127	; 0x7f
    aaec:	addne	r1, r6, r7
    aaf0:	beq	92e0 <rb_sha512_crypt_r+0x31c>
    aaf4:	b	92b4 <rb_sha512_crypt_r+0x2f0>
    aaf8:	sub	r8, fp, #636	; 0x27c
    aafc:	mov	r2, r4
    ab00:	mov	r0, r8
    ab04:	sub	r5, r5, #128	; 0x80
    ab08:	mov	r1, #128	; 0x80
    ab0c:	bl	6490 <rb_sha512_process_block>
    ab10:	mov	r0, r8
    ab14:	mov	r2, r5
    ab18:	sub	r1, fp, #508	; 0x1fc
    ab1c:	bl	4808 <memcpy@plt>
    ab20:	b	9194 <rb_sha512_crypt_r+0x1d0>
    ab24:	ldr	r2, [fp, #-872]	; 0xfffffc98
    ab28:	ldr	r3, [pc, #264]	; ac38 <rb_sha512_crypt_r+0x1c74>
    ab2c:	str	r2, [sp]
    ab30:	add	r3, pc, r3
    ab34:	ldr	r2, [pc, #256]	; ac3c <rb_sha512_crypt_r+0x1c78>
    ab38:	add	r3, r3, #2000	; 0x7d0
    ab3c:	bic	r1, r6, r6, asr #31
    ab40:	mov	r0, r5
    ab44:	add	r3, r3, #12
    ab48:	add	r2, pc, r2
    ab4c:	bl	4bb0 <snprintf@plt>
    ab50:	add	r5, r5, r0
    ab54:	sub	r6, r6, r0
    ab58:	b	9788 <rb_sha512_crypt_r+0x7c4>
    ab5c:	mov	r2, sl
    ab60:	mov	r1, r6
    ab64:	sub	r0, fp, #636	; 0x27c
    ab68:	bl	4808 <memcpy@plt>
    ab6c:	mov	r5, sl
    ab70:	b	9194 <rb_sha512_crypt_r+0x1d0>
    ab74:	bl	4ce8 <__errno_location@plt>
    ab78:	mov	r3, #34	; 0x22
    ab7c:	mov	r5, #0
    ab80:	str	r3, [r0]
    ab84:	b	a63c <rb_sha512_crypt_r+0x1678>
    ab88:	sub	r3, fp, #292	; 0x124
    ab8c:	mov	r8, r3
    ab90:	ldr	r2, [fp, #-876]	; 0xfffffc94
    ab94:	mov	r0, r8
    ab98:	sub	r7, r7, #128	; 0x80
    ab9c:	mov	r1, #128	; 0x80
    aba0:	bl	6490 <rb_sha512_process_block>
    aba4:	mov	r0, r8
    aba8:	mov	r2, r7
    abac:	sub	r1, fp, #164	; 0xa4
    abb0:	bl	4808 <memcpy@plt>
    abb4:	b	92d4 <rb_sha512_crypt_r+0x310>
    abb8:	sub	r8, fp, #636	; 0x27c
    abbc:	mov	r0, r8
    abc0:	mov	r2, sl
    abc4:	mov	r1, r6
    abc8:	bl	4808 <memcpy@plt>
    abcc:	mov	r5, sl
    abd0:	b	aafc <rb_sha512_crypt_r+0x1b38>
    abd4:	sub	r3, fp, #292	; 0x124
    abd8:	mov	r0, r3
    abdc:	mov	r2, sl
    abe0:	mov	r1, r6
    abe4:	mov	r8, r3
    abe8:	mov	r7, sl
    abec:	bl	4808 <memcpy@plt>
    abf0:	b	ab90 <rb_sha512_crypt_r+0x1bcc>
    abf4:	nop			; (mov r0, r0)
    abf8:	.word	0xf3bcc908
    abfc:	.word	0x6a09e667
    ac00:	.word	0x84caa73b
    ac04:	.word	0xbb67ae85
    ac08:	.word	0xfe94f82b
    ac0c:	.word	0x3c6ef372
    ac10:	.word	0x5f1d36f1
    ac14:	.word	0xa54ff53a
    ac18:	.word	0xade682d1
    ac1c:	.word	0x510e527f
    ac20:	.word	0x2b3e6c1f
    ac24:	.word	0x9b05688c
    ac28:	.word	0xfb41bd6b
    ac2c:	.word	0x1f83d9ab
    ac30:	.word	0x137e2179
    ac34:	.word	0x5be0cd19
    ac38:	.word	0x0000f6b0
    ac3c:	.word	0x0000fe90

0000ac40 <rb_crypt>:
    ac40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac44:	sub	sp, sp, #268	; 0x10c
    ac48:	ldrb	r3, [r1]
    ac4c:	str	r1, [sp, #24]
    ac50:	str	r0, [sp, #4]
    ac54:	cmp	r3, #36	; 0x24
    ac58:	beq	b53c <rb_crypt+0x8fc>
    ac5c:	bl	5018 <rb_des_init>
    ac60:	add	r1, sp, #176	; 0xb0
    ac64:	mov	r2, r1
    ac68:	ldr	r0, [sp, #4]
    ac6c:	b	ac88 <rb_crypt+0x48>
    ac70:	ldrb	r3, [r0]
    ac74:	lsl	r3, r3, #1
    ac78:	uxtb	r3, r3
    ac7c:	cmp	r3, #0
    ac80:	addne	r0, r0, #1
    ac84:	strb	r3, [r2], #1
    ac88:	sub	r3, r2, r1
    ac8c:	cmp	r3, #8
    ac90:	bne	ac70 <rb_crypt+0x30>
    ac94:	bl	5018 <rb_des_init>
    ac98:	ldr	r2, [sp, #176]	; 0xb0
    ac9c:	ldr	r1, [sp, #180]	; 0xb4
    aca0:	rev	r2, r2
    aca4:	rev	r1, r1
    aca8:	orrs	r3, r2, r1
    acac:	bne	afa8 <rb_crypt+0x368>
    acb0:	lsr	r3, r2, #17
    acb4:	lsr	r0, r1, #25
    acb8:	ldr	ip, [pc, #4048]	; bc90 <rb_crypt+0x1050>
    acbc:	and	r3, r3, #127	; 0x7f
    acc0:	lsr	lr, r2, #25
    acc4:	add	r0, r0, #512	; 0x200
    acc8:	add	ip, pc, ip
    accc:	lsr	r6, r2, #9
    acd0:	add	r3, r3, #128	; 0x80
    acd4:	add	lr, ip, lr, lsl #2
    acd8:	add	r0, ip, r0, lsl #2
    acdc:	and	r6, r6, #127	; 0x7f
    ace0:	lsr	r5, r2, #1
    ace4:	add	r3, ip, r3, lsl #2
    ace8:	add	r6, r6, #256	; 0x100
    acec:	and	r5, r5, #127	; 0x7f
    acf0:	ldr	sl, [lr, #-3228]	; 0xfffff364
    acf4:	ldr	r7, [r0, #-3228]	; 0xfffff364
    acf8:	lsr	r4, r1, #17
    acfc:	add	r5, r5, #384	; 0x180
    ad00:	ldr	r9, [lr, #868]	; 0x364
    ad04:	add	r6, ip, r6, lsl #2
    ad08:	ldr	r8, [r3, #-3228]	; 0xfffff364
    ad0c:	and	r4, r4, #127	; 0x7f
    ad10:	ldr	r0, [r0, #868]	; 0x364
    ad14:	lsr	lr, r1, #9
    ad18:	add	r5, ip, r5, lsl #2
    ad1c:	orr	r7, sl, r7
    ad20:	add	r4, r4, #640	; 0x280
    ad24:	and	lr, lr, #127	; 0x7f
    ad28:	ldr	r3, [r3, #868]	; 0x364
    ad2c:	orr	r0, r9, r0
    ad30:	orr	r7, r7, r8
    ad34:	add	lr, lr, #768	; 0x300
    ad38:	ldr	r8, [r6, #-3228]	; 0xfffff364
    ad3c:	lsr	r9, r1, #1
    ad40:	ldr	r6, [r6, #868]	; 0x364
    ad44:	add	r4, ip, r4, lsl #2
    ad48:	orr	r3, r0, r3
    ad4c:	and	r9, r9, #127	; 0x7f
    ad50:	ldr	r0, [r5, #-3228]	; 0xfffff364
    ad54:	ldr	r5, [r5, #868]	; 0x364
    ad58:	add	lr, ip, lr, lsl #2
    ad5c:	orr	r3, r3, r6
    ad60:	add	r9, r9, #896	; 0x380
    ad64:	ldr	r6, [r4, #-3228]	; 0xfffff364
    ad68:	orr	r5, r3, r5
    ad6c:	orr	r7, r7, r8
    ad70:	ldr	sl, [r4, #868]	; 0x364
    ad74:	ldr	r3, [pc, #3864]	; bc94 <rb_crypt+0x1054>
    ad78:	add	ip, ip, r9, lsl #2
    ad7c:	orr	r7, r7, r0
    ad80:	ldr	r9, [lr, #-3228]	; 0xfffff364
    ad84:	ldr	r0, [lr, #868]	; 0x364
    ad88:	add	r3, pc, r3
    ad8c:	orr	r7, r7, r6
    ad90:	orr	sl, r5, sl
    ad94:	ldr	r4, [pc, #3836]	; bc98 <rb_crypt+0x1058>
    ad98:	orr	fp, r7, r9
    ad9c:	ldr	r6, [ip, #-3228]	; 0xfffff364
    ada0:	ldr	r5, [ip, #868]	; 0x364
    ada4:	orr	sl, sl, r0
    ada8:	sub	lr, r3, #3136	; 0xc40
    adac:	ldr	r0, [pc, #3816]	; bc9c <rb_crypt+0x105c>
    adb0:	ldr	r7, [pc, #3816]	; bca0 <rb_crypt+0x1060>
    adb4:	sub	r9, r3, #2912	; 0xb60
    adb8:	sub	lr, lr, #12
    adbc:	add	r4, pc, r4
    adc0:	sub	ip, r3, #3200	; 0xc80
    adc4:	add	r0, pc, r0
    adc8:	add	r4, r4, #2016	; 0x7e0
    adcc:	sub	r3, r3, #2848	; 0xb20
    add0:	str	lr, [sp, #8]
    add4:	orr	fp, fp, r6
    add8:	sub	lr, r9, #12
    addc:	add	r7, pc, r7
    ade0:	orr	sl, sl, r5
    ade4:	add	r9, r9, #52	; 0x34
    ade8:	mov	r8, #0
    adec:	add	r4, r4, #4
    adf0:	sub	ip, ip, #12
    adf4:	add	r3, r3, #52	; 0x34
    adf8:	str	r4, [sp, #16]
    adfc:	str	lr, [sp, #20]
    ae00:	str	ip, [sp, #4]
    ae04:	str	r3, [sp, #12]
    ae08:	str	r2, [r0, #8]
    ae0c:	str	r1, [r0, #4]
    ae10:	ldr	r2, [sp, #16]
    ae14:	ldrb	r3, [r2], #1
    ae18:	add	r8, r8, r3
    ae1c:	rsb	r3, r8, #28
    ae20:	str	r2, [sp, #16]
    ae24:	lsr	r2, fp, r3
    ae28:	lsr	r3, sl, r3
    ae2c:	orr	r2, r2, fp, lsl r8
    ae30:	orr	r3, r3, sl, lsl r8
    ae34:	and	r5, r2, #127	; 0x7f
    ae38:	and	lr, r3, #127	; 0x7f
    ae3c:	add	r5, r5, #384	; 0x180
    ae40:	add	lr, lr, #896	; 0x380
    ae44:	lsr	r0, r2, #14
    ae48:	add	r5, r7, r5, lsl #2
    ae4c:	add	lr, r7, lr, lsl #2
    ae50:	lsr	ip, r2, #19
    ae54:	and	r0, r0, #127	; 0x7f
    ae58:	and	ip, ip, #508	; 0x1fc
    ae5c:	ldr	r6, [r5, #-3220]	; 0xfffff36c
    ae60:	add	ip, r7, ip
    ae64:	ldr	r4, [lr, #-3220]	; 0xfffff36c
    ae68:	ldr	r5, [r5, #876]	; 0x36c
    ae6c:	add	r0, r0, #128	; 0x80
    ae70:	lsr	r2, r2, #7
    ae74:	ldr	lr, [lr, #876]	; 0x36c
    ae78:	lsr	r1, r3, #21
    ae7c:	and	r2, r2, #127	; 0x7f
    ae80:	add	r0, r7, r0, lsl #2
    ae84:	orr	r4, r6, r4
    ae88:	orr	lr, r5, lr
    ae8c:	lsr	r6, r3, #14
    ae90:	ldr	r5, [ip, #-3220]	; 0xfffff36c
    ae94:	add	r2, r2, #256	; 0x100
    ae98:	and	r1, r1, #127	; 0x7f
    ae9c:	ldr	ip, [ip, #876]	; 0x36c
    aea0:	add	r1, r1, #512	; 0x200
    aea4:	and	r6, r6, #127	; 0x7f
    aea8:	lsr	r3, r3, #7
    aeac:	add	r2, r7, r2, lsl #2
    aeb0:	orr	r4, r4, r5
    aeb4:	add	r6, r6, #640	; 0x280
    aeb8:	ldr	r5, [r0, #-3220]	; 0xfffff36c
    aebc:	and	r3, r3, #127	; 0x7f
    aec0:	add	r1, r7, r1, lsl #2
    aec4:	orr	lr, lr, ip
    aec8:	add	r3, r3, #768	; 0x300
    aecc:	ldr	ip, [r0, #876]	; 0x36c
    aed0:	add	r6, r7, r6, lsl #2
    aed4:	orr	r4, r4, r5
    aed8:	ldr	r5, [r2, #-3220]	; 0xfffff36c
    aedc:	add	r3, r7, r3, lsl #2
    aee0:	orr	lr, lr, ip
    aee4:	ldr	ip, [r2, #876]	; 0x36c
    aee8:	ldr	r2, [r1, #-3220]	; 0xfffff36c
    aeec:	orr	r4, r4, r5
    aef0:	ldr	r0, [r6, #-3220]	; 0xfffff36c
    aef4:	orr	r4, r4, r2
    aef8:	ldr	r5, [r6, #876]	; 0x36c
    aefc:	ldr	r6, [r3, #-3220]	; 0xfffff36c
    af00:	ldr	r2, [sp, #20]
    af04:	orr	r4, r4, r0
    af08:	orr	r4, r4, r6
    af0c:	str	r4, [r9, #-4]!
    af10:	cmp	r9, r2
    af14:	ldr	r2, [sp, #8]
    af18:	ldr	r1, [r1, #876]	; 0x36c
    af1c:	orr	lr, lr, ip
    af20:	str	r4, [r2], #4
    af24:	orr	lr, lr, r1
    af28:	ldr	r3, [r3, #876]	; 0x36c
    af2c:	str	r2, [sp, #8]
    af30:	ldr	r2, [sp, #4]
    af34:	orr	lr, lr, r5
    af38:	orr	r3, lr, r3
    af3c:	str	r3, [r2], #4
    af40:	str	r2, [sp, #4]
    af44:	ldr	r2, [sp, #12]
    af48:	str	r3, [r2, #-4]!
    af4c:	str	r2, [sp, #12]
    af50:	bne	ae10 <rb_crypt+0x1d0>
    af54:	ldr	r3, [sp, #24]
    af58:	ldrb	r2, [r3, #1]
    af5c:	cmp	r2, #122	; 0x7a
    af60:	bhi	afcc <rb_crypt+0x38c>
    af64:	cmp	r2, #96	; 0x60
    af68:	subhi	r0, r2, #59	; 0x3b
    af6c:	lslhi	r0, r0, #6
    af70:	bhi	afd0 <rb_crypt+0x390>
    af74:	cmp	r2, #90	; 0x5a
    af78:	bhi	afcc <rb_crypt+0x38c>
    af7c:	cmp	r2, #64	; 0x40
    af80:	subhi	r0, r2, #53	; 0x35
    af84:	lslhi	r0, r0, #6
    af88:	bhi	afd0 <rb_crypt+0x390>
    af8c:	sub	r0, r2, #46	; 0x2e
    af90:	uxtb	r3, r0
    af94:	cmp	r3, #11
    af98:	bhi	bbdc <rb_crypt+0xf9c>
    af9c:	lsl	r0, r0, #6
    afa0:	ldr	r3, [sp, #24]
    afa4:	b	afd0 <rb_crypt+0x390>
    afa8:	ldr	r3, [pc, #3316]	; bca4 <rb_crypt+0x1064>
    afac:	add	r3, pc, r3
    afb0:	ldr	r0, [r3, #8]
    afb4:	cmp	r2, r0
    afb8:	bne	acb0 <rb_crypt+0x70>
    afbc:	ldr	r3, [r3, #4]
    afc0:	cmp	r1, r3
    afc4:	bne	acb0 <rb_crypt+0x70>
    afc8:	b	af54 <rb_crypt+0x314>
    afcc:	mov	r0, #0
    afd0:	ldrb	r3, [r3]
    afd4:	cmp	r3, #122	; 0x7a
    afd8:	bhi	b010 <rb_crypt+0x3d0>
    afdc:	cmp	r3, #96	; 0x60
    afe0:	subhi	ip, r3, #59	; 0x3b
    afe4:	bhi	b014 <rb_crypt+0x3d4>
    afe8:	cmp	r3, #90	; 0x5a
    afec:	bhi	b010 <rb_crypt+0x3d0>
    aff0:	cmp	r3, #64	; 0x40
    aff4:	subhi	ip, r3, #53	; 0x35
    aff8:	bhi	b014 <rb_crypt+0x3d4>
    affc:	sub	ip, r3, #46	; 0x2e
    b000:	uxtb	r1, ip
    b004:	cmp	r1, #11
    b008:	movhi	ip, #0
    b00c:	b	b014 <rb_crypt+0x3d4>
    b010:	mov	ip, #0
    b014:	ldr	r5, [pc, #3212]	; bca8 <rb_crypt+0x1068>
    b018:	ldr	r1, [pc, #3212]	; bcac <rb_crypt+0x106c>
    b01c:	add	r5, pc, r5
    b020:	add	r1, pc, r1
    b024:	orr	r0, ip, r0
    b028:	ldr	ip, [r5, #16]
    b02c:	cmp	r2, #0
    b030:	strb	r3, [r1, #-2964]	; 0xfffff46c
    b034:	movne	r3, r2
    b038:	cmp	r0, ip
    b03c:	strb	r3, [r1, #-2963]	; 0xfffff46d
    b040:	beq	b57c <rb_crypt+0x93c>
    b044:	mov	r1, #0
    b048:	mov	ip, r1
    b04c:	mov	r3, #1
    b050:	str	r1, [r5, #12]
    b054:	mov	lr, r1
    b058:	str	r0, [r5, #16]
    b05c:	mov	r4, r3
    b060:	mov	r2, #24
    b064:	mov	r1, #8388608	; 0x800000
    b068:	mov	r5, ip
    b06c:	tst	r3, r0
    b070:	orrne	r5, r5, r1
    b074:	movne	lr, r5
    b078:	movne	ip, r4
    b07c:	subs	r2, r2, #1
    b080:	lsl	r3, r3, #1
    b084:	lsr	r1, r1, #1
    b088:	bne	b06c <rb_crypt+0x42c>
    b08c:	cmp	ip, #0
    b090:	str	r5, [sp, #40]	; 0x28
    b094:	bne	c8d8 <rb_crypt+0x1c98>
    b098:	ldr	r3, [pc, #3088]	; bcb0 <rb_crypt+0x1070>
    b09c:	ldr	r2, [pc, #3088]	; bcb4 <rb_crypt+0x1074>
    b0a0:	add	r3, pc, r3
    b0a4:	add	r1, r3, #4096	; 0x1000
    b0a8:	ldr	r0, [r3, #1828]	; 0x724
    b0ac:	ldr	lr, [r3, #804]	; 0x324
    b0b0:	ldr	r4, [r3, #2852]	; 0xb24
    b0b4:	add	r2, pc, r2
    b0b8:	ldr	ip, [r3, #3876]	; 0xf24
    b0bc:	orr	lr, lr, r0
    b0c0:	orr	lr, lr, r4
    b0c4:	ldr	r4, [r1, #804]	; 0x324
    b0c8:	ldr	r0, [r2, #1820]	; 0x71c
    b0cc:	ldr	r7, [r2, #796]	; 0x31c
    b0d0:	orr	lr, lr, ip
    b0d4:	ldr	ip, [r1, #1828]	; 0x724
    b0d8:	add	r3, r2, #4096	; 0x1000
    b0dc:	ldr	r5, [r2, #2844]	; 0xb1c
    b0e0:	orr	lr, lr, r4
    b0e4:	ldr	r4, [r1, #2852]	; 0xb24
    b0e8:	orr	r7, r7, r0
    b0ec:	orr	lr, lr, ip
    b0f0:	ldr	r0, [r2, #3868]	; 0xf1c
    b0f4:	ldr	ip, [r1, #3876]	; 0xf24
    b0f8:	ldr	r2, [r3, #796]	; 0x31c
    b0fc:	orr	r7, r7, r5
    b100:	orr	lr, lr, r4
    b104:	orr	lr, lr, ip
    b108:	orr	r7, r7, r0
    b10c:	ldr	r0, [r3, #1820]	; 0x71c
    b110:	orr	r7, r7, r2
    b114:	orr	r7, r7, r0
    b118:	lsl	r0, lr, #23
    b11c:	ldr	r2, [pc, #2964]	; bcb8 <rb_crypt+0x1078>
    b120:	str	r0, [sp, #32]
    b124:	lsr	r0, lr, #9
    b128:	ldr	r1, [r3, #2844]	; 0xb1c
    b12c:	str	r0, [sp, #16]
    b130:	lsr	r0, lr, #11
    b134:	add	r2, pc, r2
    b138:	ldr	r3, [r3, #3868]	; 0xf1c
    b13c:	str	r0, [sp, #20]
    b140:	lsr	r0, lr, #13
    b144:	orr	r7, r7, r1
    b148:	str	r0, [sp, #24]
    b14c:	sub	r1, r2, #3200	; 0xc80
    b150:	lsr	r0, lr, #15
    b154:	ldr	r5, [pc, #2912]	; bcbc <rb_crypt+0x107c>
    b158:	ldr	r4, [pc, #2912]	; bcc0 <rb_crypt+0x1080>
    b15c:	str	r0, [sp, #28]
    b160:	orr	r7, r7, r3
    b164:	lsl	r0, lr, #7
    b168:	add	r3, r1, #52	; 0x34
    b16c:	ldr	r9, [pc, #2896]	; bcc4 <rb_crypt+0x1084>
    b170:	str	r0, [sp, #12]
    b174:	str	r3, [sp, #44]	; 0x2c
    b178:	lsl	r0, lr, #5
    b17c:	sub	r3, r2, #3136	; 0xc40
    b180:	lsl	fp, lr, #3
    b184:	lsl	sl, lr, #1
    b188:	add	r5, pc, r5
    b18c:	add	r4, pc, r4
    b190:	str	r0, [sp, #8]
    b194:	str	r3, [sp, #56]	; 0x38
    b198:	lsr	r0, lr, #31
    b19c:	mov	r3, #25
    b1a0:	str	r1, [sp, #52]	; 0x34
    b1a4:	str	r0, [sp, #36]	; 0x24
    b1a8:	str	r2, [sp, #60]	; 0x3c
    b1ac:	str	r3, [sp, #48]	; 0x30
    b1b0:	ldr	r3, [sp, #52]	; 0x34
    b1b4:	sub	r6, r3, #12
    b1b8:	ldr	r3, [sp, #56]	; 0x38
    b1bc:	sub	r8, r3, #12
    b1c0:	str	r8, [sp, #4]
    b1c4:	ldr	r8, [sp, #40]	; 0x28
    b1c8:	b	b218 <rb_crypt+0x5d8>
    b1cc:	lsl	r3, r0, #23
    b1d0:	str	r3, [sp, #32]
    b1d4:	lsr	r3, r0, #9
    b1d8:	str	r3, [sp, #16]
    b1dc:	lsr	r3, r0, #11
    b1e0:	str	r3, [sp, #20]
    b1e4:	lsr	r3, r0, #13
    b1e8:	str	r3, [sp, #24]
    b1ec:	lsr	r3, r0, #15
    b1f0:	str	r3, [sp, #28]
    b1f4:	lsl	r3, r0, #7
    b1f8:	str	r3, [sp, #12]
    b1fc:	mov	lr, r0
    b200:	lsl	r3, r0, #5
    b204:	lsl	fp, r0, #3
    b208:	lsl	sl, r0, #1
    b20c:	str	r3, [sp, #8]
    b210:	lsr	r3, r0, #31
    b214:	str	r3, [sp, #36]	; 0x24
    b218:	ldr	r3, [sp, #32]
    b21c:	ldr	r1, [sp, #20]
    b220:	and	r0, r3, #8388608	; 0x800000
    b224:	ldr	r3, [sp, #16]
    b228:	and	r2, r3, #8126464	; 0x7c0000
    b22c:	ldr	r3, [sp, #12]
    b230:	orr	r2, r0, r2
    b234:	and	ip, r3, #16515072	; 0xfc0000
    b238:	ldr	r3, [sp, #8]
    b23c:	and	r0, r1, #258048	; 0x3f000
    b240:	and	r3, r3, #258048	; 0x3f000
    b244:	orr	ip, ip, r3
    b248:	ldr	r3, [sp, #24]
    b24c:	orr	r1, r2, r0
    b250:	and	r2, r3, #4032	; 0xfc0
    b254:	ldr	r3, [sp, #36]	; 0x24
    b258:	orr	r0, r1, r2
    b25c:	orr	ip, ip, r3
    b260:	and	r3, fp, #4032	; 0xfc0
    b264:	orr	r1, ip, r3
    b268:	and	r3, sl, #62	; 0x3e
    b26c:	orr	r3, r1, r3
    b270:	ldr	r1, [sp, #4]
    b274:	ldr	r2, [sp, #28]
    b278:	ldr	ip, [r1], #4
    b27c:	and	r2, r2, #63	; 0x3f
    b280:	orr	r2, r0, r2
    b284:	str	r1, [sp, #4]
    b288:	ldr	r0, [r6], #4
    b28c:	eor	r1, r2, r3
    b290:	and	r1, r1, r8
    b294:	eor	r2, r2, ip
    b298:	eor	r2, r2, r1
    b29c:	eor	r3, r3, r0
    b2a0:	eor	r1, r1, r3
    b2a4:	and	ip, r2, r9
    b2a8:	add	ip, r4, ip
    b2ac:	add	r0, r4, r1, lsr #12
    b2b0:	add	ip, ip, #4608	; 0x1200
    b2b4:	add	r2, r4, r2, lsr #12
    b2b8:	add	r0, r0, #8704	; 0x2200
    b2bc:	and	r1, r1, r9
    b2c0:	add	r1, r4, r1
    b2c4:	ldrb	ip, [ip, #20]
    b2c8:	ldrb	r2, [r2, #532]	; 0x214
    b2cc:	ldrb	r3, [r0, #20]
    b2d0:	add	r1, r1, #12800	; 0x3200
    b2d4:	add	ip, r5, ip, lsl #2
    b2d8:	ldrb	r1, [r1, #20]
    b2dc:	add	r2, r5, r2, lsl #2
    b2e0:	add	r3, r5, r3, lsl #2
    b2e4:	ldr	r0, [ip, #1884]	; 0x75c
    b2e8:	ldr	r2, [r2, #860]	; 0x35c
    b2ec:	ldr	r3, [r3, #2908]	; 0xb5c
    b2f0:	add	r1, r5, r1, lsl #2
    b2f4:	orr	r0, r2, r0
    b2f8:	orr	r0, r0, r3
    b2fc:	ldr	r1, [r1, #3932]	; 0xf5c
    b300:	ldr	r3, [sp, #44]	; 0x2c
    b304:	orr	r0, r0, r1
    b308:	cmp	r6, r3
    b30c:	eor	r0, r0, r7
    b310:	mov	r7, lr
    b314:	bne	b1cc <rb_crypt+0x58c>
    b318:	ldr	r3, [sp, #48]	; 0x30
    b31c:	mov	r7, r0
    b320:	subs	r3, r3, #1
    b324:	str	r3, [sp, #48]	; 0x30
    b328:	bne	b1b0 <rb_crypt+0x570>
    b32c:	uxtb	r3, r0
    b330:	add	r3, r3, #768	; 0x300
    b334:	lsr	r9, r0, #24
    b338:	lsr	r8, lr, #24
    b33c:	ldr	r2, [pc, #2436]	; bcc8 <rb_crypt+0x1088>
    b340:	add	r8, r8, #1024	; 0x400
    b344:	add	r2, pc, r2
    b348:	lsl	r7, r3, #2
    b34c:	lsr	r5, r0, #16
    b350:	lsl	r9, r9, #2
    b354:	add	sl, r2, r7
    b358:	add	r3, r2, r9
    b35c:	lsl	r8, r8, #2
    b360:	ldr	ip, [pc, #2404]	; bccc <rb_crypt+0x108c>
    b364:	uxtb	r6, lr
    b368:	lsr	r4, r0, #8
    b36c:	lsr	r1, lr, #8
    b370:	lsr	r0, lr, #16
    b374:	uxtb	r5, r5
    b378:	add	lr, r2, r8
    b37c:	add	ip, pc, ip
    b380:	ldr	sl, [sl, #820]	; 0x334
    b384:	ldr	r3, [r3, #820]	; 0x334
    b388:	add	r6, r6, #1792	; 0x700
    b38c:	add	r5, r5, #256	; 0x100
    b390:	ldr	lr, [lr, #820]	; 0x334
    b394:	add	r7, ip, r7
    b398:	add	r9, ip, r9
    b39c:	uxtb	r4, r4
    b3a0:	lsl	r6, r6, #2
    b3a4:	lsl	r5, r5, #2
    b3a8:	add	r8, ip, r8
    b3ac:	orr	r3, r3, sl
    b3b0:	add	r4, r4, #512	; 0x200
    b3b4:	uxtb	r0, r0
    b3b8:	add	sl, r2, r6
    b3bc:	ldr	r9, [r9, #812]	; 0x32c
    b3c0:	ldr	r7, [r7, #812]	; 0x32c
    b3c4:	orr	r3, r3, lr
    b3c8:	add	r0, r0, #1280	; 0x500
    b3cc:	add	lr, r2, r5
    b3d0:	uxtb	r1, r1
    b3d4:	ldr	r8, [r8, #812]	; 0x32c
    b3d8:	lsl	r4, r4, #2
    b3dc:	add	r6, ip, r6
    b3e0:	add	r1, r1, #1536	; 0x600
    b3e4:	ldr	fp, [sl, #820]	; 0x334
    b3e8:	lsl	r0, r0, #2
    b3ec:	ldr	sl, [lr, #820]	; 0x334
    b3f0:	orr	r7, r9, r7
    b3f4:	add	lr, r2, r4
    b3f8:	add	r5, ip, r5
    b3fc:	ldr	r6, [r6, #812]	; 0x32c
    b400:	lsl	r1, r1, #2
    b404:	add	r4, ip, r4
    b408:	orr	r7, r7, r8
    b40c:	add	r8, r2, r0
    b410:	ldr	lr, [lr, #820]	; 0x334
    b414:	ldr	r5, [r5, #812]	; 0x32c
    b418:	orr	r3, r3, fp
    b41c:	add	r2, r2, r1
    b420:	add	r0, ip, r0
    b424:	ldr	r9, [r8, #820]	; 0x334
    b428:	orr	r7, r7, r6
    b42c:	ldr	r4, [r4, #812]	; 0x32c
    b430:	add	r1, ip, r1
    b434:	orr	sl, r3, sl
    b438:	ldr	r2, [r2, #820]	; 0x334
    b43c:	orr	r3, r7, r5
    b440:	ldr	r0, [r0, #812]	; 0x32c
    b444:	orr	sl, sl, lr
    b448:	orr	r3, r3, r4
    b44c:	ldr	lr, [r1, #812]	; 0x32c
    b450:	orr	r9, sl, r9
    b454:	orr	r9, r9, r2
    b458:	orr	r3, r3, r0
    b45c:	orr	lr, r3, lr
    b460:	lsr	r5, r9, #16
    b464:	ldr	r1, [pc, #2148]	; bcd0 <rb_crypt+0x1090>
    b468:	orr	r5, r5, lr, lsl #16
    b46c:	lsl	r0, lr, #6
    b470:	add	r1, pc, r1
    b474:	lsl	r6, lr, #12
    b478:	add	r0, r1, r0, lsr #26
    b47c:	lsl	ip, r5, #14
    b480:	lsl	r4, lr, #18
    b484:	lsl	r2, r5, #8
    b488:	lsl	r7, r5, #20
    b48c:	add	lr, r1, lr, lsr #26
    b490:	add	r6, r1, r6, lsr #26
    b494:	lsl	r3, r9, #2
    b498:	add	ip, r1, ip, lsr #26
    b49c:	ldrb	r8, [r0, #1940]	; 0x794
    b4a0:	add	r4, r1, r4, lsr #26
    b4a4:	ldrb	lr, [lr, #1940]	; 0x794
    b4a8:	add	r2, r1, r2, lsr #26
    b4ac:	add	r7, r1, r7, lsr #26
    b4b0:	ldrb	r6, [r6, #1940]	; 0x794
    b4b4:	and	r5, r5, #63	; 0x3f
    b4b8:	ldrb	r9, [ip, #1940]	; 0x794
    b4bc:	ldrb	r4, [r4, #1940]	; 0x794
    b4c0:	add	r5, r1, r5
    b4c4:	lsl	ip, r3, #14
    b4c8:	lsl	r0, r3, #20
    b4cc:	ldrb	r2, [r2, #1940]	; 0x794
    b4d0:	ldrb	r7, [r7, #1940]	; 0x794
    b4d4:	and	r3, r3, #63	; 0x3f
    b4d8:	add	ip, r1, ip, lsr #26
    b4dc:	add	r0, r1, r0, lsr #26
    b4e0:	ldrb	r5, [r5, #1940]	; 0x794
    b4e4:	add	r1, r1, r3
    b4e8:	orr	r3, lr, r8, lsl #8
    b4ec:	orr	r3, r3, r6, lsl #16
    b4f0:	ldrb	lr, [ip, #1940]	; 0x794
    b4f4:	orr	r3, r3, r4, lsl #24
    b4f8:	ldrb	ip, [r0, #1940]	; 0x794
    b4fc:	ldr	r4, [sp, #60]	; 0x3c
    b500:	orr	r2, r2, r9, lsl #8
    b504:	ldrb	r1, [r1, #1940]	; 0x794
    b508:	orr	r2, r2, r7, lsl #16
    b50c:	orr	r2, r2, r5, lsl #24
    b510:	str	r3, [r4, #-2962]	; 0xfffff46e
    b514:	sub	r0, r4, #2960	; 0xb90
    b518:	str	r2, [r4, #-2958]	; 0xfffff472
    b51c:	strb	lr, [r4, #-2954]	; 0xfffff476
    b520:	strb	ip, [r4, #-2953]	; 0xfffff477
    b524:	strb	r1, [r4, #-2952]	; 0xfffff478
    b528:	ldrb	r3, [sp, #48]	; 0x30
    b52c:	sub	r0, r0, #4
    b530:	strb	r3, [r4, #-2951]	; 0xfffff479
    b534:	add	sp, sp, #268	; 0x10c
    b538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b53c:	ldrb	r3, [r1, #2]
    b540:	cmp	r3, #36	; 0x24
    b544:	beq	b554 <rb_crypt+0x914>
    b548:	ldrb	r3, [r1, #3]
    b54c:	cmp	r3, #36	; 0x24
    b550:	bne	ac5c <rb_crypt+0x1c>
    b554:	ldr	r3, [sp, #24]
    b558:	ldrb	r3, [r3, #1]
    b55c:	cmp	r3, #53	; 0x35
    b560:	beq	b588 <rb_crypt+0x948>
    b564:	cmp	r3, #54	; 0x36
    b568:	beq	ba98 <rb_crypt+0xe58>
    b56c:	cmp	r3, #49	; 0x31
    b570:	beq	b5b8 <rb_crypt+0x978>
    b574:	mov	r0, #0
    b578:	b	b534 <rb_crypt+0x8f4>
    b57c:	ldr	r3, [r5, #12]
    b580:	str	r3, [sp, #40]	; 0x28
    b584:	b	b098 <rb_crypt+0x458>
    b588:	ldr	r0, [sp, #24]
    b58c:	bl	47e4 <strlen@plt>
    b590:	add	r4, r0, #66	; 0x42
    b594:	mov	r0, r4
    b598:	bl	49ac <malloc@plt>
    b59c:	subs	r2, r0, #0
    b5a0:	beq	b574 <rb_crypt+0x934>
    b5a4:	mov	r3, r4
    b5a8:	ldr	r1, [sp, #24]
    b5ac:	ldr	r0, [sp, #4]
    b5b0:	bl	8038 <rb_sha256_crypt_r>
    b5b4:	b	b534 <rb_crypt+0x8f4>
    b5b8:	ldr	r4, [pc, #1812]	; bcd4 <rb_crypt+0x1094>
    b5bc:	ldr	r5, [sp, #24]
    b5c0:	ldr	r1, [pc, #1808]	; bcd8 <rb_crypt+0x1098>
    b5c4:	add	r4, pc, r4
    b5c8:	mov	r2, #3
    b5cc:	add	r1, pc, r1
    b5d0:	mov	r0, r5
    b5d4:	str	r5, [r4, #-2940]	; 0xfffff484
    b5d8:	bl	4c10 <strncmp@plt>
    b5dc:	cmp	r0, #0
    b5e0:	beq	baf0 <rb_crypt+0xeb0>
    b5e4:	mov	r8, r5
    b5e8:	mov	r3, #0
    b5ec:	str	r3, [sp, #28]
    b5f0:	str	r5, [r4, #-2936]	; 0xfffff488
    b5f4:	str	r3, [sp, #24]
    b5f8:	str	r3, [sp, #20]
    b5fc:	ldr	r0, [pc, #1800]	; bd0c <rb_crypt+0x10cc>
    b600:	ldr	r3, [pc, #1808]	; bd18 <rb_crypt+0x10d8>
    b604:	ldr	r1, [pc, #1796]	; bd10 <rb_crypt+0x10d0>
    b608:	ldr	r2, [pc, #1796]	; bd14 <rb_crypt+0x10d4>
    b60c:	mov	r5, #0
    b610:	str	r0, [sp, #88]	; 0x58
    b614:	ldr	r0, [sp, #4]
    b618:	str	r3, [sp, #100]	; 0x64
    b61c:	str	r1, [sp, #92]	; 0x5c
    b620:	str	r2, [sp, #96]	; 0x60
    b624:	str	r5, [sp, #108]	; 0x6c
    b628:	str	r5, [sp, #104]	; 0x68
    b62c:	bl	47e4 <strlen@plt>
    b630:	lsl	r6, r0, #3
    b634:	lsr	r3, r0, #29
    b638:	cmp	r0, #63	; 0x3f
    b63c:	mov	r4, r0
    b640:	str	r6, [sp, #104]	; 0x68
    b644:	str	r3, [sp, #108]	; 0x6c
    b648:	bhi	c698 <rb_crypt+0x1a58>
    b64c:	add	r3, sp, #112	; 0x70
    b650:	mov	r1, r5
    b654:	mov	r0, r3
    b658:	add	r5, sp, #88	; 0x58
    b65c:	str	r3, [sp, #8]
    b660:	ldr	r3, [sp, #4]
    b664:	sub	r2, r4, r1
    b668:	add	r1, r3, r1
    b66c:	bl	4808 <memcpy@plt>
    b670:	add	r2, r6, #24
    b674:	cmp	r2, #23
    b678:	str	r2, [sp, #104]	; 0x68
    b67c:	lsr	r3, r6, #3
    b680:	ldrls	r2, [sp, #108]	; 0x6c
    b684:	and	r3, r3, #63	; 0x3f
    b688:	addls	r2, r2, #1
    b68c:	rsb	r4, r3, #64	; 0x40
    b690:	strls	r2, [sp, #108]	; 0x6c
    b694:	cmp	r4, #3
    b698:	bls	bbe8 <rb_crypt+0xfa8>
    b69c:	ldr	r1, [pc, #1592]	; bcdc <rb_crypt+0x109c>
    b6a0:	add	r3, r3, #24
    b6a4:	mov	r2, #3
    b6a8:	add	r1, pc, r1
    b6ac:	add	r0, r5, r3
    b6b0:	bl	4808 <memcpy@plt>
    b6b4:	ldr	r3, [sp, #104]	; 0x68
    b6b8:	ldr	r1, [sp, #24]
    b6bc:	add	r2, r3, r1
    b6c0:	lsr	r3, r3, #3
    b6c4:	and	r4, r3, #63	; 0x3f
    b6c8:	ldr	r3, [sp, #108]	; 0x6c
    b6cc:	cmp	r2, r1
    b6d0:	str	r2, [sp, #104]	; 0x68
    b6d4:	ldr	r2, [sp, #28]
    b6d8:	addcc	r3, r3, #1
    b6dc:	add	r3, r2, r3
    b6e0:	ldr	r2, [sp, #20]
    b6e4:	rsb	r6, r4, #64	; 0x40
    b6e8:	cmp	r6, r2
    b6ec:	str	r3, [sp, #108]	; 0x6c
    b6f0:	add	r0, r4, #24
    b6f4:	movhi	r6, #0
    b6f8:	movhi	r3, r2
    b6fc:	bls	c638 <rb_crypt+0x19f8>
    b700:	sub	r2, r3, r6
    b704:	add	r1, r8, r6
    b708:	add	r0, r5, r0
    b70c:	bl	4808 <memcpy@plt>
    b710:	ldr	r0, [pc, #1524]	; bd0c <rb_crypt+0x10cc>
    b714:	ldr	r1, [pc, #1524]	; bd10 <rb_crypt+0x10d0>
    b718:	ldr	r2, [pc, #1524]	; bd14 <rb_crypt+0x10d4>
    b71c:	ldr	r3, [pc, #1524]	; bd18 <rb_crypt+0x10d8>
    b720:	mov	r4, #0
    b724:	str	r0, [sp, #176]	; 0xb0
    b728:	ldr	r0, [sp, #4]
    b72c:	str	r1, [sp, #180]	; 0xb4
    b730:	str	r2, [sp, #184]	; 0xb8
    b734:	str	r3, [sp, #188]	; 0xbc
    b738:	str	r4, [sp, #196]	; 0xc4
    b73c:	str	r4, [sp, #192]	; 0xc0
    b740:	bl	47e4 <strlen@plt>
    b744:	lsl	r6, r0, #3
    b748:	lsr	sl, r0, #29
    b74c:	cmp	r0, #63	; 0x3f
    b750:	mov	r9, r0
    b754:	str	r6, [sp, #192]	; 0xc0
    b758:	str	sl, [sp, #196]	; 0xc4
    b75c:	bhi	c818 <rb_crypt+0x1bd8>
    b760:	mov	r1, r4
    b764:	add	r7, sp, #200	; 0xc8
    b768:	add	r4, sp, #176	; 0xb0
    b76c:	ldr	r3, [sp, #4]
    b770:	sub	r2, r9, r1
    b774:	mov	r0, r7
    b778:	add	r1, r3, r1
    b77c:	bl	4808 <memcpy@plt>
    b780:	ldr	r2, [sp, #24]
    b784:	add	r3, r2, r6
    b788:	cmp	r3, r2
    b78c:	str	r3, [sp, #192]	; 0xc0
    b790:	ldr	r3, [sp, #28]
    b794:	addcc	sl, sl, #1
    b798:	lsr	r6, r6, #3
    b79c:	and	r6, r6, #63	; 0x3f
    b7a0:	add	sl, r3, sl
    b7a4:	ldr	r3, [sp, #20]
    b7a8:	rsb	r9, r6, #64	; 0x40
    b7ac:	cmp	r9, r3
    b7b0:	add	r0, r6, #24
    b7b4:	str	sl, [sp, #196]	; 0xc4
    b7b8:	movhi	r9, #0
    b7bc:	bls	c7b8 <rb_crypt+0x1b78>
    b7c0:	add	r1, r8, r9
    b7c4:	sub	r2, r3, r9
    b7c8:	add	r0, r4, r0
    b7cc:	bl	4808 <memcpy@plt>
    b7d0:	ldr	r0, [sp, #4]
    b7d4:	bl	47e4 <strlen@plt>
    b7d8:	ldr	r3, [sp, #192]	; 0xc0
    b7dc:	lsl	r1, r0, #3
    b7e0:	add	r2, r3, r1
    b7e4:	lsr	r3, r3, #3
    b7e8:	and	r6, r3, #63	; 0x3f
    b7ec:	ldr	r3, [sp, #196]	; 0xc4
    b7f0:	cmp	r1, r2
    b7f4:	mov	r9, r0
    b7f8:	addhi	r3, r3, #1
    b7fc:	rsb	r8, r6, #64	; 0x40
    b800:	add	r3, r3, r0, lsr #29
    b804:	cmp	r9, r8
    b808:	str	r2, [sp, #192]	; 0xc0
    b80c:	add	r0, r6, #24
    b810:	str	r3, [sp, #196]	; 0xc4
    b814:	movcc	r8, #0
    b818:	bcs	c760 <rb_crypt+0x1b20>
    b81c:	ldr	r3, [sp, #4]
    b820:	sub	r2, r9, r8
    b824:	add	r1, r3, r8
    b828:	add	r0, r4, r0
    b82c:	bl	4808 <memcpy@plt>
    b830:	ldr	r2, [sp, #192]	; 0xc0
    b834:	add	r3, sp, #192	; 0xc0
    b838:	mov	r1, r3
    b83c:	str	r3, [sp, #16]
    b840:	lsr	r3, r2, #3
    b844:	and	r3, r3, #63	; 0x3f
    b848:	ldm	r1, {r0, r1}
    b84c:	cmp	r3, #55	; 0x37
    b850:	rsbls	r9, r3, #56	; 0x38
    b854:	rsbhi	r9, r3, #120	; 0x78
    b858:	add	sl, sp, #72	; 0x48
    b85c:	rsb	r8, r3, #64	; 0x40
    b860:	stm	sl, {r0, r1}
    b864:	lsl	r1, r9, #3
    b868:	add	r2, r2, r1
    b86c:	cmp	r1, r2
    b870:	str	r2, [sp, #192]	; 0xc0
    b874:	ldrhi	r2, [sp, #196]	; 0xc4
    b878:	addhi	r2, r2, #1
    b87c:	strhi	r2, [sp, #196]	; 0xc4
    b880:	cmp	r9, r8
    b884:	bcs	c72c <rb_crypt+0x1aec>
    b888:	ldr	r1, [pc, #1104]	; bce0 <rb_crypt+0x10a0>
    b88c:	add	r3, r3, #24
    b890:	add	r1, pc, r1
    b894:	mov	r8, #0
    b898:	sub	r2, r9, r8
    b89c:	add	r0, r4, r3
    b8a0:	bl	4808 <memcpy@plt>
    b8a4:	ldr	r3, [sp, #192]	; 0xc0
    b8a8:	add	r2, r3, #64	; 0x40
    b8ac:	cmp	r2, #63	; 0x3f
    b8b0:	str	r2, [sp, #192]	; 0xc0
    b8b4:	lsr	r3, r3, #3
    b8b8:	ldrls	r2, [sp, #196]	; 0xc4
    b8bc:	and	r3, r3, #63	; 0x3f
    b8c0:	addls	r2, r2, #1
    b8c4:	rsb	r6, r3, #64	; 0x40
    b8c8:	strls	r2, [sp, #196]	; 0xc4
    b8cc:	cmp	r6, #8
    b8d0:	add	r3, r3, #24
    b8d4:	movhi	r2, #8
    b8d8:	movhi	r1, sl
    b8dc:	bhi	b908 <rb_crypt+0xcc8>
    b8e0:	add	r0, r4, r3
    b8e4:	mov	r2, r6
    b8e8:	mov	r1, sl
    b8ec:	bl	4808 <memcpy@plt>
    b8f0:	mov	r1, r7
    b8f4:	mov	r0, r4
    b8f8:	bl	6dfc <MD5Transform>
    b8fc:	add	r1, sl, r6
    b900:	rsb	r2, r6, #8
    b904:	mov	r3, #24
    b908:	add	r0, r4, r3
    b90c:	bl	4808 <memcpy@plt>
    b910:	ldm	r4, {r0, r1, r2, r3}
    b914:	stm	sl, {r0, r1, r2, r3}
    b918:	mov	r2, #88	; 0x58
    b91c:	mov	r1, #0
    b920:	mov	r0, r4
    b924:	bl	4628 <memset@plt>
    b928:	ldr	r0, [sp, #4]
    b92c:	bl	47e4 <strlen@plt>
    b930:	subs	r6, r0, #0
    b934:	ble	b998 <rb_crypt+0xd58>
    b938:	cmp	r6, #16
    b93c:	movlt	r8, r6
    b940:	movge	r8, #16
    b944:	ldr	r3, [sp, #104]	; 0x68
    b948:	lsl	ip, r8, #3
    b94c:	add	r0, r3, ip
    b950:	cmp	ip, r0
    b954:	lsr	r3, r3, #3
    b958:	ldrhi	ip, [sp, #108]	; 0x6c
    b95c:	and	r3, r3, #63	; 0x3f
    b960:	addhi	ip, ip, #1
    b964:	rsb	r9, r3, #64	; 0x40
    b968:	str	r0, [sp, #104]	; 0x68
    b96c:	strhi	ip, [sp, #108]	; 0x6c
    b970:	add	r0, r3, #24
    b974:	cmp	r8, r9
    b978:	mov	r2, r8
    b97c:	mov	r1, sl
    b980:	add	r0, r5, r0
    b984:	bcs	bc20 <rb_crypt+0xfe0>
    b988:	sub	r6, r6, #16
    b98c:	bl	4808 <memcpy@plt>
    b990:	cmp	r6, #0
    b994:	bgt	b938 <rb_crypt+0xcf8>
    b998:	mov	r8, #0
    b99c:	str	r8, [sp, #72]	; 0x48
    b9a0:	ldr	r0, [sp, #4]
    b9a4:	str	r8, [sl, #4]
    b9a8:	str	r8, [sl, #8]
    b9ac:	str	r8, [sl, #12]
    b9b0:	bl	47e4 <strlen@plt>
    b9b4:	subs	fp, r0, #0
    b9b8:	beq	bd44 <rb_crypt+0x1104>
    b9bc:	add	r3, sp, #73	; 0x49
    b9c0:	str	r3, [sp, #12]
    b9c4:	mov	r3, r7
    b9c8:	mov	r6, #1
    b9cc:	mov	r7, r4
    b9d0:	mov	r9, #24
    b9d4:	mov	r4, fp
    b9d8:	mov	fp, r3
    b9dc:	b	ba24 <rb_crypt+0xde4>
    b9e0:	add	r1, r2, #8
    b9e4:	cmp	r1, #7
    b9e8:	str	r1, [sp, #104]	; 0x68
    b9ec:	ldrls	r1, [sp, #108]	; 0x6c
    b9f0:	lsr	r2, r2, #3
    b9f4:	addls	r1, r1, #1
    b9f8:	and	r2, r2, #63	; 0x3f
    b9fc:	strls	r1, [sp, #108]	; 0x6c
    ba00:	cmp	r2, #63	; 0x3f
    ba04:	beq	bc64 <rb_crypt+0x1024>
    ba08:	add	r0, r2, #24
    ba0c:	mov	r1, sl
    ba10:	mov	r2, r6
    ba14:	add	r0, r5, r0
    ba18:	bl	4808 <memcpy@plt>
    ba1c:	lsrs	r4, r4, #1
    ba20:	beq	bd3c <rb_crypt+0x10fc>
    ba24:	ands	r1, r4, #1
    ba28:	ldr	r2, [sp, #104]	; 0x68
    ba2c:	bne	b9e0 <rb_crypt+0xda0>
    ba30:	add	r0, r2, #8
    ba34:	cmp	r0, #7
    ba38:	str	r0, [sp, #104]	; 0x68
    ba3c:	ldrls	r0, [sp, #108]	; 0x6c
    ba40:	lsr	r2, r2, #3
    ba44:	and	r2, r2, #63	; 0x3f
    ba48:	addls	r0, r0, #1
    ba4c:	strls	r0, [sp, #108]	; 0x6c
    ba50:	cmp	r2, #63	; 0x3f
    ba54:	addne	r0, r2, #24
    ba58:	movne	r2, r6
    ba5c:	bne	ba8c <rb_crypt+0xe4c>
    ba60:	ldr	r3, [sp, #4]
    ba64:	ldr	r1, [sp, #8]
    ba68:	mov	r0, r5
    ba6c:	ldrb	ip, [r3]
    ba70:	add	r3, sp, #264	; 0x108
    ba74:	add	r2, r3, r2
    ba78:	strb	ip, [r2, #-152]	; 0xffffff68
    ba7c:	bl	6dfc <MD5Transform>
    ba80:	mov	r1, r6
    ba84:	mov	r0, r9
    ba88:	mov	r2, r8
    ba8c:	ldr	r3, [sp, #4]
    ba90:	add	r1, r3, r1
    ba94:	b	ba14 <rb_crypt+0xdd4>
    ba98:	ldr	r0, [sp, #24]
    ba9c:	bl	47e4 <strlen@plt>
    baa0:	ldr	r4, [pc, #572]	; bce4 <rb_crypt+0x10a4>
    baa4:	add	r4, pc, r4
    baa8:	ldr	r3, [r4, #-2932]	; 0xfffff48c
    baac:	add	r5, r0, #109	; 0x6d
    bab0:	cmp	r5, r3
    bab4:	ble	badc <rb_crypt+0xe9c>
    bab8:	mov	r1, r5
    babc:	ldr	r0, [r4, #-2928]	; 0xfffff490
    bac0:	bl	4c40 <realloc@plt>
    bac4:	subs	r2, r0, #0
    bac8:	beq	b574 <rb_crypt+0x934>
    bacc:	mov	r3, r5
    bad0:	str	r2, [r4, #-2928]	; 0xfffff490
    bad4:	str	r5, [r4, #-2932]	; 0xfffff48c
    bad8:	b	bae0 <rb_crypt+0xea0>
    badc:	ldr	r2, [r4, #-2928]	; 0xfffff490
    bae0:	ldr	r1, [sp, #24]
    bae4:	ldr	r0, [sp, #4]
    bae8:	bl	8fc4 <rb_sha512_crypt_r>
    baec:	b	b534 <rb_crypt+0x8f4>
    baf0:	ldrb	r3, [r5, #3]
    baf4:	add	r8, r5, #3
    baf8:	str	r8, [r4, #-2940]	; 0xfffff484
    bafc:	cmp	r3, #36	; 0x24
    bb00:	cmpne	r3, #0
    bb04:	movne	r3, #1
    bb08:	moveq	r3, #0
    bb0c:	str	r8, [r4, #-2936]	; 0xfffff488
    bb10:	beq	c8f4 <rb_crypt+0x1cb4>
    bb14:	ldrb	r2, [r5, #4]
    bb18:	add	r3, r5, #4
    bb1c:	cmp	r2, #36	; 0x24
    bb20:	cmpne	r2, #0
    bb24:	beq	c8e8 <rb_crypt+0x1ca8>
    bb28:	ldrb	r2, [r5, #5]
    bb2c:	add	r3, r5, #5
    bb30:	cmp	r2, #36	; 0x24
    bb34:	cmpne	r2, #0
    bb38:	beq	c8e8 <rb_crypt+0x1ca8>
    bb3c:	ldrb	r2, [r5, #6]
    bb40:	add	r3, r5, #6
    bb44:	cmp	r2, #36	; 0x24
    bb48:	cmpne	r2, #0
    bb4c:	beq	c8e8 <rb_crypt+0x1ca8>
    bb50:	ldrb	r2, [r5, #7]
    bb54:	add	r3, r5, #7
    bb58:	cmp	r2, #36	; 0x24
    bb5c:	cmpne	r2, #0
    bb60:	beq	c8e8 <rb_crypt+0x1ca8>
    bb64:	ldrb	r2, [r5, #8]
    bb68:	add	r3, r5, #8
    bb6c:	cmp	r2, #36	; 0x24
    bb70:	cmpne	r2, #0
    bb74:	beq	c8e8 <rb_crypt+0x1ca8>
    bb78:	ldrb	r2, [r5, #9]
    bb7c:	add	r3, r5, #9
    bb80:	cmp	r2, #36	; 0x24
    bb84:	cmpne	r2, #0
    bb88:	beq	c8e8 <rb_crypt+0x1ca8>
    bb8c:	ldrb	r2, [r5, #10]
    bb90:	add	r3, r5, #10
    bb94:	cmp	r2, #36	; 0x24
    bb98:	cmpne	r2, #0
    bb9c:	beq	c8e8 <rb_crypt+0x1ca8>
    bba0:	ldrb	r2, [r5, #11]
    bba4:	add	r3, r5, #11
    bba8:	cmp	r2, #0
    bbac:	cmpne	r2, #36	; 0x24
    bbb0:	beq	c8e8 <rb_crypt+0x1ca8>
    bbb4:	ldr	r2, [pc, #300]	; bce8 <rb_crypt+0x10a8>
    bbb8:	add	r2, pc, r2
    bbbc:	sub	r1, r3, r8
    bbc0:	str	r3, [r2, #-2936]	; 0xfffff488
    bbc4:	lsl	r3, r1, #3
    bbc8:	str	r3, [sp, #24]
    bbcc:	lsr	r3, r1, #29
    bbd0:	str	r1, [sp, #20]
    bbd4:	str	r3, [sp, #28]
    bbd8:	b	b5fc <rb_crypt+0x9bc>
    bbdc:	mov	r0, #0
    bbe0:	ldr	r3, [sp, #24]
    bbe4:	b	afd0 <rb_crypt+0x390>
    bbe8:	ldr	r6, [pc, #252]	; bcec <rb_crypt+0x10ac>
    bbec:	add	r3, r3, #24
    bbf0:	add	r6, pc, r6
    bbf4:	add	r0, r5, r3
    bbf8:	mov	r2, r4
    bbfc:	mov	r1, r6
    bc00:	bl	4808 <memcpy@plt>
    bc04:	ldr	r1, [sp, #8]
    bc08:	mov	r0, r5
    bc0c:	bl	6dfc <MD5Transform>
    bc10:	add	r1, r4, r6
    bc14:	rsb	r2, r4, #3
    bc18:	mov	r3, #24
    bc1c:	b	b6ac <rb_crypt+0xa6c>
    bc20:	add	r3, r3, #24
    bc24:	add	r0, r5, r3
    bc28:	mov	r2, r9
    bc2c:	mov	r1, sl
    bc30:	bl	4808 <memcpy@plt>
    bc34:	ldr	fp, [sp, #8]
    bc38:	mov	r0, r5
    bc3c:	mov	r1, fp
    bc40:	bl	6dfc <MD5Transform>
    bc44:	sub	r6, r6, #16
    bc48:	sub	r2, r8, r9
    bc4c:	add	r1, sl, r9
    bc50:	mov	r0, fp
    bc54:	bl	4808 <memcpy@plt>
    bc58:	cmp	r6, #0
    bc5c:	bgt	b938 <rb_crypt+0xcf8>
    bc60:	b	b998 <rb_crypt+0xd58>
    bc64:	ldrb	ip, [sp, #72]	; 0x48
    bc68:	add	r3, sp, #264	; 0x108
    bc6c:	add	r2, r3, r2
    bc70:	ldr	r1, [sp, #8]
    bc74:	mov	r0, r5
    bc78:	strb	ip, [r2, #-152]	; 0xffffff68
    bc7c:	bl	6dfc <MD5Transform>
    bc80:	mov	r2, r8
    bc84:	ldr	r1, [sp, #12]
    bc88:	mov	r0, r9
    bc8c:	b	ba14 <rb_crypt+0xdd4>
    bc90:	.word	0x000317cc
    bc94:	.word	0x000356fc
    bc98:	.word	0x0000f424
    bc9c:	.word	0x00023708
    bca0:	.word	0x000336b0
    bca4:	.word	0x00023520
    bca8:	.word	0x000234b0
    bcac:	.word	0x00035464
    bcb0:	.word	0x00029414
    bcb4:	.word	0x00027408
    bcb8:	.word	0x00035350
    bcbc:	.word	0x0002f314
    bcc0:	.word	0x00023340
    bcc4:	.word	0x00000fff
    bcc8:	.word	0x0002d160
    bccc:	.word	0x0002b130
    bcd0:	.word	0x0000ed70
    bcd4:	.word	0x00034ec0
    bcd8:	.word	0x0000f414
    bcdc:	.word	0x0000f338
    bce0:	.word	0x00021b90
    bce4:	.word	0x000349e0
    bce8:	.word	0x000348cc
    bcec:	.word	0x0000edf0
    bcf0:	.word	0x00034738
    bcf4:	.word	0x0000ec84
    bcf8:	.word	0x0000ec54
    bcfc:	.word	0x0002163c
    bd00:	.word	0xaaaaaaab
    bd04:	.word	0x24924925
    bd08:	.word	0x00021460
    bd0c:	.word	0x67452301
    bd10:	.word	0xefcdab89
    bd14:	.word	0x98badcfe
    bd18:	.word	0x10325476
    bd1c:	.word	0x000212f4
    bd20:	.word	0x000342bc
    bd24:	.word	0x00034074
    bd28:	.word	0x0000dd58
    bd2c:	.word	0x00020e14
    bd30:	.word	0x00020cec
    bd34:	.word	0x00021bf0
    bd38:	.word	0x00033b98
    bd3c:	mov	r4, r7
    bd40:	mov	r7, fp
    bd44:	ldr	r8, [pc, #-92]	; bcf0 <rb_crypt+0x10b0>
    bd48:	ldr	r1, [pc, #-92]	; bcf4 <rb_crypt+0x10b4>
    bd4c:	add	r8, pc, r8
    bd50:	sub	r6, r8, #3072	; 0xc00
    bd54:	sub	r6, r6, #12
    bd58:	mov	r2, #120	; 0x78
    bd5c:	add	r1, pc, r1
    bd60:	mov	r0, r6
    bd64:	bl	46a0 <rb_strlcpy@plt>
    bd68:	ldr	r2, [sp, #20]
    bd6c:	ldr	r1, [r8, #-2940]	; 0xfffff484
    bd70:	mov	r0, r6
    bd74:	bl	48bc <strncat@plt>
    bd78:	ldr	r1, [pc, #-136]	; bcf8 <rb_crypt+0x10b8>
    bd7c:	mov	r2, #120	; 0x78
    bd80:	add	r1, pc, r1
    bd84:	mov	r0, r6
    bd88:	bl	4b8c <rb_strlcat@plt>
    bd8c:	ldr	r2, [sp, #104]	; 0x68
    bd90:	add	r1, sp, #104	; 0x68
    bd94:	add	fp, sp, #64	; 0x40
    bd98:	lsr	r3, r2, #3
    bd9c:	ldm	r1, {r0, r1}
    bda0:	and	r3, r3, #63	; 0x3f
    bda4:	cmp	r3, #55	; 0x37
    bda8:	stm	fp, {r0, r1}
    bdac:	rsbhi	r9, r3, #120	; 0x78
    bdb0:	rsbls	r9, r3, #56	; 0x38
    bdb4:	lsl	r1, r9, #3
    bdb8:	add	r2, r2, r1
    bdbc:	cmp	r1, r2
    bdc0:	str	r2, [sp, #104]	; 0x68
    bdc4:	ldrhi	r2, [sp, #108]	; 0x6c
    bdc8:	rsb	r8, r3, #64	; 0x40
    bdcc:	addhi	r2, r2, #1
    bdd0:	strhi	r2, [sp, #108]	; 0x6c
    bdd4:	cmp	r9, r8
    bdd8:	bcs	c604 <rb_crypt+0x19c4>
    bddc:	ldr	r1, [pc, #-232]	; bcfc <rb_crypt+0x10bc>
    bde0:	add	r3, r3, #24
    bde4:	add	r1, pc, r1
    bde8:	mov	r8, #0
    bdec:	sub	r2, r9, r8
    bdf0:	add	r0, r5, r3
    bdf4:	bl	4808 <memcpy@plt>
    bdf8:	ldr	r3, [sp, #104]	; 0x68
    bdfc:	add	r2, r3, #64	; 0x40
    be00:	cmp	r2, #63	; 0x3f
    be04:	str	r2, [sp, #104]	; 0x68
    be08:	lsr	r3, r3, #3
    be0c:	ldrls	r2, [sp, #108]	; 0x6c
    be10:	and	r3, r3, #63	; 0x3f
    be14:	addls	r2, r2, #1
    be18:	rsb	r6, r3, #64	; 0x40
    be1c:	strls	r2, [sp, #108]	; 0x6c
    be20:	cmp	r6, #8
    be24:	add	r3, r3, #24
    be28:	movhi	r2, #8
    be2c:	movhi	r1, fp
    be30:	bhi	be5c <rb_crypt+0x121c>
    be34:	add	r0, r5, r3
    be38:	mov	r2, r6
    be3c:	mov	r1, fp
    be40:	bl	4808 <memcpy@plt>
    be44:	ldr	r1, [sp, #8]
    be48:	mov	r0, r5
    be4c:	bl	6dfc <MD5Transform>
    be50:	add	r1, fp, r6
    be54:	rsb	r2, r6, #8
    be58:	mov	r3, #24
    be5c:	add	r0, r5, r3
    be60:	bl	4808 <memcpy@plt>
    be64:	ldm	r5, {r0, r1, r2, r3}
    be68:	mov	r6, #0
    be6c:	stm	sl, {r0, r1, r2, r3}
    be70:	mov	r0, r5
    be74:	mov	r2, #88	; 0x58
    be78:	mov	r1, r6
    be7c:	bl	4628 <memset@plt>
    be80:	b	c040 <rb_crypt+0x1400>
    be84:	ldr	r0, [sp, #4]
    be88:	bl	47e4 <strlen@plt>
    be8c:	lsl	r8, r0, #3
    be90:	lsr	r3, r0, #29
    be94:	cmp	r0, #63	; 0x3f
    be98:	mov	r9, r0
    be9c:	str	r8, [sp, #192]	; 0xc0
    bea0:	str	r3, [sp, #196]	; 0xc4
    bea4:	bhi	c230 <rb_crypt+0x15f0>
    bea8:	ldr	r3, [sp, #4]
    beac:	sub	r2, r9, r5
    beb0:	add	r1, r3, r5
    beb4:	mov	r0, r7
    beb8:	bl	4808 <memcpy@plt>
    bebc:	lsr	r3, r8, #3
    bec0:	and	r3, r3, #63	; 0x3f
    bec4:	rsb	r5, r3, #64	; 0x40
    bec8:	add	r9, r3, #24
    becc:	str	r3, [sp, #12]
    bed0:	ldr	r3, [pc, #-472]	; bd00 <rb_crypt+0x10c0>
    bed4:	umull	r2, r3, r3, r6
    bed8:	lsr	r3, r3, #1
    bedc:	add	r3, r3, r3, lsl #1
    bee0:	cmp	r6, r3
    bee4:	bne	c1c0 <rb_crypt+0x1580>
    bee8:	ldr	r3, [pc, #-492]	; bd04 <rb_crypt+0x10c4>
    beec:	umull	r2, r3, r3, r6
    bef0:	sub	r2, r6, r3
    bef4:	add	r3, r3, r2, lsr #1
    bef8:	lsr	r3, r3, #2
    befc:	rsb	r3, r3, r3, lsl #3
    bf00:	cmp	r6, r3
    bf04:	bne	c158 <rb_crypt+0x1518>
    bf08:	ldr	r3, [sp, #8]
    bf0c:	cmp	r3, #0
    bf10:	beq	c0dc <rb_crypt+0x149c>
    bf14:	add	r8, r8, #128	; 0x80
    bf18:	cmp	r8, #127	; 0x7f
    bf1c:	str	r8, [sp, #192]	; 0xc0
    bf20:	ldrls	r3, [sp, #196]	; 0xc4
    bf24:	addls	r3, r3, #1
    bf28:	strls	r3, [sp, #196]	; 0xc4
    bf2c:	cmp	r5, #16
    bf30:	movhi	r2, #16
    bf34:	movhi	r1, sl
    bf38:	bhi	bf64 <rb_crypt+0x1324>
    bf3c:	mov	r2, r5
    bf40:	add	r0, r4, r9
    bf44:	mov	r1, sl
    bf48:	bl	4808 <memcpy@plt>
    bf4c:	mov	r1, r7
    bf50:	mov	r0, r4
    bf54:	bl	6dfc <MD5Transform>
    bf58:	mov	r9, #24
    bf5c:	add	r1, sl, r5
    bf60:	rsb	r2, r5, #16
    bf64:	add	r0, r4, r9
    bf68:	bl	4808 <memcpy@plt>
    bf6c:	ldr	r2, [sp, #192]	; 0xc0
    bf70:	ldr	r3, [sp, #16]
    bf74:	ldm	r3, {r0, r1}
    bf78:	lsr	r3, r2, #3
    bf7c:	and	r3, r3, #63	; 0x3f
    bf80:	cmp	r3, #55	; 0x37
    bf84:	rsbls	r8, r3, #56	; 0x38
    bf88:	rsbhi	r8, r3, #120	; 0x78
    bf8c:	stm	fp, {r0, r1}
    bf90:	lsl	r1, r8, #3
    bf94:	add	r2, r2, r1
    bf98:	cmp	r1, r2
    bf9c:	str	r2, [sp, #192]	; 0xc0
    bfa0:	ldrhi	r2, [sp, #196]	; 0xc4
    bfa4:	rsb	r5, r3, #64	; 0x40
    bfa8:	addhi	r2, r2, #1
    bfac:	strhi	r2, [sp, #196]	; 0xc4
    bfb0:	cmp	r8, r5
    bfb4:	bcs	c124 <rb_crypt+0x14e4>
    bfb8:	ldr	r1, [pc, #-696]	; bd08 <rb_crypt+0x10c8>
    bfbc:	add	r0, r3, #24
    bfc0:	add	r1, pc, r1
    bfc4:	mov	r5, #0
    bfc8:	sub	r2, r8, r5
    bfcc:	add	r0, r4, r0
    bfd0:	bl	4808 <memcpy@plt>
    bfd4:	ldr	r0, [sp, #192]	; 0xc0
    bfd8:	add	r3, r0, #64	; 0x40
    bfdc:	cmp	r3, #63	; 0x3f
    bfe0:	str	r3, [sp, #192]	; 0xc0
    bfe4:	lsr	r0, r0, #3
    bfe8:	ldrls	r3, [sp, #196]	; 0xc4
    bfec:	and	r0, r0, #63	; 0x3f
    bff0:	addls	r3, r3, #1
    bff4:	rsb	r5, r0, #64	; 0x40
    bff8:	strls	r3, [sp, #196]	; 0xc4
    bffc:	cmp	r5, #8
    c000:	bls	c0a0 <rb_crypt+0x1460>
    c004:	mov	r2, fp
    c008:	add	r3, sp, #264	; 0x108
    c00c:	add	r3, r3, r0
    c010:	ldm	r2!, {r0, r1}
    c014:	add	r6, r6, #1
    c018:	str	r0, [r3, #-64]	; 0xffffffc0
    c01c:	str	r1, [r3, #-60]	; 0xffffffc4
    c020:	ldm	r4, {r0, r1, r2, r3}
    c024:	stm	sl, {r0, r1, r2, r3}
    c028:	mov	r2, #88	; 0x58
    c02c:	mov	r1, #0
    c030:	mov	r0, r4
    c034:	bl	4628 <memset@plt>
    c038:	cmp	r6, #1000	; 0x3e8
    c03c:	beq	c40c <rb_crypt+0x17cc>
    c040:	ands	r3, r6, #1
    c044:	str	r3, [sp, #8]
    c048:	ldr	r3, [pc, #-836]	; bd0c <rb_crypt+0x10cc>
    c04c:	mov	r5, #0
    c050:	str	r3, [sp, #176]	; 0xb0
    c054:	ldr	r3, [pc, #-844]	; bd10 <rb_crypt+0x10d0>
    c058:	str	r5, [sp, #196]	; 0xc4
    c05c:	str	r3, [sp, #180]	; 0xb4
    c060:	ldr	r3, [pc, #-852]	; bd14 <rb_crypt+0x10d4>
    c064:	str	r5, [sp, #192]	; 0xc0
    c068:	str	r3, [sp, #184]	; 0xb8
    c06c:	ldr	r3, [pc, #-860]	; bd18 <rb_crypt+0x10d8>
    c070:	str	r3, [sp, #188]	; 0xbc
    c074:	bne	be84 <rb_crypt+0x1244>
    c078:	ldm	sl, {r0, r1, r2, r3}
    c07c:	mov	ip, #128	; 0x80
    c080:	str	ip, [sp, #192]	; 0xc0
    c084:	mov	r8, ip
    c088:	stm	r7, {r0, r1, r2, r3}
    c08c:	mov	r3, #16
    c090:	mov	r9, #40	; 0x28
    c094:	mov	r5, #48	; 0x30
    c098:	str	r3, [sp, #12]
    c09c:	b	bed0 <rb_crypt+0x1290>
    c0a0:	add	r0, r0, #24
    c0a4:	mov	r2, r5
    c0a8:	mov	r1, fp
    c0ac:	add	r0, r4, r0
    c0b0:	bl	4808 <memcpy@plt>
    c0b4:	mov	r1, r7
    c0b8:	mov	r0, r4
    c0bc:	bl	6dfc <MD5Transform>
    c0c0:	rsb	r2, r5, #8
    c0c4:	add	r1, fp, r5
    c0c8:	mov	r0, r7
    c0cc:	bl	4808 <memcpy@plt>
    c0d0:	add	r6, r6, #1
    c0d4:	ldm	r4, {r0, r1, r2, r3}
    c0d8:	b	c024 <rb_crypt+0x13e4>
    c0dc:	ldr	r0, [sp, #4]
    c0e0:	bl	47e4 <strlen@plt>
    c0e4:	lsl	r2, r0, #3
    c0e8:	add	r8, r2, r8
    c0ec:	cmp	r2, r8
    c0f0:	ldr	r2, [sp, #196]	; 0xc4
    c0f4:	mov	r3, r0
    c0f8:	addhi	r2, r2, #1
    c0fc:	add	r2, r2, r0, lsr #29
    c100:	cmp	r0, r5
    c104:	str	r8, [sp, #192]	; 0xc0
    c108:	str	r2, [sp, #196]	; 0xc4
    c10c:	bcs	c2bc <rb_crypt+0x167c>
    c110:	ldr	r1, [sp, #8]
    c114:	ldr	r0, [sp, #4]
    c118:	sub	r2, r3, r1
    c11c:	add	r1, r0, r1
    c120:	b	bf64 <rb_crypt+0x1324>
    c124:	ldr	r1, [pc, #-1040]	; bd1c <rb_crypt+0x10dc>
    c128:	add	r0, r3, #24
    c12c:	add	r1, pc, r1
    c130:	mov	r2, r5
    c134:	add	r0, r4, r0
    c138:	mov	r9, r1
    c13c:	bl	4808 <memcpy@plt>
    c140:	mov	r1, r7
    c144:	mov	r0, r4
    c148:	bl	6dfc <MD5Transform>
    c14c:	add	r1, r9, r5
    c150:	mov	r0, #24
    c154:	b	bfc8 <rb_crypt+0x1388>
    c158:	ldr	r0, [sp, #4]
    c15c:	bl	47e4 <strlen@plt>
    c160:	lsl	r2, r0, #3
    c164:	add	r8, r2, r8
    c168:	cmp	r2, r8
    c16c:	ldr	r2, [sp, #196]	; 0xc4
    c170:	mov	r3, r0
    c174:	addhi	r2, r2, #1
    c178:	add	r2, r2, r0, lsr #29
    c17c:	cmp	r0, r5
    c180:	str	r8, [sp, #192]	; 0xc0
    c184:	str	r2, [sp, #196]	; 0xc4
    c188:	movcc	r1, #0
    c18c:	bcs	c328 <rb_crypt+0x16e8>
    c190:	sub	r2, r3, r1
    c194:	ldr	r3, [sp, #4]
    c198:	add	r0, r4, r9
    c19c:	add	r1, r3, r1
    c1a0:	bl	4808 <memcpy@plt>
    c1a4:	ldr	r8, [sp, #192]	; 0xc0
    c1a8:	lsr	r3, r8, #3
    c1ac:	and	r3, r3, #63	; 0x3f
    c1b0:	str	r3, [sp, #12]
    c1b4:	rsb	r5, r3, #64	; 0x40
    c1b8:	add	r9, r3, #24
    c1bc:	b	bf08 <rb_crypt+0x12c8>
    c1c0:	ldr	r3, [pc, #-1192]	; bd20 <rb_crypt+0x10e0>
    c1c4:	ldr	r2, [sp, #24]
    c1c8:	add	r3, pc, r3
    c1cc:	add	r8, r2, r8
    c1d0:	cmp	r8, r2
    c1d4:	str	r8, [sp, #192]	; 0xc0
    c1d8:	ldr	r8, [r3, #-2940]	; 0xfffff484
    c1dc:	ldr	r3, [sp, #196]	; 0xc4
    c1e0:	ldr	r2, [sp, #28]
    c1e4:	addcc	r3, r3, #1
    c1e8:	add	r3, r2, r3
    c1ec:	ldr	r2, [sp, #20]
    c1f0:	str	r3, [sp, #196]	; 0xc4
    c1f4:	cmp	r2, r5
    c1f8:	movcc	r2, #0
    c1fc:	bcs	c390 <rb_crypt+0x1750>
    c200:	ldr	r3, [sp, #20]
    c204:	add	r1, r8, r2
    c208:	add	r0, r4, r9
    c20c:	sub	r2, r3, r2
    c210:	bl	4808 <memcpy@plt>
    c214:	ldr	r8, [sp, #192]	; 0xc0
    c218:	lsr	r3, r8, #3
    c21c:	and	r3, r3, #63	; 0x3f
    c220:	str	r3, [sp, #12]
    c224:	rsb	r5, r3, #64	; 0x40
    c228:	add	r9, r3, #24
    c22c:	b	bee8 <rb_crypt+0x12a8>
    c230:	ldr	r3, [sp, #4]
    c234:	mov	lr, r7
    c238:	mov	r5, r3
    c23c:	add	r8, r3, #64	; 0x40
    c240:	ldr	r0, [r5]
    c244:	ldr	r1, [r5, #4]
    c248:	ldr	r2, [r5, #8]
    c24c:	ldr	r3, [r5, #12]
    c250:	mov	ip, lr
    c254:	add	r5, r5, #16
    c258:	cmp	r5, r8
    c25c:	stmia	ip!, {r0, r1, r2, r3}
    c260:	mov	lr, ip
    c264:	bne	c240 <rb_crypt+0x1600>
    c268:	mov	r1, r7
    c26c:	mov	r0, r4
    c270:	bl	6dfc <MD5Transform>
    c274:	cmp	r9, #127	; 0x7f
    c278:	movls	r5, #64	; 0x40
    c27c:	ldrls	r8, [sp, #192]	; 0xc0
    c280:	bls	bea8 <rb_crypt+0x1268>
    c284:	ldr	r3, [sp, #4]
    c288:	rsb	r8, r3, #63	; 0x3f
    c28c:	mov	r1, r5
    c290:	mov	r0, r4
    c294:	add	r5, r5, #64	; 0x40
    c298:	bl	6dfc <MD5Transform>
    c29c:	add	r3, r8, r5
    c2a0:	cmp	r9, r3
    c2a4:	bhi	c28c <rb_crypt+0x164c>
    c2a8:	sub	r5, r9, #128	; 0x80
    c2ac:	bic	r5, r5, #63	; 0x3f
    c2b0:	add	r5, r5, #128	; 0x80
    c2b4:	ldr	r8, [sp, #192]	; 0xc0
    c2b8:	b	bea8 <rb_crypt+0x1268>
    c2bc:	str	r0, [sp, #8]
    c2c0:	add	r0, r4, r9
    c2c4:	ldr	r9, [sp, #4]
    c2c8:	mov	r2, r5
    c2cc:	mov	r1, r9
    c2d0:	bl	4808 <memcpy@plt>
    c2d4:	mov	r1, r7
    c2d8:	mov	r0, r4
    c2dc:	bl	6dfc <MD5Transform>
    c2e0:	ldr	r3, [sp, #12]
    c2e4:	rsb	r2, r3, #127	; 0x7f
    c2e8:	ldr	r3, [sp, #8]
    c2ec:	cmp	r3, r2
    c2f0:	bls	c3ec <rb_crypt+0x17ac>
    c2f4:	mov	r8, r3
    c2f8:	add	r1, r9, r5
    c2fc:	mov	r0, r4
    c300:	bl	6dfc <MD5Transform>
    c304:	add	r3, r5, #127	; 0x7f
    c308:	cmp	r8, r3
    c30c:	add	r3, r5, #64	; 0x40
    c310:	mov	r5, r3
    c314:	bhi	c2f8 <rb_crypt+0x16b8>
    c318:	str	r3, [sp, #8]
    c31c:	mov	r9, #24
    c320:	mov	r3, r8
    c324:	b	c110 <rb_crypt+0x14d0>
    c328:	str	r0, [sp, #32]
    c32c:	add	r0, r4, r9
    c330:	ldr	r9, [sp, #4]
    c334:	mov	r2, r5
    c338:	mov	r1, r9
    c33c:	bl	4808 <memcpy@plt>
    c340:	mov	r1, r7
    c344:	mov	r0, r4
    c348:	bl	6dfc <MD5Transform>
    c34c:	ldr	r3, [sp, #12]
    c350:	rsb	r2, r3, #127	; 0x7f
    c354:	ldr	r3, [sp, #32]
    c358:	cmp	r3, r2
    c35c:	bls	c3f8 <rb_crypt+0x17b8>
    c360:	mov	r8, r3
    c364:	add	r1, r9, r5
    c368:	mov	r0, r4
    c36c:	bl	6dfc <MD5Transform>
    c370:	add	r3, r5, #127	; 0x7f
    c374:	add	r1, r5, #64	; 0x40
    c378:	cmp	r8, r3
    c37c:	mov	r5, r1
    c380:	bhi	c364 <rb_crypt+0x1724>
    c384:	mov	r3, r8
    c388:	mov	r9, #24
    c38c:	b	c190 <rb_crypt+0x1550>
    c390:	mov	r2, r5
    c394:	mov	r1, r8
    c398:	add	r0, r4, r9
    c39c:	bl	4808 <memcpy@plt>
    c3a0:	mov	r1, r7
    c3a4:	mov	r0, r4
    c3a8:	bl	6dfc <MD5Transform>
    c3ac:	ldr	r3, [sp, #12]
    c3b0:	ldr	r2, [sp, #20]
    c3b4:	rsb	r3, r3, #127	; 0x7f
    c3b8:	cmp	r3, r2
    c3bc:	bcs	c404 <rb_crypt+0x17c4>
    c3c0:	mov	r9, r2
    c3c4:	add	r1, r8, r5
    c3c8:	mov	r0, r4
    c3cc:	bl	6dfc <MD5Transform>
    c3d0:	add	r3, r5, #127	; 0x7f
    c3d4:	add	r2, r5, #64	; 0x40
    c3d8:	cmp	r3, r9
    c3dc:	mov	r5, r2
    c3e0:	bcc	c3c4 <rb_crypt+0x1784>
    c3e4:	mov	r9, #24
    c3e8:	b	c200 <rb_crypt+0x15c0>
    c3ec:	str	r5, [sp, #8]
    c3f0:	mov	r9, #24
    c3f4:	b	c110 <rb_crypt+0x14d0>
    c3f8:	mov	r1, r5
    c3fc:	mov	r9, #24
    c400:	b	c190 <rb_crypt+0x1550>
    c404:	mov	r2, r5
    c408:	b	c3e4 <rb_crypt+0x17a4>
    c40c:	ldr	r0, [pc, #-1776]	; bd24 <rb_crypt+0x10e4>
    c410:	add	r0, pc, r0
    c414:	sub	r0, r0, #3072	; 0xc00
    c418:	sub	r4, r0, #12
    c41c:	mov	r0, r4
    c420:	bl	47e4 <strlen@plt>
    c424:	ldrb	lr, [sp, #79]	; 0x4f
    c428:	ldrb	r5, [sp, #73]	; 0x49
    c42c:	ldrb	r2, [sp, #78]	; 0x4e
    c430:	ldrb	r6, [sp, #72]	; 0x48
    c434:	ldrb	r1, [sp, #81]	; 0x51
    c438:	lsl	lr, lr, #8
    c43c:	orr	lr, lr, r5, lsl #16
    c440:	ldrb	r5, [sp, #75]	; 0x4b
    c444:	ldrb	ip, [sp, #80]	; 0x50
    c448:	lsl	r2, r2, #8
    c44c:	orr	r2, r2, r6, lsl #16
    c450:	ldrb	r6, [sp, #74]	; 0x4a
    c454:	lsl	r1, r1, #8
    c458:	orr	r1, r1, r5, lsl #16
    c45c:	ldrb	r5, [sp, #86]	; 0x56
    c460:	ldrb	r3, [sp, #84]	; 0x54
    c464:	lsl	ip, ip, #8
    c468:	orr	ip, ip, r6, lsl #16
    c46c:	orr	ip, ip, r5
    c470:	ldrb	r5, [sp, #87]	; 0x57
    c474:	orr	r2, r2, r3
    c478:	ldr	r3, [pc, #-1880]	; bd28 <rb_crypt+0x10e8>
    c47c:	orr	r1, r1, r5
    c480:	lsl	r8, r2, #20
    c484:	lsl	r5, ip, #20
    c488:	add	r3, pc, r3
    c48c:	add	r8, r3, r8, lsr #26
    c490:	add	r5, r3, r5, lsr #26
    c494:	ldrb	sl, [r8, #1940]	; 0x794
    c498:	ldrb	r8, [r5, #1940]	; 0x794
    c49c:	lsl	r5, r1, #20
    c4a0:	and	r7, r2, #63	; 0x3f
    c4a4:	add	r7, r3, r7
    c4a8:	add	r5, r3, r5, lsr #26
    c4ac:	lsl	fp, r2, #14
    c4b0:	ldrb	r9, [r7, #1940]	; 0x794
    c4b4:	ldrb	r7, [r5, #1940]	; 0x794
    c4b8:	add	r5, r3, r2, lsr #18
    c4bc:	add	r2, r3, fp, lsr #26
    c4c0:	ldrb	r6, [sp, #85]	; 0x55
    c4c4:	ldrb	fp, [r5, #1940]	; 0x794
    c4c8:	ldrb	r5, [r2, #1940]	; 0x794
    c4cc:	orr	lr, lr, r6
    c4d0:	orr	r2, r9, sl, lsl #8
    c4d4:	lsl	r6, lr, #20
    c4d8:	orr	r2, r2, r5, lsl #16
    c4dc:	orr	r2, r2, fp, lsl #24
    c4e0:	str	r2, [r4, r0]
    c4e4:	and	r2, lr, #63	; 0x3f
    c4e8:	add	r2, r3, r2
    c4ec:	add	r6, r3, r6, lsr #26
    c4f0:	ldrb	fp, [r2, #1940]	; 0x794
    c4f4:	ldrb	r6, [r6, #1940]	; 0x794
    c4f8:	lsl	r2, r1, #14
    c4fc:	lsl	r9, lr, #14
    c500:	add	r2, r3, r2, lsr #26
    c504:	orr	fp, fp, r6, lsl #8
    c508:	ldrb	r6, [r2, #1940]	; 0x794
    c50c:	and	r2, ip, #63	; 0x3f
    c510:	add	r2, r3, r2
    c514:	lsl	r5, ip, #14
    c518:	ldrb	r2, [r2, #1940]	; 0x794
    c51c:	add	r9, r3, r9, lsr #26
    c520:	add	r5, r3, r5, lsr #26
    c524:	orr	r8, r2, r8, lsl #8
    c528:	and	r2, r1, #63	; 0x3f
    c52c:	add	r2, r3, r2
    c530:	add	lr, r3, lr, lsr #18
    c534:	add	ip, r3, ip, lsr #18
    c538:	add	r1, r3, r1, lsr #18
    c53c:	ldrb	sl, [r9, #1940]	; 0x794
    c540:	ldrb	r2, [r2, #1940]	; 0x794
    c544:	ldrb	r9, [r5, #1940]	; 0x794
    c548:	ldrb	r1, [r1, #1940]	; 0x794
    c54c:	ldrb	r5, [lr, #1940]	; 0x794
    c550:	ldrb	ip, [ip, #1940]	; 0x794
    c554:	orr	r2, r2, r7, lsl #8
    c558:	add	lr, r4, r0
    c55c:	orr	r2, r2, r6, lsl #16
    c560:	orr	r0, fp, sl, lsl #16
    c564:	orr	r9, r8, r9, lsl #16
    c568:	orr	r0, r0, r5, lsl #24
    c56c:	orr	r2, r2, r1, lsl #24
    c570:	orr	ip, r9, ip, lsl #24
    c574:	str	r0, [lr, #4]
    c578:	str	ip, [lr, #8]
    c57c:	str	r2, [lr, #12]
    c580:	ldrb	r2, [sp, #82]	; 0x52
    c584:	ldrb	r0, [sp, #76]	; 0x4c
    c588:	ldrb	r1, [sp, #77]	; 0x4d
    c58c:	ldrb	ip, [sp, #83]	; 0x53
    c590:	lsl	r2, r2, #8
    c594:	orr	r2, r2, r0, lsl #16
    c598:	orr	r2, r2, r1
    c59c:	and	r1, r2, #63	; 0x3f
    c5a0:	lsl	r5, r2, #20
    c5a4:	lsl	r0, r2, #14
    c5a8:	add	r5, r3, r5, lsr #26
    c5ac:	add	r0, r3, r0, lsr #26
    c5b0:	add	r1, r3, r1
    c5b4:	add	r2, r3, r2, lsr #18
    c5b8:	ldrb	r6, [r5, #1940]	; 0x794
    c5bc:	ldrb	r1, [r1, #1940]	; 0x794
    c5c0:	ldrb	r7, [r0, #1940]	; 0x794
    c5c4:	and	r0, ip, #63	; 0x3f
    c5c8:	add	r0, r3, r0
    c5cc:	ldrb	r5, [r2, #1940]	; 0x794
    c5d0:	add	r3, r3, ip, lsr #6
    c5d4:	orr	r2, r1, r6, lsl #8
    c5d8:	ldrb	ip, [r0, #1940]	; 0x794
    c5dc:	ldrb	r1, [r3, #1940]	; 0x794
    c5e0:	orr	r3, r2, r7, lsl #16
    c5e4:	orr	r3, r3, r5, lsl #24
    c5e8:	mov	r2, #0
    c5ec:	mov	r0, r4
    c5f0:	str	r3, [lr, #16]
    c5f4:	strb	ip, [lr, #20]
    c5f8:	strb	r1, [lr, #21]
    c5fc:	strb	r2, [lr, #22]
    c600:	b	b534 <rb_crypt+0x8f4>
    c604:	ldr	r6, [pc, #-2272]	; bd2c <rb_crypt+0x10ec>
    c608:	add	r3, r3, #24
    c60c:	add	r6, pc, r6
    c610:	add	r0, r5, r3
    c614:	mov	r1, r6
    c618:	mov	r2, r8
    c61c:	bl	4808 <memcpy@plt>
    c620:	ldr	r1, [sp, #8]
    c624:	mov	r0, r5
    c628:	bl	6dfc <MD5Transform>
    c62c:	add	r1, r6, r8
    c630:	mov	r3, #24
    c634:	b	bdec <rb_crypt+0x11ac>
    c638:	mov	r2, r6
    c63c:	mov	r1, r8
    c640:	add	r0, r5, r0
    c644:	bl	4808 <memcpy@plt>
    c648:	ldr	r1, [sp, #8]
    c64c:	mov	r0, r5
    c650:	bl	6dfc <MD5Transform>
    c654:	ldr	r3, [sp, #20]
    c658:	rsb	r4, r4, #127	; 0x7f
    c65c:	cmp	r4, r3
    c660:	bcs	c8d0 <rb_crypt+0x1c90>
    c664:	mov	r4, r6
    c668:	mov	r7, r3
    c66c:	add	r1, r8, r6
    c670:	add	r4, r4, #127	; 0x7f
    c674:	mov	r0, r5
    c678:	bl	6dfc <MD5Transform>
    c67c:	add	r6, r6, #64	; 0x40
    c680:	cmp	r4, r7
    c684:	mov	r4, r6
    c688:	bcc	c66c <rb_crypt+0x1a2c>
    c68c:	mov	r0, #24
    c690:	ldr	r3, [sp, #20]
    c694:	b	b700 <rb_crypt+0xac0>
    c698:	add	r3, sp, #112	; 0x70
    c69c:	str	r3, [sp, #8]
    c6a0:	mov	r5, r3
    c6a4:	ldr	r3, [sp, #4]
    c6a8:	mov	r6, r3
    c6ac:	add	lr, r3, #64	; 0x40
    c6b0:	ldr	r0, [r6]
    c6b4:	ldr	r1, [r6, #4]
    c6b8:	ldr	r2, [r6, #8]
    c6bc:	ldr	r3, [r6, #12]
    c6c0:	mov	ip, r5
    c6c4:	add	r6, r6, #16
    c6c8:	cmp	r6, lr
    c6cc:	stmia	ip!, {r0, r1, r2, r3}
    c6d0:	mov	r5, ip
    c6d4:	bne	c6b0 <rb_crypt+0x1a70>
    c6d8:	add	r5, sp, #88	; 0x58
    c6dc:	mov	r0, r5
    c6e0:	ldr	r1, [sp, #8]
    c6e4:	bl	6dfc <MD5Transform>
    c6e8:	cmp	r4, #127	; 0x7f
    c6ec:	ldrhi	r3, [sp, #4]
    c6f0:	rsbhi	sl, r3, #63	; 0x3f
    c6f4:	bls	c8c0 <rb_crypt+0x1c80>
    c6f8:	mov	r1, r6
    c6fc:	mov	r0, r5
    c700:	add	r6, r6, #64	; 0x40
    c704:	bl	6dfc <MD5Transform>
    c708:	add	r3, sl, r6
    c70c:	cmp	r4, r3
    c710:	bhi	c6f8 <rb_crypt+0x1ab8>
    c714:	sub	r1, r4, #128	; 0x80
    c718:	bic	r1, r1, #63	; 0x3f
    c71c:	add	r1, r1, #128	; 0x80
    c720:	ldr	r6, [sp, #104]	; 0x68
    c724:	ldr	r0, [sp, #8]
    c728:	b	b660 <rb_crypt+0xa20>
    c72c:	ldr	r6, [pc, #-2564]	; bd30 <rb_crypt+0x10f0>
    c730:	add	r3, r3, #24
    c734:	add	r6, pc, r6
    c738:	add	r0, r4, r3
    c73c:	mov	r1, r6
    c740:	mov	r2, r8
    c744:	bl	4808 <memcpy@plt>
    c748:	mov	r1, r7
    c74c:	mov	r0, r4
    c750:	bl	6dfc <MD5Transform>
    c754:	add	r1, r6, r8
    c758:	mov	r3, #24
    c75c:	b	b898 <rb_crypt+0xc58>
    c760:	ldr	sl, [sp, #4]
    c764:	mov	r2, r8
    c768:	mov	r1, sl
    c76c:	add	r0, r4, r0
    c770:	bl	4808 <memcpy@plt>
    c774:	rsb	r6, r6, #127	; 0x7f
    c778:	mov	r1, r7
    c77c:	mov	r0, r4
    c780:	bl	6dfc <MD5Transform>
    c784:	cmp	r9, r6
    c788:	bls	c7b0 <rb_crypt+0x1b70>
    c78c:	mov	r6, r8
    c790:	add	r1, sl, r8
    c794:	add	r6, r6, #127	; 0x7f
    c798:	mov	r0, r4
    c79c:	bl	6dfc <MD5Transform>
    c7a0:	add	r8, r8, #64	; 0x40
    c7a4:	cmp	r9, r6
    c7a8:	mov	r6, r8
    c7ac:	bhi	c790 <rb_crypt+0x1b50>
    c7b0:	mov	r0, #24
    c7b4:	b	b81c <rb_crypt+0xbdc>
    c7b8:	mov	r2, r9
    c7bc:	mov	r1, r8
    c7c0:	add	r0, r4, r0
    c7c4:	bl	4808 <memcpy@plt>
    c7c8:	mov	r1, r7
    c7cc:	mov	r0, r4
    c7d0:	bl	6dfc <MD5Transform>
    c7d4:	ldr	r3, [sp, #20]
    c7d8:	rsb	r6, r6, #127	; 0x7f
    c7dc:	cmp	r6, r3
    c7e0:	bcs	c8b8 <rb_crypt+0x1c78>
    c7e4:	mov	r6, r9
    c7e8:	mov	sl, r3
    c7ec:	add	r1, r8, r9
    c7f0:	add	r6, r6, #127	; 0x7f
    c7f4:	mov	r0, r4
    c7f8:	bl	6dfc <MD5Transform>
    c7fc:	add	r9, r9, #64	; 0x40
    c800:	cmp	r6, sl
    c804:	mov	r6, r9
    c808:	bcc	c7ec <rb_crypt+0x1bac>
    c80c:	mov	r0, #24
    c810:	ldr	r3, [sp, #20]
    c814:	b	b7c0 <rb_crypt+0xb80>
    c818:	ldr	r3, [sp, #4]
    c81c:	add	r7, sp, #200	; 0xc8
    c820:	mov	r4, r7
    c824:	mov	r6, r3
    c828:	add	lr, r3, #64	; 0x40
    c82c:	ldr	r0, [r6]
    c830:	ldr	r1, [r6, #4]
    c834:	ldr	r2, [r6, #8]
    c838:	ldr	r3, [r6, #12]
    c83c:	mov	ip, r4
    c840:	add	r6, r6, #16
    c844:	cmp	r6, lr
    c848:	stmia	ip!, {r0, r1, r2, r3}
    c84c:	mov	r4, ip
    c850:	bne	c82c <rb_crypt+0x1bec>
    c854:	add	r4, sp, #176	; 0xb0
    c858:	mov	r0, r4
    c85c:	mov	r1, r7
    c860:	bl	6dfc <MD5Transform>
    c864:	cmp	r9, #127	; 0x7f
    c868:	ldrhi	r3, [sp, #4]
    c86c:	rsbhi	sl, r3, #63	; 0x3f
    c870:	bls	c8a8 <rb_crypt+0x1c68>
    c874:	mov	r1, r6
    c878:	mov	r0, r4
    c87c:	add	r6, r6, #64	; 0x40
    c880:	bl	6dfc <MD5Transform>
    c884:	add	r3, sl, r6
    c888:	cmp	r9, r3
    c88c:	bhi	c874 <rb_crypt+0x1c34>
    c890:	sub	r1, r9, #128	; 0x80
    c894:	bic	r1, r1, #63	; 0x3f
    c898:	add	r1, r1, #128	; 0x80
    c89c:	ldr	r6, [sp, #192]	; 0xc0
    c8a0:	ldr	sl, [sp, #196]	; 0xc4
    c8a4:	b	b76c <rb_crypt+0xb2c>
    c8a8:	ldr	r6, [sp, #192]	; 0xc0
    c8ac:	ldr	sl, [sp, #196]	; 0xc4
    c8b0:	mov	r1, #64	; 0x40
    c8b4:	b	b76c <rb_crypt+0xb2c>
    c8b8:	mov	r0, #24
    c8bc:	b	b7c0 <rb_crypt+0xb80>
    c8c0:	ldr	r6, [sp, #104]	; 0x68
    c8c4:	mov	r1, #64	; 0x40
    c8c8:	ldr	r0, [sp, #8]
    c8cc:	b	b660 <rb_crypt+0xa20>
    c8d0:	mov	r0, #24
    c8d4:	b	b700 <rb_crypt+0xac0>
    c8d8:	ldr	r3, [pc, #-2988]	; bd34 <rb_crypt+0x10f4>
    c8dc:	add	r3, pc, r3
    c8e0:	str	lr, [r3, #12]
    c8e4:	b	b098 <rb_crypt+0x458>
    c8e8:	ldr	r2, [pc, #-3000]	; bd38 <rb_crypt+0x10f8>
    c8ec:	add	r2, pc, r2
    c8f0:	b	bbbc <rb_crypt+0xf7c>
    c8f4:	str	r3, [sp, #28]
    c8f8:	str	r3, [sp, #24]
    c8fc:	str	r3, [sp, #20]
    c900:	b	b5fc <rb_crypt+0x9bc>

0000c904 <rb_init_bh>:
    c904:	push	{r4, lr}
    c908:	mov	r1, #12
    c90c:	mov	r0, #1
    c910:	bl	45ec <calloc@plt>
    c914:	cmp	r0, #0
    c918:	beq	c92c <rb_init_bh+0x28>
    c91c:	ldr	r3, [pc, #12]	; c930 <rb_init_bh+0x2c>
    c920:	add	r3, pc, r3
    c924:	str	r0, [r3]
    c928:	pop	{r4, pc}
    c92c:	bl	4988 <rb_outofmemory@plt>
    c930:	.word	0x00033078

0000c934 <rb_bh_create>:
    c934:	cmp	r0, #0
    c938:	cmpne	r1, #0
    c93c:	push	{r4, r5, r6, r7, r8, lr}
    c940:	ble	ca00 <rb_bh_create+0xcc>
    c944:	cmp	r0, #11
    c948:	mov	r6, r0
    c94c:	bls	ca24 <rb_bh_create+0xf0>
    c950:	mov	r7, r1
    c954:	mov	r0, #1
    c958:	mov	r1, #48	; 0x30
    c95c:	mov	r5, r2
    c960:	bl	45ec <calloc@plt>
    c964:	subs	r4, r0, #0
    c968:	beq	c9fc <rb_bh_create+0xc8>
    c96c:	cmp	r5, #0
    c970:	str	r6, [r4, #12]
    c974:	str	r7, [r4, #16]
    c978:	beq	c9a8 <rb_bh_create+0x74>
    c97c:	mov	r0, r5
    c980:	bl	47e4 <strlen@plt>
    c984:	add	r6, r0, #1
    c988:	mov	r0, r6
    c98c:	bl	49ac <malloc@plt>
    c990:	subs	r7, r0, #0
    c994:	beq	c9fc <rb_bh_create+0xc8>
    c998:	mov	r2, r6
    c99c:	mov	r1, r5
    c9a0:	bl	4808 <memcpy@plt>
    c9a4:	str	r7, [r4, #44]	; 0x2c
    c9a8:	ldr	r3, [pc, #152]	; ca48 <rb_bh_create+0x114>
    c9ac:	mov	r2, #0
    c9b0:	add	r3, pc, r3
    c9b4:	str	r2, [r4, #4]
    c9b8:	ldr	r3, [r3]
    c9bc:	str	r4, [r4]
    c9c0:	ldr	r2, [r3]
    c9c4:	cmp	r2, #0
    c9c8:	str	r2, [r4, #8]
    c9cc:	strne	r4, [r2, #4]
    c9d0:	beq	c9ec <rb_bh_create+0xb8>
    c9d4:	ldr	r2, [r3, #8]
    c9d8:	str	r4, [r3]
    c9dc:	add	r2, r2, #1
    c9e0:	mov	r0, r4
    c9e4:	str	r2, [r3, #8]
    c9e8:	pop	{r4, r5, r6, r7, r8, pc}
    c9ec:	ldr	r2, [r3, #4]
    c9f0:	cmp	r2, #0
    c9f4:	streq	r4, [r3, #4]
    c9f8:	b	c9d4 <rb_bh_create+0xa0>
    c9fc:	bl	4988 <rb_outofmemory@plt>
    ca00:	ldr	r2, [pc, #68]	; ca4c <rb_bh_create+0x118>
    ca04:	ldr	r1, [pc, #68]	; ca50 <rb_bh_create+0x11c>
    ca08:	ldr	r0, [pc, #68]	; ca54 <rb_bh_create+0x120>
    ca0c:	mov	r3, #147	; 0x93
    ca10:	add	r2, pc, r2
    ca14:	add	r1, pc, r1
    ca18:	add	r0, pc, r0
    ca1c:	bl	491c <rb_lib_log@plt>
    ca20:	bl	43c4 <abort@plt>
    ca24:	ldr	r2, [pc, #44]	; ca58 <rb_bh_create+0x124>
    ca28:	ldr	r1, [pc, #44]	; ca5c <rb_bh_create+0x128>
    ca2c:	ldr	r0, [pc, #44]	; ca60 <rb_bh_create+0x12c>
    ca30:	mov	r3, #151	; 0x97
    ca34:	add	r2, pc, r2
    ca38:	add	r1, pc, r1
    ca3c:	add	r0, pc, r0
    ca40:	bl	491c <rb_lib_log@plt>
    ca44:	bl	43c4 <abort@plt>
    ca48:	.word	0x00032fe8
    ca4c:	.word	0x0000dfd4
    ca50:	.word	0x0000dfdc
    ca54:	.word	0x0000e004
    ca58:	.word	0x0000dfb0
    ca5c:	.word	0x0000e00c
    ca60:	.word	0x0000dfe0

0000ca64 <rb_bh_alloc>:
    ca64:	cmp	r0, #0
    ca68:	push	{r4, lr}
    ca6c:	beq	ca88 <rb_bh_alloc+0x24>
    ca70:	ldr	r1, [r0, #12]
    ca74:	mov	r0, #1
    ca78:	bl	45ec <calloc@plt>
    ca7c:	cmp	r0, #0
    ca80:	popne	{r4, pc}
    ca84:	bl	4988 <rb_outofmemory@plt>
    ca88:	ldr	r2, [pc, #28]	; caac <rb_bh_alloc+0x48>
    ca8c:	ldr	r1, [pc, #28]	; cab0 <rb_bh_alloc+0x4c>
    ca90:	ldr	r0, [pc, #28]	; cab4 <rb_bh_alloc+0x50>
    ca94:	mov	r3, #186	; 0xba
    ca98:	add	r2, pc, r2
    ca9c:	add	r1, pc, r1
    caa0:	add	r0, pc, r0
    caa4:	bl	491c <rb_lib_log@plt>
    caa8:	bl	43c4 <abort@plt>
    caac:	.word	0x0000df4c
    cab0:	.word	0x0000dfe4
    cab4:	.word	0x0000df7c

0000cab8 <rb_bh_free>:
    cab8:	cmp	r0, #0
    cabc:	push	{r4, lr}
    cac0:	beq	cadc <rb_bh_free+0x24>
    cac4:	cmp	r1, #0
    cac8:	beq	caf0 <rb_bh_free+0x38>
    cacc:	mov	r0, r1
    cad0:	bl	46f4 <free@plt>
    cad4:	mov	r0, #0
    cad8:	pop	{r4, pc}
    cadc:	ldr	r0, [pc, #32]	; cb04 <rb_bh_free+0x4c>
    cae0:	add	r0, pc, r0
    cae4:	bl	491c <rb_lib_log@plt>
    cae8:	mov	r0, #1
    caec:	pop	{r4, pc}
    caf0:	ldr	r0, [pc, #16]	; cb08 <rb_bh_free+0x50>
    caf4:	add	r0, pc, r0
    caf8:	bl	491c <rb_lib_log@plt>
    cafc:	mov	r0, #1
    cb00:	pop	{r4, pc}
    cb04:	.word	0x0000dfc0
    cb08:	.word	0x0000dfcc

0000cb0c <rb_bh_destroy>:
    cb0c:	push	{r4, lr}
    cb10:	subs	r4, r0, #0
    cb14:	beq	cb80 <rb_bh_destroy+0x74>
    cb18:	ldr	r3, [pc, #104]	; cb88 <rb_bh_destroy+0x7c>
    cb1c:	ldr	r2, [r4, #8]
    cb20:	add	r3, pc, r3
    cb24:	cmp	r2, #0
    cb28:	ldr	r1, [r3]
    cb2c:	ldr	r3, [r4, #4]
    cb30:	ldr	r0, [r4, #44]	; 0x2c
    cb34:	strne	r3, [r2, #4]
    cb38:	streq	r3, [r1, #4]
    cb3c:	ldr	r3, [r4, #4]
    cb40:	cmp	r3, #0
    cb44:	strne	r2, [r3, #8]
    cb48:	ldr	r3, [r1, #8]
    cb4c:	streq	r2, [r1]
    cb50:	mov	r2, #0
    cb54:	sub	r3, r3, #1
    cb58:	cmp	r0, r2
    cb5c:	str	r2, [r4, #4]
    cb60:	str	r2, [r4, #8]
    cb64:	str	r3, [r1, #8]
    cb68:	beq	cb70 <rb_bh_destroy+0x64>
    cb6c:	bl	46f4 <free@plt>
    cb70:	mov	r0, r4
    cb74:	bl	46f4 <free@plt>
    cb78:	mov	r0, #0
    cb7c:	pop	{r4, pc}
    cb80:	mov	r0, #1
    cb84:	pop	{r4, pc}
    cb88:	.word	0x00032e78

0000cb8c <rb_bh_usage>:
    cb8c:	cmp	r1, #0
    cb90:	movne	ip, #0
    cb94:	strne	ip, [r1]
    cb98:	cmp	r2, #0
    cb9c:	movne	r1, #0
    cba0:	strne	r1, [r2]
    cba4:	ldr	r0, [sp]
    cba8:	cmp	r3, #0
    cbac:	movne	r2, #0
    cbb0:	strne	r2, [r3]
    cbb4:	cmp	r0, #0
    cbb8:	ldrne	r3, [pc, #8]	; cbc8 <rb_bh_usage+0x3c>
    cbbc:	addne	r3, pc, r3
    cbc0:	strne	r3, [r0]
    cbc4:	bx	lr
    cbc8:	.word	0x0000df24

0000cbcc <rb_bh_usage_all>:
    cbcc:	push	{r4, r5, r6, r7, lr}
    cbd0:	subs	r6, r0, #0
    cbd4:	sub	sp, sp, #12
    cbd8:	beq	cc44 <rb_bh_usage_all+0x78>
    cbdc:	ldr	r3, [pc, #104]	; cc4c <rb_bh_usage_all+0x80>
    cbe0:	add	r3, pc, r3
    cbe4:	ldr	r3, [r3]
    cbe8:	ldr	r4, [r3]
    cbec:	cmp	r4, #0
    cbf0:	beq	cc44 <rb_bh_usage_all+0x78>
    cbf4:	ldr	r5, [pc, #84]	; cc50 <rb_bh_usage_all+0x84>
    cbf8:	mov	r7, r1
    cbfc:	add	r5, pc, r5
    cc00:	ldr	ip, [r4]
    cc04:	ldr	r0, [ip, #28]
    cc08:	ldr	r3, [ip, #16]
    cc0c:	ldr	r2, [ip, #12]
    cc10:	ldr	r1, [ip, #40]	; 0x28
    cc14:	mul	r3, r3, r0
    cc18:	ldr	ip, [ip, #44]	; 0x2c
    cc1c:	sub	r0, r3, r1
    cc20:	cmp	ip, #0
    cc24:	movne	r5, ip
    cc28:	mul	r3, r2, r3
    cc2c:	stm	sp, {r5, r7}
    cc30:	mul	r2, r2, r0
    cc34:	blx	r6
    cc38:	ldr	r4, [r4, #8]
    cc3c:	cmp	r4, #0
    cc40:	bne	cc00 <rb_bh_usage_all+0x34>
    cc44:	add	sp, sp, #12
    cc48:	pop	{r4, r5, r6, r7, pc}
    cc4c:	.word	0x00032db8
    cc50:	.word	0x0000def4

0000cc54 <rb_bh_total_usage>:
    cc54:	ldr	r3, [pc, #108]	; ccc8 <rb_bh_total_usage+0x74>
    cc58:	push	{r4, r5, r6, r7, lr}
    cc5c:	add	r3, pc, r3
    cc60:	ldr	r3, [r3]
    cc64:	ldr	ip, [r3]
    cc68:	cmp	ip, #0
    cc6c:	beq	ccbc <rb_bh_total_usage+0x68>
    cc70:	mov	r5, #0
    cc74:	mov	r6, r5
    cc78:	ldr	r2, [ip]
    cc7c:	ldr	ip, [ip, #8]
    cc80:	ldr	r7, [r2, #28]
    cc84:	ldr	r3, [r2, #16]
    cc88:	ldr	lr, [r2, #40]	; 0x28
    cc8c:	ldr	r4, [r2, #12]
    cc90:	mul	r3, r3, r7
    cc94:	cmp	ip, #0
    cc98:	sub	r2, r3, lr
    cc9c:	mla	r6, r4, r3, r6
    cca0:	mla	r5, r4, r2, r5
    cca4:	bne	cc78 <rb_bh_total_usage+0x24>
    cca8:	cmp	r0, #0
    ccac:	strne	r6, [r0]
    ccb0:	cmp	r1, #0
    ccb4:	strne	r5, [r1]
    ccb8:	pop	{r4, r5, r6, r7, pc}
    ccbc:	mov	r5, ip
    ccc0:	mov	r6, ip
    ccc4:	b	cca8 <rb_bh_total_usage+0x54>
    ccc8:	.word	0x00032d3c

0000cccc <rb_unsupported_event>:
    cccc:	mov	r0, #0
    ccd0:	bx	lr

0000ccd4 <rb_checktimeouts>:
    ccd4:	ldr	r3, [pc, #220]	; cdb8 <rb_checktimeouts+0xe4>
    ccd8:	add	r3, pc, r3
    ccdc:	ldr	r3, [r3]
    cce0:	cmp	r3, #0
    cce4:	bxeq	lr
    cce8:	ldr	r2, [pc, #204]	; cdbc <rb_checktimeouts+0xe8>
    ccec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccf0:	sub	sp, sp, #12
    ccf4:	ldr	r7, [pc, #196]	; cdc0 <rb_checktimeouts+0xec>
    ccf8:	ldr	sl, [pc, #196]	; cdc4 <rb_checktimeouts+0xf0>
    ccfc:	add	r2, pc, r2
    cd00:	ldr	r4, [r3, #8]
    cd04:	add	r7, pc, r7
    cd08:	add	sl, pc, sl
    cd0c:	str	r2, [sp, #4]
    cd10:	mov	r8, #0
    cd14:	b	cd28 <rb_checktimeouts+0x54>
    cd18:	cmp	r4, #0
    cd1c:	beq	cdb0 <rb_checktimeouts+0xdc>
    cd20:	mov	r3, r4
    cd24:	ldr	r4, [r4, #8]
    cd28:	ldr	r6, [r3]
    cd2c:	ldr	r5, [r6]
    cd30:	cmp	r5, #0
    cd34:	beq	cd18 <rb_checktimeouts+0x44>
    cd38:	ldrb	r3, [r5, #16]
    cd3c:	tst	r3, #1
    cd40:	beq	cd18 <rb_checktimeouts+0x44>
    cd44:	ldr	fp, [r6, #16]
    cd48:	bl	47f0 <rb_current_time@plt>
    cd4c:	cmp	fp, r0
    cd50:	bge	cd18 <rb_checktimeouts+0x44>
    cd54:	ldr	r3, [r6, #12]
    cd58:	ldr	r2, [r6, #8]
    cd5c:	cmp	r3, #0
    cd60:	ldr	fp, [r6, #20]
    cd64:	ldreq	r1, [sp, #4]
    cd68:	ldr	r9, [r6, #24]
    cd6c:	strne	r2, [r3, #4]
    cd70:	ldrne	r2, [r6, #8]
    cd74:	streq	r2, [r1, #4]
    cd78:	cmp	r2, #0
    cd7c:	strne	r3, [r2, #8]
    cd80:	streq	r3, [sl]
    cd84:	ldr	r3, [r7, #8]
    cd88:	mov	r0, r6
    cd8c:	sub	r3, r3, #1
    cd90:	str	r8, [r5, #44]	; 0x2c
    cd94:	str	r3, [r7, #8]
    cd98:	bl	46f4 <free@plt>
    cd9c:	mov	r1, r9
    cda0:	mov	r0, r5
    cda4:	blx	fp
    cda8:	cmp	r4, #0
    cdac:	bne	cd20 <rb_checktimeouts+0x4c>
    cdb0:	add	sp, sp, #12
    cdb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cdb8:	.word	0x00032cc4
    cdbc:	.word	0x00032ca0
    cdc0:	.word	0x00032c98
    cdc4:	.word	0x00032c94

0000cdc8 <inet_pton6>:
    cdc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cdcc:	sub	sp, sp, #52	; 0x34
    cdd0:	ldrb	r2, [r0]
    cdd4:	add	r6, sp, #32
    cdd8:	mov	r3, #0
    cddc:	str	r3, [r6, #4]
    cde0:	cmp	r2, #58	; 0x3a
    cde4:	str	r3, [sp, #32]
    cde8:	str	r3, [r6, #8]
    cdec:	str	r3, [r6, #12]
    cdf0:	add	r3, sp, #48	; 0x30
    cdf4:	mov	r5, r0
    cdf8:	str	r1, [sp, #12]
    cdfc:	str	r6, [sp, #4]
    ce00:	str	r3, [sp, #8]
    ce04:	beq	cff4 <inet_pton6+0x22c>
    ce08:	bl	482c <__ctype_tolower_loc@plt>
    ce0c:	ldr	fp, [pc, #652]	; d0a0 <inet_pton6+0x2d8>
    ce10:	mov	r4, #0
    ce14:	ldr	r8, [pc, #648]	; d0a4 <inet_pton6+0x2dc>
    ce18:	mov	r9, r4
    ce1c:	add	fp, pc, fp
    ce20:	str	r4, [sp, #16]
    ce24:	str	r5, [sp, #20]
    ce28:	ldr	r7, [r0]
    ce2c:	ldrb	r3, [r5], #1
    ce30:	ldr	sl, [r7, r3, lsl #2]
    ce34:	cmp	sl, #0
    ce38:	beq	ce74 <inet_pton6+0xac>
    ce3c:	mov	r1, sl
    ce40:	mov	r0, fp
    ce44:	bl	45b0 <strchr@plt>
    ce48:	cmp	r0, #0
    ce4c:	beq	cf2c <inet_pton6+0x164>
    ce50:	sub	r0, r0, fp
    ce54:	orr	r4, r0, r4, lsl #4
    ce58:	cmp	r4, r8
    ce5c:	bhi	cf1c <inet_pton6+0x154>
    ce60:	ldrb	r3, [r5], #1
    ce64:	mov	r9, #1
    ce68:	ldr	sl, [r7, r3, lsl #2]
    ce6c:	cmp	sl, #0
    ce70:	bne	ce3c <inet_pton6+0x74>
    ce74:	cmp	r9, #0
    ce78:	beq	cea0 <inet_pton6+0xd8>
    ce7c:	ldr	r1, [sp, #4]
    ce80:	ldr	r2, [sp, #8]
    ce84:	add	r3, r1, #2
    ce88:	cmp	r2, r3
    ce8c:	bcc	cf1c <inet_pton6+0x154>
    ce90:	lsr	r2, r4, #8
    ce94:	strb	r4, [r1, #1]
    ce98:	strb	r2, [r1]
    ce9c:	str	r3, [sp, #4]
    cea0:	ldr	r3, [sp, #16]
    cea4:	cmp	r3, #0
    cea8:	beq	cf0c <inet_pton6+0x144>
    ceac:	ldr	r2, [sp, #4]
    ceb0:	ldr	r1, [sp, #8]
    ceb4:	sub	r3, r2, r3
    ceb8:	cmp	r2, r1
    cebc:	beq	cf1c <inet_pton6+0x154>
    cec0:	cmp	r3, #0
    cec4:	ble	ceec <inet_pton6+0x124>
    cec8:	mov	r3, r2
    cecc:	ldr	ip, [sp, #16]
    ced0:	ldr	r2, [sp, #8]
    ced4:	mov	r0, #0
    ced8:	ldrb	r1, [r3, #-1]
    cedc:	strb	r1, [r2, #-1]!
    cee0:	strb	r0, [r3, #-1]!
    cee4:	cmp	r3, ip
    cee8:	bne	ced8 <inet_pton6+0x110>
    ceec:	ldm	r6!, {r0, r1, r2, r3}
    cef0:	mov	ip, #1
    cef4:	ldr	lr, [sp, #12]
    cef8:	str	r0, [lr]
    cefc:	str	r1, [lr, #4]
    cf00:	str	r2, [lr, #8]
    cf04:	str	r3, [lr, #12]
    cf08:	b	cf20 <inet_pton6+0x158>
    cf0c:	ldr	r3, [sp, #4]
    cf10:	ldr	r2, [sp, #8]
    cf14:	cmp	r3, r2
    cf18:	beq	ceec <inet_pton6+0x124>
    cf1c:	mov	ip, #0
    cf20:	mov	r0, ip
    cf24:	add	sp, sp, #52	; 0x34
    cf28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cf2c:	cmp	sl, #58	; 0x3a
    cf30:	beq	d008 <inet_pton6+0x240>
    cf34:	ldrb	r3, [r5]
    cf38:	adds	r3, r3, #0
    cf3c:	movne	r3, #1
    cf40:	cmp	sl, #46	; 0x2e
    cf44:	movne	r3, #0
    cf48:	cmp	r3, #0
    cf4c:	beq	ce2c <inet_pton6+0x64>
    cf50:	ldr	r3, [sp, #4]
    cf54:	add	r7, r3, #4
    cf58:	ldr	r3, [sp, #8]
    cf5c:	cmp	r3, r7
    cf60:	bcc	cf1c <inet_pton6+0x154>
    cf64:	add	ip, sp, #48	; 0x30
    cf68:	ldr	r8, [sp, #20]
    cf6c:	mov	lr, r0
    cf70:	strb	r0, [ip, #-20]!	; 0xffffffec
    cf74:	mov	r2, r0
    cf78:	mov	r4, r0
    cf7c:	mov	r5, #1
    cf80:	mov	r0, #10
    cf84:	ldrb	r3, [r8], #1
    cf88:	cmp	r3, #0
    cf8c:	sub	r1, r3, #48	; 0x30
    cf90:	beq	cfd8 <inet_pton6+0x210>
    cf94:	cmp	r1, #9
    cf98:	bhi	d06c <inet_pton6+0x2a4>
    cf9c:	ldrb	r3, [ip]
    cfa0:	smlabb	r1, r0, r3, r1
    cfa4:	cmp	r1, #255	; 0xff
    cfa8:	bhi	cf1c <inet_pton6+0x154>
    cfac:	cmp	r2, #0
    cfb0:	strb	r1, [ip]
    cfb4:	bne	cf84 <inet_pton6+0x1bc>
    cfb8:	add	lr, lr, #1
    cfbc:	cmp	lr, #4
    cfc0:	bgt	cf1c <inet_pton6+0x154>
    cfc4:	ldrb	r3, [r8], #1
    cfc8:	mov	r2, r5
    cfcc:	cmp	r3, #0
    cfd0:	sub	r1, r3, #48	; 0x30
    cfd4:	bne	cf94 <inet_pton6+0x1cc>
    cfd8:	cmp	lr, #3
    cfdc:	ble	cf1c <inet_pton6+0x154>
    cfe0:	ldr	r2, [sp, #4]
    cfe4:	ldr	r3, [sp, #28]
    cfe8:	str	r7, [sp, #4]
    cfec:	str	r3, [r2]
    cff0:	b	cea0 <inet_pton6+0xd8>
    cff4:	ldrb	r3, [r0, #1]
    cff8:	cmp	r3, #58	; 0x3a
    cffc:	bne	cf1c <inet_pton6+0x154>
    d000:	add	r5, r0, #1
    d004:	b	ce08 <inet_pton6+0x40>
    d008:	cmp	r9, #0
    d00c:	beq	d050 <inet_pton6+0x288>
    d010:	ldrb	r3, [r5]
    d014:	cmp	r3, #0
    d018:	beq	cf1c <inet_pton6+0x154>
    d01c:	ldr	r1, [sp, #4]
    d020:	ldr	r2, [sp, #8]
    d024:	add	r3, r1, #2
    d028:	cmp	r2, r3
    d02c:	bcc	cf1c <inet_pton6+0x154>
    d030:	lsr	r2, r4, #8
    d034:	strb	r4, [r1, #1]
    d038:	strb	r2, [r1]
    d03c:	mov	r9, r0
    d040:	str	r3, [sp, #4]
    d044:	str	r5, [sp, #20]
    d048:	mov	r4, #0
    d04c:	b	ce2c <inet_pton6+0x64>
    d050:	ldr	r3, [sp, #16]
    d054:	cmp	r3, #0
    d058:	bne	cf1c <inet_pton6+0x154>
    d05c:	ldr	r3, [sp, #4]
    d060:	str	r5, [sp, #20]
    d064:	str	r3, [sp, #16]
    d068:	b	ce2c <inet_pton6+0x64>
    d06c:	cmp	r3, #46	; 0x2e
    d070:	movne	r2, #0
    d074:	andeq	r2, r2, #1
    d078:	eor	r2, r2, #1
    d07c:	cmp	lr, #4
    d080:	movne	r3, r2
    d084:	orreq	r3, r2, #1
    d088:	cmp	r3, #0
    d08c:	mov	r2, r4
    d090:	bne	cf1c <inet_pton6+0x154>
    d094:	strb	r3, [ip, #1]
    d098:	add	ip, ip, #1
    d09c:	b	cf84 <inet_pton6+0x1bc>
    d0a0:	.word	0x0000dce4
    d0a4:	.word	0x0000ffff

0000d0a8 <rb_getmaxconnect>:
    d0a8:	ldr	r3, [pc, #16]	; d0c0 <rb_getmaxconnect+0x18>
    d0ac:	ldr	r2, [pc, #16]	; d0c4 <rb_getmaxconnect+0x1c>
    d0b0:	add	r3, pc, r3
    d0b4:	ldr	r3, [r3, r2]
    d0b8:	ldr	r0, [r3]
    d0bc:	bx	lr
    d0c0:	.word	0x0001ff48
    d0c4:	.word	0x000003a0

0000d0c8 <rb_set_buffers>:
    d0c8:	push	{r4, r5, lr}
    d0cc:	sub	sp, sp, #20
    d0d0:	subs	r4, r0, #0
    d0d4:	str	r1, [sp, #12]
    d0d8:	beq	d104 <rb_set_buffers+0x3c>
    d0dc:	mov	r5, #4
    d0e0:	ldr	r0, [r4, #12]
    d0e4:	add	r3, sp, #12
    d0e8:	str	r5, [sp]
    d0ec:	mov	r2, #8
    d0f0:	mov	r1, #1
    d0f4:	str	r3, [sp, #8]
    d0f8:	bl	4ca0 <setsockopt@plt>
    d0fc:	cmp	r0, #0
    d100:	beq	d110 <rb_set_buffers+0x48>
    d104:	mov	r0, #0
    d108:	add	sp, sp, #20
    d10c:	pop	{r4, r5, pc}
    d110:	ldr	r0, [r4, #12]
    d114:	ldr	r3, [sp, #8]
    d118:	str	r5, [sp]
    d11c:	mov	r2, #7
    d120:	mov	r1, #1
    d124:	bl	4ca0 <setsockopt@plt>
    d128:	clz	r0, r0
    d12c:	lsr	r0, r0, #5
    d130:	add	sp, sp, #20
    d134:	pop	{r4, r5, pc}

0000d138 <rb_settimeout>:
    d138:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d13c:	subs	r6, r0, #0
    d140:	ldr	r8, [pc, #360]	; d2b0 <rb_settimeout+0x178>
    d144:	add	r8, pc, r8
    d148:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    d14c:	cmp	r2, #0
    d150:	mov	r9, r3
    d154:	mov	r7, r2
    d158:	mov	r5, r1
    d15c:	ldr	r4, [r6, #44]	; 0x2c
    d160:	beq	d1f4 <rb_settimeout+0xbc>
    d164:	cmp	r4, #0
    d168:	beq	d25c <rb_settimeout+0x124>
    d16c:	str	r6, [r4]
    d170:	bl	47f0 <rb_current_time@plt>
    d174:	ldr	r3, [pc, #312]	; d2b4 <rb_settimeout+0x17c>
    d178:	mov	r1, #0
    d17c:	add	r3, pc, r3
    d180:	str	r1, [r4, #8]
    d184:	ldr	r2, [r3]
    d188:	str	r7, [r4, #20]
    d18c:	cmp	r2, r1
    d190:	add	r1, r4, #4
    d194:	str	r9, [r4, #24]
    d198:	str	r4, [r4, #4]
    d19c:	str	r2, [r4, #12]
    d1a0:	add	r0, r0, r5
    d1a4:	str	r0, [r4, #16]
    d1a8:	strne	r1, [r2, #4]
    d1ac:	beq	d27c <rb_settimeout+0x144>
    d1b0:	ldr	r4, [pc, #256]	; d2b8 <rb_settimeout+0x180>
    d1b4:	add	r4, pc, r4
    d1b8:	ldr	r2, [r4, #12]
    d1bc:	ldr	r3, [r4, #8]
    d1c0:	cmp	r2, #0
    d1c4:	add	r3, r3, #1
    d1c8:	str	r1, [r4]
    d1cc:	str	r3, [r4, #8]
    d1d0:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    d1d4:	ldr	r1, [pc, #224]	; d2bc <rb_settimeout+0x184>
    d1d8:	ldr	r0, [pc, #224]	; d2c0 <rb_settimeout+0x188>
    d1dc:	mov	r3, #5
    d1e0:	ldr	r1, [r8, r1]
    d1e4:	add	r0, pc, r0
    d1e8:	bl	4b08 <rb_event_add@plt>
    d1ec:	str	r0, [r4, #12]
    d1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d1f4:	cmp	r4, #0
    d1f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    d1fc:	ldr	r3, [r4, #12]
    d200:	cmp	r3, #0
    d204:	beq	d29c <rb_settimeout+0x164>
    d208:	ldr	r2, [r4, #8]
    d20c:	str	r2, [r3, #4]
    d210:	ldr	r2, [r4, #8]
    d214:	cmp	r2, #0
    d218:	strne	r3, [r2, #8]
    d21c:	beq	d28c <rb_settimeout+0x154>
    d220:	ldr	r5, [pc, #156]	; d2c4 <rb_settimeout+0x18c>
    d224:	mov	r0, r4
    d228:	add	r5, pc, r5
    d22c:	ldr	r4, [r5, #8]
    d230:	sub	r4, r4, #1
    d234:	str	r4, [r5, #8]
    d238:	bl	46f4 <free@plt>
    d23c:	cmp	r4, #0
    d240:	mov	r3, #0
    d244:	str	r3, [r6, #44]	; 0x2c
    d248:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    d24c:	ldr	r0, [r5, #12]
    d250:	bl	449c <rb_event_delete@plt>
    d254:	str	r4, [r5, #12]
    d258:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d25c:	mov	r1, #28
    d260:	mov	r0, #1
    d264:	bl	45ec <calloc@plt>
    d268:	cmp	r0, #0
    d26c:	movne	r4, r0
    d270:	strne	r0, [r6, #44]	; 0x2c
    d274:	bne	d16c <rb_settimeout+0x34>
    d278:	bl	4988 <rb_outofmemory@plt>
    d27c:	ldr	r2, [r3, #4]
    d280:	cmp	r2, #0
    d284:	streq	r1, [r3, #4]
    d288:	b	d1b0 <rb_settimeout+0x78>
    d28c:	ldr	r2, [pc, #52]	; d2c8 <rb_settimeout+0x190>
    d290:	add	r2, pc, r2
    d294:	str	r3, [r2]
    d298:	b	d220 <rb_settimeout+0xe8>
    d29c:	ldr	r1, [pc, #40]	; d2cc <rb_settimeout+0x194>
    d2a0:	ldr	r2, [r4, #8]
    d2a4:	add	r1, pc, r1
    d2a8:	str	r2, [r1, #4]
    d2ac:	b	d214 <rb_settimeout+0xdc>
    d2b0:	.word	0x0001feb4
    d2b4:	.word	0x00032820
    d2b8:	.word	0x000327e8
    d2bc:	.word	0x0000034c
    d2c0:	.word	0x0000d938
    d2c4:	.word	0x00032774
    d2c8:	.word	0x0003270c
    d2cc:	.word	0x000326f8

0000d2d0 <rb_sctp_bindx>:
    d2d0:	mvn	r0, #0
    d2d4:	bx	lr

0000d2d8 <rb_inet_get_proto>:
    d2d8:	mov	r0, #6
    d2dc:	bx	lr

0000d2e0 <rb_connect_callback>:
    d2e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d2e4:	mov	r4, r0
    d2e8:	mov	r7, r1
    d2ec:	bl	4ce8 <__errno_location@plt>
    d2f0:	cmp	r4, #0
    d2f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    d2f8:	ldr	r2, [r4, #48]	; 0x30
    d2fc:	cmp	r2, #0
    d300:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    d304:	ldr	r6, [r2, #260]	; 0x104
    d308:	cmp	r6, #0
    d30c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    d310:	ldr	r9, [r0]
    d314:	mov	r3, #0
    d318:	ldr	r8, [r2, #264]	; 0x108
    d31c:	mov	r5, r0
    d320:	str	r3, [r2, #260]	; 0x104
    d324:	mov	r1, r3
    d328:	mov	r2, r3
    d32c:	mov	r0, r4
    d330:	bl	43e8 <rb_settimeout@plt>
    d334:	str	r9, [r5]
    d338:	mov	r2, r8
    d33c:	mov	r1, r7
    d340:	mov	r0, r4
    d344:	mov	r3, r6
    d348:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    d34c:	bx	r3

0000d350 <rb_connect_outcome>:
    d350:	push	{r4, r5, lr}
    d354:	sub	sp, sp, #20
    d358:	mov	r3, #0
    d35c:	mov	r2, #4
    d360:	subs	r4, r0, #0
    d364:	str	r3, [sp, #8]
    d368:	str	r2, [sp, #12]
    d36c:	beq	d3c8 <rb_connect_outcome+0x78>
    d370:	ldr	r3, [r4, #48]	; 0x30
    d374:	cmp	r3, #0
    d378:	beq	d3c8 <rb_connect_outcome+0x78>
    d37c:	ldr	r3, [r3, #260]	; 0x104
    d380:	cmp	r3, #0
    d384:	beq	d3c8 <rb_connect_outcome+0x78>
    d388:	add	r3, sp, #12
    d38c:	ldr	r0, [r4, #12]
    d390:	mov	r1, #1
    d394:	str	r3, [sp]
    d398:	add	r3, sp, #8
    d39c:	bl	4c7c <getsockopt@plt>
    d3a0:	cmp	r0, #0
    d3a4:	blt	d3bc <rb_connect_outcome+0x6c>
    d3a8:	ldr	r5, [sp, #8]
    d3ac:	cmp	r5, #0
    d3b0:	beq	d3d0 <rb_connect_outcome+0x80>
    d3b4:	bl	4ce8 <__errno_location@plt>
    d3b8:	str	r5, [r0]
    d3bc:	mov	r0, r4
    d3c0:	mov	r1, #4
    d3c4:	bl	d2e0 <rb_connect_callback>
    d3c8:	add	sp, sp, #20
    d3cc:	pop	{r4, r5, pc}
    d3d0:	mov	r1, r5
    d3d4:	mov	r0, r4
    d3d8:	bl	d2e0 <rb_connect_callback>
    d3dc:	add	sp, sp, #20
    d3e0:	pop	{r4, r5, pc}

0000d3e4 <rb_connect_timeout>:
    d3e4:	mov	r1, #3
    d3e8:	b	d2e0 <rb_connect_callback>

0000d3ec <rb_connect_sctp>:
    d3ec:	mov	r1, #4
    d3f0:	b	d2e0 <rb_connect_callback>

0000d3f4 <rb_connect_sockaddr>:
    d3f4:	subs	r3, r0, #0
    d3f8:	beq	d418 <rb_connect_sockaddr+0x24>
    d3fc:	mov	r0, r1
    d400:	ldr	r1, [r3, #48]	; 0x30
    d404:	push	{r4, lr}
    d408:	add	r1, r1, #128	; 0x80
    d40c:	bl	4808 <memcpy@plt>
    d410:	mov	r0, #1
    d414:	pop	{r4, pc}
    d418:	mov	r0, r3
    d41c:	bx	lr

0000d420 <rb_errstr>:
    d420:	cmp	r0, #6
    d424:	bhi	d438 <rb_errstr+0x18>
    d428:	ldr	r3, [pc, #20]	; d444 <rb_errstr+0x24>
    d42c:	add	r3, pc, r3
    d430:	ldr	r0, [r3, r0, lsl #2]
    d434:	bx	lr
    d438:	ldr	r0, [pc, #8]	; d448 <rb_errstr+0x28>
    d43c:	add	r0, pc, r0
    d440:	bx	lr
    d444:	.word	0x0001f610
    d448:	.word	0x0000d6f4

0000d44c <rb_listen>:
    d44c:	push	{r4, r5, r6, lr}
    d450:	mov	r4, r0
    d454:	ldrb	r3, [r0, #17]
    d458:	sub	sp, sp, #16
    d45c:	ldr	r0, [r0, #12]
    d460:	bic	r3, r3, #127	; 0x7f
    d464:	orr	r3, r3, #20
    d468:	strb	r3, [r4, #17]
    d46c:	mov	r5, r2
    d470:	str	r1, [sp, #12]
    d474:	bl	45e0 <listen@plt>
    d478:	adds	r5, r5, #0
    d47c:	movne	r5, #1
    d480:	cmp	r0, #0
    d484:	movne	r5, #0
    d488:	cmp	r5, #0
    d48c:	mov	r6, r0
    d490:	beq	d4b0 <rb_listen+0x64>
    d494:	mov	r3, #4
    d498:	ldr	r0, [r4, #12]
    d49c:	mov	r2, #9
    d4a0:	str	r3, [sp]
    d4a4:	mov	r1, #6
    d4a8:	add	r3, sp, #12
    d4ac:	bl	4ca0 <setsockopt@plt>
    d4b0:	mov	r0, r6
    d4b4:	add	sp, sp, #16
    d4b8:	pop	{r4, r5, r6, pc}

0000d4bc <rb_fdlist_init>:
    d4bc:	ldr	r3, [pc, #136]	; d54c <rb_fdlist_init+0x90>
    d4c0:	push	{r4, r5, r6, lr}
    d4c4:	add	r3, pc, r3
    d4c8:	mov	r6, r2
    d4cc:	ldr	r3, [r3, #16]
    d4d0:	cmp	r3, #0
    d4d4:	ldr	r3, [pc, #116]	; d550 <rb_fdlist_init+0x94>
    d4d8:	add	r3, pc, r3
    d4dc:	bne	d528 <rb_fdlist_init+0x6c>
    d4e0:	ldr	r2, [pc, #108]	; d554 <rb_fdlist_init+0x98>
    d4e4:	cmp	r0, #0
    d4e8:	ldr	r5, [r3, r2]
    d4ec:	str	r1, [r5]
    d4f0:	beq	d518 <rb_fdlist_init+0x5c>
    d4f4:	cmp	r1, #3
    d4f8:	ble	d518 <rb_fdlist_init+0x5c>
    d4fc:	mov	r4, #3
    d500:	mov	r0, r4
    d504:	bl	4940 <close@plt>
    d508:	ldr	r3, [r5]
    d50c:	add	r4, r4, #1
    d510:	cmp	r4, r3
    d514:	blt	d500 <rb_fdlist_init+0x44>
    d518:	ldr	r3, [pc, #56]	; d558 <rb_fdlist_init+0x9c>
    d51c:	mov	r2, #1
    d520:	add	r3, pc, r3
    d524:	str	r2, [r3, #16]
    d528:	ldr	r2, [pc, #44]	; d55c <rb_fdlist_init+0xa0>
    d52c:	mov	r1, r6
    d530:	add	r2, pc, r2
    d534:	mov	r0, #68	; 0x44
    d538:	bl	4ab4 <rb_bh_create@plt>
    d53c:	ldr	r3, [pc, #28]	; d560 <rb_fdlist_init+0xa4>
    d540:	add	r3, pc, r3
    d544:	str	r0, [r3, #20]
    d548:	pop	{r4, r5, r6, pc}
    d54c:	.word	0x000324d8
    d550:	.word	0x0001fb20
    d554:	.word	0x000003a0
    d558:	.word	0x0003247c
    d55c:	.word	0x0000d618
    d560:	.word	0x0003245c

0000d564 <rb_open>:
    d564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d568:	mov	r7, r1
    d56c:	ldr	r1, [pc, #384]	; d6f4 <rb_open+0x190>
    d570:	subs	r5, r0, #0
    d574:	mov	r8, r2
    d578:	add	r1, pc, r1
    d57c:	blt	d698 <rb_open+0x134>
    d580:	asr	r6, r5, #12
    d584:	asr	sl, r5, #24
    d588:	ldr	r3, [pc, #360]	; d6f8 <rb_open+0x194>
    d58c:	eor	r2, r6, sl
    d590:	eor	r2, r2, r5
    d594:	ldr	r9, [r1, r3]
    d598:	lsl	r2, r2, #20
    d59c:	lsr	r2, r2, #20
    d5a0:	ldr	r3, [r9]
    d5a4:	add	r2, r2, r2, lsl #1
    d5a8:	ldr	r3, [r3, r2, lsl #2]
    d5ac:	cmp	r3, #0
    d5b0:	beq	d5d0 <rb_open+0x6c>
    d5b4:	ldr	r4, [r3]
    d5b8:	ldr	r0, [r4, #12]
    d5bc:	cmp	r5, r0
    d5c0:	beq	d638 <rb_open+0xd4>
    d5c4:	ldr	r3, [r3, #8]
    d5c8:	cmp	r3, #0
    d5cc:	bne	d5b4 <rb_open+0x50>
    d5d0:	ldr	r3, [pc, #292]	; d6fc <rb_open+0x198>
    d5d4:	add	r3, pc, r3
    d5d8:	ldr	r0, [r3, #20]
    d5dc:	bl	4958 <rb_bh_alloc@plt>
    d5e0:	eor	r3, r6, sl
    d5e4:	eor	r3, r3, r5
    d5e8:	ldr	r2, [r9]
    d5ec:	lsl	r3, r3, #20
    d5f0:	mov	r1, #0
    d5f4:	lsr	r3, r3, #20
    d5f8:	add	r3, r3, r3, lsl #1
    d5fc:	lsl	r3, r3, #2
    d600:	mov	r4, r0
    d604:	str	r5, [r0, #12]
    d608:	str	r0, [r4]
    d60c:	str	r1, [r0, #4]
    d610:	ldr	r1, [r2, r3]
    d614:	add	r0, r2, r3
    d618:	cmp	r1, #0
    d61c:	str	r1, [r4, #8]
    d620:	strne	r4, [r1, #4]
    d624:	beq	d6d8 <rb_open+0x174>
    d628:	ldr	r1, [r0, #8]
    d62c:	str	r4, [r2, r3]
    d630:	add	r3, r1, #1
    d634:	str	r3, [r0, #8]
    d638:	ldrb	r3, [r4, #16]
    d63c:	tst	r3, #1
    d640:	bne	d6ac <rb_open+0x148>
    d644:	orr	r3, r3, #1
    d648:	cmp	r8, #0
    d64c:	strb	r3, [r4, #16]
    d650:	str	r5, [r4, #12]
    d654:	strb	r7, [r4, #17]
    d658:	beq	d67c <rb_open+0x118>
    d65c:	mov	r0, #128	; 0x80
    d660:	bl	49ac <malloc@plt>
    d664:	subs	r5, r0, #0
    d668:	beq	d6d4 <rb_open+0x170>
    d66c:	mov	r1, r8
    d670:	mov	r2, #128	; 0x80
    d674:	bl	46a0 <rb_strlcpy@plt>
    d678:	str	r5, [r4, #24]
    d67c:	ldr	r2, [pc, #124]	; d700 <rb_open+0x19c>
    d680:	mov	r0, r4
    d684:	add	r2, pc, r2
    d688:	ldr	r3, [r2, #24]
    d68c:	add	r3, r3, #1
    d690:	str	r3, [r2, #24]
    d694:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d698:	ldr	r3, [pc, #88]	; d6f8 <rb_open+0x194>
    d69c:	asr	r6, r5, #12
    d6a0:	asr	sl, r5, #24
    d6a4:	ldr	r9, [r1, r3]
    d6a8:	b	d5d0 <rb_open+0x6c>
    d6ac:	ldr	r2, [r4, #24]
    d6b0:	cmp	r2, #0
    d6b4:	beq	d6e8 <rb_open+0x184>
    d6b8:	ldr	r0, [pc, #68]	; d704 <rb_open+0x1a0>
    d6bc:	mov	r1, r5
    d6c0:	add	r0, pc, r0
    d6c4:	mov	r4, #0
    d6c8:	bl	491c <rb_lib_log@plt>
    d6cc:	mov	r0, r4
    d6d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d6d4:	bl	4988 <rb_outofmemory@plt>
    d6d8:	ldr	r1, [r0, #4]
    d6dc:	cmp	r1, #0
    d6e0:	streq	r4, [r0, #4]
    d6e4:	b	d628 <rb_open+0xc4>
    d6e8:	ldr	r2, [pc, #24]	; d708 <rb_open+0x1a4>
    d6ec:	add	r2, pc, r2
    d6f0:	b	d6b8 <rb_open+0x154>
    d6f4:	.word	0x0001fa80
    d6f8:	.word	0x000003c0
    d6fc:	.word	0x000323c8
    d700:	.word	0x00032318
    d704:	.word	0x0000d4a0
    d708:	.word	0x0000d46c

0000d70c <rb_dump_fd>:
    d70c:	ldr	r3, [pc, #140]	; d7a0 <rb_dump_fd+0x94>
    d710:	ldr	r2, [pc, #140]	; d7a4 <rb_dump_fd+0x98>
    d714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d718:	add	r3, pc, r3
    d71c:	ldr	r7, [pc, #132]	; d7a8 <rb_dump_fd+0x9c>
    d720:	mov	r6, r0
    d724:	add	r7, pc, r7
    d728:	ldr	r8, [r3, r2]
    d72c:	mov	r5, r1
    d730:	mov	r9, #0
    d734:	ldr	r3, [r8]
    d738:	add	r2, r3, r9
    d73c:	ldr	r2, [r2, #8]
    d740:	cmp	r2, #0
    d744:	beq	d790 <rb_dump_fd+0x84>
    d748:	ldr	r4, [r3, r9]
    d74c:	cmp	r4, #0
    d750:	beq	d790 <rb_dump_fd+0x84>
    d754:	ldr	r3, [r4]
    d758:	mov	r2, r5
    d75c:	cmp	r3, #0
    d760:	beq	d784 <rb_dump_fd+0x78>
    d764:	ldrb	r1, [r3, #16]
    d768:	tst	r1, #1
    d76c:	beq	d784 <rb_dump_fd+0x78>
    d770:	ldr	r1, [r3, #24]
    d774:	ldr	r0, [r3, #12]
    d778:	cmp	r1, #0
    d77c:	moveq	r1, r7
    d780:	blx	r6
    d784:	ldr	r4, [r4, #8]
    d788:	cmp	r4, #0
    d78c:	bne	d754 <rb_dump_fd+0x48>
    d790:	add	r9, r9, #12
    d794:	cmp	r9, #49152	; 0xc000
    d798:	bne	d734 <rb_dump_fd+0x28>
    d79c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d7a0:	.word	0x0001f8e0
    d7a4:	.word	0x000003c0
    d7a8:	.word	0x0000e618

0000d7ac <rb_note>:
    d7ac:	push	{r4, r5, r6, lr}
    d7b0:	subs	r4, r0, #0
    d7b4:	popeq	{r4, r5, r6, pc}
    d7b8:	ldr	r0, [r4, #24]
    d7bc:	mov	r5, r1
    d7c0:	cmp	r0, #0
    d7c4:	beq	d7cc <rb_note+0x20>
    d7c8:	bl	46f4 <free@plt>
    d7cc:	mov	r0, #128	; 0x80
    d7d0:	bl	49ac <malloc@plt>
    d7d4:	subs	r6, r0, #0
    d7d8:	beq	d7f0 <rb_note+0x44>
    d7dc:	mov	r1, r5
    d7e0:	mov	r2, #128	; 0x80
    d7e4:	bl	46a0 <rb_strlcpy@plt>
    d7e8:	str	r6, [r4, #24]
    d7ec:	pop	{r4, r5, r6, pc}
    d7f0:	bl	4988 <rb_outofmemory@plt>

0000d7f4 <rb_set_type>:
    d7f4:	strb	r1, [r0, #17]
    d7f8:	bx	lr

0000d7fc <rb_get_type>:
    d7fc:	ldrb	r0, [r0, #17]
    d800:	bx	lr

0000d804 <rb_fd_ssl>:
    d804:	cmp	r0, #0
    d808:	ldrbne	r0, [r0, #17]
    d80c:	lsrne	r0, r0, #5
    d810:	andne	r0, r0, #1
    d814:	bx	lr

0000d818 <rb_get_fd>:
    d818:	cmp	r0, #0
    d81c:	ldrne	r0, [r0, #12]
    d820:	mvneq	r0, #0
    d824:	bx	lr

0000d828 <rb_get_sockerr>:
    d828:	push	{r4, r5, r6, lr}
    d82c:	sub	sp, sp, #16
    d830:	ldrb	r3, [r0, #17]
    d834:	mov	r2, #0
    d838:	mov	r5, #4
    d83c:	tst	r3, #4
    d840:	str	r2, [sp, #8]
    d844:	str	r5, [sp, #12]
    d848:	beq	d8a4 <rb_get_sockerr+0x7c>
    d84c:	mov	r4, r0
    d850:	bl	4ce8 <__errno_location@plt>
    d854:	mov	r6, r0
    d858:	mov	r0, r4
    d85c:	ldr	r4, [r6]
    d860:	bl	44e4 <rb_get_fd@plt>
    d864:	add	r3, sp, #12
    d868:	str	r3, [sp]
    d86c:	mov	r2, r5
    d870:	add	r3, sp, #8
    d874:	mov	r1, #1
    d878:	bl	4c7c <getsockopt@plt>
    d87c:	cmp	r0, #0
    d880:	beq	d894 <rb_get_sockerr+0x6c>
    d884:	mov	r0, r4
    d888:	str	r4, [r6]
    d88c:	add	sp, sp, #16
    d890:	pop	{r4, r5, r6, pc}
    d894:	ldr	r3, [sp, #8]
    d898:	cmp	r3, #0
    d89c:	movne	r4, r3
    d8a0:	b	d884 <rb_get_sockerr+0x5c>
    d8a4:	bl	4ce8 <__errno_location@plt>
    d8a8:	ldr	r4, [r0]
    d8ac:	mov	r0, r4
    d8b0:	add	sp, sp, #16
    d8b4:	pop	{r4, r5, r6, pc}

0000d8b8 <rb_bind>:
    d8b8:	push	{r4, r5, r6, lr}
    d8bc:	sub	sp, sp, #16
    d8c0:	add	r3, sp, #16
    d8c4:	mov	r2, #1
    d8c8:	mov	ip, #4
    d8cc:	str	r2, [r3, #-4]!
    d8d0:	mov	r4, r0
    d8d4:	mov	r6, r1
    d8d8:	ldr	r0, [r0, #12]
    d8dc:	mov	r1, r2
    d8e0:	str	ip, [sp]
    d8e4:	mov	r2, #2
    d8e8:	bl	4ca0 <setsockopt@plt>
    d8ec:	subs	r5, r0, #0
    d8f0:	bne	d920 <rb_bind+0x68>
    d8f4:	ldrh	r2, [r6]
    d8f8:	ldr	r0, [r4, #12]
    d8fc:	mov	r1, r6
    d900:	cmp	r2, #2
    d904:	moveq	r2, #16
    d908:	movne	r2, #28
    d90c:	bl	4910 <bind@plt>
    d910:	mov	r5, r0
    d914:	mov	r0, r5
    d918:	add	sp, sp, #16
    d91c:	pop	{r4, r5, r6, pc}
    d920:	mov	r0, r4
    d924:	ldr	r4, [r4, #12]
    d928:	bl	4a90 <rb_get_sockerr@plt>
    d92c:	bl	43a0 <strerror@plt>
    d930:	mov	r1, r4
    d934:	mov	r2, r0
    d938:	ldr	r0, [pc, #16]	; d950 <rb_bind+0x98>
    d93c:	add	r0, pc, r0
    d940:	bl	491c <rb_lib_log@plt>
    d944:	mov	r0, r5
    d948:	add	sp, sp, #16
    d94c:	pop	{r4, r5, r6, pc}
    d950:	.word	0x0000d258

0000d954 <rb_get_fde>:
    d954:	subs	r1, r0, #0
    d958:	ldr	r0, [pc, #88]	; d9b8 <rb_get_fde+0x64>
    d95c:	add	r0, pc, r0
    d960:	blt	d9b0 <rb_get_fde+0x5c>
    d964:	asr	r3, r1, #24
    d968:	eor	r3, r3, r1, asr #12
    d96c:	ldr	r2, [pc, #72]	; d9bc <rb_get_fde+0x68>
    d970:	eor	r3, r3, r1
    d974:	ldr	r2, [r0, r2]
    d978:	lsl	r3, r3, #20
    d97c:	lsr	r3, r3, #20
    d980:	ldr	r2, [r2]
    d984:	add	r3, r3, r3, lsl #1
    d988:	ldr	r3, [r2, r3, lsl #2]
    d98c:	cmp	r3, #0
    d990:	beq	d9b0 <rb_get_fde+0x5c>
    d994:	ldr	r0, [r3]
    d998:	ldr	r2, [r0, #12]
    d99c:	cmp	r1, r2
    d9a0:	bxeq	lr
    d9a4:	ldr	r3, [r3, #8]
    d9a8:	cmp	r3, #0
    d9ac:	bne	d994 <rb_get_fde+0x40>
    d9b0:	mov	r0, #0
    d9b4:	bx	lr
    d9b8:	.word	0x0001f69c
    d9bc:	.word	0x000003c0

0000d9c0 <rb_read>:
    d9c0:	push	{lr}		; (str lr, [sp, #-4]!)
    d9c4:	subs	lr, r0, #0
    d9c8:	popeq	{pc}		; (ldreq pc, [sp], #4)
    d9cc:	ldrb	ip, [lr, #17]
    d9d0:	ands	r3, ip, #32
    d9d4:	bne	d9f4 <rb_read+0x34>
    d9d8:	tst	ip, #4
    d9dc:	ldr	r0, [lr, #12]
    d9e0:	bne	d9ec <rb_read+0x2c>
    d9e4:	pop	{lr}		; (ldr lr, [sp], #4)
    d9e8:	b	470c <read@plt>
    d9ec:	pop	{lr}		; (ldr lr, [sp], #4)
    d9f0:	b	458c <recv@plt>
    d9f4:	pop	{lr}		; (ldr lr, [sp], #4)
    d9f8:	b	110b0 <rb_ssl_read>

0000d9fc <rb_write>:
    d9fc:	subs	r3, r0, #0
    da00:	bxeq	lr
    da04:	ldrb	ip, [r3, #17]
    da08:	tst	ip, #32
    da0c:	bne	da28 <rb_write+0x2c>
    da10:	tst	ip, #4
    da14:	ldr	r0, [r3, #12]
    da18:	bne	da20 <rb_write+0x24>
    da1c:	b	4724 <write@plt>
    da20:	mov	r3, #16384	; 0x4000
    da24:	b	4a9c <send@plt>
    da28:	b	1119c <rb_ssl_write>

0000da2c <rb_writev>:
    da2c:	push	{r4, r5, r6, r7, lr}
    da30:	subs	r7, r0, #0
    da34:	sub	sp, sp, #36	; 0x24
    da38:	beq	daf8 <rb_writev+0xcc>
    da3c:	ldrb	r3, [r7, #17]
    da40:	mov	r4, r1
    da44:	mov	r5, r2
    da48:	ands	ip, r3, #32
    da4c:	bne	daac <rb_writev+0x80>
    da50:	tst	r3, #4
    da54:	ldr	r0, [r7, #12]
    da58:	bne	da70 <rb_writev+0x44>
    da5c:	bl	4688 <writev@plt>
    da60:	mov	r5, r0
    da64:	mov	r0, r5
    da68:	add	sp, sp, #36	; 0x24
    da6c:	pop	{r4, r5, r6, r7, pc}
    da70:	add	r3, sp, #4
    da74:	mov	r1, r3
    da78:	mov	r2, #16384	; 0x4000
    da7c:	str	r5, [sp, #16]
    da80:	str	ip, [sp, #4]
    da84:	str	r4, [sp, #12]
    da88:	str	ip, [sp, #8]
    da8c:	str	ip, [sp, #20]
    da90:	str	ip, [sp, #24]
    da94:	str	ip, [sp, #28]
    da98:	bl	4700 <sendmsg@plt>
    da9c:	mov	r5, r0
    daa0:	mov	r0, r5
    daa4:	add	sp, sp, #36	; 0x24
    daa8:	pop	{r4, r5, r6, r7, pc}
    daac:	subs	r6, r2, #0
    dab0:	beq	da64 <rb_writev+0x38>
    dab4:	add	r4, r1, #8
    dab8:	mov	r5, #0
    dabc:	b	dacc <rb_writev+0xa0>
    dac0:	subs	r6, r6, #1
    dac4:	add	r5, r5, r0
    dac8:	beq	da64 <rb_writev+0x38>
    dacc:	ldmdb	r4, {r1, r2}
    dad0:	mov	r0, r7
    dad4:	bl	4658 <rb_write@plt>
    dad8:	add	r4, r4, #8
    dadc:	cmp	r0, #0
    dae0:	bgt	dac0 <rb_writev+0x94>
    dae4:	cmp	r5, #0
    dae8:	moveq	r5, r0
    daec:	mov	r0, r5
    daf0:	add	sp, sp, #36	; 0x24
    daf4:	pop	{r4, r5, r6, r7, pc}
    daf8:	bl	4ce8 <__errno_location@plt>
    dafc:	mov	r3, #9
    db00:	mvn	r5, #0
    db04:	str	r3, [r0]
    db08:	b	da64 <rb_writev+0x38>

0000db0c <rb_inet_ntop>:
    db0c:	cmp	r0, #2
    db10:	beq	de7c <rb_inet_ntop+0x370>
    db14:	cmp	r0, #10
    db18:	bne	de74 <rb_inet_ntop+0x368>
    db1c:	ldr	r0, [r1]
    db20:	cmp	r0, #0
    db24:	bne	db48 <rb_inet_ntop+0x3c>
    db28:	ldr	r0, [r1, #4]
    db2c:	cmp	r0, #0
    db30:	bne	db48 <rb_inet_ntop+0x3c>
    db34:	ldr	r0, [r1, #8]
    db38:	cmn	r0, #65536	; 0x10000
    db3c:	beq	dfa0 <rb_inet_ntop+0x494>
    db40:	cmp	r0, #0
    db44:	beq	df90 <rb_inet_ntop+0x484>
    db48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db4c:	sub	sp, sp, #116	; 0x74
    db50:	mov	r4, r1
    db54:	str	r2, [sp, #20]
    db58:	mov	r2, #32
    db5c:	mov	r1, #0
    db60:	add	r0, sp, r2
    db64:	str	r3, [sp, #12]
    db68:	bl	4628 <memset@plt>
    db6c:	ldrb	r8, [r4]
    db70:	ldrb	ip, [r4, #2]
    db74:	ldrb	r1, [r4, #6]
    db78:	ldrb	r2, [r4, #1]
    db7c:	ldrb	r6, [r4, #3]
    db80:	ldrb	r9, [r4, #7]
    db84:	ldrb	fp, [r4, #4]
    db88:	ldrb	r5, [r4, #10]
    db8c:	ldrb	sl, [r4, #8]
    db90:	ldrb	lr, [r4, #12]
    db94:	ldrb	r0, [r4, #14]
    db98:	orr	r2, r2, r8, lsl #8
    db9c:	orr	r6, r6, ip, lsl #8
    dba0:	orr	r9, r9, r1, lsl #8
    dba4:	ldrb	r3, [r4, #5]
    dba8:	ldrb	r1, [r4, #15]
    dbac:	ldrb	r7, [r4, #9]
    dbb0:	ldrb	r8, [r4, #11]
    dbb4:	ldrb	ip, [r4, #13]
    dbb8:	orr	r3, r3, fp, lsl #8
    dbbc:	orr	r7, r7, sl, lsl #8
    dbc0:	orr	r8, r8, r5, lsl #8
    dbc4:	orr	ip, ip, lr, lsl #8
    dbc8:	orr	fp, r1, r0, lsl #8
    dbcc:	cmp	r2, #0
    dbd0:	str	r7, [sp, #4]
    dbd4:	str	ip, [sp, #8]
    dbd8:	str	r2, [sp, #32]
    dbdc:	mov	r1, r2
    dbe0:	str	r6, [sp, #36]	; 0x24
    dbe4:	mov	r5, r6
    dbe8:	str	r3, [sp, #40]	; 0x28
    dbec:	str	r3, [sp, #16]
    dbf0:	str	r9, [sp, #44]	; 0x2c
    dbf4:	str	r7, [sp, #48]	; 0x30
    dbf8:	str	r8, [sp, #52]	; 0x34
    dbfc:	str	ip, [sp, #56]	; 0x38
    dc00:	str	fp, [sp, #60]	; 0x3c
    dc04:	beq	e0a4 <rb_inet_ntop+0x598>
    dc08:	cmp	r6, #0
    dc0c:	movne	r7, #0
    dc10:	mvnne	r1, #0
    dc14:	bne	e0b4 <rb_inet_ntop+0x5a8>
    dc18:	mov	r7, #1
    dc1c:	mov	r5, r7
    dc20:	cmp	r3, #0
    dc24:	bne	e0c0 <rb_inet_ntop+0x5b4>
    dc28:	add	r7, r7, #1
    dc2c:	mvn	r1, #0
    dc30:	cmp	r9, #0
    dc34:	beq	e29c <rb_inet_ntop+0x790>
    dc38:	cmn	r1, #1
    dc3c:	movne	r0, #0
    dc40:	moveq	r0, #1
    dc44:	cmp	r3, r7
    dc48:	orrlt	r0, r0, #1
    dc4c:	cmp	r0, #0
    dc50:	moveq	r7, r3
    dc54:	moveq	r5, r1
    dc58:	ldr	r3, [sp, #4]
    dc5c:	cmp	r3, #0
    dc60:	beq	e5a8 <rb_inet_ntop+0xa9c>
    dc64:	cmp	r8, #0
    dc68:	beq	e5d0 <rb_inet_ntop+0xac4>
    dc6c:	ldr	r3, [sp, #8]
    dc70:	cmp	r3, #0
    dc74:	beq	e5bc <rb_inet_ntop+0xab0>
    dc78:	cmp	fp, #0
    dc7c:	bne	e598 <rb_inet_ntop+0xa8c>
    dc80:	cmn	r5, #1
    dc84:	cmpne	r7, #0
    dc88:	movgt	r1, r5
    dc8c:	movgt	r3, r7
    dc90:	bgt	e4a8 <rb_inet_ntop+0x99c>
    dc94:	mov	r7, #1
    dc98:	mov	sl, #0
    dc9c:	mvn	r5, #0
    dca0:	cmp	r5, #0
    dca4:	movgt	r3, #0
    dca8:	andle	r3, sl, #1
    dcac:	cmp	r7, #6
    dcb0:	beq	e63c <rb_inet_ntop+0xb30>
    dcb4:	cmp	r3, #0
    dcb8:	beq	e228 <rb_inet_ntop+0x71c>
    dcbc:	cmn	r5, r7
    dcc0:	beq	e228 <rb_inet_ntop+0x71c>
    dcc4:	cmp	r5, #0
    dcc8:	addeq	r1, sp, #64	; 0x40
    dccc:	addne	r3, sp, #64	; 0x40
    dcd0:	streq	r1, [sp, #24]
    dcd4:	movne	r1, r3
    dcd8:	addeq	r1, sp, #66	; 0x42
    dcdc:	moveq	r2, #48	; 0x30
    dce0:	moveq	r3, #58	; 0x3a
    dce4:	strbeq	r2, [sp, #64]	; 0x40
    dce8:	strbeq	r3, [sp, #65]	; 0x41
    dcec:	strne	r3, [sp, #24]
    dcf0:	cmp	r5, #1
    dcf4:	movgt	r3, #0
    dcf8:	andle	r3, sl, #1
    dcfc:	cmp	r3, #0
    dd00:	beq	e180 <rb_inet_ntop+0x674>
    dd04:	add	r3, r5, r7
    dd08:	cmp	r3, #1
    dd0c:	ble	e180 <rb_inet_ntop+0x674>
    dd10:	cmp	r5, #1
    dd14:	moveq	r3, #58	; 0x3a
    dd18:	strbeq	r3, [r1]
    dd1c:	addeq	r1, r1, #1
    dd20:	cmp	r5, #2
    dd24:	movgt	r3, #0
    dd28:	andle	r3, sl, #1
    dd2c:	cmp	r3, #0
    dd30:	beq	e158 <rb_inet_ntop+0x64c>
    dd34:	add	r3, r5, r7
    dd38:	cmp	r3, #2
    dd3c:	ble	e158 <rb_inet_ntop+0x64c>
    dd40:	cmp	r5, #2
    dd44:	moveq	r3, #58	; 0x3a
    dd48:	strbeq	r3, [r1]
    dd4c:	addeq	r1, r1, #1
    dd50:	cmp	r5, #3
    dd54:	movgt	r3, #0
    dd58:	andle	r3, sl, #1
    dd5c:	cmp	r3, #0
    dd60:	beq	e130 <rb_inet_ntop+0x624>
    dd64:	add	r3, r5, r7
    dd68:	cmp	r3, #3
    dd6c:	ble	e130 <rb_inet_ntop+0x624>
    dd70:	cmp	r5, #3
    dd74:	moveq	r3, #58	; 0x3a
    dd78:	strbeq	r3, [r1]
    dd7c:	addeq	r1, r1, #1
    dd80:	cmp	r5, #4
    dd84:	movgt	r3, #0
    dd88:	andle	r3, sl, #1
    dd8c:	cmp	r3, #0
    dd90:	beq	e108 <rb_inet_ntop+0x5fc>
    dd94:	add	r3, r5, r7
    dd98:	cmp	r3, #4
    dd9c:	ble	e108 <rb_inet_ntop+0x5fc>
    dda0:	cmp	r5, #4
    dda4:	moveq	r3, #58	; 0x3a
    dda8:	strbeq	r3, [r1]
    ddac:	addeq	r1, r1, #1
    ddb0:	cmp	r5, #5
    ddb4:	movgt	r3, #0
    ddb8:	andle	r3, sl, #1
    ddbc:	cmp	r3, #0
    ddc0:	beq	e200 <rb_inet_ntop+0x6f4>
    ddc4:	add	r3, r5, r7
    ddc8:	cmp	r3, #5
    ddcc:	ble	e200 <rb_inet_ntop+0x6f4>
    ddd0:	cmp	r5, #5
    ddd4:	moveq	r3, #58	; 0x3a
    ddd8:	strbeq	r3, [r1]
    dddc:	addeq	r1, r1, #1
    dde0:	cmp	r5, #6
    dde4:	movgt	r3, #0
    dde8:	andle	r3, sl, #1
    ddec:	cmp	r3, #0
    ddf0:	beq	e1a8 <rb_inet_ntop+0x69c>
    ddf4:	add	r3, r5, r7
    ddf8:	cmp	r3, #6
    ddfc:	ble	e1a8 <rb_inet_ntop+0x69c>
    de00:	cmp	r5, #6
    de04:	moveq	r2, #58	; 0x3a
    de08:	strbeq	r2, [r1]
    de0c:	addeq	r1, r1, #1
    de10:	cmp	r3, #7
    de14:	ble	e1d8 <rb_inet_ntop+0x6cc>
    de18:	cmp	r5, #7
    de1c:	moveq	r2, #58	; 0x3a
    de20:	strbeq	r2, [r1]
    de24:	addeq	r1, r1, #1
    de28:	beq	de38 <rb_inet_ntop+0x32c>
    de2c:	cmn	r5, #1
    de30:	beq	de40 <rb_inet_ntop+0x334>
    de34:	add	r3, r5, r7
    de38:	cmp	r3, #8
    de3c:	beq	e478 <rb_inet_ntop+0x96c>
    de40:	mov	r6, r1
    de44:	mov	r3, #0
    de48:	strb	r3, [r6], #1
    de4c:	ldr	r3, [sp, #24]
    de50:	ldr	r1, [sp, #12]
    de54:	sub	r2, r6, r3
    de58:	cmp	r1, r2
    de5c:	bcc	e590 <rb_inet_ntop+0xa84>
    de60:	mov	r1, r3
    de64:	ldr	r0, [sp, #20]
    de68:	bl	4808 <memcpy@plt>
    de6c:	add	sp, sp, #116	; 0x74
    de70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de74:	mov	r0, #0
    de78:	bx	lr
    de7c:	cmp	r3, #15
    de80:	bls	de74 <rb_inet_ntop+0x368>
    de84:	ldrb	r0, [r1]
    de88:	ldr	r3, [pc, #2936]	; ea08 <rb_inet_ntop+0xefc>
    de8c:	add	r3, pc, r3
    de90:	add	r3, r3, r0, lsl #2
    de94:	ldr	ip, [r3, #28]
    de98:	ldrb	r0, [ip]
    de9c:	cmp	r0, #0
    dea0:	beq	e24c <rb_inet_ntop+0x740>
    dea4:	ldr	r3, [pc, #2912]	; ea0c <rb_inet_ntop+0xf00>
    dea8:	add	r3, pc, r3
    deac:	add	r3, r3, #28
    deb0:	strb	r0, [r3], #1
    deb4:	ldrb	r0, [ip, #1]!
    deb8:	cmp	r0, #0
    debc:	bne	deb0 <rb_inet_ntop+0x3a4>
    dec0:	mov	r0, #46	; 0x2e
    dec4:	strb	r0, [r3]
    dec8:	ldrb	ip, [r1, #1]
    decc:	ldr	r0, [pc, #2876]	; ea10 <rb_inet_ntop+0xf04>
    ded0:	add	r3, r3, #1
    ded4:	add	r0, pc, r0
    ded8:	add	r0, r0, ip, lsl #2
    dedc:	ldr	ip, [r0, #28]
    dee0:	ldrb	r0, [ip]
    dee4:	cmp	r0, #0
    dee8:	beq	defc <rb_inet_ntop+0x3f0>
    deec:	strb	r0, [r3], #1
    def0:	ldrb	r0, [ip, #1]!
    def4:	cmp	r0, #0
    def8:	bne	deec <rb_inet_ntop+0x3e0>
    defc:	mov	r0, #46	; 0x2e
    df00:	strb	r0, [r3]
    df04:	ldrb	ip, [r1, #2]
    df08:	ldr	r0, [pc, #2820]	; ea14 <rb_inet_ntop+0xf08>
    df0c:	add	r3, r3, #1
    df10:	add	r0, pc, r0
    df14:	add	r0, r0, ip, lsl #2
    df18:	ldr	ip, [r0, #28]
    df1c:	ldrb	r0, [ip]
    df20:	cmp	r0, #0
    df24:	beq	df38 <rb_inet_ntop+0x42c>
    df28:	strb	r0, [r3], #1
    df2c:	ldrb	r0, [ip, #1]!
    df30:	cmp	r0, #0
    df34:	bne	df28 <rb_inet_ntop+0x41c>
    df38:	mov	r0, #46	; 0x2e
    df3c:	strb	r0, [r3]
    df40:	ldrb	r0, [r1, #3]
    df44:	ldr	r1, [pc, #2764]	; ea18 <rb_inet_ntop+0xf0c>
    df48:	add	r3, r3, #1
    df4c:	add	r1, pc, r1
    df50:	add	r1, r1, r0, lsl #2
    df54:	ldr	r0, [r1, #28]
    df58:	ldrb	r1, [r0]
    df5c:	cmp	r1, #0
    df60:	beq	df74 <rb_inet_ntop+0x468>
    df64:	strb	r1, [r3], #1
    df68:	ldrb	r1, [r0, #1]!
    df6c:	cmp	r1, #0
    df70:	bne	df64 <rb_inet_ntop+0x458>
    df74:	ldr	r1, [pc, #2720]	; ea1c <rb_inet_ntop+0xf10>
    df78:	add	r1, pc, r1
    df7c:	mov	ip, #0
    df80:	mov	r0, r2
    df84:	add	r1, r1, #28
    df88:	strb	ip, [r3]
    df8c:	b	488c <strcpy@plt>
    df90:	ldr	r0, [r1, #12]
    df94:	rev	r0, r0
    df98:	cmp	r0, #1
    df9c:	bls	db48 <rb_inet_ntop+0x3c>
    dfa0:	cmp	r3, #15
    dfa4:	bls	de74 <rb_inet_ntop+0x368>
    dfa8:	ldrb	r0, [r1, #12]
    dfac:	ldr	r3, [pc, #2668]	; ea20 <rb_inet_ntop+0xf14>
    dfb0:	add	r3, pc, r3
    dfb4:	add	r3, r3, r0, lsl #2
    dfb8:	ldr	ip, [r3, #28]
    dfbc:	ldrb	r0, [ip]
    dfc0:	cmp	r0, #0
    dfc4:	beq	e25c <rb_inet_ntop+0x750>
    dfc8:	ldr	r3, [pc, #2644]	; ea24 <rb_inet_ntop+0xf18>
    dfcc:	add	r3, pc, r3
    dfd0:	add	r3, r3, #28
    dfd4:	strb	r0, [r3], #1
    dfd8:	ldrb	r0, [ip, #1]!
    dfdc:	cmp	r0, #0
    dfe0:	bne	dfd4 <rb_inet_ntop+0x4c8>
    dfe4:	mov	r0, #46	; 0x2e
    dfe8:	strb	r0, [r3]
    dfec:	ldrb	ip, [r1, #13]
    dff0:	ldr	r0, [pc, #2608]	; ea28 <rb_inet_ntop+0xf1c>
    dff4:	add	r3, r3, #1
    dff8:	add	r0, pc, r0
    dffc:	add	r0, r0, ip, lsl #2
    e000:	ldr	ip, [r0, #28]
    e004:	ldrb	r0, [ip]
    e008:	cmp	r0, #0
    e00c:	beq	e020 <rb_inet_ntop+0x514>
    e010:	strb	r0, [r3], #1
    e014:	ldrb	r0, [ip, #1]!
    e018:	cmp	r0, #0
    e01c:	bne	e010 <rb_inet_ntop+0x504>
    e020:	mov	r0, #46	; 0x2e
    e024:	strb	r0, [r3]
    e028:	ldrb	ip, [r1, #14]
    e02c:	ldr	r0, [pc, #2552]	; ea2c <rb_inet_ntop+0xf20>
    e030:	add	r3, r3, #1
    e034:	add	r0, pc, r0
    e038:	add	r0, r0, ip, lsl #2
    e03c:	ldr	ip, [r0, #28]
    e040:	ldrb	r0, [ip]
    e044:	cmp	r0, #0
    e048:	beq	e05c <rb_inet_ntop+0x550>
    e04c:	strb	r0, [r3], #1
    e050:	ldrb	r0, [ip, #1]!
    e054:	cmp	r0, #0
    e058:	bne	e04c <rb_inet_ntop+0x540>
    e05c:	mov	r0, #46	; 0x2e
    e060:	strb	r0, [r3]
    e064:	ldrb	r0, [r1, #15]
    e068:	ldr	r1, [pc, #2496]	; ea30 <rb_inet_ntop+0xf24>
    e06c:	add	r3, r3, #1
    e070:	add	r1, pc, r1
    e074:	add	r1, r1, r0, lsl #2
    e078:	ldr	r0, [r1, #28]
    e07c:	ldrb	r1, [r0]
    e080:	cmp	r1, #0
    e084:	beq	e098 <rb_inet_ntop+0x58c>
    e088:	strb	r1, [r3], #1
    e08c:	ldrb	r1, [r0, #1]!
    e090:	cmp	r1, #0
    e094:	bne	e088 <rb_inet_ntop+0x57c>
    e098:	ldr	r1, [pc, #2452]	; ea34 <rb_inet_ntop+0xf28>
    e09c:	add	r1, pc, r1
    e0a0:	b	df7c <rb_inet_ntop+0x470>
    e0a4:	cmp	r6, #0
    e0a8:	moveq	r7, #2
    e0ac:	beq	dc20 <rb_inet_ntop+0x114>
    e0b0:	mov	r7, #1
    e0b4:	cmp	r3, #0
    e0b8:	beq	e5e4 <rb_inet_ntop+0xad8>
    e0bc:	mov	r5, r1
    e0c0:	cmp	r9, #0
    e0c4:	bne	dc58 <rb_inet_ntop+0x14c>
    e0c8:	mov	r3, r7
    e0cc:	mov	r1, r5
    e0d0:	mov	r7, #1
    e0d4:	mov	r5, #3
    e0d8:	ldr	r0, [sp, #4]
    e0dc:	cmp	r0, #0
    e0e0:	beq	e26c <rb_inet_ntop+0x760>
    e0e4:	cmn	r1, #1
    e0e8:	movne	r0, #0
    e0ec:	moveq	r0, #1
    e0f0:	cmp	r3, r7
    e0f4:	orrlt	r0, r0, #1
    e0f8:	cmp	r0, #0
    e0fc:	moveq	r7, r3
    e100:	moveq	r5, r1
    e104:	b	dc64 <rb_inet_ntop+0x158>
    e108:	mov	r3, #58	; 0x3a
    e10c:	add	r4, r1, #1
    e110:	strb	r3, [r1]
    e114:	ldr	r1, [pc, #2332]	; ea38 <rb_inet_ntop+0xf2c>
    e118:	ldr	r2, [sp, #4]
    e11c:	add	r1, pc, r1
    e120:	mov	r0, r4
    e124:	bl	4d00 <sprintf@plt>
    e128:	add	r1, r4, r0
    e12c:	b	ddb0 <rb_inet_ntop+0x2a4>
    e130:	mov	r3, #58	; 0x3a
    e134:	add	r4, r1, #1
    e138:	strb	r3, [r1]
    e13c:	ldr	r1, [pc, #2296]	; ea3c <rb_inet_ntop+0xf30>
    e140:	mov	r2, r9
    e144:	add	r1, pc, r1
    e148:	mov	r0, r4
    e14c:	bl	4d00 <sprintf@plt>
    e150:	add	r1, r4, r0
    e154:	b	dd80 <rb_inet_ntop+0x274>
    e158:	mov	r3, #58	; 0x3a
    e15c:	add	r4, r1, #1
    e160:	strb	r3, [r1]
    e164:	ldr	r1, [pc, #2260]	; ea40 <rb_inet_ntop+0xf34>
    e168:	ldr	r2, [sp, #16]
    e16c:	add	r1, pc, r1
    e170:	mov	r0, r4
    e174:	bl	4d00 <sprintf@plt>
    e178:	add	r1, r4, r0
    e17c:	b	dd50 <rb_inet_ntop+0x244>
    e180:	mov	r3, #58	; 0x3a
    e184:	add	r4, r1, #1
    e188:	strb	r3, [r1]
    e18c:	ldr	r1, [pc, #2224]	; ea44 <rb_inet_ntop+0xf38>
    e190:	mov	r2, r6
    e194:	add	r1, pc, r1
    e198:	mov	r0, r4
    e19c:	bl	4d00 <sprintf@plt>
    e1a0:	add	r1, r4, r0
    e1a4:	b	dd20 <rb_inet_ntop+0x214>
    e1a8:	mov	r3, #58	; 0x3a
    e1ac:	add	r4, r1, #1
    e1b0:	strb	r3, [r1]
    e1b4:	ldr	r1, [pc, #2188]	; ea48 <rb_inet_ntop+0xf3c>
    e1b8:	ldr	r2, [sp, #8]
    e1bc:	add	r1, pc, r1
    e1c0:	mov	r0, r4
    e1c4:	bl	4d00 <sprintf@plt>
    e1c8:	cmp	sl, #0
    e1cc:	addne	r3, r5, r7
    e1d0:	add	r1, r4, r0
    e1d4:	bne	de10 <rb_inet_ntop+0x304>
    e1d8:	mov	r3, #58	; 0x3a
    e1dc:	add	r4, r1, #1
    e1e0:	strb	r3, [r1]
    e1e4:	ldr	r1, [pc, #2144]	; ea4c <rb_inet_ntop+0xf40>
    e1e8:	mov	r2, fp
    e1ec:	add	r1, pc, r1
    e1f0:	mov	r0, r4
    e1f4:	bl	4d00 <sprintf@plt>
    e1f8:	add	r1, r4, r0
    e1fc:	b	de2c <rb_inet_ntop+0x320>
    e200:	mov	r3, #58	; 0x3a
    e204:	add	r4, r1, #1
    e208:	strb	r3, [r1]
    e20c:	ldr	r1, [pc, #2108]	; ea50 <rb_inet_ntop+0xf44>
    e210:	mov	r2, r8
    e214:	add	r1, pc, r1
    e218:	mov	r0, r4
    e21c:	bl	4d00 <sprintf@plt>
    e220:	add	r1, r4, r0
    e224:	b	dde0 <rb_inet_ntop+0x2d4>
    e228:	ldr	r1, [pc, #2084]	; ea54 <rb_inet_ntop+0xf48>
    e22c:	add	r3, sp, #64	; 0x40
    e230:	add	r1, pc, r1
    e234:	mov	r0, r3
    e238:	mov	r4, r3
    e23c:	str	r3, [sp, #24]
    e240:	bl	4d00 <sprintf@plt>
    e244:	add	r1, r4, r0
    e248:	b	dcf0 <rb_inet_ntop+0x1e4>
    e24c:	ldr	r3, [pc, #2052]	; ea58 <rb_inet_ntop+0xf4c>
    e250:	add	r3, pc, r3
    e254:	add	r3, r3, #28
    e258:	b	dec0 <rb_inet_ntop+0x3b4>
    e25c:	ldr	r3, [pc, #2040]	; ea5c <rb_inet_ntop+0xf50>
    e260:	add	r3, pc, r3
    e264:	add	r3, r3, #28
    e268:	b	dfe4 <rb_inet_ntop+0x4d8>
    e26c:	add	r7, r7, #1
    e270:	cmp	r8, #0
    e274:	beq	e2a4 <rb_inet_ntop+0x798>
    e278:	cmn	r1, #1
    e27c:	movne	r0, #0
    e280:	moveq	r0, #1
    e284:	cmp	r7, r3
    e288:	orrgt	r0, r0, #1
    e28c:	cmp	r0, #0
    e290:	moveq	r7, r3
    e294:	moveq	r5, r1
    e298:	b	dc6c <rb_inet_ntop+0x160>
    e29c:	add	r7, r7, #1
    e2a0:	b	e0d8 <rb_inet_ntop+0x5cc>
    e2a4:	add	r7, r7, #1
    e2a8:	ldr	r0, [sp, #8]
    e2ac:	cmp	r0, #0
    e2b0:	beq	e2d8 <rb_inet_ntop+0x7cc>
    e2b4:	cmn	r1, #1
    e2b8:	movne	r0, #0
    e2bc:	moveq	r0, #1
    e2c0:	cmp	r7, r3
    e2c4:	orrgt	r0, r0, #1
    e2c8:	cmp	r0, #0
    e2cc:	moveq	r7, r3
    e2d0:	moveq	r5, r1
    e2d4:	b	dc78 <rb_inet_ntop+0x16c>
    e2d8:	add	r7, r7, #1
    e2dc:	cmp	fp, #0
    e2e0:	beq	e488 <rb_inet_ntop+0x97c>
    e2e4:	cmn	r1, #1
    e2e8:	movne	r0, #0
    e2ec:	moveq	r0, #1
    e2f0:	cmp	r3, r7
    e2f4:	orrlt	r0, r0, #1
    e2f8:	cmp	r0, #0
    e2fc:	moveq	r7, r3
    e300:	moveq	r5, r1
    e304:	cmp	r7, #1
    e308:	ble	dc98 <rb_inet_ntop+0x18c>
    e30c:	mov	sl, #1
    e310:	cmp	r7, #5
    e314:	bne	dca0 <rb_inet_ntop+0x194>
    e318:	cmp	r5, #0
    e31c:	movgt	r3, #0
    e320:	andle	r3, sl, #1
    e324:	cmp	r3, #0
    e328:	beq	e544 <rb_inet_ntop+0xa38>
    e32c:	cmp	r5, #0
    e330:	addne	r3, sp, #64	; 0x40
    e334:	strne	r3, [sp, #24]
    e338:	movne	r1, r3
    e33c:	beq	e94c <rb_inet_ntop+0xe40>
    e340:	cmp	r5, #1
    e344:	movgt	r3, #0
    e348:	andle	r3, sl, #1
    e34c:	cmp	r3, #0
    e350:	bne	e624 <rb_inet_ntop+0xb18>
    e354:	mov	ip, #58	; 0x3a
    e358:	add	r3, r1, #1
    e35c:	strb	ip, [r1]
    e360:	ldr	r1, [pc, #1784]	; ea60 <rb_inet_ntop+0xf54>
    e364:	mov	r0, r3
    e368:	add	r1, pc, r1
    e36c:	mov	r2, r6
    e370:	str	r3, [sp, #28]
    e374:	bl	4d00 <sprintf@plt>
    e378:	ldr	r3, [sp, #28]
    e37c:	add	r1, r3, r0
    e380:	cmp	r5, #2
    e384:	movgt	r3, #0
    e388:	andle	r3, sl, #1
    e38c:	cmp	r3, #0
    e390:	bne	e60c <rb_inet_ntop+0xb00>
    e394:	mov	r3, #58	; 0x3a
    e398:	add	r6, r1, #1
    e39c:	strb	r3, [r1]
    e3a0:	ldr	r1, [pc, #1724]	; ea64 <rb_inet_ntop+0xf58>
    e3a4:	ldr	r2, [sp, #16]
    e3a8:	add	r1, pc, r1
    e3ac:	mov	r0, r6
    e3b0:	bl	4d00 <sprintf@plt>
    e3b4:	add	r1, r6, r0
    e3b8:	cmp	r5, #3
    e3bc:	movgt	r3, #0
    e3c0:	andle	r3, sl, #1
    e3c4:	cmp	r3, #0
    e3c8:	bne	e5f4 <rb_inet_ntop+0xae8>
    e3cc:	mov	r3, #58	; 0x3a
    e3d0:	add	r6, r1, #1
    e3d4:	strb	r3, [r1]
    e3d8:	ldr	r1, [pc, #1672]	; ea68 <rb_inet_ntop+0xf5c>
    e3dc:	mov	r2, r9
    e3e0:	add	r1, pc, r1
    e3e4:	mov	r0, r6
    e3e8:	bl	4d00 <sprintf@plt>
    e3ec:	add	r1, r6, r0
    e3f0:	cmp	r5, #4
    e3f4:	movgt	r3, #0
    e3f8:	andle	r3, sl, #1
    e3fc:	cmp	r3, #0
    e400:	beq	e51c <rb_inet_ntop+0xa10>
    e404:	cmn	r5, #1
    e408:	beq	e51c <rb_inet_ntop+0xa10>
    e40c:	cmp	r5, #4
    e410:	moveq	r3, #58	; 0x3a
    e414:	strbeq	r3, [r1]
    e418:	addeq	r1, r1, #1
    e41c:	beq	e444 <rb_inet_ntop+0x938>
    e420:	cmp	r5, #5
    e424:	movgt	r3, #0
    e428:	andle	r3, sl, #1
    e42c:	cmp	r3, #0
    e430:	beq	e568 <rb_inet_ntop+0xa5c>
    e434:	cmp	r5, #0
    e438:	ble	e568 <rb_inet_ntop+0xa5c>
    e43c:	cmp	r5, #5
    e440:	beq	e478 <rb_inet_ntop+0x96c>
    e444:	cmp	r5, #6
    e448:	movgt	r3, #0
    e44c:	andle	r3, sl, #1
    e450:	cmp	r3, #0
    e454:	beq	e4b4 <rb_inet_ntop+0x9a8>
    e458:	cmp	r5, #1
    e45c:	ble	e4b4 <rb_inet_ntop+0x9a8>
    e460:	cmp	r5, #6
    e464:	beq	e478 <rb_inet_ntop+0x96c>
    e468:	cmp	r5, #2
    e46c:	ble	e4f4 <rb_inet_ntop+0x9e8>
    e470:	cmp	r5, #7
    e474:	bne	de2c <rb_inet_ntop+0x320>
    e478:	mov	r3, #58	; 0x3a
    e47c:	strb	r3, [r1]
    e480:	add	r1, r1, #1
    e484:	b	de40 <rb_inet_ntop+0x334>
    e488:	cmn	r1, #1
    e48c:	movne	r0, #0
    e490:	moveq	r0, #1
    e494:	add	r7, r7, #1
    e498:	cmp	r7, r3
    e49c:	orrgt	r0, r0, #1
    e4a0:	cmp	r0, #0
    e4a4:	bne	e304 <rb_inet_ntop+0x7f8>
    e4a8:	mov	r7, r3
    e4ac:	mov	r5, r1
    e4b0:	b	e304 <rb_inet_ntop+0x7f8>
    e4b4:	mov	r3, #58	; 0x3a
    e4b8:	cmp	r5, #0
    e4bc:	strb	r3, [r1]
    e4c0:	add	r6, r1, #1
    e4c4:	bne	e4d4 <rb_inet_ntop+0x9c8>
    e4c8:	ldr	r3, [pc, #1436]	; ea6c <rb_inet_ntop+0xf60>
    e4cc:	cmp	r8, r3
    e4d0:	beq	e824 <rb_inet_ntop+0xd18>
    e4d4:	ldr	r1, [pc, #1428]	; ea70 <rb_inet_ntop+0xf64>
    e4d8:	ldr	r2, [sp, #8]
    e4dc:	add	r1, pc, r1
    e4e0:	mov	r0, r6
    e4e4:	bl	4d00 <sprintf@plt>
    e4e8:	cmp	sl, #0
    e4ec:	add	r1, r6, r0
    e4f0:	bne	e468 <rb_inet_ntop+0x95c>
    e4f4:	mov	r3, #58	; 0x3a
    e4f8:	add	r4, r1, #1
    e4fc:	strb	r3, [r1]
    e500:	ldr	r1, [pc, #1388]	; ea74 <rb_inet_ntop+0xf68>
    e504:	mov	r2, fp
    e508:	add	r1, pc, r1
    e50c:	mov	r0, r4
    e510:	bl	4d00 <sprintf@plt>
    e514:	add	r1, r4, r0
    e518:	b	de2c <rb_inet_ntop+0x320>
    e51c:	mov	r3, #58	; 0x3a
    e520:	add	r6, r1, #1
    e524:	strb	r3, [r1]
    e528:	ldr	r1, [pc, #1352]	; ea78 <rb_inet_ntop+0xf6c>
    e52c:	ldr	r2, [sp, #4]
    e530:	add	r1, pc, r1
    e534:	mov	r0, r6
    e538:	bl	4d00 <sprintf@plt>
    e53c:	add	r1, r6, r0
    e540:	b	e420 <rb_inet_ntop+0x914>
    e544:	ldr	r1, [pc, #1328]	; ea7c <rb_inet_ntop+0xf70>
    e548:	add	r3, sp, #64	; 0x40
    e54c:	mov	r0, r3
    e550:	add	r1, pc, r1
    e554:	str	r3, [sp, #24]
    e558:	bl	4d00 <sprintf@plt>
    e55c:	ldr	r3, [sp, #24]
    e560:	add	r1, r3, r0
    e564:	b	e340 <rb_inet_ntop+0x834>
    e568:	mov	r3, #58	; 0x3a
    e56c:	add	r9, r1, #1
    e570:	strb	r3, [r1]
    e574:	ldr	r1, [pc, #1284]	; ea80 <rb_inet_ntop+0xf74>
    e578:	mov	r0, r9
    e57c:	add	r1, pc, r1
    e580:	mov	r2, r8
    e584:	bl	4d00 <sprintf@plt>
    e588:	add	r1, r9, r0
    e58c:	b	e444 <rb_inet_ntop+0x938>
    e590:	mov	r0, #0
    e594:	b	de6c <rb_inet_ntop+0x360>
    e598:	cmn	r5, #1
    e59c:	bne	e304 <rb_inet_ntop+0x7f8>
    e5a0:	mov	sl, #0
    e5a4:	b	e310 <rb_inet_ntop+0x804>
    e5a8:	mov	r3, r7
    e5ac:	mov	r1, r5
    e5b0:	mov	r7, #1
    e5b4:	mov	r5, #4
    e5b8:	b	e270 <rb_inet_ntop+0x764>
    e5bc:	mov	r3, r7
    e5c0:	mov	r1, r5
    e5c4:	mov	r7, #1
    e5c8:	mov	r5, #6
    e5cc:	b	e2dc <rb_inet_ntop+0x7d0>
    e5d0:	mov	r3, r7
    e5d4:	mov	r1, r5
    e5d8:	mov	r7, #1
    e5dc:	mov	r5, #5
    e5e0:	b	e2a8 <rb_inet_ntop+0x79c>
    e5e4:	mov	r3, r7
    e5e8:	mov	r5, #2
    e5ec:	mov	r7, #1
    e5f0:	b	dc30 <rb_inet_ntop+0x124>
    e5f4:	cmp	r5, #3
    e5f8:	bne	e3f0 <rb_inet_ntop+0x8e4>
    e5fc:	mov	r3, #58	; 0x3a
    e600:	strb	r3, [r1]
    e604:	add	r1, r1, #1
    e608:	b	e420 <rb_inet_ntop+0x914>
    e60c:	cmp	r5, #2
    e610:	bne	e3b8 <rb_inet_ntop+0x8ac>
    e614:	mov	r3, #58	; 0x3a
    e618:	strb	r3, [r1]
    e61c:	add	r1, r1, #1
    e620:	b	e3f0 <rb_inet_ntop+0x8e4>
    e624:	cmp	r5, #1
    e628:	bne	e380 <rb_inet_ntop+0x874>
    e62c:	mov	r3, #58	; 0x3a
    e630:	strb	r3, [r1]
    e634:	add	r1, r1, #1
    e638:	b	e3b8 <rb_inet_ntop+0x8ac>
    e63c:	cmp	r3, #0
    e640:	beq	e7ec <rb_inet_ntop+0xce0>
    e644:	cmp	r5, #0
    e648:	addne	r3, sp, #64	; 0x40
    e64c:	strne	r3, [sp, #24]
    e650:	movne	r1, r3
    e654:	beq	e92c <rb_inet_ntop+0xe20>
    e658:	cmp	r5, #1
    e65c:	movgt	r3, #0
    e660:	andle	r3, sl, #1
    e664:	cmp	r3, #0
    e668:	bne	e8dc <rb_inet_ntop+0xdd0>
    e66c:	mov	ip, #58	; 0x3a
    e670:	add	r3, r1, #1
    e674:	strb	ip, [r1]
    e678:	ldr	r1, [pc, #1028]	; ea84 <rb_inet_ntop+0xf78>
    e67c:	mov	r0, r3
    e680:	add	r1, pc, r1
    e684:	mov	r2, r6
    e688:	str	r3, [sp, #28]
    e68c:	bl	4d00 <sprintf@plt>
    e690:	ldr	r3, [sp, #28]
    e694:	add	r1, r3, r0
    e698:	cmp	r5, #2
    e69c:	movgt	r3, #0
    e6a0:	andle	r3, sl, #1
    e6a4:	cmp	r3, #0
    e6a8:	bne	e8c4 <rb_inet_ntop+0xdb8>
    e6ac:	mov	r3, #58	; 0x3a
    e6b0:	add	r6, r1, #1
    e6b4:	strb	r3, [r1]
    e6b8:	ldr	r1, [pc, #968]	; ea88 <rb_inet_ntop+0xf7c>
    e6bc:	ldr	r2, [sp, #16]
    e6c0:	add	r1, pc, r1
    e6c4:	mov	r0, r6
    e6c8:	bl	4d00 <sprintf@plt>
    e6cc:	add	r1, r6, r0
    e6d0:	cmp	r5, #3
    e6d4:	movgt	r3, #0
    e6d8:	andle	r3, sl, #1
    e6dc:	cmp	r3, #0
    e6e0:	bne	e8ac <rb_inet_ntop+0xda0>
    e6e4:	mov	r3, #58	; 0x3a
    e6e8:	add	r6, r1, #1
    e6ec:	strb	r3, [r1]
    e6f0:	ldr	r1, [pc, #916]	; ea8c <rb_inet_ntop+0xf80>
    e6f4:	mov	r2, r9
    e6f8:	add	r1, pc, r1
    e6fc:	mov	r0, r6
    e700:	bl	4d00 <sprintf@plt>
    e704:	add	r1, r6, r0
    e708:	cmp	r5, #4
    e70c:	movgt	r3, #0
    e710:	andle	r3, sl, #1
    e714:	cmp	r3, #0
    e718:	bne	e894 <rb_inet_ntop+0xd88>
    e71c:	mov	r3, #58	; 0x3a
    e720:	add	r6, r1, #1
    e724:	strb	r3, [r1]
    e728:	ldr	r1, [pc, #864]	; ea90 <rb_inet_ntop+0xf84>
    e72c:	ldr	r2, [sp, #4]
    e730:	add	r1, pc, r1
    e734:	mov	r0, r6
    e738:	bl	4d00 <sprintf@plt>
    e73c:	add	r1, r6, r0
    e740:	cmp	r5, #5
    e744:	movgt	r3, #0
    e748:	andle	r3, sl, #1
    e74c:	cmp	r3, #0
    e750:	beq	e7c4 <rb_inet_ntop+0xcb8>
    e754:	cmn	r5, #1
    e758:	beq	e7c4 <rb_inet_ntop+0xcb8>
    e75c:	cmp	r5, #5
    e760:	moveq	r3, #58	; 0x3a
    e764:	strbeq	r3, [r1]
    e768:	addeq	r1, r1, #1
    e76c:	beq	e794 <rb_inet_ntop+0xc88>
    e770:	cmp	r5, #6
    e774:	movgt	r3, #0
    e778:	andle	r3, sl, #1
    e77c:	cmp	r3, #0
    e780:	beq	e810 <rb_inet_ntop+0xd04>
    e784:	cmp	r5, #0
    e788:	ble	e810 <rb_inet_ntop+0xd04>
    e78c:	cmp	r5, #6
    e790:	beq	e478 <rb_inet_ntop+0x96c>
    e794:	cmp	r5, #1
    e798:	bgt	e470 <rb_inet_ntop+0x964>
    e79c:	mov	r3, #58	; 0x3a
    e7a0:	add	r4, r1, #1
    e7a4:	strb	r3, [r1]
    e7a8:	ldr	r1, [pc, #740]	; ea94 <rb_inet_ntop+0xf88>
    e7ac:	mov	r2, fp
    e7b0:	add	r1, pc, r1
    e7b4:	mov	r0, r4
    e7b8:	bl	4d00 <sprintf@plt>
    e7bc:	add	r1, r4, r0
    e7c0:	b	de2c <rb_inet_ntop+0x320>
    e7c4:	mov	r3, #58	; 0x3a
    e7c8:	add	r9, r1, #1
    e7cc:	strb	r3, [r1]
    e7d0:	ldr	r1, [pc, #704]	; ea98 <rb_inet_ntop+0xf8c>
    e7d4:	mov	r2, r8
    e7d8:	add	r1, pc, r1
    e7dc:	mov	r0, r9
    e7e0:	bl	4d00 <sprintf@plt>
    e7e4:	add	r1, r9, r0
    e7e8:	b	e770 <rb_inet_ntop+0xc64>
    e7ec:	ldr	r1, [pc, #680]	; ea9c <rb_inet_ntop+0xf90>
    e7f0:	add	r3, sp, #64	; 0x40
    e7f4:	mov	r0, r3
    e7f8:	add	r1, pc, r1
    e7fc:	str	r3, [sp, #24]
    e800:	bl	4d00 <sprintf@plt>
    e804:	ldr	r3, [sp, #24]
    e808:	add	r1, r3, r0
    e80c:	b	e658 <rb_inet_ntop+0xb4c>
    e810:	mov	r3, #58	; 0x3a
    e814:	cmp	r5, #0
    e818:	strb	r3, [r1]
    e81c:	add	r6, r1, #1
    e820:	bne	e870 <rb_inet_ntop+0xd64>
    e824:	ldr	r3, [sp, #24]
    e828:	sub	r3, r6, r3
    e82c:	rsb	r3, r3, #46	; 0x2e
    e830:	cmp	r3, #15
    e834:	bls	e590 <rb_inet_ntop+0xa84>
    e838:	ldrb	r1, [r4, #12]
    e83c:	ldr	r2, [pc, #604]	; eaa0 <rb_inet_ntop+0xf94>
    e840:	ldr	r3, [pc, #604]	; eaa4 <rb_inet_ntop+0xf98>
    e844:	add	r2, pc, r2
    e848:	add	r2, r2, r1, lsl #2
    e84c:	add	r3, pc, r3
    e850:	ldr	r2, [r2, #28]
    e854:	add	r3, r3, #28
    e858:	sub	r2, r2, #1
    e85c:	ldrb	r1, [r2, #1]!
    e860:	cmp	r1, #0
    e864:	beq	e8f4 <rb_inet_ntop+0xde8>
    e868:	strb	r1, [r3], #1
    e86c:	b	e85c <rb_inet_ntop+0xd50>
    e870:	ldr	r1, [pc, #560]	; eaa8 <rb_inet_ntop+0xf9c>
    e874:	ldr	r2, [sp, #8]
    e878:	add	r1, pc, r1
    e87c:	mov	r0, r6
    e880:	bl	4d00 <sprintf@plt>
    e884:	cmp	sl, #0
    e888:	add	r1, r6, r0
    e88c:	beq	e79c <rb_inet_ntop+0xc90>
    e890:	b	e794 <rb_inet_ntop+0xc88>
    e894:	cmp	r5, #4
    e898:	bne	e740 <rb_inet_ntop+0xc34>
    e89c:	mov	r3, #58	; 0x3a
    e8a0:	strb	r3, [r1]
    e8a4:	add	r1, r1, #1
    e8a8:	b	e770 <rb_inet_ntop+0xc64>
    e8ac:	cmp	r5, #3
    e8b0:	bne	e708 <rb_inet_ntop+0xbfc>
    e8b4:	mov	r3, #58	; 0x3a
    e8b8:	strb	r3, [r1]
    e8bc:	add	r1, r1, #1
    e8c0:	b	e740 <rb_inet_ntop+0xc34>
    e8c4:	cmp	r5, #2
    e8c8:	bne	e6d0 <rb_inet_ntop+0xbc4>
    e8cc:	mov	r3, #58	; 0x3a
    e8d0:	strb	r3, [r1]
    e8d4:	add	r1, r1, #1
    e8d8:	b	e708 <rb_inet_ntop+0xbfc>
    e8dc:	cmp	r5, #1
    e8e0:	bne	e698 <rb_inet_ntop+0xb8c>
    e8e4:	mov	r3, #58	; 0x3a
    e8e8:	strb	r3, [r1]
    e8ec:	add	r1, r1, #1
    e8f0:	b	e6d0 <rb_inet_ntop+0xbc4>
    e8f4:	mov	r2, #46	; 0x2e
    e8f8:	strb	r2, [r3]
    e8fc:	ldrb	r1, [r4, #13]
    e900:	ldr	r2, [pc, #420]	; eaac <rb_inet_ntop+0xfa0>
    e904:	add	r3, r3, #1
    e908:	add	r2, pc, r2
    e90c:	add	r2, r2, r1, lsl #2
    e910:	ldr	r2, [r2, #28]
    e914:	sub	r2, r2, #1
    e918:	ldrb	r1, [r2, #1]!
    e91c:	cmp	r1, #0
    e920:	beq	e96c <rb_inet_ntop+0xe60>
    e924:	strb	r1, [r3], #1
    e928:	b	e918 <rb_inet_ntop+0xe0c>
    e92c:	add	r1, sp, #64	; 0x40
    e930:	mov	r2, #48	; 0x30
    e934:	mov	r3, #58	; 0x3a
    e938:	str	r1, [sp, #24]
    e93c:	strb	r2, [sp, #64]	; 0x40
    e940:	strb	r3, [sp, #65]	; 0x41
    e944:	add	r1, sp, #66	; 0x42
    e948:	b	e698 <rb_inet_ntop+0xb8c>
    e94c:	add	r1, sp, #64	; 0x40
    e950:	mov	r2, #48	; 0x30
    e954:	mov	r3, #58	; 0x3a
    e958:	str	r1, [sp, #24]
    e95c:	strb	r2, [sp, #64]	; 0x40
    e960:	strb	r3, [sp, #65]	; 0x41
    e964:	add	r1, sp, #66	; 0x42
    e968:	b	e380 <rb_inet_ntop+0x874>
    e96c:	mov	r2, #46	; 0x2e
    e970:	strb	r2, [r3]
    e974:	ldrb	r1, [r4, #14]
    e978:	ldr	r2, [pc, #304]	; eab0 <rb_inet_ntop+0xfa4>
    e97c:	add	r3, r3, #1
    e980:	add	r2, pc, r2
    e984:	add	r2, r2, r1, lsl #2
    e988:	ldr	r2, [r2, #28]
    e98c:	sub	r2, r2, #1
    e990:	ldrb	r1, [r2, #1]!
    e994:	cmp	r1, #0
    e998:	strbne	r1, [r3], #1
    e99c:	bne	e990 <rb_inet_ntop+0xe84>
    e9a0:	mov	r2, #46	; 0x2e
    e9a4:	strb	r2, [r3]
    e9a8:	ldrb	r1, [r4, #15]
    e9ac:	ldr	r2, [pc, #256]	; eab4 <rb_inet_ntop+0xfa8>
    e9b0:	add	r3, r3, #1
    e9b4:	add	r2, pc, r2
    e9b8:	add	r2, r2, r1, lsl #2
    e9bc:	ldr	r2, [r2, #28]
    e9c0:	sub	r2, r2, #1
    e9c4:	ldrb	r0, [r2, #1]!
    e9c8:	cmp	r0, #0
    e9cc:	strbne	r0, [r3], #1
    e9d0:	bne	e9c4 <rb_inet_ntop+0xeb8>
    e9d4:	ldr	r1, [pc, #220]	; eab8 <rb_inet_ntop+0xfac>
    e9d8:	strb	r0, [r3]
    e9dc:	add	r1, pc, r1
    e9e0:	add	r1, r1, #28
    e9e4:	mov	r0, r6
    e9e8:	bl	488c <strcpy@plt>
    e9ec:	cmp	r0, #0
    e9f0:	beq	e590 <rb_inet_ntop+0xa84>
    e9f4:	mov	r0, r6
    e9f8:	bl	47e4 <strlen@plt>
    e9fc:	mov	r3, r7
    ea00:	add	r1, r6, r0
    ea04:	b	de38 <rb_inet_ntop+0x32c>
    ea08:	.word	0x0001ebb0
    ea0c:	.word	0x00031af4
    ea10:	.word	0x0001eb68
    ea14:	.word	0x0001eb2c
    ea18:	.word	0x0001eaf0
    ea1c:	.word	0x00031a24
    ea20:	.word	0x0001ea8c
    ea24:	.word	0x000319d0
    ea28:	.word	0x0001ea44
    ea2c:	.word	0x0001ea08
    ea30:	.word	0x0001e9cc
    ea34:	.word	0x00031900
    ea38:	.word	0x0000cab8
    ea3c:	.word	0x0000ca90
    ea40:	.word	0x0000ca68
    ea44:	.word	0x0000ca40
    ea48:	.word	0x0000ca18
    ea4c:	.word	0x0000c9e8
    ea50:	.word	0x0000c9c0
    ea54:	.word	0x0000c9a4
    ea58:	.word	0x0003174c
    ea5c:	.word	0x0003173c
    ea60:	.word	0x0000c86c
    ea64:	.word	0x0000c82c
    ea68:	.word	0x0000c7f4
    ea6c:	.word	0x0000ffff
    ea70:	.word	0x0000c6f8
    ea74:	.word	0x0000c6cc
    ea78:	.word	0x0000c6a4
    ea7c:	.word	0x0000c684
    ea80:	.word	0x0000c658
    ea84:	.word	0x0000c554
    ea88:	.word	0x0000c514
    ea8c:	.word	0x0000c4dc
    ea90:	.word	0x0000c4a4
    ea94:	.word	0x0000c424
    ea98:	.word	0x0000c3fc
    ea9c:	.word	0x0000c3dc
    eaa0:	.word	0x0001e1f8
    eaa4:	.word	0x00031150
    eaa8:	.word	0x0000c35c
    eaac:	.word	0x0001e134
    eab0:	.word	0x0001e0bc
    eab4:	.word	0x0001e088
    eab8:	.word	0x00030fc0

0000eabc <rb_inet_ntop_sock>:
    eabc:	ldrh	ip, [r0]
    eac0:	cmp	ip, #2
    eac4:	beq	eaec <rb_inet_ntop_sock+0x30>
    eac8:	cmp	ip, #10
    eacc:	bne	eae4 <rb_inet_ntop_sock+0x28>
    ead0:	mov	r3, r2
    ead4:	mov	r2, r1
    ead8:	add	r1, r0, #8
    eadc:	mov	r0, ip
    eae0:	b	494c <rb_inet_ntop@plt>
    eae4:	mov	r0, #0
    eae8:	bx	lr
    eaec:	mov	r3, r2
    eaf0:	mov	r2, r1
    eaf4:	add	r1, r0, #4
    eaf8:	mov	r0, ip
    eafc:	b	494c <rb_inet_ntop@plt>

0000eb00 <rb_inet_pton>:
    eb00:	cmp	r0, #2
    eb04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    eb08:	mov	ip, r1
    eb0c:	sub	sp, sp, #56	; 0x38
    eb10:	mov	r4, r2
    eb14:	beq	ec0c <rb_inet_pton+0x10c>
    eb18:	cmp	r0, #10
    eb1c:	bne	ebd0 <rb_inet_pton+0xd0>
    eb20:	add	r5, sp, #56	; 0x38
    eb24:	mov	r3, #0
    eb28:	strb	r3, [r5, #-56]!	; 0xffffffc8
    eb2c:	mov	r7, r3
    eb30:	mov	sl, r3
    eb34:	mov	lr, r5
    eb38:	mov	r8, r3
    eb3c:	mov	r6, r1
    eb40:	mov	r9, #1
    eb44:	ldrb	r3, [r6], #1
    eb48:	cmp	r3, #0
    eb4c:	sub	r1, r3, #48	; 0x30
    eb50:	beq	eb98 <rb_inet_pton+0x98>
    eb54:	cmp	r1, #9
    eb58:	bhi	ebdc <rb_inet_pton+0xdc>
    eb5c:	ldrb	r3, [lr]
    eb60:	smlabb	r1, r0, r3, r1
    eb64:	cmp	r1, #255	; 0xff
    eb68:	bhi	ecc8 <rb_inet_pton+0x1c8>
    eb6c:	cmp	sl, #0
    eb70:	strb	r1, [lr]
    eb74:	bne	eb44 <rb_inet_pton+0x44>
    eb78:	add	r7, r7, #1
    eb7c:	cmp	r7, #4
    eb80:	bgt	ecc8 <rb_inet_pton+0x1c8>
    eb84:	ldrb	r3, [r6], #1
    eb88:	mov	sl, r9
    eb8c:	cmp	r3, #0
    eb90:	sub	r1, r3, #48	; 0x30
    eb94:	bne	eb54 <rb_inet_pton+0x54>
    eb98:	cmp	r7, #3
    eb9c:	ble	ecc8 <rb_inet_pton+0x1c8>
    eba0:	ldr	r3, [sp]
    eba4:	ldr	r1, [pc, #316]	; ece8 <rb_inet_pton+0x1e8>
    eba8:	mov	r2, ip
    ebac:	str	r3, [r4]
    ebb0:	add	r1, pc, r1
    ebb4:	mov	r0, r5
    ebb8:	bl	4d00 <sprintf@plt>
    ebbc:	mov	r1, r4
    ebc0:	mov	r0, r5
    ebc4:	bl	cdc8 <inet_pton6>
    ebc8:	add	sp, sp, #56	; 0x38
    ebcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ebd0:	mvn	r0, #0
    ebd4:	add	sp, sp, #56	; 0x38
    ebd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ebdc:	cmp	r3, #46	; 0x2e
    ebe0:	movne	r2, #0
    ebe4:	andeq	r2, sl, #1
    ebe8:	eor	r2, r2, #1
    ebec:	cmp	r7, #4
    ebf0:	orreq	r2, r2, #1
    ebf4:	cmp	r2, #0
    ebf8:	mov	sl, r8
    ebfc:	bne	ecc8 <rb_inet_pton+0x1c8>
    ec00:	strb	r2, [lr, #1]
    ec04:	add	lr, lr, #1
    ec08:	b	eb44 <rb_inet_pton+0x44>
    ec0c:	mov	r3, #0
    ec10:	add	r1, sp, #56	; 0x38
    ec14:	mov	lr, r3
    ec18:	mov	r6, r3
    ec1c:	mov	r5, #10
    ec20:	mov	r7, #1
    ec24:	strb	r3, [r1, #-56]!	; 0xffffffc8
    ec28:	ldrb	r2, [ip], #1
    ec2c:	cmp	r2, #0
    ec30:	sub	r0, r2, #48	; 0x30
    ec34:	beq	ec7c <rb_inet_pton+0x17c>
    ec38:	cmp	r0, #9
    ec3c:	bhi	ec94 <rb_inet_pton+0x194>
    ec40:	ldrb	r2, [r1]
    ec44:	smlabb	r0, r5, r2, r0
    ec48:	cmp	r0, #255	; 0xff
    ec4c:	bhi	ecdc <rb_inet_pton+0x1dc>
    ec50:	cmp	r3, #0
    ec54:	strb	r0, [r1]
    ec58:	bne	ec28 <rb_inet_pton+0x128>
    ec5c:	add	lr, lr, #1
    ec60:	cmp	lr, #4
    ec64:	bgt	ecdc <rb_inet_pton+0x1dc>
    ec68:	ldrb	r2, [ip], #1
    ec6c:	mov	r3, r7
    ec70:	cmp	r2, #0
    ec74:	sub	r0, r2, #48	; 0x30
    ec78:	bne	ec38 <rb_inet_pton+0x138>
    ec7c:	cmp	lr, #3
    ec80:	ble	ecdc <rb_inet_pton+0x1dc>
    ec84:	ldr	r3, [sp]
    ec88:	mov	r0, #1
    ec8c:	str	r3, [r4]
    ec90:	b	ebd4 <rb_inet_pton+0xd4>
    ec94:	cmp	r2, #46	; 0x2e
    ec98:	movne	r3, #0
    ec9c:	andeq	r3, r3, #1
    eca0:	eor	r3, r3, #1
    eca4:	cmp	lr, #4
    eca8:	movne	r2, r3
    ecac:	orreq	r2, r3, #1
    ecb0:	cmp	r2, #0
    ecb4:	mov	r3, r6
    ecb8:	bne	ecdc <rb_inet_pton+0x1dc>
    ecbc:	strb	r2, [r1, #1]
    ecc0:	add	r1, r1, #1
    ecc4:	b	ec28 <rb_inet_pton+0x128>
    ecc8:	mov	r1, r4
    eccc:	mov	r0, ip
    ecd0:	bl	cdc8 <inet_pton6>
    ecd4:	add	sp, sp, #56	; 0x38
    ecd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ecdc:	mov	r0, #0
    ece0:	add	sp, sp, #56	; 0x38
    ece4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ece8:	.word	0x0000c028

0000ecec <rb_inet_pton_sock>:
    ecec:	push	{r4, r5, r6, lr}
    ecf0:	mov	r2, #128	; 0x80
    ecf4:	mov	r4, r1
    ecf8:	mov	r5, r0
    ecfc:	mov	r0, r1
    ed00:	mov	r1, #0
    ed04:	bl	4628 <memset@plt>
    ed08:	add	r2, r4, #4
    ed0c:	mov	r1, r5
    ed10:	mov	r0, #2
    ed14:	bl	4634 <rb_inet_pton@plt>
    ed18:	cmp	r0, #0
    ed1c:	beq	ed30 <rb_inet_pton_sock+0x44>
    ed20:	mov	r3, #2
    ed24:	str	r3, [r4]
    ed28:	mov	r0, #1
    ed2c:	pop	{r4, r5, r6, pc}
    ed30:	mov	r1, r5
    ed34:	add	r2, r4, #8
    ed38:	mov	r0, #10
    ed3c:	bl	4634 <rb_inet_pton@plt>
    ed40:	cmp	r0, #0
    ed44:	movne	r3, #10
    ed48:	strne	r3, [r4]
    ed4c:	movne	r0, #1
    ed50:	pop	{r4, r5, r6, pc}

0000ed54 <rb_get_iotype>:
    ed54:	ldr	r0, [pc, #8]	; ed64 <rb_get_iotype+0x10>
    ed58:	add	r0, pc, r0
    ed5c:	add	r0, r0, #44	; 0x2c
    ed60:	bx	lr
    ed64:	.word	0x00030c44

0000ed68 <rb_io_sched_event>:
    ed68:	push	{r4, r5, r6, lr}
    ed6c:	subs	r5, r0, #0
    ed70:	beq	eda4 <rb_io_sched_event+0x3c>
    ed74:	ldr	r4, [pc, #68]	; edc0 <rb_io_sched_event+0x58>
    ed78:	add	r4, pc, r4
    ed7c:	ldr	r3, [r4, #72]	; 0x48
    ed80:	cmp	r3, #0
    ed84:	beq	eda4 <rb_io_sched_event+0x3c>
    ed88:	ldr	r2, [r4, #76]	; 0x4c
    ed8c:	cmp	r2, #0
    ed90:	beq	eda4 <rb_io_sched_event+0x3c>
    ed94:	mov	r6, r1
    ed98:	blx	r3
    ed9c:	cmp	r0, #0
    eda0:	bne	edac <rb_io_sched_event+0x44>
    eda4:	mov	r0, #0
    eda8:	pop	{r4, r5, r6, pc}
    edac:	ldr	r3, [r4, #76]	; 0x4c
    edb0:	mov	r1, r6
    edb4:	mov	r0, r5
    edb8:	pop	{r4, r5, r6, lr}
    edbc:	bx	r3
    edc0:	.word	0x00030c24

0000edc4 <rb_io_unsched_event>:
    edc4:	push	{r4, r5, r6, lr}
    edc8:	subs	r5, r0, #0
    edcc:	popeq	{r4, r5, r6, pc}
    edd0:	ldr	r4, [pc, #52]	; ee0c <rb_io_unsched_event+0x48>
    edd4:	add	r4, pc, r4
    edd8:	ldr	r3, [r4, #72]	; 0x48
    eddc:	cmp	r3, #0
    ede0:	popeq	{r4, r5, r6, pc}
    ede4:	ldr	r2, [r4, #80]	; 0x50
    ede8:	cmp	r2, #0
    edec:	popeq	{r4, r5, r6, pc}
    edf0:	blx	r3
    edf4:	cmp	r0, #0
    edf8:	popeq	{r4, r5, r6, pc}
    edfc:	ldr	r3, [r4, #80]	; 0x50
    ee00:	mov	r0, r5
    ee04:	pop	{r4, r5, r6, lr}
    ee08:	bx	r3
    ee0c:	.word	0x00030bc8

0000ee10 <rb_io_supports_event>:
    ee10:	ldr	r3, [pc, #16]	; ee28 <rb_io_supports_event+0x18>
    ee14:	add	r3, pc, r3
    ee18:	ldr	r0, [r3, #72]	; 0x48
    ee1c:	cmp	r0, #0
    ee20:	bxeq	lr
    ee24:	bx	r0
    ee28:	.word	0x00030b88

0000ee2c <rb_io_init_event>:
    ee2c:	ldr	r3, [pc, #20]	; ee48 <rb_io_init_event+0x1c>
    ee30:	push	{r4, lr}
    ee34:	add	r3, pc, r3
    ee38:	ldr	r3, [r3, #84]	; 0x54
    ee3c:	blx	r3
    ee40:	pop	{r4, lr}
    ee44:	b	11eb8 <rb_event_io_register_all>
    ee48:	.word	0x00030b68

0000ee4c <rb_init_netio>:
    ee4c:	ldr	r0, [pc, #1252]	; f338 <rb_init_netio+0x4ec>
    ee50:	push	{r4, r5, r6, lr}
    ee54:	add	r0, pc, r0
    ee58:	bl	4598 <getenv@plt>
    ee5c:	mov	r1, #49152	; 0xc000
    ee60:	ldr	r4, [pc, #1236]	; f33c <rb_init_netio+0x4f0>
    ee64:	add	r4, pc, r4
    ee68:	mov	r5, r0
    ee6c:	mov	r0, #1
    ee70:	bl	45ec <calloc@plt>
    ee74:	cmp	r0, #0
    ee78:	beq	f1c0 <rb_init_netio+0x374>
    ee7c:	ldr	r3, [pc, #1212]	; f340 <rb_init_netio+0x4f4>
    ee80:	ldr	r3, [r4, r3]
    ee84:	str	r0, [r3]
    ee88:	bl	10848 <rb_init_ssl>
    ee8c:	cmp	r5, #0
    ee90:	beq	ef54 <rb_init_netio+0x108>
    ee94:	ldr	r0, [pc, #1192]	; f344 <rb_init_netio+0x4f8>
    ee98:	mov	r1, r5
    ee9c:	add	r0, pc, r0
    eea0:	bl	4cdc <strcmp@plt>
    eea4:	cmp	r0, #0
    eea8:	beq	efd4 <rb_init_netio+0x188>
    eeac:	ldr	r0, [pc, #1172]	; f348 <rb_init_netio+0x4fc>
    eeb0:	mov	r1, r5
    eeb4:	add	r0, pc, r0
    eeb8:	bl	4cdc <strcmp@plt>
    eebc:	cmp	r0, #0
    eec0:	beq	f054 <rb_init_netio+0x208>
    eec4:	ldr	r0, [pc, #1152]	; f34c <rb_init_netio+0x500>
    eec8:	mov	r1, r5
    eecc:	add	r0, pc, r0
    eed0:	bl	4cdc <strcmp@plt>
    eed4:	cmp	r0, #0
    eed8:	beq	f1b0 <rb_init_netio+0x364>
    eedc:	ldr	r0, [pc, #1132]	; f350 <rb_init_netio+0x504>
    eee0:	mov	r1, r5
    eee4:	add	r0, pc, r0
    eee8:	bl	4cdc <strcmp@plt>
    eeec:	cmp	r0, #0
    eef0:	beq	f1c4 <rb_init_netio+0x378>
    eef4:	ldr	r0, [pc, #1112]	; f354 <rb_init_netio+0x508>
    eef8:	mov	r1, r5
    eefc:	add	r0, pc, r0
    ef00:	bl	4cdc <strcmp@plt>
    ef04:	cmp	r0, #0
    ef08:	beq	f0d0 <rb_init_netio+0x284>
    ef0c:	ldr	r0, [pc, #1092]	; f358 <rb_init_netio+0x50c>
    ef10:	mov	r1, r5
    ef14:	add	r0, pc, r0
    ef18:	bl	4cdc <strcmp@plt>
    ef1c:	cmp	r0, #0
    ef20:	beq	f26c <rb_init_netio+0x420>
    ef24:	ldr	r0, [pc, #1072]	; f35c <rb_init_netio+0x510>
    ef28:	mov	r1, r5
    ef2c:	add	r0, pc, r0
    ef30:	bl	4cdc <strcmp@plt>
    ef34:	cmp	r0, #0
    ef38:	beq	f218 <rb_init_netio+0x3cc>
    ef3c:	ldr	r0, [pc, #1052]	; f360 <rb_init_netio+0x514>
    ef40:	mov	r1, r5
    ef44:	add	r0, pc, r0
    ef48:	bl	4cdc <strcmp@plt>
    ef4c:	cmp	r0, #0
    ef50:	beq	f064 <rb_init_netio+0x218>
    ef54:	bl	16478 <rb_init_netio_kqueue>
    ef58:	cmp	r0, #0
    ef5c:	bne	f124 <rb_init_netio+0x2d8>
    ef60:	ldr	r2, [pc, #1020]	; f364 <rb_init_netio+0x518>
    ef64:	ldr	r3, [pc, #1020]	; f368 <rb_init_netio+0x51c>
    ef68:	ldr	r1, [pc, #1020]	; f36c <rb_init_netio+0x520>
    ef6c:	ldr	r0, [r4, r2]
    ef70:	add	r3, pc, r3
    ef74:	ldr	r2, [pc, #1012]	; f370 <rb_init_netio+0x524>
    ef78:	str	r0, [r3, #88]	; 0x58
    ef7c:	ldr	r0, [r4, r1]
    ef80:	ldr	r1, [pc, #1004]	; f374 <rb_init_netio+0x528>
    ef84:	str	r0, [r3, #92]	; 0x5c
    ef88:	ldr	r0, [r4, r2]
    ef8c:	ldr	r2, [pc, #996]	; f378 <rb_init_netio+0x52c>
    ef90:	str	r0, [r3, #96]	; 0x60
    ef94:	ldr	r0, [r4, r1]
    ef98:	ldr	r1, [pc, #988]	; f37c <rb_init_netio+0x530>
    ef9c:	str	r0, [r3, #76]	; 0x4c
    efa0:	ldr	r0, [r4, r2]
    efa4:	ldr	r2, [pc, #980]	; f380 <rb_init_netio+0x534>
    efa8:	str	r0, [r3, #80]	; 0x50
    efac:	ldr	r1, [r4, r1]
    efb0:	add	r0, r3, #44	; 0x2c
    efb4:	str	r1, [r3, #84]	; 0x54
    efb8:	ldr	r1, [pc, #964]	; f384 <rb_init_netio+0x538>
    efbc:	ldr	ip, [r4, r2]
    efc0:	add	r1, pc, r1
    efc4:	mov	r2, #25
    efc8:	pop	{r4, r5, r6, lr}
    efcc:	str	ip, [r3, #72]	; 0x48
    efd0:	b	46a0 <rb_strlcpy@plt>
    efd4:	bl	143e0 <rb_init_netio_epoll>
    efd8:	cmp	r0, #0
    efdc:	bne	ef3c <rb_init_netio+0xf0>
    efe0:	ldr	r2, [pc, #928]	; f388 <rb_init_netio+0x53c>
    efe4:	ldr	r3, [pc, #928]	; f38c <rb_init_netio+0x540>
    efe8:	ldr	r1, [pc, #928]	; f390 <rb_init_netio+0x544>
    efec:	ldr	r0, [r4, r2]
    eff0:	add	r3, pc, r3
    eff4:	ldr	r2, [pc, #920]	; f394 <rb_init_netio+0x548>
    eff8:	str	r0, [r3, #88]	; 0x58
    effc:	ldr	r0, [r4, r1]
    f000:	ldr	r1, [pc, #912]	; f398 <rb_init_netio+0x54c>
    f004:	str	r0, [r3, #92]	; 0x5c
    f008:	ldr	r0, [r4, r2]
    f00c:	ldr	r2, [pc, #904]	; f39c <rb_init_netio+0x550>
    f010:	str	r0, [r3, #96]	; 0x60
    f014:	ldr	r0, [r4, r1]
    f018:	ldr	r1, [pc, #896]	; f3a0 <rb_init_netio+0x554>
    f01c:	str	r0, [r3, #76]	; 0x4c
    f020:	ldr	r0, [r4, r2]
    f024:	ldr	r2, [pc, #888]	; f3a4 <rb_init_netio+0x558>
    f028:	str	r0, [r3, #80]	; 0x50
    f02c:	ldr	r1, [r4, r1]
    f030:	add	r0, r3, #44	; 0x2c
    f034:	str	r1, [r3, #72]	; 0x48
    f038:	ldr	r1, [pc, #872]	; f3a8 <rb_init_netio+0x55c>
    f03c:	ldr	ip, [r4, r2]
    f040:	add	r1, pc, r1
    f044:	mov	r2, #25
    f048:	pop	{r4, r5, r6, lr}
    f04c:	str	ip, [r3, #84]	; 0x54
    f050:	b	46a0 <rb_strlcpy@plt>
    f054:	bl	16478 <rb_init_netio_kqueue>
    f058:	cmp	r0, #0
    f05c:	beq	ef60 <rb_init_netio+0x114>
    f060:	b	ef3c <rb_init_netio+0xf0>
    f064:	bl	4fb8 <rb_init_netio_win32>
    f068:	cmp	r0, #0
    f06c:	bne	ef54 <rb_init_netio+0x108>
    f070:	ldr	r2, [pc, #820]	; f3ac <rb_init_netio+0x560>
    f074:	ldr	r3, [pc, #820]	; f3b0 <rb_init_netio+0x564>
    f078:	ldr	r1, [pc, #820]	; f3b4 <rb_init_netio+0x568>
    f07c:	ldr	r0, [r4, r2]
    f080:	add	r3, pc, r3
    f084:	ldr	r2, [pc, #812]	; f3b8 <rb_init_netio+0x56c>
    f088:	str	r0, [r3, #88]	; 0x58
    f08c:	ldr	r1, [r4, r1]
    f090:	ldr	lr, [pc, #804]	; f3bc <rb_init_netio+0x570>
    f094:	str	r1, [r3, #92]	; 0x5c
    f098:	ldr	r1, [pc, #800]	; f3c0 <rb_init_netio+0x574>
    f09c:	ldr	r4, [r4, r2]
    f0a0:	add	lr, pc, lr
    f0a4:	add	r0, r3, #44	; 0x2c
    f0a8:	mov	ip, #0
    f0ac:	mov	r2, #25
    f0b0:	add	r1, pc, r1
    f0b4:	str	r4, [r3, #96]	; 0x60
    f0b8:	str	lr, [r3, #72]	; 0x48
    f0bc:	pop	{r4, r5, r6, lr}
    f0c0:	str	ip, [r3, #76]	; 0x4c
    f0c4:	str	ip, [r3, #80]	; 0x50
    f0c8:	str	ip, [r3, #84]	; 0x54
    f0cc:	b	46a0 <rb_strlcpy@plt>
    f0d0:	bl	142d8 <rb_init_netio_devpoll>
    f0d4:	cmp	r0, #0
    f0d8:	bne	ef3c <rb_init_netio+0xf0>
    f0dc:	ldr	r2, [pc, #736]	; f3c4 <rb_init_netio+0x578>
    f0e0:	ldr	r3, [pc, #736]	; f3c8 <rb_init_netio+0x57c>
    f0e4:	ldr	r1, [pc, #736]	; f3cc <rb_init_netio+0x580>
    f0e8:	ldr	r0, [r4, r2]
    f0ec:	add	r3, pc, r3
    f0f0:	ldr	r2, [pc, #728]	; f3d0 <rb_init_netio+0x584>
    f0f4:	str	r0, [r3, #88]	; 0x58
    f0f8:	ldr	r1, [r4, r1]
    f0fc:	ldr	lr, [pc, #720]	; f3d4 <rb_init_netio+0x588>
    f100:	str	r1, [r3, #92]	; 0x5c
    f104:	ldr	r1, [pc, #716]	; f3d8 <rb_init_netio+0x58c>
    f108:	ldr	r4, [r4, r2]
    f10c:	add	lr, pc, lr
    f110:	add	r0, r3, #44	; 0x2c
    f114:	mov	ip, #0
    f118:	mov	r2, #25
    f11c:	add	r1, pc, r1
    f120:	b	f0b4 <rb_init_netio+0x268>
    f124:	bl	143e0 <rb_init_netio_epoll>
    f128:	cmp	r0, #0
    f12c:	beq	efe0 <rb_init_netio+0x194>
    f130:	bl	151b4 <rb_init_netio_ports>
    f134:	cmp	r0, #0
    f138:	bne	f2ec <rb_init_netio+0x4a0>
    f13c:	ldr	r2, [pc, #664]	; f3dc <rb_init_netio+0x590>
    f140:	ldr	r3, [pc, #664]	; f3e0 <rb_init_netio+0x594>
    f144:	ldr	r1, [pc, #664]	; f3e4 <rb_init_netio+0x598>
    f148:	ldr	r0, [r4, r2]
    f14c:	add	r3, pc, r3
    f150:	ldr	r2, [pc, #656]	; f3e8 <rb_init_netio+0x59c>
    f154:	str	r0, [r3, #88]	; 0x58
    f158:	ldr	r0, [r4, r1]
    f15c:	ldr	r1, [pc, #648]	; f3ec <rb_init_netio+0x5a0>
    f160:	str	r0, [r3, #92]	; 0x5c
    f164:	ldr	r0, [r4, r2]
    f168:	ldr	r2, [pc, #640]	; f3f0 <rb_init_netio+0x5a4>
    f16c:	str	r0, [r3, #96]	; 0x60
    f170:	ldr	r0, [r4, r1]
    f174:	ldr	r1, [pc, #632]	; f3f4 <rb_init_netio+0x5a8>
    f178:	str	r0, [r3, #76]	; 0x4c
    f17c:	ldr	r0, [r4, r2]
    f180:	ldr	r2, [pc, #624]	; f3f8 <rb_init_netio+0x5ac>
    f184:	str	r0, [r3, #80]	; 0x50
    f188:	ldr	r1, [r4, r1]
    f18c:	add	r0, r3, #44	; 0x2c
    f190:	str	r1, [r3, #84]	; 0x54
    f194:	ldr	r1, [pc, #608]	; f3fc <rb_init_netio+0x5b0>
    f198:	ldr	ip, [r4, r2]
    f19c:	add	r1, pc, r1
    f1a0:	mov	r2, #25
    f1a4:	pop	{r4, r5, r6, lr}
    f1a8:	str	ip, [r3, #72]	; 0x48
    f1ac:	b	46a0 <rb_strlcpy@plt>
    f1b0:	bl	151b4 <rb_init_netio_ports>
    f1b4:	cmp	r0, #0
    f1b8:	beq	f13c <rb_init_netio+0x2f0>
    f1bc:	b	ef3c <rb_init_netio+0xf0>
    f1c0:	bl	4988 <rb_outofmemory@plt>
    f1c4:	bl	14d38 <rb_init_netio_poll>
    f1c8:	cmp	r0, #0
    f1cc:	bne	ef3c <rb_init_netio+0xf0>
    f1d0:	ldr	r2, [pc, #552]	; f400 <rb_init_netio+0x5b4>
    f1d4:	ldr	r3, [pc, #552]	; f404 <rb_init_netio+0x5b8>
    f1d8:	ldr	r1, [pc, #552]	; f408 <rb_init_netio+0x5bc>
    f1dc:	ldr	r0, [r4, r2]
    f1e0:	add	r3, pc, r3
    f1e4:	ldr	r2, [pc, #544]	; f40c <rb_init_netio+0x5c0>
    f1e8:	str	r0, [r3, #88]	; 0x58
    f1ec:	ldr	r1, [r4, r1]
    f1f0:	ldr	lr, [pc, #536]	; f410 <rb_init_netio+0x5c4>
    f1f4:	str	r1, [r3, #92]	; 0x5c
    f1f8:	ldr	r1, [pc, #532]	; f414 <rb_init_netio+0x5c8>
    f1fc:	ldr	r4, [r4, r2]
    f200:	add	lr, pc, lr
    f204:	add	r0, r3, #44	; 0x2c
    f208:	mov	ip, #0
    f20c:	mov	r2, #25
    f210:	add	r1, pc, r1
    f214:	b	f0b4 <rb_init_netio+0x268>
    f218:	bl	15de4 <rb_init_netio_select>
    f21c:	cmp	r0, #0
    f220:	bne	ef3c <rb_init_netio+0xf0>
    f224:	ldr	r2, [pc, #492]	; f418 <rb_init_netio+0x5cc>
    f228:	ldr	r3, [pc, #492]	; f41c <rb_init_netio+0x5d0>
    f22c:	ldr	r1, [pc, #492]	; f420 <rb_init_netio+0x5d4>
    f230:	ldr	r0, [r4, r2]
    f234:	add	r3, pc, r3
    f238:	ldr	r2, [pc, #484]	; f424 <rb_init_netio+0x5d8>
    f23c:	str	r0, [r3, #88]	; 0x58
    f240:	ldr	r1, [r4, r1]
    f244:	ldr	lr, [pc, #476]	; f428 <rb_init_netio+0x5dc>
    f248:	str	r1, [r3, #92]	; 0x5c
    f24c:	ldr	r1, [pc, #472]	; f42c <rb_init_netio+0x5e0>
    f250:	ldr	r4, [r4, r2]
    f254:	add	lr, pc, lr
    f258:	add	r0, r3, #44	; 0x2c
    f25c:	mov	ip, #0
    f260:	mov	r2, #25
    f264:	add	r1, pc, r1
    f268:	b	f0b4 <rb_init_netio+0x268>
    f26c:	bl	15200 <rb_init_netio_sigio>
    f270:	cmp	r0, #0
    f274:	bne	ef3c <rb_init_netio+0xf0>
    f278:	ldr	r2, [pc, #432]	; f430 <rb_init_netio+0x5e4>
    f27c:	ldr	r3, [pc, #432]	; f434 <rb_init_netio+0x5e8>
    f280:	ldr	r1, [pc, #432]	; f438 <rb_init_netio+0x5ec>
    f284:	ldr	r0, [r4, r2]
    f288:	add	r3, pc, r3
    f28c:	ldr	r2, [pc, #424]	; f43c <rb_init_netio+0x5f0>
    f290:	str	r0, [r3, #88]	; 0x58
    f294:	ldr	r0, [r4, r1]
    f298:	ldr	r1, [pc, #416]	; f440 <rb_init_netio+0x5f4>
    f29c:	str	r0, [r3, #92]	; 0x5c
    f2a0:	ldr	r0, [r4, r2]
    f2a4:	ldr	r2, [pc, #408]	; f444 <rb_init_netio+0x5f8>
    f2a8:	str	r0, [r3, #96]	; 0x60
    f2ac:	ldr	r0, [r4, r1]
    f2b0:	ldr	r1, [pc, #400]	; f448 <rb_init_netio+0x5fc>
    f2b4:	str	r0, [r3, #76]	; 0x4c
    f2b8:	ldr	r0, [r4, r2]
    f2bc:	ldr	r2, [pc, #392]	; f44c <rb_init_netio+0x600>
    f2c0:	str	r0, [r3, #80]	; 0x50
    f2c4:	ldr	r1, [r4, r1]
    f2c8:	add	r0, r3, #44	; 0x2c
    f2cc:	str	r1, [r3, #72]	; 0x48
    f2d0:	ldr	r1, [pc, #376]	; f450 <rb_init_netio+0x604>
    f2d4:	ldr	ip, [r4, r2]
    f2d8:	add	r1, pc, r1
    f2dc:	mov	r2, #25
    f2e0:	pop	{r4, r5, r6, lr}
    f2e4:	str	ip, [r3, #84]	; 0x54
    f2e8:	b	46a0 <rb_strlcpy@plt>
    f2ec:	bl	142d8 <rb_init_netio_devpoll>
    f2f0:	cmp	r0, #0
    f2f4:	beq	f0dc <rb_init_netio+0x290>
    f2f8:	bl	15200 <rb_init_netio_sigio>
    f2fc:	cmp	r0, #0
    f300:	beq	f278 <rb_init_netio+0x42c>
    f304:	bl	14d38 <rb_init_netio_poll>
    f308:	cmp	r0, #0
    f30c:	beq	f1d0 <rb_init_netio+0x384>
    f310:	bl	4fb8 <rb_init_netio_win32>
    f314:	cmp	r0, #0
    f318:	beq	f070 <rb_init_netio+0x224>
    f31c:	bl	15de4 <rb_init_netio_select>
    f320:	cmp	r0, #0
    f324:	beq	f224 <rb_init_netio+0x3d8>
    f328:	ldr	r0, [pc, #292]	; f454 <rb_init_netio+0x608>
    f32c:	add	r0, pc, r0
    f330:	bl	491c <rb_lib_log@plt>
    f334:	bl	43c4 <abort@plt>
    f338:	.word	0x0000bd90
    f33c:	.word	0x0001e194
    f340:	.word	0x000003c0
    f344:	.word	0x0000bd5c
    f348:	.word	0x0000bd4c
    f34c:	.word	0x0000bd3c
    f350:	.word	0x0000bd2c
    f354:	.word	0x0000bd1c
    f358:	.word	0x0000bd0c
    f35c:	.word	0x0000bcfc
    f360:	.word	0x0000bcec
    f364:	.word	0x000003bc
    f368:	.word	0x00030a2c
    f36c:	.word	0x00000378
    f370:	.word	0x00000398
    f374:	.word	0x00000390
    f378:	.word	0x000003d4
    f37c:	.word	0x00000394
    f380:	.word	0x000003e4
    f384:	.word	0x0000bc40
    f388:	.word	0x00000368
    f38c:	.word	0x000309ac
    f390:	.word	0x000003c8
    f394:	.word	0x00000404
    f398:	.word	0x00000384
    f39c:	.word	0x000003c4
    f3a0:	.word	0x00000354
    f3a4:	.word	0x00000418
    f3a8:	.word	0x0000bbb8
    f3ac:	.word	0x0000039c
    f3b0:	.word	0x0003091c
    f3b4:	.word	0x000003a8
    f3b8:	.word	0x00000370
    f3bc:	.word	0xffffdc24
    f3c0:	.word	0x0000bb80
    f3c4:	.word	0x000003b0
    f3c8:	.word	0x000308b0
    f3cc:	.word	0x000003f0
    f3d0:	.word	0x000003b4
    f3d4:	.word	0xffffdbb8
    f3d8:	.word	0x0000bafc
    f3dc:	.word	0x000003e8
    f3e0:	.word	0x00030850
    f3e4:	.word	0x00000388
    f3e8:	.word	0x00000410
    f3ec:	.word	0x00000350
    f3f0:	.word	0x0000040c
    f3f4:	.word	0x00000364
    f3f8:	.word	0x000003e0
    f3fc:	.word	0x0000ba6c
    f400:	.word	0x000003ec
    f404:	.word	0x000307bc
    f408:	.word	0x000003fc
    f40c:	.word	0x00000380
    f410:	.word	0xffffdac4
    f414:	.word	0x0000ba00
    f418:	.word	0x00000420
    f41c:	.word	0x00030768
    f420:	.word	0x000003b8
    f424:	.word	0x00000400
    f428:	.word	0xffffda70
    f42c:	.word	0x0000b9c4
    f430:	.word	0x000003cc
    f434:	.word	0x00030714
    f438:	.word	0x0000036c
    f43c:	.word	0x000003dc
    f440:	.word	0x00000374
    f444:	.word	0x00000358
    f448:	.word	0x000003d8
    f44c:	.word	0x000003f8
    f450:	.word	0x0000b948
    f454:	.word	0x0000b90c

0000f458 <rb_setselect>:
    f458:	ldr	ip, [pc, #20]	; f474 <rb_setselect+0x1c>
    f45c:	push	{lr}		; (str lr, [sp, #-4]!)
    f460:	add	ip, pc, ip
    f464:	ldr	lr, [ip, #88]	; 0x58
    f468:	mov	ip, lr
    f46c:	pop	{lr}		; (ldr lr, [sp], #4)
    f470:	bx	ip
    f474:	.word	0x0003053c

0000f478 <rb_close>:
    f478:	push	{r4, r5, r6, r7, r8, lr}
    f47c:	subs	r4, r0, #0
    f480:	ldr	r6, [pc, #384]	; f608 <rb_close+0x190>
    f484:	add	r6, pc, r6
    f488:	popeq	{r4, r5, r6, r7, r8, pc}
    f48c:	ldrb	r5, [r4, #17]
    f490:	ldr	r8, [r4, #12]
    f494:	ands	r7, r5, #16
    f498:	bne	f5e8 <rb_close+0x170>
    f49c:	mov	r3, #0
    f4a0:	mov	r2, r3
    f4a4:	mov	r1, #3
    f4a8:	mov	r0, r4
    f4ac:	bl	44a8 <rb_setselect@plt>
    f4b0:	mov	r3, #0
    f4b4:	mov	r0, r4
    f4b8:	mov	r2, r3
    f4bc:	mov	r1, r3
    f4c0:	bl	43e8 <rb_settimeout@plt>
    f4c4:	ldr	r0, [r4, #52]	; 0x34
    f4c8:	cmp	r0, #0
    f4cc:	beq	f4d4 <rb_close+0x5c>
    f4d0:	bl	46f4 <free@plt>
    f4d4:	ldr	r0, [r4, #48]	; 0x30
    f4d8:	cmp	r0, #0
    f4dc:	beq	f4e4 <rb_close+0x6c>
    f4e0:	bl	46f4 <free@plt>
    f4e4:	ldr	r0, [r4, #24]
    f4e8:	cmp	r0, #0
    f4ec:	beq	f4f4 <rb_close+0x7c>
    f4f0:	bl	46f4 <free@plt>
    f4f4:	tst	r5, #32
    f4f8:	bne	f520 <rb_close+0xa8>
    f4fc:	ldrb	r3, [r4, #16]
    f500:	tst	r3, #1
    f504:	bne	f534 <rb_close+0xbc>
    f508:	cmp	r7, #0
    f50c:	popeq	{r4, r5, r6, r7, r8, pc}
    f510:	mov	r0, r8
    f514:	mov	r1, #2
    f518:	pop	{r4, r5, r6, r7, r8, lr}
    f51c:	b	4904 <shutdown@plt>
    f520:	mov	r0, r4
    f524:	bl	107d8 <rb_ssl_shutdown>
    f528:	ldrb	r3, [r4, #16]
    f52c:	tst	r3, #1
    f530:	beq	f508 <rb_close+0x90>
    f534:	ldr	r1, [r4, #12]
    f538:	ldr	r2, [pc, #204]	; f60c <rb_close+0x194>
    f53c:	ldr	r0, [r4, #8]
    f540:	asr	r3, r1, #24
    f544:	eor	r3, r3, r1, asr #12
    f548:	eor	r3, r3, r1
    f54c:	ldr	r2, [r6, r2]
    f550:	lsl	r3, r3, #20
    f554:	cmp	r0, #0
    f558:	lsr	r3, r3, #20
    f55c:	ldr	ip, [r2]
    f560:	add	r3, r3, r3, lsl #1
    f564:	ldr	r2, [r4, #4]
    f568:	lsl	r3, r3, #2
    f56c:	strne	r2, [r0, #4]
    f570:	add	r1, ip, r3
    f574:	ldrne	r2, [r4, #4]
    f578:	streq	r2, [r1, #4]
    f57c:	cmp	r2, #0
    f580:	strne	r0, [r2, #8]
    f584:	ldr	r2, [pc, #132]	; f610 <rb_close+0x198>
    f588:	streq	r0, [ip, r3]
    f58c:	add	r2, pc, r2
    f590:	mov	r3, #0
    f594:	str	r3, [r4, #4]
    f598:	ldr	r3, [r2, #100]	; 0x64
    f59c:	cmp	r3, #0
    f5a0:	str	r3, [r4, #8]
    f5a4:	strne	r4, [r3, #4]
    f5a8:	beq	f5f8 <rb_close+0x180>
    f5ac:	ldr	r2, [r1, #8]
    f5b0:	ldr	r3, [pc, #92]	; f614 <rb_close+0x19c>
    f5b4:	sub	r2, r2, #1
    f5b8:	add	r3, pc, r3
    f5bc:	str	r2, [r1, #8]
    f5c0:	ldrb	r1, [r4, #16]
    f5c4:	ldr	r2, [r3, #108]	; 0x6c
    f5c8:	cmp	r7, #0
    f5cc:	bic	r1, r1, #1
    f5d0:	add	r2, r2, #1
    f5d4:	str	r4, [r3, #100]	; 0x64
    f5d8:	strb	r1, [r4, #16]
    f5dc:	str	r2, [r3, #108]	; 0x6c
    f5e0:	popeq	{r4, r5, r6, r7, r8, pc}
    f5e4:	b	f510 <rb_close+0x98>
    f5e8:	mov	r1, #0
    f5ec:	mov	r0, r8
    f5f0:	bl	45e0 <listen@plt>
    f5f4:	b	f49c <rb_close+0x24>
    f5f8:	ldr	r3, [r2, #104]	; 0x68
    f5fc:	cmp	r3, #0
    f600:	streq	r4, [r2, #104]	; 0x68
    f604:	b	f5ac <rb_close+0x134>
    f608:	.word	0x0001db74
    f60c:	.word	0x000003c0
    f610:	.word	0x00030410
    f614:	.word	0x000303e4

0000f618 <rb_select>:
    f618:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f61c:	ldr	r7, [pc, #208]	; f6f4 <rb_select+0xdc>
    f620:	add	r7, pc, r7
    f624:	ldr	r3, [r7, #92]	; 0x5c
    f628:	blx	r3
    f62c:	ldr	r4, [r7, #100]	; 0x64
    f630:	cmp	r4, #0
    f634:	mov	sl, r0
    f638:	beq	f6ec <rb_select+0xd4>
    f63c:	ldr	r9, [pc, #180]	; f6f8 <rb_select+0xe0>
    f640:	ldr	r6, [pc, #180]	; f6fc <rb_select+0xe4>
    f644:	ldr	r5, [r4, #8]
    f648:	add	r9, pc, r9
    f64c:	add	r6, pc, r6
    f650:	mov	r8, #0
    f654:	b	f688 <rb_select+0x70>
    f658:	ldr	r2, [r6, #108]	; 0x6c
    f65c:	str	r3, [r0, #8]
    f660:	sub	r3, r2, #1
    f664:	str	r8, [r4, #4]
    f668:	str	r8, [r4, #8]
    f66c:	ldr	r0, [r6, #20]
    f670:	str	r3, [r6, #108]	; 0x6c
    f674:	bl	48c8 <rb_bh_free@plt>
    f678:	cmp	r5, #0
    f67c:	beq	f6ec <rb_select+0xd4>
    f680:	mov	r4, r5
    f684:	ldr	r5, [r5, #8]
    f688:	ldr	fp, [r4]
    f68c:	ldr	r3, [r7, #24]
    f690:	ldr	r0, [fp, #12]
    f694:	sub	r3, r3, #1
    f698:	str	r3, [r7, #24]
    f69c:	bl	4940 <close@plt>
    f6a0:	ldmib	r4, {r2, r3}
    f6a4:	mov	r1, fp
    f6a8:	cmp	r3, #0
    f6ac:	strne	r2, [r3, #4]
    f6b0:	streq	r2, [r7, #104]	; 0x68
    f6b4:	ldr	r0, [r4, #4]
    f6b8:	cmp	r0, #0
    f6bc:	bne	f658 <rb_select+0x40>
    f6c0:	ldr	r2, [r9, #108]	; 0x6c
    f6c4:	mov	r1, fp
    f6c8:	str	r0, [r4, #4]
    f6cc:	str	r0, [r4, #8]
    f6d0:	sub	r2, r2, #1
    f6d4:	ldr	r0, [r9, #20]
    f6d8:	str	r3, [r9, #100]	; 0x64
    f6dc:	str	r2, [r9, #108]	; 0x6c
    f6e0:	bl	48c8 <rb_bh_free@plt>
    f6e4:	cmp	r5, #0
    f6e8:	bne	f680 <rb_select+0x68>
    f6ec:	mov	r0, sl
    f6f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f6f4:	.word	0x0003037c
    f6f8:	.word	0x00030354
    f6fc:	.word	0x00030350

0000f700 <rb_setup_fd>:
    f700:	ldr	r3, [pc, #8]	; f710 <rb_setup_fd+0x10>
    f704:	add	r3, pc, r3
    f708:	ldr	r3, [r3, #96]	; 0x60
    f70c:	bx	r3
    f710:	.word	0x00030298

0000f714 <rb_set_nb>:
    f714:	subs	r3, r0, #0
    f718:	beq	f76c <rb_set_nb+0x58>
    f71c:	push	{r4, lr}
    f720:	ldr	r4, [r3, #12]
    f724:	bl	4b2c <rb_setup_fd@plt>
    f728:	cmp	r0, #0
    f72c:	popne	{r4, pc}
    f730:	mov	r2, r0
    f734:	mov	r1, #3
    f738:	mov	r0, r4
    f73c:	bl	4c04 <fcntl@plt>
    f740:	cmn	r0, #1
    f744:	beq	f764 <rb_set_nb+0x50>
    f748:	orr	r2, r0, #2048	; 0x800
    f74c:	mov	r1, #4
    f750:	mov	r0, r4
    f754:	bl	4c04 <fcntl@plt>
    f758:	adds	r0, r0, #1
    f75c:	movne	r0, #1
    f760:	pop	{r4, pc}
    f764:	mov	r0, #0
    f768:	pop	{r4, pc}
    f76c:	mov	r0, #0
    f770:	bx	lr

0000f774 <rb_accept_tryaccept>:
    f774:	ldr	r3, [pc, #440]	; f934 <rb_accept_tryaccept+0x1c0>
    f778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f77c:	sub	sp, sp, #180	; 0xb4
    f780:	add	r3, pc, r3
    f784:	ldr	fp, [pc, #428]	; f938 <rb_accept_tryaccept+0x1c4>
    f788:	str	r3, [sp, #20]
    f78c:	ldr	r3, [pc, #424]	; f93c <rb_accept_tryaccept+0x1c8>
    f790:	add	fp, pc, fp
    f794:	add	r3, pc, r3
    f798:	mov	r4, r0
    f79c:	add	r5, sp, #48	; 0x30
    f7a0:	add	sl, sp, #28
    f7a4:	mov	r9, #128	; 0x80
    f7a8:	mov	r8, #0
    f7ac:	str	r3, [sp, #12]
    f7b0:	add	r3, sp, #32
    f7b4:	str	r3, [sp, #16]
    f7b8:	mov	r2, #128	; 0x80
    f7bc:	mov	r1, r8
    f7c0:	mov	r0, r5
    f7c4:	bl	4628 <memset@plt>
    f7c8:	mov	r2, sl
    f7cc:	mov	r1, r5
    f7d0:	ldr	r0, [r4, #12]
    f7d4:	str	r9, [sp, #28]
    f7d8:	bl	476c <accept@plt>
    f7dc:	subs	r6, r0, #0
    f7e0:	blt	f8fc <rb_accept_tryaccept+0x188>
    f7e4:	ldrb	r1, [r4, #17]
    f7e8:	mov	r2, fp
    f7ec:	bic	r1, r1, #127	; 0x7f
    f7f0:	orr	r1, r1, #4
    f7f4:	bl	4a84 <rb_open@plt>
    f7f8:	subs	r7, r0, #0
    f7fc:	beq	f8e4 <rb_accept_tryaccept+0x170>
    f800:	bl	461c <rb_set_nb@plt>
    f804:	cmp	r0, #0
    f808:	beq	f91c <rb_accept_tryaccept+0x1a8>
    f80c:	ldrh	r3, [sp, #48]	; 0x30
    f810:	cmp	r3, #10
    f814:	beq	f868 <rb_accept_tryaccept+0xf4>
    f818:	ldr	r3, [r4, #52]	; 0x34
    f81c:	ldr	r6, [r3, #136]	; 0x88
    f820:	cmp	r6, #0
    f824:	beq	f844 <rb_accept_tryaccept+0xd0>
    f828:	ldr	r3, [r3, #140]	; 0x8c
    f82c:	ldr	r2, [sp, #28]
    f830:	mov	r1, r5
    f834:	mov	r0, r7
    f838:	blx	r6
    f83c:	cmp	r0, #0
    f840:	beq	f7b8 <rb_accept_tryaccept+0x44>
    f844:	ldrb	r3, [r4, #17]
    f848:	tst	r3, #32
    f84c:	beq	f8bc <rb_accept_tryaccept+0x148>
    f850:	mov	r1, r7
    f854:	ldr	r3, [sp, #28]
    f858:	mov	r2, r5
    f85c:	mov	r0, r4
    f860:	bl	113dc <rb_ssl_accept_setup>
    f864:	b	f7b8 <rb_accept_tryaccept+0x44>
    f868:	ldr	r3, [sp, #56]	; 0x38
    f86c:	cmp	r3, #0
    f870:	bne	f818 <rb_accept_tryaccept+0xa4>
    f874:	ldr	r3, [sp, #60]	; 0x3c
    f878:	cmp	r3, #0
    f87c:	bne	f818 <rb_accept_tryaccept+0xa4>
    f880:	ldr	r2, [sp, #64]	; 0x40
    f884:	cmn	r2, #65536	; 0x10000
    f888:	bne	f818 <rb_accept_tryaccept+0xa4>
    f88c:	ldrh	r0, [sp, #50]	; 0x32
    f890:	ldr	ip, [sp, #16]
    f894:	ldr	r1, [sp, #68]	; 0x44
    f898:	mov	r2, #2
    f89c:	str	r3, [ip, #8]
    f8a0:	str	r3, [ip, #12]
    f8a4:	strh	r0, [sp, #34]	; 0x22
    f8a8:	str	r1, [sp, #36]	; 0x24
    f8ac:	strh	r2, [sp, #32]
    f8b0:	ldm	ip, {r0, r1, r2, r3}
    f8b4:	stm	r5, {r0, r1, r2, r3}
    f8b8:	b	f818 <rb_accept_tryaccept+0xa4>
    f8bc:	ldr	r1, [r4, #52]	; 0x34
    f8c0:	ldr	r3, [sp, #28]
    f8c4:	mov	r0, r7
    f8c8:	ldr	r2, [r1, #140]	; 0x8c
    f8cc:	str	r2, [sp]
    f8d0:	mov	r2, r5
    f8d4:	ldr	r6, [r1, #132]	; 0x84
    f8d8:	mov	r1, r8
    f8dc:	blx	r6
    f8e0:	b	f7b8 <rb_accept_tryaccept+0x44>
    f8e4:	ldr	r0, [sp, #12]
    f8e8:	mov	r1, r6
    f8ec:	bl	491c <rb_lib_log@plt>
    f8f0:	mov	r0, r6
    f8f4:	bl	4940 <close@plt>
    f8f8:	b	f7b8 <rb_accept_tryaccept+0x44>
    f8fc:	ldr	r2, [pc, #60]	; f940 <rb_accept_tryaccept+0x1cc>
    f900:	mov	r0, r4
    f904:	mov	r3, #0
    f908:	add	r2, pc, r2
    f90c:	mov	r1, #1
    f910:	bl	44a8 <rb_setselect@plt>
    f914:	add	sp, sp, #180	; 0xb4
    f918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f91c:	ldr	r0, [sp, #20]
    f920:	ldr	r1, [r7, #12]
    f924:	bl	491c <rb_lib_log@plt>
    f928:	mov	r0, r7
    f92c:	bl	4868 <rb_close@plt>
    f930:	b	f80c <rb_accept_tryaccept+0x98>
    f934:	.word	0x0000b550
    f938:	.word	0x0000b4e4
    f93c:	.word	0x0000b4f4
    f940:	.word	0xfffffe64

0000f944 <rb_accept_tcp>:
    f944:	push	{r4, r5, r6, r7, r8, lr}
    f948:	subs	r4, r0, #0
    f94c:	popeq	{r4, r5, r6, r7, r8, pc}
    f950:	mov	r5, r1
    f954:	mov	r0, #1
    f958:	mov	r1, #144	; 0x90
    f95c:	mov	r6, r3
    f960:	mov	r7, r2
    f964:	bl	45ec <calloc@plt>
    f968:	cmp	r0, #0
    f96c:	beq	f990 <rb_accept_tcp+0x4c>
    f970:	str	r0, [r4, #52]	; 0x34
    f974:	str	r7, [r0, #132]	; 0x84
    f978:	str	r6, [r0, #140]	; 0x8c
    f97c:	str	r5, [r0, #136]	; 0x88
    f980:	mov	r1, #0
    f984:	mov	r0, r4
    f988:	pop	{r4, r5, r6, r7, r8, lr}
    f98c:	b	f774 <rb_accept_tryaccept>
    f990:	bl	4988 <rb_outofmemory@plt>

0000f994 <rb_socketpair>:
    f994:	ldr	ip, [pc, #332]	; fae8 <rb_socketpair+0x154>
    f998:	push	{r4, r5, r6, r7, lr}
    f99c:	add	ip, pc, ip
    f9a0:	ldr	r4, [pc, #324]	; faec <rb_socketpair+0x158>
    f9a4:	ldr	lr, [pc, #324]	; faf0 <rb_socketpair+0x15c>
    f9a8:	mov	r5, r3
    f9ac:	mov	r3, ip
    f9b0:	ldr	ip, [ip, r4]
    f9b4:	add	lr, pc, lr
    f9b8:	sub	sp, sp, #12
    f9bc:	ldr	lr, [lr, #24]
    f9c0:	ldr	ip, [ip]
    f9c4:	ldr	r4, [sp, #32]
    f9c8:	cmp	lr, ip
    f9cc:	bge	fa68 <rb_socketpair+0xd4>
    f9d0:	mov	r3, sp
    f9d4:	bl	4568 <socketpair@plt>
    f9d8:	subs	r6, r0, #0
    f9dc:	bne	fa58 <rb_socketpair+0xc4>
    f9e0:	ldr	r2, [sp, #36]	; 0x24
    f9e4:	mov	r1, #4
    f9e8:	ldr	r0, [sp]
    f9ec:	bl	4a84 <rb_open@plt>
    f9f0:	ldr	r2, [sp, #36]	; 0x24
    f9f4:	mov	r1, #4
    f9f8:	str	r0, [r5]
    f9fc:	ldr	r0, [sp, #4]
    fa00:	bl	4a84 <rb_open@plt>
    fa04:	str	r0, [r4]
    fa08:	ldr	r2, [r5]
    fa0c:	mov	r3, r0
    fa10:	cmp	r2, #0
    fa14:	beq	fa4c <rb_socketpair+0xb8>
    fa18:	cmp	r3, #0
    fa1c:	mov	r0, r2
    fa20:	beq	fa54 <rb_socketpair+0xc0>
    fa24:	bl	461c <rb_set_nb@plt>
    fa28:	cmp	r0, #0
    fa2c:	beq	fa7c <rb_socketpair+0xe8>
    fa30:	ldr	r0, [r4]
    fa34:	bl	461c <rb_set_nb@plt>
    fa38:	cmp	r0, #0
    fa3c:	beq	fac0 <rb_socketpair+0x12c>
    fa40:	mov	r0, r6
    fa44:	add	sp, sp, #12
    fa48:	pop	{r4, r5, r6, r7, pc}
    fa4c:	cmp	r0, #0
    fa50:	beq	fa58 <rb_socketpair+0xc4>
    fa54:	bl	4868 <rb_close@plt>
    fa58:	mvn	r6, #0
    fa5c:	mov	r0, r6
    fa60:	add	sp, sp, #12
    fa64:	pop	{r4, r5, r6, r7, pc}
    fa68:	bl	4ce8 <__errno_location@plt>
    fa6c:	mov	r3, #23
    fa70:	mvn	r6, #0
    fa74:	str	r3, [r0]
    fa78:	b	fa40 <rb_socketpair+0xac>
    fa7c:	bl	4ce8 <__errno_location@plt>
    fa80:	ldr	r7, [sp]
    fa84:	mvn	r6, #0
    fa88:	ldr	r0, [r0]
    fa8c:	bl	43a0 <strerror@plt>
    fa90:	mov	r1, r7
    fa94:	mov	r2, r0
    fa98:	ldr	r0, [pc, #84]	; faf4 <rb_socketpair+0x160>
    fa9c:	add	r0, pc, r0
    faa0:	bl	491c <rb_lib_log@plt>
    faa4:	ldr	r0, [r5]
    faa8:	bl	4868 <rb_close@plt>
    faac:	ldr	r0, [r4]
    fab0:	bl	4868 <rb_close@plt>
    fab4:	mov	r0, r6
    fab8:	add	sp, sp, #12
    fabc:	pop	{r4, r5, r6, r7, pc}
    fac0:	bl	4ce8 <__errno_location@plt>
    fac4:	ldr	r7, [sp, #4]
    fac8:	mvn	r6, #0
    facc:	ldr	r0, [r0]
    fad0:	bl	43a0 <strerror@plt>
    fad4:	mov	r1, r7
    fad8:	mov	r2, r0
    fadc:	ldr	r0, [pc, #20]	; faf8 <rb_socketpair+0x164>
    fae0:	add	r0, pc, r0
    fae4:	b	faa0 <rb_socketpair+0x10c>
    fae8:	.word	0x0001d65c
    faec:	.word	0x000003a0
    faf0:	.word	0x0002ffe8
    faf4:	.word	0x0000b260
    faf8:	.word	0x0000b21c

0000fafc <rb_pipe>:
    fafc:	ldr	r3, [pc, #284]	; fc20 <rb_pipe+0x124>
    fb00:	push	{r4, r5, r6, lr}
    fb04:	add	r3, pc, r3
    fb08:	ldr	lr, [pc, #276]	; fc24 <rb_pipe+0x128>
    fb0c:	ldr	ip, [pc, #276]	; fc28 <rb_pipe+0x12c>
    fb10:	mov	r4, r0
    fb14:	ldr	lr, [r3, lr]
    fb18:	add	ip, pc, ip
    fb1c:	mov	r5, r1
    fb20:	ldr	r0, [ip, #24]
    fb24:	ldr	r1, [lr]
    fb28:	sub	sp, sp, #8
    fb2c:	cmp	r0, r1
    fb30:	bge	fba4 <rb_pipe+0xa8>
    fb34:	mov	r0, sp
    fb38:	mov	r6, r2
    fb3c:	bl	4c88 <pipe@plt>
    fb40:	cmn	r0, #1
    fb44:	mov	r3, r0
    fb48:	beq	fb98 <rb_pipe+0x9c>
    fb4c:	mov	r2, r6
    fb50:	mov	r1, #8
    fb54:	ldr	r0, [sp]
    fb58:	bl	4a84 <rb_open@plt>
    fb5c:	mov	r2, r6
    fb60:	mov	r1, #8
    fb64:	str	r0, [r4]
    fb68:	ldr	r0, [sp, #4]
    fb6c:	bl	4a84 <rb_open@plt>
    fb70:	str	r0, [r5]
    fb74:	ldr	r0, [r4]
    fb78:	bl	461c <rb_set_nb@plt>
    fb7c:	cmp	r0, #0
    fb80:	beq	fbb8 <rb_pipe+0xbc>
    fb84:	ldr	r0, [r5]
    fb88:	bl	461c <rb_set_nb@plt>
    fb8c:	cmp	r0, #0
    fb90:	movne	r3, #0
    fb94:	beq	fbfc <rb_pipe+0x100>
    fb98:	mov	r0, r3
    fb9c:	add	sp, sp, #8
    fba0:	pop	{r4, r5, r6, pc}
    fba4:	bl	4ce8 <__errno_location@plt>
    fba8:	mov	r2, #23
    fbac:	mvn	r3, #0
    fbb0:	str	r2, [r0]
    fbb4:	b	fb98 <rb_pipe+0x9c>
    fbb8:	bl	4ce8 <__errno_location@plt>
    fbbc:	ldr	r6, [sp]
    fbc0:	ldr	r0, [r0]
    fbc4:	bl	43a0 <strerror@plt>
    fbc8:	mov	r1, r6
    fbcc:	mov	r2, r0
    fbd0:	ldr	r0, [pc, #84]	; fc2c <rb_pipe+0x130>
    fbd4:	add	r0, pc, r0
    fbd8:	bl	491c <rb_lib_log@plt>
    fbdc:	ldr	r0, [r4]
    fbe0:	bl	4868 <rb_close@plt>
    fbe4:	ldr	r0, [r5]
    fbe8:	bl	4868 <rb_close@plt>
    fbec:	mvn	r3, #0
    fbf0:	mov	r0, r3
    fbf4:	add	sp, sp, #8
    fbf8:	pop	{r4, r5, r6, pc}
    fbfc:	bl	4ce8 <__errno_location@plt>
    fc00:	ldr	r6, [sp, #4]
    fc04:	ldr	r0, [r0]
    fc08:	bl	43a0 <strerror@plt>
    fc0c:	mov	r1, r6
    fc10:	mov	r2, r0
    fc14:	ldr	r0, [pc, #20]	; fc30 <rb_pipe+0x134>
    fc18:	add	r0, pc, r0
    fc1c:	b	fbd8 <rb_pipe+0xdc>
    fc20:	.word	0x0001d4f4
    fc24:	.word	0x000003a0
    fc28:	.word	0x0002fe84
    fc2c:	.word	0x0000b128
    fc30:	.word	0x0000b0e4

0000fc34 <rb_socket>:
    fc34:	ldr	ip, [pc, #344]	; fd94 <rb_socket+0x160>
    fc38:	push	{r4, r5, r6, r7, lr}
    fc3c:	add	ip, pc, ip
    fc40:	ldr	r4, [pc, #336]	; fd98 <rb_socket+0x164>
    fc44:	ldr	lr, [pc, #336]	; fd9c <rb_socket+0x168>
    fc48:	mov	r5, r3
    fc4c:	ldr	r4, [ip, r4]
    fc50:	add	lr, pc, lr
    fc54:	mov	r3, ip
    fc58:	ldr	ip, [lr, #24]
    fc5c:	ldr	r3, [r4]
    fc60:	sub	sp, sp, #20
    fc64:	cmp	ip, r3
    fc68:	bge	fd14 <rb_socket+0xe0>
    fc6c:	mov	r7, r0
    fc70:	bl	4790 <socket@plt>
    fc74:	subs	r6, r0, #0
    fc78:	blt	fd30 <rb_socket+0xfc>
    fc7c:	cmp	r7, #10
    fc80:	beq	fcb4 <rb_socket+0x80>
    fc84:	mov	r2, r5
    fc88:	mov	r1, #4
    fc8c:	mov	r0, r6
    fc90:	bl	4a84 <rb_open@plt>
    fc94:	subs	r4, r0, #0
    fc98:	beq	fd68 <rb_socket+0x134>
    fc9c:	bl	461c <rb_set_nb@plt>
    fca0:	subs	r5, r0, #0
    fca4:	beq	fd38 <rb_socket+0x104>
    fca8:	mov	r0, r4
    fcac:	add	sp, sp, #20
    fcb0:	pop	{r4, r5, r6, r7, pc}
    fcb4:	add	r3, sp, #16
    fcb8:	mov	r1, #1
    fcbc:	mov	r2, #4
    fcc0:	str	r1, [r3, #-4]!
    fcc4:	str	r2, [sp]
    fcc8:	mov	r1, #41	; 0x29
    fccc:	mov	r2, #26
    fcd0:	bl	4ca0 <setsockopt@plt>
    fcd4:	cmn	r0, #1
    fcd8:	bne	fc84 <rb_socket+0x50>
    fcdc:	bl	4ce8 <__errno_location@plt>
    fce0:	ldr	r5, [sp, #12]
    fce4:	mov	r4, #0
    fce8:	ldr	r0, [r0]
    fcec:	bl	43a0 <strerror@plt>
    fcf0:	mov	r2, r6
    fcf4:	mov	r1, r5
    fcf8:	mov	r3, r0
    fcfc:	ldr	r0, [pc, #156]	; fda0 <rb_socket+0x16c>
    fd00:	add	r0, pc, r0
    fd04:	bl	491c <rb_lib_log@plt>
    fd08:	mov	r0, r6
    fd0c:	bl	4940 <close@plt>
    fd10:	b	fca8 <rb_socket+0x74>
    fd14:	bl	4ce8 <__errno_location@plt>
    fd18:	mov	r4, #0
    fd1c:	mov	r3, #23
    fd20:	str	r3, [r0]
    fd24:	mov	r0, r4
    fd28:	add	sp, sp, #20
    fd2c:	pop	{r4, r5, r6, r7, pc}
    fd30:	mov	r4, #0
    fd34:	b	fca8 <rb_socket+0x74>
    fd38:	bl	4ce8 <__errno_location@plt>
    fd3c:	ldr	r0, [r0]
    fd40:	bl	43a0 <strerror@plt>
    fd44:	mov	r1, r6
    fd48:	mov	r2, r0
    fd4c:	ldr	r0, [pc, #80]	; fda4 <rb_socket+0x170>
    fd50:	add	r0, pc, r0
    fd54:	bl	491c <rb_lib_log@plt>
    fd58:	mov	r0, r4
    fd5c:	bl	4868 <rb_close@plt>
    fd60:	mov	r4, r5
    fd64:	b	fca8 <rb_socket+0x74>
    fd68:	bl	4ce8 <__errno_location@plt>
    fd6c:	ldr	r0, [r0]
    fd70:	bl	43a0 <strerror@plt>
    fd74:	mov	r1, r6
    fd78:	mov	r2, r0
    fd7c:	ldr	r0, [pc, #36]	; fda8 <rb_socket+0x174>
    fd80:	add	r0, pc, r0
    fd84:	bl	491c <rb_lib_log@plt>
    fd88:	mov	r0, r6
    fd8c:	bl	4940 <close@plt>
    fd90:	b	fca8 <rb_socket+0x74>
    fd94:	.word	0x0001d3bc
    fd98:	.word	0x000003a0
    fd9c:	.word	0x0002fd4c
    fda0:	.word	0x0000b02c
    fda4:	.word	0x0000afac
    fda8:	.word	0x0000afec

0000fdac <rb_ignore_errno>:
    fdac:	cmp	r0, #85	; 0x55
    fdb0:	beq	fde0 <rb_ignore_errno+0x34>
    fdb4:	bgt	fdd0 <rb_ignore_errno+0x24>
    fdb8:	cmp	r0, #4
    fdbc:	beq	fde0 <rb_ignore_errno+0x34>
    fdc0:	cmp	r0, #11
    fdc4:	beq	fde0 <rb_ignore_errno+0x34>
    fdc8:	mov	r0, #0
    fdcc:	bx	lr
    fdd0:	cmp	r0, #105	; 0x69
    fdd4:	beq	fde0 <rb_ignore_errno+0x34>
    fdd8:	cmp	r0, #115	; 0x73
    fddc:	bne	fdc8 <rb_ignore_errno+0x1c>
    fde0:	mov	r0, #1
    fde4:	bx	lr

0000fde8 <rb_connect_tcp>:
    fde8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    fdec:	subs	r4, r0, #0
    fdf0:	ldr	r9, [sp, #32]
    fdf4:	ldr	r8, [sp, #36]	; 0x24
    fdf8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    fdfc:	mov	r5, r1
    fe00:	mov	r0, #1
    fe04:	mov	r1, #268	; 0x10c
    fe08:	mov	r7, r3
    fe0c:	mov	r6, r2
    fe10:	bl	45ec <calloc@plt>
    fe14:	cmp	r0, #0
    fe18:	beq	fef8 <rb_connect_tcp+0x110>
    fe1c:	str	r0, [r4, #48]	; 0x30
    fe20:	str	r7, [r0, #260]	; 0x104
    fe24:	str	r9, [r0, #264]	; 0x108
    fe28:	mov	r1, r5
    fe2c:	add	r0, r0, #128	; 0x80
    fe30:	mov	r2, #128	; 0x80
    fe34:	bl	4808 <memcpy@plt>
    fe38:	cmp	r6, #0
    fe3c:	beq	fe64 <rb_connect_tcp+0x7c>
    fe40:	ldrh	r2, [r6]
    fe44:	mov	r1, r6
    fe48:	ldr	r0, [r4, #12]
    fe4c:	cmp	r2, #2
    fe50:	moveq	r2, #16
    fe54:	movne	r2, #28
    fe58:	bl	4910 <bind@plt>
    fe5c:	cmp	r0, #0
    fe60:	blt	fefc <rb_connect_tcp+0x114>
    fe64:	ldr	r2, [pc, #160]	; ff0c <rb_connect_tcp+0x124>
    fe68:	mov	r1, r8
    fe6c:	mov	r3, #0
    fe70:	add	r2, pc, r2
    fe74:	mov	r0, r4
    fe78:	bl	43e8 <rb_settimeout@plt>
    fe7c:	ldr	r3, [r4, #48]	; 0x30
    fe80:	ldr	r0, [r4, #12]
    fe84:	add	r1, r3, #128	; 0x80
    fe88:	ldrh	r2, [r3, #128]	; 0x80
    fe8c:	cmp	r2, #2
    fe90:	moveq	r2, #16
    fe94:	movne	r2, #28
    fe98:	bl	43d0 <connect@plt>
    fe9c:	cmp	r0, #0
    fea0:	blt	feb4 <rb_connect_tcp+0xcc>
    fea4:	mov	r0, r4
    fea8:	mov	r1, #0
    feac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    feb0:	b	d2e0 <rb_connect_callback>
    feb4:	bl	4ce8 <__errno_location@plt>
    feb8:	ldr	r0, [r0]
    febc:	cmp	r0, #106	; 0x6a
    fec0:	beq	fea4 <rb_connect_tcp+0xbc>
    fec4:	bl	43dc <rb_ignore_errno@plt>
    fec8:	cmp	r0, #0
    fecc:	mov	r0, r4
    fed0:	beq	feec <rb_connect_tcp+0x104>
    fed4:	ldr	r2, [pc, #52]	; ff10 <rb_connect_tcp+0x128>
    fed8:	mov	r3, #0
    fedc:	add	r2, pc, r2
    fee0:	mov	r1, #2
    fee4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    fee8:	b	44a8 <rb_setselect@plt>
    feec:	mov	r1, #4
    fef0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    fef4:	b	d2e0 <rb_connect_callback>
    fef8:	bl	4988 <rb_outofmemory@plt>
    fefc:	mov	r0, r4
    ff00:	mov	r1, #1
    ff04:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    ff08:	b	d2e0 <rb_connect_callback>
    ff0c:	.word	0xffffd56c
    ff10:	.word	0xffffd46c

0000ff14 <rb_recv_fd_buf>:
    ff14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff18:	add	fp, sp, #32
    ff1c:	sub	sp, sp, #156	; 0x9c
    ff20:	ldr	r7, [fp, #4]
    ff24:	mov	r4, #0
    ff28:	str	r2, [fp, #-156]	; 0xffffff64
    ff2c:	lsl	ip, r7, #2
    ff30:	add	lr, ip, #26
    ff34:	bic	lr, lr, #7
    ff38:	sub	sp, sp, lr
    ff3c:	add	ip, ip, #12
    ff40:	mov	lr, #1
    ff44:	sub	r2, fp, #160	; 0xa0
    ff48:	mov	r5, r3
    ff4c:	str	r1, [fp, #-160]	; 0xffffff60
    ff50:	str	ip, [fp, #-132]	; 0xffffff7c
    ff54:	str	r2, [fp, #-144]	; 0xffffff70
    ff58:	str	lr, [fp, #-140]	; 0xffffff74
    ff5c:	str	sp, [fp, #-136]	; 0xffffff78
    ff60:	str	r4, [fp, #-152]	; 0xffffff68
    ff64:	str	r4, [fp, #-148]	; 0xffffff6c
    ff68:	str	r4, [fp, #-128]	; 0xffffff80
    ff6c:	bl	44e4 <rb_get_fd@plt>
    ff70:	mov	r2, r4
    ff74:	sub	r1, fp, #152	; 0x98
    ff78:	bl	4b38 <recvmsg@plt>
    ff7c:	subs	r3, r0, #0
    ff80:	str	r3, [fp, #-168]	; 0xffffff58
    ff84:	ble	10080 <rb_recv_fd_buf+0x16c>
    ff88:	ldr	r3, [fp, #-132]	; 0xffffff7c
    ff8c:	cmp	r3, r4
    ff90:	beq	10078 <rb_recv_fd_buf+0x164>
    ff94:	ldr	r4, [fp, #-136]	; 0xffffff78
    ff98:	cmp	r4, #0
    ff9c:	cmpne	r3, #11
    ffa0:	bls	10078 <rb_recv_fd_buf+0x164>
    ffa4:	ldr	r6, [r4]
    ffa8:	add	r4, r4, #12
    ffac:	sub	r6, r6, #12
    ffb0:	lsr	r6, r6, #2
    ffb4:	cmp	r6, r7
    ffb8:	movge	r6, r7
    ffbc:	cmp	r6, #0
    ffc0:	ble	10080 <rb_recv_fd_buf+0x16c>
    ffc4:	ldr	r3, [pc, #216]	; 100a4 <rb_recv_fd_buf+0x190>
    ffc8:	ldr	r7, [pc, #216]	; 100a8 <rb_recv_fd_buf+0x194>
    ffcc:	add	r3, pc, r3
    ffd0:	str	r3, [fp, #-176]	; 0xffffff50
    ffd4:	ldr	r3, [pc, #208]	; 100ac <rb_recv_fd_buf+0x198>
    ffd8:	add	r6, r4, r6, lsl #2
    ffdc:	add	r3, pc, r3
    ffe0:	str	r3, [fp, #-180]	; 0xffffff4c
    ffe4:	ldr	r3, [pc, #196]	; 100b0 <rb_recv_fd_buf+0x19c>
    ffe8:	sub	r5, r5, #4
    ffec:	add	r3, pc, r3
    fff0:	str	r3, [fp, #-172]	; 0xffffff54
    fff4:	ldr	r3, [pc, #184]	; 100b4 <rb_recv_fd_buf+0x1a0>
    fff8:	sub	r9, fp, #124	; 0x7c
    fffc:	add	r3, pc, r3
   10000:	mov	r8, #3
   10004:	add	r7, pc, r7
   10008:	str	r3, [fp, #-184]	; 0xffffff48
   1000c:	b	10038 <rb_recv_fd_buf+0x124>
   10010:	cmp	r0, #4096	; 0x1000
   10014:	ldr	r2, [fp, #-172]	; 0xffffff54
   10018:	beq	1008c <rb_recv_fd_buf+0x178>
   1001c:	cmp	r0, #32768	; 0x8000
   10020:	beq	10098 <rb_recv_fd_buf+0x184>
   10024:	mov	r0, sl
   10028:	bl	4a84 <rb_open@plt>
   1002c:	cmp	r4, r6
   10030:	str	r0, [r5, #4]!
   10034:	beq	10080 <rb_recv_fd_buf+0x16c>
   10038:	ldr	sl, [r4], #4
   1003c:	mov	r2, r9
   10040:	mov	r1, sl
   10044:	mov	r0, r8
   10048:	bl	4b5c <__fxstat@plt>
   1004c:	mov	r2, r7
   10050:	mov	r1, #64	; 0x40
   10054:	cmp	r0, #0
   10058:	bne	10024 <rb_recv_fd_buf+0x110>
   1005c:	ldr	r0, [fp, #-108]	; 0xffffff94
   10060:	and	r0, r0, #61440	; 0xf000
   10064:	cmp	r0, #49152	; 0xc000
   10068:	bne	10010 <rb_recv_fd_buf+0xfc>
   1006c:	ldr	r2, [fp, #-176]	; 0xffffff50
   10070:	mov	r1, #4
   10074:	b	10024 <rb_recv_fd_buf+0x110>
   10078:	mov	r3, #0
   1007c:	str	r3, [r5]
   10080:	ldr	r0, [fp, #-168]	; 0xffffff58
   10084:	sub	sp, fp, #32
   10088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1008c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   10090:	mov	r1, #8
   10094:	b	10024 <rb_recv_fd_buf+0x110>
   10098:	ldr	r2, [fp, #-184]	; 0xffffff48
   1009c:	mov	r1, #2
   100a0:	b	10024 <rb_recv_fd_buf+0x110>
   100a4:	.word	0x0000adec
   100a8:	.word	0x0000ada4
   100ac:	.word	0x0000adec
   100b0:	.word	0x0000adbc
   100b4:	.word	0x0000add8

000100b8 <rb_send_fd_buf>:
   100b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   100bc:	add	fp, sp, #32
   100c0:	sub	sp, sp, #52	; 0x34
   100c4:	ldr	lr, [fp, #4]
   100c8:	sub	r7, fp, #64	; 0x40
   100cc:	cmp	lr, #0
   100d0:	mov	r6, r2
   100d4:	sub	r2, fp, #36	; 0x24
   100d8:	mov	ip, #0
   100dc:	moveq	lr, #1
   100e0:	subeq	r3, fp, #73	; 0x49
   100e4:	mov	r4, #48	; 0x30
   100e8:	mov	r8, r0
   100ec:	cmp	r6, #0
   100f0:	mov	r0, #1
   100f4:	str	ip, [r7, #4]
   100f8:	str	r3, [r2, #-36]!	; 0xffffffdc
   100fc:	str	ip, [fp, #-64]	; 0xffffffc0
   10100:	strb	r4, [fp, #-73]	; 0xffffffb7
   10104:	str	ip, [r7, #16]
   10108:	str	ip, [r7, #20]
   1010c:	str	ip, [r7, #24]
   10110:	str	lr, [fp, #-68]	; 0xffffffbc
   10114:	str	r0, [fp, #-52]	; 0xffffffcc
   10118:	str	r2, [fp, #-56]	; 0xffffffc8
   1011c:	ble	101b4 <rb_send_fd_buf+0xfc>
   10120:	add	r3, r6, r0
   10124:	str	sp, [fp, #-80]	; 0xffffffb0
   10128:	lsl	r3, r3, #2
   1012c:	add	ip, r3, #15
   10130:	add	r2, r3, #8
   10134:	bic	ip, ip, #7
   10138:	sub	sp, sp, ip
   1013c:	cmp	r2, #11
   10140:	str	r2, [fp, #-44]	; 0xffffffd4
   10144:	str	sp, [fp, #-48]	; 0xffffffd0
   10148:	mov	sl, sp
   1014c:	bls	101a8 <rb_send_fd_buf+0xf0>
   10150:	mov	r5, sp
   10154:	sub	r9, r1, #4
   10158:	mov	r4, #0
   1015c:	str	r0, [sp, #4]
   10160:	str	r0, [sp, #8]
   10164:	str	r2, [r5], #8
   10168:	ldr	r0, [r9, #4]!
   1016c:	bl	44e4 <rb_get_fd@plt>
   10170:	add	r4, r4, #1
   10174:	cmp	r6, r4
   10178:	str	r0, [r5, #4]!
   1017c:	bne	10168 <rb_send_fd_buf+0xb0>
   10180:	ldr	r3, [sl]
   10184:	mov	r0, r8
   10188:	str	r3, [fp, #-44]	; 0xffffffd4
   1018c:	bl	44e4 <rb_get_fd@plt>
   10190:	mov	r1, r7
   10194:	mov	r2, #16384	; 0x4000
   10198:	bl	4700 <sendmsg@plt>
   1019c:	ldr	sp, [fp, #-80]	; 0xffffffb0
   101a0:	sub	sp, fp, #32
   101a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   101a8:	mov	r3, #0
   101ac:	str	r3, [r3, #4]
   101b0:	udf	#0
   101b4:	mov	r0, r8
   101b8:	bl	44e4 <rb_get_fd@plt>
   101bc:	mov	r1, r7
   101c0:	mov	r2, #16384	; 0x4000
   101c4:	bl	4700 <sendmsg@plt>
   101c8:	sub	sp, fp, #32
   101cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000101d0 <rb_ipv4_from_ipv6>:
   101d0:	push	{r4, r5, r6, lr}
   101d4:	mov	r5, r1
   101d8:	ldr	r1, [pc, #104]	; 10248 <rb_ipv4_from_ipv6+0x78>
   101dc:	add	r6, r0, #8
   101e0:	mov	r4, r0
   101e4:	mov	r2, #2
   101e8:	mov	r0, r6
   101ec:	add	r1, pc, r1
   101f0:	bl	4454 <memcmp@plt>
   101f4:	cmp	r0, #0
   101f8:	ldreq	r3, [r4, #10]
   101fc:	streq	r3, [r5, #4]
   10200:	beq	10230 <rb_ipv4_from_ipv6+0x60>
   10204:	ldr	r1, [pc, #64]	; 1024c <rb_ipv4_from_ipv6+0x7c>
   10208:	mov	r0, r6
   1020c:	add	r1, pc, r1
   10210:	add	r1, r1, #20
   10214:	mov	r2, #4
   10218:	bl	4454 <memcmp@plt>
   1021c:	cmp	r0, #0
   10220:	bne	10240 <rb_ipv4_from_ipv6+0x70>
   10224:	ldr	r3, [r4, #20]
   10228:	mvn	r3, r3
   1022c:	str	r3, [r5, #4]
   10230:	mov	r3, #2
   10234:	str	r3, [r5]
   10238:	mov	r0, #1
   1023c:	pop	{r4, r5, r6, pc}
   10240:	mov	r0, #0
   10244:	pop	{r4, r5, r6, pc}
   10248:	.word	0x0000abf4
   1024c:	.word	0x0000a8f4

00010250 <verify_accept_all_cb>:
   10250:	mov	r0, #1
   10254:	bx	lr

00010258 <rb_ssl_timeout_cb>:
   10258:	ldr	ip, [r0, #52]	; 0x34
   1025c:	push	{r4, lr}
   10260:	sub	sp, sp, #8
   10264:	ldr	lr, [ip, #140]	; 0x8c
   10268:	mov	r3, #0
   1026c:	str	lr, [sp]
   10270:	mov	r2, r3
   10274:	mov	r1, #3
   10278:	ldr	r4, [ip, #132]	; 0x84
   1027c:	blx	r4
   10280:	add	sp, sp, #8
   10284:	pop	{r4, pc}

00010288 <make_certfp>:
   10288:	push	{r4, r5, r6, r7, lr}
   1028c:	cmp	r2, #2
   10290:	ldr	r5, [pc, #348]	; 103f4 <make_certfp+0x16c>
   10294:	sub	sp, sp, #20
   10298:	mov	r4, r0
   1029c:	mov	r6, r1
   102a0:	add	r5, pc, r5
   102a4:	beq	103d4 <make_certfp+0x14c>
   102a8:	bgt	102dc <make_certfp+0x54>
   102ac:	cmp	r2, #0
   102b0:	beq	103b4 <make_certfp+0x12c>
   102b4:	cmp	r2, #1
   102b8:	bne	1038c <make_certfp+0x104>
   102bc:	mov	r3, #32
   102c0:	str	r3, [sp, #12]
   102c4:	bl	4bd4 <EVP_sha256@plt>
   102c8:	ldr	r3, [pc, #296]	; 103f8 <make_certfp+0x170>
   102cc:	mov	r2, r4
   102d0:	mov	r7, r0
   102d4:	ldr	r0, [r5, r3]
   102d8:	b	10318 <make_certfp+0x90>
   102dc:	ldr	r3, [pc, #280]	; 103fc <make_certfp+0x174>
   102e0:	cmp	r2, r3
   102e4:	beq	103a4 <make_certfp+0x11c>
   102e8:	add	r3, r3, #1
   102ec:	cmp	r2, r3
   102f0:	bne	1038c <make_certfp+0x104>
   102f4:	mov	r3, #64	; 0x40
   102f8:	str	r3, [sp, #12]
   102fc:	bl	4ba4 <EVP_sha512@plt>
   10300:	mov	r7, r0
   10304:	mov	r0, r4
   10308:	bl	4538 <X509_get_X509_PUBKEY@plt>
   1030c:	ldr	r3, [pc, #236]	; 10400 <make_certfp+0x178>
   10310:	mov	r2, r0
   10314:	ldr	r0, [r5, r3]
   10318:	add	ip, sp, #12
   1031c:	mov	r3, r6
   10320:	mov	r1, r7
   10324:	str	ip, [sp]
   10328:	bl	4a0c <ASN1_item_digest@plt>
   1032c:	cmp	r0, #1
   10330:	movne	r5, #0
   10334:	bne	10340 <make_certfp+0xb8>
   10338:	b	10398 <make_certfp+0x110>
   1033c:	mov	r5, r4
   10340:	bl	4400 <ERR_get_error@plt>
   10344:	subs	r4, r0, #0
   10348:	bne	1033c <make_certfp+0xb4>
   1034c:	ldr	r3, [pc, #176]	; 10404 <make_certfp+0x17c>
   10350:	mov	r0, r5
   10354:	add	r3, pc, r3
   10358:	mov	r1, r3
   1035c:	mov	r2, #512	; 0x200
   10360:	mov	r5, r3
   10364:	bl	45a4 <ERR_error_string_n@plt>
   10368:	ldr	r1, [pc, #152]	; 10408 <make_certfp+0x180>
   1036c:	ldr	r0, [pc, #152]	; 1040c <make_certfp+0x184>
   10370:	mov	r2, r5
   10374:	add	r1, pc, r1
   10378:	add	r0, pc, r0
   1037c:	bl	491c <rb_lib_log@plt>
   10380:	mov	r0, r4
   10384:	add	sp, sp, #20
   10388:	pop	{r4, r5, r6, r7, pc}
   1038c:	mov	r0, #0
   10390:	add	sp, sp, #20
   10394:	pop	{r4, r5, r6, r7, pc}
   10398:	ldr	r0, [sp, #12]
   1039c:	add	sp, sp, #20
   103a0:	pop	{r4, r5, r6, r7, pc}
   103a4:	mov	r3, #32
   103a8:	str	r3, [sp, #12]
   103ac:	bl	4bd4 <EVP_sha256@plt>
   103b0:	b	10300 <make_certfp+0x78>
   103b4:	mov	r3, #20
   103b8:	str	r3, [sp, #12]
   103bc:	bl	48ec <EVP_sha1@plt>
   103c0:	ldr	r3, [pc, #48]	; 103f8 <make_certfp+0x170>
   103c4:	mov	r2, r4
   103c8:	mov	r7, r0
   103cc:	ldr	r0, [r5, r3]
   103d0:	b	10318 <make_certfp+0x90>
   103d4:	mov	r3, #64	; 0x40
   103d8:	str	r3, [sp, #12]
   103dc:	bl	4ba4 <EVP_sha512@plt>
   103e0:	ldr	r3, [pc, #16]	; 103f8 <make_certfp+0x170>
   103e4:	mov	r2, r4
   103e8:	mov	r7, r0
   103ec:	ldr	r0, [r5, r3]
   103f0:	b	10318 <make_certfp+0x90>
   103f4:	.word	0x0001cd58
   103f8:	.word	0x00000408
   103fc:	.word	0x00001001
   10400:	.word	0x00000414
   10404:	.word	0x0002f6bc
   10408:	.word	0x0000aee4
   1040c:	.word	0x0000b0cc

00010410 <rb_ssl_accept_common>:
   10410:	push	{r4, r5, r6, r7, lr}
   10414:	mov	r6, r0
   10418:	sub	sp, sp, #12
   1041c:	bl	4400 <ERR_get_error@plt>
   10420:	subs	r4, r0, #0
   10424:	bne	1041c <rb_ssl_accept_common+0xc>
   10428:	ldr	r0, [r6, #56]	; 0x38
   1042c:	bl	47c0 <SSL_do_handshake@plt>
   10430:	mov	r5, r0
   10434:	mov	r1, r0
   10438:	ldr	r0, [r6, #56]	; 0x38
   1043c:	bl	4cac <SSL_get_error@plt>
   10440:	cmp	r5, #1
   10444:	mov	r7, r0
   10448:	beq	104f8 <rb_ssl_accept_common+0xe8>
   1044c:	cmn	r5, #1
   10450:	movne	r5, #0
   10454:	moveq	r5, #1
   10458:	cmp	r0, #2
   1045c:	movne	r3, #0
   10460:	andeq	r3, r5, #1
   10464:	cmp	r3, #0
   10468:	bne	104d8 <rb_ssl_accept_common+0xc8>
   1046c:	cmp	r0, #3
   10470:	movne	r5, #0
   10474:	andeq	r5, r5, #1
   10478:	cmp	r5, #0
   1047c:	bne	104bc <rb_ssl_accept_common+0xac>
   10480:	bl	4ce8 <__errno_location@plt>
   10484:	ldr	ip, [r6, #52]	; 0x34
   10488:	mov	r4, #5
   1048c:	mov	r3, r5
   10490:	ldr	lr, [ip, #140]	; 0x8c
   10494:	mov	r2, r5
   10498:	mov	r1, #6
   1049c:	str	r4, [r0]
   104a0:	str	lr, [sp]
   104a4:	str	r7, [r6, #64]	; 0x40
   104a8:	mov	r0, r6
   104ac:	ldr	r4, [ip, #132]	; 0x84
   104b0:	blx	r4
   104b4:	add	sp, sp, #12
   104b8:	pop	{r4, r5, r6, r7, pc}
   104bc:	ldr	r2, [pc, #160]	; 10564 <rb_ssl_accept_common+0x154>
   104c0:	mov	r0, r6
   104c4:	add	r2, pc, r2
   104c8:	mov	r1, #2
   104cc:	add	sp, sp, #12
   104d0:	pop	{r4, r5, r6, r7, lr}
   104d4:	b	44a8 <rb_setselect@plt>
   104d8:	ldr	r2, [pc, #136]	; 10568 <rb_ssl_accept_common+0x158>
   104dc:	mov	r3, r4
   104e0:	mov	r0, r6
   104e4:	add	r2, pc, r2
   104e8:	mov	r1, #1
   104ec:	add	sp, sp, #12
   104f0:	pop	{r4, r5, r6, r7, lr}
   104f4:	b	44a8 <rb_setselect@plt>
   104f8:	ldr	r2, [r6, #60]	; 0x3c
   104fc:	mov	r3, r4
   10500:	add	r2, r2, #1
   10504:	str	r2, [r6, #60]	; 0x3c
   10508:	mov	r1, r4
   1050c:	mov	r2, r4
   10510:	mov	r0, r6
   10514:	bl	43e8 <rb_settimeout@plt>
   10518:	mov	r3, r4
   1051c:	mov	r2, r4
   10520:	mov	r0, r6
   10524:	mov	r1, #3
   10528:	bl	44a8 <rb_setselect@plt>
   1052c:	ldr	r5, [r6, #52]	; 0x34
   10530:	mov	r1, r4
   10534:	str	r4, [r6, #52]	; 0x34
   10538:	ldr	r2, [r5, #140]	; 0x8c
   1053c:	ldr	r3, [r5, #128]	; 0x80
   10540:	mov	r0, r6
   10544:	str	r2, [sp]
   10548:	mov	r2, r5
   1054c:	ldr	r4, [r5, #132]	; 0x84
   10550:	blx	r4
   10554:	mov	r0, r5
   10558:	add	sp, sp, #12
   1055c:	pop	{r4, r5, r6, r7, lr}
   10560:	b	46f4 <free@plt>
   10564:	.word	0xffffff44
   10568:	.word	0xffffff24

0001056c <rb_ssl_tryconn_timeout_cb>:
   1056c:	push	{r4, lr}
   10570:	mov	r4, r1
   10574:	ldr	r3, [r0, #48]	; 0x30
   10578:	ldm	r1, {r1, r2}
   1057c:	str	r1, [r3, #260]	; 0x104
   10580:	str	r2, [r3, #264]	; 0x108
   10584:	mov	r1, #3
   10588:	bl	d2e0 <rb_connect_callback>
   1058c:	mov	r0, r4
   10590:	pop	{r4, lr}
   10594:	b	46f4 <free@plt>

00010598 <rb_ssl_connect_common>:
   10598:	push	{r4, r5, r6, r7, r8, lr}
   1059c:	mov	r5, r0
   105a0:	mov	r8, r1
   105a4:	bl	4400 <ERR_get_error@plt>
   105a8:	subs	r4, r0, #0
   105ac:	bne	105a4 <rb_ssl_connect_common+0xc>
   105b0:	ldr	r0, [r5, #56]	; 0x38
   105b4:	bl	47c0 <SSL_do_handshake@plt>
   105b8:	mov	r6, r0
   105bc:	mov	r1, r0
   105c0:	ldr	r0, [r5, #56]	; 0x38
   105c4:	bl	4cac <SSL_get_error@plt>
   105c8:	cmp	r6, #1
   105cc:	mov	r7, r0
   105d0:	beq	10674 <rb_ssl_connect_common+0xdc>
   105d4:	cmn	r6, #1
   105d8:	movne	r3, #0
   105dc:	moveq	r3, #1
   105e0:	cmp	r0, #2
   105e4:	cmneq	r6, #1
   105e8:	beq	10658 <rb_ssl_connect_common+0xc0>
   105ec:	cmp	r0, #3
   105f0:	movne	r3, #0
   105f4:	andeq	r3, r3, #1
   105f8:	cmp	r3, #0
   105fc:	bne	1063c <rb_ssl_connect_common+0xa4>
   10600:	bl	4ce8 <__errno_location@plt>
   10604:	mov	r1, #6
   10608:	mov	lr, #5
   1060c:	ldr	ip, [r8]
   10610:	ldr	r2, [r8, #4]
   10614:	ldr	r3, [r5, #48]	; 0x30
   10618:	str	lr, [r0]
   1061c:	str	r7, [r5, #64]	; 0x40
   10620:	mov	r0, r5
   10624:	str	ip, [r3, #260]	; 0x104
   10628:	str	r2, [r3, #264]	; 0x108
   1062c:	bl	d2e0 <rb_connect_callback>
   10630:	mov	r0, r8
   10634:	pop	{r4, r5, r6, r7, r8, lr}
   10638:	b	46f4 <free@plt>
   1063c:	ldr	r2, [pc, #120]	; 106bc <rb_ssl_connect_common+0x124>
   10640:	mov	r3, r8
   10644:	mov	r0, r5
   10648:	add	r2, pc, r2
   1064c:	mov	r1, #2
   10650:	pop	{r4, r5, r6, r7, r8, lr}
   10654:	b	44a8 <rb_setselect@plt>
   10658:	ldr	r2, [pc, #96]	; 106c0 <rb_ssl_connect_common+0x128>
   1065c:	mov	r3, r8
   10660:	mov	r0, r5
   10664:	add	r2, pc, r2
   10668:	mov	r1, #1
   1066c:	pop	{r4, r5, r6, r7, r8, lr}
   10670:	b	44a8 <rb_setselect@plt>
   10674:	ldr	r2, [r5, #60]	; 0x3c
   10678:	mov	r3, r4
   1067c:	add	r2, r2, #1
   10680:	str	r2, [r5, #60]	; 0x3c
   10684:	mov	r1, r4
   10688:	mov	r2, r4
   1068c:	mov	r0, r5
   10690:	bl	43e8 <rb_settimeout@plt>
   10694:	mov	r3, r4
   10698:	mov	r2, r4
   1069c:	mov	r1, #3
   106a0:	mov	r0, r5
   106a4:	bl	44a8 <rb_setselect@plt>
   106a8:	ldr	r3, [r5, #48]	; 0x30
   106ac:	ldr	ip, [r8]
   106b0:	ldr	r2, [r8, #4]
   106b4:	mov	r1, r4
   106b8:	b	10620 <rb_ssl_connect_common+0x88>
   106bc:	.word	0xffffff48
   106c0:	.word	0xffffff2c

000106c4 <rb_ssl_tryconn>:
   106c4:	cmp	r1, #0
   106c8:	push	{r4, r5, r6, lr}
   106cc:	mov	r6, r2
   106d0:	mov	r5, r0
   106d4:	bne	107a0 <rb_ssl_tryconn+0xdc>
   106d8:	ldrb	r1, [r0, #17]
   106dc:	mov	r3, r2
   106e0:	ldr	r2, [pc, #220]	; 107c4 <rb_ssl_tryconn+0x100>
   106e4:	orr	r1, r1, #32
   106e8:	strb	r1, [r0, #17]
   106ec:	add	r2, pc, r2
   106f0:	ldr	r1, [r6, #8]
   106f4:	bl	43e8 <rb_settimeout@plt>
   106f8:	bl	4400 <ERR_get_error@plt>
   106fc:	subs	r4, r0, #0
   10700:	bne	106f8 <rb_ssl_tryconn+0x34>
   10704:	ldr	r3, [pc, #188]	; 107c8 <rb_ssl_tryconn+0x104>
   10708:	add	r3, pc, r3
   1070c:	ldr	r0, [r3, #512]	; 0x200
   10710:	bl	4730 <SSL_new@plt>
   10714:	cmp	r0, #0
   10718:	str	r0, [r5, #56]	; 0x38
   1071c:	beq	10750 <rb_ssl_tryconn+0x8c>
   10720:	bl	4b68 <SSL_set_connect_state@plt>
   10724:	mov	r0, r5
   10728:	ldr	r4, [r5, #56]	; 0x38
   1072c:	bl	44e4 <rb_get_fd@plt>
   10730:	mov	r1, r0
   10734:	mov	r0, r4
   10738:	bl	4664 <SSL_set_fd@plt>
   1073c:	mov	r1, r6
   10740:	mov	r0, r5
   10744:	pop	{r4, r5, r6, lr}
   10748:	b	10598 <rb_ssl_connect_common>
   1074c:	mov	r4, r0
   10750:	bl	4400 <ERR_get_error@plt>
   10754:	cmp	r0, #0
   10758:	bne	1074c <rb_ssl_tryconn+0x88>
   1075c:	ldr	r3, [pc, #104]	; 107cc <rb_ssl_tryconn+0x108>
   10760:	mov	r0, r4
   10764:	add	r3, pc, r3
   10768:	mov	r1, r3
   1076c:	mov	r2, #512	; 0x200
   10770:	mov	r4, r3
   10774:	bl	45a4 <ERR_error_string_n@plt>
   10778:	ldr	r1, [pc, #80]	; 107d0 <rb_ssl_tryconn+0x10c>
   1077c:	ldr	r0, [pc, #80]	; 107d4 <rb_ssl_tryconn+0x110>
   10780:	add	r1, pc, r1
   10784:	mov	r2, r4
   10788:	add	r1, r1, #12
   1078c:	add	r0, pc, r0
   10790:	bl	491c <rb_lib_log@plt>
   10794:	mov	r0, r5
   10798:	bl	4868 <rb_close@plt>
   1079c:	b	1073c <rb_ssl_tryconn+0x78>
   107a0:	ldr	r3, [r0, #48]	; 0x30
   107a4:	ldr	ip, [r2]
   107a8:	ldr	r2, [r2, #4]
   107ac:	str	ip, [r3, #260]	; 0x104
   107b0:	str	r2, [r3, #264]	; 0x108
   107b4:	bl	d2e0 <rb_connect_callback>
   107b8:	mov	r0, r6
   107bc:	pop	{r4, r5, r6, lr}
   107c0:	b	46f4 <free@plt>
   107c4:	.word	0xfffffe78
   107c8:	.word	0x0002f308
   107cc:	.word	0x0002f2ac
   107d0:	.word	0x0000aad8
   107d4:	.word	0x0000acd4

000107d8 <rb_ssl_shutdown>:
   107d8:	push	{r4, r5, r6, lr}
   107dc:	subs	r4, r0, #0
   107e0:	popeq	{r4, r5, r6, pc}
   107e4:	ldr	r3, [r4, #56]	; 0x38
   107e8:	cmp	r3, #0
   107ec:	popeq	{r4, r5, r6, pc}
   107f0:	bl	4400 <ERR_get_error@plt>
   107f4:	cmp	r0, #0
   107f8:	bne	107f0 <rb_ssl_shutdown+0x18>
   107fc:	mov	r5, #4
   10800:	ldr	r0, [r4, #56]	; 0x38
   10804:	bl	4aa8 <SSL_shutdown@plt>
   10808:	mov	r6, r0
   1080c:	mov	r1, r0
   10810:	ldr	r0, [r4, #56]	; 0x38
   10814:	bl	4cac <SSL_get_error@plt>
   10818:	cmp	r6, #0
   1081c:	sub	r0, r0, #2
   10820:	bge	10834 <rb_ssl_shutdown+0x5c>
   10824:	cmp	r0, #1
   10828:	bhi	10834 <rb_ssl_shutdown+0x5c>
   1082c:	subs	r5, r5, #1
   10830:	bne	10800 <rb_ssl_shutdown+0x28>
   10834:	ldr	r0, [r4, #56]	; 0x38
   10838:	bl	4964 <SSL_free@plt>
   1083c:	mov	r3, #0
   10840:	str	r3, [r4, #56]	; 0x38
   10844:	pop	{r4, r5, r6, pc}

00010848 <rb_init_ssl>:
   10848:	ldr	r1, [pc, #28]	; 1086c <rb_init_ssl+0x24>
   1084c:	ldr	r0, [pc, #28]	; 10870 <rb_init_ssl+0x28>
   10850:	add	r1, pc, r1
   10854:	push	{r4, lr}
   10858:	add	r0, pc, r0
   1085c:	add	r1, r1, #28
   10860:	bl	491c <rb_lib_log@plt>
   10864:	mov	r0, #1
   10868:	pop	{r4, pc}
   1086c:	.word	0x0000aa08
   10870:	.word	0x0000ac18

00010874 <rb_setup_ssl_server>:
   10874:	push	{r4, r5, r6, r7, r8, r9, lr}
   10878:	subs	r7, r0, #0
   1087c:	sub	sp, sp, #12
   10880:	beq	10a08 <rb_setup_ssl_server+0x194>
   10884:	cmp	r1, #0
   10888:	mov	r6, r1
   1088c:	moveq	r6, r7
   10890:	cmp	r3, #0
   10894:	mov	r9, r2
   10898:	mov	r4, r3
   1089c:	beq	10984 <rb_setup_ssl_server+0x110>
   108a0:	bl	4400 <ERR_get_error@plt>
   108a4:	subs	r5, r0, #0
   108a8:	bne	108a0 <rb_setup_ssl_server+0x2c>
   108ac:	bl	4370 <TLS_method@plt>
   108b0:	bl	4b20 <SSL_CTX_new@plt>
   108b4:	subs	r8, r0, #0
   108b8:	beq	10934 <rb_setup_ssl_server+0xc0>
   108bc:	mov	r1, r7
   108c0:	bl	4838 <SSL_CTX_use_certificate_chain_file@plt>
   108c4:	cmp	r0, #1
   108c8:	bne	108d4 <rb_setup_ssl_server+0x60>
   108cc:	b	10994 <rb_setup_ssl_server+0x120>
   108d0:	mov	r5, r4
   108d4:	bl	4400 <ERR_get_error@plt>
   108d8:	subs	r4, r0, #0
   108dc:	bne	108d0 <rb_setup_ssl_server+0x5c>
   108e0:	ldr	r3, [pc, #844]	; 10c34 <rb_setup_ssl_server+0x3c0>
   108e4:	mov	r0, r5
   108e8:	add	r3, pc, r3
   108ec:	mov	r1, r3
   108f0:	mov	r2, #512	; 0x200
   108f4:	mov	r5, r3
   108f8:	bl	45a4 <ERR_error_string_n@plt>
   108fc:	ldr	r1, [pc, #820]	; 10c38 <rb_setup_ssl_server+0x3c4>
   10900:	ldr	r0, [pc, #820]	; 10c3c <rb_setup_ssl_server+0x3c8>
   10904:	add	r1, pc, r1
   10908:	add	r0, pc, r0
   1090c:	mov	r3, r5
   10910:	mov	r2, r7
   10914:	add	r1, r1, #440	; 0x1b8
   10918:	bl	491c <rb_lib_log@plt>
   1091c:	mov	r0, r8
   10920:	bl	4460 <SSL_CTX_free@plt>
   10924:	mov	r0, r4
   10928:	add	sp, sp, #12
   1092c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10930:	mov	r5, r4
   10934:	bl	4400 <ERR_get_error@plt>
   10938:	subs	r4, r0, #0
   1093c:	bne	10930 <rb_setup_ssl_server+0xbc>
   10940:	ldr	r3, [pc, #760]	; 10c40 <rb_setup_ssl_server+0x3cc>
   10944:	mov	r0, r5
   10948:	add	r3, pc, r3
   1094c:	mov	r1, r3
   10950:	mov	r2, #512	; 0x200
   10954:	mov	r5, r3
   10958:	bl	45a4 <ERR_error_string_n@plt>
   1095c:	ldr	r1, [pc, #736]	; 10c44 <rb_setup_ssl_server+0x3d0>
   10960:	ldr	r0, [pc, #736]	; 10c48 <rb_setup_ssl_server+0x3d4>
   10964:	add	r1, pc, r1
   10968:	mov	r2, r5
   1096c:	add	r1, r1, #440	; 0x1b8
   10970:	add	r0, pc, r0
   10974:	bl	491c <rb_lib_log@plt>
   10978:	mov	r0, r4
   1097c:	add	sp, sp, #12
   10980:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10984:	ldr	r4, [pc, #704]	; 10c4c <rb_setup_ssl_server+0x3d8>
   10988:	add	r4, pc, r4
   1098c:	add	r4, r4, #40	; 0x28
   10990:	b	108a0 <rb_setup_ssl_server+0x2c>
   10994:	mov	r2, r0
   10998:	mov	r1, r6
   1099c:	mov	r0, r8
   109a0:	bl	4928 <SSL_CTX_use_PrivateKey_file@plt>
   109a4:	cmp	r0, #1
   109a8:	bne	109b4 <rb_setup_ssl_server+0x140>
   109ac:	b	10a28 <rb_setup_ssl_server+0x1b4>
   109b0:	mov	r5, r4
   109b4:	bl	4400 <ERR_get_error@plt>
   109b8:	subs	r4, r0, #0
   109bc:	bne	109b0 <rb_setup_ssl_server+0x13c>
   109c0:	ldr	r3, [pc, #648]	; 10c50 <rb_setup_ssl_server+0x3dc>
   109c4:	mov	r0, r5
   109c8:	add	r3, pc, r3
   109cc:	mov	r1, r3
   109d0:	mov	r2, #512	; 0x200
   109d4:	mov	r5, r3
   109d8:	bl	45a4 <ERR_error_string_n@plt>
   109dc:	ldr	r1, [pc, #624]	; 10c54 <rb_setup_ssl_server+0x3e0>
   109e0:	ldr	r0, [pc, #624]	; 10c58 <rb_setup_ssl_server+0x3e4>
   109e4:	add	r1, pc, r1
   109e8:	mov	r3, r5
   109ec:	mov	r2, r6
   109f0:	add	r1, r1, #440	; 0x1b8
   109f4:	add	r0, pc, r0
   109f8:	bl	491c <rb_lib_log@plt>
   109fc:	mov	r0, r8
   10a00:	bl	4460 <SSL_CTX_free@plt>
   10a04:	b	10924 <rb_setup_ssl_server+0xb0>
   10a08:	ldr	r1, [pc, #588]	; 10c5c <rb_setup_ssl_server+0x3e8>
   10a0c:	ldr	r0, [pc, #588]	; 10c60 <rb_setup_ssl_server+0x3ec>
   10a10:	add	r1, pc, r1
   10a14:	add	r0, pc, r0
   10a18:	add	r1, r1, #440	; 0x1b8
   10a1c:	mov	r4, r7
   10a20:	bl	491c <rb_lib_log@plt>
   10a24:	b	10924 <rb_setup_ssl_server+0xb0>
   10a28:	cmp	r9, #0
   10a2c:	beq	10be8 <rb_setup_ssl_server+0x374>
   10a30:	ldr	r1, [pc, #556]	; 10c64 <rb_setup_ssl_server+0x3f0>
   10a34:	mov	r0, r9
   10a38:	add	r1, pc, r1
   10a3c:	bl	4610 <fopen@plt>
   10a40:	str	r5, [sp, #4]
   10a44:	subs	r6, r0, #0
   10a48:	beq	10c04 <rb_setup_ssl_server+0x390>
   10a4c:	mov	r3, r5
   10a50:	mov	r2, r5
   10a54:	add	r1, sp, #4
   10a58:	bl	49e8 <PEM_read_DHparams@plt>
   10a5c:	cmp	r0, #0
   10a60:	beq	10acc <rb_setup_ssl_server+0x258>
   10a64:	mov	r2, r5
   10a68:	ldr	r3, [sp, #4]
   10a6c:	mov	r1, #3
   10a70:	mov	r0, r8
   10a74:	bl	4670 <SSL_CTX_ctrl@plt>
   10a78:	ldr	r0, [sp, #4]
   10a7c:	bl	4a6c <DH_free@plt>
   10a80:	mov	r0, r6
   10a84:	bl	4580 <fclose@plt>
   10a88:	mov	r1, r4
   10a8c:	mov	r0, r8
   10a90:	bl	43f4 <SSL_CTX_set_cipher_list@plt>
   10a94:	cmp	r0, #1
   10a98:	mov	r4, r0
   10a9c:	beq	10b20 <rb_setup_ssl_server+0x2ac>
   10aa0:	ldr	r1, [pc, #448]	; 10c68 <rb_setup_ssl_server+0x3f4>
   10aa4:	ldr	r0, [pc, #448]	; 10c6c <rb_setup_ssl_server+0x3f8>
   10aa8:	add	r1, pc, r1
   10aac:	add	r0, pc, r0
   10ab0:	add	r1, r1, #440	; 0x1b8
   10ab4:	bl	491c <rb_lib_log@plt>
   10ab8:	mov	r0, r8
   10abc:	bl	4460 <SSL_CTX_free@plt>
   10ac0:	mov	r4, #0
   10ac4:	b	10924 <rb_setup_ssl_server+0xb0>
   10ac8:	mov	r5, r0
   10acc:	bl	4400 <ERR_get_error@plt>
   10ad0:	cmp	r0, #0
   10ad4:	bne	10ac8 <rb_setup_ssl_server+0x254>
   10ad8:	ldr	r3, [pc, #400]	; 10c70 <rb_setup_ssl_server+0x3fc>
   10adc:	mov	r0, r5
   10ae0:	add	r3, pc, r3
   10ae4:	mov	r1, r3
   10ae8:	mov	r2, #512	; 0x200
   10aec:	mov	r5, r3
   10af0:	bl	45a4 <ERR_error_string_n@plt>
   10af4:	ldr	r1, [pc, #376]	; 10c74 <rb_setup_ssl_server+0x400>
   10af8:	ldr	r0, [pc, #376]	; 10c78 <rb_setup_ssl_server+0x404>
   10afc:	add	r1, pc, r1
   10b00:	mov	r3, r5
   10b04:	mov	r2, r9
   10b08:	add	r1, r1, #440	; 0x1b8
   10b0c:	add	r0, pc, r0
   10b10:	bl	491c <rb_lib_log@plt>
   10b14:	mov	r0, r6
   10b18:	bl	4580 <fclose@plt>
   10b1c:	b	10a88 <rb_setup_ssl_server+0x214>
   10b20:	mov	r3, #0
   10b24:	mov	r2, r3
   10b28:	mov	r1, #44	; 0x2c
   10b2c:	mov	r0, r8
   10b30:	bl	4670 <SSL_CTX_ctrl@plt>
   10b34:	ldr	r2, [pc, #320]	; 10c7c <rb_setup_ssl_server+0x408>
   10b38:	mov	r1, #5
   10b3c:	add	r2, pc, r2
   10b40:	mov	r0, r8
   10b44:	bl	4d18 <SSL_CTX_set_verify@plt>
   10b48:	mov	r1, #2048	; 0x800
   10b4c:	mov	r0, r8
   10b50:	bl	4514 <SSL_CTX_clear_options@plt>
   10b54:	mov	r1, #67108864	; 0x4000000
   10b58:	mov	r0, r8
   10b5c:	bl	4850 <SSL_CTX_set_options@plt>
   10b60:	mov	r1, #16384	; 0x4000
   10b64:	mov	r0, r8
   10b68:	bl	4850 <SSL_CTX_set_options@plt>
   10b6c:	mov	r1, #4194304	; 0x400000
   10b70:	mov	r0, r8
   10b74:	bl	4850 <SSL_CTX_set_options@plt>
   10b78:	mov	r1, #0
   10b7c:	mov	r0, r8
   10b80:	bl	4850 <SSL_CTX_set_options@plt>
   10b84:	mov	r1, #0
   10b88:	mov	r0, r8
   10b8c:	bl	4850 <SSL_CTX_set_options@plt>
   10b90:	ldr	r3, [pc, #232]	; 10c80 <rb_setup_ssl_server+0x40c>
   10b94:	mov	r2, #0
   10b98:	add	r3, pc, r3
   10b9c:	mov	r1, #92	; 0x5c
   10ba0:	mov	r0, r8
   10ba4:	bl	4670 <SSL_CTX_ctrl@plt>
   10ba8:	ldr	r3, [pc, #212]	; 10c84 <rb_setup_ssl_server+0x410>
   10bac:	add	r3, pc, r3
   10bb0:	ldr	r0, [r3, #512]	; 0x200
   10bb4:	cmp	r0, #0
   10bb8:	beq	10bc0 <rb_setup_ssl_server+0x34c>
   10bbc:	bl	4460 <SSL_CTX_free@plt>
   10bc0:	ldr	r3, [pc, #192]	; 10c88 <rb_setup_ssl_server+0x414>
   10bc4:	ldr	r1, [pc, #192]	; 10c8c <rb_setup_ssl_server+0x418>
   10bc8:	ldr	r0, [pc, #192]	; 10c90 <rb_setup_ssl_server+0x41c>
   10bcc:	add	r3, pc, r3
   10bd0:	add	r1, pc, r1
   10bd4:	add	r0, pc, r0
   10bd8:	add	r1, r1, #440	; 0x1b8
   10bdc:	str	r8, [r3, #512]	; 0x200
   10be0:	bl	491c <rb_lib_log@plt>
   10be4:	b	10924 <rb_setup_ssl_server+0xb0>
   10be8:	ldr	r1, [pc, #164]	; 10c94 <rb_setup_ssl_server+0x420>
   10bec:	ldr	r0, [pc, #164]	; 10c98 <rb_setup_ssl_server+0x424>
   10bf0:	add	r1, pc, r1
   10bf4:	add	r0, pc, r0
   10bf8:	add	r1, r1, #440	; 0x1b8
   10bfc:	bl	491c <rb_lib_log@plt>
   10c00:	b	10a88 <rb_setup_ssl_server+0x214>
   10c04:	bl	4ce8 <__errno_location@plt>
   10c08:	ldr	r0, [r0]
   10c0c:	bl	43a0 <strerror@plt>
   10c10:	ldr	r1, [pc, #132]	; 10c9c <rb_setup_ssl_server+0x428>
   10c14:	mov	r2, r9
   10c18:	add	r1, pc, r1
   10c1c:	add	r1, r1, #440	; 0x1b8
   10c20:	mov	r3, r0
   10c24:	ldr	r0, [pc, #116]	; 10ca0 <rb_setup_ssl_server+0x42c>
   10c28:	add	r0, pc, r0
   10c2c:	bl	491c <rb_lib_log@plt>
   10c30:	b	10a88 <rb_setup_ssl_server+0x214>
   10c34:	.word	0x0002f128
   10c38:	.word	0x0000a954
   10c3c:	.word	0x0000abc0
   10c40:	.word	0x0002f0c8
   10c44:	.word	0x0000a8f4
   10c48:	.word	0x0000ab44
   10c4c:	.word	0x0000a8d0
   10c50:	.word	0x0002f048
   10c54:	.word	0x0000a874
   10c58:	.word	0x0000ab08
   10c5c:	.word	0x0000a848
   10c60:	.word	0x0000aa7c
   10c64:	.word	0x0000b118
   10c68:	.word	0x0000a7b0
   10c6c:	.word	0x0000aadc
   10c70:	.word	0x0002ef30
   10c74:	.word	0x0000a75c
   10c78:	.word	0x0000aa58
   10c7c:	.word	0xfffff70c
   10c80:	.word	0x0001c8c8
   10c84:	.word	0x0002ee64
   10c88:	.word	0x0002ee44
   10c8c:	.word	0x0000a688
   10c90:	.word	0x0000a9f4
   10c94:	.word	0x0000a668
   10c98:	.word	0x0000a934
   10c9c:	.word	0x0000a640
   10ca0:	.word	0x0000a924

00010ca4 <rb_init_prng>:
   10ca4:	push	{r4, r5, r6, lr}
   10ca8:	mov	r6, r0
   10cac:	mov	r4, r1
   10cb0:	bl	4400 <ERR_get_error@plt>
   10cb4:	subs	r5, r0, #0
   10cb8:	bne	10cb0 <rb_init_prng+0xc>
   10cbc:	cmp	r4, #0
   10cc0:	beq	10d28 <rb_init_prng+0x84>
   10cc4:	bl	4bbc <RAND_status@plt>
   10cc8:	cmp	r0, #1
   10ccc:	mov	r4, r0
   10cd0:	bne	10cdc <rb_init_prng+0x38>
   10cd4:	b	10d50 <rb_init_prng+0xac>
   10cd8:	mov	r5, r4
   10cdc:	bl	4400 <ERR_get_error@plt>
   10ce0:	subs	r4, r0, #0
   10ce4:	bne	10cd8 <rb_init_prng+0x34>
   10ce8:	ldr	r3, [pc, #204]	; 10dbc <rb_init_prng+0x118>
   10cec:	mov	r0, r5
   10cf0:	add	r3, pc, r3
   10cf4:	mov	r1, r3
   10cf8:	mov	r2, #512	; 0x200
   10cfc:	mov	r5, r3
   10d00:	bl	45a4 <ERR_error_string_n@plt>
   10d04:	ldr	r1, [pc, #180]	; 10dc0 <rb_init_prng+0x11c>
   10d08:	ldr	r0, [pc, #180]	; 10dc4 <rb_init_prng+0x120>
   10d0c:	add	r1, pc, r1
   10d10:	mov	r2, r5
   10d14:	add	r1, r1, #460	; 0x1cc
   10d18:	add	r0, pc, r0
   10d1c:	bl	491c <rb_lib_log@plt>
   10d20:	mov	r0, r4
   10d24:	pop	{r4, r5, r6, pc}
   10d28:	mov	r0, r6
   10d2c:	mvn	r1, #0
   10d30:	bl	4430 <RAND_load_file@plt>
   10d34:	cmp	r0, #0
   10d38:	movlt	r4, r5
   10d3c:	blt	10d74 <rb_init_prng+0xd0>
   10d40:	bl	4bbc <RAND_status@plt>
   10d44:	cmp	r0, #1
   10d48:	mov	r4, r0
   10d4c:	bne	10cdc <rb_init_prng+0x38>
   10d50:	ldr	r1, [pc, #112]	; 10dc8 <rb_init_prng+0x124>
   10d54:	ldr	r0, [pc, #112]	; 10dcc <rb_init_prng+0x128>
   10d58:	add	r1, pc, r1
   10d5c:	add	r0, pc, r0
   10d60:	add	r1, r1, #460	; 0x1cc
   10d64:	bl	491c <rb_lib_log@plt>
   10d68:	mov	r0, r4
   10d6c:	pop	{r4, r5, r6, pc}
   10d70:	mov	r4, r0
   10d74:	bl	4400 <ERR_get_error@plt>
   10d78:	cmp	r0, #0
   10d7c:	bne	10d70 <rb_init_prng+0xcc>
   10d80:	ldr	r3, [pc, #72]	; 10dd0 <rb_init_prng+0x12c>
   10d84:	mov	r0, r4
   10d88:	add	r3, pc, r3
   10d8c:	mov	r1, r3
   10d90:	mov	r2, #512	; 0x200
   10d94:	mov	r4, r3
   10d98:	bl	45a4 <ERR_error_string_n@plt>
   10d9c:	ldr	r1, [pc, #48]	; 10dd4 <rb_init_prng+0x130>
   10da0:	ldr	r0, [pc, #48]	; 10dd8 <rb_init_prng+0x134>
   10da4:	add	r1, pc, r1
   10da8:	mov	r2, r4
   10dac:	add	r1, r1, #460	; 0x1cc
   10db0:	add	r0, pc, r0
   10db4:	bl	491c <rb_lib_log@plt>
   10db8:	b	10cc4 <rb_init_prng+0x20>
   10dbc:	.word	0x0002ed20
   10dc0:	.word	0x0000a54c
   10dc4:	.word	0x0000a8ec
   10dc8:	.word	0x0000a500
   10dcc:	.word	0x0000a8bc
   10dd0:	.word	0x0002ec88
   10dd4:	.word	0x0000a4b4
   10dd8:	.word	0x0000a83c

00010ddc <rb_get_random>:
   10ddc:	push	{r4, r5, r6, lr}
   10de0:	mov	r4, r0
   10de4:	mov	r6, r1
   10de8:	bl	4400 <ERR_get_error@plt>
   10dec:	subs	r5, r0, #0
   10df0:	bne	10de8 <rb_get_random+0xc>
   10df4:	mov	r1, r6
   10df8:	mov	r0, r4
   10dfc:	bl	4ae4 <RAND_bytes@plt>
   10e00:	cmp	r0, #1
   10e04:	bne	10e10 <rb_get_random+0x34>
   10e08:	b	10e5c <rb_get_random+0x80>
   10e0c:	mov	r5, r4
   10e10:	bl	4400 <ERR_get_error@plt>
   10e14:	subs	r4, r0, #0
   10e18:	bne	10e0c <rb_get_random+0x30>
   10e1c:	ldr	r3, [pc, #60]	; 10e60 <rb_get_random+0x84>
   10e20:	mov	r0, r5
   10e24:	add	r3, pc, r3
   10e28:	mov	r1, r3
   10e2c:	mov	r2, #512	; 0x200
   10e30:	mov	r5, r3
   10e34:	bl	45a4 <ERR_error_string_n@plt>
   10e38:	ldr	r1, [pc, #36]	; 10e64 <rb_get_random+0x88>
   10e3c:	ldr	r0, [pc, #36]	; 10e68 <rb_get_random+0x8c>
   10e40:	add	r1, pc, r1
   10e44:	mov	r2, r5
   10e48:	add	r1, r1, #476	; 0x1dc
   10e4c:	add	r0, pc, r0
   10e50:	bl	491c <rb_lib_log@plt>
   10e54:	mov	r0, r4
   10e58:	pop	{r4, r5, r6, pc}
   10e5c:	pop	{r4, r5, r6, pc}
   10e60:	.word	0x0002ebec
   10e64:	.word	0x0000a418
   10e68:	.word	0x0000a7e4

00010e6c <rb_get_ssl_strerror>:
   10e6c:	push	{r4, lr}
   10e70:	mov	r2, #512	; 0x200
   10e74:	ldr	r4, [pc, #20]	; 10e90 <rb_get_ssl_strerror+0x24>
   10e78:	ldr	r0, [r0, #64]	; 0x40
   10e7c:	add	r4, pc, r4
   10e80:	mov	r1, r4
   10e84:	bl	45a4 <ERR_error_string_n@plt>
   10e88:	mov	r0, r4
   10e8c:	pop	{r4, pc}
   10e90:	.word	0x0002eb94

00010e94 <rb_get_ssl_certfp>:
   10e94:	push	{r4, r5, r6, r7, r8, lr}
   10e98:	subs	r4, r0, #0
   10e9c:	beq	10f0c <rb_get_ssl_certfp+0x78>
   10ea0:	ldr	r0, [r4, #56]	; 0x38
   10ea4:	cmp	r0, #0
   10ea8:	beq	10f0c <rb_get_ssl_certfp+0x78>
   10eac:	mov	r6, r2
   10eb0:	mov	r5, r1
   10eb4:	bl	4a24 <SSL_get_peer_certificate@plt>
   10eb8:	subs	r7, r0, #0
   10ebc:	beq	10f0c <rb_get_ssl_certfp+0x78>
   10ec0:	ldr	r0, [r4, #56]	; 0x38
   10ec4:	bl	4a48 <SSL_get_verify_result@plt>
   10ec8:	cmp	r0, #27
   10ecc:	movhi	r4, #0
   10ed0:	bls	10ee4 <rb_get_ssl_certfp+0x50>
   10ed4:	mov	r0, r7
   10ed8:	bl	4c64 <X509_free@plt>
   10edc:	mov	r0, r4
   10ee0:	pop	{r4, r5, r6, r7, r8, pc}
   10ee4:	mov	r3, #1
   10ee8:	ldr	r4, [pc, #40]	; 10f18 <rb_get_ssl_certfp+0x84>
   10eec:	ands	r4, r4, r3, lsl r0
   10ef0:	beq	10ed4 <rb_get_ssl_certfp+0x40>
   10ef4:	mov	r2, r6
   10ef8:	mov	r1, r5
   10efc:	mov	r0, r7
   10f00:	bl	10288 <make_certfp>
   10f04:	mov	r4, r0
   10f08:	b	10ed4 <rb_get_ssl_certfp+0x40>
   10f0c:	mov	r4, #0
   10f10:	mov	r0, r4
   10f14:	pop	{r4, r5, r6, r7, r8, pc}
   10f18:	.word	0x083c0001

00010f1c <rb_get_ssl_certfp_file>:
   10f1c:	push	{r4, r5, r6, r7, r8, lr}
   10f20:	mov	r4, r1
   10f24:	ldr	r1, [pc, #104]	; 10f94 <rb_get_ssl_certfp_file+0x78>
   10f28:	mov	r7, r2
   10f2c:	add	r1, pc, r1
   10f30:	bl	4610 <fopen@plt>
   10f34:	subs	r5, r0, #0
   10f38:	beq	10f8c <rb_get_ssl_certfp_file+0x70>
   10f3c:	mov	r3, #0
   10f40:	mov	r2, r3
   10f44:	mov	r1, r3
   10f48:	bl	4814 <PEM_read_X509@plt>
   10f4c:	subs	r6, r0, #0
   10f50:	beq	10f7c <rb_get_ssl_certfp_file+0x60>
   10f54:	mov	r1, r4
   10f58:	mov	r2, r7
   10f5c:	bl	10288 <make_certfp>
   10f60:	mov	r4, r0
   10f64:	mov	r0, r6
   10f68:	bl	4c64 <X509_free@plt>
   10f6c:	mov	r0, r5
   10f70:	bl	4580 <fclose@plt>
   10f74:	mov	r0, r4
   10f78:	pop	{r4, r5, r6, r7, r8, pc}
   10f7c:	mov	r0, r5
   10f80:	bl	4580 <fclose@plt>
   10f84:	mov	r4, r6
   10f88:	b	10f74 <rb_get_ssl_certfp_file+0x58>
   10f8c:	mvn	r4, #0
   10f90:	b	10f74 <rb_get_ssl_certfp_file+0x58>
   10f94:	.word	0x0000ac24

00010f98 <rb_get_ssl_info>:
   10f98:	push	{r4, r5, r6, r7, lr}
   10f9c:	sub	sp, sp, #20
   10fa0:	mov	r5, r0
   10fa4:	mov	r6, r1
   10fa8:	bl	46d0 <OpenSSL_version_num@plt>
   10fac:	ldr	r4, [pc, #116]	; 11028 <rb_get_ssl_info+0x90>
   10fb0:	cmp	r0, r4
   10fb4:	beq	10ffc <rb_get_ssl_info+0x64>
   10fb8:	bl	46d0 <OpenSSL_version_num@plt>
   10fbc:	mov	r7, r0
   10fc0:	mov	r0, #0
   10fc4:	bl	4c94 <OpenSSL_version@plt>
   10fc8:	ldr	r2, [pc, #92]	; 1102c <rb_get_ssl_info+0x94>
   10fcc:	str	r7, [sp, #4]
   10fd0:	add	r2, pc, r2
   10fd4:	str	r2, [sp]
   10fd8:	ldr	r2, [pc, #80]	; 11030 <rb_get_ssl_info+0x98>
   10fdc:	mov	r3, r4
   10fe0:	mov	r1, r6
   10fe4:	add	r2, pc, r2
   10fe8:	str	r0, [sp, #8]
   10fec:	mov	r0, r5
   10ff0:	bl	4bb0 <snprintf@plt>
   10ff4:	add	sp, sp, #20
   10ff8:	pop	{r4, r5, r6, r7, pc}
   10ffc:	ldr	r2, [pc, #48]	; 11034 <rb_get_ssl_info+0x9c>
   11000:	mov	r3, r0
   11004:	add	r2, pc, r2
   11008:	str	r2, [sp]
   1100c:	ldr	r2, [pc, #36]	; 11038 <rb_get_ssl_info+0xa0>
   11010:	mov	r1, r6
   11014:	mov	r0, r5
   11018:	add	r2, pc, r2
   1101c:	bl	4bb0 <snprintf@plt>
   11020:	add	sp, sp, #20
   11024:	pop	{r4, r5, r6, r7, pc}
   11028:	.word	0x1010104f
   1102c:	.word	0x0000a698
   11030:	.word	0x0000a6a0
   11034:	.word	0x0000a664
   11038:	.word	0x0000a62c

0001103c <rb_ssl_get_cipher>:
   1103c:	push	{r4, r5, lr}
   11040:	subs	r4, r0, #0
   11044:	sub	sp, sp, #12
   11048:	beq	110a0 <rb_ssl_get_cipher+0x64>
   1104c:	ldr	r0, [r4, #56]	; 0x38
   11050:	cmp	r0, #0
   11054:	beq	11098 <rb_ssl_get_cipher+0x5c>
   11058:	bl	4cb8 <SSL_get_version@plt>
   1105c:	mov	r5, r0
   11060:	ldr	r0, [r4, #56]	; 0x38
   11064:	bl	4520 <SSL_get_current_cipher@plt>
   11068:	bl	46b8 <SSL_CIPHER_get_name@plt>
   1106c:	ldr	r4, [pc, #52]	; 110a8 <rb_ssl_get_cipher+0x6c>
   11070:	ldr	r2, [pc, #52]	; 110ac <rb_ssl_get_cipher+0x70>
   11074:	add	r4, pc, r4
   11078:	add	r4, r4, #516	; 0x204
   1107c:	mov	r3, r5
   11080:	add	r2, pc, r2
   11084:	mov	r1, #512	; 0x200
   11088:	str	r0, [sp]
   1108c:	mov	r0, r4
   11090:	bl	4bb0 <snprintf@plt>
   11094:	mov	r0, r4
   11098:	add	sp, sp, #12
   1109c:	pop	{r4, r5, pc}
   110a0:	mov	r0, r4
   110a4:	b	11098 <rb_ssl_get_cipher+0x5c>
   110a8:	.word	0x0002e99c
   110ac:	.word	0x0000a638

000110b0 <rb_ssl_read>:
   110b0:	push	{r4, r5, r6, r7, r8, lr}
   110b4:	mov	r5, r0
   110b8:	mov	r6, r1
   110bc:	mov	r7, r2
   110c0:	bl	4400 <ERR_get_error@plt>
   110c4:	subs	r4, r0, #0
   110c8:	bne	110c0 <rb_ssl_read+0x10>
   110cc:	mov	r1, r6
   110d0:	mov	r2, r7
   110d4:	ldr	r0, [r5, #56]	; 0x38
   110d8:	bl	4778 <SSL_read@plt>
   110dc:	subs	r1, r0, #0
   110e0:	blt	110ec <rb_ssl_read+0x3c>
   110e4:	mov	r0, r1
   110e8:	pop	{r4, r5, r6, r7, r8, pc}
   110ec:	ldr	r0, [r5, #56]	; 0x38
   110f0:	bl	4cac <SSL_get_error@plt>
   110f4:	sub	r0, r0, #2
   110f8:	cmp	r0, #4
   110fc:	addls	pc, pc, r0, lsl #2
   11100:	b	1111c <rb_ssl_read+0x6c>
   11104:	b	11188 <rb_ssl_read+0xd8>
   11108:	b	11174 <rb_ssl_read+0xc4>
   1110c:	b	1111c <rb_ssl_read+0x6c>
   11110:	b	11140 <rb_ssl_read+0x90>
   11114:	b	1116c <rb_ssl_read+0xbc>
   11118:	mov	r4, r0
   1111c:	bl	4400 <ERR_get_error@plt>
   11120:	cmp	r0, #0
   11124:	bne	11118 <rb_ssl_read+0x68>
   11128:	cmp	r4, #0
   1112c:	str	r4, [r5, #64]	; 0x40
   11130:	bne	11158 <rb_ssl_read+0xa8>
   11134:	mvn	r1, #0
   11138:	b	110e4 <rb_ssl_read+0x34>
   1113c:	mov	r4, r0
   11140:	bl	4400 <ERR_get_error@plt>
   11144:	cmp	r0, #0
   11148:	bne	1113c <rb_ssl_read+0x8c>
   1114c:	cmp	r4, #0
   11150:	str	r4, [r5, #64]	; 0x40
   11154:	beq	11134 <rb_ssl_read+0x84>
   11158:	bl	4ce8 <__errno_location@plt>
   1115c:	mov	r3, #5
   11160:	mvn	r1, #1
   11164:	str	r3, [r0]
   11168:	b	110e4 <rb_ssl_read+0x34>
   1116c:	mov	r1, #0
   11170:	b	110e4 <rb_ssl_read+0x34>
   11174:	bl	4ce8 <__errno_location@plt>
   11178:	mov	r3, #11
   1117c:	mvn	r1, #3
   11180:	str	r3, [r0]
   11184:	b	110e4 <rb_ssl_read+0x34>
   11188:	bl	4ce8 <__errno_location@plt>
   1118c:	mov	r3, #11
   11190:	mvn	r1, #2
   11194:	str	r3, [r0]
   11198:	b	110e4 <rb_ssl_read+0x34>

0001119c <rb_ssl_write>:
   1119c:	push	{r4, r5, r6, r7, r8, lr}
   111a0:	mov	r5, r0
   111a4:	mov	r6, r1
   111a8:	mov	r7, r2
   111ac:	bl	4400 <ERR_get_error@plt>
   111b0:	subs	r4, r0, #0
   111b4:	bne	111ac <rb_ssl_write+0x10>
   111b8:	mov	r1, r6
   111bc:	mov	r2, r7
   111c0:	ldr	r0, [r5, #56]	; 0x38
   111c4:	bl	45f8 <SSL_write@plt>
   111c8:	subs	r1, r0, #0
   111cc:	blt	111d8 <rb_ssl_write+0x3c>
   111d0:	mov	r0, r1
   111d4:	pop	{r4, r5, r6, r7, r8, pc}
   111d8:	ldr	r0, [r5, #56]	; 0x38
   111dc:	bl	4cac <SSL_get_error@plt>
   111e0:	sub	r0, r0, #2
   111e4:	cmp	r0, #4
   111e8:	addls	pc, pc, r0, lsl #2
   111ec:	b	11208 <rb_ssl_write+0x6c>
   111f0:	b	11274 <rb_ssl_write+0xd8>
   111f4:	b	11260 <rb_ssl_write+0xc4>
   111f8:	b	11208 <rb_ssl_write+0x6c>
   111fc:	b	1122c <rb_ssl_write+0x90>
   11200:	b	11258 <rb_ssl_write+0xbc>
   11204:	mov	r4, r0
   11208:	bl	4400 <ERR_get_error@plt>
   1120c:	cmp	r0, #0
   11210:	bne	11204 <rb_ssl_write+0x68>
   11214:	cmp	r4, #0
   11218:	str	r4, [r5, #64]	; 0x40
   1121c:	bne	11244 <rb_ssl_write+0xa8>
   11220:	mvn	r1, #0
   11224:	b	111d0 <rb_ssl_write+0x34>
   11228:	mov	r4, r0
   1122c:	bl	4400 <ERR_get_error@plt>
   11230:	cmp	r0, #0
   11234:	bne	11228 <rb_ssl_write+0x8c>
   11238:	cmp	r4, #0
   1123c:	str	r4, [r5, #64]	; 0x40
   11240:	beq	11220 <rb_ssl_write+0x84>
   11244:	bl	4ce8 <__errno_location@plt>
   11248:	mov	r3, #5
   1124c:	mvn	r1, #1
   11250:	str	r3, [r0]
   11254:	b	111d0 <rb_ssl_write+0x34>
   11258:	mov	r1, #0
   1125c:	b	111d0 <rb_ssl_write+0x34>
   11260:	bl	4ce8 <__errno_location@plt>
   11264:	mov	r3, #11
   11268:	mvn	r1, #3
   1126c:	str	r3, [r0]
   11270:	b	111d0 <rb_ssl_write+0x34>
   11274:	bl	4ce8 <__errno_location@plt>
   11278:	mov	r3, #11
   1127c:	mvn	r1, #2
   11280:	str	r3, [r0]
   11284:	b	111d0 <rb_ssl_write+0x34>

00011288 <rb_supports_ssl>:
   11288:	mov	r0, #1
   1128c:	bx	lr

00011290 <rb_ssl_handshake_count>:
   11290:	ldr	r0, [r0, #60]	; 0x3c
   11294:	bx	lr

00011298 <rb_ssl_clear_handshake_count>:
   11298:	mov	r3, #0
   1129c:	str	r3, [r0, #60]	; 0x3c
   112a0:	bx	lr

000112a4 <rb_ssl_start_accepted>:
   112a4:	push	{r4, r5, r6, r7, r8, lr}
   112a8:	mov	r5, r0
   112ac:	ldrb	ip, [r0, #17]
   112b0:	mov	r8, r1
   112b4:	mov	r0, #1
   112b8:	orr	ip, ip, #32
   112bc:	mov	r1, #144	; 0x90
   112c0:	strb	ip, [r5, #17]
   112c4:	mov	r7, r2
   112c8:	mov	r6, r3
   112cc:	bl	45ec <calloc@plt>
   112d0:	subs	r1, r0, #0
   112d4:	beq	113c4 <rb_ssl_start_accepted+0x120>
   112d8:	mov	r4, #0
   112dc:	str	r1, [r5, #52]	; 0x34
   112e0:	str	r8, [r1, #132]	; 0x84
   112e4:	str	r7, [r1, #140]	; 0x8c
   112e8:	str	r4, [r1, #128]	; 0x80
   112ec:	mov	r2, #128	; 0x80
   112f0:	mov	r1, r4
   112f4:	bl	4628 <memset@plt>
   112f8:	ldr	r2, [pc, #200]	; 113c8 <rb_ssl_start_accepted+0x124>
   112fc:	mov	r3, r4
   11300:	mov	r1, r6
   11304:	add	r2, pc, r2
   11308:	mov	r0, r5
   1130c:	bl	43e8 <rb_settimeout@plt>
   11310:	bl	4400 <ERR_get_error@plt>
   11314:	subs	r4, r0, #0
   11318:	bne	11310 <rb_ssl_start_accepted+0x6c>
   1131c:	ldr	r3, [pc, #168]	; 113cc <rb_ssl_start_accepted+0x128>
   11320:	add	r3, pc, r3
   11324:	ldr	r0, [r3, #512]	; 0x200
   11328:	bl	4730 <SSL_new@plt>
   1132c:	cmp	r0, #0
   11330:	str	r0, [r5, #56]	; 0x38
   11334:	beq	11368 <rb_ssl_start_accepted+0xc4>
   11338:	bl	49d0 <SSL_set_accept_state@plt>
   1133c:	mov	r0, r5
   11340:	ldr	r4, [r5, #56]	; 0x38
   11344:	bl	44e4 <rb_get_fd@plt>
   11348:	mov	r1, r0
   1134c:	mov	r0, r4
   11350:	bl	4664 <SSL_set_fd@plt>
   11354:	mov	r0, r5
   11358:	mov	r1, #0
   1135c:	pop	{r4, r5, r6, r7, r8, lr}
   11360:	b	10410 <rb_ssl_accept_common>
   11364:	mov	r4, r0
   11368:	bl	4400 <ERR_get_error@plt>
   1136c:	cmp	r0, #0
   11370:	bne	11364 <rb_ssl_start_accepted+0xc0>
   11374:	ldr	r3, [pc, #84]	; 113d0 <rb_ssl_start_accepted+0x12c>
   11378:	mov	r0, r4
   1137c:	add	r3, pc, r3
   11380:	mov	r1, r3
   11384:	mov	r2, #512	; 0x200
   11388:	mov	r4, r3
   1138c:	bl	45a4 <ERR_error_string_n@plt>
   11390:	ldr	r1, [pc, #60]	; 113d4 <rb_ssl_start_accepted+0x130>
   11394:	ldr	r0, [pc, #60]	; 113d8 <rb_ssl_start_accepted+0x134>
   11398:	add	r1, pc, r1
   1139c:	mov	r2, r4
   113a0:	add	r1, r1, #12
   113a4:	add	r0, pc, r0
   113a8:	bl	491c <rb_lib_log@plt>
   113ac:	mov	r0, r5
   113b0:	bl	4868 <rb_close@plt>
   113b4:	mov	r0, r5
   113b8:	mov	r1, #0
   113bc:	pop	{r4, r5, r6, r7, r8, lr}
   113c0:	b	10410 <rb_ssl_accept_common>
   113c4:	bl	4988 <rb_outofmemory@plt>
   113c8:	.word	0xffffef4c
   113cc:	.word	0x0002e6f0
   113d0:	.word	0x0002e694
   113d4:	.word	0x00009ec0
   113d8:	.word	0x0000a0bc

000113dc <rb_ssl_accept_setup>:
   113dc:	push	{r4, r5, r6, r7, r8, lr}
   113e0:	mov	r5, r1
   113e4:	ldrb	ip, [r1, #17]
   113e8:	mov	r8, r0
   113ec:	mov	r1, #144	; 0x90
   113f0:	orr	ip, ip, #32
   113f4:	mov	r0, #1
   113f8:	strb	ip, [r5, #17]
   113fc:	mov	r7, r2
   11400:	mov	r6, r3
   11404:	bl	45ec <calloc@plt>
   11408:	subs	r4, r0, #0
   1140c:	beq	11514 <rb_ssl_accept_setup+0x138>
   11410:	str	r4, [r5, #52]	; 0x34
   11414:	ldr	r3, [r8, #52]	; 0x34
   11418:	mov	r2, #128	; 0x80
   1141c:	ldr	r1, [r3, #132]	; 0x84
   11420:	ldr	r3, [r3, #140]	; 0x8c
   11424:	str	r1, [r4, #132]	; 0x84
   11428:	str	r3, [r4, #140]	; 0x8c
   1142c:	mov	r1, #0
   11430:	str	r6, [r4, #128]	; 0x80
   11434:	bl	4628 <memset@plt>
   11438:	mov	r2, r6
   1143c:	mov	r1, r7
   11440:	mov	r0, r4
   11444:	bl	4808 <memcpy@plt>
   11448:	ldr	r2, [pc, #200]	; 11518 <rb_ssl_accept_setup+0x13c>
   1144c:	mov	r3, #0
   11450:	add	r2, pc, r2
   11454:	mov	r1, #10
   11458:	mov	r0, r5
   1145c:	bl	43e8 <rb_settimeout@plt>
   11460:	bl	4400 <ERR_get_error@plt>
   11464:	subs	r4, r0, #0
   11468:	bne	11460 <rb_ssl_accept_setup+0x84>
   1146c:	ldr	r3, [pc, #168]	; 1151c <rb_ssl_accept_setup+0x140>
   11470:	add	r3, pc, r3
   11474:	ldr	r0, [r3, #512]	; 0x200
   11478:	bl	4730 <SSL_new@plt>
   1147c:	cmp	r0, #0
   11480:	str	r0, [r5, #56]	; 0x38
   11484:	beq	114b8 <rb_ssl_accept_setup+0xdc>
   11488:	bl	49d0 <SSL_set_accept_state@plt>
   1148c:	mov	r0, r5
   11490:	ldr	r4, [r5, #56]	; 0x38
   11494:	bl	44e4 <rb_get_fd@plt>
   11498:	mov	r1, r0
   1149c:	mov	r0, r4
   114a0:	bl	4664 <SSL_set_fd@plt>
   114a4:	mov	r0, r5
   114a8:	mov	r1, #0
   114ac:	pop	{r4, r5, r6, r7, r8, lr}
   114b0:	b	10410 <rb_ssl_accept_common>
   114b4:	mov	r4, r0
   114b8:	bl	4400 <ERR_get_error@plt>
   114bc:	cmp	r0, #0
   114c0:	bne	114b4 <rb_ssl_accept_setup+0xd8>
   114c4:	ldr	r3, [pc, #84]	; 11520 <rb_ssl_accept_setup+0x144>
   114c8:	mov	r0, r4
   114cc:	add	r3, pc, r3
   114d0:	mov	r1, r3
   114d4:	mov	r2, #512	; 0x200
   114d8:	mov	r4, r3
   114dc:	bl	45a4 <ERR_error_string_n@plt>
   114e0:	ldr	r1, [pc, #60]	; 11524 <rb_ssl_accept_setup+0x148>
   114e4:	ldr	r0, [pc, #60]	; 11528 <rb_ssl_accept_setup+0x14c>
   114e8:	add	r1, pc, r1
   114ec:	mov	r2, r4
   114f0:	add	r1, r1, #12
   114f4:	add	r0, pc, r0
   114f8:	bl	491c <rb_lib_log@plt>
   114fc:	mov	r0, r5
   11500:	bl	4868 <rb_close@plt>
   11504:	mov	r0, r5
   11508:	mov	r1, #0
   1150c:	pop	{r4, r5, r6, r7, r8, lr}
   11510:	b	10410 <rb_ssl_accept_common>
   11514:	bl	4988 <rb_outofmemory@plt>
   11518:	.word	0xffffee00
   1151c:	.word	0x0002e5a0
   11520:	.word	0x0002e544
   11524:	.word	0x00009d70
   11528:	.word	0x00009f6c

0001152c <rb_ssl_listen>:
   1152c:	push	{r4, lr}
   11530:	mov	r4, r0
   11534:	bl	4bf8 <rb_listen@plt>
   11538:	mov	r3, #52	; 0x34
   1153c:	strb	r3, [r4, #17]
   11540:	pop	{r4, pc}

00011544 <rb_connect_tcp_ssl>:
   11544:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11548:	subs	r4, r0, #0
   1154c:	ldr	r9, [sp, #32]
   11550:	ldr	r8, [sp, #36]	; 0x24
   11554:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11558:	mov	r5, r1
   1155c:	mov	r0, #1
   11560:	mov	r1, #12
   11564:	mov	r7, r3
   11568:	mov	r6, r2
   1156c:	bl	45ec <calloc@plt>
   11570:	cmp	r0, #0
   11574:	beq	115a4 <rb_connect_tcp_ssl+0x60>
   11578:	ldr	r3, [pc, #40]	; 115a8 <rb_connect_tcp_ssl+0x64>
   1157c:	stm	r0, {r7, r9}
   11580:	str	r8, [r0, #8]
   11584:	mov	r2, r6
   11588:	str	r0, [sp, #32]
   1158c:	str	r8, [sp, #36]	; 0x24
   11590:	mov	r1, r5
   11594:	mov	r0, r4
   11598:	add	r3, pc, r3
   1159c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   115a0:	b	4424 <rb_connect_tcp@plt>
   115a4:	bl	4988 <rb_outofmemory@plt>
   115a8:	.word	0xfffff124

000115ac <rb_ssl_start_connected>:
   115ac:	push	{r4, r5, r6, r7, r8, lr}
   115b0:	subs	r5, r0, #0
   115b4:	popeq	{r4, r5, r6, r7, r8, pc}
   115b8:	mov	r8, r1
   115bc:	mov	r0, #1
   115c0:	mov	r1, #12
   115c4:	mov	r4, r3
   115c8:	mov	r7, r2
   115cc:	bl	45ec <calloc@plt>
   115d0:	subs	r6, r0, #0
   115d4:	beq	116d0 <rb_ssl_start_connected+0x124>
   115d8:	str	r7, [r6, #4]
   115dc:	str	r8, [r6]
   115e0:	str	r4, [r6, #8]
   115e4:	mov	r1, #268	; 0x10c
   115e8:	mov	r0, #1
   115ec:	bl	45ec <calloc@plt>
   115f0:	cmp	r0, #0
   115f4:	beq	116d0 <rb_ssl_start_connected+0x124>
   115f8:	ldrb	r3, [r5, #17]
   115fc:	ldr	r2, [pc, #208]	; 116d4 <rb_ssl_start_connected+0x128>
   11600:	str	r0, [r5, #48]	; 0x30
   11604:	orr	r3, r3, #32
   11608:	str	r8, [r0, #260]	; 0x104
   1160c:	str	r7, [r0, #264]	; 0x108
   11610:	strb	r3, [r5, #17]
   11614:	mov	r1, r4
   11618:	mov	r3, r6
   1161c:	add	r2, pc, r2
   11620:	mov	r0, r5
   11624:	bl	43e8 <rb_settimeout@plt>
   11628:	bl	4400 <ERR_get_error@plt>
   1162c:	subs	r4, r0, #0
   11630:	bne	11628 <rb_ssl_start_connected+0x7c>
   11634:	ldr	r3, [pc, #156]	; 116d8 <rb_ssl_start_connected+0x12c>
   11638:	add	r3, pc, r3
   1163c:	ldr	r0, [r3, #512]	; 0x200
   11640:	bl	4730 <SSL_new@plt>
   11644:	cmp	r0, #0
   11648:	str	r0, [r5, #56]	; 0x38
   1164c:	beq	11680 <rb_ssl_start_connected+0xd4>
   11650:	bl	4b68 <SSL_set_connect_state@plt>
   11654:	mov	r0, r5
   11658:	ldr	r4, [r5, #56]	; 0x38
   1165c:	bl	44e4 <rb_get_fd@plt>
   11660:	mov	r1, r0
   11664:	mov	r0, r4
   11668:	bl	4664 <SSL_set_fd@plt>
   1166c:	mov	r1, r6
   11670:	mov	r0, r5
   11674:	pop	{r4, r5, r6, r7, r8, lr}
   11678:	b	10598 <rb_ssl_connect_common>
   1167c:	mov	r4, r0
   11680:	bl	4400 <ERR_get_error@plt>
   11684:	cmp	r0, #0
   11688:	bne	1167c <rb_ssl_start_connected+0xd0>
   1168c:	ldr	r3, [pc, #72]	; 116dc <rb_ssl_start_connected+0x130>
   11690:	mov	r0, r4
   11694:	add	r3, pc, r3
   11698:	mov	r1, r3
   1169c:	mov	r2, #512	; 0x200
   116a0:	mov	r4, r3
   116a4:	bl	45a4 <ERR_error_string_n@plt>
   116a8:	ldr	r1, [pc, #48]	; 116e0 <rb_ssl_start_connected+0x134>
   116ac:	ldr	r0, [pc, #48]	; 116e4 <rb_ssl_start_connected+0x138>
   116b0:	add	r1, pc, r1
   116b4:	mov	r2, r4
   116b8:	add	r1, r1, #12
   116bc:	add	r0, pc, r0
   116c0:	bl	491c <rb_lib_log@plt>
   116c4:	mov	r0, r5
   116c8:	bl	4868 <rb_close@plt>
   116cc:	b	1166c <rb_ssl_start_connected+0xc0>
   116d0:	bl	4988 <rb_outofmemory@plt>
   116d4:	.word	0xffffef48
   116d8:	.word	0x0002e3d8
   116dc:	.word	0x0002e37c
   116e0:	.word	0x00009ba8
   116e4:	.word	0x00009da4

000116e8 <rb_event_add>:
   116e8:	push	{r4, r5, r6, r7, r8, lr}
   116ec:	subs	r5, r3, #0
   116f0:	mov	r6, r0
   116f4:	mov	r7, r1
   116f8:	mov	r8, r2
   116fc:	ble	117e8 <rb_event_add+0x100>
   11700:	mov	r1, #48	; 0x30
   11704:	mov	r0, #1
   11708:	bl	45ec <calloc@plt>
   1170c:	subs	r4, r0, #0
   11710:	beq	117d4 <rb_event_add+0xec>
   11714:	str	r7, [r4, #12]
   11718:	mov	r0, #33	; 0x21
   1171c:	bl	49ac <malloc@plt>
   11720:	subs	r7, r0, #0
   11724:	beq	117d4 <rb_event_add+0xec>
   11728:	mov	r1, r6
   1172c:	mov	r2, #33	; 0x21
   11730:	bl	46a0 <rb_strlcpy@plt>
   11734:	str	r7, [r4, #20]
   11738:	str	r8, [r4, #16]
   1173c:	bl	47f0 <rb_current_time@plt>
   11740:	ldr	r1, [pc, #188]	; 11804 <rb_event_add+0x11c>
   11744:	mov	ip, #0
   11748:	add	r1, pc, r1
   1174c:	str	r5, [r4, #32]
   11750:	ldr	r2, [r1]
   11754:	str	r5, [r4, #24]
   11758:	cmn	r2, #1
   1175c:	movne	r3, #0
   11760:	moveq	r3, #1
   11764:	str	ip, [r4, #44]	; 0x2c
   11768:	str	r4, [r4]
   1176c:	add	r0, r5, r0
   11770:	cmp	r0, r2
   11774:	orrlt	r3, r3, #1
   11778:	ldr	r2, [pc, #136]	; 11808 <rb_event_add+0x120>
   1177c:	cmp	r3, ip
   11780:	add	r2, pc, r2
   11784:	strne	r0, [r1]
   11788:	ldr	r3, [r2]
   1178c:	mov	r1, #0
   11790:	cmp	r3, r1
   11794:	str	r0, [r4, #28]
   11798:	str	r1, [r4, #4]
   1179c:	str	r3, [r4, #8]
   117a0:	strne	r4, [r3, #4]
   117a4:	beq	117d8 <rb_event_add+0xf0>
   117a8:	ldr	r3, [pc, #92]	; 1180c <rb_event_add+0x124>
   117ac:	mov	r1, r5
   117b0:	add	r3, pc, r3
   117b4:	mov	r0, r4
   117b8:	ldr	r2, [r3, #8]
   117bc:	str	r4, [r3]
   117c0:	add	r2, r2, #1
   117c4:	str	r2, [r3, #8]
   117c8:	bl	ed68 <rb_io_sched_event>
   117cc:	mov	r0, r4
   117d0:	pop	{r4, r5, r6, r7, r8, pc}
   117d4:	bl	4988 <rb_outofmemory@plt>
   117d8:	ldr	r3, [r2, #4]
   117dc:	cmp	r3, #0
   117e0:	streq	r4, [r2, #4]
   117e4:	b	117a8 <rb_event_add+0xc0>
   117e8:	mov	r1, r0
   117ec:	ldr	r0, [pc, #28]	; 11810 <rb_event_add+0x128>
   117f0:	mov	r2, r5
   117f4:	add	r0, pc, r0
   117f8:	bl	491c <rb_lib_log@plt>
   117fc:	mov	r5, #1
   11800:	b	11700 <rb_event_add+0x18>
   11804:	.word	0x0001bd34
   11808:	.word	0x0002e694
   1180c:	.word	0x0002e664
   11810:	.word	0x00009ecc

00011814 <rb_event_addonce>:
   11814:	push	{r4, r5, r6, r7, r8, lr}
   11818:	subs	r5, r3, #0
   1181c:	mov	r6, r0
   11820:	mov	r7, r1
   11824:	mov	r8, r2
   11828:	ble	11914 <rb_event_addonce+0x100>
   1182c:	mov	r1, #48	; 0x30
   11830:	mov	r0, #1
   11834:	bl	45ec <calloc@plt>
   11838:	subs	r4, r0, #0
   1183c:	beq	11900 <rb_event_addonce+0xec>
   11840:	str	r7, [r4, #12]
   11844:	mov	r0, #33	; 0x21
   11848:	bl	49ac <malloc@plt>
   1184c:	subs	r7, r0, #0
   11850:	beq	11900 <rb_event_addonce+0xec>
   11854:	mov	r1, r6
   11858:	mov	r2, #33	; 0x21
   1185c:	bl	46a0 <rb_strlcpy@plt>
   11860:	str	r7, [r4, #20]
   11864:	str	r8, [r4, #16]
   11868:	bl	47f0 <rb_current_time@plt>
   1186c:	ldr	ip, [pc, #188]	; 11930 <rb_event_addonce+0x11c>
   11870:	mov	r1, #0
   11874:	add	ip, pc, ip
   11878:	str	r1, [r4, #24]
   1187c:	ldr	r2, [ip]
   11880:	str	r1, [r4, #44]	; 0x2c
   11884:	cmn	r2, #1
   11888:	movne	r3, #0
   1188c:	moveq	r3, #1
   11890:	str	r5, [r4, #32]
   11894:	str	r4, [r4]
   11898:	add	r0, r5, r0
   1189c:	cmp	r0, r2
   118a0:	orrlt	r3, r3, #1
   118a4:	ldr	r2, [pc, #136]	; 11934 <rb_event_addonce+0x120>
   118a8:	cmp	r3, r1
   118ac:	add	r2, pc, r2
   118b0:	mov	r1, #0
   118b4:	ldr	r3, [r2]
   118b8:	strne	r0, [ip]
   118bc:	cmp	r3, r1
   118c0:	str	r0, [r4, #28]
   118c4:	str	r1, [r4, #4]
   118c8:	str	r3, [r4, #8]
   118cc:	strne	r4, [r3, #4]
   118d0:	beq	11904 <rb_event_addonce+0xf0>
   118d4:	ldr	r3, [pc, #92]	; 11938 <rb_event_addonce+0x124>
   118d8:	mov	r1, r5
   118dc:	add	r3, pc, r3
   118e0:	mov	r0, r4
   118e4:	ldr	r2, [r3, #8]
   118e8:	str	r4, [r3]
   118ec:	add	r2, r2, #1
   118f0:	str	r2, [r3, #8]
   118f4:	bl	ed68 <rb_io_sched_event>
   118f8:	mov	r0, r4
   118fc:	pop	{r4, r5, r6, r7, r8, pc}
   11900:	bl	4988 <rb_outofmemory@plt>
   11904:	ldr	r3, [r2, #4]
   11908:	cmp	r3, #0
   1190c:	streq	r4, [r2, #4]
   11910:	b	118d4 <rb_event_addonce+0xc0>
   11914:	mov	r1, r0
   11918:	ldr	r0, [pc, #28]	; 1193c <rb_event_addonce+0x128>
   1191c:	mov	r2, r5
   11920:	add	r0, pc, r0
   11924:	bl	491c <rb_lib_log@plt>
   11928:	mov	r5, #1
   1192c:	b	1182c <rb_event_addonce+0x18>
   11930:	.word	0x0001bc08
   11934:	.word	0x0002e568
   11938:	.word	0x0002e538
   1193c:	.word	0x00009de4

00011940 <rb_event_delete>:
   11940:	subs	r3, r0, #0
   11944:	bxeq	lr
   11948:	mov	r2, #1
   1194c:	str	r2, [r3, #44]	; 0x2c
   11950:	b	edc4 <rb_io_unsched_event>

00011954 <rb_event_find_delete>:
   11954:	ldr	r3, [pc, #76]	; 119a8 <rb_event_find_delete+0x54>
   11958:	add	r3, pc, r3
   1195c:	ldr	r3, [r3]
   11960:	cmp	r3, #0
   11964:	bne	11978 <rb_event_find_delete+0x24>
   11968:	b	1199c <rb_event_find_delete+0x48>
   1196c:	ldr	r3, [r3, #8]
   11970:	cmp	r3, #0
   11974:	beq	1199c <rb_event_find_delete+0x48>
   11978:	ldr	r2, [r3]
   1197c:	ldr	ip, [r2, #12]
   11980:	cmp	r0, ip
   11984:	bne	1196c <rb_event_find_delete+0x18>
   11988:	ldr	ip, [r2, #16]
   1198c:	cmp	r1, ip
   11990:	bne	1196c <rb_event_find_delete+0x18>
   11994:	mov	r0, r2
   11998:	b	449c <rb_event_delete@plt>
   1199c:	mov	r2, r3
   119a0:	mov	r0, r2
   119a4:	b	449c <rb_event_delete@plt>
   119a8:	.word	0x0002e4bc

000119ac <rb_event_addish>:
   119ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119b0:	eor	r5, r3, r3, asr #31
   119b4:	sub	r5, r5, r3, asr #31
   119b8:	vldr	d7, [pc, #352]	; 11b20 <rb_event_addish+0x174>
   119bc:	vmov	s13, r5
   119c0:	mov	r8, r0
   119c4:	mov	r6, r1
   119c8:	mov	r7, r2
   119cc:	vcvt.f64.s32	d6, s13
   119d0:	vcmpe.f64	d6, d7
   119d4:	vmrs	APSR_nzcv, fpscr
   119d8:	movlt	r9, r5
   119dc:	blt	119f0 <rb_event_addish+0x44>
   119e0:	cmp	r3, #0
   119e4:	rsb	r9, r5, #0
   119e8:	moveq	r5, r9
   119ec:	bne	11ac4 <rb_event_addish+0x118>
   119f0:	mov	r1, #48	; 0x30
   119f4:	mov	r0, #1
   119f8:	bl	45ec <calloc@plt>
   119fc:	subs	r4, r0, #0
   11a00:	beq	11b0c <rb_event_addish+0x160>
   11a04:	str	r6, [r4, #12]
   11a08:	mov	r0, #33	; 0x21
   11a0c:	bl	49ac <malloc@plt>
   11a10:	subs	r6, r0, #0
   11a14:	beq	11b0c <rb_event_addish+0x160>
   11a18:	mov	r1, r8
   11a1c:	mov	r2, #33	; 0x21
   11a20:	bl	46a0 <rb_strlcpy@plt>
   11a24:	str	r6, [r4, #20]
   11a28:	str	r7, [r4, #16]
   11a2c:	bl	47f0 <rb_current_time@plt>
   11a30:	ldr	r1, [pc, #240]	; 11b28 <rb_event_addish+0x17c>
   11a34:	mov	ip, #0
   11a38:	add	r1, pc, r1
   11a3c:	str	r5, [r4, #32]
   11a40:	ldr	r2, [r1]
   11a44:	str	r9, [r4, #24]
   11a48:	cmn	r2, #1
   11a4c:	movne	r3, #0
   11a50:	moveq	r3, #1
   11a54:	str	ip, [r4, #44]	; 0x2c
   11a58:	str	r4, [r4]
   11a5c:	add	r0, r5, r0
   11a60:	cmp	r0, r2
   11a64:	orrlt	r3, r3, #1
   11a68:	ldr	r2, [pc, #188]	; 11b2c <rb_event_addish+0x180>
   11a6c:	cmp	r3, ip
   11a70:	add	r2, pc, r2
   11a74:	strne	r0, [r1]
   11a78:	ldr	r3, [r2]
   11a7c:	mov	r1, #0
   11a80:	cmp	r3, r1
   11a84:	str	r0, [r4, #28]
   11a88:	str	r1, [r4, #4]
   11a8c:	str	r3, [r4, #8]
   11a90:	strne	r4, [r3, #4]
   11a94:	beq	11b10 <rb_event_addish+0x164>
   11a98:	ldr	r3, [pc, #144]	; 11b30 <rb_event_addish+0x184>
   11a9c:	mov	r1, r5
   11aa0:	add	r3, pc, r3
   11aa4:	mov	r0, r4
   11aa8:	ldr	r2, [r3, #8]
   11aac:	str	r4, [r3]
   11ab0:	add	r2, r2, #1
   11ab4:	str	r2, [r3, #8]
   11ab8:	bl	ed68 <rb_io_sched_event>
   11abc:	mov	r0, r4
   11ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac4:	bl	4b44 <rand@plt>
   11ac8:	ldr	r4, [pc, #100]	; 11b34 <rb_event_addish+0x188>
   11acc:	lsl	r5, r5, #1
   11ad0:	smull	r3, r4, r4, r5
   11ad4:	sub	r4, r4, r5, asr #31
   11ad8:	ldr	r5, [pc, #88]	; 11b38 <rb_event_addish+0x18c>
   11adc:	mov	r3, #1000	; 0x3e8
   11ae0:	smull	ip, r1, r5, r0
   11ae4:	asr	r2, r0, #31
   11ae8:	rsb	r2, r2, r1, asr #6
   11aec:	mul	r3, r3, r2
   11af0:	sub	r0, r0, r3
   11af4:	mul	r0, r4, r0
   11af8:	smull	r3, r5, r5, r0
   11afc:	asr	r0, r0, #31
   11b00:	rsb	r5, r0, r5, asr #6
   11b04:	add	r5, r5, r4
   11b08:	b	119f0 <rb_event_addish+0x44>
   11b0c:	bl	4988 <rb_outofmemory@plt>
   11b10:	ldr	r3, [r2, #4]
   11b14:	cmp	r3, #0
   11b18:	streq	r4, [r2, #4]
   11b1c:	b	11a98 <rb_event_addish+0xec>
   11b20:	.word	0x00000000
   11b24:	.word	0x40080000
   11b28:	.word	0x0001ba44
   11b2c:	.word	0x0002e3a4
   11b30:	.word	0x0002e374
   11b34:	.word	0x55555556
   11b38:	.word	0x10624dd3

00011b3c <rb_run_one_event>:
   11b3c:	push	{r4, r5, r6, lr}
   11b40:	mov	r4, r0
   11b44:	ldr	r0, [pc, #200]	; 11c14 <rb_run_one_event+0xd8>
   11b48:	ldr	r1, [r4, #20]
   11b4c:	add	r0, pc, r0
   11b50:	mov	r2, #33	; 0x21
   11b54:	add	r0, r0, #12
   11b58:	bl	46a0 <rb_strlcpy@plt>
   11b5c:	ldr	r3, [r4, #12]
   11b60:	ldr	r0, [r4, #16]
   11b64:	blx	r3
   11b68:	ldr	r3, [r4, #24]
   11b6c:	cmp	r3, #0
   11b70:	beq	11bbc <rb_run_one_event+0x80>
   11b74:	bl	47f0 <rb_current_time@plt>
   11b78:	mov	r5, r0
   11b7c:	ldr	r0, [r4, #24]
   11b80:	cmp	r0, #0
   11b84:	blt	11bc8 <rb_run_one_event+0x8c>
   11b88:	ldr	r1, [pc, #136]	; 11c18 <rb_run_one_event+0xdc>
   11b8c:	add	r0, r5, r0
   11b90:	add	r1, pc, r1
   11b94:	str	r0, [r4, #28]
   11b98:	ldr	r2, [r1]
   11b9c:	cmn	r2, #1
   11ba0:	movne	r3, #0
   11ba4:	moveq	r3, #1
   11ba8:	cmp	r0, r2
   11bac:	orrlt	r3, r3, #1
   11bb0:	cmp	r3, #0
   11bb4:	strne	r0, [r1]
   11bb8:	pop	{r4, r5, r6, pc}
   11bbc:	mov	r0, r4
   11bc0:	pop	{r4, r5, r6, lr}
   11bc4:	b	449c <rb_event_delete@plt>
   11bc8:	rsb	r0, r0, r0, lsl #31
   11bcc:	ldr	r6, [pc, #72]	; 11c1c <rb_run_one_event+0xe0>
   11bd0:	lsl	r0, r0, #1
   11bd4:	smull	r3, r6, r6, r0
   11bd8:	sub	r6, r6, r0, asr #31
   11bdc:	bl	4b44 <rand@plt>
   11be0:	ldr	r3, [pc, #56]	; 11c20 <rb_run_one_event+0xe4>
   11be4:	mov	r2, #1000	; 0x3e8
   11be8:	smull	lr, ip, r3, r0
   11bec:	asr	r1, r0, #31
   11bf0:	rsb	r1, r1, ip, asr #6
   11bf4:	mul	r2, r2, r1
   11bf8:	sub	r0, r0, r2
   11bfc:	mul	r0, r6, r0
   11c00:	smull	r2, r3, r3, r0
   11c04:	asr	r0, r0, #31
   11c08:	rsb	r0, r0, r3, asr #6
   11c0c:	add	r0, r0, r6
   11c10:	b	11b88 <rb_run_one_event+0x4c>
   11c14:	.word	0x0002e2c8
   11c18:	.word	0x0001b8ec
   11c1c:	.word	0x55555556
   11c20:	.word	0x10624dd3

00011c24 <rb_event_run>:
   11c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c28:	sub	sp, sp, #12
   11c2c:	bl	ee10 <rb_io_supports_event>
   11c30:	cmp	r0, #0
   11c34:	bne	11d3c <rb_event_run+0x118>
   11c38:	ldr	r3, [pc, #584]	; 11e88 <rb_event_run+0x264>
   11c3c:	ldr	r2, [pc, #584]	; 11e8c <rb_event_run+0x268>
   11c40:	add	r3, pc, r3
   11c44:	add	r2, pc, r2
   11c48:	ldr	r3, [r3]
   11c4c:	mvn	r1, #0
   11c50:	cmp	r3, #0
   11c54:	str	r1, [r2]
   11c58:	beq	11d3c <rb_event_run+0x118>
   11c5c:	ldr	r8, [pc, #556]	; 11e90 <rb_event_run+0x26c>
   11c60:	ldr	r6, [pc, #556]	; 11e94 <rb_event_run+0x270>
   11c64:	ldr	r7, [pc, #556]	; 11e98 <rb_event_run+0x274>
   11c68:	add	r8, pc, r8
   11c6c:	ldr	r5, [r3, #8]
   11c70:	add	r6, pc, r6
   11c74:	add	r7, pc, r7
   11c78:	ldr	sl, [pc, #540]	; 11e9c <rb_event_run+0x278>
   11c7c:	add	r9, r8, #12
   11c80:	b	11cf0 <rb_event_run+0xcc>
   11c84:	ldr	r3, [r4, #8]
   11c88:	cmp	r3, #0
   11c8c:	beq	11d54 <rb_event_run+0x130>
   11c90:	ldr	r2, [r4, #4]
   11c94:	str	r2, [r3, #4]
   11c98:	ldr	r2, [r4, #4]
   11c9c:	cmp	r2, #0
   11ca0:	strne	r3, [r2, #8]
   11ca4:	beq	11d44 <rb_event_run+0x120>
   11ca8:	ldr	r1, [pc, #496]	; 11ea0 <rb_event_run+0x27c>
   11cac:	ldr	r0, [r4, #20]
   11cb0:	add	r1, pc, r1
   11cb4:	mov	r2, #0
   11cb8:	ldr	r3, [r1, #8]
   11cbc:	cmp	r0, r2
   11cc0:	sub	r3, r3, #1
   11cc4:	str	r3, [r1, #8]
   11cc8:	str	r2, [r4, #4]
   11ccc:	str	r2, [r4, #8]
   11cd0:	beq	11cd8 <rb_event_run+0xb4>
   11cd4:	bl	46f4 <free@plt>
   11cd8:	mov	r0, r4
   11cdc:	bl	46f4 <free@plt>
   11ce0:	cmp	r5, #0
   11ce4:	beq	11d3c <rb_event_run+0x118>
   11ce8:	mov	r3, r5
   11cec:	ldr	r5, [r5, #8]
   11cf0:	ldr	r4, [r3]
   11cf4:	ldr	r3, [r4, #44]	; 0x2c
   11cf8:	cmp	r3, #0
   11cfc:	bne	11c84 <rb_event_run+0x60>
   11d00:	ldr	fp, [r4, #28]
   11d04:	bl	47f0 <rb_current_time@plt>
   11d08:	cmp	fp, r0
   11d0c:	ble	11d68 <rb_event_run+0x144>
   11d10:	ldr	r2, [r6]
   11d14:	ldr	r1, [r4, #28]
   11d18:	cmn	r2, #1
   11d1c:	movne	r3, #0
   11d20:	moveq	r3, #1
   11d24:	cmp	r1, r2
   11d28:	orrlt	r3, r3, #1
   11d2c:	cmp	r3, #0
   11d30:	strne	r1, [r6]
   11d34:	cmp	r5, #0
   11d38:	bne	11ce8 <rb_event_run+0xc4>
   11d3c:	add	sp, sp, #12
   11d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d44:	ldr	r2, [pc, #344]	; 11ea4 <rb_event_run+0x280>
   11d48:	add	r2, pc, r2
   11d4c:	str	r3, [r2]
   11d50:	b	11ca8 <rb_event_run+0x84>
   11d54:	ldr	r1, [pc, #332]	; 11ea8 <rb_event_run+0x284>
   11d58:	ldr	r2, [r4, #4]
   11d5c:	add	r1, pc, r1
   11d60:	str	r2, [r1, #4]
   11d64:	b	11c9c <rb_event_run+0x78>
   11d68:	mov	r2, #33	; 0x21
   11d6c:	ldr	r1, [r4, #20]
   11d70:	mov	r0, r9
   11d74:	bl	46a0 <rb_strlcpy@plt>
   11d78:	ldr	r3, [r4, #12]
   11d7c:	ldr	r0, [r4, #16]
   11d80:	blx	r3
   11d84:	ldr	r3, [r4, #24]
   11d88:	cmp	r3, #0
   11d8c:	bne	11dd8 <rb_event_run+0x1b4>
   11d90:	ldmib	r4, {r2, r3}
   11d94:	cmp	r3, #0
   11d98:	strne	r2, [r3, #4]
   11d9c:	ldrne	r2, [r4, #4]
   11da0:	streq	r2, [r8, #4]
   11da4:	cmp	r2, #0
   11da8:	strne	r3, [r2, #8]
   11dac:	beq	11e20 <rb_event_run+0x1fc>
   11db0:	ldr	r3, [r7, #8]
   11db4:	ldr	r0, [r4, #20]
   11db8:	mov	r2, #0
   11dbc:	sub	r3, r3, #1
   11dc0:	cmp	r0, #0
   11dc4:	str	r3, [r7, #8]
   11dc8:	str	r2, [r4, #4]
   11dcc:	str	r2, [r4, #8]
   11dd0:	bne	11cd4 <rb_event_run+0xb0>
   11dd4:	b	11cd8 <rb_event_run+0xb4>
   11dd8:	bl	47f0 <rb_current_time@plt>
   11ddc:	mov	r3, r0
   11de0:	ldr	r0, [r4, #24]
   11de4:	cmp	r0, #0
   11de8:	blt	11e30 <rb_event_run+0x20c>
   11dec:	ldr	r2, [pc, #184]	; 11eac <rb_event_run+0x288>
   11df0:	add	r0, r3, r0
   11df4:	add	r2, pc, r2
   11df8:	str	r0, [r4, #28]
   11dfc:	ldr	r1, [r2]
   11e00:	cmn	r1, #1
   11e04:	movne	r3, #0
   11e08:	moveq	r3, #1
   11e0c:	cmp	r0, r1
   11e10:	orrlt	r3, r3, #1
   11e14:	cmp	r3, #0
   11e18:	strne	r0, [r2]
   11e1c:	b	11ce0 <rb_event_run+0xbc>
   11e20:	ldr	r2, [pc, #136]	; 11eb0 <rb_event_run+0x28c>
   11e24:	add	r2, pc, r2
   11e28:	str	r3, [r2]
   11e2c:	b	11db0 <rb_event_run+0x18c>
   11e30:	rsb	r0, r0, r0, lsl #31
   11e34:	str	r3, [sp, #4]
   11e38:	ldr	r3, [pc, #116]	; 11eb4 <rb_event_run+0x290>
   11e3c:	lsl	r2, r0, #1
   11e40:	smull	r3, r0, r3, r2
   11e44:	sub	r2, r0, r2, asr #31
   11e48:	str	r2, [sp]
   11e4c:	bl	4b44 <rand@plt>
   11e50:	mov	r1, #1000	; 0x3e8
   11e54:	ldr	r2, [sp]
   11e58:	smull	r3, lr, sl, r0
   11e5c:	asr	ip, r0, #31
   11e60:	rsb	ip, ip, lr, asr #6
   11e64:	mul	r1, r1, ip
   11e68:	sub	r1, r0, r1
   11e6c:	mul	r1, r2, r1
   11e70:	smull	r3, ip, sl, r1
   11e74:	ldr	r3, [sp, #4]
   11e78:	asr	r0, r1, #31
   11e7c:	rsb	r0, r0, ip, asr #6
   11e80:	add	r0, r0, r2
   11e84:	b	11dec <rb_event_run+0x1c8>
   11e88:	.word	0x0002e1d4
   11e8c:	.word	0x0001b838
   11e90:	.word	0x0002e1ac
   11e94:	.word	0x0001b80c
   11e98:	.word	0x0002e1a0
   11e9c:	.word	0x10624dd3
   11ea0:	.word	0x0002e164
   11ea4:	.word	0x0002e0cc
   11ea8:	.word	0x0002e0b8
   11eac:	.word	0x0001b688
   11eb0:	.word	0x0002dff0
   11eb4:	.word	0x55555556

00011eb8 <rb_event_io_register_all>:
   11eb8:	push	{r4, lr}
   11ebc:	bl	ee10 <rb_io_supports_event>
   11ec0:	cmp	r0, #0
   11ec4:	popeq	{r4, pc}
   11ec8:	ldr	r3, [pc, #40]	; 11ef8 <rb_event_io_register_all+0x40>
   11ecc:	ldr	r4, [pc, r3]
   11ed0:	cmp	r4, #0
   11ed4:	popeq	{r4, pc}
   11ed8:	ldr	r3, [r4]
   11edc:	mov	r0, r3
   11ee0:	ldr	r1, [r3, #32]
   11ee4:	bl	ed68 <rb_io_sched_event>
   11ee8:	ldr	r4, [r4, #8]
   11eec:	cmp	r4, #0
   11ef0:	bne	11ed8 <rb_event_io_register_all+0x20>
   11ef4:	pop	{r4, pc}
   11ef8:	.word	0x0002df48

00011efc <rb_event_init>:
   11efc:	ldr	r0, [pc, #20]	; 11f18 <rb_event_init+0x1c>
   11f00:	ldr	r1, [pc, #20]	; 11f1c <rb_event_init+0x20>
   11f04:	add	r0, pc, r0
   11f08:	mov	r2, #33	; 0x21
   11f0c:	add	r0, r0, #12
   11f10:	add	r1, pc, r1
   11f14:	b	46a0 <rb_strlcpy@plt>
   11f18:	.word	0x0002df10
   11f1c:	.word	0x00009838

00011f20 <rb_dump_events>:
   11f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f24:	sub	sp, sp, #524	; 0x20c
   11f28:	ldr	r4, [pc, #184]	; 11fe8 <rb_dump_events+0xc8>
   11f2c:	ldr	r2, [pc, #184]	; 11fec <rb_dump_events+0xcc>
   11f30:	add	r6, sp, #8
   11f34:	add	r4, pc, r4
   11f38:	add	r3, r4, #12
   11f3c:	mov	r7, r0
   11f40:	mov	r8, r1
   11f44:	add	r2, pc, r2
   11f48:	mov	r1, #512	; 0x200
   11f4c:	mov	r0, r6
   11f50:	bl	4bb0 <snprintf@plt>
   11f54:	mov	r1, r8
   11f58:	mov	r0, r6
   11f5c:	blx	r7
   11f60:	ldr	r1, [pc, #136]	; 11ff0 <rb_dump_events+0xd0>
   11f64:	mov	r2, #512	; 0x200
   11f68:	add	r1, pc, r1
   11f6c:	mov	r0, r6
   11f70:	bl	46a0 <rb_strlcpy@plt>
   11f74:	mov	r1, r8
   11f78:	mov	r0, r6
   11f7c:	blx	r7
   11f80:	ldr	r4, [r4]
   11f84:	cmp	r4, #0
   11f88:	beq	11fe0 <rb_dump_events+0xc0>
   11f8c:	ldr	sl, [pc, #96]	; 11ff4 <rb_dump_events+0xd4>
   11f90:	add	sl, pc, sl
   11f94:	ldr	fp, [r4]
   11f98:	ldr	r9, [fp, #20]
   11f9c:	ldr	r5, [fp, #28]
   11fa0:	bl	47f0 <rb_current_time@plt>
   11fa4:	ldr	r2, [fp, #24]
   11fa8:	mov	r3, r9
   11fac:	str	r2, [sp, #4]
   11fb0:	mov	r1, #512	; 0x200
   11fb4:	mov	r2, sl
   11fb8:	sub	r0, r5, r0
   11fbc:	str	r0, [sp]
   11fc0:	mov	r0, r6
   11fc4:	bl	4bb0 <snprintf@plt>
   11fc8:	mov	r1, r8
   11fcc:	mov	r0, r6
   11fd0:	blx	r7
   11fd4:	ldr	r4, [r4, #8]
   11fd8:	cmp	r4, #0
   11fdc:	bne	11f94 <rb_dump_events+0x74>
   11fe0:	add	sp, sp, #524	; 0x20c
   11fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fe8:	.word	0x0002dee0
   11fec:	.word	0x0000980c
   11ff0:	.word	0x00009800
   11ff4:	.word	0x00009804

00011ff8 <rb_set_back_events>:
   11ff8:	ldr	r3, [pc, #48]	; 12030 <rb_set_back_events+0x38>
   11ffc:	ldr	r2, [pc, r3]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	ldr	r1, [r2]
   1200c:	ldr	r2, [r2, #8]
   12010:	ldr	r3, [r1, #28]
   12014:	cmp	r3, r0
   12018:	subgt	r3, r3, r0
   1201c:	movle	r3, #0
   12020:	cmp	r2, #0
   12024:	str	r3, [r1, #28]
   12028:	bne	12008 <rb_set_back_events+0x10>
   1202c:	bx	lr
   12030:	.word	0x0002de18

00012034 <rb_event_update>:
   12034:	push	{r4, r5, r6, lr}
   12038:	subs	r5, r0, #0
   1203c:	popeq	{r4, r5, r6, pc}
   12040:	cmp	r1, #0
   12044:	mov	r4, r1
   12048:	str	r1, [r5, #24]
   1204c:	blt	12074 <rb_event_update+0x40>
   12050:	bl	47f0 <rb_current_time@plt>
   12054:	ldr	r3, [r5, #28]
   12058:	add	r0, r0, r4
   1205c:	cmp	r0, r3
   12060:	popge	{r4, r5, r6, pc}
   12064:	bl	47f0 <rb_current_time@plt>
   12068:	add	r0, r0, r4
   1206c:	str	r0, [r5, #28]
   12070:	pop	{r4, r5, r6, pc}
   12074:	rsb	r4, r1, r1, lsl #31
   12078:	ldr	r1, [pc, #64]	; 120c0 <rb_event_update+0x8c>
   1207c:	lsl	r4, r4, #1
   12080:	smull	r3, r1, r1, r4
   12084:	sub	r4, r1, r4, asr #31
   12088:	bl	4b44 <rand@plt>
   1208c:	ldr	r3, [pc, #48]	; 120c4 <rb_event_update+0x90>
   12090:	mov	r2, #1000	; 0x3e8
   12094:	smull	lr, ip, r3, r0
   12098:	asr	r1, r0, #31
   1209c:	rsb	r1, r1, ip, asr #6
   120a0:	mul	r2, r2, r1
   120a4:	sub	r0, r0, r2
   120a8:	mul	r0, r4, r0
   120ac:	smull	r2, r3, r3, r0
   120b0:	asr	r0, r0, #31
   120b4:	rsb	r0, r0, r3, asr #6
   120b8:	add	r4, r0, r4
   120bc:	b	12050 <rb_event_update+0x1c>
   120c0:	.word	0x55555556
   120c4:	.word	0x10624dd3

000120c8 <rb_event_next>:
   120c8:	ldr	r3, [pc, #4]	; 120d4 <rb_event_next+0xc>
   120cc:	ldr	r0, [pc, r3]
   120d0:	bx	lr
   120d4:	.word	0x0001b3b0

000120d8 <rb_ctime>:
   120d8:	push	{r4, r5, lr}
   120dc:	sub	sp, sp, #84	; 0x54
   120e0:	mov	r4, r1
   120e4:	str	r0, [sp, #28]
   120e8:	add	r1, sp, #36	; 0x24
   120ec:	add	r0, sp, #28
   120f0:	mov	r5, r2
   120f4:	bl	49f4 <gmtime_r@plt>
   120f8:	cmp	r4, #0
   120fc:	beq	12178 <rb_ctime+0xa0>
   12100:	cmp	r0, #0
   12104:	beq	1218c <rb_ctime+0xb4>
   12108:	ldr	r3, [r0, #20]
   1210c:	ldr	r1, [r0, #24]
   12110:	add	r3, r3, #1888	; 0x760
   12114:	add	r3, r3, #12
   12118:	str	r3, [sp, #20]
   1211c:	ldr	r3, [r0]
   12120:	ldr	ip, [pc, #132]	; 121ac <rb_ctime+0xd4>
   12124:	str	r3, [sp, #16]
   12128:	ldr	r2, [r0, #4]
   1212c:	add	ip, pc, ip
   12130:	str	r2, [sp, #12]
   12134:	ldr	r2, [r0, #8]
   12138:	ldr	r3, [ip, r1, lsl #2]
   1213c:	str	r2, [sp, #8]
   12140:	ldr	r2, [r0, #12]
   12144:	mov	r1, r5
   12148:	str	r2, [sp, #4]
   1214c:	ldr	lr, [r0, #16]
   12150:	ldr	r2, [pc, #88]	; 121b0 <rb_ctime+0xd8>
   12154:	mov	r0, r4
   12158:	add	ip, ip, lr, lsl #2
   1215c:	add	r2, pc, r2
   12160:	ldr	ip, [ip, #28]
   12164:	str	ip, [sp]
   12168:	bl	4bb0 <snprintf@plt>
   1216c:	mov	r0, r4
   12170:	add	sp, sp, #84	; 0x54
   12174:	pop	{r4, r5, pc}
   12178:	ldr	r4, [pc, #52]	; 121b4 <rb_ctime+0xdc>
   1217c:	cmp	r0, #0
   12180:	add	r4, pc, r4
   12184:	mov	r5, #128	; 0x80
   12188:	bne	12108 <rb_ctime+0x30>
   1218c:	ldr	r1, [pc, #36]	; 121b8 <rb_ctime+0xe0>
   12190:	mov	r2, r5
   12194:	add	r1, pc, r1
   12198:	mov	r0, r4
   1219c:	bl	46a0 <rb_strlcpy@plt>
   121a0:	mov	r0, r4
   121a4:	add	sp, sp, #84	; 0x54
   121a8:	pop	{r4, r5, pc}
   121ac:	.word	0x0001ad2c
   121b0:	.word	0x000098a0
   121b4:	.word	0x0002dcc4
   121b8:	.word	0x00009ba8

000121bc <rb_date>:
   121bc:	push	{r4, r5, lr}
   121c0:	sub	sp, sp, #84	; 0x54
   121c4:	mov	r4, r1
   121c8:	str	r0, [sp, #28]
   121cc:	add	r1, sp, #36	; 0x24
   121d0:	add	r0, sp, #28
   121d4:	mov	r5, r2
   121d8:	bl	49f4 <gmtime_r@plt>
   121dc:	cmp	r0, #0
   121e0:	beq	12258 <rb_date+0x9c>
   121e4:	ldr	r2, [r0]
   121e8:	ldr	r3, [r0, #24]
   121ec:	str	r2, [sp, #20]
   121f0:	ldr	r2, [r0, #4]
   121f4:	ldr	ip, [pc, #124]	; 12278 <rb_date+0xbc>
   121f8:	str	r2, [sp, #16]
   121fc:	ldr	r2, [r0, #8]
   12200:	add	ip, pc, ip
   12204:	str	r2, [sp, #12]
   12208:	ldr	r1, [r0, #20]
   1220c:	add	r3, ip, r3, lsl #2
   12210:	add	r1, r1, #1888	; 0x760
   12214:	add	r1, r1, #12
   12218:	str	r1, [sp, #8]
   1221c:	ldr	r2, [r0, #12]
   12220:	ldr	r3, [r3, #76]	; 0x4c
   12224:	str	r2, [sp, #4]
   12228:	ldr	r0, [r0, #16]
   1222c:	ldr	r2, [pc, #72]	; 1227c <rb_date+0xc0>
   12230:	mov	r1, r5
   12234:	add	ip, ip, r0, lsl #2
   12238:	add	r2, pc, r2
   1223c:	ldr	ip, [ip, #104]	; 0x68
   12240:	mov	r0, r4
   12244:	str	ip, [sp]
   12248:	bl	4bb0 <snprintf@plt>
   1224c:	mov	r0, r4
   12250:	add	sp, sp, #84	; 0x54
   12254:	pop	{r4, r5, pc}
   12258:	ldr	r1, [pc, #32]	; 12280 <rb_date+0xc4>
   1225c:	mov	r2, r5
   12260:	add	r1, pc, r1
   12264:	mov	r0, r4
   12268:	bl	46a0 <rb_strlcpy@plt>
   1226c:	mov	r0, r4
   12270:	add	sp, sp, #84	; 0x54
   12274:	pop	{r4, r5, pc}
   12278:	.word	0x0001ac58
   1227c:	.word	0x000097e0
   12280:	.word	0x00009adc

00012284 <rb_current_time>:
   12284:	ldr	r3, [pc, #8]	; 12294 <rb_current_time+0x10>
   12288:	add	r3, pc, r3
   1228c:	ldr	r0, [r3, #128]	; 0x80
   12290:	bx	lr
   12294:	.word	0x0002dbbc

00012298 <rb_current_time_tv>:
   12298:	ldr	r0, [pc, #8]	; 122a8 <rb_current_time_tv+0x10>
   1229c:	add	r0, pc, r0
   122a0:	add	r0, r0, #128	; 0x80
   122a4:	bx	lr
   122a8:	.word	0x0002dba8

000122ac <rb_lib_log>:
   122ac:	push	{r0, r1, r2, r3}
   122b0:	push	{r4, r5, lr}
   122b4:	sub	sp, sp, #12
   122b8:	ldr	r4, [pc, #72]	; 12308 <rb_lib_log+0x5c>
   122bc:	add	r4, pc, r4
   122c0:	ldr	r3, [r4, #136]	; 0x88
   122c4:	cmp	r3, #0
   122c8:	beq	122f8 <rb_lib_log+0x4c>
   122cc:	add	ip, sp, #28
   122d0:	add	r5, r4, #140	; 0x8c
   122d4:	mov	r3, ip
   122d8:	mov	r0, r5
   122dc:	ldr	r2, [sp, #24]
   122e0:	mov	r1, #512	; 0x200
   122e4:	str	ip, [sp, #4]
   122e8:	bl	455c <vsnprintf@plt>
   122ec:	mov	r0, r5
   122f0:	ldr	r3, [r4, #136]	; 0x88
   122f4:	blx	r3
   122f8:	add	sp, sp, #12
   122fc:	pop	{r4, r5, lr}
   12300:	add	sp, sp, #16
   12304:	bx	lr
   12308:	.word	0x0002db88

0001230c <rb_lib_die>:
   1230c:	push	{r0, r1, r2, r3}
   12310:	push	{r4, r5, lr}
   12314:	sub	sp, sp, #12
   12318:	ldr	r4, [pc, #76]	; 1236c <rb_lib_die+0x60>
   1231c:	add	r4, pc, r4
   12320:	ldr	r3, [r4, #652]	; 0x28c
   12324:	cmp	r3, #0
   12328:	beq	12368 <rb_lib_die+0x5c>
   1232c:	add	ip, sp, #28
   12330:	add	r5, r4, #140	; 0x8c
   12334:	mov	r3, ip
   12338:	ldr	r2, [sp, #24]
   1233c:	mov	r1, #512	; 0x200
   12340:	mov	r0, r5
   12344:	str	ip, [sp, #4]
   12348:	bl	455c <vsnprintf@plt>
   1234c:	mov	r0, r5
   12350:	ldr	r3, [r4, #652]	; 0x28c
   12354:	blx	r3
   12358:	add	sp, sp, #12
   1235c:	pop	{r4, r5, lr}
   12360:	add	sp, sp, #16
   12364:	bx	lr
   12368:	bl	43c4 <abort@plt>
   1236c:	.word	0x0002db28

00012370 <rb_lib_restart>:
   12370:	ldr	r4, [pc, #72]	; 123c0 <rb_lib_restart+0x50>
   12374:	push	{r0, r1, r2, r3}
   12378:	add	r4, pc, r4
   1237c:	push	{lr}		; (str lr, [sp, #-4]!)
   12380:	sub	sp, sp, #12
   12384:	ldr	r3, [r4, #656]	; 0x290
   12388:	cmp	r3, #0
   1238c:	beq	123bc <rb_lib_restart+0x4c>
   12390:	add	ip, sp, #20
   12394:	add	r5, r4, #140	; 0x8c
   12398:	mov	r3, ip
   1239c:	mov	r0, r5
   123a0:	ldr	r2, [sp, #16]
   123a4:	mov	r1, #512	; 0x200
   123a8:	str	ip, [sp, #4]
   123ac:	bl	455c <vsnprintf@plt>
   123b0:	mov	r0, r5
   123b4:	ldr	r3, [r4, #656]	; 0x290
   123b8:	blx	r3
   123bc:	bl	43c4 <abort@plt>
   123c0:	.word	0x0002dacc

000123c4 <rb_set_time>:
   123c4:	push	{r4, lr}
   123c8:	sub	sp, sp, #8
   123cc:	mov	r0, sp
   123d0:	mov	r1, #0
   123d4:	bl	45bc <rb_gettimeofday@plt>
   123d8:	cmn	r0, #1
   123dc:	beq	12420 <rb_set_time+0x5c>
   123e0:	ldr	r3, [pc, #96]	; 12448 <rb_set_time+0x84>
   123e4:	ldr	r2, [sp]
   123e8:	add	r3, pc, r3
   123ec:	mov	r4, sp
   123f0:	ldr	r0, [r3, #128]	; 0x80
   123f4:	cmp	r2, r0
   123f8:	bge	12404 <rb_set_time+0x40>
   123fc:	sub	r0, r0, r2
   12400:	bl	11ff8 <rb_set_back_events>
   12404:	ldr	r3, [pc, #64]	; 1244c <rb_set_time+0x88>
   12408:	ldm	r4, {r0, r1}
   1240c:	add	r3, pc, r3
   12410:	add	r3, r3, #128	; 0x80
   12414:	stm	r3, {r0, r1}
   12418:	add	sp, sp, #8
   1241c:	pop	{r4, pc}
   12420:	bl	4ce8 <__errno_location@plt>
   12424:	ldr	r0, [r0]
   12428:	bl	43a0 <strerror@plt>
   1242c:	mov	r1, r0
   12430:	ldr	r0, [pc, #24]	; 12450 <rb_set_time+0x8c>
   12434:	add	r0, pc, r0
   12438:	bl	491c <rb_lib_log@plt>
   1243c:	ldr	r0, [pc, #16]	; 12454 <rb_set_time+0x90>
   12440:	add	r0, pc, r0
   12444:	bl	4a60 <rb_lib_restart@plt>
   12448:	.word	0x0002da5c
   1244c:	.word	0x0002da38
   12450:	.word	0x0000960c
   12454:	.word	0x00009614

00012458 <rb_lib_version>:
   12458:	push	{r4, r5, lr}
   1245c:	sub	sp, sp, #524	; 0x20c
   12460:	add	r5, sp, #8
   12464:	mov	r0, r5
   12468:	mov	r1, #512	; 0x200
   1246c:	bl	10f98 <rb_get_ssl_info>
   12470:	ldr	ip, [pc, #60]	; 124b4 <rb_lib_version+0x5c>
   12474:	ldr	r3, [pc, #60]	; 124b8 <rb_lib_version+0x60>
   12478:	add	ip, pc, ip
   1247c:	ldr	r4, [pc, #56]	; 124bc <rb_lib_version+0x64>
   12480:	ldr	r3, [ip, r3]
   12484:	add	r4, pc, r4
   12488:	ldr	r2, [pc, #48]	; 124c0 <rb_lib_version+0x68>
   1248c:	add	r4, r4, #660	; 0x294
   12490:	str	r5, [sp]
   12494:	add	r2, pc, r2
   12498:	ldr	r3, [r3]
   1249c:	mov	r0, r4
   124a0:	mov	r1, #640	; 0x280
   124a4:	bl	4bb0 <snprintf@plt>
   124a8:	mov	r0, r4
   124ac:	add	sp, sp, #524	; 0x20c
   124b0:	pop	{r4, r5, pc}
   124b4:	.word	0x0001ab80
   124b8:	.word	0x000003ac
   124bc:	.word	0x0002d9c0
   124c0:	.word	0x000095d0

000124c4 <rb_lib_init>:
   124c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124c8:	mov	r5, r3
   124cc:	mov	sl, r0
   124d0:	mov	r9, r1
   124d4:	mov	r8, r2
   124d8:	ldr	r6, [sp, #32]
   124dc:	ldr	r4, [sp, #36]	; 0x24
   124e0:	ldr	r7, [sp, #40]	; 0x28
   124e4:	bl	4994 <rb_set_time@plt>
   124e8:	ldr	ip, [pc, #68]	; 12534 <rb_lib_init+0x70>
   124ec:	add	ip, pc, ip
   124f0:	str	sl, [ip, #136]	; 0x88
   124f4:	str	r9, [ip, #656]	; 0x290
   124f8:	str	r8, [ip, #652]	; 0x28c
   124fc:	bl	4604 <rb_event_init@plt>
   12500:	bl	49dc <rb_init_bh@plt>
   12504:	mov	r2, r7
   12508:	mov	r1, r6
   1250c:	mov	r0, r5
   12510:	bl	4afc <rb_fdlist_init@plt>
   12514:	bl	4388 <rb_init_netio@plt>
   12518:	mov	r0, r4
   1251c:	bl	48d4 <rb_init_rb_dlink_nodes@plt>
   12520:	bl	ee10 <rb_io_supports_event>
   12524:	cmp	r0, #0
   12528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1252c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12530:	b	ee2c <rb_io_init_event>
   12534:	.word	0x0002d958

00012538 <rb_lib_loop>:
   12538:	push	{r4, lr}
   1253c:	mov	r4, r0
   12540:	bl	4994 <rb_set_time@plt>
   12544:	bl	ee10 <rb_io_supports_event>
   12548:	cmp	r0, #0
   1254c:	bne	125a4 <rb_lib_loop+0x6c>
   12550:	cmp	r4, #0
   12554:	mvneq	r5, #0
   12558:	moveq	r6, #1000	; 0x3e8
   1255c:	beq	12570 <rb_lib_loop+0x38>
   12560:	mov	r0, r4
   12564:	bl	4544 <rb_select@plt>
   12568:	bl	49c4 <rb_event_run@plt>
   1256c:	b	12560 <rb_lib_loop+0x28>
   12570:	bl	4c34 <rb_event_next@plt>
   12574:	mov	r3, r5
   12578:	subs	r4, r0, #0
   1257c:	ble	12594 <rb_lib_loop+0x5c>
   12580:	bl	47f0 <rb_current_time@plt>
   12584:	sub	r0, r4, r0
   12588:	cmp	r0, #0
   1258c:	movle	r3, r6
   12590:	mulgt	r3, r6, r0
   12594:	mov	r0, r3
   12598:	bl	4544 <rb_select@plt>
   1259c:	bl	49c4 <rb_event_run@plt>
   125a0:	b	12570 <rb_lib_loop+0x38>
   125a4:	mvn	r4, #0
   125a8:	mov	r0, r4
   125ac:	bl	4544 <rb_select@plt>
   125b0:	b	125a8 <rb_lib_loop+0x70>

000125b4 <rb_strtok_r>:
   125b4:	b	4a54 <strtok_r@plt>

000125b8 <rb_base64_encode>:
   125b8:	cmn	r1, #2
   125bc:	blt	126d0 <rb_base64_encode+0x118>
   125c0:	push	{r4, r5, r6, r7, r8, lr}
   125c4:	mov	r4, r1
   125c8:	ldr	r1, [pc, #304]	; 12700 <rb_base64_encode+0x148>
   125cc:	add	r3, r4, #2
   125d0:	mov	r5, r0
   125d4:	smull	r2, r1, r1, r3
   125d8:	sub	r1, r1, r3, asr #31
   125dc:	mov	r0, #1
   125e0:	add	r1, r1, r1, lsl #2
   125e4:	bl	45ec <calloc@plt>
   125e8:	cmp	r0, #0
   125ec:	beq	126fc <rb_base64_encode+0x144>
   125f0:	cmp	r4, #2
   125f4:	movle	lr, r0
   125f8:	ble	1266c <rb_base64_encode+0xb4>
   125fc:	ldr	ip, [pc, #256]	; 12704 <rb_base64_encode+0x14c>
   12600:	add	r2, r5, #3
   12604:	add	ip, pc, ip
   12608:	mov	lr, r0
   1260c:	ldrb	r6, [r2, #-3]
   12610:	ldrb	r7, [r2, #-2]
   12614:	ldrb	r5, [r2, #-1]
   12618:	sub	r4, r4, #3
   1261c:	lsl	r3, r6, #4
   12620:	lsl	r1, r7, #2
   12624:	and	r3, r3, #48	; 0x30
   12628:	add	r3, ip, r3
   1262c:	and	r1, r1, #60	; 0x3c
   12630:	add	r1, ip, r1
   12634:	ldrb	r7, [r3, r7, lsr #4]
   12638:	and	r8, r5, #63	; 0x3f
   1263c:	ldrb	r3, [ip, r6, lsr #2]
   12640:	ldrb	r5, [r1, r5, lsr #6]
   12644:	ldrb	r1, [ip, r8]
   12648:	orr	r3, r3, r7, lsl #8
   1264c:	cmp	r4, #2
   12650:	orr	r3, r3, r5, lsl #16
   12654:	orr	r3, r3, r1, lsl #24
   12658:	str	r3, [lr], #4
   1265c:	mov	r3, r2
   12660:	add	r2, r2, #3
   12664:	bgt	1260c <rb_base64_encode+0x54>
   12668:	mov	r5, r3
   1266c:	cmp	r4, #0
   12670:	beq	126c4 <rb_base64_encode+0x10c>
   12674:	ldrb	r3, [r5]
   12678:	ldr	r2, [pc, #136]	; 12708 <rb_base64_encode+0x150>
   1267c:	cmp	r4, #2
   12680:	add	r2, pc, r2
   12684:	ldrb	r1, [r2, r3, lsr #2]
   12688:	strb	r1, [lr]
   1268c:	bne	126d8 <rb_base64_encode+0x120>
   12690:	ldrb	ip, [r5, #1]
   12694:	lsl	r3, r3, #4
   12698:	and	r3, r3, #48	; 0x30
   1269c:	add	r3, r2, r3
   126a0:	lsl	r1, ip, #2
   126a4:	and	r1, r1, #60	; 0x3c
   126a8:	ldrb	ip, [r3, ip, lsr #4]
   126ac:	ldrb	r2, [r2, r1]
   126b0:	mov	r3, #61	; 0x3d
   126b4:	strb	ip, [lr, #1]
   126b8:	strb	r2, [lr, #2]
   126bc:	strb	r3, [lr, #3]
   126c0:	add	lr, lr, #4
   126c4:	mov	r3, #0
   126c8:	strb	r3, [lr]
   126cc:	pop	{r4, r5, r6, r7, r8, pc}
   126d0:	mov	r0, #0
   126d4:	bx	lr
   126d8:	lsl	r3, r3, #4
   126dc:	and	r3, r3, #48	; 0x30
   126e0:	mov	r1, #61	; 0x3d
   126e4:	ldrb	r3, [r2, r3]
   126e8:	strb	r1, [lr, #2]
   126ec:	strb	r1, [lr, #3]
   126f0:	strb	r3, [lr, #1]
   126f4:	add	lr, lr, #4
   126f8:	b	126c4 <rb_base64_encode+0x10c>
   126fc:	bl	4988 <rb_outofmemory@plt>
   12700:	.word	0x55555556
   12704:	.word	0x000091b4
   12708:	.word	0x00009138

0001270c <rb_base64_decode>:
   1270c:	push	{r4, r5, r6, r7, r8, lr}
   12710:	mov	r4, r1
   12714:	mov	r5, r0
   12718:	add	r1, r1, #1
   1271c:	mov	r0, #1
   12720:	mov	r6, r2
   12724:	bl	45ec <calloc@plt>
   12728:	subs	r2, r0, #0
   1272c:	beq	12840 <rb_base64_decode+0x134>
   12730:	ldr	r0, [pc, #276]	; 1284c <rb_base64_decode+0x140>
   12734:	mov	lr, #0
   12738:	mov	r1, r4
   1273c:	mov	ip, lr
   12740:	add	r0, pc, r0
   12744:	b	12780 <rb_base64_decode+0x74>
   12748:	cmp	r4, #3
   1274c:	beq	127d8 <rb_base64_decode+0xcc>
   12750:	cmp	r4, #1
   12754:	addeq	r7, lr, #1
   12758:	ldrbeq	r4, [r2, lr]
   1275c:	lsleq	r8, r3, #4
   12760:	lslne	r3, r3, #2
   12764:	orreq	r3, r4, r3, asr #4
   12768:	strbeq	r3, [r2, lr]
   1276c:	moveq	lr, r7
   12770:	strbne	r3, [r2, lr]
   12774:	strbeq	r8, [r2, r7]
   12778:	add	ip, ip, #1
   1277c:	sub	r1, r1, #1
   12780:	ldrb	r3, [r5], #1
   12784:	cmp	r3, #0
   12788:	beq	12814 <rb_base64_decode+0x108>
   1278c:	cmp	r1, #0
   12790:	ble	127ec <rb_base64_decode+0xe0>
   12794:	cmp	r3, #61	; 0x3d
   12798:	beq	127f4 <rb_base64_decode+0xe8>
   1279c:	add	r3, r0, r3, lsl #1
   127a0:	ldrsh	r3, [r3, #68]	; 0x44
   127a4:	cmp	r3, #0
   127a8:	blt	1277c <rb_base64_decode+0x70>
   127ac:	and	r4, ip, #3
   127b0:	cmp	r4, #2
   127b4:	bne	12748 <rb_base64_decode+0x3c>
   127b8:	ldrb	r4, [r2, lr]
   127bc:	add	r7, lr, #1
   127c0:	lsl	r8, r3, #6
   127c4:	orr	r3, r4, r3, asr #2
   127c8:	strb	r3, [r2, lr]
   127cc:	strb	r8, [r2, r7]
   127d0:	mov	lr, r7
   127d4:	b	12778 <rb_base64_decode+0x6c>
   127d8:	ldrb	r4, [r2, lr]
   127dc:	orr	r3, r4, r3
   127e0:	strb	r3, [r2, lr]
   127e4:	add	lr, lr, #1
   127e8:	b	12778 <rb_base64_decode+0x6c>
   127ec:	cmp	r3, #61	; 0x3d
   127f0:	bne	12814 <rb_base64_decode+0x108>
   127f4:	and	ip, ip, #3
   127f8:	cmp	ip, #2
   127fc:	beq	12844 <rb_base64_decode+0x138>
   12800:	cmp	ip, #3
   12804:	bne	12828 <rb_base64_decode+0x11c>
   12808:	mov	r3, lr
   1280c:	mov	r1, #0
   12810:	strb	r1, [r2, r3]
   12814:	mov	r3, #0
   12818:	mov	r0, r2
   1281c:	str	lr, [r6]
   12820:	strb	r3, [r2, lr]
   12824:	pop	{r4, r5, r6, r7, r8, pc}
   12828:	cmp	ip, #1
   1282c:	bne	12814 <rb_base64_decode+0x108>
   12830:	mov	r0, r2
   12834:	bl	46f4 <free@plt>
   12838:	mov	r0, #0
   1283c:	pop	{r4, r5, r6, r7, r8, pc}
   12840:	bl	4988 <rb_outofmemory@plt>
   12844:	add	r3, lr, #1
   12848:	b	1280c <rb_base64_decode+0x100>
   1284c:	.word	0x00009078

00012850 <rb_outofmemory>:
   12850:	ldr	r3, [pc, #52]	; 1288c <rb_outofmemory+0x3c>
   12854:	push	{r4, lr}
   12858:	add	r3, pc, r3
   1285c:	ldr	r2, [r3]
   12860:	cmp	r2, #0
   12864:	beq	1286c <rb_outofmemory+0x1c>
   12868:	bl	43c4 <abort@plt>
   1286c:	ldr	r0, [pc, #28]	; 12890 <rb_outofmemory+0x40>
   12870:	mov	r2, #1
   12874:	add	r0, pc, r0
   12878:	str	r2, [r3]
   1287c:	bl	491c <rb_lib_log@plt>
   12880:	ldr	r0, [pc, #12]	; 12894 <rb_outofmemory+0x44>
   12884:	add	r0, pc, r0
   12888:	bl	4a60 <rb_lib_restart@plt>
   1288c:	.word	0x0002db00
   12890:	.word	0x00009300
   12894:	.word	0x00009314

00012898 <rb_linebuf_copy_line.isra.2>:
   12898:	push	{r4, r5, r6, r7, r8, lr}
   1289c:	mov	ip, #0
   128a0:	ldrb	lr, [r1, #1025]	; 0x401
   128a4:	ldr	r8, [r1, #1028]	; 0x404
   128a8:	strb	ip, [r1, #1026]	; 0x402
   128ac:	cmp	lr, #1
   128b0:	add	r7, r1, r8
   128b4:	moveq	r4, ip
   128b8:	beq	129bc <rb_linebuf_copy_line.isra.2+0x124>
   128bc:	cmp	r3, ip
   128c0:	beq	12a94 <rb_linebuf_copy_line.isra.2+0x1fc>
   128c4:	ldrb	lr, [r2]
   128c8:	cmp	lr, #13
   128cc:	cmpne	lr, #10
   128d0:	addne	r5, r2, #1
   128d4:	movne	ip, r3
   128d8:	bne	128f4 <rb_linebuf_copy_line.isra.2+0x5c>
   128dc:	b	12a9c <rb_linebuf_copy_line.isra.2+0x204>
   128e0:	ldrb	r6, [r5]
   128e4:	add	r5, lr, #1
   128e8:	cmp	r6, #13
   128ec:	cmpne	r6, #10
   128f0:	beq	12a48 <rb_linebuf_copy_line.isra.2+0x1b0>
   128f4:	subs	ip, ip, #1
   128f8:	mov	lr, r5
   128fc:	bne	128e0 <rb_linebuf_copy_line.isra.2+0x48>
   12900:	sub	r4, r3, ip
   12904:	cmn	r4, #1
   12908:	beq	129bc <rb_linebuf_copy_line.isra.2+0x124>
   1290c:	rsb	r8, r8, #1020	; 0x3fc
   12910:	add	r8, r8, #2
   12914:	cmp	r8, r4
   12918:	mov	r5, r1
   1291c:	mov	r6, r0
   12920:	mov	r1, r2
   12924:	blt	129c4 <rb_linebuf_copy_line.isra.2+0x12c>
   12928:	mov	r2, r4
   1292c:	mov	r0, r7
   12930:	bl	4808 <memcpy@plt>
   12934:	add	r3, r7, r4
   12938:	mov	r1, #0
   1293c:	strb	r1, [r7, r4]
   12940:	ldrb	r2, [r3, #-1]
   12944:	cmp	r2, #13
   12948:	cmpne	r2, #10
   1294c:	movne	r0, #1
   12950:	moveq	r0, #0
   12954:	bne	12a70 <rb_linebuf_copy_line.isra.2+0x1d8>
   12958:	cmp	r4, r1
   1295c:	beq	12998 <rb_linebuf_copy_line.isra.2+0x100>
   12960:	cmp	r2, #13
   12964:	cmpne	r2, #10
   12968:	movne	r2, r4
   1296c:	bne	1299c <rb_linebuf_copy_line.isra.2+0x104>
   12970:	sub	r3, r3, #1
   12974:	mov	r2, r4
   12978:	b	1298c <rb_linebuf_copy_line.isra.2+0xf4>
   1297c:	ldrb	r1, [r3, #-1]!
   12980:	cmp	r1, #10
   12984:	cmpne	r1, #13
   12988:	bne	1299c <rb_linebuf_copy_line.isra.2+0x104>
   1298c:	subs	r2, r2, #1
   12990:	strb	r0, [r3]
   12994:	bne	1297c <rb_linebuf_copy_line.isra.2+0xe4>
   12998:	mov	r2, #0
   1299c:	mov	r3, #1
   129a0:	strb	r3, [r5, #1025]	; 0x401
   129a4:	ldr	r3, [r6]
   129a8:	add	r3, r3, r2
   129ac:	str	r3, [r6]
   129b0:	ldr	r3, [r5, #1028]	; 0x404
   129b4:	add	r2, r3, r2
   129b8:	str	r2, [r5, #1028]	; 0x404
   129bc:	mov	r0, r4
   129c0:	pop	{r4, r5, r6, r7, r8, pc}
   129c4:	mov	r0, r7
   129c8:	mov	r2, r8
   129cc:	bl	4808 <memcpy@plt>
   129d0:	mov	r0, #0
   129d4:	add	r3, r5, #1020	; 0x3fc
   129d8:	cmp	r8, #0
   129dc:	strb	r0, [r5, #1022]	; 0x3fe
   129e0:	add	r3, r3, #1
   129e4:	beq	12a20 <rb_linebuf_copy_line.isra.2+0x188>
   129e8:	ldrb	r2, [r5, #1021]	; 0x3fd
   129ec:	cmp	r2, #10
   129f0:	cmpne	r2, #13
   129f4:	bne	12a20 <rb_linebuf_copy_line.isra.2+0x188>
   129f8:	rsb	r1, r8, #1
   129fc:	add	r1, r3, r1
   12a00:	b	12a14 <rb_linebuf_copy_line.isra.2+0x17c>
   12a04:	ldrb	r2, [r3, #-1]!
   12a08:	cmp	r2, #10
   12a0c:	cmpne	r2, #13
   12a10:	bne	12a20 <rb_linebuf_copy_line.isra.2+0x188>
   12a14:	cmp	r3, r1
   12a18:	strb	r0, [r3]
   12a1c:	bne	12a04 <rb_linebuf_copy_line.isra.2+0x16c>
   12a20:	ldr	r2, [pc, #144]	; 12ab8 <rb_linebuf_copy_line.isra.2+0x220>
   12a24:	mov	r3, #1
   12a28:	str	r2, [r5, #1028]	; 0x404
   12a2c:	strb	r3, [r5, #1025]	; 0x401
   12a30:	ldr	r3, [r6]
   12a34:	mov	r0, r4
   12a38:	add	r3, r3, #1020	; 0x3fc
   12a3c:	add	r3, r3, #2
   12a40:	str	r3, [r6]
   12a44:	pop	{r4, r5, r6, r7, r8, pc}
   12a48:	cmp	r6, #10
   12a4c:	cmpne	r6, #13
   12a50:	bne	12900 <rb_linebuf_copy_line.isra.2+0x68>
   12a54:	subs	ip, ip, #1
   12a58:	beq	12900 <rb_linebuf_copy_line.isra.2+0x68>
   12a5c:	ldrb	r5, [lr, #1]!
   12a60:	cmp	r5, #13
   12a64:	cmpne	r5, #10
   12a68:	beq	12a54 <rb_linebuf_copy_line.isra.2+0x1bc>
   12a6c:	b	12900 <rb_linebuf_copy_line.isra.2+0x68>
   12a70:	ldr	r3, [r6]
   12a74:	mov	r0, r4
   12a78:	add	r3, r3, r4
   12a7c:	str	r3, [r6]
   12a80:	ldr	r3, [r5, #1028]	; 0x404
   12a84:	strb	r1, [r5, #1025]	; 0x401
   12a88:	add	r3, r3, r4
   12a8c:	str	r3, [r5, #1028]	; 0x404
   12a90:	pop	{r4, r5, r6, r7, r8, pc}
   12a94:	mov	r4, r3
   12a98:	b	1290c <rb_linebuf_copy_line.isra.2+0x74>
   12a9c:	cmp	lr, #10
   12aa0:	cmpne	lr, #13
   12aa4:	moveq	lr, r2
   12aa8:	moveq	ip, r3
   12aac:	beq	12a54 <rb_linebuf_copy_line.isra.2+0x1bc>
   12ab0:	mov	r4, ip
   12ab4:	b	1290c <rb_linebuf_copy_line.isra.2+0x74>
   12ab8:	.word	0x000003fe

00012abc <rb_linebuf_copy_raw.isra.3>:
   12abc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ac0:	mov	ip, #1
   12ac4:	ldrb	lr, [r1, #1025]	; 0x401
   12ac8:	ldr	r7, [r1, #1028]	; 0x404
   12acc:	strb	ip, [r1, #1026]	; 0x402
   12ad0:	cmp	lr, ip
   12ad4:	add	r6, r1, r7
   12ad8:	moveq	r4, #0
   12adc:	beq	12b94 <rb_linebuf_copy_raw.isra.3+0xd8>
   12ae0:	cmp	r3, #0
   12ae4:	beq	12c24 <rb_linebuf_copy_raw.isra.3+0x168>
   12ae8:	ldrb	ip, [r2]
   12aec:	cmp	ip, #13
   12af0:	cmpne	ip, #10
   12af4:	addne	r4, r2, #1
   12af8:	movne	ip, r3
   12afc:	bne	12b18 <rb_linebuf_copy_raw.isra.3+0x5c>
   12b00:	b	12c2c <rb_linebuf_copy_raw.isra.3+0x170>
   12b04:	ldrb	r5, [r4]
   12b08:	add	r4, lr, #1
   12b0c:	cmp	r5, #13
   12b10:	cmpne	r5, #10
   12b14:	beq	12bd8 <rb_linebuf_copy_raw.isra.3+0x11c>
   12b18:	subs	ip, ip, #1
   12b1c:	mov	lr, r4
   12b20:	bne	12b04 <rb_linebuf_copy_raw.isra.3+0x48>
   12b24:	sub	r4, r3, ip
   12b28:	cmn	r4, #1
   12b2c:	beq	12b94 <rb_linebuf_copy_raw.isra.3+0xd8>
   12b30:	ldr	r9, [pc, #268]	; 12c44 <rb_linebuf_copy_raw.isra.3+0x188>
   12b34:	mov	r5, r1
   12b38:	sub	r7, r9, r7
   12b3c:	cmp	r7, r4
   12b40:	mov	r8, r0
   12b44:	mov	r1, r2
   12b48:	blt	12b9c <rb_linebuf_copy_raw.isra.3+0xe0>
   12b4c:	mov	r2, r4
   12b50:	mov	r0, r6
   12b54:	bl	4808 <memcpy@plt>
   12b58:	add	r3, r6, r4
   12b5c:	mov	r2, #0
   12b60:	strb	r2, [r6, r4]
   12b64:	ldrb	r3, [r3, #-1]
   12b68:	cmp	r3, #13
   12b6c:	cmpne	r3, #10
   12b70:	bne	12c00 <rb_linebuf_copy_raw.isra.3+0x144>
   12b74:	mov	r3, #1
   12b78:	strb	r3, [r5, #1025]	; 0x401
   12b7c:	ldr	r3, [r8]
   12b80:	add	r3, r3, r4
   12b84:	str	r3, [r8]
   12b88:	ldr	r3, [r5, #1028]	; 0x404
   12b8c:	add	r3, r3, r4
   12b90:	str	r3, [r5, #1028]	; 0x404
   12b94:	mov	r0, r4
   12b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b9c:	mov	r2, r7
   12ba0:	mov	r0, r6
   12ba4:	bl	4808 <memcpy@plt>
   12ba8:	mov	r2, #0
   12bac:	mov	r3, #1
   12bb0:	str	r9, [r5, #1028]	; 0x404
   12bb4:	strb	r2, [r5, #1022]	; 0x3fe
   12bb8:	strb	r3, [r5, #1025]	; 0x401
   12bbc:	ldr	r3, [r8]
   12bc0:	mov	r4, r7
   12bc4:	add	r3, r3, #1020	; 0x3fc
   12bc8:	add	r3, r3, #2
   12bcc:	str	r3, [r8]
   12bd0:	mov	r0, r4
   12bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd8:	cmp	r5, #13
   12bdc:	cmpne	r5, #10
   12be0:	bne	12b24 <rb_linebuf_copy_raw.isra.3+0x68>
   12be4:	subs	ip, ip, #1
   12be8:	beq	12b24 <rb_linebuf_copy_raw.isra.3+0x68>
   12bec:	ldrb	r4, [lr, #1]!
   12bf0:	cmp	r4, #13
   12bf4:	cmpne	r4, #10
   12bf8:	beq	12be4 <rb_linebuf_copy_raw.isra.3+0x128>
   12bfc:	b	12b24 <rb_linebuf_copy_raw.isra.3+0x68>
   12c00:	ldr	r3, [r8]
   12c04:	mov	r0, r4
   12c08:	add	r3, r3, r4
   12c0c:	str	r3, [r8]
   12c10:	ldr	r3, [r5, #1028]	; 0x404
   12c14:	strb	r2, [r5, #1025]	; 0x401
   12c18:	add	r3, r3, r4
   12c1c:	str	r3, [r5, #1028]	; 0x404
   12c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c24:	mov	r4, #0
   12c28:	b	12b30 <rb_linebuf_copy_raw.isra.3+0x74>
   12c2c:	cmp	ip, #13
   12c30:	cmpne	ip, #10
   12c34:	bne	12c24 <rb_linebuf_copy_raw.isra.3+0x168>
   12c38:	mov	lr, r2
   12c3c:	mov	ip, r3
   12c40:	b	12be4 <rb_linebuf_copy_raw.isra.3+0x128>
   12c44:	.word	0x000003fe

00012c48 <rb_linebuf_init>:
   12c48:	ldr	r2, [pc, #32]	; 12c70 <rb_linebuf_init+0x28>
   12c4c:	mov	r1, r0
   12c50:	push	{r4, lr}
   12c54:	add	r2, pc, r2
   12c58:	ldr	r0, [pc, #20]	; 12c74 <rb_linebuf_init+0x2c>
   12c5c:	bl	4ab4 <rb_bh_create@plt>
   12c60:	ldr	r3, [pc, #16]	; 12c78 <rb_linebuf_init+0x30>
   12c64:	add	r3, pc, r3
   12c68:	str	r0, [r3]
   12c6c:	pop	{r4, pc}
   12c70:	.word	0x00008f54
   12c74:	.word	0x0000040c
   12c78:	.word	0x0002d6f8

00012c7c <rb_linebuf_newbuf>:
   12c7c:	mov	r3, #0
   12c80:	str	r3, [r0]
   12c84:	str	r3, [r0, #4]
   12c88:	str	r3, [r0, #8]
   12c8c:	str	r3, [r0, #12]
   12c90:	str	r3, [r0, #16]
   12c94:	str	r3, [r0, #20]
   12c98:	str	r3, [r0, #24]
   12c9c:	bx	lr

00012ca0 <rb_linebuf_donebuf>:
   12ca0:	push	{r4, r5, r6, r7, r8, lr}
   12ca4:	mov	r4, r0
   12ca8:	ldr	r7, [pc, #180]	; 12d64 <rb_linebuf_donebuf+0xc4>
   12cac:	mov	r6, #0
   12cb0:	add	r7, pc, r7
   12cb4:	ldr	r0, [r4]
   12cb8:	cmp	r0, #0
   12cbc:	beq	12d60 <rb_linebuf_donebuf+0xc0>
   12cc0:	ldr	r3, [r0, #8]
   12cc4:	ldr	r2, [r0, #4]
   12cc8:	cmp	r3, #0
   12ccc:	ldr	r5, [r0]
   12cd0:	strne	r2, [r3, #4]
   12cd4:	streq	r2, [r4, #4]
   12cd8:	ldr	r2, [r0, #4]
   12cdc:	cmp	r2, #0
   12ce0:	strne	r3, [r2, #8]
   12ce4:	streq	r3, [r4]
   12ce8:	ldr	r3, [r4, #8]
   12cec:	str	r6, [r0, #4]
   12cf0:	sub	r3, r3, #1
   12cf4:	str	r6, [r0, #8]
   12cf8:	str	r3, [r4, #8]
   12cfc:	bl	4844 <rb_free_rb_dlink_node@plt>
   12d00:	ldr	r3, [r5, #1032]	; 0x408
   12d04:	ldr	ip, [r5, #1028]	; 0x404
   12d08:	ldr	r0, [r4, #16]
   12d0c:	ldr	r1, [r4, #12]
   12d10:	ldr	r2, [r4, #24]
   12d14:	sub	r3, r3, #1
   12d18:	sub	r0, r0, #1
   12d1c:	sub	r1, r1, ip
   12d20:	sub	r2, r2, #1
   12d24:	cmp	r3, #0
   12d28:	str	r0, [r4, #16]
   12d2c:	str	r1, [r4, #12]
   12d30:	str	r2, [r4, #24]
   12d34:	str	r3, [r5, #1032]	; 0x408
   12d38:	bne	12cb4 <rb_linebuf_donebuf+0x14>
   12d3c:	ldr	r3, [r7, #4]
   12d40:	mov	r1, r5
   12d44:	sub	r3, r3, #1
   12d48:	ldr	r0, [r7]
   12d4c:	str	r3, [r7, #4]
   12d50:	bl	48c8 <rb_bh_free@plt>
   12d54:	ldr	r0, [r4]
   12d58:	cmp	r0, #0
   12d5c:	bne	12cc0 <rb_linebuf_donebuf+0x20>
   12d60:	pop	{r4, r5, r6, r7, r8, pc}
   12d64:	.word	0x0002d6ac

00012d68 <rb_linebuf_parse>:
   12d68:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d6c:	mov	r4, r0
   12d70:	ldr	r8, [r0, #4]
   12d74:	mov	r6, r1
   12d78:	cmp	r8, #0
   12d7c:	mov	r5, r2
   12d80:	mov	r9, r3
   12d84:	beq	12dc4 <rb_linebuf_parse+0x5c>
   12d88:	cmp	r9, #0
   12d8c:	mov	r3, r2
   12d90:	add	r0, r0, #12
   12d94:	mov	r2, r1
   12d98:	ldr	r1, [r8]
   12d9c:	beq	12eac <rb_linebuf_parse+0x144>
   12da0:	bl	12abc <rb_linebuf_copy_raw.isra.3>
   12da4:	cmn	r0, #1
   12da8:	beq	12e90 <rb_linebuf_parse+0x128>
   12dac:	cmp	r0, r5
   12db0:	moveq	r8, #1
   12db4:	beq	12e94 <rb_linebuf_parse+0x12c>
   12db8:	sub	r5, r5, r0
   12dbc:	add	r6, r6, r0
   12dc0:	mov	r8, #1
   12dc4:	cmp	r5, #0
   12dc8:	ble	12e94 <rb_linebuf_parse+0x12c>
   12dcc:	ldr	r7, [pc, #224]	; 12eb4 <rb_linebuf_parse+0x14c>
   12dd0:	add	sl, r4, #12
   12dd4:	add	r7, pc, r7
   12dd8:	b	12dfc <rb_linebuf_parse+0x94>
   12ddc:	bl	12898 <rb_linebuf_copy_line.isra.2>
   12de0:	cmn	r0, #1
   12de4:	beq	12e90 <rb_linebuf_parse+0x128>
   12de8:	sub	r5, r5, r0
   12dec:	cmp	r5, #0
   12df0:	add	r6, r6, r0
   12df4:	add	r8, r8, #1
   12df8:	ble	12e94 <rb_linebuf_parse+0x12c>
   12dfc:	ldr	r0, [r7]
   12e00:	bl	4958 <rb_bh_alloc@plt>
   12e04:	subs	fp, r0, #0
   12e08:	beq	12e6c <rb_linebuf_parse+0x104>
   12e0c:	ldr	r3, [r7, #4]
   12e10:	add	r3, r3, #1
   12e14:	str	r3, [r7, #4]
   12e18:	bl	4b80 <rb_make_rb_dlink_node@plt>
   12e1c:	ldr	r3, [r4, #4]
   12e20:	mov	r2, #0
   12e24:	cmp	r3, #0
   12e28:	str	fp, [r0]
   12e2c:	str	r2, [r0, #8]
   12e30:	str	r3, [r0, #4]
   12e34:	strne	r0, [r3, #8]
   12e38:	beq	12e9c <rb_linebuf_parse+0x134>
   12e3c:	ldr	lr, [r4, #8]
   12e40:	ldr	ip, [fp, #1032]	; 0x408
   12e44:	ldr	r2, [r4, #16]
   12e48:	ldr	r3, [r4, #24]
   12e4c:	add	lr, lr, #1
   12e50:	add	ip, ip, #1
   12e54:	add	r2, r2, #1
   12e58:	add	r3, r3, #1
   12e5c:	stmib	r4, {r0, lr}
   12e60:	str	ip, [fp, #1032]	; 0x408
   12e64:	str	r2, [r4, #16]
   12e68:	str	r3, [r4, #24]
   12e6c:	cmp	r9, #0
   12e70:	mov	r1, fp
   12e74:	mov	r3, r5
   12e78:	mov	r2, r6
   12e7c:	mov	r0, sl
   12e80:	beq	12ddc <rb_linebuf_parse+0x74>
   12e84:	bl	12abc <rb_linebuf_copy_raw.isra.3>
   12e88:	cmn	r0, #1
   12e8c:	bne	12de8 <rb_linebuf_parse+0x80>
   12e90:	mvn	r8, #0
   12e94:	mov	r0, r8
   12e98:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e9c:	ldr	r3, [r4]
   12ea0:	cmp	r3, #0
   12ea4:	streq	r0, [r4]
   12ea8:	b	12e3c <rb_linebuf_parse+0xd4>
   12eac:	bl	12898 <rb_linebuf_copy_line.isra.2>
   12eb0:	b	12da4 <rb_linebuf_parse+0x3c>
   12eb4:	.word	0x0002d588

00012eb8 <rb_linebuf_get>:
   12eb8:	push	{r4, r5, r6, r7, r8, lr}
   12ebc:	ldr	r4, [r0]
   12ec0:	cmp	r4, #0
   12ec4:	beq	13000 <rb_linebuf_get+0x148>
   12ec8:	cmp	r3, #0
   12ecc:	ldr	r6, [r4]
   12ed0:	bne	12ee0 <rb_linebuf_get+0x28>
   12ed4:	ldrb	r4, [r6, #1025]	; 0x401
   12ed8:	cmp	r4, #0
   12edc:	beq	13000 <rb_linebuf_get+0x148>
   12ee0:	ldr	r4, [r6, #1028]	; 0x404
   12ee4:	ldrb	r3, [r6, #1026]	; 0x402
   12ee8:	cmp	r4, r2
   12eec:	subgt	r4, r2, #1
   12ef0:	cmp	r3, #0
   12ef4:	mov	r7, r1
   12ef8:	mov	r5, r0
   12efc:	mov	r1, r6
   12f00:	beq	13008 <rb_linebuf_get+0x150>
   12f04:	ldr	r3, [sp, #24]
   12f08:	cmp	r3, #0
   12f0c:	bne	13030 <rb_linebuf_get+0x178>
   12f10:	cmp	r4, #0
   12f14:	beq	12f4c <rb_linebuf_get+0x94>
   12f18:	ldrb	r3, [r6]
   12f1c:	cmp	r3, #10
   12f20:	cmpne	r3, #13
   12f24:	bne	13044 <rb_linebuf_get+0x18c>
   12f28:	add	r3, r6, #1
   12f2c:	b	12f40 <rb_linebuf_get+0x88>
   12f30:	ldrb	r2, [r3], #1
   12f34:	cmp	r2, #10
   12f38:	cmpne	r2, #13
   12f3c:	bne	13044 <rb_linebuf_get+0x18c>
   12f40:	subs	r4, r4, #1
   12f44:	mov	r1, r3
   12f48:	bne	12f30 <rb_linebuf_get+0x78>
   12f4c:	ldr	r4, [sp, #24]
   12f50:	mov	r8, #0
   12f54:	mov	r2, r8
   12f58:	mov	r0, r7
   12f5c:	bl	4808 <memcpy@plt>
   12f60:	mov	r3, #0
   12f64:	strb	r3, [r7, r8]
   12f68:	ldr	r0, [r5]
   12f6c:	ldmib	r0, {r2, r3}
   12f70:	cmp	r3, #0
   12f74:	strne	r2, [r3, #4]
   12f78:	streq	r2, [r5, #4]
   12f7c:	ldr	r2, [r0, #4]
   12f80:	cmp	r2, #0
   12f84:	strne	r3, [r2, #8]
   12f88:	streq	r3, [r5]
   12f8c:	ldr	r3, [r5, #8]
   12f90:	mov	r2, #0
   12f94:	sub	r3, r3, #1
   12f98:	str	r2, [r0, #4]
   12f9c:	str	r2, [r0, #8]
   12fa0:	str	r3, [r5, #8]
   12fa4:	bl	4844 <rb_free_rb_dlink_node@plt>
   12fa8:	ldr	r3, [r6, #1032]	; 0x408
   12fac:	ldr	ip, [r6, #1028]	; 0x404
   12fb0:	ldr	r0, [r5, #16]
   12fb4:	ldr	r1, [r5, #12]
   12fb8:	ldr	r2, [r5, #24]
   12fbc:	sub	r3, r3, #1
   12fc0:	sub	r0, r0, #1
   12fc4:	sub	r1, r1, ip
   12fc8:	sub	r2, r2, #1
   12fcc:	cmp	r3, #0
   12fd0:	str	r0, [r5, #16]
   12fd4:	str	r1, [r5, #12]
   12fd8:	str	r2, [r5, #24]
   12fdc:	str	r3, [r6, #1032]	; 0x408
   12fe0:	bne	13000 <rb_linebuf_get+0x148>
   12fe4:	ldr	r3, [pc, #152]	; 13084 <rb_linebuf_get+0x1cc>
   12fe8:	mov	r1, r6
   12fec:	add	r3, pc, r3
   12ff0:	ldm	r3, {r0, r2}
   12ff4:	sub	r2, r2, #1
   12ff8:	str	r2, [r3, #4]
   12ffc:	bl	48c8 <rb_bh_free@plt>
   13000:	mov	r0, r4
   13004:	pop	{r4, r5, r6, r7, r8, pc}
   13008:	mov	r2, r4
   1300c:	mov	r1, r6
   13010:	mov	r0, r7
   13014:	bl	4808 <memcpy@plt>
   13018:	ldr	r3, [sp, #24]
   1301c:	mov	r8, r4
   13020:	cmp	r3, #0
   13024:	moveq	r3, #0
   13028:	strbeq	r3, [r7, r8]
   1302c:	b	12f68 <rb_linebuf_get+0xb0>
   13030:	mov	r0, r7
   13034:	mov	r2, r4
   13038:	mov	r1, r6
   1303c:	bl	4808 <memcpy@plt>
   13040:	b	12f68 <rb_linebuf_get+0xb0>
   13044:	sub	r3, r4, #1
   13048:	add	r0, r1, r3
   1304c:	ldrb	r2, [r1, r3]
   13050:	cmp	r2, #10
   13054:	cmpne	r2, #13
   13058:	beq	13074 <rb_linebuf_get+0x1bc>
   1305c:	b	1307c <rb_linebuf_get+0x1c4>
   13060:	ldrb	r2, [r0, #-1]!
   13064:	sub	r3, r3, #1
   13068:	cmp	r2, #10
   1306c:	cmpne	r2, #13
   13070:	bne	1307c <rb_linebuf_get+0x1c4>
   13074:	subs	r4, r3, #0
   13078:	bne	13060 <rb_linebuf_get+0x1a8>
   1307c:	mov	r8, r4
   13080:	b	12f54 <rb_linebuf_get+0x9c>
   13084:	.word	0x0002d370

00013088 <rb_linebuf_attach>:
   13088:	push	{r4, r5, r6, r7, r8, lr}
   1308c:	ldr	r6, [r1]
   13090:	cmp	r6, #0
   13094:	popeq	{r4, r5, r6, r7, r8, pc}
   13098:	mov	r4, r0
   1309c:	mov	r7, #0
   130a0:	b	130f0 <rb_linebuf_attach+0x68>
   130a4:	ldr	lr, [r4, #8]
   130a8:	ldr	r6, [r6, #8]
   130ac:	ldr	r3, [r5, #1032]	; 0x408
   130b0:	ldr	r8, [r5, #1028]	; 0x404
   130b4:	ldr	ip, [r4, #16]
   130b8:	ldr	r1, [r4, #12]
   130bc:	ldr	r2, [r4, #24]
   130c0:	add	lr, lr, #1
   130c4:	add	ip, ip, #1
   130c8:	add	r1, r1, r8
   130cc:	add	r2, r2, #1
   130d0:	add	r3, r3, #1
   130d4:	cmp	r6, #0
   130d8:	stmib	r4, {r0, lr}
   130dc:	str	ip, [r4, #16]
   130e0:	str	r1, [r4, #12]
   130e4:	str	r2, [r4, #24]
   130e8:	str	r3, [r5, #1032]	; 0x408
   130ec:	beq	13120 <rb_linebuf_attach+0x98>
   130f0:	ldr	r5, [r6]
   130f4:	bl	4b80 <rb_make_rb_dlink_node@plt>
   130f8:	ldr	r3, [r4, #4]
   130fc:	cmp	r3, #0
   13100:	str	r5, [r0]
   13104:	stmib	r0, {r3, r7}
   13108:	strne	r0, [r3, #8]
   1310c:	bne	130a4 <rb_linebuf_attach+0x1c>
   13110:	ldr	r3, [r4]
   13114:	cmp	r3, #0
   13118:	streq	r0, [r4]
   1311c:	b	130a4 <rb_linebuf_attach+0x1c>
   13120:	pop	{r4, r5, r6, r7, r8, pc}

00013124 <rb_linebuf_put>:
   13124:	push	{r4, r5, r6, r7, r8, lr}
   13128:	mov	r4, r0
   1312c:	ldr	r6, [pc, #252]	; 13230 <rb_linebuf_put+0x10c>
   13130:	mov	r7, r1
   13134:	add	r6, pc, r6
   13138:	ldr	r0, [r6]
   1313c:	bl	4958 <rb_bh_alloc@plt>
   13140:	subs	r5, r0, #0
   13144:	beq	131a8 <rb_linebuf_put+0x84>
   13148:	ldr	r3, [r6, #4]
   1314c:	add	r3, r3, #1
   13150:	str	r3, [r6, #4]
   13154:	bl	4b80 <rb_make_rb_dlink_node@plt>
   13158:	ldr	r3, [r4, #4]
   1315c:	mov	r2, #0
   13160:	cmp	r3, r2
   13164:	str	r5, [r0]
   13168:	str	r2, [r0, #8]
   1316c:	str	r3, [r0, #4]
   13170:	strne	r0, [r3, #8]
   13174:	beq	13220 <rb_linebuf_put+0xfc>
   13178:	ldr	ip, [r4, #8]
   1317c:	ldr	r1, [r5, #1032]	; 0x408
   13180:	ldr	r2, [r4, #16]
   13184:	ldr	r3, [r4, #24]
   13188:	add	ip, ip, #1
   1318c:	add	r1, r1, #1
   13190:	add	r2, r2, #1
   13194:	add	r3, r3, #1
   13198:	stmib	r4, {r0, ip}
   1319c:	str	r1, [r5, #1032]	; 0x408
   131a0:	str	r2, [r4, #16]
   131a4:	str	r3, [r4, #24]
   131a8:	mov	r2, r7
   131ac:	ldr	r1, [pc, #128]	; 13234 <rb_linebuf_put+0x110>
   131b0:	mov	r0, r5
   131b4:	bl	4694 <rb_fsnprint@plt>
   131b8:	cmp	r0, #0
   131bc:	ble	1320c <rb_linebuf_put+0xe8>
   131c0:	ldr	r3, [pc, #112]	; 13238 <rb_linebuf_put+0x114>
   131c4:	cmp	r0, r3
   131c8:	movcs	r0, r3
   131cc:	add	r2, r0, #2
   131d0:	mov	r1, r2
   131d4:	add	ip, r0, #1
   131d8:	mov	r3, #13
   131dc:	strb	r3, [r5, r0]
   131e0:	mov	lr, #10
   131e4:	mov	r3, #1
   131e8:	mov	r0, #0
   131ec:	strb	lr, [r5, ip]
   131f0:	strb	r0, [r5, r2]
   131f4:	strb	r3, [r5, #1025]	; 0x401
   131f8:	ldr	r3, [r4, #12]
   131fc:	str	r1, [r5, #1028]	; 0x404
   13200:	add	r3, r3, r2
   13204:	str	r3, [r4, #12]
   13208:	pop	{r4, r5, r6, r7, r8, pc}
   1320c:	mov	r1, #2
   13210:	mov	r2, r1
   13214:	mov	ip, #1
   13218:	mov	r0, #0
   1321c:	b	131d8 <rb_linebuf_put+0xb4>
   13220:	ldr	r3, [r4]
   13224:	cmp	r3, #0
   13228:	streq	r0, [r4]
   1322c:	b	13178 <rb_linebuf_put+0x54>
   13230:	.word	0x0002d228
   13234:	.word	0x000003ff
   13238:	.word	0x000003fe

0001323c <rb_linebuf_flush>:
   1323c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13240:	sub	sp, sp, #12
   13244:	mov	r4, r1
   13248:	mov	r7, r0
   1324c:	bl	44b4 <rb_fd_ssl@plt>
   13250:	subs	r6, r0, #0
   13254:	beq	132c0 <rb_linebuf_flush+0x84>
   13258:	ldr	r3, [r4]
   1325c:	cmp	r3, #0
   13260:	beq	1354c <rb_linebuf_flush+0x310>
   13264:	ldr	r5, [r3]
   13268:	ldrb	r3, [r5, #1025]	; 0x401
   1326c:	cmp	r3, #0
   13270:	beq	1354c <rb_linebuf_flush+0x310>
   13274:	ldr	r1, [r4, #20]
   13278:	ldr	r2, [r5, #1028]	; 0x404
   1327c:	mov	r0, r7
   13280:	sub	r2, r2, r1
   13284:	add	r1, r5, r1
   13288:	bl	4658 <rb_write@plt>
   1328c:	subs	r3, r0, #0
   13290:	mov	r1, r3
   13294:	str	r3, [sp]
   13298:	ble	132b4 <rb_linebuf_flush+0x78>
   1329c:	ldr	r3, [r4, #20]
   132a0:	ldr	r2, [r5, #1028]	; 0x404
   132a4:	add	r3, r1, r3
   132a8:	cmp	r3, r2
   132ac:	str	r3, [r4, #20]
   132b0:	beq	1349c <rb_linebuf_flush+0x260>
   132b4:	ldr	r0, [sp]
   132b8:	add	sp, sp, #12
   132bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132c0:	ldr	r8, [pc, #676]	; 1356c <rb_linebuf_flush+0x330>
   132c4:	mov	r2, #8192	; 0x2000
   132c8:	add	r8, pc, r8
   132cc:	add	r5, r8, #8
   132d0:	mov	r0, r5
   132d4:	mov	r1, r6
   132d8:	bl	4628 <memset@plt>
   132dc:	ldr	r2, [r4]
   132e0:	cmp	r2, #0
   132e4:	beq	1354c <rb_linebuf_flush+0x310>
   132e8:	ldr	r3, [r2]
   132ec:	ldrb	r1, [r3, #1025]	; 0x401
   132f0:	cmp	r1, #0
   132f4:	beq	1354c <rb_linebuf_flush+0x310>
   132f8:	ldr	r1, [r2, #8]
   132fc:	ldr	r0, [r4, #20]
   13300:	ldr	r2, [r3, #1028]	; 0x404
   13304:	cmp	r1, #0
   13308:	add	r3, r3, r0
   1330c:	sub	r2, r2, r0
   13310:	str	r3, [r8, #8]
   13314:	str	r2, [r8, #12]
   13318:	beq	13564 <rb_linebuf_flush+0x328>
   1331c:	ldr	r3, [r1]
   13320:	ldrb	r2, [r3, #1025]	; 0x401
   13324:	cmp	r2, #0
   13328:	beq	13564 <rb_linebuf_flush+0x328>
   1332c:	ldr	r2, [r3, #1028]	; 0x404
   13330:	str	r3, [r8, #16]
   13334:	mov	r0, r5
   13338:	str	r2, [r8, #20]
   1333c:	ldr	r3, [r1, #8]
   13340:	mov	r5, #2
   13344:	b	13378 <rb_linebuf_flush+0x13c>
   13348:	ldr	r2, [r3]
   1334c:	ldrb	r1, [r2, #1025]	; 0x401
   13350:	cmp	r1, #0
   13354:	beq	13380 <rb_linebuf_flush+0x144>
   13358:	ldr	r1, [r2, #1028]	; 0x404
   1335c:	add	r5, r5, #1
   13360:	cmp	r5, #1024	; 0x400
   13364:	str	r2, [r0, #16]
   13368:	str	r1, [r0, #20]
   1336c:	ldr	r3, [r3, #8]
   13370:	add	r0, r0, #8
   13374:	beq	13380 <rb_linebuf_flush+0x144>
   13378:	cmp	r3, #0
   1337c:	bne	13348 <rb_linebuf_flush+0x10c>
   13380:	ldr	r1, [pc, #488]	; 13570 <rb_linebuf_flush+0x334>
   13384:	mov	r0, r7
   13388:	add	r1, pc, r1
   1338c:	add	r1, r1, #8
   13390:	mov	r2, r5
   13394:	bl	4ad8 <rb_writev@plt>
   13398:	subs	r3, r0, #0
   1339c:	str	r3, [sp]
   133a0:	ble	132b4 <rb_linebuf_flush+0x78>
   133a4:	mov	r7, r3
   133a8:	ldr	r3, [pc, #452]	; 13574 <rb_linebuf_flush+0x338>
   133ac:	ldr	r8, [r4]
   133b0:	add	r3, pc, r3
   133b4:	ldr	r0, [r4, #20]
   133b8:	mov	r9, r6
   133bc:	mov	fp, #0
   133c0:	str	r3, [sp, #4]
   133c4:	b	133cc <rb_linebuf_flush+0x190>
   133c8:	mov	r0, r6
   133cc:	ldr	sl, [r8]
   133d0:	ldr	r2, [sl, #1028]	; 0x404
   133d4:	sub	r2, r2, r0
   133d8:	cmp	r2, r7
   133dc:	bgt	13540 <rb_linebuf_flush+0x304>
   133e0:	ldr	r0, [r4]
   133e4:	sub	r7, r7, r2
   133e8:	ldr	r8, [r8, #8]
   133ec:	ldr	r2, [r0, #8]
   133f0:	ldr	ip, [r0, #4]
   133f4:	cmp	r2, #0
   133f8:	strne	ip, [r2, #4]
   133fc:	streq	ip, [r4, #4]
   13400:	ldr	ip, [r0, #4]
   13404:	cmp	ip, #0
   13408:	strne	r2, [ip, #8]
   1340c:	streq	r2, [r4]
   13410:	ldr	r2, [r4, #8]
   13414:	str	fp, [r0, #4]
   13418:	sub	r2, r2, #1
   1341c:	str	fp, [r0, #8]
   13420:	str	r2, [r4, #8]
   13424:	bl	4844 <rb_free_rb_dlink_node@plt>
   13428:	ldr	r0, [sl, #1028]	; 0x404
   1342c:	ldr	ip, [r4, #12]
   13430:	ldr	r2, [sl, #1032]	; 0x408
   13434:	ldr	lr, [r4, #16]
   13438:	sub	ip, ip, r0
   1343c:	ldr	r0, [r4, #24]
   13440:	sub	r2, r2, #1
   13444:	sub	lr, lr, #1
   13448:	sub	r0, r0, #1
   1344c:	cmp	r2, #0
   13450:	str	lr, [r4, #16]
   13454:	str	ip, [r4, #12]
   13458:	str	r0, [r4, #24]
   1345c:	str	r2, [sl, #1032]	; 0x408
   13460:	bne	13480 <rb_linebuf_flush+0x244>
   13464:	ldr	r3, [sp, #4]
   13468:	mov	r1, sl
   1346c:	ldr	r2, [r3, #4]
   13470:	ldr	r0, [r3]
   13474:	sub	r2, r2, #1
   13478:	str	r2, [r3, #4]
   1347c:	bl	48c8 <rb_bh_free@plt>
   13480:	add	r9, r9, #1
   13484:	cmp	r5, r9
   13488:	str	fp, [r4, #20]
   1348c:	bne	133c8 <rb_linebuf_flush+0x18c>
   13490:	ldr	r0, [sp]
   13494:	add	sp, sp, #12
   13498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1349c:	ldr	r0, [r4]
   134a0:	mov	r3, #0
   134a4:	str	r3, [r4, #20]
   134a8:	ldmib	r0, {r2, r3}
   134ac:	cmp	r3, #0
   134b0:	strne	r2, [r3, #4]
   134b4:	streq	r2, [r4, #4]
   134b8:	ldr	r2, [r0, #4]
   134bc:	cmp	r2, #0
   134c0:	strne	r3, [r2, #8]
   134c4:	streq	r3, [r4]
   134c8:	ldr	r3, [r4, #8]
   134cc:	mov	r2, #0
   134d0:	sub	r3, r3, #1
   134d4:	str	r2, [r0, #4]
   134d8:	str	r2, [r0, #8]
   134dc:	str	r3, [r4, #8]
   134e0:	bl	4844 <rb_free_rb_dlink_node@plt>
   134e4:	ldr	r3, [r5, #1032]	; 0x408
   134e8:	ldr	ip, [r5, #1028]	; 0x404
   134ec:	ldr	r0, [r4, #16]
   134f0:	ldr	r1, [r4, #12]
   134f4:	ldr	r2, [r4, #24]
   134f8:	sub	r3, r3, #1
   134fc:	sub	r0, r0, #1
   13500:	sub	r1, r1, ip
   13504:	sub	r2, r2, #1
   13508:	cmp	r3, #0
   1350c:	str	r0, [r4, #16]
   13510:	str	r1, [r4, #12]
   13514:	str	r2, [r4, #24]
   13518:	str	r3, [r5, #1032]	; 0x408
   1351c:	bne	132b4 <rb_linebuf_flush+0x78>
   13520:	ldr	r3, [pc, #80]	; 13578 <rb_linebuf_flush+0x33c>
   13524:	mov	r1, r5
   13528:	add	r3, pc, r3
   1352c:	ldm	r3, {r0, r2}
   13530:	sub	r2, r2, #1
   13534:	str	r2, [r3, #4]
   13538:	bl	48c8 <rb_bh_free@plt>
   1353c:	b	132b4 <rb_linebuf_flush+0x78>
   13540:	add	r7, r0, r7
   13544:	str	r7, [r4, #20]
   13548:	b	132b4 <rb_linebuf_flush+0x78>
   1354c:	bl	4ce8 <__errno_location@plt>
   13550:	mov	r3, #11
   13554:	mvn	r2, #0
   13558:	str	r2, [sp]
   1355c:	str	r3, [r0]
   13560:	b	132b4 <rb_linebuf_flush+0x78>
   13564:	mov	r5, #1
   13568:	b	13380 <rb_linebuf_flush+0x144>
   1356c:	.word	0x0002d094
   13570:	.word	0x0002cfd4
   13574:	.word	0x0002cfac
   13578:	.word	0x0002ce34

0001357c <rb_count_rb_linebuf_memory>:
   1357c:	ldr	ip, [pc, #44]	; 135b0 <rb_count_rb_linebuf_memory+0x34>
   13580:	push	{lr}		; (str lr, [sp, #-4]!)
   13584:	add	ip, pc, ip
   13588:	sub	sp, sp, #12
   1358c:	ldr	ip, [ip]
   13590:	mov	r2, #0
   13594:	mov	r3, r1
   13598:	str	r2, [sp]
   1359c:	mov	r1, r0
   135a0:	mov	r0, ip
   135a4:	bl	4d0c <rb_bh_usage@plt>
   135a8:	add	sp, sp, #12
   135ac:	pop	{pc}		; (ldr pc, [sp], #4)
   135b0:	.word	0x0002cdd8

000135b4 <rb_init_rb_dlink_nodes>:
   135b4:	ldr	r2, [pc, #40]	; 135e4 <rb_init_rb_dlink_nodes+0x30>
   135b8:	mov	r1, r0
   135bc:	push	{r4, lr}
   135c0:	add	r2, pc, r2
   135c4:	mov	r0, #12
   135c8:	bl	4ab4 <rb_bh_create@plt>
   135cc:	ldr	r3, [pc, #20]	; 135e8 <rb_init_rb_dlink_nodes+0x34>
   135d0:	add	r3, pc, r3
   135d4:	cmp	r0, #0
   135d8:	str	r0, [r3]
   135dc:	popne	{r4, pc}
   135e0:	bl	4988 <rb_outofmemory@plt>
   135e4:	.word	0x000085fc
   135e8:	.word	0x0002ed94

000135ec <rb_make_rb_dlink_node>:
   135ec:	ldr	r3, [pc, #4]	; 135f8 <rb_make_rb_dlink_node+0xc>
   135f0:	ldr	r0, [pc, r3]
   135f4:	b	4958 <rb_bh_alloc@plt>
   135f8:	.word	0x0002ed74

000135fc <rb_free_rb_dlink_node>:
   135fc:	ldr	r3, [pc, #12]	; 13610 <rb_free_rb_dlink_node+0x14>
   13600:	mov	r1, r0
   13604:	add	r3, pc, r3
   13608:	ldr	r0, [r3]
   1360c:	b	48c8 <rb_bh_free@plt>
   13610:	.word	0x0002ed60

00013614 <rb_string_to_array>:
   13614:	cmp	r0, #0
   13618:	beq	136ec <rb_string_to_array+0xd8>
   1361c:	ldrb	r3, [r0]
   13620:	cmp	r3, #0
   13624:	beq	136d4 <rb_string_to_array+0xc0>
   13628:	cmp	r3, #32
   1362c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13630:	mov	r7, r1
   13634:	bne	13650 <rb_string_to_array+0x3c>
   13638:	ldrb	r3, [r0, #1]!
   1363c:	cmp	r3, #32
   13640:	beq	13638 <rb_string_to_array+0x24>
   13644:	cmp	r3, #0
   13648:	moveq	r1, r3
   1364c:	beq	136cc <rb_string_to_array+0xb8>
   13650:	mov	r8, #0
   13654:	sub	r4, r2, #1
   13658:	mov	r6, r8
   1365c:	sub	r9, r7, #4
   13660:	mov	r5, #32
   13664:	cmp	r3, #58	; 0x3a
   13668:	beq	136c0 <rb_string_to_array+0xac>
   1366c:	mov	r1, r5
   13670:	str	r0, [r9, #4]!
   13674:	bl	45b0 <strchr@plt>
   13678:	add	r1, r8, #1
   1367c:	subs	r2, r0, #0
   13680:	beq	136cc <rb_string_to_array+0xb8>
   13684:	ldrb	ip, [r2, #1]
   13688:	strb	r6, [r2]
   1368c:	add	lr, r2, #1
   13690:	cmp	ip, #32
   13694:	bne	136e0 <rb_string_to_array+0xcc>
   13698:	mov	r0, lr
   1369c:	ldrb	r3, [r0, #1]!
   136a0:	cmp	r3, #32
   136a4:	beq	1369c <rb_string_to_array+0x88>
   136a8:	cmp	r3, #0
   136ac:	beq	136cc <rb_string_to_array+0xb8>
   136b0:	cmp	r1, r4
   136b4:	bge	136f8 <rb_string_to_array+0xe4>
   136b8:	mov	r8, r1
   136bc:	b	13664 <rb_string_to_array+0x50>
   136c0:	add	r1, r8, #1
   136c4:	add	r0, r0, #1
   136c8:	str	r0, [r7, r8, lsl #2]
   136cc:	mov	r0, r1
   136d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136d4:	mov	r1, r3
   136d8:	mov	r0, r1
   136dc:	bx	lr
   136e0:	mov	r3, ip
   136e4:	mov	r0, lr
   136e8:	b	136a8 <rb_string_to_array+0x94>
   136ec:	mov	r1, r0
   136f0:	mov	r0, r1
   136f4:	bx	lr
   136f8:	cmp	ip, #58	; 0x3a
   136fc:	addeq	lr, r2, #2
   13700:	str	lr, [r7, r1, lsl #2]
   13704:	add	r1, r8, #2
   13708:	b	136cc <rb_string_to_array+0xb8>

0001370c <rb_strcasecmp>:
   1370c:	b	45c8 <strcasecmp@plt>

00013710 <rb_strncasecmp>:
   13710:	b	497c <strncasecmp@plt>

00013714 <rb_strcasestr>:
   13714:	b	4418 <strcasestr@plt>

00013718 <rb_strlcat>:
   13718:	push	{r4, r5, r6, r7, r8, lr}
   1371c:	mov	r8, r1
   13720:	mov	r7, r2
   13724:	mov	r6, r0
   13728:	bl	47e4 <strlen@plt>
   1372c:	mov	r4, r0
   13730:	mov	r0, r8
   13734:	bl	47e4 <strlen@plt>
   13738:	sub	r2, r7, r4
   1373c:	add	r6, r6, r4
   13740:	mov	r1, r8
   13744:	cmp	r0, r2
   13748:	movcc	r5, r0
   1374c:	subcs	r5, r2, #1
   13750:	add	r4, r4, r0
   13754:	mov	r2, r5
   13758:	mov	r0, r6
   1375c:	bl	4808 <memcpy@plt>
   13760:	mov	r2, #0
   13764:	mov	r0, r4
   13768:	strb	r2, [r6, r5]
   1376c:	pop	{r4, r5, r6, r7, r8, pc}

00013770 <rb_strlcpy>:
   13770:	push	{r4, r5, r6, r7, r8, lr}
   13774:	mov	r7, r0
   13778:	mov	r0, r1
   1377c:	mov	r4, r2
   13780:	mov	r6, r1
   13784:	bl	47e4 <strlen@plt>
   13788:	cmp	r4, #0
   1378c:	mov	r5, r0
   13790:	beq	137b8 <rb_strlcpy+0x48>
   13794:	cmp	r0, r4
   13798:	movcc	r4, r0
   1379c:	subcs	r4, r4, #1
   137a0:	mov	r1, r6
   137a4:	mov	r2, r4
   137a8:	mov	r0, r7
   137ac:	bl	4808 <memcpy@plt>
   137b0:	mov	r3, #0
   137b4:	strb	r3, [r7, r4]
   137b8:	mov	r0, r5
   137bc:	pop	{r4, r5, r6, r7, r8, pc}

000137c0 <rb_strnlen>:
   137c0:	b	4a18 <strnlen@plt>

000137c4 <rb_snprintf_append>:
   137c4:	push	{r2, r3}
   137c8:	push	{r4, r5, r6, lr}
   137cc:	subs	r4, r1, #0
   137d0:	sub	sp, sp, #8
   137d4:	beq	1383c <rb_snprintf_append+0x78>
   137d8:	mov	r5, r0
   137dc:	bl	47e4 <strlen@plt>
   137e0:	cmp	r0, r4
   137e4:	mov	r6, r0
   137e8:	ble	13808 <rb_snprintf_append+0x44>
   137ec:	sub	r0, r4, #1
   137f0:	mov	r3, #0
   137f4:	strb	r3, [r5, r0]
   137f8:	add	sp, sp, #8
   137fc:	pop	{r4, r5, r6, lr}
   13800:	add	sp, sp, #8
   13804:	bx	lr
   13808:	add	ip, sp, #28
   1380c:	sub	r1, r4, r0
   13810:	mov	r3, ip
   13814:	add	r0, r5, r0
   13818:	ldr	r2, [sp, #24]
   1381c:	str	ip, [sp, #4]
   13820:	bl	455c <vsnprintf@plt>
   13824:	cmp	r0, #0
   13828:	addge	r0, r0, r6
   1382c:	add	sp, sp, #8
   13830:	pop	{r4, r5, r6, lr}
   13834:	add	sp, sp, #8
   13838:	bx	lr
   1383c:	mvn	r0, #0
   13840:	b	137f8 <rb_snprintf_append+0x34>

00013844 <rb_snprintf_try_append>:
   13844:	push	{r2, r3}
   13848:	push	{r4, r5, r6, lr}
   1384c:	subs	r4, r1, #0
   13850:	sub	sp, sp, #8
   13854:	beq	138c8 <rb_snprintf_try_append+0x84>
   13858:	mov	r6, r0
   1385c:	bl	47e4 <strlen@plt>
   13860:	cmp	r0, r4
   13864:	addgt	r1, r6, r4
   13868:	movgt	r3, #0
   1386c:	mov	r5, r0
   13870:	strbgt	r3, [r1, #-1]
   13874:	mvngt	r0, #0
   13878:	bgt	138b8 <rb_snprintf_try_append+0x74>
   1387c:	add	ip, sp, #28
   13880:	mov	r3, ip
   13884:	ldr	r2, [sp, #24]
   13888:	sub	r1, r4, r5
   1388c:	add	r0, r6, r5
   13890:	str	ip, [sp, #4]
   13894:	bl	455c <vsnprintf@plt>
   13898:	cmp	r0, #0
   1389c:	blt	138b8 <rb_snprintf_try_append+0x74>
   138a0:	add	r0, r0, r5
   138a4:	sub	r4, r4, #1
   138a8:	cmp	r0, r4
   138ac:	mvngt	r0, #0
   138b0:	movgt	r3, #0
   138b4:	strbgt	r3, [r6, r5]
   138b8:	add	sp, sp, #8
   138bc:	pop	{r4, r5, r6, lr}
   138c0:	add	sp, sp, #8
   138c4:	bx	lr
   138c8:	mvn	r0, #0
   138cc:	b	138b8 <rb_snprintf_try_append+0x74>

000138d0 <rb_basename>:
   138d0:	push	{r4, r5, r6, lr}
   138d4:	mov	r1, #47	; 0x2f
   138d8:	mov	r4, r0
   138dc:	bl	464c <strrchr@plt>
   138e0:	cmp	r0, #0
   138e4:	addne	r4, r0, #1
   138e8:	mov	r0, r4
   138ec:	bl	47e4 <strlen@plt>
   138f0:	add	r5, r0, #1
   138f4:	mov	r0, r5
   138f8:	bl	49ac <malloc@plt>
   138fc:	subs	r6, r0, #0
   13900:	beq	13918 <rb_basename+0x48>
   13904:	mov	r2, r5
   13908:	mov	r1, r4
   1390c:	bl	4808 <memcpy@plt>
   13910:	mov	r0, r6
   13914:	pop	{r4, r5, r6, pc}
   13918:	bl	4988 <rb_outofmemory@plt>

0001391c <rb_dirname>:
   1391c:	push	{r4, r5, r6, lr}
   13920:	mov	r1, #47	; 0x2f
   13924:	mov	r5, r0
   13928:	bl	464c <strrchr@plt>
   1392c:	cmp	r0, #0
   13930:	beq	13998 <rb_dirname+0x7c>
   13934:	cmp	r5, r0
   13938:	bcs	1396c <rb_dirname+0x50>
   1393c:	ldrb	r3, [r0]
   13940:	cmp	r3, #47	; 0x2f
   13944:	subeq	r3, r0, #1
   13948:	beq	13960 <rb_dirname+0x44>
   1394c:	b	1396c <rb_dirname+0x50>
   13950:	ldrb	r2, [r3]
   13954:	sub	r3, r3, #1
   13958:	cmp	r2, #47	; 0x2f
   1395c:	bne	1396c <rb_dirname+0x50>
   13960:	cmp	r3, r5
   13964:	mov	r0, r3
   13968:	bne	13950 <rb_dirname+0x34>
   1396c:	rsb	r4, r5, #2
   13970:	add	r4, r0, r4
   13974:	mov	r0, r4
   13978:	bl	49ac <malloc@plt>
   1397c:	subs	r6, r0, #0
   13980:	beq	139b0 <rb_dirname+0x94>
   13984:	mov	r2, r4
   13988:	mov	r1, r5
   1398c:	bl	46a0 <rb_strlcpy@plt>
   13990:	mov	r0, r6
   13994:	pop	{r4, r5, r6, pc}
   13998:	mov	r0, #2
   1399c:	bl	49ac <malloc@plt>
   139a0:	subs	r6, r0, #0
   139a4:	movne	r3, #46	; 0x2e
   139a8:	strhne	r3, [r6]
   139ac:	bne	13990 <rb_dirname+0x74>
   139b0:	bl	4988 <rb_outofmemory@plt>

000139b4 <rb_fsnprint>:
   139b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   139b8:	subs	r5, r2, #0
   139bc:	beq	13ac0 <rb_fsnprint+0x10c>
   139c0:	mov	r6, #0
   139c4:	mov	r8, r0
   139c8:	mov	r9, r1
   139cc:	mov	sl, r6
   139d0:	mov	r4, r1
   139d4:	sub	r7, r1, #1
   139d8:	b	13a48 <rb_fsnprint+0x94>
   139dc:	sub	r4, r9, r6
   139e0:	cmp	r3, r4
   139e4:	bhi	13a54 <rb_fsnprint+0xa0>
   139e8:	mov	r4, r3
   139ec:	ldr	r2, [r5, #4]
   139f0:	cmp	r2, #0
   139f4:	beq	13a7c <rb_fsnprint+0xc8>
   139f8:	ldr	r3, [r5, #12]
   139fc:	cmp	r3, #0
   13a00:	beq	13aa4 <rb_fsnprint+0xf0>
   13a04:	ldr	r3, [r3]
   13a08:	mov	r1, r4
   13a0c:	add	r0, r8, r6
   13a10:	bl	455c <vsnprintf@plt>
   13a14:	cmp	r0, #0
   13a18:	poplt	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a1c:	sub	r3, r4, #1
   13a20:	cmp	r3, r0
   13a24:	subcc	r6, r6, #1
   13a28:	addcc	r6, r6, r4
   13a2c:	bcs	13a68 <rb_fsnprint+0xb4>
   13a30:	cmp	r6, r7
   13a34:	bcs	13a74 <rb_fsnprint+0xc0>
   13a38:	ldr	r5, [r5, #16]
   13a3c:	sub	r4, r4, r0
   13a40:	cmp	r5, #0
   13a44:	beq	13a5c <rb_fsnprint+0xa8>
   13a48:	ldr	r3, [r5]
   13a4c:	cmp	r3, #0
   13a50:	bne	139dc <rb_fsnprint+0x28>
   13a54:	cmp	r4, #0
   13a58:	bne	139ec <rb_fsnprint+0x38>
   13a5c:	mov	r0, r6
   13a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a64:	mov	r0, sl
   13a68:	add	r6, r6, r0
   13a6c:	cmp	r6, r7
   13a70:	bcc	13a38 <rb_fsnprint+0x84>
   13a74:	mov	r0, r7
   13a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a7c:	ldr	r3, [r5, #8]
   13a80:	cmp	r3, #0
   13a84:	beq	13a64 <rb_fsnprint+0xb0>
   13a88:	ldr	r2, [r5, #12]
   13a8c:	mov	r1, r4
   13a90:	add	r0, r8, r6
   13a94:	blx	r3
   13a98:	cmp	r0, #0
   13a9c:	bge	13a1c <rb_fsnprint+0x68>
   13aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13aa4:	mov	r1, r2
   13aa8:	add	r0, r8, r6
   13aac:	mov	r2, r4
   13ab0:	bl	46a0 <rb_strlcpy@plt>
   13ab4:	cmp	r0, #0
   13ab8:	bge	13a1c <rb_fsnprint+0x68>
   13abc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ac0:	mov	r0, r5
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013ac8 <rb_fsnprintf>:
   13ac8:	push	{r3}		; (str r3, [sp, #-4]!)
   13acc:	mov	ip, #0
   13ad0:	push	{r4, lr}
   13ad4:	sub	sp, sp, #28
   13ad8:	add	r3, sp, #4
   13adc:	ldr	r4, [sp, #36]	; 0x24
   13ae0:	str	r2, [sp, #20]
   13ae4:	add	lr, sp, #40	; 0x28
   13ae8:	mov	r2, r3
   13aec:	str	r4, [sp, #8]
   13af0:	str	ip, [sp, #12]
   13af4:	str	ip, [sp, #4]
   13af8:	str	sp, [sp, #16]
   13afc:	str	lr, [sp]
   13b00:	bl	4694 <rb_fsnprint@plt>
   13b04:	add	sp, sp, #28
   13b08:	pop	{r4, lr}
   13b0c:	add	sp, sp, #4
   13b10:	bx	lr

00013b14 <rb_helper_child>:
   13b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b18:	mov	r9, r0
   13b1c:	ldr	r0, [pc, #520]	; 13d2c <rb_helper_child+0x218>
   13b20:	sub	sp, sp, #28
   13b24:	add	r0, pc, r0
   13b28:	mov	r8, r1
   13b2c:	mov	sl, r2
   13b30:	str	r3, [sp, #20]
   13b34:	bl	4598 <getenv@plt>
   13b38:	mov	r6, r0
   13b3c:	ldr	r0, [pc, #492]	; 13d30 <rb_helper_child+0x21c>
   13b40:	add	r0, pc, r0
   13b44:	bl	4598 <getenv@plt>
   13b48:	mov	r5, r0
   13b4c:	ldr	r0, [pc, #480]	; 13d34 <rb_helper_child+0x220>
   13b50:	add	r0, pc, r0
   13b54:	bl	4598 <getenv@plt>
   13b58:	cmp	r5, #0
   13b5c:	cmpne	r6, #0
   13b60:	moveq	r4, #1
   13b64:	movne	r4, #0
   13b68:	cmp	r0, #0
   13b6c:	orreq	r4, r4, #1
   13b70:	cmp	r4, #0
   13b74:	bne	13d24 <rb_helper_child+0x210>
   13b78:	mov	fp, r0
   13b7c:	mov	r1, #84	; 0x54
   13b80:	mov	r0, #1
   13b84:	bl	45ec <calloc@plt>
   13b88:	subs	r7, r0, #0
   13b8c:	beq	13d20 <rb_helper_child+0x20c>
   13b90:	mov	r0, r6
   13b94:	mov	r2, #10
   13b98:	mov	r1, r4
   13b9c:	bl	4874 <strtol@plt>
   13ba0:	mov	r2, #10
   13ba4:	mov	r1, r4
   13ba8:	mov	r6, r0
   13bac:	mov	r0, r5
   13bb0:	bl	4874 <strtol@plt>
   13bb4:	mov	r2, #10
   13bb8:	mov	r1, r4
   13bbc:	mov	r5, r0
   13bc0:	mov	r0, fp
   13bc4:	bl	4874 <strtol@plt>
   13bc8:	subs	fp, r0, #0
   13bcc:	bgt	13be0 <rb_helper_child+0xcc>
   13bd0:	b	13c00 <rb_helper_child+0xec>
   13bd4:	add	r4, r4, #1
   13bd8:	cmp	fp, r4
   13bdc:	beq	13c00 <rb_helper_child+0xec>
   13be0:	cmp	r6, r4
   13be4:	cmpne	r5, r4
   13be8:	beq	13bd4 <rb_helper_child+0xc0>
   13bec:	mov	r0, r4
   13bf0:	add	r4, r4, #1
   13bf4:	bl	4940 <close@plt>
   13bf8:	cmp	fp, r4
   13bfc:	bne	13be0 <rb_helper_child+0xcc>
   13c00:	ldr	r0, [pc, #304]	; 13d38 <rb_helper_child+0x224>
   13c04:	mov	r1, #2
   13c08:	add	r0, pc, r0
   13c0c:	bl	437c <open@plt>
   13c10:	cmp	r6, #0
   13c14:	cmpne	r5, #0
   13c18:	mov	r4, r0
   13c1c:	bne	13cd4 <rb_helper_child+0x1c0>
   13c20:	cmp	r6, #1
   13c24:	cmpne	r5, #1
   13c28:	bne	13ce8 <rb_helper_child+0x1d4>
   13c2c:	cmp	r6, #2
   13c30:	cmpne	r5, #2
   13c34:	bne	13d00 <rb_helper_child+0x1ec>
   13c38:	cmp	r4, #2
   13c3c:	bgt	13d14 <rb_helper_child+0x200>
   13c40:	ldr	r3, [sp, #76]	; 0x4c
   13c44:	ldr	r1, [sp, #20]
   13c48:	str	r3, [sp, #8]
   13c4c:	ldr	r3, [sp, #72]	; 0x48
   13c50:	ldr	r2, [sp, #64]	; 0x40
   13c54:	str	r3, [sp, #4]
   13c58:	mov	r0, sl
   13c5c:	mov	r3, #0
   13c60:	str	fp, [sp]
   13c64:	bl	4a3c <rb_lib_init@plt>
   13c68:	ldr	r0, [sp, #68]	; 0x44
   13c6c:	bl	4b50 <rb_linebuf_init@plt>
   13c70:	add	r0, r7, #4
   13c74:	bl	4af0 <rb_linebuf_newbuf@plt>
   13c78:	add	r0, r7, #32
   13c7c:	bl	4af0 <rb_linebuf_newbuf@plt>
   13c80:	ldr	r2, [pc, #180]	; 13d3c <rb_helper_child+0x228>
   13c84:	mov	r1, #8
   13c88:	add	r2, pc, r2
   13c8c:	mov	r0, r6
   13c90:	bl	4a84 <rb_open@plt>
   13c94:	ldr	r2, [pc, #164]	; 13d40 <rb_helper_child+0x22c>
   13c98:	mov	r1, #8
   13c9c:	add	r2, pc, r2
   13ca0:	str	r0, [r7, #60]	; 0x3c
   13ca4:	mov	r0, r5
   13ca8:	bl	4a84 <rb_open@plt>
   13cac:	str	r0, [r7, #64]	; 0x40
   13cb0:	ldr	r0, [r7, #60]	; 0x3c
   13cb4:	bl	461c <rb_set_nb@plt>
   13cb8:	ldr	r0, [r7, #64]	; 0x40
   13cbc:	bl	461c <rb_set_nb@plt>
   13cc0:	mov	r0, r7
   13cc4:	str	r9, [r7, #76]	; 0x4c
   13cc8:	str	r8, [r7, #80]	; 0x50
   13ccc:	add	sp, sp, #28
   13cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cd4:	mov	r1, #0
   13cd8:	bl	4ac0 <dup2@plt>
   13cdc:	cmp	r6, #1
   13ce0:	cmpne	r5, #1
   13ce4:	beq	13c2c <rb_helper_child+0x118>
   13ce8:	mov	r1, #1
   13cec:	mov	r0, r4
   13cf0:	bl	4ac0 <dup2@plt>
   13cf4:	cmp	r6, #2
   13cf8:	cmpne	r5, #2
   13cfc:	beq	13c38 <rb_helper_child+0x124>
   13d00:	mov	r1, #2
   13d04:	mov	r0, r4
   13d08:	bl	4ac0 <dup2@plt>
   13d0c:	cmp	r4, #2
   13d10:	ble	13c40 <rb_helper_child+0x12c>
   13d14:	mov	r0, r4
   13d18:	bl	4940 <close@plt>
   13d1c:	b	13c40 <rb_helper_child+0x12c>
   13d20:	bl	4988 <rb_outofmemory@plt>
   13d24:	mov	r0, #0
   13d28:	b	13ccc <rb_helper_child+0x1b8>
   13d2c:	.word	0x000080ac
   13d30:	.word	0x00008094
   13d34:	.word	0x00008088
   13d38:	.word	0x00007fd8
   13d3c:	.word	0x00007f64
   13d40:	.word	0x00007f64

00013d44 <rb_helper_start>:
   13d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d48:	mov	r7, r1
   13d4c:	sub	sp, sp, #188	; 0xbc
   13d50:	mov	r6, r0
   13d54:	mov	r1, #1
   13d58:	mov	r0, r7
   13d5c:	mov	r9, r2
   13d60:	mov	r8, r3
   13d64:	bl	473c <access@plt>
   13d68:	cmn	r0, #1
   13d6c:	beq	13f50 <rb_helper_start+0x20c>
   13d70:	mov	r1, #84	; 0x54
   13d74:	mov	r0, #1
   13d78:	bl	45ec <calloc@plt>
   13d7c:	subs	r4, r0, #0
   13d80:	beq	13f58 <rb_helper_start+0x214>
   13d84:	ldr	r2, [pc, #464]	; 13f5c <rb_helper_start+0x218>
   13d88:	add	r5, sp, #56	; 0x38
   13d8c:	mov	r3, r6
   13d90:	add	r2, pc, r2
   13d94:	mov	r1, #128	; 0x80
   13d98:	mov	r0, r5
   13d9c:	bl	4bb0 <snprintf@plt>
   13da0:	mov	r2, r5
   13da4:	add	r1, sp, #12
   13da8:	add	r0, sp, #8
   13dac:	bl	4970 <rb_pipe@plt>
   13db0:	cmp	r0, #0
   13db4:	blt	13f3c <rb_helper_start+0x1f8>
   13db8:	ldr	r2, [pc, #416]	; 13f60 <rb_helper_start+0x21c>
   13dbc:	mov	r3, r6
   13dc0:	add	r2, pc, r2
   13dc4:	mov	r1, #128	; 0x80
   13dc8:	mov	r0, r5
   13dcc:	bl	4bb0 <snprintf@plt>
   13dd0:	mov	r2, r5
   13dd4:	add	r1, sp, #20
   13dd8:	add	r0, sp, #16
   13ddc:	bl	4970 <rb_pipe@plt>
   13de0:	cmp	r0, #0
   13de4:	blt	13f3c <rb_helper_start+0x1f8>
   13de8:	ldr	r0, [sp, #12]
   13dec:	bl	44e4 <rb_get_fd@plt>
   13df0:	ldr	fp, [pc, #364]	; 13f64 <rb_helper_start+0x220>
   13df4:	add	sl, sp, #24
   13df8:	add	fp, pc, fp
   13dfc:	mov	r2, fp
   13e00:	mov	r1, #16
   13e04:	mov	r3, r0
   13e08:	mov	r0, sl
   13e0c:	bl	4bb0 <snprintf@plt>
   13e10:	ldr	r0, [sp, #16]
   13e14:	bl	44e4 <rb_get_fd@plt>
   13e18:	mov	r2, fp
   13e1c:	add	fp, sp, #40	; 0x28
   13e20:	mov	r1, #16
   13e24:	mov	r3, r0
   13e28:	mov	r0, fp
   13e2c:	bl	4bb0 <snprintf@plt>
   13e30:	ldr	r0, [sp, #8]
   13e34:	bl	461c <rb_set_nb@plt>
   13e38:	ldr	r0, [sp, #12]
   13e3c:	bl	461c <rb_set_nb@plt>
   13e40:	ldr	r0, [sp, #16]
   13e44:	bl	461c <rb_set_nb@plt>
   13e48:	ldr	r0, [sp, #20]
   13e4c:	bl	461c <rb_set_nb@plt>
   13e50:	ldr	r0, [pc, #272]	; 13f68 <rb_helper_start+0x224>
   13e54:	mov	r1, fp
   13e58:	mov	r2, #1
   13e5c:	add	r0, pc, r0
   13e60:	bl	44cc <rb_setenv@plt>
   13e64:	ldr	r0, [pc, #256]	; 13f6c <rb_helper_start+0x228>
   13e68:	mov	r1, sl
   13e6c:	mov	r2, #1
   13e70:	add	r0, pc, r0
   13e74:	bl	44cc <rb_setenv@plt>
   13e78:	ldr	r1, [pc, #240]	; 13f70 <rb_helper_start+0x22c>
   13e7c:	ldr	r0, [pc, #240]	; 13f74 <rb_helper_start+0x230>
   13e80:	mov	r2, #1
   13e84:	add	r1, pc, r1
   13e88:	add	r0, pc, r0
   13e8c:	bl	44cc <rb_setenv@plt>
   13e90:	ldr	r2, [pc, #224]	; 13f78 <rb_helper_start+0x234>
   13e94:	mov	r3, r6
   13e98:	add	r2, pc, r2
   13e9c:	mov	r1, #128	; 0x80
   13ea0:	mov	r0, r5
   13ea4:	bl	4bb0 <snprintf@plt>
   13ea8:	mov	r3, #0
   13eac:	mov	r0, r7
   13eb0:	mov	r1, sp
   13eb4:	str	r5, [sp]
   13eb8:	str	r3, [sp, #4]
   13ebc:	bl	4b98 <rb_spawn_process@plt>
   13ec0:	cmn	r0, #1
   13ec4:	mov	r5, r0
   13ec8:	beq	13f1c <rb_helper_start+0x1d8>
   13ecc:	ldr	r0, [sp, #12]
   13ed0:	bl	4868 <rb_close@plt>
   13ed4:	ldr	r0, [sp, #16]
   13ed8:	bl	4868 <rb_close@plt>
   13edc:	add	r0, r4, #4
   13ee0:	bl	4af0 <rb_linebuf_newbuf@plt>
   13ee4:	add	r0, r4, #32
   13ee8:	bl	4af0 <rb_linebuf_newbuf@plt>
   13eec:	ldr	r2, [sp, #8]
   13ef0:	ldr	r3, [sp, #20]
   13ef4:	mov	r1, #0
   13ef8:	mov	r0, r4
   13efc:	str	r9, [r4, #76]	; 0x4c
   13f00:	str	r8, [r4, #80]	; 0x50
   13f04:	str	r1, [r4, #72]	; 0x48
   13f08:	str	r5, [r4, #68]	; 0x44
   13f0c:	str	r2, [r4, #60]	; 0x3c
   13f10:	str	r3, [r4, #64]	; 0x40
   13f14:	add	sp, sp, #188	; 0xbc
   13f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f1c:	ldr	r0, [sp, #8]
   13f20:	bl	4868 <rb_close@plt>
   13f24:	ldr	r0, [sp, #12]
   13f28:	bl	4868 <rb_close@plt>
   13f2c:	ldr	r0, [sp, #16]
   13f30:	bl	4868 <rb_close@plt>
   13f34:	ldr	r0, [sp, #20]
   13f38:	bl	4868 <rb_close@plt>
   13f3c:	mov	r0, r4
   13f40:	bl	46f4 <free@plt>
   13f44:	mov	r0, #0
   13f48:	add	sp, sp, #188	; 0xbc
   13f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f50:	mov	r0, #0
   13f54:	b	13f48 <rb_helper_start+0x204>
   13f58:	bl	4988 <rb_outofmemory@plt>
   13f5c:	.word	0x00007e84
   13f60:	.word	0x00007e68
   13f64:	.word	0x00007c1c
   13f68:	.word	0x00007d74
   13f6c:	.word	0x00007d64
   13f70:	.word	0x00007db8
   13f74:	.word	0x00007d50
   13f78:	.word	0x00007da8

00013f7c <rb_helper_restart>:
   13f7c:	ldr	r3, [r0, #80]	; 0x50
   13f80:	bx	r3

00013f84 <rb_helper_write_sendq>:
   13f84:	ldr	r3, [r1, #16]
   13f88:	cmp	r3, #0
   13f8c:	bxle	lr
   13f90:	push	{r4, r5, r6, lr}
   13f94:	mov	r4, r0
   13f98:	mov	r6, r1
   13f9c:	add	r5, r1, #4
   13fa0:	mov	r1, r5
   13fa4:	mov	r0, r4
   13fa8:	bl	47cc <rb_linebuf_flush@plt>
   13fac:	cmp	r0, #0
   13fb0:	bgt	13fa0 <rb_helper_write_sendq+0x1c>
   13fb4:	beq	13ff4 <rb_helper_write_sendq+0x70>
   13fb8:	bl	4ce8 <__errno_location@plt>
   13fbc:	ldr	r0, [r0]
   13fc0:	bl	43dc <rb_ignore_errno@plt>
   13fc4:	cmp	r0, #0
   13fc8:	beq	13ff4 <rb_helper_write_sendq+0x70>
   13fcc:	ldr	r3, [r6, #16]
   13fd0:	cmp	r3, #0
   13fd4:	pople	{r4, r5, r6, pc}
   13fd8:	ldr	r2, [pc, #32]	; 14000 <rb_helper_write_sendq+0x7c>
   13fdc:	mov	r3, r6
   13fe0:	ldr	r0, [r6, #64]	; 0x40
   13fe4:	add	r2, pc, r2
   13fe8:	mov	r1, #2
   13fec:	pop	{r4, r5, r6, lr}
   13ff0:	b	44a8 <rb_setselect@plt>
   13ff4:	mov	r0, r6
   13ff8:	pop	{r4, r5, r6, lr}
   13ffc:	b	45d4 <rb_helper_restart@plt>
   14000:	.word	0xffffff98

00014004 <rb_helper_read_cb>:
   14004:	push	{r4, r5, r6, r7, r8, lr}
   14008:	subs	r4, r1, #0
   1400c:	popeq	{r4, r5, r6, r7, r8, pc}
   14010:	ldr	r5, [pc, #132]	; 1409c <rb_helper_read_cb+0x98>
   14014:	mov	r8, #32768	; 0x8000
   14018:	add	r5, pc, r5
   1401c:	add	r7, r4, #32
   14020:	mov	r6, #0
   14024:	b	14038 <rb_helper_read_cb+0x34>
   14028:	bl	467c <rb_linebuf_parse@plt>
   1402c:	ldr	r3, [r4, #76]	; 0x4c
   14030:	mov	r0, r4
   14034:	blx	r3
   14038:	mov	r2, r8
   1403c:	mov	r1, r5
   14040:	ldr	r0, [r4, #60]	; 0x3c
   14044:	bl	4784 <rb_read@plt>
   14048:	mov	r3, r6
   1404c:	mov	r1, r5
   14050:	subs	r2, r0, #0
   14054:	mov	r0, r7
   14058:	bgt	14028 <rb_helper_read_cb+0x24>
   1405c:	beq	14090 <rb_helper_read_cb+0x8c>
   14060:	bl	4ce8 <__errno_location@plt>
   14064:	ldr	r0, [r0]
   14068:	bl	43dc <rb_ignore_errno@plt>
   1406c:	cmp	r0, #0
   14070:	beq	14090 <rb_helper_read_cb+0x8c>
   14074:	ldr	r2, [pc, #36]	; 140a0 <rb_helper_read_cb+0x9c>
   14078:	mov	r3, r4
   1407c:	ldr	r0, [r4, #60]	; 0x3c
   14080:	add	r2, pc, r2
   14084:	mov	r1, #1
   14088:	pop	{r4, r5, r6, r7, r8, lr}
   1408c:	b	44a8 <rb_setselect@plt>
   14090:	mov	r0, r4
   14094:	pop	{r4, r5, r6, r7, r8, lr}
   14098:	b	45d4 <rb_helper_restart@plt>
   1409c:	.word	0x0002e350
   140a0:	.word	0xffffff7c

000140a4 <rb_helper_write_queue>:
   140a4:	push	{r1, r2, r3}
   140a8:	add	r0, r0, #4
   140ac:	push	{lr}		; (str lr, [sp, #-4]!)
   140b0:	sub	sp, sp, #24
   140b4:	add	r3, sp, #4
   140b8:	ldr	lr, [sp, #28]
   140bc:	mov	r2, #0
   140c0:	add	ip, sp, #32
   140c4:	mov	r1, r3
   140c8:	str	lr, [sp, #8]
   140cc:	str	r2, [sp, #12]
   140d0:	str	r2, [sp, #4]
   140d4:	str	r2, [sp, #20]
   140d8:	str	sp, [sp, #16]
   140dc:	str	ip, [sp]
   140e0:	bl	4bec <rb_linebuf_put@plt>
   140e4:	add	sp, sp, #24
   140e8:	pop	{lr}		; (ldr lr, [sp], #4)
   140ec:	add	sp, sp, #12
   140f0:	bx	lr

000140f4 <rb_helper_write_flush>:
   140f4:	ldr	r3, [r0, #16]
   140f8:	cmp	r3, #0
   140fc:	bxle	lr
   14100:	push	{r4, r5, r6, lr}
   14104:	mov	r6, r0
   14108:	ldr	r5, [r0, #64]	; 0x40
   1410c:	add	r4, r0, #4
   14110:	mov	r1, r4
   14114:	mov	r0, r5
   14118:	bl	47cc <rb_linebuf_flush@plt>
   1411c:	cmp	r0, #0
   14120:	bgt	14110 <rb_helper_write_flush+0x1c>
   14124:	beq	14164 <rb_helper_write_flush+0x70>
   14128:	bl	4ce8 <__errno_location@plt>
   1412c:	ldr	r0, [r0]
   14130:	bl	43dc <rb_ignore_errno@plt>
   14134:	cmp	r0, #0
   14138:	beq	14164 <rb_helper_write_flush+0x70>
   1413c:	ldr	r3, [r6, #16]
   14140:	cmp	r3, #0
   14144:	pople	{r4, r5, r6, pc}
   14148:	ldr	r2, [pc, #32]	; 14170 <rb_helper_write_flush+0x7c>
   1414c:	mov	r3, r6
   14150:	ldr	r0, [r6, #64]	; 0x40
   14154:	add	r2, pc, r2
   14158:	mov	r1, #2
   1415c:	pop	{r4, r5, r6, lr}
   14160:	b	44a8 <rb_setselect@plt>
   14164:	mov	r0, r6
   14168:	pop	{r4, r5, r6, lr}
   1416c:	b	45d4 <rb_helper_restart@plt>
   14170:	.word	0xfffffe28

00014174 <rb_helper_write>:
   14174:	push	{r1, r2, r3}
   14178:	mov	r2, #0
   1417c:	push	{r4, lr}
   14180:	sub	sp, sp, #28
   14184:	add	r3, sp, #4
   14188:	ldr	lr, [sp, #36]	; 0x24
   1418c:	add	ip, sp, #40	; 0x28
   14190:	mov	r4, r0
   14194:	mov	r1, r3
   14198:	add	r0, r0, #4
   1419c:	str	lr, [sp, #8]
   141a0:	str	r2, [sp, #12]
   141a4:	str	r2, [sp, #4]
   141a8:	str	r2, [sp, #20]
   141ac:	str	ip, [sp]
   141b0:	str	sp, [sp, #16]
   141b4:	bl	4bec <rb_linebuf_put@plt>
   141b8:	mov	r0, r4
   141bc:	bl	140f4 <rb_helper_write_flush>
   141c0:	add	sp, sp, #28
   141c4:	pop	{r4, lr}
   141c8:	add	sp, sp, #12
   141cc:	bx	lr

000141d0 <rb_helper_run>:
   141d0:	push	{r4, r5, r6, r7, r8, lr}
   141d4:	subs	r4, r0, #0
   141d8:	popeq	{r4, r5, r6, r7, r8, pc}
   141dc:	ldr	r5, [pc, #132]	; 14268 <rb_helper_run+0x98>
   141e0:	mov	r8, #32768	; 0x8000
   141e4:	add	r5, pc, r5
   141e8:	add	r7, r4, #32
   141ec:	mov	r6, #0
   141f0:	b	14204 <rb_helper_run+0x34>
   141f4:	bl	467c <rb_linebuf_parse@plt>
   141f8:	ldr	r3, [r4, #76]	; 0x4c
   141fc:	mov	r0, r4
   14200:	blx	r3
   14204:	mov	r2, r8
   14208:	mov	r1, r5
   1420c:	ldr	r0, [r4, #60]	; 0x3c
   14210:	bl	4784 <rb_read@plt>
   14214:	mov	r3, r6
   14218:	mov	r1, r5
   1421c:	subs	r2, r0, #0
   14220:	mov	r0, r7
   14224:	bgt	141f4 <rb_helper_run+0x24>
   14228:	beq	1425c <rb_helper_run+0x8c>
   1422c:	bl	4ce8 <__errno_location@plt>
   14230:	ldr	r0, [r0]
   14234:	bl	43dc <rb_ignore_errno@plt>
   14238:	cmp	r0, #0
   1423c:	beq	1425c <rb_helper_run+0x8c>
   14240:	ldr	r2, [pc, #36]	; 1426c <rb_helper_run+0x9c>
   14244:	mov	r3, r4
   14248:	ldr	r0, [r4, #60]	; 0x3c
   1424c:	add	r2, pc, r2
   14250:	mov	r1, #1
   14254:	pop	{r4, r5, r6, r7, r8, lr}
   14258:	b	44a8 <rb_setselect@plt>
   1425c:	mov	r0, r4
   14260:	pop	{r4, r5, r6, r7, r8, lr}
   14264:	b	45d4 <rb_helper_restart@plt>
   14268:	.word	0x0002e184
   1426c:	.word	0xfffffdb0

00014270 <rb_helper_close>:
   14270:	push	{r4, lr}
   14274:	subs	r4, r0, #0
   14278:	popeq	{r4, pc}
   1427c:	mov	r1, #9
   14280:	ldr	r0, [r4, #68]	; 0x44
   14284:	bl	46e8 <rb_kill@plt>
   14288:	ldr	r0, [r4, #60]	; 0x3c
   1428c:	bl	4868 <rb_close@plt>
   14290:	ldr	r0, [r4, #64]	; 0x40
   14294:	bl	4868 <rb_close@plt>
   14298:	mov	r0, r4
   1429c:	pop	{r4, lr}
   142a0:	b	46f4 <free@plt>

000142a4 <rb_helper_read>:
   142a4:	push	{lr}		; (str lr, [sp, #-4]!)
   142a8:	sub	sp, sp, #12
   142ac:	mov	r3, #0
   142b0:	str	r3, [sp]
   142b4:	add	r0, r0, #32
   142b8:	bl	479c <rb_linebuf_get@plt>
   142bc:	add	sp, sp, #12
   142c0:	pop	{pc}		; (ldr pc, [sp], #4)

000142c4 <rb_helper_loop>:
   142c4:	push	{r4, lr}
   142c8:	mov	r4, r1
   142cc:	bl	4364 <rb_helper_run@plt>
   142d0:	mov	r0, r4
   142d4:	bl	4748 <rb_lib_loop@plt>

000142d8 <rb_init_netio_devpoll>:
   142d8:	mov	r0, #38	; 0x26
   142dc:	bx	lr

000142e0 <rb_setselect_devpoll>:
   142e0:	push	{r4, lr}
   142e4:	bl	4ce8 <__errno_location@plt>
   142e8:	mov	r3, #38	; 0x26
   142ec:	str	r3, [r0]
   142f0:	pop	{r4, pc}

000142f4 <rb_select_devpoll>:
   142f4:	push	{r4, lr}
   142f8:	bl	4ce8 <__errno_location@plt>
   142fc:	mov	r3, #38	; 0x26
   14300:	str	r3, [r0]
   14304:	mvn	r0, #0
   14308:	pop	{r4, pc}

0001430c <rb_setup_fd_devpoll>:
   1430c:	push	{r4, lr}
   14310:	bl	4ce8 <__errno_location@plt>
   14314:	mov	r3, #38	; 0x26
   14318:	str	r3, [r0]
   1431c:	mvn	r0, #0
   14320:	pop	{r4, pc}

00014324 <rb_read_timerfd>:
   14324:	push	{r4, r5, r6, lr}
   14328:	subs	r4, r1, #0
   1432c:	sub	sp, sp, #8
   14330:	beq	143cc <rb_read_timerfd+0xa8>
   14334:	mov	r2, #8
   14338:	mov	r1, sp
   1433c:	mov	r5, r0
   14340:	bl	4784 <rb_read@plt>
   14344:	cmp	r0, #0
   14348:	beq	143c0 <rb_read_timerfd+0x9c>
   1434c:	blt	14378 <rb_read_timerfd+0x54>
   14350:	ldr	r2, [pc, #128]	; 143d8 <rb_read_timerfd+0xb4>
   14354:	mov	r0, r5
   14358:	mov	r3, r4
   1435c:	add	r2, pc, r2
   14360:	mov	r1, #1
   14364:	bl	44a8 <rb_setselect@plt>
   14368:	mov	r0, r4
   1436c:	bl	48a4 <rb_run_one_event@plt>
   14370:	add	sp, sp, #8
   14374:	pop	{r4, r5, r6, pc}
   14378:	bl	4ce8 <__errno_location@plt>
   1437c:	mov	r6, r0
   14380:	ldr	r0, [r0]
   14384:	bl	43dc <rb_ignore_errno@plt>
   14388:	cmp	r0, #0
   1438c:	bne	14350 <rb_read_timerfd+0x2c>
   14390:	mov	r0, r5
   14394:	bl	4868 <rb_close@plt>
   14398:	ldr	r0, [r6]
   1439c:	ldr	r4, [r4, #20]
   143a0:	bl	43a0 <strerror@plt>
   143a4:	mov	r1, r4
   143a8:	mov	r2, r0
   143ac:	ldr	r0, [pc, #40]	; 143dc <rb_read_timerfd+0xb8>
   143b0:	add	r0, pc, r0
   143b4:	bl	491c <rb_lib_log@plt>
   143b8:	add	sp, sp, #8
   143bc:	pop	{r4, r5, r6, pc}
   143c0:	bl	4ce8 <__errno_location@plt>
   143c4:	mov	r6, r0
   143c8:	b	14390 <rb_read_timerfd+0x6c>
   143cc:	bl	4868 <rb_close@plt>
   143d0:	add	sp, sp, #8
   143d4:	pop	{r4, r5, r6, pc}
   143d8:	.word	0xffffffc0
   143dc:	.word	0x000078a0

000143e0 <rb_init_netio_epoll>:
   143e0:	push	{r4, r5, r6, lr}
   143e4:	mov	r1, #12
   143e8:	ldr	r5, [pc, #124]	; 1446c <rb_init_netio_epoll+0x8c>
   143ec:	mov	r4, #0
   143f0:	add	r5, pc, r5
   143f4:	mov	r0, #1
   143f8:	str	r4, [r5]
   143fc:	str	r4, [r5, #4]
   14400:	bl	45ec <calloc@plt>
   14404:	subs	r6, r0, #0
   14408:	beq	14460 <rb_init_netio_epoll+0x80>
   1440c:	str	r6, [r5, #8]
   14410:	bl	43b8 <getdtablesize@plt>
   14414:	str	r0, [r6, #8]
   14418:	bl	44f0 <epoll_create@plt>
   1441c:	cmp	r0, #0
   14420:	str	r0, [r6]
   14424:	blt	14464 <rb_init_netio_epoll+0x84>
   14428:	ldr	r2, [pc, #64]	; 14470 <rb_init_netio_epoll+0x90>
   1442c:	mov	r1, #64	; 0x40
   14430:	add	r2, pc, r2
   14434:	bl	4a84 <rb_open@plt>
   14438:	ldr	r5, [r5, #8]
   1443c:	mov	r0, #1
   14440:	ldr	r1, [r5, #8]
   14444:	lsl	r1, r1, #4
   14448:	bl	45ec <calloc@plt>
   1444c:	cmp	r0, #0
   14450:	beq	14460 <rb_init_netio_epoll+0x80>
   14454:	str	r0, [r5, #4]
   14458:	mov	r0, r4
   1445c:	pop	{r4, r5, r6, pc}
   14460:	bl	4988 <rb_outofmemory@plt>
   14464:	mvn	r0, #0
   14468:	pop	{r4, r5, r6, pc}
   1446c:	.word	0x00035f78
   14470:	.word	0x00007854

00014474 <rb_setup_fd_epoll>:
   14474:	mov	r0, #0
   14478:	bx	lr

0001447c <rb_setselect_epoll>:
   1447c:	push	{lr}		; (str lr, [sp, #-4]!)
   14480:	tst	r1, #1
   14484:	ldr	lr, [r0, #20]
   14488:	sub	sp, sp, #20
   1448c:	moveq	ip, lr
   14490:	beq	144ac <rb_setselect_epoll+0x30>
   14494:	cmp	r2, #0
   14498:	orrne	ip, lr, #1
   1449c:	biceq	ip, lr, #1
   144a0:	str	ip, [r0, #20]
   144a4:	str	r2, [r0, #28]
   144a8:	str	r3, [r0, #32]
   144ac:	tst	r1, #2
   144b0:	beq	144cc <rb_setselect_epoll+0x50>
   144b4:	cmp	r2, #0
   144b8:	orrne	ip, ip, #4
   144bc:	biceq	ip, ip, #4
   144c0:	str	ip, [r0, #20]
   144c4:	str	r2, [r0, #36]	; 0x24
   144c8:	str	r3, [r0, #40]	; 0x28
   144cc:	cmp	lr, #0
   144d0:	bne	1451c <rb_setselect_epoll+0xa0>
   144d4:	cmp	ip, #0
   144d8:	beq	14514 <rb_setselect_epoll+0x98>
   144dc:	ble	14534 <rb_setselect_epoll+0xb8>
   144e0:	mov	r1, #1
   144e4:	orr	ip, ip, #-2147483648	; 0x80000000
   144e8:	str	ip, [sp]
   144ec:	str	r0, [sp, #8]
   144f0:	ldr	r3, [pc, #108]	; 14564 <rb_setselect_epoll+0xe8>
   144f4:	ldr	r2, [r0, #12]
   144f8:	add	r3, pc, r3
   144fc:	ldr	r0, [r3, #8]
   14500:	mov	r3, sp
   14504:	ldr	r0, [r0]
   14508:	bl	4c58 <epoll_ctl@plt>
   1450c:	cmp	r0, #0
   14510:	bne	14544 <rb_setselect_epoll+0xc8>
   14514:	add	sp, sp, #20
   14518:	pop	{pc}		; (ldr pc, [sp], #4)
   1451c:	cmp	ip, #0
   14520:	ble	14534 <rb_setselect_epoll+0xb8>
   14524:	cmp	lr, ip
   14528:	movne	r1, #3
   1452c:	bne	144e4 <rb_setselect_epoll+0x68>
   14530:	b	14514 <rb_setselect_epoll+0x98>
   14534:	str	ip, [sp]
   14538:	str	r0, [sp, #8]
   1453c:	mov	r1, #2
   14540:	b	144f0 <rb_setselect_epoll+0x74>
   14544:	bl	4ce8 <__errno_location@plt>
   14548:	ldr	r0, [r0]
   1454c:	bl	43a0 <strerror@plt>
   14550:	mov	r1, r0
   14554:	ldr	r0, [pc, #12]	; 14568 <rb_setselect_epoll+0xec>
   14558:	add	r0, pc, r0
   1455c:	bl	491c <rb_lib_log@plt>
   14560:	bl	43c4 <abort@plt>
   14564:	.word	0x00035e70
   14568:	.word	0x00007744

0001456c <rb_select_epoll>:
   1456c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14570:	mov	r3, r0
   14574:	ldr	r8, [pc, #464]	; 1474c <rb_select_epoll+0x1e0>
   14578:	sub	sp, sp, #36	; 0x24
   1457c:	add	r8, pc, r8
   14580:	ldr	r0, [r8, #8]
   14584:	ldm	r0, {r0, r1, r2}
   14588:	bl	47b4 <epoll_wait@plt>
   1458c:	mov	r9, r0
   14590:	bl	4ce8 <__errno_location@plt>
   14594:	mov	r5, r0
   14598:	ldr	r4, [r0]
   1459c:	str	r0, [sp, #8]
   145a0:	bl	4994 <rb_set_time@plt>
   145a4:	cmp	r9, #0
   145a8:	str	r4, [r5]
   145ac:	blt	14734 <rb_select_epoll+0x1c8>
   145b0:	beq	146f8 <rb_select_epoll+0x18c>
   145b4:	ldr	r3, [pc, #404]	; 14750 <rb_select_epoll+0x1e4>
   145b8:	ldr	sl, [pc, #404]	; 14754 <rb_select_epoll+0x1e8>
   145bc:	add	r3, pc, r3
   145c0:	str	r3, [sp, #4]
   145c4:	ldr	r3, [pc, #396]	; 14758 <rb_select_epoll+0x1ec>
   145c8:	mov	r5, #0
   145cc:	add	r3, pc, r3
   145d0:	add	sl, pc, sl
   145d4:	str	r3, [sp, #12]
   145d8:	mov	r7, r5
   145dc:	b	14618 <rb_select_epoll+0xac>
   145e0:	ldr	r3, [r4, #36]	; 0x24
   145e4:	ldr	r1, [r4, #40]	; 0x28
   145e8:	cmp	r3, #0
   145ec:	str	r7, [r4, #36]	; 0x24
   145f0:	str	r7, [r4, #40]	; 0x28
   145f4:	beq	14704 <rb_select_epoll+0x198>
   145f8:	mov	r0, r4
   145fc:	blx	r3
   14600:	ldrb	r3, [r4, #16]
   14604:	tst	r3, #1
   14608:	bne	1467c <rb_select_epoll+0x110>
   1460c:	add	r5, r5, #1
   14610:	cmp	r9, r5
   14614:	beq	146f8 <rb_select_epoll+0x18c>
   14618:	ldr	r3, [r8, #8]
   1461c:	lsl	fp, r5, #4
   14620:	ldr	r3, [r3, #4]
   14624:	add	r2, r3, fp
   14628:	ldr	r3, [r3, r5, lsl #4]
   1462c:	ldr	r4, [r2, #8]
   14630:	tst	r3, #25
   14634:	ldr	r6, [r4, #20]
   14638:	beq	1465c <rb_select_epoll+0xf0>
   1463c:	ldr	r3, [r4, #28]
   14640:	ldr	r1, [r4, #32]
   14644:	cmp	r3, #0
   14648:	str	r7, [r4, #28]
   1464c:	str	r7, [r4, #32]
   14650:	beq	1465c <rb_select_epoll+0xf0>
   14654:	mov	r0, r4
   14658:	blx	r3
   1465c:	ldrb	r3, [r4, #16]
   14660:	tst	r3, #1
   14664:	beq	1460c <rb_select_epoll+0xa0>
   14668:	ldr	r3, [sl, #8]
   1466c:	ldr	r3, [r3, #4]
   14670:	ldr	r3, [r3, fp]
   14674:	tst	r3, #28
   14678:	bne	145e0 <rb_select_epoll+0x74>
   1467c:	ldr	r1, [r4, #28]
   14680:	ldr	r0, [r4, #36]	; 0x24
   14684:	adds	r3, r1, #0
   14688:	movne	r3, #1
   1468c:	cmp	r0, #0
   14690:	beq	14710 <rb_select_epoll+0x1a4>
   14694:	orr	r3, r3, #4
   14698:	cmp	r6, r3
   1469c:	beq	1460c <rb_select_epoll+0xa0>
   146a0:	mov	r1, #3
   146a4:	orr	r2, r3, #-2147483648	; 0x80000000
   146a8:	str	r3, [r4, #20]
   146ac:	str	r2, [sp, #16]
   146b0:	str	r4, [sp, #24]
   146b4:	ldr	r3, [sp, #4]
   146b8:	ldr	r2, [r4, #12]
   146bc:	ldr	r3, [r3, #8]
   146c0:	ldr	r0, [r3]
   146c4:	add	r3, sp, #16
   146c8:	bl	4c58 <epoll_ctl@plt>
   146cc:	cmp	r0, #0
   146d0:	beq	1460c <rb_select_epoll+0xa0>
   146d4:	ldr	r3, [sp, #8]
   146d8:	add	r5, r5, #1
   146dc:	ldr	r0, [r3]
   146e0:	bl	43a0 <strerror@plt>
   146e4:	mov	r1, r0
   146e8:	ldr	r0, [sp, #12]
   146ec:	bl	491c <rb_lib_log@plt>
   146f0:	cmp	r9, r5
   146f4:	bne	14618 <rb_select_epoll+0xac>
   146f8:	mov	r0, #0
   146fc:	add	sp, sp, #36	; 0x24
   14700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14704:	ldr	r1, [r4, #28]
   14708:	adds	r3, r1, #0
   1470c:	movne	r3, #1
   14710:	cmp	r6, r3
   14714:	beq	1460c <rb_select_epoll+0xa0>
   14718:	cmp	r1, #0
   1471c:	streq	r1, [sp, #16]
   14720:	streq	r1, [r4, #20]
   14724:	streq	r4, [sp, #24]
   14728:	moveq	r1, #2
   1472c:	beq	146b4 <rb_select_epoll+0x148>
   14730:	b	146a0 <rb_select_epoll+0x134>
   14734:	mov	r0, r4
   14738:	bl	43dc <rb_ignore_errno@plt>
   1473c:	cmp	r0, #0
   14740:	moveq	r0, #5
   14744:	beq	146fc <rb_select_epoll+0x190>
   14748:	b	146f8 <rb_select_epoll+0x18c>
   1474c:	.word	0x00035dec
   14750:	.word	0x00035dac
   14754:	.word	0x00035d98
   14758:	.word	0x000076fc

0001475c <rb_epoll_supports_event>:
   1475c:	push	{r4, r5, r6, lr}
   14760:	sub	sp, sp, #288	; 0x120
   14764:	ldr	r4, [pc, #236]	; 14858 <rb_epoll_supports_event+0xfc>
   14768:	add	r4, pc, r4
   1476c:	ldr	r0, [r4]
   14770:	cmp	r0, #1
   14774:	beq	147a8 <rb_epoll_supports_event+0x4c>
   14778:	cmn	r0, #1
   1477c:	moveq	r0, #0
   14780:	beq	147a8 <rb_epoll_supports_event+0x4c>
   14784:	ldr	r1, [pc, #208]	; 1485c <rb_epoll_supports_event+0x100>
   14788:	add	r2, sp, #72	; 0x48
   1478c:	add	r1, pc, r1
   14790:	mov	r0, #3
   14794:	bl	4490 <__xstat@plt>
   14798:	cmp	r0, #0
   1479c:	mvneq	r3, #0
   147a0:	streq	r3, [r4]
   147a4:	bne	147b0 <rb_epoll_supports_event+0x54>
   147a8:	add	sp, sp, #288	; 0x120
   147ac:	pop	{r4, r5, r6, pc}
   147b0:	mov	r1, #0
   147b4:	mov	r0, r1
   147b8:	bl	4bc8 <timerfd_create@plt>
   147bc:	cmp	r0, #0
   147c0:	blt	147dc <rb_epoll_supports_event+0x80>
   147c4:	bl	4940 <close@plt>
   147c8:	mov	r0, #1
   147cc:	str	r0, [r4]
   147d0:	str	r0, [r4, #4]
   147d4:	add	sp, sp, #288	; 0x120
   147d8:	pop	{r4, r5, r6, pc}
   147dc:	mov	r3, #0
   147e0:	mov	ip, #26
   147e4:	mov	r0, r3
   147e8:	add	r2, sp, #4
   147ec:	add	r1, sp, #8
   147f0:	str	r3, [sp, #16]
   147f4:	str	ip, [sp, #12]
   147f8:	bl	452c <timer_create@plt>
   147fc:	subs	r6, r0, #0
   14800:	beq	1481c <rb_epoll_supports_event+0xc0>
   14804:	ldr	r3, [pc, #84]	; 14860 <rb_epoll_supports_event+0x104>
   14808:	mvn	r2, #0
   1480c:	add	r3, pc, r3
   14810:	mov	r0, #0
   14814:	str	r2, [r3]
   14818:	b	147a8 <rb_epoll_supports_event+0x4c>
   1481c:	add	r5, sp, #160	; 0xa0
   14820:	ldr	r0, [sp, #4]
   14824:	bl	4a78 <timer_delete@plt>
   14828:	mov	r0, r5
   1482c:	bl	4394 <sigemptyset@plt>
   14830:	mov	r2, r6
   14834:	mov	r1, r5
   14838:	mvn	r0, #0
   1483c:	bl	443c <signalfd@plt>
   14840:	cmp	r0, #0
   14844:	blt	14804 <rb_epoll_supports_event+0xa8>
   14848:	bl	4940 <close@plt>
   1484c:	mov	r0, #1
   14850:	str	r0, [r4]
   14854:	b	147a8 <rb_epoll_supports_event+0x4c>
   14858:	.word	0x00035c00
   1485c:	.word	0x00007564
   14860:	.word	0x00035b5c

00014864 <rb_epoll_init_event>:
   14864:	push	{r4, r5, r6, lr}
   14868:	sub	sp, sp, #128	; 0x80
   1486c:	ldr	r5, [pc, #160]	; 14914 <rb_epoll_init_event+0xb0>
   14870:	bl	1475c <rb_epoll_supports_event>
   14874:	add	r5, pc, r5
   14878:	ldr	r4, [r5, #4]
   1487c:	cmp	r4, #0
   14880:	beq	1488c <rb_epoll_init_event+0x28>
   14884:	add	sp, sp, #128	; 0x80
   14888:	pop	{r4, r5, r6, pc}
   1488c:	mov	r0, sp
   14890:	bl	4394 <sigemptyset@plt>
   14894:	bl	4484 <__libc_current_sigrtmin@plt>
   14898:	mov	r1, r0
   1489c:	mov	r0, sp
   148a0:	bl	4880 <sigaddset@plt>
   148a4:	mov	r2, r4
   148a8:	mov	r1, sp
   148ac:	mov	r0, r4
   148b0:	bl	49b8 <sigprocmask@plt>
   148b4:	mov	r0, sp
   148b8:	bl	4394 <sigemptyset@plt>
   148bc:	bl	4484 <__libc_current_sigrtmin@plt>
   148c0:	mov	r1, r0
   148c4:	mov	r0, sp
   148c8:	bl	4880 <sigaddset@plt>
   148cc:	mov	r2, r4
   148d0:	mov	r1, sp
   148d4:	mvn	r0, #0
   148d8:	bl	443c <signalfd@plt>
   148dc:	cmn	r0, #1
   148e0:	streq	r0, [r5]
   148e4:	beq	14884 <rb_epoll_init_event+0x20>
   148e8:	ldr	r2, [pc, #40]	; 14918 <rb_epoll_init_event+0xb4>
   148ec:	mov	r1, #64	; 0x40
   148f0:	add	r2, pc, r2
   148f4:	bl	4a84 <rb_open@plt>
   148f8:	mov	r5, r0
   148fc:	bl	461c <rb_set_nb@plt>
   14900:	mov	r1, r4
   14904:	mov	r0, r5
   14908:	bl	1491c <signalfd_handler>
   1490c:	add	sp, sp, #128	; 0x80
   14910:	pop	{r4, r5, r6, pc}
   14914:	.word	0x00035af4
   14918:	.word	0x00007418

0001491c <signalfd_handler>:
   1491c:	ldr	r3, [pc, #360]	; 14a8c <signalfd_handler+0x170>
   14920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14924:	add	r3, pc, r3
   14928:	add	r1, r3, #144	; 0x90
   1492c:	add	r2, r3, #272	; 0x110
   14930:	str	r1, [r3, #12]
   14934:	str	r2, [r3, #20]
   14938:	add	r1, r3, #528	; 0x210
   1493c:	add	r2, r3, #656	; 0x290
   14940:	mov	r6, r0
   14944:	add	r0, r3, #400	; 0x190
   14948:	str	r0, [r3, #28]
   1494c:	str	r1, [r3, #36]	; 0x24
   14950:	add	r0, r3, #784	; 0x310
   14954:	add	r1, r3, #912	; 0x390
   14958:	str	r2, [r3, #44]	; 0x2c
   1495c:	add	r2, r3, #1040	; 0x410
   14960:	str	r0, [r3, #52]	; 0x34
   14964:	str	r1, [r3, #60]	; 0x3c
   14968:	add	r0, r3, #1168	; 0x490
   1496c:	add	r1, r3, #1296	; 0x510
   14970:	str	r2, [r3, #68]	; 0x44
   14974:	add	r2, r3, #1424	; 0x590
   14978:	str	r0, [r3, #76]	; 0x4c
   1497c:	str	r1, [r3, #84]	; 0x54
   14980:	add	r0, r3, #1552	; 0x610
   14984:	add	r1, r3, #1680	; 0x690
   14988:	str	r2, [r3, #92]	; 0x5c
   1498c:	mov	r9, r3
   14990:	add	r2, r3, #1808	; 0x710
   14994:	add	r8, r3, #12
   14998:	mov	r7, #16
   1499c:	str	r0, [r3, #100]	; 0x64
   149a0:	str	r1, [r3, #108]	; 0x6c
   149a4:	str	r2, [r3, #116]	; 0x74
   149a8:	add	r0, r3, #1936	; 0x790
   149ac:	mov	r2, #128	; 0x80
   149b0:	add	r1, r3, #2064	; 0x810
   149b4:	str	r0, [r3, #124]	; 0x7c
   149b8:	str	r1, [r3, #132]	; 0x84
   149bc:	str	r2, [r3, #16]
   149c0:	str	r2, [r3, #24]
   149c4:	str	r2, [r3, #32]
   149c8:	str	r2, [r3, #40]	; 0x28
   149cc:	str	r2, [r3, #48]	; 0x30
   149d0:	str	r2, [r3, #56]	; 0x38
   149d4:	str	r2, [r3, #64]	; 0x40
   149d8:	str	r2, [r3, #72]	; 0x48
   149dc:	str	r2, [r3, #80]	; 0x50
   149e0:	str	r2, [r3, #88]	; 0x58
   149e4:	str	r2, [r3, #96]	; 0x60
   149e8:	str	r2, [r3, #104]	; 0x68
   149ec:	str	r2, [r3, #112]	; 0x70
   149f0:	str	r2, [r3, #120]	; 0x78
   149f4:	str	r2, [r3, #128]	; 0x80
   149f8:	str	r2, [r3, #136]	; 0x88
   149fc:	mov	r0, r6
   14a00:	bl	44e4 <rb_get_fd@plt>
   14a04:	mov	r2, r7
   14a08:	mov	r1, r8
   14a0c:	bl	4c70 <readv@plt>
   14a10:	cmp	r0, #0
   14a14:	beq	14a7c <signalfd_handler+0x160>
   14a18:	blt	14a4c <signalfd_handler+0x130>
   14a1c:	asrs	r0, r0, #7
   14a20:	addne	r4, r9, #144	; 0x90
   14a24:	addne	r5, r4, r0, lsl #7
   14a28:	beq	149fc <signalfd_handler+0xe0>
   14a2c:	ldr	r3, [r4, #48]	; 0x30
   14a30:	add	r4, r4, #128	; 0x80
   14a34:	subs	r0, r3, #0
   14a38:	beq	14a40 <signalfd_handler+0x124>
   14a3c:	bl	48a4 <rb_run_one_event@plt>
   14a40:	cmp	r4, r5
   14a44:	bne	14a2c <signalfd_handler+0x110>
   14a48:	b	149fc <signalfd_handler+0xe0>
   14a4c:	bl	4ce8 <__errno_location@plt>
   14a50:	ldr	r0, [r0]
   14a54:	bl	43dc <rb_ignore_errno@plt>
   14a58:	cmp	r0, #0
   14a5c:	beq	14a7c <signalfd_handler+0x160>
   14a60:	ldr	r2, [pc, #40]	; 14a90 <signalfd_handler+0x174>
   14a64:	mov	r0, r6
   14a68:	mov	r3, #0
   14a6c:	add	r2, pc, r2
   14a70:	mov	r1, #1
   14a74:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a78:	b	44a8 <rb_setselect@plt>
   14a7c:	mov	r0, r6
   14a80:	bl	4868 <rb_close@plt>
   14a84:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a88:	b	14864 <rb_epoll_init_event>
   14a8c:	.word	0x00035a44
   14a90:	.word	0xfffffea8

00014a94 <rb_epoll_sched_event>:
   14a94:	ldr	r3, [pc, #536]	; 14cb4 <rb_epoll_sched_event+0x220>
   14a98:	push	{r4, r5, r6, r7, r8, lr}
   14a9c:	add	r3, pc, r3
   14aa0:	sub	sp, sp, #80	; 0x50
   14aa4:	ldr	r4, [r3, #4]
   14aa8:	mov	r5, r0
   14aac:	cmp	r4, #0
   14ab0:	mov	r8, r1
   14ab4:	bne	14b58 <rb_epoll_sched_event+0xc4>
   14ab8:	add	r7, sp, #16
   14abc:	mov	r2, #64	; 0x40
   14ac0:	mov	r1, r4
   14ac4:	mov	r0, r7
   14ac8:	bl	4628 <memset@plt>
   14acc:	mov	r1, #4
   14ad0:	mov	r0, #1
   14ad4:	bl	45ec <calloc@plt>
   14ad8:	subs	r6, r0, #0
   14adc:	beq	14c84 <rb_epoll_sched_event+0x1f0>
   14ae0:	str	r6, [r5, #40]	; 0x28
   14ae4:	bl	4484 <__libc_current_sigrtmin@plt>
   14ae8:	mov	r1, r7
   14aec:	mov	r2, r6
   14af0:	str	r5, [sp, #16]
   14af4:	str	r0, [sp, #20]
   14af8:	mov	r0, r4
   14afc:	bl	452c <timer_create@plt>
   14b00:	cmp	r0, #0
   14b04:	blt	14c18 <rb_epoll_sched_event+0x184>
   14b08:	ldr	r3, [r5, #24]
   14b0c:	str	r4, [sp]
   14b10:	cmp	r3, #0
   14b14:	addne	r3, sp, #8
   14b18:	str	r4, [sp, #4]
   14b1c:	str	r4, [sp, #12]
   14b20:	str	r8, [sp, #8]
   14b24:	ldmne	r3, {r0, r1}
   14b28:	mov	r3, #0
   14b2c:	mov	r2, sp
   14b30:	stmne	sp, {r0, r1}
   14b34:	ldr	r0, [r6]
   14b38:	mov	r1, r3
   14b3c:	bl	4754 <timer_settime@plt>
   14b40:	cmp	r0, #0
   14b44:	movge	r4, #1
   14b48:	blt	14c40 <rb_epoll_sched_event+0x1ac>
   14b4c:	mov	r0, r4
   14b50:	add	sp, sp, #80	; 0x50
   14b54:	pop	{r4, r5, r6, r7, r8, pc}
   14b58:	mov	r1, #0
   14b5c:	mov	r0, r1
   14b60:	bl	4bc8 <timerfd_create@plt>
   14b64:	subs	r6, r0, #0
   14b68:	blt	14c60 <rb_epoll_sched_event+0x1cc>
   14b6c:	ldr	r3, [r5, #24]
   14b70:	add	r2, sp, #16
   14b74:	cmp	r3, #0
   14b78:	mov	r3, #0
   14b7c:	str	r8, [sp, #24]
   14b80:	str	r3, [r2, #4]
   14b84:	str	r3, [sp, #16]
   14b88:	str	r3, [r2, #12]
   14b8c:	addne	r3, sp, #24
   14b90:	ldmne	r3, {r0, r1}
   14b94:	mov	r3, #0
   14b98:	stmne	r2, {r0, r1}
   14b9c:	mov	r1, r3
   14ba0:	mov	r0, r6
   14ba4:	bl	4c4c <timerfd_settime@plt>
   14ba8:	cmp	r0, #0
   14bac:	blt	14c88 <rb_epoll_sched_event+0x1f4>
   14bb0:	ldr	r4, [pc, #256]	; 14cb8 <rb_epoll_sched_event+0x224>
   14bb4:	ldr	r2, [pc, #256]	; 14cbc <rb_epoll_sched_event+0x228>
   14bb8:	add	r4, pc, r4
   14bbc:	add	r4, r4, #2192	; 0x890
   14bc0:	ldr	r3, [r5, #20]
   14bc4:	mov	r0, r4
   14bc8:	add	r2, pc, r2
   14bcc:	mov	r1, #136	; 0x88
   14bd0:	bl	4bb0 <snprintf@plt>
   14bd4:	mov	r2, r4
   14bd8:	mov	r1, #64	; 0x40
   14bdc:	mov	r0, r6
   14be0:	bl	4a84 <rb_open@plt>
   14be4:	mov	r4, r0
   14be8:	bl	461c <rb_set_nb@plt>
   14bec:	ldr	r2, [pc, #204]	; 14cc0 <rb_epoll_sched_event+0x22c>
   14bf0:	str	r4, [r5, #40]	; 0x28
   14bf4:	mov	r0, r4
   14bf8:	mov	r3, r5
   14bfc:	add	r2, pc, r2
   14c00:	mov	r1, #1
   14c04:	bl	44a8 <rb_setselect@plt>
   14c08:	mov	r4, #1
   14c0c:	mov	r0, r4
   14c10:	add	sp, sp, #80	; 0x50
   14c14:	pop	{r4, r5, r6, r7, r8, pc}
   14c18:	bl	4ce8 <__errno_location@plt>
   14c1c:	ldr	r0, [r0]
   14c20:	bl	43a0 <strerror@plt>
   14c24:	mov	r1, r0
   14c28:	ldr	r0, [pc, #148]	; 14cc4 <rb_epoll_sched_event+0x230>
   14c2c:	add	r0, pc, r0
   14c30:	bl	491c <rb_lib_log@plt>
   14c34:	mov	r0, r4
   14c38:	add	sp, sp, #80	; 0x50
   14c3c:	pop	{r4, r5, r6, r7, r8, pc}
   14c40:	bl	4ce8 <__errno_location@plt>
   14c44:	ldr	r0, [r0]
   14c48:	bl	43a0 <strerror@plt>
   14c4c:	mov	r1, r0
   14c50:	ldr	r0, [pc, #112]	; 14cc8 <rb_epoll_sched_event+0x234>
   14c54:	add	r0, pc, r0
   14c58:	bl	491c <rb_lib_log@plt>
   14c5c:	b	14b4c <rb_epoll_sched_event+0xb8>
   14c60:	bl	4ce8 <__errno_location@plt>
   14c64:	mov	r4, #0
   14c68:	ldr	r0, [r0]
   14c6c:	bl	43a0 <strerror@plt>
   14c70:	mov	r1, r0
   14c74:	ldr	r0, [pc, #80]	; 14ccc <rb_epoll_sched_event+0x238>
   14c78:	add	r0, pc, r0
   14c7c:	bl	491c <rb_lib_log@plt>
   14c80:	b	14b4c <rb_epoll_sched_event+0xb8>
   14c84:	bl	4988 <rb_outofmemory@plt>
   14c88:	bl	4ce8 <__errno_location@plt>
   14c8c:	mov	r4, #0
   14c90:	ldr	r0, [r0]
   14c94:	bl	43a0 <strerror@plt>
   14c98:	mov	r1, r0
   14c9c:	ldr	r0, [pc, #44]	; 14cd0 <rb_epoll_sched_event+0x23c>
   14ca0:	add	r0, pc, r0
   14ca4:	bl	491c <rb_lib_log@plt>
   14ca8:	mov	r0, r6
   14cac:	bl	4940 <close@plt>
   14cb0:	b	14b4c <rb_epoll_sched_event+0xb8>
   14cb4:	.word	0x000358cc
   14cb8:	.word	0x000357b0
   14cbc:	.word	0x00007178
   14cc0:	.word	0xfffff720
   14cc4:	.word	0x00007120
   14cc8:	.word	0x0000710c
   14ccc:	.word	0x0000709c
   14cd0:	.word	0x00007088

00014cd4 <rb_epoll_unsched_event>:
   14cd4:	ldr	r3, [pc, #80]	; 14d2c <rb_epoll_unsched_event+0x58>
   14cd8:	push	{r4, lr}
   14cdc:	add	r3, pc, r3
   14ce0:	mov	r4, r0
   14ce4:	ldr	r3, [r3, #4]
   14ce8:	cmp	r3, #0
   14cec:	bne	14d18 <rb_epoll_unsched_event+0x44>
   14cf0:	ldr	r3, [r0, #40]	; 0x28
   14cf4:	ldr	r0, [r3]
   14cf8:	bl	4a78 <timer_delete@plt>
   14cfc:	ldr	r0, [r4, #40]	; 0x28
   14d00:	cmp	r0, #0
   14d04:	beq	14d0c <rb_epoll_unsched_event+0x38>
   14d08:	bl	46f4 <free@plt>
   14d0c:	mov	r3, #0
   14d10:	str	r3, [r4, #40]	; 0x28
   14d14:	pop	{r4, pc}
   14d18:	ldr	r0, [r0, #40]	; 0x28
   14d1c:	bl	4868 <rb_close@plt>
   14d20:	mov	r3, #0
   14d24:	str	r3, [r4, #40]	; 0x28
   14d28:	pop	{r4, pc}
   14d2c:	.word	0x0003568c

00014d30 <rb_setup_fd_poll>:
   14d30:	mov	r0, #0
   14d34:	bx	lr

00014d38 <rb_init_netio_poll>:
   14d38:	push	{r4, r5, r6, r7, r8, lr}
   14d3c:	bl	446c <rb_getmaxconnect@plt>
   14d40:	lsl	r1, r0, #3
   14d44:	mov	r0, #1
   14d48:	bl	45ec <calloc@plt>
   14d4c:	cmp	r0, #0
   14d50:	beq	14dac <rb_init_netio_poll+0x74>
   14d54:	ldr	r7, [pc, #84]	; 14db0 <rb_init_netio_poll+0x78>
   14d58:	ldr	r6, [pc, #84]	; 14db4 <rb_init_netio_poll+0x7c>
   14d5c:	add	r7, pc, r7
   14d60:	mov	r4, #0
   14d64:	str	r0, [r7]
   14d68:	bl	446c <rb_getmaxconnect@plt>
   14d6c:	add	r6, pc, r6
   14d70:	mvn	r5, #0
   14d74:	str	r0, [r7, #8]
   14d78:	b	14d88 <rb_init_netio_poll+0x50>
   14d7c:	ldr	r3, [r6]
   14d80:	str	r5, [r3, r4, lsl #3]
   14d84:	add	r4, r4, #1
   14d88:	bl	446c <rb_getmaxconnect@plt>
   14d8c:	cmp	r4, r0
   14d90:	blt	14d7c <rb_init_netio_poll+0x44>
   14d94:	ldr	r3, [pc, #28]	; 14db8 <rb_init_netio_poll+0x80>
   14d98:	mov	r2, #0
   14d9c:	add	r3, pc, r3
   14da0:	mov	r0, r2
   14da4:	str	r2, [r3, #4]
   14da8:	pop	{r4, r5, r6, r7, r8, pc}
   14dac:	bl	4988 <rb_outofmemory@plt>
   14db0:	.word	0x00035f24
   14db4:	.word	0x00035f14
   14db8:	.word	0x00035ee4

00014dbc <rb_setselect_poll>:
   14dbc:	push	{r4, r5, r6, r7, r8, lr}
   14dc0:	subs	r5, r0, #0
   14dc4:	popeq	{r4, r5, r6, r7, r8, pc}
   14dc8:	tst	r1, #1
   14dcc:	beq	14e40 <rb_setselect_poll+0x84>
   14dd0:	cmp	r2, #0
   14dd4:	str	r2, [r5, #28]
   14dd8:	str	r3, [r5, #32]
   14ddc:	ldr	ip, [r5, #20]
   14de0:	beq	14ed4 <rb_setselect_poll+0x118>
   14de4:	tst	r1, #2
   14de8:	orr	r1, ip, #64	; 0x40
   14dec:	str	r1, [r5, #20]
   14df0:	bne	14ec0 <rb_setselect_poll+0x104>
   14df4:	ldr	r7, [pc, #376]	; 14f74 <rb_setselect_poll+0x1b8>
   14df8:	ldr	r3, [r5, #12]
   14dfc:	add	r7, pc, r7
   14e00:	ldr	r2, [r7, #8]
   14e04:	cmp	r3, r2
   14e08:	bge	14ef8 <rb_setselect_poll+0x13c>
   14e0c:	ldr	r2, [r7]
   14e10:	ldr	r1, [r5, #20]
   14e14:	cmp	r1, #0
   14e18:	ble	14e68 <rb_setselect_poll+0xac>
   14e1c:	ldr	r0, [pc, #340]	; 14f78 <rb_setselect_poll+0x1bc>
   14e20:	add	lr, r2, r3, lsl #3
   14e24:	add	r0, pc, r0
   14e28:	strh	r1, [lr, #4]
   14e2c:	ldr	ip, [r0, #4]
   14e30:	str	r3, [r2, r3, lsl #3]
   14e34:	cmp	ip, r3
   14e38:	strlt	r3, [r0, #4]
   14e3c:	pop	{r4, r5, r6, r7, r8, pc}
   14e40:	tst	r1, #2
   14e44:	beq	14df4 <rb_setselect_poll+0x38>
   14e48:	cmp	r2, #0
   14e4c:	str	r2, [r5, #36]	; 0x24
   14e50:	str	r3, [r5, #40]	; 0x28
   14e54:	ldr	r1, [r5, #20]
   14e58:	beq	14eec <rb_setselect_poll+0x130>
   14e5c:	orr	r1, r1, #256	; 0x100
   14e60:	str	r1, [r5, #20]
   14e64:	b	14df4 <rb_setselect_poll+0x38>
   14e68:	ldr	r0, [pc, #268]	; 14f7c <rb_setselect_poll+0x1c0>
   14e6c:	add	r1, r2, r3, lsl #3
   14e70:	add	r0, pc, r0
   14e74:	mov	ip, #0
   14e78:	ldr	lr, [r0, #4]
   14e7c:	mvn	r0, #0
   14e80:	cmp	lr, r3
   14e84:	strh	ip, [r1, #4]
   14e88:	str	r0, [r2, r3, lsl #3]
   14e8c:	popne	{r4, r5, r6, r7, r8, pc}
   14e90:	cmp	r3, ip
   14e94:	bge	14ea8 <rb_setselect_poll+0xec>
   14e98:	pop	{r4, r5, r6, r7, r8, pc}
   14e9c:	ldr	r1, [r2, r3, lsl #3]
   14ea0:	cmn	r1, #1
   14ea4:	bne	14f60 <rb_setselect_poll+0x1a4>
   14ea8:	subs	r3, r3, #1
   14eac:	bcs	14e9c <rb_setselect_poll+0xe0>
   14eb0:	ldr	r2, [pc, #200]	; 14f80 <rb_setselect_poll+0x1c4>
   14eb4:	add	r2, pc, r2
   14eb8:	str	r3, [r2, #4]
   14ebc:	pop	{r4, r5, r6, r7, r8, pc}
   14ec0:	orr	r1, r1, #256	; 0x100
   14ec4:	str	r2, [r5, #36]	; 0x24
   14ec8:	str	r3, [r5, #40]	; 0x28
   14ecc:	str	r1, [r5, #20]
   14ed0:	b	14df4 <rb_setselect_poll+0x38>
   14ed4:	tst	r1, #2
   14ed8:	bic	r1, ip, #64	; 0x40
   14edc:	str	r1, [r5, #20]
   14ee0:	beq	14df4 <rb_setselect_poll+0x38>
   14ee4:	str	r2, [r5, #36]	; 0x24
   14ee8:	str	r3, [r5, #40]	; 0x28
   14eec:	bic	r1, r1, #256	; 0x100
   14ef0:	str	r1, [r5, #20]
   14ef4:	b	14df4 <rb_setselect_poll+0x38>
   14ef8:	add	r2, r2, #1024	; 0x400
   14efc:	ldr	r0, [r7]
   14f00:	lsl	r4, r2, #3
   14f04:	mov	r1, r4
   14f08:	str	r2, [r7, #8]
   14f0c:	bl	4c40 <realloc@plt>
   14f10:	subs	r6, r0, #0
   14f14:	beq	14f70 <rb_setselect_poll+0x1b4>
   14f18:	sub	r0, r4, #8128	; 0x1fc0
   14f1c:	sub	r0, r0, #56	; 0x38
   14f20:	mov	r2, #8192	; 0x2000
   14f24:	mov	r1, #0
   14f28:	add	r0, r6, r0
   14f2c:	str	r6, [r7]
   14f30:	bl	4628 <memset@plt>
   14f34:	sub	r3, r4, #8192	; 0x2000
   14f38:	sub	r2, r4, #8
   14f3c:	add	r3, r6, r3
   14f40:	add	r2, r6, r2
   14f44:	mvn	r1, #0
   14f48:	str	r1, [r3, #8]!
   14f4c:	cmp	r2, r3
   14f50:	bne	14f48 <rb_setselect_poll+0x18c>
   14f54:	ldr	r3, [r5, #12]
   14f58:	mov	r2, r6
   14f5c:	b	14e10 <rb_setselect_poll+0x54>
   14f60:	ldr	r2, [pc, #28]	; 14f84 <rb_setselect_poll+0x1c8>
   14f64:	add	r2, pc, r2
   14f68:	str	r3, [r2, #4]
   14f6c:	pop	{r4, r5, r6, r7, r8, pc}
   14f70:	bl	4988 <rb_outofmemory@plt>
   14f74:	.word	0x00035e84
   14f78:	.word	0x00035e5c
   14f7c:	.word	0x00035e10
   14f80:	.word	0x00035dcc
   14f84:	.word	0x00035d1c

00014f88 <rb_select_poll>:
   14f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f8c:	mov	r2, r0
   14f90:	ldr	r6, [pc, #460]	; 15164 <rb_select_poll+0x1dc>
   14f94:	sub	sp, sp, #12
   14f98:	add	r6, pc, r6
   14f9c:	ldr	r7, [pc, #452]	; 15168 <rb_select_poll+0x1e0>
   14fa0:	ldm	r6, {r0, r1}
   14fa4:	add	r7, pc, r7
   14fa8:	add	r1, r1, #1
   14fac:	bl	4a00 <poll@plt>
   14fb0:	mov	r4, r0
   14fb4:	bl	4994 <rb_set_time@plt>
   14fb8:	cmp	r4, #0
   14fbc:	blt	1511c <rb_select_poll+0x194>
   14fc0:	beq	15064 <rb_select_poll+0xdc>
   14fc4:	ldr	ip, [r6, #4]
   14fc8:	cmp	ip, #0
   14fcc:	blt	15064 <rb_select_poll+0xdc>
   14fd0:	ldr	sl, [pc, #404]	; 1516c <rb_select_poll+0x1e4>
   14fd4:	mov	r5, #0
   14fd8:	ldr	r3, [pc, #400]	; 15170 <rb_select_poll+0x1e8>
   14fdc:	ldr	r9, [pc, #400]	; 15174 <rb_select_poll+0x1ec>
   14fe0:	add	sl, pc, sl
   14fe4:	mov	r8, r5
   14fe8:	add	r3, pc, r3
   14fec:	str	r3, [sp, #4]
   14ff0:	ldr	r3, [r6]
   14ff4:	add	r2, r3, r5, lsl #3
   14ff8:	ldr	r1, [r3, r5, lsl #3]
   14ffc:	ldrsh	fp, [r2, #6]
   15000:	clz	r3, fp
   15004:	lsr	r3, r3, #5
   15008:	orrs	r3, r3, r1, lsr #31
   1500c:	bne	15058 <rb_select_poll+0xd0>
   15010:	ldr	r2, [pc, #352]	; 15178 <rb_select_poll+0x1f0>
   15014:	asr	r3, r1, #24
   15018:	eor	r3, r3, r1, asr #12
   1501c:	ldr	r2, [r7, r2]
   15020:	eor	r3, r3, r1
   15024:	and	r3, r3, r9
   15028:	ldr	r2, [r2]
   1502c:	add	r3, r3, r3, lsl #1
   15030:	ldr	r3, [r2, r3, lsl #2]
   15034:	cmp	r3, #0
   15038:	beq	15058 <rb_select_poll+0xd0>
   1503c:	ldr	r4, [r3]
   15040:	ldr	r2, [r4, #12]
   15044:	cmp	r1, r2
   15048:	beq	15070 <rb_select_poll+0xe8>
   1504c:	ldr	r3, [r3, #8]
   15050:	cmp	r3, #0
   15054:	bne	1503c <rb_select_poll+0xb4>
   15058:	add	r5, r5, #1
   1505c:	cmp	r5, ip
   15060:	ble	14ff0 <rb_select_poll+0x68>
   15064:	mov	r0, #0
   15068:	add	sp, sp, #12
   1506c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15070:	tst	fp, #89	; 0x59
   15074:	beq	15098 <rb_select_poll+0x110>
   15078:	ldr	r3, [r4, #28]
   1507c:	ldr	r1, [r4, #32]
   15080:	cmp	r3, #0
   15084:	str	r8, [r4, #28]
   15088:	str	r8, [r4, #32]
   1508c:	beq	150f8 <rb_select_poll+0x170>
   15090:	mov	r0, r4
   15094:	blx	r3
   15098:	ldrb	r3, [r4, #16]
   1509c:	tst	r3, #1
   150a0:	beq	150cc <rb_select_poll+0x144>
   150a4:	tst	fp, #284	; 0x11c
   150a8:	beq	150cc <rb_select_poll+0x144>
   150ac:	ldr	r3, [r4, #36]	; 0x24
   150b0:	ldr	r1, [r4, #40]	; 0x28
   150b4:	cmp	r3, #0
   150b8:	str	r8, [r4, #36]	; 0x24
   150bc:	str	r8, [r4, #40]	; 0x28
   150c0:	beq	15138 <rb_select_poll+0x1b0>
   150c4:	mov	r0, r4
   150c8:	blx	r3
   150cc:	ldr	r3, [r4, #28]
   150d0:	cmp	r3, #0
   150d4:	beq	15104 <rb_select_poll+0x17c>
   150d8:	ldr	r3, [r4, #36]	; 0x24
   150dc:	cmp	r3, #0
   150e0:	beq	15144 <rb_select_poll+0x1bc>
   150e4:	ldr	ip, [sl, #4]
   150e8:	add	r5, r5, #1
   150ec:	cmp	r5, ip
   150f0:	ble	14ff0 <rb_select_poll+0x68>
   150f4:	b	15064 <rb_select_poll+0xdc>
   150f8:	ldrb	r3, [r4, #16]
   150fc:	tst	r3, #1
   15100:	bne	150a4 <rb_select_poll+0x11c>
   15104:	mov	r3, r8
   15108:	mov	r2, #0
   1510c:	mov	r1, #1
   15110:	mov	r0, r4
   15114:	bl	14dbc <rb_setselect_poll>
   15118:	b	150d8 <rb_select_poll+0x150>
   1511c:	bl	4ce8 <__errno_location@plt>
   15120:	ldr	r0, [r0]
   15124:	bl	43dc <rb_ignore_errno@plt>
   15128:	cmp	r0, #0
   1512c:	movne	r0, #5
   15130:	bne	15068 <rb_select_poll+0xe0>
   15134:	b	15064 <rb_select_poll+0xdc>
   15138:	ldr	r3, [r4, #28]
   1513c:	cmp	r3, #0
   15140:	beq	15104 <rb_select_poll+0x17c>
   15144:	mov	r3, r8
   15148:	mov	r0, r4
   1514c:	mov	r2, #0
   15150:	mov	r1, #2
   15154:	bl	14dbc <rb_setselect_poll>
   15158:	ldr	r3, [sp, #4]
   1515c:	ldr	ip, [r3, #4]
   15160:	b	15058 <rb_select_poll+0xd0>
   15164:	.word	0x00035ce8
   15168:	.word	0x00018054
   1516c:	.word	0x00035ca0
   15170:	.word	0x00035c98
   15174:	.word	0x00000fff
   15178:	.word	0x000003c0

0001517c <rb_ports_supports_event>:
   1517c:	push	{r4, lr}
   15180:	bl	4ce8 <__errno_location@plt>
   15184:	mov	r3, #38	; 0x26
   15188:	str	r3, [r0]
   1518c:	mov	r0, #0
   15190:	pop	{r4, pc}

00015194 <rb_ports_init_event>:
   15194:	bx	lr

00015198 <rb_ports_sched_event>:
   15198:	push	{r4, lr}
   1519c:	bl	4ce8 <__errno_location@plt>
   151a0:	mov	r3, #38	; 0x26
   151a4:	str	r3, [r0]
   151a8:	mvn	r0, #0
   151ac:	pop	{r4, pc}

000151b0 <rb_ports_unsched_event>:
   151b0:	bx	lr

000151b4 <rb_init_netio_ports>:
   151b4:	mov	r0, #38	; 0x26
   151b8:	bx	lr

000151bc <rb_setselect_ports>:
   151bc:	push	{r4, lr}
   151c0:	bl	4ce8 <__errno_location@plt>
   151c4:	mov	r3, #38	; 0x26
   151c8:	str	r3, [r0]
   151cc:	pop	{r4, pc}

000151d0 <rb_select_ports>:
   151d0:	push	{r4, lr}
   151d4:	bl	4ce8 <__errno_location@plt>
   151d8:	mov	r3, #38	; 0x26
   151dc:	str	r3, [r0]
   151e0:	mvn	r0, #0
   151e4:	pop	{r4, pc}

000151e8 <rb_setup_fd_ports>:
   151e8:	push	{r4, lr}
   151ec:	bl	4ce8 <__errno_location@plt>
   151f0:	mov	r3, #38	; 0x26
   151f4:	str	r3, [r0]
   151f8:	mvn	r0, #0
   151fc:	pop	{r4, pc}

00015200 <rb_init_netio_sigio>:
   15200:	push	{r4, r5, r6, lr}
   15204:	bl	446c <rb_getmaxconnect@plt>
   15208:	ldr	r5, [pc, #180]	; 152c4 <rb_init_netio_sigio+0xc4>
   1520c:	add	r5, pc, r5
   15210:	lsl	r1, r0, #3
   15214:	mov	r0, #1
   15218:	bl	45ec <calloc@plt>
   1521c:	cmp	r0, #0
   15220:	beq	152c0 <rb_init_netio_sigio+0xc0>
   15224:	ldr	r3, [pc, #156]	; 152c8 <rb_init_netio_sigio+0xc8>
   15228:	mov	r4, #0
   1522c:	mvn	r6, #0
   15230:	ldr	r5, [r5, r3]
   15234:	str	r0, [r5]
   15238:	bl	446c <rb_getmaxconnect@plt>
   1523c:	str	r0, [r5, #8]
   15240:	b	15250 <rb_init_netio_sigio+0x50>
   15244:	ldr	r3, [r5]
   15248:	str	r6, [r3, r4, lsl #3]
   1524c:	add	r4, r4, #1
   15250:	bl	446c <rb_getmaxconnect@plt>
   15254:	cmp	r4, r0
   15258:	blt	15244 <rb_init_netio_sigio+0x44>
   1525c:	ldr	r4, [pc, #104]	; 152cc <rb_init_netio_sigio+0xcc>
   15260:	mov	r3, #1
   15264:	add	r4, pc, r4
   15268:	mov	r6, #0
   1526c:	str	r3, [r4], #4
   15270:	mov	r0, r4
   15274:	str	r6, [r5, #4]
   15278:	bl	4394 <sigemptyset@plt>
   1527c:	bl	4484 <__libc_current_sigrtmin@plt>
   15280:	mov	r1, r0
   15284:	mov	r0, r4
   15288:	bl	4880 <sigaddset@plt>
   1528c:	mov	r1, #29
   15290:	mov	r0, r4
   15294:	bl	4880 <sigaddset@plt>
   15298:	bl	4484 <__libc_current_sigrtmin@plt>
   1529c:	add	r1, r0, #1
   152a0:	mov	r0, r4
   152a4:	bl	4880 <sigaddset@plt>
   152a8:	mov	r2, r6
   152ac:	mov	r1, r4
   152b0:	mov	r0, r6
   152b4:	bl	49b8 <sigprocmask@plt>
   152b8:	mov	r0, r6
   152bc:	pop	{r4, r5, r6, pc}
   152c0:	bl	4988 <rb_outofmemory@plt>
   152c4:	.word	0x00017dec
   152c8:	.word	0x000003d0
   152cc:	.word	0x00035a28

000152d0 <rb_setup_fd_sigio>:
   152d0:	push	{r4, r5, r6, lr}
   152d4:	mov	r2, #0
   152d8:	ldr	r5, [r0, #12]
   152dc:	mov	r1, #3
   152e0:	mov	r0, r5
   152e4:	bl	4c04 <fcntl@plt>
   152e8:	cmn	r0, #1
   152ec:	beq	15350 <rb_setup_fd_sigio+0x80>
   152f0:	tst	r0, #8192	; 0x2000
   152f4:	mov	r4, r0
   152f8:	bne	15358 <rb_setup_fd_sigio+0x88>
   152fc:	orr	r2, r4, #10240	; 0x2800
   15300:	mov	r1, #4
   15304:	mov	r0, r5
   15308:	bl	4c04 <fcntl@plt>
   1530c:	cmn	r0, #1
   15310:	beq	15350 <rb_setup_fd_sigio+0x80>
   15314:	bl	4484 <__libc_current_sigrtmin@plt>
   15318:	mov	r1, #10
   1531c:	mov	r2, r0
   15320:	mov	r0, r5
   15324:	bl	4c04 <fcntl@plt>
   15328:	cmn	r0, #1
   1532c:	beq	15350 <rb_setup_fd_sigio+0x80>
   15330:	bl	4acc <getpid@plt>
   15334:	mov	r1, #8
   15338:	mov	r2, r0
   1533c:	mov	r0, r5
   15340:	bl	4c04 <fcntl@plt>
   15344:	adds	r0, r0, #1
   15348:	movne	r0, #1
   1534c:	pop	{r4, r5, r6, pc}
   15350:	mov	r0, #0
   15354:	pop	{r4, r5, r6, pc}
   15358:	bic	r4, r0, #8192	; 0x2000
   1535c:	mov	r2, r4
   15360:	mov	r1, #4
   15364:	mov	r0, r5
   15368:	bl	4c04 <fcntl@plt>
   1536c:	b	152fc <rb_setup_fd_sigio+0x2c>

00015370 <rb_setselect_sigio>:
   15370:	push	{r4, r5, r6, r7, r8, lr}
   15374:	subs	r4, r0, #0
   15378:	ldr	ip, [pc, #420]	; 15524 <rb_setselect_sigio+0x1b4>
   1537c:	add	ip, pc, ip
   15380:	popeq	{r4, r5, r6, r7, r8, pc}
   15384:	tst	r1, #1
   15388:	beq	153f8 <rb_setselect_sigio+0x88>
   1538c:	cmp	r2, #0
   15390:	str	r2, [r4, #28]
   15394:	str	r3, [r4, #32]
   15398:	ldr	lr, [r4, #20]
   1539c:	beq	15478 <rb_setselect_sigio+0x108>
   153a0:	tst	r1, #2
   153a4:	orr	r1, lr, #64	; 0x40
   153a8:	str	r1, [r4, #20]
   153ac:	bne	15464 <rb_setselect_sigio+0xf4>
   153b0:	ldr	r2, [pc, #368]	; 15528 <rb_setselect_sigio+0x1b8>
   153b4:	ldr	r3, [r4, #12]
   153b8:	ldr	r5, [ip, r2]
   153bc:	ldr	r7, [r5, #8]
   153c0:	cmp	r3, r7
   153c4:	bge	1549c <rb_setselect_sigio+0x12c>
   153c8:	ldr	r2, [r5]
   153cc:	ldr	r1, [r4, #20]
   153d0:	cmp	r1, #0
   153d4:	ble	15420 <rb_setselect_sigio+0xb0>
   153d8:	ldr	ip, [r5, #4]
   153dc:	add	r0, r2, r3, lsl #3
   153e0:	cmp	ip, r3
   153e4:	strh	r1, [r0, #4]
   153e8:	str	r3, [r2, r3, lsl #3]
   153ec:	popge	{r4, r5, r6, r7, r8, pc}
   153f0:	str	r3, [r5, #4]
   153f4:	pop	{r4, r5, r6, r7, r8, pc}
   153f8:	tst	r1, #2
   153fc:	beq	153b0 <rb_setselect_sigio+0x40>
   15400:	cmp	r2, #0
   15404:	str	r2, [r4, #36]	; 0x24
   15408:	str	r3, [r4, #40]	; 0x28
   1540c:	ldr	r1, [r4, #20]
   15410:	beq	15490 <rb_setselect_sigio+0x120>
   15414:	orr	r1, r1, #256	; 0x100
   15418:	str	r1, [r4, #20]
   1541c:	b	153b0 <rb_setselect_sigio+0x40>
   15420:	ldr	r0, [r5, #4]
   15424:	add	r1, r2, r3, lsl #3
   15428:	cmp	r0, r3
   1542c:	mov	ip, #0
   15430:	mvn	r0, #0
   15434:	strh	ip, [r1, #4]
   15438:	str	r0, [r2, r3, lsl #3]
   1543c:	popne	{r4, r5, r6, r7, r8, pc}
   15440:	cmp	r3, ip
   15444:	bge	15458 <rb_setselect_sigio+0xe8>
   15448:	pop	{r4, r5, r6, r7, r8, pc}
   1544c:	ldr	r1, [r2, r3, lsl #3]
   15450:	cmn	r1, #1
   15454:	bne	153f0 <rb_setselect_sigio+0x80>
   15458:	subs	r3, r3, #1
   1545c:	bcc	153f0 <rb_setselect_sigio+0x80>
   15460:	b	1544c <rb_setselect_sigio+0xdc>
   15464:	orr	r1, r1, #256	; 0x100
   15468:	str	r2, [r4, #36]	; 0x24
   1546c:	str	r3, [r4, #40]	; 0x28
   15470:	str	r1, [r4, #20]
   15474:	b	153b0 <rb_setselect_sigio+0x40>
   15478:	tst	r1, #2
   1547c:	bic	r1, lr, #64	; 0x40
   15480:	str	r1, [r4, #20]
   15484:	beq	153b0 <rb_setselect_sigio+0x40>
   15488:	str	r2, [r4, #36]	; 0x24
   1548c:	str	r3, [r4, #40]	; 0x28
   15490:	bic	r1, r1, #256	; 0x100
   15494:	str	r1, [r4, #20]
   15498:	b	153b0 <rb_setselect_sigio+0x40>
   1549c:	add	r3, r7, #1024	; 0x400
   154a0:	ldr	r0, [r5]
   154a4:	lsl	r6, r3, #3
   154a8:	mov	r1, r6
   154ac:	str	r3, [r5, #8]
   154b0:	bl	4c40 <realloc@plt>
   154b4:	subs	r3, r0, #0
   154b8:	beq	15514 <rb_setselect_sigio+0x1a4>
   154bc:	sub	r0, r6, #8128	; 0x1fc0
   154c0:	sub	r0, r0, #56	; 0x38
   154c4:	mov	r1, #0
   154c8:	add	r0, r3, r0
   154cc:	mov	r2, #8192	; 0x2000
   154d0:	str	r3, [r5]
   154d4:	bl	4628 <memset@plt>
   154d8:	ldr	r1, [r5, #8]
   154dc:	add	r7, r7, #1
   154e0:	cmp	r7, r1
   154e4:	bge	15518 <rb_setselect_sigio+0x1a8>
   154e8:	ldr	r2, [r5]
   154ec:	sub	r1, r1, #-536870911	; 0xe0000001
   154f0:	sub	r3, r6, #8192	; 0x2000
   154f4:	add	r3, r2, r3
   154f8:	add	r1, r2, r1, lsl #3
   154fc:	mvn	r0, #0
   15500:	str	r0, [r3, #8]!
   15504:	cmp	r1, r3
   15508:	bne	15500 <rb_setselect_sigio+0x190>
   1550c:	ldr	r3, [r4, #12]
   15510:	b	153cc <rb_setselect_sigio+0x5c>
   15514:	bl	4988 <rb_outofmemory@plt>
   15518:	ldr	r2, [r5]
   1551c:	ldr	r3, [r4, #12]
   15520:	b	153cc <rb_setselect_sigio+0x5c>
   15524:	.word	0x00017c7c
   15528:	.word	0x000003d0

0001552c <rb_sigio_supports_event>:
   1552c:	push	{r4, r5, lr}
   15530:	sub	sp, sp, #76	; 0x4c
   15534:	ldr	r5, [pc, #108]	; 155a8 <rb_sigio_supports_event+0x7c>
   15538:	add	r5, pc, r5
   1553c:	ldr	r0, [r5, #132]	; 0x84
   15540:	cmp	r0, #1
   15544:	beq	15588 <rb_sigio_supports_event+0x5c>
   15548:	cmn	r0, #1
   1554c:	moveq	r0, #0
   15550:	beq	15588 <rb_sigio_supports_event+0x5c>
   15554:	mov	r4, #0
   15558:	mov	r3, #26
   1555c:	mov	r0, r4
   15560:	add	r2, sp, #4
   15564:	add	r1, sp, #8
   15568:	str	r4, [sp, #16]
   1556c:	str	r3, [sp, #12]
   15570:	bl	452c <timer_create@plt>
   15574:	cmp	r0, r4
   15578:	beq	15590 <rb_sigio_supports_event+0x64>
   1557c:	mov	r0, r4
   15580:	mvn	r3, #0
   15584:	str	r3, [r5, #132]	; 0x84
   15588:	add	sp, sp, #76	; 0x4c
   1558c:	pop	{r4, r5, pc}
   15590:	ldr	r0, [sp, #4]
   15594:	bl	4a78 <timer_delete@plt>
   15598:	mov	r0, #1
   1559c:	str	r0, [r5, #132]	; 0x84
   155a0:	add	sp, sp, #76	; 0x4c
   155a4:	pop	{r4, r5, pc}
   155a8:	.word	0x00035754

000155ac <rb_select_sigio>:
   155ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155b0:	sub	sp, sp, #148	; 0x94
   155b4:	mov	fp, r0
   155b8:	bl	1552c <rb_sigio_supports_event>
   155bc:	ldr	r6, [pc, #1008]	; 159b4 <rb_select_sigio+0x408>
   155c0:	add	r6, pc, r6
   155c4:	adds	r3, r0, #0
   155c8:	movne	r3, #1
   155cc:	cmp	fp, #0
   155d0:	orrge	r3, r3, #1
   155d4:	cmp	r3, #0
   155d8:	beq	15608 <rb_select_sigio+0x5c>
   155dc:	ldr	r0, [pc, #980]	; 159b8 <rb_select_sigio+0x40c>
   155e0:	asr	r3, fp, #31
   155e4:	mov	r2, #1000	; 0x3e8
   155e8:	smull	r1, r0, r0, fp
   155ec:	ldr	r1, [pc, #968]	; 159bc <rb_select_sigio+0x410>
   155f0:	rsb	r3, r3, r0, asr #6
   155f4:	str	r3, [sp, #8]
   155f8:	mul	r3, r2, r3
   155fc:	sub	r3, fp, r3
   15600:	mul	r3, r1, r3
   15604:	str	r3, [sp, #12]
   15608:	ldr	r5, [pc, #944]	; 159c0 <rb_select_sigio+0x414>
   1560c:	ldr	sl, [pc, #944]	; 159c4 <rb_select_sigio+0x418>
   15610:	add	r5, pc, r5
   15614:	ldr	r9, [pc, #940]	; 159c8 <rb_select_sigio+0x41c>
   15618:	add	sl, pc, sl
   1561c:	add	r8, r5, #4
   15620:	lsr	r7, fp, #31
   15624:	add	r3, sp, #8
   15628:	str	r3, [sp]
   1562c:	ldr	r3, [r5]
   15630:	cmp	r3, #0
   15634:	bne	156ac <rb_select_sigio+0x100>
   15638:	ldr	r3, [r5, #132]	; 0x84
   1563c:	cmp	r3, #0
   15640:	moveq	r3, r7
   15644:	orrne	r3, r7, #1
   15648:	cmp	r3, #0
   1564c:	bne	1587c <rb_select_sigio+0x2d0>
   15650:	ldr	r2, [sp]
   15654:	add	r1, sp, #16
   15658:	mov	r0, r8
   1565c:	bl	44c0 <sigtimedwait@plt>
   15660:	mov	r4, r0
   15664:	cmp	r4, #0
   15668:	ble	15894 <rb_select_sigio+0x2e8>
   1566c:	cmp	r4, #29
   15670:	beq	1591c <rb_select_sigio+0x370>
   15674:	bl	4484 <__libc_current_sigrtmin@plt>
   15678:	add	r0, r0, #1
   1567c:	cmp	r4, r0
   15680:	bne	1579c <rb_select_sigio+0x1f0>
   15684:	ldr	r3, [sl, #132]	; 0x84
   15688:	cmp	r3, #0
   1568c:	beq	1579c <rb_select_sigio+0x1f0>
   15690:	ldr	r0, [sp, #36]	; 0x24
   15694:	cmp	r0, #0
   15698:	beq	1562c <rb_select_sigio+0x80>
   1569c:	bl	48a4 <rb_run_one_event@plt>
   156a0:	ldr	r3, [r5]
   156a4:	cmp	r3, #0
   156a8:	beq	15638 <rb_select_sigio+0x8c>
   156ac:	bl	4484 <__libc_current_sigrtmin@plt>
   156b0:	mov	r1, #1
   156b4:	bl	44d8 <signal@plt>
   156b8:	bl	4484 <__libc_current_sigrtmin@plt>
   156bc:	mov	r1, #0
   156c0:	bl	44d8 <signal@plt>
   156c4:	ldr	r2, [pc, #768]	; 159cc <rb_select_sigio+0x420>
   156c8:	ldr	r3, [pc, #768]	; 159d0 <rb_select_sigio+0x424>
   156cc:	add	r2, pc, r2
   156d0:	mov	r5, #0
   156d4:	str	r5, [r2]
   156d8:	ldr	r7, [r6, r3]
   156dc:	mov	r2, fp
   156e0:	ldm	r7, {r0, r1}
   156e4:	add	r1, r1, #1
   156e8:	bl	4a00 <poll@plt>
   156ec:	mov	r4, r0
   156f0:	bl	4994 <rb_set_time@plt>
   156f4:	cmp	r4, r5
   156f8:	blt	15974 <rb_select_sigio+0x3c8>
   156fc:	beq	1578c <rb_select_sigio+0x1e0>
   15700:	ldr	ip, [r7, #4]
   15704:	cmp	ip, #0
   15708:	blt	1578c <rb_select_sigio+0x1e0>
   1570c:	ldr	r9, [pc, #692]	; 159c8 <rb_select_sigio+0x41c>
   15710:	mov	r8, r5
   15714:	mov	fp, #2
   15718:	ldr	r3, [r7]
   1571c:	add	r2, r3, r5, lsl #3
   15720:	ldrsh	sl, [r2, #6]
   15724:	cmp	sl, #0
   15728:	beq	15780 <rb_select_sigio+0x1d4>
   1572c:	ldr	r1, [r3, r5, lsl #3]
   15730:	cmp	r1, #0
   15734:	blt	15780 <rb_select_sigio+0x1d4>
   15738:	ldr	r2, [pc, #660]	; 159d4 <rb_select_sigio+0x428>
   1573c:	asr	r3, r1, #24
   15740:	eor	r3, r3, r1, asr #12
   15744:	ldr	r2, [r6, r2]
   15748:	eor	r3, r3, r1
   1574c:	and	r3, r3, r9
   15750:	ldr	r2, [r2]
   15754:	add	r3, r3, r3, lsl #1
   15758:	ldr	r3, [r2, r3, lsl #2]
   1575c:	cmp	r3, #0
   15760:	beq	15780 <rb_select_sigio+0x1d4>
   15764:	ldr	r4, [r3]
   15768:	ldr	r2, [r4, #12]
   1576c:	cmp	r1, r2
   15770:	beq	158b4 <rb_select_sigio+0x308>
   15774:	ldr	r3, [r3, #8]
   15778:	cmp	r3, #0
   1577c:	bne	15764 <rb_select_sigio+0x1b8>
   15780:	add	r5, r5, #1
   15784:	cmp	ip, r5
   15788:	bge	15718 <rb_select_sigio+0x16c>
   1578c:	mov	r4, #0
   15790:	mov	r0, r4
   15794:	add	sp, sp, #148	; 0x94
   15798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1579c:	ldr	r3, [pc, #556]	; 159d0 <rb_select_sigio+0x424>
   157a0:	ldr	r0, [sp, #32]
   157a4:	ldr	r1, [sp, #28]
   157a8:	ldr	r3, [r6, r3]
   157ac:	cmp	r0, #0
   157b0:	ldr	r3, [r3]
   157b4:	add	r3, r3, r0, lsl #3
   157b8:	ldrh	r2, [r3, #6]
   157bc:	orr	r2, r2, r1
   157c0:	sxth	r2, r2
   157c4:	strh	r2, [r3, #6]
   157c8:	blt	1562c <rb_select_sigio+0x80>
   157cc:	ldr	r1, [pc, #512]	; 159d4 <rb_select_sigio+0x428>
   157d0:	asr	r3, r0, #24
   157d4:	eor	r3, r3, r0, asr #12
   157d8:	ldr	r1, [r6, r1]
   157dc:	eor	r3, r3, r0
   157e0:	and	r3, r3, r9
   157e4:	ldr	r1, [r1]
   157e8:	add	r3, r3, r3, lsl #1
   157ec:	ldr	r3, [r1, r3, lsl #2]
   157f0:	cmp	r3, #0
   157f4:	bne	15808 <rb_select_sigio+0x25c>
   157f8:	b	1562c <rb_select_sigio+0x80>
   157fc:	ldr	r3, [r3, #8]
   15800:	cmp	r3, #0
   15804:	beq	1562c <rb_select_sigio+0x80>
   15808:	ldr	r4, [r3]
   1580c:	ldr	r1, [r4, #12]
   15810:	cmp	r0, r1
   15814:	bne	157fc <rb_select_sigio+0x250>
   15818:	tst	r2, #89	; 0x59
   1581c:	beq	1584c <rb_select_sigio+0x2a0>
   15820:	ldr	r3, [r4, #28]
   15824:	mov	r0, #0
   15828:	cmp	r3, r0
   1582c:	ldr	r1, [r4, #32]
   15830:	str	r0, [r4, #28]
   15834:	str	r0, [r4, #32]
   15838:	beq	1584c <rb_select_sigio+0x2a0>
   1583c:	mov	r0, r4
   15840:	str	r2, [sp, #4]
   15844:	blx	r3
   15848:	ldr	r2, [sp, #4]
   1584c:	tst	r2, #284	; 0x11c
   15850:	beq	1562c <rb_select_sigio+0x80>
   15854:	ldr	r2, [r4, #36]	; 0x24
   15858:	mov	r3, #0
   1585c:	cmp	r2, r3
   15860:	ldr	r1, [r4, #40]	; 0x28
   15864:	str	r3, [r4, #36]	; 0x24
   15868:	str	r3, [r4, #40]	; 0x28
   1586c:	beq	1562c <rb_select_sigio+0x80>
   15870:	mov	r0, r4
   15874:	blx	r2
   15878:	b	1562c <rb_select_sigio+0x80>
   1587c:	add	r1, sp, #16
   15880:	mov	r0, r8
   15884:	bl	4478 <sigwaitinfo@plt>
   15888:	mov	r4, r0
   1588c:	cmp	r4, #0
   15890:	bgt	1566c <rb_select_sigio+0xc0>
   15894:	ldr	r3, [pc, #316]	; 159d8 <rb_select_sigio+0x42c>
   15898:	ldr	r4, [pc, r3]
   1589c:	cmp	r4, #0
   158a0:	bne	156ac <rb_select_sigio+0x100>
   158a4:	bl	4994 <rb_set_time@plt>
   158a8:	mov	r0, r4
   158ac:	add	sp, sp, #148	; 0x94
   158b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b4:	tst	sl, #89	; 0x59
   158b8:	beq	158dc <rb_select_sigio+0x330>
   158bc:	ldr	r3, [r4, #28]
   158c0:	ldr	r1, [r4, #32]
   158c4:	cmp	r3, #0
   158c8:	str	r8, [r4, #28]
   158cc:	str	r8, [r4, #32]
   158d0:	beq	15950 <rb_select_sigio+0x3a4>
   158d4:	mov	r0, r4
   158d8:	blx	r3
   158dc:	ldrb	r3, [r4, #16]
   158e0:	tst	r3, #1
   158e4:	beq	158f0 <rb_select_sigio+0x344>
   158e8:	tst	sl, #284	; 0x11c
   158ec:	bne	1592c <rb_select_sigio+0x380>
   158f0:	ldr	r3, [r4, #28]
   158f4:	cmp	r3, #0
   158f8:	beq	1595c <rb_select_sigio+0x3b0>
   158fc:	ldr	r3, [r4, #36]	; 0x24
   15900:	cmp	r3, #0
   15904:	beq	1599c <rb_select_sigio+0x3f0>
   15908:	ldr	ip, [r7, #4]
   1590c:	add	r5, r5, #1
   15910:	cmp	ip, r5
   15914:	bge	15718 <rb_select_sigio+0x16c>
   15918:	b	1578c <rb_select_sigio+0x1e0>
   1591c:	ldr	r0, [pc, #184]	; 159dc <rb_select_sigio+0x430>
   15920:	add	r0, pc, r0
   15924:	bl	491c <rb_lib_log@plt>
   15928:	b	156ac <rb_select_sigio+0x100>
   1592c:	ldr	r3, [r4, #36]	; 0x24
   15930:	ldr	r1, [r4, #40]	; 0x28
   15934:	cmp	r3, #0
   15938:	str	r8, [r4, #36]	; 0x24
   1593c:	str	r8, [r4, #40]	; 0x28
   15940:	beq	15990 <rb_select_sigio+0x3e4>
   15944:	mov	r0, r4
   15948:	blx	r3
   1594c:	b	158f0 <rb_select_sigio+0x344>
   15950:	ldrb	r3, [r4, #16]
   15954:	tst	r3, #1
   15958:	bne	158e8 <rb_select_sigio+0x33c>
   1595c:	mov	r3, r8
   15960:	mov	r2, #0
   15964:	mov	r1, #1
   15968:	mov	r0, r4
   1596c:	bl	15370 <rb_setselect_sigio>
   15970:	b	158fc <rb_select_sigio+0x350>
   15974:	bl	4ce8 <__errno_location@plt>
   15978:	ldr	r0, [r0]
   1597c:	bl	43dc <rb_ignore_errno@plt>
   15980:	cmp	r0, #0
   15984:	movne	r4, #5
   15988:	bne	15790 <rb_select_sigio+0x1e4>
   1598c:	b	1578c <rb_select_sigio+0x1e0>
   15990:	ldr	r3, [r4, #28]
   15994:	cmp	r3, #0
   15998:	beq	1595c <rb_select_sigio+0x3b0>
   1599c:	mov	r0, r4
   159a0:	mov	r3, r8
   159a4:	mov	r2, #0
   159a8:	mov	r1, fp
   159ac:	bl	15370 <rb_setselect_sigio>
   159b0:	b	15908 <rb_select_sigio+0x35c>
   159b4:	.word	0x00017a38
   159b8:	.word	0x10624dd3
   159bc:	.word	0x000f4240
   159c0:	.word	0x0003567c
   159c4:	.word	0x00035674
   159c8:	.word	0x00000fff
   159cc:	.word	0x000355c0
   159d0:	.word	0x000003d0
   159d4:	.word	0x000003c0
   159d8:	.word	0x000353f4
   159dc:	.word	0x00006454

000159e0 <rb_sigio_init_event>:
   159e0:	b	1552c <rb_sigio_supports_event>

000159e4 <rb_sigio_sched_event>:
   159e4:	ldr	r3, [pc, #280]	; 15b04 <rb_sigio_sched_event+0x120>
   159e8:	add	r3, pc, r3
   159ec:	ldr	r3, [r3, #132]	; 0x84
   159f0:	cmp	r3, #0
   159f4:	ble	15aac <rb_sigio_sched_event+0xc8>
   159f8:	push	{r4, r5, r6, r7, lr}
   159fc:	sub	sp, sp, #84	; 0x54
   15a00:	add	r6, sp, #16
   15a04:	mov	r2, #64	; 0x40
   15a08:	mov	r7, r1
   15a0c:	mov	r4, r0
   15a10:	mov	r1, #0
   15a14:	mov	r0, r6
   15a18:	bl	4628 <memset@plt>
   15a1c:	mov	r1, #4
   15a20:	mov	r0, #1
   15a24:	bl	45ec <calloc@plt>
   15a28:	subs	r5, r0, #0
   15a2c:	beq	15b00 <rb_sigio_sched_event+0x11c>
   15a30:	str	r5, [r4, #40]	; 0x28
   15a34:	bl	4484 <__libc_current_sigrtmin@plt>
   15a38:	mov	r1, r6
   15a3c:	mov	r2, r5
   15a40:	str	r4, [sp, #16]
   15a44:	add	r3, r0, #1
   15a48:	mov	r0, #0
   15a4c:	str	r3, [sp, #20]
   15a50:	bl	452c <timer_create@plt>
   15a54:	cmp	r0, #0
   15a58:	blt	15ab4 <rb_sigio_sched_event+0xd0>
   15a5c:	ldr	r3, [r4, #24]
   15a60:	str	r7, [sp, #8]
   15a64:	cmp	r3, #0
   15a68:	mov	r3, #0
   15a6c:	str	r3, [sp, #4]
   15a70:	str	r3, [sp]
   15a74:	str	r3, [sp, #12]
   15a78:	addne	r3, sp, #8
   15a7c:	mov	r2, sp
   15a80:	ldmne	r3, {r0, r1}
   15a84:	mov	r3, #0
   15a88:	stmne	sp, {r0, r1}
   15a8c:	ldr	r0, [r5]
   15a90:	mov	r1, r3
   15a94:	bl	4754 <timer_settime@plt>
   15a98:	cmp	r0, #0
   15a9c:	movge	r0, #1
   15aa0:	blt	15adc <rb_sigio_sched_event+0xf8>
   15aa4:	add	sp, sp, #84	; 0x54
   15aa8:	pop	{r4, r5, r6, r7, pc}
   15aac:	mov	r0, #0
   15ab0:	bx	lr
   15ab4:	bl	4ce8 <__errno_location@plt>
   15ab8:	ldr	r0, [r0]
   15abc:	bl	43a0 <strerror@plt>
   15ac0:	mov	r1, r0
   15ac4:	ldr	r0, [pc, #60]	; 15b08 <rb_sigio_sched_event+0x124>
   15ac8:	add	r0, pc, r0
   15acc:	bl	491c <rb_lib_log@plt>
   15ad0:	mov	r0, #0
   15ad4:	add	sp, sp, #84	; 0x54
   15ad8:	pop	{r4, r5, r6, r7, pc}
   15adc:	bl	4ce8 <__errno_location@plt>
   15ae0:	ldr	r0, [r0]
   15ae4:	bl	43a0 <strerror@plt>
   15ae8:	mov	r1, r0
   15aec:	ldr	r0, [pc, #24]	; 15b0c <rb_sigio_sched_event+0x128>
   15af0:	add	r0, pc, r0
   15af4:	bl	491c <rb_lib_log@plt>
   15af8:	mov	r0, #0
   15afc:	b	15aa4 <rb_sigio_sched_event+0xc0>
   15b00:	bl	4988 <rb_outofmemory@plt>
   15b04:	.word	0x000352a4
   15b08:	.word	0x00006284
   15b0c:	.word	0x00006270

00015b10 <rb_sigio_unsched_event>:
   15b10:	ldr	r3, [pc, #60]	; 15b54 <rb_sigio_unsched_event+0x44>
   15b14:	add	r3, pc, r3
   15b18:	ldr	r3, [r3, #132]	; 0x84
   15b1c:	cmp	r3, #0
   15b20:	bxle	lr
   15b24:	ldr	r3, [r0, #40]	; 0x28
   15b28:	push	{r4, lr}
   15b2c:	mov	r4, r0
   15b30:	ldr	r0, [r3]
   15b34:	bl	4a78 <timer_delete@plt>
   15b38:	ldr	r0, [r4, #40]	; 0x28
   15b3c:	cmp	r0, #0
   15b40:	beq	15b48 <rb_sigio_unsched_event+0x38>
   15b44:	bl	46f4 <free@plt>
   15b48:	mov	r3, #0
   15b4c:	str	r3, [r4, #40]	; 0x28
   15b50:	pop	{r4, pc}
   15b54:	.word	0x00035178

00015b58 <select_update_selectfds.isra.0>:
   15b58:	uxth	r2, r2
   15b5c:	tst	r2, #1
   15b60:	push	{r4, r5, r6, lr}
   15b64:	beq	15c04 <select_update_selectfds.isra.0+0xac>
   15b68:	asr	ip, r0, #31
   15b6c:	cmp	r3, #0
   15b70:	lsr	ip, ip, #27
   15b74:	add	r3, r0, #31
   15b78:	add	lr, r0, ip
   15b7c:	beq	15cf4 <select_update_selectfds.isra.0+0x19c>
   15b80:	cmp	r0, #0
   15b84:	movge	r3, r0
   15b88:	ldr	r6, [pc, #544]	; 15db0 <select_update_selectfds.isra.0+0x258>
   15b8c:	and	lr, lr, #31
   15b90:	add	r6, pc, r6
   15b94:	sub	ip, lr, ip
   15b98:	asr	r3, r3, #5
   15b9c:	mov	r5, #1
   15ba0:	ldr	lr, [r6, r3, lsl #2]
   15ba4:	ldr	r4, [r1]
   15ba8:	lsl	r5, r5, ip
   15bac:	tst	r2, #2
   15bb0:	orr	lr, lr, r5
   15bb4:	orr	r2, r4, #1
   15bb8:	str	lr, [r6, r3, lsl #2]
   15bbc:	str	r2, [r1]
   15bc0:	beq	15be4 <select_update_selectfds.isra.0+0x8c>
   15bc4:	ldr	ip, [pc, #488]	; 15db4 <select_update_selectfds.isra.0+0x25c>
   15bc8:	orr	r2, r2, #2
   15bcc:	add	ip, pc, ip
   15bd0:	add	r3, ip, r3, lsl #2
   15bd4:	str	r2, [r1]
   15bd8:	ldr	ip, [r3, #128]	; 0x80
   15bdc:	orr	ip, ip, r5
   15be0:	str	ip, [r3, #128]	; 0x80
   15be4:	tst	r2, #3
   15be8:	beq	15c54 <select_update_selectfds.isra.0+0xfc>
   15bec:	ldr	r3, [pc, #452]	; 15db8 <select_update_selectfds.isra.0+0x260>
   15bf0:	add	r3, pc, r3
   15bf4:	ldr	r2, [r3]
   15bf8:	cmp	r2, r0
   15bfc:	strlt	r0, [r3]
   15c00:	pop	{r4, r5, r6, pc}
   15c04:	tst	r2, #2
   15c08:	beq	15c48 <select_update_selectfds.isra.0+0xf0>
   15c0c:	cmp	r3, #0
   15c10:	beq	15d7c <select_update_selectfds.isra.0+0x224>
   15c14:	asr	r3, r0, #31
   15c18:	cmp	r0, #0
   15c1c:	lsr	r3, r3, #27
   15c20:	add	r2, r0, r3
   15c24:	and	r2, r2, #31
   15c28:	sub	r2, r2, r3
   15c2c:	mov	ip, #1
   15c30:	add	r3, r0, #31
   15c34:	movge	r3, r0
   15c38:	lsl	r5, ip, r2
   15c3c:	asr	r3, r3, #5
   15c40:	ldr	r2, [r1]
   15c44:	b	15bc4 <select_update_selectfds.isra.0+0x6c>
   15c48:	ldr	r2, [r1]
   15c4c:	tst	r2, #3
   15c50:	bne	15bec <select_update_selectfds.isra.0+0x94>
   15c54:	ldr	r3, [pc, #352]	; 15dbc <select_update_selectfds.isra.0+0x264>
   15c58:	add	r3, pc, r3
   15c5c:	ldr	r3, [r3]
   15c60:	cmp	r3, r0
   15c64:	poplt	{r4, r5, r6, pc}
   15c68:	cmp	r3, #0
   15c6c:	poplt	{r4, r5, r6, pc}
   15c70:	ldr	r1, [pc, #328]	; 15dc0 <select_update_selectfds.isra.0+0x268>
   15c74:	asr	r0, r3, #5
   15c78:	add	r1, pc, r1
   15c7c:	and	r2, r3, #31
   15c80:	mov	lr, #1
   15c84:	ldr	ip, [r1, r0, lsl #2]
   15c88:	lsl	r2, lr, r2
   15c8c:	tst	r2, ip
   15c90:	popne	{r4, r5, r6, pc}
   15c94:	add	r1, r1, r0, lsl #2
   15c98:	ldr	r1, [r1, #128]	; 0x80
   15c9c:	tst	r2, r1
   15ca0:	popne	{r4, r5, r6, pc}
   15ca4:	ldr	r0, [pc, #280]	; 15dc4 <select_update_selectfds.isra.0+0x26c>
   15ca8:	add	r0, pc, r0
   15cac:	b	15cc8 <select_update_selectfds.isra.0+0x170>
   15cb0:	ldr	r1, [r0, r1, lsl #2]
   15cb4:	tst	r2, r1
   15cb8:	bne	15d5c <select_update_selectfds.isra.0+0x204>
   15cbc:	ldr	r1, [ip, #128]	; 0x80
   15cc0:	tst	r2, r1
   15cc4:	bne	15d6c <select_update_selectfds.isra.0+0x214>
   15cc8:	sub	r3, r3, #1
   15ccc:	and	r2, r3, #31
   15cd0:	asr	r1, r3, #5
   15cd4:	cmn	r3, #1
   15cd8:	lsl	r2, lr, r2
   15cdc:	add	ip, r0, r1, lsl #2
   15ce0:	bne	15cb0 <select_update_selectfds.isra.0+0x158>
   15ce4:	ldr	r2, [pc, #220]	; 15dc8 <select_update_selectfds.isra.0+0x270>
   15ce8:	add	r2, pc, r2
   15cec:	str	r3, [r2]
   15cf0:	pop	{r4, r5, r6, pc}
   15cf4:	cmp	r0, #0
   15cf8:	movge	r3, r0
   15cfc:	ldr	r4, [pc, #200]	; 15dcc <select_update_selectfds.isra.0+0x274>
   15d00:	and	lr, lr, #31
   15d04:	sub	ip, lr, ip
   15d08:	add	r4, pc, r4
   15d0c:	asr	r3, r3, #5
   15d10:	mov	lr, #1
   15d14:	ldr	r5, [r1]
   15d18:	mvn	lr, lr, lsl ip
   15d1c:	ldr	ip, [r4, r3, lsl #2]
   15d20:	tst	r2, #2
   15d24:	and	ip, ip, lr
   15d28:	bic	r2, r5, #1
   15d2c:	str	ip, [r4, r3, lsl #2]
   15d30:	str	r2, [r1]
   15d34:	beq	15be4 <select_update_selectfds.isra.0+0x8c>
   15d38:	ldr	ip, [pc, #144]	; 15dd0 <select_update_selectfds.isra.0+0x278>
   15d3c:	bic	r2, r2, #2
   15d40:	add	ip, pc, ip
   15d44:	add	r3, ip, r3, lsl #2
   15d48:	str	r2, [r1]
   15d4c:	ldr	r1, [r3, #128]	; 0x80
   15d50:	and	lr, lr, r1
   15d54:	str	lr, [r3, #128]	; 0x80
   15d58:	b	15be4 <select_update_selectfds.isra.0+0x8c>
   15d5c:	ldr	r2, [pc, #112]	; 15dd4 <select_update_selectfds.isra.0+0x27c>
   15d60:	add	r2, pc, r2
   15d64:	str	r3, [r2]
   15d68:	pop	{r4, r5, r6, pc}
   15d6c:	ldr	r2, [pc, #100]	; 15dd8 <select_update_selectfds.isra.0+0x280>
   15d70:	add	r2, pc, r2
   15d74:	str	r3, [r2]
   15d78:	pop	{r4, r5, r6, pc}
   15d7c:	asr	r2, r0, #31
   15d80:	cmp	r0, #0
   15d84:	lsr	r2, r2, #27
   15d88:	add	lr, r0, r2
   15d8c:	and	lr, lr, #31
   15d90:	sub	r2, lr, r2
   15d94:	add	r3, r0, #31
   15d98:	mov	lr, #1
   15d9c:	movge	r3, r0
   15da0:	mvn	lr, lr, lsl r2
   15da4:	asr	r3, r3, #5
   15da8:	ldr	r2, [r1]
   15dac:	b	15d38 <select_update_selectfds.isra.0+0x1e0>
   15db0:	.word	0x00035184
   15db4:	.word	0x00035148
   15db8:	.word	0x00017890
   15dbc:	.word	0x00017828
   15dc0:	.word	0x0003509c
   15dc4:	.word	0x0003506c
   15dc8:	.word	0x00017798
   15dcc:	.word	0x0003500c
   15dd0:	.word	0x00034fd4
   15dd4:	.word	0x00017720
   15dd8:	.word	0x00017710

00015ddc <rb_setup_fd_select>:
   15ddc:	mov	r0, #0
   15de0:	bx	lr

00015de4 <rb_init_netio_select>:
   15de4:	ldr	r3, [pc, #76]	; 15e38 <rb_init_netio_select+0x54>
   15de8:	ldr	r2, [pc, #76]	; 15e3c <rb_init_netio_select+0x58>
   15dec:	add	r3, pc, r3
   15df0:	push	{r4, lr}
   15df4:	mov	r1, #0
   15df8:	ldr	r3, [r3, r2]
   15dfc:	ldr	r4, [pc, #60]	; 15e40 <rb_init_netio_select+0x5c>
   15e00:	ldr	r2, [r3]
   15e04:	add	r4, pc, r4
   15e08:	cmp	r2, #1024	; 0x400
   15e0c:	movgt	r2, #1024	; 0x400
   15e10:	strgt	r2, [r3]
   15e14:	mov	r0, r4
   15e18:	mov	r2, #128	; 0x80
   15e1c:	bl	4628 <memset@plt>
   15e20:	add	r0, r4, #128	; 0x80
   15e24:	mov	r2, #128	; 0x80
   15e28:	mov	r1, #0
   15e2c:	bl	4628 <memset@plt>
   15e30:	mov	r0, #0
   15e34:	pop	{r4, pc}
   15e38:	.word	0x0001720c
   15e3c:	.word	0x000003a0
   15e40:	.word	0x00034f10

00015e44 <rb_setselect_select>:
   15e44:	tst	r1, #1
   15e48:	push	{r4, r5, r6, r7, r8, lr}
   15e4c:	bne	15f60 <rb_setselect_select+0x11c>
   15e50:	tst	r1, #2
   15e54:	popeq	{r4, r5, r6, r7, r8, pc}
   15e58:	cmp	r2, #0
   15e5c:	str	r2, [r0, #36]	; 0x24
   15e60:	ldr	r2, [r0, #12]
   15e64:	str	r3, [r0, #40]	; 0x28
   15e68:	add	r1, r2, #31
   15e6c:	beq	160bc <rb_setselect_select+0x278>
   15e70:	cmp	r2, #0
   15e74:	movge	r1, r2
   15e78:	asr	r3, r2, #31
   15e7c:	asr	ip, r1, #5
   15e80:	ldr	r1, [pc, #740]	; 1616c <rb_setselect_select+0x328>
   15e84:	lsr	r3, r3, #27
   15e88:	add	r1, pc, r1
   15e8c:	add	r1, r1, ip, lsl #2
   15e90:	add	ip, r2, r3
   15e94:	and	ip, ip, #31
   15e98:	ldr	lr, [r1, #128]	; 0x80
   15e9c:	sub	ip, ip, r3
   15ea0:	mov	r4, #1
   15ea4:	ldr	r3, [r0, #20]
   15ea8:	orr	ip, lr, r4, lsl ip
   15eac:	orr	r3, r3, #2
   15eb0:	str	ip, [r1, #128]	; 0x80
   15eb4:	str	r3, [r0, #20]
   15eb8:	tst	r3, #3
   15ebc:	bne	16064 <rb_setselect_select+0x220>
   15ec0:	ldr	r3, [pc, #680]	; 16170 <rb_setselect_select+0x32c>
   15ec4:	add	r3, pc, r3
   15ec8:	ldr	r3, [r3]
   15ecc:	cmp	r2, r3
   15ed0:	popgt	{r4, r5, r6, r7, r8, pc}
   15ed4:	cmp	r3, #0
   15ed8:	poplt	{r4, r5, r6, r7, r8, pc}
   15edc:	ldr	r1, [pc, #656]	; 16174 <rb_setselect_select+0x330>
   15ee0:	asr	r0, r3, #5
   15ee4:	add	r1, pc, r1
   15ee8:	and	r2, r3, #31
   15eec:	mov	lr, #1
   15ef0:	ldr	ip, [r1, r0, lsl #2]
   15ef4:	lsl	r2, lr, r2
   15ef8:	tst	r2, ip
   15efc:	popne	{r4, r5, r6, r7, r8, pc}
   15f00:	add	r1, r1, r0, lsl #2
   15f04:	ldr	r1, [r1, #128]	; 0x80
   15f08:	tst	r2, r1
   15f0c:	popne	{r4, r5, r6, r7, r8, pc}
   15f10:	ldr	r0, [pc, #608]	; 16178 <rb_setselect_select+0x334>
   15f14:	add	r0, pc, r0
   15f18:	b	15f34 <rb_setselect_select+0xf0>
   15f1c:	ldr	r1, [r0, r1, lsl #2]
   15f20:	tst	r2, r1
   15f24:	bne	1609c <rb_setselect_select+0x258>
   15f28:	ldr	r1, [ip, #128]	; 0x80
   15f2c:	tst	r2, r1
   15f30:	bne	160ac <rb_setselect_select+0x268>
   15f34:	sub	r3, r3, #1
   15f38:	and	r2, r3, #31
   15f3c:	asr	r1, r3, #5
   15f40:	cmn	r3, #1
   15f44:	lsl	r2, lr, r2
   15f48:	add	ip, r0, r1, lsl #2
   15f4c:	bne	15f1c <rb_setselect_select+0xd8>
   15f50:	ldr	r2, [pc, #548]	; 1617c <rb_setselect_select+0x338>
   15f54:	add	r2, pc, r2
   15f58:	str	r3, [r2]
   15f5c:	pop	{r4, r5, r6, r7, r8, pc}
   15f60:	ldr	lr, [r0, #12]
   15f64:	cmp	r2, #0
   15f68:	str	r2, [r0, #28]
   15f6c:	str	r3, [r0, #32]
   15f70:	asr	ip, lr, #31
   15f74:	add	r4, lr, #31
   15f78:	beq	16128 <rb_setselect_select+0x2e4>
   15f7c:	cmp	lr, #0
   15f80:	movge	r4, lr
   15f84:	ldr	r6, [pc, #500]	; 16180 <rb_setselect_select+0x33c>
   15f88:	lsr	ip, ip, #27
   15f8c:	add	r6, pc, r6
   15f90:	add	r5, lr, ip
   15f94:	asr	r4, r4, #5
   15f98:	and	r5, r5, #31
   15f9c:	ldr	r7, [r6, r4, lsl #2]
   15fa0:	sub	r5, r5, ip
   15fa4:	mov	r8, #1
   15fa8:	ldr	ip, [r0, #20]
   15fac:	orr	r5, r7, r8, lsl r5
   15fb0:	orr	ip, ip, r8
   15fb4:	str	r5, [r6, r4, lsl #2]
   15fb8:	str	ip, [r0, #20]
   15fbc:	tst	ip, #3
   15fc0:	bne	1607c <rb_setselect_select+0x238>
   15fc4:	ldr	ip, [pc, #440]	; 16184 <rb_setselect_select+0x340>
   15fc8:	add	ip, pc, ip
   15fcc:	ldr	ip, [ip]
   15fd0:	cmp	lr, ip
   15fd4:	bgt	15e50 <rb_setselect_select+0xc>
   15fd8:	cmp	ip, #0
   15fdc:	blt	15e50 <rb_setselect_select+0xc>
   15fe0:	ldr	r4, [pc, #416]	; 16188 <rb_setselect_select+0x344>
   15fe4:	asr	r5, ip, #5
   15fe8:	add	r4, pc, r4
   15fec:	and	lr, ip, #31
   15ff0:	mov	r7, #1
   15ff4:	ldr	r6, [r4, r5, lsl #2]
   15ff8:	lsl	lr, r7, lr
   15ffc:	tst	lr, r6
   16000:	bne	15e50 <rb_setselect_select+0xc>
   16004:	add	r4, r4, r5, lsl #2
   16008:	ldr	r4, [r4, #128]	; 0x80
   1600c:	tst	lr, r4
   16010:	bne	15e50 <rb_setselect_select+0xc>
   16014:	ldr	r5, [pc, #368]	; 1618c <rb_setselect_select+0x348>
   16018:	add	r5, pc, r5
   1601c:	b	16038 <rb_setselect_select+0x1f4>
   16020:	ldr	r4, [r5, r4, lsl #2]
   16024:	tst	lr, r4
   16028:	bne	16108 <rb_setselect_select+0x2c4>
   1602c:	ldr	r4, [r6, #128]	; 0x80
   16030:	tst	lr, r4
   16034:	bne	16118 <rb_setselect_select+0x2d4>
   16038:	sub	ip, ip, #1
   1603c:	and	lr, ip, #31
   16040:	asr	r4, ip, #5
   16044:	cmn	ip, #1
   16048:	lsl	lr, r7, lr
   1604c:	add	r6, r5, r4, lsl #2
   16050:	bne	16020 <rb_setselect_select+0x1dc>
   16054:	ldr	lr, [pc, #308]	; 16190 <rb_setselect_select+0x34c>
   16058:	add	lr, pc, lr
   1605c:	str	ip, [lr]
   16060:	b	15e50 <rb_setselect_select+0xc>
   16064:	ldr	r3, [pc, #296]	; 16194 <rb_setselect_select+0x350>
   16068:	add	r3, pc, r3
   1606c:	ldr	r1, [r3]
   16070:	cmp	r2, r1
   16074:	strgt	r2, [r3]
   16078:	pop	{r4, r5, r6, r7, r8, pc}
   1607c:	ldr	ip, [pc, #276]	; 16198 <rb_setselect_select+0x354>
   16080:	add	ip, pc, ip
   16084:	ldr	r4, [ip]
   16088:	cmp	lr, r4
   1608c:	strgt	lr, [ip]
   16090:	tst	r1, #2
   16094:	popeq	{r4, r5, r6, r7, r8, pc}
   16098:	b	15e58 <rb_setselect_select+0x14>
   1609c:	ldr	r2, [pc, #248]	; 1619c <rb_setselect_select+0x358>
   160a0:	add	r2, pc, r2
   160a4:	str	r3, [r2]
   160a8:	pop	{r4, r5, r6, r7, r8, pc}
   160ac:	ldr	r2, [pc, #236]	; 161a0 <rb_setselect_select+0x35c>
   160b0:	add	r2, pc, r2
   160b4:	str	r3, [r2]
   160b8:	pop	{r4, r5, r6, r7, r8, pc}
   160bc:	cmp	r2, #0
   160c0:	movge	r1, r2
   160c4:	asr	r3, r2, #31
   160c8:	asr	ip, r1, #5
   160cc:	ldr	r1, [pc, #208]	; 161a4 <rb_setselect_select+0x360>
   160d0:	lsr	r3, r3, #27
   160d4:	add	r1, pc, r1
   160d8:	add	r1, r1, ip, lsl #2
   160dc:	add	ip, r2, r3
   160e0:	and	ip, ip, #31
   160e4:	ldr	lr, [r1, #128]	; 0x80
   160e8:	sub	ip, ip, r3
   160ec:	mov	r4, #1
   160f0:	ldr	r3, [r0, #20]
   160f4:	bic	ip, lr, r4, lsl ip
   160f8:	bic	r3, r3, #2
   160fc:	str	ip, [r1, #128]	; 0x80
   16100:	str	r3, [r0, #20]
   16104:	b	15eb8 <rb_setselect_select+0x74>
   16108:	ldr	lr, [pc, #152]	; 161a8 <rb_setselect_select+0x364>
   1610c:	add	lr, pc, lr
   16110:	str	ip, [lr]
   16114:	b	15e50 <rb_setselect_select+0xc>
   16118:	ldr	lr, [pc, #140]	; 161ac <rb_setselect_select+0x368>
   1611c:	add	lr, pc, lr
   16120:	str	ip, [lr]
   16124:	b	15e50 <rb_setselect_select+0xc>
   16128:	cmp	lr, #0
   1612c:	movge	r4, lr
   16130:	ldr	r6, [pc, #120]	; 161b0 <rb_setselect_select+0x36c>
   16134:	lsr	ip, ip, #27
   16138:	add	r6, pc, r6
   1613c:	add	r5, lr, ip
   16140:	asr	r4, r4, #5
   16144:	and	r5, r5, #31
   16148:	ldr	r7, [r6, r4, lsl #2]
   1614c:	sub	r5, r5, ip
   16150:	mov	r8, #1
   16154:	ldr	ip, [r0, #20]
   16158:	bic	r5, r7, r8, lsl r5
   1615c:	bic	ip, ip, #1
   16160:	str	r5, [r6, r4, lsl #2]
   16164:	str	ip, [r0, #20]
   16168:	b	15fbc <rb_setselect_select+0x178>
   1616c:	.word	0x00034e8c
   16170:	.word	0x000175bc
   16174:	.word	0x00034e30
   16178:	.word	0x00034e00
   1617c:	.word	0x0001752c
   16180:	.word	0x00034d88
   16184:	.word	0x000174b8
   16188:	.word	0x00034d2c
   1618c:	.word	0x00034cfc
   16190:	.word	0x00017428
   16194:	.word	0x00017418
   16198:	.word	0x00017400
   1619c:	.word	0x000173e0
   161a0:	.word	0x000173d0
   161a4:	.word	0x00034c40
   161a8:	.word	0x00017374
   161ac:	.word	0x00017364
   161b0:	.word	0x00034bdc

000161b4 <rb_select_select>:
   161b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161b8:	mov	r2, #128	; 0x80
   161bc:	ldr	r7, [pc, #652]	; 16450 <rb_select_select+0x29c>
   161c0:	sub	sp, sp, #36	; 0x24
   161c4:	add	r7, pc, r7
   161c8:	add	r5, r7, #256	; 0x100
   161cc:	mov	r1, r7
   161d0:	add	r4, r7, #384	; 0x180
   161d4:	mov	r6, r0
   161d8:	mov	r0, r5
   161dc:	bl	4808 <memcpy@plt>
   161e0:	add	r1, r7, #128	; 0x80
   161e4:	mov	r0, r4
   161e8:	mov	r2, #128	; 0x80
   161ec:	bl	4808 <memcpy@plt>
   161f0:	ldr	r8, [pc, #604]	; 16454 <rb_select_select+0x2a0>
   161f4:	mov	r3, #1000	; 0x3e8
   161f8:	ldr	r7, [pc, #600]	; 16458 <rb_select_select+0x2a4>
   161fc:	add	r8, pc, r8
   16200:	mul	r6, r3, r6
   16204:	add	sl, sp, #24
   16208:	mov	r9, #0
   1620c:	add	r7, pc, r7
   16210:	b	16228 <rb_select_select+0x74>
   16214:	bl	4ce8 <__errno_location@plt>
   16218:	ldr	r0, [r0]
   1621c:	bl	43dc <rb_ignore_errno@plt>
   16220:	cmp	r0, #0
   16224:	beq	16414 <rb_select_select+0x260>
   16228:	ldr	r0, [r8]
   1622c:	mov	r3, #0
   16230:	str	sl, [sp]
   16234:	add	r0, r0, #1
   16238:	mov	r2, r4
   1623c:	mov	r1, r5
   16240:	str	r9, [sp, #24]
   16244:	str	r6, [sp, #28]
   16248:	bl	4934 <select@plt>
   1624c:	cmp	r0, #0
   16250:	blt	16214 <rb_select_select+0x60>
   16254:	mov	fp, r0
   16258:	bl	4994 <rb_set_time@plt>
   1625c:	cmp	fp, #0
   16260:	beq	16300 <rb_select_select+0x14c>
   16264:	ldr	r1, [r8]
   16268:	cmp	r1, #0
   1626c:	blt	16300 <rb_select_select+0x14c>
   16270:	ldr	r3, [pc, #484]	; 1645c <rb_select_select+0x2a8>
   16274:	ldr	r9, [pc, #484]	; 16460 <rb_select_select+0x2ac>
   16278:	ldr	fp, [pc, #484]	; 16464 <rb_select_select+0x2b0>
   1627c:	ldr	r7, [r7, r3]
   16280:	ldr	r3, [pc, #480]	; 16468 <rb_select_select+0x2b4>
   16284:	ldr	r8, [pc, #480]	; 1646c <rb_select_select+0x2b8>
   16288:	add	r3, pc, r3
   1628c:	str	r3, [sp, #20]
   16290:	ldr	r3, [pc, #472]	; 16470 <rb_select_select+0x2bc>
   16294:	add	r9, pc, r9
   16298:	add	r3, pc, r3
   1629c:	str	r3, [sp, #16]
   162a0:	ldr	r3, [pc, #460]	; 16474 <rb_select_select+0x2c0>
   162a4:	add	fp, pc, fp
   162a8:	mov	r5, #0
   162ac:	add	r3, pc, r3
   162b0:	str	r3, [sp, #12]
   162b4:	asr	r3, r5, #24
   162b8:	eor	r3, r3, r5, asr #12
   162bc:	eor	r3, r3, r5
   162c0:	and	r3, r3, r8
   162c4:	ldr	r2, [r7]
   162c8:	add	r3, r3, r3, lsl #1
   162cc:	ldr	r3, [r2, r3, lsl #2]
   162d0:	cmp	r3, #0
   162d4:	beq	162f4 <rb_select_select+0x140>
   162d8:	ldr	r4, [r3]
   162dc:	ldr	r2, [r4, #12]
   162e0:	cmp	r5, r2
   162e4:	beq	1630c <rb_select_select+0x158>
   162e8:	ldr	r3, [r3, #8]
   162ec:	cmp	r3, #0
   162f0:	bne	162d8 <rb_select_select+0x124>
   162f4:	add	r5, r5, #1
   162f8:	cmp	r5, r1
   162fc:	ble	162b4 <rb_select_select+0x100>
   16300:	mov	r0, #0
   16304:	add	sp, sp, #36	; 0x24
   16308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1630c:	cmp	r5, #0
   16310:	add	r6, r5, #31
   16314:	asr	r2, r5, #31
   16318:	movge	r6, r5
   1631c:	lsr	r2, r2, #27
   16320:	asr	r6, r6, #5
   16324:	add	r3, r5, r2
   16328:	and	r3, r3, #31
   1632c:	lsl	r6, r6, #2
   16330:	sub	r2, r3, r2
   16334:	add	r1, r9, r6
   16338:	mov	r3, #1
   1633c:	ldr	r1, [r1, #256]	; 0x100
   16340:	lsl	sl, r3, r2
   16344:	tst	sl, r1
   16348:	beq	1636c <rb_select_select+0x1b8>
   1634c:	ldr	r2, [r4, #28]
   16350:	mov	r1, #0
   16354:	cmp	r2, r1
   16358:	str	r1, [r4, #28]
   1635c:	beq	1636c <rb_select_select+0x1b8>
   16360:	ldr	r1, [r4, #32]
   16364:	mov	r0, r4
   16368:	blx	r2
   1636c:	ldrb	r2, [r4, #16]
   16370:	tst	r2, #1
   16374:	bne	16390 <rb_select_select+0x1dc>
   16378:	ldr	r3, [sp, #12]
   1637c:	add	r5, r5, #1
   16380:	ldr	r1, [r3]
   16384:	cmp	r5, r1
   16388:	ble	162b4 <rb_select_select+0x100>
   1638c:	b	16300 <rb_select_select+0x14c>
   16390:	add	r6, fp, r6
   16394:	ldr	r2, [r6, #384]	; 0x180
   16398:	tst	sl, r2
   1639c:	beq	163c0 <rb_select_select+0x20c>
   163a0:	ldr	r3, [r4, #36]	; 0x24
   163a4:	mov	r2, #0
   163a8:	cmp	r3, r2
   163ac:	str	r2, [r4, #36]	; 0x24
   163b0:	beq	163f0 <rb_select_select+0x23c>
   163b4:	ldr	r1, [r4, #40]	; 0x28
   163b8:	mov	r0, r4
   163bc:	blx	r3
   163c0:	ldr	r3, [r4, #28]
   163c4:	cmp	r3, #0
   163c8:	beq	163fc <rb_select_select+0x248>
   163cc:	ldr	r3, [r4, #36]	; 0x24
   163d0:	cmp	r3, #0
   163d4:	beq	16424 <rb_select_select+0x270>
   163d8:	ldr	r3, [sp, #16]
   163dc:	add	r5, r5, #1
   163e0:	ldr	r1, [r3]
   163e4:	cmp	r5, r1
   163e8:	ble	162b4 <rb_select_select+0x100>
   163ec:	b	16300 <rb_select_select+0x14c>
   163f0:	ldr	r3, [r4, #28]
   163f4:	cmp	r3, #0
   163f8:	bne	16424 <rb_select_select+0x270>
   163fc:	mov	r3, #0
   16400:	mov	r2, #1
   16404:	add	r1, r4, #20
   16408:	ldr	r0, [r4, #12]
   1640c:	bl	15b58 <select_update_selectfds.isra.0>
   16410:	b	163cc <rb_select_select+0x218>
   16414:	bl	4994 <rb_set_time@plt>
   16418:	mvn	r0, #0
   1641c:	add	sp, sp, #36	; 0x24
   16420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16424:	mov	r3, #0
   16428:	add	r1, r4, #20
   1642c:	mov	r2, #2
   16430:	ldr	r0, [r4, #12]
   16434:	bl	15b58 <select_update_selectfds.isra.0>
   16438:	ldr	r3, [sp, #20]
   1643c:	add	r5, r5, #1
   16440:	ldr	r1, [r3]
   16444:	cmp	r5, r1
   16448:	ble	162b4 <rb_select_select+0x100>
   1644c:	b	16300 <rb_select_select+0x14c>
   16450:	.word	0x00034b50
   16454:	.word	0x00017284
   16458:	.word	0x00016dec
   1645c:	.word	0x000003c0
   16460:	.word	0x00034a80
   16464:	.word	0x00034a70
   16468:	.word	0x000171f8
   1646c:	.word	0x00000fff
   16470:	.word	0x000171e8
   16474:	.word	0x000171d4

00016478 <rb_init_netio_kqueue>:
   16478:	push	{r4, lr}
   1647c:	bl	4ce8 <__errno_location@plt>
   16480:	mov	r3, #38	; 0x26
   16484:	str	r3, [r0]
   16488:	mvn	r0, #0
   1648c:	pop	{r4, pc}

00016490 <rb_setselect_kqueue>:
   16490:	push	{r4, lr}
   16494:	bl	4ce8 <__errno_location@plt>
   16498:	mov	r3, #38	; 0x26
   1649c:	str	r3, [r0]
   164a0:	pop	{r4, pc}

000164a4 <rb_select_kqueue>:
   164a4:	push	{r4, lr}
   164a8:	bl	4ce8 <__errno_location@plt>
   164ac:	mov	r3, #38	; 0x26
   164b0:	str	r3, [r0]
   164b4:	mvn	r0, #0
   164b8:	pop	{r4, pc}

000164bc <rb_setup_fd_kqueue>:
   164bc:	push	{r4, lr}
   164c0:	bl	4ce8 <__errno_location@plt>
   164c4:	mov	r3, #38	; 0x26
   164c8:	str	r3, [r0]
   164cc:	mvn	r0, #0
   164d0:	pop	{r4, pc}

000164d4 <rb_kqueue_init_event>:
   164d4:	bx	lr

000164d8 <rb_kqueue_sched_event>:
   164d8:	push	{r4, lr}
   164dc:	bl	4ce8 <__errno_location@plt>
   164e0:	mov	r3, #38	; 0x26
   164e4:	str	r3, [r0]
   164e8:	mvn	r0, #0
   164ec:	pop	{r4, pc}

000164f0 <rb_kqueue_unsched_event>:
   164f0:	bx	lr

000164f4 <rb_kqueue_supports_event>:
   164f4:	push	{r4, lr}
   164f8:	bl	4ce8 <__errno_location@plt>
   164fc:	mov	r3, #38	; 0x26
   16500:	str	r3, [r0]
   16504:	mov	r0, #0
   16508:	pop	{r4, pc}

0001650c <rb_rawbuf_flush_writev>:
   1650c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16510:	sub	sp, sp, #8192	; 0x2000
   16514:	sub	sp, sp, #12
   16518:	mov	r4, r0
   1651c:	add	r7, sp, #8
   16520:	mov	r2, #8192	; 0x2000
   16524:	mov	r6, r1
   16528:	mov	r0, r7
   1652c:	mov	r1, #0
   16530:	bl	4628 <memset@plt>
   16534:	ldr	r1, [r4]
   16538:	cmp	r1, #0
   1653c:	movne	ip, r7
   16540:	ldrne	r8, [pc, #488]	; 16730 <rb_rawbuf_flush_writev+0x224>
   16544:	movne	r2, #1
   16548:	bne	1655c <rb_rawbuf_flush_writev+0x50>
   1654c:	b	1671c <rb_rawbuf_flush_writev+0x210>
   16550:	cmp	r2, r8
   16554:	add	ip, ip, #8
   16558:	beq	16714 <rb_rawbuf_flush_writev+0x208>
   1655c:	ldr	r3, [r1]
   16560:	mov	r5, r2
   16564:	add	r0, r3, #12
   16568:	ldrb	r9, [r3, #1040]	; 0x410
   1656c:	mov	lr, r0
   16570:	ldr	r3, [r3, #1036]	; 0x40c
   16574:	cmp	r9, #0
   16578:	add	r2, r2, #1
   1657c:	ldrne	r0, [r4, #16]
   16580:	subne	r3, r3, r0
   16584:	addne	r0, lr, r0
   16588:	str	r0, [ip]
   1658c:	ldr	r1, [r1, #8]
   16590:	str	r3, [ip, #4]
   16594:	cmp	r1, #0
   16598:	bne	16550 <rb_rawbuf_flush_writev+0x44>
   1659c:	mov	r1, r7
   165a0:	mov	r0, r6
   165a4:	mov	r2, r5
   165a8:	bl	4ad8 <rb_writev@plt>
   165ac:	subs	r9, r0, #0
   165b0:	ble	16684 <rb_rawbuf_flush_writev+0x178>
   165b4:	ldr	r3, [r4]
   165b8:	cmp	r3, #0
   165bc:	beq	16684 <rb_rawbuf_flush_writev+0x178>
   165c0:	ldr	r6, [r3, #8]
   165c4:	ldr	r1, [r3]
   165c8:	ldr	r3, [pc, #356]	; 16734 <rb_rawbuf_flush_writev+0x228>
   165cc:	ldr	r8, [pc, #356]	; 16738 <rb_rawbuf_flush_writev+0x22c>
   165d0:	add	r3, pc, r3
   165d4:	add	r8, pc, r8
   165d8:	str	r3, [sp, #4]
   165dc:	add	r5, r5, #1
   165e0:	mov	r7, r9
   165e4:	mov	fp, #1
   165e8:	mov	sl, #0
   165ec:	b	16604 <rb_rawbuf_flush_writev+0xf8>
   165f0:	add	fp, fp, #1
   165f4:	cmp	fp, r5
   165f8:	ldr	r1, [r6]
   165fc:	ldr	r6, [r6, #8]
   16600:	beq	16684 <rb_rawbuf_flush_writev+0x178>
   16604:	ldrb	r2, [r1, #1040]	; 0x410
   16608:	cmp	r2, #0
   1660c:	ldr	r2, [r1, #1036]	; 0x40c
   16610:	beq	16624 <rb_rawbuf_flush_writev+0x118>
   16614:	ldr	r0, [r4, #16]
   16618:	sub	r0, r2, r0
   1661c:	cmp	r0, r7
   16620:	ble	16694 <rb_rawbuf_flush_writev+0x188>
   16624:	cmp	r2, r7
   16628:	bgt	166ec <rb_rawbuf_flush_writev+0x1e0>
   1662c:	ldr	r0, [r4, #12]
   16630:	ldr	ip, [r1, #8]
   16634:	sub	r0, r0, r2
   16638:	sub	r7, r7, r2
   1663c:	ldr	r2, [r1, #4]
   16640:	cmp	ip, #0
   16644:	str	r0, [r4, #12]
   16648:	streq	r2, [r4, #4]
   1664c:	strne	r2, [ip, #4]
   16650:	ldr	r2, [r1, #4]
   16654:	ldr	r0, [r8]
   16658:	cmp	r2, #0
   1665c:	strne	ip, [r2, #8]
   16660:	ldr	r2, [r4, #8]
   16664:	streq	ip, [r4]
   16668:	sub	r2, r2, #1
   1666c:	str	sl, [r1, #4]
   16670:	str	sl, [r1, #8]
   16674:	str	r2, [r4, #8]
   16678:	bl	48c8 <rb_bh_free@plt>
   1667c:	cmp	r6, #0
   16680:	bne	165f0 <rb_rawbuf_flush_writev+0xe4>
   16684:	mov	r0, r9
   16688:	add	sp, sp, #8192	; 0x2000
   1668c:	add	sp, sp, #12
   16690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16694:	ldr	r2, [r4, #12]
   16698:	ldr	ip, [r1, #8]
   1669c:	sub	r2, r2, r0
   166a0:	str	r2, [r4, #12]
   166a4:	ldr	r2, [r1, #4]
   166a8:	cmp	ip, #0
   166ac:	strne	r2, [ip, #4]
   166b0:	streq	r2, [r4, #4]
   166b4:	ldr	r2, [r1, #4]
   166b8:	ldr	r3, [sp, #4]
   166bc:	cmp	r2, #0
   166c0:	strne	ip, [r2, #8]
   166c4:	ldr	r2, [r4, #8]
   166c8:	streq	ip, [r4]
   166cc:	sub	r2, r2, #1
   166d0:	sub	r7, r7, r0
   166d4:	str	sl, [r1, #4]
   166d8:	str	sl, [r1, #8]
   166dc:	ldr	r0, [r3]
   166e0:	str	r2, [r4, #8]
   166e4:	bl	48c8 <rb_bh_free@plt>
   166e8:	b	1667c <rb_rawbuf_flush_writev+0x170>
   166ec:	mov	r3, #1
   166f0:	strb	r3, [r1, #1040]	; 0x410
   166f4:	ldr	r3, [r4, #12]
   166f8:	str	r7, [r4, #16]
   166fc:	sub	r7, r3, r7
   16700:	mov	r0, r9
   16704:	str	r7, [r4, #12]
   16708:	add	sp, sp, #8192	; 0x2000
   1670c:	add	sp, sp, #12
   16710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16714:	mov	r5, #1024	; 0x400
   16718:	b	1659c <rb_rawbuf_flush_writev+0x90>
   1671c:	bl	4ce8 <__errno_location@plt>
   16720:	mov	r3, #11
   16724:	mvn	r9, #0
   16728:	str	r3, [r0]
   1672c:	b	16684 <rb_rawbuf_flush_writev+0x178>
   16730:	.word	0x00000401
   16734:	.word	0x00034944
   16738:	.word	0x00034940

0001673c <rb_rawbuf_flush>:
   1673c:	ldr	r3, [r0]
   16740:	push	{r4, r5, r6, lr}
   16744:	cmp	r3, #0
   16748:	beq	16848 <rb_rawbuf_flush+0x10c>
   1674c:	mov	r4, r0
   16750:	mov	r0, r1
   16754:	mov	r6, r1
   16758:	bl	44b4 <rb_fd_ssl@plt>
   1675c:	cmp	r0, #0
   16760:	beq	167dc <rb_rawbuf_flush+0xa0>
   16764:	ldr	r3, [r4]
   16768:	mov	r0, r6
   1676c:	ldr	r5, [r3]
   16770:	ldrb	r3, [r5, #1040]	; 0x410
   16774:	cmp	r3, #0
   16778:	moveq	r1, #1
   1677c:	ldrne	r2, [r4, #16]
   16780:	moveq	ip, r3
   16784:	strbeq	r1, [r5, #1040]	; 0x410
   16788:	ldr	r1, [r5, #1036]	; 0x40c
   1678c:	movne	ip, r2
   16790:	moveq	r2, ip
   16794:	streq	r3, [r4, #16]
   16798:	add	r3, r5, #12
   1679c:	sub	r2, r1, r2
   167a0:	add	r1, r3, ip
   167a4:	bl	4658 <rb_write@plt>
   167a8:	subs	r6, r0, #0
   167ac:	ble	167d4 <rb_rawbuf_flush+0x98>
   167b0:	ldr	r3, [r4, #16]
   167b4:	ldr	r2, [r5, #1036]	; 0x40c
   167b8:	add	r3, r6, r3
   167bc:	cmp	r3, r2
   167c0:	str	r3, [r4, #16]
   167c4:	beq	167ec <rb_rawbuf_flush+0xb0>
   167c8:	ldr	r3, [r4, #12]
   167cc:	sub	r3, r3, r6
   167d0:	str	r3, [r4, #12]
   167d4:	mov	r0, r6
   167d8:	pop	{r4, r5, r6, pc}
   167dc:	mov	r1, r6
   167e0:	mov	r0, r4
   167e4:	pop	{r4, r5, r6, lr}
   167e8:	b	1650c <rb_rawbuf_flush_writev>
   167ec:	ldr	r3, [r5, #8]
   167f0:	mov	r2, #0
   167f4:	str	r2, [r4, #16]
   167f8:	cmp	r3, r2
   167fc:	ldr	r2, [r5, #4]
   16800:	mov	r1, #0
   16804:	strne	r2, [r3, #4]
   16808:	streq	r2, [r4, #4]
   1680c:	ldr	r2, [r5, #4]
   16810:	cmp	r2, #0
   16814:	strne	r3, [r2, #8]
   16818:	streq	r3, [r4]
   1681c:	ldr	r3, [pc, #56]	; 1685c <rb_rawbuf_flush+0x120>
   16820:	ldr	r2, [r4, #8]
   16824:	add	r3, pc, r3
   16828:	sub	r2, r2, #1
   1682c:	str	r1, [r5, #4]
   16830:	str	r1, [r5, #8]
   16834:	ldr	r0, [r3]
   16838:	mov	r1, r5
   1683c:	str	r2, [r4, #8]
   16840:	bl	48c8 <rb_bh_free@plt>
   16844:	b	167c8 <rb_rawbuf_flush+0x8c>
   16848:	bl	4ce8 <__errno_location@plt>
   1684c:	mov	r3, #11
   16850:	mvn	r6, #0
   16854:	str	r3, [r0]
   16858:	b	167d4 <rb_rawbuf_flush+0x98>
   1685c:	.word	0x000346f0

00016860 <rb_rawbuf_append>:
   16860:	ldr	r3, [r0, #4]
   16864:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16868:	cmp	r3, #0
   1686c:	mov	r5, r0
   16870:	mov	r7, r2
   16874:	mov	r8, r1
   16878:	beq	16894 <rb_rawbuf_append+0x34>
   1687c:	ldr	r4, [r3]
   16880:	cmp	r4, #0
   16884:	beq	16894 <rb_rawbuf_append+0x34>
   16888:	ldr	r3, [r4, #1036]	; 0x40c
   1688c:	cmp	r3, #1024	; 0x400
   16890:	blt	16938 <rb_rawbuf_append+0xd8>
   16894:	cmp	r7, #0
   16898:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   1689c:	ldr	sl, [pc, #236]	; 16990 <rb_rawbuf_append+0x130>
   168a0:	mov	r9, #0
   168a4:	add	sl, pc, sl
   168a8:	b	16900 <rb_rawbuf_append+0xa0>
   168ac:	ldr	r3, [r5, #8]
   168b0:	cmp	r7, #1024	; 0x400
   168b4:	movlt	r6, r7
   168b8:	movge	r6, #1024	; 0x400
   168bc:	add	r3, r3, #1
   168c0:	mov	r2, r6
   168c4:	str	r3, [r5, #8]
   168c8:	mov	r1, r8
   168cc:	str	r4, [r5, #4]
   168d0:	add	r0, r4, #12
   168d4:	bl	4808 <memcpy@plt>
   168d8:	ldr	r2, [r4, #1036]	; 0x40c
   168dc:	ldr	r3, [r5, #12]
   168e0:	sub	r7, r7, r6
   168e4:	add	r2, r2, r6
   168e8:	add	r3, r3, r6
   168ec:	cmp	r7, #0
   168f0:	str	r2, [r4, #1036]	; 0x40c
   168f4:	add	r8, r8, r6
   168f8:	str	r3, [r5, #12]
   168fc:	ble	16934 <rb_rawbuf_append+0xd4>
   16900:	ldr	r0, [sl]
   16904:	bl	4958 <rb_bh_alloc@plt>
   16908:	ldr	r3, [r5, #4]
   1690c:	cmp	r3, #0
   16910:	mov	r4, r0
   16914:	str	r0, [r4]
   16918:	stmib	r0, {r3, r9}
   1691c:	strne	r0, [r3, #8]
   16920:	bne	168ac <rb_rawbuf_append+0x4c>
   16924:	ldr	r3, [r5]
   16928:	cmp	r3, #0
   1692c:	streq	r0, [r5]
   16930:	b	168ac <rb_rawbuf_append+0x4c>
   16934:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16938:	ldrb	r2, [r4, #1040]	; 0x410
   1693c:	cmp	r2, #0
   16940:	bne	16894 <rb_rawbuf_append+0x34>
   16944:	rsb	r6, r3, #1024	; 0x400
   16948:	cmp	r7, r6
   1694c:	movlt	r6, r7
   16950:	add	r0, r4, #12
   16954:	mov	r2, r6
   16958:	add	r0, r0, r3
   1695c:	bl	4808 <memcpy@plt>
   16960:	ldr	r2, [r4, #1036]	; 0x40c
   16964:	ldr	r3, [r5, #12]
   16968:	subs	r7, r7, r6
   1696c:	add	r2, r2, r6
   16970:	add	r3, r3, r6
   16974:	str	r2, [r4, #1036]	; 0x40c
   16978:	str	r3, [r5, #12]
   1697c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16980:	cmp	r7, #0
   16984:	add	r8, r8, r6
   16988:	bgt	1689c <rb_rawbuf_append+0x3c>
   1698c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16990:	.word	0x00034670

00016994 <rb_rawbuf_get>:
   16994:	push	{r4, r5, r6, r7, r8, lr}
   16998:	ldr	r4, [r0]
   1699c:	cmp	r4, #0
   169a0:	beq	16a1c <rb_rawbuf_get+0x88>
   169a4:	ldr	r7, [r4]
   169a8:	mov	r6, r2
   169ac:	mov	r5, r0
   169b0:	ldrb	r3, [r7, #1040]	; 0x410
   169b4:	ldr	r4, [r7, #1036]	; 0x40c
   169b8:	cmp	r3, #0
   169bc:	addne	ip, r7, #12
   169c0:	ldrne	r3, [r0, #16]
   169c4:	addeq	ip, r7, #12
   169c8:	addne	ip, ip, r3
   169cc:	cmp	r2, r4
   169d0:	mov	r3, r1
   169d4:	movlt	r4, r2
   169d8:	mov	r0, r3
   169dc:	mov	r1, ip
   169e0:	mov	r2, r4
   169e4:	bl	4808 <memcpy@plt>
   169e8:	ldr	r3, [r7, #1036]	; 0x40c
   169ec:	cmp	r3, r4
   169f0:	beq	16a24 <rb_rawbuf_get+0x90>
   169f4:	mov	r2, #1
   169f8:	strb	r2, [r7, #1040]	; 0x410
   169fc:	ldr	r1, [r5, #12]
   16a00:	ldr	r2, [r5, #16]
   16a04:	sub	r3, r3, r4
   16a08:	sub	r1, r1, r4
   16a0c:	add	r2, r2, r4
   16a10:	str	r3, [r7, #1036]	; 0x40c
   16a14:	str	r1, [r5, #12]
   16a18:	str	r2, [r5, #16]
   16a1c:	mov	r0, r4
   16a20:	pop	{r4, r5, r6, r7, r8, pc}
   16a24:	ldr	r3, [r7, #8]
   16a28:	mov	r2, #0
   16a2c:	str	r2, [r5, #16]
   16a30:	cmp	r3, r2
   16a34:	ldr	r2, [r7, #4]
   16a38:	mov	r1, #0
   16a3c:	strne	r2, [r3, #4]
   16a40:	streq	r2, [r5, #4]
   16a44:	ldr	r2, [r7, #4]
   16a48:	cmp	r2, #0
   16a4c:	strne	r3, [r2, #8]
   16a50:	streq	r3, [r5]
   16a54:	ldr	r3, [pc, #48]	; 16a8c <rb_rawbuf_get+0xf8>
   16a58:	ldr	r2, [r5, #8]
   16a5c:	add	r3, pc, r3
   16a60:	sub	r2, r2, #1
   16a64:	str	r1, [r7, #4]
   16a68:	str	r1, [r7, #8]
   16a6c:	ldr	r0, [r3]
   16a70:	str	r2, [r5, #8]
   16a74:	mov	r1, r7
   16a78:	bl	48c8 <rb_bh_free@plt>
   16a7c:	ldr	r2, [r5, #12]
   16a80:	sub	r6, r2, r6
   16a84:	str	r6, [r5, #12]
   16a88:	b	16a1c <rb_rawbuf_get+0x88>
   16a8c:	.word	0x000344b8

00016a90 <rb_rawbuf_length>:
   16a90:	ldr	r0, [r0, #12]
   16a94:	bx	lr

00016a98 <rb_new_rawbuffer>:
   16a98:	push	{r4, lr}
   16a9c:	mov	r1, #20
   16aa0:	mov	r0, #1
   16aa4:	bl	45ec <calloc@plt>
   16aa8:	cmp	r0, #0
   16aac:	popne	{r4, pc}
   16ab0:	bl	4988 <rb_outofmemory@plt>

00016ab4 <rb_free_rawbuffer>:
   16ab4:	ldr	r3, [r0]
   16ab8:	push	{r4, r5, r6, r7, r8, lr}
   16abc:	cmp	r3, #0
   16ac0:	mov	r8, r0
   16ac4:	beq	16b64 <rb_free_rawbuffer+0xb0>
   16ac8:	ldr	r7, [pc, #160]	; 16b70 <rb_free_rawbuffer+0xbc>
   16acc:	ldr	r6, [pc, #160]	; 16b74 <rb_free_rawbuffer+0xc0>
   16ad0:	ldr	r4, [r3, #8]
   16ad4:	add	r7, pc, r7
   16ad8:	add	r6, pc, r6
   16adc:	mov	r5, #0
   16ae0:	b	16b14 <rb_free_rawbuffer+0x60>
   16ae4:	ldr	ip, [r8, #8]
   16ae8:	str	r2, [r0, #8]
   16aec:	sub	r2, ip, #1
   16af0:	str	r5, [r3, #4]
   16af4:	str	r5, [r3, #8]
   16af8:	ldr	r0, [r6]
   16afc:	str	r2, [r8, #8]
   16b00:	bl	48c8 <rb_bh_free@plt>
   16b04:	cmp	r4, #0
   16b08:	beq	16b64 <rb_free_rawbuffer+0xb0>
   16b0c:	mov	r3, r4
   16b10:	ldr	r4, [r4, #8]
   16b14:	ldr	r3, [r3]
   16b18:	ldmib	r3, {r1, r2}
   16b1c:	cmp	r2, #0
   16b20:	strne	r1, [r2, #4]
   16b24:	streq	r1, [r8, #4]
   16b28:	ldr	r0, [r3, #4]
   16b2c:	mov	r1, r3
   16b30:	cmp	r0, #0
   16b34:	bne	16ae4 <rb_free_rawbuffer+0x30>
   16b38:	ldr	r1, [r8, #8]
   16b3c:	str	r2, [r8]
   16b40:	sub	r2, r1, #1
   16b44:	str	r0, [r3, #4]
   16b48:	str	r0, [r3, #8]
   16b4c:	mov	r1, r3
   16b50:	str	r2, [r8, #8]
   16b54:	ldr	r0, [r7]
   16b58:	bl	48c8 <rb_bh_free@plt>
   16b5c:	cmp	r4, #0
   16b60:	bne	16b0c <rb_free_rawbuffer+0x58>
   16b64:	mov	r0, r8
   16b68:	pop	{r4, r5, r6, r7, r8, lr}
   16b6c:	b	46f4 <free@plt>
   16b70:	.word	0x00034440
   16b74:	.word	0x0003443c

00016b78 <rb_init_rawbuffers>:
   16b78:	push	{r4, lr}
   16b7c:	ldr	r4, [pc, #40]	; 16bac <rb_init_rawbuffers+0x34>
   16b80:	add	r4, pc, r4
   16b84:	ldr	r3, [r4]
   16b88:	cmp	r3, #0
   16b8c:	popne	{r4, pc}
   16b90:	ldr	r2, [pc, #24]	; 16bb0 <rb_init_rawbuffers+0x38>
   16b94:	mov	r1, r0
   16b98:	add	r2, pc, r2
   16b9c:	ldr	r0, [pc, #16]	; 16bb4 <rb_init_rawbuffers+0x3c>
   16ba0:	bl	4ab4 <rb_bh_create@plt>
   16ba4:	str	r0, [r4]
   16ba8:	pop	{r4, pc}
   16bac:	.word	0x00034394
   16bb0:	.word	0x00005250
   16bb4:	.word	0x00000414

00016bb8 <ascii2prefix>:
   16bb8:	push	{r4, r5, r6, r7, r8, lr}
   16bbc:	subs	r6, r1, #0
   16bc0:	sub	sp, sp, #1040	; 0x410
   16bc4:	sub	sp, sp, #8
   16bc8:	beq	16ce4 <ascii2prefix+0x12c>
   16bcc:	cmp	r0, #0
   16bd0:	mov	r4, r0
   16bd4:	beq	16cc0 <ascii2prefix+0x108>
   16bd8:	cmp	r0, #2
   16bdc:	moveq	r7, #32
   16be0:	beq	16bf0 <ascii2prefix+0x38>
   16be4:	cmp	r0, #10
   16be8:	moveq	r7, #128	; 0x80
   16bec:	movne	r7, #0
   16bf0:	mov	r1, #47	; 0x2f
   16bf4:	mov	r0, r6
   16bf8:	bl	45b0 <strchr@plt>
   16bfc:	subs	r5, r0, #0
   16c00:	beq	16c50 <ascii2prefix+0x98>
   16c04:	mov	r2, #10
   16c08:	mov	r1, #0
   16c0c:	add	r0, r5, #1
   16c10:	bl	4874 <strtol@plt>
   16c14:	sub	r5, r5, r6
   16c18:	mov	r1, r6
   16c1c:	add	r6, sp, #24
   16c20:	mov	r2, r5
   16c24:	mov	r8, r0
   16c28:	mov	r0, r6
   16c2c:	bl	4808 <memcpy@plt>
   16c30:	add	r3, sp, #1040	; 0x410
   16c34:	cmp	r7, r8
   16c38:	cmpge	r8, #0
   16c3c:	add	r3, r3, #8
   16c40:	add	r3, r3, r5
   16c44:	movgt	r7, r8
   16c48:	mov	r2, #0
   16c4c:	strb	r2, [r3, #-1024]	; 0xfffffc00
   16c50:	cmp	r4, #2
   16c54:	beq	16cf8 <ascii2prefix+0x140>
   16c58:	cmp	r4, #10
   16c5c:	bne	16ce4 <ascii2prefix+0x12c>
   16c60:	add	r5, sp, #8
   16c64:	mov	r1, r6
   16c68:	mov	r2, r5
   16c6c:	mov	r0, r4
   16c70:	bl	4634 <rb_inet_pton@plt>
   16c74:	cmp	r0, #0
   16c78:	ble	16ce4 <ascii2prefix+0x12c>
   16c7c:	mov	r1, #24
   16c80:	mov	r0, #1
   16c84:	bl	45ec <calloc@plt>
   16c88:	subs	lr, r0, #0
   16c8c:	beq	16d4c <ascii2prefix+0x194>
   16c90:	ldm	r5, {r0, r1, r2, r3}
   16c94:	add	r5, lr, #8
   16c98:	mov	ip, lr
   16c9c:	mov	r6, #1
   16ca0:	stm	r5, {r0, r1, r2, r3}
   16ca4:	mov	r0, ip
   16ca8:	strh	r7, [lr, #2]
   16cac:	strh	r4, [lr]
   16cb0:	str	r6, [lr, #4]
   16cb4:	add	sp, sp, #1040	; 0x410
   16cb8:	add	sp, sp, #8
   16cbc:	pop	{r4, r5, r6, r7, r8, pc}
   16cc0:	mov	r1, #58	; 0x3a
   16cc4:	mov	r0, r6
   16cc8:	bl	45b0 <strchr@plt>
   16ccc:	cmp	r0, #0
   16cd0:	moveq	r4, #2
   16cd4:	movne	r4, #10
   16cd8:	moveq	r7, #32
   16cdc:	movne	r7, #128	; 0x80
   16ce0:	b	16bf0 <ascii2prefix+0x38>
   16ce4:	mov	ip, #0
   16ce8:	mov	r0, ip
   16cec:	add	sp, sp, #1040	; 0x410
   16cf0:	add	sp, sp, #8
   16cf4:	pop	{r4, r5, r6, r7, r8, pc}
   16cf8:	mov	r1, r6
   16cfc:	add	r2, sp, #4
   16d00:	mov	r0, r4
   16d04:	bl	4634 <rb_inet_pton@plt>
   16d08:	cmp	r0, #0
   16d0c:	ble	16ce4 <ascii2prefix+0x12c>
   16d10:	mov	r1, #24
   16d14:	mov	r0, #1
   16d18:	bl	45ec <calloc@plt>
   16d1c:	subs	ip, r0, #0
   16d20:	beq	16d4c <ascii2prefix+0x194>
   16d24:	ldr	r2, [sp, #4]
   16d28:	mov	r3, #1
   16d2c:	mov	r0, ip
   16d30:	strh	r7, [ip, #2]
   16d34:	strh	r4, [ip]
   16d38:	str	r2, [ip, #8]
   16d3c:	str	r3, [ip, #4]
   16d40:	add	sp, sp, #1040	; 0x410
   16d44:	add	sp, sp, #8
   16d48:	pop	{r4, r5, r6, r7, r8, pc}
   16d4c:	bl	4988 <rb_outofmemory@plt>

00016d50 <ascii2prefix.constprop.1>:
   16d50:	push	{r4, r5, r6, r7, lr}
   16d54:	subs	r5, r0, #0
   16d58:	sub	sp, sp, #1024	; 0x400
   16d5c:	sub	sp, sp, #12
   16d60:	beq	16e28 <ascii2prefix.constprop.1+0xd8>
   16d64:	mov	r1, #47	; 0x2f
   16d68:	bl	45b0 <strchr@plt>
   16d6c:	subs	r4, r0, #0
   16d70:	beq	16e1c <ascii2prefix.constprop.1+0xcc>
   16d74:	mov	r2, #10
   16d78:	mov	r1, #0
   16d7c:	add	r0, r4, #1
   16d80:	bl	4874 <strtol@plt>
   16d84:	sub	r4, r4, r5
   16d88:	add	r6, sp, #8
   16d8c:	mov	r1, r5
   16d90:	mov	r2, r4
   16d94:	mov	r5, r6
   16d98:	mov	r7, r0
   16d9c:	mov	r0, r6
   16da0:	bl	4808 <memcpy@plt>
   16da4:	sub	r2, r7, #1
   16da8:	add	r3, sp, #1024	; 0x400
   16dac:	add	r3, r3, #8
   16db0:	cmp	r2, #31
   16db4:	add	r3, r3, r4
   16db8:	movhi	r7, #32
   16dbc:	mov	r1, #0
   16dc0:	strb	r1, [r3, #-1024]	; 0xfffffc00
   16dc4:	sub	r2, r6, #4
   16dc8:	mov	r1, r5
   16dcc:	mov	r0, #2
   16dd0:	bl	4634 <rb_inet_pton@plt>
   16dd4:	cmp	r0, #0
   16dd8:	ble	16e28 <ascii2prefix.constprop.1+0xd8>
   16ddc:	mov	r1, #24
   16de0:	mov	r0, #1
   16de4:	bl	45ec <calloc@plt>
   16de8:	subs	r3, r0, #0
   16dec:	beq	16e38 <ascii2prefix.constprop.1+0xe8>
   16df0:	ldr	ip, [sp, #4]
   16df4:	mov	r1, #2
   16df8:	mov	r2, #1
   16dfc:	mov	r0, r3
   16e00:	strh	r7, [r3, #2]
   16e04:	str	ip, [r3, #8]
   16e08:	strh	r1, [r3]
   16e0c:	str	r2, [r3, #4]
   16e10:	add	sp, sp, #1024	; 0x400
   16e14:	add	sp, sp, #12
   16e18:	pop	{r4, r5, r6, r7, pc}
   16e1c:	mov	r7, #32
   16e20:	add	r6, sp, #8
   16e24:	b	16dc4 <ascii2prefix.constprop.1+0x74>
   16e28:	mov	r0, #0
   16e2c:	add	sp, sp, #1024	; 0x400
   16e30:	add	sp, sp, #12
   16e34:	pop	{r4, r5, r6, r7, pc}
   16e38:	bl	4988 <rb_outofmemory@plt>

00016e3c <rb_init_patricia>:
   16e3c:	bx	lr

00016e40 <rb_new_patricia>:
   16e40:	push	{r4, lr}
   16e44:	mov	r1, #12
   16e48:	mov	r4, r0
   16e4c:	mov	r0, #1
   16e50:	bl	45ec <calloc@plt>
   16e54:	subs	r3, r0, #0
   16e58:	beq	16e84 <rb_new_patricia+0x44>
   16e5c:	ldr	ip, [pc, #36]	; 16e88 <rb_new_patricia+0x48>
   16e60:	mov	r1, #0
   16e64:	add	ip, pc, ip
   16e68:	str	r4, [r3, #4]
   16e6c:	ldr	r2, [ip]
   16e70:	str	r1, [r3]
   16e74:	add	r2, r2, #1
   16e78:	str	r2, [ip]
   16e7c:	str	r1, [r3, #8]
   16e80:	pop	{r4, pc}
   16e84:	bl	4988 <rb_outofmemory@plt>
   16e88:	.word	0x000340b4

00016e8c <rb_clear_patricia>:
   16e8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e90:	mov	sl, r0
   16e94:	ldr	r4, [r0]
   16e98:	sub	sp, sp, #520	; 0x208
   16e9c:	cmp	r4, #0
   16ea0:	beq	16f50 <rb_clear_patricia+0xc4>
   16ea4:	add	r9, sp, #4
   16ea8:	mov	r8, r1
   16eac:	mov	r7, r9
   16eb0:	ldmib	r4, {r0, r5}
   16eb4:	ldr	r6, [r4, #12]
   16eb8:	cmp	r0, #0
   16ebc:	beq	16ee8 <rb_clear_patricia+0x5c>
   16ec0:	ldr	r3, [r0, #4]
   16ec4:	sub	r3, r3, #1
   16ec8:	cmp	r3, #0
   16ecc:	str	r3, [r0, #4]
   16ed0:	ble	16f60 <rb_clear_patricia+0xd4>
   16ed4:	ldr	r0, [r4, #20]
   16ed8:	cmp	r0, #0
   16edc:	cmpne	r8, #0
   16ee0:	beq	16ee8 <rb_clear_patricia+0x5c>
   16ee4:	blx	r8
   16ee8:	mov	r0, r4
   16eec:	bl	46f4 <free@plt>
   16ef0:	ldr	r3, [sl, #8]
   16ef4:	cmp	r5, #0
   16ef8:	sub	r3, r3, #1
   16efc:	str	r3, [sl, #8]
   16f00:	beq	16f30 <rb_clear_patricia+0xa4>
   16f04:	cmp	r6, #0
   16f08:	moveq	r4, r5
   16f0c:	beq	16eb0 <rb_clear_patricia+0x24>
   16f10:	mov	r4, r5
   16f14:	str	r6, [r7]
   16f18:	ldmib	r4, {r0, r5}
   16f1c:	add	r7, r7, #4
   16f20:	ldr	r6, [r4, #12]
   16f24:	cmp	r0, #0
   16f28:	bne	16ec0 <rb_clear_patricia+0x34>
   16f2c:	b	16ee8 <rb_clear_patricia+0x5c>
   16f30:	cmp	r6, #0
   16f34:	movne	r4, r6
   16f38:	bne	16eb0 <rb_clear_patricia+0x24>
   16f3c:	cmp	r7, r9
   16f40:	beq	16f50 <rb_clear_patricia+0xc4>
   16f44:	ldr	r4, [r7, #-4]
   16f48:	cmp	r4, #0
   16f4c:	bne	16f68 <rb_clear_patricia+0xdc>
   16f50:	mov	r0, sl
   16f54:	add	sp, sp, #520	; 0x208
   16f58:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f5c:	b	46f4 <free@plt>
   16f60:	bl	46f4 <free@plt>
   16f64:	b	16ed4 <rb_clear_patricia+0x48>
   16f68:	sub	r7, r7, #4
   16f6c:	b	16eb0 <rb_clear_patricia+0x24>

00016f70 <rb_destroy_patricia>:
   16f70:	push	{r4, lr}
   16f74:	bl	44fc <rb_clear_patricia@plt>
   16f78:	ldr	r2, [pc, #16]	; 16f90 <rb_destroy_patricia+0x20>
   16f7c:	add	r2, pc, r2
   16f80:	ldr	r3, [r2]
   16f84:	sub	r3, r3, #1
   16f88:	str	r3, [r2]
   16f8c:	pop	{r4, pc}
   16f90:	.word	0x00033f9c

00016f94 <rb_patricia_process>:
   16f94:	push	{r4, r5, r6, r7, lr}
   16f98:	sub	sp, sp, #524	; 0x20c
   16f9c:	ldr	r4, [r0]
   16fa0:	cmp	r4, #0
   16fa4:	beq	17028 <rb_patricia_process+0x94>
   16fa8:	add	r7, sp, #4
   16fac:	mov	r6, r1
   16fb0:	mov	r5, r7
   16fb4:	ldr	r3, [r4, #4]
   16fb8:	subs	r0, r3, #0
   16fbc:	beq	16fc8 <rb_patricia_process+0x34>
   16fc0:	ldr	r1, [r4, #20]
   16fc4:	blx	r6
   16fc8:	ldr	r3, [r4, #8]
   16fcc:	cmp	r3, #0
   16fd0:	beq	17008 <rb_patricia_process+0x74>
   16fd4:	ldr	r2, [r4, #12]
   16fd8:	mov	r4, r3
   16fdc:	cmp	r2, #0
   16fe0:	moveq	r4, r3
   16fe4:	beq	16fb4 <rb_patricia_process+0x20>
   16fe8:	ldr	r3, [r4, #4]
   16fec:	str	r2, [r5]
   16ff0:	subs	r0, r3, #0
   16ff4:	add	r5, r5, #4
   16ff8:	bne	16fc0 <rb_patricia_process+0x2c>
   16ffc:	ldr	r3, [r4, #8]
   17000:	cmp	r3, #0
   17004:	bne	16fd4 <rb_patricia_process+0x40>
   17008:	ldr	r4, [r4, #12]
   1700c:	cmp	r4, #0
   17010:	bne	16fb4 <rb_patricia_process+0x20>
   17014:	cmp	r5, r7
   17018:	beq	17028 <rb_patricia_process+0x94>
   1701c:	ldr	r4, [r5, #-4]
   17020:	cmp	r4, #0
   17024:	bne	17030 <rb_patricia_process+0x9c>
   17028:	add	sp, sp, #524	; 0x20c
   1702c:	pop	{r4, r5, r6, r7, pc}
   17030:	sub	r5, r5, #4
   17034:	b	16fb4 <rb_patricia_process+0x20>

00017038 <rb_patricia_search_exact>:
   17038:	push	{r4, r5, r6, r7, r8, lr}
   1703c:	ldr	r4, [r0]
   17040:	cmp	r4, #0
   17044:	beq	170d4 <rb_patricia_search_exact+0x9c>
   17048:	add	r6, r1, #8
   1704c:	ldrh	r5, [r1, #2]
   17050:	mov	r0, #128	; 0x80
   17054:	b	17074 <rb_patricia_search_exact+0x3c>
   17058:	ldrb	r1, [r6, r3, lsr #3]
   1705c:	ldr	r3, [r4, #8]
   17060:	ldr	r4, [r4, #12]
   17064:	ands	r2, r1, r0, asr r2
   17068:	moveq	r4, r3
   1706c:	cmp	r4, #0
   17070:	beq	170d4 <rb_patricia_search_exact+0x9c>
   17074:	ldr	r3, [r4]
   17078:	cmp	r5, r3
   1707c:	and	r2, r3, #7
   17080:	bhi	17058 <rb_patricia_search_exact+0x20>
   17084:	bcc	170dc <rb_patricia_search_exact+0xa4>
   17088:	ldr	r3, [r4, #4]
   1708c:	cmp	r3, #0
   17090:	beq	170dc <rb_patricia_search_exact+0xa4>
   17094:	add	r7, r3, #8
   17098:	mov	r0, r7
   1709c:	lsr	r2, r5, #3
   170a0:	mov	r1, r6
   170a4:	bl	4454 <memcmp@plt>
   170a8:	cmp	r0, #0
   170ac:	bne	170dc <rb_patricia_search_exact+0xa4>
   170b0:	ands	r3, r5, #7
   170b4:	beq	170d4 <rb_patricia_search_exact+0x9c>
   170b8:	ldrb	r2, [r7, r5, lsr #3]
   170bc:	ldrb	r0, [r6, r5, lsr #3]
   170c0:	rsb	r3, r3, #8
   170c4:	mov	r1, #255	; 0xff
   170c8:	eor	r2, r2, r0
   170cc:	ands	r3, r2, r1, lsl r3
   170d0:	movne	r4, #0
   170d4:	mov	r0, r4
   170d8:	pop	{r4, r5, r6, r7, r8, pc}
   170dc:	mov	r4, #0
   170e0:	mov	r0, r4
   170e4:	pop	{r4, r5, r6, r7, r8, pc}

000170e8 <rb_patricia_search_best2>:
   170e8:	ldr	r3, [r0]
   170ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170f0:	cmp	r3, #0
   170f4:	sub	sp, sp, #524	; 0x20c
   170f8:	beq	171ec <rb_patricia_search_best2+0x104>
   170fc:	add	r6, r1, #8
   17100:	ldrh	r5, [r1, #2]
   17104:	mov	r4, #0
   17108:	mov	r7, #128	; 0x80
   1710c:	b	1713c <rb_patricia_search_best2+0x54>
   17110:	ldr	ip, [r3, #4]
   17114:	cmp	ip, #0
   17118:	ldrb	ip, [r6, r1, lsr #3]
   1711c:	strne	r3, [lr, #-516]	; 0xfffffdfc
   17120:	ldr	r1, [r3, #8]
   17124:	addne	r4, r4, #1
   17128:	ands	r0, ip, r7, asr r0
   1712c:	ldr	r3, [r3, #12]
   17130:	moveq	r3, r1
   17134:	cmp	r3, #0
   17138:	beq	17170 <rb_patricia_search_best2+0x88>
   1713c:	ldr	r1, [r3]
   17140:	add	r0, sp, #520	; 0x208
   17144:	cmp	r5, r1
   17148:	add	lr, r0, r4, lsl #2
   1714c:	and	r0, r1, #7
   17150:	bhi	17110 <rb_patricia_search_best2+0x28>
   17154:	cmp	r2, #0
   17158:	beq	17170 <rb_patricia_search_best2+0x88>
   1715c:	ldr	r2, [r3, #4]
   17160:	cmp	r2, #0
   17164:	strne	r3, [lr, #-516]	; 0xfffffdfc
   17168:	addne	r4, r4, #1
   1716c:	bne	17178 <rb_patricia_search_best2+0x90>
   17170:	cmp	r4, #0
   17174:	beq	171ec <rb_patricia_search_best2+0x104>
   17178:	add	r8, sp, #4
   1717c:	add	r8, r8, r4, lsl #2
   17180:	mov	sl, #0
   17184:	mov	r9, #255	; 0xff
   17188:	subs	r4, r4, #1
   1718c:	bcc	171ec <rb_patricia_search_best2+0x104>
   17190:	ldr	fp, [r8, #-4]!
   17194:	mov	r1, r6
   17198:	ldr	r3, [fp, #4]
   1719c:	cmp	r3, #0
   171a0:	ldrh	r5, [r3, #2]
   171a4:	addne	r7, r3, #8
   171a8:	moveq	r7, sl
   171ac:	mov	r0, r7
   171b0:	lsr	r2, r5, #3
   171b4:	bl	4454 <memcmp@plt>
   171b8:	cmp	r0, #0
   171bc:	bne	17188 <rb_patricia_search_best2+0xa0>
   171c0:	ands	r3, r5, #7
   171c4:	rsb	r3, r3, #8
   171c8:	beq	171e0 <rb_patricia_search_best2+0xf8>
   171cc:	ldrb	r1, [r6, r5, lsr #3]
   171d0:	ldrb	r2, [r7, r5, lsr #3]
   171d4:	eor	r2, r2, r1
   171d8:	ands	r3, r2, r9, lsl r3
   171dc:	bne	17188 <rb_patricia_search_best2+0xa0>
   171e0:	mov	r0, fp
   171e4:	add	sp, sp, #524	; 0x20c
   171e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171ec:	mov	fp, #0
   171f0:	mov	r0, fp
   171f4:	add	sp, sp, #524	; 0x20c
   171f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000171fc <rb_patricia_search_best>:
   171fc:	mov	r2, #1
   17200:	b	46ac <rb_patricia_search_best2@plt>

00017204 <rb_patricia_lookup>:
   17204:	ldr	r3, [r0]
   17208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1720c:	cmp	r3, #0
   17210:	sub	sp, sp, #12
   17214:	mov	r7, r0
   17218:	mov	sl, r1
   1721c:	beq	175d4 <rb_patricia_lookup+0x3d0>
   17220:	add	r8, r1, #8
   17224:	ldrh	r6, [r1, #2]
   17228:	mov	r0, #128	; 0x80
   1722c:	b	17250 <rb_patricia_lookup+0x4c>
   17230:	ldrb	r2, [r8, r4, lsr #3]
   17234:	and	r1, r4, #7
   17238:	ands	r2, r2, r0, asr r1
   1723c:	beq	17274 <rb_patricia_lookup+0x70>
   17240:	ldr	r2, [r3, #12]
   17244:	cmp	r2, #0
   17248:	beq	17280 <rb_patricia_lookup+0x7c>
   1724c:	mov	r3, r2
   17250:	ldr	r4, [r3]
   17254:	cmp	r6, r4
   17258:	bhi	17268 <rb_patricia_lookup+0x64>
   1725c:	ldr	r2, [r3, #4]
   17260:	cmp	r2, #0
   17264:	bne	17284 <rb_patricia_lookup+0x80>
   17268:	ldr	r2, [r7, #4]
   1726c:	cmp	r4, r2
   17270:	bcc	17230 <rb_patricia_lookup+0x2c>
   17274:	ldr	r2, [r3, #8]
   17278:	cmp	r2, #0
   1727c:	bne	1724c <rb_patricia_lookup+0x48>
   17280:	ldr	r2, [r3, #4]
   17284:	cmp	r6, r4
   17288:	movcc	r4, r6
   1728c:	cmp	r4, #0
   17290:	add	fp, r2, #8
   17294:	beq	175c0 <rb_patricia_lookup+0x3bc>
   17298:	ldrb	r1, [r2, #8]
   1729c:	ldrb	r2, [sl, #8]
   172a0:	cmp	r2, r1
   172a4:	eorne	r2, r2, r1
   172a8:	movne	r1, #0
   172ac:	beq	17450 <rb_patricia_lookup+0x24c>
   172b0:	tst	r2, #128	; 0x80
   172b4:	bne	17694 <rb_patricia_lookup+0x490>
   172b8:	tst	r2, #64	; 0x40
   172bc:	bne	1769c <rb_patricia_lookup+0x498>
   172c0:	tst	r2, #32
   172c4:	bne	176a4 <rb_patricia_lookup+0x4a0>
   172c8:	tst	r2, #16
   172cc:	bne	176ac <rb_patricia_lookup+0x4a8>
   172d0:	tst	r2, #8
   172d4:	bne	176b4 <rb_patricia_lookup+0x4b0>
   172d8:	tst	r2, #4
   172dc:	bne	176bc <rb_patricia_lookup+0x4b8>
   172e0:	tst	r2, #2
   172e4:	bne	176c4 <rb_patricia_lookup+0x4c0>
   172e8:	tst	r2, #1
   172ec:	moveq	r2, #8
   172f0:	movne	r2, #7
   172f4:	add	r1, r1, r2
   172f8:	ldr	r5, [r3, #16]
   172fc:	cmp	r4, r1
   17300:	movcs	r4, r1
   17304:	cmp	r5, #0
   17308:	beq	175cc <rb_patricia_lookup+0x3c8>
   1730c:	ldr	r2, [r5]
   17310:	cmp	r2, r4
   17314:	bcs	1732c <rb_patricia_lookup+0x128>
   17318:	b	175cc <rb_patricia_lookup+0x3c8>
   1731c:	ldr	r2, [r3]
   17320:	cmp	r2, r4
   17324:	bcc	17338 <rb_patricia_lookup+0x134>
   17328:	mov	r5, r3
   1732c:	ldr	r3, [r5, #16]
   17330:	cmp	r3, #0
   17334:	bne	1731c <rb_patricia_lookup+0x118>
   17338:	cmp	r6, r4
   1733c:	beq	1742c <rb_patricia_lookup+0x228>
   17340:	mov	r1, #24
   17344:	mov	r0, #1
   17348:	bl	45ec <calloc@plt>
   1734c:	subs	r9, r0, #0
   17350:	beq	175bc <rb_patricia_lookup+0x3b8>
   17354:	ldr	r3, [sl, #4]
   17358:	str	r6, [r9]
   1735c:	cmp	r3, #0
   17360:	addne	r3, r3, #1
   17364:	strne	r3, [sl, #4]
   17368:	beq	1751c <rb_patricia_lookup+0x318>
   1736c:	ldr	r1, [r5]
   17370:	ldr	r3, [r7, #8]
   17374:	str	sl, [r9, #4]
   17378:	add	r2, r3, #1
   1737c:	mov	sl, #0
   17380:	cmp	r1, r4
   17384:	str	r2, [r7, #8]
   17388:	str	sl, [r9, #16]
   1738c:	str	sl, [r9, #12]
   17390:	str	sl, [r9, #8]
   17394:	str	sl, [r9, #20]
   17398:	beq	174dc <rb_patricia_lookup+0x2d8>
   1739c:	cmp	r6, r4
   173a0:	beq	17488 <rb_patricia_lookup+0x284>
   173a4:	mov	r1, #24
   173a8:	mov	r0, #1
   173ac:	str	r3, [sp, #4]
   173b0:	bl	45ec <calloc@plt>
   173b4:	cmp	r0, #0
   173b8:	beq	175bc <rb_patricia_lookup+0x3b8>
   173bc:	ldr	r1, [r7, #4]
   173c0:	ldr	r3, [sp, #4]
   173c4:	ldr	r2, [r5, #16]
   173c8:	add	r3, r3, #2
   173cc:	cmp	r1, r4
   173d0:	stm	r0, {r4, sl}
   173d4:	str	r3, [r7, #8]
   173d8:	str	r2, [r0, #16]
   173dc:	str	sl, [r0, #20]
   173e0:	bhi	17588 <rb_patricia_lookup+0x384>
   173e4:	mov	r1, r9
   173e8:	mov	r2, r5
   173ec:	str	r0, [r9, #16]
   173f0:	ldr	r3, [r5, #16]
   173f4:	str	r1, [r0, #8]
   173f8:	cmp	r3, #0
   173fc:	str	r2, [r0, #12]
   17400:	streq	r0, [r7]
   17404:	beq	17418 <rb_patricia_lookup+0x214>
   17408:	ldr	r2, [r3, #12]
   1740c:	cmp	r2, r5
   17410:	streq	r0, [r3, #12]
   17414:	strne	r0, [r3, #8]
   17418:	str	r0, [r5, #16]
   1741c:	mov	r5, r9
   17420:	mov	r0, r5
   17424:	add	sp, sp, #12
   17428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1742c:	ldr	r3, [r5]
   17430:	cmp	r6, r3
   17434:	bne	17340 <rb_patricia_lookup+0x13c>
   17438:	ldr	r3, [r5, #4]
   1743c:	cmp	r3, #0
   17440:	beq	176d4 <rb_patricia_lookup+0x4d0>
   17444:	mov	r0, r5
   17448:	add	sp, sp, #12
   1744c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17450:	mov	r1, #8
   17454:	cmp	r4, r1
   17458:	mov	ip, r8
   1745c:	mov	r0, fp
   17460:	bls	172f8 <rb_patricia_lookup+0xf4>
   17464:	ldrb	r2, [ip, #1]!
   17468:	ldrb	lr, [r0, #1]!
   1746c:	add	r5, r1, #8
   17470:	cmp	r2, lr
   17474:	bne	174d4 <rb_patricia_lookup+0x2d0>
   17478:	mov	r1, r5
   1747c:	cmp	r4, r1
   17480:	bhi	17464 <rb_patricia_lookup+0x260>
   17484:	b	172f8 <rb_patricia_lookup+0xf4>
   17488:	ldr	r3, [r7, #4]
   1748c:	cmp	r6, r3
   17490:	bcc	1756c <rb_patricia_lookup+0x368>
   17494:	str	r5, [r9, #8]
   17498:	ldr	r3, [r5, #16]
   1749c:	str	r3, [r9, #16]
   174a0:	ldr	r3, [r5, #16]
   174a4:	cmp	r3, #0
   174a8:	streq	r9, [r7]
   174ac:	beq	174c0 <rb_patricia_lookup+0x2bc>
   174b0:	ldr	r2, [r3, #12]
   174b4:	cmp	r2, r5
   174b8:	streq	r9, [r3, #12]
   174bc:	strne	r9, [r3, #8]
   174c0:	str	r9, [r5, #16]
   174c4:	mov	r5, r9
   174c8:	mov	r0, r5
   174cc:	add	sp, sp, #12
   174d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174d4:	eor	r2, r2, lr
   174d8:	b	172b0 <rb_patricia_lookup+0xac>
   174dc:	ldr	r3, [r7, #4]
   174e0:	str	r5, [r9, #16]
   174e4:	cmp	r4, r3
   174e8:	bcs	17508 <rb_patricia_lookup+0x304>
   174ec:	ldrb	r3, [r8, r4, lsr #3]
   174f0:	mov	r2, #128	; 0x80
   174f4:	and	r4, r4, #7
   174f8:	ands	r3, r3, r2, asr r4
   174fc:	strne	r9, [r5, #12]
   17500:	movne	r5, r9
   17504:	bne	17444 <rb_patricia_lookup+0x240>
   17508:	str	r9, [r5, #8]
   1750c:	mov	r5, r9
   17510:	mov	r0, r5
   17514:	add	sp, sp, #12
   17518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1751c:	ldrh	r2, [sl]
   17520:	cmp	r2, #10
   17524:	str	r2, [sp, #4]
   17528:	beq	175a8 <rb_patricia_lookup+0x3a4>
   1752c:	cmp	r2, #2
   17530:	bne	176cc <rb_patricia_lookup+0x4c8>
   17534:	mov	r1, #24
   17538:	mov	r0, #1
   1753c:	bl	45ec <calloc@plt>
   17540:	cmp	r0, #0
   17544:	beq	175bc <rb_patricia_lookup+0x3b8>
   17548:	ldr	r3, [sl, #8]
   1754c:	mov	sl, r0
   17550:	str	r3, [r0, #8]
   17554:	ldrh	r2, [sp, #4]
   17558:	mov	r3, #1
   1755c:	strh	r6, [sl, #2]
   17560:	strh	r2, [sl]
   17564:	str	r3, [sl, #4]
   17568:	b	1736c <rb_patricia_lookup+0x168>
   1756c:	ldrb	r3, [fp, r6, lsr #3]
   17570:	mov	r2, #128	; 0x80
   17574:	and	r6, r6, #7
   17578:	ands	r3, r3, r2, asr r6
   1757c:	strne	r5, [r9, #12]
   17580:	bne	17498 <rb_patricia_lookup+0x294>
   17584:	b	17494 <rb_patricia_lookup+0x290>
   17588:	ldrb	r3, [r8, r4, lsr #3]
   1758c:	mov	r2, #128	; 0x80
   17590:	and	r4, r4, #7
   17594:	ands	r3, r3, r2, asr r4
   17598:	movne	r1, r5
   1759c:	movne	r2, r9
   175a0:	bne	173ec <rb_patricia_lookup+0x1e8>
   175a4:	b	173e4 <rb_patricia_lookup+0x1e0>
   175a8:	mov	r1, #24
   175ac:	mov	r0, #1
   175b0:	bl	45ec <calloc@plt>
   175b4:	subs	sl, r0, #0
   175b8:	bne	17630 <rb_patricia_lookup+0x42c>
   175bc:	bl	4988 <rb_outofmemory@plt>
   175c0:	ldr	r5, [r3, #16]
   175c4:	cmp	r5, #0
   175c8:	bne	1732c <rb_patricia_lookup+0x128>
   175cc:	mov	r5, r3
   175d0:	b	17338 <rb_patricia_lookup+0x134>
   175d4:	mov	r1, #24
   175d8:	mov	r0, #1
   175dc:	bl	45ec <calloc@plt>
   175e0:	subs	r5, r0, #0
   175e4:	beq	175bc <rb_patricia_lookup+0x3b8>
   175e8:	ldr	r3, [sl, #4]
   175ec:	ldrh	r4, [sl, #2]
   175f0:	cmp	r3, #0
   175f4:	addne	r3, r3, #1
   175f8:	str	r4, [r5]
   175fc:	strne	r3, [sl, #4]
   17600:	beq	1764c <rb_patricia_lookup+0x448>
   17604:	ldr	r2, [r7, #8]
   17608:	mov	r3, #0
   1760c:	add	r2, r2, #1
   17610:	str	sl, [r5, #4]
   17614:	str	r5, [r7]
   17618:	str	r2, [r7, #8]
   1761c:	str	r3, [r5, #16]
   17620:	str	r3, [r5, #12]
   17624:	str	r3, [r5, #8]
   17628:	str	r3, [r5, #20]
   1762c:	b	17444 <rb_patricia_lookup+0x240>
   17630:	ldr	r0, [r8]
   17634:	ldr	r1, [r8, #4]
   17638:	ldr	r2, [r8, #8]
   1763c:	ldr	r3, [r8, #12]
   17640:	add	ip, sl, #8
   17644:	stmia	ip!, {r0, r1, r2, r3}
   17648:	b	17554 <rb_patricia_lookup+0x350>
   1764c:	ldrh	r6, [sl]
   17650:	cmp	r6, #10
   17654:	beq	17738 <rb_patricia_lookup+0x534>
   17658:	cmp	r6, #2
   1765c:	bne	17770 <rb_patricia_lookup+0x56c>
   17660:	mov	r1, #24
   17664:	mov	r0, #1
   17668:	bl	45ec <calloc@plt>
   1766c:	cmp	r0, #0
   17670:	beq	175bc <rb_patricia_lookup+0x3b8>
   17674:	ldr	r3, [sl, #8]
   17678:	mov	sl, r0
   1767c:	str	r3, [r0, #8]
   17680:	mov	r3, #1
   17684:	strh	r4, [sl, #2]
   17688:	strh	r6, [sl]
   1768c:	str	r3, [sl, #4]
   17690:	b	17604 <rb_patricia_lookup+0x400>
   17694:	mov	r2, #0
   17698:	b	172f4 <rb_patricia_lookup+0xf0>
   1769c:	mov	r2, #1
   176a0:	b	172f4 <rb_patricia_lookup+0xf0>
   176a4:	mov	r2, #2
   176a8:	b	172f4 <rb_patricia_lookup+0xf0>
   176ac:	mov	r2, #3
   176b0:	b	172f4 <rb_patricia_lookup+0xf0>
   176b4:	mov	r2, #4
   176b8:	b	172f4 <rb_patricia_lookup+0xf0>
   176bc:	mov	r2, #5
   176c0:	b	172f4 <rb_patricia_lookup+0xf0>
   176c4:	mov	r2, #6
   176c8:	b	172f4 <rb_patricia_lookup+0xf0>
   176cc:	mov	sl, r3
   176d0:	b	1736c <rb_patricia_lookup+0x168>
   176d4:	ldr	r3, [sl, #4]
   176d8:	cmp	r3, #0
   176dc:	addne	r3, r3, #1
   176e0:	strne	r3, [sl, #4]
   176e4:	beq	176f0 <rb_patricia_lookup+0x4ec>
   176e8:	str	sl, [r5, #4]
   176ec:	b	17444 <rb_patricia_lookup+0x240>
   176f0:	ldrh	r4, [sl]
   176f4:	cmp	r4, #10
   176f8:	beq	17778 <rb_patricia_lookup+0x574>
   176fc:	cmp	r4, #2
   17700:	bne	177a8 <rb_patricia_lookup+0x5a4>
   17704:	mov	r1, #24
   17708:	mov	r0, #1
   1770c:	bl	45ec <calloc@plt>
   17710:	cmp	r0, #0
   17714:	beq	175bc <rb_patricia_lookup+0x3b8>
   17718:	ldr	r3, [sl, #8]
   1771c:	mov	sl, r0
   17720:	str	r3, [r0, #8]
   17724:	mov	r3, #1
   17728:	strh	r6, [sl, #2]
   1772c:	strh	r4, [sl]
   17730:	str	r3, [sl, #4]
   17734:	b	176e8 <rb_patricia_lookup+0x4e4>
   17738:	mov	r1, #24
   1773c:	mov	r0, #1
   17740:	bl	45ec <calloc@plt>
   17744:	subs	r2, r0, #0
   17748:	beq	175bc <rb_patricia_lookup+0x3b8>
   1774c:	mov	r3, sl
   17750:	add	ip, r2, #8
   17754:	ldr	r0, [r3, #8]!
   17758:	mov	sl, r2
   1775c:	ldr	r1, [r3, #4]
   17760:	ldr	r2, [r3, #8]
   17764:	ldr	r3, [r3, #12]
   17768:	stmia	ip!, {r0, r1, r2, r3}
   1776c:	b	17680 <rb_patricia_lookup+0x47c>
   17770:	mov	sl, r3
   17774:	b	17604 <rb_patricia_lookup+0x400>
   17778:	mov	r1, #24
   1777c:	mov	r0, #1
   17780:	bl	45ec <calloc@plt>
   17784:	subs	sl, r0, #0
   17788:	beq	175bc <rb_patricia_lookup+0x3b8>
   1778c:	ldr	r0, [r8]
   17790:	ldr	r1, [r8, #4]
   17794:	ldr	r2, [r8, #8]
   17798:	ldr	r3, [r8, #12]
   1779c:	add	ip, sl, #8
   177a0:	stmia	ip!, {r0, r1, r2, r3}
   177a4:	b	17724 <rb_patricia_lookup+0x520>
   177a8:	mov	sl, r3
   177ac:	b	176e8 <rb_patricia_lookup+0x4e4>

000177b0 <rb_patricia_remove>:
   177b0:	push	{r4, r5, r6, r7, r8, lr}
   177b4:	mov	r4, r1
   177b8:	ldr	r5, [r1, #12]
   177bc:	mov	r6, r0
   177c0:	cmp	r5, #0
   177c4:	beq	17864 <rb_patricia_remove+0xb4>
   177c8:	ldr	r3, [r1, #8]
   177cc:	cmp	r3, #0
   177d0:	beq	17804 <rb_patricia_remove+0x54>
   177d4:	ldr	r0, [r1, #4]
   177d8:	cmp	r0, #0
   177dc:	beq	177f4 <rb_patricia_remove+0x44>
   177e0:	ldr	r3, [r0, #4]
   177e4:	sub	r3, r3, #1
   177e8:	cmp	r3, #0
   177ec:	strgt	r3, [r0, #4]
   177f0:	ble	1785c <rb_patricia_remove+0xac>
   177f4:	mov	r3, #0
   177f8:	str	r3, [r4, #4]
   177fc:	str	r3, [r4, #20]
   17800:	pop	{r4, r5, r6, r7, r8, pc}
   17804:	ldr	r0, [r4, #4]
   17808:	ldr	r7, [r4, #16]
   1780c:	cmp	r0, #0
   17810:	str	r7, [r5, #16]
   17814:	beq	1782c <rb_patricia_remove+0x7c>
   17818:	ldr	r3, [r0, #4]
   1781c:	sub	r3, r3, #1
   17820:	cmp	r3, #0
   17824:	str	r3, [r0, #4]
   17828:	ble	17914 <rb_patricia_remove+0x164>
   1782c:	mov	r0, r4
   17830:	bl	46f4 <free@plt>
   17834:	ldr	r3, [r6, #8]
   17838:	cmp	r7, #0
   1783c:	sub	r3, r3, #1
   17840:	str	r3, [r6, #8]
   17844:	beq	1791c <rb_patricia_remove+0x16c>
   17848:	ldr	r3, [r7, #12]
   1784c:	cmp	r4, r3
   17850:	streq	r5, [r7, #12]
   17854:	strne	r5, [r7, #8]
   17858:	pop	{r4, r5, r6, r7, r8, pc}
   1785c:	bl	46f4 <free@plt>
   17860:	b	177f4 <rb_patricia_remove+0x44>
   17864:	ldr	r5, [r1, #8]
   17868:	cmp	r5, #0
   1786c:	bne	17804 <rb_patricia_remove+0x54>
   17870:	ldr	r0, [r1, #4]
   17874:	ldr	r5, [r1, #16]
   17878:	cmp	r0, #0
   1787c:	beq	17894 <rb_patricia_remove+0xe4>
   17880:	ldr	r3, [r0, #4]
   17884:	sub	r3, r3, #1
   17888:	cmp	r3, #0
   1788c:	str	r3, [r0, #4]
   17890:	ble	17924 <rb_patricia_remove+0x174>
   17894:	mov	r0, r4
   17898:	bl	46f4 <free@plt>
   1789c:	ldr	r3, [r6, #8]
   178a0:	cmp	r5, #0
   178a4:	sub	r3, r3, #1
   178a8:	str	r3, [r6, #8]
   178ac:	beq	1791c <rb_patricia_remove+0x16c>
   178b0:	ldr	r3, [r5, #12]
   178b4:	cmp	r4, r3
   178b8:	movne	r2, #0
   178bc:	strne	r2, [r5, #8]
   178c0:	ldr	r2, [r5, #4]
   178c4:	moveq	r3, #0
   178c8:	streq	r3, [r5, #12]
   178cc:	ldreq	r3, [r5, #8]
   178d0:	cmp	r2, #0
   178d4:	popne	{r4, r5, r6, r7, r8, pc}
   178d8:	ldr	r2, [r5, #16]
   178dc:	cmp	r2, #0
   178e0:	streq	r3, [r6]
   178e4:	beq	178f8 <rb_patricia_remove+0x148>
   178e8:	ldr	r1, [r2, #12]
   178ec:	cmp	r5, r1
   178f0:	streq	r3, [r2, #12]
   178f4:	strne	r3, [r2, #8]
   178f8:	str	r2, [r3, #16]
   178fc:	mov	r0, r5
   17900:	bl	46f4 <free@plt>
   17904:	ldr	r3, [r6, #8]
   17908:	sub	r3, r3, #1
   1790c:	str	r3, [r6, #8]
   17910:	pop	{r4, r5, r6, r7, r8, pc}
   17914:	bl	46f4 <free@plt>
   17918:	b	1782c <rb_patricia_remove+0x7c>
   1791c:	str	r5, [r6]
   17920:	pop	{r4, r5, r6, r7, r8, pc}
   17924:	bl	46f4 <free@plt>
   17928:	b	17894 <rb_patricia_remove+0xe4>

0001792c <make_and_lookup_ip>:
   1792c:	push	{r4, r5, r6, r7, r8, lr}
   17930:	mov	r4, r1
   17934:	ldrh	r6, [r1]
   17938:	mov	r7, r0
   1793c:	mov	r5, r2
   17940:	cmp	r6, #10
   17944:	beq	179b4 <make_and_lookup_ip+0x88>
   17948:	cmp	r6, #2
   1794c:	bne	179f8 <make_and_lookup_ip+0xcc>
   17950:	mov	r1, #24
   17954:	mov	r0, #1
   17958:	bl	45ec <calloc@plt>
   1795c:	cmp	r0, #0
   17960:	beq	17a04 <make_and_lookup_ip+0xd8>
   17964:	ldr	r3, [r4, #4]
   17968:	mov	r4, r0
   1796c:	str	r3, [r0, #8]
   17970:	cmp	r5, #0
   17974:	movlt	r5, #128	; 0x80
   17978:	mov	r3, #1
   1797c:	strh	r5, [r4, #2]
   17980:	str	r3, [r4, #4]
   17984:	strh	r6, [r4]
   17988:	mov	r0, r7
   1798c:	mov	r1, r4
   17990:	bl	48f8 <rb_patricia_lookup@plt>
   17994:	ldr	r3, [r4, #4]
   17998:	sub	r3, r3, #1
   1799c:	cmp	r3, #0
   179a0:	strgt	r3, [r4, #4]
   179a4:	mov	r5, r0
   179a8:	ble	179e8 <make_and_lookup_ip+0xbc>
   179ac:	mov	r0, r5
   179b0:	pop	{r4, r5, r6, r7, r8, pc}
   179b4:	mov	r1, #24
   179b8:	mov	r0, #1
   179bc:	bl	45ec <calloc@plt>
   179c0:	add	r3, r4, #8
   179c4:	subs	r4, r0, #0
   179c8:	beq	17a04 <make_and_lookup_ip+0xd8>
   179cc:	ldr	r0, [r3]
   179d0:	ldr	r1, [r3, #4]
   179d4:	ldr	r2, [r3, #8]
   179d8:	ldr	r3, [r3, #12]
   179dc:	add	ip, r4, #8
   179e0:	stmia	ip!, {r0, r1, r2, r3}
   179e4:	b	17970 <make_and_lookup_ip+0x44>
   179e8:	mov	r0, r4
   179ec:	bl	46f4 <free@plt>
   179f0:	mov	r0, r5
   179f4:	pop	{r4, r5, r6, r7, r8, pc}
   179f8:	mov	r5, #0
   179fc:	mov	r0, r5
   17a00:	pop	{r4, r5, r6, r7, r8, pc}
   17a04:	bl	4988 <rb_outofmemory@plt>

00017a08 <make_and_lookup>:
   17a08:	push	{r4, r5, r6, lr}
   17a0c:	mov	r6, r0
   17a10:	mov	r0, r1
   17a14:	mov	r5, r1
   17a18:	bl	16d50 <ascii2prefix.constprop.1>
   17a1c:	subs	r4, r0, #0
   17a20:	beq	17a60 <make_and_lookup+0x58>
   17a24:	mov	r0, r6
   17a28:	mov	r1, r4
   17a2c:	bl	48f8 <rb_patricia_lookup@plt>
   17a30:	ldr	r3, [r4, #4]
   17a34:	sub	r3, r3, #1
   17a38:	cmp	r3, #0
   17a3c:	strgt	r3, [r4, #4]
   17a40:	mov	r5, r0
   17a44:	ble	17a50 <make_and_lookup+0x48>
   17a48:	mov	r0, r5
   17a4c:	pop	{r4, r5, r6, pc}
   17a50:	mov	r0, r4
   17a54:	bl	46f4 <free@plt>
   17a58:	mov	r0, r5
   17a5c:	pop	{r4, r5, r6, pc}
   17a60:	mov	r1, r5
   17a64:	mov	r0, #10
   17a68:	bl	16bb8 <ascii2prefix>
   17a6c:	subs	r4, r0, #0
   17a70:	bne	17a24 <make_and_lookup+0x1c>
   17a74:	mov	r5, r4
   17a78:	b	17a48 <make_and_lookup+0x40>

00017a7c <rb_match_ip>:
   17a7c:	push	{r4, r5, r6, lr}
   17a80:	mov	r4, r1
   17a84:	ldrh	r5, [r1]
   17a88:	mov	r6, r0
   17a8c:	mov	r1, #24
   17a90:	cmp	r5, #10
   17a94:	mov	r0, #1
   17a98:	beq	17af8 <rb_match_ip+0x7c>
   17a9c:	bl	45ec <calloc@plt>
   17aa0:	cmp	r0, #0
   17aa4:	beq	17b38 <rb_match_ip+0xbc>
   17aa8:	ldr	r3, [r4, #4]
   17aac:	mov	r5, #2
   17ab0:	mov	r4, r0
   17ab4:	mov	r2, #32
   17ab8:	str	r3, [r0, #8]
   17abc:	mov	r3, #1
   17ac0:	strh	r5, [r4]
   17ac4:	str	r3, [r4, #4]
   17ac8:	strh	r2, [r4, #2]
   17acc:	mov	r0, r6
   17ad0:	mov	r1, r4
   17ad4:	bl	4550 <rb_patricia_search_best@plt>
   17ad8:	ldr	r3, [r4, #4]
   17adc:	sub	r3, r3, #1
   17ae0:	cmp	r3, #0
   17ae4:	strgt	r3, [r4, #4]
   17ae8:	mov	r5, r0
   17aec:	ble	17b28 <rb_match_ip+0xac>
   17af0:	mov	r0, r5
   17af4:	pop	{r4, r5, r6, pc}
   17af8:	bl	45ec <calloc@plt>
   17afc:	add	r3, r4, #8
   17b00:	subs	r4, r0, #0
   17b04:	beq	17b38 <rb_match_ip+0xbc>
   17b08:	ldr	r2, [r3, #8]
   17b0c:	ldr	r0, [r3]
   17b10:	ldr	r1, [r3, #4]
   17b14:	ldr	r3, [r3, #12]
   17b18:	add	ip, r4, #8
   17b1c:	stmia	ip!, {r0, r1, r2, r3}
   17b20:	mov	r2, #128	; 0x80
   17b24:	b	17abc <rb_match_ip+0x40>
   17b28:	mov	r0, r4
   17b2c:	bl	46f4 <free@plt>
   17b30:	mov	r0, r5
   17b34:	pop	{r4, r5, r6, pc}
   17b38:	bl	4988 <rb_outofmemory@plt>

00017b3c <rb_match_ip_exact>:
   17b3c:	push	{r4, r5, r6, r7, r8, lr}
   17b40:	mov	r4, r1
   17b44:	ldrh	r5, [r1]
   17b48:	mov	r7, r0
   17b4c:	mov	r6, r2
   17b50:	cmp	r5, #10
   17b54:	beq	17bc0 <rb_match_ip_exact+0x84>
   17b58:	mov	r1, #24
   17b5c:	mov	r0, #1
   17b60:	bl	45ec <calloc@plt>
   17b64:	cmp	r0, #0
   17b68:	beq	17c0c <rb_match_ip_exact+0xd0>
   17b6c:	cmp	r6, #32
   17b70:	ldr	r3, [r4, #4]
   17b74:	movcs	r6, #32
   17b78:	mov	r4, r0
   17b7c:	mov	r5, #2
   17b80:	str	r3, [r0, #8]
   17b84:	mov	r3, #1
   17b88:	strh	r5, [r4]
   17b8c:	str	r3, [r4, #4]
   17b90:	strh	r6, [r4, #2]
   17b94:	mov	r0, r7
   17b98:	mov	r1, r4
   17b9c:	bl	48b0 <rb_patricia_search_exact@plt>
   17ba0:	ldr	r3, [r4, #4]
   17ba4:	sub	r3, r3, #1
   17ba8:	cmp	r3, #0
   17bac:	strgt	r3, [r4, #4]
   17bb0:	mov	r5, r0
   17bb4:	ble	17bfc <rb_match_ip_exact+0xc0>
   17bb8:	mov	r0, r5
   17bbc:	pop	{r4, r5, r6, r7, r8, pc}
   17bc0:	cmp	r2, #128	; 0x80
   17bc4:	mov	r1, #24
   17bc8:	mov	r0, #1
   17bcc:	movcs	r6, #128	; 0x80
   17bd0:	bl	45ec <calloc@plt>
   17bd4:	add	r3, r4, #8
   17bd8:	subs	r4, r0, #0
   17bdc:	beq	17c0c <rb_match_ip_exact+0xd0>
   17be0:	ldr	r0, [r3]
   17be4:	ldr	r1, [r3, #4]
   17be8:	ldr	r2, [r3, #8]
   17bec:	ldr	r3, [r3, #12]
   17bf0:	add	ip, r4, #8
   17bf4:	stmia	ip!, {r0, r1, r2, r3}
   17bf8:	b	17b84 <rb_match_ip_exact+0x48>
   17bfc:	mov	r0, r4
   17c00:	bl	46f4 <free@plt>
   17c04:	mov	r0, r5
   17c08:	pop	{r4, r5, r6, r7, r8, pc}
   17c0c:	bl	4988 <rb_outofmemory@plt>

00017c10 <rb_match_string>:
   17c10:	push	{r4, r5, r6, lr}
   17c14:	mov	r6, r0
   17c18:	mov	r0, r1
   17c1c:	mov	r5, r1
   17c20:	bl	16d50 <ascii2prefix.constprop.1>
   17c24:	subs	r4, r0, #0
   17c28:	beq	17c58 <rb_match_string+0x48>
   17c2c:	mov	r0, r6
   17c30:	mov	r1, r4
   17c34:	bl	4550 <rb_patricia_search_best@plt>
   17c38:	ldr	r3, [r4, #4]
   17c3c:	sub	r3, r3, #1
   17c40:	cmp	r3, #0
   17c44:	str	r3, [r4, #4]
   17c48:	mov	r5, r0
   17c4c:	ble	17c90 <rb_match_string+0x80>
   17c50:	mov	r0, r5
   17c54:	pop	{r4, r5, r6, pc}
   17c58:	mov	r1, r5
   17c5c:	mov	r0, #10
   17c60:	bl	16bb8 <ascii2prefix>
   17c64:	subs	r4, r0, #0
   17c68:	beq	17ca0 <rb_match_string+0x90>
   17c6c:	mov	r0, r6
   17c70:	mov	r1, r4
   17c74:	bl	4550 <rb_patricia_search_best@plt>
   17c78:	ldr	r3, [r4, #4]
   17c7c:	sub	r3, r3, #1
   17c80:	cmp	r3, #0
   17c84:	strgt	r3, [r4, #4]
   17c88:	mov	r5, r0
   17c8c:	bgt	17c50 <rb_match_string+0x40>
   17c90:	mov	r0, r4
   17c94:	bl	46f4 <free@plt>
   17c98:	mov	r0, r5
   17c9c:	pop	{r4, r5, r6, pc}
   17ca0:	mov	r5, r4
   17ca4:	b	17c50 <rb_match_string+0x40>

00017ca8 <rb_match_exact_string>:
   17ca8:	push	{r4, r5, r6, lr}
   17cac:	mov	r6, r0
   17cb0:	mov	r0, r1
   17cb4:	mov	r5, r1
   17cb8:	bl	16d50 <ascii2prefix.constprop.1>
   17cbc:	subs	r4, r0, #0
   17cc0:	beq	17cf0 <rb_match_exact_string+0x48>
   17cc4:	mov	r0, r6
   17cc8:	mov	r1, r4
   17ccc:	bl	48b0 <rb_patricia_search_exact@plt>
   17cd0:	ldr	r3, [r4, #4]
   17cd4:	sub	r3, r3, #1
   17cd8:	cmp	r3, #0
   17cdc:	str	r3, [r4, #4]
   17ce0:	mov	r5, r0
   17ce4:	ble	17d28 <rb_match_exact_string+0x80>
   17ce8:	mov	r0, r5
   17cec:	pop	{r4, r5, r6, pc}
   17cf0:	mov	r1, r5
   17cf4:	mov	r0, #10
   17cf8:	bl	16bb8 <ascii2prefix>
   17cfc:	subs	r4, r0, #0
   17d00:	beq	17d38 <rb_match_exact_string+0x90>
   17d04:	mov	r0, r6
   17d08:	mov	r1, r4
   17d0c:	bl	48b0 <rb_patricia_search_exact@plt>
   17d10:	ldr	r3, [r4, #4]
   17d14:	sub	r3, r3, #1
   17d18:	cmp	r3, #0
   17d1c:	strgt	r3, [r4, #4]
   17d20:	mov	r5, r0
   17d24:	bgt	17ce8 <rb_match_exact_string+0x40>
   17d28:	mov	r0, r4
   17d2c:	bl	46f4 <free@plt>
   17d30:	mov	r0, r5
   17d34:	pop	{r4, r5, r6, pc}
   17d38:	mov	r5, r4
   17d3c:	b	17ce8 <rb_match_exact_string+0x40>

00017d40 <rb_dictionary_retune.isra.1>:
   17d40:	push	{r4, r5, r6, r7, r8, r9, lr}
   17d44:	sub	sp, sp, #36	; 0x24
   17d48:	ldr	r4, [r1]
   17d4c:	cmp	r4, #0
   17d50:	beq	17e58 <rb_dictionary_retune.isra.1+0x118>
   17d54:	add	r8, sp, #32
   17d58:	mov	r3, #0
   17d5c:	str	r3, [r8, #-28]!	; 0xffffffe4
   17d60:	mov	r6, r2
   17d64:	mov	r5, r0
   17d68:	mov	r9, r1
   17d6c:	mov	r7, r8
   17d70:	str	r3, [sp, #8]
   17d74:	ldr	r3, [r5]
   17d78:	ldr	r1, [r4, #20]
   17d7c:	mov	r0, r6
   17d80:	blx	r3
   17d84:	cmp	r0, #0
   17d88:	beq	17e60 <rb_dictionary_retune.isra.1+0x120>
   17d8c:	blt	17de0 <rb_dictionary_retune.isra.1+0xa0>
   17d90:	ldr	r3, [r4, #4]
   17d94:	cmp	r3, #0
   17d98:	beq	17e60 <rb_dictionary_retune.isra.1+0x120>
   17d9c:	ldr	r1, [r3, #20]
   17da0:	mov	r0, r6
   17da4:	ldr	r3, [r5]
   17da8:	blx	r3
   17dac:	cmp	r0, #0
   17db0:	ble	17e14 <rb_dictionary_retune.isra.1+0xd4>
   17db4:	ldr	r3, [r4, #4]
   17db8:	ldr	r2, [r3]
   17dbc:	str	r2, [r4, #4]
   17dc0:	ldr	r2, [r3, #4]
   17dc4:	str	r4, [r3]
   17dc8:	cmp	r2, #0
   17dcc:	beq	17e68 <rb_dictionary_retune.isra.1+0x128>
   17dd0:	str	r3, [r7, #4]
   17dd4:	mov	r7, r3
   17dd8:	ldr	r4, [r3, #4]
   17ddc:	b	17d74 <rb_dictionary_retune.isra.1+0x34>
   17de0:	ldr	r2, [r4]
   17de4:	cmp	r2, #0
   17de8:	beq	17e3c <rb_dictionary_retune.isra.1+0xfc>
   17dec:	ldr	r1, [r2, #20]
   17df0:	ldr	r3, [r5]
   17df4:	mov	r0, r6
   17df8:	blx	r3
   17dfc:	cmp	r0, #0
   17e00:	blt	17e1c <rb_dictionary_retune.isra.1+0xdc>
   17e04:	str	r4, [r8]
   17e08:	mov	r8, r4
   17e0c:	ldr	r4, [r4]
   17e10:	b	17d74 <rb_dictionary_retune.isra.1+0x34>
   17e14:	mov	r3, r4
   17e18:	b	17dd0 <rb_dictionary_retune.isra.1+0x90>
   17e1c:	ldr	r3, [r4]
   17e20:	ldr	r2, [r3, #4]
   17e24:	str	r2, [r4]
   17e28:	ldr	r2, [r3]
   17e2c:	str	r4, [r3, #4]
   17e30:	cmp	r2, #0
   17e34:	mov	r4, r3
   17e38:	bne	17e04 <rb_dictionary_retune.isra.1+0xc4>
   17e3c:	str	r2, [r7, #4]
   17e40:	ldr	r3, [r4, #4]
   17e44:	ldr	r2, [sp, #8]
   17e48:	str	r3, [r8]
   17e4c:	ldr	r3, [sp, #4]
   17e50:	stm	r4, {r2, r3}
   17e54:	str	r4, [r9]
   17e58:	add	sp, sp, #36	; 0x24
   17e5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17e60:	ldr	r2, [r4]
   17e64:	b	17e3c <rb_dictionary_retune.isra.1+0xfc>
   17e68:	mov	r2, r4
   17e6c:	mov	r4, r3
   17e70:	b	17e3c <rb_dictionary_retune.isra.1+0xfc>

00017e74 <stats_recurse>:
   17e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e78:	sub	sp, sp, #84	; 0x54
   17e7c:	mov	r3, #0
   17e80:	str	r3, [sp, #44]	; 0x2c
   17e84:	mov	r7, r2
   17e88:	mov	r3, r1
   17e8c:	str	r0, [sp, #76]	; 0x4c
   17e90:	str	r1, [sp, #20]
   17e94:	ldr	r0, [r7]
   17e98:	cmp	r0, r3
   17e9c:	movlt	r0, r3
   17ea0:	strlt	r3, [r7]
   17ea4:	ldr	r3, [sp, #76]	; 0x4c
   17ea8:	cmp	r3, #0
   17eac:	beq	18290 <stats_recurse+0x41c>
   17eb0:	ldr	r3, [r3]
   17eb4:	cmp	r3, #0
   17eb8:	str	r3, [sp, #40]	; 0x28
   17ebc:	ldr	r3, [sp, #20]
   17ec0:	beq	1825c <stats_recurse+0x3e8>
   17ec4:	add	r3, r3, #1
   17ec8:	str	r3, [sp, #24]
   17ecc:	mov	r3, #0
   17ed0:	str	r3, [sp, #52]	; 0x34
   17ed4:	ldr	r3, [sp, #24]
   17ed8:	cmp	r3, r0
   17edc:	movgt	r0, r3
   17ee0:	strgt	r3, [r7]
   17ee4:	ldr	r3, [sp, #40]	; 0x28
   17ee8:	ldr	r3, [r3]
   17eec:	cmp	r3, #0
   17ef0:	str	r3, [sp, #48]	; 0x30
   17ef4:	ldr	r3, [sp, #24]
   17ef8:	beq	18218 <stats_recurse+0x3a4>
   17efc:	add	r3, r3, #1
   17f00:	str	r3, [sp, #28]
   17f04:	mov	r3, #0
   17f08:	str	r3, [sp, #60]	; 0x3c
   17f0c:	ldr	r3, [sp, #28]
   17f10:	cmp	r3, r0
   17f14:	movgt	r0, r3
   17f18:	strgt	r3, [r7]
   17f1c:	ldr	r3, [sp, #48]	; 0x30
   17f20:	ldr	r3, [r3]
   17f24:	cmp	r3, #0
   17f28:	str	r3, [sp, #56]	; 0x38
   17f2c:	ldr	r3, [sp, #28]
   17f30:	beq	181d4 <stats_recurse+0x360>
   17f34:	add	r3, r3, #1
   17f38:	str	r3, [sp, #32]
   17f3c:	mov	r3, #0
   17f40:	str	r3, [sp, #64]	; 0x40
   17f44:	ldr	r3, [sp, #32]
   17f48:	cmp	r3, r0
   17f4c:	movgt	r0, r3
   17f50:	strgt	r3, [r7]
   17f54:	ldr	r3, [sp, #56]	; 0x38
   17f58:	ldr	r3, [r3]
   17f5c:	cmp	r3, #0
   17f60:	str	r3, [sp, #68]	; 0x44
   17f64:	ldr	r3, [sp, #32]
   17f68:	beq	18190 <stats_recurse+0x31c>
   17f6c:	add	r3, r3, #1
   17f70:	str	r3, [sp, #36]	; 0x24
   17f74:	mov	r3, #0
   17f78:	str	r3, [sp, #72]	; 0x48
   17f7c:	ldr	r3, [sp, #36]	; 0x24
   17f80:	cmp	r3, r0
   17f84:	movgt	r0, r3
   17f88:	strgt	r3, [r7]
   17f8c:	ldr	r3, [sp, #68]	; 0x44
   17f90:	ldr	r3, [r3]
   17f94:	cmp	r3, #0
   17f98:	str	r3, [sp, #12]
   17f9c:	ldr	r3, [sp, #36]	; 0x24
   17fa0:	beq	1814c <stats_recurse+0x2d8>
   17fa4:	add	r3, r3, #1
   17fa8:	str	r3, [sp, #8]
   17fac:	mov	r3, #0
   17fb0:	str	r3, [sp, #16]
   17fb4:	ldr	r3, [sp, #8]
   17fb8:	cmp	r3, r0
   17fbc:	movgt	r0, r3
   17fc0:	strgt	r3, [r7]
   17fc4:	ldr	r3, [sp, #12]
   17fc8:	ldr	r3, [r3]
   17fcc:	cmp	r3, #0
   17fd0:	str	r3, [sp]
   17fd4:	beq	18130 <stats_recurse+0x2bc>
   17fd8:	ldr	r3, [sp, #8]
   17fdc:	add	fp, r3, #1
   17fe0:	mov	r3, #0
   17fe4:	str	r3, [sp, #4]
   17fe8:	ldr	r3, [sp]
   17fec:	cmp	fp, r0
   17ff0:	movgt	r0, fp
   17ff4:	ldr	r9, [r3]
   17ff8:	strgt	fp, [r7]
   17ffc:	cmp	r9, #0
   18000:	beq	180d8 <stats_recurse+0x264>
   18004:	add	r8, fp, #1
   18008:	mov	sl, #0
   1800c:	ldr	r5, [r9]
   18010:	cmp	r8, r0
   18014:	movgt	r0, r8
   18018:	strgt	r8, [r7]
   1801c:	cmp	r5, #0
   18020:	beq	18094 <stats_recurse+0x220>
   18024:	add	r4, r8, #1
   18028:	mov	r6, #0
   1802c:	b	18038 <stats_recurse+0x1c4>
   18030:	add	r6, r6, r0
   18034:	ldr	r0, [r7]
   18038:	ldr	r3, [r5]
   1803c:	cmp	r4, r0
   18040:	strgt	r4, [r7]
   18044:	subs	r0, r3, #0
   18048:	mov	r2, r7
   1804c:	add	r1, r4, #1
   18050:	moveq	r0, r4
   18054:	beq	18060 <stats_recurse+0x1ec>
   18058:	bl	17e74 <stats_recurse>
   1805c:	add	r0, r4, r0
   18060:	ldr	r5, [r5, #4]
   18064:	add	r4, r4, #1
   18068:	cmp	r5, #0
   1806c:	bne	18030 <stats_recurse+0x1bc>
   18070:	ldr	r9, [r9, #4]
   18074:	add	r0, r6, r0
   18078:	cmp	r9, #0
   1807c:	add	r0, r0, r8
   18080:	beq	180a4 <stats_recurse+0x230>
   18084:	add	sl, sl, r0
   18088:	add	r8, r8, #1
   1808c:	ldr	r0, [r7]
   18090:	b	1800c <stats_recurse+0x198>
   18094:	ldr	r9, [r9, #4]
   18098:	mov	r0, r8
   1809c:	cmp	r9, #0
   180a0:	bne	18084 <stats_recurse+0x210>
   180a4:	ldr	r3, [sp]
   180a8:	add	r2, sl, r0
   180ac:	add	r2, r2, fp
   180b0:	ldr	r3, [r3, #4]
   180b4:	cmp	r3, #0
   180b8:	str	r3, [sp]
   180bc:	beq	180ec <stats_recurse+0x278>
   180c0:	ldr	r3, [sp, #4]
   180c4:	add	fp, fp, #1
   180c8:	add	r3, r3, r2
   180cc:	str	r3, [sp, #4]
   180d0:	ldr	r0, [r7]
   180d4:	b	17fe8 <stats_recurse+0x174>
   180d8:	ldr	r3, [r3, #4]
   180dc:	mov	r2, fp
   180e0:	cmp	r3, #0
   180e4:	str	r3, [sp]
   180e8:	bne	180c0 <stats_recurse+0x24c>
   180ec:	ldr	r3, [sp, #4]
   180f0:	add	r2, r3, r2
   180f4:	ldr	r3, [sp, #8]
   180f8:	add	r2, r2, r3
   180fc:	ldr	r3, [sp, #12]
   18100:	ldr	r3, [r3, #4]
   18104:	cmp	r3, #0
   18108:	str	r3, [sp, #12]
   1810c:	beq	18138 <stats_recurse+0x2c4>
   18110:	ldr	r3, [sp, #8]
   18114:	ldr	r0, [r7]
   18118:	add	r3, r3, #1
   1811c:	str	r3, [sp, #8]
   18120:	ldr	r3, [sp, #16]
   18124:	add	r3, r3, r2
   18128:	str	r3, [sp, #16]
   1812c:	b	17fb4 <stats_recurse+0x140>
   18130:	ldr	r2, [sp, #8]
   18134:	b	180fc <stats_recurse+0x288>
   18138:	mov	r3, r2
   1813c:	ldr	r2, [sp, #16]
   18140:	add	r3, r2, r3
   18144:	ldr	r2, [sp, #36]	; 0x24
   18148:	add	r3, r3, r2
   1814c:	ldr	r2, [sp, #68]	; 0x44
   18150:	ldr	r2, [r2, #4]
   18154:	cmp	r2, #0
   18158:	str	r2, [sp, #68]	; 0x44
   1815c:	beq	18180 <stats_recurse+0x30c>
   18160:	ldr	r2, [sp, #36]	; 0x24
   18164:	ldr	r0, [r7]
   18168:	add	r2, r2, #1
   1816c:	str	r2, [sp, #36]	; 0x24
   18170:	ldr	r2, [sp, #72]	; 0x48
   18174:	add	r3, r2, r3
   18178:	str	r3, [sp, #72]	; 0x48
   1817c:	b	17f7c <stats_recurse+0x108>
   18180:	ldr	r2, [sp, #72]	; 0x48
   18184:	add	r3, r2, r3
   18188:	ldr	r2, [sp, #32]
   1818c:	add	r3, r3, r2
   18190:	ldr	r2, [sp, #56]	; 0x38
   18194:	ldr	r2, [r2, #4]
   18198:	cmp	r2, #0
   1819c:	str	r2, [sp, #56]	; 0x38
   181a0:	beq	181c4 <stats_recurse+0x350>
   181a4:	ldr	r2, [sp, #32]
   181a8:	ldr	r0, [r7]
   181ac:	add	r2, r2, #1
   181b0:	str	r2, [sp, #32]
   181b4:	ldr	r2, [sp, #64]	; 0x40
   181b8:	add	r3, r2, r3
   181bc:	str	r3, [sp, #64]	; 0x40
   181c0:	b	17f44 <stats_recurse+0xd0>
   181c4:	ldr	r2, [sp, #64]	; 0x40
   181c8:	add	r3, r2, r3
   181cc:	ldr	r2, [sp, #28]
   181d0:	add	r3, r3, r2
   181d4:	ldr	r2, [sp, #48]	; 0x30
   181d8:	ldr	r2, [r2, #4]
   181dc:	cmp	r2, #0
   181e0:	str	r2, [sp, #48]	; 0x30
   181e4:	beq	18208 <stats_recurse+0x394>
   181e8:	ldr	r2, [sp, #28]
   181ec:	ldr	r0, [r7]
   181f0:	add	r2, r2, #1
   181f4:	str	r2, [sp, #28]
   181f8:	ldr	r2, [sp, #60]	; 0x3c
   181fc:	add	r3, r2, r3
   18200:	str	r3, [sp, #60]	; 0x3c
   18204:	b	17f0c <stats_recurse+0x98>
   18208:	ldr	r2, [sp, #60]	; 0x3c
   1820c:	add	r3, r2, r3
   18210:	ldr	r2, [sp, #24]
   18214:	add	r3, r3, r2
   18218:	ldr	r2, [sp, #40]	; 0x28
   1821c:	ldr	r2, [r2, #4]
   18220:	cmp	r2, #0
   18224:	str	r2, [sp, #40]	; 0x28
   18228:	beq	1824c <stats_recurse+0x3d8>
   1822c:	ldr	r2, [sp, #24]
   18230:	ldr	r0, [r7]
   18234:	add	r2, r2, #1
   18238:	str	r2, [sp, #24]
   1823c:	ldr	r2, [sp, #52]	; 0x34
   18240:	add	r3, r2, r3
   18244:	str	r3, [sp, #52]	; 0x34
   18248:	b	17ed4 <stats_recurse+0x60>
   1824c:	ldr	r2, [sp, #52]	; 0x34
   18250:	add	r3, r2, r3
   18254:	ldr	r2, [sp, #20]
   18258:	add	r3, r3, r2
   1825c:	ldr	r2, [sp, #76]	; 0x4c
   18260:	ldr	r2, [r2, #4]
   18264:	cmp	r2, #0
   18268:	str	r2, [sp, #76]	; 0x4c
   1826c:	beq	18294 <stats_recurse+0x420>
   18270:	ldr	r2, [sp, #20]
   18274:	add	r2, r2, #1
   18278:	str	r2, [sp, #20]
   1827c:	ldr	r2, [sp, #44]	; 0x2c
   18280:	add	r3, r2, r3
   18284:	str	r3, [sp, #44]	; 0x2c
   18288:	ldr	r3, [sp, #20]
   1828c:	b	17e94 <stats_recurse+0x20>
   18290:	ldr	r3, [sp, #20]
   18294:	ldr	r2, [sp, #44]	; 0x2c
   18298:	add	r0, r3, r2
   1829c:	add	sp, sp, #84	; 0x54
   182a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000182a4 <rb_dictionary_create>:
   182a4:	push	{r4, r5, r6, r7, r8, lr}
   182a8:	mov	r5, r0
   182ac:	mov	r6, r1
   182b0:	mov	r0, #1
   182b4:	mov	r1, #40	; 0x28
   182b8:	bl	45ec <calloc@plt>
   182bc:	subs	r4, r0, #0
   182c0:	beq	18340 <rb_dictionary_create+0x9c>
   182c4:	str	r6, [r4]
   182c8:	mov	r0, r5
   182cc:	bl	47e4 <strlen@plt>
   182d0:	add	r6, r0, #1
   182d4:	mov	r0, r6
   182d8:	bl	49ac <malloc@plt>
   182dc:	subs	r7, r0, #0
   182e0:	beq	18340 <rb_dictionary_create+0x9c>
   182e4:	mov	r2, r6
   182e8:	mov	r1, r5
   182ec:	bl	4808 <memcpy@plt>
   182f0:	ldr	r2, [pc, #92]	; 18354 <rb_dictionary_create+0xb0>
   182f4:	mov	r1, #0
   182f8:	add	r2, pc, r2
   182fc:	str	r1, [r4, #32]
   18300:	ldr	r3, [r2]
   18304:	str	r7, [r4, #20]
   18308:	cmp	r3, r1
   1830c:	add	r1, r4, #28
   18310:	str	r4, [r4, #28]
   18314:	str	r3, [r4, #36]	; 0x24
   18318:	strne	r1, [r3, #4]
   1831c:	beq	18344 <rb_dictionary_create+0xa0>
   18320:	ldr	r3, [pc, #48]	; 18358 <rb_dictionary_create+0xb4>
   18324:	mov	r0, r4
   18328:	add	r3, pc, r3
   1832c:	ldr	r2, [r3, #8]
   18330:	str	r1, [r3]
   18334:	add	r2, r2, #1
   18338:	str	r2, [r3, #8]
   1833c:	pop	{r4, r5, r6, r7, r8, pc}
   18340:	bl	4988 <rb_outofmemory@plt>
   18344:	ldr	r3, [r2, #4]
   18348:	cmp	r3, #0
   1834c:	streq	r1, [r2, #4]
   18350:	b	18320 <rb_dictionary_create+0x7c>
   18354:	.word	0x00032c24
   18358:	.word	0x00032bf4

0001835c <rb_dictionary_set_comparator_func>:
   1835c:	str	r1, [r0]
   18360:	bx	lr

00018364 <rb_dictionary_get_comparator_func>:
   18364:	ldr	r0, [r0]
   18368:	bx	lr

0001836c <rb_dictionary_destroy>:
   1836c:	push	{r4, r5, r6, r7, r8, lr}
   18370:	mov	r6, r0
   18374:	ldr	r5, [r0, #8]
   18378:	cmp	r5, #0
   1837c:	beq	183bc <rb_dictionary_destroy+0x50>
   18380:	cmp	r1, #0
   18384:	mov	r7, r1
   18388:	mov	r8, r2
   1838c:	ldr	r4, [r5, #12]
   18390:	bne	183a0 <rb_dictionary_destroy+0x34>
   18394:	b	18424 <rb_dictionary_destroy+0xb8>
   18398:	mov	r5, r4
   1839c:	ldr	r4, [r4, #12]
   183a0:	mov	r1, r8
   183a4:	mov	r0, r5
   183a8:	blx	r7
   183ac:	mov	r0, r5
   183b0:	bl	46f4 <free@plt>
   183b4:	cmp	r4, #0
   183b8:	bne	18398 <rb_dictionary_destroy+0x2c>
   183bc:	ldr	r3, [r6, #36]	; 0x24
   183c0:	cmp	r3, #0
   183c4:	beq	18440 <rb_dictionary_destroy+0xd4>
   183c8:	ldr	r2, [r6, #32]
   183cc:	str	r2, [r3, #4]
   183d0:	ldr	r2, [r6, #32]
   183d4:	cmp	r2, #0
   183d8:	strne	r3, [r2, #8]
   183dc:	beq	1845c <rb_dictionary_destroy+0xf0>
   183e0:	ldr	r1, [pc, #132]	; 1846c <rb_dictionary_destroy+0x100>
   183e4:	ldr	r0, [r6, #20]
   183e8:	add	r1, pc, r1
   183ec:	mov	r2, #0
   183f0:	ldr	r3, [r1, #8]
   183f4:	cmp	r0, r2
   183f8:	sub	r3, r3, #1
   183fc:	str	r3, [r1, #8]
   18400:	str	r2, [r6, #32]
   18404:	str	r2, [r6, #36]	; 0x24
   18408:	beq	18410 <rb_dictionary_destroy+0xa4>
   1840c:	bl	46f4 <free@plt>
   18410:	mov	r0, r6
   18414:	pop	{r4, r5, r6, r7, r8, lr}
   18418:	b	46f4 <free@plt>
   1841c:	mov	r5, r4
   18420:	ldr	r4, [r4, #12]
   18424:	mov	r0, r5
   18428:	bl	46f4 <free@plt>
   1842c:	cmp	r4, #0
   18430:	bne	1841c <rb_dictionary_destroy+0xb0>
   18434:	ldr	r3, [r6, #36]	; 0x24
   18438:	cmp	r3, #0
   1843c:	bne	183c8 <rb_dictionary_destroy+0x5c>
   18440:	ldr	r1, [pc, #40]	; 18470 <rb_dictionary_destroy+0x104>
   18444:	ldr	r2, [r6, #32]
   18448:	add	r1, pc, r1
   1844c:	cmp	r2, #0
   18450:	str	r2, [r1, #4]
   18454:	strne	r3, [r2, #8]
   18458:	bne	183e0 <rb_dictionary_destroy+0x74>
   1845c:	ldr	r2, [pc, #16]	; 18474 <rb_dictionary_destroy+0x108>
   18460:	add	r2, pc, r2
   18464:	str	r3, [r2]
   18468:	b	183e0 <rb_dictionary_destroy+0x74>
   1846c:	.word	0x00032b34
   18470:	.word	0x00032ad4
   18474:	.word	0x00032abc

00018478 <rb_dictionary_foreach>:
   18478:	ldr	r0, [r0, #8]
   1847c:	cmp	r0, #0
   18480:	bxeq	lr
   18484:	cmp	r1, #0
   18488:	push	{r4, r5, r6, lr}
   1848c:	mov	r6, r2
   18490:	mov	r5, r1
   18494:	ldr	r4, [r0, #12]
   18498:	beq	184b8 <rb_dictionary_foreach+0x40>
   1849c:	mov	r1, r6
   184a0:	blx	r5
   184a4:	cmp	r4, #0
   184a8:	popeq	{r4, r5, r6, pc}
   184ac:	mov	r0, r4
   184b0:	ldr	r4, [r4, #12]
   184b4:	b	1849c <rb_dictionary_foreach+0x24>
   184b8:	cmp	r4, #0
   184bc:	popeq	{r4, r5, r6, pc}
   184c0:	ldr	r4, [r4, #12]
   184c4:	cmp	r4, #0
   184c8:	bne	184c0 <rb_dictionary_foreach+0x48>
   184cc:	pop	{r4, r5, r6, pc}

000184d0 <rb_dictionary_search>:
   184d0:	ldr	r3, [r0, #8]
   184d4:	cmp	r3, #0
   184d8:	beq	18538 <rb_dictionary_search+0x68>
   184dc:	cmp	r1, #0
   184e0:	push	{r4, r5, r6, lr}
   184e4:	mov	r6, r2
   184e8:	mov	r5, r1
   184ec:	ldr	r4, [r3, #12]
   184f0:	bne	184fc <rb_dictionary_search+0x2c>
   184f4:	b	18528 <rb_dictionary_search+0x58>
   184f8:	ldr	r4, [r4, #12]
   184fc:	mov	r0, r3
   18500:	mov	r1, r6
   18504:	blx	r5
   18508:	mov	r3, r4
   1850c:	cmp	r0, #0
   18510:	popne	{r4, r5, r6, pc}
   18514:	cmp	r4, #0
   18518:	bne	184f8 <rb_dictionary_search+0x28>
   1851c:	mov	r0, #0
   18520:	pop	{r4, r5, r6, pc}
   18524:	ldr	r4, [r4, #12]
   18528:	cmp	r4, #0
   1852c:	bne	18524 <rb_dictionary_search+0x54>
   18530:	mov	r0, #0
   18534:	pop	{r4, r5, r6, pc}
   18538:	mov	r0, #0
   1853c:	bx	lr

00018540 <rb_dictionary_foreach_cur>:
   18540:	ldr	r0, [r1]
   18544:	cmp	r0, #0
   18548:	ldrne	r0, [r0, #16]
   1854c:	bx	lr

00018550 <rb_dictionary_foreach_next>:
   18550:	ldr	r3, [r1]
   18554:	cmp	r3, #0
   18558:	beq	18574 <rb_dictionary_foreach_next+0x24>
   1855c:	ldr	r3, [r1, #4]
   18560:	cmp	r3, #0
   18564:	str	r3, [r1]
   18568:	ldrne	r3, [r3, #12]
   1856c:	strne	r3, [r1, #4]
   18570:	bx	lr
   18574:	mov	r1, r0
   18578:	ldr	r0, [pc, #4]	; 18584 <rb_dictionary_foreach_next+0x34>
   1857c:	add	r0, pc, r0
   18580:	b	491c <rb_lib_log@plt>
   18584:	.word	0x00003880

00018588 <rb_dictionary_foreach_start>:
   18588:	ldr	r2, [r0, #8]
   1858c:	mov	ip, #0
   18590:	cmp	r2, #0
   18594:	stm	r1, {r2, ip}
   18598:	bxeq	lr
   1859c:	str	r2, [r1, #4]
   185a0:	b	46dc <rb_dictionary_foreach_next@plt>

000185a4 <rb_dictionary_find>:
   185a4:	push	{r4, r5, r6, lr}
   185a8:	mov	r4, r0
   185ac:	mov	r2, r1
   185b0:	mov	r5, r1
   185b4:	add	r1, r0, #4
   185b8:	bl	17d40 <rb_dictionary_retune.isra.1>
   185bc:	ldr	r3, [r4, #4]
   185c0:	cmp	r3, #0
   185c4:	beq	185e8 <rb_dictionary_find+0x44>
   185c8:	ldr	r1, [r3, #20]
   185cc:	mov	r0, r5
   185d0:	ldr	r3, [r4]
   185d4:	blx	r3
   185d8:	cmp	r0, #0
   185dc:	bne	185e8 <rb_dictionary_find+0x44>
   185e0:	ldr	r0, [r4, #4]
   185e4:	pop	{r4, r5, r6, pc}
   185e8:	mov	r0, #0
   185ec:	pop	{r4, r5, r6, pc}

000185f0 <rb_dictionary_get_linear_index>:
   185f0:	push	{r4, lr}
   185f4:	mov	r4, r0
   185f8:	bl	4a30 <rb_dictionary_find@plt>
   185fc:	cmp	r0, #0
   18600:	beq	18648 <rb_dictionary_get_linear_index+0x58>
   18604:	ldrb	r3, [r4, #24]
   18608:	tst	r3, #1
   1860c:	beq	18640 <rb_dictionary_get_linear_index+0x50>
   18610:	ldr	r3, [r4, #8]
   18614:	cmp	r3, #0
   18618:	movne	r2, #0
   1861c:	beq	18634 <rb_dictionary_get_linear_index+0x44>
   18620:	str	r2, [r3, #24]
   18624:	ldr	r3, [r3, #12]
   18628:	add	r2, r2, #1
   1862c:	cmp	r3, #0
   18630:	bne	18620 <rb_dictionary_get_linear_index+0x30>
   18634:	ldrb	r3, [r4, #24]
   18638:	bic	r3, r3, #1
   1863c:	strb	r3, [r4, #24]
   18640:	ldr	r0, [r0, #24]
   18644:	pop	{r4, pc}
   18648:	mvn	r0, #0
   1864c:	pop	{r4, pc}

00018650 <rb_dictionary_add>:
   18650:	push	{r4, r5, r6, r7, r8, lr}
   18654:	mov	r4, r0
   18658:	mov	r6, r1
   1865c:	mov	r0, #1
   18660:	mov	r1, #28
   18664:	mov	r7, r2
   18668:	bl	45ec <calloc@plt>
   1866c:	subs	r5, r0, #0
   18670:	beq	187ac <rb_dictionary_add+0x15c>
   18674:	ldrb	r1, [r4, #24]
   18678:	ldr	r3, [r4, #16]
   1867c:	ldr	r0, [r4, #4]
   18680:	orr	r1, r1, #1
   18684:	add	r3, r3, #1
   18688:	cmp	r0, #0
   1868c:	str	r6, [r5, #20]
   18690:	str	r7, [r5, #16]
   18694:	strb	r1, [r4, #24]
   18698:	str	r3, [r4, #16]
   1869c:	beq	18744 <rb_dictionary_add+0xf4>
   186a0:	mov	r2, r6
   186a4:	add	r1, r4, #4
   186a8:	mov	r0, r4
   186ac:	bl	17d40 <rb_dictionary_retune.isra.1>
   186b0:	ldr	r2, [r4, #4]
   186b4:	ldr	r3, [r4]
   186b8:	ldr	r0, [r5, #20]
   186bc:	ldr	r1, [r2, #20]
   186c0:	blx	r3
   186c4:	cmp	r0, #0
   186c8:	blt	1876c <rb_dictionary_add+0x11c>
   186cc:	beq	18714 <rb_dictionary_add+0xc4>
   186d0:	ldr	r3, [r4, #4]
   186d4:	mov	r1, #0
   186d8:	mov	r6, r5
   186dc:	ldr	r2, [r3, #12]
   186e0:	ldr	r0, [r3, #4]
   186e4:	cmp	r2, r1
   186e8:	str	r0, [r5, #4]
   186ec:	str	r3, [r5]
   186f0:	mov	r0, r6
   186f4:	str	r1, [r3, #4]
   186f8:	strne	r5, [r2, #8]
   186fc:	streq	r5, [r4, #12]
   18700:	str	r2, [r5, #12]
   18704:	str	r3, [r5, #8]
   18708:	str	r5, [r3, #12]
   1870c:	str	r5, [r4, #4]
   18710:	pop	{r4, r5, r6, r7, r8, pc}
   18714:	ldr	r3, [r4, #16]
   18718:	ldr	r6, [r4, #4]
   1871c:	ldr	r1, [r5, #20]
   18720:	ldr	r2, [r5, #16]
   18724:	sub	r3, r3, #1
   18728:	str	r1, [r6, #20]
   1872c:	str	r2, [r6, #16]
   18730:	mov	r0, r5
   18734:	str	r3, [r4, #16]
   18738:	bl	46f4 <free@plt>
   1873c:	mov	r0, r6
   18740:	pop	{r4, r5, r6, r7, r8, pc}
   18744:	mov	r6, r5
   18748:	str	r0, [r5, #4]
   1874c:	str	r0, [r5]
   18750:	str	r0, [r5, #8]
   18754:	str	r0, [r5, #12]
   18758:	str	r5, [r4, #4]
   1875c:	str	r5, [r4, #12]
   18760:	str	r5, [r4, #8]
   18764:	mov	r0, r6
   18768:	pop	{r4, r5, r6, r7, r8, pc}
   1876c:	ldr	r3, [r4, #4]
   18770:	mov	r1, #0
   18774:	mov	r6, r5
   18778:	ldr	r2, [r3, #8]
   1877c:	ldr	r0, [r3]
   18780:	cmp	r2, r1
   18784:	stm	r5, {r0, r3}
   18788:	str	r1, [r3]
   1878c:	mov	r0, r6
   18790:	strne	r5, [r2, #12]
   18794:	streq	r5, [r4, #8]
   18798:	str	r2, [r5, #8]
   1879c:	str	r3, [r5, #12]
   187a0:	str	r5, [r3, #8]
   187a4:	str	r5, [r4, #4]
   187a8:	pop	{r4, r5, r6, r7, r8, pc}
   187ac:	bl	4988 <rb_outofmemory@plt>

000187b0 <rb_dictionary_delete>:
   187b0:	push	{r4, r5, r6, lr}
   187b4:	mov	r4, r0
   187b8:	bl	4a30 <rb_dictionary_find@plt>
   187bc:	cmp	r0, #0
   187c0:	beq	188a4 <rb_dictionary_delete+0xf4>
   187c4:	ldrb	r3, [r4, #24]
   187c8:	ldr	ip, [r4, #4]
   187cc:	ldr	r5, [r0, #16]
   187d0:	orr	r3, r3, #1
   187d4:	cmp	ip, #0
   187d8:	strb	r3, [r4, #24]
   187dc:	beq	1887c <rb_dictionary_delete+0xcc>
   187e0:	ldr	r3, [ip]
   187e4:	cmp	r3, #0
   187e8:	beq	18888 <rb_dictionary_delete+0xd8>
   187ec:	ldr	lr, [ip, #4]
   187f0:	cmp	lr, #0
   187f4:	beq	18898 <rb_dictionary_delete+0xe8>
   187f8:	ldr	r2, [ip, #12]
   187fc:	cmp	lr, r2
   18800:	streq	r2, [r4, #4]
   18804:	movne	r1, lr
   18808:	streq	r3, [r2]
   1880c:	bne	18818 <rb_dictionary_delete+0x68>
   18810:	b	1883c <rb_dictionary_delete+0x8c>
   18814:	mov	r1, r3
   18818:	ldr	r3, [r1]
   1881c:	cmp	r3, #0
   18820:	cmpne	r2, r3
   18824:	bne	18814 <rb_dictionary_delete+0x64>
   18828:	ldr	r3, [r2, #4]
   1882c:	str	r3, [r1]
   18830:	ldr	r3, [ip]
   18834:	str	r2, [r4, #4]
   18838:	stm	r2, {r3, lr}
   1883c:	ldr	r3, [ip, #8]
   18840:	ldr	r1, [r4, #8]
   18844:	cmp	r3, #0
   18848:	strne	r2, [r3, #12]
   1884c:	ldrne	r2, [ip, #12]
   18850:	cmp	ip, r1
   18854:	streq	r2, [r4, #8]
   18858:	cmp	r2, #0
   1885c:	strne	r3, [r2, #8]
   18860:	ldr	r3, [r4, #12]
   18864:	cmp	ip, r3
   18868:	ldreq	r3, [ip, #8]
   1886c:	streq	r3, [r4, #12]
   18870:	ldr	r3, [r4, #16]
   18874:	sub	r3, r3, #1
   18878:	str	r3, [r4, #16]
   1887c:	bl	46f4 <free@plt>
   18880:	mov	r0, r5
   18884:	pop	{r4, r5, r6, pc}
   18888:	ldr	r3, [ip, #4]
   1888c:	ldr	r2, [ip, #12]
   18890:	str	r3, [r4, #4]
   18894:	b	1883c <rb_dictionary_delete+0x8c>
   18898:	str	r3, [r4, #4]
   1889c:	ldr	r2, [ip, #12]
   188a0:	b	1883c <rb_dictionary_delete+0x8c>
   188a4:	mov	r5, r0
   188a8:	b	18880 <rb_dictionary_delete+0xd0>

000188ac <rb_dictionary_retrieve>:
   188ac:	push	{r4, lr}
   188b0:	bl	4a30 <rb_dictionary_find@plt>
   188b4:	cmp	r0, #0
   188b8:	ldrne	r0, [r0, #16]
   188bc:	pop	{r4, pc}

000188c0 <rb_dictionary_size>:
   188c0:	ldr	r0, [r0, #16]
   188c4:	bx	lr

000188c8 <rb_dictionary_stats>:
   188c8:	ldr	r3, [r0, #16]
   188cc:	push	{r4, r5, r6, r7, r8, lr}
   188d0:	cmp	r3, #0
   188d4:	sub	sp, sp, #288	; 0x120
   188d8:	mov	r4, r0
   188dc:	mov	r5, r1
   188e0:	mov	r6, r2
   188e4:	bne	1893c <rb_dictionary_stats+0x74>
   188e8:	ldr	r2, [pc, #172]	; 1899c <rb_dictionary_stats+0xd4>
   188ec:	ldr	r1, [pc, #172]	; 189a0 <rb_dictionary_stats+0xd8>
   188f0:	add	r2, pc, r2
   188f4:	ldr	r3, [r0, #20]
   188f8:	str	r2, [sp, #16]
   188fc:	str	r2, [sp, #12]
   18900:	str	r2, [sp, #8]
   18904:	str	r2, [sp, #4]
   18908:	ldr	r2, [pc, #148]	; 189a4 <rb_dictionary_stats+0xdc>
   1890c:	add	r1, pc, r1
   18910:	add	r4, sp, #32
   18914:	str	r1, [sp]
   18918:	mov	r0, r4
   1891c:	add	r2, pc, r2
   18920:	mov	r1, #256	; 0x100
   18924:	bl	4bb0 <snprintf@plt>
   18928:	mov	r1, r6
   1892c:	mov	r0, r4
   18930:	blx	r5
   18934:	add	sp, sp, #288	; 0x120
   18938:	pop	{r4, r5, r6, r7, r8, pc}
   1893c:	add	r2, sp, #288	; 0x120
   18940:	mov	r1, #0
   18944:	str	r1, [r2, #-260]!	; 0xfffffefc
   18948:	ldr	r0, [r0, #4]
   1894c:	bl	17e74 <stats_recurse>
   18950:	ldr	r7, [r4, #16]
   18954:	ldr	r3, [sp, #28]
   18958:	mov	r1, r7
   1895c:	str	r3, [sp, #16]
   18960:	mov	r8, r0
   18964:	bl	19fb0 <__udivsi3>
   18968:	ldr	r1, [pc, #56]	; 189a8 <rb_dictionary_stats+0xe0>
   1896c:	ldr	r2, [pc, #56]	; 189ac <rb_dictionary_stats+0xe4>
   18970:	add	r1, pc, r1
   18974:	ldr	r3, [r4, #20]
   18978:	add	r4, sp, #32
   1897c:	stm	sp, {r1, r7}
   18980:	add	r2, pc, r2
   18984:	str	r8, [sp, #8]
   18988:	mov	r1, #256	; 0x100
   1898c:	str	r0, [sp, #12]
   18990:	mov	r0, r4
   18994:	bl	4bb0 <snprintf@plt>
   18998:	b	18928 <rb_dictionary_stats+0x60>
   1899c:	.word	0x000024f4
   189a0:	.word	0x00003568
   189a4:	.word	0x00003560
   189a8:	.word	0x00003504
   189ac:	.word	0x000034d0

000189b0 <rb_dictionary_stats_walk>:
   189b0:	ldr	r3, [pc, #52]	; 189ec <rb_dictionary_stats_walk+0x3c>
   189b4:	push	{r4, r5, r6, lr}
   189b8:	ldr	r4, [pc, r3]
   189bc:	cmp	r4, #0
   189c0:	popeq	{r4, r5, r6, pc}
   189c4:	mov	r6, r0
   189c8:	mov	r5, r1
   189cc:	ldr	r0, [r4]
   189d0:	mov	r2, r5
   189d4:	mov	r1, r6
   189d8:	bl	49a0 <rb_dictionary_stats@plt>
   189dc:	ldr	r4, [r4, #8]
   189e0:	cmp	r4, #0
   189e4:	bne	189cc <rb_dictionary_stats_walk+0x1c>
   189e8:	pop	{r4, r5, r6, pc}
   189ec:	.word	0x00032564

000189f0 <stats_recurse>:
   189f0:	ldr	r3, [r2]
   189f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f8:	cmp	r3, r1
   189fc:	strlt	r1, [r2]
   18a00:	ldr	r3, [r0]
   18a04:	sub	sp, sp, #92	; 0x5c
   18a08:	cmn	r3, #1
   18a0c:	beq	18d7c <stats_recurse+0x38c>
   18a10:	str	r0, [sp, #40]	; 0x28
   18a14:	mov	sl, r2
   18a18:	ldr	r2, [sp, #40]	; 0x28
   18a1c:	add	r3, r0, #64	; 0x40
   18a20:	add	fp, r1, #9
   18a24:	str	r3, [sp, #64]	; 0x40
   18a28:	mov	r3, #0
   18a2c:	str	r1, [sp]
   18a30:	str	r3, [sp, #36]	; 0x24
   18a34:	ldr	r3, [r2, #4]!
   18a38:	cmp	r3, #0
   18a3c:	str	r2, [sp, #40]	; 0x28
   18a40:	beq	18d68 <stats_recurse+0x378>
   18a44:	ldr	r1, [sp]
   18a48:	ldr	r2, [sl]
   18a4c:	add	r1, r1, #1
   18a50:	cmp	r1, r2
   18a54:	strgt	r1, [sl]
   18a58:	ldr	r2, [r3]
   18a5c:	str	r1, [sp, #16]
   18a60:	cmn	r2, #1
   18a64:	beq	18d54 <stats_recurse+0x364>
   18a68:	str	r3, [sp, #44]	; 0x2c
   18a6c:	ldr	r2, [sp, #44]	; 0x2c
   18a70:	add	r3, r3, #64	; 0x40
   18a74:	str	r3, [sp, #68]	; 0x44
   18a78:	mov	r3, #0
   18a7c:	str	r3, [sp, #16]
   18a80:	ldr	r3, [r2, #4]!
   18a84:	cmp	r3, #0
   18a88:	str	r2, [sp, #44]	; 0x2c
   18a8c:	beq	18d48 <stats_recurse+0x358>
   18a90:	ldr	r1, [sp]
   18a94:	ldr	r2, [sl]
   18a98:	add	r1, r1, #2
   18a9c:	cmp	r1, r2
   18aa0:	strgt	r1, [sl]
   18aa4:	ldr	r2, [r3]
   18aa8:	str	r1, [sp, #20]
   18aac:	cmn	r2, #1
   18ab0:	beq	18d34 <stats_recurse+0x344>
   18ab4:	str	r3, [sp, #48]	; 0x30
   18ab8:	ldr	r2, [sp, #48]	; 0x30
   18abc:	add	r3, r3, #64	; 0x40
   18ac0:	str	r3, [sp, #72]	; 0x48
   18ac4:	mov	r3, #0
   18ac8:	str	r3, [sp, #20]
   18acc:	ldr	r3, [r2, #4]!
   18ad0:	cmp	r3, #0
   18ad4:	str	r2, [sp, #48]	; 0x30
   18ad8:	beq	18d28 <stats_recurse+0x338>
   18adc:	ldr	r1, [sp]
   18ae0:	ldr	r2, [sl]
   18ae4:	add	r1, r1, #3
   18ae8:	cmp	r1, r2
   18aec:	strgt	r1, [sl]
   18af0:	ldr	r2, [r3]
   18af4:	str	r1, [sp, #24]
   18af8:	cmn	r2, #1
   18afc:	beq	18d14 <stats_recurse+0x324>
   18b00:	str	r3, [sp, #52]	; 0x34
   18b04:	ldr	r2, [sp, #52]	; 0x34
   18b08:	add	r3, r3, #64	; 0x40
   18b0c:	str	r3, [sp, #76]	; 0x4c
   18b10:	mov	r3, #0
   18b14:	str	r3, [sp, #24]
   18b18:	ldr	r3, [r2, #4]!
   18b1c:	cmp	r3, #0
   18b20:	str	r2, [sp, #52]	; 0x34
   18b24:	beq	18d08 <stats_recurse+0x318>
   18b28:	ldr	r1, [sp]
   18b2c:	ldr	r2, [sl]
   18b30:	add	r1, r1, #4
   18b34:	cmp	r1, r2
   18b38:	strgt	r1, [sl]
   18b3c:	ldr	r2, [r3]
   18b40:	str	r1, [sp, #28]
   18b44:	cmn	r2, #1
   18b48:	beq	18cf4 <stats_recurse+0x304>
   18b4c:	str	r3, [sp, #56]	; 0x38
   18b50:	ldr	r2, [sp, #56]	; 0x38
   18b54:	add	r3, r3, #64	; 0x40
   18b58:	str	r3, [sp, #80]	; 0x50
   18b5c:	mov	r3, #0
   18b60:	str	r3, [sp, #28]
   18b64:	ldr	r3, [r2, #4]!
   18b68:	cmp	r3, #0
   18b6c:	str	r2, [sp, #56]	; 0x38
   18b70:	beq	18ce8 <stats_recurse+0x2f8>
   18b74:	ldr	r1, [sp]
   18b78:	ldr	r2, [sl]
   18b7c:	add	r1, r1, #5
   18b80:	cmp	r1, r2
   18b84:	strgt	r1, [sl]
   18b88:	ldr	r2, [r3]
   18b8c:	str	r1, [sp, #32]
   18b90:	cmn	r2, #1
   18b94:	beq	18cd4 <stats_recurse+0x2e4>
   18b98:	str	r3, [sp, #60]	; 0x3c
   18b9c:	ldr	r2, [sp, #60]	; 0x3c
   18ba0:	add	r3, r3, #64	; 0x40
   18ba4:	str	r3, [sp, #84]	; 0x54
   18ba8:	mov	r3, #0
   18bac:	str	r3, [sp, #32]
   18bb0:	ldr	r3, [r2, #4]!
   18bb4:	cmp	r3, #0
   18bb8:	str	r2, [sp, #60]	; 0x3c
   18bbc:	beq	18cc8 <stats_recurse+0x2d8>
   18bc0:	ldr	r1, [sp]
   18bc4:	ldr	r2, [sl]
   18bc8:	add	r1, r1, #6
   18bcc:	cmp	r1, r2
   18bd0:	strgt	r1, [sl]
   18bd4:	ldr	r2, [r3]
   18bd8:	str	r1, [sp, #8]
   18bdc:	cmn	r2, #1
   18be0:	beq	18cb4 <stats_recurse+0x2c4>
   18be4:	str	r3, [sp, #4]
   18be8:	add	r3, r3, #64	; 0x40
   18bec:	str	r3, [sp, #12]
   18bf0:	mov	r3, #0
   18bf4:	str	r3, [sp, #8]
   18bf8:	ldr	r3, [sp, #4]
   18bfc:	ldr	r6, [r3, #4]!
   18c00:	cmp	r6, #0
   18c04:	str	r3, [sp, #4]
   18c08:	beq	18ca4 <stats_recurse+0x2b4>
   18c0c:	ldr	r2, [sp]
   18c10:	ldr	r3, [sl]
   18c14:	add	r7, r2, #7
   18c18:	cmp	r7, r3
   18c1c:	strgt	r7, [sl]
   18c20:	ldr	r3, [r6]
   18c24:	cmn	r3, #1
   18c28:	beq	18c98 <stats_recurse+0x2a8>
   18c2c:	add	r8, r6, #64	; 0x40
   18c30:	mov	r7, #0
   18c34:	ldr	r4, [r6, #4]!
   18c38:	cmp	r4, #0
   18c3c:	beq	18c90 <stats_recurse+0x2a0>
   18c40:	ldr	r3, [sp]
   18c44:	ldr	r2, [sl]
   18c48:	add	r9, r3, #8
   18c4c:	cmp	r9, r2
   18c50:	strgt	r9, [sl]
   18c54:	ldr	r2, [r4]
   18c58:	cmn	r2, #1
   18c5c:	beq	18c8c <stats_recurse+0x29c>
   18c60:	add	r5, r4, #64	; 0x40
   18c64:	mov	r9, #0
   18c68:	ldr	r3, [r4, #4]!
   18c6c:	mov	r2, sl
   18c70:	subs	r0, r3, #0
   18c74:	mov	r1, fp
   18c78:	beq	18c84 <stats_recurse+0x294>
   18c7c:	bl	189f0 <stats_recurse>
   18c80:	add	r9, r9, r0
   18c84:	cmp	r5, r4
   18c88:	bne	18c68 <stats_recurse+0x278>
   18c8c:	add	r7, r7, r9
   18c90:	cmp	r8, r6
   18c94:	bne	18c34 <stats_recurse+0x244>
   18c98:	ldr	r3, [sp, #8]
   18c9c:	add	r3, r3, r7
   18ca0:	str	r3, [sp, #8]
   18ca4:	ldr	r3, [sp, #12]
   18ca8:	ldr	r2, [sp, #4]
   18cac:	cmp	r3, r2
   18cb0:	bne	18bf8 <stats_recurse+0x208>
   18cb4:	ldr	r3, [sp, #32]
   18cb8:	ldr	r2, [sp, #8]
   18cbc:	add	r3, r3, r2
   18cc0:	ldr	r2, [sp, #60]	; 0x3c
   18cc4:	str	r3, [sp, #32]
   18cc8:	ldr	r3, [sp, #84]	; 0x54
   18ccc:	cmp	r3, r2
   18cd0:	bne	18bb0 <stats_recurse+0x1c0>
   18cd4:	ldr	r3, [sp, #28]
   18cd8:	ldr	r2, [sp, #32]
   18cdc:	add	r3, r3, r2
   18ce0:	ldr	r2, [sp, #56]	; 0x38
   18ce4:	str	r3, [sp, #28]
   18ce8:	ldr	r3, [sp, #80]	; 0x50
   18cec:	cmp	r3, r2
   18cf0:	bne	18b64 <stats_recurse+0x174>
   18cf4:	ldr	r3, [sp, #24]
   18cf8:	ldr	r2, [sp, #28]
   18cfc:	add	r3, r3, r2
   18d00:	ldr	r2, [sp, #52]	; 0x34
   18d04:	str	r3, [sp, #24]
   18d08:	ldr	r3, [sp, #76]	; 0x4c
   18d0c:	cmp	r3, r2
   18d10:	bne	18b18 <stats_recurse+0x128>
   18d14:	ldr	r3, [sp, #20]
   18d18:	ldr	r2, [sp, #24]
   18d1c:	add	r3, r3, r2
   18d20:	ldr	r2, [sp, #48]	; 0x30
   18d24:	str	r3, [sp, #20]
   18d28:	ldr	r3, [sp, #72]	; 0x48
   18d2c:	cmp	r3, r2
   18d30:	bne	18acc <stats_recurse+0xdc>
   18d34:	ldr	r3, [sp, #16]
   18d38:	ldr	r2, [sp, #20]
   18d3c:	add	r3, r3, r2
   18d40:	ldr	r2, [sp, #44]	; 0x2c
   18d44:	str	r3, [sp, #16]
   18d48:	ldr	r3, [sp, #68]	; 0x44
   18d4c:	cmp	r3, r2
   18d50:	bne	18a80 <stats_recurse+0x90>
   18d54:	ldr	r3, [sp, #36]	; 0x24
   18d58:	ldr	r2, [sp, #16]
   18d5c:	add	r3, r3, r2
   18d60:	ldr	r2, [sp, #40]	; 0x28
   18d64:	str	r3, [sp, #36]	; 0x24
   18d68:	ldr	r3, [sp, #64]	; 0x40
   18d6c:	cmp	r3, r2
   18d70:	bne	18a34 <stats_recurse+0x44>
   18d74:	ldr	r0, [sp, #36]	; 0x24
   18d78:	b	18d84 <stats_recurse+0x394>
   18d7c:	mov	r0, r1
   18d80:	str	r1, [sp, #36]	; 0x24
   18d84:	add	sp, sp, #92	; 0x5c
   18d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018d8c <rb_radixtree_create>:
   18d8c:	push	{r4, r5, r6, r7, r8, lr}
   18d90:	mov	r6, r0
   18d94:	mov	r7, r1
   18d98:	mov	r0, #1
   18d9c:	mov	r1, #28
   18da0:	bl	45ec <calloc@plt>
   18da4:	ldr	r5, [pc, #148]	; 18e40 <rb_radixtree_create+0xb4>
   18da8:	add	r5, pc, r5
   18dac:	subs	r4, r0, #0
   18db0:	beq	18e2c <rb_radixtree_create+0xa0>
   18db4:	str	r7, [r4]
   18db8:	mov	r0, r6
   18dbc:	bl	47e4 <strlen@plt>
   18dc0:	add	r7, r0, #1
   18dc4:	mov	r0, r7
   18dc8:	bl	49ac <malloc@plt>
   18dcc:	subs	r8, r0, #0
   18dd0:	beq	18e2c <rb_radixtree_create+0xa0>
   18dd4:	mov	r2, r7
   18dd8:	mov	r1, r6
   18ddc:	bl	4808 <memcpy@plt>
   18de0:	ldr	r3, [pc, #92]	; 18e44 <rb_radixtree_create+0xb8>
   18de4:	mov	r2, #0
   18de8:	str	r2, [r4, #4]
   18dec:	str	r2, [r4, #20]
   18df0:	str	r8, [r4, #12]
   18df4:	str	r4, [r4, #16]
   18df8:	ldr	r3, [r5, r3]
   18dfc:	add	r1, r4, #16
   18e00:	ldr	r2, [r3]
   18e04:	cmp	r2, #0
   18e08:	str	r2, [r4, #24]
   18e0c:	strne	r1, [r2, #4]
   18e10:	beq	18e30 <rb_radixtree_create+0xa4>
   18e14:	ldr	r2, [r3, #8]
   18e18:	str	r1, [r3]
   18e1c:	add	r2, r2, #1
   18e20:	mov	r0, r4
   18e24:	str	r2, [r3, #8]
   18e28:	pop	{r4, r5, r6, r7, r8, pc}
   18e2c:	bl	4988 <rb_outofmemory@plt>
   18e30:	ldr	r2, [r3, #4]
   18e34:	cmp	r2, #0
   18e38:	streq	r1, [r3, #4]
   18e3c:	b	18e14 <rb_radixtree_create+0x88>
   18e40:	.word	0x00014250
   18e44:	.word	0x000003f4

00018e48 <rb_radixtree_foreach>:
   18e48:	push	{r4, r5, r6, r7, r8, lr}
   18e4c:	ldr	r5, [r0, #4]
   18e50:	cmp	r5, #0
   18e54:	popeq	{r4, r5, r6, r7, r8, pc}
   18e58:	ldr	r3, [r5]
   18e5c:	mov	r6, r1
   18e60:	cmn	r3, #1
   18e64:	beq	19064 <rb_radixtree_foreach+0x21c>
   18e68:	mov	r0, #0
   18e6c:	mov	r7, r2
   18e70:	mov	r8, r0
   18e74:	add	ip, r5, r0, lsl #2
   18e78:	add	r4, r0, #1
   18e7c:	ldr	r3, [ip, #4]
   18e80:	cmp	r4, #15
   18e84:	cmple	r3, #0
   18e88:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18e8c:	ldr	r3, [ip, #8]
   18e90:	add	r4, r0, #2
   18e94:	cmp	r4, #15
   18e98:	cmple	r3, #0
   18e9c:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18ea0:	ldr	r3, [ip, #12]
   18ea4:	add	r4, r0, #3
   18ea8:	cmp	r4, #15
   18eac:	cmple	r3, #0
   18eb0:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18eb4:	ldr	r3, [ip, #16]
   18eb8:	add	r4, r0, #4
   18ebc:	cmp	r4, #15
   18ec0:	cmple	r3, #0
   18ec4:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18ec8:	ldr	r3, [ip, #20]
   18ecc:	add	r4, r0, #5
   18ed0:	cmp	r4, #15
   18ed4:	cmple	r3, #0
   18ed8:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18edc:	ldr	r3, [ip, #24]
   18ee0:	add	r4, r0, #6
   18ee4:	cmp	r4, #15
   18ee8:	cmple	r3, #0
   18eec:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18ef0:	ldr	r3, [ip, #28]
   18ef4:	add	r4, r0, #7
   18ef8:	cmp	r4, #15
   18efc:	cmple	r3, #0
   18f00:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f04:	ldr	r3, [ip, #32]
   18f08:	add	r4, r0, #8
   18f0c:	cmp	r4, #15
   18f10:	cmple	r3, #0
   18f14:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f18:	ldr	r3, [ip, #36]	; 0x24
   18f1c:	add	r4, r0, #9
   18f20:	cmp	r4, #15
   18f24:	cmple	r3, #0
   18f28:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f2c:	ldr	r3, [ip, #40]	; 0x28
   18f30:	add	r4, r0, #10
   18f34:	cmp	r4, #15
   18f38:	cmple	r3, #0
   18f3c:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f40:	ldr	r3, [ip, #44]	; 0x2c
   18f44:	add	r4, r0, #11
   18f48:	cmp	r4, #15
   18f4c:	cmple	r3, #0
   18f50:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f54:	ldr	r3, [ip, #48]	; 0x30
   18f58:	add	r4, r0, #12
   18f5c:	cmp	r4, #15
   18f60:	cmple	r3, #0
   18f64:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f68:	ldr	r3, [ip, #52]	; 0x34
   18f6c:	add	r4, r0, #13
   18f70:	cmp	r4, #15
   18f74:	cmple	r3, #0
   18f78:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f7c:	ldr	r3, [ip, #56]	; 0x38
   18f80:	add	r4, r0, #14
   18f84:	cmp	r4, #15
   18f88:	cmple	r3, #0
   18f8c:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18f90:	ldr	r3, [ip, #60]	; 0x3c
   18f94:	add	r4, r0, #15
   18f98:	cmp	r4, #15
   18f9c:	cmple	r3, #0
   18fa0:	bne	18fc8 <rb_radixtree_foreach+0x180>
   18fa4:	ldr	r3, [r5, #64]	; 0x40
   18fa8:	cmp	r3, #0
   18fac:	beq	19004 <rb_radixtree_foreach+0x1bc>
   18fb0:	ldr	r2, [r3]
   18fb4:	cmn	r2, #1
   18fb8:	beq	19038 <rb_radixtree_foreach+0x1f0>
   18fbc:	mov	r0, r8
   18fc0:	mov	r5, r3
   18fc4:	b	18e74 <rb_radixtree_foreach+0x2c>
   18fc8:	cmp	r3, #0
   18fcc:	beq	18ff4 <rb_radixtree_foreach+0x1ac>
   18fd0:	ldr	r2, [r3]
   18fd4:	cmn	r2, #1
   18fd8:	bne	18fbc <rb_radixtree_foreach+0x174>
   18fdc:	cmp	r6, #0
   18fe0:	beq	18ff4 <rb_radixtree_foreach+0x1ac>
   18fe4:	mov	r2, r7
   18fe8:	ldr	r1, [r3, #4]
   18fec:	ldr	r0, [r3, #8]
   18ff0:	blx	r6
   18ff4:	cmp	r4, #15
   18ff8:	movle	r0, r4
   18ffc:	movle	r3, r5
   19000:	ble	18fc0 <rb_radixtree_foreach+0x178>
   19004:	ldr	r3, [r5, #68]	; 0x44
   19008:	ldrb	r0, [r5, #72]	; 0x48
   1900c:	cmp	r3, #0
   19010:	bne	19028 <rb_radixtree_foreach+0x1e0>
   19014:	b	19060 <rb_radixtree_foreach+0x218>
   19018:	ldrb	r0, [r3, #72]	; 0x48
   1901c:	ldr	r3, [r3, #68]	; 0x44
   19020:	cmp	r3, #0
   19024:	popeq	{r4, r5, r6, r7, r8, pc}
   19028:	add	r0, r0, #1
   1902c:	cmp	r0, #15
   19030:	bgt	19018 <rb_radixtree_foreach+0x1d0>
   19034:	b	18fc0 <rb_radixtree_foreach+0x178>
   19038:	cmp	r6, #0
   1903c:	beq	19004 <rb_radixtree_foreach+0x1bc>
   19040:	ldr	r1, [r3, #4]
   19044:	ldr	r0, [r3, #8]
   19048:	mov	r2, r7
   1904c:	blx	r6
   19050:	ldr	r3, [r5, #68]	; 0x44
   19054:	ldrb	r0, [r5, #72]	; 0x48
   19058:	cmp	r3, #0
   1905c:	bne	19028 <rb_radixtree_foreach+0x1e0>
   19060:	pop	{r4, r5, r6, r7, r8, pc}
   19064:	cmp	r1, #0
   19068:	popeq	{r4, r5, r6, r7, r8, pc}
   1906c:	ldr	r1, [r5, #4]
   19070:	ldr	r0, [r5, #8]
   19074:	mov	r3, r6
   19078:	pop	{r4, r5, r6, r7, r8, lr}
   1907c:	bx	r3

00019080 <rb_radixtree_search>:
   19080:	push	{r4, r5, r6, r7, r8, lr}
   19084:	ldr	r5, [r0, #4]
   19088:	cmp	r5, #0
   1908c:	beq	19284 <rb_radixtree_search+0x204>
   19090:	mov	r3, r1
   19094:	ldr	r1, [r5]
   19098:	cmn	r1, #1
   1909c:	beq	19264 <rb_radixtree_search+0x1e4>
   190a0:	mov	r7, r2
   190a4:	mov	r6, r3
   190a8:	mov	r4, #0
   190ac:	b	190b4 <rb_radixtree_search+0x34>
   190b0:	mov	r5, r3
   190b4:	add	r1, r5, r4, lsl #2
   190b8:	add	r2, r4, #1
   190bc:	ldr	r3, [r1, #4]
   190c0:	cmp	r2, #15
   190c4:	cmple	r3, #0
   190c8:	bne	1928c <rb_radixtree_search+0x20c>
   190cc:	ldr	r3, [r1, #8]
   190d0:	add	r2, r4, #2
   190d4:	cmp	r2, #15
   190d8:	cmple	r3, #0
   190dc:	bne	1928c <rb_radixtree_search+0x20c>
   190e0:	ldr	r3, [r1, #12]
   190e4:	add	r2, r4, #3
   190e8:	cmp	r2, #15
   190ec:	cmple	r3, #0
   190f0:	bne	1928c <rb_radixtree_search+0x20c>
   190f4:	ldr	r3, [r1, #16]
   190f8:	add	r2, r4, #4
   190fc:	cmp	r2, #15
   19100:	cmple	r3, #0
   19104:	bne	1928c <rb_radixtree_search+0x20c>
   19108:	ldr	r3, [r1, #20]
   1910c:	add	r2, r4, #5
   19110:	cmp	r2, #15
   19114:	cmple	r3, #0
   19118:	bne	1928c <rb_radixtree_search+0x20c>
   1911c:	ldr	r3, [r1, #24]
   19120:	add	r2, r4, #6
   19124:	cmp	r2, #15
   19128:	cmple	r3, #0
   1912c:	bne	1928c <rb_radixtree_search+0x20c>
   19130:	ldr	r3, [r1, #28]
   19134:	add	r2, r4, #7
   19138:	cmp	r2, #15
   1913c:	cmple	r3, #0
   19140:	bne	1928c <rb_radixtree_search+0x20c>
   19144:	ldr	r3, [r1, #32]
   19148:	add	r2, r4, #8
   1914c:	cmp	r2, #15
   19150:	cmple	r3, #0
   19154:	bne	1928c <rb_radixtree_search+0x20c>
   19158:	ldr	r3, [r1, #36]	; 0x24
   1915c:	add	r2, r4, #9
   19160:	cmp	r2, #15
   19164:	cmple	r3, #0
   19168:	bne	1928c <rb_radixtree_search+0x20c>
   1916c:	ldr	r3, [r1, #40]	; 0x28
   19170:	add	r2, r4, #10
   19174:	cmp	r2, #15
   19178:	cmple	r3, #0
   1917c:	bne	1928c <rb_radixtree_search+0x20c>
   19180:	ldr	r3, [r1, #44]	; 0x2c
   19184:	add	r2, r4, #11
   19188:	cmp	r2, #15
   1918c:	cmple	r3, #0
   19190:	bne	1928c <rb_radixtree_search+0x20c>
   19194:	ldr	r3, [r1, #48]	; 0x30
   19198:	add	r2, r4, #12
   1919c:	cmp	r2, #15
   191a0:	cmple	r3, #0
   191a4:	bne	1928c <rb_radixtree_search+0x20c>
   191a8:	ldr	r3, [r1, #52]	; 0x34
   191ac:	add	r2, r4, #13
   191b0:	cmp	r2, #15
   191b4:	cmple	r3, #0
   191b8:	bne	1928c <rb_radixtree_search+0x20c>
   191bc:	ldr	r3, [r1, #56]	; 0x38
   191c0:	add	r2, r4, #14
   191c4:	cmp	r2, #15
   191c8:	cmple	r3, #0
   191cc:	bne	1928c <rb_radixtree_search+0x20c>
   191d0:	ldr	r3, [r1, #60]	; 0x3c
   191d4:	add	r2, r4, #15
   191d8:	cmp	r2, #15
   191dc:	cmple	r3, #0
   191e0:	bne	1928c <rb_radixtree_search+0x20c>
   191e4:	ldr	r3, [r5, #64]	; 0x40
   191e8:	cmp	r3, #0
   191ec:	movne	r4, #16
   191f0:	beq	19230 <rb_radixtree_search+0x1b0>
   191f4:	ldr	r2, [r3]
   191f8:	cmn	r2, #1
   191fc:	movne	r4, #0
   19200:	bne	190b0 <rb_radixtree_search+0x30>
   19204:	cmp	r6, #0
   19208:	beq	19224 <rb_radixtree_search+0x1a4>
   1920c:	mov	r2, r7
   19210:	ldr	r1, [r3, #4]
   19214:	ldr	r0, [r3, #8]
   19218:	blx	r6
   1921c:	cmp	r0, #0
   19220:	bne	19260 <rb_radixtree_search+0x1e0>
   19224:	cmp	r4, #15
   19228:	movle	r3, r5
   1922c:	ble	190b0 <rb_radixtree_search+0x30>
   19230:	ldr	r3, [r5, #68]	; 0x44
   19234:	ldrb	r4, [r5, #72]	; 0x48
   19238:	cmp	r3, #0
   1923c:	beq	190b0 <rb_radixtree_search+0x30>
   19240:	add	r4, r4, #1
   19244:	cmp	r4, #15
   19248:	ble	190b0 <rb_radixtree_search+0x30>
   1924c:	ldrb	r4, [r3, #72]	; 0x48
   19250:	ldr	r3, [r3, #68]	; 0x44
   19254:	cmp	r3, #0
   19258:	bne	19240 <rb_radixtree_search+0x1c0>
   1925c:	b	190b0 <rb_radixtree_search+0x30>
   19260:	pop	{r4, r5, r6, r7, r8, pc}
   19264:	cmp	r3, #0
   19268:	beq	1927c <rb_radixtree_search+0x1fc>
   1926c:	ldr	r1, [r5, #4]
   19270:	ldr	r0, [r5, #8]
   19274:	pop	{r4, r5, r6, r7, r8, lr}
   19278:	bx	r3
   1927c:	mov	r0, r3
   19280:	pop	{r4, r5, r6, r7, r8, pc}
   19284:	mov	r0, r5
   19288:	pop	{r4, r5, r6, r7, r8, pc}
   1928c:	cmp	r3, #0
   19290:	mov	r4, r2
   19294:	bne	191f4 <rb_radixtree_search+0x174>
   19298:	b	19224 <rb_radixtree_search+0x1a4>

0001929c <rb_radixtree_foreach_cur>:
   1929c:	cmp	r0, #0
   192a0:	bxeq	lr
   192a4:	ldr	r0, [r1, #8]
   192a8:	cmp	r0, #0
   192ac:	ldrne	r0, [r0, #4]
   192b0:	bx	lr

000192b4 <rb_radixtree_foreach_next>:
   192b4:	cmp	r0, #0
   192b8:	bxeq	lr
   192bc:	ldr	r3, [r1, #8]
   192c0:	cmp	r3, #0
   192c4:	bxeq	lr
   192c8:	push	{r4, r5, r6, lr}
   192cc:	ldr	lr, [r1, #12]
   192d0:	cmp	lr, #0
   192d4:	str	lr, [r1, #8]
   192d8:	popeq	{r4, r5, r6, pc}
   192dc:	ldr	r0, [lr, #12]
   192e0:	mov	r5, r1
   192e4:	cmp	r0, #0
   192e8:	ldrb	r3, [lr, #16]
   192ec:	beq	1947c <rb_radixtree_foreach_next+0x1c8>
   192f0:	mov	ip, #0
   192f4:	add	r1, r0, r3, lsl #2
   192f8:	add	r2, r3, #1
   192fc:	ldr	r4, [r1, #4]
   19300:	cmp	r2, #15
   19304:	cmple	r4, #0
   19308:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   1930c:	ldr	r4, [r1, #8]
   19310:	add	r2, r3, #2
   19314:	cmp	r2, #15
   19318:	cmple	r4, #0
   1931c:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19320:	ldr	r4, [r1, #12]
   19324:	add	r2, r3, #3
   19328:	cmp	r2, #15
   1932c:	cmple	r4, #0
   19330:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19334:	ldr	r4, [r1, #16]
   19338:	add	r2, r3, #4
   1933c:	cmp	r2, #15
   19340:	cmple	r4, #0
   19344:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19348:	ldr	r4, [r1, #20]
   1934c:	add	r2, r3, #5
   19350:	cmp	r2, #15
   19354:	cmple	r4, #0
   19358:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   1935c:	ldr	r4, [r1, #24]
   19360:	add	r2, r3, #6
   19364:	cmp	r2, #15
   19368:	cmple	r4, #0
   1936c:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19370:	ldr	r4, [r1, #28]
   19374:	add	r2, r3, #7
   19378:	cmp	r2, #15
   1937c:	cmple	r4, #0
   19380:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19384:	ldr	r4, [r1, #32]
   19388:	add	r2, r3, #8
   1938c:	cmp	r2, #15
   19390:	cmple	r4, #0
   19394:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19398:	ldr	r4, [r1, #36]	; 0x24
   1939c:	add	r2, r3, #9
   193a0:	cmp	r2, #15
   193a4:	cmple	r4, #0
   193a8:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   193ac:	ldr	r4, [r1, #40]	; 0x28
   193b0:	add	r2, r3, #10
   193b4:	cmp	r2, #15
   193b8:	cmple	r4, #0
   193bc:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   193c0:	ldr	r4, [r1, #44]	; 0x2c
   193c4:	add	r2, r3, #11
   193c8:	cmp	r2, #15
   193cc:	cmple	r4, #0
   193d0:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   193d4:	ldr	r4, [r1, #48]	; 0x30
   193d8:	add	r2, r3, #12
   193dc:	cmp	r2, #15
   193e0:	cmple	r4, #0
   193e4:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   193e8:	ldr	r4, [r1, #52]	; 0x34
   193ec:	add	r2, r3, #13
   193f0:	cmp	r2, #15
   193f4:	cmple	r4, #0
   193f8:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   193fc:	ldr	r4, [r1, #56]	; 0x38
   19400:	add	r2, r3, #14
   19404:	cmp	r2, #15
   19408:	cmple	r4, #0
   1940c:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19410:	ldr	r4, [r1, #60]	; 0x3c
   19414:	add	r2, r3, #15
   19418:	cmp	r2, #15
   1941c:	cmple	r4, #0
   19420:	bne	194a4 <rb_radixtree_foreach_next+0x1f0>
   19424:	ldr	r4, [r0, #64]	; 0x40
   19428:	cmp	r4, #0
   1942c:	beq	19450 <rb_radixtree_foreach_next+0x19c>
   19430:	ldr	r3, [r4]
   19434:	cmn	r3, #1
   19438:	beq	19448 <rb_radixtree_foreach_next+0x194>
   1943c:	mov	r3, ip
   19440:	mov	r0, r4
   19444:	b	192f4 <rb_radixtree_foreach_next+0x40>
   19448:	cmp	lr, r4
   1944c:	bne	19488 <rb_radixtree_foreach_next+0x1d4>
   19450:	ldr	r4, [r0, #68]	; 0x44
   19454:	ldrb	r3, [r0, #72]	; 0x48
   19458:	cmp	r4, #0
   1945c:	beq	1947c <rb_radixtree_foreach_next+0x1c8>
   19460:	add	r3, r3, #1
   19464:	cmp	r3, #15
   19468:	ble	19440 <rb_radixtree_foreach_next+0x18c>
   1946c:	ldrb	r3, [r4, #72]	; 0x48
   19470:	ldr	r4, [r4, #68]	; 0x44
   19474:	cmp	r4, #0
   19478:	bne	19460 <rb_radixtree_foreach_next+0x1ac>
   1947c:	mov	r3, #0
   19480:	str	r3, [r5, #12]
   19484:	pop	{r4, r5, r6, pc}
   19488:	ldr	r1, [lr, #8]
   1948c:	ldr	r0, [r4, #8]
   19490:	bl	4cdc <strcmp@plt>
   19494:	cmp	r0, #0
   19498:	blt	1947c <rb_radixtree_foreach_next+0x1c8>
   1949c:	str	r4, [r5, #12]
   194a0:	pop	{r4, r5, r6, pc}
   194a4:	cmp	r4, #0
   194a8:	beq	194c0 <rb_radixtree_foreach_next+0x20c>
   194ac:	ldr	r3, [r4]
   194b0:	cmn	r3, #1
   194b4:	bne	1943c <rb_radixtree_foreach_next+0x188>
   194b8:	cmp	lr, r4
   194bc:	bne	19488 <rb_radixtree_foreach_next+0x1d4>
   194c0:	cmp	r2, #15
   194c4:	bgt	19450 <rb_radixtree_foreach_next+0x19c>
   194c8:	mov	r3, r2
   194cc:	mov	r4, r0
   194d0:	b	19440 <rb_radixtree_foreach_next+0x18c>

000194d4 <rb_radixtree_foreach_start>:
   194d4:	cmp	r0, #0
   194d8:	bxeq	lr
   194dc:	ldr	r3, [r0, #4]
   194e0:	cmp	r3, #0
   194e4:	beq	195d0 <rb_radixtree_foreach_start+0xfc>
   194e8:	ldr	r2, [r3]
   194ec:	cmn	r2, #1
   194f0:	beq	195c4 <rb_radixtree_foreach_start+0xf0>
   194f4:	ldr	r2, [r3, #4]
   194f8:	cmp	r2, #0
   194fc:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19500:	ldr	r2, [r3, #8]
   19504:	cmp	r2, #0
   19508:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   1950c:	ldr	r2, [r3, #12]
   19510:	cmp	r2, #0
   19514:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19518:	ldr	r2, [r3, #16]
   1951c:	cmp	r2, #0
   19520:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19524:	ldr	r2, [r3, #20]
   19528:	cmp	r2, #0
   1952c:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19530:	ldr	r2, [r3, #24]
   19534:	cmp	r2, #0
   19538:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   1953c:	ldr	r2, [r3, #28]
   19540:	cmp	r2, #0
   19544:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19548:	ldr	r2, [r3, #32]
   1954c:	cmp	r2, #0
   19550:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19554:	ldr	r2, [r3, #36]	; 0x24
   19558:	cmp	r2, #0
   1955c:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19560:	ldr	r2, [r3, #40]	; 0x28
   19564:	cmp	r2, #0
   19568:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   1956c:	ldr	r2, [r3, #44]	; 0x2c
   19570:	cmp	r2, #0
   19574:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19578:	ldr	r2, [r3, #48]	; 0x30
   1957c:	cmp	r2, #0
   19580:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19584:	ldr	r2, [r3, #52]	; 0x34
   19588:	cmp	r2, #0
   1958c:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   19590:	ldr	r2, [r3, #56]	; 0x38
   19594:	cmp	r2, #0
   19598:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   1959c:	ldr	r2, [r3, #60]	; 0x3c
   195a0:	cmp	r2, #0
   195a4:	bne	195b4 <rb_radixtree_foreach_start+0xe0>
   195a8:	ldr	r2, [r3, #64]	; 0x40
   195ac:	cmp	r2, #0
   195b0:	beq	19500 <rb_radixtree_foreach_start+0x2c>
   195b4:	mov	r3, r2
   195b8:	ldr	r2, [r3]
   195bc:	cmn	r2, #1
   195c0:	bne	194f4 <rb_radixtree_foreach_start+0x20>
   195c4:	str	r3, [r1, #12]
   195c8:	str	r3, [r1, #8]
   195cc:	b	4448 <rb_radixtree_foreach_next@plt>
   195d0:	str	r3, [r1, #12]
   195d4:	str	r3, [r1, #8]
   195d8:	bx	lr

000195dc <rb_radixtree_elem_find>:
   195dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195e0:	mov	r4, r0
   195e4:	sub	sp, sp, #256	; 0x100
   195e8:	mov	r0, r1
   195ec:	mov	r8, r1
   195f0:	mov	r6, r2
   195f4:	bl	47e4 <strlen@plt>
   195f8:	ldr	r9, [r4]
   195fc:	cmp	r9, #0
   19600:	mov	r5, r0
   19604:	beq	19670 <rb_radixtree_elem_find+0x94>
   19608:	cmp	r0, #255	; 0xff
   1960c:	ble	1964c <rb_radixtree_elem_find+0x70>
   19610:	add	sl, r0, #1
   19614:	mov	r0, sl
   19618:	bl	49ac <malloc@plt>
   1961c:	subs	r7, r0, #0
   19620:	beq	19714 <rb_radixtree_elem_find+0x138>
   19624:	mov	r1, r8
   19628:	mov	r2, sl
   1962c:	bl	4808 <memcpy@plt>
   19630:	mov	r0, r7
   19634:	blx	r9
   19638:	ldr	r4, [r4, #4]
   1963c:	cmp	r4, #0
   19640:	movne	r8, r7
   19644:	bne	19680 <rb_radixtree_elem_find+0xa4>
   19648:	b	196e0 <rb_radixtree_elem_find+0x104>
   1964c:	mov	r1, r8
   19650:	mov	r0, sp
   19654:	mov	r2, #256	; 0x100
   19658:	bl	46a0 <rb_strlcpy@plt>
   1965c:	mov	r7, sp
   19660:	mov	r0, sp
   19664:	ldr	r3, [r4]
   19668:	mov	r8, r7
   1966c:	blx	r3
   19670:	ldr	r4, [r4, #4]
   19674:	cmp	r4, #0
   19678:	movne	r7, #0
   1967c:	beq	196e8 <rb_radixtree_elem_find+0x10c>
   19680:	ldr	r3, [r4]
   19684:	cmn	r3, #1
   19688:	beq	196f4 <rb_radixtree_elem_find+0x118>
   1968c:	mov	r1, #0
   19690:	b	196a0 <rb_radixtree_elem_find+0xc4>
   19694:	ldr	r3, [r4]
   19698:	cmn	r3, #1
   1969c:	beq	196f4 <rb_radixtree_elem_find+0x118>
   196a0:	add	r2, r3, r3, lsr #31
   196a4:	cmp	r5, r2, asr #1
   196a8:	movle	r0, r1
   196ac:	ble	196c8 <rb_radixtree_elem_find+0xec>
   196b0:	ldrb	r0, [r8, r2, asr #1]
   196b4:	tst	r3, #1
   196b8:	movne	r3, #0
   196bc:	moveq	r3, #4
   196c0:	asr	r0, r0, r3
   196c4:	and	r0, r0, #15
   196c8:	add	r0, r4, r0, lsl #2
   196cc:	ldr	r4, [r0, #4]
   196d0:	cmp	r4, #0
   196d4:	bne	19694 <rb_radixtree_elem_find+0xb8>
   196d8:	cmp	r7, #0
   196dc:	beq	196e8 <rb_radixtree_elem_find+0x10c>
   196e0:	mov	r0, r7
   196e4:	bl	46f4 <free@plt>
   196e8:	mov	r0, r4
   196ec:	add	sp, sp, #256	; 0x100
   196f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   196f4:	cmp	r6, #0
   196f8:	bne	196d8 <rb_radixtree_elem_find+0xfc>
   196fc:	ldr	r0, [r4, #8]
   19700:	mov	r1, r8
   19704:	bl	4cdc <strcmp@plt>
   19708:	cmp	r0, #0
   1970c:	movne	r4, #0
   19710:	b	196d8 <rb_radixtree_elem_find+0xfc>
   19714:	bl	4988 <rb_outofmemory@plt>

00019718 <rb_radixtree_foreach_start_from>:
   19718:	cmp	r2, #0
   1971c:	beq	19754 <rb_radixtree_foreach_start_from+0x3c>
   19720:	push	{r4, r5, r6, lr}
   19724:	mov	r4, r1
   19728:	mov	r3, #0
   1972c:	mov	r1, r2
   19730:	str	r3, [r4, #8]
   19734:	mov	r2, #1
   19738:	mov	r5, r0
   1973c:	bl	4b74 <rb_radixtree_elem_find@plt>
   19740:	mov	r1, r4
   19744:	str	r0, [r4, #12]
   19748:	mov	r0, r5
   1974c:	pop	{r4, r5, r6, lr}
   19750:	b	4448 <rb_radixtree_foreach_next@plt>
   19754:	b	440c <rb_radixtree_foreach_start@plt>

00019758 <rb_radixtree_elem_add>:
   19758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1975c:	sub	sp, sp, #20
   19760:	mov	fp, r0
   19764:	mov	r0, r1
   19768:	mov	r4, r1
   1976c:	str	r2, [sp, #4]
   19770:	bl	47e4 <strlen@plt>
   19774:	add	r5, r0, #1
   19778:	mov	r7, r0
   1977c:	mov	r0, r5
   19780:	bl	49ac <malloc@plt>
   19784:	subs	r9, r0, #0
   19788:	beq	19acc <rb_radixtree_elem_add+0x374>
   1978c:	mov	r2, r5
   19790:	mov	r1, r4
   19794:	bl	4808 <memcpy@plt>
   19798:	ldr	r3, [fp]
   1979c:	cmp	r3, #0
   197a0:	beq	197ac <rb_radixtree_elem_add+0x54>
   197a4:	mov	r0, r9
   197a8:	blx	r3
   197ac:	ldr	r3, [fp, #4]
   197b0:	cmp	r3, #0
   197b4:	mov	r5, r3
   197b8:	str	r3, [sp, #8]
   197bc:	beq	19af0 <rb_radixtree_elem_add+0x398>
   197c0:	ldr	r3, [r3]
   197c4:	cmn	r3, #1
   197c8:	beq	19a78 <rb_radixtree_elem_add+0x320>
   197cc:	mov	r1, #0
   197d0:	b	197e4 <rb_radixtree_elem_add+0x8c>
   197d4:	ldr	r3, [r4]
   197d8:	cmn	r3, #1
   197dc:	beq	19a84 <rb_radixtree_elem_add+0x32c>
   197e0:	mov	r5, r4
   197e4:	add	r2, r3, r3, lsr #31
   197e8:	cmp	r7, r2, asr #1
   197ec:	movle	r6, r1
   197f0:	ble	1980c <rb_radixtree_elem_add+0xb4>
   197f4:	ldrb	r6, [r9, r2, asr #1]
   197f8:	tst	r3, #1
   197fc:	moveq	r3, #4
   19800:	movne	r3, #0
   19804:	asr	r6, r6, r3
   19808:	and	r6, r6, #15
   1980c:	add	r3, r5, r6, lsl #2
   19810:	ldr	r4, [r3, #4]
   19814:	cmp	r4, #0
   19818:	bne	197d4 <rb_radixtree_elem_add+0x7c>
   1981c:	mov	r4, r5
   19820:	ldr	r3, [r4]
   19824:	cmn	r3, #1
   19828:	beq	198fc <rb_radixtree_elem_add+0x1a4>
   1982c:	ldr	r3, [r4, #4]
   19830:	cmp	r3, #0
   19834:	bne	198ec <rb_radixtree_elem_add+0x194>
   19838:	ldr	r3, [r4, #8]
   1983c:	cmp	r3, #0
   19840:	bne	198ec <rb_radixtree_elem_add+0x194>
   19844:	ldr	r3, [r4, #12]
   19848:	cmp	r3, #0
   1984c:	bne	198ec <rb_radixtree_elem_add+0x194>
   19850:	ldr	r3, [r4, #16]
   19854:	cmp	r3, #0
   19858:	bne	198ec <rb_radixtree_elem_add+0x194>
   1985c:	ldr	r3, [r4, #20]
   19860:	cmp	r3, #0
   19864:	bne	198ec <rb_radixtree_elem_add+0x194>
   19868:	ldr	r3, [r4, #24]
   1986c:	cmp	r3, #0
   19870:	bne	198ec <rb_radixtree_elem_add+0x194>
   19874:	ldr	r3, [r4, #28]
   19878:	cmp	r3, #0
   1987c:	bne	198ec <rb_radixtree_elem_add+0x194>
   19880:	ldr	r3, [r4, #32]
   19884:	cmp	r3, #0
   19888:	bne	198ec <rb_radixtree_elem_add+0x194>
   1988c:	ldr	r3, [r4, #36]	; 0x24
   19890:	cmp	r3, #0
   19894:	bne	198ec <rb_radixtree_elem_add+0x194>
   19898:	ldr	r3, [r4, #40]	; 0x28
   1989c:	cmp	r3, #0
   198a0:	bne	198ec <rb_radixtree_elem_add+0x194>
   198a4:	ldr	r3, [r4, #44]	; 0x2c
   198a8:	cmp	r3, #0
   198ac:	bne	198ec <rb_radixtree_elem_add+0x194>
   198b0:	ldr	r3, [r4, #48]	; 0x30
   198b4:	cmp	r3, #0
   198b8:	bne	198ec <rb_radixtree_elem_add+0x194>
   198bc:	ldr	r3, [r4, #52]	; 0x34
   198c0:	cmp	r3, #0
   198c4:	bne	198ec <rb_radixtree_elem_add+0x194>
   198c8:	ldr	r3, [r4, #56]	; 0x38
   198cc:	cmp	r3, #0
   198d0:	bne	198ec <rb_radixtree_elem_add+0x194>
   198d4:	ldr	r3, [r4, #60]	; 0x3c
   198d8:	cmp	r3, #0
   198dc:	bne	198ec <rb_radixtree_elem_add+0x194>
   198e0:	ldr	r3, [r4, #64]	; 0x40
   198e4:	cmp	r3, #0
   198e8:	beq	19838 <rb_radixtree_elem_add+0xe0>
   198ec:	mov	r4, r3
   198f0:	ldr	r3, [r4]
   198f4:	cmn	r3, #1
   198f8:	bne	1982c <rb_radixtree_elem_add+0xd4>
   198fc:	ldr	r3, [r4, #8]
   19900:	mov	r0, #1
   19904:	mov	r8, #0
   19908:	mov	r2, r8
   1990c:	ldrb	ip, [r9]
   19910:	mov	sl, r9
   19914:	mov	r7, #4
   19918:	b	19938 <rb_radixtree_elem_add+0x1e0>
   1991c:	add	r2, r2, #1
   19920:	tst	r2, #1
   19924:	ldrb	ip, [r9, r2, asr #1]
   19928:	asr	r8, r2, #1
   1992c:	moveq	r7, #4
   19930:	movne	r7, #0
   19934:	add	sl, r9, r8
   19938:	ldrb	r1, [r3, r8]
   1993c:	asr	ip, ip, r7
   19940:	eor	r1, ip, r1, asr r7
   19944:	tst	r1, #15
   19948:	beq	1991c <rb_radixtree_elem_add+0x1c4>
   1994c:	cmp	r0, #0
   19950:	bne	19968 <rb_radixtree_elem_add+0x210>
   19954:	b	19ab0 <rb_radixtree_elem_add+0x358>
   19958:	ldrb	r6, [r5, #72]	; 0x48
   1995c:	ldr	r5, [r5, #68]	; 0x44
   19960:	cmp	r5, #0
   19964:	beq	19ab0 <rb_radixtree_elem_add+0x358>
   19968:	ldr	r3, [r5]
   1996c:	cmp	r3, r2
   19970:	bgt	19958 <rb_radixtree_elem_add+0x200>
   19974:	cmp	r2, r3
   19978:	ble	19a14 <rb_radixtree_elem_add+0x2bc>
   1997c:	mov	r1, #76	; 0x4c
   19980:	mov	r0, #1
   19984:	str	r2, [sp, #8]
   19988:	bl	45ec <calloc@plt>
   1998c:	subs	r3, r0, #0
   19990:	beq	19acc <rb_radixtree_elem_add+0x374>
   19994:	ldr	r2, [sp, #8]
   19998:	str	r5, [r3, #68]	; 0x44
   1999c:	str	r2, [r3]
   199a0:	strb	r6, [r3, #72]	; 0x48
   199a4:	mov	r2, #64	; 0x40
   199a8:	mov	r1, #0
   199ac:	add	r0, r3, #4
   199b0:	str	r3, [sp, #8]
   199b4:	bl	4628 <memset@plt>
   199b8:	ldr	r2, [r4, #8]
   199bc:	add	r5, r5, r6, lsl #2
   199c0:	ldr	r3, [sp, #8]
   199c4:	ldrb	r2, [r2, r8]
   199c8:	ldr	r1, [r5, #4]
   199cc:	asr	r2, r2, r7
   199d0:	and	r2, r2, #15
   199d4:	add	r2, r3, r2, lsl #2
   199d8:	str	r1, [r2, #4]
   199dc:	ldr	r1, [r5, #4]
   199e0:	ldr	r2, [r1]
   199e4:	cmn	r2, #1
   199e8:	beq	19ad0 <rb_radixtree_elem_add+0x378>
   199ec:	str	r3, [r1, #68]	; 0x44
   199f0:	ldr	r2, [r4, #8]
   199f4:	ldrb	r2, [r2, r8]
   199f8:	asr	r2, r2, r7
   199fc:	and	r2, r2, #15
   19a00:	strb	r2, [r1, #72]	; 0x48
   19a04:	str	r3, [r5, #4]
   19a08:	ldrb	ip, [sl]
   19a0c:	mov	r5, r3
   19a10:	asr	ip, ip, r7
   19a14:	mov	r1, #20
   19a18:	mov	r0, #1
   19a1c:	and	r4, ip, #15
   19a20:	bl	45ec <calloc@plt>
   19a24:	cmp	r0, #0
   19a28:	beq	19acc <rb_radixtree_elem_add+0x374>
   19a2c:	add	r3, r5, r4, lsl #2
   19a30:	mvn	r2, #0
   19a34:	str	r0, [r3, #4]
   19a38:	str	r2, [r0]
   19a3c:	ldr	r2, [r3, #4]
   19a40:	ldr	r1, [sp, #4]
   19a44:	str	r1, [r2, #4]
   19a48:	ldr	r2, [r3, #4]
   19a4c:	str	r9, [r2, #8]
   19a50:	ldr	r2, [r3, #4]
   19a54:	str	r5, [r2, #12]
   19a58:	ldr	r2, [r3, #4]
   19a5c:	strb	r4, [r2, #16]
   19a60:	ldr	r2, [fp, #8]
   19a64:	ldr	r0, [r3, #4]
   19a68:	add	r3, r2, #1
   19a6c:	str	r3, [fp, #8]
   19a70:	add	sp, sp, #20
   19a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a78:	mov	r4, r5
   19a7c:	mov	r6, #18
   19a80:	mov	r5, #0
   19a84:	ldr	r3, [r4, #8]
   19a88:	mov	r1, r9
   19a8c:	mov	r0, r3
   19a90:	str	r3, [sp, #12]
   19a94:	bl	4cdc <strcmp@plt>
   19a98:	ldr	r3, [sp, #12]
   19a9c:	subs	r7, r0, #0
   19aa0:	beq	19bc4 <rb_radixtree_elem_add+0x46c>
   19aa4:	adds	r0, r5, #0
   19aa8:	movne	r0, #1
   19aac:	b	19904 <rb_radixtree_elem_add+0x1ac>
   19ab0:	mov	r1, #76	; 0x4c
   19ab4:	mov	r0, #1
   19ab8:	str	r2, [sp, #12]
   19abc:	bl	45ec <calloc@plt>
   19ac0:	ldr	r2, [sp, #12]
   19ac4:	subs	r5, r0, #0
   19ac8:	bne	19b3c <rb_radixtree_elem_add+0x3e4>
   19acc:	bl	4988 <rb_outofmemory@plt>
   19ad0:	str	r3, [r1, #12]
   19ad4:	ldr	r2, [r4, #8]
   19ad8:	ldr	r1, [r5, #4]
   19adc:	ldrb	r2, [r2, r8]
   19ae0:	asr	r2, r2, r7
   19ae4:	and	r2, r2, #15
   19ae8:	strb	r2, [r1, #16]
   19aec:	b	19a04 <rb_radixtree_elem_add+0x2ac>
   19af0:	mov	r1, #20
   19af4:	mov	r0, #1
   19af8:	bl	45ec <calloc@plt>
   19afc:	cmp	r0, #0
   19b00:	beq	19acc <rb_radixtree_elem_add+0x374>
   19b04:	ldr	ip, [sp, #4]
   19b08:	ldr	r3, [fp, #8]
   19b0c:	str	ip, [r0, #4]
   19b10:	ldr	ip, [sp, #8]
   19b14:	mvn	r1, #0
   19b18:	add	r3, r3, #1
   19b1c:	mov	r2, #18
   19b20:	str	r0, [fp, #4]
   19b24:	str	r9, [r0, #8]
   19b28:	str	ip, [r0, #12]
   19b2c:	str	r3, [fp, #8]
   19b30:	str	r1, [r0]
   19b34:	strb	r2, [r0, #16]
   19b38:	b	19a70 <rb_radixtree_elem_add+0x318>
   19b3c:	mov	r1, #0
   19b40:	str	r2, [r5]
   19b44:	strb	r6, [r5, #72]	; 0x48
   19b48:	mov	r2, #64	; 0x40
   19b4c:	str	r1, [r5, #68]	; 0x44
   19b50:	add	r0, r5, #4
   19b54:	bl	4628 <memset@plt>
   19b58:	ldr	r3, [r4, #8]
   19b5c:	ldr	r2, [sp, #8]
   19b60:	ldrb	r3, [r3, r8]
   19b64:	asr	r3, r3, r7
   19b68:	and	r3, r3, #15
   19b6c:	add	r3, r5, r3, lsl #2
   19b70:	str	r2, [r3, #4]
   19b74:	ldr	r3, [r2]
   19b78:	cmn	r3, #1
   19b7c:	beq	19ba8 <rb_radixtree_elem_add+0x450>
   19b80:	str	r5, [r2, #68]	; 0x44
   19b84:	ldr	r3, [r4, #8]
   19b88:	ldrb	r3, [r3, r8]
   19b8c:	asr	r3, r3, r7
   19b90:	and	r3, r3, #15
   19b94:	strb	r3, [r2, #72]	; 0x48
   19b98:	ldrb	ip, [sl]
   19b9c:	str	r5, [fp, #4]
   19ba0:	asr	ip, ip, r7
   19ba4:	b	19a14 <rb_radixtree_elem_add+0x2bc>
   19ba8:	str	r5, [r2, #12]
   19bac:	ldr	r3, [r4, #8]
   19bb0:	ldrb	r3, [r3, r8]
   19bb4:	asr	r3, r3, r7
   19bb8:	and	r3, r3, #15
   19bbc:	strb	r3, [r2, #16]
   19bc0:	b	19b98 <rb_radixtree_elem_add+0x440>
   19bc4:	mov	r0, r9
   19bc8:	bl	46f4 <free@plt>
   19bcc:	mov	r0, r7
   19bd0:	b	19a70 <rb_radixtree_elem_add+0x318>

00019bd4 <rb_radixtree_add>:
   19bd4:	push	{r4, lr}
   19bd8:	bl	4718 <rb_radixtree_elem_add@plt>
   19bdc:	adds	r0, r0, #0
   19be0:	movne	r0, #1
   19be4:	pop	{r4, pc}

00019be8 <rb_radixtree_elem_delete>:
   19be8:	push	{r4, r5, r6, r7, r8, lr}
   19bec:	mov	r6, r0
   19bf0:	ldr	r0, [r1, #8]
   19bf4:	mov	r5, r1
   19bf8:	cmp	r0, #0
   19bfc:	ldrb	r7, [r1, #16]
   19c00:	ldr	r4, [r1, #12]
   19c04:	beq	19c0c <rb_radixtree_elem_delete+0x24>
   19c08:	bl	46f4 <free@plt>
   19c0c:	mov	r0, r5
   19c10:	bl	46f4 <free@plt>
   19c14:	cmp	r4, #0
   19c18:	streq	r4, [r6, #4]
   19c1c:	beq	19ccc <rb_radixtree_elem_delete+0xe4>
   19c20:	mov	r1, #0
   19c24:	add	r7, r4, r7, lsl #2
   19c28:	mov	r3, r1
   19c2c:	mvn	r2, #0
   19c30:	mvn	r0, #1
   19c34:	str	r1, [r7, #4]
   19c38:	add	r1, r4, r3, lsl #2
   19c3c:	ldr	r1, [r1, #4]
   19c40:	cmp	r1, #0
   19c44:	beq	19c78 <rb_radixtree_elem_delete+0x90>
   19c48:	cmn	r2, #1
   19c4c:	beq	19ce4 <rb_radixtree_elem_delete+0xfc>
   19c50:	cmp	r3, #15
   19c54:	add	r3, r3, #2
   19c58:	beq	19ccc <rb_radixtree_elem_delete+0xe4>
   19c5c:	cmp	r3, #16
   19c60:	add	r2, r4, r3, lsl #2
   19c64:	beq	19ccc <rb_radixtree_elem_delete+0xe4>
   19c68:	ldr	r2, [r2, #4]
   19c6c:	cmp	r2, #0
   19c70:	bne	19c50 <rb_radixtree_elem_delete+0x68>
   19c74:	mov	r2, r0
   19c78:	add	r3, r3, #1
   19c7c:	cmp	r3, #16
   19c80:	bne	19c38 <rb_radixtree_elem_delete+0x50>
   19c84:	cmp	r2, #0
   19c88:	blt	19ccc <rb_radixtree_elem_delete+0xe4>
   19c8c:	add	r2, r4, r2, lsl #2
   19c90:	ldr	r1, [r4, #68]	; 0x44
   19c94:	ldr	r3, [r2, #4]
   19c98:	ldrb	r2, [r4, #72]	; 0x48
   19c9c:	cmp	r1, #0
   19ca0:	streq	r3, [r6, #4]
   19ca4:	addne	r0, r1, r2, lsl #2
   19ca8:	strne	r3, [r0, #4]
   19cac:	ldr	r0, [r3]
   19cb0:	cmn	r0, #1
   19cb4:	streq	r1, [r3, #12]
   19cb8:	strbeq	r2, [r3, #16]
   19cbc:	strne	r1, [r3, #68]	; 0x44
   19cc0:	strbne	r2, [r3, #72]	; 0x48
   19cc4:	mov	r0, r4
   19cc8:	bl	46f4 <free@plt>
   19ccc:	ldr	r3, [r6, #8]
   19cd0:	sub	r3, r3, #1
   19cd4:	cmp	r3, #0
   19cd8:	str	r3, [r6, #8]
   19cdc:	streq	r3, [r6, #4]
   19ce0:	pop	{r4, r5, r6, r7, r8, pc}
   19ce4:	mov	r2, r3
   19ce8:	b	19c78 <rb_radixtree_elem_delete+0x90>

00019cec <rb_radixtree_delete>:
   19cec:	push	{r4, lr}
   19cf0:	mov	r2, #0
   19cf4:	mov	r4, r0
   19cf8:	bl	4b74 <rb_radixtree_elem_find@plt>
   19cfc:	subs	r3, r0, #0
   19d00:	beq	19d1c <rb_radixtree_delete+0x30>
   19d04:	mov	r0, r4
   19d08:	mov	r1, r3
   19d0c:	ldr	r4, [r3, #4]
   19d10:	bl	43ac <rb_radixtree_elem_delete@plt>
   19d14:	mov	r0, r4
   19d18:	pop	{r4, pc}
   19d1c:	mov	r4, r3
   19d20:	b	19d14 <rb_radixtree_delete+0x28>

00019d24 <rb_radixtree_destroy>:
   19d24:	push	{r4, r5, r6, r7, r8, r9, lr}
   19d28:	sub	sp, sp, #44	; 0x2c
   19d2c:	mov	r7, r1
   19d30:	ldr	r9, [pc, #252]	; 19e34 <rb_radixtree_destroy+0x110>
   19d34:	mov	r1, sp
   19d38:	mov	r8, r2
   19d3c:	mov	r4, r0
   19d40:	bl	440c <rb_radixtree_foreach_start@plt>
   19d44:	cmp	r7, #0
   19d48:	mov	r6, sp
   19d4c:	add	r9, pc, r9
   19d50:	bne	19d80 <rb_radixtree_destroy+0x5c>
   19d54:	b	19e18 <rb_radixtree_destroy+0xf4>
   19d58:	ldr	r5, [sp, #8]
   19d5c:	ldr	r1, [r5, #4]
   19d60:	ldr	r0, [r5, #8]
   19d64:	blx	r7
   19d68:	ldr	r1, [r5, #8]
   19d6c:	mov	r0, r4
   19d70:	bl	4cc4 <rb_radixtree_delete@plt>
   19d74:	mov	r1, r6
   19d78:	mov	r0, r4
   19d7c:	bl	4448 <rb_radixtree_foreach_next@plt>
   19d80:	mov	r1, r6
   19d84:	mov	r0, r4
   19d88:	bl	47a8 <rb_radixtree_foreach_cur@plt>
   19d8c:	mov	r2, r8
   19d90:	cmp	r0, #0
   19d94:	bne	19d58 <rb_radixtree_destroy+0x34>
   19d98:	ldr	r3, [r4, #24]
   19d9c:	ldr	r2, [pc, #148]	; 19e38 <rb_radixtree_destroy+0x114>
   19da0:	cmp	r3, #0
   19da4:	ldr	r1, [r4, #20]
   19da8:	ldreq	r2, [r9, r2]
   19dac:	strne	r1, [r3, #4]
   19db0:	ldrne	r2, [r9, r2]
   19db4:	ldrne	r1, [r4, #20]
   19db8:	streq	r1, [r2, #4]
   19dbc:	cmp	r1, #0
   19dc0:	strne	r3, [r1, #8]
   19dc4:	streq	r3, [r2]
   19dc8:	ldr	r0, [r4, #12]
   19dcc:	ldr	r3, [r2, #8]
   19dd0:	mov	r1, #0
   19dd4:	sub	r3, r3, #1
   19dd8:	cmp	r0, #0
   19ddc:	str	r3, [r2, #8]
   19de0:	str	r1, [r4, #20]
   19de4:	str	r1, [r4, #24]
   19de8:	beq	19df0 <rb_radixtree_destroy+0xcc>
   19dec:	bl	46f4 <free@plt>
   19df0:	mov	r0, r4
   19df4:	add	sp, sp, #44	; 0x2c
   19df8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   19dfc:	b	46f4 <free@plt>
   19e00:	ldr	r3, [sp, #8]
   19e04:	ldr	r1, [r3, #8]
   19e08:	bl	4cc4 <rb_radixtree_delete@plt>
   19e0c:	mov	r1, r6
   19e10:	mov	r0, r4
   19e14:	bl	4448 <rb_radixtree_foreach_next@plt>
   19e18:	mov	r1, r6
   19e1c:	mov	r0, r4
   19e20:	bl	47a8 <rb_radixtree_foreach_cur@plt>
   19e24:	cmp	r0, #0
   19e28:	mov	r0, r4
   19e2c:	bne	19e00 <rb_radixtree_destroy+0xdc>
   19e30:	b	19d98 <rb_radixtree_destroy+0x74>
   19e34:	.word	0x000132ac
   19e38:	.word	0x000003f4

00019e3c <rb_radixtree_retrieve>:
   19e3c:	push	{r4, lr}
   19e40:	mov	r2, #0
   19e44:	bl	4b74 <rb_radixtree_elem_find@plt>
   19e48:	cmp	r0, #0
   19e4c:	ldrne	r0, [r0, #4]
   19e50:	pop	{r4, pc}

00019e54 <rb_radixtree_elem_get_key>:
   19e54:	ldr	r0, [r0, #8]
   19e58:	bx	lr

00019e5c <rb_radixtree_elem_set_data>:
   19e5c:	str	r1, [r0, #4]
   19e60:	bx	lr

00019e64 <rb_radixtree_elem_get_data>:
   19e64:	ldr	r0, [r0, #4]
   19e68:	bx	lr

00019e6c <rb_radixtree_size>:
   19e6c:	ldr	r0, [r0, #8]
   19e70:	bx	lr

00019e74 <rb_radixtree_stats>:
   19e74:	push	{r4, r5, r6, r7, r8, lr}
   19e78:	mov	r4, r0
   19e7c:	ldr	r0, [r0, #8]
   19e80:	mov	r3, #0
   19e84:	sub	sp, sp, #288	; 0x120
   19e88:	cmp	r0, r3
   19e8c:	mov	r5, r1
   19e90:	mov	r6, r2
   19e94:	str	r3, [sp, #28]
   19e98:	bne	19ef0 <rb_radixtree_stats+0x7c>
   19e9c:	ldr	r2, [pc, #168]	; 19f4c <rb_radixtree_stats+0xd8>
   19ea0:	ldr	r1, [pc, #168]	; 19f50 <rb_radixtree_stats+0xdc>
   19ea4:	add	r2, pc, r2
   19ea8:	ldr	r3, [r4, #12]
   19eac:	str	r2, [sp, #16]
   19eb0:	str	r2, [sp, #12]
   19eb4:	str	r2, [sp, #8]
   19eb8:	str	r2, [sp, #4]
   19ebc:	ldr	r2, [pc, #144]	; 19f54 <rb_radixtree_stats+0xe0>
   19ec0:	add	r1, pc, r1
   19ec4:	add	r4, sp, #32
   19ec8:	str	r1, [sp]
   19ecc:	mov	r0, r4
   19ed0:	add	r2, pc, r2
   19ed4:	mov	r1, #256	; 0x100
   19ed8:	bl	4bb0 <snprintf@plt>
   19edc:	mov	r1, r6
   19ee0:	mov	r0, r4
   19ee4:	blx	r5
   19ee8:	add	sp, sp, #288	; 0x120
   19eec:	pop	{r4, r5, r6, r7, r8, pc}
   19ef0:	add	r2, sp, #28
   19ef4:	mov	r1, r3
   19ef8:	ldr	r0, [r4, #4]
   19efc:	bl	189f0 <stats_recurse>
   19f00:	ldr	r7, [r4, #8]
   19f04:	ldr	r3, [sp, #28]
   19f08:	mov	r1, r7
   19f0c:	str	r3, [sp, #16]
   19f10:	mov	r8, r0
   19f14:	bl	19fb0 <__udivsi3>
   19f18:	ldr	r1, [pc, #56]	; 19f58 <rb_radixtree_stats+0xe4>
   19f1c:	ldr	r2, [pc, #56]	; 19f5c <rb_radixtree_stats+0xe8>
   19f20:	add	r1, pc, r1
   19f24:	ldr	r3, [r4, #12]
   19f28:	add	r4, sp, #32
   19f2c:	stm	sp, {r1, r7}
   19f30:	add	r2, pc, r2
   19f34:	str	r8, [sp, #8]
   19f38:	mov	r1, #256	; 0x100
   19f3c:	str	r0, [sp, #12]
   19f40:	mov	r0, r4
   19f44:	bl	4bb0 <snprintf@plt>
   19f48:	b	19edc <rb_radixtree_stats+0x68>
   19f4c:	.word	0x00000f40
   19f50:	.word	0x00001fe0
   19f54:	.word	0x00001fac
   19f58:	.word	0x00001f80
   19f5c:	.word	0x00001f20

00019f60 <rb_radixtree_stats_walk>:
   19f60:	ldr	r3, [pc, #64]	; 19fa8 <rb_radixtree_stats_walk+0x48>
   19f64:	ldr	r2, [pc, #64]	; 19fac <rb_radixtree_stats_walk+0x4c>
   19f68:	add	r3, pc, r3
   19f6c:	push	{r4, r5, r6, lr}
   19f70:	ldr	r2, [r3, r2]
   19f74:	ldr	r4, [r2]
   19f78:	cmp	r4, #0
   19f7c:	popeq	{r4, r5, r6, pc}
   19f80:	mov	r6, r0
   19f84:	mov	r5, r1
   19f88:	ldr	r0, [r4]
   19f8c:	mov	r2, r5
   19f90:	mov	r1, r6
   19f94:	bl	4640 <rb_radixtree_stats@plt>
   19f98:	ldr	r4, [r4, #8]
   19f9c:	cmp	r4, #0
   19fa0:	bne	19f88 <rb_radixtree_stats_walk+0x28>
   19fa4:	pop	{r4, r5, r6, pc}
   19fa8:	.word	0x00013090
   19fac:	.word	0x000003f4

00019fb0 <__udivsi3>:
   19fb0:	subs	r2, r1, #1
   19fb4:	bxeq	lr
   19fb8:	bcc	1a190 <__udivsi3+0x1e0>
   19fbc:	cmp	r0, r1
   19fc0:	bls	1a174 <__udivsi3+0x1c4>
   19fc4:	tst	r1, r2
   19fc8:	beq	1a180 <__udivsi3+0x1d0>
   19fcc:	clz	r3, r0
   19fd0:	clz	r2, r1
   19fd4:	sub	r3, r2, r3
   19fd8:	rsbs	r3, r3, #31
   19fdc:	addne	r3, r3, r3, lsl #1
   19fe0:	mov	r2, #0
   19fe4:	addne	pc, pc, r3, lsl #2
   19fe8:	nop			; (mov r0, r0)
   19fec:	cmp	r0, r1, lsl #31
   19ff0:	adc	r2, r2, r2
   19ff4:	subcs	r0, r0, r1, lsl #31
   19ff8:	cmp	r0, r1, lsl #30
   19ffc:	adc	r2, r2, r2
   1a000:	subcs	r0, r0, r1, lsl #30
   1a004:	cmp	r0, r1, lsl #29
   1a008:	adc	r2, r2, r2
   1a00c:	subcs	r0, r0, r1, lsl #29
   1a010:	cmp	r0, r1, lsl #28
   1a014:	adc	r2, r2, r2
   1a018:	subcs	r0, r0, r1, lsl #28
   1a01c:	cmp	r0, r1, lsl #27
   1a020:	adc	r2, r2, r2
   1a024:	subcs	r0, r0, r1, lsl #27
   1a028:	cmp	r0, r1, lsl #26
   1a02c:	adc	r2, r2, r2
   1a030:	subcs	r0, r0, r1, lsl #26
   1a034:	cmp	r0, r1, lsl #25
   1a038:	adc	r2, r2, r2
   1a03c:	subcs	r0, r0, r1, lsl #25
   1a040:	cmp	r0, r1, lsl #24
   1a044:	adc	r2, r2, r2
   1a048:	subcs	r0, r0, r1, lsl #24
   1a04c:	cmp	r0, r1, lsl #23
   1a050:	adc	r2, r2, r2
   1a054:	subcs	r0, r0, r1, lsl #23
   1a058:	cmp	r0, r1, lsl #22
   1a05c:	adc	r2, r2, r2
   1a060:	subcs	r0, r0, r1, lsl #22
   1a064:	cmp	r0, r1, lsl #21
   1a068:	adc	r2, r2, r2
   1a06c:	subcs	r0, r0, r1, lsl #21
   1a070:	cmp	r0, r1, lsl #20
   1a074:	adc	r2, r2, r2
   1a078:	subcs	r0, r0, r1, lsl #20
   1a07c:	cmp	r0, r1, lsl #19
   1a080:	adc	r2, r2, r2
   1a084:	subcs	r0, r0, r1, lsl #19
   1a088:	cmp	r0, r1, lsl #18
   1a08c:	adc	r2, r2, r2
   1a090:	subcs	r0, r0, r1, lsl #18
   1a094:	cmp	r0, r1, lsl #17
   1a098:	adc	r2, r2, r2
   1a09c:	subcs	r0, r0, r1, lsl #17
   1a0a0:	cmp	r0, r1, lsl #16
   1a0a4:	adc	r2, r2, r2
   1a0a8:	subcs	r0, r0, r1, lsl #16
   1a0ac:	cmp	r0, r1, lsl #15
   1a0b0:	adc	r2, r2, r2
   1a0b4:	subcs	r0, r0, r1, lsl #15
   1a0b8:	cmp	r0, r1, lsl #14
   1a0bc:	adc	r2, r2, r2
   1a0c0:	subcs	r0, r0, r1, lsl #14
   1a0c4:	cmp	r0, r1, lsl #13
   1a0c8:	adc	r2, r2, r2
   1a0cc:	subcs	r0, r0, r1, lsl #13
   1a0d0:	cmp	r0, r1, lsl #12
   1a0d4:	adc	r2, r2, r2
   1a0d8:	subcs	r0, r0, r1, lsl #12
   1a0dc:	cmp	r0, r1, lsl #11
   1a0e0:	adc	r2, r2, r2
   1a0e4:	subcs	r0, r0, r1, lsl #11
   1a0e8:	cmp	r0, r1, lsl #10
   1a0ec:	adc	r2, r2, r2
   1a0f0:	subcs	r0, r0, r1, lsl #10
   1a0f4:	cmp	r0, r1, lsl #9
   1a0f8:	adc	r2, r2, r2
   1a0fc:	subcs	r0, r0, r1, lsl #9
   1a100:	cmp	r0, r1, lsl #8
   1a104:	adc	r2, r2, r2
   1a108:	subcs	r0, r0, r1, lsl #8
   1a10c:	cmp	r0, r1, lsl #7
   1a110:	adc	r2, r2, r2
   1a114:	subcs	r0, r0, r1, lsl #7
   1a118:	cmp	r0, r1, lsl #6
   1a11c:	adc	r2, r2, r2
   1a120:	subcs	r0, r0, r1, lsl #6
   1a124:	cmp	r0, r1, lsl #5
   1a128:	adc	r2, r2, r2
   1a12c:	subcs	r0, r0, r1, lsl #5
   1a130:	cmp	r0, r1, lsl #4
   1a134:	adc	r2, r2, r2
   1a138:	subcs	r0, r0, r1, lsl #4
   1a13c:	cmp	r0, r1, lsl #3
   1a140:	adc	r2, r2, r2
   1a144:	subcs	r0, r0, r1, lsl #3
   1a148:	cmp	r0, r1, lsl #2
   1a14c:	adc	r2, r2, r2
   1a150:	subcs	r0, r0, r1, lsl #2
   1a154:	cmp	r0, r1, lsl #1
   1a158:	adc	r2, r2, r2
   1a15c:	subcs	r0, r0, r1, lsl #1
   1a160:	cmp	r0, r1
   1a164:	adc	r2, r2, r2
   1a168:	subcs	r0, r0, r1
   1a16c:	mov	r0, r2
   1a170:	bx	lr
   1a174:	moveq	r0, #1
   1a178:	movne	r0, #0
   1a17c:	bx	lr
   1a180:	clz	r2, r1
   1a184:	rsb	r2, r2, #31
   1a188:	lsr	r0, r0, r2
   1a18c:	bx	lr
   1a190:	cmp	r0, #0
   1a194:	mvnne	r0, #0
   1a198:	b	1a1bc <__aeabi_idiv0>

0001a19c <__aeabi_uidivmod>:
   1a19c:	cmp	r1, #0
   1a1a0:	beq	1a190 <__udivsi3+0x1e0>
   1a1a4:	push	{r0, r1, lr}
   1a1a8:	bl	19fb0 <__udivsi3>
   1a1ac:	pop	{r1, r2, lr}
   1a1b0:	mul	r3, r2, r0
   1a1b4:	sub	r1, r1, r3
   1a1b8:	bx	lr

0001a1bc <__aeabi_idiv0>:
   1a1bc:	push	{r1, lr}
   1a1c0:	mov	r0, #8
   1a1c4:	bl	48e0 <raise@plt>
   1a1c8:	pop	{r1, pc}

Disassembly of section .fini:

0001a1cc <_fini>:
   1a1cc:	push	{r3, lr}
   1a1d0:	pop	{r3, pc}
