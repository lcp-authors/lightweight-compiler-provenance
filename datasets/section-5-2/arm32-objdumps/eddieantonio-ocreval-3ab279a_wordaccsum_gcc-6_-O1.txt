
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	10874 <abort@plt+0x4c>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <calloc@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <calloc@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r2, r1, r4, ror #17

00010720 <calloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #73728	; 0x12000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <strcmp@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #73728	; 0x12000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <strtol@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #73728	; 0x12000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <fopen@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #73728	; 0x12000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <free@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #73728	; 0x12000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <fgets@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #73728	; 0x12000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <strdup@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <unlink@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <__xstat@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <fwrite@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2188]!	; 0x88c

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2180]!	; 0x884

000107bc <getpid@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2172]!	; 0x87c

000107c8 <exit@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2164]!	; 0x874

000107d4 <strlen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2156]!	; 0x86c

000107e0 <fprintf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2148]!	; 0x864

000107ec <__isoc99_sscanf@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2140]!	; 0x85c

000107f8 <fclose@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2132]!	; 0x854

00010804 <fputc@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2124]!	; 0x84c

00010810 <sprintf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2116]!	; 0x844

0001081c <strncmp@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2108]!	; 0x83c

00010828 <abort@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2100]!	; 0x834

Disassembly of section .text:

00010838 <error@@Base-0xeb4>:
   10838:	mov	fp, #0
   1083c:	mov	lr, #0
   10840:	pop	{r1}		; (ldr r1, [sp], #4)
   10844:	mov	r2, sp
   10848:	push	{r2}		; (str r2, [sp, #-4]!)
   1084c:	push	{r0}		; (str r0, [sp, #-4]!)
   10850:	ldr	ip, [pc, #16]	; 10868 <abort@plt+0x40>
   10854:	push	{ip}		; (str ip, [sp, #-4]!)
   10858:	ldr	r0, [pc, #12]	; 1086c <abort@plt+0x44>
   1085c:	ldr	r3, [pc, #12]	; 10870 <abort@plt+0x48>
   10860:	bl	10798 <__libc_start_main@plt>
   10864:	bl	10828 <abort@plt>
   10868:	andeq	r1, r1, ip, lsl lr
   1086c:	andeq	r0, r1, r0, ror #18
   10870:			; <UNDEFINED> instruction: 0x00011dbc
   10874:	ldr	r3, [pc, #20]	; 10890 <abort@plt+0x68>
   10878:	ldr	r2, [pc, #20]	; 10894 <abort@plt+0x6c>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	cmp	r2, #0
   10888:	bxeq	lr
   1088c:	b	107b0 <__gmon_start__@plt>
   10890:	andeq	r2, r1, ip, ror r7
   10894:	andeq	r0, r0, r8, rrx
   10898:	ldr	r3, [pc, #28]	; 108bc <abort@plt+0x94>
   1089c:	ldr	r0, [pc, #28]	; 108c0 <abort@plt+0x98>
   108a0:	sub	r3, r3, r0
   108a4:	cmp	r3, #6
   108a8:	bxls	lr
   108ac:	ldr	r3, [pc, #16]	; 108c4 <abort@plt+0x9c>
   108b0:	cmp	r3, #0
   108b4:	bxeq	lr
   108b8:	bx	r3
   108bc:	andeq	r3, r2, pc, ror r0
   108c0:	andeq	r3, r2, ip, ror r0
   108c4:	andeq	r0, r0, r0
   108c8:	ldr	r1, [pc, #36]	; 108f4 <abort@plt+0xcc>
   108cc:	ldr	r0, [pc, #36]	; 108f8 <abort@plt+0xd0>
   108d0:	sub	r1, r1, r0
   108d4:	asr	r1, r1, #2
   108d8:	add	r1, r1, r1, lsr #31
   108dc:	asrs	r1, r1, #1
   108e0:	bxeq	lr
   108e4:	ldr	r3, [pc, #16]	; 108fc <abort@plt+0xd4>
   108e8:	cmp	r3, #0
   108ec:	bxeq	lr
   108f0:	bx	r3
   108f4:	andeq	r3, r2, ip, ror r0
   108f8:	andeq	r3, r2, ip, ror r0
   108fc:	andeq	r0, r0, r0
   10900:	push	{r4, lr}
   10904:	ldr	r4, [pc, #24]	; 10924 <abort@plt+0xfc>
   10908:	ldrb	r3, [r4]
   1090c:	cmp	r3, #0
   10910:	popne	{r4, pc}
   10914:	bl	10898 <abort@plt+0x70>
   10918:	mov	r3, #1
   1091c:	strb	r3, [r4]
   10920:	pop	{r4, pc}
   10924:	muleq	r2, r0, r0
   10928:	ldr	r0, [pc, #40]	; 10958 <abort@plt+0x130>
   1092c:	ldr	r3, [r0]
   10930:	cmp	r3, #0
   10934:	bne	1093c <abort@plt+0x114>
   10938:	b	108c8 <abort@plt+0xa0>
   1093c:	ldr	r3, [pc, #24]	; 1095c <abort@plt+0x134>
   10940:	cmp	r3, #0
   10944:	beq	10938 <abort@plt+0x110>
   10948:	push	{r4, lr}
   1094c:	blx	r3
   10950:	pop	{r4, lr}
   10954:	b	108c8 <abort@plt+0xa0>
   10958:	andeq	r2, r2, r4, lsl #30
   1095c:	andeq	r0, r0, r0
   10960:	push	{r4, r5, r6, lr}
   10964:	sub	sp, sp, #8
   10968:	add	ip, sp, #8
   1096c:	str	r0, [ip, #-4]!
   10970:	mov	r5, r1
   10974:	mov	r3, #0
   10978:	ldr	r2, [pc, #88]	; 109d8 <abort@plt+0x1b0>
   1097c:	mov	r0, ip
   10980:	bl	1182c <error@@Base+0x140>
   10984:	ldr	r3, [sp, #4]
   10988:	cmp	r3, #1
   1098c:	ble	109d0 <abort@plt+0x1a8>
   10990:	cmp	r3, #0
   10994:	ble	109c0 <abort@plt+0x198>
   10998:	sub	r5, r5, #4
   1099c:	mov	r4, #0
   109a0:	ldr	r6, [pc, #52]	; 109dc <abort@plt+0x1b4>
   109a4:	ldr	r1, [r5, #4]!
   109a8:	mov	r0, r6
   109ac:	bl	10f2c <abort@plt+0x704>
   109b0:	add	r4, r4, #1
   109b4:	ldr	r3, [sp, #4]
   109b8:	cmp	r3, r4
   109bc:	bgt	109a4 <abort@plt+0x17c>
   109c0:	mov	r1, #0
   109c4:	ldr	r0, [pc, #16]	; 109dc <abort@plt+0x1b4>
   109c8:	bl	110a8 <abort@plt+0x880>
   109cc:	bl	11694 <abort@plt+0xe6c>
   109d0:	ldr	r0, [pc, #8]	; 109e0 <abort@plt+0x1b8>
   109d4:	bl	116ec <error@@Base>
   109d8:	andeq	r1, r1, ip, lsr #28
   109dc:	andeq	r3, r2, r4, lsl #2
   109e0:	andeq	r1, r1, r0, ror #28
   109e4:	andeq	r0, r0, r0
   109e8:	push	{r4, lr}
   109ec:	mov	r2, r0
   109f0:	mov	r1, #99	; 0x63
   109f4:	ldr	r0, [pc, #12]	; 10a08 <abort@plt+0x1e0>
   109f8:	bl	1075c <fgets@plt>
   109fc:	adds	r0, r0, #0
   10a00:	movne	r0, #1
   10a04:	pop	{r4, pc}
   10a08:	muleq	r2, r4, r0
   10a0c:	push	{r4, lr}
   10a10:	mov	r4, r1
   10a14:	bl	109e8 <abort@plt+0x1c0>
   10a18:	cmp	r0, #0
   10a1c:	bne	10a28 <abort@plt+0x200>
   10a20:	mov	r0, #0
   10a24:	pop	{r4, pc}
   10a28:	mov	r2, r4
   10a2c:	ldr	r1, [pc, #20]	; 10a48 <abort@plt+0x220>
   10a30:	ldr	r0, [pc, #20]	; 10a4c <abort@plt+0x224>
   10a34:	bl	107ec <__isoc99_sscanf@plt>
   10a38:	cmp	r0, #1
   10a3c:	movne	r0, #0
   10a40:	moveq	r0, #1
   10a44:	pop	{r4, pc}
   10a48:	strdeq	r1, [r1], -r4
   10a4c:	muleq	r2, r4, r0
   10a50:	push	{r4, lr}
   10a54:	ldr	r2, [r1]
   10a58:	cmp	r2, #0
   10a5c:	beq	10a94 <abort@plt+0x26c>
   10a60:	ldr	r3, [r1, #4]
   10a64:	sub	r3, r2, r3
   10a68:	vmov	s14, r3
   10a6c:	vcvt.f64.s32	d7, s14
   10a70:	vldr	d6, [pc, #56]	; 10ab0 <abort@plt+0x288>
   10a74:	vmul.f64	d7, d7, d6
   10a78:	vmov	s13, r2
   10a7c:	vcvt.f64.s32	d6, s13
   10a80:	vdiv.f64	d5, d7, d6
   10a84:	vmov	r2, r3, d5
   10a88:	ldr	r1, [pc, #40]	; 10ab8 <abort@plt+0x290>
   10a8c:	bl	107e0 <fprintf@plt>
   10a90:	pop	{r4, pc}
   10a94:	mov	r3, r0
   10a98:	mov	r2, #8
   10a9c:	mov	r1, #1
   10aa0:	ldr	r0, [pc, #20]	; 10abc <abort@plt+0x294>
   10aa4:	bl	1078c <fwrite@plt>
   10aa8:	pop	{r4, pc}
   10aac:	nop			; (mov r0, r0)
   10ab0:	andeq	r0, r0, r0
   10ab4:	subsmi	r0, r9, r0
   10ab8:	andeq	r1, r1, r4, lsl #29
   10abc:	andeq	r1, r1, r8, ror lr
   10ac0:	push	{r4, r5, r6, lr}
   10ac4:	mov	r4, r0
   10ac8:	subs	r5, r1, #0
   10acc:	beq	10b04 <abort@plt+0x2dc>
   10ad0:	ldr	r3, [r5, #4]
   10ad4:	ldr	r2, [r5]
   10ad8:	ldr	r1, [pc, #60]	; 10b1c <abort@plt+0x2f4>
   10adc:	bl	107e0 <fprintf@plt>
   10ae0:	mov	r1, r5
   10ae4:	mov	r0, r4
   10ae8:	bl	10a50 <abort@plt+0x228>
   10aec:	mov	r3, r4
   10af0:	mov	r2, #3
   10af4:	mov	r1, #1
   10af8:	ldr	r0, [pc, #32]	; 10b20 <abort@plt+0x2f8>
   10afc:	bl	1078c <fwrite@plt>
   10b00:	pop	{r4, r5, r6, pc}
   10b04:	mov	r3, r0
   10b08:	mov	r2, #26
   10b0c:	mov	r1, #1
   10b10:	ldr	r0, [pc, #12]	; 10b24 <abort@plt+0x2fc>
   10b14:	bl	1078c <fwrite@plt>
   10b18:	b	10aec <abort@plt+0x2c4>
   10b1c:	andeq	r1, r1, ip, lsl #29
   10b20:			; <UNDEFINED> instruction: 0x00011eb4
   10b24:	muleq	r1, r8, lr
   10b28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b2c:	mov	r6, r0
   10b30:	mov	r5, r1
   10b34:	mov	r7, r2
   10b38:	ldrb	r9, [sp, #32]
   10b3c:	ldrb	sl, [sp, #36]	; 0x24
   10b40:	mov	r2, r3
   10b44:	ldr	r1, [pc, #240]	; 10c3c <abort@plt+0x414>
   10b48:	bl	107e0 <fprintf@plt>
   10b4c:	mov	r1, #0
   10b50:	mov	r0, r6
   10b54:	bl	10ac0 <abort@plt+0x298>
   10b58:	cmp	r9, #0
   10b5c:	bne	10c18 <abort@plt+0x3f0>
   10b60:	ldr	r2, [pc, #216]	; 10c40 <abort@plt+0x418>
   10b64:	ldr	r1, [pc, #216]	; 10c44 <abort@plt+0x41c>
   10b68:	mov	r0, r6
   10b6c:	bl	107e0 <fprintf@plt>
   10b70:	cmp	r7, #0
   10b74:	bgt	10c30 <abort@plt+0x408>
   10b78:	b	10bec <abort@plt+0x3c4>
   10b7c:	add	r4, r4, #1
   10b80:	sxth	r4, r4
   10b84:	cmp	r7, r4
   10b88:	blt	10bb8 <abort@plt+0x390>
   10b8c:	add	r1, r5, r4, lsl #3
   10b90:	ldr	r3, [r5, r4, lsl #3]
   10b94:	cmp	r3, #0
   10b98:	ble	10b7c <abort@plt+0x354>
   10b9c:	mov	r0, r6
   10ba0:	bl	10ac0 <abort@plt+0x298>
   10ba4:	mov	r2, r4
   10ba8:	mov	r1, r8
   10bac:	mov	r0, r6
   10bb0:	bl	107e0 <fprintf@plt>
   10bb4:	b	10b7c <abort@plt+0x354>
   10bb8:	cmp	r9, #0
   10bbc:	beq	10bec <abort@plt+0x3c4>
   10bc0:	add	r3, r7, #1
   10bc4:	add	r1, r5, r3, lsl #3
   10bc8:	ldr	r3, [r5, r3, lsl #3]
   10bcc:	cmp	r3, #0
   10bd0:	ble	10bec <abort@plt+0x3c4>
   10bd4:	mov	r0, r6
   10bd8:	bl	10ac0 <abort@plt+0x298>
   10bdc:	mov	r2, r7
   10be0:	ldr	r1, [pc, #96]	; 10c48 <abort@plt+0x420>
   10be4:	mov	r0, r6
   10be8:	bl	107e0 <fprintf@plt>
   10bec:	cmp	sl, #0
   10bf0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bf4:	mov	r1, r5
   10bf8:	mov	r0, r6
   10bfc:	bl	10ac0 <abort@plt+0x298>
   10c00:	mov	r3, r6
   10c04:	mov	r2, #7
   10c08:	mov	r1, #1
   10c0c:	ldr	r0, [pc, #56]	; 10c4c <abort@plt+0x424>
   10c10:	bl	1078c <fwrite@plt>
   10c14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c18:	ldr	r2, [pc, #48]	; 10c50 <abort@plt+0x428>
   10c1c:	ldr	r1, [pc, #32]	; 10c44 <abort@plt+0x41c>
   10c20:	mov	r0, r6
   10c24:	bl	107e0 <fprintf@plt>
   10c28:	cmp	r7, #0
   10c2c:	ble	10bc0 <abort@plt+0x398>
   10c30:	mov	r4, #1
   10c34:	ldr	r8, [pc, #24]	; 10c54 <abort@plt+0x42c>
   10c38:	b	10b8c <abort@plt+0x364>
   10c3c:			; <UNDEFINED> instruction: 0x00011eb8
   10c40:	andeq	r1, r1, r8, ror #29
   10c44:	andeq	r2, r1, ip, lsl r0
   10c48:	andeq	r1, r1, ip, asr #29
   10c4c:	ldrdeq	r1, [r1], -r8
   10c50:	andeq	r1, r1, r0, ror #29
   10c54:	andeq	r1, r1, r0, asr #29
   10c58:	push	{r4, r5, r6, r7, r8, lr}
   10c5c:	mov	r6, r0
   10c60:	mov	r5, r1
   10c64:	mov	r7, r2
   10c68:	mov	r0, r1
   10c6c:	bl	11390 <abort@plt+0xb68>
   10c70:	add	r4, r5, #4096	; 0x1000
   10c74:	ldr	r2, [pc, #136]	; 10d04 <abort@plt+0x4dc>
   10c78:	ldr	r1, [r4, #3952]	; 0xf70
   10c7c:	ldr	r0, [r4, #3956]	; 0xf74
   10c80:	bl	11d90 <error@@Base+0x6a4>
   10c84:	mov	r2, r7
   10c88:	ldr	r1, [pc, #120]	; 10d08 <abort@plt+0x4e0>
   10c8c:	mov	r0, r6
   10c90:	bl	107e0 <fprintf@plt>
   10c94:	mov	r1, #0
   10c98:	mov	r0, r6
   10c9c:	bl	10ac0 <abort@plt+0x298>
   10ca0:	mov	r1, r6
   10ca4:	mov	r0, #10
   10ca8:	bl	10804 <fputc@plt>
   10cac:	ldr	r3, [r4, #3956]	; 0xf74
   10cb0:	cmp	r3, #0
   10cb4:	pople	{r4, r5, r6, r7, r8, pc}
   10cb8:	mov	r4, #0
   10cbc:	add	r5, r5, #4096	; 0x1000
   10cc0:	ldr	r7, [pc, #68]	; 10d0c <abort@plt+0x4e4>
   10cc4:	ldr	r3, [r5, #3952]	; 0xf70
   10cc8:	ldr	r1, [r3, r4, lsl #2]
   10ccc:	add	r1, r1, #12
   10cd0:	mov	r0, r6
   10cd4:	bl	10ac0 <abort@plt+0x298>
   10cd8:	ldr	r3, [r5, #3952]	; 0xf70
   10cdc:	ldr	r3, [r3, r4, lsl #2]
   10ce0:	ldr	r2, [r3, #8]
   10ce4:	mov	r1, r7
   10ce8:	mov	r0, r6
   10cec:	bl	107e0 <fprintf@plt>
   10cf0:	add	r4, r4, #1
   10cf4:	ldr	r3, [r5, #3956]	; 0xf74
   10cf8:	cmp	r3, r4
   10cfc:	bgt	10cc4 <abort@plt+0x49c>
   10d00:	pop	{r4, r5, r6, r7, r8, pc}
   10d04:	andeq	r0, r1, r0, lsl sp
   10d08:			; <UNDEFINED> instruction: 0x00011eb8
   10d0c:	andeq	r2, r1, ip, lsl r0
   10d10:	push	{r4, lr}
   10d14:	ldr	r1, [r1, #8]
   10d18:	ldr	r0, [r0, #8]
   10d1c:	bl	1153c <abort@plt+0xd14>
   10d20:	pop	{r4, pc}
   10d24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d28:	sub	sp, sp, #8
   10d2c:	mov	r5, r0
   10d30:	mov	r4, r1
   10d34:	bl	109e8 <abort@plt+0x1c0>
   10d38:	cmp	r0, #0
   10d3c:	moveq	r7, #0
   10d40:	beq	10df0 <abort@plt+0x5c8>
   10d44:	mov	r0, r5
   10d48:	bl	109e8 <abort@plt+0x1c0>
   10d4c:	cmp	r0, #0
   10d50:	moveq	r7, #0
   10d54:	beq	10df0 <abort@plt+0x5c8>
   10d58:	mov	r7, #0
   10d5c:	ldr	sl, [pc, #152]	; 10dfc <abort@plt+0x5d4>
   10d60:	ldr	r8, [pc, #152]	; 10e00 <abort@plt+0x5d8>
   10d64:	add	r6, r8, #29
   10d68:	ldr	r9, [pc, #148]	; 10e04 <abort@plt+0x5dc>
   10d6c:	b	10de0 <abort@plt+0x5b8>
   10d70:	mov	r3, sp
   10d74:	add	r2, sp, #4
   10d78:	mov	r1, sl
   10d7c:	mov	r0, r8
   10d80:	bl	107ec <__isoc99_sscanf@plt>
   10d84:	cmp	r0, #2
   10d88:	bne	10df0 <abort@plt+0x5c8>
   10d8c:	mov	r2, #10
   10d90:	mov	r1, #0
   10d94:	mov	r0, r6
   10d98:	bl	10738 <strtol@plt>
   10d9c:	cmp	r0, #0
   10da0:	bne	10dbc <abort@plt+0x594>
   10da4:	mov	r1, r9
   10da8:	mov	r0, r6
   10dac:	bl	1072c <strcmp@plt>
   10db0:	cmp	r0, #0
   10db4:	ldreq	r7, [sp, #4]
   10db8:	movne	r0, #11
   10dbc:	add	r2, r4, r0, lsl #3
   10dc0:	ldr	r3, [r4, r0, lsl #3]
   10dc4:	ldr	r1, [sp, #4]
   10dc8:	add	r3, r3, r1
   10dcc:	str	r3, [r4, r0, lsl #3]
   10dd0:	ldr	r3, [r2, #4]
   10dd4:	ldr	r1, [sp]
   10dd8:	add	r3, r3, r1
   10ddc:	str	r3, [r2, #4]
   10de0:	mov	r0, r5
   10de4:	bl	109e8 <abort@plt+0x1c0>
   10de8:	cmp	r0, #0
   10dec:	bne	10d70 <abort@plt+0x548>
   10df0:	mov	r0, r7
   10df4:	add	sp, sp, #8
   10df8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10dfc:	strdeq	r1, [r1], -r0
   10e00:	muleq	r2, r4, r0
   10e04:	ldrdeq	r1, [r1], -r8
   10e08:	ldr	r3, [r0]
   10e0c:	add	r1, r3, r1
   10e10:	str	r1, [r0]
   10e14:	ldr	r3, [r0, #4]
   10e18:	add	r2, r3, r2
   10e1c:	str	r2, [r0, #4]
   10e20:	bx	lr
   10e24:	push	{r4, r5, r6, r7, r8, lr}
   10e28:	mov	r7, r0
   10e2c:	mov	r8, r1
   10e30:	mov	r6, r2
   10e34:	mov	r5, r3
   10e38:	bl	112a0 <abort@plt+0xa78>
   10e3c:	subs	r4, r0, #0
   10e40:	beq	10e60 <abort@plt+0x638>
   10e44:	ldr	r2, [r4, #12]
   10e48:	add	r2, r2, r6
   10e4c:	str	r2, [r4, #12]
   10e50:	ldr	r3, [r4, #16]
   10e54:	add	r3, r3, r5
   10e58:	str	r3, [r4, #16]
   10e5c:	pop	{r4, r5, r6, r7, r8, pc}
   10e60:	mov	r1, #20
   10e64:	mov	r0, #1
   10e68:	bl	11728 <error@@Base+0x3c>
   10e6c:	mov	r4, r0
   10e70:	mov	r0, r8
   10e74:	bl	10768 <strdup@plt>
   10e78:	str	r0, [r4, #8]
   10e7c:	mov	r1, r4
   10e80:	mov	r0, r7
   10e84:	bl	112e8 <abort@plt+0xac0>
   10e88:	b	10e44 <abort@plt+0x61c>
   10e8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10e90:	sub	sp, sp, #12
   10e94:	mov	r5, r0
   10e98:	mov	r6, r1
   10e9c:	bl	109e8 <abort@plt+0x1c0>
   10ea0:	cmp	r0, #0
   10ea4:	beq	10f1c <abort@plt+0x6f4>
   10ea8:	mov	r0, r5
   10eac:	bl	109e8 <abort@plt+0x1c0>
   10eb0:	cmp	r0, #0
   10eb4:	beq	10f1c <abort@plt+0x6f4>
   10eb8:	ldr	r9, [pc, #100]	; 10f24 <abort@plt+0x6fc>
   10ebc:	ldr	r4, [pc, #100]	; 10f28 <abort@plt+0x700>
   10ec0:	mov	r8, #0
   10ec4:	add	r7, r4, #29
   10ec8:	b	10f0c <abort@plt+0x6e4>
   10ecc:	mov	r3, sp
   10ed0:	add	r2, sp, #4
   10ed4:	mov	r1, r9
   10ed8:	mov	r0, r4
   10edc:	bl	107ec <__isoc99_sscanf@plt>
   10ee0:	cmp	r0, #2
   10ee4:	bne	10f1c <abort@plt+0x6f4>
   10ee8:	mov	r0, r4
   10eec:	bl	107d4 <strlen@plt>
   10ef0:	add	r0, r4, r0
   10ef4:	strb	r8, [r0, #-1]
   10ef8:	ldr	r3, [sp]
   10efc:	ldr	r2, [sp, #4]
   10f00:	mov	r1, r7
   10f04:	mov	r0, r6
   10f08:	bl	10e24 <abort@plt+0x5fc>
   10f0c:	mov	r0, r5
   10f10:	bl	109e8 <abort@plt+0x1c0>
   10f14:	cmp	r0, #0
   10f18:	bne	10ecc <abort@plt+0x6a4>
   10f1c:	add	sp, sp, #12
   10f20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10f24:	strdeq	r1, [r1], -r0
   10f28:	muleq	r2, r4, r0
   10f2c:	push	{r4, r5, r6, r7, lr}
   10f30:	sub	sp, sp, #12
   10f34:	mov	r5, r0
   10f38:	mov	r6, r1
   10f3c:	ldr	r1, [pc, #332]	; 11090 <abort@plt+0x868>
   10f40:	mov	r0, r6
   10f44:	bl	117c0 <error@@Base+0xd4>
   10f48:	mov	r4, r0
   10f4c:	bl	109e8 <abort@plt+0x1c0>
   10f50:	cmp	r0, #0
   10f54:	beq	1107c <abort@plt+0x854>
   10f58:	mov	r2, #45	; 0x2d
   10f5c:	ldr	r1, [pc, #304]	; 11094 <abort@plt+0x86c>
   10f60:	ldr	r0, [pc, #304]	; 11098 <abort@plt+0x870>
   10f64:	bl	1081c <strncmp@plt>
   10f68:	cmp	r0, #0
   10f6c:	bne	1107c <abort@plt+0x854>
   10f70:	mov	r0, r4
   10f74:	bl	109e8 <abort@plt+0x1c0>
   10f78:	cmp	r0, #0
   10f7c:	beq	1107c <abort@plt+0x854>
   10f80:	ldr	r1, [pc, #276]	; 1109c <abort@plt+0x874>
   10f84:	ldr	r0, [pc, #268]	; 11098 <abort@plt+0x870>
   10f88:	bl	1072c <strcmp@plt>
   10f8c:	cmp	r0, #0
   10f90:	bne	1107c <abort@plt+0x854>
   10f94:	add	r1, sp, #4
   10f98:	mov	r0, r4
   10f9c:	bl	10a0c <abort@plt+0x1e4>
   10fa0:	cmp	r0, #0
   10fa4:	beq	1107c <abort@plt+0x854>
   10fa8:	mov	r1, sp
   10fac:	mov	r0, r4
   10fb0:	bl	10a0c <abort@plt+0x1e4>
   10fb4:	cmp	r0, #0
   10fb8:	beq	1107c <abort@plt+0x854>
   10fbc:	mov	r0, r4
   10fc0:	bl	109e8 <abort@plt+0x1c0>
   10fc4:	cmp	r0, #0
   10fc8:	beq	1107c <abort@plt+0x854>
   10fcc:	mov	r0, r4
   10fd0:	bl	109e8 <abort@plt+0x1c0>
   10fd4:	cmp	r0, #0
   10fd8:	beq	1107c <abort@plt+0x854>
   10fdc:	ldr	r3, [r5]
   10fe0:	ldr	r2, [sp, #4]
   10fe4:	add	r3, r3, r2
   10fe8:	str	r3, [r5]
   10fec:	ldr	r3, [r5, #4]
   10ff0:	ldr	r2, [sp]
   10ff4:	add	r3, r3, r2
   10ff8:	str	r3, [r5, #4]
   10ffc:	add	r1, r5, #8
   11000:	mov	r0, r4
   11004:	bl	10d24 <abort@plt+0x4fc>
   11008:	mov	r7, r0
   1100c:	add	r1, r5, #416	; 0x1a0
   11010:	mov	r0, r4
   11014:	bl	10d24 <abort@plt+0x4fc>
   11018:	mov	r6, r0
   1101c:	add	r1, r5, #824	; 0x338
   11020:	mov	r0, r4
   11024:	bl	10d24 <abort@plt+0x4fc>
   11028:	ldr	r3, [sp, #4]
   1102c:	cmp	r3, #0
   11030:	ble	1106c <abort@plt+0x844>
   11034:	add	r1, r5, #920	; 0x398
   11038:	mov	r0, r4
   1103c:	bl	10d24 <abort@plt+0x4fc>
   11040:	cmp	r7, #0
   11044:	ble	11054 <abort@plt+0x82c>
   11048:	add	r1, r5, #992	; 0x3e0
   1104c:	mov	r0, r4
   11050:	bl	10e8c <abort@plt+0x664>
   11054:	cmp	r6, #0
   11058:	ble	1106c <abort@plt+0x844>
   1105c:	add	r1, r5, #9024	; 0x2340
   11060:	add	r1, r1, #24
   11064:	mov	r0, r4
   11068:	bl	10e8c <abort@plt+0x664>
   1106c:	mov	r0, r4
   11070:	bl	115b8 <abort@plt+0xd90>
   11074:	add	sp, sp, #12
   11078:	pop	{r4, r5, r6, r7, pc}
   1107c:	ldr	r1, [pc, #28]	; 110a0 <abort@plt+0x878>
   11080:	cmp	r6, #0
   11084:	movne	r1, r6
   11088:	ldr	r0, [pc, #20]	; 110a4 <abort@plt+0x87c>
   1108c:	bl	11778 <error@@Base+0x8c>
   11090:	andeq	r1, r1, r0, lsl #30
   11094:	andeq	r1, r1, r4, lsl #30
   11098:	muleq	r2, r4, r0
   1109c:	andeq	r1, r1, r4, lsr pc
   110a0:	strdeq	r1, [r1], -r8
   110a4:	andeq	r1, r1, r4, ror #30
   110a8:	push	{r4, r5, r6, r7, lr}
   110ac:	sub	sp, sp, #12
   110b0:	mov	r4, r0
   110b4:	mov	r0, r1
   110b8:	ldr	r1, [pc, #292]	; 111e4 <abort@plt+0x9bc>
   110bc:	bl	117c0 <error@@Base+0xd4>
   110c0:	mov	r5, r0
   110c4:	ldr	r3, [pc, #284]	; 111e8 <abort@plt+0x9c0>
   110c8:	ldr	r2, [pc, #284]	; 111ec <abort@plt+0x9c4>
   110cc:	ldr	r1, [pc, #284]	; 111f0 <abort@plt+0x9c8>
   110d0:	bl	107e0 <fprintf@plt>
   110d4:	ldr	r2, [r4]
   110d8:	ldr	r1, [pc, #276]	; 111f4 <abort@plt+0x9cc>
   110dc:	mov	r0, r5
   110e0:	bl	107e0 <fprintf@plt>
   110e4:	ldr	r2, [r4, #4]
   110e8:	ldr	r1, [pc, #264]	; 111f8 <abort@plt+0x9d0>
   110ec:	mov	r0, r5
   110f0:	bl	107e0 <fprintf@plt>
   110f4:	mov	r1, r4
   110f8:	mov	r0, r5
   110fc:	bl	10a50 <abort@plt+0x228>
   11100:	mov	r3, r5
   11104:	mov	r2, #12
   11108:	mov	r1, #1
   1110c:	ldr	r0, [pc, #232]	; 111fc <abort@plt+0x9d4>
   11110:	bl	1078c <fwrite@plt>
   11114:	mov	r6, #1
   11118:	str	r6, [sp, #4]
   1111c:	mov	r7, #0
   11120:	str	r7, [sp]
   11124:	ldr	r3, [pc, #212]	; 11200 <abort@plt+0x9d8>
   11128:	mov	r2, #50	; 0x32
   1112c:	add	r1, r4, #8
   11130:	mov	r0, r5
   11134:	bl	10b28 <abort@plt+0x300>
   11138:	str	r6, [sp, #4]
   1113c:	str	r7, [sp]
   11140:	ldr	r3, [pc, #188]	; 11204 <abort@plt+0x9dc>
   11144:	mov	r2, #50	; 0x32
   11148:	add	r1, r4, #416	; 0x1a0
   1114c:	mov	r0, r5
   11150:	bl	10b28 <abort@plt+0x300>
   11154:	str	r6, [sp, #4]
   11158:	str	r6, [sp]
   1115c:	ldr	r3, [pc, #164]	; 11208 <abort@plt+0x9e0>
   11160:	mov	r2, #10
   11164:	add	r1, r4, #824	; 0x338
   11168:	mov	r0, r5
   1116c:	bl	10b28 <abort@plt+0x300>
   11170:	ldr	r3, [r4]
   11174:	cmp	r3, r7
   11178:	ble	111d4 <abort@plt+0x9ac>
   1117c:	str	r7, [sp, #4]
   11180:	str	r7, [sp]
   11184:	ldr	r3, [pc, #128]	; 1120c <abort@plt+0x9e4>
   11188:	mov	r2, #8
   1118c:	add	r1, r4, #920	; 0x398
   11190:	mov	r0, r5
   11194:	bl	10b28 <abort@plt+0x300>
   11198:	ldr	r3, [r4, #8]
   1119c:	cmp	r3, r7
   111a0:	ble	111b4 <abort@plt+0x98c>
   111a4:	ldr	r2, [pc, #84]	; 11200 <abort@plt+0x9d8>
   111a8:	add	r1, r4, #992	; 0x3e0
   111ac:	mov	r0, r5
   111b0:	bl	10c58 <abort@plt+0x430>
   111b4:	ldr	r3, [r4, #416]	; 0x1a0
   111b8:	cmp	r3, #0
   111bc:	ble	111d4 <abort@plt+0x9ac>
   111c0:	add	r1, r4, #9024	; 0x2340
   111c4:	ldr	r2, [pc, #56]	; 11204 <abort@plt+0x9dc>
   111c8:	add	r1, r1, #24
   111cc:	mov	r0, r5
   111d0:	bl	10c58 <abort@plt+0x430>
   111d4:	mov	r0, r5
   111d8:	bl	115b8 <abort@plt+0xd90>
   111dc:	add	sp, sp, #12
   111e0:	pop	{r4, r5, r6, r7, pc}
   111e4:	andeq	r1, r1, r8, ror pc
   111e8:	andeq	r1, r1, r4, lsr pc
   111ec:	andeq	r1, r1, r4, lsl #30
   111f0:	andeq	r1, r1, ip, ror pc
   111f4:	andeq	r1, r1, r4, lsl #31
   111f8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   111fc:	andeq	r1, r1, ip, lsr #31
   11200:			; <UNDEFINED> instruction: 0x00011fbc
   11204:	andeq	r1, r1, r8, asr #31
   11208:	ldrdeq	r1, [r1], -r8
   1120c:	strdeq	r1, [r1], -r0
   11210:	ldrb	r3, [r0]
   11214:	cmp	r3, #0
   11218:	beq	11258 <abort@plt+0xa30>
   1121c:	mov	r2, #0
   11220:	add	r2, r2, r3
   11224:	ldrb	r3, [r0, #1]!
   11228:	cmp	r3, #0
   1122c:	bne	11220 <abort@plt+0x9f8>
   11230:	ldr	r0, [pc, #40]	; 11260 <abort@plt+0xa38>
   11234:	smull	r3, r0, r0, r2
   11238:	add	r3, r0, r2
   1123c:	asr	r0, r2, #31
   11240:	rsb	r0, r0, r3, asr #8
   11244:	rsb	r3, r0, r0, lsl #6
   11248:	rsb	r0, r0, r3, lsl #3
   1124c:	sub	r0, r2, r0
   11250:	sxth	r0, r0
   11254:	bx	lr
   11258:	mov	r2, #0
   1125c:	b	11230 <abort@plt+0xa08>
   11260:	subhi	r4, sl, #1552	; 0x610
   11264:	push	{r4, r5, r6, lr}
   11268:	mov	r6, r0
   1126c:	mov	r4, r0
   11270:	add	r5, r0, #8000	; 0x1f40
   11274:	add	r5, r5, #48	; 0x30
   11278:	mov	r0, r4
   1127c:	bl	11ad4 <error@@Base+0x3e8>
   11280:	add	r4, r4, #16
   11284:	cmp	r4, r5
   11288:	bne	11278 <abort@plt+0xa50>
   1128c:	add	r6, r6, #4096	; 0x1000
   11290:	mov	r3, #0
   11294:	str	r3, [r6, #3952]	; 0xf70
   11298:	str	r3, [r6, #3956]	; 0xf74
   1129c:	pop	{r4, r5, r6, pc}
   112a0:	push	{r4, r5, r6, lr}
   112a4:	mov	r4, r0
   112a8:	mov	r5, r1
   112ac:	mov	r0, r1
   112b0:	bl	11210 <abort@plt+0x9e8>
   112b4:	ldr	r4, [r4, r0, lsl #4]
   112b8:	cmp	r4, #0
   112bc:	beq	112e0 <abort@plt+0xab8>
   112c0:	ldr	r1, [r4, #8]
   112c4:	mov	r0, r5
   112c8:	bl	1072c <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	beq	112e0 <abort@plt+0xab8>
   112d4:	ldr	r4, [r4, #4]
   112d8:	cmp	r4, #0
   112dc:	bne	112c0 <abort@plt+0xa98>
   112e0:	mov	r0, r4
   112e4:	pop	{r4, r5, r6, pc}
   112e8:	push	{r4, r5, r6, lr}
   112ec:	mov	r4, r0
   112f0:	mov	r5, r1
   112f4:	ldr	r0, [r1, #8]
   112f8:	bl	11210 <abort@plt+0x9e8>
   112fc:	mov	r1, r5
   11300:	add	r0, r4, r0, lsl #4
   11304:	bl	11aec <error@@Base+0x400>
   11308:	add	r3, r4, #4096	; 0x1000
   1130c:	ldr	r0, [r3, #3952]	; 0xf70
   11310:	cmp	r0, #0
   11314:	beq	11328 <abort@plt+0xb00>
   11318:	bl	10750 <free@plt>
   1131c:	add	r3, r4, #4096	; 0x1000
   11320:	mov	r2, #0
   11324:	str	r2, [r3, #3952]	; 0xf70
   11328:	add	r4, r4, #4096	; 0x1000
   1132c:	ldr	r3, [r4, #3956]	; 0xf74
   11330:	add	r3, r3, #1
   11334:	str	r3, [r4, #3956]	; 0xf74
   11338:	pop	{r4, r5, r6, pc}
   1133c:	push	{r4, r5, r6, lr}
   11340:	mov	r4, r0
   11344:	mov	r5, r1
   11348:	ldr	r0, [r1, #8]
   1134c:	bl	11210 <abort@plt+0x9e8>
   11350:	mov	r1, r5
   11354:	add	r0, r4, r0, lsl #4
   11358:	bl	11b48 <error@@Base+0x45c>
   1135c:	add	r3, r4, #4096	; 0x1000
   11360:	ldr	r0, [r3, #3952]	; 0xf70
   11364:	cmp	r0, #0
   11368:	beq	1137c <abort@plt+0xb54>
   1136c:	bl	10750 <free@plt>
   11370:	add	r3, r4, #4096	; 0x1000
   11374:	mov	r2, #0
   11378:	str	r2, [r3, #3952]	; 0xf70
   1137c:	add	r4, r4, #4096	; 0x1000
   11380:	ldr	r3, [r4, #3956]	; 0xf74
   11384:	sub	r3, r3, #1
   11388:	str	r3, [r4, #3956]	; 0xf74
   1138c:	pop	{r4, r5, r6, pc}
   11390:	add	r3, r0, #4096	; 0x1000
   11394:	ldr	r3, [r3, #3952]	; 0xf70
   11398:	cmp	r3, #0
   1139c:	bxne	lr
   113a0:	add	r3, r0, #4096	; 0x1000
   113a4:	ldr	r3, [r3, #3956]	; 0xf74
   113a8:	cmp	r3, #0
   113ac:	bxeq	lr
   113b0:	push	{r4, r5, r6, lr}
   113b4:	mov	r4, r0
   113b8:	mov	r1, #4
   113bc:	mov	r0, r3
   113c0:	bl	11728 <error@@Base+0x3c>
   113c4:	add	r3, r4, #4096	; 0x1000
   113c8:	str	r0, [r3, #3952]	; 0xf70
   113cc:	mov	r1, #0
   113d0:	mov	lr, r1
   113d4:	mov	ip, r3
   113d8:	ldr	r5, [pc, #64]	; 11420 <abort@plt+0xbf8>
   113dc:	b	113ec <abort@plt+0xbc4>
   113e0:	add	lr, lr, #1
   113e4:	cmp	lr, r5
   113e8:	beq	1141c <abort@plt+0xbf4>
   113ec:	ldr	r3, [r4, lr, lsl #4]
   113f0:	cmp	r3, #0
   113f4:	beq	113e0 <abort@plt+0xbb8>
   113f8:	lsl	r2, r1, #2
   113fc:	add	r1, r1, #1
   11400:	ldr	r0, [ip, #3952]	; 0xf70
   11404:	str	r3, [r0, r2]
   11408:	ldr	r3, [r3, #4]
   1140c:	add	r2, r2, #4
   11410:	cmp	r3, #0
   11414:	bne	113fc <abort@plt+0xbd4>
   11418:	b	113e0 <abort@plt+0xbb8>
   1141c:	pop	{r4, r5, r6, pc}
   11420:	strdeq	r0, [r0], -r7
   11424:	push	{r4, r5, r6, r7, r8, lr}
   11428:	mov	r7, r0
   1142c:	mov	r6, r1
   11430:	mov	r4, r0
   11434:	add	r5, r0, #8000	; 0x1f40
   11438:	add	r5, r5, #48	; 0x30
   1143c:	mov	r1, r6
   11440:	mov	r0, r4
   11444:	bl	11c10 <error@@Base+0x524>
   11448:	add	r4, r4, #16
   1144c:	cmp	r4, r5
   11450:	bne	1143c <abort@plt+0xc14>
   11454:	add	r3, r7, #4096	; 0x1000
   11458:	ldr	r0, [r3, #3952]	; 0xf70
   1145c:	cmp	r0, #0
   11460:	beq	11474 <abort@plt+0xc4c>
   11464:	bl	10750 <free@plt>
   11468:	add	r3, r7, #4096	; 0x1000
   1146c:	mov	r2, #0
   11470:	str	r2, [r3, #3952]	; 0xf70
   11474:	add	r7, r7, #4096	; 0x1000
   11478:	mov	r3, #0
   1147c:	str	r3, [r7, #3956]	; 0xf74
   11480:	pop	{r4, r5, r6, r7, r8, pc}
   11484:	push	{r4, r5, lr}
   11488:	sub	sp, sp, #116	; 0x74
   1148c:	mov	r5, r0
   11490:	ldr	r3, [pc, #44]	; 114c4 <abort@plt+0xc9c>
   11494:	ldr	r4, [r3]
   11498:	bl	107bc <getpid@plt>
   1149c:	str	r5, [sp]
   114a0:	mov	r3, r0
   114a4:	mov	r2, r4
   114a8:	ldr	r1, [pc, #24]	; 114c8 <abort@plt+0xca0>
   114ac:	add	r0, sp, #12
   114b0:	bl	10810 <sprintf@plt>
   114b4:	add	r0, sp, #12
   114b8:	bl	10768 <strdup@plt>
   114bc:	add	sp, sp, #116	; 0x74
   114c0:	pop	{r4, r5, pc}
   114c4:	ldrdeq	r7, [r2], -r8
   114c8:	strdeq	r1, [r1], -r8
   114cc:	push	{r7, lr}
   114d0:	mov	r7, r0
   114d4:	ldr	r3, [pc, #88]	; 11534 <abort@plt+0xd0c>
   114d8:	ldr	r3, [r3]
   114dc:	cmp	r3, #0
   114e0:	beq	114e8 <abort@plt+0xcc0>
   114e4:	blx	r3
   114e8:	ldr	r3, [pc, #72]	; 11538 <abort@plt+0xd10>
   114ec:	ldrsh	r3, [r3]
   114f0:	cmp	r3, #0
   114f4:	ble	1152c <abort@plt+0xd04>
   114f8:	mov	r4, #1
   114fc:	ldr	r6, [pc, #52]	; 11538 <abort@plt+0xd10>
   11500:	mov	r0, r4
   11504:	bl	11484 <abort@plt+0xc5c>
   11508:	mov	r5, r0
   1150c:	bl	10774 <unlink@plt>
   11510:	mov	r0, r5
   11514:	bl	10750 <free@plt>
   11518:	add	r4, r4, #1
   1151c:	sxth	r4, r4
   11520:	ldrsh	r3, [r6]
   11524:	cmp	r3, r4
   11528:	bge	11500 <abort@plt+0xcd8>
   1152c:	mov	r0, r7
   11530:	bl	107c8 <exit@plt>
   11534:	ldrdeq	r7, [r2], -ip
   11538:	strdeq	r3, [r2], -r8
   1153c:	push	{r4, lr}
   11540:	ldrb	r3, [r0]
   11544:	cmp	r3, #0
   11548:	beq	11594 <abort@plt+0xd6c>
   1154c:	ldrb	r2, [r1]
   11550:	cmp	r2, r3
   11554:	bne	115b0 <abort@plt+0xd88>
   11558:	mov	ip, r1
   1155c:	mov	r2, #0
   11560:	add	r2, r2, #1
   11564:	mov	r4, r2
   11568:	ldrb	r3, [r0, #1]!
   1156c:	cmp	r3, #0
   11570:	beq	11598 <abort@plt+0xd70>
   11574:	ldrb	lr, [ip, #1]!
   11578:	cmp	lr, r3
   1157c:	beq	11560 <abort@plt+0xd38>
   11580:	ldrb	r2, [r1, r4]
   11584:	cmp	r2, r3
   11588:	mvnhi	r0, #0
   1158c:	movls	r0, #1
   11590:	pop	{r4, pc}
   11594:	mov	r4, #0
   11598:	ldrb	r3, [r1, r4]
   1159c:	cmp	r3, #0
   115a0:	movne	r3, #0
   115a4:	bne	11580 <abort@plt+0xd58>
   115a8:	mov	r0, #0
   115ac:	pop	{r4, pc}
   115b0:	mov	r4, #0
   115b4:	b	11580 <abort@plt+0xd58>
   115b8:	ldr	r3, [pc, #36]	; 115e4 <abort@plt+0xdbc>
   115bc:	ldr	r3, [r3]
   115c0:	cmp	r3, r0
   115c4:	bxeq	lr
   115c8:	ldr	r3, [pc, #24]	; 115e8 <abort@plt+0xdc0>
   115cc:	ldr	r3, [r3]
   115d0:	cmp	r0, r3
   115d4:	bxeq	lr
   115d8:	push	{r4, lr}
   115dc:	bl	107f8 <fclose@plt>
   115e0:	pop	{r4, pc}
   115e4:	andeq	r3, r2, r8, lsl #1
   115e8:	andeq	r3, r2, ip, lsl #1
   115ec:	push	{lr}		; (str lr, [sp, #-4]!)
   115f0:	sub	sp, sp, #92	; 0x5c
   115f4:	mov	r2, sp
   115f8:	mov	r1, r0
   115fc:	mov	r0, #3
   11600:	bl	10780 <__xstat@plt>
   11604:	clz	r0, r0
   11608:	lsr	r0, r0, #5
   1160c:	add	sp, sp, #92	; 0x5c
   11610:	pop	{pc}		; (ldr pc, [sp], #4)
   11614:	push	{r4, lr}
   11618:	ldr	r3, [pc, #32]	; 11640 <abort@plt+0xe18>
   1161c:	ldrh	r0, [r3]
   11620:	add	r0, r0, #1
   11624:	sxth	r0, r0
   11628:	strh	r0, [r3]
   1162c:	bl	11484 <abort@plt+0xc5c>
   11630:	mov	r4, r0
   11634:	bl	10774 <unlink@plt>
   11638:	mov	r0, r4
   1163c:	pop	{r4, pc}
   11640:	strdeq	r3, [r2], -r8
   11644:	push	{r4, lr}
   11648:	mov	r4, r0
   1164c:	bl	107d4 <strlen@plt>
   11650:	sub	r0, r0, #1
   11654:	sxth	r0, r0
   11658:	cmp	r0, #0
   1165c:	blt	11688 <abort@plt+0xe60>
   11660:	ldrb	r3, [r4, r0]
   11664:	cmp	r3, #47	; 0x2f
   11668:	beq	11688 <abort@plt+0xe60>
   1166c:	sub	r0, r0, #1
   11670:	sxth	r0, r0
   11674:	cmp	r0, #0
   11678:	blt	11688 <abort@plt+0xe60>
   1167c:	ldrb	r3, [r4, r0]
   11680:	cmp	r3, #47	; 0x2f
   11684:	bne	1166c <abort@plt+0xe44>
   11688:	add	r0, r0, #1
   1168c:	add	r0, r4, r0
   11690:	pop	{r4, pc}
   11694:	push	{r4, lr}
   11698:	mov	r0, #0
   1169c:	bl	114cc <abort@plt+0xca4>
   116a0:	push	{r4, lr}
   116a4:	ldr	r2, [pc, #48]	; 116dc <abort@plt+0xeb4>
   116a8:	ldr	r2, [r2]
   116ac:	cmp	r2, #0
   116b0:	beq	116bc <abort@plt+0xe94>
   116b4:	blx	r2
   116b8:	bl	11694 <abort@plt+0xe6c>
   116bc:	mov	r3, r0
   116c0:	ldr	r2, [pc, #24]	; 116e0 <abort@plt+0xeb8>
   116c4:	ldr	r2, [r2]
   116c8:	ldr	r1, [pc, #20]	; 116e4 <abort@plt+0xebc>
   116cc:	ldr	r0, [pc, #20]	; 116e8 <abort@plt+0xec0>
   116d0:	ldr	r0, [r0]
   116d4:	bl	107e0 <fprintf@plt>
   116d8:	b	116b8 <abort@plt+0xe90>
   116dc:	ldrdeq	r7, [r2], -r4
   116e0:	ldrdeq	r7, [r2], -r8
   116e4:	andeq	r2, r1, r8
   116e8:	andeq	r3, r2, r0, lsl #1

000116ec <error@@Base>:
   116ec:	push	{r4, lr}
   116f0:	mov	r3, r0
   116f4:	ldr	r2, [pc, #28]	; 11718 <error@@Base+0x2c>
   116f8:	ldr	r2, [r2]
   116fc:	ldr	r1, [pc, #24]	; 1171c <error@@Base+0x30>
   11700:	ldr	r0, [pc, #24]	; 11720 <error@@Base+0x34>
   11704:	ldr	r0, [r0]
   11708:	bl	107e0 <fprintf@plt>
   1170c:	ldr	r3, [pc, #16]	; 11724 <error@@Base+0x38>
   11710:	ldr	r0, [r3]
   11714:	bl	114cc <abort@plt+0xca4>
   11718:	ldrdeq	r7, [r2], -r8
   1171c:	andeq	r2, r1, r8, lsl r0
   11720:	andeq	r3, r2, r0, lsl #1
   11724:	andeq	r3, r2, r4, ror r0
   11728:	push	{r4, lr}
   1172c:	bl	10720 <calloc@plt>
   11730:	cmp	r0, #0
   11734:	popne	{r4, pc}
   11738:	ldr	r0, [pc]	; 11740 <error@@Base+0x54>
   1173c:	bl	116ec <error@@Base>
   11740:	andeq	r2, r1, r0, lsr #32
   11744:	ldr	r3, [pc, #36]	; 11770 <error@@Base+0x84>
   11748:	ldrb	r3, [r3, #2]
   1174c:	cmp	r3, #0
   11750:	beq	11758 <error@@Base+0x6c>
   11754:	bx	lr
   11758:	push	{r4, lr}
   1175c:	mov	r2, #1
   11760:	ldr	r3, [pc, #8]	; 11770 <error@@Base+0x84>
   11764:	strb	r2, [r3, #2]
   11768:	ldr	r0, [pc, #4]	; 11774 <error@@Base+0x88>
   1176c:	bl	116ec <error@@Base>
   11770:	strdeq	r3, [r2], -r8
   11774:	andeq	r2, r1, ip, lsr r0
   11778:	push	{lr}		; (str lr, [sp, #-4]!)
   1177c:	sub	sp, sp, #12
   11780:	ldr	r3, [pc, #40]	; 117b0 <error@@Base+0xc4>
   11784:	ldr	r2, [r3]
   11788:	ldr	r3, [pc, #36]	; 117b4 <error@@Base+0xc8>
   1178c:	ldr	ip, [r3]
   11790:	str	r1, [sp]
   11794:	mov	r3, r0
   11798:	ldr	r1, [pc, #24]	; 117b8 <error@@Base+0xcc>
   1179c:	mov	r0, ip
   117a0:	bl	107e0 <fprintf@plt>
   117a4:	ldr	r3, [pc, #16]	; 117bc <error@@Base+0xd0>
   117a8:	ldr	r0, [r3]
   117ac:	bl	114cc <abort@plt+0xca4>
   117b0:	ldrdeq	r7, [r2], -r8
   117b4:	andeq	r3, r2, r0, lsl #1
   117b8:	andeq	r2, r1, ip, asr #32
   117bc:	andeq	r3, r2, r4, ror r0
   117c0:	push	{r4, r5, r6, lr}
   117c4:	subs	r5, r0, #0
   117c8:	beq	117f8 <error@@Base+0x10c>
   117cc:	mov	r4, r1
   117d0:	mov	r0, r5
   117d4:	bl	10744 <fopen@plt>
   117d8:	cmp	r0, #0
   117dc:	popne	{r4, r5, r6, pc}
   117e0:	ldrb	r3, [r4]
   117e4:	cmp	r3, #119	; 0x77
   117e8:	beq	11810 <error@@Base+0x124>
   117ec:	mov	r1, r5
   117f0:	ldr	r0, [pc, #36]	; 1181c <error@@Base+0x130>
   117f4:	bl	11778 <error@@Base+0x8c>
   117f8:	ldrb	r3, [r1]
   117fc:	cmp	r3, #114	; 0x72
   11800:	ldreq	r3, [pc, #24]	; 11820 <error@@Base+0x134>
   11804:	ldrne	r3, [pc, #24]	; 11824 <error@@Base+0x138>
   11808:	ldr	r0, [r3]
   1180c:	pop	{r4, r5, r6, pc}
   11810:	mov	r1, r5
   11814:	ldr	r0, [pc, #12]	; 11828 <error@@Base+0x13c>
   11818:	bl	11778 <error@@Base+0x8c>
   1181c:	andeq	r2, r1, r4, ror r0
   11820:	andeq	r3, r2, r8, lsl #1
   11824:	andeq	r3, r2, ip, lsl #1
   11828:	andeq	r2, r1, ip, asr r0
   1182c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11830:	sub	sp, sp, #20
   11834:	mov	r5, r0
   11838:	str	r0, [sp, #8]
   1183c:	mov	sl, r1
   11840:	str	r2, [sp, #12]
   11844:	mov	r6, r3
   11848:	ldr	r0, [r1]
   1184c:	bl	11644 <abort@plt+0xe1c>
   11850:	ldr	r3, [pc, #468]	; 11a2c <error@@Base+0x340>
   11854:	str	r0, [r3]
   11858:	ldr	r4, [pc, #464]	; 11a30 <error@@Base+0x344>
   1185c:	mov	r1, r4
   11860:	mov	r0, #2
   11864:	bl	107a4 <__sysv_signal@plt>
   11868:	mov	r1, r4
   1186c:	mov	r0, #15
   11870:	bl	107a4 <__sysv_signal@plt>
   11874:	ldr	r8, [r5]
   11878:	cmp	r8, #1
   1187c:	beq	1189c <error@@Base+0x1b0>
   11880:	movle	r7, #0
   11884:	ble	118b0 <error@@Base+0x1c4>
   11888:	mov	r7, #0
   1188c:	mov	r3, #1
   11890:	str	r3, [sp, #4]
   11894:	mov	r4, r3
   11898:	b	11948 <error@@Base+0x25c>
   1189c:	ldr	r3, [pc, #400]	; 11a34 <error@@Base+0x348>
   118a0:	ldrb	r3, [r3, #4]
   118a4:	cmp	r3, #0
   118a8:	moveq	r7, #0
   118ac:	bne	118c0 <error@@Base+0x1d4>
   118b0:	ldr	r3, [sp, #8]
   118b4:	str	r7, [r3]
   118b8:	add	sp, sp, #20
   118bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c0:	ldr	r0, [sp, #12]
   118c4:	bl	116a0 <abort@plt+0xe78>
   118c8:	ldr	r0, [sp, #12]
   118cc:	bl	116a0 <abort@plt+0xe78>
   118d0:	mov	r1, r6
   118d4:	b	119dc <error@@Base+0x2f0>
   118d8:	ldr	r3, [r1, #8]
   118dc:	cmp	r3, #0
   118e0:	beq	11908 <error@@Base+0x21c>
   118e4:	ldrb	r2, [r5, #2]
   118e8:	cmp	r2, #0
   118ec:	bne	11908 <error@@Base+0x21c>
   118f0:	ldrb	r2, [r3]
   118f4:	cmp	r2, #0
   118f8:	bne	11914 <error@@Base+0x228>
   118fc:	mov	r2, #1
   11900:	strb	r2, [r3]
   11904:	b	1192c <error@@Base+0x240>
   11908:	mov	r1, r5
   1190c:	ldr	r0, [pc, #292]	; 11a38 <error@@Base+0x34c>
   11910:	bl	11778 <error@@Base+0x8c>
   11914:	mov	r1, r5
   11918:	ldr	r0, [pc, #284]	; 11a3c <error@@Base+0x350>
   1191c:	bl	11778 <error@@Base+0x8c>
   11920:	add	r3, r7, #1
   11924:	str	r5, [sl, r7, lsl #2]
   11928:	sxth	r7, r3
   1192c:	add	r4, r4, #1
   11930:	sxth	r4, r4
   11934:	str	r4, [sp, #4]
   11938:	ldr	r3, [sp, #8]
   1193c:	ldr	r8, [r3]
   11940:	cmp	r4, r8
   11944:	bge	118b0 <error@@Base+0x1c4>
   11948:	lsl	fp, r4, #2
   1194c:	ldr	r5, [sl, r4, lsl #2]
   11950:	ldrb	r3, [r5]
   11954:	cmp	r3, #45	; 0x2d
   11958:	bne	11920 <error@@Base+0x234>
   1195c:	ldrb	r9, [r5, #1]
   11960:	cmp	r9, #0
   11964:	beq	11920 <error@@Base+0x234>
   11968:	mov	r0, r5
   1196c:	bl	107d4 <strlen@plt>
   11970:	mov	r2, r0
   11974:	mov	r1, r5
   11978:	ldr	r0, [pc, #192]	; 11a40 <error@@Base+0x354>
   1197c:	bl	1081c <strncmp@plt>
   11980:	cmp	r0, #0
   11984:	beq	118c8 <error@@Base+0x1dc>
   11988:	ldr	r3, [sp, #4]
   1198c:	add	r3, r3, #1
   11990:	cmp	r3, r8
   11994:	addlt	r3, sl, fp
   11998:	ldrlt	r0, [r3, #4]
   1199c:	movge	r0, #0
   119a0:	cmp	r6, #0
   119a4:	beq	11908 <error@@Base+0x21c>
   119a8:	ldrb	r2, [r6]
   119ac:	cmp	r9, r2
   119b0:	cmpne	r2, #0
   119b4:	beq	118d0 <error@@Base+0x1e4>
   119b8:	mov	r3, #0
   119bc:	add	r3, r3, #1
   119c0:	sxth	r3, r3
   119c4:	add	r2, r3, r3, lsl #1
   119c8:	add	r1, r6, r2, lsl #2
   119cc:	ldrb	r2, [r6, r2, lsl #2]
   119d0:	cmp	r9, r2
   119d4:	cmpne	r2, #0
   119d8:	bne	119bc <error@@Base+0x2d0>
   119dc:	cmp	r2, #0
   119e0:	beq	11908 <error@@Base+0x21c>
   119e4:	ldr	r3, [r1, #4]
   119e8:	cmp	r3, #0
   119ec:	beq	118d8 <error@@Base+0x1ec>
   119f0:	ldrb	r2, [r5, #2]
   119f4:	cmp	r2, #0
   119f8:	cmpeq	r0, #0
   119fc:	beq	118d8 <error@@Base+0x1ec>
   11a00:	ldr	r1, [r3]
   11a04:	cmp	r1, #0
   11a08:	bne	11914 <error@@Base+0x228>
   11a0c:	cmp	r2, #0
   11a10:	addne	r0, r5, #2
   11a14:	str	r0, [r3]
   11a18:	ldrb	r3, [r5, #2]
   11a1c:	cmp	r3, #0
   11a20:	addeq	r4, r4, #1
   11a24:	sxtheq	r4, r4
   11a28:	b	1192c <error@@Base+0x240>
   11a2c:	ldrdeq	r7, [r2], -r8
   11a30:	andeq	r1, r1, r4, asr #14
   11a34:	andeq	r3, r2, r4, ror r0
   11a38:	muleq	r1, r0, r0
   11a3c:	andeq	r2, r1, r0, lsr #1
   11a40:	andeq	r2, r1, r8, lsl #1
   11a44:	push	{lr}		; (str lr, [sp, #-4]!)
   11a48:	sub	sp, sp, #12
   11a4c:	ldr	r3, [pc, #36]	; 11a78 <error@@Base+0x38c>
   11a50:	ldr	r2, [r3]
   11a54:	ldr	r3, [pc, #32]	; 11a7c <error@@Base+0x390>
   11a58:	ldr	ip, [r3]
   11a5c:	str	r1, [sp]
   11a60:	mov	r3, r0
   11a64:	ldr	r1, [pc, #20]	; 11a80 <error@@Base+0x394>
   11a68:	mov	r0, ip
   11a6c:	bl	107e0 <fprintf@plt>
   11a70:	add	sp, sp, #12
   11a74:	pop	{pc}		; (ldr pc, [sp], #4)
   11a78:	ldrdeq	r7, [r2], -r8
   11a7c:	andeq	r3, r2, r0, lsl #1
   11a80:	andeq	r2, r1, ip, asr #32
   11a84:	push	{r4, lr}
   11a88:	mov	r4, r0
   11a8c:	str	r1, [r2]
   11a90:	str	r3, [r2, #4]
   11a94:	cmp	r1, #0
   11a98:	strne	r2, [r1, #4]
   11a9c:	streq	r2, [r0]
   11aa0:	cmp	r3, #0
   11aa4:	strne	r2, [r3]
   11aa8:	streq	r2, [r0, #4]
   11aac:	ldr	r0, [r0, #8]
   11ab0:	cmp	r0, #0
   11ab4:	beq	11ac4 <error@@Base+0x3d8>
   11ab8:	bl	10750 <free@plt>
   11abc:	mov	r3, #0
   11ac0:	str	r3, [r4, #8]
   11ac4:	ldr	r3, [r4, #12]
   11ac8:	add	r3, r3, #1
   11acc:	str	r3, [r4, #12]
   11ad0:	pop	{r4, pc}
   11ad4:	mov	r3, #0
   11ad8:	str	r3, [r0, #4]
   11adc:	str	r3, [r0]
   11ae0:	str	r3, [r0, #8]
   11ae4:	str	r3, [r0, #12]
   11ae8:	bx	lr
   11aec:	push	{r4, lr}
   11af0:	ldr	r3, [r0]
   11af4:	mov	r2, r1
   11af8:	mov	r1, #0
   11afc:	bl	11a84 <error@@Base+0x398>
   11b00:	pop	{r4, pc}
   11b04:	push	{r4, lr}
   11b08:	mov	r3, #0
   11b0c:	mov	r2, r1
   11b10:	ldr	r1, [r0, #4]
   11b14:	bl	11a84 <error@@Base+0x398>
   11b18:	pop	{r4, pc}
   11b1c:	push	{r4, lr}
   11b20:	mov	ip, r2
   11b24:	mov	r3, r2
   11b28:	mov	r2, r1
   11b2c:	ldr	r1, [ip]
   11b30:	bl	11a84 <error@@Base+0x398>
   11b34:	pop	{r4, pc}
   11b38:	push	{r4, lr}
   11b3c:	ldr	r3, [r1, #4]
   11b40:	bl	11a84 <error@@Base+0x398>
   11b44:	pop	{r4, pc}
   11b48:	push	{r4, lr}
   11b4c:	mov	r4, r0
   11b50:	ldr	r3, [r1]
   11b54:	cmp	r3, #0
   11b58:	ldrne	r2, [r1, #4]
   11b5c:	strne	r2, [r3, #4]
   11b60:	ldreq	r3, [r1, #4]
   11b64:	streq	r3, [r0]
   11b68:	ldr	r3, [r1, #4]
   11b6c:	cmp	r3, #0
   11b70:	ldrne	r2, [r1]
   11b74:	strne	r2, [r3]
   11b78:	ldreq	r3, [r1]
   11b7c:	streq	r3, [r0, #4]
   11b80:	mov	r3, #0
   11b84:	str	r3, [r1, #4]
   11b88:	str	r3, [r1]
   11b8c:	ldr	r0, [r0, #8]
   11b90:	cmp	r0, r3
   11b94:	beq	11ba4 <error@@Base+0x4b8>
   11b98:	bl	10750 <free@plt>
   11b9c:	mov	r3, #0
   11ba0:	str	r3, [r4, #8]
   11ba4:	ldr	r3, [r4, #12]
   11ba8:	sub	r3, r3, #1
   11bac:	str	r3, [r4, #12]
   11bb0:	pop	{r4, pc}
   11bb4:	ldr	r3, [r0, #8]
   11bb8:	cmp	r3, #0
   11bbc:	bxne	lr
   11bc0:	ldr	r3, [r0, #12]
   11bc4:	cmp	r3, #0
   11bc8:	bxeq	lr
   11bcc:	push	{r4, lr}
   11bd0:	mov	r4, r0
   11bd4:	mov	r1, #4
   11bd8:	mov	r0, r3
   11bdc:	bl	11728 <error@@Base+0x3c>
   11be0:	str	r0, [r4, #8]
   11be4:	ldr	r3, [r4]
   11be8:	cmp	r3, #0
   11bec:	popeq	{r4, pc}
   11bf0:	mov	r2, #0
   11bf4:	ldr	r1, [r4, #8]
   11bf8:	str	r3, [r1, r2]
   11bfc:	ldr	r3, [r3, #4]
   11c00:	add	r2, r2, #4
   11c04:	cmp	r3, #0
   11c08:	bne	11bf4 <error@@Base+0x508>
   11c0c:	pop	{r4, pc}
   11c10:	push	{r4, r5, r6, lr}
   11c14:	mov	r5, r0
   11c18:	mov	r6, r1
   11c1c:	ldr	r4, [r0]
   11c20:	cmp	r4, #0
   11c24:	popeq	{r4, r5, r6, pc}
   11c28:	mov	r1, r4
   11c2c:	mov	r0, r5
   11c30:	bl	11b48 <error@@Base+0x45c>
   11c34:	mov	r0, r4
   11c38:	blx	r6
   11c3c:	ldr	r4, [r5]
   11c40:	cmp	r4, #0
   11c44:	bne	11c28 <error@@Base+0x53c>
   11c48:	pop	{r4, r5, r6, pc}
   11c4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c50:	mov	sl, r0
   11c54:	mov	r9, r1
   11c58:	ldr	r3, [pc, #300]	; 11d8c <error@@Base+0x6a0>
   11c5c:	ldr	r3, [r3]
   11c60:	ldr	r8, [r3, r0, lsl #2]
   11c64:	cmp	r0, r1
   11c68:	movge	r3, r1
   11c6c:	movge	r4, r0
   11c70:	bge	11d50 <error@@Base+0x664>
   11c74:	mov	r4, r0
   11c78:	mov	r3, r1
   11c7c:	ldr	r6, [pc, #264]	; 11d8c <error@@Base+0x6a0>
   11c80:	b	11d04 <error@@Base+0x618>
   11c84:	mov	r5, r3
   11c88:	cmp	r4, r5
   11c8c:	beq	11d48 <error@@Base+0x65c>
   11c90:	ldr	r2, [r6]
   11c94:	add	r3, r4, #1
   11c98:	lsl	r7, r4, #2
   11c9c:	ldr	r1, [r2, r5, lsl #2]
   11ca0:	str	r1, [r2, r4, lsl #2]
   11ca4:	cmp	r3, r5
   11ca8:	movge	r4, r3
   11cac:	bge	11ce4 <error@@Base+0x5f8>
   11cb0:	add	r7, r7, #4
   11cb4:	mov	r4, r3
   11cb8:	ldr	r2, [r6]
   11cbc:	ldr	r3, [r6, #4]
   11cc0:	ldr	r1, [r2, r7]
   11cc4:	mov	r0, r8
   11cc8:	blx	r3
   11ccc:	cmp	r0, #0
   11cd0:	ble	11ce4 <error@@Base+0x5f8>
   11cd4:	add	r4, r4, #1
   11cd8:	add	r7, r7, #4
   11cdc:	cmp	r4, r5
   11ce0:	blt	11cb8 <error@@Base+0x5cc>
   11ce4:	cmp	r4, r5
   11ce8:	beq	11d4c <error@@Base+0x660>
   11cec:	ldr	r2, [r6]
   11cf0:	sub	r3, r5, #1
   11cf4:	ldr	r1, [r2, r4, lsl #2]
   11cf8:	str	r1, [r2, r5, lsl #2]
   11cfc:	cmp	r3, r4
   11d00:	ble	11d50 <error@@Base+0x664>
   11d04:	cmp	r3, r4
   11d08:	ble	11c84 <error@@Base+0x598>
   11d0c:	lsl	r7, r3, #2
   11d10:	mov	r5, r3
   11d14:	ldr	r2, [r6]
   11d18:	ldr	r3, [r6, #4]
   11d1c:	ldr	r1, [r2, r7]
   11d20:	mov	r0, r8
   11d24:	blx	r3
   11d28:	cmp	r0, #0
   11d2c:	bge	11c88 <error@@Base+0x59c>
   11d30:	sub	r5, r5, #1
   11d34:	sub	r7, r7, #4
   11d38:	cmp	r5, r4
   11d3c:	bne	11d14 <error@@Base+0x628>
   11d40:	mov	r4, r5
   11d44:	b	11ce4 <error@@Base+0x5f8>
   11d48:	mov	r4, r5
   11d4c:	mov	r3, r4
   11d50:	ldr	r2, [pc, #52]	; 11d8c <error@@Base+0x6a0>
   11d54:	ldr	r2, [r2]
   11d58:	str	r8, [r2, r3, lsl #2]
   11d5c:	sub	r1, r3, #1
   11d60:	cmp	sl, r1
   11d64:	blt	11d80 <error@@Base+0x694>
   11d68:	add	r0, r4, #1
   11d6c:	cmp	r9, r0
   11d70:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d74:	mov	r1, r9
   11d78:	bl	11c4c <error@@Base+0x560>
   11d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d80:	mov	r0, sl
   11d84:	bl	11c4c <error@@Base+0x560>
   11d88:	b	11d68 <error@@Base+0x67c>
   11d8c:	strdeq	r3, [r2], -ip
   11d90:	cmp	r0, #1
   11d94:	bxle	lr
   11d98:	push	{r4, lr}
   11d9c:	ldr	r3, [pc, #20]	; 11db8 <error@@Base+0x6cc>
   11da0:	str	r1, [r3]
   11da4:	str	r2, [r3, #4]
   11da8:	sub	r1, r0, #1
   11dac:	mov	r0, #0
   11db0:	bl	11c4c <error@@Base+0x560>
   11db4:	pop	{r4, pc}
   11db8:	strdeq	r3, [r2], -ip
   11dbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11dc0:	mov	r7, r0
   11dc4:	ldr	r6, [pc, #72]	; 11e14 <error@@Base+0x728>
   11dc8:	ldr	r5, [pc, #72]	; 11e18 <error@@Base+0x72c>
   11dcc:	add	r6, pc, r6
   11dd0:	add	r5, pc, r5
   11dd4:	sub	r6, r6, r5
   11dd8:	mov	r8, r1
   11ddc:	mov	r9, r2
   11de0:	bl	10700 <calloc@plt-0x20>
   11de4:	asrs	r6, r6, #2
   11de8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dec:	mov	r4, #0
   11df0:	add	r4, r4, #1
   11df4:	ldr	r3, [r5], #4
   11df8:	mov	r2, r9
   11dfc:	mov	r1, r8
   11e00:	mov	r0, r7
   11e04:	blx	r3
   11e08:	cmp	r6, r4
   11e0c:	bne	11df0 <error@@Base+0x704>
   11e10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e14:	andeq	r1, r1, ip, lsr #2
   11e18:	andeq	r1, r1, r4, lsr #2
   11e1c:	bx	lr

Disassembly of section .fini:

00011e20 <.fini>:
   11e20:	push	{r3, lr}
   11e24:	pop	{r3, pc}
