
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <putchar_unlocked@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	r5, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <fputs_unlocked@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <raise@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <getpwnam@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <strcmp@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <fflush@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <utmpxname@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <free@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <gai_strerror@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <_exit@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <memcpy@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <mbsinit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <time@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <fwrite_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <stpcpy@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <dcgettext@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <strdup@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <setutxent@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <realloc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <textdomain@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <iswprint@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <fwrite@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <lseek64@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <__ctype_get_mb_cur_max@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <__fpending@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <ferror_unlocked@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <mbrtowc@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <error@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <malloc@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <__libc_start_main@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <strftime@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <__freading@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <localtime@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <__ctype_toupper_loc@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <__gmon_start__@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <getopt_long@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <kill@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <__ctype_b_loc@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <exit@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <bcmp@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <strlen@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <strchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__errno_location@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <__sprintf_chk@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <__cxa_atexit@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <memset@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <strncpy@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <__printf_chk@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <fileno@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <__fprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fclose@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <fseeko64@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <endutxent@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <setlocale@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <strrchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <nl_langinfo@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #86016	; 0x15000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <fopen64@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #86016	; 0x15000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <freeaddrinfo@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #86016	; 0x15000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <getaddrinfo@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #86016	; 0x15000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <bindtextdomain@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #86016	; 0x15000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <fread_unlocked@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #86016	; 0x15000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <__xstat64@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #86016	; 0x15000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <strncmp@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <abort@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getutxent@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <putchar_unlocked@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <putchar_unlocked@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <putchar_unlocked@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <putchar_unlocked@plt+0x44>
   11460:	bl	1127c <__libc_start_main@plt>
   11464:	bl	11414 <abort@plt>
   11468:	andeq	r5, r1, r0, lsr sl
   1146c:	andeq	r1, r1, r0, ror #15
   11470:	ldrdeq	r5, [r1], -r0
   11474:	ldr	r3, [pc, #20]	; 11490 <putchar_unlocked@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <putchar_unlocked@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112b8 <__gmon_start__@plt>
   11490:	andeq	r5, r1, ip, ror fp
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <putchar_unlocked@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <putchar_unlocked@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <putchar_unlocked@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r7, r2, r8, ror #2
   114bc:	andeq	r7, r2, r8, ror #2
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <putchar_unlocked@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <putchar_unlocked@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <putchar_unlocked@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r7, r2, r8, ror #2
   114f4:	andeq	r7, r2, r8, ror #2
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <putchar_unlocked@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <putchar_unlocked@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	andeq	r7, r2, r0, lsl #3
   11524:	b	114c4 <putchar_unlocked@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	mov	r4, r0
   11534:	cmp	r0, #0
   11538:	bne	11614 <putchar_unlocked@plt+0x1e8>
   1153c:	movw	r1, #23187	; 0x5a93
   11540:	movt	r1, #1
   11544:	mov	r0, #0
   11548:	mov	r2, #5
   1154c:	bl	111d4 <dcgettext@plt>
   11550:	mov	r1, r0
   11554:	movw	r0, #29172	; 0x71f4
   11558:	movt	r0, #2
   1155c:	ldr	r2, [r0]
   11560:	mov	r0, #1
   11564:	bl	11354 <__printf_chk@plt>
   11568:	movw	r1, #23220	; 0x5ab4
   1156c:	movt	r1, #1
   11570:	mov	r0, #0
   11574:	mov	r2, #5
   11578:	bl	111d4 <dcgettext@plt>
   1157c:	movw	r5, #29052	; 0x717c
   11580:	movt	r5, #2
   11584:	ldr	r1, [r5]
   11588:	bl	1112c <fputs_unlocked@plt>
   1158c:	movw	r1, #23548	; 0x5bfc
   11590:	movt	r1, #1
   11594:	mov	r0, #0
   11598:	mov	r2, #5
   1159c:	bl	111d4 <dcgettext@plt>
   115a0:	ldr	r1, [r5]
   115a4:	bl	1112c <fputs_unlocked@plt>
   115a8:	movw	r1, #23857	; 0x5d31
   115ac:	movt	r1, #1
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	bl	111d4 <dcgettext@plt>
   115bc:	ldr	r1, [r5]
   115c0:	bl	1112c <fputs_unlocked@plt>
   115c4:	movw	r1, #23902	; 0x5d5e
   115c8:	movt	r1, #1
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	bl	111d4 <dcgettext@plt>
   115d8:	ldr	r1, [r5]
   115dc:	bl	1112c <fputs_unlocked@plt>
   115e0:	movw	r1, #23956	; 0x5d94
   115e4:	movt	r1, #1
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	bl	111d4 <dcgettext@plt>
   115f4:	mov	r1, r0
   115f8:	movw	r2, #24041	; 0x5de9
   115fc:	movt	r2, #1
   11600:	mov	r0, #1
   11604:	bl	11354 <__printf_chk@plt>
   11608:	bl	11658 <putchar_unlocked@plt+0x22c>
   1160c:	mov	r0, r4
   11610:	bl	112e8 <exit@plt>
   11614:	movw	r0, #29048	; 0x7178
   11618:	movt	r0, #2
   1161c:	ldr	r5, [r0]
   11620:	movw	r1, #23148	; 0x5a6c
   11624:	movt	r1, #1
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	bl	111d4 <dcgettext@plt>
   11634:	mov	r2, r0
   11638:	movw	r0, #29172	; 0x71f4
   1163c:	movt	r0, #2
   11640:	ldr	r3, [r0]
   11644:	mov	r0, r5
   11648:	mov	r1, #1
   1164c:	bl	1136c <__fprintf_chk@plt>
   11650:	mov	r0, r4
   11654:	bl	112e8 <exit@plt>
   11658:	push	{r4, r5, r6, sl, fp, lr}
   1165c:	add	fp, sp, #16
   11660:	sub	sp, sp, #56	; 0x38
   11664:	movw	r0, #24856	; 0x6118
   11668:	movt	r0, #1
   1166c:	add	r1, r0, #32
   11670:	mov	r2, #48	; 0x30
   11674:	vld1.64	{d16-d17}, [r1]
   11678:	mov	r6, sp
   1167c:	add	r1, r6, #32
   11680:	add	r3, r0, #16
   11684:	vld1.64	{d18-d19}, [r0], r2
   11688:	vld1.64	{d20-d21}, [r3]
   1168c:	vldr	d22, [r0]
   11690:	vst1.64	{d16-d17}, [r1]
   11694:	add	r0, r6, #16
   11698:	vst1.64	{d20-d21}, [r0]
   1169c:	mov	r0, r6
   116a0:	vst1.64	{d18-d19}, [r0], r2
   116a4:	vstr	d22, [r0]
   116a8:	ldr	r1, [sp]
   116ac:	cmp	r1, #0
   116b0:	movw	r4, #24055	; 0x5df7
   116b4:	movt	r4, #1
   116b8:	beq	116e0 <putchar_unlocked@plt+0x2b4>
   116bc:	mov	r6, sp
   116c0:	movw	r5, #24055	; 0x5df7
   116c4:	movt	r5, #1
   116c8:	mov	r0, r5
   116cc:	bl	11150 <strcmp@plt>
   116d0:	cmp	r0, #0
   116d4:	ldrne	r1, [r6, #8]!
   116d8:	cmpne	r1, #0
   116dc:	bne	116c8 <putchar_unlocked@plt+0x29c>
   116e0:	ldr	r5, [r6, #4]
   116e4:	movw	r1, #24317	; 0x5efd
   116e8:	movt	r1, #1
   116ec:	mov	r0, #0
   116f0:	mov	r2, #5
   116f4:	bl	111d4 <dcgettext@plt>
   116f8:	mov	r1, r0
   116fc:	movw	r2, #24095	; 0x5e1f
   11700:	movt	r2, #1
   11704:	movw	r3, #24340	; 0x5f14
   11708:	movt	r3, #1
   1170c:	mov	r0, #1
   11710:	bl	11354 <__printf_chk@plt>
   11714:	cmp	r5, #0
   11718:	moveq	r5, r4
   1171c:	mov	r0, #5
   11720:	mov	r1, #0
   11724:	bl	1139c <setlocale@plt>
   11728:	cmp	r0, #0
   1172c:	beq	1176c <putchar_unlocked@plt+0x340>
   11730:	movw	r1, #24380	; 0x5f3c
   11734:	movt	r1, #1
   11738:	mov	r2, #3
   1173c:	bl	11408 <strncmp@plt>
   11740:	cmp	r0, #0
   11744:	beq	1176c <putchar_unlocked@plt+0x340>
   11748:	movw	r1, #24384	; 0x5f40
   1174c:	movt	r1, #1
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	111d4 <dcgettext@plt>
   1175c:	movw	r1, #29052	; 0x717c
   11760:	movt	r1, #2
   11764:	ldr	r1, [r1]
   11768:	bl	1112c <fputs_unlocked@plt>
   1176c:	movw	r1, #24455	; 0x5f87
   11770:	movt	r1, #1
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	bl	111d4 <dcgettext@plt>
   11780:	mov	r1, r0
   11784:	movw	r2, #24340	; 0x5f14
   11788:	movt	r2, #1
   1178c:	mov	r0, #1
   11790:	mov	r3, r4
   11794:	bl	11354 <__printf_chk@plt>
   11798:	movw	r0, #24250	; 0x5eba
   1179c:	movt	r0, #1
   117a0:	movw	r6, #24532	; 0x5fd4
   117a4:	movt	r6, #1
   117a8:	cmp	r5, r4
   117ac:	moveq	r6, r0
   117b0:	movw	r1, #24482	; 0x5fa2
   117b4:	movt	r1, #1
   117b8:	mov	r0, #0
   117bc:	mov	r2, #5
   117c0:	bl	111d4 <dcgettext@plt>
   117c4:	mov	r1, r0
   117c8:	mov	r0, #1
   117cc:	mov	r2, r5
   117d0:	mov	r3, r6
   117d4:	sub	sp, fp, #16
   117d8:	pop	{r4, r5, r6, sl, fp, lr}
   117dc:	b	11354 <__printf_chk@plt>
   117e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117e4:	add	fp, sp, #28
   117e8:	sub	sp, sp, #20
   117ec:	mov	r4, r1
   117f0:	mov	r5, r0
   117f4:	ldr	r0, [r1]
   117f8:	bl	12b08 <putchar_unlocked@plt+0x16dc>
   117fc:	movw	r1, #24532	; 0x5fd4
   11800:	movt	r1, #1
   11804:	mov	r0, #6
   11808:	bl	1139c <setlocale@plt>
   1180c:	movw	r6, #24099	; 0x5e23
   11810:	movt	r6, #1
   11814:	movw	r1, #24061	; 0x5dfd
   11818:	movt	r1, #1
   1181c:	mov	r0, r6
   11820:	bl	113e4 <bindtextdomain@plt>
   11824:	mov	r0, r6
   11828:	bl	11204 <textdomain@plt>
   1182c:	movw	r0, #10012	; 0x271c
   11830:	movt	r0, #1
   11834:	bl	15a34 <putchar_unlocked@plt+0x4608>
   11838:	mov	r6, #0
   1183c:	movw	r8, #24085	; 0x5e15
   11840:	movt	r8, #1
   11844:	movw	r7, #24808	; 0x60e8
   11848:	movt	r7, #1
   1184c:	mov	sl, #1
   11850:	movw	r9, #29062	; 0x7186
   11854:	movt	r9, #2
   11858:	str	r6, [sp]
   1185c:	mov	r0, r5
   11860:	mov	r1, r4
   11864:	mov	r2, r8
   11868:	mov	r3, r7
   1186c:	bl	112c4 <getopt_long@plt>
   11870:	cmp	r0, #97	; 0x61
   11874:	ble	11980 <putchar_unlocked@plt+0x554>
   11878:	sub	r0, r0, #98	; 0x62
   1187c:	cmp	r0, #21
   11880:	bhi	11a40 <putchar_unlocked@plt+0x614>
   11884:	add	r1, pc, #0
   11888:	ldr	pc, [r1, r0, lsl #2]
   1188c:	andeq	r1, r1, r4, ror #17
   11890:	andeq	r1, r1, r0, asr #20
   11894:	andeq	r1, r1, r0, asr #20
   11898:	andeq	r1, r1, r0, asr #20
   1189c:	andeq	r1, r1, r4, lsl r9
   118a0:	andeq	r1, r1, r0, asr #20
   118a4:	strdeq	r1, [r1], -r4
   118a8:	andeq	r1, r1, ip, ror #18
   118ac:	andeq	r1, r1, r0, asr #20
   118b0:	andeq	r1, r1, r0, asr #20
   118b4:	andeq	r1, r1, r4, asr r9
   118b8:	andeq	r1, r1, r0, asr #20
   118bc:	andeq	r1, r1, r0, asr #20
   118c0:	andeq	r1, r1, r0, asr #20
   118c4:	andeq	r1, r1, r4, lsr #18
   118c8:	andeq	r1, r1, r4, lsr r9
   118cc:	andeq	r1, r1, r0, asr #20
   118d0:	andeq	r1, r1, r4, lsl #18
   118d4:	andeq	r1, r1, r0, asr #20
   118d8:	andeq	r1, r1, r0, asr #20
   118dc:	andeq	r1, r1, r0, asr #20
   118e0:	andeq	r1, r1, r4, ror #18
   118e4:	movw	r0, #29067	; 0x718b
   118e8:	movt	r0, #2
   118ec:	strb	sl, [r0]
   118f0:	b	11858 <putchar_unlocked@plt+0x42c>
   118f4:	movw	r0, #29065	; 0x7189
   118f8:	movt	r0, #2
   118fc:	strb	sl, [r0]
   11900:	b	11858 <putchar_unlocked@plt+0x42c>
   11904:	movw	r0, #29060	; 0x7184
   11908:	movt	r0, #2
   1190c:	strb	r6, [r0]
   11910:	b	11858 <putchar_unlocked@plt+0x42c>
   11914:	movw	r0, #29061	; 0x7185
   11918:	movt	r0, #2
   1191c:	strb	sl, [r0]
   11920:	b	11858 <putchar_unlocked@plt+0x42c>
   11924:	movw	r0, #29066	; 0x718a
   11928:	movt	r0, #2
   1192c:	strb	sl, [r0]
   11930:	b	11858 <putchar_unlocked@plt+0x42c>
   11934:	movw	r0, #29063	; 0x7187
   11938:	movt	r0, #2
   1193c:	strb	sl, [r0]
   11940:	strb	sl, [r9]
   11944:	movw	r0, #29064	; 0x7188
   11948:	movt	r0, #2
   1194c:	strb	sl, [r0]
   11950:	b	11858 <putchar_unlocked@plt+0x42c>
   11954:	movw	r0, #29060	; 0x7184
   11958:	movt	r0, #2
   1195c:	strb	sl, [r0]
   11960:	b	11858 <putchar_unlocked@plt+0x42c>
   11964:	strb	sl, [r9]
   11968:	b	11858 <putchar_unlocked@plt+0x42c>
   1196c:	movw	r0, #29063	; 0x7187
   11970:	movt	r0, #2
   11974:	strb	sl, [r0]
   11978:	strb	sl, [r9]
   1197c:	b	11858 <putchar_unlocked@plt+0x42c>
   11980:	cmn	r0, #1
   11984:	bne	119cc <putchar_unlocked@plt+0x5a0>
   11988:	movw	r0, #29040	; 0x7170
   1198c:	movt	r0, #2
   11990:	ldr	r1, [r0]
   11994:	sub	r0, r5, r1
   11998:	movw	r2, #29060	; 0x7184
   1199c:	movt	r2, #2
   119a0:	ldrb	r2, [r2]
   119a4:	cmp	r2, #1
   119a8:	cmpeq	r0, #0
   119ac:	beq	11a48 <putchar_unlocked@plt+0x61c>
   119b0:	add	r1, r4, r1, lsl #2
   119b4:	cmp	r2, #0
   119b8:	beq	11a74 <putchar_unlocked@plt+0x648>
   119bc:	bl	11b04 <putchar_unlocked@plt+0x6d8>
   119c0:	mov	r0, #0
   119c4:	sub	sp, fp, #28
   119c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119cc:	cmn	r0, #3
   119d0:	bne	11a30 <putchar_unlocked@plt+0x604>
   119d4:	movw	r0, #28960	; 0x7120
   119d8:	movt	r0, #2
   119dc:	ldr	r3, [r0]
   119e0:	movw	r0, #29052	; 0x717c
   119e4:	movt	r0, #2
   119e8:	ldr	r0, [r0]
   119ec:	mov	r1, #0
   119f0:	movw	r2, #24142	; 0x5e4e
   119f4:	movt	r2, #1
   119f8:	movw	r7, #24126	; 0x5e3e
   119fc:	movt	r7, #1
   11a00:	movw	r6, #24109	; 0x5e2d
   11a04:	movt	r6, #1
   11a08:	stm	sp, {r6, r7}
   11a0c:	str	r2, [sp, #8]
   11a10:	str	r1, [sp, #12]
   11a14:	movw	r1, #24055	; 0x5df7
   11a18:	movt	r1, #1
   11a1c:	movw	r2, #24095	; 0x5e1f
   11a20:	movt	r2, #1
   11a24:	bl	14d48 <putchar_unlocked@plt+0x391c>
   11a28:	mov	r0, #0
   11a2c:	bl	112e8 <exit@plt>
   11a30:	cmn	r0, #2
   11a34:	bne	11a40 <putchar_unlocked@plt+0x614>
   11a38:	mov	r0, #0
   11a3c:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a40:	mov	r0, #1
   11a44:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a48:	movw	r1, #24154	; 0x5e5a
   11a4c:	movt	r1, #1
   11a50:	mov	r0, #0
   11a54:	mov	r2, #5
   11a58:	bl	111d4 <dcgettext@plt>
   11a5c:	mov	r2, r0
   11a60:	mov	r0, #0
   11a64:	mov	r1, #0
   11a68:	bl	11264 <error@plt>
   11a6c:	mov	r0, #1
   11a70:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a74:	bl	11a78 <putchar_unlocked@plt+0x64c>
   11a78:	push	{fp, lr}
   11a7c:	mov	fp, sp
   11a80:	sub	sp, sp, #8
   11a84:	mov	r4, r1
   11a88:	mov	r5, r0
   11a8c:	mov	r0, #0
   11a90:	str	r0, [sp]
   11a94:	movw	r0, #24041	; 0x5de9
   11a98:	movt	r0, #1
   11a9c:	add	r1, sp, #4
   11aa0:	mov	r2, sp
   11aa4:	mov	r3, #0
   11aa8:	bl	14778 <putchar_unlocked@plt+0x334c>
   11aac:	cmp	r0, #0
   11ab0:	bne	11ad0 <putchar_unlocked@plt+0x6a4>
   11ab4:	ldr	r1, [sp]
   11ab8:	ldr	r0, [sp, #4]
   11abc:	mov	r2, r5
   11ac0:	mov	r3, r4
   11ac4:	bl	11b30 <putchar_unlocked@plt+0x704>
   11ac8:	mov	r0, #0
   11acc:	bl	112e8 <exit@plt>
   11ad0:	bl	11318 <__errno_location@plt>
   11ad4:	ldr	r4, [r0]
   11ad8:	movw	r2, #24041	; 0x5de9
   11adc:	movt	r2, #1
   11ae0:	mov	r0, #0
   11ae4:	mov	r1, #3
   11ae8:	bl	141bc <putchar_unlocked@plt+0x2d90>
   11aec:	mov	r3, r0
   11af0:	movw	r2, #24959	; 0x617f
   11af4:	movt	r2, #1
   11af8:	mov	r0, #1
   11afc:	mov	r1, r4
   11b00:	bl	11264 <error@plt>
   11b04:	push	{r4, r5, fp, lr}
   11b08:	add	fp, sp, #8
   11b0c:	cmp	r0, #1
   11b10:	poplt	{r4, r5, fp, pc}
   11b14:	mov	r4, r1
   11b18:	mov	r5, r0
   11b1c:	ldr	r0, [r4], #4
   11b20:	bl	122e8 <putchar_unlocked@plt+0xebc>
   11b24:	subs	r5, r5, #1
   11b28:	bne	11b1c <putchar_unlocked@plt+0x6f0>
   11b2c:	pop	{r4, r5, fp, pc}
   11b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b34:	add	fp, sp, #28
   11b38:	sub	sp, sp, #4
   11b3c:	mov	r8, r3
   11b40:	mov	r9, r2
   11b44:	mov	r4, r1
   11b48:	mov	sl, r0
   11b4c:	mov	r0, #2
   11b50:	bl	129dc <putchar_unlocked@plt+0x15b0>
   11b54:	movw	r1, #24546	; 0x5fe2
   11b58:	movt	r1, #1
   11b5c:	movw	r2, #24561	; 0x5ff1
   11b60:	movt	r2, #1
   11b64:	cmp	r0, #0
   11b68:	movne	r2, r1
   11b6c:	movw	r0, #29068	; 0x718c
   11b70:	movt	r0, #2
   11b74:	str	r2, [r0]
   11b78:	mov	r0, #12
   11b7c:	movwne	r0, #16
   11b80:	movw	r1, #29072	; 0x7190
   11b84:	movt	r1, #2
   11b88:	str	r0, [r1]
   11b8c:	movw	r0, #29061	; 0x7185
   11b90:	movt	r0, #2
   11b94:	ldrb	r0, [r0]
   11b98:	cmp	r0, #0
   11b9c:	bleq	11c28 <putchar_unlocked@plt+0x7fc>
   11ba0:	cmp	sl, #0
   11ba4:	bne	11bc0 <putchar_unlocked@plt+0x794>
   11ba8:	b	11c20 <putchar_unlocked@plt+0x7f4>
   11bac:	mov	r0, r4
   11bb0:	bl	11d78 <putchar_unlocked@plt+0x94c>
   11bb4:	add	r4, r4, #384	; 0x180
   11bb8:	cmp	sl, #0
   11bbc:	beq	11c20 <putchar_unlocked@plt+0x7f4>
   11bc0:	sub	sl, sl, #1
   11bc4:	mov	r6, r4
   11bc8:	ldrb	r0, [r6, #44]!	; 0x2c
   11bcc:	cmp	r0, #0
   11bd0:	beq	11bb4 <putchar_unlocked@plt+0x788>
   11bd4:	ldrh	r0, [r4]
   11bd8:	cmp	r0, #7
   11bdc:	bne	11bb4 <putchar_unlocked@plt+0x788>
   11be0:	cmp	r9, #0
   11be4:	beq	11bac <putchar_unlocked@plt+0x780>
   11be8:	cmp	r9, #1
   11bec:	mov	r5, r8
   11bf0:	mov	r7, r9
   11bf4:	blt	11bb4 <putchar_unlocked@plt+0x788>
   11bf8:	ldr	r1, [r5]
   11bfc:	mov	r0, r6
   11c00:	mov	r2, #32
   11c04:	bl	11408 <strncmp@plt>
   11c08:	cmp	r0, #0
   11c0c:	beq	11bac <putchar_unlocked@plt+0x780>
   11c10:	add	r5, r5, #4
   11c14:	subs	r7, r7, #1
   11c18:	bne	11bf8 <putchar_unlocked@plt+0x7cc>
   11c1c:	b	11bb4 <putchar_unlocked@plt+0x788>
   11c20:	sub	sp, fp, #28
   11c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c28:	push	{r4, sl, fp, lr}
   11c2c:	add	fp, sp, #8
   11c30:	movw	r1, #24578	; 0x6002
   11c34:	movt	r1, #1
   11c38:	mov	r0, #0
   11c3c:	mov	r2, #5
   11c40:	bl	111d4 <dcgettext@plt>
   11c44:	mov	r2, r0
   11c48:	movw	r1, #24573	; 0x5ffd
   11c4c:	movt	r1, #1
   11c50:	mov	r0, #1
   11c54:	bl	11354 <__printf_chk@plt>
   11c58:	movw	r0, #29062	; 0x7186
   11c5c:	movt	r0, #2
   11c60:	ldrb	r0, [r0]
   11c64:	cmp	r0, #0
   11c68:	bne	11c94 <putchar_unlocked@plt+0x868>
   11c6c:	movw	r1, #24591	; 0x600f
   11c70:	movt	r1, #1
   11c74:	mov	r0, #0
   11c78:	mov	r2, #5
   11c7c:	bl	111d4 <dcgettext@plt>
   11c80:	mov	r2, r0
   11c84:	movw	r1, #24584	; 0x6008
   11c88:	movt	r1, #1
   11c8c:	mov	r0, #1
   11c90:	bl	11354 <__printf_chk@plt>
   11c94:	movw	r1, #24602	; 0x601a
   11c98:	movt	r1, #1
   11c9c:	mov	r0, #0
   11ca0:	mov	r2, #5
   11ca4:	bl	111d4 <dcgettext@plt>
   11ca8:	mov	r2, r0
   11cac:	movw	r1, #24596	; 0x6014
   11cb0:	movt	r1, #1
   11cb4:	mov	r0, #1
   11cb8:	bl	11354 <__printf_chk@plt>
   11cbc:	movw	r0, #29064	; 0x7188
   11cc0:	movt	r0, #2
   11cc4:	ldrb	r0, [r0]
   11cc8:	cmp	r0, #0
   11ccc:	bne	11cf8 <putchar_unlocked@plt+0x8cc>
   11cd0:	movw	r1, #24613	; 0x6025
   11cd4:	movt	r1, #1
   11cd8:	mov	r0, #0
   11cdc:	mov	r2, #5
   11ce0:	bl	111d4 <dcgettext@plt>
   11ce4:	mov	r2, r0
   11ce8:	movw	r1, #24607	; 0x601f
   11cec:	movt	r1, #1
   11cf0:	mov	r0, #1
   11cf4:	bl	11354 <__printf_chk@plt>
   11cf8:	movw	r0, #29072	; 0x7190
   11cfc:	movt	r0, #2
   11d00:	ldr	r4, [r0]
   11d04:	movw	r1, #24624	; 0x6030
   11d08:	movt	r1, #1
   11d0c:	mov	r0, #0
   11d10:	mov	r2, #5
   11d14:	bl	111d4 <dcgettext@plt>
   11d18:	mov	r3, r0
   11d1c:	movw	r1, #24618	; 0x602a
   11d20:	movt	r1, #1
   11d24:	mov	r0, #1
   11d28:	mov	r2, r4
   11d2c:	bl	11354 <__printf_chk@plt>
   11d30:	movw	r0, #29063	; 0x7187
   11d34:	movt	r0, #2
   11d38:	ldrb	r0, [r0]
   11d3c:	cmp	r0, #0
   11d40:	bne	11d6c <putchar_unlocked@plt+0x940>
   11d44:	movw	r1, #24629	; 0x6035
   11d48:	movt	r1, #1
   11d4c:	mov	r0, #0
   11d50:	mov	r2, #5
   11d54:	bl	111d4 <dcgettext@plt>
   11d58:	mov	r2, r0
   11d5c:	movw	r1, #24958	; 0x617e
   11d60:	movt	r1, #1
   11d64:	mov	r0, #1
   11d68:	bl	11354 <__printf_chk@plt>
   11d6c:	mov	r0, #10
   11d70:	pop	{r4, sl, fp, lr}
   11d74:	b	1142c <putchar_unlocked@plt>
   11d78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d7c:	add	fp, sp, #24
   11d80:	sub	sp, sp, #416	; 0x1a0
   11d84:	mov	r9, r0
   11d88:	mov	r5, r0
   11d8c:	ldrb	r0, [r5, #8]!
   11d90:	cmp	r0, #47	; 0x2f
   11d94:	bne	11da0 <putchar_unlocked@plt+0x974>
   11d98:	sub	r0, fp, #176	; 0xb0
   11d9c:	b	11dbc <putchar_unlocked@plt+0x990>
   11da0:	mov	r0, #47	; 0x2f
   11da4:	strh	r0, [fp, #-172]	; 0xffffff54
   11da8:	movw	r0, #25647	; 0x642f
   11dac:	movt	r0, #30309	; 0x7665
   11db0:	str	r0, [fp, #-176]	; 0xffffff50
   11db4:	sub	r0, fp, #176	; 0xb0
   11db8:	orr	r0, r0, #5
   11dbc:	mov	r6, #32
   11dc0:	mov	r1, r5
   11dc4:	mov	r2, #32
   11dc8:	bl	12024 <putchar_unlocked@plt+0xbf8>
   11dcc:	sub	r0, fp, #176	; 0xb0
   11dd0:	sub	r1, fp, #136	; 0x88
   11dd4:	bl	15a4c <putchar_unlocked@plt+0x4620>
   11dd8:	cmp	r0, #0
   11ddc:	beq	11dec <putchar_unlocked@plt+0x9c0>
   11de0:	mov	r8, #0
   11de4:	mov	r6, #63	; 0x3f
   11de8:	b	11dfc <putchar_unlocked@plt+0x9d0>
   11dec:	ldrb	r0, [fp, #-120]	; 0xffffff88
   11df0:	tst	r0, #16
   11df4:	movweq	r6, #42	; 0x2a
   11df8:	ldr	r8, [fp, #-64]	; 0xffffffc0
   11dfc:	add	r7, r9, #44	; 0x2c
   11e00:	movw	r1, #24672	; 0x6060
   11e04:	movt	r1, #1
   11e08:	mov	r0, #1
   11e0c:	mov	r2, #32
   11e10:	mov	r3, r7
   11e14:	bl	11354 <__printf_chk@plt>
   11e18:	movw	r0, #29062	; 0x7186
   11e1c:	movt	r0, #2
   11e20:	ldrb	r0, [r0]
   11e24:	cmp	r0, #0
   11e28:	bne	11ec4 <putchar_unlocked@plt+0xa98>
   11e2c:	add	r4, sp, #7
   11e30:	mov	r0, r4
   11e34:	mov	r1, r7
   11e38:	mov	r2, #32
   11e3c:	bl	12024 <putchar_unlocked@plt+0xbf8>
   11e40:	mov	r0, r4
   11e44:	bl	11144 <getpwnam@plt>
   11e48:	cmp	r0, #0
   11e4c:	beq	11e9c <putchar_unlocked@plt+0xa70>
   11e50:	mov	r7, r0
   11e54:	ldr	r0, [r0, #16]
   11e58:	mov	r1, #44	; 0x2c
   11e5c:	bl	1130c <strchr@plt>
   11e60:	cmp	r0, #0
   11e64:	movne	r1, #0
   11e68:	strbne	r1, [r0]
   11e6c:	ldr	r1, [r7]
   11e70:	ldr	r0, [r7, #16]
   11e74:	bl	12058 <putchar_unlocked@plt+0xc2c>
   11e78:	mov	r4, r0
   11e7c:	movw	r1, #24659	; 0x6053
   11e80:	movt	r1, #1
   11e84:	mov	r0, #1
   11e88:	mov	r2, r4
   11e8c:	bl	11354 <__printf_chk@plt>
   11e90:	mov	r0, r4
   11e94:	bl	1290c <putchar_unlocked@plt+0x14e0>
   11e98:	b	11ec4 <putchar_unlocked@plt+0xa98>
   11e9c:	movw	r1, #24647	; 0x6047
   11ea0:	movt	r1, #1
   11ea4:	mov	r0, #0
   11ea8:	mov	r2, #5
   11eac:	bl	111d4 <dcgettext@plt>
   11eb0:	mov	r2, r0
   11eb4:	movw	r1, #24641	; 0x6041
   11eb8:	movt	r1, #1
   11ebc:	mov	r0, #1
   11ec0:	bl	11354 <__printf_chk@plt>
   11ec4:	str	r5, [sp]
   11ec8:	movw	r1, #24669	; 0x605d
   11ecc:	movt	r1, #1
   11ed0:	mov	r0, #1
   11ed4:	mov	r2, r6
   11ed8:	mov	r3, #32
   11edc:	bl	11354 <__printf_chk@plt>
   11ee0:	movw	r0, #29064	; 0x7188
   11ee4:	movt	r0, #2
   11ee8:	ldrb	r0, [r0]
   11eec:	cmp	r0, #0
   11ef0:	bne	11f30 <putchar_unlocked@plt+0xb04>
   11ef4:	cmp	r8, #0
   11ef8:	beq	11f08 <putchar_unlocked@plt+0xadc>
   11efc:	mov	r0, r8
   11f00:	bl	1216c <putchar_unlocked@plt+0xd40>
   11f04:	b	11f1c <putchar_unlocked@plt+0xaf0>
   11f08:	movw	r1, #24679	; 0x6067
   11f0c:	movt	r1, #1
   11f10:	mov	r0, #0
   11f14:	mov	r2, #5
   11f18:	bl	111d4 <dcgettext@plt>
   11f1c:	mov	r2, r0
   11f20:	movw	r1, #24607	; 0x601f
   11f24:	movt	r1, #1
   11f28:	mov	r0, #1
   11f2c:	bl	11354 <__printf_chk@plt>
   11f30:	mov	r0, r9
   11f34:	bl	12250 <putchar_unlocked@plt+0xe24>
   11f38:	mov	r2, r0
   11f3c:	movw	r1, #24958	; 0x617e
   11f40:	movt	r1, #1
   11f44:	mov	r0, #1
   11f48:	bl	11354 <__printf_chk@plt>
   11f4c:	movw	r0, #29063	; 0x7187
   11f50:	movt	r0, #2
   11f54:	ldrb	r0, [r0]
   11f58:	cmp	r0, #0
   11f5c:	bne	11ff4 <putchar_unlocked@plt+0xbc8>
   11f60:	ldrb	r0, [r9, #76]!	; 0x4c
   11f64:	cmp	r0, #0
   11f68:	beq	11ff4 <putchar_unlocked@plt+0xbc8>
   11f6c:	add	r5, sp, #7
   11f70:	mov	r0, r5
   11f74:	mov	r1, r9
   11f78:	mov	r2, #256	; 0x100
   11f7c:	bl	12024 <putchar_unlocked@plt+0xbf8>
   11f80:	mov	r0, r5
   11f84:	mov	r1, #58	; 0x3a
   11f88:	bl	1130c <strchr@plt>
   11f8c:	mov	r4, #0
   11f90:	cmp	r0, #0
   11f94:	mov	r6, #0
   11f98:	movne	r1, #0
   11f9c:	strbne	r1, [r0], #1
   11fa0:	movne	r6, r0
   11fa4:	ldrb	r0, [sp, #7]
   11fa8:	cmp	r0, #0
   11fac:	beq	11fbc <putchar_unlocked@plt+0xb90>
   11fb0:	add	r0, sp, #7
   11fb4:	bl	1264c <putchar_unlocked@plt+0x1220>
   11fb8:	mov	r4, r0
   11fbc:	cmp	r4, #0
   11fc0:	movne	r5, r4
   11fc4:	cmp	r6, #0
   11fc8:	beq	12004 <putchar_unlocked@plt+0xbd8>
   11fcc:	movw	r1, #24685	; 0x606d
   11fd0:	movt	r1, #1
   11fd4:	mov	r0, #1
   11fd8:	mov	r2, r5
   11fdc:	mov	r3, r6
   11fe0:	bl	11354 <__printf_chk@plt>
   11fe4:	cmp	r4, #0
   11fe8:	beq	11ff4 <putchar_unlocked@plt+0xbc8>
   11fec:	mov	r0, r5
   11ff0:	bl	1290c <putchar_unlocked@plt+0x14e0>
   11ff4:	mov	r0, #10
   11ff8:	bl	1142c <putchar_unlocked@plt>
   11ffc:	sub	sp, fp, #24
   12000:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12004:	movw	r1, #24958	; 0x617e
   12008:	movt	r1, #1
   1200c:	mov	r0, #1
   12010:	mov	r2, r5
   12014:	bl	11354 <__printf_chk@plt>
   12018:	cmp	r4, #0
   1201c:	bne	11fec <putchar_unlocked@plt+0xbc0>
   12020:	b	11ff4 <putchar_unlocked@plt+0xbc8>
   12024:	cmp	r2, #1
   12028:	blt	1204c <putchar_unlocked@plt+0xc20>
   1202c:	add	r2, r1, r2
   12030:	ldrb	r3, [r1]
   12034:	cmp	r3, #0
   12038:	beq	1204c <putchar_unlocked@plt+0xc20>
   1203c:	strb	r3, [r0], #1
   12040:	add	r1, r1, #1
   12044:	cmp	r1, r2
   12048:	bcc	12030 <putchar_unlocked@plt+0xc04>
   1204c:	mov	r1, #0
   12050:	strb	r1, [r0]
   12054:	bx	lr
   12058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1205c:	add	fp, sp, #28
   12060:	sub	sp, sp, #4
   12064:	mov	sl, r1
   12068:	mov	r5, r0
   1206c:	bl	11300 <strlen@plt>
   12070:	add	r6, r0, #1
   12074:	mov	r0, r5
   12078:	bl	122b4 <putchar_unlocked@plt+0xe88>
   1207c:	cmp	r0, #0
   12080:	beq	120b4 <putchar_unlocked@plt+0xc88>
   12084:	mov	r7, r0
   12088:	mov	r0, sl
   1208c:	bl	11300 <strlen@plt>
   12090:	subs	r1, r7, #1
   12094:	beq	120a8 <putchar_unlocked@plt+0xc7c>
   12098:	mvn	r2, #0
   1209c:	udiv	r2, r2, r1
   120a0:	cmp	r2, r0
   120a4:	bcc	12168 <putchar_unlocked@plt+0xd3c>
   120a8:	mul	r0, r0, r1
   120ac:	adds	r6, r6, r0
   120b0:	bcs	12168 <putchar_unlocked@plt+0xd3c>
   120b4:	mov	r0, r6
   120b8:	bl	14e50 <putchar_unlocked@plt+0x3a24>
   120bc:	mov	r8, r0
   120c0:	add	r9, sl, #1
   120c4:	mov	r6, r0
   120c8:	b	120d0 <putchar_unlocked@plt+0xca4>
   120cc:	add	r5, r5, #1
   120d0:	ldrb	r0, [r5]
   120d4:	cmp	r0, #38	; 0x26
   120d8:	beq	120f0 <putchar_unlocked@plt+0xcc4>
   120dc:	cmp	r0, #0
   120e0:	beq	12154 <putchar_unlocked@plt+0xd28>
   120e4:	strb	r0, [r6], #1
   120e8:	add	r5, r5, #1
   120ec:	b	120d0 <putchar_unlocked@plt+0xca4>
   120f0:	bl	112dc <__ctype_b_loc@plt>
   120f4:	ldr	r4, [r0]
   120f8:	ldrb	r7, [sl]
   120fc:	mov	r0, r7
   12100:	bl	122d4 <putchar_unlocked@plt+0xea8>
   12104:	add	r0, r4, r7, lsl #1
   12108:	ldrb	r0, [r0, #1]
   1210c:	tst	r0, #2
   12110:	bne	1211c <putchar_unlocked@plt+0xcf0>
   12114:	mov	r1, sl
   12118:	b	12130 <putchar_unlocked@plt+0xd04>
   1211c:	bl	112ac <__ctype_toupper_loc@plt>
   12120:	ldr	r0, [r0]
   12124:	ldr	r0, [r0, r7, lsl #2]
   12128:	strb	r0, [r6], #1
   1212c:	mov	r1, r9
   12130:	ldrb	r0, [r1]
   12134:	cmp	r0, #0
   12138:	beq	120cc <putchar_unlocked@plt+0xca0>
   1213c:	add	r1, r1, #1
   12140:	strb	r0, [r6], #1
   12144:	ldrb	r0, [r1], #1
   12148:	cmp	r0, #0
   1214c:	bne	12140 <putchar_unlocked@plt+0xd14>
   12150:	b	120cc <putchar_unlocked@plt+0xca0>
   12154:	mov	r0, #0
   12158:	strb	r0, [r6]
   1215c:	mov	r0, r8
   12160:	sub	sp, fp, #28
   12164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12168:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   1216c:	push	{r4, r5, fp, lr}
   12170:	add	fp, sp, #8
   12174:	sub	sp, sp, #8
   12178:	mov	r4, r0
   1217c:	movw	r5, #29076	; 0x7194
   12180:	movt	r5, #2
   12184:	ldr	r0, [r5]
   12188:	cmp	r0, #0
   1218c:	bne	1219c <putchar_unlocked@plt+0xd70>
   12190:	movw	r0, #29076	; 0x7194
   12194:	movt	r0, #2
   12198:	bl	111b0 <time@plt>
   1219c:	ldr	r0, [r5]
   121a0:	sub	r0, r0, r4
   121a4:	cmp	r0, #60	; 0x3c
   121a8:	bge	121b8 <putchar_unlocked@plt+0xd8c>
   121ac:	movw	r4, #24692	; 0x6074
   121b0:	movt	r4, #1
   121b4:	b	12244 <putchar_unlocked@plt+0xe18>
   121b8:	movw	r1, #20863	; 0x517f
   121bc:	movt	r1, #1
   121c0:	cmp	r0, r1
   121c4:	bgt	12210 <putchar_unlocked@plt+0xde4>
   121c8:	movw	r1, #46021	; 0xb3c5
   121cc:	movt	r1, #37282	; 0x91a2
   121d0:	umull	r1, r2, r0, r1
   121d4:	lsr	r1, r2, #11
   121d8:	mov	r2, #3600	; 0xe10
   121dc:	mls	r0, r1, r2, r0
   121e0:	uxth	r0, r0
   121e4:	movw	r2, #34953	; 0x8889
   121e8:	movt	r2, #34952	; 0x8888
   121ec:	umull	r0, r2, r0, r2
   121f0:	lsr	r0, r2, #5
   121f4:	str	r1, [sp]
   121f8:	str	r0, [sp, #4]
   121fc:	movw	r4, #29080	; 0x7198
   12200:	movt	r4, #2
   12204:	movw	r3, #24698	; 0x607a
   12208:	movt	r3, #1
   1220c:	b	12234 <putchar_unlocked@plt+0xe08>
   12210:	movw	r1, #17671	; 0x4507
   12214:	movt	r1, #49710	; 0xc22e
   12218:	umull	r0, r1, r0, r1
   1221c:	lsr	r0, r1, #16
   12220:	str	r0, [sp]
   12224:	movw	r4, #29080	; 0x7198
   12228:	movt	r4, #2
   1222c:	movw	r3, #24708	; 0x6084
   12230:	movt	r3, #1
   12234:	mov	r0, r4
   12238:	mov	r1, #1
   1223c:	mov	r2, #13
   12240:	bl	11324 <__sprintf_chk@plt>
   12244:	mov	r0, r4
   12248:	sub	sp, fp, #8
   1224c:	pop	{r4, r5, fp, pc}
   12250:	push	{r4, sl, fp, lr}
   12254:	add	fp, sp, #8
   12258:	sub	sp, sp, #8
   1225c:	ldr	r0, [r0, #340]	; 0x154
   12260:	str	r0, [sp, #4]
   12264:	add	r0, sp, #4
   12268:	bl	112a0 <localtime@plt>
   1226c:	cmp	r0, #0
   12270:	beq	1229c <putchar_unlocked@plt+0xe70>
   12274:	mov	r3, r0
   12278:	movw	r0, #29068	; 0x718c
   1227c:	movt	r0, #2
   12280:	ldr	r2, [r0]
   12284:	movw	r4, #29093	; 0x71a5
   12288:	movt	r4, #2
   1228c:	mov	r0, r4
   12290:	mov	r1, #33	; 0x21
   12294:	bl	11288 <strftime@plt>
   12298:	b	122a8 <putchar_unlocked@plt+0xe7c>
   1229c:	ldr	r0, [sp, #4]
   122a0:	bl	122d8 <putchar_unlocked@plt+0xeac>
   122a4:	mov	r4, r0
   122a8:	mov	r0, r4
   122ac:	sub	sp, fp, #8
   122b0:	pop	{r4, sl, fp, pc}
   122b4:	mov	r1, r0
   122b8:	mov	r0, #0
   122bc:	ldrb	r2, [r1], #1
   122c0:	cmp	r2, #38	; 0x26
   122c4:	addeq	r0, r0, #1
   122c8:	cmp	r2, #0
   122cc:	bne	122bc <putchar_unlocked@plt+0xe90>
   122d0:	bx	lr
   122d4:	bx	lr
   122d8:	asr	r1, r0, #31
   122dc:	movw	r2, #29093	; 0x71a5
   122e0:	movt	r2, #2
   122e4:	b	12a48 <putchar_unlocked@plt+0x161c>
   122e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122ec:	add	fp, sp, #24
   122f0:	sub	sp, sp, #1024	; 0x400
   122f4:	mov	r5, r0
   122f8:	bl	11144 <getpwnam@plt>
   122fc:	mov	r4, r0
   12300:	movw	r1, #24713	; 0x6089
   12304:	movt	r1, #1
   12308:	mov	r0, #0
   1230c:	mov	r2, #5
   12310:	bl	111d4 <dcgettext@plt>
   12314:	mov	r1, r0
   12318:	mov	r0, #1
   1231c:	bl	11354 <__printf_chk@plt>
   12320:	movw	r1, #24726	; 0x6096
   12324:	movt	r1, #1
   12328:	mov	r0, #1
   1232c:	mov	r2, r5
   12330:	bl	11354 <__printf_chk@plt>
   12334:	movw	r1, #24732	; 0x609c
   12338:	movt	r1, #1
   1233c:	mov	r0, #0
   12340:	mov	r2, #5
   12344:	bl	111d4 <dcgettext@plt>
   12348:	mov	r1, r0
   1234c:	mov	r0, #1
   12350:	bl	11354 <__printf_chk@plt>
   12354:	cmp	r4, #0
   12358:	beq	1261c <putchar_unlocked@plt+0x11f0>
   1235c:	ldr	r0, [r4, #16]
   12360:	mov	r1, #44	; 0x2c
   12364:	bl	1130c <strchr@plt>
   12368:	cmp	r0, #0
   1236c:	movne	r1, #0
   12370:	strbne	r1, [r0]
   12374:	ldr	r1, [r4]
   12378:	ldr	r0, [r4, #16]
   1237c:	bl	12058 <putchar_unlocked@plt+0xc2c>
   12380:	mov	r5, r0
   12384:	movw	r1, #24958	; 0x617e
   12388:	movt	r1, #1
   1238c:	mov	r0, #1
   12390:	mov	r2, r5
   12394:	bl	11354 <__printf_chk@plt>
   12398:	mov	r0, r5
   1239c:	bl	1290c <putchar_unlocked@plt+0x14e0>
   123a0:	mov	r0, #10
   123a4:	bl	1142c <putchar_unlocked@plt>
   123a8:	movw	r0, #29067	; 0x718b
   123ac:	movt	r0, #2
   123b0:	ldrb	r0, [r0]
   123b4:	cmp	r0, #0
   123b8:	bne	1242c <putchar_unlocked@plt+0x1000>
   123bc:	movw	r1, #24752	; 0x60b0
   123c0:	movt	r1, #1
   123c4:	mov	r0, #0
   123c8:	mov	r2, #5
   123cc:	bl	111d4 <dcgettext@plt>
   123d0:	mov	r1, r0
   123d4:	mov	r0, #1
   123d8:	bl	11354 <__printf_chk@plt>
   123dc:	ldr	r2, [r4, #20]
   123e0:	movw	r1, #24764	; 0x60bc
   123e4:	movt	r1, #1
   123e8:	mov	r0, #1
   123ec:	bl	11354 <__printf_chk@plt>
   123f0:	movw	r1, #24770	; 0x60c2
   123f4:	movt	r1, #1
   123f8:	mov	r0, #0
   123fc:	mov	r2, #5
   12400:	bl	111d4 <dcgettext@plt>
   12404:	mov	r1, r0
   12408:	mov	r0, #1
   1240c:	bl	11354 <__printf_chk@plt>
   12410:	ldr	r2, [r4, #24]
   12414:	movw	r1, #24958	; 0x617e
   12418:	movt	r1, #1
   1241c:	mov	r0, #1
   12420:	bl	11354 <__printf_chk@plt>
   12424:	mov	r0, #10
   12428:	bl	1142c <putchar_unlocked@plt>
   1242c:	movw	r0, #29065	; 0x7189
   12430:	movt	r0, #2
   12434:	ldrb	r0, [r0]
   12438:	cmp	r0, #0
   1243c:	bne	1251c <putchar_unlocked@plt+0x10f0>
   12440:	ldr	r0, [r4, #20]
   12444:	bl	11300 <strlen@plt>
   12448:	add	r0, r0, #10
   1244c:	bl	14e50 <putchar_unlocked@plt+0x3a24>
   12450:	mov	r8, r0
   12454:	ldr	r1, [r4, #20]
   12458:	bl	111c8 <stpcpy@plt>
   1245c:	movw	r1, #24912	; 0x6150
   12460:	movt	r1, #1
   12464:	vldr	d16, [r1]
   12468:	mov	r1, #116	; 0x74
   1246c:	strh	r1, [r0, #8]
   12470:	vst1.8	{d16}, [r0]
   12474:	movw	r1, #24953	; 0x6179
   12478:	movt	r1, #1
   1247c:	mov	r0, r8
   12480:	bl	113c0 <fopen64@plt>
   12484:	cmp	r0, #0
   12488:	beq	12514 <putchar_unlocked@plt+0x10e8>
   1248c:	mov	r6, r0
   12490:	movw	r1, #24778	; 0x60ca
   12494:	movt	r1, #1
   12498:	mov	r0, #0
   1249c:	mov	r2, #5
   124a0:	bl	111d4 <dcgettext@plt>
   124a4:	mov	r1, r0
   124a8:	mov	r0, #1
   124ac:	bl	11354 <__printf_chk@plt>
   124b0:	mov	r0, sp
   124b4:	mov	r1, #1
   124b8:	mov	r2, #1024	; 0x400
   124bc:	mov	r3, r6
   124c0:	bl	113f0 <fread_unlocked@plt>
   124c4:	cmp	r0, #0
   124c8:	beq	1250c <putchar_unlocked@plt+0x10e0>
   124cc:	mov	r2, r0
   124d0:	movw	r5, #29052	; 0x717c
   124d4:	movt	r5, #2
   124d8:	mov	r7, sp
   124dc:	ldr	r3, [r5]
   124e0:	mov	r0, r7
   124e4:	mov	r1, #1
   124e8:	bl	111bc <fwrite_unlocked@plt>
   124ec:	mov	r0, r7
   124f0:	mov	r1, #1
   124f4:	mov	r2, #1024	; 0x400
   124f8:	mov	r3, r6
   124fc:	bl	113f0 <fread_unlocked@plt>
   12500:	mov	r2, r0
   12504:	cmp	r0, #0
   12508:	bne	124dc <putchar_unlocked@plt+0x10b0>
   1250c:	mov	r0, r6
   12510:	bl	12804 <putchar_unlocked@plt+0x13d8>
   12514:	mov	r0, r8
   12518:	bl	1290c <putchar_unlocked@plt+0x14e0>
   1251c:	movw	r0, #29066	; 0x718a
   12520:	movt	r0, #2
   12524:	ldrb	r0, [r0]
   12528:	cmp	r0, #0
   1252c:	bne	1260c <putchar_unlocked@plt+0x11e0>
   12530:	ldr	r0, [r4, #20]
   12534:	bl	11300 <strlen@plt>
   12538:	add	r0, r0, #7
   1253c:	bl	14e50 <putchar_unlocked@plt+0x3a24>
   12540:	mov	r5, r0
   12544:	ldr	r1, [r4, #20]
   12548:	bl	111c8 <stpcpy@plt>
   1254c:	movw	r1, #11823	; 0x2e2f
   12550:	movt	r1, #27760	; 0x6c70
   12554:	str	r1, [r0]
   12558:	movw	r1, #24940	; 0x616c
   1255c:	movt	r1, #110	; 0x6e
   12560:	str	r1, [r0, #3]
   12564:	movw	r1, #24953	; 0x6179
   12568:	movt	r1, #1
   1256c:	mov	r0, r5
   12570:	bl	113c0 <fopen64@plt>
   12574:	cmp	r0, #0
   12578:	beq	12604 <putchar_unlocked@plt+0x11d8>
   1257c:	mov	r4, r0
   12580:	movw	r1, #24795	; 0x60db
   12584:	movt	r1, #1
   12588:	mov	r0, #0
   1258c:	mov	r2, #5
   12590:	bl	111d4 <dcgettext@plt>
   12594:	mov	r1, r0
   12598:	mov	r0, #1
   1259c:	bl	11354 <__printf_chk@plt>
   125a0:	mov	r0, sp
   125a4:	mov	r1, #1
   125a8:	mov	r2, #1024	; 0x400
   125ac:	mov	r3, r4
   125b0:	bl	113f0 <fread_unlocked@plt>
   125b4:	cmp	r0, #0
   125b8:	beq	125fc <putchar_unlocked@plt+0x11d0>
   125bc:	mov	r2, r0
   125c0:	movw	r7, #29052	; 0x717c
   125c4:	movt	r7, #2
   125c8:	mov	r6, sp
   125cc:	ldr	r3, [r7]
   125d0:	mov	r0, r6
   125d4:	mov	r1, #1
   125d8:	bl	111bc <fwrite_unlocked@plt>
   125dc:	mov	r0, r6
   125e0:	mov	r1, #1
   125e4:	mov	r2, #1024	; 0x400
   125e8:	mov	r3, r4
   125ec:	bl	113f0 <fread_unlocked@plt>
   125f0:	mov	r2, r0
   125f4:	cmp	r0, #0
   125f8:	bne	125cc <putchar_unlocked@plt+0x11a0>
   125fc:	mov	r0, r4
   12600:	bl	12804 <putchar_unlocked@plt+0x13d8>
   12604:	mov	r0, r5
   12608:	bl	1290c <putchar_unlocked@plt+0x14e0>
   1260c:	mov	r0, #10
   12610:	sub	sp, fp, #24
   12614:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12618:	b	1142c <putchar_unlocked@plt>
   1261c:	movw	r1, #24747	; 0x60ab
   12620:	movt	r1, #1
   12624:	mov	r0, #0
   12628:	mov	r2, #5
   1262c:	bl	111d4 <dcgettext@plt>
   12630:	mov	r2, r0
   12634:	movw	r1, #24958	; 0x617e
   12638:	movt	r1, #1
   1263c:	mov	r0, #1
   12640:	sub	sp, fp, #24
   12644:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12648:	b	11354 <__printf_chk@plt>
   1264c:	movw	r1, #29128	; 0x71c8
   12650:	movt	r1, #2
   12654:	b	12658 <putchar_unlocked@plt+0x122c>
   12658:	push	{r4, r5, r6, sl, fp, lr}
   1265c:	add	fp, sp, #16
   12660:	sub	sp, sp, #8
   12664:	mov	r5, r1
   12668:	mov	r6, r0
   1266c:	movw	r2, #29132	; 0x71cc
   12670:	movt	r2, #2
   12674:	mov	r0, #2
   12678:	str	r0, [r2]
   1267c:	mov	r4, #0
   12680:	str	r4, [sp, #4]
   12684:	add	r3, sp, #4
   12688:	mov	r0, r6
   1268c:	mov	r1, #0
   12690:	bl	113d8 <getaddrinfo@plt>
   12694:	cmp	r0, #0
   12698:	beq	126a8 <putchar_unlocked@plt+0x127c>
   1269c:	cmp	r5, #0
   126a0:	strne	r0, [r5]
   126a4:	b	126e0 <putchar_unlocked@plt+0x12b4>
   126a8:	ldr	r0, [sp, #4]
   126ac:	ldr	r0, [r0, #24]
   126b0:	cmp	r0, #0
   126b4:	movne	r6, r0
   126b8:	mov	r0, r6
   126bc:	bl	111e0 <strdup@plt>
   126c0:	mov	r4, r0
   126c4:	cmp	r5, #0
   126c8:	beq	126d8 <putchar_unlocked@plt+0x12ac>
   126cc:	cmp	r4, #0
   126d0:	mvneq	r0, #9
   126d4:	streq	r0, [r5]
   126d8:	ldr	r0, [sp, #4]
   126dc:	bl	113cc <freeaddrinfo@plt>
   126e0:	mov	r0, r4
   126e4:	sub	sp, fp, #16
   126e8:	pop	{r4, r5, r6, sl, fp, pc}
   126ec:	movw	r0, #29128	; 0x71c8
   126f0:	movt	r0, #2
   126f4:	ldr	r0, [r0]
   126f8:	b	11180 <gai_strerror@plt>
   126fc:	movw	r1, #29164	; 0x71ec
   12700:	movt	r1, #2
   12704:	str	r0, [r1]
   12708:	bx	lr
   1270c:	movw	r1, #29168	; 0x71f0
   12710:	movt	r1, #2
   12714:	strb	r0, [r1]
   12718:	bx	lr
   1271c:	push	{r4, r5, r6, sl, fp, lr}
   12720:	add	fp, sp, #16
   12724:	sub	sp, sp, #8
   12728:	movw	r0, #29052	; 0x717c
   1272c:	movt	r0, #2
   12730:	ldr	r0, [r0]
   12734:	bl	15618 <putchar_unlocked@plt+0x41ec>
   12738:	cmp	r0, #0
   1273c:	beq	12764 <putchar_unlocked@plt+0x1338>
   12740:	movw	r0, #29168	; 0x71f0
   12744:	movt	r0, #2
   12748:	ldrb	r0, [r0]
   1274c:	cmp	r0, #0
   12750:	beq	12784 <putchar_unlocked@plt+0x1358>
   12754:	bl	11318 <__errno_location@plt>
   12758:	ldr	r0, [r0]
   1275c:	cmp	r0, #32
   12760:	bne	12784 <putchar_unlocked@plt+0x1358>
   12764:	movw	r0, #29048	; 0x7178
   12768:	movt	r0, #2
   1276c:	ldr	r0, [r0]
   12770:	bl	15618 <putchar_unlocked@plt+0x41ec>
   12774:	cmp	r0, #0
   12778:	subeq	sp, fp, #16
   1277c:	popeq	{r4, r5, r6, sl, fp, pc}
   12780:	b	127f4 <putchar_unlocked@plt+0x13c8>
   12784:	movw	r1, #24943	; 0x616f
   12788:	movt	r1, #1
   1278c:	mov	r0, #0
   12790:	mov	r2, #5
   12794:	bl	111d4 <dcgettext@plt>
   12798:	mov	r4, r0
   1279c:	movw	r0, #29164	; 0x71ec
   127a0:	movt	r0, #2
   127a4:	ldr	r6, [r0]
   127a8:	bl	11318 <__errno_location@plt>
   127ac:	ldr	r5, [r0]
   127b0:	cmp	r6, #0
   127b4:	bne	127d0 <putchar_unlocked@plt+0x13a4>
   127b8:	movw	r2, #24959	; 0x617f
   127bc:	movt	r2, #1
   127c0:	mov	r0, #0
   127c4:	mov	r1, r5
   127c8:	mov	r3, r4
   127cc:	b	127f0 <putchar_unlocked@plt+0x13c4>
   127d0:	mov	r0, r6
   127d4:	bl	141ac <putchar_unlocked@plt+0x2d80>
   127d8:	mov	r3, r0
   127dc:	str	r4, [sp]
   127e0:	movw	r2, #24955	; 0x617b
   127e4:	movt	r2, #1
   127e8:	mov	r0, #0
   127ec:	mov	r1, r5
   127f0:	bl	11264 <error@plt>
   127f4:	movw	r0, #28964	; 0x7124
   127f8:	movt	r0, #2
   127fc:	ldr	r0, [r0]
   12800:	bl	1118c <_exit@plt>
   12804:	push	{r4, r5, fp, lr}
   12808:	add	fp, sp, #8
   1280c:	sub	sp, sp, #8
   12810:	mov	r4, r0
   12814:	bl	11360 <fileno@plt>
   12818:	cmn	r0, #1
   1281c:	ble	12894 <putchar_unlocked@plt+0x1468>
   12820:	mov	r0, r4
   12824:	bl	11294 <__freading@plt>
   12828:	cmp	r0, #0
   1282c:	beq	12858 <putchar_unlocked@plt+0x142c>
   12830:	mov	r0, r4
   12834:	bl	11360 <fileno@plt>
   12838:	mov	r1, #1
   1283c:	str	r1, [sp]
   12840:	mov	r2, #0
   12844:	mov	r3, #0
   12848:	bl	11228 <lseek64@plt>
   1284c:	and	r0, r0, r1
   12850:	cmn	r0, #1
   12854:	beq	12894 <putchar_unlocked@plt+0x1468>
   12858:	mov	r0, r4
   1285c:	bl	128a4 <putchar_unlocked@plt+0x1478>
   12860:	cmp	r0, #0
   12864:	beq	12894 <putchar_unlocked@plt+0x1468>
   12868:	bl	11318 <__errno_location@plt>
   1286c:	ldr	r5, [r0]
   12870:	mov	r0, r4
   12874:	bl	11378 <fclose@plt>
   12878:	cmp	r5, #0
   1287c:	beq	1288c <putchar_unlocked@plt+0x1460>
   12880:	bl	11318 <__errno_location@plt>
   12884:	str	r5, [r0]
   12888:	mvn	r0, #0
   1288c:	sub	sp, fp, #8
   12890:	pop	{r4, r5, fp, pc}
   12894:	mov	r0, r4
   12898:	sub	sp, fp, #8
   1289c:	pop	{r4, r5, fp, lr}
   128a0:	b	11378 <fclose@plt>
   128a4:	push	{r4, sl, fp, lr}
   128a8:	add	fp, sp, #8
   128ac:	mov	r4, r0
   128b0:	cmp	r0, #0
   128b4:	beq	128cc <putchar_unlocked@plt+0x14a0>
   128b8:	mov	r0, r4
   128bc:	bl	11294 <__freading@plt>
   128c0:	cmp	r0, #0
   128c4:	movne	r0, r4
   128c8:	blne	128d8 <putchar_unlocked@plt+0x14ac>
   128cc:	mov	r0, r4
   128d0:	pop	{r4, sl, fp, lr}
   128d4:	b	1115c <fflush@plt>
   128d8:	push	{fp, lr}
   128dc:	mov	fp, sp
   128e0:	sub	sp, sp, #8
   128e4:	ldrb	r1, [r0, #1]
   128e8:	tst	r1, #1
   128ec:	beq	12904 <putchar_unlocked@plt+0x14d8>
   128f0:	mov	r1, #1
   128f4:	str	r1, [sp]
   128f8:	mov	r2, #0
   128fc:	mov	r3, #0
   12900:	bl	12934 <putchar_unlocked@plt+0x1508>
   12904:	mov	sp, fp
   12908:	pop	{fp, pc}
   1290c:	push	{r4, r5, r6, sl, fp, lr}
   12910:	add	fp, sp, #16
   12914:	mov	r4, r0
   12918:	bl	11318 <__errno_location@plt>
   1291c:	mov	r5, r0
   12920:	ldr	r6, [r0]
   12924:	mov	r0, r4
   12928:	bl	11174 <free@plt>
   1292c:	str	r6, [r5]
   12930:	pop	{r4, r5, r6, sl, fp, pc}
   12934:	push	{r4, r5, r6, r7, fp, lr}
   12938:	add	fp, sp, #16
   1293c:	sub	sp, sp, #8
   12940:	mov	r5, r3
   12944:	mov	r6, r2
   12948:	mov	r4, r0
   1294c:	ldr	r0, [r0, #4]
   12950:	ldr	r1, [r4, #8]
   12954:	cmp	r1, r0
   12958:	bne	12974 <putchar_unlocked@plt+0x1548>
   1295c:	ldrd	r0, [r4, #16]
   12960:	cmp	r1, r0
   12964:	bne	12974 <putchar_unlocked@plt+0x1548>
   12968:	ldr	r0, [r4, #36]	; 0x24
   1296c:	cmp	r0, #0
   12970:	beq	1298c <putchar_unlocked@plt+0x1560>
   12974:	mov	r0, r4
   12978:	mov	r2, r6
   1297c:	mov	r3, r5
   12980:	sub	sp, fp, #16
   12984:	pop	{r4, r5, r6, r7, fp, lr}
   12988:	b	11384 <fseeko64@plt>
   1298c:	ldr	r7, [fp, #8]
   12990:	mov	r0, r4
   12994:	bl	11360 <fileno@plt>
   12998:	str	r7, [sp]
   1299c:	mov	r2, r6
   129a0:	mov	r3, r5
   129a4:	bl	11228 <lseek64@plt>
   129a8:	and	r2, r0, r1
   129ac:	cmn	r2, #1
   129b0:	beq	129d0 <putchar_unlocked@plt+0x15a4>
   129b4:	strd	r0, [r4, #80]	; 0x50
   129b8:	ldr	r0, [r4]
   129bc:	bic	r0, r0, #16
   129c0:	str	r0, [r4]
   129c4:	mov	r0, #0
   129c8:	sub	sp, fp, #16
   129cc:	pop	{r4, r5, r6, r7, fp, pc}
   129d0:	mvn	r0, #0
   129d4:	sub	sp, fp, #16
   129d8:	pop	{r4, r5, r6, r7, fp, pc}
   129dc:	push	{r4, sl, fp, lr}
   129e0:	add	fp, sp, #8
   129e4:	sub	sp, sp, #264	; 0x108
   129e8:	add	r1, sp, #7
   129ec:	movw	r2, #257	; 0x101
   129f0:	bl	148e4 <putchar_unlocked@plt+0x34b8>
   129f4:	mov	r4, #0
   129f8:	cmp	r0, #0
   129fc:	bne	12a3c <putchar_unlocked@plt+0x1610>
   12a00:	add	r0, sp, #7
   12a04:	movw	r1, #24962	; 0x6182
   12a08:	movt	r1, #1
   12a0c:	mov	r2, #2
   12a10:	bl	112f4 <bcmp@plt>
   12a14:	cmp	r0, #0
   12a18:	beq	12a3c <putchar_unlocked@plt+0x1610>
   12a1c:	add	r0, sp, #7
   12a20:	movw	r1, #24964	; 0x6184
   12a24:	movt	r1, #1
   12a28:	mov	r2, #6
   12a2c:	bl	112f4 <bcmp@plt>
   12a30:	mov	r4, r0
   12a34:	cmp	r0, #0
   12a38:	movwne	r4, #1
   12a3c:	mov	r0, r4
   12a40:	sub	sp, fp, #8
   12a44:	pop	{r4, sl, fp, pc}
   12a48:	push	{r4, r5, r6, sl, fp, lr}
   12a4c:	add	fp, sp, #16
   12a50:	mov	r4, r1
   12a54:	mov	r5, r0
   12a58:	mov	r0, #0
   12a5c:	strb	r0, [r2, #20]
   12a60:	add	r6, r2, #19
   12a64:	cmp	r1, #0
   12a68:	bmi	12ab8 <putchar_unlocked@plt+0x168c>
   12a6c:	mov	r0, r5
   12a70:	mov	r1, r4
   12a74:	mov	r2, #10
   12a78:	mov	r3, #0
   12a7c:	bl	157c4 <putchar_unlocked@plt+0x4398>
   12a80:	add	r2, r0, r0, lsl #2
   12a84:	sub	r2, r5, r2, lsl #1
   12a88:	add	r2, r2, #48	; 0x30
   12a8c:	strb	r2, [r6], #-1
   12a90:	adds	r2, r5, #9
   12a94:	adc	r3, r4, #0
   12a98:	rsbs	r2, r2, #18
   12a9c:	rscs	r2, r3, #0
   12aa0:	mov	r5, r0
   12aa4:	mov	r4, r1
   12aa8:	bcc	12a6c <putchar_unlocked@plt+0x1640>
   12aac:	add	r6, r6, #1
   12ab0:	mov	r0, r6
   12ab4:	pop	{r4, r5, r6, sl, fp, pc}
   12ab8:	mov	r0, r5
   12abc:	mov	r1, r4
   12ac0:	mov	r2, #10
   12ac4:	mov	r3, #0
   12ac8:	bl	157c4 <putchar_unlocked@plt+0x4398>
   12acc:	add	r2, r0, r0, lsl #2
   12ad0:	rsb	r2, r5, r2, lsl #1
   12ad4:	add	r2, r2, #48	; 0x30
   12ad8:	strb	r2, [r6], #-1
   12adc:	adds	r2, r5, #9
   12ae0:	adc	r3, r4, #0
   12ae4:	rsbs	r2, r2, #18
   12ae8:	rscs	r2, r3, #0
   12aec:	mov	r5, r0
   12af0:	mov	r4, r1
   12af4:	bcc	12ab8 <putchar_unlocked@plt+0x168c>
   12af8:	mov	r0, #45	; 0x2d
   12afc:	strb	r0, [r6]
   12b00:	mov	r0, r6
   12b04:	pop	{r4, r5, r6, sl, fp, pc}
   12b08:	push	{r4, r5, fp, lr}
   12b0c:	add	fp, sp, #8
   12b10:	cmp	r0, #0
   12b14:	beq	12ba8 <putchar_unlocked@plt+0x177c>
   12b18:	mov	r4, r0
   12b1c:	mov	r1, #47	; 0x2f
   12b20:	bl	113a8 <strrchr@plt>
   12b24:	cmp	r0, #0
   12b28:	mov	r5, r4
   12b2c:	addne	r5, r0, #1
   12b30:	sub	r0, r5, r4
   12b34:	cmp	r0, #7
   12b38:	blt	12b8c <putchar_unlocked@plt+0x1760>
   12b3c:	sub	r0, r5, #7
   12b40:	movw	r1, #25026	; 0x61c2
   12b44:	movt	r1, #1
   12b48:	mov	r2, #7
   12b4c:	bl	11408 <strncmp@plt>
   12b50:	cmp	r0, #0
   12b54:	bne	12b8c <putchar_unlocked@plt+0x1760>
   12b58:	movw	r1, #25034	; 0x61ca
   12b5c:	movt	r1, #1
   12b60:	mov	r0, r5
   12b64:	mov	r2, #3
   12b68:	bl	11408 <strncmp@plt>
   12b6c:	cmp	r0, #0
   12b70:	beq	12b7c <putchar_unlocked@plt+0x1750>
   12b74:	mov	r4, r5
   12b78:	b	12b8c <putchar_unlocked@plt+0x1760>
   12b7c:	add	r4, r5, #3
   12b80:	movw	r0, #29032	; 0x7168
   12b84:	movt	r0, #2
   12b88:	str	r4, [r0]
   12b8c:	movw	r0, #29036	; 0x716c
   12b90:	movt	r0, #2
   12b94:	str	r4, [r0]
   12b98:	movw	r0, #29172	; 0x71f4
   12b9c:	movt	r0, #2
   12ba0:	str	r4, [r0]
   12ba4:	pop	{r4, r5, fp, pc}
   12ba8:	movw	r0, #29048	; 0x7178
   12bac:	movt	r0, #2
   12bb0:	ldr	r3, [r0]
   12bb4:	movw	r0, #24970	; 0x618a
   12bb8:	movt	r0, #1
   12bbc:	mov	r1, #55	; 0x37
   12bc0:	mov	r2, #1
   12bc4:	bl	1121c <fwrite@plt>
   12bc8:	bl	11414 <abort@plt>
   12bcc:	push	{r4, r5, r6, sl, fp, lr}
   12bd0:	add	fp, sp, #16
   12bd4:	mov	r4, r0
   12bd8:	movw	r0, #29176	; 0x71f8
   12bdc:	movt	r0, #2
   12be0:	cmp	r4, #0
   12be4:	moveq	r4, r0
   12be8:	bl	11318 <__errno_location@plt>
   12bec:	mov	r5, r0
   12bf0:	ldr	r6, [r0]
   12bf4:	mov	r0, r4
   12bf8:	mov	r1, #48	; 0x30
   12bfc:	bl	15138 <putchar_unlocked@plt+0x3d0c>
   12c00:	str	r6, [r5]
   12c04:	pop	{r4, r5, r6, sl, fp, pc}
   12c08:	movw	r1, #29176	; 0x71f8
   12c0c:	movt	r1, #2
   12c10:	cmp	r0, #0
   12c14:	movne	r1, r0
   12c18:	ldr	r0, [r1]
   12c1c:	bx	lr
   12c20:	movw	r2, #29176	; 0x71f8
   12c24:	movt	r2, #2
   12c28:	cmp	r0, #0
   12c2c:	movne	r2, r0
   12c30:	str	r1, [r2]
   12c34:	bx	lr
   12c38:	movw	r3, #29176	; 0x71f8
   12c3c:	movt	r3, #2
   12c40:	cmp	r0, #0
   12c44:	movne	r3, r0
   12c48:	ubfx	r0, r1, #5, #3
   12c4c:	add	ip, r3, r0, lsl #2
   12c50:	ldr	r3, [ip, #8]
   12c54:	and	r1, r1, #31
   12c58:	mov	r0, #1
   12c5c:	and	r0, r0, r3, lsr r1
   12c60:	and	r2, r2, #1
   12c64:	eor	r2, r0, r2
   12c68:	eor	r1, r3, r2, lsl r1
   12c6c:	str	r1, [ip, #8]
   12c70:	bx	lr
   12c74:	movw	r2, #29176	; 0x71f8
   12c78:	movt	r2, #2
   12c7c:	cmp	r0, #0
   12c80:	movne	r2, r0
   12c84:	ldr	r0, [r2, #4]
   12c88:	str	r1, [r2, #4]
   12c8c:	bx	lr
   12c90:	push	{fp, lr}
   12c94:	mov	fp, sp
   12c98:	movw	r3, #29176	; 0x71f8
   12c9c:	movt	r3, #2
   12ca0:	cmp	r0, #0
   12ca4:	movne	r3, r0
   12ca8:	mov	r0, #10
   12cac:	str	r0, [r3]
   12cb0:	cmp	r1, #0
   12cb4:	cmpne	r2, #0
   12cb8:	bne	12cc0 <putchar_unlocked@plt+0x1894>
   12cbc:	bl	11414 <abort@plt>
   12cc0:	str	r1, [r3, #40]	; 0x28
   12cc4:	str	r2, [r3, #44]	; 0x2c
   12cc8:	pop	{fp, pc}
   12ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cd0:	add	fp, sp, #28
   12cd4:	sub	sp, sp, #20
   12cd8:	mov	r8, r3
   12cdc:	mov	r9, r2
   12ce0:	mov	sl, r1
   12ce4:	mov	r7, r0
   12ce8:	ldr	r0, [fp, #8]
   12cec:	movw	r5, #29176	; 0x71f8
   12cf0:	movt	r5, #2
   12cf4:	cmp	r0, #0
   12cf8:	movne	r5, r0
   12cfc:	bl	11318 <__errno_location@plt>
   12d00:	mov	r4, r0
   12d04:	ldm	r5, {r0, r1}
   12d08:	ldr	r2, [r5, #40]	; 0x28
   12d0c:	ldr	r3, [r5, #44]	; 0x2c
   12d10:	ldr	r6, [r4]
   12d14:	add	r5, r5, #8
   12d18:	stm	sp, {r0, r1, r5}
   12d1c:	str	r2, [sp, #12]
   12d20:	str	r3, [sp, #16]
   12d24:	mov	r0, r7
   12d28:	mov	r1, sl
   12d2c:	mov	r2, r9
   12d30:	mov	r3, r8
   12d34:	bl	12d44 <putchar_unlocked@plt+0x1918>
   12d38:	str	r6, [r4]
   12d3c:	sub	sp, fp, #28
   12d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d48:	add	fp, sp, #28
   12d4c:	sub	sp, sp, #156	; 0x9c
   12d50:	mov	r9, r3
   12d54:	mov	r7, r1
   12d58:	mov	r6, r0
   12d5c:	str	r2, [fp, #-80]	; 0xffffffb0
   12d60:	add	r0, r2, #1
   12d64:	str	r0, [sp, #76]	; 0x4c
   12d68:	ldr	r0, [fp, #12]
   12d6c:	and	r1, r0, #1
   12d70:	str	r1, [sp, #40]	; 0x28
   12d74:	and	r1, r0, #4
   12d78:	str	r1, [sp, #36]	; 0x24
   12d7c:	ubfx	r4, r0, #1, #1
   12d80:	bl	11234 <__ctype_get_mb_cur_max@plt>
   12d84:	str	r0, [sp, #44]	; 0x2c
   12d88:	ldr	r0, [fp, #24]
   12d8c:	str	r0, [sp, #88]	; 0x58
   12d90:	ldr	r0, [fp, #20]
   12d94:	str	r0, [sp, #80]	; 0x50
   12d98:	ldr	r1, [fp, #8]
   12d9c:	mov	r0, #0
   12da0:	str	r0, [sp, #84]	; 0x54
   12da4:	mov	r0, #0
   12da8:	str	r0, [fp, #-84]	; 0xffffffac
   12dac:	mov	r0, #0
   12db0:	str	r0, [fp, #-72]	; 0xffffffb8
   12db4:	mov	r0, #0
   12db8:	mov	r2, #0
   12dbc:	str	r2, [fp, #-56]	; 0xffffffc8
   12dc0:	mov	r2, #0
   12dc4:	str	r2, [sp, #64]	; 0x40
   12dc8:	mov	r2, #1
   12dcc:	str	r2, [fp, #-48]	; 0xffffffd0
   12dd0:	cmp	r1, #10
   12dd4:	bhi	13d00 <putchar_unlocked@plt+0x28d4>
   12dd8:	mov	sl, r7
   12ddc:	mov	r7, r1
   12de0:	add	r1, pc, #24
   12de4:	mov	r8, #0
   12de8:	mov	r2, #1
   12dec:	mov	r3, #0
   12df0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12df4:	mov	lr, r9
   12df8:	mov	r5, r6
   12dfc:	ldr	pc, [r1, r7, lsl #2]
   12e00:	ldrdeq	r2, [r1], -r4
   12e04:	andeq	r2, r1, r4, lsl pc
   12e08:	andeq	r2, r1, r4, ror #29
   12e0c:	andeq	r2, r1, ip, asr #29
   12e10:	andeq	r2, r1, r8, lsl #30
   12e14:	andeq	r2, r1, r8, ror #30
   12e18:	strdeq	r2, [r1], -r4
   12e1c:	andeq	r2, r1, r4, asr #31
   12e20:	andeq	r2, r1, ip, lsr #28
   12e24:	andeq	r2, r1, ip, lsr #28
   12e28:	andeq	r2, r1, r8, asr lr
   12e2c:	movw	r0, #25118	; 0x621e
   12e30:	movt	r0, #1
   12e34:	mov	r1, r7
   12e38:	bl	14308 <putchar_unlocked@plt+0x2edc>
   12e3c:	str	r0, [sp, #80]	; 0x50
   12e40:	movw	r0, #25120	; 0x6220
   12e44:	movt	r0, #1
   12e48:	mov	r1, r7
   12e4c:	bl	14308 <putchar_unlocked@plt+0x2edc>
   12e50:	mov	r5, r6
   12e54:	str	r0, [sp, #88]	; 0x58
   12e58:	mov	r8, #0
   12e5c:	tst	r4, #1
   12e60:	str	r7, [fp, #-64]	; 0xffffffc0
   12e64:	bne	12e9c <putchar_unlocked@plt+0x1a70>
   12e68:	ldr	r0, [sp, #80]	; 0x50
   12e6c:	ldrb	r0, [r0]
   12e70:	cmp	r0, #0
   12e74:	beq	12e9c <putchar_unlocked@plt+0x1a70>
   12e78:	ldr	r1, [sp, #80]	; 0x50
   12e7c:	add	r1, r1, #1
   12e80:	mov	r8, #0
   12e84:	cmp	r8, sl
   12e88:	strbcc	r0, [r5, r8]
   12e8c:	ldrb	r0, [r1, r8]
   12e90:	add	r8, r8, #1
   12e94:	cmp	r0, #0
   12e98:	bne	12e84 <putchar_unlocked@plt+0x1a58>
   12e9c:	ldr	r7, [sp, #88]	; 0x58
   12ea0:	mov	r0, r7
   12ea4:	bl	11300 <strlen@plt>
   12ea8:	mov	r5, r6
   12eac:	str	r0, [fp, #-72]	; 0xffffffb8
   12eb0:	str	r7, [fp, #-84]	; 0xffffffac
   12eb4:	mov	r2, #1
   12eb8:	mov	r3, r4
   12ebc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12ec0:	mov	lr, r9
   12ec4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12ec8:	b	12fc4 <putchar_unlocked@plt+0x1b98>
   12ecc:	mov	r0, #1
   12ed0:	b	12f14 <putchar_unlocked@plt+0x1ae8>
   12ed4:	mov	r7, #0
   12ed8:	mov	r8, #0
   12edc:	mov	r2, r0
   12ee0:	b	12fc0 <putchar_unlocked@plt+0x1b94>
   12ee4:	tst	r4, #1
   12ee8:	bne	12f14 <putchar_unlocked@plt+0x1ae8>
   12eec:	mov	r2, r0
   12ef0:	b	12f3c <putchar_unlocked@plt+0x1b10>
   12ef4:	mov	r0, #1
   12ef8:	str	r0, [fp, #-72]	; 0xffffffb8
   12efc:	mov	r8, #0
   12f00:	mov	r7, #5
   12f04:	b	12f80 <putchar_unlocked@plt+0x1b54>
   12f08:	mov	r2, #1
   12f0c:	tst	r4, #1
   12f10:	beq	12f3c <putchar_unlocked@plt+0x1b10>
   12f14:	mov	r1, #1
   12f18:	str	r1, [fp, #-72]	; 0xffffffb8
   12f1c:	mov	r8, #0
   12f20:	mov	r7, #2
   12f24:	movw	r1, #25120	; 0x6220
   12f28:	movt	r1, #1
   12f2c:	str	r1, [fp, #-84]	; 0xffffffac
   12f30:	mov	r2, r0
   12f34:	mov	r3, #1
   12f38:	b	12fc4 <putchar_unlocked@plt+0x1b98>
   12f3c:	mov	r8, #1
   12f40:	mov	r7, #2
   12f44:	cmp	sl, #0
   12f48:	movne	r0, #39	; 0x27
   12f4c:	strbne	r0, [r5]
   12f50:	movw	r0, #25120	; 0x6220
   12f54:	movt	r0, #1
   12f58:	str	r0, [fp, #-84]	; 0xffffffac
   12f5c:	mov	r0, #1
   12f60:	str	r0, [fp, #-72]	; 0xffffffb8
   12f64:	b	12fc0 <putchar_unlocked@plt+0x1b94>
   12f68:	mov	r7, #5
   12f6c:	tst	r4, #1
   12f70:	beq	12f98 <putchar_unlocked@plt+0x1b6c>
   12f74:	mov	r0, #1
   12f78:	str	r0, [fp, #-72]	; 0xffffffb8
   12f7c:	mov	r8, #0
   12f80:	movw	r0, #25116	; 0x621c
   12f84:	movt	r0, #1
   12f88:	str	r0, [fp, #-84]	; 0xffffffac
   12f8c:	mov	r2, #1
   12f90:	mov	r3, #1
   12f94:	b	12fc4 <putchar_unlocked@plt+0x1b98>
   12f98:	cmp	sl, #0
   12f9c:	movne	r0, #34	; 0x22
   12fa0:	strbne	r0, [r5]
   12fa4:	mov	r8, #1
   12fa8:	movw	r0, #25116	; 0x621c
   12fac:	movt	r0, #1
   12fb0:	str	r0, [fp, #-84]	; 0xffffffac
   12fb4:	mov	r0, #1
   12fb8:	str	r0, [fp, #-72]	; 0xffffffb8
   12fbc:	mov	r2, #1
   12fc0:	mov	r3, #0
   12fc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fc8:	cmp	r0, #0
   12fcc:	movwne	r0, #1
   12fd0:	and	r1, r0, r3
   12fd4:	and	r1, r2, r1
   12fd8:	str	r1, [sp, #56]	; 0x38
   12fdc:	sub	r1, r7, #2
   12fe0:	clz	r1, r1
   12fe4:	lsr	r1, r1, #5
   12fe8:	and	r1, r1, r3
   12fec:	str	r1, [sp, #68]	; 0x44
   12ff0:	str	r7, [fp, #-64]	; 0xffffffc0
   12ff4:	subs	r1, r7, #2
   12ff8:	movwne	r1, #1
   12ffc:	eor	r4, r3, #1
   13000:	str	r4, [fp, #-88]	; 0xffffffa8
   13004:	orr	r4, r1, r4
   13008:	str	r4, [sp, #72]	; 0x48
   1300c:	and	r1, r1, r2
   13010:	and	r0, r0, r1
   13014:	str	r0, [fp, #-60]	; 0xffffffc4
   13018:	str	r3, [fp, #-76]	; 0xffffffb4
   1301c:	orr	r0, r1, r3
   13020:	eor	r0, r0, #1
   13024:	ldr	r1, [fp, #16]
   13028:	clz	r1, r1
   1302c:	lsr	r1, r1, #5
   13030:	orr	r0, r1, r0
   13034:	str	r0, [fp, #-68]	; 0xffffffbc
   13038:	str	r2, [sp, #92]	; 0x5c
   1303c:	eor	r0, r2, #1
   13040:	str	r0, [sp, #60]	; 0x3c
   13044:	mov	r7, #0
   13048:	cmn	lr, #1
   1304c:	beq	1305c <putchar_unlocked@plt+0x1c30>
   13050:	cmp	r7, lr
   13054:	bne	13068 <putchar_unlocked@plt+0x1c3c>
   13058:	b	13b74 <putchar_unlocked@plt+0x2748>
   1305c:	ldrb	r0, [ip, r7]
   13060:	cmp	r0, #0
   13064:	beq	13b74 <putchar_unlocked@plt+0x2748>
   13068:	mov	r9, #0
   1306c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13070:	cmp	r0, #0
   13074:	beq	130a8 <putchar_unlocked@plt+0x1c7c>
   13078:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1307c:	add	r4, r7, r0
   13080:	cmp	r0, #2
   13084:	bcc	130a0 <putchar_unlocked@plt+0x1c74>
   13088:	cmn	lr, #1
   1308c:	bne	130a0 <putchar_unlocked@plt+0x1c74>
   13090:	mov	r0, ip
   13094:	bl	11300 <strlen@plt>
   13098:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1309c:	mov	lr, r0
   130a0:	cmp	r4, lr
   130a4:	bls	130b4 <putchar_unlocked@plt+0x1c88>
   130a8:	mov	r0, #0
   130ac:	str	r0, [fp, #-52]	; 0xffffffcc
   130b0:	b	130f8 <putchar_unlocked@plt+0x1ccc>
   130b4:	mov	r4, lr
   130b8:	add	r0, ip, r7
   130bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   130c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   130c4:	bl	112f4 <bcmp@plt>
   130c8:	cmp	r0, #0
   130cc:	mov	r1, r0
   130d0:	movwne	r1, #1
   130d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   130d8:	orr	r1, r1, r2
   130dc:	tst	r1, #1
   130e0:	beq	13c48 <putchar_unlocked@plt+0x281c>
   130e4:	clz	r0, r0
   130e8:	lsr	r0, r0, #5
   130ec:	str	r0, [fp, #-52]	; 0xffffffcc
   130f0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   130f4:	mov	lr, r4
   130f8:	ldrb	r4, [ip, r7]
   130fc:	cmp	r4, #126	; 0x7e
   13100:	bhi	13630 <putchar_unlocked@plt+0x2204>
   13104:	mov	r6, #1
   13108:	mov	r2, #110	; 0x6e
   1310c:	mov	r0, #97	; 0x61
   13110:	add	r3, pc, #4
   13114:	mov	r1, #0
   13118:	ldr	pc, [r3, r4, lsl #2]
   1311c:	muleq	r1, r0, r4
   13120:	andeq	r3, r1, r0, lsr r6
   13124:	andeq	r3, r1, r0, lsr r6
   13128:	andeq	r3, r1, r0, lsr r6
   1312c:	andeq	r3, r1, r0, lsr r6
   13130:	andeq	r3, r1, r0, lsr r6
   13134:	andeq	r3, r1, r0, lsr r6
   13138:	andeq	r3, r1, r4, lsl #14
   1313c:	andeq	r3, r1, r0, ror r4
   13140:	andeq	r3, r1, r8, ror #8
   13144:	andeq	r3, r1, ip, ror r4
   13148:	muleq	r1, r8, r5
   1314c:	andeq	r3, r1, r0, ror #8
   13150:	andeq	r3, r1, r8, ror r4
   13154:	andeq	r3, r1, r0, lsr r6
   13158:	andeq	r3, r1, r0, lsr r6
   1315c:	andeq	r3, r1, r0, lsr r6
   13160:	andeq	r3, r1, r0, lsr r6
   13164:	andeq	r3, r1, r0, lsr r6
   13168:	andeq	r3, r1, r0, lsr r6
   1316c:	andeq	r3, r1, r0, lsr r6
   13170:	andeq	r3, r1, r0, lsr r6
   13174:	andeq	r3, r1, r0, lsr r6
   13178:	andeq	r3, r1, r0, lsr r6
   1317c:	andeq	r3, r1, r0, lsr r6
   13180:	andeq	r3, r1, r0, lsr r6
   13184:	andeq	r3, r1, r0, lsr r6
   13188:	andeq	r3, r1, r0, lsr r6
   1318c:	andeq	r3, r1, r0, lsr r6
   13190:	andeq	r3, r1, r0, lsr r6
   13194:	andeq	r3, r1, r0, lsr r6
   13198:	andeq	r3, r1, r0, lsr r6
   1319c:	andeq	r3, r1, r4, lsl r4
   131a0:	andeq	r3, r1, r8, lsl r4
   131a4:	andeq	r3, r1, r8, lsl r4
   131a8:	andeq	r3, r1, r0, lsl #8
   131ac:	andeq	r3, r1, r8, lsl r4
   131b0:	andeq	r3, r1, r8, lsl r3
   131b4:	andeq	r3, r1, r8, lsl r4
   131b8:	andeq	r3, r1, r0, lsr #11
   131bc:	andeq	r3, r1, r8, lsl r4
   131c0:	andeq	r3, r1, r8, lsl r4
   131c4:	andeq	r3, r1, r8, lsl r4
   131c8:	andeq	r3, r1, r8, lsl r3
   131cc:	andeq	r3, r1, r8, lsl r3
   131d0:	andeq	r3, r1, r8, lsl r3
   131d4:	andeq	r3, r1, r8, lsl r3
   131d8:	andeq	r3, r1, r8, lsl r3
   131dc:	andeq	r3, r1, r8, lsl r3
   131e0:	andeq	r3, r1, r8, lsl r3
   131e4:	andeq	r3, r1, r8, lsl r3
   131e8:	andeq	r3, r1, r8, lsl r3
   131ec:	andeq	r3, r1, r8, lsl r3
   131f0:	andeq	r3, r1, r8, lsl r3
   131f4:	andeq	r3, r1, r8, lsl r3
   131f8:	andeq	r3, r1, r8, lsl r3
   131fc:	andeq	r3, r1, r8, lsl r3
   13200:	andeq	r3, r1, r8, lsl r3
   13204:	andeq	r3, r1, r8, lsl r3
   13208:	andeq	r3, r1, r8, lsl r4
   1320c:	andeq	r3, r1, r8, lsl r4
   13210:	andeq	r3, r1, r8, lsl r4
   13214:	andeq	r3, r1, r8, lsl r4
   13218:	andeq	r3, r1, r8, ror #10
   1321c:	andeq	r3, r1, r0, lsr r6
   13220:	andeq	r3, r1, r8, lsl r3
   13224:	andeq	r3, r1, r8, lsl r3
   13228:	andeq	r3, r1, r8, lsl r3
   1322c:	andeq	r3, r1, r8, lsl r3
   13230:	andeq	r3, r1, r8, lsl r3
   13234:	andeq	r3, r1, r8, lsl r3
   13238:	andeq	r3, r1, r8, lsl r3
   1323c:	andeq	r3, r1, r8, lsl r3
   13240:	andeq	r3, r1, r8, lsl r3
   13244:	andeq	r3, r1, r8, lsl r3
   13248:	andeq	r3, r1, r8, lsl r3
   1324c:	andeq	r3, r1, r8, lsl r3
   13250:	andeq	r3, r1, r8, lsl r3
   13254:	andeq	r3, r1, r8, lsl r3
   13258:	andeq	r3, r1, r8, lsl r3
   1325c:	andeq	r3, r1, r8, lsl r3
   13260:	andeq	r3, r1, r8, lsl r3
   13264:	andeq	r3, r1, r8, lsl r3
   13268:	andeq	r3, r1, r8, lsl r3
   1326c:	andeq	r3, r1, r8, lsl r3
   13270:	andeq	r3, r1, r8, lsl r3
   13274:	andeq	r3, r1, r8, lsl r3
   13278:	andeq	r3, r1, r8, lsl r3
   1327c:	andeq	r3, r1, r8, lsl r3
   13280:	andeq	r3, r1, r8, lsl r3
   13284:	andeq	r3, r1, r8, lsl r3
   13288:	andeq	r3, r1, r8, lsl r4
   1328c:	andeq	r3, r1, r0, asr #8
   13290:	andeq	r3, r1, r8, lsl r3
   13294:	andeq	r3, r1, r8, lsl r4
   13298:	andeq	r3, r1, r8, lsl r3
   1329c:	andeq	r3, r1, r8, lsl r4
   132a0:	andeq	r3, r1, r8, lsl r3
   132a4:	andeq	r3, r1, r8, lsl r3
   132a8:	andeq	r3, r1, r8, lsl r3
   132ac:	andeq	r3, r1, r8, lsl r3
   132b0:	andeq	r3, r1, r8, lsl r3
   132b4:	andeq	r3, r1, r8, lsl r3
   132b8:	andeq	r3, r1, r8, lsl r3
   132bc:	andeq	r3, r1, r8, lsl r3
   132c0:	andeq	r3, r1, r8, lsl r3
   132c4:	andeq	r3, r1, r8, lsl r3
   132c8:	andeq	r3, r1, r8, lsl r3
   132cc:	andeq	r3, r1, r8, lsl r3
   132d0:	andeq	r3, r1, r8, lsl r3
   132d4:	andeq	r3, r1, r8, lsl r3
   132d8:	andeq	r3, r1, r8, lsl r3
   132dc:	andeq	r3, r1, r8, lsl r3
   132e0:	andeq	r3, r1, r8, lsl r3
   132e4:	andeq	r3, r1, r8, lsl r3
   132e8:	andeq	r3, r1, r8, lsl r3
   132ec:	andeq	r3, r1, r8, lsl r3
   132f0:	andeq	r3, r1, r8, lsl r3
   132f4:	andeq	r3, r1, r8, lsl r3
   132f8:	andeq	r3, r1, r8, lsl r3
   132fc:	andeq	r3, r1, r8, lsl r3
   13300:	andeq	r3, r1, r8, lsl r3
   13304:	andeq	r3, r1, r8, lsl r3
   13308:	ldrdeq	r3, [r1], -r4
   1330c:	andeq	r3, r1, r8, lsl r4
   13310:	ldrdeq	r3, [r1], -r4
   13314:	andeq	r3, r1, r0, lsl #8
   13318:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1331c:	tst	r0, #1
   13320:	bne	1334c <putchar_unlocked@plt+0x1f20>
   13324:	ubfx	r0, r4, #5, #3
   13328:	ldr	r1, [fp, #16]
   1332c:	ldr	r0, [r1, r0, lsl #2]
   13330:	and	r1, r4, #31
   13334:	mov	r2, #1
   13338:	tst	r0, r2, lsl r1
   1333c:	beq	1334c <putchar_unlocked@plt+0x1f20>
   13340:	mov	r0, r4
   13344:	mov	r1, r6
   13348:	b	13360 <putchar_unlocked@plt+0x1f34>
   1334c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13350:	cmp	r0, #0
   13354:	mov	r0, r4
   13358:	mov	r1, r6
   1335c:	beq	13698 <putchar_unlocked@plt+0x226c>
   13360:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13364:	tst	r2, #1
   13368:	bne	13c5c <putchar_unlocked@plt+0x2830>
   1336c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13370:	subs	r2, r2, #2
   13374:	movwne	r2, #1
   13378:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1337c:	orr	r2, r2, r3
   13380:	tst	r2, #1
   13384:	bne	133c0 <putchar_unlocked@plt+0x1f94>
   13388:	cmp	r8, sl
   1338c:	movcc	r2, #39	; 0x27
   13390:	strbcc	r2, [r5, r8]
   13394:	add	r2, r8, #1
   13398:	cmp	r2, sl
   1339c:	movcc	r3, #36	; 0x24
   133a0:	strbcc	r3, [r5, r2]
   133a4:	add	r2, r8, #2
   133a8:	cmp	r2, sl
   133ac:	movcc	r3, #39	; 0x27
   133b0:	strbcc	r3, [r5, r2]
   133b4:	add	r8, r8, #3
   133b8:	mov	r2, #1
   133bc:	str	r2, [fp, #-56]	; 0xffffffc8
   133c0:	cmp	r8, sl
   133c4:	movcc	r2, #92	; 0x5c
   133c8:	strbcc	r2, [r5, r8]
   133cc:	add	r8, r8, #1
   133d0:	b	136dc <putchar_unlocked@plt+0x22b0>
   133d4:	cmp	lr, #1
   133d8:	beq	13400 <putchar_unlocked@plt+0x1fd4>
   133dc:	mov	r6, #0
   133e0:	cmn	lr, #1
   133e4:	bne	1340c <putchar_unlocked@plt+0x1fe0>
   133e8:	ldrb	r0, [ip, #1]
   133ec:	cmp	r0, #0
   133f0:	beq	13400 <putchar_unlocked@plt+0x1fd4>
   133f4:	mvn	lr, #0
   133f8:	mov	r9, #0
   133fc:	b	13318 <putchar_unlocked@plt+0x1eec>
   13400:	mov	r6, #0
   13404:	cmp	r7, #0
   13408:	beq	13414 <putchar_unlocked@plt+0x1fe8>
   1340c:	mov	r9, #0
   13410:	b	13318 <putchar_unlocked@plt+0x1eec>
   13414:	mov	r1, #1
   13418:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1341c:	cmp	r0, #2
   13420:	bne	13438 <putchar_unlocked@plt+0x200c>
   13424:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13428:	tst	r0, #1
   1342c:	mov	r6, r1
   13430:	beq	13318 <putchar_unlocked@plt+0x1eec>
   13434:	b	13c5c <putchar_unlocked@plt+0x2830>
   13438:	mov	r6, r1
   1343c:	b	13318 <putchar_unlocked@plt+0x1eec>
   13440:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13444:	cmp	r0, #2
   13448:	bne	1367c <putchar_unlocked@plt+0x2250>
   1344c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13450:	tst	r0, #1
   13454:	bne	13c5c <putchar_unlocked@plt+0x2830>
   13458:	mov	r9, #0
   1345c:	b	13690 <putchar_unlocked@plt+0x2264>
   13460:	mov	r0, #102	; 0x66
   13464:	b	13704 <putchar_unlocked@plt+0x22d8>
   13468:	mov	r2, #116	; 0x74
   1346c:	b	1347c <putchar_unlocked@plt+0x2050>
   13470:	mov	r0, #98	; 0x62
   13474:	b	13704 <putchar_unlocked@plt+0x22d8>
   13478:	mov	r2, #114	; 0x72
   1347c:	ldr	r0, [sp, #72]	; 0x48
   13480:	tst	r0, #1
   13484:	mov	r0, r2
   13488:	bne	13704 <putchar_unlocked@plt+0x22d8>
   1348c:	b	13c5c <putchar_unlocked@plt+0x2830>
   13490:	ldr	r0, [sp, #92]	; 0x5c
   13494:	tst	r0, #1
   13498:	beq	13720 <putchar_unlocked@plt+0x22f4>
   1349c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134a0:	tst	r0, #1
   134a4:	bne	13c5c <putchar_unlocked@plt+0x2830>
   134a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134ac:	subs	r0, r0, #2
   134b0:	movwne	r0, #1
   134b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   134b8:	orr	r0, r0, r1
   134bc:	tst	r0, #1
   134c0:	bne	134fc <putchar_unlocked@plt+0x20d0>
   134c4:	cmp	r8, sl
   134c8:	movcc	r0, #39	; 0x27
   134cc:	strbcc	r0, [r5, r8]
   134d0:	add	r0, r8, #1
   134d4:	cmp	r0, sl
   134d8:	movcc	r1, #36	; 0x24
   134dc:	strbcc	r1, [r5, r0]
   134e0:	add	r0, r8, #2
   134e4:	cmp	r0, sl
   134e8:	movcc	r1, #39	; 0x27
   134ec:	strbcc	r1, [r5, r0]
   134f0:	add	r8, r8, #3
   134f4:	mov	r0, #1
   134f8:	str	r0, [fp, #-56]	; 0xffffffc8
   134fc:	cmp	r8, sl
   13500:	movcc	r0, #92	; 0x5c
   13504:	strbcc	r0, [r5, r8]
   13508:	add	r0, r8, #1
   1350c:	mov	r6, #0
   13510:	mov	r9, #1
   13514:	mov	r4, #48	; 0x30
   13518:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1351c:	cmp	r1, #2
   13520:	beq	138e4 <putchar_unlocked@plt+0x24b8>
   13524:	add	r1, r7, #1
   13528:	cmp	r1, lr
   1352c:	bcs	138e4 <putchar_unlocked@plt+0x24b8>
   13530:	ldrb	r1, [ip, r1]
   13534:	sub	r1, r1, #48	; 0x30
   13538:	uxtb	r1, r1
   1353c:	cmp	r1, #9
   13540:	bhi	138e4 <putchar_unlocked@plt+0x24b8>
   13544:	cmp	r0, sl
   13548:	movcc	r1, #48	; 0x30
   1354c:	strbcc	r1, [r5, r0]
   13550:	add	r0, r8, #2
   13554:	cmp	r0, sl
   13558:	movcc	r1, #48	; 0x30
   1355c:	strbcc	r1, [r5, r0]
   13560:	add	r8, r8, #3
   13564:	b	13318 <putchar_unlocked@plt+0x1eec>
   13568:	mov	r9, #0
   1356c:	mov	r4, #63	; 0x3f
   13570:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13574:	cmp	r0, #5
   13578:	beq	138ec <putchar_unlocked@plt+0x24c0>
   1357c:	cmp	r0, #2
   13580:	bne	13994 <putchar_unlocked@plt+0x2568>
   13584:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13588:	tst	r0, #1
   1358c:	mov	r6, #0
   13590:	beq	13318 <putchar_unlocked@plt+0x1eec>
   13594:	b	13c5c <putchar_unlocked@plt+0x2830>
   13598:	mov	r0, #118	; 0x76
   1359c:	b	13704 <putchar_unlocked@plt+0x22d8>
   135a0:	mov	r4, #39	; 0x27
   135a4:	mov	r0, #1
   135a8:	str	r0, [sp, #64]	; 0x40
   135ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   135b0:	cmp	r0, #2
   135b4:	bne	1373c <putchar_unlocked@plt+0x2310>
   135b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   135bc:	tst	r0, #1
   135c0:	bne	13c5c <putchar_unlocked@plt+0x2830>
   135c4:	ldr	r2, [sp, #84]	; 0x54
   135c8:	cmp	r2, #0
   135cc:	mov	r0, r2
   135d0:	movwne	r0, #1
   135d4:	clz	r1, sl
   135d8:	lsr	r1, r1, #5
   135dc:	orrs	r0, r0, r1
   135e0:	moveq	r2, sl
   135e4:	str	r2, [sp, #84]	; 0x54
   135e8:	moveq	sl, r0
   135ec:	cmp	r8, sl
   135f0:	movcc	r0, #39	; 0x27
   135f4:	strbcc	r0, [r5, r8]
   135f8:	add	r0, r8, #1
   135fc:	cmp	r0, sl
   13600:	movcc	r1, #92	; 0x5c
   13604:	strbcc	r1, [r5, r0]
   13608:	add	r0, r8, #2
   1360c:	cmp	r0, sl
   13610:	movcc	r1, #39	; 0x27
   13614:	strbcc	r1, [r5, r0]
   13618:	add	r8, r8, #3
   1361c:	mov	r0, #0
   13620:	str	r0, [fp, #-56]	; 0xffffffc8
   13624:	mov	r9, #0
   13628:	mov	r6, #1
   1362c:	b	13318 <putchar_unlocked@plt+0x1eec>
   13630:	ldr	r0, [sp, #44]	; 0x2c
   13634:	cmp	r0, #1
   13638:	bne	13744 <putchar_unlocked@plt+0x2318>
   1363c:	str	lr, [sp, #32]
   13640:	bl	112dc <__ctype_b_loc@plt>
   13644:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13648:	ldr	r0, [r0]
   1364c:	add	r0, r0, r4, lsl #1
   13650:	ldrb	r0, [r0, #1]
   13654:	ubfx	r6, r0, #6, #1
   13658:	mov	r2, #1
   1365c:	ldr	r0, [sp, #60]	; 0x3c
   13660:	orr	r1, r6, r0
   13664:	cmp	r2, #1
   13668:	bhi	1399c <putchar_unlocked@plt+0x2570>
   1366c:	tst	r1, #1
   13670:	beq	1399c <putchar_unlocked@plt+0x2570>
   13674:	ldr	lr, [sp, #32]
   13678:	b	13318 <putchar_unlocked@plt+0x1eec>
   1367c:	mov	r9, #0
   13680:	mov	r0, #92	; 0x5c
   13684:	ldr	r1, [sp, #56]	; 0x38
   13688:	cmp	r1, #0
   1368c:	beq	13704 <putchar_unlocked@plt+0x22d8>
   13690:	mov	r4, #92	; 0x5c
   13694:	mov	r6, #0
   13698:	cmp	r9, #0
   1369c:	bne	136d4 <putchar_unlocked@plt+0x22a8>
   136a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   136a4:	tst	r0, #1
   136a8:	beq	136d4 <putchar_unlocked@plt+0x22a8>
   136ac:	cmp	r8, sl
   136b0:	movcc	r0, #39	; 0x27
   136b4:	strbcc	r0, [r5, r8]
   136b8:	add	r0, r8, #1
   136bc:	cmp	r0, sl
   136c0:	movcc	r1, #39	; 0x27
   136c4:	strbcc	r1, [r5, r0]
   136c8:	add	r8, r8, #2
   136cc:	mov	r0, #0
   136d0:	str	r0, [fp, #-56]	; 0xffffffc8
   136d4:	mov	r1, r6
   136d8:	mov	r0, r4
   136dc:	cmp	r8, sl
   136e0:	strbcc	r0, [r5, r8]
   136e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   136e8:	and	r0, r0, r1
   136ec:	str	r0, [fp, #-48]	; 0xffffffd0
   136f0:	add	r8, r8, #1
   136f4:	add	r7, r7, #1
   136f8:	cmn	lr, #1
   136fc:	bne	13050 <putchar_unlocked@plt+0x1c24>
   13700:	b	1305c <putchar_unlocked@plt+0x1c30>
   13704:	mov	r9, #0
   13708:	ldr	r1, [sp, #92]	; 0x5c
   1370c:	tst	r1, #1
   13710:	mov	r6, #0
   13714:	mov	r1, #0
   13718:	beq	13318 <putchar_unlocked@plt+0x1eec>
   1371c:	b	13360 <putchar_unlocked@plt+0x1f34>
   13720:	mov	r4, #0
   13724:	ldr	r0, [sp, #40]	; 0x28
   13728:	cmp	r0, #0
   1372c:	mov	r9, #0
   13730:	mov	r6, #0
   13734:	beq	13318 <putchar_unlocked@plt+0x1eec>
   13738:	b	136f4 <putchar_unlocked@plt+0x22c8>
   1373c:	mov	r6, #1
   13740:	b	13318 <putchar_unlocked@plt+0x1eec>
   13744:	mov	r0, #0
   13748:	str	r0, [fp, #-36]	; 0xffffffdc
   1374c:	str	r0, [fp, #-40]	; 0xffffffd8
   13750:	cmn	lr, #1
   13754:	bne	13768 <putchar_unlocked@plt+0x233c>
   13758:	mov	r0, ip
   1375c:	bl	11300 <strlen@plt>
   13760:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13764:	mov	lr, r0
   13768:	ldr	r0, [sp, #76]	; 0x4c
   1376c:	add	r0, r0, r7
   13770:	str	r0, [sp, #24]
   13774:	mov	r6, #1
   13778:	mov	r2, #0
   1377c:	sub	r0, fp, #40	; 0x28
   13780:	mov	r3, r0
   13784:	str	r5, [sp, #28]
   13788:	str	lr, [sp, #32]
   1378c:	b	137d0 <putchar_unlocked@plt+0x23a4>
   13790:	ldr	r5, [sp, #52]	; 0x34
   13794:	add	r5, r0, r5
   13798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1379c:	bl	11210 <iswprint@plt>
   137a0:	cmp	r0, #0
   137a4:	movwne	r0, #1
   137a8:	and	r6, r6, r0
   137ac:	sub	r0, fp, #40	; 0x28
   137b0:	bl	111a4 <mbsinit@plt>
   137b4:	sub	r3, fp, #40	; 0x28
   137b8:	mov	r2, r5
   137bc:	ldr	lr, [sp, #32]
   137c0:	cmp	r0, #0
   137c4:	ldr	r5, [sp, #28]
   137c8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   137cc:	bne	1365c <putchar_unlocked@plt+0x2230>
   137d0:	str	r2, [sp, #52]	; 0x34
   137d4:	add	r0, r2, r7
   137d8:	add	r1, ip, r0
   137dc:	str	r0, [sp, #48]	; 0x30
   137e0:	sub	r2, lr, r0
   137e4:	sub	r0, fp, #44	; 0x2c
   137e8:	bl	15724 <putchar_unlocked@plt+0x42f8>
   137ec:	cmp	r0, #0
   137f0:	beq	13b68 <putchar_unlocked@plt+0x273c>
   137f4:	cmn	r0, #1
   137f8:	beq	13b24 <putchar_unlocked@plt+0x26f8>
   137fc:	cmn	r0, #2
   13800:	ldr	lr, [sp, #32]
   13804:	beq	13b2c <putchar_unlocked@plt+0x2700>
   13808:	cmp	r0, #2
   1380c:	mov	r1, #0
   13810:	movwcc	r1, #1
   13814:	ldr	r2, [sp, #68]	; 0x44
   13818:	eor	r2, r2, #1
   1381c:	orrs	r1, r2, r1
   13820:	bne	13790 <putchar_unlocked@plt+0x2364>
   13824:	ldr	r1, [sp, #52]	; 0x34
   13828:	ldr	r2, [sp, #24]
   1382c:	add	r1, r2, r1
   13830:	sub	r2, r0, #1
   13834:	b	13844 <putchar_unlocked@plt+0x2418>
   13838:	add	r1, r1, #1
   1383c:	subs	r2, r2, #1
   13840:	beq	13790 <putchar_unlocked@plt+0x2364>
   13844:	ldrb	r3, [r1]
   13848:	sub	r3, r3, #91	; 0x5b
   1384c:	cmp	r3, #33	; 0x21
   13850:	bhi	13838 <putchar_unlocked@plt+0x240c>
   13854:	add	r5, pc, #0
   13858:	ldr	pc, [r5, r3, lsl #2]
   1385c:	andeq	r3, r1, r4, asr ip
   13860:	andeq	r3, r1, r4, asr ip
   13864:	andeq	r3, r1, r8, lsr r8
   13868:	andeq	r3, r1, r4, asr ip
   1386c:	andeq	r3, r1, r8, lsr r8
   13870:	andeq	r3, r1, r4, asr ip
   13874:	andeq	r3, r1, r8, lsr r8
   13878:	andeq	r3, r1, r8, lsr r8
   1387c:	andeq	r3, r1, r8, lsr r8
   13880:	andeq	r3, r1, r8, lsr r8
   13884:	andeq	r3, r1, r8, lsr r8
   13888:	andeq	r3, r1, r8, lsr r8
   1388c:	andeq	r3, r1, r8, lsr r8
   13890:	andeq	r3, r1, r8, lsr r8
   13894:	andeq	r3, r1, r8, lsr r8
   13898:	andeq	r3, r1, r8, lsr r8
   1389c:	andeq	r3, r1, r8, lsr r8
   138a0:	andeq	r3, r1, r8, lsr r8
   138a4:	andeq	r3, r1, r8, lsr r8
   138a8:	andeq	r3, r1, r8, lsr r8
   138ac:	andeq	r3, r1, r8, lsr r8
   138b0:	andeq	r3, r1, r8, lsr r8
   138b4:	andeq	r3, r1, r8, lsr r8
   138b8:	andeq	r3, r1, r8, lsr r8
   138bc:	andeq	r3, r1, r8, lsr r8
   138c0:	andeq	r3, r1, r8, lsr r8
   138c4:	andeq	r3, r1, r8, lsr r8
   138c8:	andeq	r3, r1, r8, lsr r8
   138cc:	andeq	r3, r1, r8, lsr r8
   138d0:	andeq	r3, r1, r8, lsr r8
   138d4:	andeq	r3, r1, r8, lsr r8
   138d8:	andeq	r3, r1, r8, lsr r8
   138dc:	andeq	r3, r1, r8, lsr r8
   138e0:	andeq	r3, r1, r4, asr ip
   138e4:	mov	r8, r0
   138e8:	b	13318 <putchar_unlocked@plt+0x1eec>
   138ec:	ldr	r0, [sp, #36]	; 0x24
   138f0:	cmp	r0, #0
   138f4:	beq	13994 <putchar_unlocked@plt+0x2568>
   138f8:	add	r0, r7, #2
   138fc:	cmp	r0, lr
   13900:	bcs	13994 <putchar_unlocked@plt+0x2568>
   13904:	add	r1, r7, ip
   13908:	ldrb	r1, [r1, #1]
   1390c:	cmp	r1, #63	; 0x3f
   13910:	bne	13994 <putchar_unlocked@plt+0x2568>
   13914:	ldrb	r1, [ip, r0]
   13918:	sub	r2, r1, #33	; 0x21
   1391c:	cmp	r2, #29
   13920:	bhi	13994 <putchar_unlocked@plt+0x2568>
   13924:	mov	r3, #1
   13928:	movw	r6, #20929	; 0x51c1
   1392c:	movt	r6, #14336	; 0x3800
   13930:	tst	r6, r3, lsl r2
   13934:	beq	13994 <putchar_unlocked@plt+0x2568>
   13938:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1393c:	tst	r2, #1
   13940:	bne	13c5c <putchar_unlocked@plt+0x2830>
   13944:	cmp	r8, sl
   13948:	movcc	r2, #63	; 0x3f
   1394c:	strbcc	r2, [r5, r8]
   13950:	add	r2, r8, #1
   13954:	cmp	r2, sl
   13958:	movcc	r3, #34	; 0x22
   1395c:	strbcc	r3, [r5, r2]
   13960:	add	r2, r8, #2
   13964:	cmp	r2, sl
   13968:	movcc	r3, #34	; 0x22
   1396c:	strbcc	r3, [r5, r2]
   13970:	add	r2, r8, #3
   13974:	cmp	r2, sl
   13978:	movcc	r3, #63	; 0x3f
   1397c:	strbcc	r3, [r5, r2]
   13980:	add	r8, r8, #4
   13984:	mov	r7, r0
   13988:	mov	r4, r1
   1398c:	mov	r6, #0
   13990:	b	13318 <putchar_unlocked@plt+0x1eec>
   13994:	mov	r6, #0
   13998:	b	13318 <putchar_unlocked@plt+0x1eec>
   1399c:	add	r0, r2, r7
   139a0:	str	r0, [sp, #52]	; 0x34
   139a4:	mov	r2, #0
   139a8:	ldr	lr, [sp, #32]
   139ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139b0:	str	r1, [sp, #48]	; 0x30
   139b4:	tst	r1, #1
   139b8:	bne	13a94 <putchar_unlocked@plt+0x2668>
   139bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139c0:	tst	r1, #1
   139c4:	bne	13c5c <putchar_unlocked@plt+0x2830>
   139c8:	mov	r3, r0
   139cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   139d0:	subs	r1, r0, #2
   139d4:	movwne	r1, #1
   139d8:	orr	r1, r1, r3
   139dc:	tst	r1, #1
   139e0:	bne	13a18 <putchar_unlocked@plt+0x25ec>
   139e4:	cmp	r8, sl
   139e8:	movcc	r0, #39	; 0x27
   139ec:	strbcc	r0, [r5, r8]
   139f0:	add	r2, r8, #1
   139f4:	cmp	r2, sl
   139f8:	movcc	r0, #36	; 0x24
   139fc:	strbcc	r0, [r5, r2]
   13a00:	add	r2, r8, #2
   13a04:	cmp	r2, sl
   13a08:	movcc	r0, #39	; 0x27
   13a0c:	strbcc	r0, [r5, r2]
   13a10:	add	r8, r8, #3
   13a14:	mov	r3, #1
   13a18:	cmp	r8, sl
   13a1c:	movcc	r1, #92	; 0x5c
   13a20:	strbcc	r1, [r5, r8]
   13a24:	add	r2, r8, #1
   13a28:	cmp	r2, sl
   13a2c:	bcs	13a40 <putchar_unlocked@plt+0x2614>
   13a30:	uxtb	r1, r4
   13a34:	mov	r0, #48	; 0x30
   13a38:	orr	r1, r0, r1, lsr #6
   13a3c:	strb	r1, [r5, r2]
   13a40:	add	r2, r8, #2
   13a44:	cmp	r2, sl
   13a48:	lsrcc	r1, r4, #3
   13a4c:	movcc	r0, #6
   13a50:	bficc	r1, r0, #3, #29
   13a54:	strbcc	r1, [r5, r2]
   13a58:	mov	r0, #6
   13a5c:	bfi	r4, r0, #3, #29
   13a60:	add	r8, r8, #3
   13a64:	mov	r2, #1
   13a68:	mov	r0, r3
   13a6c:	b	13ab8 <putchar_unlocked@plt+0x268c>
   13a70:	cmp	r8, sl
   13a74:	strbcc	r4, [r5, r8]
   13a78:	ldr	r1, [sp, #76]	; 0x4c
   13a7c:	ldrb	r4, [r1, r7]
   13a80:	add	r8, r8, #1
   13a84:	mov	r7, r3
   13a88:	ldr	r1, [sp, #48]	; 0x30
   13a8c:	tst	r1, #1
   13a90:	beq	139bc <putchar_unlocked@plt+0x2590>
   13a94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a98:	tst	r1, #1
   13a9c:	beq	13ab0 <putchar_unlocked@plt+0x2684>
   13aa0:	cmp	r8, sl
   13aa4:	movcc	r1, #92	; 0x5c
   13aa8:	strbcc	r1, [r5, r8]
   13aac:	add	r8, r8, #1
   13ab0:	mov	r1, #0
   13ab4:	str	r1, [fp, #-52]	; 0xffffffcc
   13ab8:	and	r9, r2, #1
   13abc:	add	r3, r7, #1
   13ac0:	ldr	r1, [sp, #52]	; 0x34
   13ac4:	cmp	r1, r3
   13ac8:	bls	13b0c <putchar_unlocked@plt+0x26e0>
   13acc:	cmp	r9, #0
   13ad0:	movwne	r9, #1
   13ad4:	mvn	r1, r0
   13ad8:	orr	r1, r1, r9
   13adc:	tst	r1, #1
   13ae0:	bne	13a70 <putchar_unlocked@plt+0x2644>
   13ae4:	cmp	r8, sl
   13ae8:	movcc	r1, #39	; 0x27
   13aec:	strbcc	r1, [r5, r8]
   13af0:	add	r1, r8, #1
   13af4:	cmp	r1, sl
   13af8:	movcc	r0, #39	; 0x27
   13afc:	strbcc	r0, [r5, r1]
   13b00:	add	r8, r8, #2
   13b04:	mov	r0, #0
   13b08:	b	13a70 <putchar_unlocked@plt+0x2644>
   13b0c:	str	r0, [fp, #-56]	; 0xffffffc8
   13b10:	cmp	r9, #0
   13b14:	movwne	r9, #1
   13b18:	cmp	r9, #0
   13b1c:	beq	136a0 <putchar_unlocked@plt+0x2274>
   13b20:	b	136d4 <putchar_unlocked@plt+0x22a8>
   13b24:	mov	r6, #0
   13b28:	b	13b68 <putchar_unlocked@plt+0x273c>
   13b2c:	mov	r6, #0
   13b30:	ldr	r0, [sp, #48]	; 0x30
   13b34:	cmp	r0, lr
   13b38:	bcs	13b68 <putchar_unlocked@plt+0x273c>
   13b3c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b40:	add	r0, ip, r7
   13b44:	ldr	r2, [sp, #52]	; 0x34
   13b48:	ldrb	r1, [r0, r2]
   13b4c:	cmp	r1, #0
   13b50:	beq	1365c <putchar_unlocked@plt+0x2230>
   13b54:	add	r2, r2, #1
   13b58:	add	r1, r7, r2
   13b5c:	cmp	r1, lr
   13b60:	bcc	13b48 <putchar_unlocked@plt+0x271c>
   13b64:	b	1365c <putchar_unlocked@plt+0x2230>
   13b68:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b6c:	ldr	r2, [sp, #52]	; 0x34
   13b70:	b	1365c <putchar_unlocked@plt+0x2230>
   13b74:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13b78:	eor	r0, r1, #2
   13b7c:	orr	r0, r0, r8
   13b80:	clz	r0, r0
   13b84:	lsr	r0, r0, #5
   13b88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13b8c:	tst	r3, r0
   13b90:	bne	13c5c <putchar_unlocked@plt+0x2830>
   13b94:	mov	r6, r5
   13b98:	subs	r0, r1, #2
   13b9c:	movwne	r0, #1
   13ba0:	orr	r0, r3, r0
   13ba4:	tst	r0, #1
   13ba8:	ldr	r2, [sp, #92]	; 0x5c
   13bac:	ldreq	r0, [sp, #64]	; 0x40
   13bb0:	eoreq	r0, r0, #1
   13bb4:	tsteq	r0, #1
   13bb8:	bne	13bf8 <putchar_unlocked@plt+0x27cc>
   13bbc:	mov	r9, lr
   13bc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13bc4:	tst	r0, #1
   13bc8:	bne	13cc4 <putchar_unlocked@plt+0x2898>
   13bcc:	ldr	r0, [sp, #84]	; 0x54
   13bd0:	cmp	r0, #0
   13bd4:	beq	13bf8 <putchar_unlocked@plt+0x27cc>
   13bd8:	mov	r0, #0
   13bdc:	str	r0, [fp, #-48]	; 0xffffffd0
   13be0:	mov	r1, #2
   13be4:	cmp	sl, #0
   13be8:	mov	r0, r2
   13bec:	mov	r4, r3
   13bf0:	ldr	r7, [sp, #84]	; 0x54
   13bf4:	beq	12dd0 <putchar_unlocked@plt+0x19a4>
   13bf8:	ldr	r1, [fp, #-84]	; 0xffffffac
   13bfc:	clz	r0, r1
   13c00:	lsr	r0, r0, #5
   13c04:	orr	r0, r0, r3
   13c08:	tst	r0, #1
   13c0c:	bne	13c38 <putchar_unlocked@plt+0x280c>
   13c10:	ldrb	r0, [r1]
   13c14:	cmp	r0, #0
   13c18:	beq	13c38 <putchar_unlocked@plt+0x280c>
   13c1c:	add	r1, r1, #1
   13c20:	cmp	r8, sl
   13c24:	strbcc	r0, [r6, r8]
   13c28:	add	r8, r8, #1
   13c2c:	ldrb	r0, [r1], #1
   13c30:	cmp	r0, #0
   13c34:	bne	13c20 <putchar_unlocked@plt+0x27f4>
   13c38:	cmp	r8, sl
   13c3c:	movcc	r0, #0
   13c40:	strbcc	r0, [r6, r8]
   13c44:	b	13cb8 <putchar_unlocked@plt+0x288c>
   13c48:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13c4c:	mov	lr, r4
   13c50:	b	13c5c <putchar_unlocked@plt+0x2830>
   13c54:	ldr	r5, [sp, #28]
   13c58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13c5c:	mov	r0, #0
   13c60:	ldr	r1, [fp, #12]
   13c64:	bic	r1, r1, #2
   13c68:	mov	r2, #2
   13c6c:	ldr	r3, [sp, #92]	; 0x5c
   13c70:	tst	r3, #1
   13c74:	movwne	r2, #4
   13c78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13c7c:	cmp	r3, #2
   13c80:	movne	r2, r3
   13c84:	str	r2, [sp]
   13c88:	str	r1, [sp, #4]
   13c8c:	str	r0, [sp, #8]
   13c90:	ldr	r0, [sp, #80]	; 0x50
   13c94:	str	r0, [sp, #12]
   13c98:	ldr	r0, [sp, #88]	; 0x58
   13c9c:	str	r0, [sp, #16]
   13ca0:	mov	r0, r5
   13ca4:	mov	r1, sl
   13ca8:	mov	r2, ip
   13cac:	mov	r3, lr
   13cb0:	bl	12d44 <putchar_unlocked@plt+0x1918>
   13cb4:	mov	r8, r0
   13cb8:	mov	r0, r8
   13cbc:	sub	sp, fp, #28
   13cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cc4:	mov	r0, #5
   13cc8:	str	r0, [sp]
   13ccc:	ldr	r0, [fp, #12]
   13cd0:	str	r0, [sp, #4]
   13cd4:	ldr	r0, [fp, #16]
   13cd8:	str	r0, [sp, #8]
   13cdc:	ldr	r0, [sp, #80]	; 0x50
   13ce0:	str	r0, [sp, #12]
   13ce4:	ldr	r0, [sp, #88]	; 0x58
   13ce8:	str	r0, [sp, #16]
   13cec:	mov	r0, r6
   13cf0:	ldr	r1, [sp, #84]	; 0x54
   13cf4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13cf8:	mov	r3, r9
   13cfc:	b	13cb0 <putchar_unlocked@plt+0x2884>
   13d00:	bl	11414 <abort@plt>
   13d04:	mov	r3, r2
   13d08:	mov	r2, #0
   13d0c:	b	13d10 <putchar_unlocked@plt+0x28e4>
   13d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d14:	add	fp, sp, #28
   13d18:	sub	sp, sp, #36	; 0x24
   13d1c:	mov	r4, r2
   13d20:	str	r2, [sp, #24]
   13d24:	mov	r5, r1
   13d28:	mov	r6, r0
   13d2c:	str	r0, [sp, #20]
   13d30:	movw	r8, #29176	; 0x71f8
   13d34:	movt	r8, #2
   13d38:	cmp	r3, #0
   13d3c:	movne	r8, r3
   13d40:	bl	11318 <__errno_location@plt>
   13d44:	str	r0, [sp, #28]
   13d48:	ldm	r8, {r3, r9}
   13d4c:	ldr	r1, [r8, #40]	; 0x28
   13d50:	ldr	r2, [r8, #44]	; 0x2c
   13d54:	ldr	r7, [r0]
   13d58:	str	r7, [sp, #32]
   13d5c:	add	sl, r8, #8
   13d60:	cmp	r4, #0
   13d64:	orreq	r9, r9, #1
   13d68:	stm	sp, {r3, r9, sl}
   13d6c:	str	r1, [sp, #12]
   13d70:	str	r2, [sp, #16]
   13d74:	mov	r0, #0
   13d78:	mov	r1, #0
   13d7c:	mov	r2, r6
   13d80:	mov	r3, r5
   13d84:	mov	r7, r5
   13d88:	bl	12d44 <putchar_unlocked@plt+0x1918>
   13d8c:	mov	r5, r0
   13d90:	add	r4, r0, #1
   13d94:	mov	r0, r4
   13d98:	bl	14e8c <putchar_unlocked@plt+0x3a60>
   13d9c:	mov	r6, r0
   13da0:	ldr	r0, [r8]
   13da4:	ldr	r1, [r8, #40]	; 0x28
   13da8:	ldr	r2, [r8, #44]	; 0x2c
   13dac:	stm	sp, {r0, r9, sl}
   13db0:	str	r1, [sp, #12]
   13db4:	str	r2, [sp, #16]
   13db8:	mov	r0, r6
   13dbc:	mov	r1, r4
   13dc0:	ldr	r2, [sp, #20]
   13dc4:	mov	r3, r7
   13dc8:	bl	12d44 <putchar_unlocked@plt+0x1918>
   13dcc:	ldr	r0, [sp, #24]
   13dd0:	ldr	r1, [sp, #32]
   13dd4:	ldr	r2, [sp, #28]
   13dd8:	str	r1, [r2]
   13ddc:	cmp	r0, #0
   13de0:	strne	r5, [r0]
   13de4:	mov	r0, r6
   13de8:	sub	sp, fp, #28
   13dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13df0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13df4:	add	fp, sp, #24
   13df8:	movw	r8, #28968	; 0x7128
   13dfc:	movt	r8, #2
   13e00:	ldr	r4, [r8]
   13e04:	movw	r5, #28972	; 0x712c
   13e08:	movt	r5, #2
   13e0c:	ldr	r0, [r5]
   13e10:	cmp	r0, #2
   13e14:	blt	13e40 <putchar_unlocked@plt+0x2a14>
   13e18:	add	r7, r4, #12
   13e1c:	mov	r6, #0
   13e20:	ldr	r0, [r7, r6, lsl #3]
   13e24:	bl	1290c <putchar_unlocked@plt+0x14e0>
   13e28:	add	r0, r6, #1
   13e2c:	ldr	r1, [r5]
   13e30:	add	r2, r6, #2
   13e34:	cmp	r2, r1
   13e38:	mov	r6, r0
   13e3c:	blt	13e20 <putchar_unlocked@plt+0x29f4>
   13e40:	ldr	r0, [r4, #4]
   13e44:	movw	r9, #29224	; 0x7228
   13e48:	movt	r9, #2
   13e4c:	cmp	r0, r9
   13e50:	movw	r7, #28976	; 0x7130
   13e54:	movt	r7, #2
   13e58:	beq	13e68 <putchar_unlocked@plt+0x2a3c>
   13e5c:	bl	1290c <putchar_unlocked@plt+0x14e0>
   13e60:	mov	r0, #256	; 0x100
   13e64:	stm	r7, {r0, r9}
   13e68:	cmp	r4, r7
   13e6c:	beq	13e7c <putchar_unlocked@plt+0x2a50>
   13e70:	mov	r0, r4
   13e74:	bl	1290c <putchar_unlocked@plt+0x14e0>
   13e78:	str	r7, [r8]
   13e7c:	mov	r0, #1
   13e80:	str	r0, [r5]
   13e84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e88:	movw	r3, #29176	; 0x71f8
   13e8c:	movt	r3, #2
   13e90:	mvn	r2, #0
   13e94:	b	13e98 <putchar_unlocked@plt+0x2a6c>
   13e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e9c:	add	fp, sp, #28
   13ea0:	sub	sp, sp, #44	; 0x2c
   13ea4:	mov	r7, r3
   13ea8:	str	r2, [sp, #36]	; 0x24
   13eac:	str	r1, [sp, #32]
   13eb0:	mov	r5, r0
   13eb4:	bl	11318 <__errno_location@plt>
   13eb8:	cmp	r5, #0
   13ebc:	bmi	1402c <putchar_unlocked@plt+0x2c00>
   13ec0:	cmn	r5, #-2147483647	; 0x80000001
   13ec4:	beq	1402c <putchar_unlocked@plt+0x2c00>
   13ec8:	movw	r4, #28968	; 0x7128
   13ecc:	movt	r4, #2
   13ed0:	ldr	r6, [r4]
   13ed4:	str	r0, [sp, #28]
   13ed8:	ldr	r0, [r0]
   13edc:	str	r0, [sp, #24]
   13ee0:	movw	r8, #28972	; 0x712c
   13ee4:	movt	r8, #2
   13ee8:	ldr	r1, [r8]
   13eec:	cmp	r1, r5
   13ef0:	ble	13efc <putchar_unlocked@plt+0x2ad0>
   13ef4:	mov	sl, r6
   13ef8:	b	13f68 <putchar_unlocked@plt+0x2b3c>
   13efc:	str	r1, [fp, #-32]	; 0xffffffe0
   13f00:	mov	r0, #8
   13f04:	str	r0, [sp]
   13f08:	movw	r9, #28976	; 0x7130
   13f0c:	movt	r9, #2
   13f10:	subs	r0, r6, r9
   13f14:	movne	r0, r6
   13f18:	sub	r1, r5, r1
   13f1c:	add	r2, r1, #1
   13f20:	sub	r1, fp, #32
   13f24:	mvn	r3, #-2147483648	; 0x80000000
   13f28:	bl	14f68 <putchar_unlocked@plt+0x3b3c>
   13f2c:	mov	sl, r0
   13f30:	str	r0, [r4]
   13f34:	cmp	r6, r9
   13f38:	bne	13f44 <putchar_unlocked@plt+0x2b18>
   13f3c:	ldrd	r0, [r9]
   13f40:	stm	sl, {r0, r1}
   13f44:	ldr	r1, [r8]
   13f48:	add	r0, sl, r1, lsl #3
   13f4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f50:	sub	r1, r2, r1
   13f54:	lsl	r2, r1, #3
   13f58:	mov	r1, #0
   13f5c:	bl	1133c <memset@plt>
   13f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f64:	str	r0, [r8]
   13f68:	mov	r9, sl
   13f6c:	ldr	r6, [r9, r5, lsl #3]!
   13f70:	ldr	r4, [r9, #4]!
   13f74:	ldm	r7, {r0, r1}
   13f78:	ldr	r2, [r7, #40]	; 0x28
   13f7c:	ldr	r3, [r7, #44]	; 0x2c
   13f80:	orr	r8, r1, #1
   13f84:	add	r1, r7, #8
   13f88:	stm	sp, {r0, r8}
   13f8c:	str	r1, [sp, #20]
   13f90:	add	r0, sp, #8
   13f94:	stm	r0, {r1, r2, r3}
   13f98:	mov	r0, r4
   13f9c:	mov	r1, r6
   13fa0:	ldr	r2, [sp, #32]
   13fa4:	ldr	r3, [sp, #36]	; 0x24
   13fa8:	bl	12d44 <putchar_unlocked@plt+0x1918>
   13fac:	cmp	r6, r0
   13fb0:	bhi	14014 <putchar_unlocked@plt+0x2be8>
   13fb4:	add	r6, r0, #1
   13fb8:	str	r6, [sl, r5, lsl #3]
   13fbc:	movw	r0, #29224	; 0x7228
   13fc0:	movt	r0, #2
   13fc4:	cmp	r4, r0
   13fc8:	beq	13fd4 <putchar_unlocked@plt+0x2ba8>
   13fcc:	mov	r0, r4
   13fd0:	bl	1290c <putchar_unlocked@plt+0x14e0>
   13fd4:	mov	r0, r6
   13fd8:	bl	14e8c <putchar_unlocked@plt+0x3a60>
   13fdc:	mov	r4, r0
   13fe0:	str	r0, [r9]
   13fe4:	ldr	r0, [r7]
   13fe8:	ldr	r1, [r7, #40]	; 0x28
   13fec:	ldr	r2, [r7, #44]	; 0x2c
   13ff0:	stm	sp, {r0, r8}
   13ff4:	ldr	r0, [sp, #20]
   13ff8:	add	r3, sp, #8
   13ffc:	stm	r3, {r0, r1, r2}
   14000:	mov	r0, r4
   14004:	mov	r1, r6
   14008:	ldr	r2, [sp, #32]
   1400c:	ldr	r3, [sp, #36]	; 0x24
   14010:	bl	12d44 <putchar_unlocked@plt+0x1918>
   14014:	ldr	r0, [sp, #28]
   14018:	ldr	r1, [sp, #24]
   1401c:	str	r1, [r0]
   14020:	mov	r0, r4
   14024:	sub	sp, fp, #28
   14028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1402c:	bl	11414 <abort@plt>
   14030:	movw	r3, #29176	; 0x71f8
   14034:	movt	r3, #2
   14038:	b	13e98 <putchar_unlocked@plt+0x2a6c>
   1403c:	mov	r1, r0
   14040:	mov	r0, #0
   14044:	b	13e88 <putchar_unlocked@plt+0x2a5c>
   14048:	mov	r2, r1
   1404c:	mov	r1, r0
   14050:	mov	r0, #0
   14054:	b	14030 <putchar_unlocked@plt+0x2c04>
   14058:	push	{r4, r5, r6, sl, fp, lr}
   1405c:	add	fp, sp, #16
   14060:	sub	sp, sp, #48	; 0x30
   14064:	mov	r4, r2
   14068:	mov	r5, r0
   1406c:	mov	r6, sp
   14070:	mov	r0, r6
   14074:	bl	14094 <putchar_unlocked@plt+0x2c68>
   14078:	mov	r0, r5
   1407c:	mov	r1, r4
   14080:	mvn	r2, #0
   14084:	mov	r3, r6
   14088:	bl	13e98 <putchar_unlocked@plt+0x2a6c>
   1408c:	sub	sp, fp, #16
   14090:	pop	{r4, r5, r6, sl, fp, pc}
   14094:	push	{fp, lr}
   14098:	mov	fp, sp
   1409c:	vmov.i32	q8, #0	; 0x00000000
   140a0:	mov	r2, #32
   140a4:	mov	r3, r0
   140a8:	vst1.32	{d16-d17}, [r3], r2
   140ac:	vst1.32	{d16-d17}, [r3]
   140b0:	add	r2, r0, #16
   140b4:	vst1.32	{d16-d17}, [r2]
   140b8:	cmp	r1, #10
   140bc:	strne	r1, [r0]
   140c0:	popne	{fp, pc}
   140c4:	bl	11414 <abort@plt>
   140c8:	push	{r4, r5, r6, r7, fp, lr}
   140cc:	add	fp, sp, #16
   140d0:	sub	sp, sp, #48	; 0x30
   140d4:	mov	r4, r3
   140d8:	mov	r5, r2
   140dc:	mov	r6, r0
   140e0:	mov	r7, sp
   140e4:	mov	r0, r7
   140e8:	bl	14094 <putchar_unlocked@plt+0x2c68>
   140ec:	mov	r0, r6
   140f0:	mov	r1, r5
   140f4:	mov	r2, r4
   140f8:	mov	r3, r7
   140fc:	bl	13e98 <putchar_unlocked@plt+0x2a6c>
   14100:	sub	sp, fp, #16
   14104:	pop	{r4, r5, r6, r7, fp, pc}
   14108:	mov	r2, r1
   1410c:	mov	r1, r0
   14110:	mov	r0, #0
   14114:	b	14058 <putchar_unlocked@plt+0x2c2c>
   14118:	mov	r3, r2
   1411c:	mov	r2, r1
   14120:	mov	r1, r0
   14124:	mov	r0, #0
   14128:	b	140c8 <putchar_unlocked@plt+0x2c9c>
   1412c:	push	{r4, r5, r6, sl, fp, lr}
   14130:	add	fp, sp, #16
   14134:	sub	sp, sp, #48	; 0x30
   14138:	mov	r4, r1
   1413c:	mov	r5, r0
   14140:	movw	r0, #29176	; 0x71f8
   14144:	movt	r0, #2
   14148:	add	r1, r0, #16
   1414c:	mov	r3, #32
   14150:	vld1.64	{d16-d17}, [r0], r3
   14154:	vld1.64	{d18-d19}, [r1]
   14158:	mov	r6, sp
   1415c:	add	r1, r6, #16
   14160:	vld1.64	{d20-d21}, [r0]
   14164:	vst1.64	{d18-d19}, [r1]
   14168:	mov	r0, r6
   1416c:	vst1.64	{d16-d17}, [r0], r3
   14170:	vst1.64	{d20-d21}, [r0]
   14174:	mov	r0, r6
   14178:	mov	r1, r2
   1417c:	mov	r2, #1
   14180:	bl	12c38 <putchar_unlocked@plt+0x180c>
   14184:	mov	r0, #0
   14188:	mov	r1, r5
   1418c:	mov	r2, r4
   14190:	mov	r3, r6
   14194:	bl	13e98 <putchar_unlocked@plt+0x2a6c>
   14198:	sub	sp, fp, #16
   1419c:	pop	{r4, r5, r6, sl, fp, pc}
   141a0:	mov	r2, r1
   141a4:	mvn	r1, #0
   141a8:	b	1412c <putchar_unlocked@plt+0x2d00>
   141ac:	mov	r1, #58	; 0x3a
   141b0:	b	141a0 <putchar_unlocked@plt+0x2d74>
   141b4:	mov	r2, #58	; 0x3a
   141b8:	b	1412c <putchar_unlocked@plt+0x2d00>
   141bc:	push	{r4, r5, r6, sl, fp, lr}
   141c0:	add	fp, sp, #16
   141c4:	sub	sp, sp, #48	; 0x30
   141c8:	mov	r4, r2
   141cc:	mov	r5, r0
   141d0:	mov	r6, sp
   141d4:	mov	r0, r6
   141d8:	bl	14094 <putchar_unlocked@plt+0x2c68>
   141dc:	mov	r0, r6
   141e0:	mov	r1, #58	; 0x3a
   141e4:	mov	r2, #1
   141e8:	bl	12c38 <putchar_unlocked@plt+0x180c>
   141ec:	mov	r0, r5
   141f0:	mov	r1, r4
   141f4:	mvn	r2, #0
   141f8:	mov	r3, r6
   141fc:	bl	13e98 <putchar_unlocked@plt+0x2a6c>
   14200:	sub	sp, fp, #16
   14204:	pop	{r4, r5, r6, sl, fp, pc}
   14208:	push	{fp, lr}
   1420c:	mov	fp, sp
   14210:	sub	sp, sp, #8
   14214:	mvn	ip, #0
   14218:	str	ip, [sp]
   1421c:	bl	14228 <putchar_unlocked@plt+0x2dfc>
   14220:	mov	sp, fp
   14224:	pop	{fp, pc}
   14228:	push	{r4, r5, r6, r7, fp, lr}
   1422c:	add	fp, sp, #16
   14230:	sub	sp, sp, #48	; 0x30
   14234:	mov	r7, r3
   14238:	mov	r5, r0
   1423c:	movw	r0, #29176	; 0x71f8
   14240:	movt	r0, #2
   14244:	add	r3, r0, #16
   14248:	mov	r4, #32
   1424c:	vld1.64	{d16-d17}, [r0], r4
   14250:	vld1.64	{d18-d19}, [r3]
   14254:	mov	r6, sp
   14258:	add	r3, r6, #16
   1425c:	vld1.64	{d20-d21}, [r0]
   14260:	vst1.64	{d18-d19}, [r3]
   14264:	mov	r0, r6
   14268:	vst1.64	{d16-d17}, [r0], r4
   1426c:	vst1.64	{d20-d21}, [r0]
   14270:	mov	r0, r6
   14274:	bl	12c90 <putchar_unlocked@plt+0x1864>
   14278:	ldr	r2, [fp, #8]
   1427c:	mov	r0, r5
   14280:	mov	r1, r7
   14284:	mov	r3, r6
   14288:	bl	13e98 <putchar_unlocked@plt+0x2a6c>
   1428c:	sub	sp, fp, #16
   14290:	pop	{r4, r5, r6, r7, fp, pc}
   14294:	mov	r3, r2
   14298:	mov	r2, r1
   1429c:	mov	r1, r0
   142a0:	mov	r0, #0
   142a4:	b	14208 <putchar_unlocked@plt+0x2ddc>
   142a8:	push	{fp, lr}
   142ac:	mov	fp, sp
   142b0:	sub	sp, sp, #8
   142b4:	mov	ip, r2
   142b8:	mov	r2, r1
   142bc:	mov	r1, r0
   142c0:	str	r3, [sp]
   142c4:	mov	r0, #0
   142c8:	mov	r3, ip
   142cc:	bl	14228 <putchar_unlocked@plt+0x2dfc>
   142d0:	mov	sp, fp
   142d4:	pop	{fp, pc}
   142d8:	movw	r3, #28984	; 0x7138
   142dc:	movt	r3, #2
   142e0:	b	13e98 <putchar_unlocked@plt+0x2a6c>
   142e4:	mov	r2, r1
   142e8:	mov	r1, r0
   142ec:	mov	r0, #0
   142f0:	b	142d8 <putchar_unlocked@plt+0x2eac>
   142f4:	mvn	r2, #0
   142f8:	b	142d8 <putchar_unlocked@plt+0x2eac>
   142fc:	mov	r1, r0
   14300:	mov	r0, #0
   14304:	b	142f4 <putchar_unlocked@plt+0x2ec8>
   14308:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1430c:	add	fp, sp, #24
   14310:	sub	sp, sp, #16
   14314:	mov	r4, r1
   14318:	mov	r5, r0
   1431c:	mov	r7, #0
   14320:	mov	r0, #0
   14324:	mov	r1, r5
   14328:	mov	r2, #5
   1432c:	bl	111d4 <dcgettext@plt>
   14330:	cmp	r0, r5
   14334:	beq	14340 <putchar_unlocked@plt+0x2f14>
   14338:	sub	sp, fp, #24
   1433c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14340:	bl	156ec <putchar_unlocked@plt+0x42c0>
   14344:	mov	r6, r0
   14348:	mov	r8, #56	; 0x38
   1434c:	mov	r0, #45	; 0x2d
   14350:	stm	sp, {r0, r8}
   14354:	str	r7, [sp, #8]
   14358:	str	r7, [sp, #12]
   1435c:	mov	r0, r6
   14360:	mov	r1, #85	; 0x55
   14364:	mov	r2, #84	; 0x54
   14368:	mov	r3, #70	; 0x46
   1436c:	bl	14404 <putchar_unlocked@plt+0x2fd8>
   14370:	cmp	r0, #0
   14374:	beq	14390 <putchar_unlocked@plt+0x2f64>
   14378:	ldrb	r1, [r5]
   1437c:	movw	r2, #25122	; 0x6222
   14380:	movt	r2, #1
   14384:	movw	r0, #25126	; 0x6226
   14388:	movt	r0, #1
   1438c:	b	143d4 <putchar_unlocked@plt+0x2fa8>
   14390:	mov	r0, #48	; 0x30
   14394:	mov	r1, #51	; 0x33
   14398:	str	r8, [sp]
   1439c:	stmib	sp, {r0, r1}
   143a0:	str	r0, [sp, #12]
   143a4:	mov	r0, r6
   143a8:	mov	r1, #71	; 0x47
   143ac:	mov	r2, #66	; 0x42
   143b0:	mov	r3, #49	; 0x31
   143b4:	bl	14404 <putchar_unlocked@plt+0x2fd8>
   143b8:	cmp	r0, #0
   143bc:	beq	143e4 <putchar_unlocked@plt+0x2fb8>
   143c0:	ldrb	r1, [r5]
   143c4:	movw	r2, #25130	; 0x622a
   143c8:	movt	r2, #1
   143cc:	movw	r0, #25134	; 0x622e
   143d0:	movt	r0, #1
   143d4:	cmp	r1, #96	; 0x60
   143d8:	moveq	r0, r2
   143dc:	sub	sp, fp, #24
   143e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143e4:	movw	r1, #25116	; 0x621c
   143e8:	movt	r1, #1
   143ec:	movw	r0, #25120	; 0x6220
   143f0:	movt	r0, #1
   143f4:	cmp	r4, #9
   143f8:	moveq	r0, r1
   143fc:	sub	sp, fp, #24
   14400:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14404:	push	{r4, r5, r6, r7, fp, lr}
   14408:	add	fp, sp, #16
   1440c:	sub	sp, sp, #16
   14410:	mov	r4, r3
   14414:	mov	r5, r2
   14418:	mov	r7, r1
   1441c:	mov	r6, r0
   14420:	mov	r0, r1
   14424:	bl	155a8 <putchar_unlocked@plt+0x417c>
   14428:	ldrb	r1, [r6]
   1442c:	cmp	r0, #0
   14430:	andne	r1, r1, #223	; 0xdf
   14434:	mov	r0, #0
   14438:	cmp	r1, r7
   1443c:	bne	14474 <putchar_unlocked@plt+0x3048>
   14440:	cmp	r7, #0
   14444:	beq	1447c <putchar_unlocked@plt+0x3050>
   14448:	ldr	r0, [fp, #20]
   1444c:	ldr	r1, [fp, #16]
   14450:	ldr	r2, [fp, #12]
   14454:	ldr	r3, [fp, #8]
   14458:	str	r2, [sp]
   1445c:	str	r1, [sp, #4]
   14460:	str	r0, [sp, #8]
   14464:	mov	r0, r6
   14468:	mov	r1, r5
   1446c:	mov	r2, r4
   14470:	bl	14488 <putchar_unlocked@plt+0x305c>
   14474:	sub	sp, fp, #16
   14478:	pop	{r4, r5, r6, r7, fp, pc}
   1447c:	mov	r0, #1
   14480:	sub	sp, fp, #16
   14484:	pop	{r4, r5, r6, r7, fp, pc}
   14488:	push	{r4, r5, r6, r7, fp, lr}
   1448c:	add	fp, sp, #16
   14490:	sub	sp, sp, #8
   14494:	mov	r4, r3
   14498:	mov	r5, r2
   1449c:	mov	r7, r1
   144a0:	mov	r6, r0
   144a4:	mov	r0, r1
   144a8:	bl	155a8 <putchar_unlocked@plt+0x417c>
   144ac:	ldrb	r1, [r6, #1]
   144b0:	cmp	r0, #0
   144b4:	andne	r1, r1, #223	; 0xdf
   144b8:	mov	r0, #0
   144bc:	cmp	r1, r7
   144c0:	bne	144f0 <putchar_unlocked@plt+0x30c4>
   144c4:	cmp	r7, #0
   144c8:	beq	144f8 <putchar_unlocked@plt+0x30cc>
   144cc:	ldr	r0, [fp, #16]
   144d0:	ldr	r1, [fp, #12]
   144d4:	ldr	r3, [fp, #8]
   144d8:	str	r1, [sp]
   144dc:	str	r0, [sp, #4]
   144e0:	mov	r0, r6
   144e4:	mov	r1, r5
   144e8:	mov	r2, r4
   144ec:	bl	14504 <putchar_unlocked@plt+0x30d8>
   144f0:	sub	sp, fp, #16
   144f4:	pop	{r4, r5, r6, r7, fp, pc}
   144f8:	mov	r0, #1
   144fc:	sub	sp, fp, #16
   14500:	pop	{r4, r5, r6, r7, fp, pc}
   14504:	push	{r4, r5, r6, r7, fp, lr}
   14508:	add	fp, sp, #16
   1450c:	sub	sp, sp, #8
   14510:	mov	r4, r3
   14514:	mov	r5, r2
   14518:	mov	r7, r1
   1451c:	mov	r6, r0
   14520:	mov	r0, r1
   14524:	bl	155a8 <putchar_unlocked@plt+0x417c>
   14528:	ldrb	r1, [r6, #2]
   1452c:	cmp	r0, #0
   14530:	andne	r1, r1, #223	; 0xdf
   14534:	mov	r0, #0
   14538:	cmp	r1, r7
   1453c:	bne	14564 <putchar_unlocked@plt+0x3138>
   14540:	cmp	r7, #0
   14544:	beq	1456c <putchar_unlocked@plt+0x3140>
   14548:	ldr	r0, [fp, #12]
   1454c:	ldr	r3, [fp, #8]
   14550:	str	r0, [sp]
   14554:	mov	r0, r6
   14558:	mov	r1, r5
   1455c:	mov	r2, r4
   14560:	bl	14578 <putchar_unlocked@plt+0x314c>
   14564:	sub	sp, fp, #16
   14568:	pop	{r4, r5, r6, r7, fp, pc}
   1456c:	mov	r0, #1
   14570:	sub	sp, fp, #16
   14574:	pop	{r4, r5, r6, r7, fp, pc}
   14578:	push	{r4, r5, r6, r7, fp, lr}
   1457c:	add	fp, sp, #16
   14580:	mov	r4, r3
   14584:	mov	r5, r2
   14588:	mov	r7, r1
   1458c:	mov	r6, r0
   14590:	mov	r0, r1
   14594:	bl	155a8 <putchar_unlocked@plt+0x417c>
   14598:	ldrb	r1, [r6, #3]
   1459c:	ldr	r3, [fp, #8]
   145a0:	cmp	r0, #0
   145a4:	andne	r1, r1, #223	; 0xdf
   145a8:	mov	r0, #0
   145ac:	cmp	r1, r7
   145b0:	bne	145d4 <putchar_unlocked@plt+0x31a8>
   145b4:	cmp	r7, #0
   145b8:	beq	145d0 <putchar_unlocked@plt+0x31a4>
   145bc:	mov	r0, r6
   145c0:	mov	r1, r5
   145c4:	mov	r2, r4
   145c8:	pop	{r4, r5, r6, r7, fp, lr}
   145cc:	b	145d8 <putchar_unlocked@plt+0x31ac>
   145d0:	mov	r0, #1
   145d4:	pop	{r4, r5, r6, r7, fp, pc}
   145d8:	push	{r4, r5, r6, r7, fp, lr}
   145dc:	add	fp, sp, #16
   145e0:	mov	r4, r3
   145e4:	mov	r5, r2
   145e8:	mov	r7, r1
   145ec:	mov	r6, r0
   145f0:	mov	r0, r1
   145f4:	bl	155a8 <putchar_unlocked@plt+0x417c>
   145f8:	ldrb	r1, [r6, #4]
   145fc:	cmp	r0, #0
   14600:	andne	r1, r1, #223	; 0xdf
   14604:	mov	r0, #0
   14608:	cmp	r1, r7
   1460c:	bne	14630 <putchar_unlocked@plt+0x3204>
   14610:	cmp	r7, #0
   14614:	beq	1462c <putchar_unlocked@plt+0x3200>
   14618:	mov	r0, r6
   1461c:	mov	r1, r5
   14620:	mov	r2, r4
   14624:	pop	{r4, r5, r6, r7, fp, lr}
   14628:	b	14634 <putchar_unlocked@plt+0x3208>
   1462c:	mov	r0, #1
   14630:	pop	{r4, r5, r6, r7, fp, pc}
   14634:	push	{r4, r5, r6, sl, fp, lr}
   14638:	add	fp, sp, #16
   1463c:	mov	r4, r2
   14640:	mov	r6, r1
   14644:	mov	r5, r0
   14648:	mov	r0, r1
   1464c:	bl	155a8 <putchar_unlocked@plt+0x417c>
   14650:	ldrb	r1, [r5, #5]
   14654:	cmp	r0, #0
   14658:	andne	r1, r1, #223	; 0xdf
   1465c:	mov	r0, #0
   14660:	cmp	r1, r6
   14664:	bne	14684 <putchar_unlocked@plt+0x3258>
   14668:	cmp	r6, #0
   1466c:	beq	14680 <putchar_unlocked@plt+0x3254>
   14670:	mov	r0, r5
   14674:	mov	r1, r4
   14678:	pop	{r4, r5, r6, sl, fp, lr}
   1467c:	b	14688 <putchar_unlocked@plt+0x325c>
   14680:	mov	r0, #1
   14684:	pop	{r4, r5, r6, sl, fp, pc}
   14688:	push	{r4, r5, fp, lr}
   1468c:	add	fp, sp, #8
   14690:	mov	r5, r1
   14694:	mov	r4, r0
   14698:	mov	r0, r1
   1469c:	bl	155a8 <putchar_unlocked@plt+0x417c>
   146a0:	ldrb	r1, [r4, #6]
   146a4:	cmp	r0, #0
   146a8:	andne	r1, r1, #223	; 0xdf
   146ac:	mov	r0, #0
   146b0:	cmp	r1, r5
   146b4:	popne	{r4, r5, fp, pc}
   146b8:	cmp	r5, #0
   146bc:	beq	146cc <putchar_unlocked@plt+0x32a0>
   146c0:	mov	r0, r4
   146c4:	pop	{r4, r5, fp, lr}
   146c8:	b	146d4 <putchar_unlocked@plt+0x32a8>
   146cc:	mov	r0, #1
   146d0:	pop	{r4, r5, fp, pc}
   146d4:	push	{r4, sl, fp, lr}
   146d8:	add	fp, sp, #8
   146dc:	mov	r4, r0
   146e0:	mov	r0, #0
   146e4:	bl	155a8 <putchar_unlocked@plt+0x417c>
   146e8:	ldrb	r1, [r4, #7]
   146ec:	cmp	r0, #0
   146f0:	beq	14704 <putchar_unlocked@plt+0x32d8>
   146f4:	tst	r1, #223	; 0xdf
   146f8:	bne	1470c <putchar_unlocked@plt+0x32e0>
   146fc:	mov	r0, #1
   14700:	pop	{r4, sl, fp, pc}
   14704:	cmp	r1, #0
   14708:	beq	146fc <putchar_unlocked@plt+0x32d0>
   1470c:	mov	r0, #0
   14710:	pop	{r4, sl, fp, pc}
   14714:	push	{r4, r5, fp, lr}
   14718:	add	fp, sp, #8
   1471c:	mov	r5, r0
   14720:	mov	r0, #33	; 0x21
   14724:	bl	14e50 <putchar_unlocked@plt+0x3a24>
   14728:	mov	r4, r0
   1472c:	add	r1, r5, #44	; 0x2c
   14730:	mov	r2, #32
   14734:	bl	11348 <strncpy@plt>
   14738:	mov	r5, #0
   1473c:	strb	r5, [r0, #32]
   14740:	bl	11300 <strlen@plt>
   14744:	cmp	r0, #1
   14748:	blt	14770 <putchar_unlocked@plt+0x3344>
   1474c:	add	r1, r4, r0
   14750:	mov	r0, r1
   14754:	ldrb	r2, [r0, #-1]!
   14758:	cmp	r2, #32
   1475c:	bne	14770 <putchar_unlocked@plt+0x3344>
   14760:	strb	r5, [r1, #-1]
   14764:	cmp	r4, r0
   14768:	mov	r1, r0
   1476c:	bcc	14754 <putchar_unlocked@plt+0x3328>
   14770:	mov	r0, r4
   14774:	pop	{r4, r5, fp, pc}
   14778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1477c:	add	fp, sp, #28
   14780:	sub	sp, sp, #12
   14784:	mov	r6, r3
   14788:	str	r2, [sp, #4]
   1478c:	mov	r9, r1
   14790:	mov	r7, #0
   14794:	str	r7, [sp, #8]
   14798:	bl	11168 <utmpxname@plt>
   1479c:	bl	111ec <setutxent@plt>
   147a0:	bl	11420 <getutxent@plt>
   147a4:	cmp	r0, #0
   147a8:	beq	1482c <putchar_unlocked@plt+0x3400>
   147ac:	mov	r5, r0
   147b0:	mov	r4, #0
   147b4:	mov	r8, #384	; 0x180
   147b8:	add	sl, sp, #8
   147bc:	mov	r7, #0
   147c0:	b	147ec <putchar_unlocked@plt+0x33c0>
   147c4:	add	r0, r4, r4, lsl #1
   147c8:	add	r0, r7, r0, lsl #7
   147cc:	mov	r1, r5
   147d0:	mov	r2, #384	; 0x180
   147d4:	bl	11198 <memcpy@plt>
   147d8:	add	r4, r4, #1
   147dc:	bl	11420 <getutxent@plt>
   147e0:	mov	r5, r0
   147e4:	cmp	r0, #0
   147e8:	beq	14830 <putchar_unlocked@plt+0x3404>
   147ec:	mov	r0, r5
   147f0:	mov	r1, r6
   147f4:	bl	1484c <putchar_unlocked@plt+0x3420>
   147f8:	cmp	r0, #0
   147fc:	beq	147dc <putchar_unlocked@plt+0x33b0>
   14800:	ldr	r0, [sp, #8]
   14804:	cmp	r4, r0
   14808:	bne	147c4 <putchar_unlocked@plt+0x3398>
   1480c:	str	r8, [sp]
   14810:	mov	r0, r7
   14814:	mov	r1, sl
   14818:	mov	r2, #1
   1481c:	mvn	r3, #0
   14820:	bl	14f68 <putchar_unlocked@plt+0x3b3c>
   14824:	mov	r7, r0
   14828:	b	147c4 <putchar_unlocked@plt+0x3398>
   1482c:	mov	r4, #0
   14830:	bl	11390 <endutxent@plt>
   14834:	str	r4, [r9]
   14838:	ldr	r0, [sp, #4]
   1483c:	str	r7, [r0]
   14840:	mov	r0, #0
   14844:	sub	sp, fp, #28
   14848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1484c:	push	{r4, sl, fp, lr}
   14850:	add	fp, sp, #8
   14854:	ldrb	r2, [r0, #44]	; 0x2c
   14858:	mov	r4, #0
   1485c:	cmp	r2, #0
   14860:	mov	r2, #0
   14864:	beq	14878 <putchar_unlocked@plt+0x344c>
   14868:	ldrh	r2, [r0]
   1486c:	sub	r2, r2, #7
   14870:	clz	r2, r2
   14874:	lsr	r2, r2, #5
   14878:	tst	r1, #2
   1487c:	beq	14890 <putchar_unlocked@plt+0x3464>
   14880:	cmp	r2, #0
   14884:	bne	14890 <putchar_unlocked@plt+0x3464>
   14888:	mov	r0, r4
   1488c:	pop	{r4, sl, fp, pc}
   14890:	tst	r1, #1
   14894:	beq	148c0 <putchar_unlocked@plt+0x3494>
   14898:	eors	r1, r2, #1
   1489c:	bne	148c0 <putchar_unlocked@plt+0x3494>
   148a0:	ldr	r0, [r0, #4]
   148a4:	cmp	r0, #1
   148a8:	blt	148c0 <putchar_unlocked@plt+0x3494>
   148ac:	mov	r4, #0
   148b0:	mov	r1, #0
   148b4:	bl	112d0 <kill@plt>
   148b8:	cmn	r0, #1
   148bc:	ble	148cc <putchar_unlocked@plt+0x34a0>
   148c0:	mov	r4, #1
   148c4:	mov	r0, r4
   148c8:	pop	{r4, sl, fp, pc}
   148cc:	bl	11318 <__errno_location@plt>
   148d0:	ldr	r0, [r0]
   148d4:	cmp	r0, #3
   148d8:	movne	r4, #1
   148dc:	mov	r0, r4
   148e0:	pop	{r4, sl, fp, pc}
   148e4:	b	148e8 <putchar_unlocked@plt+0x34bc>
   148e8:	push	{r4, r5, r6, r7, fp, lr}
   148ec:	add	fp, sp, #16
   148f0:	mov	r6, r2
   148f4:	mov	r4, r1
   148f8:	bl	14980 <putchar_unlocked@plt+0x3554>
   148fc:	cmp	r0, #0
   14900:	beq	14930 <putchar_unlocked@plt+0x3504>
   14904:	mov	r7, r0
   14908:	bl	11300 <strlen@plt>
   1490c:	cmp	r0, r6
   14910:	bcs	1494c <putchar_unlocked@plt+0x3520>
   14914:	add	r2, r0, #1
   14918:	mov	r0, r4
   1491c:	mov	r1, r7
   14920:	bl	11198 <memcpy@plt>
   14924:	mov	r5, #0
   14928:	mov	r0, r5
   1492c:	pop	{r4, r5, r6, r7, fp, pc}
   14930:	mov	r5, #22
   14934:	cmp	r6, #0
   14938:	beq	14974 <putchar_unlocked@plt+0x3548>
   1493c:	mov	r0, #0
   14940:	strb	r0, [r4]
   14944:	mov	r0, r5
   14948:	pop	{r4, r5, r6, r7, fp, pc}
   1494c:	mov	r5, #34	; 0x22
   14950:	cmp	r6, #0
   14954:	beq	14974 <putchar_unlocked@plt+0x3548>
   14958:	sub	r6, r6, #1
   1495c:	mov	r0, r4
   14960:	mov	r1, r7
   14964:	mov	r2, r6
   14968:	bl	11198 <memcpy@plt>
   1496c:	mov	r0, #0
   14970:	strb	r0, [r4, r6]
   14974:	mov	r0, r5
   14978:	pop	{r4, r5, r6, r7, fp, pc}
   1497c:	b	14980 <putchar_unlocked@plt+0x3554>
   14980:	mov	r1, #0
   14984:	b	1139c <setlocale@plt>
   14988:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1498c:	add	fp, sp, #24
   14990:	sub	sp, sp, #32
   14994:	mov	r4, r2
   14998:	mov	r8, r0
   1499c:	ldr	r6, [fp, #12]
   149a0:	ldr	r7, [fp, #8]
   149a4:	cmp	r1, #0
   149a8:	beq	149d0 <putchar_unlocked@plt+0x35a4>
   149ac:	mov	r5, r1
   149b0:	str	r4, [sp]
   149b4:	str	r3, [sp, #4]
   149b8:	movw	r2, #25224	; 0x6288
   149bc:	movt	r2, #1
   149c0:	mov	r0, r8
   149c4:	mov	r1, #1
   149c8:	mov	r3, r5
   149cc:	b	149e8 <putchar_unlocked@plt+0x35bc>
   149d0:	str	r3, [sp]
   149d4:	movw	r2, #25236	; 0x6294
   149d8:	movt	r2, #1
   149dc:	mov	r0, r8
   149e0:	mov	r1, #1
   149e4:	mov	r3, r4
   149e8:	bl	1136c <__fprintf_chk@plt>
   149ec:	movw	r1, #25243	; 0x629b
   149f0:	movt	r1, #1
   149f4:	mov	r0, #0
   149f8:	mov	r2, #5
   149fc:	bl	111d4 <dcgettext@plt>
   14a00:	mov	r3, r0
   14a04:	movw	r0, #2022	; 0x7e6
   14a08:	str	r0, [sp]
   14a0c:	movw	r2, #25961	; 0x6569
   14a10:	movt	r2, #1
   14a14:	mov	r0, r8
   14a18:	mov	r1, #1
   14a1c:	bl	1136c <__fprintf_chk@plt>
   14a20:	movw	r4, #24531	; 0x5fd3
   14a24:	movt	r4, #1
   14a28:	mov	r0, r4
   14a2c:	mov	r1, r8
   14a30:	bl	1112c <fputs_unlocked@plt>
   14a34:	movw	r1, #25247	; 0x629f
   14a38:	movt	r1, #1
   14a3c:	mov	r0, #0
   14a40:	mov	r2, #5
   14a44:	bl	111d4 <dcgettext@plt>
   14a48:	mov	r2, r0
   14a4c:	movw	r3, #25418	; 0x634a
   14a50:	movt	r3, #1
   14a54:	mov	r0, r8
   14a58:	mov	r1, #1
   14a5c:	bl	1136c <__fprintf_chk@plt>
   14a60:	mov	r0, r4
   14a64:	mov	r1, r8
   14a68:	bl	1112c <fputs_unlocked@plt>
   14a6c:	cmp	r6, #9
   14a70:	bhi	14aac <putchar_unlocked@plt+0x3680>
   14a74:	add	r0, pc, #0
   14a78:	ldr	pc, [r0, r6, lsl #2]
   14a7c:	andeq	r4, r1, r4, lsr #21
   14a80:			; <UNDEFINED> instruction: 0x00014ab8
   14a84:	andeq	r4, r1, r8, ror #21
   14a88:	andeq	r4, r1, r0, lsl fp
   14a8c:	andeq	r4, r1, r8, lsr fp
   14a90:	andeq	r4, r1, r0, ror #22
   14a94:	andeq	r4, r1, r8, lsl #23
   14a98:	andeq	r4, r1, r0, asr #23
   14a9c:	andeq	r4, r1, r0, ror #24
   14aa0:	andeq	r4, r1, r8, lsl #24
   14aa4:	sub	sp, fp, #24
   14aa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14aac:	movw	r1, #25771	; 0x64ab
   14ab0:	movt	r1, #1
   14ab4:	b	14c10 <putchar_unlocked@plt+0x37e4>
   14ab8:	movw	r1, #25452	; 0x636c
   14abc:	movt	r1, #1
   14ac0:	mov	r0, #0
   14ac4:	mov	r2, #5
   14ac8:	bl	111d4 <dcgettext@plt>
   14acc:	mov	r2, r0
   14ad0:	ldr	r3, [r7]
   14ad4:	mov	r0, r8
   14ad8:	mov	r1, #1
   14adc:	sub	sp, fp, #24
   14ae0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ae4:	b	1136c <__fprintf_chk@plt>
   14ae8:	movw	r1, #25468	; 0x637c
   14aec:	movt	r1, #1
   14af0:	mov	r0, #0
   14af4:	mov	r2, #5
   14af8:	bl	111d4 <dcgettext@plt>
   14afc:	mov	r2, r0
   14b00:	ldr	r3, [r7]
   14b04:	ldr	r0, [r7, #4]
   14b08:	str	r0, [sp]
   14b0c:	b	14bfc <putchar_unlocked@plt+0x37d0>
   14b10:	movw	r1, #25491	; 0x6393
   14b14:	movt	r1, #1
   14b18:	mov	r0, #0
   14b1c:	mov	r2, #5
   14b20:	bl	111d4 <dcgettext@plt>
   14b24:	mov	r2, r0
   14b28:	ldr	r3, [r7]
   14b2c:	ldmib	r7, {r0, r1}
   14b30:	stm	sp, {r0, r1}
   14b34:	b	14bfc <putchar_unlocked@plt+0x37d0>
   14b38:	movw	r1, #25519	; 0x63af
   14b3c:	movt	r1, #1
   14b40:	mov	r0, #0
   14b44:	mov	r2, #5
   14b48:	bl	111d4 <dcgettext@plt>
   14b4c:	mov	r2, r0
   14b50:	ldr	r3, [r7]
   14b54:	ldmib	r7, {r0, r1, r7}
   14b58:	stm	sp, {r0, r1, r7}
   14b5c:	b	14bfc <putchar_unlocked@plt+0x37d0>
   14b60:	movw	r1, #25551	; 0x63cf
   14b64:	movt	r1, #1
   14b68:	mov	r0, #0
   14b6c:	mov	r2, #5
   14b70:	bl	111d4 <dcgettext@plt>
   14b74:	mov	r2, r0
   14b78:	ldr	r3, [r7]
   14b7c:	ldmib	r7, {r0, r1, r6, r7}
   14b80:	stm	sp, {r0, r1, r6, r7}
   14b84:	b	14bfc <putchar_unlocked@plt+0x37d0>
   14b88:	movw	r1, #25587	; 0x63f3
   14b8c:	movt	r1, #1
   14b90:	mov	r0, #0
   14b94:	mov	r2, #5
   14b98:	bl	111d4 <dcgettext@plt>
   14b9c:	mov	r2, r0
   14ba0:	ldr	r3, [r7]
   14ba4:	ldmib	r7, {r0, r1, r6}
   14ba8:	ldr	r5, [r7, #16]
   14bac:	ldr	r7, [r7, #20]
   14bb0:	stm	sp, {r0, r1, r6}
   14bb4:	str	r5, [sp, #12]
   14bb8:	str	r7, [sp, #16]
   14bbc:	b	14bfc <putchar_unlocked@plt+0x37d0>
   14bc0:	movw	r1, #25627	; 0x641b
   14bc4:	movt	r1, #1
   14bc8:	mov	r0, #0
   14bcc:	mov	r2, #5
   14bd0:	bl	111d4 <dcgettext@plt>
   14bd4:	mov	r2, r0
   14bd8:	ldr	r3, [r7]
   14bdc:	ldmib	r7, {r0, r1, r6}
   14be0:	ldr	r5, [r7, #16]
   14be4:	ldr	r4, [r7, #20]
   14be8:	ldr	r7, [r7, #24]
   14bec:	stm	sp, {r0, r1, r6}
   14bf0:	str	r5, [sp, #12]
   14bf4:	str	r4, [sp, #16]
   14bf8:	str	r7, [sp, #20]
   14bfc:	mov	r0, r8
   14c00:	mov	r1, #1
   14c04:	b	14cb0 <putchar_unlocked@plt+0x3884>
   14c08:	movw	r1, #25719	; 0x6477
   14c0c:	movt	r1, #1
   14c10:	mov	r0, #0
   14c14:	mov	r2, #5
   14c18:	bl	111d4 <dcgettext@plt>
   14c1c:	mov	ip, r0
   14c20:	ldr	r3, [r7]
   14c24:	ldr	r0, [r7, #4]
   14c28:	ldr	r1, [r7, #8]
   14c2c:	ldr	r6, [r7, #12]
   14c30:	ldr	r5, [r7, #16]
   14c34:	ldr	r4, [r7, #20]
   14c38:	ldr	r2, [r7, #24]
   14c3c:	ldr	lr, [r7, #28]
   14c40:	ldr	r7, [r7, #32]
   14c44:	stm	sp, {r0, r1, r6}
   14c48:	str	r5, [sp, #12]
   14c4c:	str	r4, [sp, #16]
   14c50:	str	r2, [sp, #20]
   14c54:	str	lr, [sp, #24]
   14c58:	str	r7, [sp, #28]
   14c5c:	b	14ca4 <putchar_unlocked@plt+0x3878>
   14c60:	movw	r1, #25671	; 0x6447
   14c64:	movt	r1, #1
   14c68:	mov	r0, #0
   14c6c:	mov	r2, #5
   14c70:	bl	111d4 <dcgettext@plt>
   14c74:	mov	ip, r0
   14c78:	ldr	r3, [r7]
   14c7c:	ldmib	r7, {r0, r1, r6}
   14c80:	ldr	r5, [r7, #16]
   14c84:	ldr	r4, [r7, #20]
   14c88:	ldr	r2, [r7, #24]
   14c8c:	ldr	r7, [r7, #28]
   14c90:	stm	sp, {r0, r1, r6}
   14c94:	str	r5, [sp, #12]
   14c98:	str	r4, [sp, #16]
   14c9c:	str	r2, [sp, #20]
   14ca0:	str	r7, [sp, #24]
   14ca4:	mov	r0, r8
   14ca8:	mov	r1, #1
   14cac:	mov	r2, ip
   14cb0:	bl	1136c <__fprintf_chk@plt>
   14cb4:	sub	sp, fp, #24
   14cb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cbc:	push	{r4, sl, fp, lr}
   14cc0:	add	fp, sp, #8
   14cc4:	sub	sp, sp, #8
   14cc8:	mov	lr, #0
   14ccc:	ldr	ip, [fp, #8]
   14cd0:	ldr	r4, [ip, lr, lsl #2]
   14cd4:	add	lr, lr, #1
   14cd8:	cmp	r4, #0
   14cdc:	bne	14cd0 <putchar_unlocked@plt+0x38a4>
   14ce0:	sub	r4, lr, #1
   14ce4:	str	ip, [sp]
   14ce8:	str	r4, [sp, #4]
   14cec:	bl	14988 <putchar_unlocked@plt+0x355c>
   14cf0:	sub	sp, fp, #8
   14cf4:	pop	{r4, sl, fp, pc}
   14cf8:	push	{r4, r5, fp, lr}
   14cfc:	add	fp, sp, #8
   14d00:	sub	sp, sp, #48	; 0x30
   14d04:	mov	ip, #0
   14d08:	ldr	r4, [fp, #8]
   14d0c:	add	lr, sp, #8
   14d10:	ldr	r5, [r4]
   14d14:	str	r5, [lr, ip, lsl #2]
   14d18:	cmp	r5, #0
   14d1c:	beq	14d34 <putchar_unlocked@plt+0x3908>
   14d20:	add	ip, ip, #1
   14d24:	add	r4, r4, #4
   14d28:	cmp	ip, #10
   14d2c:	bne	14d10 <putchar_unlocked@plt+0x38e4>
   14d30:	mov	ip, #10
   14d34:	str	lr, [sp]
   14d38:	str	ip, [sp, #4]
   14d3c:	bl	14988 <putchar_unlocked@plt+0x355c>
   14d40:	sub	sp, fp, #8
   14d44:	pop	{r4, r5, fp, pc}
   14d48:	push	{fp, lr}
   14d4c:	mov	fp, sp
   14d50:	sub	sp, sp, #8
   14d54:	add	ip, fp, #8
   14d58:	str	ip, [sp, #4]
   14d5c:	str	ip, [sp]
   14d60:	bl	14cf8 <putchar_unlocked@plt+0x38cc>
   14d64:	mov	sp, fp
   14d68:	pop	{fp, pc}
   14d6c:	push	{fp, lr}
   14d70:	mov	fp, sp
   14d74:	movw	r0, #29052	; 0x717c
   14d78:	movt	r0, #2
   14d7c:	ldr	r1, [r0]
   14d80:	movw	r0, #24531	; 0x5fd3
   14d84:	movt	r0, #1
   14d88:	bl	1112c <fputs_unlocked@plt>
   14d8c:	movw	r1, #25831	; 0x64e7
   14d90:	movt	r1, #1
   14d94:	mov	r0, #0
   14d98:	mov	r2, #5
   14d9c:	bl	111d4 <dcgettext@plt>
   14da0:	mov	r1, r0
   14da4:	movw	r2, #25851	; 0x64fb
   14da8:	movt	r2, #1
   14dac:	mov	r0, #1
   14db0:	bl	11354 <__printf_chk@plt>
   14db4:	movw	r1, #25873	; 0x6511
   14db8:	movt	r1, #1
   14dbc:	mov	r0, #0
   14dc0:	mov	r2, #5
   14dc4:	bl	111d4 <dcgettext@plt>
   14dc8:	mov	r1, r0
   14dcc:	movw	r2, #24095	; 0x5e1f
   14dd0:	movt	r2, #1
   14dd4:	movw	r3, #24340	; 0x5f14
   14dd8:	movt	r3, #1
   14ddc:	mov	r0, #1
   14de0:	bl	11354 <__printf_chk@plt>
   14de4:	movw	r1, #25893	; 0x6525
   14de8:	movt	r1, #1
   14dec:	mov	r0, #0
   14df0:	mov	r2, #5
   14df4:	bl	111d4 <dcgettext@plt>
   14df8:	mov	r1, r0
   14dfc:	movw	r2, #25932	; 0x654c
   14e00:	movt	r2, #1
   14e04:	mov	r0, #1
   14e08:	pop	{fp, lr}
   14e0c:	b	11354 <__printf_chk@plt>
   14e10:	b	14e14 <putchar_unlocked@plt+0x39e8>
   14e14:	push	{r4, r5, r6, sl, fp, lr}
   14e18:	add	fp, sp, #16
   14e1c:	mov	r4, r2
   14e20:	mov	r5, r1
   14e24:	mov	r6, r0
   14e28:	bl	15788 <putchar_unlocked@plt+0x435c>
   14e2c:	cmp	r0, #0
   14e30:	popne	{r4, r5, r6, sl, fp, pc}
   14e34:	cmp	r6, #0
   14e38:	beq	14e4c <putchar_unlocked@plt+0x3a20>
   14e3c:	cmp	r5, #0
   14e40:	cmpne	r4, #0
   14e44:	bne	14e4c <putchar_unlocked@plt+0x3a20>
   14e48:	pop	{r4, r5, r6, sl, fp, pc}
   14e4c:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   14e50:	push	{fp, lr}
   14e54:	mov	fp, sp
   14e58:	bl	15270 <putchar_unlocked@plt+0x3e44>
   14e5c:	pop	{fp, lr}
   14e60:	b	14e64 <putchar_unlocked@plt+0x3a38>
   14e64:	cmp	r0, #0
   14e68:	bxne	lr
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   14e78:	push	{fp, lr}
   14e7c:	mov	fp, sp
   14e80:	bl	156b8 <putchar_unlocked@plt+0x428c>
   14e84:	pop	{fp, lr}
   14e88:	b	14e64 <putchar_unlocked@plt+0x3a38>
   14e8c:	b	14e50 <putchar_unlocked@plt+0x3a24>
   14e90:	push	{r4, r5, fp, lr}
   14e94:	add	fp, sp, #8
   14e98:	mov	r4, r1
   14e9c:	mov	r5, r0
   14ea0:	bl	152a0 <putchar_unlocked@plt+0x3e74>
   14ea4:	cmp	r0, #0
   14ea8:	popne	{r4, r5, fp, pc}
   14eac:	cmp	r5, #0
   14eb0:	beq	14ec0 <putchar_unlocked@plt+0x3a94>
   14eb4:	cmp	r4, #0
   14eb8:	bne	14ec0 <putchar_unlocked@plt+0x3a94>
   14ebc:	pop	{r4, r5, fp, pc}
   14ec0:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   14ec4:	push	{fp, lr}
   14ec8:	mov	fp, sp
   14ecc:	bl	156bc <putchar_unlocked@plt+0x4290>
   14ed0:	pop	{fp, lr}
   14ed4:	b	14e64 <putchar_unlocked@plt+0x3a38>
   14ed8:	push	{fp, lr}
   14edc:	mov	fp, sp
   14ee0:	bl	156cc <putchar_unlocked@plt+0x42a0>
   14ee4:	pop	{fp, lr}
   14ee8:	b	14e64 <putchar_unlocked@plt+0x3a38>
   14eec:	mov	r2, r1
   14ef0:	mov	r1, r0
   14ef4:	mov	r0, #0
   14ef8:	b	14e14 <putchar_unlocked@plt+0x39e8>
   14efc:	mov	r2, r1
   14f00:	mov	r1, r0
   14f04:	mov	r0, #0
   14f08:	b	14ed8 <putchar_unlocked@plt+0x3aac>
   14f0c:	mov	r2, #1
   14f10:	b	14f14 <putchar_unlocked@plt+0x3ae8>
   14f14:	push	{r4, r5, fp, lr}
   14f18:	add	fp, sp, #8
   14f1c:	mov	r4, r1
   14f20:	ldr	r5, [r1]
   14f24:	cmp	r0, #0
   14f28:	beq	14f40 <putchar_unlocked@plt+0x3b14>
   14f2c:	mov	r1, #1
   14f30:	add	r1, r1, r5, lsr #1
   14f34:	adds	r5, r5, r1
   14f38:	bcc	14f58 <putchar_unlocked@plt+0x3b2c>
   14f3c:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   14f40:	cmp	r5, #0
   14f44:	bne	14f58 <putchar_unlocked@plt+0x3b2c>
   14f48:	mov	r1, #64	; 0x40
   14f4c:	udiv	r5, r1, r2
   14f50:	cmp	r2, #64	; 0x40
   14f54:	addhi	r5, r5, #1
   14f58:	mov	r1, r5
   14f5c:	bl	14e14 <putchar_unlocked@plt+0x39e8>
   14f60:	str	r5, [r4]
   14f64:	pop	{r4, r5, fp, pc}
   14f68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f6c:	add	fp, sp, #24
   14f70:	mov	r8, r1
   14f74:	ldr	r6, [r1]
   14f78:	add	r1, r6, r6, asr #1
   14f7c:	cmp	r1, r6
   14f80:	mvnvs	r1, #-2147483648	; 0x80000000
   14f84:	cmp	r1, r3
   14f88:	mov	r5, r1
   14f8c:	movgt	r5, r3
   14f90:	cmn	r3, #1
   14f94:	movle	r5, r1
   14f98:	ldr	r4, [fp, #8]
   14f9c:	cmn	r4, #1
   14fa0:	ble	14fc8 <putchar_unlocked@plt+0x3b9c>
   14fa4:	cmp	r4, #0
   14fa8:	beq	1501c <putchar_unlocked@plt+0x3bf0>
   14fac:	cmn	r5, #1
   14fb0:	ble	14ff0 <putchar_unlocked@plt+0x3bc4>
   14fb4:	mvn	r7, #-2147483648	; 0x80000000
   14fb8:	udiv	r1, r7, r4
   14fbc:	cmp	r1, r5
   14fc0:	bge	1501c <putchar_unlocked@plt+0x3bf0>
   14fc4:	b	1502c <putchar_unlocked@plt+0x3c00>
   14fc8:	cmn	r5, #1
   14fcc:	ble	1500c <putchar_unlocked@plt+0x3be0>
   14fd0:	cmn	r4, #1
   14fd4:	beq	1501c <putchar_unlocked@plt+0x3bf0>
   14fd8:	mov	r1, #-2147483648	; 0x80000000
   14fdc:	sdiv	r1, r1, r4
   14fe0:	mvn	r7, #-2147483648	; 0x80000000
   14fe4:	cmp	r1, r5
   14fe8:	bge	1501c <putchar_unlocked@plt+0x3bf0>
   14fec:	b	1502c <putchar_unlocked@plt+0x3c00>
   14ff0:	beq	1501c <putchar_unlocked@plt+0x3bf0>
   14ff4:	mov	r1, #-2147483648	; 0x80000000
   14ff8:	sdiv	r1, r1, r5
   14ffc:	mvn	r7, #-2147483648	; 0x80000000
   15000:	cmp	r1, r4
   15004:	bge	1501c <putchar_unlocked@plt+0x3bf0>
   15008:	b	1502c <putchar_unlocked@plt+0x3c00>
   1500c:	mvn	r7, #-2147483648	; 0x80000000
   15010:	sdiv	r1, r7, r4
   15014:	cmp	r5, r1
   15018:	blt	1502c <putchar_unlocked@plt+0x3c00>
   1501c:	mul	r1, r5, r4
   15020:	mov	r7, #64	; 0x40
   15024:	cmp	r1, #63	; 0x3f
   15028:	bgt	15034 <putchar_unlocked@plt+0x3c08>
   1502c:	sdiv	r5, r7, r4
   15030:	mul	r1, r5, r4
   15034:	cmp	r0, #0
   15038:	moveq	r7, #0
   1503c:	streq	r7, [r8]
   15040:	sub	r7, r5, r6
   15044:	cmp	r7, r2
   15048:	bge	150f4 <putchar_unlocked@plt+0x3cc8>
   1504c:	add	r5, r6, r2
   15050:	mov	r1, #0
   15054:	cmp	r5, r3
   15058:	mov	r2, #0
   1505c:	movwgt	r2, #1
   15060:	cmn	r3, #1
   15064:	movwgt	r1, #1
   15068:	cmp	r5, r6
   1506c:	bvs	150dc <putchar_unlocked@plt+0x3cb0>
   15070:	ands	r1, r1, r2
   15074:	bne	150dc <putchar_unlocked@plt+0x3cb0>
   15078:	cmn	r4, #1
   1507c:	ble	150a4 <putchar_unlocked@plt+0x3c78>
   15080:	cmp	r4, #0
   15084:	beq	150f0 <putchar_unlocked@plt+0x3cc4>
   15088:	cmn	r5, #1
   1508c:	ble	150c8 <putchar_unlocked@plt+0x3c9c>
   15090:	mvn	r1, #-2147483648	; 0x80000000
   15094:	udiv	r1, r1, r4
   15098:	cmp	r1, r5
   1509c:	bge	150f0 <putchar_unlocked@plt+0x3cc4>
   150a0:	b	150dc <putchar_unlocked@plt+0x3cb0>
   150a4:	cmn	r5, #1
   150a8:	ble	150e0 <putchar_unlocked@plt+0x3cb4>
   150ac:	cmn	r4, #1
   150b0:	beq	150f0 <putchar_unlocked@plt+0x3cc4>
   150b4:	mov	r1, #-2147483648	; 0x80000000
   150b8:	sdiv	r1, r1, r4
   150bc:	cmp	r1, r5
   150c0:	bge	150f0 <putchar_unlocked@plt+0x3cc4>
   150c4:	b	150dc <putchar_unlocked@plt+0x3cb0>
   150c8:	beq	150f0 <putchar_unlocked@plt+0x3cc4>
   150cc:	mov	r1, #-2147483648	; 0x80000000
   150d0:	sdiv	r1, r1, r5
   150d4:	cmp	r1, r4
   150d8:	bge	150f0 <putchar_unlocked@plt+0x3cc4>
   150dc:	bl	151d8 <putchar_unlocked@plt+0x3dac>
   150e0:	mvn	r1, #-2147483648	; 0x80000000
   150e4:	sdiv	r1, r1, r4
   150e8:	cmp	r5, r1
   150ec:	blt	150dc <putchar_unlocked@plt+0x3cb0>
   150f0:	mul	r1, r5, r4
   150f4:	bl	14e90 <putchar_unlocked@plt+0x3a64>
   150f8:	str	r5, [r8]
   150fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15100:	mov	r1, #1
   15104:	b	15108 <putchar_unlocked@plt+0x3cdc>
   15108:	push	{fp, lr}
   1510c:	mov	fp, sp
   15110:	bl	1521c <putchar_unlocked@plt+0x3df0>
   15114:	pop	{fp, lr}
   15118:	b	14e64 <putchar_unlocked@plt+0x3a38>
   1511c:	mov	r1, #1
   15120:	b	15124 <putchar_unlocked@plt+0x3cf8>
   15124:	push	{fp, lr}
   15128:	mov	fp, sp
   1512c:	bl	156c8 <putchar_unlocked@plt+0x429c>
   15130:	pop	{fp, lr}
   15134:	b	14e64 <putchar_unlocked@plt+0x3a38>
   15138:	push	{r4, r5, fp, lr}
   1513c:	add	fp, sp, #8
   15140:	mov	r4, r1
   15144:	mov	r5, r0
   15148:	mov	r0, r1
   1514c:	bl	14e50 <putchar_unlocked@plt+0x3a24>
   15150:	mov	r1, r5
   15154:	mov	r2, r4
   15158:	pop	{r4, r5, fp, lr}
   1515c:	b	11198 <memcpy@plt>
   15160:	push	{r4, r5, fp, lr}
   15164:	add	fp, sp, #8
   15168:	mov	r4, r1
   1516c:	mov	r5, r0
   15170:	mov	r0, r1
   15174:	bl	14e78 <putchar_unlocked@plt+0x3a4c>
   15178:	mov	r1, r5
   1517c:	mov	r2, r4
   15180:	pop	{r4, r5, fp, lr}
   15184:	b	11198 <memcpy@plt>
   15188:	push	{r4, r5, fp, lr}
   1518c:	add	fp, sp, #8
   15190:	mov	r4, r1
   15194:	mov	r5, r0
   15198:	add	r0, r1, #1
   1519c:	bl	14e78 <putchar_unlocked@plt+0x3a4c>
   151a0:	mov	r1, #0
   151a4:	strb	r1, [r0, r4]
   151a8:	mov	r1, r5
   151ac:	mov	r2, r4
   151b0:	pop	{r4, r5, fp, lr}
   151b4:	b	11198 <memcpy@plt>
   151b8:	push	{r4, sl, fp, lr}
   151bc:	add	fp, sp, #8
   151c0:	mov	r4, r0
   151c4:	bl	11300 <strlen@plt>
   151c8:	add	r1, r0, #1
   151cc:	mov	r0, r4
   151d0:	pop	{r4, sl, fp, lr}
   151d4:	b	15138 <putchar_unlocked@plt+0x3d0c>
   151d8:	push	{fp, lr}
   151dc:	mov	fp, sp
   151e0:	movw	r0, #28964	; 0x7124
   151e4:	movt	r0, #2
   151e8:	ldr	r4, [r0]
   151ec:	movw	r1, #26008	; 0x6598
   151f0:	movt	r1, #1
   151f4:	mov	r0, #0
   151f8:	mov	r2, #5
   151fc:	bl	111d4 <dcgettext@plt>
   15200:	mov	r3, r0
   15204:	movw	r2, #24959	; 0x617f
   15208:	movt	r2, #1
   1520c:	mov	r0, r4
   15210:	mov	r1, #0
   15214:	bl	11264 <error@plt>
   15218:	bl	11414 <abort@plt>
   1521c:	clz	r2, r1
   15220:	lsr	r2, r2, #5
   15224:	clz	r3, r0
   15228:	lsr	r3, r3, #5
   1522c:	orrs	r2, r3, r2
   15230:	movwne	r1, #1
   15234:	movwne	r0, #1
   15238:	cmp	r1, #0
   1523c:	beq	1526c <putchar_unlocked@plt+0x3e40>
   15240:	mvn	r2, #-2147483648	; 0x80000000
   15244:	udiv	r2, r2, r1
   15248:	cmp	r2, r0
   1524c:	bcs	1526c <putchar_unlocked@plt+0x3e40>
   15250:	push	{fp, lr}
   15254:	mov	fp, sp
   15258:	bl	11318 <__errno_location@plt>
   1525c:	mov	r1, #12
   15260:	str	r1, [r0]
   15264:	mov	r0, #0
   15268:	pop	{fp, pc}
   1526c:	b	11120 <calloc@plt>
   15270:	cmp	r0, #0
   15274:	movweq	r0, #1
   15278:	cmn	r0, #1
   1527c:	ble	15284 <putchar_unlocked@plt+0x3e58>
   15280:	b	11270 <malloc@plt>
   15284:	push	{fp, lr}
   15288:	mov	fp, sp
   1528c:	bl	11318 <__errno_location@plt>
   15290:	mov	r1, #12
   15294:	str	r1, [r0]
   15298:	mov	r0, #0
   1529c:	pop	{fp, pc}
   152a0:	push	{fp, lr}
   152a4:	mov	fp, sp
   152a8:	cmp	r0, #0
   152ac:	beq	152c8 <putchar_unlocked@plt+0x3e9c>
   152b0:	cmp	r1, #0
   152b4:	beq	152d4 <putchar_unlocked@plt+0x3ea8>
   152b8:	cmn	r1, #1
   152bc:	ble	152e0 <putchar_unlocked@plt+0x3eb4>
   152c0:	pop	{fp, lr}
   152c4:	b	111f8 <realloc@plt>
   152c8:	mov	r0, r1
   152cc:	pop	{fp, lr}
   152d0:	b	15270 <putchar_unlocked@plt+0x3e44>
   152d4:	bl	1290c <putchar_unlocked@plt+0x14e0>
   152d8:	mov	r0, #0
   152dc:	pop	{fp, pc}
   152e0:	bl	11318 <__errno_location@plt>
   152e4:	mov	r1, #12
   152e8:	str	r1, [r0]
   152ec:	mov	r0, #0
   152f0:	pop	{fp, pc}
   152f4:	mov	r1, r0
   152f8:	sub	r2, r0, #65	; 0x41
   152fc:	mov	r0, #1
   15300:	cmp	r2, #26
   15304:	subcs	r2, r1, #97	; 0x61
   15308:	cmpcs	r2, #26
   1530c:	bcs	15314 <putchar_unlocked@plt+0x3ee8>
   15310:	bx	lr
   15314:	sub	r1, r1, #48	; 0x30
   15318:	cmp	r1, #10
   1531c:	movcs	r0, #0
   15320:	bx	lr
   15324:	mov	r1, r0
   15328:	sub	r2, r0, #65	; 0x41
   1532c:	mov	r0, #1
   15330:	cmp	r2, #26
   15334:	subcs	r1, r1, #97	; 0x61
   15338:	cmpcs	r1, #26
   1533c:	movcs	r0, #0
   15340:	bx	lr
   15344:	mov	r1, #0
   15348:	cmp	r0, #128	; 0x80
   1534c:	movwcc	r1, #1
   15350:	mov	r0, r1
   15354:	bx	lr
   15358:	sub	r1, r0, #9
   1535c:	clz	r1, r1
   15360:	lsr	r1, r1, #5
   15364:	sub	r0, r0, #32
   15368:	clz	r0, r0
   1536c:	lsr	r0, r0, #5
   15370:	orr	r0, r0, r1
   15374:	bx	lr
   15378:	mov	r1, r0
   1537c:	mov	r0, #1
   15380:	cmp	r1, #32
   15384:	bxcc	lr
   15388:	cmp	r1, #127	; 0x7f
   1538c:	movne	r0, #0
   15390:	bx	lr
   15394:	sub	r1, r0, #48	; 0x30
   15398:	mov	r0, #0
   1539c:	cmp	r1, #10
   153a0:	movwcc	r0, #1
   153a4:	bx	lr
   153a8:	sub	r1, r0, #33	; 0x21
   153ac:	mov	r0, #0
   153b0:	cmp	r1, #94	; 0x5e
   153b4:	movwcc	r0, #1
   153b8:	bx	lr
   153bc:	sub	r1, r0, #97	; 0x61
   153c0:	mov	r0, #0
   153c4:	cmp	r1, #26
   153c8:	movwcc	r0, #1
   153cc:	bx	lr
   153d0:	sub	r1, r0, #32
   153d4:	mov	r0, #0
   153d8:	cmp	r1, #95	; 0x5f
   153dc:	movwcc	r0, #1
   153e0:	bx	lr
   153e4:	sub	r1, r0, #33	; 0x21
   153e8:	cmp	r1, #93	; 0x5d
   153ec:	bhi	15578 <putchar_unlocked@plt+0x414c>
   153f0:	mov	r0, #1
   153f4:	add	r2, pc, #0
   153f8:	ldr	pc, [r2, r1, lsl #2]
   153fc:	andeq	r5, r1, r4, ror r5
   15400:	andeq	r5, r1, r4, ror r5
   15404:	andeq	r5, r1, r4, ror r5
   15408:	andeq	r5, r1, r4, ror r5
   1540c:	andeq	r5, r1, r4, ror r5
   15410:	andeq	r5, r1, r4, ror r5
   15414:	andeq	r5, r1, r4, ror r5
   15418:	andeq	r5, r1, r4, ror r5
   1541c:	andeq	r5, r1, r4, ror r5
   15420:	andeq	r5, r1, r4, ror r5
   15424:	andeq	r5, r1, r4, ror r5
   15428:	andeq	r5, r1, r4, ror r5
   1542c:	andeq	r5, r1, r4, ror r5
   15430:	andeq	r5, r1, r4, ror r5
   15434:	andeq	r5, r1, r4, ror r5
   15438:	andeq	r5, r1, r8, ror r5
   1543c:	andeq	r5, r1, r8, ror r5
   15440:	andeq	r5, r1, r8, ror r5
   15444:	andeq	r5, r1, r8, ror r5
   15448:	andeq	r5, r1, r8, ror r5
   1544c:	andeq	r5, r1, r8, ror r5
   15450:	andeq	r5, r1, r8, ror r5
   15454:	andeq	r5, r1, r8, ror r5
   15458:	andeq	r5, r1, r8, ror r5
   1545c:	andeq	r5, r1, r8, ror r5
   15460:	andeq	r5, r1, r4, ror r5
   15464:	andeq	r5, r1, r4, ror r5
   15468:	andeq	r5, r1, r4, ror r5
   1546c:	andeq	r5, r1, r4, ror r5
   15470:	andeq	r5, r1, r4, ror r5
   15474:	andeq	r5, r1, r4, ror r5
   15478:	andeq	r5, r1, r4, ror r5
   1547c:	andeq	r5, r1, r8, ror r5
   15480:	andeq	r5, r1, r8, ror r5
   15484:	andeq	r5, r1, r8, ror r5
   15488:	andeq	r5, r1, r8, ror r5
   1548c:	andeq	r5, r1, r8, ror r5
   15490:	andeq	r5, r1, r8, ror r5
   15494:	andeq	r5, r1, r8, ror r5
   15498:	andeq	r5, r1, r8, ror r5
   1549c:	andeq	r5, r1, r8, ror r5
   154a0:	andeq	r5, r1, r8, ror r5
   154a4:	andeq	r5, r1, r8, ror r5
   154a8:	andeq	r5, r1, r8, ror r5
   154ac:	andeq	r5, r1, r8, ror r5
   154b0:	andeq	r5, r1, r8, ror r5
   154b4:	andeq	r5, r1, r8, ror r5
   154b8:	andeq	r5, r1, r8, ror r5
   154bc:	andeq	r5, r1, r8, ror r5
   154c0:	andeq	r5, r1, r8, ror r5
   154c4:	andeq	r5, r1, r8, ror r5
   154c8:	andeq	r5, r1, r8, ror r5
   154cc:	andeq	r5, r1, r8, ror r5
   154d0:	andeq	r5, r1, r8, ror r5
   154d4:	andeq	r5, r1, r8, ror r5
   154d8:	andeq	r5, r1, r8, ror r5
   154dc:	andeq	r5, r1, r8, ror r5
   154e0:	andeq	r5, r1, r8, ror r5
   154e4:	andeq	r5, r1, r4, ror r5
   154e8:	andeq	r5, r1, r4, ror r5
   154ec:	andeq	r5, r1, r4, ror r5
   154f0:	andeq	r5, r1, r4, ror r5
   154f4:	andeq	r5, r1, r4, ror r5
   154f8:	andeq	r5, r1, r4, ror r5
   154fc:	andeq	r5, r1, r8, ror r5
   15500:	andeq	r5, r1, r8, ror r5
   15504:	andeq	r5, r1, r8, ror r5
   15508:	andeq	r5, r1, r8, ror r5
   1550c:	andeq	r5, r1, r8, ror r5
   15510:	andeq	r5, r1, r8, ror r5
   15514:	andeq	r5, r1, r8, ror r5
   15518:	andeq	r5, r1, r8, ror r5
   1551c:	andeq	r5, r1, r8, ror r5
   15520:	andeq	r5, r1, r8, ror r5
   15524:	andeq	r5, r1, r8, ror r5
   15528:	andeq	r5, r1, r8, ror r5
   1552c:	andeq	r5, r1, r8, ror r5
   15530:	andeq	r5, r1, r8, ror r5
   15534:	andeq	r5, r1, r8, ror r5
   15538:	andeq	r5, r1, r8, ror r5
   1553c:	andeq	r5, r1, r8, ror r5
   15540:	andeq	r5, r1, r8, ror r5
   15544:	andeq	r5, r1, r8, ror r5
   15548:	andeq	r5, r1, r8, ror r5
   1554c:	andeq	r5, r1, r8, ror r5
   15550:	andeq	r5, r1, r8, ror r5
   15554:	andeq	r5, r1, r8, ror r5
   15558:	andeq	r5, r1, r8, ror r5
   1555c:	andeq	r5, r1, r8, ror r5
   15560:	andeq	r5, r1, r8, ror r5
   15564:	andeq	r5, r1, r4, ror r5
   15568:	andeq	r5, r1, r4, ror r5
   1556c:	andeq	r5, r1, r4, ror r5
   15570:	andeq	r5, r1, r4, ror r5
   15574:	bx	lr
   15578:	mov	r0, #0
   1557c:	bx	lr
   15580:	sub	r0, r0, #9
   15584:	cmp	r0, #23
   15588:	movhi	r0, #0
   1558c:	bxhi	lr
   15590:	bic	r0, r0, #-16777216	; 0xff000000
   15594:	movw	r1, #31
   15598:	movt	r1, #128	; 0x80
   1559c:	mov	r2, #1
   155a0:	and	r0, r2, r1, lsr r0
   155a4:	bx	lr
   155a8:	sub	r1, r0, #65	; 0x41
   155ac:	mov	r0, #0
   155b0:	cmp	r1, #26
   155b4:	movwcc	r0, #1
   155b8:	bx	lr
   155bc:	mov	r1, r0
   155c0:	sub	r2, r0, #48	; 0x30
   155c4:	mov	r0, #1
   155c8:	cmp	r2, #22
   155cc:	bhi	155e4 <putchar_unlocked@plt+0x41b8>
   155d0:	mov	ip, #1
   155d4:	movw	r3, #1023	; 0x3ff
   155d8:	movt	r3, #126	; 0x7e
   155dc:	tst	r3, ip, lsl r2
   155e0:	bxne	lr
   155e4:	sub	r1, r1, #97	; 0x61
   155e8:	cmp	r1, #6
   155ec:	movcs	r0, #0
   155f0:	bxcs	lr
   155f4:	bx	lr
   155f8:	sub	r1, r0, #65	; 0x41
   155fc:	cmp	r1, #26
   15600:	addcc	r0, r0, #32
   15604:	bx	lr
   15608:	sub	r1, r0, #97	; 0x61
   1560c:	cmp	r1, #26
   15610:	subcc	r0, r0, #32
   15614:	bx	lr
   15618:	push	{r4, r5, r6, sl, fp, lr}
   1561c:	add	fp, sp, #16
   15620:	mov	r4, r0
   15624:	bl	11240 <__fpending@plt>
   15628:	mov	r5, r0
   1562c:	mov	r0, r4
   15630:	bl	1124c <ferror_unlocked@plt>
   15634:	mov	r6, r0
   15638:	mov	r0, r4
   1563c:	bl	12804 <putchar_unlocked@plt+0x13d8>
   15640:	cmp	r6, #0
   15644:	beq	15668 <putchar_unlocked@plt+0x423c>
   15648:	mvn	r4, #0
   1564c:	cmp	r0, #0
   15650:	bne	15694 <putchar_unlocked@plt+0x4268>
   15654:	bl	11318 <__errno_location@plt>
   15658:	mov	r1, #0
   1565c:	str	r1, [r0]
   15660:	mov	r0, r4
   15664:	pop	{r4, r5, r6, sl, fp, pc}
   15668:	cmp	r0, #0
   1566c:	mov	r4, r0
   15670:	mvnne	r4, #0
   15674:	cmp	r5, #0
   15678:	bne	15694 <putchar_unlocked@plt+0x4268>
   1567c:	cmp	r0, #0
   15680:	beq	15694 <putchar_unlocked@plt+0x4268>
   15684:	bl	11318 <__errno_location@plt>
   15688:	ldr	r0, [r0]
   1568c:	subs	r4, r0, #9
   15690:	mvnne	r4, #0
   15694:	mov	r0, r4
   15698:	pop	{r4, r5, r6, sl, fp, pc}
   1569c:	push	{fp, lr}
   156a0:	mov	fp, sp
   156a4:	bl	11318 <__errno_location@plt>
   156a8:	mov	r1, #12
   156ac:	str	r1, [r0]
   156b0:	mov	r0, #0
   156b4:	pop	{fp, pc}
   156b8:	b	15270 <putchar_unlocked@plt+0x3e44>
   156bc:	cmp	r1, #0
   156c0:	orreq	r1, r1, #1
   156c4:	b	152a0 <putchar_unlocked@plt+0x3e74>
   156c8:	b	1521c <putchar_unlocked@plt+0x3df0>
   156cc:	clz	r3, r2
   156d0:	lsr	ip, r3, #5
   156d4:	clz	r3, r1
   156d8:	lsr	r3, r3, #5
   156dc:	orrs	r3, r3, ip
   156e0:	movwne	r1, #1
   156e4:	movwne	r2, #1
   156e8:	b	15788 <putchar_unlocked@plt+0x435c>
   156ec:	push	{fp, lr}
   156f0:	mov	fp, sp
   156f4:	mov	r0, #14
   156f8:	bl	113b4 <nl_langinfo@plt>
   156fc:	movw	r1, #24532	; 0x5fd4
   15700:	movt	r1, #1
   15704:	cmp	r0, #0
   15708:	movne	r1, r0
   1570c:	ldrb	r2, [r1]
   15710:	movw	r0, #26025	; 0x65a9
   15714:	movt	r0, #1
   15718:	cmp	r2, #0
   1571c:	movne	r0, r1
   15720:	pop	{fp, pc}
   15724:	push	{r4, r5, r6, r7, fp, lr}
   15728:	add	fp, sp, #16
   1572c:	sub	sp, sp, #8
   15730:	mov	r7, r2
   15734:	mov	r4, r1
   15738:	add	r5, sp, #4
   1573c:	cmp	r0, #0
   15740:	movne	r5, r0
   15744:	mov	r0, r5
   15748:	bl	11258 <mbrtowc@plt>
   1574c:	mov	r6, r0
   15750:	cmp	r7, #0
   15754:	beq	1577c <putchar_unlocked@plt+0x4350>
   15758:	cmn	r6, #2
   1575c:	bcc	1577c <putchar_unlocked@plt+0x4350>
   15760:	mov	r0, #0
   15764:	bl	129dc <putchar_unlocked@plt+0x15b0>
   15768:	cmp	r0, #0
   1576c:	bne	1577c <putchar_unlocked@plt+0x4350>
   15770:	ldrb	r0, [r4]
   15774:	str	r0, [r5]
   15778:	mov	r6, #1
   1577c:	mov	r0, r6
   15780:	sub	sp, fp, #16
   15784:	pop	{r4, r5, r6, r7, fp, pc}
   15788:	cmp	r2, #0
   1578c:	beq	157bc <putchar_unlocked@plt+0x4390>
   15790:	mvn	r3, #0
   15794:	udiv	r3, r3, r2
   15798:	cmp	r3, r1
   1579c:	bcs	157bc <putchar_unlocked@plt+0x4390>
   157a0:	push	{fp, lr}
   157a4:	mov	fp, sp
   157a8:	bl	11318 <__errno_location@plt>
   157ac:	mov	r1, #12
   157b0:	str	r1, [r0]
   157b4:	mov	r0, #0
   157b8:	pop	{fp, pc}
   157bc:	mul	r1, r2, r1
   157c0:	b	152a0 <putchar_unlocked@plt+0x3e74>
   157c4:	cmp	r3, #0
   157c8:	cmpeq	r2, #0
   157cc:	bne	157f0 <putchar_unlocked@plt+0x43c4>
   157d0:	cmp	r1, #0
   157d4:	movlt	r1, #-2147483648	; 0x80000000
   157d8:	movlt	r0, #0
   157dc:	blt	157ec <putchar_unlocked@plt+0x43c0>
   157e0:	cmpeq	r0, #0
   157e4:	mvnne	r1, #-2147483648	; 0x80000000
   157e8:	mvnne	r0, #0
   157ec:	b	15898 <putchar_unlocked@plt+0x446c>
   157f0:	sub	sp, sp, #8
   157f4:	push	{sp, lr}
   157f8:	cmp	r1, #0
   157fc:	blt	1581c <putchar_unlocked@plt+0x43f0>
   15800:	cmp	r3, #0
   15804:	blt	15850 <putchar_unlocked@plt+0x4424>
   15808:	bl	158a8 <putchar_unlocked@plt+0x447c>
   1580c:	ldr	lr, [sp, #4]
   15810:	add	sp, sp, #8
   15814:	pop	{r2, r3}
   15818:	bx	lr
   1581c:	rsbs	r0, r0, #0
   15820:	sbc	r1, r1, r1, lsl #1
   15824:	cmp	r3, #0
   15828:	blt	15874 <putchar_unlocked@plt+0x4448>
   1582c:	bl	158a8 <putchar_unlocked@plt+0x447c>
   15830:	ldr	lr, [sp, #4]
   15834:	add	sp, sp, #8
   15838:	pop	{r2, r3}
   1583c:	rsbs	r0, r0, #0
   15840:	sbc	r1, r1, r1, lsl #1
   15844:	rsbs	r2, r2, #0
   15848:	sbc	r3, r3, r3, lsl #1
   1584c:	bx	lr
   15850:	rsbs	r2, r2, #0
   15854:	sbc	r3, r3, r3, lsl #1
   15858:	bl	158a8 <putchar_unlocked@plt+0x447c>
   1585c:	ldr	lr, [sp, #4]
   15860:	add	sp, sp, #8
   15864:	pop	{r2, r3}
   15868:	rsbs	r0, r0, #0
   1586c:	sbc	r1, r1, r1, lsl #1
   15870:	bx	lr
   15874:	rsbs	r2, r2, #0
   15878:	sbc	r3, r3, r3, lsl #1
   1587c:	bl	158a8 <putchar_unlocked@plt+0x447c>
   15880:	ldr	lr, [sp, #4]
   15884:	add	sp, sp, #8
   15888:	pop	{r2, r3}
   1588c:	rsbs	r2, r2, #0
   15890:	sbc	r3, r3, r3, lsl #1
   15894:	bx	lr
   15898:	push	{r1, lr}
   1589c:	mov	r0, #8
   158a0:	bl	11138 <raise@plt>
   158a4:	pop	{r1, pc}
   158a8:	cmp	r1, r3
   158ac:	cmpeq	r0, r2
   158b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158b4:	mov	r4, r0
   158b8:	movcc	r0, #0
   158bc:	mov	r5, r1
   158c0:	ldr	lr, [sp, #36]	; 0x24
   158c4:	movcc	r1, r0
   158c8:	bcc	159c4 <putchar_unlocked@plt+0x4598>
   158cc:	cmp	r3, #0
   158d0:	clzeq	ip, r2
   158d4:	clzne	ip, r3
   158d8:	addeq	ip, ip, #32
   158dc:	cmp	r5, #0
   158e0:	clzeq	r1, r4
   158e4:	addeq	r1, r1, #32
   158e8:	clzne	r1, r5
   158ec:	sub	ip, ip, r1
   158f0:	sub	sl, ip, #32
   158f4:	lsl	r9, r3, ip
   158f8:	rsb	fp, ip, #32
   158fc:	orr	r9, r9, r2, lsl sl
   15900:	orr	r9, r9, r2, lsr fp
   15904:	lsl	r8, r2, ip
   15908:	cmp	r5, r9
   1590c:	cmpeq	r4, r8
   15910:	movcc	r0, #0
   15914:	movcc	r1, r0
   15918:	bcc	15934 <putchar_unlocked@plt+0x4508>
   1591c:	mov	r0, #1
   15920:	subs	r4, r4, r8
   15924:	lsl	r1, r0, sl
   15928:	orr	r1, r1, r0, lsr fp
   1592c:	lsl	r0, r0, ip
   15930:	sbc	r5, r5, r9
   15934:	cmp	ip, #0
   15938:	beq	159c4 <putchar_unlocked@plt+0x4598>
   1593c:	lsr	r6, r8, #1
   15940:	orr	r6, r6, r9, lsl #31
   15944:	lsr	r7, r9, #1
   15948:	mov	r2, ip
   1594c:	b	15970 <putchar_unlocked@plt+0x4544>
   15950:	subs	r3, r4, r6
   15954:	sbc	r8, r5, r7
   15958:	adds	r3, r3, r3
   1595c:	adc	r8, r8, r8
   15960:	adds	r4, r3, #1
   15964:	adc	r5, r8, #0
   15968:	subs	r2, r2, #1
   1596c:	beq	1598c <putchar_unlocked@plt+0x4560>
   15970:	cmp	r5, r7
   15974:	cmpeq	r4, r6
   15978:	bcs	15950 <putchar_unlocked@plt+0x4524>
   1597c:	adds	r4, r4, r4
   15980:	adc	r5, r5, r5
   15984:	subs	r2, r2, #1
   15988:	bne	15970 <putchar_unlocked@plt+0x4544>
   1598c:	lsr	r3, r4, ip
   15990:	orr	r3, r3, r5, lsl fp
   15994:	lsr	r2, r5, ip
   15998:	orr	r3, r3, r5, lsr sl
   1599c:	adds	r0, r0, r4
   159a0:	mov	r4, r3
   159a4:	lsl	r3, r2, ip
   159a8:	orr	r3, r3, r4, lsl sl
   159ac:	lsl	ip, r4, ip
   159b0:	orr	r3, r3, r4, lsr fp
   159b4:	adc	r1, r1, r5
   159b8:	subs	r0, r0, ip
   159bc:	mov	r5, r2
   159c0:	sbc	r1, r1, r3
   159c4:	cmp	lr, #0
   159c8:	strdne	r4, [lr]
   159cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159d4:	mov	r7, r0
   159d8:	ldr	r6, [pc, #72]	; 15a28 <putchar_unlocked@plt+0x45fc>
   159dc:	ldr	r5, [pc, #72]	; 15a2c <putchar_unlocked@plt+0x4600>
   159e0:	add	r6, pc, r6
   159e4:	add	r5, pc, r5
   159e8:	sub	r6, r6, r5
   159ec:	mov	r8, r1
   159f0:	mov	r9, r2
   159f4:	bl	11100 <calloc@plt-0x20>
   159f8:	asrs	r6, r6, #2
   159fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a00:	mov	r4, #0
   15a04:	add	r4, r4, #1
   15a08:	ldr	r3, [r5], #4
   15a0c:	mov	r2, r9
   15a10:	mov	r1, r8
   15a14:	mov	r0, r7
   15a18:	blx	r3
   15a1c:	cmp	r6, r4
   15a20:	bne	15a04 <putchar_unlocked@plt+0x45d8>
   15a24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a28:	andeq	r1, r1, r4, lsr #10
   15a2c:	andeq	r1, r1, ip, lsl r5
   15a30:	bx	lr
   15a34:	ldr	r3, [pc, #12]	; 15a48 <putchar_unlocked@plt+0x461c>
   15a38:	mov	r1, #0
   15a3c:	add	r3, pc, r3
   15a40:	ldr	r2, [r3]
   15a44:	b	11330 <__cxa_atexit@plt>
   15a48:	ldrdeq	r1, [r1], -r8
   15a4c:	mov	r2, r1
   15a50:	mov	r1, r0
   15a54:	mov	r0, #3
   15a58:	b	113fc <__xstat64@plt>

Disassembly of section .fini:

00015a5c <.fini>:
   15a5c:	push	{r3, lr}
   15a60:	pop	{r3, pc}
