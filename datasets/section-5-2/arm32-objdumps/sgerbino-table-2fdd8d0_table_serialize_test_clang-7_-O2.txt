
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r5, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #86016	; 0x15000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #86016	; 0x15000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #86016	; 0x15000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #86016	; 0x15000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #86016	; 0x15000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #86016	; 0x15000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #86016	; 0x15000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #86016	; 0x15000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #86016	; 0x15000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #86016	; 0x15000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #86016	; 0x15000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #86016	; 0x15000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #86016	; 0x15000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #86016	; 0x15000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #86016	; 0x15000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #86016	; 0x15000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r6, r1, ip, lsl #3
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	andeq	r6, r1, ip, lsr #2
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r4, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r7, r2, r8, asr r0
   120c4:	andeq	r7, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r7, r2, r8, asr r0
   120fc:	andeq	r7, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r7, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	sub	r4, fp, #100	; 0x64
   1215c:	mov	r5, r0
   12160:	mov	r0, r4
   12164:	bl	1285c <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	mov	r2, #0
   12170:	movt	r0, #20971	; 0x51eb
   12174:	smmul	r0, r5, r0
   12178:	asr	r1, r0, #5
   1217c:	add	r0, r1, r0, lsr #31
   12180:	mov	r1, #100	; 0x64
   12184:	mls	r5, r0, r1, r5
   12188:	ldr	r1, [pc, #1636]	; 127f4 <main@@Base+0x6c4>
   1218c:	mov	r0, r4
   12190:	add	r1, pc, r1
   12194:	bl	132d0 <table_add_column@@Base>
   12198:	ldr	r1, [pc, #1624]	; 127f8 <main@@Base+0x6c8>
   1219c:	mov	r8, r0
   121a0:	mov	r0, r4
   121a4:	mov	r2, #21
   121a8:	add	r1, pc, r1
   121ac:	bl	132d0 <table_add_column@@Base>
   121b0:	ldr	r9, [pc, #1604]	; 127fc <main@@Base+0x6cc>
   121b4:	add	r6, r5, #99	; 0x63
   121b8:	mov	sl, r0
   121bc:	mvn	r7, #0
   121c0:	add	r5, sp, #8
   121c4:	add	r9, pc, r9
   121c8:	add	r7, r7, #1
   121cc:	mov	r0, r5
   121d0:	mov	r1, #255	; 0xff
   121d4:	mov	r2, r9
   121d8:	mov	r3, r7
   121dc:	bl	12004 <snprintf@plt>
   121e0:	mov	r0, r4
   121e4:	bl	13f74 <table_add_row@@Base>
   121e8:	mov	r0, r4
   121ec:	mov	r1, r7
   121f0:	mov	r2, r8
   121f4:	mov	r3, r7
   121f8:	bl	144d0 <table_set_int@@Base>
   121fc:	mov	r0, r4
   12200:	mov	r1, r7
   12204:	mov	r2, sl
   12208:	mov	r3, r5
   1220c:	bl	14e8c <table_set_string@@Base>
   12210:	cmp	r7, r6
   12214:	blt	121c8 <main@@Base+0x98>
   12218:	movw	r6, #34464	; 0x86a0
   1221c:	sub	r5, fp, #100	; 0x64
   12220:	add	r4, sp, #8
   12224:	movt	r6, #1
   12228:	mov	r0, r5
   1222c:	mov	r1, r4
   12230:	mov	r2, r6
   12234:	bl	15008 <table_serialize@@Base>
   12238:	mov	r0, r4
   1223c:	mov	r1, r6
   12240:	bl	15288 <table_deserialize@@Base>
   12244:	mov	r8, r0
   12248:	mov	r0, r5
   1224c:	bl	13f6c <table_get_row_length@@Base>
   12250:	mov	r4, r0
   12254:	mov	r0, r8
   12258:	bl	13f6c <table_get_row_length@@Base>
   1225c:	mov	r5, r0
   12260:	mov	r6, #0
   12264:	cmp	r0, r4
   12268:	str	r4, [sp, #4]
   1226c:	beq	12288 <main@@Base+0x158>
   12270:	ldr	r0, [pc, #1416]	; 12800 <main@@Base+0x6d0>
   12274:	ldr	r1, [sp, #4]
   12278:	mov	r2, r5
   1227c:	add	r0, pc, r0
   12280:	bl	11f8c <printf@plt>
   12284:	mvn	r6, #0
   12288:	sub	r0, fp, #100	; 0x64
   1228c:	bl	13248 <table_get_column_length@@Base>
   12290:	mov	r7, r0
   12294:	mov	r0, r8
   12298:	bl	13248 <table_get_column_length@@Base>
   1229c:	cmp	r0, r7
   122a0:	bne	127b4 <main@@Base+0x684>
   122a4:	ldr	r0, [sp, #4]
   122a8:	str	r6, [sp]
   122ac:	cmp	r5, r0
   122b0:	bne	127d0 <main@@Base+0x6a0>
   122b4:	cmp	r5, #1
   122b8:	blt	127d0 <main@@Base+0x6a0>
   122bc:	mov	r6, #0
   122c0:	sub	r9, fp, #100	; 0x64
   122c4:	cmp	r7, #1
   122c8:	blt	127a0 <main@@Base+0x670>
   122cc:	mov	sl, #0
   122d0:	mov	r0, r9
   122d4:	mov	r1, sl
   122d8:	bl	132bc <table_get_column_data_type@@Base>
   122dc:	cmp	r0, #23
   122e0:	bhi	12774 <main@@Base+0x644>
   122e4:	add	r1, pc, #4
   122e8:	ldr	r0, [r1, r0, lsl #2]
   122ec:	add	pc, r1, r0
   122f0:	andeq	r0, r0, r0, rrx
   122f4:	muleq	r0, r8, r0
   122f8:	andeq	r0, r0, r0, asr #1
   122fc:	andeq	r0, r0, r8, ror #1
   12300:	andeq	r0, r0, r0, lsl r1
   12304:	andeq	r0, r0, r8, lsr r1
   12308:	andeq	r0, r0, r0, ror #2
   1230c:	andeq	r0, r0, r8, lsl #3
   12310:			; <UNDEFINED> instruction: 0x000001b0
   12314:	ldrdeq	r0, [r0], -ip
   12318:	andeq	r0, r0, r8, lsl #4
   1231c:	andeq	r0, r0, r0, lsr r2
   12320:	andeq	r0, r0, r8, asr r2
   12324:	andeq	r0, r0, r0, lsl #5
   12328:	andeq	r0, r0, r8, lsr #5
   1232c:	ldrdeq	r0, [r0], -r4
   12330:	andeq	r0, r0, r0, lsl r3
   12334:	andeq	r0, r0, ip, lsr r3
   12338:	andeq	r0, r0, r4, ror #6
   1233c:	muleq	r0, r8, r3
   12340:	andeq	r0, r0, r0, asr #7
   12344:	andeq	r0, r0, r8, ror #7
   12348:	andeq	r0, r0, r4, lsr #8
   1234c:	andeq	r0, r0, r8, asr r4
   12350:	mov	r0, r9
   12354:	mov	r1, r6
   12358:	mov	r2, sl
   1235c:	bl	13cc4 <table_get_int@@Base>
   12360:	mov	r4, r8
   12364:	mov	r8, r0
   12368:	mov	r1, r6
   1236c:	mov	r2, sl
   12370:	mov	r0, r4
   12374:	bl	13cc4 <table_get_int@@Base>
   12378:	cmp	r8, r0
   1237c:	mov	r8, r4
   12380:	beq	12774 <main@@Base+0x644>
   12384:	b	12784 <main@@Base+0x654>
   12388:	mov	r0, r9
   1238c:	mov	r1, r6
   12390:	mov	r2, sl
   12394:	bl	13cdc <table_get_uint@@Base>
   12398:	mov	r4, r0
   1239c:	mov	r0, r8
   123a0:	mov	r1, r6
   123a4:	mov	r2, sl
   123a8:	bl	13cdc <table_get_uint@@Base>
   123ac:	b	1276c <main@@Base+0x63c>
   123b0:	mov	r0, r9
   123b4:	mov	r1, r6
   123b8:	mov	r2, sl
   123bc:	bl	13cf4 <table_get_int8@@Base>
   123c0:	mov	r4, r0
   123c4:	mov	r0, r8
   123c8:	mov	r1, r6
   123cc:	mov	r2, sl
   123d0:	bl	13cf4 <table_get_int8@@Base>
   123d4:	b	1276c <main@@Base+0x63c>
   123d8:	mov	r0, r9
   123dc:	mov	r1, r6
   123e0:	mov	r2, sl
   123e4:	bl	13d0c <table_get_uint8@@Base>
   123e8:	mov	r4, r0
   123ec:	mov	r0, r8
   123f0:	mov	r1, r6
   123f4:	mov	r2, sl
   123f8:	bl	13d0c <table_get_uint8@@Base>
   123fc:	b	1276c <main@@Base+0x63c>
   12400:	mov	r0, r9
   12404:	mov	r1, r6
   12408:	mov	r2, sl
   1240c:	bl	13d24 <table_get_int16@@Base>
   12410:	mov	r4, r0
   12414:	mov	r0, r8
   12418:	mov	r1, r6
   1241c:	mov	r2, sl
   12420:	bl	13d24 <table_get_int16@@Base>
   12424:	b	1276c <main@@Base+0x63c>
   12428:	mov	r0, r9
   1242c:	mov	r1, r6
   12430:	mov	r2, sl
   12434:	bl	13d3c <table_get_uint16@@Base>
   12438:	mov	r4, r0
   1243c:	mov	r0, r8
   12440:	mov	r1, r6
   12444:	mov	r2, sl
   12448:	bl	13d3c <table_get_uint16@@Base>
   1244c:	b	1276c <main@@Base+0x63c>
   12450:	mov	r0, r9
   12454:	mov	r1, r6
   12458:	mov	r2, sl
   1245c:	bl	13d54 <table_get_int32@@Base>
   12460:	mov	r4, r0
   12464:	mov	r0, r8
   12468:	mov	r1, r6
   1246c:	mov	r2, sl
   12470:	bl	13d54 <table_get_int32@@Base>
   12474:	b	1276c <main@@Base+0x63c>
   12478:	mov	r0, r9
   1247c:	mov	r1, r6
   12480:	mov	r2, sl
   12484:	bl	13d6c <table_get_uint32@@Base>
   12488:	mov	r4, r0
   1248c:	mov	r0, r8
   12490:	mov	r1, r6
   12494:	mov	r2, sl
   12498:	bl	13d6c <table_get_uint32@@Base>
   1249c:	b	1276c <main@@Base+0x63c>
   124a0:	mov	r0, r9
   124a4:	mov	r1, r6
   124a8:	mov	r2, sl
   124ac:	bl	13d84 <table_get_int64@@Base>
   124b0:	mov	r4, r0
   124b4:	mov	r5, r1
   124b8:	mov	r0, r8
   124bc:	mov	r1, r6
   124c0:	mov	r2, sl
   124c4:	bl	13d84 <table_get_int64@@Base>
   124c8:	b	125ec <main@@Base+0x4bc>
   124cc:	mov	r0, r9
   124d0:	mov	r1, r6
   124d4:	mov	r2, sl
   124d8:	bl	13d9c <table_get_uint64@@Base>
   124dc:	mov	r4, r0
   124e0:	mov	r5, r1
   124e4:	mov	r0, r8
   124e8:	mov	r1, r6
   124ec:	mov	r2, sl
   124f0:	bl	13d9c <table_get_uint64@@Base>
   124f4:	b	125ec <main@@Base+0x4bc>
   124f8:	mov	r0, r9
   124fc:	mov	r1, r6
   12500:	mov	r2, sl
   12504:	bl	13db4 <table_get_short@@Base>
   12508:	mov	r4, r0
   1250c:	mov	r0, r8
   12510:	mov	r1, r6
   12514:	mov	r2, sl
   12518:	bl	13db4 <table_get_short@@Base>
   1251c:	b	1276c <main@@Base+0x63c>
   12520:	mov	r0, r9
   12524:	mov	r1, r6
   12528:	mov	r2, sl
   1252c:	bl	13dcc <table_get_ushort@@Base>
   12530:	mov	r4, r0
   12534:	mov	r0, r8
   12538:	mov	r1, r6
   1253c:	mov	r2, sl
   12540:	bl	13dcc <table_get_ushort@@Base>
   12544:	b	1276c <main@@Base+0x63c>
   12548:	mov	r0, r9
   1254c:	mov	r1, r6
   12550:	mov	r2, sl
   12554:	bl	13de4 <table_get_long@@Base>
   12558:	mov	r4, r0
   1255c:	mov	r0, r8
   12560:	mov	r1, r6
   12564:	mov	r2, sl
   12568:	bl	13de4 <table_get_long@@Base>
   1256c:	b	1276c <main@@Base+0x63c>
   12570:	mov	r0, r9
   12574:	mov	r1, r6
   12578:	mov	r2, sl
   1257c:	bl	13dfc <table_get_ulong@@Base>
   12580:	mov	r4, r0
   12584:	mov	r0, r8
   12588:	mov	r1, r6
   1258c:	mov	r2, sl
   12590:	bl	13dfc <table_get_ulong@@Base>
   12594:	b	1276c <main@@Base+0x63c>
   12598:	mov	r0, r9
   1259c:	mov	r1, r6
   125a0:	mov	r2, sl
   125a4:	bl	13e14 <table_get_llong@@Base>
   125a8:	mov	r4, r0
   125ac:	mov	r5, r1
   125b0:	mov	r0, r8
   125b4:	mov	r1, r6
   125b8:	mov	r2, sl
   125bc:	bl	13e14 <table_get_llong@@Base>
   125c0:	b	125ec <main@@Base+0x4bc>
   125c4:	mov	r0, r9
   125c8:	mov	r1, r6
   125cc:	mov	r2, sl
   125d0:	bl	13e2c <table_get_ullong@@Base>
   125d4:	mov	r4, r0
   125d8:	mov	r5, r1
   125dc:	mov	r0, r8
   125e0:	mov	r1, r6
   125e4:	mov	r2, sl
   125e8:	bl	13e2c <table_get_ullong@@Base>
   125ec:	eor	r1, r5, r1
   125f0:	eor	r0, r4, r0
   125f4:	orrs	r0, r0, r1
   125f8:	beq	12774 <main@@Base+0x644>
   125fc:	b	12784 <main@@Base+0x654>
   12600:	mov	r0, r9
   12604:	mov	r1, r6
   12608:	mov	r2, sl
   1260c:	bl	13e44 <table_get_float@@Base>
   12610:	mov	r0, r8
   12614:	mov	r1, r6
   12618:	mov	r2, sl
   1261c:	vmov.f32	s16, s0
   12620:	bl	13e44 <table_get_float@@Base>
   12624:	vcmp.f32	s16, s0
   12628:	b	1267c <main@@Base+0x54c>
   1262c:	mov	r0, r9
   12630:	mov	r1, r6
   12634:	mov	r2, sl
   12638:	bl	13e5c <table_get_double@@Base>
   1263c:	mov	r0, r8
   12640:	mov	r1, r6
   12644:	mov	r2, sl
   12648:	vmov.f64	d8, d0
   1264c:	bl	13e5c <table_get_double@@Base>
   12650:	b	12678 <main@@Base+0x548>
   12654:	mov	r0, r9
   12658:	mov	r1, r6
   1265c:	mov	r2, sl
   12660:	bl	13e74 <table_get_ldouble@@Base>
   12664:	mov	r0, r8
   12668:	mov	r1, r6
   1266c:	mov	r2, sl
   12670:	vmov.f64	d8, d0
   12674:	bl	13e74 <table_get_ldouble@@Base>
   12678:	vcmp.f64	d8, d0
   1267c:	vmrs	APSR_nzcv, fpscr
   12680:	beq	12774 <main@@Base+0x644>
   12684:	b	12784 <main@@Base+0x654>
   12688:	mov	r0, r9
   1268c:	mov	r1, r6
   12690:	mov	r2, sl
   12694:	bl	13e8c <table_get_char@@Base>
   12698:	mov	r4, r0
   1269c:	mov	r0, r8
   126a0:	mov	r1, r6
   126a4:	mov	r2, sl
   126a8:	bl	13e8c <table_get_char@@Base>
   126ac:	b	1276c <main@@Base+0x63c>
   126b0:	mov	r0, r9
   126b4:	mov	r1, r6
   126b8:	mov	r2, sl
   126bc:	bl	13ea4 <table_get_uchar@@Base>
   126c0:	mov	r4, r0
   126c4:	mov	r0, r8
   126c8:	mov	r1, r6
   126cc:	mov	r2, sl
   126d0:	bl	13ea4 <table_get_uchar@@Base>
   126d4:	b	1276c <main@@Base+0x63c>
   126d8:	mov	r0, r9
   126dc:	mov	r1, r6
   126e0:	mov	r2, sl
   126e4:	bl	13ebc <table_get_string@@Base>
   126e8:	mov	r4, r0
   126ec:	mov	r0, r8
   126f0:	mov	r1, r6
   126f4:	mov	r2, sl
   126f8:	bl	13ebc <table_get_string@@Base>
   126fc:	mov	r1, r0
   12700:	mov	r0, r4
   12704:	bl	11f80 <strcmp@plt>
   12708:	cmp	r0, #0
   1270c:	beq	12774 <main@@Base+0x644>
   12710:	b	12784 <main@@Base+0x654>
   12714:	mov	r0, r9
   12718:	mov	r1, r6
   1271c:	mov	r2, sl
   12720:	bl	13cac <table_get_bool@@Base>
   12724:	mov	r4, r0
   12728:	mov	r0, r8
   1272c:	mov	r1, r6
   12730:	mov	r2, sl
   12734:	bl	13cac <table_get_bool@@Base>
   12738:	eor	r0, r4, r0
   1273c:	cmp	r0, #1
   12740:	bne	12774 <main@@Base+0x644>
   12744:	b	12784 <main@@Base+0x654>
   12748:	mov	r0, r9
   1274c:	mov	r1, r6
   12750:	mov	r2, sl
   12754:	bl	13ed0 <table_get_ptr@@Base>
   12758:	mov	r4, r0
   1275c:	mov	r0, r8
   12760:	mov	r1, r6
   12764:	mov	r2, sl
   12768:	bl	13ed0 <table_get_ptr@@Base>
   1276c:	cmp	r4, r0
   12770:	bne	12784 <main@@Base+0x654>
   12774:	add	sl, sl, #1
   12778:	cmp	sl, r7
   1277c:	blt	122d0 <main@@Base+0x1a0>
   12780:	b	127a0 <main@@Base+0x670>
   12784:	ldr	r0, [pc, #124]	; 12808 <main@@Base+0x6d8>
   12788:	mov	r1, r6
   1278c:	mov	r2, sl
   12790:	add	r0, pc, r0
   12794:	bl	11f8c <printf@plt>
   12798:	mvn	r0, #0
   1279c:	str	r0, [sp]
   127a0:	ldr	r0, [sp, #4]
   127a4:	add	r6, r6, #1
   127a8:	cmp	r6, r0
   127ac:	bne	122c4 <main@@Base+0x194>
   127b0:	b	127d0 <main@@Base+0x6a0>
   127b4:	mov	r2, r0
   127b8:	ldr	r0, [pc, #68]	; 12804 <main@@Base+0x6d4>
   127bc:	mov	r1, r7
   127c0:	add	r0, pc, r0
   127c4:	bl	11f8c <printf@plt>
   127c8:	mvn	r0, #0
   127cc:	str	r0, [sp]
   127d0:	sub	r0, fp, #100	; 0x64
   127d4:	bl	128b8 <table_destroy@@Base>
   127d8:	mov	r0, r8
   127dc:	bl	1289c <table_delete@@Base>
   127e0:	ldr	r0, [sp]
   127e4:	sub	sp, fp, #40	; 0x28
   127e8:	vpop	{d8}
   127ec:	add	sp, sp, #4
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127f4:	andeq	r4, r0, r4
   127f8:	andeq	r3, r0, pc, ror #31
   127fc:	andeq	r4, r0, pc, asr #32
   12800:	andeq	r3, r0, r1, lsr #30
   12804:	andeq	r3, r0, r8, lsl sl
   12808:	andeq	r3, r0, r6, lsl #21

0001280c <table_new@@Base>:
   1280c:	push	{fp, lr}
   12810:	mov	fp, sp
   12814:	mov	r0, #56	; 0x38
   12818:	bl	11fc8 <malloc@plt>
   1281c:	mov	r1, #0
   12820:	mov	r2, #10
   12824:	mov	r3, #20
   12828:	vmov.i32	q8, #0	; 0x00000000
   1282c:	str	r1, [r0]
   12830:	stmib	r0, {r1, r2}
   12834:	str	r1, [r0, #12]
   12838:	str	r1, [r0, #16]
   1283c:	str	r1, [r0, #20]
   12840:	str	r3, [r0, #24]
   12844:	str	r1, [r0, #28]
   12848:	str	r2, [r0, #48]	; 0x30
   1284c:	str	r1, [r0, #52]	; 0x34
   12850:	add	r1, r0, #32
   12854:	vst1.32	{d16-d17}, [r1]
   12858:	pop	{fp, pc}

0001285c <table_init@@Base>:
   1285c:	mov	r1, #0
   12860:	mov	r2, #10
   12864:	mov	r3, #20
   12868:	vmov.i32	q8, #0	; 0x00000000
   1286c:	str	r1, [r0]
   12870:	stmib	r0, {r1, r2}
   12874:	str	r1, [r0, #12]
   12878:	str	r1, [r0, #16]
   1287c:	str	r1, [r0, #20]
   12880:	str	r3, [r0, #24]
   12884:	str	r1, [r0, #28]
   12888:	str	r2, [r0, #48]	; 0x30
   1288c:	str	r1, [r0, #52]	; 0x34
   12890:	add	r0, r0, #32
   12894:	vst1.32	{d16-d17}, [r0]
   12898:	bx	lr

0001289c <table_delete@@Base>:
   1289c:	push	{r4, sl, fp, lr}
   128a0:	add	fp, sp, #8
   128a4:	mov	r4, r0
   128a8:	bl	128b8 <table_destroy@@Base>
   128ac:	mov	r0, r4
   128b0:	pop	{r4, sl, fp, lr}
   128b4:	b	11f98 <free@plt>

000128b8 <table_destroy@@Base>:
   128b8:	cmp	r0, #0
   128bc:	bxeq	lr
   128c0:	push	{r4, r5, r6, sl, fp, lr}
   128c4:	add	fp, sp, #16
   128c8:	mvn	r1, #0
   128cc:	mvn	r2, #0
   128d0:	mov	r3, #64	; 0x40
   128d4:	mov	r4, r0
   128d8:	bl	13154 <table_notify@@Base>
   128dc:	mov	r0, r4
   128e0:	bl	13f6c <table_get_row_length@@Base>
   128e4:	cmp	r0, #1
   128e8:	blt	1290c <table_destroy@@Base+0x54>
   128ec:	mov	r5, r0
   128f0:	mov	r6, #0
   128f4:	mov	r0, r4
   128f8:	mov	r1, r6
   128fc:	bl	13f14 <table_row_destroy@@Base>
   12900:	add	r6, r6, #1
   12904:	cmp	r5, r6
   12908:	bne	128f4 <table_destroy@@Base+0x3c>
   1290c:	ldr	r0, [r4, #16]
   12910:	cmp	r0, #0
   12914:	beq	1291c <table_destroy@@Base+0x64>
   12918:	bl	11f98 <free@plt>
   1291c:	mov	r0, r4
   12920:	bl	13248 <table_get_column_length@@Base>
   12924:	cmp	r0, #1
   12928:	blt	1294c <table_destroy@@Base+0x94>
   1292c:	mov	r5, r0
   12930:	mov	r6, #0
   12934:	mov	r0, r4
   12938:	mov	r1, r6
   1293c:	bl	13230 <table_column_destroy@@Base>
   12940:	add	r6, r6, #1
   12944:	cmp	r5, r6
   12948:	bne	12934 <table_destroy@@Base+0x7c>
   1294c:	ldr	r0, [r4]
   12950:	cmp	r0, #0
   12954:	beq	1295c <table_destroy@@Base+0xa4>
   12958:	bl	11f98 <free@plt>
   1295c:	ldr	r0, [r4, #36]	; 0x24
   12960:	cmp	r0, #0
   12964:	beq	1296c <table_destroy@@Base+0xb4>
   12968:	bl	11f98 <free@plt>
   1296c:	ldr	r0, [r4, #40]	; 0x28
   12970:	cmp	r0, #0
   12974:	beq	1297c <table_destroy@@Base+0xc4>
   12978:	bl	11f98 <free@plt>
   1297c:	ldr	r0, [r4, #44]	; 0x2c
   12980:	cmp	r0, #0
   12984:	pop	{r4, r5, r6, sl, fp, lr}
   12988:	beq	12990 <table_destroy@@Base+0xd8>
   1298c:	b	11f98 <free@plt>
   12990:	bx	lr

00012994 <table_dupe@@Base>:
   12994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12998:	add	fp, sp, #28
   1299c:	sub	sp, sp, #12
   129a0:	mov	r4, r0
   129a4:	bl	13f6c <table_get_row_length@@Base>
   129a8:	mov	r8, r0
   129ac:	mov	r0, r4
   129b0:	bl	13248 <table_get_column_length@@Base>
   129b4:	mov	r6, r0
   129b8:	mov	r0, #56	; 0x38
   129bc:	bl	11fc8 <malloc@plt>
   129c0:	mov	sl, r0
   129c4:	mov	r5, #0
   129c8:	mov	r0, #10
   129cc:	mov	r1, #20
   129d0:	cmp	r6, #1
   129d4:	vmov.i32	q8, #0	; 0x00000000
   129d8:	str	r5, [sl]
   129dc:	str	r5, [sl, #4]
   129e0:	str	r0, [sl, #8]
   129e4:	str	r5, [sl, #12]
   129e8:	str	r5, [sl, #16]
   129ec:	str	r5, [sl, #20]
   129f0:	str	r1, [sl, #24]
   129f4:	str	r5, [sl, #28]
   129f8:	str	r0, [sl, #48]	; 0x30
   129fc:	add	r0, sl, #32
   12a00:	str	r5, [sl, #52]	; 0x34
   12a04:	vst1.32	{d16-d17}, [r0]
   12a08:	blt	12a44 <table_dupe@@Base+0xb0>
   12a0c:	mov	r0, r4
   12a10:	mov	r1, r5
   12a14:	bl	132ac <table_get_column_name@@Base>
   12a18:	mov	r7, r0
   12a1c:	mov	r0, r4
   12a20:	mov	r1, r5
   12a24:	bl	132bc <table_get_column_data_type@@Base>
   12a28:	mov	r2, r0
   12a2c:	mov	r0, sl
   12a30:	mov	r1, r7
   12a34:	bl	132d0 <table_add_column@@Base>
   12a38:	add	r5, r5, #1
   12a3c:	cmp	r6, r5
   12a40:	bne	12a0c <table_dupe@@Base+0x78>
   12a44:	cmp	r8, #1
   12a48:	blt	12eb4 <table_dupe@@Base+0x520>
   12a4c:	mov	r5, #0
   12a50:	add	r9, sp, #8
   12a54:	mov	r0, sl
   12a58:	bl	13f74 <table_add_row@@Base>
   12a5c:	cmp	r6, #1
   12a60:	blt	12ea8 <table_dupe@@Base+0x514>
   12a64:	mov	r7, #0
   12a68:	mov	r0, r4
   12a6c:	mov	r1, r7
   12a70:	bl	132bc <table_get_column_data_type@@Base>
   12a74:	cmp	r0, #23
   12a78:	bhi	12e9c <table_dupe@@Base+0x508>
   12a7c:	add	r1, pc, #4
   12a80:	ldr	r0, [r1, r0, lsl #2]
   12a84:	add	pc, r1, r0
   12a88:	andeq	r0, r0, r0, rrx
   12a8c:	andeq	r0, r0, r8, lsl #1
   12a90:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12a94:	ldrdeq	r0, [r0], -r8
   12a98:	andeq	r0, r0, r0, lsl #2
   12a9c:	andeq	r0, r0, r8, lsr #2
   12aa0:	andeq	r0, r0, r0, asr r1
   12aa4:	andeq	r0, r0, r8, ror r1
   12aa8:	andeq	r0, r0, r0, lsr #3
   12aac:	andeq	r0, r0, r8, asr #3
   12ab0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12ab4:	andeq	r0, r0, r8, lsl r2
   12ab8:	andeq	r0, r0, r0, asr #4
   12abc:	andeq	r0, r0, r8, ror #4
   12ac0:	muleq	r0, r0, r2
   12ac4:			; <UNDEFINED> instruction: 0x000002b8
   12ac8:	andeq	r0, r0, r0, ror #5
   12acc:	andeq	r0, r0, r4, lsl #6
   12ad0:	andeq	r0, r0, r8, lsr #6
   12ad4:	andeq	r0, r0, ip, asr #6
   12ad8:	andeq	r0, r0, r4, ror r3
   12adc:	muleq	r0, ip, r3
   12ae0:	andeq	r0, r0, r4, asr #7
   12ae4:	andeq	r0, r0, ip, ror #7
   12ae8:	mov	r0, r4
   12aec:	mov	r1, r5
   12af0:	mov	r2, r7
   12af4:	bl	13cc4 <table_get_int@@Base>
   12af8:	mov	r3, r0
   12afc:	mov	r0, sl
   12b00:	mov	r1, r5
   12b04:	mov	r2, r7
   12b08:	bl	144d0 <table_set_int@@Base>
   12b0c:	b	12e9c <table_dupe@@Base+0x508>
   12b10:	mov	r0, r4
   12b14:	mov	r1, r5
   12b18:	mov	r2, r7
   12b1c:	bl	13cdc <table_get_uint@@Base>
   12b20:	mov	r3, r0
   12b24:	mov	r0, sl
   12b28:	mov	r1, r5
   12b2c:	mov	r2, r7
   12b30:	bl	14550 <table_set_uint@@Base>
   12b34:	b	12e9c <table_dupe@@Base+0x508>
   12b38:	mov	r0, r4
   12b3c:	mov	r1, r5
   12b40:	mov	r2, r7
   12b44:	bl	13cf4 <table_get_int8@@Base>
   12b48:	mov	r3, r0
   12b4c:	mov	r0, sl
   12b50:	mov	r1, r5
   12b54:	mov	r2, r7
   12b58:	bl	145d0 <table_set_int8@@Base>
   12b5c:	b	12e9c <table_dupe@@Base+0x508>
   12b60:	mov	r0, r4
   12b64:	mov	r1, r5
   12b68:	mov	r2, r7
   12b6c:	bl	13d0c <table_get_uint8@@Base>
   12b70:	mov	r3, r0
   12b74:	mov	r0, sl
   12b78:	mov	r1, r5
   12b7c:	mov	r2, r7
   12b80:	bl	14650 <table_set_uint8@@Base>
   12b84:	b	12e9c <table_dupe@@Base+0x508>
   12b88:	mov	r0, r4
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	13d24 <table_get_int16@@Base>
   12b98:	mov	r3, r0
   12b9c:	mov	r0, sl
   12ba0:	mov	r1, r5
   12ba4:	mov	r2, r7
   12ba8:	bl	146d0 <table_set_int16@@Base>
   12bac:	b	12e9c <table_dupe@@Base+0x508>
   12bb0:	mov	r0, r4
   12bb4:	mov	r1, r5
   12bb8:	mov	r2, r7
   12bbc:	bl	13d3c <table_get_uint16@@Base>
   12bc0:	mov	r3, r0
   12bc4:	mov	r0, sl
   12bc8:	mov	r1, r5
   12bcc:	mov	r2, r7
   12bd0:	bl	14750 <table_set_uint16@@Base>
   12bd4:	b	12e9c <table_dupe@@Base+0x508>
   12bd8:	mov	r0, r4
   12bdc:	mov	r1, r5
   12be0:	mov	r2, r7
   12be4:	bl	13d54 <table_get_int32@@Base>
   12be8:	mov	r3, r0
   12bec:	mov	r0, sl
   12bf0:	mov	r1, r5
   12bf4:	mov	r2, r7
   12bf8:	bl	147d0 <table_set_int32@@Base>
   12bfc:	b	12e9c <table_dupe@@Base+0x508>
   12c00:	mov	r0, r4
   12c04:	mov	r1, r5
   12c08:	mov	r2, r7
   12c0c:	bl	13d6c <table_get_uint32@@Base>
   12c10:	mov	r3, r0
   12c14:	mov	r0, sl
   12c18:	mov	r1, r5
   12c1c:	mov	r2, r7
   12c20:	bl	14850 <table_set_uint32@@Base>
   12c24:	b	12e9c <table_dupe@@Base+0x508>
   12c28:	mov	r0, r4
   12c2c:	mov	r1, r5
   12c30:	mov	r2, r7
   12c34:	bl	13d84 <table_get_int64@@Base>
   12c38:	stm	sp, {r0, r1}
   12c3c:	mov	r0, sl
   12c40:	mov	r1, r5
   12c44:	mov	r2, r7
   12c48:	bl	148d0 <table_set_int64@@Base>
   12c4c:	b	12e9c <table_dupe@@Base+0x508>
   12c50:	mov	r0, r4
   12c54:	mov	r1, r5
   12c58:	mov	r2, r7
   12c5c:	bl	13d9c <table_get_uint64@@Base>
   12c60:	stm	sp, {r0, r1}
   12c64:	mov	r0, sl
   12c68:	mov	r1, r5
   12c6c:	mov	r2, r7
   12c70:	bl	14958 <table_set_uint64@@Base>
   12c74:	b	12e9c <table_dupe@@Base+0x508>
   12c78:	mov	r0, r4
   12c7c:	mov	r1, r5
   12c80:	mov	r2, r7
   12c84:	bl	13db4 <table_get_short@@Base>
   12c88:	mov	r3, r0
   12c8c:	mov	r0, sl
   12c90:	mov	r1, r5
   12c94:	mov	r2, r7
   12c98:	bl	149e0 <table_set_short@@Base>
   12c9c:	b	12e9c <table_dupe@@Base+0x508>
   12ca0:	mov	r0, r4
   12ca4:	mov	r1, r5
   12ca8:	mov	r2, r7
   12cac:	bl	13dcc <table_get_ushort@@Base>
   12cb0:	mov	r3, r0
   12cb4:	mov	r0, sl
   12cb8:	mov	r1, r5
   12cbc:	mov	r2, r7
   12cc0:	bl	14a60 <table_set_ushort@@Base>
   12cc4:	b	12e9c <table_dupe@@Base+0x508>
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, r5
   12cd0:	mov	r2, r7
   12cd4:	bl	13de4 <table_get_long@@Base>
   12cd8:	mov	r3, r0
   12cdc:	mov	r0, sl
   12ce0:	mov	r1, r5
   12ce4:	mov	r2, r7
   12ce8:	bl	14ae0 <table_set_long@@Base>
   12cec:	b	12e9c <table_dupe@@Base+0x508>
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r5
   12cf8:	mov	r2, r7
   12cfc:	bl	13dfc <table_get_ulong@@Base>
   12d00:	mov	r3, r0
   12d04:	mov	r0, sl
   12d08:	mov	r1, r5
   12d0c:	mov	r2, r7
   12d10:	bl	14b60 <table_set_ulong@@Base>
   12d14:	b	12e9c <table_dupe@@Base+0x508>
   12d18:	mov	r0, r4
   12d1c:	mov	r1, r5
   12d20:	mov	r2, r7
   12d24:	bl	13e14 <table_get_llong@@Base>
   12d28:	stm	sp, {r0, r1}
   12d2c:	mov	r0, sl
   12d30:	mov	r1, r5
   12d34:	mov	r2, r7
   12d38:	bl	14be0 <table_set_llong@@Base>
   12d3c:	b	12e9c <table_dupe@@Base+0x508>
   12d40:	mov	r0, r4
   12d44:	mov	r1, r5
   12d48:	mov	r2, r7
   12d4c:	bl	13e2c <table_get_ullong@@Base>
   12d50:	stm	sp, {r0, r1}
   12d54:	mov	r0, sl
   12d58:	mov	r1, r5
   12d5c:	mov	r2, r7
   12d60:	bl	14c68 <table_set_ullong@@Base>
   12d64:	b	12e9c <table_dupe@@Base+0x508>
   12d68:	mov	r0, r4
   12d6c:	mov	r1, r5
   12d70:	mov	r2, r7
   12d74:	bl	13e44 <table_get_float@@Base>
   12d78:	mov	r0, sl
   12d7c:	mov	r1, r5
   12d80:	mov	r2, r7
   12d84:	bl	14cf0 <table_set_float@@Base>
   12d88:	b	12e9c <table_dupe@@Base+0x508>
   12d8c:	mov	r0, r4
   12d90:	mov	r1, r5
   12d94:	mov	r2, r7
   12d98:	bl	13e5c <table_get_double@@Base>
   12d9c:	mov	r0, sl
   12da0:	mov	r1, r5
   12da4:	mov	r2, r7
   12da8:	bl	14d7c <table_set_double@@Base>
   12dac:	b	12e9c <table_dupe@@Base+0x508>
   12db0:	mov	r0, r4
   12db4:	mov	r1, r5
   12db8:	mov	r2, r7
   12dbc:	bl	13e74 <table_get_ldouble@@Base>
   12dc0:	mov	r0, sl
   12dc4:	mov	r1, r5
   12dc8:	mov	r2, r7
   12dcc:	bl	14e04 <table_set_ldouble@@Base>
   12dd0:	b	12e9c <table_dupe@@Base+0x508>
   12dd4:	mov	r0, r4
   12dd8:	mov	r1, r5
   12ddc:	mov	r2, r7
   12de0:	bl	13e8c <table_get_char@@Base>
   12de4:	mov	r3, r0
   12de8:	mov	r0, sl
   12dec:	mov	r1, r5
   12df0:	mov	r2, r7
   12df4:	bl	14eac <table_set_char@@Base>
   12df8:	b	12e9c <table_dupe@@Base+0x508>
   12dfc:	mov	r0, r4
   12e00:	mov	r1, r5
   12e04:	mov	r2, r7
   12e08:	bl	13ea4 <table_get_uchar@@Base>
   12e0c:	mov	r3, r0
   12e10:	mov	r0, sl
   12e14:	mov	r1, r5
   12e18:	mov	r2, r7
   12e1c:	bl	14f2c <table_set_uchar@@Base>
   12e20:	b	12e9c <table_dupe@@Base+0x508>
   12e24:	mov	r0, r4
   12e28:	mov	r1, r5
   12e2c:	mov	r2, r7
   12e30:	bl	13ebc <table_get_string@@Base>
   12e34:	mov	r3, r0
   12e38:	mov	r0, sl
   12e3c:	mov	r1, r5
   12e40:	mov	r2, r7
   12e44:	bl	14e8c <table_set_string@@Base>
   12e48:	b	12e9c <table_dupe@@Base+0x508>
   12e4c:	mov	r0, r4
   12e50:	mov	r1, r5
   12e54:	mov	r2, r7
   12e58:	bl	13cac <table_get_bool@@Base>
   12e5c:	mov	r3, r0
   12e60:	mov	r0, sl
   12e64:	mov	r1, r5
   12e68:	mov	r2, r7
   12e6c:	bl	14450 <table_set_bool@@Base>
   12e70:	b	12e9c <table_dupe@@Base+0x508>
   12e74:	mov	r0, r4
   12e78:	mov	r1, r5
   12e7c:	mov	r2, r7
   12e80:	bl	13ed0 <table_get_ptr@@Base>
   12e84:	str	r0, [sp, #8]
   12e88:	mov	r0, sl
   12e8c:	mov	r1, r5
   12e90:	mov	r2, r7
   12e94:	mov	r3, r9
   12e98:	bl	14fac <table_set_ptr@@Base>
   12e9c:	add	r7, r7, #1
   12ea0:	cmp	r6, r7
   12ea4:	bne	12a68 <table_dupe@@Base+0xd4>
   12ea8:	add	r5, r5, #1
   12eac:	cmp	r5, r8
   12eb0:	bne	12a54 <table_dupe@@Base+0xc0>
   12eb4:	mov	r0, sl
   12eb8:	sub	sp, fp, #28
   12ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ec0 <table_get_major_version@@Base>:
   12ec0:	mov	r0, #0
   12ec4:	bx	lr

00012ec8 <table_get_minor_version@@Base>:
   12ec8:	mov	r0, #0
   12ecc:	bx	lr

00012ed0 <table_get_patch_version@@Base>:
   12ed0:	mov	r0, #0
   12ed4:	bx	lr

00012ed8 <table_get_version@@Base>:
   12ed8:	ldr	r0, [pc, #4]	; 12ee4 <table_get_version@@Base+0xc>
   12edc:	add	r0, pc, r0
   12ee0:	bx	lr
   12ee4:	andeq	r3, r0, sp, ror #6

00012ee8 <table_get_callback_length@@Base>:
   12ee8:	ldr	r0, [r0, #32]
   12eec:	bx	lr

00012ef0 <table_register_callback@@Base>:
   12ef0:	push	{r4, r5, r6, r7, fp, lr}
   12ef4:	add	fp, sp, #16
   12ef8:	mov	r5, r0
   12efc:	ldr	r0, [r0, #32]
   12f00:	mov	r4, r3
   12f04:	mov	r6, r2
   12f08:	mov	r7, r1
   12f0c:	cmp	r0, #1
   12f10:	blt	12f44 <table_register_callback@@Base+0x54>
   12f14:	ldr	r2, [r5, #36]	; 0x24
   12f18:	mov	r1, #0
   12f1c:	ldr	r3, [r2, r1, lsl #2]
   12f20:	cmp	r3, r7
   12f24:	bne	12f38 <table_register_callback@@Base+0x48>
   12f28:	ldr	r3, [r5, #40]	; 0x28
   12f2c:	ldr	r3, [r3, r1, lsl #2]
   12f30:	cmp	r3, r6
   12f34:	beq	12fc8 <table_register_callback@@Base+0xd8>
   12f38:	add	r1, r1, #1
   12f3c:	cmp	r1, r0
   12f40:	blt	12f1c <table_register_callback@@Base+0x2c>
   12f44:	ldr	r1, [r5, #48]	; 0x30
   12f48:	udiv	r2, r0, r1
   12f4c:	mls	r2, r2, r1, r0
   12f50:	cmp	r2, #0
   12f54:	bne	12fa0 <table_register_callback@@Base+0xb0>
   12f58:	ldr	r2, [r5, #52]	; 0x34
   12f5c:	ldr	r0, [r5, #36]	; 0x24
   12f60:	add	r1, r2, r1
   12f64:	str	r1, [r5, #52]	; 0x34
   12f68:	lsl	r1, r1, #2
   12f6c:	bl	11fb0 <realloc@plt>
   12f70:	str	r0, [r5, #36]	; 0x24
   12f74:	ldr	r1, [r5, #52]	; 0x34
   12f78:	ldr	r0, [r5, #40]	; 0x28
   12f7c:	lsl	r1, r1, #2
   12f80:	bl	11fb0 <realloc@plt>
   12f84:	str	r0, [r5, #40]	; 0x28
   12f88:	ldr	r1, [r5, #52]	; 0x34
   12f8c:	ldr	r0, [r5, #44]	; 0x2c
   12f90:	lsl	r1, r1, #2
   12f94:	bl	11fb0 <realloc@plt>
   12f98:	str	r0, [r5, #44]	; 0x2c
   12f9c:	ldr	r0, [r5, #32]
   12fa0:	ldr	r1, [r5, #36]	; 0x24
   12fa4:	str	r7, [r1, r0, lsl #2]
   12fa8:	ldr	r1, [r5, #40]	; 0x28
   12fac:	str	r6, [r1, r0, lsl #2]
   12fb0:	ldr	r1, [r5, #44]	; 0x2c
   12fb4:	str	r4, [r1, r0, lsl #2]
   12fb8:	ldr	r0, [r5, #32]
   12fbc:	add	r0, r0, #1
   12fc0:	str	r0, [r5, #32]
   12fc4:	pop	{r4, r5, r6, r7, fp, pc}
   12fc8:	cmp	r1, #0
   12fcc:	ldrne	r0, [r5, #44]	; 0x2c
   12fd0:	ldrne	r2, [r0, r1, lsl #2]
   12fd4:	orrne	r2, r2, r4
   12fd8:	strne	r2, [r0, r1, lsl #2]
   12fdc:	popne	{r4, r5, r6, r7, fp, pc}
   12fe0:	b	12f44 <table_register_callback@@Base+0x54>

00012fe4 <table_unregister_callback@@Base>:
   12fe4:	push	{r4, r5, r6, sl, fp, lr}
   12fe8:	add	fp, sp, #16
   12fec:	ldr	r4, [r0, #32]
   12ff0:	cmp	r4, #1
   12ff4:	blt	1302c <table_unregister_callback@@Base+0x48>
   12ff8:	ldr	r3, [r0, #36]	; 0x24
   12ffc:	mov	r6, r0
   13000:	mov	r0, #0
   13004:	ldr	r5, [r3, r0, lsl #2]
   13008:	cmp	r5, r1
   1300c:	bne	13020 <table_unregister_callback@@Base+0x3c>
   13010:	ldr	r5, [r6, #40]	; 0x28
   13014:	ldr	r5, [r5, r0, lsl #2]
   13018:	cmp	r5, r2
   1301c:	beq	13030 <table_unregister_callback@@Base+0x4c>
   13020:	add	r0, r0, #1
   13024:	cmp	r0, r4
   13028:	blt	13004 <table_unregister_callback@@Base+0x20>
   1302c:	pop	{r4, r5, r6, sl, fp, pc}
   13030:	sub	r1, r4, #1
   13034:	cmp	r0, r1
   13038:	bge	130c8 <table_unregister_callback@@Base+0xe4>
   1303c:	add	r1, r3, r0, lsl #2
   13040:	ldr	r1, [r1, #4]
   13044:	str	r1, [r3, r0, lsl #2]
   13048:	ldr	r1, [r6, #40]	; 0x28
   1304c:	add	r2, r1, r0, lsl #2
   13050:	ldr	r2, [r2, #4]
   13054:	str	r2, [r1, r0, lsl #2]
   13058:	ldr	r1, [r6, #44]	; 0x2c
   1305c:	add	r2, r1, r0, lsl #2
   13060:	ldr	r2, [r2, #4]
   13064:	str	r2, [r1, r0, lsl #2]
   13068:	add	r2, r0, #1
   1306c:	ldr	r1, [r6, #32]
   13070:	sub	r1, r1, #1
   13074:	cmp	r2, r1
   13078:	bge	130c8 <table_unregister_callback@@Base+0xe4>
   1307c:	ldr	r1, [r6, #36]	; 0x24
   13080:	add	r1, r1, r0, lsl #2
   13084:	ldr	r2, [r1, #8]
   13088:	str	r2, [r1, #4]
   1308c:	ldr	r1, [r6, #40]	; 0x28
   13090:	add	r1, r1, r0, lsl #2
   13094:	ldr	r2, [r1, #8]
   13098:	str	r2, [r1, #4]
   1309c:	ldr	r1, [r6, #44]	; 0x2c
   130a0:	add	r1, r1, r0, lsl #2
   130a4:	ldr	r2, [r1, #8]
   130a8:	str	r2, [r1, #4]
   130ac:	add	r2, r0, #1
   130b0:	add	r0, r0, #2
   130b4:	ldr	r1, [r6, #32]
   130b8:	sub	r1, r1, #1
   130bc:	cmp	r0, r1
   130c0:	mov	r0, r2
   130c4:	blt	1307c <table_unregister_callback@@Base+0x98>
   130c8:	str	r1, [r6, #32]
   130cc:	ldr	r2, [r6, #48]	; 0x30
   130d0:	udiv	r0, r1, r2
   130d4:	mls	r0, r0, r2, r1
   130d8:	cmp	r0, #0
   130dc:	popne	{r4, r5, r6, sl, fp, pc}
   130e0:	ldr	r1, [r6, #52]	; 0x34
   130e4:	ldr	r0, [r6, #36]	; 0x24
   130e8:	subs	r1, r1, r2
   130ec:	str	r1, [r6, #52]	; 0x34
   130f0:	beq	1312c <table_unregister_callback@@Base+0x148>
   130f4:	lsl	r1, r1, #2
   130f8:	bl	11fb0 <realloc@plt>
   130fc:	str	r0, [r6, #36]	; 0x24
   13100:	ldr	r1, [r6, #52]	; 0x34
   13104:	ldr	r0, [r6, #40]	; 0x28
   13108:	lsl	r1, r1, #2
   1310c:	bl	11fb0 <realloc@plt>
   13110:	str	r0, [r6, #40]	; 0x28
   13114:	ldr	r1, [r6, #52]	; 0x34
   13118:	ldr	r0, [r6, #44]	; 0x2c
   1311c:	lsl	r1, r1, #2
   13120:	bl	11fb0 <realloc@plt>
   13124:	str	r0, [r6, #44]	; 0x2c
   13128:	pop	{r4, r5, r6, sl, fp, pc}
   1312c:	bl	11f98 <free@plt>
   13130:	ldr	r0, [r6, #40]	; 0x28
   13134:	bl	11f98 <free@plt>
   13138:	ldr	r0, [r6, #44]	; 0x2c
   1313c:	bl	11f98 <free@plt>
   13140:	mov	r0, #0
   13144:	str	r0, [r6, #36]	; 0x24
   13148:	str	r0, [r6, #40]	; 0x28
   1314c:	str	r0, [r6, #44]	; 0x2c
   13150:	pop	{r4, r5, r6, sl, fp, pc}

00013154 <table_notify@@Base>:
   13154:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13158:	add	fp, sp, #24
   1315c:	sub	sp, sp, #8
   13160:	mov	r7, r0
   13164:	ldr	r0, [r0, #32]
   13168:	cmp	r0, #1
   1316c:	blt	131c8 <table_notify@@Base+0x74>
   13170:	mov	r4, r3
   13174:	mov	r8, r2
   13178:	mov	r9, r1
   1317c:	mov	r5, #0
   13180:	ldr	r1, [r7, #44]	; 0x2c
   13184:	ldr	r1, [r1, r5, lsl #2]
   13188:	tst	r1, r4
   1318c:	beq	131bc <table_notify@@Base+0x68>
   13190:	ldr	r0, [r7, #36]	; 0x24
   13194:	ldr	r1, [r7, #40]	; 0x28
   13198:	mov	r2, r8
   1319c:	mov	r3, r4
   131a0:	ldr	r6, [r0, r5, lsl #2]
   131a4:	ldr	r0, [r1, r5, lsl #2]
   131a8:	mov	r1, r9
   131ac:	str	r0, [sp]
   131b0:	mov	r0, r7
   131b4:	blx	r6
   131b8:	ldr	r0, [r7, #32]
   131bc:	add	r5, r5, #1
   131c0:	cmp	r5, r0
   131c4:	blt	13180 <table_notify@@Base+0x2c>
   131c8:	sub	sp, fp, #24
   131cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000131d0 <table_column_init@@Base>:
   131d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131d4:	add	fp, sp, #24
   131d8:	ldr	r7, [r0]
   131dc:	mov	r0, r2
   131e0:	mov	r4, r3
   131e4:	mov	r5, r2
   131e8:	mov	r6, r1
   131ec:	bl	11fec <strlen@plt>
   131f0:	add	r0, r0, #1
   131f4:	bl	11fc8 <malloc@plt>
   131f8:	ldr	r8, [fp, #8]
   131fc:	add	r6, r6, r6, lsl #1
   13200:	cmp	r0, #0
   13204:	str	r0, [r7, r6, lsl #2]
   13208:	beq	13214 <table_column_init@@Base+0x44>
   1320c:	mov	r1, r5
   13210:	bl	11fbc <strcpy@plt>
   13214:	add	r0, r7, r6, lsl #2
   13218:	stmib	r0, {r4, r8}
   1321c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013220 <table_get_col_ptr@@Base>:
   13220:	ldr	r0, [r0]
   13224:	add	r1, r1, r1, lsl #1
   13228:	add	r0, r0, r1, lsl #2
   1322c:	bx	lr

00013230 <table_column_destroy@@Base>:
   13230:	ldr	r0, [r0]
   13234:	add	r1, r1, r1, lsl #1
   13238:	ldr	r0, [r0, r1, lsl #2]
   1323c:	cmp	r0, #0
   13240:	bxeq	lr
   13244:	b	11f98 <free@plt>

00013248 <table_get_column_length@@Base>:
   13248:	ldr	r0, [r0, #4]
   1324c:	bx	lr

00013250 <table_get_column@@Base>:
   13250:	push	{r4, r5, r6, r7, fp, lr}
   13254:	add	fp, sp, #16
   13258:	ldr	r6, [r0, #4]
   1325c:	cmp	r6, #1
   13260:	blt	13298 <table_get_column@@Base+0x48>
   13264:	ldr	r7, [r0]
   13268:	mov	r5, r1
   1326c:	mov	r4, #0
   13270:	ldr	r0, [r7]
   13274:	mov	r1, r5
   13278:	bl	11f80 <strcmp@plt>
   1327c:	cmp	r0, #0
   13280:	beq	1329c <table_get_column@@Base+0x4c>
   13284:	add	r4, r4, #1
   13288:	add	r7, r7, #12
   1328c:	cmp	r4, r6
   13290:	blt	13270 <table_get_column@@Base+0x20>
   13294:	b	1329c <table_get_column@@Base+0x4c>
   13298:	mov	r4, #0
   1329c:	cmp	r4, r6
   132a0:	mvneq	r4, #0
   132a4:	mov	r0, r4
   132a8:	pop	{r4, r5, r6, r7, fp, pc}

000132ac <table_get_column_name@@Base>:
   132ac:	ldr	r0, [r0]
   132b0:	add	r1, r1, r1, lsl #1
   132b4:	ldr	r0, [r0, r1, lsl #2]
   132b8:	bx	lr

000132bc <table_get_column_data_type@@Base>:
   132bc:	ldr	r0, [r0]
   132c0:	add	r1, r1, r1, lsl #1
   132c4:	add	r0, r0, r1, lsl #2
   132c8:	ldr	r0, [r0, #4]
   132cc:	bx	lr

000132d0 <table_add_column@@Base>:
   132d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132d4:	add	fp, sp, #28
   132d8:	sub	sp, sp, #4
   132dc:	mov	r4, r0
   132e0:	mov	r8, r1
   132e4:	ldr	r0, [r0, #4]
   132e8:	mov	r9, r2
   132ec:	ldr	r1, [r4, #8]
   132f0:	udiv	r2, r0, r1
   132f4:	mls	r0, r2, r1, r0
   132f8:	cmp	r0, #0
   132fc:	bne	13368 <table_add_column@@Base+0x98>
   13300:	ldr	r2, [r4, #12]
   13304:	ldr	r0, [r4]
   13308:	add	r1, r2, r1
   1330c:	str	r1, [r4, #12]
   13310:	add	r1, r1, r1, lsl #1
   13314:	lsl	r1, r1, #2
   13318:	bl	11fb0 <realloc@plt>
   1331c:	str	r0, [r4]
   13320:	mov	r0, r4
   13324:	bl	13f6c <table_get_row_length@@Base>
   13328:	cmp	r0, #1
   1332c:	blt	13368 <table_add_column@@Base+0x98>
   13330:	mov	r6, r0
   13334:	mov	r5, #0
   13338:	mov	r0, r4
   1333c:	mov	r1, r5
   13340:	bl	13f08 <table_get_row_ptr@@Base>
   13344:	ldr	r1, [r4, #12]
   13348:	mov	r7, r0
   1334c:	ldr	r0, [r0]
   13350:	lsl	r1, r1, #2
   13354:	bl	11fb0 <realloc@plt>
   13358:	add	r5, r5, #1
   1335c:	str	r0, [r7]
   13360:	cmp	r6, r5
   13364:	bne	13338 <table_add_column@@Base+0x68>
   13368:	mov	r0, r4
   1336c:	bl	13f6c <table_get_row_length@@Base>
   13370:	ldr	r6, [r4, #4]
   13374:	mov	r7, r0
   13378:	mov	r0, r9
   1337c:	bl	13c7c <table_get_default_compare_function_for_data_type@@Base>
   13380:	ldr	r5, [r4]
   13384:	mov	sl, r0
   13388:	mov	r0, r8
   1338c:	bl	11fec <strlen@plt>
   13390:	add	r0, r0, #1
   13394:	bl	11fc8 <malloc@plt>
   13398:	mov	r1, r8
   1339c:	add	r8, r6, r6, lsl #1
   133a0:	cmp	r0, #0
   133a4:	str	r0, [r5, r8, lsl #2]
   133a8:	beq	133b0 <table_add_column@@Base+0xe0>
   133ac:	bl	11fbc <strcpy@plt>
   133b0:	add	r0, r5, r8, lsl #2
   133b4:	cmp	r7, #1
   133b8:	stmib	r0, {r9, sl}
   133bc:	blt	133e0 <table_add_column@@Base+0x110>
   133c0:	mov	r5, #0
   133c4:	mov	r0, r4
   133c8:	mov	r1, r5
   133cc:	mov	r2, r6
   133d0:	bl	15664 <table_cell_init@@Base>
   133d4:	add	r5, r5, #1
   133d8:	cmp	r7, r5
   133dc:	bne	133c4 <table_add_column@@Base+0xf4>
   133e0:	ldr	r2, [r4, #4]
   133e4:	mov	r0, r4
   133e8:	mvn	r1, #0
   133ec:	mov	r3, #8
   133f0:	bl	13154 <table_notify@@Base>
   133f4:	ldr	r0, [r4, #4]
   133f8:	add	r1, r0, #1
   133fc:	str	r1, [r4, #4]
   13400:	sub	sp, fp, #28
   13404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013408 <table_remove_column@@Base>:
   13408:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1340c:	add	fp, sp, #24
   13410:	mov	r5, r0
   13414:	ldr	r0, [r0]
   13418:	add	r6, r1, r1, lsl #1
   1341c:	mov	r9, r1
   13420:	ldr	r0, [r0, r6, lsl #2]
   13424:	cmp	r0, #0
   13428:	beq	13430 <table_remove_column@@Base+0x28>
   1342c:	bl	11f98 <free@plt>
   13430:	ldr	r0, [r5, #4]
   13434:	sub	r4, r0, #1
   13438:	cmp	r4, r9
   1343c:	ble	1346c <table_remove_column@@Base+0x64>
   13440:	sub	r0, r4, r9
   13444:	lsl	r1, r6, #2
   13448:	ldr	r2, [r5]
   1344c:	subs	r0, r0, #1
   13450:	add	r2, r2, r1
   13454:	add	r1, r1, #12
   13458:	vldr	d16, [r2, #12]
   1345c:	ldr	r3, [r2, #20]
   13460:	str	r3, [r2, #8]
   13464:	vstr	d16, [r2]
   13468:	bne	13448 <table_remove_column@@Base+0x40>
   1346c:	mov	r0, r5
   13470:	bl	13f6c <table_get_row_length@@Base>
   13474:	cmp	r0, #1
   13478:	blt	134d4 <table_remove_column@@Base+0xcc>
   1347c:	mov	r6, r0
   13480:	mov	r7, #0
   13484:	mov	r0, r5
   13488:	mov	r1, r7
   1348c:	mov	r2, r9
   13490:	bl	156a0 <table_cell_destroy@@Base>
   13494:	mov	r0, r5
   13498:	mov	r1, r7
   1349c:	bl	13f08 <table_get_row_ptr@@Base>
   134a0:	cmp	r4, r9
   134a4:	ble	134c8 <table_remove_column@@Base+0xc0>
   134a8:	mov	r1, r9
   134ac:	ldr	r2, [r0]
   134b0:	add	r3, r2, r1, lsl #2
   134b4:	ldr	r3, [r3, #4]
   134b8:	str	r3, [r2, r1, lsl #2]
   134bc:	add	r1, r1, #1
   134c0:	cmp	r4, r1
   134c4:	bne	134ac <table_remove_column@@Base+0xa4>
   134c8:	add	r7, r7, #1
   134cc:	cmp	r7, r6
   134d0:	bne	13484 <table_remove_column@@Base+0x7c>
   134d4:	ldmib	r5, {r0, r1}
   134d8:	sub	r0, r0, #1
   134dc:	udiv	r2, r0, r1
   134e0:	str	r0, [r5, #4]
   134e4:	mls	r0, r2, r1, r0
   134e8:	cmp	r0, #0
   134ec:	bne	13558 <table_remove_column@@Base+0x150>
   134f0:	ldr	r2, [r5, #12]
   134f4:	ldr	r0, [r5]
   134f8:	sub	r1, r2, r1
   134fc:	str	r1, [r5, #12]
   13500:	add	r1, r1, r1, lsl #1
   13504:	lsl	r1, r1, #2
   13508:	bl	11fb0 <realloc@plt>
   1350c:	str	r0, [r5]
   13510:	mov	r0, r5
   13514:	bl	13f6c <table_get_row_length@@Base>
   13518:	cmp	r0, #1
   1351c:	blt	13558 <table_remove_column@@Base+0x150>
   13520:	mov	r8, r0
   13524:	mov	r7, #0
   13528:	mov	r0, r5
   1352c:	mov	r1, r7
   13530:	bl	13f08 <table_get_row_ptr@@Base>
   13534:	ldr	r1, [r5, #12]
   13538:	mov	r6, r0
   1353c:	ldr	r0, [r0]
   13540:	lsl	r1, r1, #2
   13544:	bl	11fb0 <realloc@plt>
   13548:	add	r7, r7, #1
   1354c:	str	r0, [r6]
   13550:	cmp	r8, r7
   13554:	bne	13528 <table_remove_column@@Base+0x120>
   13558:	mov	r0, r5
   1355c:	mvn	r1, #0
   13560:	mov	r2, r9
   13564:	mov	r3, #16
   13568:	bl	13154 <table_notify@@Base>
   1356c:	mov	r0, #0
   13570:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013574 <table_get_column_compare_function@@Base>:
   13574:	ldr	r0, [r0]
   13578:	add	r1, r1, r1, lsl #1
   1357c:	add	r0, r0, r1, lsl #2
   13580:	ldr	r0, [r0, #8]
   13584:	bx	lr

00013588 <table_set_column_compare_function@@Base>:
   13588:	ldr	r0, [r0]
   1358c:	add	r1, r1, r1, lsl #1
   13590:	add	r0, r0, r1, lsl #2
   13594:	str	r2, [r0, #8]
   13598:	bx	lr

0001359c <table_compare_bool@@Base>:
   1359c:	cmp	r0, #0
   135a0:	beq	135d4 <table_compare_bool@@Base+0x38>
   135a4:	cmp	r1, #0
   135a8:	moveq	r1, #1
   135ac:	moveq	r0, r1
   135b0:	bxeq	lr
   135b4:	ldrb	r2, [r1]
   135b8:	ldrb	r0, [r0]
   135bc:	mov	r1, #0
   135c0:	cmp	r0, r2
   135c4:	mvncc	r1, #0
   135c8:	movwhi	r1, #1
   135cc:	mov	r0, r1
   135d0:	bx	lr
   135d4:	cmp	r1, #0
   135d8:	mvnne	r1, #0
   135dc:	mov	r0, r1
   135e0:	bx	lr

000135e4 <table_compare_int@@Base>:
   135e4:	cmp	r0, #0
   135e8:	beq	1361c <table_compare_int@@Base+0x38>
   135ec:	cmp	r1, #0
   135f0:	moveq	r1, #1
   135f4:	moveq	r0, r1
   135f8:	bxeq	lr
   135fc:	ldr	r2, [r1]
   13600:	ldr	r0, [r0]
   13604:	mov	r1, #0
   13608:	cmp	r0, r2
   1360c:	mvnlt	r1, #0
   13610:	movwgt	r1, #1
   13614:	mov	r0, r1
   13618:	bx	lr
   1361c:	cmp	r1, #0
   13620:	mvnne	r1, #0
   13624:	mov	r0, r1
   13628:	bx	lr

0001362c <table_compare_uint@@Base>:
   1362c:	cmp	r0, #0
   13630:	beq	13664 <table_compare_uint@@Base+0x38>
   13634:	cmp	r1, #0
   13638:	moveq	r1, #1
   1363c:	moveq	r0, r1
   13640:	bxeq	lr
   13644:	ldr	r2, [r1]
   13648:	ldr	r0, [r0]
   1364c:	mov	r1, #0
   13650:	cmp	r0, r2
   13654:	mvncc	r1, #0
   13658:	movwhi	r1, #1
   1365c:	mov	r0, r1
   13660:	bx	lr
   13664:	cmp	r1, #0
   13668:	mvnne	r1, #0
   1366c:	mov	r0, r1
   13670:	bx	lr

00013674 <table_compare_int8@@Base>:
   13674:	cmp	r0, #0
   13678:	beq	136ac <table_compare_int8@@Base+0x38>
   1367c:	cmp	r1, #0
   13680:	moveq	r1, #1
   13684:	moveq	r0, r1
   13688:	bxeq	lr
   1368c:	ldrsb	r2, [r1]
   13690:	ldrsb	r0, [r0]
   13694:	mov	r1, #0
   13698:	cmp	r0, r2
   1369c:	mvnlt	r1, #0
   136a0:	movwgt	r1, #1
   136a4:	mov	r0, r1
   136a8:	bx	lr
   136ac:	cmp	r1, #0
   136b0:	mvnne	r1, #0
   136b4:	mov	r0, r1
   136b8:	bx	lr

000136bc <table_compare_uint8@@Base>:
   136bc:	cmp	r0, #0
   136c0:	beq	136f4 <table_compare_uint8@@Base+0x38>
   136c4:	cmp	r1, #0
   136c8:	moveq	r1, #1
   136cc:	moveq	r0, r1
   136d0:	bxeq	lr
   136d4:	ldrb	r2, [r1]
   136d8:	ldrb	r0, [r0]
   136dc:	mov	r1, #0
   136e0:	cmp	r0, r2
   136e4:	mvncc	r1, #0
   136e8:	movwhi	r1, #1
   136ec:	mov	r0, r1
   136f0:	bx	lr
   136f4:	cmp	r1, #0
   136f8:	mvnne	r1, #0
   136fc:	mov	r0, r1
   13700:	bx	lr

00013704 <table_compare_int16@@Base>:
   13704:	cmp	r0, #0
   13708:	beq	1373c <table_compare_int16@@Base+0x38>
   1370c:	cmp	r1, #0
   13710:	moveq	r1, #1
   13714:	moveq	r0, r1
   13718:	bxeq	lr
   1371c:	ldrsh	r2, [r1]
   13720:	ldrsh	r0, [r0]
   13724:	mov	r1, #0
   13728:	cmp	r0, r2
   1372c:	mvnlt	r1, #0
   13730:	movwgt	r1, #1
   13734:	mov	r0, r1
   13738:	bx	lr
   1373c:	cmp	r1, #0
   13740:	mvnne	r1, #0
   13744:	mov	r0, r1
   13748:	bx	lr

0001374c <table_compare_uint16@@Base>:
   1374c:	cmp	r0, #0
   13750:	beq	13784 <table_compare_uint16@@Base+0x38>
   13754:	cmp	r1, #0
   13758:	moveq	r1, #1
   1375c:	moveq	r0, r1
   13760:	bxeq	lr
   13764:	ldrh	r2, [r1]
   13768:	ldrh	r0, [r0]
   1376c:	mov	r1, #0
   13770:	cmp	r0, r2
   13774:	mvncc	r1, #0
   13778:	movwhi	r1, #1
   1377c:	mov	r0, r1
   13780:	bx	lr
   13784:	cmp	r1, #0
   13788:	mvnne	r1, #0
   1378c:	mov	r0, r1
   13790:	bx	lr

00013794 <table_compare_int32@@Base>:
   13794:	cmp	r0, #0
   13798:	beq	137cc <table_compare_int32@@Base+0x38>
   1379c:	cmp	r1, #0
   137a0:	moveq	r1, #1
   137a4:	moveq	r0, r1
   137a8:	bxeq	lr
   137ac:	ldr	r2, [r1]
   137b0:	ldr	r0, [r0]
   137b4:	mov	r1, #0
   137b8:	cmp	r0, r2
   137bc:	mvnlt	r1, #0
   137c0:	movwgt	r1, #1
   137c4:	mov	r0, r1
   137c8:	bx	lr
   137cc:	cmp	r1, #0
   137d0:	mvnne	r1, #0
   137d4:	mov	r0, r1
   137d8:	bx	lr

000137dc <table_compare_uint32@@Base>:
   137dc:	cmp	r0, #0
   137e0:	beq	13814 <table_compare_uint32@@Base+0x38>
   137e4:	cmp	r1, #0
   137e8:	moveq	r1, #1
   137ec:	moveq	r0, r1
   137f0:	bxeq	lr
   137f4:	ldr	r2, [r1]
   137f8:	ldr	r0, [r0]
   137fc:	mov	r1, #0
   13800:	cmp	r0, r2
   13804:	mvncc	r1, #0
   13808:	movwhi	r1, #1
   1380c:	mov	r0, r1
   13810:	bx	lr
   13814:	cmp	r1, #0
   13818:	mvnne	r1, #0
   1381c:	mov	r0, r1
   13820:	bx	lr

00013824 <table_compare_int64@@Base>:
   13824:	cmp	r0, #0
   13828:	beq	1387c <table_compare_int64@@Base+0x58>
   1382c:	cmp	r1, #0
   13830:	moveq	r1, #1
   13834:	moveq	r0, r1
   13838:	bxeq	lr
   1383c:	push	{r5, r7, fp, lr}
   13840:	add	fp, sp, #8
   13844:	ldm	r1, {r2, r7}
   13848:	ldm	r0, {r0, r5}
   1384c:	mov	r1, #0
   13850:	subs	r3, r0, r2
   13854:	sbcs	r3, r5, r7
   13858:	movwlt	r1, #1
   1385c:	cmp	r1, #0
   13860:	mvnne	r1, #0
   13864:	subs	r0, r2, r0
   13868:	sbcs	r0, r7, r5
   1386c:	movwlt	r1, #1
   13870:	pop	{r5, r7, fp, lr}
   13874:	mov	r0, r1
   13878:	bx	lr
   1387c:	cmp	r1, #0
   13880:	mvnne	r1, #0
   13884:	mov	r0, r1
   13888:	bx	lr

0001388c <table_compare_uint64@@Base>:
   1388c:	cmp	r0, #0
   13890:	beq	138e4 <table_compare_uint64@@Base+0x58>
   13894:	cmp	r1, #0
   13898:	moveq	r1, #1
   1389c:	moveq	r0, r1
   138a0:	bxeq	lr
   138a4:	push	{r5, r7, fp, lr}
   138a8:	add	fp, sp, #8
   138ac:	ldm	r1, {r2, r7}
   138b0:	ldm	r0, {r0, r5}
   138b4:	mov	r1, #0
   138b8:	subs	r3, r0, r2
   138bc:	sbcs	r3, r5, r7
   138c0:	movwcc	r1, #1
   138c4:	cmp	r1, #0
   138c8:	mvnne	r1, #0
   138cc:	subs	r0, r2, r0
   138d0:	sbcs	r0, r7, r5
   138d4:	movwcc	r1, #1
   138d8:	pop	{r5, r7, fp, lr}
   138dc:	mov	r0, r1
   138e0:	bx	lr
   138e4:	cmp	r1, #0
   138e8:	mvnne	r1, #0
   138ec:	mov	r0, r1
   138f0:	bx	lr

000138f4 <table_compare_short@@Base>:
   138f4:	cmp	r0, #0
   138f8:	beq	1392c <table_compare_short@@Base+0x38>
   138fc:	cmp	r1, #0
   13900:	moveq	r1, #1
   13904:	moveq	r0, r1
   13908:	bxeq	lr
   1390c:	ldrsh	r2, [r1]
   13910:	ldrsh	r0, [r0]
   13914:	mov	r1, #0
   13918:	cmp	r0, r2
   1391c:	mvnlt	r1, #0
   13920:	movwgt	r1, #1
   13924:	mov	r0, r1
   13928:	bx	lr
   1392c:	cmp	r1, #0
   13930:	mvnne	r1, #0
   13934:	mov	r0, r1
   13938:	bx	lr

0001393c <table_compare_ushort@@Base>:
   1393c:	cmp	r0, #0
   13940:	beq	13974 <table_compare_ushort@@Base+0x38>
   13944:	cmp	r1, #0
   13948:	moveq	r1, #1
   1394c:	moveq	r0, r1
   13950:	bxeq	lr
   13954:	ldrh	r2, [r1]
   13958:	ldrh	r0, [r0]
   1395c:	mov	r1, #0
   13960:	cmp	r0, r2
   13964:	mvncc	r1, #0
   13968:	movwhi	r1, #1
   1396c:	mov	r0, r1
   13970:	bx	lr
   13974:	cmp	r1, #0
   13978:	mvnne	r1, #0
   1397c:	mov	r0, r1
   13980:	bx	lr

00013984 <table_compare_long@@Base>:
   13984:	cmp	r0, #0
   13988:	beq	139bc <table_compare_long@@Base+0x38>
   1398c:	cmp	r1, #0
   13990:	moveq	r1, #1
   13994:	moveq	r0, r1
   13998:	bxeq	lr
   1399c:	ldr	r2, [r1]
   139a0:	ldr	r0, [r0]
   139a4:	mov	r1, #0
   139a8:	cmp	r0, r2
   139ac:	mvnlt	r1, #0
   139b0:	movwgt	r1, #1
   139b4:	mov	r0, r1
   139b8:	bx	lr
   139bc:	cmp	r1, #0
   139c0:	mvnne	r1, #0
   139c4:	mov	r0, r1
   139c8:	bx	lr

000139cc <table_compare_ulong@@Base>:
   139cc:	cmp	r0, #0
   139d0:	beq	13a04 <table_compare_ulong@@Base+0x38>
   139d4:	cmp	r1, #0
   139d8:	moveq	r1, #1
   139dc:	moveq	r0, r1
   139e0:	bxeq	lr
   139e4:	ldr	r2, [r1]
   139e8:	ldr	r0, [r0]
   139ec:	mov	r1, #0
   139f0:	cmp	r0, r2
   139f4:	mvncc	r1, #0
   139f8:	movwhi	r1, #1
   139fc:	mov	r0, r1
   13a00:	bx	lr
   13a04:	cmp	r1, #0
   13a08:	mvnne	r1, #0
   13a0c:	mov	r0, r1
   13a10:	bx	lr

00013a14 <table_compare_llong@@Base>:
   13a14:	cmp	r0, #0
   13a18:	beq	13a6c <table_compare_llong@@Base+0x58>
   13a1c:	cmp	r1, #0
   13a20:	moveq	r1, #1
   13a24:	moveq	r0, r1
   13a28:	bxeq	lr
   13a2c:	push	{r5, r7, fp, lr}
   13a30:	add	fp, sp, #8
   13a34:	ldm	r1, {r2, r7}
   13a38:	ldm	r0, {r0, r5}
   13a3c:	mov	r1, #0
   13a40:	subs	r3, r0, r2
   13a44:	sbcs	r3, r5, r7
   13a48:	movwlt	r1, #1
   13a4c:	cmp	r1, #0
   13a50:	mvnne	r1, #0
   13a54:	subs	r0, r2, r0
   13a58:	sbcs	r0, r7, r5
   13a5c:	movwlt	r1, #1
   13a60:	pop	{r5, r7, fp, lr}
   13a64:	mov	r0, r1
   13a68:	bx	lr
   13a6c:	cmp	r1, #0
   13a70:	mvnne	r1, #0
   13a74:	mov	r0, r1
   13a78:	bx	lr

00013a7c <table_compare_ullong@@Base>:
   13a7c:	cmp	r0, #0
   13a80:	beq	13ab4 <table_compare_ullong@@Base+0x38>
   13a84:	cmp	r1, #0
   13a88:	moveq	r1, #1
   13a8c:	moveq	r0, r1
   13a90:	bxeq	lr
   13a94:	ldr	r2, [r1]
   13a98:	ldr	r0, [r0]
   13a9c:	mov	r1, #0
   13aa0:	cmp	r0, r2
   13aa4:	mvncc	r1, #0
   13aa8:	movwhi	r1, #1
   13aac:	mov	r0, r1
   13ab0:	bx	lr
   13ab4:	cmp	r1, #0
   13ab8:	mvnne	r1, #0
   13abc:	mov	r0, r1
   13ac0:	bx	lr

00013ac4 <table_compare_float@@Base>:
   13ac4:	cmp	r0, #0
   13ac8:	beq	13b00 <table_compare_float@@Base+0x3c>
   13acc:	cmp	r1, #0
   13ad0:	moveq	r1, #1
   13ad4:	moveq	r0, r1
   13ad8:	bxeq	lr
   13adc:	vldr	s0, [r1]
   13ae0:	vldr	s2, [r0]
   13ae4:	mov	r1, #0
   13ae8:	vcmpe.f32	s2, s0
   13aec:	vmrs	APSR_nzcv, fpscr
   13af0:	mvnmi	r1, #0
   13af4:	movwgt	r1, #1
   13af8:	mov	r0, r1
   13afc:	bx	lr
   13b00:	cmp	r1, #0
   13b04:	mvnne	r1, #0
   13b08:	mov	r0, r1
   13b0c:	bx	lr

00013b10 <table_compare_double@@Base>:
   13b10:	cmp	r0, #0
   13b14:	beq	13b4c <table_compare_double@@Base+0x3c>
   13b18:	cmp	r1, #0
   13b1c:	moveq	r1, #1
   13b20:	moveq	r0, r1
   13b24:	bxeq	lr
   13b28:	vldr	d16, [r1]
   13b2c:	vldr	d17, [r0]
   13b30:	mov	r1, #0
   13b34:	vcmpe.f64	d17, d16
   13b38:	vmrs	APSR_nzcv, fpscr
   13b3c:	mvnmi	r1, #0
   13b40:	movwgt	r1, #1
   13b44:	mov	r0, r1
   13b48:	bx	lr
   13b4c:	cmp	r1, #0
   13b50:	mvnne	r1, #0
   13b54:	mov	r0, r1
   13b58:	bx	lr

00013b5c <table_compare_ldouble@@Base>:
   13b5c:	cmp	r0, #0
   13b60:	beq	13b98 <table_compare_ldouble@@Base+0x3c>
   13b64:	cmp	r1, #0
   13b68:	moveq	r1, #1
   13b6c:	moveq	r0, r1
   13b70:	bxeq	lr
   13b74:	vldr	d16, [r1]
   13b78:	vldr	d17, [r0]
   13b7c:	mov	r1, #0
   13b80:	vcmpe.f64	d17, d16
   13b84:	vmrs	APSR_nzcv, fpscr
   13b88:	mvnmi	r1, #0
   13b8c:	movwgt	r1, #1
   13b90:	mov	r0, r1
   13b94:	bx	lr
   13b98:	cmp	r1, #0
   13b9c:	mvnne	r1, #0
   13ba0:	mov	r0, r1
   13ba4:	bx	lr

00013ba8 <table_compare_char@@Base>:
   13ba8:	cmp	r0, #0
   13bac:	beq	13be0 <table_compare_char@@Base+0x38>
   13bb0:	cmp	r1, #0
   13bb4:	moveq	r1, #1
   13bb8:	moveq	r0, r1
   13bbc:	bxeq	lr
   13bc0:	ldrb	r2, [r1]
   13bc4:	ldrb	r0, [r0]
   13bc8:	mov	r1, #0
   13bcc:	cmp	r0, r2
   13bd0:	mvncc	r1, #0
   13bd4:	movwhi	r1, #1
   13bd8:	mov	r0, r1
   13bdc:	bx	lr
   13be0:	cmp	r1, #0
   13be4:	mvnne	r1, #0
   13be8:	mov	r0, r1
   13bec:	bx	lr

00013bf0 <table_compare_uchar@@Base>:
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c28 <table_compare_uchar@@Base+0x38>
   13bf8:	cmp	r1, #0
   13bfc:	moveq	r1, #1
   13c00:	moveq	r0, r1
   13c04:	bxeq	lr
   13c08:	ldrb	r2, [r1]
   13c0c:	ldrb	r0, [r0]
   13c10:	mov	r1, #0
   13c14:	cmp	r0, r2
   13c18:	mvncc	r1, #0
   13c1c:	movwhi	r1, #1
   13c20:	mov	r0, r1
   13c24:	bx	lr
   13c28:	cmp	r1, #0
   13c2c:	mvnne	r1, #0
   13c30:	mov	r0, r1
   13c34:	bx	lr

00013c38 <table_compare_string@@Base>:
   13c38:	cmp	r0, #0
   13c3c:	beq	13c54 <table_compare_string@@Base+0x1c>
   13c40:	cmp	r1, #0
   13c44:	moveq	r1, #1
   13c48:	moveq	r0, r1
   13c4c:	bxeq	lr
   13c50:	b	11f80 <strcmp@plt>
   13c54:	cmp	r1, #0
   13c58:	mvnne	r1, #0
   13c5c:	mov	r0, r1
   13c60:	bx	lr

00013c64 <table_compare_ptr@@Base>:
   13c64:	mov	r2, #0
   13c68:	cmp	r0, r1
   13c6c:	mvncc	r2, #0
   13c70:	movwhi	r2, #1
   13c74:	mov	r0, r2
   13c78:	bx	lr

00013c7c <table_get_default_compare_function_for_data_type@@Base>:
   13c7c:	cmp	r0, #23
   13c80:	ldrls	r1, [pc, #12]	; 13c94 <table_get_default_compare_function_for_data_type@@Base+0x18>
   13c84:	movhi	r0, #0
   13c88:	addls	r1, pc, r1
   13c8c:	ldrls	r0, [r1, r0, lsl #2]
   13c90:	bx	lr
   13c94:	andeq	r3, r1, r0, lsr #4

00013c98 <table_get@@Base>:
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	bl	15684 <table_get_cell_ptr@@Base>
   13ca4:	ldr	r0, [r0]
   13ca8:	pop	{fp, pc}

00013cac <table_get_bool@@Base>:
   13cac:	push	{fp, lr}
   13cb0:	mov	fp, sp
   13cb4:	bl	15684 <table_get_cell_ptr@@Base>
   13cb8:	ldr	r0, [r0]
   13cbc:	ldrb	r0, [r0]
   13cc0:	pop	{fp, pc}

00013cc4 <table_get_int@@Base>:
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	bl	15684 <table_get_cell_ptr@@Base>
   13cd0:	ldr	r0, [r0]
   13cd4:	ldr	r0, [r0]
   13cd8:	pop	{fp, pc}

00013cdc <table_get_uint@@Base>:
   13cdc:	push	{fp, lr}
   13ce0:	mov	fp, sp
   13ce4:	bl	15684 <table_get_cell_ptr@@Base>
   13ce8:	ldr	r0, [r0]
   13cec:	ldr	r0, [r0]
   13cf0:	pop	{fp, pc}

00013cf4 <table_get_int8@@Base>:
   13cf4:	push	{fp, lr}
   13cf8:	mov	fp, sp
   13cfc:	bl	15684 <table_get_cell_ptr@@Base>
   13d00:	ldr	r0, [r0]
   13d04:	ldrsb	r0, [r0]
   13d08:	pop	{fp, pc}

00013d0c <table_get_uint8@@Base>:
   13d0c:	push	{fp, lr}
   13d10:	mov	fp, sp
   13d14:	bl	15684 <table_get_cell_ptr@@Base>
   13d18:	ldr	r0, [r0]
   13d1c:	ldrb	r0, [r0]
   13d20:	pop	{fp, pc}

00013d24 <table_get_int16@@Base>:
   13d24:	push	{fp, lr}
   13d28:	mov	fp, sp
   13d2c:	bl	15684 <table_get_cell_ptr@@Base>
   13d30:	ldr	r0, [r0]
   13d34:	ldrsh	r0, [r0]
   13d38:	pop	{fp, pc}

00013d3c <table_get_uint16@@Base>:
   13d3c:	push	{fp, lr}
   13d40:	mov	fp, sp
   13d44:	bl	15684 <table_get_cell_ptr@@Base>
   13d48:	ldr	r0, [r0]
   13d4c:	ldrh	r0, [r0]
   13d50:	pop	{fp, pc}

00013d54 <table_get_int32@@Base>:
   13d54:	push	{fp, lr}
   13d58:	mov	fp, sp
   13d5c:	bl	15684 <table_get_cell_ptr@@Base>
   13d60:	ldr	r0, [r0]
   13d64:	ldr	r0, [r0]
   13d68:	pop	{fp, pc}

00013d6c <table_get_uint32@@Base>:
   13d6c:	push	{fp, lr}
   13d70:	mov	fp, sp
   13d74:	bl	15684 <table_get_cell_ptr@@Base>
   13d78:	ldr	r0, [r0]
   13d7c:	ldr	r0, [r0]
   13d80:	pop	{fp, pc}

00013d84 <table_get_int64@@Base>:
   13d84:	push	{fp, lr}
   13d88:	mov	fp, sp
   13d8c:	bl	15684 <table_get_cell_ptr@@Base>
   13d90:	ldr	r0, [r0]
   13d94:	ldrd	r0, [r0]
   13d98:	pop	{fp, pc}

00013d9c <table_get_uint64@@Base>:
   13d9c:	push	{fp, lr}
   13da0:	mov	fp, sp
   13da4:	bl	15684 <table_get_cell_ptr@@Base>
   13da8:	ldr	r0, [r0]
   13dac:	ldrd	r0, [r0]
   13db0:	pop	{fp, pc}

00013db4 <table_get_short@@Base>:
   13db4:	push	{fp, lr}
   13db8:	mov	fp, sp
   13dbc:	bl	15684 <table_get_cell_ptr@@Base>
   13dc0:	ldr	r0, [r0]
   13dc4:	ldrsh	r0, [r0]
   13dc8:	pop	{fp, pc}

00013dcc <table_get_ushort@@Base>:
   13dcc:	push	{fp, lr}
   13dd0:	mov	fp, sp
   13dd4:	bl	15684 <table_get_cell_ptr@@Base>
   13dd8:	ldr	r0, [r0]
   13ddc:	ldrh	r0, [r0]
   13de0:	pop	{fp, pc}

00013de4 <table_get_long@@Base>:
   13de4:	push	{fp, lr}
   13de8:	mov	fp, sp
   13dec:	bl	15684 <table_get_cell_ptr@@Base>
   13df0:	ldr	r0, [r0]
   13df4:	ldr	r0, [r0]
   13df8:	pop	{fp, pc}

00013dfc <table_get_ulong@@Base>:
   13dfc:	push	{fp, lr}
   13e00:	mov	fp, sp
   13e04:	bl	15684 <table_get_cell_ptr@@Base>
   13e08:	ldr	r0, [r0]
   13e0c:	ldr	r0, [r0]
   13e10:	pop	{fp, pc}

00013e14 <table_get_llong@@Base>:
   13e14:	push	{fp, lr}
   13e18:	mov	fp, sp
   13e1c:	bl	15684 <table_get_cell_ptr@@Base>
   13e20:	ldr	r0, [r0]
   13e24:	ldrd	r0, [r0]
   13e28:	pop	{fp, pc}

00013e2c <table_get_ullong@@Base>:
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	bl	15684 <table_get_cell_ptr@@Base>
   13e38:	ldr	r0, [r0]
   13e3c:	ldrd	r0, [r0]
   13e40:	pop	{fp, pc}

00013e44 <table_get_float@@Base>:
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	bl	15684 <table_get_cell_ptr@@Base>
   13e50:	ldr	r0, [r0]
   13e54:	vldr	s0, [r0]
   13e58:	pop	{fp, pc}

00013e5c <table_get_double@@Base>:
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	bl	15684 <table_get_cell_ptr@@Base>
   13e68:	ldr	r0, [r0]
   13e6c:	vldr	d0, [r0]
   13e70:	pop	{fp, pc}

00013e74 <table_get_ldouble@@Base>:
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	bl	15684 <table_get_cell_ptr@@Base>
   13e80:	ldr	r0, [r0]
   13e84:	vldr	d0, [r0]
   13e88:	pop	{fp, pc}

00013e8c <table_get_char@@Base>:
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	bl	15684 <table_get_cell_ptr@@Base>
   13e98:	ldr	r0, [r0]
   13e9c:	ldrb	r0, [r0]
   13ea0:	pop	{fp, pc}

00013ea4 <table_get_uchar@@Base>:
   13ea4:	push	{fp, lr}
   13ea8:	mov	fp, sp
   13eac:	bl	15684 <table_get_cell_ptr@@Base>
   13eb0:	ldr	r0, [r0]
   13eb4:	ldrb	r0, [r0]
   13eb8:	pop	{fp, pc}

00013ebc <table_get_string@@Base>:
   13ebc:	push	{fp, lr}
   13ec0:	mov	fp, sp
   13ec4:	bl	15684 <table_get_cell_ptr@@Base>
   13ec8:	ldr	r0, [r0]
   13ecc:	pop	{fp, pc}

00013ed0 <table_get_ptr@@Base>:
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	bl	15684 <table_get_cell_ptr@@Base>
   13edc:	ldr	r0, [r0]
   13ee0:	pop	{fp, pc}

00013ee4 <table_row_init@@Base>:
   13ee4:	push	{r4, r5, fp, lr}
   13ee8:	add	fp, sp, #8
   13eec:	mov	r4, r1
   13ef0:	ldr	r1, [r0, #12]
   13ef4:	ldr	r5, [r0, #16]
   13ef8:	lsl	r0, r1, #2
   13efc:	bl	11fc8 <malloc@plt>
   13f00:	str	r0, [r5, r4, lsl #2]
   13f04:	pop	{r4, r5, fp, pc}

00013f08 <table_get_row_ptr@@Base>:
   13f08:	ldr	r0, [r0, #16]
   13f0c:	add	r0, r0, r1, lsl #2
   13f10:	bx	lr

00013f14 <table_row_destroy@@Base>:
   13f14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f18:	add	fp, sp, #24
   13f1c:	mov	r4, r1
   13f20:	mov	r5, r0
   13f24:	bl	13248 <table_get_column_length@@Base>
   13f28:	ldr	r8, [r5, #16]
   13f2c:	cmp	r0, #1
   13f30:	blt	13f58 <table_row_destroy@@Base+0x44>
   13f34:	mov	r6, r0
   13f38:	mov	r7, #0
   13f3c:	mov	r0, r5
   13f40:	mov	r1, r4
   13f44:	mov	r2, r7
   13f48:	bl	156a0 <table_cell_destroy@@Base>
   13f4c:	add	r7, r7, #1
   13f50:	cmp	r6, r7
   13f54:	bne	13f3c <table_row_destroy@@Base+0x28>
   13f58:	ldr	r0, [r8, r4, lsl #2]
   13f5c:	cmp	r0, #0
   13f60:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f64:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f68:	b	11f98 <free@plt>

00013f6c <table_get_row_length@@Base>:
   13f6c:	ldr	r0, [r0, #20]
   13f70:	bx	lr

00013f74 <table_add_row@@Base>:
   13f74:	push	{r4, r5, r6, r7, fp, lr}
   13f78:	add	fp, sp, #16
   13f7c:	ldr	r5, [r0, #20]
   13f80:	ldr	r1, [r0, #24]
   13f84:	mov	r4, r0
   13f88:	udiv	r0, r5, r1
   13f8c:	mls	r0, r0, r1, r5
   13f90:	cmp	r0, #0
   13f94:	bne	13fb8 <table_add_row@@Base+0x44>
   13f98:	ldr	r2, [r4, #28]
   13f9c:	ldr	r0, [r4, #16]
   13fa0:	add	r1, r2, r1
   13fa4:	str	r1, [r4, #28]
   13fa8:	lsl	r1, r1, #2
   13fac:	bl	11fb0 <realloc@plt>
   13fb0:	str	r0, [r4, #16]
   13fb4:	ldr	r5, [r4, #20]
   13fb8:	mov	r0, r4
   13fbc:	bl	13248 <table_get_column_length@@Base>
   13fc0:	mov	r6, r0
   13fc4:	ldr	r0, [r4, #12]
   13fc8:	ldr	r7, [r4, #16]
   13fcc:	lsl	r0, r0, #2
   13fd0:	bl	11fc8 <malloc@plt>
   13fd4:	cmp	r6, #1
   13fd8:	str	r0, [r7, r5, lsl #2]
   13fdc:	blt	14000 <table_add_row@@Base+0x8c>
   13fe0:	mov	r7, #0
   13fe4:	mov	r0, r4
   13fe8:	mov	r1, r5
   13fec:	mov	r2, r7
   13ff0:	bl	15664 <table_cell_init@@Base>
   13ff4:	add	r7, r7, #1
   13ff8:	cmp	r6, r7
   13ffc:	bne	13fe4 <table_add_row@@Base+0x70>
   14000:	ldr	r1, [r4, #20]
   14004:	mov	r0, r4
   14008:	mvn	r2, #0
   1400c:	mov	r3, #2
   14010:	bl	13154 <table_notify@@Base>
   14014:	ldr	r0, [r4, #20]
   14018:	add	r1, r0, #1
   1401c:	str	r1, [r4, #20]
   14020:	pop	{r4, r5, r6, r7, fp, pc}

00014024 <table_remove_row@@Base>:
   14024:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14028:	add	fp, sp, #24
   1402c:	ldr	r8, [r0, #20]
   14030:	mov	r4, r1
   14034:	mov	r5, r0
   14038:	bl	13248 <table_get_column_length@@Base>
   1403c:	cmp	r0, #1
   14040:	blt	1408c <table_remove_row@@Base+0x68>
   14044:	mov	r6, r0
   14048:	mov	r7, #0
   1404c:	mov	r0, r5
   14050:	mov	r1, r7
   14054:	bl	132bc <table_get_column_data_type@@Base>
   14058:	cmp	r0, #23
   1405c:	beq	14080 <table_remove_row@@Base+0x5c>
   14060:	mov	r0, r5
   14064:	mov	r1, r4
   14068:	mov	r2, r7
   1406c:	bl	15684 <table_get_cell_ptr@@Base>
   14070:	ldr	r0, [r0]
   14074:	cmp	r0, #0
   14078:	beq	14080 <table_remove_row@@Base+0x5c>
   1407c:	bl	11f98 <free@plt>
   14080:	add	r7, r7, #1
   14084:	cmp	r6, r7
   14088:	bne	1404c <table_remove_row@@Base+0x28>
   1408c:	ldr	r0, [r5, #16]
   14090:	ldr	r0, [r0, r4, lsl #2]
   14094:	cmp	r0, #0
   14098:	beq	140a0 <table_remove_row@@Base+0x7c>
   1409c:	bl	11f98 <free@plt>
   140a0:	sub	r0, r8, #1
   140a4:	cmp	r0, r4
   140a8:	ble	140cc <table_remove_row@@Base+0xa8>
   140ac:	mov	r1, r4
   140b0:	ldr	r2, [r5, #16]
   140b4:	add	r3, r2, r1, lsl #2
   140b8:	ldr	r3, [r3, #4]
   140bc:	str	r3, [r2, r1, lsl #2]
   140c0:	add	r1, r1, #1
   140c4:	cmp	r0, r1
   140c8:	bne	140b0 <table_remove_row@@Base+0x8c>
   140cc:	ldr	r0, [r5, #20]
   140d0:	ldr	r1, [r5, #24]
   140d4:	sub	r0, r0, #1
   140d8:	udiv	r2, r0, r1
   140dc:	str	r0, [r5, #20]
   140e0:	mls	r0, r2, r1, r0
   140e4:	cmp	r0, #0
   140e8:	bne	14108 <table_remove_row@@Base+0xe4>
   140ec:	ldr	r2, [r5, #28]
   140f0:	ldr	r0, [r5, #16]
   140f4:	sub	r1, r2, r1
   140f8:	str	r1, [r5, #28]
   140fc:	lsl	r1, r1, #2
   14100:	bl	11fb0 <realloc@plt>
   14104:	str	r0, [r5, #16]
   14108:	mov	r0, r5
   1410c:	mov	r1, r4
   14110:	mvn	r2, #0
   14114:	mov	r3, #4
   14118:	bl	13154 <table_notify@@Base>
   1411c:	mov	r0, #0
   14120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014124 <table_set_row_ptr@@Base>:
   14124:	ldr	r2, [r2]
   14128:	ldr	r0, [r0, #16]
   1412c:	str	r2, [r0, r1, lsl #2]
   14130:	bx	lr

00014134 <table_set@@Base>:
   14134:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14138:	add	fp, sp, #24
   1413c:	mov	r8, r3
   14140:	mov	r4, r2
   14144:	mov	r9, r1
   14148:	mov	r6, r0
   1414c:	bl	15684 <table_get_cell_ptr@@Base>
   14150:	mov	r5, r0
   14154:	mov	r0, r6
   14158:	mov	r1, r4
   1415c:	bl	13220 <table_get_col_ptr@@Base>
   14160:	ldr	r1, [fp, #8]
   14164:	mvn	r7, #0
   14168:	cmp	r1, #23
   1416c:	bhi	14434 <table_set@@Base+0x300>
   14170:	add	r2, pc, #4
   14174:	ldr	r1, [r2, r1, lsl #2]
   14178:	add	pc, r2, r1
   1417c:	andeq	r0, r0, r0, rrx
   14180:	andeq	r0, r0, r0, ror r0
   14184:	andeq	r0, r0, r0, lsl #1
   14188:	muleq	r0, r0, r0
   1418c:	andeq	r0, r0, r0, lsr #1
   14190:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14194:	andeq	r0, r0, r0, asr #1
   14198:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1419c:	andeq	r0, r0, r0, ror #1
   141a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   141a4:	andeq	r0, r0, r0, lsl #2
   141a8:	andeq	r0, r0, r0, lsl r1
   141ac:	andeq	r0, r0, r8, asr #2
   141b0:	andeq	r0, r0, r8, asr r1
   141b4:	andeq	r0, r0, r8, ror #2
   141b8:	andeq	r0, r0, r8, ror r1
   141bc:	andeq	r0, r0, r8, lsl #3
   141c0:	andeq	r0, r0, r0, asr #3
   141c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   141c8:	andeq	r0, r0, r0, lsl r2
   141cc:	andeq	r0, r0, r0, lsr #4
   141d0:	andeq	r0, r0, r0, lsr r2
   141d4:	andeq	r0, r0, ip, ror #4
   141d8:	andeq	r0, r0, r0, asr #5
   141dc:	ldr	r0, [r0, #4]
   141e0:	cmp	r0, #0
   141e4:	bne	14434 <table_set@@Base+0x300>
   141e8:	b	14310 <table_set@@Base+0x1dc>
   141ec:	ldr	r0, [r0, #4]
   141f0:	cmp	r0, #1
   141f4:	beq	14310 <table_set@@Base+0x1dc>
   141f8:	b	14434 <table_set@@Base+0x300>
   141fc:	ldr	r0, [r0, #4]
   14200:	cmp	r0, #2
   14204:	beq	143f4 <table_set@@Base+0x2c0>
   14208:	b	14434 <table_set@@Base+0x300>
   1420c:	ldr	r0, [r0, #4]
   14210:	cmp	r0, #3
   14214:	beq	143f4 <table_set@@Base+0x2c0>
   14218:	b	14434 <table_set@@Base+0x300>
   1421c:	ldr	r0, [r0, #4]
   14220:	cmp	r0, #4
   14224:	beq	14298 <table_set@@Base+0x164>
   14228:	b	14434 <table_set@@Base+0x300>
   1422c:	ldr	r0, [r0, #4]
   14230:	cmp	r0, #5
   14234:	beq	14298 <table_set@@Base+0x164>
   14238:	b	14434 <table_set@@Base+0x300>
   1423c:	ldr	r0, [r0, #4]
   14240:	cmp	r0, #6
   14244:	beq	14310 <table_set@@Base+0x1dc>
   14248:	b	14434 <table_set@@Base+0x300>
   1424c:	ldr	r0, [r0, #4]
   14250:	cmp	r0, #7
   14254:	beq	14310 <table_set@@Base+0x1dc>
   14258:	b	14434 <table_set@@Base+0x300>
   1425c:	ldr	r0, [r0, #4]
   14260:	cmp	r0, #8
   14264:	beq	14358 <table_set@@Base+0x224>
   14268:	b	14434 <table_set@@Base+0x300>
   1426c:	ldr	r0, [r0, #4]
   14270:	cmp	r0, #9
   14274:	beq	14358 <table_set@@Base+0x224>
   14278:	b	14434 <table_set@@Base+0x300>
   1427c:	ldr	r0, [r0, #4]
   14280:	cmp	r0, #10
   14284:	beq	14298 <table_set@@Base+0x164>
   14288:	b	14434 <table_set@@Base+0x300>
   1428c:	ldr	r0, [r0, #4]
   14290:	cmp	r0, #11
   14294:	bne	14434 <table_set@@Base+0x300>
   14298:	ldr	r0, [r5]
   1429c:	cmp	r0, #0
   142a0:	bne	142b8 <table_set@@Base+0x184>
   142a4:	mov	r0, #2
   142a8:	bl	11fc8 <malloc@plt>
   142ac:	cmp	r0, #0
   142b0:	str	r0, [r5]
   142b4:	beq	14434 <table_set@@Base+0x300>
   142b8:	ldrh	r1, [r8]
   142bc:	strh	r1, [r0]
   142c0:	b	1441c <table_set@@Base+0x2e8>
   142c4:	ldr	r0, [r0, #4]
   142c8:	cmp	r0, #12
   142cc:	beq	14310 <table_set@@Base+0x1dc>
   142d0:	b	14434 <table_set@@Base+0x300>
   142d4:	ldr	r0, [r0, #4]
   142d8:	cmp	r0, #13
   142dc:	beq	14310 <table_set@@Base+0x1dc>
   142e0:	b	14434 <table_set@@Base+0x300>
   142e4:	ldr	r0, [r0, #4]
   142e8:	cmp	r0, #14
   142ec:	beq	14358 <table_set@@Base+0x224>
   142f0:	b	14434 <table_set@@Base+0x300>
   142f4:	ldr	r0, [r0, #4]
   142f8:	cmp	r0, #15
   142fc:	beq	14358 <table_set@@Base+0x224>
   14300:	b	14434 <table_set@@Base+0x300>
   14304:	ldr	r0, [r0, #4]
   14308:	cmp	r0, #16
   1430c:	bne	14434 <table_set@@Base+0x300>
   14310:	ldr	r0, [r5]
   14314:	cmp	r0, #0
   14318:	bne	14330 <table_set@@Base+0x1fc>
   1431c:	mov	r0, #4
   14320:	bl	11fc8 <malloc@plt>
   14324:	cmp	r0, #0
   14328:	str	r0, [r5]
   1432c:	beq	14434 <table_set@@Base+0x300>
   14330:	ldr	r1, [r8]
   14334:	str	r1, [r0]
   14338:	b	1441c <table_set@@Base+0x2e8>
   1433c:	ldr	r0, [r0, #4]
   14340:	cmp	r0, #17
   14344:	beq	14358 <table_set@@Base+0x224>
   14348:	b	14434 <table_set@@Base+0x300>
   1434c:	ldr	r0, [r0, #4]
   14350:	cmp	r0, #18
   14354:	bne	14434 <table_set@@Base+0x300>
   14358:	ldr	r0, [r5]
   1435c:	cmp	r0, #0
   14360:	bne	14378 <table_set@@Base+0x244>
   14364:	mov	r0, #8
   14368:	bl	11fc8 <malloc@plt>
   1436c:	cmp	r0, #0
   14370:	str	r0, [r5]
   14374:	beq	14434 <table_set@@Base+0x300>
   14378:	ldr	r1, [r8]
   1437c:	ldr	r2, [r8, #4]
   14380:	str	r2, [r0, #4]
   14384:	str	r1, [r0]
   14388:	b	1441c <table_set@@Base+0x2e8>
   1438c:	ldr	r0, [r0, #4]
   14390:	cmp	r0, #19
   14394:	beq	143f4 <table_set@@Base+0x2c0>
   14398:	b	14434 <table_set@@Base+0x300>
   1439c:	ldr	r0, [r0, #4]
   143a0:	cmp	r0, #20
   143a4:	beq	143f4 <table_set@@Base+0x2c0>
   143a8:	b	14434 <table_set@@Base+0x300>
   143ac:	ldr	r0, [r0, #4]
   143b0:	cmp	r0, #21
   143b4:	bne	14434 <table_set@@Base+0x300>
   143b8:	mov	r0, r8
   143bc:	bl	11fec <strlen@plt>
   143c0:	ldr	r2, [r5]
   143c4:	add	r1, r0, #1
   143c8:	mov	r0, r2
   143cc:	bl	11fb0 <realloc@plt>
   143d0:	cmp	r0, #0
   143d4:	str	r0, [r5]
   143d8:	beq	14434 <table_set@@Base+0x300>
   143dc:	mov	r1, r8
   143e0:	bl	11fbc <strcpy@plt>
   143e4:	b	1441c <table_set@@Base+0x2e8>
   143e8:	ldr	r0, [r0, #4]
   143ec:	cmp	r0, #22
   143f0:	bne	14434 <table_set@@Base+0x300>
   143f4:	ldr	r0, [r5]
   143f8:	cmp	r0, #0
   143fc:	bne	14414 <table_set@@Base+0x2e0>
   14400:	mov	r0, #1
   14404:	bl	11fc8 <malloc@plt>
   14408:	cmp	r0, #0
   1440c:	str	r0, [r5]
   14410:	beq	14434 <table_set@@Base+0x300>
   14414:	ldrb	r1, [r8]
   14418:	strb	r1, [r0]
   1441c:	mov	r0, r6
   14420:	mov	r1, r9
   14424:	mov	r2, r4
   14428:	mov	r3, #1
   1442c:	bl	13154 <table_notify@@Base>
   14430:	mov	r7, #0
   14434:	mov	r0, r7
   14438:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1443c:	ldr	r0, [r0, #4]
   14440:	cmp	r0, #23
   14444:	bne	14434 <table_set@@Base+0x300>
   14448:	str	r8, [r5]
   1444c:	b	1441c <table_set@@Base+0x2e8>

00014450 <table_set_bool@@Base>:
   14450:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14454:	add	fp, sp, #24
   14458:	mov	r8, r3
   1445c:	mov	r4, r2
   14460:	mov	r9, r1
   14464:	mov	r6, r0
   14468:	bl	15684 <table_get_cell_ptr@@Base>
   1446c:	mov	r5, r0
   14470:	mov	r0, r6
   14474:	mov	r1, r4
   14478:	bl	13220 <table_get_col_ptr@@Base>
   1447c:	ldr	r0, [r0, #4]
   14480:	mvn	r7, #0
   14484:	cmp	r0, #22
   14488:	bne	144c8 <table_set_bool@@Base+0x78>
   1448c:	ldr	r0, [r5]
   14490:	cmp	r0, #0
   14494:	bne	144ac <table_set_bool@@Base+0x5c>
   14498:	mov	r0, #1
   1449c:	bl	11fc8 <malloc@plt>
   144a0:	cmp	r0, #0
   144a4:	str	r0, [r5]
   144a8:	beq	144c8 <table_set_bool@@Base+0x78>
   144ac:	strb	r8, [r0]
   144b0:	mov	r0, r6
   144b4:	mov	r1, r9
   144b8:	mov	r2, r4
   144bc:	mov	r3, #1
   144c0:	bl	13154 <table_notify@@Base>
   144c4:	mov	r7, #0
   144c8:	mov	r0, r7
   144cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144d0 <table_set_int@@Base>:
   144d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144d4:	add	fp, sp, #24
   144d8:	mov	r8, r3
   144dc:	mov	r4, r2
   144e0:	mov	r5, r1
   144e4:	mov	r6, r0
   144e8:	bl	15684 <table_get_cell_ptr@@Base>
   144ec:	mov	r9, r0
   144f0:	mov	r0, r6
   144f4:	mov	r1, r4
   144f8:	bl	13220 <table_get_col_ptr@@Base>
   144fc:	ldr	r0, [r0, #4]
   14500:	mvn	r7, #0
   14504:	cmp	r0, #0
   14508:	bne	14548 <table_set_int@@Base+0x78>
   1450c:	ldr	r0, [r9]
   14510:	cmp	r0, #0
   14514:	bne	1452c <table_set_int@@Base+0x5c>
   14518:	mov	r0, #4
   1451c:	bl	11fc8 <malloc@plt>
   14520:	cmp	r0, #0
   14524:	str	r0, [r9]
   14528:	beq	14548 <table_set_int@@Base+0x78>
   1452c:	str	r8, [r0]
   14530:	mov	r0, r6
   14534:	mov	r1, r5
   14538:	mov	r2, r4
   1453c:	mov	r3, #1
   14540:	bl	13154 <table_notify@@Base>
   14544:	mov	r7, #0
   14548:	mov	r0, r7
   1454c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014550 <table_set_uint@@Base>:
   14550:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14554:	add	fp, sp, #24
   14558:	mov	r8, r3
   1455c:	mov	r4, r2
   14560:	mov	r5, r1
   14564:	mov	r6, r0
   14568:	bl	15684 <table_get_cell_ptr@@Base>
   1456c:	mov	r9, r0
   14570:	mov	r0, r6
   14574:	mov	r1, r4
   14578:	bl	13220 <table_get_col_ptr@@Base>
   1457c:	ldr	r0, [r0, #4]
   14580:	mvn	r7, #0
   14584:	cmp	r0, #1
   14588:	bne	145c8 <table_set_uint@@Base+0x78>
   1458c:	ldr	r0, [r9]
   14590:	cmp	r0, #0
   14594:	bne	145ac <table_set_uint@@Base+0x5c>
   14598:	mov	r0, #4
   1459c:	bl	11fc8 <malloc@plt>
   145a0:	cmp	r0, #0
   145a4:	str	r0, [r9]
   145a8:	beq	145c8 <table_set_uint@@Base+0x78>
   145ac:	str	r8, [r0]
   145b0:	mov	r0, r6
   145b4:	mov	r1, r5
   145b8:	mov	r2, r4
   145bc:	mov	r3, #1
   145c0:	bl	13154 <table_notify@@Base>
   145c4:	mov	r7, #0
   145c8:	mov	r0, r7
   145cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145d0 <table_set_int8@@Base>:
   145d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145d4:	add	fp, sp, #24
   145d8:	mov	r8, r3
   145dc:	mov	r4, r2
   145e0:	mov	r9, r1
   145e4:	mov	r6, r0
   145e8:	bl	15684 <table_get_cell_ptr@@Base>
   145ec:	mov	r5, r0
   145f0:	mov	r0, r6
   145f4:	mov	r1, r4
   145f8:	bl	13220 <table_get_col_ptr@@Base>
   145fc:	ldr	r0, [r0, #4]
   14600:	mvn	r7, #0
   14604:	cmp	r0, #2
   14608:	bne	14648 <table_set_int8@@Base+0x78>
   1460c:	ldr	r0, [r5]
   14610:	cmp	r0, #0
   14614:	bne	1462c <table_set_int8@@Base+0x5c>
   14618:	mov	r0, #1
   1461c:	bl	11fc8 <malloc@plt>
   14620:	cmp	r0, #0
   14624:	str	r0, [r5]
   14628:	beq	14648 <table_set_int8@@Base+0x78>
   1462c:	strb	r8, [r0]
   14630:	mov	r0, r6
   14634:	mov	r1, r9
   14638:	mov	r2, r4
   1463c:	mov	r3, #1
   14640:	bl	13154 <table_notify@@Base>
   14644:	mov	r7, #0
   14648:	mov	r0, r7
   1464c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014650 <table_set_uint8@@Base>:
   14650:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14654:	add	fp, sp, #24
   14658:	mov	r8, r3
   1465c:	mov	r4, r2
   14660:	mov	r9, r1
   14664:	mov	r6, r0
   14668:	bl	15684 <table_get_cell_ptr@@Base>
   1466c:	mov	r5, r0
   14670:	mov	r0, r6
   14674:	mov	r1, r4
   14678:	bl	13220 <table_get_col_ptr@@Base>
   1467c:	ldr	r0, [r0, #4]
   14680:	mvn	r7, #0
   14684:	cmp	r0, #3
   14688:	bne	146c8 <table_set_uint8@@Base+0x78>
   1468c:	ldr	r0, [r5]
   14690:	cmp	r0, #0
   14694:	bne	146ac <table_set_uint8@@Base+0x5c>
   14698:	mov	r0, #1
   1469c:	bl	11fc8 <malloc@plt>
   146a0:	cmp	r0, #0
   146a4:	str	r0, [r5]
   146a8:	beq	146c8 <table_set_uint8@@Base+0x78>
   146ac:	strb	r8, [r0]
   146b0:	mov	r0, r6
   146b4:	mov	r1, r9
   146b8:	mov	r2, r4
   146bc:	mov	r3, #1
   146c0:	bl	13154 <table_notify@@Base>
   146c4:	mov	r7, #0
   146c8:	mov	r0, r7
   146cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146d0 <table_set_int16@@Base>:
   146d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146d4:	add	fp, sp, #24
   146d8:	mov	r8, r3
   146dc:	mov	r4, r2
   146e0:	mov	r9, r1
   146e4:	mov	r6, r0
   146e8:	bl	15684 <table_get_cell_ptr@@Base>
   146ec:	mov	r5, r0
   146f0:	mov	r0, r6
   146f4:	mov	r1, r4
   146f8:	bl	13220 <table_get_col_ptr@@Base>
   146fc:	ldr	r0, [r0, #4]
   14700:	mvn	r7, #0
   14704:	cmp	r0, #4
   14708:	bne	14748 <table_set_int16@@Base+0x78>
   1470c:	ldr	r0, [r5]
   14710:	cmp	r0, #0
   14714:	bne	1472c <table_set_int16@@Base+0x5c>
   14718:	mov	r0, #2
   1471c:	bl	11fc8 <malloc@plt>
   14720:	cmp	r0, #0
   14724:	str	r0, [r5]
   14728:	beq	14748 <table_set_int16@@Base+0x78>
   1472c:	strh	r8, [r0]
   14730:	mov	r0, r6
   14734:	mov	r1, r9
   14738:	mov	r2, r4
   1473c:	mov	r3, #1
   14740:	bl	13154 <table_notify@@Base>
   14744:	mov	r7, #0
   14748:	mov	r0, r7
   1474c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014750 <table_set_uint16@@Base>:
   14750:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14754:	add	fp, sp, #24
   14758:	mov	r8, r3
   1475c:	mov	r4, r2
   14760:	mov	r9, r1
   14764:	mov	r6, r0
   14768:	bl	15684 <table_get_cell_ptr@@Base>
   1476c:	mov	r5, r0
   14770:	mov	r0, r6
   14774:	mov	r1, r4
   14778:	bl	13220 <table_get_col_ptr@@Base>
   1477c:	ldr	r0, [r0, #4]
   14780:	mvn	r7, #0
   14784:	cmp	r0, #5
   14788:	bne	147c8 <table_set_uint16@@Base+0x78>
   1478c:	ldr	r0, [r5]
   14790:	cmp	r0, #0
   14794:	bne	147ac <table_set_uint16@@Base+0x5c>
   14798:	mov	r0, #2
   1479c:	bl	11fc8 <malloc@plt>
   147a0:	cmp	r0, #0
   147a4:	str	r0, [r5]
   147a8:	beq	147c8 <table_set_uint16@@Base+0x78>
   147ac:	strh	r8, [r0]
   147b0:	mov	r0, r6
   147b4:	mov	r1, r9
   147b8:	mov	r2, r4
   147bc:	mov	r3, #1
   147c0:	bl	13154 <table_notify@@Base>
   147c4:	mov	r7, #0
   147c8:	mov	r0, r7
   147cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147d0 <table_set_int32@@Base>:
   147d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147d4:	add	fp, sp, #24
   147d8:	mov	r8, r3
   147dc:	mov	r4, r2
   147e0:	mov	r5, r1
   147e4:	mov	r6, r0
   147e8:	bl	15684 <table_get_cell_ptr@@Base>
   147ec:	mov	r9, r0
   147f0:	mov	r0, r6
   147f4:	mov	r1, r4
   147f8:	bl	13220 <table_get_col_ptr@@Base>
   147fc:	ldr	r0, [r0, #4]
   14800:	mvn	r7, #0
   14804:	cmp	r0, #6
   14808:	bne	14848 <table_set_int32@@Base+0x78>
   1480c:	ldr	r0, [r9]
   14810:	cmp	r0, #0
   14814:	bne	1482c <table_set_int32@@Base+0x5c>
   14818:	mov	r0, #4
   1481c:	bl	11fc8 <malloc@plt>
   14820:	cmp	r0, #0
   14824:	str	r0, [r9]
   14828:	beq	14848 <table_set_int32@@Base+0x78>
   1482c:	str	r8, [r0]
   14830:	mov	r0, r6
   14834:	mov	r1, r5
   14838:	mov	r2, r4
   1483c:	mov	r3, #1
   14840:	bl	13154 <table_notify@@Base>
   14844:	mov	r7, #0
   14848:	mov	r0, r7
   1484c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014850 <table_set_uint32@@Base>:
   14850:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14854:	add	fp, sp, #24
   14858:	mov	r8, r3
   1485c:	mov	r4, r2
   14860:	mov	r5, r1
   14864:	mov	r6, r0
   14868:	bl	15684 <table_get_cell_ptr@@Base>
   1486c:	mov	r9, r0
   14870:	mov	r0, r6
   14874:	mov	r1, r4
   14878:	bl	13220 <table_get_col_ptr@@Base>
   1487c:	ldr	r0, [r0, #4]
   14880:	mvn	r7, #0
   14884:	cmp	r0, #7
   14888:	bne	148c8 <table_set_uint32@@Base+0x78>
   1488c:	ldr	r0, [r9]
   14890:	cmp	r0, #0
   14894:	bne	148ac <table_set_uint32@@Base+0x5c>
   14898:	mov	r0, #4
   1489c:	bl	11fc8 <malloc@plt>
   148a0:	cmp	r0, #0
   148a4:	str	r0, [r9]
   148a8:	beq	148c8 <table_set_uint32@@Base+0x78>
   148ac:	str	r8, [r0]
   148b0:	mov	r0, r6
   148b4:	mov	r1, r5
   148b8:	mov	r2, r4
   148bc:	mov	r3, #1
   148c0:	bl	13154 <table_notify@@Base>
   148c4:	mov	r7, #0
   148c8:	mov	r0, r7
   148cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148d0 <table_set_int64@@Base>:
   148d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148d4:	add	fp, sp, #24
   148d8:	mov	r4, r2
   148dc:	mov	r8, r1
   148e0:	mov	r6, r0
   148e4:	bl	15684 <table_get_cell_ptr@@Base>
   148e8:	mov	r5, r0
   148ec:	mov	r0, r6
   148f0:	mov	r1, r4
   148f4:	bl	13220 <table_get_col_ptr@@Base>
   148f8:	ldr	r0, [r0, #4]
   148fc:	mvn	r7, #0
   14900:	cmp	r0, #8
   14904:	bne	14950 <table_set_int64@@Base+0x80>
   14908:	ldr	r0, [r5]
   1490c:	cmp	r0, #0
   14910:	bne	14928 <table_set_int64@@Base+0x58>
   14914:	mov	r0, #8
   14918:	bl	11fc8 <malloc@plt>
   1491c:	cmp	r0, #0
   14920:	str	r0, [r5]
   14924:	beq	14950 <table_set_int64@@Base+0x80>
   14928:	ldr	r1, [fp, #12]
   1492c:	ldr	r2, [fp, #8]
   14930:	mov	r3, #1
   14934:	str	r2, [r0]
   14938:	str	r1, [r0, #4]
   1493c:	mov	r0, r6
   14940:	mov	r1, r8
   14944:	mov	r2, r4
   14948:	bl	13154 <table_notify@@Base>
   1494c:	mov	r7, #0
   14950:	mov	r0, r7
   14954:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014958 <table_set_uint64@@Base>:
   14958:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1495c:	add	fp, sp, #24
   14960:	mov	r4, r2
   14964:	mov	r8, r1
   14968:	mov	r6, r0
   1496c:	bl	15684 <table_get_cell_ptr@@Base>
   14970:	mov	r5, r0
   14974:	mov	r0, r6
   14978:	mov	r1, r4
   1497c:	bl	13220 <table_get_col_ptr@@Base>
   14980:	ldr	r0, [r0, #4]
   14984:	mvn	r7, #0
   14988:	cmp	r0, #9
   1498c:	bne	149d8 <table_set_uint64@@Base+0x80>
   14990:	ldr	r0, [r5]
   14994:	cmp	r0, #0
   14998:	bne	149b0 <table_set_uint64@@Base+0x58>
   1499c:	mov	r0, #8
   149a0:	bl	11fc8 <malloc@plt>
   149a4:	cmp	r0, #0
   149a8:	str	r0, [r5]
   149ac:	beq	149d8 <table_set_uint64@@Base+0x80>
   149b0:	ldr	r1, [fp, #12]
   149b4:	ldr	r2, [fp, #8]
   149b8:	mov	r3, #1
   149bc:	str	r2, [r0]
   149c0:	str	r1, [r0, #4]
   149c4:	mov	r0, r6
   149c8:	mov	r1, r8
   149cc:	mov	r2, r4
   149d0:	bl	13154 <table_notify@@Base>
   149d4:	mov	r7, #0
   149d8:	mov	r0, r7
   149dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149e0 <table_set_short@@Base>:
   149e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149e4:	add	fp, sp, #24
   149e8:	mov	r8, r3
   149ec:	mov	r4, r2
   149f0:	mov	r9, r1
   149f4:	mov	r6, r0
   149f8:	bl	15684 <table_get_cell_ptr@@Base>
   149fc:	mov	r5, r0
   14a00:	mov	r0, r6
   14a04:	mov	r1, r4
   14a08:	bl	13220 <table_get_col_ptr@@Base>
   14a0c:	ldr	r0, [r0, #4]
   14a10:	mvn	r7, #0
   14a14:	cmp	r0, #10
   14a18:	bne	14a58 <table_set_short@@Base+0x78>
   14a1c:	ldr	r0, [r5]
   14a20:	cmp	r0, #0
   14a24:	bne	14a3c <table_set_short@@Base+0x5c>
   14a28:	mov	r0, #2
   14a2c:	bl	11fc8 <malloc@plt>
   14a30:	cmp	r0, #0
   14a34:	str	r0, [r5]
   14a38:	beq	14a58 <table_set_short@@Base+0x78>
   14a3c:	strh	r8, [r0]
   14a40:	mov	r0, r6
   14a44:	mov	r1, r9
   14a48:	mov	r2, r4
   14a4c:	mov	r3, #1
   14a50:	bl	13154 <table_notify@@Base>
   14a54:	mov	r7, #0
   14a58:	mov	r0, r7
   14a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a60 <table_set_ushort@@Base>:
   14a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a64:	add	fp, sp, #24
   14a68:	mov	r8, r3
   14a6c:	mov	r4, r2
   14a70:	mov	r9, r1
   14a74:	mov	r6, r0
   14a78:	bl	15684 <table_get_cell_ptr@@Base>
   14a7c:	mov	r5, r0
   14a80:	mov	r0, r6
   14a84:	mov	r1, r4
   14a88:	bl	13220 <table_get_col_ptr@@Base>
   14a8c:	ldr	r0, [r0, #4]
   14a90:	mvn	r7, #0
   14a94:	cmp	r0, #11
   14a98:	bne	14ad8 <table_set_ushort@@Base+0x78>
   14a9c:	ldr	r0, [r5]
   14aa0:	cmp	r0, #0
   14aa4:	bne	14abc <table_set_ushort@@Base+0x5c>
   14aa8:	mov	r0, #2
   14aac:	bl	11fc8 <malloc@plt>
   14ab0:	cmp	r0, #0
   14ab4:	str	r0, [r5]
   14ab8:	beq	14ad8 <table_set_ushort@@Base+0x78>
   14abc:	strh	r8, [r0]
   14ac0:	mov	r0, r6
   14ac4:	mov	r1, r9
   14ac8:	mov	r2, r4
   14acc:	mov	r3, #1
   14ad0:	bl	13154 <table_notify@@Base>
   14ad4:	mov	r7, #0
   14ad8:	mov	r0, r7
   14adc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ae0 <table_set_long@@Base>:
   14ae0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ae4:	add	fp, sp, #24
   14ae8:	mov	r8, r3
   14aec:	mov	r4, r2
   14af0:	mov	r5, r1
   14af4:	mov	r6, r0
   14af8:	bl	15684 <table_get_cell_ptr@@Base>
   14afc:	mov	r9, r0
   14b00:	mov	r0, r6
   14b04:	mov	r1, r4
   14b08:	bl	13220 <table_get_col_ptr@@Base>
   14b0c:	ldr	r0, [r0, #4]
   14b10:	mvn	r7, #0
   14b14:	cmp	r0, #12
   14b18:	bne	14b58 <table_set_long@@Base+0x78>
   14b1c:	ldr	r0, [r9]
   14b20:	cmp	r0, #0
   14b24:	bne	14b3c <table_set_long@@Base+0x5c>
   14b28:	mov	r0, #4
   14b2c:	bl	11fc8 <malloc@plt>
   14b30:	cmp	r0, #0
   14b34:	str	r0, [r9]
   14b38:	beq	14b58 <table_set_long@@Base+0x78>
   14b3c:	str	r8, [r0]
   14b40:	mov	r0, r6
   14b44:	mov	r1, r5
   14b48:	mov	r2, r4
   14b4c:	mov	r3, #1
   14b50:	bl	13154 <table_notify@@Base>
   14b54:	mov	r7, #0
   14b58:	mov	r0, r7
   14b5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b60 <table_set_ulong@@Base>:
   14b60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b64:	add	fp, sp, #24
   14b68:	mov	r8, r3
   14b6c:	mov	r4, r2
   14b70:	mov	r5, r1
   14b74:	mov	r6, r0
   14b78:	bl	15684 <table_get_cell_ptr@@Base>
   14b7c:	mov	r9, r0
   14b80:	mov	r0, r6
   14b84:	mov	r1, r4
   14b88:	bl	13220 <table_get_col_ptr@@Base>
   14b8c:	ldr	r0, [r0, #4]
   14b90:	mvn	r7, #0
   14b94:	cmp	r0, #13
   14b98:	bne	14bd8 <table_set_ulong@@Base+0x78>
   14b9c:	ldr	r0, [r9]
   14ba0:	cmp	r0, #0
   14ba4:	bne	14bbc <table_set_ulong@@Base+0x5c>
   14ba8:	mov	r0, #4
   14bac:	bl	11fc8 <malloc@plt>
   14bb0:	cmp	r0, #0
   14bb4:	str	r0, [r9]
   14bb8:	beq	14bd8 <table_set_ulong@@Base+0x78>
   14bbc:	str	r8, [r0]
   14bc0:	mov	r0, r6
   14bc4:	mov	r1, r5
   14bc8:	mov	r2, r4
   14bcc:	mov	r3, #1
   14bd0:	bl	13154 <table_notify@@Base>
   14bd4:	mov	r7, #0
   14bd8:	mov	r0, r7
   14bdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014be0 <table_set_llong@@Base>:
   14be0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14be4:	add	fp, sp, #24
   14be8:	mov	r4, r2
   14bec:	mov	r8, r1
   14bf0:	mov	r6, r0
   14bf4:	bl	15684 <table_get_cell_ptr@@Base>
   14bf8:	mov	r5, r0
   14bfc:	mov	r0, r6
   14c00:	mov	r1, r4
   14c04:	bl	13220 <table_get_col_ptr@@Base>
   14c08:	ldr	r0, [r0, #4]
   14c0c:	mvn	r7, #0
   14c10:	cmp	r0, #14
   14c14:	bne	14c60 <table_set_llong@@Base+0x80>
   14c18:	ldr	r0, [r5]
   14c1c:	cmp	r0, #0
   14c20:	bne	14c38 <table_set_llong@@Base+0x58>
   14c24:	mov	r0, #8
   14c28:	bl	11fc8 <malloc@plt>
   14c2c:	cmp	r0, #0
   14c30:	str	r0, [r5]
   14c34:	beq	14c60 <table_set_llong@@Base+0x80>
   14c38:	ldr	r1, [fp, #12]
   14c3c:	ldr	r2, [fp, #8]
   14c40:	mov	r3, #1
   14c44:	str	r2, [r0]
   14c48:	str	r1, [r0, #4]
   14c4c:	mov	r0, r6
   14c50:	mov	r1, r8
   14c54:	mov	r2, r4
   14c58:	bl	13154 <table_notify@@Base>
   14c5c:	mov	r7, #0
   14c60:	mov	r0, r7
   14c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c68 <table_set_ullong@@Base>:
   14c68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c6c:	add	fp, sp, #24
   14c70:	mov	r4, r2
   14c74:	mov	r8, r1
   14c78:	mov	r6, r0
   14c7c:	bl	15684 <table_get_cell_ptr@@Base>
   14c80:	mov	r5, r0
   14c84:	mov	r0, r6
   14c88:	mov	r1, r4
   14c8c:	bl	13220 <table_get_col_ptr@@Base>
   14c90:	ldr	r0, [r0, #4]
   14c94:	mvn	r7, #0
   14c98:	cmp	r0, #15
   14c9c:	bne	14ce8 <table_set_ullong@@Base+0x80>
   14ca0:	ldr	r0, [r5]
   14ca4:	cmp	r0, #0
   14ca8:	bne	14cc0 <table_set_ullong@@Base+0x58>
   14cac:	mov	r0, #8
   14cb0:	bl	11fc8 <malloc@plt>
   14cb4:	cmp	r0, #0
   14cb8:	str	r0, [r5]
   14cbc:	beq	14ce8 <table_set_ullong@@Base+0x80>
   14cc0:	ldr	r1, [fp, #12]
   14cc4:	ldr	r2, [fp, #8]
   14cc8:	mov	r3, #1
   14ccc:	str	r2, [r0]
   14cd0:	str	r1, [r0, #4]
   14cd4:	mov	r0, r6
   14cd8:	mov	r1, r8
   14cdc:	mov	r2, r4
   14ce0:	bl	13154 <table_notify@@Base>
   14ce4:	mov	r7, #0
   14ce8:	mov	r0, r7
   14cec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014cf0 <table_set_float@@Base>:
   14cf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cf4:	add	fp, sp, #24
   14cf8:	vpush	{d8}
   14cfc:	vmov.f32	s16, s0
   14d00:	mov	r4, r2
   14d04:	mov	r8, r1
   14d08:	mov	r6, r0
   14d0c:	bl	15684 <table_get_cell_ptr@@Base>
   14d10:	mov	r5, r0
   14d14:	mov	r0, r6
   14d18:	mov	r1, r4
   14d1c:	bl	13220 <table_get_col_ptr@@Base>
   14d20:	ldr	r0, [r0, #4]
   14d24:	mvn	r7, #0
   14d28:	cmp	r0, #16
   14d2c:	bne	14d70 <table_set_float@@Base+0x80>
   14d30:	ldr	r0, [r5]
   14d34:	cmp	r0, #0
   14d38:	bne	14d50 <table_set_float@@Base+0x60>
   14d3c:	mov	r0, #4
   14d40:	bl	11fc8 <malloc@plt>
   14d44:	cmp	r0, #0
   14d48:	str	r0, [r5]
   14d4c:	beq	14d70 <table_set_float@@Base+0x80>
   14d50:	vmov	r1, s16
   14d54:	mov	r2, r4
   14d58:	mov	r3, #1
   14d5c:	str	r1, [r0]
   14d60:	mov	r0, r6
   14d64:	mov	r1, r8
   14d68:	bl	13154 <table_notify@@Base>
   14d6c:	mov	r7, #0
   14d70:	mov	r0, r7
   14d74:	vpop	{d8}
   14d78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014d7c <table_set_double@@Base>:
   14d7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d80:	add	fp, sp, #24
   14d84:	vpush	{d8}
   14d88:	vorr	d8, d0, d0
   14d8c:	mov	r4, r2
   14d90:	mov	r5, r1
   14d94:	mov	r6, r0
   14d98:	bl	15684 <table_get_cell_ptr@@Base>
   14d9c:	mov	r8, r0
   14da0:	mov	r0, r6
   14da4:	mov	r1, r4
   14da8:	bl	13220 <table_get_col_ptr@@Base>
   14dac:	ldr	r0, [r0, #4]
   14db0:	mvn	r7, #0
   14db4:	cmp	r0, #17
   14db8:	bne	14df8 <table_set_double@@Base+0x7c>
   14dbc:	ldr	r0, [r8]
   14dc0:	cmp	r0, #0
   14dc4:	bne	14ddc <table_set_double@@Base+0x60>
   14dc8:	mov	r0, #8
   14dcc:	bl	11fc8 <malloc@plt>
   14dd0:	cmp	r0, #0
   14dd4:	str	r0, [r8]
   14dd8:	beq	14df8 <table_set_double@@Base+0x7c>
   14ddc:	vst1.8	{d8}, [r0]
   14de0:	mov	r0, r6
   14de4:	mov	r1, r5
   14de8:	mov	r2, r4
   14dec:	mov	r3, #1
   14df0:	bl	13154 <table_notify@@Base>
   14df4:	mov	r7, #0
   14df8:	mov	r0, r7
   14dfc:	vpop	{d8}
   14e00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e04 <table_set_ldouble@@Base>:
   14e04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e08:	add	fp, sp, #24
   14e0c:	vpush	{d8}
   14e10:	vorr	d8, d0, d0
   14e14:	mov	r4, r2
   14e18:	mov	r5, r1
   14e1c:	mov	r6, r0
   14e20:	bl	15684 <table_get_cell_ptr@@Base>
   14e24:	mov	r8, r0
   14e28:	mov	r0, r6
   14e2c:	mov	r1, r4
   14e30:	bl	13220 <table_get_col_ptr@@Base>
   14e34:	ldr	r0, [r0, #4]
   14e38:	mvn	r7, #0
   14e3c:	cmp	r0, #18
   14e40:	bne	14e80 <table_set_ldouble@@Base+0x7c>
   14e44:	ldr	r0, [r8]
   14e48:	cmp	r0, #0
   14e4c:	bne	14e64 <table_set_ldouble@@Base+0x60>
   14e50:	mov	r0, #8
   14e54:	bl	11fc8 <malloc@plt>
   14e58:	cmp	r0, #0
   14e5c:	str	r0, [r8]
   14e60:	beq	14e80 <table_set_ldouble@@Base+0x7c>
   14e64:	vst1.8	{d8}, [r0]
   14e68:	mov	r0, r6
   14e6c:	mov	r1, r5
   14e70:	mov	r2, r4
   14e74:	mov	r3, #1
   14e78:	bl	13154 <table_notify@@Base>
   14e7c:	mov	r7, #0
   14e80:	mov	r0, r7
   14e84:	vpop	{d8}
   14e88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e8c <table_set_string@@Base>:
   14e8c:	push	{fp, lr}
   14e90:	mov	fp, sp
   14e94:	sub	sp, sp, #8
   14e98:	mov	ip, #21
   14e9c:	str	ip, [sp]
   14ea0:	bl	14134 <table_set@@Base>
   14ea4:	mov	sp, fp
   14ea8:	pop	{fp, pc}

00014eac <table_set_char@@Base>:
   14eac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14eb0:	add	fp, sp, #24
   14eb4:	mov	r8, r3
   14eb8:	mov	r4, r2
   14ebc:	mov	r9, r1
   14ec0:	mov	r6, r0
   14ec4:	bl	15684 <table_get_cell_ptr@@Base>
   14ec8:	mov	r5, r0
   14ecc:	mov	r0, r6
   14ed0:	mov	r1, r4
   14ed4:	bl	13220 <table_get_col_ptr@@Base>
   14ed8:	ldr	r0, [r0, #4]
   14edc:	mvn	r7, #0
   14ee0:	cmp	r0, #19
   14ee4:	bne	14f24 <table_set_char@@Base+0x78>
   14ee8:	ldr	r0, [r5]
   14eec:	cmp	r0, #0
   14ef0:	bne	14f08 <table_set_char@@Base+0x5c>
   14ef4:	mov	r0, #1
   14ef8:	bl	11fc8 <malloc@plt>
   14efc:	cmp	r0, #0
   14f00:	str	r0, [r5]
   14f04:	beq	14f24 <table_set_char@@Base+0x78>
   14f08:	strb	r8, [r0]
   14f0c:	mov	r0, r6
   14f10:	mov	r1, r9
   14f14:	mov	r2, r4
   14f18:	mov	r3, #1
   14f1c:	bl	13154 <table_notify@@Base>
   14f20:	mov	r7, #0
   14f24:	mov	r0, r7
   14f28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f2c <table_set_uchar@@Base>:
   14f2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f30:	add	fp, sp, #24
   14f34:	mov	r8, r3
   14f38:	mov	r4, r2
   14f3c:	mov	r9, r1
   14f40:	mov	r6, r0
   14f44:	bl	15684 <table_get_cell_ptr@@Base>
   14f48:	mov	r5, r0
   14f4c:	mov	r0, r6
   14f50:	mov	r1, r4
   14f54:	bl	13220 <table_get_col_ptr@@Base>
   14f58:	ldr	r0, [r0, #4]
   14f5c:	mvn	r7, #0
   14f60:	cmp	r0, #20
   14f64:	bne	14fa4 <table_set_uchar@@Base+0x78>
   14f68:	ldr	r0, [r5]
   14f6c:	cmp	r0, #0
   14f70:	bne	14f88 <table_set_uchar@@Base+0x5c>
   14f74:	mov	r0, #1
   14f78:	bl	11fc8 <malloc@plt>
   14f7c:	cmp	r0, #0
   14f80:	str	r0, [r5]
   14f84:	beq	14fa4 <table_set_uchar@@Base+0x78>
   14f88:	strb	r8, [r0]
   14f8c:	mov	r0, r6
   14f90:	mov	r1, r9
   14f94:	mov	r2, r4
   14f98:	mov	r3, #1
   14f9c:	bl	13154 <table_notify@@Base>
   14fa0:	mov	r7, #0
   14fa4:	mov	r0, r7
   14fa8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014fac <table_set_ptr@@Base>:
   14fac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fb0:	add	fp, sp, #24
   14fb4:	mov	r8, r3
   14fb8:	mov	r4, r2
   14fbc:	mov	r5, r1
   14fc0:	mov	r6, r0
   14fc4:	bl	15684 <table_get_cell_ptr@@Base>
   14fc8:	mov	r7, r0
   14fcc:	mov	r0, r6
   14fd0:	mov	r1, r4
   14fd4:	bl	13220 <table_get_col_ptr@@Base>
   14fd8:	ldr	r1, [r0, #4]
   14fdc:	mvn	r0, #0
   14fe0:	cmp	r1, #23
   14fe4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fe8:	mov	r0, r6
   14fec:	mov	r1, r5
   14ff0:	mov	r2, r4
   14ff4:	mov	r3, #1
   14ff8:	str	r8, [r7]
   14ffc:	bl	13154 <table_notify@@Base>
   15000:	mov	r0, #0
   15004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015008 <table_serialize@@Base>:
   15008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1500c:	add	fp, sp, #28
   15010:	sub	sp, sp, #4
   15014:	mov	r5, r1
   15018:	mov	r4, r0
   1501c:	bl	13f6c <table_get_row_length@@Base>
   15020:	str	r0, [sp]
   15024:	mov	r0, r4
   15028:	bl	13248 <table_get_column_length@@Base>
   1502c:	str	r0, [r5]
   15030:	mov	r9, r0
   15034:	ldr	r0, [r4, #8]
   15038:	cmp	r9, #1
   1503c:	str	r0, [r5, #4]
   15040:	add	r5, r5, #8
   15044:	blt	15098 <table_serialize@@Base+0x90>
   15048:	mov	r6, #0
   1504c:	mov	r0, r4
   15050:	mov	r1, r6
   15054:	bl	132ac <table_get_column_name@@Base>
   15058:	mov	r8, r0
   1505c:	bl	11fec <strlen@plt>
   15060:	mov	sl, r0
   15064:	mov	r0, r4
   15068:	mov	r1, r6
   1506c:	bl	132bc <table_get_column_data_type@@Base>
   15070:	str	r0, [r5], #4
   15074:	add	r7, sl, #1
   15078:	mov	r1, r8
   1507c:	mov	r0, r5
   15080:	mov	r2, r7
   15084:	bl	1201c <strncpy@plt>
   15088:	add	r6, r6, #1
   1508c:	add	r5, r5, r7
   15090:	cmp	r9, r6
   15094:	bne	1504c <table_serialize@@Base+0x44>
   15098:	ldr	r1, [sp]
   1509c:	add	r7, r5, #8
   150a0:	str	r1, [r5]
   150a4:	cmp	r1, #1
   150a8:	ldr	r0, [r4, #24]
   150ac:	str	r0, [r5, #4]
   150b0:	blt	15224 <table_serialize@@Base+0x21c>
   150b4:	mov	r8, #0
   150b8:	cmp	r9, #1
   150bc:	blt	15214 <table_serialize@@Base+0x20c>
   150c0:	mov	r6, #0
   150c4:	mov	r0, r4
   150c8:	mov	r1, r6
   150cc:	bl	132bc <table_get_column_data_type@@Base>
   150d0:	cmp	r0, #23
   150d4:	bhi	15208 <table_serialize@@Base+0x200>
   150d8:	add	r1, pc, #4
   150dc:	ldr	r0, [r1, r0, lsl #2]
   150e0:	add	pc, r1, r0
   150e4:	andeq	r0, r0, r0, rrx
   150e8:	andeq	r0, r0, r0, rrx
   150ec:	andeq	r0, r0, ip, ror r0
   150f0:	andeq	r0, r0, ip, ror r0
   150f4:	muleq	r0, r8, r0
   150f8:	muleq	r0, r8, r0
   150fc:	andeq	r0, r0, r0, rrx
   15100:	andeq	r0, r0, r0, rrx
   15104:	strheq	r0, [r0], -r4
   15108:	strheq	r0, [r0], -r4
   1510c:	muleq	r0, r8, r0
   15110:	muleq	r0, r8, r0
   15114:	andeq	r0, r0, r0, rrx
   15118:	andeq	r0, r0, r0, rrx
   1511c:	strheq	r0, [r0], -r4
   15120:	strheq	r0, [r0], -r4
   15124:	andeq	r0, r0, r0, rrx
   15128:	ldrdeq	r0, [r0], -r4
   1512c:	ldrdeq	r0, [r0], -r4
   15130:	andeq	r0, r0, ip, ror r0
   15134:	andeq	r0, r0, ip, ror r0
   15138:	strdeq	r0, [r0], -r4
   1513c:	andeq	r0, r0, ip, ror r0
   15140:	andeq	r0, r0, r0, rrx
   15144:	mov	r0, r4
   15148:	mov	r1, r8
   1514c:	mov	r2, r6
   15150:	bl	13c98 <table_get@@Base>
   15154:	ldr	r0, [r0]
   15158:	str	r0, [r7], #4
   1515c:	b	15208 <table_serialize@@Base+0x200>
   15160:	mov	r0, r4
   15164:	mov	r1, r8
   15168:	mov	r2, r6
   1516c:	bl	13c98 <table_get@@Base>
   15170:	ldrb	r0, [r0]
   15174:	strb	r0, [r7], #1
   15178:	b	15208 <table_serialize@@Base+0x200>
   1517c:	mov	r0, r4
   15180:	mov	r1, r8
   15184:	mov	r2, r6
   15188:	bl	13c98 <table_get@@Base>
   1518c:	ldrh	r0, [r0]
   15190:	strh	r0, [r7], #2
   15194:	b	15208 <table_serialize@@Base+0x200>
   15198:	mov	r0, r4
   1519c:	mov	r1, r8
   151a0:	mov	r2, r6
   151a4:	bl	13c98 <table_get@@Base>
   151a8:	ldrd	r0, [r0]
   151ac:	strd	r0, [r7]
   151b0:	add	r7, r7, #8
   151b4:	b	15208 <table_serialize@@Base+0x200>
   151b8:	mov	r0, r4
   151bc:	mov	r1, r8
   151c0:	mov	r2, r6
   151c4:	bl	13c98 <table_get@@Base>
   151c8:	vldr	d16, [r0]
   151cc:	vstr	d16, [r7]
   151d0:	add	r7, r7, #8
   151d4:	b	15208 <table_serialize@@Base+0x200>
   151d8:	mov	r0, r4
   151dc:	mov	r1, r8
   151e0:	mov	r2, r6
   151e4:	bl	13ebc <table_get_string@@Base>
   151e8:	mov	sl, r0
   151ec:	bl	11fec <strlen@plt>
   151f0:	add	r5, r0, #1
   151f4:	mov	r0, r7
   151f8:	mov	r1, sl
   151fc:	mov	r2, r5
   15200:	bl	1201c <strncpy@plt>
   15204:	add	r7, r7, r5
   15208:	add	r6, r6, #1
   1520c:	cmp	r9, r6
   15210:	bne	150c4 <table_serialize@@Base+0xbc>
   15214:	ldr	r0, [sp]
   15218:	add	r8, r8, #1
   1521c:	cmp	r8, r0
   15220:	bne	150b8 <table_serialize@@Base+0xb0>
   15224:	ldr	r0, [r4, #32]
   15228:	str	r0, [r7]
   1522c:	ldr	r0, [r4, #48]	; 0x30
   15230:	str	r0, [r7, #4]
   15234:	ldr	r0, [r4, #32]
   15238:	cmp	r0, #1
   1523c:	blt	15280 <table_serialize@@Base+0x278>
   15240:	add	r0, r7, #8
   15244:	mov	r1, #0
   15248:	ldr	r2, [r4, #36]	; 0x24
   1524c:	ldr	r2, [r2, r1, lsl #2]
   15250:	str	r2, [r0]
   15254:	ldr	r2, [r4, #40]	; 0x28
   15258:	ldr	r2, [r2, r1, lsl #2]
   1525c:	str	r2, [r0, #4]
   15260:	ldr	r2, [r4, #44]	; 0x2c
   15264:	ldr	r2, [r2, r1, lsl #2]
   15268:	add	r1, r1, #1
   1526c:	str	r2, [r0, #8]
   15270:	add	r0, r0, #12
   15274:	ldr	r2, [r4, #32]
   15278:	cmp	r1, r2
   1527c:	blt	15248 <table_serialize@@Base+0x240>
   15280:	sub	sp, fp, #28
   15284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015288 <table_deserialize@@Base>:
   15288:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1528c:	add	fp, sp, #24
   15290:	sub	sp, sp, #8
   15294:	mov	r5, r0
   15298:	bl	1280c <table_new@@Base>
   1529c:	mov	r4, r0
   152a0:	ldr	r0, [r5, #4]
   152a4:	ldr	r9, [r5]
   152a8:	str	r0, [r4, #8]
   152ac:	cmp	r9, #1
   152b0:	ldr	r8, [r5, #8]!
   152b4:	add	r6, r5, #4
   152b8:	blt	152ec <table_deserialize@@Base+0x64>
   152bc:	mov	r7, r9
   152c0:	mov	r0, r4
   152c4:	mov	r1, r6
   152c8:	mov	r2, r8
   152cc:	bl	132d0 <table_add_column@@Base>
   152d0:	mov	r0, r6
   152d4:	bl	11fec <strlen@plt>
   152d8:	add	r5, r5, r0
   152dc:	subs	r7, r7, #1
   152e0:	ldr	r8, [r5, #5]!
   152e4:	add	r6, r5, #4
   152e8:	bne	152c0 <table_deserialize@@Base+0x38>
   152ec:	ldr	r0, [r6]
   152f0:	add	r6, r5, #8
   152f4:	cmp	r8, #1
   152f8:	str	r0, [r4, #24]
   152fc:	blt	15628 <table_deserialize@@Base+0x3a0>
   15300:	mov	r7, #0
   15304:	mov	r0, r4
   15308:	bl	13f74 <table_add_row@@Base>
   1530c:	cmp	r9, #1
   15310:	blt	1561c <table_deserialize@@Base+0x394>
   15314:	mov	r5, #0
   15318:	mov	r0, r4
   1531c:	mov	r1, r5
   15320:	bl	132bc <table_get_column_data_type@@Base>
   15324:	cmp	r0, #23
   15328:	bhi	15610 <table_deserialize@@Base+0x388>
   1532c:	add	r1, pc, #4
   15330:	ldr	r0, [r1, r0, lsl #2]
   15334:	add	pc, r1, r0
   15338:	andeq	r0, r0, r0, rrx
   1533c:	andeq	r0, r0, r8, ror r0
   15340:	muleq	r0, r0, r0
   15344:	andeq	r0, r0, r8, lsr #1
   15348:	andeq	r0, r0, r0, asr #1
   1534c:	ldrdeq	r0, [r0], -r8
   15350:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15354:	andeq	r0, r0, r8, lsl #2
   15358:	andeq	r0, r0, r0, lsr #2
   1535c:	andeq	r0, r0, r0, asr #2
   15360:	andeq	r0, r0, r0, ror #2
   15364:	andeq	r0, r0, r8, ror r1
   15368:	muleq	r0, r0, r1
   1536c:	andeq	r0, r0, r8, lsr #3
   15370:	andeq	r0, r0, r0, asr #3
   15374:	andeq	r0, r0, r0, ror #3
   15378:	andeq	r0, r0, r0, lsl #4
   1537c:	andeq	r0, r0, ip, lsl r2
   15380:	andeq	r0, r0, r8, lsr r2
   15384:	andeq	r0, r0, r4, asr r2
   15388:	andeq	r0, r0, ip, ror #4
   1538c:	andeq	r0, r0, r4, lsl #5
   15390:	andeq	r0, r0, ip, lsr #5
   15394:	andeq	r0, r0, r4, asr #5
   15398:	ldr	r3, [r6], #4
   1539c:	mov	r0, r4
   153a0:	mov	r1, r7
   153a4:	mov	r2, r5
   153a8:	bl	144d0 <table_set_int@@Base>
   153ac:	b	15610 <table_deserialize@@Base+0x388>
   153b0:	ldr	r3, [r6], #4
   153b4:	mov	r0, r4
   153b8:	mov	r1, r7
   153bc:	mov	r2, r5
   153c0:	bl	14550 <table_set_uint@@Base>
   153c4:	b	15610 <table_deserialize@@Base+0x388>
   153c8:	ldrsb	r3, [r6], #1
   153cc:	mov	r0, r4
   153d0:	mov	r1, r7
   153d4:	mov	r2, r5
   153d8:	bl	145d0 <table_set_int8@@Base>
   153dc:	b	15610 <table_deserialize@@Base+0x388>
   153e0:	ldrb	r3, [r6], #1
   153e4:	mov	r0, r4
   153e8:	mov	r1, r7
   153ec:	mov	r2, r5
   153f0:	bl	14650 <table_set_uint8@@Base>
   153f4:	b	15610 <table_deserialize@@Base+0x388>
   153f8:	ldrsh	r3, [r6], #2
   153fc:	mov	r0, r4
   15400:	mov	r1, r7
   15404:	mov	r2, r5
   15408:	bl	146d0 <table_set_int16@@Base>
   1540c:	b	15610 <table_deserialize@@Base+0x388>
   15410:	ldrh	r3, [r6], #2
   15414:	mov	r0, r4
   15418:	mov	r1, r7
   1541c:	mov	r2, r5
   15420:	bl	14750 <table_set_uint16@@Base>
   15424:	b	15610 <table_deserialize@@Base+0x388>
   15428:	ldr	r3, [r6], #4
   1542c:	mov	r0, r4
   15430:	mov	r1, r7
   15434:	mov	r2, r5
   15438:	bl	147d0 <table_set_int32@@Base>
   1543c:	b	15610 <table_deserialize@@Base+0x388>
   15440:	ldr	r3, [r6], #4
   15444:	mov	r0, r4
   15448:	mov	r1, r7
   1544c:	mov	r2, r5
   15450:	bl	14850 <table_set_uint32@@Base>
   15454:	b	15610 <table_deserialize@@Base+0x388>
   15458:	ldrd	r0, [r6]
   1545c:	mov	r2, r5
   15460:	stm	sp, {r0, r1}
   15464:	mov	r0, r4
   15468:	mov	r1, r7
   1546c:	bl	148d0 <table_set_int64@@Base>
   15470:	add	r6, r6, #8
   15474:	b	15610 <table_deserialize@@Base+0x388>
   15478:	ldrd	r0, [r6]
   1547c:	mov	r2, r5
   15480:	stm	sp, {r0, r1}
   15484:	mov	r0, r4
   15488:	mov	r1, r7
   1548c:	bl	14958 <table_set_uint64@@Base>
   15490:	add	r6, r6, #8
   15494:	b	15610 <table_deserialize@@Base+0x388>
   15498:	ldrsh	r3, [r6], #2
   1549c:	mov	r0, r4
   154a0:	mov	r1, r7
   154a4:	mov	r2, r5
   154a8:	bl	149e0 <table_set_short@@Base>
   154ac:	b	15610 <table_deserialize@@Base+0x388>
   154b0:	ldrh	r3, [r6], #2
   154b4:	mov	r0, r4
   154b8:	mov	r1, r7
   154bc:	mov	r2, r5
   154c0:	bl	14a60 <table_set_ushort@@Base>
   154c4:	b	15610 <table_deserialize@@Base+0x388>
   154c8:	ldr	r3, [r6], #4
   154cc:	mov	r0, r4
   154d0:	mov	r1, r7
   154d4:	mov	r2, r5
   154d8:	bl	14ae0 <table_set_long@@Base>
   154dc:	b	15610 <table_deserialize@@Base+0x388>
   154e0:	ldr	r3, [r6], #4
   154e4:	mov	r0, r4
   154e8:	mov	r1, r7
   154ec:	mov	r2, r5
   154f0:	bl	14b60 <table_set_ulong@@Base>
   154f4:	b	15610 <table_deserialize@@Base+0x388>
   154f8:	ldrd	r0, [r6]
   154fc:	mov	r2, r5
   15500:	stm	sp, {r0, r1}
   15504:	mov	r0, r4
   15508:	mov	r1, r7
   1550c:	bl	14be0 <table_set_llong@@Base>
   15510:	add	r6, r6, #8
   15514:	b	15610 <table_deserialize@@Base+0x388>
   15518:	ldrd	r0, [r6]
   1551c:	mov	r2, r5
   15520:	stm	sp, {r0, r1}
   15524:	mov	r0, r4
   15528:	mov	r1, r7
   1552c:	bl	14c68 <table_set_ullong@@Base>
   15530:	add	r6, r6, #8
   15534:	b	15610 <table_deserialize@@Base+0x388>
   15538:	vldr	s0, [r6]
   1553c:	mov	r0, r4
   15540:	mov	r1, r7
   15544:	mov	r2, r5
   15548:	bl	14cf0 <table_set_float@@Base>
   1554c:	add	r6, r6, #4
   15550:	b	15610 <table_deserialize@@Base+0x388>
   15554:	vldr	d0, [r6]
   15558:	mov	r0, r4
   1555c:	mov	r1, r7
   15560:	mov	r2, r5
   15564:	bl	14d7c <table_set_double@@Base>
   15568:	add	r6, r6, #8
   1556c:	b	15610 <table_deserialize@@Base+0x388>
   15570:	vldr	d0, [r6]
   15574:	mov	r0, r4
   15578:	mov	r1, r7
   1557c:	mov	r2, r5
   15580:	bl	14e04 <table_set_ldouble@@Base>
   15584:	add	r6, r6, #8
   15588:	b	15610 <table_deserialize@@Base+0x388>
   1558c:	ldrb	r3, [r6], #1
   15590:	mov	r0, r4
   15594:	mov	r1, r7
   15598:	mov	r2, r5
   1559c:	bl	14eac <table_set_char@@Base>
   155a0:	b	15610 <table_deserialize@@Base+0x388>
   155a4:	ldrb	r3, [r6], #1
   155a8:	mov	r0, r4
   155ac:	mov	r1, r7
   155b0:	mov	r2, r5
   155b4:	bl	14f2c <table_set_uchar@@Base>
   155b8:	b	15610 <table_deserialize@@Base+0x388>
   155bc:	mov	r0, r4
   155c0:	mov	r1, r7
   155c4:	mov	r2, r5
   155c8:	mov	r3, r6
   155cc:	bl	14e8c <table_set_string@@Base>
   155d0:	mov	r0, r6
   155d4:	bl	11fec <strlen@plt>
   155d8:	add	r0, r6, r0
   155dc:	add	r6, r0, #1
   155e0:	b	15610 <table_deserialize@@Base+0x388>
   155e4:	ldrb	r3, [r6], #1
   155e8:	mov	r0, r4
   155ec:	mov	r1, r7
   155f0:	mov	r2, r5
   155f4:	bl	14450 <table_set_bool@@Base>
   155f8:	b	15610 <table_deserialize@@Base+0x388>
   155fc:	ldr	r3, [r6], #4
   15600:	mov	r0, r4
   15604:	mov	r1, r7
   15608:	mov	r2, r5
   1560c:	bl	14fac <table_set_ptr@@Base>
   15610:	add	r5, r5, #1
   15614:	cmp	r9, r5
   15618:	bne	15318 <table_deserialize@@Base+0x90>
   1561c:	add	r7, r7, #1
   15620:	cmp	r7, r8
   15624:	bne	15304 <table_deserialize@@Base+0x7c>
   15628:	ldr	r5, [r6]
   1562c:	ldr	r0, [r6, #4]
   15630:	cmp	r5, #1
   15634:	str	r0, [r4, #48]	; 0x30
   15638:	blt	15658 <table_deserialize@@Base+0x3d0>
   1563c:	add	r6, r6, #8
   15640:	ldm	r6, {r1, r2, r3}
   15644:	mov	r0, r4
   15648:	bl	12ef0 <table_register_callback@@Base>
   1564c:	add	r6, r6, #12
   15650:	subs	r5, r5, #1
   15654:	bne	15640 <table_deserialize@@Base+0x3b8>
   15658:	mov	r0, r4
   1565c:	sub	sp, fp, #24
   15660:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015664 <table_cell_init@@Base>:
   15664:	push	{r4, sl, fp, lr}
   15668:	add	fp, sp, #8
   1566c:	mov	r4, r2
   15670:	bl	13f08 <table_get_row_ptr@@Base>
   15674:	ldr	r0, [r0]
   15678:	mov	r1, #0
   1567c:	str	r1, [r0, r4, lsl #2]
   15680:	pop	{r4, sl, fp, pc}

00015684 <table_get_cell_ptr@@Base>:
   15684:	push	{r4, sl, fp, lr}
   15688:	add	fp, sp, #8
   1568c:	mov	r4, r2
   15690:	bl	13f08 <table_get_row_ptr@@Base>
   15694:	ldr	r0, [r0]
   15698:	add	r0, r0, r4, lsl #2
   1569c:	pop	{r4, sl, fp, pc}

000156a0 <table_cell_destroy@@Base>:
   156a0:	push	{r4, r5, r6, sl, fp, lr}
   156a4:	add	fp, sp, #16
   156a8:	mov	r5, r1
   156ac:	mov	r1, r2
   156b0:	mov	r4, r2
   156b4:	mov	r6, r0
   156b8:	bl	132bc <table_get_column_data_type@@Base>
   156bc:	cmp	r0, #23
   156c0:	popeq	{r4, r5, r6, sl, fp, pc}
   156c4:	mov	r0, r6
   156c8:	mov	r1, r5
   156cc:	bl	13f08 <table_get_row_ptr@@Base>
   156d0:	ldr	r0, [r0]
   156d4:	ldr	r0, [r0, r4, lsl #2]
   156d8:	cmp	r0, #0
   156dc:	beq	156e8 <table_cell_destroy@@Base+0x48>
   156e0:	pop	{r4, r5, r6, sl, fp, lr}
   156e4:	b	11f98 <free@plt>
   156e8:	pop	{r4, r5, r6, sl, fp, pc}

000156ec <table_cell_to_buffer@@Base>:
   156ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   156f0:	add	fp, sp, #24
   156f4:	sub	sp, sp, #8
   156f8:	mov	r7, r1
   156fc:	mov	r1, r2
   15700:	mov	r5, r3
   15704:	mov	r6, r2
   15708:	mov	r4, r0
   1570c:	bl	132bc <table_get_column_data_type@@Base>
   15710:	cmp	r0, #23
   15714:	bhi	15a08 <table_cell_to_buffer@@Base+0x31c>
   15718:	add	r1, pc, #8
   1571c:	ldr	r8, [fp, #8]
   15720:	ldr	r0, [r1, r0, lsl #2]
   15724:	add	pc, r1, r0
   15728:	andeq	r0, r0, r0, rrx
   1572c:	andeq	r0, r0, r4, ror r0
   15730:	andeq	r0, r0, r8, lsl #1
   15734:	muleq	r0, ip, r0
   15738:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1573c:	andeq	r0, r0, r4, asr #1
   15740:	ldrdeq	r0, [r0], -r8
   15744:	andeq	r0, r0, ip, ror #1
   15748:	andeq	r0, r0, ip, lsl #2
   1574c:	andeq	r0, r0, r0, lsr #2
   15750:	andeq	r0, r0, r4, lsr r1
   15754:	andeq	r0, r0, r4, asr r1
   15758:	andeq	r0, r0, r4, ror r1
   1575c:	muleq	r0, r4, r1
   15760:			; <UNDEFINED> instruction: 0x000001b4
   15764:	ldrdeq	r0, [r0], -r4
   15768:	strdeq	r0, [r0], -r4
   1576c:	andeq	r0, r0, r8, lsl r2
   15770:	andeq	r0, r0, r8, lsr r2
   15774:	andeq	r0, r0, r4, ror #4
   15778:	andeq	r0, r0, r8, ror r2
   1577c:	muleq	r0, r8, r2
   15780:			; <UNDEFINED> instruction: 0x000002b8
   15784:	andeq	r0, r0, ip, ror #5
   15788:	mov	r0, r4
   1578c:	mov	r1, r7
   15790:	mov	r2, r6
   15794:	bl	13cc4 <table_get_int@@Base>
   15798:	b	159f0 <table_cell_to_buffer@@Base+0x304>
   1579c:	mov	r0, r4
   157a0:	mov	r1, r7
   157a4:	mov	r2, r6
   157a8:	bl	13cdc <table_get_uint@@Base>
   157ac:	b	15824 <table_cell_to_buffer@@Base+0x138>
   157b0:	mov	r0, r4
   157b4:	mov	r1, r7
   157b8:	mov	r2, r6
   157bc:	bl	13cf4 <table_get_int8@@Base>
   157c0:	b	159f0 <table_cell_to_buffer@@Base+0x304>
   157c4:	mov	r0, r4
   157c8:	mov	r1, r7
   157cc:	mov	r2, r6
   157d0:	bl	13d0c <table_get_uint8@@Base>
   157d4:	b	15824 <table_cell_to_buffer@@Base+0x138>
   157d8:	mov	r0, r4
   157dc:	mov	r1, r7
   157e0:	mov	r2, r6
   157e4:	bl	13d24 <table_get_int16@@Base>
   157e8:	b	159f0 <table_cell_to_buffer@@Base+0x304>
   157ec:	mov	r0, r4
   157f0:	mov	r1, r7
   157f4:	mov	r2, r6
   157f8:	bl	13d3c <table_get_uint16@@Base>
   157fc:	b	15824 <table_cell_to_buffer@@Base+0x138>
   15800:	mov	r0, r4
   15804:	mov	r1, r7
   15808:	mov	r2, r6
   1580c:	bl	13d54 <table_get_int32@@Base>
   15810:	b	159f0 <table_cell_to_buffer@@Base+0x304>
   15814:	mov	r0, r4
   15818:	mov	r1, r7
   1581c:	mov	r2, r6
   15820:	bl	13d6c <table_get_uint32@@Base>
   15824:	ldr	r2, [pc, #524]	; 15a38 <table_cell_to_buffer@@Base+0x34c>
   15828:	mov	r3, r0
   1582c:	add	r2, pc, r2
   15830:	b	159fc <table_cell_to_buffer@@Base+0x310>
   15834:	mov	r0, r4
   15838:	mov	r1, r7
   1583c:	mov	r2, r6
   15840:	bl	13d84 <table_get_int64@@Base>
   15844:	b	158ec <table_cell_to_buffer@@Base+0x200>
   15848:	mov	r0, r4
   1584c:	mov	r1, r7
   15850:	mov	r2, r6
   15854:	bl	13d9c <table_get_uint64@@Base>
   15858:	b	1590c <table_cell_to_buffer@@Base+0x220>
   1585c:	mov	r0, r4
   15860:	mov	r1, r7
   15864:	mov	r2, r6
   15868:	bl	13db4 <table_get_short@@Base>
   1586c:	ldr	r2, [pc, #464]	; 15a44 <table_cell_to_buffer@@Base+0x358>
   15870:	mov	r3, r0
   15874:	add	r2, pc, r2
   15878:	b	159fc <table_cell_to_buffer@@Base+0x310>
   1587c:	mov	r0, r4
   15880:	mov	r1, r7
   15884:	mov	r2, r6
   15888:	bl	13dcc <table_get_ushort@@Base>
   1588c:	ldr	r2, [pc, #436]	; 15a48 <table_cell_to_buffer@@Base+0x35c>
   15890:	mov	r3, r0
   15894:	add	r2, pc, r2
   15898:	b	159fc <table_cell_to_buffer@@Base+0x310>
   1589c:	mov	r0, r4
   158a0:	mov	r1, r7
   158a4:	mov	r2, r6
   158a8:	bl	13de4 <table_get_long@@Base>
   158ac:	ldr	r2, [pc, #408]	; 15a4c <table_cell_to_buffer@@Base+0x360>
   158b0:	mov	r3, r0
   158b4:	add	r2, pc, r2
   158b8:	b	159fc <table_cell_to_buffer@@Base+0x310>
   158bc:	mov	r0, r4
   158c0:	mov	r1, r7
   158c4:	mov	r2, r6
   158c8:	bl	13dfc <table_get_ulong@@Base>
   158cc:	ldr	r2, [pc, #380]	; 15a50 <table_cell_to_buffer@@Base+0x364>
   158d0:	mov	r3, r0
   158d4:	add	r2, pc, r2
   158d8:	b	159fc <table_cell_to_buffer@@Base+0x310>
   158dc:	mov	r0, r4
   158e0:	mov	r1, r7
   158e4:	mov	r2, r6
   158e8:	bl	13e14 <table_get_llong@@Base>
   158ec:	stm	sp, {r0, r1}
   158f0:	ldr	r2, [pc, #324]	; 15a3c <table_cell_to_buffer@@Base+0x350>
   158f4:	add	r2, pc, r2
   158f8:	b	1597c <table_cell_to_buffer@@Base+0x290>
   158fc:	mov	r0, r4
   15900:	mov	r1, r7
   15904:	mov	r2, r6
   15908:	bl	13e2c <table_get_ullong@@Base>
   1590c:	stm	sp, {r0, r1}
   15910:	ldr	r2, [pc, #296]	; 15a40 <table_cell_to_buffer@@Base+0x354>
   15914:	add	r2, pc, r2
   15918:	b	1597c <table_cell_to_buffer@@Base+0x290>
   1591c:	mov	r0, r4
   15920:	mov	r1, r7
   15924:	mov	r2, r6
   15928:	bl	13e44 <table_get_float@@Base>
   1592c:	vcvt.f64.f32	d16, s0
   15930:	vstr	d16, [sp]
   15934:	ldr	r2, [pc, #284]	; 15a58 <table_cell_to_buffer@@Base+0x36c>
   15938:	add	r2, pc, r2
   1593c:	b	1597c <table_cell_to_buffer@@Base+0x290>
   15940:	mov	r0, r4
   15944:	mov	r1, r7
   15948:	mov	r2, r6
   1594c:	bl	13e5c <table_get_double@@Base>
   15950:	vstr	d0, [sp]
   15954:	ldr	r2, [pc, #256]	; 15a5c <table_cell_to_buffer@@Base+0x370>
   15958:	add	r2, pc, r2
   1595c:	b	1597c <table_cell_to_buffer@@Base+0x290>
   15960:	mov	r0, r4
   15964:	mov	r1, r7
   15968:	mov	r2, r6
   1596c:	bl	13e74 <table_get_ldouble@@Base>
   15970:	vstr	d0, [sp]
   15974:	ldr	r2, [pc, #228]	; 15a60 <table_cell_to_buffer@@Base+0x374>
   15978:	add	r2, pc, r2
   1597c:	mov	r0, r5
   15980:	mov	r1, r8
   15984:	bl	12004 <snprintf@plt>
   15988:	b	15a08 <table_cell_to_buffer@@Base+0x31c>
   1598c:	mov	r0, r4
   15990:	mov	r1, r7
   15994:	mov	r2, r6
   15998:	bl	13e8c <table_get_char@@Base>
   1599c:	b	159b0 <table_cell_to_buffer@@Base+0x2c4>
   159a0:	mov	r0, r4
   159a4:	mov	r1, r7
   159a8:	mov	r2, r6
   159ac:	bl	13ea4 <table_get_uchar@@Base>
   159b0:	ldr	r2, [pc, #172]	; 15a64 <table_cell_to_buffer@@Base+0x378>
   159b4:	mov	r3, r0
   159b8:	add	r2, pc, r2
   159bc:	b	159fc <table_cell_to_buffer@@Base+0x310>
   159c0:	mov	r0, r4
   159c4:	mov	r1, r7
   159c8:	mov	r2, r6
   159cc:	bl	13ebc <table_get_string@@Base>
   159d0:	ldr	r2, [pc, #124]	; 15a54 <table_cell_to_buffer@@Base+0x368>
   159d4:	mov	r3, r0
   159d8:	add	r2, pc, r2
   159dc:	b	159fc <table_cell_to_buffer@@Base+0x310>
   159e0:	mov	r0, r4
   159e4:	mov	r1, r7
   159e8:	mov	r2, r6
   159ec:	bl	13cac <table_get_bool@@Base>
   159f0:	ldr	r2, [pc, #60]	; 15a34 <table_cell_to_buffer@@Base+0x348>
   159f4:	mov	r3, r0
   159f8:	add	r2, pc, r2
   159fc:	mov	r0, r5
   15a00:	mov	r1, r8
   15a04:	bl	12004 <snprintf@plt>
   15a08:	mov	r0, #0
   15a0c:	sub	sp, fp, #24
   15a10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a14:	mov	r0, r4
   15a18:	mov	r1, r7
   15a1c:	mov	r2, r6
   15a20:	bl	13ed0 <table_get_ptr@@Base>
   15a24:	ldr	r2, [pc, #60]	; 15a68 <table_cell_to_buffer@@Base+0x37c>
   15a28:	mov	r3, r0
   15a2c:	add	r2, pc, r2
   15a30:	b	159fc <table_cell_to_buffer@@Base+0x310>
   15a34:	andeq	r0, r0, fp, lsl r8
   15a38:	andeq	r0, r0, lr, lsl sl
   15a3c:	andeq	r0, r0, r9, asr r9
   15a40:	andeq	r0, r0, lr, lsr r9
   15a44:	andeq	r0, r0, r3, ror #19
   15a48:	andeq	r0, r0, r7, asr #19
   15a4c:	andeq	r0, r0, fp, lsr #19
   15a50:	andeq	r0, r0, pc, lsl #19
   15a54:	andeq	r0, r0, pc, lsl #17
   15a58:	andeq	r0, r0, r2, lsr r9
   15a5c:	andeq	r0, r0, r5, lsl r9
   15a60:	strdeq	r0, [r0], -r9
   15a64:			; <UNDEFINED> instruction: 0x000008bd
   15a68:	andeq	r0, r0, ip, asr #16

00015a6c <table_cell_from_buffer@@Base>:
   15a6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15a70:	add	fp, sp, #24
   15a74:	sub	sp, sp, #264	; 0x108
   15a78:	mov	r5, r1
   15a7c:	mov	r1, r2
   15a80:	mov	r7, r3
   15a84:	mov	r4, r2
   15a88:	mov	r6, r0
   15a8c:	bl	132bc <table_get_column_data_type@@Base>
   15a90:	cmp	r0, #23
   15a94:	bhi	1606c <table_cell_from_buffer@@Base+0x600>
   15a98:	add	r1, pc, #4
   15a9c:	ldr	r0, [r1, r0, lsl #2]
   15aa0:	add	pc, r1, r0
   15aa4:	andeq	r0, r0, r0, rrx
   15aa8:	muleq	r0, r8, r0
   15aac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15ab0:	andeq	r0, r0, r8, lsl #2
   15ab4:	andeq	r0, r0, r0, asr #2
   15ab8:	andeq	r0, r0, r8, ror r1
   15abc:			; <UNDEFINED> instruction: 0x000001b0
   15ac0:	andeq	r0, r0, r8, ror #3
   15ac4:	andeq	r0, r0, r0, lsr #4
   15ac8:	andeq	r0, r0, r0, ror #4
   15acc:	andeq	r0, r0, r0, lsr #5
   15ad0:	ldrdeq	r0, [r0], -r8
   15ad4:	andeq	r0, r0, r0, lsl r3
   15ad8:	andeq	r0, r0, r8, asr #6
   15adc:	andeq	r0, r0, r0, lsl #7
   15ae0:	andeq	r0, r0, r0, asr #7
   15ae4:	andeq	r0, r0, r0, lsl #8
   15ae8:	andeq	r0, r0, r8, lsr r4
   15aec:	andeq	r0, r0, r0, ror r4
   15af0:	andeq	r0, r0, r8, lsr #9
   15af4:	andeq	r0, r0, r0, ror #9
   15af8:	andeq	r0, r0, r8, lsl r5
   15afc:	andeq	r0, r0, r0, asr r5
   15b00:	muleq	r0, r4, r5
   15b04:	ldr	r1, [pc, #1420]	; 16098 <table_cell_from_buffer@@Base+0x62c>
   15b08:	add	r2, sp, #8
   15b0c:	mov	r0, r7
   15b10:	add	r1, pc, r1
   15b14:	bl	12010 <__isoc99_sscanf@plt>
   15b18:	mvn	r7, #0
   15b1c:	cmp	r0, #1
   15b20:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15b24:	ldr	r3, [sp, #8]
   15b28:	mov	r0, r6
   15b2c:	mov	r1, r5
   15b30:	mov	r2, r4
   15b34:	bl	144d0 <table_set_int@@Base>
   15b38:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15b3c:	ldr	r1, [pc, #1368]	; 1609c <table_cell_from_buffer@@Base+0x630>
   15b40:	add	r2, sp, #8
   15b44:	mov	r0, r7
   15b48:	add	r1, pc, r1
   15b4c:	bl	12010 <__isoc99_sscanf@plt>
   15b50:	mvn	r7, #0
   15b54:	cmp	r0, #1
   15b58:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15b5c:	ldr	r3, [sp, #8]
   15b60:	mov	r0, r6
   15b64:	mov	r1, r5
   15b68:	mov	r2, r4
   15b6c:	bl	14550 <table_set_uint@@Base>
   15b70:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15b74:	ldr	r1, [pc, #1316]	; 160a0 <table_cell_from_buffer@@Base+0x634>
   15b78:	add	r2, sp, #8
   15b7c:	mov	r0, r7
   15b80:	add	r1, pc, r1
   15b84:	bl	12010 <__isoc99_sscanf@plt>
   15b88:	mvn	r7, #0
   15b8c:	cmp	r0, #1
   15b90:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15b94:	ldrsb	r3, [sp, #8]
   15b98:	mov	r0, r6
   15b9c:	mov	r1, r5
   15ba0:	mov	r2, r4
   15ba4:	bl	145d0 <table_set_int8@@Base>
   15ba8:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15bac:	ldr	r1, [pc, #1264]	; 160a4 <table_cell_from_buffer@@Base+0x638>
   15bb0:	add	r2, sp, #8
   15bb4:	mov	r0, r7
   15bb8:	add	r1, pc, r1
   15bbc:	bl	12010 <__isoc99_sscanf@plt>
   15bc0:	mvn	r7, #0
   15bc4:	cmp	r0, #1
   15bc8:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15bcc:	ldrb	r3, [sp, #8]
   15bd0:	mov	r0, r6
   15bd4:	mov	r1, r5
   15bd8:	mov	r2, r4
   15bdc:	bl	14650 <table_set_uint8@@Base>
   15be0:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15be4:	ldr	r1, [pc, #1212]	; 160a8 <table_cell_from_buffer@@Base+0x63c>
   15be8:	add	r2, sp, #8
   15bec:	mov	r0, r7
   15bf0:	add	r1, pc, r1
   15bf4:	bl	12010 <__isoc99_sscanf@plt>
   15bf8:	mvn	r7, #0
   15bfc:	cmp	r0, #1
   15c00:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15c04:	ldrsh	r3, [sp, #8]
   15c08:	mov	r0, r6
   15c0c:	mov	r1, r5
   15c10:	mov	r2, r4
   15c14:	bl	146d0 <table_set_int16@@Base>
   15c18:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15c1c:	ldr	r1, [pc, #1160]	; 160ac <table_cell_from_buffer@@Base+0x640>
   15c20:	add	r2, sp, #8
   15c24:	mov	r0, r7
   15c28:	add	r1, pc, r1
   15c2c:	bl	12010 <__isoc99_sscanf@plt>
   15c30:	mvn	r7, #0
   15c34:	cmp	r0, #1
   15c38:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15c3c:	ldrh	r3, [sp, #8]
   15c40:	mov	r0, r6
   15c44:	mov	r1, r5
   15c48:	mov	r2, r4
   15c4c:	bl	14750 <table_set_uint16@@Base>
   15c50:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15c54:	ldr	r1, [pc, #1108]	; 160b0 <table_cell_from_buffer@@Base+0x644>
   15c58:	add	r2, sp, #8
   15c5c:	mov	r0, r7
   15c60:	add	r1, pc, r1
   15c64:	bl	12010 <__isoc99_sscanf@plt>
   15c68:	mvn	r7, #0
   15c6c:	cmp	r0, #1
   15c70:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15c74:	ldr	r3, [sp, #8]
   15c78:	mov	r0, r6
   15c7c:	mov	r1, r5
   15c80:	mov	r2, r4
   15c84:	bl	147d0 <table_set_int32@@Base>
   15c88:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15c8c:	ldr	r1, [pc, #1056]	; 160b4 <table_cell_from_buffer@@Base+0x648>
   15c90:	add	r2, sp, #8
   15c94:	mov	r0, r7
   15c98:	add	r1, pc, r1
   15c9c:	bl	12010 <__isoc99_sscanf@plt>
   15ca0:	mvn	r7, #0
   15ca4:	cmp	r0, #1
   15ca8:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15cac:	ldr	r3, [sp, #8]
   15cb0:	mov	r0, r6
   15cb4:	mov	r1, r5
   15cb8:	mov	r2, r4
   15cbc:	bl	14850 <table_set_uint32@@Base>
   15cc0:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15cc4:	ldr	r1, [pc, #1004]	; 160b8 <table_cell_from_buffer@@Base+0x64c>
   15cc8:	add	r2, sp, #8
   15ccc:	mov	r0, r7
   15cd0:	add	r1, pc, r1
   15cd4:	bl	12010 <__isoc99_sscanf@plt>
   15cd8:	mvn	r7, #0
   15cdc:	cmp	r0, #1
   15ce0:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15ce4:	ldr	r0, [sp, #8]
   15ce8:	ldr	r1, [sp, #12]
   15cec:	mov	r2, r4
   15cf0:	stm	sp, {r0, r1}
   15cf4:	mov	r0, r6
   15cf8:	mov	r1, r5
   15cfc:	bl	148d0 <table_set_int64@@Base>
   15d00:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15d04:	ldr	r1, [pc, #944]	; 160bc <table_cell_from_buffer@@Base+0x650>
   15d08:	add	r2, sp, #8
   15d0c:	mov	r0, r7
   15d10:	add	r1, pc, r1
   15d14:	bl	12010 <__isoc99_sscanf@plt>
   15d18:	mvn	r7, #0
   15d1c:	cmp	r0, #1
   15d20:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15d24:	ldr	r0, [sp, #8]
   15d28:	ldr	r1, [sp, #12]
   15d2c:	mov	r2, r4
   15d30:	stm	sp, {r0, r1}
   15d34:	mov	r0, r6
   15d38:	mov	r1, r5
   15d3c:	bl	14958 <table_set_uint64@@Base>
   15d40:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15d44:	ldr	r1, [pc, #884]	; 160c0 <table_cell_from_buffer@@Base+0x654>
   15d48:	add	r2, sp, #8
   15d4c:	mov	r0, r7
   15d50:	add	r1, pc, r1
   15d54:	bl	12010 <__isoc99_sscanf@plt>
   15d58:	mvn	r7, #0
   15d5c:	cmp	r0, #1
   15d60:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15d64:	ldrsh	r3, [sp, #8]
   15d68:	mov	r0, r6
   15d6c:	mov	r1, r5
   15d70:	mov	r2, r4
   15d74:	bl	149e0 <table_set_short@@Base>
   15d78:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15d7c:	ldr	r1, [pc, #832]	; 160c4 <table_cell_from_buffer@@Base+0x658>
   15d80:	add	r2, sp, #8
   15d84:	mov	r0, r7
   15d88:	add	r1, pc, r1
   15d8c:	bl	12010 <__isoc99_sscanf@plt>
   15d90:	mvn	r7, #0
   15d94:	cmp	r0, #1
   15d98:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15d9c:	ldrh	r3, [sp, #8]
   15da0:	mov	r0, r6
   15da4:	mov	r1, r5
   15da8:	mov	r2, r4
   15dac:	bl	14a60 <table_set_ushort@@Base>
   15db0:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15db4:	ldr	r1, [pc, #780]	; 160c8 <table_cell_from_buffer@@Base+0x65c>
   15db8:	add	r2, sp, #8
   15dbc:	mov	r0, r7
   15dc0:	add	r1, pc, r1
   15dc4:	bl	12010 <__isoc99_sscanf@plt>
   15dc8:	mvn	r7, #0
   15dcc:	cmp	r0, #1
   15dd0:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15dd4:	ldr	r3, [sp, #8]
   15dd8:	mov	r0, r6
   15ddc:	mov	r1, r5
   15de0:	mov	r2, r4
   15de4:	bl	14ae0 <table_set_long@@Base>
   15de8:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15dec:	ldr	r1, [pc, #728]	; 160cc <table_cell_from_buffer@@Base+0x660>
   15df0:	add	r2, sp, #8
   15df4:	mov	r0, r7
   15df8:	add	r1, pc, r1
   15dfc:	bl	12010 <__isoc99_sscanf@plt>
   15e00:	mvn	r7, #0
   15e04:	cmp	r0, #1
   15e08:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15e0c:	ldr	r3, [sp, #8]
   15e10:	mov	r0, r6
   15e14:	mov	r1, r5
   15e18:	mov	r2, r4
   15e1c:	bl	14b60 <table_set_ulong@@Base>
   15e20:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15e24:	ldr	r1, [pc, #676]	; 160d0 <table_cell_from_buffer@@Base+0x664>
   15e28:	add	r2, sp, #8
   15e2c:	mov	r0, r7
   15e30:	add	r1, pc, r1
   15e34:	bl	12010 <__isoc99_sscanf@plt>
   15e38:	mvn	r7, #0
   15e3c:	cmp	r0, #1
   15e40:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15e44:	ldr	r0, [sp, #8]
   15e48:	ldr	r1, [sp, #12]
   15e4c:	mov	r2, r4
   15e50:	stm	sp, {r0, r1}
   15e54:	mov	r0, r6
   15e58:	mov	r1, r5
   15e5c:	bl	14be0 <table_set_llong@@Base>
   15e60:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15e64:	ldr	r1, [pc, #616]	; 160d4 <table_cell_from_buffer@@Base+0x668>
   15e68:	add	r2, sp, #8
   15e6c:	mov	r0, r7
   15e70:	add	r1, pc, r1
   15e74:	bl	12010 <__isoc99_sscanf@plt>
   15e78:	mvn	r7, #0
   15e7c:	cmp	r0, #1
   15e80:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15e84:	ldr	r0, [sp, #8]
   15e88:	ldr	r1, [sp, #12]
   15e8c:	mov	r2, r4
   15e90:	stm	sp, {r0, r1}
   15e94:	mov	r0, r6
   15e98:	mov	r1, r5
   15e9c:	bl	14c68 <table_set_ullong@@Base>
   15ea0:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15ea4:	ldr	r1, [pc, #560]	; 160dc <table_cell_from_buffer@@Base+0x670>
   15ea8:	add	r2, sp, #8
   15eac:	mov	r0, r7
   15eb0:	add	r1, pc, r1
   15eb4:	bl	12010 <__isoc99_sscanf@plt>
   15eb8:	mvn	r7, #0
   15ebc:	cmp	r0, #1
   15ec0:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15ec4:	vldr	s0, [sp, #8]
   15ec8:	mov	r0, r6
   15ecc:	mov	r1, r5
   15ed0:	mov	r2, r4
   15ed4:	bl	14cf0 <table_set_float@@Base>
   15ed8:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15edc:	ldr	r1, [pc, #508]	; 160e0 <table_cell_from_buffer@@Base+0x674>
   15ee0:	add	r2, sp, #8
   15ee4:	mov	r0, r7
   15ee8:	add	r1, pc, r1
   15eec:	bl	12010 <__isoc99_sscanf@plt>
   15ef0:	mvn	r7, #0
   15ef4:	cmp	r0, #1
   15ef8:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15efc:	vldr	d0, [sp, #8]
   15f00:	mov	r0, r6
   15f04:	mov	r1, r5
   15f08:	mov	r2, r4
   15f0c:	bl	14d7c <table_set_double@@Base>
   15f10:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15f14:	ldr	r1, [pc, #456]	; 160e4 <table_cell_from_buffer@@Base+0x678>
   15f18:	add	r2, sp, #8
   15f1c:	mov	r0, r7
   15f20:	add	r1, pc, r1
   15f24:	bl	12010 <__isoc99_sscanf@plt>
   15f28:	mvn	r7, #0
   15f2c:	cmp	r0, #1
   15f30:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15f34:	vldr	d0, [sp, #8]
   15f38:	mov	r0, r6
   15f3c:	mov	r1, r5
   15f40:	mov	r2, r4
   15f44:	bl	14e04 <table_set_ldouble@@Base>
   15f48:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15f4c:	ldr	r1, [pc, #408]	; 160ec <table_cell_from_buffer@@Base+0x680>
   15f50:	add	r2, sp, #8
   15f54:	mov	r0, r7
   15f58:	add	r1, pc, r1
   15f5c:	bl	12010 <__isoc99_sscanf@plt>
   15f60:	mvn	r7, #0
   15f64:	cmp	r0, #1
   15f68:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15f6c:	ldrb	r3, [sp, #8]
   15f70:	mov	r0, r6
   15f74:	mov	r1, r5
   15f78:	mov	r2, r4
   15f7c:	bl	14eac <table_set_char@@Base>
   15f80:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15f84:	ldr	r1, [pc, #356]	; 160f0 <table_cell_from_buffer@@Base+0x684>
   15f88:	add	r2, sp, #8
   15f8c:	mov	r0, r7
   15f90:	add	r1, pc, r1
   15f94:	bl	12010 <__isoc99_sscanf@plt>
   15f98:	mvn	r7, #0
   15f9c:	cmp	r0, #1
   15fa0:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15fa4:	ldrb	r3, [sp, #8]
   15fa8:	mov	r0, r6
   15fac:	mov	r1, r5
   15fb0:	mov	r2, r4
   15fb4:	bl	14f2c <table_set_uchar@@Base>
   15fb8:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15fbc:	ldr	r1, [pc, #276]	; 160d8 <table_cell_from_buffer@@Base+0x66c>
   15fc0:	add	r2, sp, #8
   15fc4:	mov	r0, r7
   15fc8:	add	r1, pc, r1
   15fcc:	bl	12010 <__isoc99_sscanf@plt>
   15fd0:	mvn	r7, #0
   15fd4:	cmp	r0, #1
   15fd8:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   15fdc:	add	r3, sp, #8
   15fe0:	mov	r0, r6
   15fe4:	mov	r1, r5
   15fe8:	mov	r2, r4
   15fec:	bl	14e8c <table_set_string@@Base>
   15ff0:	b	1606c <table_cell_from_buffer@@Base+0x600>
   15ff4:	ldr	r1, [pc, #236]	; 160e8 <table_cell_from_buffer@@Base+0x67c>
   15ff8:	add	r2, sp, #8
   15ffc:	mov	r0, r7
   16000:	add	r1, pc, r1
   16004:	bl	12010 <__isoc99_sscanf@plt>
   16008:	mvn	r7, #0
   1600c:	cmp	r0, #1
   16010:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   16014:	ldr	r0, [sp, #8]
   16018:	cmp	r0, #0
   1601c:	beq	1607c <table_cell_from_buffer@@Base+0x610>
   16020:	mov	r0, r6
   16024:	mov	r1, r5
   16028:	mov	r2, r4
   1602c:	mov	r3, #1
   16030:	bl	14450 <table_set_bool@@Base>
   16034:	b	1606c <table_cell_from_buffer@@Base+0x600>
   16038:	ldr	r1, [pc, #180]	; 160f4 <table_cell_from_buffer@@Base+0x688>
   1603c:	add	r2, sp, #8
   16040:	mov	r0, r7
   16044:	add	r1, pc, r1
   16048:	bl	12010 <__isoc99_sscanf@plt>
   1604c:	mvn	r7, #0
   16050:	cmp	r0, #1
   16054:	bne	16070 <table_cell_from_buffer@@Base+0x604>
   16058:	ldr	r3, [sp, #8]
   1605c:	mov	r0, r6
   16060:	mov	r1, r5
   16064:	mov	r2, r4
   16068:	bl	14fac <table_set_ptr@@Base>
   1606c:	mov	r7, #0
   16070:	mov	r0, r7
   16074:	sub	sp, fp, #24
   16078:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1607c:	mov	r0, r6
   16080:	mov	r1, r5
   16084:	mov	r2, r4
   16088:	mov	r3, #0
   1608c:	mov	r7, #0
   16090:	bl	14450 <table_set_bool@@Base>
   16094:	b	16070 <table_cell_from_buffer@@Base+0x604>
   16098:	andeq	r0, r0, r3, lsl #14
   1609c:	andeq	r0, r0, r2, lsl #14
   160a0:	strdeq	r0, [r0], -fp
   160a4:	andeq	r0, r0, r8, asr #13
   160a8:	andeq	r0, r0, r7, ror #12
   160ac:	andeq	r0, r0, r3, lsr r6
   160b0:			; <UNDEFINED> instruction: 0x000005b3
   160b4:			; <UNDEFINED> instruction: 0x000005b2
   160b8:	andeq	r0, r0, sp, ror r5
   160bc:	andeq	r0, r0, r2, asr #10
   160c0:	andeq	r0, r0, r7, lsl #10
   160c4:	ldrdeq	r0, [r0], -r3
   160c8:	muleq	r0, pc, r4	; <UNPREDICTABLE>
   160cc:	andeq	r0, r0, fp, ror #8
   160d0:	andeq	r0, r0, sp, lsl r4
   160d4:	andeq	r0, r0, r2, ror #7
   160d8:	muleq	r0, pc, r2	; <UNPREDICTABLE>
   160dc:			; <UNDEFINED> instruction: 0x000003ba
   160e0:	andeq	r0, r0, r5, lsl #7
   160e4:	andeq	r0, r0, r1, asr r3
   160e8:	andeq	r0, r0, r3, lsl r2
   160ec:	andeq	r0, r0, sp, lsl r3
   160f0:	andeq	r0, r0, r5, ror #5
   160f4:	andeq	r0, r0, r4, lsr r2

000160f8 <table_cell_nullify@@Base>:
   160f8:	push	{r4, r5, fp, lr}
   160fc:	add	fp, sp, #8
   16100:	mov	r4, r2
   16104:	bl	13f08 <table_get_row_ptr@@Base>
   16108:	ldr	r5, [r0]
   1610c:	ldr	r0, [r5, r4, lsl #2]
   16110:	cmp	r0, #0
   16114:	beq	16124 <table_cell_nullify@@Base+0x2c>
   16118:	bl	11f98 <free@plt>
   1611c:	mov	r0, #0
   16120:	str	r0, [r5, r4, lsl #2]
   16124:	mov	r0, #0
   16128:	pop	{r4, r5, fp, pc}

0001612c <__libc_csu_init@@Base>:
   1612c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16130:	mov	r7, r0
   16134:	ldr	r6, [pc, #72]	; 16184 <__libc_csu_init@@Base+0x58>
   16138:	ldr	r5, [pc, #72]	; 16188 <__libc_csu_init@@Base+0x5c>
   1613c:	add	r6, pc, r6
   16140:	add	r5, pc, r5
   16144:	sub	r6, r6, r5
   16148:	mov	r8, r1
   1614c:	mov	r9, r2
   16150:	bl	11f60 <strcmp@plt-0x20>
   16154:	asrs	r6, r6, #2
   16158:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1615c:	mov	r4, #0
   16160:	add	r4, r4, #1
   16164:	ldr	r3, [r5], #4
   16168:	mov	r2, r9
   1616c:	mov	r1, r8
   16170:	mov	r0, r7
   16174:	blx	r3
   16178:	cmp	r6, r4
   1617c:	bne	16160 <__libc_csu_init@@Base+0x34>
   16180:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16184:	andeq	r0, r1, r8, ror #26
   16188:	andeq	r0, r1, r0, ror #26

0001618c <__libc_csu_fini@@Base>:
   1618c:	bx	lr

Disassembly of section .fini:

00016190 <.fini>:
   16190:	push	{r3, lr}
   16194:	pop	{r3, pc}
