
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013e54 <.init>:
   13e54:	push	{r3, lr}
   13e58:	bl	14200 <_start@@Base+0x3c>
   13e5c:	pop	{r3, pc}

Disassembly of section .plt:

00013e60 <calloc@plt-0x14>:
   13e60:	push	{lr}		; (str lr, [sp, #-4]!)
   13e64:	ldr	lr, [pc, #4]	; 13e70 <calloc@plt-0x4>
   13e68:	add	lr, pc, lr
   13e6c:	ldr	pc, [lr, #8]!
   13e70:	muleq	r5, r0, r1

00013e74 <calloc@plt>:
   13e74:	add	ip, pc, #0, 12
   13e78:	add	ip, ip, #356352	; 0x57000
   13e7c:	ldr	pc, [ip, #400]!	; 0x190

00013e80 <raise@plt>:
   13e80:	add	ip, pc, #0, 12
   13e84:	add	ip, ip, #356352	; 0x57000
   13e88:	ldr	pc, [ip, #392]!	; 0x188

00013e8c <strcmp@plt>:
   13e8c:	add	ip, pc, #0, 12
   13e90:	add	ip, ip, #356352	; 0x57000
   13e94:	ldr	pc, [ip, #384]!	; 0x180

00013e98 <fopen@plt>:
   13e98:	add	ip, pc, #0, 12
   13e9c:	add	ip, ip, #356352	; 0x57000
   13ea0:	ldr	pc, [ip, #376]!	; 0x178

00013ea4 <free@plt>:
   13ea4:	add	ip, pc, #0, 12
   13ea8:	add	ip, ip, #356352	; 0x57000
   13eac:	ldr	pc, [ip, #368]!	; 0x170

00013eb0 <memcpy@plt>:
   13eb0:	add	ip, pc, #0, 12
   13eb4:	add	ip, ip, #356352	; 0x57000
   13eb8:	ldr	pc, [ip, #360]!	; 0x168

00013ebc <ftell@plt>:
   13ebc:	add	ip, pc, #0, 12
   13ec0:	add	ip, ip, #356352	; 0x57000
   13ec4:	ldr	pc, [ip, #352]!	; 0x160

00013ec8 <memcmp@plt>:
   13ec8:	add	ip, pc, #0, 12
   13ecc:	add	ip, ip, #356352	; 0x57000
   13ed0:	ldr	pc, [ip, #344]!	; 0x158

00013ed4 <rewind@plt>:
   13ed4:	add	ip, pc, #0, 12
   13ed8:	add	ip, ip, #356352	; 0x57000
   13edc:	ldr	pc, [ip, #336]!	; 0x150

00013ee0 <realloc@plt>:
   13ee0:	add	ip, pc, #0, 12
   13ee4:	add	ip, ip, #356352	; 0x57000
   13ee8:	ldr	pc, [ip, #328]!	; 0x148

00013eec <fwrite@plt>:
   13eec:	add	ip, pc, #0, 12
   13ef0:	add	ip, ip, #356352	; 0x57000
   13ef4:	ldr	pc, [ip, #320]!	; 0x140

00013ef8 <fread@plt>:
   13ef8:	add	ip, pc, #0, 12
   13efc:	add	ip, ip, #356352	; 0x57000
   13f00:	ldr	pc, [ip, #312]!	; 0x138

00013f04 <puts@plt>:
   13f04:	add	ip, pc, #0, 12
   13f08:	add	ip, ip, #356352	; 0x57000
   13f0c:	ldr	pc, [ip, #304]!	; 0x130

00013f10 <malloc@plt>:
   13f10:	add	ip, pc, #0, 12
   13f14:	add	ip, ip, #356352	; 0x57000
   13f18:	ldr	pc, [ip, #296]!	; 0x128

00013f1c <__libc_start_main@plt>:
   13f1c:	add	ip, pc, #0, 12
   13f20:	add	ip, ip, #356352	; 0x57000
   13f24:	ldr	pc, [ip, #288]!	; 0x120

00013f28 <__ctype_toupper_loc@plt>:
   13f28:	add	ip, pc, #0, 12
   13f2c:	add	ip, ip, #356352	; 0x57000
   13f30:	ldr	pc, [ip, #280]!	; 0x118

00013f34 <__gmon_start__@plt>:
   13f34:	add	ip, pc, #0, 12
   13f38:	add	ip, ip, #356352	; 0x57000
   13f3c:	ldr	pc, [ip, #272]!	; 0x110

00013f40 <exit@plt>:
   13f40:	add	ip, pc, #0, 12
   13f44:	add	ip, ip, #356352	; 0x57000
   13f48:	ldr	pc, [ip, #264]!	; 0x108

00013f4c <strlen@plt>:
   13f4c:	add	ip, pc, #0, 12
   13f50:	add	ip, ip, #356352	; 0x57000
   13f54:	ldr	pc, [ip, #256]!	; 0x100

00013f58 <fprintf@plt>:
   13f58:	add	ip, pc, #0, 12
   13f5c:	add	ip, ip, #356352	; 0x57000
   13f60:	ldr	pc, [ip, #248]!	; 0xf8

00013f64 <posix_memalign@plt>:
   13f64:	add	ip, pc, #0, 12
   13f68:	add	ip, ip, #356352	; 0x57000
   13f6c:	ldr	pc, [ip, #240]!	; 0xf0

00013f70 <memset@plt>:
   13f70:	add	ip, pc, #0, 12
   13f74:	add	ip, ip, #356352	; 0x57000
   13f78:	ldr	pc, [ip, #232]!	; 0xe8

00013f7c <strncpy@plt>:
   13f7c:	add	ip, pc, #0, 12
   13f80:	add	ip, ip, #356352	; 0x57000
   13f84:	ldr	pc, [ip, #224]!	; 0xe0

00013f88 <strtod@plt>:
   13f88:	add	ip, pc, #0, 12
   13f8c:	add	ip, ip, #356352	; 0x57000
   13f90:	ldr	pc, [ip, #216]!	; 0xd8

00013f94 <memchr@plt>:
   13f94:	add	ip, pc, #0, 12
   13f98:	add	ip, ip, #356352	; 0x57000
   13f9c:	ldr	pc, [ip, #208]!	; 0xd0

00013fa0 <fclose@plt>:
   13fa0:	add	ip, pc, #0, 12
   13fa4:	add	ip, ip, #356352	; 0x57000
   13fa8:	ldr	pc, [ip, #200]!	; 0xc8

00013fac <vfprintf@plt>:
   13fac:	add	ip, pc, #0, 12
   13fb0:	add	ip, ip, #356352	; 0x57000
   13fb4:	ldr	pc, [ip, #192]!	; 0xc0

00013fb8 <fputc@plt>:
   13fb8:	add	ip, pc, #0, 12
   13fbc:	add	ip, ip, #356352	; 0x57000
   13fc0:	ldr	pc, [ip, #184]!	; 0xb8

00013fc4 <sprintf@plt>:
   13fc4:	add	ip, pc, #0, 12
   13fc8:	add	ip, ip, #356352	; 0x57000
   13fcc:	ldr	pc, [ip, #176]!	; 0xb0

00013fd0 <vsnprintf@plt>:
   13fd0:	add	ip, pc, #0, 12
   13fd4:	add	ip, ip, #356352	; 0x57000
   13fd8:	ldr	pc, [ip, #168]!	; 0xa8

00013fdc <qsort@plt>:
   13fdc:	add	ip, pc, #0, 12
   13fe0:	add	ip, ip, #356352	; 0x57000
   13fe4:	ldr	pc, [ip, #160]!	; 0xa0

00013fe8 <fseek@plt>:
   13fe8:	add	ip, pc, #0, 12
   13fec:	add	ip, ip, #356352	; 0x57000
   13ff0:	ldr	pc, [ip, #152]!	; 0x98

00013ff4 <strncmp@plt>:
   13ff4:	add	ip, pc, #0, 12
   13ff8:	add	ip, ip, #356352	; 0x57000
   13ffc:	ldr	pc, [ip, #144]!	; 0x90

00014000 <abort@plt>:
   14000:	add	ip, pc, #0, 12
   14004:	add	ip, ip, #356352	; 0x57000
   14008:	ldr	pc, [ip, #136]!	; 0x88

0001400c <__assert_fail@plt>:
   1400c:	add	ip, pc, #0, 12
   14010:	add	ip, ip, #356352	; 0x57000
   14014:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

00014018 <main@@Base>:
   14018:	ldr	r1, [pc, #376]	; 14198 <main@@Base+0x180>
   1401c:	movw	r2, #3735	; 0xe97
   14020:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14024:	mov	r4, #1
   14028:	strd	r6, [sp, #8]
   1402c:	strd	r8, [sp, #16]
   14030:	str	lr, [sp, #24]
   14034:	sub	sp, sp, #3952	; 0xf70
   14038:	sub	sp, sp, #12
   1403c:	add	r1, pc, r1
   14040:	ldr	r6, [pc, #340]	; 1419c <main@@Base+0x184>
   14044:	add	r7, sp, #224	; 0xe0
   14048:	mov	r5, sp
   1404c:	mov	r0, r7
   14050:	bl	13eb0 <memcpy@plt>
   14054:	mov	r0, r5
   14058:	bl	14304 <flatcc_init_options@@Base>
   1405c:	ldr	r1, [pc, #316]	; 141a0 <main@@Base+0x188>
   14060:	mov	r3, #0
   14064:	mov	r0, r5
   14068:	mov	r2, r3
   1406c:	str	r4, [sp, #108]	; 0x6c
   14070:	add	r6, pc, r6
   14074:	str	r4, [sp, #144]	; 0x90
   14078:	str	r4, [sp, #148]	; 0x94
   1407c:	str	r4, [sp, #152]	; 0x98
   14080:	add	r1, pc, r1
   14084:	str	r4, [sp, #156]	; 0x9c
   14088:	bl	143d4 <flatcc_create_context@@Base>
   1408c:	subs	r5, r0, #0
   14090:	beq	14170 <main@@Base+0x158>
   14094:	movw	r2, #3735	; 0xe97
   14098:	mov	r1, r7
   1409c:	bl	14454 <flatcc_parse_buffer@@Base>
   140a0:	subs	r9, r0, #0
   140a4:	ldr	r3, [pc, #248]	; 141a4 <main@@Base+0x18c>
   140a8:	bne	14150 <main@@Base+0x138>
   140ac:	ldr	r0, [pc, #244]	; 141a8 <main@@Base+0x190>
   140b0:	mov	r2, #17
   140b4:	mov	r1, r4
   140b8:	ldr	r8, [r6, r3]
   140bc:	add	r0, pc, r0
   140c0:	ldr	r3, [r8]
   140c4:	bl	13eec <fwrite@plt>
   140c8:	ldr	r0, [pc, #220]	; 141ac <main@@Base+0x194>
   140cc:	mov	r2, #31
   140d0:	mov	r1, r4
   140d4:	ldr	r3, [r8]
   140d8:	add	r0, pc, r0
   140dc:	bl	13eec <fwrite@plt>
   140e0:	mov	r0, r5
   140e4:	bl	1454c <flatcc_generate_files@@Base>
   140e8:	cmp	r0, #0
   140ec:	bne	14134 <main@@Base+0x11c>
   140f0:	ldr	r3, [pc, #184]	; 141b0 <main@@Base+0x198>
   140f4:	mov	r2, r7
   140f8:	ldr	r1, [pc, #180]	; 141b4 <main@@Base+0x19c>
   140fc:	ldr	r3, [r6, r3]
   14100:	add	r1, pc, r1
   14104:	ldr	r0, [r3]
   14108:	bl	13f58 <fprintf@plt>
   1410c:	mov	r0, r5
   14110:	bl	14684 <flatcc_destroy_context@@Base>
   14114:	mov	r0, r9
   14118:	add	sp, sp, #3952	; 0xf70
   1411c:	add	sp, sp, #12
   14120:	ldrd	r4, [sp]
   14124:	ldrd	r6, [sp, #8]
   14128:	ldrd	r8, [sp, #16]
   1412c:	add	sp, sp, #24
   14130:	pop	{pc}		; (ldr pc, [sp], #4)
   14134:	ldr	r0, [pc, #124]	; 141b8 <main@@Base+0x1a0>
   14138:	mov	r1, r4
   1413c:	mov	r2, #32
   14140:	ldr	r3, [r8]
   14144:	add	r0, pc, r0
   14148:	bl	13eec <fwrite@plt>
   1414c:	b	1410c <main@@Base+0xf4>
   14150:	ldr	r0, [pc, #100]	; 141bc <main@@Base+0x1a4>
   14154:	mov	r1, r4
   14158:	mov	r2, #20
   1415c:	ldr	r3, [r6, r3]
   14160:	add	r0, pc, r0
   14164:	ldr	r3, [r3]
   14168:	bl	13eec <fwrite@plt>
   1416c:	b	1410c <main@@Base+0xf4>
   14170:	ldr	r3, [pc, #44]	; 141a4 <main@@Base+0x18c>
   14174:	mov	r1, r4
   14178:	mov	r2, #41	; 0x29
   1417c:	mvn	r9, #0
   14180:	ldr	r0, [pc, #56]	; 141c0 <main@@Base+0x1a8>
   14184:	ldr	r3, [r6, r3]
   14188:	add	r0, pc, r0
   1418c:	ldr	r3, [r3]
   14190:	bl	13eec <fwrite@plt>
   14194:	b	14114 <main@@Base+0xfc>
   14198:	andeq	fp, r2, ip, ror #7
   1419c:	andeq	r6, r5, r8, lsl #31
   141a0:	andeq	fp, r2, r8, lsr #5
   141a4:	muleq	r0, ip, r0
   141a8:	andeq	fp, r2, r0, asr #5
   141ac:			; <UNDEFINED> instruction: 0x0002b2b8
   141b0:	andeq	r0, r0, r8, lsr #1
   141b4:	ldrdeq	fp, [r2], -r4
   141b8:	andeq	fp, r2, ip, ror #4
   141bc:	andeq	fp, r2, r4, lsl #4
   141c0:			; <UNDEFINED> instruction: 0x0002b1b0

000141c4 <_start@@Base>:
   141c4:	mov	fp, #0
   141c8:	mov	lr, #0
   141cc:	pop	{r1}		; (ldr r1, [sp], #4)
   141d0:	mov	r2, sp
   141d4:	push	{r2}		; (str r2, [sp, #-4]!)
   141d8:	push	{r0}		; (str r0, [sp, #-4]!)
   141dc:	ldr	ip, [pc, #16]	; 141f4 <_start@@Base+0x30>
   141e0:	push	{ip}		; (str ip, [sp, #-4]!)
   141e4:	ldr	r0, [pc, #12]	; 141f8 <_start@@Base+0x34>
   141e8:	ldr	r3, [pc, #12]	; 141fc <_start@@Base+0x38>
   141ec:	bl	13f1c <__libc_start_main@plt>
   141f0:	bl	14000 <abort@plt>
   141f4:	andeq	pc, r3, r0, lsr #6
   141f8:	andeq	r4, r1, r8, lsl r0
   141fc:	andeq	pc, r3, r0, asr #5
   14200:	ldr	r3, [pc, #20]	; 1421c <_start@@Base+0x58>
   14204:	ldr	r2, [pc, #20]	; 14220 <_start@@Base+0x5c>
   14208:	add	r3, pc, r3
   1420c:	ldr	r2, [r3, r2]
   14210:	cmp	r2, #0
   14214:	bxeq	lr
   14218:	b	13f34 <__gmon_start__@plt>
   1421c:	strdeq	r6, [r5], -r0
   14220:	andeq	r0, r0, r0, lsr #1
   14224:	ldr	r0, [pc, #24]	; 14244 <_start@@Base+0x80>
   14228:	ldr	r3, [pc, #24]	; 14248 <_start@@Base+0x84>
   1422c:	cmp	r3, r0
   14230:	bxeq	lr
   14234:	ldr	r3, [pc, #16]	; 1424c <_start@@Base+0x88>
   14238:	cmp	r3, #0
   1423c:	bxeq	lr
   14240:	bx	r3
   14244:	strheq	fp, [r6], -ip
   14248:	strheq	fp, [r6], -ip
   1424c:	andeq	r0, r0, r0
   14250:	ldr	r0, [pc, #36]	; 1427c <_start@@Base+0xb8>
   14254:	ldr	r1, [pc, #36]	; 14280 <_start@@Base+0xbc>
   14258:	sub	r1, r1, r0
   1425c:	asr	r1, r1, #2
   14260:	add	r1, r1, r1, lsr #31
   14264:	asrs	r1, r1, #1
   14268:	bxeq	lr
   1426c:	ldr	r3, [pc, #16]	; 14284 <_start@@Base+0xc0>
   14270:	cmp	r3, #0
   14274:	bxeq	lr
   14278:	bx	r3
   1427c:	strheq	fp, [r6], -ip
   14280:	strheq	fp, [r6], -ip
   14284:	andeq	r0, r0, r0
   14288:	push	{r4, lr}
   1428c:	ldr	r4, [pc, #24]	; 142ac <_start@@Base+0xe8>
   14290:	ldrb	r3, [r4]
   14294:	cmp	r3, #0
   14298:	popne	{r4, pc}
   1429c:	bl	14224 <_start@@Base+0x60>
   142a0:	mov	r3, #1
   142a4:	strb	r3, [r4]
   142a8:	pop	{r4, pc}
   142ac:	strheq	fp, [r6], -ip
   142b0:	b	14250 <_start@@Base+0x8c>
   142b4:	add	r0, r0, #172	; 0xac
   142b8:	mov	r2, #1
   142bc:	b	2b1fc <ptr_set_insert_item@@Base>
   142c0:	ldr	r3, [pc, #48]	; 142f8 <_start@@Base+0x134>
   142c4:	mov	r2, #34	; 0x22
   142c8:	mov	r1, #1
   142cc:	str	r4, [sp, #-8]!
   142d0:	ldr	ip, [pc, #36]	; 142fc <_start@@Base+0x138>
   142d4:	str	lr, [sp, #4]
   142d8:	ldr	r0, [pc, #32]	; 14300 <_start@@Base+0x13c>
   142dc:	add	r3, pc, r3
   142e0:	ldr	r3, [r3, ip]
   142e4:	add	r0, pc, r0
   142e8:	ldr	r3, [r3]
   142ec:	bl	13eec <fwrite@plt>
   142f0:	mov	r0, #1
   142f4:	bl	13f40 <exit@plt>
   142f8:	andeq	r6, r5, ip, lsl sp
   142fc:	muleq	r0, ip, r0
   14300:	strdeq	fp, [r2], -r8

00014304 <flatcc_init_options@@Base>:
   14304:	mov	r2, #212	; 0xd4
   14308:	mov	r1, #0
   1430c:	str	r4, [sp, #-16]!
   14310:	mov	r4, r0
   14314:	add	r0, r0, #12
   14318:	strd	r6, [sp, #4]
   1431c:	str	lr, [sp, #12]
   14320:	movw	r6, #65534	; 0xfffe
   14324:	mov	r7, #0
   14328:	bl	13f70 <memset@plt>
   1432c:	mov	r3, #100	; 0x64
   14330:	mov	r2, #65536	; 0x10000
   14334:	ldr	r0, [pc, #140]	; 143c8 <flatcc_init_options@@Base+0xc4>
   14338:	mov	ip, #2
   1433c:	ldr	r1, [pc, #136]	; 143cc <flatcc_init_options@@Base+0xc8>
   14340:	strd	r2, [r4]
   14344:	ldr	r2, [pc, #132]	; 143d0 <flatcc_init_options@@Base+0xcc>
   14348:	add	r0, pc, r0
   1434c:	str	r3, [r4, #8]
   14350:	mov	r3, #1
   14354:	str	ip, [r4, #68]	; 0x44
   14358:	mov	ip, #4
   1435c:	add	r1, pc, r1
   14360:	strd	r6, [r4, #88]	; 0x58
   14364:	ldrd	r6, [sp, #4]
   14368:	add	r2, pc, r2
   1436c:	str	r3, [r4, #16]
   14370:	str	r3, [r4, #20]
   14374:	str	r3, [r4, #24]
   14378:	str	r3, [r4, #28]
   1437c:	str	r3, [r4, #32]
   14380:	str	r3, [r4, #36]	; 0x24
   14384:	str	r3, [r4, #40]	; 0x28
   14388:	str	r3, [r4, #44]	; 0x2c
   1438c:	str	r3, [r4, #48]	; 0x30
   14390:	str	r3, [r4, #52]	; 0x34
   14394:	str	ip, [r4, #64]	; 0x40
   14398:	str	r3, [r4, #72]	; 0x48
   1439c:	str	r3, [r4, #76]	; 0x4c
   143a0:	str	r3, [r4, #84]	; 0x54
   143a4:	strd	r0, [r4, #96]	; 0x60
   143a8:	str	r2, [r4, #104]	; 0x68
   143ac:	str	r3, [r4, #136]	; 0x88
   143b0:	str	r3, [r4, #140]	; 0x8c
   143b4:	str	ip, [r4, #176]	; 0xb0
   143b8:	str	r3, [r4, #184]	; 0xb8
   143bc:	ldr	r4, [sp]
   143c0:	add	sp, sp, #12
   143c4:	pop	{pc}		; (ldr pc, [sp], #4)
   143c8:	andeq	sl, r2, r8, ror #31
   143cc:	andeq	fp, r2, r4, lsr #31
   143d0:	andeq	fp, r2, r0, lsr #31

000143d4 <flatcc_create_context@@Base>:
   143d4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   143d8:	mov	r5, r0
   143dc:	mov	r0, #560	; 0x230
   143e0:	strd	r6, [sp, #8]
   143e4:	mov	r6, r1
   143e8:	mov	r7, r3
   143ec:	strd	r8, [sp, #16]
   143f0:	mov	r8, r2
   143f4:	str	lr, [sp, #24]
   143f8:	sub	sp, sp, #12
   143fc:	bl	13f10 <malloc@plt>
   14400:	subs	r4, r0, #0
   14404:	beq	14428 <flatcc_create_context@@Base+0x54>
   14408:	mov	r9, #0
   1440c:	mov	r3, r8
   14410:	mov	r2, r6
   14414:	mov	r1, r5
   14418:	stm	sp, {r7, r9}
   1441c:	bl	2f658 <__flatcc_fb_init_parser@@Base>
   14420:	cmp	r0, r9
   14424:	bne	14444 <flatcc_create_context@@Base+0x70>
   14428:	mov	r0, r4
   1442c:	add	sp, sp, #12
   14430:	ldrd	r4, [sp]
   14434:	ldrd	r6, [sp, #8]
   14438:	ldrd	r8, [sp, #16]
   1443c:	add	sp, sp, #24
   14440:	pop	{pc}		; (ldr pc, [sp], #4)
   14444:	mov	r0, r4
   14448:	mov	r4, r9
   1444c:	bl	13ea4 <free@plt>
   14450:	b	14428 <flatcc_create_context@@Base+0x54>

00014454 <flatcc_parse_buffer@@Base>:
   14454:	ldr	r3, [r0, #128]	; 0x80
   14458:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1445c:	strd	r6, [sp, #8]
   14460:	mov	r6, r2
   14464:	mov	r2, #1
   14468:	str	r8, [sp, #16]
   1446c:	str	lr, [sp, #20]
   14470:	cmp	r3, #0
   14474:	cmpne	r3, r6
   14478:	str	r2, [r0, #140]	; 0x8c
   1447c:	movcc	r4, #1
   14480:	movcs	r4, #0
   14484:	bcc	144e8 <flatcc_parse_buffer@@Base+0x94>
   14488:	mov	r5, r0
   1448c:	mov	r7, r1
   14490:	add	r1, r0, #352	; 0x160
   14494:	add	r0, r0, #524	; 0x20c
   14498:	bl	2b1fc <ptr_set_insert_item@@Base>
   1449c:	mov	r3, r4
   144a0:	mov	r2, r6
   144a4:	mov	r1, r7
   144a8:	mov	r0, r5
   144ac:	bl	2f964 <__flatcc_fb_parse@@Base>
   144b0:	cmp	r0, #0
   144b4:	bne	144e0 <flatcc_parse_buffer@@Base+0x8c>
   144b8:	mov	r0, r5
   144bc:	bl	35cb4 <__flatcc_fb_build_schema@@Base>
   144c0:	adds	r0, r0, #0
   144c4:	movne	r0, #1
   144c8:	rsb	r0, r0, #0
   144cc:	ldrd	r4, [sp]
   144d0:	ldrd	r6, [sp, #8]
   144d4:	ldr	r8, [sp, #16]
   144d8:	add	sp, sp, #20
   144dc:	pop	{pc}		; (ldr pc, [sp], #4)
   144e0:	mvn	r0, #0
   144e4:	b	144cc <flatcc_parse_buffer@@Base+0x78>
   144e8:	ldr	r1, [pc, #12]	; 144fc <flatcc_parse_buffer@@Base+0xa8>
   144ec:	add	r1, pc, r1
   144f0:	bl	2dccc <__flatcc_fb_print_error@@Base>
   144f4:	mvn	r0, #0
   144f8:	b	144cc <flatcc_parse_buffer@@Base+0x78>
   144fc:	andeq	fp, r2, r4, lsr #28

00014500 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14500:	push	{lr}		; (str lr, [sp, #-4]!)
   14504:	sub	sp, sp, #12
   14508:	mov	ip, r0
   1450c:	add	r3, sp, #4
   14510:	add	r0, r0, #128	; 0x80
   14514:	str	r2, [sp, #4]
   14518:	mov	r2, r1
   1451c:	add	r1, ip, #352	; 0x160
   14520:	bl	2a0c8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14524:	cmp	r0, #0
   14528:	ldrne	r0, [sp, #4]
   1452c:	mvneq	r0, #0
   14530:	add	sp, sp, #12
   14534:	pop	{pc}		; (ldr pc, [sp], #4)

00014538 <flatcc_generate_binary_schema@@Base>:
   14538:	mov	r3, r0
   1453c:	mov	r2, r1
   14540:	add	r0, r0, #128	; 0x80
   14544:	add	r1, r3, #352	; 0x160
   14548:	b	2a15c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

0001454c <flatcc_generate_files@@Base>:
   1454c:	strd	r4, [sp, #-20]!	; 0xffffffec
   14550:	subs	r5, r0, #0
   14554:	strd	r6, [sp, #8]
   14558:	str	lr, [sp, #16]
   1455c:	sub	sp, sp, #236	; 0xec
   14560:	beq	14654 <flatcc_generate_files@@Base+0x108>
   14564:	ldr	r2, [r5, #108]	; 0x6c
   14568:	cmp	r2, #0
   1456c:	bne	14654 <flatcc_generate_files@@Base+0x108>
   14570:	mov	r4, r5
   14574:	b	1457c <flatcc_generate_files@@Base+0x30>
   14578:	mov	r4, r3
   1457c:	ldr	r3, [r4]
   14580:	str	r2, [r4, #4]
   14584:	mov	r2, r4
   14588:	cmp	r3, #0
   1458c:	bne	14578 <flatcc_generate_files@@Base+0x2c>
   14590:	ldr	r3, [r5, #308]	; 0x134
   14594:	add	r6, r5, #128	; 0x80
   14598:	cmp	r3, #0
   1459c:	bne	14640 <flatcc_generate_files@@Base+0xf4>
   145a0:	mov	r7, sp
   145a4:	mov	r1, r6
   145a8:	mov	r0, r7
   145ac:	bl	14f40 <__flatcc_fb_init_output_c@@Base>
   145b0:	cmp	r0, #0
   145b4:	bne	14654 <flatcc_generate_files@@Base+0x108>
   145b8:	ldr	r3, [r5, #256]	; 0x100
   145bc:	cmp	r3, #0
   145c0:	beq	1465c <flatcc_generate_files@@Base+0x110>
   145c4:	ldr	r6, [r5, #120]	; 0x78
   145c8:	cmp	r6, #0
   145cc:	beq	145ec <flatcc_generate_files@@Base+0xa0>
   145d0:	ldr	r3, [r5, #300]	; 0x12c
   145d4:	cmp	r3, #0
   145d8:	beq	14670 <flatcc_generate_files@@Base+0x124>
   145dc:	ldr	r3, [r4, #108]	; 0x6c
   145e0:	cmp	r3, #0
   145e4:	beq	1460c <flatcc_generate_files@@Base+0xc0>
   145e8:	mov	r6, #1
   145ec:	mov	r0, r7
   145f0:	bl	14ef0 <__flatcc_fb_end_output_c@@Base>
   145f4:	mov	r0, r6
   145f8:	add	sp, sp, #236	; 0xec
   145fc:	ldrd	r4, [sp]
   14600:	ldrd	r6, [sp, #8]
   14604:	add	sp, sp, #16
   14608:	pop	{pc}		; (ldr pc, [sp], #4)
   1460c:	add	r1, r4, #352	; 0x160
   14610:	mov	r0, r7
   14614:	bl	155c8 <__flatcc_fb_codegen_c@@Base>
   14618:	ldr	r4, [r4, #4]
   1461c:	clz	r3, r0
   14620:	lsr	r3, r3, #5
   14624:	cmp	r4, #0
   14628:	moveq	r3, #0
   1462c:	cmp	r3, #0
   14630:	bne	145dc <flatcc_generate_files@@Base+0x90>
   14634:	adds	r6, r0, #0
   14638:	movne	r6, #1
   1463c:	b	145ec <flatcc_generate_files@@Base+0xa0>
   14640:	add	r1, r5, #352	; 0x160
   14644:	mov	r0, r6
   14648:	bl	2a1dc <__flatcc_fb_codegen_bfbs_to_file@@Base>
   1464c:	cmp	r0, #0
   14650:	beq	145a0 <flatcc_generate_files@@Base+0x54>
   14654:	mvn	r6, #0
   14658:	b	145f4 <flatcc_generate_files@@Base+0xa8>
   1465c:	mov	r0, r7
   14660:	bl	154f0 <__flatcc_fb_codegen_common_c@@Base>
   14664:	subs	r6, r0, #0
   14668:	beq	145c4 <flatcc_generate_files@@Base+0x78>
   1466c:	b	145ec <flatcc_generate_files@@Base+0xa0>
   14670:	add	r1, r5, #352	; 0x160
   14674:	mov	r0, r7
   14678:	bl	155c8 <__flatcc_fb_codegen_c@@Base>
   1467c:	mov	r6, r0
   14680:	b	145ec <flatcc_generate_files@@Base+0xa0>

00014684 <flatcc_destroy_context@@Base>:
   14684:	strd	r4, [sp, #-16]!
   14688:	subs	r4, r0, #0
   1468c:	str	r6, [sp, #8]
   14690:	str	lr, [sp, #12]
   14694:	beq	146b4 <flatcc_destroy_context@@Base+0x30>
   14698:	ldr	r5, [r4]
   1469c:	mov	r0, r4
   146a0:	bl	32730 <__flatcc_fb_clear_parser@@Base>
   146a4:	mov	r0, r4
   146a8:	bl	13ea4 <free@plt>
   146ac:	subs	r4, r5, #0
   146b0:	bne	14698 <flatcc_destroy_context@@Base+0x14>
   146b4:	ldrd	r4, [sp]
   146b8:	ldr	r6, [sp, #8]
   146bc:	add	sp, sp, #12
   146c0:	pop	{pc}		; (ldr pc, [sp], #4)

000146c4 <flatcc_parse_file@@Base>:
   146c4:	ldr	r3, [pc, #1556]	; 14ce0 <flatcc_parse_file@@Base+0x61c>
   146c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   146cc:	mov	r4, r0
   146d0:	mov	r0, r1
   146d4:	add	r5, r4, #352	; 0x160
   146d8:	strd	r6, [sp, #8]
   146dc:	mov	r6, r1
   146e0:	strd	r8, [sp, #16]
   146e4:	strd	sl, [sp, #24]
   146e8:	add	r3, pc, r3
   146ec:	str	lr, [sp, #32]
   146f0:	sub	sp, sp, #36	; 0x24
   146f4:	str	r5, [sp, #8]
   146f8:	str	r3, [sp, #12]
   146fc:	bl	13f4c <strlen@plt>
   14700:	mov	r8, r0
   14704:	ldr	r0, [r4, #412]	; 0x19c
   14708:	mov	r1, r5
   1470c:	mov	r2, #1
   14710:	add	r0, r0, #32
   14714:	bl	2d190 <fb_schema_table_insert_item@@Base>
   14718:	cmp	r0, #0
   1471c:	beq	14744 <flatcc_parse_file@@Base+0x80>
   14720:	mov	r9, #0
   14724:	mov	r0, r9
   14728:	add	sp, sp, #36	; 0x24
   1472c:	ldrd	r4, [sp]
   14730:	ldrd	r6, [sp, #8]
   14734:	ldrd	r8, [sp, #16]
   14738:	ldrd	sl, [sp, #24]
   1473c:	add	sp, sp, #32
   14740:	pop	{pc}		; (ldr pc, [sp], #4)
   14744:	ldr	r3, [r4, #552]	; 0x228
   14748:	cmp	r3, #0
   1474c:	str	r3, [sp, #16]
   14750:	str	r3, [sp, #20]
   14754:	beq	149f0 <flatcc_parse_file@@Base+0x32c>
   14758:	ldr	r3, [r4, #336]	; 0x150
   1475c:	cmp	r3, #0
   14760:	ble	14960 <flatcc_parse_file@@Base+0x29c>
   14764:	ldr	fp, [pc, #1400]	; 14ce4 <flatcc_parse_file@@Base+0x620>
   14768:	mov	r5, #0
   1476c:	mov	sl, #1
   14770:	add	r9, sp, #28
   14774:	add	fp, pc, fp
   14778:	ldr	r3, [r4, #328]	; 0x148
   1477c:	ldr	r7, [r3, r5, lsl #2]
   14780:	mov	r0, r7
   14784:	bl	13f4c <strlen@plt>
   14788:	mov	r1, r0
   1478c:	mov	r3, r8
   14790:	str	fp, [sp]
   14794:	mov	r0, r7
   14798:	mov	r2, r6
   1479c:	str	sl, [sp, #4]
   147a0:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   147a4:	subs	r7, r0, #0
   147a8:	beq	14c20 <flatcc_parse_file@@Base+0x55c>
   147ac:	mov	r2, r9
   147b0:	ldr	r1, [r4, #128]	; 0x80
   147b4:	bl	2d824 <__flatcc_fb_read_file@@Base>
   147b8:	cmp	r0, #0
   147bc:	beq	14920 <flatcc_parse_file@@Base+0x25c>
   147c0:	mov	r1, r0
   147c4:	ldr	lr, [r4, #412]	; 0x19c
   147c8:	mov	r3, #1
   147cc:	mov	r0, r4
   147d0:	ldr	r5, [sp, #28]
   147d4:	ldr	ip, [lr, #56]	; 0x38
   147d8:	mov	r2, r5
   147dc:	add	ip, ip, r5
   147e0:	str	ip, [lr, #56]	; 0x38
   147e4:	str	r7, [r4, #548]	; 0x224
   147e8:	bl	2f964 <__flatcc_fb_parse@@Base>
   147ec:	subs	r9, r0, #0
   147f0:	bne	14720 <flatcc_parse_file@@Base+0x5c>
   147f4:	ldr	r6, [r4, #352]	; 0x160
   147f8:	cmp	r6, #0
   147fc:	beq	14a70 <flatcc_parse_file@@Base+0x3ac>
   14800:	ldr	r3, [pc, #1248]	; 14ce8 <flatcc_parse_file@@Base+0x624>
   14804:	add	sl, r4, #128	; 0x80
   14808:	str	r9, [sp, #16]
   1480c:	ldr	fp, [pc, #1240]	; 14cec <flatcc_parse_file@@Base+0x628>
   14810:	ldr	r9, [sp, #8]
   14814:	add	r3, pc, r3
   14818:	add	fp, pc, fp
   1481c:	str	r3, [sp, #12]
   14820:	b	14850 <flatcc_parse_file@@Base+0x18c>
   14824:	add	r0, r0, #172	; 0xac
   14828:	mov	r2, r9
   1482c:	mov	r1, fp
   14830:	bl	2b238 <ptr_set_visit@@Base>
   14834:	mov	r0, r7
   14838:	bl	14684 <flatcc_destroy_context@@Base>
   1483c:	mov	r0, r8
   14840:	bl	13ea4 <free@plt>
   14844:	ldr	r6, [r6]
   14848:	cmp	r6, #0
   1484c:	beq	14a70 <flatcc_parse_file@@Base+0x3ac>
   14850:	ldrd	r0, [r6, #8]
   14854:	bl	2d26c <__flatcc_fb_copy_path_n@@Base>
   14858:	subs	r8, r0, #0
   1485c:	beq	14bec <flatcc_parse_file@@Base+0x528>
   14860:	ldr	r3, [r4, #132]	; 0x84
   14864:	ldr	r5, [r4, #412]	; 0x19c
   14868:	ldr	r2, [r5, #52]	; 0x34
   1486c:	cmp	r2, r3
   14870:	cmpge	r3, #0
   14874:	bgt	14c08 <flatcc_parse_file@@Base+0x544>
   14878:	ldr	r2, [r5, #48]	; 0x30
   1487c:	ldr	r3, [r4, #136]	; 0x88
   14880:	cmp	r2, r3
   14884:	cmpge	r3, #0
   14888:	bgt	14bf0 <flatcc_parse_file@@Base+0x52c>
   1488c:	mov	r0, #560	; 0x230
   14890:	bl	13f10 <malloc@plt>
   14894:	subs	r7, r0, #0
   14898:	beq	14a50 <flatcc_parse_file@@Base+0x38c>
   1489c:	ldr	ip, [r4, #12]
   148a0:	mov	r2, r8
   148a4:	mov	r1, sl
   148a8:	str	r5, [sp, #4]
   148ac:	ldr	r3, [r4, #8]
   148b0:	str	ip, [sp]
   148b4:	bl	2f658 <__flatcc_fb_init_parser@@Base>
   148b8:	cmp	r0, #0
   148bc:	bne	14a60 <flatcc_parse_file@@Base+0x39c>
   148c0:	add	r1, r7, #352	; 0x160
   148c4:	add	r0, r5, #32
   148c8:	bl	2d1d0 <fb_schema_table_find_item@@Base>
   148cc:	cmp	r0, #0
   148d0:	bne	14824 <flatcc_parse_file@@Base+0x160>
   148d4:	ldrd	r2, [r5, #48]	; 0x30
   148d8:	mov	r1, r8
   148dc:	ldr	r0, [r4]
   148e0:	str	r7, [r4]
   148e4:	ldr	ip, [r4, #548]	; 0x224
   148e8:	add	r3, r3, #1
   148ec:	add	r2, r2, #1
   148f0:	str	r0, [r7]
   148f4:	mov	r0, r7
   148f8:	str	ip, [r7, #552]	; 0x228
   148fc:	strd	r2, [r5, #48]	; 0x30
   14900:	bl	146c4 <flatcc_parse_file@@Base>
   14904:	cmp	r0, #0
   14908:	bne	14a50 <flatcc_parse_file@@Base+0x38c>
   1490c:	add	r0, r7, #524	; 0x20c
   14910:	mov	r2, r9
   14914:	ldr	r1, [sp, #12]
   14918:	bl	2b238 <ptr_set_visit@@Base>
   1491c:	b	1483c <flatcc_parse_file@@Base+0x178>
   14920:	mov	r0, r7
   14924:	bl	13ea4 <free@plt>
   14928:	ldr	r2, [sp, #28]
   1492c:	ldr	r3, [r4, #128]	; 0x80
   14930:	cmp	r3, #0
   14934:	cmpne	r3, r2
   14938:	bcc	149d8 <flatcc_parse_file@@Base+0x314>
   1493c:	ldr	r3, [r4, #336]	; 0x150
   14940:	add	r5, r5, #1
   14944:	cmp	r3, r5
   14948:	bgt	14778 <flatcc_parse_file@@Base+0xb4>
   1494c:	ldr	r3, [sp, #16]
   14950:	cmp	r3, #0
   14954:	beq	14a34 <flatcc_parse_file@@Base+0x370>
   14958:	ldr	r3, [r4, #552]	; 0x228
   1495c:	str	r3, [sp, #16]
   14960:	ldr	r5, [sp, #16]
   14964:	mov	r0, r5
   14968:	bl	13f4c <strlen@plt>
   1496c:	mov	r1, r0
   14970:	mov	r0, r5
   14974:	bl	2d760 <__flatcc_fb_find_basename@@Base>
   14978:	ldr	ip, [pc, #880]	; 14cf0 <flatcc_parse_file@@Base+0x62c>
   1497c:	mov	r2, #1
   14980:	mov	r1, r0
   14984:	mov	r3, r8
   14988:	mov	r0, r5
   1498c:	str	r2, [sp, #4]
   14990:	mov	r2, r6
   14994:	add	ip, pc, ip
   14998:	str	ip, [sp]
   1499c:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   149a0:	subs	r7, r0, #0
   149a4:	beq	14bec <flatcc_parse_file@@Base+0x528>
   149a8:	add	r2, sp, #28
   149ac:	ldr	r1, [r4, #128]	; 0x80
   149b0:	bl	2d824 <__flatcc_fb_read_file@@Base>
   149b4:	subs	r1, r0, #0
   149b8:	bne	147c4 <flatcc_parse_file@@Base+0x100>
   149bc:	mov	r0, r7
   149c0:	bl	13ea4 <free@plt>
   149c4:	ldr	r2, [sp, #28]
   149c8:	ldr	r3, [r4, #128]	; 0x80
   149cc:	cmp	r3, #0
   149d0:	cmpne	r3, r2
   149d4:	bcs	14a34 <flatcc_parse_file@@Base+0x370>
   149d8:	ldr	r1, [pc, #788]	; 14cf4 <flatcc_parse_file@@Base+0x630>
   149dc:	mov	r0, r4
   149e0:	mvn	r9, #0
   149e4:	add	r1, pc, r1
   149e8:	bl	2dccc <__flatcc_fb_print_error@@Base>
   149ec:	b	14724 <flatcc_parse_file@@Base+0x60>
   149f0:	add	r2, sp, #28
   149f4:	mov	r0, r6
   149f8:	ldr	r1, [r4, #128]	; 0x80
   149fc:	bl	2d824 <__flatcc_fb_read_file@@Base>
   14a00:	subs	r1, r0, #0
   14a04:	bne	14bd4 <flatcc_parse_file@@Base+0x510>
   14a08:	ldr	r1, [sp, #28]
   14a0c:	ldr	r3, [r4, #412]	; 0x19c
   14a10:	ldr	r2, [r4, #128]	; 0x80
   14a14:	ldr	r3, [r3, #56]	; 0x38
   14a18:	add	r3, r3, r1
   14a1c:	cmp	r2, #0
   14a20:	cmpne	r3, r2
   14a24:	bhi	149d8 <flatcc_parse_file@@Base+0x314>
   14a28:	ldr	r3, [r4, #336]	; 0x150
   14a2c:	cmp	r3, #0
   14a30:	bgt	14764 <flatcc_parse_file@@Base+0xa0>
   14a34:	ldr	r1, [pc, #700]	; 14cf8 <flatcc_parse_file@@Base+0x634>
   14a38:	mov	r2, r6
   14a3c:	mov	r0, r4
   14a40:	mvn	r9, #0
   14a44:	add	r1, pc, r1
   14a48:	bl	2dccc <__flatcc_fb_print_error@@Base>
   14a4c:	b	14724 <flatcc_parse_file@@Base+0x60>
   14a50:	ldr	r9, [sp, #16]
   14a54:	mov	r0, r8
   14a58:	bl	13ea4 <free@plt>
   14a5c:	b	14724 <flatcc_parse_file@@Base+0x60>
   14a60:	mov	r0, r7
   14a64:	ldr	r9, [sp, #16]
   14a68:	bl	13ea4 <free@plt>
   14a6c:	b	14a54 <flatcc_parse_file@@Base+0x390>
   14a70:	mov	r2, #1
   14a74:	add	r0, r4, #524	; 0x20c
   14a78:	ldr	r1, [sp, #8]
   14a7c:	bl	2b1fc <ptr_set_insert_item@@Base>
   14a80:	mov	r0, r4
   14a84:	bl	35cb4 <__flatcc_fb_build_schema@@Base>
   14a88:	subs	r9, r0, #0
   14a8c:	bne	14720 <flatcc_parse_file@@Base+0x5c>
   14a90:	ldr	r3, [sp, #20]
   14a94:	ldr	r2, [r4, #240]	; 0xf0
   14a98:	clz	r3, r3
   14a9c:	lsr	r3, r3, #5
   14aa0:	cmp	r2, #0
   14aa4:	moveq	r3, #0
   14aa8:	cmp	r3, #0
   14aac:	beq	14720 <flatcc_parse_file@@Base+0x5c>
   14ab0:	ldr	r3, [r4, #552]	; 0x228
   14ab4:	cmp	r3, #0
   14ab8:	bne	14cc0 <flatcc_parse_file@@Base+0x5fc>
   14abc:	ldr	r5, [r4, #344]	; 0x158
   14ac0:	cmp	r5, #0
   14ac4:	beq	14ca4 <flatcc_parse_file@@Base+0x5e0>
   14ac8:	ldr	r1, [r4, #244]	; 0xf4
   14acc:	ldr	r6, [r4, #248]	; 0xf8
   14ad0:	ldr	r3, [r4, #512]	; 0x200
   14ad4:	cmp	r1, #0
   14ad8:	beq	14c90 <flatcc_parse_file@@Base+0x5cc>
   14adc:	ldr	r2, [pc, #536]	; 14cfc <flatcc_parse_file@@Base+0x638>
   14ae0:	add	r2, pc, r2
   14ae4:	mov	r0, r2
   14ae8:	cmp	r6, #0
   14aec:	beq	14c74 <flatcc_parse_file@@Base+0x5b0>
   14af0:	ldr	r5, [pc, #520]	; 14d00 <flatcc_parse_file@@Base+0x63c>
   14af4:	add	r5, pc, r5
   14af8:	mov	r7, r5
   14afc:	mov	r3, #1
   14b00:	bl	2d4e4 <__flatcc_fb_create_join_path@@Base>
   14b04:	subs	r8, r0, #0
   14b08:	beq	14bec <flatcc_parse_file@@Base+0x528>
   14b0c:	mov	r0, r5
   14b10:	mov	r2, r7
   14b14:	mov	r1, r6
   14b18:	mov	r3, #1
   14b1c:	bl	2d4e4 <__flatcc_fb_create_join_path@@Base>
   14b20:	subs	r5, r0, #0
   14b24:	beq	14bec <flatcc_parse_file@@Base+0x528>
   14b28:	bl	2d738 <__flatcc_fb_create_make_path@@Base>
   14b2c:	subs	sl, r0, #0
   14b30:	beq	14bec <flatcc_parse_file@@Base+0x528>
   14b34:	mov	r0, r5
   14b38:	bl	13ea4 <free@plt>
   14b3c:	ldr	r1, [pc, #448]	; 14d04 <flatcc_parse_file@@Base+0x640>
   14b40:	mov	r0, r8
   14b44:	add	r1, pc, r1
   14b48:	bl	13e98 <fopen@plt>
   14b4c:	subs	r6, r0, #0
   14b50:	beq	14c4c <flatcc_parse_file@@Base+0x588>
   14b54:	ldr	r1, [pc, #428]	; 14d08 <flatcc_parse_file@@Base+0x644>
   14b58:	mov	r2, sl
   14b5c:	add	r1, pc, r1
   14b60:	bl	13f58 <fprintf@plt>
   14b64:	ldr	r4, [r4]
   14b68:	cmp	r4, #0
   14b6c:	beq	14bac <flatcc_parse_file@@Base+0x4e8>
   14b70:	ldr	r7, [pc, #404]	; 14d0c <flatcc_parse_file@@Base+0x648>
   14b74:	add	r7, pc, r7
   14b78:	ldr	r0, [r4, #548]	; 0x224
   14b7c:	bl	2d738 <__flatcc_fb_create_make_path@@Base>
   14b80:	subs	r5, r0, #0
   14b84:	beq	14bec <flatcc_parse_file@@Base+0x528>
   14b88:	mov	r2, r5
   14b8c:	mov	r1, r7
   14b90:	mov	r0, r6
   14b94:	bl	13f58 <fprintf@plt>
   14b98:	ldr	r4, [r4]
   14b9c:	mov	r0, r5
   14ba0:	bl	13ea4 <free@plt>
   14ba4:	cmp	r4, #0
   14ba8:	bne	14b78 <flatcc_parse_file@@Base+0x4b4>
   14bac:	mov	r1, r6
   14bb0:	mov	r0, #10
   14bb4:	bl	13fb8 <fputc@plt>
   14bb8:	mov	r0, r8
   14bbc:	bl	13ea4 <free@plt>
   14bc0:	mov	r0, sl
   14bc4:	bl	13ea4 <free@plt>
   14bc8:	mov	r0, r6
   14bcc:	bl	13fa0 <fclose@plt>
   14bd0:	b	14724 <flatcc_parse_file@@Base+0x60>
   14bd4:	mov	r0, r6
   14bd8:	str	r1, [sp, #12]
   14bdc:	bl	2d2cc <__flatcc_fb_copy_path@@Base>
   14be0:	subs	r7, r0, #0
   14be4:	ldr	r1, [sp, #12]
   14be8:	bne	147c4 <flatcc_parse_file@@Base+0x100>
   14bec:	bl	142c0 <_start@@Base+0xfc>
   14bf0:	ldr	r1, [pc, #280]	; 14d10 <flatcc_parse_file@@Base+0x64c>
   14bf4:	mov	r0, r4
   14bf8:	ldr	r9, [sp, #16]
   14bfc:	add	r1, pc, r1
   14c00:	bl	2dccc <__flatcc_fb_print_error@@Base>
   14c04:	b	14a54 <flatcc_parse_file@@Base+0x390>
   14c08:	ldr	r1, [pc, #260]	; 14d14 <flatcc_parse_file@@Base+0x650>
   14c0c:	mov	r0, r4
   14c10:	ldr	r9, [sp, #16]
   14c14:	add	r1, pc, r1
   14c18:	bl	2dccc <__flatcc_fb_print_error@@Base>
   14c1c:	b	14a54 <flatcc_parse_file@@Base+0x390>
   14c20:	ldr	r3, [pc, #240]	; 14d18 <flatcc_parse_file@@Base+0x654>
   14c24:	mov	r2, #34	; 0x22
   14c28:	mov	r1, #1
   14c2c:	ldr	ip, [sp, #12]
   14c30:	ldr	r0, [pc, #228]	; 14d1c <flatcc_parse_file@@Base+0x658>
   14c34:	ldr	r3, [ip, r3]
   14c38:	add	r0, pc, r0
   14c3c:	ldr	r3, [r3]
   14c40:	bl	13eec <fwrite@plt>
   14c44:	mov	r0, #1
   14c48:	bl	13f40 <exit@plt>
   14c4c:	ldr	r1, [pc, #204]	; 14d20 <flatcc_parse_file@@Base+0x65c>
   14c50:	mov	r2, r8
   14c54:	mov	r0, r4
   14c58:	add	r1, pc, r1
   14c5c:	bl	2dccc <__flatcc_fb_print_error@@Base>
   14c60:	mov	r0, r8
   14c64:	bl	13ea4 <free@plt>
   14c68:	mov	r0, sl
   14c6c:	bl	13ea4 <free@plt>
   14c70:	b	14724 <flatcc_parse_file@@Base+0x60>
   14c74:	ldr	ip, [r4, #308]	; 0x134
   14c78:	cmp	ip, #0
   14c7c:	bne	14cb0 <flatcc_parse_file@@Base+0x5ec>
   14c80:	ldr	r7, [pc, #156]	; 14d24 <flatcc_parse_file@@Base+0x660>
   14c84:	mov	r6, r3
   14c88:	add	r7, pc, r7
   14c8c:	b	14afc <flatcc_parse_file@@Base+0x438>
   14c90:	ldr	r2, [pc, #144]	; 14d28 <flatcc_parse_file@@Base+0x664>
   14c94:	mov	r0, r5
   14c98:	mov	r1, r3
   14c9c:	add	r2, pc, r2
   14ca0:	b	14ae8 <flatcc_parse_file@@Base+0x424>
   14ca4:	ldr	r5, [pc, #128]	; 14d2c <flatcc_parse_file@@Base+0x668>
   14ca8:	add	r5, pc, r5
   14cac:	b	14ac8 <flatcc_parse_file@@Base+0x404>
   14cb0:	ldr	r7, [pc, #120]	; 14d30 <flatcc_parse_file@@Base+0x66c>
   14cb4:	mov	r6, r3
   14cb8:	add	r7, pc, r7
   14cbc:	b	14afc <flatcc_parse_file@@Base+0x438>
   14cc0:	ldr	r3, [pc, #108]	; 14d34 <flatcc_parse_file@@Base+0x670>
   14cc4:	mov	r2, #220	; 0xdc
   14cc8:	ldr	r1, [pc, #104]	; 14d38 <flatcc_parse_file@@Base+0x674>
   14ccc:	ldr	r0, [pc, #104]	; 14d3c <flatcc_parse_file@@Base+0x678>
   14cd0:	add	r3, pc, r3
   14cd4:	add	r1, pc, r1
   14cd8:	add	r0, pc, r0
   14cdc:	bl	1400c <__assert_fail@plt>
   14ce0:	andeq	r6, r5, r0, lsl r9
   14ce4:	andeq	r5, r3, ip, ror #29
   14ce8:			; <UNDEFINED> instruction: 0xfffffa98
   14cec:			; <UNDEFINED> instruction: 0xfffffa94
   14cf0:	andeq	r5, r3, ip, asr #25
   14cf4:	andeq	fp, r2, ip, lsr #18
   14cf8:	andeq	fp, r2, r4, lsl #18
   14cfc:	andeq	r5, r3, r0, lsl #23
   14d00:	andeq	r5, r3, ip, ror #22
   14d04:	andeq	fp, r2, r4, ror #17
   14d08:	andeq	fp, r2, r0, lsl #18
   14d0c:	andeq	fp, r2, ip, ror #17
   14d10:	muleq	r2, r4, r7
   14d14:	andeq	fp, r2, ip, asr r7
   14d18:	muleq	r0, ip, r0
   14d1c:	andeq	fp, r2, r4, lsr #13
   14d20:	ldrdeq	fp, [r2], -r4
   14d24:			; <UNDEFINED> instruction: 0x0002b6b4
   14d28:	muleq	r2, r8, r6
   14d2c:			; <UNDEFINED> instruction: 0x000359b8
   14d30:	andeq	fp, r2, r8, asr #12
   14d34:	strdeq	fp, [r2], -r0
   14d38:	ldrdeq	fp, [r2], -ip
   14d3c:	andeq	fp, r2, r8, lsr r7
   14d40:	mov	r0, r1
   14d44:	b	13ea4 <free@plt>
   14d48:	ldr	r3, [pc, #48]	; 14d80 <flatcc_parse_file@@Base+0x6bc>
   14d4c:	mov	r2, #34	; 0x22
   14d50:	mov	r1, #1
   14d54:	str	r4, [sp, #-8]!
   14d58:	ldr	ip, [pc, #36]	; 14d84 <flatcc_parse_file@@Base+0x6c0>
   14d5c:	str	lr, [sp, #4]
   14d60:	ldr	r0, [pc, #32]	; 14d88 <flatcc_parse_file@@Base+0x6c4>
   14d64:	add	r3, pc, r3
   14d68:	ldr	r3, [r3, ip]
   14d6c:	add	r0, pc, r0
   14d70:	ldr	r3, [r3]
   14d74:	bl	13eec <fwrite@plt>
   14d78:	mov	r0, #1
   14d7c:	bl	13f40 <exit@plt>
   14d80:	muleq	r5, r4, r2
   14d84:	muleq	r0, ip, r0
   14d88:	andeq	fp, r2, r0, ror r5

00014d8c <__flatcc_fb_open_output_file@@Base>:
   14d8c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14d90:	strd	r6, [sp, #8]
   14d94:	mov	r6, r0
   14d98:	strd	r8, [sp, #16]
   14d9c:	mov	r9, r3
   14da0:	mov	r8, r1
   14da4:	ldr	r3, [r0, #212]	; 0xd4
   14da8:	str	sl, [sp, #24]
   14dac:	mov	sl, r2
   14db0:	ldr	r7, [pc, #208]	; 14e88 <__flatcc_fb_open_output_file@@Base+0xfc>
   14db4:	str	lr, [sp, #28]
   14db8:	sub	sp, sp, #8
   14dbc:	ldr	r5, [r3, #216]	; 0xd8
   14dc0:	add	r7, pc, r7
   14dc4:	subs	r0, r5, #0
   14dc8:	beq	14e00 <__flatcc_fb_open_output_file@@Base+0x74>
   14dcc:	bl	13f4c <strlen@plt>
   14dd0:	ldr	r4, [r6, #204]	; 0xcc
   14dd4:	cmp	r4, #0
   14dd8:	movne	r4, #0
   14ddc:	beq	14e18 <__flatcc_fb_open_output_file@@Base+0x8c>
   14de0:	mov	r0, r4
   14de4:	add	sp, sp, #8
   14de8:	ldrd	r4, [sp]
   14dec:	ldrd	r6, [sp, #8]
   14df0:	ldrd	r8, [sp, #16]
   14df4:	ldr	sl, [sp, #24]
   14df8:	add	sp, sp, #28
   14dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14e00:	ldr	r4, [r6, #204]	; 0xcc
   14e04:	ldr	r5, [pc, #128]	; 14e8c <__flatcc_fb_open_output_file@@Base+0x100>
   14e08:	cmp	r4, #0
   14e0c:	movne	r4, #0
   14e10:	add	r5, pc, r5
   14e14:	bne	14de0 <__flatcc_fb_open_output_file@@Base+0x54>
   14e18:	mov	ip, #1
   14e1c:	mov	r1, r0
   14e20:	mov	r3, sl
   14e24:	mov	r0, r5
   14e28:	mov	r2, r8
   14e2c:	stm	sp, {r9, ip}
   14e30:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   14e34:	subs	r5, r0, #0
   14e38:	beq	14e84 <__flatcc_fb_open_output_file@@Base+0xf8>
   14e3c:	ldr	r1, [pc, #76]	; 14e90 <__flatcc_fb_open_output_file@@Base+0x104>
   14e40:	add	r1, pc, r1
   14e44:	bl	13e98 <fopen@plt>
   14e48:	cmp	r0, #0
   14e4c:	str	r0, [r6, #204]	; 0xcc
   14e50:	beq	14e60 <__flatcc_fb_open_output_file@@Base+0xd4>
   14e54:	mov	r0, r5
   14e58:	bl	13ea4 <free@plt>
   14e5c:	b	14de0 <__flatcc_fb_open_output_file@@Base+0x54>
   14e60:	ldr	r3, [pc, #44]	; 14e94 <__flatcc_fb_open_output_file@@Base+0x108>
   14e64:	mov	r2, r5
   14e68:	mvn	r4, #0
   14e6c:	ldr	r1, [pc, #36]	; 14e98 <__flatcc_fb_open_output_file@@Base+0x10c>
   14e70:	ldr	r3, [r7, r3]
   14e74:	add	r1, pc, r1
   14e78:	ldr	r0, [r3]
   14e7c:	bl	13f58 <fprintf@plt>
   14e80:	b	14e54 <__flatcc_fb_open_output_file@@Base+0xc8>
   14e84:	bl	14d48 <flatcc_parse_file@@Base+0x684>
   14e88:	andeq	r6, r5, r8, lsr r2
   14e8c:	andeq	r5, r3, r0, asr r8
   14e90:	andeq	fp, r2, r8, ror #11
   14e94:	muleq	r0, ip, r0
   14e98:	strdeq	fp, [r2], -r0

00014e9c <__flatcc_fb_close_output_file@@Base>:
   14e9c:	ldr	r3, [r0, #212]	; 0xd4
   14ea0:	ldr	r2, [r3, #124]	; 0x7c
   14ea4:	cmp	r2, #0
   14ea8:	bxne	lr
   14eac:	strd	r4, [sp, #-16]!
   14eb0:	ldr	r5, [r3, #108]	; 0x6c
   14eb4:	str	r6, [sp, #8]
   14eb8:	str	lr, [sp, #12]
   14ebc:	cmp	r5, #0
   14ec0:	bne	14ee0 <__flatcc_fb_close_output_file@@Base+0x44>
   14ec4:	ldr	r3, [r0, #204]	; 0xcc
   14ec8:	cmp	r3, #0
   14ecc:	beq	14ee0 <__flatcc_fb_close_output_file@@Base+0x44>
   14ed0:	mov	r4, r0
   14ed4:	mov	r0, r3
   14ed8:	bl	13fa0 <fclose@plt>
   14edc:	str	r5, [r4, #204]	; 0xcc
   14ee0:	ldrd	r4, [sp]
   14ee4:	ldr	r6, [sp, #8]
   14ee8:	add	sp, sp, #12
   14eec:	pop	{pc}		; (ldr pc, [sp], #4)

00014ef0 <__flatcc_fb_end_output_c@@Base>:
   14ef0:	ldr	r3, [pc, #64]	; 14f38 <__flatcc_fb_end_output_c@@Base+0x48>
   14ef4:	str	r4, [sp, #-8]!
   14ef8:	mov	r4, r0
   14efc:	ldr	r2, [pc, #56]	; 14f3c <__flatcc_fb_end_output_c@@Base+0x4c>
   14f00:	ldr	r0, [r0, #204]	; 0xcc
   14f04:	add	r3, pc, r3
   14f08:	str	lr, [sp, #4]
   14f0c:	ldr	r3, [r3, r2]
   14f10:	ldr	r3, [r3]
   14f14:	cmp	r3, r0
   14f18:	cmpne	r0, #0
   14f1c:	beq	14f24 <__flatcc_fb_end_output_c@@Base+0x34>
   14f20:	bl	13fa0 <fclose@plt>
   14f24:	mov	r3, #0
   14f28:	str	r3, [r4, #204]	; 0xcc
   14f2c:	ldr	r4, [sp]
   14f30:	add	sp, sp, #4
   14f34:	pop	{pc}		; (ldr pc, [sp], #4)
   14f38:	strdeq	r6, [r5], -r4
   14f3c:	andeq	r0, r0, r8, lsr #1

00014f40 <__flatcc_fb_init_output_c@@Base>:
   14f40:	ldr	r3, [r1, #128]	; 0x80
   14f44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14f48:	mov	r5, r1
   14f4c:	mov	r4, r0
   14f50:	strd	r6, [sp, #8]
   14f54:	strd	r8, [sp, #16]
   14f58:	ldr	r9, [pc, #504]	; 15158 <__flatcc_fb_init_output_c@@Base+0x218>
   14f5c:	cmp	r3, #0
   14f60:	strd	sl, [sp, #24]
   14f64:	str	lr, [sp, #32]
   14f68:	sub	sp, sp, #4
   14f6c:	add	r9, pc, r9
   14f70:	bne	15098 <__flatcc_fb_init_output_c@@Base+0x158>
   14f74:	ldr	r8, [r5, #216]	; 0xd8
   14f78:	ldr	sl, [pc, #476]	; 1515c <__flatcc_fb_init_output_c@@Base+0x21c>
   14f7c:	cmp	r8, #0
   14f80:	add	sl, pc, sl
   14f84:	beq	150ac <__flatcc_fb_init_output_c@@Base+0x16c>
   14f88:	mov	r2, #232	; 0xe8
   14f8c:	mov	r1, #0
   14f90:	mov	r0, r4
   14f94:	bl	13f70 <memset@plt>
   14f98:	ldr	r7, [r5, #196]	; 0xc4
   14f9c:	str	r5, [r4, #212]	; 0xd4
   14fa0:	cmp	r7, #0
   14fa4:	beq	150e8 <__flatcc_fb_init_output_c@@Base+0x1a8>
   14fa8:	mov	r0, r7
   14fac:	bl	13f4c <strlen@plt>
   14fb0:	cmp	r0, #100	; 0x64
   14fb4:	mov	r6, r0
   14fb8:	bhi	15130 <__flatcc_fb_init_output_c@@Base+0x1f0>
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, #100	; 0x64
   14fc4:	mov	r0, r4
   14fc8:	bl	13f7c <strncpy@plt>
   14fcc:	mov	r3, #0
   14fd0:	cmp	r6, r3
   14fd4:	strb	r3, [r4, #100]	; 0x64
   14fd8:	bne	150d0 <__flatcc_fb_init_output_c@@Base+0x190>
   14fdc:	mov	r7, r4
   14fe0:	ldrb	fp, [r7], #102	; 0x66
   14fe4:	cmp	fp, #0
   14fe8:	beq	1500c <__flatcc_fb_init_output_c@@Base+0xcc>
   14fec:	bl	13f28 <__ctype_toupper_loc@plt>
   14ff0:	mov	r3, r4
   14ff4:	ldr	r2, [r0]
   14ff8:	ldr	r2, [r2, fp, lsl #2]
   14ffc:	strb	r2, [r7], #1
   15000:	ldrb	fp, [r3, #1]!
   15004:	cmp	fp, #0
   15008:	bne	14ff4 <__flatcc_fb_init_output_c@@Base+0xb4>
   1500c:	mov	r3, #0
   15010:	add	r6, r4, r6
   15014:	strb	r3, [r7]
   15018:	strb	r3, [r6, #102]	; 0x66
   1501c:	ldr	r6, [r5, #108]	; 0x6c
   15020:	ldr	r2, [r5, #176]	; 0xb0
   15024:	cmp	r6, r3
   15028:	str	r2, [r4, #224]	; 0xe0
   1502c:	bne	150b8 <__flatcc_fb_init_output_c@@Base+0x178>
   15030:	ldr	r3, [r4, #212]	; 0xd4
   15034:	ldr	r1, [r3, #124]	; 0x7c
   15038:	cmp	r1, #0
   1503c:	beq	15078 <__flatcc_fb_init_output_c@@Base+0x138>
   15040:	ldr	r2, [pc, #280]	; 15160 <__flatcc_fb_init_output_c@@Base+0x220>
   15044:	mov	r0, r8
   15048:	mov	r3, #1
   1504c:	add	r2, pc, r2
   15050:	bl	2d4e4 <__flatcc_fb_create_join_path@@Base>
   15054:	subs	r5, r0, #0
   15058:	beq	15154 <__flatcc_fb_init_output_c@@Base+0x214>
   1505c:	mov	r1, sl
   15060:	bl	13e98 <fopen@plt>
   15064:	cmp	r0, #0
   15068:	str	r0, [r4, #204]	; 0xcc
   1506c:	beq	1510c <__flatcc_fb_init_output_c@@Base+0x1cc>
   15070:	mov	r0, r5
   15074:	bl	13ea4 <free@plt>
   15078:	mov	r0, r6
   1507c:	add	sp, sp, #4
   15080:	ldrd	r4, [sp]
   15084:	ldrd	r6, [sp, #8]
   15088:	ldrd	r8, [sp, #16]
   1508c:	ldrd	sl, [sp, #24]
   15090:	add	sp, sp, #32
   15094:	pop	{pc}		; (ldr pc, [sp], #4)
   15098:	ldr	r8, [r5, #216]	; 0xd8
   1509c:	ldr	sl, [pc, #192]	; 15164 <__flatcc_fb_init_output_c@@Base+0x224>
   150a0:	cmp	r8, #0
   150a4:	add	sl, pc, sl
   150a8:	bne	14f88 <__flatcc_fb_init_output_c@@Base+0x48>
   150ac:	ldr	r8, [pc, #180]	; 15168 <__flatcc_fb_init_output_c@@Base+0x228>
   150b0:	add	r8, pc, r8
   150b4:	b	14f88 <__flatcc_fb_init_output_c@@Base+0x48>
   150b8:	ldr	r2, [pc, #172]	; 1516c <__flatcc_fb_init_output_c@@Base+0x22c>
   150bc:	mov	r6, r3
   150c0:	ldr	r3, [r9, r2]
   150c4:	ldr	r3, [r3]
   150c8:	str	r3, [r4, #204]	; 0xcc
   150cc:	b	15078 <__flatcc_fb_init_output_c@@Base+0x138>
   150d0:	add	r1, r6, #1
   150d4:	mov	r2, #95	; 0x5f
   150d8:	mov	r3, #0
   150dc:	strb	r2, [r4, r6]
   150e0:	strb	r3, [r4, r1]
   150e4:	b	14fdc <__flatcc_fb_init_output_c@@Base+0x9c>
   150e8:	ldr	r1, [pc, #128]	; 15170 <__flatcc_fb_init_output_c@@Base+0x230>
   150ec:	mov	r2, #100	; 0x64
   150f0:	mov	r0, r4
   150f4:	mov	r6, #11
   150f8:	add	r1, pc, r1
   150fc:	bl	13f7c <strncpy@plt>
   15100:	mov	r1, #12
   15104:	strb	r7, [r4, #100]	; 0x64
   15108:	b	150d4 <__flatcc_fb_init_output_c@@Base+0x194>
   1510c:	ldr	r3, [pc, #96]	; 15174 <__flatcc_fb_init_output_c@@Base+0x234>
   15110:	mov	r2, r5
   15114:	mvn	r6, #0
   15118:	ldr	r1, [pc, #88]	; 15178 <__flatcc_fb_init_output_c@@Base+0x238>
   1511c:	ldr	r3, [r9, r3]
   15120:	add	r1, pc, r1
   15124:	ldr	r0, [r3]
   15128:	bl	13f58 <fprintf@plt>
   1512c:	b	15070 <__flatcc_fb_init_output_c@@Base+0x130>
   15130:	ldr	r3, [pc, #60]	; 15174 <__flatcc_fb_init_output_c@@Base+0x234>
   15134:	mov	r2, #100	; 0x64
   15138:	mvn	r6, #0
   1513c:	ldr	r1, [pc, #56]	; 1517c <__flatcc_fb_init_output_c@@Base+0x23c>
   15140:	ldr	r3, [r9, r3]
   15144:	add	r1, pc, r1
   15148:	ldr	r0, [r3]
   1514c:	bl	13f58 <fprintf@plt>
   15150:	b	15078 <__flatcc_fb_init_output_c@@Base+0x138>
   15154:	bl	14d48 <flatcc_parse_file@@Base+0x684>
   15158:	andeq	r6, r5, ip, lsl #1
   1515c:	andeq	fp, r2, r8, lsr #9
   15160:	andeq	r5, r3, r4, lsl r6
   15164:	andeq	fp, r2, r4, ror #7
   15168:			; <UNDEFINED> instruction: 0x000355b0
   1516c:	andeq	r0, r0, r8, lsr #1
   15170:	andeq	fp, r2, ip, asr #7
   15174:	muleq	r0, ip, r0
   15178:	andeq	fp, r2, r4, asr #6
   1517c:	andeq	fp, r2, r8, asr #6

00015180 <__flatcc_fb_gen_c_includes@@Base>:
   15180:	ldr	r3, [pc, #404]	; 1531c <__flatcc_fb_gen_c_includes@@Base+0x19c>
   15184:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15188:	strd	r6, [sp, #8]
   1518c:	mov	r6, r0
   15190:	strd	r8, [sp, #16]
   15194:	mov	r9, r1
   15198:	mov	r1, #0
   1519c:	strd	sl, [sp, #24]
   151a0:	mov	sl, r2
   151a4:	mov	r2, #0
   151a8:	add	r3, pc, r3
   151ac:	str	lr, [sp, #32]
   151b0:	sub	sp, sp, #36	; 0x24
   151b4:	add	r7, sp, #16
   151b8:	str	r3, [sp, #12]
   151bc:	ldr	r3, [r0, #208]	; 0xd0
   151c0:	mov	r0, #0
   151c4:	ldr	r4, [r3]
   151c8:	strd	r0, [sp, #16]
   151cc:	ldr	r0, [r3, #164]	; 0xa4
   151d0:	mov	r3, #0
   151d4:	strd	r2, [r7, #8]
   151d8:	bl	2d2cc <__flatcc_fb_copy_path@@Base>
   151dc:	mov	r1, r0
   151e0:	mov	r2, #1
   151e4:	mov	r0, r7
   151e8:	bl	2aa8c <str_set_insert_item@@Base>
   151ec:	cmp	r4, #0
   151f0:	beq	15284 <__flatcc_fb_gen_c_includes@@Base+0x104>
   151f4:	ldr	r3, [pc, #292]	; 15320 <__flatcc_fb_gen_c_includes@@Base+0x1a0>
   151f8:	add	r3, pc, r3
   151fc:	str	r3, [sp, #8]
   15200:	ldr	r3, [r6, #212]	; 0xd4
   15204:	ldrd	r0, [r4, #8]
   15208:	ldr	r2, [r3, #96]	; 0x60
   1520c:	bl	2d7b8 <__flatcc_fb_create_basename@@Base>
   15210:	subs	r5, r0, #0
   15214:	beq	152d8 <__flatcc_fb_gen_c_includes@@Base+0x158>
   15218:	ldr	r4, [r4]
   1521c:	bl	2d2cc <__flatcc_fb_copy_path@@Base>
   15220:	subs	fp, r0, #0
   15224:	beq	15304 <__flatcc_fb_gen_c_includes@@Base+0x184>
   15228:	ldrb	r8, [fp]
   1522c:	cmp	r8, #0
   15230:	beq	15254 <__flatcc_fb_gen_c_includes@@Base+0xd4>
   15234:	bl	13f28 <__ctype_toupper_loc@plt>
   15238:	mov	r1, fp
   1523c:	ldr	ip, [r0]
   15240:	ldr	r2, [ip, r8, lsl #2]
   15244:	strb	r2, [r1]
   15248:	ldrb	r8, [r1, #1]!
   1524c:	cmp	r8, #0
   15250:	bne	1523c <__flatcc_fb_gen_c_includes@@Base+0xbc>
   15254:	mov	r2, #1
   15258:	mov	r1, fp
   1525c:	mov	r0, r7
   15260:	bl	2aa8c <str_set_insert_item@@Base>
   15264:	cmp	r0, #0
   15268:	beq	152b4 <__flatcc_fb_gen_c_includes@@Base+0x134>
   1526c:	mov	r0, fp
   15270:	bl	13ea4 <free@plt>
   15274:	mov	r0, r5
   15278:	bl	13ea4 <free@plt>
   1527c:	cmp	r4, #0
   15280:	bne	15200 <__flatcc_fb_gen_c_includes@@Base+0x80>
   15284:	ldr	r1, [pc, #152]	; 15324 <__flatcc_fb_gen_c_includes@@Base+0x1a4>
   15288:	mov	r0, r7
   1528c:	mov	r2, #0
   15290:	add	r1, pc, r1
   15294:	bl	2a984 <str_set_destroy@@Base>
   15298:	add	sp, sp, #36	; 0x24
   1529c:	ldrd	r4, [sp]
   152a0:	ldrd	r6, [sp, #8]
   152a4:	ldrd	r8, [sp, #16]
   152a8:	ldrd	sl, [sp, #24]
   152ac:	add	sp, sp, #32
   152b0:	pop	{pc}		; (ldr pc, [sp], #4)
   152b4:	mov	r2, fp
   152b8:	mov	r3, sl
   152bc:	stm	sp, {r5, r9}
   152c0:	ldr	r1, [sp, #8]
   152c4:	ldr	r0, [r6, #204]	; 0xcc
   152c8:	bl	13f58 <fprintf@plt>
   152cc:	mov	r0, r5
   152d0:	bl	13ea4 <free@plt>
   152d4:	b	1527c <__flatcc_fb_gen_c_includes@@Base+0xfc>
   152d8:	ldr	r0, [pc, #72]	; 15328 <__flatcc_fb_gen_c_includes@@Base+0x1a8>
   152dc:	mov	r2, #34	; 0x22
   152e0:	mov	r1, #1
   152e4:	ldr	r3, [pc, #64]	; 1532c <__flatcc_fb_gen_c_includes@@Base+0x1ac>
   152e8:	add	r0, pc, r0
   152ec:	ldr	ip, [sp, #12]
   152f0:	ldr	r3, [ip, r3]
   152f4:	ldr	r3, [r3]
   152f8:	bl	13eec <fwrite@plt>
   152fc:	mov	r0, #1
   15300:	bl	13f40 <exit@plt>
   15304:	ldr	r0, [pc, #36]	; 15330 <__flatcc_fb_gen_c_includes@@Base+0x1b0>
   15308:	mov	r2, #34	; 0x22
   1530c:	mov	r1, #1
   15310:	ldr	r3, [pc, #20]	; 1532c <__flatcc_fb_gen_c_includes@@Base+0x1ac>
   15314:	add	r0, pc, r0
   15318:	b	152ec <__flatcc_fb_gen_c_includes@@Base+0x16c>
   1531c:	andeq	r5, r5, r0, asr lr
   15320:	ldrdeq	fp, [r2], -r8
   15324:			; <UNDEFINED> instruction: 0xfffffaa8
   15328:	strdeq	sl, [r2], -r4
   1532c:	muleq	r0, ip, r0
   15330:	andeq	sl, r2, r8, asr #31

00015334 <__flatcc_fb_copy_scope@@Base>:
   15334:	ldr	r3, [r0]
   15338:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1533c:	ldr	r4, [r0, #24]
   15340:	strd	r6, [sp, #8]
   15344:	str	r8, [sp, #16]
   15348:	cmp	r3, #0
   1534c:	str	lr, [sp, #20]
   15350:	mov	ip, r4
   15354:	mov	r6, r4
   15358:	beq	15378 <__flatcc_fb_copy_scope@@Base+0x44>
   1535c:	ldr	r2, [r3, #4]
   15360:	ldr	r3, [r3]
   15364:	ldr	r2, [r2, #4]
   15368:	cmp	r3, #0
   1536c:	add	r2, r2, #1
   15370:	add	ip, ip, r2
   15374:	bne	1535c <__flatcc_fb_copy_scope@@Base+0x28>
   15378:	cmp	ip, #101	; 0x65
   1537c:	movhi	r3, #0
   15380:	mvnhi	r4, #0
   15384:	strbhi	r3, [r1]
   15388:	bhi	153ec <__flatcc_fb_copy_scope@@Base+0xb8>
   1538c:	mov	r5, r0
   15390:	mov	r7, r1
   15394:	mov	r0, r1
   15398:	mov	r2, r4
   1539c:	ldr	r1, [r5, #20]
   153a0:	bl	13eb0 <memcpy@plt>
   153a4:	ldr	r5, [r5]
   153a8:	cmp	r5, #0
   153ac:	beq	153e4 <__flatcc_fb_copy_scope@@Base+0xb0>
   153b0:	mov	r8, #95	; 0x5f
   153b4:	ldr	r3, [r5, #4]
   153b8:	add	r0, r7, r6
   153bc:	ldm	r3, {r1, r4}
   153c0:	mov	r2, r4
   153c4:	add	r4, r4, r6
   153c8:	bl	13eb0 <memcpy@plt>
   153cc:	strb	r8, [r7, r4]
   153d0:	add	r6, r4, #1
   153d4:	ldr	r5, [r5]
   153d8:	cmp	r5, #0
   153dc:	bne	153b4 <__flatcc_fb_copy_scope@@Base+0x80>
   153e0:	mov	r4, r6
   153e4:	mov	r3, #0
   153e8:	strb	r3, [r7, r6]
   153ec:	mov	r0, r4
   153f0:	ldrd	r4, [sp]
   153f4:	ldrd	r6, [sp, #8]
   153f8:	ldr	r8, [sp, #16]
   153fc:	add	sp, sp, #20
   15400:	pop	{pc}		; (ldr pc, [sp], #4)

00015404 <__flatcc_fb_scoped_symbol_name@@Base>:
   15404:	ldr	r3, [r2, #204]	; 0xcc
   15408:	strd	r4, [sp, #-16]!
   1540c:	mov	r4, r2
   15410:	ldr	r5, [r1, #4]
   15414:	str	r6, [sp, #8]
   15418:	ldr	r6, [pc, #192]	; 154e0 <__flatcc_fb_scoped_symbol_name@@Base+0xdc>
   1541c:	cmp	r3, r0
   15420:	str	lr, [sp, #12]
   15424:	add	r6, pc, r6
   15428:	beq	154a4 <__flatcc_fb_scoped_symbol_name@@Base+0xa0>
   1542c:	mov	r1, r2
   15430:	bl	15334 <__flatcc_fb_copy_scope@@Base>
   15434:	cmp	r0, #0
   15438:	strge	r0, [r4, #208]	; 0xd0
   1543c:	blt	1547c <__flatcc_fb_scoped_symbol_name@@Base+0x78>
   15440:	ldm	r5, {r1, r2}
   15444:	add	ip, r2, r0
   15448:	str	r2, [r4, #212]	; 0xd4
   1544c:	cmp	ip, #203	; 0xcb
   15450:	str	ip, [r4, #216]	; 0xd8
   15454:	bgt	154ac <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   15458:	add	r0, r4, r0
   1545c:	bl	13eb0 <memcpy@plt>
   15460:	ldr	r3, [r4, #216]	; 0xd8
   15464:	mov	r2, #0
   15468:	strb	r2, [r4, r3]
   1546c:	ldrd	r4, [sp]
   15470:	ldr	r6, [sp, #8]
   15474:	add	sp, sp, #12
   15478:	pop	{pc}		; (ldr pc, [sp], #4)
   1547c:	ldr	r3, [pc, #96]	; 154e4 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   15480:	mov	r0, #0
   15484:	mov	r2, #28
   15488:	mov	r1, #1
   1548c:	str	r0, [r4, #208]	; 0xd0
   15490:	ldr	r0, [pc, #80]	; 154e8 <__flatcc_fb_scoped_symbol_name@@Base+0xe4>
   15494:	ldr	r3, [r6, r3]
   15498:	add	r0, pc, r0
   1549c:	ldr	r3, [r3]
   154a0:	bl	13eec <fwrite@plt>
   154a4:	ldr	r0, [r4, #208]	; 0xd0
   154a8:	b	15440 <__flatcc_fb_scoped_symbol_name@@Base+0x3c>
   154ac:	ldr	r0, [pc, #48]	; 154e4 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   154b0:	mov	r3, r1
   154b4:	ldr	r1, [pc, #48]	; 154ec <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
   154b8:	ldr	r0, [r6, r0]
   154bc:	add	r1, pc, r1
   154c0:	ldr	r0, [r0]
   154c4:	bl	13f58 <fprintf@plt>
   154c8:	ldr	r0, [r4, #208]	; 0xd0
   154cc:	mov	r3, #203	; 0xcb
   154d0:	ldr	r1, [r5]
   154d4:	sub	r2, r3, r0
   154d8:	strd	r2, [r4, #212]	; 0xd4
   154dc:	b	15458 <__flatcc_fb_scoped_symbol_name@@Base+0x54>
   154e0:	ldrdeq	r5, [r5], -r4
   154e4:	muleq	r0, ip, r0
   154e8:	andeq	fp, r2, r0, rrx
   154ec:	andeq	fp, r2, ip, asr r0

000154f0 <__flatcc_fb_codegen_common_c@@Base>:
   154f0:	strd	r4, [sp, #-16]!
   154f4:	mov	r4, r0
   154f8:	str	r6, [sp, #8]
   154fc:	str	lr, [sp, #12]
   15500:	bl	13f4c <strlen@plt>
   15504:	ldr	r3, [r4, #212]	; 0xd4
   15508:	sub	r6, r0, #1
   1550c:	ldr	r2, [r3, #144]	; 0x90
   15510:	cmp	r2, #0
   15514:	bne	15538 <__flatcc_fb_codegen_common_c@@Base+0x48>
   15518:	ldr	r5, [r3, #148]	; 0x94
   1551c:	cmp	r5, #0
   15520:	bne	15584 <__flatcc_fb_codegen_common_c@@Base+0x94>
   15524:	mov	r0, r5
   15528:	ldrd	r4, [sp]
   1552c:	ldr	r6, [sp, #8]
   15530:	add	sp, sp, #12
   15534:	pop	{pc}		; (ldr pc, [sp], #4)
   15538:	ldr	r3, [pc, #128]	; 155c0 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   1553c:	mov	r2, r6
   15540:	mov	r1, r4
   15544:	mov	r0, r4
   15548:	add	r3, pc, r3
   1554c:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   15550:	cmp	r0, #0
   15554:	bne	155b8 <__flatcc_fb_codegen_common_c@@Base+0xc8>
   15558:	mov	r0, r4
   1555c:	bl	199e0 <__flatcc_fb_gen_common_c_header@@Base>
   15560:	mov	r5, r0
   15564:	mov	r0, r4
   15568:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   1556c:	cmp	r5, #0
   15570:	bne	15524 <__flatcc_fb_codegen_common_c@@Base+0x34>
   15574:	ldr	r3, [r4, #212]	; 0xd4
   15578:	ldr	r5, [r3, #148]	; 0x94
   1557c:	cmp	r5, #0
   15580:	beq	15524 <__flatcc_fb_codegen_common_c@@Base+0x34>
   15584:	ldr	r3, [pc, #56]	; 155c4 <__flatcc_fb_codegen_common_c@@Base+0xd4>
   15588:	mov	r2, r6
   1558c:	mov	r1, r4
   15590:	mov	r0, r4
   15594:	add	r3, pc, r3
   15598:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   1559c:	subs	r5, r0, #0
   155a0:	bne	155b8 <__flatcc_fb_codegen_common_c@@Base+0xc8>
   155a4:	mov	r0, r4
   155a8:	bl	1eab4 <__flatcc_fb_gen_common_c_builder_header@@Base>
   155ac:	mov	r0, r4
   155b0:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   155b4:	b	15524 <__flatcc_fb_codegen_common_c@@Base+0x34>
   155b8:	mvn	r5, #0
   155bc:	b	15524 <__flatcc_fb_codegen_common_c@@Base+0x34>
   155c0:	strdeq	sl, [r2], -r8
   155c4:	andeq	sl, r2, r0, asr #31

000155c8 <__flatcc_fb_codegen_c@@Base>:
   155c8:	mov	r3, r1
   155cc:	strd	r4, [sp, #-16]!
   155d0:	mov	r4, r0
   155d4:	mov	r2, #0
   155d8:	ldr	r0, [r1, #60]	; 0x3c
   155dc:	mov	r1, r2
   155e0:	str	r6, [sp, #8]
   155e4:	str	lr, [sp, #12]
   155e8:	str	r3, [r4, #208]	; 0xd0
   155ec:	bl	2ca20 <fb_scope_table_find@@Base>
   155f0:	ldr	r3, [r4, #208]	; 0xd0
   155f4:	ldr	r5, [r3, #160]	; 0xa0
   155f8:	str	r0, [r4, #216]	; 0xd8
   155fc:	mov	r0, r5
   15600:	bl	13f4c <strlen@plt>
   15604:	ldr	r3, [r4, #212]	; 0xd4
   15608:	mov	r6, r0
   1560c:	ldr	r2, [r3, #152]	; 0x98
   15610:	cmp	r2, #0
   15614:	bne	156ac <__flatcc_fb_codegen_c@@Base+0xe4>
   15618:	ldr	r2, [r3, #156]	; 0x9c
   1561c:	cmp	r2, #0
   15620:	bne	156f4 <__flatcc_fb_codegen_c@@Base+0x12c>
   15624:	ldr	r2, [r3, #160]	; 0xa0
   15628:	cmp	r2, #0
   1562c:	bne	1565c <__flatcc_fb_codegen_c@@Base+0x94>
   15630:	ldr	r2, [r3, #164]	; 0xa4
   15634:	cmp	r2, #0
   15638:	bne	15738 <__flatcc_fb_codegen_c@@Base+0x170>
   1563c:	ldr	r5, [r3, #168]	; 0xa8
   15640:	cmp	r5, #0
   15644:	bne	1577c <__flatcc_fb_codegen_c@@Base+0x1b4>
   15648:	mov	r0, r5
   1564c:	ldrd	r4, [sp]
   15650:	ldr	r6, [sp, #8]
   15654:	add	sp, sp, #12
   15658:	pop	{pc}		; (ldr pc, [sp], #4)
   1565c:	ldr	r3, [pc, #352]	; 157c4 <__flatcc_fb_codegen_c@@Base+0x1fc>
   15660:	mov	r2, r6
   15664:	mov	r0, r4
   15668:	ldr	r1, [r4, #208]	; 0xd0
   1566c:	add	r3, pc, r3
   15670:	ldr	r1, [r1, #160]	; 0xa0
   15674:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   15678:	cmp	r0, #0
   1567c:	bne	157bc <__flatcc_fb_codegen_c@@Base+0x1f4>
   15680:	mov	r0, r4
   15684:	bl	205d0 <__flatcc_fb_gen_c_verifier@@Base>
   15688:	subs	r5, r0, #0
   1568c:	bne	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   15690:	mov	r0, r4
   15694:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   15698:	ldr	r3, [r4, #212]	; 0xd4
   1569c:	ldr	r2, [r3, #164]	; 0xa4
   156a0:	cmp	r2, #0
   156a4:	beq	1563c <__flatcc_fb_codegen_c@@Base+0x74>
   156a8:	b	15738 <__flatcc_fb_codegen_c@@Base+0x170>
   156ac:	ldr	r3, [pc, #276]	; 157c8 <__flatcc_fb_codegen_c@@Base+0x200>
   156b0:	mov	r2, r0
   156b4:	mov	r1, r5
   156b8:	mov	r0, r4
   156bc:	add	r3, pc, r3
   156c0:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   156c4:	cmp	r0, #0
   156c8:	bne	157bc <__flatcc_fb_codegen_c@@Base+0x1f4>
   156cc:	mov	r0, r4
   156d0:	bl	1a794 <__flatcc_fb_gen_c_reader@@Base>
   156d4:	subs	r5, r0, #0
   156d8:	bne	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   156dc:	mov	r0, r4
   156e0:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   156e4:	ldr	r3, [r4, #212]	; 0xd4
   156e8:	ldr	r2, [r3, #156]	; 0x9c
   156ec:	cmp	r2, #0
   156f0:	beq	15624 <__flatcc_fb_codegen_c@@Base+0x5c>
   156f4:	ldr	r3, [pc, #208]	; 157cc <__flatcc_fb_codegen_c@@Base+0x204>
   156f8:	mov	r2, r6
   156fc:	mov	r0, r4
   15700:	ldr	r1, [r4, #208]	; 0xd0
   15704:	add	r3, pc, r3
   15708:	ldr	r1, [r1, #160]	; 0xa0
   1570c:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   15710:	cmp	r0, #0
   15714:	bne	157bc <__flatcc_fb_codegen_c@@Base+0x1f4>
   15718:	mov	r0, r4
   1571c:	bl	1f4f4 <__flatcc_fb_gen_c_builder@@Base>
   15720:	subs	r5, r0, #0
   15724:	bne	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   15728:	mov	r0, r4
   1572c:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   15730:	ldr	r3, [r4, #212]	; 0xd4
   15734:	b	15624 <__flatcc_fb_codegen_c@@Base+0x5c>
   15738:	ldr	r3, [pc, #144]	; 157d0 <__flatcc_fb_codegen_c@@Base+0x208>
   1573c:	mov	r2, r6
   15740:	mov	r0, r4
   15744:	ldr	r1, [r4, #208]	; 0xd0
   15748:	add	r3, pc, r3
   1574c:	ldr	r1, [r1, #160]	; 0xa0
   15750:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   15754:	cmp	r0, #0
   15758:	bne	157bc <__flatcc_fb_codegen_c@@Base+0x1f4>
   1575c:	mov	r0, r4
   15760:	bl	247e4 <__flatcc_fb_gen_c_json_parser@@Base>
   15764:	subs	r5, r0, #0
   15768:	bne	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   1576c:	mov	r0, r4
   15770:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   15774:	ldr	r3, [r4, #212]	; 0xd4
   15778:	b	1563c <__flatcc_fb_codegen_c@@Base+0x74>
   1577c:	ldr	r3, [pc, #80]	; 157d4 <__flatcc_fb_codegen_c@@Base+0x20c>
   15780:	mov	r2, r6
   15784:	mov	r0, r4
   15788:	ldr	r1, [r4, #208]	; 0xd0
   1578c:	add	r3, pc, r3
   15790:	ldr	r1, [r1, #160]	; 0xa0
   15794:	bl	14d8c <__flatcc_fb_open_output_file@@Base>
   15798:	cmp	r0, #0
   1579c:	bne	157bc <__flatcc_fb_codegen_c@@Base+0x1f4>
   157a0:	mov	r0, r4
   157a4:	bl	28188 <__flatcc_fb_gen_c_json_printer@@Base>
   157a8:	subs	r5, r0, #0
   157ac:	bne	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   157b0:	mov	r0, r4
   157b4:	bl	14e9c <__flatcc_fb_close_output_file@@Base>
   157b8:	b	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   157bc:	mvn	r5, #0
   157c0:	b	15648 <__flatcc_fb_codegen_c@@Base+0x80>
   157c4:	andeq	sl, r2, r8, lsl #30
   157c8:	andeq	sl, r2, r0, lsl #25
   157cc:	andeq	sl, r2, r4, ror #28
   157d0:	andeq	sl, r2, r8, lsr lr
   157d4:	andeq	sl, r2, r4, lsl #28
   157d8:	strd	r4, [sp, #-16]!
   157dc:	mov	r2, #220	; 0xdc
   157e0:	mov	r5, r1
   157e4:	str	r6, [sp, #8]
   157e8:	mov	r1, #0
   157ec:	mov	r6, r0
   157f0:	str	lr, [sp, #12]
   157f4:	sub	sp, sp, #224	; 0xe0
   157f8:	add	r4, sp, #4
   157fc:	mov	r0, r4
   15800:	bl	13f70 <memset@plt>
   15804:	ldrh	r3, [r5, #8]
   15808:	cmp	r3, #1
   1580c:	bhi	15924 <__flatcc_fb_codegen_c@@Base+0x35c>
   15810:	mov	r2, r4
   15814:	mov	r1, r5
   15818:	ldr	r0, [r5, #12]
   1581c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   15820:	ldrh	r3, [r5, #8]
   15824:	cmp	r3, #1
   15828:	bne	158d8 <__flatcc_fb_codegen_c@@Base+0x310>
   1582c:	ldrd	r2, [r5, #112]	; 0x70
   15830:	ldr	r0, [r6, #204]	; 0xcc
   15834:	orrs	r3, r2, r3
   15838:	beq	158c4 <__flatcc_fb_codegen_c@@Base+0x2fc>
   1583c:	ldr	r1, [pc, #256]	; 15944 <__flatcc_fb_codegen_c@@Base+0x37c>
   15840:	mov	r3, r4
   15844:	mov	r2, r4
   15848:	add	r1, pc, r1
   1584c:	bl	13f58 <fprintf@plt>
   15850:	ldr	r1, [pc, #240]	; 15948 <__flatcc_fb_codegen_c@@Base+0x380>
   15854:	mov	r3, r4
   15858:	mov	r2, r4
   1585c:	ldr	r0, [r6, #204]	; 0xcc
   15860:	add	r1, pc, r1
   15864:	bl	13f58 <fprintf@plt>
   15868:	ldr	r1, [pc, #220]	; 1594c <__flatcc_fb_codegen_c@@Base+0x384>
   1586c:	mov	r3, r4
   15870:	mov	r2, r4
   15874:	ldr	r0, [r6, #204]	; 0xcc
   15878:	add	r1, pc, r1
   1587c:	bl	13f58 <fprintf@plt>
   15880:	ldr	r1, [pc, #200]	; 15950 <__flatcc_fb_codegen_c@@Base+0x388>
   15884:	mov	r3, r4
   15888:	mov	r2, r4
   1588c:	ldr	r0, [r6, #204]	; 0xcc
   15890:	add	r1, pc, r1
   15894:	bl	13f58 <fprintf@plt>
   15898:	ldr	r1, [pc, #180]	; 15954 <__flatcc_fb_codegen_c@@Base+0x38c>
   1589c:	mov	r3, r4
   158a0:	mov	r2, r4
   158a4:	ldr	r0, [r6, #204]	; 0xcc
   158a8:	add	r1, pc, r1
   158ac:	bl	13f58 <fprintf@plt>
   158b0:	add	sp, sp, #224	; 0xe0
   158b4:	ldrd	r4, [sp]
   158b8:	ldr	r6, [sp, #8]
   158bc:	add	sp, sp, #12
   158c0:	pop	{pc}		; (ldr pc, [sp], #4)
   158c4:	ldr	r1, [pc, #140]	; 15958 <__flatcc_fb_codegen_c@@Base+0x390>
   158c8:	mov	r2, r4
   158cc:	add	r1, pc, r1
   158d0:	bl	13f58 <fprintf@plt>
   158d4:	b	15850 <__flatcc_fb_codegen_c@@Base+0x288>
   158d8:	ldr	r1, [pc, #124]	; 1595c <__flatcc_fb_codegen_c@@Base+0x394>
   158dc:	mov	r3, r4
   158e0:	mov	r2, r4
   158e4:	ldr	r0, [r6, #204]	; 0xcc
   158e8:	add	r1, pc, r1
   158ec:	bl	13f58 <fprintf@plt>
   158f0:	ldr	r1, [pc, #104]	; 15960 <__flatcc_fb_codegen_c@@Base+0x398>
   158f4:	mov	r3, r4
   158f8:	mov	r2, r6
   158fc:	ldr	r0, [r6, #204]	; 0xcc
   15900:	add	r1, pc, r1
   15904:	bl	13f58 <fprintf@plt>
   15908:	ldr	r1, [pc, #84]	; 15964 <__flatcc_fb_codegen_c@@Base+0x39c>
   1590c:	mov	r3, r4
   15910:	mov	r2, r6
   15914:	ldr	r0, [r6, #204]	; 0xcc
   15918:	add	r1, pc, r1
   1591c:	bl	13f58 <fprintf@plt>
   15920:	b	158b0 <__flatcc_fb_codegen_c@@Base+0x2e8>
   15924:	ldr	r3, [pc, #60]	; 15968 <__flatcc_fb_codegen_c@@Base+0x3a0>
   15928:	movw	r2, #863	; 0x35f
   1592c:	ldr	r1, [pc, #56]	; 1596c <__flatcc_fb_codegen_c@@Base+0x3a4>
   15930:	ldr	r0, [pc, #56]	; 15970 <__flatcc_fb_codegen_c@@Base+0x3a8>
   15934:	add	r3, pc, r3
   15938:	add	r1, pc, r1
   1593c:	add	r0, pc, r0
   15940:	bl	1400c <__assert_fail@plt>
   15944:	andeq	sl, r2, ip, ror #29
   15948:	strdeq	sl, [r2], -r0
   1594c:	strdeq	sl, [r2], -ip
   15950:	andeq	sl, r2, r8, lsl #30
   15954:	andeq	sl, r2, r0, lsl pc
   15958:	andeq	sl, r2, r0, asr #28
   1595c:	strdeq	sl, [r2], -r4
   15960:	andeq	sl, r2, r8, lsl #30
   15964:	andeq	sl, r2, r8, lsl pc
   15968:	andeq	sl, r2, ip, ror #24
   1596c:	andeq	sl, r2, r8, lsr #26
   15970:	andeq	sl, r2, ip, lsl #27
   15974:	ldr	r2, [pc, #92]	; 159d8 <__flatcc_fb_codegen_c@@Base+0x410>
   15978:	mov	r3, #141	; 0x8d
   1597c:	push	{lr}		; (str lr, [sp, #-4]!)
   15980:	sub	sp, sp, #12
   15984:	ldr	r1, [pc, #80]	; 159dc <__flatcc_fb_codegen_c@@Base+0x414>
   15988:	ldr	r0, [pc, #80]	; 159e0 <__flatcc_fb_codegen_c@@Base+0x418>
   1598c:	add	r2, pc, r2
   15990:	ldr	r4, [pc, #76]	; 159e4 <__flatcc_fb_codegen_c@@Base+0x41c>
   15994:	ldr	ip, [r2, r1]
   15998:	add	r0, pc, r0
   1599c:	ldr	r1, [pc, #68]	; 159e8 <__flatcc_fb_codegen_c@@Base+0x420>
   159a0:	add	r4, pc, r4
   159a4:	str	r0, [sp]
   159a8:	mov	r2, r4
   159ac:	ldr	r0, [ip]
   159b0:	add	r1, pc, r1
   159b4:	bl	13f58 <fprintf@plt>
   159b8:	ldr	r3, [pc, #44]	; 159ec <__flatcc_fb_codegen_c@@Base+0x424>
   159bc:	mov	r1, r4
   159c0:	mov	r2, #141	; 0x8d
   159c4:	ldr	r0, [pc, #36]	; 159f0 <__flatcc_fb_codegen_c@@Base+0x428>
   159c8:	add	r3, pc, r3
   159cc:	add	r3, r3, #20
   159d0:	add	r0, pc, r0
   159d4:	bl	1400c <__assert_fail@plt>
   159d8:	andeq	r5, r5, ip, ror #12
   159dc:	muleq	r0, ip, r0
   159e0:	andeq	sl, r2, ip, lsr #30
   159e4:			; <UNDEFINED> instruction: 0x0002aeb8
   159e8:	andeq	sl, r2, r8, lsl #30
   159ec:	ldrdeq	sl, [r2], -r8
   159f0:	andeq	r3, r3, ip, lsl #8
   159f4:	ldr	r2, [pc, #92]	; 15a58 <__flatcc_fb_codegen_c@@Base+0x490>
   159f8:	mov	r3, #96	; 0x60
   159fc:	push	{lr}		; (str lr, [sp, #-4]!)
   15a00:	sub	sp, sp, #12
   15a04:	ldr	r1, [pc, #80]	; 15a5c <__flatcc_fb_codegen_c@@Base+0x494>
   15a08:	ldr	r0, [pc, #80]	; 15a60 <__flatcc_fb_codegen_c@@Base+0x498>
   15a0c:	add	r2, pc, r2
   15a10:	ldr	r4, [pc, #76]	; 15a64 <__flatcc_fb_codegen_c@@Base+0x49c>
   15a14:	ldr	ip, [r2, r1]
   15a18:	add	r0, pc, r0
   15a1c:	ldr	r1, [pc, #68]	; 15a68 <__flatcc_fb_codegen_c@@Base+0x4a0>
   15a20:	add	r4, pc, r4
   15a24:	str	r0, [sp]
   15a28:	mov	r2, r4
   15a2c:	ldr	r0, [ip]
   15a30:	add	r1, pc, r1
   15a34:	bl	13f58 <fprintf@plt>
   15a38:	ldr	r3, [pc, #44]	; 15a6c <__flatcc_fb_codegen_c@@Base+0x4a4>
   15a3c:	mov	r1, r4
   15a40:	mov	r2, #96	; 0x60
   15a44:	ldr	r0, [pc, #36]	; 15a70 <__flatcc_fb_codegen_c@@Base+0x4a8>
   15a48:	add	r3, pc, r3
   15a4c:	add	r3, r3, #40	; 0x28
   15a50:	add	r0, pc, r0
   15a54:	bl	1400c <__assert_fail@plt>
   15a58:	andeq	r5, r5, ip, ror #11
   15a5c:	muleq	r0, ip, r0
   15a60:	andeq	sl, r2, ip, lsr #29
   15a64:	andeq	sl, r2, r8, lsr lr
   15a68:	andeq	sl, r2, r8, lsl #29
   15a6c:	andeq	sl, r2, r8, asr fp
   15a70:	andeq	r3, r3, ip, lsl #7
   15a74:	ldr	r2, [pc, #92]	; 15ad8 <__flatcc_fb_codegen_c@@Base+0x510>
   15a78:	mov	r3, #226	; 0xe2
   15a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   15a80:	sub	sp, sp, #12
   15a84:	ldr	r1, [pc, #80]	; 15adc <__flatcc_fb_codegen_c@@Base+0x514>
   15a88:	ldr	r0, [pc, #80]	; 15ae0 <__flatcc_fb_codegen_c@@Base+0x518>
   15a8c:	add	r2, pc, r2
   15a90:	ldr	r4, [pc, #76]	; 15ae4 <__flatcc_fb_codegen_c@@Base+0x51c>
   15a94:	ldr	ip, [r2, r1]
   15a98:	add	r0, pc, r0
   15a9c:	ldr	r1, [pc, #68]	; 15ae8 <__flatcc_fb_codegen_c@@Base+0x520>
   15aa0:	add	r4, pc, r4
   15aa4:	str	r0, [sp]
   15aa8:	mov	r2, r4
   15aac:	ldr	r0, [ip]
   15ab0:	add	r1, pc, r1
   15ab4:	bl	13f58 <fprintf@plt>
   15ab8:	ldr	r3, [pc, #44]	; 15aec <__flatcc_fb_codegen_c@@Base+0x524>
   15abc:	mov	r1, r4
   15ac0:	mov	r2, #226	; 0xe2
   15ac4:	ldr	r0, [pc, #36]	; 15af0 <__flatcc_fb_codegen_c@@Base+0x528>
   15ac8:	add	r3, pc, r3
   15acc:	add	r3, r3, #60	; 0x3c
   15ad0:	add	r0, pc, r0
   15ad4:	bl	1400c <__assert_fail@plt>
   15ad8:	andeq	r5, r5, ip, ror #10
   15adc:	muleq	r0, ip, r0
   15ae0:	andeq	sl, r2, ip, lsr #28
   15ae4:			; <UNDEFINED> instruction: 0x0002adb8
   15ae8:	andeq	sl, r2, r8, lsl #28
   15aec:	ldrdeq	sl, [r2], -r8
   15af0:	andeq	r3, r3, ip, lsl #6
   15af4:	ldr	r3, [pc, #4064]	; 16adc <__flatcc_fb_codegen_c@@Base+0x1514>
   15af8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15afc:	strd	r6, [sp, #8]
   15b00:	ldrh	r6, [r1, #8]
   15b04:	strd	r8, [sp, #16]
   15b08:	strd	sl, [sp, #24]
   15b0c:	add	r3, pc, r3
   15b10:	str	lr, [sp, #32]
   15b14:	sub	sp, sp, #1072	; 0x430
   15b18:	sub	sp, sp, #4
   15b1c:	cmp	r6, #0
   15b20:	str	r1, [sp, #80]	; 0x50
   15b24:	str	r3, [sp, #84]	; 0x54
   15b28:	bne	17b44 <__flatcc_fb_codegen_c@@Base+0x257c>
   15b2c:	add	r3, sp, #412	; 0x19c
   15b30:	add	r9, sp, #192	; 0xc0
   15b34:	mov	r4, r3
   15b38:	mov	r5, r0
   15b3c:	mov	r2, #220	; 0xdc
   15b40:	mov	r1, r6
   15b44:	str	r3, [sp, #56]	; 0x38
   15b48:	mov	r0, r9
   15b4c:	bl	13f70 <memset@plt>
   15b50:	mov	r2, #220	; 0xdc
   15b54:	mov	r0, r4
   15b58:	mov	r1, r6
   15b5c:	bl	13f70 <memset@plt>
   15b60:	mov	r0, #10
   15b64:	ldr	r1, [r5, #204]	; 0xcc
   15b68:	bl	13fb8 <fputc@plt>
   15b6c:	ldr	r4, [sp, #80]	; 0x50
   15b70:	mov	r2, r9
   15b74:	mov	r1, r4
   15b78:	ldr	r0, [r4, #12]
   15b7c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   15b80:	ldr	r4, [r4, #32]
   15b84:	cmp	r4, #0
   15b88:	beq	15c40 <__flatcc_fb_codegen_c@@Base+0x678>
   15b8c:	ldr	r8, [pc, #3916]	; 16ae0 <__flatcc_fb_codegen_c@@Base+0x1518>
   15b90:	mov	r1, r6
   15b94:	mov	ip, #1
   15b98:	ldr	r7, [pc, #3908]	; 16ae4 <__flatcc_fb_codegen_c@@Base+0x151c>
   15b9c:	ldr	r6, [pc, #3908]	; 16ae8 <__flatcc_fb_codegen_c@@Base+0x1520>
   15ba0:	add	r8, pc, r8
   15ba4:	add	r7, pc, r7
   15ba8:	add	r6, pc, r6
   15bac:	b	15bf4 <__flatcc_fb_codegen_c@@Base+0x62c>
   15bb0:	ldr	r1, [pc, #3892]	; 16aec <__flatcc_fb_codegen_c@@Base+0x1524>
   15bb4:	mov	r2, r6
   15bb8:	add	r1, pc, r1
   15bbc:	bl	13f58 <fprintf@plt>
   15bc0:	ldr	r2, [r4, #4]
   15bc4:	ldr	r0, [r5, #204]	; 0xcc
   15bc8:	ldr	r1, [pc, #3872]	; 16af0 <__flatcc_fb_codegen_c@@Base+0x1528>
   15bcc:	ldr	r3, [r2]
   15bd0:	ldr	r2, [r2, #4]
   15bd4:	add	r1, pc, r1
   15bd8:	bl	13f58 <fprintf@plt>
   15bdc:	ldr	r3, [r4, #4]
   15be0:	mov	ip, #0
   15be4:	ldr	r4, [r4]
   15be8:	ldr	r1, [r3, #8]
   15bec:	cmp	r4, ip
   15bf0:	beq	15c28 <__flatcc_fb_codegen_c@@Base+0x660>
   15bf4:	ldr	r2, [r4, #4]
   15bf8:	ldr	r0, [r5, #204]	; 0xcc
   15bfc:	ldr	r3, [r2, #8]
   15c00:	cmp	r3, r1
   15c04:	beq	15bc8 <__flatcc_fb_codegen_c@@Base+0x600>
   15c08:	cmp	ip, #0
   15c0c:	bne	15bb0 <__flatcc_fb_codegen_c@@Base+0x5e8>
   15c10:	mov	r2, r8
   15c14:	mov	r1, r7
   15c18:	bl	13f58 <fprintf@plt>
   15c1c:	ldr	r2, [r4, #4]
   15c20:	ldr	r0, [r5, #204]	; 0xcc
   15c24:	b	15bc8 <__flatcc_fb_codegen_c@@Base+0x600>
   15c28:	ldr	r0, [pc, #3780]	; 16af4 <__flatcc_fb_codegen_c@@Base+0x152c>
   15c2c:	mov	r2, #4
   15c30:	mov	r1, #1
   15c34:	ldr	r3, [r5, #204]	; 0xcc
   15c38:	add	r0, pc, r0
   15c3c:	bl	13eec <fwrite@plt>
   15c40:	ldr	r1, [pc, #3760]	; 16af8 <__flatcc_fb_codegen_c@@Base+0x1530>
   15c44:	mov	r2, r9
   15c48:	ldr	r0, [r5, #204]	; 0xcc
   15c4c:	add	r1, pc, r1
   15c50:	bl	13f58 <fprintf@plt>
   15c54:	ldr	r1, [pc, #3744]	; 16afc <__flatcc_fb_codegen_c@@Base+0x1534>
   15c58:	mov	r3, r9
   15c5c:	mov	r2, r9
   15c60:	str	r5, [sp]
   15c64:	ldr	r0, [r5, #204]	; 0xcc
   15c68:	add	r1, pc, r1
   15c6c:	bl	13f58 <fprintf@plt>
   15c70:	ldr	r1, [pc, #3720]	; 16b00 <__flatcc_fb_codegen_c@@Base+0x1538>
   15c74:	mov	r3, r9
   15c78:	mov	r2, r9
   15c7c:	str	r9, [sp]
   15c80:	stmib	sp, {r5, r9}
   15c84:	ldr	r0, [r5, #204]	; 0xcc
   15c88:	add	r1, pc, r1
   15c8c:	bl	13f58 <fprintf@plt>
   15c90:	ldr	r1, [pc, #3692]	; 16b04 <__flatcc_fb_codegen_c@@Base+0x153c>
   15c94:	mov	r3, r9
   15c98:	mov	r2, r5
   15c9c:	ldr	r0, [r5, #204]	; 0xcc
   15ca0:	add	r1, pc, r1
   15ca4:	bl	13f58 <fprintf@plt>
   15ca8:	mov	r0, #10
   15cac:	ldr	r1, [r5, #204]	; 0xcc
   15cb0:	bl	13fb8 <fputc@plt>
   15cb4:	ldr	r3, [sp, #80]	; 0x50
   15cb8:	ldr	r4, [r3, #20]
   15cbc:	cmp	r4, #0
   15cc0:	beq	15eb4 <__flatcc_fb_codegen_c@@Base+0x8ec>
   15cc4:	ldr	r3, [pc, #3644]	; 16b08 <__flatcc_fb_codegen_c@@Base+0x1540>
   15cc8:	ldr	sl, [pc, #3644]	; 16b0c <__flatcc_fb_codegen_c@@Base+0x1544>
   15ccc:	ldr	fp, [pc, #3644]	; 16b10 <__flatcc_fb_codegen_c@@Base+0x1548>
   15cd0:	add	r3, pc, r3
   15cd4:	str	r3, [sp, #48]	; 0x30
   15cd8:	mov	r3, #0
   15cdc:	add	sl, pc, sl
   15ce0:	str	r3, [sp, #60]	; 0x3c
   15ce4:	add	fp, pc, fp
   15ce8:	ldr	r3, [pc, #3620]	; 16b14 <__flatcc_fb_codegen_c@@Base+0x154c>
   15cec:	add	r3, pc, r3
   15cf0:	str	r3, [sp, #52]	; 0x34
   15cf4:	ldr	r6, [r4, #68]	; 0x44
   15cf8:	cmp	r6, #0
   15cfc:	beq	15d98 <__flatcc_fb_codegen_c@@Base+0x7d0>
   15d00:	mov	r1, #1
   15d04:	mov	r3, #0
   15d08:	b	15d4c <__flatcc_fb_codegen_c@@Base+0x784>
   15d0c:	ldr	r1, [pc, #3588]	; 16b18 <__flatcc_fb_codegen_c@@Base+0x1550>
   15d10:	mov	r2, sl
   15d14:	add	r1, pc, r1
   15d18:	bl	13f58 <fprintf@plt>
   15d1c:	ldr	r2, [r6, #4]
   15d20:	ldr	r0, [r5, #204]	; 0xcc
   15d24:	mov	r1, fp
   15d28:	ldr	r3, [r2]
   15d2c:	ldr	r2, [r2, #4]
   15d30:	bl	13f58 <fprintf@plt>
   15d34:	ldr	r3, [r6, #4]
   15d38:	mov	r1, #0
   15d3c:	ldr	r6, [r6]
   15d40:	ldr	r3, [r3, #8]
   15d44:	cmp	r6, r1
   15d48:	beq	15d80 <__flatcc_fb_codegen_c@@Base+0x7b8>
   15d4c:	ldr	r2, [r6, #4]
   15d50:	ldr	r0, [r5, #204]	; 0xcc
   15d54:	ldr	ip, [r2, #8]
   15d58:	cmp	ip, r3
   15d5c:	beq	15d24 <__flatcc_fb_codegen_c@@Base+0x75c>
   15d60:	cmp	r1, #0
   15d64:	bne	15d0c <__flatcc_fb_codegen_c@@Base+0x744>
   15d68:	ldr	r2, [sp, #48]	; 0x30
   15d6c:	ldr	r1, [sp, #52]	; 0x34
   15d70:	bl	13f58 <fprintf@plt>
   15d74:	ldr	r2, [r6, #4]
   15d78:	ldr	r0, [r5, #204]	; 0xcc
   15d7c:	b	15d24 <__flatcc_fb_codegen_c@@Base+0x75c>
   15d80:	ldr	r0, [pc, #3476]	; 16b1c <__flatcc_fb_codegen_c@@Base+0x1554>
   15d84:	mov	r2, #4
   15d88:	mov	r1, #1
   15d8c:	ldr	r3, [r5, #204]	; 0xcc
   15d90:	add	r0, pc, r0
   15d94:	bl	13eec <fwrite@plt>
   15d98:	ldr	r3, [r4, #4]
   15d9c:	ldrh	r6, [r4, #72]	; 0x48
   15da0:	ldm	r3, {r2, r8}
   15da4:	tst	r6, #4
   15da8:	str	r2, [sp, #44]	; 0x2c
   15dac:	bne	161e8 <__flatcc_fb_codegen_c@@Base+0xc20>
   15db0:	ldrh	r3, [r4, #24]
   15db4:	ubfx	r6, r6, #8, #1
   15db8:	sub	r3, r3, #7
   15dbc:	cmp	r3, #8
   15dc0:	addls	pc, pc, r3, lsl #2
   15dc4:	b	1794c <__flatcc_fb_codegen_c@@Base+0x2384>
   15dc8:	b	15f7c <__flatcc_fb_codegen_c@@Base+0x9b4>
   15dcc:	b	15f34 <__flatcc_fb_codegen_c@@Base+0x96c>
   15dd0:	b	15ed4 <__flatcc_fb_codegen_c@@Base+0x90c>
   15dd4:	b	15e5c <__flatcc_fb_codegen_c@@Base+0x894>
   15dd8:	b	1794c <__flatcc_fb_codegen_c@@Base+0x2384>
   15ddc:	b	1794c <__flatcc_fb_codegen_c@@Base+0x2384>
   15de0:	b	1794c <__flatcc_fb_codegen_c@@Base+0x2384>
   15de4:	b	15e24 <__flatcc_fb_codegen_c@@Base+0x85c>
   15de8:	b	15dec <__flatcc_fb_codegen_c@@Base+0x824>
   15dec:	ldr	r1, [r4, #16]
   15df0:	ldr	r2, [sp, #56]	; 0x38
   15df4:	ldr	r0, [r1, #12]
   15df8:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   15dfc:	ldr	r3, [r4, #16]
   15e00:	ldrh	r3, [r3, #8]
   15e04:	cmp	r3, #4
   15e08:	addls	pc, pc, r3, lsl #2
   15e0c:	b	179fc <__flatcc_fb_codegen_c@@Base+0x2434>
   15e10:	b	15fbc <__flatcc_fb_codegen_c@@Base+0x9f4>
   15e14:	b	15fbc <__flatcc_fb_codegen_c@@Base+0x9f4>
   15e18:	b	179fc <__flatcc_fb_codegen_c@@Base+0x2434>
   15e1c:	b	15fbc <__flatcc_fb_codegen_c@@Base+0x9f4>
   15e20:	b	15fbc <__flatcc_fb_codegen_c@@Base+0x9f4>
   15e24:	ldr	r1, [r4, #16]
   15e28:	ldr	r2, [sp, #56]	; 0x38
   15e2c:	ldr	r0, [r1, #12]
   15e30:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   15e34:	ldr	r2, [r4, #16]
   15e38:	ldrh	r3, [r2, #8]
   15e3c:	cmp	r3, #4
   15e40:	addls	pc, pc, r3, lsl #2
   15e44:	b	179a4 <__flatcc_fb_codegen_c@@Base+0x23dc>
   15e48:	b	16088 <__flatcc_fb_codegen_c@@Base+0xac0>
   15e4c:	b	16058 <__flatcc_fb_codegen_c@@Base+0xa90>
   15e50:	b	179a4 <__flatcc_fb_codegen_c@@Base+0x23dc>
   15e54:	b	160b8 <__flatcc_fb_codegen_c@@Base+0xaf0>
   15e58:	b	1600c <__flatcc_fb_codegen_c@@Base+0xa44>
   15e5c:	ldr	r3, [sp, #44]	; 0x2c
   15e60:	mov	r2, r5
   15e64:	str	r9, [sp, #8]
   15e68:	ldr	r1, [pc, #3248]	; 16b20 <__flatcc_fb_codegen_c@@Base+0x1558>
   15e6c:	str	r8, [sp, #12]
   15e70:	str	r3, [sp, #16]
   15e74:	str	r6, [sp, #20]
   15e78:	ldrd	r6, [r4, #96]	; 0x60
   15e7c:	add	r1, pc, r1
   15e80:	strd	r6, [sp]
   15e84:	ldr	r0, [r5, #204]	; 0xcc
   15e88:	bl	13f58 <fprintf@plt>
   15e8c:	ldr	r3, [r5, #212]	; 0xd4
   15e90:	ldr	r3, [r3, #32]
   15e94:	cmp	r3, #0
   15e98:	bne	16230 <__flatcc_fb_codegen_c@@Base+0xc68>
   15e9c:	ldrh	r3, [r4, #72]	; 0x48
   15ea0:	tst	r3, #128	; 0x80
   15ea4:	bne	1620c <__flatcc_fb_codegen_c@@Base+0xc44>
   15ea8:	ldr	r4, [r4]
   15eac:	cmp	r4, #0
   15eb0:	bne	15cf4 <__flatcc_fb_codegen_c@@Base+0x72c>
   15eb4:	add	sp, sp, #1072	; 0x430
   15eb8:	add	sp, sp, #4
   15ebc:	ldrd	r4, [sp]
   15ec0:	ldrd	r6, [sp, #8]
   15ec4:	ldrd	r8, [sp, #16]
   15ec8:	ldrd	sl, [sp, #24]
   15ecc:	add	sp, sp, #32
   15ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed4:	ldr	r3, [sp, #44]	; 0x2c
   15ed8:	mov	r2, r5
   15edc:	str	r9, [sp, #8]
   15ee0:	ldr	r1, [pc, #3132]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x155c>
   15ee4:	str	r8, [sp, #12]
   15ee8:	str	r3, [sp, #16]
   15eec:	str	r5, [sp, #20]
   15ef0:	str	r6, [sp, #24]
   15ef4:	add	r1, pc, r1
   15ef8:	ldrd	r6, [r4, #96]	; 0x60
   15efc:	strd	r6, [sp]
   15f00:	ldr	r0, [r5, #204]	; 0xcc
   15f04:	bl	13f58 <fprintf@plt>
   15f08:	ldrh	r3, [r4, #72]	; 0x48
   15f0c:	tst	r3, #128	; 0x80
   15f10:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   15f14:	ldr	r0, [pc, #3084]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x1560>
   15f18:	mov	r1, #1
   15f1c:	mov	r2, #84	; 0x54
   15f20:	ldr	r3, [r5, #204]	; 0xcc
   15f24:	str	r1, [sp, #60]	; 0x3c
   15f28:	add	r0, pc, r0
   15f2c:	bl	13eec <fwrite@plt>
   15f30:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   15f34:	ldr	r2, [r4, #16]
   15f38:	cmp	r2, #5
   15f3c:	beq	16370 <__flatcc_fb_codegen_c@@Base+0xda8>
   15f40:	sub	r3, r2, #1
   15f44:	cmp	r3, #10
   15f48:	addls	pc, pc, r3, lsl #2
   15f4c:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2490>
   15f50:	b	16830 <__flatcc_fb_codegen_c@@Base+0x1268>
   15f54:	b	177c0 <__flatcc_fb_codegen_c@@Base+0x21f8>
   15f58:	b	17064 <__flatcc_fb_codegen_c@@Base+0x1a9c>
   15f5c:	b	1779c <__flatcc_fb_codegen_c@@Base+0x21d4>
   15f60:	b	17a58 <__flatcc_fb_codegen_c@@Base+0x2490>
   15f64:	b	167e8 <__flatcc_fb_codegen_c@@Base+0x1220>
   15f68:	b	167c4 <__flatcc_fb_codegen_c@@Base+0x11fc>
   15f6c:	b	167a0 <__flatcc_fb_codegen_c@@Base+0x11d8>
   15f70:	b	1677c <__flatcc_fb_codegen_c@@Base+0x11b4>
   15f74:	b	16758 <__flatcc_fb_codegen_c@@Base+0x1190>
   15f78:	b	1680c <__flatcc_fb_codegen_c@@Base+0x1244>
   15f7c:	ldr	r3, [r4, #16]
   15f80:	sub	r3, r3, #1
   15f84:	cmp	r3, #10
   15f88:	addls	pc, pc, r3, lsl #2
   15f8c:	b	17cb4 <__flatcc_fb_codegen_c@@Base+0x26ec>
   15f90:	b	162fc <__flatcc_fb_codegen_c@@Base+0xd34>
   15f94:	b	1674c <__flatcc_fb_codegen_c@@Base+0x1184>
   15f98:	b	16740 <__flatcc_fb_codegen_c@@Base+0x1178>
   15f9c:	b	160e0 <__flatcc_fb_codegen_c@@Base+0xb18>
   15fa0:	b	160e0 <__flatcc_fb_codegen_c@@Base+0xb18>
   15fa4:	b	16728 <__flatcc_fb_codegen_c@@Base+0x1160>
   15fa8:	b	1671c <__flatcc_fb_codegen_c@@Base+0x1154>
   15fac:	b	16710 <__flatcc_fb_codegen_c@@Base+0x1148>
   15fb0:	b	16704 <__flatcc_fb_codegen_c@@Base+0x113c>
   15fb4:	b	166f8 <__flatcc_fb_codegen_c@@Base+0x1130>
   15fb8:	b	16734 <__flatcc_fb_codegen_c@@Base+0x116c>
   15fbc:	cmp	r3, #4
   15fc0:	ldrd	r2, [r4, #96]	; 0x60
   15fc4:	ldr	r0, [r5, #204]	; 0xcc
   15fc8:	strd	r2, [sp]
   15fcc:	beq	16394 <__flatcc_fb_codegen_c@@Base+0xdcc>
   15fd0:	ldr	r3, [sp, #44]	; 0x2c
   15fd4:	mov	r2, r5
   15fd8:	str	r9, [sp, #8]
   15fdc:	ldr	r1, [pc, #2888]	; 16b2c <__flatcc_fb_codegen_c@@Base+0x1564>
   15fe0:	str	r8, [sp, #12]
   15fe4:	str	r3, [sp, #16]
   15fe8:	ldr	r3, [sp, #56]	; 0x38
   15fec:	add	r1, pc, r1
   15ff0:	str	r3, [sp, #20]
   15ff4:	str	r6, [sp, #24]
   15ff8:	bl	13f58 <fprintf@plt>
   15ffc:	ldrh	r3, [r4, #72]	; 0x48
   16000:	tst	r3, #128	; 0x80
   16004:	bne	15f14 <__flatcc_fb_codegen_c@@Base+0x94c>
   16008:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1600c:	ldr	r1, [sp, #44]	; 0x2c
   16010:	mov	r3, r5
   16014:	mov	r2, r5
   16018:	str	r9, [sp, #8]
   1601c:	str	r8, [sp, #12]
   16020:	str	r1, [sp, #16]
   16024:	ldr	r1, [sp, #56]	; 0x38
   16028:	str	r6, [sp, #24]
   1602c:	str	r1, [sp, #20]
   16030:	ldr	r1, [pc, #2808]	; 16b30 <__flatcc_fb_codegen_c@@Base+0x1568>
   16034:	ldrd	r6, [r4, #96]	; 0x60
   16038:	add	r1, pc, r1
   1603c:	strd	r6, [sp]
   16040:	ldr	r0, [r5, #204]	; 0xcc
   16044:	bl	13f58 <fprintf@plt>
   16048:	ldrh	r3, [r4, #72]	; 0x48
   1604c:	tst	r3, #128	; 0x80
   16050:	bne	15f14 <__flatcc_fb_codegen_c@@Base+0x94c>
   16054:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16058:	ldr	r3, [sp, #44]	; 0x2c
   1605c:	mov	r2, r5
   16060:	str	r9, [sp, #8]
   16064:	ldr	r1, [pc, #2760]	; 16b34 <__flatcc_fb_codegen_c@@Base+0x156c>
   16068:	str	r8, [sp, #12]
   1606c:	str	r3, [sp, #16]
   16070:	ldr	r3, [sp, #56]	; 0x38
   16074:	add	r1, pc, r1
   16078:	str	r3, [sp, #20]
   1607c:	str	r6, [sp, #24]
   16080:	ldrd	r6, [r4, #96]	; 0x60
   16084:	b	15efc <__flatcc_fb_codegen_c@@Base+0x934>
   16088:	ldr	r3, [sp, #44]	; 0x2c
   1608c:	mov	r2, r5
   16090:	str	r9, [sp, #8]
   16094:	ldr	r1, [pc, #2716]	; 16b38 <__flatcc_fb_codegen_c@@Base+0x1570>
   16098:	str	r8, [sp, #12]
   1609c:	str	r3, [sp, #16]
   160a0:	ldr	r3, [sp, #56]	; 0x38
   160a4:	add	r1, pc, r1
   160a8:	str	r3, [sp, #20]
   160ac:	str	r6, [sp, #24]
   160b0:	ldrd	r6, [r4, #96]	; 0x60
   160b4:	b	15efc <__flatcc_fb_codegen_c@@Base+0x934>
   160b8:	ldrh	r3, [r4, #56]	; 0x38
   160bc:	ldr	r2, [r2, #40]	; 0x28
   160c0:	sub	r3, r3, #3
   160c4:	cmp	r3, #3
   160c8:	addls	pc, pc, r3, lsl #2
   160cc:	b	17d0c <__flatcc_fb_codegen_c@@Base+0x2744>
   160d0:	b	168f0 <__flatcc_fb_codegen_c@@Base+0x1328>
   160d4:	b	168bc <__flatcc_fb_codegen_c@@Base+0x12f4>
   160d8:	b	16888 <__flatcc_fb_codegen_c@@Base+0x12c0>
   160dc:	b	16854 <__flatcc_fb_codegen_c@@Base+0x128c>
   160e0:	ldr	r3, [pc, #2644]	; 16b3c <__flatcc_fb_codegen_c@@Base+0x1574>
   160e4:	add	r3, pc, r3
   160e8:	ldr	r1, [sp, #44]	; 0x2c
   160ec:	mov	r2, r5
   160f0:	str	r9, [sp, #8]
   160f4:	str	r8, [sp, #12]
   160f8:	str	r1, [sp, #16]
   160fc:	ldr	r1, [pc, #2620]	; 16b40 <__flatcc_fb_codegen_c@@Base+0x1578>
   16100:	str	r5, [sp, #20]
   16104:	str	r3, [sp, #24]
   16108:	str	r6, [sp, #28]
   1610c:	ldrd	r6, [r4, #96]	; 0x60
   16110:	add	r1, pc, r1
   16114:	ldr	r0, [r5, #204]	; 0xcc
   16118:	strd	r6, [sp]
   1611c:	bl	13f58 <fprintf@plt>
   16120:	ldr	r3, [r4, #104]	; 0x68
   16124:	cmp	r3, #0
   16128:	beq	1634c <__flatcc_fb_codegen_c@@Base+0xd84>
   1612c:	str	r3, [sp, #44]	; 0x2c
   16130:	add	r7, sp, #632	; 0x278
   16134:	mov	r2, #220	; 0xdc
   16138:	mov	r1, #0
   1613c:	mov	r0, r7
   16140:	add	r6, sp, #852	; 0x354
   16144:	bl	13f70 <memset@plt>
   16148:	mov	r2, #220	; 0xdc
   1614c:	mov	r0, r6
   16150:	mov	r1, #0
   16154:	bl	13f70 <memset@plt>
   16158:	ldr	r3, [sp, #44]	; 0x2c
   1615c:	ldrh	r2, [r3, #8]
   16160:	cmp	r2, #0
   16164:	bne	1635c <__flatcc_fb_codegen_c@@Base+0xd94>
   16168:	ldr	r8, [pc, #2516]	; 16b44 <__flatcc_fb_codegen_c@@Base+0x157c>
   1616c:	add	r8, pc, r8
   16170:	mov	r1, r3
   16174:	mov	r2, r7
   16178:	ldr	r0, [r3, #12]
   1617c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   16180:	ldr	r3, [sp, #80]	; 0x50
   16184:	ldrh	r3, [r3, #8]
   16188:	cmp	r3, #0
   1618c:	bne	17ab0 <__flatcc_fb_codegen_c@@Base+0x24e8>
   16190:	ldr	r3, [sp, #80]	; 0x50
   16194:	mov	r2, r6
   16198:	mov	r1, r3
   1619c:	ldr	r0, [r3, #12]
   161a0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   161a4:	ldr	ip, [r4, #4]
   161a8:	mov	r3, r6
   161ac:	mov	r2, r5
   161b0:	str	r7, [sp, #8]
   161b4:	str	r8, [sp, #12]
   161b8:	ldr	r1, [pc, #2440]	; 16b48 <__flatcc_fb_codegen_c@@Base+0x1580>
   161bc:	ldr	lr, [ip]
   161c0:	ldr	r0, [r5, #204]	; 0xcc
   161c4:	add	r1, pc, r1
   161c8:	str	lr, [sp, #4]
   161cc:	ldr	ip, [ip, #4]
   161d0:	str	ip, [sp]
   161d4:	bl	13f58 <fprintf@plt>
   161d8:	ldrh	r3, [r4, #72]	; 0x48
   161dc:	tst	r3, #128	; 0x80
   161e0:	bne	15f14 <__flatcc_fb_codegen_c@@Base+0x94c>
   161e4:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   161e8:	ldr	r1, [sp, #44]	; 0x2c
   161ec:	mov	r3, r8
   161f0:	mov	r2, r9
   161f4:	str	r1, [sp]
   161f8:	ldr	r1, [pc, #2380]	; 16b4c <__flatcc_fb_codegen_c@@Base+0x1584>
   161fc:	ldr	r0, [r5, #204]	; 0xcc
   16200:	add	r1, pc, r1
   16204:	bl	13f58 <fprintf@plt>
   16208:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1620c:	ldr	r1, [pc, #2364]	; 16b50 <__flatcc_fb_codegen_c@@Base+0x1588>
   16210:	mov	r3, r9
   16214:	mov	r2, r5
   16218:	str	r8, [sp]
   1621c:	ldr	r0, [sp, #44]	; 0x2c
   16220:	add	r1, pc, r1
   16224:	str	r0, [sp, #4]
   16228:	ldr	r0, [r5, #204]	; 0xcc
   1622c:	bl	13f58 <fprintf@plt>
   16230:	ldrh	r3, [r4, #72]	; 0x48
   16234:	tst	r3, #128	; 0x80
   16238:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1623c:	ldr	r3, [sp, #60]	; 0x3c
   16240:	ldr	r0, [r5, #204]	; 0xcc
   16244:	cmp	r3, #0
   16248:	bne	163d4 <__flatcc_fb_codegen_c@@Base+0xe0c>
   1624c:	ldr	r1, [pc, #2304]	; 16b54 <__flatcc_fb_codegen_c@@Base+0x158c>
   16250:	mov	r3, r9
   16254:	mov	r2, r5
   16258:	ldr	ip, [sp, #44]	; 0x2c
   1625c:	add	r1, pc, r1
   16260:	stm	sp, {r8, ip}
   16264:	bl	13f58 <fprintf@plt>
   16268:	ldr	r3, [r5, #212]	; 0xd4
   1626c:	ldr	r3, [r3, #136]	; 0x88
   16270:	cmp	r3, #0
   16274:	beq	1629c <__flatcc_fb_codegen_c@@Base+0xcd4>
   16278:	ldr	r1, [pc, #2264]	; 16b58 <__flatcc_fb_codegen_c@@Base+0x1590>
   1627c:	mov	r3, r9
   16280:	mov	r2, r5
   16284:	str	r8, [sp]
   16288:	ldr	r0, [sp, #44]	; 0x2c
   1628c:	add	r1, pc, r1
   16290:	str	r0, [sp, #4]
   16294:	ldr	r0, [r5, #204]	; 0xcc
   16298:	bl	13f58 <fprintf@plt>
   1629c:	ldr	r1, [pc, #2232]	; 16b5c <__flatcc_fb_codegen_c@@Base+0x1594>
   162a0:	mov	r3, r9
   162a4:	mov	r2, r5
   162a8:	str	r8, [sp]
   162ac:	ldr	r6, [sp, #44]	; 0x2c
   162b0:	add	r1, pc, r1
   162b4:	str	r6, [sp, #4]
   162b8:	ldr	r0, [r5, #204]	; 0xcc
   162bc:	bl	13f58 <fprintf@plt>
   162c0:	ldr	r1, [pc, #2200]	; 16b60 <__flatcc_fb_codegen_c@@Base+0x1598>
   162c4:	mov	r3, r9
   162c8:	mov	r2, r5
   162cc:	str	r8, [sp]
   162d0:	str	r6, [sp, #4]
   162d4:	ldr	r0, [r5, #204]	; 0xcc
   162d8:	add	r1, pc, r1
   162dc:	bl	13f58 <fprintf@plt>
   162e0:	ldr	r3, [r5, #212]	; 0xd4
   162e4:	ldr	r3, [r3, #136]	; 0x88
   162e8:	cmp	r3, #0
   162ec:	bne	1704c <__flatcc_fb_codegen_c@@Base+0x1a84>
   162f0:	mov	r3, #1
   162f4:	str	r3, [sp, #60]	; 0x3c
   162f8:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   162fc:	ldr	r3, [pc, #2144]	; 16b64 <__flatcc_fb_codegen_c@@Base+0x159c>
   16300:	mov	r2, r5
   16304:	str	r9, [sp, #8]
   16308:	ldr	r1, [sp, #44]	; 0x2c
   1630c:	str	r8, [sp, #12]
   16310:	add	r3, pc, r3
   16314:	str	r1, [sp, #16]
   16318:	ldr	r1, [pc, #2120]	; 16b68 <__flatcc_fb_codegen_c@@Base+0x15a0>
   1631c:	str	r5, [sp, #20]
   16320:	str	r3, [sp, #24]
   16324:	str	r6, [sp, #28]
   16328:	ldrd	r6, [r4, #96]	; 0x60
   1632c:	add	r1, pc, r1
   16330:	strd	r6, [sp]
   16334:	ldr	r0, [r5, #204]	; 0xcc
   16338:	bl	13f58 <fprintf@plt>
   1633c:	ldr	r3, [r4, #104]	; 0x68
   16340:	cmp	r3, #0
   16344:	str	r3, [sp, #44]	; 0x2c
   16348:	bne	16130 <__flatcc_fb_codegen_c@@Base+0xb68>
   1634c:	ldrh	r3, [r4, #72]	; 0x48
   16350:	tst	r3, #128	; 0x80
   16354:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16358:	b	15f14 <__flatcc_fb_codegen_c@@Base+0x94c>
   1635c:	cmp	r2, #1
   16360:	bne	17ad4 <__flatcc_fb_codegen_c@@Base+0x250c>
   16364:	ldr	r8, [pc, #2048]	; 16b6c <__flatcc_fb_codegen_c@@Base+0x15a4>
   16368:	add	r8, pc, r8
   1636c:	b	16170 <__flatcc_fb_codegen_c@@Base+0xba8>
   16370:	ldrh	r3, [r4, #56]	; 0x38
   16374:	sub	r3, r3, #3
   16378:	cmp	r3, #3
   1637c:	addls	pc, pc, r3, lsl #2
   16380:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   16384:	b	164e8 <__flatcc_fb_codegen_c@@Base+0xf20>
   16388:	b	16498 <__flatcc_fb_codegen_c@@Base+0xed0>
   1638c:	b	16448 <__flatcc_fb_codegen_c@@Base+0xe80>
   16390:	b	17134 <__flatcc_fb_codegen_c@@Base+0x1b6c>
   16394:	ldr	ip, [sp, #44]	; 0x2c
   16398:	mov	r3, r5
   1639c:	mov	r2, r5
   163a0:	str	r9, [sp, #8]
   163a4:	ldr	r1, [pc, #1988]	; 16b70 <__flatcc_fb_codegen_c@@Base+0x15a8>
   163a8:	str	r8, [sp, #12]
   163ac:	str	ip, [sp, #16]
   163b0:	ldr	ip, [sp, #56]	; 0x38
   163b4:	add	r1, pc, r1
   163b8:	str	ip, [sp, #20]
   163bc:	str	r6, [sp, #24]
   163c0:	bl	13f58 <fprintf@plt>
   163c4:	ldrh	r3, [r4, #72]	; 0x48
   163c8:	tst	r3, #128	; 0x80
   163cc:	bne	15f14 <__flatcc_fb_codegen_c@@Base+0x94c>
   163d0:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   163d4:	mov	r3, r0
   163d8:	ldr	r0, [pc, #1940]	; 16b74 <__flatcc_fb_codegen_c@@Base+0x15ac>
   163dc:	mov	r2, #66	; 0x42
   163e0:	mov	r1, #1
   163e4:	add	r0, pc, r0
   163e8:	bl	13eec <fwrite@plt>
   163ec:	ldr	r1, [pc, #1924]	; 16b78 <__flatcc_fb_codegen_c@@Base+0x15b0>
   163f0:	mov	r3, r9
   163f4:	mov	r2, r5
   163f8:	str	r8, [sp]
   163fc:	ldr	r0, [sp, #44]	; 0x2c
   16400:	add	r1, pc, r1
   16404:	str	r0, [sp, #4]
   16408:	ldr	r0, [r5, #204]	; 0xcc
   1640c:	bl	13f58 <fprintf@plt>
   16410:	ldr	r3, [r5, #212]	; 0xd4
   16414:	ldr	r3, [r3, #136]	; 0x88
   16418:	cmp	r3, #0
   1641c:	beq	162f0 <__flatcc_fb_codegen_c@@Base+0xd28>
   16420:	ldr	r1, [pc, #1876]	; 16b7c <__flatcc_fb_codegen_c@@Base+0x15b4>
   16424:	mov	r3, r9
   16428:	mov	r2, r5
   1642c:	str	r8, [sp]
   16430:	ldr	r0, [sp, #44]	; 0x2c
   16434:	add	r1, pc, r1
   16438:	str	r0, [sp, #4]
   1643c:	ldr	r0, [r5, #204]	; 0xcc
   16440:	bl	13f58 <fprintf@plt>
   16444:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16448:	ldr	r3, [pc, #1840]	; 16b80 <__flatcc_fb_codegen_c@@Base+0x15b8>
   1644c:	str	r5, [sp, #64]	; 0x40
   16450:	ldr	r2, [pc, #1836]	; 16b84 <__flatcc_fb_codegen_c@@Base+0x15bc>
   16454:	add	r3, pc, r3
   16458:	add	r2, pc, r2
   1645c:	str	r3, [sp, #68]	; 0x44
   16460:	mov	r3, #4
   16464:	str	r2, [sp, #76]	; 0x4c
   16468:	cmp	r3, #8
   1646c:	addls	pc, pc, r3, lsl #2
   16470:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   16474:	b	1721c <__flatcc_fb_codegen_c@@Base+0x1c54>
   16478:	b	17210 <__flatcc_fb_codegen_c@@Base+0x1c48>
   1647c:	b	17204 <__flatcc_fb_codegen_c@@Base+0x1c3c>
   16480:	b	16ab0 <__flatcc_fb_codegen_c@@Base+0x14e8>
   16484:	b	16ab0 <__flatcc_fb_codegen_c@@Base+0x14e8>
   16488:	b	171ec <__flatcc_fb_codegen_c@@Base+0x1c24>
   1648c:	b	171e0 <__flatcc_fb_codegen_c@@Base+0x1c18>
   16490:	b	171d4 <__flatcc_fb_codegen_c@@Base+0x1c0c>
   16494:	b	171f8 <__flatcc_fb_codegen_c@@Base+0x1c30>
   16498:	ldr	r3, [pc, #1768]	; 16b88 <__flatcc_fb_codegen_c@@Base+0x15c0>
   1649c:	str	r5, [sp, #64]	; 0x40
   164a0:	ldr	r2, [pc, #1764]	; 16b8c <__flatcc_fb_codegen_c@@Base+0x15c4>
   164a4:	add	r3, pc, r3
   164a8:	add	r2, pc, r2
   164ac:	str	r3, [sp, #68]	; 0x44
   164b0:	mov	r3, #4
   164b4:	str	r2, [sp, #76]	; 0x4c
   164b8:	cmp	r3, #8
   164bc:	addls	pc, pc, r3, lsl #2
   164c0:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   164c4:	b	171c8 <__flatcc_fb_codegen_c@@Base+0x1c00>
   164c8:	b	171bc <__flatcc_fb_codegen_c@@Base+0x1bf4>
   164cc:	b	171b0 <__flatcc_fb_codegen_c@@Base+0x1be8>
   164d0:	b	16f74 <__flatcc_fb_codegen_c@@Base+0x19ac>
   164d4:	b	16f74 <__flatcc_fb_codegen_c@@Base+0x19ac>
   164d8:	b	171a4 <__flatcc_fb_codegen_c@@Base+0x1bdc>
   164dc:	b	17198 <__flatcc_fb_codegen_c@@Base+0x1bd0>
   164e0:	b	1718c <__flatcc_fb_codegen_c@@Base+0x1bc4>
   164e4:	b	17370 <__flatcc_fb_codegen_c@@Base+0x1da8>
   164e8:	ldr	r3, [pc, #1696]	; 16b90 <__flatcc_fb_codegen_c@@Base+0x15c8>
   164ec:	str	r5, [sp, #64]	; 0x40
   164f0:	add	r3, pc, r3
   164f4:	str	r3, [sp, #68]	; 0x44
   164f8:	ldr	r3, [pc, #1684]	; 16b94 <__flatcc_fb_codegen_c@@Base+0x15cc>
   164fc:	add	r3, pc, r3
   16500:	str	r3, [sp, #76]	; 0x4c
   16504:	ldr	r1, [pc, #1676]	; 16b98 <__flatcc_fb_codegen_c@@Base+0x15d0>
   16508:	add	r3, sp, #92	; 0x5c
   1650c:	mov	r0, r3
   16510:	str	r3, [sp, #72]	; 0x48
   16514:	ldrd	r2, [r4, #48]	; 0x30
   16518:	add	r1, pc, r1
   1651c:	bl	13fc4 <sprintf@plt>
   16520:	ldr	r3, [sp, #44]	; 0x2c
   16524:	mov	r2, r5
   16528:	str	r9, [sp, #8]
   1652c:	ldr	r1, [pc, #1640]	; 16b9c <__flatcc_fb_codegen_c@@Base+0x15d4>
   16530:	str	r8, [sp, #12]
   16534:	str	r3, [sp, #16]
   16538:	ldr	r3, [sp, #76]	; 0x4c
   1653c:	str	r5, [sp, #20]
   16540:	add	r1, pc, r1
   16544:	str	r3, [sp, #24]
   16548:	ldr	r3, [sp, #64]	; 0x40
   1654c:	str	r3, [sp, #28]
   16550:	ldr	r3, [sp, #68]	; 0x44
   16554:	str	r3, [sp, #32]
   16558:	ldr	r3, [sp, #72]	; 0x48
   1655c:	str	r3, [sp, #36]	; 0x24
   16560:	ldrd	r6, [r4, #96]	; 0x60
   16564:	strd	r6, [sp]
   16568:	ldr	r0, [r5, #204]	; 0xcc
   1656c:	bl	13f58 <fprintf@plt>
   16570:	ldr	r3, [r5, #212]	; 0xd4
   16574:	ldr	r3, [r3, #32]
   16578:	cmp	r3, #0
   1657c:	bne	165c0 <__flatcc_fb_codegen_c@@Base+0xff8>
   16580:	ldrh	r3, [r4, #72]	; 0x48
   16584:	tst	r3, #128	; 0x80
   16588:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1658c:	ldr	r0, [sp, #44]	; 0x2c
   16590:	mov	r3, r9
   16594:	mov	r2, r5
   16598:	str	r8, [sp]
   1659c:	ldr	r1, [pc, #1532]	; 16ba0 <__flatcc_fb_codegen_c@@Base+0x15d8>
   165a0:	str	r0, [sp, #4]
   165a4:	ldr	r0, [sp, #64]	; 0x40
   165a8:	add	r1, pc, r1
   165ac:	str	r0, [sp, #8]
   165b0:	ldr	r0, [sp, #68]	; 0x44
   165b4:	str	r0, [sp, #12]
   165b8:	ldr	r0, [r5, #204]	; 0xcc
   165bc:	bl	13f58 <fprintf@plt>
   165c0:	ldrh	r3, [r4, #72]	; 0x48
   165c4:	tst	r3, #128	; 0x80
   165c8:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   165cc:	ldr	r3, [sp, #60]	; 0x3c
   165d0:	cmp	r3, #0
   165d4:	ldr	r3, [r5, #204]	; 0xcc
   165d8:	bne	16fa0 <__flatcc_fb_codegen_c@@Base+0x19d8>
   165dc:	ldr	r0, [pc, #1472]	; 16ba4 <__flatcc_fb_codegen_c@@Base+0x15dc>
   165e0:	mov	r2, #61	; 0x3d
   165e4:	mov	r1, #1
   165e8:	add	r0, pc, r0
   165ec:	bl	13eec <fwrite@plt>
   165f0:	ldr	r0, [sp, #44]	; 0x2c
   165f4:	mov	r3, r9
   165f8:	mov	r2, r5
   165fc:	str	r8, [sp]
   16600:	ldr	r1, [pc, #1440]	; 16ba8 <__flatcc_fb_codegen_c@@Base+0x15e0>
   16604:	str	r0, [sp, #4]
   16608:	ldr	r0, [sp, #64]	; 0x40
   1660c:	add	r1, pc, r1
   16610:	str	r0, [sp, #8]
   16614:	ldr	r0, [sp, #68]	; 0x44
   16618:	str	r0, [sp, #12]
   1661c:	ldr	r0, [r5, #204]	; 0xcc
   16620:	bl	13f58 <fprintf@plt>
   16624:	ldr	r3, [r5, #212]	; 0xd4
   16628:	ldr	r3, [r3, #136]	; 0x88
   1662c:	cmp	r3, #0
   16630:	beq	1666c <__flatcc_fb_codegen_c@@Base+0x10a4>
   16634:	ldr	r0, [sp, #44]	; 0x2c
   16638:	mov	r3, r9
   1663c:	mov	r2, r5
   16640:	str	r8, [sp]
   16644:	ldr	r1, [pc, #1376]	; 16bac <__flatcc_fb_codegen_c@@Base+0x15e4>
   16648:	str	r0, [sp, #4]
   1664c:	ldr	r0, [sp, #64]	; 0x40
   16650:	add	r1, pc, r1
   16654:	str	r0, [sp, #8]
   16658:	ldr	r0, [sp, #68]	; 0x44
   1665c:	str	r0, [sp, #12]
   16660:	str	r5, [sp, #16]
   16664:	ldr	r0, [r5, #204]	; 0xcc
   16668:	bl	13f58 <fprintf@plt>
   1666c:	ldr	r1, [pc, #1340]	; 16bb0 <__flatcc_fb_codegen_c@@Base+0x15e8>
   16670:	mov	r3, r9
   16674:	mov	r2, r5
   16678:	str	r8, [sp]
   1667c:	ldr	r0, [sp, #44]	; 0x2c
   16680:	ldrd	r6, [sp, #64]	; 0x40
   16684:	add	r1, pc, r1
   16688:	stmib	sp, {r0, r6, r7}
   1668c:	ldr	r0, [r5, #204]	; 0xcc
   16690:	bl	13f58 <fprintf@plt>
   16694:	ldr	r1, [pc, #1304]	; 16bb4 <__flatcc_fb_codegen_c@@Base+0x15ec>
   16698:	mov	r3, r9
   1669c:	mov	r2, r5
   166a0:	str	r8, [sp]
   166a4:	ldr	r0, [sp, #44]	; 0x2c
   166a8:	add	r1, pc, r1
   166ac:	stmib	sp, {r0, r6, r7}
   166b0:	ldr	r0, [r5, #204]	; 0xcc
   166b4:	bl	13f58 <fprintf@plt>
   166b8:	ldr	r3, [r5, #212]	; 0xd4
   166bc:	ldr	r3, [r3, #136]	; 0x88
   166c0:	cmp	r3, #0
   166c4:	beq	162f0 <__flatcc_fb_codegen_c@@Base+0xd28>
   166c8:	ldr	r1, [pc, #1256]	; 16bb8 <__flatcc_fb_codegen_c@@Base+0x15f0>
   166cc:	mov	r3, r9
   166d0:	mov	r2, r9
   166d4:	str	r8, [sp]
   166d8:	add	r1, pc, r1
   166dc:	mov	r0, #1
   166e0:	str	r0, [sp, #60]	; 0x3c
   166e4:	ldr	r0, [sp, #44]	; 0x2c
   166e8:	str	r0, [sp, #4]
   166ec:	ldr	r0, [r5, #204]	; 0xcc
   166f0:	bl	13f58 <fprintf@plt>
   166f4:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   166f8:	ldr	r3, [pc, #1212]	; 16bbc <__flatcc_fb_codegen_c@@Base+0x15f4>
   166fc:	add	r3, pc, r3
   16700:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16704:	ldr	r3, [pc, #1204]	; 16bc0 <__flatcc_fb_codegen_c@@Base+0x15f8>
   16708:	add	r3, pc, r3
   1670c:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16710:	ldr	r3, [pc, #1196]	; 16bc4 <__flatcc_fb_codegen_c@@Base+0x15fc>
   16714:	add	r3, pc, r3
   16718:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   1671c:	ldr	r3, [pc, #1188]	; 16bc8 <__flatcc_fb_codegen_c@@Base+0x1600>
   16720:	add	r3, pc, r3
   16724:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16728:	ldr	r3, [pc, #1180]	; 16bcc <__flatcc_fb_codegen_c@@Base+0x1604>
   1672c:	add	r3, pc, r3
   16730:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16734:	ldr	r3, [pc, #1172]	; 16bd0 <__flatcc_fb_codegen_c@@Base+0x1608>
   16738:	add	r3, pc, r3
   1673c:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16740:	ldr	r3, [pc, #1164]	; 16bd4 <__flatcc_fb_codegen_c@@Base+0x160c>
   16744:	add	r3, pc, r3
   16748:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   1674c:	ldr	r3, [pc, #1156]	; 16bd8 <__flatcc_fb_codegen_c@@Base+0x1610>
   16750:	add	r3, pc, r3
   16754:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb20>
   16758:	ldrh	r2, [r4, #56]	; 0x38
   1675c:	sub	r2, r2, #3
   16760:	cmp	r2, #3
   16764:	addls	pc, pc, r2, lsl #2
   16768:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   1676c:	b	173d0 <__flatcc_fb_codegen_c@@Base+0x1e08>
   16770:	b	173b0 <__flatcc_fb_codegen_c@@Base+0x1de8>
   16774:	b	17390 <__flatcc_fb_codegen_c@@Base+0x1dc8>
   16778:	b	1737c <__flatcc_fb_codegen_c@@Base+0x1db4>
   1677c:	ldrh	r2, [r4, #56]	; 0x38
   16780:	sub	r2, r2, #3
   16784:	cmp	r2, #3
   16788:	addls	pc, pc, r2, lsl #2
   1678c:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   16790:	b	173ec <__flatcc_fb_codegen_c@@Base+0x1e24>
   16794:	b	1734c <__flatcc_fb_codegen_c@@Base+0x1d84>
   16798:	b	17324 <__flatcc_fb_codegen_c@@Base+0x1d5c>
   1679c:	b	17308 <__flatcc_fb_codegen_c@@Base+0x1d40>
   167a0:	ldrh	r1, [r4, #56]	; 0x38
   167a4:	sub	r1, r1, #3
   167a8:	cmp	r1, #3
   167ac:	addls	pc, pc, r1, lsl #2
   167b0:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   167b4:	b	175cc <__flatcc_fb_codegen_c@@Base+0x2004>
   167b8:	b	175a4 <__flatcc_fb_codegen_c@@Base+0x1fdc>
   167bc:	b	1757c <__flatcc_fb_codegen_c@@Base+0x1fb4>
   167c0:	b	17104 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   167c4:	ldrh	r1, [r4, #56]	; 0x38
   167c8:	sub	r1, r1, #3
   167cc:	cmp	r1, #3
   167d0:	addls	pc, pc, r1, lsl #2
   167d4:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   167d8:	b	17610 <__flatcc_fb_codegen_c@@Base+0x2048>
   167dc:	b	175e8 <__flatcc_fb_codegen_c@@Base+0x2020>
   167e0:	b	17554 <__flatcc_fb_codegen_c@@Base+0x1f8c>
   167e4:	b	170d4 <__flatcc_fb_codegen_c@@Base+0x1b0c>
   167e8:	ldrh	r1, [r4, #56]	; 0x38
   167ec:	sub	r1, r1, #3
   167f0:	cmp	r1, #3
   167f4:	addls	pc, pc, r1, lsl #2
   167f8:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   167fc:	b	17490 <__flatcc_fb_codegen_c@@Base+0x1ec8>
   16800:	b	17468 <__flatcc_fb_codegen_c@@Base+0x1ea0>
   16804:	b	17440 <__flatcc_fb_codegen_c@@Base+0x1e78>
   16808:	b	17088 <__flatcc_fb_codegen_c@@Base+0x1ac0>
   1680c:	ldrh	r2, [r4, #56]	; 0x38
   16810:	sub	r2, r2, #3
   16814:	cmp	r2, #3
   16818:	addls	pc, pc, r2, lsl #2
   1681c:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   16820:	b	1762c <__flatcc_fb_codegen_c@@Base+0x2064>
   16824:	b	172e8 <__flatcc_fb_codegen_c@@Base+0x1d20>
   16828:	b	172c8 <__flatcc_fb_codegen_c@@Base+0x1d00>
   1682c:	b	17228 <__flatcc_fb_codegen_c@@Base+0x1c60>
   16830:	ldrh	r1, [r4, #56]	; 0x38
   16834:	sub	r1, r1, #3
   16838:	cmp	r1, #3
   1683c:	addls	pc, pc, r1, lsl #2
   16840:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   16844:	b	17538 <__flatcc_fb_codegen_c@@Base+0x1f70>
   16848:	b	17510 <__flatcc_fb_codegen_c@@Base+0x1f48>
   1684c:	b	174e8 <__flatcc_fb_codegen_c@@Base+0x1f20>
   16850:	b	1715c <__flatcc_fb_codegen_c@@Base+0x1b94>
   16854:	sub	r2, r2, #1
   16858:	cmp	r2, #8
   1685c:	addls	pc, pc, r2, lsl #2
   16860:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   16864:	b	17814 <__flatcc_fb_codegen_c@@Base+0x224c>
   16868:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2258>
   1686c:	b	178a4 <__flatcc_fb_codegen_c@@Base+0x22dc>
   16870:	b	1769c <__flatcc_fb_codegen_c@@Base+0x20d4>
   16874:	b	1769c <__flatcc_fb_codegen_c@@Base+0x20d4>
   16878:	b	17898 <__flatcc_fb_codegen_c@@Base+0x22d0>
   1687c:	b	1782c <__flatcc_fb_codegen_c@@Base+0x2264>
   16880:	b	17838 <__flatcc_fb_codegen_c@@Base+0x2270>
   16884:	b	1788c <__flatcc_fb_codegen_c@@Base+0x22c4>
   16888:	sub	r2, r2, #1
   1688c:	cmp	r2, #8
   16890:	addls	pc, pc, r2, lsl #2
   16894:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   16898:	b	17844 <__flatcc_fb_codegen_c@@Base+0x227c>
   1689c:	b	17850 <__flatcc_fb_codegen_c@@Base+0x2288>
   168a0:	b	178bc <__flatcc_fb_codegen_c@@Base+0x22f4>
   168a4:	b	176c4 <__flatcc_fb_codegen_c@@Base+0x20fc>
   168a8:	b	176c4 <__flatcc_fb_codegen_c@@Base+0x20fc>
   168ac:	b	17868 <__flatcc_fb_codegen_c@@Base+0x22a0>
   168b0:	b	178c8 <__flatcc_fb_codegen_c@@Base+0x2300>
   168b4:	b	178d4 <__flatcc_fb_codegen_c@@Base+0x230c>
   168b8:	b	1785c <__flatcc_fb_codegen_c@@Base+0x2294>
   168bc:	sub	r2, r2, #1
   168c0:	cmp	r2, #8
   168c4:	addls	pc, pc, r2, lsl #2
   168c8:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   168cc:	b	177e4 <__flatcc_fb_codegen_c@@Base+0x221c>
   168d0:	b	177f0 <__flatcc_fb_codegen_c@@Base+0x2228>
   168d4:	b	178b0 <__flatcc_fb_codegen_c@@Base+0x22e8>
   168d8:	b	17670 <__flatcc_fb_codegen_c@@Base+0x20a8>
   168dc:	b	17670 <__flatcc_fb_codegen_c@@Base+0x20a8>
   168e0:	b	17880 <__flatcc_fb_codegen_c@@Base+0x22b8>
   168e4:	b	177fc <__flatcc_fb_codegen_c@@Base+0x2234>
   168e8:	b	17808 <__flatcc_fb_codegen_c@@Base+0x2240>
   168ec:	b	17874 <__flatcc_fb_codegen_c@@Base+0x22ac>
   168f0:	cmp	r2, #11
   168f4:	beq	17414 <__flatcc_fb_codegen_c@@Base+0x1e4c>
   168f8:	ldr	r1, [pc, #732]	; 16bdc <__flatcc_fb_codegen_c@@Base+0x1614>
   168fc:	add	r3, sp, #92	; 0x5c
   16900:	mov	r0, r3
   16904:	str	r3, [sp, #72]	; 0x48
   16908:	ldrd	r2, [r4, #48]	; 0x30
   1690c:	add	r1, pc, r1
   16910:	bl	13fc4 <sprintf@plt>
   16914:	ldr	r3, [sp, #44]	; 0x2c
   16918:	mov	r2, r5
   1691c:	str	r9, [sp, #8]
   16920:	ldr	r1, [pc, #696]	; 16be0 <__flatcc_fb_codegen_c@@Base+0x1618>
   16924:	str	r8, [sp, #12]
   16928:	str	r3, [sp, #16]
   1692c:	ldr	r3, [sp, #56]	; 0x38
   16930:	add	r1, pc, r1
   16934:	str	r3, [sp, #20]
   16938:	str	r3, [sp, #24]
   1693c:	ldr	r3, [sp, #72]	; 0x48
   16940:	str	r3, [sp, #28]
   16944:	ldrd	r6, [r4, #96]	; 0x60
   16948:	strd	r6, [sp]
   1694c:	ldr	r0, [r5, #204]	; 0xcc
   16950:	bl	13f58 <fprintf@plt>
   16954:	ldr	r3, [r5, #212]	; 0xd4
   16958:	ldr	r3, [r3, #32]
   1695c:	cmp	r3, #0
   16960:	bne	1699c <__flatcc_fb_codegen_c@@Base+0x13d4>
   16964:	ldrh	r3, [r4, #72]	; 0x48
   16968:	tst	r3, #128	; 0x80
   1696c:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16970:	ldr	r0, [sp, #44]	; 0x2c
   16974:	mov	r3, r9
   16978:	mov	r2, r5
   1697c:	str	r8, [sp]
   16980:	ldr	r1, [pc, #604]	; 16be4 <__flatcc_fb_codegen_c@@Base+0x161c>
   16984:	str	r0, [sp, #4]
   16988:	ldr	r0, [sp, #56]	; 0x38
   1698c:	add	r1, pc, r1
   16990:	str	r0, [sp, #8]
   16994:	ldr	r0, [r5, #204]	; 0xcc
   16998:	bl	13f58 <fprintf@plt>
   1699c:	ldrh	r3, [r4, #72]	; 0x48
   169a0:	tst	r3, #128	; 0x80
   169a4:	beq	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   169a8:	ldr	r3, [sp, #60]	; 0x3c
   169ac:	cmp	r3, #0
   169b0:	ldr	r3, [r5, #204]	; 0xcc
   169b4:	bne	176f0 <__flatcc_fb_codegen_c@@Base+0x2128>
   169b8:	ldr	r0, [pc, #552]	; 16be8 <__flatcc_fb_codegen_c@@Base+0x1620>
   169bc:	mov	r2, #61	; 0x3d
   169c0:	mov	r1, #1
   169c4:	add	r0, pc, r0
   169c8:	bl	13eec <fwrite@plt>
   169cc:	ldr	r0, [sp, #44]	; 0x2c
   169d0:	mov	r3, r9
   169d4:	mov	r2, r5
   169d8:	str	r8, [sp]
   169dc:	ldr	r1, [pc, #520]	; 16bec <__flatcc_fb_codegen_c@@Base+0x1624>
   169e0:	str	r0, [sp, #4]
   169e4:	ldr	r0, [sp, #56]	; 0x38
   169e8:	add	r1, pc, r1
   169ec:	str	r0, [sp, #8]
   169f0:	ldr	r0, [r5, #204]	; 0xcc
   169f4:	bl	13f58 <fprintf@plt>
   169f8:	ldr	r3, [r5, #212]	; 0xd4
   169fc:	ldr	r3, [r3, #136]	; 0x88
   16a00:	cmp	r3, #0
   16a04:	beq	16a38 <__flatcc_fb_codegen_c@@Base+0x1470>
   16a08:	ldr	r0, [sp, #44]	; 0x2c
   16a0c:	mov	r3, r9
   16a10:	mov	r2, r5
   16a14:	str	r8, [sp]
   16a18:	ldr	r1, [pc, #464]	; 16bf0 <__flatcc_fb_codegen_c@@Base+0x1628>
   16a1c:	str	r0, [sp, #4]
   16a20:	ldr	r0, [sp, #56]	; 0x38
   16a24:	add	r1, pc, r1
   16a28:	str	r0, [sp, #8]
   16a2c:	str	r5, [sp, #12]
   16a30:	ldr	r0, [r5, #204]	; 0xcc
   16a34:	bl	13f58 <fprintf@plt>
   16a38:	ldr	r1, [pc, #436]	; 16bf4 <__flatcc_fb_codegen_c@@Base+0x162c>
   16a3c:	mov	r3, r9
   16a40:	mov	r2, r5
   16a44:	str	r8, [sp]
   16a48:	ldr	r7, [sp, #44]	; 0x2c
   16a4c:	ldr	r6, [sp, #56]	; 0x38
   16a50:	add	r1, pc, r1
   16a54:	str	r7, [sp, #4]
   16a58:	str	r6, [sp, #8]
   16a5c:	ldr	r0, [r5, #204]	; 0xcc
   16a60:	bl	13f58 <fprintf@plt>
   16a64:	ldr	r1, [pc, #396]	; 16bf8 <__flatcc_fb_codegen_c@@Base+0x1630>
   16a68:	mov	r3, r9
   16a6c:	mov	r2, r5
   16a70:	str	r8, [sp]
   16a74:	str	r7, [sp, #4]
   16a78:	str	r6, [sp, #8]
   16a7c:	ldr	r0, [r5, #204]	; 0xcc
   16a80:	add	r1, pc, r1
   16a84:	bl	13f58 <fprintf@plt>
   16a88:	ldr	r3, [r5, #212]	; 0xd4
   16a8c:	ldr	r3, [r3, #136]	; 0x88
   16a90:	cmp	r3, #0
   16a94:	beq	162f0 <__flatcc_fb_codegen_c@@Base+0xd28>
   16a98:	ldr	r1, [pc, #348]	; 16bfc <__flatcc_fb_codegen_c@@Base+0x1634>
   16a9c:	mov	r3, r9
   16aa0:	mov	r2, r9
   16aa4:	str	r8, [sp]
   16aa8:	add	r1, pc, r1
   16aac:	b	166dc <__flatcc_fb_codegen_c@@Base+0x1114>
   16ab0:	ldr	r2, [pc, #328]	; 16c00 <__flatcc_fb_codegen_c@@Base+0x1638>
   16ab4:	add	r2, pc, r2
   16ab8:	ldr	r1, [pc, #324]	; 16c04 <__flatcc_fb_codegen_c@@Base+0x163c>
   16abc:	add	r3, sp, #92	; 0x5c
   16ac0:	mov	r0, r3
   16ac4:	ldrd	r6, [r4, #48]	; 0x30
   16ac8:	add	r1, pc, r1
   16acc:	strd	r6, [sp]
   16ad0:	str	r3, [sp, #72]	; 0x48
   16ad4:	bl	13fc4 <sprintf@plt>
   16ad8:	b	16520 <__flatcc_fb_codegen_c@@Base+0xf58>
   16adc:	andeq	r5, r5, ip, ror #9
   16ae0:	andeq	r4, r3, r0, asr #21
   16ae4:	strdeq	sl, [r2], -r8
   16ae8:			; <UNDEFINED> instruction: 0x00034ab8
   16aec:	ldrdeq	sl, [r2], -ip
   16af0:	ldrdeq	r3, [r3], -ip
   16af4:	andeq	fp, r2, ip, ror #13
   16af8:	andeq	sl, r2, r8, asr lr
   16afc:	andeq	sl, r2, r8, ror #28
   16b00:	andeq	sl, r2, r8, lsl #29
   16b04:	ldrdeq	sl, [r2], -r8
   16b08:	muleq	r3, r0, r9
   16b0c:	andeq	r4, r3, r4, lsl #19
   16b10:	andeq	r3, r3, ip, asr #1
   16b14:			; <UNDEFINED> instruction: 0x0002adb0
   16b18:	andeq	sl, r2, r0, lsl #27
   16b1c:	muleq	r2, r4, r5
   16b20:	andeq	fp, r2, r0
   16b24:	andeq	fp, r2, r8, ror r0
   16b28:	andeq	fp, r2, ip, lsr #7
   16b2c:	andeq	fp, r2, ip, ror #4
   16b30:	andeq	fp, r2, r4, lsl r1
   16b34:	andeq	sl, r2, r8, lsr pc
   16b38:	andeq	sl, r2, r4, asr #30
   16b3c:	andeq	sl, r2, r4, ror #18
   16b40:	andeq	sl, r2, r4, lsr #25
   16b44:	andeq	sl, r2, r0, lsl #17
   16b48:	andeq	sl, r2, r8, lsl #25
   16b4c:	muleq	r2, r0, r9
   16b50:	andeq	sl, r2, ip, lsl #25
   16b54:	andeq	sl, r2, ip, ror ip
   16b58:	andeq	fp, r2, r0, ror #1
   16b5c:	andeq	sl, r2, r4, asr ip
   16b60:	andeq	sl, r2, r0, ror #24
   16b64:	ldrdeq	sl, [r2], -r8
   16b68:	andeq	sl, r2, r8, lsl #21
   16b6c:	andeq	sl, r2, ip, lsl #13
   16b70:	andeq	sl, r2, r8, ror #28
   16b74:	andeq	sl, r2, r4, ror r8
   16b78:	ldrdeq	sl, [r2], -r8
   16b7c:	andeq	sl, r2, r8, lsr pc
   16b80:	strdeq	sl, [r2], -ip
   16b84:	andeq	r2, r4, r4, ror r1
   16b88:	andeq	sl, r2, ip, lsr #9
   16b8c:	andeq	r2, r4, r4, lsr #2
   16b90:	andeq	sl, r2, r0, ror #8
   16b94:	ldrdeq	r2, [r4], -r0
   16b98:	andeq	sl, r2, ip, asr #13
   16b9c:	andeq	sl, r2, r8, lsr #13
   16ba0:	andeq	sl, r2, ip, ror r6
   16ba4:			; <UNDEFINED> instruction: 0x0002a6b4
   16ba8:	ldrdeq	sl, [r2], -r0
   16bac:	ldrdeq	sl, [r2], -ip
   16bb0:	andeq	sl, r2, ip, lsl #13
   16bb4:	andeq	sl, r2, r4, lsr #13
   16bb8:			; <UNDEFINED> instruction: 0x0002a6b0
   16bbc:	andeq	sl, r2, r0, lsl #6
   16bc0:	andeq	sl, r2, r0, lsl r3
   16bc4:	andeq	sl, r2, r0, lsl r3
   16bc8:	andeq	sl, r2, r0, lsl r3
   16bcc:	andeq	sl, r2, r0, lsl r3
   16bd0:	ldrdeq	sl, [r2], -r4
   16bd4:	andeq	sl, r2, r0, lsr #6
   16bd8:	andeq	sl, r2, r4, lsl #6
   16bdc:	ldrdeq	sl, [r2], -r8
   16be0:	strdeq	sl, [r2], -r0
   16be4:	ldrdeq	sl, [r2], -r0
   16be8:	ldrdeq	sl, [r2], -r8
   16bec:	andeq	sl, r2, ip, lsr #13
   16bf0:	andeq	sl, r2, r4, ror r9
   16bf4:	andeq	sl, r2, ip, ror r6
   16bf8:	andeq	sl, r2, ip, lsl #13
   16bfc:	andeq	sl, r2, r0, ror #5
   16c00:	andeq	r9, r2, r8, lsl #30
   16c04:	strdeq	sl, [r2], -r8
   16c08:	andeq	r9, r2, r4, asr #20
   16c0c:	andeq	r9, r2, r0, asr #24
   16c10:	andeq	r9, r2, ip, lsr #25
   16c14:	ldrdeq	r9, [r2], -r8
   16c18:	strdeq	r9, [r2], -r4
   16c1c:	andeq	sl, r2, ip, ror #5
   16c20:	andeq	r9, r2, ip, lsr #26
   16c24:	ldrdeq	r9, [r2], -ip
   16c28:	ldrdeq	r9, [r2], -r8
   16c2c:			; <UNDEFINED> instruction: 0x000335b8
   16c30:	andeq	r9, r2, r4, lsr #18
   16c34:	andeq	r9, r2, r0, lsl fp
   16c38:	andeq	r9, r2, r0, lsr #17
   16c3c:	muleq	r2, ip, r8
   16c40:	andeq	r3, r3, ip, ror #10
   16c44:	andeq	r9, r2, r0, ror #17
   16c48:	strdeq	r9, [r2], -r4
   16c4c:	strdeq	r9, [r2], -r0
   16c50:	andeq	r3, r3, ip, lsr r5
   16c54:	andeq	r9, r2, ip, lsl #17
   16c58:	andeq	r9, r2, r0, lsl r8
   16c5c:	andeq	r9, r2, r4, ror r8
   16c60:	andeq	r1, r4, ip, ror r4
   16c64:	andeq	r9, r2, r8, lsr #15
   16c68:	andeq	r9, r2, ip, lsr r8
   16c6c:	andeq	r3, r3, ip, ror #9
   16c70:	muleq	r2, r8, r7
   16c74:	andeq	r9, r2, r4, lsr #16
   16c78:	andeq	r9, r2, ip, lsr r8
   16c7c:	andeq	r9, r2, r8, lsr #16
   16c80:	andeq	r9, r2, r0, lsl r8
   16c84:	andeq	r9, r2, r0, lsr #16
   16c88:	ldrdeq	r9, [r2], -ip
   16c8c:	ldrdeq	r9, [r2], -ip
   16c90:	strdeq	r9, [r2], -r4
   16c94:	andeq	r9, r2, r0, ror #15
   16c98:	andeq	r9, r2, r4, lsr #15
   16c9c:			; <UNDEFINED> instruction: 0x000297bc
   16ca0:	andeq	r9, r2, ip, asr #15
   16ca4:	andeq	r9, r2, r8, lsl #15
   16ca8:	strdeq	r9, [r2], -r4
   16cac:	strdeq	r3, [r3], -r0
   16cb0:	andeq	r9, r2, ip, lsr #14
   16cb4:	ldrdeq	r9, [r2], -r4
   16cb8:	ldrdeq	r9, [r2], -r0
   16cbc:	andeq	r3, r3, r0, asr #7
   16cc0:	andeq	r9, r2, r8, lsl r7
   16cc4:	andeq	r3, r3, r8, lsr #7
   16cc8:	andeq	r9, r2, r4, lsr #14
   16ccc:	andeq	r9, r2, r0, asr r6
   16cd0:	andeq	r3, r3, ip, lsl #7
   16cd4:	andeq	r9, r2, r0, lsr r6
   16cd8:	andeq	r3, r3, ip, ror #6
   16cdc:	andeq	r9, r2, r4, lsl #13
   16ce0:	andeq	r9, r2, r0, lsl #13
   16ce4:	andeq	r9, r2, r8, ror #12
   16ce8:	andeq	r3, r3, ip, lsr #6
   16cec:	andeq	r9, r2, r8, asr r6
   16cf0:	andeq	r9, r2, r8, asr #12
   16cf4:	andeq	r3, r3, r4, lsl #6
   16cf8:	andeq	r9, r2, r8, lsr #12
   16cfc:	andeq	r9, r2, ip, lsr #12
   16d00:	andeq	r9, r2, r8, lsl #12
   16d04:	strdeq	r9, [r2], -r0
   16d08:	andeq	r3, r3, r4, asr #5
   16d0c:	ldrdeq	r9, [r2], -r0
   16d10:	andeq	r3, r3, r4, lsr #5
   16d14:			; <UNDEFINED> instruction: 0x000295b0
   16d18:	andeq	r3, r3, r4, lsl #5
   16d1c:	andeq	r9, r2, r0, lsr #11
   16d20:	andeq	r3, r3, r4, ror #4
   16d24:	muleq	r2, r0, r5
   16d28:			; <UNDEFINED> instruction: 0x000297b4
   16d2c:	andeq	r9, r2, r4, lsr #10
   16d30:	andeq	r3, r3, r0, lsl r2
   16d34:	andeq	r9, r2, r4, lsl r5
   16d38:	strdeq	r9, [r2], -ip
   16d3c:	andeq	r3, r3, r8, ror #3
   16d40:	andeq	r9, r2, ip, ror #9
   16d44:	ldrdeq	r9, [r2], -r4
   16d48:	ldrdeq	r9, [r2], -r0
   16d4c:	muleq	r3, r4, r1
   16d50:	andeq	r9, r2, r0, lsl r7
   16d54:	andeq	r9, r2, r0, lsr #8
   16d58:	andeq	r3, r3, r8, ror #2
   16d5c:	andeq	r9, r2, r4, lsl r4
   16d60:	strdeq	r9, [r2], -r8
   16d64:	andeq	r3, r3, r0, asr #2
   16d68:	andeq	r9, r2, ip, ror #7
   16d6c:	ldrdeq	r9, [r2], -r0
   16d70:	ldrdeq	r9, [r2], -r0
   16d74:	andeq	r9, r2, r0, lsr #8
   16d78:	strdeq	r3, [r3], -ip
   16d7c:	andeq	r9, r2, r0, lsl r4
   16d80:	andeq	r9, r2, ip, ror r3
   16d84:	ldrdeq	r3, [r3], -r4
   16d88:	andeq	r9, r2, ip, ror #6
   16d8c:	andeq	r9, r2, r4, asr r3
   16d90:	andeq	r3, r3, ip, lsr #1
   16d94:	andeq	r9, r2, r4, asr #6
   16d98:	andeq	r9, r2, ip, lsr #6
   16d9c:	andeq	r9, r2, r8, lsr #6
   16da0:	andeq	r9, r2, ip, lsl #7
   16da4:	andeq	r3, r3, r8, rrx
   16da8:	andeq	r9, r2, ip, ror r3
   16dac:	andeq	r9, r2, r4, ror #6
   16db0:	andeq	r9, r2, r0, ror #6
   16db4:	strdeq	r9, [r2], -r0
   16db8:	andeq	r9, r2, r4, ror #5
   16dbc:	andeq	r9, r2, r4, ror #5
   16dc0:	andeq	r3, r3, r0
   16dc4:	andeq	r9, r2, r0, ror #6
   16dc8:	andeq	r9, r2, r8, asr #6
   16dcc:	andeq	r9, r2, r4, asr #10
   16dd0:	andeq	r9, r2, ip, lsl r3
   16dd4:	andeq	r9, r2, r0, lsr #10
   16dd8:	strdeq	r9, [r2], -r4
   16ddc:	andeq	r9, r2, r4, ror #9
   16de0:	andeq	r9, r2, ip, asr r5
   16de4:	andeq	r9, r2, r8, lsl #11
   16de8:	andeq	r9, r2, ip, asr r9
   16dec:	andeq	r9, r2, r4, lsr #24
   16df0:	ldrdeq	r2, [r3], -r0
   16df4:	andeq	r9, r2, r0, asr #3
   16df8:	andeq	r9, r2, ip, ror #3
   16dfc:	ldrdeq	r9, [r2], -r8
   16e00:	andeq	r9, r2, r8, lsr #3
   16e04:	muleq	r2, r0, r1
   16e08:			; <UNDEFINED> instruction: 0x000291bc
   16e0c:	andeq	r9, r2, r8, lsr #3
   16e10:	andeq	r9, r2, r8, ror r1
   16e14:	andeq	r9, r2, r0, ror #2
   16e18:	andeq	r9, r2, ip, lsl #3
   16e1c:	andeq	r9, r2, r0, asr #2
   16e20:	andeq	r9, r2, r4, ror #2
   16e24:	andeq	r9, r2, r8, lsr #2
   16e28:	andeq	r9, r2, ip, asr #2
   16e2c:	andeq	r9, r2, r0, lsl r1
   16e30:	andeq	r9, r2, r4, lsr r1
   16e34:	andeq	r9, r2, ip, lsl r1
   16e38:	andeq	r9, r2, r0, lsl r1
   16e3c:	andeq	r9, r2, r4, lsl #2
   16e40:	andeq	r9, r2, ip, lsl #2
   16e44:	ldrdeq	r9, [r2], -ip
   16e48:	andeq	r9, r2, r4, asr #32
   16e4c:	andeq	r2, r3, r0, ror sp
   16e50:	andeq	r9, r2, r8, lsr r0
   16e54:	andeq	r9, r2, ip, lsl r0
   16e58:	andeq	r2, r3, r8, asr #26
   16e5c:	andeq	r9, r2, r0, lsl r0
   16e60:	strdeq	r8, [r2], -r4
   16e64:	strdeq	r8, [r2], -r4
   16e68:	andeq	r9, r2, ip, lsr #18
   16e6c:	strdeq	r8, [r2], -r4
   16e70:	andeq	r8, r2, ip, lsr pc
   16e74:	andeq	r8, r2, ip, lsl #24
   16e78:	andeq	r1, r3, r0, asr #8
   16e7c:	andeq	r9, r2, r4, asr #15
   16e80:	muleq	r2, ip, ip
   16e84:	andeq	r8, r2, r4, ror #29
   16e88:			; <UNDEFINED> instruction: 0x00028bb4
   16e8c:	andeq	r1, r3, r8, ror #7
   16e90:			; <UNDEFINED> instruction: 0x000297b8
   16e94:	andeq	r8, r2, r4, asr #24
   16e98:	andeq	r8, r2, ip, lsl #29
   16e9c:	andeq	r8, r2, ip, asr fp
   16ea0:	muleq	r3, r0, r3
   16ea4:	andeq	r8, r2, r4, asr lr
   16ea8:	andeq	r8, r2, r0, ror #27
   16eac:	andeq	r8, r2, r0, lsr lr
   16eb0:	andeq	r8, r2, r0, lsl #22
   16eb4:	andeq	r1, r3, r4, lsr r3
   16eb8:	andeq	r8, r2, r0, ror #21
   16ebc:	muleq	r2, r8, fp
   16ec0:	andeq	r9, r2, r0, ror #6
   16ec4:	andeq	r9, r2, ip, lsl #6
   16ec8:	andeq	r8, r2, ip, ror #22
   16ecc:			; <UNDEFINED> instruction: 0x00028db4
   16ed0:	andeq	r8, r2, r4, lsl #21
   16ed4:			; <UNDEFINED> instruction: 0x000312b8
   16ed8:	andeq	r2, r3, ip, lsr #22
   16edc:	andeq	r8, r2, r0, ror lr
   16ee0:	andeq	r8, r2, ip, asr #20
   16ee4:	andeq	r8, r2, r4, lsl #22
   16ee8:	andeq	r8, r2, r4, lsl pc
   16eec:	ldrdeq	r8, [r2], -r0
   16ef0:	ldrdeq	r8, [r2], -r0
   16ef4:			; <UNDEFINED> instruction: 0x00028db4
   16ef8:	andeq	r2, r3, ip, asr #21
   16efc:	andeq	r8, r2, r8, lsr #27
   16f00:	andeq	r8, r2, ip, lsl #27
   16f04:	andeq	r2, r3, r4, lsr #21
   16f08:	andeq	r8, r2, r0, lsl #27
   16f0c:	andeq	r8, r2, r4, ror #26
   16f10:	andeq	r8, r2, r4, ror #26
   16f14:	andeq	r8, r2, r4, ror #26
   16f18:	andeq	r2, r3, r0, ror #20
   16f1c:	andeq	r8, r2, r4, asr sp
   16f20:	andeq	r8, r2, ip, lsr sp
   16f24:	andeq	r2, r3, r8, lsr sl
   16f28:	andeq	r8, r2, ip, lsr #26
   16f2c:	andeq	r8, r2, r4, lsl sp
   16f30:	andeq	r8, r2, r0, lsl sp
   16f34:	andeq	r8, r2, r0, asr ip
   16f38:	ldrdeq	r8, [r2], -ip
   16f3c:	andeq	r8, r2, ip, lsr #24
   16f40:	strdeq	r8, [r2], -ip
   16f44:	andeq	r1, r3, r0, lsr r1
   16f48:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   16f4c:	andeq	r8, r2, r4, lsl #23
   16f50:	ldrdeq	r8, [r2], -r4
   16f54:	andeq	r8, r2, r4, lsr #17
   16f58:	ldrdeq	r1, [r3], -r8
   16f5c:	muleq	r0, ip, r0
   16f60:	andeq	r8, r2, r0, lsr #23
   16f64:	andeq	r8, r2, ip, lsr #22
   16f68:	andeq	r8, r2, ip, ror fp
   16f6c:	andeq	r8, r2, ip, asr #16
   16f70:	andeq	r1, r3, r0, lsl #1
   16f74:	ldr	r2, [pc, #-884]	; 16c08 <__flatcc_fb_codegen_c@@Base+0x1640>
   16f78:	add	r2, pc, r2
   16f7c:	ldr	r1, [pc, #-888]	; 16c0c <__flatcc_fb_codegen_c@@Base+0x1644>
   16f80:	add	r3, sp, #92	; 0x5c
   16f84:	mov	r0, r3
   16f88:	ldrd	r6, [r4, #48]	; 0x30
   16f8c:	add	r1, pc, r1
   16f90:	strd	r6, [sp]
   16f94:	str	r3, [sp, #72]	; 0x48
   16f98:	bl	13fc4 <sprintf@plt>
   16f9c:	b	16520 <__flatcc_fb_codegen_c@@Base+0xf58>
   16fa0:	ldr	r0, [pc, #-920]	; 16c10 <__flatcc_fb_codegen_c@@Base+0x1648>
   16fa4:	mov	r2, #66	; 0x42
   16fa8:	mov	r1, #1
   16fac:	add	r0, pc, r0
   16fb0:	bl	13eec <fwrite@plt>
   16fb4:	ldr	r0, [pc, #-936]	; 16c14 <__flatcc_fb_codegen_c@@Base+0x164c>
   16fb8:	mov	r2, #61	; 0x3d
   16fbc:	mov	r1, #1
   16fc0:	ldr	r3, [r5, #204]	; 0xcc
   16fc4:	add	r0, pc, r0
   16fc8:	bl	13eec <fwrite@plt>
   16fcc:	ldr	r0, [sp, #44]	; 0x2c
   16fd0:	mov	r3, r9
   16fd4:	mov	r2, r5
   16fd8:	str	r8, [sp]
   16fdc:	ldr	r1, [pc, #-972]	; 16c18 <__flatcc_fb_codegen_c@@Base+0x1650>
   16fe0:	str	r0, [sp, #4]
   16fe4:	ldr	r0, [sp, #64]	; 0x40
   16fe8:	add	r1, pc, r1
   16fec:	str	r0, [sp, #8]
   16ff0:	ldr	r0, [sp, #68]	; 0x44
   16ff4:	str	r0, [sp, #12]
   16ff8:	ldr	r0, [r5, #204]	; 0xcc
   16ffc:	bl	13f58 <fprintf@plt>
   17000:	ldr	r3, [r5, #212]	; 0xd4
   17004:	ldr	r3, [r3, #136]	; 0x88
   17008:	cmp	r3, #0
   1700c:	beq	162f0 <__flatcc_fb_codegen_c@@Base+0xd28>
   17010:	ldr	r1, [sp, #44]	; 0x2c
   17014:	mov	r3, r9
   17018:	mov	r2, r5
   1701c:	str	r8, [sp]
   17020:	ldr	r0, [sp, #68]	; 0x44
   17024:	str	r1, [sp, #4]
   17028:	ldr	r1, [sp, #64]	; 0x40
   1702c:	str	r1, [sp, #8]
   17030:	ldr	r1, [pc, #-1052]	; 16c1c <__flatcc_fb_codegen_c@@Base+0x1654>
   17034:	str	r0, [sp, #12]
   17038:	str	r5, [sp, #16]
   1703c:	ldr	r0, [r5, #204]	; 0xcc
   17040:	add	r1, pc, r1
   17044:	bl	13f58 <fprintf@plt>
   17048:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1704c:	ldr	r1, [pc, #-1076]	; 16c20 <__flatcc_fb_codegen_c@@Base+0x1658>
   17050:	mov	r3, r9
   17054:	mov	r2, r9
   17058:	str	r8, [sp]
   1705c:	add	r1, pc, r1
   17060:	b	166dc <__flatcc_fb_codegen_c@@Base+0x1114>
   17064:	ldrh	r1, [r4, #56]	; 0x38
   17068:	sub	r1, r1, #3
   1706c:	cmp	r1, #3
   17070:	addls	pc, pc, r1, lsl #2
   17074:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   17078:	b	17930 <__flatcc_fb_codegen_c@@Base+0x2368>
   1707c:	b	17908 <__flatcc_fb_codegen_c@@Base+0x2340>
   17080:	b	178e0 <__flatcc_fb_codegen_c@@Base+0x2318>
   17084:	b	17640 <__flatcc_fb_codegen_c@@Base+0x2078>
   17088:	ldr	r3, [pc, #-1132]	; 16c24 <__flatcc_fb_codegen_c@@Base+0x165c>
   1708c:	add	r3, pc, r3
   17090:	str	r3, [sp, #68]	; 0x44
   17094:	ldr	r3, [pc, #-1140]	; 16c28 <__flatcc_fb_codegen_c@@Base+0x1660>
   17098:	add	r3, pc, r3
   1709c:	str	r3, [sp, #76]	; 0x4c
   170a0:	ldr	r3, [pc, #-1148]	; 16c2c <__flatcc_fb_codegen_c@@Base+0x1664>
   170a4:	ldr	r2, [pc, #-1148]	; 16c30 <__flatcc_fb_codegen_c@@Base+0x1668>
   170a8:	add	r3, pc, r3
   170ac:	add	r2, pc, r2
   170b0:	str	r3, [sp, #64]	; 0x40
   170b4:	ldr	r1, [pc, #-1160]	; 16c34 <__flatcc_fb_codegen_c@@Base+0x166c>
   170b8:	add	r3, sp, #92	; 0x5c
   170bc:	mov	r0, r3
   170c0:	str	r3, [sp, #72]	; 0x48
   170c4:	ldrb	r3, [r4, #48]	; 0x30
   170c8:	add	r1, pc, r1
   170cc:	bl	13fc4 <sprintf@plt>
   170d0:	b	16520 <__flatcc_fb_codegen_c@@Base+0xf58>
   170d4:	ldr	r3, [pc, #-1188]	; 16c38 <__flatcc_fb_codegen_c@@Base+0x1670>
   170d8:	add	r3, pc, r3
   170dc:	str	r3, [sp, #68]	; 0x44
   170e0:	ldr	r3, [pc, #-1196]	; 16c3c <__flatcc_fb_codegen_c@@Base+0x1674>
   170e4:	add	r3, pc, r3
   170e8:	str	r3, [sp, #76]	; 0x4c
   170ec:	ldr	r3, [pc, #-1204]	; 16c40 <__flatcc_fb_codegen_c@@Base+0x1678>
   170f0:	ldr	r2, [pc, #-1204]	; 16c44 <__flatcc_fb_codegen_c@@Base+0x167c>
   170f4:	add	r3, pc, r3
   170f8:	add	r2, pc, r2
   170fc:	str	r3, [sp, #64]	; 0x40
   17100:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17104:	ldr	r3, [pc, #-1220]	; 16c48 <__flatcc_fb_codegen_c@@Base+0x1680>
   17108:	add	r3, pc, r3
   1710c:	str	r3, [sp, #68]	; 0x44
   17110:	ldr	r3, [pc, #-1228]	; 16c4c <__flatcc_fb_codegen_c@@Base+0x1684>
   17114:	add	r3, pc, r3
   17118:	str	r3, [sp, #76]	; 0x4c
   1711c:	ldr	r3, [pc, #-1236]	; 16c50 <__flatcc_fb_codegen_c@@Base+0x1688>
   17120:	ldr	r2, [pc, #-1236]	; 16c54 <__flatcc_fb_codegen_c@@Base+0x168c>
   17124:	add	r3, pc, r3
   17128:	add	r2, pc, r2
   1712c:	str	r3, [sp, #64]	; 0x40
   17130:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17134:	ldr	r3, [pc, #-1252]	; 16c58 <__flatcc_fb_codegen_c@@Base+0x1690>
   17138:	str	r5, [sp, #64]	; 0x40
   1713c:	ldr	r2, [pc, #-1256]	; 16c5c <__flatcc_fb_codegen_c@@Base+0x1694>
   17140:	add	r3, pc, r3
   17144:	str	r3, [sp, #68]	; 0x44
   17148:	add	r2, pc, r2
   1714c:	ldr	r3, [pc, #-1268]	; 16c60 <__flatcc_fb_codegen_c@@Base+0x1698>
   17150:	add	r3, pc, r3
   17154:	str	r3, [sp, #76]	; 0x4c
   17158:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   1715c:	ldr	r3, [pc, #-1280]	; 16c64 <__flatcc_fb_codegen_c@@Base+0x169c>
   17160:	ldr	r2, [pc, #-1280]	; 16c68 <__flatcc_fb_codegen_c@@Base+0x16a0>
   17164:	add	r3, pc, r3
   17168:	str	r3, [sp, #68]	; 0x44
   1716c:	add	r2, pc, r2
   17170:	ldr	r3, [pc, #-1292]	; 16c6c <__flatcc_fb_codegen_c@@Base+0x16a4>
   17174:	add	r3, pc, r3
   17178:	str	r3, [sp, #64]	; 0x40
   1717c:	ldr	r3, [pc, #-1300]	; 16c70 <__flatcc_fb_codegen_c@@Base+0x16a8>
   17180:	add	r3, pc, r3
   17184:	str	r3, [sp, #76]	; 0x4c
   17188:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   1718c:	ldr	r2, [pc, #-1312]	; 16c74 <__flatcc_fb_codegen_c@@Base+0x16ac>
   17190:	add	r2, pc, r2
   17194:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   17198:	ldr	r2, [pc, #-1320]	; 16c78 <__flatcc_fb_codegen_c@@Base+0x16b0>
   1719c:	add	r2, pc, r2
   171a0:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   171a4:	ldr	r2, [pc, #-1328]	; 16c7c <__flatcc_fb_codegen_c@@Base+0x16b4>
   171a8:	add	r2, pc, r2
   171ac:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   171b0:	ldr	r2, [pc, #-1336]	; 16c80 <__flatcc_fb_codegen_c@@Base+0x16b8>
   171b4:	add	r2, pc, r2
   171b8:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   171bc:	ldr	r2, [pc, #-1344]	; 16c84 <__flatcc_fb_codegen_c@@Base+0x16bc>
   171c0:	add	r2, pc, r2
   171c4:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   171c8:	ldr	r2, [pc, #-1352]	; 16c88 <__flatcc_fb_codegen_c@@Base+0x16c0>
   171cc:	add	r2, pc, r2
   171d0:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   171d4:	ldr	r2, [pc, #-1360]	; 16c8c <__flatcc_fb_codegen_c@@Base+0x16c4>
   171d8:	add	r2, pc, r2
   171dc:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   171e0:	ldr	r2, [pc, #-1368]	; 16c90 <__flatcc_fb_codegen_c@@Base+0x16c8>
   171e4:	add	r2, pc, r2
   171e8:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   171ec:	ldr	r2, [pc, #-1376]	; 16c94 <__flatcc_fb_codegen_c@@Base+0x16cc>
   171f0:	add	r2, pc, r2
   171f4:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   171f8:	ldr	r2, [pc, #-1384]	; 16c98 <__flatcc_fb_codegen_c@@Base+0x16d0>
   171fc:	add	r2, pc, r2
   17200:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   17204:	ldr	r2, [pc, #-1392]	; 16c9c <__flatcc_fb_codegen_c@@Base+0x16d4>
   17208:	add	r2, pc, r2
   1720c:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   17210:	ldr	r2, [pc, #-1400]	; 16ca0 <__flatcc_fb_codegen_c@@Base+0x16d8>
   17214:	add	r2, pc, r2
   17218:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   1721c:	ldr	r2, [pc, #-1408]	; 16ca4 <__flatcc_fb_codegen_c@@Base+0x16dc>
   17220:	add	r2, pc, r2
   17224:	b	16ab8 <__flatcc_fb_codegen_c@@Base+0x14f0>
   17228:	ldr	r2, [pc, #-1416]	; 16ca8 <__flatcc_fb_codegen_c@@Base+0x16e0>
   1722c:	add	r2, pc, r2
   17230:	str	r2, [sp, #68]	; 0x44
   17234:	str	r2, [sp, #76]	; 0x4c
   17238:	cmp	r3, #8
   1723c:	addls	pc, pc, r3, lsl #2
   17240:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   17244:	b	17b2c <__flatcc_fb_codegen_c@@Base+0x2564>
   17248:	b	172b0 <__flatcc_fb_codegen_c@@Base+0x1ce8>
   1724c:	b	17658 <__flatcc_fb_codegen_c@@Base+0x2090>
   17250:	b	17298 <__flatcc_fb_codegen_c@@Base+0x1cd0>
   17254:	b	17a54 <__flatcc_fb_codegen_c@@Base+0x248c>
   17258:	b	170a0 <__flatcc_fb_codegen_c@@Base+0x1ad8>
   1725c:	b	170ec <__flatcc_fb_codegen_c@@Base+0x1b24>
   17260:	b	1711c <__flatcc_fb_codegen_c@@Base+0x1b54>
   17264:	b	17268 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   17268:	ldr	r3, [pc, #-1476]	; 16cac <__flatcc_fb_codegen_c@@Base+0x16e4>
   1726c:	ldr	r2, [pc, #-1476]	; 16cb0 <__flatcc_fb_codegen_c@@Base+0x16e8>
   17270:	add	r3, pc, r3
   17274:	add	r2, pc, r2
   17278:	str	r3, [sp, #64]	; 0x40
   1727c:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17280:	ldr	r3, [pc, #-1492]	; 16cb4 <__flatcc_fb_codegen_c@@Base+0x16ec>
   17284:	add	r3, pc, r3
   17288:	str	r3, [sp, #68]	; 0x44
   1728c:	ldr	r3, [pc, #-1500]	; 16cb8 <__flatcc_fb_codegen_c@@Base+0x16f0>
   17290:	add	r3, pc, r3
   17294:	str	r3, [sp, #76]	; 0x4c
   17298:	ldr	r3, [pc, #-1508]	; 16cbc <__flatcc_fb_codegen_c@@Base+0x16f4>
   1729c:	ldr	r2, [pc, #-1508]	; 16cc0 <__flatcc_fb_codegen_c@@Base+0x16f8>
   172a0:	add	r3, pc, r3
   172a4:	add	r2, pc, r2
   172a8:	str	r3, [sp, #64]	; 0x40
   172ac:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   172b0:	ldr	r3, [pc, #-1524]	; 16cc4 <__flatcc_fb_codegen_c@@Base+0x16fc>
   172b4:	ldr	r2, [pc, #-1524]	; 16cc8 <__flatcc_fb_codegen_c@@Base+0x1700>
   172b8:	add	r3, pc, r3
   172bc:	add	r2, pc, r2
   172c0:	str	r3, [sp, #64]	; 0x40
   172c4:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   172c8:	ldr	r2, [pc, #-1540]	; 16ccc <__flatcc_fb_codegen_c@@Base+0x1704>
   172cc:	ldr	r1, [pc, #-1540]	; 16cd0 <__flatcc_fb_codegen_c@@Base+0x1708>
   172d0:	add	r2, pc, r2
   172d4:	add	r1, pc, r1
   172d8:	str	r1, [sp, #64]	; 0x40
   172dc:	str	r2, [sp, #68]	; 0x44
   172e0:	str	r2, [sp, #76]	; 0x4c
   172e4:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   172e8:	ldr	r2, [pc, #-1564]	; 16cd4 <__flatcc_fb_codegen_c@@Base+0x170c>
   172ec:	ldr	r1, [pc, #-1564]	; 16cd8 <__flatcc_fb_codegen_c@@Base+0x1710>
   172f0:	add	r2, pc, r2
   172f4:	add	r1, pc, r1
   172f8:	str	r1, [sp, #64]	; 0x40
   172fc:	str	r2, [sp, #68]	; 0x44
   17300:	str	r2, [sp, #76]	; 0x4c
   17304:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17308:	ldr	r2, [pc, #-1588]	; 16cdc <__flatcc_fb_codegen_c@@Base+0x1714>
   1730c:	add	r2, pc, r2
   17310:	str	r2, [sp, #68]	; 0x44
   17314:	ldr	r2, [pc, #-1596]	; 16ce0 <__flatcc_fb_codegen_c@@Base+0x1718>
   17318:	add	r2, pc, r2
   1731c:	str	r2, [sp, #76]	; 0x4c
   17320:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17324:	ldr	r2, [pc, #-1608]	; 16ce4 <__flatcc_fb_codegen_c@@Base+0x171c>
   17328:	add	r2, pc, r2
   1732c:	str	r2, [sp, #68]	; 0x44
   17330:	ldr	r2, [pc, #-1616]	; 16ce8 <__flatcc_fb_codegen_c@@Base+0x1720>
   17334:	add	r2, pc, r2
   17338:	str	r2, [sp, #64]	; 0x40
   1733c:	ldr	r2, [pc, #-1624]	; 16cec <__flatcc_fb_codegen_c@@Base+0x1724>
   17340:	add	r2, pc, r2
   17344:	str	r2, [sp, #76]	; 0x4c
   17348:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   1734c:	ldr	r3, [pc, #-1636]	; 16cf0 <__flatcc_fb_codegen_c@@Base+0x1728>
   17350:	add	r3, pc, r3
   17354:	str	r3, [sp, #76]	; 0x4c
   17358:	ldr	r3, [pc, #-1644]	; 16cf4 <__flatcc_fb_codegen_c@@Base+0x172c>
   1735c:	add	r3, pc, r3
   17360:	str	r3, [sp, #64]	; 0x40
   17364:	ldr	r3, [pc, #-1652]	; 16cf8 <__flatcc_fb_codegen_c@@Base+0x1730>
   17368:	add	r3, pc, r3
   1736c:	str	r3, [sp, #68]	; 0x44
   17370:	ldr	r2, [pc, #-1660]	; 16cfc <__flatcc_fb_codegen_c@@Base+0x1734>
   17374:	add	r2, pc, r2
   17378:	b	16f7c <__flatcc_fb_codegen_c@@Base+0x19b4>
   1737c:	ldr	r2, [pc, #-1668]	; 16d00 <__flatcc_fb_codegen_c@@Base+0x1738>
   17380:	add	r2, pc, r2
   17384:	str	r2, [sp, #68]	; 0x44
   17388:	str	r2, [sp, #76]	; 0x4c
   1738c:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17390:	ldr	r2, [pc, #-1684]	; 16d04 <__flatcc_fb_codegen_c@@Base+0x173c>
   17394:	ldr	r1, [pc, #-1684]	; 16d08 <__flatcc_fb_codegen_c@@Base+0x1740>
   17398:	add	r2, pc, r2
   1739c:	add	r1, pc, r1
   173a0:	str	r1, [sp, #64]	; 0x40
   173a4:	str	r2, [sp, #68]	; 0x44
   173a8:	str	r2, [sp, #76]	; 0x4c
   173ac:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   173b0:	ldr	r2, [pc, #-1708]	; 16d0c <__flatcc_fb_codegen_c@@Base+0x1744>
   173b4:	ldr	r1, [pc, #-1708]	; 16d10 <__flatcc_fb_codegen_c@@Base+0x1748>
   173b8:	add	r2, pc, r2
   173bc:	add	r1, pc, r1
   173c0:	str	r1, [sp, #64]	; 0x40
   173c4:	str	r2, [sp, #68]	; 0x44
   173c8:	str	r2, [sp, #76]	; 0x4c
   173cc:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   173d0:	ldr	r3, [pc, #-1732]	; 16d14 <__flatcc_fb_codegen_c@@Base+0x174c>
   173d4:	ldr	r2, [pc, #-1732]	; 16d18 <__flatcc_fb_codegen_c@@Base+0x1750>
   173d8:	add	r3, pc, r3
   173dc:	add	r2, pc, r2
   173e0:	strd	r2, [sp, #64]	; 0x40
   173e4:	str	r3, [sp, #76]	; 0x4c
   173e8:	b	16504 <__flatcc_fb_codegen_c@@Base+0xf3c>
   173ec:	ldr	r3, [pc, #-1752]	; 16d1c <__flatcc_fb_codegen_c@@Base+0x1754>
   173f0:	add	r3, pc, r3
   173f4:	str	r3, [sp, #68]	; 0x44
   173f8:	ldr	r3, [pc, #-1760]	; 16d20 <__flatcc_fb_codegen_c@@Base+0x1758>
   173fc:	add	r3, pc, r3
   17400:	str	r3, [sp, #64]	; 0x40
   17404:	ldr	r3, [pc, #-1768]	; 16d24 <__flatcc_fb_codegen_c@@Base+0x175c>
   17408:	add	r3, pc, r3
   1740c:	str	r3, [sp, #76]	; 0x4c
   17410:	b	16504 <__flatcc_fb_codegen_c@@Base+0xf3c>
   17414:	vldr	d7, [r4, #48]	; 0x30
   17418:	add	r3, sp, #92	; 0x5c
   1741c:	mov	r0, r3
   17420:	ldr	r1, [pc, #-1792]	; 16d28 <__flatcc_fb_codegen_c@@Base+0x1760>
   17424:	str	r3, [sp, #72]	; 0x48
   17428:	vcvt.f32.f64	s14, d7
   1742c:	add	r1, pc, r1
   17430:	vcvt.f64.f32	d7, s14
   17434:	vmov	r2, r3, d7
   17438:	bl	13fc4 <sprintf@plt>
   1743c:	b	16914 <__flatcc_fb_codegen_c@@Base+0x134c>
   17440:	ldr	r2, [pc, #-1820]	; 16d2c <__flatcc_fb_codegen_c@@Base+0x1764>
   17444:	add	r2, pc, r2
   17448:	str	r2, [sp, #68]	; 0x44
   1744c:	ldr	r2, [pc, #-1828]	; 16d30 <__flatcc_fb_codegen_c@@Base+0x1768>
   17450:	add	r2, pc, r2
   17454:	str	r2, [sp, #64]	; 0x40
   17458:	ldr	r2, [pc, #-1836]	; 16d34 <__flatcc_fb_codegen_c@@Base+0x176c>
   1745c:	add	r2, pc, r2
   17460:	str	r2, [sp, #76]	; 0x4c
   17464:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   17468:	ldr	r2, [pc, #-1848]	; 16d38 <__flatcc_fb_codegen_c@@Base+0x1770>
   1746c:	add	r2, pc, r2
   17470:	str	r2, [sp, #68]	; 0x44
   17474:	ldr	r2, [pc, #-1856]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x1774>
   17478:	add	r2, pc, r2
   1747c:	str	r2, [sp, #64]	; 0x40
   17480:	ldr	r2, [pc, #-1864]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x1778>
   17484:	add	r2, pc, r2
   17488:	str	r2, [sp, #76]	; 0x4c
   1748c:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17490:	ldr	r3, [pc, #-1876]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x177c>
   17494:	add	r3, pc, r3
   17498:	str	r3, [sp, #68]	; 0x44
   1749c:	ldr	r3, [pc, #-1884]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1780>
   174a0:	add	r3, pc, r3
   174a4:	str	r3, [sp, #76]	; 0x4c
   174a8:	cmp	r2, #11
   174ac:	bne	1778c <__flatcc_fb_codegen_c@@Base+0x21c4>
   174b0:	vldr	d7, [r4, #48]	; 0x30
   174b4:	add	r3, sp, #92	; 0x5c
   174b8:	mov	r0, r3
   174bc:	str	r3, [sp, #72]	; 0x48
   174c0:	ldr	r3, [pc, #-1916]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x1784>
   174c4:	ldr	r1, [pc, #-1916]	; 16d50 <__flatcc_fb_codegen_c@@Base+0x1788>
   174c8:	vcvt.f32.f64	s14, d7
   174cc:	add	r3, pc, r3
   174d0:	add	r1, pc, r1
   174d4:	str	r3, [sp, #64]	; 0x40
   174d8:	vcvt.f64.f32	d7, s14
   174dc:	vmov	r2, r3, d7
   174e0:	bl	13fc4 <sprintf@plt>
   174e4:	b	16520 <__flatcc_fb_codegen_c@@Base+0xf58>
   174e8:	ldr	r2, [pc, #-1948]	; 16d54 <__flatcc_fb_codegen_c@@Base+0x178c>
   174ec:	add	r2, pc, r2
   174f0:	str	r2, [sp, #68]	; 0x44
   174f4:	ldr	r2, [pc, #-1956]	; 16d58 <__flatcc_fb_codegen_c@@Base+0x1790>
   174f8:	add	r2, pc, r2
   174fc:	str	r2, [sp, #64]	; 0x40
   17500:	ldr	r2, [pc, #-1964]	; 16d5c <__flatcc_fb_codegen_c@@Base+0x1794>
   17504:	add	r2, pc, r2
   17508:	str	r2, [sp, #76]	; 0x4c
   1750c:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   17510:	ldr	r2, [pc, #-1976]	; 16d60 <__flatcc_fb_codegen_c@@Base+0x1798>
   17514:	add	r2, pc, r2
   17518:	str	r2, [sp, #68]	; 0x44
   1751c:	ldr	r2, [pc, #-1984]	; 16d64 <__flatcc_fb_codegen_c@@Base+0x179c>
   17520:	add	r2, pc, r2
   17524:	str	r2, [sp, #64]	; 0x40
   17528:	ldr	r2, [pc, #-1992]	; 16d68 <__flatcc_fb_codegen_c@@Base+0x17a0>
   1752c:	add	r2, pc, r2
   17530:	str	r2, [sp, #76]	; 0x4c
   17534:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17538:	ldr	r3, [pc, #-2004]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x17a4>
   1753c:	add	r3, pc, r3
   17540:	str	r3, [sp, #68]	; 0x44
   17544:	ldr	r3, [pc, #-2012]	; 16d70 <__flatcc_fb_codegen_c@@Base+0x17a8>
   17548:	add	r3, pc, r3
   1754c:	str	r3, [sp, #76]	; 0x4c
   17550:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   17554:	ldr	r2, [pc, #-2024]	; 16d74 <__flatcc_fb_codegen_c@@Base+0x17ac>
   17558:	add	r2, pc, r2
   1755c:	str	r2, [sp, #68]	; 0x44
   17560:	ldr	r2, [pc, #-2032]	; 16d78 <__flatcc_fb_codegen_c@@Base+0x17b0>
   17564:	add	r2, pc, r2
   17568:	str	r2, [sp, #64]	; 0x40
   1756c:	ldr	r2, [pc, #-2040]	; 16d7c <__flatcc_fb_codegen_c@@Base+0x17b4>
   17570:	add	r2, pc, r2
   17574:	str	r2, [sp, #76]	; 0x4c
   17578:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   1757c:	ldr	r2, [pc, #-2052]	; 16d80 <__flatcc_fb_codegen_c@@Base+0x17b8>
   17580:	add	r2, pc, r2
   17584:	str	r2, [sp, #68]	; 0x44
   17588:	ldr	r2, [pc, #-2060]	; 16d84 <__flatcc_fb_codegen_c@@Base+0x17bc>
   1758c:	add	r2, pc, r2
   17590:	str	r2, [sp, #64]	; 0x40
   17594:	ldr	r2, [pc, #-2068]	; 16d88 <__flatcc_fb_codegen_c@@Base+0x17c0>
   17598:	add	r2, pc, r2
   1759c:	str	r2, [sp, #76]	; 0x4c
   175a0:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   175a4:	ldr	r2, [pc, #-2080]	; 16d8c <__flatcc_fb_codegen_c@@Base+0x17c4>
   175a8:	add	r2, pc, r2
   175ac:	str	r2, [sp, #68]	; 0x44
   175b0:	ldr	r2, [pc, #-2088]	; 16d90 <__flatcc_fb_codegen_c@@Base+0x17c8>
   175b4:	add	r2, pc, r2
   175b8:	str	r2, [sp, #64]	; 0x40
   175bc:	ldr	r2, [pc, #-2096]	; 16d94 <__flatcc_fb_codegen_c@@Base+0x17cc>
   175c0:	add	r2, pc, r2
   175c4:	str	r2, [sp, #76]	; 0x4c
   175c8:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   175cc:	ldr	r3, [pc, #-2108]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x17d0>
   175d0:	add	r3, pc, r3
   175d4:	str	r3, [sp, #68]	; 0x44
   175d8:	ldr	r3, [pc, #-2116]	; 16d9c <__flatcc_fb_codegen_c@@Base+0x17d4>
   175dc:	add	r3, pc, r3
   175e0:	str	r3, [sp, #76]	; 0x4c
   175e4:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   175e8:	ldr	r2, [pc, #-2128]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x17d8>
   175ec:	add	r2, pc, r2
   175f0:	str	r2, [sp, #68]	; 0x44
   175f4:	ldr	r2, [pc, #-2136]	; 16da4 <__flatcc_fb_codegen_c@@Base+0x17dc>
   175f8:	add	r2, pc, r2
   175fc:	str	r2, [sp, #64]	; 0x40
   17600:	ldr	r2, [pc, #-2144]	; 16da8 <__flatcc_fb_codegen_c@@Base+0x17e0>
   17604:	add	r2, pc, r2
   17608:	str	r2, [sp, #76]	; 0x4c
   1760c:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17610:	ldr	r3, [pc, #-2156]	; 16dac <__flatcc_fb_codegen_c@@Base+0x17e4>
   17614:	add	r3, pc, r3
   17618:	str	r3, [sp, #68]	; 0x44
   1761c:	ldr	r3, [pc, #-2164]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x17e8>
   17620:	add	r3, pc, r3
   17624:	str	r3, [sp, #76]	; 0x4c
   17628:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   1762c:	ldr	r3, [pc, #-2176]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x17ec>
   17630:	add	r3, pc, r3
   17634:	str	r3, [sp, #68]	; 0x44
   17638:	str	r3, [sp, #76]	; 0x4c
   1763c:	b	174b0 <__flatcc_fb_codegen_c@@Base+0x1ee8>
   17640:	ldr	r3, [pc, #-2192]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x17f0>
   17644:	add	r3, pc, r3
   17648:	str	r3, [sp, #68]	; 0x44
   1764c:	ldr	r3, [pc, #-2200]	; 16dbc <__flatcc_fb_codegen_c@@Base+0x17f4>
   17650:	add	r3, pc, r3
   17654:	str	r3, [sp, #76]	; 0x4c
   17658:	ldr	r3, [pc, #-2208]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0x17f8>
   1765c:	ldr	r2, [pc, #-2208]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0x17fc>
   17660:	add	r3, pc, r3
   17664:	add	r2, pc, r2
   17668:	str	r3, [sp, #64]	; 0x40
   1766c:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17670:	ldr	r2, [pc, #-2224]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0x1800>
   17674:	add	r2, pc, r2
   17678:	ldr	r1, [pc, #-2228]	; 16dcc <__flatcc_fb_codegen_c@@Base+0x1804>
   1767c:	add	r3, sp, #92	; 0x5c
   17680:	mov	r0, r3
   17684:	ldrd	r6, [r4, #48]	; 0x30
   17688:	add	r1, pc, r1
   1768c:	strd	r6, [sp]
   17690:	str	r3, [sp, #72]	; 0x48
   17694:	bl	13fc4 <sprintf@plt>
   17698:	b	16914 <__flatcc_fb_codegen_c@@Base+0x134c>
   1769c:	ldr	r2, [pc, #-2260]	; 16dd0 <__flatcc_fb_codegen_c@@Base+0x1808>
   176a0:	add	r2, pc, r2
   176a4:	ldr	r1, [pc, #-2264]	; 16dd4 <__flatcc_fb_codegen_c@@Base+0x180c>
   176a8:	add	r3, sp, #92	; 0x5c
   176ac:	mov	r0, r3
   176b0:	str	r3, [sp, #72]	; 0x48
   176b4:	ldrb	r3, [r4, #48]	; 0x30
   176b8:	add	r1, pc, r1
   176bc:	bl	13fc4 <sprintf@plt>
   176c0:	b	16914 <__flatcc_fb_codegen_c@@Base+0x134c>
   176c4:	ldr	r2, [pc, #-2292]	; 16dd8 <__flatcc_fb_codegen_c@@Base+0x1810>
   176c8:	add	r2, pc, r2
   176cc:	ldr	r1, [pc, #-2296]	; 16ddc <__flatcc_fb_codegen_c@@Base+0x1814>
   176d0:	add	r3, sp, #92	; 0x5c
   176d4:	mov	r0, r3
   176d8:	ldrd	r6, [r4, #48]	; 0x30
   176dc:	add	r1, pc, r1
   176e0:	strd	r6, [sp]
   176e4:	str	r3, [sp, #72]	; 0x48
   176e8:	bl	13fc4 <sprintf@plt>
   176ec:	b	16914 <__flatcc_fb_codegen_c@@Base+0x134c>
   176f0:	ldr	r0, [pc, #-2328]	; 16de0 <__flatcc_fb_codegen_c@@Base+0x1818>
   176f4:	mov	r2, #66	; 0x42
   176f8:	mov	r1, #1
   176fc:	add	r0, pc, r0
   17700:	bl	13eec <fwrite@plt>
   17704:	ldr	r0, [pc, #-2344]	; 16de4 <__flatcc_fb_codegen_c@@Base+0x181c>
   17708:	mov	r2, #61	; 0x3d
   1770c:	mov	r1, #1
   17710:	ldr	r3, [r5, #204]	; 0xcc
   17714:	add	r0, pc, r0
   17718:	bl	13eec <fwrite@plt>
   1771c:	ldr	r0, [sp, #44]	; 0x2c
   17720:	mov	r3, r9
   17724:	mov	r2, r5
   17728:	str	r8, [sp]
   1772c:	ldr	r1, [pc, #-2380]	; 16de8 <__flatcc_fb_codegen_c@@Base+0x1820>
   17730:	str	r0, [sp, #4]
   17734:	ldr	r0, [sp, #56]	; 0x38
   17738:	add	r1, pc, r1
   1773c:	str	r0, [sp, #8]
   17740:	ldr	r0, [r5, #204]	; 0xcc
   17744:	bl	13f58 <fprintf@plt>
   17748:	ldr	r3, [r5, #212]	; 0xd4
   1774c:	ldr	r3, [r3, #136]	; 0x88
   17750:	cmp	r3, #0
   17754:	beq	162f0 <__flatcc_fb_codegen_c@@Base+0xd28>
   17758:	ldr	r0, [sp, #44]	; 0x2c
   1775c:	mov	r3, r9
   17760:	mov	r2, r5
   17764:	str	r8, [sp]
   17768:	ldr	r1, [pc, #-2436]	; 16dec <__flatcc_fb_codegen_c@@Base+0x1824>
   1776c:	str	r0, [sp, #4]
   17770:	ldr	r0, [sp, #56]	; 0x38
   17774:	add	r1, pc, r1
   17778:	str	r0, [sp, #8]
   1777c:	str	r5, [sp, #12]
   17780:	ldr	r0, [r5, #204]	; 0xcc
   17784:	bl	13f58 <fprintf@plt>
   17788:	b	15ea8 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1778c:	ldr	r3, [pc, #-2468]	; 16df0 <__flatcc_fb_codegen_c@@Base+0x1828>
   17790:	add	r3, pc, r3
   17794:	str	r3, [sp, #64]	; 0x40
   17798:	b	16504 <__flatcc_fb_codegen_c@@Base+0xf3c>
   1779c:	ldrh	r1, [r4, #56]	; 0x38
   177a0:	sub	r1, r1, #3
   177a4:	cmp	r1, #3
   177a8:	addls	pc, pc, r1, lsl #2
   177ac:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   177b0:	b	17c40 <__flatcc_fb_codegen_c@@Base+0x2678>
   177b4:	b	17c18 <__flatcc_fb_codegen_c@@Base+0x2650>
   177b8:	b	17bf0 <__flatcc_fb_codegen_c@@Base+0x2628>
   177bc:	b	17280 <__flatcc_fb_codegen_c@@Base+0x1cb8>
   177c0:	ldrh	r1, [r4, #56]	; 0x38
   177c4:	sub	r1, r1, #3
   177c8:	cmp	r1, #3
   177cc:	addls	pc, pc, r1, lsl #2
   177d0:	b	17c5c <__flatcc_fb_codegen_c@@Base+0x2694>
   177d4:	b	17bd4 <__flatcc_fb_codegen_c@@Base+0x260c>
   177d8:	b	17bac <__flatcc_fb_codegen_c@@Base+0x25e4>
   177dc:	b	17b84 <__flatcc_fb_codegen_c@@Base+0x25bc>
   177e0:	b	17b68 <__flatcc_fb_codegen_c@@Base+0x25a0>
   177e4:	ldr	r2, [pc, #-2552]	; 16df4 <__flatcc_fb_codegen_c@@Base+0x182c>
   177e8:	add	r2, pc, r2
   177ec:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   177f0:	ldr	r2, [pc, #-2560]	; 16df8 <__flatcc_fb_codegen_c@@Base+0x1830>
   177f4:	add	r2, pc, r2
   177f8:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   177fc:	ldr	r2, [pc, #-2568]	; 16dfc <__flatcc_fb_codegen_c@@Base+0x1834>
   17800:	add	r2, pc, r2
   17804:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   17808:	ldr	r2, [pc, #-2576]	; 16e00 <__flatcc_fb_codegen_c@@Base+0x1838>
   1780c:	add	r2, pc, r2
   17810:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   17814:	ldr	r2, [pc, #-2584]	; 16e04 <__flatcc_fb_codegen_c@@Base+0x183c>
   17818:	add	r2, pc, r2
   1781c:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   17820:	ldr	r2, [pc, #-2592]	; 16e08 <__flatcc_fb_codegen_c@@Base+0x1840>
   17824:	add	r2, pc, r2
   17828:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   1782c:	ldr	r2, [pc, #-2600]	; 16e0c <__flatcc_fb_codegen_c@@Base+0x1844>
   17830:	add	r2, pc, r2
   17834:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   17838:	ldr	r2, [pc, #-2608]	; 16e10 <__flatcc_fb_codegen_c@@Base+0x1848>
   1783c:	add	r2, pc, r2
   17840:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   17844:	ldr	r2, [pc, #-2616]	; 16e14 <__flatcc_fb_codegen_c@@Base+0x184c>
   17848:	add	r2, pc, r2
   1784c:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   17850:	ldr	r2, [pc, #-2624]	; 16e18 <__flatcc_fb_codegen_c@@Base+0x1850>
   17854:	add	r2, pc, r2
   17858:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   1785c:	ldr	r2, [pc, #-2632]	; 16e1c <__flatcc_fb_codegen_c@@Base+0x1854>
   17860:	add	r2, pc, r2
   17864:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   17868:	ldr	r2, [pc, #-2640]	; 16e20 <__flatcc_fb_codegen_c@@Base+0x1858>
   1786c:	add	r2, pc, r2
   17870:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   17874:	ldr	r2, [pc, #-2648]	; 16e24 <__flatcc_fb_codegen_c@@Base+0x185c>
   17878:	add	r2, pc, r2
   1787c:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   17880:	ldr	r2, [pc, #-2656]	; 16e28 <__flatcc_fb_codegen_c@@Base+0x1860>
   17884:	add	r2, pc, r2
   17888:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   1788c:	ldr	r2, [pc, #-2664]	; 16e2c <__flatcc_fb_codegen_c@@Base+0x1864>
   17890:	add	r2, pc, r2
   17894:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   17898:	ldr	r2, [pc, #-2672]	; 16e30 <__flatcc_fb_codegen_c@@Base+0x1868>
   1789c:	add	r2, pc, r2
   178a0:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   178a4:	ldr	r2, [pc, #-2680]	; 16e34 <__flatcc_fb_codegen_c@@Base+0x186c>
   178a8:	add	r2, pc, r2
   178ac:	b	176a4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   178b0:	ldr	r2, [pc, #-2688]	; 16e38 <__flatcc_fb_codegen_c@@Base+0x1870>
   178b4:	add	r2, pc, r2
   178b8:	b	17678 <__flatcc_fb_codegen_c@@Base+0x20b0>
   178bc:	ldr	r2, [pc, #-2696]	; 16e3c <__flatcc_fb_codegen_c@@Base+0x1874>
   178c0:	add	r2, pc, r2
   178c4:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   178c8:	ldr	r2, [pc, #-2704]	; 16e40 <__flatcc_fb_codegen_c@@Base+0x1878>
   178cc:	add	r2, pc, r2
   178d0:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   178d4:	ldr	r2, [pc, #-2712]	; 16e44 <__flatcc_fb_codegen_c@@Base+0x187c>
   178d8:	add	r2, pc, r2
   178dc:	b	176cc <__flatcc_fb_codegen_c@@Base+0x2104>
   178e0:	ldr	r2, [pc, #-2720]	; 16e48 <__flatcc_fb_codegen_c@@Base+0x1880>
   178e4:	add	r2, pc, r2
   178e8:	str	r2, [sp, #68]	; 0x44
   178ec:	ldr	r2, [pc, #-2728]	; 16e4c <__flatcc_fb_codegen_c@@Base+0x1884>
   178f0:	add	r2, pc, r2
   178f4:	str	r2, [sp, #64]	; 0x40
   178f8:	ldr	r2, [pc, #-2736]	; 16e50 <__flatcc_fb_codegen_c@@Base+0x1888>
   178fc:	add	r2, pc, r2
   17900:	str	r2, [sp, #76]	; 0x4c
   17904:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   17908:	ldr	r2, [pc, #-2748]	; 16e54 <__flatcc_fb_codegen_c@@Base+0x188c>
   1790c:	add	r2, pc, r2
   17910:	str	r2, [sp, #68]	; 0x44
   17914:	ldr	r2, [pc, #-2756]	; 16e58 <__flatcc_fb_codegen_c@@Base+0x1890>
   17918:	add	r2, pc, r2
   1791c:	str	r2, [sp, #64]	; 0x40
   17920:	ldr	r2, [pc, #-2764]	; 16e5c <__flatcc_fb_codegen_c@@Base+0x1894>
   17924:	add	r2, pc, r2
   17928:	str	r2, [sp, #76]	; 0x4c
   1792c:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17930:	ldr	r3, [pc, #-2776]	; 16e60 <__flatcc_fb_codegen_c@@Base+0x1898>
   17934:	add	r3, pc, r3
   17938:	str	r3, [sp, #68]	; 0x44
   1793c:	ldr	r3, [pc, #-2784]	; 16e64 <__flatcc_fb_codegen_c@@Base+0x189c>
   17940:	add	r3, pc, r3
   17944:	str	r3, [sp, #76]	; 0x4c
   17948:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   1794c:	ldr	r2, [pc, #-2552]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17950:	movw	r3, #1599	; 0x63f
   17954:	ldr	r1, [sp, #84]	; 0x54
   17958:	ldr	r0, [pc, #-2808]	; 16e68 <__flatcc_fb_codegen_c@@Base+0x18a0>
   1795c:	ldr	r4, [pc, #-2808]	; 16e6c <__flatcc_fb_codegen_c@@Base+0x18a4>
   17960:	ldr	ip, [r1, r2]
   17964:	add	r0, pc, r0
   17968:	ldr	r1, [pc, #-2816]	; 16e70 <__flatcc_fb_codegen_c@@Base+0x18a8>
   1796c:	add	r4, pc, r4
   17970:	str	r0, [sp]
   17974:	mov	r2, r4
   17978:	ldr	r0, [ip]
   1797c:	add	r1, pc, r1
   17980:	bl	13f58 <fprintf@plt>
   17984:	ldr	r3, [pc, #-2840]	; 16e74 <__flatcc_fb_codegen_c@@Base+0x18ac>
   17988:	mov	r1, r4
   1798c:	movw	r2, #1599	; 0x63f
   17990:	ldr	r0, [pc, #-2848]	; 16e78 <__flatcc_fb_codegen_c@@Base+0x18b0>
   17994:	add	r3, pc, r3
   17998:	add	r3, r3, #72	; 0x48
   1799c:	add	r0, pc, r0
   179a0:	bl	1400c <__assert_fail@plt>
   179a4:	ldr	r2, [pc, #-2640]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   179a8:	mov	r3, #1568	; 0x620
   179ac:	ldr	r1, [sp, #84]	; 0x54
   179b0:	ldr	r0, [pc, #-2876]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x18b4>
   179b4:	ldr	r4, [pc, #-2876]	; 16e80 <__flatcc_fb_codegen_c@@Base+0x18b8>
   179b8:	ldr	ip, [r1, r2]
   179bc:	add	r0, pc, r0
   179c0:	ldr	r1, [pc, #-2884]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x18bc>
   179c4:	add	r4, pc, r4
   179c8:	str	r0, [sp]
   179cc:	mov	r2, r4
   179d0:	ldr	r0, [ip]
   179d4:	add	r1, pc, r1
   179d8:	bl	13f58 <fprintf@plt>
   179dc:	ldr	r3, [pc, #-2908]	; 16e88 <__flatcc_fb_codegen_c@@Base+0x18c0>
   179e0:	mov	r1, r4
   179e4:	mov	r2, #1568	; 0x620
   179e8:	ldr	r0, [pc, #-2916]	; 16e8c <__flatcc_fb_codegen_c@@Base+0x18c4>
   179ec:	add	r3, pc, r3
   179f0:	add	r3, r3, #72	; 0x48
   179f4:	add	r0, pc, r0
   179f8:	bl	1400c <__assert_fail@plt>
   179fc:	ldr	r2, [pc, #-2728]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17a00:	mov	r3, #1584	; 0x630
   17a04:	ldr	r1, [sp, #84]	; 0x54
   17a08:	ldr	r0, [pc, #-2944]	; 16e90 <__flatcc_fb_codegen_c@@Base+0x18c8>
   17a0c:	ldr	r4, [pc, #-2944]	; 16e94 <__flatcc_fb_codegen_c@@Base+0x18cc>
   17a10:	ldr	ip, [r1, r2]
   17a14:	add	r0, pc, r0
   17a18:	ldr	r1, [pc, #-2952]	; 16e98 <__flatcc_fb_codegen_c@@Base+0x18d0>
   17a1c:	add	r4, pc, r4
   17a20:	str	r0, [sp]
   17a24:	mov	r2, r4
   17a28:	ldr	r0, [ip]
   17a2c:	add	r1, pc, r1
   17a30:	bl	13f58 <fprintf@plt>
   17a34:	ldr	r3, [pc, #-2976]	; 16e9c <__flatcc_fb_codegen_c@@Base+0x18d4>
   17a38:	mov	r1, r4
   17a3c:	mov	r2, #1584	; 0x630
   17a40:	ldr	r0, [pc, #-2984]	; 16ea0 <__flatcc_fb_codegen_c@@Base+0x18d8>
   17a44:	add	r3, pc, r3
   17a48:	add	r3, r3, #72	; 0x48
   17a4c:	add	r0, pc, r0
   17a50:	bl	1400c <__assert_fail@plt>
   17a54:	bl	15a74 <__flatcc_fb_codegen_c@@Base+0x4ac>
   17a58:	ldr	r2, [pc, #-2820]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17a5c:	mov	r3, #141	; 0x8d
   17a60:	ldr	r1, [sp, #84]	; 0x54
   17a64:	ldr	r0, [pc, #-3016]	; 16ea4 <__flatcc_fb_codegen_c@@Base+0x18dc>
   17a68:	ldr	r4, [pc, #-3016]	; 16ea8 <__flatcc_fb_codegen_c@@Base+0x18e0>
   17a6c:	ldr	ip, [r1, r2]
   17a70:	add	r0, pc, r0
   17a74:	ldr	r1, [pc, #-3024]	; 16eac <__flatcc_fb_codegen_c@@Base+0x18e4>
   17a78:	add	r4, pc, r4
   17a7c:	str	r0, [sp]
   17a80:	mov	r2, r4
   17a84:	ldr	r0, [ip]
   17a88:	add	r1, pc, r1
   17a8c:	bl	13f58 <fprintf@plt>
   17a90:	ldr	r3, [pc, #-3048]	; 16eb0 <__flatcc_fb_codegen_c@@Base+0x18e8>
   17a94:	mov	r1, r4
   17a98:	mov	r2, #141	; 0x8d
   17a9c:	ldr	r0, [pc, #-3056]	; 16eb4 <__flatcc_fb_codegen_c@@Base+0x18ec>
   17aa0:	add	r3, pc, r3
   17aa4:	add	r3, r3, #20
   17aa8:	add	r0, pc, r0
   17aac:	bl	1400c <__assert_fail@plt>
   17ab0:	ldr	r3, [pc, #-3072]	; 16eb8 <__flatcc_fb_codegen_c@@Base+0x18f0>
   17ab4:	movw	r2, #1343	; 0x53f
   17ab8:	ldr	r1, [pc, #-3076]	; 16ebc <__flatcc_fb_codegen_c@@Base+0x18f4>
   17abc:	ldr	r0, [pc, #-3076]	; 16ec0 <__flatcc_fb_codegen_c@@Base+0x18f8>
   17ac0:	add	r3, pc, r3
   17ac4:	add	r3, r3, #124	; 0x7c
   17ac8:	add	r1, pc, r1
   17acc:	add	r0, pc, r0
   17ad0:	bl	1400c <__assert_fail@plt>
   17ad4:	ldr	r2, [pc, #-2944]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17ad8:	movw	r3, #1339	; 0x53b
   17adc:	ldr	r1, [sp, #84]	; 0x54
   17ae0:	ldr	r0, [pc, #-3108]	; 16ec4 <__flatcc_fb_codegen_c@@Base+0x18fc>
   17ae4:	ldr	r4, [pc, #-3108]	; 16ec8 <__flatcc_fb_codegen_c@@Base+0x1900>
   17ae8:	ldr	ip, [r1, r2]
   17aec:	add	r0, pc, r0
   17af0:	ldr	r1, [pc, #-3116]	; 16ecc <__flatcc_fb_codegen_c@@Base+0x1904>
   17af4:	add	r4, pc, r4
   17af8:	str	r0, [sp]
   17afc:	mov	r2, r4
   17b00:	ldr	r0, [ip]
   17b04:	add	r1, pc, r1
   17b08:	bl	13f58 <fprintf@plt>
   17b0c:	ldr	r3, [pc, #-3140]	; 16ed0 <__flatcc_fb_codegen_c@@Base+0x1908>
   17b10:	mov	r1, r4
   17b14:	movw	r2, #1339	; 0x53b
   17b18:	ldr	r0, [pc, #-3148]	; 16ed4 <__flatcc_fb_codegen_c@@Base+0x190c>
   17b1c:	add	r3, pc, r3
   17b20:	add	r3, r3, #124	; 0x7c
   17b24:	add	r0, pc, r0
   17b28:	bl	1400c <__assert_fail@plt>
   17b2c:	ldr	r3, [pc, #-3164]	; 16ed8 <__flatcc_fb_codegen_c@@Base+0x1910>
   17b30:	ldr	r2, [pc, #-3164]	; 16edc <__flatcc_fb_codegen_c@@Base+0x1914>
   17b34:	add	r3, pc, r3
   17b38:	add	r2, pc, r2
   17b3c:	str	r3, [sp, #64]	; 0x40
   17b40:	b	170b4 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17b44:	ldr	r3, [pc, #-3180]	; 16ee0 <__flatcc_fb_codegen_c@@Base+0x1918>
   17b48:	movw	r2, #1362	; 0x552
   17b4c:	ldr	r1, [pc, #-3184]	; 16ee4 <__flatcc_fb_codegen_c@@Base+0x191c>
   17b50:	ldr	r0, [pc, #-3184]	; 16ee8 <__flatcc_fb_codegen_c@@Base+0x1920>
   17b54:	add	r3, pc, r3
   17b58:	add	r3, r3, #72	; 0x48
   17b5c:	add	r1, pc, r1
   17b60:	add	r0, pc, r0
   17b64:	bl	1400c <__assert_fail@plt>
   17b68:	ldr	r2, [pc, #-3204]	; 16eec <__flatcc_fb_codegen_c@@Base+0x1924>
   17b6c:	add	r2, pc, r2
   17b70:	str	r2, [sp, #68]	; 0x44
   17b74:	ldr	r2, [pc, #-3212]	; 16ef0 <__flatcc_fb_codegen_c@@Base+0x1928>
   17b78:	add	r2, pc, r2
   17b7c:	str	r2, [sp, #76]	; 0x4c
   17b80:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17b84:	ldr	r2, [pc, #-3224]	; 16ef4 <__flatcc_fb_codegen_c@@Base+0x192c>
   17b88:	add	r2, pc, r2
   17b8c:	str	r2, [sp, #68]	; 0x44
   17b90:	ldr	r2, [pc, #-3232]	; 16ef8 <__flatcc_fb_codegen_c@@Base+0x1930>
   17b94:	add	r2, pc, r2
   17b98:	str	r2, [sp, #64]	; 0x40
   17b9c:	ldr	r2, [pc, #-3240]	; 16efc <__flatcc_fb_codegen_c@@Base+0x1934>
   17ba0:	add	r2, pc, r2
   17ba4:	str	r2, [sp, #76]	; 0x4c
   17ba8:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   17bac:	ldr	r2, [pc, #-3252]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1938>
   17bb0:	add	r2, pc, r2
   17bb4:	str	r2, [sp, #68]	; 0x44
   17bb8:	ldr	r2, [pc, #-3260]	; 16f04 <__flatcc_fb_codegen_c@@Base+0x193c>
   17bbc:	add	r2, pc, r2
   17bc0:	str	r2, [sp, #64]	; 0x40
   17bc4:	ldr	r2, [pc, #-3268]	; 16f08 <__flatcc_fb_codegen_c@@Base+0x1940>
   17bc8:	add	r2, pc, r2
   17bcc:	str	r2, [sp, #76]	; 0x4c
   17bd0:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17bd4:	ldr	r3, [pc, #-3280]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1944>
   17bd8:	add	r3, pc, r3
   17bdc:	str	r3, [sp, #68]	; 0x44
   17be0:	ldr	r3, [pc, #-3288]	; 16f10 <__flatcc_fb_codegen_c@@Base+0x1948>
   17be4:	add	r3, pc, r3
   17be8:	str	r3, [sp, #76]	; 0x4c
   17bec:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   17bf0:	ldr	r2, [pc, #-3300]	; 16f14 <__flatcc_fb_codegen_c@@Base+0x194c>
   17bf4:	add	r2, pc, r2
   17bf8:	str	r2, [sp, #68]	; 0x44
   17bfc:	ldr	r2, [pc, #-3308]	; 16f18 <__flatcc_fb_codegen_c@@Base+0x1950>
   17c00:	add	r2, pc, r2
   17c04:	str	r2, [sp, #64]	; 0x40
   17c08:	ldr	r2, [pc, #-3316]	; 16f1c <__flatcc_fb_codegen_c@@Base+0x1954>
   17c0c:	add	r2, pc, r2
   17c10:	str	r2, [sp, #76]	; 0x4c
   17c14:	b	16468 <__flatcc_fb_codegen_c@@Base+0xea0>
   17c18:	ldr	r2, [pc, #-3328]	; 16f20 <__flatcc_fb_codegen_c@@Base+0x1958>
   17c1c:	add	r2, pc, r2
   17c20:	str	r2, [sp, #68]	; 0x44
   17c24:	ldr	r2, [pc, #-3336]	; 16f24 <__flatcc_fb_codegen_c@@Base+0x195c>
   17c28:	add	r2, pc, r2
   17c2c:	str	r2, [sp, #64]	; 0x40
   17c30:	ldr	r2, [pc, #-3344]	; 16f28 <__flatcc_fb_codegen_c@@Base+0x1960>
   17c34:	add	r2, pc, r2
   17c38:	str	r2, [sp, #76]	; 0x4c
   17c3c:	b	164b8 <__flatcc_fb_codegen_c@@Base+0xef0>
   17c40:	ldr	r3, [pc, #-3356]	; 16f2c <__flatcc_fb_codegen_c@@Base+0x1964>
   17c44:	add	r3, pc, r3
   17c48:	str	r3, [sp, #68]	; 0x44
   17c4c:	ldr	r3, [pc, #-3364]	; 16f30 <__flatcc_fb_codegen_c@@Base+0x1968>
   17c50:	add	r3, pc, r3
   17c54:	str	r3, [sp, #76]	; 0x4c
   17c58:	b	174a8 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   17c5c:	ldr	r2, [pc, #-3336]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17c60:	mov	r3, #260	; 0x104
   17c64:	ldr	r1, [sp, #84]	; 0x54
   17c68:	ldr	r0, [pc, #-3388]	; 16f34 <__flatcc_fb_codegen_c@@Base+0x196c>
   17c6c:	ldr	r4, [pc, #-3388]	; 16f38 <__flatcc_fb_codegen_c@@Base+0x1970>
   17c70:	ldr	ip, [r1, r2]
   17c74:	add	r0, pc, r0
   17c78:	ldr	r1, [pc, #-3396]	; 16f3c <__flatcc_fb_codegen_c@@Base+0x1974>
   17c7c:	add	r4, pc, r4
   17c80:	str	r0, [sp]
   17c84:	mov	r2, r4
   17c88:	ldr	r0, [ip]
   17c8c:	add	r1, pc, r1
   17c90:	bl	13f58 <fprintf@plt>
   17c94:	ldr	r3, [pc, #-3420]	; 16f40 <__flatcc_fb_codegen_c@@Base+0x1978>
   17c98:	mov	r1, r4
   17c9c:	mov	r2, #260	; 0x104
   17ca0:	ldr	r0, [pc, #-3428]	; 16f44 <__flatcc_fb_codegen_c@@Base+0x197c>
   17ca4:	add	r3, pc, r3
   17ca8:	add	r3, r3, #84	; 0x54
   17cac:	add	r0, pc, r0
   17cb0:	bl	1400c <__assert_fail@plt>
   17cb4:	ldr	r2, [pc, #-3424]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17cb8:	mov	r3, #186	; 0xba
   17cbc:	ldr	r1, [sp, #84]	; 0x54
   17cc0:	ldr	r0, [pc, #-3456]	; 16f48 <__flatcc_fb_codegen_c@@Base+0x1980>
   17cc4:	ldr	r4, [pc, #-3456]	; 16f4c <__flatcc_fb_codegen_c@@Base+0x1984>
   17cc8:	ldr	ip, [r1, r2]
   17ccc:	add	r0, pc, r0
   17cd0:	ldr	r1, [pc, #-3464]	; 16f50 <__flatcc_fb_codegen_c@@Base+0x1988>
   17cd4:	add	r4, pc, r4
   17cd8:	str	r0, [sp]
   17cdc:	mov	r2, r4
   17ce0:	ldr	r0, [ip]
   17ce4:	add	r1, pc, r1
   17ce8:	bl	13f58 <fprintf@plt>
   17cec:	ldr	r3, [pc, #-3488]	; 16f54 <__flatcc_fb_codegen_c@@Base+0x198c>
   17cf0:	mov	r1, r4
   17cf4:	mov	r2, #186	; 0xba
   17cf8:	ldr	r0, [pc, #-3496]	; 16f58 <__flatcc_fb_codegen_c@@Base+0x1990>
   17cfc:	add	r3, pc, r3
   17d00:	add	r3, r3, #100	; 0x64
   17d04:	add	r0, pc, r0
   17d08:	bl	1400c <__assert_fail@plt>
   17d0c:	ldr	r2, [pc, #-3512]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1994>
   17d10:	mov	r3, #260	; 0x104
   17d14:	ldr	r1, [sp, #84]	; 0x54
   17d18:	ldr	r0, [pc, #-3520]	; 16f60 <__flatcc_fb_codegen_c@@Base+0x1998>
   17d1c:	ldr	r4, [pc, #-3520]	; 16f64 <__flatcc_fb_codegen_c@@Base+0x199c>
   17d20:	ldr	ip, [r1, r2]
   17d24:	add	r0, pc, r0
   17d28:	ldr	r1, [pc, #-3528]	; 16f68 <__flatcc_fb_codegen_c@@Base+0x19a0>
   17d2c:	add	r4, pc, r4
   17d30:	str	r0, [sp]
   17d34:	mov	r2, r4
   17d38:	ldr	r0, [ip]
   17d3c:	add	r1, pc, r1
   17d40:	bl	13f58 <fprintf@plt>
   17d44:	ldr	r3, [pc, #-3552]	; 16f6c <__flatcc_fb_codegen_c@@Base+0x19a4>
   17d48:	mov	r1, r4
   17d4c:	mov	r2, #260	; 0x104
   17d50:	ldr	r0, [pc, #-3560]	; 16f70 <__flatcc_fb_codegen_c@@Base+0x19a8>
   17d54:	add	r3, pc, r3
   17d58:	add	r3, r3, #84	; 0x54
   17d5c:	add	r0, pc, r0
   17d60:	bl	1400c <__assert_fail@plt>
   17d64:	ldr	r3, [pc, #2804]	; 18860 <__flatcc_fb_codegen_c@@Base+0x3298>
   17d68:	mov	r2, #220	; 0xdc
   17d6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17d70:	mov	r4, r0
   17d74:	strd	r6, [sp, #8]
   17d78:	strd	r8, [sp, #16]
   17d7c:	mov	r8, r1
   17d80:	mov	r1, #0
   17d84:	strd	sl, [sp, #24]
   17d88:	str	lr, [sp, #32]
   17d8c:	sub	sp, sp, #372	; 0x174
   17d90:	add	r3, pc, r3
   17d94:	add	r6, sp, #148	; 0x94
   17d98:	mov	r0, r6
   17d9c:	str	r3, [sp, #44]	; 0x2c
   17da0:	bl	13f70 <memset@plt>
   17da4:	ldrh	r3, [r8, #8]
   17da8:	str	r3, [sp, #40]	; 0x28
   17dac:	sub	r3, r3, #3
   17db0:	cmp	r3, #1
   17db4:	bhi	18768 <__flatcc_fb_codegen_c@@Base+0x31a0>
   17db8:	ldrh	r3, [r8, #48]	; 0x30
   17dbc:	cmp	r3, #8
   17dc0:	bne	1878c <__flatcc_fb_codegen_c@@Base+0x31c4>
   17dc4:	ldr	r3, [r8, #40]	; 0x28
   17dc8:	cmp	r3, #5
   17dcc:	beq	17e0c <__flatcc_fb_codegen_c@@Base+0x2844>
   17dd0:	sub	r3, r3, #1
   17dd4:	cmp	r3, #10
   17dd8:	addls	pc, pc, r3, lsl #2
   17ddc:	b	18764 <__flatcc_fb_codegen_c@@Base+0x319c>
   17de0:	b	1860c <__flatcc_fb_codegen_c@@Base+0x3044>
   17de4:	b	18624 <__flatcc_fb_codegen_c@@Base+0x305c>
   17de8:	b	1863c <__flatcc_fb_codegen_c@@Base+0x3074>
   17dec:	b	18654 <__flatcc_fb_codegen_c@@Base+0x308c>
   17df0:	b	18764 <__flatcc_fb_codegen_c@@Base+0x319c>
   17df4:	b	18684 <__flatcc_fb_codegen_c@@Base+0x30bc>
   17df8:	b	1869c <__flatcc_fb_codegen_c@@Base+0x30d4>
   17dfc:	b	186b4 <__flatcc_fb_codegen_c@@Base+0x30ec>
   17e00:	b	186cc <__flatcc_fb_codegen_c@@Base+0x3104>
   17e04:	b	185f4 <__flatcc_fb_codegen_c@@Base+0x302c>
   17e08:	b	1866c <__flatcc_fb_codegen_c@@Base+0x30a4>
   17e0c:	ldr	fp, [pc, #2640]	; 18864 <__flatcc_fb_codegen_c@@Base+0x329c>
   17e10:	str	r4, [sp, #16]
   17e14:	add	fp, pc, fp
   17e18:	ldr	r3, [sp, #40]	; 0x28
   17e1c:	mov	r2, r6
   17e20:	mov	r1, r8
   17e24:	ldr	r0, [r8, #12]
   17e28:	cmp	r3, #3
   17e2c:	ldr	r3, [r8, #112]	; 0x70
   17e30:	lsl	r3, r3, #3
   17e34:	str	r3, [sp, #20]
   17e38:	beq	18534 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17e3c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   17e40:	ldr	r5, [r8, #32]
   17e44:	cmp	r5, #0
   17e48:	beq	184a8 <__flatcc_fb_codegen_c@@Base+0x2ee0>
   17e4c:	ldr	r3, [pc, #2580]	; 18868 <__flatcc_fb_codegen_c@@Base+0x32a0>
   17e50:	add	r3, pc, r3
   17e54:	str	r3, [sp, #36]	; 0x24
   17e58:	ldr	sl, [pc, #2572]	; 1886c <__flatcc_fb_codegen_c@@Base+0x32a4>
   17e5c:	mov	ip, #1
   17e60:	mov	r3, #0
   17e64:	ldr	r9, [pc, #2564]	; 18870 <__flatcc_fb_codegen_c@@Base+0x32a8>
   17e68:	ldr	r7, [pc, #2564]	; 18874 <__flatcc_fb_codegen_c@@Base+0x32ac>
   17e6c:	add	sl, pc, sl
   17e70:	add	r9, pc, r9
   17e74:	add	r7, pc, r7
   17e78:	b	17ec0 <__flatcc_fb_codegen_c@@Base+0x28f8>
   17e7c:	ldr	r1, [pc, #2548]	; 18878 <__flatcc_fb_codegen_c@@Base+0x32b0>
   17e80:	mov	r2, r7
   17e84:	add	r1, pc, r1
   17e88:	bl	13f58 <fprintf@plt>
   17e8c:	ldr	r2, [r5, #4]
   17e90:	ldr	r0, [r4, #204]	; 0xcc
   17e94:	ldr	r1, [pc, #2528]	; 1887c <__flatcc_fb_codegen_c@@Base+0x32b4>
   17e98:	ldr	r3, [r2]
   17e9c:	ldr	r2, [r2, #4]
   17ea0:	add	r1, pc, r1
   17ea4:	bl	13f58 <fprintf@plt>
   17ea8:	ldr	r3, [r5, #4]
   17eac:	mov	ip, #0
   17eb0:	ldr	r5, [r5]
   17eb4:	ldr	r3, [r3, #8]
   17eb8:	cmp	r5, ip
   17ebc:	beq	17ef4 <__flatcc_fb_codegen_c@@Base+0x292c>
   17ec0:	ldr	r2, [r5, #4]
   17ec4:	ldr	r0, [r4, #204]	; 0xcc
   17ec8:	ldr	r1, [r2, #8]
   17ecc:	cmp	r1, r3
   17ed0:	beq	17e94 <__flatcc_fb_codegen_c@@Base+0x28cc>
   17ed4:	cmp	ip, #0
   17ed8:	bne	17e7c <__flatcc_fb_codegen_c@@Base+0x28b4>
   17edc:	mov	r2, sl
   17ee0:	mov	r1, r9
   17ee4:	bl	13f58 <fprintf@plt>
   17ee8:	ldr	r2, [r5, #4]
   17eec:	ldr	r0, [r4, #204]	; 0xcc
   17ef0:	b	17e94 <__flatcc_fb_codegen_c@@Base+0x28cc>
   17ef4:	ldr	r0, [pc, #2436]	; 18880 <__flatcc_fb_codegen_c@@Base+0x32b8>
   17ef8:	mov	r2, #4
   17efc:	mov	r1, #1
   17f00:	ldr	r3, [r4, #204]	; 0xcc
   17f04:	add	r0, pc, r0
   17f08:	bl	13eec <fwrite@plt>
   17f0c:	ldr	r1, [pc, #2416]	; 18884 <__flatcc_fb_codegen_c@@Base+0x32bc>
   17f10:	mov	r3, fp
   17f14:	str	r6, [sp]
   17f18:	ldr	r2, [sp, #16]
   17f1c:	ldr	r5, [sp, #36]	; 0x24
   17f20:	add	r1, pc, r1
   17f24:	str	r5, [sp, #4]
   17f28:	ldr	r0, [r4, #204]	; 0xcc
   17f2c:	bl	13f58 <fprintf@plt>
   17f30:	ldr	r1, [pc, #2384]	; 18888 <__flatcc_fb_codegen_c@@Base+0x32c0>
   17f34:	mov	r3, r6
   17f38:	mov	r2, r4
   17f3c:	str	r6, [sp]
   17f40:	ldr	r0, [sp, #20]
   17f44:	str	r5, [sp, #4]
   17f48:	add	r1, pc, r1
   17f4c:	str	r0, [sp, #8]
   17f50:	ldr	r0, [r4, #204]	; 0xcc
   17f54:	bl	13f58 <fprintf@plt>
   17f58:	ldr	r3, [sp, #40]	; 0x28
   17f5c:	cmp	r3, #3
   17f60:	bne	184fc <__flatcc_fb_codegen_c@@Base+0x2f34>
   17f64:	ldr	r5, [r8, #20]
   17f68:	cmp	r5, #0
   17f6c:	beq	18554 <__flatcc_fb_codegen_c@@Base+0x2f8c>
   17f70:	ldr	r3, [pc, #2324]	; 1888c <__flatcc_fb_codegen_c@@Base+0x32c4>
   17f74:	ldr	fp, [pc, #2324]	; 18890 <__flatcc_fb_codegen_c@@Base+0x32c8>
   17f78:	add	r3, pc, r3
   17f7c:	str	r3, [sp, #24]
   17f80:	add	fp, pc, fp
   17f84:	ldr	r3, [pc, #2312]	; 18894 <__flatcc_fb_codegen_c@@Base+0x32cc>
   17f88:	str	fp, [sp, #20]
   17f8c:	add	r3, pc, r3
   17f90:	str	r3, [sp, #28]
   17f94:	ldr	r3, [pc, #2300]	; 18898 <__flatcc_fb_codegen_c@@Base+0x32d0>
   17f98:	add	r3, pc, r3
   17f9c:	str	r3, [sp, #32]
   17fa0:	ldr	r7, [r5, #68]	; 0x44
   17fa4:	cmp	r7, #0
   17fa8:	beq	1804c <__flatcc_fb_codegen_c@@Base+0x2a84>
   17fac:	mov	r1, #1
   17fb0:	mov	r3, #0
   17fb4:	ldr	fp, [sp, #20]
   17fb8:	b	17ffc <__flatcc_fb_codegen_c@@Base+0x2a34>
   17fbc:	ldr	r1, [pc, #2264]	; 1889c <__flatcc_fb_codegen_c@@Base+0x32d4>
   17fc0:	ldr	r2, [sp, #28]
   17fc4:	add	r1, pc, r1
   17fc8:	bl	13f58 <fprintf@plt>
   17fcc:	ldr	r2, [r7, #4]
   17fd0:	ldr	r0, [r4, #204]	; 0xcc
   17fd4:	ldr	r3, [r2]
   17fd8:	ldr	r2, [r2, #4]
   17fdc:	ldr	r1, [sp, #32]
   17fe0:	bl	13f58 <fprintf@plt>
   17fe4:	ldr	r3, [r7, #4]
   17fe8:	mov	r1, #0
   17fec:	ldr	r7, [r7]
   17ff0:	ldr	r3, [r3, #8]
   17ff4:	cmp	r7, r1
   17ff8:	beq	18030 <__flatcc_fb_codegen_c@@Base+0x2a68>
   17ffc:	ldr	r2, [r7, #4]
   18000:	ldr	r0, [r4, #204]	; 0xcc
   18004:	ldr	ip, [r2, #8]
   18008:	cmp	ip, r3
   1800c:	beq	17fd4 <__flatcc_fb_codegen_c@@Base+0x2a0c>
   18010:	cmp	r1, #0
   18014:	bne	17fbc <__flatcc_fb_codegen_c@@Base+0x29f4>
   18018:	mov	r2, fp
   1801c:	ldr	r1, [sp, #24]
   18020:	bl	13f58 <fprintf@plt>
   18024:	ldr	r2, [r7, #4]
   18028:	ldr	r0, [r4, #204]	; 0xcc
   1802c:	b	17fd4 <__flatcc_fb_codegen_c@@Base+0x2a0c>
   18030:	ldr	r0, [pc, #2152]	; 188a0 <__flatcc_fb_codegen_c@@Base+0x32d8>
   18034:	mov	r2, #4
   18038:	mov	r1, #1
   1803c:	str	fp, [sp, #20]
   18040:	ldr	r3, [r4, #204]	; 0xcc
   18044:	add	r0, pc, r0
   18048:	bl	13eec <fwrite@plt>
   1804c:	ldr	r1, [r5, #4]
   18050:	ldrh	r3, [r5, #56]	; 0x38
   18054:	ldr	r2, [r8, #40]	; 0x28
   18058:	ldr	r9, [r1]
   1805c:	sub	r3, r3, #3
   18060:	ldr	r1, [r1, #4]
   18064:	str	r1, [sp, #16]
   18068:	cmp	r3, #3
   1806c:	addls	pc, pc, r3, lsl #2
   18070:	b	18808 <__flatcc_fb_codegen_c@@Base+0x3240>
   18074:	b	18120 <__flatcc_fb_codegen_c@@Base+0x2b58>
   18078:	b	180ec <__flatcc_fb_codegen_c@@Base+0x2b24>
   1807c:	b	180b8 <__flatcc_fb_codegen_c@@Base+0x2af0>
   18080:	b	18084 <__flatcc_fb_codegen_c@@Base+0x2abc>
   18084:	sub	r2, r2, #1
   18088:	cmp	r2, #8
   1808c:	addls	pc, pc, r2, lsl #2
   18090:	b	187b0 <__flatcc_fb_codegen_c@@Base+0x31e8>
   18094:	b	18390 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   18098:	b	18384 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   1809c:	b	183cc <__flatcc_fb_codegen_c@@Base+0x2e04>
   180a0:	b	18338 <__flatcc_fb_codegen_c@@Base+0x2d70>
   180a4:	b	18338 <__flatcc_fb_codegen_c@@Base+0x2d70>
   180a8:	b	183b4 <__flatcc_fb_codegen_c@@Base+0x2dec>
   180ac:	b	183a8 <__flatcc_fb_codegen_c@@Base+0x2de0>
   180b0:	b	1839c <__flatcc_fb_codegen_c@@Base+0x2dd4>
   180b4:	b	183c0 <__flatcc_fb_codegen_c@@Base+0x2df8>
   180b8:	sub	r2, r2, #1
   180bc:	cmp	r2, #8
   180c0:	addls	pc, pc, r2, lsl #2
   180c4:	b	187b0 <__flatcc_fb_codegen_c@@Base+0x31e8>
   180c8:	b	183f0 <__flatcc_fb_codegen_c@@Base+0x2e28>
   180cc:	b	183e4 <__flatcc_fb_codegen_c@@Base+0x2e1c>
   180d0:	b	183d8 <__flatcc_fb_codegen_c@@Base+0x2e10>
   180d4:	b	1835c <__flatcc_fb_codegen_c@@Base+0x2d94>
   180d8:	b	1835c <__flatcc_fb_codegen_c@@Base+0x2d94>
   180dc:	b	18414 <__flatcc_fb_codegen_c@@Base+0x2e4c>
   180e0:	b	18408 <__flatcc_fb_codegen_c@@Base+0x2e40>
   180e4:	b	183fc <__flatcc_fb_codegen_c@@Base+0x2e34>
   180e8:	b	18420 <__flatcc_fb_codegen_c@@Base+0x2e58>
   180ec:	sub	r2, r2, #1
   180f0:	cmp	r2, #8
   180f4:	addls	pc, pc, r2, lsl #2
   180f8:	b	187b0 <__flatcc_fb_codegen_c@@Base+0x31e8>
   180fc:	b	18474 <__flatcc_fb_codegen_c@@Base+0x2eac>
   18100:	b	18468 <__flatcc_fb_codegen_c@@Base+0x2ea0>
   18104:	b	1842c <__flatcc_fb_codegen_c@@Base+0x2e64>
   18108:	b	18310 <__flatcc_fb_codegen_c@@Base+0x2d48>
   1810c:	b	18310 <__flatcc_fb_codegen_c@@Base+0x2d48>
   18110:	b	18438 <__flatcc_fb_codegen_c@@Base+0x2e70>
   18114:	b	1845c <__flatcc_fb_codegen_c@@Base+0x2e94>
   18118:	b	18450 <__flatcc_fb_codegen_c@@Base+0x2e88>
   1811c:	b	18444 <__flatcc_fb_codegen_c@@Base+0x2e7c>
   18120:	cmp	r2, #11
   18124:	beq	18480 <__flatcc_fb_codegen_c@@Base+0x2eb8>
   18128:	ldr	r1, [pc, #1908]	; 188a4 <__flatcc_fb_codegen_c@@Base+0x32dc>
   1812c:	add	r7, sp, #48	; 0x30
   18130:	mov	r0, r7
   18134:	ldrd	r2, [r5, #48]	; 0x30
   18138:	add	r1, pc, r1
   1813c:	bl	13fc4 <sprintf@plt>
   18140:	ldr	r1, [pc, #1888]	; 188a8 <__flatcc_fb_codegen_c@@Base+0x32e0>
   18144:	mov	r2, r6
   18148:	str	r9, [sp]
   1814c:	str	r6, [sp, #4]
   18150:	ldr	r0, [sp, #36]	; 0x24
   18154:	add	r1, pc, r1
   18158:	ldr	r3, [sp, #16]
   1815c:	str	r0, [sp, #8]
   18160:	str	r7, [sp, #12]
   18164:	ldr	r0, [r4, #204]	; 0xcc
   18168:	bl	13f58 <fprintf@plt>
   1816c:	ldr	r5, [r5]
   18170:	cmp	r5, #0
   18174:	bne	17fa0 <__flatcc_fb_codegen_c@@Base+0x29d8>
   18178:	mov	r0, #10
   1817c:	ldr	r1, [r4, #204]	; 0xcc
   18180:	bl	13fb8 <fputc@plt>
   18184:	ldr	r3, [sp, #40]	; 0x28
   18188:	cmp	r3, #3
   1818c:	beq	18560 <__flatcc_fb_codegen_c@@Base+0x2f98>
   18190:	ldr	r1, [pc, #1812]	; 188ac <__flatcc_fb_codegen_c@@Base+0x32e4>
   18194:	mov	r3, r6
   18198:	mov	r2, r6
   1819c:	ldr	r0, [r4, #204]	; 0xcc
   181a0:	add	r1, pc, r1
   181a4:	bl	13f58 <fprintf@plt>
   181a8:	ldr	r0, [pc, #1792]	; 188b0 <__flatcc_fb_codegen_c@@Base+0x32e8>
   181ac:	mov	r2, #20
   181b0:	mov	r1, #1
   181b4:	ldr	r3, [r4, #204]	; 0xcc
   181b8:	add	r0, pc, r0
   181bc:	bl	13eec <fwrite@plt>
   181c0:	ldr	r5, [r8, #20]
   181c4:	cmp	r5, #0
   181c8:	beq	186e4 <__flatcc_fb_codegen_c@@Base+0x311c>
   181cc:	ldr	r9, [pc, #1760]	; 188b4 <__flatcc_fb_codegen_c@@Base+0x32ec>
   181d0:	ldr	r7, [pc, #1760]	; 188b8 <__flatcc_fb_codegen_c@@Base+0x32f0>
   181d4:	add	r9, pc, r9
   181d8:	add	r7, pc, r7
   181dc:	ldr	r3, [r5, #4]
   181e0:	ldrh	r2, [r5, #10]
   181e4:	ldr	r0, [r4, #204]	; 0xcc
   181e8:	ldr	ip, [r3]
   181ec:	tst	r2, #4
   181f0:	mov	r2, r6
   181f4:	ldr	r1, [r3, #4]
   181f8:	str	ip, [sp]
   181fc:	mov	r3, r1
   18200:	str	r1, [sp, #4]
   18204:	movne	r1, r7
   18208:	moveq	r1, r9
   1820c:	str	ip, [sp, #8]
   18210:	bl	13f58 <fprintf@plt>
   18214:	ldr	r5, [r5]
   18218:	cmp	r5, #0
   1821c:	bne	181dc <__flatcc_fb_codegen_c@@Base+0x2c14>
   18220:	ldr	r0, [pc, #1684]	; 188bc <__flatcc_fb_codegen_c@@Base+0x32f4>
   18224:	mov	r2, #32
   18228:	mov	r1, #1
   1822c:	ldr	r3, [r4, #204]	; 0xcc
   18230:	add	r0, pc, r0
   18234:	bl	13eec <fwrite@plt>
   18238:	mov	r0, #10
   1823c:	ldr	r1, [r4, #204]	; 0xcc
   18240:	bl	13fb8 <fputc@plt>
   18244:	ldr	r3, [sp, #40]	; 0x28
   18248:	cmp	r3, #3
   1824c:	beq	185c0 <__flatcc_fb_codegen_c@@Base+0x2ff8>
   18250:	ldr	r1, [pc, #1640]	; 188c0 <__flatcc_fb_codegen_c@@Base+0x32f8>
   18254:	mov	r3, r6
   18258:	mov	r2, r6
   1825c:	ldr	r0, [r4, #204]	; 0xcc
   18260:	add	r1, pc, r1
   18264:	bl	13f58 <fprintf@plt>
   18268:	ldr	r0, [pc, #1620]	; 188c4 <__flatcc_fb_codegen_c@@Base+0x32fc>
   1826c:	mov	r2, #20
   18270:	mov	r1, #1
   18274:	ldr	r3, [r4, #204]	; 0xcc
   18278:	add	r0, pc, r0
   1827c:	bl	13eec <fwrite@plt>
   18280:	ldr	r5, [r8, #20]
   18284:	cmp	r5, #0
   18288:	beq	182d0 <__flatcc_fb_codegen_c@@Base+0x2d08>
   1828c:	ldr	r8, [pc, #1588]	; 188c8 <__flatcc_fb_codegen_c@@Base+0x3300>
   18290:	ldr	r7, [pc, #1588]	; 188cc <__flatcc_fb_codegen_c@@Base+0x3304>
   18294:	add	r8, pc, r8
   18298:	add	r7, pc, r7
   1829c:	ldrh	r2, [r5, #10]
   182a0:	ldr	r3, [r5, #4]
   182a4:	ldr	r0, [r4, #204]	; 0xcc
   182a8:	tst	r2, #4
   182ac:	movne	r1, r7
   182b0:	moveq	r1, r8
   182b4:	ldrd	r2, [r3]
   182b8:	str	r2, [sp]
   182bc:	mov	r2, r6
   182c0:	bl	13f58 <fprintf@plt>
   182c4:	ldr	r5, [r5]
   182c8:	cmp	r5, #0
   182cc:	bne	1829c <__flatcc_fb_codegen_c@@Base+0x2cd4>
   182d0:	ldr	r0, [pc, #1528]	; 188d0 <__flatcc_fb_codegen_c@@Base+0x3308>
   182d4:	mov	r2, #31
   182d8:	mov	r1, #1
   182dc:	ldr	r3, [r4, #204]	; 0xcc
   182e0:	add	r0, pc, r0
   182e4:	bl	13eec <fwrite@plt>
   182e8:	ldr	r1, [r4, #204]	; 0xcc
   182ec:	mov	r0, #10
   182f0:	bl	13fb8 <fputc@plt>
   182f4:	add	sp, sp, #372	; 0x174
   182f8:	ldrd	r4, [sp]
   182fc:	ldrd	r6, [sp, #8]
   18300:	ldrd	r8, [sp, #16]
   18304:	ldrd	sl, [sp, #24]
   18308:	add	sp, sp, #32
   1830c:	pop	{pc}		; (ldr pc, [sp], #4)
   18310:	ldr	r2, [pc, #1468]	; 188d4 <__flatcc_fb_codegen_c@@Base+0x330c>
   18314:	add	r2, pc, r2
   18318:	ldr	r1, [pc, #1464]	; 188d8 <__flatcc_fb_codegen_c@@Base+0x3310>
   1831c:	add	r7, sp, #48	; 0x30
   18320:	mov	r0, r7
   18324:	ldrd	sl, [r5, #48]	; 0x30
   18328:	add	r1, pc, r1
   1832c:	strd	sl, [sp]
   18330:	bl	13fc4 <sprintf@plt>
   18334:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18338:	ldr	r2, [pc, #1436]	; 188dc <__flatcc_fb_codegen_c@@Base+0x3314>
   1833c:	add	r2, pc, r2
   18340:	ldr	r1, [pc, #1432]	; 188e0 <__flatcc_fb_codegen_c@@Base+0x3318>
   18344:	add	r7, sp, #48	; 0x30
   18348:	mov	r0, r7
   1834c:	ldrb	r3, [r5, #48]	; 0x30
   18350:	add	r1, pc, r1
   18354:	bl	13fc4 <sprintf@plt>
   18358:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b78>
   1835c:	ldr	r2, [pc, #1408]	; 188e4 <__flatcc_fb_codegen_c@@Base+0x331c>
   18360:	add	r2, pc, r2
   18364:	ldr	r1, [pc, #1404]	; 188e8 <__flatcc_fb_codegen_c@@Base+0x3320>
   18368:	add	r7, sp, #48	; 0x30
   1836c:	mov	r0, r7
   18370:	ldrd	sl, [r5, #48]	; 0x30
   18374:	add	r1, pc, r1
   18378:	strd	sl, [sp]
   1837c:	bl	13fc4 <sprintf@plt>
   18380:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18384:	ldr	r2, [pc, #1376]	; 188ec <__flatcc_fb_codegen_c@@Base+0x3324>
   18388:	add	r2, pc, r2
   1838c:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   18390:	ldr	r2, [pc, #1368]	; 188f0 <__flatcc_fb_codegen_c@@Base+0x3328>
   18394:	add	r2, pc, r2
   18398:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   1839c:	ldr	r2, [pc, #1360]	; 188f4 <__flatcc_fb_codegen_c@@Base+0x332c>
   183a0:	add	r2, pc, r2
   183a4:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   183a8:	ldr	r2, [pc, #1352]	; 188f8 <__flatcc_fb_codegen_c@@Base+0x3330>
   183ac:	add	r2, pc, r2
   183b0:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   183b4:	ldr	r2, [pc, #1344]	; 188fc <__flatcc_fb_codegen_c@@Base+0x3334>
   183b8:	add	r2, pc, r2
   183bc:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   183c0:	ldr	r2, [pc, #1336]	; 18900 <__flatcc_fb_codegen_c@@Base+0x3338>
   183c4:	add	r2, pc, r2
   183c8:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   183cc:	ldr	r2, [pc, #1328]	; 18904 <__flatcc_fb_codegen_c@@Base+0x333c>
   183d0:	add	r2, pc, r2
   183d4:	b	18340 <__flatcc_fb_codegen_c@@Base+0x2d78>
   183d8:	ldr	r2, [pc, #1320]	; 18908 <__flatcc_fb_codegen_c@@Base+0x3340>
   183dc:	add	r2, pc, r2
   183e0:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   183e4:	ldr	r2, [pc, #1312]	; 1890c <__flatcc_fb_codegen_c@@Base+0x3344>
   183e8:	add	r2, pc, r2
   183ec:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   183f0:	ldr	r2, [pc, #1304]	; 18910 <__flatcc_fb_codegen_c@@Base+0x3348>
   183f4:	add	r2, pc, r2
   183f8:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   183fc:	ldr	r2, [pc, #1296]	; 18914 <__flatcc_fb_codegen_c@@Base+0x334c>
   18400:	add	r2, pc, r2
   18404:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18408:	ldr	r2, [pc, #1288]	; 18918 <__flatcc_fb_codegen_c@@Base+0x3350>
   1840c:	add	r2, pc, r2
   18410:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18414:	ldr	r2, [pc, #1280]	; 1891c <__flatcc_fb_codegen_c@@Base+0x3354>
   18418:	add	r2, pc, r2
   1841c:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18420:	ldr	r2, [pc, #1272]	; 18920 <__flatcc_fb_codegen_c@@Base+0x3358>
   18424:	add	r2, pc, r2
   18428:	b	18364 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1842c:	ldr	r2, [pc, #1264]	; 18924 <__flatcc_fb_codegen_c@@Base+0x335c>
   18430:	add	r2, pc, r2
   18434:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18438:	ldr	r2, [pc, #1256]	; 18928 <__flatcc_fb_codegen_c@@Base+0x3360>
   1843c:	add	r2, pc, r2
   18440:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18444:	ldr	r2, [pc, #1248]	; 1892c <__flatcc_fb_codegen_c@@Base+0x3364>
   18448:	add	r2, pc, r2
   1844c:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18450:	ldr	r2, [pc, #1240]	; 18930 <__flatcc_fb_codegen_c@@Base+0x3368>
   18454:	add	r2, pc, r2
   18458:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   1845c:	ldr	r2, [pc, #1232]	; 18934 <__flatcc_fb_codegen_c@@Base+0x336c>
   18460:	add	r2, pc, r2
   18464:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18468:	ldr	r2, [pc, #1224]	; 18938 <__flatcc_fb_codegen_c@@Base+0x3370>
   1846c:	add	r2, pc, r2
   18470:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18474:	ldr	r2, [pc, #1216]	; 1893c <__flatcc_fb_codegen_c@@Base+0x3374>
   18478:	add	r2, pc, r2
   1847c:	b	18318 <__flatcc_fb_codegen_c@@Base+0x2d50>
   18480:	vldr	d7, [r5, #48]	; 0x30
   18484:	add	r7, sp, #48	; 0x30
   18488:	mov	r0, r7
   1848c:	ldr	r1, [pc, #1196]	; 18940 <__flatcc_fb_codegen_c@@Base+0x3378>
   18490:	vcvt.f32.f64	s14, d7
   18494:	add	r1, pc, r1
   18498:	vcvt.f64.f32	d7, s14
   1849c:	vmov	r2, r3, d7
   184a0:	bl	13fc4 <sprintf@plt>
   184a4:	b	18140 <__flatcc_fb_codegen_c@@Base+0x2b78>
   184a8:	ldr	r5, [pc, #1172]	; 18944 <__flatcc_fb_codegen_c@@Base+0x337c>
   184ac:	mov	r3, fp
   184b0:	str	r6, [sp]
   184b4:	ldr	r1, [pc, #1164]	; 18948 <__flatcc_fb_codegen_c@@Base+0x3380>
   184b8:	ldr	r2, [sp, #16]
   184bc:	add	r5, pc, r5
   184c0:	ldr	r0, [r4, #204]	; 0xcc
   184c4:	add	r1, pc, r1
   184c8:	str	r5, [sp, #4]
   184cc:	str	r5, [sp, #36]	; 0x24
   184d0:	bl	13f58 <fprintf@plt>
   184d4:	ldr	r1, [pc, #1136]	; 1894c <__flatcc_fb_codegen_c@@Base+0x3384>
   184d8:	mov	r3, r6
   184dc:	mov	r2, r4
   184e0:	str	r6, [sp]
   184e4:	ldr	r0, [sp, #20]
   184e8:	str	r5, [sp, #4]
   184ec:	add	r1, pc, r1
   184f0:	str	r0, [sp, #8]
   184f4:	ldr	r0, [r4, #204]	; 0xcc
   184f8:	bl	13f58 <fprintf@plt>
   184fc:	ldr	r1, [pc, #1100]	; 18950 <__flatcc_fb_codegen_c@@Base+0x3388>
   18500:	mov	r3, r4
   18504:	mov	r2, r4
   18508:	str	r6, [sp]
   1850c:	ldr	r0, [r4, #204]	; 0xcc
   18510:	add	r1, pc, r1
   18514:	bl	13f58 <fprintf@plt>
   18518:	ldr	r5, [r8, #20]
   1851c:	cmp	r5, #0
   18520:	bne	17f70 <__flatcc_fb_codegen_c@@Base+0x29a8>
   18524:	mov	r0, #10
   18528:	ldr	r1, [r4, #204]	; 0xcc
   1852c:	bl	13fb8 <fputc@plt>
   18530:	b	18190 <__flatcc_fb_codegen_c@@Base+0x2bc8>
   18534:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   18538:	ldr	r5, [r8, #32]
   1853c:	cmp	r5, #0
   18540:	beq	1870c <__flatcc_fb_codegen_c@@Base+0x3144>
   18544:	ldr	r3, [pc, #1032]	; 18954 <__flatcc_fb_codegen_c@@Base+0x338c>
   18548:	add	r3, pc, r3
   1854c:	str	r3, [sp, #36]	; 0x24
   18550:	b	17e58 <__flatcc_fb_codegen_c@@Base+0x2890>
   18554:	mov	r0, #10
   18558:	ldr	r1, [r4, #204]	; 0xcc
   1855c:	bl	13fb8 <fputc@plt>
   18560:	ldr	r1, [pc, #1008]	; 18958 <__flatcc_fb_codegen_c@@Base+0x3390>
   18564:	mov	r3, r6
   18568:	mov	r2, r6
   1856c:	ldr	r0, [r4, #204]	; 0xcc
   18570:	add	r1, pc, r1
   18574:	bl	13f58 <fprintf@plt>
   18578:	ldr	r0, [pc, #988]	; 1895c <__flatcc_fb_codegen_c@@Base+0x3394>
   1857c:	mov	r2, #21
   18580:	mov	r1, #1
   18584:	ldr	r3, [r4, #204]	; 0xcc
   18588:	add	r0, pc, r0
   1858c:	bl	13eec <fwrite@plt>
   18590:	ldr	r5, [r8, #20]
   18594:	cmp	r5, #0
   18598:	bne	181cc <__flatcc_fb_codegen_c@@Base+0x2c04>
   1859c:	ldr	r0, [pc, #956]	; 18960 <__flatcc_fb_codegen_c@@Base+0x3398>
   185a0:	mov	r1, #1
   185a4:	mov	r2, #32
   185a8:	ldr	r3, [r4, #204]	; 0xcc
   185ac:	add	r0, pc, r0
   185b0:	bl	13eec <fwrite@plt>
   185b4:	mov	r0, #10
   185b8:	ldr	r1, [r4, #204]	; 0xcc
   185bc:	bl	13fb8 <fputc@plt>
   185c0:	ldr	r1, [pc, #924]	; 18964 <__flatcc_fb_codegen_c@@Base+0x339c>
   185c4:	mov	r3, r6
   185c8:	mov	r2, r6
   185cc:	ldr	r0, [r4, #204]	; 0xcc
   185d0:	add	r1, pc, r1
   185d4:	bl	13f58 <fprintf@plt>
   185d8:	ldr	r0, [pc, #904]	; 18968 <__flatcc_fb_codegen_c@@Base+0x33a0>
   185dc:	mov	r2, #21
   185e0:	mov	r1, #1
   185e4:	ldr	r3, [r4, #204]	; 0xcc
   185e8:	add	r0, pc, r0
   185ec:	bl	13eec <fwrite@plt>
   185f0:	b	18280 <__flatcc_fb_codegen_c@@Base+0x2cb8>
   185f4:	ldr	r3, [pc, #880]	; 1896c <__flatcc_fb_codegen_c@@Base+0x33a4>
   185f8:	ldr	fp, [pc, #880]	; 18970 <__flatcc_fb_codegen_c@@Base+0x33a8>
   185fc:	add	r3, pc, r3
   18600:	add	fp, pc, fp
   18604:	str	r3, [sp, #16]
   18608:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   1860c:	ldr	r3, [pc, #864]	; 18974 <__flatcc_fb_codegen_c@@Base+0x33ac>
   18610:	ldr	fp, [pc, #864]	; 18978 <__flatcc_fb_codegen_c@@Base+0x33b0>
   18614:	add	r3, pc, r3
   18618:	add	fp, pc, fp
   1861c:	str	r3, [sp, #16]
   18620:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   18624:	ldr	r3, [pc, #848]	; 1897c <__flatcc_fb_codegen_c@@Base+0x33b4>
   18628:	ldr	fp, [pc, #848]	; 18980 <__flatcc_fb_codegen_c@@Base+0x33b8>
   1862c:	add	r3, pc, r3
   18630:	add	fp, pc, fp
   18634:	str	r3, [sp, #16]
   18638:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   1863c:	ldr	r3, [pc, #832]	; 18984 <__flatcc_fb_codegen_c@@Base+0x33bc>
   18640:	ldr	fp, [pc, #832]	; 18988 <__flatcc_fb_codegen_c@@Base+0x33c0>
   18644:	add	r3, pc, r3
   18648:	add	fp, pc, fp
   1864c:	str	r3, [sp, #16]
   18650:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   18654:	ldr	r3, [pc, #816]	; 1898c <__flatcc_fb_codegen_c@@Base+0x33c4>
   18658:	ldr	fp, [pc, #816]	; 18990 <__flatcc_fb_codegen_c@@Base+0x33c8>
   1865c:	add	r3, pc, r3
   18660:	add	fp, pc, fp
   18664:	str	r3, [sp, #16]
   18668:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   1866c:	ldr	r3, [pc, #800]	; 18994 <__flatcc_fb_codegen_c@@Base+0x33cc>
   18670:	ldr	fp, [pc, #800]	; 18998 <__flatcc_fb_codegen_c@@Base+0x33d0>
   18674:	add	r3, pc, r3
   18678:	add	fp, pc, fp
   1867c:	str	r3, [sp, #16]
   18680:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   18684:	ldr	r3, [pc, #784]	; 1899c <__flatcc_fb_codegen_c@@Base+0x33d4>
   18688:	ldr	fp, [pc, #784]	; 189a0 <__flatcc_fb_codegen_c@@Base+0x33d8>
   1868c:	add	r3, pc, r3
   18690:	add	fp, pc, fp
   18694:	str	r3, [sp, #16]
   18698:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   1869c:	ldr	r3, [pc, #768]	; 189a4 <__flatcc_fb_codegen_c@@Base+0x33dc>
   186a0:	ldr	fp, [pc, #768]	; 189a8 <__flatcc_fb_codegen_c@@Base+0x33e0>
   186a4:	add	r3, pc, r3
   186a8:	add	fp, pc, fp
   186ac:	str	r3, [sp, #16]
   186b0:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   186b4:	ldr	r3, [pc, #752]	; 189ac <__flatcc_fb_codegen_c@@Base+0x33e4>
   186b8:	ldr	fp, [pc, #752]	; 189b0 <__flatcc_fb_codegen_c@@Base+0x33e8>
   186bc:	add	r3, pc, r3
   186c0:	add	fp, pc, fp
   186c4:	str	r3, [sp, #16]
   186c8:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   186cc:	ldr	r3, [pc, #736]	; 189b4 <__flatcc_fb_codegen_c@@Base+0x33ec>
   186d0:	ldr	fp, [pc, #736]	; 189b8 <__flatcc_fb_codegen_c@@Base+0x33f0>
   186d4:	add	r3, pc, r3
   186d8:	add	fp, pc, fp
   186dc:	str	r3, [sp, #16]
   186e0:	b	17e18 <__flatcc_fb_codegen_c@@Base+0x2850>
   186e4:	ldr	r0, [pc, #720]	; 189bc <__flatcc_fb_codegen_c@@Base+0x33f4>
   186e8:	mov	r2, #32
   186ec:	mov	r1, #1
   186f0:	ldr	r3, [r4, #204]	; 0xcc
   186f4:	add	r0, pc, r0
   186f8:	bl	13eec <fwrite@plt>
   186fc:	mov	r0, #10
   18700:	ldr	r1, [r4, #204]	; 0xcc
   18704:	bl	13fb8 <fputc@plt>
   18708:	b	18250 <__flatcc_fb_codegen_c@@Base+0x2c88>
   1870c:	ldr	r5, [pc, #684]	; 189c0 <__flatcc_fb_codegen_c@@Base+0x33f8>
   18710:	mov	r3, fp
   18714:	str	r6, [sp]
   18718:	ldr	r1, [pc, #676]	; 189c4 <__flatcc_fb_codegen_c@@Base+0x33fc>
   1871c:	ldr	r2, [sp, #16]
   18720:	add	r5, pc, r5
   18724:	ldr	r0, [r4, #204]	; 0xcc
   18728:	add	r1, pc, r1
   1872c:	str	r5, [sp, #4]
   18730:	str	r5, [sp, #36]	; 0x24
   18734:	bl	13f58 <fprintf@plt>
   18738:	ldr	r1, [pc, #648]	; 189c8 <__flatcc_fb_codegen_c@@Base+0x3400>
   1873c:	mov	r3, r6
   18740:	mov	r2, r4
   18744:	str	r6, [sp]
   18748:	ldr	r0, [sp, #20]
   1874c:	str	r5, [sp, #4]
   18750:	add	r1, pc, r1
   18754:	str	r0, [sp, #8]
   18758:	ldr	r0, [r4, #204]	; 0xcc
   1875c:	bl	13f58 <fprintf@plt>
   18760:	b	17f64 <__flatcc_fb_codegen_c@@Base+0x299c>
   18764:	bl	15974 <__flatcc_fb_codegen_c@@Base+0x3ac>
   18768:	ldr	r3, [pc, #604]	; 189cc <__flatcc_fb_codegen_c@@Base+0x3404>
   1876c:	movw	r2, #1204	; 0x4b4
   18770:	ldr	r1, [pc, #600]	; 189d0 <__flatcc_fb_codegen_c@@Base+0x3408>
   18774:	ldr	r0, [pc, #600]	; 189d4 <__flatcc_fb_codegen_c@@Base+0x340c>
   18778:	add	r3, pc, r3
   1877c:	add	r3, r3, #140	; 0x8c
   18780:	add	r1, pc, r1
   18784:	add	r0, pc, r0
   18788:	bl	1400c <__assert_fail@plt>
   1878c:	ldr	r3, [pc, #580]	; 189d8 <__flatcc_fb_codegen_c@@Base+0x3410>
   18790:	movw	r2, #1205	; 0x4b5
   18794:	ldr	r1, [pc, #576]	; 189dc <__flatcc_fb_codegen_c@@Base+0x3414>
   18798:	ldr	r0, [pc, #576]	; 189e0 <__flatcc_fb_codegen_c@@Base+0x3418>
   1879c:	add	r3, pc, r3
   187a0:	add	r3, r3, #140	; 0x8c
   187a4:	add	r1, pc, r1
   187a8:	add	r0, pc, r0
   187ac:	bl	1400c <__assert_fail@plt>
   187b0:	ldr	r2, [pc, #556]	; 189e4 <__flatcc_fb_codegen_c@@Base+0x341c>
   187b4:	mov	r3, #226	; 0xe2
   187b8:	ldr	r1, [sp, #44]	; 0x2c
   187bc:	ldr	r0, [pc, #548]	; 189e8 <__flatcc_fb_codegen_c@@Base+0x3420>
   187c0:	ldr	r4, [pc, #548]	; 189ec <__flatcc_fb_codegen_c@@Base+0x3424>
   187c4:	ldr	ip, [r1, r2]
   187c8:	add	r0, pc, r0
   187cc:	ldr	r1, [pc, #540]	; 189f0 <__flatcc_fb_codegen_c@@Base+0x3428>
   187d0:	add	r4, pc, r4
   187d4:	str	r0, [sp]
   187d8:	mov	r2, r4
   187dc:	ldr	r0, [ip]
   187e0:	add	r1, pc, r1
   187e4:	bl	13f58 <fprintf@plt>
   187e8:	ldr	r3, [pc, #516]	; 189f4 <__flatcc_fb_codegen_c@@Base+0x342c>
   187ec:	mov	r1, r4
   187f0:	mov	r2, #226	; 0xe2
   187f4:	ldr	r0, [pc, #508]	; 189f8 <__flatcc_fb_codegen_c@@Base+0x3430>
   187f8:	add	r3, pc, r3
   187fc:	add	r3, r3, #60	; 0x3c
   18800:	add	r0, pc, r0
   18804:	bl	1400c <__assert_fail@plt>
   18808:	ldr	r2, [pc, #468]	; 189e4 <__flatcc_fb_codegen_c@@Base+0x341c>
   1880c:	mov	r3, #260	; 0x104
   18810:	ldr	r1, [sp, #44]	; 0x2c
   18814:	ldr	r0, [pc, #480]	; 189fc <__flatcc_fb_codegen_c@@Base+0x3434>
   18818:	ldr	r4, [pc, #480]	; 18a00 <__flatcc_fb_codegen_c@@Base+0x3438>
   1881c:	ldr	ip, [r1, r2]
   18820:	add	r0, pc, r0
   18824:	ldr	r1, [pc, #472]	; 18a04 <__flatcc_fb_codegen_c@@Base+0x343c>
   18828:	add	r4, pc, r4
   1882c:	str	r0, [sp]
   18830:	mov	r2, r4
   18834:	ldr	r0, [ip]
   18838:	add	r1, pc, r1
   1883c:	bl	13f58 <fprintf@plt>
   18840:	ldr	r3, [pc, #448]	; 18a08 <__flatcc_fb_codegen_c@@Base+0x3440>
   18844:	mov	r1, r4
   18848:	mov	r2, #260	; 0x104
   1884c:	ldr	r0, [pc, #440]	; 18a0c <__flatcc_fb_codegen_c@@Base+0x3444>
   18850:	add	r3, pc, r3
   18854:	add	r3, r3, #84	; 0x54
   18858:	add	r0, pc, r0
   1885c:	bl	1400c <__assert_fail@plt>
   18860:	andeq	r3, r5, r8, ror #4
   18864:	andeq	r8, r2, ip, lsr fp
   18868:	muleq	r2, r4, r5
   1886c:	strdeq	r2, [r3], -r4
   18870:	andeq	r8, r2, ip, lsr #24
   18874:	andeq	r2, r3, ip, ror #15
   18878:	andeq	r8, r2, r0, lsl ip
   1887c:	andeq	r0, r3, r0, lsl pc
   18880:	andeq	r9, r2, r0, lsr #8
   18884:	andeq	r9, r2, r0, lsr r5
   18888:	andeq	r9, r2, r0, lsr #10
   1888c:	andeq	r8, r2, r4, lsr #22
   18890:	andeq	r2, r3, r0, ror #13
   18894:	ldrdeq	r2, [r3], -r4
   18898:	andeq	r0, r3, r8, lsl lr
   1889c:	ldrdeq	r8, [r2], -r0
   188a0:	andeq	r9, r2, r0, ror #5
   188a4:	andeq	r8, r2, ip, lsr #21
   188a8:	andeq	r9, r2, ip, asr r3
   188ac:	andeq	r9, r2, r0, lsr r3
   188b0:	andeq	r9, r2, r8, asr r3
   188b4:	ldrdeq	r9, [r2], -r8
   188b8:	andeq	r9, r2, r0, lsr #7
   188bc:	andeq	r9, r2, r0, lsr #7
   188c0:	muleq	r2, r4, r3
   188c4:	muleq	r2, r8, r2
   188c8:	andeq	r9, r2, r4, lsr #8
   188cc:	strdeq	r9, [r2], -r0
   188d0:	andeq	r9, r2, r8, lsl #7
   188d4:	andeq	r8, r2, r8, lsr #13
   188d8:	andeq	r8, r2, r4, lsr #17
   188dc:	andeq	r8, r2, r0, lsl #13
   188e0:	andeq	r8, r2, r8, lsl #17
   188e4:	andeq	r8, r2, ip, asr r6
   188e8:	andeq	r8, r2, ip, asr #16
   188ec:	andeq	r8, r2, r8, asr r6
   188f0:	andeq	r8, r2, r4, lsl r6
   188f4:	andeq	r8, r2, r4, lsl r6
   188f8:	andeq	r8, r2, ip, lsr #12
   188fc:	andeq	r8, r2, r8, lsl r6
   18900:	ldrdeq	r8, [r2], -ip
   18904:	strdeq	r8, [r2], -r4
   18908:	andeq	r8, r2, r8, ror #11
   1890c:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   18910:			; <UNDEFINED> instruction: 0x000285b4
   18914:			; <UNDEFINED> instruction: 0x000285b4
   18918:	andeq	r8, r2, ip, asr #11
   1891c:			; <UNDEFINED> instruction: 0x000285b8
   18920:	andeq	r8, r2, ip, ror r5
   18924:	muleq	r2, r4, r5
   18928:	muleq	r2, r4, r5
   1892c:	andeq	r8, r2, r8, asr r5
   18930:	andeq	r8, r2, r0, ror #10
   18934:	andeq	r8, r2, r8, ror r5
   18938:	andeq	r8, r2, r4, ror r5
   1893c:	andeq	r8, r2, r0, lsr r5
   18940:	andeq	r8, r2, ip, asr #14
   18944:	andeq	r8, r2, r8, lsr #30
   18948:	andeq	r8, r2, ip, lsl #31
   1894c:	andeq	r8, r2, ip, ror pc
   18950:	andeq	r8, r2, r4, lsl #31
   18954:	muleq	r2, r4, lr
   18958:			; <UNDEFINED> instruction: 0x00028fb8
   1895c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   18960:	andeq	r9, r2, r4, lsr #32
   18964:	andeq	r9, r2, r0, rrx
   18968:	andeq	r8, r2, r8, ror pc
   1896c:	andeq	r2, r3, r4, rrx
   18970:	andeq	r8, r2, r8, lsl #7
   18974:	andeq	r2, r3, ip, asr #32
   18978:	strdeq	r8, [r2], -r4
   1897c:	andeq	r2, r3, r4, lsr r0
   18980:	andeq	r8, r2, ip, lsl #6
   18984:	andeq	r2, r3, ip, lsl r0
   18988:	andeq	r8, r2, r0, ror #5
   1898c:	andeq	r2, r3, r4
   18990:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   18994:	andeq	r1, r3, ip, ror #31
   18998:	andeq	r8, r2, r8, lsr #5
   1899c:	ldrdeq	r1, [r3], -r4
   189a0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   189a4:			; <UNDEFINED> instruction: 0x00031fbc
   189a8:	ldrdeq	r8, [r2], -r0
   189ac:	andeq	r1, r3, r4, lsr #31
   189b0:	andeq	r8, r2, ip, lsr r2
   189b4:	andeq	r1, r3, ip, lsl #31
   189b8:			; <UNDEFINED> instruction: 0x000282b8
   189bc:	ldrdeq	r8, [r2], -ip
   189c0:			; <UNDEFINED> instruction: 0x00028cbc
   189c4:	andeq	r8, r2, r8, lsr #26
   189c8:	andeq	r8, r2, r8, lsl sp
   189cc:	andeq	r7, r2, r8, lsr #28
   189d0:	andeq	r7, r2, r0, ror #29
   189d4:	andeq	r8, r2, ip, ror #24
   189d8:	andeq	r7, r2, r4, lsl #28
   189dc:			; <UNDEFINED> instruction: 0x00027ebc
   189e0:	andeq	r8, r2, r8, lsl #25
   189e4:	muleq	r0, ip, r0
   189e8:	strdeq	r8, [r2], -ip
   189ec:	andeq	r8, r2, r8, lsl #1
   189f0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   189f4:	andeq	r7, r2, r8, lsr #27
   189f8:	ldrdeq	r0, [r3], -ip
   189fc:	andeq	r8, r2, r4, lsr #1
   18a00:	andeq	r8, r2, r0, lsr r0
   18a04:	andeq	r8, r2, r0, lsl #1
   18a08:	andeq	r7, r2, r0, asr sp
   18a0c:	andeq	r0, r3, r4, lsl #11
   18a10:	ldr	r3, [pc, #3512]	; 197d0 <__flatcc_fb_codegen_c@@Base+0x4208>
   18a14:	mov	r2, #220	; 0xdc
   18a18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18a1c:	mov	r5, r0
   18a20:	strd	r6, [sp, #8]
   18a24:	strd	r8, [sp, #16]
   18a28:	strd	sl, [sp, #24]
   18a2c:	mov	fp, r1
   18a30:	mov	r1, #0
   18a34:	add	r3, pc, r3
   18a38:	str	lr, [sp, #32]
   18a3c:	sub	sp, sp, #508	; 0x1fc
   18a40:	add	r0, sp, #64	; 0x40
   18a44:	add	r4, sp, #284	; 0x11c
   18a48:	str	r3, [sp, #60]	; 0x3c
   18a4c:	ldr	r3, [r5, #212]	; 0xd4
   18a50:	str	r4, [sp, #40]	; 0x28
   18a54:	str	r0, [sp, #56]	; 0x38
   18a58:	ldr	r9, [r3, #132]	; 0x84
   18a5c:	bl	13f70 <memset@plt>
   18a60:	mov	r0, r4
   18a64:	mov	r2, #220	; 0xdc
   18a68:	mov	r1, #0
   18a6c:	bl	13f70 <memset@plt>
   18a70:	ldrh	r3, [fp, #8]
   18a74:	cmp	r3, #1
   18a78:	bne	19780 <__flatcc_fb_codegen_c@@Base+0x41b8>
   18a7c:	ldrh	r3, [fp, #104]	; 0x68
   18a80:	cmp	r3, #0
   18a84:	beq	18b58 <__flatcc_fb_codegen_c@@Base+0x3590>
   18a88:	ldrd	r2, [fp, #112]	; 0x70
   18a8c:	orrs	r3, r2, r3
   18a90:	bne	18aa0 <__flatcc_fb_codegen_c@@Base+0x34d8>
   18a94:	ldrd	r2, [fp, #96]	; 0x60
   18a98:	orrs	r3, r2, r3
   18a9c:	bne	197a4 <__flatcc_fb_codegen_c@@Base+0x41dc>
   18aa0:	mov	r1, fp
   18aa4:	ldr	r0, [fp, #12]
   18aa8:	ldr	r2, [sp, #56]	; 0x38
   18aac:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   18ab0:	ldr	r4, [fp, #32]
   18ab4:	cmp	r4, #0
   18ab8:	beq	18ba0 <__flatcc_fb_codegen_c@@Base+0x35d8>
   18abc:	ldr	r8, [pc, #3344]	; 197d4 <__flatcc_fb_codegen_c@@Base+0x420c>
   18ac0:	mov	ip, #1
   18ac4:	mov	r3, #0
   18ac8:	ldr	r7, [pc, #3336]	; 197d8 <__flatcc_fb_codegen_c@@Base+0x4210>
   18acc:	ldr	r6, [pc, #3336]	; 197dc <__flatcc_fb_codegen_c@@Base+0x4214>
   18ad0:	add	r8, pc, r8
   18ad4:	add	r7, pc, r7
   18ad8:	add	r6, pc, r6
   18adc:	b	18b24 <__flatcc_fb_codegen_c@@Base+0x355c>
   18ae0:	ldr	r1, [pc, #3320]	; 197e0 <__flatcc_fb_codegen_c@@Base+0x4218>
   18ae4:	mov	r2, r6
   18ae8:	add	r1, pc, r1
   18aec:	bl	13f58 <fprintf@plt>
   18af0:	ldr	r2, [r4, #4]
   18af4:	ldr	r0, [r5, #204]	; 0xcc
   18af8:	ldr	r1, [pc, #3300]	; 197e4 <__flatcc_fb_codegen_c@@Base+0x421c>
   18afc:	ldr	r3, [r2]
   18b00:	ldr	r2, [r2, #4]
   18b04:	add	r1, pc, r1
   18b08:	bl	13f58 <fprintf@plt>
   18b0c:	ldr	r3, [r4, #4]
   18b10:	mov	ip, #0
   18b14:	ldr	r4, [r4]
   18b18:	ldr	r3, [r3, #8]
   18b1c:	cmp	r4, ip
   18b20:	beq	18b88 <__flatcc_fb_codegen_c@@Base+0x35c0>
   18b24:	ldr	r2, [r4, #4]
   18b28:	ldr	r0, [r5, #204]	; 0xcc
   18b2c:	ldr	r1, [r2, #8]
   18b30:	cmp	r1, r3
   18b34:	beq	18af8 <__flatcc_fb_codegen_c@@Base+0x3530>
   18b38:	cmp	ip, #0
   18b3c:	bne	18ae0 <__flatcc_fb_codegen_c@@Base+0x3518>
   18b40:	mov	r2, r8
   18b44:	mov	r1, r7
   18b48:	bl	13f58 <fprintf@plt>
   18b4c:	ldr	r2, [r4, #4]
   18b50:	ldr	r0, [r5, #204]	; 0xcc
   18b54:	b	18af8 <__flatcc_fb_codegen_c@@Base+0x3530>
   18b58:	ldrd	r2, [fp, #96]	; 0x60
   18b5c:	orrs	r3, r2, r3
   18b60:	beq	18aa0 <__flatcc_fb_codegen_c@@Base+0x34d8>
   18b64:	ldr	r3, [pc, #3196]	; 197e8 <__flatcc_fb_codegen_c@@Base+0x4220>
   18b68:	movw	r2, #937	; 0x3a9
   18b6c:	ldr	r1, [pc, #3192]	; 197ec <__flatcc_fb_codegen_c@@Base+0x4224>
   18b70:	ldr	r0, [pc, #3192]	; 197f0 <__flatcc_fb_codegen_c@@Base+0x4228>
   18b74:	add	r3, pc, r3
   18b78:	add	r3, r3, #152	; 0x98
   18b7c:	add	r1, pc, r1
   18b80:	add	r0, pc, r0
   18b84:	bl	1400c <__assert_fail@plt>
   18b88:	ldr	r0, [pc, #3172]	; 197f4 <__flatcc_fb_codegen_c@@Base+0x422c>
   18b8c:	mov	r2, #4
   18b90:	mov	r1, #1
   18b94:	ldr	r3, [r5, #204]	; 0xcc
   18b98:	add	r0, pc, r0
   18b9c:	bl	13eec <fwrite@plt>
   18ba0:	ldrd	r2, [fp, #112]	; 0x70
   18ba4:	ldr	r0, [r5, #204]	; 0xcc
   18ba8:	orrs	r3, r2, r3
   18bac:	beq	1940c <__flatcc_fb_codegen_c@@Base+0x3e44>
   18bb0:	cmp	r9, #0
   18bb4:	bne	19478 <__flatcc_fb_codegen_c@@Base+0x3eb0>
   18bb8:	ldr	r1, [pc, #3128]	; 197f8 <__flatcc_fb_codegen_c@@Base+0x4230>
   18bbc:	ldr	r2, [sp, #56]	; 0x38
   18bc0:	add	r1, pc, r1
   18bc4:	bl	13f58 <fprintf@plt>
   18bc8:	ldr	r4, [fp, #20]
   18bcc:	cmp	r4, #0
   18bd0:	beq	193f0 <__flatcc_fb_codegen_c@@Base+0x3e28>
   18bd4:	ldr	r3, [pc, #3104]	; 197fc <__flatcc_fb_codegen_c@@Base+0x4234>
   18bd8:	mov	r6, #0
   18bdc:	str	fp, [sp, #48]	; 0x30
   18be0:	str	r6, [sp, #44]	; 0x2c
   18be4:	str	r6, [sp, #52]	; 0x34
   18be8:	add	r3, pc, r3
   18bec:	str	r3, [sp, #28]
   18bf0:	ldr	r3, [pc, #3080]	; 19800 <__flatcc_fb_codegen_c@@Base+0x4238>
   18bf4:	add	r3, pc, r3
   18bf8:	str	r3, [sp, #32]
   18bfc:	ldr	r3, [pc, #3072]	; 19804 <__flatcc_fb_codegen_c@@Base+0x423c>
   18c00:	add	r3, pc, r3
   18c04:	str	r3, [sp, #36]	; 0x24
   18c08:	ldr	r3, [pc, #3064]	; 19808 <__flatcc_fb_codegen_c@@Base+0x4240>
   18c0c:	add	r3, pc, r3
   18c10:	mov	fp, r3
   18c14:	ldr	r7, [r4, #68]	; 0x44
   18c18:	cmp	r7, #0
   18c1c:	beq	18cb8 <__flatcc_fb_codegen_c@@Base+0x36f0>
   18c20:	mov	r1, #1
   18c24:	mov	r3, #0
   18c28:	b	18c6c <__flatcc_fb_codegen_c@@Base+0x36a4>
   18c2c:	ldr	r1, [pc, #3032]	; 1980c <__flatcc_fb_codegen_c@@Base+0x4244>
   18c30:	ldr	r2, [sp, #36]	; 0x24
   18c34:	add	r1, pc, r1
   18c38:	bl	13f58 <fprintf@plt>
   18c3c:	ldr	r2, [r7, #4]
   18c40:	ldr	r0, [r5, #204]	; 0xcc
   18c44:	mov	r1, fp
   18c48:	ldr	r3, [r2]
   18c4c:	ldr	r2, [r2, #4]
   18c50:	bl	13f58 <fprintf@plt>
   18c54:	ldr	r3, [r7, #4]
   18c58:	mov	r1, #0
   18c5c:	ldr	r7, [r7]
   18c60:	ldr	r3, [r3, #8]
   18c64:	cmp	r7, r1
   18c68:	beq	18ca0 <__flatcc_fb_codegen_c@@Base+0x36d8>
   18c6c:	ldr	r2, [r7, #4]
   18c70:	ldr	r0, [r5, #204]	; 0xcc
   18c74:	ldr	ip, [r2, #8]
   18c78:	cmp	ip, r3
   18c7c:	beq	18c44 <__flatcc_fb_codegen_c@@Base+0x367c>
   18c80:	cmp	r1, #0
   18c84:	bne	18c2c <__flatcc_fb_codegen_c@@Base+0x3664>
   18c88:	ldr	r2, [sp, #28]
   18c8c:	ldr	r1, [sp, #32]
   18c90:	bl	13f58 <fprintf@plt>
   18c94:	ldr	r2, [r7, #4]
   18c98:	ldr	r0, [r5, #204]	; 0xcc
   18c9c:	b	18c44 <__flatcc_fb_codegen_c@@Base+0x367c>
   18ca0:	ldr	r0, [pc, #2920]	; 19810 <__flatcc_fb_codegen_c@@Base+0x4248>
   18ca4:	mov	r2, #4
   18ca8:	mov	r1, #1
   18cac:	ldr	r3, [r5, #204]	; 0xcc
   18cb0:	add	r0, pc, r0
   18cb4:	bl	13eec <fwrite@plt>
   18cb8:	ldr	r3, [r4, #4]
   18cbc:	cmp	r6, #0
   18cc0:	ldrhne	sl, [r4, #74]	; 0x4a
   18cc4:	ldm	r3, {r7, r8}
   18cc8:	ldreq	r3, [sp, #48]	; 0x30
   18ccc:	ldrheq	sl, [r3, #104]	; 0x68
   18cd0:	cmp	r9, #0
   18cd4:	beq	19118 <__flatcc_fb_codegen_c@@Base+0x3b50>
   18cd8:	ldr	r3, [r4, #80]	; 0x50
   18cdc:	subs	r3, r3, r6
   18ce0:	bne	191f8 <__flatcc_fb_codegen_c@@Base+0x3c30>
   18ce4:	ldrh	r3, [r4, #72]	; 0x48
   18ce8:	tst	r3, #4
   18cec:	bne	19224 <__flatcc_fb_codegen_c@@Base+0x3c5c>
   18cf0:	ldrh	r3, [r4, #24]
   18cf4:	cmp	r3, #8
   18cf8:	bne	190bc <__flatcc_fb_codegen_c@@Base+0x3af4>
   18cfc:	ldr	r3, [r4, #16]
   18d00:	cmp	r3, #5
   18d04:	beq	19254 <__flatcc_fb_codegen_c@@Base+0x3c8c>
   18d08:	sub	r3, r3, #1
   18d0c:	cmp	r3, #10
   18d10:	addls	pc, pc, r3, lsl #2
   18d14:	b	19664 <__flatcc_fb_codegen_c@@Base+0x409c>
   18d18:	b	190a8 <__flatcc_fb_codegen_c@@Base+0x3ae0>
   18d1c:	b	19094 <__flatcc_fb_codegen_c@@Base+0x3acc>
   18d20:	b	19080 <__flatcc_fb_codegen_c@@Base+0x3ab8>
   18d24:	b	1906c <__flatcc_fb_codegen_c@@Base+0x3aa4>
   18d28:	b	19664 <__flatcc_fb_codegen_c@@Base+0x409c>
   18d2c:	b	19030 <__flatcc_fb_codegen_c@@Base+0x3a68>
   18d30:	b	1901c <__flatcc_fb_codegen_c@@Base+0x3a54>
   18d34:	b	19044 <__flatcc_fb_codegen_c@@Base+0x3a7c>
   18d38:	b	18fe4 <__flatcc_fb_codegen_c@@Base+0x3a1c>
   18d3c:	b	18d44 <__flatcc_fb_codegen_c@@Base+0x377c>
   18d40:	b	19058 <__flatcc_fb_codegen_c@@Base+0x3a90>
   18d44:	ldr	r2, [pc, #2760]	; 19814 <__flatcc_fb_codegen_c@@Base+0x424c>
   18d48:	ldr	r1, [pc, #2760]	; 19818 <__flatcc_fb_codegen_c@@Base+0x4250>
   18d4c:	add	r2, pc, r2
   18d50:	add	r1, pc, r1
   18d54:	cmp	r9, #0
   18d58:	ldr	r0, [r5, #204]	; 0xcc
   18d5c:	beq	19000 <__flatcc_fb_codegen_c@@Base+0x3a38>
   18d60:	mov	r3, r1
   18d64:	ldr	r1, [pc, #2736]	; 1981c <__flatcc_fb_codegen_c@@Base+0x4254>
   18d68:	add	r1, pc, r1
   18d6c:	bl	13f58 <fprintf@plt>
   18d70:	ldr	r1, [pc, #2728]	; 19820 <__flatcc_fb_codegen_c@@Base+0x4258>
   18d74:	mov	r3, r7
   18d78:	mov	r2, r8
   18d7c:	ldr	r0, [r5, #204]	; 0xcc
   18d80:	add	r1, pc, r1
   18d84:	bl	13f58 <fprintf@plt>
   18d88:	ldr	r6, [r4, #80]	; 0x50
   18d8c:	ldr	r3, [r4, #88]	; 0x58
   18d90:	ldr	r4, [r4]
   18d94:	add	r6, r6, r3
   18d98:	cmp	r4, #0
   18d9c:	bne	18c14 <__flatcc_fb_codegen_c@@Base+0x364c>
   18da0:	cmp	r9, #0
   18da4:	ldr	fp, [sp, #48]	; 0x30
   18da8:	beq	193f0 <__flatcc_fb_codegen_c@@Base+0x3e28>
   18dac:	ldr	r3, [fp, #112]	; 0x70
   18db0:	ldr	r0, [r5, #204]	; 0xcc
   18db4:	subs	r3, r3, r6
   18db8:	bne	1964c <__flatcc_fb_codegen_c@@Base+0x4084>
   18dbc:	mov	r3, r0
   18dc0:	ldr	r0, [pc, #2652]	; 19824 <__flatcc_fb_codegen_c@@Base+0x425c>
   18dc4:	mov	r2, #3
   18dc8:	mov	r1, #1
   18dcc:	add	r0, pc, r0
   18dd0:	bl	13eec <fwrite@plt>
   18dd4:	ldr	r0, [pc, #2636]	; 19828 <__flatcc_fb_codegen_c@@Base+0x4260>
   18dd8:	mov	r2, #15
   18ddc:	mov	r1, #1
   18de0:	ldr	r3, [r5, #204]	; 0xcc
   18de4:	add	r0, pc, r0
   18de8:	bl	13eec <fwrite@plt>
   18dec:	ldr	r1, [pc, #2616]	; 1982c <__flatcc_fb_codegen_c@@Base+0x4264>
   18df0:	ldr	r4, [sp, #56]	; 0x38
   18df4:	ldrd	r6, [fp, #112]	; 0x70
   18df8:	add	r1, pc, r1
   18dfc:	ldr	r0, [r5, #204]	; 0xcc
   18e00:	mov	r2, r4
   18e04:	strd	r6, [sp]
   18e08:	bl	13f58 <fprintf@plt>
   18e0c:	ldr	r1, [pc, #2588]	; 19830 <__flatcc_fb_codegen_c@@Base+0x4268>
   18e10:	mov	r3, r4
   18e14:	mov	r2, r4
   18e18:	str	r4, [sp]
   18e1c:	ldr	r0, [r5, #204]	; 0xcc
   18e20:	add	r1, pc, r1
   18e24:	bl	13f58 <fprintf@plt>
   18e28:	ldr	r1, [pc, #2564]	; 19834 <__flatcc_fb_codegen_c@@Base+0x426c>
   18e2c:	mov	r3, r4
   18e30:	mov	r2, r4
   18e34:	str	r4, [sp]
   18e38:	ldr	r0, [r5, #204]	; 0xcc
   18e3c:	add	r1, pc, r1
   18e40:	bl	13f58 <fprintf@plt>
   18e44:	ldr	r1, [pc, #2540]	; 19838 <__flatcc_fb_codegen_c@@Base+0x4270>
   18e48:	mov	r0, r4
   18e4c:	mov	r3, r4
   18e50:	mov	r2, r4
   18e54:	stm	sp, {r0, r5}
   18e58:	ldr	r0, [r5, #204]	; 0xcc
   18e5c:	add	r1, pc, r1
   18e60:	bl	13f58 <fprintf@plt>
   18e64:	ldr	r1, [pc, #2512]	; 1983c <__flatcc_fb_codegen_c@@Base+0x4274>
   18e68:	ldr	r4, [sp, #56]	; 0x38
   18e6c:	ldrd	r6, [fp, #112]	; 0x70
   18e70:	add	r1, pc, r1
   18e74:	ldr	r0, [r5, #204]	; 0xcc
   18e78:	mov	r2, r4
   18e7c:	strd	r6, [sp]
   18e80:	bl	13f58 <fprintf@plt>
   18e84:	ldr	r1, [pc, #2484]	; 19840 <__flatcc_fb_codegen_c@@Base+0x4278>
   18e88:	mov	r3, r4
   18e8c:	mov	r2, r4
   18e90:	str	r5, [sp]
   18e94:	ldr	r0, [r5, #204]	; 0xcc
   18e98:	add	r1, pc, r1
   18e9c:	bl	13f58 <fprintf@plt>
   18ea0:	ldr	r1, [pc, #2460]	; 19844 <__flatcc_fb_codegen_c@@Base+0x427c>
   18ea4:	mov	r3, r4
   18ea8:	mov	r2, r5
   18eac:	ldr	r0, [r5, #204]	; 0xcc
   18eb0:	add	r1, pc, r1
   18eb4:	bl	13f58 <fprintf@plt>
   18eb8:	mov	r0, #10
   18ebc:	ldr	r1, [r5, #204]	; 0xcc
   18ec0:	bl	13fb8 <fputc@plt>
   18ec4:	ldr	r4, [fp, #20]
   18ec8:	cmp	r4, #0
   18ecc:	beq	18fbc <__flatcc_fb_codegen_c@@Base+0x39f4>
   18ed0:	ldr	r3, [pc, #2416]	; 19848 <__flatcc_fb_codegen_c@@Base+0x4280>
   18ed4:	mov	r9, #0
   18ed8:	mov	r8, r9
   18edc:	ldr	fp, [pc, #2408]	; 1984c <__flatcc_fb_codegen_c@@Base+0x4284>
   18ee0:	str	r9, [sp, #28]
   18ee4:	ldr	sl, [pc, #2404]	; 19850 <__flatcc_fb_codegen_c@@Base+0x4288>
   18ee8:	add	r3, pc, r3
   18eec:	ldr	r9, [sp, #56]	; 0x38
   18ef0:	add	fp, pc, fp
   18ef4:	str	r3, [sp, #36]	; 0x24
   18ef8:	add	sl, pc, sl
   18efc:	ldr	r3, [pc, #2384]	; 19854 <__flatcc_fb_codegen_c@@Base+0x428c>
   18f00:	str	fp, [sp, #32]
   18f04:	ldr	fp, [sp, #40]	; 0x28
   18f08:	add	r3, pc, r3
   18f0c:	str	r3, [sp, #44]	; 0x2c
   18f10:	ldrh	r3, [r4, #72]	; 0x48
   18f14:	tst	r3, #4
   18f18:	bne	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   18f1c:	ldrh	r2, [r4, #24]
   18f20:	ldr	r1, [r4, #4]
   18f24:	cmp	r2, #8
   18f28:	ldrd	r6, [r1]
   18f2c:	beq	19270 <__flatcc_fb_codegen_c@@Base+0x3ca8>
   18f30:	cmp	r2, #14
   18f34:	bne	191a0 <__flatcc_fb_codegen_c@@Base+0x3bd8>
   18f38:	ldr	r1, [r4, #16]
   18f3c:	mov	r2, fp
   18f40:	ldr	r0, [r1, #12]
   18f44:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   18f48:	ldr	r2, [r4, #16]
   18f4c:	ldrh	r3, [r2, #8]
   18f50:	cmp	r3, #1
   18f54:	beq	192b8 <__flatcc_fb_codegen_c@@Base+0x3cf0>
   18f58:	cmp	r3, #3
   18f5c:	bne	192d8 <__flatcc_fb_codegen_c@@Base+0x3d10>
   18f60:	ldr	r3, [r2, #40]	; 0x28
   18f64:	sub	r3, r3, #1
   18f68:	cmp	r3, #10
   18f6c:	bhi	197c8 <__flatcc_fb_codegen_c@@Base+0x4200>
   18f70:	ldr	r1, [pc, #2272]	; 19858 <__flatcc_fb_codegen_c@@Base+0x4290>
   18f74:	mov	r3, r9
   18f78:	mov	r2, r5
   18f7c:	str	r7, [sp]
   18f80:	stmib	sp, {r6, fp}
   18f84:	str	fp, [sp, #12]
   18f88:	ldr	r0, [r5, #204]	; 0xcc
   18f8c:	add	r1, pc, r1
   18f90:	bl	13f58 <fprintf@plt>
   18f94:	ldr	r3, [r5, #212]	; 0xd4
   18f98:	ldr	r3, [r3, #32]
   18f9c:	cmp	r3, #0
   18fa0:	bne	19300 <__flatcc_fb_codegen_c@@Base+0x3d38>
   18fa4:	ldrh	r3, [r4, #72]	; 0x48
   18fa8:	tst	r3, #128	; 0x80
   18fac:	bne	192e0 <__flatcc_fb_codegen_c@@Base+0x3d18>
   18fb0:	ldr	r4, [r4]
   18fb4:	cmp	r4, #0
   18fb8:	bne	18f10 <__flatcc_fb_codegen_c@@Base+0x3948>
   18fbc:	ldr	r1, [r5, #204]	; 0xcc
   18fc0:	mov	r0, #10
   18fc4:	bl	13fb8 <fputc@plt>
   18fc8:	add	sp, sp, #508	; 0x1fc
   18fcc:	ldrd	r4, [sp]
   18fd0:	ldrd	r6, [sp, #8]
   18fd4:	ldrd	r8, [sp, #16]
   18fd8:	ldrd	sl, [sp, #24]
   18fdc:	add	sp, sp, #32
   18fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   18fe4:	ldr	r2, [pc, #2160]	; 1985c <__flatcc_fb_codegen_c@@Base+0x4294>
   18fe8:	cmp	r9, #0
   18fec:	ldr	r1, [pc, #2156]	; 19860 <__flatcc_fb_codegen_c@@Base+0x4298>
   18ff0:	ldr	r0, [r5, #204]	; 0xcc
   18ff4:	add	r2, pc, r2
   18ff8:	add	r1, pc, r1
   18ffc:	bne	18d60 <__flatcc_fb_codegen_c@@Base+0x3798>
   19000:	str	r1, [sp]
   19004:	mov	r3, r2
   19008:	mov	r2, sl
   1900c:	ldr	r1, [pc, #2128]	; 19864 <__flatcc_fb_codegen_c@@Base+0x429c>
   19010:	add	r1, pc, r1
   19014:	bl	13f58 <fprintf@plt>
   19018:	b	18d70 <__flatcc_fb_codegen_c@@Base+0x37a8>
   1901c:	ldr	r2, [pc, #2116]	; 19868 <__flatcc_fb_codegen_c@@Base+0x42a0>
   19020:	ldr	r1, [pc, #2116]	; 1986c <__flatcc_fb_codegen_c@@Base+0x42a4>
   19024:	add	r2, pc, r2
   19028:	add	r1, pc, r1
   1902c:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19030:	ldr	r2, [pc, #2104]	; 19870 <__flatcc_fb_codegen_c@@Base+0x42a8>
   19034:	ldr	r1, [pc, #2104]	; 19874 <__flatcc_fb_codegen_c@@Base+0x42ac>
   19038:	add	r2, pc, r2
   1903c:	add	r1, pc, r1
   19040:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19044:	ldr	r2, [pc, #2092]	; 19878 <__flatcc_fb_codegen_c@@Base+0x42b0>
   19048:	ldr	r1, [pc, #2092]	; 1987c <__flatcc_fb_codegen_c@@Base+0x42b4>
   1904c:	add	r2, pc, r2
   19050:	add	r1, pc, r1
   19054:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19058:	ldr	r2, [pc, #2080]	; 19880 <__flatcc_fb_codegen_c@@Base+0x42b8>
   1905c:	ldr	r1, [pc, #2080]	; 19884 <__flatcc_fb_codegen_c@@Base+0x42bc>
   19060:	add	r2, pc, r2
   19064:	add	r1, pc, r1
   19068:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   1906c:	ldr	r2, [pc, #2068]	; 19888 <__flatcc_fb_codegen_c@@Base+0x42c0>
   19070:	ldr	r1, [pc, #2068]	; 1988c <__flatcc_fb_codegen_c@@Base+0x42c4>
   19074:	add	r2, pc, r2
   19078:	add	r1, pc, r1
   1907c:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19080:	ldr	r2, [pc, #2056]	; 19890 <__flatcc_fb_codegen_c@@Base+0x42c8>
   19084:	ldr	r1, [pc, #2056]	; 19894 <__flatcc_fb_codegen_c@@Base+0x42cc>
   19088:	add	r2, pc, r2
   1908c:	add	r1, pc, r1
   19090:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19094:	ldr	r2, [pc, #2044]	; 19898 <__flatcc_fb_codegen_c@@Base+0x42d0>
   19098:	ldr	r1, [pc, #2044]	; 1989c <__flatcc_fb_codegen_c@@Base+0x42d4>
   1909c:	add	r2, pc, r2
   190a0:	add	r1, pc, r1
   190a4:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   190a8:	ldr	r2, [pc, #2032]	; 198a0 <__flatcc_fb_codegen_c@@Base+0x42d8>
   190ac:	ldr	r1, [pc, #2032]	; 198a4 <__flatcc_fb_codegen_c@@Base+0x42dc>
   190b0:	add	r2, pc, r2
   190b4:	add	r1, pc, r1
   190b8:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   190bc:	cmp	r3, #14
   190c0:	bne	196ec <__flatcc_fb_codegen_c@@Base+0x4124>
   190c4:	ldr	r1, [r4, #16]
   190c8:	ldrh	r3, [r1, #8]
   190cc:	bic	r2, r3, #2
   190d0:	cmp	r2, #1
   190d4:	bne	1975c <__flatcc_fb_codegen_c@@Base+0x4194>
   190d8:	cmp	r3, #1
   190dc:	beq	19264 <__flatcc_fb_codegen_c@@Base+0x3c9c>
   190e0:	ldr	r6, [pc, #1984]	; 198a8 <__flatcc_fb_codegen_c@@Base+0x42e0>
   190e4:	add	r6, pc, r6
   190e8:	ldr	r0, [r1, #12]
   190ec:	ldr	r2, [sp, #40]	; 0x28
   190f0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   190f4:	cmp	r9, #0
   190f8:	beq	191d8 <__flatcc_fb_codegen_c@@Base+0x3c10>
   190fc:	ldr	r1, [pc, #1960]	; 198ac <__flatcc_fb_codegen_c@@Base+0x42e4>
   19100:	mov	r3, r6
   19104:	ldr	r2, [sp, #40]	; 0x28
   19108:	ldr	r0, [r5, #204]	; 0xcc
   1910c:	add	r1, pc, r1
   19110:	bl	13f58 <fprintf@plt>
   19114:	b	18d70 <__flatcc_fb_codegen_c@@Base+0x37a8>
   19118:	ldrh	r3, [r4, #72]	; 0x48
   1911c:	tst	r3, #4
   19120:	beq	18cf0 <__flatcc_fb_codegen_c@@Base+0x3728>
   19124:	ldr	r1, [sp, #44]	; 0x2c
   19128:	mov	r2, sl
   1912c:	str	r8, [sp, #4]
   19130:	str	r7, [sp, #8]
   19134:	ldr	ip, [r4, #88]	; 0x58
   19138:	mov	r3, r1
   1913c:	add	r1, r1, #1
   19140:	ldr	r0, [r5, #204]	; 0xcc
   19144:	str	r1, [sp, #44]	; 0x2c
   19148:	ldr	r1, [pc, #1888]	; 198b0 <__flatcc_fb_codegen_c@@Base+0x42e8>
   1914c:	str	ip, [sp]
   19150:	add	r1, pc, r1
   19154:	bl	13f58 <fprintf@plt>
   19158:	b	18d88 <__flatcc_fb_codegen_c@@Base+0x37c0>
   1915c:	ldr	lr, [pc, #1872]	; 198b4 <__flatcc_fb_codegen_c@@Base+0x42ec>
   19160:	mov	ip, r5
   19164:	ldr	r0, [pc, #1868]	; 198b8 <__flatcc_fb_codegen_c@@Base+0x42f0>
   19168:	add	lr, pc, lr
   1916c:	add	r0, pc, r0
   19170:	mov	r3, r9
   19174:	mov	r2, r5
   19178:	str	r7, [sp]
   1917c:	mov	r1, sl
   19180:	str	r6, [sp, #4]
   19184:	str	r5, [sp, #8]
   19188:	str	r0, [sp, #12]
   1918c:	str	ip, [sp, #16]
   19190:	str	lr, [sp, #20]
   19194:	ldr	r0, [r5, #204]	; 0xcc
   19198:	bl	13f58 <fprintf@plt>
   1919c:	ldrh	r3, [r4, #72]	; 0x48
   191a0:	tst	r3, #128	; 0x80
   191a4:	beq	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   191a8:	cmp	r8, #0
   191ac:	bne	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   191b0:	mov	r1, #1
   191b4:	mov	r2, #84	; 0x54
   191b8:	ldr	r0, [sp, #32]
   191bc:	ldr	r3, [r5, #204]	; 0xcc
   191c0:	str	r1, [sp, #28]
   191c4:	bl	13eec <fwrite@plt>
   191c8:	ldr	r4, [r4]
   191cc:	cmp	r4, #0
   191d0:	bne	18f10 <__flatcc_fb_codegen_c@@Base+0x3948>
   191d4:	b	18fbc <__flatcc_fb_codegen_c@@Base+0x39f4>
   191d8:	ldr	r1, [pc, #1756]	; 198bc <__flatcc_fb_codegen_c@@Base+0x42f4>
   191dc:	mov	r2, sl
   191e0:	str	r6, [sp]
   191e4:	ldr	r3, [sp, #40]	; 0x28
   191e8:	ldr	r0, [r5, #204]	; 0xcc
   191ec:	add	r1, pc, r1
   191f0:	bl	13f58 <fprintf@plt>
   191f4:	b	18d70 <__flatcc_fb_codegen_c@@Base+0x37a8>
   191f8:	ldr	r0, [sp, #52]	; 0x34
   191fc:	ldr	r1, [pc, #1724]	; 198c0 <__flatcc_fb_codegen_c@@Base+0x42f8>
   19200:	add	ip, r0, #1
   19204:	mov	r2, r0
   19208:	ldr	r0, [r5, #204]	; 0xcc
   1920c:	add	r1, pc, r1
   19210:	str	ip, [sp, #52]	; 0x34
   19214:	bl	13f58 <fprintf@plt>
   19218:	ldrh	r3, [r4, #72]	; 0x48
   1921c:	tst	r3, #4
   19220:	beq	18cf0 <__flatcc_fb_codegen_c@@Base+0x3728>
   19224:	ldr	r1, [sp, #44]	; 0x2c
   19228:	ldr	r3, [r4, #88]	; 0x58
   1922c:	str	r8, [sp]
   19230:	str	r7, [sp, #4]
   19234:	mov	r2, r1
   19238:	add	r1, r1, #1
   1923c:	ldr	r0, [r5, #204]	; 0xcc
   19240:	str	r1, [sp, #44]	; 0x2c
   19244:	ldr	r1, [pc, #1656]	; 198c4 <__flatcc_fb_codegen_c@@Base+0x42fc>
   19248:	add	r1, pc, r1
   1924c:	bl	13f58 <fprintf@plt>
   19250:	b	18d88 <__flatcc_fb_codegen_c@@Base+0x37c0>
   19254:	ldr	r1, [pc, #1644]	; 198c8 <__flatcc_fb_codegen_c@@Base+0x4300>
   19258:	mov	r2, r5
   1925c:	add	r1, pc, r1
   19260:	b	18d54 <__flatcc_fb_codegen_c@@Base+0x378c>
   19264:	ldr	r6, [pc, #1632]	; 198cc <__flatcc_fb_codegen_c@@Base+0x4304>
   19268:	add	r6, pc, r6
   1926c:	b	190e8 <__flatcc_fb_codegen_c@@Base+0x3b20>
   19270:	ldr	r3, [r4, #16]
   19274:	cmp	r3, #5
   19278:	beq	1915c <__flatcc_fb_codegen_c@@Base+0x3b94>
   1927c:	sub	r3, r3, #1
   19280:	cmp	r3, #10
   19284:	addls	pc, pc, r3, lsl #2
   19288:	b	197cc <__flatcc_fb_codegen_c@@Base+0x4204>
   1928c:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe0>
   19290:	b	1958c <__flatcc_fb_codegen_c@@Base+0x3fc4>
   19294:	b	19570 <__flatcc_fb_codegen_c@@Base+0x3fa8>
   19298:	b	19554 <__flatcc_fb_codegen_c@@Base+0x3f8c>
   1929c:	b	197cc <__flatcc_fb_codegen_c@@Base+0x4204>
   192a0:	b	19524 <__flatcc_fb_codegen_c@@Base+0x3f5c>
   192a4:	b	19508 <__flatcc_fb_codegen_c@@Base+0x3f40>
   192a8:	b	194ec <__flatcc_fb_codegen_c@@Base+0x3f24>
   192ac:	b	194d0 <__flatcc_fb_codegen_c@@Base+0x3f08>
   192b0:	b	194bc <__flatcc_fb_codegen_c@@Base+0x3ef4>
   192b4:	b	19540 <__flatcc_fb_codegen_c@@Base+0x3f78>
   192b8:	ldr	r1, [pc, #1552]	; 198d0 <__flatcc_fb_codegen_c@@Base+0x4308>
   192bc:	mov	r3, r9
   192c0:	mov	r2, r5
   192c4:	str	r7, [sp]
   192c8:	stmib	sp, {r6, fp}
   192cc:	ldr	r0, [r5, #204]	; 0xcc
   192d0:	add	r1, pc, r1
   192d4:	bl	13f58 <fprintf@plt>
   192d8:	ldrh	r3, [r4, #72]	; 0x48
   192dc:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x3bd8>
   192e0:	ldr	r1, [pc, #1516]	; 198d4 <__flatcc_fb_codegen_c@@Base+0x430c>
   192e4:	mov	r3, r9
   192e8:	mov	r2, r5
   192ec:	str	r7, [sp]
   192f0:	stmib	sp, {r6, fp}
   192f4:	ldr	r0, [r5, #204]	; 0xcc
   192f8:	add	r1, pc, r1
   192fc:	bl	13f58 <fprintf@plt>
   19300:	ldrh	r3, [r4, #72]	; 0x48
   19304:	tst	r3, #128	; 0x80
   19308:	beq	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   1930c:	ldr	r3, [sp, #28]
   19310:	cmp	r3, #0
   19314:	ldr	r3, [r5, #204]	; 0xcc
   19318:	bne	195c4 <__flatcc_fb_codegen_c@@Base+0x3ffc>
   1931c:	ldr	r0, [pc, #1460]	; 198d8 <__flatcc_fb_codegen_c@@Base+0x4310>
   19320:	mov	r2, #61	; 0x3d
   19324:	mov	r1, #1
   19328:	add	r0, pc, r0
   1932c:	bl	13eec <fwrite@plt>
   19330:	ldr	r1, [pc, #1444]	; 198dc <__flatcc_fb_codegen_c@@Base+0x4314>
   19334:	mov	r3, r9
   19338:	mov	r2, r5
   1933c:	str	r7, [sp]
   19340:	stmib	sp, {r6, fp}
   19344:	ldr	r0, [r5, #204]	; 0xcc
   19348:	add	r1, pc, r1
   1934c:	bl	13f58 <fprintf@plt>
   19350:	ldr	r3, [r5, #212]	; 0xd4
   19354:	ldr	r3, [r3, #136]	; 0x88
   19358:	cmp	r3, #0
   1935c:	beq	19384 <__flatcc_fb_codegen_c@@Base+0x3dbc>
   19360:	ldr	r1, [pc, #1400]	; 198e0 <__flatcc_fb_codegen_c@@Base+0x4318>
   19364:	mov	r3, r9
   19368:	mov	r2, r5
   1936c:	str	r7, [sp]
   19370:	stmib	sp, {r6, fp}
   19374:	str	r9, [sp, #12]
   19378:	ldr	r0, [r5, #204]	; 0xcc
   1937c:	add	r1, pc, r1
   19380:	bl	13f58 <fprintf@plt>
   19384:	ldr	r1, [pc, #1368]	; 198e4 <__flatcc_fb_codegen_c@@Base+0x431c>
   19388:	mov	r3, r9
   1938c:	mov	r2, r5
   19390:	str	r7, [sp]
   19394:	stmib	sp, {r6, fp}
   19398:	ldr	r0, [r5, #204]	; 0xcc
   1939c:	add	r1, pc, r1
   193a0:	bl	13f58 <fprintf@plt>
   193a4:	ldr	r1, [pc, #1340]	; 198e8 <__flatcc_fb_codegen_c@@Base+0x4320>
   193a8:	mov	r3, r9
   193ac:	mov	r2, r5
   193b0:	str	r7, [sp]
   193b4:	stmib	sp, {r6, fp}
   193b8:	ldr	r0, [r5, #204]	; 0xcc
   193bc:	add	r1, pc, r1
   193c0:	bl	13f58 <fprintf@plt>
   193c4:	ldr	r3, [r5, #212]	; 0xd4
   193c8:	ldr	r3, [r3, #136]	; 0x88
   193cc:	cmp	r3, #0
   193d0:	bne	196bc <__flatcc_fb_codegen_c@@Base+0x40f4>
   193d4:	ldr	r4, [r4]
   193d8:	mov	r3, #1
   193dc:	mov	r8, r3
   193e0:	str	r3, [sp, #28]
   193e4:	cmp	r4, #0
   193e8:	bne	18f10 <__flatcc_fb_codegen_c@@Base+0x3948>
   193ec:	b	18fbc <__flatcc_fb_codegen_c@@Base+0x39f4>
   193f0:	ldr	r0, [pc, #1268]	; 198ec <__flatcc_fb_codegen_c@@Base+0x4324>
   193f4:	mov	r2, #3
   193f8:	mov	r1, #1
   193fc:	ldr	r3, [r5, #204]	; 0xcc
   19400:	add	r0, pc, r0
   19404:	bl	13eec <fwrite@plt>
   19408:	b	18dec <__flatcc_fb_codegen_c@@Base+0x3824>
   1940c:	ldr	r1, [pc, #1244]	; 198f0 <__flatcc_fb_codegen_c@@Base+0x4328>
   19410:	ldr	r4, [sp, #56]	; 0x38
   19414:	add	r1, pc, r1
   19418:	mov	r2, r4
   1941c:	bl	13f58 <fprintf@plt>
   19420:	ldr	r1, [pc, #1228]	; 198f4 <__flatcc_fb_codegen_c@@Base+0x432c>
   19424:	mov	r3, r4
   19428:	mov	r2, r4
   1942c:	str	r4, [sp]
   19430:	ldr	r0, [r5, #204]	; 0xcc
   19434:	add	r1, pc, r1
   19438:	bl	13f58 <fprintf@plt>
   1943c:	ldr	r1, [pc, #1204]	; 198f8 <__flatcc_fb_codegen_c@@Base+0x4330>
   19440:	mov	r3, r4
   19444:	mov	r2, r4
   19448:	str	r4, [sp]
   1944c:	ldr	r0, [r5, #204]	; 0xcc
   19450:	add	r1, pc, r1
   19454:	bl	13f58 <fprintf@plt>
   19458:	ldr	r1, [pc, #1180]	; 198fc <__flatcc_fb_codegen_c@@Base+0x4334>
   1945c:	mov	r3, r4
   19460:	mov	r2, r4
   19464:	str	r4, [sp]
   19468:	ldr	r0, [r5, #204]	; 0xcc
   1946c:	add	r1, pc, r1
   19470:	bl	13f58 <fprintf@plt>
   19474:	b	18e64 <__flatcc_fb_codegen_c@@Base+0x389c>
   19478:	mov	r3, r0
   1947c:	ldr	r0, [pc, #1148]	; 19900 <__flatcc_fb_codegen_c@@Base+0x4338>
   19480:	mov	r2, #16
   19484:	mov	r1, #1
   19488:	add	r0, pc, r0
   1948c:	bl	13eec <fwrite@plt>
   19490:	ldr	r1, [pc, #1132]	; 19904 <__flatcc_fb_codegen_c@@Base+0x433c>
   19494:	ldr	r2, [sp, #56]	; 0x38
   19498:	ldr	r0, [r5, #204]	; 0xcc
   1949c:	add	r1, pc, r1
   194a0:	bl	13f58 <fprintf@plt>
   194a4:	ldr	r4, [fp, #20]
   194a8:	cmp	r4, #0
   194ac:	bne	18bd4 <__flatcc_fb_codegen_c@@Base+0x360c>
   194b0:	mov	r6, r4
   194b4:	str	r4, [sp, #52]	; 0x34
   194b8:	b	18dac <__flatcc_fb_codegen_c@@Base+0x37e4>
   194bc:	ldr	ip, [pc, #1092]	; 19908 <__flatcc_fb_codegen_c@@Base+0x4340>
   194c0:	ldr	r0, [sp, #36]	; 0x24
   194c4:	add	ip, pc, ip
   194c8:	mov	lr, r0
   194cc:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   194d0:	ldr	lr, [pc, #1076]	; 1990c <__flatcc_fb_codegen_c@@Base+0x4344>
   194d4:	ldr	ip, [pc, #1076]	; 19910 <__flatcc_fb_codegen_c@@Base+0x4348>
   194d8:	ldr	r0, [pc, #1076]	; 19914 <__flatcc_fb_codegen_c@@Base+0x434c>
   194dc:	add	lr, pc, lr
   194e0:	add	ip, pc, ip
   194e4:	add	r0, pc, r0
   194e8:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   194ec:	ldr	lr, [pc, #1060]	; 19918 <__flatcc_fb_codegen_c@@Base+0x4350>
   194f0:	ldr	ip, [pc, #1060]	; 1991c <__flatcc_fb_codegen_c@@Base+0x4354>
   194f4:	ldr	r0, [pc, #1060]	; 19920 <__flatcc_fb_codegen_c@@Base+0x4358>
   194f8:	add	lr, pc, lr
   194fc:	add	ip, pc, ip
   19500:	add	r0, pc, r0
   19504:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   19508:	ldr	lr, [pc, #1044]	; 19924 <__flatcc_fb_codegen_c@@Base+0x435c>
   1950c:	ldr	ip, [pc, #1044]	; 19928 <__flatcc_fb_codegen_c@@Base+0x4360>
   19510:	ldr	r0, [pc, #1044]	; 1992c <__flatcc_fb_codegen_c@@Base+0x4364>
   19514:	add	lr, pc, lr
   19518:	add	ip, pc, ip
   1951c:	add	r0, pc, r0
   19520:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   19524:	ldr	lr, [pc, #1028]	; 19930 <__flatcc_fb_codegen_c@@Base+0x4368>
   19528:	ldr	ip, [pc, #1028]	; 19934 <__flatcc_fb_codegen_c@@Base+0x436c>
   1952c:	ldr	r0, [pc, #1028]	; 19938 <__flatcc_fb_codegen_c@@Base+0x4370>
   19530:	add	lr, pc, lr
   19534:	add	ip, pc, ip
   19538:	add	r0, pc, r0
   1953c:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   19540:	ldr	ip, [pc, #1012]	; 1993c <__flatcc_fb_codegen_c@@Base+0x4374>
   19544:	ldr	r0, [sp, #44]	; 0x2c
   19548:	add	ip, pc, ip
   1954c:	mov	lr, r0
   19550:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   19554:	ldr	lr, [pc, #996]	; 19940 <__flatcc_fb_codegen_c@@Base+0x4378>
   19558:	ldr	ip, [pc, #996]	; 19944 <__flatcc_fb_codegen_c@@Base+0x437c>
   1955c:	ldr	r0, [pc, #996]	; 19948 <__flatcc_fb_codegen_c@@Base+0x4380>
   19560:	add	lr, pc, lr
   19564:	add	ip, pc, ip
   19568:	add	r0, pc, r0
   1956c:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   19570:	ldr	lr, [pc, #980]	; 1994c <__flatcc_fb_codegen_c@@Base+0x4384>
   19574:	ldr	ip, [pc, #980]	; 19950 <__flatcc_fb_codegen_c@@Base+0x4388>
   19578:	ldr	r0, [pc, #980]	; 19954 <__flatcc_fb_codegen_c@@Base+0x438c>
   1957c:	add	lr, pc, lr
   19580:	add	ip, pc, ip
   19584:	add	r0, pc, r0
   19588:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1958c:	ldr	lr, [pc, #964]	; 19958 <__flatcc_fb_codegen_c@@Base+0x4390>
   19590:	ldr	ip, [pc, #964]	; 1995c <__flatcc_fb_codegen_c@@Base+0x4394>
   19594:	ldr	r0, [pc, #964]	; 19960 <__flatcc_fb_codegen_c@@Base+0x4398>
   19598:	add	lr, pc, lr
   1959c:	add	ip, pc, ip
   195a0:	add	r0, pc, r0
   195a4:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   195a8:	ldr	lr, [pc, #948]	; 19964 <__flatcc_fb_codegen_c@@Base+0x439c>
   195ac:	ldr	ip, [pc, #948]	; 19968 <__flatcc_fb_codegen_c@@Base+0x43a0>
   195b0:	ldr	r0, [pc, #948]	; 1996c <__flatcc_fb_codegen_c@@Base+0x43a4>
   195b4:	add	lr, pc, lr
   195b8:	add	ip, pc, ip
   195bc:	add	r0, pc, r0
   195c0:	b	19170 <__flatcc_fb_codegen_c@@Base+0x3ba8>
   195c4:	ldr	r0, [pc, #932]	; 19970 <__flatcc_fb_codegen_c@@Base+0x43a8>
   195c8:	mov	r2, #66	; 0x42
   195cc:	mov	r1, #1
   195d0:	add	r0, pc, r0
   195d4:	bl	13eec <fwrite@plt>
   195d8:	ldr	r0, [pc, #916]	; 19974 <__flatcc_fb_codegen_c@@Base+0x43ac>
   195dc:	mov	r2, #61	; 0x3d
   195e0:	mov	r1, #1
   195e4:	ldr	r3, [r5, #204]	; 0xcc
   195e8:	add	r0, pc, r0
   195ec:	bl	13eec <fwrite@plt>
   195f0:	ldr	r1, [pc, #896]	; 19978 <__flatcc_fb_codegen_c@@Base+0x43b0>
   195f4:	mov	r3, r9
   195f8:	mov	r2, r5
   195fc:	str	r7, [sp]
   19600:	stmib	sp, {r6, fp}
   19604:	ldr	r0, [r5, #204]	; 0xcc
   19608:	add	r1, pc, r1
   1960c:	bl	13f58 <fprintf@plt>
   19610:	ldr	r3, [r5, #212]	; 0xd4
   19614:	ldr	r3, [r3, #136]	; 0x88
   19618:	cmp	r3, #0
   1961c:	beq	193d4 <__flatcc_fb_codegen_c@@Base+0x3e0c>
   19620:	ldr	r1, [pc, #852]	; 1997c <__flatcc_fb_codegen_c@@Base+0x43b4>
   19624:	mov	r3, r9
   19628:	mov	r2, r5
   1962c:	str	r7, [sp]
   19630:	stmib	sp, {r6, fp}
   19634:	str	r9, [sp, #12]
   19638:	ldr	r0, [r5, #204]	; 0xcc
   1963c:	add	r1, pc, r1
   19640:	ldr	r8, [sp, #28]
   19644:	bl	13f58 <fprintf@plt>
   19648:	b	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   1964c:	ldr	r1, [pc, #812]	; 19980 <__flatcc_fb_codegen_c@@Base+0x43b8>
   19650:	ldr	r2, [sp, #52]	; 0x34
   19654:	add	r1, pc, r1
   19658:	bl	13f58 <fprintf@plt>
   1965c:	ldr	r0, [r5, #204]	; 0xcc
   19660:	b	18dbc <__flatcc_fb_codegen_c@@Base+0x37f4>
   19664:	ldr	r2, [pc, #792]	; 19984 <__flatcc_fb_codegen_c@@Base+0x43bc>
   19668:	mov	r3, #141	; 0x8d
   1966c:	ldr	r1, [sp, #60]	; 0x3c
   19670:	ldr	r0, [pc, #784]	; 19988 <__flatcc_fb_codegen_c@@Base+0x43c0>
   19674:	ldr	r4, [pc, #784]	; 1998c <__flatcc_fb_codegen_c@@Base+0x43c4>
   19678:	ldr	ip, [r1, r2]
   1967c:	add	r0, pc, r0
   19680:	ldr	r1, [pc, #776]	; 19990 <__flatcc_fb_codegen_c@@Base+0x43c8>
   19684:	add	r4, pc, r4
   19688:	str	r0, [sp]
   1968c:	mov	r2, r4
   19690:	ldr	r0, [ip]
   19694:	add	r1, pc, r1
   19698:	bl	13f58 <fprintf@plt>
   1969c:	ldr	r3, [pc, #752]	; 19994 <__flatcc_fb_codegen_c@@Base+0x43cc>
   196a0:	mov	r1, r4
   196a4:	mov	r2, #141	; 0x8d
   196a8:	ldr	r0, [pc, #744]	; 19998 <__flatcc_fb_codegen_c@@Base+0x43d0>
   196ac:	add	r3, pc, r3
   196b0:	add	r3, r3, #20
   196b4:	add	r0, pc, r0
   196b8:	bl	1400c <__assert_fail@plt>
   196bc:	ldr	r1, [pc, #728]	; 1999c <__flatcc_fb_codegen_c@@Base+0x43d4>
   196c0:	mov	r0, #1
   196c4:	mov	r3, r9
   196c8:	mov	r8, r0
   196cc:	mov	r2, r9
   196d0:	str	r7, [sp]
   196d4:	str	r6, [sp, #4]
   196d8:	str	r0, [sp, #28]
   196dc:	ldr	r0, [r5, #204]	; 0xcc
   196e0:	add	r1, pc, r1
   196e4:	bl	13f58 <fprintf@plt>
   196e8:	b	18fb0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   196ec:	ldr	r2, [pc, #684]	; 199a0 <__flatcc_fb_codegen_c@@Base+0x43d8>
   196f0:	ldr	r1, [pc, #684]	; 199a4 <__flatcc_fb_codegen_c@@Base+0x43dc>
   196f4:	ldr	r0, [r5, #204]	; 0xcc
   196f8:	add	r2, pc, r2
   196fc:	ldr	r4, [pc, #676]	; 199a8 <__flatcc_fb_codegen_c@@Base+0x43e0>
   19700:	add	r1, pc, r1
   19704:	bl	13f58 <fprintf@plt>
   19708:	ldr	r2, [pc, #628]	; 19984 <__flatcc_fb_codegen_c@@Base+0x43bc>
   1970c:	movw	r3, #1029	; 0x405
   19710:	ldr	r1, [sp, #60]	; 0x3c
   19714:	add	r4, pc, r4
   19718:	ldr	r0, [pc, #652]	; 199ac <__flatcc_fb_codegen_c@@Base+0x43e4>
   1971c:	ldr	ip, [r1, r2]
   19720:	mov	r2, r4
   19724:	ldr	r1, [pc, #644]	; 199b0 <__flatcc_fb_codegen_c@@Base+0x43e8>
   19728:	add	r0, pc, r0
   1972c:	str	r0, [sp]
   19730:	ldr	r0, [ip]
   19734:	add	r1, pc, r1
   19738:	bl	13f58 <fprintf@plt>
   1973c:	ldr	r3, [pc, #624]	; 199b4 <__flatcc_fb_codegen_c@@Base+0x43ec>
   19740:	mov	r1, r4
   19744:	movw	r2, #1029	; 0x405
   19748:	ldr	r0, [pc, #616]	; 199b8 <__flatcc_fb_codegen_c@@Base+0x43f0>
   1974c:	add	r3, pc, r3
   19750:	add	r3, r3, #152	; 0x98
   19754:	add	r0, pc, r0
   19758:	bl	1400c <__assert_fail@plt>
   1975c:	ldr	r3, [pc, #600]	; 199bc <__flatcc_fb_codegen_c@@Base+0x43f4>
   19760:	movw	r2, #1018	; 0x3fa
   19764:	ldr	r1, [pc, #596]	; 199c0 <__flatcc_fb_codegen_c@@Base+0x43f8>
   19768:	ldr	r0, [pc, #596]	; 199c4 <__flatcc_fb_codegen_c@@Base+0x43fc>
   1976c:	add	r3, pc, r3
   19770:	add	r3, r3, #152	; 0x98
   19774:	add	r1, pc, r1
   19778:	add	r0, pc, r0
   1977c:	bl	1400c <__assert_fail@plt>
   19780:	ldr	r3, [pc, #576]	; 199c8 <__flatcc_fb_codegen_c@@Base+0x4400>
   19784:	mov	r2, #936	; 0x3a8
   19788:	ldr	r1, [pc, #572]	; 199cc <__flatcc_fb_codegen_c@@Base+0x4404>
   1978c:	ldr	r0, [pc, #572]	; 199d0 <__flatcc_fb_codegen_c@@Base+0x4408>
   19790:	add	r3, pc, r3
   19794:	add	r3, r3, #152	; 0x98
   19798:	add	r1, pc, r1
   1979c:	add	r0, pc, r0
   197a0:	bl	1400c <__assert_fail@plt>
   197a4:	ldr	r3, [pc, #552]	; 199d4 <__flatcc_fb_codegen_c@@Base+0x440c>
   197a8:	movw	r2, #938	; 0x3aa
   197ac:	ldr	r1, [pc, #548]	; 199d8 <__flatcc_fb_codegen_c@@Base+0x4410>
   197b0:	ldr	r0, [pc, #548]	; 199dc <__flatcc_fb_codegen_c@@Base+0x4414>
   197b4:	add	r3, pc, r3
   197b8:	add	r3, r3, #152	; 0x98
   197bc:	add	r1, pc, r1
   197c0:	add	r0, pc, r0
   197c4:	bl	1400c <__assert_fail@plt>
   197c8:	bl	159f4 <__flatcc_fb_codegen_c@@Base+0x42c>
   197cc:	bl	15974 <__flatcc_fb_codegen_c@@Base+0x3ac>
   197d0:	andeq	r2, r5, r4, asr #11
   197d4:	muleq	r3, r0, fp
   197d8:	andeq	r7, r2, r8, asr #31
   197dc:	andeq	r1, r3, r8, lsl #23
   197e0:	andeq	r7, r2, ip, lsr #31
   197e4:	andeq	r0, r3, ip, lsr #5
   197e8:	andeq	r7, r2, ip, lsr #20
   197ec:	andeq	r7, r2, r4, ror #21
   197f0:	andeq	r8, r2, r0, lsl #23
   197f4:	andeq	r8, r2, ip, lsl #15
   197f8:	andeq	r8, r2, r0, ror #25
   197fc:	andeq	r8, r2, r8, asr #25
   19800:	andeq	r7, r2, r8, lsr #29
   19804:			; <UNDEFINED> instruction: 0x00028cb0
   19808:	andeq	r0, r3, r4, lsr #3
   1980c:	andeq	r7, r2, r0, ror #28
   19810:	andeq	r8, r2, r4, ror r6
   19814:	andeq	r1, r3, r4, lsl r9
   19818:	andeq	r7, r2, r8, lsr ip
   1981c:	andeq	r8, r2, r0, ror fp
   19820:	andeq	r8, r2, r4, lsr #24
   19824:	andeq	r0, r3, r0, lsr r6
   19828:	andeq	r8, r2, ip, ror #28
   1982c:			; <UNDEFINED> instruction: 0x00028bb4
   19830:	andeq	r8, r2, ip, asr #23
   19834:	andeq	r8, r2, r8, lsl #24
   19838:	andeq	r8, r2, r0, lsr ip
   1983c:	andeq	r8, r2, r4, ror ip
   19840:	andeq	r7, r2, r8, lsr ip
   19844:	andeq	r8, r2, r8, ror #24
   19848:	andeq	r7, r2, r0, lsr #21
   1984c:	andeq	r8, r2, r4, ror #7
   19850:	andeq	r8, r2, r8, lsr ip
   19854:	andeq	r7, r2, r8, lsl sl
   19858:	ldrdeq	r8, [r2], -ip
   1985c:	andeq	r1, r3, ip, ror #12
   19860:	muleq	r2, r8, r9
   19864:	ldrdeq	r8, [r2], -r4
   19868:	andeq	r1, r3, ip, lsr r6
   1986c:	andeq	r7, r2, r0, asr r9
   19870:	andeq	r1, r3, r8, lsr #12
   19874:	andeq	r7, r2, ip, lsr #18
   19878:	andeq	r1, r3, r4, lsl r6
   1987c:	andeq	r7, r2, ip, lsr #17
   19880:	andeq	r1, r3, r0, lsl #12
   19884:			; <UNDEFINED> instruction: 0x000278bc
   19888:	andeq	r1, r3, ip, ror #11
   1988c:	andeq	r7, r2, r0, ror #17
   19890:	ldrdeq	r1, [r3], -r8
   19894:	muleq	r2, ip, r8
   19898:	andeq	r1, r3, r4, asr #11
   1989c:	muleq	r2, ip, r8
   198a0:			; <UNDEFINED> instruction: 0x000315b0
   198a4:	andeq	r7, r2, r8, asr r8
   198a8:	strdeq	r8, [r2], -r4
   198ac:	andeq	r8, r2, ip, asr #16
   198b0:	andeq	r8, r2, r0, asr #21
   198b4:	andeq	r7, r2, r8, ror #15
   198b8:	andeq	pc, r3, r0, ror #8
   198bc:	andeq	r8, r2, r8, ror r7
   198c0:	andeq	r8, r2, ip, lsr #13
   198c4:	muleq	r2, r4, r9
   198c8:	strdeq	r7, [r2], -r4
   198cc:	strdeq	r1, [r3], -r8
   198d0:	ldrdeq	r8, [r2], -r4
   198d4:	andeq	r7, r2, r4, ror #26
   198d8:	andeq	r7, r2, r4, ror r9
   198dc:	andeq	r7, r2, ip, asr #26
   198e0:	andeq	r8, r2, r4, ror #17
   198e4:	andeq	r7, r2, r0, lsr sp
   198e8:	andeq	r7, r2, r0, asr sp
   198ec:	strdeq	pc, [r2], -ip
   198f0:	andeq	r8, r2, ip, lsr #6
   198f4:	andeq	r8, r2, r0, ror r3
   198f8:	andeq	r8, r2, r8, lsr #7
   198fc:	ldrdeq	r8, [r2], -r0
   19900:	andeq	r8, r2, r4, lsl #8
   19904:	andeq	r8, r2, r4, lsl #8
   19908:	muleq	r3, ip, r1
   1990c:			; <UNDEFINED> instruction: 0x000274b4
   19910:	andeq	r1, r3, r0, lsl #3
   19914:			; <UNDEFINED> instruction: 0x000274b4
   19918:	andeq	r7, r2, r4, lsl #8
   1991c:	andeq	r1, r3, r4, ror #2
   19920:	andeq	r7, r2, r4, lsl #8
   19924:	andeq	r7, r2, r4, ror #8
   19928:	andeq	r1, r3, r8, asr #2
   1992c:	andeq	r7, r2, r4, ror #8
   19930:	andeq	r7, r2, r8, lsr r4
   19934:	andeq	r1, r3, ip, lsr #2
   19938:	andeq	r7, r2, r8, lsr r4
   1993c:	andeq	r1, r3, r8, lsl r1
   19940:	strdeq	r7, [r2], -r8
   19944:	strdeq	r1, [r3], -ip
   19948:	strdeq	r7, [r2], -r8
   1994c:	andeq	r7, r2, ip, lsr #7
   19950:	andeq	r1, r3, r0, ror #1
   19954:			; <UNDEFINED> instruction: 0x000273b0
   19958:	andeq	r7, r2, r4, lsr #7
   1995c:	andeq	r1, r3, r4, asr #1
   19960:	andeq	r7, r2, r8, lsr #7
   19964:	andeq	r7, r2, r8, asr r3
   19968:	andeq	r1, r3, r8, lsr #1
   1996c:	andeq	r7, r2, ip, asr r3
   19970:	andeq	r7, r2, r8, lsl #13
   19974:			; <UNDEFINED> instruction: 0x000276b4
   19978:	andeq	r7, r2, ip, lsl #21
   1997c:	andeq	r8, r2, r4, lsr #12
   19980:	andeq	r8, r2, r4, ror #4
   19984:	muleq	r0, ip, r0
   19988:	andeq	r7, r2, r8, asr #4
   1998c:	ldrdeq	r7, [r2], -r4
   19990:	andeq	r7, r2, r4, lsr #4
   19994:	strdeq	r6, [r2], -r4
   19998:	andeq	pc, r2, r8, lsr #14
   1999c:	andeq	r7, r2, r8, lsr #13
   199a0:	andeq	r8, r2, r4, lsl #5
   199a4:	muleq	r2, ip, r2
   199a8:	andeq	r6, r2, ip, asr #30
   199ac:	muleq	r2, ip, r1
   199b0:	andeq	r7, r2, r4, lsl #3
   199b4:	andeq	r6, r2, r4, asr lr
   199b8:	andeq	pc, r2, r8, lsl #13
   199bc:	andeq	r6, r2, r4, lsr lr
   199c0:	andeq	r6, r2, ip, ror #29
   199c4:	andeq	r8, r2, r4, lsl #3
   199c8:	andeq	r6, r2, r0, lsl lr
   199cc:	andeq	r6, r2, r8, asr #29
   199d0:	andeq	r7, r2, r4, asr #30
   199d4:	andeq	r6, r2, ip, ror #27
   199d8:	andeq	r6, r2, r4, lsr #29
   199dc:	andeq	r7, r2, r0, ror #30

000199e0 <__flatcc_fb_gen_common_c_header@@Base>:
   199e0:	ldr	r1, [pc, #3176]	; 1a650 <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   199e4:	strd	r4, [sp, #-12]!
   199e8:	add	r5, r0, #102	; 0x66
   199ec:	mov	r4, r0
   199f0:	mov	r3, r5
   199f4:	mov	r2, r5
   199f8:	ldr	r0, [r0, #204]	; 0xcc
   199fc:	str	lr, [sp, #8]
   19a00:	sub	sp, sp, #236	; 0xec
   19a04:	add	r1, pc, r1
   19a08:	bl	13f58 <fprintf@plt>
   19a0c:	ldr	r0, [pc, #3136]	; 1a654 <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   19a10:	mov	r2, #81	; 0x51
   19a14:	mov	r1, #1
   19a18:	ldr	r3, [r4, #204]	; 0xcc
   19a1c:	add	r0, pc, r0
   19a20:	bl	13eec <fwrite@plt>
   19a24:	ldr	r0, [pc, #3116]	; 1a658 <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   19a28:	mov	r2, #52	; 0x34
   19a2c:	mov	r1, #1
   19a30:	ldr	r3, [r4, #204]	; 0xcc
   19a34:	add	r0, pc, r0
   19a38:	bl	13eec <fwrite@plt>
   19a3c:	ldr	r3, [r4, #212]	; 0xd4
   19a40:	ldr	r2, [r3, #136]	; 0x88
   19a44:	cmp	r2, #0
   19a48:	beq	1a630 <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   19a4c:	ldr	r2, [r3, #140]	; 0x8c
   19a50:	ldr	r3, [r4, #204]	; 0xcc
   19a54:	cmp	r2, #0
   19a58:	bne	1a614 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   19a5c:	ldr	r0, [pc, #3064]	; 1a65c <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   19a60:	mov	r2, #41	; 0x29
   19a64:	mov	r1, #1
   19a68:	add	r0, pc, r0
   19a6c:	bl	13eec <fwrite@plt>
   19a70:	ldr	r1, [pc, #3048]	; 1a660 <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   19a74:	mov	r0, r4
   19a78:	add	r1, pc, r1
   19a7c:	bl	13e8c <strcmp@plt>
   19a80:	cmp	r0, #0
   19a84:	bne	1a58c <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   19a88:	ldr	r1, [pc, #3028]	; 1a664 <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   19a8c:	mov	r3, r4
   19a90:	mov	r2, r4
   19a94:	ldr	r0, [r4, #204]	; 0xcc
   19a98:	add	r1, pc, r1
   19a9c:	bl	13f58 <fprintf@plt>
   19aa0:	ldr	r1, [pc, #3008]	; 1a668 <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   19aa4:	mov	r3, r4
   19aa8:	mov	r2, r4
   19aac:	str	r4, [sp]
   19ab0:	str	r4, [sp, #4]
   19ab4:	str	r4, [sp, #8]
   19ab8:	str	r4, [sp, #12]
   19abc:	add	r1, pc, r1
   19ac0:	str	r4, [sp, #16]
   19ac4:	ldr	r0, [r4, #204]	; 0xcc
   19ac8:	bl	13f58 <fprintf@plt>
   19acc:	ldr	r1, [pc, #2968]	; 1a66c <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   19ad0:	mov	r3, r4
   19ad4:	mov	r2, r4
   19ad8:	ldr	r0, [r4, #204]	; 0xcc
   19adc:	add	r1, pc, r1
   19ae0:	bl	13f58 <fprintf@plt>
   19ae4:	ldr	r1, [pc, #2948]	; 1a670 <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   19ae8:	mov	r3, r4
   19aec:	mov	r2, r4
   19af0:	str	r4, [sp]
   19af4:	str	r4, [sp, #4]
   19af8:	ldr	r0, [r4, #204]	; 0xcc
   19afc:	add	r1, pc, r1
   19b00:	bl	13f58 <fprintf@plt>
   19b04:	ldr	r3, [r4, #212]	; 0xd4
   19b08:	ldr	r3, [r3, #32]
   19b0c:	cmp	r3, #0
   19b10:	beq	1a544 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   19b14:	ldr	r1, [pc, #2904]	; 1a674 <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   19b18:	mov	r2, r4
   19b1c:	ldr	r0, [r4, #204]	; 0xcc
   19b20:	add	r1, pc, r1
   19b24:	bl	13f58 <fprintf@plt>
   19b28:	ldr	r1, [pc, #2888]	; 1a678 <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   19b2c:	mov	r3, r4
   19b30:	mov	r2, r4
   19b34:	ldr	r0, [r4, #204]	; 0xcc
   19b38:	add	r1, pc, r1
   19b3c:	bl	13f58 <fprintf@plt>
   19b40:	ldr	r1, [pc, #2868]	; 1a67c <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   19b44:	mov	r3, r4
   19b48:	mov	r2, r4
   19b4c:	str	r4, [sp]
   19b50:	str	r4, [sp, #4]
   19b54:	str	r4, [sp, #8]
   19b58:	ldr	r0, [r4, #204]	; 0xcc
   19b5c:	add	r1, pc, r1
   19b60:	bl	13f58 <fprintf@plt>
   19b64:	ldr	r1, [pc, #2836]	; 1a680 <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   19b68:	mov	r3, r4
   19b6c:	mov	r2, r4
   19b70:	str	r4, [sp]
   19b74:	str	r4, [sp, #4]
   19b78:	str	r4, [sp, #8]
   19b7c:	ldr	r0, [r4, #204]	; 0xcc
   19b80:	add	r1, pc, r1
   19b84:	bl	13f58 <fprintf@plt>
   19b88:	ldr	r1, [pc, #2804]	; 1a684 <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   19b8c:	mov	r3, r4
   19b90:	mov	r2, r4
   19b94:	str	r4, [sp]
   19b98:	ldr	r0, [r4, #204]	; 0xcc
   19b9c:	add	r1, pc, r1
   19ba0:	bl	13f58 <fprintf@plt>
   19ba4:	ldr	r1, [pc, #2780]	; 1a688 <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   19ba8:	mov	r3, r4
   19bac:	mov	r2, r4
   19bb0:	str	r4, [sp]
   19bb4:	ldr	r0, [r4, #204]	; 0xcc
   19bb8:	add	r1, pc, r1
   19bbc:	bl	13f58 <fprintf@plt>
   19bc0:	ldr	r1, [pc, #2756]	; 1a68c <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   19bc4:	mov	r3, r4
   19bc8:	mov	r2, r4
   19bcc:	str	r4, [sp]
   19bd0:	ldr	r0, [r4, #204]	; 0xcc
   19bd4:	add	r1, pc, r1
   19bd8:	bl	13f58 <fprintf@plt>
   19bdc:	ldr	r1, [pc, #2732]	; 1a690 <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   19be0:	mov	r3, r4
   19be4:	mov	r2, r4
   19be8:	str	r4, [sp]
   19bec:	str	r4, [sp, #4]
   19bf0:	str	r4, [sp, #8]
   19bf4:	ldr	r0, [r4, #204]	; 0xcc
   19bf8:	add	r1, pc, r1
   19bfc:	bl	13f58 <fprintf@plt>
   19c00:	ldr	r3, [r4, #212]	; 0xd4
   19c04:	ldr	r3, [r3, #32]
   19c08:	cmp	r3, #0
   19c0c:	beq	1a508 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   19c10:	ldr	r1, [pc, #2684]	; 1a694 <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   19c14:	mov	r2, r4
   19c18:	ldr	r0, [r4, #204]	; 0xcc
   19c1c:	add	r1, pc, r1
   19c20:	bl	13f58 <fprintf@plt>
   19c24:	ldr	r1, [pc, #2668]	; 1a698 <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   19c28:	mov	r3, r4
   19c2c:	mov	r2, r4
   19c30:	str	r4, [sp]
   19c34:	str	r4, [sp, #4]
   19c38:	ldr	r0, [r4, #204]	; 0xcc
   19c3c:	add	r1, pc, r1
   19c40:	bl	13f58 <fprintf@plt>
   19c44:	ldr	r1, [pc, #2640]	; 1a69c <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   19c48:	mov	r3, r4
   19c4c:	mov	r2, r4
   19c50:	ldr	r0, [r4, #204]	; 0xcc
   19c54:	add	r1, pc, r1
   19c58:	bl	13f58 <fprintf@plt>
   19c5c:	ldr	r1, [pc, #2620]	; 1a6a0 <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   19c60:	mov	r3, r4
   19c64:	mov	r2, r4
   19c68:	str	r4, [sp]
   19c6c:	ldr	r0, [r4, #204]	; 0xcc
   19c70:	add	r1, pc, r1
   19c74:	bl	13f58 <fprintf@plt>
   19c78:	ldr	r1, [pc, #2596]	; 1a6a4 <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   19c7c:	mov	r3, r4
   19c80:	mov	r2, r4
   19c84:	ldr	r0, [r4, #204]	; 0xcc
   19c88:	add	r1, pc, r1
   19c8c:	bl	13f58 <fprintf@plt>
   19c90:	ldr	r1, [pc, #2576]	; 1a6a8 <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   19c94:	mov	r3, r4
   19c98:	mov	r2, r4
   19c9c:	str	r4, [sp]
   19ca0:	str	r4, [sp, #4]
   19ca4:	ldr	r0, [r4, #204]	; 0xcc
   19ca8:	add	r1, pc, r1
   19cac:	bl	13f58 <fprintf@plt>
   19cb0:	ldr	r1, [pc, #2548]	; 1a6ac <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   19cb4:	mov	r3, r4
   19cb8:	mov	r2, r4
   19cbc:	ldr	r0, [r4, #204]	; 0xcc
   19cc0:	add	r1, pc, r1
   19cc4:	bl	13f58 <fprintf@plt>
   19cc8:	ldr	r1, [pc, #2528]	; 1a6b0 <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   19ccc:	mov	r3, r4
   19cd0:	mov	r2, r4
   19cd4:	ldr	r0, [r4, #204]	; 0xcc
   19cd8:	add	r1, pc, r1
   19cdc:	bl	13f58 <fprintf@plt>
   19ce0:	ldr	r1, [pc, #2508]	; 1a6b4 <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   19ce4:	mov	r3, r4
   19ce8:	mov	r2, r4
   19cec:	str	r4, [sp]
   19cf0:	str	r4, [sp, #4]
   19cf4:	ldr	r0, [r4, #204]	; 0xcc
   19cf8:	add	r1, pc, r1
   19cfc:	bl	13f58 <fprintf@plt>
   19d00:	ldr	r1, [pc, #2480]	; 1a6b8 <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   19d04:	mov	r3, r4
   19d08:	mov	r2, r4
   19d0c:	str	r4, [sp]
   19d10:	str	r4, [sp, #4]
   19d14:	str	r4, [sp, #8]
   19d18:	str	r4, [sp, #12]
   19d1c:	add	r1, pc, r1
   19d20:	str	r4, [sp, #16]
   19d24:	str	r4, [sp, #20]
   19d28:	str	r4, [sp, #24]
   19d2c:	str	r4, [sp, #28]
   19d30:	str	r4, [sp, #32]
   19d34:	str	r4, [sp, #36]	; 0x24
   19d38:	ldr	r0, [r4, #204]	; 0xcc
   19d3c:	bl	13f58 <fprintf@plt>
   19d40:	ldr	r1, [pc, #2420]	; 1a6bc <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   19d44:	mov	r2, r4
   19d48:	ldr	r0, [r4, #204]	; 0xcc
   19d4c:	add	r1, pc, r1
   19d50:	bl	13f58 <fprintf@plt>
   19d54:	ldr	r1, [pc, #2404]	; 1a6c0 <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   19d58:	mov	r3, r4
   19d5c:	mov	r2, r4
   19d60:	str	r4, [sp]
   19d64:	str	r4, [sp, #4]
   19d68:	ldr	r0, [r4, #204]	; 0xcc
   19d6c:	add	r1, pc, r1
   19d70:	bl	13f58 <fprintf@plt>
   19d74:	ldr	r1, [pc, #2376]	; 1a6c4 <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   19d78:	mov	r3, r4
   19d7c:	mov	r2, r4
   19d80:	str	r4, [sp]
   19d84:	str	r4, [sp, #4]
   19d88:	str	r4, [sp, #8]
   19d8c:	str	r4, [sp, #12]
   19d90:	add	r1, pc, r1
   19d94:	str	r4, [sp, #16]
   19d98:	str	r4, [sp, #20]
   19d9c:	str	r4, [sp, #24]
   19da0:	str	r4, [sp, #28]
   19da4:	str	r4, [sp, #32]
   19da8:	str	r4, [sp, #36]	; 0x24
   19dac:	str	r4, [sp, #40]	; 0x28
   19db0:	str	r4, [sp, #44]	; 0x2c
   19db4:	str	r4, [sp, #48]	; 0x30
   19db8:	str	r4, [sp, #52]	; 0x34
   19dbc:	str	r4, [sp, #56]	; 0x38
   19dc0:	ldr	r0, [r4, #204]	; 0xcc
   19dc4:	bl	13f58 <fprintf@plt>
   19dc8:	ldr	r1, [pc, #2296]	; 1a6c8 <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   19dcc:	mov	r3, r4
   19dd0:	mov	r2, r4
   19dd4:	str	r4, [sp]
   19dd8:	str	r4, [sp, #4]
   19ddc:	str	r4, [sp, #8]
   19de0:	str	r4, [sp, #12]
   19de4:	add	r1, pc, r1
   19de8:	str	r4, [sp, #16]
   19dec:	str	r4, [sp, #20]
   19df0:	ldr	r0, [r4, #204]	; 0xcc
   19df4:	bl	13f58 <fprintf@plt>
   19df8:	ldr	r1, [pc, #2252]	; 1a6cc <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   19dfc:	mov	r3, r4
   19e00:	mov	r2, r4
   19e04:	str	r4, [sp]
   19e08:	str	r4, [sp, #4]
   19e0c:	ldr	r0, [r4, #204]	; 0xcc
   19e10:	add	r1, pc, r1
   19e14:	bl	13f58 <fprintf@plt>
   19e18:	ldr	r1, [pc, #2224]	; 1a6d0 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   19e1c:	mov	r3, r4
   19e20:	mov	r2, r4
   19e24:	str	r4, [sp]
   19e28:	str	r4, [sp, #4]
   19e2c:	ldr	r0, [r4, #204]	; 0xcc
   19e30:	add	r1, pc, r1
   19e34:	bl	13f58 <fprintf@plt>
   19e38:	ldr	r1, [pc, #2196]	; 1a6d4 <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   19e3c:	mov	r2, r4
   19e40:	ldr	r0, [r4, #204]	; 0xcc
   19e44:	add	r1, pc, r1
   19e48:	bl	13f58 <fprintf@plt>
   19e4c:	ldr	r1, [pc, #2180]	; 1a6d8 <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   19e50:	mov	r2, r4
   19e54:	ldr	r0, [r4, #204]	; 0xcc
   19e58:	add	r1, pc, r1
   19e5c:	bl	13f58 <fprintf@plt>
   19e60:	ldr	r1, [pc, #2164]	; 1a6dc <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   19e64:	mov	r2, r4
   19e68:	ldr	r0, [r4, #204]	; 0xcc
   19e6c:	add	r1, pc, r1
   19e70:	bl	13f58 <fprintf@plt>
   19e74:	ldr	r1, [pc, #2148]	; 1a6e0 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   19e78:	mov	r2, r4
   19e7c:	ldr	r0, [r4, #204]	; 0xcc
   19e80:	add	r1, pc, r1
   19e84:	bl	13f58 <fprintf@plt>
   19e88:	ldr	r1, [pc, #2132]	; 1a6e4 <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   19e8c:	mov	r2, r4
   19e90:	ldr	r0, [r4, #204]	; 0xcc
   19e94:	add	r1, pc, r1
   19e98:	bl	13f58 <fprintf@plt>
   19e9c:	ldr	r1, [pc, #2116]	; 1a6e8 <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   19ea0:	mov	r3, r4
   19ea4:	mov	r2, r4
   19ea8:	str	r4, [sp]
   19eac:	str	r4, [sp, #4]
   19eb0:	ldr	r0, [r4, #204]	; 0xcc
   19eb4:	add	r1, pc, r1
   19eb8:	bl	13f58 <fprintf@plt>
   19ebc:	ldr	r1, [pc, #2088]	; 1a6ec <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   19ec0:	mov	r3, r4
   19ec4:	mov	r2, r4
   19ec8:	str	r4, [sp]
   19ecc:	str	r4, [sp, #4]
   19ed0:	str	r4, [sp, #8]
   19ed4:	str	r4, [sp, #12]
   19ed8:	add	r1, pc, r1
   19edc:	ldr	r0, [r4, #204]	; 0xcc
   19ee0:	bl	13f58 <fprintf@plt>
   19ee4:	ldr	r1, [pc, #2052]	; 1a6f0 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   19ee8:	mov	r3, r4
   19eec:	mov	r2, r4
   19ef0:	str	r4, [sp]
   19ef4:	ldr	r0, [r4, #204]	; 0xcc
   19ef8:	add	r1, pc, r1
   19efc:	bl	13f58 <fprintf@plt>
   19f00:	ldr	r1, [pc, #2028]	; 1a6f4 <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   19f04:	mov	r3, r4
   19f08:	mov	r2, r4
   19f0c:	str	r4, [sp]
   19f10:	str	r4, [sp, #4]
   19f14:	str	r4, [sp, #8]
   19f18:	str	r4, [sp, #12]
   19f1c:	add	r1, pc, r1
   19f20:	str	r4, [sp, #16]
   19f24:	str	r4, [sp, #20]
   19f28:	str	r4, [sp, #24]
   19f2c:	str	r4, [sp, #28]
   19f30:	str	r4, [sp, #32]
   19f34:	ldr	r0, [r4, #204]	; 0xcc
   19f38:	bl	13f58 <fprintf@plt>
   19f3c:	ldr	r1, [pc, #1972]	; 1a6f8 <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   19f40:	mov	r3, r4
   19f44:	mov	r2, r4
   19f48:	ldr	r0, [r4, #204]	; 0xcc
   19f4c:	add	r1, pc, r1
   19f50:	bl	13f58 <fprintf@plt>
   19f54:	ldr	r1, [pc, #1952]	; 1a6fc <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   19f58:	mov	r3, r4
   19f5c:	mov	r2, r4
   19f60:	str	r4, [sp]
   19f64:	ldr	r0, [r4, #204]	; 0xcc
   19f68:	add	r1, pc, r1
   19f6c:	bl	13f58 <fprintf@plt>
   19f70:	ldr	r1, [pc, #1928]	; 1a700 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   19f74:	mov	r3, r4
   19f78:	mov	r2, r4
   19f7c:	str	r4, [sp]
   19f80:	ldr	r0, [r4, #204]	; 0xcc
   19f84:	add	r1, pc, r1
   19f88:	bl	13f58 <fprintf@plt>
   19f8c:	ldr	r1, [pc, #1904]	; 1a704 <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   19f90:	mov	r2, r4
   19f94:	ldr	r0, [r4, #204]	; 0xcc
   19f98:	add	r1, pc, r1
   19f9c:	bl	13f58 <fprintf@plt>
   19fa0:	ldr	r1, [pc, #1888]	; 1a708 <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   19fa4:	mov	r2, r4
   19fa8:	ldr	r0, [r4, #204]	; 0xcc
   19fac:	add	r1, pc, r1
   19fb0:	bl	13f58 <fprintf@plt>
   19fb4:	ldr	r1, [pc, #1872]	; 1a70c <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   19fb8:	mov	r3, r4
   19fbc:	mov	r2, r4
   19fc0:	ldr	r0, [r4, #204]	; 0xcc
   19fc4:	add	r1, pc, r1
   19fc8:	bl	13f58 <fprintf@plt>
   19fcc:	ldr	r1, [pc, #1852]	; 1a710 <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   19fd0:	mov	r3, r4
   19fd4:	mov	r2, r4
   19fd8:	ldr	r0, [r4, #204]	; 0xcc
   19fdc:	add	r1, pc, r1
   19fe0:	bl	13f58 <fprintf@plt>
   19fe4:	ldr	r1, [pc, #1832]	; 1a714 <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   19fe8:	mov	r3, r4
   19fec:	mov	r2, r4
   19ff0:	str	r4, [sp]
   19ff4:	str	r4, [sp, #4]
   19ff8:	str	r4, [sp, #8]
   19ffc:	str	r4, [sp, #12]
   1a000:	add	r1, pc, r1
   1a004:	str	r4, [sp, #16]
   1a008:	str	r4, [sp, #20]
   1a00c:	str	r4, [sp, #24]
   1a010:	str	r4, [sp, #28]
   1a014:	str	r4, [sp, #32]
   1a018:	ldr	r0, [r4, #204]	; 0xcc
   1a01c:	bl	13f58 <fprintf@plt>
   1a020:	ldr	r1, [pc, #1776]	; 1a718 <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   1a024:	mov	r3, r4
   1a028:	mov	r2, r4
   1a02c:	str	r4, [sp]
   1a030:	str	r4, [sp, #4]
   1a034:	str	r4, [sp, #8]
   1a038:	str	r4, [sp, #12]
   1a03c:	add	r1, pc, r1
   1a040:	str	r4, [sp, #16]
   1a044:	str	r4, [sp, #20]
   1a048:	str	r4, [sp, #24]
   1a04c:	str	r4, [sp, #28]
   1a050:	str	r4, [sp, #32]
   1a054:	ldr	r0, [r4, #204]	; 0xcc
   1a058:	bl	13f58 <fprintf@plt>
   1a05c:	ldr	r1, [pc, #1720]	; 1a71c <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   1a060:	mov	r3, r4
   1a064:	mov	r2, r4
   1a068:	str	r4, [sp]
   1a06c:	str	r4, [sp, #4]
   1a070:	str	r4, [sp, #8]
   1a074:	str	r4, [sp, #12]
   1a078:	add	r1, pc, r1
   1a07c:	str	r4, [sp, #16]
   1a080:	ldr	r0, [r4, #204]	; 0xcc
   1a084:	bl	13f58 <fprintf@plt>
   1a088:	ldr	r1, [pc, #1680]	; 1a720 <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   1a08c:	mov	r3, r4
   1a090:	mov	r2, r4
   1a094:	str	r4, [sp]
   1a098:	str	r4, [sp, #4]
   1a09c:	str	r4, [sp, #8]
   1a0a0:	str	r4, [sp, #12]
   1a0a4:	add	r1, pc, r1
   1a0a8:	str	r4, [sp, #16]
   1a0ac:	str	r4, [sp, #20]
   1a0b0:	str	r4, [sp, #24]
   1a0b4:	str	r4, [sp, #28]
   1a0b8:	str	r4, [sp, #32]
   1a0bc:	ldr	r0, [r4, #204]	; 0xcc
   1a0c0:	bl	13f58 <fprintf@plt>
   1a0c4:	ldr	r1, [pc, #1624]	; 1a724 <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   1a0c8:	mov	r3, r4
   1a0cc:	mov	r2, r4
   1a0d0:	str	r4, [sp]
   1a0d4:	str	r4, [sp, #4]
   1a0d8:	str	r4, [sp, #8]
   1a0dc:	str	r4, [sp, #12]
   1a0e0:	add	r1, pc, r1
   1a0e4:	str	r4, [sp, #16]
   1a0e8:	str	r4, [sp, #20]
   1a0ec:	str	r4, [sp, #24]
   1a0f0:	str	r4, [sp, #28]
   1a0f4:	str	r4, [sp, #32]
   1a0f8:	str	r4, [sp, #36]	; 0x24
   1a0fc:	str	r4, [sp, #40]	; 0x28
   1a100:	ldr	r0, [r4, #204]	; 0xcc
   1a104:	bl	13f58 <fprintf@plt>
   1a108:	ldr	r1, [pc, #1560]	; 1a728 <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   1a10c:	mov	r2, r4
   1a110:	ldr	r0, [r4, #204]	; 0xcc
   1a114:	add	r1, pc, r1
   1a118:	bl	13f58 <fprintf@plt>
   1a11c:	ldr	r1, [pc, #1544]	; 1a72c <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   1a120:	mov	r2, r4
   1a124:	ldr	r0, [r4, #204]	; 0xcc
   1a128:	add	r1, pc, r1
   1a12c:	bl	13f58 <fprintf@plt>
   1a130:	ldr	r3, [r4, #212]	; 0xd4
   1a134:	ldr	r3, [r3, #136]	; 0x88
   1a138:	cmp	r3, #0
   1a13c:	beq	1a518 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1a140:	mov	r0, r4
   1a144:	bl	1ad64 <__flatcc_gen_sort@@Base>
   1a148:	ldr	r1, [pc, #1504]	; 1a730 <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   1a14c:	mov	r3, r4
   1a150:	mov	r2, r4
   1a154:	str	r4, [sp]
   1a158:	str	r4, [sp, #4]
   1a15c:	str	r4, [sp, #8]
   1a160:	ldr	r0, [r4, #204]	; 0xcc
   1a164:	add	r1, pc, r1
   1a168:	bl	13f58 <fprintf@plt>
   1a16c:	ldr	r3, [r4, #212]	; 0xd4
   1a170:	ldr	r3, [r3, #136]	; 0x88
   1a174:	cmp	r3, #0
   1a178:	beq	1a534 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   1a17c:	ldr	r1, [pc, #1456]	; 1a734 <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   1a180:	mov	r2, r4
   1a184:	ldr	r0, [r4, #204]	; 0xcc
   1a188:	add	r1, pc, r1
   1a18c:	bl	13f58 <fprintf@plt>
   1a190:	mov	r0, #10
   1a194:	ldr	r1, [r4, #204]	; 0xcc
   1a198:	bl	13fb8 <fputc@plt>
   1a19c:	ldr	r1, [pc, #1428]	; 1a738 <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   1a1a0:	mov	r3, r4
   1a1a4:	mov	r2, r4
   1a1a8:	str	r4, [sp]
   1a1ac:	ldr	r0, [r4, #204]	; 0xcc
   1a1b0:	add	r1, pc, r1
   1a1b4:	bl	13f58 <fprintf@plt>
   1a1b8:	ldr	r1, [pc, #1404]	; 1a73c <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   1a1bc:	mov	r3, r4
   1a1c0:	mov	r2, r4
   1a1c4:	str	r4, [sp]
   1a1c8:	str	r4, [sp, #4]
   1a1cc:	str	r4, [sp, #8]
   1a1d0:	str	r4, [sp, #12]
   1a1d4:	add	r1, pc, r1
   1a1d8:	str	r4, [sp, #16]
   1a1dc:	str	r4, [sp, #20]
   1a1e0:	str	r4, [sp, #24]
   1a1e4:	ldr	r0, [r4, #204]	; 0xcc
   1a1e8:	str	r4, [sp, #28]
   1a1ec:	str	r4, [sp, #32]
   1a1f0:	str	r4, [sp, #36]	; 0x24
   1a1f4:	str	r4, [sp, #40]	; 0x28
   1a1f8:	str	r4, [sp, #44]	; 0x2c
   1a1fc:	str	r4, [sp, #48]	; 0x30
   1a200:	str	r4, [sp, #52]	; 0x34
   1a204:	str	r4, [sp, #56]	; 0x38
   1a208:	str	r4, [sp, #60]	; 0x3c
   1a20c:	str	r4, [sp, #64]	; 0x40
   1a210:	str	r4, [sp, #68]	; 0x44
   1a214:	str	r4, [sp, #72]	; 0x48
   1a218:	str	r4, [sp, #76]	; 0x4c
   1a21c:	str	r4, [sp, #80]	; 0x50
   1a220:	str	r4, [sp, #84]	; 0x54
   1a224:	str	r4, [sp, #88]	; 0x58
   1a228:	str	r4, [sp, #92]	; 0x5c
   1a22c:	bl	13f58 <fprintf@plt>
   1a230:	ldr	r1, [pc, #1288]	; 1a740 <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   1a234:	mov	r3, r4
   1a238:	mov	r2, r4
   1a23c:	str	r4, [sp]
   1a240:	str	r4, [sp, #4]
   1a244:	str	r4, [sp, #8]
   1a248:	str	r4, [sp, #12]
   1a24c:	add	r1, pc, r1
   1a250:	str	r4, [sp, #16]
   1a254:	str	r4, [sp, #20]
   1a258:	str	r4, [sp, #24]
   1a25c:	str	r4, [sp, #28]
   1a260:	str	r4, [sp, #32]
   1a264:	str	r4, [sp, #36]	; 0x24
   1a268:	ldr	r0, [r4, #204]	; 0xcc
   1a26c:	bl	13f58 <fprintf@plt>
   1a270:	ldr	r1, [pc, #1228]	; 1a744 <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   1a274:	mov	r3, r4
   1a278:	mov	r2, r4
   1a27c:	str	r4, [sp, #104]	; 0x68
   1a280:	str	r4, [sp, #108]	; 0x6c
   1a284:	str	r4, [sp, #112]	; 0x70
   1a288:	str	r4, [sp, #116]	; 0x74
   1a28c:	add	r1, pc, r1
   1a290:	str	r4, [sp, #120]	; 0x78
   1a294:	str	r4, [sp, #124]	; 0x7c
   1a298:	str	r4, [sp, #128]	; 0x80
   1a29c:	str	r4, [sp, #132]	; 0x84
   1a2a0:	str	r4, [sp, #136]	; 0x88
   1a2a4:	str	r4, [sp, #140]	; 0x8c
   1a2a8:	str	r4, [sp, #144]	; 0x90
   1a2ac:	str	r4, [sp, #148]	; 0x94
   1a2b0:	str	r4, [sp, #152]	; 0x98
   1a2b4:	str	r4, [sp, #156]	; 0x9c
   1a2b8:	str	r4, [sp, #160]	; 0xa0
   1a2bc:	str	r4, [sp, #164]	; 0xa4
   1a2c0:	str	r4, [sp, #168]	; 0xa8
   1a2c4:	str	r4, [sp, #172]	; 0xac
   1a2c8:	str	r4, [sp, #176]	; 0xb0
   1a2cc:	str	r4, [sp, #180]	; 0xb4
   1a2d0:	str	r4, [sp, #184]	; 0xb8
   1a2d4:	str	r4, [sp, #188]	; 0xbc
   1a2d8:	str	r4, [sp, #192]	; 0xc0
   1a2dc:	str	r4, [sp, #196]	; 0xc4
   1a2e0:	str	r4, [sp, #200]	; 0xc8
   1a2e4:	str	r4, [sp, #204]	; 0xcc
   1a2e8:	str	r4, [sp, #208]	; 0xd0
   1a2ec:	str	r4, [sp, #212]	; 0xd4
   1a2f0:	str	r4, [sp, #216]	; 0xd8
   1a2f4:	str	r4, [sp, #220]	; 0xdc
   1a2f8:	str	r4, [sp, #224]	; 0xe0
   1a2fc:	str	r4, [sp, #228]	; 0xe4
   1a300:	str	r4, [sp, #100]	; 0x64
   1a304:	str	r4, [sp]
   1a308:	str	r4, [sp, #4]
   1a30c:	str	r4, [sp, #8]
   1a310:	str	r4, [sp, #12]
   1a314:	str	r4, [sp, #16]
   1a318:	str	r4, [sp, #20]
   1a31c:	ldr	r0, [r4, #204]	; 0xcc
   1a320:	str	r4, [sp, #24]
   1a324:	str	r4, [sp, #28]
   1a328:	str	r4, [sp, #32]
   1a32c:	str	r4, [sp, #36]	; 0x24
   1a330:	str	r4, [sp, #40]	; 0x28
   1a334:	str	r4, [sp, #44]	; 0x2c
   1a338:	str	r4, [sp, #48]	; 0x30
   1a33c:	str	r4, [sp, #52]	; 0x34
   1a340:	str	r4, [sp, #56]	; 0x38
   1a344:	str	r4, [sp, #60]	; 0x3c
   1a348:	str	r4, [sp, #64]	; 0x40
   1a34c:	str	r4, [sp, #68]	; 0x44
   1a350:	str	r4, [sp, #72]	; 0x48
   1a354:	str	r4, [sp, #76]	; 0x4c
   1a358:	str	r4, [sp, #80]	; 0x50
   1a35c:	str	r4, [sp, #84]	; 0x54
   1a360:	str	r4, [sp, #88]	; 0x58
   1a364:	str	r4, [sp, #92]	; 0x5c
   1a368:	str	r4, [sp, #96]	; 0x60
   1a36c:	bl	13f58 <fprintf@plt>
   1a370:	ldr	r3, [r4, #212]	; 0xd4
   1a374:	ldr	r3, [r3, #136]	; 0x88
   1a378:	cmp	r3, #0
   1a37c:	bne	1a574 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   1a380:	ldr	r1, [pc, #960]	; 1a748 <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   1a384:	mov	r3, r4
   1a388:	mov	r2, r4
   1a38c:	ldr	r0, [r4, #204]	; 0xcc
   1a390:	add	r1, pc, r1
   1a394:	bl	13f58 <fprintf@plt>
   1a398:	ldr	r3, [r4, #212]	; 0xd4
   1a39c:	ldr	r3, [r3, #32]
   1a3a0:	cmp	r3, #0
   1a3a4:	bne	1a4f0 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   1a3a8:	mov	r0, #10
   1a3ac:	ldr	r1, [r4, #204]	; 0xcc
   1a3b0:	bl	13fb8 <fputc@plt>
   1a3b4:	ldr	r1, [pc, #912]	; 1a74c <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   1a3b8:	mov	r2, r4
   1a3bc:	ldr	r0, [r4, #204]	; 0xcc
   1a3c0:	add	r1, pc, r1
   1a3c4:	bl	13f58 <fprintf@plt>
   1a3c8:	ldr	r1, [pc, #896]	; 1a750 <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   1a3cc:	mov	r3, r4
   1a3d0:	mov	r2, r4
   1a3d4:	str	r4, [sp]
   1a3d8:	str	r4, [sp, #4]
   1a3dc:	str	r4, [sp, #8]
   1a3e0:	str	r4, [sp, #12]
   1a3e4:	add	r1, pc, r1
   1a3e8:	str	r4, [sp, #16]
   1a3ec:	str	r4, [sp, #20]
   1a3f0:	str	r4, [sp, #24]
   1a3f4:	str	r4, [sp, #28]
   1a3f8:	str	r4, [sp, #32]
   1a3fc:	str	r4, [sp, #36]	; 0x24
   1a400:	str	r4, [sp, #40]	; 0x28
   1a404:	str	r4, [sp, #44]	; 0x2c
   1a408:	ldr	r0, [r4, #204]	; 0xcc
   1a40c:	bl	13f58 <fprintf@plt>
   1a410:	ldr	r1, [pc, #828]	; 1a754 <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   1a414:	mov	r3, r4
   1a418:	mov	r2, r4
   1a41c:	str	r4, [sp]
   1a420:	ldr	r0, [r4, #204]	; 0xcc
   1a424:	add	r1, pc, r1
   1a428:	bl	13f58 <fprintf@plt>
   1a42c:	ldr	r1, [pc, #804]	; 1a758 <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   1a430:	mov	r3, r4
   1a434:	mov	r2, r4
   1a438:	str	r4, [sp]
   1a43c:	str	r4, [sp, #4]
   1a440:	str	r4, [sp, #8]
   1a444:	str	r4, [sp, #12]
   1a448:	add	r1, pc, r1
   1a44c:	ldr	r0, [r4, #204]	; 0xcc
   1a450:	bl	13f58 <fprintf@plt>
   1a454:	ldr	r1, [pc, #768]	; 1a75c <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   1a458:	mov	r3, r4
   1a45c:	mov	r2, r4
   1a460:	str	r4, [sp]
   1a464:	str	r4, [sp, #4]
   1a468:	ldr	r0, [r4, #204]	; 0xcc
   1a46c:	add	r1, pc, r1
   1a470:	bl	13f58 <fprintf@plt>
   1a474:	ldr	r1, [pc, #740]	; 1a760 <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   1a478:	mov	r3, r4
   1a47c:	mov	r2, r4
   1a480:	str	r4, [sp]
   1a484:	str	r4, [sp, #4]
   1a488:	str	r4, [sp, #8]
   1a48c:	str	r4, [sp, #12]
   1a490:	add	r1, pc, r1
   1a494:	str	r4, [sp, #16]
   1a498:	str	r4, [sp, #20]
   1a49c:	str	r4, [sp, #24]
   1a4a0:	str	r4, [sp, #28]
   1a4a4:	ldr	r0, [r4, #204]	; 0xcc
   1a4a8:	bl	13f58 <fprintf@plt>
   1a4ac:	mov	r0, #10
   1a4b0:	ldr	r1, [r4, #204]	; 0xcc
   1a4b4:	bl	13fb8 <fputc@plt>
   1a4b8:	ldr	r0, [r4, #204]	; 0xcc
   1a4bc:	ldr	r3, [r4, #212]	; 0xd4
   1a4c0:	ldr	r3, [r3, #140]	; 0x8c
   1a4c4:	cmp	r3, #0
   1a4c8:	bne	1a554 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   1a4cc:	ldr	r1, [pc, #656]	; 1a764 <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   1a4d0:	mov	r2, r5
   1a4d4:	add	r1, pc, r1
   1a4d8:	bl	13f58 <fprintf@plt>
   1a4dc:	mov	r0, #0
   1a4e0:	add	sp, sp, #236	; 0xec
   1a4e4:	ldrd	r4, [sp]
   1a4e8:	add	sp, sp, #8
   1a4ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4f0:	ldr	r1, [pc, #624]	; 1a768 <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   1a4f4:	mov	r2, r4
   1a4f8:	ldr	r0, [r4, #204]	; 0xcc
   1a4fc:	add	r1, pc, r1
   1a500:	bl	13f58 <fprintf@plt>
   1a504:	b	1a3b4 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   1a508:	mov	r0, #10
   1a50c:	ldr	r1, [r4, #204]	; 0xcc
   1a510:	bl	13fb8 <fputc@plt>
   1a514:	b	19c24 <__flatcc_fb_gen_common_c_header@@Base+0x244>
   1a518:	ldr	r0, [pc, #588]	; 1a76c <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   1a51c:	mov	r2, #20
   1a520:	mov	r1, #1
   1a524:	ldr	r3, [r4, #204]	; 0xcc
   1a528:	add	r0, pc, r0
   1a52c:	bl	13eec <fwrite@plt>
   1a530:	b	1a148 <__flatcc_fb_gen_common_c_header@@Base+0x768>
   1a534:	mov	r0, #10
   1a538:	ldr	r1, [r4, #204]	; 0xcc
   1a53c:	bl	13fb8 <fputc@plt>
   1a540:	b	1a190 <__flatcc_fb_gen_common_c_header@@Base+0x7b0>
   1a544:	mov	r0, #10
   1a548:	ldr	r1, [r4, #204]	; 0xcc
   1a54c:	bl	13fb8 <fputc@plt>
   1a550:	b	19b28 <__flatcc_fb_gen_common_c_header@@Base+0x148>
   1a554:	mov	r3, r0
   1a558:	ldr	r0, [pc, #528]	; 1a770 <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   1a55c:	mov	r2, #36	; 0x24
   1a560:	mov	r1, #1
   1a564:	add	r0, pc, r0
   1a568:	bl	13eec <fwrite@plt>
   1a56c:	ldr	r0, [r4, #204]	; 0xcc
   1a570:	b	1a4cc <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   1a574:	ldr	r1, [pc, #504]	; 1a774 <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   1a578:	mov	r2, r4
   1a57c:	ldr	r0, [r4, #204]	; 0xcc
   1a580:	add	r1, pc, r1
   1a584:	bl	13f58 <fprintf@plt>
   1a588:	b	1a380 <__flatcc_fb_gen_common_c_header@@Base+0x9a0>
   1a58c:	ldr	r1, [pc, #484]	; 1a778 <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   1a590:	mov	r3, r4
   1a594:	mov	r2, r4
   1a598:	str	r4, [sp]
   1a59c:	str	r4, [sp, #4]
   1a5a0:	str	r4, [sp, #8]
   1a5a4:	ldr	r0, [r4, #204]	; 0xcc
   1a5a8:	add	r1, pc, r1
   1a5ac:	bl	13f58 <fprintf@plt>
   1a5b0:	ldr	r2, [pc, #452]	; 1a77c <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   1a5b4:	mov	r3, r4
   1a5b8:	str	r4, [sp]
   1a5bc:	ldr	r1, [pc, #444]	; 1a780 <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   1a5c0:	str	r4, [sp, #4]
   1a5c4:	ldr	r0, [r4, #204]	; 0xcc
   1a5c8:	add	r2, pc, r2
   1a5cc:	add	r1, pc, r1
   1a5d0:	bl	13f58 <fprintf@plt>
   1a5d4:	ldr	r1, [pc, #424]	; 1a784 <__flatcc_fb_gen_common_c_header@@Base+0xda4>
   1a5d8:	mov	r3, r4
   1a5dc:	mov	r2, r4
   1a5e0:	str	r4, [sp]
   1a5e4:	str	r4, [sp, #4]
   1a5e8:	str	r4, [sp, #8]
   1a5ec:	ldr	r0, [r4, #204]	; 0xcc
   1a5f0:	add	r1, pc, r1
   1a5f4:	bl	13f58 <fprintf@plt>
   1a5f8:	ldr	r1, [pc, #392]	; 1a788 <__flatcc_fb_gen_common_c_header@@Base+0xda8>
   1a5fc:	mov	r3, r5
   1a600:	mov	r2, r5
   1a604:	ldr	r0, [r4, #204]	; 0xcc
   1a608:	add	r1, pc, r1
   1a60c:	bl	13f58 <fprintf@plt>
   1a610:	b	19a88 <__flatcc_fb_gen_common_c_header@@Base+0xa8>
   1a614:	ldr	r0, [pc, #368]	; 1a78c <__flatcc_fb_gen_common_c_header@@Base+0xdac>
   1a618:	mov	r2, #36	; 0x24
   1a61c:	mov	r1, #1
   1a620:	add	r0, pc, r0
   1a624:	bl	13eec <fwrite@plt>
   1a628:	ldr	r3, [r4, #204]	; 0xcc
   1a62c:	b	19a5c <__flatcc_fb_gen_common_c_header@@Base+0x7c>
   1a630:	ldr	r0, [pc, #344]	; 1a790 <__flatcc_fb_gen_common_c_header@@Base+0xdb0>
   1a634:	mov	r2, #135	; 0x87
   1a638:	mov	r1, #1
   1a63c:	ldr	r3, [r4, #204]	; 0xcc
   1a640:	add	r0, pc, r0
   1a644:	bl	13eec <fwrite@plt>
   1a648:	ldr	r3, [r4, #212]	; 0xd4
   1a64c:	b	19a4c <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   1a650:	muleq	r2, r8, r2
   1a654:			; <UNDEFINED> instruction: 0x000282b8
   1a658:	strdeq	r8, [r2], -r4
   1a65c:	andeq	r8, r2, r8, lsr #7
   1a660:	andeq	r8, r2, r4, asr #7
   1a664:	muleq	r2, r4, r8
   1a668:	andeq	r8, r2, r0, lsl #18
   1a66c:	andeq	r8, r2, r4, asr sl
   1a670:	andeq	r8, r2, ip, lsl #21
   1a674:	muleq	r2, r0, fp
   1a678:	andeq	r8, r2, r8, lsr #23
   1a67c:	andeq	r8, r2, r8, asr ip
   1a680:	andeq	r8, r2, r0, ror #27
   1a684:	andeq	r8, r2, r4, ror #28
   1a688:	andeq	r8, r2, r4, lsr #30
   1a68c:	andeq	r8, r2, r4, ror #31
   1a690:	muleq	r2, r8, r0
   1a694:	andeq	r9, r2, ip, asr r1
   1a698:	andeq	r9, r2, r8, ror #2
   1a69c:	strdeq	r9, [r2], -r0
   1a6a0:	andeq	r9, r2, r8, lsl r2
   1a6a4:	andeq	r9, r2, ip, lsl #5
   1a6a8:	andeq	r9, r2, r0, ror #5
   1a6ac:	andeq	r9, r2, r8, ror #7
   1a6b0:	andeq	r9, r2, r8, asr #8
   1a6b4:	andeq	r9, r2, r8, lsr #9
   1a6b8:	andeq	r9, r2, r8, ror #9
   1a6bc:	ldrdeq	r9, [r2], -ip
   1a6c0:	andeq	r9, r2, r0, ror #11
   1a6c4:	andeq	r9, r2, r4, asr #12
   1a6c8:	andeq	r9, r2, r0, lsr #15
   1a6cc:	andeq	r9, r2, r8, lsr r8
   1a6d0:			; <UNDEFINED> instruction: 0x000298b4
   1a6d4:	andeq	r9, r2, r8, lsl r9
   1a6d8:	ldrdeq	r9, [r2], -r8
   1a6dc:	andeq	r9, r2, r8, asr lr
   1a6e0:	andeq	r9, r2, r8, asr #29
   1a6e4:	andeq	r9, r2, r4, lsr #30
   1a6e8:	andeq	sl, r2, r8, ror #1
   1a6ec:	andeq	sl, r2, r0, ror r1
   1a6f0:	andeq	sl, r2, ip, lsr #6
   1a6f4:	andeq	sl, r2, r4, lsr #10
   1a6f8:	andeq	sl, r2, ip, asr #12
   1a6fc:	andeq	sl, r2, r0, lsl #14
   1a700:	muleq	r2, ip, r7
   1a704:	andeq	sl, r2, r0, asr #18
   1a708:	ldrdeq	sl, [r2], -r8
   1a70c:	strdeq	sl, [r2], -r0
   1a710:	andeq	sl, r2, r8, lsr #24
   1a714:	ldrdeq	sl, [r2], -r8
   1a718:	andeq	sl, r2, r8, lsl lr
   1a71c:	andeq	sl, r2, r0, ror #30
   1a720:	andeq	fp, r2, ip, lsl #5
   1a724:	andeq	fp, r2, r0, ror r5
   1a728:	andeq	fp, r2, r8, lsl #24
   1a72c:	andeq	fp, r2, r4, asr #28
   1a730:	andeq	ip, r2, r4, ror #5
   1a734:	andeq	ip, r2, r4, lsr #7
   1a738:	muleq	r2, ip, r3
   1a73c:	strdeq	ip, [r2], -r8
   1a740:	muleq	r2, r4, r5
   1a744:	andeq	ip, r2, r0, lsr #13
   1a748:	andeq	ip, r2, r4, ror ip
   1a74c:	andeq	ip, r2, r0, ror #25
   1a750:	andeq	ip, r2, ip, lsr sp
   1a754:	andeq	sp, r2, r8, asr #32
   1a758:	ldrdeq	sp, [r2], -ip
   1a75c:	andeq	sp, r2, r0, lsl #5
   1a760:	ldrdeq	sp, [r2], -r8
   1a764:	andeq	sp, r2, r0, lsr #15
   1a768:			; <UNDEFINED> instruction: 0x000281b4
   1a76c:	andeq	fp, r2, r8, lsl #30
   1a770:	andeq	sp, r2, r8, ror #13
   1a774:	andeq	ip, r2, r8, ror #20
   1a778:	andeq	r7, r2, r4, lsr #17
   1a77c:	andeq	r7, r2, r0, ror r8
   1a780:	andeq	r7, r2, r0, asr r9
   1a784:	andeq	r7, r2, r4, lsl #21
   1a788:	ldrdeq	r7, [r2], -r4
   1a78c:	andeq	r7, r2, r8, asr #15
   1a790:	andeq	r7, r2, r0, lsr #14

0001a794 <__flatcc_fb_gen_c_reader@@Base>:
   1a794:	ldr	r3, [r0, #208]	; 0xd0
   1a798:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a79c:	mov	r5, r0
   1a7a0:	ldr	r1, [pc, #1352]	; 1acf0 <__flatcc_fb_gen_c_reader@@Base+0x55c>
   1a7a4:	ldr	r2, [r0, #212]	; 0xd4
   1a7a8:	ldr	r3, [r3, #164]	; 0xa4
   1a7ac:	add	r1, pc, r1
   1a7b0:	ldr	r4, [r2, #132]	; 0x84
   1a7b4:	strd	r6, [sp, #8]
   1a7b8:	add	r6, r0, #102	; 0x66
   1a7bc:	mov	r2, r3
   1a7c0:	strd	r8, [sp, #16]
   1a7c4:	strd	sl, [sp, #24]
   1a7c8:	str	lr, [sp, #32]
   1a7cc:	sub	sp, sp, #252	; 0xfc
   1a7d0:	ldr	r0, [r0, #204]	; 0xcc
   1a7d4:	bl	13f58 <fprintf@plt>
   1a7d8:	ldr	r0, [pc, #1300]	; 1acf4 <__flatcc_fb_gen_c_reader@@Base+0x560>
   1a7dc:	mov	r2, #81	; 0x51
   1a7e0:	mov	r1, #1
   1a7e4:	ldr	sl, [pc, #1292]	; 1acf8 <__flatcc_fb_gen_c_reader@@Base+0x564>
   1a7e8:	ldr	r3, [r5, #204]	; 0xcc
   1a7ec:	add	r0, pc, r0
   1a7f0:	bl	13eec <fwrite@plt>
   1a7f4:	cmp	r4, #0
   1a7f8:	add	sl, pc, sl
   1a7fc:	bne	1ac18 <__flatcc_fb_gen_c_reader@@Base+0x484>
   1a800:	ldr	r1, [pc, #1268]	; 1acfc <__flatcc_fb_gen_c_reader@@Base+0x568>
   1a804:	mov	r3, r5
   1a808:	mov	r2, r6
   1a80c:	ldr	r0, [r5, #204]	; 0xcc
   1a810:	add	r1, pc, r1
   1a814:	bl	13f58 <fprintf@plt>
   1a818:	ldr	r2, [pc, #1248]	; 1ad00 <__flatcc_fb_gen_c_reader@@Base+0x56c>
   1a81c:	mov	r0, r5
   1a820:	ldr	r1, [pc, #1244]	; 1ad04 <__flatcc_fb_gen_c_reader@@Base+0x570>
   1a824:	add	r2, pc, r2
   1a828:	add	r1, pc, r1
   1a82c:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   1a830:	ldr	r0, [pc, #1232]	; 1ad08 <__flatcc_fb_gen_c_reader@@Base+0x574>
   1a834:	mov	r2, #39	; 0x27
   1a838:	mov	r1, #1
   1a83c:	ldr	r3, [r5, #204]	; 0xcc
   1a840:	add	r0, pc, r0
   1a844:	bl	13eec <fwrite@plt>
   1a848:	ldr	r0, [pc, #1212]	; 1ad0c <__flatcc_fb_gen_c_reader@@Base+0x578>
   1a84c:	mov	r2, #58	; 0x3a
   1a850:	mov	r1, #1
   1a854:	ldr	r3, [r5, #204]	; 0xcc
   1a858:	add	r0, pc, r0
   1a85c:	bl	13eec <fwrite@plt>
   1a860:	ldr	r0, [r5, #204]	; 0xcc
   1a864:	ldr	r3, [r5, #212]	; 0xd4
   1a868:	ldr	r3, [r3, #140]	; 0x8c
   1a86c:	cmp	r3, #0
   1a870:	bne	1abf8 <__flatcc_fb_gen_c_reader@@Base+0x464>
   1a874:	ldr	ip, [r5, #208]	; 0xd0
   1a878:	ldrh	r3, [ip, #16]
   1a87c:	cmp	r3, #2
   1a880:	beq	1aba8 <__flatcc_fb_gen_c_reader@@Base+0x414>
   1a884:	ldr	r1, [pc, #1156]	; 1ad10 <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1a888:	mov	r3, r5
   1a88c:	mov	r2, r5
   1a890:	add	r1, pc, r1
   1a894:	bl	13f58 <fprintf@plt>
   1a898:	ldr	r0, [r5, #204]	; 0xcc
   1a89c:	ldr	ip, [r5, #208]	; 0xd0
   1a8a0:	ldrh	r3, [ip, #32]
   1a8a4:	cmp	r3, #2
   1a8a8:	beq	1abd0 <__flatcc_fb_gen_c_reader@@Base+0x43c>
   1a8ac:	ldr	ip, [r5, #212]	; 0xd4
   1a8b0:	mov	r3, r5
   1a8b4:	mov	r2, r5
   1a8b8:	ldr	r1, [pc, #1108]	; 1ad14 <__flatcc_fb_gen_c_reader@@Base+0x580>
   1a8bc:	ldr	ip, [ip, #104]	; 0x68
   1a8c0:	add	r1, pc, r1
   1a8c4:	str	ip, [sp]
   1a8c8:	bl	13f58 <fprintf@plt>
   1a8cc:	mov	r0, #10
   1a8d0:	ldr	r1, [r5, #204]	; 0xcc
   1a8d4:	bl	13fb8 <fputc@plt>
   1a8d8:	ldr	r3, [r5, #208]	; 0xd0
   1a8dc:	ldr	r4, [r3, #44]	; 0x2c
   1a8e0:	cmp	r4, #0
   1a8e4:	beq	1a900 <__flatcc_fb_gen_c_reader@@Base+0x16c>
   1a8e8:	mov	r1, r4
   1a8ec:	mov	r0, r5
   1a8f0:	bl	157d8 <__flatcc_fb_codegen_c@@Base+0x210>
   1a8f4:	ldr	r4, [r4, #120]	; 0x78
   1a8f8:	cmp	r4, #0
   1a8fc:	bne	1a8e8 <__flatcc_fb_gen_c_reader@@Base+0x154>
   1a900:	mov	r0, #10
   1a904:	ldr	r1, [r5, #204]	; 0xcc
   1a908:	bl	13fb8 <fputc@plt>
   1a90c:	ldr	r3, [r5, #208]	; 0xd0
   1a910:	ldr	r4, [r3, #40]	; 0x28
   1a914:	cmp	r4, #0
   1a918:	bne	1a92c <__flatcc_fb_gen_c_reader@@Base+0x198>
   1a91c:	b	1aa68 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1a920:	ldr	r4, [r4]
   1a924:	cmp	r4, #0
   1a928:	beq	1a950 <__flatcc_fb_gen_c_reader@@Base+0x1bc>
   1a92c:	ldrh	r3, [r4, #8]
   1a930:	cmp	r3, #0
   1a934:	bne	1a920 <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1a938:	mov	r1, r4
   1a93c:	mov	r0, r5
   1a940:	bl	157d8 <__flatcc_fb_codegen_c@@Base+0x210>
   1a944:	ldr	r4, [r4]
   1a948:	cmp	r4, #0
   1a94c:	bne	1a92c <__flatcc_fb_gen_c_reader@@Base+0x198>
   1a950:	ldr	r3, [r5, #208]	; 0xd0
   1a954:	ldr	r4, [r3, #40]	; 0x28
   1a958:	cmp	r4, #0
   1a95c:	beq	1aa68 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1a960:	ldr	fp, [pc, #944]	; 1ad18 <__flatcc_fb_gen_c_reader@@Base+0x584>
   1a964:	ldr	r9, [pc, #944]	; 1ad1c <__flatcc_fb_gen_c_reader@@Base+0x588>
   1a968:	ldr	r8, [pc, #944]	; 1ad20 <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1a96c:	add	fp, pc, fp
   1a970:	add	r9, pc, r9
   1a974:	add	r8, pc, r8
   1a978:	b	1a988 <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   1a97c:	ldr	r4, [r4]
   1a980:	cmp	r4, #0
   1a984:	beq	1aa68 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1a988:	ldrh	r3, [r4, #8]
   1a98c:	cmp	r3, #1
   1a990:	bhi	1a97c <__flatcc_fb_gen_c_reader@@Base+0x1e8>
   1a994:	add	r7, sp, #28
   1a998:	mov	r2, #220	; 0xdc
   1a99c:	mov	r1, #0
   1a9a0:	mov	r0, r7
   1a9a4:	bl	13f70 <memset@plt>
   1a9a8:	mov	r2, r7
   1a9ac:	mov	r1, r4
   1a9b0:	ldr	r0, [r4, #12]
   1a9b4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1a9b8:	ldr	r6, [r4, #88]	; 0x58
   1a9bc:	mov	r3, r7
   1a9c0:	mov	r2, r7
   1a9c4:	mov	r1, fp
   1a9c8:	str	r5, [sp]
   1a9cc:	ldr	r0, [r5, #204]	; 0xcc
   1a9d0:	bl	13f58 <fprintf@plt>
   1a9d4:	mov	r3, r5
   1a9d8:	mov	r2, r7
   1a9dc:	ldr	r0, [r5, #204]	; 0xcc
   1a9e0:	mov	r1, r9
   1a9e4:	str	r6, [sp]
   1a9e8:	bl	13f58 <fprintf@plt>
   1a9ec:	add	r3, sp, #12
   1a9f0:	mov	ip, #92	; 0x5c
   1a9f4:	mov	r0, #120	; 0x78
   1a9f8:	and	r1, r6, #15
   1a9fc:	ubfx	r2, r6, #4, #4
   1aa00:	add	r3, r3, #4
   1aa04:	cmp	r1, #9
   1aa08:	strb	ip, [r3, #-8]
   1aa0c:	lsr	r6, r6, #8
   1aa10:	movhi	lr, #87	; 0x57
   1aa14:	movls	lr, #48	; 0x30
   1aa18:	strb	r0, [r3, #-7]
   1aa1c:	cmp	r2, #9
   1aa20:	add	r1, r1, lr
   1aa24:	movhi	lr, #87	; 0x57
   1aa28:	movls	lr, #48	; 0x30
   1aa2c:	add	r2, r2, lr
   1aa30:	strb	r2, [r3, #-6]
   1aa34:	strb	r1, [r3, #-5]
   1aa38:	cmp	r7, r3
   1aa3c:	bne	1a9f8 <__flatcc_fb_gen_c_reader@@Base+0x264>
   1aa40:	mov	ip, #0
   1aa44:	mov	r2, r7
   1aa48:	ldr	r0, [r5, #204]	; 0xcc
   1aa4c:	add	r3, sp, #8
   1aa50:	mov	r1, r8
   1aa54:	strb	ip, [sp, #24]
   1aa58:	bl	13f58 <fprintf@plt>
   1aa5c:	ldr	r4, [r4]
   1aa60:	cmp	r4, #0
   1aa64:	bne	1a988 <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   1aa68:	mov	r0, #10
   1aa6c:	ldr	r1, [r5, #204]	; 0xcc
   1aa70:	bl	13fb8 <fputc@plt>
   1aa74:	ldr	r3, [r5, #208]	; 0xd0
   1aa78:	ldr	r4, [r3, #40]	; 0x28
   1aa7c:	cmp	r4, #0
   1aa80:	bne	1aa94 <__flatcc_fb_gen_c_reader@@Base+0x300>
   1aa84:	b	1aab8 <__flatcc_fb_gen_c_reader@@Base+0x324>
   1aa88:	ldr	r4, [r4]
   1aa8c:	cmp	r4, #0
   1aa90:	beq	1aab8 <__flatcc_fb_gen_c_reader@@Base+0x324>
   1aa94:	ldrh	r3, [r4, #8]
   1aa98:	cmp	r3, #3
   1aa9c:	bne	1aa88 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1aaa0:	mov	r1, r4
   1aaa4:	mov	r0, r5
   1aaa8:	bl	17d64 <__flatcc_fb_codegen_c@@Base+0x279c>
   1aaac:	ldr	r4, [r4]
   1aab0:	cmp	r4, #0
   1aab4:	bne	1aa94 <__flatcc_fb_gen_c_reader@@Base+0x300>
   1aab8:	mov	r0, #10
   1aabc:	ldr	r1, [r5, #204]	; 0xcc
   1aac0:	bl	13fb8 <fputc@plt>
   1aac4:	ldr	r3, [r5, #208]	; 0xd0
   1aac8:	ldr	r4, [r3, #44]	; 0x2c
   1aacc:	cmp	r4, #0
   1aad0:	beq	1aaf0 <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1aad4:	mov	r1, r4
   1aad8:	mov	r0, r5
   1aadc:	bl	18a10 <__flatcc_fb_codegen_c@@Base+0x3448>
   1aae0:	ldr	r4, [r4, #120]	; 0x78
   1aae4:	cmp	r4, #0
   1aae8:	bne	1aad4 <__flatcc_fb_gen_c_reader@@Base+0x340>
   1aaec:	ldr	r3, [r5, #208]	; 0xd0
   1aaf0:	ldr	r4, [r3, #40]	; 0x28
   1aaf4:	cmp	r4, #0
   1aaf8:	beq	1ab38 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   1aafc:	ldrh	r3, [r4, #8]
   1ab00:	cmp	r3, #4
   1ab04:	addls	pc, pc, r3, lsl #2
   1ab08:	b	1ac9c <__flatcc_fb_gen_c_reader@@Base+0x508>
   1ab0c:	b	1ab8c <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   1ab10:	b	1ab2c <__flatcc_fb_gen_c_reader@@Base+0x398>
   1ab14:	b	1ab2c <__flatcc_fb_gen_c_reader@@Base+0x398>
   1ab18:	b	1ab2c <__flatcc_fb_gen_c_reader@@Base+0x398>
   1ab1c:	b	1ab20 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1ab20:	mov	r1, r4
   1ab24:	mov	r0, r5
   1ab28:	bl	17d64 <__flatcc_fb_codegen_c@@Base+0x279c>
   1ab2c:	ldr	r4, [r4]
   1ab30:	cmp	r4, #0
   1ab34:	bne	1aafc <__flatcc_fb_gen_c_reader@@Base+0x368>
   1ab38:	mov	r0, #10
   1ab3c:	ldr	r1, [r5, #204]	; 0xcc
   1ab40:	bl	13fb8 <fputc@plt>
   1ab44:	ldr	r0, [r5, #204]	; 0xcc
   1ab48:	ldr	r3, [r5, #212]	; 0xd4
   1ab4c:	ldr	r3, [r3, #140]	; 0x8c
   1ab50:	cmp	r3, #0
   1ab54:	bne	1ac7c <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   1ab58:	ldr	r3, [r5, #208]	; 0xd0
   1ab5c:	ldr	r1, [pc, #448]	; 1ad24 <__flatcc_fb_gen_c_reader@@Base+0x590>
   1ab60:	ldr	r2, [r3, #164]	; 0xa4
   1ab64:	add	r1, pc, r1
   1ab68:	bl	13f58 <fprintf@plt>
   1ab6c:	mov	r0, #0
   1ab70:	add	sp, sp, #252	; 0xfc
   1ab74:	ldrd	r4, [sp]
   1ab78:	ldrd	r6, [sp, #8]
   1ab7c:	ldrd	r8, [sp, #16]
   1ab80:	ldrd	sl, [sp, #24]
   1ab84:	add	sp, sp, #32
   1ab88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab8c:	mov	r1, r4
   1ab90:	mov	r0, r5
   1ab94:	bl	15af4 <__flatcc_fb_codegen_c@@Base+0x52c>
   1ab98:	ldr	r4, [r4]
   1ab9c:	cmp	r4, #0
   1aba0:	bne	1aafc <__flatcc_fb_gen_c_reader@@Base+0x368>
   1aba4:	b	1ab38 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   1aba8:	ldr	lr, [ip, #8]
   1abac:	mov	r3, r5
   1abb0:	mov	r2, r5
   1abb4:	ldr	r1, [pc, #364]	; 1ad28 <__flatcc_fb_gen_c_reader@@Base+0x594>
   1abb8:	str	lr, [sp, #4]
   1abbc:	ldr	ip, [ip, #12]
   1abc0:	add	r1, pc, r1
   1abc4:	str	ip, [sp]
   1abc8:	bl	13f58 <fprintf@plt>
   1abcc:	b	1a898 <__flatcc_fb_gen_c_reader@@Base+0x104>
   1abd0:	ldr	lr, [ip, #24]
   1abd4:	mov	r3, r5
   1abd8:	mov	r2, r5
   1abdc:	ldr	r1, [pc, #328]	; 1ad2c <__flatcc_fb_gen_c_reader@@Base+0x598>
   1abe0:	str	lr, [sp, #4]
   1abe4:	ldr	ip, [ip, #28]
   1abe8:	add	r1, pc, r1
   1abec:	str	ip, [sp]
   1abf0:	bl	13f58 <fprintf@plt>
   1abf4:	b	1a8cc <__flatcc_fb_gen_c_reader@@Base+0x138>
   1abf8:	mov	r3, r0
   1abfc:	ldr	r0, [pc, #300]	; 1ad30 <__flatcc_fb_gen_c_reader@@Base+0x59c>
   1ac00:	mov	r2, #36	; 0x24
   1ac04:	mov	r1, #1
   1ac08:	add	r0, pc, r0
   1ac0c:	bl	13eec <fwrite@plt>
   1ac10:	ldr	r0, [r5, #204]	; 0xcc
   1ac14:	b	1a874 <__flatcc_fb_gen_c_reader@@Base+0xe0>
   1ac18:	ldr	r0, [pc, #276]	; 1ad34 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   1ac1c:	movw	r2, #443	; 0x1bb
   1ac20:	mov	r1, #1
   1ac24:	ldr	r3, [r5, #204]	; 0xcc
   1ac28:	add	r0, pc, r0
   1ac2c:	bl	13eec <fwrite@plt>
   1ac30:	ldr	r1, [pc, #256]	; 1ad38 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1ac34:	mov	r3, r5
   1ac38:	mov	r2, r6
   1ac3c:	ldr	r0, [r5, #204]	; 0xcc
   1ac40:	add	r1, pc, r1
   1ac44:	bl	13f58 <fprintf@plt>
   1ac48:	ldr	r2, [pc, #236]	; 1ad3c <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   1ac4c:	mov	r0, r5
   1ac50:	ldr	r1, [pc, #232]	; 1ad40 <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   1ac54:	add	r2, pc, r2
   1ac58:	add	r1, pc, r1
   1ac5c:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   1ac60:	ldr	r0, [pc, #220]	; 1ad44 <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   1ac64:	mov	r2, #39	; 0x27
   1ac68:	mov	r1, #1
   1ac6c:	ldr	r3, [r5, #204]	; 0xcc
   1ac70:	add	r0, pc, r0
   1ac74:	bl	13eec <fwrite@plt>
   1ac78:	b	1a860 <__flatcc_fb_gen_c_reader@@Base+0xcc>
   1ac7c:	mov	r3, r0
   1ac80:	ldr	r0, [pc, #192]	; 1ad48 <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   1ac84:	mov	r2, #36	; 0x24
   1ac88:	mov	r1, #1
   1ac8c:	add	r0, pc, r0
   1ac90:	bl	13eec <fwrite@plt>
   1ac94:	ldr	r0, [r5, #204]	; 0xcc
   1ac98:	b	1ab58 <__flatcc_fb_gen_c_reader@@Base+0x3c4>
   1ac9c:	ldr	r2, [pc, #168]	; 1ad4c <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1aca0:	movw	r3, #1672	; 0x688
   1aca4:	ldr	r0, [pc, #164]	; 1ad50 <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   1aca8:	ldr	r4, [pc, #164]	; 1ad54 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1acac:	ldr	r1, [pc, #164]	; 1ad58 <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   1acb0:	add	r0, pc, r0
   1acb4:	ldr	ip, [sl, r2]
   1acb8:	add	r4, pc, r4
   1acbc:	str	r0, [sp]
   1acc0:	mov	r2, r4
   1acc4:	add	r1, pc, r1
   1acc8:	ldr	r0, [ip]
   1accc:	bl	13f58 <fprintf@plt>
   1acd0:	ldr	r3, [pc, #132]	; 1ad5c <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   1acd4:	mov	r1, r4
   1acd8:	movw	r2, #1672	; 0x688
   1acdc:	ldr	r0, [pc, #124]	; 1ad60 <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   1ace0:	add	r3, pc, r3
   1ace4:	add	r3, r3, #164	; 0xa4
   1ace8:	add	r0, pc, r0
   1acec:	bl	1400c <__assert_fail@plt>
   1acf0:	andeq	sp, r2, r4, ror #9
   1acf4:	andeq	r7, r2, r8, ror #9
   1acf8:	andeq	r0, r5, r0, lsl #16
   1acfc:	andeq	sp, r2, r8, ror #12
   1ad00:	muleq	r2, r4, r6
   1ad04:	andeq	r5, r2, r4, lsl fp
   1ad08:	andeq	sp, r2, r4, lsl #13
   1ad0c:	andeq	sp, r2, r0, asr #16
   1ad10:	muleq	r2, r0, r6
   1ad14:	andeq	sp, r2, r4, asr #13
   1ad18:	andeq	sp, r2, r0, asr r6
   1ad1c:	muleq	r2, r0, r6
   1ad20:			; <UNDEFINED> instruction: 0x0002d6b8
   1ad24:	andeq	sp, r2, r8, lsl r5
   1ad28:	andeq	sp, r2, ip, lsr #6
   1ad2c:	andeq	sp, r2, ip, ror #6
   1ad30:	andeq	r7, r2, r0, ror #3
   1ad34:	muleq	r2, r4, r0
   1ad38:	andeq	sp, r2, r8, lsr r2
   1ad3c:	andeq	sp, r2, r4, ror #4
   1ad40:	andeq	r5, r2, r4, ror #13
   1ad44:	andeq	sp, r2, r4, asr r2
   1ad48:	andeq	ip, r2, r0, asr #31
   1ad4c:	muleq	r0, ip, r0
   1ad50:	andeq	sp, r2, r0, lsr #7
   1ad54:	andeq	r5, r2, r8, lsr #19
   1ad58:	strdeq	r5, [r2], -r4
   1ad5c:	andeq	r5, r2, r0, asr #17
   1ad60:	strdeq	lr, [r2], -r4

0001ad64 <__flatcc_gen_sort@@Base>:
   1ad64:	ldr	r1, [pc, #304]	; 1ae9c <__flatcc_gen_sort@@Base+0x138>
   1ad68:	mov	r2, r0
   1ad6c:	str	r4, [sp, #-8]!
   1ad70:	mov	r4, r0
   1ad74:	ldr	r0, [r0, #204]	; 0xcc
   1ad78:	str	lr, [sp, #4]
   1ad7c:	sub	sp, sp, #24
   1ad80:	add	r1, pc, r1
   1ad84:	bl	13f58 <fprintf@plt>
   1ad88:	ldr	r1, [pc, #272]	; 1aea0 <__flatcc_gen_sort@@Base+0x13c>
   1ad8c:	mov	r3, r4
   1ad90:	mov	r2, r4
   1ad94:	ldr	r0, [r4, #204]	; 0xcc
   1ad98:	add	r1, pc, r1
   1ad9c:	bl	13f58 <fprintf@plt>
   1ada0:	ldr	r1, [pc, #252]	; 1aea4 <__flatcc_gen_sort@@Base+0x140>
   1ada4:	mov	r3, r4
   1ada8:	mov	r2, r4
   1adac:	str	r4, [sp]
   1adb0:	ldr	r0, [r4, #204]	; 0xcc
   1adb4:	add	r1, pc, r1
   1adb8:	bl	13f58 <fprintf@plt>
   1adbc:	ldr	r1, [pc, #228]	; 1aea8 <__flatcc_gen_sort@@Base+0x144>
   1adc0:	mov	r3, r4
   1adc4:	mov	r2, r4
   1adc8:	str	r4, [sp]
   1adcc:	str	r4, [sp, #4]
   1add0:	ldr	r0, [r4, #204]	; 0xcc
   1add4:	add	r1, pc, r1
   1add8:	bl	13f58 <fprintf@plt>
   1addc:	ldr	r1, [pc, #200]	; 1aeac <__flatcc_gen_sort@@Base+0x148>
   1ade0:	mov	r3, r4
   1ade4:	mov	r2, r4
   1ade8:	ldr	r0, [r4, #204]	; 0xcc
   1adec:	add	r1, pc, r1
   1adf0:	bl	13f58 <fprintf@plt>
   1adf4:	ldr	r1, [pc, #180]	; 1aeb0 <__flatcc_gen_sort@@Base+0x14c>
   1adf8:	mov	r3, r4
   1adfc:	mov	r2, r4
   1ae00:	str	r4, [sp]
   1ae04:	str	r4, [sp, #4]
   1ae08:	ldr	r0, [r4, #204]	; 0xcc
   1ae0c:	add	r1, pc, r1
   1ae10:	bl	13f58 <fprintf@plt>
   1ae14:	ldr	r1, [pc, #152]	; 1aeb4 <__flatcc_gen_sort@@Base+0x150>
   1ae18:	mov	r3, r4
   1ae1c:	mov	r2, r4
   1ae20:	str	r4, [sp]
   1ae24:	str	r4, [sp, #4]
   1ae28:	str	r4, [sp, #8]
   1ae2c:	str	r4, [sp, #12]
   1ae30:	add	r1, pc, r1
   1ae34:	ldr	r0, [r4, #204]	; 0xcc
   1ae38:	bl	13f58 <fprintf@plt>
   1ae3c:	ldr	r1, [pc, #116]	; 1aeb8 <__flatcc_gen_sort@@Base+0x154>
   1ae40:	mov	r3, r4
   1ae44:	mov	r2, r4
   1ae48:	str	r4, [sp]
   1ae4c:	str	r4, [sp, #4]
   1ae50:	ldr	r0, [r4, #204]	; 0xcc
   1ae54:	add	r1, pc, r1
   1ae58:	bl	13f58 <fprintf@plt>
   1ae5c:	ldr	r1, [pc, #88]	; 1aebc <__flatcc_gen_sort@@Base+0x158>
   1ae60:	mov	r3, r4
   1ae64:	mov	r2, r4
   1ae68:	str	r4, [sp]
   1ae6c:	str	r4, [sp, #4]
   1ae70:	str	r4, [sp, #8]
   1ae74:	str	r4, [sp, #12]
   1ae78:	add	r1, pc, r1
   1ae7c:	str	r4, [sp, #16]
   1ae80:	ldr	r0, [r4, #204]	; 0xcc
   1ae84:	bl	13f58 <fprintf@plt>
   1ae88:	mov	r0, #0
   1ae8c:	add	sp, sp, #24
   1ae90:	ldr	r4, [sp]
   1ae94:	add	sp, sp, #4
   1ae98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae9c:	andeq	sp, r2, r4, asr r3
   1aea0:	andeq	sp, r2, ip, lsl #14
   1aea4:	andeq	sp, r2, r0, lsl #16
   1aea8:			; <UNDEFINED> instruction: 0x0002d8b4
   1aeac:	andeq	sp, r2, r0, lsr r9
   1aeb0:	andeq	sp, r2, r8, lsr #21
   1aeb4:	andeq	sp, r2, ip, lsl #22
   1aeb8:	andeq	sp, r2, r8, ror fp
   1aebc:			; <UNDEFINED> instruction: 0x0002dbb8
   1aec0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1aec4:	mov	r5, r0
   1aec8:	strd	r6, [sp, #8]
   1aecc:	strd	r8, [sp, #16]
   1aed0:	strd	sl, [sp, #24]
   1aed4:	mov	sl, r1
   1aed8:	mov	fp, r2
   1aedc:	str	lr, [sp, #32]
   1aee0:	sub	sp, sp, #500	; 0x1f4
   1aee4:	ldr	r4, [sp, #536]	; 0x218
   1aee8:	str	r3, [sp, #32]
   1aeec:	ldr	r3, [pc, #568]	; 1b12c <__flatcc_gen_sort@@Base+0x3c8>
   1aef0:	ldr	ip, [sp, #540]	; 0x21c
   1aef4:	add	r3, pc, r3
   1aef8:	cmp	ip, #0
   1aefc:	str	r3, [sp, #52]	; 0x34
   1af00:	bne	1b0c8 <__flatcc_gen_sort@@Base+0x364>
   1af04:	ldr	r3, [pc, #548]	; 1b130 <__flatcc_gen_sort@@Base+0x3cc>
   1af08:	add	r3, pc, r3
   1af0c:	str	r3, [sp, #36]	; 0x24
   1af10:	add	r8, sp, #56	; 0x38
   1af14:	mov	r2, #220	; 0xdc
   1af18:	mov	r1, #0
   1af1c:	mov	r0, r8
   1af20:	add	r9, sp, #276	; 0x114
   1af24:	bl	13f70 <memset@plt>
   1af28:	mov	r2, #220	; 0xdc
   1af2c:	mov	r1, #0
   1af30:	mov	r0, r9
   1af34:	bl	13f70 <memset@plt>
   1af38:	mov	r1, r4
   1af3c:	mov	r2, r8
   1af40:	ldr	r0, [r4, #12]
   1af44:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1af48:	ldr	r4, [r4, #20]
   1af4c:	cmp	r4, #0
   1af50:	beq	1b08c <__flatcc_gen_sort@@Base+0x328>
   1af54:	ldr	r3, [pc, #472]	; 1b134 <__flatcc_gen_sort@@Base+0x3d0>
   1af58:	add	r3, pc, r3
   1af5c:	str	r3, [sp, #40]	; 0x28
   1af60:	ldr	r3, [pc, #464]	; 1b138 <__flatcc_gen_sort@@Base+0x3d4>
   1af64:	add	r3, pc, r3
   1af68:	str	r3, [sp, #44]	; 0x2c
   1af6c:	ldr	r3, [pc, #456]	; 1b13c <__flatcc_gen_sort@@Base+0x3d8>
   1af70:	add	r3, pc, r3
   1af74:	str	r3, [sp, #48]	; 0x30
   1af78:	b	1afdc <__flatcc_gen_sort@@Base+0x278>
   1af7c:	ldr	r1, [r4, #16]
   1af80:	mov	r2, r9
   1af84:	ldr	r0, [r1, #12]
   1af88:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1af8c:	ldr	r3, [r4, #16]
   1af90:	ldrh	r3, [r3, #8]
   1af94:	cmp	r3, #0
   1af98:	bne	1b0ac <__flatcc_gen_sort@@Base+0x348>
   1af9c:	ldr	r3, [sp, #36]	; 0x24
   1afa0:	mov	r2, r5
   1afa4:	stm	sp, {r5, sl}
   1afa8:	ldr	r1, [sp, #44]	; 0x2c
   1afac:	str	fp, [sp, #8]
   1afb0:	ldr	r0, [sp, #32]
   1afb4:	str	r0, [sp, #12]
   1afb8:	str	r8, [sp, #16]
   1afbc:	str	r7, [sp, #20]
   1afc0:	str	r6, [sp, #24]
   1afc4:	str	r9, [sp, #28]
   1afc8:	ldr	r0, [r5, #204]	; 0xcc
   1afcc:	bl	13f58 <fprintf@plt>
   1afd0:	ldr	r4, [r4]
   1afd4:	cmp	r4, #0
   1afd8:	beq	1b08c <__flatcc_gen_sort@@Base+0x328>
   1afdc:	ldrh	r3, [r4, #24]
   1afe0:	ldr	r2, [r4, #4]
   1afe4:	cmp	r3, #10
   1afe8:	ldrd	r6, [r2]
   1afec:	beq	1b054 <__flatcc_gen_sort@@Base+0x2f0>
   1aff0:	cmp	r3, #14
   1aff4:	beq	1af7c <__flatcc_gen_sort@@Base+0x218>
   1aff8:	cmp	r3, #0
   1affc:	beq	1afd0 <__flatcc_gen_sort@@Base+0x26c>
   1b000:	ldr	r2, [pc, #312]	; 1b140 <__flatcc_gen_sort@@Base+0x3dc>
   1b004:	movw	r3, #1368	; 0x558
   1b008:	ldr	r1, [sp, #52]	; 0x34
   1b00c:	ldr	r0, [pc, #304]	; 1b144 <__flatcc_gen_sort@@Base+0x3e0>
   1b010:	ldr	r4, [pc, #304]	; 1b148 <__flatcc_gen_sort@@Base+0x3e4>
   1b014:	ldr	ip, [r1, r2]
   1b018:	add	r0, pc, r0
   1b01c:	ldr	r1, [pc, #296]	; 1b14c <__flatcc_gen_sort@@Base+0x3e8>
   1b020:	add	r4, pc, r4
   1b024:	str	r0, [sp]
   1b028:	mov	r2, r4
   1b02c:	ldr	r0, [ip]
   1b030:	add	r1, pc, r1
   1b034:	bl	13f58 <fprintf@plt>
   1b038:	ldr	r3, [pc, #272]	; 1b150 <__flatcc_gen_sort@@Base+0x3ec>
   1b03c:	mov	r1, r4
   1b040:	movw	r2, #1368	; 0x558
   1b044:	ldr	r0, [pc, #264]	; 1b154 <__flatcc_gen_sort@@Base+0x3f0>
   1b048:	add	r3, pc, r3
   1b04c:	add	r0, pc, r0
   1b050:	bl	1400c <__assert_fail@plt>
   1b054:	ldr	r0, [sp, #32]
   1b058:	mov	r2, r5
   1b05c:	stm	sp, {r5, sl, fp}
   1b060:	ldr	r3, [sp, #36]	; 0x24
   1b064:	str	r0, [sp, #12]
   1b068:	str	r8, [sp, #16]
   1b06c:	str	r7, [sp, #20]
   1b070:	str	r6, [sp, #24]
   1b074:	ldr	r1, [sp, #40]	; 0x28
   1b078:	ldr	r0, [r5, #204]	; 0xcc
   1b07c:	bl	13f58 <fprintf@plt>
   1b080:	ldr	r4, [r4]
   1b084:	cmp	r4, #0
   1b088:	bne	1afdc <__flatcc_gen_sort@@Base+0x278>
   1b08c:	mov	r0, #0
   1b090:	add	sp, sp, #500	; 0x1f4
   1b094:	ldrd	r4, [sp]
   1b098:	ldrd	r6, [sp, #8]
   1b09c:	ldrd	r8, [sp, #16]
   1b0a0:	ldrd	sl, [sp, #24]
   1b0a4:	add	sp, sp, #32
   1b0a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0ac:	cmp	r3, #1
   1b0b0:	bne	1b0d8 <__flatcc_gen_sort@@Base+0x374>
   1b0b4:	mov	r2, r5
   1b0b8:	stm	sp, {r5, sl}
   1b0bc:	ldr	r3, [sp, #36]	; 0x24
   1b0c0:	ldr	r1, [sp, #48]	; 0x30
   1b0c4:	b	1afac <__flatcc_gen_sort@@Base+0x248>
   1b0c8:	ldr	r3, [pc, #136]	; 1b158 <__flatcc_gen_sort@@Base+0x3f4>
   1b0cc:	add	r3, pc, r3
   1b0d0:	str	r3, [sp, #36]	; 0x24
   1b0d4:	b	1af10 <__flatcc_gen_sort@@Base+0x1ac>
   1b0d8:	ldr	r2, [pc, #96]	; 1b140 <__flatcc_gen_sort@@Base+0x3dc>
   1b0dc:	movw	r3, #1358	; 0x54e
   1b0e0:	ldr	r1, [sp, #52]	; 0x34
   1b0e4:	ldr	r0, [pc, #112]	; 1b15c <__flatcc_gen_sort@@Base+0x3f8>
   1b0e8:	ldr	r4, [pc, #112]	; 1b160 <__flatcc_gen_sort@@Base+0x3fc>
   1b0ec:	ldr	ip, [r1, r2]
   1b0f0:	add	r0, pc, r0
   1b0f4:	ldr	r1, [pc, #104]	; 1b164 <__flatcc_gen_sort@@Base+0x400>
   1b0f8:	add	r4, pc, r4
   1b0fc:	str	r0, [sp]
   1b100:	mov	r2, r4
   1b104:	ldr	r0, [ip]
   1b108:	add	r1, pc, r1
   1b10c:	bl	13f58 <fprintf@plt>
   1b110:	ldr	r3, [pc, #80]	; 1b168 <__flatcc_gen_sort@@Base+0x404>
   1b114:	mov	r1, r4
   1b118:	movw	r2, #1358	; 0x54e
   1b11c:	ldr	r0, [pc, #72]	; 1b16c <__flatcc_gen_sort@@Base+0x408>
   1b120:	add	r3, pc, r3
   1b124:	add	r0, pc, r0
   1b128:	bl	1400c <__assert_fail@plt>
   1b12c:	andeq	r0, r5, r4, lsl #2
   1b130:	muleq	r2, r4, ip
   1b134:	andeq	sp, r2, r4, ror #26
   1b138:	andeq	sp, r2, r0, asr #24
   1b13c:	andeq	sp, r2, r0, ror ip
   1b140:	muleq	r0, ip, r0
   1b144:	ldrdeq	sp, [r2], -ip
   1b148:	strdeq	sp, [r2], -ip
   1b14c:	andeq	r5, r2, r8, lsl #17
   1b150:	andeq	sp, r2, r0, ror #20
   1b154:	muleq	r2, r0, sp
   1b158:	andeq	sp, r2, r0, asr #21
   1b15c:	muleq	r2, r4, fp
   1b160:	andeq	sp, r2, r4, lsr #22
   1b164:			; <UNDEFINED> instruction: 0x000257b0
   1b168:	andeq	sp, r2, r8, lsl #19
   1b16c:			; <UNDEFINED> instruction: 0x0002dcb8
   1b170:	strd	r4, [sp, #-16]!
   1b174:	subs	r4, r0, #0
   1b178:	moveq	r5, r4
   1b17c:	str	r6, [sp, #8]
   1b180:	str	lr, [sp, #12]
   1b184:	beq	1b1b4 <__flatcc_gen_sort@@Base+0x450>
   1b188:	mov	r5, #0
   1b18c:	ldrh	r3, [r4, #72]	; 0x48
   1b190:	tst	r3, #4
   1b194:	bne	1b1a8 <__flatcc_gen_sort@@Base+0x444>
   1b198:	ldrh	r3, [r4, #24]
   1b19c:	cmp	r3, #14
   1b1a0:	beq	1b1c8 <__flatcc_gen_sort@@Base+0x464>
   1b1a4:	add	r5, r5, #1
   1b1a8:	ldr	r4, [r4]
   1b1ac:	cmp	r4, #0
   1b1b0:	bne	1b18c <__flatcc_gen_sort@@Base+0x428>
   1b1b4:	mov	r0, r5
   1b1b8:	ldrd	r4, [sp]
   1b1bc:	ldr	r6, [sp, #8]
   1b1c0:	add	sp, sp, #12
   1b1c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1c8:	ldr	r3, [r4, #16]
   1b1cc:	ldrh	r2, [r3, #8]
   1b1d0:	cmp	r2, #1
   1b1d4:	bne	1b1a4 <__flatcc_gen_sort@@Base+0x440>
   1b1d8:	ldr	r0, [r3, #20]
   1b1dc:	bl	1b170 <__flatcc_gen_sort@@Base+0x40c>
   1b1e0:	add	r5, r5, r0
   1b1e4:	b	1b1a8 <__flatcc_gen_sort@@Base+0x444>
   1b1e8:	ldr	r2, [pc, #92]	; 1b24c <__flatcc_gen_sort@@Base+0x4e8>
   1b1ec:	mov	r3, #226	; 0xe2
   1b1f0:	push	{lr}		; (str lr, [sp, #-4]!)
   1b1f4:	sub	sp, sp, #12
   1b1f8:	ldr	r1, [pc, #80]	; 1b250 <__flatcc_gen_sort@@Base+0x4ec>
   1b1fc:	ldr	r0, [pc, #80]	; 1b254 <__flatcc_gen_sort@@Base+0x4f0>
   1b200:	add	r2, pc, r2
   1b204:	ldr	r4, [pc, #76]	; 1b258 <__flatcc_gen_sort@@Base+0x4f4>
   1b208:	ldr	ip, [r2, r1]
   1b20c:	add	r0, pc, r0
   1b210:	ldr	r1, [pc, #68]	; 1b25c <__flatcc_gen_sort@@Base+0x4f8>
   1b214:	add	r4, pc, r4
   1b218:	str	r0, [sp]
   1b21c:	mov	r2, r4
   1b220:	ldr	r0, [ip]
   1b224:	add	r1, pc, r1
   1b228:	bl	13f58 <fprintf@plt>
   1b22c:	ldr	r3, [pc, #44]	; 1b260 <__flatcc_gen_sort@@Base+0x4fc>
   1b230:	mov	r1, r4
   1b234:	mov	r2, #226	; 0xe2
   1b238:	ldr	r0, [pc, #36]	; 1b264 <__flatcc_gen_sort@@Base+0x500>
   1b23c:	add	r3, pc, r3
   1b240:	add	r3, r3, #20
   1b244:	add	r0, pc, r0
   1b248:	bl	1400c <__assert_fail@plt>
   1b24c:	strdeq	pc, [r4], -r8
   1b250:	muleq	r0, ip, r0
   1b254:			; <UNDEFINED> instruction: 0x000256b8
   1b258:	andeq	r5, r2, r4, asr #12
   1b25c:	muleq	r2, r4, r6
   1b260:	andeq	sp, r2, ip, ror #16
   1b264:	muleq	r2, r8, fp
   1b268:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b26c:	mov	r4, r1
   1b270:	mov	r1, #0
   1b274:	strd	r6, [sp, #8]
   1b278:	mov	r6, r0
   1b27c:	strd	r8, [sp, #16]
   1b280:	mov	r8, r3
   1b284:	ldr	r3, [pc, #1744]	; 1b95c <__flatcc_gen_sort@@Base+0xbf8>
   1b288:	strd	sl, [sp, #24]
   1b28c:	str	lr, [sp, #32]
   1b290:	sub	sp, sp, #284	; 0x11c
   1b294:	add	ip, sp, #60	; 0x3c
   1b298:	mov	r0, ip
   1b29c:	add	r3, pc, r3
   1b2a0:	str	ip, [sp, #16]
   1b2a4:	str	r2, [sp, #36]	; 0x24
   1b2a8:	mov	r2, #220	; 0xdc
   1b2ac:	str	r3, [sp, #52]	; 0x34
   1b2b0:	bl	13f70 <memset@plt>
   1b2b4:	cmp	r8, #1
   1b2b8:	beq	1b89c <__flatcc_gen_sort@@Base+0xb38>
   1b2bc:	cmp	r8, #2
   1b2c0:	bne	1b6b8 <__flatcc_gen_sort@@Base+0x954>
   1b2c4:	ldr	r3, [pc, #1684]	; 1b960 <__flatcc_gen_sort@@Base+0xbfc>
   1b2c8:	add	r3, pc, r3
   1b2cc:	str	r3, [sp, #20]
   1b2d0:	ldr	r4, [r4]
   1b2d4:	cmp	r4, #0
   1b2d8:	moveq	r5, r4
   1b2dc:	beq	1b5b4 <__flatcc_gen_sort@@Base+0x850>
   1b2e0:	ldr	r2, [pc, #1660]	; 1b964 <__flatcc_gen_sort@@Base+0xc00>
   1b2e4:	mov	fp, #0
   1b2e8:	mov	r5, fp
   1b2ec:	ldr	r3, [r4, #4]
   1b2f0:	add	r2, pc, r2
   1b2f4:	str	r2, [sp, #28]
   1b2f8:	ldr	r2, [pc, #1640]	; 1b968 <__flatcc_gen_sort@@Base+0xc04>
   1b2fc:	ldr	r9, [r3]
   1b300:	ldr	r7, [r3, #4]
   1b304:	add	r2, pc, r2
   1b308:	str	r2, [sp, #32]
   1b30c:	ldr	r2, [pc, #1624]	; 1b96c <__flatcc_gen_sort@@Base+0xc08>
   1b310:	add	r2, pc, r2
   1b314:	str	r2, [sp, #24]
   1b318:	ldr	r2, [pc, #1616]	; 1b970 <__flatcc_gen_sort@@Base+0xc0c>
   1b31c:	add	r2, pc, r2
   1b320:	str	r2, [sp, #44]	; 0x2c
   1b324:	ldrh	r3, [r4, #24]
   1b328:	cmp	r3, #8
   1b32c:	bne	1b42c <__flatcc_gen_sort@@Base+0x6c8>
   1b330:	ldr	r3, [r4, #16]
   1b334:	sub	r3, r3, #1
   1b338:	cmp	r3, #10
   1b33c:	addls	pc, pc, r3, lsl #2
   1b340:	b	1b904 <__flatcc_gen_sort@@Base+0xba0>
   1b344:	b	1b520 <__flatcc_gen_sort@@Base+0x7bc>
   1b348:	b	1b514 <__flatcc_gen_sort@@Base+0x7b0>
   1b34c:	b	1b508 <__flatcc_gen_sort@@Base+0x7a4>
   1b350:	b	1b4fc <__flatcc_gen_sort@@Base+0x798>
   1b354:	b	1b4f0 <__flatcc_gen_sort@@Base+0x78c>
   1b358:	b	1b4e4 <__flatcc_gen_sort@@Base+0x780>
   1b35c:	b	1b4d8 <__flatcc_gen_sort@@Base+0x774>
   1b360:	b	1b4cc <__flatcc_gen_sort@@Base+0x768>
   1b364:	b	1b4c0 <__flatcc_gen_sort@@Base+0x75c>
   1b368:	b	1b4b4 <__flatcc_gen_sort@@Base+0x750>
   1b36c:	b	1b370 <__flatcc_gen_sort@@Base+0x60c>
   1b370:	ldr	r1, [pc, #1532]	; 1b974 <__flatcc_gen_sort@@Base+0xc10>
   1b374:	add	r1, pc, r1
   1b378:	ldrh	r2, [r4, #72]	; 0x48
   1b37c:	add	sl, r5, #1
   1b380:	ldr	r0, [r6, #204]	; 0xcc
   1b384:	tst	r2, #4
   1b388:	bne	1b650 <__flatcc_gen_sort@@Base+0x8ec>
   1b38c:	ldrd	r2, [r4, #88]	; 0x58
   1b390:	cmp	r3, #0
   1b394:	cmpeq	r2, #1
   1b398:	beq	1b544 <__flatcc_gen_sort@@Base+0x7e0>
   1b39c:	cmp	r8, #1
   1b3a0:	beq	1b66c <__flatcc_gen_sort@@Base+0x908>
   1b3a4:	cmp	r8, #2
   1b3a8:	bne	1b544 <__flatcc_gen_sort@@Base+0x7e0>
   1b3ac:	ldr	r3, [sp, #320]	; 0x140
   1b3b0:	str	r7, [sp]
   1b3b4:	cmp	r3, #0
   1b3b8:	mov	r3, r1
   1b3bc:	beq	1b83c <__flatcc_gen_sort@@Base+0xad8>
   1b3c0:	ldr	r1, [pc, #1456]	; 1b978 <__flatcc_gen_sort@@Base+0xc14>
   1b3c4:	mov	r2, r6
   1b3c8:	str	r9, [sp, #4]
   1b3cc:	str	r7, [sp, #8]
   1b3d0:	str	r9, [sp, #12]
   1b3d4:	add	r1, pc, r1
   1b3d8:	bl	13f58 <fprintf@plt>
   1b3dc:	mov	r5, sl
   1b3e0:	ldr	r4, [r4]
   1b3e4:	cmp	r4, #0
   1b3e8:	beq	1b5b4 <__flatcc_gen_sort@@Base+0x850>
   1b3ec:	ldr	r3, [r4, #4]
   1b3f0:	cmp	r5, #0
   1b3f4:	ldr	r9, [r3]
   1b3f8:	ldr	r7, [r3, #4]
   1b3fc:	ble	1b324 <__flatcc_gen_sort@@Base+0x5c0>
   1b400:	tst	r5, #3
   1b404:	ldr	r3, [r6, #204]	; 0xcc
   1b408:	bne	1b52c <__flatcc_gen_sort@@Base+0x7c8>
   1b40c:	mov	r2, #4
   1b410:	mov	r1, #1
   1b414:	ldr	r0, [pc, #1376]	; 1b97c <__flatcc_gen_sort@@Base+0xc18>
   1b418:	add	r0, pc, r0
   1b41c:	bl	13eec <fwrite@plt>
   1b420:	ldrh	r3, [r4, #24]
   1b424:	cmp	r3, #8
   1b428:	beq	1b330 <__flatcc_gen_sort@@Base+0x5cc>
   1b42c:	cmp	r3, #14
   1b430:	bne	1b8ac <__flatcc_gen_sort@@Base+0xb48>
   1b434:	ldr	r1, [r4, #16]
   1b438:	ldr	r2, [sp, #16]
   1b43c:	ldr	r0, [r1, #12]
   1b440:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1b444:	ldr	r3, [r4, #16]
   1b448:	ldrh	r3, [r3, #8]
   1b44c:	cmp	r3, #1
   1b450:	ldrh	r3, [r4, #72]	; 0x48
   1b454:	beq	1b568 <__flatcc_gen_sort@@Base+0x804>
   1b458:	tst	r3, #4
   1b45c:	add	sl, r5, #1
   1b460:	ldr	r0, [r6, #204]	; 0xcc
   1b464:	bne	1b634 <__flatcc_gen_sort@@Base+0x8d0>
   1b468:	ldrd	r2, [r4, #88]	; 0x58
   1b46c:	cmp	r3, #0
   1b470:	cmpeq	r2, #1
   1b474:	beq	1b5f8 <__flatcc_gen_sort@@Base+0x894>
   1b478:	cmp	r8, #1
   1b47c:	beq	1b7f4 <__flatcc_gen_sort@@Base+0xa90>
   1b480:	cmp	r8, #2
   1b484:	bne	1b5f8 <__flatcc_gen_sort@@Base+0x894>
   1b488:	ldr	r3, [sp, #320]	; 0x140
   1b48c:	str	r9, [sp]
   1b490:	cmp	r3, #0
   1b494:	mov	r3, r7
   1b498:	beq	1b884 <__flatcc_gen_sort@@Base+0xb20>
   1b49c:	ldr	r1, [pc, #1244]	; 1b980 <__flatcc_gen_sort@@Base+0xc1c>
   1b4a0:	stmib	sp, {r7, r9}
   1b4a4:	ldr	r2, [sp, #16]
   1b4a8:	add	r1, pc, r1
   1b4ac:	bl	13f58 <fprintf@plt>
   1b4b0:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b4b4:	ldr	r1, [pc, #1224]	; 1b984 <__flatcc_gen_sort@@Base+0xc20>
   1b4b8:	add	r1, pc, r1
   1b4bc:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4c0:	ldr	r1, [pc, #1216]	; 1b988 <__flatcc_gen_sort@@Base+0xc24>
   1b4c4:	add	r1, pc, r1
   1b4c8:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4cc:	ldr	r1, [pc, #1208]	; 1b98c <__flatcc_gen_sort@@Base+0xc28>
   1b4d0:	add	r1, pc, r1
   1b4d4:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4d8:	ldr	r1, [pc, #1200]	; 1b990 <__flatcc_gen_sort@@Base+0xc2c>
   1b4dc:	add	r1, pc, r1
   1b4e0:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4e4:	ldr	r1, [pc, #1192]	; 1b994 <__flatcc_gen_sort@@Base+0xc30>
   1b4e8:	add	r1, pc, r1
   1b4ec:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4f0:	ldr	r1, [pc, #1184]	; 1b998 <__flatcc_gen_sort@@Base+0xc34>
   1b4f4:	add	r1, pc, r1
   1b4f8:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b4fc:	ldr	r1, [pc, #1176]	; 1b99c <__flatcc_gen_sort@@Base+0xc38>
   1b500:	add	r1, pc, r1
   1b504:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b508:	ldr	r1, [pc, #1168]	; 1b9a0 <__flatcc_gen_sort@@Base+0xc3c>
   1b50c:	add	r1, pc, r1
   1b510:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b514:	ldr	r1, [pc, #1160]	; 1b9a4 <__flatcc_gen_sort@@Base+0xc40>
   1b518:	add	r1, pc, r1
   1b51c:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b520:	ldr	r1, [pc, #1152]	; 1b9a8 <__flatcc_gen_sort@@Base+0xc44>
   1b524:	add	r1, pc, r1
   1b528:	b	1b378 <__flatcc_gen_sort@@Base+0x614>
   1b52c:	ldr	r0, [pc, #1144]	; 1b9ac <__flatcc_gen_sort@@Base+0xc48>
   1b530:	mov	r2, #2
   1b534:	mov	r1, #1
   1b538:	add	r0, pc, r0
   1b53c:	bl	13eec <fwrite@plt>
   1b540:	b	1b324 <__flatcc_gen_sort@@Base+0x5c0>
   1b544:	ldr	r3, [sp, #320]	; 0x140
   1b548:	cmp	r3, #0
   1b54c:	mov	r3, r9
   1b550:	beq	1b620 <__flatcc_gen_sort@@Base+0x8bc>
   1b554:	mov	r2, r7
   1b558:	stm	sp, {r7, r9}
   1b55c:	ldr	r1, [sp, #32]
   1b560:	bl	13f58 <fprintf@plt>
   1b564:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b568:	tst	r3, #4
   1b56c:	ldr	r0, [r6, #204]	; 0xcc
   1b570:	bne	1b7c8 <__flatcc_gen_sort@@Base+0xa64>
   1b574:	ldr	r3, [sp, #320]	; 0x140
   1b578:	str	r7, [sp]
   1b57c:	cmp	r3, #0
   1b580:	ldr	r3, [sp, #20]
   1b584:	beq	1b6c8 <__flatcc_gen_sort@@Base+0x964>
   1b588:	ldr	r1, [pc, #1056]	; 1b9b0 <__flatcc_gen_sort@@Base+0xc4c>
   1b58c:	add	r5, r5, #1
   1b590:	str	r9, [sp, #4]
   1b594:	str	r7, [sp, #8]
   1b598:	str	r9, [sp, #12]
   1b59c:	ldr	r2, [sp, #16]
   1b5a0:	add	r1, pc, r1
   1b5a4:	bl	13f58 <fprintf@plt>
   1b5a8:	ldr	r4, [r4]
   1b5ac:	cmp	r4, #0
   1b5b0:	bne	1b3ec <__flatcc_gen_sort@@Base+0x688>
   1b5b4:	ldr	r3, [sp, #36]	; 0x24
   1b5b8:	cmp	r3, #0
   1b5bc:	ble	1b5d8 <__flatcc_gen_sort@@Base+0x874>
   1b5c0:	ldr	r0, [pc, #1004]	; 1b9b4 <__flatcc_gen_sort@@Base+0xc50>
   1b5c4:	mov	r2, #4
   1b5c8:	mov	r1, #1
   1b5cc:	ldr	r3, [r6, #204]	; 0xcc
   1b5d0:	add	r0, pc, r0
   1b5d4:	bl	13eec <fwrite@plt>
   1b5d8:	mov	r0, r5
   1b5dc:	add	sp, sp, #284	; 0x11c
   1b5e0:	ldrd	r4, [sp]
   1b5e4:	ldrd	r6, [sp, #8]
   1b5e8:	ldrd	r8, [sp, #16]
   1b5ec:	ldrd	sl, [sp, #24]
   1b5f0:	add	sp, sp, #32
   1b5f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5f8:	ldr	r3, [sp, #320]	; 0x140
   1b5fc:	cmp	r3, #0
   1b600:	mov	r3, r9
   1b604:	beq	1b6a0 <__flatcc_gen_sort@@Base+0x93c>
   1b608:	ldr	r1, [pc, #936]	; 1b9b8 <__flatcc_gen_sort@@Base+0xc54>
   1b60c:	mov	r2, r7
   1b610:	stm	sp, {r7, r9}
   1b614:	add	r1, pc, r1
   1b618:	bl	13f58 <fprintf@plt>
   1b61c:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b620:	mov	r2, r7
   1b624:	str	r5, [sp]
   1b628:	ldr	r1, [sp, #28]
   1b62c:	bl	13f58 <fprintf@plt>
   1b630:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b634:	ldr	r1, [pc, #896]	; 1b9bc <__flatcc_gen_sort@@Base+0xc58>
   1b638:	mov	r2, fp
   1b63c:	mov	r5, sl
   1b640:	add	fp, fp, #1
   1b644:	add	r1, pc, r1
   1b648:	bl	13f58 <fprintf@plt>
   1b64c:	b	1b3e0 <__flatcc_gen_sort@@Base+0x67c>
   1b650:	ldr	r1, [pc, #872]	; 1b9c0 <__flatcc_gen_sort@@Base+0xc5c>
   1b654:	mov	r2, fp
   1b658:	mov	r5, sl
   1b65c:	add	fp, fp, #1
   1b660:	add	r1, pc, r1
   1b664:	bl	13f58 <fprintf@plt>
   1b668:	b	1b3e0 <__flatcc_gen_sort@@Base+0x67c>
   1b66c:	ldr	r3, [sp, #320]	; 0x140
   1b670:	str	r7, [sp]
   1b674:	cmp	r3, #0
   1b678:	mov	r3, r1
   1b67c:	beq	1b820 <__flatcc_gen_sort@@Base+0xabc>
   1b680:	ldr	r1, [pc, #828]	; 1b9c4 <__flatcc_gen_sort@@Base+0xc60>
   1b684:	mov	r2, r6
   1b688:	str	r9, [sp, #4]
   1b68c:	str	r7, [sp, #8]
   1b690:	str	r9, [sp, #12]
   1b694:	add	r1, pc, r1
   1b698:	bl	13f58 <fprintf@plt>
   1b69c:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b6a0:	ldr	r1, [pc, #800]	; 1b9c8 <__flatcc_gen_sort@@Base+0xc64>
   1b6a4:	mov	r2, r7
   1b6a8:	str	r5, [sp]
   1b6ac:	add	r1, pc, r1
   1b6b0:	bl	13f58 <fprintf@plt>
   1b6b4:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b6b8:	ldr	r3, [pc, #780]	; 1b9cc <__flatcc_gen_sort@@Base+0xc68>
   1b6bc:	add	r3, pc, r3
   1b6c0:	str	r3, [sp, #20]
   1b6c4:	b	1b2d0 <__flatcc_gen_sort@@Base+0x56c>
   1b6c8:	ldr	r1, [pc, #768]	; 1b9d0 <__flatcc_gen_sort@@Base+0xc6c>
   1b6cc:	str	r9, [sp, #4]
   1b6d0:	ldr	r2, [sp, #16]
   1b6d4:	add	r1, pc, r1
   1b6d8:	bl	13f58 <fprintf@plt>
   1b6dc:	ldr	r3, [r4, #16]
   1b6e0:	ldr	r0, [r3, #20]
   1b6e4:	bl	1b170 <__flatcc_gen_sort@@Base+0x40c>
   1b6e8:	subs	sl, r0, #0
   1b6ec:	ble	1b7b8 <__flatcc_gen_sort@@Base+0xa54>
   1b6f0:	ldr	r3, [pc, #732]	; 1b9d4 <__flatcc_gen_sort@@Base+0xc70>
   1b6f4:	str	r4, [sp, #40]	; 0x28
   1b6f8:	ldr	r9, [sp, #36]	; 0x24
   1b6fc:	ldr	r7, [sp, #320]	; 0x140
   1b700:	add	r3, pc, r3
   1b704:	str	r3, [sp, #48]	; 0x30
   1b708:	b	1b748 <__flatcc_gen_sort@@Base+0x9e4>
   1b70c:	cmp	r9, #4
   1b710:	ble	1b790 <__flatcc_gen_sort@@Base+0xa2c>
   1b714:	ldr	r2, [pc, #700]	; 1b9d8 <__flatcc_gen_sort@@Base+0xc74>
   1b718:	ldr	r1, [pc, #700]	; 1b9dc <__flatcc_gen_sort@@Base+0xc78>
   1b71c:	add	r2, pc, r2
   1b720:	add	r1, pc, r1
   1b724:	bl	13f58 <fprintf@plt>
   1b728:	ldr	r0, [r6, #204]	; 0xcc
   1b72c:	mov	r2, r4
   1b730:	add	r7, r7, #1
   1b734:	ldr	r1, [pc, #676]	; 1b9e0 <__flatcc_gen_sort@@Base+0xc7c>
   1b738:	add	r1, pc, r1
   1b73c:	bl	13f58 <fprintf@plt>
   1b740:	cmp	sl, r7
   1b744:	beq	1b7b0 <__flatcc_gen_sort@@Base+0xa4c>
   1b748:	cmp	r9, #0
   1b74c:	add	r4, r5, r7
   1b750:	ldr	r0, [r6, #204]	; 0xcc
   1b754:	beq	1b72c <__flatcc_gen_sort@@Base+0x9c8>
   1b758:	cmp	r7, #0
   1b75c:	beq	1b70c <__flatcc_gen_sort@@Base+0x9a8>
   1b760:	tst	r7, #3
   1b764:	bne	1b774 <__flatcc_gen_sort@@Base+0xa10>
   1b768:	sub	r3, r9, r7
   1b76c:	cmp	r3, #2
   1b770:	bgt	1b858 <__flatcc_gen_sort@@Base+0xaf4>
   1b774:	mov	r3, r0
   1b778:	mov	r2, #2
   1b77c:	ldr	r0, [sp, #24]
   1b780:	mov	r1, #1
   1b784:	bl	13eec <fwrite@plt>
   1b788:	ldr	r0, [r6, #204]	; 0xcc
   1b78c:	b	1b72c <__flatcc_gen_sort@@Base+0x9c8>
   1b790:	mov	r3, r0
   1b794:	ldr	r0, [pc, #584]	; 1b9e4 <__flatcc_gen_sort@@Base+0xc80>
   1b798:	mov	r2, #2
   1b79c:	mov	r1, #1
   1b7a0:	add	r0, pc, r0
   1b7a4:	bl	13eec <fwrite@plt>
   1b7a8:	ldr	r0, [r6, #204]	; 0xcc
   1b7ac:	b	1b72c <__flatcc_gen_sort@@Base+0x9c8>
   1b7b0:	ldr	r4, [sp, #40]	; 0x28
   1b7b4:	add	r5, sl, r5
   1b7b8:	mov	r0, #41	; 0x29
   1b7bc:	ldr	r1, [r6, #204]	; 0xcc
   1b7c0:	bl	13fb8 <fputc@plt>
   1b7c4:	b	1b3e0 <__flatcc_gen_sort@@Base+0x67c>
   1b7c8:	ldr	r1, [pc, #536]	; 1b9e8 <__flatcc_gen_sort@@Base+0xc84>
   1b7cc:	mov	r3, fp
   1b7d0:	mov	r2, fp
   1b7d4:	add	fp, fp, #1
   1b7d8:	add	r1, pc, r1
   1b7dc:	bl	13f58 <fprintf@plt>
   1b7e0:	ldr	r3, [r4, #16]
   1b7e4:	ldr	r0, [r3, #20]
   1b7e8:	bl	1b170 <__flatcc_gen_sort@@Base+0x40c>
   1b7ec:	add	r5, r5, r0
   1b7f0:	b	1b3e0 <__flatcc_gen_sort@@Base+0x67c>
   1b7f4:	ldr	r3, [sp, #320]	; 0x140
   1b7f8:	str	r9, [sp]
   1b7fc:	cmp	r3, #0
   1b800:	mov	r3, r7
   1b804:	beq	1b86c <__flatcc_gen_sort@@Base+0xb08>
   1b808:	ldr	r1, [pc, #476]	; 1b9ec <__flatcc_gen_sort@@Base+0xc88>
   1b80c:	stmib	sp, {r7, r9}
   1b810:	ldr	r2, [sp, #16]
   1b814:	add	r1, pc, r1
   1b818:	bl	13f58 <fprintf@plt>
   1b81c:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b820:	ldr	r1, [pc, #456]	; 1b9f0 <__flatcc_gen_sort@@Base+0xc8c>
   1b824:	mov	r2, r6
   1b828:	str	r9, [sp, #4]
   1b82c:	str	r5, [sp, #8]
   1b830:	add	r1, pc, r1
   1b834:	bl	13f58 <fprintf@plt>
   1b838:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b83c:	ldr	r1, [pc, #432]	; 1b9f4 <__flatcc_gen_sort@@Base+0xc90>
   1b840:	mov	r2, r6
   1b844:	str	r9, [sp, #4]
   1b848:	str	r5, [sp, #8]
   1b84c:	add	r1, pc, r1
   1b850:	bl	13f58 <fprintf@plt>
   1b854:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b858:	ldr	r2, [sp, #44]	; 0x2c
   1b85c:	ldr	r1, [sp, #48]	; 0x30
   1b860:	bl	13f58 <fprintf@plt>
   1b864:	ldr	r0, [r6, #204]	; 0xcc
   1b868:	b	1b72c <__flatcc_gen_sort@@Base+0x9c8>
   1b86c:	ldr	r1, [pc, #388]	; 1b9f8 <__flatcc_gen_sort@@Base+0xc94>
   1b870:	str	r5, [sp, #4]
   1b874:	ldr	r2, [sp, #16]
   1b878:	add	r1, pc, r1
   1b87c:	bl	13f58 <fprintf@plt>
   1b880:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b884:	ldr	r1, [pc, #368]	; 1b9fc <__flatcc_gen_sort@@Base+0xc98>
   1b888:	str	r5, [sp, #4]
   1b88c:	ldr	r2, [sp, #16]
   1b890:	add	r1, pc, r1
   1b894:	bl	13f58 <fprintf@plt>
   1b898:	b	1b3dc <__flatcc_gen_sort@@Base+0x678>
   1b89c:	ldr	r3, [pc, #348]	; 1ba00 <__flatcc_gen_sort@@Base+0xc9c>
   1b8a0:	add	r3, pc, r3
   1b8a4:	str	r3, [sp, #20]
   1b8a8:	b	1b2d0 <__flatcc_gen_sort@@Base+0x56c>
   1b8ac:	ldr	r2, [pc, #336]	; 1ba04 <__flatcc_gen_sort@@Base+0xca0>
   1b8b0:	movw	r3, #993	; 0x3e1
   1b8b4:	ldr	r1, [sp, #52]	; 0x34
   1b8b8:	ldr	r0, [pc, #328]	; 1ba08 <__flatcc_gen_sort@@Base+0xca4>
   1b8bc:	ldr	r4, [pc, #328]	; 1ba0c <__flatcc_gen_sort@@Base+0xca8>
   1b8c0:	ldr	ip, [r1, r2]
   1b8c4:	add	r0, pc, r0
   1b8c8:	ldr	r1, [pc, #320]	; 1ba10 <__flatcc_gen_sort@@Base+0xcac>
   1b8cc:	add	r4, pc, r4
   1b8d0:	str	r0, [sp]
   1b8d4:	mov	r2, r4
   1b8d8:	ldr	r0, [ip]
   1b8dc:	add	r1, pc, r1
   1b8e0:	bl	13f58 <fprintf@plt>
   1b8e4:	ldr	r3, [pc, #296]	; 1ba14 <__flatcc_gen_sort@@Base+0xcb0>
   1b8e8:	mov	r1, r4
   1b8ec:	movw	r2, #993	; 0x3e1
   1b8f0:	ldr	r0, [pc, #288]	; 1ba18 <__flatcc_gen_sort@@Base+0xcb4>
   1b8f4:	add	r3, pc, r3
   1b8f8:	add	r3, r3, #52	; 0x34
   1b8fc:	add	r0, pc, r0
   1b900:	bl	1400c <__assert_fail@plt>
   1b904:	ldr	r2, [pc, #248]	; 1ba04 <__flatcc_gen_sort@@Base+0xca0>
   1b908:	mov	r3, #96	; 0x60
   1b90c:	ldr	r1, [sp, #52]	; 0x34
   1b910:	ldr	r0, [pc, #260]	; 1ba1c <__flatcc_gen_sort@@Base+0xcb8>
   1b914:	ldr	r4, [pc, #260]	; 1ba20 <__flatcc_gen_sort@@Base+0xcbc>
   1b918:	ldr	ip, [r1, r2]
   1b91c:	add	r0, pc, r0
   1b920:	ldr	r1, [pc, #252]	; 1ba24 <__flatcc_gen_sort@@Base+0xcc0>
   1b924:	add	r4, pc, r4
   1b928:	str	r0, [sp]
   1b92c:	mov	r2, r4
   1b930:	ldr	r0, [ip]
   1b934:	add	r1, pc, r1
   1b938:	bl	13f58 <fprintf@plt>
   1b93c:	ldr	r3, [pc, #228]	; 1ba28 <__flatcc_gen_sort@@Base+0xcc4>
   1b940:	mov	r1, r4
   1b944:	mov	r2, #96	; 0x60
   1b948:	ldr	r0, [pc, #220]	; 1ba2c <__flatcc_gen_sort@@Base+0xcc8>
   1b94c:	add	r3, pc, r3
   1b950:	add	r3, r3, #32
   1b954:	add	r0, pc, r0
   1b958:	bl	1400c <__assert_fail@plt>
   1b95c:	andeq	pc, r4, ip, asr sp	; <UNPREDICTABLE>
   1b960:	andeq	sp, r2, ip, asr sl
   1b964:	muleq	r2, r4, fp
   1b968:	andeq	sp, r2, ip, ror #22
   1b96c:			; <UNDEFINED> instruction: 0x0002dab0
   1b970:	andeq	r6, r2, ip, lsl fp
   1b974:	andeq	r5, r2, ip, lsr #11
   1b978:	andeq	sp, r2, ip, lsl #22
   1b97c:	andeq	sp, r2, r0, lsr #18
   1b980:	andeq	sp, r2, r4, lsl #19
   1b984:	ldrdeq	r5, [r2], -r0
   1b988:	ldrdeq	r5, [r2], -r4
   1b98c:	andeq	r5, r2, r4, lsr r4
   1b990:	andeq	r5, r2, r4, lsr #9
   1b994:	andeq	r5, r2, r8, lsl #9
   1b998:	ldrdeq	sp, [r3], -r8
   1b99c:	andeq	r5, r2, r0, ror #8
   1b9a0:	andeq	r5, r2, r8, lsr #8
   1b9a4:	andeq	r5, r2, r0, lsr r4
   1b9a8:	strdeq	r5, [r2], -r4
   1b9ac:	andeq	sp, r2, r8, lsl #16
   1b9b0:	andeq	sp, r2, r0, ror #15
   1b9b4:	andeq	sp, r2, r8, ror #14
   1b9b8:	andeq	sp, r2, ip, asr r8
   1b9bc:	andeq	sp, r2, r4, lsl #15
   1b9c0:	andeq	sp, r2, r8, ror #14
   1b9c4:	andeq	sp, r2, r0, lsl #16
   1b9c8:	ldrdeq	sp, [r2], -r8
   1b9cc:	andeq	lr, r2, r4, lsr #31
   1b9d0:	andeq	sp, r2, ip, asr #13
   1b9d4:			; <UNDEFINED> instruction: 0x0002d6b8
   1b9d8:	andeq	r6, r2, ip, lsl r7
   1b9dc:	muleq	r2, r8, r6
   1b9e0:	andeq	sp, r2, ip, lsl #13
   1b9e4:	andeq	sp, r2, r0, lsr #12
   1b9e8:	andeq	sp, r2, ip, ror #10
   1b9ec:	andeq	sp, r2, ip, asr #11
   1b9f0:	andeq	sp, r2, ip, lsl #13
   1b9f4:			; <UNDEFINED> instruction: 0x0002d6bc
   1b9f8:	muleq	r2, r0, r5
   1b9fc:	andeq	sp, r2, r0, asr #11
   1ba00:	andeq	sp, r2, ip, lsl #9
   1ba04:	muleq	r0, ip, r0
   1ba08:	andeq	sp, r2, r8, ror #12
   1ba0c:	andeq	sp, r2, r0, asr r3
   1ba10:	ldrdeq	r4, [r2], -ip
   1ba14:			; <UNDEFINED> instruction: 0x0002d1b4
   1ba18:	andeq	sp, r2, r0, ror #9
   1ba1c:	andeq	r4, r2, r8, lsr #31
   1ba20:	andeq	r4, r2, r4, lsr pc
   1ba24:	andeq	r4, r2, r4, lsl #31
   1ba28:	andeq	sp, r2, ip, asr r1
   1ba2c:	andeq	sp, r2, r8, lsl #9
   1ba30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ba34:	mov	r4, r1
   1ba38:	mov	r5, r2
   1ba3c:	ldr	r1, [pc, #1100]	; 1be90 <__flatcc_gen_sort@@Base+0x112c>
   1ba40:	mov	r2, #220	; 0xdc
   1ba44:	strd	r6, [sp, #8]
   1ba48:	mov	r6, r0
   1ba4c:	mov	r7, r3
   1ba50:	strd	r8, [sp, #16]
   1ba54:	strd	sl, [sp, #24]
   1ba58:	str	lr, [sp, #32]
   1ba5c:	sub	sp, sp, #252	; 0xfc
   1ba60:	add	r1, pc, r1
   1ba64:	add	r8, sp, #28
   1ba68:	mov	ip, r1
   1ba6c:	mov	r0, r8
   1ba70:	str	r1, [sp, #20]
   1ba74:	mov	r1, #0
   1ba78:	bl	13f70 <memset@plt>
   1ba7c:	ldr	r4, [r4]
   1ba80:	cmp	r4, #0
   1ba84:	beq	1bb80 <__flatcc_gen_sort@@Base+0xe1c>
   1ba88:	ldr	r2, [pc, #1028]	; 1be94 <__flatcc_gen_sort@@Base+0x1130>
   1ba8c:	ldr	r3, [pc, #1028]	; 1be98 <__flatcc_gen_sort@@Base+0x1134>
   1ba90:	ldr	r9, [pc, #1028]	; 1be9c <__flatcc_gen_sort@@Base+0x1138>
   1ba94:	add	r2, pc, r2
   1ba98:	ldr	fp, [pc, #1024]	; 1bea0 <__flatcc_gen_sort@@Base+0x113c>
   1ba9c:	str	r2, [sp, #12]
   1baa0:	add	r3, pc, r3
   1baa4:	ldr	r2, [sp, #288]	; 0x120
   1baa8:	add	r9, pc, r9
   1baac:	add	fp, pc, fp
   1bab0:	cmp	r2, #0
   1bab4:	moveq	r9, r3
   1bab8:	ldr	r3, [pc, #996]	; 1bea4 <__flatcc_gen_sort@@Base+0x1140>
   1babc:	add	r3, pc, r3
   1bac0:	str	r3, [sp, #16]
   1bac4:	ldrh	r3, [r4, #72]	; 0x48
   1bac8:	tst	r3, #4
   1bacc:	bne	1bb74 <__flatcc_gen_sort@@Base+0xe10>
   1bad0:	ldrh	r3, [r4, #24]
   1bad4:	cmp	r3, #8
   1bad8:	bne	1bba0 <__flatcc_gen_sort@@Base+0xe3c>
   1badc:	cmp	r7, #0
   1bae0:	beq	1bb0c <__flatcc_gen_sort@@Base+0xda8>
   1bae4:	cmp	r5, #0
   1bae8:	ldr	r3, [r6, #204]	; 0xcc
   1baec:	bne	1bc28 <__flatcc_gen_sort@@Base+0xec4>
   1baf0:	cmp	r7, #4
   1baf4:	ble	1bcb4 <__flatcc_gen_sort@@Base+0xf50>
   1baf8:	ldr	r1, [pc, #936]	; 1bea8 <__flatcc_gen_sort@@Base+0x1144>
   1bafc:	mov	r0, r3
   1bb00:	mov	r2, r9
   1bb04:	add	r1, pc, r1
   1bb08:	bl	13f58 <fprintf@plt>
   1bb0c:	ldr	r3, [r4, #16]
   1bb10:	cmp	r3, #5
   1bb14:	beq	1bb54 <__flatcc_gen_sort@@Base+0xdf0>
   1bb18:	sub	r3, r3, #1
   1bb1c:	cmp	r3, #10
   1bb20:	addls	pc, pc, r3, lsl #2
   1bb24:	b	1bde0 <__flatcc_gen_sort@@Base+0x107c>
   1bb28:	b	1bcfc <__flatcc_gen_sort@@Base+0xf98>
   1bb2c:	b	1bce8 <__flatcc_gen_sort@@Base+0xf84>
   1bb30:	b	1bd98 <__flatcc_gen_sort@@Base+0x1034>
   1bb34:	b	1bd84 <__flatcc_gen_sort@@Base+0x1020>
   1bb38:	b	1bde0 <__flatcc_gen_sort@@Base+0x107c>
   1bb3c:	b	1bd5c <__flatcc_gen_sort@@Base+0xff8>
   1bb40:	b	1bd48 <__flatcc_gen_sort@@Base+0xfe4>
   1bb44:	b	1bd34 <__flatcc_gen_sort@@Base+0xfd0>
   1bb48:	b	1bd20 <__flatcc_gen_sort@@Base+0xfbc>
   1bb4c:	b	1bd0c <__flatcc_gen_sort@@Base+0xfa8>
   1bb50:	b	1bd70 <__flatcc_gen_sort@@Base+0x100c>
   1bb54:	ldr	r3, [sp, #12]
   1bb58:	mov	r2, r6
   1bb5c:	add	ip, r5, #1
   1bb60:	mov	r1, fp
   1bb64:	str	r5, [sp]
   1bb68:	ldr	r0, [r6, #204]	; 0xcc
   1bb6c:	mov	r5, ip
   1bb70:	bl	13f58 <fprintf@plt>
   1bb74:	ldr	r4, [r4]
   1bb78:	cmp	r4, #0
   1bb7c:	bne	1bac4 <__flatcc_gen_sort@@Base+0xd60>
   1bb80:	mov	r0, r5
   1bb84:	add	sp, sp, #252	; 0xfc
   1bb88:	ldrd	r4, [sp]
   1bb8c:	ldrd	r6, [sp, #8]
   1bb90:	ldrd	r8, [sp, #16]
   1bb94:	ldrd	sl, [sp, #24]
   1bb98:	add	sp, sp, #32
   1bb9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bba0:	cmp	r3, #14
   1bba4:	bne	1be38 <__flatcc_gen_sort@@Base+0x10d4>
   1bba8:	ldr	r1, [r4, #16]
   1bbac:	ldrh	r3, [r1, #8]
   1bbb0:	cmp	r3, #1
   1bbb4:	beq	1bc84 <__flatcc_gen_sort@@Base+0xf20>
   1bbb8:	cmp	r7, #0
   1bbbc:	beq	1bbec <__flatcc_gen_sort@@Base+0xe88>
   1bbc0:	cmp	r5, #0
   1bbc4:	ldr	r3, [r6, #204]	; 0xcc
   1bbc8:	bne	1bc54 <__flatcc_gen_sort@@Base+0xef0>
   1bbcc:	cmp	r7, #4
   1bbd0:	ble	1bccc <__flatcc_gen_sort@@Base+0xf68>
   1bbd4:	ldr	r1, [pc, #720]	; 1beac <__flatcc_gen_sort@@Base+0x1148>
   1bbd8:	mov	r0, r3
   1bbdc:	mov	r2, r9
   1bbe0:	add	r1, pc, r1
   1bbe4:	bl	13f58 <fprintf@plt>
   1bbe8:	ldr	r1, [r4, #16]
   1bbec:	mov	r2, r8
   1bbf0:	add	sl, r5, #1
   1bbf4:	ldr	r0, [r1, #12]
   1bbf8:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1bbfc:	ldr	r1, [pc, #684]	; 1beb0 <__flatcc_gen_sort@@Base+0x114c>
   1bc00:	mov	r3, r5
   1bc04:	mov	r2, r8
   1bc08:	mov	r5, sl
   1bc0c:	ldr	r0, [r6, #204]	; 0xcc
   1bc10:	add	r1, pc, r1
   1bc14:	bl	13f58 <fprintf@plt>
   1bc18:	ldr	r4, [r4]
   1bc1c:	cmp	r4, #0
   1bc20:	bne	1bac4 <__flatcc_gen_sort@@Base+0xd60>
   1bc24:	b	1bb80 <__flatcc_gen_sort@@Base+0xe1c>
   1bc28:	tst	r5, #3
   1bc2c:	bne	1bc3c <__flatcc_gen_sort@@Base+0xed8>
   1bc30:	sub	r2, r7, r5
   1bc34:	cmp	r2, #2
   1bc38:	bgt	1bdac <__flatcc_gen_sort@@Base+0x1048>
   1bc3c:	ldr	r0, [pc, #624]	; 1beb4 <__flatcc_gen_sort@@Base+0x1150>
   1bc40:	mov	r2, #2
   1bc44:	mov	r1, #1
   1bc48:	add	r0, pc, r0
   1bc4c:	bl	13eec <fwrite@plt>
   1bc50:	b	1bb0c <__flatcc_gen_sort@@Base+0xda8>
   1bc54:	tst	r5, #3
   1bc58:	bne	1bc68 <__flatcc_gen_sort@@Base+0xf04>
   1bc5c:	sub	r2, r7, r5
   1bc60:	cmp	r2, #2
   1bc64:	bgt	1bdc4 <__flatcc_gen_sort@@Base+0x1060>
   1bc68:	ldr	r0, [pc, #584]	; 1beb8 <__flatcc_gen_sort@@Base+0x1154>
   1bc6c:	mov	r1, #1
   1bc70:	mov	r2, #2
   1bc74:	add	r0, pc, r0
   1bc78:	bl	13eec <fwrite@plt>
   1bc7c:	ldr	r1, [r4, #16]
   1bc80:	b	1bbec <__flatcc_gen_sort@@Base+0xe88>
   1bc84:	ldr	r3, [sp, #288]	; 0x120
   1bc88:	mov	r2, r5
   1bc8c:	add	r1, r1, #20
   1bc90:	mov	r0, r6
   1bc94:	str	r3, [sp]
   1bc98:	mov	r3, r7
   1bc9c:	bl	1ba30 <__flatcc_gen_sort@@Base+0xccc>
   1bca0:	ldr	r4, [r4]
   1bca4:	mov	r5, r0
   1bca8:	cmp	r4, #0
   1bcac:	bne	1bac4 <__flatcc_gen_sort@@Base+0xd60>
   1bcb0:	b	1bb80 <__flatcc_gen_sort@@Base+0xe1c>
   1bcb4:	ldr	r0, [pc, #512]	; 1bebc <__flatcc_gen_sort@@Base+0x1158>
   1bcb8:	mov	r2, #2
   1bcbc:	mov	r1, #1
   1bcc0:	add	r0, pc, r0
   1bcc4:	bl	13eec <fwrite@plt>
   1bcc8:	b	1bb0c <__flatcc_gen_sort@@Base+0xda8>
   1bccc:	ldr	r0, [pc, #492]	; 1bec0 <__flatcc_gen_sort@@Base+0x115c>
   1bcd0:	mov	r1, #1
   1bcd4:	mov	r2, #2
   1bcd8:	add	r0, pc, r0
   1bcdc:	bl	13eec <fwrite@plt>
   1bce0:	ldr	r1, [r4, #16]
   1bce4:	b	1bbec <__flatcc_gen_sort@@Base+0xe88>
   1bce8:	ldr	r2, [pc, #468]	; 1bec4 <__flatcc_gen_sort@@Base+0x1160>
   1bcec:	ldr	r3, [pc, #468]	; 1bec8 <__flatcc_gen_sort@@Base+0x1164>
   1bcf0:	add	r2, pc, r2
   1bcf4:	add	r3, pc, r3
   1bcf8:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bcfc:	ldr	r3, [pc, #456]	; 1becc <__flatcc_gen_sort@@Base+0x1168>
   1bd00:	ldr	r2, [sp, #16]
   1bd04:	add	r3, pc, r3
   1bd08:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd0c:	ldr	r2, [pc, #444]	; 1bed0 <__flatcc_gen_sort@@Base+0x116c>
   1bd10:	ldr	r3, [pc, #444]	; 1bed4 <__flatcc_gen_sort@@Base+0x1170>
   1bd14:	add	r2, pc, r2
   1bd18:	add	r3, pc, r3
   1bd1c:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd20:	ldr	r2, [pc, #432]	; 1bed8 <__flatcc_gen_sort@@Base+0x1174>
   1bd24:	ldr	r3, [pc, #432]	; 1bedc <__flatcc_gen_sort@@Base+0x1178>
   1bd28:	add	r2, pc, r2
   1bd2c:	add	r3, pc, r3
   1bd30:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd34:	ldr	r2, [pc, #420]	; 1bee0 <__flatcc_gen_sort@@Base+0x117c>
   1bd38:	ldr	r3, [pc, #420]	; 1bee4 <__flatcc_gen_sort@@Base+0x1180>
   1bd3c:	add	r2, pc, r2
   1bd40:	add	r3, pc, r3
   1bd44:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd48:	ldr	r2, [pc, #408]	; 1bee8 <__flatcc_gen_sort@@Base+0x1184>
   1bd4c:	ldr	r3, [pc, #408]	; 1beec <__flatcc_gen_sort@@Base+0x1188>
   1bd50:	add	r2, pc, r2
   1bd54:	add	r3, pc, r3
   1bd58:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd5c:	ldr	r2, [pc, #396]	; 1bef0 <__flatcc_gen_sort@@Base+0x118c>
   1bd60:	ldr	r3, [pc, #396]	; 1bef4 <__flatcc_gen_sort@@Base+0x1190>
   1bd64:	add	r2, pc, r2
   1bd68:	add	r3, pc, r3
   1bd6c:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd70:	ldr	r2, [pc, #384]	; 1bef8 <__flatcc_gen_sort@@Base+0x1194>
   1bd74:	ldr	r3, [pc, #384]	; 1befc <__flatcc_gen_sort@@Base+0x1198>
   1bd78:	add	r2, pc, r2
   1bd7c:	add	r3, pc, r3
   1bd80:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd84:	ldr	r2, [pc, #372]	; 1bf00 <__flatcc_gen_sort@@Base+0x119c>
   1bd88:	ldr	r3, [pc, #372]	; 1bf04 <__flatcc_gen_sort@@Base+0x11a0>
   1bd8c:	add	r2, pc, r2
   1bd90:	add	r3, pc, r3
   1bd94:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bd98:	ldr	r2, [pc, #360]	; 1bf08 <__flatcc_gen_sort@@Base+0x11a4>
   1bd9c:	ldr	r3, [pc, #360]	; 1bf0c <__flatcc_gen_sort@@Base+0x11a8>
   1bda0:	add	r2, pc, r2
   1bda4:	add	r3, pc, r3
   1bda8:	b	1bb5c <__flatcc_gen_sort@@Base+0xdf8>
   1bdac:	ldr	r1, [pc, #348]	; 1bf10 <__flatcc_gen_sort@@Base+0x11ac>
   1bdb0:	mov	r0, r3
   1bdb4:	mov	r2, r9
   1bdb8:	add	r1, pc, r1
   1bdbc:	bl	13f58 <fprintf@plt>
   1bdc0:	b	1bb0c <__flatcc_gen_sort@@Base+0xda8>
   1bdc4:	ldr	r1, [pc, #328]	; 1bf14 <__flatcc_gen_sort@@Base+0x11b0>
   1bdc8:	mov	r0, r3
   1bdcc:	mov	r2, r9
   1bdd0:	add	r1, pc, r1
   1bdd4:	bl	13f58 <fprintf@plt>
   1bdd8:	ldr	r1, [r4, #16]
   1bddc:	b	1bbec <__flatcc_gen_sort@@Base+0xe88>
   1bde0:	ldr	r2, [pc, #304]	; 1bf18 <__flatcc_gen_sort@@Base+0x11b4>
   1bde4:	mov	r3, #141	; 0x8d
   1bde8:	ldr	r1, [sp, #20]
   1bdec:	ldr	r0, [pc, #296]	; 1bf1c <__flatcc_gen_sort@@Base+0x11b8>
   1bdf0:	ldr	r4, [pc, #296]	; 1bf20 <__flatcc_gen_sort@@Base+0x11bc>
   1bdf4:	ldr	ip, [r1, r2]
   1bdf8:	add	r0, pc, r0
   1bdfc:	ldr	r1, [pc, #288]	; 1bf24 <__flatcc_gen_sort@@Base+0x11c0>
   1be00:	add	r4, pc, r4
   1be04:	str	r0, [sp]
   1be08:	mov	r2, r4
   1be0c:	ldr	r0, [ip]
   1be10:	add	r1, pc, r1
   1be14:	bl	13f58 <fprintf@plt>
   1be18:	ldr	r3, [pc, #264]	; 1bf28 <__flatcc_gen_sort@@Base+0x11c4>
   1be1c:	mov	r1, r4
   1be20:	mov	r2, #141	; 0x8d
   1be24:	ldr	r0, [pc, #256]	; 1bf2c <__flatcc_gen_sort@@Base+0x11c8>
   1be28:	add	r3, pc, r3
   1be2c:	add	r3, r3, #84	; 0x54
   1be30:	add	r0, pc, r0
   1be34:	bl	1400c <__assert_fail@plt>
   1be38:	ldr	r2, [pc, #216]	; 1bf18 <__flatcc_gen_sort@@Base+0x11b4>
   1be3c:	movw	r3, #850	; 0x352
   1be40:	ldr	r1, [sp, #20]
   1be44:	ldr	r0, [pc, #228]	; 1bf30 <__flatcc_gen_sort@@Base+0x11cc>
   1be48:	ldr	r4, [pc, #228]	; 1bf34 <__flatcc_gen_sort@@Base+0x11d0>
   1be4c:	ldr	ip, [r1, r2]
   1be50:	add	r0, pc, r0
   1be54:	ldr	r1, [pc, #220]	; 1bf38 <__flatcc_gen_sort@@Base+0x11d4>
   1be58:	add	r4, pc, r4
   1be5c:	str	r0, [sp]
   1be60:	mov	r2, r4
   1be64:	ldr	r0, [ip]
   1be68:	add	r1, pc, r1
   1be6c:	bl	13f58 <fprintf@plt>
   1be70:	ldr	r3, [pc, #196]	; 1bf3c <__flatcc_gen_sort@@Base+0x11d8>
   1be74:	mov	r1, r4
   1be78:	movw	r2, #850	; 0x352
   1be7c:	ldr	r0, [pc, #188]	; 1bf40 <__flatcc_gen_sort@@Base+0x11dc>
   1be80:	add	r3, pc, r3
   1be84:	add	r3, r3, #104	; 0x68
   1be88:	add	r0, pc, r0
   1be8c:	bl	1400c <__assert_fail@plt>
   1be90:	muleq	r4, r8, r5
   1be94:			; <UNDEFINED> instruction: 0x00024ebc
   1be98:	muleq	r2, r8, r3
   1be9c:	ldrdeq	r7, [r2], -r8
   1bea0:	andeq	sp, r2, ip, lsr #9
   1bea4:	andeq	lr, r2, r4, lsr #23
   1bea8:			; <UNDEFINED> instruction: 0x0002d2b4
   1beac:	ldrdeq	sp, [r2], -r8
   1beb0:	andeq	sp, r2, r8, lsr r3
   1beb4:	andeq	sp, r2, r8, ror r1
   1beb8:	andeq	sp, r2, ip, asr #2
   1bebc:	andeq	sp, r2, r0, lsl #2
   1bec0:	andeq	sp, r2, r8, ror #1
   1bec4:	andeq	lr, r2, r0, ror r9
   1bec8:	andeq	r4, r2, r8, asr #24
   1becc:	andeq	r4, r2, r8, lsl #24
   1bed0:	andeq	lr, r2, ip, asr #18
   1bed4:	andeq	r4, r2, r0, ror ip
   1bed8:	andeq	lr, r2, r8, lsr r9
   1bedc:	andeq	r4, r2, r4, ror #24
   1bee0:	andeq	lr, r2, r4, lsr #18
   1bee4:			; <UNDEFINED> instruction: 0x00024bbc
   1bee8:	andeq	lr, r2, r0, lsl r9
   1beec:	andeq	r4, r2, r4, lsr #24
   1bef0:	strdeq	lr, [r2], -ip
   1bef4:	andeq	r4, r2, r0, lsl #24
   1bef8:	andeq	lr, r2, r8, ror #17
   1befc:	andeq	r4, r2, r4, lsr #23
   1bf00:	ldrdeq	lr, [r2], -r4
   1bf04:	andeq	r4, r2, r8, asr #23
   1bf08:	andeq	lr, r2, r0, asr #17
   1bf0c:	andeq	r4, r2, r4, lsl #23
   1bf10:	andeq	sp, r2, r0
   1bf14:	andeq	ip, r2, r8, ror #31
   1bf18:	muleq	r0, ip, r0
   1bf1c:	andeq	r4, r2, ip, asr #21
   1bf20:	andeq	r4, r2, r8, asr sl
   1bf24:	andeq	r4, r2, r8, lsr #21
   1bf28:	andeq	ip, r2, r0, lsl #25
   1bf2c:	andeq	ip, r2, ip, lsr #31
   1bf30:	andeq	sp, r2, r4, lsl r1
   1bf34:	andeq	ip, r2, r4, asr #27
   1bf38:	andeq	r4, r2, r0, asr sl
   1bf3c:	andeq	ip, r2, r8, lsr #24
   1bf40:	andeq	ip, r2, r4, asr pc
   1bf44:	ldr	r3, [pc, #4060]	; 1cf28 <__flatcc_gen_sort@@Base+0x21c4>
   1bf48:	mov	r2, #220	; 0xdc
   1bf4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bf50:	mov	r4, r1
   1bf54:	mov	r5, r0
   1bf58:	strd	r6, [sp, #8]
   1bf5c:	mov	r1, #0
   1bf60:	strd	r8, [sp, #16]
   1bf64:	strd	sl, [sp, #24]
   1bf68:	str	lr, [sp, #32]
   1bf6c:	sub	sp, sp, #644	; 0x284
   1bf70:	add	r3, pc, r3
   1bf74:	add	sl, sp, #200	; 0xc8
   1bf78:	add	fp, sp, #420	; 0x1a4
   1bf7c:	mov	r0, sl
   1bf80:	str	r3, [sp, #92]	; 0x5c
   1bf84:	bl	13f70 <memset@plt>
   1bf88:	mov	r2, #220	; 0xdc
   1bf8c:	mov	r1, #0
   1bf90:	mov	r0, fp
   1bf94:	bl	13f70 <memset@plt>
   1bf98:	mov	r1, r4
   1bf9c:	mov	r2, sl
   1bfa0:	ldr	r0, [r4, #12]
   1bfa4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1bfa8:	ldr	r4, [r4, #20]
   1bfac:	cmp	r4, #0
   1bfb0:	beq	1c0d8 <__flatcc_gen_sort@@Base+0x1374>
   1bfb4:	ldr	r3, [pc, #3952]	; 1cf2c <__flatcc_gen_sort@@Base+0x21c8>
   1bfb8:	add	r3, pc, r3
   1bfbc:	str	r3, [sp, #76]	; 0x4c
   1bfc0:	ldr	r3, [pc, #3944]	; 1cf30 <__flatcc_gen_sort@@Base+0x21cc>
   1bfc4:	add	r3, pc, r3
   1bfc8:	str	r3, [sp, #80]	; 0x50
   1bfcc:	ldr	r3, [pc, #3936]	; 1cf34 <__flatcc_gen_sort@@Base+0x21d0>
   1bfd0:	add	r3, pc, r3
   1bfd4:	str	r3, [sp, #84]	; 0x54
   1bfd8:	ldr	r3, [pc, #3928]	; 1cf38 <__flatcc_gen_sort@@Base+0x21d4>
   1bfdc:	add	r3, pc, r3
   1bfe0:	str	r3, [sp, #88]	; 0x58
   1bfe4:	ldrh	r2, [r4, #72]	; 0x48
   1bfe8:	ldr	r3, [r4, #4]
   1bfec:	tst	r2, #4
   1bff0:	ldrd	r6, [r3]
   1bff4:	bne	1c63c <__flatcc_gen_sort@@Base+0x18d8>
   1bff8:	ldrh	r3, [r4, #24]
   1bffc:	sub	r3, r3, #7
   1c000:	cmp	r3, #8
   1c004:	addls	pc, pc, r3, lsl #2
   1c008:	b	1d5a0 <__flatcc_gen_sort@@Base+0x283c>
   1c00c:	b	1c17c <__flatcc_gen_sort@@Base+0x1418>
   1c010:	b	1c134 <__flatcc_gen_sort@@Base+0x13d0>
   1c014:	b	1c104 <__flatcc_gen_sort@@Base+0x13a0>
   1c018:	b	1c0a0 <__flatcc_gen_sort@@Base+0x133c>
   1c01c:	b	1d5a0 <__flatcc_gen_sort@@Base+0x283c>
   1c020:	b	1d5a0 <__flatcc_gen_sort@@Base+0x283c>
   1c024:	b	1d5a0 <__flatcc_gen_sort@@Base+0x283c>
   1c028:	b	1c068 <__flatcc_gen_sort@@Base+0x1304>
   1c02c:	b	1c030 <__flatcc_gen_sort@@Base+0x12cc>
   1c030:	ldr	r1, [r4, #16]
   1c034:	mov	r2, fp
   1c038:	ldr	r0, [r1, #12]
   1c03c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1c040:	ldr	r2, [r4, #16]
   1c044:	ldrh	r3, [r2, #8]
   1c048:	cmp	r3, #4
   1c04c:	addls	pc, pc, r3, lsl #2
   1c050:	b	1d650 <__flatcc_gen_sort@@Base+0x28ec>
   1c054:	b	1c25c <__flatcc_gen_sort@@Base+0x14f8>
   1c058:	b	1c218 <__flatcc_gen_sort@@Base+0x14b4>
   1c05c:	b	1d650 <__flatcc_gen_sort@@Base+0x28ec>
   1c060:	b	1c374 <__flatcc_gen_sort@@Base+0x1610>
   1c064:	b	1c1c4 <__flatcc_gen_sort@@Base+0x1460>
   1c068:	ldr	r1, [r4, #16]
   1c06c:	mov	r2, fp
   1c070:	ldr	r0, [r1, #12]
   1c074:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1c078:	ldr	r2, [r4, #16]
   1c07c:	ldrh	r3, [r2, #8]
   1c080:	cmp	r3, #4
   1c084:	addls	pc, pc, r3, lsl #2
   1c088:	b	1d5f8 <__flatcc_gen_sort@@Base+0x2894>
   1c08c:	b	1c340 <__flatcc_gen_sort@@Base+0x15dc>
   1c090:	b	1c2fc <__flatcc_gen_sort@@Base+0x1598>
   1c094:	b	1d5f8 <__flatcc_gen_sort@@Base+0x2894>
   1c098:	b	1c2d4 <__flatcc_gen_sort@@Base+0x1570>
   1c09c:	b	1c29c <__flatcc_gen_sort@@Base+0x1538>
   1c0a0:	ldr	r1, [pc, #3732]	; 1cf3c <__flatcc_gen_sort@@Base+0x21d8>
   1c0a4:	mov	r2, r5
   1c0a8:	str	r5, [sp, #8]
   1c0ac:	str	sl, [sp, #12]
   1c0b0:	str	r7, [sp, #16]
   1c0b4:	str	r6, [sp, #20]
   1c0b8:	ldrd	r6, [r4, #96]	; 0x60
   1c0bc:	add	r1, pc, r1
   1c0c0:	strd	r6, [sp]
   1c0c4:	ldr	r0, [r5, #204]	; 0xcc
   1c0c8:	bl	13f58 <fprintf@plt>
   1c0cc:	ldr	r4, [r4]
   1c0d0:	cmp	r4, #0
   1c0d4:	bne	1bfe4 <__flatcc_gen_sort@@Base+0x1280>
   1c0d8:	ldr	r1, [r5, #204]	; 0xcc
   1c0dc:	mov	r0, #10
   1c0e0:	bl	13fb8 <fputc@plt>
   1c0e4:	mov	r0, #0
   1c0e8:	add	sp, sp, #644	; 0x284
   1c0ec:	ldrd	r4, [sp]
   1c0f0:	ldrd	r6, [sp, #8]
   1c0f4:	ldrd	r8, [sp, #16]
   1c0f8:	ldrd	sl, [sp, #24]
   1c0fc:	add	sp, sp, #32
   1c100:	pop	{pc}		; (ldr pc, [sp], #4)
   1c104:	ldr	r1, [pc, #3636]	; 1cf40 <__flatcc_gen_sort@@Base+0x21dc>
   1c108:	mov	r2, r5
   1c10c:	str	r5, [sp, #8]
   1c110:	str	sl, [sp, #12]
   1c114:	str	r7, [sp, #16]
   1c118:	str	r6, [sp, #20]
   1c11c:	ldrd	r6, [r4, #96]	; 0x60
   1c120:	add	r1, pc, r1
   1c124:	strd	r6, [sp]
   1c128:	ldr	r0, [r5, #204]	; 0xcc
   1c12c:	bl	13f58 <fprintf@plt>
   1c130:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c134:	ldr	r2, [r4, #16]
   1c138:	cmp	r2, #5
   1c13c:	beq	1c6b0 <__flatcc_gen_sort@@Base+0x194c>
   1c140:	sub	r3, r2, #1
   1c144:	cmp	r3, #10
   1c148:	addls	pc, pc, r3, lsl #2
   1c14c:	b	1d6a8 <__flatcc_gen_sort@@Base+0x2944>
   1c150:	b	1d480 <__flatcc_gen_sort@@Base+0x271c>
   1c154:	b	1c55c <__flatcc_gen_sort@@Base+0x17f8>
   1c158:	b	1c538 <__flatcc_gen_sort@@Base+0x17d4>
   1c15c:	b	1c514 <__flatcc_gen_sort@@Base+0x17b0>
   1c160:	b	1d6a8 <__flatcc_gen_sort@@Base+0x2944>
   1c164:	b	1ca0c <__flatcc_gen_sort@@Base+0x1ca8>
   1c168:	b	1d45c <__flatcc_gen_sort@@Base+0x26f8>
   1c16c:	b	1c4cc <__flatcc_gen_sort@@Base+0x1768>
   1c170:	b	1c4a8 <__flatcc_gen_sort@@Base+0x1744>
   1c174:	b	1c484 <__flatcc_gen_sort@@Base+0x1720>
   1c178:	b	1c4f0 <__flatcc_gen_sort@@Base+0x178c>
   1c17c:	ldr	r3, [r4, #16]
   1c180:	cmp	r3, #5
   1c184:	beq	1c808 <__flatcc_gen_sort@@Base+0x1aa4>
   1c188:	sub	r3, r3, #1
   1c18c:	cmp	r3, #10
   1c190:	addls	pc, pc, r3, lsl #2
   1c194:	b	1d6a8 <__flatcc_gen_sort@@Base+0x2944>
   1c198:	b	1c620 <__flatcc_gen_sort@@Base+0x18bc>
   1c19c:	b	1c604 <__flatcc_gen_sort@@Base+0x18a0>
   1c1a0:	b	1c5e8 <__flatcc_gen_sort@@Base+0x1884>
   1c1a4:	b	1c5cc <__flatcc_gen_sort@@Base+0x1868>
   1c1a8:	b	1d6a8 <__flatcc_gen_sort@@Base+0x2944>
   1c1ac:	b	1c59c <__flatcc_gen_sort@@Base+0x1838>
   1c1b0:	b	1c580 <__flatcc_gen_sort@@Base+0x181c>
   1c1b4:	b	1c468 <__flatcc_gen_sort@@Base+0x1704>
   1c1b8:	b	1c44c <__flatcc_gen_sort@@Base+0x16e8>
   1c1bc:	b	1c3a8 <__flatcc_gen_sort@@Base+0x1644>
   1c1c0:	b	1c5b8 <__flatcc_gen_sort@@Base+0x1854>
   1c1c4:	str	r5, [sp, #8]
   1c1c8:	mov	r2, r5
   1c1cc:	str	sl, [sp, #12]
   1c1d0:	str	r7, [sp, #16]
   1c1d4:	str	r6, [sp, #20]
   1c1d8:	str	fp, [sp, #24]
   1c1dc:	ldrd	r8, [r4, #96]	; 0x60
   1c1e0:	ldr	r1, [sp, #76]	; 0x4c
   1c1e4:	ldr	r0, [r5, #204]	; 0xcc
   1c1e8:	strd	r8, [sp]
   1c1ec:	bl	13f58 <fprintf@plt>
   1c1f0:	mov	r0, #1
   1c1f4:	str	r0, [sp, #4]
   1c1f8:	mov	r3, r6
   1c1fc:	mov	r2, r7
   1c200:	ldr	ip, [r4, #16]
   1c204:	mov	r1, sl
   1c208:	mov	r0, r5
   1c20c:	str	ip, [sp]
   1c210:	bl	1aec0 <__flatcc_gen_sort@@Base+0x15c>
   1c214:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c218:	ldrh	r3, [r2, #10]
   1c21c:	ldr	r0, [r5, #204]	; 0xcc
   1c220:	tst	r3, #8
   1c224:	bne	1c9ec <__flatcc_gen_sort@@Base+0x1c88>
   1c228:	ldr	r1, [pc, #3348]	; 1cf44 <__flatcc_gen_sort@@Base+0x21e0>
   1c22c:	mov	r2, r5
   1c230:	str	r5, [sp, #8]
   1c234:	str	sl, [sp, #12]
   1c238:	str	r7, [sp, #16]
   1c23c:	str	r6, [sp, #20]
   1c240:	str	fp, [sp, #24]
   1c244:	add	r1, pc, r1
   1c248:	str	fp, [sp, #28]
   1c24c:	ldrd	r6, [r4, #96]	; 0x60
   1c250:	strd	r6, [sp]
   1c254:	bl	13f58 <fprintf@plt>
   1c258:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c25c:	ldrh	r3, [r2, #10]
   1c260:	ldr	r0, [r5, #204]	; 0xcc
   1c264:	tst	r3, #8
   1c268:	bne	1c9cc <__flatcc_gen_sort@@Base+0x1c68>
   1c26c:	ldr	r1, [pc, #3284]	; 1cf48 <__flatcc_gen_sort@@Base+0x21e4>
   1c270:	mov	r2, r5
   1c274:	str	r5, [sp, #8]
   1c278:	str	sl, [sp, #12]
   1c27c:	str	r7, [sp, #16]
   1c280:	str	r6, [sp, #20]
   1c284:	str	fp, [sp, #24]
   1c288:	add	r1, pc, r1
   1c28c:	ldrd	r6, [r4, #96]	; 0x60
   1c290:	strd	r6, [sp]
   1c294:	bl	13f58 <fprintf@plt>
   1c298:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c29c:	ldr	r1, [pc, #3240]	; 1cf4c <__flatcc_gen_sort@@Base+0x21e8>
   1c2a0:	mov	r2, r5
   1c2a4:	str	r5, [sp, #8]
   1c2a8:	str	sl, [sp, #12]
   1c2ac:	str	r7, [sp, #16]
   1c2b0:	str	r6, [sp, #20]
   1c2b4:	str	fp, [sp, #24]
   1c2b8:	add	r1, pc, r1
   1c2bc:	ldrd	r8, [r4, #96]	; 0x60
   1c2c0:	strd	r8, [sp]
   1c2c4:	ldr	r0, [r5, #204]	; 0xcc
   1c2c8:	bl	13f58 <fprintf@plt>
   1c2cc:	mov	r0, #0
   1c2d0:	b	1c1f4 <__flatcc_gen_sort@@Base+0x1490>
   1c2d4:	ldrh	r3, [r4, #56]	; 0x38
   1c2d8:	ldr	r2, [r2, #40]	; 0x28
   1c2dc:	sub	r3, r3, #3
   1c2e0:	cmp	r3, #3
   1c2e4:	addls	pc, pc, r3, lsl #2
   1c2e8:	b	1d8bc <__flatcc_gen_sort@@Base+0x2b58>
   1c2ec:	b	1c8bc <__flatcc_gen_sort@@Base+0x1b58>
   1c2f0:	b	1c888 <__flatcc_gen_sort@@Base+0x1b24>
   1c2f4:	b	1c854 <__flatcc_gen_sort@@Base+0x1af0>
   1c2f8:	b	1c820 <__flatcc_gen_sort@@Base+0x1abc>
   1c2fc:	ldrh	r3, [r4, #74]	; 0x4a
   1c300:	mov	r2, r5
   1c304:	ldr	r1, [pc, #3140]	; 1cf50 <__flatcc_gen_sort@@Base+0x21ec>
   1c308:	str	r3, [sp, #40]	; 0x28
   1c30c:	ldrd	r8, [r4, #88]	; 0x58
   1c310:	str	r5, [sp, #8]
   1c314:	add	r1, pc, r1
   1c318:	str	sl, [sp, #12]
   1c31c:	str	r7, [sp, #16]
   1c320:	str	r6, [sp, #20]
   1c324:	str	fp, [sp, #24]
   1c328:	strd	r8, [sp, #32]
   1c32c:	ldrd	r6, [r4, #96]	; 0x60
   1c330:	ldr	r0, [r5, #204]	; 0xcc
   1c334:	strd	r6, [sp]
   1c338:	bl	13f58 <fprintf@plt>
   1c33c:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c340:	ldr	r1, [pc, #3084]	; 1cf54 <__flatcc_gen_sort@@Base+0x21f0>
   1c344:	mov	r2, r5
   1c348:	str	r5, [sp, #8]
   1c34c:	str	sl, [sp, #12]
   1c350:	str	r7, [sp, #16]
   1c354:	str	r6, [sp, #20]
   1c358:	str	fp, [sp, #24]
   1c35c:	add	r1, pc, r1
   1c360:	ldrd	r6, [r4, #96]	; 0x60
   1c364:	strd	r6, [sp]
   1c368:	ldr	r0, [r5, #204]	; 0xcc
   1c36c:	bl	13f58 <fprintf@plt>
   1c370:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c374:	str	r5, [sp, #8]
   1c378:	mov	r2, r5
   1c37c:	str	sl, [sp, #12]
   1c380:	str	r7, [sp, #16]
   1c384:	str	r6, [sp, #20]
   1c388:	str	fp, [sp, #24]
   1c38c:	str	fp, [sp, #28]
   1c390:	ldrd	r6, [r4, #96]	; 0x60
   1c394:	ldr	r1, [sp, #80]	; 0x50
   1c398:	ldr	r0, [r5, #204]	; 0xcc
   1c39c:	strd	r6, [sp]
   1c3a0:	bl	13f58 <fprintf@plt>
   1c3a4:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c3a8:	ldr	r1, [pc, #2984]	; 1cf58 <__flatcc_gen_sort@@Base+0x21f4>
   1c3ac:	ldr	r3, [sp, #84]	; 0x54
   1c3b0:	add	r1, pc, r1
   1c3b4:	mov	r0, r3
   1c3b8:	str	r5, [sp, #8]
   1c3bc:	mov	r2, r5
   1c3c0:	str	sl, [sp, #12]
   1c3c4:	str	r7, [sp, #16]
   1c3c8:	str	r6, [sp, #20]
   1c3cc:	str	r5, [sp, #24]
   1c3d0:	str	r3, [sp, #28]
   1c3d4:	str	r1, [sp, #32]
   1c3d8:	ldr	r1, [pc, #2940]	; 1cf5c <__flatcc_gen_sort@@Base+0x21f8>
   1c3dc:	str	r0, [sp, #36]	; 0x24
   1c3e0:	ldrd	r8, [r4, #96]	; 0x60
   1c3e4:	add	r1, pc, r1
   1c3e8:	strd	r8, [sp]
   1c3ec:	ldr	r0, [r5, #204]	; 0xcc
   1c3f0:	bl	13f58 <fprintf@plt>
   1c3f4:	ldr	r1, [r4, #104]	; 0x68
   1c3f8:	cmp	r1, #0
   1c3fc:	beq	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c400:	ldrh	r3, [r1, #8]
   1c404:	cmp	r3, #0
   1c408:	bne	1c65c <__flatcc_gen_sort@@Base+0x18f8>
   1c40c:	mov	r2, fp
   1c410:	ldr	r0, [r1, #12]
   1c414:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1c418:	ldr	r1, [pc, #2880]	; 1cf60 <__flatcc_gen_sort@@Base+0x21fc>
   1c41c:	mov	r3, r5
   1c420:	mov	r2, r5
   1c424:	str	sl, [sp]
   1c428:	str	r7, [sp, #4]
   1c42c:	str	r6, [sp, #8]
   1c430:	str	fp, [sp, #12]
   1c434:	add	r1, pc, r1
   1c438:	str	fp, [sp, #16]
   1c43c:	str	fp, [sp, #20]
   1c440:	ldr	r0, [r5, #204]	; 0xcc
   1c444:	bl	13f58 <fprintf@plt>
   1c448:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c44c:	ldr	r0, [pc, #2832]	; 1cf64 <__flatcc_gen_sort@@Base+0x2200>
   1c450:	ldr	r1, [pc, #2832]	; 1cf68 <__flatcc_gen_sort@@Base+0x2204>
   1c454:	ldr	r3, [pc, #2832]	; 1cf6c <__flatcc_gen_sort@@Base+0x2208>
   1c458:	add	r0, pc, r0
   1c45c:	add	r1, pc, r1
   1c460:	add	r3, pc, r3
   1c464:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c468:	ldr	r0, [pc, #2816]	; 1cf70 <__flatcc_gen_sort@@Base+0x220c>
   1c46c:	ldr	r1, [pc, #2816]	; 1cf74 <__flatcc_gen_sort@@Base+0x2210>
   1c470:	ldr	r3, [pc, #2816]	; 1cf78 <__flatcc_gen_sort@@Base+0x2214>
   1c474:	add	r0, pc, r0
   1c478:	add	r1, pc, r1
   1c47c:	add	r3, pc, r3
   1c480:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c484:	ldrh	r2, [r4, #56]	; 0x38
   1c488:	sub	r2, r2, #3
   1c48c:	cmp	r2, #3
   1c490:	addls	pc, pc, r2, lsl #2
   1c494:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c498:	b	1c9b0 <__flatcc_gen_sort@@Base+0x1c4c>
   1c49c:	b	1cf08 <__flatcc_gen_sort@@Base+0x21a4>
   1c4a0:	b	1d324 <__flatcc_gen_sort@@Base+0x25c0>
   1c4a4:	b	1d39c <__flatcc_gen_sort@@Base+0x2638>
   1c4a8:	ldrh	r2, [r4, #56]	; 0x38
   1c4ac:	sub	r2, r2, #3
   1c4b0:	cmp	r2, #3
   1c4b4:	addls	pc, pc, r2, lsl #2
   1c4b8:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c4bc:	b	1c988 <__flatcc_gen_sort@@Base+0x1c24>
   1c4c0:	b	1d344 <__flatcc_gen_sort@@Base+0x25e0>
   1c4c4:	b	1d374 <__flatcc_gen_sort@@Base+0x2610>
   1c4c8:	b	1ceec <__flatcc_gen_sort@@Base+0x2188>
   1c4cc:	ldrh	r1, [r4, #56]	; 0x38
   1c4d0:	sub	r1, r1, #3
   1c4d4:	cmp	r1, #3
   1c4d8:	addls	pc, pc, r1, lsl #2
   1c4dc:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c4e0:	b	1ccf8 <__flatcc_gen_sort@@Base+0x1f94>
   1c4e4:	b	1cd28 <__flatcc_gen_sort@@Base+0x1fc4>
   1c4e8:	b	1cd50 <__flatcc_gen_sort@@Base+0x1fec>
   1c4ec:	b	1cd78 <__flatcc_gen_sort@@Base+0x2014>
   1c4f0:	ldrh	r2, [r4, #56]	; 0x38
   1c4f4:	sub	r2, r2, #3
   1c4f8:	cmp	r2, #3
   1c4fc:	addls	pc, pc, r2, lsl #2
   1c500:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c504:	b	1cbd0 <__flatcc_gen_sort@@Base+0x1e6c>
   1c508:	b	1cc18 <__flatcc_gen_sort@@Base+0x1eb4>
   1c50c:	b	1cc38 <__flatcc_gen_sort@@Base+0x1ed4>
   1c510:	b	1cc58 <__flatcc_gen_sort@@Base+0x1ef4>
   1c514:	ldrh	r1, [r4, #56]	; 0x38
   1c518:	sub	r1, r1, #3
   1c51c:	cmp	r1, #3
   1c520:	addls	pc, pc, r1, lsl #2
   1c524:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c528:	b	1ce20 <__flatcc_gen_sort@@Base+0x20bc>
   1c52c:	b	1cec4 <__flatcc_gen_sort@@Base+0x2160>
   1c530:	b	1cda8 <__flatcc_gen_sort@@Base+0x2044>
   1c534:	b	1cb70 <__flatcc_gen_sort@@Base+0x1e0c>
   1c538:	ldrh	r1, [r4, #56]	; 0x38
   1c53c:	sub	r1, r1, #3
   1c540:	cmp	r1, #3
   1c544:	addls	pc, pc, r1, lsl #2
   1c548:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c54c:	b	1ce8c <__flatcc_gen_sort@@Base+0x2128>
   1c550:	b	1ce3c <__flatcc_gen_sort@@Base+0x20d8>
   1c554:	b	1ce64 <__flatcc_gen_sort@@Base+0x2100>
   1c558:	b	1cba0 <__flatcc_gen_sort@@Base+0x1e3c>
   1c55c:	ldrh	r1, [r4, #56]	; 0x38
   1c560:	sub	r1, r1, #3
   1c564:	cmp	r1, #3
   1c568:	addls	pc, pc, r1, lsl #2
   1c56c:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c570:	b	1cea8 <__flatcc_gen_sort@@Base+0x2144>
   1c574:	b	1cdd0 <__flatcc_gen_sort@@Base+0x206c>
   1c578:	b	1cdf8 <__flatcc_gen_sort@@Base+0x2094>
   1c57c:	b	1cb10 <__flatcc_gen_sort@@Base+0x1dac>
   1c580:	ldr	r0, [pc, #2548]	; 1cf7c <__flatcc_gen_sort@@Base+0x2218>
   1c584:	ldr	r1, [pc, #2548]	; 1cf80 <__flatcc_gen_sort@@Base+0x221c>
   1c588:	ldr	r3, [pc, #2548]	; 1cf84 <__flatcc_gen_sort@@Base+0x2220>
   1c58c:	add	r0, pc, r0
   1c590:	add	r1, pc, r1
   1c594:	add	r3, pc, r3
   1c598:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c59c:	ldr	r0, [pc, #2532]	; 1cf88 <__flatcc_gen_sort@@Base+0x2224>
   1c5a0:	ldr	r1, [pc, #2532]	; 1cf8c <__flatcc_gen_sort@@Base+0x2228>
   1c5a4:	ldr	r3, [pc, #2532]	; 1cf90 <__flatcc_gen_sort@@Base+0x222c>
   1c5a8:	add	r0, pc, r0
   1c5ac:	add	r1, pc, r1
   1c5b0:	add	r3, pc, r3
   1c5b4:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c5b8:	ldr	r1, [pc, #2516]	; 1cf94 <__flatcc_gen_sort@@Base+0x2230>
   1c5bc:	ldr	r3, [sp, #88]	; 0x58
   1c5c0:	add	r1, pc, r1
   1c5c4:	mov	r0, r3
   1c5c8:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c5cc:	ldr	r0, [pc, #2500]	; 1cf98 <__flatcc_gen_sort@@Base+0x2234>
   1c5d0:	ldr	r1, [pc, #2500]	; 1cf9c <__flatcc_gen_sort@@Base+0x2238>
   1c5d4:	ldr	r3, [pc, #2500]	; 1cfa0 <__flatcc_gen_sort@@Base+0x223c>
   1c5d8:	add	r0, pc, r0
   1c5dc:	add	r1, pc, r1
   1c5e0:	add	r3, pc, r3
   1c5e4:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c5e8:	ldr	r0, [pc, #2484]	; 1cfa4 <__flatcc_gen_sort@@Base+0x2240>
   1c5ec:	ldr	r1, [pc, #2484]	; 1cfa8 <__flatcc_gen_sort@@Base+0x2244>
   1c5f0:	ldr	r3, [pc, #2484]	; 1cfac <__flatcc_gen_sort@@Base+0x2248>
   1c5f4:	add	r0, pc, r0
   1c5f8:	add	r1, pc, r1
   1c5fc:	add	r3, pc, r3
   1c600:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c604:	ldr	r0, [pc, #2468]	; 1cfb0 <__flatcc_gen_sort@@Base+0x224c>
   1c608:	ldr	r1, [pc, #2468]	; 1cfb4 <__flatcc_gen_sort@@Base+0x2250>
   1c60c:	ldr	r3, [pc, #2468]	; 1cfb8 <__flatcc_gen_sort@@Base+0x2254>
   1c610:	add	r0, pc, r0
   1c614:	add	r1, pc, r1
   1c618:	add	r3, pc, r3
   1c61c:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c620:	ldr	r0, [pc, #2452]	; 1cfbc <__flatcc_gen_sort@@Base+0x2258>
   1c624:	ldr	r1, [pc, #2452]	; 1cfc0 <__flatcc_gen_sort@@Base+0x225c>
   1c628:	ldr	r3, [pc, #2452]	; 1cfc4 <__flatcc_gen_sort@@Base+0x2260>
   1c62c:	add	r0, pc, r0
   1c630:	add	r1, pc, r1
   1c634:	add	r3, pc, r3
   1c638:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c63c:	ldr	r1, [pc, #2436]	; 1cfc8 <__flatcc_gen_sort@@Base+0x2264>
   1c640:	mov	r3, r7
   1c644:	mov	r2, sl
   1c648:	str	r6, [sp]
   1c64c:	ldr	r0, [r5, #204]	; 0xcc
   1c650:	add	r1, pc, r1
   1c654:	bl	13f58 <fprintf@plt>
   1c658:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c65c:	cmp	r3, #1
   1c660:	bne	1d770 <__flatcc_gen_sort@@Base+0x2a0c>
   1c664:	mov	r2, fp
   1c668:	ldr	r0, [r1, #12]
   1c66c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1c670:	str	fp, [sp, #20]
   1c674:	mov	r3, r5
   1c678:	mov	r2, r5
   1c67c:	str	fp, [sp, #24]
   1c680:	ldr	r0, [r4, #104]	; 0x68
   1c684:	ldr	r1, [pc, #2368]	; 1cfcc <__flatcc_gen_sort@@Base+0x2268>
   1c688:	ldrh	r0, [r0, #104]	; 0x68
   1c68c:	str	sl, [sp]
   1c690:	add	r1, pc, r1
   1c694:	str	r7, [sp, #4]
   1c698:	str	r6, [sp, #8]
   1c69c:	str	fp, [sp, #12]
   1c6a0:	str	r0, [sp, #16]
   1c6a4:	ldr	r0, [r5, #204]	; 0xcc
   1c6a8:	bl	13f58 <fprintf@plt>
   1c6ac:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c6b0:	ldrh	r3, [r4, #56]	; 0x38
   1c6b4:	sub	r3, r3, #3
   1c6b8:	cmp	r3, #3
   1c6bc:	addls	pc, pc, r3, lsl #2
   1c6c0:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1c6c4:	b	1c76c <__flatcc_gen_sort@@Base+0x1a08>
   1c6c8:	b	1c720 <__flatcc_gen_sort@@Base+0x19bc>
   1c6cc:	b	1c6d4 <__flatcc_gen_sort@@Base+0x1970>
   1c6d0:	b	1ca30 <__flatcc_gen_sort@@Base+0x1ccc>
   1c6d4:	ldr	r3, [pc, #2292]	; 1cfd0 <__flatcc_gen_sort@@Base+0x226c>
   1c6d8:	str	r5, [sp, #72]	; 0x48
   1c6dc:	ldr	r2, [pc, #2288]	; 1cfd4 <__flatcc_gen_sort@@Base+0x2270>
   1c6e0:	add	r3, pc, r3
   1c6e4:	add	r2, pc, r2
   1c6e8:	strd	r2, [sp, #64]	; 0x40
   1c6ec:	mov	r3, #4
   1c6f0:	cmp	r3, #8
   1c6f4:	addls	pc, pc, r3, lsl #2
   1c6f8:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1c6fc:	b	1ca80 <__flatcc_gen_sort@@Base+0x1d1c>
   1c700:	b	1ca8c <__flatcc_gen_sort@@Base+0x1d28>
   1c704:	b	1ca98 <__flatcc_gen_sort@@Base+0x1d34>
   1c708:	b	1c930 <__flatcc_gen_sort@@Base+0x1bcc>
   1c70c:	b	1c930 <__flatcc_gen_sort@@Base+0x1bcc>
   1c710:	b	1caf8 <__flatcc_gen_sort@@Base+0x1d94>
   1c714:	b	1cb04 <__flatcc_gen_sort@@Base+0x1da0>
   1c718:	b	1ca74 <__flatcc_gen_sort@@Base+0x1d10>
   1c71c:	b	1caec <__flatcc_gen_sort@@Base+0x1d88>
   1c720:	ldr	r3, [pc, #2224]	; 1cfd8 <__flatcc_gen_sort@@Base+0x2274>
   1c724:	str	r5, [sp, #72]	; 0x48
   1c728:	ldr	r2, [pc, #2220]	; 1cfdc <__flatcc_gen_sort@@Base+0x2278>
   1c72c:	add	r3, pc, r3
   1c730:	add	r2, pc, r2
   1c734:	strd	r2, [sp, #64]	; 0x40
   1c738:	mov	r3, #4
   1c73c:	cmp	r3, #8
   1c740:	addls	pc, pc, r3, lsl #2
   1c744:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1c748:	b	1cac8 <__flatcc_gen_sort@@Base+0x1d64>
   1c74c:	b	1cad4 <__flatcc_gen_sort@@Base+0x1d70>
   1c750:	b	1cae0 <__flatcc_gen_sort@@Base+0x1d7c>
   1c754:	b	1c95c <__flatcc_gen_sort@@Base+0x1bf8>
   1c758:	b	1c95c <__flatcc_gen_sort@@Base+0x1bf8>
   1c75c:	b	1caa4 <__flatcc_gen_sort@@Base+0x1d40>
   1c760:	b	1cab0 <__flatcc_gen_sort@@Base+0x1d4c>
   1c764:	b	1cabc <__flatcc_gen_sort@@Base+0x1d58>
   1c768:	b	1d368 <__flatcc_gen_sort@@Base+0x2604>
   1c76c:	ldr	r3, [pc, #2156]	; 1cfe0 <__flatcc_gen_sort@@Base+0x227c>
   1c770:	str	r5, [sp, #72]	; 0x48
   1c774:	add	r3, pc, r3
   1c778:	str	r3, [sp, #68]	; 0x44
   1c77c:	ldr	r3, [pc, #2144]	; 1cfe4 <__flatcc_gen_sort@@Base+0x2280>
   1c780:	add	r3, pc, r3
   1c784:	str	r3, [sp, #64]	; 0x40
   1c788:	ldr	r1, [pc, #2136]	; 1cfe8 <__flatcc_gen_sort@@Base+0x2284>
   1c78c:	add	r3, sp, #100	; 0x64
   1c790:	mov	r0, r3
   1c794:	str	r3, [sp, #60]	; 0x3c
   1c798:	ldrd	r2, [r4, #48]	; 0x30
   1c79c:	add	r1, pc, r1
   1c7a0:	bl	13fc4 <sprintf@plt>
   1c7a4:	ldr	r3, [sp, #60]	; 0x3c
   1c7a8:	mov	r2, r5
   1c7ac:	ldr	r1, [pc, #2104]	; 1cfec <__flatcc_gen_sort@@Base+0x2288>
   1c7b0:	str	r3, [sp, #52]	; 0x34
   1c7b4:	ldrh	r3, [r4, #74]	; 0x4a
   1c7b8:	add	r1, pc, r1
   1c7bc:	str	r3, [sp, #48]	; 0x30
   1c7c0:	ldr	r3, [sp, #64]	; 0x40
   1c7c4:	ldrd	r8, [r4, #88]	; 0x58
   1c7c8:	str	r5, [sp, #8]
   1c7cc:	str	sl, [sp, #12]
   1c7d0:	str	r7, [sp, #16]
   1c7d4:	str	r3, [sp, #28]
   1c7d8:	ldr	r3, [sp, #72]	; 0x48
   1c7dc:	str	r6, [sp, #20]
   1c7e0:	str	r5, [sp, #24]
   1c7e4:	str	r3, [sp, #32]
   1c7e8:	ldr	r3, [sp, #68]	; 0x44
   1c7ec:	strd	r8, [sp, #40]	; 0x28
   1c7f0:	str	r3, [sp, #36]	; 0x24
   1c7f4:	ldrd	r6, [r4, #96]	; 0x60
   1c7f8:	ldr	r0, [r5, #204]	; 0xcc
   1c7fc:	strd	r6, [sp]
   1c800:	bl	13f58 <fprintf@plt>
   1c804:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c808:	ldr	r0, [pc, #2016]	; 1cff0 <__flatcc_gen_sort@@Base+0x228c>
   1c80c:	mov	r1, r5
   1c810:	ldr	r3, [pc, #2012]	; 1cff4 <__flatcc_gen_sort@@Base+0x2290>
   1c814:	add	r0, pc, r0
   1c818:	add	r3, pc, r3
   1c81c:	b	1c3b8 <__flatcc_gen_sort@@Base+0x1654>
   1c820:	sub	r2, r2, #1
   1c824:	cmp	r2, #8
   1c828:	addls	pc, pc, r2, lsl #2
   1c82c:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1c830:	b	1d4bc <__flatcc_gen_sort@@Base+0x2758>
   1c834:	b	1d4c8 <__flatcc_gen_sort@@Base+0x2764>
   1c838:	b	1d594 <__flatcc_gen_sort@@Base+0x2830>
   1c83c:	b	1d3dc <__flatcc_gen_sort@@Base+0x2678>
   1c840:	b	1d3dc <__flatcc_gen_sort@@Base+0x2678>
   1c844:	b	1d4b0 <__flatcc_gen_sort@@Base+0x274c>
   1c848:	b	1d540 <__flatcc_gen_sort@@Base+0x27dc>
   1c84c:	b	1d54c <__flatcc_gen_sort@@Base+0x27e8>
   1c850:	b	1d4a4 <__flatcc_gen_sort@@Base+0x2740>
   1c854:	sub	r2, r2, #1
   1c858:	cmp	r2, #8
   1c85c:	addls	pc, pc, r2, lsl #2
   1c860:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1c864:	b	1d558 <__flatcc_gen_sort@@Base+0x27f4>
   1c868:	b	1d564 <__flatcc_gen_sort@@Base+0x2800>
   1c86c:	b	1d588 <__flatcc_gen_sort@@Base+0x2824>
   1c870:	b	1d404 <__flatcc_gen_sort@@Base+0x26a0>
   1c874:	b	1d404 <__flatcc_gen_sort@@Base+0x26a0>
   1c878:	b	1d57c <__flatcc_gen_sort@@Base+0x2818>
   1c87c:	b	1d4ec <__flatcc_gen_sort@@Base+0x2788>
   1c880:	b	1d4f8 <__flatcc_gen_sort@@Base+0x2794>
   1c884:	b	1d570 <__flatcc_gen_sort@@Base+0x280c>
   1c888:	sub	r2, r2, #1
   1c88c:	cmp	r2, #8
   1c890:	addls	pc, pc, r2, lsl #2
   1c894:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1c898:	b	1d504 <__flatcc_gen_sort@@Base+0x27a0>
   1c89c:	b	1d510 <__flatcc_gen_sort@@Base+0x27ac>
   1c8a0:	b	1d534 <__flatcc_gen_sort@@Base+0x27d0>
   1c8a4:	b	1d3b0 <__flatcc_gen_sort@@Base+0x264c>
   1c8a8:	b	1d3b0 <__flatcc_gen_sort@@Base+0x264c>
   1c8ac:	b	1d528 <__flatcc_gen_sort@@Base+0x27c4>
   1c8b0:	b	1d4d4 <__flatcc_gen_sort@@Base+0x2770>
   1c8b4:	b	1d4e0 <__flatcc_gen_sort@@Base+0x277c>
   1c8b8:	b	1d51c <__flatcc_gen_sort@@Base+0x27b8>
   1c8bc:	cmp	r2, #11
   1c8c0:	beq	1d430 <__flatcc_gen_sort@@Base+0x26cc>
   1c8c4:	ldr	r1, [pc, #1836]	; 1cff8 <__flatcc_gen_sort@@Base+0x2294>
   1c8c8:	add	r3, sp, #100	; 0x64
   1c8cc:	mov	r0, r3
   1c8d0:	str	r3, [sp, #60]	; 0x3c
   1c8d4:	ldrd	r2, [r4, #48]	; 0x30
   1c8d8:	add	r1, pc, r1
   1c8dc:	bl	13fc4 <sprintf@plt>
   1c8e0:	ldr	r3, [sp, #60]	; 0x3c
   1c8e4:	mov	r2, r5
   1c8e8:	ldr	r1, [pc, #1804]	; 1cffc <__flatcc_gen_sort@@Base+0x2298>
   1c8ec:	str	r3, [sp, #44]	; 0x2c
   1c8f0:	ldrh	r3, [r4, #74]	; 0x4a
   1c8f4:	add	r1, pc, r1
   1c8f8:	str	r3, [sp, #40]	; 0x28
   1c8fc:	ldrd	r8, [r4, #88]	; 0x58
   1c900:	str	r5, [sp, #8]
   1c904:	str	sl, [sp, #12]
   1c908:	str	r7, [sp, #16]
   1c90c:	str	r6, [sp, #20]
   1c910:	str	fp, [sp, #24]
   1c914:	str	fp, [sp, #28]
   1c918:	strd	r8, [sp, #32]
   1c91c:	ldrd	r6, [r4, #96]	; 0x60
   1c920:	ldr	r0, [r5, #204]	; 0xcc
   1c924:	strd	r6, [sp]
   1c928:	bl	13f58 <fprintf@plt>
   1c92c:	b	1c0cc <__flatcc_gen_sort@@Base+0x1368>
   1c930:	ldr	r2, [pc, #1736]	; 1d000 <__flatcc_gen_sort@@Base+0x229c>
   1c934:	add	r2, pc, r2
   1c938:	ldr	r1, [pc, #1732]	; 1d004 <__flatcc_gen_sort@@Base+0x22a0>
   1c93c:	add	r3, sp, #100	; 0x64
   1c940:	mov	r0, r3
   1c944:	ldrd	r8, [r4, #48]	; 0x30
   1c948:	add	r1, pc, r1
   1c94c:	strd	r8, [sp]
   1c950:	str	r3, [sp, #60]	; 0x3c
   1c954:	bl	13fc4 <sprintf@plt>
   1c958:	b	1c7a4 <__flatcc_gen_sort@@Base+0x1a40>
   1c95c:	ldr	r2, [pc, #1700]	; 1d008 <__flatcc_gen_sort@@Base+0x22a4>
   1c960:	add	r2, pc, r2
   1c964:	ldr	r1, [pc, #1696]	; 1d00c <__flatcc_gen_sort@@Base+0x22a8>
   1c968:	add	r3, sp, #100	; 0x64
   1c96c:	mov	r0, r3
   1c970:	ldrd	r8, [r4, #48]	; 0x30
   1c974:	add	r1, pc, r1
   1c978:	strd	r8, [sp]
   1c97c:	str	r3, [sp, #60]	; 0x3c
   1c980:	bl	13fc4 <sprintf@plt>
   1c984:	b	1c7a4 <__flatcc_gen_sort@@Base+0x1a40>
   1c988:	ldr	r3, [pc, #1664]	; 1d010 <__flatcc_gen_sort@@Base+0x22ac>
   1c98c:	add	r3, pc, r3
   1c990:	str	r3, [sp, #68]	; 0x44
   1c994:	ldr	r3, [pc, #1656]	; 1d014 <__flatcc_gen_sort@@Base+0x22b0>
   1c998:	add	r3, pc, r3
   1c99c:	str	r3, [sp, #72]	; 0x48
   1c9a0:	ldr	r3, [pc, #1648]	; 1d018 <__flatcc_gen_sort@@Base+0x22b4>
   1c9a4:	add	r3, pc, r3
   1c9a8:	str	r3, [sp, #64]	; 0x40
   1c9ac:	b	1c788 <__flatcc_gen_sort@@Base+0x1a24>
   1c9b0:	ldr	r2, [pc, #1636]	; 1d01c <__flatcc_gen_sort@@Base+0x22b8>
   1c9b4:	ldr	r3, [pc, #1636]	; 1d020 <__flatcc_gen_sort@@Base+0x22bc>
   1c9b8:	add	r2, pc, r2
   1c9bc:	add	r3, pc, r3
   1c9c0:	str	r2, [sp, #64]	; 0x40
   1c9c4:	strd	r2, [sp, #68]	; 0x44
   1c9c8:	b	1c788 <__flatcc_gen_sort@@Base+0x1a24>
   1c9cc:	mov	r3, r0
   1c9d0:	ldr	r0, [pc, #1612]	; 1d024 <__flatcc_gen_sort@@Base+0x22c0>
   1c9d4:	mov	r2, #32
   1c9d8:	mov	r1, #1
   1c9dc:	add	r0, pc, r0
   1c9e0:	bl	13eec <fwrite@plt>
   1c9e4:	ldr	r0, [r5, #204]	; 0xcc
   1c9e8:	b	1c26c <__flatcc_gen_sort@@Base+0x1508>
   1c9ec:	mov	r3, r0
   1c9f0:	ldr	r0, [pc, #1584]	; 1d028 <__flatcc_gen_sort@@Base+0x22c4>
   1c9f4:	mov	r2, #32
   1c9f8:	mov	r1, #1
   1c9fc:	add	r0, pc, r0
   1ca00:	bl	13eec <fwrite@plt>
   1ca04:	ldr	r0, [r5, #204]	; 0xcc
   1ca08:	b	1c228 <__flatcc_gen_sort@@Base+0x14c4>
   1ca0c:	ldrh	r1, [r4, #56]	; 0x38
   1ca10:	sub	r1, r1, #3
   1ca14:	cmp	r1, #3
   1ca18:	addls	pc, pc, r1, lsl #2
   1ca1c:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1ca20:	b	1d754 <__flatcc_gen_sort@@Base+0x29f0>
   1ca24:	b	1d72c <__flatcc_gen_sort@@Base+0x29c8>
   1ca28:	b	1d704 <__flatcc_gen_sort@@Base+0x29a0>
   1ca2c:	b	1cb40 <__flatcc_gen_sort@@Base+0x1ddc>
   1ca30:	ldr	r3, [pc, #1524]	; 1d02c <__flatcc_gen_sort@@Base+0x22c8>
   1ca34:	str	r5, [sp, #72]	; 0x48
   1ca38:	ldr	r2, [pc, #1520]	; 1d030 <__flatcc_gen_sort@@Base+0x22cc>
   1ca3c:	add	r3, pc, r3
   1ca40:	str	r3, [sp, #68]	; 0x44
   1ca44:	add	r2, pc, r2
   1ca48:	ldr	r3, [pc, #1508]	; 1d034 <__flatcc_gen_sort@@Base+0x22d0>
   1ca4c:	add	r3, pc, r3
   1ca50:	str	r3, [sp, #64]	; 0x40
   1ca54:	ldr	r1, [pc, #1500]	; 1d038 <__flatcc_gen_sort@@Base+0x22d4>
   1ca58:	add	r3, sp, #100	; 0x64
   1ca5c:	mov	r0, r3
   1ca60:	str	r3, [sp, #60]	; 0x3c
   1ca64:	ldrb	r3, [r4, #48]	; 0x30
   1ca68:	add	r1, pc, r1
   1ca6c:	bl	13fc4 <sprintf@plt>
   1ca70:	b	1c7a4 <__flatcc_gen_sort@@Base+0x1a40>
   1ca74:	ldr	r2, [pc, #1472]	; 1d03c <__flatcc_gen_sort@@Base+0x22d8>
   1ca78:	add	r2, pc, r2
   1ca7c:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1ca80:	ldr	r2, [pc, #1464]	; 1d040 <__flatcc_gen_sort@@Base+0x22dc>
   1ca84:	add	r2, pc, r2
   1ca88:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1ca8c:	ldr	r2, [pc, #1456]	; 1d044 <__flatcc_gen_sort@@Base+0x22e0>
   1ca90:	add	r2, pc, r2
   1ca94:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1ca98:	ldr	r2, [pc, #1448]	; 1d048 <__flatcc_gen_sort@@Base+0x22e4>
   1ca9c:	add	r2, pc, r2
   1caa0:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1caa4:	ldr	r2, [pc, #1440]	; 1d04c <__flatcc_gen_sort@@Base+0x22e8>
   1caa8:	add	r2, pc, r2
   1caac:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1cab0:	ldr	r2, [pc, #1432]	; 1d050 <__flatcc_gen_sort@@Base+0x22ec>
   1cab4:	add	r2, pc, r2
   1cab8:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1cabc:	ldr	r2, [pc, #1424]	; 1d054 <__flatcc_gen_sort@@Base+0x22f0>
   1cac0:	add	r2, pc, r2
   1cac4:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1cac8:	ldr	r2, [pc, #1416]	; 1d058 <__flatcc_gen_sort@@Base+0x22f4>
   1cacc:	add	r2, pc, r2
   1cad0:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1cad4:	ldr	r2, [pc, #1408]	; 1d05c <__flatcc_gen_sort@@Base+0x22f8>
   1cad8:	add	r2, pc, r2
   1cadc:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1cae0:	ldr	r2, [pc, #1400]	; 1d060 <__flatcc_gen_sort@@Base+0x22fc>
   1cae4:	add	r2, pc, r2
   1cae8:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1caec:	ldr	r2, [pc, #1392]	; 1d064 <__flatcc_gen_sort@@Base+0x2300>
   1caf0:	add	r2, pc, r2
   1caf4:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1caf8:	ldr	r2, [pc, #1384]	; 1d068 <__flatcc_gen_sort@@Base+0x2304>
   1cafc:	add	r2, pc, r2
   1cb00:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1cb04:	ldr	r2, [pc, #1376]	; 1d06c <__flatcc_gen_sort@@Base+0x2308>
   1cb08:	add	r2, pc, r2
   1cb0c:	b	1c938 <__flatcc_gen_sort@@Base+0x1bd4>
   1cb10:	ldr	r3, [pc, #1368]	; 1d070 <__flatcc_gen_sort@@Base+0x230c>
   1cb14:	add	r3, pc, r3
   1cb18:	str	r3, [sp, #68]	; 0x44
   1cb1c:	ldr	r3, [pc, #1360]	; 1d074 <__flatcc_gen_sort@@Base+0x2310>
   1cb20:	add	r3, pc, r3
   1cb24:	str	r3, [sp, #64]	; 0x40
   1cb28:	ldr	r3, [pc, #1352]	; 1d078 <__flatcc_gen_sort@@Base+0x2314>
   1cb2c:	ldr	r2, [pc, #1352]	; 1d07c <__flatcc_gen_sort@@Base+0x2318>
   1cb30:	add	r3, pc, r3
   1cb34:	add	r2, pc, r2
   1cb38:	str	r3, [sp, #72]	; 0x48
   1cb3c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cb40:	ldr	r3, [pc, #1336]	; 1d080 <__flatcc_gen_sort@@Base+0x231c>
   1cb44:	add	r3, pc, r3
   1cb48:	str	r3, [sp, #68]	; 0x44
   1cb4c:	ldr	r3, [pc, #1328]	; 1d084 <__flatcc_gen_sort@@Base+0x2320>
   1cb50:	add	r3, pc, r3
   1cb54:	str	r3, [sp, #64]	; 0x40
   1cb58:	ldr	r3, [pc, #1320]	; 1d088 <__flatcc_gen_sort@@Base+0x2324>
   1cb5c:	ldr	r2, [pc, #1320]	; 1d08c <__flatcc_gen_sort@@Base+0x2328>
   1cb60:	add	r3, pc, r3
   1cb64:	add	r2, pc, r2
   1cb68:	str	r3, [sp, #72]	; 0x48
   1cb6c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cb70:	ldr	r3, [pc, #1304]	; 1d090 <__flatcc_gen_sort@@Base+0x232c>
   1cb74:	add	r3, pc, r3
   1cb78:	str	r3, [sp, #68]	; 0x44
   1cb7c:	ldr	r3, [pc, #1296]	; 1d094 <__flatcc_gen_sort@@Base+0x2330>
   1cb80:	add	r3, pc, r3
   1cb84:	str	r3, [sp, #64]	; 0x40
   1cb88:	ldr	r3, [pc, #1288]	; 1d098 <__flatcc_gen_sort@@Base+0x2334>
   1cb8c:	ldr	r2, [pc, #1288]	; 1d09c <__flatcc_gen_sort@@Base+0x2338>
   1cb90:	add	r3, pc, r3
   1cb94:	add	r2, pc, r2
   1cb98:	str	r3, [sp, #72]	; 0x48
   1cb9c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cba0:	ldr	r3, [pc, #1272]	; 1d0a0 <__flatcc_gen_sort@@Base+0x233c>
   1cba4:	add	r3, pc, r3
   1cba8:	str	r3, [sp, #68]	; 0x44
   1cbac:	ldr	r3, [pc, #1264]	; 1d0a4 <__flatcc_gen_sort@@Base+0x2340>
   1cbb0:	add	r3, pc, r3
   1cbb4:	str	r3, [sp, #64]	; 0x40
   1cbb8:	ldr	r3, [pc, #1256]	; 1d0a8 <__flatcc_gen_sort@@Base+0x2344>
   1cbbc:	ldr	r2, [pc, #1256]	; 1d0ac <__flatcc_gen_sort@@Base+0x2348>
   1cbc0:	add	r3, pc, r3
   1cbc4:	add	r2, pc, r2
   1cbc8:	str	r3, [sp, #72]	; 0x48
   1cbcc:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cbd0:	ldr	r3, [pc, #1240]	; 1d0b0 <__flatcc_gen_sort@@Base+0x234c>
   1cbd4:	add	r3, pc, r3
   1cbd8:	str	r3, [sp, #64]	; 0x40
   1cbdc:	str	r3, [sp, #68]	; 0x44
   1cbe0:	vldr	d7, [r4, #48]	; 0x30
   1cbe4:	add	r3, sp, #100	; 0x64
   1cbe8:	mov	r0, r3
   1cbec:	str	r3, [sp, #60]	; 0x3c
   1cbf0:	ldr	r3, [pc, #1212]	; 1d0b4 <__flatcc_gen_sort@@Base+0x2350>
   1cbf4:	ldr	r1, [pc, #1212]	; 1d0b8 <__flatcc_gen_sort@@Base+0x2354>
   1cbf8:	vcvt.f32.f64	s14, d7
   1cbfc:	add	r3, pc, r3
   1cc00:	add	r1, pc, r1
   1cc04:	str	r3, [sp, #72]	; 0x48
   1cc08:	vcvt.f64.f32	d7, s14
   1cc0c:	vmov	r2, r3, d7
   1cc10:	bl	13fc4 <sprintf@plt>
   1cc14:	b	1c7a4 <__flatcc_gen_sort@@Base+0x1a40>
   1cc18:	ldr	r1, [pc, #1180]	; 1d0bc <__flatcc_gen_sort@@Base+0x2358>
   1cc1c:	ldr	r2, [pc, #1180]	; 1d0c0 <__flatcc_gen_sort@@Base+0x235c>
   1cc20:	add	r1, pc, r1
   1cc24:	add	r2, pc, r2
   1cc28:	str	r1, [sp, #64]	; 0x40
   1cc2c:	str	r1, [sp, #68]	; 0x44
   1cc30:	str	r2, [sp, #72]	; 0x48
   1cc34:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1cc38:	ldr	r1, [pc, #1156]	; 1d0c4 <__flatcc_gen_sort@@Base+0x2360>
   1cc3c:	ldr	r2, [pc, #1156]	; 1d0c8 <__flatcc_gen_sort@@Base+0x2364>
   1cc40:	add	r1, pc, r1
   1cc44:	add	r2, pc, r2
   1cc48:	str	r1, [sp, #64]	; 0x40
   1cc4c:	str	r1, [sp, #68]	; 0x44
   1cc50:	str	r2, [sp, #72]	; 0x48
   1cc54:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1cc58:	ldr	r2, [pc, #1132]	; 1d0cc <__flatcc_gen_sort@@Base+0x2368>
   1cc5c:	add	r2, pc, r2
   1cc60:	str	r2, [sp, #64]	; 0x40
   1cc64:	str	r2, [sp, #68]	; 0x44
   1cc68:	cmp	r3, #8
   1cc6c:	addls	pc, pc, r3, lsl #2
   1cc70:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1cc74:	b	1cce0 <__flatcc_gen_sort@@Base+0x1f7c>
   1cc78:	b	1cb28 <__flatcc_gen_sort@@Base+0x1dc4>
   1cc7c:	b	1cbb8 <__flatcc_gen_sort@@Base+0x1e54>
   1cc80:	b	1cb88 <__flatcc_gen_sort@@Base+0x1e24>
   1cc84:	b	1d700 <__flatcc_gen_sort@@Base+0x299c>
   1cc88:	b	1cb58 <__flatcc_gen_sort@@Base+0x1df4>
   1cc8c:	b	1ccb0 <__flatcc_gen_sort@@Base+0x1f4c>
   1cc90:	b	1cd90 <__flatcc_gen_sort@@Base+0x202c>
   1cc94:	b	1ccc8 <__flatcc_gen_sort@@Base+0x1f64>
   1cc98:	ldr	r3, [pc, #1072]	; 1d0d0 <__flatcc_gen_sort@@Base+0x236c>
   1cc9c:	add	r3, pc, r3
   1cca0:	str	r3, [sp, #68]	; 0x44
   1cca4:	ldr	r3, [pc, #1064]	; 1d0d4 <__flatcc_gen_sort@@Base+0x2370>
   1cca8:	add	r3, pc, r3
   1ccac:	str	r3, [sp, #64]	; 0x40
   1ccb0:	ldr	r3, [pc, #1056]	; 1d0d8 <__flatcc_gen_sort@@Base+0x2374>
   1ccb4:	ldr	r2, [pc, #1056]	; 1d0dc <__flatcc_gen_sort@@Base+0x2378>
   1ccb8:	add	r3, pc, r3
   1ccbc:	add	r2, pc, r2
   1ccc0:	str	r3, [sp, #72]	; 0x48
   1ccc4:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1ccc8:	ldr	r3, [pc, #1040]	; 1d0e0 <__flatcc_gen_sort@@Base+0x237c>
   1cccc:	ldr	r2, [pc, #1040]	; 1d0e4 <__flatcc_gen_sort@@Base+0x2380>
   1ccd0:	add	r3, pc, r3
   1ccd4:	add	r2, pc, r2
   1ccd8:	str	r3, [sp, #72]	; 0x48
   1ccdc:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cce0:	ldr	r3, [pc, #1024]	; 1d0e8 <__flatcc_gen_sort@@Base+0x2384>
   1cce4:	ldr	r2, [pc, #1024]	; 1d0ec <__flatcc_gen_sort@@Base+0x2388>
   1cce8:	add	r3, pc, r3
   1ccec:	add	r2, pc, r2
   1ccf0:	str	r3, [sp, #72]	; 0x48
   1ccf4:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1ccf8:	ldr	r3, [pc, #1008]	; 1d0f0 <__flatcc_gen_sort@@Base+0x238c>
   1ccfc:	add	r3, pc, r3
   1cd00:	str	r3, [sp, #68]	; 0x44
   1cd04:	ldr	r3, [pc, #1000]	; 1d0f4 <__flatcc_gen_sort@@Base+0x2390>
   1cd08:	add	r3, pc, r3
   1cd0c:	str	r3, [sp, #64]	; 0x40
   1cd10:	cmp	r2, #11
   1cd14:	beq	1cbe0 <__flatcc_gen_sort@@Base+0x1e7c>
   1cd18:	ldr	r3, [pc, #984]	; 1d0f8 <__flatcc_gen_sort@@Base+0x2394>
   1cd1c:	add	r3, pc, r3
   1cd20:	str	r3, [sp, #72]	; 0x48
   1cd24:	b	1c788 <__flatcc_gen_sort@@Base+0x1a24>
   1cd28:	ldr	r2, [pc, #972]	; 1d0fc <__flatcc_gen_sort@@Base+0x2398>
   1cd2c:	add	r2, pc, r2
   1cd30:	str	r2, [sp, #68]	; 0x44
   1cd34:	ldr	r2, [pc, #964]	; 1d100 <__flatcc_gen_sort@@Base+0x239c>
   1cd38:	add	r2, pc, r2
   1cd3c:	str	r2, [sp, #72]	; 0x48
   1cd40:	ldr	r2, [pc, #956]	; 1d104 <__flatcc_gen_sort@@Base+0x23a0>
   1cd44:	add	r2, pc, r2
   1cd48:	str	r2, [sp, #64]	; 0x40
   1cd4c:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1cd50:	ldr	r2, [pc, #944]	; 1d108 <__flatcc_gen_sort@@Base+0x23a4>
   1cd54:	add	r2, pc, r2
   1cd58:	str	r2, [sp, #68]	; 0x44
   1cd5c:	ldr	r2, [pc, #936]	; 1d10c <__flatcc_gen_sort@@Base+0x23a8>
   1cd60:	add	r2, pc, r2
   1cd64:	str	r2, [sp, #72]	; 0x48
   1cd68:	ldr	r2, [pc, #928]	; 1d110 <__flatcc_gen_sort@@Base+0x23ac>
   1cd6c:	add	r2, pc, r2
   1cd70:	str	r2, [sp, #64]	; 0x40
   1cd74:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1cd78:	ldr	r3, [pc, #916]	; 1d114 <__flatcc_gen_sort@@Base+0x23b0>
   1cd7c:	add	r3, pc, r3
   1cd80:	str	r3, [sp, #68]	; 0x44
   1cd84:	ldr	r3, [pc, #908]	; 1d118 <__flatcc_gen_sort@@Base+0x23b4>
   1cd88:	add	r3, pc, r3
   1cd8c:	str	r3, [sp, #64]	; 0x40
   1cd90:	ldr	r3, [pc, #900]	; 1d11c <__flatcc_gen_sort@@Base+0x23b8>
   1cd94:	ldr	r2, [pc, #900]	; 1d120 <__flatcc_gen_sort@@Base+0x23bc>
   1cd98:	add	r3, pc, r3
   1cd9c:	add	r2, pc, r2
   1cda0:	str	r3, [sp, #72]	; 0x48
   1cda4:	b	1ca54 <__flatcc_gen_sort@@Base+0x1cf0>
   1cda8:	ldr	r2, [pc, #884]	; 1d124 <__flatcc_gen_sort@@Base+0x23c0>
   1cdac:	add	r2, pc, r2
   1cdb0:	str	r2, [sp, #68]	; 0x44
   1cdb4:	ldr	r2, [pc, #876]	; 1d128 <__flatcc_gen_sort@@Base+0x23c4>
   1cdb8:	add	r2, pc, r2
   1cdbc:	str	r2, [sp, #72]	; 0x48
   1cdc0:	ldr	r2, [pc, #868]	; 1d12c <__flatcc_gen_sort@@Base+0x23c8>
   1cdc4:	add	r2, pc, r2
   1cdc8:	str	r2, [sp, #64]	; 0x40
   1cdcc:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1cdd0:	ldr	r2, [pc, #856]	; 1d130 <__flatcc_gen_sort@@Base+0x23cc>
   1cdd4:	add	r2, pc, r2
   1cdd8:	str	r2, [sp, #68]	; 0x44
   1cddc:	ldr	r2, [pc, #848]	; 1d134 <__flatcc_gen_sort@@Base+0x23d0>
   1cde0:	add	r2, pc, r2
   1cde4:	str	r2, [sp, #72]	; 0x48
   1cde8:	ldr	r2, [pc, #840]	; 1d138 <__flatcc_gen_sort@@Base+0x23d4>
   1cdec:	add	r2, pc, r2
   1cdf0:	str	r2, [sp, #64]	; 0x40
   1cdf4:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1cdf8:	ldr	r2, [pc, #828]	; 1d13c <__flatcc_gen_sort@@Base+0x23d8>
   1cdfc:	add	r2, pc, r2
   1ce00:	str	r2, [sp, #68]	; 0x44
   1ce04:	ldr	r2, [pc, #820]	; 1d140 <__flatcc_gen_sort@@Base+0x23dc>
   1ce08:	add	r2, pc, r2
   1ce0c:	str	r2, [sp, #72]	; 0x48
   1ce10:	ldr	r2, [pc, #812]	; 1d144 <__flatcc_gen_sort@@Base+0x23e0>
   1ce14:	add	r2, pc, r2
   1ce18:	str	r2, [sp, #64]	; 0x40
   1ce1c:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1ce20:	ldr	r3, [pc, #800]	; 1d148 <__flatcc_gen_sort@@Base+0x23e4>
   1ce24:	add	r3, pc, r3
   1ce28:	str	r3, [sp, #68]	; 0x44
   1ce2c:	ldr	r3, [pc, #792]	; 1d14c <__flatcc_gen_sort@@Base+0x23e8>
   1ce30:	add	r3, pc, r3
   1ce34:	str	r3, [sp, #64]	; 0x40
   1ce38:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1ce3c:	ldr	r2, [pc, #780]	; 1d150 <__flatcc_gen_sort@@Base+0x23ec>
   1ce40:	add	r2, pc, r2
   1ce44:	str	r2, [sp, #68]	; 0x44
   1ce48:	ldr	r2, [pc, #772]	; 1d154 <__flatcc_gen_sort@@Base+0x23f0>
   1ce4c:	add	r2, pc, r2
   1ce50:	str	r2, [sp, #72]	; 0x48
   1ce54:	ldr	r2, [pc, #764]	; 1d158 <__flatcc_gen_sort@@Base+0x23f4>
   1ce58:	add	r2, pc, r2
   1ce5c:	str	r2, [sp, #64]	; 0x40
   1ce60:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1ce64:	ldr	r2, [pc, #752]	; 1d15c <__flatcc_gen_sort@@Base+0x23f8>
   1ce68:	add	r2, pc, r2
   1ce6c:	str	r2, [sp, #68]	; 0x44
   1ce70:	ldr	r2, [pc, #744]	; 1d160 <__flatcc_gen_sort@@Base+0x23fc>
   1ce74:	add	r2, pc, r2
   1ce78:	str	r2, [sp, #72]	; 0x48
   1ce7c:	ldr	r2, [pc, #736]	; 1d164 <__flatcc_gen_sort@@Base+0x2400>
   1ce80:	add	r2, pc, r2
   1ce84:	str	r2, [sp, #64]	; 0x40
   1ce88:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1ce8c:	ldr	r3, [pc, #724]	; 1d168 <__flatcc_gen_sort@@Base+0x2404>
   1ce90:	add	r3, pc, r3
   1ce94:	str	r3, [sp, #68]	; 0x44
   1ce98:	ldr	r3, [pc, #716]	; 1d16c <__flatcc_gen_sort@@Base+0x2408>
   1ce9c:	add	r3, pc, r3
   1cea0:	str	r3, [sp, #64]	; 0x40
   1cea4:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1cea8:	ldr	r3, [pc, #704]	; 1d170 <__flatcc_gen_sort@@Base+0x240c>
   1ceac:	add	r3, pc, r3
   1ceb0:	str	r3, [sp, #68]	; 0x44
   1ceb4:	ldr	r3, [pc, #696]	; 1d174 <__flatcc_gen_sort@@Base+0x2410>
   1ceb8:	add	r3, pc, r3
   1cebc:	str	r3, [sp, #64]	; 0x40
   1cec0:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1cec4:	ldr	r2, [pc, #684]	; 1d178 <__flatcc_gen_sort@@Base+0x2414>
   1cec8:	add	r2, pc, r2
   1cecc:	str	r2, [sp, #68]	; 0x44
   1ced0:	ldr	r2, [pc, #676]	; 1d17c <__flatcc_gen_sort@@Base+0x2418>
   1ced4:	add	r2, pc, r2
   1ced8:	str	r2, [sp, #72]	; 0x48
   1cedc:	ldr	r2, [pc, #668]	; 1d180 <__flatcc_gen_sort@@Base+0x241c>
   1cee0:	add	r2, pc, r2
   1cee4:	str	r2, [sp, #64]	; 0x40
   1cee8:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1ceec:	ldr	r2, [pc, #656]	; 1d184 <__flatcc_gen_sort@@Base+0x2420>
   1cef0:	add	r2, pc, r2
   1cef4:	str	r2, [sp, #68]	; 0x44
   1cef8:	ldr	r2, [pc, #648]	; 1d188 <__flatcc_gen_sort@@Base+0x2424>
   1cefc:	add	r2, pc, r2
   1cf00:	str	r2, [sp, #64]	; 0x40
   1cf04:	b	1cc68 <__flatcc_gen_sort@@Base+0x1f04>
   1cf08:	ldr	r1, [pc, #636]	; 1d18c <__flatcc_gen_sort@@Base+0x2428>
   1cf0c:	ldr	r2, [pc, #636]	; 1d190 <__flatcc_gen_sort@@Base+0x242c>
   1cf10:	add	r1, pc, r1
   1cf14:	add	r2, pc, r2
   1cf18:	str	r1, [sp, #64]	; 0x40
   1cf1c:	str	r1, [sp, #68]	; 0x44
   1cf20:	str	r2, [sp, #72]	; 0x48
   1cf24:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1cf28:	andeq	pc, r4, r8, lsl #1
   1cf2c:	andeq	sp, r2, ip, ror r3
   1cf30:	andeq	sp, r2, r4, lsr r3
   1cf34:			; <UNDEFINED> instruction: 0x000249b8
   1cf38:	andeq	r4, r2, r4, asr #18
   1cf3c:	andeq	sp, r2, r4, rrx
   1cf40:	andeq	sp, r2, ip, lsr #32
   1cf44:	andeq	sp, r2, r4, asr #32
   1cf48:	andeq	sp, r2, r8, lsr r0
   1cf4c:	andeq	ip, r2, ip, ror pc
   1cf50:	andeq	ip, r2, ip, ror #28
   1cf54:	andeq	ip, r2, r0, ror #28
   1cf58:			; <UNDEFINED> instruction: 0x0002e2b0
   1cf5c:	andeq	ip, r2, r0, lsr ip
   1cf60:	andeq	ip, r2, r8, lsl ip
   1cf64:	andeq	r4, r2, r8, lsr r5
   1cf68:	andeq	lr, r2, r4, lsl #4
   1cf6c:	andeq	r4, r2, r8, lsr r5
   1cf70:	andeq	r4, r2, r8, lsl #9
   1cf74:	andeq	lr, r2, r8, ror #3
   1cf78:	andeq	r4, r2, r8, lsl #9
   1cf7c:	andeq	r4, r2, ip, ror #7
   1cf80:	ldrdeq	lr, [r2], -r0
   1cf84:	andeq	r4, r2, ip, ror #7
   1cf88:	andeq	r4, r2, r0, asr #7
   1cf8c:	strheq	lr, [r2], -r4
   1cf90:	andeq	r4, r2, r0, asr #7
   1cf94:	andeq	lr, r2, r0, lsr #1
   1cf98:	andeq	r4, r2, r0, lsl #7
   1cf9c:	andeq	lr, r2, r4, lsl #1
   1cfa0:	andeq	r4, r2, r0, lsl #7
   1cfa4:	andeq	r4, r2, r4, lsr r3
   1cfa8:	andeq	lr, r2, r8, rrx
   1cfac:	andeq	r4, r2, r8, lsr r3
   1cfb0:	andeq	r4, r2, ip, lsr #6
   1cfb4:	andeq	lr, r2, ip, asr #32
   1cfb8:	andeq	r4, r2, r0, lsr r3
   1cfbc:	andeq	r4, r2, r0, ror #5
   1cfc0:	andeq	lr, r2, r0, lsr r0
   1cfc4:	andeq	r4, r2, r4, ror #5
   1cfc8:	andeq	ip, r2, r4, asr #18
   1cfcc:	andeq	ip, r2, r0, lsl sl
   1cfd0:	andeq	r4, r2, r0, ror r2
   1cfd4:	andeq	fp, r3, r8, ror #29
   1cfd8:	andeq	r4, r2, r4, lsr #4
   1cfdc:	muleq	r3, ip, lr
   1cfe0:	ldrdeq	r4, [r2], -ip
   1cfe4:	andeq	fp, r3, ip, asr #28
   1cfe8:	andeq	r4, r2, r8, asr #8
   1cfec:	andeq	ip, r2, r4, lsl r8
   1cff0:	andeq	r4, r2, ip, lsr r1
   1cff4:			; <UNDEFINED> instruction: 0x0003bdb4
   1cff8:	andeq	r4, r2, ip, lsl #6
   1cffc:	strdeq	ip, [r2], -r8
   1d000:	andeq	r4, r2, r8, lsl #1
   1d004:	andeq	r4, r2, r8, ror r2
   1d008:	andeq	r4, r2, ip, asr r0
   1d00c:	andeq	r4, r2, r8, asr r2
   1d010:	andeq	r4, r2, r4
   1d014:	andeq	sp, r2, r8, asr #25
   1d018:	strdeq	r3, [r2], -r4
   1d01c:	ldrdeq	r3, [r2], -r0
   1d020:	andeq	sp, r2, r4, lsr #25
   1d024:	andeq	ip, r2, r8, lsl #17
   1d028:	andeq	ip, r2, r8, ror #16
   1d02c:	andeq	r3, r2, r4, lsl pc
   1d030:	andeq	r3, r2, r8, ror pc
   1d034:	andeq	fp, r3, r0, lsl #23
   1d038:	andeq	r4, r2, r0, ror r1
   1d03c:	andeq	r3, r2, ip, lsr pc
   1d040:	andeq	r3, r2, r4, lsr #30
   1d044:	andeq	r3, r2, r0, asr pc
   1d048:	andeq	r3, r2, r8, lsr #30
   1d04c:	andeq	r3, r2, r8, lsr #30
   1d050:	andeq	r3, r2, r4, lsr #30
   1d054:	strdeq	r3, [r2], -r4
   1d058:	ldrdeq	r3, [r2], -ip
   1d05c:	andeq	r3, r2, r8, lsl #30
   1d060:	andeq	r3, r2, r0, ror #29
   1d064:			; <UNDEFINED> instruction: 0x00023eb0
   1d068:	ldrdeq	r3, [r2], -r4
   1d06c:	ldrdeq	r3, [r2], -r0
   1d070:	andeq	r3, r2, r8, lsr #28
   1d074:	andeq	r3, r2, r8, lsr #28
   1d078:	andeq	sp, r2, r0, lsr fp
   1d07c:	andeq	r3, r2, ip, lsr #29
   1d080:	andeq	r3, r2, r4, lsr #28
   1d084:	andeq	r3, r2, r0, lsr #28
   1d088:	andeq	sp, r2, r0, lsl #22
   1d08c:	andeq	r3, r2, ip, ror #28
   1d090:	andeq	r3, r2, r4, ror #27
   1d094:	andeq	r3, r2, r0, ror #27
   1d098:	ldrdeq	sp, [r2], -r0
   1d09c:	andeq	r3, r2, r8, lsr #28
   1d0a0:	andeq	r3, r2, r4, lsl #27
   1d0a4:	andeq	r3, r2, r4, lsl #27
   1d0a8:	andeq	sp, r2, r0, lsr #21
   1d0ac:	andeq	r3, r2, r0, lsl #28
   1d0b0:	andeq	r3, r2, ip, asr #26
   1d0b4:	andeq	sp, r2, r4, ror #20
   1d0b8:	andeq	r3, r2, r0, ror #31
   1d0bc:	andeq	r3, r2, r0, lsl #26
   1d0c0:	andeq	sp, r2, ip, lsr sl
   1d0c4:	andeq	r3, r2, r0, ror #25
   1d0c8:	andeq	sp, r2, ip, lsl sl
   1d0cc:	andeq	r3, r2, r4, asr #25
   1d0d0:	ldrdeq	r3, [r2], -ip
   1d0d4:	ldrdeq	r3, [r2], -r8
   1d0d8:	andeq	sp, r2, r8, lsr #19
   1d0dc:	andeq	r3, r2, ip, lsl sp
   1d0e0:	muleq	r2, r0, r9
   1d0e4:	andeq	r3, r2, ip, asr #25
   1d0e8:	andeq	sp, r2, r8, ror r9
   1d0ec:			; <UNDEFINED> instruction: 0x00023cbc
   1d0f0:	andeq	r3, r2, r0, lsl #24
   1d0f4:	strdeq	r3, [r2], -ip
   1d0f8:	andeq	sp, r2, r4, asr #18
   1d0fc:	ldrdeq	r3, [r2], -r0
   1d100:	andeq	sp, r2, r8, lsr #18
   1d104:	andeq	r3, r2, r0, asr #23
   1d108:	andeq	r3, r2, r8, lsr #23
   1d10c:	andeq	sp, r2, r0, lsl #18
   1d110:	muleq	r2, r8, fp
   1d114:	andeq	r3, r2, r0, lsl #23
   1d118:	andeq	r3, r2, ip, ror fp
   1d11c:	andeq	sp, r2, r8, asr #17
   1d120:	andeq	r3, r2, r8, lsl ip
   1d124:	andeq	r3, r2, ip, lsr #23
   1d128:	andeq	sp, r2, r8, lsr #17
   1d12c:	muleq	r2, ip, fp
   1d130:	andeq	r3, r2, r8, ror #22
   1d134:	andeq	sp, r2, r0, lsl #17
   1d138:	andeq	r3, r2, ip, asr fp
   1d13c:	andeq	r3, r2, r0, asr #22
   1d140:	andeq	sp, r2, r8, asr r8
   1d144:	andeq	r3, r2, r4, lsr fp
   1d148:	andeq	r3, r2, r4, lsr fp
   1d14c:	andeq	r3, r2, r0, lsr fp
   1d150:	andeq	r3, r2, r8, ror #21
   1d154:	andeq	sp, r2, r4, lsl r8
   1d158:	ldrdeq	r3, [r2], -ip
   1d15c:	andeq	r3, r2, r0, asr #21
   1d160:	andeq	sp, r2, ip, ror #15
   1d164:			; <UNDEFINED> instruction: 0x00023ab4
   1d168:	muleq	r2, r8, sl
   1d16c:	muleq	r2, r8, sl
   1d170:	muleq	r2, r0, sl
   1d174:	muleq	r2, r0, sl
   1d178:	muleq	r2, r0, sl
   1d17c:	andeq	sp, r2, ip, lsl #15
   1d180:	andeq	r3, r2, r0, lsl #21
   1d184:	andeq	r3, r2, r0, lsr #21
   1d188:	muleq	r2, ip, sl
   1d18c:	andeq	r3, r2, r8, ror sl
   1d190:	andeq	sp, r2, ip, asr #14
   1d194:	andeq	r3, r2, ip, asr r6
   1d198:	andeq	sp, r2, r0, lsr r3
   1d19c:	andeq	r3, r2, r8, asr #12
   1d1a0:	andeq	sp, r2, ip, lsl #6
   1d1a4:	andeq	r3, r2, r8, lsr r6
   1d1a8:	andeq	r3, r2, r4, lsr r6
   1d1ac:	andeq	r3, r2, r8, lsl r6
   1d1b0:	ldrdeq	sp, [r2], -ip
   1d1b4:	andeq	r3, r2, r8, lsl #12
   1d1b8:	andeq	r3, r2, r8, ror #11
   1d1bc:	andeq	r3, r2, r8, lsl #12
   1d1c0:	andeq	r3, r2, r4, lsl #16
   1d1c4:	ldrdeq	r3, [r2], -ip
   1d1c8:	andeq	r3, r2, r0, ror #15
   1d1cc:			; <UNDEFINED> instruction: 0x000235b4
   1d1d0:	andeq	r3, r2, r4, lsr #15
   1d1d4:	muleq	r2, r8, r7
   1d1d8:	strdeq	r3, [r2], -r8
   1d1dc:	andeq	r3, r2, ip, lsl r5
   1d1e0:	andeq	r3, r2, r8, ror #9
   1d1e4:	andeq	r3, r2, r4, lsl r5
   1d1e8:	andeq	r3, r2, r0, lsl #10
   1d1ec:	ldrdeq	r3, [r2], -r0
   1d1f0:	andeq	r3, r2, r8, ror #9
   1d1f4:			; <UNDEFINED> instruction: 0x000234b8
   1d1f8:	andeq	r3, r2, r0, lsr #9
   1d1fc:	andeq	r3, r2, ip, asr #9
   1d200:	andeq	r3, r2, r0, lsl #9
   1d204:	andeq	r3, r2, r4, lsr #9
   1d208:	andeq	r3, r2, ip, lsl #9
   1d20c:	muleq	r2, r4, r4
   1d210:	andeq	r3, r2, r4, ror #8
   1d214:	andeq	r3, r2, ip, asr #8
   1d218:	andeq	r3, r2, r8, ror r4
   1d21c:	andeq	r3, r2, ip, lsr #8
   1d220:	andeq	r3, r2, r0, asr r4
   1d224:	andeq	r3, r2, r8, lsr r4
   1d228:	andeq	r3, r2, ip, lsr #8
   1d22c:	ldrdeq	r3, [r2], -r8
   1d230:	andeq	fp, r2, ip, asr r6
   1d234:	andeq	r3, r2, r8, ror #5
   1d238:	andeq	fp, r2, r0, asr #9
   1d23c:	andeq	fp, r2, ip, ror #15
   1d240:	andeq	r3, r2, r0, ror fp
   1d244:	andeq	fp, r2, r4, lsl #12
   1d248:	muleq	r2, r0, r2
   1d24c:	andeq	fp, r2, r8, ror #8
   1d250:	muleq	r2, r4, r7
   1d254:	andeq	r3, r2, r4, ror #22
   1d258:	andeq	fp, r2, ip, lsr #11
   1d25c:	andeq	r3, r2, r8, lsr r2
   1d260:	andeq	fp, r2, r0, lsl r4
   1d264:	andeq	fp, r2, ip, lsr r7
   1d268:	andeq	r3, r2, r4, lsl #4
   1d26c:	muleq	r2, r0, r1
   1d270:	andeq	r3, r2, r0, ror #3
   1d274:			; <UNDEFINED> instruction: 0x0002b3b8
   1d278:	andeq	fp, r2, r4, ror #13
   1d27c:	andeq	r3, r2, r0, ror #4
   1d280:	andeq	ip, r2, ip, asr #30
   1d284:	andeq	r3, r2, r0, asr r2
   1d288:	andeq	r3, r2, r8, lsr r2
   1d28c:	andeq	ip, r2, r4, lsr #30
   1d290:	andeq	r3, r2, r8, lsr #4
   1d294:	andeq	r3, r2, r0, lsl r2
   1d298:	andeq	r3, r2, ip, lsl #4
   1d29c:	andeq	fp, r2, r0, ror r9
   1d2a0:	andeq	fp, r2, ip, lsl #9
   1d2a4:	andeq	r3, r2, r8, lsl r1
   1d2a8:	strdeq	fp, [r2], -r0
   1d2ac:	andeq	fp, r2, ip, lsl r6
   1d2b0:	andeq	r3, r2, ip, lsr #3
   1d2b4:	andeq	ip, r2, r8, lsl #29
   1d2b8:	muleq	r2, ip, r1
   1d2bc:	andeq	r3, r2, r4, lsl #3
   1d2c0:	andeq	ip, r2, r0, ror #28
   1d2c4:	andeq	r3, r2, r4, ror r1
   1d2c8:	andeq	r3, r2, ip, asr r1
   1d2cc:	andeq	r3, r2, r8, asr r1
   1d2d0:	ldrdeq	r3, [r2], -r4
   1d2d4:	ldrdeq	r3, [r2], -r4
   1d2d8:	strheq	r3, [r2], -r8
   1d2dc:	andeq	ip, r2, r0, lsl #28
   1d2e0:	andeq	r3, r2, ip, lsr #1
   1d2e4:	muleq	r2, r0, r0
   1d2e8:	ldrdeq	ip, [r2], -r8
   1d2ec:	andeq	r3, r2, r4, lsl #1
   1d2f0:	andeq	r3, r2, r8, rrx
   1d2f4:	andeq	r3, r2, r8, rrx
   1d2f8:	strdeq	r2, [r2], -r0
   1d2fc:	andeq	r2, r2, ip, ror pc
   1d300:	andeq	r2, r2, ip, asr #31
   1d304:	andeq	fp, r2, r4, lsr #3
   1d308:	ldrdeq	fp, [r2], -r0
   1d30c:	muleq	r0, ip, r0
   1d310:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1d314:	andeq	r2, r2, r4, lsr #30
   1d318:	andeq	r2, r2, r4, ror pc
   1d31c:	andeq	fp, r2, ip, asr #2
   1d320:	andeq	fp, r2, r8, ror r4
   1d324:	ldr	r1, [pc, #-408]	; 1d194 <__flatcc_gen_sort@@Base+0x2430>
   1d328:	ldr	r2, [pc, #-408]	; 1d198 <__flatcc_gen_sort@@Base+0x2434>
   1d32c:	add	r1, pc, r1
   1d330:	add	r2, pc, r2
   1d334:	str	r1, [sp, #64]	; 0x40
   1d338:	str	r1, [sp, #68]	; 0x44
   1d33c:	str	r2, [sp, #72]	; 0x48
   1d340:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1d344:	ldr	r3, [pc, #-432]	; 1d19c <__flatcc_gen_sort@@Base+0x2438>
   1d348:	add	r3, pc, r3
   1d34c:	str	r3, [sp, #68]	; 0x44
   1d350:	ldr	r3, [pc, #-440]	; 1d1a0 <__flatcc_gen_sort@@Base+0x243c>
   1d354:	add	r3, pc, r3
   1d358:	str	r3, [sp, #72]	; 0x48
   1d35c:	ldr	r3, [pc, #-448]	; 1d1a4 <__flatcc_gen_sort@@Base+0x2440>
   1d360:	add	r3, pc, r3
   1d364:	str	r3, [sp, #64]	; 0x40
   1d368:	ldr	r2, [pc, #-456]	; 1d1a8 <__flatcc_gen_sort@@Base+0x2444>
   1d36c:	add	r2, pc, r2
   1d370:	b	1c964 <__flatcc_gen_sort@@Base+0x1c00>
   1d374:	ldr	r2, [pc, #-464]	; 1d1ac <__flatcc_gen_sort@@Base+0x2448>
   1d378:	add	r2, pc, r2
   1d37c:	str	r2, [sp, #68]	; 0x44
   1d380:	ldr	r2, [pc, #-472]	; 1d1b0 <__flatcc_gen_sort@@Base+0x244c>
   1d384:	add	r2, pc, r2
   1d388:	str	r2, [sp, #72]	; 0x48
   1d38c:	ldr	r2, [pc, #-480]	; 1d1b4 <__flatcc_gen_sort@@Base+0x2450>
   1d390:	add	r2, pc, r2
   1d394:	str	r2, [sp, #64]	; 0x40
   1d398:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1d39c:	ldr	r2, [pc, #-492]	; 1d1b8 <__flatcc_gen_sort@@Base+0x2454>
   1d3a0:	add	r2, pc, r2
   1d3a4:	str	r2, [sp, #64]	; 0x40
   1d3a8:	str	r2, [sp, #68]	; 0x44
   1d3ac:	b	1cc68 <__flatcc_gen_sort@@Base+0x1f04>
   1d3b0:	ldr	r2, [pc, #-508]	; 1d1bc <__flatcc_gen_sort@@Base+0x2458>
   1d3b4:	add	r2, pc, r2
   1d3b8:	ldr	r1, [pc, #-512]	; 1d1c0 <__flatcc_gen_sort@@Base+0x245c>
   1d3bc:	add	r3, sp, #100	; 0x64
   1d3c0:	mov	r0, r3
   1d3c4:	ldrd	r8, [r4, #48]	; 0x30
   1d3c8:	add	r1, pc, r1
   1d3cc:	strd	r8, [sp]
   1d3d0:	str	r3, [sp, #60]	; 0x3c
   1d3d4:	bl	13fc4 <sprintf@plt>
   1d3d8:	b	1c8e0 <__flatcc_gen_sort@@Base+0x1b7c>
   1d3dc:	ldr	r2, [pc, #-544]	; 1d1c4 <__flatcc_gen_sort@@Base+0x2460>
   1d3e0:	add	r2, pc, r2
   1d3e4:	ldr	r1, [pc, #-548]	; 1d1c8 <__flatcc_gen_sort@@Base+0x2464>
   1d3e8:	add	r3, sp, #100	; 0x64
   1d3ec:	mov	r0, r3
   1d3f0:	str	r3, [sp, #60]	; 0x3c
   1d3f4:	ldrb	r3, [r4, #48]	; 0x30
   1d3f8:	add	r1, pc, r1
   1d3fc:	bl	13fc4 <sprintf@plt>
   1d400:	b	1c8e0 <__flatcc_gen_sort@@Base+0x1b7c>
   1d404:	ldr	r2, [pc, #-576]	; 1d1cc <__flatcc_gen_sort@@Base+0x2468>
   1d408:	add	r2, pc, r2
   1d40c:	ldr	r1, [pc, #-580]	; 1d1d0 <__flatcc_gen_sort@@Base+0x246c>
   1d410:	add	r3, sp, #100	; 0x64
   1d414:	mov	r0, r3
   1d418:	ldrd	r8, [r4, #48]	; 0x30
   1d41c:	add	r1, pc, r1
   1d420:	strd	r8, [sp]
   1d424:	str	r3, [sp, #60]	; 0x3c
   1d428:	bl	13fc4 <sprintf@plt>
   1d42c:	b	1c8e0 <__flatcc_gen_sort@@Base+0x1b7c>
   1d430:	vldr	d7, [r4, #48]	; 0x30
   1d434:	add	r3, sp, #100	; 0x64
   1d438:	mov	r0, r3
   1d43c:	ldr	r1, [pc, #-624]	; 1d1d4 <__flatcc_gen_sort@@Base+0x2470>
   1d440:	str	r3, [sp, #60]	; 0x3c
   1d444:	vcvt.f32.f64	s14, d7
   1d448:	add	r1, pc, r1
   1d44c:	vcvt.f64.f32	d7, s14
   1d450:	vmov	r2, r3, d7
   1d454:	bl	13fc4 <sprintf@plt>
   1d458:	b	1c8e0 <__flatcc_gen_sort@@Base+0x1b7c>
   1d45c:	ldrh	r1, [r4, #56]	; 0x38
   1d460:	sub	r1, r1, #3
   1d464:	cmp	r1, #3
   1d468:	addls	pc, pc, r1, lsl #2
   1d46c:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1d470:	b	1d818 <__flatcc_gen_sort@@Base+0x2ab4>
   1d474:	b	1d7f0 <__flatcc_gen_sort@@Base+0x2a8c>
   1d478:	b	1d7c8 <__flatcc_gen_sort@@Base+0x2a64>
   1d47c:	b	1cc98 <__flatcc_gen_sort@@Base+0x1f34>
   1d480:	ldrh	r1, [r4, #56]	; 0x38
   1d484:	sub	r1, r1, #3
   1d488:	cmp	r1, #3
   1d48c:	addls	pc, pc, r1, lsl #2
   1d490:	b	1d914 <__flatcc_gen_sort@@Base+0x2bb0>
   1d494:	b	1d8a0 <__flatcc_gen_sort@@Base+0x2b3c>
   1d498:	b	1d878 <__flatcc_gen_sort@@Base+0x2b14>
   1d49c:	b	1d850 <__flatcc_gen_sort@@Base+0x2aec>
   1d4a0:	b	1d834 <__flatcc_gen_sort@@Base+0x2ad0>
   1d4a4:	ldr	r2, [pc, #-724]	; 1d1d8 <__flatcc_gen_sort@@Base+0x2474>
   1d4a8:	add	r2, pc, r2
   1d4ac:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d4b0:	ldr	r2, [pc, #-732]	; 1d1dc <__flatcc_gen_sort@@Base+0x2478>
   1d4b4:	add	r2, pc, r2
   1d4b8:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d4bc:	ldr	r2, [pc, #-740]	; 1d1e0 <__flatcc_gen_sort@@Base+0x247c>
   1d4c0:	add	r2, pc, r2
   1d4c4:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d4c8:	ldr	r2, [pc, #-748]	; 1d1e4 <__flatcc_gen_sort@@Base+0x2480>
   1d4cc:	add	r2, pc, r2
   1d4d0:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d4d4:	ldr	r2, [pc, #-756]	; 1d1e8 <__flatcc_gen_sort@@Base+0x2484>
   1d4d8:	add	r2, pc, r2
   1d4dc:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d4e0:	ldr	r2, [pc, #-764]	; 1d1ec <__flatcc_gen_sort@@Base+0x2488>
   1d4e4:	add	r2, pc, r2
   1d4e8:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d4ec:	ldr	r2, [pc, #-772]	; 1d1f0 <__flatcc_gen_sort@@Base+0x248c>
   1d4f0:	add	r2, pc, r2
   1d4f4:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d4f8:	ldr	r2, [pc, #-780]	; 1d1f4 <__flatcc_gen_sort@@Base+0x2490>
   1d4fc:	add	r2, pc, r2
   1d500:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d504:	ldr	r2, [pc, #-788]	; 1d1f8 <__flatcc_gen_sort@@Base+0x2494>
   1d508:	add	r2, pc, r2
   1d50c:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d510:	ldr	r2, [pc, #-796]	; 1d1fc <__flatcc_gen_sort@@Base+0x2498>
   1d514:	add	r2, pc, r2
   1d518:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d51c:	ldr	r2, [pc, #-804]	; 1d200 <__flatcc_gen_sort@@Base+0x249c>
   1d520:	add	r2, pc, r2
   1d524:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d528:	ldr	r2, [pc, #-812]	; 1d204 <__flatcc_gen_sort@@Base+0x24a0>
   1d52c:	add	r2, pc, r2
   1d530:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d534:	ldr	r2, [pc, #-820]	; 1d208 <__flatcc_gen_sort@@Base+0x24a4>
   1d538:	add	r2, pc, r2
   1d53c:	b	1d3b8 <__flatcc_gen_sort@@Base+0x2654>
   1d540:	ldr	r2, [pc, #-828]	; 1d20c <__flatcc_gen_sort@@Base+0x24a8>
   1d544:	add	r2, pc, r2
   1d548:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d54c:	ldr	r2, [pc, #-836]	; 1d210 <__flatcc_gen_sort@@Base+0x24ac>
   1d550:	add	r2, pc, r2
   1d554:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d558:	ldr	r2, [pc, #-844]	; 1d214 <__flatcc_gen_sort@@Base+0x24b0>
   1d55c:	add	r2, pc, r2
   1d560:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d564:	ldr	r2, [pc, #-852]	; 1d218 <__flatcc_gen_sort@@Base+0x24b4>
   1d568:	add	r2, pc, r2
   1d56c:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d570:	ldr	r2, [pc, #-860]	; 1d21c <__flatcc_gen_sort@@Base+0x24b8>
   1d574:	add	r2, pc, r2
   1d578:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d57c:	ldr	r2, [pc, #-868]	; 1d220 <__flatcc_gen_sort@@Base+0x24bc>
   1d580:	add	r2, pc, r2
   1d584:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d588:	ldr	r2, [pc, #-876]	; 1d224 <__flatcc_gen_sort@@Base+0x24c0>
   1d58c:	add	r2, pc, r2
   1d590:	b	1d40c <__flatcc_gen_sort@@Base+0x26a8>
   1d594:	ldr	r2, [pc, #-884]	; 1d228 <__flatcc_gen_sort@@Base+0x24c4>
   1d598:	add	r2, pc, r2
   1d59c:	b	1d3e4 <__flatcc_gen_sort@@Base+0x2680>
   1d5a0:	ldr	r2, [pc, #-668]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d5a4:	movw	r3, #1512	; 0x5e8
   1d5a8:	ldr	r1, [sp, #92]	; 0x5c
   1d5ac:	ldr	r0, [pc, #-904]	; 1d22c <__flatcc_gen_sort@@Base+0x24c8>
   1d5b0:	ldr	r4, [pc, #-904]	; 1d230 <__flatcc_gen_sort@@Base+0x24cc>
   1d5b4:	ldr	ip, [r1, r2]
   1d5b8:	add	r0, pc, r0
   1d5bc:	ldr	r1, [pc, #-912]	; 1d234 <__flatcc_gen_sort@@Base+0x24d0>
   1d5c0:	add	r4, pc, r4
   1d5c4:	str	r0, [sp]
   1d5c8:	mov	r2, r4
   1d5cc:	ldr	r0, [ip]
   1d5d0:	add	r1, pc, r1
   1d5d4:	bl	13f58 <fprintf@plt>
   1d5d8:	ldr	r3, [pc, #-936]	; 1d238 <__flatcc_gen_sort@@Base+0x24d4>
   1d5dc:	mov	r1, r4
   1d5e0:	movw	r2, #1512	; 0x5e8
   1d5e4:	ldr	r0, [pc, #-944]	; 1d23c <__flatcc_gen_sort@@Base+0x24d8>
   1d5e8:	add	r3, pc, r3
   1d5ec:	add	r3, r3, #144	; 0x90
   1d5f0:	add	r0, pc, r0
   1d5f4:	bl	1400c <__assert_fail@plt>
   1d5f8:	ldr	r2, [pc, #-756]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d5fc:	mov	r3, #1472	; 0x5c0
   1d600:	ldr	r1, [sp, #92]	; 0x5c
   1d604:	ldr	r0, [pc, #-972]	; 1d240 <__flatcc_gen_sort@@Base+0x24dc>
   1d608:	ldr	r4, [pc, #-972]	; 1d244 <__flatcc_gen_sort@@Base+0x24e0>
   1d60c:	ldr	ip, [r1, r2]
   1d610:	add	r0, pc, r0
   1d614:	ldr	r1, [pc, #-980]	; 1d248 <__flatcc_gen_sort@@Base+0x24e4>
   1d618:	add	r4, pc, r4
   1d61c:	str	r0, [sp]
   1d620:	mov	r2, r4
   1d624:	ldr	r0, [ip]
   1d628:	add	r1, pc, r1
   1d62c:	bl	13f58 <fprintf@plt>
   1d630:	ldr	r3, [pc, #-1004]	; 1d24c <__flatcc_gen_sort@@Base+0x24e8>
   1d634:	mov	r1, r4
   1d638:	mov	r2, #1472	; 0x5c0
   1d63c:	ldr	r0, [pc, #-1012]	; 1d250 <__flatcc_gen_sort@@Base+0x24ec>
   1d640:	add	r3, pc, r3
   1d644:	add	r3, r3, #144	; 0x90
   1d648:	add	r0, pc, r0
   1d64c:	bl	1400c <__assert_fail@plt>
   1d650:	ldr	r2, [pc, #-844]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d654:	movw	r3, #1507	; 0x5e3
   1d658:	ldr	r1, [sp, #92]	; 0x5c
   1d65c:	ldr	r0, [pc, #-1040]	; 1d254 <__flatcc_gen_sort@@Base+0x24f0>
   1d660:	ldr	r4, [pc, #-1040]	; 1d258 <__flatcc_gen_sort@@Base+0x24f4>
   1d664:	ldr	ip, [r1, r2]
   1d668:	add	r0, pc, r0
   1d66c:	ldr	r1, [pc, #-1048]	; 1d25c <__flatcc_gen_sort@@Base+0x24f8>
   1d670:	add	r4, pc, r4
   1d674:	str	r0, [sp]
   1d678:	mov	r2, r4
   1d67c:	ldr	r0, [ip]
   1d680:	add	r1, pc, r1
   1d684:	bl	13f58 <fprintf@plt>
   1d688:	ldr	r3, [pc, #-1072]	; 1d260 <__flatcc_gen_sort@@Base+0x24fc>
   1d68c:	mov	r1, r4
   1d690:	movw	r2, #1507	; 0x5e3
   1d694:	ldr	r0, [pc, #-1080]	; 1d264 <__flatcc_gen_sort@@Base+0x2500>
   1d698:	add	r3, pc, r3
   1d69c:	add	r3, r3, #144	; 0x90
   1d6a0:	add	r0, pc, r0
   1d6a4:	bl	1400c <__assert_fail@plt>
   1d6a8:	ldr	r2, [pc, #-932]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d6ac:	mov	r3, #141	; 0x8d
   1d6b0:	ldr	r1, [sp, #92]	; 0x5c
   1d6b4:	ldr	r0, [pc, #-1108]	; 1d268 <__flatcc_gen_sort@@Base+0x2504>
   1d6b8:	ldr	r4, [pc, #-1108]	; 1d26c <__flatcc_gen_sort@@Base+0x2508>
   1d6bc:	ldr	ip, [r1, r2]
   1d6c0:	add	r0, pc, r0
   1d6c4:	ldr	r1, [pc, #-1116]	; 1d270 <__flatcc_gen_sort@@Base+0x250c>
   1d6c8:	add	r4, pc, r4
   1d6cc:	str	r0, [sp]
   1d6d0:	mov	r2, r4
   1d6d4:	ldr	r0, [ip]
   1d6d8:	add	r1, pc, r1
   1d6dc:	bl	13f58 <fprintf@plt>
   1d6e0:	ldr	r3, [pc, #-1140]	; 1d274 <__flatcc_gen_sort@@Base+0x2510>
   1d6e4:	mov	r1, r4
   1d6e8:	mov	r2, #141	; 0x8d
   1d6ec:	ldr	r0, [pc, #-1148]	; 1d278 <__flatcc_gen_sort@@Base+0x2514>
   1d6f0:	add	r3, pc, r3
   1d6f4:	add	r3, r3, #84	; 0x54
   1d6f8:	add	r0, pc, r0
   1d6fc:	bl	1400c <__assert_fail@plt>
   1d700:	bl	1b1e8 <__flatcc_gen_sort@@Base+0x484>
   1d704:	ldr	r2, [pc, #-1168]	; 1d27c <__flatcc_gen_sort@@Base+0x2518>
   1d708:	add	r2, pc, r2
   1d70c:	str	r2, [sp, #68]	; 0x44
   1d710:	ldr	r2, [pc, #-1176]	; 1d280 <__flatcc_gen_sort@@Base+0x251c>
   1d714:	add	r2, pc, r2
   1d718:	str	r2, [sp, #72]	; 0x48
   1d71c:	ldr	r2, [pc, #-1184]	; 1d284 <__flatcc_gen_sort@@Base+0x2520>
   1d720:	add	r2, pc, r2
   1d724:	str	r2, [sp, #64]	; 0x40
   1d728:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1d72c:	ldr	r2, [pc, #-1196]	; 1d288 <__flatcc_gen_sort@@Base+0x2524>
   1d730:	add	r2, pc, r2
   1d734:	str	r2, [sp, #68]	; 0x44
   1d738:	ldr	r2, [pc, #-1204]	; 1d28c <__flatcc_gen_sort@@Base+0x2528>
   1d73c:	add	r2, pc, r2
   1d740:	str	r2, [sp, #72]	; 0x48
   1d744:	ldr	r2, [pc, #-1212]	; 1d290 <__flatcc_gen_sort@@Base+0x252c>
   1d748:	add	r2, pc, r2
   1d74c:	str	r2, [sp, #64]	; 0x40
   1d750:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1d754:	ldr	r3, [pc, #-1224]	; 1d294 <__flatcc_gen_sort@@Base+0x2530>
   1d758:	add	r3, pc, r3
   1d75c:	str	r3, [sp, #68]	; 0x44
   1d760:	ldr	r3, [pc, #-1232]	; 1d298 <__flatcc_gen_sort@@Base+0x2534>
   1d764:	add	r3, pc, r3
   1d768:	str	r3, [sp, #64]	; 0x40
   1d76c:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1d770:	ldr	r2, [pc, #-1132]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d774:	movw	r3, #1430	; 0x596
   1d778:	ldr	r1, [sp, #92]	; 0x5c
   1d77c:	ldr	r0, [pc, #-1256]	; 1d29c <__flatcc_gen_sort@@Base+0x2538>
   1d780:	ldr	r4, [pc, #-1256]	; 1d2a0 <__flatcc_gen_sort@@Base+0x253c>
   1d784:	ldr	ip, [r1, r2]
   1d788:	add	r0, pc, r0
   1d78c:	ldr	r1, [pc, #-1264]	; 1d2a4 <__flatcc_gen_sort@@Base+0x2540>
   1d790:	add	r4, pc, r4
   1d794:	str	r0, [sp]
   1d798:	mov	r2, r4
   1d79c:	ldr	r0, [ip]
   1d7a0:	add	r1, pc, r1
   1d7a4:	bl	13f58 <fprintf@plt>
   1d7a8:	ldr	r3, [pc, #-1288]	; 1d2a8 <__flatcc_gen_sort@@Base+0x2544>
   1d7ac:	mov	r1, r4
   1d7b0:	movw	r2, #1430	; 0x596
   1d7b4:	ldr	r0, [pc, #-1296]	; 1d2ac <__flatcc_gen_sort@@Base+0x2548>
   1d7b8:	add	r3, pc, r3
   1d7bc:	add	r3, r3, #144	; 0x90
   1d7c0:	add	r0, pc, r0
   1d7c4:	bl	1400c <__assert_fail@plt>
   1d7c8:	ldr	r2, [pc, #-1312]	; 1d2b0 <__flatcc_gen_sort@@Base+0x254c>
   1d7cc:	add	r2, pc, r2
   1d7d0:	str	r2, [sp, #68]	; 0x44
   1d7d4:	ldr	r2, [pc, #-1320]	; 1d2b4 <__flatcc_gen_sort@@Base+0x2550>
   1d7d8:	add	r2, pc, r2
   1d7dc:	str	r2, [sp, #72]	; 0x48
   1d7e0:	ldr	r2, [pc, #-1328]	; 1d2b8 <__flatcc_gen_sort@@Base+0x2554>
   1d7e4:	add	r2, pc, r2
   1d7e8:	str	r2, [sp, #64]	; 0x40
   1d7ec:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1d7f0:	ldr	r2, [pc, #-1340]	; 1d2bc <__flatcc_gen_sort@@Base+0x2558>
   1d7f4:	add	r2, pc, r2
   1d7f8:	str	r2, [sp, #68]	; 0x44
   1d7fc:	ldr	r2, [pc, #-1348]	; 1d2c0 <__flatcc_gen_sort@@Base+0x255c>
   1d800:	add	r2, pc, r2
   1d804:	str	r2, [sp, #72]	; 0x48
   1d808:	ldr	r2, [pc, #-1356]	; 1d2c4 <__flatcc_gen_sort@@Base+0x2560>
   1d80c:	add	r2, pc, r2
   1d810:	str	r2, [sp, #64]	; 0x40
   1d814:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1d818:	ldr	r3, [pc, #-1368]	; 1d2c8 <__flatcc_gen_sort@@Base+0x2564>
   1d81c:	add	r3, pc, r3
   1d820:	str	r3, [sp, #68]	; 0x44
   1d824:	ldr	r3, [pc, #-1376]	; 1d2cc <__flatcc_gen_sort@@Base+0x2568>
   1d828:	add	r3, pc, r3
   1d82c:	str	r3, [sp, #64]	; 0x40
   1d830:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1d834:	ldr	r2, [pc, #-1388]	; 1d2d0 <__flatcc_gen_sort@@Base+0x256c>
   1d838:	add	r2, pc, r2
   1d83c:	str	r2, [sp, #68]	; 0x44
   1d840:	ldr	r2, [pc, #-1396]	; 1d2d4 <__flatcc_gen_sort@@Base+0x2570>
   1d844:	add	r2, pc, r2
   1d848:	str	r2, [sp, #64]	; 0x40
   1d84c:	b	1cc68 <__flatcc_gen_sort@@Base+0x1f04>
   1d850:	ldr	r2, [pc, #-1408]	; 1d2d8 <__flatcc_gen_sort@@Base+0x2574>
   1d854:	add	r2, pc, r2
   1d858:	str	r2, [sp, #68]	; 0x44
   1d85c:	ldr	r2, [pc, #-1416]	; 1d2dc <__flatcc_gen_sort@@Base+0x2578>
   1d860:	add	r2, pc, r2
   1d864:	str	r2, [sp, #72]	; 0x48
   1d868:	ldr	r2, [pc, #-1424]	; 1d2e0 <__flatcc_gen_sort@@Base+0x257c>
   1d86c:	add	r2, pc, r2
   1d870:	str	r2, [sp, #64]	; 0x40
   1d874:	b	1c6f0 <__flatcc_gen_sort@@Base+0x198c>
   1d878:	ldr	r2, [pc, #-1436]	; 1d2e4 <__flatcc_gen_sort@@Base+0x2580>
   1d87c:	add	r2, pc, r2
   1d880:	str	r2, [sp, #68]	; 0x44
   1d884:	ldr	r2, [pc, #-1444]	; 1d2e8 <__flatcc_gen_sort@@Base+0x2584>
   1d888:	add	r2, pc, r2
   1d88c:	str	r2, [sp, #72]	; 0x48
   1d890:	ldr	r2, [pc, #-1452]	; 1d2ec <__flatcc_gen_sort@@Base+0x2588>
   1d894:	add	r2, pc, r2
   1d898:	str	r2, [sp, #64]	; 0x40
   1d89c:	b	1c73c <__flatcc_gen_sort@@Base+0x19d8>
   1d8a0:	ldr	r3, [pc, #-1464]	; 1d2f0 <__flatcc_gen_sort@@Base+0x258c>
   1d8a4:	add	r3, pc, r3
   1d8a8:	str	r3, [sp, #68]	; 0x44
   1d8ac:	ldr	r3, [pc, #-1472]	; 1d2f4 <__flatcc_gen_sort@@Base+0x2590>
   1d8b0:	add	r3, pc, r3
   1d8b4:	str	r3, [sp, #64]	; 0x40
   1d8b8:	b	1cd10 <__flatcc_gen_sort@@Base+0x1fac>
   1d8bc:	ldr	r2, [pc, #-1464]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d8c0:	mov	r3, #260	; 0x104
   1d8c4:	ldr	r1, [sp, #92]	; 0x5c
   1d8c8:	ldr	r0, [pc, #-1496]	; 1d2f8 <__flatcc_gen_sort@@Base+0x2594>
   1d8cc:	ldr	r4, [pc, #-1496]	; 1d2fc <__flatcc_gen_sort@@Base+0x2598>
   1d8d0:	ldr	ip, [r1, r2]
   1d8d4:	add	r0, pc, r0
   1d8d8:	ldr	r1, [pc, #-1504]	; 1d300 <__flatcc_gen_sort@@Base+0x259c>
   1d8dc:	add	r4, pc, r4
   1d8e0:	str	r0, [sp]
   1d8e4:	mov	r2, r4
   1d8e8:	ldr	r0, [ip]
   1d8ec:	add	r1, pc, r1
   1d8f0:	bl	13f58 <fprintf@plt>
   1d8f4:	ldr	r3, [pc, #-1528]	; 1d304 <__flatcc_gen_sort@@Base+0x25a0>
   1d8f8:	mov	r1, r4
   1d8fc:	mov	r2, #260	; 0x104
   1d900:	ldr	r0, [pc, #-1536]	; 1d308 <__flatcc_gen_sort@@Base+0x25a4>
   1d904:	add	r3, pc, r3
   1d908:	add	r3, r3, #128	; 0x80
   1d90c:	add	r0, pc, r0
   1d910:	bl	1400c <__assert_fail@plt>
   1d914:	ldr	r2, [pc, #-1552]	; 1d30c <__flatcc_gen_sort@@Base+0x25a8>
   1d918:	mov	r3, #260	; 0x104
   1d91c:	ldr	r1, [sp, #92]	; 0x5c
   1d920:	ldr	r0, [pc, #-1560]	; 1d310 <__flatcc_gen_sort@@Base+0x25ac>
   1d924:	ldr	r4, [pc, #-1560]	; 1d314 <__flatcc_gen_sort@@Base+0x25b0>
   1d928:	ldr	ip, [r1, r2]
   1d92c:	add	r0, pc, r0
   1d930:	ldr	r1, [pc, #-1568]	; 1d318 <__flatcc_gen_sort@@Base+0x25b4>
   1d934:	add	r4, pc, r4
   1d938:	str	r0, [sp]
   1d93c:	mov	r2, r4
   1d940:	ldr	r0, [ip]
   1d944:	add	r1, pc, r1
   1d948:	bl	13f58 <fprintf@plt>
   1d94c:	ldr	r3, [pc, #-1592]	; 1d31c <__flatcc_gen_sort@@Base+0x25b8>
   1d950:	mov	r1, r4
   1d954:	mov	r2, #260	; 0x104
   1d958:	ldr	r0, [pc, #-1600]	; 1d320 <__flatcc_gen_sort@@Base+0x25bc>
   1d95c:	add	r3, pc, r3
   1d960:	add	r3, r3, #128	; 0x80
   1d964:	add	r0, pc, r0
   1d968:	bl	1400c <__assert_fail@plt>
   1d96c:	ldr	r3, [pc, #3976]	; 1e8fc <__flatcc_gen_sort@@Base+0x3b98>
   1d970:	mov	r2, #220	; 0xdc
   1d974:	mov	r1, #0
   1d978:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d97c:	mov	r4, r0
   1d980:	strd	r6, [sp, #8]
   1d984:	strd	r8, [sp, #16]
   1d988:	strd	sl, [sp, #24]
   1d98c:	str	lr, [sp, #32]
   1d990:	sub	sp, sp, #508	; 0x1fc
   1d994:	add	r3, pc, r3
   1d998:	add	fp, sp, #284	; 0x11c
   1d99c:	mov	r0, fp
   1d9a0:	str	r3, [sp, #60]	; 0x3c
   1d9a4:	bl	13f70 <memset@plt>
   1d9a8:	ldr	r3, [r4, #208]	; 0xd0
   1d9ac:	ldr	r5, [r3, #40]	; 0x28
   1d9b0:	cmp	r5, #0
   1d9b4:	beq	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1d9b8:	ldr	r6, [pc, #3904]	; 1e900 <__flatcc_gen_sort@@Base+0x3b9c>
   1d9bc:	mov	r2, #0
   1d9c0:	add	r6, pc, r6
   1d9c4:	ldrh	r3, [r5, #8]
   1d9c8:	cmp	r3, #4
   1d9cc:	bne	1d9fc <__flatcc_gen_sort@@Base+0x2c98>
   1d9d0:	mov	r2, fp
   1d9d4:	mov	r1, r5
   1d9d8:	ldr	r0, [r5, #12]
   1d9dc:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1d9e0:	mov	r2, r4
   1d9e4:	mov	r3, fp
   1d9e8:	stm	sp, {r4, fp}
   1d9ec:	mov	r1, r6
   1d9f0:	ldr	r0, [r4, #204]	; 0xcc
   1d9f4:	bl	13f58 <fprintf@plt>
   1d9f8:	mov	r2, #1
   1d9fc:	ldr	r5, [r5]
   1da00:	cmp	r5, #0
   1da04:	bne	1d9c4 <__flatcc_gen_sort@@Base+0x2c60>
   1da08:	cmp	r2, #0
   1da0c:	beq	1da1c <__flatcc_gen_sort@@Base+0x2cb8>
   1da10:	mov	r0, #10
   1da14:	ldr	r1, [r4, #204]	; 0xcc
   1da18:	bl	13fb8 <fputc@plt>
   1da1c:	ldr	r3, [r4, #208]	; 0xd0
   1da20:	ldr	r5, [r3, #40]	; 0x28
   1da24:	cmp	r5, #0
   1da28:	beq	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1da2c:	ldr	r3, [pc, #3792]	; 1e904 <__flatcc_gen_sort@@Base+0x3ba0>
   1da30:	mov	r9, #0
   1da34:	ldr	sl, [pc, #3788]	; 1e908 <__flatcc_gen_sort@@Base+0x3ba4>
   1da38:	ldr	r8, [pc, #3788]	; 1e90c <__flatcc_gen_sort@@Base+0x3ba8>
   1da3c:	add	r3, pc, r3
   1da40:	str	r3, [sp, #32]
   1da44:	add	sl, pc, sl
   1da48:	ldr	r3, [pc, #3776]	; 1e910 <__flatcc_gen_sort@@Base+0x3bac>
   1da4c:	add	r8, pc, r8
   1da50:	add	r3, pc, r3
   1da54:	str	r3, [sp, #40]	; 0x28
   1da58:	ldrh	r6, [r5, #8]
   1da5c:	cmp	r6, #0
   1da60:	bne	1dbc8 <__flatcc_gen_sort@@Base+0x2e64>
   1da64:	mov	r2, #220	; 0xdc
   1da68:	mov	r1, r6
   1da6c:	mov	r0, fp
   1da70:	bl	13f70 <memset@plt>
   1da74:	ldr	r3, [r5, #20]
   1da78:	cmp	r3, #0
   1da7c:	beq	1e724 <__flatcc_gen_sort@@Base+0x39c0>
   1da80:	ldrh	r2, [r3, #72]	; 0x48
   1da84:	ldr	r3, [r3]
   1da88:	tst	r2, #4
   1da8c:	addeq	r6, r6, #1
   1da90:	cmp	r3, #0
   1da94:	bne	1da80 <__flatcc_gen_sort@@Base+0x2d1c>
   1da98:	mov	r2, fp
   1da9c:	mov	r1, r5
   1daa0:	ldr	r0, [r5, #12]
   1daa4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1daa8:	mov	r3, fp
   1daac:	mov	r2, r4
   1dab0:	ldr	r1, [sp, #32]
   1dab4:	ldr	r0, [r4, #204]	; 0xcc
   1dab8:	bl	13f58 <fprintf@plt>
   1dabc:	ldr	r7, [r5, #20]
   1dac0:	cmp	r7, #0
   1dac4:	beq	1e598 <__flatcc_gen_sort@@Base+0x3834>
   1dac8:	ldr	r3, [pc, #3652]	; 1e914 <__flatcc_gen_sort@@Base+0x3bb0>
   1dacc:	mov	r9, #0
   1dad0:	ldr	r0, [r4, #204]	; 0xcc
   1dad4:	add	r3, pc, r3
   1dad8:	str	r3, [sp, #36]	; 0x24
   1dadc:	b	1db34 <__flatcc_gen_sort@@Base+0x2dd0>
   1dae0:	cmp	r6, #0
   1dae4:	beq	1db14 <__flatcc_gen_sort@@Base+0x2db0>
   1dae8:	tst	r9, #3
   1daec:	bne	1dafc <__flatcc_gen_sort@@Base+0x2d98>
   1daf0:	sub	r3, r6, r9
   1daf4:	cmp	r3, #2
   1daf8:	bgt	1e6ec <__flatcc_gen_sort@@Base+0x3988>
   1dafc:	mov	r3, r0
   1db00:	mov	r2, #2
   1db04:	ldr	r0, [sp, #40]	; 0x28
   1db08:	mov	r1, #1
   1db0c:	bl	13eec <fwrite@plt>
   1db10:	ldr	r0, [r4, #204]	; 0xcc
   1db14:	mov	r1, r8
   1db18:	add	r9, r9, #1
   1db1c:	ldr	r2, [r7, #96]	; 0x60
   1db20:	bl	13f58 <fprintf@plt>
   1db24:	ldr	r0, [r4, #204]	; 0xcc
   1db28:	ldr	r7, [r7]
   1db2c:	cmp	r7, #0
   1db30:	beq	1db64 <__flatcc_gen_sort@@Base+0x2e00>
   1db34:	ldrh	r3, [r7, #72]	; 0x48
   1db38:	tst	r3, #4
   1db3c:	bne	1db28 <__flatcc_gen_sort@@Base+0x2dc4>
   1db40:	tst	r3, #256	; 0x100
   1db44:	beq	1db28 <__flatcc_gen_sort@@Base+0x2dc4>
   1db48:	cmp	r9, #0
   1db4c:	bne	1dae0 <__flatcc_gen_sort@@Base+0x2d7c>
   1db50:	mov	r1, r0
   1db54:	mov	r0, #32
   1db58:	bl	13fb8 <fputc@plt>
   1db5c:	ldr	r0, [r4, #204]	; 0xcc
   1db60:	b	1db14 <__flatcc_gen_sort@@Base+0x2db0>
   1db64:	cmp	r9, #0
   1db68:	beq	1e59c <__flatcc_gen_sort@@Base+0x3838>
   1db6c:	mov	r3, r0
   1db70:	ldr	r0, [pc, #3488]	; 1e918 <__flatcc_gen_sort@@Base+0x3bb4>
   1db74:	mov	r2, #7
   1db78:	mov	r1, #1
   1db7c:	add	r0, pc, r0
   1db80:	bl	13eec <fwrite@plt>
   1db84:	mov	r2, #220	; 0xdc
   1db88:	mov	r1, #0
   1db8c:	mov	r0, fp
   1db90:	mov	r9, #1
   1db94:	bl	13f70 <memset@plt>
   1db98:	mov	r2, fp
   1db9c:	mov	r1, r5
   1dba0:	ldr	r0, [r5, #12]
   1dba4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1dba8:	ldrd	r6, [r5, #96]	; 0x60
   1dbac:	mov	r3, r4
   1dbb0:	mov	r2, r4
   1dbb4:	mov	r1, sl
   1dbb8:	str	fp, [sp]
   1dbbc:	ldr	r0, [r4, #204]	; 0xcc
   1dbc0:	strd	r6, [sp, #8]
   1dbc4:	bl	13f58 <fprintf@plt>
   1dbc8:	ldr	r5, [r5]
   1dbcc:	cmp	r5, #0
   1dbd0:	bne	1da58 <__flatcc_gen_sort@@Base+0x2cf4>
   1dbd4:	ldr	r3, [r4, #208]	; 0xd0
   1dbd8:	str	r9, [sp, #48]	; 0x30
   1dbdc:	ldr	sl, [r3, #40]	; 0x28
   1dbe0:	cmp	sl, #0
   1dbe4:	beq	1e5d0 <__flatcc_gen_sort@@Base+0x386c>
   1dbe8:	ldr	r3, [pc, #3372]	; 1e91c <__flatcc_gen_sort@@Base+0x3bb8>
   1dbec:	add	r3, pc, r3
   1dbf0:	str	r3, [sp, #52]	; 0x34
   1dbf4:	ldr	r3, [pc, #3364]	; 1e920 <__flatcc_gen_sort@@Base+0x3bbc>
   1dbf8:	add	r3, pc, r3
   1dbfc:	str	r3, [sp, #36]	; 0x24
   1dc00:	ldr	r3, [pc, #3356]	; 1e924 <__flatcc_gen_sort@@Base+0x3bc0>
   1dc04:	add	r3, pc, r3
   1dc08:	str	r3, [sp, #40]	; 0x28
   1dc0c:	ldr	r3, [pc, #3348]	; 1e928 <__flatcc_gen_sort@@Base+0x3bc4>
   1dc10:	add	r3, pc, r3
   1dc14:	str	r3, [sp, #56]	; 0x38
   1dc18:	ldrh	r5, [sl, #8]
   1dc1c:	cmp	r5, #0
   1dc20:	bne	1e204 <__flatcc_gen_sort@@Base+0x34a0>
   1dc24:	add	r8, sp, #64	; 0x40
   1dc28:	mov	r2, #220	; 0xdc
   1dc2c:	mov	r1, r5
   1dc30:	mov	r0, r8
   1dc34:	bl	13f70 <memset@plt>
   1dc38:	mov	r2, r8
   1dc3c:	mov	r1, sl
   1dc40:	ldr	r0, [sl, #12]
   1dc44:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1dc48:	ldr	r3, [sl, #20]
   1dc4c:	cmp	r3, #0
   1dc50:	beq	1e72c <__flatcc_gen_sort@@Base+0x39c8>
   1dc54:	ldrh	r2, [r3, #72]	; 0x48
   1dc58:	ldr	r3, [r3]
   1dc5c:	tst	r2, #4
   1dc60:	addeq	r5, r5, #1
   1dc64:	cmp	r3, #0
   1dc68:	bne	1dc54 <__flatcc_gen_sort@@Base+0x2ef0>
   1dc6c:	mov	r2, r8
   1dc70:	ldr	r1, [sp, #52]	; 0x34
   1dc74:	ldr	r0, [r4, #204]	; 0xcc
   1dc78:	bl	13f58 <fprintf@plt>
   1dc7c:	mov	r2, #220	; 0xdc
   1dc80:	mov	r1, #0
   1dc84:	mov	r0, fp
   1dc88:	bl	13f70 <memset@plt>
   1dc8c:	ldr	r6, [sl, #20]
   1dc90:	cmp	r6, #0
   1dc94:	beq	1dddc <__flatcc_gen_sort@@Base+0x3078>
   1dc98:	ldr	r3, [sp, #56]	; 0x38
   1dc9c:	mov	r2, #0
   1dca0:	str	r3, [sp, #32]
   1dca4:	ldrh	r3, [r6, #72]	; 0x48
   1dca8:	str	r8, [sp, #44]	; 0x2c
   1dcac:	tst	r3, #4
   1dcb0:	bne	1ddc8 <__flatcc_gen_sort@@Base+0x3064>
   1dcb4:	cmp	r5, #0
   1dcb8:	add	r7, r2, #1
   1dcbc:	beq	1dcec <__flatcc_gen_sort@@Base+0x2f88>
   1dcc0:	cmp	r2, #0
   1dcc4:	ldr	r3, [r4, #204]	; 0xcc
   1dcc8:	bne	1e1ac <__flatcc_gen_sort@@Base+0x3448>
   1dccc:	cmp	r5, #4
   1dcd0:	ble	1e194 <__flatcc_gen_sort@@Base+0x3430>
   1dcd4:	ldr	r2, [pc, #3152]	; 1e92c <__flatcc_gen_sort@@Base+0x3bc8>
   1dcd8:	mov	r0, r3
   1dcdc:	ldr	r1, [pc, #3148]	; 1e930 <__flatcc_gen_sort@@Base+0x3bcc>
   1dce0:	add	r2, pc, r2
   1dce4:	add	r1, pc, r1
   1dce8:	bl	13f58 <fprintf@plt>
   1dcec:	ldrh	r3, [r6, #24]
   1dcf0:	sub	r3, r3, #7
   1dcf4:	cmp	r3, #8
   1dcf8:	addls	pc, pc, r3, lsl #2
   1dcfc:	b	1e744 <__flatcc_gen_sort@@Base+0x39e0>
   1dd00:	b	1ded0 <__flatcc_gen_sort@@Base+0x316c>
   1dd04:	b	1df10 <__flatcc_gen_sort@@Base+0x31ac>
   1dd08:	b	1deb4 <__flatcc_gen_sort@@Base+0x3150>
   1dd0c:	b	1dd94 <__flatcc_gen_sort@@Base+0x3030>
   1dd10:	b	1e744 <__flatcc_gen_sort@@Base+0x39e0>
   1dd14:	b	1e744 <__flatcc_gen_sort@@Base+0x39e0>
   1dd18:	b	1e744 <__flatcc_gen_sort@@Base+0x39e0>
   1dd1c:	b	1dd5c <__flatcc_gen_sort@@Base+0x2ff8>
   1dd20:	b	1dd24 <__flatcc_gen_sort@@Base+0x2fc0>
   1dd24:	ldr	r1, [r6, #16]
   1dd28:	mov	r2, fp
   1dd2c:	ldr	r0, [r1, #12]
   1dd30:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1dd34:	ldr	r3, [r6, #16]
   1dd38:	ldrh	r3, [r3, #8]
   1dd3c:	cmp	r3, #4
   1dd40:	addls	pc, pc, r3, lsl #2
   1dd44:	b	1e84c <__flatcc_gen_sort@@Base+0x3ae8>
   1dd48:	b	1df78 <__flatcc_gen_sort@@Base+0x3214>
   1dd4c:	b	1df78 <__flatcc_gen_sort@@Base+0x3214>
   1dd50:	b	1e84c <__flatcc_gen_sort@@Base+0x3ae8>
   1dd54:	b	1df78 <__flatcc_gen_sort@@Base+0x3214>
   1dd58:	b	1df58 <__flatcc_gen_sort@@Base+0x31f4>
   1dd5c:	ldr	r1, [r6, #16]
   1dd60:	mov	r2, fp
   1dd64:	ldr	r0, [r1, #12]
   1dd68:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1dd6c:	ldr	r3, [r6, #16]
   1dd70:	ldrh	r3, [r3, #8]
   1dd74:	cmp	r3, #4
   1dd78:	addls	pc, pc, r3, lsl #2
   1dd7c:	b	1e7f4 <__flatcc_gen_sort@@Base+0x3a90>
   1dd80:	b	1dff8 <__flatcc_gen_sort@@Base+0x3294>
   1dd84:	b	1dfd8 <__flatcc_gen_sort@@Base+0x3274>
   1dd88:	b	1e7f4 <__flatcc_gen_sort@@Base+0x3a90>
   1dd8c:	b	1dfb8 <__flatcc_gen_sort@@Base+0x3254>
   1dd90:	b	1df98 <__flatcc_gen_sort@@Base+0x3234>
   1dd94:	ldrd	r8, [r6, #96]	; 0x60
   1dd98:	mov	r2, r4
   1dd9c:	ldr	r1, [sp, #40]	; 0x28
   1dda0:	ldr	r0, [r4, #204]	; 0xcc
   1dda4:	strd	r8, [sp]
   1dda8:	bl	13f58 <fprintf@plt>
   1ddac:	ldr	r6, [r6]
   1ddb0:	cmp	r6, #0
   1ddb4:	beq	1ddd8 <__flatcc_gen_sort@@Base+0x3074>
   1ddb8:	ldrh	r3, [r6, #72]	; 0x48
   1ddbc:	mov	r2, r7
   1ddc0:	tst	r3, #4
   1ddc4:	beq	1dcb4 <__flatcc_gen_sort@@Base+0x2f50>
   1ddc8:	ldr	r6, [r6]
   1ddcc:	mov	r7, r2
   1ddd0:	cmp	r6, #0
   1ddd4:	bne	1ddb8 <__flatcc_gen_sort@@Base+0x3054>
   1ddd8:	ldr	r8, [sp, #44]	; 0x2c
   1dddc:	mov	r2, r8
   1dde0:	ldr	r1, [pc, #2892]	; 1e934 <__flatcc_gen_sort@@Base+0x3bd0>
   1dde4:	ldr	r0, [r4, #204]	; 0xcc
   1dde8:	add	r1, pc, r1
   1ddec:	bl	13f58 <fprintf@plt>
   1ddf0:	ldr	r6, [sl, #20]
   1ddf4:	cmp	r6, #0
   1ddf8:	beq	1e1d8 <__flatcc_gen_sort@@Base+0x3474>
   1ddfc:	ldr	r3, [pc, #2868]	; 1e938 <__flatcc_gen_sort@@Base+0x3bd4>
   1de00:	mov	r7, #0
   1de04:	ldr	r9, [pc, #2864]	; 1e93c <__flatcc_gen_sort@@Base+0x3bd8>
   1de08:	ldr	r0, [r4, #204]	; 0xcc
   1de0c:	add	r3, pc, r3
   1de10:	str	r3, [sp, #32]
   1de14:	add	r9, pc, r9
   1de18:	ldr	r3, [pc, #2848]	; 1e940 <__flatcc_gen_sort@@Base+0x3bdc>
   1de1c:	add	r3, pc, r3
   1de20:	str	r3, [sp, #44]	; 0x2c
   1de24:	b	1de68 <__flatcc_gen_sort@@Base+0x3104>
   1de28:	cmp	r5, #4
   1de2c:	ble	1e578 <__flatcc_gen_sort@@Base+0x3814>
   1de30:	ldr	r2, [pc, #2828]	; 1e944 <__flatcc_gen_sort@@Base+0x3be0>
   1de34:	ldr	r1, [pc, #2828]	; 1e948 <__flatcc_gen_sort@@Base+0x3be4>
   1de38:	add	r2, pc, r2
   1de3c:	add	r1, pc, r1
   1de40:	bl	13f58 <fprintf@plt>
   1de44:	ldr	r0, [r4, #204]	; 0xcc
   1de48:	mov	r1, r9
   1de4c:	add	r7, r7, #1
   1de50:	ldrd	r2, [r6, #96]	; 0x60
   1de54:	bl	13f58 <fprintf@plt>
   1de58:	ldr	r0, [r4, #204]	; 0xcc
   1de5c:	ldr	r6, [r6]
   1de60:	cmp	r6, #0
   1de64:	beq	1e1dc <__flatcc_gen_sort@@Base+0x3478>
   1de68:	ldrh	r3, [r6, #72]	; 0x48
   1de6c:	tst	r3, #4
   1de70:	bne	1de5c <__flatcc_gen_sort@@Base+0x30f8>
   1de74:	cmp	r5, #0
   1de78:	beq	1de48 <__flatcc_gen_sort@@Base+0x30e4>
   1de7c:	cmp	r7, #0
   1de80:	beq	1de28 <__flatcc_gen_sort@@Base+0x30c4>
   1de84:	tst	r7, #3
   1de88:	bne	1de98 <__flatcc_gen_sort@@Base+0x3134>
   1de8c:	sub	r3, r5, r7
   1de90:	cmp	r3, #2
   1de94:	bgt	1e5b8 <__flatcc_gen_sort@@Base+0x3854>
   1de98:	mov	r3, r0
   1de9c:	mov	r2, #2
   1dea0:	ldr	r0, [sp, #32]
   1dea4:	mov	r1, #1
   1dea8:	bl	13eec <fwrite@plt>
   1deac:	ldr	r0, [r4, #204]	; 0xcc
   1deb0:	b	1de48 <__flatcc_gen_sort@@Base+0x30e4>
   1deb4:	ldrd	r8, [r6, #96]	; 0x60
   1deb8:	mov	r2, r4
   1debc:	ldr	r1, [sp, #36]	; 0x24
   1dec0:	ldr	r0, [r4, #204]	; 0xcc
   1dec4:	strd	r8, [sp]
   1dec8:	bl	13f58 <fprintf@plt>
   1decc:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1ded0:	ldr	r3, [r6, #16]
   1ded4:	sub	r3, r3, #1
   1ded8:	cmp	r3, #10
   1dedc:	addls	pc, pc, r3, lsl #2
   1dee0:	b	1e8a4 <__flatcc_gen_sort@@Base+0x3b40>
   1dee4:	b	1e0a8 <__flatcc_gen_sort@@Base+0x3344>
   1dee8:	b	1e09c <__flatcc_gen_sort@@Base+0x3338>
   1deec:	b	1e090 <__flatcc_gen_sort@@Base+0x332c>
   1def0:	b	1e084 <__flatcc_gen_sort@@Base+0x3320>
   1def4:	b	1e078 <__flatcc_gen_sort@@Base+0x3314>
   1def8:	b	1e06c <__flatcc_gen_sort@@Base+0x3308>
   1defc:	b	1e060 <__flatcc_gen_sort@@Base+0x32fc>
   1df00:	b	1e054 <__flatcc_gen_sort@@Base+0x32f0>
   1df04:	b	1e048 <__flatcc_gen_sort@@Base+0x32e4>
   1df08:	b	1e03c <__flatcc_gen_sort@@Base+0x32d8>
   1df0c:	b	1e018 <__flatcc_gen_sort@@Base+0x32b4>
   1df10:	ldr	r3, [r6, #16]
   1df14:	cmp	r3, #5
   1df18:	beq	1e568 <__flatcc_gen_sort@@Base+0x3804>
   1df1c:	sub	r3, r3, #1
   1df20:	cmp	r3, #10
   1df24:	addls	pc, pc, r3, lsl #2
   1df28:	b	1e79c <__flatcc_gen_sort@@Base+0x3a38>
   1df2c:	b	1e180 <__flatcc_gen_sort@@Base+0x341c>
   1df30:	b	1e16c <__flatcc_gen_sort@@Base+0x3408>
   1df34:	b	1e158 <__flatcc_gen_sort@@Base+0x33f4>
   1df38:	b	1e144 <__flatcc_gen_sort@@Base+0x33e0>
   1df3c:	b	1e79c <__flatcc_gen_sort@@Base+0x3a38>
   1df40:	b	1e11c <__flatcc_gen_sort@@Base+0x33b8>
   1df44:	b	1e108 <__flatcc_gen_sort@@Base+0x33a4>
   1df48:	b	1e0f4 <__flatcc_gen_sort@@Base+0x3390>
   1df4c:	b	1e0e0 <__flatcc_gen_sort@@Base+0x337c>
   1df50:	b	1e0b4 <__flatcc_gen_sort@@Base+0x3350>
   1df54:	b	1e130 <__flatcc_gen_sort@@Base+0x33cc>
   1df58:	ldr	r1, [pc, #2540]	; 1e94c <__flatcc_gen_sort@@Base+0x3be8>
   1df5c:	mov	r2, fp
   1df60:	ldrd	r8, [r6, #96]	; 0x60
   1df64:	add	r1, pc, r1
   1df68:	strd	r8, [sp]
   1df6c:	ldr	r0, [r4, #204]	; 0xcc
   1df70:	bl	13f58 <fprintf@plt>
   1df74:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1df78:	ldr	r1, [pc, #2512]	; 1e950 <__flatcc_gen_sort@@Base+0x3bec>
   1df7c:	mov	r2, fp
   1df80:	ldrd	r8, [r6, #96]	; 0x60
   1df84:	add	r1, pc, r1
   1df88:	strd	r8, [sp]
   1df8c:	ldr	r0, [r4, #204]	; 0xcc
   1df90:	bl	13f58 <fprintf@plt>
   1df94:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1df98:	ldr	r1, [pc, #2484]	; 1e954 <__flatcc_gen_sort@@Base+0x3bf0>
   1df9c:	mov	r2, fp
   1dfa0:	ldrd	r8, [r6, #96]	; 0x60
   1dfa4:	add	r1, pc, r1
   1dfa8:	strd	r8, [sp]
   1dfac:	ldr	r0, [r4, #204]	; 0xcc
   1dfb0:	bl	13f58 <fprintf@plt>
   1dfb4:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1dfb8:	ldr	r1, [pc, #2456]	; 1e958 <__flatcc_gen_sort@@Base+0x3bf4>
   1dfbc:	mov	r2, fp
   1dfc0:	ldrd	r8, [r6, #96]	; 0x60
   1dfc4:	add	r1, pc, r1
   1dfc8:	strd	r8, [sp]
   1dfcc:	ldr	r0, [r4, #204]	; 0xcc
   1dfd0:	bl	13f58 <fprintf@plt>
   1dfd4:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1dfd8:	ldr	r1, [pc, #2428]	; 1e95c <__flatcc_gen_sort@@Base+0x3bf8>
   1dfdc:	mov	r2, fp
   1dfe0:	ldrd	r8, [r6, #96]	; 0x60
   1dfe4:	add	r1, pc, r1
   1dfe8:	strd	r8, [sp]
   1dfec:	ldr	r0, [r4, #204]	; 0xcc
   1dff0:	bl	13f58 <fprintf@plt>
   1dff4:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1dff8:	ldr	r1, [pc, #2400]	; 1e960 <__flatcc_gen_sort@@Base+0x3bfc>
   1dffc:	mov	r2, fp
   1e000:	ldrd	r8, [r6, #96]	; 0x60
   1e004:	add	r1, pc, r1
   1e008:	strd	r8, [sp]
   1e00c:	ldr	r0, [r4, #204]	; 0xcc
   1e010:	bl	13f58 <fprintf@plt>
   1e014:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1e018:	ldr	r3, [pc, #2372]	; 1e964 <__flatcc_gen_sort@@Base+0x3c00>
   1e01c:	add	r3, pc, r3
   1e020:	ldrd	r8, [r6, #96]	; 0x60
   1e024:	mov	r2, r4
   1e028:	ldr	r1, [sp, #32]
   1e02c:	ldr	r0, [r4, #204]	; 0xcc
   1e030:	strd	r8, [sp]
   1e034:	bl	13f58 <fprintf@plt>
   1e038:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1e03c:	ldr	r3, [pc, #2340]	; 1e968 <__flatcc_gen_sort@@Base+0x3c04>
   1e040:	add	r3, pc, r3
   1e044:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e048:	ldr	r3, [pc, #2332]	; 1e96c <__flatcc_gen_sort@@Base+0x3c08>
   1e04c:	add	r3, pc, r3
   1e050:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e054:	ldr	r3, [pc, #2324]	; 1e970 <__flatcc_gen_sort@@Base+0x3c0c>
   1e058:	add	r3, pc, r3
   1e05c:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e060:	ldr	r3, [pc, #2316]	; 1e974 <__flatcc_gen_sort@@Base+0x3c10>
   1e064:	add	r3, pc, r3
   1e068:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e06c:	ldr	r3, [pc, #2308]	; 1e978 <__flatcc_gen_sort@@Base+0x3c14>
   1e070:	add	r3, pc, r3
   1e074:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e078:	ldr	r3, [pc, #2300]	; 1e97c <__flatcc_gen_sort@@Base+0x3c18>
   1e07c:	add	r3, pc, r3
   1e080:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e084:	ldr	r3, [pc, #2292]	; 1e980 <__flatcc_gen_sort@@Base+0x3c1c>
   1e088:	add	r3, pc, r3
   1e08c:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e090:	ldr	r3, [pc, #2284]	; 1e984 <__flatcc_gen_sort@@Base+0x3c20>
   1e094:	add	r3, pc, r3
   1e098:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e09c:	ldr	r3, [pc, #2276]	; 1e988 <__flatcc_gen_sort@@Base+0x3c24>
   1e0a0:	add	r3, pc, r3
   1e0a4:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e0a8:	ldr	r3, [pc, #2268]	; 1e98c <__flatcc_gen_sort@@Base+0x3c28>
   1e0ac:	add	r3, pc, r3
   1e0b0:	b	1e020 <__flatcc_gen_sort@@Base+0x32bc>
   1e0b4:	ldr	r2, [pc, #2260]	; 1e990 <__flatcc_gen_sort@@Base+0x3c2c>
   1e0b8:	ldr	r3, [pc, #2260]	; 1e994 <__flatcc_gen_sort@@Base+0x3c30>
   1e0bc:	add	r2, pc, r2
   1e0c0:	add	r3, pc, r3
   1e0c4:	ldr	r1, [pc, #2252]	; 1e998 <__flatcc_gen_sort@@Base+0x3c34>
   1e0c8:	ldrd	r8, [r6, #96]	; 0x60
   1e0cc:	add	r1, pc, r1
   1e0d0:	strd	r8, [sp]
   1e0d4:	ldr	r0, [r4, #204]	; 0xcc
   1e0d8:	bl	13f58 <fprintf@plt>
   1e0dc:	b	1ddac <__flatcc_gen_sort@@Base+0x3048>
   1e0e0:	ldr	r2, [pc, #2228]	; 1e99c <__flatcc_gen_sort@@Base+0x3c38>
   1e0e4:	ldr	r3, [pc, #2228]	; 1e9a0 <__flatcc_gen_sort@@Base+0x3c3c>
   1e0e8:	add	r2, pc, r2
   1e0ec:	add	r3, pc, r3
   1e0f0:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e0f4:	ldr	r2, [pc, #2216]	; 1e9a4 <__flatcc_gen_sort@@Base+0x3c40>
   1e0f8:	ldr	r3, [pc, #2216]	; 1e9a8 <__flatcc_gen_sort@@Base+0x3c44>
   1e0fc:	add	r2, pc, r2
   1e100:	add	r3, pc, r3
   1e104:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e108:	ldr	r2, [pc, #2204]	; 1e9ac <__flatcc_gen_sort@@Base+0x3c48>
   1e10c:	ldr	r3, [pc, #2204]	; 1e9b0 <__flatcc_gen_sort@@Base+0x3c4c>
   1e110:	add	r2, pc, r2
   1e114:	add	r3, pc, r3
   1e118:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e11c:	ldr	r2, [pc, #2192]	; 1e9b4 <__flatcc_gen_sort@@Base+0x3c50>
   1e120:	ldr	r3, [pc, #2192]	; 1e9b8 <__flatcc_gen_sort@@Base+0x3c54>
   1e124:	add	r2, pc, r2
   1e128:	add	r3, pc, r3
   1e12c:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e130:	ldr	r2, [pc, #2180]	; 1e9bc <__flatcc_gen_sort@@Base+0x3c58>
   1e134:	ldr	r3, [pc, #2180]	; 1e9c0 <__flatcc_gen_sort@@Base+0x3c5c>
   1e138:	add	r2, pc, r2
   1e13c:	add	r3, pc, r3
   1e140:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e144:	ldr	r2, [pc, #2168]	; 1e9c4 <__flatcc_gen_sort@@Base+0x3c60>
   1e148:	ldr	r3, [pc, #2168]	; 1e9c8 <__flatcc_gen_sort@@Base+0x3c64>
   1e14c:	add	r2, pc, r2
   1e150:	add	r3, pc, r3
   1e154:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e158:	ldr	r2, [pc, #2156]	; 1e9cc <__flatcc_gen_sort@@Base+0x3c68>
   1e15c:	ldr	r3, [pc, #2156]	; 1e9d0 <__flatcc_gen_sort@@Base+0x3c6c>
   1e160:	add	r2, pc, r2
   1e164:	add	r3, pc, r3
   1e168:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e16c:	ldr	r2, [pc, #2144]	; 1e9d4 <__flatcc_gen_sort@@Base+0x3c70>
   1e170:	ldr	r3, [pc, #2144]	; 1e9d8 <__flatcc_gen_sort@@Base+0x3c74>
   1e174:	add	r2, pc, r2
   1e178:	add	r3, pc, r3
   1e17c:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e180:	ldr	r2, [pc, #2132]	; 1e9dc <__flatcc_gen_sort@@Base+0x3c78>
   1e184:	ldr	r3, [pc, #2132]	; 1e9e0 <__flatcc_gen_sort@@Base+0x3c7c>
   1e188:	add	r2, pc, r2
   1e18c:	add	r3, pc, r3
   1e190:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e194:	ldr	r0, [pc, #2120]	; 1e9e4 <__flatcc_gen_sort@@Base+0x3c80>
   1e198:	mov	r2, #2
   1e19c:	mov	r1, #1
   1e1a0:	add	r0, pc, r0
   1e1a4:	bl	13eec <fwrite@plt>
   1e1a8:	b	1dcec <__flatcc_gen_sort@@Base+0x2f88>
   1e1ac:	tst	r2, #3
   1e1b0:	bne	1e1c0 <__flatcc_gen_sort@@Base+0x345c>
   1e1b4:	sub	r2, r5, r2
   1e1b8:	cmp	r2, #2
   1e1bc:	bgt	1e54c <__flatcc_gen_sort@@Base+0x37e8>
   1e1c0:	ldr	r0, [pc, #2080]	; 1e9e8 <__flatcc_gen_sort@@Base+0x3c84>
   1e1c4:	mov	r2, #2
   1e1c8:	mov	r1, #1
   1e1cc:	add	r0, pc, r0
   1e1d0:	bl	13eec <fwrite@plt>
   1e1d4:	b	1dcec <__flatcc_gen_sort@@Base+0x2f88>
   1e1d8:	ldr	r0, [r4, #204]	; 0xcc
   1e1dc:	mov	r1, r0
   1e1e0:	mov	r0, #10
   1e1e4:	bl	13fb8 <fputc@plt>
   1e1e8:	ldr	r1, [pc, #2044]	; 1e9ec <__flatcc_gen_sort@@Base+0x3c88>
   1e1ec:	mov	r3, r8
   1e1f0:	mov	r2, r8
   1e1f4:	stm	sp, {r4, r8}
   1e1f8:	ldr	r0, [r4, #204]	; 0xcc
   1e1fc:	add	r1, pc, r1
   1e200:	bl	13f58 <fprintf@plt>
   1e204:	ldr	sl, [sl]
   1e208:	cmp	sl, #0
   1e20c:	bne	1dc18 <__flatcc_gen_sort@@Base+0x2eb4>
   1e210:	ldr	r3, [sp, #48]	; 0x30
   1e214:	cmp	r3, #0
   1e218:	bne	1e734 <__flatcc_gen_sort@@Base+0x39d0>
   1e21c:	ldr	r3, [r4, #208]	; 0xd0
   1e220:	ldr	r7, [r3, #40]	; 0x28
   1e224:	cmp	r7, #0
   1e228:	beq	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1e22c:	ldr	r3, [pc, #1980]	; 1e9f0 <__flatcc_gen_sort@@Base+0x3c8c>
   1e230:	mov	r2, #0
   1e234:	ldr	sl, [pc, #1976]	; 1e9f4 <__flatcc_gen_sort@@Base+0x3c90>
   1e238:	ldr	r9, [pc, #1976]	; 1e9f8 <__flatcc_gen_sort@@Base+0x3c94>
   1e23c:	add	r3, pc, r3
   1e240:	ldr	r8, [pc, #1972]	; 1e9fc <__flatcc_gen_sort@@Base+0x3c98>
   1e244:	add	sl, pc, sl
   1e248:	str	r3, [sp, #32]
   1e24c:	add	r9, pc, r9
   1e250:	add	r8, pc, r8
   1e254:	b	1e264 <__flatcc_gen_sort@@Base+0x3500>
   1e258:	ldr	r7, [r7]
   1e25c:	cmp	r7, #0
   1e260:	beq	1e3ec <__flatcc_gen_sort@@Base+0x3688>
   1e264:	ldrh	r3, [r7, #8]
   1e268:	cmp	r3, #4
   1e26c:	bne	1e258 <__flatcc_gen_sort@@Base+0x34f4>
   1e270:	add	r5, sp, #64	; 0x40
   1e274:	mov	r2, #220	; 0xdc
   1e278:	mov	r1, #0
   1e27c:	mov	r0, r5
   1e280:	bl	13f70 <memset@plt>
   1e284:	mov	r2, #220	; 0xdc
   1e288:	mov	r1, #0
   1e28c:	mov	r0, fp
   1e290:	bl	13f70 <memset@plt>
   1e294:	mov	r2, r5
   1e298:	mov	r1, r7
   1e29c:	ldr	r0, [r7, #12]
   1e2a0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1e2a4:	ldr	r6, [r7, #20]
   1e2a8:	cmp	r6, #0
   1e2ac:	bne	1e308 <__flatcc_gen_sort@@Base+0x35a4>
   1e2b0:	b	1e3c4 <__flatcc_gen_sort@@Base+0x3660>
   1e2b4:	ldr	r1, [r6, #16]
   1e2b8:	mov	r2, fp
   1e2bc:	ldr	r0, [r1, #12]
   1e2c0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1e2c4:	ldr	lr, [r6, #4]
   1e2c8:	mov	r3, r5
   1e2cc:	mov	r2, r5
   1e2d0:	mov	r1, r9
   1e2d4:	ldr	r0, [r4, #204]	; 0xcc
   1e2d8:	ldm	lr, {ip, lr}
   1e2dc:	str	fp, [sp, #8]
   1e2e0:	str	lr, [sp]
   1e2e4:	str	ip, [sp, #4]
   1e2e8:	str	r5, [sp, #12]
   1e2ec:	str	r5, [sp, #16]
   1e2f0:	str	lr, [sp, #20]
   1e2f4:	str	ip, [sp, #24]
   1e2f8:	bl	13f58 <fprintf@plt>
   1e2fc:	ldr	r6, [r6]
   1e300:	cmp	r6, #0
   1e304:	beq	1e3c4 <__flatcc_gen_sort@@Base+0x3660>
   1e308:	ldrh	r3, [r6, #24]
   1e30c:	cmp	r3, #10
   1e310:	beq	1e37c <__flatcc_gen_sort@@Base+0x3618>
   1e314:	cmp	r3, #14
   1e318:	beq	1e2b4 <__flatcc_gen_sort@@Base+0x3550>
   1e31c:	cmp	r3, #0
   1e320:	beq	1e39c <__flatcc_gen_sort@@Base+0x3638>
   1e324:	ldr	r2, [pc, #1748]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e328:	movw	r3, #1608	; 0x648
   1e32c:	ldr	r1, [sp, #60]	; 0x3c
   1e330:	ldr	r0, [pc, #1740]	; 1ea04 <__flatcc_gen_sort@@Base+0x3ca0>
   1e334:	ldr	r4, [pc, #1740]	; 1ea08 <__flatcc_gen_sort@@Base+0x3ca4>
   1e338:	ldr	ip, [r1, r2]
   1e33c:	add	r0, pc, r0
   1e340:	ldr	r1, [pc, #1732]	; 1ea0c <__flatcc_gen_sort@@Base+0x3ca8>
   1e344:	add	r4, pc, r4
   1e348:	str	r0, [sp]
   1e34c:	mov	r2, r4
   1e350:	ldr	r0, [ip]
   1e354:	add	r1, pc, r1
   1e358:	bl	13f58 <fprintf@plt>
   1e35c:	ldr	r3, [pc, #1708]	; 1ea10 <__flatcc_gen_sort@@Base+0x3cac>
   1e360:	mov	r1, r4
   1e364:	movw	r2, #1608	; 0x648
   1e368:	ldr	r0, [pc, #1700]	; 1ea14 <__flatcc_gen_sort@@Base+0x3cb0>
   1e36c:	add	r3, pc, r3
   1e370:	add	r3, r3, #196	; 0xc4
   1e374:	add	r0, pc, r0
   1e378:	bl	1400c <__assert_fail@plt>
   1e37c:	ldr	lr, [r6, #4]
   1e380:	mov	r3, r5
   1e384:	mov	r2, r5
   1e388:	mov	r1, sl
   1e38c:	ldr	r0, [r4, #204]	; 0xcc
   1e390:	ldm	lr, {ip, lr}
   1e394:	str	r4, [sp, #8]
   1e398:	b	1e2e0 <__flatcc_gen_sort@@Base+0x357c>
   1e39c:	mov	r3, r5
   1e3a0:	mov	r2, r5
   1e3a4:	str	r5, [sp]
   1e3a8:	mov	r1, r8
   1e3ac:	str	r5, [sp, #4]
   1e3b0:	ldr	r0, [r4, #204]	; 0xcc
   1e3b4:	bl	13f58 <fprintf@plt>
   1e3b8:	ldr	r6, [r6]
   1e3bc:	cmp	r6, #0
   1e3c0:	bne	1e308 <__flatcc_gen_sort@@Base+0x35a4>
   1e3c4:	mov	r2, r4
   1e3c8:	mov	r3, r4
   1e3cc:	str	r5, [sp]
   1e3d0:	ldr	r1, [sp, #32]
   1e3d4:	ldr	r0, [r4, #204]	; 0xcc
   1e3d8:	bl	13f58 <fprintf@plt>
   1e3dc:	ldr	r7, [r7]
   1e3e0:	mov	r2, #1
   1e3e4:	cmp	r7, #0
   1e3e8:	bne	1e264 <__flatcc_gen_sort@@Base+0x3500>
   1e3ec:	cmp	r2, #0
   1e3f0:	beq	1e400 <__flatcc_gen_sort@@Base+0x369c>
   1e3f4:	mov	r0, #10
   1e3f8:	ldr	r1, [r4, #204]	; 0xcc
   1e3fc:	bl	13fb8 <fputc@plt>
   1e400:	ldr	r3, [sp, #48]	; 0x30
   1e404:	cmp	r3, #0
   1e408:	beq	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1e40c:	ldr	r3, [r4, #208]	; 0xd0
   1e410:	ldr	r6, [r3, #40]	; 0x28
   1e414:	cmp	r6, #0
   1e418:	beq	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1e41c:	ldr	r3, [pc, #1524]	; 1ea18 <__flatcc_gen_sort@@Base+0x3cb4>
   1e420:	ldr	sl, [pc, #1524]	; 1ea1c <__flatcc_gen_sort@@Base+0x3cb8>
   1e424:	add	r3, pc, r3
   1e428:	str	r3, [sp, #40]	; 0x28
   1e42c:	add	sl, pc, sl
   1e430:	ldr	r3, [pc, #1512]	; 1ea20 <__flatcc_gen_sort@@Base+0x3cbc>
   1e434:	add	r3, pc, r3
   1e438:	str	r3, [sp, #44]	; 0x2c
   1e43c:	ldr	r3, [pc, #1504]	; 1ea24 <__flatcc_gen_sort@@Base+0x3cc0>
   1e440:	add	r3, pc, r3
   1e444:	str	r3, [sp, #56]	; 0x38
   1e448:	ldrh	r7, [r6, #8]
   1e44c:	cmp	r7, #0
   1e450:	bne	1e660 <__flatcc_gen_sort@@Base+0x38fc>
   1e454:	mov	r1, r6
   1e458:	mov	r0, r4
   1e45c:	bl	1bf44 <__flatcc_gen_sort@@Base+0x11e0>
   1e460:	ldrh	r8, [r6, #92]	; 0x5c
   1e464:	mov	r2, #220	; 0xdc
   1e468:	mov	r1, r7
   1e46c:	mov	r0, fp
   1e470:	ands	r3, r8, #8
   1e474:	str	r3, [sp, #32]
   1e478:	moveq	r3, #1
   1e47c:	movne	r3, #0
   1e480:	str	r3, [sp, #36]	; 0x24
   1e484:	bl	13f70 <memset@plt>
   1e488:	mov	r2, fp
   1e48c:	mov	r1, r6
   1e490:	ldr	r0, [r6, #12]
   1e494:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1e498:	mov	r3, fp
   1e49c:	mov	r2, fp
   1e4a0:	stm	sp, {r4, fp}
   1e4a4:	ldr	r1, [sp, #40]	; 0x28
   1e4a8:	ldr	r0, [r4, #204]	; 0xcc
   1e4ac:	bl	13f58 <fprintf@plt>
   1e4b0:	mov	r2, fp
   1e4b4:	ldr	r1, [sp, #44]	; 0x2c
   1e4b8:	ldr	r0, [r4, #204]	; 0xcc
   1e4bc:	bl	13f58 <fprintf@plt>
   1e4c0:	ldr	r5, [r6, #24]
   1e4c4:	cmp	r5, #0
   1e4c8:	beq	1e5fc <__flatcc_gen_sort@@Base+0x3898>
   1e4cc:	ldr	r3, [pc, #1364]	; 1ea28 <__flatcc_gen_sort@@Base+0x3cc4>
   1e4d0:	ldr	r0, [r4, #204]	; 0xcc
   1e4d4:	add	r3, pc, r3
   1e4d8:	str	r3, [sp, #52]	; 0x34
   1e4dc:	b	1e504 <__flatcc_gen_sort@@Base+0x37a0>
   1e4e0:	mov	r1, sl
   1e4e4:	str	r2, [sp]
   1e4e8:	mov	r2, fp
   1e4ec:	strd	r8, [sp, #8]
   1e4f0:	bl	13f58 <fprintf@plt>
   1e4f4:	ldr	r0, [r4, #204]	; 0xcc
   1e4f8:	ldr	r5, [r5, #108]	; 0x6c
   1e4fc:	cmp	r5, #0
   1e500:	beq	1e670 <__flatcc_gen_sort@@Base+0x390c>
   1e504:	ldrh	r3, [r5, #72]	; 0x48
   1e508:	tst	r3, #4
   1e50c:	bne	1e4f8 <__flatcc_gen_sort@@Base+0x3794>
   1e510:	ldrh	r2, [r5, #24]
   1e514:	ldr	r3, [r5, #4]
   1e518:	ldrd	r8, [r5, #96]	; 0x60
   1e51c:	cmp	r2, #14
   1e520:	ldrd	r2, [r3]
   1e524:	bne	1e4e0 <__flatcc_gen_sort@@Base+0x377c>
   1e528:	ldr	r1, [r5, #16]
   1e52c:	ldrh	r1, [r1, #8]
   1e530:	cmp	r1, #4
   1e534:	bne	1e4e0 <__flatcc_gen_sort@@Base+0x377c>
   1e538:	ldr	r1, [sp, #32]
   1e53c:	cmp	r1, #0
   1e540:	beq	1e704 <__flatcc_gen_sort@@Base+0x39a0>
   1e544:	ldr	r7, [sp, #48]	; 0x30
   1e548:	b	1e4e0 <__flatcc_gen_sort@@Base+0x377c>
   1e54c:	ldr	r2, [pc, #1240]	; 1ea2c <__flatcc_gen_sort@@Base+0x3cc8>
   1e550:	mov	r0, r3
   1e554:	ldr	r1, [pc, #1236]	; 1ea30 <__flatcc_gen_sort@@Base+0x3ccc>
   1e558:	add	r2, pc, r2
   1e55c:	add	r1, pc, r1
   1e560:	bl	13f58 <fprintf@plt>
   1e564:	b	1dcec <__flatcc_gen_sort@@Base+0x2f88>
   1e568:	ldr	r3, [pc, #1220]	; 1ea34 <__flatcc_gen_sort@@Base+0x3cd0>
   1e56c:	mov	r2, r4
   1e570:	add	r3, pc, r3
   1e574:	b	1e0c4 <__flatcc_gen_sort@@Base+0x3360>
   1e578:	mov	r3, r0
   1e57c:	ldr	r0, [pc, #1204]	; 1ea38 <__flatcc_gen_sort@@Base+0x3cd4>
   1e580:	mov	r2, #2
   1e584:	mov	r1, #1
   1e588:	add	r0, pc, r0
   1e58c:	bl	13eec <fwrite@plt>
   1e590:	ldr	r0, [r4, #204]	; 0xcc
   1e594:	b	1de48 <__flatcc_gen_sort@@Base+0x30e4>
   1e598:	ldr	r0, [r4, #204]	; 0xcc
   1e59c:	mov	r3, r0
   1e5a0:	mov	r2, #6
   1e5a4:	ldr	r0, [pc, #1168]	; 1ea3c <__flatcc_gen_sort@@Base+0x3cd8>
   1e5a8:	mov	r1, #1
   1e5ac:	add	r0, pc, r0
   1e5b0:	bl	13eec <fwrite@plt>
   1e5b4:	b	1db84 <__flatcc_gen_sort@@Base+0x2e20>
   1e5b8:	ldr	r1, [pc, #1152]	; 1ea40 <__flatcc_gen_sort@@Base+0x3cdc>
   1e5bc:	ldr	r2, [sp, #44]	; 0x2c
   1e5c0:	add	r1, pc, r1
   1e5c4:	bl	13f58 <fprintf@plt>
   1e5c8:	ldr	r0, [r4, #204]	; 0xcc
   1e5cc:	b	1de48 <__flatcc_gen_sort@@Base+0x30e4>
   1e5d0:	ldr	r3, [sp, #48]	; 0x30
   1e5d4:	cmp	r3, #0
   1e5d8:	bne	1e734 <__flatcc_gen_sort@@Base+0x39d0>
   1e5dc:	mov	r0, #0
   1e5e0:	add	sp, sp, #508	; 0x1fc
   1e5e4:	ldrd	r4, [sp]
   1e5e8:	ldrd	r6, [sp, #8]
   1e5ec:	ldrd	r8, [sp, #16]
   1e5f0:	ldrd	sl, [sp, #24]
   1e5f4:	add	sp, sp, #32
   1e5f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5fc:	ldr	r0, [r4, #204]	; 0xcc
   1e600:	mov	r2, fp
   1e604:	ldr	r1, [pc, #1080]	; 1ea44 <__flatcc_gen_sort@@Base+0x3ce0>
   1e608:	add	r1, pc, r1
   1e60c:	bl	13f58 <fprintf@plt>
   1e610:	mov	r2, #220	; 0xdc
   1e614:	mov	r1, #0
   1e618:	mov	r0, fp
   1e61c:	bl	13f70 <memset@plt>
   1e620:	mov	r2, fp
   1e624:	mov	r1, r6
   1e628:	ldr	r0, [r6, #12]
   1e62c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1e630:	ldr	r1, [pc, #1040]	; 1ea48 <__flatcc_gen_sort@@Base+0x3ce4>
   1e634:	mov	r3, r4
   1e638:	mov	r2, r4
   1e63c:	str	fp, [sp]
   1e640:	str	fp, [sp, #4]
   1e644:	str	fp, [sp, #8]
   1e648:	ldr	r0, [r4, #204]	; 0xcc
   1e64c:	add	r1, pc, r1
   1e650:	bl	13f58 <fprintf@plt>
   1e654:	mov	r0, #10
   1e658:	ldr	r1, [r4, #204]	; 0xcc
   1e65c:	bl	13fb8 <fputc@plt>
   1e660:	ldr	r6, [r6]
   1e664:	cmp	r6, #0
   1e668:	bne	1e448 <__flatcc_gen_sort@@Base+0x36e4>
   1e66c:	b	1e5dc <__flatcc_gen_sort@@Base+0x3878>
   1e670:	ldr	r3, [sp, #36]	; 0x24
   1e674:	tst	r7, r3
   1e678:	beq	1e600 <__flatcc_gen_sort@@Base+0x389c>
   1e67c:	ldr	r5, [r6, #24]
   1e680:	cmp	r5, #0
   1e684:	bne	1e698 <__flatcc_gen_sort@@Base+0x3934>
   1e688:	b	1e600 <__flatcc_gen_sort@@Base+0x389c>
   1e68c:	ldr	r5, [r5, #108]	; 0x6c
   1e690:	cmp	r5, #0
   1e694:	beq	1e600 <__flatcc_gen_sort@@Base+0x389c>
   1e698:	ldrh	r3, [r5, #72]	; 0x48
   1e69c:	tst	r3, #4
   1e6a0:	bne	1e68c <__flatcc_gen_sort@@Base+0x3928>
   1e6a4:	ldrh	r3, [r5, #24]
   1e6a8:	cmp	r3, #14
   1e6ac:	bne	1e68c <__flatcc_gen_sort@@Base+0x3928>
   1e6b0:	ldr	r3, [r5, #16]
   1e6b4:	ldrh	r3, [r3, #8]
   1e6b8:	cmp	r3, #4
   1e6bc:	bne	1e68c <__flatcc_gen_sort@@Base+0x3928>
   1e6c0:	ldr	ip, [r5, #4]
   1e6c4:	mov	r2, fp
   1e6c8:	ldrd	r8, [r5, #96]	; 0x60
   1e6cc:	ldr	r1, [sp, #56]	; 0x38
   1e6d0:	ldr	r3, [ip, #4]
   1e6d4:	strd	r8, [sp, #8]
   1e6d8:	ldr	ip, [ip]
   1e6dc:	str	ip, [sp]
   1e6e0:	bl	13f58 <fprintf@plt>
   1e6e4:	ldr	r0, [r4, #204]	; 0xcc
   1e6e8:	b	1e68c <__flatcc_gen_sort@@Base+0x3928>
   1e6ec:	ldr	r1, [pc, #856]	; 1ea4c <__flatcc_gen_sort@@Base+0x3ce8>
   1e6f0:	ldr	r2, [sp, #36]	; 0x24
   1e6f4:	add	r1, pc, r1
   1e6f8:	bl	13f58 <fprintf@plt>
   1e6fc:	ldr	r0, [r4, #204]	; 0xcc
   1e700:	b	1db14 <__flatcc_gen_sort@@Base+0x2db0>
   1e704:	str	r2, [sp]
   1e708:	mov	r2, fp
   1e70c:	strd	r8, [sp, #8]
   1e710:	ldr	r1, [sp, #52]	; 0x34
   1e714:	bl	13f58 <fprintf@plt>
   1e718:	ldr	r7, [sp, #48]	; 0x30
   1e71c:	ldr	r0, [r4, #204]	; 0xcc
   1e720:	b	1e4f8 <__flatcc_gen_sort@@Base+0x3794>
   1e724:	mov	r6, r3
   1e728:	b	1da98 <__flatcc_gen_sort@@Base+0x2d34>
   1e72c:	mov	r5, r3
   1e730:	b	1dc6c <__flatcc_gen_sort@@Base+0x2f08>
   1e734:	mov	r0, #10
   1e738:	ldr	r1, [r4, #204]	; 0xcc
   1e73c:	bl	13fb8 <fputc@plt>
   1e740:	b	1e21c <__flatcc_gen_sort@@Base+0x34b8>
   1e744:	ldr	r2, [pc, #692]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e748:	movw	r3, #1209	; 0x4b9
   1e74c:	ldr	r1, [sp, #60]	; 0x3c
   1e750:	ldr	r0, [pc, #760]	; 1ea50 <__flatcc_gen_sort@@Base+0x3cec>
   1e754:	ldr	r4, [pc, #760]	; 1ea54 <__flatcc_gen_sort@@Base+0x3cf0>
   1e758:	ldr	ip, [r1, r2]
   1e75c:	add	r0, pc, r0
   1e760:	ldr	r1, [pc, #752]	; 1ea58 <__flatcc_gen_sort@@Base+0x3cf4>
   1e764:	add	r4, pc, r4
   1e768:	str	r0, [sp]
   1e76c:	mov	r2, r4
   1e770:	ldr	r0, [ip]
   1e774:	add	r1, pc, r1
   1e778:	bl	13f58 <fprintf@plt>
   1e77c:	ldr	r3, [pc, #728]	; 1ea5c <__flatcc_gen_sort@@Base+0x3cf8>
   1e780:	mov	r1, r4
   1e784:	movw	r2, #1209	; 0x4b9
   1e788:	ldr	r0, [pc, #720]	; 1ea60 <__flatcc_gen_sort@@Base+0x3cfc>
   1e78c:	add	r3, pc, r3
   1e790:	add	r3, r3, #172	; 0xac
   1e794:	add	r0, pc, r0
   1e798:	bl	1400c <__assert_fail@plt>
   1e79c:	ldr	r2, [pc, #604]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e7a0:	mov	r3, #141	; 0x8d
   1e7a4:	ldr	r1, [sp, #60]	; 0x3c
   1e7a8:	ldr	r0, [pc, #692]	; 1ea64 <__flatcc_gen_sort@@Base+0x3d00>
   1e7ac:	ldr	r4, [pc, #692]	; 1ea68 <__flatcc_gen_sort@@Base+0x3d04>
   1e7b0:	ldr	ip, [r1, r2]
   1e7b4:	add	r0, pc, r0
   1e7b8:	ldr	r1, [pc, #684]	; 1ea6c <__flatcc_gen_sort@@Base+0x3d08>
   1e7bc:	add	r4, pc, r4
   1e7c0:	str	r0, [sp]
   1e7c4:	mov	r2, r4
   1e7c8:	ldr	r0, [ip]
   1e7cc:	add	r1, pc, r1
   1e7d0:	bl	13f58 <fprintf@plt>
   1e7d4:	ldr	r3, [pc, #660]	; 1ea70 <__flatcc_gen_sort@@Base+0x3d0c>
   1e7d8:	mov	r1, r4
   1e7dc:	mov	r2, #141	; 0x8d
   1e7e0:	ldr	r0, [pc, #652]	; 1ea74 <__flatcc_gen_sort@@Base+0x3d10>
   1e7e4:	add	r3, pc, r3
   1e7e8:	add	r3, r3, #84	; 0x54
   1e7ec:	add	r0, pc, r0
   1e7f0:	bl	1400c <__assert_fail@plt>
   1e7f4:	ldr	r2, [pc, #516]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e7f8:	movw	r3, #1173	; 0x495
   1e7fc:	ldr	r1, [sp, #60]	; 0x3c
   1e800:	ldr	r0, [pc, #624]	; 1ea78 <__flatcc_gen_sort@@Base+0x3d14>
   1e804:	ldr	r4, [pc, #624]	; 1ea7c <__flatcc_gen_sort@@Base+0x3d18>
   1e808:	ldr	ip, [r1, r2]
   1e80c:	add	r0, pc, r0
   1e810:	ldr	r1, [pc, #616]	; 1ea80 <__flatcc_gen_sort@@Base+0x3d1c>
   1e814:	add	r4, pc, r4
   1e818:	str	r0, [sp]
   1e81c:	mov	r2, r4
   1e820:	ldr	r0, [ip]
   1e824:	add	r1, pc, r1
   1e828:	bl	13f58 <fprintf@plt>
   1e82c:	ldr	r3, [pc, #592]	; 1ea84 <__flatcc_gen_sort@@Base+0x3d20>
   1e830:	mov	r1, r4
   1e834:	movw	r2, #1173	; 0x495
   1e838:	ldr	r0, [pc, #584]	; 1ea88 <__flatcc_gen_sort@@Base+0x3d24>
   1e83c:	add	r3, pc, r3
   1e840:	add	r3, r3, #172	; 0xac
   1e844:	add	r0, pc, r0
   1e848:	bl	1400c <__assert_fail@plt>
   1e84c:	ldr	r2, [pc, #428]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e850:	movw	r3, #1189	; 0x4a5
   1e854:	ldr	r1, [sp, #60]	; 0x3c
   1e858:	ldr	r0, [pc, #556]	; 1ea8c <__flatcc_gen_sort@@Base+0x3d28>
   1e85c:	ldr	r4, [pc, #556]	; 1ea90 <__flatcc_gen_sort@@Base+0x3d2c>
   1e860:	ldr	ip, [r1, r2]
   1e864:	add	r0, pc, r0
   1e868:	ldr	r1, [pc, #548]	; 1ea94 <__flatcc_gen_sort@@Base+0x3d30>
   1e86c:	add	r4, pc, r4
   1e870:	str	r0, [sp]
   1e874:	mov	r2, r4
   1e878:	ldr	r0, [ip]
   1e87c:	add	r1, pc, r1
   1e880:	bl	13f58 <fprintf@plt>
   1e884:	ldr	r3, [pc, #524]	; 1ea98 <__flatcc_gen_sort@@Base+0x3d34>
   1e888:	mov	r1, r4
   1e88c:	movw	r2, #1189	; 0x4a5
   1e890:	ldr	r0, [pc, #516]	; 1ea9c <__flatcc_gen_sort@@Base+0x3d38>
   1e894:	add	r3, pc, r3
   1e898:	add	r3, r3, #172	; 0xac
   1e89c:	add	r0, pc, r0
   1e8a0:	bl	1400c <__assert_fail@plt>
   1e8a4:	ldr	r2, [pc, #340]	; 1ea00 <__flatcc_gen_sort@@Base+0x3c9c>
   1e8a8:	mov	r3, #96	; 0x60
   1e8ac:	ldr	r1, [sp, #60]	; 0x3c
   1e8b0:	ldr	r0, [pc, #488]	; 1eaa0 <__flatcc_gen_sort@@Base+0x3d3c>
   1e8b4:	ldr	r4, [pc, #488]	; 1eaa4 <__flatcc_gen_sort@@Base+0x3d40>
   1e8b8:	ldr	ip, [r1, r2]
   1e8bc:	add	r0, pc, r0
   1e8c0:	ldr	r1, [pc, #480]	; 1eaa8 <__flatcc_gen_sort@@Base+0x3d44>
   1e8c4:	add	r4, pc, r4
   1e8c8:	str	r0, [sp]
   1e8cc:	mov	r2, r4
   1e8d0:	ldr	r0, [ip]
   1e8d4:	add	r1, pc, r1
   1e8d8:	bl	13f58 <fprintf@plt>
   1e8dc:	ldr	r3, [pc, #456]	; 1eaac <__flatcc_gen_sort@@Base+0x3d48>
   1e8e0:	mov	r1, r4
   1e8e4:	mov	r2, #96	; 0x60
   1e8e8:	ldr	r0, [pc, #448]	; 1eab0 <__flatcc_gen_sort@@Base+0x3d4c>
   1e8ec:	add	r3, pc, r3
   1e8f0:	add	r3, r3, #32
   1e8f4:	add	r0, pc, r0
   1e8f8:	bl	1400c <__assert_fail@plt>
   1e8fc:	andeq	sp, r4, r4, ror #12
   1e900:	andeq	fp, r2, ip, lsr #19
   1e904:	andeq	fp, r2, r8, lsl #19
   1e908:	andeq	fp, r2, r4, asr #19
   1e90c:	andeq	fp, r2, r8, lsr #19
   1e910:	andeq	fp, r2, r0, ror r3
   1e914:	andeq	r4, r2, r4, ror #6
   1e918:	andeq	fp, r2, ip, ror r8
   1e91c:	andeq	fp, r2, ip, lsr r8
   1e920:	andeq	fp, r2, r0, ror r9
   1e924:	andeq	fp, r2, ip, asr #18
   1e928:	andeq	fp, r2, r8, lsr #18
   1e92c:	andeq	r5, r2, r0, lsr #17
   1e930:	ldrdeq	fp, [r2], -r4
   1e934:	andeq	fp, r2, ip, asr r6
   1e938:			; <UNDEFINED> instruction: 0x0002afb4
   1e93c:	andeq	fp, r2, r0, ror r7
   1e940:	andeq	r5, r2, r4, ror #14
   1e944:	andeq	r5, r2, r8, asr #14
   1e948:	andeq	sl, r2, ip, ror pc
   1e94c:	andeq	fp, r2, r0, lsl #11
   1e950:	andeq	fp, r2, ip, asr #10
   1e954:	andeq	fp, r2, r8, ror #9
   1e958:	andeq	fp, r2, r8, lsr #9
   1e95c:	andeq	fp, r2, ip, ror r4
   1e960:	andeq	fp, r2, r8, ror r4
   1e964:	andeq	r2, r2, r4, lsl #18
   1e968:	andeq	r2, r2, r8, asr #18
   1e96c:	andeq	r2, r2, ip, asr #18
   1e970:	andeq	r2, r2, ip, lsr #17
   1e974:	andeq	r2, r2, ip, lsl r9
   1e978:	andeq	r2, r2, r0, lsl #18
   1e97c:	andeq	sl, r3, r0, asr r5
   1e980:	ldrdeq	r2, [r2], -r8
   1e984:	andeq	r2, r2, r0, lsr #17
   1e988:	andeq	r2, r2, r8, lsr #17
   1e98c:	andeq	r2, r2, ip, ror #16
   1e990:	andeq	ip, r2, r4, lsr #11
   1e994:	andeq	r2, r2, r8, asr #17
   1e998:	andeq	fp, r2, r0, ror #8
   1e99c:	andeq	ip, r2, r8, ror r5
   1e9a0:	andeq	r2, r2, r4, lsr #17
   1e9a4:	andeq	ip, r2, r4, ror #10
   1e9a8:	strdeq	r2, [r2], -ip
   1e9ac:	andeq	ip, r2, r0, asr r5
   1e9b0:	andeq	r2, r2, r4, ror #16
   1e9b4:	andeq	ip, r2, ip, lsr r5
   1e9b8:	andeq	r2, r2, r0, asr #16
   1e9bc:	andeq	ip, r2, r8, lsr #10
   1e9c0:	andeq	r2, r2, r4, ror #15
   1e9c4:	andeq	ip, r2, r4, lsl r5
   1e9c8:	andeq	r2, r2, r8, lsl #16
   1e9cc:	andeq	ip, r2, r0, lsl #10
   1e9d0:	andeq	r2, r2, r4, asr #15
   1e9d4:	andeq	ip, r2, ip, ror #9
   1e9d8:	andeq	r2, r2, r4, asr #15
   1e9dc:	ldrdeq	ip, [r2], -r8
   1e9e0:	andeq	r2, r2, r0, lsl #15
   1e9e4:	andeq	sl, r2, r0, lsr #24
   1e9e8:	strdeq	sl, [r2], -r4
   1e9ec:	muleq	r2, r0, r3
   1e9f0:	muleq	r2, r4, r3
   1e9f4:	andeq	fp, r2, r0, lsr r4
   1e9f8:	andeq	fp, r2, r4, lsr #7
   1e9fc:			; <UNDEFINED> instruction: 0x0002b4b0
   1ea00:	muleq	r0, ip, r0
   1ea04:	andeq	fp, r2, ip, lsr r4
   1ea08:	ldrdeq	sl, [r2], -r8
   1ea0c:	andeq	r2, r2, r4, ror #10
   1ea10:	andeq	sl, r2, ip, lsr r7
   1ea14:	andeq	sl, r2, r8, ror #20
   1ea18:	andeq	fp, r2, r0, lsl #7
   1ea1c:	strdeq	fp, [r2], -ip
   1ea20:			; <UNDEFINED> instruction: 0x0002b3b4
   1ea24:	andeq	fp, r2, ip, lsl #8
   1ea28:	andeq	fp, r2, ip, lsr #6
   1ea2c:	andeq	r5, r2, r8, lsr #32
   1ea30:	andeq	sl, r2, ip, asr r8
   1ea34:	andeq	r2, r2, r0, ror #7
   1ea38:	andeq	sl, r2, r8, lsr r8
   1ea3c:	andeq	sl, r2, r4, asr lr
   1ea40:	strdeq	sl, [r2], -r8
   1ea44:	andeq	fp, r2, r0, ror r2
   1ea48:	andeq	fp, r2, r4, ror #4
   1ea4c:	andeq	sl, r2, r4, asr #13
   1ea50:	andeq	sl, r2, r8, lsl #16
   1ea54:			; <UNDEFINED> instruction: 0x0002a4b8
   1ea58:	andeq	r2, r2, r4, asr #2
   1ea5c:	andeq	sl, r2, ip, lsl r3
   1ea60:	andeq	sl, r2, r8, asr #12
   1ea64:	andeq	r2, r2, r0, lsl r1
   1ea68:	muleq	r2, ip, r0
   1ea6c:	andeq	r2, r2, ip, ror #1
   1ea70:	andeq	sl, r2, r4, asr #5
   1ea74:	strdeq	sl, [r2], -r0
   1ea78:	muleq	r2, r8, ip
   1ea7c:	andeq	sl, r2, r8, lsl #8
   1ea80:	muleq	r2, r4, r0
   1ea84:	andeq	sl, r2, ip, ror #4
   1ea88:	muleq	r2, r8, r5
   1ea8c:	muleq	r2, ip, ip
   1ea90:			; <UNDEFINED> instruction: 0x0002a3b0
   1ea94:	andeq	r2, r2, ip, lsr r0
   1ea98:	andeq	sl, r2, r4, lsl r2
   1ea9c:	andeq	sl, r2, r0, asr #10
   1eaa0:	andeq	r2, r2, r8
   1eaa4:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1eaa8:	andeq	r1, r2, r4, ror #31
   1eaac:			; <UNDEFINED> instruction: 0x0002a1bc
   1eab0:	andeq	sl, r2, r8, ror #9

0001eab4 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1eab4:	ldr	r1, [pc, #2244]	; 1f380 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   1eab8:	strd	r4, [sp, #-12]!
   1eabc:	add	r5, r0, #102	; 0x66
   1eac0:	mov	r4, r0
   1eac4:	mov	r2, r5
   1eac8:	ldr	r0, [r0, #204]	; 0xcc
   1eacc:	str	lr, [sp, #8]
   1ead0:	sub	sp, sp, #12
   1ead4:	add	r1, pc, r1
   1ead8:	bl	13f58 <fprintf@plt>
   1eadc:	ldr	r1, [pc, #2208]	; 1f384 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   1eae0:	mov	r2, r5
   1eae4:	ldr	r0, [r4, #204]	; 0xcc
   1eae8:	add	r1, pc, r1
   1eaec:	bl	13f58 <fprintf@plt>
   1eaf0:	ldr	r0, [pc, #2192]	; 1f388 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   1eaf4:	mov	r2, #81	; 0x51
   1eaf8:	mov	r1, #1
   1eafc:	ldr	r3, [r4, #204]	; 0xcc
   1eb00:	add	r0, pc, r0
   1eb04:	bl	13eec <fwrite@plt>
   1eb08:	ldr	r0, [pc, #2172]	; 1f38c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   1eb0c:	mov	r2, #53	; 0x35
   1eb10:	mov	r1, #1
   1eb14:	ldr	r3, [r4, #204]	; 0xcc
   1eb18:	add	r0, pc, r0
   1eb1c:	bl	13eec <fwrite@plt>
   1eb20:	ldr	r3, [r4, #204]	; 0xcc
   1eb24:	ldr	r2, [r4, #212]	; 0xd4
   1eb28:	ldr	r2, [r2, #140]	; 0x8c
   1eb2c:	cmp	r2, #0
   1eb30:	bne	1f29c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1eb34:	ldr	r0, [pc, #2132]	; 1f390 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   1eb38:	mov	r2, #22
   1eb3c:	mov	r1, #1
   1eb40:	add	r0, pc, r0
   1eb44:	bl	13eec <fwrite@plt>
   1eb48:	ldr	r0, [pc, #2116]	; 1f394 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   1eb4c:	mov	r2, #35	; 0x23
   1eb50:	mov	r1, #1
   1eb54:	ldr	r3, [r4, #204]	; 0xcc
   1eb58:	add	r0, pc, r0
   1eb5c:	bl	13eec <fwrite@plt>
   1eb60:	ldr	r0, [pc, #2096]	; 1f398 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   1eb64:	mov	r2, #7
   1eb68:	mov	r1, #1
   1eb6c:	ldr	r3, [r4, #204]	; 0xcc
   1eb70:	add	r0, pc, r0
   1eb74:	bl	13eec <fwrite@plt>
   1eb78:	ldr	r1, [pc, #2076]	; 1f39c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   1eb7c:	mov	r0, r4
   1eb80:	add	r1, pc, r1
   1eb84:	bl	13e8c <strcmp@plt>
   1eb88:	cmp	r0, #0
   1eb8c:	bne	1f304 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1eb90:	ldr	r1, [pc, #2056]	; 1f3a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   1eb94:	mov	r3, r4
   1eb98:	mov	r2, r4
   1eb9c:	ldr	r0, [r4, #204]	; 0xcc
   1eba0:	add	r1, pc, r1
   1eba4:	bl	13f58 <fprintf@plt>
   1eba8:	ldr	r1, [pc, #2036]	; 1f3a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   1ebac:	mov	r3, r4
   1ebb0:	mov	r2, r4
   1ebb4:	ldr	r0, [r4, #204]	; 0xcc
   1ebb8:	add	r1, pc, r1
   1ebbc:	bl	13f58 <fprintf@plt>
   1ebc0:	ldr	r1, [pc, #2016]	; 1f3a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   1ebc4:	mov	r0, r4
   1ebc8:	add	r1, pc, r1
   1ebcc:	bl	13e8c <strcmp@plt>
   1ebd0:	cmp	r0, #0
   1ebd4:	bne	1f2d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1ebd8:	mov	r0, #10
   1ebdc:	ldr	r1, [r4, #204]	; 0xcc
   1ebe0:	bl	13fb8 <fputc@plt>
   1ebe4:	ldr	r1, [pc, #1984]	; 1f3ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   1ebe8:	mov	r2, r4
   1ebec:	ldr	r0, [r4, #204]	; 0xcc
   1ebf0:	add	r1, pc, r1
   1ebf4:	bl	13f58 <fprintf@plt>
   1ebf8:	ldr	r1, [pc, #1968]	; 1f3b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   1ebfc:	mov	r2, r4
   1ec00:	ldr	r0, [r4, #204]	; 0xcc
   1ec04:	add	r1, pc, r1
   1ec08:	bl	13f58 <fprintf@plt>
   1ec0c:	ldr	r1, [pc, #1952]	; 1f3b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   1ec10:	mov	r3, r4
   1ec14:	mov	r2, r4
   1ec18:	str	r4, [sp]
   1ec1c:	ldr	r0, [r4, #204]	; 0xcc
   1ec20:	add	r1, pc, r1
   1ec24:	bl	13f58 <fprintf@plt>
   1ec28:	ldr	r1, [pc, #1928]	; 1f3b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   1ec2c:	mov	r2, r4
   1ec30:	ldr	r0, [r4, #204]	; 0xcc
   1ec34:	add	r1, pc, r1
   1ec38:	bl	13f58 <fprintf@plt>
   1ec3c:	ldr	r1, [pc, #1912]	; 1f3bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   1ec40:	mov	r2, r4
   1ec44:	ldr	r0, [r4, #204]	; 0xcc
   1ec48:	add	r1, pc, r1
   1ec4c:	bl	13f58 <fprintf@plt>
   1ec50:	ldr	r1, [pc, #1896]	; 1f3c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   1ec54:	mov	r2, r4
   1ec58:	ldr	r0, [r4, #204]	; 0xcc
   1ec5c:	add	r1, pc, r1
   1ec60:	bl	13f58 <fprintf@plt>
   1ec64:	ldr	r1, [pc, #1880]	; 1f3c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   1ec68:	mov	r2, r4
   1ec6c:	ldr	r0, [r4, #204]	; 0xcc
   1ec70:	add	r1, pc, r1
   1ec74:	bl	13f58 <fprintf@plt>
   1ec78:	ldr	r1, [pc, #1864]	; 1f3c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   1ec7c:	mov	r3, r4
   1ec80:	mov	r2, r4
   1ec84:	ldr	r0, [r4, #204]	; 0xcc
   1ec88:	add	r1, pc, r1
   1ec8c:	bl	13f58 <fprintf@plt>
   1ec90:	ldr	r1, [pc, #1844]	; 1f3cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   1ec94:	mov	r3, r4
   1ec98:	mov	r2, r4
   1ec9c:	str	r4, [sp]
   1eca0:	ldr	r0, [r4, #204]	; 0xcc
   1eca4:	add	r1, pc, r1
   1eca8:	bl	13f58 <fprintf@plt>
   1ecac:	ldr	r1, [pc, #1820]	; 1f3d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   1ecb0:	mov	r2, r4
   1ecb4:	ldr	r0, [r4, #204]	; 0xcc
   1ecb8:	add	r1, pc, r1
   1ecbc:	bl	13f58 <fprintf@plt>
   1ecc0:	ldr	r1, [pc, #1804]	; 1f3d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   1ecc4:	mov	r2, r4
   1ecc8:	ldr	r0, [r4, #204]	; 0xcc
   1eccc:	add	r1, pc, r1
   1ecd0:	bl	13f58 <fprintf@plt>
   1ecd4:	ldr	r1, [pc, #1788]	; 1f3d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   1ecd8:	mov	r2, r4
   1ecdc:	ldr	r0, [r4, #204]	; 0xcc
   1ece0:	add	r1, pc, r1
   1ece4:	bl	13f58 <fprintf@plt>
   1ece8:	ldr	r1, [pc, #1772]	; 1f3dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   1ecec:	mov	r3, r4
   1ecf0:	mov	r2, r4
   1ecf4:	ldr	r0, [r4, #204]	; 0xcc
   1ecf8:	add	r1, pc, r1
   1ecfc:	bl	13f58 <fprintf@plt>
   1ed00:	ldr	r1, [pc, #1752]	; 1f3e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   1ed04:	mov	r2, r4
   1ed08:	ldr	r0, [r4, #204]	; 0xcc
   1ed0c:	add	r1, pc, r1
   1ed10:	bl	13f58 <fprintf@plt>
   1ed14:	ldr	r1, [pc, #1736]	; 1f3e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   1ed18:	mov	r3, r4
   1ed1c:	mov	r2, r4
   1ed20:	str	r4, [sp]
   1ed24:	ldr	r0, [r4, #204]	; 0xcc
   1ed28:	add	r1, pc, r1
   1ed2c:	bl	13f58 <fprintf@plt>
   1ed30:	ldr	r1, [pc, #1712]	; 1f3e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   1ed34:	mov	r3, r4
   1ed38:	mov	r2, r4
   1ed3c:	str	r4, [sp]
   1ed40:	str	r4, [sp, #4]
   1ed44:	ldr	r0, [r4, #204]	; 0xcc
   1ed48:	add	r1, pc, r1
   1ed4c:	bl	13f58 <fprintf@plt>
   1ed50:	ldr	r1, [pc, #1684]	; 1f3ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   1ed54:	mov	r3, r4
   1ed58:	mov	r2, r4
   1ed5c:	ldr	r0, [r4, #204]	; 0xcc
   1ed60:	add	r1, pc, r1
   1ed64:	bl	13f58 <fprintf@plt>
   1ed68:	ldr	r1, [pc, #1664]	; 1f3f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   1ed6c:	mov	r3, r4
   1ed70:	mov	r2, r4
   1ed74:	str	r4, [sp]
   1ed78:	str	r4, [sp, #4]
   1ed7c:	ldr	r0, [r4, #204]	; 0xcc
   1ed80:	add	r1, pc, r1
   1ed84:	bl	13f58 <fprintf@plt>
   1ed88:	ldr	r1, [pc, #1636]	; 1f3f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   1ed8c:	mov	r3, r4
   1ed90:	mov	r2, r4
   1ed94:	ldr	r0, [r4, #204]	; 0xcc
   1ed98:	add	r1, pc, r1
   1ed9c:	bl	13f58 <fprintf@plt>
   1eda0:	ldr	r1, [pc, #1616]	; 1f3f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   1eda4:	mov	r2, r4
   1eda8:	ldr	r0, [r4, #204]	; 0xcc
   1edac:	add	r1, pc, r1
   1edb0:	bl	13f58 <fprintf@plt>
   1edb4:	ldr	r1, [pc, #1600]	; 1f3fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   1edb8:	mov	r2, r4
   1edbc:	ldr	r0, [r4, #204]	; 0xcc
   1edc0:	add	r1, pc, r1
   1edc4:	bl	13f58 <fprintf@plt>
   1edc8:	ldr	r1, [pc, #1584]	; 1f400 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   1edcc:	mov	r2, r4
   1edd0:	ldr	r0, [r4, #204]	; 0xcc
   1edd4:	add	r1, pc, r1
   1edd8:	bl	13f58 <fprintf@plt>
   1eddc:	ldr	r1, [pc, #1568]	; 1f404 <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   1ede0:	mov	r2, r4
   1ede4:	ldr	r0, [r4, #204]	; 0xcc
   1ede8:	add	r1, pc, r1
   1edec:	bl	13f58 <fprintf@plt>
   1edf0:	ldr	r1, [pc, #1552]	; 1f408 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1edf4:	mov	r3, r4
   1edf8:	mov	r2, r4
   1edfc:	ldr	r0, [r4, #204]	; 0xcc
   1ee00:	add	r1, pc, r1
   1ee04:	bl	13f58 <fprintf@plt>
   1ee08:	ldr	r1, [pc, #1532]	; 1f40c <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1ee0c:	mov	r2, r4
   1ee10:	ldr	r0, [r4, #204]	; 0xcc
   1ee14:	add	r1, pc, r1
   1ee18:	bl	13f58 <fprintf@plt>
   1ee1c:	ldr	r1, [pc, #1516]	; 1f410 <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1ee20:	mov	r2, r4
   1ee24:	ldr	r0, [r4, #204]	; 0xcc
   1ee28:	add	r1, pc, r1
   1ee2c:	bl	13f58 <fprintf@plt>
   1ee30:	ldr	r1, [pc, #1500]	; 1f414 <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1ee34:	mov	r3, r4
   1ee38:	mov	r2, r4
   1ee3c:	ldr	r0, [r4, #204]	; 0xcc
   1ee40:	add	r1, pc, r1
   1ee44:	bl	13f58 <fprintf@plt>
   1ee48:	ldr	r1, [pc, #1480]	; 1f418 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1ee4c:	mov	r3, r4
   1ee50:	mov	r2, r4
   1ee54:	ldr	r0, [r4, #204]	; 0xcc
   1ee58:	add	r1, pc, r1
   1ee5c:	bl	13f58 <fprintf@plt>
   1ee60:	ldr	r1, [pc, #1460]	; 1f41c <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1ee64:	mov	r3, r4
   1ee68:	mov	r2, r4
   1ee6c:	ldr	r0, [r4, #204]	; 0xcc
   1ee70:	add	r1, pc, r1
   1ee74:	bl	13f58 <fprintf@plt>
   1ee78:	ldr	r1, [pc, #1440]	; 1f420 <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1ee7c:	mov	r3, r4
   1ee80:	mov	r2, r4
   1ee84:	ldr	r0, [r4, #204]	; 0xcc
   1ee88:	add	r1, pc, r1
   1ee8c:	bl	13f58 <fprintf@plt>
   1ee90:	ldr	r1, [pc, #1420]	; 1f424 <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1ee94:	mov	r3, r4
   1ee98:	mov	r2, r4
   1ee9c:	str	r4, [sp]
   1eea0:	ldr	r0, [r4, #204]	; 0xcc
   1eea4:	add	r1, pc, r1
   1eea8:	bl	13f58 <fprintf@plt>
   1eeac:	ldr	r1, [pc, #1396]	; 1f428 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1eeb0:	mov	r3, r4
   1eeb4:	mov	r2, r4
   1eeb8:	ldr	r0, [r4, #204]	; 0xcc
   1eebc:	add	r1, pc, r1
   1eec0:	bl	13f58 <fprintf@plt>
   1eec4:	ldr	r1, [pc, #1376]	; 1f42c <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1eec8:	mov	r2, r4
   1eecc:	ldr	r0, [r4, #204]	; 0xcc
   1eed0:	add	r1, pc, r1
   1eed4:	bl	13f58 <fprintf@plt>
   1eed8:	ldr	r1, [pc, #1360]	; 1f430 <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1eedc:	mov	r2, r4
   1eee0:	ldr	r0, [r4, #204]	; 0xcc
   1eee4:	add	r1, pc, r1
   1eee8:	bl	13f58 <fprintf@plt>
   1eeec:	ldr	r1, [pc, #1344]	; 1f434 <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1eef0:	mov	r2, r4
   1eef4:	ldr	r0, [r4, #204]	; 0xcc
   1eef8:	add	r1, pc, r1
   1eefc:	bl	13f58 <fprintf@plt>
   1ef00:	ldr	r1, [pc, #1328]	; 1f438 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1ef04:	mov	r3, r4
   1ef08:	mov	r2, r4
   1ef0c:	str	r4, [sp]
   1ef10:	ldr	r0, [r4, #204]	; 0xcc
   1ef14:	add	r1, pc, r1
   1ef18:	bl	13f58 <fprintf@plt>
   1ef1c:	ldr	r1, [pc, #1304]	; 1f43c <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1ef20:	mov	r2, r4
   1ef24:	ldr	r0, [r4, #204]	; 0xcc
   1ef28:	add	r1, pc, r1
   1ef2c:	bl	13f58 <fprintf@plt>
   1ef30:	ldr	r1, [pc, #1288]	; 1f440 <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1ef34:	mov	r2, r4
   1ef38:	ldr	r0, [r4, #204]	; 0xcc
   1ef3c:	add	r1, pc, r1
   1ef40:	bl	13f58 <fprintf@plt>
   1ef44:	ldr	r1, [pc, #1272]	; 1f444 <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1ef48:	mov	r2, r4
   1ef4c:	ldr	r0, [r4, #204]	; 0xcc
   1ef50:	add	r1, pc, r1
   1ef54:	bl	13f58 <fprintf@plt>
   1ef58:	ldr	r1, [pc, #1256]	; 1f448 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1ef5c:	mov	r2, r4
   1ef60:	ldr	r0, [r4, #204]	; 0xcc
   1ef64:	add	r1, pc, r1
   1ef68:	bl	13f58 <fprintf@plt>
   1ef6c:	ldr	r1, [pc, #1240]	; 1f44c <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1ef70:	mov	r3, r4
   1ef74:	mov	r2, r4
   1ef78:	ldr	r0, [r4, #204]	; 0xcc
   1ef7c:	add	r1, pc, r1
   1ef80:	bl	13f58 <fprintf@plt>
   1ef84:	ldr	r1, [pc, #1220]	; 1f450 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1ef88:	mov	r2, r4
   1ef8c:	ldr	r0, [r4, #204]	; 0xcc
   1ef90:	add	r1, pc, r1
   1ef94:	bl	13f58 <fprintf@plt>
   1ef98:	ldr	r1, [pc, #1204]	; 1f454 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1ef9c:	mov	r2, r4
   1efa0:	ldr	r0, [r4, #204]	; 0xcc
   1efa4:	add	r1, pc, r1
   1efa8:	bl	13f58 <fprintf@plt>
   1efac:	ldr	r1, [pc, #1188]	; 1f458 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1efb0:	mov	r2, r4
   1efb4:	ldr	r0, [r4, #204]	; 0xcc
   1efb8:	add	r1, pc, r1
   1efbc:	bl	13f58 <fprintf@plt>
   1efc0:	ldr	r1, [pc, #1172]	; 1f45c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1efc4:	mov	r2, r4
   1efc8:	ldr	r0, [r4, #204]	; 0xcc
   1efcc:	add	r1, pc, r1
   1efd0:	bl	13f58 <fprintf@plt>
   1efd4:	ldr	r1, [pc, #1156]	; 1f460 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1efd8:	mov	r2, r4
   1efdc:	ldr	r0, [r4, #204]	; 0xcc
   1efe0:	add	r1, pc, r1
   1efe4:	bl	13f58 <fprintf@plt>
   1efe8:	ldr	r1, [pc, #1140]	; 1f464 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1efec:	mov	r2, r4
   1eff0:	ldr	r0, [r4, #204]	; 0xcc
   1eff4:	add	r1, pc, r1
   1eff8:	bl	13f58 <fprintf@plt>
   1effc:	ldr	r1, [pc, #1124]	; 1f468 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1f000:	mov	r2, r4
   1f004:	ldr	r0, [r4, #204]	; 0xcc
   1f008:	add	r1, pc, r1
   1f00c:	bl	13f58 <fprintf@plt>
   1f010:	ldr	r1, [pc, #1108]	; 1f46c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1f014:	mov	r2, r4
   1f018:	ldr	r0, [r4, #204]	; 0xcc
   1f01c:	add	r1, pc, r1
   1f020:	bl	13f58 <fprintf@plt>
   1f024:	ldr	r1, [pc, #1092]	; 1f470 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1f028:	mov	r2, r4
   1f02c:	ldr	r0, [r4, #204]	; 0xcc
   1f030:	add	r1, pc, r1
   1f034:	bl	13f58 <fprintf@plt>
   1f038:	ldr	r1, [pc, #1076]	; 1f474 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1f03c:	mov	r2, r4
   1f040:	ldr	r0, [r4, #204]	; 0xcc
   1f044:	add	r1, pc, r1
   1f048:	bl	13f58 <fprintf@plt>
   1f04c:	ldr	r1, [pc, #1060]	; 1f478 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1f050:	mov	r2, r4
   1f054:	ldr	r0, [r4, #204]	; 0xcc
   1f058:	add	r1, pc, r1
   1f05c:	bl	13f58 <fprintf@plt>
   1f060:	ldr	r1, [pc, #1044]	; 1f47c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1f064:	mov	r2, r4
   1f068:	ldr	r0, [r4, #204]	; 0xcc
   1f06c:	add	r1, pc, r1
   1f070:	bl	13f58 <fprintf@plt>
   1f074:	ldr	r1, [pc, #1028]	; 1f480 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1f078:	mov	r2, r4
   1f07c:	ldr	r0, [r4, #204]	; 0xcc
   1f080:	add	r1, pc, r1
   1f084:	bl	13f58 <fprintf@plt>
   1f088:	ldr	r1, [pc, #1012]	; 1f484 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1f08c:	mov	r2, r4
   1f090:	ldr	r0, [r4, #204]	; 0xcc
   1f094:	add	r1, pc, r1
   1f098:	bl	13f58 <fprintf@plt>
   1f09c:	ldr	r1, [pc, #996]	; 1f488 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1f0a0:	mov	r2, r4
   1f0a4:	ldr	r0, [r4, #204]	; 0xcc
   1f0a8:	add	r1, pc, r1
   1f0ac:	bl	13f58 <fprintf@plt>
   1f0b0:	ldr	r1, [pc, #980]	; 1f48c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1f0b4:	mov	r2, r4
   1f0b8:	ldr	r0, [r4, #204]	; 0xcc
   1f0bc:	add	r1, pc, r1
   1f0c0:	bl	13f58 <fprintf@plt>
   1f0c4:	ldr	r1, [pc, #964]	; 1f490 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1f0c8:	mov	r2, r4
   1f0cc:	ldr	r0, [r4, #204]	; 0xcc
   1f0d0:	add	r1, pc, r1
   1f0d4:	bl	13f58 <fprintf@plt>
   1f0d8:	mov	r0, #10
   1f0dc:	ldr	r1, [r4, #204]	; 0xcc
   1f0e0:	bl	13fb8 <fputc@plt>
   1f0e4:	ldr	r1, [pc, #936]	; 1f494 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1f0e8:	mov	r3, r4
   1f0ec:	mov	r2, r4
   1f0f0:	str	r4, [sp]
   1f0f4:	ldr	r0, [r4, #204]	; 0xcc
   1f0f8:	add	r1, pc, r1
   1f0fc:	bl	13f58 <fprintf@plt>
   1f100:	ldr	r1, [pc, #912]	; 1f498 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1f104:	mov	r3, r4
   1f108:	mov	r2, r4
   1f10c:	str	r4, [sp]
   1f110:	ldr	r0, [r4, #204]	; 0xcc
   1f114:	add	r1, pc, r1
   1f118:	bl	13f58 <fprintf@plt>
   1f11c:	ldr	r1, [pc, #888]	; 1f49c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1f120:	mov	r3, r4
   1f124:	mov	r2, r4
   1f128:	str	r4, [sp]
   1f12c:	str	r4, [sp, #4]
   1f130:	ldr	r0, [r4, #204]	; 0xcc
   1f134:	add	r1, pc, r1
   1f138:	bl	13f58 <fprintf@plt>
   1f13c:	ldr	r1, [pc, #860]	; 1f4a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1f140:	mov	r3, r4
   1f144:	mov	r2, r4
   1f148:	str	r4, [sp]
   1f14c:	ldr	r0, [r4, #204]	; 0xcc
   1f150:	add	r1, pc, r1
   1f154:	bl	13f58 <fprintf@plt>
   1f158:	ldr	r1, [pc, #836]	; 1f4a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1f15c:	mov	r3, r4
   1f160:	mov	r2, r4
   1f164:	str	r4, [sp]
   1f168:	ldr	r0, [r4, #204]	; 0xcc
   1f16c:	add	r1, pc, r1
   1f170:	bl	13f58 <fprintf@plt>
   1f174:	ldr	r1, [pc, #812]	; 1f4a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1f178:	mov	r3, r4
   1f17c:	mov	r2, r4
   1f180:	str	r4, [sp]
   1f184:	ldr	r0, [r4, #204]	; 0xcc
   1f188:	add	r1, pc, r1
   1f18c:	bl	13f58 <fprintf@plt>
   1f190:	ldr	r1, [pc, #788]	; 1f4ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1f194:	mov	r3, r4
   1f198:	mov	r2, r4
   1f19c:	str	r4, [sp]
   1f1a0:	ldr	r0, [r4, #204]	; 0xcc
   1f1a4:	add	r1, pc, r1
   1f1a8:	bl	13f58 <fprintf@plt>
   1f1ac:	ldr	r1, [pc, #764]	; 1f4b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1f1b0:	mov	r3, r4
   1f1b4:	mov	r2, r4
   1f1b8:	str	r4, [sp]
   1f1bc:	ldr	r0, [r4, #204]	; 0xcc
   1f1c0:	add	r1, pc, r1
   1f1c4:	bl	13f58 <fprintf@plt>
   1f1c8:	ldr	r1, [pc, #740]	; 1f4b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   1f1cc:	mov	r3, r4
   1f1d0:	mov	r2, r4
   1f1d4:	str	r4, [sp]
   1f1d8:	ldr	r0, [r4, #204]	; 0xcc
   1f1dc:	add	r1, pc, r1
   1f1e0:	bl	13f58 <fprintf@plt>
   1f1e4:	ldr	r1, [pc, #716]	; 1f4b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   1f1e8:	mov	r3, r4
   1f1ec:	mov	r2, r4
   1f1f0:	str	r4, [sp]
   1f1f4:	ldr	r0, [r4, #204]	; 0xcc
   1f1f8:	add	r1, pc, r1
   1f1fc:	bl	13f58 <fprintf@plt>
   1f200:	ldr	r1, [pc, #692]	; 1f4bc <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   1f204:	mov	r3, r4
   1f208:	mov	r2, r4
   1f20c:	str	r4, [sp]
   1f210:	ldr	r0, [r4, #204]	; 0xcc
   1f214:	add	r1, pc, r1
   1f218:	bl	13f58 <fprintf@plt>
   1f21c:	mov	r0, #10
   1f220:	ldr	r1, [r4, #204]	; 0xcc
   1f224:	bl	13fb8 <fputc@plt>
   1f228:	ldr	r1, [pc, #656]	; 1f4c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   1f22c:	mov	r3, r4
   1f230:	mov	r2, r4
   1f234:	ldr	r0, [r4, #204]	; 0xcc
   1f238:	add	r1, pc, r1
   1f23c:	bl	13f58 <fprintf@plt>
   1f240:	mov	r0, #10
   1f244:	ldr	r1, [r4, #204]	; 0xcc
   1f248:	bl	13fb8 <fputc@plt>
   1f24c:	ldr	r1, [pc, #624]	; 1f4c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   1f250:	mov	r3, r4
   1f254:	mov	r2, r4
   1f258:	ldr	r0, [r4, #204]	; 0xcc
   1f25c:	add	r1, pc, r1
   1f260:	bl	13f58 <fprintf@plt>
   1f264:	ldr	r0, [r4, #204]	; 0xcc
   1f268:	ldr	r3, [r4, #212]	; 0xd4
   1f26c:	ldr	r3, [r3, #140]	; 0x8c
   1f270:	cmp	r3, #0
   1f274:	bne	1f2b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1f278:	ldr	r1, [pc, #584]	; 1f4c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   1f27c:	mov	r2, r5
   1f280:	add	r1, pc, r1
   1f284:	bl	13f58 <fprintf@plt>
   1f288:	mov	r0, #0
   1f28c:	add	sp, sp, #12
   1f290:	ldrd	r4, [sp]
   1f294:	add	sp, sp, #8
   1f298:	pop	{pc}		; (ldr pc, [sp], #4)
   1f29c:	ldr	r0, [pc, #552]	; 1f4cc <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   1f2a0:	mov	r2, #36	; 0x24
   1f2a4:	mov	r1, #1
   1f2a8:	add	r0, pc, r0
   1f2ac:	bl	13eec <fwrite@plt>
   1f2b0:	ldr	r3, [r4, #204]	; 0xcc
   1f2b4:	b	1eb34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80>
   1f2b8:	mov	r3, r0
   1f2bc:	ldr	r0, [pc, #524]	; 1f4d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   1f2c0:	mov	r2, #36	; 0x24
   1f2c4:	mov	r1, #1
   1f2c8:	add	r0, pc, r0
   1f2cc:	bl	13eec <fwrite@plt>
   1f2d0:	ldr	r0, [r4, #204]	; 0xcc
   1f2d4:	b	1f278 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1f2d8:	ldr	r1, [pc, #500]	; 1f4d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   1f2dc:	mov	r2, r4
   1f2e0:	ldr	r0, [r4, #204]	; 0xcc
   1f2e4:	add	r1, pc, r1
   1f2e8:	bl	13f58 <fprintf@plt>
   1f2ec:	ldr	r1, [pc, #484]	; 1f4d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa24>
   1f2f0:	mov	r2, r4
   1f2f4:	ldr	r0, [r4, #204]	; 0xcc
   1f2f8:	add	r1, pc, r1
   1f2fc:	bl	13f58 <fprintf@plt>
   1f300:	b	1ebd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x124>
   1f304:	ldr	r1, [pc, #464]	; 1f4dc <__flatcc_fb_gen_common_c_builder_header@@Base+0xa28>
   1f308:	mov	r2, r4
   1f30c:	ldr	r0, [r4, #204]	; 0xcc
   1f310:	add	r1, pc, r1
   1f314:	bl	13f58 <fprintf@plt>
   1f318:	ldr	r1, [pc, #448]	; 1f4e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2c>
   1f31c:	mov	r2, r4
   1f320:	ldr	r0, [r4, #204]	; 0xcc
   1f324:	add	r1, pc, r1
   1f328:	bl	13f58 <fprintf@plt>
   1f32c:	ldr	r1, [pc, #432]	; 1f4e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa30>
   1f330:	mov	r2, r4
   1f334:	ldr	r0, [r4, #204]	; 0xcc
   1f338:	add	r1, pc, r1
   1f33c:	bl	13f58 <fprintf@plt>
   1f340:	ldr	r1, [pc, #416]	; 1f4e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa34>
   1f344:	mov	r2, r4
   1f348:	ldr	r0, [r4, #204]	; 0xcc
   1f34c:	add	r1, pc, r1
   1f350:	bl	13f58 <fprintf@plt>
   1f354:	ldr	r1, [pc, #400]	; 1f4ec <__flatcc_fb_gen_common_c_builder_header@@Base+0xa38>
   1f358:	mov	r2, r4
   1f35c:	ldr	r0, [r4, #204]	; 0xcc
   1f360:	add	r1, pc, r1
   1f364:	bl	13f58 <fprintf@plt>
   1f368:	ldr	r1, [pc, #384]	; 1f4f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa3c>
   1f36c:	mov	r2, r4
   1f370:	ldr	r0, [r4, #204]	; 0xcc
   1f374:	add	r1, pc, r1
   1f378:	bl	13f58 <fprintf@plt>
   1f37c:	b	1eb90 <__flatcc_fb_gen_common_c_builder_header@@Base+0xdc>
   1f380:	andeq	sl, r2, r0, lsr #28
   1f384:	andeq	sl, r2, ip, lsr #28
   1f388:	ldrdeq	r3, [r2], -r4
   1f38c:	andeq	sl, r2, ip, lsl lr
   1f390:	andeq	sl, r2, ip, lsr #28
   1f394:	andeq	sl, r2, ip, lsr #28
   1f398:	andeq	r9, r2, r0, asr #6
   1f39c:	andeq	sl, r2, r8, lsr #28
   1f3a0:	andeq	sl, r2, ip, asr pc
   1f3a4:	andeq	sl, r2, r0, ror #30
   1f3a8:	andeq	r3, r2, r4, ror r2
   1f3ac:	andeq	sl, r2, r8, lsr #31
   1f3b0:	andeq	fp, r2, r8, lsl #6
   1f3b4:			; <UNDEFINED> instruction: 0x0002b9b8
   1f3b8:	andeq	fp, r2, r0, lsr sl
   1f3bc:	ldrdeq	ip, [r2], -r8
   1f3c0:	andeq	ip, r2, r0, lsr #17
   1f3c4:	andeq	ip, r2, r4, asr #29
   1f3c8:	andeq	sp, r2, r8, lsr #6
   1f3cc:	andeq	sp, r2, r0, lsl #21
   1f3d0:			; <UNDEFINED> instruction: 0x0002dfb4
   1f3d4:	andeq	lr, r2, r0, lsr #8
   1f3d8:	muleq	r2, ip, r5
   1f3dc:	andeq	lr, r2, r0, ror #17
   1f3e0:	ldrdeq	lr, [r2], -r4
   1f3e4:	andeq	lr, r2, r4, lsr #28
   1f3e8:	andeq	pc, r2, r0, lsl #6
   1f3ec:	strdeq	pc, [r2], -r4
   1f3f0:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   1f3f4:	andeq	pc, r2, r4, lsr #26
   1f3f8:	andeq	pc, r2, r4, asr #29
   1f3fc:	ldrdeq	r0, [r3], -r8
   1f400:	andeq	r0, r3, r4, lsl #9
   1f404:	andeq	r0, r3, r0, lsr r7
   1f408:	andeq	r0, r3, ip, lsr #22
   1f40c:	andeq	r0, r3, r4, lsl #24
   1f410:	andeq	r0, r3, r4, asr lr
   1f414:			; <UNDEFINED> instruction: 0x000311b4
   1f418:	andeq	r1, r3, ip, ror #11
   1f41c:	andeq	r1, r3, ip, ror #16
   1f420:	andeq	r1, r3, r0, asr ip
   1f424:	andeq	r1, r3, r0, asr #26
   1f428:			; <UNDEFINED> instruction: 0x00031db4
   1f42c:	andeq	r2, r3, ip, ror #1
   1f430:	andeq	r2, r3, r0, ror #6
   1f434:	ldrdeq	r2, [r3], -ip
   1f438:	andeq	r2, r3, r8, ror fp
   1f43c:	strdeq	r2, [r3], -r4
   1f440:	andeq	r2, r3, ip, lsl #24
   1f444:	andeq	r2, r3, ip, lsl ip
   1f448:	andeq	r2, r3, r4, lsr ip
   1f44c:	andeq	r2, r3, r0, asr #24
   1f450:	andeq	r2, r3, r8, asr ip
   1f454:	andeq	r2, r3, r8, ror #24
   1f458:	andeq	r2, r3, r4, lsl #25
   1f45c:	muleq	r3, r4, ip
   1f460:			; <UNDEFINED> instruction: 0x00032cb0
   1f464:	andeq	r2, r3, r0, asr #25
   1f468:	ldrdeq	r2, [r3], -ip
   1f46c:	andeq	r2, r3, ip, ror #25
   1f470:	andeq	r2, r3, r4, lsl #26
   1f474:	andeq	r2, r3, r4, lsl sp
   1f478:	andeq	r2, r3, ip, lsr #26
   1f47c:	andeq	r2, r3, ip, lsr sp
   1f480:	andeq	r2, r3, r4, asr sp
   1f484:	andeq	r2, r3, r4, ror #26
   1f488:	andeq	r2, r3, ip, ror sp
   1f48c:	andeq	r2, r3, ip, lsl #27
   1f490:	andeq	r2, r3, r4, lsr #27
   1f494:	andeq	r2, r3, r0, lsr #27
   1f498:	andeq	r2, r3, ip, lsr #27
   1f49c:			; <UNDEFINED> instruction: 0x00032db4
   1f4a0:	andeq	r2, r3, r0, asr #27
   1f4a4:	ldrdeq	r2, [r3], -r0
   1f4a8:	andeq	r2, r3, r0, ror #27
   1f4ac:	strdeq	r2, [r3], -r0
   1f4b0:	strdeq	r2, [r3], -ip
   1f4b4:	andeq	r2, r3, r8, lsl #28
   1f4b8:	andeq	r2, r3, r4, lsl lr
   1f4bc:	andeq	r2, r3, r0, lsr #28
   1f4c0:	andeq	r2, r3, r4, lsr #28
   1f4c4:	andeq	r2, r3, r8, lsl lr
   1f4c8:	andeq	r2, r3, ip, lsl #28
   1f4cc:	andeq	r2, r2, r0, asr #22
   1f4d0:	andeq	r8, r2, r4, lsl #19
   1f4d4:	andeq	sl, r2, ip, asr r8
   1f4d8:	andeq	sl, r2, ip, ror r8
   1f4dc:	andeq	sl, r2, r8, lsr #13
   1f4e0:			; <UNDEFINED> instruction: 0x0002a6bc
   1f4e4:	ldrdeq	sl, [r2], -r0
   1f4e8:	andeq	sl, r2, r8, ror #13
   1f4ec:	andeq	sl, r2, r8, lsl #14
   1f4f0:	andeq	sl, r2, r0, lsr r7

0001f4f4 <__flatcc_fb_gen_c_builder@@Base>:
   1f4f4:	ldr	r3, [r0, #208]	; 0xd0
   1f4f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f4fc:	mov	r4, r0
   1f500:	ldr	r1, [pc, #1928]	; 1fc90 <__flatcc_fb_gen_c_builder@@Base+0x79c>
   1f504:	ldr	r0, [r0, #204]	; 0xcc
   1f508:	ldr	r3, [r3, #164]	; 0xa4
   1f50c:	add	r1, pc, r1
   1f510:	strd	r6, [sp, #8]
   1f514:	strd	r8, [sp, #16]
   1f518:	strd	sl, [sp, #24]
   1f51c:	str	lr, [sp, #32]
   1f520:	sub	sp, sp, #284	; 0x11c
   1f524:	mov	r2, r3
   1f528:	ldr	r5, [pc, #1892]	; 1fc94 <__flatcc_fb_gen_c_builder@@Base+0x7a0>
   1f52c:	bl	13f58 <fprintf@plt>
   1f530:	ldr	r0, [pc, #1888]	; 1fc98 <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   1f534:	mov	r2, #81	; 0x51
   1f538:	mov	r1, #1
   1f53c:	ldr	r3, [r4, #204]	; 0xcc
   1f540:	add	r5, pc, r5
   1f544:	add	r0, pc, r0
   1f548:	bl	13eec <fwrite@plt>
   1f54c:	ldr	r1, [pc, #1864]	; 1fc9c <__flatcc_fb_gen_c_builder@@Base+0x7a8>
   1f550:	ldr	r0, [r4, #204]	; 0xcc
   1f554:	ldr	r3, [r4, #208]	; 0xd0
   1f558:	add	r1, pc, r1
   1f55c:	ldr	r2, [r3, #164]	; 0xa4
   1f560:	bl	13f58 <fprintf@plt>
   1f564:	ldr	r1, [pc, #1844]	; 1fca0 <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   1f568:	ldr	r0, [r4, #204]	; 0xcc
   1f56c:	ldr	r3, [r4, #208]	; 0xd0
   1f570:	add	r1, pc, r1
   1f574:	ldr	r2, [r3, #160]	; 0xa0
   1f578:	bl	13f58 <fprintf@plt>
   1f57c:	mov	r2, #7
   1f580:	mov	r1, #1
   1f584:	ldr	r3, [r4, #204]	; 0xcc
   1f588:	mov	r0, r5
   1f58c:	bl	13eec <fwrite@plt>
   1f590:	ldr	r1, [pc, #1804]	; 1fca4 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   1f594:	add	r2, r4, #102	; 0x66
   1f598:	ldr	r0, [r4, #204]	; 0xcc
   1f59c:	add	r1, pc, r1
   1f5a0:	bl	13f58 <fprintf@plt>
   1f5a4:	ldr	r1, [pc, #1788]	; 1fca8 <__flatcc_fb_gen_c_builder@@Base+0x7b4>
   1f5a8:	mov	r2, r4
   1f5ac:	ldr	r0, [r4, #204]	; 0xcc
   1f5b0:	add	r1, pc, r1
   1f5b4:	bl	13f58 <fprintf@plt>
   1f5b8:	mov	r2, #7
   1f5bc:	mov	r1, #1
   1f5c0:	ldr	r3, [r4, #204]	; 0xcc
   1f5c4:	mov	r0, r5
   1f5c8:	bl	13eec <fwrite@plt>
   1f5cc:	ldr	r2, [pc, #1752]	; 1fcac <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1f5d0:	mov	r0, r4
   1f5d4:	ldr	r1, [pc, #1748]	; 1fcb0 <__flatcc_fb_gen_c_builder@@Base+0x7bc>
   1f5d8:	add	r2, pc, r2
   1f5dc:	add	r1, pc, r1
   1f5e0:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   1f5e4:	ldr	r0, [r4, #204]	; 0xcc
   1f5e8:	ldr	r3, [r4, #212]	; 0xd4
   1f5ec:	ldr	r3, [r3, #140]	; 0x8c
   1f5f0:	cmp	r3, #0
   1f5f4:	bne	1fc2c <__flatcc_fb_gen_c_builder@@Base+0x738>
   1f5f8:	ldr	ip, [r4, #208]	; 0xd0
   1f5fc:	ldrh	r3, [ip, #16]
   1f600:	cmp	r3, #2
   1f604:	beq	1fc04 <__flatcc_fb_gen_c_builder@@Base+0x710>
   1f608:	ldr	r1, [pc, #1700]	; 1fcb4 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   1f60c:	mov	r3, r4
   1f610:	mov	r2, r4
   1f614:	add	r1, pc, r1
   1f618:	bl	13f58 <fprintf@plt>
   1f61c:	ldr	r0, [r4, #204]	; 0xcc
   1f620:	ldr	ip, [r4, #208]	; 0xd0
   1f624:	ldrh	r3, [ip, #32]
   1f628:	cmp	r3, #2
   1f62c:	beq	1fbdc <__flatcc_fb_gen_c_builder@@Base+0x6e8>
   1f630:	ldr	ip, [r4, #212]	; 0xd4
   1f634:	mov	r3, r4
   1f638:	mov	r2, r4
   1f63c:	ldr	r1, [pc, #1652]	; 1fcb8 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1f640:	ldr	ip, [ip, #104]	; 0x68
   1f644:	add	r1, pc, r1
   1f648:	str	ip, [sp]
   1f64c:	bl	13f58 <fprintf@plt>
   1f650:	mov	r0, #10
   1f654:	add	fp, sp, #60	; 0x3c
   1f658:	ldr	r1, [r4, #204]	; 0xcc
   1f65c:	bl	13fb8 <fputc@plt>
   1f660:	mov	r0, fp
   1f664:	mov	r2, #220	; 0xdc
   1f668:	mov	r1, #0
   1f66c:	bl	13f70 <memset@plt>
   1f670:	ldr	r3, [r4, #208]	; 0xd0
   1f674:	ldr	r5, [r3, #40]	; 0x28
   1f678:	cmp	r5, #0
   1f67c:	beq	1f70c <__flatcc_fb_gen_c_builder@@Base+0x218>
   1f680:	ldr	r7, [pc, #1588]	; 1fcbc <__flatcc_fb_gen_c_builder@@Base+0x7c8>
   1f684:	mov	r3, #0
   1f688:	ldr	r6, [pc, #1584]	; 1fcc0 <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   1f68c:	add	r7, pc, r7
   1f690:	add	r6, pc, r6
   1f694:	ldrh	r2, [r5, #8]
   1f698:	cmp	r2, #3
   1f69c:	bne	1f6e8 <__flatcc_fb_gen_c_builder@@Base+0x1f4>
   1f6a0:	mov	r2, fp
   1f6a4:	mov	r1, r5
   1f6a8:	ldr	r0, [r5, #12]
   1f6ac:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1f6b0:	mov	r3, fp
   1f6b4:	mov	r2, fp
   1f6b8:	str	fp, [sp]
   1f6bc:	mov	r1, r7
   1f6c0:	ldr	r0, [r4, #204]	; 0xcc
   1f6c4:	bl	13f58 <fprintf@plt>
   1f6c8:	mov	r3, r4
   1f6cc:	mov	r2, r4
   1f6d0:	str	fp, [sp]
   1f6d4:	mov	r1, r6
   1f6d8:	str	fp, [sp, #4]
   1f6dc:	ldr	r0, [r4, #204]	; 0xcc
   1f6e0:	bl	13f58 <fprintf@plt>
   1f6e4:	mov	r3, #1
   1f6e8:	ldr	r5, [r5]
   1f6ec:	cmp	r5, #0
   1f6f0:	bne	1f694 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   1f6f4:	cmp	r3, #0
   1f6f8:	beq	1f708 <__flatcc_fb_gen_c_builder@@Base+0x214>
   1f6fc:	mov	r0, #10
   1f700:	ldr	r1, [r4, #204]	; 0xcc
   1f704:	bl	13fb8 <fputc@plt>
   1f708:	ldr	r3, [r4, #208]	; 0xd0
   1f70c:	ldr	sl, [r3, #44]	; 0x2c
   1f710:	cmp	sl, #0
   1f714:	beq	1fb6c <__flatcc_fb_gen_c_builder@@Base+0x678>
   1f718:	ldr	r3, [pc, #1444]	; 1fcc4 <__flatcc_fb_gen_c_builder@@Base+0x7d0>
   1f71c:	add	r3, pc, r3
   1f720:	str	r3, [sp, #40]	; 0x28
   1f724:	ldr	r3, [pc, #1436]	; 1fcc8 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   1f728:	add	r3, pc, r3
   1f72c:	str	r3, [sp, #44]	; 0x2c
   1f730:	ldr	r3, [pc, #1428]	; 1fccc <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1f734:	add	r3, pc, r3
   1f738:	str	r3, [sp, #48]	; 0x30
   1f73c:	ldr	r3, [pc, #1420]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1f740:	add	r3, pc, r3
   1f744:	str	r3, [sp, #52]	; 0x34
   1f748:	mov	r2, #220	; 0xdc
   1f74c:	mov	r1, #0
   1f750:	mov	r0, fp
   1f754:	bl	13f70 <memset@plt>
   1f758:	ldrh	r5, [sl, #8]
   1f75c:	cmp	r5, #1
   1f760:	bne	1fc6c <__flatcc_fb_gen_c_builder@@Base+0x778>
   1f764:	mov	r2, fp
   1f768:	mov	r1, sl
   1f76c:	ldr	r0, [sl, #12]
   1f770:	mov	r7, sl
   1f774:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1f778:	ldr	r0, [r7, #20]!
   1f77c:	bl	1b170 <__flatcc_gen_sort@@Base+0x40c>
   1f780:	mov	r6, r0
   1f784:	mov	r2, fp
   1f788:	ldr	r1, [sp, #40]	; 0x28
   1f78c:	ldr	r0, [r4, #204]	; 0xcc
   1f790:	bl	13f58 <fprintf@plt>
   1f794:	mov	r3, r6
   1f798:	mov	r1, r7
   1f79c:	str	r5, [sp]
   1f7a0:	mov	r2, #0
   1f7a4:	mov	r0, r4
   1f7a8:	bl	1ba30 <__flatcc_gen_sort@@Base+0xccc>
   1f7ac:	mov	r2, fp
   1f7b0:	ldr	r1, [sp, #44]	; 0x2c
   1f7b4:	ldr	r0, [r4, #204]	; 0xcc
   1f7b8:	bl	13f58 <fprintf@plt>
   1f7bc:	ldr	r0, [sl, #20]
   1f7c0:	bl	1b170 <__flatcc_gen_sort@@Base+0x40c>
   1f7c4:	subs	r9, r0, #0
   1f7c8:	ble	1f870 <__flatcc_fb_gen_c_builder@@Base+0x37c>
   1f7cc:	ldr	r8, [pc, #1280]	; 1fcd4 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1f7d0:	mov	r5, #0
   1f7d4:	add	r8, pc, r8
   1f7d8:	b	1f818 <__flatcc_fb_gen_c_builder@@Base+0x324>
   1f7dc:	cmp	r6, #4
   1f7e0:	ble	1fbbc <__flatcc_fb_gen_c_builder@@Base+0x6c8>
   1f7e4:	ldr	r2, [pc, #1260]	; 1fcd8 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   1f7e8:	ldr	r1, [pc, #1260]	; 1fcdc <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1f7ec:	add	r2, pc, r2
   1f7f0:	add	r1, pc, r1
   1f7f4:	bl	13f58 <fprintf@plt>
   1f7f8:	ldr	r0, [r4, #204]	; 0xcc
   1f7fc:	mov	r2, r5
   1f800:	add	r5, r5, #1
   1f804:	ldr	r1, [pc, #1236]	; 1fce0 <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   1f808:	add	r1, pc, r1
   1f80c:	bl	13f58 <fprintf@plt>
   1f810:	cmp	r9, r5
   1f814:	beq	1f870 <__flatcc_fb_gen_c_builder@@Base+0x37c>
   1f818:	cmp	r6, #0
   1f81c:	ldr	r0, [r4, #204]	; 0xcc
   1f820:	beq	1f7fc <__flatcc_fb_gen_c_builder@@Base+0x308>
   1f824:	cmp	r5, #0
   1f828:	beq	1f7dc <__flatcc_fb_gen_c_builder@@Base+0x2e8>
   1f82c:	tst	r5, #3
   1f830:	bne	1f840 <__flatcc_fb_gen_c_builder@@Base+0x34c>
   1f834:	sub	r3, r6, r5
   1f838:	cmp	r3, #2
   1f83c:	bgt	1f85c <__flatcc_fb_gen_c_builder@@Base+0x368>
   1f840:	mov	r3, r0
   1f844:	mov	r2, #2
   1f848:	ldr	r0, [sp, #48]	; 0x30
   1f84c:	mov	r1, #1
   1f850:	bl	13eec <fwrite@plt>
   1f854:	ldr	r0, [r4, #204]	; 0xcc
   1f858:	b	1f7fc <__flatcc_fb_gen_c_builder@@Base+0x308>
   1f85c:	mov	r1, r8
   1f860:	ldr	r2, [sp, #52]	; 0x34
   1f864:	bl	13f58 <fprintf@plt>
   1f868:	ldr	r0, [r4, #204]	; 0xcc
   1f86c:	b	1f7fc <__flatcc_fb_gen_c_builder@@Base+0x308>
   1f870:	mov	r0, #10
   1f874:	ldr	r1, [r4, #204]	; 0xcc
   1f878:	mov	r8, #0
   1f87c:	bl	13fb8 <fputc@plt>
   1f880:	ldr	r1, [pc, #1116]	; 1fce4 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1f884:	mov	r3, fp
   1f888:	mov	r2, fp
   1f88c:	str	fp, [sp]
   1f890:	mov	r5, #1
   1f894:	ldr	r0, [r4, #204]	; 0xcc
   1f898:	ldr	r9, [pc, #1096]	; 1fce8 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1f89c:	add	r1, pc, r1
   1f8a0:	bl	13f58 <fprintf@plt>
   1f8a4:	mov	r3, r6
   1f8a8:	mov	r1, r7
   1f8ac:	str	r8, [sp]
   1f8b0:	mov	r2, r8
   1f8b4:	mov	r0, r4
   1f8b8:	bl	1ba30 <__flatcc_gen_sort@@Base+0xccc>
   1f8bc:	ldr	r3, [pc, #1064]	; 1fcec <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1f8c0:	mov	r2, #4
   1f8c4:	mov	r1, r5
   1f8c8:	add	r9, pc, r9
   1f8cc:	add	r3, pc, r3
   1f8d0:	mov	r0, r3
   1f8d4:	str	r3, [sp, #32]
   1f8d8:	ldr	r3, [r4, #204]	; 0xcc
   1f8dc:	bl	13eec <fwrite@plt>
   1f8e0:	mov	r2, r6
   1f8e4:	mov	r1, r7
   1f8e8:	str	r8, [sp]
   1f8ec:	mov	r3, r8
   1f8f0:	mov	r0, r4
   1f8f4:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1f8f8:	mov	r2, #12
   1f8fc:	mov	r1, r5
   1f900:	ldr	r3, [r4, #204]	; 0xcc
   1f904:	mov	r0, r9
   1f908:	bl	13eec <fwrite@plt>
   1f90c:	ldr	r1, [pc, #988]	; 1fcf0 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1f910:	mov	r3, fp
   1f914:	mov	r2, fp
   1f918:	str	fp, [sp]
   1f91c:	str	fp, [sp, #4]
   1f920:	ldr	r0, [r4, #204]	; 0xcc
   1f924:	add	r1, pc, r1
   1f928:	bl	13f58 <fprintf@plt>
   1f92c:	ldr	r2, [pc, #960]	; 1fcf4 <__flatcc_fb_gen_c_builder@@Base+0x800>
   1f930:	mov	r1, r5
   1f934:	ldr	r3, [r4, #204]	; 0xcc
   1f938:	add	r2, pc, r2
   1f93c:	mov	r0, r2
   1f940:	str	r2, [sp, #36]	; 0x24
   1f944:	mov	r2, #2
   1f948:	bl	13eec <fwrite@plt>
   1f94c:	mov	r2, r6
   1f950:	mov	r1, r7
   1f954:	str	r5, [sp]
   1f958:	mov	r3, r8
   1f95c:	mov	r0, r4
   1f960:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1f964:	mov	r1, r5
   1f968:	mov	r2, #12
   1f96c:	ldr	r3, [r4, #204]	; 0xcc
   1f970:	mov	r0, r9
   1f974:	bl	13eec <fwrite@plt>
   1f978:	ldr	r1, [pc, #888]	; 1fcf8 <__flatcc_fb_gen_c_builder@@Base+0x804>
   1f97c:	mov	r3, fp
   1f980:	mov	r2, fp
   1f984:	str	fp, [sp]
   1f988:	ldr	r0, [r4, #204]	; 0xcc
   1f98c:	add	r1, pc, r1
   1f990:	bl	13f58 <fprintf@plt>
   1f994:	mov	r3, r6
   1f998:	mov	r1, r7
   1f99c:	str	r8, [sp]
   1f9a0:	mov	r2, r8
   1f9a4:	mov	r0, r4
   1f9a8:	bl	1ba30 <__flatcc_gen_sort@@Base+0xccc>
   1f9ac:	mov	r1, r5
   1f9b0:	mov	r2, #4
   1f9b4:	ldr	r0, [sp, #32]
   1f9b8:	ldr	r3, [r4, #204]	; 0xcc
   1f9bc:	bl	13eec <fwrite@plt>
   1f9c0:	mov	r2, r6
   1f9c4:	mov	r1, r7
   1f9c8:	str	r8, [sp]
   1f9cc:	mov	r3, #2
   1f9d0:	mov	r0, r4
   1f9d4:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1f9d8:	mov	r1, r5
   1f9dc:	mov	r2, #12
   1f9e0:	ldr	r3, [r4, #204]	; 0xcc
   1f9e4:	mov	r0, r9
   1f9e8:	bl	13eec <fwrite@plt>
   1f9ec:	ldr	r1, [pc, #776]	; 1fcfc <__flatcc_fb_gen_c_builder@@Base+0x808>
   1f9f0:	mov	r3, fp
   1f9f4:	mov	r2, fp
   1f9f8:	str	fp, [sp]
   1f9fc:	str	fp, [sp, #4]
   1fa00:	ldr	r0, [r4, #204]	; 0xcc
   1fa04:	add	r1, pc, r1
   1fa08:	bl	13f58 <fprintf@plt>
   1fa0c:	mov	r1, r5
   1fa10:	mov	r2, #2
   1fa14:	ldr	r0, [sp, #36]	; 0x24
   1fa18:	ldr	r3, [r4, #204]	; 0xcc
   1fa1c:	bl	13eec <fwrite@plt>
   1fa20:	mov	r2, r6
   1fa24:	mov	r1, r7
   1fa28:	str	r5, [sp]
   1fa2c:	mov	r3, #2
   1fa30:	mov	r0, r4
   1fa34:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1fa38:	mov	r1, r5
   1fa3c:	mov	r2, #12
   1fa40:	ldr	r3, [r4, #204]	; 0xcc
   1fa44:	mov	r0, r9
   1fa48:	bl	13eec <fwrite@plt>
   1fa4c:	ldr	r1, [pc, #684]	; 1fd00 <__flatcc_fb_gen_c_builder@@Base+0x80c>
   1fa50:	mov	r3, fp
   1fa54:	mov	r2, fp
   1fa58:	str	fp, [sp]
   1fa5c:	ldr	r0, [r4, #204]	; 0xcc
   1fa60:	add	r1, pc, r1
   1fa64:	bl	13f58 <fprintf@plt>
   1fa68:	mov	r3, r6
   1fa6c:	mov	r1, r7
   1fa70:	str	r8, [sp]
   1fa74:	mov	r2, r8
   1fa78:	mov	r0, r4
   1fa7c:	bl	1ba30 <__flatcc_gen_sort@@Base+0xccc>
   1fa80:	mov	r1, r5
   1fa84:	mov	r2, #4
   1fa88:	ldr	r0, [sp, #32]
   1fa8c:	ldr	r3, [r4, #204]	; 0xcc
   1fa90:	bl	13eec <fwrite@plt>
   1fa94:	mov	r2, r6
   1fa98:	mov	r1, r7
   1fa9c:	str	r8, [sp]
   1faa0:	mov	r3, r5
   1faa4:	mov	r0, r4
   1faa8:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1faac:	mov	r1, r5
   1fab0:	mov	r2, #12
   1fab4:	ldr	r3, [r4, #204]	; 0xcc
   1fab8:	mov	r0, r9
   1fabc:	bl	13eec <fwrite@plt>
   1fac0:	ldr	r1, [pc, #572]	; 1fd04 <__flatcc_fb_gen_c_builder@@Base+0x810>
   1fac4:	mov	r3, fp
   1fac8:	mov	r2, fp
   1facc:	str	fp, [sp]
   1fad0:	str	fp, [sp, #4]
   1fad4:	ldr	r0, [r4, #204]	; 0xcc
   1fad8:	add	r1, pc, r1
   1fadc:	bl	13f58 <fprintf@plt>
   1fae0:	mov	r1, r5
   1fae4:	mov	r2, #2
   1fae8:	ldr	r0, [sp, #36]	; 0x24
   1faec:	ldr	r3, [r4, #204]	; 0xcc
   1faf0:	bl	13eec <fwrite@plt>
   1faf4:	mov	r2, r6
   1faf8:	mov	r1, r7
   1fafc:	str	r5, [sp]
   1fb00:	mov	r3, r5
   1fb04:	mov	r0, r4
   1fb08:	bl	1b268 <__flatcc_gen_sort@@Base+0x504>
   1fb0c:	mov	r1, r5
   1fb10:	mov	r2, #12
   1fb14:	ldr	r3, [r4, #204]	; 0xcc
   1fb18:	mov	r0, r9
   1fb1c:	bl	13eec <fwrite@plt>
   1fb20:	str	fp, [sp, #20]
   1fb24:	mov	r3, r4
   1fb28:	mov	r2, r4
   1fb2c:	str	fp, [sp, #24]
   1fb30:	ldrh	ip, [sl, #104]	; 0x68
   1fb34:	ldr	r1, [pc, #460]	; 1fd08 <__flatcc_fb_gen_c_builder@@Base+0x814>
   1fb38:	ldr	r0, [r4, #204]	; 0xcc
   1fb3c:	str	ip, [sp, #16]
   1fb40:	ldrd	r6, [sl, #112]	; 0x70
   1fb44:	add	r1, pc, r1
   1fb48:	str	fp, [sp]
   1fb4c:	strd	r6, [sp, #8]
   1fb50:	bl	13f58 <fprintf@plt>
   1fb54:	mov	r0, #10
   1fb58:	ldr	r1, [r4, #204]	; 0xcc
   1fb5c:	bl	13fb8 <fputc@plt>
   1fb60:	ldr	sl, [sl, #120]	; 0x78
   1fb64:	cmp	sl, r8
   1fb68:	bne	1f748 <__flatcc_fb_gen_c_builder@@Base+0x254>
   1fb6c:	mov	r0, r4
   1fb70:	bl	1d96c <__flatcc_gen_sort@@Base+0x2c08>
   1fb74:	ldr	r0, [r4, #204]	; 0xcc
   1fb78:	ldr	r3, [r4, #212]	; 0xd4
   1fb7c:	ldr	r3, [r3, #140]	; 0x8c
   1fb80:	cmp	r3, #0
   1fb84:	bne	1fc4c <__flatcc_fb_gen_c_builder@@Base+0x758>
   1fb88:	ldr	r3, [r4, #208]	; 0xd0
   1fb8c:	ldr	r1, [pc, #376]	; 1fd0c <__flatcc_fb_gen_c_builder@@Base+0x818>
   1fb90:	ldr	r2, [r3, #164]	; 0xa4
   1fb94:	add	r1, pc, r1
   1fb98:	bl	13f58 <fprintf@plt>
   1fb9c:	mov	r0, #0
   1fba0:	add	sp, sp, #284	; 0x11c
   1fba4:	ldrd	r4, [sp]
   1fba8:	ldrd	r6, [sp, #8]
   1fbac:	ldrd	r8, [sp, #16]
   1fbb0:	ldrd	sl, [sp, #24]
   1fbb4:	add	sp, sp, #32
   1fbb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1fbbc:	mov	r3, r0
   1fbc0:	ldr	r0, [pc, #328]	; 1fd10 <__flatcc_fb_gen_c_builder@@Base+0x81c>
   1fbc4:	mov	r2, #2
   1fbc8:	mov	r1, #1
   1fbcc:	add	r0, pc, r0
   1fbd0:	bl	13eec <fwrite@plt>
   1fbd4:	ldr	r0, [r4, #204]	; 0xcc
   1fbd8:	b	1f7fc <__flatcc_fb_gen_c_builder@@Base+0x308>
   1fbdc:	ldr	lr, [ip, #24]
   1fbe0:	mov	r3, r4
   1fbe4:	mov	r2, r4
   1fbe8:	ldr	r1, [pc, #292]	; 1fd14 <__flatcc_fb_gen_c_builder@@Base+0x820>
   1fbec:	str	lr, [sp, #4]
   1fbf0:	ldr	ip, [ip, #28]
   1fbf4:	add	r1, pc, r1
   1fbf8:	str	ip, [sp]
   1fbfc:	bl	13f58 <fprintf@plt>
   1fc00:	b	1f650 <__flatcc_fb_gen_c_builder@@Base+0x15c>
   1fc04:	ldr	lr, [ip, #8]
   1fc08:	mov	r3, r4
   1fc0c:	mov	r2, r4
   1fc10:	ldr	r1, [pc, #256]	; 1fd18 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1fc14:	str	lr, [sp, #4]
   1fc18:	ldr	ip, [ip, #12]
   1fc1c:	add	r1, pc, r1
   1fc20:	str	ip, [sp]
   1fc24:	bl	13f58 <fprintf@plt>
   1fc28:	b	1f61c <__flatcc_fb_gen_c_builder@@Base+0x128>
   1fc2c:	mov	r3, r0
   1fc30:	ldr	r0, [pc, #228]	; 1fd1c <__flatcc_fb_gen_c_builder@@Base+0x828>
   1fc34:	mov	r2, #36	; 0x24
   1fc38:	mov	r1, #1
   1fc3c:	add	r0, pc, r0
   1fc40:	bl	13eec <fwrite@plt>
   1fc44:	ldr	r0, [r4, #204]	; 0xcc
   1fc48:	b	1f5f8 <__flatcc_fb_gen_c_builder@@Base+0x104>
   1fc4c:	mov	r3, r0
   1fc50:	ldr	r0, [pc, #200]	; 1fd20 <__flatcc_fb_gen_c_builder@@Base+0x82c>
   1fc54:	mov	r2, #36	; 0x24
   1fc58:	mov	r1, #1
   1fc5c:	add	r0, pc, r0
   1fc60:	bl	13eec <fwrite@plt>
   1fc64:	ldr	r0, [r4, #204]	; 0xcc
   1fc68:	b	1fb88 <__flatcc_fb_gen_c_builder@@Base+0x694>
   1fc6c:	ldr	r3, [pc, #176]	; 1fd24 <__flatcc_fb_gen_c_builder@@Base+0x830>
   1fc70:	movw	r2, #1010	; 0x3f2
   1fc74:	ldr	r1, [pc, #172]	; 1fd28 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1fc78:	ldr	r0, [pc, #172]	; 1fd2c <__flatcc_fb_gen_c_builder@@Base+0x838>
   1fc7c:	add	r3, pc, r3
   1fc80:	add	r3, r3, #208	; 0xd0
   1fc84:	add	r1, pc, r1
   1fc88:	add	r0, pc, r0
   1fc8c:	bl	1400c <__assert_fail@plt>
   1fc90:	andeq	r2, r3, r4, lsr #23
   1fc94:	andeq	r8, r2, r0, ror r9
   1fc98:	muleq	r2, r0, r7
   1fc9c:	andeq	r2, r3, r4, lsl #23
   1fca0:	andeq	r2, r3, r4, lsl #23
   1fca4:	andeq	sl, r2, r8, asr r3
   1fca8:	andeq	r2, r3, ip, asr fp
   1fcac:	andeq	r2, r3, r4, asr fp
   1fcb0:	andeq	r0, r2, ip, lsl #31
   1fcb4:	andeq	r8, r2, ip, lsl #18
   1fcb8:	andeq	r8, r2, r0, asr #18
   1fcbc:	andeq	r2, r3, ip, lsr #21
   1fcc0:	strdeq	r2, [r3], -r0
   1fcc4:	andeq	r9, r2, ip, lsl #26
   1fcc8:	andeq	r9, r2, ip, lsl sp
   1fccc:	andeq	r9, r2, ip, lsl #13
   1fcd0:	andeq	r3, r2, r0, asr #28
   1fcd4:	andeq	r9, r2, r4, ror #11
   1fcd8:	muleq	r2, r4, sp
   1fcdc:	andeq	r9, r2, r8, asr #11
   1fce0:			; <UNDEFINED> instruction: 0x000295bc
   1fce4:	andeq	r2, r3, ip, lsl #18
   1fce8:	andeq	r2, r3, r0, lsl r9
   1fcec:	andeq	r2, r3, r4, lsl #18
   1fcf0:	andeq	r2, r3, r4, asr #17
   1fcf4:	andeq	r2, r3, r8, ror #17
   1fcf8:	muleq	r3, r8, r8
   1fcfc:	andeq	r2, r3, ip, asr #16
   1fd00:	andeq	r2, r3, ip, lsr #16
   1fd04:	andeq	r2, r3, r4, ror #15
   1fd08:			; <UNDEFINED> instruction: 0x000327b8
   1fd0c:			; <UNDEFINED> instruction: 0x000327b0
   1fd10:	strdeq	r9, [r2], -r4
   1fd14:	andeq	r8, r2, r0, ror #6
   1fd18:	ldrdeq	r8, [r2], -r0
   1fd1c:	andeq	r2, r2, ip, lsr #3
   1fd20:	strdeq	r7, [r2], -r0
   1fd24:	andeq	r8, r2, ip, lsr #28
   1fd28:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1fd2c:	andeq	r1, r2, r8, asr sl
   1fd30:	ldr	r3, [pc, #1396]	; 202ac <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1fd34:	mov	r2, #220	; 0xdc
   1fd38:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1fd3c:	mov	r4, r1
   1fd40:	mov	r1, #0
   1fd44:	strd	r6, [sp, #8]
   1fd48:	strd	r8, [sp, #16]
   1fd4c:	mov	r9, r0
   1fd50:	strd	sl, [sp, #24]
   1fd54:	str	lr, [sp, #32]
   1fd58:	sub	sp, sp, #516	; 0x204
   1fd5c:	add	r3, pc, r3
   1fd60:	add	r8, sp, #72	; 0x48
   1fd64:	add	fp, sp, #292	; 0x124
   1fd68:	mov	r0, r8
   1fd6c:	str	r3, [sp, #68]	; 0x44
   1fd70:	bl	13f70 <memset@plt>
   1fd74:	mov	r2, #220	; 0xdc
   1fd78:	mov	r1, #0
   1fd7c:	mov	r0, fp
   1fd80:	bl	13f70 <memset@plt>
   1fd84:	mov	r1, r4
   1fd88:	mov	r2, r8
   1fd8c:	ldr	r0, [r4, #12]
   1fd90:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1fd94:	ldr	r1, [pc, #1300]	; 202b0 <__flatcc_fb_gen_c_builder@@Base+0xdbc>
   1fd98:	mov	r2, r8
   1fd9c:	ldr	r0, [r9, #204]	; 0xcc
   1fda0:	add	r1, pc, r1
   1fda4:	bl	13f58 <fprintf@plt>
   1fda8:	ldr	r4, [r4, #20]
   1fdac:	cmp	r4, #0
   1fdb0:	beq	201fc <__flatcc_fb_gen_c_builder@@Base+0xd08>
   1fdb4:	ldr	r3, [pc, #1272]	; 202b4 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1fdb8:	mov	r1, #1
   1fdbc:	str	r8, [sp, #56]	; 0x38
   1fdc0:	ldr	sl, [pc, #1264]	; 202b8 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1fdc4:	add	r3, pc, r3
   1fdc8:	str	r3, [sp, #60]	; 0x3c
   1fdcc:	add	sl, pc, sl
   1fdd0:	ldr	r3, [pc, #1252]	; 202bc <__flatcc_fb_gen_c_builder@@Base+0xdc8>
   1fdd4:	add	r3, pc, r3
   1fdd8:	str	r3, [sp, #64]	; 0x40
   1fddc:	ldr	r3, [r9, #204]	; 0xcc
   1fde0:	ldrh	r2, [r4, #72]	; 0x48
   1fde4:	tst	r2, #4
   1fde8:	bne	1fef0 <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   1fdec:	cmp	r1, #0
   1fdf0:	beq	20114 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   1fdf4:	ldr	r0, [pc, #1220]	; 202c0 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1fdf8:	mov	r2, #28
   1fdfc:	mov	r1, #1
   1fe00:	add	r0, pc, r0
   1fe04:	bl	13eec <fwrite@plt>
   1fe08:	ldrh	r3, [r4, #24]
   1fe0c:	ldrh	r5, [r4, #72]	; 0x48
   1fe10:	sub	r3, r3, #7
   1fe14:	ubfx	r5, r5, #8, #1
   1fe18:	cmp	r3, #8
   1fe1c:	addls	pc, pc, r3, lsl #2
   1fe20:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fe24:	b	1ffc0 <__flatcc_fb_gen_c_builder@@Base+0xacc>
   1fe28:	b	20010 <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   1fe2c:	b	1feb8 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   1fe30:	b	20038 <__flatcc_fb_gen_c_builder@@Base+0xb44>
   1fe34:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fe38:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fe3c:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fe40:	b	1fe80 <__flatcc_fb_gen_c_builder@@Base+0x98c>
   1fe44:	b	1fe48 <__flatcc_fb_gen_c_builder@@Base+0x954>
   1fe48:	ldr	r1, [r4, #16]
   1fe4c:	mov	r2, fp
   1fe50:	ldr	r0, [r1, #12]
   1fe54:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1fe58:	ldr	r3, [r4, #16]
   1fe5c:	ldrh	r3, [r3, #8]
   1fe60:	cmp	r3, #4
   1fe64:	addls	pc, pc, r3, lsl #2
   1fe68:	b	20204 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   1fe6c:	b	200c8 <__flatcc_fb_gen_c_builder@@Base+0xbd4>
   1fe70:	b	20088 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fe74:	b	20204 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   1fe78:	b	20088 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fe7c:	b	20070 <__flatcc_fb_gen_c_builder@@Base+0xb7c>
   1fe80:	ldr	r1, [r4, #16]
   1fe84:	mov	r2, fp
   1fe88:	ldr	r0, [r1, #12]
   1fe8c:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1fe90:	ldr	r3, [r4, #16]
   1fe94:	ldrh	r3, [r3, #8]
   1fe98:	cmp	r3, #4
   1fe9c:	addls	pc, pc, r3, lsl #2
   1fea0:	b	20258 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1fea4:	b	200f8 <__flatcc_fb_gen_c_builder@@Base+0xc04>
   1fea8:	b	200e4 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1feac:	b	20258 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1feb0:	b	200e4 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1feb4:	b	20054 <__flatcc_fb_gen_c_builder@@Base+0xb60>
   1feb8:	ldr	r1, [pc, #1028]	; 202c4 <__flatcc_fb_gen_c_builder@@Base+0xdd0>
   1febc:	ldrd	r2, [r4, #96]	; 0x60
   1fec0:	str	r5, [sp]
   1fec4:	ldr	r0, [r9, #204]	; 0xcc
   1fec8:	add	r1, pc, r1
   1fecc:	bl	13f58 <fprintf@plt>
   1fed0:	ldr	r2, [r4, #4]
   1fed4:	mov	r1, sl
   1fed8:	ldr	r0, [r9, #204]	; 0xcc
   1fedc:	ldr	r3, [r2]
   1fee0:	ldr	r2, [r2, #4]
   1fee4:	bl	13f58 <fprintf@plt>
   1fee8:	ldr	r3, [r9, #204]	; 0xcc
   1feec:	mov	r1, #0
   1fef0:	ldr	r4, [r4]
   1fef4:	cmp	r4, #0
   1fef8:	bne	1fde0 <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   1fefc:	cmp	r1, #0
   1ff00:	ldr	r8, [sp, #56]	; 0x38
   1ff04:	beq	201e8 <__flatcc_fb_gen_c_builder@@Base+0xcf4>
   1ff08:	ldr	r0, [pc, #952]	; 202c8 <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   1ff0c:	mov	r2, #29
   1ff10:	mov	r1, #1
   1ff14:	add	r0, pc, r0
   1ff18:	bl	13eec <fwrite@plt>
   1ff1c:	ldr	r0, [pc, #936]	; 202cc <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   1ff20:	mov	r2, #3
   1ff24:	mov	r1, #1
   1ff28:	ldr	r3, [r9, #204]	; 0xcc
   1ff2c:	add	r0, pc, r0
   1ff30:	bl	13eec <fwrite@plt>
   1ff34:	ldr	r1, [pc, #916]	; 202d0 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1ff38:	mov	r3, r8
   1ff3c:	mov	r2, r8
   1ff40:	str	r8, [sp]
   1ff44:	ldr	r0, [r9, #204]	; 0xcc
   1ff48:	add	r1, pc, r1
   1ff4c:	bl	13f58 <fprintf@plt>
   1ff50:	ldr	r1, [pc, #892]	; 202d4 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1ff54:	mov	r3, r8
   1ff58:	mov	r2, r8
   1ff5c:	str	r8, [sp]
   1ff60:	ldr	r0, [r9, #204]	; 0xcc
   1ff64:	add	r1, pc, r1
   1ff68:	bl	13f58 <fprintf@plt>
   1ff6c:	ldr	r1, [pc, #868]	; 202d8 <__flatcc_fb_gen_c_builder@@Base+0xde4>
   1ff70:	mov	r3, r8
   1ff74:	mov	r2, r8
   1ff78:	ldr	r0, [r9, #204]	; 0xcc
   1ff7c:	add	r1, pc, r1
   1ff80:	bl	13f58 <fprintf@plt>
   1ff84:	ldr	r1, [pc, #848]	; 202dc <__flatcc_fb_gen_c_builder@@Base+0xde8>
   1ff88:	mov	r2, r8
   1ff8c:	mov	r3, r9
   1ff90:	str	r8, [sp]
   1ff94:	ldr	r0, [r9, #204]	; 0xcc
   1ff98:	add	r1, pc, r1
   1ff9c:	bl	13f58 <fprintf@plt>
   1ffa0:	mov	r0, #0
   1ffa4:	add	sp, sp, #516	; 0x204
   1ffa8:	ldrd	r4, [sp]
   1ffac:	ldrd	r6, [sp, #8]
   1ffb0:	ldrd	r8, [sp, #16]
   1ffb4:	ldrd	sl, [sp, #24]
   1ffb8:	add	sp, sp, #32
   1ffbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1ffc0:	ldr	r1, [r4, #104]	; 0x68
   1ffc4:	cmp	r1, #0
   1ffc8:	beq	2012c <__flatcc_fb_gen_c_builder@@Base+0xc38>
   1ffcc:	mov	r2, fp
   1ffd0:	ldr	r0, [r1, #12]
   1ffd4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   1ffd8:	ldr	r3, [r4, #104]	; 0x68
   1ffdc:	ldrh	r3, [r3, #8]
   1ffe0:	cmp	r3, #0
   1ffe4:	bne	20190 <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   1ffe8:	ldr	r1, [pc, #752]	; 202e0 <__flatcc_fb_gen_c_builder@@Base+0xdec>
   1ffec:	ldrd	r2, [r4, #96]	; 0x60
   1fff0:	str	fp, [sp, #8]
   1fff4:	ldrh	ip, [r4, #74]	; 0x4a
   1fff8:	add	r1, pc, r1
   1fffc:	str	r5, [sp]
   20000:	ldr	r0, [r9, #204]	; 0xcc
   20004:	str	ip, [sp, #4]
   20008:	bl	13f58 <fprintf@plt>
   2000c:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20010:	ldr	r1, [pc, #716]	; 202e4 <__flatcc_fb_gen_c_builder@@Base+0xdf0>
   20014:	ldrh	r0, [r4, #74]	; 0x4a
   20018:	ldrd	r2, [r4, #96]	; 0x60
   2001c:	add	r1, pc, r1
   20020:	str	r0, [sp, #8]
   20024:	ldrd	r6, [r4, #88]	; 0x58
   20028:	ldr	r0, [r9, #204]	; 0xcc
   2002c:	strd	r6, [sp]
   20030:	bl	13f58 <fprintf@plt>
   20034:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20038:	ldr	r1, [pc, #680]	; 202e8 <__flatcc_fb_gen_c_builder@@Base+0xdf4>
   2003c:	ldrd	r2, [r4, #96]	; 0x60
   20040:	str	r5, [sp]
   20044:	ldr	r0, [r9, #204]	; 0xcc
   20048:	add	r1, pc, r1
   2004c:	bl	13f58 <fprintf@plt>
   20050:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20054:	ldr	r1, [pc, #656]	; 202ec <__flatcc_fb_gen_c_builder@@Base+0xdf8>
   20058:	ldrd	r2, [r4, #96]	; 0x60
   2005c:	stm	sp, {r5, fp}
   20060:	ldr	r0, [r9, #204]	; 0xcc
   20064:	add	r1, pc, r1
   20068:	bl	13f58 <fprintf@plt>
   2006c:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20070:	ldr	r1, [sp, #60]	; 0x3c
   20074:	ldrd	r2, [r4, #96]	; 0x60
   20078:	stm	sp, {r5, fp}
   2007c:	ldr	r0, [r9, #204]	; 0xcc
   20080:	bl	13f58 <fprintf@plt>
   20084:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20088:	ldrd	r6, [r4, #88]	; 0x58
   2008c:	ldrd	r2, [r4, #96]	; 0x60
   20090:	ldrh	r8, [r4, #74]	; 0x4a
   20094:	strd	r2, [sp, #40]	; 0x28
   20098:	orrs	r3, r6, r7
   2009c:	ldr	r3, [r9, #204]	; 0xcc
   200a0:	str	r3, [sp, #36]	; 0x24
   200a4:	bne	201cc <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   200a8:	mvn	r2, #0
   200ac:	mov	r3, #0
   200b0:	strd	r2, [sp, #48]	; 0x30
   200b4:	str	r5, [sp]
   200b8:	ldr	r0, [sp, #36]	; 0x24
   200bc:	ldrd	r2, [sp, #40]	; 0x28
   200c0:	ldr	r1, [sp, #64]	; 0x40
   200c4:	b	20178 <__flatcc_fb_gen_c_builder@@Base+0xc84>
   200c8:	ldr	r1, [pc, #544]	; 202f0 <__flatcc_fb_gen_c_builder@@Base+0xdfc>
   200cc:	ldrd	r2, [r4, #96]	; 0x60
   200d0:	stm	sp, {r5, fp}
   200d4:	ldr	r0, [r9, #204]	; 0xcc
   200d8:	add	r1, pc, r1
   200dc:	bl	13f58 <fprintf@plt>
   200e0:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   200e4:	ldr	r1, [pc, #520]	; 202f4 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   200e8:	ldrh	r0, [r4, #74]	; 0x4a
   200ec:	ldrd	r2, [r4, #96]	; 0x60
   200f0:	add	r1, pc, r1
   200f4:	b	20020 <__flatcc_fb_gen_c_builder@@Base+0xb2c>
   200f8:	ldr	r1, [pc, #504]	; 202f8 <__flatcc_fb_gen_c_builder@@Base+0xe04>
   200fc:	ldrd	r2, [r4, #96]	; 0x60
   20100:	stm	sp, {r5, fp}
   20104:	ldr	r0, [r9, #204]	; 0xcc
   20108:	add	r1, pc, r1
   2010c:	bl	13f58 <fprintf@plt>
   20110:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20114:	ldr	r0, [pc, #480]	; 202fc <__flatcc_fb_gen_c_builder@@Base+0xe08>
   20118:	mov	r2, #30
   2011c:	mov	r1, #1
   20120:	add	r0, pc, r0
   20124:	bl	13eec <fwrite@plt>
   20128:	b	1fe08 <__flatcc_fb_gen_c_builder@@Base+0x914>
   2012c:	ldrd	r6, [r4, #88]	; 0x58
   20130:	ldrd	r2, [r4, #96]	; 0x60
   20134:	ldrh	r8, [r4, #74]	; 0x4a
   20138:	strd	r2, [sp, #40]	; 0x28
   2013c:	orrs	r3, r6, r7
   20140:	ldr	r3, [r9, #204]	; 0xcc
   20144:	str	r3, [sp, #36]	; 0x24
   20148:	beq	201bc <__flatcc_fb_gen_c_builder@@Base+0xcc8>
   2014c:	mov	r2, r6
   20150:	mov	r3, r7
   20154:	mvn	r0, #0
   20158:	mov	r1, #0
   2015c:	bl	3f070 <fb_value_set_visit@@Base+0x684>
   20160:	strd	r0, [sp, #48]	; 0x30
   20164:	ldr	r1, [pc, #404]	; 20300 <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   20168:	str	r5, [sp]
   2016c:	ldr	r0, [sp, #36]	; 0x24
   20170:	ldrd	r2, [sp, #40]	; 0x28
   20174:	add	r1, pc, r1
   20178:	strd	r6, [sp, #8]
   2017c:	ldrd	r6, [sp, #48]	; 0x30
   20180:	str	r8, [sp, #16]
   20184:	strd	r6, [sp, #24]
   20188:	bl	13f58 <fprintf@plt>
   2018c:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20190:	ldrh	r0, [r4, #74]	; 0x4a
   20194:	ldr	r1, [pc, #360]	; 20304 <__flatcc_fb_gen_c_builder@@Base+0xe10>
   20198:	ldrd	r2, [r4, #96]	; 0x60
   2019c:	str	r0, [sp, #16]
   201a0:	ldrd	r6, [r4, #88]	; 0x58
   201a4:	add	r1, pc, r1
   201a8:	str	r5, [sp]
   201ac:	ldr	r0, [r9, #204]	; 0xcc
   201b0:	strd	r6, [sp, #8]
   201b4:	bl	13f58 <fprintf@plt>
   201b8:	b	1fed0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   201bc:	mvn	r2, #0
   201c0:	mov	r3, #0
   201c4:	strd	r2, [sp, #48]	; 0x30
   201c8:	b	20164 <__flatcc_fb_gen_c_builder@@Base+0xc70>
   201cc:	mov	r2, r6
   201d0:	mov	r3, r7
   201d4:	mvn	r0, #0
   201d8:	mov	r1, #0
   201dc:	bl	3f070 <fb_value_set_visit@@Base+0x684>
   201e0:	strd	r0, [sp, #48]	; 0x30
   201e4:	b	200b4 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   201e8:	ldr	r0, [pc, #280]	; 20308 <__flatcc_fb_gen_c_builder@@Base+0xe14>
   201ec:	mov	r2, #15
   201f0:	mov	r1, #1
   201f4:	add	r0, pc, r0
   201f8:	bl	13eec <fwrite@plt>
   201fc:	ldr	r3, [r9, #204]	; 0xcc
   20200:	b	1ff08 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   20204:	ldr	r2, [pc, #256]	; 2030c <__flatcc_fb_gen_c_builder@@Base+0xe18>
   20208:	mov	r3, #202	; 0xca
   2020c:	ldr	r1, [sp, #68]	; 0x44
   20210:	ldr	r0, [pc, #248]	; 20310 <__flatcc_fb_gen_c_builder@@Base+0xe1c>
   20214:	ldr	r4, [pc, #248]	; 20314 <__flatcc_fb_gen_c_builder@@Base+0xe20>
   20218:	ldr	ip, [r1, r2]
   2021c:	add	r0, pc, r0
   20220:	ldr	r1, [pc, #240]	; 20318 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   20224:	add	r4, pc, r4
   20228:	str	r0, [sp]
   2022c:	mov	r2, r4
   20230:	ldr	r0, [ip]
   20234:	add	r1, pc, r1
   20238:	bl	13f58 <fprintf@plt>
   2023c:	ldr	r3, [pc, #216]	; 2031c <__flatcc_fb_gen_c_builder@@Base+0xe28>
   20240:	mov	r1, r4
   20244:	mov	r2, #202	; 0xca
   20248:	ldr	r0, [pc, #208]	; 20320 <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   2024c:	add	r3, pc, r3
   20250:	add	r0, pc, r0
   20254:	bl	1400c <__assert_fail@plt>
   20258:	ldr	r2, [pc, #172]	; 2030c <__flatcc_fb_gen_c_builder@@Base+0xe18>
   2025c:	mov	r3, #178	; 0xb2
   20260:	ldr	r1, [sp, #68]	; 0x44
   20264:	ldr	r0, [pc, #184]	; 20324 <__flatcc_fb_gen_c_builder@@Base+0xe30>
   20268:	ldr	r4, [pc, #184]	; 20328 <__flatcc_fb_gen_c_builder@@Base+0xe34>
   2026c:	ldr	ip, [r1, r2]
   20270:	add	r0, pc, r0
   20274:	ldr	r1, [pc, #176]	; 2032c <__flatcc_fb_gen_c_builder@@Base+0xe38>
   20278:	add	r4, pc, r4
   2027c:	str	r0, [sp]
   20280:	mov	r2, r4
   20284:	ldr	r0, [ip]
   20288:	add	r1, pc, r1
   2028c:	bl	13f58 <fprintf@plt>
   20290:	ldr	r3, [pc, #152]	; 20330 <__flatcc_fb_gen_c_builder@@Base+0xe3c>
   20294:	mov	r1, r4
   20298:	mov	r2, #178	; 0xb2
   2029c:	ldr	r0, [pc, #144]	; 20334 <__flatcc_fb_gen_c_builder@@Base+0xe40>
   202a0:	add	r3, pc, r3
   202a4:	add	r0, pc, r0
   202a8:	bl	1400c <__assert_fail@plt>
   202ac:	muleq	r4, ip, r2
   202b0:	andeq	r2, r3, r8, ror #11
   202b4:	andeq	r2, r3, r4, lsl #18
   202b8:	andeq	r3, r3, r8, ror #15
   202bc:	strdeq	r2, [r3], -r0
   202c0:	ldrdeq	r2, [r3], -r0
   202c4:	andeq	r2, r3, ip, ror #12
   202c8:	andeq	r2, r3, ip, asr #16
   202cc:	strdeq	r2, [r3], -r0
   202d0:	andeq	r2, r3, r8, lsr r8
   202d4:			; <UNDEFINED> instruction: 0x000328bc
   202d8:	andeq	r2, r3, r0, asr r9
   202dc:	andeq	r2, r3, ip, ror #19
   202e0:	andeq	r2, r3, r0, asr #8
   202e4:	strdeq	r2, [r3], -r4
   202e8:	andeq	r2, r3, r0, asr #9
   202ec:	andeq	r2, r3, ip, lsr r5
   202f0:	andeq	r2, r3, ip, lsr #11
   202f4:	andeq	r2, r3, r0, lsr #6
   202f8:	andeq	r2, r3, ip, asr r4
   202fc:	ldrdeq	r2, [r3], -r0
   20300:	andeq	r2, r3, r0, asr r3
   20304:	andeq	r2, r3, r0, ror #5
   20308:	andeq	r2, r3, ip, asr r5
   2030c:	muleq	r0, ip, r0
   20310:	strdeq	r2, [r3], -r0
   20314:			; <UNDEFINED> instruction: 0x000323b8
   20318:	andeq	r0, r2, r4, lsl #13
   2031c:	andeq	r2, r3, r4, lsl r1
   20320:	andeq	r8, r2, ip, lsl #23
   20324:	ldrdeq	r2, [r3], -r8
   20328:	andeq	r2, r3, r4, ror #6
   2032c:	andeq	r0, r2, r0, lsr r6
   20330:	andeq	r2, r3, r0, asr #1
   20334:	andeq	r8, r2, r8, lsr fp
   20338:	ldr	r3, [pc, #588]	; 2058c <__flatcc_fb_gen_c_builder@@Base+0x1098>
   2033c:	mov	r2, #220	; 0xdc
   20340:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20344:	mov	r5, r1
   20348:	mov	r1, #0
   2034c:	strd	r6, [sp, #8]
   20350:	mov	r7, r0
   20354:	strd	r8, [sp, #16]
   20358:	strd	sl, [sp, #24]
   2035c:	str	lr, [sp, #32]
   20360:	sub	sp, sp, #484	; 0x1e4
   20364:	add	r3, pc, r3
   20368:	add	r4, sp, #40	; 0x28
   2036c:	add	r8, sp, #260	; 0x104
   20370:	mov	r0, r4
   20374:	str	r3, [sp, #36]	; 0x24
   20378:	bl	13f70 <memset@plt>
   2037c:	mov	r2, #220	; 0xdc
   20380:	mov	r1, #0
   20384:	mov	r0, r8
   20388:	bl	13f70 <memset@plt>
   2038c:	mov	r2, r4
   20390:	mov	r1, r5
   20394:	ldr	r0, [r5, #12]
   20398:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2039c:	ldr	r1, [pc, #492]	; 20590 <__flatcc_fb_gen_c_builder@@Base+0x109c>
   203a0:	mov	r2, r4
   203a4:	ldr	r0, [r7]
   203a8:	add	r1, pc, r1
   203ac:	bl	13f58 <fprintf@plt>
   203b0:	ldr	r4, [r5, #20]
   203b4:	cmp	r4, #0
   203b8:	beq	204c8 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   203bc:	ldr	r3, [pc, #464]	; 20594 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   203c0:	ldr	r9, [pc, #464]	; 20598 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   203c4:	add	r3, pc, r3
   203c8:	str	r3, [sp, #28]
   203cc:	add	r9, pc, r9
   203d0:	ldr	r3, [pc, #452]	; 2059c <__flatcc_fb_gen_c_builder@@Base+0x10a8>
   203d4:	add	r3, pc, r3
   203d8:	str	r3, [sp, #32]
   203dc:	b	20428 <__flatcc_fb_gen_c_builder@@Base+0xf34>
   203e0:	ldr	r1, [r4, #16]
   203e4:	mov	r2, r8
   203e8:	ldr	r0, [r1, #12]
   203ec:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   203f0:	ldr	ip, [r4, #16]
   203f4:	ldrh	r3, [ip, #8]
   203f8:	cmp	r3, #0
   203fc:	bne	20500 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   20400:	mov	r3, r8
   20404:	ldr	r1, [sp, #28]
   20408:	ldr	r2, [r4, #48]	; 0x30
   2040c:	str	r6, [sp]
   20410:	str	r5, [sp, #4]
   20414:	ldr	r0, [r7]
   20418:	bl	13f58 <fprintf@plt>
   2041c:	ldr	r4, [r4]
   20420:	cmp	r4, #0
   20424:	beq	204c8 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   20428:	ldrh	r3, [r4, #24]
   2042c:	ldr	r2, [r4, #4]
   20430:	cmp	r3, #10
   20434:	ldm	r2, {r5, r6}
   20438:	beq	204a4 <__flatcc_fb_gen_c_builder@@Base+0xfb0>
   2043c:	cmp	r3, #14
   20440:	beq	203e0 <__flatcc_fb_gen_c_builder@@Base+0xeec>
   20444:	cmp	r3, #0
   20448:	beq	2041c <__flatcc_fb_gen_c_builder@@Base+0xf28>
   2044c:	ldr	r2, [pc, #332]	; 205a0 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   20450:	mov	r3, #83	; 0x53
   20454:	ldr	r1, [sp, #36]	; 0x24
   20458:	ldr	r0, [pc, #324]	; 205a4 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   2045c:	ldr	r4, [pc, #324]	; 205a8 <__flatcc_fb_gen_c_builder@@Base+0x10b4>
   20460:	ldr	ip, [r1, r2]
   20464:	add	r0, pc, r0
   20468:	ldr	r1, [pc, #316]	; 205ac <__flatcc_fb_gen_c_builder@@Base+0x10b8>
   2046c:	add	r4, pc, r4
   20470:	str	r0, [sp]
   20474:	mov	r2, r4
   20478:	ldr	r0, [ip]
   2047c:	add	r1, pc, r1
   20480:	bl	13f58 <fprintf@plt>
   20484:	ldr	r3, [pc, #292]	; 205b0 <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   20488:	mov	r1, r4
   2048c:	mov	r2, #83	; 0x53
   20490:	ldr	r0, [pc, #284]	; 205b4 <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   20494:	add	r3, pc, r3
   20498:	add	r3, r3, #20
   2049c:	add	r0, pc, r0
   204a0:	bl	1400c <__assert_fail@plt>
   204a4:	mov	r3, r6
   204a8:	mov	r1, r9
   204ac:	ldr	r2, [r4, #48]	; 0x30
   204b0:	str	r5, [sp]
   204b4:	ldr	r0, [r7]
   204b8:	bl	13f58 <fprintf@plt>
   204bc:	ldr	r4, [r4]
   204c0:	cmp	r4, #0
   204c4:	bne	20428 <__flatcc_fb_gen_c_builder@@Base+0xf34>
   204c8:	ldr	r0, [pc, #232]	; 205b8 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   204cc:	mov	r2, #47	; 0x2f
   204d0:	mov	r1, #1
   204d4:	ldr	r3, [r7]
   204d8:	add	r0, pc, r0
   204dc:	bl	13eec <fwrite@plt>
   204e0:	mov	r0, #0
   204e4:	add	sp, sp, #484	; 0x1e4
   204e8:	ldrd	r4, [sp]
   204ec:	ldrd	r6, [sp, #8]
   204f0:	ldrd	r8, [sp, #16]
   204f4:	ldrd	sl, [sp, #24]
   204f8:	add	sp, sp, #32
   204fc:	pop	{pc}		; (ldr pc, [sp], #4)
   20500:	cmp	r3, #1
   20504:	bne	20534 <__flatcc_fb_gen_c_builder@@Base+0x1040>
   20508:	ldr	r2, [r4, #48]	; 0x30
   2050c:	str	r6, [sp, #12]
   20510:	str	r5, [sp, #16]
   20514:	ldrh	r3, [ip, #104]	; 0x68
   20518:	ldr	r0, [r7]
   2051c:	ldr	r1, [sp, #32]
   20520:	str	r3, [sp, #8]
   20524:	ldrd	sl, [ip, #112]	; 0x70
   20528:	strd	sl, [sp]
   2052c:	bl	13f58 <fprintf@plt>
   20530:	b	2041c <__flatcc_fb_gen_c_builder@@Base+0xf28>
   20534:	ldr	r2, [pc, #100]	; 205a0 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   20538:	mov	r3, #74	; 0x4a
   2053c:	ldr	r1, [sp, #36]	; 0x24
   20540:	ldr	r0, [pc, #116]	; 205bc <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   20544:	ldr	r4, [pc, #116]	; 205c0 <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   20548:	ldr	ip, [r1, r2]
   2054c:	add	r0, pc, r0
   20550:	ldr	r1, [pc, #108]	; 205c4 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   20554:	add	r4, pc, r4
   20558:	str	r0, [sp]
   2055c:	mov	r2, r4
   20560:	ldr	r0, [ip]
   20564:	add	r1, pc, r1
   20568:	bl	13f58 <fprintf@plt>
   2056c:	ldr	r3, [pc, #84]	; 205c8 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   20570:	mov	r1, r4
   20574:	mov	r2, #74	; 0x4a
   20578:	ldr	r0, [pc, #76]	; 205cc <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   2057c:	add	r3, pc, r3
   20580:	add	r3, r3, #20
   20584:	add	r0, pc, r0
   20588:	bl	1400c <__assert_fail@plt>
   2058c:	muleq	r4, r4, ip
   20590:	muleq	r3, ip, r6
   20594:	andeq	r2, r3, r0, ror #13
   20598:			; <UNDEFINED> instruction: 0x000327b0
   2059c:	andeq	r2, r3, r0, lsr #14
   205a0:	muleq	r0, ip, r0
   205a4:	andeq	r2, r3, r8, asr r7
   205a8:	andeq	r2, r3, r0, ror r1
   205ac:	andeq	r0, r2, ip, lsr r4
   205b0:	andeq	r1, r3, ip, asr #29
   205b4:	andeq	r8, r2, r0, asr #18
   205b8:	andeq	r2, r3, r8, lsl r7
   205bc:	strdeq	r2, [r3], -r4
   205c0:	andeq	r2, r3, r8, lsl #1
   205c4:	andeq	r0, r2, r4, asr r3
   205c8:	andeq	r1, r3, r4, ror #27
   205cc:	andeq	r8, r2, r8, asr r8

000205d0 <__flatcc_fb_gen_c_verifier@@Base>:
   205d0:	ldr	r3, [r0, #208]	; 0xd0
   205d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   205d8:	mov	r4, r0
   205dc:	ldr	r1, [pc, #868]	; 20948 <__flatcc_fb_gen_c_verifier@@Base+0x378>
   205e0:	ldr	r0, [r0, #204]	; 0xcc
   205e4:	ldr	r3, [r3, #164]	; 0xa4
   205e8:	add	r1, pc, r1
   205ec:	strd	r6, [sp, #8]
   205f0:	strd	r8, [sp, #16]
   205f4:	strd	sl, [sp, #24]
   205f8:	str	lr, [sp, #32]
   205fc:	sub	sp, sp, #244	; 0xf4
   20600:	mov	r2, r3
   20604:	bl	13f58 <fprintf@plt>
   20608:	ldr	r0, [pc, #828]	; 2094c <__flatcc_fb_gen_c_verifier@@Base+0x37c>
   2060c:	mov	r2, #81	; 0x51
   20610:	mov	r1, #1
   20614:	ldr	r3, [r4, #204]	; 0xcc
   20618:	add	r0, pc, r0
   2061c:	bl	13eec <fwrite@plt>
   20620:	ldr	r1, [pc, #808]	; 20950 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   20624:	ldr	r0, [r4, #204]	; 0xcc
   20628:	ldr	r3, [r4, #208]	; 0xd0
   2062c:	add	r1, pc, r1
   20630:	ldr	r2, [r3, #164]	; 0xa4
   20634:	bl	13f58 <fprintf@plt>
   20638:	ldr	r1, [pc, #788]	; 20954 <__flatcc_fb_gen_c_verifier@@Base+0x384>
   2063c:	ldr	r0, [r4, #204]	; 0xcc
   20640:	ldr	r3, [r4, #208]	; 0xd0
   20644:	add	r1, pc, r1
   20648:	ldr	r2, [r3, #160]	; 0xa0
   2064c:	bl	13f58 <fprintf@plt>
   20650:	ldr	r0, [pc, #768]	; 20958 <__flatcc_fb_gen_c_verifier@@Base+0x388>
   20654:	mov	r2, #7
   20658:	mov	r1, #1
   2065c:	ldr	r3, [r4, #204]	; 0xcc
   20660:	add	r0, pc, r0
   20664:	bl	13eec <fwrite@plt>
   20668:	ldr	r0, [pc, #748]	; 2095c <__flatcc_fb_gen_c_verifier@@Base+0x38c>
   2066c:	mov	r2, #36	; 0x24
   20670:	mov	r1, #1
   20674:	ldr	r3, [r4, #204]	; 0xcc
   20678:	add	r0, pc, r0
   2067c:	bl	13eec <fwrite@plt>
   20680:	ldr	r2, [pc, #728]	; 20960 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   20684:	mov	r0, r4
   20688:	ldr	r1, [pc, #724]	; 20964 <__flatcc_fb_gen_c_verifier@@Base+0x394>
   2068c:	add	r2, pc, r2
   20690:	add	r1, pc, r1
   20694:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   20698:	ldr	r1, [r4, #204]	; 0xcc
   2069c:	ldr	r3, [r4, #212]	; 0xd4
   206a0:	ldr	r3, [r3, #140]	; 0x8c
   206a4:	cmp	r3, #0
   206a8:	bne	20908 <__flatcc_fb_gen_c_verifier@@Base+0x338>
   206ac:	mov	r0, #10
   206b0:	add	r8, sp, #20
   206b4:	bl	13fb8 <fputc@plt>
   206b8:	mov	r0, r8
   206bc:	mov	r2, #220	; 0xdc
   206c0:	mov	r1, #0
   206c4:	bl	13f70 <memset@plt>
   206c8:	ldr	r3, [r4, #208]	; 0xd0
   206cc:	ldr	r5, [r3, #40]	; 0x28
   206d0:	cmp	r5, #0
   206d4:	beq	20728 <__flatcc_fb_gen_c_verifier@@Base+0x158>
   206d8:	ldr	r6, [pc, #648]	; 20968 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   206dc:	add	r6, pc, r6
   206e0:	b	206f0 <__flatcc_fb_gen_c_verifier@@Base+0x120>
   206e4:	ldr	r5, [r5]
   206e8:	cmp	r5, #0
   206ec:	beq	20728 <__flatcc_fb_gen_c_verifier@@Base+0x158>
   206f0:	ldrh	r3, [r5, #8]
   206f4:	cmp	r3, #0
   206f8:	bne	206e4 <__flatcc_fb_gen_c_verifier@@Base+0x114>
   206fc:	mov	r1, r5
   20700:	mov	r2, r8
   20704:	ldr	r0, [r5, #12]
   20708:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2070c:	mov	r2, r8
   20710:	mov	r1, r6
   20714:	ldr	r0, [r4, #204]	; 0xcc
   20718:	bl	13f58 <fprintf@plt>
   2071c:	ldr	r5, [r5]
   20720:	cmp	r5, #0
   20724:	bne	206f0 <__flatcc_fb_gen_c_verifier@@Base+0x120>
   20728:	mov	r0, #10
   2072c:	ldr	r1, [r4, #204]	; 0xcc
   20730:	bl	13fb8 <fputc@plt>
   20734:	ldr	r3, [r4, #208]	; 0xd0
   20738:	ldr	r5, [r3, #40]	; 0x28
   2073c:	cmp	r5, #0
   20740:	beq	208c0 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   20744:	add	r6, r4, #204	; 0xcc
   20748:	b	20758 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   2074c:	ldr	r5, [r5]
   20750:	cmp	r5, #0
   20754:	beq	2077c <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   20758:	ldrh	r3, [r5, #8]
   2075c:	cmp	r3, #4
   20760:	bne	2074c <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   20764:	mov	r1, r5
   20768:	mov	r0, r6
   2076c:	bl	20338 <__flatcc_fb_gen_c_builder@@Base+0xe44>
   20770:	ldr	r5, [r5]
   20774:	cmp	r5, #0
   20778:	bne	20758 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   2077c:	ldr	r3, [r4, #208]	; 0xd0
   20780:	ldr	r5, [r3, #40]	; 0x28
   20784:	cmp	r5, #0
   20788:	beq	208c0 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   2078c:	ldr	fp, [pc, #472]	; 2096c <__flatcc_fb_gen_c_verifier@@Base+0x39c>
   20790:	ldr	sl, [pc, #472]	; 20970 <__flatcc_fb_gen_c_verifier@@Base+0x3a0>
   20794:	ldr	r9, [pc, #472]	; 20974 <__flatcc_fb_gen_c_verifier@@Base+0x3a4>
   20798:	add	fp, pc, fp
   2079c:	add	sl, pc, sl
   207a0:	add	r9, pc, r9
   207a4:	b	207b4 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
   207a8:	ldr	r5, [r5]
   207ac:	cmp	r5, #0
   207b0:	beq	2087c <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   207b4:	ldrh	r3, [r5, #8]
   207b8:	cmp	r3, #1
   207bc:	bne	207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   207c0:	mov	r2, #220	; 0xdc
   207c4:	mov	r1, #0
   207c8:	mov	r0, r8
   207cc:	bl	13f70 <memset@plt>
   207d0:	mov	r1, r5
   207d4:	mov	r2, r8
   207d8:	ldr	r0, [r5, #12]
   207dc:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   207e0:	ldrh	ip, [r5, #104]	; 0x68
   207e4:	mov	r3, r8
   207e8:	mov	r2, r8
   207ec:	mov	r1, fp
   207f0:	ldr	r0, [r4, #204]	; 0xcc
   207f4:	str	ip, [sp, #8]
   207f8:	ldrd	r6, [r5, #112]	; 0x70
   207fc:	strd	r6, [sp]
   20800:	bl	13f58 <fprintf@plt>
   20804:	ldrh	ip, [r5, #104]	; 0x68
   20808:	mov	r3, r8
   2080c:	mov	r2, r8
   20810:	mov	r1, sl
   20814:	ldr	r0, [r4, #204]	; 0xcc
   20818:	str	ip, [sp, #8]
   2081c:	ldrd	r6, [r5, #112]	; 0x70
   20820:	strd	r6, [sp]
   20824:	bl	13f58 <fprintf@plt>
   20828:	ldrh	ip, [r5, #104]	; 0x68
   2082c:	mov	r3, r4
   20830:	mov	r2, r8
   20834:	mov	r1, r9
   20838:	ldr	r0, [r4, #204]	; 0xcc
   2083c:	str	ip, [sp, #8]
   20840:	ldrd	r6, [r5, #112]	; 0x70
   20844:	strd	r6, [sp]
   20848:	bl	13f58 <fprintf@plt>
   2084c:	ldrh	r3, [r5, #104]	; 0x68
   20850:	mov	r2, r8
   20854:	ldr	r1, [pc, #284]	; 20978 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   20858:	ldr	r0, [r4, #204]	; 0xcc
   2085c:	str	r3, [sp, #8]
   20860:	ldrd	r6, [r5, #112]	; 0x70
   20864:	add	r1, pc, r1
   20868:	strd	r6, [sp]
   2086c:	bl	13f58 <fprintf@plt>
   20870:	ldr	r5, [r5]
   20874:	cmp	r5, #0
   20878:	bne	207b4 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
   2087c:	ldr	r3, [r4, #208]	; 0xd0
   20880:	ldr	r5, [r3, #40]	; 0x28
   20884:	cmp	r5, #0
   20888:	bne	2089c <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   2088c:	b	208c0 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   20890:	ldr	r5, [r5]
   20894:	cmp	r5, #0
   20898:	beq	208c0 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   2089c:	ldrh	r3, [r5, #8]
   208a0:	cmp	r3, #0
   208a4:	bne	20890 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   208a8:	mov	r1, r5
   208ac:	mov	r0, r4
   208b0:	bl	1fd30 <__flatcc_fb_gen_c_builder@@Base+0x83c>
   208b4:	ldr	r5, [r5]
   208b8:	cmp	r5, #0
   208bc:	bne	2089c <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   208c0:	ldr	r0, [r4, #204]	; 0xcc
   208c4:	ldr	r3, [r4, #212]	; 0xd4
   208c8:	ldr	r3, [r3, #140]	; 0x8c
   208cc:	cmp	r3, #0
   208d0:	bne	20928 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   208d4:	ldr	r3, [r4, #208]	; 0xd0
   208d8:	ldr	r1, [pc, #156]	; 2097c <__flatcc_fb_gen_c_verifier@@Base+0x3ac>
   208dc:	ldr	r2, [r3, #164]	; 0xa4
   208e0:	add	r1, pc, r1
   208e4:	bl	13f58 <fprintf@plt>
   208e8:	mov	r0, #0
   208ec:	add	sp, sp, #244	; 0xf4
   208f0:	ldrd	r4, [sp]
   208f4:	ldrd	r6, [sp, #8]
   208f8:	ldrd	r8, [sp, #16]
   208fc:	ldrd	sl, [sp, #24]
   20900:	add	sp, sp, #32
   20904:	pop	{pc}		; (ldr pc, [sp], #4)
   20908:	ldr	r0, [pc, #112]	; 20980 <__flatcc_fb_gen_c_verifier@@Base+0x3b0>
   2090c:	mov	r3, r1
   20910:	mov	r2, #36	; 0x24
   20914:	mov	r1, #1
   20918:	add	r0, pc, r0
   2091c:	bl	13eec <fwrite@plt>
   20920:	ldr	r1, [r4, #204]	; 0xcc
   20924:	b	206ac <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   20928:	mov	r3, r0
   2092c:	ldr	r0, [pc, #80]	; 20984 <__flatcc_fb_gen_c_verifier@@Base+0x3b4>
   20930:	mov	r2, #36	; 0x24
   20934:	mov	r1, #1
   20938:	add	r0, pc, r0
   2093c:	bl	13eec <fwrite@plt>
   20940:	ldr	r0, [r4, #204]	; 0xcc
   20944:	b	208d4 <__flatcc_fb_gen_c_verifier@@Base+0x304>
   20948:	andeq	r2, r3, r8, lsr r6
   2094c:			; <UNDEFINED> instruction: 0x000216bc
   20950:			; <UNDEFINED> instruction: 0x00031ab0
   20954:			; <UNDEFINED> instruction: 0x00031ab0
   20958:	andeq	r7, r2, r0, asr r8
   2095c:	ldrdeq	r2, [r3], -r8
   20960:	andeq	r2, r3, ip, ror #11
   20964:	andeq	pc, r1, r4, ror #29
   20968:	andeq	r2, r3, r8, lsr #11
   2096c:	andeq	r2, r3, r4, lsr r5
   20970:	andeq	r2, r3, ip, asr #11
   20974:	andeq	r2, r3, ip, ror #12
   20978:	andeq	r2, r3, r0, ror #12
   2097c:	muleq	r3, r4, r6
   20980:	ldrdeq	r1, [r2], -r0
   20984:	andeq	r7, r2, r4, lsl r3
   20988:	push	{r1, r2, r3}
   2098c:	ldr	r3, [pc, #260]	; 20a98 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   20990:	strd	r4, [sp, #-28]!	; 0xffffffe4
   20994:	mov	r5, r0
   20998:	ldr	r1, [r0, #212]	; 0xd4
   2099c:	ldr	r4, [r0, #220]	; 0xdc
   209a0:	add	r3, pc, r3
   209a4:	strd	r6, [sp, #8]
   209a8:	strd	r8, [sp, #16]
   209ac:	str	lr, [sp, #24]
   209b0:	sub	sp, sp, #8
   209b4:	ldrb	r2, [r3]
   209b8:	ldr	r9, [sp, #36]	; 0x24
   209bc:	ldr	r6, [r1, #176]	; 0xb0
   209c0:	cmp	r2, #0
   209c4:	beq	20a84 <__flatcc_fb_gen_c_verifier@@Base+0x4b4>
   209c8:	ldrb	r3, [r9]
   209cc:	cmp	r3, #0
   209d0:	beq	20a58 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   209d4:	mul	r6, r6, r4
   209d8:	cmp	r6, #64	; 0x40
   209dc:	ble	20a24 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   209e0:	ldr	r8, [pc, #180]	; 20a9c <__flatcc_fb_gen_c_verifier@@Base+0x4cc>
   209e4:	mov	r4, r6
   209e8:	ldr	r7, [pc, #176]	; 20aa0 <__flatcc_fb_gen_c_verifier@@Base+0x4d0>
   209ec:	add	r8, pc, r8
   209f0:	add	r7, pc, r7
   209f4:	sub	r4, r4, #64	; 0x40
   209f8:	mov	r3, r8
   209fc:	ldr	r0, [r5, #204]	; 0xcc
   20a00:	mov	r2, #64	; 0x40
   20a04:	mov	r1, r7
   20a08:	bl	13f58 <fprintf@plt>
   20a0c:	cmp	r4, #64	; 0x40
   20a10:	bgt	209f4 <__flatcc_fb_gen_c_verifier@@Base+0x424>
   20a14:	sub	r3, r6, #65	; 0x41
   20a18:	sub	r6, r6, #64	; 0x40
   20a1c:	bic	r3, r3, #63	; 0x3f
   20a20:	sub	r6, r6, r3
   20a24:	ldr	r3, [pc, #120]	; 20aa4 <__flatcc_fb_gen_c_verifier@@Base+0x4d4>
   20a28:	mov	r2, r6
   20a2c:	ldr	r1, [pc, #116]	; 20aa8 <__flatcc_fb_gen_c_verifier@@Base+0x4d8>
   20a30:	ldr	r0, [r5, #204]	; 0xcc
   20a34:	add	r3, pc, r3
   20a38:	add	r1, pc, r1
   20a3c:	bl	13f58 <fprintf@plt>
   20a40:	add	r3, sp, #40	; 0x28
   20a44:	mov	r1, r9
   20a48:	ldr	r0, [r5, #204]	; 0xcc
   20a4c:	mov	r2, r3
   20a50:	str	r3, [sp, #4]
   20a54:	bl	13fac <vfprintf@plt>
   20a58:	ldr	r1, [r5, #204]	; 0xcc
   20a5c:	mov	r0, #10
   20a60:	bl	13fb8 <fputc@plt>
   20a64:	add	sp, sp, #8
   20a68:	ldrd	r4, [sp]
   20a6c:	ldrd	r6, [sp, #8]
   20a70:	ldrd	r8, [sp, #16]
   20a74:	ldr	lr, [sp, #24]
   20a78:	add	sp, sp, #28
   20a7c:	add	sp, sp, #12
   20a80:	bx	lr
   20a84:	mov	r0, r3
   20a88:	mov	r2, #64	; 0x40
   20a8c:	mov	r1, #32
   20a90:	bl	13f70 <memset@plt>
   20a94:	b	209c8 <__flatcc_fb_gen_c_verifier@@Base+0x3f8>
   20a98:	andeq	sl, r4, r8, lsl r7
   20a9c:	andeq	sl, r4, ip, asr #13
   20aa0:	andeq	r8, r2, r0, asr #7
   20aa4:	andeq	sl, r4, r4, lsl #13
   20aa8:	andeq	r8, r2, r8, ror r3
   20aac:	ldr	r1, [pc, #4]	; 20ab8 <__flatcc_fb_gen_c_verifier@@Base+0x4e8>
   20ab0:	add	r1, pc, r1
   20ab4:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20ab8:	andeq	r2, r3, r4, lsl #13
   20abc:	ldr	r1, [pc, #4]	; 20ac8 <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   20ac0:	add	r1, pc, r1
   20ac4:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20ac8:			; <UNDEFINED> instruction: 0x000326b0
   20acc:	b	20abc <__flatcc_fb_gen_c_verifier@@Base+0x4ec>
   20ad0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20ad4:	sub	r5, r3, r2
   20ad8:	mov	r4, r0
   20adc:	strd	r6, [sp, #8]
   20ae0:	add	r5, r5, #1
   20ae4:	strd	r8, [sp, #16]
   20ae8:	add	r5, r5, r5, lsr #31
   20aec:	mov	r8, r1
   20af0:	strd	sl, [sp, #24]
   20af4:	mov	sl, r2
   20af8:	str	lr, [sp, #32]
   20afc:	sub	sp, sp, #52	; 0x34
   20b00:	add	r5, r2, r5, asr #1
   20b04:	ldr	r2, [r1]
   20b08:	str	r3, [sp, #28]
   20b0c:	ldr	r9, [sp, #88]	; 0x58
   20b10:	ldr	r3, [sp, #92]	; 0x5c
   20b14:	str	r3, [sp, #24]
   20b18:	lsl	r3, r5, #4
   20b1c:	str	r3, [sp, #40]	; 0x28
   20b20:	add	r3, r2, r3
   20b24:	ldr	fp, [r3, #4]
   20b28:	cmp	r9, fp
   20b2c:	bgt	20cc0 <__flatcc_fb_gen_c_verifier@@Base+0x6f0>
   20b30:	sub	r1, fp, r9
   20b34:	ldr	r7, [r2, r5, lsl #4]
   20b38:	mov	r2, #1
   20b3c:	cmp	r1, #8
   20b40:	mov	r0, #0
   20b44:	movlt	r6, r1
   20b48:	movge	r6, #8
   20b4c:	str	r1, [sp, #44]	; 0x2c
   20b50:	rsb	r1, r6, #8
   20b54:	lsl	r1, r1, #3
   20b58:	add	r7, r7, r9
   20b5c:	sub	lr, r1, #32
   20b60:	rsb	ip, r1, #32
   20b64:	lsl	r3, r2, lr
   20b68:	orr	r3, r3, r2, lsr ip
   20b6c:	mov	ip, r0
   20b70:	str	r3, [sp, #20]
   20b74:	lsl	r3, r2, r1
   20b78:	str	r3, [sp, #16]
   20b7c:	ldrd	r2, [sp, #16]
   20b80:	rsbs	r2, r2, #0
   20b84:	rsc	r3, r3, #0
   20b88:	cmp	r9, fp
   20b8c:	strd	r2, [sp, #32]
   20b90:	beq	20cdc <__flatcc_fb_gen_c_verifier@@Base+0x70c>
   20b94:	add	lr, r7, r6
   20b98:	ldrb	r2, [lr, #-1]!
   20b9c:	mov	r3, #0
   20ba0:	strd	r2, [sp, #16]
   20ba4:	sub	r3, r1, #32
   20ba8:	ldr	fp, [sp, #16]
   20bac:	ldr	r2, [sp, #16]
   20bb0:	lsl	r3, fp, r3
   20bb4:	rsb	fp, r1, #32
   20bb8:	orr	r0, r0, r2, lsl r1
   20bbc:	add	r1, r1, #8
   20bc0:	orr	r3, r3, r2, lsr fp
   20bc4:	cmp	r1, #64	; 0x40
   20bc8:	orr	ip, r3, ip
   20bcc:	bne	20b98 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
   20bd0:	ldr	r3, [sp, #44]	; 0x2c
   20bd4:	cmp	r3, #7
   20bd8:	ble	20cdc <__flatcc_fb_gen_c_verifier@@Base+0x70c>
   20bdc:	ldr	r1, [pc, #808]	; 20f0c <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   20be0:	mov	r6, #8
   20be4:	mov	r2, r0
   20be8:	mov	r3, ip
   20bec:	mov	r0, r4
   20bf0:	strd	r6, [sp]
   20bf4:	add	r1, pc, r1
   20bf8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20bfc:	ldr	r3, [r4, #220]	; 0xdc
   20c00:	cmp	sl, r5
   20c04:	add	r3, r3, #1
   20c08:	str	r3, [r4, #220]	; 0xdc
   20c0c:	bne	20d0c <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   20c10:	ldm	r8, {r2, r5}
   20c14:	mov	r0, r4
   20c18:	ldr	r3, [sp, #40]	; 0x28
   20c1c:	ldr	r1, [r8, #12]
   20c20:	add	r2, r2, r3
   20c24:	ldrd	r2, [r2, #8]
   20c28:	str	r6, [sp]
   20c2c:	blx	r5
   20c30:	ldr	r2, [sp, #24]
   20c34:	cmp	r2, #0
   20c38:	bgt	20e30 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   20c3c:	mov	r0, r4
   20c40:	ldr	r3, [r8, #8]
   20c44:	blx	r3
   20c48:	ldr	r3, [r4, #220]	; 0xdc
   20c4c:	cmp	r3, #0
   20c50:	beq	20ecc <__flatcc_fb_gen_c_verifier@@Base+0x8fc>
   20c54:	ldr	r1, [pc, #692]	; 20f10 <__flatcc_fb_gen_c_verifier@@Base+0x940>
   20c58:	sub	r3, r3, #1
   20c5c:	mov	r0, r4
   20c60:	str	r3, [r4, #220]	; 0xdc
   20c64:	add	r1, pc, r1
   20c68:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20c6c:	ldr	r3, [r4, #220]	; 0xdc
   20c70:	cmp	r3, #0
   20c74:	beq	20eac <__flatcc_fb_gen_c_verifier@@Base+0x8dc>
   20c78:	ldr	r1, [pc, #660]	; 20f14 <__flatcc_fb_gen_c_verifier@@Base+0x944>
   20c7c:	sub	ip, r3, #1
   20c80:	mov	r2, r6
   20c84:	mov	r3, r7
   20c88:	mov	r0, r4
   20c8c:	str	ip, [r4, #220]	; 0xdc
   20c90:	add	r1, pc, r1
   20c94:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20c98:	ldr	r3, [r4, #220]	; 0xdc
   20c9c:	ldr	r2, [sp, #24]
   20ca0:	add	r3, r3, #1
   20ca4:	cmp	r2, #0
   20ca8:	str	r3, [r4, #220]	; 0xdc
   20cac:	bgt	20e58 <__flatcc_fb_gen_c_verifier@@Base+0x888>
   20cb0:	mov	r0, r4
   20cb4:	ldr	r3, [r8, #8]
   20cb8:	blx	r3
   20cbc:	b	20de8 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   20cc0:	mov	r0, #0
   20cc4:	mov	r2, #0
   20cc8:	mov	r3, #0
   20ccc:	mov	ip, r0
   20cd0:	mov	r6, r0
   20cd4:	mov	r7, r0
   20cd8:	strd	r2, [sp, #32]
   20cdc:	ldr	r1, [pc, #564]	; 20f18 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   20ce0:	stm	sp, {r0, ip}
   20ce4:	mov	r0, r4
   20ce8:	strd	r6, [sp, #8]
   20cec:	ldrd	r2, [sp, #32]
   20cf0:	add	r1, pc, r1
   20cf4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20cf8:	ldr	r3, [r4, #220]	; 0xdc
   20cfc:	cmp	sl, r5
   20d00:	add	r3, r3, #1
   20d04:	str	r3, [r4, #220]	; 0xdc
   20d08:	beq	20c10 <__flatcc_fb_gen_c_verifier@@Base+0x640>
   20d0c:	ldr	r3, [sp, #28]
   20d10:	cmp	r3, r5
   20d14:	bne	20d78 <__flatcc_fb_gen_c_verifier@@Base+0x7a8>
   20d18:	ldm	r8, {r2, fp}
   20d1c:	mov	r0, r4
   20d20:	ldr	r3, [sp, #40]	; 0x28
   20d24:	ldr	r1, [r8, #12]
   20d28:	add	r2, r2, r3
   20d2c:	ldrd	r2, [r2, #8]
   20d30:	str	r6, [sp]
   20d34:	blx	fp
   20d38:	ldr	r2, [sp, #24]
   20d3c:	cmp	r2, #0
   20d40:	bgt	20e44 <__flatcc_fb_gen_c_verifier@@Base+0x874>
   20d44:	mov	r0, r4
   20d48:	ldr	r3, [r8, #8]
   20d4c:	blx	r3
   20d50:	ldr	r3, [r4, #220]	; 0xdc
   20d54:	cmp	r3, #0
   20d58:	beq	20e8c <__flatcc_fb_gen_c_verifier@@Base+0x8bc>
   20d5c:	ldr	r1, [pc, #440]	; 20f1c <__flatcc_fb_gen_c_verifier@@Base+0x94c>
   20d60:	sub	r3, r3, #1
   20d64:	mov	r0, r4
   20d68:	str	r3, [r4, #220]	; 0xdc
   20d6c:	add	r1, pc, r1
   20d70:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20d74:	b	20d94 <__flatcc_fb_gen_c_verifier@@Base+0x7c4>
   20d78:	ldr	ip, [sp, #24]
   20d7c:	mov	r2, r5
   20d80:	mov	r1, r8
   20d84:	mov	r0, r4
   20d88:	ldr	r3, [sp, #28]
   20d8c:	stm	sp, {r9, ip}
   20d90:	bl	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
   20d94:	ldr	r3, [r4, #220]	; 0xdc
   20d98:	cmp	r3, #0
   20d9c:	beq	20eec <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   20da0:	ldr	r1, [pc, #376]	; 20f20 <__flatcc_fb_gen_c_verifier@@Base+0x950>
   20da4:	sub	ip, r3, #1
   20da8:	mov	r2, r6
   20dac:	mov	r3, r7
   20db0:	mov	r0, r4
   20db4:	str	ip, [r4, #220]	; 0xdc
   20db8:	add	r1, pc, r1
   20dbc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20dc0:	ldr	ip, [r4, #220]	; 0xdc
   20dc4:	sub	r3, r5, #1
   20dc8:	mov	r2, sl
   20dcc:	mov	r1, r8
   20dd0:	mov	r0, r4
   20dd4:	ldr	lr, [sp, #24]
   20dd8:	add	ip, ip, #1
   20ddc:	stm	sp, {r9, lr}
   20de0:	str	ip, [r4, #220]	; 0xdc
   20de4:	bl	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
   20de8:	ldr	r3, [r4, #220]	; 0xdc
   20dec:	cmp	r3, #0
   20df0:	beq	20e6c <__flatcc_fb_gen_c_verifier@@Base+0x89c>
   20df4:	ldr	r1, [pc, #296]	; 20f24 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   20df8:	sub	ip, r3, #1
   20dfc:	mov	r2, r6
   20e00:	mov	r3, r7
   20e04:	mov	r0, r4
   20e08:	str	ip, [r4, #220]	; 0xdc
   20e0c:	add	r1, pc, r1
   20e10:	add	sp, sp, #52	; 0x34
   20e14:	ldrd	r4, [sp]
   20e18:	ldrd	r6, [sp, #8]
   20e1c:	ldrd	r8, [sp, #16]
   20e20:	ldrd	sl, [sp, #24]
   20e24:	ldr	lr, [sp, #32]
   20e28:	add	sp, sp, #36	; 0x24
   20e2c:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20e30:	ldr	r1, [pc, #240]	; 20f28 <__flatcc_fb_gen_c_verifier@@Base+0x958>
   20e34:	mov	r0, r4
   20e38:	add	r1, pc, r1
   20e3c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20e40:	b	20c48 <__flatcc_fb_gen_c_verifier@@Base+0x678>
   20e44:	ldr	r1, [pc, #224]	; 20f2c <__flatcc_fb_gen_c_verifier@@Base+0x95c>
   20e48:	mov	r0, r4
   20e4c:	add	r1, pc, r1
   20e50:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20e54:	b	20d50 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   20e58:	ldr	r1, [pc, #208]	; 20f30 <__flatcc_fb_gen_c_verifier@@Base+0x960>
   20e5c:	mov	r0, r4
   20e60:	add	r1, pc, r1
   20e64:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   20e68:	b	20de8 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   20e6c:	ldr	r3, [pc, #192]	; 20f34 <__flatcc_fb_gen_c_verifier@@Base+0x964>
   20e70:	movw	r2, #910	; 0x38e
   20e74:	ldr	r1, [pc, #188]	; 20f38 <__flatcc_fb_gen_c_verifier@@Base+0x968>
   20e78:	ldr	r0, [pc, #188]	; 20f3c <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   20e7c:	add	r3, pc, r3
   20e80:	add	r1, pc, r1
   20e84:	add	r0, pc, r0
   20e88:	bl	1400c <__assert_fail@plt>
   20e8c:	ldr	r3, [pc, #172]	; 20f40 <__flatcc_fb_gen_c_verifier@@Base+0x970>
   20e90:	movw	r2, #903	; 0x387
   20e94:	ldr	r1, [pc, #168]	; 20f44 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   20e98:	ldr	r0, [pc, #168]	; 20f48 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   20e9c:	add	r3, pc, r3
   20ea0:	add	r1, pc, r1
   20ea4:	add	r0, pc, r0
   20ea8:	bl	1400c <__assert_fail@plt>
   20eac:	ldr	r3, [pc, #152]	; 20f4c <__flatcc_fb_gen_c_verifier@@Base+0x97c>
   20eb0:	movw	r2, #889	; 0x379
   20eb4:	ldr	r1, [pc, #148]	; 20f50 <__flatcc_fb_gen_c_verifier@@Base+0x980>
   20eb8:	ldr	r0, [pc, #148]	; 20f54 <__flatcc_fb_gen_c_verifier@@Base+0x984>
   20ebc:	add	r3, pc, r3
   20ec0:	add	r1, pc, r1
   20ec4:	add	r0, pc, r0
   20ec8:	bl	1400c <__assert_fail@plt>
   20ecc:	ldr	r3, [pc, #132]	; 20f58 <__flatcc_fb_gen_c_verifier@@Base+0x988>
   20ed0:	mov	r2, #888	; 0x378
   20ed4:	ldr	r1, [pc, #128]	; 20f5c <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   20ed8:	ldr	r0, [pc, #128]	; 20f60 <__flatcc_fb_gen_c_verifier@@Base+0x990>
   20edc:	add	r3, pc, r3
   20ee0:	add	r1, pc, r1
   20ee4:	add	r0, pc, r0
   20ee8:	bl	1400c <__assert_fail@plt>
   20eec:	ldr	r3, [pc, #112]	; 20f64 <__flatcc_fb_gen_c_verifier@@Base+0x994>
   20ef0:	movw	r2, #907	; 0x38b
   20ef4:	ldr	r1, [pc, #108]	; 20f68 <__flatcc_fb_gen_c_verifier@@Base+0x998>
   20ef8:	ldr	r0, [pc, #108]	; 20f6c <__flatcc_fb_gen_c_verifier@@Base+0x99c>
   20efc:	add	r3, pc, r3
   20f00:	add	r1, pc, r1
   20f04:	add	r0, pc, r0
   20f08:	bl	1400c <__assert_fail@plt>
   20f0c:	muleq	r3, r0, r5
   20f10:	strdeq	r2, [r3], -r4
   20f14:	andeq	r2, r3, ip, asr #11
   20f18:			; <UNDEFINED> instruction: 0x000324b4
   20f1c:	andeq	r2, r3, ip, ror #9
   20f20:	andeq	r2, r3, r4, lsr #9
   20f24:	andeq	r2, r3, r8, ror #8
   20f28:	muleq	r3, r8, r3
   20f2c:	andeq	r2, r3, r4, lsl #7
   20f30:	andeq	r2, r3, r0, ror r3
   20f34:	andeq	r2, r3, r4, lsl r1
   20f38:	andeq	r2, r3, r0, ror #6
   20f3c:	andeq	r2, r3, r8, asr #7
   20f40:	strdeq	r2, [r3], -r4
   20f44:	andeq	r2, r3, r0, asr #6
   20f48:	andeq	r2, r3, r8, lsr #7
   20f4c:	ldrdeq	r2, [r3], -r4
   20f50:	andeq	r2, r3, r0, lsr #6
   20f54:	andeq	r2, r3, r8, lsl #7
   20f58:	strheq	r2, [r3], -r4
   20f5c:	andeq	r2, r3, r0, lsl #6
   20f60:	andeq	r2, r3, r8, ror #6
   20f64:	muleq	r3, r4, r0
   20f68:	andeq	r2, r3, r0, ror #5
   20f6c:	andeq	r2, r3, r8, asr #6
   20f70:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20f74:	strd	r6, [sp, #8]
   20f78:	strd	r8, [sp, #16]
   20f7c:	strd	sl, [sp, #24]
   20f80:	str	lr, [sp, #32]
   20f84:	sub	sp, sp, #100	; 0x64
   20f88:	ldr	r4, [sp, #136]	; 0x88
   20f8c:	strd	r2, [sp, #60]	; 0x3c
   20f90:	ldr	r3, [r1]
   20f94:	str	r0, [sp, #72]	; 0x48
   20f98:	str	r1, [sp, #80]	; 0x50
   20f9c:	add	r1, r4, #7
   20fa0:	str	r3, [sp, #76]	; 0x4c
   20fa4:	add	r3, r3, r2, lsl #4
   20fa8:	str	r1, [sp, #92]	; 0x5c
   20fac:	ldr	r3, [r3, #4]
   20fb0:	cmp	r1, r3
   20fb4:	str	r3, [sp, #88]	; 0x58
   20fb8:	bge	214b4 <__flatcc_fb_gen_c_verifier@@Base+0xee4>
   20fbc:	sub	r3, r3, r4
   20fc0:	cmp	r3, #8
   20fc4:	beq	214b4 <__flatcc_fb_gen_c_verifier@@Base+0xee4>
   20fc8:	ldrd	r2, [sp, #60]	; 0x3c
   20fcc:	sub	r3, r3, r2
   20fd0:	add	r3, r3, r3, lsr #31
   20fd4:	add	fp, r2, r3, asr #1
   20fd8:	cmp	r2, fp
   20fdc:	str	fp, [sp, #84]	; 0x54
   20fe0:	bge	21164 <__flatcc_fb_gen_c_verifier@@Base+0xb94>
   20fe4:	ldr	r3, [sp, #76]	; 0x4c
   20fe8:	mov	r0, #0
   20fec:	mov	r2, #0
   20ff0:	mov	r8, r0
   20ff4:	mov	lr, r0
   20ff8:	mov	r5, r0
   20ffc:	mov	r9, #1
   21000:	add	ip, r3, fp, lsl #4
   21004:	mov	r3, #0
   21008:	strd	r2, [sp, #16]
   2100c:	ldr	r3, [ip, #-12]
   21010:	cmp	r4, r3
   21014:	bgt	210b0 <__flatcc_fb_gen_c_verifier@@Base+0xae0>
   21018:	sub	r1, r3, r4
   2101c:	cmp	r1, #8
   21020:	movge	r1, #8
   21024:	cmp	r4, r3
   21028:	beq	21514 <__flatcc_fb_gen_c_verifier@@Base+0xf44>
   2102c:	ldr	r3, [ip, #-16]
   21030:	rsb	r6, r1, #8
   21034:	mov	lr, #0
   21038:	add	r1, r1, r4
   2103c:	lsl	r7, r6, #3
   21040:	mov	r5, lr
   21044:	add	r1, r3, r1
   21048:	ldrb	r2, [r1, #-1]!
   2104c:	mov	r3, #0
   21050:	strd	r2, [sp, #16]
   21054:	sub	r3, r7, #32
   21058:	ldr	sl, [sp, #16]
   2105c:	ldr	r2, [sp, #16]
   21060:	lsl	r3, sl, r3
   21064:	rsb	sl, r7, #32
   21068:	orr	lr, lr, r2, lsl r7
   2106c:	add	r7, r7, #8
   21070:	orr	r3, r3, r2, lsr sl
   21074:	cmp	r7, #64	; 0x40
   21078:	orr	r5, r3, r5
   2107c:	bne	21048 <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   21080:	lsl	r6, r6, #3
   21084:	sub	r2, r6, #32
   21088:	rsb	r3, r6, #32
   2108c:	lsl	r2, r9, r2
   21090:	orr	r3, r2, r9, lsr r3
   21094:	str	r3, [sp, #12]
   21098:	lsl	r3, r9, r6
   2109c:	str	r3, [sp, #8]
   210a0:	ldrd	r2, [sp, #8]
   210a4:	rsbs	r2, r2, #0
   210a8:	rsc	r3, r3, #0
   210ac:	strd	r2, [sp, #16]
   210b0:	ldm	ip, {r1, sl}
   210b4:	cmp	r4, sl
   210b8:	str	r1, [sp, #68]	; 0x44
   210bc:	bgt	21120 <__flatcc_fb_gen_c_verifier@@Base+0xb50>
   210c0:	sub	r3, sl, r4
   210c4:	cmp	r3, #8
   210c8:	movge	r3, #8
   210cc:	cmp	r4, sl
   210d0:	beq	21500 <__flatcc_fb_gen_c_verifier@@Base+0xf30>
   210d4:	rsb	r2, r3, #8
   210d8:	mov	r0, #0
   210dc:	add	r3, r3, r4
   210e0:	lsl	r2, r2, #3
   210e4:	mov	r8, r0
   210e8:	add	r3, r1, r3
   210ec:	ldrb	r6, [r3, #-1]!
   210f0:	mov	r7, #0
   210f4:	sub	r1, r2, #32
   210f8:	strd	r6, [sp, #32]
   210fc:	lsl	r1, r6, r1
   21100:	rsb	r7, r2, #32
   21104:	ldr	r6, [sp, #32]
   21108:	orr	r0, r0, r6, lsl r2
   2110c:	add	r2, r2, #8
   21110:	orr	r1, r1, r6, lsr r7
   21114:	cmp	r2, #64	; 0x40
   21118:	orr	r8, r1, r8
   2111c:	bne	210ec <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   21120:	eor	r2, lr, r0
   21124:	eor	r3, r5, r8
   21128:	ldr	r1, [sp, #16]
   2112c:	sub	r6, fp, #1
   21130:	and	r2, r1, r2
   21134:	str	r2, [sp, #40]	; 0x28
   21138:	ldr	r2, [sp, #20]
   2113c:	and	r3, r2, r3
   21140:	str	r3, [sp, #44]	; 0x2c
   21144:	ldrd	r2, [sp, #40]	; 0x28
   21148:	orrs	r3, r2, r3
   2114c:	bne	21530 <__flatcc_fb_gen_c_verifier@@Base+0xf60>
   21150:	ldr	r3, [sp, #60]	; 0x3c
   21154:	mov	fp, r6
   21158:	sub	ip, ip, #16
   2115c:	cmp	r3, r6
   21160:	bne	2100c <__flatcc_fb_gen_c_verifier@@Base+0xa3c>
   21164:	ldr	r3, [sp, #64]	; 0x40
   21168:	ldr	r2, [sp, #84]	; 0x54
   2116c:	cmp	r3, r2
   21170:	movle	r5, r2
   21174:	ble	21318 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   21178:	ldr	r3, [sp, #76]	; 0x4c
   2117c:	mov	r2, #0
   21180:	mov	sl, #0
   21184:	mov	fp, #0
   21188:	mov	lr, r2
   2118c:	ldr	r9, [sp, #84]	; 0x54
   21190:	mov	r0, r2
   21194:	mov	ip, r2
   21198:	mov	r8, #1
   2119c:	add	r1, r3, r9, lsl #4
   211a0:	ldr	r3, [r1, #4]
   211a4:	cmp	r4, r3
   211a8:	bgt	2124c <__flatcc_fb_gen_c_verifier@@Base+0xc7c>
   211ac:	sub	r5, r3, r4
   211b0:	cmp	r5, #8
   211b4:	movge	r5, #8
   211b8:	cmp	r4, r3
   211bc:	beq	21678 <__flatcc_fb_gen_c_verifier@@Base+0x10a8>
   211c0:	ldr	r6, [r1]
   211c4:	rsb	sl, r5, #8
   211c8:	mov	r0, #0
   211cc:	add	r5, r5, r4
   211d0:	lsl	r3, sl, #3
   211d4:	mov	ip, r0
   211d8:	mov	fp, r1
   211dc:	mov	r7, r0
   211e0:	add	r5, r6, r5
   211e4:	ldrb	r0, [r5, #-1]!
   211e8:	mov	r1, #0
   211ec:	sub	r6, r3, #32
   211f0:	strd	r0, [sp, #8]
   211f4:	lsl	r6, r0, r6
   211f8:	rsb	r1, r3, #32
   211fc:	ldr	r0, [sp, #8]
   21200:	orr	r7, r7, r0, lsl r3
   21204:	add	r3, r3, #8
   21208:	orr	r6, r6, r0, lsr r1
   2120c:	cmp	r3, #64	; 0x40
   21210:	orr	ip, r6, ip
   21214:	bne	211e4 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   21218:	mov	r1, fp
   2121c:	mov	r0, r7
   21220:	lsl	sl, sl, #3
   21224:	sub	r5, sl, #32
   21228:	rsb	r3, sl, #32
   2122c:	lsl	r5, r8, r5
   21230:	orr	r3, r5, r8, lsr r3
   21234:	str	r3, [sp, #28]
   21238:	lsl	r3, r8, sl
   2123c:	str	r3, [sp, #24]
   21240:	ldrd	sl, [sp, #24]
   21244:	rsbs	sl, sl, #0
   21248:	rsc	fp, fp, #0
   2124c:	ldr	r3, [r1, #20]
   21250:	cmp	r4, r3
   21254:	bgt	21524 <__flatcc_fb_gen_c_verifier@@Base+0xf54>
   21258:	sub	r5, r3, r4
   2125c:	cmp	r5, #8
   21260:	movge	r5, #8
   21264:	cmp	r4, r3
   21268:	beq	21688 <__flatcc_fb_gen_c_verifier@@Base+0x10b8>
   2126c:	ldr	r6, [r1, #16]
   21270:	rsb	r3, r5, #8
   21274:	mov	r2, #0
   21278:	add	r5, r5, r4
   2127c:	lsl	r3, r3, #3
   21280:	mov	lr, r2
   21284:	mov	r7, r1
   21288:	strd	sl, [sp, #16]
   2128c:	mov	fp, ip
   21290:	mov	ip, r0
   21294:	add	r5, r6, r5
   21298:	ldrb	r0, [r5, #-1]!
   2129c:	mov	r1, #0
   212a0:	sub	r6, r3, #32
   212a4:	strd	r0, [sp, #8]
   212a8:	lsl	r6, r0, r6
   212ac:	rsb	r1, r3, #32
   212b0:	ldr	sl, [sp, #8]
   212b4:	orr	r2, r2, sl, lsl r3
   212b8:	add	r3, r3, #8
   212bc:	orr	r6, r6, sl, lsr r1
   212c0:	cmp	r3, #64	; 0x40
   212c4:	orr	lr, r6, lr
   212c8:	bne	21298 <__flatcc_fb_gen_c_verifier@@Base+0xcc8>
   212cc:	mov	r0, ip
   212d0:	eor	r3, lr, fp
   212d4:	mov	ip, fp
   212d8:	ldrd	sl, [sp, #16]
   212dc:	mov	r1, r7
   212e0:	eor	r5, r2, r0
   212e4:	and	r5, sl, r5
   212e8:	and	r3, fp, r3
   212ec:	str	r5, [sp, #48]	; 0x30
   212f0:	add	r5, r9, #1
   212f4:	str	r3, [sp, #52]	; 0x34
   212f8:	ldrd	r6, [sp, #48]	; 0x30
   212fc:	orrs	r3, r6, r7
   21300:	bne	21804 <__flatcc_fb_gen_c_verifier@@Base+0x1234>
   21304:	ldr	r3, [sp, #64]	; 0x40
   21308:	mov	r9, r5
   2130c:	add	r1, r1, #16
   21310:	cmp	r3, r5
   21314:	bne	211a0 <__flatcc_fb_gen_c_verifier@@Base+0xbd0>
   21318:	str	r5, [sp, #84]	; 0x54
   2131c:	add	r5, r5, #1
   21320:	ldr	r3, [sp, #60]	; 0x3c
   21324:	cmp	r3, r5
   21328:	bge	21984 <__flatcc_fb_gen_c_verifier@@Base+0x13b4>
   2132c:	mov	r6, r3
   21330:	ldr	r3, [sp, #76]	; 0x4c
   21334:	ldr	r0, [sp, #92]	; 0x5c
   21338:	add	r2, r3, #4
   2133c:	ldr	r3, [sp, #88]	; 0x58
   21340:	b	21348 <__flatcc_fb_gen_c_verifier@@Base+0xd78>
   21344:	ldr	r3, [r2, r6, lsl #4]
   21348:	cmp	r0, r3
   2134c:	bge	2135c <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   21350:	sub	r1, r3, r4
   21354:	cmp	r1, #8
   21358:	bgt	2169c <__flatcc_fb_gen_c_verifier@@Base+0x10cc>
   2135c:	add	r6, r6, #1
   21360:	cmp	r6, r5
   21364:	bne	21344 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   21368:	ldr	r3, [sp, #60]	; 0x3c
   2136c:	ldr	r7, [sp, #64]	; 0x40
   21370:	cmp	r7, r6
   21374:	movge	r7, #1
   21378:	movlt	r7, #0
   2137c:	cmp	r3, r6
   21380:	movge	r7, #0
   21384:	cmp	r7, #0
   21388:	beq	21a0c <__flatcc_fb_gen_c_verifier@@Base+0x143c>
   2138c:	ldr	r9, [pc, #1812]	; 21aa8 <__flatcc_fb_gen_c_verifier@@Base+0x14d8>
   21390:	mov	r8, r6
   21394:	mov	r7, #0
   21398:	add	r9, pc, r9
   2139c:	sub	r3, r8, #1
   213a0:	str	r4, [sp]
   213a4:	mov	sl, #0
   213a8:	ldr	ip, [sp, #80]	; 0x50
   213ac:	ldr	r2, [sp, #60]	; 0x3c
   213b0:	ldr	fp, [sp, #72]	; 0x48
   213b4:	mov	r1, ip
   213b8:	ldr	r8, [ip, #24]
   213bc:	mov	r0, fp
   213c0:	add	r8, r8, #1
   213c4:	str	r8, [sp, #4]
   213c8:	str	r8, [ip, #24]
   213cc:	bl	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
   213d0:	ldr	r1, [pc, #1748]	; 21aac <__flatcc_fb_gen_c_verifier@@Base+0x14dc>
   213d4:	mov	r2, r8
   213d8:	mov	r0, fp
   213dc:	add	r1, pc, r1
   213e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   213e4:	ldr	r1, [pc, #1732]	; 21ab0 <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   213e8:	mov	r2, r8
   213ec:	mov	r0, fp
   213f0:	ldr	r3, [fp, #220]	; 0xdc
   213f4:	str	sl, [fp, #220]	; 0xdc
   213f8:	add	r1, pc, r1
   213fc:	str	r3, [fp, #228]	; 0xe4
   21400:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21404:	ldr	ip, [fp, #228]	; 0xe4
   21408:	mov	r2, r5
   2140c:	mov	r0, fp
   21410:	str	r4, [sp]
   21414:	ldr	r3, [sp, #64]	; 0x40
   21418:	ldr	r1, [sp, #80]	; 0x50
   2141c:	str	ip, [fp, #220]	; 0xdc
   21420:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   21424:	ldr	r1, [pc, #1672]	; 21ab4 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   21428:	mov	r0, fp
   2142c:	mov	r2, r8
   21430:	ldr	r3, [fp, #220]	; 0xdc
   21434:	str	sl, [fp, #220]	; 0xdc
   21438:	add	r1, pc, r1
   2143c:	str	r3, [fp, #228]	; 0xe4
   21440:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21444:	ldr	r1, [pc, #1644]	; 21ab8 <__flatcc_fb_gen_c_verifier@@Base+0x14e8>
   21448:	mov	r0, fp
   2144c:	ldr	r3, [fp, #228]	; 0xe4
   21450:	add	r1, pc, r1
   21454:	str	r3, [fp, #220]	; 0xdc
   21458:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2145c:	cmp	r5, r6
   21460:	ble	2165c <__flatcc_fb_gen_c_verifier@@Base+0x108c>
   21464:	ldr	r3, [sp, #72]	; 0x48
   21468:	ldr	r3, [r3, #220]	; 0xdc
   2146c:	cmp	r3, #0
   21470:	beq	219cc <__flatcc_fb_gen_c_verifier@@Base+0x13fc>
   21474:	ldr	r1, [pc, #1600]	; 21abc <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   21478:	sub	ip, r3, #1
   2147c:	mov	r2, r7
   21480:	mov	r3, r9
   21484:	add	r1, pc, r1
   21488:	ldr	lr, [sp, #72]	; 0x48
   2148c:	mov	r0, lr
   21490:	str	ip, [lr, #220]	; 0xdc
   21494:	add	sp, sp, #100	; 0x64
   21498:	ldrd	r4, [sp]
   2149c:	ldrd	r6, [sp, #8]
   214a0:	ldrd	r8, [sp, #16]
   214a4:	ldrd	sl, [sp, #24]
   214a8:	ldr	lr, [sp, #32]
   214ac:	add	sp, sp, #36	; 0x24
   214b0:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   214b4:	ldr	r3, [sp, #60]	; 0x3c
   214b8:	ldr	r2, [sp, #64]	; 0x40
   214bc:	cmp	r3, r2
   214c0:	beq	21644 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   214c4:	add	r3, r3, #1
   214c8:	cmp	r3, r2
   214cc:	bne	20fc8 <__flatcc_fb_gen_c_verifier@@Base+0x9f8>
   214d0:	ldr	r3, [sp, #76]	; 0x4c
   214d4:	add	r3, r3, r2, lsl #4
   214d8:	ldr	r2, [sp, #92]	; 0x5c
   214dc:	ldr	r3, [r3, #4]
   214e0:	cmp	r2, r3
   214e4:	bge	21644 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   214e8:	sub	r3, r3, r4
   214ec:	cmp	r3, #8
   214f0:	beq	21644 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   214f4:	ldr	r3, [sp, #60]	; 0x3c
   214f8:	str	r3, [sp, #84]	; 0x54
   214fc:	b	21164 <__flatcc_fb_gen_c_verifier@@Base+0xb94>
   21500:	mov	r0, #0
   21504:	mov	r2, lr
   21508:	mov	r8, r0
   2150c:	mov	r3, r5
   21510:	b	21128 <__flatcc_fb_gen_c_verifier@@Base+0xb58>
   21514:	mov	lr, #0
   21518:	rsb	r6, r1, #8
   2151c:	mov	r5, lr
   21520:	b	21080 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   21524:	eor	r5, r0, r2
   21528:	eor	r3, ip, lr
   2152c:	b	212e4 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   21530:	cmp	r4, sl
   21534:	bgt	21854 <__flatcc_fb_gen_c_verifier@@Base+0x1284>
   21538:	ldr	r3, [sp, #68]	; 0x44
   2153c:	sub	r5, sl, r4
   21540:	cmp	r5, #8
   21544:	movge	r5, #8
   21548:	cmp	r4, sl
   2154c:	add	r7, r3, r4
   21550:	beq	21974 <__flatcc_fb_gen_c_verifier@@Base+0x13a4>
   21554:	rsb	r1, r5, #8
   21558:	mov	r2, #0
   2155c:	lsl	r1, r1, #3
   21560:	mov	r3, r2
   21564:	add	ip, r7, r5
   21568:	ldrb	r8, [ip, #-1]!
   2156c:	sub	r0, r1, #32
   21570:	rsb	lr, r1, #32
   21574:	lsl	r0, r8, r0
   21578:	orr	r2, r2, r8, lsl r1
   2157c:	add	r1, r1, #8
   21580:	orr	r0, r0, r8, lsr lr
   21584:	cmp	r1, #64	; 0x40
   21588:	orr	r3, r0, r3
   2158c:	bne	21568 <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   21590:	ldr	r1, [pc, #1320]	; 21ac0 <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   21594:	stm	sp, {r5, r7}
   21598:	ldr	r8, [sp, #72]	; 0x48
   2159c:	add	r1, pc, r1
   215a0:	mov	r0, r8
   215a4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   215a8:	ldr	ip, [r8, #220]	; 0xdc
   215ac:	mov	r3, r6
   215b0:	mov	r0, r8
   215b4:	str	r4, [sp]
   215b8:	ldr	r2, [sp, #60]	; 0x3c
   215bc:	ldr	r1, [sp, #80]	; 0x50
   215c0:	add	ip, ip, #1
   215c4:	str	ip, [r8, #220]	; 0xdc
   215c8:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   215cc:	ldr	r3, [r8, #220]	; 0xdc
   215d0:	cmp	r3, #0
   215d4:	beq	21a60 <__flatcc_fb_gen_c_verifier@@Base+0x1490>
   215d8:	ldr	r1, [pc, #1252]	; 21ac4 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   215dc:	sub	ip, r3, #1
   215e0:	mov	r2, r5
   215e4:	mov	r3, r7
   215e8:	ldr	r6, [sp, #72]	; 0x48
   215ec:	add	r1, pc, r1
   215f0:	mov	r0, r6
   215f4:	str	ip, [r6, #220]	; 0xdc
   215f8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   215fc:	ldr	ip, [r6, #220]	; 0xdc
   21600:	mov	r2, fp
   21604:	mov	r0, r6
   21608:	str	r4, [sp]
   2160c:	ldr	r3, [sp, #64]	; 0x40
   21610:	ldr	r1, [sp, #80]	; 0x50
   21614:	add	ip, ip, #1
   21618:	str	ip, [r6, #220]	; 0xdc
   2161c:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   21620:	ldr	r3, [r6, #220]	; 0xdc
   21624:	cmp	r3, #0
   21628:	beq	21a84 <__flatcc_fb_gen_c_verifier@@Base+0x14b4>
   2162c:	ldr	r1, [pc, #1172]	; 21ac8 <__flatcc_fb_gen_c_verifier@@Base+0x14f8>
   21630:	sub	ip, r3, #1
   21634:	mov	r2, r5
   21638:	mov	r3, r7
   2163c:	add	r1, pc, r1
   21640:	b	21488 <__flatcc_fb_gen_c_verifier@@Base+0xeb8>
   21644:	mov	ip, #0
   21648:	ldrd	r2, [sp, #60]	; 0x3c
   2164c:	stm	sp, {r4, ip}
   21650:	ldr	r0, [sp, #72]	; 0x48
   21654:	ldr	r1, [sp, #80]	; 0x50
   21658:	bl	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
   2165c:	add	sp, sp, #100	; 0x64
   21660:	ldrd	r4, [sp]
   21664:	ldrd	r6, [sp, #8]
   21668:	ldrd	r8, [sp, #16]
   2166c:	ldrd	sl, [sp, #24]
   21670:	add	sp, sp, #32
   21674:	pop	{pc}		; (ldr pc, [sp], #4)
   21678:	mov	r0, #0
   2167c:	rsb	sl, r5, #8
   21680:	mov	ip, r0
   21684:	b	21220 <__flatcc_fb_gen_c_verifier@@Base+0xc50>
   21688:	mov	r2, #0
   2168c:	mov	r5, r0
   21690:	mov	lr, r2
   21694:	mov	r3, ip
   21698:	b	212e4 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   2169c:	str	r3, [sp, #88]	; 0x58
   216a0:	ldr	r3, [sp, #60]	; 0x3c
   216a4:	cmp	r6, r3
   216a8:	add	r3, r4, #8
   216ac:	str	r3, [sp, #8]
   216b0:	bgt	2180c <__flatcc_fb_gen_c_verifier@@Base+0x123c>
   216b4:	ldr	r3, [sp, #88]	; 0x58
   216b8:	cmp	r4, r3
   216bc:	movle	r8, #0
   216c0:	bgt	21934 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   216c4:	ldr	r3, [sp, #76]	; 0x4c
   216c8:	mov	r1, #0
   216cc:	mov	r2, r1
   216d0:	ldr	r9, [r3, r6, lsl #4]
   216d4:	mov	r3, r1
   216d8:	add	r9, r9, r4
   216dc:	add	ip, r9, #8
   216e0:	ldrb	sl, [ip, #-1]!
   216e4:	sub	r0, r1, #32
   216e8:	rsb	lr, r1, #32
   216ec:	lsl	r0, sl, r0
   216f0:	orr	r2, r2, sl, lsl r1
   216f4:	add	r1, r1, #8
   216f8:	orr	r0, r0, sl, lsr lr
   216fc:	cmp	r1, #64	; 0x40
   21700:	orr	r3, r0, r3
   21704:	bne	216e0 <__flatcc_fb_gen_c_verifier@@Base+0x1110>
   21708:	mov	r7, #8
   2170c:	ldr	r1, [pc, #952]	; 21acc <__flatcc_fb_gen_c_verifier@@Base+0x14fc>
   21710:	stm	sp, {r7, r9}
   21714:	ldr	sl, [sp, #72]	; 0x48
   21718:	add	r1, pc, r1
   2171c:	mov	r0, sl
   21720:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21724:	ldr	r3, [sl, #220]	; 0xdc
   21728:	cmp	r8, #0
   2172c:	add	r3, r3, #1
   21730:	str	r3, [sl, #220]	; 0xdc
   21734:	bne	21868 <__flatcc_fb_gen_c_verifier@@Base+0x1298>
   21738:	ldr	r1, [pc, #912]	; 21ad0 <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   2173c:	mov	r8, r6
   21740:	ldr	sl, [sp, #72]	; 0x48
   21744:	add	r1, pc, r1
   21748:	mov	r0, sl
   2174c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21750:	ldr	r1, [pc, #892]	; 21ad4 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   21754:	mov	r0, sl
   21758:	add	r1, pc, r1
   2175c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21760:	ldr	r1, [sp, #8]
   21764:	mov	r2, r6
   21768:	mov	r0, sl
   2176c:	ldr	r3, [sp, #84]	; 0x54
   21770:	str	r1, [sp]
   21774:	ldr	r1, [sp, #80]	; 0x50
   21778:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   2177c:	ldr	r3, [sp, #72]	; 0x48
   21780:	ldr	r3, [r3, #220]	; 0xdc
   21784:	cmp	r3, #0
   21788:	beq	21a3c <__flatcc_fb_gen_c_verifier@@Base+0x146c>
   2178c:	ldr	r1, [pc, #836]	; 21ad8 <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   21790:	sub	ip, r3, #1
   21794:	mov	r2, r7
   21798:	mov	r3, r9
   2179c:	ldr	sl, [sp, #72]	; 0x48
   217a0:	add	r1, pc, r1
   217a4:	mov	r0, sl
   217a8:	str	ip, [sl, #220]	; 0xdc
   217ac:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   217b0:	ldr	r3, [sl, #220]	; 0xdc
   217b4:	ldr	r0, [sp, #64]	; 0x40
   217b8:	ldr	ip, [sp, #60]	; 0x3c
   217bc:	add	r3, r3, #1
   217c0:	cmp	r0, r5
   217c4:	str	r3, [sl, #220]	; 0xdc
   217c8:	movlt	r2, #0
   217cc:	movge	r2, #1
   217d0:	cmp	r0, r5
   217d4:	cmpge	r8, ip
   217d8:	bgt	2139c <__flatcc_fb_gen_c_verifier@@Base+0xdcc>
   217dc:	ldr	r3, [sp, #60]	; 0x3c
   217e0:	cmp	r8, r3
   217e4:	bgt	21a18 <__flatcc_fb_gen_c_verifier@@Base+0x1448>
   217e8:	cmp	r2, #0
   217ec:	bne	219f0 <__flatcc_fb_gen_c_verifier@@Base+0x1420>
   217f0:	ldr	r0, [sp, #72]	; 0x48
   217f4:	ldr	r3, [sp, #80]	; 0x50
   217f8:	ldr	r3, [r3, #8]
   217fc:	blx	r3
   21800:	b	2145c <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   21804:	str	r9, [sp, #84]	; 0x54
   21808:	b	21320 <__flatcc_fb_gen_c_verifier@@Base+0xd50>
   2180c:	ldr	r3, [sp, #76]	; 0x4c
   21810:	add	r2, r4, #8
   21814:	add	r3, r3, r6, lsl #4
   21818:	ldr	r3, [r3, #-12]
   2181c:	cmp	r3, r2
   21820:	bgt	216b4 <__flatcc_fb_gen_c_verifier@@Base+0x10e4>
   21824:	sub	r3, r3, r4
   21828:	sub	r8, r3, #8
   2182c:	ldr	r3, [sp, #88]	; 0x58
   21830:	clz	r8, r8
   21834:	lsr	r8, r8, #5
   21838:	cmp	r4, r3
   2183c:	ble	216c4 <__flatcc_fb_gen_c_verifier@@Base+0x10f4>
   21840:	mov	r2, #0
   21844:	mov	r3, r2
   21848:	mov	r9, r2
   2184c:	mov	r7, r2
   21850:	b	2170c <__flatcc_fb_gen_c_verifier@@Base+0x113c>
   21854:	mov	r2, #0
   21858:	mov	r3, r2
   2185c:	mov	r7, r2
   21860:	mov	r5, r2
   21864:	b	21590 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   21868:	ldr	r1, [pc, #620]	; 21adc <__flatcc_fb_gen_c_verifier@@Base+0x150c>
   2186c:	mov	r3, r9
   21870:	mov	r2, r7
   21874:	mov	r0, sl
   21878:	add	r1, pc, r1
   2187c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21880:	ldr	fp, [sp, #80]	; 0x50
   21884:	sub	r2, r6, #-268435455	; 0xf0000001
   21888:	mov	ip, #8
   2188c:	mov	r0, sl
   21890:	ldm	fp, {r3, r8}
   21894:	ldr	r1, [fp, #12]
   21898:	add	r2, r3, r2, lsl #4
   2189c:	ldrd	r2, [r2, #8]
   218a0:	str	ip, [sp]
   218a4:	blx	r8
   218a8:	ldr	r1, [pc, #560]	; 21ae0 <__flatcc_fb_gen_c_verifier@@Base+0x1510>
   218ac:	mov	r3, r9
   218b0:	mov	r2, r7
   218b4:	mov	r0, sl
   218b8:	add	r1, pc, r1
   218bc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   218c0:	ldr	r1, [pc, #540]	; 21ae4 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   218c4:	mov	r0, sl
   218c8:	add	r1, pc, r1
   218cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   218d0:	ldr	r1, [pc, #528]	; 21ae8 <__flatcc_fb_gen_c_verifier@@Base+0x1518>
   218d4:	mov	r0, sl
   218d8:	add	r1, pc, r1
   218dc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   218e0:	ldr	r1, [sp, #8]
   218e4:	mov	r2, r6
   218e8:	mov	r0, sl
   218ec:	ldr	r3, [sp, #84]	; 0x54
   218f0:	str	r1, [sp]
   218f4:	mov	r1, fp
   218f8:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   218fc:	ldr	r3, [sl, #220]	; 0xdc
   21900:	cmp	r3, #0
   21904:	beq	219a8 <__flatcc_fb_gen_c_verifier@@Base+0x13d8>
   21908:	ldr	r1, [pc, #476]	; 21aec <__flatcc_fb_gen_c_verifier@@Base+0x151c>
   2190c:	sub	ip, r3, #1
   21910:	mov	r2, r7
   21914:	mov	r3, r9
   21918:	sub	r8, r6, #1
   2191c:	ldr	lr, [sp, #72]	; 0x48
   21920:	add	r1, pc, r1
   21924:	mov	r0, lr
   21928:	str	ip, [lr, #220]	; 0xdc
   2192c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21930:	b	2177c <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   21934:	ldr	r1, [pc, #436]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   21938:	mov	ip, #0
   2193c:	mov	r3, #0
   21940:	mov	r2, #0
   21944:	mov	r7, ip
   21948:	ldr	r8, [sp, #72]	; 0x48
   2194c:	mov	r9, ip
   21950:	str	ip, [sp]
   21954:	str	ip, [sp, #4]
   21958:	add	r1, pc, r1
   2195c:	mov	r0, r8
   21960:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21964:	ldr	r3, [r8, #220]	; 0xdc
   21968:	add	r3, r3, #1
   2196c:	str	r3, [r8, #220]	; 0xdc
   21970:	b	21738 <__flatcc_fb_gen_c_verifier@@Base+0x1168>
   21974:	mov	r2, #0
   21978:	mov	r3, r2
   2197c:	mov	r5, r2
   21980:	b	21590 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   21984:	ldr	r9, [pc, #360]	; 21af4 <__flatcc_fb_gen_c_verifier@@Base+0x1524>
   21988:	mov	r7, #0
   2198c:	ldr	r3, [sp, #64]	; 0x40
   21990:	ldr	r6, [sp, #60]	; 0x3c
   21994:	add	r9, pc, r9
   21998:	cmp	r3, r5
   2199c:	movlt	r2, #0
   219a0:	movge	r2, #1
   219a4:	b	217e8 <__flatcc_fb_gen_c_verifier@@Base+0x1218>
   219a8:	ldr	r3, [pc, #328]	; 21af8 <__flatcc_fb_gen_c_verifier@@Base+0x1528>
   219ac:	mov	r2, #1040	; 0x410
   219b0:	ldr	r1, [pc, #324]	; 21afc <__flatcc_fb_gen_c_verifier@@Base+0x152c>
   219b4:	ldr	r0, [pc, #324]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x1530>
   219b8:	add	r3, pc, r3
   219bc:	add	r3, r3, #16
   219c0:	add	r1, pc, r1
   219c4:	add	r0, pc, r0
   219c8:	bl	1400c <__assert_fail@plt>
   219cc:	ldr	r3, [pc, #304]	; 21b04 <__flatcc_fb_gen_c_verifier@@Base+0x1534>
   219d0:	mov	r2, #1072	; 0x430
   219d4:	ldr	r1, [pc, #300]	; 21b08 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   219d8:	ldr	r0, [pc, #300]	; 21b0c <__flatcc_fb_gen_c_verifier@@Base+0x153c>
   219dc:	add	r3, pc, r3
   219e0:	add	r3, r3, #16
   219e4:	add	r1, pc, r1
   219e8:	add	r0, pc, r0
   219ec:	bl	1400c <__assert_fail@plt>
   219f0:	mov	r2, r5
   219f4:	str	r4, [sp]
   219f8:	ldr	r3, [sp, #64]	; 0x40
   219fc:	ldr	r0, [sp, #72]	; 0x48
   21a00:	ldr	r1, [sp, #80]	; 0x50
   21a04:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   21a08:	b	2145c <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   21a0c:	ldr	r9, [pc, #252]	; 21b10 <__flatcc_fb_gen_c_verifier@@Base+0x1540>
   21a10:	mov	r8, r6
   21a14:	add	r9, pc, r9
   21a18:	mov	r0, #0
   21a1c:	sub	r3, r8, #1
   21a20:	str	r4, [sp]
   21a24:	ldr	r2, [sp, #60]	; 0x3c
   21a28:	str	r0, [sp, #4]
   21a2c:	ldr	r0, [sp, #72]	; 0x48
   21a30:	ldr	r1, [sp, #80]	; 0x50
   21a34:	bl	20ad0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
   21a38:	b	2145c <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   21a3c:	ldr	r3, [pc, #208]	; 21b14 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   21a40:	movw	r2, #1044	; 0x414
   21a44:	ldr	r1, [pc, #204]	; 21b18 <__flatcc_fb_gen_c_verifier@@Base+0x1548>
   21a48:	ldr	r0, [pc, #204]	; 21b1c <__flatcc_fb_gen_c_verifier@@Base+0x154c>
   21a4c:	add	r3, pc, r3
   21a50:	add	r3, r3, #16
   21a54:	add	r1, pc, r1
   21a58:	add	r0, pc, r0
   21a5c:	bl	1400c <__assert_fail@plt>
   21a60:	ldr	r3, [pc, #184]	; 21b20 <__flatcc_fb_gen_c_verifier@@Base+0x1550>
   21a64:	movw	r2, #973	; 0x3cd
   21a68:	ldr	r1, [pc, #180]	; 21b24 <__flatcc_fb_gen_c_verifier@@Base+0x1554>
   21a6c:	ldr	r0, [pc, #180]	; 21b28 <__flatcc_fb_gen_c_verifier@@Base+0x1558>
   21a70:	add	r3, pc, r3
   21a74:	add	r3, r3, #16
   21a78:	add	r1, pc, r1
   21a7c:	add	r0, pc, r0
   21a80:	bl	1400c <__assert_fail@plt>
   21a84:	ldr	r3, [pc, #160]	; 21b2c <__flatcc_fb_gen_c_verifier@@Base+0x155c>
   21a88:	movw	r2, #975	; 0x3cf
   21a8c:	ldr	r1, [pc, #156]	; 21b30 <__flatcc_fb_gen_c_verifier@@Base+0x1560>
   21a90:	ldr	r0, [pc, #156]	; 21b34 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   21a94:	add	r3, pc, r3
   21a98:	add	r3, r3, #16
   21a9c:	add	r1, pc, r1
   21aa0:	add	r0, pc, r0
   21aa4:	bl	1400c <__assert_fail@plt>
   21aa8:	andeq	r9, r2, r8, asr #5
   21aac:	andeq	r1, r3, r8, ror #31
   21ab0:	andeq	r1, r3, r0, ror #31
   21ab4:	andeq	r1, r3, ip, lsr #31
   21ab8:	andeq	r1, r3, r4, lsr #31
   21abc:	andeq	r1, r3, ip, ror pc
   21ac0:	andeq	r1, r3, r8, ror #25
   21ac4:	andeq	r1, r3, r0, asr #25
   21ac8:	muleq	r3, r0, ip
   21acc:	andeq	r1, r3, ip, asr #23
   21ad0:	andeq	r1, r3, r4, lsl #24
   21ad4:	strdeq	r1, [r3], -ip
   21ad8:	andeq	r1, r3, r4, lsl #24
   21adc:	muleq	r3, r4, sl
   21ae0:	andeq	r1, r3, r4, ror sl
   21ae4:	andeq	r1, r3, r0, lsl #21
   21ae8:	andeq	r1, r3, ip, ror sl
   21aec:	andeq	r1, r3, r4, ror #20
   21af0:	andeq	r1, r3, ip, lsl #19
   21af4:	andeq	r8, r2, ip, asr #25
   21af8:	ldrdeq	r1, [r3], -r8
   21afc:	andeq	r1, r3, r0, lsr #16
   21b00:	andeq	r1, r3, r8, lsl #17
   21b04:			; <UNDEFINED> instruction: 0x000315b4
   21b08:	strdeq	r1, [r3], -ip
   21b0c:	andeq	r1, r3, r4, ror #16
   21b10:	andeq	r8, r2, ip, asr #24
   21b14:	andeq	r1, r3, r4, asr #10
   21b18:	andeq	r1, r3, ip, lsl #15
   21b1c:	strdeq	r1, [r3], -r4
   21b20:	andeq	r1, r3, r0, lsr #10
   21b24:	andeq	r1, r3, r8, ror #14
   21b28:	ldrdeq	r1, [r3], -r0
   21b2c:	strdeq	r1, [r3], -ip
   21b30:	andeq	r1, r3, r4, asr #14
   21b34:	andeq	r1, r3, ip, lsr #15
   21b38:	strd	r4, [sp, #-12]!
   21b3c:	mov	r5, r0
   21b40:	mov	r0, r1
   21b44:	str	lr, [sp, #8]
   21b48:	sub	sp, sp, #212	; 0xd4
   21b4c:	add	r4, sp, #4
   21b50:	mov	r1, r4
   21b54:	bl	15334 <__flatcc_fb_copy_scope@@Base>
   21b58:	ldr	r1, [pc, #52]	; 21b94 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   21b5c:	mov	r3, r4
   21b60:	mov	r0, r5
   21b64:	ldr	r2, [r5, #208]	; 0xd0
   21b68:	add	r1, pc, r1
   21b6c:	ldr	r2, [r2, #160]	; 0xa0
   21b70:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21b74:	ldr	r1, [pc, #28]	; 21b98 <__flatcc_fb_gen_c_verifier@@Base+0x15c8>
   21b78:	mov	r0, r5
   21b7c:	add	r1, pc, r1
   21b80:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21b84:	add	sp, sp, #212	; 0xd4
   21b88:	ldrd	r4, [sp]
   21b8c:	add	sp, sp, #8
   21b90:	pop	{pc}		; (ldr pc, [sp], #4)
   21b94:			; <UNDEFINED> instruction: 0x000318b0
   21b98:	andeq	r1, r3, r8, lsl #18
   21b9c:	ldr	r3, [pc, #1432]	; 2213c <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   21ba0:	mov	r2, #220	; 0xdc
   21ba4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21ba8:	mov	r5, r0
   21bac:	strd	r6, [sp, #8]
   21bb0:	mov	r6, r1
   21bb4:	mov	r1, #0
   21bb8:	strd	r8, [sp, #16]
   21bbc:	strd	sl, [sp, #24]
   21bc0:	str	lr, [sp, #32]
   21bc4:	sub	sp, sp, #460	; 0x1cc
   21bc8:	add	r3, pc, r3
   21bcc:	add	r4, sp, #16
   21bd0:	add	r7, sp, #236	; 0xec
   21bd4:	mov	r0, r4
   21bd8:	str	r3, [sp, #12]
   21bdc:	bl	13f70 <memset@plt>
   21be0:	mov	r2, #220	; 0xdc
   21be4:	mov	r1, #0
   21be8:	mov	r0, r7
   21bec:	bl	13f70 <memset@plt>
   21bf0:	mov	r2, r4
   21bf4:	mov	r1, r6
   21bf8:	ldr	r0, [r6, #12]
   21bfc:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   21c00:	ldr	r1, [pc, #1336]	; 22140 <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   21c04:	mov	r2, r4
   21c08:	mov	r0, r5
   21c0c:	add	r1, pc, r1
   21c10:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c14:	ldr	r1, [pc, #1320]	; 22144 <__flatcc_fb_gen_c_verifier@@Base+0x1b74>
   21c18:	mov	r0, r5
   21c1c:	add	r1, pc, r1
   21c20:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c24:	ldr	r3, [r5, #220]	; 0xdc
   21c28:	mov	r0, r5
   21c2c:	ldr	r1, [pc, #1300]	; 22148 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   21c30:	add	r3, r3, #1
   21c34:	add	r1, pc, r1
   21c38:	str	r3, [r5, #220]	; 0xdc
   21c3c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c40:	ldr	r1, [pc, #1284]	; 2214c <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   21c44:	mov	r0, r5
   21c48:	add	r1, pc, r1
   21c4c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c50:	ldr	r1, [pc, #1272]	; 22150 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   21c54:	mov	r0, r5
   21c58:	add	r1, pc, r1
   21c5c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c60:	ldr	r1, [pc, #1260]	; 22154 <__flatcc_fb_gen_c_verifier@@Base+0x1b84>
   21c64:	mov	r0, r5
   21c68:	add	r1, pc, r1
   21c6c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c70:	ldr	r3, [r5, #220]	; 0xdc
   21c74:	mov	r0, r5
   21c78:	ldr	r1, [pc, #1240]	; 22158 <__flatcc_fb_gen_c_verifier@@Base+0x1b88>
   21c7c:	add	r3, r3, #1
   21c80:	add	r1, pc, r1
   21c84:	str	r3, [r5, #220]	; 0xdc
   21c88:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c8c:	ldr	r3, [r5, #220]	; 0xdc
   21c90:	cmp	r3, #0
   21c94:	beq	220d0 <__flatcc_fb_gen_c_verifier@@Base+0x1b00>
   21c98:	ldr	r4, [r6, #20]
   21c9c:	sub	r3, r3, #1
   21ca0:	str	r3, [r5, #220]	; 0xdc
   21ca4:	cmp	r4, #0
   21ca8:	beq	21e5c <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   21cac:	ldr	sl, [pc, #1192]	; 2215c <__flatcc_fb_gen_c_verifier@@Base+0x1b8c>
   21cb0:	ldr	r9, [pc, #1192]	; 22160 <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   21cb4:	ldr	r8, [pc, #1192]	; 22164 <__flatcc_fb_gen_c_verifier@@Base+0x1b94>
   21cb8:	add	sl, pc, sl
   21cbc:	add	r9, pc, r9
   21cc0:	add	r8, pc, r8
   21cc4:	b	21d54 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   21cc8:	ldr	r1, [r4, #16]
   21ccc:	mov	r2, r7
   21cd0:	ldr	r0, [r1, #12]
   21cd4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   21cd8:	ldr	r1, [pc, #1160]	; 22168 <__flatcc_fb_gen_c_verifier@@Base+0x1b98>
   21cdc:	mov	r3, fp
   21ce0:	mov	r0, r5
   21ce4:	ldr	r2, [r4, #48]	; 0x30
   21ce8:	str	r6, [sp]
   21cec:	add	r1, pc, r1
   21cf0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21cf4:	ldr	r2, [r4, #16]
   21cf8:	ldr	r3, [r5, #220]	; 0xdc
   21cfc:	ldrh	r2, [r2, #8]
   21d00:	add	r3, r3, #1
   21d04:	str	r3, [r5, #220]	; 0xdc
   21d08:	cmp	r2, #0
   21d0c:	bne	21e3c <__flatcc_fb_gen_c_verifier@@Base+0x186c>
   21d10:	ldr	r1, [pc, #1108]	; 2216c <__flatcc_fb_gen_c_verifier@@Base+0x1b9c>
   21d14:	mov	r2, r7
   21d18:	mov	r0, r5
   21d1c:	add	r1, pc, r1
   21d20:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21d24:	ldr	r1, [pc, #1092]	; 22170 <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
   21d28:	mov	r0, r5
   21d2c:	add	r1, pc, r1
   21d30:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21d34:	ldr	r3, [r5, #220]	; 0xdc
   21d38:	cmp	r3, #0
   21d3c:	beq	22040 <__flatcc_fb_gen_c_verifier@@Base+0x1a70>
   21d40:	sub	r3, r3, #1
   21d44:	str	r3, [r5, #220]	; 0xdc
   21d48:	ldr	r4, [r4]
   21d4c:	cmp	r4, #0
   21d50:	beq	21e5c <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   21d54:	ldrh	r2, [r4, #24]
   21d58:	ldr	r3, [r4, #4]
   21d5c:	cmp	r2, #10
   21d60:	ldm	r3, {r6, fp}
   21d64:	beq	21dd0 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21d68:	cmp	r2, #14
   21d6c:	beq	21cc8 <__flatcc_fb_gen_c_verifier@@Base+0x16f8>
   21d70:	cmp	r2, #0
   21d74:	beq	21d48 <__flatcc_fb_gen_c_verifier@@Base+0x1778>
   21d78:	ldr	r2, [pc, #1012]	; 22174 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   21d7c:	movw	r3, #1535	; 0x5ff
   21d80:	ldr	r1, [sp, #12]
   21d84:	ldr	r0, [pc, #1004]	; 22178 <__flatcc_fb_gen_c_verifier@@Base+0x1ba8>
   21d88:	ldr	r4, [pc, #1004]	; 2217c <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   21d8c:	ldr	ip, [r1, r2]
   21d90:	add	r0, pc, r0
   21d94:	ldr	r1, [pc, #996]	; 22180 <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   21d98:	add	r4, pc, r4
   21d9c:	str	r0, [sp]
   21da0:	mov	r2, r4
   21da4:	ldr	r0, [ip]
   21da8:	add	r1, pc, r1
   21dac:	bl	13f58 <fprintf@plt>
   21db0:	ldr	r3, [pc, #972]	; 22184 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   21db4:	mov	r1, r4
   21db8:	movw	r2, #1535	; 0x5ff
   21dbc:	ldr	r0, [pc, #964]	; 22188 <__flatcc_fb_gen_c_verifier@@Base+0x1bb8>
   21dc0:	add	r3, pc, r3
   21dc4:	add	r3, r3, #28
   21dc8:	add	r0, pc, r0
   21dcc:	bl	1400c <__assert_fail@plt>
   21dd0:	mov	r3, fp
   21dd4:	mov	r1, sl
   21dd8:	ldr	r2, [r4, #48]	; 0x30
   21ddc:	mov	r0, r5
   21de0:	str	r6, [sp]
   21de4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21de8:	ldr	r3, [r5, #220]	; 0xdc
   21dec:	mov	r1, r9
   21df0:	mov	r0, r5
   21df4:	add	r3, r3, #1
   21df8:	str	r3, [r5, #220]	; 0xdc
   21dfc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21e00:	mov	r1, r8
   21e04:	mov	r0, r5
   21e08:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21e0c:	ldr	r3, [r5, #220]	; 0xdc
   21e10:	cmp	r3, #0
   21e14:	bne	21d40 <__flatcc_fb_gen_c_verifier@@Base+0x1770>
   21e18:	ldr	r3, [pc, #876]	; 2218c <__flatcc_fb_gen_c_verifier@@Base+0x1bbc>
   21e1c:	movw	r2, #1532	; 0x5fc
   21e20:	ldr	r1, [pc, #872]	; 22190 <__flatcc_fb_gen_c_verifier@@Base+0x1bc0>
   21e24:	ldr	r0, [pc, #872]	; 22194 <__flatcc_fb_gen_c_verifier@@Base+0x1bc4>
   21e28:	add	r3, pc, r3
   21e2c:	add	r3, r3, #28
   21e30:	add	r1, pc, r1
   21e34:	add	r0, pc, r0
   21e38:	bl	1400c <__assert_fail@plt>
   21e3c:	cmp	r2, #1
   21e40:	bne	21fe8 <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   21e44:	ldr	r1, [pc, #844]	; 22198 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   21e48:	mov	r2, r7
   21e4c:	mov	r0, r5
   21e50:	add	r1, pc, r1
   21e54:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21e58:	b	21d24 <__flatcc_fb_gen_c_verifier@@Base+0x1754>
   21e5c:	ldr	r1, [pc, #824]	; 2219c <__flatcc_fb_gen_c_verifier@@Base+0x1bcc>
   21e60:	mov	r0, r5
   21e64:	add	r1, pc, r1
   21e68:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21e6c:	ldr	r3, [r5, #220]	; 0xdc
   21e70:	mov	r0, r5
   21e74:	ldr	r1, [pc, #804]	; 221a0 <__flatcc_fb_gen_c_verifier@@Base+0x1bd0>
   21e78:	add	r3, r3, #1
   21e7c:	add	r1, pc, r1
   21e80:	str	r3, [r5, #220]	; 0xdc
   21e84:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21e88:	ldr	r3, [r5, #220]	; 0xdc
   21e8c:	mov	r0, r5
   21e90:	ldr	r1, [pc, #780]	; 221a4 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   21e94:	add	r3, r3, #1
   21e98:	add	r1, pc, r1
   21e9c:	str	r3, [r5, #220]	; 0xdc
   21ea0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21ea4:	ldr	r3, [r5, #220]	; 0xdc
   21ea8:	cmp	r3, #0
   21eac:	beq	220ac <__flatcc_fb_gen_c_verifier@@Base+0x1adc>
   21eb0:	ldr	r1, [pc, #752]	; 221a8 <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   21eb4:	sub	r3, r3, #1
   21eb8:	mov	r0, r5
   21ebc:	str	r3, [r5, #220]	; 0xdc
   21ec0:	add	r1, pc, r1
   21ec4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21ec8:	ldr	r3, [r5, #220]	; 0xdc
   21ecc:	mov	r0, r5
   21ed0:	ldr	r1, [pc, #724]	; 221ac <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   21ed4:	add	r3, r3, #1
   21ed8:	add	r1, pc, r1
   21edc:	str	r3, [r5, #220]	; 0xdc
   21ee0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21ee4:	ldr	r3, [r5, #220]	; 0xdc
   21ee8:	cmp	r3, #0
   21eec:	beq	22088 <__flatcc_fb_gen_c_verifier@@Base+0x1ab8>
   21ef0:	ldr	r4, [pc, #696]	; 221b0 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   21ef4:	sub	r3, r3, #1
   21ef8:	mov	r0, r5
   21efc:	str	r3, [r5, #220]	; 0xdc
   21f00:	add	r4, pc, r4
   21f04:	mov	r1, r4
   21f08:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f0c:	ldr	r3, [r5, #220]	; 0xdc
   21f10:	cmp	r3, #0
   21f14:	beq	22064 <__flatcc_fb_gen_c_verifier@@Base+0x1a94>
   21f18:	sub	r3, r3, #1
   21f1c:	mov	r1, r4
   21f20:	mov	r0, r5
   21f24:	str	r3, [r5, #220]	; 0xdc
   21f28:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f2c:	ldr	r1, [pc, #640]	; 221b4 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   21f30:	mov	r0, r5
   21f34:	add	r1, pc, r1
   21f38:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f3c:	ldr	r1, [pc, #628]	; 221b8 <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   21f40:	mov	r0, r5
   21f44:	add	r1, pc, r1
   21f48:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f4c:	ldr	r3, [r5, #220]	; 0xdc
   21f50:	mov	r0, r5
   21f54:	ldr	r1, [pc, #608]	; 221bc <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   21f58:	add	r3, r3, #1
   21f5c:	add	r1, pc, r1
   21f60:	str	r3, [r5, #220]	; 0xdc
   21f64:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f68:	ldr	r3, [r5, #220]	; 0xdc
   21f6c:	cmp	r3, #0
   21f70:	beq	22118 <__flatcc_fb_gen_c_verifier@@Base+0x1b48>
   21f74:	sub	r3, r3, #1
   21f78:	mov	r1, r4
   21f7c:	mov	r0, r5
   21f80:	str	r3, [r5, #220]	; 0xdc
   21f84:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f88:	ldr	r1, [pc, #560]	; 221c0 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   21f8c:	mov	r0, r5
   21f90:	add	r1, pc, r1
   21f94:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21f98:	ldr	r3, [r5, #220]	; 0xdc
   21f9c:	cmp	r3, #0
   21fa0:	beq	220f4 <__flatcc_fb_gen_c_verifier@@Base+0x1b24>
   21fa4:	sub	r3, r3, #1
   21fa8:	mov	r1, r4
   21fac:	mov	r0, r5
   21fb0:	str	r3, [r5, #220]	; 0xdc
   21fb4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21fb8:	ldr	r1, [pc, #516]	; 221c4 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   21fbc:	mov	r0, r5
   21fc0:	add	r1, pc, r1
   21fc4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21fc8:	mov	r0, #0
   21fcc:	add	sp, sp, #460	; 0x1cc
   21fd0:	ldrd	r4, [sp]
   21fd4:	ldrd	r6, [sp, #8]
   21fd8:	ldrd	r8, [sp, #16]
   21fdc:	ldrd	sl, [sp, #24]
   21fe0:	add	sp, sp, #32
   21fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   21fe8:	ldr	r2, [pc, #388]	; 22174 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   21fec:	movw	r3, #1522	; 0x5f2
   21ff0:	ldr	r1, [sp, #12]
   21ff4:	ldr	r0, [pc, #460]	; 221c8 <__flatcc_fb_gen_c_verifier@@Base+0x1bf8>
   21ff8:	ldr	r4, [pc, #460]	; 221cc <__flatcc_fb_gen_c_verifier@@Base+0x1bfc>
   21ffc:	ldr	ip, [r1, r2]
   22000:	add	r0, pc, r0
   22004:	ldr	r1, [pc, #452]	; 221d0 <__flatcc_fb_gen_c_verifier@@Base+0x1c00>
   22008:	add	r4, pc, r4
   2200c:	str	r0, [sp]
   22010:	mov	r2, r4
   22014:	ldr	r0, [ip]
   22018:	add	r1, pc, r1
   2201c:	bl	13f58 <fprintf@plt>
   22020:	ldr	r3, [pc, #428]	; 221d4 <__flatcc_fb_gen_c_verifier@@Base+0x1c04>
   22024:	mov	r1, r4
   22028:	movw	r2, #1522	; 0x5f2
   2202c:	ldr	r0, [pc, #420]	; 221d8 <__flatcc_fb_gen_c_verifier@@Base+0x1c08>
   22030:	add	r3, pc, r3
   22034:	add	r3, r3, #28
   22038:	add	r0, pc, r0
   2203c:	bl	1400c <__assert_fail@plt>
   22040:	ldr	r3, [pc, #404]	; 221dc <__flatcc_fb_gen_c_verifier@@Base+0x1c0c>
   22044:	movw	r2, #1526	; 0x5f6
   22048:	ldr	r1, [pc, #400]	; 221e0 <__flatcc_fb_gen_c_verifier@@Base+0x1c10>
   2204c:	ldr	r0, [pc, #400]	; 221e4 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
   22050:	add	r3, pc, r3
   22054:	add	r3, r3, #28
   22058:	add	r1, pc, r1
   2205c:	add	r0, pc, r0
   22060:	bl	1400c <__assert_fail@plt>
   22064:	ldr	r3, [pc, #380]	; 221e8 <__flatcc_fb_gen_c_verifier@@Base+0x1c18>
   22068:	movw	r2, #1546	; 0x60a
   2206c:	ldr	r1, [pc, #376]	; 221ec <__flatcc_fb_gen_c_verifier@@Base+0x1c1c>
   22070:	ldr	r0, [pc, #376]	; 221f0 <__flatcc_fb_gen_c_verifier@@Base+0x1c20>
   22074:	add	r3, pc, r3
   22078:	add	r3, r3, #28
   2207c:	add	r1, pc, r1
   22080:	add	r0, pc, r0
   22084:	bl	1400c <__assert_fail@plt>
   22088:	ldr	r3, [pc, #356]	; 221f4 <__flatcc_fb_gen_c_verifier@@Base+0x1c24>
   2208c:	movw	r2, #1545	; 0x609
   22090:	ldr	r1, [pc, #352]	; 221f8 <__flatcc_fb_gen_c_verifier@@Base+0x1c28>
   22094:	ldr	r0, [pc, #352]	; 221fc <__flatcc_fb_gen_c_verifier@@Base+0x1c2c>
   22098:	add	r3, pc, r3
   2209c:	add	r3, r3, #28
   220a0:	add	r1, pc, r1
   220a4:	add	r0, pc, r0
   220a8:	bl	1400c <__assert_fail@plt>
   220ac:	ldr	r3, [pc, #332]	; 22200 <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   220b0:	movw	r2, #1543	; 0x607
   220b4:	ldr	r1, [pc, #328]	; 22204 <__flatcc_fb_gen_c_verifier@@Base+0x1c34>
   220b8:	ldr	r0, [pc, #328]	; 22208 <__flatcc_fb_gen_c_verifier@@Base+0x1c38>
   220bc:	add	r3, pc, r3
   220c0:	add	r3, r3, #28
   220c4:	add	r1, pc, r1
   220c8:	add	r0, pc, r0
   220cc:	bl	1400c <__assert_fail@plt>
   220d0:	ldr	r3, [pc, #308]	; 2220c <__flatcc_fb_gen_c_verifier@@Base+0x1c3c>
   220d4:	movw	r2, #1503	; 0x5df
   220d8:	ldr	r1, [pc, #304]	; 22210 <__flatcc_fb_gen_c_verifier@@Base+0x1c40>
   220dc:	ldr	r0, [pc, #304]	; 22214 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   220e0:	add	r3, pc, r3
   220e4:	add	r3, r3, #28
   220e8:	add	r1, pc, r1
   220ec:	add	r0, pc, r0
   220f0:	bl	1400c <__assert_fail@plt>
   220f4:	ldr	r3, [pc, #284]	; 22218 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   220f8:	mov	r2, #1552	; 0x610
   220fc:	ldr	r1, [pc, #280]	; 2221c <__flatcc_fb_gen_c_verifier@@Base+0x1c4c>
   22100:	ldr	r0, [pc, #280]	; 22220 <__flatcc_fb_gen_c_verifier@@Base+0x1c50>
   22104:	add	r3, pc, r3
   22108:	add	r3, r3, #28
   2210c:	add	r1, pc, r1
   22110:	add	r0, pc, r0
   22114:	bl	1400c <__assert_fail@plt>
   22118:	ldr	r3, [pc, #260]	; 22224 <__flatcc_fb_gen_c_verifier@@Base+0x1c54>
   2211c:	movw	r2, #1550	; 0x60e
   22120:	ldr	r1, [pc, #256]	; 22228 <__flatcc_fb_gen_c_verifier@@Base+0x1c58>
   22124:	ldr	r0, [pc, #256]	; 2222c <__flatcc_fb_gen_c_verifier@@Base+0x1c5c>
   22128:	add	r3, pc, r3
   2212c:	add	r3, r3, #28
   22130:	add	r1, pc, r1
   22134:	add	r0, pc, r0
   22138:	bl	1400c <__assert_fail@plt>
   2213c:	andeq	r9, r4, r0, lsr r4
   22140:	andeq	r1, r3, ip, lsr #17
   22144:	andeq	r4, r3, r0, lsr r2
   22148:	andeq	r8, r2, ip, lsr #20
   2214c:	andeq	r1, r3, r0, lsl #18
   22150:	andeq	r1, r3, r0, lsl #18
   22154:	andeq	r1, r3, r0, lsl #18
   22158:	strdeq	r1, [r3], -ip
   2215c:	strdeq	r1, [r3], -r4
   22160:	andeq	r1, r3, ip, lsr #19
   22164:	andeq	r1, r3, r0, lsr #19
   22168:	andeq	r1, r3, r0, asr #17
   2216c:	andeq	r1, r3, r4, lsr #17
   22170:	andeq	r1, r3, r4, lsr r9
   22174:	muleq	r0, ip, r0
   22178:	andeq	r1, r3, r8, lsl r9
   2217c:	andeq	r1, r3, r8, asr #8
   22180:	andeq	lr, r1, r0, lsl fp
   22184:	ldrdeq	r1, [r3], -r0
   22188:	andeq	r7, r2, r4, lsl r0
   2218c:	andeq	r1, r3, r8, ror #2
   22190:			; <UNDEFINED> instruction: 0x000313b0
   22194:	andeq	r1, r3, r8, lsl r4
   22198:	andeq	r1, r3, r4, lsr #15
   2219c:	andeq	r1, r3, r4, ror r8
   221a0:	andeq	r1, r3, r8, ror #16
   221a4:	andeq	r1, r3, r8, lsl #17
   221a8:			; <UNDEFINED> instruction: 0x000318bc
   221ac:			; <UNDEFINED> instruction: 0x000318b0
   221b0:	andeq	r1, r3, r8, asr r3
   221b4:	andeq	r1, r3, ip, lsl #17
   221b8:	muleq	r3, r8, r8
   221bc:	muleq	r3, r0, r8
   221c0:	andeq	r1, r3, r0, asr #16
   221c4:	andeq	r8, r2, r0, lsr #13
   221c8:	andeq	r1, r3, r8, lsr #12
   221cc:	ldrdeq	r1, [r3], -r8
   221d0:	andeq	lr, r1, r0, lsr #17
   221d4:	andeq	r0, r3, r0, ror #30
   221d8:	andeq	r6, r2, r4, lsr #27
   221dc:	andeq	r0, r3, r0, asr #30
   221e0:	andeq	r1, r3, r8, lsl #3
   221e4:	strdeq	r1, [r3], -r0
   221e8:	andeq	r0, r3, ip, lsl pc
   221ec:	andeq	r1, r3, r4, ror #2
   221f0:	andeq	r1, r3, ip, asr #3
   221f4:	strdeq	r0, [r3], -r8
   221f8:	andeq	r1, r3, r0, asr #2
   221fc:	andeq	r1, r3, r8, lsr #3
   22200:	ldrdeq	r0, [r3], -r4
   22204:	andeq	r1, r3, ip, lsl r1
   22208:	andeq	r1, r3, r4, lsl #3
   2220c:			; <UNDEFINED> instruction: 0x00030eb0
   22210:	strdeq	r1, [r3], -r8
   22214:	andeq	r1, r3, r0, ror #2
   22218:	andeq	r0, r3, ip, lsl #29
   2221c:	ldrdeq	r1, [r3], -r4
   22220:	andeq	r1, r3, ip, lsr r1
   22224:	andeq	r0, r3, r8, ror #28
   22228:	strheq	r1, [r3], -r0
   2222c:	andeq	r1, r3, r8, lsl r1
   22230:	strd	r4, [sp, #-20]!	; 0xffffffec
   22234:	mov	r2, #220	; 0xdc
   22238:	mov	r5, r0
   2223c:	strd	r6, [sp, #8]
   22240:	mov	r6, r1
   22244:	mov	r1, #0
   22248:	str	lr, [sp, #16]
   2224c:	sub	sp, sp, #452	; 0x1c4
   22250:	add	r4, sp, #8
   22254:	mov	r0, r4
   22258:	bl	13f70 <memset@plt>
   2225c:	mov	r2, #220	; 0xdc
   22260:	mov	r1, #0
   22264:	add	r0, sp, #228	; 0xe4
   22268:	bl	13f70 <memset@plt>
   2226c:	mov	r2, r4
   22270:	mov	r1, r6
   22274:	ldr	r0, [r6, #12]
   22278:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2227c:	ldr	r1, [pc, #372]	; 223f8 <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   22280:	mov	r2, r4
   22284:	mov	r0, r5
   22288:	add	r1, pc, r1
   2228c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22290:	ldr	r1, [pc, #356]	; 223fc <__flatcc_fb_gen_c_verifier@@Base+0x1e2c>
   22294:	mov	r0, r5
   22298:	add	r1, pc, r1
   2229c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   222a0:	ldr	r3, [r5, #220]	; 0xdc
   222a4:	mov	r0, r5
   222a8:	ldr	r1, [pc, #336]	; 22400 <__flatcc_fb_gen_c_verifier@@Base+0x1e30>
   222ac:	add	r3, r3, #1
   222b0:	add	r1, pc, r1
   222b4:	str	r3, [r5, #220]	; 0xdc
   222b8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   222bc:	ldr	r4, [r6, #20]
   222c0:	cmp	r4, #0
   222c4:	beq	2232c <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   222c8:	ldr	r6, [pc, #308]	; 22404 <__flatcc_fb_gen_c_verifier@@Base+0x1e34>
   222cc:	ldr	r7, [pc, #308]	; 22408 <__flatcc_fb_gen_c_verifier@@Base+0x1e38>
   222d0:	add	r6, pc, r6
   222d4:	add	r7, pc, r7
   222d8:	b	22308 <__flatcc_fb_gen_c_verifier@@Base+0x1d38>
   222dc:	ldr	r3, [r4, #4]
   222e0:	mov	r1, r6
   222e4:	mov	r0, r5
   222e8:	ldr	r2, [r4, #48]	; 0x30
   222ec:	ldr	ip, [r3]
   222f0:	ldr	r3, [r3, #4]
   222f4:	str	ip, [sp]
   222f8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   222fc:	ldr	r4, [r4]
   22300:	cmp	r4, #0
   22304:	beq	2232c <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   22308:	ldrh	r3, [r4, #24]
   2230c:	cmp	r3, #0
   22310:	bne	222dc <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   22314:	mov	r1, r7
   22318:	mov	r0, r5
   2231c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22320:	ldr	r4, [r4]
   22324:	cmp	r4, #0
   22328:	bne	22308 <__flatcc_fb_gen_c_verifier@@Base+0x1d38>
   2232c:	ldr	r1, [pc, #216]	; 2240c <__flatcc_fb_gen_c_verifier@@Base+0x1e3c>
   22330:	mov	r0, r5
   22334:	add	r1, pc, r1
   22338:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2233c:	ldr	r3, [r5, #220]	; 0xdc
   22340:	add	r2, r3, #1
   22344:	cmp	r2, #0
   22348:	str	r2, [r5, #220]	; 0xdc
   2234c:	beq	223b0 <__flatcc_fb_gen_c_verifier@@Base+0x1de0>
   22350:	ldr	r4, [pc, #184]	; 22410 <__flatcc_fb_gen_c_verifier@@Base+0x1e40>
   22354:	mov	r0, r5
   22358:	str	r3, [r5, #220]	; 0xdc
   2235c:	add	r4, pc, r4
   22360:	mov	r1, r4
   22364:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22368:	ldr	r3, [r5, #220]	; 0xdc
   2236c:	cmp	r3, #0
   22370:	beq	223d4 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   22374:	sub	r3, r3, #1
   22378:	mov	r1, r4
   2237c:	mov	r0, r5
   22380:	str	r3, [r5, #220]	; 0xdc
   22384:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22388:	ldr	r1, [pc, #132]	; 22414 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   2238c:	mov	r0, r5
   22390:	add	r1, pc, r1
   22394:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22398:	mov	r0, #0
   2239c:	add	sp, sp, #452	; 0x1c4
   223a0:	ldrd	r4, [sp]
   223a4:	ldrd	r6, [sp, #8]
   223a8:	add	sp, sp, #16
   223ac:	pop	{pc}		; (ldr pc, [sp], #4)
   223b0:	ldr	r3, [pc, #96]	; 22418 <__flatcc_fb_gen_c_verifier@@Base+0x1e48>
   223b4:	movw	r2, #1582	; 0x62e
   223b8:	ldr	r1, [pc, #92]	; 2241c <__flatcc_fb_gen_c_verifier@@Base+0x1e4c>
   223bc:	ldr	r0, [pc, #92]	; 22420 <__flatcc_fb_gen_c_verifier@@Base+0x1e50>
   223c0:	add	r3, pc, r3
   223c4:	add	r3, r3, #48	; 0x30
   223c8:	add	r1, pc, r1
   223cc:	add	r0, pc, r0
   223d0:	bl	1400c <__assert_fail@plt>
   223d4:	ldr	r3, [pc, #72]	; 22424 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   223d8:	movw	r2, #1583	; 0x62f
   223dc:	ldr	r1, [pc, #68]	; 22428 <__flatcc_fb_gen_c_verifier@@Base+0x1e58>
   223e0:	ldr	r0, [pc, #68]	; 2242c <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   223e4:	add	r3, pc, r3
   223e8:	add	r3, r3, #48	; 0x30
   223ec:	add	r1, pc, r1
   223f0:	add	r0, pc, r0
   223f4:	bl	1400c <__assert_fail@plt>
   223f8:			; <UNDEFINED> instruction: 0x000315bc
   223fc:			; <UNDEFINED> instruction: 0x00033bb4
   22400:	andeq	r1, r3, r8, lsr #5
   22404:	andeq	r1, r3, r8, asr #11
   22408:	andeq	r1, r3, r4, lsr #11
   2240c:	andeq	r1, r3, r4, lsl #11
   22410:	strdeq	r0, [r3], -ip
   22414:	ldrdeq	r8, [r2], -r0
   22418:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   2241c:	andeq	r0, r3, r8, lsl lr
   22420:	andeq	r0, r3, r0, lsl #29
   22424:	andeq	r0, r3, ip, lsr #23
   22428:	strdeq	r0, [r3], -r4
   2242c:	andeq	r0, r3, ip, asr lr
   22430:	add	r3, r1, #4
   22434:	ldr	r1, [pc, #12]	; 22448 <__flatcc_fb_gen_c_verifier@@Base+0x1e78>
   22438:	mov	r2, r0
   2243c:	mov	r0, r3
   22440:	add	r1, pc, r1
   22444:	b	2b9dc <fb_symbol_table_visit@@Base>
   22448:	andeq	r1, r0, ip, lsr fp
   2244c:	add	r3, r1, #4
   22450:	ldr	r1, [pc, #12]	; 22464 <__flatcc_fb_gen_c_verifier@@Base+0x1e94>
   22454:	mov	r2, r0
   22458:	mov	r0, r3
   2245c:	add	r1, pc, r1
   22460:	b	2b9dc <fb_symbol_table_visit@@Base>
   22464:	andeq	r2, r0, ip, lsl #5
   22468:	ldr	r3, [pc, #76]	; 224bc <__flatcc_fb_gen_c_verifier@@Base+0x1eec>
   2246c:	mov	r2, #8
   22470:	strd	r4, [sp, #-16]!
   22474:	mov	r4, r1
   22478:	mov	r5, r0
   2247c:	str	r6, [sp, #8]
   22480:	str	lr, [sp, #12]
   22484:	add	r3, pc, r3
   22488:	bl	13fdc <qsort@plt>
   2248c:	cmp	r4, #0
   22490:	ble	224ac <__flatcc_fb_gen_c_verifier@@Base+0x1edc>
   22494:	mov	r3, #0
   22498:	ldr	r2, [r5, r3, lsl #3]
   2249c:	str	r3, [r2, #124]	; 0x7c
   224a0:	add	r3, r3, #1
   224a4:	cmp	r4, r3
   224a8:	bne	22498 <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   224ac:	ldrd	r4, [sp]
   224b0:	ldr	r6, [sp, #8]
   224b4:	add	sp, sp, #12
   224b8:	pop	{pc}		; (ldr pc, [sp], #4)
   224bc:	andeq	r0, r0, r0, ror #9
   224c0:	strd	r4, [sp, #-16]!
   224c4:	ldm	r0, {r0, r5}
   224c8:	ldm	r1, {r1, r4}
   224cc:	str	r6, [sp, #8]
   224d0:	str	lr, [sp, #12]
   224d4:	cmp	r5, r4
   224d8:	movlt	r2, r5
   224dc:	movge	r2, r4
   224e0:	bl	13ec8 <memcmp@plt>
   224e4:	cmp	r0, #0
   224e8:	ldr	r6, [sp, #8]
   224ec:	subeq	r0, r5, r4
   224f0:	ldrd	r4, [sp]
   224f4:	add	sp, sp, #12
   224f8:	pop	{pc}		; (ldr pc, [sp], #4)
   224fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22500:	mov	r5, #0
   22504:	mov	r3, r1
   22508:	strd	r6, [sp, #8]
   2250c:	mov	r4, r0
   22510:	mov	r0, r1
   22514:	strd	r8, [sp, #16]
   22518:	add	r9, r3, #4
   2251c:	strd	sl, [sp, #24]
   22520:	str	lr, [sp, #32]
   22524:	sub	sp, sp, #260	; 0x104
   22528:	add	r6, sp, #24
   2252c:	add	r8, sp, #52	; 0x34
   22530:	ldr	sl, [pc, #816]	; 22868 <__flatcc_fb_gen_c_verifier@@Base+0x2298>
   22534:	mov	r1, r8
   22538:	str	r5, [sp, #24]
   2253c:	add	r7, sp, #12
   22540:	str	r5, [r6, #4]
   22544:	str	r5, [r6, #8]
   22548:	str	r5, [r6, #12]
   2254c:	str	r5, [r6, #16]
   22550:	add	sl, pc, sl
   22554:	str	r5, [r6, #20]
   22558:	str	r5, [r6, #24]
   2255c:	bl	15334 <__flatcc_fb_copy_scope@@Base>
   22560:	ldr	r1, [pc, #772]	; 2286c <__flatcc_fb_gen_c_verifier@@Base+0x229c>
   22564:	mov	r0, r9
   22568:	mov	r2, r7
   2256c:	str	r5, [sp, #12]
   22570:	ldr	r3, [r4, #208]	; 0xd0
   22574:	str	r5, [r7, #8]
   22578:	add	r1, pc, r1
   2257c:	str	r3, [sp, #16]
   22580:	bl	2b9dc <fb_symbol_table_visit@@Base>
   22584:	ldr	r5, [sp, #12]
   22588:	cmp	r5, #0
   2258c:	streq	r5, [sp, #24]
   22590:	beq	225d8 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   22594:	lsl	r0, r5, #4
   22598:	bl	13f10 <malloc@plt>
   2259c:	subs	fp, r0, #0
   225a0:	beq	2279c <__flatcc_fb_gen_c_verifier@@Base+0x21cc>
   225a4:	ldr	r1, [pc, #708]	; 22870 <__flatcc_fb_gen_c_verifier@@Base+0x22a0>
   225a8:	mov	r2, r7
   225ac:	mov	r0, r9
   225b0:	str	fp, [sp, #20]
   225b4:	add	r1, pc, r1
   225b8:	bl	2b9dc <fb_symbol_table_visit@@Base>
   225bc:	ldr	r3, [pc, #688]	; 22874 <__flatcc_fb_gen_c_verifier@@Base+0x22a4>
   225c0:	mov	r2, #16
   225c4:	mov	r0, fp
   225c8:	ldr	r1, [sp, #12]
   225cc:	add	r3, pc, r3
   225d0:	bl	13fdc <qsort@plt>
   225d4:	str	fp, [sp, #24]
   225d8:	ldr	r1, [pc, #664]	; 22878 <__flatcc_fb_gen_c_verifier@@Base+0x22a8>
   225dc:	mov	lr, #3
   225e0:	mov	r7, #0
   225e4:	mov	r3, r8
   225e8:	mov	r0, r4
   225ec:	ldr	ip, [pc, #648]	; 2287c <__flatcc_fb_gen_c_verifier@@Base+0x22ac>
   225f0:	str	r7, [sp, #36]	; 0x24
   225f4:	ldr	r2, [r4, #208]	; 0xd0
   225f8:	add	r1, pc, r1
   225fc:	str	r1, [sp, #28]
   22600:	add	ip, pc, ip
   22604:	ldr	r1, [pc, #628]	; 22880 <__flatcc_fb_gen_c_verifier@@Base+0x22b0>
   22608:	str	ip, [sp, #32]
   2260c:	ldr	r2, [r2, #160]	; 0xa0
   22610:	str	lr, [sp, #40]	; 0x28
   22614:	add	r1, pc, r1
   22618:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2261c:	ldr	r3, [r4, #220]	; 0xdc
   22620:	mov	r0, r4
   22624:	ldr	r1, [pc, #600]	; 22884 <__flatcc_fb_gen_c_verifier@@Base+0x22b4>
   22628:	add	r3, r3, #2
   2262c:	add	r1, pc, r1
   22630:	str	r3, [r4, #220]	; 0xdc
   22634:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22638:	ldr	r3, [r4, #220]	; 0xdc
   2263c:	cmp	r3, r7
   22640:	beq	227fc <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   22644:	cmp	r3, #1
   22648:	streq	r7, [r4, #220]	; 0xdc
   2264c:	beq	227fc <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   22650:	ldr	r1, [pc, #560]	; 22888 <__flatcc_fb_gen_c_verifier@@Base+0x22b8>
   22654:	sub	r3, r3, #2
   22658:	mov	r0, r4
   2265c:	str	r3, [r4, #220]	; 0xdc
   22660:	add	r1, pc, r1
   22664:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22668:	ldr	r3, [r4, #220]	; 0xdc
   2266c:	cmp	r5, #0
   22670:	add	r3, r3, #1
   22674:	str	r3, [r4, #220]	; 0xdc
   22678:	beq	22754 <__flatcc_fb_gen_c_verifier@@Base+0x2184>
   2267c:	ldr	r1, [pc, #520]	; 2288c <__flatcc_fb_gen_c_verifier@@Base+0x22bc>
   22680:	mov	r0, r4
   22684:	add	r1, pc, r1
   22688:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2268c:	ldr	r1, [pc, #508]	; 22890 <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
   22690:	mov	r0, r4
   22694:	add	r1, pc, r1
   22698:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2269c:	ldr	r1, [pc, #496]	; 22894 <__flatcc_fb_gen_c_verifier@@Base+0x22c4>
   226a0:	mov	r0, r4
   226a4:	add	r1, pc, r1
   226a8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226ac:	ldr	r1, [pc, #484]	; 22898 <__flatcc_fb_gen_c_verifier@@Base+0x22c8>
   226b0:	mov	r0, r4
   226b4:	add	r1, pc, r1
   226b8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226bc:	ldr	r1, [pc, #472]	; 2289c <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   226c0:	mov	r0, r4
   226c4:	add	r1, pc, r1
   226c8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226cc:	sub	r3, r5, #1
   226d0:	mov	r2, r7
   226d4:	str	r7, [sp]
   226d8:	mov	r1, r6
   226dc:	mov	r0, r4
   226e0:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   226e4:	ldr	r1, [pc, #436]	; 228a0 <__flatcc_fb_gen_c_verifier@@Base+0x22d0>
   226e8:	mov	r0, r4
   226ec:	add	r1, pc, r1
   226f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226f4:	ldr	r3, [r4, #220]	; 0xdc
   226f8:	cmp	r3, #0
   226fc:	beq	22820 <__flatcc_fb_gen_c_verifier@@Base+0x2250>
   22700:	ldr	r1, [pc, #412]	; 228a4 <__flatcc_fb_gen_c_verifier@@Base+0x22d4>
   22704:	sub	r3, r3, #1
   22708:	mov	r0, r4
   2270c:	str	r3, [r4, #220]	; 0xdc
   22710:	add	r1, pc, r1
   22714:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22718:	ldr	r1, [pc, #392]	; 228a8 <__flatcc_fb_gen_c_verifier@@Base+0x22d8>
   2271c:	mov	r0, r4
   22720:	add	r1, pc, r1
   22724:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22728:	ldr	r0, [sp, #24]
   2272c:	cmp	r0, #0
   22730:	beq	22738 <__flatcc_fb_gen_c_verifier@@Base+0x2168>
   22734:	bl	13ea4 <free@plt>
   22738:	add	sp, sp, #260	; 0x104
   2273c:	ldrd	r4, [sp]
   22740:	ldrd	r6, [sp, #8]
   22744:	ldrd	r8, [sp, #16]
   22748:	ldrd	sl, [sp, #24]
   2274c:	add	sp, sp, #32
   22750:	pop	{pc}		; (ldr pc, [sp], #4)
   22754:	ldr	r1, [pc, #336]	; 228ac <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   22758:	mov	r0, r4
   2275c:	add	r1, pc, r1
   22760:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22764:	ldr	r1, [pc, #324]	; 228b0 <__flatcc_fb_gen_c_verifier@@Base+0x22e0>
   22768:	mov	r0, r4
   2276c:	add	r1, pc, r1
   22770:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22774:	ldr	r3, [r4, #220]	; 0xdc
   22778:	cmp	r3, #0
   2277c:	beq	22844 <__flatcc_fb_gen_c_verifier@@Base+0x2274>
   22780:	ldr	r1, [pc, #300]	; 228b4 <__flatcc_fb_gen_c_verifier@@Base+0x22e4>
   22784:	sub	r3, r3, #1
   22788:	mov	r0, r4
   2278c:	str	r3, [r4, #220]	; 0xdc
   22790:	add	r1, pc, r1
   22794:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22798:	b	22718 <__flatcc_fb_gen_c_verifier@@Base+0x2148>
   2279c:	cmp	r5, #0
   227a0:	str	fp, [sp, #24]
   227a4:	ble	225d8 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   227a8:	ldr	r2, [pc, #264]	; 228b8 <__flatcc_fb_gen_c_verifier@@Base+0x22e8>
   227ac:	movw	r3, #1140	; 0x474
   227b0:	ldr	r0, [pc, #260]	; 228bc <__flatcc_fb_gen_c_verifier@@Base+0x22ec>
   227b4:	ldr	r4, [pc, #260]	; 228c0 <__flatcc_fb_gen_c_verifier@@Base+0x22f0>
   227b8:	ldr	r1, [pc, #260]	; 228c4 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   227bc:	add	r0, pc, r0
   227c0:	ldr	ip, [sl, r2]
   227c4:	add	r4, pc, r4
   227c8:	str	r0, [sp]
   227cc:	mov	r2, r4
   227d0:	add	r1, pc, r1
   227d4:	ldr	r0, [ip]
   227d8:	bl	13f58 <fprintf@plt>
   227dc:	ldr	r3, [pc, #228]	; 228c8 <__flatcc_fb_gen_c_verifier@@Base+0x22f8>
   227e0:	mov	r1, r4
   227e4:	movw	r2, #1140	; 0x474
   227e8:	ldr	r0, [pc, #220]	; 228cc <__flatcc_fb_gen_c_verifier@@Base+0x22fc>
   227ec:	add	r3, pc, r3
   227f0:	add	r3, r3, #72	; 0x48
   227f4:	add	r0, pc, r0
   227f8:	bl	1400c <__assert_fail@plt>
   227fc:	ldr	r3, [pc, #204]	; 228d0 <__flatcc_fb_gen_c_verifier@@Base+0x2300>
   22800:	mov	r2, #1152	; 0x480
   22804:	ldr	r1, [pc, #200]	; 228d4 <__flatcc_fb_gen_c_verifier@@Base+0x2304>
   22808:	ldr	r0, [pc, #200]	; 228d8 <__flatcc_fb_gen_c_verifier@@Base+0x2308>
   2280c:	add	r3, pc, r3
   22810:	add	r3, r3, #72	; 0x48
   22814:	add	r1, pc, r1
   22818:	add	r0, pc, r0
   2281c:	bl	1400c <__assert_fail@plt>
   22820:	ldr	r3, [pc, #180]	; 228dc <__flatcc_fb_gen_c_verifier@@Base+0x230c>
   22824:	movw	r2, #1166	; 0x48e
   22828:	ldr	r1, [pc, #176]	; 228e0 <__flatcc_fb_gen_c_verifier@@Base+0x2310>
   2282c:	ldr	r0, [pc, #176]	; 228e4 <__flatcc_fb_gen_c_verifier@@Base+0x2314>
   22830:	add	r3, pc, r3
   22834:	add	r3, r3, #72	; 0x48
   22838:	add	r1, pc, r1
   2283c:	add	r0, pc, r0
   22840:	bl	1400c <__assert_fail@plt>
   22844:	ldr	r3, [pc, #156]	; 228e8 <__flatcc_fb_gen_c_verifier@@Base+0x2318>
   22848:	movw	r2, #1157	; 0x485
   2284c:	ldr	r1, [pc, #152]	; 228ec <__flatcc_fb_gen_c_verifier@@Base+0x231c>
   22850:	ldr	r0, [pc, #152]	; 228f0 <__flatcc_fb_gen_c_verifier@@Base+0x2320>
   22854:	add	r3, pc, r3
   22858:	add	r3, r3, #72	; 0x48
   2285c:	add	r1, pc, r1
   22860:	add	r0, pc, r0
   22864:	bl	1400c <__assert_fail@plt>
   22868:	andeq	r8, r4, r8, lsr #21
   2286c:	strheq	r2, [r0], -ip
   22870:	andeq	r2, r0, ip, asr #1
   22874:			; <UNDEFINED> instruction: 0xfffffeec
   22878:	andeq	r0, r0, r8, asr #10
   2287c:			; <UNDEFINED> instruction: 0xffffe4c4
   22880:	andeq	r0, r3, r4, lsl #28
   22884:	ldrdeq	r1, [r3], -ip
   22888:	andeq	r3, r3, ip, ror #15
   2288c:	andeq	r1, r3, ip, lsl #6
   22890:	andeq	r1, r3, ip, lsl r3
   22894:	andeq	r1, r3, r0, lsr #6
   22898:	andeq	r7, r2, ip, lsr #31
   2289c:	muleq	r3, r0, ip
   228a0:	andeq	r1, r3, r4, ror #1
   228a4:	andeq	r0, r3, r8, asr #22
   228a8:	andeq	r7, r2, r0, asr #30
   228ac:	andeq	r1, r3, r0, ror #3
   228b0:	andeq	r1, r3, r4, lsl #4
   228b4:	andeq	r0, r3, r8, asr #21
   228b8:	muleq	r0, ip, r0
   228bc:	andeq	r1, r3, r0, lsl r1
   228c0:	andeq	r0, r3, ip, lsl sl
   228c4:	andeq	lr, r1, r8, ror #1
   228c8:	andeq	r0, r3, r4, lsr #15
   228cc:	andeq	r6, r2, r8, ror #11
   228d0:	andeq	r0, r3, r4, lsl #15
   228d4:	andeq	r0, r3, ip, asr #19
   228d8:	andeq	r0, r3, r4, lsr sl
   228dc:	andeq	r0, r3, r0, ror #14
   228e0:	andeq	r0, r3, r8, lsr #19
   228e4:	andeq	r0, r3, r0, lsl sl
   228e8:	andeq	r0, r3, ip, lsr r7
   228ec:	andeq	r0, r3, r4, lsl #19
   228f0:	andeq	r0, r3, ip, ror #19
   228f4:	str	r4, [sp, #-8]!
   228f8:	mov	r4, r0
   228fc:	ldr	r0, [r0, #16]
   22900:	str	lr, [sp, #4]
   22904:	cmp	r0, #0
   22908:	beq	22910 <__flatcc_fb_gen_c_verifier@@Base+0x2340>
   2290c:	bl	13ea4 <free@plt>
   22910:	ldr	r0, [r4, #20]
   22914:	cmp	r0, #0
   22918:	beq	22920 <__flatcc_fb_gen_c_verifier@@Base+0x2350>
   2291c:	bl	13ea4 <free@plt>
   22920:	ldr	r0, [r4, #24]
   22924:	cmp	r0, #0
   22928:	beq	22930 <__flatcc_fb_gen_c_verifier@@Base+0x2360>
   2292c:	bl	13ea4 <free@plt>
   22930:	mov	r3, #0
   22934:	str	r3, [r4]
   22938:	str	r3, [r4, #4]
   2293c:	str	r3, [r4, #8]
   22940:	str	r3, [r4, #12]
   22944:	str	r3, [r4, #16]
   22948:	str	r3, [r4, #20]
   2294c:	str	r3, [r4, #24]
   22950:	str	r3, [r4, #28]
   22954:	str	r3, [r4, #32]
   22958:	str	r3, [r4, #36]	; 0x24
   2295c:	str	r3, [r4, #40]	; 0x28
   22960:	ldr	r4, [sp]
   22964:	add	sp, sp, #4
   22968:	pop	{pc}		; (ldr pc, [sp], #4)
   2296c:	ldr	r0, [r0, #4]
   22970:	ldr	r1, [r1, #4]
   22974:	b	13e8c <strcmp@plt>
   22978:	strd	r4, [sp, #-16]!
   2297c:	mov	r5, r1
   22980:	mov	r4, r0
   22984:	ldr	r1, [pc, #380]	; 22b08 <__flatcc_fb_gen_c_verifier@@Base+0x2538>
   22988:	str	r6, [sp, #8]
   2298c:	mov	r6, r2
   22990:	str	lr, [sp, #12]
   22994:	sub	sp, sp, #8
   22998:	ldr	r2, [sp, #24]
   2299c:	add	r1, pc, r1
   229a0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   229a4:	ldr	r1, [pc, #352]	; 22b0c <__flatcc_fb_gen_c_verifier@@Base+0x253c>
   229a8:	mov	r0, r4
   229ac:	add	r1, pc, r1
   229b0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   229b4:	ldr	r2, [r4, #220]	; 0xdc
   229b8:	ldr	r3, [r5, #40]	; 0x28
   229bc:	ldr	r1, [pc, #332]	; 22b10 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   229c0:	add	r2, r2, #1
   229c4:	sub	r3, r3, #1
   229c8:	str	r2, [r4, #220]	; 0xdc
   229cc:	add	r1, pc, r1
   229d0:	cmp	r3, #8
   229d4:	addls	pc, pc, r3, lsl #2
   229d8:	b	22ab4 <__flatcc_fb_gen_c_verifier@@Base+0x24e4>
   229dc:	b	22a64 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   229e0:	b	22a64 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   229e4:	b	22a64 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   229e8:	b	22a64 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   229ec:	b	22a64 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   229f0:	b	22a00 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   229f4:	b	22a00 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   229f8:	b	22a00 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   229fc:	b	22a00 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   22a00:	ldrd	r2, [r6, #48]	; 0x30
   22a04:	cmp	r2, #0
   22a08:	sbcs	r1, r3, #0
   22a0c:	blt	22a7c <__flatcc_fb_gen_c_verifier@@Base+0x24ac>
   22a10:	ldr	r1, [pc, #252]	; 22b14 <__flatcc_fb_gen_c_verifier@@Base+0x2544>
   22a14:	mov	r0, r4
   22a18:	add	r1, pc, r1
   22a1c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a20:	ldr	r3, [r4, #220]	; 0xdc
   22a24:	cmp	r3, #0
   22a28:	beq	22a90 <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   22a2c:	ldr	r1, [pc, #228]	; 22b18 <__flatcc_fb_gen_c_verifier@@Base+0x2548>
   22a30:	sub	r3, r3, #1
   22a34:	mov	r0, r4
   22a38:	str	r3, [r4, #220]	; 0xdc
   22a3c:	add	r1, pc, r1
   22a40:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a44:	ldr	r3, [r4, #220]	; 0xdc
   22a48:	add	r3, r3, #1
   22a4c:	str	r3, [r4, #220]	; 0xdc
   22a50:	add	sp, sp, #8
   22a54:	ldrd	r4, [sp]
   22a58:	ldr	r6, [sp, #8]
   22a5c:	add	sp, sp, #12
   22a60:	pop	{pc}		; (ldr pc, [sp], #4)
   22a64:	ldr	r1, [pc, #176]	; 22b1c <__flatcc_fb_gen_c_verifier@@Base+0x254c>
   22a68:	mov	r0, r4
   22a6c:	ldrd	r2, [r6, #48]	; 0x30
   22a70:	add	r1, pc, r1
   22a74:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a78:	b	22a20 <__flatcc_fb_gen_c_verifier@@Base+0x2450>
   22a7c:	ldr	r1, [pc, #156]	; 22b20 <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   22a80:	mov	r0, r4
   22a84:	add	r1, pc, r1
   22a88:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a8c:	b	22a20 <__flatcc_fb_gen_c_verifier@@Base+0x2450>
   22a90:	ldr	r3, [pc, #140]	; 22b24 <__flatcc_fb_gen_c_verifier@@Base+0x2554>
   22a94:	movw	r2, #719	; 0x2cf
   22a98:	ldr	r1, [pc, #136]	; 22b28 <__flatcc_fb_gen_c_verifier@@Base+0x2558>
   22a9c:	ldr	r0, [pc, #136]	; 22b2c <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   22aa0:	add	r3, pc, r3
   22aa4:	add	r3, r3, #120	; 0x78
   22aa8:	add	r1, pc, r1
   22aac:	add	r0, pc, r0
   22ab0:	bl	1400c <__assert_fail@plt>
   22ab4:	ldr	r2, [pc, #116]	; 22b30 <__flatcc_fb_gen_c_verifier@@Base+0x2560>
   22ab8:	movw	r3, #710	; 0x2c6
   22abc:	ldr	r0, [pc, #112]	; 22b34 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   22ac0:	ldr	r4, [pc, #112]	; 22b38 <__flatcc_fb_gen_c_verifier@@Base+0x2568>
   22ac4:	ldr	ip, [r1, r2]
   22ac8:	add	r0, pc, r0
   22acc:	ldr	r1, [pc, #104]	; 22b3c <__flatcc_fb_gen_c_verifier@@Base+0x256c>
   22ad0:	add	r4, pc, r4
   22ad4:	str	r0, [sp]
   22ad8:	mov	r2, r4
   22adc:	ldr	r0, [ip]
   22ae0:	add	r1, pc, r1
   22ae4:	bl	13f58 <fprintf@plt>
   22ae8:	ldr	r3, [pc, #80]	; 22b40 <__flatcc_fb_gen_c_verifier@@Base+0x2570>
   22aec:	mov	r1, r4
   22af0:	movw	r2, #710	; 0x2c6
   22af4:	ldr	r0, [pc, #72]	; 22b44 <__flatcc_fb_gen_c_verifier@@Base+0x2574>
   22af8:	add	r3, pc, r3
   22afc:	add	r3, r3, #96	; 0x60
   22b00:	add	r0, pc, r0
   22b04:	bl	1400c <__assert_fail@plt>
   22b08:	andeq	r1, r3, r4, lsr r0
   22b0c:	andeq	r1, r3, r4, ror r0
   22b10:	andeq	r8, r4, ip, lsr #12
   22b14:	andeq	r1, r3, ip, lsl r0
   22b18:	andeq	r0, r3, r0, asr #26
   22b1c:	andeq	r0, r3, r4, asr #31
   22b20:	ldrdeq	r0, [r3], -ip
   22b24:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   22b28:	andeq	r0, r3, r8, lsr r7
   22b2c:	andeq	r0, r3, r0, lsr #15
   22b30:	muleq	r0, ip, r0
   22b34:	andeq	r0, r3, r4, asr #31
   22b38:	andeq	r0, r3, r0, lsl r7
   22b3c:	ldrdeq	sp, [r1], -r8
   22b40:	muleq	r3, r8, r4
   22b44:	ldrdeq	r6, [r2], -ip
   22b48:	ldr	r1, [pc, #272]	; 22c60 <__flatcc_fb_gen_c_verifier@@Base+0x2690>
   22b4c:	strd	r4, [sp, #-16]!
   22b50:	mov	r4, r0
   22b54:	str	r6, [sp, #8]
   22b58:	mov	r6, r2
   22b5c:	str	lr, [sp, #12]
   22b60:	sub	sp, sp, #224	; 0xe0
   22b64:	ldr	r2, [sp, #240]	; 0xf0
   22b68:	add	r1, pc, r1
   22b6c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22b70:	ldr	r1, [pc, #236]	; 22c64 <__flatcc_fb_gen_c_verifier@@Base+0x2694>
   22b74:	mov	r0, r4
   22b78:	add	r1, pc, r1
   22b7c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22b80:	ldrh	r2, [r6, #8]
   22b84:	ldr	r3, [r4, #220]	; 0xdc
   22b88:	sub	r2, r2, #3
   22b8c:	cmp	r2, #1
   22b90:	add	r3, r3, #1
   22b94:	str	r3, [r4, #220]	; 0xdc
   22b98:	bhi	22c18 <__flatcc_fb_gen_c_verifier@@Base+0x2648>
   22b9c:	add	r5, sp, #4
   22ba0:	mov	r2, #220	; 0xdc
   22ba4:	mov	r1, #0
   22ba8:	mov	r0, r5
   22bac:	bl	13f70 <memset@plt>
   22bb0:	mov	r2, r5
   22bb4:	mov	r1, r6
   22bb8:	ldr	r0, [r6, #12]
   22bbc:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   22bc0:	ldr	r1, [pc, #160]	; 22c68 <__flatcc_fb_gen_c_verifier@@Base+0x2698>
   22bc4:	mov	r2, r5
   22bc8:	mov	r0, r4
   22bcc:	add	r1, pc, r1
   22bd0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22bd4:	ldr	r3, [r4, #220]	; 0xdc
   22bd8:	cmp	r3, #0
   22bdc:	beq	22c3c <__flatcc_fb_gen_c_verifier@@Base+0x266c>
   22be0:	ldr	r1, [pc, #132]	; 22c6c <__flatcc_fb_gen_c_verifier@@Base+0x269c>
   22be4:	sub	r3, r3, #1
   22be8:	mov	r0, r4
   22bec:	str	r3, [r4, #220]	; 0xdc
   22bf0:	add	r1, pc, r1
   22bf4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22bf8:	ldr	r3, [r4, #220]	; 0xdc
   22bfc:	add	r3, r3, #1
   22c00:	str	r3, [r4, #220]	; 0xdc
   22c04:	add	sp, sp, #224	; 0xe0
   22c08:	ldrd	r4, [sp]
   22c0c:	ldr	r6, [sp, #8]
   22c10:	add	sp, sp, #12
   22c14:	pop	{pc}		; (ldr pc, [sp], #4)
   22c18:	ldr	r3, [pc, #80]	; 22c70 <__flatcc_fb_gen_c_verifier@@Base+0x26a0>
   22c1c:	movw	r2, #729	; 0x2d9
   22c20:	ldr	r1, [pc, #76]	; 22c74 <__flatcc_fb_gen_c_verifier@@Base+0x26a4>
   22c24:	ldr	r0, [pc, #76]	; 22c78 <__flatcc_fb_gen_c_verifier@@Base+0x26a8>
   22c28:	add	r3, pc, r3
   22c2c:	add	r3, r3, #136	; 0x88
   22c30:	add	r1, pc, r1
   22c34:	add	r0, pc, r0
   22c38:	bl	1400c <__assert_fail@plt>
   22c3c:	ldr	r3, [pc, #56]	; 22c7c <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   22c40:	movw	r2, #742	; 0x2e6
   22c44:	ldr	r1, [pc, #52]	; 22c80 <__flatcc_fb_gen_c_verifier@@Base+0x26b0>
   22c48:	ldr	r0, [pc, #52]	; 22c84 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   22c4c:	add	r3, pc, r3
   22c50:	add	r3, r3, #160	; 0xa0
   22c54:	add	r1, pc, r1
   22c58:	add	r0, pc, r0
   22c5c:	bl	1400c <__assert_fail@plt>
   22c60:	andeq	r0, r3, r8, asr #30
   22c64:	andeq	r0, r3, r8, lsr #29
   22c68:	andeq	r0, r3, r8, lsr #30
   22c6c:	andeq	r0, r3, ip, lsl #23
   22c70:	andeq	r0, r3, r8, ror #6
   22c74:			; <UNDEFINED> instruction: 0x000305b0
   22c78:			; <UNDEFINED> instruction: 0x0001e7bc
   22c7c:	andeq	r0, r3, r4, asr #6
   22c80:	andeq	r0, r3, ip, lsl #11
   22c84:	strdeq	r0, [r3], -r4
   22c88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22c8c:	mov	r5, r1
   22c90:	mov	r4, r0
   22c94:	ldr	r1, [pc, #4036]	; 23c60 <__flatcc_fb_gen_c_verifier@@Base+0x3690>
   22c98:	strd	r6, [sp, #8]
   22c9c:	mov	r6, r2
   22ca0:	mov	r2, #220	; 0xdc
   22ca4:	strd	r8, [sp, #16]
   22ca8:	mov	r7, r3
   22cac:	strd	sl, [sp, #24]
   22cb0:	str	lr, [sp, #32]
   22cb4:	sub	sp, sp, #524	; 0x20c
   22cb8:	add	r1, pc, r1
   22cbc:	add	ip, sp, #300	; 0x12c
   22cc0:	mov	r0, ip
   22cc4:	str	ip, [sp, #32]
   22cc8:	mov	ip, r1
   22ccc:	str	r1, [sp, #92]	; 0x5c
   22cd0:	mov	r1, #0
   22cd4:	bl	13f70 <memset@plt>
   22cd8:	add	r3, sp, #96	; 0x60
   22cdc:	ldr	r0, [r6]
   22ce0:	mov	r1, r3
   22ce4:	str	r3, [sp, #64]	; 0x40
   22ce8:	bl	15334 <__flatcc_fb_copy_scope@@Base>
   22cec:	ldrh	r3, [r5]
   22cf0:	sub	r2, r3, #1
   22cf4:	str	r3, [sp, #24]
   22cf8:	ldrh	r3, [r7, #24]
   22cfc:	clz	r2, r2
   22d00:	lsr	r2, r2, #5
   22d04:	str	r2, [sp, #72]	; 0x48
   22d08:	cmp	r3, #9
   22d0c:	beq	22d54 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   22d10:	cmp	r3, #15
   22d14:	beq	22d54 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   22d18:	cmp	r3, #7
   22d1c:	beq	22d54 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   22d20:	sub	r3, r3, #7
   22d24:	cmp	r3, #8
   22d28:	addls	pc, pc, r3, lsl #2
   22d2c:	b	23a3c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   22d30:	b	23370 <__flatcc_fb_gen_c_verifier@@Base+0x2da0>
   22d34:	b	23afc <__flatcc_fb_gen_c_verifier@@Base+0x352c>
   22d38:	b	23a3c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   22d3c:	b	233fc <__flatcc_fb_gen_c_verifier@@Base+0x2e2c>
   22d40:	b	23a3c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   22d44:	b	23a3c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   22d48:	b	23a3c <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   22d4c:	b	22dd4 <__flatcc_fb_gen_c_verifier@@Base+0x2804>
   22d50:	b	22dd4 <__flatcc_fb_gen_c_verifier@@Base+0x2804>
   22d54:	sub	r3, r3, #7
   22d58:	cmp	r3, #8
   22d5c:	addls	pc, pc, r3, lsl #2
   22d60:	b	23a58 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   22d64:	b	23430 <__flatcc_fb_gen_c_verifier@@Base+0x2e60>
   22d68:	b	22d88 <__flatcc_fb_gen_c_verifier@@Base+0x27b8>
   22d6c:	b	23438 <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   22d70:	b	23438 <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   22d74:	b	23a58 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   22d78:	b	23a58 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   22d7c:	b	23a58 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   22d80:	b	23424 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   22d84:	b	23424 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   22d88:	ldr	r3, [r7, #16]
   22d8c:	mov	r6, #1
   22d90:	mov	fp, #0
   22d94:	mov	r9, r3
   22d98:	mov	r8, r6
   22d9c:	mov	r5, #1
   22da0:	ldr	r3, [sp, #560]	; 0x230
   22da4:	cmp	r3, #0
   22da8:	movne	sl, #0
   22dac:	strne	sl, [sp, #28]
   22db0:	strne	sl, [sp, #52]	; 0x34
   22db4:	strne	sl, [sp, #68]	; 0x44
   22db8:	bne	22e64 <__flatcc_fb_gen_c_verifier@@Base+0x2894>
   22dbc:	mov	sl, r3
   22dc0:	str	r3, [sp, #28]
   22dc4:	str	r3, [sp, #52]	; 0x34
   22dc8:	str	r3, [sp, #68]	; 0x44
   22dcc:	str	r3, [sp, #88]	; 0x58
   22dd0:	b	22e7c <__flatcc_fb_gen_c_verifier@@Base+0x28ac>
   22dd4:	mov	r8, #0
   22dd8:	mov	r6, r8
   22ddc:	ldr	r1, [r7, #16]
   22de0:	ldr	r2, [sp, #32]
   22de4:	ldr	r0, [r1, #12]
   22de8:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   22dec:	ldr	r2, [r7, #16]
   22df0:	ldrh	r3, [r2, #8]
   22df4:	sub	r1, r3, #3
   22df8:	sub	r9, r3, #4
   22dfc:	clz	r1, r1
   22e00:	clz	r9, r9
   22e04:	lsr	r1, r1, #5
   22e08:	sub	sl, r3, #1
   22e0c:	lsr	r9, r9, #5
   22e10:	clz	sl, sl
   22e14:	lsr	sl, sl, #5
   22e18:	str	r1, [sp, #68]	; 0x44
   22e1c:	ldr	r1, [sp, #560]	; 0x230
   22e20:	cmp	r1, #0
   22e24:	clz	r1, r3
   22e28:	lsr	r1, r1, #5
   22e2c:	movne	r9, #0
   22e30:	cmp	r9, #0
   22e34:	str	r1, [sp, #28]
   22e38:	bne	23944 <__flatcc_fb_gen_c_verifier@@Base+0x3374>
   22e3c:	cmp	r3, #3
   22e40:	beq	23a24 <__flatcc_fb_gen_c_verifier@@Base+0x3454>
   22e44:	mov	r5, r9
   22e48:	str	r9, [sp, #52]	; 0x34
   22e4c:	str	r9, [sp, #68]	; 0x44
   22e50:	ldr	r3, [sp, #560]	; 0x230
   22e54:	cmp	r3, #0
   22e58:	streq	r3, [sp, #80]	; 0x50
   22e5c:	beq	23958 <__flatcc_fb_gen_c_verifier@@Base+0x3388>
   22e60:	mov	fp, #0
   22e64:	cmp	r8, #0
   22e68:	movne	r3, #1
   22e6c:	movne	r5, #0
   22e70:	movne	r6, r5
   22e74:	strne	r3, [sp, #88]	; 0x58
   22e78:	beq	23bbc <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   22e7c:	cmp	fp, #1
   22e80:	beq	239e8 <__flatcc_fb_gen_c_verifier@@Base+0x3418>
   22e84:	str	fp, [sp, #56]	; 0x38
   22e88:	str	fp, [sp, #60]	; 0x3c
   22e8c:	str	fp, [sp, #76]	; 0x4c
   22e90:	str	fp, [sp, #80]	; 0x50
   22e94:	str	fp, [sp, #84]	; 0x54
   22e98:	ldr	r2, [pc, #3524]	; 23c64 <__flatcc_fb_gen_c_verifier@@Base+0x3694>
   22e9c:	cmp	fp, #2
   22ea0:	ldr	r3, [pc, #3520]	; 23c68 <__flatcc_fb_gen_c_verifier@@Base+0x3698>
   22ea4:	ldr	r1, [pc, #3520]	; 23c6c <__flatcc_fb_gen_c_verifier@@Base+0x369c>
   22ea8:	add	r2, pc, r2
   22eac:	ldr	r0, [pc, #3516]	; 23c70 <__flatcc_fb_gen_c_verifier@@Base+0x36a0>
   22eb0:	str	r2, [sp, #20]
   22eb4:	add	r3, pc, r3
   22eb8:	str	r2, [sp, #48]	; 0x30
   22ebc:	mov	r8, r3
   22ec0:	ldr	r2, [pc, #3500]	; 23c74 <__flatcc_fb_gen_c_verifier@@Base+0x36a4>
   22ec4:	add	r1, pc, r1
   22ec8:	add	r0, pc, r0
   22ecc:	add	r2, pc, r2
   22ed0:	beq	23014 <__flatcc_fb_gen_c_verifier@@Base+0x2a44>
   22ed4:	ldr	ip, [sp, #560]	; 0x230
   22ed8:	orr	r3, r5, sl
   22edc:	cmp	r5, #0
   22ee0:	orr	r3, r3, ip
   22ee4:	str	r3, [sp, #16]
   22ee8:	beq	2361c <__flatcc_fb_gen_c_verifier@@Base+0x304c>
   22eec:	sub	r9, r9, #1
   22ef0:	cmp	r9, #10
   22ef4:	addls	pc, pc, r9, lsl #2
   22ef8:	b	23e48 <__flatcc_fb_gen_c_verifier@@Base+0x3878>
   22efc:	b	230f0 <__flatcc_fb_gen_c_verifier@@Base+0x2b20>
   22f00:	b	232b0 <__flatcc_fb_gen_c_verifier@@Base+0x2ce0>
   22f04:	b	2326c <__flatcc_fb_gen_c_verifier@@Base+0x2c9c>
   22f08:	b	232cc <__flatcc_fb_gen_c_verifier@@Base+0x2cfc>
   22f0c:	b	23294 <__flatcc_fb_gen_c_verifier@@Base+0x2cc4>
   22f10:	b	23304 <__flatcc_fb_gen_c_verifier@@Base+0x2d34>
   22f14:	b	232e8 <__flatcc_fb_gen_c_verifier@@Base+0x2d18>
   22f18:	b	23354 <__flatcc_fb_gen_c_verifier@@Base+0x2d84>
   22f1c:	b	23338 <__flatcc_fb_gen_c_verifier@@Base+0x2d68>
   22f20:	b	2332c <__flatcc_fb_gen_c_verifier@@Base+0x2d5c>
   22f24:	b	23320 <__flatcc_fb_gen_c_verifier@@Base+0x2d50>
   22f28:	ldr	r1, [pc, #3400]	; 23c78 <__flatcc_fb_gen_c_verifier@@Base+0x36a8>
   22f2c:	mov	r0, r4
   22f30:	ldrd	r2, [r7, #80]	; 0x50
   22f34:	add	r1, pc, r1
   22f38:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22f3c:	cmp	r5, #0
   22f40:	bne	23460 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   22f44:	cmp	sl, #0
   22f48:	bne	230d8 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   22f4c:	ldr	r3, [sp, #52]	; 0x34
   22f50:	cmp	r3, #0
   22f54:	bne	23750 <__flatcc_fb_gen_c_verifier@@Base+0x3180>
   22f58:	ldr	r3, [sp, #76]	; 0x4c
   22f5c:	cmp	r3, #0
   22f60:	bne	23764 <__flatcc_fb_gen_c_verifier@@Base+0x3194>
   22f64:	ldr	r3, [sp, #28]
   22f68:	cmp	r3, #0
   22f6c:	bne	23814 <__flatcc_fb_gen_c_verifier@@Base+0x3244>
   22f70:	ldr	r3, [sp, #80]	; 0x50
   22f74:	cmp	r3, #0
   22f78:	beq	237a8 <__flatcc_fb_gen_c_verifier@@Base+0x31d8>
   22f7c:	ldr	r3, [sp, #84]	; 0x54
   22f80:	ldrd	r0, [r7, #96]	; 0x60
   22f84:	ldr	r2, [r7, #112]	; 0x70
   22f88:	cmp	r3, #0
   22f8c:	beq	2382c <__flatcc_fb_gen_c_verifier@@Base+0x325c>
   22f90:	strd	r0, [sp]
   22f94:	mov	r0, r4
   22f98:	ldr	r1, [pc, #3292]	; 23c7c <__flatcc_fb_gen_c_verifier@@Base+0x36ac>
   22f9c:	ldr	r3, [sp, #28]
   22fa0:	ldr	ip, [sp, #32]
   22fa4:	add	r1, pc, r1
   22fa8:	str	ip, [sp, #8]
   22fac:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22fb0:	cmp	r6, #0
   22fb4:	beq	23008 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   22fb8:	ldr	r3, [sp, #16]
   22fbc:	cmp	r3, #0
   22fc0:	beq	236c4 <__flatcc_fb_gen_c_verifier@@Base+0x30f4>
   22fc4:	ldr	r1, [pc, #3252]	; 23c80 <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
   22fc8:	mov	r0, r4
   22fcc:	add	r1, pc, r1
   22fd0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22fd4:	ldr	r3, [r4, #220]	; 0xdc
   22fd8:	cmp	r3, #0
   22fdc:	beq	23784 <__flatcc_fb_gen_c_verifier@@Base+0x31b4>
   22fe0:	ldr	r1, [pc, #3228]	; 23c84 <__flatcc_fb_gen_c_verifier@@Base+0x36b4>
   22fe4:	sub	r3, r3, #1
   22fe8:	mov	r0, r4
   22fec:	str	r3, [r4, #220]	; 0xdc
   22ff0:	add	r1, pc, r1
   22ff4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22ff8:	ldr	r1, [pc, #3208]	; 23c88 <__flatcc_fb_gen_c_verifier@@Base+0x36b8>
   22ffc:	mov	r0, r4
   23000:	add	r1, pc, r1
   23004:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23008:	cmp	fp, #1
   2300c:	bne	235a0 <__flatcc_fb_gen_c_verifier@@Base+0x2fd0>
   23010:	mov	fp, #2
   23014:	ldr	r3, [r4, #220]	; 0xdc
   23018:	cmp	r3, #0
   2301c:	beq	23a90 <__flatcc_fb_gen_c_verifier@@Base+0x34c0>
   23020:	ldr	r1, [pc, #3172]	; 23c8c <__flatcc_fb_gen_c_verifier@@Base+0x36bc>
   23024:	sub	r3, r3, #1
   23028:	mov	r0, r4
   2302c:	mov	r5, #0
   23030:	str	r3, [r4, #220]	; 0xdc
   23034:	mov	r6, r5
   23038:	add	r1, pc, r1
   2303c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23040:	ldr	r3, [r4, #220]	; 0xdc
   23044:	ldr	r1, [r7, #104]	; 0x68
   23048:	ldr	r2, [sp, #32]
   2304c:	add	r3, r3, #1
   23050:	ldr	r0, [r1, #12]
   23054:	str	r3, [r4, #220]	; 0xdc
   23058:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2305c:	ldr	r3, [r7, #104]	; 0x68
   23060:	mov	r0, r4
   23064:	ldr	r1, [pc, #3108]	; 23c90 <__flatcc_fb_gen_c_verifier@@Base+0x36c0>
   23068:	ldrh	r3, [r3, #8]
   2306c:	add	r1, pc, r1
   23070:	cmp	r3, r5
   23074:	ldr	r3, [sp, #28]
   23078:	moveq	r3, #1
   2307c:	movne	sl, #1
   23080:	str	r3, [sp, #28]
   23084:	ldr	r3, [sp, #560]	; 0x230
   23088:	orr	r3, r3, sl
   2308c:	str	r3, [sp, #16]
   23090:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23094:	ldr	r3, [sp, #24]
   23098:	cmp	r3, #1
   2309c:	beq	22f28 <__flatcc_fb_gen_c_verifier@@Base+0x2958>
   230a0:	eor	r3, r6, #1
   230a4:	tst	r3, sl
   230a8:	beq	22f3c <__flatcc_fb_gen_c_verifier@@Base+0x296c>
   230ac:	ldrh	r3, [r7, #74]	; 0x4a
   230b0:	mov	r0, r4
   230b4:	ldr	r1, [pc, #3032]	; 23c94 <__flatcc_fb_gen_c_verifier@@Base+0x36c4>
   230b8:	ldrd	r8, [r7, #88]	; 0x58
   230bc:	str	r3, [sp, #8]
   230c0:	ldrd	r2, [r7, #96]	; 0x60
   230c4:	add	r1, pc, r1
   230c8:	strd	r8, [sp]
   230cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   230d0:	cmp	r5, #0
   230d4:	bne	23460 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   230d8:	ldr	r1, [pc, #3000]	; 23c98 <__flatcc_fb_gen_c_verifier@@Base+0x36c8>
   230dc:	mov	r0, r4
   230e0:	ldr	r2, [sp, #32]
   230e4:	add	r1, pc, r1
   230e8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   230ec:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   230f0:	cmp	r6, #0
   230f4:	beq	23850 <__flatcc_fb_gen_c_verifier@@Base+0x3280>
   230f8:	ldr	r3, [pc, #2972]	; 23c9c <__flatcc_fb_gen_c_verifier@@Base+0x36cc>
   230fc:	mov	r5, r6
   23100:	add	r3, pc, r3
   23104:	str	r3, [sp, #20]
   23108:	ldr	r3, [pc, #2960]	; 23ca0 <__flatcc_fb_gen_c_verifier@@Base+0x36d0>
   2310c:	add	r3, pc, r3
   23110:	str	r3, [sp, #48]	; 0x30
   23114:	ldrsh	r1, [r7, #74]	; 0x4a
   23118:	ldrd	r2, [r7, #88]	; 0x58
   2311c:	str	r1, [sp, #36]	; 0x24
   23120:	orrs	r1, r2, r3
   23124:	mov	r8, r2
   23128:	mov	r9, r3
   2312c:	beq	2367c <__flatcc_fb_gen_c_verifier@@Base+0x30ac>
   23130:	mvn	r0, #0
   23134:	mov	r1, #0
   23138:	bl	3f070 <fb_value_set_visit@@Base+0x684>
   2313c:	strd	r0, [sp, #40]	; 0x28
   23140:	ldr	r1, [sp, #36]	; 0x24
   23144:	mov	r3, r9
   23148:	mov	r2, r8
   2314c:	mov	r0, r4
   23150:	ldrd	r8, [sp, #40]	; 0x28
   23154:	str	r1, [sp]
   23158:	ldr	r1, [pc, #2884]	; 23ca4 <__flatcc_fb_gen_c_verifier@@Base+0x36d4>
   2315c:	strd	r8, [sp, #8]
   23160:	add	r1, pc, r1
   23164:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23168:	ldr	r1, [pc, #2872]	; 23ca8 <__flatcc_fb_gen_c_verifier@@Base+0x36d8>
   2316c:	mov	r0, r4
   23170:	add	r1, pc, r1
   23174:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23178:	ldr	r1, [pc, #2860]	; 23cac <__flatcc_fb_gen_c_verifier@@Base+0x36dc>
   2317c:	mov	r0, r4
   23180:	add	r1, pc, r1
   23184:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23188:	ldr	r3, [r4, #220]	; 0xdc
   2318c:	cmp	r5, #0
   23190:	add	r3, r3, #1
   23194:	str	r3, [r4, #220]	; 0xdc
   23198:	beq	23664 <__flatcc_fb_gen_c_verifier@@Base+0x3094>
   2319c:	ldr	r1, [pc, #2828]	; 23cb0 <__flatcc_fb_gen_c_verifier@@Base+0x36e0>
   231a0:	mov	r0, r4
   231a4:	ldr	r2, [sp, #48]	; 0x30
   231a8:	add	r1, pc, r1
   231ac:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231b0:	ldr	r1, [pc, #2812]	; 23cb4 <__flatcc_fb_gen_c_verifier@@Base+0x36e4>
   231b4:	mov	r0, r4
   231b8:	add	r1, pc, r1
   231bc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231c0:	ldr	r3, [r4, #220]	; 0xdc
   231c4:	ldr	r2, [sp, #68]	; 0x44
   231c8:	add	r3, r3, #2
   231cc:	cmp	r2, #0
   231d0:	str	r3, [r4, #220]	; 0xdc
   231d4:	beq	2368c <__flatcc_fb_gen_c_verifier@@Base+0x30bc>
   231d8:	ldr	r1, [pc, #2776]	; 23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x36e8>
   231dc:	mov	r0, r4
   231e0:	ldr	r2, [sp, #32]
   231e4:	add	r1, pc, r1
   231e8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231ec:	ldr	r1, [pc, #2760]	; 23cbc <__flatcc_fb_gen_c_verifier@@Base+0x36ec>
   231f0:	mov	r0, r4
   231f4:	ldr	r2, [r4, #208]	; 0xd0
   231f8:	ldr	r3, [sp, #64]	; 0x40
   231fc:	add	r1, pc, r1
   23200:	ldr	r2, [r2, #160]	; 0xa0
   23204:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23208:	ldr	r1, [pc, #2736]	; 23cc0 <__flatcc_fb_gen_c_verifier@@Base+0x36f0>
   2320c:	mov	r0, r4
   23210:	ldr	r3, [r4, #208]	; 0xd0
   23214:	add	r1, pc, r1
   23218:	ldr	r2, [r3, #160]	; 0xa0
   2321c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23220:	ldr	r3, [r4, #220]	; 0xdc
   23224:	cmp	r3, #0
   23228:	beq	23a6c <__flatcc_fb_gen_c_verifier@@Base+0x349c>
   2322c:	cmp	r3, #1
   23230:	beq	23a64 <__flatcc_fb_gen_c_verifier@@Base+0x3494>
   23234:	ldr	r2, [sp, #16]
   23238:	sub	r3, r3, #2
   2323c:	mov	r5, #1
   23240:	str	r3, [r4, #220]	; 0xdc
   23244:	cmp	r2, #0
   23248:	movne	r2, r6
   2324c:	moveq	r2, #0
   23250:	cmp	r2, #0
   23254:	beq	23094 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   23258:	ldr	r1, [pc, #2660]	; 23cc4 <__flatcc_fb_gen_c_verifier@@Base+0x36f4>
   2325c:	mov	r0, r4
   23260:	add	r1, pc, r1
   23264:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23268:	b	23094 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   2326c:	ldr	r3, [pc, #2644]	; 23cc8 <__flatcc_fb_gen_c_verifier@@Base+0x36f8>
   23270:	add	r3, pc, r3
   23274:	str	r3, [sp, #48]	; 0x30
   23278:	ldr	r3, [pc, #2636]	; 23ccc <__flatcc_fb_gen_c_verifier@@Base+0x36fc>
   2327c:	add	r3, pc, r3
   23280:	str	r3, [sp, #20]
   23284:	cmp	r6, #0
   23288:	movne	r5, r6
   2328c:	bne	23114 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   23290:	b	2319c <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   23294:	ldr	r3, [pc, #2612]	; 23cd0 <__flatcc_fb_gen_c_verifier@@Base+0x3700>
   23298:	add	r3, pc, r3
   2329c:	str	r3, [sp, #48]	; 0x30
   232a0:	ldr	r3, [pc, #2604]	; 23cd4 <__flatcc_fb_gen_c_verifier@@Base+0x3704>
   232a4:	add	r3, pc, r3
   232a8:	str	r3, [sp, #20]
   232ac:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   232b0:	ldr	r3, [pc, #2592]	; 23cd8 <__flatcc_fb_gen_c_verifier@@Base+0x3708>
   232b4:	add	r3, pc, r3
   232b8:	str	r3, [sp, #48]	; 0x30
   232bc:	ldr	r3, [pc, #2584]	; 23cdc <__flatcc_fb_gen_c_verifier@@Base+0x370c>
   232c0:	add	r3, pc, r3
   232c4:	str	r3, [sp, #20]
   232c8:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   232cc:	ldr	r3, [pc, #2572]	; 23ce0 <__flatcc_fb_gen_c_verifier@@Base+0x3710>
   232d0:	add	r3, pc, r3
   232d4:	str	r3, [sp, #48]	; 0x30
   232d8:	ldr	r3, [pc, #2564]	; 23ce4 <__flatcc_fb_gen_c_verifier@@Base+0x3714>
   232dc:	add	r3, pc, r3
   232e0:	str	r3, [sp, #20]
   232e4:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   232e8:	ldr	r3, [pc, #2552]	; 23ce8 <__flatcc_fb_gen_c_verifier@@Base+0x3718>
   232ec:	add	r3, pc, r3
   232f0:	str	r3, [sp, #48]	; 0x30
   232f4:	ldr	r3, [pc, #2544]	; 23cec <__flatcc_fb_gen_c_verifier@@Base+0x371c>
   232f8:	add	r3, pc, r3
   232fc:	str	r3, [sp, #20]
   23300:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   23304:	ldr	r3, [pc, #2532]	; 23cf0 <__flatcc_fb_gen_c_verifier@@Base+0x3720>
   23308:	add	r3, pc, r3
   2330c:	str	r3, [sp, #48]	; 0x30
   23310:	ldr	r3, [pc, #2524]	; 23cf4 <__flatcc_fb_gen_c_verifier@@Base+0x3724>
   23314:	add	r3, pc, r3
   23318:	str	r3, [sp, #20]
   2331c:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   23320:	str	r0, [sp, #20]
   23324:	str	r0, [sp, #48]	; 0x30
   23328:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   2332c:	str	r2, [sp, #20]
   23330:	str	r2, [sp, #48]	; 0x30
   23334:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   23338:	ldr	r3, [pc, #2488]	; 23cf8 <__flatcc_fb_gen_c_verifier@@Base+0x3728>
   2333c:	add	r3, pc, r3
   23340:	str	r3, [sp, #48]	; 0x30
   23344:	ldr	r3, [pc, #2480]	; 23cfc <__flatcc_fb_gen_c_verifier@@Base+0x372c>
   23348:	add	r3, pc, r3
   2334c:	str	r3, [sp, #20]
   23350:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   23354:	ldr	r3, [pc, #2468]	; 23d00 <__flatcc_fb_gen_c_verifier@@Base+0x3730>
   23358:	add	r3, pc, r3
   2335c:	str	r3, [sp, #48]	; 0x30
   23360:	ldr	r3, [pc, #2460]	; 23d04 <__flatcc_fb_gen_c_verifier@@Base+0x3734>
   23364:	add	r3, pc, r3
   23368:	str	r3, [sp, #20]
   2336c:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   23370:	mov	r6, #0
   23374:	ldrh	r3, [r7, #72]	; 0x48
   23378:	ldr	r1, [r7, #16]
   2337c:	ldr	r2, [r7, #104]	; 0x68
   23380:	and	r0, r3, #1024	; 0x400
   23384:	str	r0, [sp, #56]	; 0x38
   23388:	and	r0, r3, #2048	; 0x800
   2338c:	mov	r9, r1
   23390:	adds	fp, r2, #0
   23394:	str	r0, [sp, #60]	; 0x3c
   23398:	movne	fp, #1
   2339c:	ands	r3, r3, #3072	; 0xc00
   233a0:	str	r3, [sp, #76]	; 0x4c
   233a4:	beq	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x27c8>
   233a8:	eor	r5, r6, #1
   233ac:	cmp	r1, #4
   233b0:	orrne	r5, r5, #1
   233b4:	cmp	r5, #0
   233b8:	moveq	r3, #4
   233bc:	moveq	r9, r3
   233c0:	bne	23b1c <__flatcc_fb_gen_c_verifier@@Base+0x354c>
   233c4:	ldr	r3, [sp, #560]	; 0x230
   233c8:	cmp	r3, #0
   233cc:	bne	23b98 <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   233d0:	ldr	sl, [sp, #560]	; 0x230
   233d4:	mov	r6, sl
   233d8:	str	sl, [sp, #28]
   233dc:	str	sl, [sp, #52]	; 0x34
   233e0:	str	sl, [sp, #68]	; 0x44
   233e4:	str	sl, [sp, #80]	; 0x50
   233e8:	str	sl, [sp, #84]	; 0x54
   233ec:	mov	r3, #0
   233f0:	mov	fp, r3
   233f4:	str	r3, [sp, #88]	; 0x58
   233f8:	b	22e98 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   233fc:	mov	r8, #0
   23400:	mov	r3, #1
   23404:	mov	r6, r8
   23408:	mov	r9, r8
   2340c:	mov	sl, r8
   23410:	mov	r5, r8
   23414:	str	r8, [sp, #28]
   23418:	str	r3, [sp, #52]	; 0x34
   2341c:	str	r8, [sp, #68]	; 0x44
   23420:	b	22e50 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   23424:	mov	r8, #1
   23428:	mov	r6, r8
   2342c:	b	22ddc <__flatcc_fb_gen_c_verifier@@Base+0x280c>
   23430:	mov	r6, #1
   23434:	b	23374 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   23438:	mov	r3, #0
   2343c:	mov	r8, #1
   23440:	mov	r9, r3
   23444:	mov	r6, r8
   23448:	mov	sl, r3
   2344c:	mov	r5, r3
   23450:	str	r3, [sp, #28]
   23454:	str	r8, [sp, #52]	; 0x34
   23458:	str	r3, [sp, #68]	; 0x44
   2345c:	b	22e50 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   23460:	ldr	r1, [pc, #2208]	; 23d08 <__flatcc_fb_gen_c_verifier@@Base+0x3738>
   23464:	mov	r0, r4
   23468:	ldr	r5, [sp, #20]
   2346c:	add	r1, pc, r1
   23470:	mov	r2, r5
   23474:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23478:	ldr	r1, [pc, #2188]	; 23d0c <__flatcc_fb_gen_c_verifier@@Base+0x373c>
   2347c:	mov	r0, r4
   23480:	add	r1, pc, r1
   23484:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23488:	ldr	r3, [r4, #220]	; 0xdc
   2348c:	mov	r2, r5
   23490:	mov	r0, r4
   23494:	ldr	r1, [pc, #2164]	; 23d10 <__flatcc_fb_gen_c_verifier@@Base+0x3740>
   23498:	add	r3, r3, #1
   2349c:	add	r1, pc, r1
   234a0:	str	r3, [r4, #220]	; 0xdc
   234a4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234a8:	ldr	r1, [pc, #2148]	; 23d14 <__flatcc_fb_gen_c_verifier@@Base+0x3744>
   234ac:	mov	r0, r4
   234b0:	add	r1, pc, r1
   234b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234b8:	ldr	r3, [r4, #220]	; 0xdc
   234bc:	cmp	r3, #0
   234c0:	beq	23ab4 <__flatcc_fb_gen_c_verifier@@Base+0x34e4>
   234c4:	sub	r3, r3, #1
   234c8:	ldr	r1, [pc, #2120]	; 23d18 <__flatcc_fb_gen_c_verifier@@Base+0x3748>
   234cc:	mov	r0, r4
   234d0:	str	r3, [r4, #220]	; 0xdc
   234d4:	ldr	r3, [sp, #72]	; 0x48
   234d8:	add	r1, pc, r1
   234dc:	orr	r5, r3, r6
   234e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234e4:	ldrd	r2, [sp, #56]	; 0x38
   234e8:	orr	r3, r3, r2
   234ec:	orrs	r3, r3, r5
   234f0:	bne	2372c <__flatcc_fb_gen_c_verifier@@Base+0x315c>
   234f4:	ldrh	r3, [r7, #56]	; 0x38
   234f8:	sub	r3, r3, #3
   234fc:	cmp	r3, #3
   23500:	addls	pc, pc, r3, lsl #2
   23504:	b	23c08 <__flatcc_fb_gen_c_verifier@@Base+0x3638>
   23508:	b	235f8 <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   2350c:	b	235ec <__flatcc_fb_gen_c_verifier@@Base+0x301c>
   23510:	b	23518 <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   23514:	b	23518 <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   23518:	ldr	r1, [pc, #2044]	; 23d1c <__flatcc_fb_gen_c_verifier@@Base+0x374c>
   2351c:	add	r1, pc, r1
   23520:	mov	r0, r4
   23524:	ldrd	r2, [r7, #48]	; 0x30
   23528:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2352c:	ldr	r3, [r4, #220]	; 0xdc
   23530:	add	r3, r3, #1
   23534:	str	r3, [r4, #220]	; 0xdc
   23538:	ldrsh	r3, [r7, #74]	; 0x4a
   2353c:	mov	r0, r4
   23540:	ldr	r1, [pc, #2008]	; 23d20 <__flatcc_fb_gen_c_verifier@@Base+0x3750>
   23544:	ldrd	r8, [r7, #88]	; 0x58
   23548:	str	r3, [sp, #8]
   2354c:	ldrd	r2, [r7, #96]	; 0x60
   23550:	add	r1, pc, r1
   23554:	strd	r8, [sp]
   23558:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2355c:	ldr	r1, [pc, #1984]	; 23d24 <__flatcc_fb_gen_c_verifier@@Base+0x3754>
   23560:	mov	r2, r4
   23564:	mov	r0, r4
   23568:	ldr	r3, [sp, #20]
   2356c:	add	r1, pc, r1
   23570:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23574:	ldr	r3, [r4, #220]	; 0xdc
   23578:	cmp	r3, #0
   2357c:	beq	23ad8 <__flatcc_fb_gen_c_verifier@@Base+0x3508>
   23580:	ldr	r1, [pc, #1952]	; 23d28 <__flatcc_fb_gen_c_verifier@@Base+0x3758>
   23584:	sub	r3, r3, #1
   23588:	mov	r0, r4
   2358c:	str	r3, [r4, #220]	; 0xdc
   23590:	add	r1, pc, r1
   23594:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23598:	cmp	fp, #1
   2359c:	beq	23010 <__flatcc_fb_gen_c_verifier@@Base+0x2a40>
   235a0:	cmp	fp, #2
   235a4:	beq	2397c <__flatcc_fb_gen_c_verifier@@Base+0x33ac>
   235a8:	ldrd	r2, [sp, #56]	; 0x38
   235ac:	orr	r3, r3, r2
   235b0:	ldr	r2, [sp, #52]	; 0x34
   235b4:	orr	r3, r3, r2
   235b8:	ldr	r2, [sp, #28]
   235bc:	orr	r3, r3, fp
   235c0:	orr	r3, r3, r2
   235c4:	orrs	r3, r3, r6
   235c8:	bne	239c0 <__flatcc_fb_gen_c_verifier@@Base+0x33f0>
   235cc:	mov	r0, #0
   235d0:	add	sp, sp, #524	; 0x20c
   235d4:	ldrd	r4, [sp]
   235d8:	ldrd	r6, [sp, #8]
   235dc:	ldrd	r8, [sp, #16]
   235e0:	ldrd	sl, [sp, #24]
   235e4:	add	sp, sp, #32
   235e8:	pop	{pc}		; (ldr pc, [sp], #4)
   235ec:	ldr	r1, [pc, #1848]	; 23d2c <__flatcc_fb_gen_c_verifier@@Base+0x375c>
   235f0:	add	r1, pc, r1
   235f4:	b	23520 <__flatcc_fb_gen_c_verifier@@Base+0x2f50>
   235f8:	ldr	r1, [pc, #1840]	; 23d30 <__flatcc_fb_gen_c_verifier@@Base+0x3760>
   235fc:	mov	r0, r4
   23600:	ldrd	r2, [r7, #48]	; 0x30
   23604:	add	r1, pc, r1
   23608:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2360c:	ldr	r3, [r4, #220]	; 0xdc
   23610:	add	r3, r3, #1
   23614:	str	r3, [r4, #220]	; 0xdc
   23618:	b	23538 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   2361c:	cmp	r6, #0
   23620:	moveq	r5, r6
   23624:	beq	23094 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   23628:	ldr	r3, [sp, #16]
   2362c:	cmp	r3, #0
   23630:	bne	23114 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   23634:	mov	r0, r4
   23638:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2363c:	mov	r1, r8
   23640:	mov	r0, r4
   23644:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23648:	ldr	r1, [pc, #1764]	; 23d34 <__flatcc_fb_gen_c_verifier@@Base+0x3764>
   2364c:	mov	r0, r4
   23650:	add	r1, pc, r1
   23654:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23658:	ldr	r3, [r4, #220]	; 0xdc
   2365c:	add	r3, r3, #1
   23660:	str	r3, [r4, #220]	; 0xdc
   23664:	ldr	r3, [sp, #16]
   23668:	mov	r5, #0
   2366c:	cmp	r3, #0
   23670:	movne	r2, r6
   23674:	moveq	r2, #0
   23678:	b	23250 <__flatcc_fb_gen_c_verifier@@Base+0x2c80>
   2367c:	mvn	r2, #0
   23680:	mov	r3, #0
   23684:	strd	r2, [sp, #40]	; 0x28
   23688:	b	23140 <__flatcc_fb_gen_c_verifier@@Base+0x2b70>
   2368c:	ldr	r1, [pc, #1700]	; 23d38 <__flatcc_fb_gen_c_verifier@@Base+0x3768>
   23690:	mov	r0, r4
   23694:	ldr	r2, [r4, #208]	; 0xd0
   23698:	ldr	r3, [sp, #64]	; 0x40
   2369c:	add	r1, pc, r1
   236a0:	ldr	r2, [r2, #160]	; 0xa0
   236a4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   236a8:	ldr	r1, [pc, #1676]	; 23d3c <__flatcc_fb_gen_c_verifier@@Base+0x376c>
   236ac:	mov	r0, r4
   236b0:	ldr	r3, [r4, #208]	; 0xd0
   236b4:	add	r1, pc, r1
   236b8:	ldr	r2, [r3, #160]	; 0xa0
   236bc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   236c0:	b	23220 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   236c4:	ldr	r1, [pc, #1652]	; 23d40 <__flatcc_fb_gen_c_verifier@@Base+0x3770>
   236c8:	mov	r0, r4
   236cc:	add	r1, pc, r1
   236d0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   236d4:	ldr	r1, [pc, #1640]	; 23d44 <__flatcc_fb_gen_c_verifier@@Base+0x3774>
   236d8:	mov	r0, r4
   236dc:	add	r1, pc, r1
   236e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   236e4:	ldr	r1, [pc, #1628]	; 23d48 <__flatcc_fb_gen_c_verifier@@Base+0x3778>
   236e8:	mov	r0, r4
   236ec:	add	r1, pc, r1
   236f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   236f4:	ldr	r3, [r4, #220]	; 0xdc
   236f8:	cmp	r3, #0
   236fc:	beq	23784 <__flatcc_fb_gen_c_verifier@@Base+0x31b4>
   23700:	ldr	r1, [pc, #1604]	; 23d4c <__flatcc_fb_gen_c_verifier@@Base+0x377c>
   23704:	sub	r3, r3, #1
   23708:	mov	r0, r4
   2370c:	str	r3, [r4, #220]	; 0xdc
   23710:	add	r1, pc, r1
   23714:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23718:	ldr	r1, [pc, #1584]	; 23d50 <__flatcc_fb_gen_c_verifier@@Base+0x3780>
   2371c:	mov	r0, r4
   23720:	add	r1, pc, r1
   23724:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23728:	b	23008 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   2372c:	ldr	r1, [pc, #1568]	; 23d54 <__flatcc_fb_gen_c_verifier@@Base+0x3784>
   23730:	mov	r2, r4
   23734:	mov	r0, r4
   23738:	ldr	r3, [sp, #20]
   2373c:	add	r1, pc, r1
   23740:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23744:	cmp	r5, #0
   23748:	bne	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   2374c:	b	23574 <__flatcc_fb_gen_c_verifier@@Base+0x2fa4>
   23750:	ldr	r1, [pc, #1536]	; 23d58 <__flatcc_fb_gen_c_verifier@@Base+0x3788>
   23754:	mov	r0, r4
   23758:	add	r1, pc, r1
   2375c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23760:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23764:	ldr	r3, [sp, #56]	; 0x38
   23768:	mov	r0, r4
   2376c:	ldr	r1, [pc, #1512]	; 23d5c <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   23770:	clz	r2, r3
   23774:	lsr	r2, r2, #5
   23778:	add	r1, pc, r1
   2377c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23780:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23784:	ldr	r3, [pc, #1492]	; 23d60 <__flatcc_fb_gen_c_verifier@@Base+0x3790>
   23788:	movw	r2, #647	; 0x287
   2378c:	ldr	r1, [pc, #1488]	; 23d64 <__flatcc_fb_gen_c_verifier@@Base+0x3794>
   23790:	ldr	r0, [pc, #1488]	; 23d68 <__flatcc_fb_gen_c_verifier@@Base+0x3798>
   23794:	add	r3, pc, r3
   23798:	add	r3, r3, #176	; 0xb0
   2379c:	add	r1, pc, r1
   237a0:	add	r0, pc, r0
   237a4:	bl	1400c <__assert_fail@plt>
   237a8:	ldr	r3, [sp, #560]	; 0x230
   237ac:	cmp	r3, #0
   237b0:	bne	2386c <__flatcc_fb_gen_c_verifier@@Base+0x329c>
   237b4:	cmp	r6, #0
   237b8:	bne	22fb8 <__flatcc_fb_gen_c_verifier@@Base+0x29e8>
   237bc:	ldr	r2, [pc, #1644]	; 23e30 <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   237c0:	mov	r3, #636	; 0x27c
   237c4:	ldr	r1, [sp, #92]	; 0x5c
   237c8:	ldr	r0, [pc, #1436]	; 23d6c <__flatcc_fb_gen_c_verifier@@Base+0x379c>
   237cc:	ldr	r4, [pc, #1436]	; 23d70 <__flatcc_fb_gen_c_verifier@@Base+0x37a0>
   237d0:	ldr	ip, [r1, r2]
   237d4:	add	r0, pc, r0
   237d8:	ldr	r1, [pc, #1428]	; 23d74 <__flatcc_fb_gen_c_verifier@@Base+0x37a4>
   237dc:	add	r4, pc, r4
   237e0:	str	r0, [sp]
   237e4:	mov	r2, r4
   237e8:	ldr	r0, [ip]
   237ec:	add	r1, pc, r1
   237f0:	bl	13f58 <fprintf@plt>
   237f4:	ldr	r3, [pc, #1404]	; 23d78 <__flatcc_fb_gen_c_verifier@@Base+0x37a8>
   237f8:	mov	r1, r4
   237fc:	mov	r2, #636	; 0x27c
   23800:	ldr	r0, [pc, #1396]	; 23d7c <__flatcc_fb_gen_c_verifier@@Base+0x37ac>
   23804:	add	r3, pc, r3
   23808:	add	r3, r3, #176	; 0xb0
   2380c:	add	r0, pc, r0
   23810:	bl	1400c <__assert_fail@plt>
   23814:	ldr	r1, [pc, #1380]	; 23d80 <__flatcc_fb_gen_c_verifier@@Base+0x37b0>
   23818:	mov	r0, r4
   2381c:	ldr	r2, [sp, #32]
   23820:	add	r1, pc, r1
   23824:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23828:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   2382c:	strd	r0, [sp]
   23830:	mov	r0, r4
   23834:	ldr	r1, [pc, #1352]	; 23d84 <__flatcc_fb_gen_c_verifier@@Base+0x37b4>
   23838:	ldr	ip, [sp, #32]
   2383c:	ldr	r3, [sp, #84]	; 0x54
   23840:	add	r1, pc, r1
   23844:	str	ip, [sp, #8]
   23848:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2384c:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23850:	ldr	r3, [pc, #1328]	; 23d88 <__flatcc_fb_gen_c_verifier@@Base+0x37b8>
   23854:	add	r3, pc, r3
   23858:	str	r3, [sp, #20]
   2385c:	ldr	r3, [pc, #1320]	; 23d8c <__flatcc_fb_gen_c_verifier@@Base+0x37bc>
   23860:	add	r3, pc, r3
   23864:	str	r3, [sp, #48]	; 0x30
   23868:	b	2319c <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   2386c:	ldr	r1, [pc, #1308]	; 23d90 <__flatcc_fb_gen_c_verifier@@Base+0x37c0>
   23870:	mov	r0, r4
   23874:	add	r1, pc, r1
   23878:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2387c:	ldr	r3, [r4, #220]	; 0xdc
   23880:	mov	r0, r4
   23884:	ldr	r1, [pc, #1288]	; 23d94 <__flatcc_fb_gen_c_verifier@@Base+0x37c4>
   23888:	ldr	r2, [sp, #32]
   2388c:	add	r3, r3, #2
   23890:	add	r1, pc, r1
   23894:	str	r3, [r4, #220]	; 0xdc
   23898:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2389c:	ldr	r1, [pc, #1268]	; 23d98 <__flatcc_fb_gen_c_verifier@@Base+0x37c8>
   238a0:	mov	r0, r4
   238a4:	ldr	r2, [r4, #208]	; 0xd0
   238a8:	ldr	r3, [sp, #64]	; 0x40
   238ac:	add	r1, pc, r1
   238b0:	ldr	r2, [r2, #160]	; 0xa0
   238b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   238b8:	ldr	r1, [pc, #1244]	; 23d9c <__flatcc_fb_gen_c_verifier@@Base+0x37cc>
   238bc:	mov	r0, r4
   238c0:	ldr	r3, [r4, #208]	; 0xd0
   238c4:	add	r1, pc, r1
   238c8:	ldr	r2, [r3, #160]	; 0xa0
   238cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   238d0:	ldr	r3, [r4, #220]	; 0xdc
   238d4:	cmp	r3, #0
   238d8:	beq	23be4 <__flatcc_fb_gen_c_verifier@@Base+0x3614>
   238dc:	cmp	r3, #1
   238e0:	beq	23bdc <__flatcc_fb_gen_c_verifier@@Base+0x360c>
   238e4:	ldr	r2, [sp, #88]	; 0x58
   238e8:	sub	r3, r3, #2
   238ec:	ldrd	r0, [r7, #96]	; 0x60
   238f0:	cmp	r2, #0
   238f4:	ldr	r2, [r7, #112]	; 0x70
   238f8:	str	r3, [r4, #220]	; 0xdc
   238fc:	mov	r3, #0
   23900:	strd	r0, [sp]
   23904:	beq	23928 <__flatcc_fb_gen_c_verifier@@Base+0x3358>
   23908:	ldr	r1, [pc, #1168]	; 23da0 <__flatcc_fb_gen_c_verifier@@Base+0x37d0>
   2390c:	mov	r0, r4
   23910:	ldr	ip, [sp, #32]
   23914:	add	r1, pc, r1
   23918:	str	ip, [sp, #8]
   2391c:	str	ip, [sp, #12]
   23920:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23924:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23928:	ldr	r1, [pc, #1140]	; 23da4 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
   2392c:	mov	r0, r4
   23930:	ldr	ip, [sp, #32]
   23934:	add	r1, pc, r1
   23938:	str	ip, [sp, #8]
   2393c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23940:	b	22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23944:	mov	r5, #0
   23948:	mov	r3, #1
   2394c:	mov	r9, r5
   23950:	str	r5, [sp, #52]	; 0x34
   23954:	str	r3, [sp, #80]	; 0x50
   23958:	ldr	r3, [sp, #80]	; 0x50
   2395c:	ands	r3, r3, r6
   23960:	str	r3, [sp, #84]	; 0x54
   23964:	beq	23bc8 <__flatcc_fb_gen_c_verifier@@Base+0x35f8>
   23968:	mov	r6, #0
   2396c:	str	r6, [sp, #56]	; 0x38
   23970:	str	r6, [sp, #60]	; 0x3c
   23974:	str	r6, [sp, #76]	; 0x4c
   23978:	b	233ec <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   2397c:	ldr	r1, [pc, #1060]	; 23da8 <__flatcc_fb_gen_c_verifier@@Base+0x37d8>
   23980:	mov	r0, r4
   23984:	add	r1, pc, r1
   23988:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2398c:	ldr	r1, [pc, #1048]	; 23dac <__flatcc_fb_gen_c_verifier@@Base+0x37dc>
   23990:	mov	r0, r4
   23994:	add	r1, pc, r1
   23998:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2399c:	ldr	r3, [r4, #220]	; 0xdc
   239a0:	cmp	r3, #0
   239a4:	beq	23b74 <__flatcc_fb_gen_c_verifier@@Base+0x35a4>
   239a8:	ldr	r1, [pc, #1024]	; 23db0 <__flatcc_fb_gen_c_verifier@@Base+0x37e0>
   239ac:	sub	r3, r3, #1
   239b0:	mov	r0, r4
   239b4:	str	r3, [r4, #220]	; 0xdc
   239b8:	add	r1, pc, r1
   239bc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   239c0:	ldr	r1, [pc, #1004]	; 23db4 <__flatcc_fb_gen_c_verifier@@Base+0x37e4>
   239c4:	mov	r0, r4
   239c8:	ldrd	r2, [r7, #96]	; 0x60
   239cc:	add	r1, pc, r1
   239d0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   239d4:	ldr	r1, [pc, #988]	; 23db8 <__flatcc_fb_gen_c_verifier@@Base+0x37e8>
   239d8:	mov	r0, r4
   239dc:	add	r1, pc, r1
   239e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   239e4:	b	235cc <__flatcc_fb_gen_c_verifier@@Base+0x2ffc>
   239e8:	ldr	r1, [pc, #972]	; 23dbc <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
   239ec:	mov	r2, #0
   239f0:	mov	r0, r4
   239f4:	mov	r8, r2
   239f8:	str	r2, [sp, #56]	; 0x38
   239fc:	add	r1, pc, r1
   23a00:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23a04:	ldr	r3, [r4, #220]	; 0xdc
   23a08:	str	r8, [sp, #60]	; 0x3c
   23a0c:	str	r8, [sp, #76]	; 0x4c
   23a10:	str	r8, [sp, #80]	; 0x50
   23a14:	str	r8, [sp, #84]	; 0x54
   23a18:	add	r3, r3, #1
   23a1c:	str	r3, [r4, #220]	; 0xdc
   23a20:	b	22e98 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   23a24:	ldr	r3, [r2, #40]	; 0x28
   23a28:	mov	r5, #1
   23a2c:	str	r9, [sp, #52]	; 0x34
   23a30:	str	r5, [sp, #68]	; 0x44
   23a34:	mov	r9, r3
   23a38:	b	22e50 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   23a3c:	mov	r8, #0
   23a40:	mov	r6, r8
   23a44:	mov	r3, #0
   23a48:	mov	r5, r3
   23a4c:	mov	r9, r3
   23a50:	mov	fp, r3
   23a54:	b	22da0 <__flatcc_fb_gen_c_verifier@@Base+0x27d0>
   23a58:	mov	r8, #1
   23a5c:	mov	r6, r8
   23a60:	b	23a44 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   23a64:	mov	r3, #0
   23a68:	str	r3, [r4, #220]	; 0xdc
   23a6c:	ldr	r3, [pc, #844]	; 23dc0 <__flatcc_fb_gen_c_verifier@@Base+0x37f0>
   23a70:	movw	r2, #539	; 0x21b
   23a74:	ldr	r1, [pc, #840]	; 23dc4 <__flatcc_fb_gen_c_verifier@@Base+0x37f4>
   23a78:	ldr	r0, [pc, #840]	; 23dc8 <__flatcc_fb_gen_c_verifier@@Base+0x37f8>
   23a7c:	add	r3, pc, r3
   23a80:	add	r3, r3, #176	; 0xb0
   23a84:	add	r1, pc, r1
   23a88:	add	r0, pc, r0
   23a8c:	bl	1400c <__assert_fail@plt>
   23a90:	ldr	r3, [pc, #820]	; 23dcc <__flatcc_fb_gen_c_verifier@@Base+0x37fc>
   23a94:	movw	r2, #490	; 0x1ea
   23a98:	ldr	r1, [pc, #816]	; 23dd0 <__flatcc_fb_gen_c_verifier@@Base+0x3800>
   23a9c:	ldr	r0, [pc, #816]	; 23dd4 <__flatcc_fb_gen_c_verifier@@Base+0x3804>
   23aa0:	add	r3, pc, r3
   23aa4:	add	r3, r3, #176	; 0xb0
   23aa8:	add	r1, pc, r1
   23aac:	add	r0, pc, r0
   23ab0:	bl	1400c <__assert_fail@plt>
   23ab4:	ldr	r3, [pc, #796]	; 23dd8 <__flatcc_fb_gen_c_verifier@@Base+0x3808>
   23ab8:	movw	r2, #559	; 0x22f
   23abc:	ldr	r1, [pc, #792]	; 23ddc <__flatcc_fb_gen_c_verifier@@Base+0x380c>
   23ac0:	ldr	r0, [pc, #792]	; 23de0 <__flatcc_fb_gen_c_verifier@@Base+0x3810>
   23ac4:	add	r3, pc, r3
   23ac8:	add	r3, r3, #176	; 0xb0
   23acc:	add	r1, pc, r1
   23ad0:	add	r0, pc, r0
   23ad4:	bl	1400c <__assert_fail@plt>
   23ad8:	ldr	r3, [pc, #772]	; 23de4 <__flatcc_fb_gen_c_verifier@@Base+0x3814>
   23adc:	movw	r2, #602	; 0x25a
   23ae0:	ldr	r1, [pc, #768]	; 23de8 <__flatcc_fb_gen_c_verifier@@Base+0x3818>
   23ae4:	ldr	r0, [pc, #768]	; 23dec <__flatcc_fb_gen_c_verifier@@Base+0x381c>
   23ae8:	add	r3, pc, r3
   23aec:	add	r3, r3, #176	; 0xb0
   23af0:	add	r1, pc, r1
   23af4:	add	r0, pc, r0
   23af8:	bl	1400c <__assert_fail@plt>
   23afc:	ldr	r2, [r7, #16]
   23b00:	mov	r3, #0
   23b04:	mov	r5, #1
   23b08:	str	r3, [sp, #56]	; 0x38
   23b0c:	str	r3, [sp, #60]	; 0x3c
   23b10:	str	r3, [sp, #76]	; 0x4c
   23b14:	mov	r9, r2
   23b18:	b	233c4 <__flatcc_fb_gen_c_verifier@@Base+0x2df4>
   23b1c:	ldr	r2, [pc, #780]	; 23e30 <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   23b20:	movw	r3, #466	; 0x1d2
   23b24:	ldr	r1, [sp, #92]	; 0x5c
   23b28:	ldr	r0, [pc, #704]	; 23df0 <__flatcc_fb_gen_c_verifier@@Base+0x3820>
   23b2c:	ldr	r4, [pc, #704]	; 23df4 <__flatcc_fb_gen_c_verifier@@Base+0x3824>
   23b30:	ldr	ip, [r1, r2]
   23b34:	add	r0, pc, r0
   23b38:	ldr	r1, [pc, #696]	; 23df8 <__flatcc_fb_gen_c_verifier@@Base+0x3828>
   23b3c:	add	r4, pc, r4
   23b40:	str	r0, [sp]
   23b44:	mov	r2, r4
   23b48:	ldr	r0, [ip]
   23b4c:	add	r1, pc, r1
   23b50:	bl	13f58 <fprintf@plt>
   23b54:	ldr	r3, [pc, #672]	; 23dfc <__flatcc_fb_gen_c_verifier@@Base+0x382c>
   23b58:	mov	r1, r4
   23b5c:	movw	r2, #466	; 0x1d2
   23b60:	ldr	r0, [pc, #664]	; 23e00 <__flatcc_fb_gen_c_verifier@@Base+0x3830>
   23b64:	add	r3, pc, r3
   23b68:	add	r3, r3, #176	; 0xb0
   23b6c:	add	r0, pc, r0
   23b70:	bl	1400c <__assert_fail@plt>
   23b74:	ldr	r3, [pc, #648]	; 23e04 <__flatcc_fb_gen_c_verifier@@Base+0x3834>
   23b78:	movw	r2, #661	; 0x295
   23b7c:	ldr	r1, [pc, #644]	; 23e08 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   23b80:	ldr	r0, [pc, #644]	; 23e0c <__flatcc_fb_gen_c_verifier@@Base+0x383c>
   23b84:	add	r3, pc, r3
   23b88:	add	r3, r3, #176	; 0xb0
   23b8c:	add	r1, pc, r1
   23b90:	add	r0, pc, r0
   23b94:	bl	1400c <__assert_fail@plt>
   23b98:	mov	sl, #0
   23b9c:	mov	r5, sl
   23ba0:	mov	r6, sl
   23ba4:	str	sl, [sp, #28]
   23ba8:	str	sl, [sp, #52]	; 0x34
   23bac:	str	sl, [sp, #68]	; 0x44
   23bb0:	str	sl, [sp, #80]	; 0x50
   23bb4:	str	sl, [sp, #84]	; 0x54
   23bb8:	b	233ec <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   23bbc:	mov	r5, r8
   23bc0:	str	r8, [sp, #88]	; 0x58
   23bc4:	b	22e7c <__flatcc_fb_gen_c_verifier@@Base+0x28ac>
   23bc8:	ldr	r3, [sp, #84]	; 0x54
   23bcc:	str	r3, [sp, #56]	; 0x38
   23bd0:	str	r3, [sp, #60]	; 0x3c
   23bd4:	str	r3, [sp, #76]	; 0x4c
   23bd8:	b	233ec <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   23bdc:	ldr	r3, [sp, #80]	; 0x50
   23be0:	str	r3, [r4, #220]	; 0xdc
   23be4:	ldr	r3, [pc, #548]	; 23e10 <__flatcc_fb_gen_c_verifier@@Base+0x3840>
   23be8:	movw	r2, #627	; 0x273
   23bec:	ldr	r1, [pc, #544]	; 23e14 <__flatcc_fb_gen_c_verifier@@Base+0x3844>
   23bf0:	ldr	r0, [pc, #544]	; 23e18 <__flatcc_fb_gen_c_verifier@@Base+0x3848>
   23bf4:	add	r3, pc, r3
   23bf8:	add	r3, r3, #176	; 0xb0
   23bfc:	add	r1, pc, r1
   23c00:	add	r0, pc, r0
   23c04:	bl	1400c <__assert_fail@plt>
   23c08:	ldr	r2, [pc, #544]	; 23e30 <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   23c0c:	movw	r3, #590	; 0x24e
   23c10:	ldr	r1, [sp, #92]	; 0x5c
   23c14:	ldr	r0, [pc, #512]	; 23e1c <__flatcc_fb_gen_c_verifier@@Base+0x384c>
   23c18:	ldr	r4, [pc, #512]	; 23e20 <__flatcc_fb_gen_c_verifier@@Base+0x3850>
   23c1c:	ldr	ip, [r1, r2]
   23c20:	add	r0, pc, r0
   23c24:	ldr	r1, [pc, #504]	; 23e24 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   23c28:	add	r4, pc, r4
   23c2c:	str	r0, [sp]
   23c30:	mov	r2, r4
   23c34:	ldr	r0, [ip]
   23c38:	add	r1, pc, r1
   23c3c:	bl	13f58 <fprintf@plt>
   23c40:	ldr	r3, [pc, #480]	; 23e28 <__flatcc_fb_gen_c_verifier@@Base+0x3858>
   23c44:	mov	r1, r4
   23c48:	movw	r2, #590	; 0x24e
   23c4c:	ldr	r0, [pc, #472]	; 23e2c <__flatcc_fb_gen_c_verifier@@Base+0x385c>
   23c50:	add	r3, pc, r3
   23c54:	add	r3, r3, #176	; 0xb0
   23c58:	add	r0, pc, r0
   23c5c:	bl	1400c <__assert_fail@plt>
   23c60:	andeq	r8, r4, r0, asr #6
   23c64:	muleq	r3, r4, ip
   23c68:	muleq	r3, r8, sp
   23c6c:	andeq	r0, r3, r8, asr #26
   23c70:	andeq	sp, r1, r8, asr sl
   23c74:			; <UNDEFINED> instruction: 0x0001dabc
   23c78:	andeq	r0, r3, r8, lsr #29
   23c7c:	andeq	r1, r3, ip, ror #3
   23c80:	andeq	r1, r3, r8, lsr #8
   23c84:	andeq	r0, r3, r8, ror #4
   23c88:	andeq	r1, r3, r4, lsl r5
   23c8c:	andeq	r0, r3, r8, ror fp
   23c90:	andeq	r0, r3, ip, asr fp
   23c94:	andeq	r0, r3, r8, asr #26
   23c98:	andeq	r0, r3, r8, ror sp
   23c9c:	andeq	sp, r1, r8, lsl r8
   23ca0:	andeq	sp, r1, r0, lsl #16
   23ca4:	andeq	r0, r3, r8, lsr fp
   23ca8:	ldrdeq	r0, [r3], -ip
   23cac:	andeq	r0, r3, r8, lsl #22
   23cb0:	andeq	r0, r3, r4, asr #22
   23cb4:	andeq	r0, r3, r0, asr #22
   23cb8:	andeq	r0, r3, r8, asr fp
   23cbc:	andeq	r0, r3, r4, asr fp
   23cc0:	andeq	r0, r3, ip, asr fp
   23cc4:	andeq	r0, r3, r4, lsr fp
   23cc8:			; <UNDEFINED> instruction: 0x0001d6b8
   23ccc:			; <UNDEFINED> instruction: 0x0001d6b8
   23cd0:	andeq	sp, r1, r0, asr #13
   23cd4:	andeq	r5, r3, r8, lsr #6
   23cd8:	andeq	sp, r1, r8, lsl #13
   23cdc:	andeq	sp, r1, r8, lsl #13
   23ce0:	andeq	sp, r1, r8, lsl #13
   23ce4:	andeq	sp, r1, r4, lsl #13
   23ce8:	andeq	sp, r1, ip, lsl #13
   23cec:	andeq	sp, r1, r8, lsl #13
   23cf0:	andeq	sp, r1, r0, ror #12
   23cf4:	andeq	sp, r1, ip, asr r6
   23cf8:	andeq	sp, r1, r4, asr r6
   23cfc:	andeq	sp, r1, r0, asr r6
   23d00:	andeq	sp, r1, r4, lsr #11
   23d04:	andeq	sp, r1, r0, lsr #11
   23d08:	andeq	r0, r3, r8, lsr #20
   23d0c:	andeq	r0, r3, r0, asr sl
   23d10:	andeq	r0, r3, r8, asr #20
   23d14:	andeq	r0, r3, ip, lsl #21
   23d18:	andeq	pc, r2, r0, lsl #27
   23d1c:	andeq	r0, r3, ip, asr #20
   23d20:	andeq	r0, r3, r4, lsl fp
   23d24:	andeq	r0, r3, r8, asr #22
   23d28:	andeq	pc, r2, r8, asr #25
   23d2c:			; <UNDEFINED> instruction: 0x000309bc
   23d30:	andeq	r0, r3, ip, ror #19
   23d34:	andeq	r0, r3, r8, lsr r6
   23d38:			; <UNDEFINED> instruction: 0x000306b4
   23d3c:			; <UNDEFINED> instruction: 0x000306bc
   23d40:	andeq	r0, r3, r0, asr #25
   23d44:	andeq	r0, r3, r8, lsl #26
   23d48:	andeq	r0, r3, r8, lsl #26
   23d4c:	andeq	pc, r2, r8, asr #22
   23d50:	andeq	r0, r3, r0, asr #27
   23d54:	andeq	r0, r3, r8, ror r9
   23d58:	andeq	r0, r3, ip, ror r9
   23d5c:	muleq	r3, r8, r9
   23d60:	strdeq	pc, [r2], -ip
   23d64:	andeq	pc, r2, r4, asr #20
   23d68:	andeq	pc, r2, ip, lsr #21
   23d6c:	andeq	r0, r3, r4, lsl #23
   23d70:	andeq	pc, r2, r4, lsl #20
   23d74:	andeq	sp, r1, ip, asr #1
   23d78:	andeq	pc, r2, ip, lsl #15
   23d7c:	ldrdeq	r5, [r2], -r0
   23d80:	andeq	r0, r3, r0, asr #18
   23d84:			; <UNDEFINED> instruction: 0x000309b4
   23d88:	andeq	sp, r1, r4, asr #1
   23d8c:	andeq	sp, r1, ip, lsr #1
   23d90:	andeq	r0, r3, r4, lsl #9
   23d94:	andeq	r0, r3, ip, lsr #9
   23d98:	andeq	r0, r3, r4, lsr #9
   23d9c:	andeq	r0, r3, ip, lsr #9
   23da0:	andeq	r0, r3, ip, lsr r9
   23da4:			; <UNDEFINED> instruction: 0x000309b0
   23da8:	andeq	r0, r3, ip, lsr #21
   23dac:			; <UNDEFINED> instruction: 0x00030ab4
   23db0:	andeq	r0, r3, r0, asr #21
   23db4:	andeq	r0, r3, r0, asr #21
   23db8:	andeq	r0, r3, r8, lsl #20
   23dbc:	andeq	r0, r3, r0, lsl #3
   23dc0:	andeq	pc, r2, r4, lsl r5	; <UNPREDICTABLE>
   23dc4:	andeq	pc, r2, ip, asr r7	; <UNPREDICTABLE>
   23dc8:	andeq	pc, r2, r4, asr #15
   23dcc:	strdeq	pc, [r2], -r0
   23dd0:	andeq	pc, r2, r8, lsr r7	; <UNPREDICTABLE>
   23dd4:	andeq	pc, r2, r0, lsr #15
   23dd8:	andeq	pc, r2, ip, asr #9
   23ddc:	andeq	pc, r2, r4, lsl r7	; <UNPREDICTABLE>
   23de0:	andeq	pc, r2, ip, ror r7	; <UNPREDICTABLE>
   23de4:	andeq	pc, r2, r8, lsr #9
   23de8:	strdeq	pc, [r2], -r0
   23dec:	andeq	pc, r2, r8, asr r7	; <UNPREDICTABLE>
   23df0:	andeq	r0, r3, ip
   23df4:	andeq	pc, r2, r4, lsr #13
   23df8:	andeq	ip, r1, ip, ror #26
   23dfc:	andeq	pc, r2, ip, lsr #8
   23e00:	andeq	r5, r2, r0, ror r2
   23e04:	andeq	pc, r2, ip, lsl #8
   23e08:	andeq	pc, r2, r4, asr r6	; <UNPREDICTABLE>
   23e0c:			; <UNDEFINED> instruction: 0x0002f6bc
   23e10:	muleq	r2, ip, r3
   23e14:	andeq	pc, r2, r4, ror #11
   23e18:	andeq	pc, r2, ip, asr #12
   23e1c:	andeq	r0, r3, r4, lsl r4
   23e20:			; <UNDEFINED> instruction: 0x0002f5b8
   23e24:	andeq	ip, r1, r0, lsl #25
   23e28:	andeq	pc, r2, r0, asr #6
   23e2c:	andeq	r5, r2, r4, lsl #3
   23e30:	muleq	r0, ip, r0
   23e34:	andeq	ip, r1, r4, ror #20
   23e38:	strdeq	ip, [r1], -r0
   23e3c:	andeq	ip, r1, r0, asr #20
   23e40:	andeq	pc, r2, r0, lsl #2
   23e44:	andeq	r4, r2, r4, asr #30
   23e48:	ldr	r2, [pc, #-32]	; 23e30 <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   23e4c:	mov	r3, #96	; 0x60
   23e50:	ldr	r1, [sp, #92]	; 0x5c
   23e54:	ldr	r0, [pc, #-40]	; 23e34 <__flatcc_fb_gen_c_verifier@@Base+0x3864>
   23e58:	ldr	r4, [pc, #-40]	; 23e38 <__flatcc_fb_gen_c_verifier@@Base+0x3868>
   23e5c:	ldr	ip, [r1, r2]
   23e60:	add	r0, pc, r0
   23e64:	ldr	r1, [pc, #-48]	; 23e3c <__flatcc_fb_gen_c_verifier@@Base+0x386c>
   23e68:	add	r4, pc, r4
   23e6c:	str	r0, [sp]
   23e70:	mov	r2, r4
   23e74:	ldr	r0, [ip]
   23e78:	add	r1, pc, r1
   23e7c:	bl	13f58 <fprintf@plt>
   23e80:	ldr	r3, [pc, #-72]	; 23e40 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   23e84:	mov	r1, r4
   23e88:	mov	r2, #96	; 0x60
   23e8c:	ldr	r0, [pc, #-80]	; 23e44 <__flatcc_fb_gen_c_verifier@@Base+0x3874>
   23e90:	add	r3, pc, r3
   23e94:	add	r3, r3, #200	; 0xc8
   23e98:	add	r0, pc, r0
   23e9c:	bl	1400c <__assert_fail@plt>
   23ea0:	strd	r4, [sp, #-20]!	; 0xffffffec
   23ea4:	mov	r5, r1
   23ea8:	mov	r4, r0
   23eac:	ldr	r1, [pc, #184]	; 23f6c <__flatcc_fb_gen_c_verifier@@Base+0x399c>
   23eb0:	strd	r6, [sp, #8]
   23eb4:	mov	r7, r2
   23eb8:	mov	r6, r3
   23ebc:	str	lr, [sp, #16]
   23ec0:	sub	sp, sp, #12
   23ec4:	ldr	r2, [sp, #32]
   23ec8:	add	r1, pc, r1
   23ecc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23ed0:	ldr	r1, [pc, #152]	; 23f70 <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   23ed4:	mov	r0, r4
   23ed8:	add	r1, pc, r1
   23edc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23ee0:	ldr	ip, [r4, #220]	; 0xdc
   23ee4:	mov	r3, r7
   23ee8:	add	r2, r5, #12
   23eec:	add	r1, r5, #8
   23ef0:	mov	r0, r4
   23ef4:	str	r6, [sp]
   23ef8:	add	ip, ip, #1
   23efc:	str	ip, [r4, #220]	; 0xdc
   23f00:	bl	22c88 <__flatcc_fb_gen_c_verifier@@Base+0x26b8>
   23f04:	ldr	r3, [r4, #220]	; 0xdc
   23f08:	cmp	r3, #0
   23f0c:	beq	23f48 <__flatcc_fb_gen_c_verifier@@Base+0x3978>
   23f10:	ldr	r1, [pc, #92]	; 23f74 <__flatcc_fb_gen_c_verifier@@Base+0x39a4>
   23f14:	sub	r3, r3, #1
   23f18:	mov	r0, r4
   23f1c:	str	r3, [r4, #220]	; 0xdc
   23f20:	add	r1, pc, r1
   23f24:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23f28:	ldr	r3, [r4, #220]	; 0xdc
   23f2c:	add	r3, r3, #1
   23f30:	str	r3, [r4, #220]	; 0xdc
   23f34:	add	sp, sp, #12
   23f38:	ldrd	r4, [sp]
   23f3c:	ldrd	r6, [sp, #8]
   23f40:	add	sp, sp, #16
   23f44:	pop	{pc}		; (ldr pc, [sp], #4)
   23f48:	ldr	r3, [pc, #40]	; 23f78 <__flatcc_fb_gen_c_verifier@@Base+0x39a8>
   23f4c:	movw	r2, #675	; 0x2a3
   23f50:	ldr	r1, [pc, #36]	; 23f7c <__flatcc_fb_gen_c_verifier@@Base+0x39ac>
   23f54:	ldr	r0, [pc, #36]	; 23f80 <__flatcc_fb_gen_c_verifier@@Base+0x39b0>
   23f58:	add	r3, pc, r3
   23f5c:	add	r3, r3, #220	; 0xdc
   23f60:	add	r1, pc, r1
   23f64:	add	r0, pc, r0
   23f68:	bl	1400c <__assert_fail@plt>
   23f6c:	andeq	r0, r3, r8, ror r6
   23f70:	andeq	r0, r3, ip, lsr #13
   23f74:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   23f78:	andeq	pc, r2, r8, lsr r0	; <UNPREDICTABLE>
   23f7c:	andeq	pc, r2, r0, lsl #5
   23f80:	andeq	pc, r2, r8, ror #5
   23f84:	ldrh	r3, [r1, #8]
   23f88:	cmp	r3, #4
   23f8c:	bxhi	lr
   23f90:	strd	r4, [sp, #-32]!	; 0xffffffe0
   23f94:	strd	r6, [sp, #8]
   23f98:	mov	r7, r0
   23f9c:	mov	r6, r1
   23fa0:	ldr	r0, [r0, #40]	; 0x28
   23fa4:	strd	r8, [sp, #16]
   23fa8:	ldr	r1, [r1, #16]
   23fac:	str	sl, [sp, #24]
   23fb0:	str	lr, [sp, #28]
   23fb4:	add	r0, r0, #172	; 0xac
   23fb8:	bl	2b21c <ptr_set_find_item@@Base>
   23fbc:	cmp	r0, #0
   23fc0:	beq	24070 <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   23fc4:	ldr	r3, [r7]
   23fc8:	ldr	r9, [r7, #36]	; 0x24
   23fcc:	cmp	r3, #0
   23fd0:	moveq	r4, r9
   23fd4:	beq	24014 <__flatcc_fb_gen_c_verifier@@Base+0x3a44>
   23fd8:	ldr	r3, [r6, #12]
   23fdc:	mov	r4, r9
   23fe0:	ldr	r5, [r3]
   23fe4:	cmp	r5, #0
   23fe8:	beq	24014 <__flatcc_fb_gen_c_verifier@@Base+0x3a44>
   23fec:	mov	r8, #46	; 0x2e
   23ff0:	ldr	r3, [r5, #4]
   23ff4:	mov	r0, r4
   23ff8:	ldm	r3, {r1, r2}
   23ffc:	add	r4, r4, r2
   24000:	bl	13eb0 <memcpy@plt>
   24004:	strb	r8, [r4], #1
   24008:	ldr	r5, [r5]
   2400c:	cmp	r5, #0
   24010:	bne	23ff0 <__flatcc_fb_gen_c_verifier@@Base+0x3a20>
   24014:	ldr	r3, [r6, #4]
   24018:	mov	r0, r4
   2401c:	ldm	r3, {r1, r5}
   24020:	mov	r2, r5
   24024:	bl	13eb0 <memcpy@plt>
   24028:	mov	r2, #0
   2402c:	add	r3, r4, r5
   24030:	add	r3, r3, #1
   24034:	strb	r2, [r4, r5]
   24038:	ldrh	r2, [r6, #8]
   2403c:	str	r3, [r7, #36]	; 0x24
   24040:	cmp	r2, #4
   24044:	addls	pc, pc, r2, lsl #2
   24048:	b	24070 <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   2404c:	b	24088 <__flatcc_fb_gen_c_verifier@@Base+0x3ab8>
   24050:	b	24088 <__flatcc_fb_gen_c_verifier@@Base+0x3ab8>
   24054:	b	24070 <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   24058:	b	24060 <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   2405c:	b	24060 <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   24060:	ldr	r3, [r7, #32]
   24064:	add	r2, r3, #8
   24068:	stm	r3, {r6, r9}
   2406c:	str	r2, [r7, #32]
   24070:	ldrd	r4, [sp]
   24074:	ldrd	r6, [sp, #8]
   24078:	ldrd	r8, [sp, #16]
   2407c:	ldr	sl, [sp, #24]
   24080:	add	sp, sp, #28
   24084:	pop	{pc}		; (ldr pc, [sp], #4)
   24088:	ldr	r3, [r7, #28]
   2408c:	add	r2, r3, #8
   24090:	stm	r3, {r6, r9}
   24094:	str	r2, [r7, #28]
   24098:	b	24070 <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   2409c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   240a0:	subs	r5, r0, #0
   240a4:	strd	r6, [sp, #8]
   240a8:	strd	r8, [sp, #16]
   240ac:	strd	sl, [sp, #24]
   240b0:	str	lr, [sp, #32]
   240b4:	sub	sp, sp, #4
   240b8:	beq	24240 <__flatcc_fb_gen_c_verifier@@Base+0x3c70>
   240bc:	mov	r0, #0
   240c0:	mov	r4, r5
   240c4:	mov	r7, r0
   240c8:	b	240dc <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   240cc:	mov	r7, r2
   240d0:	ldr	r4, [r4]
   240d4:	cmp	r4, #0
   240d8:	beq	24124 <__flatcc_fb_gen_c_verifier@@Base+0x3b54>
   240dc:	ldrh	r3, [r4, #72]	; 0x48
   240e0:	add	r2, r7, #1
   240e4:	tst	r3, #4
   240e8:	bne	240d0 <__flatcc_fb_gen_c_verifier@@Base+0x3b00>
   240ec:	ldrh	r3, [r4, #24]
   240f0:	sub	r3, r3, #14
   240f4:	cmp	r3, #1
   240f8:	bhi	240cc <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   240fc:	ldr	r3, [r4, #16]
   24100:	ldrh	r3, [r3, #8]
   24104:	cmp	r3, #4
   24108:	bne	240cc <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   2410c:	ldr	r3, [r4, #4]
   24110:	add	r2, r7, #2
   24114:	ldr	r3, [r3, #4]
   24118:	add	r3, r3, #6
   2411c:	add	r0, r0, r3
   24120:	b	240cc <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   24124:	cmp	r7, #0
   24128:	str	r7, [r1]
   2412c:	beq	24238 <__flatcc_fb_gen_c_verifier@@Base+0x3c68>
   24130:	lsl	r8, r7, #4
   24134:	add	r0, r0, r8
   24138:	bl	13f10 <malloc@plt>
   2413c:	subs	r9, r0, #0
   24140:	beq	24238 <__flatcc_fb_gen_c_verifier@@Base+0x3c68>
   24144:	ldr	sl, [pc, #256]	; 2424c <__flatcc_fb_gen_c_verifier@@Base+0x3c7c>
   24148:	add	r8, r9, r8
   2414c:	mov	r6, r9
   24150:	mov	fp, #1
   24154:	add	sl, pc, sl
   24158:	b	2416c <__flatcc_fb_gen_c_verifier@@Base+0x3b9c>
   2415c:	mov	r6, ip
   24160:	ldr	r5, [r5]
   24164:	cmp	r5, #0
   24168:	beq	24200 <__flatcc_fb_gen_c_verifier@@Base+0x3c30>
   2416c:	ldrh	r3, [r5, #72]	; 0x48
   24170:	add	ip, r6, #16
   24174:	ands	r3, r3, #4
   24178:	bne	24160 <__flatcc_fb_gen_c_verifier@@Base+0x3b90>
   2417c:	ldr	r2, [r5, #4]
   24180:	ldrh	r0, [r5, #24]
   24184:	ldm	r2, {r1, r2}
   24188:	sub	r0, r0, #14
   2418c:	cmp	r0, #1
   24190:	stm	r6, {r1, r2, r5}
   24194:	str	r3, [r6, #12]
   24198:	bhi	2415c <__flatcc_fb_gen_c_verifier@@Base+0x3b8c>
   2419c:	ldr	r3, [r5, #16]
   241a0:	ldrh	r3, [r3, #8]
   241a4:	cmp	r3, #4
   241a8:	bne	2415c <__flatcc_fb_gen_c_verifier@@Base+0x3b8c>
   241ac:	add	r3, r2, #5
   241b0:	mov	r0, r8
   241b4:	str	r4, [r5, #112]	; 0x70
   241b8:	str	r8, [r6, #16]
   241bc:	add	r4, r4, #1
   241c0:	add	r6, r6, #32
   241c4:	str	r3, [r6, #-12]
   241c8:	bl	13eb0 <memcpy@plt>
   241cc:	ldr	r2, [r5, #4]
   241d0:	ldrh	r3, [sl, #4]
   241d4:	ldr	r0, [sl]
   241d8:	ldr	r1, [r2, #4]
   241dc:	add	r2, r8, r1
   241e0:	str	r0, [r8, r1]
   241e4:	add	r8, r2, #6
   241e8:	strh	r3, [r2, #4]
   241ec:	str	r5, [r6, #-8]
   241f0:	ldr	r5, [r5]
   241f4:	str	fp, [r6, #-4]
   241f8:	cmp	r5, #0
   241fc:	bne	2416c <__flatcc_fb_gen_c_verifier@@Base+0x3b9c>
   24200:	ldr	r3, [pc, #72]	; 24250 <__flatcc_fb_gen_c_verifier@@Base+0x3c80>
   24204:	mov	r1, r7
   24208:	mov	r2, #16
   2420c:	mov	r0, r9
   24210:	add	r3, pc, r3
   24214:	bl	13fdc <qsort@plt>
   24218:	mov	r0, r9
   2421c:	add	sp, sp, #4
   24220:	ldrd	r4, [sp]
   24224:	ldrd	r6, [sp, #8]
   24228:	ldrd	r8, [sp, #16]
   2422c:	ldrd	sl, [sp, #24]
   24230:	add	sp, sp, #32
   24234:	pop	{pc}		; (ldr pc, [sp], #4)
   24238:	mov	r9, #0
   2423c:	b	24218 <__flatcc_fb_gen_c_verifier@@Base+0x3c48>
   24240:	mov	r9, r5
   24244:	str	r5, [r1]
   24248:	b	24218 <__flatcc_fb_gen_c_verifier@@Base+0x3c48>
   2424c:	andeq	r3, r3, r0, lsr fp
   24250:			; <UNDEFINED> instruction: 0xffffe2a8
   24254:	ldrh	r2, [r1, #8]
   24258:	mov	r3, #0
   2425c:	strd	r4, [sp, #-20]!	; 0xffffffec
   24260:	strd	r6, [sp, #8]
   24264:	ldr	r7, [pc, #832]	; 245ac <__flatcc_fb_gen_c_verifier@@Base+0x3fdc>
   24268:	str	lr, [sp, #16]
   2426c:	sub	sp, sp, #268	; 0x10c
   24270:	add	r5, sp, #16
   24274:	sub	r2, r2, #3
   24278:	cmp	r2, #1
   2427c:	str	r3, [sp, #12]
   24280:	str	r3, [sp, #16]
   24284:	add	r7, pc, r7
   24288:	str	r3, [r5, #4]
   2428c:	str	r3, [r5, #8]
   24290:	str	r3, [r5, #12]
   24294:	str	r3, [r5, #16]
   24298:	str	r3, [r5, #20]
   2429c:	str	r3, [r5, #24]
   242a0:	bhi	24540 <__flatcc_fb_gen_c_verifier@@Base+0x3f70>
   242a4:	mov	r6, r1
   242a8:	mov	r4, r0
   242ac:	add	r1, sp, #12
   242b0:	ldr	r0, [r6, #20]
   242b4:	bl	2409c <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   242b8:	cmp	r0, #0
   242bc:	str	r0, [sp, #16]
   242c0:	beq	244bc <__flatcc_fb_gen_c_verifier@@Base+0x3eec>
   242c4:	ldr	ip, [pc, #740]	; 245b0 <__flatcc_fb_gen_c_verifier@@Base+0x3fe0>
   242c8:	mov	r1, #2
   242cc:	add	r7, sp, #44	; 0x2c
   242d0:	mov	r2, #220	; 0xdc
   242d4:	mov	r0, r7
   242d8:	str	r6, [sp, #28]
   242dc:	ldr	r3, [pc, #720]	; 245b4 <__flatcc_fb_gen_c_verifier@@Base+0x3fe4>
   242e0:	str	r1, [sp, #32]
   242e4:	mov	r1, #0
   242e8:	add	ip, pc, ip
   242ec:	add	r3, pc, r3
   242f0:	str	ip, [sp, #20]
   242f4:	str	r3, [sp, #24]
   242f8:	bl	13f70 <memset@plt>
   242fc:	mov	r2, r7
   24300:	mov	r1, r6
   24304:	ldr	r0, [r6, #12]
   24308:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2430c:	ldr	r1, [pc, #676]	; 245b8 <__flatcc_fb_gen_c_verifier@@Base+0x3fe8>
   24310:	mov	r2, r7
   24314:	mov	r0, r4
   24318:	add	r1, pc, r1
   2431c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24320:	ldr	r3, [r4, #220]	; 0xdc
   24324:	mov	r0, r4
   24328:	ldr	r1, [pc, #652]	; 245bc <__flatcc_fb_gen_c_verifier@@Base+0x3fec>
   2432c:	add	r3, r3, #2
   24330:	add	r1, pc, r1
   24334:	str	r3, [r4, #220]	; 0xdc
   24338:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2433c:	ldr	r3, [r4, #220]	; 0xdc
   24340:	cmp	r3, #0
   24344:	beq	2451c <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   24348:	cmp	r3, #1
   2434c:	moveq	r3, #0
   24350:	streq	r3, [r4, #220]	; 0xdc
   24354:	beq	2451c <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   24358:	ldr	r1, [pc, #608]	; 245c0 <__flatcc_fb_gen_c_verifier@@Base+0x3ff0>
   2435c:	sub	r3, r3, #2
   24360:	mov	r0, r4
   24364:	str	r3, [r4, #220]	; 0xdc
   24368:	add	r1, pc, r1
   2436c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24370:	ldr	r3, [r4, #220]	; 0xdc
   24374:	ldr	r2, [sp, #12]
   24378:	add	r3, r3, #1
   2437c:	cmp	r2, #0
   24380:	str	r3, [r4, #220]	; 0xdc
   24384:	beq	24464 <__flatcc_fb_gen_c_verifier@@Base+0x3e94>
   24388:	ldr	r1, [pc, #564]	; 245c4 <__flatcc_fb_gen_c_verifier@@Base+0x3ff4>
   2438c:	mov	r0, r4
   24390:	add	r1, pc, r1
   24394:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24398:	ldr	r1, [pc, #552]	; 245c8 <__flatcc_fb_gen_c_verifier@@Base+0x3ff8>
   2439c:	mov	r0, r4
   243a0:	add	r1, pc, r1
   243a4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243a8:	ldr	r1, [pc, #540]	; 245cc <__flatcc_fb_gen_c_verifier@@Base+0x3ffc>
   243ac:	mov	r0, r4
   243b0:	add	r1, pc, r1
   243b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243b8:	ldr	r1, [pc, #528]	; 245d0 <__flatcc_fb_gen_c_verifier@@Base+0x4000>
   243bc:	mov	r0, r4
   243c0:	add	r1, pc, r1
   243c4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243c8:	ldr	r1, [pc, #516]	; 245d4 <__flatcc_fb_gen_c_verifier@@Base+0x4004>
   243cc:	mov	r0, r4
   243d0:	add	r1, pc, r1
   243d4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243d8:	ldr	r3, [sp, #12]
   243dc:	mov	ip, #0
   243e0:	mov	r1, r5
   243e4:	mov	r2, ip
   243e8:	mov	r0, r4
   243ec:	str	ip, [sp]
   243f0:	sub	r3, r3, #1
   243f4:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   243f8:	ldr	r1, [pc, #472]	; 245d8 <__flatcc_fb_gen_c_verifier@@Base+0x4008>
   243fc:	mov	r0, r4
   24400:	add	r1, pc, r1
   24404:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24408:	ldr	r3, [r4, #220]	; 0xdc
   2440c:	cmp	r3, #0
   24410:	beq	24564 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   24414:	ldr	r1, [pc, #448]	; 245dc <__flatcc_fb_gen_c_verifier@@Base+0x400c>
   24418:	sub	r3, r3, #1
   2441c:	mov	r0, r4
   24420:	str	r3, [r4, #220]	; 0xdc
   24424:	add	r1, pc, r1
   24428:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2442c:	ldr	r1, [pc, #428]	; 245e0 <__flatcc_fb_gen_c_verifier@@Base+0x4010>
   24430:	mov	r0, r4
   24434:	add	r1, pc, r1
   24438:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2443c:	ldr	r0, [sp, #16]
   24440:	cmp	r0, #0
   24444:	beq	2444c <__flatcc_fb_gen_c_verifier@@Base+0x3e7c>
   24448:	bl	13ea4 <free@plt>
   2444c:	mov	r0, #0
   24450:	add	sp, sp, #268	; 0x10c
   24454:	ldrd	r4, [sp]
   24458:	ldrd	r6, [sp, #8]
   2445c:	add	sp, sp, #16
   24460:	pop	{pc}		; (ldr pc, [sp], #4)
   24464:	ldr	r1, [pc, #376]	; 245e4 <__flatcc_fb_gen_c_verifier@@Base+0x4014>
   24468:	mov	r0, r4
   2446c:	add	r1, pc, r1
   24470:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24474:	ldr	r1, [pc, #364]	; 245e8 <__flatcc_fb_gen_c_verifier@@Base+0x4018>
   24478:	mov	r0, r4
   2447c:	add	r1, pc, r1
   24480:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24484:	ldr	r1, [pc, #352]	; 245ec <__flatcc_fb_gen_c_verifier@@Base+0x401c>
   24488:	mov	r0, r4
   2448c:	add	r1, pc, r1
   24490:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24494:	ldr	r3, [r4, #220]	; 0xdc
   24498:	cmp	r3, #0
   2449c:	beq	24588 <__flatcc_fb_gen_c_verifier@@Base+0x3fb8>
   244a0:	ldr	r1, [pc, #328]	; 245f0 <__flatcc_fb_gen_c_verifier@@Base+0x4020>
   244a4:	sub	r3, r3, #1
   244a8:	mov	r0, r4
   244ac:	str	r3, [r4, #220]	; 0xdc
   244b0:	add	r1, pc, r1
   244b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   244b8:	b	2442c <__flatcc_fb_gen_c_verifier@@Base+0x3e5c>
   244bc:	ldr	r3, [sp, #12]
   244c0:	cmp	r3, #0
   244c4:	ble	242c4 <__flatcc_fb_gen_c_verifier@@Base+0x3cf4>
   244c8:	ldr	r2, [pc, #292]	; 245f4 <__flatcc_fb_gen_c_verifier@@Base+0x4024>
   244cc:	movw	r3, #1249	; 0x4e1
   244d0:	ldr	r0, [pc, #288]	; 245f8 <__flatcc_fb_gen_c_verifier@@Base+0x4028>
   244d4:	ldr	r4, [pc, #288]	; 245fc <__flatcc_fb_gen_c_verifier@@Base+0x402c>
   244d8:	ldr	r1, [pc, #288]	; 24600 <__flatcc_fb_gen_c_verifier@@Base+0x4030>
   244dc:	add	r0, pc, r0
   244e0:	ldr	ip, [r7, r2]
   244e4:	add	r4, pc, r4
   244e8:	str	r0, [sp]
   244ec:	mov	r2, r4
   244f0:	add	r1, pc, r1
   244f4:	ldr	r0, [ip]
   244f8:	bl	13f58 <fprintf@plt>
   244fc:	ldr	r3, [pc, #256]	; 24604 <__flatcc_fb_gen_c_verifier@@Base+0x4034>
   24500:	mov	r1, r4
   24504:	movw	r2, #1249	; 0x4e1
   24508:	ldr	r0, [pc, #248]	; 24608 <__flatcc_fb_gen_c_verifier@@Base+0x4038>
   2450c:	add	r3, pc, r3
   24510:	add	r3, r3, #236	; 0xec
   24514:	add	r0, pc, r0
   24518:	bl	1400c <__assert_fail@plt>
   2451c:	ldr	r3, [pc, #232]	; 2460c <__flatcc_fb_gen_c_verifier@@Base+0x403c>
   24520:	movw	r2, #1263	; 0x4ef
   24524:	ldr	r1, [pc, #228]	; 24610 <__flatcc_fb_gen_c_verifier@@Base+0x4040>
   24528:	ldr	r0, [pc, #228]	; 24614 <__flatcc_fb_gen_c_verifier@@Base+0x4044>
   2452c:	add	r3, pc, r3
   24530:	add	r3, r3, #236	; 0xec
   24534:	add	r1, pc, r1
   24538:	add	r0, pc, r0
   2453c:	bl	1400c <__assert_fail@plt>
   24540:	ldr	r3, [pc, #208]	; 24618 <__flatcc_fb_gen_c_verifier@@Base+0x4048>
   24544:	movw	r2, #1246	; 0x4de
   24548:	ldr	r1, [pc, #204]	; 2461c <__flatcc_fb_gen_c_verifier@@Base+0x404c>
   2454c:	ldr	r0, [pc, #204]	; 24620 <__flatcc_fb_gen_c_verifier@@Base+0x4050>
   24550:	add	r3, pc, r3
   24554:	add	r3, r3, #236	; 0xec
   24558:	add	r1, pc, r1
   2455c:	add	r0, pc, r0
   24560:	bl	1400c <__assert_fail@plt>
   24564:	ldr	r3, [pc, #184]	; 24624 <__flatcc_fb_gen_c_verifier@@Base+0x4054>
   24568:	movw	r2, #1278	; 0x4fe
   2456c:	ldr	r1, [pc, #180]	; 24628 <__flatcc_fb_gen_c_verifier@@Base+0x4058>
   24570:	ldr	r0, [pc, #180]	; 2462c <__flatcc_fb_gen_c_verifier@@Base+0x405c>
   24574:	add	r3, pc, r3
   24578:	add	r3, r3, #236	; 0xec
   2457c:	add	r1, pc, r1
   24580:	add	r0, pc, r0
   24584:	bl	1400c <__assert_fail@plt>
   24588:	ldr	r3, [pc, #160]	; 24630 <__flatcc_fb_gen_c_verifier@@Base+0x4060>
   2458c:	movw	r2, #1269	; 0x4f5
   24590:	ldr	r1, [pc, #156]	; 24634 <__flatcc_fb_gen_c_verifier@@Base+0x4064>
   24594:	ldr	r0, [pc, #156]	; 24638 <__flatcc_fb_gen_c_verifier@@Base+0x4068>
   24598:	add	r3, pc, r3
   2459c:	add	r3, r3, #236	; 0xec
   245a0:	add	r1, pc, r1
   245a4:	add	r0, pc, r0
   245a8:	bl	1400c <__assert_fail@plt>
   245ac:	andeq	r6, r4, r4, ror sp
   245b0:			; <UNDEFINED> instruction: 0xffffe688
   245b4:			; <UNDEFINED> instruction: 0xffffc7c8
   245b8:	andeq	r0, r3, r0, lsl #5
   245bc:	andeq	r0, r3, ip, asr #5
   245c0:	andeq	r1, r3, r4, ror #21
   245c4:	andeq	pc, r2, r0, lsl #12
   245c8:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   245cc:	andeq	pc, r2, r4, lsl r6	; <UNPREDICTABLE>
   245d0:	andeq	r6, r2, r0, lsr #5
   245d4:	andeq	lr, r2, r4, lsl #31
   245d8:	ldrdeq	pc, [r2], -r0
   245dc:	andeq	lr, r2, r4, lsr lr
   245e0:	andeq	r6, r2, ip, lsr #4
   245e4:	andeq	r0, r3, r4, asr #3
   245e8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   245ec:	andeq	pc, r2, r4, ror #9
   245f0:	andeq	lr, r2, r8, lsr #27
   245f4:	muleq	r0, ip, r0
   245f8:	strdeq	pc, [r2], -r0
   245fc:	strdeq	lr, [r2], -ip
   24600:	andeq	ip, r1, r8, asr #7
   24604:	andeq	lr, r2, r4, lsl #21
   24608:	andeq	r4, r2, r8, asr #17
   2460c:	andeq	lr, r2, r4, ror #20
   24610:	andeq	lr, r2, ip, lsr #25
   24614:	andeq	lr, r2, r4, lsl sp
   24618:	andeq	lr, r2, r0, asr #20
   2461c:	andeq	lr, r2, r8, lsl #25
   24620:	muleq	r1, r4, lr
   24624:	andeq	lr, r2, ip, lsl sl
   24628:	andeq	lr, r2, r4, ror #24
   2462c:	andeq	lr, r2, ip, asr #25
   24630:	strdeq	lr, [r2], -r8
   24634:	andeq	lr, r2, r0, asr #24
   24638:	andeq	lr, r2, r8, lsr #25
   2463c:	ldrh	r3, [r1, #8]
   24640:	sub	r3, r3, #3
   24644:	cmp	r3, #1
   24648:	bxhi	lr
   2464c:	str	r4, [sp, #-8]!
   24650:	mov	r4, r0
   24654:	ldr	r0, [r0, #4]
   24658:	ldr	r1, [r1, #16]
   2465c:	str	lr, [sp, #4]
   24660:	add	r0, r0, #172	; 0xac
   24664:	bl	2b21c <ptr_set_find_item@@Base>
   24668:	cmp	r0, #0
   2466c:	beq	2467c <__flatcc_fb_gen_c_verifier@@Base+0x40ac>
   24670:	ldr	r3, [r4]
   24674:	add	r3, r3, #1
   24678:	str	r3, [r4]
   2467c:	ldr	r4, [sp]
   24680:	add	sp, sp, #4
   24684:	pop	{pc}		; (ldr pc, [sp], #4)
   24688:	ldrh	r3, [r1, #8]
   2468c:	sub	r3, r3, #3
   24690:	cmp	r3, #1
   24694:	bxhi	lr
   24698:	strd	r4, [sp, #-16]!
   2469c:	mov	r5, r0
   246a0:	mov	r4, r1
   246a4:	ldr	r0, [r0, #4]
   246a8:	ldr	r1, [r1, #16]
   246ac:	str	r6, [sp, #8]
   246b0:	str	lr, [sp, #12]
   246b4:	add	r0, r0, #172	; 0xac
   246b8:	bl	2b21c <ptr_set_find_item@@Base>
   246bc:	cmp	r0, #0
   246c0:	beq	246e0 <__flatcc_fb_gen_c_verifier@@Base+0x4110>
   246c4:	ldr	r2, [r4, #4]
   246c8:	ldr	r3, [r5, #8]
   246cc:	ldrd	r0, [r2]
   246d0:	add	r2, r3, #16
   246d4:	strd	r0, [r3]
   246d8:	str	r4, [r3, #8]
   246dc:	str	r2, [r5, #8]
   246e0:	ldrd	r4, [sp]
   246e4:	ldr	r6, [sp, #8]
   246e8:	add	sp, sp, #12
   246ec:	pop	{pc}		; (ldr pc, [sp], #4)
   246f0:	ldrh	r3, [r1, #8]
   246f4:	cmp	r3, #4
   246f8:	bxhi	lr
   246fc:	strd	r4, [sp, #-16]!
   24700:	mov	r4, r0
   24704:	mov	r5, r1
   24708:	ldr	r0, [r0, #40]	; 0x28
   2470c:	ldr	r1, [r1, #16]
   24710:	str	r6, [sp, #8]
   24714:	str	lr, [sp, #12]
   24718:	add	r0, r0, #172	; 0xac
   2471c:	bl	2b21c <ptr_set_find_item@@Base>
   24720:	cmp	r0, #0
   24724:	beq	247b0 <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   24728:	ldr	ip, [r4]
   2472c:	cmp	ip, #0
   24730:	beq	24764 <__flatcc_fb_gen_c_verifier@@Base+0x4194>
   24734:	ldr	r3, [r5, #12]
   24738:	ldr	r3, [r3]
   2473c:	cmp	r3, #0
   24740:	beq	247dc <__flatcc_fb_gen_c_verifier@@Base+0x420c>
   24744:	mov	ip, #0
   24748:	ldr	r2, [r3, #4]
   2474c:	ldr	r3, [r3]
   24750:	ldr	r2, [r2, #4]
   24754:	cmp	r3, #0
   24758:	add	r2, r2, #1
   2475c:	add	ip, ip, r2
   24760:	bne	24748 <__flatcc_fb_gen_c_verifier@@Base+0x4178>
   24764:	ldr	r3, [r5, #4]
   24768:	ldr	r1, [r4, #12]
   2476c:	ldrh	r2, [r5, #8]
   24770:	ldr	r3, [r3, #4]
   24774:	add	r3, r3, r1
   24778:	add	r3, r3, #1
   2477c:	add	ip, r3, ip
   24780:	str	ip, [r4, #12]
   24784:	cmp	r2, #4
   24788:	addls	pc, pc, r2, lsl #2
   2478c:	b	247b0 <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   24790:	b	247c0 <__flatcc_fb_gen_c_verifier@@Base+0x41f0>
   24794:	b	247c0 <__flatcc_fb_gen_c_verifier@@Base+0x41f0>
   24798:	b	247b0 <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   2479c:	b	247a4 <__flatcc_fb_gen_c_verifier@@Base+0x41d4>
   247a0:	b	247a4 <__flatcc_fb_gen_c_verifier@@Base+0x41d4>
   247a4:	ldr	r3, [r4, #8]
   247a8:	add	r3, r3, #1
   247ac:	str	r3, [r4, #8]
   247b0:	ldrd	r4, [sp]
   247b4:	ldr	r6, [sp, #8]
   247b8:	add	sp, sp, #12
   247bc:	pop	{pc}		; (ldr pc, [sp], #4)
   247c0:	ldr	r3, [r4, #4]
   247c4:	ldr	r6, [sp, #8]
   247c8:	add	r3, r3, #1
   247cc:	str	r3, [r4, #4]
   247d0:	ldrd	r4, [sp]
   247d4:	add	sp, sp, #12
   247d8:	pop	{pc}		; (ldr pc, [sp], #4)
   247dc:	mov	ip, r3
   247e0:	b	24764 <__flatcc_fb_gen_c_verifier@@Base+0x4194>

000247e4 <__flatcc_fb_gen_c_json_parser@@Base>:
   247e4:	ldr	r2, [pc, #4040]	; 257b4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   247e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   247ec:	mov	r4, r0
   247f0:	ldr	r1, [pc, #4032]	; 257b8 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   247f4:	ldr	r3, [r0, #208]	; 0xd0
   247f8:	add	r2, pc, r2
   247fc:	strd	r6, [sp, #8]
   24800:	strd	r8, [sp, #16]
   24804:	strd	sl, [sp, #24]
   24808:	add	r1, pc, r1
   2480c:	str	lr, [sp, #32]
   24810:	sub	sp, sp, #292	; 0x124
   24814:	ldr	r5, [pc, #4000]	; 257bc <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   24818:	str	r2, [sp, #28]
   2481c:	ldr	r2, [r3, #164]	; 0xa4
   24820:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24824:	ldr	r1, [pc, #3988]	; 257c0 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   24828:	mov	r0, r4
   2482c:	add	r5, pc, r5
   24830:	ldr	r3, [r4, #208]	; 0xd0
   24834:	add	r1, pc, r1
   24838:	ldr	r2, [r3, #164]	; 0xa4
   2483c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24840:	mov	r0, r4
   24844:	mov	r1, r5
   24848:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2484c:	ldr	r1, [pc, #3952]	; 257c4 <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   24850:	mov	r0, r4
   24854:	add	r1, pc, r1
   24858:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2485c:	mov	r1, r5
   24860:	mov	r0, r4
   24864:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24868:	ldr	r1, [pc, #3928]	; 257c8 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   2486c:	mov	r0, r4
   24870:	add	r1, pc, r1
   24874:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24878:	ldr	r2, [pc, #3916]	; 257cc <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   2487c:	mov	r0, r4
   24880:	ldr	r1, [pc, #3912]	; 257d0 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   24884:	add	r2, pc, r2
   24888:	add	r1, pc, r1
   2488c:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   24890:	ldr	r3, [r4, #212]	; 0xd4
   24894:	ldr	r3, [r3, #140]	; 0x8c
   24898:	cmp	r3, #0
   2489c:	bne	25f98 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   248a0:	ldr	r8, [pc, #3884]	; 257d4 <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   248a4:	mov	r0, r4
   248a8:	add	r5, sp, #68	; 0x44
   248ac:	add	r8, pc, r8
   248b0:	mov	r1, r8
   248b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   248b8:	ldr	r7, [r4, #208]	; 0xd0
   248bc:	mov	r0, r5
   248c0:	mov	r2, #220	; 0xdc
   248c4:	mov	r1, #0
   248c8:	ldr	r6, [r7, #52]	; 0x34
   248cc:	bl	13f70 <memset@plt>
   248d0:	cmp	r6, #0
   248d4:	beq	248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   248d8:	ldrh	r3, [r6, #8]
   248dc:	cmp	r3, #1
   248e0:	bls	261d4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f0>
   248e4:	ldr	r6, [r7, #40]	; 0x28
   248e8:	cmp	r6, #0
   248ec:	beq	249c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc>
   248f0:	ldr	r9, [pc, #3808]	; 257d8 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   248f4:	ldr	r8, [pc, #3808]	; 257dc <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   248f8:	ldr	r7, [pc, #3808]	; 257e0 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   248fc:	add	r9, pc, r9
   24900:	add	r8, pc, r8
   24904:	add	r7, pc, r7
   24908:	ldrh	r3, [r6, #8]
   2490c:	cmp	r3, #4
   24910:	addls	pc, pc, r3, lsl #2
   24914:	b	249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   24918:	b	24b5c <__flatcc_fb_gen_c_json_parser@@Base+0x378>
   2491c:	b	24aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0>
   24920:	b	249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   24924:	b	24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc>
   24928:	b	2492c <__flatcc_fb_gen_c_json_parser@@Base+0x148>
   2492c:	mov	r2, r5
   24930:	mov	r1, r6
   24934:	ldr	r0, [r6, #12]
   24938:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2493c:	ldr	r1, [pc, #3744]	; 257e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   24940:	mov	r2, r5
   24944:	mov	r0, r4
   24948:	add	r1, pc, r1
   2494c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24950:	ldr	r1, [pc, #3728]	; 257e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   24954:	mov	r2, r5
   24958:	mov	r0, r4
   2495c:	add	r1, pc, r1
   24960:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24964:	ldr	r1, [pc, #3712]	; 257ec <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   24968:	mov	r2, r5
   2496c:	mov	r0, r4
   24970:	add	r1, pc, r1
   24974:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24978:	ldr	r3, [r4, #220]	; 0xdc
   2497c:	mov	r0, r4
   24980:	ldr	r1, [pc, #3688]	; 257f0 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   24984:	add	r3, r3, #2
   24988:	add	r1, pc, r1
   2498c:	str	r3, [r4, #220]	; 0xdc
   24990:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24994:	ldr	r3, [r4, #220]	; 0xdc
   24998:	cmp	r3, #0
   2499c:	beq	26344 <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   249a0:	cmp	r3, #1
   249a4:	beq	2633c <__flatcc_fb_gen_c_json_parser@@Base+0x1b58>
   249a8:	sub	r3, r3, #2
   249ac:	str	r3, [r4, #220]	; 0xdc
   249b0:	ldr	r6, [r6]
   249b4:	cmp	r6, #0
   249b8:	bne	24908 <__flatcc_fb_gen_c_json_parser@@Base+0x124>
   249bc:	ldr	r7, [r4, #208]	; 0xd0
   249c0:	mov	r2, r4
   249c4:	ldr	r1, [pc, #3624]	; 257f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   249c8:	ldr	r0, [r7, #60]	; 0x3c
   249cc:	add	r1, pc, r1
   249d0:	bl	2ca60 <fb_scope_table_visit@@Base>
   249d4:	ldr	r1, [pc, #3612]	; 257f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   249d8:	mov	r0, r4
   249dc:	ldr	r3, [r4, #208]	; 0xd0
   249e0:	add	r1, pc, r1
   249e4:	ldr	r2, [r3, #160]	; 0xa0
   249e8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   249ec:	ldr	r3, [r4, #220]	; 0xdc
   249f0:	mov	r0, r4
   249f4:	ldr	r1, [pc, #3584]	; 257fc <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   249f8:	add	r3, r3, #2
   249fc:	add	r1, pc, r1
   24a00:	str	r3, [r4, #220]	; 0xdc
   24a04:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24a08:	ldr	r3, [r4, #220]	; 0xdc
   24a0c:	cmp	r3, #0
   24a10:	beq	26368 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   24a14:	cmp	r3, #1
   24a18:	moveq	r3, #0
   24a1c:	streq	r3, [r4, #220]	; 0xdc
   24a20:	beq	26368 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   24a24:	ldr	r1, [pc, #3540]	; 25800 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   24a28:	sub	r3, r3, #2
   24a2c:	mov	r0, r4
   24a30:	str	r3, [r4, #220]	; 0xdc
   24a34:	add	r1, pc, r1
   24a38:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24a3c:	ldr	r3, [r4, #208]	; 0xd0
   24a40:	ldr	r6, [r3, #40]	; 0x28
   24a44:	cmp	r6, #0
   24a48:	addeq	r7, sp, #40	; 0x28
   24a4c:	beq	24bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d0>
   24a50:	ldr	r3, [pc, #3500]	; 25804 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   24a54:	add	r7, sp, #40	; 0x28
   24a58:	ldr	fp, [pc, #3496]	; 25808 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   24a5c:	add	r3, pc, r3
   24a60:	str	r3, [sp, #16]
   24a64:	add	fp, pc, fp
   24a68:	ldr	r3, [pc, #3484]	; 2580c <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   24a6c:	add	r3, pc, r3
   24a70:	str	r3, [sp, #20]
   24a74:	ldr	r3, [pc, #3476]	; 25810 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   24a78:	add	r3, pc, r3
   24a7c:	str	r3, [sp, #24]
   24a80:	ldrh	r3, [r6, #8]
   24a84:	cmp	r3, #4
   24a88:	addls	pc, pc, r3, lsl #2
   24a8c:	b	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   24a90:	b	25554 <__flatcc_fb_gen_c_json_parser@@Base+0xd70>
   24a94:	b	2513c <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   24a98:	b	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   24a9c:	b	25544 <__flatcc_fb_gen_c_json_parser@@Base+0xd60>
   24aa0:	b	24b80 <__flatcc_fb_gen_c_json_parser@@Base+0x39c>
   24aa4:	mov	r2, r5
   24aa8:	mov	r1, r6
   24aac:	ldr	r0, [r6, #12]
   24ab0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   24ab4:	ldr	r1, [pc, #3416]	; 25814 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   24ab8:	mov	r2, r5
   24abc:	mov	r0, r4
   24ac0:	add	r1, pc, r1
   24ac4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24ac8:	ldr	r1, [pc, #3400]	; 25818 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   24acc:	mov	r2, r5
   24ad0:	mov	r0, r4
   24ad4:	add	r1, pc, r1
   24ad8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24adc:	b	249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   24ae0:	mov	r2, r5
   24ae4:	mov	r1, r6
   24ae8:	ldr	r0, [r6, #12]
   24aec:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   24af0:	mov	r2, r5
   24af4:	mov	r1, r9
   24af8:	mov	r0, r4
   24afc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24b00:	ldr	r3, [r4, #220]	; 0xdc
   24b04:	mov	r2, r5
   24b08:	mov	r1, r8
   24b0c:	mov	r0, r4
   24b10:	add	r3, r3, #2
   24b14:	str	r3, [r4, #220]	; 0xdc
   24b18:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24b1c:	ldr	r3, [r4, #220]	; 0xdc
   24b20:	cmp	r3, #0
   24b24:	beq	24b38 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   24b28:	cmp	r3, #1
   24b2c:	bne	249a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c4>
   24b30:	mov	r3, #0
   24b34:	str	r3, [r4, #220]	; 0xdc
   24b38:	ldr	r3, [pc, #3292]	; 2581c <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   24b3c:	movw	r2, #1747	; 0x6d3
   24b40:	ldr	r1, [pc, #3288]	; 25820 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   24b44:	ldr	r0, [pc, #3288]	; 25824 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   24b48:	add	r3, pc, r3
   24b4c:	add	r3, r3, #252	; 0xfc
   24b50:	add	r1, pc, r1
   24b54:	add	r0, pc, r0
   24b58:	bl	1400c <__assert_fail@plt>
   24b5c:	mov	r2, r5
   24b60:	mov	r1, r6
   24b64:	ldr	r0, [r6, #12]
   24b68:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   24b6c:	mov	r2, r5
   24b70:	mov	r1, r7
   24b74:	mov	r0, r4
   24b78:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24b7c:	b	249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   24b80:	mov	r1, r6
   24b84:	mov	r0, r4
   24b88:	bl	21b9c <__flatcc_fb_gen_c_verifier@@Base+0x15cc>
   24b8c:	mov	r1, r6
   24b90:	mov	r0, r4
   24b94:	bl	22230 <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   24b98:	mov	r1, r6
   24b9c:	mov	r0, r4
   24ba0:	bl	24254 <__flatcc_fb_gen_c_verifier@@Base+0x3c84>
   24ba4:	ldr	r6, [r6]
   24ba8:	cmp	r6, #0
   24bac:	bne	24a80 <__flatcc_fb_gen_c_json_parser@@Base+0x29c>
   24bb0:	ldr	r3, [r4, #208]	; 0xd0
   24bb4:	mov	r2, r4
   24bb8:	ldr	r1, [pc, #3176]	; 25828 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   24bbc:	ldr	r0, [r3, #60]	; 0x3c
   24bc0:	add	r1, pc, r1
   24bc4:	bl	2ca60 <fb_scope_table_visit@@Base>
   24bc8:	ldr	r0, [r4, #208]	; 0xd0
   24bcc:	mov	r3, #0
   24bd0:	mov	r1, #1
   24bd4:	mov	r2, r5
   24bd8:	str	r3, [sp, #40]	; 0x28
   24bdc:	str	r3, [r7, #4]
   24be0:	str	r3, [r7, #8]
   24be4:	str	r3, [r7, #12]
   24be8:	str	r3, [r7, #16]
   24bec:	str	r3, [r7, #20]
   24bf0:	str	r3, [r7, #24]
   24bf4:	ldr	r9, [r0, #60]	; 0x3c
   24bf8:	str	r1, [sp, #68]	; 0x44
   24bfc:	ldr	r1, [pc, #3112]	; 2582c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   24c00:	str	r3, [sp, #72]	; 0x48
   24c04:	str	r0, [sp, #108]	; 0x6c
   24c08:	mov	r0, r9
   24c0c:	str	r3, [sp, #76]	; 0x4c
   24c10:	str	r3, [sp, #80]	; 0x50
   24c14:	add	r1, pc, r1
   24c18:	str	r3, [sp, #84]	; 0x54
   24c1c:	str	r3, [sp, #88]	; 0x58
   24c20:	str	r3, [sp, #92]	; 0x5c
   24c24:	str	r3, [sp, #96]	; 0x60
   24c28:	str	r3, [sp, #100]	; 0x64
   24c2c:	str	r3, [sp, #104]	; 0x68
   24c30:	bl	2ca60 <fb_scope_table_visit@@Base>
   24c34:	ldr	r3, [sp, #72]	; 0x48
   24c38:	mov	r1, #8
   24c3c:	mov	r0, r3
   24c40:	str	r3, [sp, #12]
   24c44:	bl	13e74 <calloc@plt>
   24c48:	ldr	sl, [sp, #76]	; 0x4c
   24c4c:	mov	fp, r0
   24c50:	mov	r1, #8
   24c54:	str	fp, [sp, #84]	; 0x54
   24c58:	mov	r0, sl
   24c5c:	bl	13e74 <calloc@plt>
   24c60:	ldr	r6, [sp, #80]	; 0x50
   24c64:	mov	r8, r0
   24c68:	str	r8, [sp, #88]	; 0x58
   24c6c:	mov	r0, r6
   24c70:	bl	13f10 <malloc@plt>
   24c74:	ldr	r3, [sp, #12]
   24c78:	str	r0, [sp, #92]	; 0x5c
   24c7c:	str	fp, [sp, #96]	; 0x60
   24c80:	str	r8, [sp, #100]	; 0x64
   24c84:	str	r0, [sp, #104]	; 0x68
   24c88:	cmp	r3, #0
   24c8c:	movle	r2, #0
   24c90:	movgt	r2, #1
   24c94:	cmp	fp, #0
   24c98:	movne	r2, #0
   24c9c:	cmp	r2, #0
   24ca0:	bne	24efc <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   24ca4:	cmp	sl, #0
   24ca8:	movle	r2, #0
   24cac:	movgt	r2, #1
   24cb0:	cmp	r8, #0
   24cb4:	movne	r2, #0
   24cb8:	cmp	r2, #0
   24cbc:	bne	24efc <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   24cc0:	adds	r6, r6, #0
   24cc4:	movne	r6, #1
   24cc8:	cmp	r0, #0
   24ccc:	moveq	fp, r6
   24cd0:	movne	fp, #0
   24cd4:	cmp	fp, #0
   24cd8:	bne	24efc <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   24cdc:	ldr	r1, [pc, #2892]	; 25830 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   24ce0:	mov	r2, r5
   24ce4:	mov	r0, r9
   24ce8:	add	r1, pc, r1
   24cec:	bl	2ca60 <fb_scope_table_visit@@Base>
   24cf0:	ldr	r1, [sp, #72]	; 0x48
   24cf4:	ldr	r0, [sp, #84]	; 0x54
   24cf8:	bl	22468 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   24cfc:	ldr	r1, [sp, #76]	; 0x4c
   24d00:	ldr	r0, [sp, #88]	; 0x58
   24d04:	bl	22468 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   24d08:	ldr	r6, [sp, #76]	; 0x4c
   24d0c:	cmp	r6, #0
   24d10:	streq	r6, [sp, #40]	; 0x28
   24d14:	beq	24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x5bc>
   24d18:	lsl	r0, r6, #4
   24d1c:	bl	13f10 <malloc@plt>
   24d20:	subs	r9, r0, #0
   24d24:	beq	262d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1aec>
   24d28:	cmp	r6, #0
   24d2c:	ble	24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x59c>
   24d30:	ldr	sl, [sp, #88]	; 0x58
   24d34:	mov	r8, r9
   24d38:	add	r3, sl, #4
   24d3c:	str	r3, [sp, #12]
   24d40:	mov	r3, r6
   24d44:	mov	r6, sl
   24d48:	mov	sl, r3
   24d4c:	ldr	r3, [sp, #12]
   24d50:	ldr	r0, [r3, fp, lsl #3]
   24d54:	str	r0, [r8]
   24d58:	bl	13f4c <strlen@plt>
   24d5c:	ldr	r3, [r6, fp, lsl #3]
   24d60:	mov	r2, #0
   24d64:	add	fp, fp, #1
   24d68:	cmp	sl, fp
   24d6c:	stmib	r8, {r0, r3}
   24d70:	add	r8, r8, #16
   24d74:	str	r2, [r8, #-4]
   24d78:	bne	24d4c <__flatcc_fb_gen_c_json_parser@@Base+0x568>
   24d7c:	mov	r6, sl
   24d80:	ldr	r3, [pc, #2732]	; 25834 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   24d84:	mov	r1, r6
   24d88:	mov	r2, #16
   24d8c:	mov	r0, r9
   24d90:	add	r3, pc, r3
   24d94:	bl	13fdc <qsort@plt>
   24d98:	ldr	r6, [sp, #76]	; 0x4c
   24d9c:	str	r9, [sp, #40]	; 0x28
   24da0:	ldr	r1, [pc, #2704]	; 25838 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   24da4:	mov	ip, #4
   24da8:	mov	r8, #0
   24dac:	mov	r0, r4
   24db0:	ldr	r2, [r4, #208]	; 0xd0
   24db4:	ldr	r3, [pc, #2688]	; 2583c <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   24db8:	add	r1, pc, r1
   24dbc:	ldr	r2, [r2, #160]	; 0xa0
   24dc0:	str	r1, [sp, #44]	; 0x2c
   24dc4:	ldr	r1, [pc, #2676]	; 25840 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   24dc8:	add	r3, pc, r3
   24dcc:	str	r3, [sp, #48]	; 0x30
   24dd0:	str	r8, [sp, #52]	; 0x34
   24dd4:	str	ip, [sp, #56]	; 0x38
   24dd8:	add	r1, pc, r1
   24ddc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24de0:	ldr	r3, [r4, #220]	; 0xdc
   24de4:	mov	r0, r4
   24de8:	ldr	r1, [pc, #2644]	; 25844 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   24dec:	add	r3, r3, #2
   24df0:	add	r1, pc, r1
   24df4:	str	r3, [r4, #220]	; 0xdc
   24df8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24dfc:	ldr	r3, [r4, #220]	; 0xdc
   24e00:	cmp	r3, r8
   24e04:	beq	2638c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   24e08:	cmp	r3, #1
   24e0c:	streq	r8, [r4, #220]	; 0xdc
   24e10:	beq	2638c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   24e14:	ldr	r1, [pc, #2604]	; 25848 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   24e18:	sub	r3, r3, #2
   24e1c:	mov	r0, r4
   24e20:	str	r3, [r4, #220]	; 0xdc
   24e24:	add	r1, pc, r1
   24e28:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e2c:	ldr	r3, [r4, #220]	; 0xdc
   24e30:	cmp	r6, #0
   24e34:	add	r3, r3, #1
   24e38:	str	r3, [r4, #220]	; 0xdc
   24e3c:	beq	25f20 <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   24e40:	ldr	r1, [pc, #2564]	; 2584c <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   24e44:	mov	r0, r4
   24e48:	add	r1, pc, r1
   24e4c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e50:	ldr	r1, [pc, #2552]	; 25850 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   24e54:	mov	r0, r4
   24e58:	add	r1, pc, r1
   24e5c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e60:	ldr	r1, [pc, #2540]	; 25854 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   24e64:	mov	r0, r4
   24e68:	add	r1, pc, r1
   24e6c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e70:	ldr	r1, [pc, #2528]	; 25858 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   24e74:	mov	r0, r4
   24e78:	add	r1, pc, r1
   24e7c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e80:	ldr	r1, [pc, #2516]	; 2585c <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   24e84:	mov	r0, r4
   24e88:	add	r1, pc, r1
   24e8c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24e90:	sub	r3, r6, #1
   24e94:	mov	r2, r8
   24e98:	str	r8, [sp]
   24e9c:	mov	r1, r7
   24ea0:	mov	r0, r4
   24ea4:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   24ea8:	ldr	r1, [pc, #2480]	; 25860 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   24eac:	mov	r0, r4
   24eb0:	add	r1, pc, r1
   24eb4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24eb8:	ldr	r3, [r4, #220]	; 0xdc
   24ebc:	cmp	r3, #0
   24ec0:	beq	26624 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   24ec4:	ldr	r1, [pc, #2456]	; 25864 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   24ec8:	sub	r3, r3, #1
   24ecc:	mov	r0, r4
   24ed0:	str	r3, [r4, #220]	; 0xdc
   24ed4:	add	r1, pc, r1
   24ed8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24edc:	ldr	r1, [pc, #2436]	; 25868 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   24ee0:	mov	r0, r4
   24ee4:	add	r1, pc, r1
   24ee8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24eec:	ldr	r0, [sp, #40]	; 0x28
   24ef0:	cmp	r0, #0
   24ef4:	beq	24efc <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   24ef8:	bl	13ea4 <free@plt>
   24efc:	mov	r0, r5
   24f00:	bl	228f4 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   24f04:	ldr	r3, [r4, #208]	; 0xd0
   24f08:	ldr	r6, [r3, #52]	; 0x34
   24f0c:	cmp	r6, #0
   24f10:	beq	250f4 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   24f14:	ldrh	r7, [r6, #8]
   24f18:	cmp	r7, #0
   24f1c:	beq	25fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x17ec>
   24f20:	cmp	r7, #1
   24f24:	bne	250f4 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   24f28:	mov	r2, #220	; 0xdc
   24f2c:	mov	r1, #0
   24f30:	mov	r0, r5
   24f34:	bl	13f70 <memset@plt>
   24f38:	mov	r2, r5
   24f3c:	mov	r1, r6
   24f40:	ldr	r0, [r6, #12]
   24f44:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   24f48:	ldr	r1, [pc, #2332]	; 2586c <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   24f4c:	mov	r0, r4
   24f50:	ldr	r3, [r4, #208]	; 0xd0
   24f54:	add	r1, pc, r1
   24f58:	ldr	r2, [r3, #160]	; 0xa0
   24f5c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24f60:	ldr	r3, [r4, #220]	; 0xdc
   24f64:	mov	r0, r4
   24f68:	ldr	r1, [pc, #2304]	; 25870 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   24f6c:	add	r3, r3, #2
   24f70:	add	r1, pc, r1
   24f74:	str	r3, [r4, #220]	; 0xdc
   24f78:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24f7c:	ldr	r3, [r4, #220]	; 0xdc
   24f80:	cmp	r3, #0
   24f84:	beq	26600 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   24f88:	cmp	r3, #1
   24f8c:	moveq	r3, #0
   24f90:	streq	r3, [r4, #220]	; 0xdc
   24f94:	beq	26600 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   24f98:	ldr	r1, [pc, #2260]	; 25874 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   24f9c:	sub	r3, r3, #2
   24fa0:	mov	r0, r4
   24fa4:	str	r3, [r4, #220]	; 0xdc
   24fa8:	add	r1, pc, r1
   24fac:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24fb0:	ldr	r3, [r4, #220]	; 0xdc
   24fb4:	mov	r0, r4
   24fb8:	ldr	r1, [pc, #2232]	; 25878 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   24fbc:	add	r3, r3, #1
   24fc0:	add	r1, pc, r1
   24fc4:	str	r3, [r4, #220]	; 0xdc
   24fc8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24fcc:	ldr	r1, [pc, #2216]	; 2587c <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   24fd0:	mov	r0, r4
   24fd4:	add	r1, pc, r1
   24fd8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24fdc:	ldr	r1, [pc, #2204]	; 25880 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   24fe0:	mov	r0, r4
   24fe4:	add	r1, pc, r1
   24fe8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24fec:	ldr	r1, [pc, #2192]	; 25884 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   24ff0:	mov	r0, r4
   24ff4:	add	r1, pc, r1
   24ff8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24ffc:	ldr	r1, [pc, #2180]	; 25888 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   25000:	mov	r0, r4
   25004:	add	r1, pc, r1
   25008:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2500c:	ldr	r2, [r4, #208]	; 0xd0
   25010:	ldrh	r3, [r2, #16]
   25014:	cmp	r3, #2
   25018:	beq	261b8 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   2501c:	ldr	r1, [pc, #2152]	; 2588c <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   25020:	mov	r0, r4
   25024:	add	r1, pc, r1
   25028:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2502c:	ldr	r1, [pc, #2140]	; 25890 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   25030:	mov	r2, r5
   25034:	mov	r0, r4
   25038:	add	r1, pc, r1
   2503c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25040:	ldr	r1, [pc, #2124]	; 25894 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   25044:	mov	r0, r4
   25048:	add	r1, pc, r1
   2504c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25050:	ldr	r3, [r4, #220]	; 0xdc
   25054:	mov	r0, r4
   25058:	ldr	r1, [pc, #2104]	; 25898 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2505c:	add	r3, r3, #1
   25060:	add	r1, pc, r1
   25064:	str	r3, [r4, #220]	; 0xdc
   25068:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2506c:	ldr	r3, [r4, #220]	; 0xdc
   25070:	cmp	r3, #0
   25074:	beq	266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   25078:	ldr	r5, [pc, #2076]	; 2589c <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   2507c:	sub	r3, r3, #1
   25080:	mov	r0, r4
   25084:	str	r3, [r4, #220]	; 0xdc
   25088:	add	r5, pc, r5
   2508c:	mov	r1, r5
   25090:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25094:	ldr	r1, [pc, #2052]	; 258a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   25098:	mov	r0, r4
   2509c:	add	r1, pc, r1
   250a0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   250a4:	ldr	r1, [pc, #2040]	; 258a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   250a8:	mov	r0, r4
   250ac:	add	r1, pc, r1
   250b0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   250b4:	ldr	r1, [pc, #2028]	; 258a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   250b8:	mov	r0, r4
   250bc:	add	r1, pc, r1
   250c0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   250c4:	ldr	r3, [r4, #220]	; 0xdc
   250c8:	cmp	r3, #0
   250cc:	beq	2666c <__flatcc_fb_gen_c_json_parser@@Base+0x1e88>
   250d0:	sub	r3, r3, #1
   250d4:	mov	r1, r5
   250d8:	mov	r0, r4
   250dc:	str	r3, [r4, #220]	; 0xdc
   250e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   250e4:	ldr	r1, [pc, #1984]	; 258ac <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   250e8:	mov	r0, r4
   250ec:	add	r1, pc, r1
   250f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   250f4:	ldr	r3, [r4, #212]	; 0xd4
   250f8:	ldr	r3, [r3, #140]	; 0x8c
   250fc:	cmp	r3, #0
   25100:	bne	25fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x17d0>
   25104:	ldr	r3, [r4, #208]	; 0xd0
   25108:	mov	r0, r4
   2510c:	ldr	r1, [pc, #1948]	; 258b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   25110:	ldr	r2, [r3, #164]	; 0xa4
   25114:	add	r1, pc, r1
   25118:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2511c:	mov	r0, #0
   25120:	add	sp, sp, #292	; 0x124
   25124:	ldrd	r4, [sp]
   25128:	ldrd	r6, [sp, #8]
   2512c:	ldrd	r8, [sp, #16]
   25130:	ldrd	sl, [sp, #24]
   25134:	add	sp, sp, #32
   25138:	pop	{pc}		; (ldr pc, [sp], #4)
   2513c:	mov	r3, #0
   25140:	str	r3, [r7]
   25144:	str	r3, [r7, #4]
   25148:	str	r3, [r7, #8]
   2514c:	str	r3, [r7, #12]
   25150:	str	r3, [r7, #16]
   25154:	str	r3, [r7, #20]
   25158:	str	r3, [r7, #24]
   2515c:	ldrh	r3, [r6, #8]
   25160:	cmp	r3, #1
   25164:	bne	26440 <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   25168:	add	r1, sp, #36	; 0x24
   2516c:	ldr	r0, [r6, #20]
   25170:	bl	2409c <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   25174:	cmp	r0, #0
   25178:	str	r0, [sp, #40]	; 0x28
   2517c:	beq	25e58 <__flatcc_fb_gen_c_json_parser@@Base+0x1674>
   25180:	ldr	ip, [pc, #1836]	; 258b4 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   25184:	mov	lr, #1
   25188:	mov	r2, #220	; 0xdc
   2518c:	mov	r1, #0
   25190:	mov	r0, r5
   25194:	str	r6, [sp, #52]	; 0x34
   25198:	ldr	r3, [pc, #1816]	; 258b8 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   2519c:	str	lr, [sp, #56]	; 0x38
   251a0:	add	ip, pc, ip
   251a4:	add	r3, pc, r3
   251a8:	str	ip, [sp, #44]	; 0x2c
   251ac:	str	r3, [sp, #48]	; 0x30
   251b0:	bl	13f70 <memset@plt>
   251b4:	mov	r2, r5
   251b8:	mov	r1, r6
   251bc:	ldr	r0, [r6, #12]
   251c0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   251c4:	ldr	r1, [pc, #1776]	; 258bc <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   251c8:	mov	r2, r5
   251cc:	mov	r0, r4
   251d0:	add	r1, pc, r1
   251d4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251d8:	ldr	r1, [pc, #1760]	; 258c0 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   251dc:	mov	r0, r4
   251e0:	add	r1, pc, r1
   251e4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251e8:	ldr	r3, [r4, #220]	; 0xdc
   251ec:	mov	r0, r4
   251f0:	ldr	r1, [pc, #1740]	; 258c4 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   251f4:	add	r3, r3, #1
   251f8:	add	r1, pc, r1
   251fc:	str	r3, [r4, #220]	; 0xdc
   25200:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25204:	ldr	r3, [sp, #36]	; 0x24
   25208:	cmp	r3, #0
   2520c:	ble	25250 <__flatcc_fb_gen_c_json_parser@@Base+0xa6c>
   25210:	ldr	r1, [pc, #1712]	; 258c8 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   25214:	mov	r0, r4
   25218:	add	r1, pc, r1
   2521c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25220:	ldr	r1, [pc, #1700]	; 258cc <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   25224:	mov	r0, r4
   25228:	add	r1, pc, r1
   2522c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25230:	ldr	r1, [pc, #1688]	; 258d0 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   25234:	mov	r0, r4
   25238:	add	r1, pc, r1
   2523c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25240:	ldr	r1, [pc, #1676]	; 258d4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   25244:	mov	r0, r4
   25248:	add	r1, pc, r1
   2524c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25250:	ldr	r1, [pc, #1664]	; 258d8 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   25254:	mov	r0, r4
   25258:	add	r1, pc, r1
   2525c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25260:	ldr	r1, [pc, #1652]	; 258dc <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   25264:	mov	r0, r4
   25268:	add	r1, pc, r1
   2526c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25270:	ldr	r1, [pc, #1640]	; 258e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   25274:	mov	r0, r4
   25278:	add	r1, pc, r1
   2527c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25280:	ldr	r3, [r4, #220]	; 0xdc
   25284:	ldr	r2, [sp, #36]	; 0x24
   25288:	add	r3, r3, #1
   2528c:	cmp	r2, #0
   25290:	str	r3, [r4, #220]	; 0xdc
   25294:	bne	25e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1630>
   25298:	ldr	r1, [pc, #1604]	; 258e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   2529c:	mov	r0, r4
   252a0:	add	r1, pc, r1
   252a4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252a8:	ldr	r1, [pc, #1592]	; 258e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   252ac:	mov	r0, r4
   252b0:	add	r1, pc, r1
   252b4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252b8:	ldr	r1, [pc, #1580]	; 258ec <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   252bc:	mov	r0, r4
   252c0:	add	r1, pc, r1
   252c4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252c8:	ldr	r3, [r4, #220]	; 0xdc
   252cc:	cmp	r3, #0
   252d0:	beq	263f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   252d4:	ldr	r1, [pc, #1556]	; 258f0 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   252d8:	sub	r3, r3, #1
   252dc:	mov	r0, r4
   252e0:	str	r3, [r4, #220]	; 0xdc
   252e4:	add	r1, pc, r1
   252e8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252ec:	ldr	r1, [pc, #1536]	; 258f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   252f0:	mov	r0, r4
   252f4:	add	r1, pc, r1
   252f8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252fc:	ldr	r3, [sp, #36]	; 0x24
   25300:	cmp	r3, #0
   25304:	ble	25340 <__flatcc_fb_gen_c_json_parser@@Base+0xb5c>
   25308:	ldr	r1, [pc, #1512]	; 258f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   2530c:	mov	r2, #0
   25310:	mov	r0, r4
   25314:	ldr	r3, [r4, #220]	; 0xdc
   25318:	str	r2, [r4, #220]	; 0xdc
   2531c:	add	r1, pc, r1
   25320:	str	r3, [r4, #228]	; 0xe4
   25324:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25328:	ldr	r1, [pc, #1484]	; 258fc <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   2532c:	mov	r0, r4
   25330:	ldr	r3, [r4, #228]	; 0xe4
   25334:	add	r1, pc, r1
   25338:	str	r3, [r4, #220]	; 0xdc
   2533c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25340:	ldr	r3, [r4, #220]	; 0xdc
   25344:	cmp	r3, #0
   25348:	beq	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
   2534c:	ldr	r1, [pc, #1452]	; 25900 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   25350:	sub	r3, r3, #1
   25354:	mov	r0, r4
   25358:	str	r3, [r4, #220]	; 0xdc
   2535c:	add	r1, pc, r1
   25360:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25364:	ldr	r1, [pc, #1432]	; 25904 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   25368:	mov	r0, r4
   2536c:	add	r1, pc, r1
   25370:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25374:	ldr	r0, [sp, #40]	; 0x28
   25378:	cmp	r0, #0
   2537c:	beq	25384 <__flatcc_fb_gen_c_json_parser@@Base+0xba0>
   25380:	bl	13ea4 <free@plt>
   25384:	ldrh	r3, [r6, #8]
   25388:	cmp	r3, #1
   2538c:	bne	263b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   25390:	mov	r2, #220	; 0xdc
   25394:	mov	r1, #0
   25398:	ldr	r9, [pc, #1384]	; 25908 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   2539c:	mov	r0, r5
   253a0:	bl	13f70 <memset@plt>
   253a4:	mov	r2, r5
   253a8:	mov	r1, r6
   253ac:	ldr	r0, [r6, #12]
   253b0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   253b4:	ldr	r1, [pc, #1360]	; 2590c <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   253b8:	mov	r2, r5
   253bc:	mov	r0, r4
   253c0:	add	r9, pc, r9
   253c4:	ldr	r8, [pc, #1348]	; 25910 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   253c8:	add	r1, pc, r1
   253cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   253d0:	mov	r1, r9
   253d4:	mov	r0, r4
   253d8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   253dc:	ldr	r3, [r4, #220]	; 0xdc
   253e0:	mov	r0, r4
   253e4:	add	r8, pc, r8
   253e8:	ldr	r1, [pc, #1316]	; 25914 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   253ec:	add	r3, r3, #1
   253f0:	add	r1, pc, r1
   253f4:	str	r3, [r4, #220]	; 0xdc
   253f8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   253fc:	mov	r1, r8
   25400:	mov	r0, r4
   25404:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25408:	ldr	r1, [pc, #1288]	; 25918 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   2540c:	mov	r0, r4
   25410:	add	r1, pc, r1
   25414:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25418:	ldrh	ip, [r6, #104]	; 0x68
   2541c:	mov	r0, r4
   25420:	ldr	r1, [pc, #1268]	; 2591c <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   25424:	ldrd	r2, [r6, #112]	; 0x70
   25428:	str	ip, [sp]
   2542c:	add	r1, pc, r1
   25430:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25434:	ldr	r1, [pc, #1252]	; 25920 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   25438:	mov	r2, r5
   2543c:	mov	r0, r4
   25440:	add	r1, pc, r1
   25444:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25448:	ldr	r1, [pc, #1236]	; 25924 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   2544c:	mov	r0, r4
   25450:	add	r1, pc, r1
   25454:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25458:	ldr	r1, [pc, #1224]	; 25928 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   2545c:	mov	r0, r4
   25460:	add	r1, pc, r1
   25464:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25468:	ldr	r1, [pc, #1212]	; 2592c <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   2546c:	mov	r2, #0
   25470:	mov	r0, r4
   25474:	ldr	r3, [r4, #220]	; 0xdc
   25478:	str	r2, [r4, #220]	; 0xdc
   2547c:	add	r1, pc, r1
   25480:	str	r3, [r4, #228]	; 0xe4
   25484:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25488:	ldr	r1, [pc, #1184]	; 25930 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   2548c:	mov	r0, r4
   25490:	ldr	r3, [r4, #228]	; 0xe4
   25494:	add	r1, pc, r1
   25498:	str	r3, [r4, #220]	; 0xdc
   2549c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   254a0:	ldr	r2, [r4, #220]	; 0xdc
   254a4:	cmp	r2, #0
   254a8:	beq	264f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
   254ac:	ldr	sl, [pc, #1152]	; 25934 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   254b0:	sub	r2, r2, #1
   254b4:	mov	r0, r4
   254b8:	str	r2, [r4, #220]	; 0xdc
   254bc:	add	sl, pc, sl
   254c0:	mov	r1, sl
   254c4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   254c8:	mov	r1, r8
   254cc:	mov	r0, r4
   254d0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   254d4:	ldr	r1, [pc, #1116]	; 25938 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   254d8:	mov	r2, r5
   254dc:	mov	r0, r4
   254e0:	add	r1, pc, r1
   254e4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   254e8:	mov	r1, r9
   254ec:	mov	r0, r4
   254f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   254f4:	ldr	ip, [r4, #220]	; 0xdc
   254f8:	mov	r2, r5
   254fc:	mov	r0, r4
   25500:	ldr	r1, [pc, #1076]	; 2593c <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   25504:	add	ip, ip, #1
   25508:	add	r1, pc, r1
   2550c:	str	ip, [r4, #220]	; 0xdc
   25510:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25514:	ldr	r2, [r4, #220]	; 0xdc
   25518:	cmp	r2, #0
   2551c:	beq	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x1ca4>
   25520:	sub	r2, r2, #1
   25524:	mov	r1, sl
   25528:	mov	r0, r4
   2552c:	str	r2, [r4, #220]	; 0xdc
   25530:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25534:	mov	r1, r8
   25538:	mov	r0, r4
   2553c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25540:	b	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   25544:	mov	r1, r6
   25548:	mov	r0, r4
   2554c:	bl	24254 <__flatcc_fb_gen_c_verifier@@Base+0x3c84>
   25550:	b	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   25554:	mov	r3, #0
   25558:	str	r3, [r7]
   2555c:	str	r3, [r7, #4]
   25560:	str	r3, [r7, #8]
   25564:	str	r3, [r7, #12]
   25568:	str	r3, [r7, #16]
   2556c:	str	r3, [r7, #20]
   25570:	str	r3, [r7, #24]
   25574:	ldrh	r8, [r6, #8]
   25578:	cmp	r8, r3
   2557c:	bne	26464 <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   25580:	add	r1, sp, #36	; 0x24
   25584:	ldr	r0, [r6, #20]
   25588:	bl	2409c <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   2558c:	cmp	r0, #0
   25590:	str	r0, [sp, #40]	; 0x28
   25594:	beq	25f68 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   25598:	ldr	r1, [pc, #928]	; 25940 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   2559c:	str	r6, [sp, #52]	; 0x34
   255a0:	ldr	r3, [pc, #924]	; 25944 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   255a4:	str	r8, [sp, #56]	; 0x38
   255a8:	ldr	r2, [sp, #36]	; 0x24
   255ac:	add	r1, pc, r1
   255b0:	add	r3, pc, r3
   255b4:	str	r1, [sp, #44]	; 0x2c
   255b8:	str	r8, [sp, #60]	; 0x3c
   255bc:	cmp	r2, #0
   255c0:	str	r3, [sp, #48]	; 0x30
   255c4:	ble	255ec <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   255c8:	add	r2, r0, r2, lsl #4
   255cc:	mov	r3, r8
   255d0:	ldr	r1, [r0, #12]
   255d4:	add	r0, r0, #16
   255d8:	cmp	r1, #0
   255dc:	addne	r3, r3, #1
   255e0:	cmp	r2, r0
   255e4:	bne	255d0 <__flatcc_fb_gen_c_json_parser@@Base+0xdec>
   255e8:	str	r3, [sp, #60]	; 0x3c
   255ec:	mov	r2, #220	; 0xdc
   255f0:	mov	r1, #0
   255f4:	mov	r0, r5
   255f8:	bl	13f70 <memset@plt>
   255fc:	mov	r2, r5
   25600:	mov	r1, r6
   25604:	ldr	r0, [r6, #12]
   25608:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2560c:	mov	r2, r5
   25610:	mov	r1, fp
   25614:	mov	r0, r4
   25618:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2561c:	mov	r0, r4
   25620:	ldr	r1, [sp, #16]
   25624:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25628:	ldr	r3, [r4, #220]	; 0xdc
   2562c:	mov	r0, r4
   25630:	ldr	r1, [pc, #784]	; 25948 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   25634:	add	r3, r3, #1
   25638:	add	r1, pc, r1
   2563c:	str	r3, [r4, #220]	; 0xdc
   25640:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25644:	ldr	r3, [sp, #36]	; 0x24
   25648:	cmp	r3, #0
   2564c:	ble	25690 <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   25650:	ldr	r1, [pc, #756]	; 2594c <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   25654:	mov	r0, r4
   25658:	add	r1, pc, r1
   2565c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25660:	ldr	r1, [pc, #744]	; 25950 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   25664:	mov	r0, r4
   25668:	add	r1, pc, r1
   2566c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25670:	ldr	r1, [pc, #732]	; 25954 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   25674:	mov	r0, r4
   25678:	add	r1, pc, r1
   2567c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25680:	ldr	r1, [pc, #720]	; 25958 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   25684:	mov	r0, r4
   25688:	add	r1, pc, r1
   2568c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25690:	ldr	r3, [sp, #60]	; 0x3c
   25694:	cmp	r3, #0
   25698:	bne	25ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x1714>
   2569c:	ldr	r1, [pc, #696]	; 2595c <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   256a0:	mov	r0, r4
   256a4:	add	r1, pc, r1
   256a8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256ac:	ldr	r1, [pc, #684]	; 25960 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   256b0:	mov	r0, r4
   256b4:	add	r1, pc, r1
   256b8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256bc:	ldr	r1, [pc, #672]	; 25964 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   256c0:	mov	r0, r4
   256c4:	ldrd	r2, [r6, #96]	; 0x60
   256c8:	add	r1, pc, r1
   256cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256d0:	ldr	r2, [sp, #60]	; 0x3c
   256d4:	cmp	r2, #0
   256d8:	bne	25ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x16fc>
   256dc:	ldr	r1, [pc, #644]	; 25968 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   256e0:	mov	r0, r4
   256e4:	add	r1, pc, r1
   256e8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256ec:	ldr	r1, [pc, #632]	; 2596c <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   256f0:	mov	r0, r4
   256f4:	add	r1, pc, r1
   256f8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256fc:	ldr	r3, [r4, #220]	; 0xdc
   25700:	mov	r0, r4
   25704:	ldr	r1, [pc, #612]	; 25970 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   25708:	add	r3, r3, #1
   2570c:	add	r1, pc, r1
   25710:	str	r3, [r4, #220]	; 0xdc
   25714:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25718:	ldr	r3, [sp, #36]	; 0x24
   2571c:	cmp	r3, #0
   25720:	ble	25ebc <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   25724:	ldr	r1, [pc, #584]	; 25974 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   25728:	mov	r0, r4
   2572c:	add	r1, pc, r1
   25730:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25734:	ldr	r3, [sp, #36]	; 0x24
   25738:	mov	ip, #0
   2573c:	mov	r1, r7
   25740:	mov	r2, ip
   25744:	mov	r0, r4
   25748:	str	ip, [sp]
   2574c:	sub	r3, r3, #1
   25750:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   25754:	ldr	r1, [pc, #540]	; 25978 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   25758:	mov	r0, r4
   2575c:	add	r1, pc, r1
   25760:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25764:	ldr	r3, [r4, #220]	; 0xdc
   25768:	cmp	r3, #0
   2576c:	beq	2641c <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   25770:	ldr	r1, [pc, #516]	; 2597c <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   25774:	sub	r3, r3, #1
   25778:	mov	r0, r4
   2577c:	str	r3, [r4, #220]	; 0xdc
   25780:	add	r1, pc, r1
   25784:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25788:	ldr	r1, [pc, #496]	; 25980 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   2578c:	mov	r0, r4
   25790:	add	r1, pc, r1
   25794:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25798:	ldr	r2, [sp, #36]	; 0x24
   2579c:	cmp	r2, #0
   257a0:	ble	25cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x150c>
   257a4:	mov	r9, #1
   257a8:	mov	r8, #0
   257ac:	str	fp, [sp, #12]
   257b0:	b	25bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   257b4:	andeq	r6, r4, r0, lsl #16
   257b8:	andeq	pc, r2, r4, asr lr	; <UNPREDICTABLE>
   257bc:	andeq	r5, r2, r4, lsr lr
   257c0:	andeq	pc, r2, r4, asr #28
   257c4:	andeq	pc, r2, r0, asr #28
   257c8:	andeq	pc, r2, r4, ror lr	; <UNPREDICTABLE>
   257cc:	andeq	pc, r2, r8, lsl #29
   257d0:	strdeq	fp, [r1], -r8
   257d4:			; <UNDEFINED> instruction: 0x00025db4
   257d8:	muleq	r2, ip, ip
   257dc:	andeq	lr, r2, r4, lsl #23
   257e0:	andeq	r0, r3, r4, ror #3
   257e4:	ldrdeq	pc, [r2], -r8
   257e8:	andeq	r0, r3, r4, asr r0
   257ec:	andeq	pc, r2, r8, lsr #24
   257f0:	strdeq	lr, [r2], -ip
   257f4:			; <UNDEFINED> instruction: 0xffffd164
   257f8:	andeq	r0, r3, ip, lsl #3
   257fc:	andeq	lr, r2, r8, lsl #21
   25800:	andeq	r5, r2, ip, lsr #24
   25804:	strdeq	r1, [r3], -r0
   25808:	andeq	r0, r3, r4, lsl r5
   2580c:	andeq	r0, r3, r8, lsl r7
   25810:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   25814:	andeq	pc, r2, r4, lsr #30
   25818:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   2581c:	andeq	lr, r2, r8, asr #8
   25820:	muleq	r2, r0, r6
   25824:	strdeq	lr, [r2], -r8
   25828:			; <UNDEFINED> instruction: 0xffffd934
   2582c:			; <UNDEFINED> instruction: 0xffffd830
   25830:			; <UNDEFINED> instruction: 0xffffd740
   25834:			; <UNDEFINED> instruction: 0xffffd728
   25838:			; <UNDEFINED> instruction: 0xffffdd88
   2583c:			; <UNDEFINED> instruction: 0xffffbcfc
   25840:	muleq	r2, r4, sp
   25844:	andeq	lr, r2, r8, lsl fp
   25848:	andeq	r1, r3, r8, lsr #32
   2584c:	andeq	lr, r2, r8, asr #22
   25850:	andeq	lr, r2, r8, asr fp
   25854:	andeq	lr, r2, ip, asr fp
   25858:	andeq	r5, r2, r8, ror #15
   2585c:	andeq	lr, r2, ip, asr #9
   25860:	andeq	lr, r2, r0, lsr #18
   25864:	andeq	lr, r2, r4, lsl #7
   25868:	andeq	r5, r2, ip, ror r7
   2586c:	andeq	pc, r2, r4, asr r9	; <UNPREDICTABLE>
   25870:	andeq	r0, r3, ip, asr #7
   25874:	andeq	r0, r3, r4, lsr #29
   25878:	andeq	r0, r3, r4, ror #10
   2587c:			; <UNDEFINED> instruction: 0x000303b4
   25880:	andeq	r5, r2, ip, ror r6
   25884:	andeq	r0, r3, ip, asr #10
   25888:			; <UNDEFINED> instruction: 0x000303bc
   2588c:	andeq	r0, r3, r8, lsl r4
   25890:	andeq	r0, r3, r4, lsr #10
   25894:	andeq	r0, r3, r0, ror #8
   25898:	andeq	r0, r3, ip, asr r4
   2589c:	ldrdeq	lr, [r2], -r0
   258a0:	andeq	r0, r3, r4, lsr r4
   258a4:	andeq	r0, r3, r8, asr r4
   258a8:	andeq	r0, r3, ip, asr r4
   258ac:	andeq	r5, r2, r4, ror r5
   258b0:	andeq	r0, r3, r4, lsl #9
   258b4:			; <UNDEFINED> instruction: 0xffffecf8
   258b8:			; <UNDEFINED> instruction: 0xffffb900
   258bc:	andeq	pc, r2, r8, lsl #20
   258c0:	andeq	r0, r3, ip, ror #24
   258c4:	andeq	pc, r2, r0, ror #20
   258c8:	andeq	pc, r2, ip, asr #20
   258cc:	andeq	pc, r2, r8, asr sl	; <UNPREDICTABLE>
   258d0:	andeq	lr, r2, r8, ror r7
   258d4:	andeq	lr, r2, ip, ror r7
   258d8:	andeq	r5, r2, r8, lsl #8
   258dc:	andeq	pc, r2, r4, lsr #20
   258e0:	andeq	lr, r2, r0, lsl sl
   258e4:	andeq	pc, r2, ip, lsr #20
   258e8:	andeq	sp, r2, r4, lsl #29
   258ec:	andeq	pc, r2, r8, asr sl	; <UNPREDICTABLE>
   258f0:	andeq	sp, r2, r4, ror pc
   258f4:	ldrdeq	lr, [r2], -ip
   258f8:	andeq	pc, r2, r8, lsr sl	; <UNPREDICTABLE>
   258fc:			; <UNDEFINED> instruction: 0x0002e4b8
   25900:	strdeq	sp, [r2], -ip
   25904:	strdeq	r5, [r2], -r4
   25908:	andeq	r0, r3, ip, lsl #21
   2590c:	muleq	r2, r4, r9
   25910:	andeq	r5, r2, ip, ror r2
   25914:	muleq	r2, r0, r8
   25918:	andeq	lr, r2, r8, lsr r1
   2591c:			; <UNDEFINED> instruction: 0x0002f9b4
   25920:	andeq	lr, r2, ip, lsl sl
   25924:	ldrdeq	pc, [r2], -ip
   25928:	andeq	lr, r2, r0, ror r3
   2592c:	ldrdeq	pc, [r2], -r8
   25930:	andeq	lr, r2, r8, asr r3
   25934:	muleq	r2, ip, sp
   25938:	andeq	pc, r2, r0, lsr #19
   2593c:	andeq	pc, r2, ip, lsl #20
   25940:			; <UNDEFINED> instruction: 0xffffe8ec
   25944:			; <UNDEFINED> instruction: 0xffffb4f4
   25948:	andeq	pc, r2, r0, lsr #12
   2594c:	andeq	pc, r2, r8, lsr #12
   25950:	muleq	r2, r4, r9
   25954:	andeq	lr, r2, r8, lsr r3
   25958:	andeq	lr, r2, ip, lsr r3
   2595c:			; <UNDEFINED> instruction: 0x00024fbc
   25960:	muleq	r2, r4, lr
   25964:	andeq	pc, r2, ip, ror #18
   25968:	andeq	pc, r2, r8, lsr #11
   2596c:	muleq	r2, r4, r5
   25970:	ldrdeq	pc, [r2], -r4
   25974:	andeq	sp, r2, r8, lsr #24
   25978:	muleq	r2, r0, r9
   2597c:	ldrdeq	sp, [r2], -r8
   25980:	muleq	r2, r8, r9
   25984:	andeq	lr, r2, r4, asr r3
   25988:	andeq	pc, r2, r0, lsl r5	; <UNPREDICTABLE>
   2598c:	andeq	lr, r2, r0, lsl r7
   25990:	andeq	sp, r2, r0, ror r5
   25994:	andeq	pc, r2, r8, asr r5	; <UNPREDICTABLE>
   25998:			; <UNDEFINED> instruction: 0x0002dabc
   2599c:	andeq	pc, r2, r4, lsr #32
   259a0:	andeq	sp, r2, r4, lsr #21
   259a4:	andeq	sp, r2, r4, ror #9
   259a8:	andeq	r4, r2, r4, ror #17
   259ac:	andeq	pc, r2, r4, ror #1
   259b0:	andeq	r0, r3, r0, lsr #1
   259b4:	ldrdeq	pc, [r2], -r8
   259b8:	andeq	lr, r2, r4, asr #29
   259bc:	andeq	sp, r2, r8, lsr #10
   259c0:	andeq	sp, r2, r0, asr sl
   259c4:	andeq	sp, r2, ip, asr r3
   259c8:	andeq	sl, r1, r4, lsr #20
   259cc:	andeq	sp, r2, r4, ror #1
   259d0:	andeq	r2, r2, r8, lsr #30
   259d4:	andeq	pc, r2, ip, lsl #4
   259d8:	andeq	sp, r2, r0, ror #4
   259dc:	andeq	pc, r2, r8, lsl #3
   259e0:	andeq	pc, r2, r0, lsr #2
   259e4:	andeq	pc, r2, r4, lsl #6
   259e8:	ldrdeq	pc, [r2], -r8
   259ec:	andeq	sp, r2, r8, lsr sl
   259f0:	strdeq	sp, [r2], -ip
   259f4:			; <UNDEFINED> instruction: 0xffffdf10
   259f8:			; <UNDEFINED> instruction: 0xffffab18
   259fc:	andeq	fp, r1, r0, asr #28
   25a00:	andeq	r1, r2, r8, lsl #25
   25a04:	andeq	lr, r2, ip, lsr #17
   25a08:	andeq	pc, r2, r4, lsr #6
   25a0c:	andeq	pc, r2, r0, lsl #28
   25a10:	andeq	pc, r2, r4, lsl #6
   25a14:	andeq	pc, r2, r0, lsl r3	; <UNPREDICTABLE>
   25a18:	ldrdeq	r4, [r2], -r8
   25a1c:	andeq	pc, r2, ip, lsl #6
   25a20:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   25a24:	andeq	pc, r2, r4, ror r3	; <UNPREDICTABLE>
   25a28:	muleq	r2, r8, r3
   25a2c:			; <UNDEFINED> instruction: 0x0002f3bc
   25a30:			; <UNDEFINED> instruction: 0x0002f3b8
   25a34:	andeq	sp, r2, ip, lsr #2
   25a38:	muleq	r2, r0, r3
   25a3c:			; <UNDEFINED> instruction: 0x0002f3b4
   25a40:			; <UNDEFINED> instruction: 0x0002f3b8
   25a44:	ldrdeq	r4, [r2], -r0
   25a48:	andeq	pc, r2, r0, asr r2	; <UNPREDICTABLE>
   25a4c:	andeq	pc, r2, r4, lsr r2	; <UNPREDICTABLE>
   25a50:	andeq	lr, r2, r0, asr #10
   25a54:	andeq	lr, r2, r4, lsr r5
   25a58:	andeq	lr, r2, ip, ror r5
   25a5c:	andeq	lr, r2, r0, ror r5
   25a60:	andeq	lr, r2, r4, lsr #11
   25a64:	andeq	lr, r2, ip, asr #11
   25a68:	andeq	lr, r2, r4, ror #11
   25a6c:	andeq	lr, r2, ip, lsl r6
   25a70:	andeq	ip, r2, r4, asr #30
   25a74:	andeq	lr, r2, r8, lsr r6
   25a78:	andeq	lr, r2, r8, ror #12
   25a7c:	andeq	ip, r2, ip, ror #29
   25a80:	andeq	sp, r2, ip, asr #11
   25a84:	andeq	sl, r1, r4, lsr #11
   25a88:	andeq	ip, r2, r4, ror #24
   25a8c:	andeq	r2, r2, r8, lsr #21
   25a90:	andeq	ip, r2, ip, lsr ip
   25a94:	andeq	ip, r2, r4, lsl #29
   25a98:	andeq	ip, r2, ip, ror #29
   25a9c:	andeq	ip, r2, r8, lsl ip
   25aa0:	andeq	ip, r2, r0, ror #28
   25aa4:	andeq	ip, r2, r8, asr #29
   25aa8:	strdeq	ip, [r2], -r4
   25aac:	andeq	ip, r2, ip, lsr lr
   25ab0:	andeq	ip, r2, r4, lsr #29
   25ab4:	ldrdeq	ip, [r2], -r0
   25ab8:	andeq	ip, r2, r8, lsl lr
   25abc:	andeq	fp, r1, r4, lsl r3
   25ac0:	andeq	ip, r2, ip, lsr #23
   25ac4:	strdeq	ip, [r2], -r4
   25ac8:	andeq	ip, r2, ip, asr lr
   25acc:	andeq	ip, r2, r8, lsl #23
   25ad0:	ldrdeq	ip, [r2], -r0
   25ad4:	andeq	ip, r2, r8, lsr lr
   25ad8:	andeq	ip, r2, r4, ror #22
   25adc:	andeq	ip, r2, ip, lsr #27
   25ae0:	andeq	ip, r2, r4, lsl lr
   25ae4:	andeq	ip, r2, r0, asr #22
   25ae8:	andeq	ip, r2, r8, lsl #27
   25aec:	andeq	fp, r1, r4, lsl #5
   25af0:	andeq	ip, r2, ip, lsl fp
   25af4:	andeq	ip, r2, r4, ror #26
   25af8:	strdeq	sl, [r1], -r4
   25afc:	strdeq	ip, [r2], -r8
   25b00:	andeq	ip, r2, r0, asr #26
   25b04:	andeq	ip, r2, r8, lsr #27
   25b08:	ldrdeq	ip, [r2], -r4
   25b0c:	andeq	ip, r2, ip, lsl sp
   25b10:	andeq	ip, r2, r4, lsl #27
   25b14:			; <UNDEFINED> instruction: 0x0002cab0
   25b18:	strdeq	ip, [r2], -r8
   25b1c:	andeq	ip, r2, r0, ror #26
   25b20:	andeq	ip, r2, ip, lsl #21
   25b24:	ldrdeq	ip, [r2], -r4
   25b28:	andeq	ip, r2, ip, lsr sp
   25b2c:	andeq	ip, r2, r8, ror #20
   25b30:			; <UNDEFINED> instruction: 0x0002ccb0
   25b34:	andeq	ip, r2, r8, lsl sp
   25b38:	andeq	ip, r2, r4, asr #20
   25b3c:	andeq	ip, r2, ip, lsl #25
   25b40:	strdeq	ip, [r2], -r4
   25b44:	muleq	r0, ip, r0
   25b48:	andeq	sp, r2, r4, asr r3
   25b4c:	andeq	ip, r2, r0, ror #24
   25b50:	andeq	sl, r1, r8, lsr #6
   25b54:	andeq	ip, r2, r8, ror #19
   25b58:	andeq	r2, r2, ip, lsr #16
   25b5c:	andeq	ip, r2, r8, asr #19
   25b60:	andeq	ip, r2, r0, lsl ip
   25b64:	andeq	ip, r2, r8, ror ip
   25b68:	andeq	ip, r2, r4, lsr #19
   25b6c:	andeq	ip, r2, ip, ror #23
   25b70:	andeq	ip, r2, r4, asr ip
   25b74:	andeq	ip, r2, r0, lsl #19
   25b78:	andeq	ip, r2, r8, asr #23
   25b7c:	andeq	ip, r2, r0, lsr ip
   25b80:	andeq	ip, r2, ip, asr r9
   25b84:	andeq	ip, r2, r4, lsr #23
   25b88:	andeq	ip, r2, ip, lsl #24
   25b8c:	andeq	ip, r2, r8, lsr r9
   25b90:	andeq	ip, r2, r0, lsl #23
   25b94:	andeq	ip, r2, r8, ror #23
   25b98:	andeq	ip, r2, r4, lsl r9
   25b9c:	andeq	ip, r2, ip, asr fp
   25ba0:	andeq	ip, r2, r4, asr #23
   25ba4:	strdeq	ip, [r2], -r0
   25ba8:	andeq	ip, r2, r8, lsr fp
   25bac:	andeq	ip, r2, r0, lsr #23
   25bb0:	andeq	ip, r2, ip, asr #17
   25bb4:	andeq	ip, r2, r4, lsl fp
   25bb8:	andeq	ip, r2, ip, ror fp
   25bbc:	andeq	ip, r2, r8, lsr #17
   25bc0:	strdeq	ip, [r2], -r0
   25bc4:	andeq	ip, r2, r8, asr fp
   25bc8:	mov	r0, r4
   25bcc:	ldr	r1, [sp, #24]
   25bd0:	mov	r9, #0
   25bd4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25bd8:	ldr	r3, [r4, #220]	; 0xdc
   25bdc:	ldr	r2, [sp, #36]	; 0x24
   25be0:	add	r3, r3, #1
   25be4:	str	r3, [r4, #220]	; 0xdc
   25be8:	add	r8, r8, #1
   25bec:	cmp	r8, r2
   25bf0:	bge	25c70 <__flatcc_fb_gen_c_json_parser@@Base+0x148c>
   25bf4:	ldr	r3, [sp, #40]	; 0x28
   25bf8:	add	r3, r3, r8, lsl #4
   25bfc:	ldr	r1, [r3, #8]
   25c00:	ldrh	r0, [r1, #72]	; 0x48
   25c04:	ands	r3, r0, #4
   25c08:	bne	25be8 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   25c0c:	ldrh	ip, [r1, #24]
   25c10:	sub	ip, ip, #14
   25c14:	cmp	ip, #1
   25c18:	bhi	25c30 <__flatcc_fb_gen_c_json_parser@@Base+0x144c>
   25c1c:	ldr	r3, [r1, #16]
   25c20:	ldrh	r3, [r3, #8]
   25c24:	sub	r3, r3, #4
   25c28:	clz	r3, r3
   25c2c:	lsr	r3, r3, #5
   25c30:	tst	r0, #256	; 0x100
   25c34:	beq	25be8 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   25c38:	ldrd	r0, [r1, #96]	; 0x60
   25c3c:	subs	sl, r0, r3
   25c40:	sbc	fp, r1, r3, asr #31
   25c44:	cmp	r9, #0
   25c48:	mov	r2, sl
   25c4c:	mov	r3, fp
   25c50:	bne	25bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x13e4>
   25c54:	mov	r0, r4
   25c58:	ldr	r1, [sp, #20]
   25c5c:	add	r8, r8, #1
   25c60:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c64:	ldr	r2, [sp, #36]	; 0x24
   25c68:	cmp	r8, r2
   25c6c:	blt	25bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   25c70:	cmp	r9, #0
   25c74:	ldr	fp, [sp, #12]
   25c78:	bne	25cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x150c>
   25c7c:	ldr	r3, [r4, #220]	; 0xdc
   25c80:	cmp	r3, #0
   25c84:	beq	26518 <__flatcc_fb_gen_c_json_parser@@Base+0x1d34>
   25c88:	ldr	r1, [pc, #-780]	; 25984 <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   25c8c:	sub	r3, r3, #1
   25c90:	mov	r0, r4
   25c94:	str	r3, [r4, #220]	; 0xdc
   25c98:	add	r1, pc, r1
   25c9c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ca0:	ldr	r3, [r4, #220]	; 0xdc
   25ca4:	mov	r0, r4
   25ca8:	ldr	r1, [pc, #-808]	; 25988 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   25cac:	add	r3, r3, #1
   25cb0:	add	r1, pc, r1
   25cb4:	str	r3, [r4, #220]	; 0xdc
   25cb8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25cbc:	ldr	r1, [pc, #-824]	; 2598c <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   25cc0:	mov	r0, r4
   25cc4:	add	r1, pc, r1
   25cc8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ccc:	ldr	r3, [r4, #220]	; 0xdc
   25cd0:	cmp	r3, #0
   25cd4:	beq	2653c <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   25cd8:	ldr	r1, [pc, #-848]	; 25990 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   25cdc:	sub	r3, r3, #1
   25ce0:	mov	r0, r4
   25ce4:	str	r3, [r4, #220]	; 0xdc
   25ce8:	add	r1, pc, r1
   25cec:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25cf0:	ldr	r3, [sp, #60]	; 0x3c
   25cf4:	cmp	r3, #0
   25cf8:	bne	25f0c <__flatcc_fb_gen_c_json_parser@@Base+0x1728>
   25cfc:	ldr	r1, [pc, #-880]	; 25994 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   25d00:	mov	r0, r4
   25d04:	add	r1, pc, r1
   25d08:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d0c:	ldr	r1, [pc, #-892]	; 25998 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   25d10:	mov	r0, r4
   25d14:	add	r1, pc, r1
   25d18:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d1c:	ldr	r1, [pc, #-904]	; 2599c <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   25d20:	mov	r2, #0
   25d24:	mov	r0, r4
   25d28:	ldr	r3, [r4, #220]	; 0xdc
   25d2c:	str	r2, [r4, #220]	; 0xdc
   25d30:	add	r1, pc, r1
   25d34:	str	r3, [r4, #228]	; 0xe4
   25d38:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d3c:	ldr	r1, [pc, #-932]	; 259a0 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   25d40:	mov	r0, r4
   25d44:	ldr	r3, [r4, #228]	; 0xe4
   25d48:	add	r1, pc, r1
   25d4c:	str	r3, [r4, #220]	; 0xdc
   25d50:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d54:	ldr	r3, [r4, #220]	; 0xdc
   25d58:	cmp	r3, #0
   25d5c:	beq	264d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cec>
   25d60:	ldr	r9, [pc, #-964]	; 259a4 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   25d64:	sub	r3, r3, #1
   25d68:	mov	r0, r4
   25d6c:	ldr	r8, [pc, #-972]	; 259a8 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   25d70:	str	r3, [r4, #220]	; 0xdc
   25d74:	add	r9, pc, r9
   25d78:	mov	r1, r9
   25d7c:	add	r8, pc, r8
   25d80:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d84:	mov	r1, r8
   25d88:	mov	r0, r4
   25d8c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d90:	ldr	r1, [pc, #-1004]	; 259ac <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   25d94:	mov	r2, r5
   25d98:	mov	r0, r4
   25d9c:	add	r1, pc, r1
   25da0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25da4:	ldr	r1, [pc, #-1020]	; 259b0 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   25da8:	mov	r0, r4
   25dac:	add	r1, pc, r1
   25db0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25db4:	ldr	r3, [r4, #220]	; 0xdc
   25db8:	mov	r2, r5
   25dbc:	mov	r0, r4
   25dc0:	ldr	r1, [pc, #-1044]	; 259b4 <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   25dc4:	add	r3, r3, #1
   25dc8:	add	r1, pc, r1
   25dcc:	str	r3, [r4, #220]	; 0xdc
   25dd0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25dd4:	ldr	r3, [r4, #220]	; 0xdc
   25dd8:	cmp	r3, #0
   25ddc:	beq	264ac <__flatcc_fb_gen_c_json_parser@@Base+0x1cc8>
   25de0:	sub	r3, r3, #1
   25de4:	mov	r1, r9
   25de8:	mov	r0, r4
   25dec:	str	r3, [r4, #220]	; 0xdc
   25df0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25df4:	mov	r0, r4
   25df8:	mov	r1, r8
   25dfc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e00:	ldr	r0, [sp, #40]	; 0x28
   25e04:	cmp	r0, #0
   25e08:	beq	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   25e0c:	bl	13ea4 <free@plt>
   25e10:	b	24ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   25e14:	ldr	r1, [pc, #-1124]	; 259b8 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   25e18:	mov	r0, r4
   25e1c:	add	r1, pc, r1
   25e20:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e24:	ldr	r1, [pc, #-1136]	; 259bc <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   25e28:	mov	r0, r4
   25e2c:	add	r1, pc, r1
   25e30:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e34:	ldr	r3, [sp, #36]	; 0x24
   25e38:	mov	ip, #0
   25e3c:	mov	r1, r7
   25e40:	mov	r2, ip
   25e44:	mov	r0, r4
   25e48:	str	ip, [sp]
   25e4c:	sub	r3, r3, #1
   25e50:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   25e54:	b	252b8 <__flatcc_fb_gen_c_json_parser@@Base+0xad4>
   25e58:	ldr	r3, [sp, #36]	; 0x24
   25e5c:	cmp	r3, #0
   25e60:	ble	25180 <__flatcc_fb_gen_c_json_parser@@Base+0x99c>
   25e64:	ldr	r2, [pc, #-808]	; 25b44 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   25e68:	movw	r3, #1303	; 0x517
   25e6c:	ldr	r1, [sp, #28]
   25e70:	ldr	r0, [pc, #-1208]	; 259c0 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   25e74:	ldr	r4, [pc, #-1208]	; 259c4 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   25e78:	ldr	ip, [r1, r2]
   25e7c:	add	r0, pc, r0
   25e80:	ldr	r1, [pc, #-1216]	; 259c8 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   25e84:	add	r4, pc, r4
   25e88:	str	r0, [sp]
   25e8c:	mov	r2, r4
   25e90:	ldr	r0, [ip]
   25e94:	add	r1, pc, r1
   25e98:	bl	13f58 <fprintf@plt>
   25e9c:	ldr	r3, [pc, #-1240]	; 259cc <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   25ea0:	mov	r1, r4
   25ea4:	movw	r2, #1303	; 0x517
   25ea8:	ldr	r0, [pc, #-1248]	; 259d0 <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   25eac:	add	r3, pc, r3
   25eb0:	add	r3, r3, #280	; 0x118
   25eb4:	add	r0, pc, r0
   25eb8:	bl	1400c <__assert_fail@plt>
   25ebc:	ldr	r1, [pc, #-1264]	; 259d4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   25ec0:	mov	r0, r4
   25ec4:	add	r1, pc, r1
   25ec8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ecc:	ldr	r1, [pc, #-1276]	; 259d8 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   25ed0:	mov	r0, r4
   25ed4:	add	r1, pc, r1
   25ed8:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25edc:	b	25754 <__flatcc_fb_gen_c_json_parser@@Base+0xf70>
   25ee0:	ldr	r1, [pc, #-1292]	; 259dc <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   25ee4:	asr	r3, r2, #31
   25ee8:	mov	r0, r4
   25eec:	add	r1, pc, r1
   25ef0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ef4:	b	256dc <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   25ef8:	ldr	r1, [pc, #-1312]	; 259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   25efc:	mov	r0, r4
   25f00:	add	r1, pc, r1
   25f04:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f08:	b	2569c <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   25f0c:	ldr	r1, [pc, #-1328]	; 259e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   25f10:	mov	r0, r4
   25f14:	add	r1, pc, r1
   25f18:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f1c:	b	25cfc <__flatcc_fb_gen_c_json_parser@@Base+0x1518>
   25f20:	ldr	r1, [pc, #-1344]	; 259e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   25f24:	mov	r0, r4
   25f28:	add	r1, pc, r1
   25f2c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f30:	ldr	r1, [pc, #-1356]	; 259ec <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   25f34:	mov	r0, r4
   25f38:	add	r1, pc, r1
   25f3c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f40:	ldr	r3, [r4, #220]	; 0xdc
   25f44:	cmp	r3, #0
   25f48:	beq	265dc <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   25f4c:	ldr	r1, [pc, #-1380]	; 259f0 <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   25f50:	sub	r3, r3, #1
   25f54:	mov	r0, r4
   25f58:	str	r3, [r4, #220]	; 0xdc
   25f5c:	add	r1, pc, r1
   25f60:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f64:	b	24edc <__flatcc_fb_gen_c_json_parser@@Base+0x6f8>
   25f68:	ldr	r3, [sp, #36]	; 0x24
   25f6c:	cmp	r3, #0
   25f70:	bgt	26560 <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   25f74:	ldr	r2, [pc, #-1416]	; 259f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   25f78:	str	r6, [sp, #52]	; 0x34
   25f7c:	ldr	r3, [pc, #-1420]	; 259f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   25f80:	str	r0, [sp, #56]	; 0x38
   25f84:	str	r0, [sp, #60]	; 0x3c
   25f88:	add	r2, pc, r2
   25f8c:	add	r3, pc, r3
   25f90:	strd	r2, [sp, #44]	; 0x2c
   25f94:	b	255ec <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   25f98:	ldr	r0, [pc, #-1444]	; 259fc <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   25f9c:	mov	r2, #36	; 0x24
   25fa0:	mov	r1, #1
   25fa4:	ldr	r3, [r4, #204]	; 0xcc
   25fa8:	add	r0, pc, r0
   25fac:	bl	13eec <fwrite@plt>
   25fb0:	b	248a0 <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   25fb4:	ldr	r0, [pc, #-1468]	; 25a00 <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   25fb8:	mov	r2, #36	; 0x24
   25fbc:	mov	r1, #1
   25fc0:	ldr	r3, [r4, #204]	; 0xcc
   25fc4:	add	r0, pc, r0
   25fc8:	bl	13eec <fwrite@plt>
   25fcc:	b	25104 <__flatcc_fb_gen_c_json_parser@@Base+0x920>
   25fd0:	mov	r2, #220	; 0xdc
   25fd4:	mov	r1, r7
   25fd8:	mov	r0, r5
   25fdc:	bl	13f70 <memset@plt>
   25fe0:	mov	r2, r5
   25fe4:	mov	r1, r6
   25fe8:	ldr	r0, [r6, #12]
   25fec:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   25ff0:	ldr	r1, [pc, #-1524]	; 25a04 <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   25ff4:	mov	r0, r4
   25ff8:	ldr	r3, [r4, #208]	; 0xd0
   25ffc:	add	r1, pc, r1
   26000:	ldr	r2, [r3, #160]	; 0xa0
   26004:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26008:	ldr	r3, [r4, #220]	; 0xdc
   2600c:	mov	r0, r4
   26010:	ldr	r1, [pc, #-1552]	; 25a08 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   26014:	add	r3, r3, #2
   26018:	add	r1, pc, r1
   2601c:	str	r3, [r4, #220]	; 0xdc
   26020:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26024:	ldr	r3, [r4, #220]	; 0xdc
   26028:	cmp	r3, #0
   2602c:	beq	265b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   26030:	cmp	r3, #1
   26034:	streq	r7, [r4, #220]	; 0xdc
   26038:	beq	265b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   2603c:	ldr	r1, [pc, #-1592]	; 25a0c <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   26040:	sub	r3, r3, #2
   26044:	mov	r0, r4
   26048:	str	r3, [r4, #220]	; 0xdc
   2604c:	add	r1, pc, r1
   26050:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26054:	ldr	r3, [r4, #220]	; 0xdc
   26058:	mov	r0, r4
   2605c:	ldr	r1, [pc, #-1620]	; 25a10 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   26060:	add	r3, r3, #1
   26064:	add	r1, pc, r1
   26068:	str	r3, [r4, #220]	; 0xdc
   2606c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26070:	ldr	r1, [pc, #-1636]	; 25a14 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   26074:	mov	r0, r4
   26078:	add	r1, pc, r1
   2607c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26080:	ldr	r1, [pc, #-1648]	; 25a18 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   26084:	mov	r0, r4
   26088:	add	r1, pc, r1
   2608c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26090:	ldr	r1, [pc, #-1660]	; 25a1c <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   26094:	mov	r0, r4
   26098:	add	r1, pc, r1
   2609c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260a0:	ldr	r1, [pc, #-1672]	; 25a20 <__flatcc_fb_gen_c_json_parser@@Base+0x123c>
   260a4:	mov	r0, r4
   260a8:	add	r1, pc, r1
   260ac:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260b0:	ldr	r2, [r4, #208]	; 0xd0
   260b4:	ldrh	r3, [r2, #16]
   260b8:	cmp	r3, #2
   260bc:	beq	2619c <__flatcc_fb_gen_c_json_parser@@Base+0x19b8>
   260c0:	ldr	r1, [pc, #-1700]	; 25a24 <__flatcc_fb_gen_c_json_parser@@Base+0x1240>
   260c4:	mov	r0, r4
   260c8:	add	r1, pc, r1
   260cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260d0:	ldr	r1, [pc, #-1712]	; 25a28 <__flatcc_fb_gen_c_json_parser@@Base+0x1244>
   260d4:	mov	r2, r5
   260d8:	mov	r0, r4
   260dc:	add	r1, pc, r1
   260e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260e4:	ldr	r1, [pc, #-1728]	; 25a2c <__flatcc_fb_gen_c_json_parser@@Base+0x1248>
   260e8:	mov	r0, r4
   260ec:	add	r1, pc, r1
   260f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260f4:	ldr	r3, [r4, #220]	; 0xdc
   260f8:	mov	r0, r4
   260fc:	ldr	r1, [pc, #-1748]	; 25a30 <__flatcc_fb_gen_c_json_parser@@Base+0x124c>
   26100:	add	r3, r3, #1
   26104:	add	r1, pc, r1
   26108:	str	r3, [r4, #220]	; 0xdc
   2610c:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26110:	ldr	r3, [r4, #220]	; 0xdc
   26114:	cmp	r3, #0
   26118:	beq	26648 <__flatcc_fb_gen_c_json_parser@@Base+0x1e64>
   2611c:	ldr	r5, [pc, #-1776]	; 25a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   26120:	sub	r3, r3, #1
   26124:	mov	r0, r4
   26128:	str	r3, [r4, #220]	; 0xdc
   2612c:	add	r5, pc, r5
   26130:	mov	r1, r5
   26134:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26138:	ldr	r1, [pc, #-1800]	; 25a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   2613c:	mov	r0, r4
   26140:	add	r1, pc, r1
   26144:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26148:	ldr	r1, [pc, #-1812]	; 25a3c <__flatcc_fb_gen_c_json_parser@@Base+0x1258>
   2614c:	mov	r0, r4
   26150:	add	r1, pc, r1
   26154:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26158:	ldr	r1, [pc, #-1824]	; 25a40 <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   2615c:	mov	r0, r4
   26160:	add	r1, pc, r1
   26164:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26168:	ldr	r3, [r4, #220]	; 0xdc
   2616c:	cmp	r3, #0
   26170:	beq	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   26174:	sub	r3, r3, #1
   26178:	mov	r1, r5
   2617c:	mov	r0, r4
   26180:	str	r3, [r4, #220]	; 0xdc
   26184:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26188:	ldr	r1, [pc, #-1868]	; 25a44 <__flatcc_fb_gen_c_json_parser@@Base+0x1260>
   2618c:	mov	r0, r4
   26190:	add	r1, pc, r1
   26194:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26198:	b	250f4 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   2619c:	ldr	r1, [pc, #-1884]	; 25a48 <__flatcc_fb_gen_c_json_parser@@Base+0x1264>
   261a0:	mov	r0, r4
   261a4:	ldr	r3, [r2, #8]
   261a8:	ldr	r2, [r2, #12]
   261ac:	add	r1, pc, r1
   261b0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261b4:	b	260d0 <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   261b8:	ldr	r1, [pc, #-1908]	; 25a4c <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   261bc:	mov	r0, r4
   261c0:	ldr	r3, [r2, #8]
   261c4:	ldr	r2, [r2, #12]
   261c8:	add	r1, pc, r1
   261cc:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261d0:	b	2502c <__flatcc_fb_gen_c_json_parser@@Base+0x848>
   261d4:	ldr	r1, [pc, #-1932]	; 25a50 <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   261d8:	mov	r0, r4
   261dc:	add	r1, pc, r1
   261e0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261e4:	ldr	r1, [pc, #-1944]	; 25a54 <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   261e8:	mov	r0, r4
   261ec:	add	r1, pc, r1
   261f0:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261f4:	ldr	r1, [pc, #-1956]	; 25a58 <__flatcc_fb_gen_c_json_parser@@Base+0x1274>
   261f8:	mov	r0, r4
   261fc:	add	r1, pc, r1
   26200:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26204:	ldr	r1, [pc, #-1968]	; 25a5c <__flatcc_fb_gen_c_json_parser@@Base+0x1278>
   26208:	mov	r0, r4
   2620c:	add	r1, pc, r1
   26210:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26214:	ldr	r1, [pc, #-1980]	; 25a60 <__flatcc_fb_gen_c_json_parser@@Base+0x127c>
   26218:	mov	r0, r4
   2621c:	add	r1, pc, r1
   26220:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26224:	ldr	r1, [pc, #-1992]	; 25a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   26228:	mov	r0, r4
   2622c:	add	r1, pc, r1
   26230:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26234:	ldr	r1, [pc, #-2004]	; 25a68 <__flatcc_fb_gen_c_json_parser@@Base+0x1284>
   26238:	mov	r0, r4
   2623c:	add	r1, pc, r1
   26240:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26244:	ldr	r1, [pc, #-2016]	; 25a6c <__flatcc_fb_gen_c_json_parser@@Base+0x1288>
   26248:	mov	r0, r4
   2624c:	add	r1, pc, r1
   26250:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26254:	ldr	r1, [pc, #-2028]	; 25a70 <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
   26258:	mov	r0, r4
   2625c:	add	r1, pc, r1
   26260:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26264:	ldr	r1, [pc, #-2040]	; 25a74 <__flatcc_fb_gen_c_json_parser@@Base+0x1290>
   26268:	mov	r0, r4
   2626c:	ldr	r3, [r4, #208]	; 0xd0
   26270:	add	r1, pc, r1
   26274:	ldr	r2, [r3, #160]	; 0xa0
   26278:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2627c:	ldr	r3, [r4, #220]	; 0xdc
   26280:	mov	r0, r4
   26284:	ldr	r1, [pc, #-2068]	; 25a78 <__flatcc_fb_gen_c_json_parser@@Base+0x1294>
   26288:	add	r3, r3, #2
   2628c:	add	r1, pc, r1
   26290:	str	r3, [r4, #220]	; 0xdc
   26294:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26298:	ldr	r3, [r4, #220]	; 0xdc
   2629c:	cmp	r3, #0
   262a0:	beq	26690 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   262a4:	cmp	r3, #1
   262a8:	moveq	r3, #0
   262ac:	streq	r3, [r4, #220]	; 0xdc
   262b0:	beq	26690 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   262b4:	sub	r3, r3, #2
   262b8:	mov	r1, r8
   262bc:	mov	r0, r4
   262c0:	str	r3, [r4, #220]	; 0xdc
   262c4:	bl	20988 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   262c8:	ldr	r7, [r4, #208]	; 0xd0
   262cc:	b	248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   262d0:	cmp	r6, #0
   262d4:	str	r9, [sp, #40]	; 0x28
   262d8:	ble	24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x5bc>
   262dc:	mov	r0, r5
   262e0:	ldr	r4, [pc, #-2156]	; 25a7c <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
   262e4:	bl	228f4 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   262e8:	ldr	r1, [pc, #-2160]	; 25a80 <__flatcc_fb_gen_c_json_parser@@Base+0x129c>
   262ec:	movw	r3, #1194	; 0x4aa
   262f0:	ldr	r0, [pc, #-1972]	; 25b44 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   262f4:	add	r4, pc, r4
   262f8:	ldr	ip, [sp, #28]
   262fc:	mov	r2, r4
   26300:	add	r1, pc, r1
   26304:	ldr	r0, [ip, r0]
   26308:	str	r1, [sp]
   2630c:	ldr	r1, [pc, #-2192]	; 25a84 <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   26310:	ldr	r0, [r0]
   26314:	add	r1, pc, r1
   26318:	bl	13f58 <fprintf@plt>
   2631c:	ldr	r3, [pc, #-2204]	; 25a88 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
   26320:	mov	r1, r4
   26324:	movw	r2, #1194	; 0x4aa
   26328:	ldr	r0, [pc, #-2212]	; 25a8c <__flatcc_fb_gen_c_json_parser@@Base+0x12a8>
   2632c:	add	r3, pc, r3
   26330:	add	r3, r3, #348	; 0x15c
   26334:	add	r0, pc, r0
   26338:	bl	1400c <__assert_fail@plt>
   2633c:	mov	r3, #0
   26340:	str	r3, [r4, #220]	; 0xdc
   26344:	ldr	r3, [pc, #-2236]	; 25a90 <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
   26348:	movw	r2, #1731	; 0x6c3
   2634c:	ldr	r1, [pc, #-2240]	; 25a94 <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   26350:	ldr	r0, [pc, #-2240]	; 25a98 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   26354:	add	r3, pc, r3
   26358:	add	r3, r3, #252	; 0xfc
   2635c:	add	r1, pc, r1
   26360:	add	r0, pc, r0
   26364:	bl	1400c <__assert_fail@plt>
   26368:	ldr	r3, [pc, #-2260]	; 25a9c <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   2636c:	movw	r2, #1755	; 0x6db
   26370:	ldr	r1, [pc, #-2264]	; 25aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x12bc>
   26374:	ldr	r0, [pc, #-2264]	; 25aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   26378:	add	r3, pc, r3
   2637c:	add	r3, r3, #252	; 0xfc
   26380:	add	r1, pc, r1
   26384:	add	r0, pc, r0
   26388:	bl	1400c <__assert_fail@plt>
   2638c:	ldr	r3, [pc, #-2284]	; 25aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x12c4>
   26390:	movw	r2, #1205	; 0x4b5
   26394:	ldr	r1, [pc, #-2288]	; 25aac <__flatcc_fb_gen_c_json_parser@@Base+0x12c8>
   26398:	ldr	r0, [pc, #-2288]	; 25ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x12cc>
   2639c:	add	r3, pc, r3
   263a0:	add	r3, r3, #348	; 0x15c
   263a4:	add	r1, pc, r1
   263a8:	add	r0, pc, r0
   263ac:	bl	1400c <__assert_fail@plt>
   263b0:	ldr	r3, [pc, #-2308]	; 25ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   263b4:	movw	r2, #1353	; 0x549
   263b8:	ldr	r1, [pc, #-2312]	; 25ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   263bc:	ldr	r0, [pc, #-2312]	; 25abc <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   263c0:	add	r3, pc, r3
   263c4:	add	r3, r3, #308	; 0x134
   263c8:	add	r1, pc, r1
   263cc:	add	r0, pc, r0
   263d0:	bl	1400c <__assert_fail@plt>
   263d4:	ldr	r3, [pc, #-2332]	; 25ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x12dc>
   263d8:	movw	r2, #1343	; 0x53f
   263dc:	ldr	r1, [pc, #-2336]	; 25ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   263e0:	ldr	r0, [pc, #-2336]	; 25ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   263e4:	add	r3, pc, r3
   263e8:	add	r3, r3, #280	; 0x118
   263ec:	add	r1, pc, r1
   263f0:	add	r0, pc, r0
   263f4:	bl	1400c <__assert_fail@plt>
   263f8:	ldr	r3, [pc, #-2356]	; 25acc <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   263fc:	movw	r2, #1334	; 0x536
   26400:	ldr	r1, [pc, #-2360]	; 25ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
   26404:	ldr	r0, [pc, #-2360]	; 25ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   26408:	add	r3, pc, r3
   2640c:	add	r3, r3, #280	; 0x118
   26410:	add	r1, pc, r1
   26414:	add	r0, pc, r0
   26418:	bl	1400c <__assert_fail@plt>
   2641c:	ldr	r3, [pc, #-2380]	; 25ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x12f4>
   26420:	movw	r2, #1438	; 0x59e
   26424:	ldr	r1, [pc, #-2384]	; 25adc <__flatcc_fb_gen_c_json_parser@@Base+0x12f8>
   26428:	ldr	r0, [pc, #-2384]	; 25ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x12fc>
   2642c:	add	r3, pc, r3
   26430:	add	r3, r3, #328	; 0x148
   26434:	add	r1, pc, r1
   26438:	add	r0, pc, r0
   2643c:	bl	1400c <__assert_fail@plt>
   26440:	ldr	r3, [pc, #-2404]	; 25ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   26444:	movw	r2, #1301	; 0x515
   26448:	ldr	r1, [pc, #-2408]	; 25ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   2644c:	ldr	r0, [pc, #-2408]	; 25aec <__flatcc_fb_gen_c_json_parser@@Base+0x1308>
   26450:	add	r3, pc, r3
   26454:	add	r3, r3, #280	; 0x118
   26458:	add	r1, pc, r1
   2645c:	add	r0, pc, r0
   26460:	bl	1400c <__assert_fail@plt>
   26464:	ldr	r3, [pc, #-2428]	; 25af0 <__flatcc_fb_gen_c_json_parser@@Base+0x130c>
   26468:	movw	r2, #1390	; 0x56e
   2646c:	ldr	r1, [pc, #-2432]	; 25af4 <__flatcc_fb_gen_c_json_parser@@Base+0x1310>
   26470:	ldr	r0, [pc, #-2432]	; 25af8 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   26474:	add	r3, pc, r3
   26478:	add	r3, r3, #328	; 0x148
   2647c:	add	r1, pc, r1
   26480:	add	r0, pc, r0
   26484:	bl	1400c <__assert_fail@plt>
   26488:	ldr	r3, [pc, #-2452]	; 25afc <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   2648c:	mov	r2, #1376	; 0x560
   26490:	ldr	r1, [pc, #-2456]	; 25b00 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   26494:	ldr	r0, [pc, #-2456]	; 25b04 <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   26498:	add	r3, pc, r3
   2649c:	add	r3, r3, #308	; 0x134
   264a0:	add	r1, pc, r1
   264a4:	add	r0, pc, r0
   264a8:	bl	1400c <__assert_fail@plt>
   264ac:	ldr	r3, [pc, #-2476]	; 25b08 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   264b0:	movw	r2, #1479	; 0x5c7
   264b4:	ldr	r1, [pc, #-2480]	; 25b0c <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   264b8:	ldr	r0, [pc, #-2480]	; 25b10 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   264bc:	add	r3, pc, r3
   264c0:	add	r3, r3, #328	; 0x148
   264c4:	add	r1, pc, r1
   264c8:	add	r0, pc, r0
   264cc:	bl	1400c <__assert_fail@plt>
   264d0:	ldr	r3, [pc, #-2500]	; 25b14 <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   264d4:	movw	r2, #1473	; 0x5c1
   264d8:	ldr	r1, [pc, #-2504]	; 25b18 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   264dc:	ldr	r0, [pc, #-2504]	; 25b1c <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   264e0:	add	r3, pc, r3
   264e4:	add	r3, r3, #328	; 0x148
   264e8:	add	r1, pc, r1
   264ec:	add	r0, pc, r0
   264f0:	bl	1400c <__assert_fail@plt>
   264f4:	ldr	r3, [pc, #-2524]	; 25b20 <__flatcc_fb_gen_c_json_parser@@Base+0x133c>
   264f8:	movw	r2, #1370	; 0x55a
   264fc:	ldr	r1, [pc, #-2528]	; 25b24 <__flatcc_fb_gen_c_json_parser@@Base+0x1340>
   26500:	ldr	r0, [pc, #-2528]	; 25b28 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   26504:	add	r3, pc, r3
   26508:	add	r3, r3, #308	; 0x134
   2650c:	add	r1, pc, r1
   26510:	add	r0, pc, r0
   26514:	bl	1400c <__assert_fail@plt>
   26518:	ldr	r3, [pc, #-2548]	; 25b2c <__flatcc_fb_gen_c_json_parser@@Base+0x1348>
   2651c:	movw	r2, #1458	; 0x5b2
   26520:	ldr	r1, [pc, #-2552]	; 25b30 <__flatcc_fb_gen_c_json_parser@@Base+0x134c>
   26524:	ldr	r0, [pc, #-2552]	; 25b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   26528:	add	r3, pc, r3
   2652c:	add	r3, r3, #328	; 0x148
   26530:	add	r1, pc, r1
   26534:	add	r0, pc, r0
   26538:	bl	1400c <__assert_fail@plt>
   2653c:	ldr	r3, [pc, #-2572]	; 25b38 <__flatcc_fb_gen_c_json_parser@@Base+0x1354>
   26540:	movw	r2, #1461	; 0x5b5
   26544:	ldr	r1, [pc, #-2576]	; 25b3c <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
   26548:	ldr	r0, [pc, #-2576]	; 25b40 <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   2654c:	add	r3, pc, r3
   26550:	add	r3, r3, #328	; 0x148
   26554:	add	r1, pc, r1
   26558:	add	r0, pc, r0
   2655c:	bl	1400c <__assert_fail@plt>
   26560:	ldr	r2, [pc, #-2596]	; 25b44 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   26564:	mov	r3, #1392	; 0x570
   26568:	ldr	r1, [sp, #28]
   2656c:	ldr	r0, [pc, #-2604]	; 25b48 <__flatcc_fb_gen_c_json_parser@@Base+0x1364>
   26570:	ldr	r4, [pc, #-2604]	; 25b4c <__flatcc_fb_gen_c_json_parser@@Base+0x1368>
   26574:	ldr	ip, [r1, r2]
   26578:	add	r0, pc, r0
   2657c:	ldr	r1, [pc, #-2612]	; 25b50 <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   26580:	add	r4, pc, r4
   26584:	str	r0, [sp]
   26588:	mov	r2, r4
   2658c:	ldr	r0, [ip]
   26590:	add	r1, pc, r1
   26594:	bl	13f58 <fprintf@plt>
   26598:	ldr	r3, [pc, #-2636]	; 25b54 <__flatcc_fb_gen_c_json_parser@@Base+0x1370>
   2659c:	mov	r1, r4
   265a0:	mov	r2, #1392	; 0x570
   265a4:	ldr	r0, [pc, #-2644]	; 25b58 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   265a8:	add	r3, pc, r3
   265ac:	add	r3, r3, #328	; 0x148
   265b0:	add	r0, pc, r0
   265b4:	bl	1400c <__assert_fail@plt>
   265b8:	ldr	r3, [pc, #-2660]	; 25b5c <__flatcc_fb_gen_c_json_parser@@Base+0x1378>
   265bc:	movw	r2, #1610	; 0x64a
   265c0:	ldr	r1, [pc, #-2664]	; 25b60 <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   265c4:	ldr	r0, [pc, #-2664]	; 25b64 <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   265c8:	add	r3, pc, r3
   265cc:	add	r3, r3, #372	; 0x174
   265d0:	add	r1, pc, r1
   265d4:	add	r0, pc, r0
   265d8:	bl	1400c <__assert_fail@plt>
   265dc:	ldr	r3, [pc, #-2684]	; 25b68 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   265e0:	movw	r2, #1210	; 0x4ba
   265e4:	ldr	r1, [pc, #-2688]	; 25b6c <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   265e8:	ldr	r0, [pc, #-2688]	; 25b70 <__flatcc_fb_gen_c_json_parser@@Base+0x138c>
   265ec:	add	r3, pc, r3
   265f0:	add	r3, r3, #348	; 0x15c
   265f4:	add	r1, pc, r1
   265f8:	add	r0, pc, r0
   265fc:	bl	1400c <__assert_fail@plt>
   26600:	ldr	r3, [pc, #-2708]	; 25b74 <__flatcc_fb_gen_c_json_parser@@Base+0x1390>
   26604:	movw	r2, #1645	; 0x66d
   26608:	ldr	r1, [pc, #-2712]	; 25b78 <__flatcc_fb_gen_c_json_parser@@Base+0x1394>
   2660c:	ldr	r0, [pc, #-2712]	; 25b7c <__flatcc_fb_gen_c_json_parser@@Base+0x1398>
   26610:	add	r3, pc, r3
   26614:	add	r3, r3, #396	; 0x18c
   26618:	add	r1, pc, r1
   2661c:	add	r0, pc, r0
   26620:	bl	1400c <__assert_fail@plt>
   26624:	ldr	r3, [pc, #-2732]	; 25b80 <__flatcc_fb_gen_c_json_parser@@Base+0x139c>
   26628:	movw	r2, #1219	; 0x4c3
   2662c:	ldr	r1, [pc, #-2736]	; 25b84 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   26630:	ldr	r0, [pc, #-2736]	; 25b88 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   26634:	add	r3, pc, r3
   26638:	add	r3, r3, #348	; 0x15c
   2663c:	add	r1, pc, r1
   26640:	add	r0, pc, r0
   26644:	bl	1400c <__assert_fail@plt>
   26648:	ldr	r3, [pc, #-2756]	; 25b8c <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   2664c:	movw	r2, #1626	; 0x65a
   26650:	ldr	r1, [pc, #-2760]	; 25b90 <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   26654:	ldr	r0, [pc, #-2760]	; 25b94 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   26658:	add	r3, pc, r3
   2665c:	add	r3, r3, #372	; 0x174
   26660:	add	r1, pc, r1
   26664:	add	r0, pc, r0
   26668:	bl	1400c <__assert_fail@plt>
   2666c:	ldr	r3, [pc, #-2780]	; 25b98 <__flatcc_fb_gen_c_json_parser@@Base+0x13b4>
   26670:	movw	r2, #1665	; 0x681
   26674:	ldr	r1, [pc, #-2784]	; 25b9c <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   26678:	ldr	r0, [pc, #-2784]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x13bc>
   2667c:	add	r3, pc, r3
   26680:	add	r3, r3, #396	; 0x18c
   26684:	add	r1, pc, r1
   26688:	add	r0, pc, r0
   2668c:	bl	1400c <__assert_fail@plt>
   26690:	ldr	r3, [pc, #-2804]	; 25ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   26694:	movw	r2, #1716	; 0x6b4
   26698:	ldr	r1, [pc, #-2808]	; 25ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x13c4>
   2669c:	ldr	r0, [pc, #-2808]	; 25bac <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   266a0:	add	r3, pc, r3
   266a4:	add	r3, r3, #252	; 0xfc
   266a8:	add	r1, pc, r1
   266ac:	add	r0, pc, r0
   266b0:	bl	1400c <__assert_fail@plt>
   266b4:	ldr	r3, [pc, #-2828]	; 25bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x13cc>
   266b8:	movw	r2, #1661	; 0x67d
   266bc:	ldr	r1, [pc, #-2832]	; 25bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
   266c0:	ldr	r0, [pc, #-2832]	; 25bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x13d4>
   266c4:	add	r3, pc, r3
   266c8:	add	r3, r3, #396	; 0x18c
   266cc:	add	r1, pc, r1
   266d0:	add	r0, pc, r0
   266d4:	bl	1400c <__assert_fail@plt>
   266d8:	ldr	r3, [pc, #-2852]	; 25bbc <__flatcc_fb_gen_c_json_parser@@Base+0x13d8>
   266dc:	movw	r2, #1630	; 0x65e
   266e0:	ldr	r1, [pc, #-2856]	; 25bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
   266e4:	ldr	r0, [pc, #-2856]	; 25bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x13e0>
   266e8:	add	r3, pc, r3
   266ec:	add	r3, r3, #372	; 0x174
   266f0:	add	r1, pc, r1
   266f4:	add	r0, pc, r0
   266f8:	bl	1400c <__assert_fail@plt>
   266fc:	ldr	r2, [pc, #88]	; 2675c <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   26700:	mov	r3, #96	; 0x60
   26704:	push	{lr}		; (str lr, [sp, #-4]!)
   26708:	sub	sp, sp, #12
   2670c:	ldr	r1, [pc, #76]	; 26760 <__flatcc_fb_gen_c_json_parser@@Base+0x1f7c>
   26710:	ldr	r0, [pc, #76]	; 26764 <__flatcc_fb_gen_c_json_parser@@Base+0x1f80>
   26714:	add	r2, pc, r2
   26718:	ldr	r4, [pc, #72]	; 26768 <__flatcc_fb_gen_c_json_parser@@Base+0x1f84>
   2671c:	ldr	ip, [r2, r1]
   26720:	add	r0, pc, r0
   26724:	ldr	r1, [pc, #64]	; 2676c <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   26728:	add	r4, pc, r4
   2672c:	str	r0, [sp]
   26730:	mov	r2, r4
   26734:	ldr	r0, [ip]
   26738:	add	r1, pc, r1
   2673c:	bl	13f58 <fprintf@plt>
   26740:	ldr	r3, [pc, #40]	; 26770 <__flatcc_fb_gen_c_json_parser@@Base+0x1f8c>
   26744:	mov	r1, r4
   26748:	mov	r2, #96	; 0x60
   2674c:	ldr	r0, [pc, #32]	; 26774 <__flatcc_fb_gen_c_json_parser@@Base+0x1f90>
   26750:	add	r3, pc, r3
   26754:	add	r0, pc, r0
   26758:	bl	1400c <__assert_fail@plt>
   2675c:	andeq	r4, r4, r4, ror #17
   26760:	muleq	r0, ip, r0
   26764:	andeq	sl, r1, r4, lsr #3
   26768:	andeq	sl, r1, r0, lsr r1
   2676c:	andeq	sl, r1, r0, lsl #3
   26770:	andeq	lr, r2, r8, ror #28
   26774:	andeq	r2, r2, r8, lsl #13
   26778:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2677c:	mov	r2, #220	; 0xdc
   26780:	mov	r5, r0
   26784:	strd	r6, [sp, #8]
   26788:	mov	r7, r1
   2678c:	mov	r1, #0
   26790:	strd	r8, [sp, #16]
   26794:	str	sl, [sp, #24]
   26798:	str	lr, [sp, #28]
   2679c:	sub	sp, sp, #448	; 0x1c0
   267a0:	add	r4, sp, #8
   267a4:	add	r6, sp, #228	; 0xe4
   267a8:	ldr	sl, [pc, #500]	; 269a4 <__flatcc_fb_gen_c_json_parser@@Base+0x21c0>
   267ac:	mov	r0, r4
   267b0:	bl	13f70 <memset@plt>
   267b4:	mov	r2, #220	; 0xdc
   267b8:	mov	r1, #0
   267bc:	mov	r0, r6
   267c0:	bl	13f70 <memset@plt>
   267c4:	mov	r2, r4
   267c8:	mov	r1, r7
   267cc:	ldr	r0, [r7, #12]
   267d0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   267d4:	ldr	r1, [pc, #460]	; 269a8 <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   267d8:	mov	r2, r4
   267dc:	add	sl, pc, sl
   267e0:	ldr	r0, [r5]
   267e4:	add	r1, pc, r1
   267e8:	bl	13f58 <fprintf@plt>
   267ec:	ldr	r4, [r7, #20]
   267f0:	cmp	r4, #0
   267f4:	beq	268e0 <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   267f8:	ldr	r7, [pc, #428]	; 269ac <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
   267fc:	ldr	r9, [pc, #428]	; 269b0 <__flatcc_fb_gen_c_json_parser@@Base+0x21cc>
   26800:	ldr	r8, [pc, #428]	; 269b4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   26804:	add	r7, pc, r7
   26808:	add	r9, pc, r9
   2680c:	add	r8, pc, r8
   26810:	b	26854 <__flatcc_fb_gen_c_json_parser@@Base+0x2070>
   26814:	ldr	r1, [r4, #16]
   26818:	mov	r2, r6
   2681c:	ldr	r0, [r1, #12]
   26820:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   26824:	ldr	r3, [r4, #16]
   26828:	ldrh	r3, [r3, #8]
   2682c:	cmp	r3, #0
   26830:	bne	26930 <__flatcc_fb_gen_c_json_parser@@Base+0x214c>
   26834:	mov	r3, r6
   26838:	mov	r1, r9
   2683c:	ldr	r0, [r5]
   26840:	ldr	r2, [r4, #48]	; 0x30
   26844:	bl	13f58 <fprintf@plt>
   26848:	ldr	r4, [r4]
   2684c:	cmp	r4, #0
   26850:	beq	268e0 <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   26854:	ldrh	r3, [r4, #24]
   26858:	cmp	r3, #10
   2685c:	beq	268c4 <__flatcc_fb_gen_c_json_parser@@Base+0x20e0>
   26860:	cmp	r3, #14
   26864:	beq	26814 <__flatcc_fb_gen_c_json_parser@@Base+0x2030>
   26868:	cmp	r3, #0
   2686c:	beq	26848 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   26870:	ldr	r2, [pc, #320]	; 269b8 <__flatcc_fb_gen_c_json_parser@@Base+0x21d4>
   26874:	mov	r3, #251	; 0xfb
   26878:	ldr	r0, [pc, #316]	; 269bc <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   2687c:	ldr	r4, [pc, #316]	; 269c0 <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   26880:	ldr	r1, [pc, #316]	; 269c4 <__flatcc_fb_gen_c_json_parser@@Base+0x21e0>
   26884:	add	r0, pc, r0
   26888:	ldr	ip, [sl, r2]
   2688c:	add	r4, pc, r4
   26890:	str	r0, [sp]
   26894:	mov	r2, r4
   26898:	add	r1, pc, r1
   2689c:	ldr	r0, [ip]
   268a0:	bl	13f58 <fprintf@plt>
   268a4:	ldr	r3, [pc, #284]	; 269c8 <__flatcc_fb_gen_c_json_parser@@Base+0x21e4>
   268a8:	mov	r1, r4
   268ac:	mov	r2, #251	; 0xfb
   268b0:	ldr	r0, [pc, #276]	; 269cc <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
   268b4:	add	r3, pc, r3
   268b8:	add	r3, r3, #20
   268bc:	add	r0, pc, r0
   268c0:	bl	1400c <__assert_fail@plt>
   268c4:	mov	r1, r7
   268c8:	ldr	r0, [r5]
   268cc:	ldr	r2, [r4, #48]	; 0x30
   268d0:	bl	13f58 <fprintf@plt>
   268d4:	ldr	r4, [r4]
   268d8:	cmp	r4, #0
   268dc:	bne	26854 <__flatcc_fb_gen_c_json_parser@@Base+0x2070>
   268e0:	ldr	r0, [pc, #232]	; 269d0 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   268e4:	mov	r2, #28
   268e8:	mov	r1, #1
   268ec:	ldr	r3, [r5]
   268f0:	add	r0, pc, r0
   268f4:	bl	13eec <fwrite@plt>
   268f8:	ldr	r0, [pc, #212]	; 269d4 <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   268fc:	mov	r2, #9
   26900:	mov	r1, #1
   26904:	ldr	r3, [r5]
   26908:	add	r0, pc, r0
   2690c:	bl	13eec <fwrite@plt>
   26910:	mov	r0, #0
   26914:	add	sp, sp, #448	; 0x1c0
   26918:	ldrd	r4, [sp]
   2691c:	ldrd	r6, [sp, #8]
   26920:	ldrd	r8, [sp, #16]
   26924:	ldr	sl, [sp, #24]
   26928:	add	sp, sp, #28
   2692c:	pop	{pc}		; (ldr pc, [sp], #4)
   26930:	cmp	r3, #1
   26934:	bne	26950 <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   26938:	mov	r3, r6
   2693c:	mov	r1, r8
   26940:	ldr	r0, [r5]
   26944:	ldr	r2, [r4, #48]	; 0x30
   26948:	bl	13f58 <fprintf@plt>
   2694c:	b	26848 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   26950:	ldr	r2, [pc, #96]	; 269b8 <__flatcc_fb_gen_c_json_parser@@Base+0x21d4>
   26954:	mov	r3, #240	; 0xf0
   26958:	ldr	r0, [pc, #120]	; 269d8 <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   2695c:	ldr	r4, [pc, #120]	; 269dc <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   26960:	ldr	r1, [pc, #120]	; 269e0 <__flatcc_fb_gen_c_json_parser@@Base+0x21fc>
   26964:	add	r0, pc, r0
   26968:	ldr	ip, [sl, r2]
   2696c:	add	r4, pc, r4
   26970:	str	r0, [sp]
   26974:	mov	r2, r4
   26978:	add	r1, pc, r1
   2697c:	ldr	r0, [ip]
   26980:	bl	13f58 <fprintf@plt>
   26984:	ldr	r3, [pc, #88]	; 269e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
   26988:	mov	r1, r4
   2698c:	mov	r2, #240	; 0xf0
   26990:	ldr	r0, [pc, #80]	; 269e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   26994:	add	r3, pc, r3
   26998:	add	r3, r3, #20
   2699c:	add	r0, pc, r0
   269a0:	bl	1400c <__assert_fail@plt>
   269a4:	andeq	r4, r4, ip, lsl r8
   269a8:	andeq	lr, r2, r8, lsr lr
   269ac:	andeq	pc, r2, r0
   269b0:	muleq	r2, r8, lr
   269b4:	strdeq	lr, [r2], -r8
   269b8:	muleq	r0, ip, r0
   269bc:	andeq	lr, r2, r8, asr pc
   269c0:	andeq	lr, r2, r0, ror #29
   269c4:	andeq	sl, r1, r0, lsr #32
   269c8:	andeq	lr, r2, r4, lsl #26
   269cc:	andeq	r2, r2, r0, lsr #10
   269d0:	andeq	lr, r2, r4, ror #30
   269d4:	andeq	lr, r2, ip, ror #30
   269d8:	andeq	lr, r2, r8, ror lr
   269dc:	andeq	lr, r2, r0, lsl #28
   269e0:	andeq	r9, r1, r0, asr #30
   269e4:	andeq	lr, r2, r4, lsr #24
   269e8:	andeq	r2, r2, r0, asr #8
   269ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   269f0:	mov	r2, #220	; 0xdc
   269f4:	mov	r4, r1
   269f8:	strd	r6, [sp, #8]
   269fc:	mov	r1, #0
   26a00:	mov	r6, r0
   26a04:	strd	r8, [sp, #16]
   26a08:	strd	sl, [sp, #24]
   26a0c:	str	lr, [sp, #32]
   26a10:	sub	sp, sp, #476	; 0x1dc
   26a14:	add	r7, sp, #32
   26a18:	add	r8, sp, #252	; 0xfc
   26a1c:	mov	r0, r7
   26a20:	bl	13f70 <memset@plt>
   26a24:	mov	r2, #220	; 0xdc
   26a28:	mov	r1, #0
   26a2c:	mov	r0, r8
   26a30:	bl	13f70 <memset@plt>
   26a34:	mov	r1, r4
   26a38:	mov	r2, r7
   26a3c:	ldr	r0, [r4, #12]
   26a40:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   26a44:	ldr	r1, [pc, #808]	; 26d74 <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   26a48:	mov	r2, r7
   26a4c:	ldr	r0, [r6]
   26a50:	add	r1, pc, r1
   26a54:	bl	13f58 <fprintf@plt>
   26a58:	ldr	r4, [r4, #20]
   26a5c:	cmp	r4, #0
   26a60:	beq	26b58 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   26a64:	ldr	r3, [pc, #780]	; 26d78 <__flatcc_fb_gen_c_json_parser@@Base+0x2594>
   26a68:	mov	r5, #0
   26a6c:	ldr	r9, [pc, #776]	; 26d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2598>
   26a70:	add	r3, pc, r3
   26a74:	str	r3, [sp, #24]
   26a78:	add	r9, pc, r9
   26a7c:	ldr	r3, [pc, #764]	; 26d80 <__flatcc_fb_gen_c_json_parser@@Base+0x259c>
   26a80:	add	r3, pc, r3
   26a84:	str	r3, [sp, #28]
   26a88:	ldrh	r3, [r4, #72]	; 0x48
   26a8c:	tst	r3, #4
   26a90:	bne	26b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   26a94:	ldrh	r3, [r4, #24]
   26a98:	cmp	r3, #8
   26a9c:	beq	26ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   26aa0:	cmp	r3, #14
   26aa4:	bne	26b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   26aa8:	ldr	r1, [r4, #16]
   26aac:	mov	r2, r8
   26ab0:	ldr	r0, [r1, #12]
   26ab4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   26ab8:	ldr	r2, [r4, #16]
   26abc:	ldrh	r3, [r2, #8]
   26ac0:	cmp	r3, #1
   26ac4:	beq	26be8 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   26ac8:	cmp	r3, #3
   26acc:	bne	26b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   26ad0:	ldr	r3, [r2, #40]	; 0x28
   26ad4:	sub	r3, r3, #1
   26ad8:	cmp	r3, #10
   26adc:	addls	pc, pc, r3, lsl #2
   26ae0:	b	26d70 <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   26ae4:	b	26d1c <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
   26ae8:	b	26ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x24c0>
   26aec:	b	26cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2514>
   26af0:	b	26d04 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
   26af4:	b	26d10 <__flatcc_fb_gen_c_json_parser@@Base+0x252c>
   26af8:	b	26d40 <__flatcc_fb_gen_c_json_parser@@Base+0x255c>
   26afc:	b	26d4c <__flatcc_fb_gen_c_json_parser@@Base+0x2568>
   26b00:	b	26d58 <__flatcc_fb_gen_c_json_parser@@Base+0x2574>
   26b04:	b	26d64 <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   26b08:	b	26d28 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
   26b0c:	b	26d34 <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   26b10:	ldr	r2, [pc, #620]	; 26d84 <__flatcc_fb_gen_c_json_parser@@Base+0x25a0>
   26b14:	add	r2, pc, r2
   26b18:	ldr	lr, [r4, #4]
   26b1c:	mov	r3, r5
   26b20:	mov	r1, r9
   26b24:	ldr	r0, [r6]
   26b28:	ldr	ip, [lr, #4]
   26b2c:	str	ip, [sp, #16]
   26b30:	ldr	lr, [lr]
   26b34:	str	ip, [sp, #8]
   26b38:	str	lr, [sp, #12]
   26b3c:	ldrd	sl, [r4, #80]	; 0x50
   26b40:	strd	sl, [sp]
   26b44:	bl	13f58 <fprintf@plt>
   26b48:	ldr	r4, [r4]
   26b4c:	add	r5, r5, #1
   26b50:	cmp	r4, #0
   26b54:	bne	26a88 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   26b58:	ldr	r0, [pc, #552]	; 26d88 <__flatcc_fb_gen_c_json_parser@@Base+0x25a4>
   26b5c:	mov	r2, #3
   26b60:	mov	r1, #1
   26b64:	ldr	r3, [r6]
   26b68:	add	r0, pc, r0
   26b6c:	bl	13eec <fwrite@plt>
   26b70:	ldr	r1, [pc, #532]	; 26d8c <__flatcc_fb_gen_c_json_parser@@Base+0x25a8>
   26b74:	mov	r3, r7
   26b78:	mov	r2, r7
   26b7c:	ldr	r0, [r6]
   26b80:	add	r1, pc, r1
   26b84:	bl	13f58 <fprintf@plt>
   26b88:	mov	r0, #0
   26b8c:	add	sp, sp, #476	; 0x1dc
   26b90:	ldrd	r4, [sp]
   26b94:	ldrd	r6, [sp, #8]
   26b98:	ldrd	r8, [sp, #16]
   26b9c:	ldrd	sl, [sp, #24]
   26ba0:	add	sp, sp, #32
   26ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   26ba8:	ldr	r3, [r4, #16]
   26bac:	sub	r3, r3, #1
   26bb0:	cmp	r3, #10
   26bb4:	addls	pc, pc, r3, lsl #2
   26bb8:	b	26d70 <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   26bbc:	b	26c34 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   26bc0:	b	26c3c <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   26bc4:	b	26c48 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26bc8:	b	26c50 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   26bcc:	b	26c5c <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   26bd0:	b	26c68 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
   26bd4:	b	26c74 <__flatcc_fb_gen_c_json_parser@@Base+0x2490>
   26bd8:	b	26c80 <__flatcc_fb_gen_c_json_parser@@Base+0x249c>
   26bdc:	b	26c8c <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   26be0:	b	26c98 <__flatcc_fb_gen_c_json_parser@@Base+0x24b4>
   26be4:	b	26b10 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   26be8:	ldr	ip, [r4, #4]
   26bec:	mov	r2, r5
   26bf0:	add	r5, r5, #1
   26bf4:	ldr	r1, [pc, #404]	; 26d90 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   26bf8:	ldr	r3, [ip, #4]
   26bfc:	str	r8, [sp, #20]
   26c00:	ldr	r0, [r6]
   26c04:	add	r1, pc, r1
   26c08:	str	r3, [sp, #16]
   26c0c:	ldr	ip, [ip]
   26c10:	str	r3, [sp, #8]
   26c14:	str	ip, [sp, #12]
   26c18:	ldrd	sl, [r4, #80]	; 0x50
   26c1c:	strd	sl, [sp]
   26c20:	bl	13f58 <fprintf@plt>
   26c24:	ldr	r4, [r4]
   26c28:	cmp	r4, #0
   26c2c:	bne	26a88 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   26c30:	b	26b58 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   26c34:	ldr	r2, [sp, #28]
   26c38:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c3c:	ldr	r2, [pc, #336]	; 26d94 <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   26c40:	add	r2, pc, r2
   26c44:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c48:	ldr	r2, [sp, #24]
   26c4c:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c50:	ldr	r2, [pc, #320]	; 26d98 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   26c54:	add	r2, pc, r2
   26c58:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c5c:	ldr	r2, [pc, #312]	; 26d9c <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   26c60:	add	r2, pc, r2
   26c64:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c68:	ldr	r2, [pc, #304]	; 26da0 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   26c6c:	add	r2, pc, r2
   26c70:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c74:	ldr	r2, [pc, #296]	; 26da4 <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   26c78:	add	r2, pc, r2
   26c7c:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c80:	ldr	r2, [pc, #288]	; 26da8 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   26c84:	add	r2, pc, r2
   26c88:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c8c:	ldr	r2, [pc, #280]	; 26dac <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   26c90:	add	r2, pc, r2
   26c94:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26c98:	ldr	r2, [pc, #272]	; 26db0 <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   26c9c:	add	r2, pc, r2
   26ca0:	b	26b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   26ca4:	ldr	r2, [pc, #264]	; 26db4 <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   26ca8:	add	r2, pc, r2
   26cac:	ldr	lr, [r4, #4]
   26cb0:	mov	r3, r5
   26cb4:	add	r5, r5, #1
   26cb8:	ldr	r1, [pc, #248]	; 26db8 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   26cbc:	ldr	ip, [lr, #4]
   26cc0:	str	r8, [sp, #20]
   26cc4:	ldr	r0, [r6]
   26cc8:	add	r1, pc, r1
   26ccc:	str	ip, [sp, #16]
   26cd0:	ldr	lr, [lr]
   26cd4:	str	ip, [sp, #8]
   26cd8:	str	lr, [sp, #12]
   26cdc:	ldrd	sl, [r4, #80]	; 0x50
   26ce0:	strd	sl, [sp]
   26ce4:	bl	13f58 <fprintf@plt>
   26ce8:	ldr	r4, [r4]
   26cec:	cmp	r4, #0
   26cf0:	bne	26a88 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   26cf4:	b	26b58 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   26cf8:	ldr	r2, [pc, #188]	; 26dbc <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   26cfc:	add	r2, pc, r2
   26d00:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d04:	ldr	r2, [pc, #180]	; 26dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   26d08:	add	r2, pc, r2
   26d0c:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d10:	ldr	r2, [pc, #172]	; 26dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   26d14:	add	r2, pc, r2
   26d18:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d1c:	ldr	r2, [pc, #164]	; 26dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   26d20:	add	r2, pc, r2
   26d24:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d28:	ldr	r2, [pc, #156]	; 26dcc <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   26d2c:	add	r2, pc, r2
   26d30:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d34:	ldr	r2, [pc, #148]	; 26dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   26d38:	add	r2, pc, r2
   26d3c:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d40:	ldr	r2, [pc, #140]	; 26dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   26d44:	add	r2, pc, r2
   26d48:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d4c:	ldr	r2, [pc, #132]	; 26dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   26d50:	add	r2, pc, r2
   26d54:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d58:	ldr	r2, [pc, #124]	; 26ddc <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   26d5c:	add	r2, pc, r2
   26d60:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d64:	ldr	r2, [pc, #116]	; 26de0 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   26d68:	add	r2, pc, r2
   26d6c:	b	26cac <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   26d70:	bl	266fc <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   26d74:	andeq	lr, r2, r0, lsr lr
   26d78:	andeq	r9, r1, r4, asr #29
   26d7c:	andeq	lr, r2, r8, asr lr
   26d80:	muleq	r1, r8, lr
   26d84:	andeq	r9, r1, ip, lsl #28
   26d88:			; <UNDEFINED> instruction: 0x0002bcb4
   26d8c:	andeq	lr, r2, r8, ror #28
   26d90:	andeq	lr, r2, ip, ror sp
   26d94:	andeq	r9, r1, r8, lsl #26
   26d98:	andeq	r9, r1, ip, lsl #26
   26d9c:	andeq	r1, r3, ip, ror #18
   26da0:	andeq	r9, r1, r4, lsl #26
   26da4:	andeq	r9, r1, r8, lsl #26
   26da8:	andeq	r9, r1, r0, lsl #25
   26dac:	andeq	r9, r1, r8, lsl #26
   26db0:	andeq	r9, r1, ip, ror #25
   26db4:	andeq	r9, r1, r0, lsr #25
   26db8:	andeq	lr, r2, r4, asr ip
   26dbc:	andeq	r9, r1, r8, lsr ip
   26dc0:	andeq	r9, r1, r8, asr ip
   26dc4:			; <UNDEFINED> instruction: 0x000318b8
   26dc8:	strdeq	r9, [r1], -r8
   26dcc:	andeq	r9, r1, ip, asr ip
   26dd0:	andeq	r9, r1, r8, ror #23
   26dd4:	andeq	r9, r1, ip, lsr #24
   26dd8:	andeq	r9, r1, r0, lsr ip
   26ddc:	andeq	r9, r1, r8, lsr #23
   26de0:	andeq	r9, r1, r0, lsr ip
   26de4:	ldr	r3, [pc, #1640]	; 27454 <__flatcc_fb_gen_c_json_parser@@Base+0x2c70>
   26de8:	mov	r2, #220	; 0xdc
   26dec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26df0:	mov	r4, r0
   26df4:	strd	r6, [sp, #8]
   26df8:	strd	r8, [sp, #16]
   26dfc:	mov	r8, r1
   26e00:	mov	r1, #0
   26e04:	strd	sl, [sp, #24]
   26e08:	str	lr, [sp, #32]
   26e0c:	sub	sp, sp, #476	; 0x1dc
   26e10:	add	r3, pc, r3
   26e14:	add	r9, sp, #32
   26e18:	mov	r0, r9
   26e1c:	str	r3, [sp, #28]
   26e20:	bl	13f70 <memset@plt>
   26e24:	mov	r2, #220	; 0xdc
   26e28:	mov	r1, #0
   26e2c:	add	r0, sp, #252	; 0xfc
   26e30:	bl	13f70 <memset@plt>
   26e34:	mov	r2, r9
   26e38:	mov	r1, r8
   26e3c:	ldr	r0, [r8, #12]
   26e40:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   26e44:	ldr	r3, [r8, #40]	; 0x28
   26e48:	sub	r3, r3, #1
   26e4c:	cmp	r3, #10
   26e50:	addls	pc, pc, r3, lsl #2
   26e54:	b	27450 <__flatcc_fb_gen_c_json_parser@@Base+0x2c6c>
   26e58:	b	26fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x27c4>
   26e5c:	b	26fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x27e4>
   26e60:	b	26fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x2804>
   26e64:	b	27008 <__flatcc_fb_gen_c_json_parser@@Base+0x2824>
   26e68:	b	27028 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
   26e6c:	b	27044 <__flatcc_fb_gen_c_json_parser@@Base+0x2860>
   26e70:	b	27064 <__flatcc_fb_gen_c_json_parser@@Base+0x2880>
   26e74:	b	27084 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
   26e78:	b	270a4 <__flatcc_fb_gen_c_json_parser@@Base+0x28c0>
   26e7c:	b	270c4 <__flatcc_fb_gen_c_json_parser@@Base+0x28e0>
   26e80:	b	26e84 <__flatcc_fb_gen_c_json_parser@@Base+0x26a0>
   26e84:	ldr	r3, [pc, #1484]	; 27458 <__flatcc_fb_gen_c_json_parser@@Base+0x2c74>
   26e88:	ldr	r1, [pc, #1484]	; 2745c <__flatcc_fb_gen_c_json_parser@@Base+0x2c78>
   26e8c:	add	r3, pc, r3
   26e90:	mov	sl, r3
   26e94:	add	r1, pc, r1
   26e98:	str	r3, [sp, #24]
   26e9c:	ldrh	r3, [r8, #92]	; 0x5c
   26ea0:	ldr	r0, [r4, #204]	; 0xcc
   26ea4:	tst	r3, #32
   26ea8:	bne	27134 <__flatcc_fb_gen_c_json_parser@@Base+0x2950>
   26eac:	mov	r3, r1
   26eb0:	ldr	r1, [pc, #1448]	; 27460 <__flatcc_fb_gen_c_json_parser@@Base+0x2c7c>
   26eb4:	mov	r2, r9
   26eb8:	str	sl, [sp]
   26ebc:	add	r1, pc, r1
   26ec0:	bl	13f58 <fprintf@plt>
   26ec4:	ldr	r0, [pc, #1432]	; 27464 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26ec8:	mov	r2, #18
   26ecc:	mov	r1, #1
   26ed0:	ldr	r3, [r4, #204]	; 0xcc
   26ed4:	add	r0, pc, r0
   26ed8:	bl	13eec <fwrite@plt>
   26edc:	ldr	r5, [r8, #20]
   26ee0:	cmp	r5, #0
   26ee4:	beq	27110 <__flatcc_fb_gen_c_json_parser@@Base+0x292c>
   26ee8:	ldr	r8, [pc, #1400]	; 27468 <__flatcc_fb_gen_c_json_parser@@Base+0x2c84>
   26eec:	ldr	r7, [pc, #1400]	; 2746c <__flatcc_fb_gen_c_json_parser@@Base+0x2c88>
   26ef0:	ldr	r6, [pc, #1400]	; 27470 <__flatcc_fb_gen_c_json_parser@@Base+0x2c8c>
   26ef4:	add	r8, pc, r8
   26ef8:	add	r7, pc, r7
   26efc:	add	r6, pc, r6
   26f00:	b	26f34 <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   26f04:	ldr	ip, [r5, #4]
   26f08:	mov	r1, r7
   26f0c:	ldrb	r2, [r5, #48]	; 0x30
   26f10:	ldr	r0, [r4, #204]	; 0xcc
   26f14:	ldr	r3, [ip, #4]
   26f18:	str	r3, [sp, #4]
   26f1c:	ldr	ip, [ip]
   26f20:	str	ip, [sp]
   26f24:	bl	13f58 <fprintf@plt>
   26f28:	ldr	r5, [r5]
   26f2c:	cmp	r5, #0
   26f30:	beq	27110 <__flatcc_fb_gen_c_json_parser@@Base+0x292c>
   26f34:	ldrh	r3, [r5, #56]	; 0x38
   26f38:	cmp	r3, #5
   26f3c:	beq	27128 <__flatcc_fb_gen_c_json_parser@@Base+0x2944>
   26f40:	cmp	r3, #6
   26f44:	beq	26f04 <__flatcc_fb_gen_c_json_parser@@Base+0x2720>
   26f48:	cmp	r3, #4
   26f4c:	beq	270e0 <__flatcc_fb_gen_c_json_parser@@Base+0x28fc>
   26f50:	ldr	r2, [pc, #1308]	; 27474 <__flatcc_fb_gen_c_json_parser@@Base+0x2c90>
   26f54:	mov	r3, #157	; 0x9d
   26f58:	ldr	r1, [sp, #28]
   26f5c:	ldr	r0, [pc, #1300]	; 27478 <__flatcc_fb_gen_c_json_parser@@Base+0x2c94>
   26f60:	ldr	r4, [pc, #1300]	; 2747c <__flatcc_fb_gen_c_json_parser@@Base+0x2c98>
   26f64:	ldr	ip, [r1, r2]
   26f68:	add	r0, pc, r0
   26f6c:	ldr	r1, [pc, #1292]	; 27480 <__flatcc_fb_gen_c_json_parser@@Base+0x2c9c>
   26f70:	add	r4, pc, r4
   26f74:	str	r0, [sp]
   26f78:	mov	r2, r4
   26f7c:	ldr	r0, [ip]
   26f80:	add	r1, pc, r1
   26f84:	bl	13f58 <fprintf@plt>
   26f88:	ldr	r3, [pc, #1268]	; 27484 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca0>
   26f8c:	mov	r1, r4
   26f90:	mov	r2, #157	; 0x9d
   26f94:	ldr	r0, [pc, #1260]	; 27488 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca4>
   26f98:	add	r3, pc, r3
   26f9c:	add	r3, r3, #52	; 0x34
   26fa0:	add	r0, pc, r0
   26fa4:	bl	1400c <__assert_fail@plt>
   26fa8:	ldr	r3, [pc, #1244]	; 2748c <__flatcc_fb_gen_c_json_parser@@Base+0x2ca8>
   26fac:	ldr	sl, [pc, #1244]	; 27490 <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   26fb0:	ldr	r1, [pc, #1244]	; 27494 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb0>
   26fb4:	add	r3, pc, r3
   26fb8:	add	sl, pc, sl
   26fbc:	str	r3, [sp, #24]
   26fc0:	add	r1, pc, r1
   26fc4:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   26fc8:	ldr	r3, [pc, #1224]	; 27498 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb4>
   26fcc:	ldr	sl, [pc, #1224]	; 2749c <__flatcc_fb_gen_c_json_parser@@Base+0x2cb8>
   26fd0:	ldr	r1, [pc, #1224]	; 274a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cbc>
   26fd4:	add	r3, pc, r3
   26fd8:	add	sl, pc, sl
   26fdc:	str	r3, [sp, #24]
   26fe0:	add	r1, pc, r1
   26fe4:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   26fe8:	ldr	r3, [pc, #1204]	; 274a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc0>
   26fec:	ldr	sl, [pc, #1204]	; 274a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc4>
   26ff0:	ldr	r1, [pc, #1204]	; 274ac <__flatcc_fb_gen_c_json_parser@@Base+0x2cc8>
   26ff4:	add	r3, pc, r3
   26ff8:	add	sl, pc, sl
   26ffc:	str	r3, [sp, #24]
   27000:	add	r1, pc, r1
   27004:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27008:	ldr	r3, [pc, #1184]	; 274b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ccc>
   2700c:	ldr	sl, [pc, #1184]	; 274b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cd0>
   27010:	ldr	r1, [pc, #1184]	; 274b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cd4>
   27014:	add	r3, pc, r3
   27018:	add	sl, pc, sl
   2701c:	str	r3, [sp, #24]
   27020:	add	r1, pc, r1
   27024:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27028:	ldr	r3, [pc, #1164]	; 274bc <__flatcc_fb_gen_c_json_parser@@Base+0x2cd8>
   2702c:	mov	r1, r4
   27030:	ldr	sl, [pc, #1160]	; 274c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cdc>
   27034:	add	r3, pc, r3
   27038:	add	sl, pc, sl
   2703c:	str	r3, [sp, #24]
   27040:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27044:	ldr	r3, [pc, #1144]	; 274c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce0>
   27048:	ldr	sl, [pc, #1144]	; 274c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce4>
   2704c:	ldr	r1, [pc, #1144]	; 274cc <__flatcc_fb_gen_c_json_parser@@Base+0x2ce8>
   27050:	add	r3, pc, r3
   27054:	add	sl, pc, sl
   27058:	str	r3, [sp, #24]
   2705c:	add	r1, pc, r1
   27060:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27064:	ldr	r3, [pc, #1124]	; 274d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cec>
   27068:	ldr	sl, [pc, #1124]	; 274d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cf0>
   2706c:	ldr	r1, [pc, #1124]	; 274d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cf4>
   27070:	add	r3, pc, r3
   27074:	add	sl, pc, sl
   27078:	str	r3, [sp, #24]
   2707c:	add	r1, pc, r1
   27080:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27084:	ldr	r3, [pc, #1104]	; 274dc <__flatcc_fb_gen_c_json_parser@@Base+0x2cf8>
   27088:	ldr	sl, [pc, #1104]	; 274e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cfc>
   2708c:	ldr	r1, [pc, #1104]	; 274e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d00>
   27090:	add	r3, pc, r3
   27094:	add	sl, pc, sl
   27098:	str	r3, [sp, #24]
   2709c:	add	r1, pc, r1
   270a0:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   270a4:	ldr	r3, [pc, #1084]	; 274e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   270a8:	ldr	sl, [pc, #1084]	; 274ec <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   270ac:	ldr	r1, [pc, #1084]	; 274f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d0c>
   270b0:	add	r3, pc, r3
   270b4:	add	sl, pc, sl
   270b8:	str	r3, [sp, #24]
   270bc:	add	r1, pc, r1
   270c0:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   270c4:	ldr	r3, [pc, #1064]	; 274f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d10>
   270c8:	ldr	r1, [pc, #1064]	; 274f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d14>
   270cc:	add	r3, pc, r3
   270d0:	mov	sl, r3
   270d4:	add	r1, pc, r1
   270d8:	str	r3, [sp, #24]
   270dc:	b	26e9c <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   270e0:	ldr	lr, [r5, #4]
   270e4:	mov	r1, r6
   270e8:	ldr	ip, [lr, #4]
   270ec:	ldrd	r2, [r5, #48]	; 0x30
   270f0:	ldr	r0, [r4, #204]	; 0xcc
   270f4:	str	ip, [sp, #8]
   270f8:	ldr	lr, [lr]
   270fc:	stm	sp, {ip, lr}
   27100:	bl	13f58 <fprintf@plt>
   27104:	ldr	r5, [r5]
   27108:	cmp	r5, #0
   2710c:	bne	26f34 <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   27110:	ldr	r1, [pc, #996]	; 274fc <__flatcc_fb_gen_c_json_parser@@Base+0x2d18>
   27114:	ldr	r2, [sp, #24]
   27118:	ldr	r0, [r4, #204]	; 0xcc
   2711c:	add	r1, pc, r1
   27120:	bl	13f58 <fprintf@plt>
   27124:	b	27388 <__flatcc_fb_gen_c_json_parser@@Base+0x2ba4>
   27128:	mov	r1, r8
   2712c:	ldr	lr, [r5, #4]
   27130:	b	270e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2904>
   27134:	ldrd	r2, [r8, #112]	; 0x70
   27138:	cmp	r3, #0
   2713c:	cmpeq	r2, #2
   27140:	beq	27434 <__flatcc_fb_gen_c_json_parser@@Base+0x2c50>
   27144:	cmp	r3, #0
   27148:	cmpeq	r2, #4
   2714c:	beq	27418 <__flatcc_fb_gen_c_json_parser@@Base+0x2c34>
   27150:	cmp	r3, #0
   27154:	cmpeq	r2, #1
   27158:	beq	273fc <__flatcc_fb_gen_c_json_parser@@Base+0x2c18>
   2715c:	ldr	fp, [pc, #924]	; 27500 <__flatcc_fb_gen_c_json_parser@@Base+0x2d1c>
   27160:	mvn	r6, #0
   27164:	mvn	r7, #0
   27168:	ldr	r5, [pc, #916]	; 27504 <__flatcc_fb_gen_c_json_parser@@Base+0x2d20>
   2716c:	add	fp, pc, fp
   27170:	add	r5, pc, r5
   27174:	ldr	ip, [r8, #20]
   27178:	cmp	ip, #0
   2717c:	bne	27198 <__flatcc_fb_gen_c_json_parser@@Base+0x29b4>
   27180:	b	271d0 <__flatcc_fb_gen_c_json_parser@@Base+0x29ec>
   27184:	cmp	r3, #4
   27188:	beq	27328 <__flatcc_fb_gen_c_json_parser@@Base+0x2b44>
   2718c:	ldr	ip, [ip]
   27190:	cmp	ip, #0
   27194:	beq	271d0 <__flatcc_fb_gen_c_json_parser@@Base+0x29ec>
   27198:	ldrh	r3, [ip, #56]	; 0x38
   2719c:	cmp	r3, #5
   271a0:	beq	27328 <__flatcc_fb_gen_c_json_parser@@Base+0x2b44>
   271a4:	cmp	r3, #6
   271a8:	bne	27184 <__flatcc_fb_gen_c_json_parser@@Base+0x29a0>
   271ac:	ldrb	r2, [ip, #48]	; 0x30
   271b0:	mov	r3, #0
   271b4:	ldr	ip, [ip]
   271b8:	strd	r2, [sp, #16]
   271bc:	ldr	r2, [sp, #16]
   271c0:	cmp	ip, #0
   271c4:	bic	r2, r6, r2
   271c8:	mov	r6, r2
   271cc:	bne	27198 <__flatcc_fb_gen_c_json_parser@@Base+0x29b4>
   271d0:	mov	r3, r1
   271d4:	ldr	r1, [pc, #812]	; 27508 <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   271d8:	mov	r2, r9
   271dc:	str	sl, [sp]
   271e0:	add	r1, pc, r1
   271e4:	bl	13f58 <fprintf@plt>
   271e8:	mov	r1, sl
   271ec:	mov	r0, fp
   271f0:	bl	13e8c <strcmp@plt>
   271f4:	cmp	r0, #0
   271f8:	beq	273c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2bdc>
   271fc:	ldr	r1, [pc, #776]	; 2750c <__flatcc_fb_gen_c_json_parser@@Base+0x2d28>
   27200:	mov	r3, fp
   27204:	mov	r2, fp
   27208:	ldr	r0, [r4, #204]	; 0xcc
   2720c:	add	r1, pc, r1
   27210:	bl	13f58 <fprintf@plt>
   27214:	ldr	r0, [pc, #756]	; 27510 <__flatcc_fb_gen_c_json_parser@@Base+0x2d2c>
   27218:	mov	r2, #54	; 0x36
   2721c:	mov	r1, #1
   27220:	ldr	r3, [r4, #204]	; 0xcc
   27224:	add	r0, pc, r0
   27228:	bl	13eec <fwrite@plt>
   2722c:	mov	r0, #10
   27230:	ldr	r1, [r4, #204]	; 0xcc
   27234:	bl	13fb8 <fputc@plt>
   27238:	orrs	r3, r6, r7
   2723c:	bne	273d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bf4>
   27240:	ldr	r0, [pc, #716]	; 27514 <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   27244:	mov	r2, #59	; 0x3b
   27248:	mov	r1, #1
   2724c:	ldr	r3, [r4, #204]	; 0xcc
   27250:	add	r0, pc, r0
   27254:	bl	13eec <fwrite@plt>
   27258:	ldr	r6, [r8, #20]
   2725c:	cmp	r6, #0
   27260:	beq	27370 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   27264:	ldr	r9, [pc, #684]	; 27518 <__flatcc_fb_gen_c_json_parser@@Base+0x2d34>
   27268:	ldr	r8, [pc, #684]	; 2751c <__flatcc_fb_gen_c_json_parser@@Base+0x2d38>
   2726c:	ldr	r7, [pc, #684]	; 27520 <__flatcc_fb_gen_c_json_parser@@Base+0x2d3c>
   27270:	add	r9, pc, r9
   27274:	add	r8, pc, r8
   27278:	add	r7, pc, r7
   2727c:	b	272b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad0>
   27280:	ldr	lr, [r6, #4]
   27284:	mov	r3, #0
   27288:	mov	r1, r8
   2728c:	ldrb	r2, [r6, #48]	; 0x30
   27290:	ldr	r0, [r4, #204]	; 0xcc
   27294:	ldr	ip, [lr, #4]
   27298:	str	ip, [sp, #12]
   2729c:	ldr	lr, [lr]
   272a0:	stm	sp, {r5, ip, lr}
   272a4:	bl	13f58 <fprintf@plt>
   272a8:	ldr	r6, [r6]
   272ac:	cmp	r6, #0
   272b0:	beq	27370 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   272b4:	ldrh	r3, [r6, #56]	; 0x38
   272b8:	cmp	r3, #5
   272bc:	beq	27340 <__flatcc_fb_gen_c_json_parser@@Base+0x2b5c>
   272c0:	cmp	r3, #6
   272c4:	beq	27280 <__flatcc_fb_gen_c_json_parser@@Base+0x2a9c>
   272c8:	cmp	r3, #4
   272cc:	beq	27358 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   272d0:	ldr	r2, [pc, #412]	; 27474 <__flatcc_fb_gen_c_json_parser@@Base+0x2c90>
   272d4:	mov	r3, #134	; 0x86
   272d8:	ldr	r1, [sp, #28]
   272dc:	ldr	r0, [pc, #576]	; 27524 <__flatcc_fb_gen_c_json_parser@@Base+0x2d40>
   272e0:	ldr	r4, [pc, #576]	; 27528 <__flatcc_fb_gen_c_json_parser@@Base+0x2d44>
   272e4:	ldr	ip, [r1, r2]
   272e8:	add	r0, pc, r0
   272ec:	ldr	r1, [pc, #568]	; 2752c <__flatcc_fb_gen_c_json_parser@@Base+0x2d48>
   272f0:	add	r4, pc, r4
   272f4:	str	r0, [sp]
   272f8:	mov	r2, r4
   272fc:	ldr	r0, [ip]
   27300:	add	r1, pc, r1
   27304:	bl	13f58 <fprintf@plt>
   27308:	ldr	r3, [pc, #544]	; 27530 <__flatcc_fb_gen_c_json_parser@@Base+0x2d4c>
   2730c:	mov	r1, r4
   27310:	mov	r2, #134	; 0x86
   27314:	ldr	r0, [pc, #536]	; 27534 <__flatcc_fb_gen_c_json_parser@@Base+0x2d50>
   27318:	add	r3, pc, r3
   2731c:	add	r3, r3, #52	; 0x34
   27320:	add	r0, pc, r0
   27324:	bl	1400c <__assert_fail@plt>
   27328:	ldrd	r2, [ip, #48]	; 0x30
   2732c:	bic	r2, r6, r2
   27330:	bic	r3, r7, r3
   27334:	mov	r6, r2
   27338:	mov	r7, r3
   2733c:	b	2718c <__flatcc_fb_gen_c_json_parser@@Base+0x29a8>
   27340:	ldr	lr, [r6, #4]
   27344:	mov	r1, r9
   27348:	ldrd	r2, [r6, #48]	; 0x30
   2734c:	ldr	r0, [r4, #204]	; 0xcc
   27350:	ldr	ip, [lr, #4]
   27354:	b	27298 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab4>
   27358:	ldr	lr, [r6, #4]
   2735c:	mov	r1, r7
   27360:	ldrd	r2, [r6, #48]	; 0x30
   27364:	ldr	r0, [r4, #204]	; 0xcc
   27368:	ldr	ip, [lr, #4]
   2736c:	b	27298 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab4>
   27370:	ldr	r0, [pc, #448]	; 27538 <__flatcc_fb_gen_c_json_parser@@Base+0x2d54>
   27374:	mov	r2, #59	; 0x3b
   27378:	mov	r1, #1
   2737c:	ldr	r3, [r4, #204]	; 0xcc
   27380:	add	r0, pc, r0
   27384:	bl	13eec <fwrite@plt>
   27388:	ldr	r0, [pc, #428]	; 2753c <__flatcc_fb_gen_c_json_parser@@Base+0x2d58>
   2738c:	mov	r2, #3
   27390:	mov	r1, #1
   27394:	ldr	r3, [r4, #204]	; 0xcc
   27398:	add	r0, pc, r0
   2739c:	bl	13eec <fwrite@plt>
   273a0:	mov	r0, #0
   273a4:	add	sp, sp, #476	; 0x1dc
   273a8:	ldrd	r4, [sp]
   273ac:	ldrd	r6, [sp, #8]
   273b0:	ldrd	r8, [sp, #16]
   273b4:	ldrd	sl, [sp, #24]
   273b8:	add	sp, sp, #32
   273bc:	pop	{pc}		; (ldr pc, [sp], #4)
   273c0:	ldr	r1, [pc, #376]	; 27540 <__flatcc_fb_gen_c_json_parser@@Base+0x2d5c>
   273c4:	mov	r2, fp
   273c8:	ldr	r0, [r4, #204]	; 0xcc
   273cc:	add	r1, pc, r1
   273d0:	bl	13f58 <fprintf@plt>
   273d4:	b	27214 <__flatcc_fb_gen_c_json_parser@@Base+0x2a30>
   273d8:	ldr	r1, [pc, #356]	; 27544 <__flatcc_fb_gen_c_json_parser@@Base+0x2d60>
   273dc:	mov	r2, r6
   273e0:	mov	r3, r7
   273e4:	ldr	r0, [sp, #24]
   273e8:	add	r1, pc, r1
   273ec:	str	r0, [sp]
   273f0:	ldr	r0, [r4, #204]	; 0xcc
   273f4:	bl	13f58 <fprintf@plt>
   273f8:	b	27240 <__flatcc_fb_gen_c_json_parser@@Base+0x2a5c>
   273fc:	ldr	fp, [pc, #324]	; 27548 <__flatcc_fb_gen_c_json_parser@@Base+0x2d64>
   27400:	mov	r6, #255	; 0xff
   27404:	mov	r7, #0
   27408:	ldr	r5, [pc, #316]	; 2754c <__flatcc_fb_gen_c_json_parser@@Base+0x2d68>
   2740c:	add	fp, pc, fp
   27410:	add	r5, pc, r5
   27414:	b	27174 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   27418:	ldr	fp, [pc, #304]	; 27550 <__flatcc_fb_gen_c_json_parser@@Base+0x2d6c>
   2741c:	mvn	r6, #0
   27420:	mov	r7, #0
   27424:	ldr	r5, [pc, #296]	; 27554 <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   27428:	add	fp, pc, fp
   2742c:	add	r5, pc, r5
   27430:	b	27174 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   27434:	ldr	fp, [pc, #284]	; 27558 <__flatcc_fb_gen_c_json_parser@@Base+0x2d74>
   27438:	movw	r6, #65535	; 0xffff
   2743c:	mov	r7, #0
   27440:	ldr	r5, [pc, #276]	; 2755c <__flatcc_fb_gen_c_json_parser@@Base+0x2d78>
   27444:	add	fp, pc, fp
   27448:	add	r5, pc, r5
   2744c:	b	27174 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   27450:	bl	266fc <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   27454:	andeq	r4, r4, r8, ror #3
   27458:	muleq	r1, r4, sl
   2745c:	andeq	r3, r2, ip, asr #15
   27460:	andeq	lr, r2, r0, lsr #29
   27464:	ldrdeq	lr, [r2], -r0
   27468:	andeq	lr, r2, r0, ror #26
   2746c:	andeq	lr, r2, r4, ror #27
   27470:	muleq	r2, ip, sp
   27474:	muleq	r0, ip, r0
   27478:			; <UNDEFINED> instruction: 0x0002ecb0
   2747c:	strdeq	lr, [r2], -ip
   27480:	andeq	r9, r1, r8, lsr r9
   27484:	andeq	lr, r2, r0, lsr #12
   27488:	andeq	r1, r2, ip, lsr lr
   2748c:	andeq	r9, r1, r4, ror #18
   27490:	andeq	r9, r1, r4, asr r9
   27494:	andeq	r3, r2, r0, lsr #13
   27498:	andeq	r9, r1, r4, ror r9
   2749c:	andeq	r9, r1, r4, ror #18
   274a0:	andeq	r3, r2, r0, lsl #13
   274a4:	andeq	r9, r1, r0, asr #18
   274a8:	andeq	r9, r1, r0, lsr r9
   274ac:	andeq	r3, r2, r0, ror #12
   274b0:	andeq	r9, r1, ip, asr #18
   274b4:	andeq	r9, r1, r0, asr #18
   274b8:	andeq	r3, r2, r0, asr #12
   274bc:	muleq	r3, r8, r5
   274c0:	andeq	r9, r1, r8, lsl r9
   274c4:	andeq	r9, r1, r0, lsr #18
   274c8:	andeq	r9, r1, r4, lsl r9
   274cc:	andeq	r3, r2, r4, lsl #12
   274d0:	andeq	r9, r1, r0, lsl r9
   274d4:	andeq	r9, r1, r4, lsl #18
   274d8:	andeq	r3, r2, r4, ror #11
   274dc:	andeq	r9, r1, r4, ror r8
   274e0:	andeq	r9, r1, r8, ror #16
   274e4:	andeq	r3, r2, r4, asr #11
   274e8:	andeq	r9, r1, r8, ror #17
   274ec:	ldrdeq	r9, [r1], -ip
   274f0:	andeq	r3, r2, r4, lsr #11
   274f4:			; <UNDEFINED> instruction: 0x000198bc
   274f8:	andeq	r3, r2, ip, lsl #11
   274fc:	andeq	lr, r2, r4, lsl #24
   27500:	andeq	r9, r1, r0, lsr #15
   27504:	andeq	lr, r2, r0, asr r9
   27508:	andeq	lr, r2, ip, ror fp
   2750c:	andeq	lr, r2, r0, asr #17
   27510:	andeq	lr, r2, ip, asr #17
   27514:	andeq	lr, r2, ip, lsr r9
   27518:	andeq	lr, r2, r8, asr r9
   2751c:	andeq	lr, r2, r4, asr r9
   27520:	andeq	lr, r2, r0, asr r9
   27524:	andeq	lr, r2, r0, lsr r9
   27528:	andeq	lr, r2, ip, ror r4
   2752c:			; <UNDEFINED> instruction: 0x000195b8
   27530:	andeq	lr, r2, r0, lsr #5
   27534:			; <UNDEFINED> instruction: 0x00021abc
   27538:	andeq	lr, r2, ip, lsl #16
   2753c:	andeq	fp, r2, r4, lsl #9
   27540:	andeq	lr, r2, r4, lsl r7
   27544:	andeq	lr, r2, r0, asr #14
   27548:	andeq	r9, r1, ip, asr #10
   2754c:			; <UNDEFINED> instruction: 0x0002e6b4
   27550:	andeq	r9, r1, r4, lsl r5
   27554:	muleq	r2, ip, r6
   27558:	andeq	r9, r1, r4, ror #9
   2755c:	andeq	lr, r2, ip, ror r6
   27560:	ldr	r3, [pc, #2712]	; 28000 <__flatcc_fb_gen_c_json_parser@@Base+0x381c>
   27564:	mov	r2, #220	; 0xdc
   27568:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2756c:	strd	r6, [sp, #8]
   27570:	strd	r8, [sp, #16]
   27574:	mov	r9, r1
   27578:	mov	r8, r0
   2757c:	strd	sl, [sp, #24]
   27580:	mov	r1, #0
   27584:	str	lr, [sp, #32]
   27588:	sub	sp, sp, #516	; 0x204
   2758c:	add	r3, pc, r3
   27590:	add	r4, sp, #72	; 0x48
   27594:	add	fp, sp, #292	; 0x124
   27598:	mov	r0, r4
   2759c:	str	r4, [sp, #56]	; 0x38
   275a0:	str	r3, [sp, #68]	; 0x44
   275a4:	bl	13f70 <memset@plt>
   275a8:	mov	r2, #220	; 0xdc
   275ac:	mov	r1, #0
   275b0:	mov	r0, fp
   275b4:	bl	13f70 <memset@plt>
   275b8:	mov	r2, r4
   275bc:	mov	r1, r9
   275c0:	ldr	r0, [r9, #12]
   275c4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   275c8:	ldrd	r4, [r9, #96]	; 0x60
   275cc:	mov	r1, #4
   275d0:	mov	r0, r4
   275d4:	bl	13e74 <calloc@plt>
   275d8:	orrs	r3, r4, r5
   275dc:	str	r0, [sp, #52]	; 0x34
   275e0:	movne	r3, #1
   275e4:	moveq	r3, #0
   275e8:	cmp	r0, #0
   275ec:	movne	r3, #0
   275f0:	cmp	r3, #0
   275f4:	bne	27ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x3714>
   275f8:	ldr	r3, [r9, #20]
   275fc:	cmp	r3, #0
   27600:	ldrne	r1, [sp, #52]	; 0x34
   27604:	beq	2761c <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   27608:	ldr	r2, [r3, #96]	; 0x60
   2760c:	str	r3, [r1, r2, lsl #2]
   27610:	ldr	r3, [r3]
   27614:	cmp	r3, #0
   27618:	bne	27608 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   2761c:	ldr	r1, [pc, #2528]	; 28004 <__flatcc_fb_gen_c_json_parser@@Base+0x3820>
   27620:	ldr	r0, [r8]
   27624:	ldr	r2, [sp, #56]	; 0x38
   27628:	add	r1, pc, r1
   2762c:	bl	13f58 <fprintf@plt>
   27630:	ldrd	r0, [r9, #96]	; 0x60
   27634:	orrs	r3, r0, r1
   27638:	beq	27de8 <__flatcc_fb_gen_c_json_parser@@Base+0x3604>
   2763c:	ldr	r3, [sp, #52]	; 0x34
   27640:	mov	r4, #0
   27644:	mov	r5, #0
   27648:	ldr	sl, [pc, #2488]	; 28008 <__flatcc_fb_gen_c_json_parser@@Base+0x3824>
   2764c:	sub	r7, r3, #4
   27650:	ldr	r3, [pc, #2484]	; 2800c <__flatcc_fb_gen_c_json_parser@@Base+0x3828>
   27654:	add	sl, pc, sl
   27658:	strd	sl, [sp, #44]	; 0x2c
   2765c:	add	r3, pc, r3
   27660:	str	r3, [sp, #60]	; 0x3c
   27664:	ldr	r3, [pc, #2468]	; 28010 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27668:	add	r3, pc, r3
   2766c:	str	r3, [sp, #64]	; 0x40
   27670:	ldr	r3, [r8]
   27674:	ldr	r6, [r7, #4]!
   27678:	cmp	r6, #0
   2767c:	beq	27774 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   27680:	ldrh	r2, [r6, #72]	; 0x48
   27684:	tst	r2, #4
   27688:	bne	27774 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   2768c:	mov	r2, #5
   27690:	mov	r1, #1
   27694:	ldr	r0, [sp, #44]	; 0x2c
   27698:	bl	13eec <fwrite@plt>
   2769c:	ldrh	r3, [r6, #24]
   276a0:	sub	r3, r3, #7
   276a4:	cmp	r3, #8
   276a8:	addls	pc, pc, r3, lsl #2
   276ac:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   276b0:	b	2783c <__flatcc_fb_gen_c_json_parser@@Base+0x3058>
   276b4:	b	277fc <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   276b8:	b	277e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3004>
   276bc:	b	27744 <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   276c0:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   276c4:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   276c8:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   276cc:	b	2770c <__flatcc_fb_gen_c_json_parser@@Base+0x2f28>
   276d0:	b	276d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   276d4:	ldr	r1, [r6, #16]
   276d8:	ldr	r2, [sp, #48]	; 0x30
   276dc:	ldr	r0, [r1, #12]
   276e0:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   276e4:	ldr	r2, [r6, #16]
   276e8:	ldrh	r3, [r2, #8]
   276ec:	cmp	r3, #4
   276f0:	addls	pc, pc, r3, lsl #2
   276f4:	b	27ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x36bc>
   276f8:	b	27950 <__flatcc_fb_gen_c_json_parser@@Base+0x316c>
   276fc:	b	27914 <__flatcc_fb_gen_c_json_parser@@Base+0x3130>
   27700:	b	27ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x36bc>
   27704:	b	278d8 <__flatcc_fb_gen_c_json_parser@@Base+0x30f4>
   27708:	b	278a4 <__flatcc_fb_gen_c_json_parser@@Base+0x30c0>
   2770c:	ldr	r1, [r6, #16]
   27710:	ldr	r2, [sp, #48]	; 0x30
   27714:	ldr	r0, [r1, #12]
   27718:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2771c:	ldr	r2, [r6, #16]
   27720:	ldrh	r3, [r2, #8]
   27724:	cmp	r3, #4
   27728:	addls	pc, pc, r3, lsl #2
   2772c:	b	27e48 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   27730:	b	279d8 <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   27734:	b	279c4 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   27738:	b	27e48 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   2773c:	b	27984 <__flatcc_fb_gen_c_json_parser@@Base+0x31a0>
   27740:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x318c>
   27744:	ldr	r1, [pc, #2248]	; 28014 <__flatcc_fb_gen_c_json_parser@@Base+0x3830>
   27748:	ldr	lr, [r6, #4]
   2774c:	ldrd	r2, [r6, #96]	; 0x60
   27750:	add	r1, pc, r1
   27754:	ldr	ip, [lr, #4]
   27758:	ldr	r0, [r8]
   2775c:	str	ip, [sp, #8]
   27760:	ldr	lr, [lr]
   27764:	stm	sp, {ip, lr}
   27768:	bl	13f58 <fprintf@plt>
   2776c:	ldr	r3, [r8]
   27770:	ldrd	r0, [r9, #96]	; 0x60
   27774:	adds	r4, r4, #1
   27778:	adc	r5, r5, #0
   2777c:	cmp	r5, r1
   27780:	cmpeq	r4, r0
   27784:	bcc	27674 <__flatcc_fb_gen_c_json_parser@@Base+0x2e90>
   27788:	ldr	r0, [pc, #2184]	; 28018 <__flatcc_fb_gen_c_json_parser@@Base+0x3834>
   2778c:	mov	r2, #4
   27790:	mov	r1, #1
   27794:	add	r0, pc, r0
   27798:	bl	13eec <fwrite@plt>
   2779c:	ldr	r1, [pc, #2168]	; 2801c <__flatcc_fb_gen_c_json_parser@@Base+0x3838>
   277a0:	ldr	r3, [sp, #56]	; 0x38
   277a4:	ldr	r0, [r8]
   277a8:	add	r1, pc, r1
   277ac:	mov	r2, r3
   277b0:	bl	13f58 <fprintf@plt>
   277b4:	ldr	r3, [sp, #52]	; 0x34
   277b8:	cmp	r3, #0
   277bc:	beq	277c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe4>
   277c0:	mov	r0, r3
   277c4:	bl	13ea4 <free@plt>
   277c8:	mov	r0, #0
   277cc:	add	sp, sp, #516	; 0x204
   277d0:	ldrd	r4, [sp]
   277d4:	ldrd	r6, [sp, #8]
   277d8:	ldrd	r8, [sp, #16]
   277dc:	ldrd	sl, [sp, #24]
   277e0:	add	sp, sp, #32
   277e4:	pop	{pc}		; (ldr pc, [sp], #4)
   277e8:	ldr	r1, [pc, #2096]	; 28020 <__flatcc_fb_gen_c_json_parser@@Base+0x383c>
   277ec:	ldr	lr, [r6, #4]
   277f0:	ldrd	r2, [r6, #96]	; 0x60
   277f4:	add	r1, pc, r1
   277f8:	b	27754 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   277fc:	ldr	r3, [r6, #16]
   27800:	sub	r3, r3, #1
   27804:	cmp	r3, #10
   27808:	addls	pc, pc, r3, lsl #2
   2780c:	b	27fac <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   27810:	b	27b80 <__flatcc_fb_gen_c_json_parser@@Base+0x339c>
   27814:	b	27b74 <__flatcc_fb_gen_c_json_parser@@Base+0x3390>
   27818:	b	27b68 <__flatcc_fb_gen_c_json_parser@@Base+0x3384>
   2781c:	b	27b5c <__flatcc_fb_gen_c_json_parser@@Base+0x3378>
   27820:	b	27b50 <__flatcc_fb_gen_c_json_parser@@Base+0x336c>
   27824:	b	27b44 <__flatcc_fb_gen_c_json_parser@@Base+0x3360>
   27828:	b	27b38 <__flatcc_fb_gen_c_json_parser@@Base+0x3354>
   2782c:	b	27b2c <__flatcc_fb_gen_c_json_parser@@Base+0x3348>
   27830:	b	27b20 <__flatcc_fb_gen_c_json_parser@@Base+0x333c>
   27834:	b	27b14 <__flatcc_fb_gen_c_json_parser@@Base+0x3330>
   27838:	b	27a58 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   2783c:	ldrh	r3, [r6, #72]	; 0x48
   27840:	tst	r3, #3072	; 0xc00
   27844:	bne	279ec <__flatcc_fb_gen_c_json_parser@@Base+0x3208>
   27848:	ldr	r1, [r6, #104]	; 0x68
   2784c:	cmp	r1, #0
   27850:	beq	27a18 <__flatcc_fb_gen_c_json_parser@@Base+0x3234>
   27854:	ldr	sl, [sp, #48]	; 0x30
   27858:	ldr	r0, [r1, #12]
   2785c:	mov	r2, sl
   27860:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   27864:	ldr	lr, [r6, #4]
   27868:	ldr	r3, [r6, #104]	; 0x68
   2786c:	ldrh	r3, [r3, #8]
   27870:	cmp	r3, #0
   27874:	ldrd	r2, [r6, #96]	; 0x60
   27878:	bne	27a0c <__flatcc_fb_gen_c_json_parser@@Base+0x3228>
   2787c:	ldr	r1, [pc, #1952]	; 28024 <__flatcc_fb_gen_c_json_parser@@Base+0x3840>
   27880:	ldr	ip, [lr, #4]
   27884:	str	sl, [sp, #12]
   27888:	add	r1, pc, r1
   2788c:	ldr	r0, [r8]
   27890:	str	ip, [sp, #8]
   27894:	ldr	lr, [lr]
   27898:	stm	sp, {ip, lr}
   2789c:	bl	13f58 <fprintf@plt>
   278a0:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   278a4:	ldr	lr, [r6, #4]
   278a8:	ldr	r1, [sp, #60]	; 0x3c
   278ac:	ldrd	r2, [r6, #96]	; 0x60
   278b0:	ldr	ip, [lr, #4]
   278b4:	ldr	r0, [sp, #48]	; 0x30
   278b8:	str	r0, [sp, #12]
   278bc:	str	r0, [sp, #16]
   278c0:	ldr	r0, [r8]
   278c4:	str	ip, [sp, #8]
   278c8:	ldr	lr, [lr]
   278cc:	stm	sp, {ip, lr}
   278d0:	bl	13f58 <fprintf@plt>
   278d4:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   278d8:	sub	r2, r2, #1
   278dc:	cmp	r2, #10
   278e0:	addls	pc, pc, r2, lsl #2
   278e4:	b	27fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   278e8:	b	27be4 <__flatcc_fb_gen_c_json_parser@@Base+0x3400>
   278ec:	b	27ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x34fc>
   278f0:	b	27cec <__flatcc_fb_gen_c_json_parser@@Base+0x3508>
   278f4:	b	27cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x3514>
   278f8:	b	27d04 <__flatcc_fb_gen_c_json_parser@@Base+0x3520>
   278fc:	b	27c20 <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   27900:	b	27c2c <__flatcc_fb_gen_c_json_parser@@Base+0x3448>
   27904:	b	27c38 <__flatcc_fb_gen_c_json_parser@@Base+0x3454>
   27908:	b	27c44 <__flatcc_fb_gen_c_json_parser@@Base+0x3460>
   2790c:	b	27c50 <__flatcc_fb_gen_c_json_parser@@Base+0x346c>
   27910:	b	27c5c <__flatcc_fb_gen_c_json_parser@@Base+0x3478>
   27914:	ldr	ip, [r6, #4]
   27918:	ldr	lr, [sp, #48]	; 0x30
   2791c:	ldrd	r2, [r6, #96]	; 0x60
   27920:	ldr	r0, [ip, #4]
   27924:	str	lr, [sp, #24]
   27928:	ldrd	sl, [r6, #88]	; 0x58
   2792c:	ldr	r1, [sp, #64]	; 0x40
   27930:	str	r0, [sp, #8]
   27934:	strd	sl, [sp, #16]
   27938:	ldr	ip, [ip]
   2793c:	str	r0, [sp]
   27940:	ldr	r0, [r8]
   27944:	str	ip, [sp, #4]
   27948:	bl	13f58 <fprintf@plt>
   2794c:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   27950:	ldr	r1, [pc, #1744]	; 28028 <__flatcc_fb_gen_c_json_parser@@Base+0x3844>
   27954:	ldr	lr, [r6, #4]
   27958:	ldrd	r2, [r6, #96]	; 0x60
   2795c:	add	r1, pc, r1
   27960:	ldr	ip, [lr, #4]
   27964:	ldr	r0, [sp, #48]	; 0x30
   27968:	str	r0, [sp, #12]
   2796c:	b	2788c <__flatcc_fb_gen_c_json_parser@@Base+0x30a8>
   27970:	ldr	r1, [pc, #1716]	; 2802c <__flatcc_fb_gen_c_json_parser@@Base+0x3848>
   27974:	ldr	lr, [r6, #4]
   27978:	ldrd	r2, [r6, #96]	; 0x60
   2797c:	add	r1, pc, r1
   27980:	b	278b0 <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   27984:	ldr	r3, [r2, #40]	; 0x28
   27988:	sub	r3, r3, #1
   2798c:	cmp	r3, #10
   27990:	addls	pc, pc, r3, lsl #2
   27994:	b	27fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   27998:	b	27c68 <__flatcc_fb_gen_c_json_parser@@Base+0x3484>
   2799c:	b	27c74 <__flatcc_fb_gen_c_json_parser@@Base+0x3490>
   279a0:	b	27c80 <__flatcc_fb_gen_c_json_parser@@Base+0x349c>
   279a4:	b	27c8c <__flatcc_fb_gen_c_json_parser@@Base+0x34a8>
   279a8:	b	27c98 <__flatcc_fb_gen_c_json_parser@@Base+0x34b4>
   279ac:	b	27ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x34c0>
   279b0:	b	27cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x34cc>
   279b4:	b	27cbc <__flatcc_fb_gen_c_json_parser@@Base+0x34d8>
   279b8:	b	27cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x34e4>
   279bc:	b	27cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x34f0>
   279c0:	b	27b8c <__flatcc_fb_gen_c_json_parser@@Base+0x33a8>
   279c4:	ldr	r1, [pc, #1636]	; 28030 <__flatcc_fb_gen_c_json_parser@@Base+0x384c>
   279c8:	ldr	lr, [r6, #4]
   279cc:	ldrd	r2, [r6, #96]	; 0x60
   279d0:	add	r1, pc, r1
   279d4:	b	27960 <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   279d8:	ldr	r1, [pc, #1620]	; 28034 <__flatcc_fb_gen_c_json_parser@@Base+0x3850>
   279dc:	ldr	lr, [r6, #4]
   279e0:	ldrd	r2, [r6, #96]	; 0x60
   279e4:	add	r1, pc, r1
   279e8:	b	27960 <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   279ec:	ldr	r1, [pc, #1604]	; 28038 <__flatcc_fb_gen_c_json_parser@@Base+0x3854>
   279f0:	eor	r3, r3, #1024	; 0x400
   279f4:	ubfx	r0, r3, #10, #1
   279f8:	ldr	lr, [r6, #4]
   279fc:	ldrd	r2, [r6, #96]	; 0x60
   27a00:	add	r1, pc, r1
   27a04:	ldr	ip, [lr, #4]
   27a08:	b	27968 <__flatcc_fb_gen_c_json_parser@@Base+0x3184>
   27a0c:	ldr	r1, [pc, #1576]	; 2803c <__flatcc_fb_gen_c_json_parser@@Base+0x3858>
   27a10:	add	r1, pc, r1
   27a14:	b	27960 <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   27a18:	ldr	r3, [r6, #16]
   27a1c:	sub	r3, r3, #1
   27a20:	cmp	r3, #10
   27a24:	addls	pc, pc, r3, lsl #2
   27a28:	b	27fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   27a2c:	b	27d2c <__flatcc_fb_gen_c_json_parser@@Base+0x3548>
   27a30:	b	27dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x35e0>
   27a34:	b	27db8 <__flatcc_fb_gen_c_json_parser@@Base+0x35d4>
   27a38:	b	27dac <__flatcc_fb_gen_c_json_parser@@Base+0x35c8>
   27a3c:	b	27da0 <__flatcc_fb_gen_c_json_parser@@Base+0x35bc>
   27a40:	b	27d94 <__flatcc_fb_gen_c_json_parser@@Base+0x35b0>
   27a44:	b	27d88 <__flatcc_fb_gen_c_json_parser@@Base+0x35a4>
   27a48:	b	27d7c <__flatcc_fb_gen_c_json_parser@@Base+0x3598>
   27a4c:	b	27d70 <__flatcc_fb_gen_c_json_parser@@Base+0x358c>
   27a50:	b	27ddc <__flatcc_fb_gen_c_json_parser@@Base+0x35f8>
   27a54:	b	27dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x35ec>
   27a58:	ldr	r2, [pc, #1504]	; 28040 <__flatcc_fb_gen_c_json_parser@@Base+0x385c>
   27a5c:	add	r2, pc, r2
   27a60:	ldrh	r3, [r6, #56]	; 0x38
   27a64:	sub	r3, r3, #3
   27a68:	cmp	r3, #3
   27a6c:	addls	pc, pc, r3, lsl #2
   27a70:	b	27f50 <__flatcc_fb_gen_c_json_parser@@Base+0x376c>
   27a74:	b	27ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x32ec>
   27a78:	b	27ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x32dc>
   27a7c:	b	27a84 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   27a80:	b	27a84 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   27a84:	ldr	r1, [pc, #1464]	; 28044 <__flatcc_fb_gen_c_json_parser@@Base+0x3860>
   27a88:	ldr	r3, [r6, #4]
   27a8c:	add	r1, pc, r1
   27a90:	ldr	ip, [r3, #4]
   27a94:	ldrd	sl, [r6, #48]	; 0x30
   27a98:	strd	sl, [sp, #24]
   27a9c:	ldr	r0, [r8]
   27aa0:	str	ip, [sp, #16]
   27aa4:	ldr	r3, [r3]
   27aa8:	str	ip, [sp, #8]
   27aac:	str	r3, [sp, #12]
   27ab0:	ldrd	sl, [r6, #96]	; 0x60
   27ab4:	strd	sl, [sp]
   27ab8:	bl	13f58 <fprintf@plt>
   27abc:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   27ac0:	ldr	r1, [pc, #1408]	; 28048 <__flatcc_fb_gen_c_json_parser@@Base+0x3864>
   27ac4:	ldr	r3, [r6, #4]
   27ac8:	add	r1, pc, r1
   27acc:	b	27a90 <__flatcc_fb_gen_c_json_parser@@Base+0x32ac>
   27ad0:	ldr	ip, [r6, #4]
   27ad4:	vldr	d7, [r6, #48]	; 0x30
   27ad8:	ldr	r1, [pc, #1388]	; 2804c <__flatcc_fb_gen_c_json_parser@@Base+0x3868>
   27adc:	ldr	r3, [ip, #4]
   27ae0:	vstr	d7, [sp, #24]
   27ae4:	ldr	r0, [r8]
   27ae8:	add	r1, pc, r1
   27aec:	str	r3, [sp, #16]
   27af0:	ldr	ip, [ip]
   27af4:	str	r3, [sp, #8]
   27af8:	str	ip, [sp, #12]
   27afc:	ldrd	sl, [r6, #96]	; 0x60
   27b00:	strd	sl, [sp]
   27b04:	bl	13f58 <fprintf@plt>
   27b08:	ldr	r3, [r8]
   27b0c:	ldrd	r0, [r9, #96]	; 0x60
   27b10:	b	27774 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   27b14:	ldr	r2, [pc, #1332]	; 28050 <__flatcc_fb_gen_c_json_parser@@Base+0x386c>
   27b18:	add	r2, pc, r2
   27b1c:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b20:	ldr	r2, [pc, #1324]	; 28054 <__flatcc_fb_gen_c_json_parser@@Base+0x3870>
   27b24:	add	r2, pc, r2
   27b28:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b2c:	ldr	r2, [pc, #1316]	; 28058 <__flatcc_fb_gen_c_json_parser@@Base+0x3874>
   27b30:	add	r2, pc, r2
   27b34:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b38:	ldr	r2, [pc, #1308]	; 2805c <__flatcc_fb_gen_c_json_parser@@Base+0x3878>
   27b3c:	add	r2, pc, r2
   27b40:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b44:	ldr	r2, [pc, #1300]	; 28060 <__flatcc_fb_gen_c_json_parser@@Base+0x387c>
   27b48:	add	r2, pc, r2
   27b4c:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b50:	ldr	r2, [pc, #1292]	; 28064 <__flatcc_fb_gen_c_json_parser@@Base+0x3880>
   27b54:	add	r2, pc, r2
   27b58:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b5c:	ldr	r2, [pc, #1284]	; 28068 <__flatcc_fb_gen_c_json_parser@@Base+0x3884>
   27b60:	add	r2, pc, r2
   27b64:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b68:	ldr	r2, [pc, #1276]	; 2806c <__flatcc_fb_gen_c_json_parser@@Base+0x3888>
   27b6c:	add	r2, pc, r2
   27b70:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b74:	ldr	r2, [pc, #1268]	; 28070 <__flatcc_fb_gen_c_json_parser@@Base+0x388c>
   27b78:	add	r2, pc, r2
   27b7c:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b80:	ldr	r2, [pc, #1260]	; 28074 <__flatcc_fb_gen_c_json_parser@@Base+0x3890>
   27b84:	add	r2, pc, r2
   27b88:	b	27a60 <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   27b8c:	ldr	r2, [pc, #1252]	; 28078 <__flatcc_fb_gen_c_json_parser@@Base+0x3894>
   27b90:	add	r2, pc, r2
   27b94:	ldrh	r3, [r6, #56]	; 0x38
   27b98:	cmp	r3, #4
   27b9c:	bne	27d10 <__flatcc_fb_gen_c_json_parser@@Base+0x352c>
   27ba0:	ldr	r1, [pc, #1236]	; 2807c <__flatcc_fb_gen_c_json_parser@@Base+0x3898>
   27ba4:	ldr	r0, [r6, #4]
   27ba8:	add	r1, pc, r1
   27bac:	ldr	ip, [sp, #48]	; 0x30
   27bb0:	ldr	r3, [r0, #4]
   27bb4:	str	ip, [sp, #32]
   27bb8:	ldrd	sl, [r6, #48]	; 0x30
   27bbc:	str	r3, [sp, #16]
   27bc0:	strd	sl, [sp, #24]
   27bc4:	ldr	ip, [r0]
   27bc8:	str	r3, [sp, #8]
   27bcc:	ldr	r0, [r8]
   27bd0:	str	ip, [sp, #12]
   27bd4:	ldrd	sl, [r6, #96]	; 0x60
   27bd8:	strd	sl, [sp]
   27bdc:	bl	13f58 <fprintf@plt>
   27be0:	b	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   27be4:	ldr	r2, [pc, #1172]	; 28080 <__flatcc_fb_gen_c_json_parser@@Base+0x389c>
   27be8:	add	r2, pc, r2
   27bec:	ldr	ip, [r6, #4]
   27bf0:	ldr	r1, [pc, #1164]	; 28084 <__flatcc_fb_gen_c_json_parser@@Base+0x38a0>
   27bf4:	ldr	r0, [sp, #48]	; 0x30
   27bf8:	ldr	r3, [ip, #4]
   27bfc:	add	r1, pc, r1
   27c00:	ldrd	sl, [r9, #112]	; 0x70
   27c04:	strd	sl, [sp, #24]
   27c08:	str	r0, [sp, #32]
   27c0c:	ldr	r0, [r8]
   27c10:	str	r3, [sp, #16]
   27c14:	ldr	ip, [ip]
   27c18:	str	r3, [sp, #8]
   27c1c:	b	27bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x33ec>
   27c20:	ldr	r2, [pc, #1120]	; 28088 <__flatcc_fb_gen_c_json_parser@@Base+0x38a4>
   27c24:	add	r2, pc, r2
   27c28:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c2c:	ldr	r2, [pc, #1112]	; 2808c <__flatcc_fb_gen_c_json_parser@@Base+0x38a8>
   27c30:	add	r2, pc, r2
   27c34:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c38:	ldr	r2, [pc, #1104]	; 28090 <__flatcc_fb_gen_c_json_parser@@Base+0x38ac>
   27c3c:	add	r2, pc, r2
   27c40:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c44:	ldr	r2, [pc, #1096]	; 28094 <__flatcc_fb_gen_c_json_parser@@Base+0x38b0>
   27c48:	add	r2, pc, r2
   27c4c:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c50:	ldr	r2, [pc, #1088]	; 28098 <__flatcc_fb_gen_c_json_parser@@Base+0x38b4>
   27c54:	add	r2, pc, r2
   27c58:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c5c:	ldr	r2, [pc, #1080]	; 2809c <__flatcc_fb_gen_c_json_parser@@Base+0x38b8>
   27c60:	add	r2, pc, r2
   27c64:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27c68:	ldr	r2, [pc, #1072]	; 280a0 <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   27c6c:	add	r2, pc, r2
   27c70:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27c74:	ldr	r2, [pc, #1064]	; 280a4 <__flatcc_fb_gen_c_json_parser@@Base+0x38c0>
   27c78:	add	r2, pc, r2
   27c7c:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27c80:	ldr	r2, [pc, #1056]	; 280a8 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
   27c84:	add	r2, pc, r2
   27c88:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27c8c:	ldr	r2, [pc, #1048]	; 280ac <__flatcc_fb_gen_c_json_parser@@Base+0x38c8>
   27c90:	add	r2, pc, r2
   27c94:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27c98:	ldr	r2, [pc, #1040]	; 280b0 <__flatcc_fb_gen_c_json_parser@@Base+0x38cc>
   27c9c:	add	r2, pc, r2
   27ca0:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27ca4:	ldr	r2, [pc, #1032]	; 280b4 <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
   27ca8:	add	r2, pc, r2
   27cac:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27cb0:	ldr	r2, [pc, #1024]	; 280b8 <__flatcc_fb_gen_c_json_parser@@Base+0x38d4>
   27cb4:	add	r2, pc, r2
   27cb8:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27cbc:	ldr	r2, [pc, #1016]	; 280bc <__flatcc_fb_gen_c_json_parser@@Base+0x38d8>
   27cc0:	add	r2, pc, r2
   27cc4:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27cc8:	ldr	r2, [pc, #1008]	; 280c0 <__flatcc_fb_gen_c_json_parser@@Base+0x38dc>
   27ccc:	add	r2, pc, r2
   27cd0:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27cd4:	ldr	r2, [pc, #1000]	; 280c4 <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   27cd8:	add	r2, pc, r2
   27cdc:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   27ce0:	ldr	r2, [pc, #992]	; 280c8 <__flatcc_fb_gen_c_json_parser@@Base+0x38e4>
   27ce4:	add	r2, pc, r2
   27ce8:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27cec:	ldr	r2, [pc, #984]	; 280cc <__flatcc_fb_gen_c_json_parser@@Base+0x38e8>
   27cf0:	add	r2, pc, r2
   27cf4:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27cf8:	ldr	r2, [pc, #976]	; 280d0 <__flatcc_fb_gen_c_json_parser@@Base+0x38ec>
   27cfc:	add	r2, pc, r2
   27d00:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27d04:	ldr	r2, [pc, #968]	; 280d4 <__flatcc_fb_gen_c_json_parser@@Base+0x38f0>
   27d08:	add	r2, pc, r2
   27d0c:	b	27bec <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   27d10:	bcc	27df0 <__flatcc_fb_gen_c_json_parser@@Base+0x360c>
   27d14:	cmp	r3, #6
   27d18:	bhi	27df0 <__flatcc_fb_gen_c_json_parser@@Base+0x360c>
   27d1c:	ldr	r1, [pc, #948]	; 280d8 <__flatcc_fb_gen_c_json_parser@@Base+0x38f4>
   27d20:	ldr	r0, [r6, #4]
   27d24:	add	r1, pc, r1
   27d28:	b	27bac <__flatcc_fb_gen_c_json_parser@@Base+0x33c8>
   27d2c:	ldr	r2, [pc, #936]	; 280dc <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   27d30:	add	r2, pc, r2
   27d34:	ldr	ip, [r6, #4]
   27d38:	ldr	r0, [r8]
   27d3c:	ldr	r1, [pc, #924]	; 280e0 <__flatcc_fb_gen_c_json_parser@@Base+0x38fc>
   27d40:	ldr	r3, [ip, #4]
   27d44:	add	r1, pc, r1
   27d48:	str	r3, [sp, #16]
   27d4c:	ldr	ip, [ip]
   27d50:	str	r3, [sp, #8]
   27d54:	str	ip, [sp, #12]
   27d58:	ldrd	sl, [r6, #96]	; 0x60
   27d5c:	strd	sl, [sp]
   27d60:	bl	13f58 <fprintf@plt>
   27d64:	ldr	r3, [r8]
   27d68:	ldrd	r0, [r9, #96]	; 0x60
   27d6c:	b	27774 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   27d70:	ldr	r2, [pc, #876]	; 280e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3900>
   27d74:	add	r2, pc, r2
   27d78:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27d7c:	ldr	r2, [pc, #868]	; 280e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   27d80:	add	r2, pc, r2
   27d84:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27d88:	ldr	r2, [pc, #860]	; 280ec <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   27d8c:	add	r2, pc, r2
   27d90:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27d94:	ldr	r2, [pc, #852]	; 280f0 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27d98:	add	r2, pc, r2
   27d9c:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27da0:	ldr	r2, [pc, #844]	; 280f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3910>
   27da4:	add	r2, pc, r2
   27da8:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27dac:	ldr	r2, [pc, #836]	; 280f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3914>
   27db0:	add	r2, pc, r2
   27db4:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27db8:	ldr	r2, [pc, #828]	; 280fc <__flatcc_fb_gen_c_json_parser@@Base+0x3918>
   27dbc:	add	r2, pc, r2
   27dc0:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27dc4:	ldr	r2, [pc, #820]	; 28100 <__flatcc_fb_gen_c_json_parser@@Base+0x391c>
   27dc8:	add	r2, pc, r2
   27dcc:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27dd0:	ldr	r2, [pc, #812]	; 28104 <__flatcc_fb_gen_c_json_parser@@Base+0x3920>
   27dd4:	add	r2, pc, r2
   27dd8:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27ddc:	ldr	r2, [pc, #804]	; 28108 <__flatcc_fb_gen_c_json_parser@@Base+0x3924>
   27de0:	add	r2, pc, r2
   27de4:	b	27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   27de8:	ldr	r3, [r8]
   27dec:	b	27788 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa4>
   27df0:	ldr	r2, [pc, #788]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27df4:	movw	r3, #483	; 0x1e3
   27df8:	ldr	r1, [sp, #68]	; 0x44
   27dfc:	ldr	r0, [pc, #780]	; 28110 <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   27e00:	ldr	r4, [pc, #780]	; 28114 <__flatcc_fb_gen_c_json_parser@@Base+0x3930>
   27e04:	ldr	ip, [r1, r2]
   27e08:	add	r0, pc, r0
   27e0c:	ldr	r1, [pc, #772]	; 28118 <__flatcc_fb_gen_c_json_parser@@Base+0x3934>
   27e10:	add	r4, pc, r4
   27e14:	str	r0, [sp]
   27e18:	mov	r2, r4
   27e1c:	ldr	r0, [ip]
   27e20:	add	r1, pc, r1
   27e24:	bl	13f58 <fprintf@plt>
   27e28:	ldr	r3, [pc, #748]	; 2811c <__flatcc_fb_gen_c_json_parser@@Base+0x3938>
   27e2c:	mov	r1, r4
   27e30:	movw	r2, #483	; 0x1e3
   27e34:	ldr	r0, [pc, #740]	; 28120 <__flatcc_fb_gen_c_json_parser@@Base+0x393c>
   27e38:	add	r3, pc, r3
   27e3c:	add	r3, r3, #76	; 0x4c
   27e40:	add	r0, pc, r0
   27e44:	bl	1400c <__assert_fail@plt>
   27e48:	ldr	r2, [pc, #700]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27e4c:	mov	r3, #504	; 0x1f8
   27e50:	ldr	r1, [sp, #68]	; 0x44
   27e54:	ldr	r0, [pc, #712]	; 28124 <__flatcc_fb_gen_c_json_parser@@Base+0x3940>
   27e58:	ldr	r4, [pc, #712]	; 28128 <__flatcc_fb_gen_c_json_parser@@Base+0x3944>
   27e5c:	ldr	ip, [r1, r2]
   27e60:	add	r0, pc, r0
   27e64:	ldr	r1, [pc, #704]	; 2812c <__flatcc_fb_gen_c_json_parser@@Base+0x3948>
   27e68:	add	r4, pc, r4
   27e6c:	str	r0, [sp]
   27e70:	mov	r2, r4
   27e74:	ldr	r0, [ip]
   27e78:	add	r1, pc, r1
   27e7c:	bl	13f58 <fprintf@plt>
   27e80:	ldr	r3, [pc, #680]	; 28130 <__flatcc_fb_gen_c_json_parser@@Base+0x394c>
   27e84:	mov	r1, r4
   27e88:	mov	r2, #504	; 0x1f8
   27e8c:	ldr	r0, [pc, #672]	; 28134 <__flatcc_fb_gen_c_json_parser@@Base+0x3950>
   27e90:	add	r3, pc, r3
   27e94:	add	r3, r3, #76	; 0x4c
   27e98:	add	r0, pc, r0
   27e9c:	bl	1400c <__assert_fail@plt>
   27ea0:	ldr	r2, [pc, #612]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27ea4:	movw	r3, #543	; 0x21f
   27ea8:	ldr	r1, [sp, #68]	; 0x44
   27eac:	ldr	r0, [pc, #644]	; 28138 <__flatcc_fb_gen_c_json_parser@@Base+0x3954>
   27eb0:	ldr	r4, [pc, #644]	; 2813c <__flatcc_fb_gen_c_json_parser@@Base+0x3958>
   27eb4:	ldr	ip, [r1, r2]
   27eb8:	add	r0, pc, r0
   27ebc:	ldr	r1, [pc, #636]	; 28140 <__flatcc_fb_gen_c_json_parser@@Base+0x395c>
   27ec0:	add	r4, pc, r4
   27ec4:	str	r0, [sp]
   27ec8:	mov	r2, r4
   27ecc:	ldr	r0, [ip]
   27ed0:	add	r1, pc, r1
   27ed4:	bl	13f58 <fprintf@plt>
   27ed8:	ldr	r3, [pc, #612]	; 28144 <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   27edc:	mov	r1, r4
   27ee0:	movw	r2, #543	; 0x21f
   27ee4:	ldr	r0, [pc, #604]	; 28148 <__flatcc_fb_gen_c_json_parser@@Base+0x3964>
   27ee8:	add	r3, pc, r3
   27eec:	add	r3, r3, #76	; 0x4c
   27ef0:	add	r0, pc, r0
   27ef4:	bl	1400c <__assert_fail@plt>
   27ef8:	ldr	r2, [pc, #524]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27efc:	movw	r3, #361	; 0x169
   27f00:	ldr	r1, [sp, #68]	; 0x44
   27f04:	ldr	r0, [pc, #576]	; 2814c <__flatcc_fb_gen_c_json_parser@@Base+0x3968>
   27f08:	ldr	r4, [pc, #576]	; 28150 <__flatcc_fb_gen_c_json_parser@@Base+0x396c>
   27f0c:	ldr	ip, [r1, r2]
   27f10:	add	r0, pc, r0
   27f14:	ldr	r1, [pc, #568]	; 28154 <__flatcc_fb_gen_c_json_parser@@Base+0x3970>
   27f18:	add	r4, pc, r4
   27f1c:	str	r0, [sp]
   27f20:	mov	r2, r4
   27f24:	ldr	r0, [ip]
   27f28:	add	r1, pc, r1
   27f2c:	bl	13f58 <fprintf@plt>
   27f30:	ldr	r3, [pc, #544]	; 28158 <__flatcc_fb_gen_c_json_parser@@Base+0x3974>
   27f34:	mov	r1, r4
   27f38:	movw	r2, #361	; 0x169
   27f3c:	ldr	r0, [pc, #536]	; 2815c <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   27f40:	add	r3, pc, r3
   27f44:	add	r3, r3, #76	; 0x4c
   27f48:	add	r0, pc, r0
   27f4c:	bl	1400c <__assert_fail@plt>
   27f50:	ldr	r2, [pc, #436]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27f54:	movw	r3, #406	; 0x196
   27f58:	ldr	r1, [sp, #68]	; 0x44
   27f5c:	ldr	r0, [pc, #508]	; 28160 <__flatcc_fb_gen_c_json_parser@@Base+0x397c>
   27f60:	ldr	r4, [pc, #508]	; 28164 <__flatcc_fb_gen_c_json_parser@@Base+0x3980>
   27f64:	ldr	ip, [r1, r2]
   27f68:	add	r0, pc, r0
   27f6c:	ldr	r1, [pc, #500]	; 28168 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   27f70:	add	r4, pc, r4
   27f74:	str	r0, [sp]
   27f78:	mov	r2, r4
   27f7c:	ldr	r0, [ip]
   27f80:	add	r1, pc, r1
   27f84:	bl	13f58 <fprintf@plt>
   27f88:	ldr	r3, [pc, #476]	; 2816c <__flatcc_fb_gen_c_json_parser@@Base+0x3988>
   27f8c:	mov	r1, r4
   27f90:	movw	r2, #406	; 0x196
   27f94:	ldr	r0, [pc, #468]	; 28170 <__flatcc_fb_gen_c_json_parser@@Base+0x398c>
   27f98:	add	r3, pc, r3
   27f9c:	add	r3, r3, #76	; 0x4c
   27fa0:	add	r0, pc, r0
   27fa4:	bl	1400c <__assert_fail@plt>
   27fa8:	bl	266fc <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   27fac:	ldr	r2, [pc, #344]	; 2810c <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   27fb0:	mov	r3, #96	; 0x60
   27fb4:	ldr	r1, [sp, #68]	; 0x44
   27fb8:	ldr	r0, [pc, #436]	; 28174 <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
   27fbc:	ldr	r4, [pc, #436]	; 28178 <__flatcc_fb_gen_c_json_parser@@Base+0x3994>
   27fc0:	ldr	ip, [r1, r2]
   27fc4:	add	r0, pc, r0
   27fc8:	ldr	r1, [pc, #428]	; 2817c <__flatcc_fb_gen_c_json_parser@@Base+0x3998>
   27fcc:	add	r4, pc, r4
   27fd0:	str	r0, [sp]
   27fd4:	mov	r2, r4
   27fd8:	ldr	r0, [ip]
   27fdc:	add	r1, pc, r1
   27fe0:	bl	13f58 <fprintf@plt>
   27fe4:	ldr	r3, [pc, #404]	; 28180 <__flatcc_fb_gen_c_json_parser@@Base+0x399c>
   27fe8:	mov	r1, r4
   27fec:	mov	r2, #96	; 0x60
   27ff0:	ldr	r0, [pc, #396]	; 28184 <__flatcc_fb_gen_c_json_parser@@Base+0x39a0>
   27ff4:	add	r3, pc, r3
   27ff8:	add	r0, pc, r0
   27ffc:	bl	1400c <__assert_fail@plt>
   28000:	andeq	r3, r4, ip, ror #20
   28004:			; <UNDEFINED> instruction: 0x0002e7bc
   28008:	strdeq	lr, [r2], -ip
   2800c:	strdeq	lr, [r2], -ip
   28010:	andeq	lr, r2, ip, lsl #27
   28014:	andeq	lr, r2, ip, lsl r9
   28018:	andeq	lr, r2, r0, asr lr
   2801c:	andeq	lr, r2, ip, ror #26
   28020:			; <UNDEFINED> instruction: 0x0002e8b8
   28024:	andeq	lr, r2, r0, ror #13
   28028:	ldrdeq	lr, [r2], -ip
   2802c:	andeq	lr, r2, r0, lsl r9
   28030:	andeq	lr, r2, r4, lsl r8
   28034:	andeq	lr, r2, r4, asr r8
   28038:	andeq	lr, r2, r8, lsl r5
   2803c:			; <UNDEFINED> instruction: 0x0002e5b8
   28040:	andeq	r8, r1, r4, asr #29
   28044:	andeq	lr, r2, ip, asr #7
   28048:	ldrdeq	lr, [r2], -r0
   2804c:	strdeq	lr, [r2], -r0
   28050:	andeq	r8, r1, r0, ror lr
   28054:	andeq	r8, r1, r4, ror lr
   28058:	ldrdeq	r8, [r1], -r4
   2805c:	andeq	r8, r1, r4, asr #28
   28060:	andeq	r8, r1, r8, lsr #28
   28064:	andeq	r0, r3, r8, ror sl
   28068:	andeq	r8, r1, r0, lsl #28
   2806c:	andeq	r8, r1, r8, asr #27
   28070:	ldrdeq	r8, [r1], -r0
   28074:	muleq	r1, r4, sp
   28078:	muleq	r1, r0, sp
   2807c:	andeq	lr, r2, r8, lsr #11
   28080:	andeq	r8, r1, r0, lsr sp
   28084:	muleq	r2, r8, r7
   28088:	andeq	r8, r1, ip, asr #26
   2808c:	andeq	r8, r1, r0, asr sp
   28090:	andeq	r8, r1, r8, asr #25
   28094:	andeq	r8, r1, r0, asr sp
   28098:	andeq	r8, r1, r4, lsr sp
   2809c:	andeq	r8, r1, r0, asr #25
   280a0:	andeq	r8, r1, ip, lsr #25
   280a4:	ldrdeq	r8, [r1], -r0
   280a8:			; <UNDEFINED> instruction: 0x00018cb0
   280ac:	ldrdeq	r8, [r1], -r0
   280b0:	andeq	r0, r3, r0, lsr r9
   280b4:	andeq	r8, r1, r8, asr #25
   280b8:	andeq	r8, r1, ip, asr #25
   280bc:	andeq	r8, r1, r4, asr #24
   280c0:	andeq	r8, r1, ip, asr #25
   280c4:			; <UNDEFINED> instruction: 0x00018cb0
   280c8:	andeq	r8, r1, r4, ror #24
   280cc:	andeq	r8, r1, r4, asr #24
   280d0:	andeq	r8, r1, r4, ror #24
   280d4:	andeq	r0, r3, r4, asr #17
   280d8:	ldrdeq	lr, [r2], -r0
   280dc:	andeq	r8, r1, r8, ror #23
   280e0:	andeq	lr, r2, r4, ror #5
   280e4:	andeq	r8, r1, r4, lsr #24
   280e8:	andeq	r8, r1, r4, lsl #23
   280ec:	strdeq	r8, [r1], -r4
   280f0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   280f4:	andeq	r0, r3, r8, lsr #16
   280f8:			; <UNDEFINED> instruction: 0x00018bb0
   280fc:	andeq	r8, r1, r8, ror fp
   28100:	andeq	r8, r1, r0, lsl #23
   28104:	andeq	r8, r1, ip, asr #22
   28108:	andeq	r8, r1, r8, lsr #23
   2810c:	muleq	r0, ip, r0
   28110:	andeq	lr, r2, r4, lsr #7
   28114:	andeq	sp, r2, ip, asr r9
   28118:	muleq	r1, r8, sl
   2811c:	andeq	sp, r2, r0, lsl #15
   28120:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   28124:	muleq	r2, r8, r4
   28128:	andeq	sp, r2, r4, lsl #18
   2812c:	andeq	r8, r1, r0, asr #20
   28130:	andeq	sp, r2, r8, lsr #14
   28134:	andeq	r0, r2, r4, asr #30
   28138:	andeq	lr, r2, r4, lsl r6
   2813c:	andeq	sp, r2, ip, lsr #17
   28140:	andeq	r8, r1, r8, ror #19
   28144:	ldrdeq	sp, [r2], -r0
   28148:	andeq	r0, r2, ip, ror #29
   2814c:	andeq	sp, r2, r8, lsr #29
   28150:	andeq	sp, r2, r4, asr r8
   28154:	muleq	r1, r0, r9
   28158:	andeq	sp, r2, r8, ror r6
   2815c:	muleq	r2, r4, lr
   28160:	andeq	ip, r2, ip, asr #1
   28164:	strdeq	sp, [r2], -ip
   28168:	andeq	r8, r1, r8, lsr r9
   2816c:	andeq	sp, r2, r0, lsr #12
   28170:	andeq	r0, r2, ip, lsr lr
   28174:	andeq	r8, r1, r0, lsl #18
   28178:	andeq	r8, r1, ip, lsl #17
   2817c:	ldrdeq	r8, [r1], -ip
   28180:	andeq	sp, r2, r4, asr #11
   28184:	andeq	r0, r2, r4, ror #27

00028188 <__flatcc_fb_gen_c_json_printer@@Base>:
   28188:	ldr	r3, [r0, #208]	; 0xd0
   2818c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   28190:	mov	r4, r0
   28194:	ldr	r1, [pc, #1240]	; 28674 <__flatcc_fb_gen_c_json_printer@@Base+0x4ec>
   28198:	ldr	r0, [r0, #204]	; 0xcc
   2819c:	ldr	r3, [r3, #164]	; 0xa4
   281a0:	add	r1, pc, r1
   281a4:	strd	r6, [sp, #8]
   281a8:	strd	r8, [sp, #16]
   281ac:	str	sl, [sp, #24]
   281b0:	str	lr, [sp, #28]
   281b4:	sub	sp, sp, #232	; 0xe8
   281b8:	mov	r2, r3
   281bc:	bl	13f58 <fprintf@plt>
   281c0:	ldr	r0, [pc, #1200]	; 28678 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   281c4:	mov	r2, #81	; 0x51
   281c8:	mov	r1, #1
   281cc:	ldr	r3, [r4, #204]	; 0xcc
   281d0:	add	r0, pc, r0
   281d4:	bl	13eec <fwrite@plt>
   281d8:	ldr	r0, [pc, #1180]	; 2867c <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   281dc:	mov	r2, #40	; 0x28
   281e0:	mov	r1, #1
   281e4:	ldr	r3, [r4, #204]	; 0xcc
   281e8:	add	r0, pc, r0
   281ec:	bl	13eec <fwrite@plt>
   281f0:	ldr	r2, [pc, #1160]	; 28680 <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   281f4:	mov	r0, r4
   281f8:	ldr	r1, [pc, #1156]	; 28684 <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   281fc:	add	r2, pc, r2
   28200:	add	r1, pc, r1
   28204:	bl	15180 <__flatcc_fb_gen_c_includes@@Base>
   28208:	ldr	r1, [r4, #204]	; 0xcc
   2820c:	ldr	r3, [r4, #212]	; 0xd4
   28210:	ldr	r3, [r3, #140]	; 0x8c
   28214:	cmp	r3, #0
   28218:	bne	28550 <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   2821c:	mov	r0, #10
   28220:	add	r5, sp, #12
   28224:	bl	13fb8 <fputc@plt>
   28228:	ldr	r6, [r4, #208]	; 0xd0
   2822c:	mov	r2, #220	; 0xdc
   28230:	mov	r0, r5
   28234:	mov	r1, #0
   28238:	ldr	r7, [r6, #52]	; 0x34
   2823c:	bl	13f70 <memset@plt>
   28240:	cmp	r7, #0
   28244:	beq	28254 <__flatcc_fb_gen_c_json_printer@@Base+0xcc>
   28248:	ldrh	r3, [r7, #8]
   2824c:	cmp	r3, #1
   28250:	bls	28590 <__flatcc_fb_gen_c_json_printer@@Base+0x408>
   28254:	ldr	r6, [r6, #40]	; 0x28
   28258:	cmp	r6, #0
   2825c:	beq	282ec <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   28260:	ldr	r9, [pc, #1056]	; 28688 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
   28264:	ldr	r8, [pc, #1056]	; 2868c <__flatcc_fb_gen_c_json_printer@@Base+0x504>
   28268:	ldr	r7, [pc, #1056]	; 28690 <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   2826c:	add	r9, pc, r9
   28270:	add	r8, pc, r8
   28274:	add	r7, pc, r7
   28278:	b	282ac <__flatcc_fb_gen_c_json_printer@@Base+0x124>
   2827c:	cmp	r3, #4
   28280:	bne	282a0 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   28284:	ldr	r0, [r6, #12]
   28288:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2828c:	mov	r3, r5
   28290:	mov	r2, r5
   28294:	ldr	r0, [r4, #204]	; 0xcc
   28298:	mov	r1, r7
   2829c:	bl	13f58 <fprintf@plt>
   282a0:	ldr	r6, [r6]
   282a4:	cmp	r6, #0
   282a8:	beq	282ec <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   282ac:	ldrh	r3, [r6, #8]
   282b0:	mov	r2, r5
   282b4:	mov	r1, r6
   282b8:	cmp	r3, #1
   282bc:	beq	28534 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   282c0:	cmp	r3, #0
   282c4:	bne	2827c <__flatcc_fb_gen_c_json_printer@@Base+0xf4>
   282c8:	ldr	r0, [r6, #12]
   282cc:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   282d0:	mov	r2, r5
   282d4:	mov	r1, r8
   282d8:	ldr	r0, [r4, #204]	; 0xcc
   282dc:	bl	13f58 <fprintf@plt>
   282e0:	ldr	r6, [r6]
   282e4:	cmp	r6, #0
   282e8:	bne	282ac <__flatcc_fb_gen_c_json_printer@@Base+0x124>
   282ec:	mov	r0, #10
   282f0:	ldr	r1, [r4, #204]	; 0xcc
   282f4:	bl	13fb8 <fputc@plt>
   282f8:	ldr	r3, [r4, #208]	; 0xd0
   282fc:	ldr	r6, [r3, #40]	; 0x28
   28300:	cmp	r6, #0
   28304:	bne	28318 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   28308:	b	284d4 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   2830c:	ldr	r6, [r6]
   28310:	cmp	r6, #0
   28314:	beq	2833c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   28318:	ldrh	r3, [r6, #8]
   2831c:	cmp	r3, #3
   28320:	bne	2830c <__flatcc_fb_gen_c_json_printer@@Base+0x184>
   28324:	mov	r1, r6
   28328:	mov	r0, r4
   2832c:	bl	26de4 <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   28330:	ldr	r6, [r6]
   28334:	cmp	r6, #0
   28338:	bne	28318 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   2833c:	ldr	r3, [r4, #208]	; 0xd0
   28340:	ldr	r6, [r3, #40]	; 0x28
   28344:	cmp	r6, #0
   28348:	beq	284d4 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   2834c:	ldr	sl, [pc, #832]	; 28694 <__flatcc_fb_gen_c_json_printer@@Base+0x50c>
   28350:	ldr	r9, [pc, #832]	; 28698 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
   28354:	add	sl, pc, sl
   28358:	add	r9, pc, r9
   2835c:	b	2836c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   28360:	ldr	r6, [r6]
   28364:	cmp	r6, #0
   28368:	beq	28440 <__flatcc_fb_gen_c_json_printer@@Base+0x2b8>
   2836c:	ldrh	r3, [r6, #8]
   28370:	cmp	r3, #4
   28374:	bne	28360 <__flatcc_fb_gen_c_json_printer@@Base+0x1d8>
   28378:	mov	r2, #220	; 0xdc
   2837c:	mov	r1, #0
   28380:	mov	r0, r5
   28384:	add	r8, r4, #204	; 0xcc
   28388:	bl	13f70 <memset@plt>
   2838c:	mov	r2, r5
   28390:	mov	r1, r6
   28394:	ldr	r0, [r6, #12]
   28398:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2839c:	mov	r2, r5
   283a0:	mov	r1, sl
   283a4:	ldr	r0, [r4, #204]	; 0xcc
   283a8:	bl	13f58 <fprintf@plt>
   283ac:	ldr	r7, [r6, #20]
   283b0:	ldr	r3, [r4, #204]	; 0xcc
   283b4:	cmp	r7, #0
   283b8:	beq	283fc <__flatcc_fb_gen_c_json_printer@@Base+0x274>
   283bc:	ldrh	r2, [r7, #24]
   283c0:	mov	r0, r3
   283c4:	mov	r1, r9
   283c8:	cmp	r2, #0
   283cc:	beq	283f0 <__flatcc_fb_gen_c_json_printer@@Base+0x268>
   283d0:	ldr	ip, [r7, #4]
   283d4:	ldr	r2, [r7, #48]	; 0x30
   283d8:	ldr	r3, [ip, #4]
   283dc:	str	r3, [sp, #4]
   283e0:	ldr	ip, [ip]
   283e4:	str	ip, [sp]
   283e8:	bl	13f58 <fprintf@plt>
   283ec:	ldr	r3, [r4, #204]	; 0xcc
   283f0:	ldr	r7, [r7]
   283f4:	cmp	r7, #0
   283f8:	bne	283bc <__flatcc_fb_gen_c_json_printer@@Base+0x234>
   283fc:	ldr	r0, [pc, #664]	; 2869c <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   28400:	mov	r2, #78	; 0x4e
   28404:	mov	r1, #1
   28408:	add	r0, pc, r0
   2840c:	bl	13eec <fwrite@plt>
   28410:	ldr	r0, [pc, #648]	; 286a0 <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   28414:	mov	r2, #9
   28418:	mov	r1, #1
   2841c:	ldr	r3, [r4, #204]	; 0xcc
   28420:	add	r0, pc, r0
   28424:	bl	13eec <fwrite@plt>
   28428:	mov	r1, r6
   2842c:	mov	r0, r8
   28430:	bl	26778 <__flatcc_fb_gen_c_json_parser@@Base+0x1f94>
   28434:	ldr	r6, [r6]
   28438:	cmp	r6, #0
   2843c:	bne	2836c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   28440:	ldr	r3, [r4, #208]	; 0xd0
   28444:	ldr	r6, [r3, #40]	; 0x28
   28448:	cmp	r6, #0
   2844c:	beq	284d4 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   28450:	add	r7, r4, #204	; 0xcc
   28454:	b	28464 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   28458:	ldr	r6, [r6]
   2845c:	cmp	r6, #0
   28460:	beq	28488 <__flatcc_fb_gen_c_json_printer@@Base+0x300>
   28464:	ldrh	r3, [r6, #8]
   28468:	cmp	r3, #1
   2846c:	bne	28458 <__flatcc_fb_gen_c_json_printer@@Base+0x2d0>
   28470:	mov	r1, r6
   28474:	mov	r0, r7
   28478:	bl	269ec <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   2847c:	ldr	r6, [r6]
   28480:	cmp	r6, #0
   28484:	bne	28464 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   28488:	ldr	r3, [r4, #208]	; 0xd0
   2848c:	ldr	r6, [r3, #40]	; 0x28
   28490:	cmp	r6, #0
   28494:	beq	284d4 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   28498:	add	r7, r4, #204	; 0xcc
   2849c:	b	284ac <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   284a0:	ldr	r6, [r6]
   284a4:	cmp	r6, #0
   284a8:	beq	284d0 <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   284ac:	ldrh	r3, [r6, #8]
   284b0:	cmp	r3, #0
   284b4:	bne	284a0 <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   284b8:	mov	r1, r6
   284bc:	mov	r0, r7
   284c0:	bl	27560 <__flatcc_fb_gen_c_json_parser@@Base+0x2d7c>
   284c4:	ldr	r6, [r6]
   284c8:	cmp	r6, #0
   284cc:	bne	284ac <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   284d0:	ldr	r3, [r4, #208]	; 0xd0
   284d4:	ldr	r6, [r3, #52]	; 0x34
   284d8:	cmp	r6, #0
   284dc:	beq	284ec <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   284e0:	ldrh	r3, [r6, #8]
   284e4:	cmp	r3, #1
   284e8:	bls	285c8 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
   284ec:	ldr	r0, [r4, #204]	; 0xcc
   284f0:	ldr	r3, [r4, #212]	; 0xd4
   284f4:	ldr	r3, [r3, #140]	; 0x8c
   284f8:	cmp	r3, #0
   284fc:	bne	28570 <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   28500:	ldr	r3, [r4, #208]	; 0xd0
   28504:	ldr	r1, [pc, #408]	; 286a4 <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   28508:	ldr	r2, [r3, #164]	; 0xa4
   2850c:	add	r1, pc, r1
   28510:	bl	13f58 <fprintf@plt>
   28514:	mov	r0, #0
   28518:	add	sp, sp, #232	; 0xe8
   2851c:	ldrd	r4, [sp]
   28520:	ldrd	r6, [sp, #8]
   28524:	ldrd	r8, [sp, #16]
   28528:	ldr	sl, [sp, #24]
   2852c:	add	sp, sp, #28
   28530:	pop	{pc}		; (ldr pc, [sp], #4)
   28534:	ldr	r0, [r6, #12]
   28538:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   2853c:	mov	r2, r5
   28540:	mov	r1, r9
   28544:	ldr	r0, [r4, #204]	; 0xcc
   28548:	bl	13f58 <fprintf@plt>
   2854c:	b	282a0 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   28550:	ldr	r0, [pc, #336]	; 286a8 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   28554:	mov	r3, r1
   28558:	mov	r2, #36	; 0x24
   2855c:	mov	r1, #1
   28560:	add	r0, pc, r0
   28564:	bl	13eec <fwrite@plt>
   28568:	ldr	r1, [r4, #204]	; 0xcc
   2856c:	b	2821c <__flatcc_fb_gen_c_json_printer@@Base+0x94>
   28570:	mov	r3, r0
   28574:	ldr	r0, [pc, #304]	; 286ac <__flatcc_fb_gen_c_json_printer@@Base+0x524>
   28578:	mov	r2, #36	; 0x24
   2857c:	mov	r1, #1
   28580:	add	r0, pc, r0
   28584:	bl	13eec <fwrite@plt>
   28588:	ldr	r0, [r4, #204]	; 0xcc
   2858c:	b	28500 <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   28590:	ldr	r0, [pc, #280]	; 286b0 <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   28594:	movw	r2, #482	; 0x1e2
   28598:	mov	r1, #1
   2859c:	ldr	r3, [r4, #204]	; 0xcc
   285a0:	add	r0, pc, r0
   285a4:	bl	13eec <fwrite@plt>
   285a8:	ldr	r1, [pc, #260]	; 286b4 <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   285ac:	ldr	r0, [r4, #204]	; 0xcc
   285b0:	ldr	r3, [r4, #208]	; 0xd0
   285b4:	add	r1, pc, r1
   285b8:	ldr	r2, [r3, #160]	; 0xa0
   285bc:	bl	13f58 <fprintf@plt>
   285c0:	ldr	r6, [r4, #208]	; 0xd0
   285c4:	b	28254 <__flatcc_fb_gen_c_json_printer@@Base+0xcc>
   285c8:	mov	r2, #220	; 0xdc
   285cc:	mov	r1, #0
   285d0:	mov	r0, r5
   285d4:	bl	13f70 <memset@plt>
   285d8:	mov	r2, r5
   285dc:	mov	r1, r6
   285e0:	ldr	r0, [r6, #12]
   285e4:	bl	15404 <__flatcc_fb_scoped_symbol_name@@Base>
   285e8:	ldr	r1, [pc, #200]	; 286b8 <__flatcc_fb_gen_c_json_printer@@Base+0x530>
   285ec:	ldr	r0, [r4, #204]	; 0xcc
   285f0:	ldr	r3, [r4, #208]	; 0xd0
   285f4:	add	r1, pc, r1
   285f8:	ldr	r2, [r3, #160]	; 0xa0
   285fc:	bl	13f58 <fprintf@plt>
   28600:	ldr	r1, [pc, #180]	; 286bc <__flatcc_fb_gen_c_json_printer@@Base+0x534>
   28604:	mov	r2, r5
   28608:	ldr	r0, [r4, #204]	; 0xcc
   2860c:	add	r1, pc, r1
   28610:	bl	13f58 <fprintf@plt>
   28614:	ldr	r2, [r4, #208]	; 0xd0
   28618:	ldrh	r3, [r2, #16]
   2861c:	cmp	r3, #2
   28620:	beq	28658 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
   28624:	ldr	r0, [pc, #148]	; 286c0 <__flatcc_fb_gen_c_json_printer@@Base+0x538>
   28628:	mov	r2, #3
   2862c:	mov	r1, #1
   28630:	ldr	r3, [r4, #204]	; 0xcc
   28634:	add	r0, pc, r0
   28638:	bl	13eec <fwrite@plt>
   2863c:	ldr	r0, [pc, #128]	; 286c4 <__flatcc_fb_gen_c_json_printer@@Base+0x53c>
   28640:	mov	r2, #3
   28644:	mov	r1, #1
   28648:	ldr	r3, [r4, #204]	; 0xcc
   2864c:	add	r0, pc, r0
   28650:	bl	13eec <fwrite@plt>
   28654:	b	284ec <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   28658:	ldr	r1, [pc, #104]	; 286c8 <__flatcc_fb_gen_c_json_printer@@Base+0x540>
   2865c:	ldr	r3, [r2, #8]
   28660:	ldr	r2, [r2, #12]
   28664:	add	r1, pc, r1
   28668:	ldr	r0, [r4, #204]	; 0xcc
   2866c:	bl	13f58 <fprintf@plt>
   28670:	b	2863c <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   28674:	andeq	lr, r2, ip, asr #8
   28678:	andeq	r9, r1, r4, lsl #22
   2867c:	andeq	lr, r2, ip, lsr r4
   28680:	andeq	lr, r2, r4, asr r4
   28684:	muleq	r1, r0, r3
   28688:	andeq	lr, r2, r4, ror #14
   2868c:	strdeq	lr, [r2], -r4
   28690:	andeq	lr, r2, r8, lsr #12
   28694:	andeq	lr, r2, ip, asr #13
   28698:	andeq	lr, r2, ip, lsr r7
   2869c:	andeq	lr, r2, r0, ror #13
   286a0:	andeq	sp, r2, r4, asr r4
   286a4:	andeq	lr, r2, ip, asr #14
   286a8:	andeq	r9, r1, r8, lsl #17
   286ac:	andeq	pc, r1, ip, asr #13
   286b0:	andeq	lr, r2, r0, asr #1
   286b4:	muleq	r2, r0, r2
   286b8:	andeq	lr, r2, r4, asr #10
   286bc:	andeq	lr, r2, r4, lsl #11
   286c0:	andeq	lr, r2, r0, lsr #12
   286c4:	ldrdeq	sl, [r2], -r0
   286c8:	andeq	lr, r2, r4, ror #11
   286cc:	str	r4, [sp, #-8]!
   286d0:	mov	r4, r0
   286d4:	ldr	r0, [r0, #16]
   286d8:	str	lr, [sp, #4]
   286dc:	cmp	r0, #0
   286e0:	beq	286e8 <__flatcc_fb_gen_c_json_printer@@Base+0x560>
   286e4:	bl	13ea4 <free@plt>
   286e8:	ldr	r0, [r4, #20]
   286ec:	cmp	r0, #0
   286f0:	beq	286f8 <__flatcc_fb_gen_c_json_printer@@Base+0x570>
   286f4:	bl	13ea4 <free@plt>
   286f8:	ldr	r0, [r4, #24]
   286fc:	cmp	r0, #0
   28700:	beq	28708 <__flatcc_fb_gen_c_json_printer@@Base+0x580>
   28704:	bl	13ea4 <free@plt>
   28708:	mov	r3, #0
   2870c:	str	r3, [r4]
   28710:	str	r3, [r4, #4]
   28714:	str	r3, [r4, #8]
   28718:	str	r3, [r4, #12]
   2871c:	str	r3, [r4, #16]
   28720:	str	r3, [r4, #20]
   28724:	str	r3, [r4, #24]
   28728:	str	r3, [r4, #28]
   2872c:	str	r3, [r4, #32]
   28730:	str	r3, [r4, #36]	; 0x24
   28734:	str	r3, [r4, #40]	; 0x28
   28738:	ldr	r4, [sp]
   2873c:	add	sp, sp, #4
   28740:	pop	{pc}		; (ldr pc, [sp], #4)
   28744:	add	r3, r1, #4
   28748:	ldr	r1, [pc, #12]	; 2875c <__flatcc_fb_gen_c_json_printer@@Base+0x5d4>
   2874c:	mov	r2, r0
   28750:	mov	r0, r3
   28754:	add	r1, pc, r1
   28758:	b	2b9dc <fb_symbol_table_visit@@Base>
   2875c:	andeq	r0, r0, r4, lsl #1
   28760:	add	r3, r1, #4
   28764:	ldr	r1, [pc, #12]	; 28778 <__flatcc_fb_gen_c_json_printer@@Base+0x5f0>
   28768:	mov	r2, r0
   2876c:	mov	r0, r3
   28770:	add	r1, pc, r1
   28774:	b	2b9dc <fb_symbol_table_visit@@Base>
   28778:	strdeq	r0, [r0], -r4
   2877c:	ldr	r3, [pc, #76]	; 287d0 <__flatcc_fb_gen_c_json_printer@@Base+0x648>
   28780:	mov	r2, #8
   28784:	strd	r4, [sp, #-16]!
   28788:	mov	r4, r1
   2878c:	mov	r5, r0
   28790:	str	r6, [sp, #8]
   28794:	str	lr, [sp, #12]
   28798:	add	r3, pc, r3
   2879c:	bl	13fdc <qsort@plt>
   287a0:	cmp	r4, #0
   287a4:	ble	287c0 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   287a8:	mov	r3, #0
   287ac:	ldr	r2, [r5, r3, lsl #3]
   287b0:	str	r3, [r2, #124]	; 0x7c
   287b4:	add	r3, r3, #1
   287b8:	cmp	r4, r3
   287bc:	bne	287ac <__flatcc_fb_gen_c_json_printer@@Base+0x624>
   287c0:	ldrd	r4, [sp]
   287c4:	ldr	r6, [sp, #8]
   287c8:	add	sp, sp, #12
   287cc:	pop	{pc}		; (ldr pc, [sp], #4)
   287d0:	andeq	r0, r0, r4, lsr r0
   287d4:	ldr	r0, [r0, #4]
   287d8:	ldr	r1, [r1, #4]
   287dc:	b	13e8c <strcmp@plt>
   287e0:	ldrh	r3, [r1, #8]
   287e4:	cmp	r3, #4
   287e8:	bxhi	lr
   287ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   287f0:	strd	r6, [sp, #8]
   287f4:	mov	r7, r0
   287f8:	mov	r6, r1
   287fc:	ldr	r0, [r0, #40]	; 0x28
   28800:	strd	r8, [sp, #16]
   28804:	ldr	r1, [r1, #16]
   28808:	str	sl, [sp, #24]
   2880c:	str	lr, [sp, #28]
   28810:	add	r0, r0, #172	; 0xac
   28814:	bl	2b21c <ptr_set_find_item@@Base>
   28818:	cmp	r0, #0
   2881c:	beq	288cc <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   28820:	ldr	r3, [r7]
   28824:	ldr	r9, [r7, #36]	; 0x24
   28828:	cmp	r3, #0
   2882c:	moveq	r4, r9
   28830:	beq	28870 <__flatcc_fb_gen_c_json_printer@@Base+0x6e8>
   28834:	ldr	r3, [r6, #12]
   28838:	mov	r4, r9
   2883c:	ldr	r5, [r3]
   28840:	cmp	r5, #0
   28844:	beq	28870 <__flatcc_fb_gen_c_json_printer@@Base+0x6e8>
   28848:	mov	r8, #46	; 0x2e
   2884c:	ldr	r3, [r5, #4]
   28850:	mov	r0, r4
   28854:	ldm	r3, {r1, r2}
   28858:	add	r4, r4, r2
   2885c:	bl	13eb0 <memcpy@plt>
   28860:	strb	r8, [r4], #1
   28864:	ldr	r5, [r5]
   28868:	cmp	r5, #0
   2886c:	bne	2884c <__flatcc_fb_gen_c_json_printer@@Base+0x6c4>
   28870:	ldr	r3, [r6, #4]
   28874:	mov	r0, r4
   28878:	ldm	r3, {r1, r5}
   2887c:	mov	r2, r5
   28880:	bl	13eb0 <memcpy@plt>
   28884:	mov	r2, #0
   28888:	add	r3, r4, r5
   2888c:	add	r3, r3, #1
   28890:	strb	r2, [r4, r5]
   28894:	ldrh	r2, [r6, #8]
   28898:	str	r3, [r7, #36]	; 0x24
   2889c:	cmp	r2, #4
   288a0:	addls	pc, pc, r2, lsl #2
   288a4:	b	288cc <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   288a8:	b	288e4 <__flatcc_fb_gen_c_json_printer@@Base+0x75c>
   288ac:	b	288e4 <__flatcc_fb_gen_c_json_printer@@Base+0x75c>
   288b0:	b	288cc <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   288b4:	b	288bc <__flatcc_fb_gen_c_json_printer@@Base+0x734>
   288b8:	b	288bc <__flatcc_fb_gen_c_json_printer@@Base+0x734>
   288bc:	ldr	r3, [r7, #32]
   288c0:	add	r2, r3, #8
   288c4:	stm	r3, {r6, r9}
   288c8:	str	r2, [r7, #32]
   288cc:	ldrd	r4, [sp]
   288d0:	ldrd	r6, [sp, #8]
   288d4:	ldrd	r8, [sp, #16]
   288d8:	ldr	sl, [sp, #24]
   288dc:	add	sp, sp, #28
   288e0:	pop	{pc}		; (ldr pc, [sp], #4)
   288e4:	ldr	r3, [r7, #28]
   288e8:	add	r2, r3, #8
   288ec:	stm	r3, {r6, r9}
   288f0:	str	r2, [r7, #28]
   288f4:	b	288cc <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   288f8:	sub	r2, r2, #2
   288fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28900:	mov	r4, r0
   28904:	strd	r6, [sp, #8]
   28908:	str	r8, [sp, #16]
   2890c:	str	lr, [sp, #20]
   28910:	cmp	r2, #13
   28914:	addls	pc, pc, r2, lsl #2
   28918:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   2891c:	b	28a3c <__flatcc_fb_gen_c_json_printer@@Base+0x8b4>
   28920:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28924:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28928:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   2892c:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28930:	b	28a4c <__flatcc_fb_gen_c_json_printer@@Base+0x8c4>
   28934:	b	28954 <__flatcc_fb_gen_c_json_printer@@Base+0x7cc>
   28938:	b	28af8 <__flatcc_fb_gen_c_json_printer@@Base+0x970>
   2893c:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28940:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28944:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28948:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   2894c:	b	28a78 <__flatcc_fb_gen_c_json_printer@@Base+0x8f0>
   28950:	b	28aa0 <__flatcc_fb_gen_c_json_printer@@Base+0x918>
   28954:	mvn	r6, #0
   28958:	sub	r1, r1, #1
   2895c:	cmp	r1, #10
   28960:	bhi	28aec <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   28964:	ldr	r3, [pc, #492]	; 28b58 <__flatcc_fb_gen_c_json_printer@@Base+0x9d0>
   28968:	mov	r5, #0
   2896c:	add	r3, pc, r3
   28970:	ldrsb	r7, [r3, r1]
   28974:	mov	r1, #3
   28978:	mov	r0, r4
   2897c:	bl	3a310 <flatcc_builder_start_table@@Base>
   28980:	cmp	r0, #0
   28984:	bne	28ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   28988:	cmn	r6, #1
   2898c:	beq	289b0 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   28990:	mov	r3, #4
   28994:	mov	r1, #2
   28998:	mov	r2, r3
   2899c:	mov	r0, r4
   289a0:	bl	3be44 <flatcc_builder_table_add@@Base>
   289a4:	cmp	r0, #0
   289a8:	beq	28ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   289ac:	str	r6, [r0]
   289b0:	cmp	r7, #0
   289b4:	beq	289d8 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   289b8:	mov	r3, #1
   289bc:	mov	r1, #0
   289c0:	mov	r2, r3
   289c4:	mov	r0, r4
   289c8:	bl	3be44 <flatcc_builder_table_add@@Base>
   289cc:	cmp	r0, #0
   289d0:	beq	28ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   289d4:	strb	r7, [r0]
   289d8:	cmp	r5, #0
   289dc:	beq	28a00 <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   289e0:	mov	r3, #1
   289e4:	mov	r0, r4
   289e8:	mov	r2, r3
   289ec:	mov	r1, r3
   289f0:	bl	3be44 <flatcc_builder_table_add@@Base>
   289f4:	cmp	r0, #0
   289f8:	beq	28ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   289fc:	strb	r5, [r0]
   28a00:	ldr	r5, [pc, #340]	; 28b5c <__flatcc_fb_gen_c_json_printer@@Base+0x9d4>
   28a04:	mov	r2, #0
   28a08:	mov	r0, r4
   28a0c:	add	r5, pc, r5
   28a10:	add	r1, r5, #12
   28a14:	bl	3ac48 <flatcc_builder_check_required@@Base>
   28a18:	cmp	r0, #0
   28a1c:	beq	28b3c <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   28a20:	mov	r0, r4
   28a24:	ldrd	r4, [sp]
   28a28:	ldrd	r6, [sp, #8]
   28a2c:	ldr	r8, [sp, #16]
   28a30:	ldr	lr, [sp, #20]
   28a34:	add	sp, sp, #24
   28a38:	b	3acf4 <flatcc_builder_end_table@@Base>
   28a3c:	mvn	r6, #0
   28a40:	mov	r7, #13
   28a44:	mov	r5, #0
   28a48:	b	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28a4c:	mvn	r6, #0
   28a50:	sub	r1, r1, #1
   28a54:	cmp	r1, #10
   28a58:	movhi	r5, #0
   28a5c:	movhi	r7, #14
   28a60:	bhi	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28a64:	ldr	r3, [pc, #244]	; 28b60 <__flatcc_fb_gen_c_json_printer@@Base+0x9d8>
   28a68:	mov	r7, #14
   28a6c:	add	r3, pc, r3
   28a70:	ldrsb	r5, [r3, r1]
   28a74:	b	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28a78:	ldrh	r3, [r1, #8]
   28a7c:	ldr	r6, [r1, #124]	; 0x7c
   28a80:	cmp	r3, #4
   28a84:	addls	pc, pc, r3, lsl #2
   28a88:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28a8c:	b	28b1c <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   28a90:	b	28b1c <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   28a94:	b	28ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   28a98:	b	28b28 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   28a9c:	b	28b14 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   28aa0:	ldrh	r3, [r1, #8]
   28aa4:	ldr	r6, [r1, #124]	; 0x7c
   28aa8:	cmp	r3, #1
   28aac:	bls	28b30 <__flatcc_fb_gen_c_json_printer@@Base+0x9a8>
   28ab0:	cmp	r3, #3
   28ab4:	bne	28aec <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   28ab8:	ldr	r1, [r1, #40]	; 0x28
   28abc:	b	28a50 <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   28ac0:	mov	r1, #3
   28ac4:	mov	r0, r4
   28ac8:	bl	3a310 <flatcc_builder_start_table@@Base>
   28acc:	cmp	r0, #0
   28ad0:	beq	28a00 <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   28ad4:	ldrd	r4, [sp]
   28ad8:	mov	r0, #0
   28adc:	ldrd	r6, [sp, #8]
   28ae0:	ldr	r8, [sp, #16]
   28ae4:	add	sp, sp, #20
   28ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   28aec:	mov	r5, #0
   28af0:	mov	r7, r5
   28af4:	b	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28af8:	mov	r1, #3
   28afc:	bl	3a310 <flatcc_builder_start_table@@Base>
   28b00:	cmp	r0, #0
   28b04:	bne	28ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   28b08:	mov	r5, #13
   28b0c:	mov	r7, #14
   28b10:	b	289b8 <__flatcc_fb_gen_c_json_printer@@Base+0x830>
   28b14:	mov	r7, #16
   28b18:	b	28a44 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   28b1c:	mov	r5, #0
   28b20:	mov	r7, #15
   28b24:	b	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28b28:	ldr	r1, [r1, #40]	; 0x28
   28b2c:	b	28958 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   28b30:	mov	r5, #15
   28b34:	mov	r7, #14
   28b38:	b	28974 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   28b3c:	ldr	r1, [pc, #32]	; 28b64 <__flatcc_fb_gen_c_json_printer@@Base+0x9dc>
   28b40:	add	r3, r5, #16
   28b44:	mov	r2, #23
   28b48:	ldr	r0, [pc, #24]	; 28b68 <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   28b4c:	add	r1, pc, r1
   28b50:	add	r0, pc, r0
   28b54:	bl	1400c <__assert_fail@plt>
   28b58:	andeq	lr, r2, ip, lsl #6
   28b5c:	andeq	lr, r2, ip, ror #4
   28b60:	andeq	lr, r2, ip, lsl #4
   28b64:	andeq	lr, r2, r0, asr r2
   28b68:	andeq	lr, r2, r4, asr #5
   28b6c:	ldrh	r3, [r1, #8]
   28b70:	cmp	r3, #4
   28b74:	bxhi	lr
   28b78:	strd	r4, [sp, #-16]!
   28b7c:	mov	r4, r0
   28b80:	mov	r5, r1
   28b84:	ldr	r0, [r0, #40]	; 0x28
   28b88:	ldr	r1, [r1, #16]
   28b8c:	str	r6, [sp, #8]
   28b90:	str	lr, [sp, #12]
   28b94:	add	r0, r0, #172	; 0xac
   28b98:	bl	2b21c <ptr_set_find_item@@Base>
   28b9c:	cmp	r0, #0
   28ba0:	beq	28c2c <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   28ba4:	ldr	ip, [r4]
   28ba8:	cmp	ip, #0
   28bac:	beq	28be0 <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   28bb0:	ldr	r3, [r5, #12]
   28bb4:	ldr	r3, [r3]
   28bb8:	cmp	r3, #0
   28bbc:	beq	28c58 <__flatcc_fb_gen_c_json_printer@@Base+0xad0>
   28bc0:	mov	ip, #0
   28bc4:	ldr	r2, [r3, #4]
   28bc8:	ldr	r3, [r3]
   28bcc:	ldr	r2, [r2, #4]
   28bd0:	cmp	r3, #0
   28bd4:	add	r2, r2, #1
   28bd8:	add	ip, ip, r2
   28bdc:	bne	28bc4 <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   28be0:	ldr	r3, [r5, #4]
   28be4:	ldr	r1, [r4, #12]
   28be8:	ldrh	r2, [r5, #8]
   28bec:	ldr	r3, [r3, #4]
   28bf0:	add	r3, r3, r1
   28bf4:	add	r3, r3, #1
   28bf8:	add	ip, r3, ip
   28bfc:	str	ip, [r4, #12]
   28c00:	cmp	r2, #4
   28c04:	addls	pc, pc, r2, lsl #2
   28c08:	b	28c2c <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   28c0c:	b	28c3c <__flatcc_fb_gen_c_json_printer@@Base+0xab4>
   28c10:	b	28c3c <__flatcc_fb_gen_c_json_printer@@Base+0xab4>
   28c14:	b	28c2c <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   28c18:	b	28c20 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   28c1c:	b	28c20 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   28c20:	ldr	r3, [r4, #8]
   28c24:	add	r3, r3, #1
   28c28:	str	r3, [r4, #8]
   28c2c:	ldrd	r4, [sp]
   28c30:	ldr	r6, [sp, #8]
   28c34:	add	sp, sp, #12
   28c38:	pop	{pc}		; (ldr pc, [sp], #4)
   28c3c:	ldr	r3, [r4, #4]
   28c40:	ldr	r6, [sp, #8]
   28c44:	add	r3, r3, #1
   28c48:	str	r3, [r4, #4]
   28c4c:	ldrd	r4, [sp]
   28c50:	add	sp, sp, #12
   28c54:	pop	{pc}		; (ldr pc, [sp], #4)
   28c58:	mov	ip, r3
   28c5c:	b	28be0 <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   28c60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28c64:	mov	ip, #0
   28c68:	mov	r5, r2
   28c6c:	strd	r6, [sp, #8]
   28c70:	strd	r8, [sp, #16]
   28c74:	strd	sl, [sp, #24]
   28c78:	mov	fp, r0
   28c7c:	str	lr, [sp, #32]
   28c80:	vpush	{d8}
   28c84:	sub	sp, sp, #116	; 0x74
   28c88:	ldr	r6, [r3, #60]	; 0x3c
   28c8c:	add	lr, sp, #68	; 0x44
   28c90:	mov	r2, lr
   28c94:	str	r3, [sp, #4]
   28c98:	str	r1, [sp, #68]	; 0x44
   28c9c:	ldr	r1, [pc, #3176]	; 2990c <__flatcc_fb_gen_c_json_printer@@Base+0x1784>
   28ca0:	str	lr, [sp, #20]
   28ca4:	mov	r0, r6
   28ca8:	str	ip, [sp, #72]	; 0x48
   28cac:	str	ip, [sp, #76]	; 0x4c
   28cb0:	str	ip, [sp, #80]	; 0x50
   28cb4:	add	r1, pc, r1
   28cb8:	str	ip, [sp, #84]	; 0x54
   28cbc:	str	ip, [sp, #88]	; 0x58
   28cc0:	str	ip, [sp, #92]	; 0x5c
   28cc4:	str	ip, [sp, #96]	; 0x60
   28cc8:	str	ip, [sp, #100]	; 0x64
   28ccc:	str	ip, [sp, #104]	; 0x68
   28cd0:	str	r3, [sp, #108]	; 0x6c
   28cd4:	bl	2ca60 <fb_scope_table_visit@@Base>
   28cd8:	ldr	r7, [sp, #72]	; 0x48
   28cdc:	mov	r1, #8
   28ce0:	mov	r0, r7
   28ce4:	bl	13e74 <calloc@plt>
   28ce8:	ldr	r8, [sp, #76]	; 0x4c
   28cec:	mov	r9, r0
   28cf0:	mov	r1, #8
   28cf4:	str	r0, [sp, #84]	; 0x54
   28cf8:	mov	r0, r8
   28cfc:	bl	13e74 <calloc@plt>
   28d00:	ldr	r4, [sp, #80]	; 0x50
   28d04:	mov	sl, r0
   28d08:	str	r0, [sp, #88]	; 0x58
   28d0c:	mov	r0, r4
   28d10:	bl	13f10 <malloc@plt>
   28d14:	cmp	r7, #0
   28d18:	str	r0, [sp, #92]	; 0x5c
   28d1c:	movle	r7, #0
   28d20:	movgt	r7, #1
   28d24:	str	r9, [sp, #96]	; 0x60
   28d28:	cmp	r9, #0
   28d2c:	str	sl, [sp, #100]	; 0x64
   28d30:	movne	r7, #0
   28d34:	str	r0, [sp, #104]	; 0x68
   28d38:	cmp	r7, #0
   28d3c:	bne	297dc <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   28d40:	cmp	r8, #0
   28d44:	movle	r8, #0
   28d48:	movgt	r8, #1
   28d4c:	cmp	sl, #0
   28d50:	movne	r8, #0
   28d54:	cmp	r8, #0
   28d58:	bne	297dc <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   28d5c:	adds	r4, r4, #0
   28d60:	movne	r4, #1
   28d64:	cmp	r0, #0
   28d68:	movne	r4, #0
   28d6c:	cmp	r4, #0
   28d70:	bne	297dc <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   28d74:	ldr	r1, [pc, #2964]	; 29910 <__flatcc_fb_gen_c_json_printer@@Base+0x1788>
   28d78:	mov	r0, r6
   28d7c:	ldr	r2, [sp, #20]
   28d80:	add	r1, pc, r1
   28d84:	bl	2ca60 <fb_scope_table_visit@@Base>
   28d88:	ldr	r1, [sp, #72]	; 0x48
   28d8c:	ldr	r0, [sp, #84]	; 0x54
   28d90:	bl	2877c <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   28d94:	ldr	r1, [sp, #76]	; 0x4c
   28d98:	ldr	r0, [sp, #88]	; 0x58
   28d9c:	bl	2877c <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   28da0:	ldr	r0, [sp, #72]	; 0x48
   28da4:	cmp	r0, #0
   28da8:	strle	r4, [sp]
   28dac:	bgt	297c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
   28db0:	ldr	r3, [r5]
   28db4:	cmp	r3, #0
   28db8:	bne	291d4 <__flatcc_fb_gen_c_json_printer@@Base+0x104c>
   28dbc:	ldr	r1, [pc, #2896]	; 29914 <__flatcc_fb_gen_c_json_printer@@Base+0x178c>
   28dc0:	mov	r2, r3
   28dc4:	mov	r0, fp
   28dc8:	add	r1, pc, r1
   28dcc:	bl	39338 <flatcc_builder_start_buffer@@Base>
   28dd0:	cmp	r0, #0
   28dd4:	bne	28de4 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   28dd8:	mov	r1, #5
   28ddc:	mov	r0, fp
   28de0:	bl	3a310 <flatcc_builder_start_table@@Base>
   28de4:	ldr	r3, [sp, #4]
   28de8:	ldrh	r4, [r3, #16]
   28dec:	cmp	r4, #2
   28df0:	beq	29820 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   28df4:	ldr	r3, [sp, #4]
   28df8:	ldrh	r3, [r3, #32]
   28dfc:	cmp	r3, #2
   28e00:	beq	297ec <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   28e04:	ldr	r3, [sp, #72]	; 0x48
   28e08:	ldr	r2, [sp, #84]	; 0x54
   28e0c:	cmp	r3, #0
   28e10:	str	r3, [sp, #16]
   28e14:	str	r2, [sp, #28]
   28e18:	ble	292a4 <__flatcc_fb_gen_c_json_printer@@Base+0x111c>
   28e1c:	ldr	r2, [sp]
   28e20:	mov	sl, #0
   28e24:	ldr	r3, [pc, #2796]	; 29918 <__flatcc_fb_gen_c_json_printer@@Base+0x1790>
   28e28:	str	sl, [sp, #8]
   28e2c:	sub	r2, r2, #4
   28e30:	str	r2, [sp, #24]
   28e34:	add	r3, pc, r3
   28e38:	ldr	r2, [sp, #28]
   28e3c:	add	r3, r3, #36	; 0x24
   28e40:	str	r3, [sp, #52]	; 0x34
   28e44:	add	r2, r2, #4
   28e48:	str	r2, [sp, #48]	; 0x30
   28e4c:	ldr	r2, [pc, #2760]	; 2991c <__flatcc_fb_gen_c_json_printer@@Base+0x1794>
   28e50:	add	r2, pc, r2
   28e54:	add	r3, r2, #12
   28e58:	str	r3, [sp, #56]	; 0x38
   28e5c:	str	r2, [sp, #60]	; 0x3c
   28e60:	ldr	r4, [sp, #8]
   28e64:	mov	r1, #5
   28e68:	mov	r0, fp
   28e6c:	ldr	r3, [sp, #28]
   28e70:	ldr	sl, [r3, r4, lsl #3]
   28e74:	bl	3a310 <flatcc_builder_start_table@@Base>
   28e78:	ldr	r3, [sp, #48]	; 0x30
   28e7c:	mov	r0, fp
   28e80:	ldr	r1, [r3, r4, lsl #3]
   28e84:	bl	3bc78 <flatcc_builder_create_string_str@@Base>
   28e88:	subs	r4, r0, #0
   28e8c:	beq	28ea4 <__flatcc_fb_gen_c_json_printer@@Base+0xd1c>
   28e90:	mov	r1, #0
   28e94:	mov	r0, fp
   28e98:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   28e9c:	cmp	r0, #0
   28ea0:	strne	r4, [r0]
   28ea4:	mov	r0, fp
   28ea8:	bl	3a0f0 <flatcc_builder_start_offset_vector@@Base>
   28eac:	ldr	r9, [sl, #20]
   28eb0:	cmp	r9, #0
   28eb4:	beq	291fc <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   28eb8:	ldr	r3, [pc, #2656]	; 29920 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   28ebc:	mov	r8, #0
   28ec0:	str	sl, [sp, #12]
   28ec4:	add	r3, pc, r3
   28ec8:	str	r3, [sp, #40]	; 0x28
   28ecc:	ldr	r3, [pc, #2640]	; 29924 <__flatcc_fb_gen_c_json_printer@@Base+0x179c>
   28ed0:	add	r3, pc, r3
   28ed4:	str	r3, [sp, #44]	; 0x2c
   28ed8:	b	28ff0 <__flatcc_fb_gen_c_json_printer@@Base+0xe68>
   28edc:	mov	r1, #9
   28ee0:	mov	r0, fp
   28ee4:	bl	3a310 <flatcc_builder_start_table@@Base>
   28ee8:	ldr	r3, [r9, #4]
   28eec:	mov	r0, fp
   28ef0:	ldm	r3, {r1, r2}
   28ef4:	bl	3bb60 <flatcc_builder_create_string@@Base>
   28ef8:	subs	r6, r0, #0
   28efc:	beq	28f14 <__flatcc_fb_gen_c_json_printer@@Base+0xd8c>
   28f00:	mov	r1, #0
   28f04:	mov	r0, fp
   28f08:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   28f0c:	cmp	r0, #0
   28f10:	strne	r6, [r0]
   28f14:	ldrh	r2, [r9, #24]
   28f18:	mov	r0, fp
   28f1c:	ldr	r1, [r9, #16]
   28f20:	bl	288f8 <__flatcc_fb_gen_c_json_printer@@Base+0x770>
   28f24:	subs	r6, r0, #0
   28f28:	beq	28f40 <__flatcc_fb_gen_c_json_printer@@Base+0xdb8>
   28f2c:	mov	r1, #1
   28f30:	mov	r0, fp
   28f34:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   28f38:	cmp	r0, #0
   28f3c:	strne	r6, [r0]
   28f40:	ldr	r3, [sp, #12]
   28f44:	ldrh	r3, [r3, #8]
   28f48:	cmp	r3, #0
   28f4c:	beq	2962c <__flatcc_fb_gen_c_json_printer@@Base+0x14a4>
   28f50:	cmp	r3, #1
   28f54:	bne	28f80 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   28f58:	ldrh	r5, [r9, #80]	; 0x50
   28f5c:	cmp	r5, #0
   28f60:	beq	28f80 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   28f64:	mov	r3, #2
   28f68:	mov	r1, #3
   28f6c:	mov	r2, r3
   28f70:	mov	r0, fp
   28f74:	bl	3be44 <flatcc_builder_table_add@@Base>
   28f78:	cmp	r0, #0
   28f7c:	strhne	r5, [r0]
   28f80:	ldr	r3, [sp, #32]
   28f84:	cmp	r3, #0
   28f88:	beq	28fac <__flatcc_fb_gen_c_json_printer@@Base+0xe24>
   28f8c:	mov	r3, #1
   28f90:	mov	r1, #6
   28f94:	mov	r2, r3
   28f98:	mov	r0, fp
   28f9c:	bl	3be44 <flatcc_builder_table_add@@Base>
   28fa0:	cmp	r0, #0
   28fa4:	ldrne	r3, [sp, #36]	; 0x24
   28fa8:	strbne	r3, [r0]
   28fac:	ldr	r3, [sp, #44]	; 0x2c
   28fb0:	mov	r2, #2
   28fb4:	mov	r0, fp
   28fb8:	add	r1, r3, #36	; 0x24
   28fbc:	bl	3ac48 <flatcc_builder_check_required@@Base>
   28fc0:	cmp	r0, #0
   28fc4:	beq	29850 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   28fc8:	mov	r0, fp
   28fcc:	bl	3acf4 <flatcc_builder_end_table@@Base>
   28fd0:	subs	r1, r0, #0
   28fd4:	beq	28fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xe58>
   28fd8:	mov	r0, fp
   28fdc:	bl	39a40 <flatcc_builder_offset_vector_push@@Base>
   28fe0:	ldr	r9, [r9]
   28fe4:	orr	r8, r8, r4
   28fe8:	cmp	r9, #0
   28fec:	beq	291f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1070>
   28ff0:	cmp	r8, #0
   28ff4:	ldrh	r5, [r9, #72]	; 0x48
   28ff8:	movne	r4, #0
   28ffc:	movne	sl, r4
   29000:	bne	29018 <__flatcc_fb_gen_c_json_printer@@Base+0xe90>
   29004:	tst	r5, #128	; 0x80
   29008:	movne	r4, #1
   2900c:	moveq	r4, r8
   29010:	moveq	sl, r8
   29014:	movne	sl, r4
   29018:	ldrh	r3, [r9, #24]
   2901c:	and	r2, r5, #4
   29020:	str	r2, [sp, #32]
   29024:	ubfx	r2, r5, #2, #1
   29028:	cmp	r3, #14
   2902c:	str	r2, [sp, #36]	; 0x24
   29030:	bne	28edc <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   29034:	ldr	r3, [r9, #16]
   29038:	ldrh	r3, [r3, #8]
   2903c:	cmp	r3, #4
   29040:	bne	28edc <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   29044:	mov	r1, #9
   29048:	mov	r0, fp
   2904c:	bl	3a310 <flatcc_builder_start_table@@Base>
   29050:	mov	r0, fp
   29054:	bl	3a16c <flatcc_builder_start_string@@Base>
   29058:	ldr	r3, [r9, #4]
   2905c:	mov	r0, fp
   29060:	ldm	r3, {r1, r2}
   29064:	bl	39ca8 <flatcc_builder_append_string@@Base>
   29068:	mov	r2, #5
   2906c:	mov	r0, fp
   29070:	ldr	r1, [sp, #40]	; 0x28
   29074:	bl	39ca8 <flatcc_builder_append_string@@Base>
   29078:	mov	r0, fp
   2907c:	bl	3bd00 <flatcc_builder_end_string@@Base>
   29080:	subs	r6, r0, #0
   29084:	beq	2909c <__flatcc_fb_gen_c_json_printer@@Base+0xf14>
   29088:	mov	r1, #0
   2908c:	mov	r0, fp
   29090:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29094:	cmp	r0, #0
   29098:	strne	r6, [r0]
   2909c:	mov	r1, #3
   290a0:	mov	r0, fp
   290a4:	bl	3a310 <flatcc_builder_start_table@@Base>
   290a8:	subs	r7, r0, #0
   290ac:	bne	29110 <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   290b0:	mov	r3, #1
   290b4:	mov	r1, r7
   290b8:	mov	r2, r3
   290bc:	mov	r0, fp
   290c0:	bl	3be44 <flatcc_builder_table_add@@Base>
   290c4:	subs	r3, r0, #0
   290c8:	beq	29110 <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   290cc:	mov	r6, #1
   290d0:	mov	r2, r7
   290d4:	ldr	r1, [sp, #56]	; 0x38
   290d8:	mov	r0, fp
   290dc:	strb	r6, [r3]
   290e0:	bl	3ac48 <flatcc_builder_check_required@@Base>
   290e4:	cmp	r0, #0
   290e8:	beq	298d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1748>
   290ec:	mov	r0, fp
   290f0:	bl	3acf4 <flatcc_builder_end_table@@Base>
   290f4:	subs	r7, r0, #0
   290f8:	beq	29110 <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   290fc:	mov	r1, r6
   29100:	mov	r0, fp
   29104:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29108:	cmp	r0, #0
   2910c:	strne	r7, [r0]
   29110:	ldrh	r6, [r9, #96]	; 0x60
   29114:	add	r7, r6, #1
   29118:	lsl	r7, r7, #1
   2911c:	uxth	r7, r7
   29120:	cmp	r7, #0
   29124:	beq	29148 <__flatcc_fb_gen_c_json_printer@@Base+0xfc0>
   29128:	mov	r3, #2
   2912c:	mov	r1, #3
   29130:	mov	r2, r3
   29134:	mov	r0, fp
   29138:	bl	3be44 <flatcc_builder_table_add@@Base>
   2913c:	cmp	r0, #0
   29140:	ldrh	r6, [r9, #96]	; 0x60
   29144:	strhne	r7, [r0]
   29148:	sub	r6, r6, #1
   2914c:	uxth	r6, r6
   29150:	cmp	r6, #0
   29154:	beq	29174 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   29158:	mov	r3, #2
   2915c:	mov	r0, fp
   29160:	mov	r2, r3
   29164:	mov	r1, r3
   29168:	bl	3be44 <flatcc_builder_table_add@@Base>
   2916c:	cmp	r0, #0
   29170:	strhne	r6, [r0]
   29174:	and	r3, r5, #4
   29178:	cmp	r3, #0
   2917c:	beq	291a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   29180:	mov	r3, #1
   29184:	mov	r1, #6
   29188:	mov	r2, r3
   2918c:	mov	r0, fp
   29190:	bl	3be44 <flatcc_builder_table_add@@Base>
   29194:	cmp	r0, #0
   29198:	ubfxne	r3, r5, #2, #1
   2919c:	strbne	r3, [r0]
   291a0:	mov	r2, #2
   291a4:	mov	r0, fp
   291a8:	ldr	r1, [sp, #52]	; 0x34
   291ac:	bl	3ac48 <flatcc_builder_check_required@@Base>
   291b0:	cmp	r0, #0
   291b4:	beq	29850 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   291b8:	mov	r0, fp
   291bc:	bl	3acf4 <flatcc_builder_end_table@@Base>
   291c0:	subs	r1, r0, #0
   291c4:	beq	28edc <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   291c8:	mov	r0, fp
   291cc:	bl	39a40 <flatcc_builder_offset_vector_push@@Base>
   291d0:	b	28edc <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   291d4:	ldr	r1, [pc, #1868]	; 29928 <__flatcc_fb_gen_c_json_printer@@Base+0x17a0>
   291d8:	mov	r3, #2
   291dc:	mov	r2, #0
   291e0:	mov	r0, fp
   291e4:	add	r1, pc, r1
   291e8:	bl	39338 <flatcc_builder_start_buffer@@Base>
   291ec:	cmp	r0, #0
   291f0:	beq	28dd8 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   291f4:	b	28de4 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   291f8:	ldr	sl, [sp, #12]
   291fc:	mov	r0, fp
   29200:	bl	3b178 <flatcc_builder_end_offset_vector@@Base>
   29204:	subs	r4, r0, #0
   29208:	beq	29220 <__flatcc_fb_gen_c_json_printer@@Base+0x1098>
   2920c:	mov	r1, #1
   29210:	mov	r0, fp
   29214:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29218:	cmp	r0, #0
   2921c:	strne	r4, [r0]
   29220:	ldrh	r3, [sl, #8]
   29224:	cmp	r3, #1
   29228:	beq	2977c <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   2922c:	ldrh	r4, [sl, #104]	; 0x68
   29230:	cmp	r4, #0
   29234:	beq	29254 <__flatcc_fb_gen_c_json_printer@@Base+0x10cc>
   29238:	mov	r3, #4
   2923c:	mov	r1, #3
   29240:	mov	r2, r3
   29244:	mov	r0, fp
   29248:	bl	3be44 <flatcc_builder_table_add@@Base>
   2924c:	cmp	r0, #0
   29250:	strne	r4, [r0]
   29254:	ldr	r4, [pc, #1744]	; 2992c <__flatcc_fb_gen_c_json_printer@@Base+0x17a4>
   29258:	mov	r2, #2
   2925c:	mov	r0, fp
   29260:	add	r4, pc, r4
   29264:	add	r1, r4, #68	; 0x44
   29268:	bl	3ac48 <flatcc_builder_check_required@@Base>
   2926c:	cmp	r0, #0
   29270:	beq	29894 <__flatcc_fb_gen_c_json_printer@@Base+0x170c>
   29274:	ldr	r3, [sp, #8]
   29278:	mov	r0, fp
   2927c:	add	r3, r3, #1
   29280:	mov	r4, r3
   29284:	str	r3, [sp, #8]
   29288:	bl	3acf4 <flatcc_builder_end_table@@Base>
   2928c:	ldr	r2, [sp, #16]
   29290:	ldr	r3, [sp, #24]
   29294:	cmp	r2, r4
   29298:	str	r0, [r3, #4]!
   2929c:	str	r3, [sp, #24]
   292a0:	bne	28e60 <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   292a4:	mov	r0, fp
   292a8:	ldr	r1, [sp]
   292ac:	ldr	r2, [sp, #16]
   292b0:	bl	3b264 <flatcc_builder_create_offset_vector@@Base>
   292b4:	subs	r4, r0, #0
   292b8:	beq	292d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1148>
   292bc:	mov	r1, #0
   292c0:	mov	r0, fp
   292c4:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   292c8:	cmp	r0, #0
   292cc:	strne	r4, [r0]
   292d0:	ldr	sl, [sp, #76]	; 0x4c
   292d4:	mov	r0, fp
   292d8:	ldr	r3, [sp, #88]	; 0x58
   292dc:	str	r3, [sp, #8]
   292e0:	bl	3a0f0 <flatcc_builder_start_offset_vector@@Base>
   292e4:	cmp	sl, #0
   292e8:	ble	29550 <__flatcc_fb_gen_c_json_printer@@Base+0x13c8>
   292ec:	ldr	r2, [sp, #8]
   292f0:	mov	r5, #0
   292f4:	ldr	r3, [pc, #1588]	; 29930 <__flatcc_fb_gen_c_json_printer@@Base+0x17a8>
   292f8:	add	r2, r2, #4
   292fc:	str	r2, [sp, #16]
   29300:	add	r3, pc, r3
   29304:	ldr	r2, [pc, #1576]	; 29934 <__flatcc_fb_gen_c_json_printer@@Base+0x17ac>
   29308:	str	r3, [sp, #28]
   2930c:	add	r3, r3, #100	; 0x64
   29310:	str	r3, [sp, #24]
   29314:	add	r2, pc, r2
   29318:	str	r2, [sp, #12]
   2931c:	ldr	r3, [sp, #8]
   29320:	mov	r1, #4
   29324:	mov	r0, fp
   29328:	ldr	r8, [r3, r5, lsl #3]
   2932c:	ldrh	r9, [r8, #8]
   29330:	bl	3a310 <flatcc_builder_start_table@@Base>
   29334:	ldr	r3, [sp, #16]
   29338:	mov	r0, fp
   2933c:	ldr	r1, [r3, r5, lsl #3]
   29340:	bl	3bc78 <flatcc_builder_create_string_str@@Base>
   29344:	subs	r4, r0, #0
   29348:	beq	29360 <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   2934c:	mov	r1, #0
   29350:	mov	r0, fp
   29354:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29358:	cmp	r0, #0
   2935c:	strne	r4, [r0]
   29360:	mov	r0, fp
   29364:	bl	3a0f0 <flatcc_builder_start_offset_vector@@Base>
   29368:	ldr	r4, [r8, #20]
   2936c:	cmp	r4, #0
   29370:	bne	29410 <__flatcc_fb_gen_c_json_printer@@Base+0x1288>
   29374:	b	29498 <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   29378:	bl	3a310 <flatcc_builder_start_table@@Base>
   2937c:	ldr	r3, [r4, #4]
   29380:	mov	r0, fp
   29384:	ldm	r3, {r1, r2}
   29388:	bl	3bb60 <flatcc_builder_create_string@@Base>
   2938c:	subs	r6, r0, #0
   29390:	beq	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   29394:	mov	r1, #0
   29398:	mov	r0, fp
   2939c:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   293a0:	cmp	r0, #0
   293a4:	beq	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   293a8:	str	r6, [r0]
   293ac:	ldrd	r6, [r4, #48]	; 0x30
   293b0:	orrs	r3, r6, r7
   293b4:	beq	293d4 <__flatcc_fb_gen_c_json_printer@@Base+0x124c>
   293b8:	mov	r3, #8
   293bc:	mov	r1, #1
   293c0:	mov	r2, r3
   293c4:	mov	r0, fp
   293c8:	bl	3be44 <flatcc_builder_table_add@@Base>
   293cc:	cmp	r0, #0
   293d0:	strdne	r6, [r0]
   293d4:	mov	r2, #1
   293d8:	mov	r0, fp
   293dc:	ldr	r1, [sp, #24]
   293e0:	bl	3ac48 <flatcc_builder_check_required@@Base>
   293e4:	cmp	r0, #0
   293e8:	beq	29874 <__flatcc_fb_gen_c_json_printer@@Base+0x16ec>
   293ec:	mov	r0, fp
   293f0:	bl	3acf4 <flatcc_builder_end_table@@Base>
   293f4:	subs	r1, r0, #0
   293f8:	beq	29404 <__flatcc_fb_gen_c_json_printer@@Base+0x127c>
   293fc:	mov	r0, fp
   29400:	bl	39a40 <flatcc_builder_offset_vector_push@@Base>
   29404:	ldr	r4, [r4]
   29408:	cmp	r4, #0
   2940c:	beq	29498 <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   29410:	cmp	r9, #4
   29414:	mov	r1, #3
   29418:	mov	r0, fp
   2941c:	bne	29378 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   29420:	bl	3a310 <flatcc_builder_start_table@@Base>
   29424:	ldr	r3, [r4, #4]
   29428:	mov	r0, fp
   2942c:	ldm	r3, {r1, r2}
   29430:	bl	3bb60 <flatcc_builder_create_string@@Base>
   29434:	subs	r6, r0, #0
   29438:	beq	29450 <__flatcc_fb_gen_c_json_printer@@Base+0x12c8>
   2943c:	mov	r1, #0
   29440:	mov	r0, fp
   29444:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29448:	cmp	r0, #0
   2944c:	strne	r6, [r0]
   29450:	ldr	r3, [sp]
   29454:	cmp	r3, #0
   29458:	beq	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2945c:	ldrh	r3, [r4, #24]
   29460:	cmp	r3, #14
   29464:	bne	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   29468:	ldr	r3, [r4, #16]
   2946c:	ldr	r2, [sp]
   29470:	ldr	r3, [r3, #124]	; 0x7c
   29474:	ldr	r6, [r2, r3, lsl #2]
   29478:	cmp	r6, #0
   2947c:	beq	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   29480:	mov	r1, #2
   29484:	mov	r0, fp
   29488:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   2948c:	cmp	r0, #0
   29490:	bne	293a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
   29494:	b	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   29498:	mov	r0, fp
   2949c:	bl	3b178 <flatcc_builder_end_offset_vector@@Base>
   294a0:	subs	r4, r0, #0
   294a4:	beq	294bc <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   294a8:	mov	r1, #1
   294ac:	mov	r0, fp
   294b0:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   294b4:	cmp	r0, #0
   294b8:	strne	r4, [r0]
   294bc:	cmp	r9, #4
   294c0:	bne	294e4 <__flatcc_fb_gen_c_json_printer@@Base+0x135c>
   294c4:	mov	r3, #1
   294c8:	mov	r1, #2
   294cc:	mov	r2, r3
   294d0:	mov	r0, fp
   294d4:	bl	3be44 <flatcc_builder_table_add@@Base>
   294d8:	cmp	r0, #0
   294dc:	movne	r3, #1
   294e0:	strbne	r3, [r0]
   294e4:	ldrh	r2, [r8, #48]	; 0x30
   294e8:	mov	r0, fp
   294ec:	ldr	r1, [r8, #40]	; 0x28
   294f0:	bl	288f8 <__flatcc_fb_gen_c_json_printer@@Base+0x770>
   294f4:	subs	r4, r0, #0
   294f8:	beq	29510 <__flatcc_fb_gen_c_json_printer@@Base+0x1388>
   294fc:	mov	r1, #3
   29500:	mov	r0, fp
   29504:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29508:	cmp	r0, #0
   2950c:	strne	r4, [r0]
   29510:	ldr	r3, [sp, #12]
   29514:	mov	r2, #3
   29518:	mov	r0, fp
   2951c:	add	r1, r3, #128	; 0x80
   29520:	bl	3ac48 <flatcc_builder_check_required@@Base>
   29524:	cmp	r0, #0
   29528:	beq	298b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   2952c:	mov	r0, fp
   29530:	bl	3acf4 <flatcc_builder_end_table@@Base>
   29534:	subs	r1, r0, #0
   29538:	beq	29544 <__flatcc_fb_gen_c_json_printer@@Base+0x13bc>
   2953c:	mov	r0, fp
   29540:	bl	39a40 <flatcc_builder_offset_vector_push@@Base>
   29544:	add	r5, r5, #1
   29548:	cmp	sl, r5
   2954c:	bne	2931c <__flatcc_fb_gen_c_json_printer@@Base+0x1194>
   29550:	mov	r0, fp
   29554:	bl	3b178 <flatcc_builder_end_offset_vector@@Base>
   29558:	subs	r4, r0, #0
   2955c:	beq	29574 <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   29560:	mov	r1, #1
   29564:	mov	r0, fp
   29568:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   2956c:	cmp	r0, #0
   29570:	strne	r4, [r0]
   29574:	ldr	r3, [sp, #4]
   29578:	ldr	r3, [r3, #52]	; 0x34
   2957c:	cmp	r3, #0
   29580:	beq	295b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   29584:	ldrh	r2, [r3, #8]
   29588:	cmp	r2, #0
   2958c:	bne	295b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   29590:	ldr	r2, [sp]
   29594:	ldr	r3, [r3, #124]	; 0x7c
   29598:	ldr	r4, [r2, r3, lsl #2]
   2959c:	cmp	r4, #0
   295a0:	beq	295b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   295a4:	mov	r1, #4
   295a8:	mov	r0, fp
   295ac:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   295b0:	cmp	r0, #0
   295b4:	strne	r4, [r0]
   295b8:	ldr	r4, [pc, #888]	; 29938 <__flatcc_fb_gen_c_json_printer@@Base+0x17b0>
   295bc:	mov	r2, #2
   295c0:	mov	r0, fp
   295c4:	add	r4, pc, r4
   295c8:	add	r1, r4, #156	; 0x9c
   295cc:	bl	3ac48 <flatcc_builder_check_required@@Base>
   295d0:	cmp	r0, #0
   295d4:	beq	298f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1768>
   295d8:	mov	r0, fp
   295dc:	bl	3acf4 <flatcc_builder_end_table@@Base>
   295e0:	mov	r1, r0
   295e4:	mov	r0, fp
   295e8:	bl	39414 <flatcc_builder_end_buffer@@Base>
   295ec:	ldr	r0, [sp, #20]
   295f0:	bl	286cc <__flatcc_fb_gen_c_json_printer@@Base+0x544>
   295f4:	ldr	r3, [sp]
   295f8:	cmp	r3, #0
   295fc:	beq	29608 <__flatcc_fb_gen_c_json_printer@@Base+0x1480>
   29600:	mov	r0, r3
   29604:	bl	13ea4 <free@plt>
   29608:	mov	r0, #0
   2960c:	add	sp, sp, #116	; 0x74
   29610:	vpop	{d8}
   29614:	ldrd	r4, [sp]
   29618:	ldrd	r6, [sp, #8]
   2961c:	ldrd	r8, [sp, #16]
   29620:	ldrd	sl, [sp, #24]
   29624:	add	sp, sp, #32
   29628:	pop	{pc}		; (ldr pc, [sp], #4)
   2962c:	ldrh	r3, [r9, #56]	; 0x38
   29630:	sub	r3, r3, #3
   29634:	cmp	r3, #3
   29638:	addls	pc, pc, r3, lsl #2
   2963c:	b	2967c <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   29640:	b	29720 <__flatcc_fb_gen_c_json_printer@@Base+0x1598>
   29644:	b	29718 <__flatcc_fb_gen_c_json_printer@@Base+0x1590>
   29648:	b	29718 <__flatcc_fb_gen_c_json_printer@@Base+0x1590>
   2964c:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x14c8>
   29650:	ldrb	r6, [r9, #48]	; 0x30
   29654:	mov	r7, #0
   29658:	orrs	r3, r6, r7
   2965c:	beq	2967c <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   29660:	mov	r3, #8
   29664:	mov	r1, #4
   29668:	mov	r2, r3
   2966c:	mov	r0, fp
   29670:	bl	3be44 <flatcc_builder_table_add@@Base>
   29674:	cmp	r0, #0
   29678:	strdne	r6, [r0]
   2967c:	ldrh	r6, [r9, #96]	; 0x60
   29680:	cmp	r6, #0
   29684:	moveq	r6, #4
   29688:	beq	2975c <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   2968c:	mov	r3, #2
   29690:	mov	r0, fp
   29694:	mov	r2, r3
   29698:	mov	r1, r3
   2969c:	bl	3be44 <flatcc_builder_table_add@@Base>
   296a0:	cmp	r0, #0
   296a4:	strhne	r6, [r0]
   296a8:	ldrh	r6, [r9, #96]	; 0x60
   296ac:	add	r6, r6, #2
   296b0:	lsl	r6, r6, #1
   296b4:	uxth	r6, r6
   296b8:	cmp	r6, #0
   296bc:	bne	2975c <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   296c0:	cmp	sl, #0
   296c4:	beq	296e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1560>
   296c8:	mov	r3, #1
   296cc:	mov	r1, #8
   296d0:	mov	r2, r3
   296d4:	mov	r0, fp
   296d8:	bl	3be44 <flatcc_builder_table_add@@Base>
   296dc:	cmp	r0, #0
   296e0:	movne	r3, #1
   296e4:	strbne	r3, [r0]
   296e8:	tst	r5, #256	; 0x100
   296ec:	beq	28f80 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   296f0:	mov	r3, #1
   296f4:	mov	r1, #7
   296f8:	mov	r2, r3
   296fc:	mov	r0, fp
   29700:	bl	3be44 <flatcc_builder_table_add@@Base>
   29704:	cmp	r0, #0
   29708:	beq	28f80 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   2970c:	mov	r3, #1
   29710:	strb	r3, [r0]
   29714:	b	28f80 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   29718:	ldrd	r6, [r9, #48]	; 0x30
   2971c:	b	29658 <__flatcc_fb_gen_c_json_printer@@Base+0x14d0>
   29720:	vldr	d8, [r9, #48]	; 0x30
   29724:	vcmp.f64	d8, #0.0
   29728:	vmrs	APSR_nzcv, fpscr
   2972c:	beq	2967c <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   29730:	mov	r3, #8
   29734:	mov	r1, #5
   29738:	mov	r2, r3
   2973c:	mov	r0, fp
   29740:	bl	3be44 <flatcc_builder_table_add@@Base>
   29744:	ldrh	r6, [r9, #96]	; 0x60
   29748:	cmp	r0, #0
   2974c:	vstrne	d8, [r0]
   29750:	cmp	r6, #0
   29754:	moveq	r6, #4
   29758:	bne	2968c <__flatcc_fb_gen_c_json_printer@@Base+0x1504>
   2975c:	mov	r3, #2
   29760:	mov	r1, #3
   29764:	mov	r2, r3
   29768:	mov	r0, fp
   2976c:	bl	3be44 <flatcc_builder_table_add@@Base>
   29770:	cmp	r0, #0
   29774:	strhne	r6, [r0]
   29778:	b	296c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1538>
   2977c:	ldr	r4, [sl, #112]	; 0x70
   29780:	cmp	r4, #0
   29784:	beq	297a4 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   29788:	mov	r3, #4
   2978c:	mov	r0, fp
   29790:	mov	r2, r3
   29794:	mov	r1, r3
   29798:	bl	3be44 <flatcc_builder_table_add@@Base>
   2979c:	cmp	r0, #0
   297a0:	strne	r4, [r0]
   297a4:	mov	r3, #1
   297a8:	mov	r1, #2
   297ac:	mov	r2, r3
   297b0:	mov	r0, fp
   297b4:	bl	3be44 <flatcc_builder_table_add@@Base>
   297b8:	cmp	r0, #0
   297bc:	movne	r3, #1
   297c0:	strbne	r3, [r0]
   297c4:	b	2922c <__flatcc_fb_gen_c_json_printer@@Base+0x10a4>
   297c8:	lsl	r0, r0, #2
   297cc:	bl	13f10 <malloc@plt>
   297d0:	subs	r3, r0, #0
   297d4:	str	r3, [sp]
   297d8:	bne	28db0 <__flatcc_fb_gen_c_json_printer@@Base+0xc28>
   297dc:	ldr	r0, [sp, #20]
   297e0:	bl	286cc <__flatcc_fb_gen_c_json_printer@@Base+0x544>
   297e4:	mvn	r0, #0
   297e8:	b	2960c <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   297ec:	ldr	r3, [sp, #4]
   297f0:	mov	r0, fp
   297f4:	ldr	r1, [r3, #24]
   297f8:	ldr	r2, [r3, #28]
   297fc:	bl	3bb60 <flatcc_builder_create_string@@Base>
   29800:	subs	r4, r0, #0
   29804:	beq	28e04 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   29808:	mov	r1, #3
   2980c:	mov	r0, fp
   29810:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29814:	cmp	r0, #0
   29818:	strne	r4, [r0]
   2981c:	b	28e04 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   29820:	mov	r0, fp
   29824:	ldr	r1, [r3, #8]
   29828:	ldr	r2, [r3, #12]
   2982c:	bl	3bb60 <flatcc_builder_create_string@@Base>
   29830:	subs	r5, r0, #0
   29834:	beq	28df4 <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
   29838:	mov	r1, r4
   2983c:	mov	r0, fp
   29840:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   29844:	cmp	r0, #0
   29848:	strne	r5, [r0]
   2984c:	b	28df4 <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
   29850:	ldr	r3, [pc, #228]	; 2993c <__flatcc_fb_gen_c_json_printer@@Base+0x17b4>
   29854:	mov	r2, #29
   29858:	ldr	r1, [pc, #224]	; 29940 <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   2985c:	ldr	r0, [pc, #224]	; 29944 <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   29860:	add	r3, pc, r3
   29864:	add	r3, r3, #44	; 0x2c
   29868:	add	r1, pc, r1
   2986c:	add	r0, pc, r0
   29870:	bl	1400c <__assert_fail@plt>
   29874:	ldr	r1, [pc, #204]	; 29948 <__flatcc_fb_gen_c_json_printer@@Base+0x17c0>
   29878:	mov	r2, #25
   2987c:	ldr	r0, [pc, #200]	; 2994c <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   29880:	ldr	r3, [sp, #28]
   29884:	add	r1, pc, r1
   29888:	add	r0, pc, r0
   2988c:	add	r3, r3, #104	; 0x68
   29890:	bl	1400c <__assert_fail@plt>
   29894:	ldr	r1, [pc, #180]	; 29950 <__flatcc_fb_gen_c_json_printer@@Base+0x17c8>
   29898:	add	r3, r4, #76	; 0x4c
   2989c:	mov	r2, #31
   298a0:	ldr	r0, [pc, #172]	; 29954 <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
   298a4:	add	r1, pc, r1
   298a8:	add	r0, pc, r0
   298ac:	bl	1400c <__assert_fail@plt>
   298b0:	ldr	r1, [pc, #160]	; 29958 <__flatcc_fb_gen_c_json_printer@@Base+0x17d0>
   298b4:	mov	r2, #27
   298b8:	ldr	r0, [pc, #156]	; 2995c <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   298bc:	ldr	r3, [sp, #12]
   298c0:	add	r1, pc, r1
   298c4:	add	r0, pc, r0
   298c8:	add	r3, r3, #136	; 0x88
   298cc:	bl	1400c <__assert_fail@plt>
   298d0:	ldr	r1, [pc, #136]	; 29960 <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   298d4:	mov	r2, #23
   298d8:	ldr	r0, [pc, #132]	; 29964 <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   298dc:	ldr	r3, [sp, #60]	; 0x3c
   298e0:	add	r1, pc, r1
   298e4:	add	r0, pc, r0
   298e8:	add	r3, r3, #16
   298ec:	bl	1400c <__assert_fail@plt>
   298f0:	ldr	r1, [pc, #112]	; 29968 <__flatcc_fb_gen_c_json_printer@@Base+0x17e0>
   298f4:	add	r3, r4, #164	; 0xa4
   298f8:	mov	r2, #33	; 0x21
   298fc:	ldr	r0, [pc, #104]	; 2996c <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   29900:	add	r1, pc, r1
   29904:	add	r0, pc, r0
   29908:	bl	1400c <__assert_fail@plt>
   2990c:			; <UNDEFINED> instruction: 0xfffffaa4
   29910:			; <UNDEFINED> instruction: 0xfffff9bc
   29914:	ldrdeq	lr, [r2], -ip
   29918:	andeq	sp, r2, r4, asr #28
   2991c:	andeq	sp, r2, r8, lsr #28
   29920:	andeq	lr, r2, r0, asr #27
   29924:	andeq	sp, r2, r8, lsr #27
   29928:	andeq	sp, r2, r0, asr #25
   2992c:	andeq	sp, r2, r8, lsl sl
   29930:	andeq	sp, r2, r8, ror r9
   29934:	andeq	sp, r2, r4, ror #18
   29938:			; <UNDEFINED> instruction: 0x0002d6b4
   2993c:	andeq	sp, r2, r8, lsl r4
   29940:	andeq	sp, r2, r4, lsr r5
   29944:	andeq	sp, r2, r0, asr #12
   29948:	andeq	sp, r2, r8, lsl r5
   2994c:	andeq	sp, r2, r8, asr #14
   29950:	strdeq	sp, [r2], -r8
   29954:	muleq	r2, r4, r6
   29958:	ldrdeq	sp, [r2], -ip
   2995c:	andeq	sp, r2, r4, lsr #15
   29960:			; <UNDEFINED> instruction: 0x0002d4bc
   29964:	andeq	sp, r2, r0, lsr r5
   29968:	muleq	r2, ip, r4
   2996c:	strdeq	sp, [r2], -r4
   29970:	cmp	r0, #0
   29974:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29978:	strd	r6, [sp, #8]
   2997c:	strd	r8, [sp, #16]
   29980:	strd	sl, [sp, #24]
   29984:	str	lr, [sp, #32]
   29988:	sub	sp, sp, #36	; 0x24
   2998c:	beq	299a4 <__flatcc_fb_gen_c_json_printer@@Base+0x181c>
   29990:	ldr	r2, [r0, #4]
   29994:	movw	r3, #17986	; 0x4642
   29998:	movt	r3, #21314	; 0x5342
   2999c:	cmp	r2, r3
   299a0:	beq	299c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   299a4:	ldr	r3, [pc, #1736]	; 2a074 <__flatcc_fb_gen_c_json_printer@@Base+0x1eec>
   299a8:	mov	r2, #237	; 0xed
   299ac:	ldr	r1, [pc, #1732]	; 2a078 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef0>
   299b0:	ldr	r0, [pc, #1732]	; 2a07c <__flatcc_fb_gen_c_json_printer@@Base+0x1ef4>
   299b4:	add	r3, pc, r3
   299b8:	add	r3, r3, #188	; 0xbc
   299bc:	add	r1, pc, r1
   299c0:	add	r0, pc, r0
   299c4:	bl	1400c <__assert_fail@plt>
   299c8:	ldr	r2, [r0]
   299cc:	adds	r3, r0, r2
   299d0:	beq	299a4 <__flatcc_fb_gen_c_json_printer@@Base+0x181c>
   299d4:	ldr	r2, [r0, r2]
   299d8:	sub	r2, r3, r2
   299dc:	ldrh	r1, [r2]
   299e0:	cmp	r1, #5
   299e4:	bls	2a050 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   299e8:	ldrh	r1, [r2, #4]
   299ec:	cmp	r1, #0
   299f0:	beq	2a050 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   299f4:	ldr	r2, [r3, r1]
   299f8:	add	r3, r3, r1
   299fc:	add	r2, r2, #4
   29a00:	adds	r0, r3, r2
   29a04:	str	r0, [sp, #24]
   29a08:	beq	29fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   29a0c:	ldr	r1, [r0, #-4]
   29a10:	cmp	r1, #0
   29a14:	beq	29fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   29a18:	ldr	r3, [r3, r2]
   29a1c:	adds	r2, r0, r3
   29a20:	beq	2a02c <__flatcc_fb_gen_c_json_printer@@Base+0x1ea4>
   29a24:	ldr	r3, [r0, r3]
   29a28:	sub	r3, r2, r3
   29a2c:	ldrh	r0, [r3]
   29a30:	cmp	r0, #7
   29a34:	bls	29f44 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   29a38:	ldrh	r3, [r3, #6]
   29a3c:	cmp	r3, #0
   29a40:	movne	r0, #0
   29a44:	strne	r0, [sp, #20]
   29a48:	beq	29f44 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   29a4c:	ldr	r0, [r2, r3]
   29a50:	add	r2, r2, r3
   29a54:	add	r3, r0, #4
   29a58:	adds	fp, r2, r3
   29a5c:	beq	29ef8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d70>
   29a60:	ldr	r3, [fp, #-4]
   29a64:	cmp	r3, #0
   29a68:	str	r3, [sp, #28]
   29a6c:	beq	29ef8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d70>
   29a70:	lsr	r2, r3, #1
   29a74:	sub	sl, r3, #1
   29a78:	mov	r3, r2
   29a7c:	lsl	r2, r2, #1
   29a80:	str	sl, [sp, #4]
   29a84:	mov	sl, r3
   29a88:	str	r2, [sp, #8]
   29a8c:	ldr	r3, [sp, #4]
   29a90:	ldr	r2, [sp, #8]
   29a94:	cmp	r3, r2
   29a98:	bcc	29c98 <__flatcc_fb_gen_c_json_printer@@Base+0x1b10>
   29a9c:	mov	r7, sl
   29aa0:	str	sl, [sp, #16]
   29aa4:	ldr	r4, [sp, #8]
   29aa8:	b	29b04 <__flatcc_fb_gen_c_json_printer@@Base+0x197c>
   29aac:	ldr	r8, [r0, #-4]
   29ab0:	str	r3, [sp, #12]
   29ab4:	cmp	r9, r8
   29ab8:	movcc	r2, r9
   29abc:	movcs	r2, r8
   29ac0:	bl	13ff4 <strncmp@plt>
   29ac4:	cmp	r0, #0
   29ac8:	ldr	r3, [sp, #12]
   29acc:	beq	29c8c <__flatcc_fb_gen_c_json_printer@@Base+0x1b04>
   29ad0:	bge	29c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   29ad4:	ldr	r0, [sp, #4]
   29ad8:	sub	r2, r7, r4
   29adc:	lsl	r1, r4, #1
   29ae0:	lsl	r2, r2, #2
   29ae4:	mov	r7, r4
   29ae8:	sub	r6, r6, r2
   29aec:	add	r5, r5, r2
   29af0:	cmp	r0, r1
   29af4:	str	r6, [fp, r3]
   29af8:	str	r5, [fp, sl]
   29afc:	bcc	29c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   29b00:	mov	r4, r1
   29b04:	ldr	r3, [sp, #4]
   29b08:	ldr	r6, [fp, #-4]
   29b0c:	cmp	r3, r4
   29b10:	bls	29be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   29b14:	lsl	r3, r4, #2
   29b18:	cmp	r6, r4
   29b1c:	add	r0, fp, r3
   29b20:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29b24:	ldr	r1, [fp, r4, lsl #2]
   29b28:	adds	r2, r0, r1
   29b2c:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29b30:	ldr	r1, [r0, r1]
   29b34:	sub	r1, r2, r1
   29b38:	ldrh	r0, [r1]
   29b3c:	cmp	r0, #5
   29b40:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29b44:	ldrh	r1, [r1, #4]
   29b48:	cmp	r1, #0
   29b4c:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29b50:	ldr	r0, [r2, r1]
   29b54:	add	r8, r4, #1
   29b58:	add	r3, r3, #4
   29b5c:	add	r2, r2, r1
   29b60:	cmp	r8, r6
   29b64:	add	ip, fp, r3
   29b68:	add	r0, r0, #4
   29b6c:	add	r0, r2, r0
   29b70:	bcs	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29b74:	ldr	r3, [fp, r3]
   29b78:	adds	r1, ip, r3
   29b7c:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29b80:	ldr	r3, [ip, r3]
   29b84:	sub	r3, r1, r3
   29b88:	ldrh	r2, [r3]
   29b8c:	cmp	r2, #5
   29b90:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29b94:	ldrh	r2, [r3, #4]
   29b98:	cmp	r2, #0
   29b9c:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29ba0:	ldr	r3, [r1, r2]
   29ba4:	add	r1, r1, r2
   29ba8:	add	r3, r3, #4
   29bac:	adds	r1, r1, r3
   29bb0:	ldrne	r9, [r1, #-4]
   29bb4:	moveq	r9, #0
   29bb8:	cmp	r0, #0
   29bbc:	beq	29f68 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
   29bc0:	ldr	r5, [r0, #-4]
   29bc4:	cmp	r9, r5
   29bc8:	movcc	r2, r9
   29bcc:	movcs	r2, r5
   29bd0:	bl	13ff4 <strncmp@plt>
   29bd4:	cmp	r0, #0
   29bd8:	beq	29f6c <__flatcc_fb_gen_c_json_printer@@Base+0x1de4>
   29bdc:	movlt	r4, r8
   29be0:	lsl	r3, r7, #2
   29be4:	cmp	r6, r7
   29be8:	add	r1, fp, r3
   29bec:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29bf0:	ldr	r5, [fp, r7, lsl #2]
   29bf4:	adds	r2, r1, r5
   29bf8:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29bfc:	ldr	r1, [r1, r5]
   29c00:	sub	r1, r2, r1
   29c04:	ldrh	r0, [r1]
   29c08:	cmp	r0, #5
   29c0c:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29c10:	ldrh	r1, [r1, #4]
   29c14:	cmp	r1, #0
   29c18:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29c1c:	ldr	r0, [r2, r1]
   29c20:	lsl	sl, r4, #2
   29c24:	add	r2, r2, r1
   29c28:	cmp	r4, r6
   29c2c:	add	r1, fp, sl
   29c30:	add	r0, r0, #4
   29c34:	add	r0, r2, r0
   29c38:	bcs	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29c3c:	ldr	r6, [fp, r4, lsl #2]
   29c40:	adds	r2, r1, r6
   29c44:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29c48:	ldr	r1, [r1, r6]
   29c4c:	sub	r1, r2, r1
   29c50:	ldrh	ip, [r1]
   29c54:	cmp	ip, #5
   29c58:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29c5c:	ldrh	ip, [r1, #4]
   29c60:	cmp	ip, #0
   29c64:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29c68:	ldr	r1, [r2, ip]
   29c6c:	add	r2, r2, ip
   29c70:	add	r1, r1, #4
   29c74:	adds	r1, r2, r1
   29c78:	ldrne	r9, [r1, #-4]
   29c7c:	moveq	r9, r1
   29c80:	cmp	r0, #0
   29c84:	bne	29aac <__flatcc_fb_gen_c_json_printer@@Base+0x1924>
   29c88:	mov	r8, r0
   29c8c:	cmp	r9, r8
   29c90:	bhi	29ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x194c>
   29c94:	ldr	sl, [sp, #16]
   29c98:	sub	sl, sl, #1
   29c9c:	ldr	r3, [sp, #8]
   29ca0:	cmn	sl, #1
   29ca4:	sub	r3, r3, #2
   29ca8:	str	r3, [sp, #8]
   29cac:	bne	29a8c <__flatcc_fb_gen_c_json_printer@@Base+0x1904>
   29cb0:	ldr	sl, [sp, #4]
   29cb4:	cmp	sl, #0
   29cb8:	beq	29ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   29cbc:	ldr	r3, [sp, #28]
   29cc0:	add	r2, fp, #4
   29cc4:	str	r2, [sp, #16]
   29cc8:	add	r3, fp, r3, lsl #2
   29ccc:	ldr	r2, [sp, #16]
   29cd0:	sub	lr, r3, #4
   29cd4:	mov	r7, #0
   29cd8:	sub	sl, sl, #1
   29cdc:	mov	r4, r7
   29ce0:	ldr	r1, [r3, #-4]
   29ce4:	str	lr, [sp, #12]
   29ce8:	ldr	r0, [fp]
   29cec:	sub	ip, r3, r2
   29cf0:	sub	r2, r2, r3
   29cf4:	add	r1, r1, ip
   29cf8:	add	r2, r2, r0
   29cfc:	str	r1, [fp]
   29d00:	str	r2, [r3, #-4]
   29d04:	b	29d6c <__flatcc_fb_gen_c_json_printer@@Base+0x1be4>
   29d08:	cmp	r0, #0
   29d0c:	ldr	r9, [r1, #-4]
   29d10:	beq	29f78 <__flatcc_fb_gen_c_json_printer@@Base+0x1df0>
   29d14:	ldr	r8, [r0, #-4]
   29d18:	str	r3, [sp, #8]
   29d1c:	cmp	r9, r8
   29d20:	movcc	r2, r9
   29d24:	movcs	r2, r8
   29d28:	bl	13ff4 <strncmp@plt>
   29d2c:	cmp	r0, #0
   29d30:	ldr	r3, [sp, #8]
   29d34:	beq	29f7c <__flatcc_fb_gen_c_json_printer@@Base+0x1df4>
   29d38:	bge	29ee4 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   29d3c:	sub	r2, r7, r4
   29d40:	lsl	r1, r4, #1
   29d44:	mov	r7, r4
   29d48:	lsl	r2, r2, #2
   29d4c:	cmp	sl, r1
   29d50:	sub	r6, r6, r2
   29d54:	add	r5, r5, r2
   29d58:	ldr	r2, [sp, #4]
   29d5c:	str	r6, [fp, r2]
   29d60:	str	r5, [fp, r3]
   29d64:	bcc	29ee4 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   29d68:	mov	r4, r1
   29d6c:	cmp	sl, r4
   29d70:	ldr	r6, [fp, #-4]
   29d74:	bls	29e44 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   29d78:	lsl	r2, r4, #2
   29d7c:	cmp	r6, r4
   29d80:	add	ip, fp, r2
   29d84:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29d88:	ldr	r0, [fp, r4, lsl #2]
   29d8c:	adds	r1, ip, r0
   29d90:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29d94:	ldr	r0, [ip, r0]
   29d98:	sub	r0, r1, r0
   29d9c:	ldrh	ip, [r0]
   29da0:	cmp	ip, #5
   29da4:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29da8:	ldrh	ip, [r0, #4]
   29dac:	cmp	ip, #0
   29db0:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29db4:	ldr	r0, [r1, ip]
   29db8:	add	r8, r4, #1
   29dbc:	add	r1, r1, ip
   29dc0:	add	r2, r2, #4
   29dc4:	cmp	r6, r8
   29dc8:	add	ip, fp, r2
   29dcc:	add	r0, r0, #4
   29dd0:	add	r0, r1, r0
   29dd4:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29dd8:	ldr	r2, [fp, r2]
   29ddc:	adds	r1, ip, r2
   29de0:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29de4:	ldr	r2, [ip, r2]
   29de8:	sub	r2, r1, r2
   29dec:	ldrh	ip, [r2]
   29df0:	cmp	ip, #5
   29df4:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29df8:	ldrh	ip, [r2, #4]
   29dfc:	cmp	ip, #0
   29e00:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29e04:	ldr	r2, [r1, ip]
   29e08:	add	r1, r1, ip
   29e0c:	add	r2, r2, #4
   29e10:	adds	r1, r1, r2
   29e14:	beq	29e44 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   29e18:	cmp	r0, #0
   29e1c:	ldr	r9, [r1, #-4]
   29e20:	beq	29f94 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   29e24:	ldr	r5, [r0, #-4]
   29e28:	cmp	r9, r5
   29e2c:	movcc	r2, r9
   29e30:	movcs	r2, r5
   29e34:	bl	13ff4 <strncmp@plt>
   29e38:	cmp	r0, #0
   29e3c:	beq	29f98 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
   29e40:	movlt	r4, r8
   29e44:	lsl	r3, r7, #2
   29e48:	cmp	r6, r7
   29e4c:	add	r2, fp, r3
   29e50:	str	r3, [sp, #4]
   29e54:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29e58:	ldr	r5, [fp, r7, lsl #2]
   29e5c:	adds	r0, r2, r5
   29e60:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29e64:	ldr	r2, [r2, r5]
   29e68:	sub	r2, r0, r2
   29e6c:	ldrh	r1, [r2]
   29e70:	cmp	r1, #5
   29e74:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29e78:	ldrh	r2, [r2, #4]
   29e7c:	cmp	r2, #0
   29e80:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29e84:	ldr	r1, [r0, r2]
   29e88:	lsl	r3, r4, #2
   29e8c:	add	r0, r0, r2
   29e90:	cmp	r6, r4
   29e94:	add	r2, fp, r3
   29e98:	add	r1, r1, #4
   29e9c:	add	r0, r0, r1
   29ea0:	bls	2a008 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   29ea4:	ldr	r6, [fp, r4, lsl #2]
   29ea8:	adds	r1, r2, r6
   29eac:	beq	29fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   29eb0:	ldr	r2, [r2, r6]
   29eb4:	sub	r2, r1, r2
   29eb8:	ldrh	ip, [r2]
   29ebc:	cmp	ip, #5
   29ec0:	bls	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29ec4:	ldrh	ip, [r2, #4]
   29ec8:	cmp	ip, #0
   29ecc:	beq	29fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   29ed0:	ldr	r2, [r1, ip]
   29ed4:	add	r1, r1, ip
   29ed8:	add	r2, r2, #4
   29edc:	adds	r1, r1, r2
   29ee0:	bne	29d08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   29ee4:	cmp	sl, #0
   29ee8:	ldr	r3, [sp, #12]
   29eec:	bne	29ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   29ef0:	ldr	r3, [sp, #24]
   29ef4:	ldr	r1, [r3, #-4]
   29ef8:	ldr	r3, [sp, #20]
   29efc:	add	r3, r3, #1
   29f00:	cmp	r3, r1
   29f04:	str	r3, [sp, #20]
   29f08:	bcs	29fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   29f0c:	ldr	r0, [sp, #20]
   29f10:	ldr	r2, [sp, #24]
   29f14:	ldr	r3, [r2, r0, lsl #2]
   29f18:	add	r0, r2, r0, lsl #2
   29f1c:	adds	r2, r0, r3
   29f20:	beq	2a02c <__flatcc_fb_gen_c_json_printer@@Base+0x1ea4>
   29f24:	ldr	r3, [r0, r3]
   29f28:	sub	r3, r2, r3
   29f2c:	ldrh	r0, [r3]
   29f30:	cmp	r0, #7
   29f34:	bls	29f44 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   29f38:	ldrh	r3, [r3, #6]
   29f3c:	cmp	r3, #0
   29f40:	bne	29a4c <__flatcc_fb_gen_c_json_printer@@Base+0x18c4>
   29f44:	ldr	r3, [pc, #308]	; 2a080 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef8>
   29f48:	mov	r2, #224	; 0xe0
   29f4c:	ldr	r1, [pc, #304]	; 2a084 <__flatcc_fb_gen_c_json_printer@@Base+0x1efc>
   29f50:	ldr	r0, [pc, #304]	; 2a088 <__flatcc_fb_gen_c_json_printer@@Base+0x1f00>
   29f54:	add	r3, pc, r3
   29f58:	add	r3, r3, #216	; 0xd8
   29f5c:	add	r1, pc, r1
   29f60:	add	r0, pc, r0
   29f64:	bl	1400c <__assert_fail@plt>
   29f68:	mov	r5, r0
   29f6c:	cmp	r9, r5
   29f70:	movhi	r4, r8
   29f74:	b	29be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   29f78:	mov	r8, #0
   29f7c:	cmp	r9, r8
   29f80:	bhi	29d3c <__flatcc_fb_gen_c_json_printer@@Base+0x1bb4>
   29f84:	cmp	sl, #0
   29f88:	ldr	r3, [sp, #12]
   29f8c:	bne	29ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   29f90:	b	29ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   29f94:	mov	r5, r0
   29f98:	cmp	r9, r5
   29f9c:	movhi	r4, r8
   29fa0:	b	29e44 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   29fa4:	ldr	r3, [pc, #224]	; 2a08c <__flatcc_fb_gen_c_json_printer@@Base+0x1f04>
   29fa8:	mov	r2, #195	; 0xc3
   29fac:	ldr	r1, [pc, #220]	; 2a090 <__flatcc_fb_gen_c_json_printer@@Base+0x1f08>
   29fb0:	ldr	r0, [pc, #220]	; 2a094 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0c>
   29fb4:	add	r3, pc, r3
   29fb8:	add	r3, r3, #268	; 0x10c
   29fbc:	add	r1, pc, r1
   29fc0:	add	r0, pc, r0
   29fc4:	bl	1400c <__assert_fail@plt>
   29fc8:	add	sp, sp, #36	; 0x24
   29fcc:	ldrd	r4, [sp]
   29fd0:	ldrd	r6, [sp, #8]
   29fd4:	ldrd	r8, [sp, #16]
   29fd8:	ldrd	sl, [sp, #24]
   29fdc:	add	sp, sp, #32
   29fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   29fe4:	ldr	r3, [pc, #172]	; 2a098 <__flatcc_fb_gen_c_json_printer@@Base+0x1f10>
   29fe8:	mov	r2, #195	; 0xc3
   29fec:	ldr	r1, [pc, #168]	; 2a09c <__flatcc_fb_gen_c_json_printer@@Base+0x1f14>
   29ff0:	ldr	r0, [pc, #168]	; 2a0a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f18>
   29ff4:	add	r3, pc, r3
   29ff8:	add	r3, r3, #268	; 0x10c
   29ffc:	add	r1, pc, r1
   2a000:	add	r0, pc, r0
   2a004:	bl	1400c <__assert_fail@plt>
   2a008:	ldr	r3, [pc, #148]	; 2a0a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f1c>
   2a00c:	mov	r2, #192	; 0xc0
   2a010:	ldr	r1, [pc, #144]	; 2a0a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f20>
   2a014:	ldr	r0, [pc, #144]	; 2a0ac <__flatcc_fb_gen_c_json_printer@@Base+0x1f24>
   2a018:	add	r3, pc, r3
   2a01c:	add	r3, r3, #244	; 0xf4
   2a020:	add	r1, pc, r1
   2a024:	add	r0, pc, r0
   2a028:	bl	1400c <__assert_fail@plt>
   2a02c:	ldr	r3, [pc, #124]	; 2a0b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f28>
   2a030:	mov	r2, #224	; 0xe0
   2a034:	ldr	r1, [pc, #120]	; 2a0b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f2c>
   2a038:	ldr	r0, [pc, #120]	; 2a0b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   2a03c:	add	r3, pc, r3
   2a040:	add	r3, r3, #216	; 0xd8
   2a044:	add	r1, pc, r1
   2a048:	add	r0, pc, r0
   2a04c:	bl	1400c <__assert_fail@plt>
   2a050:	ldr	r3, [pc, #100]	; 2a0bc <__flatcc_fb_gen_c_json_printer@@Base+0x1f34>
   2a054:	mov	r2, #237	; 0xed
   2a058:	ldr	r1, [pc, #96]	; 2a0c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f38>
   2a05c:	ldr	r0, [pc, #96]	; 2a0c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f3c>
   2a060:	add	r3, pc, r3
   2a064:	add	r3, r3, #188	; 0xbc
   2a068:	add	r1, pc, r1
   2a06c:	add	r0, pc, r0
   2a070:	bl	1400c <__assert_fail@plt>
   2a074:	andeq	sp, r2, r4, asr #5
   2a078:	ldrdeq	sp, [r2], -r0
   2a07c:	andeq	sp, r2, r4, asr #16
   2a080:	andeq	ip, r2, r4, lsr #26
   2a084:	andeq	sp, r2, r0, lsr r2
   2a088:	andeq	sp, r2, ip, asr #5
   2a08c:	andeq	ip, r2, r4, asr #25
   2a090:	ldrdeq	sp, [r2], -r0
   2a094:	andeq	sp, r2, ip, ror #4
   2a098:	andeq	ip, r2, r4, lsl #25
   2a09c:	muleq	r2, r0, r1
   2a0a0:	andeq	sp, r2, r4, lsl #4
   2a0a4:	andeq	ip, r2, r0, ror #24
   2a0a8:	andeq	sp, r2, ip, ror #2
   2a0ac:	andeq	sp, r2, ip, lsr #4
   2a0b0:	andeq	ip, r2, ip, lsr ip
   2a0b4:	andeq	sp, r2, r8, asr #2
   2a0b8:			; <UNDEFINED> instruction: 0x0002d1bc
   2a0bc:	andeq	ip, r2, r8, lsl ip
   2a0c0:	andeq	sp, r2, r4, lsr #2
   2a0c4:	andeq	sp, r2, r0, asr #3

0002a0c8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2a0c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a0cc:	mov	r5, r2
   2a0d0:	strd	r6, [sp, #8]
   2a0d4:	mov	r7, r0
   2a0d8:	mov	r6, r3
   2a0dc:	str	r8, [sp, #16]
   2a0e0:	mov	r8, r1
   2a0e4:	str	lr, [sp, #20]
   2a0e8:	sub	sp, sp, #232	; 0xe8
   2a0ec:	mov	r4, sp
   2a0f0:	mov	r0, r4
   2a0f4:	bl	3899c <flatcc_builder_init@@Base>
   2a0f8:	mov	r3, r8
   2a0fc:	add	r2, r7, #188	; 0xbc
   2a100:	ldr	r1, [r7, #184]	; 0xb8
   2a104:	mov	r0, r4
   2a108:	bl	28c60 <__flatcc_fb_gen_c_json_printer@@Base+0xad8>
   2a10c:	mov	r1, r5
   2a110:	mov	r0, r4
   2a114:	ldr	r2, [r6]
   2a118:	bl	3c648 <flatcc_builder_copy_buffer@@Base>
   2a11c:	cmp	r0, #0
   2a120:	beq	2a12c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x64>
   2a124:	mov	r0, r5
   2a128:	bl	29970 <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   2a12c:	mov	r0, r4
   2a130:	bl	3c560 <flatcc_builder_get_buffer_size@@Base>
   2a134:	str	r0, [r6]
   2a138:	mov	r0, r4
   2a13c:	bl	38b4c <flatcc_builder_clear@@Base>
   2a140:	mov	r0, r5
   2a144:	add	sp, sp, #232	; 0xe8
   2a148:	ldrd	r4, [sp]
   2a14c:	ldrd	r6, [sp, #8]
   2a150:	ldr	r8, [sp, #16]
   2a154:	add	sp, sp, #20
   2a158:	pop	{pc}		; (ldr pc, [sp], #4)

0002a15c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2a15c:	strd	r4, [sp, #-20]!	; 0xffffffec
   2a160:	mov	r5, r0
   2a164:	strd	r6, [sp, #8]
   2a168:	mov	r6, r1
   2a16c:	mov	r7, r2
   2a170:	str	lr, [sp, #16]
   2a174:	sub	sp, sp, #236	; 0xec
   2a178:	mov	r4, sp
   2a17c:	mov	r0, r4
   2a180:	bl	3899c <flatcc_builder_init@@Base>
   2a184:	add	r2, r5, #188	; 0xbc
   2a188:	mov	r3, r6
   2a18c:	ldr	r1, [r5, #184]	; 0xb8
   2a190:	mov	r0, r4
   2a194:	bl	28c60 <__flatcc_fb_gen_c_json_printer@@Base+0xad8>
   2a198:	cmp	r0, #0
   2a19c:	movne	r5, #0
   2a1a0:	bne	2a1bc <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   2a1a4:	mov	r1, r7
   2a1a8:	mov	r0, r4
   2a1ac:	bl	3c6b4 <flatcc_builder_finalize_buffer@@Base>
   2a1b0:	subs	r5, r0, #0
   2a1b4:	beq	2a1bc <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   2a1b8:	bl	29970 <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   2a1bc:	mov	r0, r4
   2a1c0:	bl	38b4c <flatcc_builder_clear@@Base>
   2a1c4:	mov	r0, r5
   2a1c8:	add	sp, sp, #236	; 0xec
   2a1cc:	ldrd	r4, [sp]
   2a1d0:	ldrd	r6, [sp, #8]
   2a1d4:	add	sp, sp, #16
   2a1d8:	pop	{pc}		; (ldr pc, [sp], #4)

0002a1dc <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   2a1dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2a1e0:	mov	r5, r0
   2a1e4:	ldr	r4, [r0, #216]	; 0xd8
   2a1e8:	strd	r6, [sp, #8]
   2a1ec:	mov	r7, r1
   2a1f0:	ldr	r6, [pc, #440]	; 2a3b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   2a1f4:	strd	r8, [sp, #16]
   2a1f8:	str	sl, [sp, #24]
   2a1fc:	cmp	r4, #0
   2a200:	str	lr, [sp, #28]
   2a204:	sub	sp, sp, #16
   2a208:	ldr	r8, [r0, #108]	; 0x6c
   2a20c:	add	r6, pc, r6
   2a210:	beq	2a314 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   2a214:	mov	r0, r4
   2a218:	bl	13f4c <strlen@plt>
   2a21c:	mov	r9, r0
   2a220:	cmp	r8, #0
   2a224:	beq	2a2b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2a228:	ldr	r3, [pc, #388]	; 2a3b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d8>
   2a22c:	ldr	r3, [r6, r3]
   2a230:	ldr	r4, [r3]
   2a234:	cmp	r4, #0
   2a238:	beq	2a380 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a4>
   2a23c:	mov	r1, r7
   2a240:	mov	r0, r5
   2a244:	add	r2, sp, #12
   2a248:	bl	2a15c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   2a24c:	subs	r7, r0, #0
   2a250:	beq	2a34c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   2a254:	mov	r3, r4
   2a258:	mov	r1, #1
   2a25c:	ldr	r2, [sp, #12]
   2a260:	bl	13eec <fwrite@plt>
   2a264:	ldr	r3, [sp, #12]
   2a268:	cmp	r0, r3
   2a26c:	moveq	r5, #0
   2a270:	bne	2a324 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   2a274:	mov	r0, r7
   2a278:	bl	13ea4 <free@plt>
   2a27c:	ldr	r3, [pc, #304]	; 2a3b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d8>
   2a280:	ldr	r3, [r6, r3]
   2a284:	ldr	r3, [r3]
   2a288:	cmp	r3, r4
   2a28c:	beq	2a298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   2a290:	mov	r0, r4
   2a294:	bl	13fa0 <fclose@plt>
   2a298:	mov	r0, r5
   2a29c:	add	sp, sp, #16
   2a2a0:	ldrd	r4, [sp]
   2a2a4:	ldrd	r6, [sp, #8]
   2a2a8:	ldrd	r8, [sp, #16]
   2a2ac:	ldr	sl, [sp, #24]
   2a2b0:	add	sp, sp, #28
   2a2b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a2b8:	ldr	sl, [r7, #160]	; 0xa0
   2a2bc:	mov	r8, #1
   2a2c0:	mov	r0, sl
   2a2c4:	bl	13f4c <strlen@plt>
   2a2c8:	ldr	ip, [pc, #232]	; 2a3b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dc>
   2a2cc:	mov	r3, r0
   2a2d0:	mov	r1, r9
   2a2d4:	mov	r2, sl
   2a2d8:	mov	r0, r4
   2a2dc:	str	r8, [sp, #4]
   2a2e0:	add	ip, pc, ip
   2a2e4:	str	ip, [sp]
   2a2e8:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   2a2ec:	subs	r9, r0, #0
   2a2f0:	beq	2a388 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   2a2f4:	ldr	r1, [pc, #192]	; 2a3bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   2a2f8:	add	r1, pc, r1
   2a2fc:	bl	13e98 <fopen@plt>
   2a300:	subs	r4, r0, #0
   2a304:	beq	2a360 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   2a308:	mov	r0, r9
   2a30c:	bl	13ea4 <free@plt>
   2a310:	b	2a234 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58>
   2a314:	mov	r9, r4
   2a318:	ldr	r4, [pc, #160]	; 2a3c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e4>
   2a31c:	add	r4, pc, r4
   2a320:	b	2a220 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44>
   2a324:	ldr	r3, [pc, #152]	; 2a3c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2a328:	mov	r2, #38	; 0x26
   2a32c:	mov	r1, #1
   2a330:	mvn	r5, #0
   2a334:	ldr	r0, [pc, #140]	; 2a3c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ec>
   2a338:	ldr	r3, [r6, r3]
   2a33c:	add	r0, pc, r0
   2a340:	ldr	r3, [r3]
   2a344:	bl	13eec <fwrite@plt>
   2a348:	b	2a274 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   2a34c:	ldr	r0, [pc, #120]	; 2a3cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
   2a350:	mvn	r5, #0
   2a354:	add	r0, pc, r0
   2a358:	bl	13f04 <puts@plt>
   2a35c:	b	2a27c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0>
   2a360:	ldr	r3, [pc, #92]	; 2a3c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2a364:	mov	r2, r9
   2a368:	ldr	r1, [pc, #96]	; 2a3d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   2a36c:	ldr	r3, [r6, r3]
   2a370:	add	r1, pc, r1
   2a374:	ldr	r0, [r3]
   2a378:	bl	13f58 <fprintf@plt>
   2a37c:	b	2a308 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12c>
   2a380:	mvn	r5, #0
   2a384:	b	2a298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   2a388:	ldr	r3, [pc, #52]	; 2a3c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2a38c:	mov	r2, #34	; 0x22
   2a390:	mov	r1, r8
   2a394:	ldr	r0, [pc, #56]	; 2a3d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   2a398:	ldr	r3, [r6, r3]
   2a39c:	add	r0, pc, r0
   2a3a0:	ldr	r3, [r3]
   2a3a4:	bl	13eec <fwrite@plt>
   2a3a8:	mov	r0, r8
   2a3ac:	bl	13f40 <exit@plt>
   2a3b0:	andeq	r0, r4, ip, ror #27
   2a3b4:	andeq	r0, r0, r8, lsr #1
   2a3b8:	andeq	r6, r1, r0, lsr #32
   2a3bc:	andeq	r6, r1, r0, lsr r1
   2a3c0:	andeq	r0, r2, r4, asr #6
   2a3c4:	muleq	r0, ip, r0
   2a3c8:	andeq	ip, r2, r4, lsr #31
   2a3cc:	andeq	ip, r2, r8, ror #30
   2a3d0:	andeq	ip, r2, r8, lsl pc
   2a3d4:	andeq	r5, r1, r0, asr #30
   2a3d8:	str	r4, [sp, #-8]!
   2a3dc:	mov	r4, r0
   2a3e0:	ldr	r0, [r0]
   2a3e4:	str	lr, [sp, #4]
   2a3e8:	cmp	r0, #0
   2a3ec:	beq	2a3f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   2a3f0:	bl	13ea4 <free@plt>
   2a3f4:	mov	r3, #0
   2a3f8:	str	r3, [r4]
   2a3fc:	str	r3, [r4, #4]
   2a400:	str	r3, [r4, #8]
   2a404:	str	r3, [r4, #12]
   2a408:	ldr	r4, [sp]
   2a40c:	add	sp, sp, #4
   2a410:	pop	{pc}		; (ldr pc, [sp], #4)
   2a414:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a418:	cmp	r3, #0
   2a41c:	ldr	r4, [pc, #600]	; 2a67c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a0>
   2a420:	strd	r6, [sp, #8]
   2a424:	strd	r8, [sp, #16]
   2a428:	strd	sl, [sp, #24]
   2a42c:	str	lr, [sp, #32]
   2a430:	sub	sp, sp, #28
   2a434:	add	r4, pc, r4
   2a438:	str	r3, [sp, #8]
   2a43c:	str	r0, [sp, #12]
   2a440:	beq	2a65c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
   2a444:	ldr	r3, [sp, #8]
   2a448:	cmp	r3, #2
   2a44c:	beq	2a63c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x460>
   2a450:	ldr	r3, [sp, #8]
   2a454:	cmp	r3, #1
   2a458:	beq	2a61c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x440>
   2a45c:	ldr	r5, [sp, #12]
   2a460:	mov	r9, r1
   2a464:	mov	r3, #179	; 0xb3
   2a468:	mov	sl, r2
   2a46c:	ldr	r1, [r5, #8]
   2a470:	ldr	r7, [r5, #12]
   2a474:	mul	r3, r3, r7
   2a478:	cmp	r1, r3, lsr #8
   2a47c:	bcs	2a570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   2a480:	ldr	r3, [sp, #12]
   2a484:	movw	r1, #15186	; 0x3b52
   2a488:	movt	r1, #12137	; 0x2f69
   2a48c:	mov	r2, sl
   2a490:	mov	r0, r9
   2a494:	sub	r7, r7, #1
   2a498:	ldr	r6, [r3]
   2a49c:	mov	r3, #0
   2a4a0:	str	r1, [sp]
   2a4a4:	add	r1, sp, #16
   2a4a8:	str	r1, [sp, #4]
   2a4ac:	bl	3ce98 <cmetrohash64_1@@Base>
   2a4b0:	ldr	r3, [sp, #16]
   2a4b4:	ldr	r2, [sp, #64]	; 0x40
   2a4b8:	sub	r2, r2, #2
   2a4bc:	cmp	r2, #1
   2a4c0:	and	r2, r7, r3
   2a4c4:	add	r4, r6, r2, lsl #2
   2a4c8:	bls	2a5a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   2a4cc:	ldr	r5, [r6, r2, lsl #2]
   2a4d0:	cmp	r5, #0
   2a4d4:	moveq	r8, r4
   2a4d8:	beq	2a534 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   2a4dc:	add	fp, r3, #1
   2a4e0:	mov	r8, #0
   2a4e4:	b	2a518 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x33c>
   2a4e8:	mov	r2, sl
   2a4ec:	mov	r1, r5
   2a4f0:	mov	r0, r9
   2a4f4:	bl	13ff4 <strncmp@plt>
   2a4f8:	cmp	r0, #0
   2a4fc:	beq	2a588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   2a500:	and	r4, r7, fp
   2a504:	add	fp, fp, #1
   2a508:	ldr	r5, [r6, r4, lsl #2]
   2a50c:	add	r4, r6, r4, lsl #2
   2a510:	cmp	r5, #0
   2a514:	beq	2a52c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   2a518:	cmp	r5, #2
   2a51c:	bne	2a4e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x30c>
   2a520:	cmp	r8, #0
   2a524:	moveq	r8, r4
   2a528:	b	2a500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   2a52c:	cmp	r8, #0
   2a530:	moveq	r8, r4
   2a534:	ldr	r2, [sp, #12]
   2a538:	mov	r5, #0
   2a53c:	ldr	r3, [r2, #8]
   2a540:	add	r3, r3, #1
   2a544:	str	r3, [r2, #8]
   2a548:	ldr	r3, [sp, #8]
   2a54c:	str	r3, [r8]
   2a550:	mov	r0, r5
   2a554:	add	sp, sp, #28
   2a558:	ldrd	r4, [sp]
   2a55c:	ldrd	r6, [sp, #8]
   2a560:	ldrd	r8, [sp, #16]
   2a564:	ldrd	sl, [sp, #24]
   2a568:	add	sp, sp, #32
   2a56c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a570:	lsl	r1, r1, #1
   2a574:	bl	2a6b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d4>
   2a578:	cmp	r0, #0
   2a57c:	bne	2a5f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x418>
   2a580:	ldr	r7, [r5, #12]
   2a584:	b	2a480 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a4>
   2a588:	ldr	r3, [sp, #64]	; 0x40
   2a58c:	cmp	r3, #0
   2a590:	bne	2a550 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2a594:	ldr	r3, [sp, #8]
   2a598:	str	r3, [r4]
   2a59c:	b	2a550 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2a5a0:	ldr	ip, [sp, #12]
   2a5a4:	ldr	r0, [r6, r2, lsl #2]
   2a5a8:	ldr	r1, [ip, #8]
   2a5ac:	cmp	r0, #2
   2a5b0:	cmpne	r0, #0
   2a5b4:	add	r2, r1, #1
   2a5b8:	str	r2, [ip, #8]
   2a5bc:	beq	2a5e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   2a5c0:	add	r3, r3, #1
   2a5c4:	and	r2, r7, r3
   2a5c8:	add	r3, r3, #1
   2a5cc:	ldr	r1, [r6, r2, lsl #2]
   2a5d0:	add	r2, r6, r2, lsl #2
   2a5d4:	cmp	r1, #0
   2a5d8:	cmpne	r1, #2
   2a5dc:	bne	2a5c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   2a5e0:	mov	r4, r2
   2a5e4:	ldr	r3, [sp, #8]
   2a5e8:	mov	r5, #0
   2a5ec:	str	r3, [r4]
   2a5f0:	b	2a550 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2a5f4:	ldr	r3, [pc, #132]	; 2a680 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   2a5f8:	ldr	r2, [pc, #132]	; 2a684 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   2a5fc:	ldr	r1, [pc, #132]	; 2a688 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>
   2a600:	ldr	r3, [r4, r3]
   2a604:	add	r2, pc, r2
   2a608:	add	r1, pc, r1
   2a60c:	ldr	r0, [r3]
   2a610:	bl	13f58 <fprintf@plt>
   2a614:	mov	r0, #1
   2a618:	bl	13f40 <exit@plt>
   2a61c:	ldr	r3, [pc, #104]	; 2a68c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>
   2a620:	mov	r2, #116	; 0x74
   2a624:	ldr	r1, [pc, #100]	; 2a690 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b4>
   2a628:	ldr	r0, [pc, #100]	; 2a694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b8>
   2a62c:	add	r3, pc, r3
   2a630:	add	r1, pc, r1
   2a634:	add	r0, pc, r0
   2a638:	bl	1400c <__assert_fail@plt>
   2a63c:	ldr	r3, [pc, #84]	; 2a698 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   2a640:	mov	r2, #115	; 0x73
   2a644:	ldr	r1, [pc, #80]	; 2a69c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   2a648:	ldr	r0, [pc, #80]	; 2a6a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
   2a64c:	add	r3, pc, r3
   2a650:	add	r1, pc, r1
   2a654:	add	r0, pc, r0
   2a658:	bl	1400c <__assert_fail@plt>
   2a65c:	ldr	r3, [pc, #64]	; 2a6a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
   2a660:	mov	r2, #114	; 0x72
   2a664:	ldr	r1, [pc, #60]	; 2a6a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   2a668:	ldr	r0, [pc, #60]	; 2a6ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d0>
   2a66c:	add	r3, pc, r3
   2a670:	add	r1, pc, r1
   2a674:	add	r0, pc, r0
   2a678:	bl	1400c <__assert_fail@plt>
   2a67c:	andeq	r0, r4, r4, asr #23
   2a680:	muleq	r0, ip, r0
   2a684:	andeq	ip, r2, ip, asr #27
   2a688:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2a68c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2a690:	strdeq	ip, [r2], -r0
   2a694:	andeq	ip, r2, r4, lsl #27
   2a698:			; <UNDEFINED> instruction: 0x0002ccbc
   2a69c:	ldrdeq	ip, [r2], -r0
   2a6a0:	andeq	ip, r2, ip, asr #26
   2a6a4:	muleq	r2, ip, ip
   2a6a8:			; <UNDEFINED> instruction: 0x0002ccb0
   2a6ac:	andeq	ip, r2, r4, lsl sp
   2a6b0:	ldr	r3, [r0, #8]
   2a6b4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2a6b8:	strd	r6, [sp, #8]
   2a6bc:	mov	r7, r0
   2a6c0:	strd	r8, [sp, #16]
   2a6c4:	str	lr, [sp, #24]
   2a6c8:	sub	sp, sp, #28
   2a6cc:	cmp	r1, r3
   2a6d0:	ldr	r6, [r0]
   2a6d4:	movcc	r1, r3
   2a6d8:	cmp	r1, #2
   2a6dc:	bls	2a7cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
   2a6e0:	mov	r3, #4
   2a6e4:	movw	r0, #358	; 0x166
   2a6e8:	mul	r2, r0, r3
   2a6ec:	lsl	r4, r3, #1
   2a6f0:	cmp	r1, r2, lsr #8
   2a6f4:	mov	r3, r4
   2a6f8:	bhi	2a6e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2a6fc:	mov	r1, #4
   2a700:	mov	r0, r4
   2a704:	bl	13e74 <calloc@plt>
   2a708:	cmp	r0, #0
   2a70c:	str	r0, [sp, #8]
   2a710:	beq	2a7d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f8>
   2a714:	ldr	r3, [r7, #12]
   2a718:	mov	r5, #0
   2a71c:	str	r5, [sp, #12]
   2a720:	str	r5, [sp, #16]
   2a724:	str	r4, [sp, #20]
   2a728:	cmp	r3, r5
   2a72c:	addeq	r8, sp, #8
   2a730:	beq	2a78c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   2a734:	sub	r6, r6, #4
   2a738:	add	r8, sp, #8
   2a73c:	mov	r9, #3
   2a740:	b	2a74c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2a744:	cmp	r3, r5
   2a748:	bls	2a78c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   2a74c:	ldr	r4, [r6, #4]!
   2a750:	add	r5, r5, #1
   2a754:	cmp	r4, #0
   2a758:	cmpne	r4, #2
   2a75c:	beq	2a744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   2a760:	mov	r0, r4
   2a764:	bl	13f4c <strlen@plt>
   2a768:	mov	r2, r0
   2a76c:	mov	r3, r4
   2a770:	str	r9, [sp]
   2a774:	mov	r1, r4
   2a778:	mov	r0, r8
   2a77c:	bl	2a414 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2a780:	ldr	r3, [r7, #12]
   2a784:	cmp	r3, r5
   2a788:	bhi	2a74c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2a78c:	mov	r0, r7
   2a790:	bl	2a3d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>
   2a794:	ldr	r3, [sp, #8]
   2a798:	mov	r0, #0
   2a79c:	ldmib	r8, {r1, r2}
   2a7a0:	str	r3, [r7]
   2a7a4:	ldr	r3, [r8, #12]
   2a7a8:	str	r1, [r7, #4]
   2a7ac:	str	r2, [r7, #8]
   2a7b0:	str	r3, [r7, #12]
   2a7b4:	add	sp, sp, #28
   2a7b8:	ldrd	r4, [sp]
   2a7bc:	ldrd	r6, [sp, #8]
   2a7c0:	ldrd	r8, [sp, #16]
   2a7c4:	add	sp, sp, #24
   2a7c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a7cc:	mov	r4, #4
   2a7d0:	b	2a6fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x520>
   2a7d4:	mvn	r0, #0
   2a7d8:	b	2a7b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d8>
   2a7dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a7e0:	ldr	r5, [r0]
   2a7e4:	strd	r6, [sp, #8]
   2a7e8:	strd	r8, [sp, #16]
   2a7ec:	strd	sl, [sp, #24]
   2a7f0:	str	lr, [sp, #32]
   2a7f4:	sub	sp, sp, #20
   2a7f8:	cmp	r5, #0
   2a7fc:	beq	2a888 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ac>
   2a800:	mov	r6, r1
   2a804:	movw	r1, #15186	; 0x3b52
   2a808:	movt	r1, #12137	; 0x2f69
   2a80c:	mov	r9, r0
   2a810:	ldr	r7, [r9, #12]
   2a814:	mov	r3, #0
   2a818:	mov	r0, r6
   2a81c:	str	r1, [sp]
   2a820:	add	r1, sp, #8
   2a824:	mov	r8, r2
   2a828:	str	r1, [sp, #4]
   2a82c:	bl	3ce98 <cmetrohash64_1@@Base>
   2a830:	ldr	sl, [sp, #8]
   2a834:	sub	r7, r7, #1
   2a838:	and	r3, r7, sl
   2a83c:	ldr	fp, [r5, r3, lsl #2]
   2a840:	add	r4, r5, r3, lsl #2
   2a844:	cmp	fp, #0
   2a848:	beq	2a888 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ac>
   2a84c:	add	sl, sl, #1
   2a850:	cmp	fp, #2
   2a854:	mov	r1, fp
   2a858:	mov	r2, r8
   2a85c:	mov	r0, r6
   2a860:	beq	2a870 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x694>
   2a864:	bl	13ff4 <strncmp@plt>
   2a868:	cmp	r0, #0
   2a86c:	beq	2a8ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   2a870:	and	r3, sl, r7
   2a874:	add	sl, sl, #1
   2a878:	ldr	fp, [r5, r3, lsl #2]
   2a87c:	add	r4, r5, r3, lsl #2
   2a880:	cmp	fp, #0
   2a884:	bne	2a850 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   2a888:	mov	fp, #0
   2a88c:	mov	r0, fp
   2a890:	add	sp, sp, #20
   2a894:	ldrd	r4, [sp]
   2a898:	ldrd	r6, [sp, #8]
   2a89c:	ldrd	r8, [sp, #16]
   2a8a0:	ldrd	sl, [sp, #24]
   2a8a4:	add	sp, sp, #32
   2a8a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a8ac:	ldr	r3, [r9, #8]
   2a8b0:	mov	r2, #2
   2a8b4:	str	r2, [r4]
   2a8b8:	sub	r3, r3, #1
   2a8bc:	str	r3, [r9, #8]
   2a8c0:	b	2a88c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b0>
   2a8c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2a8c8:	strd	r6, [sp, #8]
   2a8cc:	strd	r8, [sp, #16]
   2a8d0:	subs	r8, r0, #0
   2a8d4:	str	lr, [sp, #24]
   2a8d8:	sub	sp, sp, #20
   2a8dc:	beq	2a960 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x784>
   2a8e0:	mov	r7, r3
   2a8e4:	movw	r3, #15186	; 0x3b52
   2a8e8:	movt	r3, #12137	; 0x2f69
   2a8ec:	ldr	r9, [r1]
   2a8f0:	add	r1, sp, #8
   2a8f4:	mov	r6, r2
   2a8f8:	mov	r2, r7
   2a8fc:	mov	r0, r6
   2a900:	str	r3, [sp]
   2a904:	mov	r3, #0
   2a908:	str	r1, [sp, #4]
   2a90c:	bl	3ce98 <cmetrohash64_1@@Base>
   2a910:	ldr	r5, [sp, #8]
   2a914:	sub	r9, r9, #1
   2a918:	and	r3, r9, r5
   2a91c:	ldr	r4, [r8, r3, lsl #2]
   2a920:	cmp	r4, #0
   2a924:	beq	2a960 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x784>
   2a928:	add	r5, r5, #1
   2a92c:	cmp	r4, #2
   2a930:	mov	r1, r4
   2a934:	mov	r2, r7
   2a938:	mov	r0, r6
   2a93c:	beq	2a94c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x770>
   2a940:	bl	13ff4 <strncmp@plt>
   2a944:	cmp	r0, #0
   2a948:	beq	2a964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x788>
   2a94c:	and	r1, r9, r5
   2a950:	add	r5, r5, #1
   2a954:	ldr	r4, [r8, r1, lsl #2]
   2a958:	cmp	r4, #0
   2a95c:	bne	2a92c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x750>
   2a960:	mov	r4, #0
   2a964:	mov	r0, r4
   2a968:	add	sp, sp, #20
   2a96c:	ldrd	r4, [sp]
   2a970:	ldrd	r6, [sp, #8]
   2a974:	ldrd	r8, [sp, #16]
   2a978:	add	sp, sp, #24
   2a97c:	pop	{pc}		; (ldr pc, [sp], #4)

0002a980 <str_set_clear@@Base>:
   2a980:	b	2a3d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>

0002a984 <str_set_destroy@@Base>:
   2a984:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a988:	strd	r6, [sp, #8]
   2a98c:	mov	r7, r0
   2a990:	str	r8, [sp, #16]
   2a994:	subs	r8, r1, #0
   2a998:	str	lr, [sp, #20]
   2a99c:	beq	2a9e8 <str_set_destroy@@Base+0x64>
   2a9a0:	ldr	r5, [r0]
   2a9a4:	ldr	ip, [r0, #12]
   2a9a8:	cmp	ip, #0
   2a9ac:	beq	2a9e8 <str_set_destroy@@Base+0x64>
   2a9b0:	mov	r6, r2
   2a9b4:	sub	r5, r5, #4
   2a9b8:	mov	r4, #0
   2a9bc:	ldr	r3, [r5, #4]!
   2a9c0:	mov	r0, r6
   2a9c4:	add	r4, r4, #1
   2a9c8:	cmp	r3, #0
   2a9cc:	cmpne	r3, #2
   2a9d0:	mov	r1, r3
   2a9d4:	beq	2a9e0 <str_set_destroy@@Base+0x5c>
   2a9d8:	blx	r8
   2a9dc:	ldr	ip, [r7, #12]
   2a9e0:	cmp	r4, ip
   2a9e4:	bcc	2a9bc <str_set_destroy@@Base+0x38>
   2a9e8:	mov	r0, r7
   2a9ec:	ldrd	r4, [sp]
   2a9f0:	ldrd	r6, [sp, #8]
   2a9f4:	ldr	r8, [sp, #16]
   2a9f8:	ldr	lr, [sp, #20]
   2a9fc:	add	sp, sp, #24
   2aa00:	b	2a3d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>

0002aa04 <str_set_init@@Base>:
   2aa04:	cmp	r1, #2
   2aa08:	strd	r4, [sp, #-16]!
   2aa0c:	mov	r4, r0
   2aa10:	str	r6, [sp, #8]
   2aa14:	str	lr, [sp, #12]
   2aa18:	bls	2aa74 <str_set_init@@Base+0x70>
   2aa1c:	mov	r3, #4
   2aa20:	movw	r0, #358	; 0x166
   2aa24:	mul	r2, r0, r3
   2aa28:	lsl	r5, r3, #1
   2aa2c:	cmp	r1, r2, lsr #8
   2aa30:	mov	r3, r5
   2aa34:	bhi	2aa24 <str_set_init@@Base+0x20>
   2aa38:	mov	r1, #4
   2aa3c:	mov	r0, r5
   2aa40:	bl	13e74 <calloc@plt>
   2aa44:	cmp	r0, #0
   2aa48:	str	r0, [r4]
   2aa4c:	beq	2aa7c <str_set_init@@Base+0x78>
   2aa50:	mov	r3, #0
   2aa54:	mov	r0, r3
   2aa58:	str	r3, [r4, #4]
   2aa5c:	str	r3, [r4, #8]
   2aa60:	str	r5, [r4, #12]
   2aa64:	ldrd	r4, [sp]
   2aa68:	ldr	r6, [sp, #8]
   2aa6c:	add	sp, sp, #12
   2aa70:	pop	{pc}		; (ldr pc, [sp], #4)
   2aa74:	mov	r5, #4
   2aa78:	b	2aa38 <str_set_init@@Base+0x34>
   2aa7c:	mvn	r0, #0
   2aa80:	b	2aa64 <str_set_init@@Base+0x60>

0002aa84 <str_set_resize@@Base>:
   2aa84:	b	2a6b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d4>

0002aa88 <str_set_insert@@Base>:
   2aa88:	b	2a414 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>

0002aa8c <str_set_insert_item@@Base>:
   2aa8c:	strd	r4, [sp, #-16]!
   2aa90:	mov	r5, r0
   2aa94:	mov	r0, r1
   2aa98:	str	r6, [sp, #8]
   2aa9c:	mov	r6, r2
   2aaa0:	mov	r4, r1
   2aaa4:	str	lr, [sp, #12]
   2aaa8:	sub	sp, sp, #8
   2aaac:	bl	13f4c <strlen@plt>
   2aab0:	mov	r2, r0
   2aab4:	mov	r3, r4
   2aab8:	str	r6, [sp]
   2aabc:	mov	r0, r5
   2aac0:	mov	r1, r4
   2aac4:	bl	2a414 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2aac8:	add	sp, sp, #8
   2aacc:	ldrd	r4, [sp]
   2aad0:	ldr	r6, [sp, #8]
   2aad4:	add	sp, sp, #12
   2aad8:	pop	{pc}		; (ldr pc, [sp], #4)

0002aadc <str_set_find@@Base>:
   2aadc:	mov	ip, r0
   2aae0:	mov	r3, r2
   2aae4:	ldr	r0, [ip], #12
   2aae8:	mov	r2, r1
   2aaec:	mov	r1, ip
   2aaf0:	b	2a8c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>

0002aaf4 <str_set_find_item@@Base>:
   2aaf4:	strd	r4, [sp, #-16]!
   2aaf8:	mov	r4, r0
   2aafc:	mov	r0, r1
   2ab00:	mov	r5, r1
   2ab04:	str	r6, [sp, #8]
   2ab08:	str	lr, [sp, #12]
   2ab0c:	bl	13f4c <strlen@plt>
   2ab10:	mov	r1, r4
   2ab14:	mov	r3, r0
   2ab18:	ldr	r6, [sp, #8]
   2ab1c:	mov	r2, r5
   2ab20:	ldrd	r4, [sp]
   2ab24:	ldr	lr, [sp, #12]
   2ab28:	add	sp, sp, #16
   2ab2c:	ldr	r0, [r1], #12
   2ab30:	b	2a8c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>

0002ab34 <str_set_remove@@Base>:
   2ab34:	b	2a7dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>

0002ab38 <str_set_remove_item@@Base>:
   2ab38:	strd	r4, [sp, #-16]!
   2ab3c:	mov	r5, r0
   2ab40:	mov	r0, r1
   2ab44:	mov	r4, r1
   2ab48:	str	r6, [sp, #8]
   2ab4c:	str	lr, [sp, #12]
   2ab50:	bl	13f4c <strlen@plt>
   2ab54:	mov	r2, r0
   2ab58:	mov	r1, r4
   2ab5c:	ldr	r6, [sp, #8]
   2ab60:	mov	r0, r5
   2ab64:	ldrd	r4, [sp]
   2ab68:	ldr	lr, [sp, #12]
   2ab6c:	add	sp, sp, #16
   2ab70:	b	2a7dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>

0002ab74 <str_set_visit@@Base>:
   2ab74:	ldr	ip, [r0, #12]
   2ab78:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ab7c:	ldr	r5, [r0]
   2ab80:	strd	r6, [sp, #8]
   2ab84:	str	r8, [sp, #16]
   2ab88:	cmp	ip, #0
   2ab8c:	str	lr, [sp, #20]
   2ab90:	beq	2abd4 <str_set_visit@@Base+0x60>
   2ab94:	mov	r6, r2
   2ab98:	mov	r8, r1
   2ab9c:	mov	r7, r0
   2aba0:	sub	r5, r5, #4
   2aba4:	mov	r4, #0
   2aba8:	ldr	r3, [r5, #4]!
   2abac:	mov	r0, r6
   2abb0:	add	r4, r4, #1
   2abb4:	cmp	r3, #0
   2abb8:	cmpne	r3, #2
   2abbc:	mov	r1, r3
   2abc0:	beq	2abcc <str_set_visit@@Base+0x58>
   2abc4:	blx	r8
   2abc8:	ldr	ip, [r7, #12]
   2abcc:	cmp	r4, ip
   2abd0:	bcc	2aba8 <str_set_visit@@Base+0x34>
   2abd4:	ldrd	r4, [sp]
   2abd8:	ldrd	r6, [sp, #8]
   2abdc:	ldr	r8, [sp, #16]
   2abe0:	add	sp, sp, #20
   2abe4:	pop	{pc}		; (ldr pc, [sp], #4)
   2abe8:	str	r4, [sp, #-8]!
   2abec:	mov	r4, r0
   2abf0:	ldr	r0, [r0]
   2abf4:	str	lr, [sp, #4]
   2abf8:	cmp	r0, #0
   2abfc:	beq	2ac04 <str_set_visit@@Base+0x90>
   2ac00:	bl	13ea4 <free@plt>
   2ac04:	mov	r3, #0
   2ac08:	str	r3, [r4]
   2ac0c:	str	r3, [r4, #4]
   2ac10:	str	r3, [r4, #8]
   2ac14:	str	r3, [r4, #12]
   2ac18:	ldr	r4, [sp]
   2ac1c:	add	sp, sp, #4
   2ac20:	pop	{pc}		; (ldr pc, [sp], #4)
   2ac24:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2ac28:	ldr	r4, [pc, #524]	; 2ae3c <str_set_visit@@Base+0x2c8>
   2ac2c:	strd	r6, [sp, #8]
   2ac30:	subs	r7, r2, #0
   2ac34:	strd	r8, [sp, #16]
   2ac38:	str	lr, [sp, #24]
   2ac3c:	sub	sp, sp, #28
   2ac40:	add	r4, pc, r4
   2ac44:	beq	2addc <str_set_visit@@Base+0x268>
   2ac48:	cmp	r7, #2
   2ac4c:	beq	2ae1c <str_set_visit@@Base+0x2a8>
   2ac50:	cmp	r7, #1
   2ac54:	beq	2adfc <str_set_visit@@Base+0x288>
   2ac58:	ldr	r9, [r0, #12]
   2ac5c:	mov	r5, r1
   2ac60:	mov	r8, r3
   2ac64:	mov	r3, #179	; 0xb3
   2ac68:	mov	r6, r0
   2ac6c:	ldr	r1, [r0, #8]
   2ac70:	mul	r3, r3, r9
   2ac74:	cmp	r1, r3, lsr #8
   2ac78:	bcs	2ad48 <str_set_visit@@Base+0x1d4>
   2ac7c:	movw	r1, #15186	; 0x3b52
   2ac80:	movt	r1, #12137	; 0x2f69
   2ac84:	ldr	r4, [r6]
   2ac88:	mov	r2, #4
   2ac8c:	mov	r3, #0
   2ac90:	str	r1, [sp]
   2ac94:	add	r1, sp, #16
   2ac98:	add	r0, sp, #12
   2ac9c:	sub	r9, r9, #1
   2aca0:	str	r1, [sp, #4]
   2aca4:	str	r5, [sp, #12]
   2aca8:	bl	3ce98 <cmetrohash64_1@@Base>
   2acac:	ldr	r2, [sp, #16]
   2acb0:	sub	r3, r8, #2
   2acb4:	cmp	r3, #1
   2acb8:	and	r1, r9, r2
   2acbc:	add	r3, r4, r1, lsl #2
   2acc0:	bls	2ad6c <str_set_visit@@Base+0x1f8>
   2acc4:	ldr	r0, [r4, r1, lsl #2]
   2acc8:	cmp	r0, #0
   2accc:	moveq	r1, r3
   2acd0:	beq	2ad1c <str_set_visit@@Base+0x1a8>
   2acd4:	add	r2, r2, #1
   2acd8:	mov	r1, #0
   2acdc:	b	2ad00 <str_set_visit@@Base+0x18c>
   2ace0:	cmp	r5, r0
   2ace4:	beq	2ad60 <str_set_visit@@Base+0x1ec>
   2ace8:	and	r3, r9, r2
   2acec:	add	r2, r2, #1
   2acf0:	ldr	r0, [r4, r3, lsl #2]
   2acf4:	add	r3, r4, r3, lsl #2
   2acf8:	cmp	r0, #0
   2acfc:	beq	2ad14 <str_set_visit@@Base+0x1a0>
   2ad00:	cmp	r0, #2
   2ad04:	bne	2ace0 <str_set_visit@@Base+0x16c>
   2ad08:	cmp	r1, #0
   2ad0c:	moveq	r1, r3
   2ad10:	b	2ace8 <str_set_visit@@Base+0x174>
   2ad14:	cmp	r1, #0
   2ad18:	moveq	r1, r3
   2ad1c:	ldr	r3, [r6, #8]
   2ad20:	mov	r0, #0
   2ad24:	add	r3, r3, #1
   2ad28:	str	r3, [r6, #8]
   2ad2c:	str	r7, [r1]
   2ad30:	add	sp, sp, #28
   2ad34:	ldrd	r4, [sp]
   2ad38:	ldrd	r6, [sp, #8]
   2ad3c:	ldrd	r8, [sp, #16]
   2ad40:	add	sp, sp, #24
   2ad44:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad48:	lsl	r1, r1, #1
   2ad4c:	bl	2ae70 <str_set_visit@@Base+0x2fc>
   2ad50:	cmp	r0, #0
   2ad54:	bne	2adb4 <str_set_visit@@Base+0x240>
   2ad58:	ldr	r9, [r6, #12]
   2ad5c:	b	2ac7c <str_set_visit@@Base+0x108>
   2ad60:	cmp	r8, #0
   2ad64:	streq	r7, [r3]
   2ad68:	b	2ad30 <str_set_visit@@Base+0x1bc>
   2ad6c:	ldr	r0, [r6, #8]
   2ad70:	ldr	ip, [r4, r1, lsl #2]
   2ad74:	add	r1, r0, #1
   2ad78:	cmp	ip, #0
   2ad7c:	cmpne	ip, #2
   2ad80:	str	r1, [r6, #8]
   2ad84:	beq	2ada8 <str_set_visit@@Base+0x234>
   2ad88:	add	r2, r2, #1
   2ad8c:	and	r3, r9, r2
   2ad90:	add	r2, r2, #1
   2ad94:	ldr	r1, [r4, r3, lsl #2]
   2ad98:	add	r3, r4, r3, lsl #2
   2ad9c:	cmp	r1, #0
   2ada0:	cmpne	r1, #2
   2ada4:	bne	2ad8c <str_set_visit@@Base+0x218>
   2ada8:	mov	r0, #0
   2adac:	str	r7, [r3]
   2adb0:	b	2ad30 <str_set_visit@@Base+0x1bc>
   2adb4:	ldr	r3, [pc, #132]	; 2ae40 <str_set_visit@@Base+0x2cc>
   2adb8:	ldr	r2, [pc, #132]	; 2ae44 <str_set_visit@@Base+0x2d0>
   2adbc:	ldr	r1, [pc, #132]	; 2ae48 <str_set_visit@@Base+0x2d4>
   2adc0:	ldr	r3, [r4, r3]
   2adc4:	add	r2, pc, r2
   2adc8:	add	r1, pc, r1
   2adcc:	ldr	r0, [r3]
   2add0:	bl	13f58 <fprintf@plt>
   2add4:	mov	r0, #1
   2add8:	bl	13f40 <exit@plt>
   2addc:	ldr	r3, [pc, #104]	; 2ae4c <str_set_visit@@Base+0x2d8>
   2ade0:	mov	r2, #114	; 0x72
   2ade4:	ldr	r1, [pc, #100]	; 2ae50 <str_set_visit@@Base+0x2dc>
   2ade8:	ldr	r0, [pc, #100]	; 2ae54 <str_set_visit@@Base+0x2e0>
   2adec:	add	r3, pc, r3
   2adf0:	add	r1, pc, r1
   2adf4:	add	r0, pc, r0
   2adf8:	bl	1400c <__assert_fail@plt>
   2adfc:	ldr	r3, [pc, #84]	; 2ae58 <str_set_visit@@Base+0x2e4>
   2ae00:	mov	r2, #116	; 0x74
   2ae04:	ldr	r1, [pc, #80]	; 2ae5c <str_set_visit@@Base+0x2e8>
   2ae08:	ldr	r0, [pc, #80]	; 2ae60 <str_set_visit@@Base+0x2ec>
   2ae0c:	add	r3, pc, r3
   2ae10:	add	r1, pc, r1
   2ae14:	add	r0, pc, r0
   2ae18:	bl	1400c <__assert_fail@plt>
   2ae1c:	ldr	r3, [pc, #64]	; 2ae64 <str_set_visit@@Base+0x2f0>
   2ae20:	mov	r2, #115	; 0x73
   2ae24:	ldr	r1, [pc, #60]	; 2ae68 <str_set_visit@@Base+0x2f4>
   2ae28:	ldr	r0, [pc, #60]	; 2ae6c <str_set_visit@@Base+0x2f8>
   2ae2c:	add	r3, pc, r3
   2ae30:	add	r1, pc, r1
   2ae34:	add	r0, pc, r0
   2ae38:	bl	1400c <__assert_fail@plt>
   2ae3c:			; <UNDEFINED> instruction: 0x000403b8
   2ae40:	muleq	r0, ip, r0
   2ae44:	andeq	ip, r2, ip, lsl #12
   2ae48:	andeq	ip, r2, ip, lsr r6
   2ae4c:	andeq	ip, r2, r0, lsr r6
   2ae50:	andeq	ip, r2, r0, lsr r5
   2ae54:	muleq	r2, r4, r5
   2ae58:	andeq	ip, r2, r0, lsl r6
   2ae5c:	andeq	ip, r2, r0, lsl r5
   2ae60:	andeq	ip, r2, r4, lsr #11
   2ae64:	strdeq	ip, [r2], -r0
   2ae68:	strdeq	ip, [r2], -r0
   2ae6c:	andeq	ip, r2, ip, ror #10
   2ae70:	ldr	r3, [r0, #8]
   2ae74:	strd	r4, [sp, #-20]!	; 0xffffffec
   2ae78:	ldr	r5, [r0]
   2ae7c:	strd	r6, [sp, #8]
   2ae80:	mov	r7, r0
   2ae84:	str	lr, [sp, #16]
   2ae88:	sub	sp, sp, #20
   2ae8c:	cmp	r1, r3
   2ae90:	movcc	r1, r3
   2ae94:	cmp	r1, #2
   2ae98:	bls	2af70 <str_set_visit@@Base+0x3fc>
   2ae9c:	mov	r3, #4
   2aea0:	movw	r0, #358	; 0x166
   2aea4:	mul	r2, r0, r3
   2aea8:	lsl	r6, r3, #1
   2aeac:	cmp	r1, r2, lsr #8
   2aeb0:	mov	r3, r6
   2aeb4:	bhi	2aea4 <str_set_visit@@Base+0x330>
   2aeb8:	mov	r1, #4
   2aebc:	mov	r0, r6
   2aec0:	bl	13e74 <calloc@plt>
   2aec4:	cmp	r0, #0
   2aec8:	str	r0, [sp]
   2aecc:	beq	2af78 <str_set_visit@@Base+0x404>
   2aed0:	ldr	r3, [r7, #12]
   2aed4:	mov	r4, #0
   2aed8:	str	r4, [sp, #4]
   2aedc:	str	r4, [sp, #8]
   2aee0:	str	r6, [sp, #12]
   2aee4:	cmp	r3, r4
   2aee8:	moveq	r6, sp
   2aeec:	beq	2af34 <str_set_visit@@Base+0x3c0>
   2aef0:	sub	r5, r5, #4
   2aef4:	mov	r6, sp
   2aef8:	b	2af04 <str_set_visit@@Base+0x390>
   2aefc:	cmp	r3, r4
   2af00:	bls	2af34 <str_set_visit@@Base+0x3c0>
   2af04:	ldr	r2, [r5, #4]!
   2af08:	add	r4, r4, #1
   2af0c:	cmp	r2, #0
   2af10:	cmpne	r2, #2
   2af14:	beq	2aefc <str_set_visit@@Base+0x388>
   2af18:	mov	r3, #3
   2af1c:	mov	r1, r2
   2af20:	mov	r0, r6
   2af24:	bl	2ac24 <str_set_visit@@Base+0xb0>
   2af28:	ldr	r3, [r7, #12]
   2af2c:	cmp	r3, r4
   2af30:	bhi	2af04 <str_set_visit@@Base+0x390>
   2af34:	mov	r0, r7
   2af38:	bl	2abe8 <str_set_visit@@Base+0x74>
   2af3c:	ldr	r3, [sp]
   2af40:	mov	r0, #0
   2af44:	ldmib	r6, {r1, r2}
   2af48:	str	r3, [r7]
   2af4c:	ldr	r3, [r6, #12]
   2af50:	str	r1, [r7, #4]
   2af54:	str	r2, [r7, #8]
   2af58:	str	r3, [r7, #12]
   2af5c:	add	sp, sp, #20
   2af60:	ldrd	r4, [sp]
   2af64:	ldrd	r6, [sp, #8]
   2af68:	add	sp, sp, #16
   2af6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2af70:	mov	r6, #4
   2af74:	b	2aeb8 <str_set_visit@@Base+0x344>
   2af78:	mvn	r0, #0
   2af7c:	b	2af5c <str_set_visit@@Base+0x3e8>
   2af80:	strd	r4, [sp, #-16]!
   2af84:	subs	r5, r0, #0
   2af88:	str	r6, [sp, #8]
   2af8c:	str	lr, [sp, #12]
   2af90:	sub	sp, sp, #24
   2af94:	beq	2b008 <str_set_visit@@Base+0x494>
   2af98:	movw	r3, #15186	; 0x3b52
   2af9c:	movt	r3, #12137	; 0x2f69
   2afa0:	ldr	r4, [r1]
   2afa4:	add	r1, sp, #16
   2afa8:	mov	r6, r2
   2afac:	add	r0, sp, #12
   2afb0:	mov	r2, #4
   2afb4:	str	r3, [sp]
   2afb8:	mov	r3, #0
   2afbc:	str	r1, [sp, #4]
   2afc0:	str	r6, [sp, #12]
   2afc4:	bl	3ce98 <cmetrohash64_1@@Base>
   2afc8:	ldr	r3, [sp, #16]
   2afcc:	sub	r4, r4, #1
   2afd0:	and	r2, r4, r3
   2afd4:	ldr	r0, [r5, r2, lsl #2]
   2afd8:	cmp	r0, #0
   2afdc:	beq	2b008 <str_set_visit@@Base+0x494>
   2afe0:	add	r3, r3, #1
   2afe4:	cmp	r0, #2
   2afe8:	and	r1, r4, r3
   2afec:	beq	2aff8 <str_set_visit@@Base+0x484>
   2aff0:	cmp	r6, r0
   2aff4:	beq	2b00c <str_set_visit@@Base+0x498>
   2aff8:	ldr	r0, [r5, r1, lsl #2]
   2affc:	add	r3, r3, #1
   2b000:	cmp	r0, #0
   2b004:	bne	2afe4 <str_set_visit@@Base+0x470>
   2b008:	mov	r0, #0
   2b00c:	add	sp, sp, #24
   2b010:	ldrd	r4, [sp]
   2b014:	ldr	r6, [sp, #8]
   2b018:	add	sp, sp, #12
   2b01c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b020:	strd	r4, [sp, #-20]!	; 0xffffffec
   2b024:	ldr	r4, [r0]
   2b028:	strd	r6, [sp, #8]
   2b02c:	str	lr, [sp, #16]
   2b030:	sub	sp, sp, #28
   2b034:	cmp	r4, #0
   2b038:	beq	2b0b8 <str_set_visit@@Base+0x544>
   2b03c:	mov	r6, r1
   2b040:	movw	r3, #15186	; 0x3b52
   2b044:	movt	r3, #12137	; 0x2f69
   2b048:	add	r1, sp, #16
   2b04c:	mov	r7, r0
   2b050:	mov	r2, #4
   2b054:	str	r6, [sp, #12]
   2b058:	add	r0, sp, #12
   2b05c:	ldr	r5, [r7, #12]
   2b060:	str	r3, [sp]
   2b064:	mov	r3, #0
   2b068:	str	r1, [sp, #4]
   2b06c:	bl	3ce98 <cmetrohash64_1@@Base>
   2b070:	ldr	r3, [sp, #16]
   2b074:	sub	r5, r5, #1
   2b078:	and	ip, r5, r3
   2b07c:	ldr	r0, [r4, ip, lsl #2]
   2b080:	add	ip, r4, ip, lsl #2
   2b084:	cmp	r0, #0
   2b088:	beq	2b0b8 <str_set_visit@@Base+0x544>
   2b08c:	add	r3, r3, #1
   2b090:	cmp	r0, #2
   2b094:	and	r2, r5, r3
   2b098:	beq	2b0a4 <str_set_visit@@Base+0x530>
   2b09c:	cmp	r6, r0
   2b0a0:	beq	2b0d0 <str_set_visit@@Base+0x55c>
   2b0a4:	ldr	r0, [r4, r2, lsl #2]
   2b0a8:	add	r3, r3, #1
   2b0ac:	add	ip, r4, r2, lsl #2
   2b0b0:	cmp	r0, #0
   2b0b4:	bne	2b090 <str_set_visit@@Base+0x51c>
   2b0b8:	mov	r0, #0
   2b0bc:	add	sp, sp, #28
   2b0c0:	ldrd	r4, [sp]
   2b0c4:	ldrd	r6, [sp, #8]
   2b0c8:	add	sp, sp, #16
   2b0cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0d0:	ldr	r3, [r7, #8]
   2b0d4:	mov	r2, #2
   2b0d8:	str	r2, [ip]
   2b0dc:	sub	r3, r3, #1
   2b0e0:	str	r3, [r7, #8]
   2b0e4:	b	2b0bc <str_set_visit@@Base+0x548>

0002b0e8 <ptr_set_clear@@Base>:
   2b0e8:	b	2abe8 <str_set_visit@@Base+0x74>

0002b0ec <ptr_set_destroy@@Base>:
   2b0ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b0f0:	strd	r6, [sp, #8]
   2b0f4:	mov	r7, r0
   2b0f8:	str	r8, [sp, #16]
   2b0fc:	subs	r8, r1, #0
   2b100:	str	lr, [sp, #20]
   2b104:	beq	2b150 <ptr_set_destroy@@Base+0x64>
   2b108:	ldr	r5, [r0]
   2b10c:	ldr	ip, [r0, #12]
   2b110:	cmp	ip, #0
   2b114:	beq	2b150 <ptr_set_destroy@@Base+0x64>
   2b118:	mov	r6, r2
   2b11c:	sub	r5, r5, #4
   2b120:	mov	r4, #0
   2b124:	ldr	r3, [r5, #4]!
   2b128:	mov	r0, r6
   2b12c:	add	r4, r4, #1
   2b130:	cmp	r3, #0
   2b134:	cmpne	r3, #2
   2b138:	mov	r1, r3
   2b13c:	beq	2b148 <ptr_set_destroy@@Base+0x5c>
   2b140:	blx	r8
   2b144:	ldr	ip, [r7, #12]
   2b148:	cmp	r4, ip
   2b14c:	bcc	2b124 <ptr_set_destroy@@Base+0x38>
   2b150:	mov	r0, r7
   2b154:	ldrd	r4, [sp]
   2b158:	ldrd	r6, [sp, #8]
   2b15c:	ldr	r8, [sp, #16]
   2b160:	ldr	lr, [sp, #20]
   2b164:	add	sp, sp, #24
   2b168:	b	2abe8 <str_set_visit@@Base+0x74>

0002b16c <ptr_set_init@@Base>:
   2b16c:	cmp	r1, #2
   2b170:	strd	r4, [sp, #-16]!
   2b174:	mov	r4, r0
   2b178:	str	r6, [sp, #8]
   2b17c:	str	lr, [sp, #12]
   2b180:	bls	2b1dc <ptr_set_init@@Base+0x70>
   2b184:	mov	r3, #4
   2b188:	movw	r0, #358	; 0x166
   2b18c:	mul	r2, r0, r3
   2b190:	lsl	r5, r3, #1
   2b194:	cmp	r1, r2, lsr #8
   2b198:	mov	r3, r5
   2b19c:	bhi	2b18c <ptr_set_init@@Base+0x20>
   2b1a0:	mov	r1, #4
   2b1a4:	mov	r0, r5
   2b1a8:	bl	13e74 <calloc@plt>
   2b1ac:	cmp	r0, #0
   2b1b0:	str	r0, [r4]
   2b1b4:	beq	2b1e4 <ptr_set_init@@Base+0x78>
   2b1b8:	mov	r3, #0
   2b1bc:	mov	r0, r3
   2b1c0:	str	r3, [r4, #4]
   2b1c4:	str	r3, [r4, #8]
   2b1c8:	str	r5, [r4, #12]
   2b1cc:	ldrd	r4, [sp]
   2b1d0:	ldr	r6, [sp, #8]
   2b1d4:	add	sp, sp, #12
   2b1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b1dc:	mov	r5, #4
   2b1e0:	b	2b1a0 <ptr_set_init@@Base+0x34>
   2b1e4:	mvn	r0, #0
   2b1e8:	b	2b1cc <ptr_set_init@@Base+0x60>

0002b1ec <ptr_set_resize@@Base>:
   2b1ec:	b	2ae70 <str_set_visit@@Base+0x2fc>

0002b1f0 <ptr_set_insert@@Base>:
   2b1f0:	mov	r2, r3
   2b1f4:	ldr	r3, [sp]
   2b1f8:	b	2ac24 <str_set_visit@@Base+0xb0>

0002b1fc <ptr_set_insert_item@@Base>:
   2b1fc:	mov	r3, r2
   2b200:	mov	r2, r1
   2b204:	b	2ac24 <str_set_visit@@Base+0xb0>

0002b208 <ptr_set_find@@Base>:
   2b208:	mov	r3, r0
   2b20c:	mov	r2, r1
   2b210:	ldr	r0, [r3], #12
   2b214:	mov	r1, r3
   2b218:	b	2af80 <str_set_visit@@Base+0x40c>

0002b21c <ptr_set_find_item@@Base>:
   2b21c:	mov	r3, r0
   2b220:	mov	r2, r1
   2b224:	ldr	r0, [r3], #12
   2b228:	mov	r1, r3
   2b22c:	b	2af80 <str_set_visit@@Base+0x40c>

0002b230 <ptr_set_remove@@Base>:
   2b230:	b	2b020 <str_set_visit@@Base+0x4ac>

0002b234 <ptr_set_remove_item@@Base>:
   2b234:	b	2b020 <str_set_visit@@Base+0x4ac>

0002b238 <ptr_set_visit@@Base>:
   2b238:	ldr	ip, [r0, #12]
   2b23c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b240:	ldr	r5, [r0]
   2b244:	strd	r6, [sp, #8]
   2b248:	str	r8, [sp, #16]
   2b24c:	cmp	ip, #0
   2b250:	str	lr, [sp, #20]
   2b254:	beq	2b298 <ptr_set_visit@@Base+0x60>
   2b258:	mov	r6, r2
   2b25c:	mov	r8, r1
   2b260:	mov	r7, r0
   2b264:	sub	r5, r5, #4
   2b268:	mov	r4, #0
   2b26c:	ldr	r3, [r5, #4]!
   2b270:	mov	r0, r6
   2b274:	add	r4, r4, #1
   2b278:	cmp	r3, #0
   2b27c:	cmpne	r3, #2
   2b280:	mov	r1, r3
   2b284:	beq	2b290 <ptr_set_visit@@Base+0x58>
   2b288:	blx	r8
   2b28c:	ldr	ip, [r7, #12]
   2b290:	cmp	r4, ip
   2b294:	bcc	2b26c <ptr_set_visit@@Base+0x34>
   2b298:	ldrd	r4, [sp]
   2b29c:	ldrd	r6, [sp, #8]
   2b2a0:	ldr	r8, [sp, #16]
   2b2a4:	add	sp, sp, #20
   2b2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b2ac:	str	r4, [sp, #-8]!
   2b2b0:	mov	r4, r0
   2b2b4:	ldr	r0, [r0]
   2b2b8:	str	lr, [sp, #4]
   2b2bc:	cmp	r0, #0
   2b2c0:	beq	2b2c8 <ptr_set_visit@@Base+0x90>
   2b2c4:	bl	13ea4 <free@plt>
   2b2c8:	mov	r3, #0
   2b2cc:	str	r3, [r4]
   2b2d0:	str	r3, [r4, #4]
   2b2d4:	str	r3, [r4, #8]
   2b2d8:	str	r3, [r4, #12]
   2b2dc:	ldr	r4, [sp]
   2b2e0:	add	sp, sp, #4
   2b2e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b2e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b2ec:	ldr	r4, [pc, #592]	; 2b544 <ptr_set_visit@@Base+0x30c>
   2b2f0:	strd	r6, [sp, #8]
   2b2f4:	strd	r8, [sp, #16]
   2b2f8:	strd	sl, [sp, #24]
   2b2fc:	subs	fp, r3, #0
   2b300:	str	lr, [sp, #32]
   2b304:	sub	sp, sp, #28
   2b308:	add	r4, pc, r4
   2b30c:	str	r1, [sp, #8]
   2b310:	beq	2b4dc <ptr_set_visit@@Base+0x2a4>
   2b314:	cmp	fp, #2
   2b318:	beq	2b4bc <ptr_set_visit@@Base+0x284>
   2b31c:	cmp	fp, #1
   2b320:	beq	2b4fc <ptr_set_visit@@Base+0x2c4>
   2b324:	mov	r3, #179	; 0xb3
   2b328:	ldr	r1, [r0, #8]
   2b32c:	mov	r9, r2
   2b330:	mov	sl, r0
   2b334:	ldr	r8, [r0, #12]
   2b338:	mul	r3, r3, r8
   2b33c:	cmp	r1, r3, lsr #8
   2b340:	bcs	2b434 <ptr_set_visit@@Base+0x1fc>
   2b344:	movw	r1, #15186	; 0x3b52
   2b348:	movt	r1, #12137	; 0x2f69
   2b34c:	ldr	r7, [sl]
   2b350:	mov	r3, #0
   2b354:	mov	r2, r9
   2b358:	str	r1, [sp]
   2b35c:	add	r1, sp, #16
   2b360:	sub	r8, r8, #1
   2b364:	ldr	r0, [sp, #8]
   2b368:	str	r1, [sp, #4]
   2b36c:	bl	3ce98 <cmetrohash64_1@@Base>
   2b370:	ldr	r6, [sp, #16]
   2b374:	ldr	r3, [sp, #64]	; 0x40
   2b378:	sub	r3, r3, #2
   2b37c:	cmp	r3, #1
   2b380:	and	r3, r8, r6
   2b384:	add	r4, r7, r3, lsl #2
   2b388:	bls	2b474 <ptr_set_visit@@Base+0x23c>
   2b38c:	ldr	r5, [r7, r3, lsl #2]
   2b390:	cmp	r5, #0
   2b394:	moveq	r3, r4
   2b398:	beq	2b45c <ptr_set_visit@@Base+0x224>
   2b39c:	mov	r3, #0
   2b3a0:	add	r6, r6, #1
   2b3a4:	str	sl, [sp, #12]
   2b3a8:	mov	sl, r8
   2b3ac:	mov	r8, r3
   2b3b0:	b	2b3dc <ptr_set_visit@@Base+0x1a4>
   2b3b4:	ldr	r1, [r5, #4]
   2b3b8:	ldr	r2, [r1, #4]
   2b3bc:	cmp	r9, r2
   2b3c0:	beq	2b3f0 <ptr_set_visit@@Base+0x1b8>
   2b3c4:	and	r4, sl, r6
   2b3c8:	add	r6, r6, #1
   2b3cc:	ldr	r5, [r7, r4, lsl #2]
   2b3d0:	add	r4, r7, r4, lsl #2
   2b3d4:	cmp	r5, #0
   2b3d8:	beq	2b44c <ptr_set_visit@@Base+0x214>
   2b3dc:	cmp	r5, #2
   2b3e0:	bne	2b3b4 <ptr_set_visit@@Base+0x17c>
   2b3e4:	cmp	r8, #0
   2b3e8:	moveq	r8, r4
   2b3ec:	b	2b3c4 <ptr_set_visit@@Base+0x18c>
   2b3f0:	mov	r2, r9
   2b3f4:	ldr	r1, [r1]
   2b3f8:	ldr	r0, [sp, #8]
   2b3fc:	bl	13ec8 <memcmp@plt>
   2b400:	cmp	r0, #0
   2b404:	bne	2b3c4 <ptr_set_visit@@Base+0x18c>
   2b408:	ldr	r3, [sp, #64]	; 0x40
   2b40c:	cmp	r3, #0
   2b410:	streq	fp, [r4]
   2b414:	mov	r0, r5
   2b418:	add	sp, sp, #28
   2b41c:	ldrd	r4, [sp]
   2b420:	ldrd	r6, [sp, #8]
   2b424:	ldrd	r8, [sp, #16]
   2b428:	ldrd	sl, [sp, #24]
   2b42c:	add	sp, sp, #32
   2b430:	pop	{pc}		; (ldr pc, [sp], #4)
   2b434:	lsl	r1, r1, #1
   2b438:	bl	2b578 <ptr_set_visit@@Base+0x340>
   2b43c:	cmp	r0, #0
   2b440:	bne	2b51c <ptr_set_visit@@Base+0x2e4>
   2b444:	ldr	r8, [sl, #12]
   2b448:	b	2b344 <ptr_set_visit@@Base+0x10c>
   2b44c:	ldr	sl, [sp, #12]
   2b450:	cmp	r8, #0
   2b454:	mov	r3, r8
   2b458:	moveq	r3, r4
   2b45c:	ldr	r2, [sl, #8]
   2b460:	mov	r5, #0
   2b464:	add	r2, r2, #1
   2b468:	str	r2, [sl, #8]
   2b46c:	str	fp, [r3]
   2b470:	b	2b414 <ptr_set_visit@@Base+0x1dc>
   2b474:	ldr	r2, [sl, #8]
   2b478:	ldr	r1, [r7, r3, lsl #2]
   2b47c:	add	r3, r2, #1
   2b480:	cmp	r1, #2
   2b484:	cmpne	r1, #0
   2b488:	str	r3, [sl, #8]
   2b48c:	beq	2b4b0 <ptr_set_visit@@Base+0x278>
   2b490:	add	r6, r6, #1
   2b494:	and	r4, r8, r6
   2b498:	add	r6, r6, #1
   2b49c:	ldr	r3, [r7, r4, lsl #2]
   2b4a0:	add	r4, r7, r4, lsl #2
   2b4a4:	cmp	r3, #0
   2b4a8:	cmpne	r3, #2
   2b4ac:	bne	2b494 <ptr_set_visit@@Base+0x25c>
   2b4b0:	mov	r5, #0
   2b4b4:	str	fp, [r4]
   2b4b8:	b	2b414 <ptr_set_visit@@Base+0x1dc>
   2b4bc:	ldr	r3, [pc, #132]	; 2b548 <ptr_set_visit@@Base+0x310>
   2b4c0:	mov	r2, #115	; 0x73
   2b4c4:	ldr	r1, [pc, #128]	; 2b54c <ptr_set_visit@@Base+0x314>
   2b4c8:	ldr	r0, [pc, #128]	; 2b550 <ptr_set_visit@@Base+0x318>
   2b4cc:	add	r3, pc, r3
   2b4d0:	add	r1, pc, r1
   2b4d4:	add	r0, pc, r0
   2b4d8:	bl	1400c <__assert_fail@plt>
   2b4dc:	ldr	r3, [pc, #112]	; 2b554 <ptr_set_visit@@Base+0x31c>
   2b4e0:	mov	r2, #114	; 0x72
   2b4e4:	ldr	r1, [pc, #108]	; 2b558 <ptr_set_visit@@Base+0x320>
   2b4e8:	ldr	r0, [pc, #108]	; 2b55c <ptr_set_visit@@Base+0x324>
   2b4ec:	add	r3, pc, r3
   2b4f0:	add	r1, pc, r1
   2b4f4:	add	r0, pc, r0
   2b4f8:	bl	1400c <__assert_fail@plt>
   2b4fc:	ldr	r3, [pc, #92]	; 2b560 <ptr_set_visit@@Base+0x328>
   2b500:	mov	r2, #116	; 0x74
   2b504:	ldr	r1, [pc, #88]	; 2b564 <ptr_set_visit@@Base+0x32c>
   2b508:	ldr	r0, [pc, #88]	; 2b568 <ptr_set_visit@@Base+0x330>
   2b50c:	add	r3, pc, r3
   2b510:	add	r1, pc, r1
   2b514:	add	r0, pc, r0
   2b518:	bl	1400c <__assert_fail@plt>
   2b51c:	ldr	r3, [pc, #72]	; 2b56c <ptr_set_visit@@Base+0x334>
   2b520:	ldr	r2, [pc, #72]	; 2b570 <ptr_set_visit@@Base+0x338>
   2b524:	ldr	r1, [pc, #72]	; 2b574 <ptr_set_visit@@Base+0x33c>
   2b528:	ldr	r3, [r4, r3]
   2b52c:	add	r2, pc, r2
   2b530:	add	r1, pc, r1
   2b534:	ldr	r0, [r3]
   2b538:	bl	13f58 <fprintf@plt>
   2b53c:	mov	r0, #1
   2b540:	bl	13f40 <exit@plt>
   2b544:	strdeq	pc, [r3], -r0
   2b548:	andeq	fp, r2, r8, ror #30
   2b54c:	andeq	fp, r2, r0, asr lr
   2b550:	andeq	fp, r2, ip, asr #29
   2b554:	andeq	fp, r2, r8, asr #30
   2b558:	andeq	fp, r2, r0, lsr lr
   2b55c:	muleq	r2, r4, lr
   2b560:	andeq	fp, r2, r8, lsr #30
   2b564:	andeq	fp, r2, r0, lsl lr
   2b568:	andeq	fp, r2, r4, lsr #29
   2b56c:	muleq	r0, ip, r0
   2b570:	andeq	fp, r2, r4, lsr #29
   2b574:	ldrdeq	fp, [r2], -r4
   2b578:	ldr	r3, [r0, #8]
   2b57c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b580:	strd	r6, [sp, #8]
   2b584:	mov	r7, r0
   2b588:	str	r8, [sp, #16]
   2b58c:	str	lr, [sp, #20]
   2b590:	sub	sp, sp, #24
   2b594:	cmp	r1, r3
   2b598:	ldr	r6, [r0]
   2b59c:	movcc	r1, r3
   2b5a0:	cmp	r1, #2
   2b5a4:	bls	2b684 <ptr_set_visit@@Base+0x44c>
   2b5a8:	mov	r3, #4
   2b5ac:	movw	r0, #358	; 0x166
   2b5b0:	mul	r2, r0, r3
   2b5b4:	lsl	r5, r3, #1
   2b5b8:	cmp	r1, r2, lsr #8
   2b5bc:	mov	r3, r5
   2b5c0:	bhi	2b5b0 <ptr_set_visit@@Base+0x378>
   2b5c4:	mov	r1, #4
   2b5c8:	mov	r0, r5
   2b5cc:	bl	13e74 <calloc@plt>
   2b5d0:	cmp	r0, #0
   2b5d4:	str	r0, [sp, #8]
   2b5d8:	beq	2b68c <ptr_set_visit@@Base+0x454>
   2b5dc:	ldr	r2, [r7, #12]
   2b5e0:	mov	r4, #0
   2b5e4:	str	r4, [sp, #12]
   2b5e8:	strd	r4, [sp, #16]
   2b5ec:	cmp	r2, r4
   2b5f0:	addeq	r6, sp, #8
   2b5f4:	beq	2b644 <ptr_set_visit@@Base+0x40c>
   2b5f8:	sub	r5, r6, #4
   2b5fc:	mov	r8, #3
   2b600:	add	r6, sp, #8
   2b604:	b	2b610 <ptr_set_visit@@Base+0x3d8>
   2b608:	cmp	r2, r4
   2b60c:	bls	2b644 <ptr_set_visit@@Base+0x40c>
   2b610:	ldr	r3, [r5, #4]!
   2b614:	add	r4, r4, #1
   2b618:	cmp	r3, #0
   2b61c:	cmpne	r3, #2
   2b620:	beq	2b608 <ptr_set_visit@@Base+0x3d0>
   2b624:	ldr	r2, [r3, #4]
   2b628:	mov	r0, r6
   2b62c:	ldm	r2, {r1, r2}
   2b630:	str	r8, [sp]
   2b634:	bl	2b2e8 <ptr_set_visit@@Base+0xb0>
   2b638:	ldr	r2, [r7, #12]
   2b63c:	cmp	r2, r4
   2b640:	bhi	2b610 <ptr_set_visit@@Base+0x3d8>
   2b644:	mov	r0, r7
   2b648:	bl	2b2ac <ptr_set_visit@@Base+0x74>
   2b64c:	ldr	r3, [sp, #8]
   2b650:	mov	r0, #0
   2b654:	ldmib	r6, {r1, r2}
   2b658:	str	r3, [r7]
   2b65c:	ldr	r3, [r6, #12]
   2b660:	str	r1, [r7, #4]
   2b664:	str	r2, [r7, #8]
   2b668:	str	r3, [r7, #12]
   2b66c:	add	sp, sp, #24
   2b670:	ldrd	r4, [sp]
   2b674:	ldrd	r6, [sp, #8]
   2b678:	ldr	r8, [sp, #16]
   2b67c:	add	sp, sp, #20
   2b680:	pop	{pc}		; (ldr pc, [sp], #4)
   2b684:	mov	r5, #4
   2b688:	b	2b5c4 <ptr_set_visit@@Base+0x38c>
   2b68c:	mvn	r0, #0
   2b690:	b	2b66c <ptr_set_visit@@Base+0x434>
   2b694:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b698:	ldr	r5, [r0]
   2b69c:	strd	r6, [sp, #8]
   2b6a0:	strd	r8, [sp, #16]
   2b6a4:	strd	sl, [sp, #24]
   2b6a8:	str	lr, [sp, #32]
   2b6ac:	sub	sp, sp, #20
   2b6b0:	cmp	r5, #0
   2b6b4:	beq	2b788 <ptr_set_visit@@Base+0x550>
   2b6b8:	mov	r9, r1
   2b6bc:	movw	r1, #15186	; 0x3b52
   2b6c0:	movt	r1, #12137	; 0x2f69
   2b6c4:	mov	r8, r0
   2b6c8:	ldr	r6, [r8, #12]
   2b6cc:	mov	r3, #0
   2b6d0:	mov	r0, r9
   2b6d4:	str	r1, [sp]
   2b6d8:	add	r1, sp, #8
   2b6dc:	mov	r7, r2
   2b6e0:	str	r1, [sp, #4]
   2b6e4:	bl	3ce98 <cmetrohash64_1@@Base>
   2b6e8:	ldr	sl, [sp, #8]
   2b6ec:	sub	r6, r6, #1
   2b6f0:	and	r3, r6, sl
   2b6f4:	ldr	fp, [r5, r3, lsl #2]
   2b6f8:	add	r4, r5, r3, lsl #2
   2b6fc:	cmp	fp, #0
   2b700:	beq	2b788 <ptr_set_visit@@Base+0x550>
   2b704:	add	sl, sl, #1
   2b708:	b	2b724 <ptr_set_visit@@Base+0x4ec>
   2b70c:	and	r3, r6, sl
   2b710:	add	sl, sl, #1
   2b714:	ldr	fp, [r5, r3, lsl #2]
   2b718:	add	r4, r5, r3, lsl #2
   2b71c:	cmp	fp, #0
   2b720:	beq	2b788 <ptr_set_visit@@Base+0x550>
   2b724:	cmp	fp, #2
   2b728:	beq	2b70c <ptr_set_visit@@Base+0x4d4>
   2b72c:	ldr	r3, [fp, #4]
   2b730:	ldr	r2, [r3, #4]
   2b734:	cmp	r7, r2
   2b738:	bne	2b70c <ptr_set_visit@@Base+0x4d4>
   2b73c:	mov	r2, r7
   2b740:	mov	r0, r9
   2b744:	ldr	r1, [r3]
   2b748:	bl	13ec8 <memcmp@plt>
   2b74c:	cmp	r0, #0
   2b750:	bne	2b70c <ptr_set_visit@@Base+0x4d4>
   2b754:	ldr	r3, [r8, #8]
   2b758:	mov	r2, #2
   2b75c:	str	r2, [r4]
   2b760:	sub	r3, r3, #1
   2b764:	str	r3, [r8, #8]
   2b768:	mov	r0, fp
   2b76c:	add	sp, sp, #20
   2b770:	ldrd	r4, [sp]
   2b774:	ldrd	r6, [sp, #8]
   2b778:	ldrd	r8, [sp, #16]
   2b77c:	ldrd	sl, [sp, #24]
   2b780:	add	sp, sp, #32
   2b784:	pop	{pc}		; (ldr pc, [sp], #4)
   2b788:	mov	fp, #0
   2b78c:	b	2b768 <ptr_set_visit@@Base+0x530>
   2b790:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2b794:	strd	r6, [sp, #8]
   2b798:	subs	r7, r0, #0
   2b79c:	strd	r8, [sp, #16]
   2b7a0:	str	lr, [sp, #24]
   2b7a4:	sub	sp, sp, #20
   2b7a8:	beq	2b85c <ptr_set_visit@@Base+0x624>
   2b7ac:	mov	r6, r3
   2b7b0:	movw	r3, #15186	; 0x3b52
   2b7b4:	movt	r3, #12137	; 0x2f69
   2b7b8:	ldr	r8, [r1]
   2b7bc:	add	r1, sp, #8
   2b7c0:	mov	r9, r2
   2b7c4:	mov	r2, r6
   2b7c8:	mov	r0, r9
   2b7cc:	str	r3, [sp]
   2b7d0:	mov	r3, #0
   2b7d4:	str	r1, [sp, #4]
   2b7d8:	bl	3ce98 <cmetrohash64_1@@Base>
   2b7dc:	ldr	r5, [sp, #8]
   2b7e0:	sub	r8, r8, #1
   2b7e4:	and	r3, r8, r5
   2b7e8:	ldr	r4, [r7, r3, lsl #2]
   2b7ec:	cmp	r4, #0
   2b7f0:	beq	2b85c <ptr_set_visit@@Base+0x624>
   2b7f4:	add	r5, r5, #1
   2b7f8:	b	2b810 <ptr_set_visit@@Base+0x5d8>
   2b7fc:	and	r1, r8, r5
   2b800:	add	r5, r5, #1
   2b804:	ldr	r4, [r7, r1, lsl #2]
   2b808:	cmp	r4, #0
   2b80c:	beq	2b85c <ptr_set_visit@@Base+0x624>
   2b810:	cmp	r4, #2
   2b814:	beq	2b7fc <ptr_set_visit@@Base+0x5c4>
   2b818:	ldr	r3, [r4, #4]
   2b81c:	ldr	r2, [r3, #4]
   2b820:	cmp	r6, r2
   2b824:	bne	2b7fc <ptr_set_visit@@Base+0x5c4>
   2b828:	mov	r2, r6
   2b82c:	mov	r0, r9
   2b830:	ldr	r1, [r3]
   2b834:	bl	13ec8 <memcmp@plt>
   2b838:	cmp	r0, #0
   2b83c:	bne	2b7fc <ptr_set_visit@@Base+0x5c4>
   2b840:	mov	r0, r4
   2b844:	add	sp, sp, #20
   2b848:	ldrd	r4, [sp]
   2b84c:	ldrd	r6, [sp, #8]
   2b850:	ldrd	r8, [sp, #16]
   2b854:	add	sp, sp, #24
   2b858:	pop	{pc}		; (ldr pc, [sp], #4)
   2b85c:	mov	r4, #0
   2b860:	b	2b840 <ptr_set_visit@@Base+0x608>

0002b864 <fb_symbol_table_clear@@Base>:
   2b864:	b	2b2ac <ptr_set_visit@@Base+0x74>

0002b868 <fb_symbol_table_destroy@@Base>:
   2b868:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b86c:	strd	r6, [sp, #8]
   2b870:	mov	r7, r0
   2b874:	str	r8, [sp, #16]
   2b878:	subs	r8, r1, #0
   2b87c:	str	lr, [sp, #20]
   2b880:	beq	2b8cc <fb_symbol_table_destroy@@Base+0x64>
   2b884:	ldr	r5, [r0]
   2b888:	ldr	ip, [r0, #12]
   2b88c:	cmp	ip, #0
   2b890:	beq	2b8cc <fb_symbol_table_destroy@@Base+0x64>
   2b894:	mov	r6, r2
   2b898:	sub	r5, r5, #4
   2b89c:	mov	r4, #0
   2b8a0:	ldr	r3, [r5, #4]!
   2b8a4:	mov	r0, r6
   2b8a8:	add	r4, r4, #1
   2b8ac:	cmp	r3, #0
   2b8b0:	cmpne	r3, #2
   2b8b4:	mov	r1, r3
   2b8b8:	beq	2b8c4 <fb_symbol_table_destroy@@Base+0x5c>
   2b8bc:	blx	r8
   2b8c0:	ldr	ip, [r7, #12]
   2b8c4:	cmp	r4, ip
   2b8c8:	bcc	2b8a0 <fb_symbol_table_destroy@@Base+0x38>
   2b8cc:	mov	r0, r7
   2b8d0:	ldrd	r4, [sp]
   2b8d4:	ldrd	r6, [sp, #8]
   2b8d8:	ldr	r8, [sp, #16]
   2b8dc:	ldr	lr, [sp, #20]
   2b8e0:	add	sp, sp, #24
   2b8e4:	b	2b2ac <ptr_set_visit@@Base+0x74>

0002b8e8 <fb_symbol_table_init@@Base>:
   2b8e8:	cmp	r1, #2
   2b8ec:	strd	r4, [sp, #-16]!
   2b8f0:	mov	r4, r0
   2b8f4:	str	r6, [sp, #8]
   2b8f8:	str	lr, [sp, #12]
   2b8fc:	bls	2b958 <fb_symbol_table_init@@Base+0x70>
   2b900:	mov	r3, #4
   2b904:	movw	r0, #358	; 0x166
   2b908:	mul	r2, r0, r3
   2b90c:	lsl	r5, r3, #1
   2b910:	cmp	r1, r2, lsr #8
   2b914:	mov	r3, r5
   2b918:	bhi	2b908 <fb_symbol_table_init@@Base+0x20>
   2b91c:	mov	r1, #4
   2b920:	mov	r0, r5
   2b924:	bl	13e74 <calloc@plt>
   2b928:	cmp	r0, #0
   2b92c:	str	r0, [r4]
   2b930:	beq	2b960 <fb_symbol_table_init@@Base+0x78>
   2b934:	mov	r3, #0
   2b938:	mov	r0, r3
   2b93c:	str	r3, [r4, #4]
   2b940:	str	r3, [r4, #8]
   2b944:	str	r5, [r4, #12]
   2b948:	ldrd	r4, [sp]
   2b94c:	ldr	r6, [sp, #8]
   2b950:	add	sp, sp, #12
   2b954:	pop	{pc}		; (ldr pc, [sp], #4)
   2b958:	mov	r5, #4
   2b95c:	b	2b91c <fb_symbol_table_init@@Base+0x34>
   2b960:	mvn	r0, #0
   2b964:	b	2b948 <fb_symbol_table_init@@Base+0x60>

0002b968 <fb_symbol_table_resize@@Base>:
   2b968:	b	2b578 <ptr_set_visit@@Base+0x340>

0002b96c <fb_symbol_table_insert@@Base>:
   2b96c:	b	2b2e8 <ptr_set_visit@@Base+0xb0>

0002b970 <fb_symbol_table_insert_item@@Base>:
   2b970:	ldr	ip, [r1, #4]
   2b974:	mov	r3, r1
   2b978:	push	{lr}		; (str lr, [sp, #-4]!)
   2b97c:	sub	sp, sp, #12
   2b980:	ldm	ip, {r1, ip}
   2b984:	str	r2, [sp]
   2b988:	mov	r2, ip
   2b98c:	bl	2b2e8 <ptr_set_visit@@Base+0xb0>
   2b990:	add	sp, sp, #12
   2b994:	pop	{pc}		; (ldr pc, [sp], #4)

0002b998 <fb_symbol_table_find@@Base>:
   2b998:	mov	ip, r0
   2b99c:	mov	r3, r2
   2b9a0:	ldr	r0, [ip], #12
   2b9a4:	mov	r2, r1
   2b9a8:	mov	r1, ip
   2b9ac:	b	2b790 <ptr_set_visit@@Base+0x558>

0002b9b0 <fb_symbol_table_find_item@@Base>:
   2b9b0:	mov	r3, r0
   2b9b4:	ldr	ip, [r1, #4]
   2b9b8:	ldr	r0, [r3], #12
   2b9bc:	ldr	r2, [ip]
   2b9c0:	mov	r1, r3
   2b9c4:	ldr	r3, [ip, #4]
   2b9c8:	b	2b790 <ptr_set_visit@@Base+0x558>

0002b9cc <fb_symbol_table_remove@@Base>:
   2b9cc:	b	2b694 <ptr_set_visit@@Base+0x45c>

0002b9d0 <fb_symbol_table_remove_item@@Base>:
   2b9d0:	ldr	r3, [r1, #4]
   2b9d4:	ldm	r3, {r1, r2}
   2b9d8:	b	2b694 <ptr_set_visit@@Base+0x45c>

0002b9dc <fb_symbol_table_visit@@Base>:
   2b9dc:	ldr	ip, [r0, #12]
   2b9e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b9e4:	ldr	r5, [r0]
   2b9e8:	strd	r6, [sp, #8]
   2b9ec:	str	r8, [sp, #16]
   2b9f0:	cmp	ip, #0
   2b9f4:	str	lr, [sp, #20]
   2b9f8:	beq	2ba3c <fb_symbol_table_visit@@Base+0x60>
   2b9fc:	mov	r6, r2
   2ba00:	mov	r8, r1
   2ba04:	mov	r7, r0
   2ba08:	sub	r5, r5, #4
   2ba0c:	mov	r4, #0
   2ba10:	ldr	r3, [r5, #4]!
   2ba14:	mov	r0, r6
   2ba18:	add	r4, r4, #1
   2ba1c:	cmp	r3, #0
   2ba20:	cmpne	r3, #2
   2ba24:	mov	r1, r3
   2ba28:	beq	2ba34 <fb_symbol_table_visit@@Base+0x58>
   2ba2c:	blx	r8
   2ba30:	ldr	ip, [r7, #12]
   2ba34:	cmp	r4, ip
   2ba38:	bcc	2ba10 <fb_symbol_table_visit@@Base+0x34>
   2ba3c:	ldrd	r4, [sp]
   2ba40:	ldrd	r6, [sp, #8]
   2ba44:	ldr	r8, [sp, #16]
   2ba48:	add	sp, sp, #20
   2ba4c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba50:	str	r4, [sp, #-8]!
   2ba54:	mov	r4, r0
   2ba58:	ldr	r0, [r0]
   2ba5c:	str	lr, [sp, #4]
   2ba60:	cmp	r0, #0
   2ba64:	beq	2ba6c <fb_symbol_table_visit@@Base+0x90>
   2ba68:	bl	13ea4 <free@plt>
   2ba6c:	mov	r3, #0
   2ba70:	str	r3, [r4]
   2ba74:	str	r3, [r4, #4]
   2ba78:	str	r3, [r4, #8]
   2ba7c:	str	r3, [r4, #12]
   2ba80:	ldr	r4, [sp]
   2ba84:	add	sp, sp, #4
   2ba88:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2ba90:	cmp	r3, #0
   2ba94:	ldr	r4, [pc, #1356]	; 2bfe8 <fb_symbol_table_visit@@Base+0x60c>
   2ba98:	strd	r6, [sp, #8]
   2ba9c:	strd	r8, [sp, #16]
   2baa0:	strd	sl, [sp, #24]
   2baa4:	str	lr, [sp, #32]
   2baa8:	sub	sp, sp, #28
   2baac:	add	r4, pc, r4
   2bab0:	str	r2, [sp, #4]
   2bab4:	str	r1, [sp, #8]
   2bab8:	str	r3, [sp, #12]
   2babc:	str	r0, [sp, #16]
   2bac0:	beq	2bfc8 <fb_symbol_table_visit@@Base+0x5ec>
   2bac4:	ldr	r3, [sp, #12]
   2bac8:	cmp	r3, #2
   2bacc:	beq	2bf80 <fb_symbol_table_visit@@Base+0x5a4>
   2bad0:	ldr	r3, [sp, #12]
   2bad4:	cmp	r3, #1
   2bad8:	beq	2bf60 <fb_symbol_table_visit@@Base+0x584>
   2badc:	ldr	r5, [sp, #16]
   2bae0:	mov	r3, #179	; 0xb3
   2bae4:	ldr	r1, [r5, #8]
   2bae8:	ldr	r2, [r5, #12]
   2baec:	mul	r3, r3, r2
   2baf0:	cmp	r1, r3, lsr #8
   2baf4:	bcs	2be30 <fb_symbol_table_visit@@Base+0x454>
   2baf8:	sub	r3, r2, #1
   2bafc:	ldr	r5, [sp, #4]
   2bb00:	str	r3, [sp]
   2bb04:	ldr	r3, [sp, #16]
   2bb08:	cmp	r5, #0
   2bb0c:	ldr	fp, [r3]
   2bb10:	ble	2be48 <fb_symbol_table_visit@@Base+0x46c>
   2bb14:	movw	r9, #11863	; 0x2e57
   2bb18:	movt	r9, #12137	; 0x2f69
   2bb1c:	ldmib	sp, {r5, r6}
   2bb20:	movw	r8, #15186	; 0x3b52
   2bb24:	movt	r8, #12137	; 0x2f69
   2bb28:	movw	r7, #31153	; 0x79b1
   2bb2c:	movt	r7, #40503	; 0x9e37
   2bb30:	mov	r2, #0
   2bb34:	movw	sl, #5381	; 0x1505
   2bb38:	cmp	r5, #0
   2bb3c:	ldrb	ip, [r6]
   2bb40:	beq	2bbe4 <fb_symbol_table_visit@@Base+0x208>
   2bb44:	cmp	ip, #46	; 0x2e
   2bb48:	beq	2bef0 <fb_symbol_table_visit@@Base+0x514>
   2bb4c:	mov	r3, r6
   2bb50:	mov	r0, #0
   2bb54:	b	2bb68 <fb_symbol_table_visit@@Base+0x18c>
   2bb58:	ldrb	lr, [r3, #1]!
   2bb5c:	cmp	lr, #46	; 0x2e
   2bb60:	beq	2bd74 <fb_symbol_table_visit@@Base+0x398>
   2bb64:	mov	r0, r1
   2bb68:	add	r1, r0, #1
   2bb6c:	cmp	r1, r5
   2bb70:	bne	2bb58 <fb_symbol_table_visit@@Base+0x17c>
   2bb74:	cmp	r0, #0
   2bb78:	beq	2bbf8 <fb_symbol_table_visit@@Base+0x21c>
   2bb7c:	cmp	ip, #0
   2bb80:	mov	r1, r5
   2bb84:	add	lr, r6, #1
   2bb88:	beq	2bbf8 <fb_symbol_table_visit@@Base+0x21c>
   2bb8c:	add	r0, r6, r0
   2bb90:	mov	r3, r9
   2bb94:	b	2bba4 <fb_symbol_table_visit@@Base+0x1c8>
   2bb98:	ldrb	ip, [lr], #1
   2bb9c:	cmp	ip, #0
   2bba0:	beq	2bbb4 <fb_symbol_table_visit@@Base+0x1d8>
   2bba4:	add	r3, r3, r3, lsl #5
   2bba8:	cmp	lr, r0
   2bbac:	eor	r3, r3, ip
   2bbb0:	bne	2bb98 <fb_symbol_table_visit@@Base+0x1bc>
   2bbb4:	eor	r3, r3, r2
   2bbb8:	cmp	r5, r1
   2bbbc:	eor	r3, r3, r8
   2bbc0:	mul	r2, r7, r3
   2bbc4:	beq	2bc0c <fb_symbol_table_visit@@Base+0x230>
   2bbc8:	mvn	r3, r1
   2bbcc:	add	r1, r1, #1
   2bbd0:	add	r5, r5, r3
   2bbd4:	add	r6, r6, r1
   2bbd8:	cmp	r5, #0
   2bbdc:	ldrb	ip, [r6]
   2bbe0:	bne	2bb44 <fb_symbol_table_visit@@Base+0x168>
   2bbe4:	cmp	ip, #0
   2bbe8:	mov	r1, r5
   2bbec:	mvn	r0, #0
   2bbf0:	add	lr, r6, #1
   2bbf4:	bne	2bb8c <fb_symbol_table_visit@@Base+0x1b0>
   2bbf8:	eor	r4, r2, #5376	; 0x1500
   2bbfc:	movw	r2, #31153	; 0x79b1
   2bc00:	movt	r2, #40503	; 0x9e37
   2bc04:	eor	r4, r4, #5
   2bc08:	mul	r2, r2, r4
   2bc0c:	ldr	r3, [sp]
   2bc10:	and	r5, r3, r2
   2bc14:	add	r5, fp, r5, lsl #2
   2bc18:	ldr	r3, [sp, #64]	; 0x40
   2bc1c:	ldr	r7, [r5]
   2bc20:	sub	r3, r3, #2
   2bc24:	cmp	r3, #1
   2bc28:	bls	2bf00 <fb_symbol_table_visit@@Base+0x524>
   2bc2c:	cmp	r7, #0
   2bc30:	moveq	r8, r5
   2bc34:	beq	2bd38 <fb_symbol_table_visit@@Base+0x35c>
   2bc38:	mov	r8, #0
   2bc3c:	add	r4, r2, #1
   2bc40:	mov	sl, r8
   2bc44:	cmp	r7, #2
   2bc48:	beq	2bd94 <fb_symbol_table_visit@@Base+0x3b8>
   2bc4c:	ldr	r0, [sp, #4]
   2bc50:	ldr	r6, [r7]
   2bc54:	cmp	r0, #0
   2bc58:	ble	2bda0 <fb_symbol_table_visit@@Base+0x3c4>
   2bc5c:	cmp	r6, #0
   2bc60:	beq	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bc64:	ldr	r3, [r6, #4]
   2bc68:	ldr	r2, [r3]
   2bc6c:	ldr	r1, [r3, #4]
   2bc70:	cmp	r0, r1
   2bc74:	bcc	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bc78:	ldr	ip, [sp, #8]
   2bc7c:	str	r5, [sp, #20]
   2bc80:	mov	r5, r0
   2bc84:	cmp	r1, #0
   2bc88:	beq	2bee8 <fb_symbol_table_visit@@Base+0x50c>
   2bc8c:	ldrb	r0, [ip]
   2bc90:	ldrb	r3, [r2]
   2bc94:	cmp	r0, r3
   2bc98:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bc9c:	sub	r0, r1, #1
   2bca0:	mov	r3, ip
   2bca4:	add	r0, r0, ip
   2bca8:	rsb	r9, ip, #1
   2bcac:	b	2bcc0 <fb_symbol_table_visit@@Base+0x2e4>
   2bcb0:	ldrb	r8, [r2, #1]!
   2bcb4:	ldrb	lr, [r3, #1]!
   2bcb8:	cmp	r8, lr
   2bcbc:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bcc0:	cmp	r0, r3
   2bcc4:	add	lr, r9, r3
   2bcc8:	bne	2bcb0 <fb_symbol_table_visit@@Base+0x2d4>
   2bccc:	cmp	r1, r5
   2bcd0:	beq	2be14 <fb_symbol_table_visit@@Base+0x438>
   2bcd4:	ldrb	r3, [ip, lr]
   2bcd8:	cmp	r3, #46	; 0x2e
   2bcdc:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bce0:	ldr	r6, [r6]
   2bce4:	mvn	r3, r1
   2bce8:	add	r1, r1, #1
   2bcec:	add	r5, r5, r3
   2bcf0:	add	ip, ip, r1
   2bcf4:	cmp	r6, #0
   2bcf8:	beq	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bcfc:	ldr	r3, [r6, #4]
   2bd00:	ldr	r2, [r3]
   2bd04:	ldr	r1, [r3, #4]
   2bd08:	cmp	r1, r5
   2bd0c:	bls	2bc84 <fb_symbol_table_visit@@Base+0x2a8>
   2bd10:	ldr	r3, [sp]
   2bd14:	and	r5, r3, r4
   2bd18:	add	r4, r4, #1
   2bd1c:	ldr	r7, [fp, r5, lsl #2]
   2bd20:	add	r5, fp, r5, lsl #2
   2bd24:	cmp	r7, #0
   2bd28:	bne	2bc44 <fb_symbol_table_visit@@Base+0x268>
   2bd2c:	cmp	sl, #0
   2bd30:	mov	r8, sl
   2bd34:	moveq	r8, r5
   2bd38:	ldr	r2, [sp, #16]
   2bd3c:	mov	r7, #0
   2bd40:	ldr	r3, [r2, #8]
   2bd44:	add	r3, r3, #1
   2bd48:	str	r3, [r2, #8]
   2bd4c:	ldr	r3, [sp, #12]
   2bd50:	str	r3, [r8]
   2bd54:	mov	r0, r7
   2bd58:	add	sp, sp, #28
   2bd5c:	ldrd	r4, [sp]
   2bd60:	ldrd	r6, [sp, #8]
   2bd64:	ldrd	r8, [sp, #16]
   2bd68:	ldrd	sl, [sp, #24]
   2bd6c:	add	sp, sp, #32
   2bd70:	pop	{pc}		; (ldr pc, [sp], #4)
   2bd74:	cmp	r0, #0
   2bd78:	beq	2bd88 <fb_symbol_table_visit@@Base+0x3ac>
   2bd7c:	cmp	ip, #0
   2bd80:	add	lr, r6, #1
   2bd84:	bne	2bb8c <fb_symbol_table_visit@@Base+0x1b0>
   2bd88:	eor	r3, r2, sl
   2bd8c:	mul	r2, r7, r3
   2bd90:	b	2bbc8 <fb_symbol_table_visit@@Base+0x1ec>
   2bd94:	cmp	sl, #0
   2bd98:	moveq	sl, r5
   2bd9c:	b	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bda0:	ldr	r9, [sp, #4]
   2bda4:	ldr	r8, [sp, #8]
   2bda8:	b	2bde8 <fb_symbol_table_visit@@Base+0x40c>
   2bdac:	ldr	r3, [r6, #4]
   2bdb0:	ldr	r1, [r8, #4]
   2bdb4:	ldr	r2, [r3, #4]
   2bdb8:	ldr	r0, [r1, #4]
   2bdbc:	cmp	r2, r0
   2bdc0:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bdc4:	ldr	r1, [r1]
   2bdc8:	ldr	r0, [r3]
   2bdcc:	bl	13ff4 <strncmp@plt>
   2bdd0:	cmp	r0, #0
   2bdd4:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bdd8:	adds	r9, r9, #1
   2bddc:	ldr	r6, [r6]
   2bde0:	ldr	r8, [r8]
   2bde4:	beq	2be1c <fb_symbol_table_visit@@Base+0x440>
   2bde8:	cmp	r6, #0
   2bdec:	cmpne	r8, #0
   2bdf0:	bne	2bdac <fb_symbol_table_visit@@Base+0x3d0>
   2bdf4:	orrs	r3, r6, r8
   2bdf8:	bne	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2bdfc:	ldr	r3, [sp, #64]	; 0x40
   2be00:	cmp	r3, #0
   2be04:	bne	2bd54 <fb_symbol_table_visit@@Base+0x378>
   2be08:	ldr	r3, [sp, #12]
   2be0c:	str	r3, [r5]
   2be10:	b	2bd54 <fb_symbol_table_visit@@Base+0x378>
   2be14:	ldr	r6, [r6]
   2be18:	ldr	r5, [sp, #20]
   2be1c:	clz	r6, r6
   2be20:	lsr	r6, r6, #5
   2be24:	cmp	r6, #0
   2be28:	beq	2bd10 <fb_symbol_table_visit@@Base+0x334>
   2be2c:	b	2bdfc <fb_symbol_table_visit@@Base+0x420>
   2be30:	lsl	r1, r1, #1
   2be34:	bl	2c01c <fb_symbol_table_visit@@Base+0x640>
   2be38:	cmp	r0, #0
   2be3c:	bne	2bfa0 <fb_symbol_table_visit@@Base+0x5c4>
   2be40:	ldr	r2, [r5, #12]
   2be44:	b	2baf8 <fb_symbol_table_visit@@Base+0x11c>
   2be48:	ldr	lr, [sp, #8]
   2be4c:	cmp	lr, #0
   2be50:	beq	2bf54 <fb_symbol_table_visit@@Base+0x578>
   2be54:	movw	r8, #11863	; 0x2e57
   2be58:	movt	r8, #12137	; 0x2f69
   2be5c:	movw	r7, #15186	; 0x3b52
   2be60:	movt	r7, #12137	; 0x2f69
   2be64:	movw	r6, #31153	; 0x79b1
   2be68:	movt	r6, #40503	; 0x9e37
   2be6c:	mov	r2, #0
   2be70:	ldr	r3, [lr, #4]
   2be74:	ldr	ip, [r3]
   2be78:	ldr	r1, [r3, #4]
   2be7c:	subs	r3, r1, #1
   2be80:	beq	2bee0 <fb_symbol_table_visit@@Base+0x504>
   2be84:	mov	r1, ip
   2be88:	ldrb	r0, [r1], #1
   2be8c:	cmp	r0, #0
   2be90:	beq	2bee0 <fb_symbol_table_visit@@Base+0x504>
   2be94:	add	ip, ip, r3
   2be98:	mov	r3, r8
   2be9c:	b	2beac <fb_symbol_table_visit@@Base+0x4d0>
   2bea0:	ldrb	r0, [r1], #1
   2bea4:	cmp	r0, #0
   2bea8:	beq	2bebc <fb_symbol_table_visit@@Base+0x4e0>
   2beac:	add	r3, r3, r3, lsl #5
   2beb0:	cmp	r1, ip
   2beb4:	eor	r3, r3, r0
   2beb8:	bne	2bea0 <fb_symbol_table_visit@@Base+0x4c4>
   2bebc:	eor	r3, r3, r2
   2bec0:	adds	r5, r5, #1
   2bec4:	ldr	lr, [lr]
   2bec8:	eor	r3, r3, r7
   2becc:	mul	r2, r6, r3
   2bed0:	beq	2bc0c <fb_symbol_table_visit@@Base+0x230>
   2bed4:	cmp	lr, #0
   2bed8:	bne	2be70 <fb_symbol_table_visit@@Base+0x494>
   2bedc:	b	2bc0c <fb_symbol_table_visit@@Base+0x230>
   2bee0:	mov	r3, r8
   2bee4:	b	2bebc <fb_symbol_table_visit@@Base+0x4e0>
   2bee8:	mov	lr, r1
   2beec:	b	2bccc <fb_symbol_table_visit@@Base+0x2f0>
   2bef0:	add	lr, r6, #1
   2bef4:	mov	r1, #0
   2bef8:	mvn	r0, #0
   2befc:	b	2bb8c <fb_symbol_table_visit@@Base+0x1b0>
   2bf00:	ldr	r1, [sp, #16]
   2bf04:	cmp	r7, #0
   2bf08:	cmpne	r7, #2
   2bf0c:	ldr	r3, [r1, #8]
   2bf10:	add	r3, r3, #1
   2bf14:	str	r3, [r1, #8]
   2bf18:	beq	2bf44 <fb_symbol_table_visit@@Base+0x568>
   2bf1c:	ldr	r0, [sp]
   2bf20:	add	r2, r2, #1
   2bf24:	and	r3, r0, r2
   2bf28:	add	r2, r2, #1
   2bf2c:	ldr	r1, [fp, r3, lsl #2]
   2bf30:	add	r3, fp, r3, lsl #2
   2bf34:	cmp	r1, #0
   2bf38:	cmpne	r1, #2
   2bf3c:	bne	2bf24 <fb_symbol_table_visit@@Base+0x548>
   2bf40:	mov	r5, r3
   2bf44:	ldr	r3, [sp, #12]
   2bf48:	mov	r7, #0
   2bf4c:	str	r3, [r5]
   2bf50:	b	2bd54 <fb_symbol_table_visit@@Base+0x378>
   2bf54:	mov	r5, fp
   2bf58:	ldr	r2, [sp, #8]
   2bf5c:	b	2bc18 <fb_symbol_table_visit@@Base+0x23c>
   2bf60:	ldr	r3, [pc, #132]	; 2bfec <fb_symbol_table_visit@@Base+0x610>
   2bf64:	mov	r2, #116	; 0x74
   2bf68:	ldr	r1, [pc, #128]	; 2bff0 <fb_symbol_table_visit@@Base+0x614>
   2bf6c:	ldr	r0, [pc, #128]	; 2bff4 <fb_symbol_table_visit@@Base+0x618>
   2bf70:	add	r3, pc, r3
   2bf74:	add	r1, pc, r1
   2bf78:	add	r0, pc, r0
   2bf7c:	bl	1400c <__assert_fail@plt>
   2bf80:	ldr	r3, [pc, #112]	; 2bff8 <fb_symbol_table_visit@@Base+0x61c>
   2bf84:	mov	r2, #115	; 0x73
   2bf88:	ldr	r1, [pc, #108]	; 2bffc <fb_symbol_table_visit@@Base+0x620>
   2bf8c:	ldr	r0, [pc, #108]	; 2c000 <fb_symbol_table_visit@@Base+0x624>
   2bf90:	add	r3, pc, r3
   2bf94:	add	r1, pc, r1
   2bf98:	add	r0, pc, r0
   2bf9c:	bl	1400c <__assert_fail@plt>
   2bfa0:	ldr	r3, [pc, #92]	; 2c004 <fb_symbol_table_visit@@Base+0x628>
   2bfa4:	ldr	r2, [pc, #92]	; 2c008 <fb_symbol_table_visit@@Base+0x62c>
   2bfa8:	ldr	r1, [pc, #92]	; 2c00c <fb_symbol_table_visit@@Base+0x630>
   2bfac:	ldr	r3, [r4, r3]
   2bfb0:	add	r2, pc, r2
   2bfb4:	add	r1, pc, r1
   2bfb8:	ldr	r0, [r3]
   2bfbc:	bl	13f58 <fprintf@plt>
   2bfc0:	mov	r0, #1
   2bfc4:	bl	13f40 <exit@plt>
   2bfc8:	ldr	r3, [pc, #64]	; 2c010 <fb_symbol_table_visit@@Base+0x634>
   2bfcc:	mov	r2, #114	; 0x72
   2bfd0:	ldr	r1, [pc, #60]	; 2c014 <fb_symbol_table_visit@@Base+0x638>
   2bfd4:	ldr	r0, [pc, #60]	; 2c018 <fb_symbol_table_visit@@Base+0x63c>
   2bfd8:	add	r3, pc, r3
   2bfdc:	add	r1, pc, r1
   2bfe0:	add	r0, pc, r0
   2bfe4:	bl	1400c <__assert_fail@plt>
   2bfe8:	andeq	pc, r3, ip, asr #10
   2bfec:	ldrdeq	fp, [r2], -ip
   2bff0:	andeq	fp, r2, ip, lsr #7
   2bff4:	andeq	fp, r2, r0, asr #8
   2bff8:			; <UNDEFINED> instruction: 0x0002b4bc
   2bffc:	andeq	fp, r2, ip, lsl #7
   2c000:	andeq	fp, r2, r8, lsl #8
   2c004:	muleq	r0, ip, r0
   2c008:	andeq	fp, r2, r0, lsr #8
   2c00c:	andeq	fp, r2, r0, asr r4
   2c010:	andeq	fp, r2, r4, ror r4
   2c014:	andeq	fp, r2, r4, asr #6
   2c018:	andeq	fp, r2, r8, lsr #7
   2c01c:	ldr	r3, [r0, #8]
   2c020:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c024:	strd	r6, [sp, #8]
   2c028:	mov	r7, r0
   2c02c:	str	r8, [sp, #16]
   2c030:	str	lr, [sp, #20]
   2c034:	sub	sp, sp, #24
   2c038:	cmp	r1, r3
   2c03c:	ldr	r6, [r0]
   2c040:	movcc	r1, r3
   2c044:	cmp	r1, #2
   2c048:	bls	2c128 <fb_symbol_table_visit@@Base+0x74c>
   2c04c:	mov	r3, #4
   2c050:	movw	r0, #358	; 0x166
   2c054:	mul	r2, r0, r3
   2c058:	lsl	r5, r3, #1
   2c05c:	cmp	r1, r2, lsr #8
   2c060:	mov	r3, r5
   2c064:	bhi	2c054 <fb_symbol_table_visit@@Base+0x678>
   2c068:	mov	r1, #4
   2c06c:	mov	r0, r5
   2c070:	bl	13e74 <calloc@plt>
   2c074:	cmp	r0, #0
   2c078:	str	r0, [sp, #8]
   2c07c:	beq	2c130 <fb_symbol_table_visit@@Base+0x754>
   2c080:	ldr	r2, [r7, #12]
   2c084:	mov	r4, #0
   2c088:	str	r4, [sp, #12]
   2c08c:	strd	r4, [sp, #16]
   2c090:	cmp	r2, r4
   2c094:	addeq	r6, sp, #8
   2c098:	beq	2c0e8 <fb_symbol_table_visit@@Base+0x70c>
   2c09c:	sub	r5, r6, #4
   2c0a0:	mov	r8, #3
   2c0a4:	add	r6, sp, #8
   2c0a8:	b	2c0b4 <fb_symbol_table_visit@@Base+0x6d8>
   2c0ac:	cmp	r2, r4
   2c0b0:	bls	2c0e8 <fb_symbol_table_visit@@Base+0x70c>
   2c0b4:	ldr	r3, [r5, #4]!
   2c0b8:	add	r4, r4, #1
   2c0bc:	cmp	r3, #0
   2c0c0:	cmpne	r3, #2
   2c0c4:	beq	2c0ac <fb_symbol_table_visit@@Base+0x6d0>
   2c0c8:	mov	r2, #0
   2c0cc:	mov	r0, r6
   2c0d0:	ldr	r1, [r3]
   2c0d4:	str	r8, [sp]
   2c0d8:	bl	2ba8c <fb_symbol_table_visit@@Base+0xb0>
   2c0dc:	ldr	r2, [r7, #12]
   2c0e0:	cmp	r2, r4
   2c0e4:	bhi	2c0b4 <fb_symbol_table_visit@@Base+0x6d8>
   2c0e8:	mov	r0, r7
   2c0ec:	bl	2ba50 <fb_symbol_table_visit@@Base+0x74>
   2c0f0:	ldr	r3, [sp, #8]
   2c0f4:	mov	r0, #0
   2c0f8:	ldmib	r6, {r1, r2}
   2c0fc:	str	r3, [r7]
   2c100:	ldr	r3, [r6, #12]
   2c104:	str	r1, [r7, #4]
   2c108:	str	r2, [r7, #8]
   2c10c:	str	r3, [r7, #12]
   2c110:	add	sp, sp, #24
   2c114:	ldrd	r4, [sp]
   2c118:	ldrd	r6, [sp, #8]
   2c11c:	ldr	r8, [sp, #16]
   2c120:	add	sp, sp, #20
   2c124:	pop	{pc}		; (ldr pc, [sp], #4)
   2c128:	mov	r5, #4
   2c12c:	b	2c068 <fb_symbol_table_visit@@Base+0x68c>
   2c130:	mvn	r0, #0
   2c134:	b	2c110 <fb_symbol_table_visit@@Base+0x734>
   2c138:	cmp	r0, #0
   2c13c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c140:	strd	r6, [sp, #8]
   2c144:	strd	r8, [sp, #16]
   2c148:	strd	sl, [sp, #24]
   2c14c:	str	lr, [sp, #32]
   2c150:	sub	sp, sp, #20
   2c154:	str	r0, [sp, #12]
   2c158:	beq	2c4ec <fb_symbol_table_visit@@Base+0xb10>
   2c15c:	ldr	r1, [r1]
   2c160:	cmp	r3, #0
   2c164:	sub	r1, r1, #1
   2c168:	str	r1, [sp, #4]
   2c16c:	ble	2c390 <fb_symbol_table_visit@@Base+0x9b4>
   2c170:	mov	r8, r3
   2c174:	mov	r9, r2
   2c178:	cmp	r8, #0
   2c17c:	movw	r7, #11863	; 0x2e57
   2c180:	movt	r7, #12137	; 0x2f69
   2c184:	movw	fp, #15186	; 0x3b52
   2c188:	movt	fp, #12137	; 0x2f69
   2c18c:	movw	sl, #31153	; 0x79b1
   2c190:	movt	sl, #40503	; 0x9e37
   2c194:	mov	r0, #0
   2c198:	ldrb	r4, [r9]
   2c19c:	beq	2c240 <fb_symbol_table_visit@@Base+0x864>
   2c1a0:	cmp	r4, #46	; 0x2e
   2c1a4:	beq	2c4dc <fb_symbol_table_visit@@Base+0xb00>
   2c1a8:	mov	r1, r9
   2c1ac:	mov	lr, #0
   2c1b0:	b	2c1c4 <fb_symbol_table_visit@@Base+0x7e8>
   2c1b4:	ldrb	r5, [r1, #1]!
   2c1b8:	cmp	r5, #46	; 0x2e
   2c1bc:	beq	2c490 <fb_symbol_table_visit@@Base+0xab4>
   2c1c0:	mov	lr, ip
   2c1c4:	add	ip, lr, #1
   2c1c8:	cmp	ip, r8
   2c1cc:	bne	2c1b4 <fb_symbol_table_visit@@Base+0x7d8>
   2c1d0:	cmp	lr, #0
   2c1d4:	beq	2c254 <fb_symbol_table_visit@@Base+0x878>
   2c1d8:	cmp	r4, #0
   2c1dc:	mov	ip, r8
   2c1e0:	add	r5, r9, #1
   2c1e4:	beq	2c254 <fb_symbol_table_visit@@Base+0x878>
   2c1e8:	add	lr, r9, lr
   2c1ec:	mov	r1, r7
   2c1f0:	b	2c200 <fb_symbol_table_visit@@Base+0x824>
   2c1f4:	ldrb	r4, [r5], #1
   2c1f8:	cmp	r4, #0
   2c1fc:	beq	2c210 <fb_symbol_table_visit@@Base+0x834>
   2c200:	add	r1, r1, r1, lsl #5
   2c204:	cmp	r5, lr
   2c208:	eor	r1, r1, r4
   2c20c:	bne	2c1f4 <fb_symbol_table_visit@@Base+0x818>
   2c210:	eor	r1, r1, r0
   2c214:	cmp	r8, ip
   2c218:	eor	r1, r1, fp
   2c21c:	mul	r0, sl, r1
   2c220:	beq	2c268 <fb_symbol_table_visit@@Base+0x88c>
   2c224:	mvn	r1, ip
   2c228:	add	ip, ip, #1
   2c22c:	add	r8, r8, r1
   2c230:	add	r9, r9, ip
   2c234:	cmp	r8, #0
   2c238:	ldrb	r4, [r9]
   2c23c:	bne	2c1a0 <fb_symbol_table_visit@@Base+0x7c4>
   2c240:	cmp	r4, #0
   2c244:	mov	ip, r8
   2c248:	mvn	lr, #0
   2c24c:	add	r5, r9, #1
   2c250:	bne	2c1e8 <fb_symbol_table_visit@@Base+0x80c>
   2c254:	eor	r4, r0, #5376	; 0x1500
   2c258:	movw	r0, #31153	; 0x79b1
   2c25c:	movt	r0, #40503	; 0x9e37
   2c260:	eor	r4, r4, #5
   2c264:	mul	r0, r0, r4
   2c268:	ldr	r1, [sp, #4]
   2c26c:	ldr	ip, [sp, #12]
   2c270:	and	r1, r1, r0
   2c274:	add	r1, ip, r1, lsl #2
   2c278:	ldr	r6, [r1]
   2c27c:	cmp	r6, #0
   2c280:	beq	2c370 <fb_symbol_table_visit@@Base+0x994>
   2c284:	ldr	r8, [sp, #12]
   2c288:	mov	r7, r3
   2c28c:	add	r4, r0, #1
   2c290:	str	r2, [sp, #8]
   2c294:	cmp	r6, #2
   2c298:	beq	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c29c:	cmp	r7, #0
   2c2a0:	ldr	r5, [r6]
   2c2a4:	ble	2c42c <fb_symbol_table_visit@@Base+0xa50>
   2c2a8:	cmp	r5, #0
   2c2ac:	beq	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c2b0:	ldr	r3, [r5, #4]
   2c2b4:	ldr	r2, [r3]
   2c2b8:	ldr	r1, [r3, #4]
   2c2bc:	cmp	r7, r1
   2c2c0:	bcc	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c2c4:	ldr	ip, [sp, #8]
   2c2c8:	mov	fp, r7
   2c2cc:	cmp	r1, #0
   2c2d0:	beq	2c4d4 <fb_symbol_table_visit@@Base+0xaf8>
   2c2d4:	ldrb	r0, [ip]
   2c2d8:	ldrb	r3, [r2]
   2c2dc:	cmp	r0, r3
   2c2e0:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c2e4:	sub	r0, r1, #1
   2c2e8:	mov	r3, ip
   2c2ec:	add	r0, r0, ip
   2c2f0:	rsb	sl, ip, #1
   2c2f4:	b	2c308 <fb_symbol_table_visit@@Base+0x92c>
   2c2f8:	ldrb	r9, [r2, #1]!
   2c2fc:	ldrb	lr, [r3, #1]!
   2c300:	cmp	r9, lr
   2c304:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c308:	cmp	r0, r3
   2c30c:	add	lr, sl, r3
   2c310:	bne	2c2f8 <fb_symbol_table_visit@@Base+0x91c>
   2c314:	cmp	r1, fp
   2c318:	beq	2c4b4 <fb_symbol_table_visit@@Base+0xad8>
   2c31c:	ldrb	r3, [ip, lr]
   2c320:	cmp	r3, #46	; 0x2e
   2c324:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c328:	ldr	r5, [r5]
   2c32c:	mvn	r3, r1
   2c330:	add	r1, r1, #1
   2c334:	add	fp, fp, r3
   2c338:	add	ip, ip, r1
   2c33c:	cmp	r5, #0
   2c340:	beq	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c344:	ldr	r3, [r5, #4]
   2c348:	ldr	r2, [r3]
   2c34c:	ldr	r1, [r3, #4]
   2c350:	cmp	r1, fp
   2c354:	bls	2c2cc <fb_symbol_table_visit@@Base+0x8f0>
   2c358:	ldr	r3, [sp, #4]
   2c35c:	and	r3, r3, r4
   2c360:	add	r4, r4, #1
   2c364:	ldr	r6, [r8, r3, lsl #2]
   2c368:	cmp	r6, #0
   2c36c:	bne	2c294 <fb_symbol_table_visit@@Base+0x8b8>
   2c370:	mov	r0, r6
   2c374:	add	sp, sp, #20
   2c378:	ldrd	r4, [sp]
   2c37c:	ldrd	r6, [sp, #8]
   2c380:	ldrd	r8, [sp, #16]
   2c384:	ldrd	sl, [sp, #24]
   2c388:	add	sp, sp, #32
   2c38c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c390:	cmp	r2, #0
   2c394:	beq	2c4f4 <fb_symbol_table_visit@@Base+0xb18>
   2c398:	movw	sl, #11863	; 0x2e57
   2c39c:	movt	sl, #12137	; 0x2f69
   2c3a0:	movw	r9, #15186	; 0x3b52
   2c3a4:	movt	r9, #12137	; 0x2f69
   2c3a8:	movw	r8, #31153	; 0x79b1
   2c3ac:	movt	r8, #40503	; 0x9e37
   2c3b0:	mov	r7, r3
   2c3b4:	mov	r6, r2
   2c3b8:	mov	r0, #0
   2c3bc:	ldr	ip, [r6, #4]
   2c3c0:	ldr	r4, [ip]
   2c3c4:	ldr	r1, [ip, #4]
   2c3c8:	subs	r1, r1, #1
   2c3cc:	beq	2c4cc <fb_symbol_table_visit@@Base+0xaf0>
   2c3d0:	mov	ip, r4
   2c3d4:	ldrb	lr, [ip], #1
   2c3d8:	cmp	lr, #0
   2c3dc:	beq	2c4cc <fb_symbol_table_visit@@Base+0xaf0>
   2c3e0:	add	r4, r4, r1
   2c3e4:	mov	r1, sl
   2c3e8:	b	2c3f8 <fb_symbol_table_visit@@Base+0xa1c>
   2c3ec:	ldrb	lr, [ip], #1
   2c3f0:	cmp	lr, #0
   2c3f4:	beq	2c408 <fb_symbol_table_visit@@Base+0xa2c>
   2c3f8:	add	r1, r1, r1, lsl #5
   2c3fc:	cmp	ip, r4
   2c400:	eor	r1, r1, lr
   2c404:	bne	2c3ec <fb_symbol_table_visit@@Base+0xa10>
   2c408:	eor	r1, r1, r0
   2c40c:	adds	r7, r7, #1
   2c410:	ldr	r6, [r6]
   2c414:	eor	r1, r1, r9
   2c418:	mul	r0, r8, r1
   2c41c:	beq	2c268 <fb_symbol_table_visit@@Base+0x88c>
   2c420:	cmp	r6, #0
   2c424:	bne	2c3bc <fb_symbol_table_visit@@Base+0x9e0>
   2c428:	b	2c268 <fb_symbol_table_visit@@Base+0x88c>
   2c42c:	mov	sl, r7
   2c430:	ldr	r9, [sp, #8]
   2c434:	b	2c478 <fb_symbol_table_visit@@Base+0xa9c>
   2c438:	ldr	r3, [r5, #4]
   2c43c:	ldr	r1, [r9, #4]
   2c440:	ldr	r0, [r3, #4]
   2c444:	ldr	ip, [r1, #4]
   2c448:	mov	r2, r0
   2c44c:	cmp	r0, ip
   2c450:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c454:	ldr	r1, [r1]
   2c458:	ldr	r0, [r3]
   2c45c:	bl	13ff4 <strncmp@plt>
   2c460:	cmp	r0, #0
   2c464:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c468:	adds	sl, sl, #1
   2c46c:	ldr	r5, [r5]
   2c470:	ldr	r9, [r9]
   2c474:	beq	2c4b8 <fb_symbol_table_visit@@Base+0xadc>
   2c478:	cmp	r5, #0
   2c47c:	cmpne	r9, #0
   2c480:	bne	2c438 <fb_symbol_table_visit@@Base+0xa5c>
   2c484:	orrs	r3, r5, r9
   2c488:	bne	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c48c:	b	2c370 <fb_symbol_table_visit@@Base+0x994>
   2c490:	cmp	lr, #0
   2c494:	beq	2c4a4 <fb_symbol_table_visit@@Base+0xac8>
   2c498:	cmp	r4, #0
   2c49c:	add	r5, r9, #1
   2c4a0:	bne	2c1e8 <fb_symbol_table_visit@@Base+0x80c>
   2c4a4:	eor	r1, r0, #5376	; 0x1500
   2c4a8:	eor	r1, r1, #5
   2c4ac:	mul	r0, sl, r1
   2c4b0:	b	2c224 <fb_symbol_table_visit@@Base+0x848>
   2c4b4:	ldr	r5, [r5]
   2c4b8:	clz	r5, r5
   2c4bc:	lsr	r5, r5, #5
   2c4c0:	cmp	r5, #0
   2c4c4:	beq	2c358 <fb_symbol_table_visit@@Base+0x97c>
   2c4c8:	b	2c370 <fb_symbol_table_visit@@Base+0x994>
   2c4cc:	mov	r1, sl
   2c4d0:	b	2c408 <fb_symbol_table_visit@@Base+0xa2c>
   2c4d4:	mov	lr, r1
   2c4d8:	b	2c314 <fb_symbol_table_visit@@Base+0x938>
   2c4dc:	add	r5, r9, #1
   2c4e0:	mov	ip, #0
   2c4e4:	mvn	lr, #0
   2c4e8:	b	2c1e8 <fb_symbol_table_visit@@Base+0x80c>
   2c4ec:	ldr	r6, [sp, #12]
   2c4f0:	b	2c370 <fb_symbol_table_visit@@Base+0x994>
   2c4f4:	mov	r0, r2
   2c4f8:	ldr	r1, [sp, #12]
   2c4fc:	b	2c278 <fb_symbol_table_visit@@Base+0x89c>
   2c500:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c504:	strd	r6, [sp, #8]
   2c508:	strd	sl, [sp, #24]
   2c50c:	ldr	fp, [r0]
   2c510:	strd	r8, [sp, #16]
   2c514:	str	lr, [sp, #32]
   2c518:	sub	sp, sp, #20
   2c51c:	str	r1, [sp, #8]
   2c520:	cmp	fp, #0
   2c524:	str	r2, [sp, #12]
   2c528:	moveq	r7, fp
   2c52c:	beq	2c750 <fb_symbol_table_visit@@Base+0xd74>
   2c530:	ldr	r3, [r0, #12]
   2c534:	cmp	r2, #0
   2c538:	mov	r6, r2
   2c53c:	sub	r3, r3, #1
   2c540:	str	r3, [sp, #4]
   2c544:	ble	2c770 <fb_symbol_table_visit@@Base+0xd94>
   2c548:	ldr	r7, [sp, #8]
   2c54c:	movw	sl, #11863	; 0x2e57
   2c550:	movt	sl, #12137	; 0x2f69
   2c554:	movw	r9, #15186	; 0x3b52
   2c558:	movt	r9, #12137	; 0x2f69
   2c55c:	ldr	r6, [sp, #12]
   2c560:	movw	r8, #31153	; 0x79b1
   2c564:	movt	r8, #40503	; 0x9e37
   2c568:	mov	r2, #0
   2c56c:	ldrb	lr, [r7]
   2c570:	cmp	r6, #0
   2c574:	beq	2c618 <fb_symbol_table_visit@@Base+0xc3c>
   2c578:	cmp	lr, #46	; 0x2e
   2c57c:	beq	2c8d4 <fb_symbol_table_visit@@Base+0xef8>
   2c580:	mov	r3, r7
   2c584:	mov	ip, #0
   2c588:	b	2c59c <fb_symbol_table_visit@@Base+0xbc0>
   2c58c:	ldrb	r4, [r3, #1]!
   2c590:	cmp	r4, #46	; 0x2e
   2c594:	beq	2c888 <fb_symbol_table_visit@@Base+0xeac>
   2c598:	mov	ip, r1
   2c59c:	add	r1, ip, #1
   2c5a0:	cmp	r1, r6
   2c5a4:	bne	2c58c <fb_symbol_table_visit@@Base+0xbb0>
   2c5a8:	cmp	ip, #0
   2c5ac:	beq	2c62c <fb_symbol_table_visit@@Base+0xc50>
   2c5b0:	cmp	lr, #0
   2c5b4:	mov	r1, r6
   2c5b8:	add	r4, r7, #1
   2c5bc:	beq	2c62c <fb_symbol_table_visit@@Base+0xc50>
   2c5c0:	add	ip, r7, ip
   2c5c4:	mov	r3, sl
   2c5c8:	b	2c5d8 <fb_symbol_table_visit@@Base+0xbfc>
   2c5cc:	ldrb	lr, [r4], #1
   2c5d0:	cmp	lr, #0
   2c5d4:	beq	2c5e8 <fb_symbol_table_visit@@Base+0xc0c>
   2c5d8:	add	r3, r3, r3, lsl #5
   2c5dc:	cmp	r4, ip
   2c5e0:	eor	r3, r3, lr
   2c5e4:	bne	2c5cc <fb_symbol_table_visit@@Base+0xbf0>
   2c5e8:	eor	r3, r3, r2
   2c5ec:	cmp	r6, r1
   2c5f0:	eor	r3, r3, r9
   2c5f4:	mul	r2, r8, r3
   2c5f8:	beq	2c640 <fb_symbol_table_visit@@Base+0xc64>
   2c5fc:	mvn	r3, r1
   2c600:	add	r1, r1, #1
   2c604:	add	r6, r6, r3
   2c608:	add	r7, r7, r1
   2c60c:	cmp	r6, #0
   2c610:	ldrb	lr, [r7]
   2c614:	bne	2c578 <fb_symbol_table_visit@@Base+0xb9c>
   2c618:	cmp	lr, #0
   2c61c:	mov	r1, r6
   2c620:	mvn	ip, #0
   2c624:	add	r4, r7, #1
   2c628:	bne	2c5c0 <fb_symbol_table_visit@@Base+0xbe4>
   2c62c:	eor	r4, r2, #5376	; 0x1500
   2c630:	movw	r2, #31153	; 0x79b1
   2c634:	movt	r2, #40503	; 0x9e37
   2c638:	eor	r4, r4, #5
   2c63c:	mul	r2, r2, r4
   2c640:	ldr	r3, [sp, #4]
   2c644:	and	r6, r3, r2
   2c648:	add	r3, fp, r6, lsl #2
   2c64c:	str	r3, [sp]
   2c650:	ldr	r3, [sp]
   2c654:	ldr	r7, [r3]
   2c658:	cmp	r7, #0
   2c65c:	beq	2c750 <fb_symbol_table_visit@@Base+0xd74>
   2c660:	add	r4, r2, #1
   2c664:	ldr	r8, [sp, #12]
   2c668:	str	r0, [sp, #12]
   2c66c:	cmp	r7, #2
   2c670:	beq	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c674:	cmp	r8, #0
   2c678:	ldr	r5, [r7]
   2c67c:	ble	2c808 <fb_symbol_table_visit@@Base+0xe2c>
   2c680:	cmp	r5, #0
   2c684:	beq	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c688:	ldr	r3, [r5, #4]
   2c68c:	ldr	r2, [r3]
   2c690:	ldr	r1, [r3, #4]
   2c694:	cmp	r8, r1
   2c698:	bcc	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c69c:	ldr	ip, [sp, #8]
   2c6a0:	mov	sl, r8
   2c6a4:	cmp	r1, #0
   2c6a8:	beq	2c8cc <fb_symbol_table_visit@@Base+0xef0>
   2c6ac:	ldrb	r0, [ip]
   2c6b0:	ldrb	r3, [r2]
   2c6b4:	cmp	r0, r3
   2c6b8:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c6bc:	sub	r0, r1, #1
   2c6c0:	mov	r3, ip
   2c6c4:	add	r0, r0, ip
   2c6c8:	rsb	r9, ip, #1
   2c6cc:	b	2c6e0 <fb_symbol_table_visit@@Base+0xd04>
   2c6d0:	ldrb	r6, [r2, #1]!
   2c6d4:	ldrb	lr, [r3, #1]!
   2c6d8:	cmp	r6, lr
   2c6dc:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c6e0:	cmp	r0, r3
   2c6e4:	add	lr, r9, r3
   2c6e8:	bne	2c6d0 <fb_symbol_table_visit@@Base+0xcf4>
   2c6ec:	cmp	r1, sl
   2c6f0:	beq	2c8ac <fb_symbol_table_visit@@Base+0xed0>
   2c6f4:	ldrb	r3, [ip, lr]
   2c6f8:	cmp	r3, #46	; 0x2e
   2c6fc:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c700:	ldr	r5, [r5]
   2c704:	mvn	r3, r1
   2c708:	add	r1, r1, #1
   2c70c:	add	sl, sl, r3
   2c710:	add	ip, ip, r1
   2c714:	cmp	r5, #0
   2c718:	beq	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c71c:	ldr	r3, [r5, #4]
   2c720:	ldr	r2, [r3]
   2c724:	ldr	r1, [r3, #4]
   2c728:	cmp	r1, sl
   2c72c:	bls	2c6a4 <fb_symbol_table_visit@@Base+0xcc8>
   2c730:	ldr	r3, [sp, #4]
   2c734:	and	r3, r3, r4
   2c738:	add	r4, r4, #1
   2c73c:	ldr	r7, [fp, r3, lsl #2]
   2c740:	add	r3, fp, r3, lsl #2
   2c744:	str	r3, [sp]
   2c748:	cmp	r7, #0
   2c74c:	bne	2c66c <fb_symbol_table_visit@@Base+0xc90>
   2c750:	mov	r0, r7
   2c754:	add	sp, sp, #20
   2c758:	ldrd	r4, [sp]
   2c75c:	ldrd	r6, [sp, #8]
   2c760:	ldrd	r8, [sp, #16]
   2c764:	ldrd	sl, [sp, #24]
   2c768:	add	sp, sp, #32
   2c76c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c770:	cmp	r1, #0
   2c774:	beq	2c8e4 <fb_symbol_table_visit@@Base+0xf08>
   2c778:	movw	r9, #11863	; 0x2e57
   2c77c:	movt	r9, #12137	; 0x2f69
   2c780:	movw	r8, #15186	; 0x3b52
   2c784:	movt	r8, #12137	; 0x2f69
   2c788:	movw	r7, #31153	; 0x79b1
   2c78c:	movt	r7, #40503	; 0x9e37
   2c790:	mov	r5, r1
   2c794:	mov	r2, #0
   2c798:	ldr	r1, [r5, #4]
   2c79c:	ldr	lr, [r1]
   2c7a0:	ldr	r3, [r1, #4]
   2c7a4:	subs	r3, r3, #1
   2c7a8:	beq	2c8c4 <fb_symbol_table_visit@@Base+0xee8>
   2c7ac:	mov	r1, lr
   2c7b0:	ldrb	ip, [r1], #1
   2c7b4:	cmp	ip, #0
   2c7b8:	beq	2c8c4 <fb_symbol_table_visit@@Base+0xee8>
   2c7bc:	add	lr, lr, r3
   2c7c0:	mov	r3, r9
   2c7c4:	b	2c7d4 <fb_symbol_table_visit@@Base+0xdf8>
   2c7c8:	ldrb	ip, [r1], #1
   2c7cc:	cmp	ip, #0
   2c7d0:	beq	2c7e4 <fb_symbol_table_visit@@Base+0xe08>
   2c7d4:	add	r3, r3, r3, lsl #5
   2c7d8:	cmp	r1, lr
   2c7dc:	eor	r3, r3, ip
   2c7e0:	bne	2c7c8 <fb_symbol_table_visit@@Base+0xdec>
   2c7e4:	eor	r3, r3, r2
   2c7e8:	adds	r6, r6, #1
   2c7ec:	ldr	r5, [r5]
   2c7f0:	eor	r3, r3, r8
   2c7f4:	mul	r2, r7, r3
   2c7f8:	beq	2c640 <fb_symbol_table_visit@@Base+0xc64>
   2c7fc:	cmp	r5, #0
   2c800:	bne	2c798 <fb_symbol_table_visit@@Base+0xdbc>
   2c804:	b	2c640 <fb_symbol_table_visit@@Base+0xc64>
   2c808:	mov	r9, r8
   2c80c:	ldr	r6, [sp, #8]
   2c810:	b	2c854 <fb_symbol_table_visit@@Base+0xe78>
   2c814:	ldr	r3, [r5, #4]
   2c818:	ldr	r1, [r6, #4]
   2c81c:	ldr	r0, [r3, #4]
   2c820:	ldr	ip, [r1, #4]
   2c824:	mov	r2, r0
   2c828:	cmp	r0, ip
   2c82c:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c830:	ldr	r1, [r1]
   2c834:	ldr	r0, [r3]
   2c838:	bl	13ff4 <strncmp@plt>
   2c83c:	cmp	r0, #0
   2c840:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c844:	adds	r9, r9, #1
   2c848:	ldr	r5, [r5]
   2c84c:	ldr	r6, [r6]
   2c850:	beq	2c8b0 <fb_symbol_table_visit@@Base+0xed4>
   2c854:	cmp	r5, #0
   2c858:	cmpne	r6, #0
   2c85c:	bne	2c814 <fb_symbol_table_visit@@Base+0xe38>
   2c860:	orrs	r3, r5, r6
   2c864:	bne	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c868:	ldr	r0, [sp]
   2c86c:	mov	r2, #2
   2c870:	ldr	r1, [sp, #12]
   2c874:	ldr	r3, [r1, #8]
   2c878:	str	r2, [r0]
   2c87c:	sub	r3, r3, #1
   2c880:	str	r3, [r1, #8]
   2c884:	b	2c750 <fb_symbol_table_visit@@Base+0xd74>
   2c888:	cmp	ip, #0
   2c88c:	beq	2c89c <fb_symbol_table_visit@@Base+0xec0>
   2c890:	cmp	lr, #0
   2c894:	add	r4, r7, #1
   2c898:	bne	2c5c0 <fb_symbol_table_visit@@Base+0xbe4>
   2c89c:	eor	r3, r2, #5376	; 0x1500
   2c8a0:	eor	r3, r3, #5
   2c8a4:	mul	r2, r8, r3
   2c8a8:	b	2c5fc <fb_symbol_table_visit@@Base+0xc20>
   2c8ac:	ldr	r5, [r5]
   2c8b0:	clz	r5, r5
   2c8b4:	lsr	r5, r5, #5
   2c8b8:	cmp	r5, #0
   2c8bc:	beq	2c730 <fb_symbol_table_visit@@Base+0xd54>
   2c8c0:	b	2c868 <fb_symbol_table_visit@@Base+0xe8c>
   2c8c4:	mov	r3, r9
   2c8c8:	b	2c7e4 <fb_symbol_table_visit@@Base+0xe08>
   2c8cc:	mov	lr, r1
   2c8d0:	b	2c6ec <fb_symbol_table_visit@@Base+0xd10>
   2c8d4:	add	r4, r7, #1
   2c8d8:	mov	r1, #0
   2c8dc:	mvn	ip, #0
   2c8e0:	b	2c5c0 <fb_symbol_table_visit@@Base+0xbe4>
   2c8e4:	str	fp, [sp]
   2c8e8:	ldr	r2, [sp, #8]
   2c8ec:	b	2c650 <fb_symbol_table_visit@@Base+0xc74>

0002c8f0 <fb_scope_table_clear@@Base>:
   2c8f0:	b	2ba50 <fb_symbol_table_visit@@Base+0x74>

0002c8f4 <fb_scope_table_destroy@@Base>:
   2c8f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c8f8:	strd	r6, [sp, #8]
   2c8fc:	mov	r7, r0
   2c900:	str	r8, [sp, #16]
   2c904:	subs	r8, r1, #0
   2c908:	str	lr, [sp, #20]
   2c90c:	beq	2c958 <fb_scope_table_destroy@@Base+0x64>
   2c910:	ldr	r5, [r0]
   2c914:	ldr	ip, [r0, #12]
   2c918:	cmp	ip, #0
   2c91c:	beq	2c958 <fb_scope_table_destroy@@Base+0x64>
   2c920:	mov	r6, r2
   2c924:	sub	r5, r5, #4
   2c928:	mov	r4, #0
   2c92c:	ldr	r3, [r5, #4]!
   2c930:	mov	r0, r6
   2c934:	add	r4, r4, #1
   2c938:	cmp	r3, #0
   2c93c:	cmpne	r3, #2
   2c940:	mov	r1, r3
   2c944:	beq	2c950 <fb_scope_table_destroy@@Base+0x5c>
   2c948:	blx	r8
   2c94c:	ldr	ip, [r7, #12]
   2c950:	cmp	r4, ip
   2c954:	bcc	2c92c <fb_scope_table_destroy@@Base+0x38>
   2c958:	mov	r0, r7
   2c95c:	ldrd	r4, [sp]
   2c960:	ldrd	r6, [sp, #8]
   2c964:	ldr	r8, [sp, #16]
   2c968:	ldr	lr, [sp, #20]
   2c96c:	add	sp, sp, #24
   2c970:	b	2ba50 <fb_symbol_table_visit@@Base+0x74>

0002c974 <fb_scope_table_init@@Base>:
   2c974:	cmp	r1, #2
   2c978:	strd	r4, [sp, #-16]!
   2c97c:	mov	r4, r0
   2c980:	str	r6, [sp, #8]
   2c984:	str	lr, [sp, #12]
   2c988:	bls	2c9e4 <fb_scope_table_init@@Base+0x70>
   2c98c:	mov	r3, #4
   2c990:	movw	r0, #358	; 0x166
   2c994:	mul	r2, r0, r3
   2c998:	lsl	r5, r3, #1
   2c99c:	cmp	r1, r2, lsr #8
   2c9a0:	mov	r3, r5
   2c9a4:	bhi	2c994 <fb_scope_table_init@@Base+0x20>
   2c9a8:	mov	r1, #4
   2c9ac:	mov	r0, r5
   2c9b0:	bl	13e74 <calloc@plt>
   2c9b4:	cmp	r0, #0
   2c9b8:	str	r0, [r4]
   2c9bc:	beq	2c9ec <fb_scope_table_init@@Base+0x78>
   2c9c0:	mov	r3, #0
   2c9c4:	mov	r0, r3
   2c9c8:	str	r3, [r4, #4]
   2c9cc:	str	r3, [r4, #8]
   2c9d0:	str	r5, [r4, #12]
   2c9d4:	ldrd	r4, [sp]
   2c9d8:	ldr	r6, [sp, #8]
   2c9dc:	add	sp, sp, #12
   2c9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9e4:	mov	r5, #4
   2c9e8:	b	2c9a8 <fb_scope_table_init@@Base+0x34>
   2c9ec:	mvn	r0, #0
   2c9f0:	b	2c9d4 <fb_scope_table_init@@Base+0x60>

0002c9f4 <fb_scope_table_resize@@Base>:
   2c9f4:	b	2c01c <fb_symbol_table_visit@@Base+0x640>

0002c9f8 <fb_scope_table_insert@@Base>:
   2c9f8:	b	2ba8c <fb_symbol_table_visit@@Base+0xb0>

0002c9fc <fb_scope_table_insert_item@@Base>:
   2c9fc:	push	{lr}		; (str lr, [sp, #-4]!)
   2ca00:	sub	sp, sp, #12
   2ca04:	mov	r3, r1
   2ca08:	str	r2, [sp]
   2ca0c:	mov	r2, #0
   2ca10:	ldr	r1, [r1]
   2ca14:	bl	2ba8c <fb_symbol_table_visit@@Base+0xb0>
   2ca18:	add	sp, sp, #12
   2ca1c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ca20 <fb_scope_table_find@@Base>:
   2ca20:	mov	ip, r0
   2ca24:	mov	r3, r2
   2ca28:	ldr	r0, [ip], #12
   2ca2c:	mov	r2, r1
   2ca30:	mov	r1, ip
   2ca34:	b	2c138 <fb_symbol_table_visit@@Base+0x75c>

0002ca38 <fb_scope_table_find_item@@Base>:
   2ca38:	ldr	ip, [r0], #12
   2ca3c:	mov	r3, #0
   2ca40:	ldr	r2, [r1]
   2ca44:	mov	r1, r0
   2ca48:	mov	r0, ip
   2ca4c:	b	2c138 <fb_symbol_table_visit@@Base+0x75c>

0002ca50 <fb_scope_table_remove@@Base>:
   2ca50:	b	2c500 <fb_symbol_table_visit@@Base+0xb24>

0002ca54 <fb_scope_table_remove_item@@Base>:
   2ca54:	mov	r2, #0
   2ca58:	ldr	r1, [r1]
   2ca5c:	b	2c500 <fb_symbol_table_visit@@Base+0xb24>

0002ca60 <fb_scope_table_visit@@Base>:
   2ca60:	ldr	ip, [r0, #12]
   2ca64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ca68:	ldr	r5, [r0]
   2ca6c:	strd	r6, [sp, #8]
   2ca70:	str	r8, [sp, #16]
   2ca74:	cmp	ip, #0
   2ca78:	str	lr, [sp, #20]
   2ca7c:	beq	2cac0 <fb_scope_table_visit@@Base+0x60>
   2ca80:	mov	r6, r2
   2ca84:	mov	r8, r1
   2ca88:	mov	r7, r0
   2ca8c:	sub	r5, r5, #4
   2ca90:	mov	r4, #0
   2ca94:	ldr	r3, [r5, #4]!
   2ca98:	mov	r0, r6
   2ca9c:	add	r4, r4, #1
   2caa0:	cmp	r3, #0
   2caa4:	cmpne	r3, #2
   2caa8:	mov	r1, r3
   2caac:	beq	2cab8 <fb_scope_table_visit@@Base+0x58>
   2cab0:	blx	r8
   2cab4:	ldr	ip, [r7, #12]
   2cab8:	cmp	r4, ip
   2cabc:	bcc	2ca94 <fb_scope_table_visit@@Base+0x34>
   2cac0:	ldrd	r4, [sp]
   2cac4:	ldrd	r6, [sp, #8]
   2cac8:	ldr	r8, [sp, #16]
   2cacc:	add	sp, sp, #20
   2cad0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cad4:	str	r4, [sp, #-8]!
   2cad8:	mov	r4, r0
   2cadc:	ldr	r0, [r0]
   2cae0:	str	lr, [sp, #4]
   2cae4:	cmp	r0, #0
   2cae8:	beq	2caf0 <fb_scope_table_visit@@Base+0x90>
   2caec:	bl	13ea4 <free@plt>
   2caf0:	mov	r3, #0
   2caf4:	str	r3, [r4]
   2caf8:	str	r3, [r4, #4]
   2cafc:	str	r3, [r4, #8]
   2cb00:	str	r3, [r4, #12]
   2cb04:	ldr	r4, [sp]
   2cb08:	add	sp, sp, #4
   2cb0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cb10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2cb14:	ldr	r4, [pc, #588]	; 2cd68 <fb_scope_table_visit@@Base+0x308>
   2cb18:	strd	r6, [sp, #8]
   2cb1c:	strd	r8, [sp, #16]
   2cb20:	strd	sl, [sp, #24]
   2cb24:	subs	fp, r3, #0
   2cb28:	str	lr, [sp, #32]
   2cb2c:	sub	sp, sp, #28
   2cb30:	add	r4, pc, r4
   2cb34:	str	r1, [sp, #8]
   2cb38:	beq	2cd00 <fb_scope_table_visit@@Base+0x2a0>
   2cb3c:	cmp	fp, #2
   2cb40:	beq	2cce0 <fb_scope_table_visit@@Base+0x280>
   2cb44:	cmp	fp, #1
   2cb48:	beq	2cd20 <fb_scope_table_visit@@Base+0x2c0>
   2cb4c:	mov	r3, #179	; 0xb3
   2cb50:	ldr	r1, [r0, #8]
   2cb54:	mov	r9, r2
   2cb58:	mov	sl, r0
   2cb5c:	ldr	r8, [r0, #12]
   2cb60:	mul	r3, r3, r8
   2cb64:	cmp	r1, r3, lsr #8
   2cb68:	bcs	2cc58 <fb_scope_table_visit@@Base+0x1f8>
   2cb6c:	movw	r1, #15186	; 0x3b52
   2cb70:	movt	r1, #12137	; 0x2f69
   2cb74:	ldr	r7, [sl]
   2cb78:	mov	r3, #0
   2cb7c:	mov	r2, r9
   2cb80:	str	r1, [sp]
   2cb84:	add	r1, sp, #16
   2cb88:	sub	r8, r8, #1
   2cb8c:	ldr	r0, [sp, #8]
   2cb90:	str	r1, [sp, #4]
   2cb94:	bl	3ce98 <cmetrohash64_1@@Base>
   2cb98:	ldr	r6, [sp, #16]
   2cb9c:	ldr	r3, [sp, #64]	; 0x40
   2cba0:	sub	r3, r3, #2
   2cba4:	cmp	r3, #1
   2cba8:	and	r3, r8, r6
   2cbac:	add	r4, r7, r3, lsl #2
   2cbb0:	bls	2cc98 <fb_scope_table_visit@@Base+0x238>
   2cbb4:	ldr	r5, [r7, r3, lsl #2]
   2cbb8:	cmp	r5, #0
   2cbbc:	moveq	r3, r4
   2cbc0:	beq	2cc80 <fb_scope_table_visit@@Base+0x220>
   2cbc4:	mov	r3, #0
   2cbc8:	add	r6, r6, #1
   2cbcc:	str	sl, [sp, #12]
   2cbd0:	mov	sl, r8
   2cbd4:	mov	r8, r3
   2cbd8:	b	2cc00 <fb_scope_table_visit@@Base+0x1a0>
   2cbdc:	ldr	r2, [r5, #148]	; 0x94
   2cbe0:	cmp	r9, r2
   2cbe4:	beq	2cc14 <fb_scope_table_visit@@Base+0x1b4>
   2cbe8:	and	r4, sl, r6
   2cbec:	add	r6, r6, #1
   2cbf0:	ldr	r5, [r7, r4, lsl #2]
   2cbf4:	add	r4, r7, r4, lsl #2
   2cbf8:	cmp	r5, #0
   2cbfc:	beq	2cc70 <fb_scope_table_visit@@Base+0x210>
   2cc00:	cmp	r5, #2
   2cc04:	bne	2cbdc <fb_scope_table_visit@@Base+0x17c>
   2cc08:	cmp	r8, #0
   2cc0c:	moveq	r8, r4
   2cc10:	b	2cbe8 <fb_scope_table_visit@@Base+0x188>
   2cc14:	mov	r2, r9
   2cc18:	ldr	r0, [sp, #8]
   2cc1c:	ldr	r1, [r5, #144]	; 0x90
   2cc20:	bl	13ec8 <memcmp@plt>
   2cc24:	cmp	r0, #0
   2cc28:	bne	2cbe8 <fb_scope_table_visit@@Base+0x188>
   2cc2c:	ldr	r3, [sp, #64]	; 0x40
   2cc30:	cmp	r3, #0
   2cc34:	streq	fp, [r4]
   2cc38:	mov	r0, r5
   2cc3c:	add	sp, sp, #28
   2cc40:	ldrd	r4, [sp]
   2cc44:	ldrd	r6, [sp, #8]
   2cc48:	ldrd	r8, [sp, #16]
   2cc4c:	ldrd	sl, [sp, #24]
   2cc50:	add	sp, sp, #32
   2cc54:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc58:	lsl	r1, r1, #1
   2cc5c:	bl	2cd9c <fb_scope_table_visit@@Base+0x33c>
   2cc60:	cmp	r0, #0
   2cc64:	bne	2cd40 <fb_scope_table_visit@@Base+0x2e0>
   2cc68:	ldr	r8, [sl, #12]
   2cc6c:	b	2cb6c <fb_scope_table_visit@@Base+0x10c>
   2cc70:	ldr	sl, [sp, #12]
   2cc74:	cmp	r8, #0
   2cc78:	mov	r3, r8
   2cc7c:	moveq	r3, r4
   2cc80:	ldr	r2, [sl, #8]
   2cc84:	mov	r5, #0
   2cc88:	add	r2, r2, #1
   2cc8c:	str	r2, [sl, #8]
   2cc90:	str	fp, [r3]
   2cc94:	b	2cc38 <fb_scope_table_visit@@Base+0x1d8>
   2cc98:	ldr	r2, [sl, #8]
   2cc9c:	ldr	r1, [r7, r3, lsl #2]
   2cca0:	add	r3, r2, #1
   2cca4:	cmp	r1, #2
   2cca8:	cmpne	r1, #0
   2ccac:	str	r3, [sl, #8]
   2ccb0:	beq	2ccd4 <fb_scope_table_visit@@Base+0x274>
   2ccb4:	add	r6, r6, #1
   2ccb8:	and	r4, r8, r6
   2ccbc:	add	r6, r6, #1
   2ccc0:	ldr	r3, [r7, r4, lsl #2]
   2ccc4:	add	r4, r7, r4, lsl #2
   2ccc8:	cmp	r3, #0
   2cccc:	cmpne	r3, #2
   2ccd0:	bne	2ccb8 <fb_scope_table_visit@@Base+0x258>
   2ccd4:	mov	r5, #0
   2ccd8:	str	fp, [r4]
   2ccdc:	b	2cc38 <fb_scope_table_visit@@Base+0x1d8>
   2cce0:	ldr	r3, [pc, #132]	; 2cd6c <fb_scope_table_visit@@Base+0x30c>
   2cce4:	mov	r2, #115	; 0x73
   2cce8:	ldr	r1, [pc, #128]	; 2cd70 <fb_scope_table_visit@@Base+0x310>
   2ccec:	ldr	r0, [pc, #128]	; 2cd74 <fb_scope_table_visit@@Base+0x314>
   2ccf0:	add	r3, pc, r3
   2ccf4:	add	r1, pc, r1
   2ccf8:	add	r0, pc, r0
   2ccfc:	bl	1400c <__assert_fail@plt>
   2cd00:	ldr	r3, [pc, #112]	; 2cd78 <fb_scope_table_visit@@Base+0x318>
   2cd04:	mov	r2, #114	; 0x72
   2cd08:	ldr	r1, [pc, #108]	; 2cd7c <fb_scope_table_visit@@Base+0x31c>
   2cd0c:	ldr	r0, [pc, #108]	; 2cd80 <fb_scope_table_visit@@Base+0x320>
   2cd10:	add	r3, pc, r3
   2cd14:	add	r1, pc, r1
   2cd18:	add	r0, pc, r0
   2cd1c:	bl	1400c <__assert_fail@plt>
   2cd20:	ldr	r3, [pc, #92]	; 2cd84 <fb_scope_table_visit@@Base+0x324>
   2cd24:	mov	r2, #116	; 0x74
   2cd28:	ldr	r1, [pc, #88]	; 2cd88 <fb_scope_table_visit@@Base+0x328>
   2cd2c:	ldr	r0, [pc, #88]	; 2cd8c <fb_scope_table_visit@@Base+0x32c>
   2cd30:	add	r3, pc, r3
   2cd34:	add	r1, pc, r1
   2cd38:	add	r0, pc, r0
   2cd3c:	bl	1400c <__assert_fail@plt>
   2cd40:	ldr	r3, [pc, #72]	; 2cd90 <fb_scope_table_visit@@Base+0x330>
   2cd44:	ldr	r2, [pc, #72]	; 2cd94 <fb_scope_table_visit@@Base+0x334>
   2cd48:	ldr	r1, [pc, #72]	; 2cd98 <fb_scope_table_visit@@Base+0x338>
   2cd4c:	ldr	r3, [r4, r3]
   2cd50:	add	r2, pc, r2
   2cd54:	add	r1, pc, r1
   2cd58:	ldr	r0, [r3]
   2cd5c:	bl	13f58 <fprintf@plt>
   2cd60:	mov	r0, #1
   2cd64:	bl	13f40 <exit@plt>
   2cd68:	andeq	lr, r3, r8, asr #9
   2cd6c:	andeq	sl, r2, r4, ror r7
   2cd70:	andeq	sl, r2, ip, lsr #12
   2cd74:	andeq	sl, r2, r8, lsr #13
   2cd78:	andeq	sl, r2, r4, asr r7
   2cd7c:	andeq	sl, r2, ip, lsl #12
   2cd80:	andeq	sl, r2, r0, ror r6
   2cd84:	andeq	sl, r2, r4, lsr r7
   2cd88:	andeq	sl, r2, ip, ror #11
   2cd8c:	andeq	sl, r2, r0, lsl #13
   2cd90:	muleq	r0, ip, r0
   2cd94:	andeq	sl, r2, r0, lsl #13
   2cd98:			; <UNDEFINED> instruction: 0x0002a6b0
   2cd9c:	ldr	r3, [r0, #8]
   2cda0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2cda4:	strd	r6, [sp, #8]
   2cda8:	mov	r7, r0
   2cdac:	str	r8, [sp, #16]
   2cdb0:	str	lr, [sp, #20]
   2cdb4:	sub	sp, sp, #24
   2cdb8:	cmp	r1, r3
   2cdbc:	ldr	r6, [r0]
   2cdc0:	movcc	r1, r3
   2cdc4:	cmp	r1, #2
   2cdc8:	bls	2ceac <fb_scope_table_visit@@Base+0x44c>
   2cdcc:	mov	r3, #4
   2cdd0:	movw	r0, #358	; 0x166
   2cdd4:	mul	r2, r0, r3
   2cdd8:	lsl	r5, r3, #1
   2cddc:	cmp	r1, r2, lsr #8
   2cde0:	mov	r3, r5
   2cde4:	bhi	2cdd4 <fb_scope_table_visit@@Base+0x374>
   2cde8:	mov	r1, #4
   2cdec:	mov	r0, r5
   2cdf0:	bl	13e74 <calloc@plt>
   2cdf4:	cmp	r0, #0
   2cdf8:	str	r0, [sp, #8]
   2cdfc:	beq	2ceb4 <fb_scope_table_visit@@Base+0x454>
   2ce00:	ldr	r3, [r7, #12]
   2ce04:	mov	r4, #0
   2ce08:	str	r4, [sp, #12]
   2ce0c:	strd	r4, [sp, #16]
   2ce10:	cmp	r3, r4
   2ce14:	addeq	r6, sp, #8
   2ce18:	beq	2ce6c <fb_scope_table_visit@@Base+0x40c>
   2ce1c:	sub	r5, r6, #4
   2ce20:	mov	r8, #3
   2ce24:	add	r6, sp, #8
   2ce28:	b	2ce34 <fb_scope_table_visit@@Base+0x3d4>
   2ce2c:	cmp	r3, r4
   2ce30:	bls	2ce6c <fb_scope_table_visit@@Base+0x40c>
   2ce34:	ldr	r2, [r5, #4]!
   2ce38:	add	r4, r4, #1
   2ce3c:	cmp	r2, #0
   2ce40:	cmpne	r2, #2
   2ce44:	beq	2ce2c <fb_scope_table_visit@@Base+0x3cc>
   2ce48:	mov	r3, r2
   2ce4c:	mov	r0, r6
   2ce50:	ldr	r1, [r2, #144]	; 0x90
   2ce54:	ldr	r2, [r2, #148]	; 0x94
   2ce58:	str	r8, [sp]
   2ce5c:	bl	2cb10 <fb_scope_table_visit@@Base+0xb0>
   2ce60:	ldr	r3, [r7, #12]
   2ce64:	cmp	r3, r4
   2ce68:	bhi	2ce34 <fb_scope_table_visit@@Base+0x3d4>
   2ce6c:	mov	r0, r7
   2ce70:	bl	2cad4 <fb_scope_table_visit@@Base+0x74>
   2ce74:	ldr	r3, [sp, #8]
   2ce78:	mov	r0, #0
   2ce7c:	ldmib	r6, {r1, r2}
   2ce80:	str	r3, [r7]
   2ce84:	ldr	r3, [r6, #12]
   2ce88:	str	r1, [r7, #4]
   2ce8c:	str	r2, [r7, #8]
   2ce90:	str	r3, [r7, #12]
   2ce94:	add	sp, sp, #24
   2ce98:	ldrd	r4, [sp]
   2ce9c:	ldrd	r6, [sp, #8]
   2cea0:	ldr	r8, [sp, #16]
   2cea4:	add	sp, sp, #20
   2cea8:	pop	{pc}		; (ldr pc, [sp], #4)
   2ceac:	mov	r5, #4
   2ceb0:	b	2cde8 <fb_scope_table_visit@@Base+0x388>
   2ceb4:	mvn	r0, #0
   2ceb8:	b	2ce94 <fb_scope_table_visit@@Base+0x434>
   2cebc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2cec0:	ldr	r5, [r0]
   2cec4:	strd	r6, [sp, #8]
   2cec8:	strd	r8, [sp, #16]
   2cecc:	strd	sl, [sp, #24]
   2ced0:	str	lr, [sp, #32]
   2ced4:	sub	sp, sp, #20
   2ced8:	cmp	r5, #0
   2cedc:	beq	2cfac <fb_scope_table_visit@@Base+0x54c>
   2cee0:	mov	r9, r1
   2cee4:	movw	r1, #15186	; 0x3b52
   2cee8:	movt	r1, #12137	; 0x2f69
   2ceec:	mov	r8, r0
   2cef0:	ldr	r6, [r8, #12]
   2cef4:	mov	r3, #0
   2cef8:	mov	r0, r9
   2cefc:	str	r1, [sp]
   2cf00:	add	r1, sp, #8
   2cf04:	mov	r7, r2
   2cf08:	str	r1, [sp, #4]
   2cf0c:	bl	3ce98 <cmetrohash64_1@@Base>
   2cf10:	ldr	sl, [sp, #8]
   2cf14:	sub	r6, r6, #1
   2cf18:	and	r3, r6, sl
   2cf1c:	ldr	fp, [r5, r3, lsl #2]
   2cf20:	add	r4, r5, r3, lsl #2
   2cf24:	cmp	fp, #0
   2cf28:	beq	2cfac <fb_scope_table_visit@@Base+0x54c>
   2cf2c:	add	sl, sl, #1
   2cf30:	b	2cf4c <fb_scope_table_visit@@Base+0x4ec>
   2cf34:	and	r3, sl, r6
   2cf38:	add	sl, sl, #1
   2cf3c:	ldr	fp, [r5, r3, lsl #2]
   2cf40:	add	r4, r5, r3, lsl #2
   2cf44:	cmp	fp, #0
   2cf48:	beq	2cfac <fb_scope_table_visit@@Base+0x54c>
   2cf4c:	cmp	fp, #2
   2cf50:	beq	2cf34 <fb_scope_table_visit@@Base+0x4d4>
   2cf54:	ldr	r3, [fp, #148]	; 0x94
   2cf58:	cmp	r7, r3
   2cf5c:	bne	2cf34 <fb_scope_table_visit@@Base+0x4d4>
   2cf60:	mov	r2, r7
   2cf64:	mov	r0, r9
   2cf68:	ldr	r1, [fp, #144]	; 0x90
   2cf6c:	bl	13ec8 <memcmp@plt>
   2cf70:	cmp	r0, #0
   2cf74:	bne	2cf34 <fb_scope_table_visit@@Base+0x4d4>
   2cf78:	ldr	r3, [r8, #8]
   2cf7c:	mov	r2, #2
   2cf80:	str	r2, [r4]
   2cf84:	sub	r3, r3, #1
   2cf88:	str	r3, [r8, #8]
   2cf8c:	mov	r0, fp
   2cf90:	add	sp, sp, #20
   2cf94:	ldrd	r4, [sp]
   2cf98:	ldrd	r6, [sp, #8]
   2cf9c:	ldrd	r8, [sp, #16]
   2cfa0:	ldrd	sl, [sp, #24]
   2cfa4:	add	sp, sp, #32
   2cfa8:	pop	{pc}		; (ldr pc, [sp], #4)
   2cfac:	mov	fp, #0
   2cfb0:	b	2cf8c <fb_scope_table_visit@@Base+0x52c>
   2cfb4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2cfb8:	strd	r6, [sp, #8]
   2cfbc:	subs	r7, r0, #0
   2cfc0:	strd	r8, [sp, #16]
   2cfc4:	str	lr, [sp, #24]
   2cfc8:	sub	sp, sp, #20
   2cfcc:	beq	2d07c <fb_scope_table_visit@@Base+0x61c>
   2cfd0:	mov	r6, r3
   2cfd4:	movw	r3, #15186	; 0x3b52
   2cfd8:	movt	r3, #12137	; 0x2f69
   2cfdc:	ldr	r8, [r1]
   2cfe0:	add	r1, sp, #8
   2cfe4:	mov	r9, r2
   2cfe8:	mov	r2, r6
   2cfec:	mov	r0, r9
   2cff0:	str	r3, [sp]
   2cff4:	mov	r3, #0
   2cff8:	str	r1, [sp, #4]
   2cffc:	bl	3ce98 <cmetrohash64_1@@Base>
   2d000:	ldr	r5, [sp, #8]
   2d004:	sub	r8, r8, #1
   2d008:	and	r3, r8, r5
   2d00c:	ldr	r4, [r7, r3, lsl #2]
   2d010:	cmp	r4, #0
   2d014:	beq	2d07c <fb_scope_table_visit@@Base+0x61c>
   2d018:	add	r5, r5, #1
   2d01c:	b	2d034 <fb_scope_table_visit@@Base+0x5d4>
   2d020:	and	r1, r8, r5
   2d024:	add	r5, r5, #1
   2d028:	ldr	r4, [r7, r1, lsl #2]
   2d02c:	cmp	r4, #0
   2d030:	beq	2d07c <fb_scope_table_visit@@Base+0x61c>
   2d034:	cmp	r4, #2
   2d038:	beq	2d020 <fb_scope_table_visit@@Base+0x5c0>
   2d03c:	ldr	r3, [r4, #148]	; 0x94
   2d040:	cmp	r6, r3
   2d044:	bne	2d020 <fb_scope_table_visit@@Base+0x5c0>
   2d048:	mov	r2, r6
   2d04c:	mov	r0, r9
   2d050:	ldr	r1, [r4, #144]	; 0x90
   2d054:	bl	13ec8 <memcmp@plt>
   2d058:	cmp	r0, #0
   2d05c:	bne	2d020 <fb_scope_table_visit@@Base+0x5c0>
   2d060:	mov	r0, r4
   2d064:	add	sp, sp, #20
   2d068:	ldrd	r4, [sp]
   2d06c:	ldrd	r6, [sp, #8]
   2d070:	ldrd	r8, [sp, #16]
   2d074:	add	sp, sp, #24
   2d078:	pop	{pc}		; (ldr pc, [sp], #4)
   2d07c:	mov	r4, #0
   2d080:	b	2d060 <fb_scope_table_visit@@Base+0x600>

0002d084 <fb_schema_table_clear@@Base>:
   2d084:	b	2cad4 <fb_scope_table_visit@@Base+0x74>

0002d088 <fb_schema_table_destroy@@Base>:
   2d088:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d08c:	strd	r6, [sp, #8]
   2d090:	mov	r7, r0
   2d094:	str	r8, [sp, #16]
   2d098:	subs	r8, r1, #0
   2d09c:	str	lr, [sp, #20]
   2d0a0:	beq	2d0ec <fb_schema_table_destroy@@Base+0x64>
   2d0a4:	ldr	r5, [r0]
   2d0a8:	ldr	ip, [r0, #12]
   2d0ac:	cmp	ip, #0
   2d0b0:	beq	2d0ec <fb_schema_table_destroy@@Base+0x64>
   2d0b4:	mov	r6, r2
   2d0b8:	sub	r5, r5, #4
   2d0bc:	mov	r4, #0
   2d0c0:	ldr	r3, [r5, #4]!
   2d0c4:	mov	r0, r6
   2d0c8:	add	r4, r4, #1
   2d0cc:	cmp	r3, #0
   2d0d0:	cmpne	r3, #2
   2d0d4:	mov	r1, r3
   2d0d8:	beq	2d0e4 <fb_schema_table_destroy@@Base+0x5c>
   2d0dc:	blx	r8
   2d0e0:	ldr	ip, [r7, #12]
   2d0e4:	cmp	r4, ip
   2d0e8:	bcc	2d0c0 <fb_schema_table_destroy@@Base+0x38>
   2d0ec:	mov	r0, r7
   2d0f0:	ldrd	r4, [sp]
   2d0f4:	ldrd	r6, [sp, #8]
   2d0f8:	ldr	r8, [sp, #16]
   2d0fc:	ldr	lr, [sp, #20]
   2d100:	add	sp, sp, #24
   2d104:	b	2cad4 <fb_scope_table_visit@@Base+0x74>

0002d108 <fb_schema_table_init@@Base>:
   2d108:	cmp	r1, #2
   2d10c:	strd	r4, [sp, #-16]!
   2d110:	mov	r4, r0
   2d114:	str	r6, [sp, #8]
   2d118:	str	lr, [sp, #12]
   2d11c:	bls	2d178 <fb_schema_table_init@@Base+0x70>
   2d120:	mov	r3, #4
   2d124:	movw	r0, #358	; 0x166
   2d128:	mul	r2, r0, r3
   2d12c:	lsl	r5, r3, #1
   2d130:	cmp	r1, r2, lsr #8
   2d134:	mov	r3, r5
   2d138:	bhi	2d128 <fb_schema_table_init@@Base+0x20>
   2d13c:	mov	r1, #4
   2d140:	mov	r0, r5
   2d144:	bl	13e74 <calloc@plt>
   2d148:	cmp	r0, #0
   2d14c:	str	r0, [r4]
   2d150:	beq	2d180 <fb_schema_table_init@@Base+0x78>
   2d154:	mov	r3, #0
   2d158:	mov	r0, r3
   2d15c:	str	r3, [r4, #4]
   2d160:	str	r3, [r4, #8]
   2d164:	str	r5, [r4, #12]
   2d168:	ldrd	r4, [sp]
   2d16c:	ldr	r6, [sp, #8]
   2d170:	add	sp, sp, #12
   2d174:	pop	{pc}		; (ldr pc, [sp], #4)
   2d178:	mov	r5, #4
   2d17c:	b	2d13c <fb_schema_table_init@@Base+0x34>
   2d180:	mvn	r0, #0
   2d184:	b	2d168 <fb_schema_table_init@@Base+0x60>

0002d188 <fb_schema_table_resize@@Base>:
   2d188:	b	2cd9c <fb_scope_table_visit@@Base+0x33c>

0002d18c <fb_schema_table_insert@@Base>:
   2d18c:	b	2cb10 <fb_scope_table_visit@@Base+0xb0>

0002d190 <fb_schema_table_insert_item@@Base>:
   2d190:	push	{lr}		; (str lr, [sp, #-4]!)
   2d194:	sub	sp, sp, #12
   2d198:	mov	ip, r1
   2d19c:	mov	r3, r1
   2d1a0:	str	r2, [sp]
   2d1a4:	ldr	r1, [r1, #144]	; 0x90
   2d1a8:	ldr	r2, [ip, #148]	; 0x94
   2d1ac:	bl	2cb10 <fb_scope_table_visit@@Base+0xb0>
   2d1b0:	add	sp, sp, #12
   2d1b4:	pop	{pc}		; (ldr pc, [sp], #4)

0002d1b8 <fb_schema_table_find@@Base>:
   2d1b8:	mov	ip, r0
   2d1bc:	mov	r3, r2
   2d1c0:	ldr	r0, [ip], #12
   2d1c4:	mov	r2, r1
   2d1c8:	mov	r1, ip
   2d1cc:	b	2cfb4 <fb_scope_table_visit@@Base+0x554>

0002d1d0 <fb_schema_table_find_item@@Base>:
   2d1d0:	ldr	ip, [r0], #12
   2d1d4:	ldrd	r2, [r1, #144]	; 0x90
   2d1d8:	mov	r1, r0
   2d1dc:	mov	r0, ip
   2d1e0:	b	2cfb4 <fb_scope_table_visit@@Base+0x554>

0002d1e4 <fb_schema_table_remove@@Base>:
   2d1e4:	b	2cebc <fb_scope_table_visit@@Base+0x45c>

0002d1e8 <fb_schema_table_remove_item@@Base>:
   2d1e8:	mov	r3, r1
   2d1ec:	ldr	r1, [r1, #144]	; 0x90
   2d1f0:	ldr	r2, [r3, #148]	; 0x94
   2d1f4:	b	2cebc <fb_scope_table_visit@@Base+0x45c>

0002d1f8 <fb_schema_table_visit@@Base>:
   2d1f8:	ldr	ip, [r0, #12]
   2d1fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d200:	ldr	r5, [r0]
   2d204:	strd	r6, [sp, #8]
   2d208:	str	r8, [sp, #16]
   2d20c:	cmp	ip, #0
   2d210:	str	lr, [sp, #20]
   2d214:	beq	2d258 <fb_schema_table_visit@@Base+0x60>
   2d218:	mov	r6, r2
   2d21c:	mov	r8, r1
   2d220:	mov	r7, r0
   2d224:	sub	r5, r5, #4
   2d228:	mov	r4, #0
   2d22c:	ldr	r3, [r5, #4]!
   2d230:	mov	r0, r6
   2d234:	add	r4, r4, #1
   2d238:	cmp	r3, #0
   2d23c:	cmpne	r3, #2
   2d240:	mov	r1, r3
   2d244:	beq	2d250 <fb_schema_table_visit@@Base+0x58>
   2d248:	blx	r8
   2d24c:	ldr	ip, [r7, #12]
   2d250:	cmp	r4, ip
   2d254:	bcc	2d22c <fb_schema_table_visit@@Base+0x34>
   2d258:	ldrd	r4, [sp]
   2d25c:	ldrd	r6, [sp, #8]
   2d260:	ldr	r8, [sp, #16]
   2d264:	add	sp, sp, #20
   2d268:	pop	{pc}		; (ldr pc, [sp], #4)

0002d26c <__flatcc_fb_copy_path_n@@Base>:
   2d26c:	strd	r4, [sp, #-16]!
   2d270:	mov	r4, r1
   2d274:	mov	r1, #0
   2d278:	mov	r2, r4
   2d27c:	str	r6, [sp, #8]
   2d280:	mov	r6, r0
   2d284:	str	lr, [sp, #12]
   2d288:	bl	13f94 <memchr@plt>
   2d28c:	cmp	r0, #0
   2d290:	subne	r4, r0, r6
   2d294:	add	r0, r4, #1
   2d298:	bl	13f10 <malloc@plt>
   2d29c:	subs	r5, r0, #0
   2d2a0:	beq	2d2b8 <__flatcc_fb_copy_path_n@@Base+0x4c>
   2d2a4:	mov	r1, r6
   2d2a8:	mov	r2, r4
   2d2ac:	bl	13eb0 <memcpy@plt>
   2d2b0:	mov	r3, #0
   2d2b4:	strb	r3, [r5, r4]
   2d2b8:	mov	r0, r5
   2d2bc:	ldrd	r4, [sp]
   2d2c0:	ldr	r6, [sp, #8]
   2d2c4:	add	sp, sp, #12
   2d2c8:	pop	{pc}		; (ldr pc, [sp], #4)

0002d2cc <__flatcc_fb_copy_path@@Base>:
   2d2cc:	strd	r4, [sp, #-16]!
   2d2d0:	str	r6, [sp, #8]
   2d2d4:	mov	r6, r0
   2d2d8:	str	lr, [sp, #12]
   2d2dc:	bl	13f4c <strlen@plt>
   2d2e0:	mov	r4, r0
   2d2e4:	add	r0, r0, #1
   2d2e8:	bl	13f10 <malloc@plt>
   2d2ec:	subs	r5, r0, #0
   2d2f0:	beq	2d308 <__flatcc_fb_copy_path@@Base+0x3c>
   2d2f4:	mov	r1, r6
   2d2f8:	mov	r2, r4
   2d2fc:	bl	13eb0 <memcpy@plt>
   2d300:	mov	r3, #0
   2d304:	strb	r3, [r5, r4]
   2d308:	mov	r0, r5
   2d30c:	ldrd	r4, [sp]
   2d310:	ldr	r6, [sp, #8]
   2d314:	add	sp, sp, #12
   2d318:	pop	{pc}		; (ldr pc, [sp], #4)

0002d31c <__flatcc_fb_chomp@@Base>:
   2d31c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d320:	subs	r5, r2, #0
   2d324:	mov	r4, r1
   2d328:	strd	r6, [sp, #8]
   2d32c:	str	r8, [sp, #16]
   2d330:	str	lr, [sp, #20]
   2d334:	beq	2d368 <__flatcc_fb_chomp@@Base+0x4c>
   2d338:	mov	r6, r0
   2d33c:	mov	r0, r5
   2d340:	bl	13f4c <strlen@plt>
   2d344:	cmp	r0, r4
   2d348:	mov	r2, r0
   2d34c:	bcs	2d368 <__flatcc_fb_chomp@@Base+0x4c>
   2d350:	sub	r7, r4, r0
   2d354:	mov	r1, r5
   2d358:	add	r0, r6, r7
   2d35c:	bl	13ff4 <strncmp@plt>
   2d360:	cmp	r0, #0
   2d364:	moveq	r4, r7
   2d368:	mov	r0, r4
   2d36c:	ldrd	r4, [sp]
   2d370:	ldrd	r6, [sp, #8]
   2d374:	ldr	r8, [sp, #16]
   2d378:	add	sp, sp, #20
   2d37c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d380 <__flatcc_fb_create_join_path_n@@Base>:
   2d380:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2d384:	mov	r4, r1
   2d388:	strd	r6, [sp, #8]
   2d38c:	mov	r7, r3
   2d390:	strd	r8, [sp, #16]
   2d394:	mov	r9, r0
   2d398:	ldr	r8, [sp, #32]
   2d39c:	str	sl, [sp, #24]
   2d3a0:	mov	sl, r2
   2d3a4:	str	lr, [sp, #28]
   2d3a8:	cmp	r8, #0
   2d3ac:	moveq	r6, r8
   2d3b0:	beq	2d3c0 <__flatcc_fb_create_join_path_n@@Base+0x40>
   2d3b4:	mov	r0, r8
   2d3b8:	bl	13f4c <strlen@plt>
   2d3bc:	mov	r6, r0
   2d3c0:	cmp	r9, #0
   2d3c4:	beq	2d44c <__flatcc_fb_create_join_path_n@@Base+0xcc>
   2d3c8:	cmp	r7, #0
   2d3cc:	bne	2d434 <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2d3d0:	ldr	r3, [sp, #36]	; 0x24
   2d3d4:	cmp	r3, #0
   2d3d8:	beq	2d450 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2d3dc:	cmp	r4, #0
   2d3e0:	beq	2d450 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2d3e4:	add	r3, r9, r4
   2d3e8:	ldrb	r3, [r3, #-1]
   2d3ec:	cmp	r3, #92	; 0x5c
   2d3f0:	cmpne	r3, #47	; 0x2f
   2d3f4:	beq	2d450 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2d3f8:	ldr	r3, [sp, #36]	; 0x24
   2d3fc:	add	r0, r3, r4
   2d400:	add	r0, r0, #1
   2d404:	add	r0, r0, r7
   2d408:	add	r0, r0, r6
   2d40c:	bl	13f10 <malloc@plt>
   2d410:	subs	r5, r0, #0
   2d414:	beq	2d468 <__flatcc_fb_create_join_path_n@@Base+0xe8>
   2d418:	mov	r2, r4
   2d41c:	mov	r1, r9
   2d420:	bl	13eb0 <memcpy@plt>
   2d424:	mov	r3, #47	; 0x2f
   2d428:	strb	r3, [r5, r4]
   2d42c:	add	r4, r4, #1
   2d430:	b	2d4b0 <__flatcc_fb_create_join_path_n@@Base+0x130>
   2d434:	ldrb	r3, [sl]
   2d438:	cmp	r3, #92	; 0x5c
   2d43c:	cmpne	r3, #47	; 0x2f
   2d440:	moveq	r3, #1
   2d444:	movne	r3, #0
   2d448:	bne	2d488 <__flatcc_fb_create_join_path_n@@Base+0x108>
   2d44c:	mov	r4, #0
   2d450:	add	r0, r7, #1
   2d454:	add	r0, r0, r6
   2d458:	add	r0, r0, r4
   2d45c:	bl	13f10 <malloc@plt>
   2d460:	subs	r5, r0, #0
   2d464:	bne	2d4a4 <__flatcc_fb_create_join_path_n@@Base+0x124>
   2d468:	mov	r5, #0
   2d46c:	mov	r0, r5
   2d470:	ldrd	r4, [sp]
   2d474:	ldrd	r6, [sp, #8]
   2d478:	ldrd	r8, [sp, #16]
   2d47c:	ldr	sl, [sp, #24]
   2d480:	add	sp, sp, #28
   2d484:	pop	{pc}		; (ldr pc, [sp], #4)
   2d488:	cmp	r7, #1
   2d48c:	bls	2d3d0 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2d490:	ldrb	r2, [sl, #1]
   2d494:	cmp	r2, #58	; 0x3a
   2d498:	bne	2d3d0 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2d49c:	mov	r4, r3
   2d4a0:	b	2d450 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2d4a4:	mov	r1, r9
   2d4a8:	mov	r2, r4
   2d4ac:	bl	13eb0 <memcpy@plt>
   2d4b0:	mov	r2, r7
   2d4b4:	mov	r1, sl
   2d4b8:	add	r7, r4, r7
   2d4bc:	add	r0, r5, r4
   2d4c0:	bl	13eb0 <memcpy@plt>
   2d4c4:	mov	r2, r6
   2d4c8:	mov	r1, r8
   2d4cc:	add	r0, r5, r7
   2d4d0:	add	r6, r5, r6
   2d4d4:	bl	13eb0 <memcpy@plt>
   2d4d8:	mov	r3, #0
   2d4dc:	strb	r3, [r6, r7]
   2d4e0:	b	2d46c <__flatcc_fb_create_join_path_n@@Base+0xec>

0002d4e4 <__flatcc_fb_create_join_path@@Base>:
   2d4e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d4e8:	subs	r5, r0, #0
   2d4ec:	mov	r4, r1
   2d4f0:	strd	r6, [sp, #8]
   2d4f4:	mov	r6, r3
   2d4f8:	moveq	r7, r5
   2d4fc:	str	r8, [sp, #16]
   2d500:	mov	r8, r2
   2d504:	str	lr, [sp, #20]
   2d508:	sub	sp, sp, #8
   2d50c:	beq	2d518 <__flatcc_fb_create_join_path@@Base+0x34>
   2d510:	bl	13f4c <strlen@plt>
   2d514:	mov	r7, r0
   2d518:	cmp	r4, #0
   2d51c:	moveq	r3, r4
   2d520:	beq	2d530 <__flatcc_fb_create_join_path@@Base+0x4c>
   2d524:	mov	r0, r4
   2d528:	bl	13f4c <strlen@plt>
   2d52c:	mov	r3, r0
   2d530:	mov	r2, r4
   2d534:	mov	r1, r7
   2d538:	str	r8, [sp]
   2d53c:	mov	r0, r5
   2d540:	str	r6, [sp, #4]
   2d544:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   2d548:	add	sp, sp, #8
   2d54c:	ldrd	r4, [sp]
   2d550:	ldrd	r6, [sp, #8]
   2d554:	ldr	r8, [sp, #16]
   2d558:	add	sp, sp, #20
   2d55c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d560 <__flatcc_fb_create_path_ext_n@@Base>:
   2d560:	mov	ip, #0
   2d564:	push	{lr}		; (str lr, [sp, #-4]!)
   2d568:	sub	sp, sp, #12
   2d56c:	mov	r3, r1
   2d570:	mov	r1, ip
   2d574:	stm	sp, {r2, ip}
   2d578:	mov	r2, r0
   2d57c:	mov	r0, ip
   2d580:	bl	2d380 <__flatcc_fb_create_join_path_n@@Base>
   2d584:	add	sp, sp, #12
   2d588:	pop	{pc}		; (ldr pc, [sp], #4)

0002d58c <__flatcc_fb_create_path_ext@@Base>:
   2d58c:	mov	r3, #0
   2d590:	mov	r2, r1
   2d594:	mov	r1, r0
   2d598:	mov	r0, r3
   2d59c:	b	2d4e4 <__flatcc_fb_create_join_path@@Base>

0002d5a0 <__flatcc_fb_create_make_path_n@@Base>:
   2d5a0:	cmp	r1, #1
   2d5a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d5a8:	strd	r6, [sp, #8]
   2d5ac:	str	r8, [sp, #16]
   2d5b0:	str	lr, [sp, #20]
   2d5b4:	beq	2d710 <__flatcc_fb_create_make_path_n@@Base+0x170>
   2d5b8:	bls	2d720 <__flatcc_fb_create_make_path_n@@Base+0x180>
   2d5bc:	ldrb	r4, [r0]
   2d5c0:	sub	r6, r0, #1
   2d5c4:	mov	r5, r0
   2d5c8:	mov	r2, r0
   2d5cc:	add	r6, r6, r1
   2d5d0:	mov	r3, r4
   2d5d4:	cmp	r3, #92	; 0x5c
   2d5d8:	ldrb	r0, [r2, #1]!
   2d5dc:	bne	2d5e8 <__flatcc_fb_create_make_path_n@@Base+0x48>
   2d5e0:	cmp	r0, #32
   2d5e4:	addeq	r1, r1, #1
   2d5e8:	cmp	r3, #32
   2d5ec:	addeq	r1, r1, #1
   2d5f0:	cmp	r6, r2
   2d5f4:	mov	r3, r0
   2d5f8:	bne	2d5d4 <__flatcc_fb_create_make_path_n@@Base+0x34>
   2d5fc:	add	r1, r1, #1
   2d600:	cmp	r0, #32
   2d604:	movne	r0, r1
   2d608:	addeq	r0, r1, #1
   2d60c:	bl	13f10 <malloc@plt>
   2d610:	cmp	r0, #0
   2d614:	beq	2d6bc <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2d618:	mov	r3, #0
   2d61c:	mov	r8, #92	; 0x5c
   2d620:	b	2d658 <__flatcc_fb_create_make_path_n@@Base+0xb8>
   2d624:	cmp	r4, #32
   2d628:	add	r3, r3, #2
   2d62c:	bne	2d644 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2d630:	mov	r7, r2
   2d634:	mov	r2, r3
   2d638:	strb	r8, [r1]
   2d63c:	mov	r1, lr
   2d640:	add	lr, r0, r3
   2d644:	cmp	r6, r5
   2d648:	mov	r3, r2
   2d64c:	strb	r4, [r1]
   2d650:	mov	r4, ip
   2d654:	beq	2d6d0 <__flatcc_fb_create_make_path_n@@Base+0x130>
   2d658:	add	r2, r3, #1
   2d65c:	cmp	r4, #92	; 0x5c
   2d660:	ldrb	ip, [r5, #1]!
   2d664:	add	lr, r0, r2
   2d668:	add	r1, r0, r3
   2d66c:	mov	r7, r3
   2d670:	bne	2d624 <__flatcc_fb_create_make_path_n@@Base+0x84>
   2d674:	cmp	ip, #32
   2d678:	bne	2d644 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2d67c:	add	r3, r3, #2
   2d680:	mov	r7, r2
   2d684:	strb	r4, [r1]
   2d688:	mov	r2, r3
   2d68c:	mov	r1, lr
   2d690:	add	lr, r0, r3
   2d694:	b	2d644 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2d698:	mov	r0, #3
   2d69c:	bl	13f10 <malloc@plt>
   2d6a0:	cmp	r0, #0
   2d6a4:	beq	2d6bc <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2d6a8:	mov	r2, #92	; 0x5c
   2d6ac:	mov	r3, #0
   2d6b0:	strb	r2, [r0]
   2d6b4:	strb	r4, [r0, #1]
   2d6b8:	strb	r3, [r0, #2]
   2d6bc:	ldrd	r4, [sp]
   2d6c0:	ldrd	r6, [sp, #8]
   2d6c4:	ldr	r8, [sp, #16]
   2d6c8:	add	sp, sp, #20
   2d6cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6d0:	cmp	ip, #32
   2d6d4:	addne	r2, r0, r2
   2d6d8:	beq	2d6ec <__flatcc_fb_create_make_path_n@@Base+0x14c>
   2d6dc:	mov	r3, #0
   2d6e0:	strb	ip, [lr]
   2d6e4:	strb	r3, [r2, #1]
   2d6e8:	b	2d6bc <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2d6ec:	mov	r3, #92	; 0x5c
   2d6f0:	add	r2, r7, #2
   2d6f4:	strb	r3, [lr]
   2d6f8:	add	lr, r0, r2
   2d6fc:	mov	r3, #0
   2d700:	mov	r2, lr
   2d704:	strb	ip, [lr]
   2d708:	strb	r3, [r2, #1]
   2d70c:	b	2d6bc <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2d710:	ldrb	r4, [r0]
   2d714:	cmp	r4, #92	; 0x5c
   2d718:	cmpne	r4, #32
   2d71c:	beq	2d698 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   2d720:	ldrd	r4, [sp]
   2d724:	ldrd	r6, [sp, #8]
   2d728:	ldr	r8, [sp, #16]
   2d72c:	ldr	lr, [sp, #20]
   2d730:	add	sp, sp, #24
   2d734:	b	2d26c <__flatcc_fb_copy_path_n@@Base>

0002d738 <__flatcc_fb_create_make_path@@Base>:
   2d738:	str	r4, [sp, #-8]!
   2d73c:	mov	r4, r0
   2d740:	str	lr, [sp, #4]
   2d744:	bl	13f4c <strlen@plt>
   2d748:	mov	r1, r0
   2d74c:	mov	r0, r4
   2d750:	ldr	r4, [sp]
   2d754:	ldr	lr, [sp, #4]
   2d758:	add	sp, sp, #8
   2d75c:	b	2d5a0 <__flatcc_fb_create_make_path_n@@Base>

0002d760 <__flatcc_fb_find_basename@@Base>:
   2d760:	add	r1, r0, r1
   2d764:	cmp	r0, r1
   2d768:	beq	2d7a4 <__flatcc_fb_find_basename@@Base+0x44>
   2d76c:	ldrb	r2, [r1, #-1]
   2d770:	sub	r3, r1, #1
   2d774:	cmp	r2, #47	; 0x2f
   2d778:	cmpne	r2, #92	; 0x5c
   2d77c:	bne	2d798 <__flatcc_fb_find_basename@@Base+0x38>
   2d780:	b	2d7b0 <__flatcc_fb_find_basename@@Base+0x50>
   2d784:	ldrb	r2, [r3, #-1]
   2d788:	cmp	r2, #92	; 0x5c
   2d78c:	cmpne	r2, #47	; 0x2f
   2d790:	beq	2d7a8 <__flatcc_fb_find_basename@@Base+0x48>
   2d794:	mov	r3, r1
   2d798:	cmp	r0, r3
   2d79c:	sub	r1, r3, #1
   2d7a0:	bne	2d784 <__flatcc_fb_find_basename@@Base+0x24>
   2d7a4:	mov	r3, r0
   2d7a8:	sub	r0, r3, r0
   2d7ac:	bx	lr
   2d7b0:	mov	r3, r1
   2d7b4:	b	2d7a8 <__flatcc_fb_find_basename@@Base+0x48>

0002d7b8 <__flatcc_fb_create_basename@@Base>:
   2d7b8:	strd	r4, [sp, #-16]!
   2d7bc:	mov	r5, r1
   2d7c0:	mov	r4, r0
   2d7c4:	str	r6, [sp, #8]
   2d7c8:	mov	r6, r2
   2d7cc:	str	lr, [sp, #12]
   2d7d0:	bl	2d760 <__flatcc_fb_find_basename@@Base>
   2d7d4:	add	r4, r4, r0
   2d7d8:	sub	r1, r5, r0
   2d7dc:	mov	r2, r6
   2d7e0:	mov	r0, r4
   2d7e4:	bl	2d31c <__flatcc_fb_chomp@@Base>
   2d7e8:	mov	r5, r0
   2d7ec:	add	r0, r0, #1
   2d7f0:	bl	13f10 <malloc@plt>
   2d7f4:	subs	r6, r0, #0
   2d7f8:	beq	2d810 <__flatcc_fb_create_basename@@Base+0x58>
   2d7fc:	mov	r1, r4
   2d800:	mov	r2, r5
   2d804:	bl	13eb0 <memcpy@plt>
   2d808:	mov	r3, #0
   2d80c:	strb	r3, [r6, r5]
   2d810:	mov	r0, r6
   2d814:	ldrd	r4, [sp]
   2d818:	ldr	r6, [sp, #8]
   2d81c:	add	sp, sp, #12
   2d820:	pop	{pc}		; (ldr pc, [sp], #4)

0002d824 <__flatcc_fb_read_file@@Base>:
   2d824:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d828:	strd	r6, [sp, #8]
   2d82c:	mov	r7, r1
   2d830:	ldr	r1, [pc, #256]	; 2d938 <__flatcc_fb_read_file@@Base+0x114>
   2d834:	str	r8, [sp, #16]
   2d838:	subs	r8, r2, #0
   2d83c:	str	lr, [sp, #20]
   2d840:	sub	sp, sp, #8
   2d844:	addeq	r8, sp, #4
   2d848:	add	r1, pc, r1
   2d84c:	bl	13e98 <fopen@plt>
   2d850:	subs	r6, r0, #0
   2d854:	beq	2d924 <__flatcc_fb_read_file@@Base+0x100>
   2d858:	mov	r2, #2
   2d85c:	mov	r1, #0
   2d860:	bl	13fe8 <fseek@plt>
   2d864:	mov	r0, r6
   2d868:	bl	13ebc <ftell@plt>
   2d86c:	cmp	r0, r7
   2d870:	mov	r5, r0
   2d874:	movls	r4, #0
   2d878:	movhi	r4, #1
   2d87c:	cmp	r7, #0
   2d880:	mov	r0, r6
   2d884:	str	r5, [r8]
   2d888:	moveq	r4, #0
   2d88c:	cmp	r4, #0
   2d890:	bne	2d91c <__flatcc_fb_read_file@@Base+0xf8>
   2d894:	bl	13ed4 <rewind@plt>
   2d898:	cmp	r5, #0
   2d89c:	movne	r0, r5
   2d8a0:	moveq	r0, #1
   2d8a4:	bl	13f10 <malloc@plt>
   2d8a8:	subs	r7, r0, #0
   2d8ac:	bne	2d8b8 <__flatcc_fb_read_file@@Base+0x94>
   2d8b0:	b	2d92c <__flatcc_fb_read_file@@Base+0x108>
   2d8b4:	add	r4, r4, r0
   2d8b8:	mov	r3, r6
   2d8bc:	sub	r2, r5, r4
   2d8c0:	mov	r1, #1
   2d8c4:	add	r0, r7, r4
   2d8c8:	bl	13ef8 <fread@plt>
   2d8cc:	cmp	r0, #0
   2d8d0:	bne	2d8b4 <__flatcc_fb_read_file@@Base+0x90>
   2d8d4:	cmp	r4, r5
   2d8d8:	mov	r0, r6
   2d8dc:	bne	2d904 <__flatcc_fb_read_file@@Base+0xe0>
   2d8e0:	bl	13fa0 <fclose@plt>
   2d8e4:	str	r4, [r8]
   2d8e8:	mov	r0, r7
   2d8ec:	add	sp, sp, #8
   2d8f0:	ldrd	r4, [sp]
   2d8f4:	ldrd	r6, [sp, #8]
   2d8f8:	ldr	r8, [sp, #16]
   2d8fc:	add	sp, sp, #20
   2d900:	pop	{pc}		; (ldr pc, [sp], #4)
   2d904:	bl	13fa0 <fclose@plt>
   2d908:	mov	r0, r7
   2d90c:	bl	13ea4 <free@plt>
   2d910:	mov	r7, #0
   2d914:	str	r5, [r8]
   2d918:	b	2d8e8 <__flatcc_fb_read_file@@Base+0xc4>
   2d91c:	bl	13fa0 <fclose@plt>
   2d920:	b	2d910 <__flatcc_fb_read_file@@Base+0xec>
   2d924:	mov	r5, r6
   2d928:	b	2d910 <__flatcc_fb_read_file@@Base+0xec>
   2d92c:	mov	r0, r6
   2d930:	bl	13fa0 <fclose@plt>
   2d934:	b	2d910 <__flatcc_fb_read_file@@Base+0xec>
   2d938:	andeq	r9, r2, r4, lsr ip

0002d93c <__flatcc_fb_default_error_out@@Base>:
   2d93c:	ldr	r3, [pc, #24]	; 2d95c <__flatcc_fb_default_error_out@@Base+0x20>
   2d940:	mov	r0, r1
   2d944:	mov	r1, #1
   2d948:	ldr	ip, [pc, #16]	; 2d960 <__flatcc_fb_default_error_out@@Base+0x24>
   2d94c:	add	r3, pc, r3
   2d950:	ldr	r3, [r3, ip]
   2d954:	ldr	r3, [r3]
   2d958:	b	13eec <fwrite@plt>
   2d95c:	andeq	sp, r3, ip, lsr #13
   2d960:	muleq	r0, ip, r0
   2d964:	add	r0, r1, #4
   2d968:	b	2b864 <fb_symbol_table_clear@@Base>
   2d96c:	ldr	r3, [pc, #48]	; 2d9a4 <__flatcc_fb_default_error_out@@Base+0x68>
   2d970:	mov	r2, #34	; 0x22
   2d974:	mov	r1, #1
   2d978:	str	r4, [sp, #-8]!
   2d97c:	ldr	ip, [pc, #36]	; 2d9a8 <__flatcc_fb_default_error_out@@Base+0x6c>
   2d980:	str	lr, [sp, #4]
   2d984:	ldr	r0, [pc, #32]	; 2d9ac <__flatcc_fb_default_error_out@@Base+0x70>
   2d988:	add	r3, pc, r3
   2d98c:	ldr	r3, [r3, ip]
   2d990:	add	r0, pc, r0
   2d994:	ldr	r3, [r3]
   2d998:	bl	13eec <fwrite@plt>
   2d99c:	mov	r0, #1
   2d9a0:	bl	13f40 <exit@plt>
   2d9a4:	andeq	sp, r3, r0, ror r6
   2d9a8:	muleq	r0, ip, r0
   2d9ac:	andeq	r2, r1, ip, asr #18
   2d9b0:	ldr	ip, [r0, #28]
   2d9b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d9b8:	mov	r4, r0
   2d9bc:	ldr	r0, [r0, #20]
   2d9c0:	strd	r6, [sp, #8]
   2d9c4:	mov	r7, r1
   2d9c8:	mov	r6, r2
   2d9cc:	ldr	r1, [r4, #40]	; 0x28
   2d9d0:	add	r5, ip, ip, lsl #2
   2d9d4:	str	r8, [sp, #16]
   2d9d8:	mov	r8, r3
   2d9dc:	str	lr, [sp, #20]
   2d9e0:	add	r5, r0, r5, lsl #2
   2d9e4:	cmp	r5, r1
   2d9e8:	str	r5, [r4, #24]
   2d9ec:	beq	2da30 <__flatcc_fb_default_error_out@@Base+0xf4>
   2d9f0:	ldr	r2, [r4, #60]	; 0x3c
   2d9f4:	sub	r8, r8, r6
   2d9f8:	add	r3, r1, #20
   2d9fc:	ldr	r0, [r4, #64]	; 0x40
   2da00:	stm	r1, {r6, r8}
   2da04:	ldr	r8, [sp, #16]
   2da08:	sub	r6, r6, r2
   2da0c:	add	r6, r6, #1
   2da10:	str	r0, [r1, #8]
   2da14:	str	r6, [r1, #12]
   2da18:	str	r7, [r1, #16]
   2da1c:	str	r3, [r4, #40]	; 0x28
   2da20:	ldrd	r4, [sp]
   2da24:	ldrd	r6, [sp, #8]
   2da28:	add	sp, sp, #20
   2da2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2da30:	cmp	ip, #0
   2da34:	sub	r5, r5, r0
   2da38:	moveq	r1, #20480	; 0x5000
   2da3c:	moveq	r3, #1024	; 0x400
   2da40:	bne	2da70 <__flatcc_fb_default_error_out@@Base+0x134>
   2da44:	str	r3, [r4, #28]
   2da48:	bl	13ee0 <realloc@plt>
   2da4c:	cmp	r0, #0
   2da50:	str	r0, [r4, #20]
   2da54:	beq	2da80 <__flatcc_fb_default_error_out@@Base+0x144>
   2da58:	ldr	r3, [r4, #28]
   2da5c:	add	r1, r0, r5
   2da60:	add	r3, r3, r3, lsl #2
   2da64:	add	r0, r0, r3, lsl #2
   2da68:	str	r0, [r4, #24]
   2da6c:	b	2d9f0 <__flatcc_fb_default_error_out@@Base+0xb4>
   2da70:	lsl	r3, ip, #1
   2da74:	add	r1, r3, ip, lsl #3
   2da78:	lsl	r1, r1, #2
   2da7c:	b	2da44 <__flatcc_fb_default_error_out@@Base+0x108>
   2da80:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   2da84:	ldr	ip, [r0, #40]	; 0x28
   2da88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2da8c:	mov	r4, r0
   2da90:	strd	r6, [sp, #8]
   2da94:	ldr	r7, [r0, #24]
   2da98:	str	r8, [sp, #16]
   2da9c:	ldr	r6, [pc, #280]	; 2dbbc <__flatcc_fb_default_error_out@@Base+0x280>
   2daa0:	add	r5, ip, #20
   2daa4:	mov	r1, ip
   2daa8:	str	lr, [sp, #20]
   2daac:	str	r5, [r0, #40]	; 0x28
   2dab0:	cmp	r5, r7
   2dab4:	add	r6, pc, r6
   2dab8:	beq	2db70 <__flatcc_fb_default_error_out@@Base+0x234>
   2dabc:	ldr	r3, [ip, #36]	; 0x24
   2dac0:	cmn	r3, #964	; 0x3c4
   2dac4:	bne	2db58 <__flatcc_fb_default_error_out@@Base+0x21c>
   2dac8:	mov	ip, r5
   2dacc:	ldr	r2, [r0, #52]	; 0x34
   2dad0:	b	2db08 <__flatcc_fb_default_error_out@@Base+0x1cc>
   2dad4:	ldr	r0, [r4, #36]	; 0x24
   2dad8:	mov	r1, ip
   2dadc:	str	r2, [r4, #52]	; 0x34
   2dae0:	stm	r3, {r0, r5}
   2dae4:	add	r5, ip, #20
   2dae8:	cmp	r5, r7
   2daec:	mov	ip, r5
   2daf0:	str	r3, [r4, #36]	; 0x24
   2daf4:	str	r5, [r4, #40]	; 0x28
   2daf8:	beq	2db70 <__flatcc_fb_default_error_out@@Base+0x234>
   2dafc:	ldr	r3, [r1, #36]	; 0x24
   2db00:	cmn	r3, #964	; 0x3c4
   2db04:	bne	2db58 <__flatcc_fb_default_error_out@@Base+0x21c>
   2db08:	ldr	r3, [r4, #44]	; 0x2c
   2db0c:	add	r1, r2, #16
   2db10:	cmp	r1, r3
   2db14:	movls	r3, r2
   2db18:	movls	r2, r1
   2db1c:	bls	2dad4 <__flatcc_fb_default_error_out@@Base+0x198>
   2db20:	mov	r1, #1
   2db24:	mov	r0, #65536	; 0x10000
   2db28:	bl	13e74 <calloc@plt>
   2db2c:	cmp	r0, #0
   2db30:	beq	2db94 <__flatcc_fb_default_error_out@@Base+0x258>
   2db34:	ldr	r1, [r4, #48]	; 0x30
   2db38:	add	ip, r0, #65536	; 0x10000
   2db3c:	add	r3, r0, #16
   2db40:	add	r2, r0, #32
   2db44:	str	ip, [r4, #44]	; 0x2c
   2db48:	str	r0, [r4, #48]	; 0x30
   2db4c:	ldr	ip, [r4, #40]	; 0x28
   2db50:	str	r1, [r0]
   2db54:	b	2dad4 <__flatcc_fb_default_error_out@@Base+0x198>
   2db58:	mov	r0, r5
   2db5c:	ldrd	r4, [sp]
   2db60:	ldrd	r6, [sp, #8]
   2db64:	ldr	r8, [sp, #16]
   2db68:	add	sp, sp, #20
   2db6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2db70:	ldr	r3, [pc, #72]	; 2dbc0 <__flatcc_fb_default_error_out@@Base+0x284>
   2db74:	movw	r2, #341	; 0x155
   2db78:	str	r1, [r4, #40]	; 0x28
   2db7c:	ldr	r0, [pc, #64]	; 2dbc4 <__flatcc_fb_default_error_out@@Base+0x288>
   2db80:	ldr	r1, [pc, #64]	; 2dbc8 <__flatcc_fb_default_error_out@@Base+0x28c>
   2db84:	add	r3, pc, r3
   2db88:	add	r0, pc, r0
   2db8c:	add	r1, pc, r1
   2db90:	bl	1400c <__assert_fail@plt>
   2db94:	ldr	r3, [pc, #48]	; 2dbcc <__flatcc_fb_default_error_out@@Base+0x290>
   2db98:	mov	r2, #34	; 0x22
   2db9c:	mov	r1, #1
   2dba0:	ldr	r0, [pc, #40]	; 2dbd0 <__flatcc_fb_default_error_out@@Base+0x294>
   2dba4:	ldr	r3, [r6, r3]
   2dba8:	add	r0, pc, r0
   2dbac:	ldr	r3, [r3]
   2dbb0:	bl	13eec <fwrite@plt>
   2dbb4:	mov	r0, #1
   2dbb8:	bl	13f40 <exit@plt>
   2dbbc:	andeq	sp, r3, r4, asr #10
   2dbc0:	strdeq	r9, [r2], -ip
   2dbc4:	andeq	fp, r1, r4, asr r2
   2dbc8:	andeq	r9, r2, ip, lsl sl
   2dbcc:	muleq	r0, ip, r0
   2dbd0:	andeq	r2, r1, r4, lsr r7
   2dbd4:	ldr	r3, [r0, #40]	; 0x28
   2dbd8:	ldr	r3, [r3, #16]
   2dbdc:	cmp	r3, #0
   2dbe0:	bxeq	lr
   2dbe4:	str	r4, [sp, #-8]!
   2dbe8:	mov	r4, r0
   2dbec:	str	lr, [sp, #4]
   2dbf0:	b	2dc14 <__flatcc_fb_default_error_out@@Base+0x2d8>
   2dbf4:	cmp	r3, #125	; 0x7d
   2dbf8:	beq	2dc38 <__flatcc_fb_default_error_out@@Base+0x2fc>
   2dbfc:	mov	r0, r4
   2dc00:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2dc04:	ldr	r3, [r4, #40]	; 0x28
   2dc08:	ldr	r3, [r3, #16]
   2dc0c:	cmp	r3, #0
   2dc10:	beq	2dc2c <__flatcc_fb_default_error_out@@Base+0x2f0>
   2dc14:	cmp	r3, #59	; 0x3b
   2dc18:	bne	2dbf4 <__flatcc_fb_default_error_out@@Base+0x2b8>
   2dc1c:	mov	r0, r4
   2dc20:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2dc24:	mov	r3, #0
   2dc28:	str	r3, [r4, #36]	; 0x24
   2dc2c:	ldr	r4, [sp]
   2dc30:	add	sp, sp, #4
   2dc34:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc38:	mov	r3, #0
   2dc3c:	str	r3, [r4, #36]	; 0x24
   2dc40:	ldr	r4, [sp]
   2dc44:	add	sp, sp, #4
   2dc48:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc4c:	ldr	r3, [r0, #40]	; 0x28
   2dc50:	ldr	r3, [r3, #16]
   2dc54:	cmp	r3, #0
   2dc58:	bxeq	lr
   2dc5c:	cmp	r1, r3
   2dc60:	strd	r4, [sp, #-16]!
   2dc64:	mov	r5, r1
   2dc68:	mov	r4, r0
   2dc6c:	str	r6, [sp, #8]
   2dc70:	str	lr, [sp, #12]
   2dc74:	bne	2dc84 <__flatcc_fb_default_error_out@@Base+0x348>
   2dc78:	b	2dcac <__flatcc_fb_default_error_out@@Base+0x370>
   2dc7c:	cmp	r5, r3
   2dc80:	beq	2dcac <__flatcc_fb_default_error_out@@Base+0x370>
   2dc84:	mov	r0, r4
   2dc88:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2dc8c:	ldr	r3, [r4, #40]	; 0x28
   2dc90:	ldr	r3, [r3, #16]
   2dc94:	cmp	r3, #0
   2dc98:	bne	2dc7c <__flatcc_fb_default_error_out@@Base+0x340>
   2dc9c:	ldrd	r4, [sp]
   2dca0:	ldr	r6, [sp, #8]
   2dca4:	add	sp, sp, #12
   2dca8:	pop	{pc}		; (ldr pc, [sp], #4)
   2dcac:	mov	r0, r4
   2dcb0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2dcb4:	mov	r3, #0
   2dcb8:	ldr	r6, [sp, #8]
   2dcbc:	str	r3, [r4, #36]	; 0x24
   2dcc0:	ldrd	r4, [sp]
   2dcc4:	add	sp, sp, #12
   2dcc8:	pop	{pc}		; (ldr pc, [sp], #4)

0002dccc <__flatcc_fb_print_error@@Base>:
   2dccc:	push	{r1, r2, r3}
   2dcd0:	mov	r1, #200	; 0xc8
   2dcd4:	strd	r4, [sp, #-16]!
   2dcd8:	mov	r5, r0
   2dcdc:	str	r6, [sp, #8]
   2dce0:	str	lr, [sp, #12]
   2dce4:	sub	sp, sp, #212	; 0xd4
   2dce8:	add	ip, sp, #232	; 0xe8
   2dcec:	add	r6, sp, #8
   2dcf0:	ldr	r2, [sp, #228]	; 0xe4
   2dcf4:	mov	r3, ip
   2dcf8:	mov	r0, r6
   2dcfc:	str	ip, [sp, #4]
   2dd00:	bl	13fd0 <vsnprintf@plt>
   2dd04:	cmp	r0, #199	; 0xc7
   2dd08:	movle	r4, r0
   2dd0c:	bgt	2dd44 <__flatcc_fb_print_error@@Base+0x78>
   2dd10:	ldr	r3, [r5, #8]
   2dd14:	mov	r1, r6
   2dd18:	mov	r2, r4
   2dd1c:	ldr	r0, [r5, #12]
   2dd20:	blx	r3
   2dd24:	mov	r0, r4
   2dd28:	add	sp, sp, #212	; 0xd4
   2dd2c:	ldrd	r4, [sp]
   2dd30:	ldr	r6, [sp, #8]
   2dd34:	ldr	lr, [sp, #12]
   2dd38:	add	sp, sp, #16
   2dd3c:	add	sp, sp, #12
   2dd40:	bx	lr
   2dd44:	ldr	r3, [pc, #24]	; 2dd64 <__flatcc_fb_print_error@@Base+0x98>
   2dd48:	mov	r4, #199	; 0xc7
   2dd4c:	add	r3, pc, r3
   2dd50:	ldr	r2, [r3]
   2dd54:	ldrb	r3, [r3, #4]
   2dd58:	str	r2, [sp, #203]	; 0xcb
   2dd5c:	strb	r3, [sp, #207]	; 0xcf
   2dd60:	b	2dd10 <__flatcc_fb_print_error@@Base+0x44>
   2dd64:			; <UNDEFINED> instruction: 0x000298bc

0002dd68 <__flatcc_error_find_file_of_token@@Base>:
   2dd68:	cmp	r0, #0
   2dd6c:	beq	2dda8 <__flatcc_error_find_file_of_token@@Base+0x40>
   2dd70:	ldr	r3, [r0, #20]
   2dd74:	cmp	r3, r1
   2dd78:	bhi	2dd88 <__flatcc_error_find_file_of_token@@Base+0x20>
   2dd7c:	ldr	r3, [r0, #24]
   2dd80:	cmp	r3, r1
   2dd84:	bhi	2dda0 <__flatcc_error_find_file_of_token@@Base+0x38>
   2dd88:	ldr	r0, [r0]
   2dd8c:	cmp	r0, #0
   2dd90:	bne	2dd70 <__flatcc_error_find_file_of_token@@Base+0x8>
   2dd94:	ldr	r0, [pc, #24]	; 2ddb4 <__flatcc_error_find_file_of_token@@Base+0x4c>
   2dd98:	add	r0, pc, r0
   2dd9c:	bx	lr
   2dda0:	ldr	r0, [r0, #520]	; 0x208
   2dda4:	bx	lr
   2dda8:	ldr	r0, [pc, #8]	; 2ddb8 <__flatcc_error_find_file_of_token@@Base+0x50>
   2ddac:	add	r0, pc, r0
   2ddb0:	bx	lr
   2ddb4:	andeq	ip, r1, r8, asr #17
   2ddb8:			; <UNDEFINED> instruction: 0x0001c8b4

0002ddbc <__flatcc_error_report@@Base>:
   2ddbc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ddc0:	adds	ip, r1, #0
   2ddc4:	mov	r4, r3
   2ddc8:	strd	r6, [sp, #8]
   2ddcc:	movne	ip, #1
   2ddd0:	mov	r5, r0
   2ddd4:	strd	r8, [sp, #16]
   2ddd8:	mov	r7, r1
   2dddc:	mov	r8, r2
   2dde0:	str	sl, [sp, #24]
   2dde4:	str	lr, [sp, #28]
   2dde8:	sub	sp, sp, #40	; 0x28
   2ddec:	ldr	r6, [sp, #72]	; 0x48
   2ddf0:	ldr	r9, [sp, #76]	; 0x4c
   2ddf4:	cmp	r6, #0
   2ddf8:	moveq	r3, ip
   2ddfc:	movne	r3, #0
   2de00:	cmp	r3, #0
   2de04:	ldmne	r1, {r6, r9}
   2de08:	cmp	r2, #0
   2de0c:	beq	2df68 <__flatcc_error_report@@Base+0x1ac>
   2de10:	cmp	r6, #0
   2de14:	beq	2df58 <__flatcc_error_report@@Base+0x19c>
   2de18:	cmp	r4, #0
   2de1c:	moveq	r3, ip
   2de20:	movne	r3, #0
   2de24:	cmp	r3, #0
   2de28:	bne	2df1c <__flatcc_error_report@@Base+0x160>
   2de2c:	cmp	r4, #0
   2de30:	moveq	ip, #0
   2de34:	cmp	ip, #0
   2de38:	bne	2deac <__flatcc_error_report@@Base+0xf0>
   2de3c:	orrs	r3, r7, r4
   2de40:	beq	2df74 <__flatcc_error_report@@Base+0x1b8>
   2de44:	cmp	r4, #0
   2de48:	beq	2df8c <__flatcc_error_report@@Base+0x1d0>
   2de4c:	mov	r1, r4
   2de50:	mov	r0, r5
   2de54:	bl	2dd68 <__flatcc_error_find_file_of_token@@Base>
   2de58:	ldm	r4, {ip, lr}
   2de5c:	mov	r3, r0
   2de60:	mov	r2, r8
   2de64:	mov	r0, r5
   2de68:	ldr	r1, [r4, #8]
   2de6c:	str	ip, [sp, #12]
   2de70:	ldr	ip, [r4, #12]
   2de74:	stm	sp, {r1, ip, lr}
   2de78:	ldr	r1, [pc, #288]	; 2dfa0 <__flatcc_error_report@@Base+0x1e4>
   2de7c:	add	r1, pc, r1
   2de80:	bl	2dccc <__flatcc_fb_print_error@@Base>
   2de84:	ldr	r3, [r5, #108]	; 0x6c
   2de88:	add	r3, r3, #1
   2de8c:	str	r3, [r5, #108]	; 0x6c
   2de90:	add	sp, sp, #40	; 0x28
   2de94:	ldrd	r4, [sp]
   2de98:	ldrd	r6, [sp, #8]
   2de9c:	ldrd	r8, [sp, #16]
   2dea0:	ldr	sl, [sp, #24]
   2dea4:	add	sp, sp, #28
   2dea8:	pop	{pc}		; (ldr pc, [sp], #4)
   2deac:	mov	r1, r7
   2deb0:	mov	r0, r5
   2deb4:	bl	2dd68 <__flatcc_error_find_file_of_token@@Base>
   2deb8:	mov	sl, r0
   2debc:	mov	r1, r4
   2dec0:	mov	r0, r5
   2dec4:	bl	2dd68 <__flatcc_error_find_file_of_token@@Base>
   2dec8:	ldr	r1, [r4]
   2decc:	mov	r2, sl
   2ded0:	str	r9, [sp, #4]
   2ded4:	ldr	lr, [r4, #4]
   2ded8:	str	r6, [sp, #8]
   2dedc:	ldr	ip, [r4, #8]
   2dee0:	str	r8, [sp, #12]
   2dee4:	ldr	r3, [r4, #12]
   2dee8:	str	r0, [sp, #16]
   2deec:	mov	r0, r5
   2def0:	str	ip, [sp, #20]
   2def4:	str	lr, [sp, #28]
   2def8:	str	r3, [sp, #24]
   2defc:	str	r1, [sp, #32]
   2df00:	ldr	r1, [pc, #156]	; 2dfa4 <__flatcc_error_report@@Base+0x1e8>
   2df04:	ldr	r3, [r7, #12]
   2df08:	add	r1, pc, r1
   2df0c:	str	r3, [sp]
   2df10:	ldr	r3, [r7, #8]
   2df14:	bl	2dccc <__flatcc_fb_print_error@@Base>
   2df18:	b	2de84 <__flatcc_error_report@@Base+0xc8>
   2df1c:	mov	r1, r7
   2df20:	mov	r0, r5
   2df24:	bl	2dd68 <__flatcc_error_find_file_of_token@@Base>
   2df28:	ldr	r1, [pc, #120]	; 2dfa8 <__flatcc_error_report@@Base+0x1ec>
   2df2c:	mov	r2, r0
   2df30:	mov	r0, r5
   2df34:	str	r9, [sp, #4]
   2df38:	str	r6, [sp, #8]
   2df3c:	str	r8, [sp, #12]
   2df40:	ldr	r3, [r7, #12]
   2df44:	add	r1, pc, r1
   2df48:	str	r3, [sp]
   2df4c:	ldr	r3, [r7, #8]
   2df50:	bl	2dccc <__flatcc_fb_print_error@@Base>
   2df54:	b	2de84 <__flatcc_error_report@@Base+0xc8>
   2df58:	mov	r9, r6
   2df5c:	ldr	r6, [pc, #72]	; 2dfac <__flatcc_error_report@@Base+0x1f0>
   2df60:	add	r6, pc, r6
   2df64:	b	2de18 <__flatcc_error_report@@Base+0x5c>
   2df68:	ldr	r8, [pc, #64]	; 2dfb0 <__flatcc_error_report@@Base+0x1f4>
   2df6c:	add	r8, pc, r8
   2df70:	b	2de10 <__flatcc_error_report@@Base+0x54>
   2df74:	ldr	r1, [pc, #56]	; 2dfb4 <__flatcc_error_report@@Base+0x1f8>
   2df78:	mov	r2, r8
   2df7c:	mov	r0, r5
   2df80:	add	r1, pc, r1
   2df84:	bl	2dccc <__flatcc_fb_print_error@@Base>
   2df88:	b	2de84 <__flatcc_error_report@@Base+0xc8>
   2df8c:	ldr	r1, [pc, #36]	; 2dfb8 <__flatcc_error_report@@Base+0x1fc>
   2df90:	mov	r0, r5
   2df94:	add	r1, pc, r1
   2df98:	bl	2dccc <__flatcc_fb_print_error@@Base>
   2df9c:	b	2de84 <__flatcc_error_report@@Base+0xc8>
   2dfa0:	strdeq	r9, [r2], -r4
   2dfa4:	andeq	r9, r2, r8, lsr #14
   2dfa8:	andeq	r9, r2, ip, asr #13
   2dfac:	andeq	ip, r1, r0, lsl #14
   2dfb0:	strdeq	ip, [r1], -r4
   2dfb4:	andeq	r9, r2, r4, ror #13
   2dfb8:	strdeq	r9, [r2], -ip
   2dfbc:	ldr	r3, [r0, #52]	; 0x34
   2dfc0:	strd	r4, [sp, #-16]!
   2dfc4:	mov	r5, r1
   2dfc8:	mov	r4, r0
   2dfcc:	ldr	r1, [r0, #44]	; 0x2c
   2dfd0:	str	r6, [sp, #8]
   2dfd4:	str	lr, [sp, #12]
   2dfd8:	sub	sp, sp, #8
   2dfdc:	add	r2, r3, #16
   2dfe0:	ldr	r6, [r0, #40]	; 0x28
   2dfe4:	cmp	r2, r1
   2dfe8:	bhi	2e080 <__flatcc_error_report@@Base+0x2c4>
   2dfec:	mov	r0, r4
   2dff0:	str	r2, [r4, #52]	; 0x34
   2dff4:	str	r6, [r3, #4]
   2dff8:	str	r3, [r5]
   2dffc:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e000:	ldr	r3, [r4, #40]	; 0x28
   2e004:	ldr	r3, [r3, #16]
   2e008:	cmp	r3, #46	; 0x2e
   2e00c:	beq	2e024 <__flatcc_error_report@@Base+0x268>
   2e010:	add	sp, sp, #8
   2e014:	ldrd	r4, [sp]
   2e018:	ldr	r6, [sp, #8]
   2e01c:	add	sp, sp, #12
   2e020:	pop	{pc}		; (ldr pc, [sp], #4)
   2e024:	ldr	r6, [r5]
   2e028:	mov	r0, r4
   2e02c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e030:	ldr	r5, [r4, #40]	; 0x28
   2e034:	ldr	r3, [r5, #16]
   2e038:	cmp	r3, #9
   2e03c:	bne	2e0e8 <__flatcc_error_report@@Base+0x32c>
   2e040:	ldr	r1, [r4, #44]	; 0x2c
   2e044:	ldr	r3, [r4, #52]	; 0x34
   2e048:	add	r2, r3, #16
   2e04c:	cmp	r2, r1
   2e050:	bhi	2e0b4 <__flatcc_error_report@@Base+0x2f8>
   2e054:	mov	r0, r4
   2e058:	str	r2, [r4, #52]	; 0x34
   2e05c:	str	r5, [r3, #4]
   2e060:	str	r3, [r6]
   2e064:	mov	r6, r3
   2e068:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e06c:	ldr	r3, [r4, #40]	; 0x28
   2e070:	ldr	r3, [r3, #16]
   2e074:	cmp	r3, #46	; 0x2e
   2e078:	bne	2e010 <__flatcc_error_report@@Base+0x254>
   2e07c:	b	2e028 <__flatcc_error_report@@Base+0x26c>
   2e080:	mov	r1, #1
   2e084:	mov	r0, #65536	; 0x10000
   2e088:	bl	13e74 <calloc@plt>
   2e08c:	cmp	r0, #0
   2e090:	beq	2e110 <__flatcc_error_report@@Base+0x354>
   2e094:	ldr	r1, [r4, #48]	; 0x30
   2e098:	add	ip, r0, #65536	; 0x10000
   2e09c:	add	r3, r0, #16
   2e0a0:	add	r2, r0, #32
   2e0a4:	str	ip, [r4, #44]	; 0x2c
   2e0a8:	str	r0, [r4, #48]	; 0x30
   2e0ac:	str	r1, [r0]
   2e0b0:	b	2dfec <__flatcc_error_report@@Base+0x230>
   2e0b4:	mov	r1, #1
   2e0b8:	mov	r0, #65536	; 0x10000
   2e0bc:	bl	13e74 <calloc@plt>
   2e0c0:	cmp	r0, #0
   2e0c4:	beq	2e110 <__flatcc_error_report@@Base+0x354>
   2e0c8:	ldr	r1, [r4, #48]	; 0x30
   2e0cc:	add	ip, r0, #65536	; 0x10000
   2e0d0:	add	r3, r0, #16
   2e0d4:	add	r2, r0, #32
   2e0d8:	str	ip, [r4, #44]	; 0x2c
   2e0dc:	str	r0, [r4, #48]	; 0x30
   2e0e0:	str	r1, [r0]
   2e0e4:	b	2e054 <__flatcc_error_report@@Base+0x298>
   2e0e8:	ldr	r2, [pc, #36]	; 2e114 <__flatcc_error_report@@Base+0x358>
   2e0ec:	mov	ip, #0
   2e0f0:	mov	r1, r5
   2e0f4:	mov	r0, r4
   2e0f8:	mov	r3, ip
   2e0fc:	str	ip, [sp]
   2e100:	str	ip, [sp, #4]
   2e104:	add	r2, pc, r2
   2e108:	bl	2ddbc <__flatcc_error_report@@Base>
   2e10c:	b	2e010 <__flatcc_error_report@@Base+0x254>
   2e110:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   2e114:			; <UNDEFINED> instruction: 0x000295b0
   2e118:	strd	r4, [sp, #-12]!
   2e11c:	ldr	r5, [r0, #40]	; 0x28
   2e120:	ldr	ip, [r5, #16]
   2e124:	str	lr, [sp, #8]
   2e128:	mov	lr, #0
   2e12c:	sub	sp, sp, #12
   2e130:	str	lr, [r0, #36]	; 0x24
   2e134:	cmp	ip, r1
   2e138:	bne	2e150 <__flatcc_error_report@@Base+0x394>
   2e13c:	add	sp, sp, #12
   2e140:	ldrd	r4, [sp]
   2e144:	ldr	lr, [sp, #8]
   2e148:	add	sp, sp, #12
   2e14c:	b	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e150:	mov	r4, r0
   2e154:	mov	r1, r5
   2e158:	str	lr, [sp]
   2e15c:	str	lr, [sp, #4]
   2e160:	bl	2ddbc <__flatcc_error_report@@Base>
   2e164:	ldr	r0, [r4, #40]	; 0x28
   2e168:	add	sp, sp, #12
   2e16c:	ldrd	r4, [sp]
   2e170:	add	sp, sp, #8
   2e174:	pop	{pc}		; (ldr pc, [sp], #4)
   2e178:	strd	r4, [sp, #-20]!	; 0xffffffec
   2e17c:	mov	r3, #1
   2e180:	mov	r4, r0
   2e184:	strd	r6, [sp, #8]
   2e188:	mov	r7, r1
   2e18c:	ldr	r6, [r0, #40]	; 0x28
   2e190:	str	lr, [sp, #16]
   2e194:	sub	sp, sp, #12
   2e198:	strh	r3, [r1, #8]
   2e19c:	ldr	r3, [r6, #16]
   2e1a0:	cmp	r3, #91	; 0x5b
   2e1a4:	beq	2e370 <__flatcc_error_report@@Base+0x5b4>
   2e1a8:	cmn	r3, #984	; 0x3d8
   2e1ac:	ble	2e234 <__flatcc_error_report@@Base+0x478>
   2e1b0:	movw	r2, #64562	; 0xfc32
   2e1b4:	movt	r2, #65535	; 0xffff
   2e1b8:	cmp	r3, r2
   2e1bc:	beq	2e4a4 <__flatcc_error_report@@Base+0x6e8>
   2e1c0:	ble	2e344 <__flatcc_error_report@@Base+0x588>
   2e1c4:	cmp	r3, #9
   2e1c8:	beq	2e490 <__flatcc_error_report@@Base+0x6d4>
   2e1cc:	cmp	r3, #93	; 0x5d
   2e1d0:	moveq	r5, #0
   2e1d4:	beq	2e3f0 <__flatcc_error_report@@Base+0x634>
   2e1d8:	cmn	r3, #972	; 0x3cc
   2e1dc:	beq	2e260 <__flatcc_error_report@@Base+0x4a4>
   2e1e0:	mov	r5, #0
   2e1e4:	ldr	r2, [pc, #932]	; 2e590 <__flatcc_error_report@@Base+0x7d4>
   2e1e8:	mov	ip, #0
   2e1ec:	add	r2, pc, r2
   2e1f0:	mov	r0, r4
   2e1f4:	mov	r3, ip
   2e1f8:	str	ip, [sp]
   2e1fc:	mov	r1, ip
   2e200:	str	ip, [sp, #4]
   2e204:	bl	2ddbc <__flatcc_error_report@@Base>
   2e208:	ldr	r3, [r4, #40]	; 0x28
   2e20c:	ldr	r3, [r3, #16]
   2e210:	cmp	r3, #93	; 0x5d
   2e214:	beq	2e288 <__flatcc_error_report@@Base+0x4cc>
   2e218:	cmp	r5, #0
   2e21c:	bne	2e29c <__flatcc_error_report@@Base+0x4e0>
   2e220:	add	sp, sp, #12
   2e224:	ldrd	r4, [sp]
   2e228:	ldrd	r6, [sp, #8]
   2e22c:	add	sp, sp, #16
   2e230:	pop	{pc}		; (ldr pc, [sp], #4)
   2e234:	mvn	r2, #984	; 0x3d8
   2e238:	cmp	r3, r2
   2e23c:	bge	2e260 <__flatcc_error_report@@Base+0x4a4>
   2e240:	cmn	r3, #988	; 0x3dc
   2e244:	bge	2e324 <__flatcc_error_report@@Base+0x568>
   2e248:	cmn	r3, #996	; 0x3e4
   2e24c:	bge	2e260 <__flatcc_error_report@@Base+0x4a4>
   2e250:	add	r3, r3, #996	; 0x3e4
   2e254:	add	r3, r3, #3
   2e258:	cmp	r3, #1
   2e25c:	bhi	2e1e0 <__flatcc_error_report@@Base+0x424>
   2e260:	mov	r5, #0
   2e264:	mov	r3, #8
   2e268:	str	r6, [r7]
   2e26c:	mov	r0, r4
   2e270:	strh	r3, [r7, #8]
   2e274:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e278:	ldr	r3, [r4, #40]	; 0x28
   2e27c:	ldr	r3, [r3, #16]
   2e280:	cmp	r3, #93	; 0x5d
   2e284:	bne	2e218 <__flatcc_error_report@@Base+0x45c>
   2e288:	sub	r5, r5, #1
   2e28c:	mov	r0, r4
   2e290:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e294:	cmn	r5, #1
   2e298:	bne	2e208 <__flatcc_error_report@@Base+0x44c>
   2e29c:	ldr	r2, [pc, #752]	; 2e594 <__flatcc_error_report@@Base+0x7d8>
   2e2a0:	mov	r5, #0
   2e2a4:	mov	r3, r6
   2e2a8:	mov	r1, r5
   2e2ac:	mov	r0, r4
   2e2b0:	str	r5, [sp]
   2e2b4:	str	r5, [sp, #4]
   2e2b8:	add	r2, pc, r2
   2e2bc:	bl	2ddbc <__flatcc_error_report@@Base>
   2e2c0:	ldr	r7, [r4, #40]	; 0x28
   2e2c4:	ldr	r3, [r7, #16]
   2e2c8:	cmp	r3, #93	; 0x5d
   2e2cc:	bne	2e220 <__flatcc_error_report@@Base+0x464>
   2e2d0:	mov	r0, r4
   2e2d4:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e2d8:	ldr	r2, [pc, #696]	; 2e598 <__flatcc_error_report@@Base+0x7dc>
   2e2dc:	mov	r3, r6
   2e2e0:	mov	r1, r7
   2e2e4:	mov	r0, r4
   2e2e8:	str	r5, [sp]
   2e2ec:	str	r5, [sp, #4]
   2e2f0:	add	r2, pc, r2
   2e2f4:	bl	2ddbc <__flatcc_error_report@@Base>
   2e2f8:	ldr	r3, [r4, #40]	; 0x28
   2e2fc:	ldr	r3, [r3, #16]
   2e300:	cmp	r3, #93	; 0x5d
   2e304:	bne	2e220 <__flatcc_error_report@@Base+0x464>
   2e308:	mov	r0, r4
   2e30c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e310:	ldr	r3, [r4, #40]	; 0x28
   2e314:	ldr	r3, [r3, #16]
   2e318:	cmp	r3, #93	; 0x5d
   2e31c:	bne	2e220 <__flatcc_error_report@@Base+0x464>
   2e320:	b	2e308 <__flatcc_error_report@@Base+0x54c>
   2e324:	movw	r2, #64549	; 0xfc25
   2e328:	movt	r2, #65535	; 0xffff
   2e32c:	cmp	r3, r2
   2e330:	bne	2e1e0 <__flatcc_error_report@@Base+0x424>
   2e334:	mov	r5, #0
   2e338:	mov	r3, #8
   2e33c:	str	r6, [r7]
   2e340:	b	2e26c <__flatcc_error_report@@Base+0x4b0>
   2e344:	movw	r2, #64554	; 0xfc2a
   2e348:	movt	r2, #65535	; 0xffff
   2e34c:	cmp	r3, r2
   2e350:	blt	2e1e0 <__flatcc_error_report@@Base+0x424>
   2e354:	cmn	r3, #976	; 0x3d0
   2e358:	blt	2e260 <__flatcc_error_report@@Base+0x4a4>
   2e35c:	movw	r2, #64561	; 0xfc31
   2e360:	movt	r2, #65535	; 0xffff
   2e364:	cmp	r3, r2
   2e368:	bne	2e1e0 <__flatcc_error_report@@Base+0x424>
   2e36c:	b	2e260 <__flatcc_error_report@@Base+0x4a4>
   2e370:	mov	r5, #0
   2e374:	mov	r0, r4
   2e378:	add	r5, r5, #1
   2e37c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e380:	ldr	r2, [r4, #40]	; 0x28
   2e384:	ldr	r3, [r2, #16]
   2e388:	cmp	r3, #91	; 0x5b
   2e38c:	beq	2e374 <__flatcc_error_report@@Base+0x5b8>
   2e390:	cmp	r5, #1
   2e394:	beq	2e4e0 <__flatcc_error_report@@Base+0x724>
   2e398:	ldr	r2, [pc, #508]	; 2e59c <__flatcc_error_report@@Base+0x7e0>
   2e39c:	mov	ip, #0
   2e3a0:	mov	r1, r6
   2e3a4:	mov	r3, ip
   2e3a8:	mov	r0, r4
   2e3ac:	str	ip, [sp]
   2e3b0:	str	ip, [sp, #4]
   2e3b4:	add	r2, pc, r2
   2e3b8:	bl	2ddbc <__flatcc_error_report@@Base>
   2e3bc:	ldr	r2, [r4, #40]	; 0x28
   2e3c0:	ldr	r3, [r2, #16]
   2e3c4:	cmn	r3, #984	; 0x3d8
   2e3c8:	ble	2e400 <__flatcc_error_report@@Base+0x644>
   2e3cc:	movw	r1, #64562	; 0xfc32
   2e3d0:	movt	r1, #65535	; 0xffff
   2e3d4:	cmp	r3, r1
   2e3d8:	beq	2e4d4 <__flatcc_error_report@@Base+0x718>
   2e3dc:	ble	2e43c <__flatcc_error_report@@Base+0x680>
   2e3e0:	cmp	r3, #9
   2e3e4:	beq	2e4c0 <__flatcc_error_report@@Base+0x704>
   2e3e8:	cmp	r3, #93	; 0x5d
   2e3ec:	bne	2e430 <__flatcc_error_report@@Base+0x674>
   2e3f0:	ldr	r2, [pc, #424]	; 2e5a0 <__flatcc_error_report@@Base+0x7e4>
   2e3f4:	mov	ip, #0
   2e3f8:	add	r2, pc, r2
   2e3fc:	b	2e1f0 <__flatcc_error_report@@Base+0x434>
   2e400:	mvn	r1, #984	; 0x3d8
   2e404:	cmp	r3, r1
   2e408:	bge	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e40c:	cmn	r3, #988	; 0x3dc
   2e410:	bge	2e47c <__flatcc_error_report@@Base+0x6c0>
   2e414:	cmn	r3, #996	; 0x3e4
   2e418:	bge	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e41c:	add	r3, r3, #996	; 0x3e4
   2e420:	add	r3, r3, #3
   2e424:	cmp	r3, #1
   2e428:	bhi	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e42c:	b	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e430:	cmn	r3, #972	; 0x3cc
   2e434:	bne	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e438:	b	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e43c:	movw	r1, #64554	; 0xfc2a
   2e440:	movt	r1, #65535	; 0xffff
   2e444:	cmp	r3, r1
   2e448:	blt	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e44c:	cmn	r3, #976	; 0x3d0
   2e450:	blt	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e454:	movw	r1, #64561	; 0xfc31
   2e458:	movt	r1, #65535	; 0xffff
   2e45c:	cmp	r3, r1
   2e460:	bne	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e464:	mov	r3, #7
   2e468:	mov	r0, r4
   2e46c:	str	r2, [r7]
   2e470:	strh	r3, [r7, #8]
   2e474:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e478:	b	2e278 <__flatcc_error_report@@Base+0x4bc>
   2e47c:	movw	r1, #64549	; 0xfc25
   2e480:	movt	r1, #65535	; 0xffff
   2e484:	cmp	r3, r1
   2e488:	bne	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e48c:	b	2e464 <__flatcc_error_report@@Base+0x6a8>
   2e490:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   2e494:	mov	r5, #0
   2e498:	mov	r3, #12
   2e49c:	strh	r3, [r7, #8]
   2e4a0:	b	2e208 <__flatcc_error_report@@Base+0x44c>
   2e4a4:	mov	r3, #10
   2e4a8:	mov	r0, r4
   2e4ac:	str	r6, [r1]
   2e4b0:	mov	r5, #0
   2e4b4:	strh	r3, [r7, #8]
   2e4b8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e4bc:	b	2e278 <__flatcc_error_report@@Base+0x4bc>
   2e4c0:	mov	r1, r7
   2e4c4:	mov	r0, r4
   2e4c8:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   2e4cc:	mov	r3, #11
   2e4d0:	b	2e49c <__flatcc_error_report@@Base+0x6e0>
   2e4d4:	mov	r3, #9
   2e4d8:	str	r2, [r7]
   2e4dc:	b	2e26c <__flatcc_error_report@@Base+0x4b0>
   2e4e0:	cmn	r3, #984	; 0x3d8
   2e4e4:	ble	2e520 <__flatcc_error_report@@Base+0x764>
   2e4e8:	movw	r1, #64562	; 0xfc32
   2e4ec:	movt	r1, #65535	; 0xffff
   2e4f0:	cmp	r3, r1
   2e4f4:	beq	2e4d4 <__flatcc_error_report@@Base+0x718>
   2e4f8:	ble	2e550 <__flatcc_error_report@@Base+0x794>
   2e4fc:	cmp	r3, #9
   2e500:	beq	2e4c0 <__flatcc_error_report@@Base+0x704>
   2e504:	cmp	r3, #93	; 0x5d
   2e508:	beq	2e3f0 <__flatcc_error_report@@Base+0x634>
   2e50c:	cmn	r3, #972	; 0x3cc
   2e510:	bne	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e514:	mov	r3, #7
   2e518:	str	r2, [r7]
   2e51c:	b	2e26c <__flatcc_error_report@@Base+0x4b0>
   2e520:	mvn	r1, #984	; 0x3d8
   2e524:	cmp	r3, r1
   2e528:	bge	2e514 <__flatcc_error_report@@Base+0x758>
   2e52c:	cmn	r3, #988	; 0x3dc
   2e530:	bge	2e57c <__flatcc_error_report@@Base+0x7c0>
   2e534:	cmn	r3, #996	; 0x3e4
   2e538:	bge	2e514 <__flatcc_error_report@@Base+0x758>
   2e53c:	add	r3, r3, #996	; 0x3e4
   2e540:	add	r3, r3, #3
   2e544:	cmp	r3, #1
   2e548:	bhi	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e54c:	b	2e514 <__flatcc_error_report@@Base+0x758>
   2e550:	movw	r1, #64554	; 0xfc2a
   2e554:	movt	r1, #65535	; 0xffff
   2e558:	cmp	r3, r1
   2e55c:	blt	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e560:	cmn	r3, #976	; 0x3d0
   2e564:	blt	2e514 <__flatcc_error_report@@Base+0x758>
   2e568:	movw	r1, #64561	; 0xfc31
   2e56c:	movt	r1, #65535	; 0xffff
   2e570:	cmp	r3, r1
   2e574:	beq	2e514 <__flatcc_error_report@@Base+0x758>
   2e578:	b	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e57c:	movw	r1, #64549	; 0xfc25
   2e580:	movt	r1, #65535	; 0xffff
   2e584:	cmp	r3, r1
   2e588:	bne	2e1e4 <__flatcc_error_report@@Base+0x428>
   2e58c:	b	2e514 <__flatcc_error_report@@Base+0x758>
   2e590:	andeq	r9, r2, r4, lsr r5
   2e594:	andeq	r9, r2, r0, lsl #9
   2e598:	andeq	r9, r2, ip, ror #8
   2e59c:	andeq	r9, r2, r8, lsr #6
   2e5a0:	andeq	r9, r2, ip, lsl #6
   2e5a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e5a8:	mov	r4, r0
   2e5ac:	mov	r5, r1
   2e5b0:	strd	r6, [sp, #8]
   2e5b4:	ldr	r7, [pc, #452]	; 2e780 <__flatcc_error_report@@Base+0x9c4>
   2e5b8:	str	r8, [sp, #16]
   2e5bc:	ldr	r6, [pc, #448]	; 2e784 <__flatcc_error_report@@Base+0x9c8>
   2e5c0:	str	lr, [sp, #20]
   2e5c4:	sub	sp, sp, #8
   2e5c8:	ldr	r8, [pc, #440]	; 2e788 <__flatcc_error_report@@Base+0x9cc>
   2e5cc:	add	r7, pc, r7
   2e5d0:	add	r6, pc, r6
   2e5d4:	add	r8, pc, r8
   2e5d8:	ldr	r1, [r4, #40]	; 0x28
   2e5dc:	ldr	r3, [r1, #16]
   2e5e0:	sub	r3, r3, #6
   2e5e4:	cmp	r3, #17
   2e5e8:	addls	pc, pc, r3, lsl #2
   2e5ec:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e5f0:	b	2e720 <__flatcc_error_report@@Base+0x964>
   2e5f4:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e5f8:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e5fc:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e600:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e604:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e608:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e60c:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e610:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e614:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e618:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e61c:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e620:	b	2e6f8 <__flatcc_error_report@@Base+0x93c>
   2e624:	b	2e638 <__flatcc_error_report@@Base+0x87c>
   2e628:	b	2e6e0 <__flatcc_error_report@@Base+0x924>
   2e62c:	b	2e6ac <__flatcc_error_report@@Base+0x8f0>
   2e630:	b	2e664 <__flatcc_error_report@@Base+0x8a8>
   2e634:	b	2e664 <__flatcc_error_report@@Base+0x8a8>
   2e638:	ldr	r2, [pc, #332]	; 2e78c <__flatcc_error_report@@Base+0x9d0>
   2e63c:	mov	ip, #0
   2e640:	mov	r0, r4
   2e644:	mov	r3, ip
   2e648:	str	ip, [sp]
   2e64c:	str	ip, [sp, #4]
   2e650:	add	r2, pc, r2
   2e654:	bl	2ddbc <__flatcc_error_report@@Base>
   2e658:	mov	r3, #1
   2e65c:	ldr	r1, [r4, #40]	; 0x28
   2e660:	strh	r3, [r5, #8]
   2e664:	ldr	r2, [r5]
   2e668:	cmp	r2, #0
   2e66c:	beq	2e680 <__flatcc_error_report@@Base+0x8c4>
   2e670:	ldr	r3, [r1]
   2e674:	sub	r3, r3, r2
   2e678:	str	r3, [r5, #4]
   2e67c:	ldr	r1, [r4, #40]	; 0x28
   2e680:	ldr	r3, [r1, #16]
   2e684:	cmp	r3, #22
   2e688:	bne	2e740 <__flatcc_error_report@@Base+0x984>
   2e68c:	mov	r0, r4
   2e690:	add	sp, sp, #8
   2e694:	ldrd	r4, [sp]
   2e698:	ldrd	r6, [sp, #8]
   2e69c:	ldr	r8, [sp, #16]
   2e6a0:	ldr	lr, [sp, #20]
   2e6a4:	add	sp, sp, #24
   2e6a8:	b	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e6ac:	ldr	r2, [pc, #220]	; 2e790 <__flatcc_error_report@@Base+0x9d4>
   2e6b0:	mov	r0, #0
   2e6b4:	mov	ip, #1
   2e6b8:	mov	r3, r0
   2e6bc:	str	r0, [sp]
   2e6c0:	str	r0, [sp, #4]
   2e6c4:	mov	r0, r4
   2e6c8:	strh	ip, [r5, #8]
   2e6cc:	add	r2, pc, r2
   2e6d0:	bl	2ddbc <__flatcc_error_report@@Base>
   2e6d4:	mov	r0, r4
   2e6d8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e6dc:	b	2e5d8 <__flatcc_error_report@@Base+0x81c>
   2e6e0:	ldr	r3, [r5]
   2e6e4:	cmp	r3, #0
   2e6e8:	bne	2e6d4 <__flatcc_error_report@@Base+0x918>
   2e6ec:	ldr	r3, [r1]
   2e6f0:	str	r3, [r5]
   2e6f4:	b	2e6d4 <__flatcc_error_report@@Base+0x918>
   2e6f8:	mov	r0, #0
   2e6fc:	mov	ip, #1
   2e700:	mov	r3, r0
   2e704:	mov	r2, r8
   2e708:	str	r0, [sp]
   2e70c:	str	r0, [sp, #4]
   2e710:	mov	r0, r4
   2e714:	strh	ip, [r5, #8]
   2e718:	bl	2ddbc <__flatcc_error_report@@Base>
   2e71c:	b	2e6d4 <__flatcc_error_report@@Base+0x918>
   2e720:	mov	ip, #1
   2e724:	mov	r3, #0
   2e728:	mov	r2, r7
   2e72c:	mov	r0, r4
   2e730:	stm	sp, {r6, ip}
   2e734:	strh	ip, [r5, #8]
   2e738:	bl	2ddbc <__flatcc_error_report@@Base>
   2e73c:	b	2e6d4 <__flatcc_error_report@@Base+0x918>
   2e740:	ldr	r2, [pc, #76]	; 2e794 <__flatcc_error_report@@Base+0x9d8>
   2e744:	mov	ip, #0
   2e748:	mov	r0, r4
   2e74c:	mov	r3, ip
   2e750:	str	ip, [sp]
   2e754:	str	ip, [sp, #4]
   2e758:	add	r2, pc, r2
   2e75c:	bl	2ddbc <__flatcc_error_report@@Base>
   2e760:	mov	r3, #1
   2e764:	strh	r3, [r5, #8]
   2e768:	add	sp, sp, #8
   2e76c:	ldrd	r4, [sp]
   2e770:	ldrd	r6, [sp, #8]
   2e774:	ldr	r8, [sp, #16]
   2e778:	add	sp, sp, #20
   2e77c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e780:	andeq	r9, r2, r8, asr #3
   2e784:	strdeq	r9, [r2], -r0
   2e788:	strdeq	r9, [r2], -r0
   2e78c:	muleq	r2, r4, r1
   2e790:	andeq	r9, r2, r8, lsr #1
   2e794:	strheq	r9, [r2], -r8
   2e798:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2e79c:	strd	r6, [sp, #8]
   2e7a0:	mov	r7, r0
   2e7a4:	ldr	r6, [r0, #40]	; 0x28
   2e7a8:	strd	r8, [sp, #16]
   2e7ac:	mov	r8, r1
   2e7b0:	strd	sl, [sp, #24]
   2e7b4:	mov	fp, r3
   2e7b8:	mov	sl, r2
   2e7bc:	str	lr, [sp, #32]
   2e7c0:	sub	sp, sp, #68	; 0x44
   2e7c4:	ldr	r3, [r6, #16]
   2e7c8:	cmp	r3, #45	; 0x2d
   2e7cc:	beq	2e910 <__flatcc_error_report@@Base+0xb54>
   2e7d0:	cmp	r3, #10
   2e7d4:	beq	2eb60 <__flatcc_error_report@@Base+0xda4>
   2e7d8:	ble	2e86c <__flatcc_error_report@@Base+0xab0>
   2e7dc:	cmp	r3, #14
   2e7e0:	beq	2ea08 <__flatcc_error_report@@Base+0xc4c>
   2e7e4:	cmp	r3, #19
   2e7e8:	beq	2e8a8 <__flatcc_error_report@@Base+0xaec>
   2e7ec:	cmp	r3, #11
   2e7f0:	bne	2e94c <__flatcc_error_report@@Base+0xb90>
   2e7f4:	mov	r4, #0
   2e7f8:	mov	r3, #3
   2e7fc:	add	r1, sp, #60	; 0x3c
   2e800:	ldr	r0, [r6]
   2e804:	strh	r3, [r8, #8]
   2e808:	bl	13f88 <strtod@plt>
   2e80c:	ldrd	r2, [r6]
   2e810:	vstr	d0, [r8]
   2e814:	ldr	r1, [sp, #60]	; 0x3c
   2e818:	add	r3, r2, r3
   2e81c:	cmp	r1, r3
   2e820:	beq	2eb28 <__flatcc_error_report@@Base+0xd6c>
   2e824:	ldr	r2, [pc, #1572]	; 2ee50 <__flatcc_error_report@@Base+0x1094>
   2e828:	mov	ip, #1
   2e82c:	mov	r0, #0
   2e830:	add	r2, pc, r2
   2e834:	mov	r3, r0
   2e838:	mov	r1, r6
   2e83c:	str	r0, [sp]
   2e840:	str	r0, [sp, #4]
   2e844:	mov	r0, r7
   2e848:	strh	ip, [r8, #8]
   2e84c:	bl	2ddbc <__flatcc_error_report@@Base>
   2e850:	cmp	r4, #0
   2e854:	beq	2e89c <__flatcc_error_report@@Base+0xae0>
   2e858:	ldrh	r3, [r8, #8]
   2e85c:	cmp	r3, #6
   2e860:	bne	2e89c <__flatcc_error_report@@Base+0xae0>
   2e864:	mov	r9, r6
   2e868:	b	2ed40 <__flatcc_error_report@@Base+0xf84>
   2e86c:	movw	r2, #64550	; 0xfc26
   2e870:	movt	r2, #65535	; 0xffff
   2e874:	cmp	r3, r2
   2e878:	beq	2e9bc <__flatcc_error_report@@Base+0xc00>
   2e87c:	cmp	r3, #9
   2e880:	beq	2e9ac <__flatcc_error_report@@Base+0xbf0>
   2e884:	cmn	r3, #988	; 0x3dc
   2e888:	bne	2e94c <__flatcc_error_report@@Base+0xb90>
   2e88c:	mov	r2, #1
   2e890:	mov	r3, #6
   2e894:	strb	r2, [r8]
   2e898:	strh	r3, [r8, #8]
   2e89c:	mov	r0, r7
   2e8a0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e8a4:	b	2e96c <__flatcc_error_report@@Base+0xbb0>
   2e8a8:	mov	r4, #0
   2e8ac:	mov	r0, r7
   2e8b0:	mov	r5, #0
   2e8b4:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e8b8:	mov	r3, #2
   2e8bc:	mov	r1, r8
   2e8c0:	str	r5, [r8]
   2e8c4:	mov	r0, r7
   2e8c8:	str	r5, [r8, #4]
   2e8cc:	strh	r3, [r8, #8]
   2e8d0:	bl	2e5a4 <__flatcc_error_report@@Base+0x7e8>
   2e8d4:	ands	r3, sl, #1
   2e8d8:	beq	2ed00 <__flatcc_error_report@@Base+0xf44>
   2e8dc:	cmp	r4, #0
   2e8e0:	beq	2e96c <__flatcc_error_report@@Base+0xbb0>
   2e8e4:	mov	r2, #1
   2e8e8:	str	r5, [sp]
   2e8ec:	mov	r1, r6
   2e8f0:	str	r5, [sp, #4]
   2e8f4:	mov	r0, r7
   2e8f8:	mov	r3, r5
   2e8fc:	strh	r2, [r8, #8]
   2e900:	ldr	r2, [pc, #1356]	; 2ee54 <__flatcc_error_report@@Base+0x1098>
   2e904:	add	r2, pc, r2
   2e908:	bl	2ddbc <__flatcc_error_report@@Base>
   2e90c:	b	2e96c <__flatcc_error_report@@Base+0xbb0>
   2e910:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2e914:	ldr	r9, [r7, #40]	; 0x28
   2e918:	ldr	r3, [r9, #16]
   2e91c:	cmp	r3, #10
   2e920:	beq	2ed78 <__flatcc_error_report@@Base+0xfbc>
   2e924:	bgt	2e988 <__flatcc_error_report@@Base+0xbcc>
   2e928:	movw	r2, #64550	; 0xfc26
   2e92c:	movt	r2, #65535	; 0xffff
   2e930:	cmp	r3, r2
   2e934:	beq	2ed38 <__flatcc_error_report@@Base+0xf7c>
   2e938:	cmp	r3, #9
   2e93c:	beq	2e9d0 <__flatcc_error_report@@Base+0xc14>
   2e940:	cmn	r3, #988	; 0x3dc
   2e944:	beq	2ed6c <__flatcc_error_report@@Base+0xfb0>
   2e948:	mov	r6, r9
   2e94c:	mov	ip, #0
   2e950:	mov	r2, fp
   2e954:	mov	r1, r6
   2e958:	mov	r0, r7
   2e95c:	mov	r3, ip
   2e960:	str	ip, [sp]
   2e964:	str	ip, [sp, #4]
   2e968:	bl	2ddbc <__flatcc_error_report@@Base>
   2e96c:	add	sp, sp, #68	; 0x44
   2e970:	ldrd	r4, [sp]
   2e974:	ldrd	r6, [sp, #8]
   2e978:	ldrd	r8, [sp, #16]
   2e97c:	ldrd	sl, [sp, #24]
   2e980:	add	sp, sp, #32
   2e984:	pop	{pc}		; (ldr pc, [sp], #4)
   2e988:	cmp	r3, #14
   2e98c:	beq	2eb54 <__flatcc_error_report@@Base+0xd98>
   2e990:	cmp	r3, #19
   2e994:	beq	2eb48 <__flatcc_error_report@@Base+0xd8c>
   2e998:	cmp	r3, #11
   2e99c:	bne	2e948 <__flatcc_error_report@@Base+0xb8c>
   2e9a0:	mov	r4, r6
   2e9a4:	mov	r6, r9
   2e9a8:	b	2e7f8 <__flatcc_error_report@@Base+0xa3c>
   2e9ac:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   2e9b0:	mov	r3, #13
   2e9b4:	strh	r3, [r8, #8]
   2e9b8:	b	2e96c <__flatcc_error_report@@Base+0xbb0>
   2e9bc:	mov	r2, #0
   2e9c0:	mov	r3, #6
   2e9c4:	strb	r2, [r8]
   2e9c8:	strh	r3, [r8, #8]
   2e9cc:	b	2e89c <__flatcc_error_report@@Base+0xae0>
   2e9d0:	mov	r1, r8
   2e9d4:	mov	r0, r7
   2e9d8:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   2e9dc:	ldr	r2, [pc, #1140]	; 2ee58 <__flatcc_error_report@@Base+0x109c>
   2e9e0:	mov	r3, #0
   2e9e4:	mov	ip, #1
   2e9e8:	mov	r1, r9
   2e9ec:	mov	r0, r7
   2e9f0:	str	r3, [sp]
   2e9f4:	str	r3, [sp, #4]
   2e9f8:	strh	ip, [r8, #8]
   2e9fc:	add	r2, pc, r2
   2ea00:	bl	2ddbc <__flatcc_error_report@@Base>
   2ea04:	b	2e96c <__flatcc_error_report@@Base+0xbb0>
   2ea08:	mov	r4, #0
   2ea0c:	ldr	r3, [r6]
   2ea10:	mov	r1, #5
   2ea14:	ldr	r2, [r6, #4]
   2ea18:	strh	r1, [r8, #8]
   2ea1c:	add	r0, r3, r2
   2ea20:	cmp	r3, r0
   2ea24:	str	r0, [sp, #20]
   2ea28:	beq	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ea2c:	ldrb	r1, [r3]
   2ea30:	cmp	r1, #45	; 0x2d
   2ea34:	str	r1, [sp, #32]
   2ea38:	movne	r1, #0
   2ea3c:	moveq	r1, #1
   2ea40:	sub	r2, r2, r1
   2ea44:	cmp	r2, #1
   2ea48:	ble	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ea4c:	ldrb	r2, [r3, r1]
   2ea50:	add	r3, r3, r1
   2ea54:	cmp	r2, #48	; 0x30
   2ea58:	bne	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ea5c:	ldrb	r2, [r3, #1]
   2ea60:	orr	r2, r2, #32
   2ea64:	cmp	r2, #120	; 0x78
   2ea68:	bne	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ea6c:	add	r2, r3, #2
   2ea70:	str	r2, [sp, #24]
   2ea74:	sub	r2, r0, r2
   2ea78:	cmp	r2, #16
   2ea7c:	addgt	r3, r3, #18
   2ea80:	strgt	r3, [sp, #16]
   2ea84:	bgt	2ea90 <__flatcc_error_report@@Base+0xcd4>
   2ea88:	ldr	r3, [sp, #20]
   2ea8c:	str	r3, [sp, #16]
   2ea90:	ldr	r2, [sp, #16]
   2ea94:	ldr	r3, [sp, #24]
   2ea98:	cmp	r3, r2
   2ea9c:	beq	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2eaa0:	mov	r2, #0
   2eaa4:	mov	r3, #0
   2eaa8:	strd	r6, [sp, #36]	; 0x24
   2eaac:	str	r4, [sp, #48]	; 0x30
   2eab0:	str	r8, [sp, #52]	; 0x34
   2eab4:	ldr	r1, [sp, #24]
   2eab8:	b	2ead8 <__flatcc_error_report@@Base+0xd1c>
   2eabc:	subs	r4, r8, #48	; 0x30
   2eac0:	sbc	r5, lr, #0
   2eac4:	adds	r2, r4, r0
   2eac8:	adc	r3, r5, #0
   2eacc:	ldr	r0, [sp, #16]
   2ead0:	cmp	r0, r1
   2ead4:	beq	2edd4 <__flatcc_error_report@@Base+0x1018>
   2ead8:	mov	fp, r1
   2eadc:	ldrb	r0, [r1], #1
   2eae0:	lsl	lr, r3, #4
   2eae4:	lsl	r8, r2, #4
   2eae8:	orr	lr, lr, r2, lsr #28
   2eaec:	sub	r9, r0, #48	; 0x30
   2eaf0:	orr	r7, r0, #32
   2eaf4:	cmp	r9, #9
   2eaf8:	sub	sl, r7, #97	; 0x61
   2eafc:	bls	2eabc <__flatcc_error_report@@Base+0xd00>
   2eb00:	cmp	sl, #5
   2eb04:	bhi	2ee00 <__flatcc_error_report@@Base+0x1044>
   2eb08:	subs	r3, r8, #87	; 0x57
   2eb0c:	str	r3, [sp, #8]
   2eb10:	sbc	r3, lr, #0
   2eb14:	str	r3, [sp, #12]
   2eb18:	ldrd	r2, [sp, #8]
   2eb1c:	adds	r2, r2, r7
   2eb20:	adc	r3, r3, #0
   2eb24:	b	2eacc <__flatcc_error_report@@Base+0xd10>
   2eb28:	ldrb	r3, [r2]
   2eb2c:	cmp	r3, #46	; 0x2e
   2eb30:	beq	2ed24 <__flatcc_error_report@@Base+0xf68>
   2eb34:	cmp	r4, #0
   2eb38:	vnegne.f64	d0, d0
   2eb3c:	vstrne	d0, [r8]
   2eb40:	bne	2e858 <__flatcc_error_report@@Base+0xa9c>
   2eb44:	b	2e89c <__flatcc_error_report@@Base+0xae0>
   2eb48:	mov	r4, r6
   2eb4c:	mov	r6, r9
   2eb50:	b	2e8ac <__flatcc_error_report@@Base+0xaf0>
   2eb54:	mov	r4, r6
   2eb58:	mov	r6, r9
   2eb5c:	b	2ea0c <__flatcc_error_report@@Base+0xc50>
   2eb60:	mov	r3, #0
   2eb64:	str	r3, [sp, #8]
   2eb68:	ldr	ip, [r6]
   2eb6c:	mov	r3, #5
   2eb70:	ldr	r0, [r6, #4]
   2eb74:	strh	r3, [r8, #8]
   2eb78:	add	r0, ip, r0
   2eb7c:	cmp	ip, r0
   2eb80:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2eb84:	ldrb	r3, [ip]
   2eb88:	cmp	r3, #45	; 0x2d
   2eb8c:	str	r3, [sp, #20]
   2eb90:	movne	r3, #0
   2eb94:	moveq	r3, #1
   2eb98:	add	fp, ip, r3
   2eb9c:	cmp	r0, fp
   2eba0:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2eba4:	ldrb	r2, [ip, r3]
   2eba8:	sub	r3, r2, #48	; 0x30
   2ebac:	cmp	r3, #9
   2ebb0:	bhi	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ebb4:	uxtb	r2, r2
   2ebb8:	mov	r3, #0
   2ebbc:	str	fp, [sp, #16]
   2ebc0:	subs	r4, r2, #48	; 0x30
   2ebc4:	add	r1, fp, #1
   2ebc8:	str	ip, [sp, #32]
   2ebcc:	sbc	r5, r3, #0
   2ebd0:	b	2ec08 <__flatcc_error_report@@Base+0xe4c>
   2ebd4:	adds	r3, r3, r4
   2ebd8:	adc	r2, r2, r5
   2ebdc:	adds	r3, r3, r3
   2ebe0:	adc	r2, r2, r2
   2ebe4:	subs	sl, r3, #48	; 0x30
   2ebe8:	sbc	fp, r2, #0
   2ebec:	adds	r2, sl, lr
   2ebf0:	adc	r3, fp, #0
   2ebf4:	cmp	r3, r5
   2ebf8:	mov	r5, r3
   2ebfc:	cmpeq	r2, r4
   2ec00:	mov	r4, r2
   2ec04:	bcc	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec08:	cmp	r0, r1
   2ec0c:	lsl	r2, r5, #2
   2ec10:	mov	ip, r1
   2ec14:	lsl	r3, r4, #2
   2ec18:	beq	2ed84 <__flatcc_error_report@@Base+0xfc8>
   2ec1c:	ldrb	lr, [r1], #1
   2ec20:	orr	r2, r2, r4, lsr #30
   2ec24:	sub	r9, lr, #48	; 0x30
   2ec28:	cmp	r9, #9
   2ec2c:	bls	2ebd4 <__flatcc_error_report@@Base+0xe18>
   2ec30:	mov	sl, ip
   2ec34:	ldr	fp, [sp, #16]
   2ec38:	ldr	ip, [sp, #32]
   2ec3c:	cmp	ip, sl
   2ec40:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec44:	cmp	fp, sl
   2ec48:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec4c:	cmp	lr, #80	; 0x50
   2ec50:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec54:	bhi	2edc0 <__flatcc_error_report@@Base+0x1004>
   2ec58:	cmp	lr, #46	; 0x2e
   2ec5c:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec60:	cmp	lr, #69	; 0x45
   2ec64:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec68:	ldr	r3, [sp, #20]
   2ec6c:	strd	r4, [r8]
   2ec70:	cmp	r3, #45	; 0x2d
   2ec74:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2ec78:	ldr	r3, [sp, #8]
   2ec7c:	cmp	r3, #0
   2ec80:	beq	2e89c <__flatcc_error_report@@Base+0xae0>
   2ec84:	ldrd	r2, [r8]
   2ec88:	mov	r1, #4
   2ec8c:	strh	r1, [r8, #8]
   2ec90:	rsbs	r2, r2, #0
   2ec94:	rsc	r3, r3, #0
   2ec98:	strd	r2, [r8]
   2ec9c:	b	2e89c <__flatcc_error_report@@Base+0xae0>
   2eca0:	ldr	r1, [sp, #16]
   2eca4:	ldrb	r1, [r1]
   2eca8:	sub	r0, r1, #48	; 0x30
   2ecac:	cmp	r0, #9
   2ecb0:	bls	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ecb4:	orr	r1, r1, #32
   2ecb8:	sub	r0, r1, #97	; 0x61
   2ecbc:	uxtb	r0, r0
   2ecc0:	cmp	r0, #5
   2ecc4:	bhi	2ee34 <__flatcc_error_report@@Base+0x1078>
   2ecc8:	ldr	r2, [pc, #396]	; 2ee5c <__flatcc_error_report@@Base+0x10a0>
   2eccc:	mov	r0, #0
   2ecd0:	mov	ip, #1
   2ecd4:	mov	r3, r0
   2ecd8:	mov	r1, r6
   2ecdc:	str	r0, [sp]
   2ece0:	str	r0, [sp, #4]
   2ece4:	mov	r0, r7
   2ece8:	strh	ip, [r8, #8]
   2ecec:	add	r2, pc, r2
   2ecf0:	bl	2ddbc <__flatcc_error_report@@Base>
   2ecf4:	cmp	r4, #0
   2ecf8:	beq	2e89c <__flatcc_error_report@@Base+0xae0>
   2ecfc:	b	2ec84 <__flatcc_error_report@@Base+0xec8>
   2ed00:	mov	ip, #1
   2ed04:	mov	r2, fp
   2ed08:	str	r3, [sp]
   2ed0c:	mov	r1, r6
   2ed10:	mov	r0, r7
   2ed14:	str	r3, [sp, #4]
   2ed18:	strh	ip, [r8, #8]
   2ed1c:	bl	2ddbc <__flatcc_error_report@@Base>
   2ed20:	b	2e96c <__flatcc_error_report@@Base+0xbb0>
   2ed24:	ldr	r2, [pc, #308]	; 2ee60 <__flatcc_error_report@@Base+0x10a4>
   2ed28:	mov	ip, #1
   2ed2c:	mov	r0, #0
   2ed30:	add	r2, pc, r2
   2ed34:	b	2e834 <__flatcc_error_report@@Base+0xa78>
   2ed38:	mov	r3, #0
   2ed3c:	strb	r3, [r8]
   2ed40:	ldr	r2, [pc, #284]	; 2ee64 <__flatcc_error_report@@Base+0x10a8>
   2ed44:	mov	r3, #0
   2ed48:	mov	r0, #1
   2ed4c:	mov	r1, r9
   2ed50:	str	r3, [sp]
   2ed54:	str	r3, [sp, #4]
   2ed58:	strh	r0, [r8, #8]
   2ed5c:	mov	r0, r7
   2ed60:	add	r2, pc, r2
   2ed64:	bl	2ddbc <__flatcc_error_report@@Base>
   2ed68:	b	2e89c <__flatcc_error_report@@Base+0xae0>
   2ed6c:	mov	r3, #1
   2ed70:	strb	r3, [r8]
   2ed74:	b	2ed40 <__flatcc_error_report@@Base+0xf84>
   2ed78:	str	r6, [sp, #8]
   2ed7c:	mov	r6, r9
   2ed80:	b	2eb68 <__flatcc_error_report@@Base+0xdac>
   2ed84:	ldr	fp, [sp, #16]
   2ed88:	cmp	fp, r0
   2ed8c:	bne	2ec68 <__flatcc_error_report@@Base+0xeac>
   2ed90:	ldr	r2, [pc, #208]	; 2ee68 <__flatcc_error_report@@Base+0x10ac>
   2ed94:	mov	r0, #0
   2ed98:	mov	ip, #1
   2ed9c:	mov	r3, r0
   2eda0:	mov	r1, r6
   2eda4:	str	r0, [sp]
   2eda8:	str	r0, [sp, #4]
   2edac:	mov	r0, r7
   2edb0:	strh	ip, [r8, #8]
   2edb4:	add	r2, pc, r2
   2edb8:	bl	2ddbc <__flatcc_error_report@@Base>
   2edbc:	b	2ec78 <__flatcc_error_report@@Base+0xebc>
   2edc0:	cmp	lr, #101	; 0x65
   2edc4:	beq	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2edc8:	cmp	lr, #112	; 0x70
   2edcc:	bne	2ec68 <__flatcc_error_report@@Base+0xeac>
   2edd0:	b	2ed90 <__flatcc_error_report@@Base+0xfd4>
   2edd4:	ldr	r1, [sp, #20]
   2edd8:	ldrd	r6, [sp, #36]	; 0x24
   2eddc:	ldr	r4, [sp, #48]	; 0x30
   2ede0:	cmp	r1, r0
   2ede4:	ldr	r8, [sp, #52]	; 0x34
   2ede8:	bne	2eca0 <__flatcc_error_report@@Base+0xee4>
   2edec:	strd	r2, [r8]
   2edf0:	ldr	r1, [sp, #32]
   2edf4:	cmp	r1, #45	; 0x2d
   2edf8:	bne	2ecf4 <__flatcc_error_report@@Base+0xf38>
   2edfc:	b	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ee00:	ldr	r1, [sp, #24]
   2ee04:	ldrd	r6, [sp, #36]	; 0x24
   2ee08:	ldr	r4, [sp, #48]	; 0x30
   2ee0c:	cmp	fp, r1
   2ee10:	ldr	r8, [sp, #52]	; 0x34
   2ee14:	beq	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ee18:	ldr	r0, [sp, #20]
   2ee1c:	cmp	fp, r0
   2ee20:	beq	2edec <__flatcc_error_report@@Base+0x1030>
   2ee24:	ldr	r0, [sp, #16]
   2ee28:	ldrb	r1, [fp]
   2ee2c:	cmp	fp, r0
   2ee30:	beq	2eca8 <__flatcc_error_report@@Base+0xeec>
   2ee34:	cmp	r1, #80	; 0x50
   2ee38:	beq	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ee3c:	cmp	r1, #112	; 0x70
   2ee40:	beq	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ee44:	cmp	r1, #46	; 0x2e
   2ee48:	bne	2edec <__flatcc_error_report@@Base+0x1030>
   2ee4c:	b	2ecc8 <__flatcc_error_report@@Base+0xf0c>
   2ee50:	andeq	r9, r2, r8, lsr #32
   2ee54:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   2ee58:	andeq	r8, r2, r4, ror #29
   2ee5c:	andeq	r8, r2, r8, lsr fp
   2ee60:	andeq	r8, r2, r0, asr #22
   2ee64:	andeq	r8, r2, ip, asr fp
   2ee68:	andeq	r8, r2, ip, lsl #21
   2ee6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ee70:	strd	r6, [sp, #8]
   2ee74:	ldr	r6, [r0, #40]	; 0x28
   2ee78:	strd	r8, [sp, #16]
   2ee7c:	str	sl, [sp, #24]
   2ee80:	str	lr, [sp, #28]
   2ee84:	sub	sp, sp, #8
   2ee88:	ldr	r3, [r6, #16]
   2ee8c:	cmp	r3, #40	; 0x28
   2ee90:	movne	r4, #0
   2ee94:	beq	2eeb8 <__flatcc_error_report@@Base+0x10fc>
   2ee98:	mov	r0, r4
   2ee9c:	add	sp, sp, #8
   2eea0:	ldrd	r4, [sp]
   2eea4:	ldrd	r6, [sp, #8]
   2eea8:	ldrd	r8, [sp, #16]
   2eeac:	ldr	sl, [sp, #24]
   2eeb0:	add	sp, sp, #28
   2eeb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eeb8:	mov	r5, r0
   2eebc:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2eec0:	ldr	r8, [r5, #40]	; 0x28
   2eec4:	ldr	r3, [r8, #16]
   2eec8:	cmp	r3, #9
   2eecc:	beq	2eef0 <__flatcc_error_report@@Base+0x1134>
   2eed0:	ldr	r2, [pc, #348]	; 2f034 <__flatcc_error_report@@Base+0x1278>
   2eed4:	mov	r3, r6
   2eed8:	mov	r0, r5
   2eedc:	mov	r1, #41	; 0x29
   2eee0:	mov	r4, #0
   2eee4:	add	r2, pc, r2
   2eee8:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   2eeec:	b	2ee98 <__flatcc_error_report@@Base+0x10dc>
   2eef0:	ldr	r9, [pc, #320]	; 2f038 <__flatcc_error_report@@Base+0x127c>
   2eef4:	mov	r0, r5
   2eef8:	mov	sl, #0
   2eefc:	add	r9, pc, r9
   2ef00:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2ef04:	ldr	r2, [r5, #44]	; 0x2c
   2ef08:	ldr	r7, [r5, #52]	; 0x34
   2ef0c:	add	r3, r7, #32
   2ef10:	cmp	r3, r2
   2ef14:	bhi	2efd4 <__flatcc_error_report@@Base+0x1218>
   2ef18:	ldr	r2, [r5, #40]	; 0x28
   2ef1c:	mov	r4, r7
   2ef20:	str	r3, [r5, #52]	; 0x34
   2ef24:	str	sl, [r7]
   2ef28:	str	r8, [r7, #4]
   2ef2c:	ldr	r3, [r2, #16]
   2ef30:	cmp	r3, #58	; 0x3a
   2ef34:	bne	2ef54 <__flatcc_error_report@@Base+0x1198>
   2ef38:	mov	r0, r5
   2ef3c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2ef40:	mov	r3, r9
   2ef44:	mov	r2, #1
   2ef48:	add	r1, r7, #8
   2ef4c:	mov	r0, r5
   2ef50:	bl	2e798 <__flatcc_error_report@@Base+0x9dc>
   2ef54:	ldr	r3, [r5, #108]	; 0x6c
   2ef58:	cmp	r3, #9
   2ef5c:	bgt	2ee98 <__flatcc_error_report@@Base+0x10dc>
   2ef60:	ldr	r3, [r5, #40]	; 0x28
   2ef64:	ldr	r3, [r3, #16]
   2ef68:	cmp	r3, #44	; 0x2c
   2ef6c:	beq	2efac <__flatcc_error_report@@Base+0x11f0>
   2ef70:	ldr	r2, [pc, #196]	; 2f03c <__flatcc_error_report@@Base+0x1280>
   2ef74:	mov	r3, r6
   2ef78:	mov	r0, r5
   2ef7c:	mov	r1, #41	; 0x29
   2ef80:	add	r2, pc, r2
   2ef84:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   2ef88:	mov	r2, #0
   2ef8c:	b	2ef94 <__flatcc_error_report@@Base+0x11d8>
   2ef90:	mov	r4, r3
   2ef94:	ldr	r3, [r4]
   2ef98:	str	r2, [r4]
   2ef9c:	mov	r2, r4
   2efa0:	cmp	r3, #0
   2efa4:	bne	2ef90 <__flatcc_error_report@@Base+0x11d4>
   2efa8:	b	2ee98 <__flatcc_error_report@@Base+0x10dc>
   2efac:	mov	r0, r5
   2efb0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2efb4:	ldr	r8, [r5, #40]	; 0x28
   2efb8:	ldr	r3, [r8, #16]
   2efbc:	cmp	r3, #9
   2efc0:	bne	2f008 <__flatcc_error_report@@Base+0x124c>
   2efc4:	mov	r0, r5
   2efc8:	mov	sl, r7
   2efcc:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2efd0:	b	2ef04 <__flatcc_error_report@@Base+0x1148>
   2efd4:	mov	r1, #1
   2efd8:	mov	r0, #65536	; 0x10000
   2efdc:	bl	13e74 <calloc@plt>
   2efe0:	cmp	r0, #0
   2efe4:	beq	2f030 <__flatcc_error_report@@Base+0x1274>
   2efe8:	ldr	r2, [r5, #48]	; 0x30
   2efec:	add	r1, r0, #65536	; 0x10000
   2eff0:	add	r7, r0, #16
   2eff4:	add	r3, r0, #48	; 0x30
   2eff8:	str	r1, [r5, #44]	; 0x2c
   2effc:	str	r0, [r5, #48]	; 0x30
   2f000:	str	r2, [r0]
   2f004:	b	2ef18 <__flatcc_error_report@@Base+0x115c>
   2f008:	ldr	r2, [pc, #48]	; 2f040 <__flatcc_error_report@@Base+0x1284>
   2f00c:	mov	ip, #0
   2f010:	mov	r1, r8
   2f014:	mov	r3, ip
   2f018:	mov	r0, r5
   2f01c:	str	ip, [sp]
   2f020:	str	ip, [sp, #4]
   2f024:	add	r2, pc, r2
   2f028:	bl	2ddbc <__flatcc_error_report@@Base>
   2f02c:	b	2ef70 <__flatcc_error_report@@Base+0x11b4>
   2f030:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   2f034:	andeq	r8, r2, ip, lsl sl
   2f038:	andeq	r8, r2, r4, lsr #20
   2f03c:	andeq	r8, r2, r0, lsl #19
   2f040:	andeq	r8, r2, ip, lsl r9
   2f044:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2f048:	mov	r4, r0
   2f04c:	ldr	r5, [r0, #40]	; 0x28
   2f050:	ldr	r3, [r5, #16]
   2f054:	strd	r6, [sp, #8]
   2f058:	strd	r8, [sp, #16]
   2f05c:	strd	sl, [sp, #24]
   2f060:	str	lr, [sp, #32]
   2f064:	sub	sp, sp, #20
   2f068:	cmp	r3, #9
   2f06c:	bne	2f478 <__flatcc_error_report@@Base+0x16bc>
   2f070:	mov	r7, r1
   2f074:	mov	r8, r2
   2f078:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f07c:	mov	r0, r4
   2f080:	str	r5, [r7, #4]
   2f084:	bl	2ee6c <__flatcc_error_report@@Base+0x10b0>
   2f088:	ldr	r1, [r4, #40]	; 0x28
   2f08c:	ldr	r3, [r1, #16]
   2f090:	str	r0, [r7, #28]
   2f094:	cmp	r3, #123	; 0x7b
   2f098:	bne	2f23c <__flatcc_error_report@@Base+0x1480>
   2f09c:	ldr	r3, [pc, #1128]	; 2f50c <__flatcc_error_report@@Base+0x1750>
   2f0a0:	mov	r0, r4
   2f0a4:	movw	r9, #64569	; 0xfc39
   2f0a8:	movt	r9, #65535	; 0xffff
   2f0ac:	add	r3, pc, r3
   2f0b0:	str	r3, [sp, #8]
   2f0b4:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f0b8:	ldr	sl, [r4, #40]	; 0x28
   2f0bc:	ldr	r3, [pc, #1100]	; 2f510 <__flatcc_error_report@@Base+0x1754>
   2f0c0:	ldr	fp, [sl, #16]
   2f0c4:	add	r3, pc, r3
   2f0c8:	str	r3, [sp, #12]
   2f0cc:	cmp	fp, #125	; 0x7d
   2f0d0:	beq	2f1e8 <__flatcc_error_report@@Base+0x142c>
   2f0d4:	cmp	r8, r9
   2f0d8:	ldr	r0, [r4, #44]	; 0x2c
   2f0dc:	ldr	r5, [r4, #52]	; 0x34
   2f0e0:	add	r1, r5, #128	; 0x80
   2f0e4:	beq	2f284 <__flatcc_error_report@@Base+0x14c8>
   2f0e8:	cmp	r1, r0
   2f0ec:	bhi	2f3b0 <__flatcc_error_report@@Base+0x15f4>
   2f0f0:	ldr	r0, [r7, #20]
   2f0f4:	mov	ip, #5
   2f0f8:	str	r1, [r4, #52]	; 0x34
   2f0fc:	str	r0, [r5]
   2f100:	strh	ip, [r5, #8]
   2f104:	str	r5, [r7, #20]
   2f108:	ldr	r1, [r4, #36]	; 0x24
   2f10c:	cmp	r1, #0
   2f110:	beq	2f134 <__flatcc_error_report@@Base+0x1378>
   2f114:	mov	ip, #0
   2f118:	b	2f120 <__flatcc_error_report@@Base+0x1364>
   2f11c:	mov	r1, r0
   2f120:	ldr	r0, [r1]
   2f124:	str	ip, [r1]
   2f128:	mov	ip, r1
   2f12c:	cmp	r0, #0
   2f130:	bne	2f11c <__flatcc_error_report@@Base+0x1360>
   2f134:	mov	r6, #0
   2f138:	cmp	fp, #9
   2f13c:	str	r1, [r5, #68]	; 0x44
   2f140:	str	r6, [r4, #36]	; 0x24
   2f144:	bne	2f388 <__flatcc_error_report@@Base+0x15cc>
   2f148:	mov	r0, r4
   2f14c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f150:	ldr	r1, [r4, #40]	; 0x28
   2f154:	ldr	r3, [r1, #16]
   2f158:	str	sl, [r5, #4]
   2f15c:	cmp	r3, #58	; 0x3a
   2f160:	bne	2f3e4 <__flatcc_error_report@@Base+0x1628>
   2f164:	mov	r0, r4
   2f168:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f16c:	add	r1, r5, #16
   2f170:	mov	r0, r4
   2f174:	bl	2e178 <__flatcc_error_report@@Base+0x3bc>
   2f178:	ldr	r3, [r4, #40]	; 0x28
   2f17c:	ldr	r3, [r3, #16]
   2f180:	cmp	r3, #61	; 0x3d
   2f184:	bne	2f1a8 <__flatcc_error_report@@Base+0x13ec>
   2f188:	mov	r0, r4
   2f18c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f190:	ldr	r3, [pc, #892]	; 2f514 <__flatcc_error_report@@Base+0x1758>
   2f194:	mov	r2, #2
   2f198:	add	r1, r5, #48	; 0x30
   2f19c:	mov	r0, r4
   2f1a0:	add	r3, pc, r3
   2f1a4:	bl	2e798 <__flatcc_error_report@@Base+0x9dc>
   2f1a8:	mov	r0, r4
   2f1ac:	bl	2ee6c <__flatcc_error_report@@Base+0x10b0>
   2f1b0:	ldr	r2, [pc, #864]	; 2f518 <__flatcc_error_report@@Base+0x175c>
   2f1b4:	mov	r3, #0
   2f1b8:	mov	r1, #59	; 0x3b
   2f1bc:	str	r0, [r5, #64]	; 0x40
   2f1c0:	mov	r0, r4
   2f1c4:	add	r2, pc, r2
   2f1c8:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   2f1cc:	ldr	r3, [r4, #108]	; 0x6c
   2f1d0:	cmp	r3, #9
   2f1d4:	bgt	2f25c <__flatcc_error_report@@Base+0x14a0>
   2f1d8:	ldr	sl, [r4, #40]	; 0x28
   2f1dc:	ldr	fp, [sl, #16]
   2f1e0:	cmp	fp, #125	; 0x7d
   2f1e4:	bne	2f0d4 <__flatcc_error_report@@Base+0x1318>
   2f1e8:	mov	r0, r4
   2f1ec:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f1f0:	ldr	r3, [r7, #20]
   2f1f4:	cmp	r3, #0
   2f1f8:	beq	2f21c <__flatcc_error_report@@Base+0x1460>
   2f1fc:	mov	r1, #0
   2f200:	b	2f208 <__flatcc_error_report@@Base+0x144c>
   2f204:	mov	r3, r2
   2f208:	ldr	r2, [r3]
   2f20c:	str	r1, [r3]
   2f210:	mov	r1, r3
   2f214:	cmp	r2, #0
   2f218:	bne	2f204 <__flatcc_error_report@@Base+0x1448>
   2f21c:	str	r3, [r7, #20]
   2f220:	add	sp, sp, #20
   2f224:	ldrd	r4, [sp]
   2f228:	ldrd	r6, [sp, #8]
   2f22c:	ldrd	r8, [sp, #16]
   2f230:	ldrd	sl, [sp, #24]
   2f234:	add	sp, sp, #32
   2f238:	pop	{pc}		; (ldr pc, [sp], #4)
   2f23c:	ldr	r2, [pc, #728]	; 2f51c <__flatcc_error_report@@Base+0x1760>
   2f240:	mov	ip, #0
   2f244:	mov	r0, r4
   2f248:	mov	r3, ip
   2f24c:	str	ip, [sp]
   2f250:	str	ip, [sp, #4]
   2f254:	add	r2, pc, r2
   2f258:	bl	2ddbc <__flatcc_error_report@@Base>
   2f25c:	mov	r0, r4
   2f260:	mov	r1, #125	; 0x7d
   2f264:	add	sp, sp, #20
   2f268:	ldrd	r4, [sp]
   2f26c:	ldrd	r6, [sp, #8]
   2f270:	ldrd	r8, [sp, #16]
   2f274:	ldrd	sl, [sp, #24]
   2f278:	ldr	lr, [sp, #32]
   2f27c:	add	sp, sp, #36	; 0x24
   2f280:	b	2dc4c <__flatcc_fb_default_error_out@@Base+0x310>
   2f284:	cmp	r1, r0
   2f288:	bhi	2f424 <__flatcc_error_report@@Base+0x1668>
   2f28c:	ldr	r0, [r7, #20]
   2f290:	mov	ip, #5
   2f294:	str	r1, [r4, #52]	; 0x34
   2f298:	str	r0, [r5]
   2f29c:	strh	ip, [r5, #8]
   2f2a0:	str	r5, [r7, #20]
   2f2a4:	ldr	r1, [r4, #36]	; 0x24
   2f2a8:	cmp	r1, #0
   2f2ac:	beq	2f2d0 <__flatcc_error_report@@Base+0x1514>
   2f2b0:	mov	ip, #0
   2f2b4:	b	2f2bc <__flatcc_error_report@@Base+0x1500>
   2f2b8:	mov	r1, r0
   2f2bc:	ldr	r0, [r1]
   2f2c0:	str	ip, [r1]
   2f2c4:	mov	ip, r1
   2f2c8:	cmp	r0, #0
   2f2cc:	bne	2f2b8 <__flatcc_error_report@@Base+0x14fc>
   2f2d0:	mov	r6, #0
   2f2d4:	cmp	fp, #9
   2f2d8:	str	r1, [r5, #68]	; 0x44
   2f2dc:	str	r6, [r4, #36]	; 0x24
   2f2e0:	bne	2f400 <__flatcc_error_report@@Base+0x1644>
   2f2e4:	mov	r0, r4
   2f2e8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f2ec:	ldr	r1, [r4, #40]	; 0x28
   2f2f0:	ldr	r3, [r1, #16]
   2f2f4:	str	sl, [r5, #4]
   2f2f8:	cmp	r3, #40	; 0x28
   2f2fc:	bne	2f458 <__flatcc_error_report@@Base+0x169c>
   2f300:	mov	r0, r4
   2f304:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f308:	add	r1, r5, #32
   2f30c:	mov	r0, r4
   2f310:	bl	2e178 <__flatcc_error_report@@Base+0x3bc>
   2f314:	ldr	r1, [r4, #40]	; 0x28
   2f318:	ldr	r3, [r1, #16]
   2f31c:	cmp	r3, #41	; 0x29
   2f320:	bne	2f49c <__flatcc_error_report@@Base+0x16e0>
   2f324:	mov	r0, r4
   2f328:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f32c:	ldr	r1, [r4, #40]	; 0x28
   2f330:	ldr	r3, [r1, #16]
   2f334:	cmp	r3, #58	; 0x3a
   2f338:	bne	2f4bc <__flatcc_error_report@@Base+0x1700>
   2f33c:	mov	r0, r4
   2f340:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f344:	add	r1, r5, #16
   2f348:	mov	r0, r4
   2f34c:	bl	2e178 <__flatcc_error_report@@Base+0x3bc>
   2f350:	ldr	sl, [r4, #40]	; 0x28
   2f354:	ldr	r3, [sl, #16]
   2f358:	cmp	r3, #61	; 0x3d
   2f35c:	beq	2f4dc <__flatcc_error_report@@Base+0x1720>
   2f360:	mov	r0, r4
   2f364:	bl	2ee6c <__flatcc_error_report@@Base+0x10b0>
   2f368:	ldr	r2, [pc, #432]	; 2f520 <__flatcc_error_report@@Base+0x1764>
   2f36c:	mov	r3, r6
   2f370:	mov	r1, #59	; 0x3b
   2f374:	str	r0, [r5, #64]	; 0x40
   2f378:	mov	r0, r4
   2f37c:	add	r2, pc, r2
   2f380:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   2f384:	b	2f1cc <__flatcc_error_report@@Base+0x1410>
   2f388:	mov	r3, r6
   2f38c:	mov	r1, sl
   2f390:	str	r6, [sp]
   2f394:	mov	r0, r4
   2f398:	str	r6, [sp, #4]
   2f39c:	ldr	r2, [sp, #8]
   2f3a0:	bl	2ddbc <__flatcc_error_report@@Base>
   2f3a4:	mov	r0, r4
   2f3a8:	bl	2dbd4 <__flatcc_fb_default_error_out@@Base+0x298>
   2f3ac:	b	2f1cc <__flatcc_error_report@@Base+0x1410>
   2f3b0:	mov	r1, #1
   2f3b4:	mov	r0, #65536	; 0x10000
   2f3b8:	bl	13e74 <calloc@plt>
   2f3bc:	cmp	r0, #0
   2f3c0:	beq	2f508 <__flatcc_error_report@@Base+0x174c>
   2f3c4:	ldr	ip, [r4, #48]	; 0x30
   2f3c8:	add	lr, r0, #65536	; 0x10000
   2f3cc:	add	r5, r0, #16
   2f3d0:	add	r1, r0, #144	; 0x90
   2f3d4:	str	lr, [r4, #44]	; 0x2c
   2f3d8:	str	r0, [r4, #48]	; 0x30
   2f3dc:	str	ip, [r0]
   2f3e0:	b	2f0f0 <__flatcc_error_report@@Base+0x1334>
   2f3e4:	mov	r3, r6
   2f3e8:	mov	r0, r4
   2f3ec:	str	r6, [sp]
   2f3f0:	str	r6, [sp, #4]
   2f3f4:	ldr	r2, [sp, #12]
   2f3f8:	bl	2ddbc <__flatcc_error_report@@Base>
   2f3fc:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f400:	ldr	r2, [pc, #284]	; 2f524 <__flatcc_error_report@@Base+0x1768>
   2f404:	mov	r3, r6
   2f408:	mov	r1, sl
   2f40c:	mov	r0, r4
   2f410:	str	r6, [sp]
   2f414:	str	r6, [sp, #4]
   2f418:	add	r2, pc, r2
   2f41c:	bl	2ddbc <__flatcc_error_report@@Base>
   2f420:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f424:	mov	r1, #1
   2f428:	mov	r0, #65536	; 0x10000
   2f42c:	bl	13e74 <calloc@plt>
   2f430:	cmp	r0, #0
   2f434:	beq	2f508 <__flatcc_error_report@@Base+0x174c>
   2f438:	ldr	ip, [r4, #48]	; 0x30
   2f43c:	add	lr, r0, #65536	; 0x10000
   2f440:	add	r5, r0, #16
   2f444:	add	r1, r0, #144	; 0x90
   2f448:	str	lr, [r4, #44]	; 0x2c
   2f44c:	str	r0, [r4, #48]	; 0x30
   2f450:	str	ip, [r0]
   2f454:	b	2f28c <__flatcc_error_report@@Base+0x14d0>
   2f458:	ldr	r2, [pc, #200]	; 2f528 <__flatcc_error_report@@Base+0x176c>
   2f45c:	mov	r3, r6
   2f460:	mov	r0, r4
   2f464:	str	r6, [sp]
   2f468:	str	r6, [sp, #4]
   2f46c:	add	r2, pc, r2
   2f470:	bl	2ddbc <__flatcc_error_report@@Base>
   2f474:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f478:	ldr	r2, [pc, #172]	; 2f52c <__flatcc_error_report@@Base+0x1770>
   2f47c:	mov	ip, #0
   2f480:	mov	r1, r5
   2f484:	mov	r3, ip
   2f488:	str	ip, [sp]
   2f48c:	str	ip, [sp, #4]
   2f490:	add	r2, pc, r2
   2f494:	bl	2ddbc <__flatcc_error_report@@Base>
   2f498:	b	2f25c <__flatcc_error_report@@Base+0x14a0>
   2f49c:	ldr	r2, [pc, #140]	; 2f530 <__flatcc_error_report@@Base+0x1774>
   2f4a0:	mov	r3, r6
   2f4a4:	mov	r0, r4
   2f4a8:	str	r6, [sp]
   2f4ac:	str	r6, [sp, #4]
   2f4b0:	add	r2, pc, r2
   2f4b4:	bl	2ddbc <__flatcc_error_report@@Base>
   2f4b8:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f4bc:	ldr	r2, [pc, #112]	; 2f534 <__flatcc_error_report@@Base+0x1778>
   2f4c0:	mov	r3, r6
   2f4c4:	mov	r0, r4
   2f4c8:	str	r6, [sp]
   2f4cc:	str	r6, [sp, #4]
   2f4d0:	add	r2, pc, r2
   2f4d4:	bl	2ddbc <__flatcc_error_report@@Base>
   2f4d8:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f4dc:	mov	r0, r4
   2f4e0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2f4e4:	ldr	r2, [pc, #76]	; 2f538 <__flatcc_error_report@@Base+0x177c>
   2f4e8:	mov	r3, r6
   2f4ec:	mov	r1, sl
   2f4f0:	mov	r0, r4
   2f4f4:	str	r6, [sp]
   2f4f8:	str	r6, [sp, #4]
   2f4fc:	add	r2, pc, r2
   2f500:	bl	2ddbc <__flatcc_error_report@@Base>
   2f504:	b	2f3a4 <__flatcc_error_report@@Base+0x15e8>
   2f508:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   2f50c:	strdeq	r8, [r2], -r0
   2f510:	strdeq	r8, [r2], -r4
   2f514:	andeq	r8, r2, r4, asr #18
   2f518:	andeq	r8, r2, r4, asr #18
   2f51c:	andeq	r8, r2, r0, asr #14
   2f520:	ldrdeq	r8, [r2], -r4
   2f524:	muleq	r2, r8, r5
   2f528:	andeq	r8, r2, r0, ror #10
   2f52c:	andeq	r8, r2, r0, ror #9
   2f530:	andeq	r8, r2, r4, asr #10
   2f534:	andeq	r8, r2, ip, asr #10
   2f538:	andeq	r8, r2, r8, ror r5

0002f53c <error_ref_sym@@Base>:
   2f53c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2f540:	strd	r6, [sp, #8]
   2f544:	strd	r8, [sp, #16]
   2f548:	mov	r9, r3
   2f54c:	strd	sl, [sp, #24]
   2f550:	subs	sl, r1, #0
   2f554:	str	lr, [sp, #32]
   2f558:	sub	sp, sp, #76	; 0x4c
   2f55c:	str	r0, [sp, #8]
   2f560:	str	r2, [sp, #12]
   2f564:	beq	2f644 <error_ref_sym@@Base+0x108>
   2f568:	mov	r6, sl
   2f56c:	mov	fp, #0
   2f570:	mov	r4, #50	; 0x32
   2f574:	add	r7, sp, #20
   2f578:	mov	r8, #46	; 0x2e
   2f57c:	ldr	r3, [r6, #4]
   2f580:	add	r0, r7, fp
   2f584:	ldm	r3, {r1, r5}
   2f588:	cmp	r5, r4
   2f58c:	movge	r5, r4
   2f590:	mov	r2, r5
   2f594:	bl	13eb0 <memcpy@plt>
   2f598:	add	ip, r5, fp
   2f59c:	add	r3, sp, #72	; 0x48
   2f5a0:	add	r3, r3, ip
   2f5a4:	sub	r5, r4, r5
   2f5a8:	sub	r4, r5, #1
   2f5ac:	add	fp, ip, #1
   2f5b0:	strb	r8, [r3, #-52]	; 0xffffffcc
   2f5b4:	cmp	r4, #0
   2f5b8:	ldr	r6, [r6]
   2f5bc:	movle	r2, #0
   2f5c0:	movgt	r2, #1
   2f5c4:	cmp	r6, #0
   2f5c8:	moveq	r2, #0
   2f5cc:	cmp	r2, #0
   2f5d0:	bne	2f57c <error_ref_sym@@Base+0x40>
   2f5d4:	add	r3, sp, #72	; 0x48
   2f5d8:	cmp	fp, #0
   2f5dc:	add	r1, r3, fp
   2f5e0:	movle	ip, fp
   2f5e4:	cmp	r4, #0
   2f5e8:	strb	r2, [r1, #-52]	; 0xffffffcc
   2f5ec:	ble	2f62c <error_ref_sym@@Base+0xf0>
   2f5f0:	cmp	r9, #0
   2f5f4:	ldr	r1, [sl, #4]
   2f5f8:	ldrne	r9, [r9, #4]
   2f5fc:	stm	sp, {r7, ip}
   2f600:	ldr	r0, [sp, #8]
   2f604:	ldr	r2, [sp, #12]
   2f608:	mov	r3, r9
   2f60c:	bl	2ddbc <__flatcc_error_report@@Base>
   2f610:	add	sp, sp, #76	; 0x4c
   2f614:	ldrd	r4, [sp]
   2f618:	ldrd	r6, [sp, #8]
   2f61c:	ldrd	r8, [sp, #16]
   2f620:	ldrd	sl, [sp, #24]
   2f624:	add	sp, sp, #32
   2f628:	pop	{pc}		; (ldr pc, [sp], #4)
   2f62c:	ldr	r3, [pc, #32]	; 2f654 <error_ref_sym@@Base+0x118>
   2f630:	mov	ip, #50	; 0x32
   2f634:	add	r3, pc, r3
   2f638:	ldr	r3, [r3, #8]
   2f63c:	str	r3, [sp, #67]	; 0x43
   2f640:	b	2f5f0 <error_ref_sym@@Base+0xb4>
   2f644:	mov	ip, sl
   2f648:	add	r7, sp, #20
   2f64c:	strb	sl, [sp, #20]
   2f650:	b	2f5f0 <error_ref_sym@@Base+0xb4>
   2f654:	andeq	r7, r2, ip, asr #28

0002f658 <__flatcc_fb_init_parser@@Base>:
   2f658:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2f65c:	mov	r4, r0
   2f660:	strd	r6, [sp, #8]
   2f664:	mov	r6, r2
   2f668:	mov	r2, #560	; 0x230
   2f66c:	strd	r8, [sp, #16]
   2f670:	mov	r9, r1
   2f674:	mov	r1, #0
   2f678:	str	sl, [sp, #24]
   2f67c:	mov	r7, r3
   2f680:	str	lr, [sp, #28]
   2f684:	sub	sp, sp, #8
   2f688:	ldr	r5, [sp, #44]	; 0x2c
   2f68c:	bl	13f70 <memset@plt>
   2f690:	ldr	r3, [pc, #680]	; 2f940 <__flatcc_fb_init_parser@@Base+0x2e8>
   2f694:	cmp	r7, #0
   2f698:	add	r3, pc, r3
   2f69c:	beq	2f884 <__flatcc_fb_init_parser@@Base+0x22c>
   2f6a0:	ldr	r3, [sp, #40]	; 0x28
   2f6a4:	str	r7, [r4, #8]
   2f6a8:	str	r3, [r4, #12]
   2f6ac:	cmp	r9, #0
   2f6b0:	add	r0, r4, #128	; 0x80
   2f6b4:	beq	2f87c <__flatcc_fb_init_parser@@Base+0x224>
   2f6b8:	mov	r2, #224	; 0xe0
   2f6bc:	mov	r1, r9
   2f6c0:	bl	13eb0 <memcpy@plt>
   2f6c4:	ldr	r3, [r4, #192]	; 0xc0
   2f6c8:	cmp	r5, #0
   2f6cc:	addeq	r5, r4, #416	; 0x1a0
   2f6d0:	str	r5, [r4, #412]	; 0x19c
   2f6d4:	cmp	r3, #4
   2f6d8:	beq	2f718 <__flatcc_fb_init_parser@@Base+0xc0>
   2f6dc:	cmp	r3, #8
   2f6e0:	beq	2f718 <__flatcc_fb_init_parser@@Base+0xc0>
   2f6e4:	cmp	r3, #2
   2f6e8:	beq	2f718 <__flatcc_fb_init_parser@@Base+0xc0>
   2f6ec:	ldr	r2, [pc, #592]	; 2f944 <__flatcc_fb_init_parser@@Base+0x2ec>
   2f6f0:	mov	ip, #0
   2f6f4:	mov	r0, r4
   2f6f8:	add	r2, pc, r2
   2f6fc:	mov	r3, ip
   2f700:	mov	r1, ip
   2f704:	str	ip, [sp]
   2f708:	str	ip, [sp, #4]
   2f70c:	bl	2ddbc <__flatcc_error_report@@Base>
   2f710:	mvn	r0, #0
   2f714:	b	2f860 <__flatcc_fb_init_parser@@Base+0x208>
   2f718:	ldr	r3, [r4, #196]	; 0xc4
   2f71c:	cmp	r3, #4
   2f720:	beq	2f748 <__flatcc_fb_init_parser@@Base+0xf0>
   2f724:	cmp	r3, #8
   2f728:	beq	2f748 <__flatcc_fb_init_parser@@Base+0xf0>
   2f72c:	cmp	r3, #2
   2f730:	beq	2f748 <__flatcc_fb_init_parser@@Base+0xf0>
   2f734:	ldr	r2, [pc, #524]	; 2f948 <__flatcc_fb_init_parser@@Base+0x2f0>
   2f738:	mov	ip, #0
   2f73c:	mov	r0, r4
   2f740:	add	r2, pc, r2
   2f744:	b	2f6fc <__flatcc_fb_init_parser@@Base+0xa4>
   2f748:	cmp	r6, #0
   2f74c:	beq	2f894 <__flatcc_fb_init_parser@@Base+0x23c>
   2f750:	mov	r0, r6
   2f754:	bl	13f4c <strlen@plt>
   2f758:	mov	sl, r0
   2f75c:	mov	r1, sl
   2f760:	mov	r0, r6
   2f764:	ldr	r2, [r9, #96]	; 0x60
   2f768:	bl	2d7b8 <__flatcc_fb_create_basename@@Base>
   2f76c:	cmp	r0, #0
   2f770:	mov	r5, r0
   2f774:	str	r0, [r4, #512]	; 0x200
   2f778:	beq	2f918 <__flatcc_fb_init_parser@@Base+0x2c0>
   2f77c:	bl	13f4c <strlen@plt>
   2f780:	mov	r1, r0
   2f784:	mov	r8, r0
   2f788:	mov	r0, r5
   2f78c:	bl	2d26c <__flatcc_fb_copy_path_n@@Base>
   2f790:	subs	r5, r0, #0
   2f794:	beq	2f918 <__flatcc_fb_init_parser@@Base+0x2c0>
   2f798:	cmp	r8, #0
   2f79c:	beq	2f7e0 <__flatcc_fb_init_parser@@Base+0x188>
   2f7a0:	ldrb	r7, [r5]
   2f7a4:	cmp	r7, #0
   2f7a8:	beq	2f7e0 <__flatcc_fb_init_parser@@Base+0x188>
   2f7ac:	bl	13f28 <__ctype_toupper_loc@plt>
   2f7b0:	sub	r2, r8, #1
   2f7b4:	mov	r3, r5
   2f7b8:	add	r2, r5, r2
   2f7bc:	b	2f7cc <__flatcc_fb_init_parser@@Base+0x174>
   2f7c0:	ldrb	r7, [r3, #1]!
   2f7c4:	cmp	r7, #0
   2f7c8:	beq	2f7e0 <__flatcc_fb_init_parser@@Base+0x188>
   2f7cc:	ldr	r1, [r0]
   2f7d0:	cmp	r3, r2
   2f7d4:	ldr	r1, [r1, r7, lsl #2]
   2f7d8:	strb	r1, [r3]
   2f7dc:	bne	2f7c0 <__flatcc_fb_init_parser@@Base+0x168>
   2f7e0:	ldr	r2, [pc, #356]	; 2f94c <__flatcc_fb_init_parser@@Base+0x2f4>
   2f7e4:	mov	r1, sl
   2f7e8:	mov	r0, r6
   2f7ec:	str	r5, [r4, #496]	; 0x1f0
   2f7f0:	str	r8, [r4, #500]	; 0x1f4
   2f7f4:	str	r5, [r4, #516]	; 0x204
   2f7f8:	add	r2, pc, r2
   2f7fc:	bl	2d7b8 <__flatcc_fb_create_basename@@Base>
   2f800:	cmp	r0, #0
   2f804:	str	r0, [r4, #520]	; 0x208
   2f808:	beq	2f918 <__flatcc_fb_init_parser@@Base+0x2c0>
   2f80c:	ldr	r3, [r9, #192]	; 0xc0
   2f810:	cmp	r3, #0
   2f814:	beq	2f828 <__flatcc_fb_init_parser@@Base+0x1d0>
   2f818:	mov	r0, r3
   2f81c:	str	r3, [r4, #476]	; 0x1dc
   2f820:	bl	13f4c <strlen@plt>
   2f824:	str	r0, [r4, #480]	; 0x1e0
   2f828:	mov	r2, #0
   2f82c:	ldr	r0, [r4, #412]	; 0x19c
   2f830:	mov	r1, r2
   2f834:	bl	2ca20 <fb_scope_table_find@@Base>
   2f838:	subs	r5, r0, #0
   2f83c:	beq	2f8a4 <__flatcc_fb_init_parser@@Base+0x24c>
   2f840:	mov	r2, #0
   2f844:	str	r5, [r4, #544]	; 0x220
   2f848:	mov	r1, r2
   2f84c:	ldr	r0, [r4, #412]	; 0x19c
   2f850:	bl	2ca20 <fb_scope_table_find@@Base>
   2f854:	cmp	r5, r0
   2f858:	moveq	r0, #0
   2f85c:	bne	2f91c <__flatcc_fb_init_parser@@Base+0x2c4>
   2f860:	add	sp, sp, #8
   2f864:	ldrd	r4, [sp]
   2f868:	ldrd	r6, [sp, #8]
   2f86c:	ldrd	r8, [sp, #16]
   2f870:	ldr	sl, [sp, #24]
   2f874:	add	sp, sp, #28
   2f878:	pop	{pc}		; (ldr pc, [sp], #4)
   2f87c:	bl	14304 <flatcc_init_options@@Base>
   2f880:	b	2f6c4 <__flatcc_fb_init_parser@@Base+0x6c>
   2f884:	ldr	r2, [pc, #196]	; 2f950 <__flatcc_fb_init_parser@@Base+0x2f8>
   2f888:	ldr	r3, [r3, r2]
   2f88c:	str	r3, [r4, #8]
   2f890:	b	2f6ac <__flatcc_fb_init_parser@@Base+0x54>
   2f894:	ldr	r6, [pc, #184]	; 2f954 <__flatcc_fb_init_parser@@Base+0x2fc>
   2f898:	mov	sl, #4
   2f89c:	add	r6, pc, r6
   2f8a0:	b	2f75c <__flatcc_fb_init_parser@@Base+0x104>
   2f8a4:	ldr	r3, [r4, #44]	; 0x2c
   2f8a8:	ldr	r5, [r4, #52]	; 0x34
   2f8ac:	add	r2, r5, #32
   2f8b0:	cmp	r2, r3
   2f8b4:	bhi	2f8e4 <__flatcc_fb_init_parser@@Base+0x28c>
   2f8b8:	add	r3, r4, #476	; 0x1dc
   2f8bc:	mov	r1, r5
   2f8c0:	ldr	r0, [r4, #412]	; 0x19c
   2f8c4:	ldrd	r6, [r3]
   2f8c8:	mov	r3, #0
   2f8cc:	str	r2, [r4, #52]	; 0x34
   2f8d0:	mov	r2, #1
   2f8d4:	str	r3, [r5]
   2f8d8:	strd	r6, [r5, #20]
   2f8dc:	bl	2c9fc <fb_scope_table_insert_item@@Base>
   2f8e0:	b	2f840 <__flatcc_fb_init_parser@@Base+0x1e8>
   2f8e4:	mov	r1, #1
   2f8e8:	mov	r0, #65536	; 0x10000
   2f8ec:	bl	13e74 <calloc@plt>
   2f8f0:	cmp	r0, #0
   2f8f4:	beq	2f918 <__flatcc_fb_init_parser@@Base+0x2c0>
   2f8f8:	ldr	r3, [r4, #48]	; 0x30
   2f8fc:	add	r1, r0, #65536	; 0x10000
   2f900:	add	r5, r0, #16
   2f904:	add	r2, r0, #48	; 0x30
   2f908:	str	r1, [r4, #44]	; 0x2c
   2f90c:	str	r0, [r4, #48]	; 0x30
   2f910:	str	r3, [r0]
   2f914:	b	2f8b8 <__flatcc_fb_init_parser@@Base+0x260>
   2f918:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   2f91c:	ldr	r3, [pc, #52]	; 2f958 <__flatcc_fb_init_parser@@Base+0x300>
   2f920:	movw	r2, #1331	; 0x533
   2f924:	ldr	r1, [pc, #48]	; 2f95c <__flatcc_fb_init_parser@@Base+0x304>
   2f928:	ldr	r0, [pc, #48]	; 2f960 <__flatcc_fb_init_parser@@Base+0x308>
   2f92c:	add	r3, pc, r3
   2f930:	add	r3, r3, #16
   2f934:	add	r1, pc, r1
   2f938:	add	r0, pc, r0
   2f93c:	bl	1400c <__assert_fail@plt>
   2f940:	andeq	fp, r3, r0, ror #18
   2f944:	andeq	r8, r2, ip, lsr r4
   2f948:	andeq	r8, r2, ip, lsr #8
   2f94c:	andeq	sl, r1, r8, ror #28
   2f950:	andeq	r0, r0, ip, lsr #1
   2f954:	muleq	r2, r0, r2
   2f958:	andeq	r7, r2, r4, asr fp
   2f95c:	andeq	r7, r2, r4, ror ip
   2f960:	andeq	r8, r2, r0, ror r2

0002f964 <__flatcc_fb_parse@@Base>:
   2f964:	ldr	ip, [pc, #4080]	; 3095c <__flatcc_fb_parse@@Base+0xff8>
   2f968:	cmp	r3, #0
   2f96c:	mov	r3, #4
   2f970:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2f974:	mov	r5, r1
   2f978:	mov	r4, r0
   2f97c:	ldr	r1, [pc, #4060]	; 30960 <__flatcc_fb_parse@@Base+0xffc>
   2f980:	mov	r0, #1
   2f984:	strd	r6, [sp, #8]
   2f988:	add	r6, r5, r2
   2f98c:	strd	r8, [sp, #16]
   2f990:	movw	r9, #26174	; 0x663e
   2f994:	movt	r9, #28265	; 0x6e69
   2f998:	add	ip, pc, ip
   2f99c:	strd	sl, [sp, #24]
   2f9a0:	movw	sl, #29243	; 0x723b
   2f9a4:	movt	sl, #25968	; 0x6570
   2f9a8:	str	lr, [sp, #32]
   2f9ac:	movw	fp, #26931	; 0x6933
   2f9b0:	movt	fp, #29806	; 0x746e
   2f9b4:	sub	sp, sp, #36	; 0x24
   2f9b8:	strne	r5, [r4, #16]
   2f9bc:	str	r3, [r4, #72]	; 0x48
   2f9c0:	mov	r3, #0
   2f9c4:	add	r1, pc, r1
   2f9c8:	mov	lr, #9
   2f9cc:	str	r0, [r4, #64]	; 0x40
   2f9d0:	movw	r0, #64554	; 0xfc2a
   2f9d4:	movt	r0, #65535	; 0xffff
   2f9d8:	str	ip, [r4, #68]	; 0x44
   2f9dc:	mov	ip, #5
   2f9e0:	str	sl, [sp, #16]
   2f9e4:	str	r3, [r4, #76]	; 0x4c
   2f9e8:	str	r3, [r4, #80]	; 0x50
   2f9ec:	str	r3, [r4, #96]	; 0x60
   2f9f0:	str	r3, [r4, #100]	; 0x64
   2f9f4:	movw	r3, #30004	; 0x7534
   2f9f8:	movt	r3, #29801	; 0x7469
   2f9fc:	str	r5, [r4, #60]	; 0x3c
   2fa00:	str	r3, [sp, #12]
   2fa04:	str	lr, [r4, #84]	; 0x54
   2fa08:	str	r1, [r4, #88]	; 0x58
   2fa0c:	str	ip, [r4, #92]	; 0x5c
   2fa10:	str	r0, [r4, #104]	; 0x68
   2fa14:	cmp	r6, r5
   2fa18:	beq	2fc5c <__flatcc_fb_parse@@Base+0x2f8>
   2fa1c:	ldrb	r1, [r5]
   2fa20:	movw	r7, #30006	; 0x7536
   2fa24:	movt	r7, #29811	; 0x7473
   2fa28:	movw	sl, #29494	; 0x7336
   2fa2c:	movt	sl, #29812	; 0x7474
   2fa30:	cmp	r1, #126	; 0x7e
   2fa34:	addls	pc, pc, r1, lsl #2
   2fa38:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa3c:	b	2fc5c <__flatcc_fb_parse@@Base+0x2f8>
   2fa40:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa44:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa48:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa4c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa50:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa54:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa58:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa5c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa60:	b	2fc38 <__flatcc_fb_parse@@Base+0x2d4>
   2fa64:	b	31050 <__flatcc_fb_parse@@Base+0x16ec>
   2fa68:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa6c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa70:	b	31080 <__flatcc_fb_parse@@Base+0x171c>
   2fa74:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa78:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa7c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa80:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa84:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa88:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa8c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa90:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa94:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa98:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fa9c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2faa0:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2faa4:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2faa8:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2faac:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fab0:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fab4:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fab8:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fabc:	b	2fc38 <__flatcc_fb_parse@@Base+0x2d4>
   2fac0:	b	30ccc <__flatcc_fb_parse@@Base+0x1368>
   2fac4:	b	2fec0 <__flatcc_fb_parse@@Base+0x55c>
   2fac8:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2facc:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fad0:	b	30ccc <__flatcc_fb_parse@@Base+0x1368>
   2fad4:	b	30c90 <__flatcc_fb_parse@@Base+0x132c>
   2fad8:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fadc:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fae0:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fae4:	b	30c38 <__flatcc_fb_parse@@Base+0x12d4>
   2fae8:	b	30bfc <__flatcc_fb_parse@@Base+0x1298>
   2faec:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2faf0:	b	31010 <__flatcc_fb_parse@@Base+0x16ac>
   2faf4:	b	30fb8 <__flatcc_fb_parse@@Base+0x1654>
   2faf8:	b	30efc <__flatcc_fb_parse@@Base+0x1598>
   2fafc:	b	30e94 <__flatcc_fb_parse@@Base+0x1530>
   2fb00:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb04:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb08:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb0c:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb10:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb14:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb18:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb1c:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb20:	b	30b10 <__flatcc_fb_parse@@Base+0x11ac>
   2fb24:	b	30bb4 <__flatcc_fb_parse@@Base+0x1250>
   2fb28:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fb2c:	b	30f78 <__flatcc_fb_parse@@Base+0x1614>
   2fb30:	b	30f3c <__flatcc_fb_parse@@Base+0x15d8>
   2fb34:	b	30e20 <__flatcc_fb_parse@@Base+0x14bc>
   2fb38:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fb3c:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fb40:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb44:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb48:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb4c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb50:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb54:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb58:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb5c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb60:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb64:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb68:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb6c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb70:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb74:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb78:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb7c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb80:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb84:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb88:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb8c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb90:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb94:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb98:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fb9c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fba0:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fba4:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fba8:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fbac:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fbb0:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fbb4:	b	30ccc <__flatcc_fb_parse@@Base+0x1368>
   2fbb8:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbbc:	b	312dc <__flatcc_fb_parse@@Base+0x1978>
   2fbc0:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbc4:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbc8:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbcc:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbd0:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbd4:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbd8:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbdc:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbe0:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbe4:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbe8:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbec:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbf0:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbf4:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbf8:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fbfc:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc00:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc04:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc08:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc0c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc10:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc14:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc18:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc1c:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc20:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc24:	b	30d4c <__flatcc_fb_parse@@Base+0x13e8>
   2fc28:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fc2c:	b	30cf8 <__flatcc_fb_parse@@Base+0x1394>
   2fc30:	b	30c78 <__flatcc_fb_parse@@Base+0x1314>
   2fc34:	b	30ccc <__flatcc_fb_parse@@Base+0x1368>
   2fc38:	add	r3, r5, #1
   2fc3c:	b	2fc50 <__flatcc_fb_parse@@Base+0x2ec>
   2fc40:	ldrb	r1, [r3], #1
   2fc44:	cmp	r1, #9
   2fc48:	cmpne	r1, #32
   2fc4c:	bne	2fa30 <__flatcc_fb_parse@@Base+0xcc>
   2fc50:	cmp	r6, r3
   2fc54:	mov	r5, r3
   2fc58:	bne	2fc40 <__flatcc_fb_parse@@Base+0x2dc>
   2fc5c:	mov	r3, r5
   2fc60:	mov	r2, r5
   2fc64:	mov	r1, #0
   2fc68:	mov	r0, r4
   2fc6c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   2fc70:	ldr	r6, [r4, #20]
   2fc74:	ldr	r3, [r4, #40]	; 0x28
   2fc78:	ldr	r0, [r4, #216]	; 0xd8
   2fc7c:	str	r3, [r4, #24]
   2fc80:	str	r6, [r4, #40]	; 0x28
   2fc84:	bl	13f10 <malloc@plt>
   2fc88:	cmp	r0, #0
   2fc8c:	str	r0, [r4, #112]	; 0x70
   2fc90:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   2fc94:	ldr	r3, [r6, #16]
   2fc98:	cmn	r3, #964	; 0x3c4
   2fc9c:	beq	31840 <__flatcc_fb_parse@@Base+0x1edc>
   2fca0:	ldr	r9, [pc, #3260]	; 30964 <__flatcc_fb_parse@@Base+0x1000>
   2fca4:	movw	r7, #64565	; 0xfc35
   2fca8:	movt	r7, #65535	; 0xffff
   2fcac:	mov	r1, r6
   2fcb0:	ldr	r8, [pc, #3248]	; 30968 <__flatcc_fb_parse@@Base+0x1004>
   2fcb4:	add	r9, pc, r9
   2fcb8:	add	r8, pc, r8
   2fcbc:	cmp	r3, r7
   2fcc0:	beq	30088 <__flatcc_fb_parse@@Base+0x724>
   2fcc4:	ldr	ip, [r4, #108]	; 0x6c
   2fcc8:	mov	r5, r1
   2fccc:	ldr	r2, [pc, #3224]	; 3096c <__flatcc_fb_parse@@Base+0x1008>
   2fcd0:	ldr	r8, [pc, #3224]	; 30970 <__flatcc_fb_parse@@Base+0x100c>
   2fcd4:	ldr	r9, [pc, #3224]	; 30974 <__flatcc_fb_parse@@Base+0x1010>
   2fcd8:	add	r2, pc, r2
   2fcdc:	str	r2, [sp, #16]
   2fce0:	add	r8, pc, r8
   2fce4:	ldr	r2, [pc, #3212]	; 30978 <__flatcc_fb_parse@@Base+0x1014>
   2fce8:	add	r9, pc, r9
   2fcec:	add	r2, pc, r2
   2fcf0:	str	r2, [sp, #12]
   2fcf4:	b	2fd68 <__flatcc_fb_parse@@Base+0x404>
   2fcf8:	mvn	r2, #972	; 0x3cc
   2fcfc:	cmp	r3, r2
   2fd00:	beq	302c4 <__flatcc_fb_parse@@Base+0x960>
   2fd04:	cmn	r3, #972	; 0x3cc
   2fd08:	bge	2ffbc <__flatcc_fb_parse@@Base+0x658>
   2fd0c:	movw	r2, #64553	; 0xfc29
   2fd10:	movt	r2, #65535	; 0xffff
   2fd14:	cmp	r3, r2
   2fd18:	beq	3087c <__flatcc_fb_parse@@Base+0xf18>
   2fd1c:	cmn	r3, #976	; 0x3d0
   2fd20:	beq	30608 <__flatcc_fb_parse@@Base+0xca4>
   2fd24:	mvn	r2, #996	; 0x3e4
   2fd28:	cmp	r3, r2
   2fd2c:	beq	30348 <__flatcc_fb_parse@@Base+0x9e4>
   2fd30:	ldr	r2, [pc, #3140]	; 3097c <__flatcc_fb_parse@@Base+0x1018>
   2fd34:	mov	ip, #0
   2fd38:	add	r2, pc, r2
   2fd3c:	mov	r3, ip
   2fd40:	mov	r0, r4
   2fd44:	str	ip, [sp]
   2fd48:	str	ip, [sp, #4]
   2fd4c:	bl	2ddbc <__flatcc_error_report@@Base>
   2fd50:	ldr	r3, [r4, #40]	; 0x28
   2fd54:	ldr	ip, [r4, #108]	; 0x6c
   2fd58:	cmp	r5, r3
   2fd5c:	beq	2fe74 <__flatcc_fb_parse@@Base+0x510>
   2fd60:	mov	r5, r3
   2fd64:	ldr	r3, [r3, #16]
   2fd68:	cmp	r3, #0
   2fd6c:	beq	3131c <__flatcc_fb_parse@@Base+0x19b8>
   2fd70:	cmp	ip, #9
   2fd74:	bgt	2fea0 <__flatcc_fb_parse@@Base+0x53c>
   2fd78:	ldr	r1, [r4, #40]	; 0x28
   2fd7c:	ldr	r3, [r1, #16]
   2fd80:	cmn	r3, #968	; 0x3c8
   2fd84:	beq	3025c <__flatcc_fb_parse@@Base+0x8f8>
   2fd88:	ble	2fcf8 <__flatcc_fb_parse@@Base+0x394>
   2fd8c:	cmp	r3, #5
   2fd90:	beq	30230 <__flatcc_fb_parse@@Base+0x8cc>
   2fd94:	bgt	2ff78 <__flatcc_fb_parse@@Base+0x614>
   2fd98:	movw	r2, #64570	; 0xfc3a
   2fd9c:	movt	r2, #65535	; 0xffff
   2fda0:	cmp	r3, r2
   2fda4:	beq	301b0 <__flatcc_fb_parse@@Base+0x84c>
   2fda8:	blt	30128 <__flatcc_fb_parse@@Base+0x7c4>
   2fdac:	mvn	r2, #964	; 0x3c4
   2fdb0:	cmp	r3, r2
   2fdb4:	bne	2fd30 <__flatcc_fb_parse@@Base+0x3cc>
   2fdb8:	mov	r0, r4
   2fdbc:	add	r6, r4, #360	; 0x168
   2fdc0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2fdc4:	ldrh	r3, [r6, #8]
   2fdc8:	cmp	r3, #0
   2fdcc:	bne	31220 <__flatcc_fb_parse@@Base+0x18bc>
   2fdd0:	ldr	r1, [r4, #40]	; 0x28
   2fdd4:	ldr	r3, [r1, #16]
   2fdd8:	cmp	r3, #19
   2fddc:	bne	3094c <__flatcc_fb_parse@@Base+0xfe8>
   2fde0:	mov	r0, r4
   2fde4:	mov	r7, #0
   2fde8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2fdec:	mov	r3, #2
   2fdf0:	mov	r1, r6
   2fdf4:	ldr	sl, [r4, #40]	; 0x28
   2fdf8:	mov	r0, r4
   2fdfc:	strh	r3, [r6, #8]
   2fe00:	str	r7, [r4, #360]	; 0x168
   2fe04:	str	r7, [r4, #364]	; 0x16c
   2fe08:	bl	2e5a4 <__flatcc_error_report@@Base+0x7e8>
   2fe0c:	ldr	r3, [r4, #360]	; 0x168
   2fe10:	cmp	r3, r7
   2fe14:	beq	2fe4c <__flatcc_fb_parse@@Base+0x4e8>
   2fe18:	ldr	r3, [r4, #364]	; 0x16c
   2fe1c:	cmp	r3, #4
   2fe20:	beq	2fe4c <__flatcc_fb_parse@@Base+0x4e8>
   2fe24:	mov	r2, #1
   2fe28:	str	r7, [sp]
   2fe2c:	mov	r1, sl
   2fe30:	str	r7, [sp, #4]
   2fe34:	mov	r3, r7
   2fe38:	mov	r0, r4
   2fe3c:	strh	r2, [r6, #8]
   2fe40:	ldr	r2, [pc, #2872]	; 30980 <__flatcc_fb_parse@@Base+0x101c>
   2fe44:	add	r2, pc, r2
   2fe48:	bl	2ddbc <__flatcc_error_report@@Base>
   2fe4c:	ldr	r1, [r4, #40]	; 0x28
   2fe50:	ldr	r3, [r1, #16]
   2fe54:	cmp	r3, #59	; 0x3b
   2fe58:	bne	310d8 <__flatcc_fb_parse@@Base+0x1774>
   2fe5c:	mov	r0, r4
   2fe60:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   2fe64:	ldr	r3, [r4, #40]	; 0x28
   2fe68:	ldr	ip, [r4, #108]	; 0x6c
   2fe6c:	cmp	r5, r3
   2fe70:	bne	2fd60 <__flatcc_fb_parse@@Base+0x3fc>
   2fe74:	cmp	ip, #0
   2fe78:	bne	2fea0 <__flatcc_fb_parse@@Base+0x53c>
   2fe7c:	ldr	r2, [pc, #2816]	; 30984 <__flatcc_fb_parse@@Base+0x1020>
   2fe80:	mov	r3, ip
   2fe84:	mov	r1, r5
   2fe88:	mov	r0, r4
   2fe8c:	str	ip, [sp]
   2fe90:	str	ip, [sp, #4]
   2fe94:	add	r2, pc, r2
   2fe98:	bl	2ddbc <__flatcc_error_report@@Base>
   2fe9c:	ldr	ip, [r4, #108]	; 0x6c
   2fea0:	mov	r0, ip
   2fea4:	add	sp, sp, #36	; 0x24
   2fea8:	ldrd	r4, [sp]
   2feac:	ldrd	r6, [sp, #8]
   2feb0:	ldrd	r8, [sp, #16]
   2feb4:	ldrd	sl, [sp, #24]
   2feb8:	add	sp, sp, #32
   2febc:	pop	{pc}		; (ldr pc, [sp], #4)
   2fec0:	add	r7, r5, #1
   2fec4:	mov	r2, r5
   2fec8:	mov	r3, r7
   2fecc:	mov	r1, #19
   2fed0:	mov	r0, r4
   2fed4:	mov	r8, r7
   2fed8:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   2fedc:	sub	r7, r7, #1
   2fee0:	b	2fef4 <__flatcc_fb_parse@@Base+0x590>
   2fee4:	cmp	r3, #127	; 0x7f
   2fee8:	cmpne	r3, #31
   2feec:	bls	2ff10 <__flatcc_fb_parse@@Base+0x5ac>
   2fef0:	mov	r7, r5
   2fef4:	add	r5, r7, #1
   2fef8:	cmp	r6, r5
   2fefc:	beq	2ff10 <__flatcc_fb_parse@@Base+0x5ac>
   2ff00:	ldrb	r3, [r7, #1]
   2ff04:	cmp	r3, #34	; 0x22
   2ff08:	cmpne	r3, #92	; 0x5c
   2ff0c:	bne	2fee4 <__flatcc_fb_parse@@Base+0x580>
   2ff10:	cmp	r5, r8
   2ff14:	beq	2ff2c <__flatcc_fb_parse@@Base+0x5c8>
   2ff18:	mov	r2, r8
   2ff1c:	mov	r3, r5
   2ff20:	mov	r1, #20
   2ff24:	mov	r0, r4
   2ff28:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   2ff2c:	ldrb	r3, [r5]
   2ff30:	cmp	r3, #34	; 0x22
   2ff34:	beq	31acc <__flatcc_fb_parse@@Base+0x2168>
   2ff38:	cmp	r3, #0
   2ff3c:	cmpne	r6, r5
   2ff40:	beq	31304 <__flatcc_fb_parse@@Base+0x19a0>
   2ff44:	cmp	r3, #92	; 0x5c
   2ff48:	beq	2fff0 <__flatcc_fb_parse@@Base+0x68c>
   2ff4c:	cmp	r3, #13
   2ff50:	cmpne	r3, #10
   2ff54:	beq	31304 <__flatcc_fb_parse@@Base+0x19a0>
   2ff58:	add	r7, r5, #1
   2ff5c:	mov	r2, r5
   2ff60:	mov	r3, r7
   2ff64:	mov	r1, #6
   2ff68:	mov	r0, r4
   2ff6c:	mov	r8, r7
   2ff70:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   2ff74:	b	2fedc <__flatcc_fb_parse@@Base+0x578>
   2ff78:	cmp	r3, #27
   2ff7c:	beq	30910 <__flatcc_fb_parse@@Base+0xfac>
   2ff80:	cmp	r3, #123	; 0x7b
   2ff84:	beq	30900 <__flatcc_fb_parse@@Base+0xf9c>
   2ff88:	cmp	r3, #7
   2ff8c:	bne	2fd30 <__flatcc_fb_parse@@Base+0x3cc>
   2ff90:	mov	r2, #1
   2ff94:	ldr	ip, [pc, #2540]	; 30988 <__flatcc_fb_parse@@Base+0x1024>
   2ff98:	mov	r3, #0
   2ff9c:	mov	r0, r4
   2ffa0:	str	r2, [sp, #4]
   2ffa4:	ldr	r2, [pc, #2528]	; 3098c <__flatcc_fb_parse@@Base+0x1028>
   2ffa8:	add	ip, pc, ip
   2ffac:	str	ip, [sp]
   2ffb0:	add	r2, pc, r2
   2ffb4:	bl	2ddbc <__flatcc_error_report@@Base>
   2ffb8:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   2ffbc:	movw	r2, #64566	; 0xfc36
   2ffc0:	movt	r2, #65535	; 0xffff
   2ffc4:	cmp	r3, r2
   2ffc8:	beq	30588 <__flatcc_fb_parse@@Base+0xc24>
   2ffcc:	bgt	3052c <__flatcc_fb_parse@@Base+0xbc8>
   2ffd0:	movw	r2, #64565	; 0xfc35
   2ffd4:	movt	r2, #65535	; 0xffff
   2ffd8:	cmp	r3, r2
   2ffdc:	bne	2fd30 <__flatcc_fb_parse@@Base+0x3cc>
   2ffe0:	ldr	r2, [pc, #2472]	; 30990 <__flatcc_fb_parse@@Base+0x102c>
   2ffe4:	mov	ip, #0
   2ffe8:	add	r2, pc, r2
   2ffec:	b	2fd3c <__flatcc_fb_parse@@Base+0x3d8>
   2fff0:	add	r8, r7, #2
   2fff4:	mov	r2, r5
   2fff8:	mov	r3, r8
   2fffc:	mov	r1, #21
   30000:	mov	r0, r4
   30004:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30008:	cmp	r6, r8
   3000c:	beq	32170 <__flatcc_fb_parse@@Base+0x280c>
   30010:	ldrb	r3, [r5, #1]
   30014:	cmp	r3, #0
   30018:	beq	32170 <__flatcc_fb_parse@@Base+0x280c>
   3001c:	cmp	r3, #34	; 0x22
   30020:	cmpne	r3, #92	; 0x5c
   30024:	addeq	r7, r5, #2
   30028:	beq	2fedc <__flatcc_fb_parse@@Base+0x578>
   3002c:	cmp	r3, #10
   30030:	beq	31a00 <__flatcc_fb_parse@@Base+0x209c>
   30034:	cmp	r3, #13
   30038:	movne	r5, r8
   3003c:	bne	2ff58 <__flatcc_fb_parse@@Base+0x5f4>
   30040:	add	r7, r5, #2
   30044:	cmp	r6, r7
   30048:	beq	3005c <__flatcc_fb_parse@@Base+0x6f8>
   3004c:	ldrb	r3, [r5, #2]
   30050:	cmp	r3, #10
   30054:	bne	3005c <__flatcc_fb_parse@@Base+0x6f8>
   30058:	add	r7, r5, #3
   3005c:	ldr	ip, [r4, #64]	; 0x40
   30060:	mov	r2, r8
   30064:	mov	r3, r7
   30068:	mov	r1, #18
   3006c:	mov	r0, r4
   30070:	str	r7, [r4, #60]	; 0x3c
   30074:	mov	r8, r7
   30078:	add	ip, ip, #1
   3007c:	str	ip, [r4, #64]	; 0x40
   30080:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30084:	b	2fedc <__flatcc_fb_parse@@Base+0x578>
   30088:	mov	r0, r4
   3008c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30090:	ldr	r3, [r4, #140]	; 0x8c
   30094:	cmp	r3, #0
   30098:	bne	31854 <__flatcc_fb_parse@@Base+0x1ef0>
   3009c:	ldr	r1, [r4, #40]	; 0x28
   300a0:	ldr	ip, [r4, #108]	; 0x6c
   300a4:	ldr	r3, [r1, #16]
   300a8:	cmp	ip, #9
   300ac:	bgt	32250 <__flatcc_fb_parse@@Base+0x28ec>
   300b0:	cmp	r3, #19
   300b4:	bne	30a80 <__flatcc_fb_parse@@Base+0x111c>
   300b8:	mov	r0, r4
   300bc:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   300c0:	ldr	r1, [r4, #44]	; 0x2c
   300c4:	ldr	r3, [r4, #52]	; 0x34
   300c8:	add	r2, r3, #32
   300cc:	cmp	r2, r1
   300d0:	bhi	31878 <__flatcc_fb_parse@@Base+0x1f14>
   300d4:	ldr	lr, [r4, #352]	; 0x160
   300d8:	mov	ip, #2
   300dc:	mov	r5, #0
   300e0:	add	r1, r3, #8
   300e4:	mov	r0, r4
   300e8:	str	r2, [r4, #52]	; 0x34
   300ec:	str	lr, [r3]
   300f0:	str	r3, [r4, #352]	; 0x160
   300f4:	str	r5, [r3, #8]
   300f8:	str	r5, [r3, #12]
   300fc:	strh	ip, [r3, #16]
   30100:	bl	2e5a4 <__flatcc_error_report@@Base+0x7e8>
   30104:	ldr	r1, [r4, #40]	; 0x28
   30108:	ldr	r3, [r1, #16]
   3010c:	cmp	r3, #59	; 0x3b
   30110:	bne	3137c <__flatcc_fb_parse@@Base+0x1a18>
   30114:	mov	r0, r4
   30118:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   3011c:	ldr	r1, [r4, #40]	; 0x28
   30120:	ldr	r3, [r1, #16]
   30124:	b	2fcbc <__flatcc_fb_parse@@Base+0x358>
   30128:	mov	r0, r4
   3012c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30130:	ldr	r2, [r4, #44]	; 0x2c
   30134:	ldr	r1, [r4, #52]	; 0x34
   30138:	add	r3, r1, #128	; 0x80
   3013c:	cmp	r3, r2
   30140:	bhi	31150 <__flatcc_fb_parse@@Base+0x17ec>
   30144:	ldr	r0, [r4, #392]	; 0x188
   30148:	mov	ip, #2
   3014c:	str	r3, [r4, #52]	; 0x34
   30150:	ldr	r2, [r4, #544]	; 0x220
   30154:	str	r0, [r1]
   30158:	ldr	r3, [r4, #36]	; 0x24
   3015c:	strh	ip, [r1, #8]
   30160:	str	r1, [r4, #392]	; 0x188
   30164:	str	r2, [r1, #12]
   30168:	cmp	r3, #0
   3016c:	beq	30190 <__flatcc_fb_parse@@Base+0x82c>
   30170:	mov	r0, #0
   30174:	b	3017c <__flatcc_fb_parse@@Base+0x818>
   30178:	mov	r3, r2
   3017c:	ldr	r2, [r3]
   30180:	str	r0, [r3]
   30184:	mov	r0, r3
   30188:	cmp	r2, #0
   3018c:	bne	30178 <__flatcc_fb_parse@@Base+0x814>
   30190:	mov	r0, #0
   30194:	movw	r2, #64569	; 0xfc39
   30198:	movt	r2, #65535	; 0xffff
   3019c:	str	r3, [r1, #32]
   301a0:	str	r0, [r4, #36]	; 0x24
   301a4:	mov	r0, r4
   301a8:	bl	2f044 <__flatcc_error_report@@Base+0x1288>
   301ac:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   301b0:	mov	r0, r4
   301b4:	add	r6, r4, #376	; 0x178
   301b8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   301bc:	ldrh	r3, [r6, #8]
   301c0:	cmp	r3, #2
   301c4:	beq	31b00 <__flatcc_fb_parse@@Base+0x219c>
   301c8:	ldr	r1, [r4, #40]	; 0x28
   301cc:	ldr	r3, [r1, #16]
   301d0:	cmp	r3, #19
   301d4:	bne	3093c <__flatcc_fb_parse@@Base+0xfd8>
   301d8:	mov	r0, r4
   301dc:	mov	r7, #0
   301e0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   301e4:	mov	r3, #2
   301e8:	mov	r1, r6
   301ec:	mov	r0, r4
   301f0:	strh	r3, [r6, #8]
   301f4:	str	r7, [r4, #376]	; 0x178
   301f8:	str	r7, [r4, #380]	; 0x17c
   301fc:	bl	2e5a4 <__flatcc_error_report@@Base+0x7e8>
   30200:	ldr	r1, [r4, #40]	; 0x28
   30204:	ldr	r3, [r1, #16]
   30208:	cmp	r3, #59	; 0x3b
   3020c:	beq	2fe5c <__flatcc_fb_parse@@Base+0x4f8>
   30210:	ldr	r2, [pc, #1916]	; 30994 <__flatcc_fb_parse@@Base+0x1030>
   30214:	mov	r3, r7
   30218:	mov	r0, r4
   3021c:	str	r7, [sp]
   30220:	str	r7, [sp, #4]
   30224:	add	r2, pc, r2
   30228:	bl	2ddbc <__flatcc_error_report@@Base>
   3022c:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30230:	mov	r2, #1
   30234:	ldr	ip, [pc, #1884]	; 30998 <__flatcc_fb_parse@@Base+0x1034>
   30238:	mov	r3, #0
   3023c:	mov	r0, r4
   30240:	str	r2, [sp, #4]
   30244:	ldr	r2, [pc, #1872]	; 3099c <__flatcc_fb_parse@@Base+0x1038>
   30248:	add	ip, pc, ip
   3024c:	str	ip, [sp]
   30250:	add	r2, pc, r2
   30254:	bl	2ddbc <__flatcc_error_report@@Base>
   30258:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   3025c:	mov	r0, r4
   30260:	add	r7, r4, #400	; 0x190
   30264:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30268:	ldr	r6, [r4, #40]	; 0x28
   3026c:	ldr	r3, [r4, #400]	; 0x190
   30270:	cmp	r3, #0
   30274:	beq	30298 <__flatcc_fb_parse@@Base+0x934>
   30278:	mov	ip, #0
   3027c:	mov	r2, r9
   30280:	mov	r3, ip
   30284:	mov	r1, r6
   30288:	mov	r0, r4
   3028c:	str	ip, [sp]
   30290:	str	ip, [sp, #4]
   30294:	bl	2ddbc <__flatcc_error_report@@Base>
   30298:	mov	r1, r7
   3029c:	mov	r0, r4
   302a0:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   302a4:	ldr	ip, [r4, #544]	; 0x220
   302a8:	mov	r3, r6
   302ac:	mov	r2, r8
   302b0:	mov	r1, #59	; 0x3b
   302b4:	mov	r0, r4
   302b8:	str	ip, [r4, #408]	; 0x198
   302bc:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   302c0:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   302c4:	mov	r0, r4
   302c8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   302cc:	ldr	r2, [r4, #44]	; 0x2c
   302d0:	ldr	r1, [r4, #52]	; 0x34
   302d4:	add	r3, r1, #128	; 0x80
   302d8:	cmp	r3, r2
   302dc:	bhi	311ec <__flatcc_fb_parse@@Base+0x1888>
   302e0:	ldr	r0, [r4, #392]	; 0x188
   302e4:	mov	ip, #1
   302e8:	str	r3, [r4, #52]	; 0x34
   302ec:	ldr	r2, [r4, #544]	; 0x220
   302f0:	str	r0, [r1]
   302f4:	ldr	r3, [r4, #36]	; 0x24
   302f8:	strh	ip, [r1, #8]
   302fc:	str	r1, [r4, #392]	; 0x188
   30300:	str	r2, [r1, #12]
   30304:	cmp	r3, #0
   30308:	beq	3032c <__flatcc_fb_parse@@Base+0x9c8>
   3030c:	mov	r0, #0
   30310:	b	30318 <__flatcc_fb_parse@@Base+0x9b4>
   30314:	mov	r3, r2
   30318:	ldr	r2, [r3]
   3031c:	str	r0, [r3]
   30320:	mov	r0, r3
   30324:	cmp	r2, #0
   30328:	bne	30314 <__flatcc_fb_parse@@Base+0x9b0>
   3032c:	mov	ip, #0
   30330:	mvn	r2, #972	; 0x3cc
   30334:	str	r3, [r1, #32]
   30338:	mov	r0, r4
   3033c:	str	ip, [r4, #36]	; 0x24
   30340:	bl	2f044 <__flatcc_error_report@@Base+0x1288>
   30344:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30348:	mov	r0, r4
   3034c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30350:	ldr	r2, [r4, #44]	; 0x2c
   30354:	ldr	r6, [r4, #52]	; 0x34
   30358:	add	r3, r6, #128	; 0x80
   3035c:	cmp	r3, r2
   30360:	bhi	31184 <__flatcc_fb_parse@@Base+0x1820>
   30364:	ldr	r1, [r4, #392]	; 0x188
   30368:	mov	r0, #3
   3036c:	str	r3, [r4, #52]	; 0x34
   30370:	ldr	r2, [r4, #544]	; 0x220
   30374:	str	r1, [r6]
   30378:	ldr	r3, [r4, #36]	; 0x24
   3037c:	strh	r0, [r6, #8]
   30380:	str	r6, [r4, #392]	; 0x188
   30384:	str	r2, [r6, #12]
   30388:	cmp	r3, #0
   3038c:	beq	303b0 <__flatcc_fb_parse@@Base+0xa4c>
   30390:	mov	r1, #0
   30394:	b	3039c <__flatcc_fb_parse@@Base+0xa38>
   30398:	mov	r3, r2
   3039c:	ldr	r2, [r3]
   303a0:	str	r1, [r3]
   303a4:	mov	r1, r3
   303a8:	cmp	r2, #0
   303ac:	bne	30398 <__flatcc_fb_parse@@Base+0xa34>
   303b0:	ldr	sl, [r4, #40]	; 0x28
   303b4:	mov	r7, #0
   303b8:	str	r3, [r6, #32]
   303bc:	str	r7, [r4, #36]	; 0x24
   303c0:	ldr	r3, [sl, #16]
   303c4:	cmp	r3, #9
   303c8:	bne	30aac <__flatcc_fb_parse@@Base+0x1148>
   303cc:	mov	r0, r4
   303d0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   303d4:	ldr	r3, [r4, #40]	; 0x28
   303d8:	ldr	r3, [r3, #16]
   303dc:	str	sl, [r6, #4]
   303e0:	cmp	r3, #58	; 0x3a
   303e4:	beq	3124c <__flatcc_fb_parse@@Base+0x18e8>
   303e8:	mov	r0, r4
   303ec:	bl	2ee6c <__flatcc_error_report@@Base+0x10b0>
   303f0:	ldr	sl, [r4, #40]	; 0x28
   303f4:	ldr	r3, [sl, #16]
   303f8:	str	r0, [r6, #28]
   303fc:	cmp	r3, #123	; 0x7b
   30400:	bne	310b0 <__flatcc_fb_parse@@Base+0x174c>
   30404:	mov	r0, r4
   30408:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   3040c:	ldr	fp, [r4, #40]	; 0x28
   30410:	ldr	r2, [fp, #16]
   30414:	cmp	r2, #9
   30418:	bne	313c4 <__flatcc_fb_parse@@Base+0x1a60>
   3041c:	ldr	r3, [pc, #1404]	; 309a0 <__flatcc_fb_parse@@Base+0x103c>
   30420:	add	r3, pc, r3
   30424:	str	r3, [sp, #20]
   30428:	mov	r0, r4
   3042c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30430:	ldr	r3, [r4, #108]	; 0x6c
   30434:	cmp	r3, #9
   30438:	bgt	30ad0 <__flatcc_fb_parse@@Base+0x116c>
   3043c:	ldr	r2, [r4, #44]	; 0x2c
   30440:	ldr	r7, [r4, #52]	; 0x34
   30444:	add	r3, r7, #128	; 0x80
   30448:	cmp	r3, r2
   3044c:	bhi	318ac <__flatcc_fb_parse@@Base+0x1f48>
   30450:	ldr	r2, [r6, #20]
   30454:	mov	r0, #5
   30458:	str	r3, [r4, #52]	; 0x34
   3045c:	str	r2, [r7]
   30460:	strh	r0, [r7, #8]
   30464:	str	r7, [r6, #20]
   30468:	ldr	r3, [r4, #36]	; 0x24
   3046c:	cmp	r3, #0
   30470:	beq	30494 <__flatcc_fb_parse@@Base+0xb30>
   30474:	mov	r0, #0
   30478:	b	30480 <__flatcc_fb_parse@@Base+0xb1c>
   3047c:	mov	r3, r2
   30480:	ldr	r2, [r3]
   30484:	str	r0, [r3]
   30488:	mov	r0, r3
   3048c:	cmp	r2, #0
   30490:	bne	3047c <__flatcc_fb_parse@@Base+0xb18>
   30494:	ldr	r0, [r4, #40]	; 0x28
   30498:	mov	r2, #0
   3049c:	str	r3, [r7, #68]	; 0x44
   304a0:	str	r2, [r4, #36]	; 0x24
   304a4:	str	fp, [r7, #4]
   304a8:	ldr	r3, [r0, #16]
   304ac:	cmp	r3, #61	; 0x3d
   304b0:	bne	304d8 <__flatcc_fb_parse@@Base+0xb74>
   304b4:	mov	r0, r4
   304b8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   304bc:	mov	r2, #0
   304c0:	add	r1, r7, #48	; 0x30
   304c4:	ldr	r3, [sp, #20]
   304c8:	mov	r0, r4
   304cc:	bl	2e798 <__flatcc_error_report@@Base+0x9dc>
   304d0:	ldr	r3, [r4, #40]	; 0x28
   304d4:	ldr	r3, [r3, #16]
   304d8:	cmp	r3, #44	; 0x2c
   304dc:	beq	3139c <__flatcc_fb_parse@@Base+0x1a38>
   304e0:	ldr	r2, [pc, #1212]	; 309a4 <__flatcc_fb_parse@@Base+0x1040>
   304e4:	mov	r3, sl
   304e8:	mov	r1, #125	; 0x7d
   304ec:	mov	r0, r4
   304f0:	add	r2, pc, r2
   304f4:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   304f8:	ldr	r3, [r6, #20]
   304fc:	cmp	r3, #0
   30500:	beq	30524 <__flatcc_fb_parse@@Base+0xbc0>
   30504:	mov	r1, #0
   30508:	b	30510 <__flatcc_fb_parse@@Base+0xbac>
   3050c:	mov	r3, r2
   30510:	ldr	r2, [r3]
   30514:	str	r1, [r3]
   30518:	mov	r1, r3
   3051c:	cmp	r2, #0
   30520:	bne	3050c <__flatcc_fb_parse@@Base+0xba8>
   30524:	str	r3, [r6, #20]
   30528:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   3052c:	mov	r0, r4
   30530:	mov	r7, #0
   30534:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30538:	ldr	r6, [r4, #40]	; 0x28
   3053c:	str	r7, [sp, #24]
   30540:	ldr	r3, [r6, #16]
   30544:	cmp	r3, #59	; 0x3b
   30548:	beq	310a0 <__flatcc_fb_parse@@Base+0x173c>
   3054c:	cmp	r3, #9
   30550:	beq	31994 <__flatcc_fb_parse@@Base+0x2030>
   30554:	ldr	r2, [pc, #1100]	; 309a8 <__flatcc_fb_parse@@Base+0x1044>
   30558:	mov	ip, #0
   3055c:	mov	r1, r6
   30560:	add	r2, pc, r2
   30564:	mov	r0, r4
   30568:	mov	r3, ip
   3056c:	str	ip, [sp]
   30570:	str	ip, [sp, #4]
   30574:	bl	2ddbc <__flatcc_error_report@@Base>
   30578:	mov	r1, #59	; 0x3b
   3057c:	mov	r0, r4
   30580:	bl	2dc4c <__flatcc_fb_default_error_out@@Base+0x310>
   30584:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30588:	mov	r0, r4
   3058c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30590:	ldr	r2, [r4, #44]	; 0x2c
   30594:	ldr	r6, [r4, #52]	; 0x34
   30598:	add	r3, r6, #32
   3059c:	cmp	r3, r2
   305a0:	bhi	3111c <__flatcc_fb_parse@@Base+0x17b8>
   305a4:	ldr	r7, [r4, #40]	; 0x28
   305a8:	str	r3, [r4, #52]	; 0x34
   305ac:	ldr	r2, [r4, #356]	; 0x164
   305b0:	ldr	r3, [r7, #16]
   305b4:	str	r2, [r6]
   305b8:	str	r6, [r4, #356]	; 0x164
   305bc:	cmp	r3, #19
   305c0:	beq	30a28 <__flatcc_fb_parse@@Base+0x10c4>
   305c4:	ldr	r2, [pc, #992]	; 309ac <__flatcc_fb_parse@@Base+0x1048>
   305c8:	mov	ip, #0
   305cc:	mov	r1, r7
   305d0:	mov	r3, ip
   305d4:	mov	r0, r4
   305d8:	str	ip, [sp]
   305dc:	str	ip, [sp, #4]
   305e0:	add	r2, pc, r2
   305e4:	bl	2ddbc <__flatcc_error_report@@Base>
   305e8:	ldr	r1, [r4, #40]	; 0x28
   305ec:	ldr	r3, [r1, #16]
   305f0:	cmp	r3, #59	; 0x3b
   305f4:	beq	2fe5c <__flatcc_fb_parse@@Base+0x4f8>
   305f8:	ldr	r2, [pc, #944]	; 309b0 <__flatcc_fb_parse@@Base+0x104c>
   305fc:	mov	ip, #0
   30600:	add	r2, pc, r2
   30604:	b	2fd3c <__flatcc_fb_parse@@Base+0x3d8>
   30608:	mov	r0, r4
   3060c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30610:	ldr	r2, [r4, #44]	; 0x2c
   30614:	ldr	r6, [r4, #52]	; 0x34
   30618:	add	r3, r6, #128	; 0x80
   3061c:	cmp	r3, r2
   30620:	bhi	311b8 <__flatcc_fb_parse@@Base+0x1854>
   30624:	ldr	r1, [r4, #392]	; 0x188
   30628:	mov	r0, #4
   3062c:	str	r3, [r4, #52]	; 0x34
   30630:	ldr	r2, [r4, #544]	; 0x220
   30634:	str	r1, [r6]
   30638:	ldr	r3, [r4, #36]	; 0x24
   3063c:	strh	r0, [r6, #8]
   30640:	str	r6, [r4, #392]	; 0x188
   30644:	str	r2, [r6, #12]
   30648:	cmp	r3, #0
   3064c:	beq	30670 <__flatcc_fb_parse@@Base+0xd0c>
   30650:	mov	r1, #0
   30654:	b	3065c <__flatcc_fb_parse@@Base+0xcf8>
   30658:	mov	r3, r2
   3065c:	ldr	r2, [r3]
   30660:	str	r1, [r3]
   30664:	mov	r1, r3
   30668:	cmp	r2, #0
   3066c:	bne	30658 <__flatcc_fb_parse@@Base+0xcf4>
   30670:	ldr	sl, [r4, #40]	; 0x28
   30674:	mov	r7, #0
   30678:	str	r3, [r6, #32]
   3067c:	str	r7, [r4, #36]	; 0x24
   30680:	ldr	r3, [sl, #16]
   30684:	cmp	r3, #9
   30688:	bne	30ae0 <__flatcc_fb_parse@@Base+0x117c>
   3068c:	mov	r0, r4
   30690:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30694:	mov	r0, r4
   30698:	str	sl, [r6, #4]
   3069c:	bl	2ee6c <__flatcc_error_report@@Base+0x10b0>
   306a0:	ldr	sl, [r4, #40]	; 0x28
   306a4:	ldr	r3, [sl, #16]
   306a8:	str	r0, [r6, #28]
   306ac:	cmp	r3, #123	; 0x7b
   306b0:	bne	319dc <__flatcc_fb_parse@@Base+0x2078>
   306b4:	mov	r0, r4
   306b8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   306bc:	ldr	fp, [r4, #40]	; 0x28
   306c0:	ldr	r3, [fp, #16]
   306c4:	cmp	r3, #9
   306c8:	bne	3191c <__flatcc_fb_parse@@Base+0x1fb8>
   306cc:	ldr	r3, [r4, #108]	; 0x6c
   306d0:	cmp	r3, #9
   306d4:	bgt	30b04 <__flatcc_fb_parse@@Base+0x11a0>
   306d8:	ldr	r2, [r4, #44]	; 0x2c
   306dc:	ldr	r7, [r4, #52]	; 0x34
   306e0:	add	r3, r7, #128	; 0x80
   306e4:	cmp	r3, r2
   306e8:	bhi	31a50 <__flatcc_fb_parse@@Base+0x20ec>
   306ec:	ldr	r2, [r6, #20]
   306f0:	mov	r1, #5
   306f4:	str	r3, [r4, #52]	; 0x34
   306f8:	str	r2, [r7]
   306fc:	strh	r1, [r7, #8]
   30700:	str	r7, [r6, #20]
   30704:	ldr	r3, [r4, #36]	; 0x24
   30708:	cmp	r3, #0
   3070c:	beq	30730 <__flatcc_fb_parse@@Base+0xdcc>
   30710:	mov	r1, #0
   30714:	b	3071c <__flatcc_fb_parse@@Base+0xdb8>
   30718:	mov	r3, r2
   3071c:	ldr	r2, [r3]
   30720:	str	r1, [r3]
   30724:	mov	r1, r3
   30728:	cmp	r2, #0
   3072c:	bne	30718 <__flatcc_fb_parse@@Base+0xdb4>
   30730:	mov	r2, #0
   30734:	add	r1, sp, #28
   30738:	str	r3, [r7, #68]	; 0x44
   3073c:	mov	r0, r4
   30740:	str	r2, [r4, #36]	; 0x24
   30744:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   30748:	ldr	r3, [sp, #28]
   3074c:	mov	r2, #12
   30750:	str	r3, [r7, #16]
   30754:	strh	r2, [r7, #24]
   30758:	ldr	r2, [r3]
   3075c:	cmp	r2, #0
   30760:	bne	3076c <__flatcc_fb_parse@@Base+0xe08>
   30764:	b	3218c <__flatcc_fb_parse@@Base+0x2828>
   30768:	mov	r2, r3
   3076c:	ldr	r3, [r2]
   30770:	cmp	r3, #0
   30774:	bne	30768 <__flatcc_fb_parse@@Base+0xe04>
   30778:	str	r2, [sp, #28]
   3077c:	ldr	r3, [r4, #40]	; 0x28
   30780:	ldr	r2, [r2, #4]
   30784:	ldr	r3, [r3, #16]
   30788:	str	r2, [r7, #4]
   3078c:	cmp	r3, #58	; 0x3a
   30790:	beq	31944 <__flatcc_fb_parse@@Base+0x1fe0>
   30794:	cmp	r3, #61	; 0x3d
   30798:	bne	307c0 <__flatcc_fb_parse@@Base+0xe5c>
   3079c:	mov	r0, r4
   307a0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   307a4:	add	r1, r7, #48	; 0x30
   307a8:	mov	r2, #0
   307ac:	ldr	r3, [sp, #12]
   307b0:	mov	r0, r4
   307b4:	bl	2e798 <__flatcc_error_report@@Base+0x9dc>
   307b8:	ldr	r3, [r4, #40]	; 0x28
   307bc:	ldr	r3, [r3, #16]
   307c0:	cmp	r3, #44	; 0x2c
   307c4:	beq	318f4 <__flatcc_fb_parse@@Base+0x1f90>
   307c8:	ldr	r2, [pc, #484]	; 309b4 <__flatcc_fb_parse@@Base+0x1050>
   307cc:	mov	r3, sl
   307d0:	mov	r1, #125	; 0x7d
   307d4:	mov	r0, r4
   307d8:	add	r2, pc, r2
   307dc:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   307e0:	ldr	r3, [r6, #20]
   307e4:	cmp	r3, #0
   307e8:	beq	3080c <__flatcc_fb_parse@@Base+0xea8>
   307ec:	mov	r1, #0
   307f0:	b	307f8 <__flatcc_fb_parse@@Base+0xe94>
   307f4:	mov	r3, r2
   307f8:	ldr	r2, [r3]
   307fc:	str	r1, [r3]
   30800:	mov	r1, r3
   30804:	cmp	r2, #0
   30808:	bne	307f4 <__flatcc_fb_parse@@Base+0xe90>
   3080c:	ldr	r1, [r4, #44]	; 0x2c
   30810:	ldr	ip, [r4, #52]	; 0x34
   30814:	str	r3, [r6, #20]
   30818:	add	r2, ip, #128	; 0x80
   3081c:	cmp	r2, r1
   30820:	bhi	31bbc <__flatcc_fb_parse@@Base+0x2258>
   30824:	mov	r1, #5
   30828:	str	r2, [r4, #52]	; 0x34
   3082c:	str	r3, [ip]
   30830:	strh	r1, [ip, #8]
   30834:	str	ip, [r6, #20]
   30838:	ldr	r3, [r4, #36]	; 0x24
   3083c:	cmp	r3, #0
   30840:	beq	30864 <__flatcc_fb_parse@@Base+0xf00>
   30844:	mov	r1, #0
   30848:	b	30850 <__flatcc_fb_parse@@Base+0xeec>
   3084c:	mov	r3, r2
   30850:	ldr	r2, [r3]
   30854:	str	r1, [r3]
   30858:	mov	r1, r3
   3085c:	cmp	r2, #0
   30860:	bne	3084c <__flatcc_fb_parse@@Base+0xee8>
   30864:	mov	r2, #0
   30868:	str	r3, [ip, #68]	; 0x44
   3086c:	add	r3, r4, #68	; 0x44
   30870:	str	r2, [r4, #36]	; 0x24
   30874:	str	r3, [ip, #4]
   30878:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   3087c:	mov	r0, r4
   30880:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30884:	ldr	r2, [r4, #44]	; 0x2c
   30888:	ldr	r1, [r4, #52]	; 0x34
   3088c:	add	r3, r1, #128	; 0x80
   30890:	cmp	r3, r2
   30894:	bhi	310e8 <__flatcc_fb_parse@@Base+0x1784>
   30898:	ldr	ip, [r4, #392]	; 0x188
   3089c:	mov	r2, #0
   308a0:	str	r3, [r4, #52]	; 0x34
   308a4:	ldr	r0, [r4, #544]	; 0x220
   308a8:	str	ip, [r1]
   308ac:	ldr	r3, [r4, #36]	; 0x24
   308b0:	strh	r2, [r1, #8]
   308b4:	str	r1, [r4, #392]	; 0x188
   308b8:	str	r0, [r1, #12]
   308bc:	cmp	r3, r2
   308c0:	bne	308cc <__flatcc_fb_parse@@Base+0xf68>
   308c4:	b	308e0 <__flatcc_fb_parse@@Base+0xf7c>
   308c8:	mov	r3, r0
   308cc:	ldr	r0, [r3]
   308d0:	str	r2, [r3]
   308d4:	mov	r2, r3
   308d8:	cmp	r0, #0
   308dc:	bne	308c8 <__flatcc_fb_parse@@Base+0xf64>
   308e0:	mov	r0, #0
   308e4:	movw	r2, #64553	; 0xfc29
   308e8:	movt	r2, #65535	; 0xffff
   308ec:	str	r3, [r1, #32]
   308f0:	str	r0, [r4, #36]	; 0x24
   308f4:	mov	r0, r4
   308f8:	bl	2f044 <__flatcc_error_report@@Base+0x1288>
   308fc:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30900:	ldr	r2, [pc, #176]	; 309b8 <__flatcc_fb_parse@@Base+0x1054>
   30904:	mov	ip, #0
   30908:	add	r2, pc, r2
   3090c:	b	2fd3c <__flatcc_fb_parse@@Base+0x3d8>
   30910:	mov	r2, #5
   30914:	ldr	ip, [pc, #160]	; 309bc <__flatcc_fb_parse@@Base+0x1058>
   30918:	mov	r3, #0
   3091c:	mov	r0, r4
   30920:	str	r2, [sp, #4]
   30924:	ldr	r2, [pc, #148]	; 309c0 <__flatcc_fb_parse@@Base+0x105c>
   30928:	add	ip, pc, ip
   3092c:	str	ip, [sp]
   30930:	add	r2, pc, r2
   30934:	bl	2ddbc <__flatcc_error_report@@Base>
   30938:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   3093c:	ldr	r2, [pc, #128]	; 309c4 <__flatcc_fb_parse@@Base+0x1060>
   30940:	mov	ip, #0
   30944:	add	r2, pc, r2
   30948:	b	30564 <__flatcc_fb_parse@@Base+0xc00>
   3094c:	ldr	r2, [pc, #116]	; 309c8 <__flatcc_fb_parse@@Base+0x1064>
   30950:	mov	ip, #0
   30954:	add	r2, pc, r2
   30958:	b	30564 <__flatcc_fb_parse@@Base+0xc00>
   3095c:	andeq	r8, r2, r4, ror #4
   30960:	andeq	r8, r2, r0, asr #4
   30964:	andeq	r8, r2, r4
   30968:	andeq	r8, r2, r8, lsr r0
   3096c:	andeq	r8, r2, r8, asr r3
   30970:	andeq	r8, r2, ip, lsr #3
   30974:	andeq	r8, r2, ip, lsl #3
   30978:	andeq	r8, r2, r0, lsr #5
   3097c:	andeq	r8, r2, r0, ror r4
   30980:	andeq	r7, r2, r8, ror #31
   30984:	andeq	r8, r2, ip, lsr r3
   30988:	andeq	r7, r2, r8, lsl r8
   3098c:			; <UNDEFINED> instruction: 0x000281b0
   30990:	andeq	r8, r2, r8, lsr #1
   30994:	andeq	r7, r2, r8, lsr #23
   30998:	andeq	r7, r2, r8, ror r5
   3099c:	ldrdeq	r7, [r2], -ip
   309a0:	andeq	r7, r2, ip, ror #22
   309a4:			; <UNDEFINED> instruction: 0x00027ab8
   309a8:	andeq	r7, r2, r0, ror #15
   309ac:	ldrdeq	r7, [r2], -r4
   309b0:	strdeq	r7, [r2], -r8
   309b4:	muleq	r2, r4, r8
   309b8:	andeq	r7, r2, r0, asr #15
   309bc:	andeq	r7, r2, r8, ror r8
   309c0:	andeq	r7, r2, r8, asr r8
   309c4:	andeq	r7, r2, r0, ror #8
   309c8:			; <UNDEFINED> instruction: 0x000274b0
   309cc:	andeq	r7, r2, r4, ror #8
   309d0:	andeq	r7, r2, ip, asr #8
   309d4:	ldrdeq	r7, [r2], -r4
   309d8:	andeq	r6, r2, r8, lsl r7
   309dc:	andeq	pc, r0, r4, asr #22
   309e0:	muleq	r2, r4, lr
   309e4:	andeq	r6, r2, r4, ror sp
   309e8:			; <UNDEFINED> instruction: 0x00026bb4
   309ec:	muleq	r2, r0, r9
   309f0:	andeq	r6, r2, r0, lsr #23
   309f4:	andeq	pc, r0, r0, lsl r5	; <UNPREDICTABLE>
   309f8:	ldrdeq	r6, [r2], -r4
   309fc:	andeq	pc, r0, ip, ror #8
   30a00:	andeq	pc, r0, ip, asr #8
   30a04:	andeq	r6, r2, ip, lsl #14
   30a08:	andeq	r6, r2, r8, asr r6
   30a0c:	andeq	r6, r2, r8, lsr #10
   30a10:	andeq	r7, r2, ip, asr #1
   30a14:	andeq	pc, r0, r0, asr r1	; <UNPREDICTABLE>
   30a18:	andeq	r6, r2, r4, lsl r4
   30a1c:	ldrdeq	r6, [r2], -ip
   30a20:			; <UNDEFINED> instruction: 0x000263b0
   30a24:	andeq	r6, r2, r0, lsl #12
   30a28:	mov	r0, r4
   30a2c:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   30a30:	mov	r3, #0
   30a34:	mov	r2, #2
   30a38:	add	r1, r6, #8
   30a3c:	mov	r0, r4
   30a40:	str	r3, [r6, #8]
   30a44:	str	r3, [r6, #12]
   30a48:	strh	r2, [r6, #16]
   30a4c:	bl	2e5a4 <__flatcc_error_report@@Base+0x7e8>
   30a50:	ldr	ip, [r6, #12]
   30a54:	cmp	ip, #0
   30a58:	bne	305e8 <__flatcc_fb_parse@@Base+0xc84>
   30a5c:	ldr	r2, [pc, #-152]	; 309cc <__flatcc_fb_parse@@Base+0x1068>
   30a60:	mov	r3, ip
   30a64:	mov	r1, r7
   30a68:	mov	r0, r4
   30a6c:	str	ip, [sp]
   30a70:	str	ip, [sp, #4]
   30a74:	add	r2, pc, r2
   30a78:	bl	2ddbc <__flatcc_error_report@@Base>
   30a7c:	b	305e8 <__flatcc_fb_parse@@Base+0xc84>
   30a80:	mov	ip, #0
   30a84:	mov	r0, r4
   30a88:	mov	r3, ip
   30a8c:	mov	r2, r8
   30a90:	str	ip, [sp]
   30a94:	str	ip, [sp, #4]
   30a98:	bl	2ddbc <__flatcc_error_report@@Base>
   30a9c:	mov	r1, #59	; 0x3b
   30aa0:	mov	r0, r4
   30aa4:	bl	2dc4c <__flatcc_fb_default_error_out@@Base+0x310>
   30aa8:	b	300c0 <__flatcc_fb_parse@@Base+0x75c>
   30aac:	ldr	r2, [pc, #-228]	; 309d0 <__flatcc_fb_parse@@Base+0x106c>
   30ab0:	mov	r1, sl
   30ab4:	mov	r3, r7
   30ab8:	mov	r0, r4
   30abc:	str	r7, [sp]
   30ac0:	str	r7, [sp, #4]
   30ac4:	add	r2, pc, r2
   30ac8:	bl	2ddbc <__flatcc_error_report@@Base>
   30acc:	str	r7, [r6, #4]
   30ad0:	mov	r1, #125	; 0x7d
   30ad4:	mov	r0, r4
   30ad8:	bl	2dc4c <__flatcc_fb_default_error_out@@Base+0x310>
   30adc:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30ae0:	ldr	r2, [pc, #-276]	; 309d4 <__flatcc_fb_parse@@Base+0x1070>
   30ae4:	mov	r1, sl
   30ae8:	mov	r3, r7
   30aec:	mov	r0, r4
   30af0:	str	r7, [sp]
   30af4:	str	r7, [sp, #4]
   30af8:	add	r2, pc, r2
   30afc:	bl	2ddbc <__flatcc_error_report@@Base>
   30b00:	str	r7, [r6, #4]
   30b04:	mov	r0, r4
   30b08:	bl	2dbd4 <__flatcc_fb_default_error_out@@Base+0x298>
   30b0c:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   30b10:	add	r2, r5, #1
   30b14:	subs	r3, r2, #0
   30b18:	beq	326d8 <__flatcc_fb_parse@@Base+0x2d74>
   30b1c:	ldrb	r1, [r2]
   30b20:	add	r2, r3, #1
   30b24:	sub	r0, r1, #48	; 0x30
   30b28:	cmp	r0, #9
   30b2c:	bls	30b14 <__flatcc_fb_parse@@Base+0x11b0>
   30b30:	cmp	r1, #46	; 0x2e
   30b34:	beq	32258 <__flatcc_fb_parse@@Base+0x28f4>
   30b38:	cmp	r6, r3
   30b3c:	beq	31ae8 <__flatcc_fb_parse@@Base+0x2184>
   30b40:	and	r1, r1, #223	; 0xdf
   30b44:	cmp	r1, #69	; 0x45
   30b48:	moveq	r0, r3
   30b4c:	bne	31ae8 <__flatcc_fb_parse@@Base+0x2184>
   30b50:	add	r2, r3, #1
   30b54:	cmp	r6, r2
   30b58:	beq	30b6c <__flatcc_fb_parse@@Base+0x1208>
   30b5c:	ldrb	r1, [r3, #1]
   30b60:	sub	r1, r1, #43	; 0x2b
   30b64:	tst	r1, #253	; 0xfd
   30b68:	movne	r2, r3
   30b6c:	add	r2, r2, #1
   30b70:	b	30b88 <__flatcc_fb_parse@@Base+0x1224>
   30b74:	ldrb	r1, [r2]
   30b78:	add	r2, r2, #1
   30b7c:	sub	r1, r1, #48	; 0x30
   30b80:	cmp	r1, #9
   30b84:	bhi	30b94 <__flatcc_fb_parse@@Base+0x1230>
   30b88:	cmp	r6, r2
   30b8c:	mov	r3, r2
   30b90:	bne	30b74 <__flatcc_fb_parse@@Base+0x1210>
   30b94:	cmp	r3, r0
   30b98:	beq	31ae8 <__flatcc_fb_parse@@Base+0x2184>
   30b9c:	mov	r2, r5
   30ba0:	mov	r1, #11
   30ba4:	mov	r0, r4
   30ba8:	mov	r5, r3
   30bac:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30bb0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30bb4:	add	r3, r5, #1
   30bb8:	cmp	r6, r3
   30bbc:	beq	31c40 <__flatcc_fb_parse@@Base+0x22dc>
   30bc0:	ldrb	r2, [r5, #1]
   30bc4:	cmp	r2, #58	; 0x3a
   30bc8:	beq	31cc4 <__flatcc_fb_parse@@Base+0x2360>
   30bcc:	cmp	r2, #61	; 0x3d
   30bd0:	bne	31c40 <__flatcc_fb_parse@@Base+0x22dc>
   30bd4:	add	r3, r5, #2
   30bd8:	mov	r2, r5
   30bdc:	movw	r1, #15674	; 0x3d3a
   30be0:	mov	r0, r4
   30be4:	mov	r5, r3
   30be8:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30bec:	cmp	r6, r5
   30bf0:	beq	2fc5c <__flatcc_fb_parse@@Base+0x2f8>
   30bf4:	ldrb	r1, [r5]
   30bf8:	b	2fa30 <__flatcc_fb_parse@@Base+0xcc>
   30bfc:	add	r3, r5, #1
   30c00:	cmp	r6, r3
   30c04:	beq	31c28 <__flatcc_fb_parse@@Base+0x22c4>
   30c08:	ldrb	r2, [r5, #1]
   30c0c:	cmp	r2, #43	; 0x2b
   30c10:	beq	31ca8 <__flatcc_fb_parse@@Base+0x2344>
   30c14:	cmp	r2, #61	; 0x3d
   30c18:	bne	31c28 <__flatcc_fb_parse@@Base+0x22c4>
   30c1c:	add	r3, r5, #2
   30c20:	mov	r2, r5
   30c24:	movw	r1, #15659	; 0x3d2b
   30c28:	mov	r0, r4
   30c2c:	mov	r5, r3
   30c30:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30c34:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30c38:	add	r8, r5, #1
   30c3c:	cmp	r6, r8
   30c40:	beq	31c0c <__flatcc_fb_parse@@Base+0x22a8>
   30c44:	ldrb	r3, [r5, #1]
   30c48:	cmp	r3, #42	; 0x2a
   30c4c:	beq	31d24 <__flatcc_fb_parse@@Base+0x23c0>
   30c50:	cmp	r3, #61	; 0x3d
   30c54:	bne	31c0c <__flatcc_fb_parse@@Base+0x22a8>
   30c58:	mov	r2, r5
   30c5c:	movw	r1, #15658	; 0x3d2a
   30c60:	mov	r3, r8
   30c64:	mov	r0, r4
   30c68:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30c6c:	ldrb	r1, [r5, #1]
   30c70:	mov	r5, r8
   30c74:	b	2fa30 <__flatcc_fb_parse@@Base+0xcc>
   30c78:	add	r3, r5, #1
   30c7c:	mov	r2, r5
   30c80:	mov	r0, r4
   30c84:	mov	r5, r3
   30c88:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30c8c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30c90:	add	r8, r5, #1
   30c94:	cmp	r6, r8
   30c98:	beq	31a34 <__flatcc_fb_parse@@Base+0x20d0>
   30c9c:	ldrb	r3, [r5, #1]
   30ca0:	cmp	r3, #38	; 0x26
   30ca4:	beq	31a1c <__flatcc_fb_parse@@Base+0x20b8>
   30ca8:	cmp	r3, #61	; 0x3d
   30cac:	bne	31a34 <__flatcc_fb_parse@@Base+0x20d0>
   30cb0:	add	r3, r5, #2
   30cb4:	mov	r2, r5
   30cb8:	movw	r1, #15654	; 0x3d26
   30cbc:	mov	r0, r4
   30cc0:	mov	r5, r3
   30cc4:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30cc8:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30ccc:	add	r3, r5, #1
   30cd0:	cmp	r6, r3
   30cd4:	beq	30ce4 <__flatcc_fb_parse@@Base+0x1380>
   30cd8:	ldrb	r2, [r5, #1]
   30cdc:	cmp	r2, #61	; 0x3d
   30ce0:	beq	3221c <__flatcc_fb_parse@@Base+0x28b8>
   30ce4:	mov	r2, r5
   30ce8:	mov	r0, r4
   30cec:	mov	r5, r3
   30cf0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30cf4:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30cf8:	add	r8, r5, #1
   30cfc:	cmp	r6, r8
   30d00:	beq	30d30 <__flatcc_fb_parse@@Base+0x13cc>
   30d04:	ldrb	r3, [r5, #1]
   30d08:	cmp	r3, #61	; 0x3d
   30d0c:	beq	31c8c <__flatcc_fb_parse@@Base+0x2328>
   30d10:	cmp	r3, #124	; 0x7c
   30d14:	bne	30d30 <__flatcc_fb_parse@@Base+0x13cc>
   30d18:	add	r8, r5, #2
   30d1c:	mov	r2, r5
   30d20:	mov	r3, r8
   30d24:	movw	r1, #31868	; 0x7c7c
   30d28:	mov	r0, r4
   30d2c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30d30:	mov	r2, r5
   30d34:	mov	r3, r8
   30d38:	mov	r1, #124	; 0x7c
   30d3c:	mov	r0, r4
   30d40:	mov	r5, r8
   30d44:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30d48:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30d4c:	add	r2, r5, #1
   30d50:	lsl	r3, r1, #8
   30d54:	cmp	r6, r2
   30d58:	mov	r8, r2
   30d5c:	beq	30d7c <__flatcc_fb_parse@@Base+0x1418>
   30d60:	ldr	r0, [pc, #-912]	; 309d8 <__flatcc_fb_parse@@Base+0x1074>
   30d64:	ldrb	ip, [r5, #1]
   30d68:	add	r0, pc, r0
   30d6c:	add	r0, r0, ip
   30d70:	ldrb	r0, [r0, #40]	; 0x28
   30d74:	cmp	r0, #0
   30d78:	bne	321d0 <__flatcc_fb_parse@@Base+0x286c>
   30d7c:	mov	r0, #49	; 0x31
   30d80:	orr	r3, r3, r0
   30d84:	orr	r1, r3, r1, lsl #24
   30d88:	ldr	r3, [sp, #16]
   30d8c:	cmp	r1, r3
   30d90:	beq	3266c <__flatcc_fb_parse@@Base+0x2d08>
   30d94:	bhi	31410 <__flatcc_fb_parse@@Base+0x1aac>
   30d98:	movw	r3, #30005	; 0x7535
   30d9c:	movt	r3, #14441	; 0x3869
   30da0:	cmp	r1, r3
   30da4:	beq	32648 <__flatcc_fb_parse@@Base+0x2ce4>
   30da8:	bhi	314f8 <__flatcc_fb_parse@@Base+0x1b94>
   30dac:	movw	r3, #30006	; 0x7536
   30db0:	movt	r3, #13417	; 0x3469
   30db4:	cmp	r1, r3
   30db8:	beq	32620 <__flatcc_fb_parse@@Base+0x2cbc>
   30dbc:	bls	314a0 <__flatcc_fb_parse@@Base+0x1b3c>
   30dc0:	movw	r3, #26933	; 0x6935
   30dc4:	movt	r3, #13422	; 0x346e
   30dc8:	cmp	r1, r3
   30dcc:	beq	325f8 <__flatcc_fb_parse@@Base+0x2c94>
   30dd0:	bls	31468 <__flatcc_fb_parse@@Base+0x1b04>
   30dd4:	movw	r3, #30006	; 0x7536
   30dd8:	movt	r3, #13929	; 0x3669
   30ddc:	cmp	r1, r3
   30de0:	bne	313d8 <__flatcc_fb_parse@@Base+0x1a74>
   30de4:	ldr	r0, [pc, #-1040]	; 309dc <__flatcc_fb_parse@@Base+0x1078>
   30de8:	mov	r1, r5
   30dec:	mov	r2, #6
   30df0:	add	r0, pc, r0
   30df4:	bl	13ec8 <memcmp@plt>
   30df8:	cmp	r0, #0
   30dfc:	movw	r1, #64556	; 0xfc2c
   30e00:	movt	r1, #65535	; 0xffff
   30e04:	movne	r1, #9
   30e08:	mov	r2, r5
   30e0c:	mov	r3, r8
   30e10:	mov	r0, r4
   30e14:	mov	r5, r8
   30e18:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30e1c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30e20:	add	r3, r5, #1
   30e24:	cmp	r6, r3
   30e28:	beq	31c58 <__flatcc_fb_parse@@Base+0x22f4>
   30e2c:	ldrb	r2, [r5, #1]
   30e30:	cmp	r2, #61	; 0x3d
   30e34:	beq	31c70 <__flatcc_fb_parse@@Base+0x230c>
   30e38:	cmp	r2, #62	; 0x3e
   30e3c:	bne	31c58 <__flatcc_fb_parse@@Base+0x22f4>
   30e40:	add	r3, r5, #2
   30e44:	cmp	r6, r3
   30e48:	beq	31b70 <__flatcc_fb_parse@@Base+0x220c>
   30e4c:	ldrb	r2, [r5, #2]
   30e50:	cmp	r2, #61	; 0x3d
   30e54:	beq	32274 <__flatcc_fb_parse@@Base+0x2910>
   30e58:	cmp	r2, #62	; 0x3e
   30e5c:	bne	31b70 <__flatcc_fb_parse@@Base+0x220c>
   30e60:	add	r3, r5, #3
   30e64:	cmp	r6, r3
   30e68:	beq	30e78 <__flatcc_fb_parse@@Base+0x1514>
   30e6c:	ldrb	r2, [r5, #3]
   30e70:	cmp	r2, #61	; 0x3d
   30e74:	beq	32694 <__flatcc_fb_parse@@Base+0x2d30>
   30e78:	mov	r2, r5
   30e7c:	movw	r1, #15934	; 0x3e3e
   30e80:	movt	r1, #62	; 0x3e
   30e84:	mov	r0, r4
   30e88:	mov	r5, r3
   30e8c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30e90:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30e94:	add	r2, r5, #1
   30e98:	cmp	r6, r2
   30e9c:	beq	30b14 <__flatcc_fb_parse@@Base+0x11b0>
   30ea0:	ldrb	r3, [r5, #1]
   30ea4:	cmp	r3, #88	; 0x58
   30ea8:	beq	30eb4 <__flatcc_fb_parse@@Base+0x1550>
   30eac:	cmp	r3, #120	; 0x78
   30eb0:	bne	30b14 <__flatcc_fb_parse@@Base+0x11b0>
   30eb4:	add	r1, r5, #2
   30eb8:	cmp	r6, r1
   30ebc:	mov	r3, r1
   30ec0:	beq	30ee4 <__flatcc_fb_parse@@Base+0x1580>
   30ec4:	ldrb	r2, [r1], #1
   30ec8:	sub	r0, r2, #48	; 0x30
   30ecc:	cmp	r0, #9
   30ed0:	bls	30eb8 <__flatcc_fb_parse@@Base+0x1554>
   30ed4:	orr	r2, r2, #32
   30ed8:	sub	r2, r2, #97	; 0x61
   30edc:	cmp	r2, #5
   30ee0:	bls	30eb8 <__flatcc_fb_parse@@Base+0x1554>
   30ee4:	mov	r2, r5
   30ee8:	mov	r1, #14
   30eec:	mov	r0, r4
   30ef0:	mov	r5, r3
   30ef4:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30ef8:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30efc:	add	r3, r5, #1
   30f00:	cmp	r6, r3
   30f04:	beq	30f24 <__flatcc_fb_parse@@Base+0x15c0>
   30f08:	ldrb	r2, [r5, #1]
   30f0c:	cmp	r2, #47	; 0x2f
   30f10:	beq	31f70 <__flatcc_fb_parse@@Base+0x260c>
   30f14:	cmp	r2, #61	; 0x3d
   30f18:	beq	320b8 <__flatcc_fb_parse@@Base+0x2754>
   30f1c:	cmp	r2, #42	; 0x2a
   30f20:	beq	31e20 <__flatcc_fb_parse@@Base+0x24bc>
   30f24:	mov	r2, r5
   30f28:	mov	r1, #47	; 0x2f
   30f2c:	mov	r0, r4
   30f30:	mov	r5, r3
   30f34:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30f38:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30f3c:	add	r8, r5, #1
   30f40:	cmp	r6, r8
   30f44:	beq	31ab0 <__flatcc_fb_parse@@Base+0x214c>
   30f48:	ldrb	r3, [r5, #1]
   30f4c:	cmp	r3, #61	; 0x3d
   30f50:	beq	31a84 <__flatcc_fb_parse@@Base+0x2120>
   30f54:	cmp	r3, #62	; 0x3e
   30f58:	bne	31ab0 <__flatcc_fb_parse@@Base+0x214c>
   30f5c:	add	r3, r5, #2
   30f60:	mov	r2, r5
   30f64:	movw	r1, #15933	; 0x3e3d
   30f68:	mov	r0, r4
   30f6c:	mov	r5, r3
   30f70:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30f74:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30f78:	add	r3, r5, #1
   30f7c:	cmp	r6, r3
   30f80:	beq	30fa0 <__flatcc_fb_parse@@Base+0x163c>
   30f84:	ldrb	r2, [r5, #1]
   30f88:	cmp	r2, #60	; 0x3c
   30f8c:	beq	31dc4 <__flatcc_fb_parse@@Base+0x2460>
   30f90:	cmp	r2, #61	; 0x3d
   30f94:	beq	31da8 <__flatcc_fb_parse@@Base+0x2444>
   30f98:	cmp	r2, #45	; 0x2d
   30f9c:	beq	31d54 <__flatcc_fb_parse@@Base+0x23f0>
   30fa0:	mov	r2, r5
   30fa4:	mov	r1, #60	; 0x3c
   30fa8:	mov	r0, r4
   30fac:	mov	r5, r3
   30fb0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   30fb4:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   30fb8:	add	r3, r5, #1
   30fbc:	cmp	r6, r3
   30fc0:	beq	31bf4 <__flatcc_fb_parse@@Base+0x2290>
   30fc4:	ldrb	r2, [r5, #1]
   30fc8:	cmp	r2, #46	; 0x2e
   30fcc:	beq	31cf4 <__flatcc_fb_parse@@Base+0x2390>
   30fd0:	bcc	31bf4 <__flatcc_fb_parse@@Base+0x2290>
   30fd4:	sub	r2, r2, #48	; 0x30
   30fd8:	cmp	r2, #9
   30fdc:	movls	r0, r5
   30fe0:	bhi	31bf4 <__flatcc_fb_parse@@Base+0x2290>
   30fe4:	add	r2, r3, #1
   30fe8:	b	31000 <__flatcc_fb_parse@@Base+0x169c>
   30fec:	ldrb	r1, [r2]
   30ff0:	add	r2, r2, #1
   30ff4:	sub	ip, r1, #48	; 0x30
   30ff8:	cmp	ip, #9
   30ffc:	bhi	31d44 <__flatcc_fb_parse@@Base+0x23e0>
   31000:	cmp	r6, r2
   31004:	mov	r3, r2
   31008:	bne	30fec <__flatcc_fb_parse@@Base+0x1688>
   3100c:	b	30b94 <__flatcc_fb_parse@@Base+0x1230>
   31010:	add	r3, r5, #1
   31014:	cmp	r6, r3
   31018:	beq	31038 <__flatcc_fb_parse@@Base+0x16d4>
   3101c:	ldrb	r2, [r5, #1]
   31020:	cmp	r2, #61	; 0x3d
   31024:	beq	31d8c <__flatcc_fb_parse@@Base+0x2428>
   31028:	cmp	r2, #62	; 0x3e
   3102c:	beq	31d70 <__flatcc_fb_parse@@Base+0x240c>
   31030:	cmp	r2, #45	; 0x2d
   31034:	beq	31e04 <__flatcc_fb_parse@@Base+0x24a0>
   31038:	mov	r2, r5
   3103c:	mov	r1, #45	; 0x2d
   31040:	mov	r0, r4
   31044:	mov	r5, r3
   31048:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   3104c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31050:	add	r3, r5, #1
   31054:	cmp	r6, r3
   31058:	beq	31068 <__flatcc_fb_parse@@Base+0x1704>
   3105c:	ldrb	r2, [r5, #1]
   31060:	cmp	r2, #13
   31064:	beq	31098 <__flatcc_fb_parse@@Base+0x1734>
   31068:	ldr	r2, [r4, #64]	; 0x40
   3106c:	mov	r5, r3
   31070:	str	r3, [r4, #60]	; 0x3c
   31074:	add	r3, r2, #1
   31078:	str	r3, [r4, #64]	; 0x40
   3107c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31080:	add	r3, r5, #1
   31084:	cmp	r6, r3
   31088:	beq	31068 <__flatcc_fb_parse@@Base+0x1704>
   3108c:	ldrb	r2, [r5, #1]
   31090:	cmp	r2, #10
   31094:	bne	31068 <__flatcc_fb_parse@@Base+0x1704>
   31098:	add	r3, r5, #2
   3109c:	b	31068 <__flatcc_fb_parse@@Base+0x1704>
   310a0:	mov	r0, r4
   310a4:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   310a8:	str	r7, [r4, #544]	; 0x220
   310ac:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   310b0:	ldr	r2, [pc, #-1752]	; 309e0 <__flatcc_fb_parse@@Base+0x107c>
   310b4:	mov	ip, #0
   310b8:	mov	r1, sl
   310bc:	add	r2, pc, r2
   310c0:	mov	r3, ip
   310c4:	mov	r0, r4
   310c8:	str	ip, [sp]
   310cc:	str	ip, [sp, #4]
   310d0:	bl	2ddbc <__flatcc_error_report@@Base>
   310d4:	b	30ad0 <__flatcc_fb_parse@@Base+0x116c>
   310d8:	ldr	r2, [pc, #-1788]	; 309e4 <__flatcc_fb_parse@@Base+0x1080>
   310dc:	mov	ip, #0
   310e0:	add	r2, pc, r2
   310e4:	b	2fd3c <__flatcc_fb_parse@@Base+0x3d8>
   310e8:	mov	r1, #1
   310ec:	mov	r0, #65536	; 0x10000
   310f0:	bl	13e74 <calloc@plt>
   310f4:	cmp	r0, #0
   310f8:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   310fc:	ldr	r2, [r4, #48]	; 0x30
   31100:	add	ip, r0, #65536	; 0x10000
   31104:	add	r1, r0, #16
   31108:	add	r3, r0, #144	; 0x90
   3110c:	str	ip, [r4, #44]	; 0x2c
   31110:	str	r0, [r4, #48]	; 0x30
   31114:	str	r2, [r0]
   31118:	b	30898 <__flatcc_fb_parse@@Base+0xf34>
   3111c:	mov	r1, #1
   31120:	mov	r0, #65536	; 0x10000
   31124:	bl	13e74 <calloc@plt>
   31128:	cmp	r0, #0
   3112c:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31130:	ldr	r2, [r4, #48]	; 0x30
   31134:	add	r3, r0, #65536	; 0x10000
   31138:	add	r6, r0, #16
   3113c:	str	r3, [r4, #44]	; 0x2c
   31140:	add	r3, r0, #48	; 0x30
   31144:	str	r0, [r4, #48]	; 0x30
   31148:	str	r2, [r0]
   3114c:	b	305a4 <__flatcc_fb_parse@@Base+0xc40>
   31150:	mov	r1, #1
   31154:	mov	r0, #65536	; 0x10000
   31158:	bl	13e74 <calloc@plt>
   3115c:	cmp	r0, #0
   31160:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31164:	ldr	r2, [r4, #48]	; 0x30
   31168:	add	ip, r0, #65536	; 0x10000
   3116c:	add	r1, r0, #16
   31170:	add	r3, r0, #144	; 0x90
   31174:	str	ip, [r4, #44]	; 0x2c
   31178:	str	r0, [r4, #48]	; 0x30
   3117c:	str	r2, [r0]
   31180:	b	30144 <__flatcc_fb_parse@@Base+0x7e0>
   31184:	mov	r1, #1
   31188:	mov	r0, #65536	; 0x10000
   3118c:	bl	13e74 <calloc@plt>
   31190:	cmp	r0, #0
   31194:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31198:	ldr	r2, [r4, #48]	; 0x30
   3119c:	add	r1, r0, #65536	; 0x10000
   311a0:	add	r6, r0, #16
   311a4:	add	r3, r0, #144	; 0x90
   311a8:	str	r1, [r4, #44]	; 0x2c
   311ac:	str	r0, [r4, #48]	; 0x30
   311b0:	str	r2, [r0]
   311b4:	b	30364 <__flatcc_fb_parse@@Base+0xa00>
   311b8:	mov	r1, #1
   311bc:	mov	r0, #65536	; 0x10000
   311c0:	bl	13e74 <calloc@plt>
   311c4:	cmp	r0, #0
   311c8:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   311cc:	ldr	r2, [r4, #48]	; 0x30
   311d0:	add	r1, r0, #65536	; 0x10000
   311d4:	add	r6, r0, #16
   311d8:	add	r3, r0, #144	; 0x90
   311dc:	str	r1, [r4, #44]	; 0x2c
   311e0:	str	r0, [r4, #48]	; 0x30
   311e4:	str	r2, [r0]
   311e8:	b	30624 <__flatcc_fb_parse@@Base+0xcc0>
   311ec:	mov	r1, #1
   311f0:	mov	r0, #65536	; 0x10000
   311f4:	bl	13e74 <calloc@plt>
   311f8:	cmp	r0, #0
   311fc:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31200:	ldr	r2, [r4, #48]	; 0x30
   31204:	add	ip, r0, #65536	; 0x10000
   31208:	add	r1, r0, #16
   3120c:	add	r3, r0, #144	; 0x90
   31210:	str	ip, [r4, #44]	; 0x2c
   31214:	str	r0, [r4, #48]	; 0x30
   31218:	str	r2, [r0]
   3121c:	b	302e0 <__flatcc_fb_parse@@Base+0x97c>
   31220:	ldr	r2, [pc, #-2112]	; 309e8 <__flatcc_fb_parse@@Base+0x1084>
   31224:	mov	r3, #0
   31228:	mov	r0, r4
   3122c:	ldr	r1, [r4, #360]	; 0x168
   31230:	ldr	ip, [r4, #364]	; 0x16c
   31234:	add	r2, pc, r2
   31238:	str	r1, [sp]
   3123c:	ldr	r1, [r4, #40]	; 0x28
   31240:	str	ip, [sp, #4]
   31244:	bl	2ddbc <__flatcc_error_report@@Base>
   31248:	b	2fdd0 <__flatcc_fb_parse@@Base+0x46c>
   3124c:	mov	r0, r4
   31250:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   31254:	add	r1, r6, #40	; 0x28
   31258:	mov	r0, r4
   3125c:	bl	2e178 <__flatcc_error_report@@Base+0x3bc>
   31260:	ldrh	r3, [r6, #48]	; 0x30
   31264:	ldr	r1, [r6, #40]	; 0x28
   31268:	cmp	r3, #8
   3126c:	bne	31b2c <__flatcc_fb_parse@@Base+0x21c8>
   31270:	ldr	r3, [r1, #16]
   31274:	add	r3, r3, #996	; 0x3e4
   31278:	cmp	r3, #21
   3127c:	addls	pc, pc, r3, lsl #2
   31280:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31284:	b	31b4c <__flatcc_fb_parse@@Base+0x21e8>
   31288:	b	31b4c <__flatcc_fb_parse@@Base+0x21e8>
   3128c:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31290:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31294:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31298:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   3129c:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312a0:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312a4:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312a8:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312ac:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312b0:	b	31b4c <__flatcc_fb_parse@@Base+0x21e8>
   312b4:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312b8:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312bc:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312c0:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312c4:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312c8:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312cc:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312d0:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312d4:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   312d8:	b	31b4c <__flatcc_fb_parse@@Base+0x21e8>
   312dc:	cmp	r1, #127	; 0x7f
   312e0:	cmpne	r1, #31
   312e4:	mov	r2, r5
   312e8:	add	r3, r5, #1
   312ec:	bhi	318e0 <__flatcc_fb_parse@@Base+0x1f7c>
   312f0:	mov	r1, #5
   312f4:	mov	r0, r4
   312f8:	mov	r5, r3
   312fc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31300:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31304:	mov	r3, r5
   31308:	mov	r2, r5
   3130c:	mov	r1, #23
   31310:	mov	r0, r4
   31314:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31318:	b	2fa14 <__flatcc_fb_parse@@Base+0xb0>
   3131c:	ldr	r2, [r4, #356]	; 0x164
   31320:	cmp	r2, #0
   31324:	bne	31330 <__flatcc_fb_parse@@Base+0x19cc>
   31328:	b	31344 <__flatcc_fb_parse@@Base+0x19e0>
   3132c:	mov	r2, r1
   31330:	ldr	r1, [r2]
   31334:	str	r3, [r2]
   31338:	mov	r3, r2
   3133c:	cmp	r1, #0
   31340:	bne	3132c <__flatcc_fb_parse@@Base+0x19c8>
   31344:	ldr	r3, [r4, #392]	; 0x188
   31348:	str	r2, [r4, #356]	; 0x164
   3134c:	cmp	r3, #0
   31350:	beq	31374 <__flatcc_fb_parse@@Base+0x1a10>
   31354:	mov	r1, #0
   31358:	b	31360 <__flatcc_fb_parse@@Base+0x19fc>
   3135c:	mov	r3, r2
   31360:	ldr	r2, [r3]
   31364:	str	r1, [r3]
   31368:	mov	r1, r3
   3136c:	cmp	r2, #0
   31370:	bne	3135c <__flatcc_fb_parse@@Base+0x19f8>
   31374:	str	r3, [r4, #392]	; 0x188
   31378:	b	2fea0 <__flatcc_fb_parse@@Base+0x53c>
   3137c:	ldr	r2, [pc, #-2456]	; 309ec <__flatcc_fb_parse@@Base+0x1088>
   31380:	mov	r3, r5
   31384:	mov	r0, r4
   31388:	str	r5, [sp]
   3138c:	str	r5, [sp, #4]
   31390:	add	r2, pc, r2
   31394:	bl	2ddbc <__flatcc_error_report@@Base>
   31398:	b	3011c <__flatcc_fb_parse@@Base+0x7b8>
   3139c:	mov	r0, r4
   313a0:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   313a4:	ldr	fp, [r4, #40]	; 0x28
   313a8:	ldr	r3, [fp, #16]
   313ac:	cmp	r3, #125	; 0x7d
   313b0:	beq	304e0 <__flatcc_fb_parse@@Base+0xb7c>
   313b4:	mov	r2, #0
   313b8:	cmp	r3, #9
   313bc:	str	r2, [r4, #36]	; 0x24
   313c0:	beq	30428 <__flatcc_fb_parse@@Base+0xac4>
   313c4:	ldr	r2, [pc, #-2524]	; 309f0 <__flatcc_fb_parse@@Base+0x108c>
   313c8:	mov	ip, #0
   313cc:	mov	r1, fp
   313d0:	add	r2, pc, r2
   313d4:	b	310c0 <__flatcc_fb_parse@@Base+0x175c>
   313d8:	movw	r3, #26933	; 0x6935
   313dc:	movt	r3, #13934	; 0x366e
   313e0:	cmp	r1, r3
   313e4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   313e8:	ldr	r0, [pc, #-2556]	; 309f4 <__flatcc_fb_parse@@Base+0x1090>
   313ec:	mov	r1, r5
   313f0:	mov	r2, #5
   313f4:	add	r0, pc, r0
   313f8:	bl	13ec8 <memcmp@plt>
   313fc:	cmp	r0, #0
   31400:	movw	r1, #64544	; 0xfc20
   31404:	movt	r1, #65535	; 0xffff
   31408:	movne	r1, #9
   3140c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31410:	cmp	r1, r9
   31414:	beq	32410 <__flatcc_fb_parse@@Base+0x2aac>
   31418:	bhi	316f0 <__flatcc_fb_parse@@Base+0x1d8c>
   3141c:	movw	r3, #30005	; 0x7535
   31420:	movt	r3, #26476	; 0x676c
   31424:	cmp	r1, r3
   31428:	beq	323ec <__flatcc_fb_parse@@Base+0x2a88>
   3142c:	bls	31680 <__flatcc_fb_parse@@Base+0x1d1c>
   31430:	movw	r3, #29494	; 0x7336
   31434:	movt	r3, #26484	; 0x6774
   31438:	cmp	r1, r3
   3143c:	beq	323c4 <__flatcc_fb_parse@@Base+0x2a60>
   31440:	bls	3173c <__flatcc_fb_parse@@Base+0x1dd8>
   31444:	movw	r3, #25140	; 0x6234
   31448:	movt	r3, #27759	; 0x6c6f
   3144c:	cmp	r1, r3
   31450:	bne	31634 <__flatcc_fb_parse@@Base+0x1cd0>
   31454:	ldrb	r3, [r5]
   31458:	cmp	r3, #98	; 0x62
   3145c:	beq	31b88 <__flatcc_fb_parse@@Base+0x2224>
   31460:	mov	r1, #9
   31464:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31468:	movw	r3, #26167	; 0x6637
   3146c:	movt	r3, #13420	; 0x346c
   31470:	cmp	r1, r3
   31474:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31478:	ldr	r0, [pc, #-2696]	; 309f8 <__flatcc_fb_parse@@Base+0x1094>
   3147c:	mov	r1, r5
   31480:	mov	r2, #7
   31484:	add	r0, pc, r0
   31488:	bl	13ec8 <memcmp@plt>
   3148c:	cmp	r0, #0
   31490:	movw	r1, #64541	; 0xfc1d
   31494:	movt	r1, #65535	; 0xffff
   31498:	movne	r1, #9
   3149c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   314a0:	movw	r3, #26167	; 0x6637
   314a4:	movt	r3, #12908	; 0x326c
   314a8:	cmp	r1, r3
   314ac:	beq	3251c <__flatcc_fb_parse@@Base+0x2bb8>
   314b0:	movw	r3, #26933	; 0x6935
   314b4:	movt	r3, #12910	; 0x326e
   314b8:	cmp	r1, r3
   314bc:	beq	325ac <__flatcc_fb_parse@@Base+0x2c48>
   314c0:	movw	r3, #30006	; 0x7536
   314c4:	movt	r3, #12905	; 0x3269
   314c8:	cmp	r1, r3
   314cc:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   314d0:	ldr	r0, [pc, #-2780]	; 309fc <__flatcc_fb_parse@@Base+0x1098>
   314d4:	mov	r1, r5
   314d8:	mov	r2, #6
   314dc:	add	r0, pc, r0
   314e0:	bl	13ec8 <memcmp@plt>
   314e4:	cmp	r0, #0
   314e8:	movw	r1, #64557	; 0xfc2d
   314ec:	movt	r1, #65535	; 0xffff
   314f0:	movne	r1, #9
   314f4:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   314f8:	movw	r3, #29749	; 0x7435
   314fc:	movt	r3, #25953	; 0x6561
   31500:	cmp	r1, r3
   31504:	beq	324f4 <__flatcc_fb_parse@@Base+0x2b90>
   31508:	bls	315c8 <__flatcc_fb_parse@@Base+0x1c64>
   3150c:	movw	r3, #26935	; 0x6937
   31510:	movt	r3, #25966	; 0x656e
   31514:	cmp	r1, r3
   31518:	beq	32438 <__flatcc_fb_parse@@Base+0x2ad4>
   3151c:	bls	31590 <__flatcc_fb_parse@@Base+0x1c2c>
   31520:	movw	r3, #25654	; 0x6436
   31524:	movt	r3, #25967	; 0x656f
   31528:	cmp	r1, r3
   3152c:	bne	31558 <__flatcc_fb_parse@@Base+0x1bf4>
   31530:	ldr	r0, [pc, #-2872]	; 30a00 <__flatcc_fb_parse@@Base+0x109c>
   31534:	mov	r1, r5
   31538:	mov	r2, #6
   3153c:	add	r0, pc, r0
   31540:	bl	13ec8 <memcmp@plt>
   31544:	cmp	r0, #0
   31548:	movw	r1, #64561	; 0xfc31
   3154c:	movt	r1, #65535	; 0xffff
   31550:	movne	r1, #9
   31554:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31558:	movw	r3, #29241	; 0x7239
   3155c:	movt	r3, #25967	; 0x656f
   31560:	cmp	r1, r3
   31564:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31568:	ldr	r0, [pc, #-2924]	; 30a04 <__flatcc_fb_parse@@Base+0x10a0>
   3156c:	mov	r1, r5
   31570:	mov	r2, #9
   31574:	add	r0, pc, r0
   31578:	bl	13ec8 <memcmp@plt>
   3157c:	cmp	r0, #0
   31580:	movw	r1, #64568	; 0xfc38
   31584:	movt	r1, #65535	; 0xffff
   31588:	movne	r1, #9
   3158c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31590:	movw	r3, #30005	; 0x7535
   31594:	movt	r3, #25954	; 0x6562
   31598:	cmp	r1, r3
   3159c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   315a0:	ldr	r0, [pc, #-2976]	; 30a08 <__flatcc_fb_parse@@Base+0x10a4>
   315a4:	mov	r1, r5
   315a8:	mov	r2, #5
   315ac:	add	r0, pc, r0
   315b0:	bl	13ec8 <memcmp@plt>
   315b4:	cmp	r0, #0
   315b8:	movw	r1, #64554	; 0xfc2a
   315bc:	movt	r1, #65535	; 0xffff
   315c0:	movne	r1, #9
   315c4:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   315c8:	movw	r3, #26165	; 0x6635
   315cc:	movt	r3, #25953	; 0x6561
   315d0:	cmp	r1, r3
   315d4:	beq	3239c <__flatcc_fb_parse@@Base+0x2a38>
   315d8:	movw	r3, #28217	; 0x6e39
   315dc:	movt	r3, #25953	; 0x6561
   315e0:	cmp	r1, r3
   315e4:	beq	325d4 <__flatcc_fb_parse@@Base+0x2c70>
   315e8:	movw	r3, #26932	; 0x6934
   315ec:	movt	r3, #14446	; 0x386e
   315f0:	cmp	r1, r3
   315f4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   315f8:	ldrb	r3, [r5]
   315fc:	cmp	r3, #105	; 0x69
   31600:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31604:	ldrb	r3, [r2]
   31608:	cmp	r3, #110	; 0x6e
   3160c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31610:	ldrb	r3, [r2, #1]
   31614:	add	r2, r2, #1
   31618:	cmp	r3, #116	; 0x74
   3161c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31620:	ldrb	r3, [r2, #1]
   31624:	cmp	r3, #56	; 0x38
   31628:	mvneq	r1, #992	; 0x3e0
   3162c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31630:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31634:	movw	r3, #25908	; 0x6534
   31638:	movt	r3, #28014	; 0x6d6e
   3163c:	cmp	r1, r3
   31640:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31644:	ldrb	r3, [r5]
   31648:	cmp	r3, #101	; 0x65
   3164c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31650:	ldrb	r3, [r2]
   31654:	cmp	r3, #110	; 0x6e
   31658:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   3165c:	ldrb	r3, [r2, #1]
   31660:	add	r2, r2, #1
   31664:	cmp	r3, #117	; 0x75
   31668:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   3166c:	ldrb	r3, [r2, #1]
   31670:	cmp	r3, #109	; 0x6d
   31674:	mvneq	r1, #996	; 0x3e4
   31678:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   3167c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31680:	movw	r3, #24889	; 0x6139
   31684:	movt	r3, #25972	; 0x6574
   31688:	cmp	r1, r3
   3168c:	beq	32374 <__flatcc_fb_parse@@Base+0x2a10>
   31690:	movw	r3, #25140	; 0x6234
   31694:	movt	r3, #25977	; 0x6579
   31698:	cmp	r1, r3
   3169c:	beq	3256c <__flatcc_fb_parse@@Base+0x2c08>
   316a0:	movw	r3, #29748	; 0x7434
   316a4:	movt	r3, #25970	; 0x6572
   316a8:	cmp	r1, r3
   316ac:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   316b0:	ldrb	r3, [r5]
   316b4:	cmp	r3, #116	; 0x74
   316b8:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   316bc:	ldrb	r3, [r2]
   316c0:	cmp	r3, #114	; 0x72
   316c4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   316c8:	ldrb	r3, [r2, #1]
   316cc:	add	r2, r2, #1
   316d0:	cmp	r3, #117	; 0x75
   316d4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   316d8:	ldrb	r3, [r2, #1]
   316dc:	cmp	r3, #101	; 0x65
   316e0:	movweq	r1, #64548	; 0xfc24
   316e4:	movteq	r1, #65535	; 0xffff
   316e8:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   316ec:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   316f0:	ldr	r3, [sp, #12]
   316f4:	cmp	r1, r3
   316f8:	beq	324b4 <__flatcc_fb_parse@@Base+0x2b50>
   316fc:	bls	317e8 <__flatcc_fb_parse@@Base+0x1e84>
   31700:	cmp	r1, fp
   31704:	beq	32484 <__flatcc_fb_parse@@Base+0x2b20>
   31708:	bls	317b4 <__flatcc_fb_parse@@Base+0x1e50>
   3170c:	cmp	r1, r7
   31710:	bne	31788 <__flatcc_fb_parse@@Base+0x1e24>
   31714:	ldr	r0, [pc, #-3344]	; 30a0c <__flatcc_fb_parse@@Base+0x10a8>
   31718:	mov	r1, r5
   3171c:	mov	r2, #6
   31720:	add	r0, pc, r0
   31724:	bl	13ec8 <memcmp@plt>
   31728:	cmp	r0, #0
   3172c:	movw	r1, #64564	; 0xfc34
   31730:	movt	r1, #65535	; 0xffff
   31734:	movne	r1, #9
   31738:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   3173c:	movw	r3, #27700	; 0x6c34
   31740:	movt	r3, #26479	; 0x676f
   31744:	cmp	r1, r3
   31748:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   3174c:	ldrb	r3, [r5]
   31750:	cmp	r3, #108	; 0x6c
   31754:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31758:	ldrb	r3, [r2]
   3175c:	cmp	r3, #111	; 0x6f
   31760:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31764:	ldrb	r3, [r2, #1]
   31768:	add	r2, r2, #1
   3176c:	cmp	r3, #110	; 0x6e
   31770:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31774:	ldrb	r3, [r2, #1]
   31778:	cmp	r3, #103	; 0x67
   3177c:	mvneq	r1, #988	; 0x3dc
   31780:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31784:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31788:	cmp	r1, sl
   3178c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31790:	ldr	r0, [pc, #-3464]	; 30a10 <__flatcc_fb_parse@@Base+0x10ac>
   31794:	mov	r1, r5
   31798:	mov	r2, #6
   3179c:	add	r0, pc, r0
   317a0:	bl	13ec8 <memcmp@plt>
   317a4:	cmp	r0, #0
   317a8:	movne	r1, #9
   317ac:	mvneq	r1, #972	; 0x3cc
   317b0:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   317b4:	movw	r3, #26165	; 0x6635
   317b8:	movt	r3, #29804	; 0x746c
   317bc:	cmp	r1, r3
   317c0:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   317c4:	ldr	r0, [pc, #-3512]	; 30a14 <__flatcc_fb_parse@@Base+0x10b0>
   317c8:	mov	r1, r5
   317cc:	mov	r2, #5
   317d0:	add	r0, pc, r0
   317d4:	bl	13ec8 <memcmp@plt>
   317d8:	cmp	r0, #0
   317dc:	movne	r1, #9
   317e0:	mvneq	r1, #984	; 0x3d8
   317e4:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   317e8:	movw	r3, #26175	; 0x663f
   317ec:	movt	r3, #29289	; 0x7269
   317f0:	cmp	r1, r3
   317f4:	beq	32460 <__flatcc_fb_parse@@Base+0x2afc>
   317f8:	movw	r3, #29493	; 0x7335
   317fc:	movt	r3, #29800	; 0x7468
   31800:	cmp	r1, r3
   31804:	beq	32544 <__flatcc_fb_parse@@Base+0x2be0>
   31808:	movw	r3, #30005	; 0x7535
   3180c:	movt	r3, #28270	; 0x6e6e
   31810:	cmp	r1, r3
   31814:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31818:	ldr	r0, [pc, #-3592]	; 30a18 <__flatcc_fb_parse@@Base+0x10b4>
   3181c:	mov	r1, r5
   31820:	mov	r2, #5
   31824:	add	r0, pc, r0
   31828:	bl	13ec8 <memcmp@plt>
   3182c:	cmp	r0, #0
   31830:	movw	r1, #64560	; 0xfc30
   31834:	movt	r1, #65535	; 0xffff
   31838:	movne	r1, #9
   3183c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31840:	mov	r0, r4
   31844:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   31848:	ldr	r6, [r4, #40]	; 0x28
   3184c:	ldr	r3, [r6, #16]
   31850:	b	2fca0 <__flatcc_fb_parse@@Base+0x33c>
   31854:	mov	ip, #0
   31858:	mov	r2, r9
   3185c:	mov	r3, ip
   31860:	mov	r1, r6
   31864:	mov	r0, r4
   31868:	str	ip, [sp]
   3186c:	str	ip, [sp, #4]
   31870:	bl	2ddbc <__flatcc_error_report@@Base>
   31874:	b	3009c <__flatcc_fb_parse@@Base+0x738>
   31878:	mov	r1, #1
   3187c:	mov	r0, #65536	; 0x10000
   31880:	bl	13e74 <calloc@plt>
   31884:	cmp	r0, #0
   31888:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   3188c:	ldr	r1, [r4, #48]	; 0x30
   31890:	add	ip, r0, #65536	; 0x10000
   31894:	add	r3, r0, #16
   31898:	add	r2, r0, #48	; 0x30
   3189c:	str	ip, [r4, #44]	; 0x2c
   318a0:	str	r0, [r4, #48]	; 0x30
   318a4:	str	r1, [r0]
   318a8:	b	300d4 <__flatcc_fb_parse@@Base+0x770>
   318ac:	mov	r1, #1
   318b0:	mov	r0, #65536	; 0x10000
   318b4:	bl	13e74 <calloc@plt>
   318b8:	cmp	r0, #0
   318bc:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   318c0:	ldr	r2, [r4, #48]	; 0x30
   318c4:	add	ip, r0, #65536	; 0x10000
   318c8:	add	r7, r0, #16
   318cc:	add	r3, r0, #144	; 0x90
   318d0:	str	ip, [r4, #44]	; 0x2c
   318d4:	str	r0, [r4, #48]	; 0x30
   318d8:	str	r2, [r0]
   318dc:	b	30450 <__flatcc_fb_parse@@Base+0xaec>
   318e0:	mov	r1, #8
   318e4:	mov	r0, r4
   318e8:	mov	r5, r3
   318ec:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   318f0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   318f4:	mov	r0, r4
   318f8:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   318fc:	ldr	fp, [r4, #40]	; 0x28
   31900:	ldr	r3, [fp, #16]
   31904:	cmp	r3, #125	; 0x7d
   31908:	beq	307c8 <__flatcc_fb_parse@@Base+0xe64>
   3190c:	mov	r2, #0
   31910:	cmp	r3, #9
   31914:	str	r2, [r4, #36]	; 0x24
   31918:	beq	306cc <__flatcc_fb_parse@@Base+0xd68>
   3191c:	ldr	r2, [pc, #-3848]	; 30a1c <__flatcc_fb_parse@@Base+0x10b8>
   31920:	mov	ip, #0
   31924:	mov	r1, fp
   31928:	mov	r3, ip
   3192c:	mov	r0, r4
   31930:	str	ip, [sp]
   31934:	str	ip, [sp, #4]
   31938:	add	r2, pc, r2
   3193c:	bl	2ddbc <__flatcc_error_report@@Base>
   31940:	b	30b04 <__flatcc_fb_parse@@Base+0x11a0>
   31944:	mov	r0, r4
   31948:	bl	2da84 <__flatcc_fb_default_error_out@@Base+0x148>
   3194c:	ldr	r3, [r7, #16]
   31950:	ldr	r3, [r3]
   31954:	cmp	r3, #0
   31958:	beq	3197c <__flatcc_fb_parse@@Base+0x2018>
   3195c:	mov	ip, #0
   31960:	mov	r1, fp
   31964:	ldr	r2, [sp, #16]
   31968:	mov	r3, ip
   3196c:	mov	r0, r4
   31970:	str	ip, [sp]
   31974:	str	ip, [sp, #4]
   31978:	bl	2ddbc <__flatcc_error_report@@Base>
   3197c:	add	r1, r7, #16
   31980:	mov	r0, r4
   31984:	bl	2e178 <__flatcc_error_report@@Base+0x3bc>
   31988:	ldr	r3, [r4, #40]	; 0x28
   3198c:	ldr	r3, [r3, #16]
   31990:	b	30794 <__flatcc_fb_parse@@Base+0xe30>
   31994:	add	r1, sp, #24
   31998:	mov	r0, r4
   3199c:	bl	2dfbc <__flatcc_error_report@@Base+0x200>
   319a0:	ldr	r2, [pc, #-3976]	; 30a20 <__flatcc_fb_parse@@Base+0x10bc>
   319a4:	mov	r3, r6
   319a8:	mov	r1, #59	; 0x3b
   319ac:	mov	r0, r4
   319b0:	add	r2, pc, r2
   319b4:	bl	2e118 <__flatcc_error_report@@Base+0x35c>
   319b8:	ldr	fp, [sp, #24]
   319bc:	mov	r2, #0
   319c0:	ldr	r0, [r4, #412]	; 0x19c
   319c4:	mov	r1, fp
   319c8:	bl	2ca20 <fb_scope_table_find@@Base>
   319cc:	subs	sl, r0, #0
   319d0:	beq	32194 <__flatcc_fb_parse@@Base+0x2830>
   319d4:	str	sl, [r4, #544]	; 0x220
   319d8:	b	2fd50 <__flatcc_fb_parse@@Base+0x3ec>
   319dc:	ldr	r2, [pc, #-4032]	; 30a24 <__flatcc_fb_parse@@Base+0x10c0>
   319e0:	mov	r3, r7
   319e4:	mov	r1, sl
   319e8:	mov	r0, r4
   319ec:	str	r7, [sp]
   319f0:	str	r7, [sp, #4]
   319f4:	add	r2, pc, r2
   319f8:	bl	2ddbc <__flatcc_error_report@@Base>
   319fc:	b	30b04 <__flatcc_fb_parse@@Base+0x11a0>
   31a00:	add	r7, r5, #2
   31a04:	cmp	r6, r7
   31a08:	beq	3005c <__flatcc_fb_parse@@Base+0x6f8>
   31a0c:	ldrb	r3, [r5, #2]
   31a10:	cmp	r3, #13
   31a14:	bne	3005c <__flatcc_fb_parse@@Base+0x6f8>
   31a18:	b	30058 <__flatcc_fb_parse@@Base+0x6f4>
   31a1c:	add	r8, r5, #2
   31a20:	mov	r2, r5
   31a24:	mov	r3, r8
   31a28:	movw	r1, #9766	; 0x2626
   31a2c:	mov	r0, r4
   31a30:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31a34:	mov	r2, r5
   31a38:	mov	r3, r8
   31a3c:	mov	r1, #38	; 0x26
   31a40:	mov	r0, r4
   31a44:	mov	r5, r8
   31a48:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31a4c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31a50:	mov	r1, #1
   31a54:	mov	r0, #65536	; 0x10000
   31a58:	bl	13e74 <calloc@plt>
   31a5c:	cmp	r0, #0
   31a60:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31a64:	ldr	r2, [r4, #48]	; 0x30
   31a68:	add	r1, r0, #65536	; 0x10000
   31a6c:	add	r7, r0, #16
   31a70:	add	r3, r0, #144	; 0x90
   31a74:	str	r1, [r4, #44]	; 0x2c
   31a78:	str	r0, [r4, #48]	; 0x30
   31a7c:	str	r2, [r0]
   31a80:	b	306ec <__flatcc_fb_parse@@Base+0xd88>
   31a84:	add	r8, r5, #2
   31a88:	cmp	r6, r8
   31a8c:	beq	31a9c <__flatcc_fb_parse@@Base+0x2138>
   31a90:	ldrb	r3, [r5, #2]
   31a94:	cmp	r3, #61	; 0x3d
   31a98:	beq	32334 <__flatcc_fb_parse@@Base+0x29d0>
   31a9c:	mov	r3, r8
   31aa0:	mov	r2, r5
   31aa4:	movw	r1, #15677	; 0x3d3d
   31aa8:	mov	r0, r4
   31aac:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31ab0:	mov	r2, r5
   31ab4:	mov	r3, r8
   31ab8:	mov	r1, #61	; 0x3d
   31abc:	mov	r0, r4
   31ac0:	mov	r5, r8
   31ac4:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31ac8:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31acc:	add	r3, r7, #2
   31ad0:	mov	r2, r5
   31ad4:	mov	r1, #22
   31ad8:	mov	r0, r4
   31adc:	mov	r5, r3
   31ae0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31ae4:	b	2fa14 <__flatcc_fb_parse@@Base+0xb0>
   31ae8:	mov	r2, r5
   31aec:	mov	r1, #10
   31af0:	mov	r0, r4
   31af4:	mov	r5, r3
   31af8:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31afc:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31b00:	ldr	r2, [pc, #3032]	; 326e0 <__flatcc_fb_parse@@Base+0x2d7c>
   31b04:	mov	r3, #0
   31b08:	mov	r0, r4
   31b0c:	ldr	r1, [r4, #376]	; 0x178
   31b10:	ldr	ip, [r4, #380]	; 0x17c
   31b14:	add	r2, pc, r2
   31b18:	str	r1, [sp]
   31b1c:	ldr	r1, [r4, #40]	; 0x28
   31b20:	str	ip, [sp, #4]
   31b24:	bl	2ddbc <__flatcc_error_report@@Base>
   31b28:	b	301c8 <__flatcc_fb_parse@@Base+0x864>
   31b2c:	ldr	r2, [pc, #2992]	; 326e4 <__flatcc_fb_parse@@Base+0x2d80>
   31b30:	mov	r3, r7
   31b34:	mov	r0, r4
   31b38:	str	r7, [sp]
   31b3c:	str	r7, [sp, #4]
   31b40:	add	r2, pc, r2
   31b44:	bl	2ddbc <__flatcc_error_report@@Base>
   31b48:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31b4c:	ldr	r2, [pc, #2964]	; 326e8 <__flatcc_fb_parse@@Base+0x2d84>
   31b50:	mov	ip, #0
   31b54:	mov	r0, r4
   31b58:	mov	r3, ip
   31b5c:	str	ip, [sp]
   31b60:	str	ip, [sp, #4]
   31b64:	add	r2, pc, r2
   31b68:	bl	2ddbc <__flatcc_error_report@@Base>
   31b6c:	b	303e8 <__flatcc_fb_parse@@Base+0xa84>
   31b70:	mov	r2, r5
   31b74:	movw	r1, #15934	; 0x3e3e
   31b78:	mov	r0, r4
   31b7c:	mov	r5, r3
   31b80:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31b84:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31b88:	ldrb	r3, [r2]
   31b8c:	cmp	r3, #111	; 0x6f
   31b90:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31b94:	ldrb	r3, [r2, #1]
   31b98:	add	r2, r2, #1
   31b9c:	cmp	r3, #111	; 0x6f
   31ba0:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31ba4:	ldrb	r3, [r2, #1]
   31ba8:	cmp	r3, #108	; 0x6c
   31bac:	movweq	r1, #64537	; 0xfc19
   31bb0:	movteq	r1, #65535	; 0xffff
   31bb4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   31bb8:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   31bbc:	mov	r1, #1
   31bc0:	mov	r0, #65536	; 0x10000
   31bc4:	bl	13e74 <calloc@plt>
   31bc8:	cmp	r0, #0
   31bcc:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   31bd0:	ldr	r3, [r4, #48]	; 0x30
   31bd4:	add	r2, r0, #65536	; 0x10000
   31bd8:	add	ip, r0, #16
   31bdc:	str	r2, [r4, #44]	; 0x2c
   31be0:	add	r2, r0, #144	; 0x90
   31be4:	str	r0, [r4, #48]	; 0x30
   31be8:	str	r3, [r0]
   31bec:	ldr	r3, [r6, #20]
   31bf0:	b	30824 <__flatcc_fb_parse@@Base+0xec0>
   31bf4:	mov	r2, r5
   31bf8:	mov	r1, #46	; 0x2e
   31bfc:	mov	r0, r4
   31c00:	mov	r5, r3
   31c04:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c08:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c0c:	mov	r2, r5
   31c10:	mov	r3, r8
   31c14:	mov	r1, #42	; 0x2a
   31c18:	mov	r0, r4
   31c1c:	mov	r5, r8
   31c20:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c24:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c28:	mov	r2, r5
   31c2c:	mov	r1, #43	; 0x2b
   31c30:	mov	r0, r4
   31c34:	mov	r5, r3
   31c38:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c3c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c40:	mov	r2, r5
   31c44:	mov	r1, #58	; 0x3a
   31c48:	mov	r0, r4
   31c4c:	mov	r5, r3
   31c50:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c54:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c58:	mov	r2, r5
   31c5c:	mov	r1, #62	; 0x3e
   31c60:	mov	r0, r4
   31c64:	mov	r5, r3
   31c68:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c6c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c70:	add	r3, r5, #2
   31c74:	mov	r2, r5
   31c78:	movw	r1, #15678	; 0x3d3e
   31c7c:	mov	r0, r4
   31c80:	mov	r5, r3
   31c84:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31c88:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31c8c:	add	r3, r5, #2
   31c90:	mov	r2, r5
   31c94:	movw	r1, #15740	; 0x3d7c
   31c98:	mov	r0, r4
   31c9c:	mov	r5, r3
   31ca0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31ca4:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31ca8:	add	r3, r5, #2
   31cac:	mov	r2, r5
   31cb0:	movw	r1, #11051	; 0x2b2b
   31cb4:	mov	r0, r4
   31cb8:	mov	r5, r3
   31cbc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31cc0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31cc4:	add	r3, r5, #2
   31cc8:	cmp	r6, r3
   31ccc:	beq	31cdc <__flatcc_fb_parse@@Base+0x2378>
   31cd0:	ldrb	r2, [r5, #2]
   31cd4:	cmp	r2, #61	; 0x3d
   31cd8:	beq	32354 <__flatcc_fb_parse@@Base+0x29f0>
   31cdc:	mov	r2, r5
   31ce0:	movw	r1, #14906	; 0x3a3a
   31ce4:	mov	r0, r4
   31ce8:	mov	r5, r3
   31cec:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31cf0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31cf4:	add	r3, r5, #2
   31cf8:	cmp	r6, r3
   31cfc:	beq	31d0c <__flatcc_fb_parse@@Base+0x23a8>
   31d00:	ldrb	r2, [r5, #2]
   31d04:	cmp	r2, #46	; 0x2e
   31d08:	beq	32314 <__flatcc_fb_parse@@Base+0x29b0>
   31d0c:	mov	r2, r5
   31d10:	movw	r1, #11822	; 0x2e2e
   31d14:	mov	r0, r4
   31d18:	mov	r5, r3
   31d1c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31d20:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31d24:	mov	r2, r5
   31d28:	movw	r1, #10794	; 0x2a2a
   31d2c:	mov	r3, r8
   31d30:	mov	r0, r4
   31d34:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31d38:	ldrb	r1, [r5, #1]
   31d3c:	mov	r5, r8
   31d40:	b	2fa30 <__flatcc_fb_parse@@Base+0xcc>
   31d44:	and	r1, r1, #223	; 0xdf
   31d48:	cmp	r1, #69	; 0x45
   31d4c:	bne	30b94 <__flatcc_fb_parse@@Base+0x1230>
   31d50:	b	30b50 <__flatcc_fb_parse@@Base+0x11ec>
   31d54:	add	r3, r5, #2
   31d58:	mov	r2, r5
   31d5c:	movw	r1, #11580	; 0x2d3c
   31d60:	mov	r0, r4
   31d64:	mov	r5, r3
   31d68:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31d6c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31d70:	add	r3, r5, #2
   31d74:	mov	r2, r5
   31d78:	movw	r1, #15917	; 0x3e2d
   31d7c:	mov	r0, r4
   31d80:	mov	r5, r3
   31d84:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31d88:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31d8c:	add	r3, r5, #2
   31d90:	mov	r2, r5
   31d94:	movw	r1, #15661	; 0x3d2d
   31d98:	mov	r0, r4
   31d9c:	mov	r5, r3
   31da0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31da4:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31da8:	add	r3, r5, #2
   31dac:	mov	r2, r5
   31db0:	movw	r1, #15676	; 0x3d3c
   31db4:	mov	r0, r4
   31db8:	mov	r5, r3
   31dbc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31dc0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31dc4:	add	r3, r5, #2
   31dc8:	cmp	r6, r3
   31dcc:	beq	32294 <__flatcc_fb_parse@@Base+0x2930>
   31dd0:	ldrb	r2, [r5, #2]
   31dd4:	cmp	r2, #60	; 0x3c
   31dd8:	beq	322e0 <__flatcc_fb_parse@@Base+0x297c>
   31ddc:	cmp	r2, #61	; 0x3d
   31de0:	bne	32294 <__flatcc_fb_parse@@Base+0x2930>
   31de4:	add	r3, r5, #3
   31de8:	mov	r2, r5
   31dec:	movw	r1, #15420	; 0x3c3c
   31df0:	movt	r1, #61	; 0x3d
   31df4:	mov	r0, r4
   31df8:	mov	r5, r3
   31dfc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31e00:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31e04:	add	r3, r5, #2
   31e08:	mov	r2, r5
   31e0c:	movw	r1, #11565	; 0x2d2d
   31e10:	mov	r0, r4
   31e14:	mov	r5, r3
   31e18:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31e1c:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   31e20:	add	r7, r5, #2
   31e24:	cmp	r6, r7
   31e28:	beq	32238 <__flatcc_fb_parse@@Base+0x28d4>
   31e2c:	ldrb	r3, [r5, #2]
   31e30:	cmp	r3, #33	; 0x21
   31e34:	cmpne	r3, #42	; 0x2a
   31e38:	bne	32238 <__flatcc_fb_parse@@Base+0x28d4>
   31e3c:	mov	r0, #1
   31e40:	add	r7, r5, #3
   31e44:	movw	r1, #64572	; 0xfc3c
   31e48:	movt	r1, #65535	; 0xffff
   31e4c:	mov	r3, r7
   31e50:	mov	r2, r7
   31e54:	str	r0, [r4, #32]
   31e58:	mov	r0, r4
   31e5c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31e60:	movw	r8, #64572	; 0xfc3c
   31e64:	movt	r8, #65535	; 0xffff
   31e68:	sub	r2, r7, #1
   31e6c:	b	31e74 <__flatcc_fb_parse@@Base+0x2510>
   31e70:	mov	r2, r5
   31e74:	add	r5, r2, #1
   31e78:	cmp	r6, r5
   31e7c:	beq	31f2c <__flatcc_fb_parse@@Base+0x25c8>
   31e80:	ldrb	r3, [r2, #1]
   31e84:	cmp	r3, #127	; 0x7f
   31e88:	cmpne	r3, #31
   31e8c:	bls	31f58 <__flatcc_fb_parse@@Base+0x25f4>
   31e90:	cmp	r3, #47	; 0x2f
   31e94:	bne	31e70 <__flatcc_fb_parse@@Base+0x250c>
   31e98:	ldrb	r3, [r5, #-1]
   31e9c:	cmp	r3, #42	; 0x2a
   31ea0:	bne	31e70 <__flatcc_fb_parse@@Base+0x250c>
   31ea4:	cmp	r7, r2
   31ea8:	moveq	r5, r7
   31eac:	beq	31ec0 <__flatcc_fb_parse@@Base+0x255c>
   31eb0:	ldr	r3, [r4, #32]
   31eb4:	mov	r5, r2
   31eb8:	cmp	r3, #0
   31ebc:	bne	31f40 <__flatcc_fb_parse@@Base+0x25dc>
   31ec0:	cmp	r6, r5
   31ec4:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31ec8:	ldrb	r3, [r5]
   31ecc:	cmp	r3, #0
   31ed0:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31ed4:	cmp	r3, #10
   31ed8:	beq	32054 <__flatcc_fb_parse@@Base+0x26f0>
   31edc:	cmp	r3, #13
   31ee0:	beq	32080 <__flatcc_fb_parse@@Base+0x271c>
   31ee4:	cmp	r3, #127	; 0x7f
   31ee8:	cmpne	r3, #31
   31eec:	movls	r2, #1
   31ef0:	movhi	r2, #0
   31ef4:	bhi	32048 <__flatcc_fb_parse@@Base+0x26e4>
   31ef8:	cmp	r3, #9
   31efc:	cmpne	r3, #32
   31f00:	add	r7, r5, #1
   31f04:	bne	320a0 <__flatcc_fb_parse@@Base+0x273c>
   31f08:	ldr	r3, [r4, #32]
   31f0c:	cmp	r3, #0
   31f10:	beq	31e68 <__flatcc_fb_parse@@Base+0x2504>
   31f14:	mov	r2, r5
   31f18:	mov	r3, r7
   31f1c:	mov	r1, r8
   31f20:	mov	r0, r4
   31f24:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31f28:	b	31e68 <__flatcc_fb_parse@@Base+0x2504>
   31f2c:	cmp	r7, r6
   31f30:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31f34:	ldr	r3, [r4, #32]
   31f38:	cmp	r3, #0
   31f3c:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31f40:	mov	r2, r7
   31f44:	mov	r3, r5
   31f48:	mov	r1, r8
   31f4c:	mov	r0, r4
   31f50:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31f54:	b	31ec0 <__flatcc_fb_parse@@Base+0x255c>
   31f58:	cmp	r7, r5
   31f5c:	beq	31ecc <__flatcc_fb_parse@@Base+0x2568>
   31f60:	ldr	r3, [r4, #32]
   31f64:	cmp	r3, #0
   31f68:	beq	31ec8 <__flatcc_fb_parse@@Base+0x2564>
   31f6c:	b	31f40 <__flatcc_fb_parse@@Base+0x25dc>
   31f70:	add	r7, r5, #2
   31f74:	cmp	r6, r7
   31f78:	beq	32244 <__flatcc_fb_parse@@Base+0x28e0>
   31f7c:	ldrb	r3, [r5, #2]
   31f80:	cmp	r3, #33	; 0x21
   31f84:	cmpne	r3, #47	; 0x2f
   31f88:	bne	32244 <__flatcc_fb_parse@@Base+0x28e0>
   31f8c:	mov	r0, #1
   31f90:	add	r7, r5, #3
   31f94:	movw	r1, #64572	; 0xfc3c
   31f98:	movt	r1, #65535	; 0xffff
   31f9c:	mov	r3, r7
   31fa0:	mov	r2, r7
   31fa4:	str	r0, [r4, #32]
   31fa8:	mov	r0, r4
   31fac:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   31fb0:	movw	sl, #64572	; 0xfc3c
   31fb4:	movt	sl, #65535	; 0xffff
   31fb8:	sub	r8, r7, #1
   31fbc:	b	31fd4 <__flatcc_fb_parse@@Base+0x2670>
   31fc0:	ldrb	r3, [r8, #1]
   31fc4:	cmp	r3, #127	; 0x7f
   31fc8:	cmpne	r3, #31
   31fcc:	bls	320d4 <__flatcc_fb_parse@@Base+0x2770>
   31fd0:	mov	r8, r5
   31fd4:	add	r5, r8, #1
   31fd8:	cmp	r6, r5
   31fdc:	bne	31fc0 <__flatcc_fb_parse@@Base+0x265c>
   31fe0:	cmp	r7, r6
   31fe4:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31fe8:	ldr	r3, [r4, #32]
   31fec:	cmp	r3, #0
   31ff0:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   31ff4:	movw	r1, #64572	; 0xfc3c
   31ff8:	movt	r1, #65535	; 0xffff
   31ffc:	mov	r2, r7
   32000:	mov	r3, r6
   32004:	mov	r0, r4
   32008:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   3200c:	mov	r3, r5
   32010:	mov	r2, r5
   32014:	mov	r1, #27
   32018:	mov	r0, r4
   3201c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32020:	cmp	r6, r5
   32024:	beq	2fc5c <__flatcc_fb_parse@@Base+0x2f8>
   32028:	ldrb	r1, [r5]
   3202c:	cmp	r1, #0
   32030:	bne	2fc5c <__flatcc_fb_parse@@Base+0x2f8>
   32034:	mov	r3, r5
   32038:	mov	r2, r5
   3203c:	mov	r0, r4
   32040:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32044:	b	2fc70 <__flatcc_fb_parse@@Base+0x30c>
   32048:	add	r5, r5, #2
   3204c:	str	r2, [r4, #32]
   32050:	b	2fa14 <__flatcc_fb_parse@@Base+0xb0>
   32054:	add	r7, r5, #1
   32058:	cmp	r6, r7
   3205c:	beq	3206c <__flatcc_fb_parse@@Base+0x2708>
   32060:	ldrb	r3, [r5, #1]
   32064:	cmp	r3, #13
   32068:	beq	32098 <__flatcc_fb_parse@@Base+0x2734>
   3206c:	ldr	r3, [r4, #64]	; 0x40
   32070:	str	r7, [r4, #60]	; 0x3c
   32074:	add	r3, r3, #1
   32078:	str	r3, [r4, #64]	; 0x40
   3207c:	b	31e68 <__flatcc_fb_parse@@Base+0x2504>
   32080:	add	r7, r5, #1
   32084:	cmp	r6, r7
   32088:	beq	3206c <__flatcc_fb_parse@@Base+0x2708>
   3208c:	ldrb	r3, [r5, #1]
   32090:	cmp	r3, #10
   32094:	bne	3206c <__flatcc_fb_parse@@Base+0x2708>
   32098:	add	r7, r5, #2
   3209c:	b	3206c <__flatcc_fb_parse@@Base+0x2708>
   320a0:	mov	r2, r5
   320a4:	mov	r3, r7
   320a8:	mov	r1, #7
   320ac:	mov	r0, r4
   320b0:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   320b4:	b	31e68 <__flatcc_fb_parse@@Base+0x2504>
   320b8:	add	r3, r5, #2
   320bc:	mov	r2, r5
   320c0:	movw	r1, #15663	; 0x3d2f
   320c4:	mov	r0, r4
   320c8:	mov	r5, r3
   320cc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   320d0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   320d4:	cmp	r7, r5
   320d8:	bne	32140 <__flatcc_fb_parse@@Base+0x27dc>
   320dc:	ldrb	r3, [r5]
   320e0:	cmp	r3, #0
   320e4:	beq	3200c <__flatcc_fb_parse@@Base+0x26a8>
   320e8:	cmp	r3, #13
   320ec:	cmpne	r3, #10
   320f0:	beq	32164 <__flatcc_fb_parse@@Base+0x2800>
   320f4:	cmp	r3, #9
   320f8:	cmpne	r3, #32
   320fc:	add	r7, r8, #2
   32100:	bne	32128 <__flatcc_fb_parse@@Base+0x27c4>
   32104:	ldr	r3, [r4, #32]
   32108:	cmp	r3, #0
   3210c:	beq	31fb8 <__flatcc_fb_parse@@Base+0x2654>
   32110:	mov	r2, r5
   32114:	mov	r3, r7
   32118:	mov	r1, sl
   3211c:	mov	r0, r4
   32120:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32124:	b	31fb8 <__flatcc_fb_parse@@Base+0x2654>
   32128:	mov	r2, r5
   3212c:	mov	r3, r7
   32130:	mov	r1, #7
   32134:	mov	r0, r4
   32138:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   3213c:	b	31fb8 <__flatcc_fb_parse@@Base+0x2654>
   32140:	ldr	r3, [r4, #32]
   32144:	cmp	r3, #0
   32148:	beq	320dc <__flatcc_fb_parse@@Base+0x2778>
   3214c:	mov	r2, r7
   32150:	mov	r3, r5
   32154:	mov	r1, sl
   32158:	mov	r0, r4
   3215c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32160:	b	320dc <__flatcc_fb_parse@@Base+0x2778>
   32164:	mov	r3, #0
   32168:	str	r3, [r4, #32]
   3216c:	b	2fa14 <__flatcc_fb_parse@@Base+0xb0>
   32170:	mov	r3, r8
   32174:	mov	r2, r8
   32178:	mov	r1, #23
   3217c:	mov	r0, r4
   32180:	mov	r5, r8
   32184:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32188:	b	2fa14 <__flatcc_fb_parse@@Base+0xb0>
   3218c:	mov	r2, r3
   32190:	b	3077c <__flatcc_fb_parse@@Base+0xe18>
   32194:	ldr	r3, [r4, #44]	; 0x2c
   32198:	ldr	sl, [r4, #52]	; 0x34
   3219c:	add	r2, sl, #32
   321a0:	cmp	r2, r3
   321a4:	bhi	322ac <__flatcc_fb_parse@@Base+0x2948>
   321a8:	add	r3, r4, #476	; 0x1dc
   321ac:	mov	r1, sl
   321b0:	ldr	r0, [r4, #412]	; 0x19c
   321b4:	ldrd	r6, [r3]
   321b8:	str	r2, [r4, #52]	; 0x34
   321bc:	mov	r2, #1
   321c0:	str	fp, [sl]
   321c4:	strd	r6, [sl, #20]
   321c8:	bl	2c9fc <fb_scope_table_insert_item@@Base>
   321cc:	b	319d4 <__flatcc_fb_parse@@Base+0x2070>
   321d0:	orr	r3, r3, ip, lsl #16
   321d4:	ldr	ip, [pc, #1296]	; 326ec <__flatcc_fb_parse@@Base+0x2d88>
   321d8:	mov	r0, r2
   321dc:	add	ip, pc, ip
   321e0:	b	321fc <__flatcc_fb_parse@@Base+0x2898>
   321e4:	ldrb	r1, [r8]
   321e8:	add	r1, ip, r1
   321ec:	ldrb	r1, [r1, #40]	; 0x28
   321f0:	cmp	r1, #0
   321f4:	beq	32260 <__flatcc_fb_parse@@Base+0x28fc>
   321f8:	mov	r0, r8
   321fc:	add	r8, r8, #1
   32200:	cmp	r6, r8
   32204:	bne	321e4 <__flatcc_fb_parse@@Base+0x2880>
   32208:	sub	ip, r6, r5
   3220c:	ldrb	r1, [r0]
   32210:	uxtb	r0, ip
   32214:	add	r0, r0, #48	; 0x30
   32218:	b	30d80 <__flatcc_fb_parse@@Base+0x141c>
   3221c:	add	r3, r5, #2
   32220:	mov	r2, r5
   32224:	orr	r1, r1, #15616	; 0x3d00
   32228:	mov	r0, r4
   3222c:	mov	r5, r3
   32230:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32234:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32238:	mov	r3, #0
   3223c:	str	r3, [r4, #32]
   32240:	b	31e60 <__flatcc_fb_parse@@Base+0x24fc>
   32244:	mov	r3, #0
   32248:	str	r3, [r4, #32]
   3224c:	b	31fb0 <__flatcc_fb_parse@@Base+0x264c>
   32250:	mov	r5, r1
   32254:	b	2fccc <__flatcc_fb_parse@@Base+0x368>
   32258:	mov	r0, r3
   3225c:	b	30fe4 <__flatcc_fb_parse@@Base+0x1680>
   32260:	sub	ip, r8, r5
   32264:	ldrb	r1, [r0]
   32268:	uxtb	r0, ip
   3226c:	add	r0, r0, #48	; 0x30
   32270:	b	30d80 <__flatcc_fb_parse@@Base+0x141c>
   32274:	add	r3, r5, #3
   32278:	mov	r2, r5
   3227c:	movw	r1, #15934	; 0x3e3e
   32280:	movt	r1, #61	; 0x3d
   32284:	mov	r0, r4
   32288:	mov	r5, r3
   3228c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32290:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32294:	mov	r2, r5
   32298:	movw	r1, #15420	; 0x3c3c
   3229c:	mov	r0, r4
   322a0:	mov	r5, r3
   322a4:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   322a8:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   322ac:	mov	r1, #1
   322b0:	mov	r0, #65536	; 0x10000
   322b4:	bl	13e74 <calloc@plt>
   322b8:	cmp	r0, #0
   322bc:	beq	326d4 <__flatcc_fb_parse@@Base+0x2d70>
   322c0:	ldr	r3, [r4, #48]	; 0x30
   322c4:	add	r1, r0, #65536	; 0x10000
   322c8:	add	sl, r0, #16
   322cc:	add	r2, r0, #48	; 0x30
   322d0:	str	r1, [r4, #44]	; 0x2c
   322d4:	str	r0, [r4, #48]	; 0x30
   322d8:	str	r3, [r0]
   322dc:	b	321a8 <__flatcc_fb_parse@@Base+0x2844>
   322e0:	add	r3, r5, #3
   322e4:	cmp	r6, r3
   322e8:	beq	322f8 <__flatcc_fb_parse@@Base+0x2994>
   322ec:	ldrb	r2, [r5, #3]
   322f0:	cmp	r2, #61	; 0x3d
   322f4:	beq	326b4 <__flatcc_fb_parse@@Base+0x2d50>
   322f8:	mov	r2, r5
   322fc:	movw	r1, #15420	; 0x3c3c
   32300:	movt	r1, #60	; 0x3c
   32304:	mov	r0, r4
   32308:	mov	r5, r3
   3230c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32310:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32314:	add	r3, r5, #3
   32318:	mov	r2, r5
   3231c:	movw	r1, #11822	; 0x2e2e
   32320:	movt	r1, #46	; 0x2e
   32324:	mov	r0, r4
   32328:	mov	r5, r3
   3232c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32330:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32334:	add	r3, r5, #3
   32338:	mov	r2, r5
   3233c:	movw	r1, #15677	; 0x3d3d
   32340:	movt	r1, #61	; 0x3d
   32344:	mov	r0, r4
   32348:	mov	r5, r3
   3234c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32350:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32354:	add	r3, r5, #3
   32358:	mov	r2, r5
   3235c:	movw	r1, #14906	; 0x3a3a
   32360:	movt	r1, #61	; 0x3d
   32364:	mov	r0, r4
   32368:	mov	r5, r3
   3236c:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   32370:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   32374:	ldr	r0, [pc, #884]	; 326f0 <__flatcc_fb_parse@@Base+0x2d8c>
   32378:	mov	r1, r5
   3237c:	mov	r2, #9
   32380:	add	r0, pc, r0
   32384:	bl	13ec8 <memcmp@plt>
   32388:	cmp	r0, #0
   3238c:	movw	r1, #64566	; 0xfc36
   32390:	movt	r1, #65535	; 0xffff
   32394:	movne	r1, #9
   32398:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   3239c:	ldr	r0, [pc, #848]	; 326f4 <__flatcc_fb_parse@@Base+0x2d90>
   323a0:	mov	r1, r5
   323a4:	mov	r2, #5
   323a8:	add	r0, pc, r0
   323ac:	bl	13ec8 <memcmp@plt>
   323b0:	cmp	r0, #0
   323b4:	movw	r1, #64550	; 0xfc26
   323b8:	movt	r1, #65535	; 0xffff
   323bc:	movne	r1, #9
   323c0:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   323c4:	ldr	r0, [pc, #812]	; 326f8 <__flatcc_fb_parse@@Base+0x2d94>
   323c8:	mov	r1, r5
   323cc:	mov	r2, #6
   323d0:	add	r0, pc, r0
   323d4:	bl	13ec8 <memcmp@plt>
   323d8:	cmp	r0, #0
   323dc:	movw	r1, #64562	; 0xfc32
   323e0:	movt	r1, #65535	; 0xffff
   323e4:	movne	r1, #9
   323e8:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   323ec:	ldr	r0, [pc, #776]	; 326fc <__flatcc_fb_parse@@Base+0x2d98>
   323f0:	mov	r1, r5
   323f4:	mov	r2, #5
   323f8:	add	r0, pc, r0
   323fc:	bl	13ec8 <memcmp@plt>
   32400:	cmp	r0, #0
   32404:	movne	r1, #9
   32408:	mvneq	r1, #976	; 0x3d0
   3240c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32410:	ldr	r0, [pc, #744]	; 32700 <__flatcc_fb_parse@@Base+0x2d9c>
   32414:	mov	r1, r5
   32418:	mov	r2, #14
   3241c:	add	r0, pc, r0
   32420:	bl	13ec8 <memcmp@plt>
   32424:	cmp	r0, #0
   32428:	movw	r1, #64570	; 0xfc3a
   3242c:	movt	r1, #65535	; 0xffff
   32430:	movne	r1, #9
   32434:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32438:	ldr	r0, [pc, #708]	; 32704 <__flatcc_fb_parse@@Base+0x2da0>
   3243c:	mov	r1, r5
   32440:	mov	r2, #7
   32444:	add	r0, pc, r0
   32448:	bl	13ec8 <memcmp@plt>
   3244c:	cmp	r0, #0
   32450:	movw	r1, #64565	; 0xfc35
   32454:	movt	r1, #65535	; 0xffff
   32458:	movne	r1, #9
   3245c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32460:	ldr	r0, [pc, #672]	; 32708 <__flatcc_fb_parse@@Base+0x2da4>
   32464:	mov	r1, r5
   32468:	mov	r2, #15
   3246c:	add	r0, pc, r0
   32470:	bl	13ec8 <memcmp@plt>
   32474:	cmp	r0, #0
   32478:	movne	r1, #9
   3247c:	mvneq	r1, #964	; 0x3c4
   32480:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32484:	ldrb	r3, [r5]
   32488:	cmp	r3, #105	; 0x69
   3248c:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   32490:	ldrb	r3, [r2]
   32494:	cmp	r3, #110	; 0x6e
   32498:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   3249c:	ldrb	r3, [r2, #1]
   324a0:	cmp	r3, #116	; 0x74
   324a4:	movweq	r1, #64542	; 0xfc1e
   324a8:	movteq	r1, #65535	; 0xffff
   324ac:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   324b0:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   324b4:	ldrb	r3, [r5]
   324b8:	cmp	r3, #117	; 0x75
   324bc:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   324c0:	ldrb	r3, [r2]
   324c4:	cmp	r3, #105	; 0x69
   324c8:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   324cc:	ldrb	r3, [r2, #1]
   324d0:	add	r2, r2, #1
   324d4:	cmp	r3, #110	; 0x6e
   324d8:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   324dc:	ldrb	r3, [r2, #1]
   324e0:	cmp	r3, #116	; 0x74
   324e4:	movweq	r1, #64549	; 0xfc25
   324e8:	movteq	r1, #65535	; 0xffff
   324ec:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   324f0:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   324f4:	ldr	r0, [pc, #528]	; 3270c <__flatcc_fb_parse@@Base+0x2da8>
   324f8:	mov	r1, r5
   324fc:	mov	r2, #5
   32500:	add	r0, pc, r0
   32504:	bl	13ec8 <memcmp@plt>
   32508:	cmp	r0, #0
   3250c:	movw	r1, #64553	; 0xfc29
   32510:	movt	r1, #65535	; 0xffff
   32514:	movne	r1, #9
   32518:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   3251c:	ldr	r0, [pc, #492]	; 32710 <__flatcc_fb_parse@@Base+0x2dac>
   32520:	mov	r1, r5
   32524:	mov	r2, #7
   32528:	add	r0, pc, r0
   3252c:	bl	13ec8 <memcmp@plt>
   32530:	cmp	r0, #0
   32534:	movw	r1, #64540	; 0xfc1c
   32538:	movt	r1, #65535	; 0xffff
   3253c:	movne	r1, #9
   32540:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32544:	ldr	r0, [pc, #456]	; 32714 <__flatcc_fb_parse@@Base+0x2db0>
   32548:	mov	r1, r5
   3254c:	mov	r2, #5
   32550:	add	r0, pc, r0
   32554:	bl	13ec8 <memcmp@plt>
   32558:	cmp	r0, #0
   3255c:	movw	r1, #64552	; 0xfc28
   32560:	movt	r1, #65535	; 0xffff
   32564:	movne	r1, #9
   32568:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   3256c:	ldrb	r3, [r5]
   32570:	cmp	r3, #98	; 0x62
   32574:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   32578:	ldrb	r3, [r2]
   3257c:	cmp	r3, #121	; 0x79
   32580:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   32584:	ldrb	r3, [r2, #1]
   32588:	add	r2, r2, #1
   3258c:	cmp	r3, #116	; 0x74
   32590:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   32594:	ldrb	r3, [r2, #1]
   32598:	cmp	r3, #101	; 0x65
   3259c:	movweq	r1, #64538	; 0xfc1a
   325a0:	movteq	r1, #65535	; 0xffff
   325a4:	bne	31460 <__flatcc_fb_parse@@Base+0x1afc>
   325a8:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   325ac:	ldr	r0, [pc, #356]	; 32718 <__flatcc_fb_parse@@Base+0x2db4>
   325b0:	mov	r1, r5
   325b4:	mov	r2, #5
   325b8:	add	r0, pc, r0
   325bc:	bl	13ec8 <memcmp@plt>
   325c0:	cmp	r0, #0
   325c4:	movw	r1, #64545	; 0xfc21
   325c8:	movt	r1, #65535	; 0xffff
   325cc:	movne	r1, #9
   325d0:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   325d4:	ldr	r0, [pc, #320]	; 3271c <__flatcc_fb_parse@@Base+0x2db8>
   325d8:	mov	r1, r5
   325dc:	mov	r2, #9
   325e0:	add	r0, pc, r0
   325e4:	bl	13ec8 <memcmp@plt>
   325e8:	cmp	r0, #0
   325ec:	movne	r1, #9
   325f0:	mvneq	r1, #968	; 0x3c8
   325f4:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   325f8:	ldr	r0, [pc, #288]	; 32720 <__flatcc_fb_parse@@Base+0x2dbc>
   325fc:	mov	r1, r5
   32600:	mov	r2, #5
   32604:	add	r0, pc, r0
   32608:	bl	13ec8 <memcmp@plt>
   3260c:	cmp	r0, #0
   32610:	movw	r1, #64546	; 0xfc22
   32614:	movt	r1, #65535	; 0xffff
   32618:	movne	r1, #9
   3261c:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32620:	ldr	r0, [pc, #252]	; 32724 <__flatcc_fb_parse@@Base+0x2dc0>
   32624:	mov	r1, r5
   32628:	mov	r2, #6
   3262c:	add	r0, pc, r0
   32630:	bl	13ec8 <memcmp@plt>
   32634:	cmp	r0, #0
   32638:	movw	r1, #64558	; 0xfc2e
   3263c:	movt	r1, #65535	; 0xffff
   32640:	movne	r1, #9
   32644:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32648:	ldr	r0, [pc, #216]	; 32728 <__flatcc_fb_parse@@Base+0x2dc4>
   3264c:	mov	r1, r5
   32650:	mov	r2, #5
   32654:	add	r0, pc, r0
   32658:	bl	13ec8 <memcmp@plt>
   3265c:	cmp	r0, #0
   32660:	movne	r1, #9
   32664:	mvneq	r1, #980	; 0x3d4
   32668:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   3266c:	ldr	r0, [pc, #184]	; 3272c <__flatcc_fb_parse@@Base+0x2dc8>
   32670:	mov	r1, r5
   32674:	mov	r2, #11
   32678:	add	r0, pc, r0
   3267c:	bl	13ec8 <memcmp@plt>
   32680:	cmp	r0, #0
   32684:	movw	r1, #64569	; 0xfc39
   32688:	movt	r1, #65535	; 0xffff
   3268c:	movne	r1, #9
   32690:	b	30e08 <__flatcc_fb_parse@@Base+0x14a4>
   32694:	add	r3, r5, #4
   32698:	mov	r2, r5
   3269c:	movw	r1, #15934	; 0x3e3e
   326a0:	movt	r1, #15678	; 0x3d3e
   326a4:	mov	r0, r4
   326a8:	mov	r5, r3
   326ac:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   326b0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   326b4:	add	r3, r5, #4
   326b8:	mov	r2, r5
   326bc:	movw	r1, #15420	; 0x3c3c
   326c0:	movt	r1, #15676	; 0x3d3c
   326c4:	mov	r0, r4
   326c8:	mov	r5, r3
   326cc:	bl	2d9b0 <__flatcc_fb_default_error_out@@Base+0x74>
   326d0:	b	30bec <__flatcc_fb_parse@@Base+0x1288>
   326d4:	bl	2d96c <__flatcc_fb_default_error_out@@Base+0x30>
   326d8:	ldrb	r3, [r2]
   326dc:	udf	#0
   326e0:	andeq	r6, r2, r4, ror r2
   326e4:	strdeq	r6, [r2], -r8
   326e8:	ldrdeq	r6, [r2], -r4
   326ec:	andeq	r5, r2, r4, lsr #5
   326f0:	andeq	r5, r2, r8, ror #17
   326f4:	andeq	r5, r2, r0, lsl #17
   326f8:	andeq	r5, r2, r8, lsr r4
   326fc:	andeq	r5, r2, r8, lsr r8
   32700:	andeq	r5, r2, ip, ror r8
   32704:	andeq	r5, r2, ip, lsl r8
   32708:	andeq	r5, r2, ip, lsr r8
   3270c:			; <UNDEFINED> instruction: 0x000273b8
   32710:	andeq	r5, r2, r8, lsr #14
   32714:	strdeq	r5, [r2], -r0
   32718:	andeq	lr, r0, r8, asr #7
   3271c:	muleq	r2, r4, r6
   32720:	andeq	lr, r0, ip, ror #6
   32724:	andeq	lr, r0, ip, ror #5
   32728:	andeq	lr, r0, ip, lsl #6
   3272c:	andeq	r5, r2, r4, lsl r6

00032730 <__flatcc_fb_clear_parser@@Base>:
   32730:	strd	r4, [sp, #-16]!
   32734:	mov	r5, r0
   32738:	ldr	r4, [r0, #392]	; 0x188
   3273c:	str	r6, [sp, #8]
   32740:	str	lr, [sp, #12]
   32744:	cmp	r4, #0
   32748:	bne	3275c <__flatcc_fb_clear_parser@@Base+0x2c>
   3274c:	b	32784 <__flatcc_fb_clear_parser@@Base+0x54>
   32750:	ldr	r4, [r4]
   32754:	cmp	r4, #0
   32758:	beq	32784 <__flatcc_fb_clear_parser@@Base+0x54>
   3275c:	ldrh	r3, [r4, #8]
   32760:	cmp	r3, #4
   32764:	bhi	32750 <__flatcc_fb_clear_parser@@Base+0x20>
   32768:	add	r0, r4, #56	; 0x38
   3276c:	bl	2b864 <fb_symbol_table_clear@@Base>
   32770:	add	r0, r4, #72	; 0x48
   32774:	bl	3e89c <fb_value_set_clear@@Base>
   32778:	ldr	r4, [r4]
   3277c:	cmp	r4, #0
   32780:	bne	3275c <__flatcc_fb_clear_parser@@Base+0x2c>
   32784:	add	r0, r5, #448	; 0x1c0
   32788:	bl	2d084 <fb_schema_table_clear@@Base>
   3278c:	add	r0, r5, #432	; 0x1b0
   32790:	bl	3e09c <fb_name_table_clear@@Base>
   32794:	add	r0, r5, #524	; 0x20c
   32798:	bl	2b0e8 <ptr_set_clear@@Base>
   3279c:	ldr	r0, [r5, #112]	; 0x70
   327a0:	cmp	r0, #0
   327a4:	beq	327ac <__flatcc_fb_clear_parser@@Base+0x7c>
   327a8:	bl	13ea4 <free@plt>
   327ac:	ldr	r0, [r5, #20]
   327b0:	cmp	r0, #0
   327b4:	beq	327bc <__flatcc_fb_clear_parser@@Base+0x8c>
   327b8:	bl	13ea4 <free@plt>
   327bc:	ldr	r0, [r5, #512]	; 0x200
   327c0:	cmp	r0, #0
   327c4:	beq	327cc <__flatcc_fb_clear_parser@@Base+0x9c>
   327c8:	bl	13ea4 <free@plt>
   327cc:	ldr	r0, [r5, #516]	; 0x204
   327d0:	cmp	r0, #0
   327d4:	beq	327dc <__flatcc_fb_clear_parser@@Base+0xac>
   327d8:	bl	13ea4 <free@plt>
   327dc:	ldr	r0, [r5, #520]	; 0x208
   327e0:	cmp	r0, #0
   327e4:	beq	327ec <__flatcc_fb_clear_parser@@Base+0xbc>
   327e8:	bl	13ea4 <free@plt>
   327ec:	ldr	r0, [r5, #548]	; 0x224
   327f0:	cmp	r0, #0
   327f4:	beq	327fc <__flatcc_fb_clear_parser@@Base+0xcc>
   327f8:	bl	13ea4 <free@plt>
   327fc:	ldr	r1, [pc, #88]	; 3285c <__flatcc_fb_clear_parser@@Base+0x12c>
   32800:	add	r0, r5, #416	; 0x1a0
   32804:	mov	r2, #0
   32808:	add	r1, pc, r1
   3280c:	bl	2c8f4 <fb_scope_table_destroy@@Base>
   32810:	ldr	r0, [r5, #48]	; 0x30
   32814:	cmp	r0, #0
   32818:	beq	3282c <__flatcc_fb_clear_parser@@Base+0xfc>
   3281c:	ldr	r4, [r0]
   32820:	bl	13ea4 <free@plt>
   32824:	subs	r0, r4, #0
   32828:	bne	3281c <__flatcc_fb_clear_parser@@Base+0xec>
   3282c:	ldr	r0, [r5, #16]
   32830:	cmp	r0, #0
   32834:	beq	3283c <__flatcc_fb_clear_parser@@Base+0x10c>
   32838:	bl	13ea4 <free@plt>
   3283c:	mov	r0, r5
   32840:	mov	r2, #560	; 0x230
   32844:	ldrd	r4, [sp]
   32848:	mov	r1, #0
   3284c:	ldr	r6, [sp, #8]
   32850:	ldr	lr, [sp, #12]
   32854:	add	sp, sp, #16
   32858:	b	13f70 <memset@plt>
   3285c:			; <UNDEFINED> instruction: 0xffffb154
   32860:	strd	r4, [sp, #-36]!	; 0xffffffdc
   32864:	strd	r6, [sp, #8]
   32868:	ldrh	r6, [r1, #8]
   3286c:	strd	r8, [sp, #16]
   32870:	strd	sl, [sp, #24]
   32874:	str	lr, [sp, #32]
   32878:	sub	sp, sp, #44	; 0x2c
   3287c:	cmp	r6, #1
   32880:	bne	32d70 <__flatcc_fb_clear_parser@@Base+0x640>
   32884:	ldrh	r3, [r1, #10]
   32888:	mov	r7, r0
   3288c:	mov	r5, r1
   32890:	ands	r0, r3, #1
   32894:	bne	32d90 <__flatcc_fb_clear_parser@@Base+0x660>
   32898:	tst	r3, #2
   3289c:	bne	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   328a0:	ldr	r2, [r1, #120]	; 0x78
   328a4:	cmp	r2, #0
   328a8:	bne	32db0 <__flatcc_fb_clear_parser@@Base+0x680>
   328ac:	ldr	r4, [r1, #20]
   328b0:	orr	r3, r3, #1
   328b4:	strh	r3, [r1, #10]
   328b8:	cmp	r4, #0
   328bc:	beq	32bec <__flatcc_fb_clear_parser@@Base+0x4bc>
   328c0:	ldr	r2, [r7, #116]	; 0x74
   328c4:	cmp	r2, #99	; 0x63
   328c8:	bgt	32b24 <__flatcc_fb_clear_parser@@Base+0x3f4>
   328cc:	ldr	sl, [pc, #1292]	; 32de0 <__flatcc_fb_clear_parser@@Base+0x6b0>
   328d0:	ldr	fp, [pc, #1292]	; 32de4 <__flatcc_fb_clear_parser@@Base+0x6b4>
   328d4:	add	sl, pc, sl
   328d8:	add	fp, pc, fp
   328dc:	ldrh	r3, [r4, #24]
   328e0:	cmp	r3, #8
   328e4:	beq	329b8 <__flatcc_fb_clear_parser@@Base+0x288>
   328e8:	cmp	r3, #14
   328ec:	beq	32944 <__flatcc_fb_clear_parser@@Base+0x214>
   328f0:	cmp	r3, #1
   328f4:	beq	3293c <__flatcc_fb_clear_parser@@Base+0x20c>
   328f8:	ldr	r2, [pc, #1256]	; 32de8 <__flatcc_fb_clear_parser@@Base+0x6b8>
   328fc:	mov	ip, #0
   32900:	mov	r0, r7
   32904:	mov	r3, ip
   32908:	ldr	r1, [r4, #4]
   3290c:	str	ip, [sp]
   32910:	str	ip, [sp, #4]
   32914:	add	r2, pc, r2
   32918:	bl	2ddbc <__flatcc_error_report@@Base>
   3291c:	mvn	r0, #0
   32920:	add	sp, sp, #44	; 0x2c
   32924:	ldrd	r4, [sp]
   32928:	ldrd	r6, [sp, #8]
   3292c:	ldrd	r8, [sp, #16]
   32930:	ldrd	sl, [sp, #24]
   32934:	add	sp, sp, #32
   32938:	pop	{pc}		; (ldr pc, [sp], #4)
   3293c:	mvn	r0, #0
   32940:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32944:	ldr	r8, [r4, #16]
   32948:	ldrh	r3, [r8, #8]
   3294c:	cmp	r3, #3
   32950:	beq	32b7c <__flatcc_fb_clear_parser@@Base+0x44c>
   32954:	cmp	r3, #1
   32958:	bne	32d44 <__flatcc_fb_clear_parser@@Base+0x614>
   3295c:	ldrh	r3, [r8, #10]
   32960:	tst	r3, #1
   32964:	bne	32d18 <__flatcc_fb_clear_parser@@Base+0x5e8>
   32968:	ands	ip, r3, #2
   3296c:	bne	329a4 <__flatcc_fb_clear_parser@@Base+0x274>
   32970:	ldr	r3, [r7, #188]	; 0xbc
   32974:	cmp	r3, #0
   32978:	bne	32bc8 <__flatcc_fb_clear_parser@@Base+0x498>
   3297c:	add	r2, r2, #1
   32980:	mov	r1, r8
   32984:	mov	r0, r7
   32988:	str	r2, [r7, #116]	; 0x74
   3298c:	bl	32860 <__flatcc_fb_clear_parser@@Base+0x130>
   32990:	ldr	r3, [r7, #116]	; 0x74
   32994:	cmp	r0, #0
   32998:	sub	r3, r3, #1
   3299c:	str	r3, [r7, #116]	; 0x74
   329a0:	bne	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   329a4:	ldrh	ip, [r8, #104]	; 0x68
   329a8:	ldrd	r2, [r8, #112]	; 0x70
   329ac:	strh	ip, [r4, #74]	; 0x4a
   329b0:	strd	r2, [r4, #88]	; 0x58
   329b4:	b	32a00 <__flatcc_fb_clear_parser@@Base+0x2d0>
   329b8:	ldr	r3, [r4, #16]
   329bc:	ldr	r2, [r3, #16]
   329c0:	add	r2, r2, #996	; 0x3e4
   329c4:	add	r2, r2, #3
   329c8:	cmp	r2, #27
   329cc:	bhi	32b98 <__flatcc_fb_clear_parser@@Base+0x468>
   329d0:	add	r2, sl, r2, lsl #2
   329d4:	mov	r1, #0
   329d8:	ldr	r2, [r2, #16]
   329dc:	add	r0, sl, r2, lsl #2
   329e0:	str	r2, [r4, #16]
   329e4:	ldr	r2, [r0, #128]	; 0x80
   329e8:	cmp	r2, r1
   329ec:	beq	32ba0 <__flatcc_fb_clear_parser@@Base+0x470>
   329f0:	uxth	ip, r2
   329f4:	strh	ip, [r4, #74]	; 0x4a
   329f8:	str	r2, [r4, #88]	; 0x58
   329fc:	str	r1, [r4, #92]	; 0x5c
   32a00:	uxth	r0, ip
   32a04:	mov	r1, #0
   32a08:	subs	r3, r0, #1
   32a0c:	str	r3, [sp, #8]
   32a10:	sbc	r3, r1, #0
   32a14:	str	r3, [sp, #12]
   32a18:	ldrd	r2, [sp, #8]
   32a1c:	cmp	r3, #0
   32a20:	cmpeq	r2, #255	; 0xff
   32a24:	bhi	32a5c <__flatcc_fb_clear_parser@@Base+0x32c>
   32a28:	cmp	r1, #0
   32a2c:	cmpeq	r0, #1
   32a30:	beq	32a80 <__flatcc_fb_clear_parser@@Base+0x350>
   32a34:	mov	r2, #2
   32a38:	mov	r3, #0
   32a3c:	cmp	r1, r3
   32a40:	cmpeq	r0, r2
   32a44:	beq	32a80 <__flatcc_fb_clear_parser@@Base+0x350>
   32a48:	adds	r2, r2, r2
   32a4c:	adc	r3, r3, r3
   32a50:	cmp	r1, r3
   32a54:	cmpeq	r0, r2
   32a58:	bcs	32a3c <__flatcc_fb_clear_parser@@Base+0x30c>
   32a5c:	ldr	r3, [pc, #904]	; 32dec <__flatcc_fb_clear_parser@@Base+0x6bc>
   32a60:	mov	r2, #108	; 0x6c
   32a64:	ldr	r1, [pc, #900]	; 32df0 <__flatcc_fb_clear_parser@@Base+0x6c0>
   32a68:	ldr	r0, [pc, #900]	; 32df4 <__flatcc_fb_clear_parser@@Base+0x6c4>
   32a6c:	add	r3, pc, r3
   32a70:	add	r3, r3, #176	; 0xb0
   32a74:	add	r1, pc, r1
   32a78:	add	r0, pc, r0
   32a7c:	bl	1400c <__assert_fail@plt>
   32a80:	ldrd	r2, [r5, #112]	; 0x70
   32a84:	subs	lr, r2, #1
   32a88:	sbc	r8, r3, #0
   32a8c:	adds	lr, lr, r0
   32a90:	adc	r8, r8, r1
   32a94:	rsbs	r0, r0, #0
   32a98:	rsc	r1, r1, #0
   32a9c:	and	lr, lr, r0
   32aa0:	and	r1, r8, r1
   32aa4:	str	lr, [sp, #16]
   32aa8:	str	r1, [sp, #20]
   32aac:	ldrd	r0, [sp, #16]
   32ab0:	cmp	r3, r1
   32ab4:	strd	r0, [r4, #80]	; 0x50
   32ab8:	cmpeq	r2, r0
   32abc:	bhi	32cbc <__flatcc_fb_clear_parser@@Base+0x58c>
   32ac0:	mov	r0, #0
   32ac4:	mov	r1, #0
   32ac8:	ldrd	r2, [r4, #88]	; 0x58
   32acc:	strd	r0, [sp, #24]
   32ad0:	ldrd	r0, [sp, #16]
   32ad4:	adds	r8, r2, r0
   32ad8:	adcs	r9, r3, r1
   32adc:	bcs	32dd0 <__flatcc_fb_clear_parser@@Base+0x6a0>
   32ae0:	ldrd	r2, [sp, #24]
   32ae4:	orrs	r3, r2, r3
   32ae8:	bne	32cbc <__flatcc_fb_clear_parser@@Base+0x58c>
   32aec:	mov	r3, #0
   32af0:	movw	r2, #65535	; 0xffff
   32af4:	cmp	r9, r3
   32af8:	cmpeq	r8, r2
   32afc:	bhi	32b50 <__flatcc_fb_clear_parser@@Base+0x420>
   32b00:	ldr	r4, [r4]
   32b04:	cmp	r6, ip
   32b08:	movcc	r6, ip
   32b0c:	strd	r8, [r5, #112]	; 0x70
   32b10:	cmp	r4, #0
   32b14:	beq	32bec <__flatcc_fb_clear_parser@@Base+0x4bc>
   32b18:	ldr	r2, [r7, #116]	; 0x74
   32b1c:	cmp	r2, #99	; 0x63
   32b20:	ble	328dc <__flatcc_fb_clear_parser@@Base+0x1ac>
   32b24:	ldr	r2, [pc, #716]	; 32df8 <__flatcc_fb_clear_parser@@Base+0x6c8>
   32b28:	mov	ip, #0
   32b2c:	mov	r0, r7
   32b30:	mov	r3, ip
   32b34:	mov	r1, ip
   32b38:	str	ip, [sp]
   32b3c:	str	ip, [sp, #4]
   32b40:	add	r2, pc, r2
   32b44:	bl	2ddbc <__flatcc_error_report@@Base>
   32b48:	mvn	r0, #0
   32b4c:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32b50:	mov	r2, #0
   32b54:	ldr	r1, [r4, #4]
   32b58:	mov	r0, r7
   32b5c:	mov	r3, r2
   32b60:	str	r2, [sp]
   32b64:	str	r2, [sp, #4]
   32b68:	ldr	r2, [pc, #652]	; 32dfc <__flatcc_fb_clear_parser@@Base+0x6cc>
   32b6c:	add	r2, pc, r2
   32b70:	bl	2ddbc <__flatcc_error_report@@Base>
   32b74:	ldrh	ip, [r4, #74]	; 0x4a
   32b78:	b	32b00 <__flatcc_fb_clear_parser@@Base+0x3d0>
   32b7c:	ldr	r3, [r8, #112]	; 0x70
   32b80:	ldr	r2, [r8, #116]	; 0x74
   32b84:	uxth	ip, r3
   32b88:	strh	ip, [r4, #74]	; 0x4a
   32b8c:	str	r3, [r4, #88]	; 0x58
   32b90:	str	r2, [r4, #92]	; 0x5c
   32b94:	b	32a00 <__flatcc_fb_clear_parser@@Base+0x2d0>
   32b98:	mov	r2, #0
   32b9c:	str	r2, [r4, #16]
   32ba0:	ldr	r2, [pc, #600]	; 32e00 <__flatcc_fb_clear_parser@@Base+0x6d0>
   32ba4:	mov	ip, #0
   32ba8:	mov	r0, r7
   32bac:	ldr	r1, [r4, #4]
   32bb0:	str	ip, [sp]
   32bb4:	str	ip, [sp, #4]
   32bb8:	add	r2, pc, r2
   32bbc:	bl	2ddbc <__flatcc_error_report@@Base>
   32bc0:	mvn	r0, #0
   32bc4:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32bc8:	mov	r2, fp
   32bcc:	mov	r0, r7
   32bd0:	ldr	r1, [r4, #4]
   32bd4:	ldr	r3, [r8, #4]
   32bd8:	str	ip, [sp]
   32bdc:	str	ip, [sp, #4]
   32be0:	bl	2ddbc <__flatcc_error_report@@Base>
   32be4:	ldr	r2, [r7, #116]	; 0x74
   32be8:	b	3297c <__flatcc_fb_clear_parser@@Base+0x24c>
   32bec:	ldrh	r2, [r5, #104]	; 0x68
   32bf0:	cmp	r2, #0
   32bf4:	moveq	r2, r6
   32bf8:	strheq	r6, [r5, #104]	; 0x68
   32bfc:	beq	32c08 <__flatcc_fb_clear_parser@@Base+0x4d8>
   32c00:	cmp	r2, r6
   32c04:	bcc	32ce8 <__flatcc_fb_clear_parser@@Base+0x5b8>
   32c08:	uxth	r2, r2
   32c0c:	mov	r3, #0
   32c10:	subs	r1, r2, #1
   32c14:	str	r1, [sp, #32]
   32c18:	sbc	r1, r3, #0
   32c1c:	str	r1, [sp, #36]	; 0x24
   32c20:	ldrd	r0, [sp, #32]
   32c24:	cmp	r1, #0
   32c28:	cmpeq	r0, #255	; 0xff
   32c2c:	bhi	32a5c <__flatcc_fb_clear_parser@@Base+0x32c>
   32c30:	cmp	r3, #0
   32c34:	cmpeq	r2, #1
   32c38:	beq	32c68 <__flatcc_fb_clear_parser@@Base+0x538>
   32c3c:	mov	r0, #2
   32c40:	mov	r1, #0
   32c44:	cmp	r3, r1
   32c48:	cmpeq	r2, r0
   32c4c:	beq	32c68 <__flatcc_fb_clear_parser@@Base+0x538>
   32c50:	adds	r0, r0, r0
   32c54:	adc	r1, r1, r1
   32c58:	cmp	r3, r1
   32c5c:	cmpeq	r2, r0
   32c60:	bcs	32c44 <__flatcc_fb_clear_parser@@Base+0x514>
   32c64:	b	32a5c <__flatcc_fb_clear_parser@@Base+0x32c>
   32c68:	ldr	r1, [r5, #112]	; 0x70
   32c6c:	mov	r0, #0
   32c70:	ldr	ip, [r5, #116]	; 0x74
   32c74:	ldrh	r4, [r5, #10]
   32c78:	subs	r1, r1, #1
   32c7c:	ldr	lr, [r7, #396]	; 0x18c
   32c80:	sbc	ip, ip, #0
   32c84:	adds	r1, r1, r2
   32c88:	adc	ip, ip, r3
   32c8c:	rsbs	r2, r2, #0
   32c90:	rsc	r3, r3, #0
   32c94:	bic	r4, r4, #1
   32c98:	and	ip, ip, r3
   32c9c:	and	r3, r1, r2
   32ca0:	orr	r2, r4, #2
   32ca4:	strh	r2, [r5, #10]
   32ca8:	str	r3, [r5, #112]	; 0x70
   32cac:	str	ip, [r5, #116]	; 0x74
   32cb0:	str	lr, [r5, #120]	; 0x78
   32cb4:	str	r5, [r7, #396]	; 0x18c
   32cb8:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32cbc:	ldr	r2, [pc, #320]	; 32e04 <__flatcc_fb_clear_parser@@Base+0x6d4>
   32cc0:	mov	ip, #0
   32cc4:	mov	r0, r7
   32cc8:	mov	r3, ip
   32ccc:	ldr	r1, [r4, #4]
   32cd0:	str	ip, [sp]
   32cd4:	str	ip, [sp, #4]
   32cd8:	add	r2, pc, r2
   32cdc:	bl	2ddbc <__flatcc_error_report@@Base>
   32ce0:	mvn	r0, #0
   32ce4:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32ce8:	ldr	r2, [pc, #280]	; 32e08 <__flatcc_fb_clear_parser@@Base+0x6d8>
   32cec:	mov	r1, #0
   32cf0:	mov	r0, r7
   32cf4:	mov	r3, r1
   32cf8:	str	r1, [sp]
   32cfc:	str	r1, [sp, #4]
   32d00:	ldr	r1, [r5, #4]
   32d04:	add	r2, pc, r2
   32d08:	bl	2ddbc <__flatcc_error_report@@Base>
   32d0c:	mov	r2, r6
   32d10:	strh	r6, [r5, #104]	; 0x68
   32d14:	b	32c08 <__flatcc_fb_clear_parser@@Base+0x4d8>
   32d18:	ldr	r2, [pc, #236]	; 32e0c <__flatcc_fb_clear_parser@@Base+0x6dc>
   32d1c:	mov	ip, #0
   32d20:	mov	r0, r7
   32d24:	ldr	r1, [r4, #4]
   32d28:	ldr	r3, [r8, #4]
   32d2c:	add	r2, pc, r2
   32d30:	str	ip, [sp]
   32d34:	str	ip, [sp, #4]
   32d38:	bl	2ddbc <__flatcc_error_report@@Base>
   32d3c:	mvn	r0, #0
   32d40:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32d44:	ldr	r2, [pc, #196]	; 32e10 <__flatcc_fb_clear_parser@@Base+0x6e0>
   32d48:	mov	ip, #0
   32d4c:	mov	r0, r7
   32d50:	mov	r3, ip
   32d54:	ldr	r1, [r4, #4]
   32d58:	str	ip, [sp]
   32d5c:	str	ip, [sp, #4]
   32d60:	add	r2, pc, r2
   32d64:	bl	2ddbc <__flatcc_error_report@@Base>
   32d68:	mvn	r0, #0
   32d6c:	b	32920 <__flatcc_fb_clear_parser@@Base+0x1f0>
   32d70:	ldr	r3, [pc, #156]	; 32e14 <__flatcc_fb_clear_parser@@Base+0x6e4>
   32d74:	movw	r2, #502	; 0x1f6
   32d78:	ldr	r1, [pc, #152]	; 32e18 <__flatcc_fb_clear_parser@@Base+0x6e8>
   32d7c:	ldr	r0, [pc, #152]	; 32e1c <__flatcc_fb_clear_parser@@Base+0x6ec>
   32d80:	add	r3, pc, r3
   32d84:	add	r1, pc, r1
   32d88:	add	r0, pc, r0
   32d8c:	bl	1400c <__assert_fail@plt>
   32d90:	ldr	r3, [pc, #136]	; 32e20 <__flatcc_fb_clear_parser@@Base+0x6f0>
   32d94:	mov	r2, #504	; 0x1f8
   32d98:	ldr	r1, [pc, #132]	; 32e24 <__flatcc_fb_clear_parser@@Base+0x6f4>
   32d9c:	ldr	r0, [pc, #132]	; 32e28 <__flatcc_fb_clear_parser@@Base+0x6f8>
   32da0:	add	r3, pc, r3
   32da4:	add	r1, pc, r1
   32da8:	add	r0, pc, r0
   32dac:	bl	1400c <__assert_fail@plt>
   32db0:	ldr	r3, [pc, #116]	; 32e2c <__flatcc_fb_clear_parser@@Base+0x6fc>
   32db4:	mov	r2, #508	; 0x1fc
   32db8:	ldr	r1, [pc, #112]	; 32e30 <__flatcc_fb_clear_parser@@Base+0x700>
   32dbc:	ldr	r0, [pc, #112]	; 32e34 <__flatcc_fb_clear_parser@@Base+0x704>
   32dc0:	add	r3, pc, r3
   32dc4:	add	r1, pc, r1
   32dc8:	add	r0, pc, r0
   32dcc:	bl	1400c <__assert_fail@plt>
   32dd0:	mov	r2, #1
   32dd4:	mov	r3, #0
   32dd8:	strd	r2, [sp, #24]
   32ddc:	b	32ae0 <__flatcc_fb_clear_parser@@Base+0x3b0>
   32de0:	andeq	r5, r2, r4, lsl r9
   32de4:	andeq	r5, r2, r4, lsl #23
   32de8:	andeq	r5, r2, r8, lsl fp
   32dec:	andeq	r5, r2, ip, ror r7
   32df0:	ldrdeq	r5, [r2], -r8
   32df4:	andeq	r5, r2, r0, asr sl
   32df8:	andeq	r5, r2, r0, lsr #17
   32dfc:	andeq	r5, r2, ip, lsl #19
   32e00:	andeq	r5, r2, r4, ror r8
   32e04:	andeq	r5, r2, r8, lsl #16
   32e08:	andeq	r5, r2, r8, lsr #16
   32e0c:	andeq	r5, r2, r0, lsl r7
   32e10:	andeq	r5, r2, r4, asr #14
   32e14:	andeq	r5, r2, r8, ror #8
   32e18:	andeq	r5, r2, r8, asr #11
   32e1c:	andeq	lr, r0, r8, asr r9
   32e20:	andeq	r5, r2, r8, asr #8
   32e24:	andeq	r5, r2, r8, lsr #11
   32e28:	andeq	r5, r2, r4, lsl #12
   32e2c:	andeq	r5, r2, r8, lsr #8
   32e30:	andeq	r5, r2, r8, lsl #11
   32e34:	andeq	r5, r2, ip, lsl #12
   32e38:	ldrh	r3, [r1, #8]
   32e3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   32e40:	strd	r6, [sp, #8]
   32e44:	mov	r6, r0
   32e48:	strd	r8, [sp, #16]
   32e4c:	mov	r9, r1
   32e50:	strd	sl, [sp, #24]
   32e54:	str	lr, [sp, #32]
   32e58:	sub	sp, sp, #132	; 0x84
   32e5c:	cmp	r3, #4
   32e60:	str	r3, [sp, #8]
   32e64:	beq	33778 <__flatcc_fb_clear_parser@@Base+0x1048>
   32e68:	cmp	r3, #3
   32e6c:	bne	33b70 <__flatcc_fb_clear_parser@@Base+0x1440>
   32e70:	ldrh	r2, [r1, #48]	; 0x30
   32e74:	cmp	r2, #0
   32e78:	beq	33b20 <__flatcc_fb_clear_parser@@Base+0x13f0>
   32e7c:	cmp	r2, #8
   32e80:	bne	33aec <__flatcc_fb_clear_parser@@Base+0x13bc>
   32e84:	ldr	r3, [r1, #40]	; 0x28
   32e88:	ldr	r3, [r3, #16]
   32e8c:	add	r3, r3, #996	; 0x3e4
   32e90:	add	r3, r3, #3
   32e94:	cmp	r3, #27
   32e98:	bhi	32fe8 <__flatcc_fb_clear_parser@@Base+0x8b8>
   32e9c:	ldr	r2, [pc, #3312]	; 33b94 <__flatcc_fb_clear_parser@@Base+0x1464>
   32ea0:	mov	r0, #0
   32ea4:	add	r2, pc, r2
   32ea8:	add	r3, r2, r3, lsl #2
   32eac:	ldr	r1, [r3, #16]
   32eb0:	add	r2, r2, r1, lsl #2
   32eb4:	ldr	r2, [r2, #128]	; 0x80
   32eb8:	uxth	r3, r2
   32ebc:	str	r1, [r9, #40]	; 0x28
   32ec0:	strh	r3, [r9, #104]	; 0x68
   32ec4:	str	r2, [r9, #112]	; 0x70
   32ec8:	str	r0, [r9, #116]	; 0x74
   32ecc:	ldr	r4, [r9, #28]
   32ed0:	mov	r2, #0
   32ed4:	mov	r3, #0
   32ed8:	add	r8, sp, #80	; 0x50
   32edc:	strd	r2, [sp, #80]	; 0x50
   32ee0:	strd	r2, [r8, #8]
   32ee4:	strd	r2, [r8, #16]
   32ee8:	cmp	r4, #0
   32eec:	strd	r2, [r8, #24]
   32ef0:	strd	r2, [r8, #32]
   32ef4:	strheq	r4, [r9, #92]	; 0x5c
   32ef8:	streq	r4, [sp, #20]
   32efc:	strd	r2, [r8, #40]	; 0x28
   32f00:	beq	330c4 <__flatcc_fb_clear_parser@@Base+0x994>
   32f04:	ldr	r3, [pc, #3212]	; 33b98 <__flatcc_fb_clear_parser@@Base+0x1468>
   32f08:	mov	r7, #100	; 0x64
   32f0c:	mov	r5, #0
   32f10:	ldr	fp, [pc, #3204]	; 33b9c <__flatcc_fb_clear_parser@@Base+0x146c>
   32f14:	ldr	sl, [pc, #3204]	; 33ba0 <__flatcc_fb_clear_parser@@Base+0x1470>
   32f18:	add	r3, pc, r3
   32f1c:	add	fp, pc, fp
   32f20:	str	r3, [sp, #12]
   32f24:	add	sl, pc, sl
   32f28:	b	32f6c <__flatcc_fb_clear_parser@@Base+0x83c>
   32f2c:	add	r1, fp, r1
   32f30:	str	r4, [r8, r2, lsl #2]
   32f34:	ldr	r2, [r1, #204]	; 0xcc
   32f38:	cmp	r2, #0
   32f3c:	bne	32ffc <__flatcc_fb_clear_parser@@Base+0x8cc>
   32f40:	ldrh	r3, [r4, #16]
   32f44:	cmp	r3, #0
   32f48:	bne	337ac <__flatcc_fb_clear_parser@@Base+0x107c>
   32f4c:	ldr	r4, [r4]
   32f50:	subs	r7, r7, #1
   32f54:	movne	r2, #1
   32f58:	moveq	r2, #0
   32f5c:	cmp	r4, #0
   32f60:	moveq	r2, #0
   32f64:	cmp	r2, #0
   32f68:	beq	33074 <__flatcc_fb_clear_parser@@Base+0x944>
   32f6c:	ldr	r3, [r4, #4]
   32f70:	ldr	r0, [r6, #412]	; 0x19c
   32f74:	ldm	r3, {r1, r2}
   32f78:	add	r0, r0, #16
   32f7c:	bl	3e1d0 <fb_name_table_find@@Base>
   32f80:	subs	r2, r0, #0
   32f84:	beq	334b4 <__flatcc_fb_clear_parser@@Base+0xd84>
   32f88:	ldr	r2, [r2, #24]
   32f8c:	cmp	r2, #0
   32f90:	beq	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   32f94:	mov	r3, #32
   32f98:	asr	r3, r3, r2
   32f9c:	ands	ip, r3, #1
   32fa0:	beq	33490 <__flatcc_fb_clear_parser@@Base+0xd60>
   32fa4:	ldr	ip, [r8, r2, lsl #2]
   32fa8:	mov	r3, #1
   32fac:	lsl	r1, r2, #2
   32fb0:	orr	r5, r5, r3, lsl r2
   32fb4:	uxth	r5, r5
   32fb8:	cmp	ip, #0
   32fbc:	beq	32f2c <__flatcc_fb_clear_parser@@Base+0x7fc>
   32fc0:	mov	r2, #0
   32fc4:	ldr	r1, [r4, #4]
   32fc8:	mov	r0, r6
   32fcc:	mov	r3, r2
   32fd0:	str	r2, [sp]
   32fd4:	str	r2, [sp, #4]
   32fd8:	ldr	r2, [pc, #3012]	; 33ba4 <__flatcc_fb_clear_parser@@Base+0x1474>
   32fdc:	add	r2, pc, r2
   32fe0:	bl	2ddbc <__flatcc_error_report@@Base>
   32fe4:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   32fe8:	mov	r3, #0
   32fec:	mov	r2, r3
   32ff0:	mov	r0, r3
   32ff4:	mov	r1, r3
   32ff8:	b	32ebc <__flatcc_fb_clear_parser@@Base+0x78c>
   32ffc:	cmp	r2, #2
   33000:	bne	33034 <__flatcc_fb_clear_parser@@Base+0x904>
   33004:	ldrh	r3, [r4, #16]
   33008:	cmp	r3, #2
   3300c:	beq	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   33010:	ldr	r2, [pc, #2960]	; 33ba8 <__flatcc_fb_clear_parser@@Base+0x1478>
   33014:	mov	r3, ip
   33018:	mov	r0, r6
   3301c:	ldr	r1, [r4, #4]
   33020:	str	ip, [sp]
   33024:	str	ip, [sp, #4]
   33028:	add	r2, pc, r2
   3302c:	bl	2ddbc <__flatcc_error_report@@Base>
   33030:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   33034:	cmp	r2, #5
   33038:	beq	33584 <__flatcc_fb_clear_parser@@Base+0xe54>
   3303c:	cmp	r2, #4
   33040:	bne	335b4 <__flatcc_fb_clear_parser@@Base+0xe84>
   33044:	ldrh	r3, [r4, #16]
   33048:	sub	r3, r3, #4
   3304c:	cmp	r3, #1
   33050:	bls	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   33054:	mov	r3, ip
   33058:	mov	r0, r6
   3305c:	ldr	r1, [r4, #4]
   33060:	str	ip, [sp]
   33064:	str	ip, [sp, #4]
   33068:	ldr	r2, [sp, #12]
   3306c:	bl	2ddbc <__flatcc_error_report@@Base>
   33070:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   33074:	cmp	r4, #0
   33078:	and	r7, r5, #32
   3307c:	beq	330a0 <__flatcc_fb_clear_parser@@Base+0x970>
   33080:	mov	r3, r2
   33084:	ldr	r1, [r4, #4]
   33088:	mov	r0, r6
   3308c:	str	r2, [sp]
   33090:	str	r2, [sp, #4]
   33094:	ldr	r2, [pc, #2832]	; 33bac <__flatcc_fb_clear_parser@@Base+0x147c>
   33098:	add	r2, pc, r2
   3309c:	bl	2ddbc <__flatcc_error_report@@Base>
   330a0:	cmp	r7, #0
   330a4:	strh	r5, [r9, #92]	; 0x5c
   330a8:	streq	r7, [sp, #20]
   330ac:	beq	330c4 <__flatcc_fb_clear_parser@@Base+0x994>
   330b0:	mov	r2, #0
   330b4:	mov	r3, #0
   330b8:	mov	r1, #1
   330bc:	str	r1, [sp, #20]
   330c0:	strd	r2, [sp, #48]	; 0x30
   330c4:	ldr	r2, [r9, #40]	; 0x28
   330c8:	cmp	r2, #5
   330cc:	bne	33618 <__flatcc_fb_clear_parser@@Base+0xee8>
   330d0:	mov	r2, #0
   330d4:	mov	r3, #6
   330d8:	add	r7, sp, #48	; 0x30
   330dc:	strb	r2, [sp, #48]	; 0x30
   330e0:	strh	r3, [sp, #56]	; 0x38
   330e4:	add	r3, sp, #64	; 0x40
   330e8:	ldr	r5, [r9, #20]
   330ec:	mov	ip, r3
   330f0:	ldrd	r0, [r7, #8]
   330f4:	str	ip, [sp, #24]
   330f8:	ldrd	r2, [sp, #48]	; 0x30
   330fc:	cmp	r5, #0
   33100:	strd	r0, [ip, #8]
   33104:	strd	r2, [sp, #64]	; 0x40
   33108:	beq	33348 <__flatcc_fb_clear_parser@@Base+0xc18>
   3310c:	ldr	r3, [pc, #2716]	; 33bb0 <__flatcc_fb_clear_parser@@Base+0x1480>
   33110:	add	fp, r9, #56	; 0x38
   33114:	mov	r4, #1
   33118:	str	r9, [sp, #16]
   3311c:	add	r3, pc, r3
   33120:	str	r3, [sp, #32]
   33124:	ldr	r3, [pc, #2696]	; 33bb4 <__flatcc_fb_clear_parser@@Base+0x1484>
   33128:	add	r3, pc, r3
   3312c:	str	r3, [sp, #28]
   33130:	ldr	r3, [pc, #2688]	; 33bb8 <__flatcc_fb_clear_parser@@Base+0x1488>
   33134:	add	r3, pc, r3
   33138:	str	r3, [sp, #44]	; 0x2c
   3313c:	b	33188 <__flatcc_fb_clear_parser@@Base+0xa58>
   33140:	ldr	r3, [r0, #4]
   33144:	add	r2, r6, #68	; 0x44
   33148:	mov	ip, #0
   3314c:	ldr	r1, [r5, #4]
   33150:	cmp	r3, r2
   33154:	beq	33368 <__flatcc_fb_clear_parser@@Base+0xc38>
   33158:	ldr	r2, [pc, #2652]	; 33bbc <__flatcc_fb_clear_parser@@Base+0x148c>
   3315c:	add	r2, pc, r2
   33160:	mov	r0, r6
   33164:	str	ip, [sp]
   33168:	str	ip, [sp, #4]
   3316c:	bl	2ddbc <__flatcc_error_report@@Base>
   33170:	mov	r3, #1
   33174:	strh	r3, [r5, #24]
   33178:	ldr	r5, [r5]
   3317c:	mov	r4, #0
   33180:	cmp	r5, r4
   33184:	beq	33348 <__flatcc_fb_clear_parser@@Base+0xc18>
   33188:	mov	r2, #1
   3318c:	mov	r1, r5
   33190:	mov	r0, fp
   33194:	bl	2b970 <fb_symbol_table_insert_item@@Base>
   33198:	cmp	r0, #0
   3319c:	bne	33140 <__flatcc_fb_clear_parser@@Base+0xa10>
   331a0:	ldrh	r3, [r5, #8]
   331a4:	cmp	r3, #5
   331a8:	bne	3394c <__flatcc_fb_clear_parser@@Base+0x121c>
   331ac:	ldr	ip, [r5, #64]	; 0x40
   331b0:	cmp	ip, #0
   331b4:	bne	33b4c <__flatcc_fb_clear_parser@@Base+0x141c>
   331b8:	ldr	r3, [sp, #8]
   331bc:	cmp	r3, #4
   331c0:	beq	33398 <__flatcc_fb_clear_parser@@Base+0xc68>
   331c4:	ldrh	r3, [r5, #56]	; 0x38
   331c8:	eor	r2, r4, #1
   331cc:	str	r2, [sp, #12]
   331d0:	cmp	r3, #0
   331d4:	movne	r2, #0
   331d8:	cmp	r2, #0
   331dc:	bne	333fc <__flatcc_fb_clear_parser@@Base+0xccc>
   331e0:	ldr	r2, [sp, #20]
   331e4:	cmp	r2, #0
   331e8:	beq	33378 <__flatcc_fb_clear_parser@@Base+0xc48>
   331ec:	cmp	r3, #0
   331f0:	beq	3344c <__flatcc_fb_clear_parser@@Base+0xd1c>
   331f4:	cmp	r3, #5
   331f8:	bne	33ab4 <__flatcc_fb_clear_parser@@Base+0x1384>
   331fc:	ldr	r1, [sp, #16]
   33200:	ldrd	r2, [r5, #48]	; 0x30
   33204:	ldr	lr, [r1, #40]	; 0x28
   33208:	ldrd	r0, [r5, #56]	; 0x38
   3320c:	strd	r2, [r7]
   33210:	strd	r0, [r7, #8]
   33214:	ldr	r3, [sp, #28]
   33218:	ldrd	r8, [sp, #48]	; 0x30
   3321c:	add	r3, r3, lr, lsl #2
   33220:	ldr	r2, [r3, #128]	; 0x80
   33224:	mov	r3, #0
   33228:	cmp	r9, r3
   3322c:	lsl	r2, r2, #3
   33230:	cmpeq	r8, r2
   33234:	bcs	33a5c <__flatcc_fb_clear_parser@@Base+0x132c>
   33238:	mov	r3, #1
   3323c:	sub	ip, r8, #32
   33240:	lsl	ip, r3, ip
   33244:	rsb	r1, r8, #32
   33248:	mov	r2, lr
   3324c:	lsl	lr, r3, r8
   33250:	mov	r0, #5
   33254:	add	r4, r5, #48	; 0x30
   33258:	orr	ip, ip, r3, lsr r1
   3325c:	mov	r3, r4
   33260:	mov	r1, r5
   33264:	mov	sl, #0
   33268:	str	lr, [r5, #48]	; 0x30
   3326c:	str	ip, [r5, #52]	; 0x34
   33270:	strh	r0, [r5, #56]	; 0x38
   33274:	mov	r0, r6
   33278:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   3327c:	cmp	r0, sl
   33280:	bne	33a34 <__flatcc_fb_clear_parser@@Base+0x1304>
   33284:	ldr	r3, [sp, #12]
   33288:	cmp	r3, #0
   3328c:	beq	332c4 <__flatcc_fb_clear_parser@@Base+0xb94>
   33290:	ldr	r3, [r6, #180]	; 0xb4
   33294:	cmp	r3, #0
   33298:	beq	332c4 <__flatcc_fb_clear_parser@@Base+0xb94>
   3329c:	ldrh	r3, [sp, #56]	; 0x38
   332a0:	cmp	r3, #5
   332a4:	beq	334d8 <__flatcc_fb_clear_parser@@Base+0xda8>
   332a8:	cmp	r3, #4
   332ac:	bne	33538 <__flatcc_fb_clear_parser@@Base+0xe08>
   332b0:	ldrd	r2, [sp, #48]	; 0x30
   332b4:	ldrd	r0, [sp, #64]	; 0x40
   332b8:	cmp	r0, r2
   332bc:	sbcs	r3, r1, r3
   332c0:	bge	334ec <__flatcc_fb_clear_parser@@Base+0xdbc>
   332c4:	ldr	r3, [sp, #16]
   332c8:	mov	r1, r4
   332cc:	mov	r2, #1
   332d0:	ldrd	r8, [r7]
   332d4:	add	r0, r3, #72	; 0x48
   332d8:	ldr	r3, [sp, #24]
   332dc:	strd	r8, [r3]
   332e0:	ldrd	r8, [r7, #8]
   332e4:	strd	r8, [r3, #8]
   332e8:	bl	3e9b0 <fb_value_set_insert_item@@Base>
   332ec:	cmp	r0, #0
   332f0:	beq	3330c <__flatcc_fb_clear_parser@@Base+0xbdc>
   332f4:	ldr	r3, [sp, #8]
   332f8:	cmp	r3, #4
   332fc:	beq	33a00 <__flatcc_fb_clear_parser@@Base+0x12d0>
   33300:	ldrh	r3, [r5, #10]
   33304:	orr	r3, r3, #4
   33308:	strh	r3, [r5, #10]
   3330c:	ldr	r3, [r5, #64]	; 0x40
   33310:	cmp	r3, #0
   33314:	beq	33178 <__flatcc_fb_clear_parser@@Base+0xa48>
   33318:	mov	ip, #0
   3331c:	mov	r0, r6
   33320:	ldr	r1, [r5, #4]
   33324:	mov	r3, ip
   33328:	mov	r4, #0
   3332c:	str	ip, [sp]
   33330:	str	ip, [sp, #4]
   33334:	ldr	r2, [sp, #32]
   33338:	bl	2ddbc <__flatcc_error_report@@Base>
   3333c:	ldr	r5, [r5]
   33340:	cmp	r5, r4
   33344:	bne	33188 <__flatcc_fb_clear_parser@@Base+0xa58>
   33348:	mov	r0, #0
   3334c:	add	sp, sp, #132	; 0x84
   33350:	ldrd	r4, [sp]
   33354:	ldrd	r6, [sp, #8]
   33358:	ldrd	r8, [sp, #16]
   3335c:	ldrd	sl, [sp, #24]
   33360:	add	sp, sp, #32
   33364:	pop	{pc}		; (ldr pc, [sp], #4)
   33368:	ldr	r2, [pc, #2128]	; 33bc0 <__flatcc_fb_clear_parser@@Base+0x1490>
   3336c:	mov	r3, ip
   33370:	add	r2, pc, r2
   33374:	b	33160 <__flatcc_fb_clear_parser@@Base+0xa30>
   33378:	cmp	r3, #0
   3337c:	add	r4, r5, #48	; 0x30
   33380:	bne	33458 <__flatcc_fb_clear_parser@@Base+0xd28>
   33384:	ldrd	r2, [r7]
   33388:	ldrd	r0, [r7, #8]
   3338c:	strd	r2, [r4]
   33390:	strd	r0, [r4, #8]
   33394:	b	33284 <__flatcc_fb_clear_parser@@Base+0xb54>
   33398:	ldr	r1, [r5, #4]
   3339c:	add	r3, r6, #68	; 0x44
   333a0:	cmp	r1, r3
   333a4:	strheq	ip, [r5, #24]
   333a8:	beq	331c4 <__flatcc_fb_clear_parser@@Base+0xa94>
   333ac:	ldrh	r3, [r5, #24]
   333b0:	cmp	r3, #10
   333b4:	moveq	r2, #0
   333b8:	moveq	r3, #0
   333bc:	strdeq	r2, [r5, #88]	; 0x58
   333c0:	beq	331c4 <__flatcc_fb_clear_parser@@Base+0xa94>
   333c4:	cmp	r3, #12
   333c8:	beq	33674 <__flatcc_fb_clear_parser@@Base+0xf44>
   333cc:	cmp	r3, #1
   333d0:	beq	33178 <__flatcc_fb_clear_parser@@Base+0xa48>
   333d4:	ldr	r2, [pc, #2024]	; 33bc4 <__flatcc_fb_clear_parser@@Base+0x1494>
   333d8:	mov	r3, ip
   333dc:	mov	r0, r6
   333e0:	str	ip, [sp]
   333e4:	str	ip, [sp, #4]
   333e8:	add	r2, pc, r2
   333ec:	bl	2ddbc <__flatcc_error_report@@Base>
   333f0:	mov	r3, #1
   333f4:	strh	r3, [r5, #24]
   333f8:	b	33178 <__flatcc_fb_clear_parser@@Base+0xa48>
   333fc:	ldrh	r3, [sp, #56]	; 0x38
   33400:	cmp	r3, #5
   33404:	beq	335ec <__flatcc_fb_clear_parser@@Base+0xebc>
   33408:	cmp	r3, #4
   3340c:	beq	33748 <__flatcc_fb_clear_parser@@Base+0x1018>
   33410:	cmp	r3, #6
   33414:	beq	3342c <__flatcc_fb_clear_parser@@Base+0xcfc>
   33418:	ldr	r3, [sp, #20]
   3341c:	cmp	r3, #0
   33420:	bne	3344c <__flatcc_fb_clear_parser@@Base+0xd1c>
   33424:	add	r4, r5, #48	; 0x30
   33428:	b	33384 <__flatcc_fb_clear_parser@@Base+0xc54>
   3342c:	ldrb	r4, [sp, #48]	; 0x30
   33430:	cmp	r4, #1
   33434:	beq	33a88 <__flatcc_fb_clear_parser@@Base+0x1358>
   33438:	ldr	r2, [sp, #20]
   3343c:	mov	r3, #1
   33440:	strb	r3, [sp, #48]	; 0x30
   33444:	cmp	r2, #0
   33448:	beq	33424 <__flatcc_fb_clear_parser@@Base+0xcf4>
   3344c:	ldr	r3, [sp, #16]
   33450:	ldr	lr, [r3, #40]	; 0x28
   33454:	b	33214 <__flatcc_fb_clear_parser@@Base+0xae4>
   33458:	ldrd	r8, [r5, #48]	; 0x30
   3345c:	mov	r3, r7
   33460:	mov	r1, r5
   33464:	mov	r0, r6
   33468:	ldr	r2, [sp, #16]
   3346c:	strd	r8, [r7]
   33470:	ldrd	r8, [r4, #8]
   33474:	ldr	r2, [r2, #40]	; 0x28
   33478:	strd	r8, [r7, #8]
   3347c:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   33480:	cmp	r0, #0
   33484:	beq	33384 <__flatcc_fb_clear_parser@@Base+0xc54>
   33488:	mvn	r0, #0
   3348c:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33490:	ldr	r2, [pc, #1840]	; 33bc8 <__flatcc_fb_clear_parser@@Base+0x1498>
   33494:	mov	r3, ip
   33498:	mov	r0, r6
   3349c:	ldr	r1, [r4, #4]
   334a0:	str	ip, [sp]
   334a4:	str	ip, [sp, #4]
   334a8:	add	r2, pc, r2
   334ac:	bl	2ddbc <__flatcc_error_report@@Base>
   334b0:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   334b4:	mov	r3, r2
   334b8:	ldr	r1, [r4, #4]
   334bc:	mov	r0, r6
   334c0:	str	r2, [sp]
   334c4:	str	r2, [sp, #4]
   334c8:	ldr	r2, [pc, #1788]	; 33bcc <__flatcc_fb_clear_parser@@Base+0x149c>
   334cc:	add	r2, pc, r2
   334d0:	bl	2ddbc <__flatcc_error_report@@Base>
   334d4:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   334d8:	ldrd	r0, [sp, #48]	; 0x30
   334dc:	ldrd	r2, [sp, #64]	; 0x40
   334e0:	cmp	r1, r3
   334e4:	cmpeq	r0, r2
   334e8:	bhi	332c4 <__flatcc_fb_clear_parser@@Base+0xb94>
   334ec:	ldr	r3, [sp, #8]
   334f0:	mov	ip, #0
   334f4:	ldr	r1, [r5, #4]
   334f8:	cmp	r3, #4
   334fc:	bne	3350c <__flatcc_fb_clear_parser@@Base+0xddc>
   33500:	ldrd	r2, [sp, #64]	; 0x40
   33504:	orrs	r3, r2, r3
   33508:	beq	33ae0 <__flatcc_fb_clear_parser@@Base+0x13b0>
   3350c:	ldr	r2, [pc, #1724]	; 33bd0 <__flatcc_fb_clear_parser@@Base+0x14a0>
   33510:	add	r2, pc, r2
   33514:	mov	r0, r6
   33518:	mov	r3, ip
   3351c:	str	ip, [sp]
   33520:	str	ip, [sp, #4]
   33524:	bl	2ddbc <__flatcc_error_report@@Base>
   33528:	mov	r3, #1
   3352c:	mvn	r0, #0
   33530:	strh	r3, [r5, #56]	; 0x38
   33534:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33538:	cmp	r3, #6
   3353c:	bne	332c4 <__flatcc_fb_clear_parser@@Base+0xb94>
   33540:	ldrb	r2, [sp, #48]	; 0x30
   33544:	ldrb	r3, [sp, #64]	; 0x40
   33548:	cmp	r2, r3
   3354c:	bhi	332c4 <__flatcc_fb_clear_parser@@Base+0xb94>
   33550:	mov	r2, #0
   33554:	ldr	r1, [r5, #4]
   33558:	mov	r0, r6
   3355c:	mov	r3, r2
   33560:	str	r2, [sp]
   33564:	str	r2, [sp, #4]
   33568:	ldr	r2, [pc, #1636]	; 33bd4 <__flatcc_fb_clear_parser@@Base+0x14a4>
   3356c:	add	r2, pc, r2
   33570:	bl	2ddbc <__flatcc_error_report@@Base>
   33574:	mov	r3, #1
   33578:	mvn	r0, #0
   3357c:	strh	r3, [r5, #56]	; 0x38
   33580:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33584:	ldrh	r3, [r4, #16]
   33588:	cmp	r3, #5
   3358c:	beq	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   33590:	ldr	r2, [pc, #1600]	; 33bd8 <__flatcc_fb_clear_parser@@Base+0x14a8>
   33594:	mov	r3, ip
   33598:	mov	r0, r6
   3359c:	ldr	r1, [r4, #4]
   335a0:	str	ip, [sp]
   335a4:	str	ip, [sp, #4]
   335a8:	add	r2, pc, r2
   335ac:	bl	2ddbc <__flatcc_error_report@@Base>
   335b0:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   335b4:	cmp	r2, #6
   335b8:	bne	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   335bc:	ldrh	r3, [r4, #16]
   335c0:	cmp	r3, #6
   335c4:	beq	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   335c8:	mov	ip, #0
   335cc:	mov	r2, sl
   335d0:	ldr	r1, [r4, #4]
   335d4:	mov	r3, ip
   335d8:	mov	r0, r6
   335dc:	str	ip, [sp]
   335e0:	str	ip, [sp, #4]
   335e4:	bl	2ddbc <__flatcc_error_report@@Base>
   335e8:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   335ec:	ldr	r3, [sp, #16]
   335f0:	ldr	lr, [r3, #40]	; 0x28
   335f4:	cmp	lr, #6
   335f8:	beq	33900 <__flatcc_fb_clear_parser@@Base+0x11d0>
   335fc:	ldrd	r8, [sp, #48]	; 0x30
   33600:	mov	r3, #0
   33604:	adds	r0, r8, #1
   33608:	adc	r2, r9, #0
   3360c:	str	r0, [sp, #48]	; 0x30
   33610:	str	r2, [sp, #52]	; 0x34
   33614:	b	331e0 <__flatcc_fb_clear_parser@@Base+0xab0>
   33618:	mov	r0, #0
   3361c:	mov	r1, #0
   33620:	mov	ip, #4
   33624:	add	r7, sp, #48	; 0x30
   33628:	mov	r3, r7
   3362c:	strd	r0, [sp, #48]	; 0x30
   33630:	mov	r1, r9
   33634:	mov	r0, r6
   33638:	strh	ip, [sp, #56]	; 0x38
   3363c:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   33640:	cmp	r0, #0
   33644:	beq	330e4 <__flatcc_fb_clear_parser@@Base+0x9b4>
   33648:	ldr	r2, [pc, #1420]	; 33bdc <__flatcc_fb_clear_parser@@Base+0x14ac>
   3364c:	mov	ip, #0
   33650:	mov	r0, r6
   33654:	mov	r3, ip
   33658:	mov	r1, ip
   3365c:	str	ip, [sp]
   33660:	str	ip, [sp, #4]
   33664:	add	r2, pc, r2
   33668:	bl	2ddbc <__flatcc_error_report@@Base>
   3366c:	mvn	r0, #0
   33670:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33674:	ldr	r2, [r5, #16]
   33678:	ldr	r3, [sp, #16]
   3367c:	cmp	r2, #0
   33680:	ldr	r8, [r3, #12]
   33684:	beq	33844 <__flatcc_fb_clear_parser@@Base+0x1114>
   33688:	mov	r1, r2
   3368c:	b	33698 <__flatcc_fb_clear_parser@@Base+0xf68>
   33690:	mov	ip, r0
   33694:	mov	r1, r3
   33698:	ldr	r3, [r1]
   3369c:	add	r0, ip, #1
   336a0:	cmp	r3, #0
   336a4:	bne	33690 <__flatcc_fb_clear_parser@@Base+0xf60>
   336a8:	sub	r3, r0, #1
   336ac:	cmp	r8, #0
   336b0:	clz	r3, r3
   336b4:	mov	r9, r1
   336b8:	lsr	r3, r3, #5
   336bc:	moveq	r3, #0
   336c0:	cmp	r3, #0
   336c4:	beq	337d0 <__flatcc_fb_clear_parser@@Base+0x10a0>
   336c8:	add	r3, r6, #524	; 0x20c
   336cc:	add	r9, r6, #352	; 0x160
   336d0:	mov	sl, r1
   336d4:	str	r3, [sp, #36]	; 0x24
   336d8:	str	r4, [sp, #40]	; 0x28
   336dc:	ldr	r3, [sl, #4]
   336e0:	add	r0, r8, #4
   336e4:	ldm	r3, {r1, r2}
   336e8:	bl	2b998 <fb_symbol_table_find@@Base>
   336ec:	subs	r3, r0, #0
   336f0:	beq	33868 <__flatcc_fb_clear_parser@@Base+0x1138>
   336f4:	ldrh	r2, [r3, #8]
   336f8:	cmp	r2, #4
   336fc:	bhi	33868 <__flatcc_fb_clear_parser@@Base+0x1138>
   33700:	ldr	r1, [r3, #16]
   33704:	str	r3, [sp, #12]
   33708:	ldr	r0, [sp, #36]	; 0x24
   3370c:	bl	2b21c <ptr_set_find_item@@Base>
   33710:	cmp	r0, #0
   33714:	ldr	r3, [sp, #12]
   33718:	beq	33868 <__flatcc_fb_clear_parser@@Base+0x1138>
   3371c:	ldr	r4, [sp, #40]	; 0x28
   33720:	ldrh	r2, [r3, #8]
   33724:	cmp	r2, #1
   33728:	bhi	339d0 <__flatcc_fb_clear_parser@@Base+0x12a0>
   3372c:	mov	r2, #14
   33730:	mov	r0, #0
   33734:	str	r3, [r5, #16]
   33738:	mov	r1, #0
   3373c:	strh	r2, [r5, #24]
   33740:	strd	r0, [r5, #88]	; 0x58
   33744:	b	331c4 <__flatcc_fb_clear_parser@@Base+0xa94>
   33748:	ldr	r3, [sp, #16]
   3374c:	ldrd	r0, [sp, #48]	; 0x30
   33750:	ldr	lr, [r3, #40]	; 0x28
   33754:	cmp	lr, #6
   33758:	beq	33978 <__flatcc_fb_clear_parser@@Base+0x1248>
   3375c:	adds	r2, r0, #1
   33760:	adc	r3, r1, #0
   33764:	ldr	r1, [sp, #20]
   33768:	strd	r2, [sp, #48]	; 0x30
   3376c:	cmp	r1, #0
   33770:	bne	33214 <__flatcc_fb_clear_parser@@Base+0xae4>
   33774:	b	33424 <__flatcc_fb_clear_parser@@Base+0xcf4>
   33778:	ldrh	r3, [r1, #48]	; 0x30
   3377c:	cmp	r3, #0
   33780:	bne	33b10 <__flatcc_fb_clear_parser@@Base+0x13e0>
   33784:	ldr	r1, [sp, #8]
   33788:	mov	r0, #8
   3378c:	mov	r2, #1
   33790:	mov	r3, #0
   33794:	str	r1, [r9, #40]	; 0x28
   33798:	mov	r1, #1
   3379c:	strh	r0, [r9, #48]	; 0x30
   337a0:	strh	r1, [r9, #104]	; 0x68
   337a4:	strd	r2, [r9, #112]	; 0x70
   337a8:	b	32ecc <__flatcc_fb_clear_parser@@Base+0x79c>
   337ac:	mov	r3, r2
   337b0:	ldr	r1, [r4, #4]
   337b4:	mov	r0, r6
   337b8:	str	r2, [sp]
   337bc:	str	r2, [sp, #4]
   337c0:	ldr	r2, [pc, #1048]	; 33be0 <__flatcc_fb_clear_parser@@Base+0x14b0>
   337c4:	add	r2, pc, r2
   337c8:	bl	2ddbc <__flatcc_error_report@@Base>
   337cc:	b	32f4c <__flatcc_fb_clear_parser@@Base+0x81c>
   337d0:	cmp	r0, #1
   337d4:	moveq	r1, r3
   337d8:	movne	r1, r2
   337dc:	cmn	r6, #352	; 0x160
   337e0:	beq	33844 <__flatcc_fb_clear_parser@@Base+0x1114>
   337e4:	ldr	r0, [r6, #412]	; 0x19c
   337e8:	cmp	r0, #0
   337ec:	beq	33844 <__flatcc_fb_clear_parser@@Base+0x1114>
   337f0:	rsb	r2, ip, #0
   337f4:	bl	2ca20 <fb_scope_table_find@@Base>
   337f8:	cmp	r0, #0
   337fc:	beq	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   33800:	ldr	r3, [r9, #4]
   33804:	add	r0, r0, #4
   33808:	ldm	r3, {r1, r2}
   3380c:	bl	2b998 <fb_symbol_table_find@@Base>
   33810:	subs	r3, r0, #0
   33814:	beq	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   33818:	ldrh	r2, [r3, #8]
   3381c:	cmp	r2, #4
   33820:	bhi	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   33824:	add	r0, r6, #524	; 0x20c
   33828:	ldr	r1, [r3, #16]
   3382c:	str	r3, [sp, #12]
   33830:	bl	2b21c <ptr_set_find_item@@Base>
   33834:	cmp	r0, #0
   33838:	ldr	r3, [sp, #12]
   3383c:	bne	33720 <__flatcc_fb_clear_parser@@Base+0xff0>
   33840:	ldr	r2, [r5, #16]
   33844:	mov	r1, r2
   33848:	mov	r3, r5
   3384c:	ldr	r2, [pc, #912]	; 33be4 <__flatcc_fb_clear_parser@@Base+0x14b4>
   33850:	mov	r0, r6
   33854:	add	r2, pc, r2
   33858:	bl	2f53c <error_ref_sym@@Base>
   3385c:	mov	r3, #1
   33860:	strh	r3, [r5, #24]
   33864:	b	33178 <__flatcc_fb_clear_parser@@Base+0xa48>
   33868:	ldr	r2, [r8]
   3386c:	cmp	r2, #0
   33870:	beq	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   33874:	mov	r3, #0
   33878:	b	33880 <__flatcc_fb_clear_parser@@Base+0x1150>
   3387c:	mov	r3, r1
   33880:	ldr	r2, [r2]
   33884:	add	r1, r3, #1
   33888:	cmp	r2, #0
   3388c:	bne	3387c <__flatcc_fb_clear_parser@@Base+0x114c>
   33890:	rsb	r4, r3, #0
   33894:	b	338c4 <__flatcc_fb_clear_parser@@Base+0x1194>
   33898:	cmp	r9, #0
   3389c:	beq	338c0 <__flatcc_fb_clear_parser@@Base+0x1190>
   338a0:	ldr	r0, [r6, #412]	; 0x19c
   338a4:	cmp	r0, #0
   338a8:	beq	338c0 <__flatcc_fb_clear_parser@@Base+0x1190>
   338ac:	mov	r2, r4
   338b0:	ldr	r1, [r8]
   338b4:	bl	2ca20 <fb_scope_table_find@@Base>
   338b8:	cmp	r0, #0
   338bc:	bne	338f8 <__flatcc_fb_clear_parser@@Base+0x11c8>
   338c0:	add	r4, r4, #1
   338c4:	cmp	r4, #0
   338c8:	bne	33898 <__flatcc_fb_clear_parser@@Base+0x1168>
   338cc:	cmp	r9, #0
   338d0:	beq	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   338d4:	ldr	r0, [r6, #412]	; 0x19c
   338d8:	cmp	r0, #0
   338dc:	beq	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   338e0:	mov	r2, r4
   338e4:	mov	r1, r4
   338e8:	bl	2ca20 <fb_scope_table_find@@Base>
   338ec:	subs	r8, r0, #0
   338f0:	bne	336dc <__flatcc_fb_clear_parser@@Base+0xfac>
   338f4:	b	33840 <__flatcc_fb_clear_parser@@Base+0x1110>
   338f8:	mov	r8, r0
   338fc:	b	336dc <__flatcc_fb_clear_parser@@Base+0xfac>
   33900:	ldrd	r8, [sp, #48]	; 0x30
   33904:	mvn	r3, #0
   33908:	mvn	r2, #0
   3390c:	cmp	r9, r3
   33910:	cmpeq	r8, r2
   33914:	movne	r3, #0
   33918:	bne	33604 <__flatcc_fb_clear_parser@@Base+0xed4>
   3391c:	mov	r2, #0
   33920:	ldr	r1, [r5, #4]
   33924:	mov	r0, r6
   33928:	mov	r3, r2
   3392c:	str	r2, [sp]
   33930:	str	r2, [sp, #4]
   33934:	ldr	r2, [pc, #684]	; 33be8 <__flatcc_fb_clear_parser@@Base+0x14b8>
   33938:	add	r2, pc, r2
   3393c:	bl	2ddbc <__flatcc_error_report@@Base>
   33940:	ldrh	r3, [r5, #56]	; 0x38
   33944:	ldrd	r8, [sp, #48]	; 0x30
   33948:	b	33604 <__flatcc_fb_clear_parser@@Base+0xed4>
   3394c:	ldr	r2, [pc, #664]	; 33bec <__flatcc_fb_clear_parser@@Base+0x14bc>
   33950:	mov	ip, r0
   33954:	mov	r3, r0
   33958:	mov	r0, r6
   3395c:	ldr	r1, [r5, #4]
   33960:	str	ip, [sp]
   33964:	str	ip, [sp, #4]
   33968:	add	r2, pc, r2
   3396c:	bl	2ddbc <__flatcc_error_report@@Base>
   33970:	mvn	r0, #0
   33974:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33978:	mvn	r3, #-2147483648	; 0x80000000
   3397c:	mvn	r2, #0
   33980:	cmp	r1, r3
   33984:	cmpeq	r0, r2
   33988:	bne	3375c <__flatcc_fb_clear_parser@@Base+0x102c>
   3398c:	mov	r2, #0
   33990:	ldr	r1, [r5, #4]
   33994:	mov	r0, r6
   33998:	mov	r3, r2
   3399c:	str	r2, [sp]
   339a0:	str	r2, [sp, #4]
   339a4:	ldr	r2, [pc, #580]	; 33bf0 <__flatcc_fb_clear_parser@@Base+0x14c0>
   339a8:	add	r2, pc, r2
   339ac:	bl	2ddbc <__flatcc_error_report@@Base>
   339b0:	ldr	r2, [sp, #48]	; 0x30
   339b4:	ldr	r1, [sp, #52]	; 0x34
   339b8:	ldrh	r3, [r5, #56]	; 0x38
   339bc:	adds	r2, r2, #1
   339c0:	adc	r1, r1, #0
   339c4:	str	r2, [sp, #48]	; 0x30
   339c8:	str	r1, [sp, #52]	; 0x34
   339cc:	b	331e0 <__flatcc_fb_clear_parser@@Base+0xab0>
   339d0:	mov	r2, #0
   339d4:	ldr	r3, [r3, #4]
   339d8:	mov	r0, r6
   339dc:	ldr	r1, [r5, #4]
   339e0:	str	r2, [sp]
   339e4:	str	r2, [sp, #4]
   339e8:	ldr	r2, [pc, #516]	; 33bf4 <__flatcc_fb_clear_parser@@Base+0x14c4>
   339ec:	add	r2, pc, r2
   339f0:	bl	2ddbc <__flatcc_error_report@@Base>
   339f4:	mov	r3, #1
   339f8:	strh	r3, [r5, #24]
   339fc:	b	33178 <__flatcc_fb_clear_parser@@Base+0xa48>
   33a00:	mov	r2, #0
   33a04:	ldr	r1, [r5, #4]
   33a08:	mov	r0, r6
   33a0c:	mov	r3, r2
   33a10:	str	r2, [sp]
   33a14:	str	r2, [sp, #4]
   33a18:	ldr	r2, [pc, #472]	; 33bf8 <__flatcc_fb_clear_parser@@Base+0x14c8>
   33a1c:	add	r2, pc, r2
   33a20:	bl	2ddbc <__flatcc_error_report@@Base>
   33a24:	mov	r3, #1
   33a28:	mvn	r0, #0
   33a2c:	strh	r3, [r5, #56]	; 0x38
   33a30:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33a34:	ldr	r2, [pc, #448]	; 33bfc <__flatcc_fb_clear_parser@@Base+0x14cc>
   33a38:	mov	r0, r6
   33a3c:	mov	r3, sl
   33a40:	ldr	r1, [r5, #4]
   33a44:	str	sl, [sp]
   33a48:	str	sl, [sp, #4]
   33a4c:	add	r2, pc, r2
   33a50:	bl	2ddbc <__flatcc_error_report@@Base>
   33a54:	mvn	r0, #0
   33a58:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33a5c:	ldr	r2, [pc, #412]	; 33c00 <__flatcc_fb_clear_parser@@Base+0x14d0>
   33a60:	mov	ip, #0
   33a64:	mov	r0, r6
   33a68:	mov	r3, ip
   33a6c:	ldr	r1, [r5, #4]
   33a70:	str	ip, [sp]
   33a74:	str	ip, [sp, #4]
   33a78:	add	r2, pc, r2
   33a7c:	bl	2ddbc <__flatcc_error_report@@Base>
   33a80:	mvn	r0, #0
   33a84:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33a88:	mov	ip, #0
   33a8c:	mov	r0, r6
   33a90:	ldr	r1, [r5, #4]
   33a94:	mov	r3, ip
   33a98:	str	ip, [sp]
   33a9c:	str	ip, [sp, #4]
   33aa0:	ldr	r2, [sp, #44]	; 0x2c
   33aa4:	bl	2ddbc <__flatcc_error_report@@Base>
   33aa8:	ldrh	r3, [r5, #56]	; 0x38
   33aac:	strb	r4, [sp, #48]	; 0x30
   33ab0:	b	331e0 <__flatcc_fb_clear_parser@@Base+0xab0>
   33ab4:	ldr	r2, [pc, #328]	; 33c04 <__flatcc_fb_clear_parser@@Base+0x14d4>
   33ab8:	mov	ip, #0
   33abc:	mov	r0, r6
   33ac0:	mov	r3, ip
   33ac4:	ldr	r1, [r5, #4]
   33ac8:	str	ip, [sp]
   33acc:	str	ip, [sp, #4]
   33ad0:	add	r2, pc, r2
   33ad4:	bl	2ddbc <__flatcc_error_report@@Base>
   33ad8:	mvn	r0, #0
   33adc:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33ae0:	ldr	r2, [pc, #288]	; 33c08 <__flatcc_fb_clear_parser@@Base+0x14d8>
   33ae4:	add	r2, pc, r2
   33ae8:	b	33514 <__flatcc_fb_clear_parser@@Base+0xde4>
   33aec:	ldr	r2, [pc, #280]	; 33c0c <__flatcc_fb_clear_parser@@Base+0x14dc>
   33af0:	mov	r1, #0
   33af4:	add	r2, pc, r2
   33af8:	mov	r3, r1
   33afc:	str	r1, [sp]
   33b00:	str	r1, [sp, #4]
   33b04:	ldr	r1, [r9, #4]
   33b08:	bl	2ddbc <__flatcc_error_report@@Base>
   33b0c:	b	33488 <__flatcc_fb_clear_parser@@Base+0xd58>
   33b10:	ldr	r2, [pc, #248]	; 33c10 <__flatcc_fb_clear_parser@@Base+0x14e0>
   33b14:	mov	r1, #0
   33b18:	add	r2, pc, r2
   33b1c:	b	33af8 <__flatcc_fb_clear_parser@@Base+0x13c8>
   33b20:	mov	r3, r2
   33b24:	str	r2, [sp]
   33b28:	mov	r1, #1
   33b2c:	str	r2, [sp, #4]
   33b30:	ldr	r2, [pc, #220]	; 33c14 <__flatcc_fb_clear_parser@@Base+0x14e4>
   33b34:	strh	r1, [r9, #48]	; 0x30
   33b38:	ldr	r1, [r9, #4]
   33b3c:	add	r2, pc, r2
   33b40:	bl	2ddbc <__flatcc_error_report@@Base>
   33b44:	mvn	r0, #0
   33b48:	b	3334c <__flatcc_fb_clear_parser@@Base+0xc1c>
   33b4c:	ldr	r3, [pc, #196]	; 33c18 <__flatcc_fb_clear_parser@@Base+0x14e8>
   33b50:	movw	r2, #1315	; 0x523
   33b54:	ldr	r1, [pc, #192]	; 33c1c <__flatcc_fb_clear_parser@@Base+0x14ec>
   33b58:	ldr	r0, [pc, #192]	; 33c20 <__flatcc_fb_clear_parser@@Base+0x14f0>
   33b5c:	add	r3, pc, r3
   33b60:	add	r3, r3, #188	; 0xbc
   33b64:	add	r1, pc, r1
   33b68:	add	r0, pc, r0
   33b6c:	bl	1400c <__assert_fail@plt>
   33b70:	ldr	r3, [pc, #172]	; 33c24 <__flatcc_fb_clear_parser@@Base+0x14f4>
   33b74:	movw	r2, #1229	; 0x4cd
   33b78:	ldr	r1, [pc, #168]	; 33c28 <__flatcc_fb_clear_parser@@Base+0x14f8>
   33b7c:	ldr	r0, [pc, #168]	; 33c2c <__flatcc_fb_clear_parser@@Base+0x14fc>
   33b80:	add	r3, pc, r3
   33b84:	add	r3, r3, #188	; 0xbc
   33b88:	add	r1, pc, r1
   33b8c:	add	r0, pc, r0
   33b90:	bl	1400c <__assert_fail@plt>
   33b94:	andeq	r5, r2, r4, asr #6
   33b98:	andeq	r5, r2, ip, ror #15
   33b9c:	andeq	r5, r2, ip, asr #5
   33ba0:	andeq	r5, r2, r4, lsl #16
   33ba4:	andeq	r5, r2, r8, lsl #13
   33ba8:	andeq	r5, r2, ip, lsl #13
   33bac:			; <UNDEFINED> instruction: 0x000256bc
   33bb0:	andeq	r5, r2, r0, lsr #19
   33bb4:	andeq	r5, r2, r0, asr #1
   33bb8:	strdeq	r5, [r2], -r0
   33bbc:	andeq	r5, r2, ip, ror #12
   33bc0:	andeq	r5, r2, r8, lsr r4
   33bc4:	andeq	r5, r2, r0, asr #8
   33bc8:	andeq	r5, r2, ip, lsl #3
   33bcc:	andeq	r5, r2, r8, asr #2
   33bd0:	strdeq	r5, [r2], -r8
   33bd4:	andeq	r5, r2, r4, asr #9
   33bd8:	andeq	r5, r2, r0, lsr r1
   33bdc:	andeq	r5, r2, r4, lsl #2
   33be0:	andeq	r4, r2, r8, asr #29
   33be4:	andeq	r5, r2, ip, lsl r0
   33be8:			; <UNDEFINED> instruction: 0x00024fb0
   33bec:	andeq	r4, r2, ip, ror lr
   33bf0:	andeq	r4, r2, r0, ror #30
   33bf4:			; <UNDEFINED> instruction: 0x00024eb4
   33bf8:	andeq	r5, r2, r4, asr r0
   33bfc:	andeq	r4, r2, r4, asr #30
   33c00:	andeq	r4, r2, r8, lsl pc
   33c04:	andeq	r4, r2, r4, lsl #29
   33c08:	andeq	r4, r2, r0, ror #29
   33c0c:	andeq	r4, r2, ip, lsr #21
   33c10:			; <UNDEFINED> instruction: 0x00024abc
   33c14:	andeq	r4, r2, ip, asr #20
   33c18:	andeq	r4, r2, ip, lsl #13
   33c1c:	andeq	r4, r2, r8, ror #15
   33c20:	andeq	r4, r2, r8, lsr #25
   33c24:	andeq	r4, r2, r8, ror #12
   33c28:	andeq	r4, r2, r4, asr #15
   33c2c:	ldrdeq	r4, [r2], -ip
   33c30:	ldrh	r3, [r1, #8]
   33c34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   33c38:	strd	r6, [sp, #8]
   33c3c:	strd	r8, [sp, #16]
   33c40:	strd	sl, [sp, #24]
   33c44:	str	lr, [sp, #32]
   33c48:	sub	sp, sp, #260	; 0x104
   33c4c:	cmp	r3, #0
   33c50:	str	r1, [sp, #32]
   33c54:	bne	35c04 <__flatcc_fb_clear_parser@@Base+0x34d4>
   33c58:	ldr	r3, [sp, #32]
   33c5c:	ldrh	r5, [r3, #48]	; 0x30
   33c60:	cmp	r5, #0
   33c64:	bne	35bd4 <__flatcc_fb_clear_parser@@Base+0x34a4>
   33c68:	ldr	r3, [sp, #32]
   33c6c:	mov	r2, #0
   33c70:	add	r7, sp, #108	; 0x6c
   33c74:	mov	fp, r0
   33c78:	ldr	r4, [r3, #28]
   33c7c:	mov	r3, #0
   33c80:	strd	r2, [sp, #108]	; 0x6c
   33c84:	strd	r2, [r7, #8]
   33c88:	strd	r2, [r7, #16]
   33c8c:	cmp	r4, #0
   33c90:	strd	r2, [r7, #24]
   33c94:	strd	r2, [r7, #32]
   33c98:	strd	r2, [r7, #40]	; 0x28
   33c9c:	beq	356e4 <__flatcc_fb_clear_parser@@Base+0x2fb4>
   33ca0:	ldr	r3, [pc, #4072]	; 34c90 <__flatcc_fb_clear_parser@@Base+0x2560>
   33ca4:	mov	sl, r5
   33ca8:	mov	r6, #100	; 0x64
   33cac:	ldr	r9, [pc, #4064]	; 34c94 <__flatcc_fb_clear_parser@@Base+0x2564>
   33cb0:	ldr	r8, [pc, #4064]	; 34c98 <__flatcc_fb_clear_parser@@Base+0x2568>
   33cb4:	add	r3, pc, r3
   33cb8:	mov	r5, r3
   33cbc:	add	r9, pc, r9
   33cc0:	add	r8, pc, r8
   33cc4:	b	33d08 <__flatcc_fb_clear_parser@@Base+0x15d8>
   33cc8:	add	r1, r9, r1
   33ccc:	str	r4, [r7, r2, lsl #2]
   33cd0:	ldr	r2, [r1, #204]	; 0xcc
   33cd4:	cmp	r2, #0
   33cd8:	bne	33d84 <__flatcc_fb_clear_parser@@Base+0x1654>
   33cdc:	ldrh	r3, [r4, #16]
   33ce0:	cmp	r3, #0
   33ce4:	bne	3529c <__flatcc_fb_clear_parser@@Base+0x2b6c>
   33ce8:	ldr	r4, [r4]
   33cec:	subs	r6, r6, #1
   33cf0:	movne	r2, #1
   33cf4:	moveq	r2, #0
   33cf8:	cmp	r4, #0
   33cfc:	moveq	r2, #0
   33d00:	cmp	r2, #0
   33d04:	beq	33e20 <__flatcc_fb_clear_parser@@Base+0x16f0>
   33d08:	ldr	r3, [r4, #4]
   33d0c:	ldr	r0, [fp, #412]	; 0x19c
   33d10:	ldm	r3, {r1, r2}
   33d14:	add	r0, r0, #16
   33d18:	bl	3e1d0 <fb_name_table_find@@Base>
   33d1c:	subs	r2, r0, #0
   33d20:	beq	34e4c <__flatcc_fb_clear_parser@@Base+0x271c>
   33d24:	ldr	r2, [r2, #24]
   33d28:	cmp	r2, #0
   33d2c:	beq	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33d30:	mov	r3, #8
   33d34:	asr	r3, r3, r2
   33d38:	ands	ip, r3, #1
   33d3c:	beq	33dfc <__flatcc_fb_clear_parser@@Base+0x16cc>
   33d40:	ldr	ip, [r7, r2, lsl #2]
   33d44:	mov	r3, #1
   33d48:	lsl	r1, r2, #2
   33d4c:	orr	sl, sl, r3, lsl r2
   33d50:	uxth	sl, sl
   33d54:	cmp	ip, #0
   33d58:	beq	33cc8 <__flatcc_fb_clear_parser@@Base+0x1598>
   33d5c:	mov	r2, #0
   33d60:	ldr	r1, [r4, #4]
   33d64:	mov	r0, fp
   33d68:	mov	r3, r2
   33d6c:	str	r2, [sp]
   33d70:	str	r2, [sp, #4]
   33d74:	ldr	r2, [pc, #3872]	; 34c9c <__flatcc_fb_clear_parser@@Base+0x256c>
   33d78:	add	r2, pc, r2
   33d7c:	bl	2ddbc <__flatcc_error_report@@Base>
   33d80:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33d84:	cmp	r2, #2
   33d88:	bne	33dbc <__flatcc_fb_clear_parser@@Base+0x168c>
   33d8c:	ldrh	r3, [r4, #16]
   33d90:	cmp	r3, #2
   33d94:	beq	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33d98:	ldr	r2, [pc, #3840]	; 34ca0 <__flatcc_fb_clear_parser@@Base+0x2570>
   33d9c:	mov	r3, ip
   33da0:	mov	r0, fp
   33da4:	ldr	r1, [r4, #4]
   33da8:	str	ip, [sp]
   33dac:	str	ip, [sp, #4]
   33db0:	add	r2, pc, r2
   33db4:	bl	2ddbc <__flatcc_error_report@@Base>
   33db8:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33dbc:	cmp	r2, #5
   33dc0:	beq	34e70 <__flatcc_fb_clear_parser@@Base+0x2740>
   33dc4:	cmp	r2, #4
   33dc8:	bne	34ea0 <__flatcc_fb_clear_parser@@Base+0x2770>
   33dcc:	ldrh	r3, [r4, #16]
   33dd0:	sub	r3, r3, #4
   33dd4:	cmp	r3, #1
   33dd8:	bls	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33ddc:	mov	r3, ip
   33de0:	mov	r2, r5
   33de4:	ldr	r1, [r4, #4]
   33de8:	mov	r0, fp
   33dec:	str	ip, [sp]
   33df0:	str	ip, [sp, #4]
   33df4:	bl	2ddbc <__flatcc_error_report@@Base>
   33df8:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33dfc:	ldr	r2, [pc, #3744]	; 34ca4 <__flatcc_fb_clear_parser@@Base+0x2574>
   33e00:	mov	r3, ip
   33e04:	mov	r0, fp
   33e08:	ldr	r1, [r4, #4]
   33e0c:	str	ip, [sp]
   33e10:	str	ip, [sp, #4]
   33e14:	add	r2, pc, r2
   33e18:	bl	2ddbc <__flatcc_error_report@@Base>
   33e1c:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   33e20:	cmp	r4, #0
   33e24:	beq	33e48 <__flatcc_fb_clear_parser@@Base+0x1718>
   33e28:	mov	r3, r2
   33e2c:	ldr	r1, [r4, #4]
   33e30:	mov	r0, fp
   33e34:	str	r2, [sp]
   33e38:	str	r2, [sp, #4]
   33e3c:	ldr	r2, [pc, #3684]	; 34ca8 <__flatcc_fb_clear_parser@@Base+0x2578>
   33e40:	add	r2, pc, r2
   33e44:	bl	2ddbc <__flatcc_error_report@@Base>
   33e48:	ldr	r3, [sp, #32]
   33e4c:	ldr	r5, [r3, #20]
   33e50:	strh	sl, [r3, #92]	; 0x5c
   33e54:	cmp	r5, #0
   33e58:	beq	35848 <__flatcc_fb_clear_parser@@Base+0x3118>
   33e5c:	ldr	r3, [pc, #3656]	; 34cac <__flatcc_fb_clear_parser@@Base+0x257c>
   33e60:	mov	r2, #0
   33e64:	mov	r1, #0
   33e68:	ldr	r0, [pc, #3648]	; 34cb0 <__flatcc_fb_clear_parser@@Base+0x2580>
   33e6c:	str	r1, [sp, #16]
   33e70:	str	r1, [sp, #36]	; 0x24
   33e74:	add	r3, pc, r3
   33e78:	str	r2, [sp, #44]	; 0x2c
   33e7c:	str	r1, [sp, #52]	; 0x34
   33e80:	add	r0, pc, r0
   33e84:	str	r3, [sp, #80]	; 0x50
   33e88:	mov	r3, #0
   33e8c:	str	r1, [sp, #60]	; 0x3c
   33e90:	strd	r2, [sp, #8]
   33e94:	str	r0, [sp, #24]
   33e98:	str	r3, [sp, #48]	; 0x30
   33e9c:	strd	r2, [sp, #72]	; 0x48
   33ea0:	ldr	r3, [pc, #3596]	; 34cb4 <__flatcc_fb_clear_parser@@Base+0x2584>
   33ea4:	add	r3, pc, r3
   33ea8:	str	r3, [sp, #68]	; 0x44
   33eac:	ldr	r3, [sp, #32]
   33eb0:	add	r3, r3, #56	; 0x38
   33eb4:	str	r3, [sp, #28]
   33eb8:	mov	r2, #1
   33ebc:	mov	r1, r5
   33ec0:	ldr	r0, [sp, #28]
   33ec4:	bl	2b970 <fb_symbol_table_insert_item@@Base>
   33ec8:	subs	sl, r0, #0
   33ecc:	bne	34ac8 <__flatcc_fb_clear_parser@@Base+0x2398>
   33ed0:	ldrh	r3, [r5, #8]
   33ed4:	cmp	r3, #5
   33ed8:	bne	351f4 <__flatcc_fb_clear_parser@@Base+0x2ac4>
   33edc:	ldrh	r3, [r5, #24]
   33ee0:	cmp	r3, #1
   33ee4:	beq	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   33ee8:	sub	r3, r3, #7
   33eec:	cmp	r3, #1
   33ef0:	bls	34bf4 <__flatcc_fb_clear_parser@@Base+0x24c4>
   33ef4:	ldr	r4, [r5, #64]	; 0x40
   33ef8:	ldr	r3, [sp, #44]	; 0x2c
   33efc:	ldr	r2, [sp, #48]	; 0x30
   33f00:	cmp	r4, #0
   33f04:	moveq	r8, r4
   33f08:	strheq	r4, [r5, #72]	; 0x48
   33f0c:	str	r3, [r7]
   33f10:	strd	r2, [r7, #4]
   33f14:	strd	r2, [r7, #12]
   33f18:	strd	r2, [r7, #20]
   33f1c:	strd	r2, [r7, #28]
   33f20:	strd	r2, [r7, #36]	; 0x24
   33f24:	str	r2, [r7, #44]	; 0x2c
   33f28:	beq	34370 <__flatcc_fb_clear_parser@@Base+0x1c40>
   33f2c:	ldr	r9, [pc, #3460]	; 34cb8 <__flatcc_fb_clear_parser@@Base+0x2588>
   33f30:	mov	r8, #0
   33f34:	mov	r6, #100	; 0x64
   33f38:	add	r9, pc, r9
   33f3c:	b	33f84 <__flatcc_fb_clear_parser@@Base+0x1854>
   33f40:	ldr	r2, [sp, #24]
   33f44:	str	r4, [r7, r1, lsl #2]
   33f48:	add	r3, r2, r3
   33f4c:	ldr	r2, [r3, #204]	; 0xcc
   33f50:	cmp	r2, #0
   33f54:	bne	34148 <__flatcc_fb_clear_parser@@Base+0x1a18>
   33f58:	ldrh	r3, [r4, #16]
   33f5c:	cmp	r3, #0
   33f60:	bne	34dc0 <__flatcc_fb_clear_parser@@Base+0x2690>
   33f64:	ldr	r4, [r4]
   33f68:	subs	r6, r6, #1
   33f6c:	movne	r2, #1
   33f70:	moveq	r2, #0
   33f74:	cmp	r4, #0
   33f78:	moveq	r2, #0
   33f7c:	cmp	r2, #0
   33f80:	beq	341e4 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   33f84:	ldr	r3, [r4, #4]
   33f88:	ldr	r0, [fp, #412]	; 0x19c
   33f8c:	ldm	r3, {r1, r2}
   33f90:	add	r0, r0, #16
   33f94:	bl	3e1d0 <fb_name_table_find@@Base>
   33f98:	subs	r2, r0, #0
   33f9c:	beq	34aa4 <__flatcc_fb_clear_parser@@Base+0x2374>
   33fa0:	ldr	r1, [r2, #24]
   33fa4:	cmp	r1, #0
   33fa8:	beq	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   33fac:	movw	r3, #4038	; 0xfc6
   33fb0:	asr	r3, r3, r1
   33fb4:	ands	r2, r3, #1
   33fb8:	beq	341c0 <__flatcc_fb_clear_parser@@Base+0x1a90>
   33fbc:	ldr	ip, [r7, r1, lsl #2]
   33fc0:	mov	r2, #1
   33fc4:	lsl	r3, r1, #2
   33fc8:	orr	r8, r8, r2, lsl r1
   33fcc:	uxth	r8, r8
   33fd0:	cmp	ip, #0
   33fd4:	beq	33f40 <__flatcc_fb_clear_parser@@Base+0x1810>
   33fd8:	mov	r2, #0
   33fdc:	ldr	r1, [r4, #4]
   33fe0:	mov	r0, fp
   33fe4:	mov	r3, r2
   33fe8:	str	r2, [sp]
   33fec:	str	r2, [sp, #4]
   33ff0:	ldr	r2, [pc, #3268]	; 34cbc <__flatcc_fb_clear_parser@@Base+0x258c>
   33ff4:	add	r2, pc, r2
   33ff8:	bl	2ddbc <__flatcc_error_report@@Base>
   33ffc:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34000:	mov	r3, #0
   34004:	str	r3, [sp, #56]	; 0x38
   34008:	ldr	r1, [sp, #16]
   3400c:	mov	ip, #14
   34010:	ldrh	lr, [sl, #104]	; 0x68
   34014:	ldrd	r2, [sl, #112]	; 0x70
   34018:	eor	r1, r1, #1
   3401c:	str	sl, [r5, #16]
   34020:	cmp	r0, #4
   34024:	movne	r1, #0
   34028:	andeq	r1, r1, #1
   3402c:	strh	ip, [r5, #24]
   34030:	cmp	r1, #0
   34034:	strh	lr, [r5, #74]	; 0x4a
   34038:	strd	r2, [r5, #88]	; 0x58
   3403c:	ldrh	r3, [r5, #56]	; 0x38
   34040:	bne	357b4 <__flatcc_fb_clear_parser@@Base+0x3084>
   34044:	cmp	r3, #0
   34048:	bne	35354 <__flatcc_fb_clear_parser@@Base+0x2c24>
   3404c:	cmp	r0, #3
   34050:	bne	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   34054:	ldr	r3, [sp, #44]	; 0x2c
   34058:	mov	r4, r5
   3405c:	mov	r0, fp
   34060:	ldr	r1, [sp, #48]	; 0x30
   34064:	ldr	r2, [sl, #40]	; 0x28
   34068:	mov	r8, r3
   3406c:	mov	r3, #5
   34070:	mov	r9, r1
   34074:	mov	r1, sl
   34078:	strh	r3, [r5, #56]	; 0x38
   3407c:	strd	r8, [r4, #48]!	; 0x30
   34080:	mov	r3, r4
   34084:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   34088:	cmp	r0, #0
   3408c:	bne	347e4 <__flatcc_fb_clear_parser@@Base+0x20b4>
   34090:	ldr	r3, [fp, #212]	; 0xd4
   34094:	cmp	r3, #0
   34098:	beq	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   3409c:	ldr	r0, [r5, #16]
   340a0:	mov	r1, r4
   340a4:	add	r0, r0, #72	; 0x48
   340a8:	bl	3e9d0 <fb_value_set_find_item@@Base>
   340ac:	subs	r3, r0, #0
   340b0:	bne	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   340b4:	ldr	r2, [pc, #3076]	; 34cc0 <__flatcc_fb_clear_parser@@Base+0x2590>
   340b8:	mov	r0, fp
   340bc:	str	r3, [sp]
   340c0:	str	r3, [sp, #4]
   340c4:	ldr	r3, [sl, #4]
   340c8:	add	r2, pc, r2
   340cc:	ldr	r1, [r5, #4]
   340d0:	bl	2ddbc <__flatcc_error_report@@Base>
   340d4:	mov	r3, #1
   340d8:	strh	r3, [r5, #24]
   340dc:	ldr	r5, [r5]
   340e0:	cmp	r5, #0
   340e4:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   340e8:	ldr	r3, [sp, #16]
   340ec:	cmp	r3, #0
   340f0:	beq	34fa0 <__flatcc_fb_clear_parser@@Base+0x2870>
   340f4:	ldr	r3, [sp, #52]	; 0x34
   340f8:	cmp	r3, #0
   340fc:	beq	3413c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   34100:	ldr	r2, [sp, #32]
   34104:	ldr	r1, [sp, #52]	; 0x34
   34108:	ldrh	r3, [r2, #10]
   3410c:	cmp	r1, #1
   34110:	orr	r3, r3, #8
   34114:	strh	r3, [r2, #10]
   34118:	beq	3413c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   3411c:	ldr	r3, [fp, #156]	; 0x9c
   34120:	cmp	r3, #0
   34124:	movne	r3, #0
   34128:	strne	r3, [sp, #52]	; 0x34
   3412c:	beq	35bc8 <__flatcc_fb_clear_parser@@Base+0x3498>
   34130:	ldr	r3, [sp, #16]
   34134:	cmp	r3, #0
   34138:	beq	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   3413c:	mvn	r3, #0
   34140:	str	r3, [sp, #52]	; 0x34
   34144:	b	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   34148:	cmp	r2, #2
   3414c:	bne	34180 <__flatcc_fb_clear_parser@@Base+0x1a50>
   34150:	ldrh	r3, [r4, #16]
   34154:	cmp	r3, #2
   34158:	beq	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   3415c:	ldr	r2, [pc, #2912]	; 34cc4 <__flatcc_fb_clear_parser@@Base+0x2594>
   34160:	mov	r3, ip
   34164:	mov	r0, fp
   34168:	ldr	r1, [r4, #4]
   3416c:	str	ip, [sp]
   34170:	str	ip, [sp, #4]
   34174:	add	r2, pc, r2
   34178:	bl	2ddbc <__flatcc_error_report@@Base>
   3417c:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34180:	cmp	r2, #5
   34184:	beq	34b8c <__flatcc_fb_clear_parser@@Base+0x245c>
   34188:	cmp	r2, #4
   3418c:	bne	34bbc <__flatcc_fb_clear_parser@@Base+0x248c>
   34190:	ldrh	r3, [r4, #16]
   34194:	sub	r3, r3, #4
   34198:	cmp	r3, #1
   3419c:	bls	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   341a0:	mov	r3, ip
   341a4:	mov	r2, r9
   341a8:	ldr	r1, [r4, #4]
   341ac:	mov	r0, fp
   341b0:	str	ip, [sp]
   341b4:	str	ip, [sp, #4]
   341b8:	bl	2ddbc <__flatcc_error_report@@Base>
   341bc:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   341c0:	mov	r3, r2
   341c4:	ldr	r1, [r4, #4]
   341c8:	mov	r0, fp
   341cc:	str	r2, [sp]
   341d0:	str	r2, [sp, #4]
   341d4:	ldr	r2, [pc, #2796]	; 34cc8 <__flatcc_fb_clear_parser@@Base+0x2598>
   341d8:	add	r2, pc, r2
   341dc:	bl	2ddbc <__flatcc_error_report@@Base>
   341e0:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   341e4:	cmp	r4, #0
   341e8:	ldr	r6, [sp, #132]	; 0x84
   341ec:	beq	34210 <__flatcc_fb_clear_parser@@Base+0x1ae0>
   341f0:	mov	r3, r2
   341f4:	ldr	r1, [r4, #4]
   341f8:	mov	r0, fp
   341fc:	str	r2, [sp]
   34200:	str	r2, [sp, #4]
   34204:	ldr	r2, [pc, #2752]	; 34ccc <__flatcc_fb_clear_parser@@Base+0x259c>
   34208:	add	r2, pc, r2
   3420c:	bl	2ddbc <__flatcc_error_report@@Base>
   34210:	cmp	r6, #0
   34214:	strh	r8, [r5, #72]	; 0x48
   34218:	beq	34314 <__flatcc_fb_clear_parser@@Base+0x1be4>
   3421c:	ldrh	r3, [r5, #24]
   34220:	ldr	r2, [sp, #32]
   34224:	cmp	r3, #7
   34228:	ldr	r4, [r2, #12]
   3422c:	bne	356f8 <__flatcc_fb_clear_parser@@Base+0x2fc8>
   34230:	ldr	r3, [r5, #16]
   34234:	cmp	r3, #4
   34238:	bne	356f8 <__flatcc_fb_clear_parser@@Base+0x2fc8>
   3423c:	ldrh	r3, [r6, #16]
   34240:	cmp	r3, #2
   34244:	bne	351b4 <__flatcc_fb_clear_parser@@Base+0x2a84>
   34248:	ldr	r1, [r6, #8]
   3424c:	ldr	ip, [r6, #12]
   34250:	cmp	ip, #0
   34254:	ble	356c0 <__flatcc_fb_clear_parser@@Base+0x2f90>
   34258:	sub	r2, ip, #1
   3425c:	ldrb	r3, [r1, r2]
   34260:	cmp	r3, #46	; 0x2e
   34264:	addne	r3, r1, r2
   34268:	bne	34284 <__flatcc_fb_clear_parser@@Base+0x1b54>
   3426c:	b	356d4 <__flatcc_fb_clear_parser@@Base+0x2fa4>
   34270:	ldrb	lr, [r3, #-1]!
   34274:	sub	r0, r2, #1
   34278:	cmp	lr, #46	; 0x2e
   3427c:	beq	34de4 <__flatcc_fb_clear_parser@@Base+0x26b4>
   34280:	mov	r2, r0
   34284:	cmp	r2, #0
   34288:	bne	34270 <__flatcc_fb_clear_parser@@Base+0x1b40>
   3428c:	mov	r8, r1
   34290:	str	ip, [sp, #20]
   34294:	clz	r3, r2
   34298:	cmp	r4, #0
   3429c:	lsr	r3, r3, #5
   342a0:	moveq	r3, #0
   342a4:	cmp	r3, #0
   342a8:	addne	r3, fp, #524	; 0x20c
   342ac:	strne	r3, [sp, #40]	; 0x28
   342b0:	bne	349b8 <__flatcc_fb_clear_parser@@Base+0x2288>
   342b4:	ldr	r0, [fp, #412]	; 0x19c
   342b8:	cmp	r0, #0
   342bc:	beq	34a7c <__flatcc_fb_clear_parser@@Base+0x234c>
   342c0:	cmp	r2, #0
   342c4:	moveq	r1, #0
   342c8:	bl	2ca20 <fb_scope_table_find@@Base>
   342cc:	cmp	r0, #0
   342d0:	beq	34a74 <__flatcc_fb_clear_parser@@Base+0x2344>
   342d4:	mov	r1, r8
   342d8:	add	r0, r0, #4
   342dc:	ldr	r2, [sp, #20]
   342e0:	bl	2b998 <fb_symbol_table_find@@Base>
   342e4:	subs	r3, r0, #0
   342e8:	beq	34a74 <__flatcc_fb_clear_parser@@Base+0x2344>
   342ec:	ldrh	r2, [r3, #8]
   342f0:	cmp	r2, #0
   342f4:	beq	3430c <__flatcc_fb_clear_parser@@Base+0x1bdc>
   342f8:	ldr	ip, [fp, #176]	; 0xb0
   342fc:	cmp	ip, #0
   34300:	beq	35b7c <__flatcc_fb_clear_parser@@Base+0x344c>
   34304:	cmp	r2, #1
   34308:	bne	35b2c <__flatcc_fb_clear_parser@@Base+0x33fc>
   3430c:	ldrh	r8, [r5, #72]	; 0x48
   34310:	str	r3, [r5, #104]	; 0x68
   34314:	tst	r8, #256	; 0x100
   34318:	beq	34328 <__flatcc_fb_clear_parser@@Base+0x1bf8>
   3431c:	ldrh	r3, [r5, #24]
   34320:	cmp	r3, #8
   34324:	beq	34ed8 <__flatcc_fb_clear_parser@@Base+0x27a8>
   34328:	tst	r8, #1024	; 0x400
   3432c:	beq	34370 <__flatcc_fb_clear_parser@@Base+0x1c40>
   34330:	ldrh	r3, [r5, #24]
   34334:	cmp	r3, #7
   34338:	bne	34348 <__flatcc_fb_clear_parser@@Base+0x1c18>
   3433c:	ldr	r3, [r5, #16]
   34340:	cmp	r3, #4
   34344:	beq	351bc <__flatcc_fb_clear_parser@@Base+0x2a8c>
   34348:	mov	r2, #0
   3434c:	ldr	r1, [r5, #4]
   34350:	mov	r0, fp
   34354:	mov	r3, r2
   34358:	str	r2, [sp]
   3435c:	str	r2, [sp, #4]
   34360:	ldr	r2, [pc, #2408]	; 34cd0 <__flatcc_fb_clear_parser@@Base+0x25a0>
   34364:	add	r2, pc, r2
   34368:	bl	2ddbc <__flatcc_error_report@@Base>
   3436c:	ldrh	r8, [r5, #72]	; 0x48
   34370:	tst	r8, #2048	; 0x800
   34374:	beq	343ac <__flatcc_fb_clear_parser@@Base+0x1c7c>
   34378:	ldrh	r3, [r5, #24]
   3437c:	cmp	r3, #7
   34380:	beq	34dfc <__flatcc_fb_clear_parser@@Base+0x26cc>
   34384:	mov	r2, #0
   34388:	ldr	r1, [r5, #4]
   3438c:	mov	r0, fp
   34390:	mov	r3, r2
   34394:	str	r2, [sp]
   34398:	str	r2, [sp, #4]
   3439c:	ldr	r2, [pc, #2352]	; 34cd4 <__flatcc_fb_clear_parser@@Base+0x25a4>
   343a0:	add	r2, pc, r2
   343a4:	bl	2ddbc <__flatcc_error_report@@Base>
   343a8:	ldrh	r8, [r5, #72]	; 0x48
   343ac:	and	r8, r8, #3072	; 0xc00
   343b0:	cmp	r8, #3072	; 0xc00
   343b4:	beq	34e0c <__flatcc_fb_clear_parser@@Base+0x26dc>
   343b8:	ldr	r3, [sp, #112]	; 0x70
   343bc:	adds	r1, r3, #0
   343c0:	str	r3, [sp, #20]
   343c4:	ldrd	r2, [sp, #8]
   343c8:	movne	r1, #1
   343cc:	str	r1, [sp, #40]	; 0x28
   343d0:	mov	r0, r2
   343d4:	orrs	r3, r0, r3
   343d8:	moveq	r3, r1
   343dc:	movne	r3, #0
   343e0:	cmp	r3, #0
   343e4:	bne	34c28 <__flatcc_fb_clear_parser@@Base+0x24f8>
   343e8:	ldr	r3, [sp, #16]
   343ec:	cmp	r3, #0
   343f0:	bne	3443c <__flatcc_fb_clear_parser@@Base+0x1d0c>
   343f4:	ldrd	r0, [sp, #8]
   343f8:	ldrd	r2, [fp, #216]	; 0xd8
   343fc:	cmp	r3, r1
   34400:	cmpeq	r2, r0
   34404:	bls	34c60 <__flatcc_fb_clear_parser@@Base+0x2530>
   34408:	ldr	r2, [sp, #36]	; 0x24
   3440c:	cmp	r2, #0
   34410:	bne	34424 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   34414:	ldrh	r3, [sp, #8]
   34418:	str	r2, [sp, #16]
   3441c:	str	r3, [r5, #96]	; 0x60
   34420:	str	r2, [r5, #100]	; 0x64
   34424:	ldr	r3, [sp, #8]
   34428:	adds	r3, r3, #1
   3442c:	str	r3, [sp, #8]
   34430:	ldr	r3, [sp, #12]
   34434:	adc	r3, r3, #0
   34438:	str	r3, [sp, #12]
   3443c:	ldrh	r3, [r5, #24]
   34440:	sub	r3, r3, #7
   34444:	cmp	r3, #5
   34448:	addls	pc, pc, r3, lsl #2
   3444c:	b	35c5c <__flatcc_fb_clear_parser@@Base+0x352c>
   34450:	b	34794 <__flatcc_fb_clear_parser@@Base+0x2064>
   34454:	b	3471c <__flatcc_fb_clear_parser@@Base+0x1fec>
   34458:	b	34708 <__flatcc_fb_clear_parser@@Base+0x1fd8>
   3445c:	b	34618 <__flatcc_fb_clear_parser@@Base+0x1ee8>
   34460:	b	3452c <__flatcc_fb_clear_parser@@Base+0x1dfc>
   34464:	b	34468 <__flatcc_fb_clear_parser@@Base+0x1d38>
   34468:	ldr	ip, [r5, #16]
   3446c:	ldr	r3, [sp, #32]
   34470:	cmp	ip, #0
   34474:	ldr	r4, [r3, #12]
   34478:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x2848>
   3447c:	mov	r8, ip
   34480:	mov	r2, #0
   34484:	b	34490 <__flatcc_fb_clear_parser@@Base+0x1d60>
   34488:	mov	r2, r3
   3448c:	mov	r8, r6
   34490:	ldr	r6, [r8]
   34494:	add	r3, r2, #1
   34498:	cmp	r6, #0
   3449c:	bne	34488 <__flatcc_fb_clear_parser@@Base+0x1d58>
   344a0:	sub	r1, r3, #1
   344a4:	cmp	r4, #0
   344a8:	clz	r1, r1
   344ac:	lsr	r1, r1, #5
   344b0:	moveq	r1, #0
   344b4:	cmp	r1, #0
   344b8:	beq	34f04 <__flatcc_fb_clear_parser@@Base+0x27d4>
   344bc:	add	r3, fp, #524	; 0x20c
   344c0:	add	r9, fp, #352	; 0x160
   344c4:	str	r3, [sp, #56]	; 0x38
   344c8:	ldr	r3, [r8, #4]
   344cc:	add	r0, r4, #4
   344d0:	ldm	r3, {r1, r2}
   344d4:	bl	2b998 <fb_symbol_table_find@@Base>
   344d8:	subs	sl, r0, #0
   344dc:	beq	350ec <__flatcc_fb_clear_parser@@Base+0x29bc>
   344e0:	ldrh	r2, [sl, #8]
   344e4:	cmp	r2, #4
   344e8:	bhi	350ec <__flatcc_fb_clear_parser@@Base+0x29bc>
   344ec:	ldr	r3, [sp, #56]	; 0x38
   344f0:	ldr	r1, [sl, #16]
   344f4:	mov	r0, r3
   344f8:	str	r3, [sp, #64]	; 0x40
   344fc:	bl	2b21c <ptr_set_find_item@@Base>
   34500:	cmp	r0, #0
   34504:	beq	350ec <__flatcc_fb_clear_parser@@Base+0x29bc>
   34508:	ldrh	r0, [sl, #8]
   3450c:	cmp	r0, #4
   34510:	addls	pc, pc, r0, lsl #2
   34514:	b	35c84 <__flatcc_fb_clear_parser@@Base+0x3554>
   34518:	b	34000 <__flatcc_fb_clear_parser@@Base+0x18d0>
   3451c:	b	34000 <__flatcc_fb_clear_parser@@Base+0x18d0>
   34520:	b	352d8 <__flatcc_fb_clear_parser@@Base+0x2ba8>
   34524:	b	352c0 <__flatcc_fb_clear_parser@@Base+0x2b90>
   34528:	b	34000 <__flatcc_fb_clear_parser@@Base+0x18d0>
   3452c:	ldr	ip, [r5, #16]
   34530:	ldr	r3, [sp, #32]
   34534:	cmp	ip, #0
   34538:	ldr	r4, [r3, #12]
   3453c:	beq	345f4 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   34540:	mov	r6, ip
   34544:	mov	r2, #0
   34548:	b	34554 <__flatcc_fb_clear_parser@@Base+0x1e24>
   3454c:	mov	r2, r0
   34550:	mov	r6, r3
   34554:	ldr	r3, [r6]
   34558:	add	r0, r2, #1
   3455c:	cmp	r3, #0
   34560:	bne	3454c <__flatcc_fb_clear_parser@@Base+0x1e1c>
   34564:	sub	r3, r0, #1
   34568:	cmp	r4, #0
   3456c:	clz	r3, r3
   34570:	lsr	r3, r3, #5
   34574:	moveq	r3, #0
   34578:	cmp	r3, #0
   3457c:	addne	r9, fp, #524	; 0x20c
   34580:	addne	r8, fp, #352	; 0x160
   34584:	bne	34800 <__flatcc_fb_clear_parser@@Base+0x20d0>
   34588:	cmp	r0, #1
   3458c:	moveq	r1, r3
   34590:	movne	r1, ip
   34594:	cmn	fp, #352	; 0x160
   34598:	beq	345f4 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   3459c:	ldr	r0, [fp, #412]	; 0x19c
   345a0:	cmp	r0, #0
   345a4:	beq	345f4 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   345a8:	rsb	r2, r2, #0
   345ac:	bl	2ca20 <fb_scope_table_find@@Base>
   345b0:	cmp	r0, #0
   345b4:	beq	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   345b8:	ldr	r3, [r6, #4]
   345bc:	add	r0, r0, #4
   345c0:	ldm	r3, {r1, r2}
   345c4:	bl	2b998 <fb_symbol_table_find@@Base>
   345c8:	subs	sl, r0, #0
   345cc:	beq	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   345d0:	ldrh	r3, [sl, #8]
   345d4:	cmp	r3, #4
   345d8:	bhi	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   345dc:	add	r0, fp, #524	; 0x20c
   345e0:	ldr	r1, [sl, #16]
   345e4:	bl	2b21c <ptr_set_find_item@@Base>
   345e8:	cmp	r0, #0
   345ec:	bne	34838 <__flatcc_fb_clear_parser@@Base+0x2108>
   345f0:	ldr	ip, [r5, #16]
   345f4:	mov	r3, r5
   345f8:	mov	r1, ip
   345fc:	ldr	r2, [pc, #1748]	; 34cd8 <__flatcc_fb_clear_parser@@Base+0x25a8>
   34600:	mov	r0, fp
   34604:	add	r2, pc, r2
   34608:	bl	2f53c <error_ref_sym@@Base>
   3460c:	mov	r3, #1
   34610:	strh	r3, [r5, #24]
   34614:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   34618:	ldrh	r3, [r5, #56]	; 0x38
   3461c:	cmp	r3, #0
   34620:	bne	35648 <__flatcc_fb_clear_parser@@Base+0x2f18>
   34624:	ldr	r3, [fp, #164]	; 0xa4
   34628:	str	r3, [sp, #56]	; 0x38
   3462c:	ldr	r3, [sp, #16]
   34630:	cmp	r3, #0
   34634:	bne	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   34638:	ldr	r3, [sp, #36]	; 0x24
   3463c:	ldr	r2, [sp, #40]	; 0x28
   34640:	eor	r3, r3, #1
   34644:	ands	r2, r3, r2
   34648:	ldr	r3, [sp, #20]
   3464c:	bne	35184 <__flatcc_fb_clear_parser@@Base+0x2a54>
   34650:	ldr	r1, [sp, #36]	; 0x24
   34654:	cmp	r3, #0
   34658:	movne	ip, #0
   3465c:	andeq	ip, r1, #1
   34660:	cmp	ip, #0
   34664:	bne	3523c <__flatcc_fb_clear_parser@@Base+0x2b0c>
   34668:	ldr	r3, [sp, #20]
   3466c:	cmp	r3, #0
   34670:	beq	34910 <__flatcc_fb_clear_parser@@Base+0x21e0>
   34674:	ldrh	r3, [r3, #16]
   34678:	cmp	r3, #5
   3467c:	beq	348d4 <__flatcc_fb_clear_parser@@Base+0x21a4>
   34680:	cmp	r3, #4
   34684:	ldr	r3, [sp, #20]
   34688:	ldr	r1, [r3, #4]
   3468c:	mov	r3, ip
   34690:	beq	356ec <__flatcc_fb_clear_parser@@Base+0x2fbc>
   34694:	ldr	r2, [pc, #1600]	; 34cdc <__flatcc_fb_clear_parser@@Base+0x25ac>
   34698:	add	r2, pc, r2
   3469c:	str	ip, [sp]
   346a0:	mov	r0, fp
   346a4:	str	ip, [sp, #4]
   346a8:	mov	ip, #1
   346ac:	str	ip, [sp, #16]
   346b0:	bl	2ddbc <__flatcc_error_report@@Base>
   346b4:	ldrh	r3, [r5, #72]	; 0x48
   346b8:	tst	r3, #128	; 0x80
   346bc:	beq	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   346c0:	ldr	r3, [sp, #56]	; 0x38
   346c4:	cmp	r3, #0
   346c8:	ldr	r3, [sp, #52]	; 0x34
   346cc:	add	r3, r3, #1
   346d0:	str	r3, [sp, #52]	; 0x34
   346d4:	bne	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   346d8:	mov	ip, #0
   346dc:	mov	r0, fp
   346e0:	ldr	r1, [r5, #4]
   346e4:	mov	r3, ip
   346e8:	str	ip, [sp]
   346ec:	str	ip, [sp, #4]
   346f0:	ldr	r2, [sp, #80]	; 0x50
   346f4:	bl	2ddbc <__flatcc_error_report@@Base>
   346f8:	ldr	r5, [r5]
   346fc:	cmp	r5, #0
   34700:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   34704:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   34708:	ldrh	r9, [r5, #56]	; 0x38
   3470c:	cmp	r9, #0
   34710:	bne	35684 <__flatcc_fb_clear_parser@@Base+0x2f54>
   34714:	str	r9, [sp, #56]	; 0x38
   34718:	b	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   3471c:	ldrh	r2, [r5, #56]	; 0x38
   34720:	cmp	r2, #13
   34724:	addne	r1, r5, #48	; 0x30
   34728:	beq	35488 <__flatcc_fb_clear_parser@@Base+0x2d58>
   3472c:	cmp	r2, #0
   34730:	bne	3474c <__flatcc_fb_clear_parser@@Base+0x201c>
   34734:	ldr	r2, [sp, #44]	; 0x2c
   34738:	mov	r3, #5
   3473c:	str	r2, [r5, #48]	; 0x30
   34740:	ldr	r2, [sp, #48]	; 0x30
   34744:	strh	r3, [r5, #56]	; 0x38
   34748:	str	r2, [r5, #52]	; 0x34
   3474c:	mov	r3, r1
   34750:	mov	r0, fp
   34754:	ldr	r2, [r5, #16]
   34758:	mov	r1, r5
   3475c:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   34760:	cmp	r0, #0
   34764:	bne	347e4 <__flatcc_fb_clear_parser@@Base+0x20b4>
   34768:	mov	r2, #1
   3476c:	ldr	r3, [pc, #1388]	; 34ce0 <__flatcc_fb_clear_parser@@Base+0x25b0>
   34770:	str	r0, [r5, #92]	; 0x5c
   34774:	str	r2, [sp, #56]	; 0x38
   34778:	ldr	r2, [r5, #16]
   3477c:	add	r3, pc, r3
   34780:	add	r3, r3, r2, lsl #2
   34784:	ldr	r3, [r3, #128]	; 0x80
   34788:	strh	r3, [r5, #74]	; 0x4a
   3478c:	str	r3, [r5, #88]	; 0x58
   34790:	b	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   34794:	ldr	r3, [pc, #1352]	; 34ce4 <__flatcc_fb_clear_parser@@Base+0x25b4>
   34798:	mov	r2, #0
   3479c:	ldr	r1, [r5, #16]
   347a0:	str	r2, [r5, #92]	; 0x5c
   347a4:	ldrh	r9, [r5, #56]	; 0x38
   347a8:	add	r3, pc, r3
   347ac:	add	r3, r3, r1, lsl #2
   347b0:	ldr	r3, [r3, #128]	; 0x80
   347b4:	cmp	r9, r2
   347b8:	strh	r3, [r5, #74]	; 0x4a
   347bc:	str	r3, [r5, #88]	; 0x58
   347c0:	beq	34714 <__flatcc_fb_clear_parser@@Base+0x1fe4>
   347c4:	mov	r3, r2
   347c8:	ldr	r1, [r5, #4]
   347cc:	mov	r0, fp
   347d0:	str	r2, [sp]
   347d4:	str	r2, [sp, #4]
   347d8:	ldr	r2, [pc, #1288]	; 34ce8 <__flatcc_fb_clear_parser@@Base+0x25b8>
   347dc:	add	r2, pc, r2
   347e0:	bl	2ddbc <__flatcc_error_report@@Base>
   347e4:	mov	r3, #1
   347e8:	strh	r3, [r5, #24]
   347ec:	ldr	r5, [r5]
   347f0:	cmp	r5, #0
   347f4:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   347f8:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   347fc:	mov	r4, r0
   34800:	ldr	r3, [r6, #4]
   34804:	add	r0, r4, #4
   34808:	ldm	r3, {r1, r2}
   3480c:	bl	2b998 <fb_symbol_table_find@@Base>
   34810:	subs	sl, r0, #0
   34814:	beq	34afc <__flatcc_fb_clear_parser@@Base+0x23cc>
   34818:	ldrh	r3, [sl, #8]
   3481c:	cmp	r3, #4
   34820:	bhi	34afc <__flatcc_fb_clear_parser@@Base+0x23cc>
   34824:	mov	r0, r9
   34828:	ldr	r1, [sl, #16]
   3482c:	bl	2b21c <ptr_set_find_item@@Base>
   34830:	cmp	r0, #0
   34834:	beq	34afc <__flatcc_fb_clear_parser@@Base+0x23cc>
   34838:	ldrh	r3, [sl, #8]
   3483c:	cmp	r3, #4
   34840:	addls	pc, pc, r3, lsl #2
   34844:	b	3544c <__flatcc_fb_clear_parser@@Base+0x2d1c>
   34848:	b	3485c <__flatcc_fb_clear_parser@@Base+0x212c>
   3484c:	b	3485c <__flatcc_fb_clear_parser@@Base+0x212c>
   34850:	b	3544c <__flatcc_fb_clear_parser@@Base+0x2d1c>
   34854:	b	3485c <__flatcc_fb_clear_parser@@Base+0x212c>
   34858:	b	3485c <__flatcc_fb_clear_parser@@Base+0x212c>
   3485c:	ldrh	r9, [r5, #56]	; 0x38
   34860:	cmp	r9, #0
   34864:	bne	353d4 <__flatcc_fb_clear_parser@@Base+0x2ca4>
   34868:	ldrh	r1, [sl, #104]	; 0x68
   3486c:	cmp	r3, #4
   34870:	mov	r0, #15
   34874:	ldrd	r2, [sl, #112]	; 0x70
   34878:	str	sl, [r5, #16]
   3487c:	strh	r0, [r5, #24]
   34880:	strh	r1, [r5, #74]	; 0x4a
   34884:	strd	r2, [r5, #88]	; 0x58
   34888:	bne	34714 <__flatcc_fb_clear_parser@@Base+0x1fe4>
   3488c:	ldr	r3, [sp, #16]
   34890:	cmp	r3, #0
   34894:	bne	35724 <__flatcc_fb_clear_parser@@Base+0x2ff4>
   34898:	ldr	r2, [sp, #36]	; 0x24
   3489c:	cmp	r2, #0
   348a0:	bne	348b0 <__flatcc_fb_clear_parser@@Base+0x2180>
   348a4:	ldrh	r3, [sp, #8]
   348a8:	str	r3, [r5, #96]	; 0x60
   348ac:	str	r2, [r5, #100]	; 0x64
   348b0:	ldr	r3, [sp, #8]
   348b4:	adds	r3, r3, #1
   348b8:	str	r3, [sp, #8]
   348bc:	mov	r3, #0
   348c0:	str	r3, [sp, #56]	; 0x38
   348c4:	ldr	r3, [sp, #12]
   348c8:	adc	r3, r3, #0
   348cc:	str	r3, [sp, #12]
   348d0:	b	34638 <__flatcc_fb_clear_parser@@Base+0x1f08>
   348d4:	ldr	r3, [sp, #20]
   348d8:	ldrd	r0, [r3, #8]
   348dc:	ldrd	r2, [fp, #216]	; 0xd8
   348e0:	cmp	r1, r3
   348e4:	cmpeq	r0, r2
   348e8:	bcs	35860 <__flatcc_fb_clear_parser@@Base+0x3130>
   348ec:	uxth	r3, r0
   348f0:	ldrd	r0, [sp, #72]	; 0x48
   348f4:	str	r3, [sp, #88]	; 0x58
   348f8:	str	ip, [sp, #92]	; 0x5c
   348fc:	ldrd	r2, [sp, #88]	; 0x58
   34900:	cmp	r1, r3
   34904:	strd	r2, [r5, #96]	; 0x60
   34908:	cmpeq	r0, r2
   3490c:	strdcc	r2, [sp, #72]	; 0x48
   34910:	ldr	r3, [sp, #36]	; 0x24
   34914:	cmp	r3, #0
   34918:	beq	35bf8 <__flatcc_fb_clear_parser@@Base+0x34c8>
   3491c:	ldr	r1, [sp, #60]	; 0x3c
   34920:	ldr	r3, [r5, #96]	; 0x60
   34924:	ldrb	r2, [r1, r3]
   34928:	add	r3, r1, r3
   3492c:	cmp	r2, #2
   34930:	beq	35268 <__flatcc_fb_clear_parser@@Base+0x2b38>
   34934:	cmp	r2, #0
   34938:	moveq	r2, #1
   3493c:	strbeq	r2, [r3]
   34940:	bne	351c8 <__flatcc_fb_clear_parser@@Base+0x2a98>
   34944:	cmp	sl, #0
   34948:	streq	sl, [sp, #16]
   3494c:	beq	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   34950:	ldrh	r3, [sl, #8]
   34954:	cmp	r3, #4
   34958:	movne	r3, #0
   3495c:	strne	r3, [sp, #16]
   34960:	bne	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   34964:	ldrd	r2, [r5, #96]	; 0x60
   34968:	ldrh	r1, [r5, #24]
   3496c:	cmp	r3, #0
   34970:	cmpeq	r2, #1
   34974:	bls	35410 <__flatcc_fb_clear_parser@@Base+0x2ce0>
   34978:	ldr	r0, [sp, #60]	; 0x3c
   3497c:	sub	r2, r2, #1
   34980:	ldrb	r3, [r0, r2]
   34984:	add	r2, r0, r2
   34988:	cmp	r3, #2
   3498c:	beq	358c4 <__flatcc_fb_clear_parser@@Base+0x3194>
   34990:	cmp	r3, #0
   34994:	beq	358b4 <__flatcc_fb_clear_parser@@Base+0x3184>
   34998:	ldr	r3, [sp, #20]
   3499c:	cmp	r1, #11
   349a0:	ldr	r1, [r3, #4]
   349a4:	beq	35b20 <__flatcc_fb_clear_parser@@Base+0x33f0>
   349a8:	ldr	r2, [pc, #828]	; 34cec <__flatcc_fb_clear_parser@@Base+0x25bc>
   349ac:	add	r2, pc, r2
   349b0:	b	35428 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   349b4:	mov	r4, r0
   349b8:	mov	r1, r8
   349bc:	add	r0, r4, #4
   349c0:	ldr	r2, [sp, #20]
   349c4:	bl	2b998 <fb_symbol_table_find@@Base>
   349c8:	subs	r9, r0, #0
   349cc:	beq	349f8 <__flatcc_fb_clear_parser@@Base+0x22c8>
   349d0:	ldrh	r3, [r9, #8]
   349d4:	cmp	r3, #4
   349d8:	bhi	349f8 <__flatcc_fb_clear_parser@@Base+0x22c8>
   349dc:	ldr	r1, [r9, #16]
   349e0:	ldr	r0, [sp, #40]	; 0x28
   349e4:	bl	2b21c <ptr_set_find_item@@Base>
   349e8:	cmp	r0, #0
   349ec:	beq	349f8 <__flatcc_fb_clear_parser@@Base+0x22c8>
   349f0:	mov	r3, r9
   349f4:	b	342ec <__flatcc_fb_clear_parser@@Base+0x1bbc>
   349f8:	ldr	r3, [r4]
   349fc:	cmp	r3, #0
   34a00:	beq	34a74 <__flatcc_fb_clear_parser@@Base+0x2344>
   34a04:	mov	r9, #0
   34a08:	b	34a10 <__flatcc_fb_clear_parser@@Base+0x22e0>
   34a0c:	mov	r9, r2
   34a10:	ldr	r3, [r3]
   34a14:	add	r2, r9, #1
   34a18:	cmp	r3, #0
   34a1c:	bne	34a0c <__flatcc_fb_clear_parser@@Base+0x22dc>
   34a20:	rsb	r9, r9, #0
   34a24:	ldr	r0, [fp, #412]	; 0x19c
   34a28:	b	34a50 <__flatcc_fb_clear_parser@@Base+0x2320>
   34a2c:	cmp	r0, #0
   34a30:	beq	34a4c <__flatcc_fb_clear_parser@@Base+0x231c>
   34a34:	mov	r2, r9
   34a38:	ldr	r1, [r4]
   34a3c:	bl	2ca20 <fb_scope_table_find@@Base>
   34a40:	cmp	r0, #0
   34a44:	bne	349b4 <__flatcc_fb_clear_parser@@Base+0x2284>
   34a48:	ldr	r0, [fp, #412]	; 0x19c
   34a4c:	add	r9, r9, #1
   34a50:	cmp	r9, #0
   34a54:	bne	34a2c <__flatcc_fb_clear_parser@@Base+0x22fc>
   34a58:	cmp	r0, #0
   34a5c:	beq	34a74 <__flatcc_fb_clear_parser@@Base+0x2344>
   34a60:	mov	r2, r9
   34a64:	mov	r1, r9
   34a68:	bl	2ca20 <fb_scope_table_find@@Base>
   34a6c:	subs	r4, r0, #0
   34a70:	bne	349b8 <__flatcc_fb_clear_parser@@Base+0x2288>
   34a74:	ldr	r1, [r6, #8]
   34a78:	ldr	ip, [r6, #12]
   34a7c:	mov	r3, #0
   34a80:	mov	r0, fp
   34a84:	ldr	r2, [pc, #612]	; 34cf0 <__flatcc_fb_clear_parser@@Base+0x25c0>
   34a88:	ldr	lr, [r6, #4]
   34a8c:	stm	sp, {r1, ip}
   34a90:	add	r2, pc, r2
   34a94:	mov	r1, lr
   34a98:	bl	2ddbc <__flatcc_error_report@@Base>
   34a9c:	ldrh	r8, [r5, #72]	; 0x48
   34aa0:	b	34314 <__flatcc_fb_clear_parser@@Base+0x1be4>
   34aa4:	mov	r3, r2
   34aa8:	ldr	r1, [r4, #4]
   34aac:	mov	r0, fp
   34ab0:	str	r2, [sp]
   34ab4:	str	r2, [sp, #4]
   34ab8:	ldr	r2, [pc, #564]	; 34cf4 <__flatcc_fb_clear_parser@@Base+0x25c4>
   34abc:	add	r2, pc, r2
   34ac0:	bl	2ddbc <__flatcc_error_report@@Base>
   34ac4:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34ac8:	mov	r2, #0
   34acc:	ldr	r1, [r5, #4]
   34ad0:	mov	r0, fp
   34ad4:	ldr	r3, [sl, #4]
   34ad8:	str	r2, [sp]
   34adc:	str	r2, [sp, #4]
   34ae0:	ldr	r2, [pc, #528]	; 34cf8 <__flatcc_fb_clear_parser@@Base+0x25c8>
   34ae4:	add	r2, pc, r2
   34ae8:	bl	2ddbc <__flatcc_error_report@@Base>
   34aec:	ldr	r5, [r5]
   34af0:	cmp	r5, #0
   34af4:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   34af8:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   34afc:	ldr	r3, [r4]
   34b00:	cmp	r3, #0
   34b04:	beq	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   34b08:	mov	sl, #0
   34b0c:	b	34b14 <__flatcc_fb_clear_parser@@Base+0x23e4>
   34b10:	mov	sl, r2
   34b14:	ldr	r3, [r3]
   34b18:	add	r2, sl, #1
   34b1c:	cmp	r3, #0
   34b20:	bne	34b10 <__flatcc_fb_clear_parser@@Base+0x23e0>
   34b24:	rsb	sl, sl, #0
   34b28:	b	34b58 <__flatcc_fb_clear_parser@@Base+0x2428>
   34b2c:	cmp	r8, #0
   34b30:	beq	34b54 <__flatcc_fb_clear_parser@@Base+0x2424>
   34b34:	ldr	r0, [fp, #412]	; 0x19c
   34b38:	cmp	r0, #0
   34b3c:	beq	34b54 <__flatcc_fb_clear_parser@@Base+0x2424>
   34b40:	mov	r2, sl
   34b44:	ldr	r1, [r4]
   34b48:	bl	2ca20 <fb_scope_table_find@@Base>
   34b4c:	cmp	r0, #0
   34b50:	bne	347fc <__flatcc_fb_clear_parser@@Base+0x20cc>
   34b54:	add	sl, sl, #1
   34b58:	cmp	sl, #0
   34b5c:	bne	34b2c <__flatcc_fb_clear_parser@@Base+0x23fc>
   34b60:	cmp	r8, #0
   34b64:	beq	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   34b68:	ldr	r0, [fp, #412]	; 0x19c
   34b6c:	cmp	r0, #0
   34b70:	beq	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   34b74:	mov	r2, sl
   34b78:	mov	r1, sl
   34b7c:	bl	2ca20 <fb_scope_table_find@@Base>
   34b80:	subs	r4, r0, #0
   34b84:	bne	34800 <__flatcc_fb_clear_parser@@Base+0x20d0>
   34b88:	b	345f0 <__flatcc_fb_clear_parser@@Base+0x1ec0>
   34b8c:	ldrh	r3, [r4, #16]
   34b90:	cmp	r3, #5
   34b94:	beq	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34b98:	ldr	r2, [pc, #348]	; 34cfc <__flatcc_fb_clear_parser@@Base+0x25cc>
   34b9c:	mov	r3, ip
   34ba0:	mov	r0, fp
   34ba4:	ldr	r1, [r4, #4]
   34ba8:	str	ip, [sp]
   34bac:	str	ip, [sp, #4]
   34bb0:	add	r2, pc, r2
   34bb4:	bl	2ddbc <__flatcc_error_report@@Base>
   34bb8:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34bbc:	cmp	r2, #6
   34bc0:	bne	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34bc4:	ldrh	r3, [r4, #16]
   34bc8:	cmp	r3, #6
   34bcc:	beq	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34bd0:	mov	ip, #0
   34bd4:	mov	r0, fp
   34bd8:	ldr	r1, [r4, #4]
   34bdc:	mov	r3, ip
   34be0:	str	ip, [sp]
   34be4:	str	ip, [sp, #4]
   34be8:	ldr	r2, [sp, #68]	; 0x44
   34bec:	bl	2ddbc <__flatcc_error_report@@Base>
   34bf0:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34bf4:	ldr	r3, [r5, #16]
   34bf8:	ldr	r3, [r3, #16]
   34bfc:	add	r3, r3, #996	; 0x3e4
   34c00:	add	r3, r3, #3
   34c04:	cmp	r3, #27
   34c08:	movhi	r3, sl
   34c0c:	bhi	34c20 <__flatcc_fb_clear_parser@@Base+0x24f0>
   34c10:	ldr	r2, [pc, #232]	; 34d00 <__flatcc_fb_clear_parser@@Base+0x25d0>
   34c14:	add	r2, pc, r2
   34c18:	add	r3, r2, r3, lsl #2
   34c1c:	ldr	r3, [r3, #16]
   34c20:	str	r3, [r5, #16]
   34c24:	b	33ef4 <__flatcc_fb_clear_parser@@Base+0x17c4>
   34c28:	ldr	r3, [fp, #112]	; 0x70
   34c2c:	mov	r1, #0
   34c30:	ldr	r2, [fp, #216]	; 0xd8
   34c34:	mov	r0, r3
   34c38:	str	r3, [sp, #60]	; 0x3c
   34c3c:	bl	13f70 <memset@plt>
   34c40:	ldr	r3, [sp, #16]
   34c44:	cmp	r3, #0
   34c48:	bne	34e34 <__flatcc_fb_clear_parser@@Base+0x2704>
   34c4c:	ldrd	r2, [fp, #216]	; 0xd8
   34c50:	orrs	r3, r2, r3
   34c54:	mov	r3, #1
   34c58:	str	r3, [sp, #36]	; 0x24
   34c5c:	bne	34424 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   34c60:	mov	r2, #0
   34c64:	ldr	r1, [r5, #4]
   34c68:	mov	ip, #1
   34c6c:	mov	r3, r2
   34c70:	mov	r0, fp
   34c74:	str	r2, [sp]
   34c78:	str	r2, [sp, #4]
   34c7c:	ldr	r2, [pc, #128]	; 34d04 <__flatcc_fb_clear_parser@@Base+0x25d4>
   34c80:	str	ip, [sp, #16]
   34c84:	add	r2, pc, r2
   34c88:	bl	2ddbc <__flatcc_error_report@@Base>
   34c8c:	b	34424 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   34c90:	andeq	r4, r2, r0, asr sl
   34c94:	andeq	r4, r2, ip, lsr #10
   34c98:	andeq	r4, r2, r8, ror #20
   34c9c:	andeq	r4, r2, ip, ror #17
   34ca0:	andeq	r4, r2, r4, lsl #18
   34ca4:	andeq	r4, r2, r0, lsr #16
   34ca8:	andeq	r4, r2, r4, lsl r9
   34cac:	andeq	r5, r2, r4, asr #9
   34cb0:	andeq	r4, r2, r8, ror #6
   34cb4:	andeq	r4, r2, r4, lsl #17
   34cb8:	andeq	r4, r2, ip, asr #15
   34cbc:	andeq	r4, r2, r0, ror r6
   34cc0:	andeq	r5, r2, r0, asr #32
   34cc4:	andeq	r4, r2, r0, asr #10
   34cc8:	andeq	r4, r2, ip, asr r4
   34ccc:	andeq	r4, r2, ip, asr #10
   34cd0:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   34cd4:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   34cd8:	andeq	r4, r2, ip, asr #22
   34cdc:	andeq	r4, r2, ip, lsl ip
   34ce0:	andeq	r3, r2, ip, ror #20
   34ce4:	andeq	r3, r2, r0, asr #20
   34ce8:	andeq	r4, r2, r8, ror #14
   34cec:	andeq	r4, r2, r8, ror #5
   34cf0:	strdeq	r4, [r2], -r0
   34cf4:	andeq	r3, r2, r8, asr fp
   34cf8:	andeq	r4, r2, r0, lsl r2
   34cfc:	andeq	r3, r2, r8, lsr #22
   34d00:	ldrdeq	r3, [r2], -r4
   34d04:	andeq	r4, r2, r8, ror #4
   34d08:			; <UNDEFINED> instruction: 0x000238b4
   34d0c:	andeq	r4, r2, ip, lsl #1
   34d10:			; <UNDEFINED> instruction: 0x000237b0
   34d14:	andeq	r3, r2, r4, asr #16
   34d18:	andeq	r3, r2, ip, lsl #30
   34d1c:	andeq	r4, r2, r8, lsr r0
   34d20:	andeq	r4, r2, r0, lsl #7
   34d24:	andeq	r4, r2, r8, ror #5
   34d28:	andeq	r4, r2, r0, asr r0
   34d2c:	andeq	r4, r2, r0, lsr #2
   34d30:	andeq	r3, r2, r4, lsl #22
   34d34:	ldrdeq	r3, [r2], -ip
   34d38:	andeq	r4, r2, r0, asr #32
   34d3c:	ldrdeq	r3, [r2], -r8
   34d40:	andeq	r3, r2, r4, lsr sp
   34d44:	andeq	r3, r2, r8, lsl sp
   34d48:	andeq	r3, r2, ip, lsl #25
   34d4c:	andeq	r3, r2, ip, lsl #14
   34d50:	andeq	r3, r2, ip, lsl sp
   34d54:	andeq	r3, r2, r8, lsr #19
   34d58:	andeq	r3, r2, ip, lsl #18
   34d5c:	strdeq	r3, [r2], -r4
   34d60:	andeq	r3, r2, r4, lsr #23
   34d64:	andeq	r3, r2, ip, lsr #12
   34d68:	andeq	r3, r2, r4, ror r8
   34d6c:			; <UNDEFINED> instruction: 0x000237b8
   34d70:	strdeq	r3, [r2], -r4
   34d74:	andeq	r3, r2, r8, asr #21
   34d78:	andeq	r3, r2, r8, lsl #6
   34d7c:	andeq	r3, r2, r8, asr #32
   34d80:	andeq	r3, r2, r4, rrx
   34d84:	andeq	r3, r2, r8, lsl r1
   34d88:	andeq	r3, r2, r0, lsl #5
   34d8c:	andeq	r3, r2, r0, asr #10
   34d90:	andeq	r3, r2, r0, lsl r2
   34d94:	andeq	r2, r2, r4, lsr r6
   34d98:	muleq	r2, r0, r7
   34d9c:	andeq	r3, r2, ip, asr #6
   34da0:	andeq	r2, r2, r4, lsl #12
   34da4:	andeq	r2, r2, r0, ror #14
   34da8:	strdeq	r3, [r2], -r4
   34dac:	ldrdeq	r2, [r2], -r4
   34db0:	andeq	r2, r2, r0, lsr r7
   34db4:	andeq	sl, r0, r4, asr lr
   34db8:	andeq	r3, r2, r8, asr r5
   34dbc:			; <UNDEFINED> instruction: 0x000233b4
   34dc0:	mov	r3, r2
   34dc4:	ldr	r1, [r4, #4]
   34dc8:	mov	r0, fp
   34dcc:	str	r2, [sp]
   34dd0:	str	r2, [sp, #4]
   34dd4:	ldr	r2, [pc, #-212]	; 34d08 <__flatcc_fb_clear_parser@@Base+0x25d8>
   34dd8:	add	r2, pc, r2
   34ddc:	bl	2ddbc <__flatcc_error_report@@Base>
   34de0:	b	33f64 <__flatcc_fb_clear_parser@@Base+0x1834>
   34de4:	sub	r3, ip, r2
   34de8:	mov	r8, r2
   34dec:	mov	r2, r0
   34df0:	str	r3, [sp, #20]
   34df4:	add	r8, r1, r8
   34df8:	b	34294 <__flatcc_fb_clear_parser@@Base+0x1b64>
   34dfc:	ldr	r3, [r5, #16]
   34e00:	cmp	r3, #4
   34e04:	bne	34384 <__flatcc_fb_clear_parser@@Base+0x1c54>
   34e08:	b	343a8 <__flatcc_fb_clear_parser@@Base+0x1c78>
   34e0c:	mov	r2, #0
   34e10:	ldr	r1, [r5, #4]
   34e14:	mov	r0, fp
   34e18:	mov	r3, r2
   34e1c:	str	r2, [sp]
   34e20:	str	r2, [sp, #4]
   34e24:	ldr	r2, [pc, #-288]	; 34d0c <__flatcc_fb_clear_parser@@Base+0x25dc>
   34e28:	add	r2, pc, r2
   34e2c:	bl	2ddbc <__flatcc_error_report@@Base>
   34e30:	b	343b8 <__flatcc_fb_clear_parser@@Base+0x1c88>
   34e34:	ldr	r3, [sp, #16]
   34e38:	mov	r2, #0
   34e3c:	str	r3, [sp, #36]	; 0x24
   34e40:	mov	r3, #0
   34e44:	strd	r2, [sp, #8]
   34e48:	b	3443c <__flatcc_fb_clear_parser@@Base+0x1d0c>
   34e4c:	mov	r3, r2
   34e50:	ldr	r1, [r4, #4]
   34e54:	mov	r0, fp
   34e58:	str	r2, [sp]
   34e5c:	str	r2, [sp, #4]
   34e60:	ldr	r2, [pc, #-344]	; 34d10 <__flatcc_fb_clear_parser@@Base+0x25e0>
   34e64:	add	r2, pc, r2
   34e68:	bl	2ddbc <__flatcc_error_report@@Base>
   34e6c:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34e70:	ldrh	r3, [r4, #16]
   34e74:	cmp	r3, #5
   34e78:	beq	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34e7c:	ldr	r2, [pc, #-368]	; 34d14 <__flatcc_fb_clear_parser@@Base+0x25e4>
   34e80:	mov	r3, ip
   34e84:	mov	r0, fp
   34e88:	ldr	r1, [r4, #4]
   34e8c:	str	ip, [sp]
   34e90:	str	ip, [sp, #4]
   34e94:	add	r2, pc, r2
   34e98:	bl	2ddbc <__flatcc_error_report@@Base>
   34e9c:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34ea0:	cmp	r2, #6
   34ea4:	bne	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34ea8:	ldrh	r3, [r4, #16]
   34eac:	cmp	r3, #6
   34eb0:	beq	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34eb4:	mov	ip, #0
   34eb8:	mov	r2, r8
   34ebc:	ldr	r1, [r4, #4]
   34ec0:	mov	r3, ip
   34ec4:	mov	r0, fp
   34ec8:	str	ip, [sp]
   34ecc:	str	ip, [sp, #4]
   34ed0:	bl	2ddbc <__flatcc_error_report@@Base>
   34ed4:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34ed8:	mov	r2, #0
   34edc:	ldr	r1, [r5, #4]
   34ee0:	mov	r0, fp
   34ee4:	mov	r3, r2
   34ee8:	str	r2, [sp]
   34eec:	str	r2, [sp, #4]
   34ef0:	ldr	r2, [pc, #-480]	; 34d18 <__flatcc_fb_clear_parser@@Base+0x25e8>
   34ef4:	add	r2, pc, r2
   34ef8:	bl	2ddbc <__flatcc_error_report@@Base>
   34efc:	ldrh	r8, [r5, #72]	; 0x48
   34f00:	b	34328 <__flatcc_fb_clear_parser@@Base+0x1bf8>
   34f04:	cmp	r3, #1
   34f08:	movne	r1, ip
   34f0c:	moveq	r1, #0
   34f10:	cmn	fp, #352	; 0x160
   34f14:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x2848>
   34f18:	ldr	r0, [fp, #412]	; 0x19c
   34f1c:	cmp	r0, #0
   34f20:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x2848>
   34f24:	rsb	r2, r2, #0
   34f28:	bl	2ca20 <fb_scope_table_find@@Base>
   34f2c:	cmp	r0, #0
   34f30:	beq	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   34f34:	ldr	r3, [r8, #4]
   34f38:	add	r0, r0, #4
   34f3c:	ldm	r3, {r1, r2}
   34f40:	bl	2b998 <fb_symbol_table_find@@Base>
   34f44:	subs	sl, r0, #0
   34f48:	beq	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   34f4c:	ldrh	r3, [sl, #8]
   34f50:	cmp	r3, #4
   34f54:	bhi	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   34f58:	add	r3, fp, #524	; 0x20c
   34f5c:	ldr	r1, [sl, #16]
   34f60:	mov	r0, r3
   34f64:	str	r3, [sp, #64]	; 0x40
   34f68:	bl	2b21c <ptr_set_find_item@@Base>
   34f6c:	cmp	r0, #0
   34f70:	bne	34508 <__flatcc_fb_clear_parser@@Base+0x1dd8>
   34f74:	ldr	ip, [r5, #16]
   34f78:	mov	r3, r5
   34f7c:	mov	r1, ip
   34f80:	ldr	r2, [pc, #-620]	; 34d1c <__flatcc_fb_clear_parser@@Base+0x25ec>
   34f84:	mov	r0, fp
   34f88:	add	r2, pc, r2
   34f8c:	bl	2f53c <error_ref_sym@@Base>
   34f90:	mov	r3, #1
   34f94:	str	r3, [sp, #16]
   34f98:	strh	r3, [r5, #24]
   34f9c:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   34fa0:	ldrd	r0, [sp, #8]
   34fa4:	ldr	r3, [sp, #36]	; 0x24
   34fa8:	cmp	r3, #0
   34fac:	ldr	r3, [sp, #32]
   34fb0:	strd	r0, [r3, #96]	; 0x60
   34fb4:	beq	35c28 <__flatcc_fb_clear_parser@@Base+0x34f8>
   34fb8:	ldrd	r4, [sp, #72]	; 0x48
   34fbc:	mov	r3, r0
   34fc0:	orrs	r3, r3, r1
   34fc4:	movne	r3, #1
   34fc8:	moveq	r3, #0
   34fcc:	cmp	r1, r5
   34fd0:	cmpeq	r0, r4
   34fd4:	movhi	r3, #0
   34fd8:	andls	r3, r3, #1
   34fdc:	cmp	r3, #0
   34fe0:	beq	35314 <__flatcc_fb_clear_parser@@Base+0x2be4>
   34fe4:	mov	r2, r4
   34fe8:	mov	r3, r5
   34fec:	orrs	r1, r2, r3
   34ff0:	beq	35080 <__flatcc_fb_clear_parser@@Base+0x2950>
   34ff4:	ldr	r1, [pc, #-732]	; 34d20 <__flatcc_fb_clear_parser@@Base+0x25f0>
   34ff8:	mov	r5, #0
   34ffc:	add	r9, sp, #156	; 0x9c
   35000:	mov	r8, r5
   35004:	add	r1, pc, r1
   35008:	str	r1, [sp, #8]
   3500c:	ldr	r1, [sp, #60]	; 0x3c
   35010:	add	r6, r1, r2
   35014:	sub	r4, r1, #1
   35018:	sub	r6, r6, #1
   3501c:	mov	r1, #10
   35020:	ldrb	r7, [r4, #1]!
   35024:	cmp	r7, #0
   35028:	bne	35070 <__flatcc_fb_clear_parser@@Base+0x2940>
   3502c:	cmp	r1, #0
   35030:	sub	sl, r1, #1
   35034:	beq	3588c <__flatcc_fb_clear_parser@@Base+0x315c>
   35038:	mov	r2, r5
   3503c:	mov	r3, r8
   35040:	ldr	r1, [sp, #8]
   35044:	mov	r0, r9
   35048:	bl	13fc4 <sprintf@plt>
   3504c:	ldr	r1, [sp, #32]
   35050:	mov	r3, r7
   35054:	mov	r2, r9
   35058:	mov	r0, fp
   3505c:	str	r7, [sp]
   35060:	str	r7, [sp, #4]
   35064:	ldr	r1, [r1, #4]
   35068:	bl	2ddbc <__flatcc_error_report@@Base>
   3506c:	mov	r1, sl
   35070:	adds	r5, r5, #1
   35074:	adc	r8, r8, #0
   35078:	cmp	r6, r4
   3507c:	bne	35020 <__flatcc_fb_clear_parser@@Base+0x28f0>
   35080:	ldr	r2, [sp, #52]	; 0x34
   35084:	cmp	r2, #0
   35088:	beq	3413c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   3508c:	ldr	r1, [sp, #32]
   35090:	cmp	r2, #1
   35094:	ldrh	r3, [r1, #10]
   35098:	orr	r3, r3, #8
   3509c:	strh	r3, [r1, #10]
   350a0:	beq	3413c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   350a4:	ldr	r3, [fp, #156]	; 0x9c
   350a8:	cmp	r3, #0
   350ac:	bne	3413c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   350b0:	mov	r1, #0
   350b4:	ldr	r2, [pc, #-920]	; 34d24 <__flatcc_fb_clear_parser@@Base+0x25f4>
   350b8:	mov	r0, fp
   350bc:	mov	r3, r1
   350c0:	str	r1, [sp]
   350c4:	str	r1, [sp, #4]
   350c8:	mvn	r1, #0
   350cc:	ldr	ip, [sp, #36]	; 0x24
   350d0:	add	r2, pc, r2
   350d4:	str	r1, [sp, #52]	; 0x34
   350d8:	ldr	r1, [sp, #32]
   350dc:	str	ip, [sp, #16]
   350e0:	ldr	r1, [r1, #4]
   350e4:	bl	2ddbc <__flatcc_error_report@@Base>
   350e8:	b	34130 <__flatcc_fb_clear_parser@@Base+0x1a00>
   350ec:	ldr	r2, [r4]
   350f0:	cmp	r2, #0
   350f4:	beq	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   350f8:	mov	r3, #0
   350fc:	b	35104 <__flatcc_fb_clear_parser@@Base+0x29d4>
   35100:	mov	r3, r1
   35104:	ldr	r2, [r2]
   35108:	add	r1, r3, #1
   3510c:	cmp	r2, #0
   35110:	bne	35100 <__flatcc_fb_clear_parser@@Base+0x29d0>
   35114:	rsb	sl, r3, #0
   35118:	b	35148 <__flatcc_fb_clear_parser@@Base+0x2a18>
   3511c:	cmp	r9, #0
   35120:	beq	35144 <__flatcc_fb_clear_parser@@Base+0x2a14>
   35124:	ldr	r0, [fp, #412]	; 0x19c
   35128:	cmp	r0, #0
   3512c:	beq	35144 <__flatcc_fb_clear_parser@@Base+0x2a14>
   35130:	mov	r2, sl
   35134:	ldr	r1, [r4]
   35138:	bl	2ca20 <fb_scope_table_find@@Base>
   3513c:	cmp	r0, #0
   35140:	bne	3517c <__flatcc_fb_clear_parser@@Base+0x2a4c>
   35144:	add	sl, sl, #1
   35148:	cmp	sl, #0
   3514c:	bne	3511c <__flatcc_fb_clear_parser@@Base+0x29ec>
   35150:	cmp	r9, #0
   35154:	beq	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   35158:	ldr	r0, [fp, #412]	; 0x19c
   3515c:	cmp	r0, #0
   35160:	beq	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   35164:	mov	r2, sl
   35168:	mov	r1, sl
   3516c:	bl	2ca20 <fb_scope_table_find@@Base>
   35170:	subs	r4, r0, #0
   35174:	bne	344c8 <__flatcc_fb_clear_parser@@Base+0x1d98>
   35178:	b	34f74 <__flatcc_fb_clear_parser@@Base+0x2844>
   3517c:	mov	r4, r0
   35180:	b	344c8 <__flatcc_fb_clear_parser@@Base+0x1d98>
   35184:	mov	r2, #0
   35188:	ldr	r1, [r3, #4]
   3518c:	mov	ip, #1
   35190:	mov	r3, r2
   35194:	mov	r0, fp
   35198:	str	r2, [sp]
   3519c:	str	r2, [sp, #4]
   351a0:	ldr	r2, [pc, #-1152]	; 34d28 <__flatcc_fb_clear_parser@@Base+0x25f8>
   351a4:	str	ip, [sp, #16]
   351a8:	add	r2, pc, r2
   351ac:	bl	2ddbc <__flatcc_error_report@@Base>
   351b0:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   351b4:	tst	r8, #1024	; 0x400
   351b8:	beq	34370 <__flatcc_fb_clear_parser@@Base+0x1c40>
   351bc:	tst	r8, #2048	; 0x800
   351c0:	beq	343ac <__flatcc_fb_clear_parser@@Base+0x1c7c>
   351c4:	b	343a8 <__flatcc_fb_clear_parser@@Base+0x1c78>
   351c8:	ldr	r3, [sp, #20]
   351cc:	mov	r2, #0
   351d0:	mov	r0, fp
   351d4:	ldr	r1, [r3, #4]
   351d8:	mov	r3, r2
   351dc:	str	r2, [sp]
   351e0:	str	r2, [sp, #4]
   351e4:	ldr	r2, [pc, #-1216]	; 34d2c <__flatcc_fb_clear_parser@@Base+0x25fc>
   351e8:	add	r2, pc, r2
   351ec:	bl	2ddbc <__flatcc_error_report@@Base>
   351f0:	b	34944 <__flatcc_fb_clear_parser@@Base+0x2214>
   351f4:	mvn	r2, #0
   351f8:	mov	r3, sl
   351fc:	ldr	r1, [r5, #4]
   35200:	mov	r0, fp
   35204:	str	sl, [sp]
   35208:	str	sl, [sp, #4]
   3520c:	str	r2, [sp, #52]	; 0x34
   35210:	ldr	r2, [pc, #-1256]	; 34d30 <__flatcc_fb_clear_parser@@Base+0x2600>
   35214:	add	r2, pc, r2
   35218:	bl	2ddbc <__flatcc_error_report@@Base>
   3521c:	ldr	r0, [sp, #52]	; 0x34
   35220:	add	sp, sp, #260	; 0x104
   35224:	ldrd	r4, [sp]
   35228:	ldrd	r6, [sp, #8]
   3522c:	ldrd	r8, [sp, #16]
   35230:	ldrd	sl, [sp, #24]
   35234:	add	sp, sp, #32
   35238:	pop	{pc}		; (ldr pc, [sp], #4)
   3523c:	mov	r3, r2
   35240:	ldr	r1, [r5, #4]
   35244:	mov	ip, #1
   35248:	str	r2, [sp]
   3524c:	mov	r0, fp
   35250:	str	r2, [sp, #4]
   35254:	ldr	r2, [pc, #-1320]	; 34d34 <__flatcc_fb_clear_parser@@Base+0x2604>
   35258:	str	ip, [sp, #16]
   3525c:	add	r2, pc, r2
   35260:	bl	2ddbc <__flatcc_error_report@@Base>
   35264:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   35268:	ldr	r3, [sp, #20]
   3526c:	mov	r2, #0
   35270:	mov	r0, fp
   35274:	ldr	ip, [sp, #36]	; 0x24
   35278:	ldr	r1, [r3, #4]
   3527c:	mov	r3, r2
   35280:	str	r2, [sp]
   35284:	str	r2, [sp, #4]
   35288:	ldr	r2, [pc, #-1368]	; 34d38 <__flatcc_fb_clear_parser@@Base+0x2608>
   3528c:	str	ip, [sp, #16]
   35290:	add	r2, pc, r2
   35294:	bl	2ddbc <__flatcc_error_report@@Base>
   35298:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   3529c:	mov	r3, r2
   352a0:	ldr	r1, [r4, #4]
   352a4:	mov	r0, fp
   352a8:	str	r2, [sp]
   352ac:	str	r2, [sp, #4]
   352b0:	ldr	r2, [pc, #-1404]	; 34d3c <__flatcc_fb_clear_parser@@Base+0x260c>
   352b4:	add	r2, pc, r2
   352b8:	bl	2ddbc <__flatcc_error_report@@Base>
   352bc:	b	33ce8 <__flatcc_fb_clear_parser@@Base+0x15b8>
   352c0:	ldrh	r3, [r5, #72]	; 0x48
   352c4:	tst	r3, #256	; 0x100
   352c8:	bne	3581c <__flatcc_fb_clear_parser@@Base+0x30ec>
   352cc:	ldr	r3, [fp, #148]	; 0x94
   352d0:	str	r3, [sp, #56]	; 0x38
   352d4:	b	34008 <__flatcc_fb_clear_parser@@Base+0x18d8>
   352d8:	mov	r2, #0
   352dc:	ldr	r1, [r5, #4]
   352e0:	mov	r0, fp
   352e4:	ldr	r3, [sl, #4]
   352e8:	str	r2, [sp]
   352ec:	str	r2, [sp, #4]
   352f0:	ldr	r2, [pc, #-1464]	; 34d40 <__flatcc_fb_clear_parser@@Base+0x2610>
   352f4:	add	r2, pc, r2
   352f8:	bl	2ddbc <__flatcc_error_report@@Base>
   352fc:	mov	r3, #1
   35300:	strh	r3, [r5, #24]
   35304:	ldr	r5, [r5]
   35308:	cmp	r5, #0
   3530c:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   35310:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35314:	ldr	r2, [sp, #52]	; 0x34
   35318:	cmp	r2, #0
   3531c:	beq	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   35320:	ldr	r1, [sp, #32]
   35324:	cmp	r2, #1
   35328:	ldrh	r3, [r1, #10]
   3532c:	orr	r3, r3, #8
   35330:	strh	r3, [r1, #10]
   35334:	beq	35348 <__flatcc_fb_clear_parser@@Base+0x2c18>
   35338:	ldr	r3, [fp, #156]	; 0x9c
   3533c:	cmp	r3, #0
   35340:	str	r3, [sp, #36]	; 0x24
   35344:	beq	350b0 <__flatcc_fb_clear_parser@@Base+0x2980>
   35348:	ldr	r3, [sp, #16]
   3534c:	str	r3, [sp, #52]	; 0x34
   35350:	b	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   35354:	cmp	r0, #3
   35358:	bne	357ec <__flatcc_fb_clear_parser@@Base+0x30bc>
   3535c:	cmp	r3, #13
   35360:	beq	358e0 <__flatcc_fb_clear_parser@@Base+0x31b0>
   35364:	add	r4, r5, #48	; 0x30
   35368:	mov	r1, r5
   3536c:	ldr	r2, [sl, #40]	; 0x28
   35370:	mov	r3, r4
   35374:	mov	r0, fp
   35378:	bl	37a90 <__flatcc_fb_coerce_scalar_type@@Base>
   3537c:	cmp	r0, #0
   35380:	bne	347e4 <__flatcc_fb_clear_parser@@Base+0x20b4>
   35384:	ldr	r3, [fp, #212]	; 0xd4
   35388:	cmp	r3, #0
   3538c:	beq	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   35390:	ldr	r0, [r5, #16]
   35394:	mov	r1, r4
   35398:	add	r0, r0, #72	; 0x48
   3539c:	bl	3e9d0 <fb_value_set_find_item@@Base>
   353a0:	subs	r2, r0, #0
   353a4:	bne	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   353a8:	mov	r3, r2
   353ac:	ldr	r1, [r5, #4]
   353b0:	mov	r0, fp
   353b4:	str	r2, [sp]
   353b8:	str	r2, [sp, #4]
   353bc:	ldr	r2, [pc, #-1664]	; 34d44 <__flatcc_fb_clear_parser@@Base+0x2614>
   353c0:	add	r2, pc, r2
   353c4:	bl	2ddbc <__flatcc_error_report@@Base>
   353c8:	mov	r3, #1
   353cc:	strh	r3, [r5, #24]
   353d0:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   353d4:	mov	r2, #0
   353d8:	ldr	r1, [r5, #4]
   353dc:	mov	r0, fp
   353e0:	mov	r3, r2
   353e4:	str	r2, [sp]
   353e8:	str	r2, [sp, #4]
   353ec:	ldr	r2, [pc, #-1708]	; 34d48 <__flatcc_fb_clear_parser@@Base+0x2618>
   353f0:	add	r2, pc, r2
   353f4:	bl	2ddbc <__flatcc_error_report@@Base>
   353f8:	mov	r3, #1
   353fc:	strh	r3, [r5, #24]
   35400:	ldr	r5, [r5]
   35404:	cmp	r5, #0
   35408:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   3540c:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35410:	ldr	r3, [sp, #20]
   35414:	cmp	r1, #11
   35418:	ldr	r1, [r3, #4]
   3541c:	beq	35a94 <__flatcc_fb_clear_parser@@Base+0x3364>
   35420:	ldr	r2, [pc, #-1756]	; 34d4c <__flatcc_fb_clear_parser@@Base+0x261c>
   35424:	add	r2, pc, r2
   35428:	mov	ip, #0
   3542c:	mov	r0, fp
   35430:	mov	r3, ip
   35434:	str	ip, [sp]
   35438:	str	ip, [sp, #4]
   3543c:	ldr	ip, [sp, #36]	; 0x24
   35440:	str	ip, [sp, #16]
   35444:	bl	2ddbc <__flatcc_error_report@@Base>
   35448:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   3544c:	mov	r2, #0
   35450:	ldr	r1, [r5, #4]
   35454:	mov	r0, fp
   35458:	ldr	r3, [r5, #16]
   3545c:	str	r2, [sp]
   35460:	str	r2, [sp, #4]
   35464:	ldr	r2, [pc, #-1820]	; 34d50 <__flatcc_fb_clear_parser@@Base+0x2620>
   35468:	add	r2, pc, r2
   3546c:	bl	2ddbc <__flatcc_error_report@@Base>
   35470:	mov	r3, #1
   35474:	strh	r3, [r5, #24]
   35478:	ldr	r5, [r5]
   3547c:	cmp	r5, #0
   35480:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   35484:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35488:	ldr	ip, [r5, #48]	; 0x30
   3548c:	ldr	r3, [sp, #32]
   35490:	cmp	ip, #0
   35494:	ldr	r4, [r3, #12]
   35498:	beq	35ba4 <__flatcc_fb_clear_parser@@Base+0x3474>
   3549c:	mov	r0, #0
   354a0:	mov	r8, ip
   354a4:	mov	r2, r0
   354a8:	b	354b8 <__flatcc_fb_clear_parser@@Base+0x2d88>
   354ac:	mov	r0, r8
   354b0:	mov	r2, r1
   354b4:	mov	r8, r3
   354b8:	ldr	r3, [r8]
   354bc:	add	r1, r2, #1
   354c0:	cmp	r3, #0
   354c4:	bne	354ac <__flatcc_fb_clear_parser@@Base+0x2d7c>
   354c8:	cmp	r0, #0
   354cc:	mov	r6, r0
   354d0:	mov	r9, r0
   354d4:	beq	35558 <__flatcc_fb_clear_parser@@Base+0x2e28>
   354d8:	sub	r3, r2, #1
   354dc:	cmp	r4, #0
   354e0:	clz	r3, r3
   354e4:	lsr	r3, r3, #5
   354e8:	moveq	r3, #0
   354ec:	cmp	r3, #0
   354f0:	beq	35740 <__flatcc_fb_clear_parser@@Base+0x3010>
   354f4:	add	r3, fp, #524	; 0x20c
   354f8:	add	r6, fp, #352	; 0x160
   354fc:	str	r3, [sp, #64]	; 0x40
   35500:	str	r8, [sp, #84]	; 0x54
   35504:	ldr	r3, [r9, #4]
   35508:	add	r0, r4, #4
   3550c:	ldm	r3, {r1, r2}
   35510:	bl	2b998 <fb_symbol_table_find@@Base>
   35514:	subs	r3, r0, #0
   35518:	beq	355b0 <__flatcc_fb_clear_parser@@Base+0x2e80>
   3551c:	ldrh	r2, [r3, #8]
   35520:	cmp	r2, #4
   35524:	bhi	355b0 <__flatcc_fb_clear_parser@@Base+0x2e80>
   35528:	ldr	r1, [r3, #16]
   3552c:	str	r3, [sp, #56]	; 0x38
   35530:	ldr	r0, [sp, #64]	; 0x40
   35534:	bl	2b21c <ptr_set_find_item@@Base>
   35538:	cmp	r0, #0
   3553c:	ldr	r3, [sp, #56]	; 0x38
   35540:	beq	355b0 <__flatcc_fb_clear_parser@@Base+0x2e80>
   35544:	ldr	r8, [sp, #84]	; 0x54
   35548:	ldrh	r2, [r3, #8]
   3554c:	cmp	r2, #3
   35550:	beq	3557c <__flatcc_fb_clear_parser@@Base+0x2e4c>
   35554:	ldr	ip, [r5, #48]	; 0x30
   35558:	mov	r3, r5
   3555c:	mov	r1, ip
   35560:	ldr	r2, [pc, #-2068]	; 34d54 <__flatcc_fb_clear_parser@@Base+0x2624>
   35564:	mov	r0, fp
   35568:	add	r2, pc, r2
   3556c:	bl	2f53c <error_ref_sym@@Base>
   35570:	mov	r3, #1
   35574:	strh	r3, [r5, #24]
   35578:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   3557c:	ldr	r2, [r8, #4]
   35580:	add	r0, r3, #56	; 0x38
   35584:	ldm	r2, {r1, r2}
   35588:	bl	2b998 <fb_symbol_table_find@@Base>
   3558c:	cmp	r0, #0
   35590:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35594:	ldrd	r2, [r0, #48]	; 0x30
   35598:	add	r1, r5, #48	; 0x30
   3559c:	strd	r2, [r5, #48]	; 0x30
   355a0:	ldrd	r2, [r0, #56]	; 0x38
   355a4:	strd	r2, [r1, #8]
   355a8:	uxth	r2, r2
   355ac:	b	3472c <__flatcc_fb_clear_parser@@Base+0x1ffc>
   355b0:	ldr	r2, [r4]
   355b4:	cmp	r2, #0
   355b8:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   355bc:	mov	r3, #0
   355c0:	b	355c8 <__flatcc_fb_clear_parser@@Base+0x2e98>
   355c4:	mov	r3, r1
   355c8:	ldr	r2, [r2]
   355cc:	add	r1, r3, #1
   355d0:	cmp	r2, #0
   355d4:	bne	355c4 <__flatcc_fb_clear_parser@@Base+0x2e94>
   355d8:	rsb	r8, r3, #0
   355dc:	b	3560c <__flatcc_fb_clear_parser@@Base+0x2edc>
   355e0:	cmp	r6, #0
   355e4:	beq	35608 <__flatcc_fb_clear_parser@@Base+0x2ed8>
   355e8:	ldr	r0, [fp, #412]	; 0x19c
   355ec:	cmp	r0, #0
   355f0:	beq	35608 <__flatcc_fb_clear_parser@@Base+0x2ed8>
   355f4:	mov	r2, r8
   355f8:	ldr	r1, [r4]
   355fc:	bl	2ca20 <fb_scope_table_find@@Base>
   35600:	cmp	r0, #0
   35604:	bne	35640 <__flatcc_fb_clear_parser@@Base+0x2f10>
   35608:	add	r8, r8, #1
   3560c:	cmp	r8, #0
   35610:	bne	355e0 <__flatcc_fb_clear_parser@@Base+0x2eb0>
   35614:	cmp	r6, #0
   35618:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   3561c:	ldr	r0, [fp, #412]	; 0x19c
   35620:	cmp	r0, #0
   35624:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35628:	mov	r2, r8
   3562c:	mov	r1, r8
   35630:	bl	2ca20 <fb_scope_table_find@@Base>
   35634:	subs	r4, r0, #0
   35638:	bne	35504 <__flatcc_fb_clear_parser@@Base+0x2dd4>
   3563c:	b	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35640:	mov	r4, r0
   35644:	b	35504 <__flatcc_fb_clear_parser@@Base+0x2dd4>
   35648:	mov	r2, #0
   3564c:	ldr	r1, [r5, #4]
   35650:	mov	r0, fp
   35654:	mov	r3, r2
   35658:	str	r2, [sp]
   3565c:	str	r2, [sp, #4]
   35660:	ldr	r2, [pc, #-2320]	; 34d58 <__flatcc_fb_clear_parser@@Base+0x2628>
   35664:	add	r2, pc, r2
   35668:	bl	2ddbc <__flatcc_error_report@@Base>
   3566c:	mov	r3, #1
   35670:	strh	r3, [r5, #24]
   35674:	ldr	r5, [r5]
   35678:	cmp	r5, #0
   3567c:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   35680:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35684:	mov	r2, #0
   35688:	ldr	r1, [r5, #4]
   3568c:	mov	r0, fp
   35690:	mov	r3, r2
   35694:	str	r2, [sp]
   35698:	str	r2, [sp, #4]
   3569c:	ldr	r2, [pc, #-2376]	; 34d5c <__flatcc_fb_clear_parser@@Base+0x262c>
   356a0:	add	r2, pc, r2
   356a4:	bl	2ddbc <__flatcc_error_report@@Base>
   356a8:	mov	r3, #1
   356ac:	strh	r3, [r5, #24]
   356b0:	ldr	r5, [r5]
   356b4:	cmp	r5, #0
   356b8:	bne	33eb8 <__flatcc_fb_clear_parser@@Base+0x1788>
   356bc:	b	340e8 <__flatcc_fb_clear_parser@@Base+0x19b8>
   356c0:	mov	r3, #0
   356c4:	mov	r2, ip
   356c8:	mov	r8, r1
   356cc:	str	r3, [sp, #20]
   356d0:	b	34294 <__flatcc_fb_clear_parser@@Base+0x1b64>
   356d4:	mov	r3, #0
   356d8:	mov	r8, ip
   356dc:	str	r3, [sp, #20]
   356e0:	b	34df4 <__flatcc_fb_clear_parser@@Base+0x26c4>
   356e4:	mov	sl, r4
   356e8:	b	33e48 <__flatcc_fb_clear_parser@@Base+0x1718>
   356ec:	ldr	r2, [pc, #-2452]	; 34d60 <__flatcc_fb_clear_parser@@Base+0x2630>
   356f0:	add	r2, pc, r2
   356f4:	b	3469c <__flatcc_fb_clear_parser@@Base+0x1f6c>
   356f8:	mov	r2, #0
   356fc:	ldr	r1, [r6, #4]
   35700:	mov	r0, fp
   35704:	mov	r3, r2
   35708:	str	r2, [sp]
   3570c:	str	r2, [sp, #4]
   35710:	ldr	r2, [pc, #-2484]	; 34d64 <__flatcc_fb_clear_parser@@Base+0x2634>
   35714:	add	r2, pc, r2
   35718:	bl	2ddbc <__flatcc_error_report@@Base>
   3571c:	ldrh	r8, [r5, #72]	; 0x48
   35720:	b	34314 <__flatcc_fb_clear_parser@@Base+0x1be4>
   35724:	ldrh	r3, [r5, #72]	; 0x48
   35728:	tst	r3, #128	; 0x80
   3572c:	beq	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   35730:	ldr	r3, [sp, #52]	; 0x34
   35734:	add	r3, r3, #1
   35738:	str	r3, [sp, #52]	; 0x34
   3573c:	b	346d8 <__flatcc_fb_clear_parser@@Base+0x1fa8>
   35740:	cmp	r2, #1
   35744:	moveq	r1, r3
   35748:	movne	r1, ip
   3574c:	cmn	fp, #352	; 0x160
   35750:	beq	35558 <__flatcc_fb_clear_parser@@Base+0x2e28>
   35754:	ldr	r0, [fp, #412]	; 0x19c
   35758:	cmp	r0, #0
   3575c:	beq	35558 <__flatcc_fb_clear_parser@@Base+0x2e28>
   35760:	rsb	r2, r2, #1
   35764:	bl	2ca20 <fb_scope_table_find@@Base>
   35768:	cmp	r0, #0
   3576c:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35770:	ldr	r3, [r6, #4]
   35774:	add	r0, r0, #4
   35778:	ldm	r3, {r1, r2}
   3577c:	bl	2b998 <fb_symbol_table_find@@Base>
   35780:	subs	r3, r0, #0
   35784:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35788:	ldrh	r2, [r3, #8]
   3578c:	cmp	r2, #4
   35790:	bhi	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   35794:	add	r0, fp, #524	; 0x20c
   35798:	ldr	r1, [r3, #16]
   3579c:	str	r3, [sp, #56]	; 0x38
   357a0:	bl	2b21c <ptr_set_find_item@@Base>
   357a4:	cmp	r0, #0
   357a8:	ldr	r3, [sp, #56]	; 0x38
   357ac:	bne	35548 <__flatcc_fb_clear_parser@@Base+0x2e18>
   357b0:	b	35554 <__flatcc_fb_clear_parser@@Base+0x2e24>
   357b4:	ldr	r1, [sp, #36]	; 0x24
   357b8:	cmp	r1, #0
   357bc:	bne	357cc <__flatcc_fb_clear_parser@@Base+0x309c>
   357c0:	ldrh	r2, [sp, #8]
   357c4:	str	r2, [r5, #96]	; 0x60
   357c8:	str	r1, [r5, #100]	; 0x64
   357cc:	ldr	r2, [sp, #8]
   357d0:	adds	r2, r2, #1
   357d4:	str	r2, [sp, #8]
   357d8:	ldr	r2, [sp, #12]
   357dc:	adc	r2, r2, #0
   357e0:	cmp	r3, #0
   357e4:	str	r2, [sp, #12]
   357e8:	beq	34638 <__flatcc_fb_clear_parser@@Base+0x1f08>
   357ec:	mov	r2, #0
   357f0:	ldr	r1, [r5, #4]
   357f4:	mov	r0, fp
   357f8:	mov	r3, r2
   357fc:	str	r2, [sp]
   35800:	str	r2, [sp, #4]
   35804:	ldr	r2, [pc, #-2724]	; 34d68 <__flatcc_fb_clear_parser@@Base+0x2638>
   35808:	add	r2, pc, r2
   3580c:	bl	2ddbc <__flatcc_error_report@@Base>
   35810:	mov	r3, #1
   35814:	strh	r3, [r5, #24]
   35818:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   3581c:	mov	r2, #0
   35820:	ldr	r1, [r5, #4]
   35824:	mov	r0, fp
   35828:	mov	r3, r2
   3582c:	str	r2, [sp]
   35830:	str	r2, [sp, #4]
   35834:	ldr	r2, [pc, #-2768]	; 34d6c <__flatcc_fb_clear_parser@@Base+0x263c>
   35838:	add	r2, pc, r2
   3583c:	bl	2ddbc <__flatcc_error_report@@Base>
   35840:	ldrh	r0, [sl, #8]
   35844:	b	352cc <__flatcc_fb_clear_parser@@Base+0x2b9c>
   35848:	ldr	r1, [sp, #32]
   3584c:	mov	r2, #0
   35850:	mov	r3, #0
   35854:	str	r5, [sp, #52]	; 0x34
   35858:	strd	r2, [r1, #96]	; 0x60
   3585c:	b	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   35860:	mov	r2, #1
   35864:	mov	r3, ip
   35868:	ldr	r1, [r5, #4]
   3586c:	mov	r0, fp
   35870:	str	ip, [sp]
   35874:	str	ip, [sp, #4]
   35878:	str	r2, [sp, #16]
   3587c:	ldr	r2, [pc, #-2836]	; 34d70 <__flatcc_fb_clear_parser@@Base+0x2640>
   35880:	add	r2, pc, r2
   35884:	bl	2ddbc <__flatcc_error_report@@Base>
   35888:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   3588c:	mov	r3, r1
   35890:	ldr	r2, [pc, #-2852]	; 34d74 <__flatcc_fb_clear_parser@@Base+0x2644>
   35894:	mov	r0, fp
   35898:	str	r1, [sp]
   3589c:	str	r1, [sp, #4]
   358a0:	ldr	r1, [sp, #32]
   358a4:	add	r2, pc, r2
   358a8:	ldr	r1, [r1, #4]
   358ac:	bl	2ddbc <__flatcc_error_report@@Base>
   358b0:	b	35080 <__flatcc_fb_clear_parser@@Base+0x2950>
   358b4:	mov	r1, #2
   358b8:	str	r3, [sp, #16]
   358bc:	strb	r1, [r2]
   358c0:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   358c4:	ldr	r3, [sp, #20]
   358c8:	cmp	r1, #11
   358cc:	ldr	r1, [r3, #4]
   358d0:	beq	35b14 <__flatcc_fb_clear_parser@@Base+0x33e4>
   358d4:	ldr	r2, [pc, #-2916]	; 34d78 <__flatcc_fb_clear_parser@@Base+0x2648>
   358d8:	add	r2, pc, r2
   358dc:	b	35428 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   358e0:	ldr	r3, [r5, #48]	; 0x30
   358e4:	ldr	r2, [sp, #32]
   358e8:	cmp	r3, #0
   358ec:	str	r3, [sp, #96]	; 0x60
   358f0:	ldr	r4, [r2, #12]
   358f4:	beq	35ba4 <__flatcc_fb_clear_parser@@Base+0x3474>
   358f8:	mov	r2, r1
   358fc:	mov	r1, r3
   35900:	ldr	r9, [sp, #56]	; 0x38
   35904:	b	35914 <__flatcc_fb_clear_parser@@Base+0x31e4>
   35908:	mov	r6, r1
   3590c:	mov	r2, r0
   35910:	mov	r1, r3
   35914:	ldr	r3, [r1]
   35918:	add	r0, r2, #1
   3591c:	cmp	r3, #0
   35920:	bne	35908 <__flatcc_fb_clear_parser@@Base+0x31d8>
   35924:	cmp	r6, #0
   35928:	str	r9, [sp, #56]	; 0x38
   3592c:	str	r1, [sp, #100]	; 0x64
   35930:	beq	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35934:	sub	r3, r2, #1
   35938:	cmp	r4, #0
   3593c:	clz	r3, r3
   35940:	lsr	r3, r3, #5
   35944:	moveq	r3, #0
   35948:	cmp	r3, #0
   3594c:	beq	35aa0 <__flatcc_fb_clear_parser@@Base+0x3370>
   35950:	ldr	r9, [sp, #56]	; 0x38
   35954:	add	r8, fp, #352	; 0x160
   35958:	str	r5, [sp, #84]	; 0x54
   3595c:	ldr	r3, [r6, #4]
   35960:	add	r0, r4, #4
   35964:	ldm	r3, {r1, r2}
   35968:	bl	2b998 <fb_symbol_table_find@@Base>
   3596c:	subs	r3, r0, #0
   35970:	beq	359f4 <__flatcc_fb_clear_parser@@Base+0x32c4>
   35974:	ldrh	r2, [r3, #8]
   35978:	cmp	r2, #4
   3597c:	bhi	359f4 <__flatcc_fb_clear_parser@@Base+0x32c4>
   35980:	ldr	r1, [r3, #16]
   35984:	str	r3, [sp, #56]	; 0x38
   35988:	ldr	r0, [sp, #64]	; 0x40
   3598c:	bl	2b21c <ptr_set_find_item@@Base>
   35990:	cmp	r0, #0
   35994:	ldr	r3, [sp, #56]	; 0x38
   35998:	beq	359f4 <__flatcc_fb_clear_parser@@Base+0x32c4>
   3599c:	ldr	r5, [sp, #84]	; 0x54
   359a0:	str	r9, [sp, #56]	; 0x38
   359a4:	ldrh	r2, [r3, #8]
   359a8:	cmp	r2, #3
   359ac:	beq	359c4 <__flatcc_fb_clear_parser@@Base+0x3294>
   359b0:	ldr	r3, [sp, #96]	; 0x60
   359b4:	ldr	r3, [r3]
   359b8:	cmp	r3, #0
   359bc:	bne	35b58 <__flatcc_fb_clear_parser@@Base+0x3428>
   359c0:	mov	r3, sl
   359c4:	ldr	r2, [sp, #100]	; 0x64
   359c8:	add	r0, r3, #56	; 0x38
   359cc:	ldr	r2, [r2, #4]
   359d0:	ldm	r2, {r1, r2}
   359d4:	bl	2b998 <fb_symbol_table_find@@Base>
   359d8:	cmp	r0, #0
   359dc:	beq	35b58 <__flatcc_fb_clear_parser@@Base+0x3428>
   359e0:	ldrd	r2, [r0, #48]	; 0x30
   359e4:	strd	r2, [r5, #48]	; 0x30
   359e8:	ldrd	r2, [r0, #56]	; 0x38
   359ec:	strd	r2, [r5, #56]	; 0x38
   359f0:	b	3462c <__flatcc_fb_clear_parser@@Base+0x1efc>
   359f4:	ldr	r2, [r4]
   359f8:	cmp	r2, #0
   359fc:	beq	35a80 <__flatcc_fb_clear_parser@@Base+0x3350>
   35a00:	mov	r3, #0
   35a04:	b	35a0c <__flatcc_fb_clear_parser@@Base+0x32dc>
   35a08:	mov	r3, r1
   35a0c:	ldr	r2, [r2]
   35a10:	add	r1, r3, #1
   35a14:	cmp	r2, #0
   35a18:	bne	35a08 <__flatcc_fb_clear_parser@@Base+0x32d8>
   35a1c:	rsb	r5, r3, #0
   35a20:	b	35a50 <__flatcc_fb_clear_parser@@Base+0x3320>
   35a24:	cmp	r8, #0
   35a28:	beq	35a4c <__flatcc_fb_clear_parser@@Base+0x331c>
   35a2c:	ldr	r0, [fp, #412]	; 0x19c
   35a30:	cmp	r0, #0
   35a34:	beq	35a4c <__flatcc_fb_clear_parser@@Base+0x331c>
   35a38:	mov	r2, r5
   35a3c:	ldr	r1, [r4]
   35a40:	bl	2ca20 <fb_scope_table_find@@Base>
   35a44:	cmp	r0, #0
   35a48:	bne	35a8c <__flatcc_fb_clear_parser@@Base+0x335c>
   35a4c:	add	r5, r5, #1
   35a50:	cmp	r5, #0
   35a54:	bne	35a24 <__flatcc_fb_clear_parser@@Base+0x32f4>
   35a58:	cmp	r8, #0
   35a5c:	beq	35a80 <__flatcc_fb_clear_parser@@Base+0x3350>
   35a60:	ldr	r0, [fp, #412]	; 0x19c
   35a64:	cmp	r0, #0
   35a68:	beq	35a80 <__flatcc_fb_clear_parser@@Base+0x3350>
   35a6c:	mov	r2, r5
   35a70:	mov	r1, r5
   35a74:	bl	2ca20 <fb_scope_table_find@@Base>
   35a78:	subs	r4, r0, #0
   35a7c:	bne	3595c <__flatcc_fb_clear_parser@@Base+0x322c>
   35a80:	str	r9, [sp, #56]	; 0x38
   35a84:	ldr	r5, [sp, #84]	; 0x54
   35a88:	b	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35a8c:	mov	r4, r0
   35a90:	b	3595c <__flatcc_fb_clear_parser@@Base+0x322c>
   35a94:	ldr	r2, [pc, #-3360]	; 34d7c <__flatcc_fb_clear_parser@@Base+0x264c>
   35a98:	add	r2, pc, r2
   35a9c:	b	35428 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   35aa0:	cmp	r2, #1
   35aa4:	ldr	r1, [sp, #96]	; 0x60
   35aa8:	moveq	r1, r3
   35aac:	cmn	fp, #352	; 0x160
   35ab0:	beq	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35ab4:	ldr	r0, [fp, #412]	; 0x19c
   35ab8:	cmp	r0, #0
   35abc:	beq	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35ac0:	rsb	r2, r2, #1
   35ac4:	bl	2ca20 <fb_scope_table_find@@Base>
   35ac8:	cmp	r0, #0
   35acc:	beq	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35ad0:	ldr	r3, [r6, #4]
   35ad4:	add	r0, r0, #4
   35ad8:	ldm	r3, {r1, r2}
   35adc:	bl	2b998 <fb_symbol_table_find@@Base>
   35ae0:	subs	r3, r0, #0
   35ae4:	beq	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35ae8:	ldrh	r2, [r3, #8]
   35aec:	cmp	r2, #4
   35af0:	bhi	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35af4:	ldr	r1, [r3, #16]
   35af8:	ldr	r0, [sp, #64]	; 0x40
   35afc:	str	r3, [sp, #64]	; 0x40
   35b00:	bl	2b21c <ptr_set_find_item@@Base>
   35b04:	cmp	r0, #0
   35b08:	ldr	r3, [sp, #64]	; 0x40
   35b0c:	bne	359a4 <__flatcc_fb_clear_parser@@Base+0x3274>
   35b10:	b	359b0 <__flatcc_fb_clear_parser@@Base+0x3280>
   35b14:	ldr	r2, [pc, #-3484]	; 34d80 <__flatcc_fb_clear_parser@@Base+0x2650>
   35b18:	add	r2, pc, r2
   35b1c:	b	35428 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   35b20:	ldr	r2, [pc, #-3492]	; 34d84 <__flatcc_fb_clear_parser@@Base+0x2654>
   35b24:	add	r2, pc, r2
   35b28:	b	35428 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   35b2c:	mov	r2, #0
   35b30:	ldr	r3, [r3, #4]
   35b34:	mov	r0, fp
   35b38:	ldr	r1, [r6, #4]
   35b3c:	str	r2, [sp]
   35b40:	str	r2, [sp, #4]
   35b44:	ldr	r2, [pc, #-3524]	; 34d88 <__flatcc_fb_clear_parser@@Base+0x2658>
   35b48:	add	r2, pc, r2
   35b4c:	bl	2ddbc <__flatcc_error_report@@Base>
   35b50:	ldrh	r8, [r5, #72]	; 0x48
   35b54:	b	34314 <__flatcc_fb_clear_parser@@Base+0x1be4>
   35b58:	ldr	r2, [pc, #-3540]	; 34d8c <__flatcc_fb_clear_parser@@Base+0x265c>
   35b5c:	mov	r3, r5
   35b60:	mov	r0, fp
   35b64:	ldr	r1, [r5, #48]	; 0x30
   35b68:	add	r2, pc, r2
   35b6c:	bl	2f53c <error_ref_sym@@Base>
   35b70:	mov	r3, #1
   35b74:	strh	r3, [r5, #24]
   35b78:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>
   35b7c:	ldr	r2, [pc, #-3572]	; 34d90 <__flatcc_fb_clear_parser@@Base+0x2660>
   35b80:	mov	r0, fp
   35b84:	ldr	r3, [r3, #4]
   35b88:	ldr	r1, [r6, #4]
   35b8c:	add	r2, pc, r2
   35b90:	str	ip, [sp]
   35b94:	str	ip, [sp, #4]
   35b98:	bl	2ddbc <__flatcc_error_report@@Base>
   35b9c:	ldrh	r8, [r5, #72]	; 0x48
   35ba0:	b	34314 <__flatcc_fb_clear_parser@@Base+0x1be4>
   35ba4:	ldr	r3, [pc, #-3608]	; 34d94 <__flatcc_fb_clear_parser@@Base+0x2664>
   35ba8:	movw	r2, #347	; 0x15b
   35bac:	ldr	r1, [pc, #-3612]	; 34d98 <__flatcc_fb_clear_parser@@Base+0x2668>
   35bb0:	ldr	r0, [pc, #-3612]	; 34d9c <__flatcc_fb_clear_parser@@Base+0x266c>
   35bb4:	add	r3, pc, r3
   35bb8:	add	r3, r3, #268	; 0x10c
   35bbc:	add	r1, pc, r1
   35bc0:	add	r0, pc, r0
   35bc4:	bl	1400c <__assert_fail@plt>
   35bc8:	ldr	r3, [sp, #16]
   35bcc:	str	r3, [sp, #36]	; 0x24
   35bd0:	b	350b0 <__flatcc_fb_clear_parser@@Base+0x2980>
   35bd4:	ldr	r3, [pc, #-3644]	; 34da0 <__flatcc_fb_clear_parser@@Base+0x2670>
   35bd8:	movw	r2, #770	; 0x302
   35bdc:	ldr	r1, [pc, #-3648]	; 34da4 <__flatcc_fb_clear_parser@@Base+0x2674>
   35be0:	ldr	r0, [pc, #-3648]	; 34da8 <__flatcc_fb_clear_parser@@Base+0x2678>
   35be4:	add	r3, pc, r3
   35be8:	add	r3, r3, #252	; 0xfc
   35bec:	add	r1, pc, r1
   35bf0:	add	r0, pc, r0
   35bf4:	bl	1400c <__assert_fail@plt>
   35bf8:	ldr	r3, [sp, #36]	; 0x24
   35bfc:	str	r3, [sp, #16]
   35c00:	b	346b4 <__flatcc_fb_clear_parser@@Base+0x1f84>
   35c04:	ldr	r3, [pc, #-3680]	; 34dac <__flatcc_fb_clear_parser@@Base+0x267c>
   35c08:	movw	r2, #769	; 0x301
   35c0c:	ldr	r1, [pc, #-3684]	; 34db0 <__flatcc_fb_clear_parser@@Base+0x2680>
   35c10:	ldr	r0, [pc, #-3684]	; 34db4 <__flatcc_fb_clear_parser@@Base+0x2684>
   35c14:	add	r3, pc, r3
   35c18:	add	r3, r3, #252	; 0xfc
   35c1c:	add	r1, pc, r1
   35c20:	add	r0, pc, r0
   35c24:	bl	1400c <__assert_fail@plt>
   35c28:	ldr	r3, [sp, #52]	; 0x34
   35c2c:	cmp	r3, #0
   35c30:	beq	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   35c34:	ldr	r2, [sp, #32]
   35c38:	ldr	r1, [sp, #52]	; 0x34
   35c3c:	ldrh	r3, [r2, #10]
   35c40:	cmp	r1, #1
   35c44:	orr	r3, r3, #8
   35c48:	strh	r3, [r2, #10]
   35c4c:	bne	3411c <__flatcc_fb_clear_parser@@Base+0x19ec>
   35c50:	ldr	r3, [sp, #36]	; 0x24
   35c54:	str	r3, [sp, #52]	; 0x34
   35c58:	b	3521c <__flatcc_fb_clear_parser@@Base+0x2aec>
   35c5c:	mov	r2, #0
   35c60:	ldr	r1, [r5, #4]
   35c64:	mov	r0, fp
   35c68:	mov	r3, r2
   35c6c:	str	r2, [sp]
   35c70:	str	r2, [sp, #4]
   35c74:	ldr	r2, [pc, #-3780]	; 34db8 <__flatcc_fb_clear_parser@@Base+0x2688>
   35c78:	add	r2, pc, r2
   35c7c:	bl	2ddbc <__flatcc_error_report@@Base>
   35c80:	b	347e4 <__flatcc_fb_clear_parser@@Base+0x20b4>
   35c84:	mov	r2, #0
   35c88:	ldr	r3, [sl, #4]
   35c8c:	mov	r0, fp
   35c90:	ldr	r1, [r5, #4]
   35c94:	str	r2, [sp]
   35c98:	str	r2, [sp, #4]
   35c9c:	ldr	r2, [pc, #-3816]	; 34dbc <__flatcc_fb_clear_parser@@Base+0x268c>
   35ca0:	add	r2, pc, r2
   35ca4:	bl	2ddbc <__flatcc_error_report@@Base>
   35ca8:	mov	r3, #1
   35cac:	strh	r3, [r5, #24]
   35cb0:	b	340dc <__flatcc_fb_clear_parser@@Base+0x19ac>

00035cb4 <__flatcc_fb_build_schema@@Base>:
   35cb4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   35cb8:	add	r3, r0, #524	; 0x20c
   35cbc:	strd	r6, [sp, #8]
   35cc0:	ldr	r7, [pc, #4064]	; 36ca8 <__flatcc_fb_build_schema@@Base+0xff4>
   35cc4:	strd	r8, [sp, #16]
   35cc8:	strd	sl, [sp, #24]
   35ccc:	add	sl, r0, #352	; 0x160
   35cd0:	mov	fp, r0
   35cd4:	str	lr, [sp, #32]
   35cd8:	sub	sp, sp, #148	; 0x94
   35cdc:	mov	r1, sl
   35ce0:	mov	r0, r3
   35ce4:	str	r3, [sp, #20]
   35ce8:	add	r7, pc, r7
   35cec:	bl	2b21c <ptr_set_find_item@@Base>
   35cf0:	cmp	r0, #0
   35cf4:	beq	37a1c <__flatcc_fb_build_schema@@Base+0x1d68>
   35cf8:	ldr	r4, [fp, #392]	; 0x188
   35cfc:	cmp	r4, #0
   35d00:	beq	35dd8 <__flatcc_fb_build_schema@@Base+0x124>
   35d04:	movw	r5, #403	; 0x193
   35d08:	movt	r5, #256	; 0x100
   35d0c:	movw	r6, #40389	; 0x9dc5
   35d10:	movt	r6, #33052	; 0x811c
   35d14:	b	35d24 <__flatcc_fb_build_schema@@Base+0x70>
   35d18:	ldr	r4, [r4]
   35d1c:	cmp	r4, #0
   35d20:	beq	35dd8 <__flatcc_fb_build_schema@@Base+0x124>
   35d24:	ldrh	r3, [r4, #8]
   35d28:	cmp	r3, #4
   35d2c:	bhi	35d18 <__flatcc_fb_build_schema@@Base+0x64>
   35d30:	ldr	r3, [r4, #4]
   35d34:	ldr	r0, [r4, #12]
   35d38:	ldm	r3, {r1, ip}
   35d3c:	cmp	r0, #0
   35d40:	beq	366cc <__flatcc_fb_build_schema@@Base+0xa18>
   35d44:	ldr	r8, [r0]
   35d48:	cmp	r8, #0
   35d4c:	bne	36bdc <__flatcc_fb_build_schema@@Base+0xf28>
   35d50:	cmp	ip, #0
   35d54:	beq	36c30 <__flatcc_fb_build_schema@@Base+0xf7c>
   35d58:	movw	r3, #40389	; 0x9dc5
   35d5c:	movt	r3, #33052	; 0x811c
   35d60:	add	ip, r1, ip
   35d64:	ldrb	r2, [r1], #1
   35d68:	eor	r3, r3, r2
   35d6c:	cmp	r1, ip
   35d70:	mul	r3, r5, r3
   35d74:	bne	35d64 <__flatcc_fb_build_schema@@Base+0xb0>
   35d78:	cmp	r3, #0
   35d7c:	str	sl, [r4, #16]
   35d80:	moveq	r3, r6
   35d84:	cmp	r0, #0
   35d88:	str	r3, [r4, #88]	; 0x58
   35d8c:	beq	35d18 <__flatcc_fb_build_schema@@Base+0x64>
   35d90:	add	r0, r0, #4
   35d94:	mov	r2, #1
   35d98:	mov	r1, r4
   35d9c:	bl	2b970 <fb_symbol_table_insert_item@@Base>
   35da0:	cmp	r0, #0
   35da4:	beq	35d18 <__flatcc_fb_build_schema@@Base+0x64>
   35da8:	mov	r2, #0
   35dac:	ldr	r3, [r0, #4]
   35db0:	mov	r0, fp
   35db4:	ldr	r1, [r4, #4]
   35db8:	str	r2, [sp]
   35dbc:	str	r2, [sp, #4]
   35dc0:	ldr	r2, [pc, #3812]	; 36cac <__flatcc_fb_build_schema@@Base+0xff8>
   35dc4:	add	r2, pc, r2
   35dc8:	bl	2ddbc <__flatcc_error_report@@Base>
   35dcc:	ldr	r4, [r4]
   35dd0:	cmp	r4, #0
   35dd4:	bne	35d24 <__flatcc_fb_build_schema@@Base+0x70>
   35dd8:	ldr	r4, [fp, #356]	; 0x164
   35ddc:	cmp	r4, #0
   35de0:	beq	35e38 <__flatcc_fb_build_schema@@Base+0x184>
   35de4:	ldr	r5, [pc, #3780]	; 36cb0 <__flatcc_fb_build_schema@@Base+0xffc>
   35de8:	add	r5, pc, r5
   35dec:	ldr	r0, [fp, #412]	; 0x19c
   35df0:	mov	r2, #1
   35df4:	mov	r1, r4
   35df8:	add	r0, r0, #16
   35dfc:	bl	3e1a8 <fb_name_table_insert_item@@Base>
   35e00:	cmp	r0, #0
   35e04:	beq	35e2c <__flatcc_fb_build_schema@@Base+0x178>
   35e08:	ldr	ip, [r4, #12]
   35e0c:	mov	r3, #0
   35e10:	mov	r2, r5
   35e14:	mov	r1, r3
   35e18:	mov	r0, fp
   35e1c:	str	ip, [sp, #4]
   35e20:	ldr	ip, [r4, #8]
   35e24:	str	ip, [sp]
   35e28:	bl	2ddbc <__flatcc_error_report@@Base>
   35e2c:	ldr	r4, [r4]
   35e30:	cmp	r4, #0
   35e34:	bne	35dec <__flatcc_fb_build_schema@@Base+0x138>
   35e38:	ldr	r6, [pc, #3700]	; 36cb4 <__flatcc_fb_build_schema@@Base+0x1000>
   35e3c:	mov	r5, #0
   35e40:	mov	r8, #2
   35e44:	add	r6, pc, r6
   35e48:	b	35e9c <__flatcc_fb_build_schema@@Base+0x1e8>
   35e4c:	ldr	r2, [r6], #4
   35e50:	str	r3, [fp, #52]	; 0x34
   35e54:	mov	r0, r2
   35e58:	str	r2, [r4, #8]
   35e5c:	str	r5, [r4, #24]
   35e60:	bl	13f4c <strlen@plt>
   35e64:	ldr	r3, [fp, #412]	; 0x19c
   35e68:	mov	ip, #0
   35e6c:	mov	r1, r4
   35e70:	mov	r2, #1
   35e74:	str	ip, [r4]
   35e78:	str	r0, [r4, #12]
   35e7c:	strh	r8, [r4, #16]
   35e80:	add	r0, r3, #16
   35e84:	bl	3e1a8 <fb_name_table_insert_item@@Base>
   35e88:	cmp	r0, #0
   35e8c:	strne	r5, [r0, #24]
   35e90:	add	r5, r5, #1
   35e94:	cmp	r5, #12
   35e98:	beq	35ee4 <__flatcc_fb_build_schema@@Base+0x230>
   35e9c:	ldr	r2, [fp, #44]	; 0x2c
   35ea0:	ldr	r4, [fp, #52]	; 0x34
   35ea4:	add	r3, r4, #32
   35ea8:	cmp	r3, r2
   35eac:	bls	35e4c <__flatcc_fb_build_schema@@Base+0x198>
   35eb0:	mov	r1, #1
   35eb4:	mov	r0, #65536	; 0x10000
   35eb8:	bl	13e74 <calloc@plt>
   35ebc:	cmp	r0, #0
   35ec0:	beq	379d0 <__flatcc_fb_build_schema@@Base+0x1d1c>
   35ec4:	ldr	r2, [fp, #48]	; 0x30
   35ec8:	add	r1, r0, #65536	; 0x10000
   35ecc:	add	r4, r0, #16
   35ed0:	add	r3, r0, #48	; 0x30
   35ed4:	str	r1, [fp, #44]	; 0x2c
   35ed8:	str	r0, [fp, #48]	; 0x30
   35edc:	str	r2, [r0]
   35ee0:	b	35e4c <__flatcc_fb_build_schema@@Base+0x198>
   35ee4:	ldr	r3, [fp, #184]	; 0xb8
   35ee8:	ldr	r9, [fp, #392]	; 0x188
   35eec:	cmp	r3, #0
   35ef0:	bne	35f30 <__flatcc_fb_build_schema@@Base+0x27c>
   35ef4:	cmp	r9, #0
   35ef8:	beq	37924 <__flatcc_fb_build_schema@@Base+0x1c70>
   35efc:	mov	r4, #1
   35f00:	ldrh	r3, [r9, #8]
   35f04:	cmp	r3, #3
   35f08:	bne	35f20 <__flatcc_fb_build_schema@@Base+0x26c>
   35f0c:	mov	r1, r9
   35f10:	mov	r0, fp
   35f14:	bl	32e38 <__flatcc_fb_clear_parser@@Base+0x708>
   35f18:	cmp	r0, #0
   35f1c:	strhne	r4, [r9, #48]	; 0x30
   35f20:	ldr	r9, [r9]
   35f24:	cmp	r9, #0
   35f28:	bne	35f00 <__flatcc_fb_build_schema@@Base+0x24c>
   35f2c:	ldr	r9, [fp, #392]	; 0x188
   35f30:	cmp	r9, #0
   35f34:	beq	37924 <__flatcc_fb_build_schema@@Base+0x1c70>
   35f38:	ldr	r3, [pc, #3448]	; 36cb8 <__flatcc_fb_build_schema@@Base+0x1004>
   35f3c:	str	sl, [sp, #28]
   35f40:	mov	sl, r9
   35f44:	add	r3, pc, r3
   35f48:	str	r3, [sp, #48]	; 0x30
   35f4c:	ldr	r3, [pc, #3432]	; 36cbc <__flatcc_fb_build_schema@@Base+0x1008>
   35f50:	add	r3, pc, r3
   35f54:	str	r3, [sp, #12]
   35f58:	ldrh	r3, [sl, #8]
   35f5c:	cmp	r3, #4
   35f60:	addls	pc, pc, r3, lsl #2
   35f64:	b	37a64 <__flatcc_fb_build_schema@@Base+0x1db0>
   35f68:	b	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   35f6c:	b	36534 <__flatcc_fb_build_schema@@Base+0x880>
   35f70:	b	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   35f74:	b	36504 <__flatcc_fb_build_schema@@Base+0x850>
   35f78:	b	36510 <__flatcc_fb_build_schema@@Base+0x85c>
   35f7c:	cmp	r4, #0
   35f80:	beq	35fa4 <__flatcc_fb_build_schema@@Base+0x2f0>
   35f84:	mov	r3, r2
   35f88:	ldr	r1, [r4, #4]
   35f8c:	mov	r0, fp
   35f90:	str	r2, [sp]
   35f94:	str	r2, [sp, #4]
   35f98:	ldr	r2, [pc, #3360]	; 36cc0 <__flatcc_fb_build_schema@@Base+0x100c>
   35f9c:	add	r2, pc, r2
   35fa0:	bl	2ddbc <__flatcc_error_report@@Base>
   35fa4:	ldrh	r3, [r8, #24]
   35fa8:	strh	r5, [r8, #72]	; 0x48
   35fac:	cmp	r3, #8
   35fb0:	beq	36c60 <__flatcc_fb_build_schema@@Base+0xfac>
   35fb4:	cmp	r3, #12
   35fb8:	bne	36b84 <__flatcc_fb_build_schema@@Base+0xed0>
   35fbc:	ldr	ip, [r8, #16]
   35fc0:	ldr	r3, [sp, #24]
   35fc4:	cmp	ip, #0
   35fc8:	ldr	r4, [r3, #12]
   35fcc:	beq	36044 <__flatcc_fb_build_schema@@Base+0x390>
   35fd0:	mov	r5, ip
   35fd4:	mov	r2, #0
   35fd8:	b	35fe4 <__flatcc_fb_build_schema@@Base+0x330>
   35fdc:	mov	r2, r0
   35fe0:	mov	r5, r3
   35fe4:	ldr	r3, [r5]
   35fe8:	add	r0, r2, #1
   35fec:	cmp	r3, #0
   35ff0:	bne	35fdc <__flatcc_fb_build_schema@@Base+0x328>
   35ff4:	sub	r3, r0, #1
   35ff8:	cmp	r4, #0
   35ffc:	clz	r3, r3
   36000:	lsr	r3, r3, #5
   36004:	moveq	r3, #0
   36008:	cmp	r3, #0
   3600c:	bne	36970 <__flatcc_fb_build_schema@@Base+0xcbc>
   36010:	cmp	r0, #1
   36014:	moveq	r1, r3
   36018:	movne	r1, ip
   3601c:	cmp	sl, #0
   36020:	beq	36044 <__flatcc_fb_build_schema@@Base+0x390>
   36024:	ldr	r0, [fp, #412]	; 0x19c
   36028:	cmp	r0, #0
   3602c:	beq	36044 <__flatcc_fb_build_schema@@Base+0x390>
   36030:	rsb	r2, r2, #0
   36034:	bl	2ca20 <fb_scope_table_find@@Base>
   36038:	cmp	r0, #0
   3603c:	bne	3761c <__flatcc_fb_build_schema@@Base+0x1968>
   36040:	ldr	ip, [r8, #16]
   36044:	mov	r3, r8
   36048:	mov	r1, ip
   3604c:	ldr	r2, [pc, #3184]	; 36cc4 <__flatcc_fb_build_schema@@Base+0x1010>
   36050:	mov	r0, fp
   36054:	add	r2, pc, r2
   36058:	bl	2f53c <error_ref_sym@@Base>
   3605c:	mov	r3, #1
   36060:	strh	r3, [r8, #24]
   36064:	ldr	r8, [r8]
   36068:	cmp	r8, #0
   3606c:	bne	36790 <__flatcc_fb_build_schema@@Base+0xadc>
   36070:	ldr	sl, [sp, #24]
   36074:	ldr	r2, [sp, #36]	; 0x24
   36078:	cmp	r2, #0
   3607c:	beq	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   36080:	ldrh	r3, [sl, #10]
   36084:	cmp	r2, #1
   36088:	orr	r3, r3, #8
   3608c:	strh	r3, [sl, #10]
   36090:	beq	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   36094:	ldr	r3, [fp, #156]	; 0x9c
   36098:	cmp	r3, #0
   3609c:	bne	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   360a0:	ldr	r2, [pc, #3104]	; 36cc8 <__flatcc_fb_build_schema@@Base+0x1014>
   360a4:	mov	r3, r8
   360a8:	mov	r0, fp
   360ac:	str	r8, [sp]
   360b0:	str	r8, [sp, #4]
   360b4:	ldr	r1, [sl, #4]
   360b8:	add	r2, pc, r2
   360bc:	bl	2ddbc <__flatcc_error_report@@Base>
   360c0:	mov	r3, #1
   360c4:	strh	r3, [sl, #48]	; 0x30
   360c8:	ldr	sl, [sl]
   360cc:	cmp	sl, #0
   360d0:	bne	35f58 <__flatcc_fb_build_schema@@Base+0x2a4>
   360d4:	ldr	r4, [fp, #392]	; 0x188
   360d8:	ldr	sl, [sp, #28]
   360dc:	cmp	r4, #0
   360e0:	beq	37924 <__flatcc_fb_build_schema@@Base+0x1c70>
   360e4:	ldrh	r5, [r4, #8]
   360e8:	cmp	r5, #1
   360ec:	bne	36110 <__flatcc_fb_build_schema@@Base+0x45c>
   360f0:	ldrh	r3, [r4, #48]	; 0x30
   360f4:	cmp	r3, #1
   360f8:	beq	36110 <__flatcc_fb_build_schema@@Base+0x45c>
   360fc:	mov	r1, r4
   36100:	mov	r0, fp
   36104:	bl	32860 <__flatcc_fb_clear_parser@@Base+0x130>
   36108:	cmp	r0, #0
   3610c:	strhne	r5, [r4, #48]	; 0x30
   36110:	ldr	r4, [r4]
   36114:	cmp	r4, #0
   36118:	bne	360e4 <__flatcc_fb_build_schema@@Base+0x430>
   3611c:	ldr	r9, [fp, #392]	; 0x188
   36120:	cmp	r9, #0
   36124:	beq	37924 <__flatcc_fb_build_schema@@Base+0x1c70>
   36128:	ldr	r3, [pc, #2972]	; 36ccc <__flatcc_fb_build_schema@@Base+0x1018>
   3612c:	add	r3, pc, r3
   36130:	str	r3, [sp, #24]
   36134:	ldr	r3, [pc, #2964]	; 36cd0 <__flatcc_fb_build_schema@@Base+0x101c>
   36138:	add	r3, pc, r3
   3613c:	str	r3, [sp, #40]	; 0x28
   36140:	ldrh	r3, [r9, #8]
   36144:	cmp	r3, #0
   36148:	beq	373d8 <__flatcc_fb_build_schema@@Base+0x1724>
   3614c:	cmp	r3, #2
   36150:	bne	363e8 <__flatcc_fb_build_schema@@Base+0x734>
   36154:	ldrh	r2, [r9, #48]	; 0x30
   36158:	cmp	r2, #1
   3615c:	beq	363e8 <__flatcc_fb_build_schema@@Base+0x734>
   36160:	cmp	r2, #0
   36164:	bne	37a40 <__flatcc_fb_build_schema@@Base+0x1d8c>
   36168:	ldr	r3, [r9, #28]
   3616c:	cmp	r3, #0
   36170:	beq	36194 <__flatcc_fb_build_schema@@Base+0x4e0>
   36174:	mov	r3, r2
   36178:	ldr	r1, [r9, #4]
   3617c:	mov	r0, fp
   36180:	str	r2, [sp]
   36184:	str	r2, [sp, #4]
   36188:	ldr	r2, [pc, #2884]	; 36cd4 <__flatcc_fb_build_schema@@Base+0x1020>
   3618c:	add	r2, pc, r2
   36190:	bl	2ddbc <__flatcc_error_report@@Base>
   36194:	ldr	r4, [r9, #20]
   36198:	cmp	r4, #0
   3619c:	beq	363e8 <__flatcc_fb_build_schema@@Base+0x734>
   361a0:	ldr	r3, [pc, #2864]	; 36cd8 <__flatcc_fb_build_schema@@Base+0x1024>
   361a4:	str	r9, [sp, #16]
   361a8:	add	r3, pc, r3
   361ac:	str	r3, [sp, #32]
   361b0:	add	r3, r9, #56	; 0x38
   361b4:	ldr	r9, [sp, #20]
   361b8:	str	r3, [sp, #12]
   361bc:	ldr	r3, [pc, #2840]	; 36cdc <__flatcc_fb_build_schema@@Base+0x1028>
   361c0:	add	r3, pc, r3
   361c4:	str	r3, [sp, #36]	; 0x24
   361c8:	mov	r2, #1
   361cc:	mov	r1, r4
   361d0:	ldr	r0, [sp, #12]
   361d4:	bl	2b970 <fb_symbol_table_insert_item@@Base>
   361d8:	subs	r2, r0, #0
   361dc:	bne	37308 <__flatcc_fb_build_schema@@Base+0x1654>
   361e0:	ldrh	r3, [r4, #8]
   361e4:	cmp	r3, #5
   361e8:	bne	3782c <__flatcc_fb_build_schema@@Base+0x1b78>
   361ec:	ldrh	r3, [r4, #56]	; 0x38
   361f0:	cmp	r3, #0
   361f4:	bne	373b4 <__flatcc_fb_build_schema@@Base+0x1700>
   361f8:	ldrh	r3, [r4, #24]
   361fc:	cmp	r3, #1
   36200:	beq	363d8 <__flatcc_fb_build_schema@@Base+0x724>
   36204:	cmp	r3, #12
   36208:	beq	36230 <__flatcc_fb_build_schema@@Base+0x57c>
   3620c:	mov	r2, #0
   36210:	ldr	r1, [r4, #4]
   36214:	mov	r0, fp
   36218:	mov	r3, r2
   3621c:	str	r2, [sp]
   36220:	str	r2, [sp, #4]
   36224:	ldr	r2, [pc, #2740]	; 36ce0 <__flatcc_fb_build_schema@@Base+0x102c>
   36228:	add	r2, pc, r2
   3622c:	bl	2ddbc <__flatcc_error_report@@Base>
   36230:	ldr	ip, [r4, #32]
   36234:	ldr	r3, [sp, #16]
   36238:	cmp	ip, #0
   3623c:	ldr	r5, [r3, #12]
   36240:	beq	36f10 <__flatcc_fb_build_schema@@Base+0x125c>
   36244:	mov	r6, ip
   36248:	mov	r2, #0
   3624c:	b	36258 <__flatcc_fb_build_schema@@Base+0x5a4>
   36250:	mov	r2, r0
   36254:	mov	r6, r3
   36258:	ldr	r3, [r6]
   3625c:	add	r0, r2, #1
   36260:	cmp	r3, #0
   36264:	bne	36250 <__flatcc_fb_build_schema@@Base+0x59c>
   36268:	sub	r3, r0, #1
   3626c:	cmp	r5, #0
   36270:	clz	r3, r3
   36274:	lsr	r3, r3, #5
   36278:	moveq	r3, #0
   3627c:	cmp	r3, #0
   36280:	bne	36e48 <__flatcc_fb_build_schema@@Base+0x1194>
   36284:	cmp	r0, #1
   36288:	moveq	r1, r3
   3628c:	movne	r1, ip
   36290:	cmp	sl, #0
   36294:	beq	36f10 <__flatcc_fb_build_schema@@Base+0x125c>
   36298:	ldr	r0, [fp, #412]	; 0x19c
   3629c:	cmp	r0, #0
   362a0:	beq	36f10 <__flatcc_fb_build_schema@@Base+0x125c>
   362a4:	rsb	r2, r2, #0
   362a8:	bl	2ca20 <fb_scope_table_find@@Base>
   362ac:	cmp	r0, #0
   362b0:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   362b4:	ldr	r3, [r6, #4]
   362b8:	add	r0, r0, #4
   362bc:	ldm	r3, {r1, r2}
   362c0:	bl	2b998 <fb_symbol_table_find@@Base>
   362c4:	subs	r7, r0, #0
   362c8:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   362cc:	ldrh	r3, [r7, #8]
   362d0:	cmp	r3, #4
   362d4:	bhi	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   362d8:	mov	r0, r9
   362dc:	ldr	r1, [r7, #16]
   362e0:	bl	2b21c <ptr_set_find_item@@Base>
   362e4:	cmp	r0, #0
   362e8:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   362ec:	ldrh	r2, [r7, #8]
   362f0:	cmp	r2, #0
   362f4:	bne	37470 <__flatcc_fb_build_schema@@Base+0x17bc>
   362f8:	mov	r3, #14
   362fc:	ldr	ip, [r4, #16]
   36300:	str	r7, [r4, #32]
   36304:	strh	r3, [r4, #40]	; 0x28
   36308:	ldr	r3, [sp, #16]
   3630c:	cmp	ip, #0
   36310:	ldr	r5, [r3, #12]
   36314:	beq	363bc <__flatcc_fb_build_schema@@Base+0x708>
   36318:	mov	r6, ip
   3631c:	b	36328 <__flatcc_fb_build_schema@@Base+0x674>
   36320:	mov	r2, r0
   36324:	mov	r6, r3
   36328:	ldr	r3, [r6]
   3632c:	add	r0, r2, #1
   36330:	cmp	r3, #0
   36334:	bne	36320 <__flatcc_fb_build_schema@@Base+0x66c>
   36338:	sub	r1, r0, #1
   3633c:	cmp	r5, #0
   36340:	clz	r1, r1
   36344:	lsr	r1, r1, #5
   36348:	moveq	r1, #0
   3634c:	cmp	r1, #0
   36350:	bne	36f40 <__flatcc_fb_build_schema@@Base+0x128c>
   36354:	cmp	r0, #1
   36358:	movne	r1, ip
   3635c:	cmp	sl, #0
   36360:	beq	363bc <__flatcc_fb_build_schema@@Base+0x708>
   36364:	ldr	r0, [fp, #412]	; 0x19c
   36368:	cmp	r0, #0
   3636c:	beq	363bc <__flatcc_fb_build_schema@@Base+0x708>
   36370:	rsb	r2, r2, #0
   36374:	bl	2ca20 <fb_scope_table_find@@Base>
   36378:	cmp	r0, #0
   3637c:	beq	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   36380:	ldr	r3, [r6, #4]
   36384:	add	r0, r0, #4
   36388:	ldm	r3, {r1, r2}
   3638c:	bl	2b998 <fb_symbol_table_find@@Base>
   36390:	subs	r7, r0, #0
   36394:	beq	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   36398:	ldrh	r3, [r7, #8]
   3639c:	cmp	r3, #4
   363a0:	bhi	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   363a4:	mov	r0, r9
   363a8:	ldr	r1, [r7, #16]
   363ac:	bl	2b21c <ptr_set_find_item@@Base>
   363b0:	cmp	r0, #0
   363b4:	bne	36f78 <__flatcc_fb_build_schema@@Base+0x12c4>
   363b8:	ldr	ip, [r4, #16]
   363bc:	mov	r3, r4
   363c0:	mov	r1, ip
   363c4:	mov	r0, fp
   363c8:	ldr	r2, [sp, #36]	; 0x24
   363cc:	bl	2f53c <error_ref_sym@@Base>
   363d0:	mov	r3, #1
   363d4:	strh	r3, [r4, #24]
   363d8:	ldr	r4, [r4]
   363dc:	cmp	r4, #0
   363e0:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   363e4:	ldr	r9, [sp, #16]
   363e8:	ldr	r9, [r9]
   363ec:	cmp	r9, #0
   363f0:	bne	36140 <__flatcc_fb_build_schema@@Base+0x48c>
   363f4:	ldr	r0, [fp, #392]	; 0x188
   363f8:	ldr	r3, [fp, #396]	; 0x18c
   363fc:	cmp	r3, #0
   36400:	beq	36424 <__flatcc_fb_build_schema@@Base+0x770>
   36404:	mov	r1, #0
   36408:	b	36410 <__flatcc_fb_build_schema@@Base+0x75c>
   3640c:	mov	r3, r2
   36410:	ldr	r2, [r3, #120]	; 0x78
   36414:	str	r1, [r3, #120]	; 0x78
   36418:	mov	r1, r3
   3641c:	cmp	r2, #0
   36420:	bne	3640c <__flatcc_fb_build_schema@@Base+0x758>
   36424:	cmp	r0, #0
   36428:	str	r3, [fp, #396]	; 0x18c
   3642c:	beq	37240 <__flatcc_fb_build_schema@@Base+0x158c>
   36430:	mov	ip, #0
   36434:	add	r5, sp, #92	; 0x5c
   36438:	mov	r4, ip
   3643c:	add	lr, sp, #56	; 0x38
   36440:	ldrh	r1, [r0, #8]
   36444:	cmp	r1, #0
   36448:	bne	37234 <__flatcc_fb_build_schema@@Base+0x1580>
   3644c:	ldrh	r3, [r0, #92]	; 0x5c
   36450:	ldr	r2, [r0, #20]
   36454:	ands	r3, r3, #8
   36458:	bne	374f4 <__flatcc_fb_build_schema@@Base+0x1840>
   3645c:	cmp	r2, #0
   36460:	str	r3, [sp, #60]	; 0x3c
   36464:	str	r3, [sp, #64]	; 0x40
   36468:	str	r3, [sp, #68]	; 0x44
   3646c:	str	r3, [sp, #72]	; 0x48
   36470:	str	r3, [sp, #76]	; 0x4c
   36474:	str	r3, [sp, #80]	; 0x50
   36478:	str	r3, [sp, #84]	; 0x54
   3647c:	str	r3, [sp, #88]	; 0x58
   36480:	str	r3, [sp, #92]	; 0x5c
   36484:	str	r3, [sp, #96]	; 0x60
   36488:	str	r3, [sp, #100]	; 0x64
   3648c:	str	r3, [sp, #104]	; 0x68
   36490:	str	r3, [sp, #108]	; 0x6c
   36494:	str	r3, [sp, #112]	; 0x70
   36498:	str	r3, [sp, #116]	; 0x74
   3649c:	str	r3, [sp, #120]	; 0x78
   364a0:	str	r3, [sp, #124]	; 0x7c
   364a4:	str	r3, [sp, #128]	; 0x80
   364a8:	beq	371b4 <__flatcc_fb_build_schema@@Base+0x1500>
   364ac:	mov	r1, r2
   364b0:	ldrh	r6, [r1, #24]
   364b4:	ldrh	r3, [r1, #74]	; 0x4a
   364b8:	sub	r6, r6, #1
   364bc:	cmp	r6, #14
   364c0:	addls	pc, pc, r6, lsl #2
   364c4:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364c8:	b	37204 <__flatcc_fb_build_schema@@Base+0x1550>
   364cc:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364d0:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364d4:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364d8:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364dc:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364e0:	b	37140 <__flatcc_fb_build_schema@@Base+0x148c>
   364e4:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364e8:	b	37140 <__flatcc_fb_build_schema@@Base+0x148c>
   364ec:	b	37140 <__flatcc_fb_build_schema@@Base+0x148c>
   364f0:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364f4:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364f8:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   364fc:	b	37128 <__flatcc_fb_build_schema@@Base+0x1474>
   36500:	b	37140 <__flatcc_fb_build_schema@@Base+0x148c>
   36504:	ldr	r3, [fp, #184]	; 0xb8
   36508:	cmp	r3, #0
   3650c:	beq	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   36510:	mov	r1, sl
   36514:	mov	r0, fp
   36518:	bl	32e38 <__flatcc_fb_clear_parser@@Base+0x708>
   3651c:	cmp	r0, #0
   36520:	bne	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   36524:	ldr	sl, [sl]
   36528:	cmp	sl, #0
   3652c:	bne	35f58 <__flatcc_fb_build_schema@@Base+0x2a4>
   36530:	b	360d4 <__flatcc_fb_build_schema@@Base+0x420>
   36534:	ldrh	r5, [sl, #48]	; 0x30
   36538:	cmp	r5, #0
   3653c:	bne	37978 <__flatcc_fb_build_schema@@Base+0x1cc4>
   36540:	ldr	r4, [sl, #28]
   36544:	mov	r2, #0
   36548:	mov	r3, #0
   3654c:	add	r6, sp, #96	; 0x60
   36550:	strd	r2, [sp, #96]	; 0x60
   36554:	strd	r2, [r6, #8]
   36558:	strd	r2, [r6, #16]
   3655c:	cmp	r4, #0
   36560:	strd	r2, [r6, #24]
   36564:	strd	r2, [r6, #32]
   36568:	strheq	r4, [sl, #92]	; 0x5c
   3656c:	strd	r2, [r6, #40]	; 0x28
   36570:	beq	36760 <__flatcc_fb_build_schema@@Base+0xaac>
   36574:	ldr	r3, [pc, #1896]	; 36ce4 <__flatcc_fb_build_schema@@Base+0x1030>
   36578:	mov	r7, #100	; 0x64
   3657c:	ldr	r8, [pc, #1892]	; 36ce8 <__flatcc_fb_build_schema@@Base+0x1034>
   36580:	ldr	r9, [pc, #1892]	; 36cec <__flatcc_fb_build_schema@@Base+0x1038>
   36584:	add	r3, pc, r3
   36588:	add	r8, pc, r8
   3658c:	str	r3, [sp, #16]
   36590:	add	r9, pc, r9
   36594:	b	365d8 <__flatcc_fb_build_schema@@Base+0x924>
   36598:	add	r1, r8, r1
   3659c:	str	r4, [r6, r2, lsl #2]
   365a0:	ldr	r2, [r1, #204]	; 0xcc
   365a4:	cmp	r2, #0
   365a8:	bne	36654 <__flatcc_fb_build_schema@@Base+0x9a0>
   365ac:	ldrh	r3, [r4, #16]
   365b0:	cmp	r3, #0
   365b4:	bne	377e4 <__flatcc_fb_build_schema@@Base+0x1b30>
   365b8:	ldr	r4, [r4]
   365bc:	subs	r7, r7, #1
   365c0:	movne	r2, #1
   365c4:	moveq	r2, #0
   365c8:	cmp	r4, #0
   365cc:	moveq	r2, #0
   365d0:	cmp	r2, #0
   365d4:	beq	366e0 <__flatcc_fb_build_schema@@Base+0xa2c>
   365d8:	ldr	r3, [r4, #4]
   365dc:	ldr	r0, [fp, #412]	; 0x19c
   365e0:	ldm	r3, {r1, r2}
   365e4:	add	r0, r0, #16
   365e8:	bl	3e1d0 <fb_name_table_find@@Base>
   365ec:	subs	r2, r0, #0
   365f0:	beq	36c3c <__flatcc_fb_build_schema@@Base+0xf88>
   365f4:	ldr	r2, [r2, #24]
   365f8:	cmp	r2, #0
   365fc:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36600:	mov	r3, #16
   36604:	asr	r3, r3, r2
   36608:	ands	ip, r3, #1
   3660c:	beq	36bb8 <__flatcc_fb_build_schema@@Base+0xf04>
   36610:	ldr	ip, [r6, r2, lsl #2]
   36614:	mov	r3, #1
   36618:	lsl	r1, r2, #2
   3661c:	orr	r5, r5, r3, lsl r2
   36620:	uxth	r5, r5
   36624:	cmp	ip, #0
   36628:	beq	36598 <__flatcc_fb_build_schema@@Base+0x8e4>
   3662c:	mov	r2, #0
   36630:	ldr	r1, [r4, #4]
   36634:	mov	r0, fp
   36638:	mov	r3, r2
   3663c:	str	r2, [sp]
   36640:	str	r2, [sp, #4]
   36644:	ldr	r2, [pc, #1700]	; 36cf0 <__flatcc_fb_build_schema@@Base+0x103c>
   36648:	add	r2, pc, r2
   3664c:	bl	2ddbc <__flatcc_error_report@@Base>
   36650:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36654:	cmp	r2, #2
   36658:	bne	3668c <__flatcc_fb_build_schema@@Base+0x9d8>
   3665c:	ldrh	r3, [r4, #16]
   36660:	cmp	r3, #2
   36664:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36668:	ldr	r2, [pc, #1668]	; 36cf4 <__flatcc_fb_build_schema@@Base+0x1040>
   3666c:	mov	r3, ip
   36670:	mov	r0, fp
   36674:	ldr	r1, [r4, #4]
   36678:	str	ip, [sp]
   3667c:	str	ip, [sp, #4]
   36680:	add	r2, pc, r2
   36684:	bl	2ddbc <__flatcc_error_report@@Base>
   36688:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   3668c:	cmp	r2, #5
   36690:	beq	36c78 <__flatcc_fb_build_schema@@Base+0xfc4>
   36694:	cmp	r2, #4
   36698:	bne	36dc4 <__flatcc_fb_build_schema@@Base+0x1110>
   3669c:	ldrh	r3, [r4, #16]
   366a0:	sub	r3, r3, #4
   366a4:	cmp	r3, #1
   366a8:	bls	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   366ac:	mov	r3, ip
   366b0:	mov	r0, fp
   366b4:	ldr	r1, [r4, #4]
   366b8:	str	ip, [sp]
   366bc:	str	ip, [sp, #4]
   366c0:	ldr	r2, [sp, #16]
   366c4:	bl	2ddbc <__flatcc_error_report@@Base>
   366c8:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   366cc:	cmp	ip, #0
   366d0:	streq	sl, [r4, #16]
   366d4:	streq	r6, [r4, #88]	; 0x58
   366d8:	bne	35d58 <__flatcc_fb_build_schema@@Base+0xa4>
   366dc:	b	35d18 <__flatcc_fb_build_schema@@Base+0x64>
   366e0:	cmp	r4, #0
   366e4:	ldr	r7, [sp, #112]	; 0x70
   366e8:	beq	3670c <__flatcc_fb_build_schema@@Base+0xa58>
   366ec:	mov	r3, r2
   366f0:	ldr	r1, [r4, #4]
   366f4:	mov	r0, fp
   366f8:	str	r2, [sp]
   366fc:	str	r2, [sp, #4]
   36700:	ldr	r2, [pc, #1520]	; 36cf8 <__flatcc_fb_build_schema@@Base+0x1044>
   36704:	add	r2, pc, r2
   36708:	bl	2ddbc <__flatcc_error_report@@Base>
   3670c:	cmp	r7, #0
   36710:	strh	r5, [sl, #92]	; 0x5c
   36714:	beq	36760 <__flatcc_fb_build_schema@@Base+0xaac>
   36718:	ldrd	r0, [r7, #8]
   3671c:	subs	r3, r0, #1
   36720:	str	r3, [sp, #40]	; 0x28
   36724:	sbc	r3, r1, #0
   36728:	str	r3, [sp, #44]	; 0x2c
   3672c:	ldrd	r2, [sp, #40]	; 0x28
   36730:	cmp	r3, #0
   36734:	cmpeq	r2, #255	; 0xff
   36738:	bls	36dfc <__flatcc_fb_build_schema@@Base+0x1148>
   3673c:	mov	r2, #0
   36740:	ldr	r1, [sl, #4]
   36744:	mov	r0, fp
   36748:	mov	r3, r2
   3674c:	str	r2, [sp]
   36750:	str	r2, [sp, #4]
   36754:	ldr	r2, [pc, #1440]	; 36cfc <__flatcc_fb_build_schema@@Base+0x1048>
   36758:	add	r2, pc, r2
   3675c:	bl	2ddbc <__flatcc_error_report@@Base>
   36760:	ldr	r8, [sl, #20]
   36764:	cmp	r8, #0
   36768:	beq	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   3676c:	ldr	r3, [pc, #1420]	; 36d00 <__flatcc_fb_build_schema@@Base+0x104c>
   36770:	str	sl, [sp, #24]
   36774:	add	r3, pc, r3
   36778:	str	r3, [sp, #52]	; 0x34
   3677c:	add	r3, sl, #56	; 0x38
   36780:	ldr	sl, [sp, #28]
   36784:	str	r3, [sp, #16]
   36788:	mov	r3, #0
   3678c:	str	r3, [sp, #36]	; 0x24
   36790:	mov	r2, #1
   36794:	mov	r1, r8
   36798:	ldr	r0, [sp, #16]
   3679c:	bl	2b970 <fb_symbol_table_insert_item@@Base>
   367a0:	cmp	r0, #0
   367a4:	bne	36b18 <__flatcc_fb_build_schema@@Base+0xe64>
   367a8:	ldrh	r3, [r8, #8]
   367ac:	cmp	r3, #5
   367b0:	bne	378f8 <__flatcc_fb_build_schema@@Base+0x1c44>
   367b4:	ldr	r3, [fp, #168]	; 0xa8
   367b8:	ldr	r2, [fp, #172]	; 0xac
   367bc:	ldr	r4, [r8, #64]	; 0x40
   367c0:	cmp	r2, #0
   367c4:	mov	r2, #0
   367c8:	movne	r9, #128	; 0x80
   367cc:	moveq	r9, #0
   367d0:	cmp	r3, #0
   367d4:	mov	r3, #0
   367d8:	orrne	r9, r9, #4
   367dc:	cmp	r4, #0
   367e0:	strd	r2, [r6]
   367e4:	strd	r2, [r6, #8]
   367e8:	strd	r2, [r6, #16]
   367ec:	strd	r2, [r6, #24]
   367f0:	strd	r2, [r6, #32]
   367f4:	strd	r2, [r6, #40]	; 0x28
   367f8:	beq	375cc <__flatcc_fb_build_schema@@Base+0x1918>
   367fc:	ldr	r3, [pc, #1280]	; 36d04 <__flatcc_fb_build_schema@@Base+0x1050>
   36800:	mov	r5, #0
   36804:	mov	r7, #100	; 0x64
   36808:	add	r3, pc, r3
   3680c:	str	r3, [sp, #32]
   36810:	b	36858 <__flatcc_fb_build_schema@@Base+0xba4>
   36814:	ldr	r3, [sp, #12]
   36818:	str	r4, [r6, r2, lsl #2]
   3681c:	add	r1, r3, r1
   36820:	ldr	r2, [r1, #204]	; 0xcc
   36824:	cmp	r2, #0
   36828:	bne	368d0 <__flatcc_fb_build_schema@@Base+0xc1c>
   3682c:	ldrh	r3, [r4, #16]
   36830:	cmp	r3, #0
   36834:	bne	374d0 <__flatcc_fb_build_schema@@Base+0x181c>
   36838:	ldr	r4, [r4]
   3683c:	subs	r7, r7, #1
   36840:	movne	r2, #1
   36844:	moveq	r2, #0
   36848:	cmp	r4, #0
   3684c:	moveq	r2, #0
   36850:	cmp	r2, #0
   36854:	beq	35f7c <__flatcc_fb_build_schema@@Base+0x2c8>
   36858:	ldr	r3, [r4, #4]
   3685c:	ldr	r0, [fp, #412]	; 0x19c
   36860:	ldm	r3, {r1, r2}
   36864:	add	r0, r0, #16
   36868:	bl	3e1d0 <fb_name_table_find@@Base>
   3686c:	subs	r2, r0, #0
   36870:	beq	36ac4 <__flatcc_fb_build_schema@@Base+0xe10>
   36874:	ldr	r2, [r2, #24]
   36878:	cmp	r2, #0
   3687c:	beq	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36880:	asr	r3, r9, r2
   36884:	ands	ip, r3, #1
   36888:	beq	36948 <__flatcc_fb_build_schema@@Base+0xc94>
   3688c:	ldr	ip, [r6, r2, lsl #2]
   36890:	mov	r3, #1
   36894:	lsl	r1, r2, #2
   36898:	orr	r5, r5, r3, lsl r2
   3689c:	uxth	r5, r5
   368a0:	cmp	ip, #0
   368a4:	beq	36814 <__flatcc_fb_build_schema@@Base+0xb60>
   368a8:	mov	r2, #0
   368ac:	ldr	r1, [r4, #4]
   368b0:	mov	r0, fp
   368b4:	mov	r3, r2
   368b8:	str	r2, [sp]
   368bc:	str	r2, [sp, #4]
   368c0:	ldr	r2, [pc, #1088]	; 36d08 <__flatcc_fb_build_schema@@Base+0x1054>
   368c4:	add	r2, pc, r2
   368c8:	bl	2ddbc <__flatcc_error_report@@Base>
   368cc:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   368d0:	cmp	r2, #2
   368d4:	bne	36908 <__flatcc_fb_build_schema@@Base+0xc54>
   368d8:	ldrh	r3, [r4, #16]
   368dc:	cmp	r3, #2
   368e0:	beq	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   368e4:	ldr	r2, [pc, #1056]	; 36d0c <__flatcc_fb_build_schema@@Base+0x1058>
   368e8:	mov	r3, ip
   368ec:	mov	r0, fp
   368f0:	ldr	r1, [r4, #4]
   368f4:	str	ip, [sp]
   368f8:	str	ip, [sp, #4]
   368fc:	add	r2, pc, r2
   36900:	bl	2ddbc <__flatcc_error_report@@Base>
   36904:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36908:	cmp	r2, #5
   3690c:	beq	36ae8 <__flatcc_fb_build_schema@@Base+0xe34>
   36910:	cmp	r2, #4
   36914:	bne	36b4c <__flatcc_fb_build_schema@@Base+0xe98>
   36918:	ldrh	r3, [r4, #16]
   3691c:	sub	r3, r3, #4
   36920:	cmp	r3, #1
   36924:	bls	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36928:	mov	r3, ip
   3692c:	mov	r0, fp
   36930:	ldr	r1, [r4, #4]
   36934:	str	ip, [sp]
   36938:	str	ip, [sp, #4]
   3693c:	ldr	r2, [sp, #32]
   36940:	bl	2ddbc <__flatcc_error_report@@Base>
   36944:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36948:	ldr	r2, [pc, #960]	; 36d10 <__flatcc_fb_build_schema@@Base+0x105c>
   3694c:	mov	r3, ip
   36950:	mov	r0, fp
   36954:	ldr	r1, [r4, #4]
   36958:	str	ip, [sp]
   3695c:	str	ip, [sp, #4]
   36960:	add	r2, pc, r2
   36964:	bl	2ddbc <__flatcc_error_report@@Base>
   36968:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   3696c:	mov	r4, r0
   36970:	ldr	r3, [r5, #4]
   36974:	add	r0, r4, #4
   36978:	ldm	r3, {r1, r2}
   3697c:	bl	2b998 <fb_symbol_table_find@@Base>
   36980:	subs	r7, r0, #0
   36984:	beq	36a34 <__flatcc_fb_build_schema@@Base+0xd80>
   36988:	ldrh	r3, [r7, #8]
   3698c:	cmp	r3, #4
   36990:	bhi	36a34 <__flatcc_fb_build_schema@@Base+0xd80>
   36994:	ldr	r1, [r7, #16]
   36998:	ldr	r0, [sp, #20]
   3699c:	bl	2b21c <ptr_set_find_item@@Base>
   369a0:	cmp	r0, #0
   369a4:	beq	36a34 <__flatcc_fb_build_schema@@Base+0xd80>
   369a8:	ldrh	r4, [r7, #8]
   369ac:	mov	r3, #14
   369b0:	str	r7, [r8, #16]
   369b4:	strh	r3, [r8, #24]
   369b8:	cmp	r4, #1
   369bc:	beq	375e0 <__flatcc_fb_build_schema@@Base+0x192c>
   369c0:	ldr	r2, [fp, #152]	; 0x98
   369c4:	cmp	r2, #0
   369c8:	beq	379a0 <__flatcc_fb_build_schema@@Base+0x1cec>
   369cc:	cmp	r4, #3
   369d0:	bne	37938 <__flatcc_fb_build_schema@@Base+0x1c84>
   369d4:	ldrh	r3, [r8, #72]	; 0x48
   369d8:	tst	r3, #128	; 0x80
   369dc:	beq	369f8 <__flatcc_fb_build_schema@@Base+0xd44>
   369e0:	ldr	r2, [fp, #148]	; 0x94
   369e4:	cmp	r2, #0
   369e8:	beq	378a4 <__flatcc_fb_build_schema@@Base+0x1bf0>
   369ec:	ldr	r3, [sp, #36]	; 0x24
   369f0:	add	r3, r3, #1
   369f4:	str	r3, [sp, #36]	; 0x24
   369f8:	ldrh	r3, [r8, #56]	; 0x38
   369fc:	cmp	r3, #0
   36a00:	beq	36064 <__flatcc_fb_build_schema@@Base+0x3b0>
   36a04:	mov	ip, #0
   36a08:	mov	r0, fp
   36a0c:	ldr	r1, [r8, #4]
   36a10:	mov	r3, ip
   36a14:	str	ip, [sp]
   36a18:	str	ip, [sp, #4]
   36a1c:	ldr	r2, [sp, #48]	; 0x30
   36a20:	bl	2ddbc <__flatcc_error_report@@Base>
   36a24:	ldr	r8, [r8]
   36a28:	cmp	r8, #0
   36a2c:	bne	36790 <__flatcc_fb_build_schema@@Base+0xadc>
   36a30:	b	36070 <__flatcc_fb_build_schema@@Base+0x3bc>
   36a34:	ldr	r3, [r4]
   36a38:	cmp	r3, #0
   36a3c:	beq	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   36a40:	mov	r7, #0
   36a44:	b	36a4c <__flatcc_fb_build_schema@@Base+0xd98>
   36a48:	mov	r7, r2
   36a4c:	ldr	r3, [r3]
   36a50:	add	r2, r7, #1
   36a54:	cmp	r3, #0
   36a58:	bne	36a48 <__flatcc_fb_build_schema@@Base+0xd94>
   36a5c:	rsb	r7, r7, #0
   36a60:	b	36a90 <__flatcc_fb_build_schema@@Base+0xddc>
   36a64:	cmp	sl, #0
   36a68:	beq	36a8c <__flatcc_fb_build_schema@@Base+0xdd8>
   36a6c:	ldr	r0, [fp, #412]	; 0x19c
   36a70:	cmp	r0, #0
   36a74:	beq	36a8c <__flatcc_fb_build_schema@@Base+0xdd8>
   36a78:	mov	r2, r7
   36a7c:	ldr	r1, [r4]
   36a80:	bl	2ca20 <fb_scope_table_find@@Base>
   36a84:	cmp	r0, #0
   36a88:	bne	3696c <__flatcc_fb_build_schema@@Base+0xcb8>
   36a8c:	add	r7, r7, #1
   36a90:	cmp	r7, #0
   36a94:	bne	36a64 <__flatcc_fb_build_schema@@Base+0xdb0>
   36a98:	cmp	sl, #0
   36a9c:	beq	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   36aa0:	ldr	r0, [fp, #412]	; 0x19c
   36aa4:	cmp	r0, #0
   36aa8:	beq	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   36aac:	mov	r2, r7
   36ab0:	mov	r1, r7
   36ab4:	bl	2ca20 <fb_scope_table_find@@Base>
   36ab8:	subs	r4, r0, #0
   36abc:	bne	36970 <__flatcc_fb_build_schema@@Base+0xcbc>
   36ac0:	b	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   36ac4:	mov	r3, r2
   36ac8:	ldr	r1, [r4, #4]
   36acc:	mov	r0, fp
   36ad0:	str	r2, [sp]
   36ad4:	str	r2, [sp, #4]
   36ad8:	ldr	r2, [pc, #564]	; 36d14 <__flatcc_fb_build_schema@@Base+0x1060>
   36adc:	add	r2, pc, r2
   36ae0:	bl	2ddbc <__flatcc_error_report@@Base>
   36ae4:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36ae8:	ldrh	r3, [r4, #16]
   36aec:	cmp	r3, #5
   36af0:	beq	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36af4:	ldr	r2, [pc, #540]	; 36d18 <__flatcc_fb_build_schema@@Base+0x1064>
   36af8:	mov	r3, ip
   36afc:	mov	r0, fp
   36b00:	ldr	r1, [r4, #4]
   36b04:	str	ip, [sp]
   36b08:	str	ip, [sp, #4]
   36b0c:	add	r2, pc, r2
   36b10:	bl	2ddbc <__flatcc_error_report@@Base>
   36b14:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36b18:	mov	r2, #0
   36b1c:	ldr	r3, [r0, #4]
   36b20:	mov	r0, fp
   36b24:	ldr	r1, [r8, #4]
   36b28:	str	r2, [sp]
   36b2c:	str	r2, [sp, #4]
   36b30:	ldr	r2, [pc, #484]	; 36d1c <__flatcc_fb_build_schema@@Base+0x1068>
   36b34:	add	r2, pc, r2
   36b38:	bl	2ddbc <__flatcc_error_report@@Base>
   36b3c:	ldr	r8, [r8]
   36b40:	cmp	r8, #0
   36b44:	bne	36790 <__flatcc_fb_build_schema@@Base+0xadc>
   36b48:	b	36070 <__flatcc_fb_build_schema@@Base+0x3bc>
   36b4c:	cmp	r2, #6
   36b50:	bne	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36b54:	ldrh	r3, [r4, #16]
   36b58:	cmp	r3, #6
   36b5c:	beq	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36b60:	mov	ip, #0
   36b64:	mov	r0, fp
   36b68:	ldr	r1, [r4, #4]
   36b6c:	mov	r3, ip
   36b70:	str	ip, [sp]
   36b74:	str	ip, [sp, #4]
   36b78:	ldr	r2, [sp, #52]	; 0x34
   36b7c:	bl	2ddbc <__flatcc_error_report@@Base>
   36b80:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   36b84:	mov	r2, #0
   36b88:	ldr	r1, [r8, #4]
   36b8c:	mov	r0, fp
   36b90:	mov	r3, r2
   36b94:	str	r2, [sp]
   36b98:	str	r2, [sp, #4]
   36b9c:	ldr	r2, [pc, #380]	; 36d20 <__flatcc_fb_build_schema@@Base+0x106c>
   36ba0:	ldr	sl, [sp, #24]
   36ba4:	add	r2, pc, r2
   36ba8:	bl	2ddbc <__flatcc_error_report@@Base>
   36bac:	mov	r3, #1
   36bb0:	strh	r3, [sl, #48]	; 0x30
   36bb4:	b	360c8 <__flatcc_fb_build_schema@@Base+0x414>
   36bb8:	ldr	r2, [pc, #356]	; 36d24 <__flatcc_fb_build_schema@@Base+0x1070>
   36bbc:	mov	r3, ip
   36bc0:	mov	r0, fp
   36bc4:	ldr	r1, [r4, #4]
   36bc8:	str	ip, [sp]
   36bcc:	str	ip, [sp, #4]
   36bd0:	add	r2, pc, r2
   36bd4:	bl	2ddbc <__flatcc_error_report@@Base>
   36bd8:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36bdc:	movw	r3, #40389	; 0x9dc5
   36be0:	movt	r3, #33052	; 0x811c
   36be4:	ldr	r2, [r8, #4]
   36be8:	ldm	r2, {r2, lr}
   36bec:	cmp	lr, #0
   36bf0:	beq	36c0c <__flatcc_fb_build_schema@@Base+0xf58>
   36bf4:	add	lr, r2, lr
   36bf8:	ldrb	r9, [r2], #1
   36bfc:	eor	r3, r3, r9
   36c00:	cmp	r2, lr
   36c04:	mul	r3, r5, r3
   36c08:	bne	36bf8 <__flatcc_fb_build_schema@@Base+0xf44>
   36c0c:	ldr	r8, [r8]
   36c10:	eor	r3, r3, #46	; 0x2e
   36c14:	mul	r3, r5, r3
   36c18:	cmp	r8, #0
   36c1c:	bne	36be4 <__flatcc_fb_build_schema@@Base+0xf30>
   36c20:	cmp	ip, #0
   36c24:	bne	35d60 <__flatcc_fb_build_schema@@Base+0xac>
   36c28:	cmp	r3, #0
   36c2c:	bne	3787c <__flatcc_fb_build_schema@@Base+0x1bc8>
   36c30:	str	sl, [r4, #16]
   36c34:	str	r6, [r4, #88]	; 0x58
   36c38:	b	35d90 <__flatcc_fb_build_schema@@Base+0xdc>
   36c3c:	mov	r3, r2
   36c40:	ldr	r1, [r4, #4]
   36c44:	mov	r0, fp
   36c48:	str	r2, [sp]
   36c4c:	str	r2, [sp, #4]
   36c50:	ldr	r2, [pc, #208]	; 36d28 <__flatcc_fb_build_schema@@Base+0x1074>
   36c54:	add	r2, pc, r2
   36c58:	bl	2ddbc <__flatcc_error_report@@Base>
   36c5c:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36c60:	tst	r5, #128	; 0x80
   36c64:	beq	369f8 <__flatcc_fb_build_schema@@Base+0xd44>
   36c68:	ldr	r3, [sp, #36]	; 0x24
   36c6c:	add	r3, r3, #1
   36c70:	str	r3, [sp, #36]	; 0x24
   36c74:	b	369f8 <__flatcc_fb_build_schema@@Base+0xd44>
   36c78:	ldrh	r3, [r4, #16]
   36c7c:	cmp	r3, #5
   36c80:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36c84:	ldr	r2, [pc, #160]	; 36d2c <__flatcc_fb_build_schema@@Base+0x1078>
   36c88:	mov	r3, ip
   36c8c:	mov	r0, fp
   36c90:	ldr	r1, [r4, #4]
   36c94:	str	ip, [sp]
   36c98:	str	ip, [sp, #4]
   36c9c:	add	r2, pc, r2
   36ca0:	bl	2ddbc <__flatcc_error_report@@Base>
   36ca4:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36ca8:	andeq	r5, r3, r0, lsl r3
   36cac:	andeq	r3, r2, r8, ror #12
   36cb0:	andeq	r3, r2, r0, ror #12
   36cb4:	muleq	r3, ip, r0
   36cb8:	andeq	r3, r2, r0, lsl #14
   36cbc:	muleq	r2, r8, r2
   36cc0:			; <UNDEFINED> instruction: 0x000227b8
   36cc4:	ldrdeq	r3, [r2], -r0
   36cc8:	andeq	r3, r2, r0, lsl #6
   36ccc:	strheq	r2, [r2], -ip
   36cd0:	strdeq	r2, [r2], -r0
   36cd4:	andeq	r3, r2, r0, lsr #10
   36cd8:	andeq	r3, r2, r8, asr #11
   36cdc:	andeq	r3, r2, ip, lsl r6
   36ce0:	andeq	r3, r2, r8, lsl #10
   36ce4:	andeq	r2, r2, r0, lsl #3
   36ce8:	andeq	r1, r2, r0, ror #24
   36cec:	muleq	r2, r8, r1
   36cf0:	andeq	r2, r2, ip, lsl r0
   36cf4:	andeq	r2, r2, r4, lsr r0
   36cf8:	andeq	r2, r2, r0, asr r0
   36cfc:	andeq	r2, r2, r8, lsr sp
   36d00:			; <UNDEFINED> instruction: 0x00021fb4
   36d04:	strdeq	r1, [r2], -ip
   36d08:	andeq	r1, r2, r0, lsr #27
   36d0c:			; <UNDEFINED> instruction: 0x00021db8
   36d10:	ldrdeq	r1, [r2], -r4
   36d14:	andeq	r1, r2, r8, lsr fp
   36d18:	andeq	r1, r2, ip, asr #23
   36d1c:	andeq	r2, r2, r8, lsr #19
   36d20:	andeq	r2, r2, r4, ror #20
   36d24:	andeq	r1, r2, r4, ror #20
   36d28:	andeq	r1, r2, r0, asr #19
   36d2c:	andeq	r1, r2, ip, lsr sl
   36d30:	andeq	r1, r2, r8, lsr r7
   36d34:	ldrdeq	r1, [r2], -r8
   36d38:	andeq	r2, r2, ip, lsr #7
   36d3c:	andeq	r1, r2, ip, asr #6
   36d40:	andeq	r2, r2, r4, lsr #6
   36d44:	andeq	r1, r2, r4, lsr #6
   36d48:	ldrdeq	r1, [r2], -r0
   36d4c:	andeq	r2, r2, r8, lsl r3
   36d50:	andeq	r1, r2, r0, asr r1
   36d54:	andeq	r1, r2, r4, lsr #3
   36d58:	andeq	r1, r2, ip, lsl #3
   36d5c:	andeq	r2, r2, r4, ror #4
   36d60:	andeq	r1, r2, ip, lsl #31
   36d64:	andeq	r2, r2, r4, asr #1
   36d68:	muleq	r2, r0, lr
   36d6c:	andeq	r0, r2, ip, ror #28
   36d70:	ldrdeq	r1, [r2], -r0
   36d74:	andeq	r2, r2, r4, lsr r0
   36d78:	andeq	r1, r2, r4, ror #31
   36d7c:	ldrdeq	r1, [r2], -r8
   36d80:	andeq	r1, r2, r4, ror #30
   36d84:	andeq	r1, r2, r8, ror #23
   36d88:	strdeq	r1, [r2], -ip
   36d8c:	ldrdeq	r1, [r2], -r0
   36d90:	andeq	r1, r2, r0, lsl ip
   36d94:	muleq	r0, ip, r0
   36d98:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   36d9c:	andeq	r0, r2, r0, ror #15
   36da0:	andeq	r0, r2, ip, lsr r9
   36da4:	andeq	r1, r2, r4, lsr lr
   36da8:			; <UNDEFINED> instruction: 0x000207bc
   36dac:	andeq	r0, r2, r8, lsl r9
   36db0:			; <UNDEFINED> instruction: 0x000219bc
   36db4:	muleq	r2, r8, r7
   36db8:	strdeq	r0, [r2], -r4
   36dbc:	andeq	r1, r2, r8, lsl #5
   36dc0:	strdeq	r1, [r2], -r8
   36dc4:	cmp	r2, #6
   36dc8:	bne	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36dcc:	ldrh	r3, [r4, #16]
   36dd0:	cmp	r3, #6
   36dd4:	beq	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36dd8:	mov	ip, #0
   36ddc:	mov	r2, r9
   36de0:	ldr	r1, [r4, #4]
   36de4:	mov	r3, ip
   36de8:	mov	r0, fp
   36dec:	str	ip, [sp]
   36df0:	str	ip, [sp, #4]
   36df4:	bl	2ddbc <__flatcc_error_report@@Base>
   36df8:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   36dfc:	cmp	r1, #0
   36e00:	cmpeq	r0, #1
   36e04:	beq	36e3c <__flatcc_fb_build_schema@@Base+0x1188>
   36e08:	mov	r3, #0
   36e0c:	mov	r2, #2
   36e10:	cmp	r1, r3
   36e14:	cmpeq	r0, r2
   36e18:	beq	36e3c <__flatcc_fb_build_schema@@Base+0x1188>
   36e1c:	adds	r2, r2, r2
   36e20:	adc	r3, r3, r3
   36e24:	cmp	r1, r3
   36e28:	cmpeq	r0, r2
   36e2c:	bcc	3673c <__flatcc_fb_build_schema@@Base+0xa88>
   36e30:	cmp	r1, r3
   36e34:	cmpeq	r0, r2
   36e38:	bne	36e1c <__flatcc_fb_build_schema@@Base+0x1168>
   36e3c:	strh	r0, [sl, #104]	; 0x68
   36e40:	b	36760 <__flatcc_fb_build_schema@@Base+0xaac>
   36e44:	mov	r5, r0
   36e48:	ldr	r3, [r6, #4]
   36e4c:	add	r0, r5, #4
   36e50:	ldm	r3, {r1, r2}
   36e54:	bl	2b998 <fb_symbol_table_find@@Base>
   36e58:	subs	r7, r0, #0
   36e5c:	beq	36e80 <__flatcc_fb_build_schema@@Base+0x11cc>
   36e60:	ldrh	r3, [r7, #8]
   36e64:	cmp	r3, #4
   36e68:	bhi	36e80 <__flatcc_fb_build_schema@@Base+0x11cc>
   36e6c:	mov	r0, r9
   36e70:	ldr	r1, [r7, #16]
   36e74:	bl	2b21c <ptr_set_find_item@@Base>
   36e78:	cmp	r0, #0
   36e7c:	bne	362ec <__flatcc_fb_build_schema@@Base+0x638>
   36e80:	ldr	r3, [r5]
   36e84:	cmp	r3, #0
   36e88:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   36e8c:	mov	r7, #0
   36e90:	b	36e98 <__flatcc_fb_build_schema@@Base+0x11e4>
   36e94:	mov	r7, r2
   36e98:	ldr	r3, [r3]
   36e9c:	add	r2, r7, #1
   36ea0:	cmp	r3, #0
   36ea4:	bne	36e94 <__flatcc_fb_build_schema@@Base+0x11e0>
   36ea8:	rsb	r7, r7, #0
   36eac:	b	36edc <__flatcc_fb_build_schema@@Base+0x1228>
   36eb0:	cmp	sl, #0
   36eb4:	beq	36ed8 <__flatcc_fb_build_schema@@Base+0x1224>
   36eb8:	ldr	r0, [fp, #412]	; 0x19c
   36ebc:	cmp	r0, #0
   36ec0:	beq	36ed8 <__flatcc_fb_build_schema@@Base+0x1224>
   36ec4:	mov	r2, r7
   36ec8:	ldr	r1, [r5]
   36ecc:	bl	2ca20 <fb_scope_table_find@@Base>
   36ed0:	cmp	r0, #0
   36ed4:	bne	36e44 <__flatcc_fb_build_schema@@Base+0x1190>
   36ed8:	add	r7, r7, #1
   36edc:	cmp	r7, #0
   36ee0:	bne	36eb0 <__flatcc_fb_build_schema@@Base+0x11fc>
   36ee4:	cmp	sl, #0
   36ee8:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   36eec:	ldr	r0, [fp, #412]	; 0x19c
   36ef0:	cmp	r0, #0
   36ef4:	beq	36f0c <__flatcc_fb_build_schema@@Base+0x1258>
   36ef8:	mov	r2, r7
   36efc:	mov	r1, r7
   36f00:	bl	2ca20 <fb_scope_table_find@@Base>
   36f04:	subs	r5, r0, #0
   36f08:	bne	36e48 <__flatcc_fb_build_schema@@Base+0x1194>
   36f0c:	ldr	ip, [r4, #32]
   36f10:	mov	r3, r4
   36f14:	mov	r1, ip
   36f18:	mov	r0, fp
   36f1c:	ldr	r2, [sp, #32]
   36f20:	bl	2f53c <error_ref_sym@@Base>
   36f24:	mov	r3, #1
   36f28:	strh	r3, [r4, #24]
   36f2c:	ldr	r4, [r4]
   36f30:	cmp	r4, #0
   36f34:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   36f38:	b	363e4 <__flatcc_fb_build_schema@@Base+0x730>
   36f3c:	mov	r5, r0
   36f40:	ldr	r3, [r6, #4]
   36f44:	add	r0, r5, #4
   36f48:	ldm	r3, {r1, r2}
   36f4c:	bl	2b998 <fb_symbol_table_find@@Base>
   36f50:	subs	r7, r0, #0
   36f54:	beq	37098 <__flatcc_fb_build_schema@@Base+0x13e4>
   36f58:	ldrh	r3, [r7, #8]
   36f5c:	cmp	r3, #4
   36f60:	bhi	37098 <__flatcc_fb_build_schema@@Base+0x13e4>
   36f64:	mov	r0, r9
   36f68:	ldr	r1, [r7, #16]
   36f6c:	bl	2b21c <ptr_set_find_item@@Base>
   36f70:	cmp	r0, #0
   36f74:	beq	37098 <__flatcc_fb_build_schema@@Base+0x13e4>
   36f78:	ldrh	r6, [r7, #8]
   36f7c:	cmp	r6, #0
   36f80:	bne	37590 <__flatcc_fb_build_schema@@Base+0x18dc>
   36f84:	ldr	r5, [r4, #64]	; 0x40
   36f88:	mov	r2, #0
   36f8c:	mov	r3, #0
   36f90:	add	r8, sp, #96	; 0x60
   36f94:	mov	r1, #14
   36f98:	str	r7, [r4, #16]
   36f9c:	strd	r2, [sp, #96]	; 0x60
   36fa0:	strd	r2, [r8, #8]
   36fa4:	strd	r2, [r8, #16]
   36fa8:	cmp	r5, #0
   36fac:	strh	r1, [r4, #24]
   36fb0:	strd	r2, [r8, #24]
   36fb4:	strd	r2, [r8, #32]
   36fb8:	strd	r2, [r8, #40]	; 0x28
   36fbc:	strd	r2, [r4, #88]	; 0x58
   36fc0:	beq	37438 <__flatcc_fb_build_schema@@Base+0x1784>
   36fc4:	ldr	r3, [pc, #-668]	; 36d30 <__flatcc_fb_build_schema@@Base+0x107c>
   36fc8:	mov	r7, #100	; 0x64
   36fcc:	add	r3, pc, r3
   36fd0:	str	r3, [sp, #28]
   36fd4:	b	3701c <__flatcc_fb_build_schema@@Base+0x1368>
   36fd8:	ldr	r3, [sp, #24]
   36fdc:	str	r5, [r8, r2, lsl #2]
   36fe0:	add	r1, r3, r1
   36fe4:	ldr	r2, [r1, #204]	; 0xcc
   36fe8:	cmp	r2, #0
   36fec:	bne	3733c <__flatcc_fb_build_schema@@Base+0x1688>
   36ff0:	ldrh	r3, [r5, #16]
   36ff4:	cmp	r3, #0
   36ff8:	bne	37808 <__flatcc_fb_build_schema@@Base+0x1b54>
   36ffc:	ldr	r5, [r5]
   37000:	subs	r7, r7, #1
   37004:	movne	r2, #1
   37008:	moveq	r2, #0
   3700c:	cmp	r5, #0
   37010:	moveq	r2, #0
   37014:	cmp	r2, #0
   37018:	beq	37410 <__flatcc_fb_build_schema@@Base+0x175c>
   3701c:	ldr	r3, [r5, #4]
   37020:	ldr	r0, [fp, #412]	; 0x19c
   37024:	ldm	r3, {r1, r2}
   37028:	add	r0, r0, #16
   3702c:	bl	3e1d0 <fb_name_table_find@@Base>
   37030:	subs	r2, r0, #0
   37034:	beq	374ac <__flatcc_fb_build_schema@@Base+0x17f8>
   37038:	ldr	r2, [r2, #24]
   3703c:	cmp	r2, #0
   37040:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37044:	mov	r3, #4
   37048:	asr	r3, r3, r2
   3704c:	ands	ip, r3, #1
   37050:	beq	3744c <__flatcc_fb_build_schema@@Base+0x1798>
   37054:	ldr	ip, [r8, r2, lsl #2]
   37058:	mov	r3, #1
   3705c:	lsl	r1, r2, #2
   37060:	orr	r6, r6, r3, lsl r2
   37064:	uxth	r6, r6
   37068:	cmp	ip, #0
   3706c:	beq	36fd8 <__flatcc_fb_build_schema@@Base+0x1324>
   37070:	mov	r2, #0
   37074:	ldr	r1, [r5, #4]
   37078:	mov	r0, fp
   3707c:	mov	r3, r2
   37080:	str	r2, [sp]
   37084:	str	r2, [sp, #4]
   37088:	ldr	r2, [pc, #-860]	; 36d34 <__flatcc_fb_build_schema@@Base+0x1080>
   3708c:	add	r2, pc, r2
   37090:	bl	2ddbc <__flatcc_error_report@@Base>
   37094:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37098:	ldr	r3, [r5]
   3709c:	cmp	r3, #0
   370a0:	beq	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   370a4:	mov	r7, #0
   370a8:	b	370b0 <__flatcc_fb_build_schema@@Base+0x13fc>
   370ac:	mov	r7, r2
   370b0:	ldr	r3, [r3]
   370b4:	add	r2, r7, #1
   370b8:	cmp	r3, #0
   370bc:	bne	370ac <__flatcc_fb_build_schema@@Base+0x13f8>
   370c0:	rsb	r7, r7, #0
   370c4:	b	370f4 <__flatcc_fb_build_schema@@Base+0x1440>
   370c8:	cmp	sl, #0
   370cc:	beq	370f0 <__flatcc_fb_build_schema@@Base+0x143c>
   370d0:	ldr	r0, [fp, #412]	; 0x19c
   370d4:	cmp	r0, #0
   370d8:	beq	370f0 <__flatcc_fb_build_schema@@Base+0x143c>
   370dc:	mov	r2, r7
   370e0:	ldr	r1, [r5]
   370e4:	bl	2ca20 <fb_scope_table_find@@Base>
   370e8:	cmp	r0, #0
   370ec:	bne	36f3c <__flatcc_fb_build_schema@@Base+0x1288>
   370f0:	add	r7, r7, #1
   370f4:	cmp	r7, #0
   370f8:	bne	370c8 <__flatcc_fb_build_schema@@Base+0x1414>
   370fc:	cmp	sl, #0
   37100:	beq	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   37104:	ldr	r0, [fp, #412]	; 0x19c
   37108:	cmp	r0, #0
   3710c:	beq	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   37110:	mov	r2, r7
   37114:	mov	r1, r7
   37118:	bl	2ca20 <fb_scope_table_find@@Base>
   3711c:	subs	r5, r0, #0
   37120:	bne	36f40 <__flatcc_fb_build_schema@@Base+0x128c>
   37124:	b	363b8 <__flatcc_fb_build_schema@@Base+0x704>
   37128:	ldr	r6, [r1, #16]
   3712c:	ldrh	r3, [r6, #8]
   37130:	cmp	r3, #1
   37134:	beq	376f4 <__flatcc_fb_build_schema@@Base+0x1a40>
   37138:	cmp	r3, #3
   3713c:	beq	376f4 <__flatcc_fb_build_schema@@Base+0x1a40>
   37140:	ldrh	r3, [fp, #192]	; 0xc0
   37144:	cmp	r3, #0
   37148:	beq	379f8 <__flatcc_fb_build_schema@@Base+0x1d44>
   3714c:	lsrs	r6, r3, #1
   37150:	moveq	r3, r6
   37154:	beq	37174 <__flatcc_fb_build_schema@@Base+0x14c0>
   37158:	mov	r3, #0
   3715c:	add	r3, r3, #1
   37160:	lsrs	r6, r6, #1
   37164:	uxth	r3, r3
   37168:	bne	3715c <__flatcc_fb_build_schema@@Base+0x14a8>
   3716c:	cmp	r3, #7
   37170:	movcs	r3, #7
   37174:	lsl	r3, r3, #2
   37178:	add	r6, sp, #144	; 0x90
   3717c:	add	r6, r6, r3
   37180:	ldr	r7, [r6, #-84]	; 0xffffffac
   37184:	cmp	r7, #0
   37188:	add	r7, sp, #144	; 0x90
   3718c:	ldrne	r6, [r6, #-48]	; 0xffffffd0
   37190:	add	r3, r7, r3
   37194:	streq	r1, [r6, #-84]	; 0xffffffac
   37198:	strne	r1, [r6]
   3719c:	add	r6, r1, #108	; 0x6c
   371a0:	ldr	r1, [r1]
   371a4:	str	r6, [r3, #-48]	; 0xffffffd0
   371a8:	cmp	r1, #0
   371ac:	bne	364b0 <__flatcc_fb_build_schema@@Base+0x7fc>
   371b0:	ldr	r2, [sp, #88]	; 0x58
   371b4:	mov	r7, r5
   371b8:	mov	r6, #8
   371bc:	str	r5, [sp, #128]	; 0x80
   371c0:	b	371dc <__flatcc_fb_build_schema@@Base+0x1528>
   371c4:	sub	r3, r6, #2
   371c8:	add	r2, sp, #144	; 0x90
   371cc:	uxth	r3, r3
   371d0:	mov	r6, r1
   371d4:	add	r3, r2, r3, lsl #2
   371d8:	ldr	r2, [r3, #-84]	; 0xffffffac
   371dc:	sub	r1, r6, #1
   371e0:	cmp	r2, #0
   371e4:	uxth	r1, r1
   371e8:	bne	377b0 <__flatcc_fb_build_schema@@Base+0x1afc>
   371ec:	cmp	r1, #0
   371f0:	bne	371c4 <__flatcc_fb_build_schema@@Base+0x1510>
   371f4:	ldr	r3, [sp, #60]	; 0x3c
   371f8:	str	r3, [r7]
   371fc:	ldr	r3, [sp, #92]	; 0x5c
   37200:	b	37230 <__flatcc_fb_build_schema@@Base+0x157c>
   37204:	mov	r3, lr
   37208:	str	r4, [sp, #56]	; 0x38
   3720c:	b	37214 <__flatcc_fb_build_schema@@Base+0x1560>
   37210:	mov	r2, r1
   37214:	str	r2, [r3]
   37218:	mov	r3, r2
   3721c:	ldr	r1, [r3], #108	; 0x6c
   37220:	cmp	r1, #0
   37224:	bne	37210 <__flatcc_fb_build_schema@@Base+0x155c>
   37228:	ldr	r3, [sp, #56]	; 0x38
   3722c:	str	r1, [r2, #108]	; 0x6c
   37230:	str	r3, [r0, #24]
   37234:	ldr	r0, [r0]
   37238:	cmp	r0, #0
   3723c:	bne	36440 <__flatcc_fb_build_schema@@Base+0x78c>
   37240:	ldr	ip, [fp, #400]	; 0x190
   37244:	cmp	ip, #0
   37248:	beq	376bc <__flatcc_fb_build_schema@@Base+0x1a08>
   3724c:	mov	r6, ip
   37250:	mov	r2, #0
   37254:	ldr	r5, [fp, #408]	; 0x198
   37258:	b	37264 <__flatcc_fb_build_schema@@Base+0x15b0>
   3725c:	mov	r2, r1
   37260:	mov	r6, r3
   37264:	ldr	r3, [r6]
   37268:	add	r1, r2, #1
   3726c:	cmp	r3, #0
   37270:	bne	3725c <__flatcc_fb_build_schema@@Base+0x15a8>
   37274:	sub	r3, r1, #1
   37278:	cmp	r5, #0
   3727c:	clz	r3, r3
   37280:	lsr	r3, r3, #5
   37284:	moveq	r3, #0
   37288:	cmp	r3, #0
   3728c:	bne	3765c <__flatcc_fb_build_schema@@Base+0x19a8>
   37290:	cmp	r1, #1
   37294:	moveq	r1, r3
   37298:	movne	r1, ip
   3729c:	cmp	sl, #0
   372a0:	streq	sl, [fp, #404]	; 0x194
   372a4:	beq	37794 <__flatcc_fb_build_schema@@Base+0x1ae0>
   372a8:	ldr	r0, [fp, #412]	; 0x19c
   372ac:	cmp	r0, #0
   372b0:	beq	37300 <__flatcc_fb_build_schema@@Base+0x164c>
   372b4:	rsb	r2, r2, #0
   372b8:	bl	2ca20 <fb_scope_table_find@@Base>
   372bc:	cmp	r0, #0
   372c0:	beq	3796c <__flatcc_fb_build_schema@@Base+0x1cb8>
   372c4:	ldr	r3, [r6, #4]
   372c8:	add	r0, r0, #4
   372cc:	ldm	r3, {r1, r2}
   372d0:	bl	2b998 <fb_symbol_table_find@@Base>
   372d4:	subs	r4, r0, #0
   372d8:	beq	37788 <__flatcc_fb_build_schema@@Base+0x1ad4>
   372dc:	ldrh	r3, [r4, #8]
   372e0:	cmp	r3, #4
   372e4:	bhi	37788 <__flatcc_fb_build_schema@@Base+0x1ad4>
   372e8:	ldr	r1, [r4, #16]
   372ec:	ldr	r0, [sp, #20]
   372f0:	bl	2b21c <ptr_set_find_item@@Base>
   372f4:	cmp	r0, #0
   372f8:	bne	37694 <__flatcc_fb_build_schema@@Base+0x19e0>
   372fc:	ldr	ip, [fp, #400]	; 0x190
   37300:	str	r0, [fp, #404]	; 0x194
   37304:	b	37794 <__flatcc_fb_build_schema@@Base+0x1ae0>
   37308:	ldr	r3, [r2, #4]
   3730c:	mov	r2, #0
   37310:	mov	r0, fp
   37314:	ldr	r1, [r4, #4]
   37318:	str	r2, [sp]
   3731c:	str	r2, [sp, #4]
   37320:	ldr	r2, [pc, #-1520]	; 36d38 <__flatcc_fb_build_schema@@Base+0x1084>
   37324:	add	r2, pc, r2
   37328:	bl	2ddbc <__flatcc_error_report@@Base>
   3732c:	ldr	r4, [r4]
   37330:	cmp	r4, #0
   37334:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   37338:	b	363e4 <__flatcc_fb_build_schema@@Base+0x730>
   3733c:	cmp	r2, #2
   37340:	bne	37374 <__flatcc_fb_build_schema@@Base+0x16c0>
   37344:	ldrh	r3, [r5, #16]
   37348:	cmp	r3, #2
   3734c:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37350:	ldr	r2, [pc, #-1564]	; 36d3c <__flatcc_fb_build_schema@@Base+0x1088>
   37354:	mov	r3, ip
   37358:	mov	r0, fp
   3735c:	ldr	r1, [r5, #4]
   37360:	str	ip, [sp]
   37364:	str	ip, [sp, #4]
   37368:	add	r2, pc, r2
   3736c:	bl	2ddbc <__flatcc_error_report@@Base>
   37370:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37374:	cmp	r2, #5
   37378:	beq	37528 <__flatcc_fb_build_schema@@Base+0x1874>
   3737c:	cmp	r2, #4
   37380:	bne	37558 <__flatcc_fb_build_schema@@Base+0x18a4>
   37384:	ldrh	r3, [r5, #16]
   37388:	sub	r3, r3, #4
   3738c:	cmp	r3, #1
   37390:	bls	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37394:	mov	r3, ip
   37398:	mov	r0, fp
   3739c:	ldr	r1, [r5, #4]
   373a0:	str	ip, [sp]
   373a4:	str	ip, [sp, #4]
   373a8:	ldr	r2, [sp, #28]
   373ac:	bl	2ddbc <__flatcc_error_report@@Base>
   373b0:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   373b4:	mov	r3, r2
   373b8:	ldr	r1, [r4, #4]
   373bc:	mov	r0, fp
   373c0:	str	r2, [sp]
   373c4:	str	r2, [sp, #4]
   373c8:	ldr	r2, [pc, #-1680]	; 36d40 <__flatcc_fb_build_schema@@Base+0x108c>
   373cc:	add	r2, pc, r2
   373d0:	bl	2ddbc <__flatcc_error_report@@Base>
   373d4:	b	361f8 <__flatcc_fb_build_schema@@Base+0x544>
   373d8:	ldrh	r3, [r9, #48]	; 0x30
   373dc:	cmp	r3, #1
   373e0:	beq	363e8 <__flatcc_fb_build_schema@@Base+0x734>
   373e4:	mov	r1, r9
   373e8:	mov	r0, fp
   373ec:	bl	33c30 <__flatcc_fb_clear_parser@@Base+0x1500>
   373f0:	cmp	r0, #0
   373f4:	beq	363e8 <__flatcc_fb_build_schema@@Base+0x734>
   373f8:	mov	r3, #1
   373fc:	strh	r3, [r9, #48]	; 0x30
   37400:	ldr	r9, [r9]
   37404:	cmp	r9, #0
   37408:	bne	36140 <__flatcc_fb_build_schema@@Base+0x48c>
   3740c:	b	363f4 <__flatcc_fb_build_schema@@Base+0x740>
   37410:	cmp	r5, #0
   37414:	beq	37438 <__flatcc_fb_build_schema@@Base+0x1784>
   37418:	mov	r3, r2
   3741c:	ldr	r1, [r5, #4]
   37420:	mov	r0, fp
   37424:	str	r2, [sp]
   37428:	str	r2, [sp, #4]
   3742c:	ldr	r2, [pc, #-1776]	; 36d44 <__flatcc_fb_build_schema@@Base+0x1090>
   37430:	add	r2, pc, r2
   37434:	bl	2ddbc <__flatcc_error_report@@Base>
   37438:	strh	r6, [r4, #72]	; 0x48
   3743c:	ldr	r4, [r4]
   37440:	cmp	r4, #0
   37444:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   37448:	b	363e4 <__flatcc_fb_build_schema@@Base+0x730>
   3744c:	ldr	r2, [pc, #-1804]	; 36d48 <__flatcc_fb_build_schema@@Base+0x1094>
   37450:	mov	r3, ip
   37454:	mov	r0, fp
   37458:	ldr	r1, [r5, #4]
   3745c:	str	ip, [sp]
   37460:	str	ip, [sp, #4]
   37464:	add	r2, pc, r2
   37468:	bl	2ddbc <__flatcc_error_report@@Base>
   3746c:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37470:	mov	r2, #0
   37474:	ldr	r1, [r4, #4]
   37478:	mov	r0, fp
   3747c:	ldr	r3, [r7, #4]
   37480:	str	r2, [sp]
   37484:	str	r2, [sp, #4]
   37488:	ldr	r2, [pc, #-1860]	; 36d4c <__flatcc_fb_build_schema@@Base+0x1098>
   3748c:	add	r2, pc, r2
   37490:	bl	2ddbc <__flatcc_error_report@@Base>
   37494:	mov	r3, #1
   37498:	strh	r3, [r4, #24]
   3749c:	ldr	r4, [r4]
   374a0:	cmp	r4, #0
   374a4:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   374a8:	b	363e4 <__flatcc_fb_build_schema@@Base+0x730>
   374ac:	mov	r3, r2
   374b0:	ldr	r1, [r5, #4]
   374b4:	mov	r0, fp
   374b8:	str	r2, [sp]
   374bc:	str	r2, [sp, #4]
   374c0:	ldr	r2, [pc, #-1912]	; 36d50 <__flatcc_fb_build_schema@@Base+0x109c>
   374c4:	add	r2, pc, r2
   374c8:	bl	2ddbc <__flatcc_error_report@@Base>
   374cc:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   374d0:	mov	r3, r2
   374d4:	ldr	r1, [r4, #4]
   374d8:	mov	r0, fp
   374dc:	str	r2, [sp]
   374e0:	str	r2, [sp, #4]
   374e4:	ldr	r2, [pc, #-1944]	; 36d54 <__flatcc_fb_build_schema@@Base+0x10a0>
   374e8:	add	r2, pc, r2
   374ec:	bl	2ddbc <__flatcc_error_report@@Base>
   374f0:	b	36838 <__flatcc_fb_build_schema@@Base+0xb84>
   374f4:	cmp	r2, #0
   374f8:	add	r3, sp, #96	; 0x60
   374fc:	str	r1, [sp, #96]	; 0x60
   37500:	beq	37518 <__flatcc_fb_build_schema@@Base+0x1864>
   37504:	str	r2, [r3]
   37508:	mov	r3, r2
   3750c:	ldr	r2, [r3], #108	; 0x6c
   37510:	cmp	r2, #0
   37514:	bne	37504 <__flatcc_fb_build_schema@@Base+0x1850>
   37518:	str	ip, [r3]
   3751c:	ldr	r3, [sp, #96]	; 0x60
   37520:	str	r3, [r0, #24]
   37524:	b	37234 <__flatcc_fb_build_schema@@Base+0x1580>
   37528:	ldrh	r3, [r5, #16]
   3752c:	cmp	r3, #5
   37530:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37534:	ldr	r2, [pc, #-2020]	; 36d58 <__flatcc_fb_build_schema@@Base+0x10a4>
   37538:	mov	r3, ip
   3753c:	mov	r0, fp
   37540:	ldr	r1, [r5, #4]
   37544:	str	ip, [sp]
   37548:	str	ip, [sp, #4]
   3754c:	add	r2, pc, r2
   37550:	bl	2ddbc <__flatcc_error_report@@Base>
   37554:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37558:	cmp	r2, #6
   3755c:	bne	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37560:	ldrh	r3, [r5, #16]
   37564:	cmp	r3, #6
   37568:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   3756c:	mov	ip, #0
   37570:	mov	r0, fp
   37574:	ldr	r1, [r5, #4]
   37578:	mov	r3, ip
   3757c:	str	ip, [sp]
   37580:	str	ip, [sp, #4]
   37584:	ldr	r2, [sp, #40]	; 0x28
   37588:	bl	2ddbc <__flatcc_error_report@@Base>
   3758c:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   37590:	mov	r2, #0
   37594:	ldr	r1, [r4, #4]
   37598:	mov	r0, fp
   3759c:	ldr	r3, [r7, #4]
   375a0:	str	r2, [sp]
   375a4:	str	r2, [sp, #4]
   375a8:	ldr	r2, [pc, #-2132]	; 36d5c <__flatcc_fb_build_schema@@Base+0x10a8>
   375ac:	add	r2, pc, r2
   375b0:	bl	2ddbc <__flatcc_error_report@@Base>
   375b4:	mov	r3, #1
   375b8:	strh	r3, [r4, #24]
   375bc:	ldr	r4, [r4]
   375c0:	cmp	r4, #0
   375c4:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x514>
   375c8:	b	363e4 <__flatcc_fb_build_schema@@Base+0x730>
   375cc:	ldrh	r3, [r8, #24]
   375d0:	strh	r4, [r8, #72]	; 0x48
   375d4:	cmp	r3, #8
   375d8:	bne	35fb4 <__flatcc_fb_build_schema@@Base+0x300>
   375dc:	b	369f8 <__flatcc_fb_build_schema@@Base+0xd44>
   375e0:	ldrh	r3, [r8, #72]	; 0x48
   375e4:	tst	r3, #128	; 0x80
   375e8:	beq	369f8 <__flatcc_fb_build_schema@@Base+0xd44>
   375ec:	mov	r2, #0
   375f0:	ldr	r1, [r8, #4]
   375f4:	mov	r0, fp
   375f8:	mov	r3, r2
   375fc:	str	r2, [sp]
   37600:	str	r2, [sp, #4]
   37604:	ldr	r2, [pc, #-2220]	; 36d60 <__flatcc_fb_build_schema@@Base+0x10ac>
   37608:	ldr	sl, [sp, #24]
   3760c:	add	r2, pc, r2
   37610:	bl	2ddbc <__flatcc_error_report@@Base>
   37614:	strh	r4, [r8, #24]
   37618:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   3761c:	ldr	r3, [r5, #4]
   37620:	add	r0, r0, #4
   37624:	ldm	r3, {r1, r2}
   37628:	bl	2b998 <fb_symbol_table_find@@Base>
   3762c:	subs	r7, r0, #0
   37630:	beq	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   37634:	ldrh	r3, [r7, #8]
   37638:	cmp	r3, #4
   3763c:	bhi	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   37640:	ldr	r1, [r7, #16]
   37644:	ldr	r0, [sp, #20]
   37648:	bl	2b21c <ptr_set_find_item@@Base>
   3764c:	cmp	r0, #0
   37650:	bne	369a8 <__flatcc_fb_build_schema@@Base+0xcf4>
   37654:	b	36040 <__flatcc_fb_build_schema@@Base+0x38c>
   37658:	mov	r5, r0
   3765c:	ldr	r3, [r6, #4]
   37660:	add	r0, r5, #4
   37664:	ldm	r3, {r1, r2}
   37668:	bl	2b998 <fb_symbol_table_find@@Base>
   3766c:	subs	r4, r0, #0
   37670:	beq	376fc <__flatcc_fb_build_schema@@Base+0x1a48>
   37674:	ldrh	r3, [r4, #8]
   37678:	cmp	r3, #4
   3767c:	bhi	376fc <__flatcc_fb_build_schema@@Base+0x1a48>
   37680:	ldr	r1, [r4, #16]
   37684:	ldr	r0, [sp, #20]
   37688:	bl	2b21c <ptr_set_find_item@@Base>
   3768c:	cmp	r0, #0
   37690:	beq	376fc <__flatcc_fb_build_schema@@Base+0x1a48>
   37694:	ldr	r3, [fp, #176]	; 0xb0
   37698:	ldrh	r2, [r4, #8]
   3769c:	str	r4, [fp, #404]	; 0x194
   376a0:	cmp	r3, #0
   376a4:	beq	3785c <__flatcc_fb_build_schema@@Base+0x1ba8>
   376a8:	cmp	r2, #1
   376ac:	bhi	37888 <__flatcc_fb_build_schema@@Base+0x1bd4>
   376b0:	mov	r3, #0
   376b4:	str	r3, [fp, #400]	; 0x190
   376b8:	b	376c8 <__flatcc_fb_build_schema@@Base+0x1a14>
   376bc:	ldr	r3, [fp, #208]	; 0xd0
   376c0:	cmp	r3, #0
   376c4:	bne	378d4 <__flatcc_fb_build_schema@@Base+0x1c20>
   376c8:	ldr	r0, [fp, #108]	; 0x6c
   376cc:	clz	r3, r0
   376d0:	lsr	r3, r3, #5
   376d4:	str	r3, [fp, #120]	; 0x78
   376d8:	add	sp, sp, #148	; 0x94
   376dc:	ldrd	r4, [sp]
   376e0:	ldrd	r6, [sp, #8]
   376e4:	ldrd	r8, [sp, #16]
   376e8:	ldrd	sl, [sp, #24]
   376ec:	add	sp, sp, #32
   376f0:	pop	{pc}		; (ldr pc, [sp], #4)
   376f4:	ldrh	r3, [r6, #104]	; 0x68
   376f8:	b	37144 <__flatcc_fb_build_schema@@Base+0x1490>
   376fc:	ldr	r3, [r5]
   37700:	cmp	r3, #0
   37704:	beq	37788 <__flatcc_fb_build_schema@@Base+0x1ad4>
   37708:	mov	r4, #0
   3770c:	b	37714 <__flatcc_fb_build_schema@@Base+0x1a60>
   37710:	mov	r4, r2
   37714:	ldr	r3, [r3]
   37718:	add	r2, r4, #1
   3771c:	cmp	r3, #0
   37720:	bne	37710 <__flatcc_fb_build_schema@@Base+0x1a5c>
   37724:	rsb	r4, r4, #0
   37728:	b	37758 <__flatcc_fb_build_schema@@Base+0x1aa4>
   3772c:	cmp	sl, #0
   37730:	beq	37754 <__flatcc_fb_build_schema@@Base+0x1aa0>
   37734:	ldr	r0, [fp, #412]	; 0x19c
   37738:	cmp	r0, #0
   3773c:	beq	37754 <__flatcc_fb_build_schema@@Base+0x1aa0>
   37740:	mov	r2, r4
   37744:	ldr	r1, [r5]
   37748:	bl	2ca20 <fb_scope_table_find@@Base>
   3774c:	cmp	r0, #0
   37750:	bne	37658 <__flatcc_fb_build_schema@@Base+0x19a4>
   37754:	add	r4, r4, #1
   37758:	cmp	r4, #0
   3775c:	bne	3772c <__flatcc_fb_build_schema@@Base+0x1a78>
   37760:	cmp	sl, #0
   37764:	beq	37788 <__flatcc_fb_build_schema@@Base+0x1ad4>
   37768:	ldr	r0, [fp, #412]	; 0x19c
   3776c:	cmp	r0, #0
   37770:	beq	37788 <__flatcc_fb_build_schema@@Base+0x1ad4>
   37774:	mov	r2, r4
   37778:	mov	r1, r4
   3777c:	bl	2ca20 <fb_scope_table_find@@Base>
   37780:	subs	r5, r0, #0
   37784:	bne	3765c <__flatcc_fb_build_schema@@Base+0x19a8>
   37788:	ldr	ip, [fp, #400]	; 0x190
   3778c:	mov	r3, #0
   37790:	str	r3, [fp, #404]	; 0x194
   37794:	ldr	r2, [pc, #-2616]	; 36d64 <__flatcc_fb_build_schema@@Base+0x10b0>
   37798:	mov	r1, ip
   3779c:	mov	r3, #0
   377a0:	mov	r0, fp
   377a4:	add	r2, pc, r2
   377a8:	bl	2f53c <error_ref_sym@@Base>
   377ac:	b	376b0 <__flatcc_fb_build_schema@@Base+0x19fc>
   377b0:	cmp	r1, #0
   377b4:	str	r2, [r7]
   377b8:	beq	371fc <__flatcc_fb_build_schema@@Base+0x1548>
   377bc:	sub	r3, r6, #2
   377c0:	add	r2, sp, #144	; 0x90
   377c4:	add	r2, r2, r1, lsl #2
   377c8:	mov	r6, r1
   377cc:	uxth	r3, r3
   377d0:	add	r1, sp, #144	; 0x90
   377d4:	add	r3, r1, r3, lsl #2
   377d8:	ldr	r7, [r2, #-48]	; 0xffffffd0
   377dc:	ldr	r2, [r3, #-84]	; 0xffffffac
   377e0:	b	371dc <__flatcc_fb_build_schema@@Base+0x1528>
   377e4:	mov	r3, r2
   377e8:	ldr	r1, [r4, #4]
   377ec:	mov	r0, fp
   377f0:	str	r2, [sp]
   377f4:	str	r2, [sp, #4]
   377f8:	ldr	r2, [pc, #-2712]	; 36d68 <__flatcc_fb_build_schema@@Base+0x10b4>
   377fc:	add	r2, pc, r2
   37800:	bl	2ddbc <__flatcc_error_report@@Base>
   37804:	b	365b8 <__flatcc_fb_build_schema@@Base+0x904>
   37808:	mov	r3, r2
   3780c:	ldr	r1, [r5, #4]
   37810:	mov	r0, fp
   37814:	str	r2, [sp]
   37818:	str	r2, [sp, #4]
   3781c:	ldr	r2, [pc, #-2744]	; 36d6c <__flatcc_fb_build_schema@@Base+0x10b8>
   37820:	add	r2, pc, r2
   37824:	bl	2ddbc <__flatcc_error_report@@Base>
   37828:	b	36ffc <__flatcc_fb_build_schema@@Base+0x1348>
   3782c:	mov	r3, r2
   37830:	ldr	r1, [r4, #4]
   37834:	mov	r0, fp
   37838:	str	r2, [sp]
   3783c:	str	r2, [sp, #4]
   37840:	ldr	r2, [pc, #-2776]	; 36d70 <__flatcc_fb_build_schema@@Base+0x10bc>
   37844:	ldr	r9, [sp, #16]
   37848:	add	r2, pc, r2
   3784c:	bl	2ddbc <__flatcc_error_report@@Base>
   37850:	mov	r3, #1
   37854:	strh	r3, [r9, #48]	; 0x30
   37858:	b	37400 <__flatcc_fb_build_schema@@Base+0x174c>
   3785c:	cmp	r2, #0
   37860:	beq	376b0 <__flatcc_fb_build_schema@@Base+0x19fc>
   37864:	ldr	r2, [pc, #-2808]	; 36d74 <__flatcc_fb_build_schema@@Base+0x10c0>
   37868:	mov	r0, fp
   3786c:	ldr	r1, [fp, #400]	; 0x190
   37870:	add	r2, pc, r2
   37874:	bl	2f53c <error_ref_sym@@Base>
   37878:	b	376b0 <__flatcc_fb_build_schema@@Base+0x19fc>
   3787c:	str	sl, [r4, #16]
   37880:	str	r3, [r4, #88]	; 0x58
   37884:	b	35d90 <__flatcc_fb_build_schema@@Base+0xdc>
   37888:	ldr	r2, [pc, #-2840]	; 36d78 <__flatcc_fb_build_schema@@Base+0x10c4>
   3788c:	mov	r3, #0
   37890:	mov	r0, fp
   37894:	ldr	r1, [fp, #400]	; 0x190
   37898:	add	r2, pc, r2
   3789c:	bl	2f53c <error_ref_sym@@Base>
   378a0:	b	376b0 <__flatcc_fb_build_schema@@Base+0x19fc>
   378a4:	mov	r3, r2
   378a8:	ldr	r1, [r8, #4]
   378ac:	mov	r0, fp
   378b0:	str	r2, [sp]
   378b4:	str	r2, [sp, #4]
   378b8:	ldr	r2, [pc, #-2884]	; 36d7c <__flatcc_fb_build_schema@@Base+0x10c8>
   378bc:	ldr	sl, [sp, #24]
   378c0:	add	r2, pc, r2
   378c4:	bl	2ddbc <__flatcc_error_report@@Base>
   378c8:	mov	r3, #1
   378cc:	strh	r3, [r8, #24]
   378d0:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   378d4:	ldr	r2, [pc, #-2908]	; 36d80 <__flatcc_fb_build_schema@@Base+0x10cc>
   378d8:	mov	r3, ip
   378dc:	mov	r1, ip
   378e0:	mov	r0, fp
   378e4:	str	ip, [sp]
   378e8:	str	ip, [sp, #4]
   378ec:	add	r2, pc, r2
   378f0:	bl	2ddbc <__flatcc_error_report@@Base>
   378f4:	b	376c8 <__flatcc_fb_build_schema@@Base+0x1a14>
   378f8:	mov	r2, r0
   378fc:	ldr	r1, [r8, #4]
   37900:	mov	r3, r0
   37904:	mov	r0, fp
   37908:	str	r2, [sp]
   3790c:	str	r2, [sp, #4]
   37910:	ldr	r2, [pc, #-2964]	; 36d84 <__flatcc_fb_build_schema@@Base+0x10d0>
   37914:	ldr	sl, [sp, #24]
   37918:	add	r2, pc, r2
   3791c:	bl	2ddbc <__flatcc_error_report@@Base>
   37920:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   37924:	ldr	r3, [fp, #396]	; 0x18c
   37928:	cmp	r3, #0
   3792c:	movne	r0, #0
   37930:	bne	36404 <__flatcc_fb_build_schema@@Base+0x750>
   37934:	b	37240 <__flatcc_fb_build_schema@@Base+0x158c>
   37938:	mov	r2, #0
   3793c:	ldr	r3, [r7, #4]
   37940:	mov	r0, fp
   37944:	ldr	r1, [r8, #4]
   37948:	str	r2, [sp]
   3794c:	str	r2, [sp, #4]
   37950:	ldr	r2, [pc, #-3024]	; 36d88 <__flatcc_fb_build_schema@@Base+0x10d4>
   37954:	ldr	sl, [sp, #24]
   37958:	add	r2, pc, r2
   3795c:	bl	2ddbc <__flatcc_error_report@@Base>
   37960:	mov	r3, #1
   37964:	strh	r3, [r8, #24]
   37968:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   3796c:	str	r0, [fp, #404]	; 0x194
   37970:	ldr	ip, [fp, #400]	; 0x190
   37974:	b	37794 <__flatcc_fb_build_schema@@Base+0x1ae0>
   37978:	mov	r2, #0
   3797c:	ldr	r1, [sl, #4]
   37980:	mov	r0, fp
   37984:	mov	r3, r2
   37988:	str	r2, [sp]
   3798c:	str	r2, [sp, #4]
   37990:	ldr	r2, [pc, #-3084]	; 36d8c <__flatcc_fb_build_schema@@Base+0x10d8>
   37994:	add	r2, pc, r2
   37998:	bl	2ddbc <__flatcc_error_report@@Base>
   3799c:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   379a0:	ldr	r3, [r7, #4]
   379a4:	mov	r0, fp
   379a8:	ldr	r1, [r8, #4]
   379ac:	str	r2, [sp]
   379b0:	str	r2, [sp, #4]
   379b4:	ldr	r2, [pc, #-3116]	; 36d90 <__flatcc_fb_build_schema@@Base+0x10dc>
   379b8:	ldr	sl, [sp, #24]
   379bc:	add	r2, pc, r2
   379c0:	bl	2ddbc <__flatcc_error_report@@Base>
   379c4:	mov	r3, #1
   379c8:	strh	r3, [r8, #24]
   379cc:	b	360c0 <__flatcc_fb_build_schema@@Base+0x40c>
   379d0:	ldr	r3, [pc, #-3140]	; 36d94 <__flatcc_fb_build_schema@@Base+0x10e0>
   379d4:	mov	r2, #34	; 0x22
   379d8:	mov	r1, #1
   379dc:	ldr	r0, [pc, #-3148]	; 36d98 <__flatcc_fb_build_schema@@Base+0x10e4>
   379e0:	ldr	r3, [r7, r3]
   379e4:	add	r0, pc, r0
   379e8:	ldr	r3, [r3]
   379ec:	bl	13eec <fwrite@plt>
   379f0:	mov	r0, #1
   379f4:	bl	13f40 <exit@plt>
   379f8:	ldr	r3, [pc, #-3172]	; 36d9c <__flatcc_fb_build_schema@@Base+0x10e8>
   379fc:	movw	r2, #1521	; 0x5f1
   37a00:	ldr	r1, [pc, #-3176]	; 36da0 <__flatcc_fb_build_schema@@Base+0x10ec>
   37a04:	ldr	r0, [pc, #-3176]	; 36da4 <__flatcc_fb_build_schema@@Base+0x10f0>
   37a08:	add	r3, pc, r3
   37a0c:	add	r3, r3, #336	; 0x150
   37a10:	add	r1, pc, r1
   37a14:	add	r0, pc, r0
   37a18:	bl	1400c <__assert_fail@plt>
   37a1c:	ldr	r3, [pc, #-3196]	; 36da8 <__flatcc_fb_build_schema@@Base+0x10f4>
   37a20:	movw	r2, #1558	; 0x616
   37a24:	ldr	r1, [pc, #-3200]	; 36dac <__flatcc_fb_build_schema@@Base+0x10f8>
   37a28:	ldr	r0, [pc, #-3200]	; 36db0 <__flatcc_fb_build_schema@@Base+0x10fc>
   37a2c:	add	r3, pc, r3
   37a30:	add	r3, r3, #288	; 0x120
   37a34:	add	r1, pc, r1
   37a38:	add	r0, pc, r0
   37a3c:	bl	1400c <__assert_fail@plt>
   37a40:	ldr	r3, [pc, #-3220]	; 36db4 <__flatcc_fb_build_schema@@Base+0x1100>
   37a44:	movw	r2, #1129	; 0x469
   37a48:	ldr	r1, [pc, #-3224]	; 36db8 <__flatcc_fb_build_schema@@Base+0x1104>
   37a4c:	ldr	r0, [pc, #-3224]	; 36dbc <__flatcc_fb_build_schema@@Base+0x1108>
   37a50:	add	r3, pc, r3
   37a54:	add	r3, r3, #316	; 0x13c
   37a58:	add	r1, pc, r1
   37a5c:	add	r0, pc, r0
   37a60:	bl	1400c <__assert_fail@plt>
   37a64:	ldr	r2, [pc, #-3244]	; 36dc0 <__flatcc_fb_build_schema@@Base+0x110c>
   37a68:	mov	ip, #0
   37a6c:	mov	r0, fp
   37a70:	mov	r3, ip
   37a74:	ldr	r1, [sl, #4]
   37a78:	str	ip, [sp]
   37a7c:	str	ip, [sp, #4]
   37a80:	add	r2, pc, r2
   37a84:	bl	2ddbc <__flatcc_error_report@@Base>
   37a88:	mvn	r0, #0
   37a8c:	b	376d8 <__flatcc_fb_build_schema@@Base+0x1a24>

00037a90 <__flatcc_fb_coerce_scalar_type@@Base>:
   37a90:	ldrh	ip, [r3, #8]
   37a94:	cmp	ip, #0
   37a98:	beq	37bd4 <__flatcc_fb_coerce_scalar_type@@Base+0x144>
   37a9c:	cmp	ip, #4
   37aa0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   37aa4:	mov	r5, r0
   37aa8:	mov	r4, r3
   37aac:	str	r6, [sp, #8]
   37ab0:	mov	r6, r1
   37ab4:	strd	r8, [sp, #12]
   37ab8:	strd	sl, [sp, #20]
   37abc:	str	lr, [sp, #28]
   37ac0:	vpush	{d8}
   37ac4:	sub	sp, sp, #8
   37ac8:	beq	37b4c <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   37acc:	cmp	ip, #1
   37ad0:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37ad4:	cmp	ip, #6
   37ad8:	bne	37bdc <__flatcc_fb_coerce_scalar_type@@Base+0x14c>
   37adc:	cmp	r2, #5
   37ae0:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37ae4:	ldr	r3, [r0, #144]	; 0x90
   37ae8:	cmp	r3, #0
   37aec:	beq	37c54 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   37af0:	ldrb	r0, [r4]
   37af4:	mov	r1, #0
   37af8:	mov	r3, #5
   37afc:	cmp	r1, #0
   37b00:	cmpeq	r0, #1
   37b04:	strd	r0, [r4]
   37b08:	strh	r3, [r4, #8]
   37b0c:	bhi	38118 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   37b10:	sub	r2, r2, #1
   37b14:	cmp	r2, #10
   37b18:	addls	pc, pc, r2, lsl #2
   37b1c:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37b20:	b	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37b24:	b	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37b28:	b	37d78 <__flatcc_fb_coerce_scalar_type@@Base+0x2e8>
   37b2c:	b	37d48 <__flatcc_fb_coerce_scalar_type@@Base+0x2b8>
   37b30:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37b34:	b	37ca4 <__flatcc_fb_coerce_scalar_type@@Base+0x214>
   37b38:	b	37e88 <__flatcc_fb_coerce_scalar_type@@Base+0x3f8>
   37b3c:	b	37e50 <__flatcc_fb_coerce_scalar_type@@Base+0x3c0>
   37b40:	b	37e18 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
   37b44:	b	38024 <__flatcc_fb_coerce_scalar_type@@Base+0x594>
   37b48:	b	38060 <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   37b4c:	ldrd	r0, [r3]
   37b50:	cmp	r0, #0
   37b54:	sbcs	r3, r1, #0
   37b58:	blt	37c18 <__flatcc_fb_coerce_scalar_type@@Base+0x188>
   37b5c:	mov	r3, #5
   37b60:	sub	r2, r2, #1
   37b64:	strh	r3, [r4, #8]
   37b68:	cmp	r2, #10
   37b6c:	addls	pc, pc, r2, lsl #2
   37b70:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37b74:	b	37d1c <__flatcc_fb_coerce_scalar_type@@Base+0x28c>
   37b78:	b	37cc4 <__flatcc_fb_coerce_scalar_type@@Base+0x234>
   37b7c:	b	37d6c <__flatcc_fb_coerce_scalar_type@@Base+0x2dc>
   37b80:	b	37d3c <__flatcc_fb_coerce_scalar_type@@Base+0x2ac>
   37b84:	b	380c0 <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   37b88:	b	37c90 <__flatcc_fb_coerce_scalar_type@@Base+0x200>
   37b8c:	b	37e74 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   37b90:	b	37e3c <__flatcc_fb_coerce_scalar_type@@Base+0x3ac>
   37b94:	b	37e04 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   37b98:	b	37dd4 <__flatcc_fb_coerce_scalar_type@@Base+0x344>
   37b9c:	b	37da4 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   37ba0:	cmp	ip, #5
   37ba4:	beq	380c0 <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   37ba8:	cmp	ip, #6
   37bac:	bne	380cc <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   37bb0:	mov	r0, #0
   37bb4:	add	sp, sp, #8
   37bb8:	vpop	{d8}
   37bbc:	ldrd	r4, [sp]
   37bc0:	ldr	r6, [sp, #8]
   37bc4:	ldrd	r8, [sp, #12]
   37bc8:	ldrd	sl, [sp, #20]
   37bcc:	add	sp, sp, #28
   37bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   37bd4:	mov	r0, #0
   37bd8:	bx	lr
   37bdc:	sub	r2, r2, #1
   37be0:	cmp	r2, #10
   37be4:	addls	pc, pc, r2, lsl #2
   37be8:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37bec:	b	37d20 <__flatcc_fb_coerce_scalar_type@@Base+0x290>
   37bf0:	b	37cc8 <__flatcc_fb_coerce_scalar_type@@Base+0x238>
   37bf4:	b	37d70 <__flatcc_fb_coerce_scalar_type@@Base+0x2e0>
   37bf8:	b	37d40 <__flatcc_fb_coerce_scalar_type@@Base+0x2b0>
   37bfc:	b	37ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x110>
   37c00:	b	37c94 <__flatcc_fb_coerce_scalar_type@@Base+0x204>
   37c04:	b	37e78 <__flatcc_fb_coerce_scalar_type@@Base+0x3e8>
   37c08:	b	37e40 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   37c0c:	b	37e08 <__flatcc_fb_coerce_scalar_type@@Base+0x378>
   37c10:	b	37dd8 <__flatcc_fb_coerce_scalar_type@@Base+0x348>
   37c14:	b	37da8 <__flatcc_fb_coerce_scalar_type@@Base+0x318>
   37c18:	sub	r2, r2, #1
   37c1c:	cmp	r2, #10
   37c20:	addls	pc, pc, r2, lsl #2
   37c24:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37c28:	b	37d28 <__flatcc_fb_coerce_scalar_type@@Base+0x298>
   37c2c:	b	37fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   37c30:	b	37fac <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   37c34:	b	37fc0 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   37c38:	b	380cc <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   37c3c:	b	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37c40:	b	37f08 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   37c44:	b	37ed8 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   37c48:	b	37eac <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   37c4c:	b	37f70 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   37c50:	b	37f34 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   37c54:	sub	r2, r2, #1
   37c58:	cmp	r2, #10
   37c5c:	addls	pc, pc, r2, lsl #2
   37c60:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37c64:	b	37d28 <__flatcc_fb_coerce_scalar_type@@Base+0x298>
   37c68:	b	37fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   37c6c:	b	37fac <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   37c70:	b	37fc0 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   37c74:	b	38098 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   37c78:	b	380ac <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   37c7c:	b	38010 <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   37c80:	b	37ffc <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   37c84:	b	37fe8 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   37c88:	b	37df0 <__flatcc_fb_coerce_scalar_type@@Base+0x360>
   37c8c:	b	37dc0 <__flatcc_fb_coerce_scalar_type@@Base+0x330>
   37c90:	ldrh	ip, [r4, #8]
   37c94:	cmp	ip, #4
   37c98:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37c9c:	cmp	ip, #5
   37ca0:	bne	380ac <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   37ca4:	ldrd	r2, [r4]
   37ca8:	cmp	r2, #0
   37cac:	sbcs	r3, r3, #0
   37cb0:	blt	38104 <__flatcc_fb_coerce_scalar_type@@Base+0x674>
   37cb4:	mov	r3, #4
   37cb8:	mov	r0, #0
   37cbc:	strh	r3, [r4, #8]
   37cc0:	b	37bb4 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   37cc4:	ldrh	ip, [r4, #8]
   37cc8:	cmp	ip, #5
   37ccc:	bne	37fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   37cd0:	ldrd	r2, [r4]
   37cd4:	mov	r1, #0
   37cd8:	mvn	r0, #0
   37cdc:	cmp	r3, r1
   37ce0:	cmpeq	r2, r0
   37ce4:	bls	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37ce8:	ldr	r2, [pc, #1096]	; 38138 <__flatcc_fb_coerce_scalar_type@@Base+0x6a8>
   37cec:	mov	r1, #0
   37cf0:	mov	r0, r5
   37cf4:	add	r2, pc, r2
   37cf8:	mov	r3, r1
   37cfc:	str	r1, [sp]
   37d00:	str	r1, [sp, #4]
   37d04:	ldr	r1, [r6, #4]
   37d08:	bl	2ddbc <__flatcc_error_report@@Base>
   37d0c:	mov	r3, #1
   37d10:	mvn	r0, #0
   37d14:	strh	r3, [r4, #8]
   37d18:	b	37bb4 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   37d1c:	ldrh	ip, [r4, #8]
   37d20:	cmp	ip, #5
   37d24:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37d28:	ldr	r2, [pc, #1036]	; 3813c <__flatcc_fb_coerce_scalar_type@@Base+0x6ac>
   37d2c:	mov	r1, #0
   37d30:	mov	r0, r5
   37d34:	add	r2, pc, r2
   37d38:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37d3c:	ldrh	ip, [r4, #8]
   37d40:	cmp	ip, #5
   37d44:	bne	37fc0 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   37d48:	ldrd	r2, [r4]
   37d4c:	cmp	r3, #0
   37d50:	cmpeq	r2, #255	; 0xff
   37d54:	bls	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37d58:	ldr	r2, [pc, #992]	; 38140 <__flatcc_fb_coerce_scalar_type@@Base+0x6b0>
   37d5c:	mov	r1, #0
   37d60:	mov	r0, r5
   37d64:	add	r2, pc, r2
   37d68:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37d6c:	ldrh	ip, [r4, #8]
   37d70:	cmp	ip, #5
   37d74:	bne	37fac <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   37d78:	ldrd	r2, [r4]
   37d7c:	mov	r1, #0
   37d80:	movw	r0, #65535	; 0xffff
   37d84:	cmp	r3, r1
   37d88:	cmpeq	r2, r0
   37d8c:	bls	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37d90:	ldr	r2, [pc, #940]	; 38144 <__flatcc_fb_coerce_scalar_type@@Base+0x6b4>
   37d94:	mov	r1, #0
   37d98:	mov	r0, r5
   37d9c:	add	r2, pc, r2
   37da0:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37da4:	ldrh	ip, [r4, #8]
   37da8:	cmp	ip, #4
   37dac:	beq	37f34 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   37db0:	cmp	ip, #5
   37db4:	beq	38060 <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   37db8:	cmp	ip, #3
   37dbc:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37dc0:	ldr	r2, [pc, #896]	; 38148 <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
   37dc4:	mov	r1, #0
   37dc8:	mov	r0, r5
   37dcc:	add	r2, pc, r2
   37dd0:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37dd4:	ldrh	ip, [r4, #8]
   37dd8:	cmp	ip, #4
   37ddc:	beq	37f70 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   37de0:	cmp	ip, #5
   37de4:	beq	38024 <__flatcc_fb_coerce_scalar_type@@Base+0x594>
   37de8:	cmp	ip, #3
   37dec:	beq	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37df0:	ldr	r2, [pc, #852]	; 3814c <__flatcc_fb_coerce_scalar_type@@Base+0x6bc>
   37df4:	mov	r1, #0
   37df8:	mov	r0, r5
   37dfc:	add	r2, pc, r2
   37e00:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37e04:	ldrh	ip, [r4, #8]
   37e08:	cmp	ip, #4
   37e0c:	beq	37eac <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   37e10:	cmp	ip, #5
   37e14:	bne	37fe8 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   37e18:	ldrd	r2, [r4]
   37e1c:	cmp	r2, #128	; 0x80
   37e20:	sbcs	r3, r3, #0
   37e24:	blt	37cb4 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   37e28:	ldr	r2, [pc, #800]	; 38150 <__flatcc_fb_coerce_scalar_type@@Base+0x6c0>
   37e2c:	mov	r1, #0
   37e30:	mov	r0, r5
   37e34:	add	r2, pc, r2
   37e38:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37e3c:	ldrh	ip, [r4, #8]
   37e40:	cmp	ip, #4
   37e44:	beq	37ed8 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   37e48:	cmp	ip, #5
   37e4c:	bne	37ffc <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   37e50:	ldrd	r2, [r4]
   37e54:	cmp	r2, #32768	; 0x8000
   37e58:	sbcs	r3, r3, #0
   37e5c:	blt	37cb4 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   37e60:	ldr	r2, [pc, #748]	; 38154 <__flatcc_fb_coerce_scalar_type@@Base+0x6c4>
   37e64:	mov	r1, #0
   37e68:	mov	r0, r5
   37e6c:	add	r2, pc, r2
   37e70:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37e74:	ldrh	ip, [r4, #8]
   37e78:	cmp	ip, #4
   37e7c:	beq	37f08 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   37e80:	cmp	ip, #5
   37e84:	bne	38010 <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   37e88:	ldrd	r2, [r4]
   37e8c:	cmp	r2, #-2147483648	; 0x80000000
   37e90:	sbcs	r3, r3, #0
   37e94:	blt	37cb4 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   37e98:	ldr	r2, [pc, #696]	; 38158 <__flatcc_fb_coerce_scalar_type@@Base+0x6c8>
   37e9c:	mov	r1, #0
   37ea0:	mov	r0, r5
   37ea4:	add	r2, pc, r2
   37ea8:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37eac:	ldrd	r2, [r4]
   37eb0:	mvn	r0, #127	; 0x7f
   37eb4:	mvn	r1, #0
   37eb8:	cmp	r2, r0
   37ebc:	sbcs	r3, r3, r1
   37ec0:	bge	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37ec4:	ldr	r2, [pc, #656]	; 3815c <__flatcc_fb_coerce_scalar_type@@Base+0x6cc>
   37ec8:	mov	r1, #0
   37ecc:	mov	r0, r5
   37ed0:	add	r2, pc, r2
   37ed4:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37ed8:	ldrd	r2, [r4]
   37edc:	mov	r0, #32768	; 0x8000
   37ee0:	movt	r0, #65535	; 0xffff
   37ee4:	mvn	r1, #0
   37ee8:	cmp	r2, r0
   37eec:	sbcs	r3, r3, r1
   37ef0:	bge	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37ef4:	ldr	r2, [pc, #612]	; 38160 <__flatcc_fb_coerce_scalar_type@@Base+0x6d0>
   37ef8:	mov	r1, #0
   37efc:	mov	r0, r5
   37f00:	add	r2, pc, r2
   37f04:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37f08:	ldrd	r2, [r4]
   37f0c:	mov	r0, #-2147483648	; 0x80000000
   37f10:	mvn	r1, #0
   37f14:	cmp	r2, r0
   37f18:	sbcs	r3, r3, r1
   37f1c:	bge	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37f20:	ldr	r2, [pc, #572]	; 38164 <__flatcc_fb_coerce_scalar_type@@Base+0x6d4>
   37f24:	mov	r1, #0
   37f28:	mov	r0, r5
   37f2c:	add	r2, pc, r2
   37f30:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37f34:	ldrd	r8, [r4]
   37f38:	mov	r1, r9
   37f3c:	mov	r0, r8
   37f40:	bl	3eff4 <fb_value_set_visit@@Base+0x608>
   37f44:	vmov	s16, r0
   37f48:	bl	3f0bc <fb_value_set_visit@@Base+0x6d0>
   37f4c:	cmp	r9, r1
   37f50:	cmpeq	r8, r0
   37f54:	bne	38084 <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   37f58:	vcvt.f64.f32	d8, s16
   37f5c:	mov	r3, #3
   37f60:	mov	r0, #0
   37f64:	vstr	d8, [r4]
   37f68:	strh	r3, [r4, #8]
   37f6c:	b	37bb4 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   37f70:	ldrd	r8, [r4]
   37f74:	mov	r0, r8
   37f78:	mov	r1, r9
   37f7c:	bl	3edc0 <fb_value_set_visit@@Base+0x3d4>
   37f80:	mov	sl, r0
   37f84:	mov	fp, r1
   37f88:	bl	3f0e8 <fb_value_set_visit@@Base+0x6fc>
   37f8c:	cmp	r9, r1
   37f90:	cmpeq	r8, r0
   37f94:	bne	3804c <__flatcc_fb_coerce_scalar_type@@Base+0x5bc>
   37f98:	mov	r3, #3
   37f9c:	mov	r0, #0
   37fa0:	strd	sl, [r4]
   37fa4:	strh	r3, [r4, #8]
   37fa8:	b	37bb4 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   37fac:	ldr	r2, [pc, #436]	; 38168 <__flatcc_fb_coerce_scalar_type@@Base+0x6d8>
   37fb0:	mov	r1, #0
   37fb4:	mov	r0, r5
   37fb8:	add	r2, pc, r2
   37fbc:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37fc0:	ldr	r2, [pc, #420]	; 3816c <__flatcc_fb_coerce_scalar_type@@Base+0x6dc>
   37fc4:	mov	r1, #0
   37fc8:	mov	r0, r5
   37fcc:	add	r2, pc, r2
   37fd0:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37fd4:	ldr	r2, [pc, #404]	; 38170 <__flatcc_fb_coerce_scalar_type@@Base+0x6e0>
   37fd8:	mov	r1, #0
   37fdc:	mov	r0, r5
   37fe0:	add	r2, pc, r2
   37fe4:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37fe8:	ldr	r2, [pc, #388]	; 38174 <__flatcc_fb_coerce_scalar_type@@Base+0x6e4>
   37fec:	mov	r1, #0
   37ff0:	mov	r0, r5
   37ff4:	add	r2, pc, r2
   37ff8:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   37ffc:	ldr	r2, [pc, #372]	; 38178 <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
   38000:	mov	r1, #0
   38004:	mov	r0, r5
   38008:	add	r2, pc, r2
   3800c:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38010:	ldr	r2, [pc, #356]	; 3817c <__flatcc_fb_coerce_scalar_type@@Base+0x6ec>
   38014:	mov	r1, #0
   38018:	mov	r0, r5
   3801c:	add	r2, pc, r2
   38020:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38024:	ldrd	r8, [r4]
   38028:	mov	r0, r8
   3802c:	mov	r1, r9
   38030:	bl	3edac <fb_value_set_visit@@Base+0x3c0>
   38034:	mov	sl, r0
   38038:	mov	fp, r1
   3803c:	bl	3f158 <fb_value_set_visit@@Base+0x76c>
   38040:	cmp	r9, r1
   38044:	cmpeq	r8, r0
   38048:	beq	37f98 <__flatcc_fb_coerce_scalar_type@@Base+0x508>
   3804c:	ldr	r2, [pc, #300]	; 38180 <__flatcc_fb_coerce_scalar_type@@Base+0x6f0>
   38050:	mov	r1, #0
   38054:	mov	r0, r5
   38058:	add	r2, pc, r2
   3805c:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38060:	ldrd	r8, [r4]
   38064:	mov	r1, r9
   38068:	mov	r0, r8
   3806c:	bl	3efe4 <fb_value_set_visit@@Base+0x5f8>
   38070:	vmov	s16, r0
   38074:	bl	3f118 <fb_value_set_visit@@Base+0x72c>
   38078:	cmp	r9, r1
   3807c:	cmpeq	r8, r0
   38080:	beq	37f58 <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   38084:	ldr	r2, [pc, #248]	; 38184 <__flatcc_fb_coerce_scalar_type@@Base+0x6f4>
   38088:	mov	r1, #0
   3808c:	mov	r0, r5
   38090:	add	r2, pc, r2
   38094:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38098:	ldr	r2, [pc, #232]	; 38188 <__flatcc_fb_coerce_scalar_type@@Base+0x6f8>
   3809c:	mov	r1, #0
   380a0:	mov	r0, r5
   380a4:	add	r2, pc, r2
   380a8:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   380ac:	ldr	r2, [pc, #216]	; 3818c <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   380b0:	mov	r1, #0
   380b4:	mov	r0, r5
   380b8:	add	r2, pc, r2
   380bc:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   380c0:	ldr	r3, [r5, #144]	; 0x90
   380c4:	cmp	r3, #0
   380c8:	bne	380e0 <__flatcc_fb_coerce_scalar_type@@Base+0x650>
   380cc:	ldr	r2, [pc, #188]	; 38190 <__flatcc_fb_coerce_scalar_type@@Base+0x700>
   380d0:	mov	r1, #0
   380d4:	mov	r0, r5
   380d8:	add	r2, pc, r2
   380dc:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   380e0:	ldrd	r2, [r4]
   380e4:	cmp	r3, #0
   380e8:	cmpeq	r2, #1
   380ec:	bls	37bb0 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   380f0:	ldr	r2, [pc, #156]	; 38194 <__flatcc_fb_coerce_scalar_type@@Base+0x704>
   380f4:	mov	r1, #0
   380f8:	mov	r0, r5
   380fc:	add	r2, pc, r2
   38100:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38104:	ldr	r2, [pc, #140]	; 38198 <__flatcc_fb_coerce_scalar_type@@Base+0x708>
   38108:	mov	r1, #0
   3810c:	mov	r0, r5
   38110:	add	r2, pc, r2
   38114:	b	37cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38118:	ldr	r3, [pc, #124]	; 3819c <__flatcc_fb_coerce_scalar_type@@Base+0x70c>
   3811c:	mov	r2, #52	; 0x34
   38120:	ldr	r1, [pc, #120]	; 381a0 <__flatcc_fb_coerce_scalar_type@@Base+0x710>
   38124:	ldr	r0, [pc, #120]	; 381a4 <__flatcc_fb_coerce_scalar_type@@Base+0x714>
   38128:	add	r3, pc, r3
   3812c:	add	r1, pc, r1
   38130:	add	r0, pc, r0
   38134:	bl	1400c <__assert_fail@plt>
   38138:	andeq	r1, r2, r0, asr sp
   3813c:	andeq	r1, r2, r4, lsr #25
   38140:	muleq	r2, r4, sp
   38144:	andeq	r1, r2, r4, lsl #26
   38148:	andeq	r1, r2, ip, ror #31
   3814c:	andeq	r1, r2, r0, asr pc
   38150:	andeq	r1, r2, r4, lsr #28
   38154:	andeq	r1, r2, r0, lsl #27
   38158:	ldrdeq	r1, [r2], -ip
   3815c:	andeq	r1, r2, ip, ror #26
   38160:	andeq	r1, r2, ip, asr #25
   38164:	andeq	r1, r2, r8, lsr ip
   38168:	andeq	r1, r2, ip, lsr #21
   3816c:	strdeq	r1, [r2], -r4
   38170:	andeq	r1, r2, ip, lsr #20
   38174:	andeq	r1, r2, r0, lsl #25
   38178:	andeq	r1, r2, r4, lsl #24
   3817c:	andeq	r1, r2, r0, lsl #23
   38180:	andeq	r1, r2, r4, asr #25
   38184:	strdeq	r1, [r2], -r8
   38188:	andeq	r1, r2, ip, asr #26
   3818c:	andeq	r1, r2, r0, lsl #21
   38190:	andeq	r1, r2, ip, lsl #24
   38194:	andeq	r1, r2, r8, lsr #23
   38198:	andeq	r1, r2, r8, lsl #20
   3819c:	andeq	r1, r2, r0, lsl r8
   381a0:	andeq	r1, r2, ip, lsr #16
   381a4:	andeq	r1, r2, r8, lsl #17
   381a8:	strd	r4, [sp, #-16]!
   381ac:	mov	r4, r0
   381b0:	mov	r0, #1
   381b4:	ldr	ip, [r4, #28]
   381b8:	mov	r3, r0
   381bc:	mov	r5, r2
   381c0:	str	r6, [sp, #8]
   381c4:	str	lr, [sp, #12]
   381c8:	sub	sp, sp, #8
   381cc:	str	r0, [sp]
   381d0:	add	r2, r1, ip
   381d4:	add	r1, r4, #60	; 0x3c
   381d8:	ldr	r0, [r4, #40]	; 0x28
   381dc:	ldr	r6, [r4, #48]	; 0x30
   381e0:	blx	r6
   381e4:	cmp	r0, #0
   381e8:	bne	38228 <__flatcc_fb_coerce_scalar_type@@Base+0x798>
   381ec:	ldr	r1, [r4, #28]
   381f0:	ldr	ip, [r4, #32]
   381f4:	ldrd	r2, [r4, #60]	; 0x3c
   381f8:	sub	r3, r3, r1
   381fc:	add	r2, r2, r1
   38200:	cmp	r3, r5
   38204:	movcs	r3, r5
   38208:	str	r2, [r4, #16]
   3820c:	str	r3, [r4, #24]
   38210:	str	r5, [ip, #4]
   38214:	add	sp, sp, #8
   38218:	ldrd	r4, [sp]
   3821c:	ldr	r6, [sp, #8]
   38220:	add	sp, sp, #12
   38224:	pop	{pc}		; (ldr pc, [sp], #4)
   38228:	mvn	r0, #0
   3822c:	b	38214 <__flatcc_fb_coerce_scalar_type@@Base+0x784>

00038230 <flatcc_builder_default_alloc@@Base>:
   38230:	strd	r4, [sp, #-24]!	; 0xffffffe8
   38234:	subs	r5, r2, #0
   38238:	strd	r6, [sp, #8]
   3823c:	mov	r6, r1
   38240:	str	r8, [sp, #16]
   38244:	str	lr, [sp, #20]
   38248:	beq	38280 <flatcc_builder_default_alloc@@Base+0x50>
   3824c:	mov	r7, r3
   38250:	ldr	r3, [sp, #24]
   38254:	sub	r2, r3, #1
   38258:	cmp	r2, #6
   3825c:	addls	pc, pc, r2, lsl #2
   38260:	b	38330 <flatcc_builder_default_alloc@@Base+0x100>
   38264:	b	382b0 <flatcc_builder_default_alloc@@Base+0x80>
   38268:	b	38330 <flatcc_builder_default_alloc@@Base+0x100>
   3826c:	b	38330 <flatcc_builder_default_alloc@@Base+0x100>
   38270:	b	38328 <flatcc_builder_default_alloc@@Base+0xf8>
   38274:	b	38318 <flatcc_builder_default_alloc@@Base+0xe8>
   38278:	b	38330 <flatcc_builder_default_alloc@@Base+0x100>
   3827c:	b	38320 <flatcc_builder_default_alloc@@Base+0xf0>
   38280:	ldr	r0, [r1]
   38284:	cmp	r0, #0
   38288:	beq	3829c <flatcc_builder_default_alloc@@Base+0x6c>
   3828c:	bl	13ea4 <free@plt>
   38290:	mov	r0, r5
   38294:	str	r5, [r6]
   38298:	str	r5, [r6, #4]
   3829c:	ldrd	r4, [sp]
   382a0:	ldrd	r6, [sp, #8]
   382a4:	ldr	r8, [sp, #16]
   382a8:	add	sp, sp, #20
   382ac:	pop	{pc}		; (ldr pc, [sp], #4)
   382b0:	mov	r4, #256	; 0x100
   382b4:	cmp	r4, r5
   382b8:	bcs	382c8 <flatcc_builder_default_alloc@@Base+0x98>
   382bc:	lsl	r4, r4, #1
   382c0:	cmp	r5, r4
   382c4:	bhi	382bc <flatcc_builder_default_alloc@@Base+0x8c>
   382c8:	ldr	r2, [r6, #4]
   382cc:	cmp	r5, r2
   382d0:	bhi	382e0 <flatcc_builder_default_alloc@@Base+0xb0>
   382d4:	cmp	r4, r2, lsr #1
   382d8:	movls	r0, #0
   382dc:	bls	3829c <flatcc_builder_default_alloc@@Base+0x6c>
   382e0:	mov	r1, r4
   382e4:	ldr	r0, [r6]
   382e8:	bl	13ee0 <realloc@plt>
   382ec:	subs	r5, r0, #0
   382f0:	beq	3834c <flatcc_builder_default_alloc@@Base+0x11c>
   382f4:	cmp	r7, #0
   382f8:	beq	38308 <flatcc_builder_default_alloc@@Base+0xd8>
   382fc:	ldr	r0, [r6, #4]
   38300:	cmp	r0, r4
   38304:	bcc	38338 <flatcc_builder_default_alloc@@Base+0x108>
   38308:	mov	r0, #0
   3830c:	str	r5, [r6]
   38310:	str	r4, [r6, #4]
   38314:	b	3829c <flatcc_builder_default_alloc@@Base+0x6c>
   38318:	mov	r4, r5
   3831c:	b	382c8 <flatcc_builder_default_alloc@@Base+0x98>
   38320:	mov	r4, #64	; 0x40
   38324:	b	382b4 <flatcc_builder_default_alloc@@Base+0x84>
   38328:	mov	r4, #288	; 0x120
   3832c:	b	382b4 <flatcc_builder_default_alloc@@Base+0x84>
   38330:	mov	r4, #32
   38334:	b	382b4 <flatcc_builder_default_alloc@@Base+0x84>
   38338:	sub	r2, r4, r0
   3833c:	mov	r1, #0
   38340:	add	r0, r5, r0
   38344:	bl	13f70 <memset@plt>
   38348:	b	38308 <flatcc_builder_default_alloc@@Base+0xd8>
   3834c:	mvn	r0, #0
   38350:	b	3829c <flatcc_builder_default_alloc@@Base+0x6c>
   38354:	ldr	r3, [pc, #32]	; 3837c <flatcc_builder_default_alloc@@Base+0x14c>
   38358:	mov	r2, #308	; 0x134
   3835c:	str	r4, [sp, #-8]!
   38360:	ldr	r1, [pc, #24]	; 38380 <flatcc_builder_default_alloc@@Base+0x150>
   38364:	str	lr, [sp, #4]
   38368:	ldr	r0, [pc, #20]	; 38384 <flatcc_builder_default_alloc@@Base+0x154>
   3836c:	add	r3, pc, r3
   38370:	add	r1, pc, r1
   38374:	add	r0, pc, r0
   38378:	bl	1400c <__assert_fail@plt>
   3837c:	muleq	r2, ip, sl
   38380:	andeq	r2, r2, r8, ror #3
   38384:	andeq	r0, r1, r8, ror #20
   38388:	ldr	r3, [pc, #36]	; 383b4 <flatcc_builder_default_alloc@@Base+0x184>
   3838c:	movw	r2, #677	; 0x2a5
   38390:	str	r4, [sp, #-8]!
   38394:	ldr	r1, [pc, #28]	; 383b8 <flatcc_builder_default_alloc@@Base+0x188>
   38398:	str	lr, [sp, #4]
   3839c:	ldr	r0, [pc, #24]	; 383bc <flatcc_builder_default_alloc@@Base+0x18c>
   383a0:	add	r3, pc, r3
   383a4:	add	r3, r3, #16
   383a8:	add	r1, pc, r1
   383ac:	add	r0, pc, r0
   383b0:	bl	1400c <__assert_fail@plt>
   383b4:	andeq	r1, r2, r8, ror #20
   383b8:			; <UNDEFINED> instruction: 0x000221b0
   383bc:	andeq	r0, r1, r0, lsr sl
   383c0:	strd	r4, [sp, #-12]!
   383c4:	cmp	r2, #0
   383c8:	mov	ip, r0
   383cc:	str	lr, [sp, #8]
   383d0:	sub	sp, sp, #84	; 0x54
   383d4:	ldr	lr, [pc, #248]	; 384d4 <flatcc_builder_default_alloc@@Base+0x2a4>
   383d8:	add	lr, pc, lr
   383dc:	bne	383ec <flatcc_builder_default_alloc@@Base+0x1bc>
   383e0:	ldrh	r2, [r0, #132]	; 0x84
   383e4:	cmp	r2, #0
   383e8:	moveq	r2, #1
   383ec:	ldrh	r0, [r1]
   383f0:	cmp	r0, #3
   383f4:	bhi	38404 <flatcc_builder_default_alloc@@Base+0x1d4>
   383f8:	mov	r4, #4
   383fc:	mov	r0, r4
   38400:	strh	r4, [r1]
   38404:	cmp	r2, r0
   38408:	strhhi	r2, [r1]
   3840c:	cmp	r3, #0
   38410:	bne	38424 <flatcc_builder_default_alloc@@Base+0x1f4>
   38414:	ldr	r4, [ip, #140]	; 0x8c
   38418:	sub	r2, r2, #1
   3841c:	ands	r1, r2, r4
   38420:	bne	38438 <flatcc_builder_default_alloc@@Base+0x208>
   38424:	mov	r0, #0
   38428:	add	sp, sp, #84	; 0x54
   3842c:	ldrd	r4, [sp]
   38430:	add	sp, sp, #8
   38434:	pop	{pc}		; (ldr pc, [sp], #4)
   38438:	ldr	r3, [pc, #152]	; 384d8 <flatcc_builder_default_alloc@@Base+0x2a8>
   3843c:	add	r0, r4, r1
   38440:	mov	r2, #1
   38444:	str	r1, [sp, #8]
   38448:	cmp	r4, r0
   3844c:	ldr	r3, [lr, r3]
   38450:	str	r0, [ip, #140]	; 0x8c
   38454:	strd	r2, [sp, #12]
   38458:	str	r1, [sp, #20]
   3845c:	bgt	384b0 <flatcc_builder_default_alloc@@Base+0x280>
   38460:	mov	r3, r4
   38464:	str	r1, [sp]
   38468:	add	r1, sp, #16
   3846c:	ldr	r0, [ip, #36]	; 0x24
   38470:	ldr	r5, [ip, #44]	; 0x2c
   38474:	blx	r5
   38478:	cmp	r0, #0
   3847c:	bne	384ac <flatcc_builder_default_alloc@@Base+0x27c>
   38480:	cmn	r4, #1
   38484:	bne	38424 <flatcc_builder_default_alloc@@Base+0x1f4>
   38488:	ldr	r3, [pc, #76]	; 384dc <flatcc_builder_default_alloc@@Base+0x2ac>
   3848c:	movw	r2, #702	; 0x2be
   38490:	ldr	r1, [pc, #72]	; 384e0 <flatcc_builder_default_alloc@@Base+0x2b0>
   38494:	ldr	r0, [pc, #72]	; 384e4 <flatcc_builder_default_alloc@@Base+0x2b4>
   38498:	add	r3, pc, r3
   3849c:	add	r3, r3, #28
   384a0:	add	r1, pc, r1
   384a4:	add	r0, pc, r0
   384a8:	bl	1400c <__assert_fail@plt>
   384ac:	bl	38388 <flatcc_builder_default_alloc@@Base+0x158>
   384b0:	ldr	r3, [pc, #48]	; 384e8 <flatcc_builder_default_alloc@@Base+0x2b8>
   384b4:	movw	r2, #673	; 0x2a1
   384b8:	ldr	r1, [pc, #44]	; 384ec <flatcc_builder_default_alloc@@Base+0x2bc>
   384bc:	ldr	r0, [pc, #44]	; 384f0 <flatcc_builder_default_alloc@@Base+0x2c0>
   384c0:	add	r3, pc, r3
   384c4:	add	r3, r3, #16
   384c8:	add	r1, pc, r1
   384cc:	add	r0, pc, r0
   384d0:	bl	1400c <__assert_fail@plt>
   384d4:	andeq	r2, r3, r0, lsr #24
   384d8:	muleq	r0, r8, r0
   384dc:	andeq	r1, r2, r0, ror r9
   384e0:	strheq	r2, [r2], -r8
   384e4:	andeq	r0, r1, r8, lsr r9
   384e8:	andeq	r1, r2, r8, asr #18
   384ec:	muleq	r2, r0, r0
   384f0:	andeq	r0, r1, r0, lsl r9
   384f4:	ldr	r3, [pc, #36]	; 38520 <flatcc_builder_default_alloc@@Base+0x2f0>
   384f8:	movw	r2, #651	; 0x28b
   384fc:	str	r4, [sp, #-8]!
   38500:	ldr	r1, [pc, #28]	; 38524 <flatcc_builder_default_alloc@@Base+0x2f4>
   38504:	str	lr, [sp, #4]
   38508:	ldr	r0, [pc, #24]	; 38528 <flatcc_builder_default_alloc@@Base+0x2f8>
   3850c:	add	r3, pc, r3
   38510:	add	r3, r3, #44	; 0x2c
   38514:	add	r1, pc, r1
   38518:	add	r0, pc, r0
   3851c:	bl	1400c <__assert_fail@plt>
   38520:	strdeq	r1, [r2], -ip
   38524:	andeq	r2, r2, r4, asr #32
   38528:	andeq	r0, r1, r4, asr #17
   3852c:	ldr	r3, [pc, #36]	; 38558 <flatcc_builder_default_alloc@@Base+0x328>
   38530:	mov	r2, #892	; 0x37c
   38534:	str	r4, [sp, #-8]!
   38538:	ldr	r1, [pc, #28]	; 3855c <flatcc_builder_default_alloc@@Base+0x32c>
   3853c:	str	lr, [sp, #4]
   38540:	ldr	r0, [pc, #24]	; 38560 <flatcc_builder_default_alloc@@Base+0x330>
   38544:	add	r3, pc, r3
   38548:	add	r3, r3, #56	; 0x38
   3854c:	add	r1, pc, r1
   38550:	add	r0, pc, r0
   38554:	bl	1400c <__assert_fail@plt>
   38558:	andeq	r1, r2, r4, asr #17
   3855c:	andeq	r2, r2, ip
   38560:	andeq	r2, r2, r8, rrx
   38564:	ldrd	r2, [r0, #156]	; 0x9c
   38568:	strd	r4, [sp, #-20]!	; 0xffffffec
   3856c:	mov	r5, r1
   38570:	mov	r4, r0
   38574:	strd	r6, [sp, #8]
   38578:	str	lr, [sp, #16]
   3857c:	sub	sp, sp, #12
   38580:	add	r1, r2, #1
   38584:	cmp	r1, r3
   38588:	str	r1, [r0, #156]	; 0x9c
   3858c:	ble	3866c <flatcc_builder_default_alloc@@Base+0x43c>
   38590:	ldr	r3, [r0, #176]	; 0xb0
   38594:	cmp	r1, r3
   38598:	cmpgt	r3, #0
   3859c:	movgt	r3, #1
   385a0:	movle	r3, #0
   385a4:	bgt	3867c <flatcc_builder_default_alloc@@Base+0x44c>
   385a8:	add	r2, r2, r2, lsl #3
   385ac:	ldr	r1, [r0, #88]	; 0x58
   385b0:	lsl	r6, r2, #2
   385b4:	add	r2, r6, #36	; 0x24
   385b8:	cmp	r2, r1
   385bc:	bls	385e0 <flatcc_builder_default_alloc@@Base+0x3b0>
   385c0:	mov	ip, #4
   385c4:	add	r1, r0, #84	; 0x54
   385c8:	ldr	r0, [r0, #40]	; 0x28
   385cc:	str	ip, [sp]
   385d0:	ldr	r7, [r4, #48]	; 0x30
   385d4:	blx	r7
   385d8:	cmp	r0, #0
   385dc:	bne	38684 <flatcc_builder_default_alloc@@Base+0x454>
   385e0:	ldr	r2, [r4, #84]	; 0x54
   385e4:	add	r2, r2, r6
   385e8:	cmp	r2, #0
   385ec:	str	r2, [r4, #32]
   385f0:	beq	3867c <flatcc_builder_default_alloc@@Base+0x44c>
   385f4:	ldr	r3, [r4, #88]	; 0x58
   385f8:	movw	r0, #36409	; 0x8e39
   385fc:	movt	r0, #14563	; 0x38e3
   38600:	ldr	r1, [r4, #176]	; 0xb0
   38604:	umull	r0, r3, r0, r3
   38608:	lsr	r3, r3, #3
   3860c:	cmp	r3, r1
   38610:	cmpgt	r1, #0
   38614:	movgt	r3, r1
   38618:	str	r3, [r4, #160]	; 0xa0
   3861c:	ldr	r3, [r4, #20]
   38620:	mov	r1, #0
   38624:	mvn	lr, #3
   38628:	mov	r0, r1
   3862c:	ldr	ip, [r4, #28]
   38630:	ldrh	r6, [r4, #130]	; 0x82
   38634:	str	r3, [r2, #8]
   38638:	add	r3, r3, ip
   3863c:	add	r3, r3, #7
   38640:	bic	r3, r3, #7
   38644:	strh	r6, [r2, #12]
   38648:	strh	r5, [r4, #130]	; 0x82
   3864c:	stm	r2, {ip, lr}
   38650:	str	r1, [r4, #20]
   38654:	str	r3, [r4, #28]
   38658:	add	sp, sp, #12
   3865c:	ldrd	r4, [sp]
   38660:	ldrd	r6, [sp, #8]
   38664:	add	sp, sp, #16
   38668:	pop	{pc}		; (ldr pc, [sp], #4)
   3866c:	ldr	r2, [r0, #32]
   38670:	add	r2, r2, #36	; 0x24
   38674:	str	r2, [r0, #32]
   38678:	b	3861c <flatcc_builder_default_alloc@@Base+0x3ec>
   3867c:	mvn	r0, #0
   38680:	b	38658 <flatcc_builder_default_alloc@@Base+0x428>
   38684:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>
   38688:	strd	r4, [sp, #-20]!	; 0xffffffec
   3868c:	mov	r4, r0
   38690:	mov	r5, #4
   38694:	ldrh	r0, [r0, #128]	; 0x80
   38698:	strd	r6, [sp, #8]
   3869c:	str	lr, [sp, #16]
   386a0:	sub	sp, sp, #92	; 0x5c
   386a4:	ldr	lr, [pc, #464]	; 3887c <flatcc_builder_default_alloc@@Base+0x64c>
   386a8:	str	r2, [sp, #12]
   386ac:	cmp	r0, #3
   386b0:	ldr	r6, [r4, #136]	; 0x88
   386b4:	movls	r0, #4
   386b8:	str	r5, [sp, #16]
   386bc:	str	r5, [sp, #28]
   386c0:	strhls	r0, [r4, #128]	; 0x80
   386c4:	mov	r0, #1
   386c8:	lsls	ip, r2, #2
   386cc:	add	lr, pc, lr
   386d0:	str	r0, [sp, #20]
   386d4:	add	r0, sp, #12
   386d8:	str	r0, [sp, #24]
   386dc:	and	r0, r6, #3
   386e0:	beq	386fc <flatcc_builder_default_alloc@@Base+0x4cc>
   386e4:	add	r5, ip, r5
   386e8:	mov	r7, #2
   386ec:	str	r5, [sp, #16]
   386f0:	str	r7, [sp, #20]
   386f4:	str	r1, [sp, #32]
   386f8:	str	ip, [sp, #36]	; 0x24
   386fc:	cmp	r0, #0
   38700:	beq	38730 <flatcc_builder_default_alloc@@Base+0x500>
   38704:	ldr	r7, [pc, #372]	; 38880 <flatcc_builder_default_alloc@@Base+0x650>
   38708:	add	r5, r5, r0
   3870c:	ldr	ip, [sp, #20]
   38710:	str	r5, [sp, #16]
   38714:	ldr	r7, [lr, r7]
   38718:	add	lr, sp, #88	; 0x58
   3871c:	add	ip, ip, #1
   38720:	add	lr, lr, ip, lsl #3
   38724:	str	ip, [sp, #20]
   38728:	str	r7, [lr, #-72]	; 0xffffffb8
   3872c:	str	r0, [lr, #-68]	; 0xffffffbc
   38730:	cmp	r2, #0
   38734:	beq	387c0 <flatcc_builder_default_alloc@@Base+0x590>
   38738:	sub	r6, r1, r6
   3873c:	add	lr, r2, r3
   38740:	add	r6, r6, r5
   38744:	mov	r2, r3
   38748:	b	38778 <flatcc_builder_default_alloc@@Base+0x548>
   3874c:	sub	r0, r6, r1
   38750:	cmp	r3, #0
   38754:	add	r0, r0, ip
   38758:	str	r0, [r1, #-4]
   3875c:	beq	3876c <flatcc_builder_default_alloc@@Base+0x53c>
   38760:	ldrb	r0, [r2]
   38764:	cmp	r0, #0
   38768:	beq	38830 <flatcc_builder_default_alloc@@Base+0x600>
   3876c:	add	r2, r2, #1
   38770:	cmp	lr, r2
   38774:	beq	387bc <flatcc_builder_default_alloc@@Base+0x58c>
   38778:	ldr	ip, [r1], #4
   3877c:	cmp	ip, #0
   38780:	bne	3874c <flatcc_builder_default_alloc@@Base+0x51c>
   38784:	cmp	r3, #0
   38788:	beq	3880c <flatcc_builder_default_alloc@@Base+0x5dc>
   3878c:	ldrb	r0, [r2]
   38790:	cmp	r0, #0
   38794:	beq	3876c <flatcc_builder_default_alloc@@Base+0x53c>
   38798:	ldr	r3, [pc, #228]	; 38884 <flatcc_builder_default_alloc@@Base+0x654>
   3879c:	movw	r2, #1461	; 0x5b5
   387a0:	ldr	r1, [pc, #224]	; 38888 <flatcc_builder_default_alloc@@Base+0x658>
   387a4:	ldr	r0, [pc, #224]	; 3888c <flatcc_builder_default_alloc@@Base+0x65c>
   387a8:	add	r3, pc, r3
   387ac:	add	r3, r3, #76	; 0x4c
   387b0:	add	r1, pc, r1
   387b4:	add	r0, pc, r0
   387b8:	bl	1400c <__assert_fail@plt>
   387bc:	ldr	r6, [r4, #136]	; 0x88
   387c0:	sub	r7, r6, r5
   387c4:	cmp	r7, r6
   387c8:	bge	38858 <flatcc_builder_default_alloc@@Base+0x628>
   387cc:	mov	r3, r7
   387d0:	add	r1, sp, #24
   387d4:	str	r5, [sp]
   387d8:	ldr	r2, [sp, #20]
   387dc:	ldr	r0, [r4, #36]	; 0x24
   387e0:	ldr	r5, [r4, #44]	; 0x2c
   387e4:	blx	r5
   387e8:	cmp	r0, #0
   387ec:	bne	38854 <flatcc_builder_default_alloc@@Base+0x624>
   387f0:	mov	r0, r7
   387f4:	str	r7, [r4, #136]	; 0x88
   387f8:	add	sp, sp, #92	; 0x5c
   387fc:	ldrd	r4, [sp]
   38800:	ldrd	r6, [sp, #8]
   38804:	add	sp, sp, #16
   38808:	pop	{pc}		; (ldr pc, [sp], #4)
   3880c:	ldr	r3, [pc, #124]	; 38890 <flatcc_builder_default_alloc@@Base+0x660>
   38810:	movw	r2, #1463	; 0x5b7
   38814:	ldr	r1, [pc, #120]	; 38894 <flatcc_builder_default_alloc@@Base+0x664>
   38818:	ldr	r0, [pc, #120]	; 38898 <flatcc_builder_default_alloc@@Base+0x668>
   3881c:	add	r3, pc, r3
   38820:	add	r3, r3, #76	; 0x4c
   38824:	add	r1, pc, r1
   38828:	add	r0, pc, r0
   3882c:	bl	1400c <__assert_fail@plt>
   38830:	ldr	r3, [pc, #100]	; 3889c <flatcc_builder_default_alloc@@Base+0x66c>
   38834:	movw	r2, #1457	; 0x5b1
   38838:	ldr	r1, [pc, #96]	; 388a0 <flatcc_builder_default_alloc@@Base+0x670>
   3883c:	ldr	r0, [pc, #96]	; 388a4 <flatcc_builder_default_alloc@@Base+0x674>
   38840:	add	r3, pc, r3
   38844:	add	r3, r3, #76	; 0x4c
   38848:	add	r1, pc, r1
   3884c:	add	r0, pc, r0
   38850:	bl	1400c <__assert_fail@plt>
   38854:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   38858:	ldr	r3, [pc, #72]	; 388a8 <flatcc_builder_default_alloc@@Base+0x678>
   3885c:	movw	r2, #647	; 0x287
   38860:	ldr	r1, [pc, #68]	; 388ac <flatcc_builder_default_alloc@@Base+0x67c>
   38864:	ldr	r0, [pc, #68]	; 388b0 <flatcc_builder_default_alloc@@Base+0x680>
   38868:	add	r3, pc, r3
   3886c:	add	r3, r3, #44	; 0x2c
   38870:	add	r1, pc, r1
   38874:	add	r0, pc, r0
   38878:	bl	1400c <__assert_fail@plt>
   3887c:	andeq	r2, r3, ip, lsr #18
   38880:	muleq	r0, r8, r0
   38884:	andeq	r1, r2, r0, ror #12
   38888:	andeq	r1, r2, r8, lsr #27
   3888c:	andeq	r1, r2, r0, lsr lr
   38890:	andeq	r1, r2, ip, ror #11
   38894:	andeq	r1, r2, r4, lsr sp
   38898:			; <UNDEFINED> instruction: 0x000105b4
   3889c:	andeq	r1, r2, r8, asr #11
   388a0:	andeq	r1, r2, r0, lsl sp
   388a4:	andeq	r1, r2, r8, lsl #27
   388a8:	andeq	r1, r2, r0, lsr #11
   388ac:	andeq	r1, r2, r8, ror #25
   388b0:	andeq	r0, r1, r8, ror #10

000388b4 <flatcc_builder_flush_vtable_cache@@Base>:
   388b4:	ldr	r3, [r0, #116]	; 0x74
   388b8:	cmp	r3, #0
   388bc:	bxeq	lr
   388c0:	str	r4, [sp, #-8]!
   388c4:	mov	r4, r0
   388c8:	mov	r1, #0
   388cc:	ldr	r0, [r0, #92]	; 0x5c
   388d0:	ldr	r2, [r4, #96]	; 0x60
   388d4:	str	lr, [sp, #4]
   388d8:	bl	13f70 <memset@plt>
   388dc:	mov	r3, #16
   388e0:	mov	r2, #0
   388e4:	strd	r2, [r4, #120]	; 0x78
   388e8:	ldr	r4, [sp]
   388ec:	add	sp, sp, #4
   388f0:	pop	{pc}		; (ldr pc, [sp], #4)

000388f4 <flatcc_builder_custom_init@@Base>:
   388f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   388f8:	mov	r5, r3
   388fc:	mov	r4, r0
   38900:	strd	r6, [sp, #8]
   38904:	mov	r6, r1
   38908:	mov	r1, #0
   3890c:	ldr	r7, [pc, #124]	; 38990 <flatcc_builder_custom_init@@Base+0x9c>
   38910:	strd	r8, [sp, #16]
   38914:	mov	r8, r2
   38918:	mov	r2, #232	; 0xe8
   3891c:	str	sl, [sp, #24]
   38920:	str	lr, [sp, #28]
   38924:	ldr	r9, [sp, #32]
   38928:	bl	13f70 <memset@plt>
   3892c:	cmp	r6, #0
   38930:	add	r7, pc, r7
   38934:	beq	38968 <flatcc_builder_custom_init@@Base+0x74>
   38938:	cmp	r5, #0
   3893c:	beq	38984 <flatcc_builder_custom_init@@Base+0x90>
   38940:	ldr	sl, [sp, #24]
   38944:	mov	r0, #0
   38948:	strd	r8, [r4, #36]	; 0x24
   3894c:	str	r6, [r4, #44]	; 0x2c
   38950:	str	r5, [r4, #48]	; 0x30
   38954:	ldrd	r4, [sp]
   38958:	ldrd	r6, [sp, #8]
   3895c:	ldrd	r8, [sp, #16]
   38960:	add	sp, sp, #28
   38964:	pop	{pc}		; (ldr pc, [sp], #4)
   38968:	ldr	r3, [pc, #36]	; 38994 <flatcc_builder_custom_init@@Base+0xa0>
   3896c:	mov	r2, #1
   38970:	cmp	r5, #0
   38974:	add	r8, r4, #188	; 0xbc
   38978:	str	r2, [r4, #184]	; 0xb8
   3897c:	ldr	r6, [r7, r3]
   38980:	bne	38940 <flatcc_builder_custom_init@@Base+0x4c>
   38984:	ldr	r3, [pc, #12]	; 38998 <flatcc_builder_custom_init@@Base+0xa4>
   38988:	ldr	r5, [r7, r3]
   3898c:	b	38940 <flatcc_builder_custom_init@@Base+0x4c>
   38990:	andeq	r2, r3, r8, asr #13
   38994:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   38998:	andeq	r0, r0, r4, lsr #1

0003899c <flatcc_builder_init@@Base>:
   3899c:	mov	ip, #0
   389a0:	push	{lr}		; (str lr, [sp, #-4]!)
   389a4:	sub	sp, sp, #12
   389a8:	mov	r3, ip
   389ac:	mov	r2, ip
   389b0:	mov	r1, ip
   389b4:	str	ip, [sp]
   389b8:	bl	388f4 <flatcc_builder_custom_init@@Base>
   389bc:	add	sp, sp, #12
   389c0:	pop	{pc}		; (ldr pc, [sp], #4)

000389c4 <flatcc_builder_custom_reset@@Base>:
   389c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   389c8:	mov	r5, #0
   389cc:	mov	r4, r0
   389d0:	strd	r6, [sp, #8]
   389d4:	mov	r6, r0
   389d8:	strd	r8, [sp, #16]
   389dc:	mov	r8, r1
   389e0:	mov	r9, r2
   389e4:	str	lr, [sp, #24]
   389e8:	sub	sp, sp, #12
   389ec:	b	38a3c <flatcc_builder_custom_reset@@Base+0x78>
   389f0:	cmp	r5, #5
   389f4:	cmpne	r9, #0
   389f8:	beq	38a20 <flatcc_builder_custom_reset@@Base+0x5c>
   389fc:	mov	r3, #1
   38a00:	str	r5, [sp]
   38a04:	mov	r2, r3
   38a08:	ldr	r0, [r6, #40]	; 0x28
   38a0c:	ldr	r7, [r6, #48]	; 0x30
   38a10:	blx	r7
   38a14:	cmp	r0, #0
   38a18:	bne	38b2c <flatcc_builder_custom_reset@@Base+0x168>
   38a1c:	ldr	r0, [r4, #52]	; 0x34
   38a20:	mov	r1, #0
   38a24:	ldr	r2, [r4, #56]	; 0x38
   38a28:	bl	13f70 <memset@plt>
   38a2c:	add	r5, r5, #1
   38a30:	add	r4, r4, #8
   38a34:	cmp	r5, #8
   38a38:	beq	38a7c <flatcc_builder_custom_reset@@Base+0xb8>
   38a3c:	ldr	r0, [r4, #52]	; 0x34
   38a40:	add	r1, r4, #52	; 0x34
   38a44:	cmp	r0, #0
   38a48:	bne	389f0 <flatcc_builder_custom_reset@@Base+0x2c>
   38a4c:	ldr	r3, [r4, #56]	; 0x38
   38a50:	cmp	r3, #0
   38a54:	beq	38a2c <flatcc_builder_custom_reset@@Base+0x68>
   38a58:	ldr	r3, [pc, #212]	; 38b34 <flatcc_builder_custom_reset@@Base+0x170>
   38a5c:	movw	r2, #434	; 0x1b2
   38a60:	ldr	r1, [pc, #208]	; 38b38 <flatcc_builder_custom_reset@@Base+0x174>
   38a64:	ldr	r0, [pc, #208]	; 38b3c <flatcc_builder_custom_reset@@Base+0x178>
   38a68:	add	r3, pc, r3
   38a6c:	add	r3, r3, #108	; 0x6c
   38a70:	add	r1, pc, r1
   38a74:	add	r0, pc, r0
   38a78:	bl	1400c <__assert_fail@plt>
   38a7c:	mov	r2, #0
   38a80:	ldr	r0, [r6, #52]	; 0x34
   38a84:	ldr	r3, [r6, #124]	; 0x7c
   38a88:	ldr	r1, [r6, #60]	; 0x3c
   38a8c:	str	r0, [r6, #4]
   38a90:	str	r2, [r6, #120]	; 0x78
   38a94:	cmp	r3, r2
   38a98:	ldr	r2, [r6, #76]	; 0x4c
   38a9c:	movne	r3, #16
   38aa0:	strne	r3, [r6, #124]	; 0x7c
   38aa4:	mov	r3, #0
   38aa8:	cmp	r8, r3
   38aac:	str	r2, [r6]
   38ab0:	str	r1, [r6, #16]
   38ab4:	str	r3, [r6, #20]
   38ab8:	str	r3, [r6, #24]
   38abc:	str	r3, [r6, #32]
   38ac0:	strh	r3, [r6, #128]	; 0x80
   38ac4:	str	r3, [r6, #136]	; 0x88
   38ac8:	str	r3, [r6, #140]	; 0x8c
   38acc:	str	r3, [r6, #148]	; 0x94
   38ad0:	str	r3, [r6, #152]	; 0x98
   38ad4:	str	r3, [r6, #156]	; 0x9c
   38ad8:	str	r3, [r6, #160]	; 0xa0
   38adc:	bne	38b04 <flatcc_builder_custom_reset@@Base+0x140>
   38ae0:	ldr	r0, [r6, #184]	; 0xb8
   38ae4:	cmp	r0, #0
   38ae8:	bne	38b1c <flatcc_builder_custom_reset@@Base+0x158>
   38aec:	add	sp, sp, #12
   38af0:	ldrd	r4, [sp]
   38af4:	ldrd	r6, [sp, #8]
   38af8:	ldrd	r8, [sp, #16]
   38afc:	add	sp, sp, #24
   38b00:	pop	{pc}		; (ldr pc, [sp], #4)
   38b04:	ldr	r0, [r6, #184]	; 0xb8
   38b08:	str	r3, [r6, #172]	; 0xac
   38b0c:	str	r3, [r6, #176]	; 0xb0
   38b10:	str	r3, [r6, #180]	; 0xb4
   38b14:	cmp	r0, #0
   38b18:	beq	38aec <flatcc_builder_custom_reset@@Base+0x128>
   38b1c:	add	r0, r6, #188	; 0xbc
   38b20:	bl	3c8fc <flatcc_emitter_reset@@Base>
   38b24:	mov	r0, #0
   38b28:	b	38aec <flatcc_builder_custom_reset@@Base+0x128>
   38b2c:	mvn	r0, #0
   38b30:	b	38aec <flatcc_builder_custom_reset@@Base+0x128>
   38b34:	andeq	r1, r2, r0, lsr #7
   38b38:	andeq	r1, r2, r8, ror #21
   38b3c:	andeq	r1, r2, r0, lsl #23

00038b40 <flatcc_builder_reset@@Base>:
   38b40:	mov	r2, #0
   38b44:	mov	r1, r2
   38b48:	b	389c4 <flatcc_builder_custom_reset@@Base>

00038b4c <flatcc_builder_clear@@Base>:
   38b4c:	strd	r4, [sp, #-20]!	; 0xffffffec
   38b50:	mov	r4, #0
   38b54:	add	r5, r0, #52	; 0x34
   38b58:	strd	r6, [sp, #8]
   38b5c:	mov	r6, r0
   38b60:	str	lr, [sp, #16]
   38b64:	sub	sp, sp, #12
   38b68:	mov	r3, #0
   38b6c:	mov	r1, r5
   38b70:	str	r4, [sp]
   38b74:	mov	r2, r3
   38b78:	add	r4, r4, #1
   38b7c:	ldr	r0, [r6, #40]	; 0x28
   38b80:	add	r5, r5, #8
   38b84:	ldr	r7, [r6, #48]	; 0x30
   38b88:	blx	r7
   38b8c:	cmp	r4, #8
   38b90:	bne	38b68 <flatcc_builder_clear@@Base+0x1c>
   38b94:	ldr	r3, [r6, #184]	; 0xb8
   38b98:	cmp	r3, #0
   38b9c:	bne	38bc4 <flatcc_builder_clear@@Base+0x78>
   38ba0:	mov	r0, r6
   38ba4:	mov	r2, #232	; 0xe8
   38ba8:	mov	r1, #0
   38bac:	add	sp, sp, #12
   38bb0:	ldrd	r4, [sp]
   38bb4:	ldrd	r6, [sp, #8]
   38bb8:	ldr	lr, [sp, #16]
   38bbc:	add	sp, sp, #20
   38bc0:	b	13f70 <memset@plt>
   38bc4:	add	r0, r6, #188	; 0xbc
   38bc8:	bl	3c9d0 <flatcc_emitter_clear@@Base>
   38bcc:	b	38ba0 <flatcc_builder_clear@@Base+0x54>

00038bd0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   38bd0:	strd	r4, [sp, #-20]!	; 0xffffffec
   38bd4:	add	r4, r1, #3
   38bd8:	mov	r5, r0
   38bdc:	ldr	r3, [r0, #112]	; 0x70
   38be0:	bic	r4, r4, #3
   38be4:	strd	r6, [sp, #8]
   38be8:	add	r4, r4, #4
   38bec:	ldr	r6, [r0, #228]	; 0xe4
   38bf0:	str	lr, [sp, #16]
   38bf4:	sub	sp, sp, #12
   38bf8:	add	r2, r6, r4
   38bfc:	cmp	r2, r3
   38c00:	bls	38c28 <flatcc_builder_enter_user_frame_ptr@@Base+0x58>
   38c04:	mov	ip, #7
   38c08:	add	r1, r0, #108	; 0x6c
   38c0c:	ldr	r0, [r0, #40]	; 0x28
   38c10:	mov	r3, #0
   38c14:	str	ip, [sp]
   38c18:	ldr	r7, [r5, #48]	; 0x30
   38c1c:	blx	r7
   38c20:	cmp	r0, #0
   38c24:	bne	38c7c <flatcc_builder_enter_user_frame_ptr@@Base+0xac>
   38c28:	ldr	r7, [r5, #108]	; 0x6c
   38c2c:	adds	r3, r7, r6
   38c30:	moveq	r0, r3
   38c34:	beq	38c68 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   38c38:	mov	r2, r4
   38c3c:	mov	r0, r3
   38c40:	mov	r1, #0
   38c44:	bl	13f70 <memset@plt>
   38c48:	ldr	r2, [r5, #224]	; 0xe0
   38c4c:	add	r0, r0, #4
   38c50:	str	r2, [r7, r6]
   38c54:	ldr	r3, [r5, #228]	; 0xe4
   38c58:	add	r4, r3, r4
   38c5c:	add	r3, r3, #4
   38c60:	str	r3, [r5, #224]	; 0xe0
   38c64:	str	r4, [r5, #228]	; 0xe4
   38c68:	add	sp, sp, #12
   38c6c:	ldrd	r4, [sp]
   38c70:	ldrd	r6, [sp, #8]
   38c74:	add	sp, sp, #16
   38c78:	pop	{pc}		; (ldr pc, [sp], #4)
   38c7c:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>

00038c80 <flatcc_builder_enter_user_frame@@Base>:
   38c80:	strd	r4, [sp, #-20]!	; 0xffffffec
   38c84:	add	r4, r1, #3
   38c88:	mov	r5, r0
   38c8c:	ldr	r3, [r0, #112]	; 0x70
   38c90:	bic	r4, r4, #3
   38c94:	strd	r6, [sp, #8]
   38c98:	add	r4, r4, #4
   38c9c:	ldr	r6, [r0, #228]	; 0xe4
   38ca0:	str	lr, [sp, #16]
   38ca4:	sub	sp, sp, #12
   38ca8:	add	r2, r6, r4
   38cac:	cmp	r2, r3
   38cb0:	bls	38cd8 <flatcc_builder_enter_user_frame@@Base+0x58>
   38cb4:	mov	ip, #7
   38cb8:	add	r1, r0, #108	; 0x6c
   38cbc:	ldr	r0, [r0, #40]	; 0x28
   38cc0:	mov	r3, #0
   38cc4:	str	ip, [sp]
   38cc8:	ldr	r7, [r5, #48]	; 0x30
   38ccc:	blx	r7
   38cd0:	cmp	r0, #0
   38cd4:	bne	38d20 <flatcc_builder_enter_user_frame@@Base+0xa0>
   38cd8:	ldr	r7, [r5, #108]	; 0x6c
   38cdc:	adds	r0, r7, r6
   38ce0:	beq	38d0c <flatcc_builder_enter_user_frame@@Base+0x8c>
   38ce4:	mov	r2, r4
   38ce8:	mov	r1, #0
   38cec:	bl	13f70 <memset@plt>
   38cf0:	ldr	r3, [r5, #224]	; 0xe0
   38cf4:	str	r3, [r7, r6]
   38cf8:	ldr	r0, [r5, #228]	; 0xe4
   38cfc:	add	r4, r0, r4
   38d00:	add	r0, r0, #4
   38d04:	str	r0, [r5, #224]	; 0xe0
   38d08:	str	r4, [r5, #228]	; 0xe4
   38d0c:	add	sp, sp, #12
   38d10:	ldrd	r4, [sp]
   38d14:	ldrd	r6, [sp, #8]
   38d18:	add	sp, sp, #16
   38d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   38d20:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>

00038d24 <flatcc_builder_exit_user_frame@@Base>:
   38d24:	ldr	r2, [r0, #224]	; 0xe0
   38d28:	cmp	r2, #0
   38d2c:	beq	38d54 <flatcc_builder_exit_user_frame@@Base+0x30>
   38d30:	mov	r3, r0
   38d34:	sub	r0, r2, #4
   38d38:	ldr	r1, [r3, #108]	; 0x6c
   38d3c:	str	r0, [r3, #228]	; 0xe4
   38d40:	add	r2, r1, r2
   38d44:	ldr	r2, [r2, #-4]
   38d48:	mov	r0, r2
   38d4c:	str	r2, [r3, #224]	; 0xe0
   38d50:	bx	lr
   38d54:	ldr	r3, [pc, #36]	; 38d80 <flatcc_builder_exit_user_frame@@Base+0x5c>
   38d58:	movw	r2, #542	; 0x21e
   38d5c:	str	r4, [sp, #-8]!
   38d60:	ldr	r1, [pc, #28]	; 38d84 <flatcc_builder_exit_user_frame@@Base+0x60>
   38d64:	str	lr, [sp, #4]
   38d68:	ldr	r0, [pc, #24]	; 38d88 <flatcc_builder_exit_user_frame@@Base+0x64>
   38d6c:	add	r3, pc, r3
   38d70:	add	r3, r3, #136	; 0x88
   38d74:	add	r1, pc, r1
   38d78:	add	r0, pc, r0
   38d7c:	bl	1400c <__assert_fail@plt>
   38d80:	muleq	r2, ip, r0
   38d84:	andeq	r1, r2, r4, ror #15
   38d88:	muleq	r2, r0, r8

00038d8c <flatcc_builder_exit_user_frame_at@@Base>:
   38d8c:	ldr	r2, [r0, #224]	; 0xe0
   38d90:	cmp	r2, r1
   38d94:	bcc	38da0 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   38d98:	str	r1, [r0, #224]	; 0xe0
   38d9c:	b	38d24 <flatcc_builder_exit_user_frame@@Base>
   38da0:	ldr	r3, [pc, #36]	; 38dcc <flatcc_builder_exit_user_frame_at@@Base+0x40>
   38da4:	movw	r2, #551	; 0x227
   38da8:	str	r4, [sp, #-8]!
   38dac:	ldr	r1, [pc, #28]	; 38dd0 <flatcc_builder_exit_user_frame_at@@Base+0x44>
   38db0:	str	lr, [sp, #4]
   38db4:	ldr	r0, [pc, #24]	; 38dd4 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   38db8:	add	r3, pc, r3
   38dbc:	add	r3, r3, #168	; 0xa8
   38dc0:	add	r1, pc, r1
   38dc4:	add	r0, pc, r0
   38dc8:	bl	1400c <__assert_fail@plt>
   38dcc:	andeq	r1, r2, r0, asr r0
   38dd0:	muleq	r2, r8, r7
   38dd4:	andeq	r1, r2, r0, ror #16

00038dd8 <flatcc_builder_get_current_user_frame@@Base>:
   38dd8:	ldr	r0, [r0, #224]	; 0xe0
   38ddc:	bx	lr

00038de0 <flatcc_builder_get_user_frame_ptr@@Base>:
   38de0:	ldr	r0, [r0, #108]	; 0x6c
   38de4:	add	r0, r0, r1
   38de8:	bx	lr

00038dec <flatcc_builder_embed_buffer@@Base>:
   38dec:	strd	r4, [sp, #-20]!	; 0xffffffec
   38df0:	mov	r5, r3
   38df4:	mov	r4, r0
   38df8:	ldr	r3, [r0, #152]	; 0x98
   38dfc:	strd	r6, [sp, #8]
   38e00:	mov	r7, r2
   38e04:	mov	r2, r1
   38e08:	ldr	r6, [pc, #356]	; 38f74 <flatcc_builder_embed_buffer@@Base+0x188>
   38e0c:	str	lr, [sp, #16]
   38e10:	sub	sp, sp, #92	; 0x5c
   38e14:	add	r1, sp, #112	; 0x70
   38e18:	adds	r3, r3, #0
   38e1c:	movne	r3, #1
   38e20:	bl	383c0 <flatcc_builder_default_alloc@@Base+0x190>
   38e24:	cmp	r0, #0
   38e28:	add	r6, pc, r6
   38e2c:	bne	38f44 <flatcc_builder_embed_buffer@@Base+0x158>
   38e30:	ldr	r3, [sp, #116]	; 0x74
   38e34:	str	r0, [sp, #16]
   38e38:	ldr	r1, [r4, #136]	; 0x88
   38e3c:	str	r0, [sp, #20]
   38e40:	ldrh	r2, [sp, #112]	; 0x70
   38e44:	tst	r3, #2
   38e48:	ldr	r0, [r4, #152]	; 0x98
   38e4c:	movne	ip, #4
   38e50:	moveq	ip, #0
   38e54:	sub	r3, r1, r5
   38e58:	sub	r3, r3, ip
   38e5c:	sub	r2, r2, #1
   38e60:	and	r3, r3, r2
   38e64:	add	r2, r5, r3
   38e68:	cmp	r0, #0
   38e6c:	str	r2, [sp, #12]
   38e70:	beq	38e94 <flatcc_builder_embed_buffer@@Base+0xa8>
   38e74:	mov	ip, #1
   38e78:	mov	r2, #4
   38e7c:	mov	r0, r2
   38e80:	str	r2, [sp, #16]
   38e84:	str	ip, [sp, #20]
   38e88:	add	ip, sp, #12
   38e8c:	str	ip, [sp, #24]
   38e90:	str	r2, [sp, #28]
   38e94:	cmp	r5, #0
   38e98:	beq	38ec0 <flatcc_builder_embed_buffer@@Base+0xd4>
   38e9c:	ldr	r2, [sp, #20]
   38ea0:	add	ip, sp, #88	; 0x58
   38ea4:	add	r0, r0, r5
   38ea8:	str	r0, [sp, #16]
   38eac:	add	r2, r2, #1
   38eb0:	add	ip, ip, r2, lsl #3
   38eb4:	str	r2, [sp, #20]
   38eb8:	str	r7, [ip, #-72]	; 0xffffffb8
   38ebc:	str	r5, [ip, #-68]	; 0xffffffbc
   38ec0:	cmp	r3, #0
   38ec4:	bne	38f14 <flatcc_builder_embed_buffer@@Base+0x128>
   38ec8:	sub	r5, r1, r0
   38ecc:	cmp	r1, r5
   38ed0:	ble	38f50 <flatcc_builder_embed_buffer@@Base+0x164>
   38ed4:	mov	r3, r5
   38ed8:	add	r1, sp, #24
   38edc:	str	r0, [sp]
   38ee0:	ldr	r2, [sp, #20]
   38ee4:	ldr	r0, [r4, #36]	; 0x24
   38ee8:	ldr	r6, [r4, #44]	; 0x2c
   38eec:	blx	r6
   38ef0:	cmp	r0, #0
   38ef4:	streq	r5, [r4, #136]	; 0x88
   38ef8:	bne	38f4c <flatcc_builder_embed_buffer@@Base+0x160>
   38efc:	mov	r0, r5
   38f00:	add	sp, sp, #92	; 0x5c
   38f04:	ldrd	r4, [sp]
   38f08:	ldrd	r6, [sp, #8]
   38f0c:	add	sp, sp, #16
   38f10:	pop	{pc}		; (ldr pc, [sp], #4)
   38f14:	ldr	ip, [pc, #92]	; 38f78 <flatcc_builder_embed_buffer@@Base+0x18c>
   38f18:	add	r0, r0, r3
   38f1c:	ldr	r2, [sp, #20]
   38f20:	str	r0, [sp, #16]
   38f24:	ldr	lr, [r6, ip]
   38f28:	add	ip, sp, #88	; 0x58
   38f2c:	add	r2, r2, #1
   38f30:	add	ip, ip, r2, lsl #3
   38f34:	str	r2, [sp, #20]
   38f38:	str	lr, [ip, #-72]	; 0xffffffb8
   38f3c:	str	r3, [ip, #-68]	; 0xffffffbc
   38f40:	b	38ec8 <flatcc_builder_embed_buffer@@Base+0xdc>
   38f44:	mov	r5, #0
   38f48:	b	38efc <flatcc_builder_embed_buffer@@Base+0x110>
   38f4c:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   38f50:	ldr	r3, [pc, #36]	; 38f7c <flatcc_builder_embed_buffer@@Base+0x190>
   38f54:	movw	r2, #647	; 0x287
   38f58:	ldr	r1, [pc, #32]	; 38f80 <flatcc_builder_embed_buffer@@Base+0x194>
   38f5c:	ldr	r0, [pc, #32]	; 38f84 <flatcc_builder_embed_buffer@@Base+0x198>
   38f60:	add	r3, pc, r3
   38f64:	add	r3, r3, #44	; 0x2c
   38f68:	add	r1, pc, r1
   38f6c:	add	r0, pc, r0
   38f70:	bl	1400c <__assert_fail@plt>
   38f74:	ldrdeq	r2, [r3], -r0
   38f78:	muleq	r0, r8, r0
   38f7c:	andeq	r0, r2, r8, lsr #29
   38f80:	strdeq	r1, [r2], -r0
   38f84:	andeq	pc, r0, r0, ror lr	; <UNPREDICTABLE>

00038f88 <flatcc_builder_create_buffer@@Base>:
   38f88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   38f8c:	mov	r4, r0
   38f90:	strd	r6, [sp, #8]
   38f94:	mov	r6, r3
   38f98:	strd	r8, [sp, #16]
   38f9c:	mov	r8, #0
   38fa0:	strd	sl, [sp, #24]
   38fa4:	mov	sl, r1
   38fa8:	str	lr, [sp, #32]
   38fac:	sub	sp, sp, #100	; 0x64
   38fb0:	ldr	r9, [sp, #140]	; 0x8c
   38fb4:	add	r1, sp, #136	; 0x88
   38fb8:	str	r8, [sp, #20]
   38fbc:	ldr	r5, [pc, #496]	; 391b4 <flatcc_builder_create_buffer@@Base+0x22c>
   38fc0:	and	r7, r9, #1
   38fc4:	mov	r3, r7
   38fc8:	bl	383c0 <flatcc_builder_default_alloc@@Base+0x190>
   38fcc:	cmp	r0, r8
   38fd0:	add	r5, pc, r5
   38fd4:	bne	39128 <flatcc_builder_create_buffer@@Base+0x1a0>
   38fd8:	ldrh	r2, [r4, #128]	; 0x80
   38fdc:	ldrh	r3, [sp, #136]	; 0x88
   38fe0:	ldr	ip, [r4, #136]	; 0x88
   38fe4:	cmp	r2, r3
   38fe8:	strhcc	r3, [r4, #128]	; 0x80
   38fec:	cmp	sl, #0
   38ff0:	ldrne	r2, [sl]
   38ff4:	ldreq	lr, [sp, #20]
   38ff8:	movne	lr, r2
   38ffc:	strne	r2, [sp, #20]
   39000:	sub	r2, r3, #1
   39004:	sub	r3, ip, #4
   39008:	cmp	lr, #0
   3900c:	movne	lr, #4
   39010:	tst	r9, #2
   39014:	movne	r0, #4
   39018:	moveq	r0, #0
   3901c:	sub	r3, r3, lr
   39020:	ands	r1, r9, #3
   39024:	sub	r3, r3, r0
   39028:	and	r3, r3, r2
   3902c:	bne	39148 <flatcc_builder_create_buffer@@Base+0x1c0>
   39030:	mov	r9, r1
   39034:	mov	r8, #1
   39038:	mov	r0, #4
   3903c:	add	sl, sp, #96	; 0x60
   39040:	add	r2, r9, #1
   39044:	str	r0, [sp, #24]
   39048:	add	r2, sl, r2, lsl #3
   3904c:	mov	fp, #4
   39050:	add	sl, sp, #12
   39054:	cmp	lr, #0
   39058:	str	r8, [sp, #28]
   3905c:	strd	sl, [r2, #-72]	; 0xffffffb8
   39060:	beq	3908c <flatcc_builder_create_buffer@@Base+0x104>
   39064:	add	r2, sp, #96	; 0x60
   39068:	add	r8, r8, #1
   3906c:	add	r8, r2, r8, lsl #3
   39070:	add	r0, r0, lr
   39074:	add	r9, r9, #2
   39078:	add	r2, sp, #20
   3907c:	str	r0, [sp, #24]
   39080:	str	r2, [r8, #-72]	; 0xffffffb8
   39084:	str	lr, [r8, #-68]	; 0xffffffbc
   39088:	str	r9, [sp, #28]
   3908c:	cmp	r3, #0
   39090:	beq	390c0 <flatcc_builder_create_buffer@@Base+0x138>
   39094:	ldr	lr, [pc, #284]	; 391b8 <flatcc_builder_create_buffer@@Base+0x230>
   39098:	add	r0, r0, r3
   3909c:	ldr	r2, [sp, #28]
   390a0:	str	r0, [sp, #24]
   390a4:	ldr	r5, [r5, lr]
   390a8:	add	lr, sp, #96	; 0x60
   390ac:	add	r2, r2, #1
   390b0:	add	lr, lr, r2, lsl #3
   390b4:	str	r2, [sp, #28]
   390b8:	str	r5, [lr, #-72]	; 0xffffffb8
   390bc:	str	r3, [lr, #-68]	; 0xffffffbc
   390c0:	sub	r5, ip, r0
   390c4:	cmp	r1, #0
   390c8:	mov	r2, r5
   390cc:	addne	r2, r5, #4
   390d0:	cmp	r7, #0
   390d4:	sub	r6, r6, r2
   390d8:	ldrne	r3, [r4, #144]	; 0x90
   390dc:	mov	r8, r5
   390e0:	str	r6, [sp, #12]
   390e4:	ldreq	r3, [r4, #140]	; 0x8c
   390e8:	cmp	ip, r5
   390ec:	sub	r3, r3, r2
   390f0:	str	r3, [sp, #16]
   390f4:	ble	3918c <flatcc_builder_create_buffer@@Base+0x204>
   390f8:	mov	r3, r5
   390fc:	add	r1, sp, #32
   39100:	str	r0, [sp]
   39104:	ldr	r2, [sp, #28]
   39108:	ldr	r0, [r4, #36]	; 0x24
   3910c:	ldr	r6, [r4, #44]	; 0x2c
   39110:	blx	r6
   39114:	cmp	r0, #0
   39118:	bne	391b0 <flatcc_builder_create_buffer@@Base+0x228>
   3911c:	cmp	r5, #0
   39120:	str	r5, [r4, #136]	; 0x88
   39124:	beq	39168 <flatcc_builder_create_buffer@@Base+0x1e0>
   39128:	mov	r0, r8
   3912c:	add	sp, sp, #100	; 0x64
   39130:	ldrd	r4, [sp]
   39134:	ldrd	r6, [sp, #8]
   39138:	ldrd	r8, [sp, #16]
   3913c:	ldrd	sl, [sp, #24]
   39140:	add	sp, sp, #32
   39144:	pop	{pc}		; (ldr pc, [sp], #4)
   39148:	mov	sl, #4
   3914c:	add	r2, sp, #16
   39150:	mov	r8, #2
   39154:	mov	r9, #1
   39158:	mov	r0, #8
   3915c:	str	r2, [sp, #32]
   39160:	str	sl, [sp, #36]	; 0x24
   39164:	b	3903c <flatcc_builder_create_buffer@@Base+0xb4>
   39168:	ldr	r3, [pc, #76]	; 391bc <flatcc_builder_create_buffer@@Base+0x234>
   3916c:	mov	r2, #772	; 0x304
   39170:	ldr	r1, [pc, #72]	; 391c0 <flatcc_builder_create_buffer@@Base+0x238>
   39174:	ldr	r0, [pc, #72]	; 391c4 <flatcc_builder_create_buffer@@Base+0x23c>
   39178:	add	r3, pc, r3
   3917c:	add	r3, r3, #204	; 0xcc
   39180:	add	r1, pc, r1
   39184:	add	r0, pc, r0
   39188:	bl	1400c <__assert_fail@plt>
   3918c:	ldr	r3, [pc, #52]	; 391c8 <flatcc_builder_create_buffer@@Base+0x240>
   39190:	movw	r2, #647	; 0x287
   39194:	ldr	r1, [pc, #48]	; 391cc <flatcc_builder_create_buffer@@Base+0x244>
   39198:	ldr	r0, [pc, #48]	; 391d0 <flatcc_builder_create_buffer@@Base+0x248>
   3919c:	add	r3, pc, r3
   391a0:	add	r3, r3, #44	; 0x2c
   391a4:	add	r1, pc, r1
   391a8:	add	r0, pc, r0
   391ac:	bl	1400c <__assert_fail@plt>
   391b0:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   391b4:	andeq	r2, r3, r8, lsr #32
   391b8:	muleq	r0, r8, r0
   391bc:	muleq	r2, r0, ip
   391c0:	ldrdeq	r1, [r2], -r8
   391c4:	andeq	pc, r0, r8, asr ip	; <UNPREDICTABLE>
   391c8:	andeq	r0, r2, ip, ror #24
   391cc:			; <UNDEFINED> instruction: 0x000213b4
   391d0:	andeq	pc, r0, r4, lsr ip	; <UNPREDICTABLE>

000391d4 <flatcc_builder_create_struct@@Base>:
   391d4:	ldr	ip, [pc, #316]	; 39318 <flatcc_builder_create_struct@@Base+0x144>
   391d8:	cmp	r3, #0
   391dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   391e0:	strd	r6, [sp, #8]
   391e4:	str	lr, [sp, #16]
   391e8:	sub	sp, sp, #84	; 0x54
   391ec:	add	ip, pc, ip
   391f0:	beq	392f4 <flatcc_builder_create_struct@@Base+0x120>
   391f4:	mov	r4, r0
   391f8:	ldrh	r0, [r0, #128]	; 0x80
   391fc:	ldr	lr, [r4, #136]	; 0x88
   39200:	cmp	r0, r3
   39204:	mov	r0, #0
   39208:	strhcc	r3, [r4, #128]	; 0x80
   3920c:	sub	r5, lr, r2
   39210:	sub	r3, r3, #1
   39214:	cmp	r2, r0
   39218:	and	r3, r3, r5
   3921c:	str	r0, [sp, #8]
   39220:	str	r0, [sp, #12]
   39224:	bne	392a8 <flatcc_builder_create_struct@@Base+0xd4>
   39228:	cmp	r3, #0
   3922c:	movne	r2, r3
   39230:	movne	r6, #1
   39234:	beq	392cc <flatcc_builder_create_struct@@Base+0xf8>
   39238:	ldr	r1, [pc, #220]	; 3931c <flatcc_builder_create_struct@@Base+0x148>
   3923c:	add	r0, r0, #1
   39240:	add	r7, sp, #80	; 0x50
   39244:	str	r2, [sp, #8]
   39248:	add	r0, r7, r0, lsl #3
   3924c:	sub	r5, lr, r2
   39250:	ldr	r1, [ip, r1]
   39254:	str	r6, [sp, #12]
   39258:	str	r1, [r0, #-72]	; 0xffffffb8
   3925c:	str	r3, [r0, #-68]	; 0xffffffbc
   39260:	cmp	lr, r5
   39264:	ble	392cc <flatcc_builder_create_struct@@Base+0xf8>
   39268:	mov	r3, r5
   3926c:	add	r1, sp, #16
   39270:	str	r2, [sp]
   39274:	ldr	r2, [sp, #12]
   39278:	ldr	r0, [r4, #36]	; 0x24
   3927c:	ldr	r6, [r4, #44]	; 0x2c
   39280:	blx	r6
   39284:	cmp	r0, #0
   39288:	bne	392f0 <flatcc_builder_create_struct@@Base+0x11c>
   3928c:	mov	r0, r5
   39290:	str	r5, [r4, #136]	; 0x88
   39294:	add	sp, sp, #84	; 0x54
   39298:	ldrd	r4, [sp]
   3929c:	ldrd	r6, [sp, #8]
   392a0:	add	sp, sp, #16
   392a4:	pop	{pc}		; (ldr pc, [sp], #4)
   392a8:	mov	r0, #1
   392ac:	cmp	r3, #0
   392b0:	str	r2, [sp, #8]
   392b4:	movne	r6, #2
   392b8:	strd	r0, [sp, #12]
   392bc:	str	r2, [sp, #20]
   392c0:	addne	r2, r2, r3
   392c4:	beq	39260 <flatcc_builder_create_struct@@Base+0x8c>
   392c8:	b	39238 <flatcc_builder_create_struct@@Base+0x64>
   392cc:	ldr	r3, [pc, #76]	; 39320 <flatcc_builder_create_struct@@Base+0x14c>
   392d0:	movw	r2, #647	; 0x287
   392d4:	ldr	r1, [pc, #72]	; 39324 <flatcc_builder_create_struct@@Base+0x150>
   392d8:	ldr	r0, [pc, #72]	; 39328 <flatcc_builder_create_struct@@Base+0x154>
   392dc:	add	r3, pc, r3
   392e0:	add	r3, r3, #44	; 0x2c
   392e4:	add	r1, pc, r1
   392e8:	add	r0, pc, r0
   392ec:	bl	1400c <__assert_fail@plt>
   392f0:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   392f4:	ldr	r3, [pc, #48]	; 3932c <flatcc_builder_create_struct@@Base+0x158>
   392f8:	movw	r2, #783	; 0x30f
   392fc:	ldr	r1, [pc, #44]	; 39330 <flatcc_builder_create_struct@@Base+0x15c>
   39300:	ldr	r0, [pc, #44]	; 39334 <flatcc_builder_create_struct@@Base+0x160>
   39304:	add	r3, pc, r3
   39308:	add	r3, r3, #236	; 0xec
   3930c:	add	r1, pc, r1
   39310:	add	r0, pc, r0
   39314:	bl	1400c <__assert_fail@plt>
   39318:	andeq	r1, r3, ip, lsl #28
   3931c:	muleq	r0, r8, r0
   39320:	andeq	r0, r2, ip, lsr #22
   39324:	andeq	r1, r2, r4, ror r2
   39328:	strdeq	pc, [r0], -r4
   3932c:	andeq	r0, r2, r4, lsl #22
   39330:	andeq	r1, r2, ip, asr #4
   39334:	andeq	r1, r2, r4, lsr r3

00039338 <flatcc_builder_start_buffer@@Base>:
   39338:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3933c:	mov	r5, r1
   39340:	mov	r4, r0
   39344:	ldrh	r1, [r0, #128]	; 0x80
   39348:	strd	r6, [sp, #8]
   3934c:	mov	r7, r3
   39350:	ldr	r6, [pc, #180]	; 3940c <flatcc_builder_start_buffer@@Base+0xd4>
   39354:	strd	r8, [sp, #16]
   39358:	mov	r8, r2
   3935c:	str	sl, [sp, #24]
   39360:	str	lr, [sp, #28]
   39364:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   39368:	cmp	r0, #0
   3936c:	add	r6, pc, r6
   39370:	bne	39404 <flatcc_builder_start_buffer@@Base+0xcc>
   39374:	mov	r3, #1
   39378:	ldrh	r9, [r4, #132]	; 0x84
   3937c:	cmp	r5, #0
   39380:	ldr	ip, [r4, #148]	; 0x94
   39384:	strh	r3, [r4, #128]	; 0x80
   39388:	ldr	r1, [r4, #32]
   3938c:	ldr	lr, [r4, #136]	; 0x88
   39390:	add	r2, ip, r3
   39394:	ldrh	r3, [r4, #164]	; 0xa4
   39398:	strh	r9, [r1, #34]	; 0x22
   3939c:	strh	r8, [r4, #132]	; 0x84
   393a0:	ldr	r9, [r4, #144]	; 0x90
   393a4:	ldr	r8, [r4, #152]	; 0x98
   393a8:	strh	r3, [r1, #32]
   393ac:	ldr	r3, [r4, #168]	; 0xa8
   393b0:	strh	r7, [r4, #164]	; 0xa4
   393b4:	str	r9, [r1, #20]
   393b8:	str	r8, [r1, #28]
   393bc:	str	lr, [r4, #144]	; 0x90
   393c0:	str	r2, [r4, #148]	; 0x94
   393c4:	str	ip, [r4, #152]	; 0x98
   393c8:	str	r3, [r1, #16]
   393cc:	beq	393f8 <flatcc_builder_start_buffer@@Base+0xc0>
   393d0:	ldr	r2, [r5]
   393d4:	mov	r3, #1
   393d8:	str	r2, [r4, #168]	; 0xa8
   393dc:	strh	r3, [r1, #14]
   393e0:	ldrd	r4, [sp]
   393e4:	ldrd	r6, [sp, #8]
   393e8:	ldrd	r8, [sp, #16]
   393ec:	ldr	sl, [sp, #24]
   393f0:	add	sp, sp, #28
   393f4:	pop	{pc}		; (ldr pc, [sp], #4)
   393f8:	ldr	r3, [pc, #16]	; 39410 <flatcc_builder_start_buffer@@Base+0xd8>
   393fc:	ldr	r5, [r6, r3]
   39400:	b	393d0 <flatcc_builder_start_buffer@@Base+0x98>
   39404:	mvn	r0, #0
   39408:	b	393e0 <flatcc_builder_start_buffer@@Base+0xa8>
   3940c:	andeq	r1, r3, ip, lsl #25
   39410:	muleq	r0, r8, r0

00039414 <flatcc_builder_end_buffer@@Base>:
   39414:	ldr	ip, [r0, #32]
   39418:	strd	r4, [sp, #-16]!
   3941c:	mov	r4, r0
   39420:	ldrh	r2, [r0, #164]	; 0xa4
   39424:	ldr	r0, [r0, #152]	; 0x98
   39428:	ldrh	ip, [ip, #14]
   3942c:	and	r2, r2, #2
   39430:	str	r6, [sp, #8]
   39434:	str	lr, [sp, #12]
   39438:	sub	sp, sp, #8
   3943c:	cmp	r0, #0
   39440:	moveq	r0, r2
   39444:	orrne	r0, r2, #1
   39448:	cmp	ip, #1
   3944c:	bne	39534 <flatcc_builder_end_buffer@@Base+0x120>
   39450:	ldrh	r2, [r4, #132]	; 0x84
   39454:	mov	r3, r1
   39458:	add	r1, r4, #168	; 0xa8
   3945c:	ldrh	ip, [r4, #128]	; 0x80
   39460:	cmp	r2, ip
   39464:	movhi	ip, r2
   39468:	strhhi	r2, [r4, #128]	; 0x80
   3946c:	str	ip, [sp]
   39470:	str	r0, [sp, #4]
   39474:	mov	r0, r4
   39478:	bl	38f88 <flatcc_builder_create_buffer@@Base>
   3947c:	subs	r5, r0, #0
   39480:	beq	3951c <flatcc_builder_end_buffer@@Base+0x108>
   39484:	mov	r1, #0
   39488:	ldr	r0, [r4, #16]
   3948c:	ldr	r3, [r4, #32]
   39490:	ldr	r2, [r4, #20]
   39494:	ldrh	lr, [r3, #32]
   39498:	ldr	ip, [r3, #16]
   3949c:	ldr	r6, [r3, #20]
   394a0:	ldr	r3, [r3, #28]
   394a4:	str	r6, [r4, #144]	; 0x90
   394a8:	strh	lr, [r4, #164]	; 0xa4
   394ac:	str	r3, [r4, #152]	; 0x98
   394b0:	str	ip, [r4, #168]	; 0xa8
   394b4:	bl	13f70 <memset@plt>
   394b8:	ldr	r3, [r4, #32]
   394bc:	ldr	r0, [r4, #60]	; 0x3c
   394c0:	ldr	r2, [r4, #64]	; 0x40
   394c4:	ldr	ip, [r3]
   394c8:	ldmib	r3, {r1, lr}
   394cc:	add	r0, r0, ip
   394d0:	sub	r2, r2, ip
   394d4:	str	r0, [r4, #16]
   394d8:	cmp	r2, r1
   394dc:	ldrh	r0, [r4, #128]	; 0x80
   394e0:	movcs	r2, r1
   394e4:	str	lr, [r4, #20]
   394e8:	str	ip, [r4, #28]
   394ec:	ldrh	ip, [r4, #130]	; 0x82
   394f0:	str	r2, [r4, #24]
   394f4:	ldr	r2, [r4, #156]	; 0x9c
   394f8:	str	r1, [r3, #4]
   394fc:	cmp	r0, ip
   39500:	sub	r0, r3, #36	; 0x24
   39504:	strhcc	ip, [r4, #128]	; 0x80
   39508:	ldrh	r1, [r3, #12]
   3950c:	sub	r3, r2, #1
   39510:	str	r0, [r4, #32]
   39514:	strh	r1, [r4, #130]	; 0x82
   39518:	str	r3, [r4, #156]	; 0x9c
   3951c:	mov	r0, r5
   39520:	add	sp, sp, #8
   39524:	ldrd	r4, [sp]
   39528:	ldr	r6, [sp, #8]
   3952c:	add	sp, sp, #12
   39530:	pop	{pc}		; (ldr pc, [sp], #4)
   39534:	ldr	r3, [pc, #28]	; 39558 <flatcc_builder_end_buffer@@Base+0x144>
   39538:	movw	r2, #838	; 0x346
   3953c:	ldr	r1, [pc, #24]	; 3955c <flatcc_builder_end_buffer@@Base+0x148>
   39540:	ldr	r0, [pc, #24]	; 39560 <flatcc_builder_end_buffer@@Base+0x14c>
   39544:	add	r3, pc, r3
   39548:	add	r3, r3, #268	; 0x10c
   3954c:	add	r1, pc, r1
   39550:	add	r0, pc, r0
   39554:	bl	1400c <__assert_fail@plt>
   39558:	andeq	r0, r2, r4, asr #17
   3955c:	andeq	r1, r2, ip
   39560:	andeq	r1, r2, r0, lsl #2

00039564 <flatcc_builder_start_struct@@Base>:
   39564:	strd	r4, [sp, #-16]!
   39568:	mov	r5, r1
   3956c:	mov	r1, r2
   39570:	mov	r4, r0
   39574:	str	r6, [sp, #8]
   39578:	str	lr, [sp, #12]
   3957c:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   39580:	cmp	r0, #0
   39584:	bne	3960c <flatcc_builder_start_struct@@Base+0xa8>
   39588:	ldr	r6, [r4, #20]
   3958c:	mov	ip, #2
   39590:	ldr	r2, [r4, #28]
   39594:	ldr	r3, [r4, #64]	; 0x40
   39598:	add	r5, r5, r6
   3959c:	ldr	r0, [r4, #60]	; 0x3c
   395a0:	ldr	r1, [r4, #32]
   395a4:	sub	r3, r3, r2
   395a8:	cmn	r3, #4
   395ac:	add	r0, r0, r2
   395b0:	mvnhi	r2, #3
   395b4:	movhi	r3, r2
   395b8:	strh	ip, [r1, #14]
   395bc:	strhi	r2, [r4, #24]
   395c0:	mvn	r2, #3
   395c4:	strls	r3, [r4, #24]
   395c8:	cmp	r5, r3
   395cc:	str	r0, [r4, #16]
   395d0:	str	r2, [r1, #4]
   395d4:	str	r5, [r4, #20]
   395d8:	bcs	395f0 <flatcc_builder_start_struct@@Base+0x8c>
   395dc:	add	r0, r0, r6
   395e0:	ldrd	r4, [sp]
   395e4:	ldr	r6, [sp, #8]
   395e8:	add	sp, sp, #12
   395ec:	pop	{pc}		; (ldr pc, [sp], #4)
   395f0:	add	r1, r5, #1
   395f4:	mov	r0, r4
   395f8:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   395fc:	cmp	r0, #0
   39600:	bne	3960c <flatcc_builder_start_struct@@Base+0xa8>
   39604:	ldr	r0, [r4, #16]
   39608:	b	395dc <flatcc_builder_start_struct@@Base+0x78>
   3960c:	ldrd	r4, [sp]
   39610:	mov	r0, #0
   39614:	ldr	r6, [sp, #8]
   39618:	add	sp, sp, #12
   3961c:	pop	{pc}		; (ldr pc, [sp], #4)

00039620 <flatcc_builder_struct_edit@@Base>:
   39620:	ldr	r0, [r0, #16]
   39624:	bx	lr

00039628 <flatcc_builder_end_struct@@Base>:
   39628:	ldr	r3, [r0, #32]
   3962c:	strd	r4, [sp, #-16]!
   39630:	ldrh	r3, [r3, #14]
   39634:	str	r6, [sp, #8]
   39638:	str	lr, [sp, #12]
   3963c:	cmp	r3, #2
   39640:	bne	396e8 <flatcc_builder_end_struct@@Base+0xc0>
   39644:	ldrh	r3, [r0, #130]	; 0x82
   39648:	mov	r4, r0
   3964c:	ldr	r1, [r0, #16]
   39650:	ldr	r2, [r0, #20]
   39654:	bl	391d4 <flatcc_builder_create_struct@@Base>
   39658:	subs	r5, r0, #0
   3965c:	beq	396d4 <flatcc_builder_end_struct@@Base+0xac>
   39660:	mov	r1, #0
   39664:	ldr	r0, [r4, #16]
   39668:	ldr	r2, [r4, #20]
   3966c:	bl	13f70 <memset@plt>
   39670:	ldr	r3, [r4, #32]
   39674:	ldr	r0, [r4, #60]	; 0x3c
   39678:	ldr	r2, [r4, #64]	; 0x40
   3967c:	ldr	ip, [r3]
   39680:	ldmib	r3, {r1, lr}
   39684:	add	r0, r0, ip
   39688:	sub	r2, r2, ip
   3968c:	str	r0, [r4, #16]
   39690:	cmp	r2, r1
   39694:	ldrh	r0, [r4, #128]	; 0x80
   39698:	movcs	r2, r1
   3969c:	str	lr, [r4, #20]
   396a0:	str	ip, [r4, #28]
   396a4:	ldrh	ip, [r4, #130]	; 0x82
   396a8:	str	r2, [r4, #24]
   396ac:	ldr	r2, [r4, #156]	; 0x9c
   396b0:	str	r1, [r3, #4]
   396b4:	cmp	r0, ip
   396b8:	sub	r0, r3, #36	; 0x24
   396bc:	strhcc	ip, [r4, #128]	; 0x80
   396c0:	ldrh	r1, [r3, #12]
   396c4:	sub	r3, r2, #1
   396c8:	str	r0, [r4, #32]
   396cc:	strh	r1, [r4, #130]	; 0x82
   396d0:	str	r3, [r4, #156]	; 0x9c
   396d4:	mov	r0, r5
   396d8:	ldrd	r4, [sp]
   396dc:	ldr	r6, [sp, #8]
   396e0:	add	sp, sp, #12
   396e4:	pop	{pc}		; (ldr pc, [sp], #4)
   396e8:	ldr	r3, [pc, #28]	; 3970c <flatcc_builder_end_struct@@Base+0xe4>
   396ec:	mov	r2, #872	; 0x368
   396f0:	ldr	r1, [pc, #24]	; 39710 <flatcc_builder_end_struct@@Base+0xe8>
   396f4:	ldr	r0, [pc, #24]	; 39714 <flatcc_builder_end_struct@@Base+0xec>
   396f8:	add	r3, pc, r3
   396fc:	add	r3, r3, #296	; 0x128
   39700:	add	r1, pc, r1
   39704:	add	r0, pc, r0
   39708:	bl	1400c <__assert_fail@plt>
   3970c:	andeq	r0, r2, r0, lsl r7
   39710:	andeq	r0, r2, r8, asr lr
   39714:	andeq	r0, r2, r8, ror pc

00039718 <flatcc_builder_extend_vector@@Base>:
   39718:	ldr	r2, [r0, #32]
   3971c:	strd	r4, [sp, #-16]!
   39720:	ldr	r3, [r2, #20]
   39724:	ldr	ip, [r2, #24]
   39728:	str	r6, [sp, #8]
   3972c:	str	lr, [sp, #12]
   39730:	adds	r3, r1, r3
   39734:	movcs	r4, #1
   39738:	movcc	r4, #0
   3973c:	cmp	ip, r3
   39740:	orrcc	r4, r4, #1
   39744:	cmp	r4, #0
   39748:	bne	397a4 <flatcc_builder_extend_vector@@Base+0x8c>
   3974c:	ldr	ip, [r2, #16]
   39750:	mov	r5, r0
   39754:	ldr	r6, [r0, #20]
   39758:	str	r3, [r2, #20]
   3975c:	ldr	r3, [r0, #24]
   39760:	mla	r1, ip, r1, r6
   39764:	cmp	r1, r3
   39768:	str	r1, [r0, #20]
   3976c:	bcs	39788 <flatcc_builder_extend_vector@@Base+0x70>
   39770:	ldr	r0, [r5, #16]
   39774:	add	r0, r0, r6
   39778:	ldrd	r4, [sp]
   3977c:	ldr	r6, [sp, #8]
   39780:	add	sp, sp, #12
   39784:	pop	{pc}		; (ldr pc, [sp], #4)
   39788:	add	r1, r1, #1
   3978c:	mvn	r2, #3
   39790:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39794:	cmp	r0, #0
   39798:	beq	39770 <flatcc_builder_extend_vector@@Base+0x58>
   3979c:	mov	r0, r4
   397a0:	b	39778 <flatcc_builder_extend_vector@@Base+0x60>
   397a4:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>

000397a8 <flatcc_builder_vector_push@@Base>:
   397a8:	ldr	r3, [r0, #32]
   397ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   397b0:	ldrh	r2, [r3, #14]
   397b4:	strd	r6, [sp, #8]
   397b8:	str	r8, [sp, #16]
   397bc:	str	lr, [sp, #20]
   397c0:	cmp	r2, #4
   397c4:	bne	39858 <flatcc_builder_vector_push@@Base+0xb0>
   397c8:	mov	r7, r1
   397cc:	ldr	r2, [r3, #20]
   397d0:	ldr	r1, [r3, #24]
   397d4:	cmp	r2, r1
   397d8:	bhi	3987c <flatcc_builder_vector_push@@Base+0xd4>
   397dc:	add	r2, r2, #1
   397e0:	ldr	r6, [r3, #16]
   397e4:	mov	r4, r0
   397e8:	ldr	r5, [r0, #20]
   397ec:	str	r2, [r3, #20]
   397f0:	ldr	r3, [r0, #24]
   397f4:	add	r1, r6, r5
   397f8:	cmp	r1, r3
   397fc:	str	r1, [r0, #20]
   39800:	bcs	3983c <flatcc_builder_vector_push@@Base+0x94>
   39804:	ldr	r3, [r4, #16]
   39808:	adds	r3, r3, r5
   3980c:	beq	39824 <flatcc_builder_vector_push@@Base+0x7c>
   39810:	mov	r0, r3
   39814:	mov	r2, r6
   39818:	mov	r1, r7
   3981c:	bl	13eb0 <memcpy@plt>
   39820:	mov	r3, r0
   39824:	ldrd	r4, [sp]
   39828:	mov	r0, r3
   3982c:	ldrd	r6, [sp, #8]
   39830:	ldr	r8, [sp, #16]
   39834:	add	sp, sp, #20
   39838:	pop	{pc}		; (ldr pc, [sp], #4)
   3983c:	add	r1, r1, #1
   39840:	mvn	r2, #3
   39844:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39848:	cmp	r0, #0
   3984c:	beq	39804 <flatcc_builder_vector_push@@Base+0x5c>
   39850:	mov	r3, #0
   39854:	b	39824 <flatcc_builder_vector_push@@Base+0x7c>
   39858:	ldr	r3, [pc, #64]	; 398a0 <flatcc_builder_vector_push@@Base+0xf8>
   3985c:	movw	r2, #907	; 0x38b
   39860:	ldr	r1, [pc, #60]	; 398a4 <flatcc_builder_vector_push@@Base+0xfc>
   39864:	ldr	r0, [pc, #60]	; 398a8 <flatcc_builder_vector_push@@Base+0x100>
   39868:	add	r3, pc, r3
   3986c:	add	r3, r3, #324	; 0x144
   39870:	add	r1, pc, r1
   39874:	add	r0, pc, r0
   39878:	bl	1400c <__assert_fail@plt>
   3987c:	ldr	r3, [pc, #40]	; 398ac <flatcc_builder_vector_push@@Base+0x104>
   39880:	mov	r2, #908	; 0x38c
   39884:	ldr	r1, [pc, #36]	; 398b0 <flatcc_builder_vector_push@@Base+0x108>
   39888:	ldr	r0, [pc, #36]	; 398b4 <flatcc_builder_vector_push@@Base+0x10c>
   3988c:	add	r3, pc, r3
   39890:	add	r3, r3, #324	; 0x144
   39894:	add	r1, pc, r1
   39898:	add	r0, pc, r0
   3989c:	bl	1400c <__assert_fail@plt>
   398a0:	andeq	r0, r2, r0, lsr #11
   398a4:	andeq	r0, r2, r8, ror #25
   398a8:	andeq	r0, r2, r4, lsr lr
   398ac:	andeq	r0, r2, ip, ror r5
   398b0:	andeq	r0, r2, r4, asr #25
   398b4:	andeq	r0, r2, ip, lsr lr

000398b8 <flatcc_builder_append_vector@@Base>:
   398b8:	ldr	ip, [r0, #32]
   398bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   398c0:	ldrh	r3, [ip, #14]
   398c4:	strd	r6, [sp, #8]
   398c8:	str	r8, [sp, #16]
   398cc:	str	lr, [sp, #20]
   398d0:	cmp	r3, #4
   398d4:	bne	39980 <flatcc_builder_append_vector@@Base+0xc8>
   398d8:	mov	r6, r1
   398dc:	ldr	r1, [ip, #20]
   398e0:	ldr	r4, [ip, #24]
   398e4:	adds	r1, r2, r1
   398e8:	movcs	r3, #1
   398ec:	movcc	r3, #0
   398f0:	cmp	r4, r1
   398f4:	movcs	r4, r3
   398f8:	orrcc	r4, r3, #1
   398fc:	cmp	r4, #0
   39900:	bne	399a4 <flatcc_builder_append_vector@@Base+0xec>
   39904:	ldr	r7, [ip, #16]
   39908:	mov	r5, r0
   3990c:	ldr	r8, [r0, #20]
   39910:	ldr	r3, [r0, #24]
   39914:	mul	r7, r7, r2
   39918:	str	r1, [ip, #20]
   3991c:	add	r1, r7, r8
   39920:	cmp	r1, r3
   39924:	str	r1, [r0, #20]
   39928:	bcs	39964 <flatcc_builder_append_vector@@Base+0xac>
   3992c:	ldr	r3, [r5, #16]
   39930:	adds	r3, r3, r8
   39934:	beq	3994c <flatcc_builder_append_vector@@Base+0x94>
   39938:	mov	r0, r3
   3993c:	mov	r2, r7
   39940:	mov	r1, r6
   39944:	bl	13eb0 <memcpy@plt>
   39948:	mov	r3, r0
   3994c:	ldrd	r4, [sp]
   39950:	mov	r0, r3
   39954:	ldrd	r6, [sp, #8]
   39958:	ldr	r8, [sp, #16]
   3995c:	add	sp, sp, #20
   39960:	pop	{pc}		; (ldr pc, [sp], #4)
   39964:	add	r1, r1, #1
   39968:	mvn	r2, #3
   3996c:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39970:	cmp	r0, #0
   39974:	beq	3992c <flatcc_builder_append_vector@@Base+0x74>
   39978:	mov	r3, r4
   3997c:	b	3994c <flatcc_builder_append_vector@@Base+0x94>
   39980:	ldr	r3, [pc, #32]	; 399a8 <flatcc_builder_append_vector@@Base+0xf0>
   39984:	movw	r2, #915	; 0x393
   39988:	ldr	r1, [pc, #28]	; 399ac <flatcc_builder_append_vector@@Base+0xf4>
   3998c:	ldr	r0, [pc, #28]	; 399b0 <flatcc_builder_append_vector@@Base+0xf8>
   39990:	add	r3, pc, r3
   39994:	add	r3, r3, #352	; 0x160
   39998:	add	r1, pc, r1
   3999c:	add	r0, pc, r0
   399a0:	bl	1400c <__assert_fail@plt>
   399a4:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>
   399a8:	andeq	r0, r2, r8, ror r4
   399ac:	andeq	r0, r2, r0, asr #23
   399b0:	andeq	r0, r2, ip, lsl #26

000399b4 <flatcc_builder_extend_offset_vector@@Base>:
   399b4:	ldr	ip, [r0, #32]
   399b8:	strd	r4, [sp, #-16]!
   399bc:	ldr	r3, [ip, #20]
   399c0:	str	r6, [sp, #8]
   399c4:	str	lr, [sp, #12]
   399c8:	adds	r2, r1, r3
   399cc:	movcs	r3, #1
   399d0:	movcc	r3, #0
   399d4:	cmn	r2, #-1073741823	; 0xc0000001
   399d8:	movls	r4, #0
   399dc:	movhi	r4, #1
   399e0:	orrs	r4, r3, r4
   399e4:	bne	39a3c <flatcc_builder_extend_offset_vector@@Base+0x88>
   399e8:	ldr	r6, [r0, #20]
   399ec:	mov	r5, r0
   399f0:	ldr	r3, [r0, #24]
   399f4:	str	r2, [ip, #20]
   399f8:	add	r1, r6, r1, lsl #2
   399fc:	cmp	r1, r3
   39a00:	str	r1, [r0, #20]
   39a04:	bcs	39a20 <flatcc_builder_extend_offset_vector@@Base+0x6c>
   39a08:	ldr	r0, [r5, #16]
   39a0c:	add	r0, r0, r6
   39a10:	ldrd	r4, [sp]
   39a14:	ldr	r6, [sp, #8]
   39a18:	add	sp, sp, #12
   39a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   39a20:	add	r1, r1, #1
   39a24:	mvn	r2, #3
   39a28:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39a2c:	cmp	r0, #0
   39a30:	beq	39a08 <flatcc_builder_extend_offset_vector@@Base+0x54>
   39a34:	mov	r0, r4
   39a38:	b	39a10 <flatcc_builder_extend_offset_vector@@Base+0x5c>
   39a3c:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>

00039a40 <flatcc_builder_offset_vector_push@@Base>:
   39a40:	ldr	r2, [r0, #32]
   39a44:	strd	r4, [sp, #-16]!
   39a48:	ldrh	r3, [r2, #14]
   39a4c:	str	r6, [sp, #8]
   39a50:	str	lr, [sp, #12]
   39a54:	cmp	r3, #5
   39a58:	bne	39ad4 <flatcc_builder_offset_vector_push@@Base+0x94>
   39a5c:	ldr	r3, [r2, #20]
   39a60:	cmn	r3, #-1073741823	; 0xc0000001
   39a64:	beq	39ac0 <flatcc_builder_offset_vector_push@@Base+0x80>
   39a68:	ldr	r5, [r0, #20]
   39a6c:	mov	r6, r1
   39a70:	add	r3, r3, #1
   39a74:	mov	r4, r0
   39a78:	ldr	r1, [r0, #24]
   39a7c:	str	r3, [r2, #20]
   39a80:	add	r3, r5, #4
   39a84:	cmp	r3, r1
   39a88:	str	r3, [r0, #20]
   39a8c:	bcs	39aac <flatcc_builder_offset_vector_push@@Base+0x6c>
   39a90:	ldr	r3, [r4, #16]
   39a94:	adds	r0, r3, r5
   39a98:	strne	r6, [r3, r5]
   39a9c:	ldrd	r4, [sp]
   39aa0:	ldr	r6, [sp, #8]
   39aa4:	add	sp, sp, #12
   39aa8:	pop	{pc}		; (ldr pc, [sp], #4)
   39aac:	mvn	r2, #3
   39ab0:	add	r1, r5, #5
   39ab4:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39ab8:	cmp	r0, #0
   39abc:	beq	39a90 <flatcc_builder_offset_vector_push@@Base+0x50>
   39ac0:	ldrd	r4, [sp]
   39ac4:	mov	r0, #0
   39ac8:	ldr	r6, [sp, #8]
   39acc:	add	sp, sp, #12
   39ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   39ad4:	ldr	r3, [pc, #28]	; 39af8 <flatcc_builder_offset_vector_push@@Base+0xb8>
   39ad8:	movw	r2, #934	; 0x3a6
   39adc:	ldr	r1, [pc, #24]	; 39afc <flatcc_builder_offset_vector_push@@Base+0xbc>
   39ae0:	ldr	r0, [pc, #24]	; 39b00 <flatcc_builder_offset_vector_push@@Base+0xc0>
   39ae4:	add	r3, pc, r3
   39ae8:	add	r3, r3, #384	; 0x180
   39aec:	add	r1, pc, r1
   39af0:	add	r0, pc, r0
   39af4:	bl	1400c <__assert_fail@plt>
   39af8:	andeq	r0, r2, r4, lsr #6
   39afc:	andeq	r0, r2, ip, ror #20
   39b00:	andeq	r0, r2, r4, lsr #24

00039b04 <flatcc_builder_append_offset_vector@@Base>:
   39b04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   39b08:	mov	r4, r1
   39b0c:	ldr	r1, [r0, #32]
   39b10:	ldrh	r3, [r1, #14]
   39b14:	strd	r6, [sp, #8]
   39b18:	str	r8, [sp, #16]
   39b1c:	str	lr, [sp, #20]
   39b20:	cmp	r3, #5
   39b24:	bne	39bc4 <flatcc_builder_append_offset_vector@@Base+0xc0>
   39b28:	ldr	r3, [r1, #20]
   39b2c:	adds	r3, r2, r3
   39b30:	movcs	lr, #1
   39b34:	movcc	lr, #0
   39b38:	cmn	r3, #-1073741823	; 0xc0000001
   39b3c:	movls	ip, #0
   39b40:	movhi	ip, #1
   39b44:	orrs	r8, lr, ip
   39b48:	bne	39be8 <flatcc_builder_append_offset_vector@@Base+0xe4>
   39b4c:	ldr	r7, [r0, #20]
   39b50:	lsl	r6, r2, #2
   39b54:	mov	r5, r0
   39b58:	str	r3, [r1, #20]
   39b5c:	ldr	r3, [r0, #24]
   39b60:	add	r1, r6, r7
   39b64:	cmp	r1, r3
   39b68:	str	r1, [r0, #20]
   39b6c:	bcs	39ba8 <flatcc_builder_append_offset_vector@@Base+0xa4>
   39b70:	ldr	r3, [r5, #16]
   39b74:	adds	r3, r3, r7
   39b78:	beq	39b90 <flatcc_builder_append_offset_vector@@Base+0x8c>
   39b7c:	mov	r0, r3
   39b80:	mov	r2, r6
   39b84:	mov	r1, r4
   39b88:	bl	13eb0 <memcpy@plt>
   39b8c:	mov	r3, r0
   39b90:	ldrd	r4, [sp]
   39b94:	mov	r0, r3
   39b98:	ldrd	r6, [sp, #8]
   39b9c:	ldr	r8, [sp, #16]
   39ba0:	add	sp, sp, #20
   39ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   39ba8:	add	r1, r1, #1
   39bac:	mvn	r2, #3
   39bb0:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39bb4:	cmp	r0, #0
   39bb8:	beq	39b70 <flatcc_builder_append_offset_vector@@Base+0x6c>
   39bbc:	mov	r3, r8
   39bc0:	b	39b90 <flatcc_builder_append_offset_vector@@Base+0x8c>
   39bc4:	ldr	r3, [pc, #32]	; 39bec <flatcc_builder_append_offset_vector@@Base+0xe8>
   39bc8:	mov	r2, #948	; 0x3b4
   39bcc:	ldr	r1, [pc, #28]	; 39bf0 <flatcc_builder_append_offset_vector@@Base+0xec>
   39bd0:	ldr	r0, [pc, #28]	; 39bf4 <flatcc_builder_append_offset_vector@@Base+0xf0>
   39bd4:	add	r3, pc, r3
   39bd8:	add	r3, r3, #420	; 0x1a4
   39bdc:	add	r1, pc, r1
   39be0:	add	r0, pc, r0
   39be4:	bl	1400c <__assert_fail@plt>
   39be8:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>
   39bec:	andeq	r0, r2, r4, lsr r2
   39bf0:	andeq	r0, r2, ip, ror r9
   39bf4:	andeq	r0, r2, r4, lsr fp

00039bf8 <flatcc_builder_extend_string@@Base>:
   39bf8:	ldr	r2, [r0, #32]
   39bfc:	strd	r4, [sp, #-16]!
   39c00:	ldrh	r3, [r2, #14]
   39c04:	str	r6, [sp, #8]
   39c08:	str	lr, [sp, #12]
   39c0c:	cmp	r3, #6
   39c10:	bne	39c78 <flatcc_builder_extend_string@@Base+0x80>
   39c14:	ldr	r3, [r2, #20]
   39c18:	adds	r3, r1, r3
   39c1c:	bcs	39c74 <flatcc_builder_extend_string@@Base+0x7c>
   39c20:	ldr	r5, [r0, #20]
   39c24:	mov	r4, r0
   39c28:	str	r3, [r2, #20]
   39c2c:	ldr	r3, [r0, #24]
   39c30:	add	r1, r1, r5
   39c34:	cmp	r1, r3
   39c38:	str	r1, [r0, #20]
   39c3c:	bcs	39c58 <flatcc_builder_extend_string@@Base+0x60>
   39c40:	ldr	r0, [r4, #16]
   39c44:	add	r0, r0, r5
   39c48:	ldrd	r4, [sp]
   39c4c:	ldr	r6, [sp, #8]
   39c50:	add	sp, sp, #12
   39c54:	pop	{pc}		; (ldr pc, [sp], #4)
   39c58:	add	r1, r1, #1
   39c5c:	mvn	r2, #3
   39c60:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39c64:	cmp	r0, #0
   39c68:	beq	39c40 <flatcc_builder_extend_string@@Base+0x48>
   39c6c:	mov	r0, #0
   39c70:	b	39c48 <flatcc_builder_extend_string@@Base+0x50>
   39c74:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>
   39c78:	ldr	r3, [pc, #28]	; 39c9c <flatcc_builder_extend_string@@Base+0xa4>
   39c7c:	movw	r2, #957	; 0x3bd
   39c80:	ldr	r1, [pc, #24]	; 39ca0 <flatcc_builder_extend_string@@Base+0xa8>
   39c84:	ldr	r0, [pc, #24]	; 39ca4 <flatcc_builder_extend_string@@Base+0xac>
   39c88:	add	r3, pc, r3
   39c8c:	add	r3, r3, #456	; 0x1c8
   39c90:	add	r1, pc, r1
   39c94:	add	r0, pc, r0
   39c98:	bl	1400c <__assert_fail@plt>
   39c9c:	andeq	r0, r2, r0, lsl #3
   39ca0:	andeq	r0, r2, r8, asr #17
   39ca4:			; <UNDEFINED> instruction: 0x00020ab4

00039ca8 <flatcc_builder_append_string@@Base>:
   39ca8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   39cac:	strd	r6, [sp, #8]
   39cb0:	mov	r7, r1
   39cb4:	ldr	r1, [r0, #32]
   39cb8:	str	r8, [sp, #16]
   39cbc:	str	lr, [sp, #20]
   39cc0:	ldrh	r3, [r1, #14]
   39cc4:	cmp	r3, #6
   39cc8:	bne	39d54 <flatcc_builder_append_string@@Base+0xac>
   39ccc:	ldr	r3, [r1, #20]
   39cd0:	mov	r5, r2
   39cd4:	adds	r3, r2, r3
   39cd8:	bcs	39d50 <flatcc_builder_append_string@@Base+0xa8>
   39cdc:	ldr	r6, [r0, #20]
   39ce0:	mov	r4, r0
   39ce4:	str	r3, [r1, #20]
   39ce8:	ldr	r3, [r0, #24]
   39cec:	add	r1, r2, r6
   39cf0:	cmp	r1, r3
   39cf4:	str	r1, [r0, #20]
   39cf8:	bcs	39d34 <flatcc_builder_append_string@@Base+0x8c>
   39cfc:	ldr	r3, [r4, #16]
   39d00:	adds	r3, r3, r6
   39d04:	beq	39d1c <flatcc_builder_append_string@@Base+0x74>
   39d08:	mov	r0, r3
   39d0c:	mov	r2, r5
   39d10:	mov	r1, r7
   39d14:	bl	13eb0 <memcpy@plt>
   39d18:	mov	r3, r0
   39d1c:	ldrd	r4, [sp]
   39d20:	mov	r0, r3
   39d24:	ldrd	r6, [sp, #8]
   39d28:	ldr	r8, [sp, #16]
   39d2c:	add	sp, sp, #20
   39d30:	pop	{pc}		; (ldr pc, [sp], #4)
   39d34:	add	r1, r1, #1
   39d38:	mvn	r2, #3
   39d3c:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   39d40:	cmp	r0, #0
   39d44:	beq	39cfc <flatcc_builder_append_string@@Base+0x54>
   39d48:	mov	r3, #0
   39d4c:	b	39d1c <flatcc_builder_append_string@@Base+0x74>
   39d50:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>
   39d54:	ldr	r3, [pc, #28]	; 39d78 <flatcc_builder_append_string@@Base+0xd0>
   39d58:	movw	r2, #966	; 0x3c6
   39d5c:	ldr	r1, [pc, #24]	; 39d7c <flatcc_builder_append_string@@Base+0xd4>
   39d60:	ldr	r0, [pc, #24]	; 39d80 <flatcc_builder_append_string@@Base+0xd8>
   39d64:	add	r3, pc, r3
   39d68:	add	r3, r3, #488	; 0x1e8
   39d6c:	add	r1, pc, r1
   39d70:	add	r0, pc, r0
   39d74:	bl	1400c <__assert_fail@plt>
   39d78:	andeq	r0, r2, r4, lsr #1
   39d7c:	andeq	r0, r2, ip, ror #15
   39d80:	ldrdeq	r0, [r2], -r8

00039d84 <flatcc_builder_append_string_str@@Base>:
   39d84:	strd	r4, [sp, #-16]!
   39d88:	mov	r5, r0
   39d8c:	mov	r0, r1
   39d90:	mov	r4, r1
   39d94:	str	r6, [sp, #8]
   39d98:	str	lr, [sp, #12]
   39d9c:	bl	13f4c <strlen@plt>
   39da0:	mov	r2, r0
   39da4:	mov	r1, r4
   39da8:	ldr	r6, [sp, #8]
   39dac:	mov	r0, r5
   39db0:	ldrd	r4, [sp]
   39db4:	ldr	lr, [sp, #12]
   39db8:	add	sp, sp, #16
   39dbc:	b	39ca8 <flatcc_builder_append_string@@Base>

00039dc0 <flatcc_builder_append_string_strn@@Base>:
   39dc0:	strd	r4, [sp, #-16]!
   39dc4:	mov	r4, r1
   39dc8:	mov	r1, #0
   39dcc:	str	r6, [sp, #8]
   39dd0:	mov	r6, r0
   39dd4:	mov	r0, r4
   39dd8:	mov	r5, r2
   39ddc:	str	lr, [sp, #12]
   39de0:	bl	13f94 <memchr@plt>
   39de4:	cmp	r0, #0
   39de8:	mov	r1, r4
   39dec:	ldr	lr, [sp, #12]
   39df0:	subne	r5, r0, r4
   39df4:	mov	r0, r6
   39df8:	mov	r2, r5
   39dfc:	ldrd	r4, [sp]
   39e00:	ldr	r6, [sp, #8]
   39e04:	add	sp, sp, #16
   39e08:	b	39ca8 <flatcc_builder_append_string@@Base>

00039e0c <flatcc_builder_truncate_vector@@Base>:
   39e0c:	mov	r3, r0
   39e10:	ldr	r0, [r0, #32]
   39e14:	str	r4, [sp, #-8]!
   39e18:	ldrh	r2, [r0, #14]
   39e1c:	str	lr, [sp, #4]
   39e20:	cmp	r2, #4
   39e24:	bne	39e74 <flatcc_builder_truncate_vector@@Base+0x68>
   39e28:	mov	lr, r1
   39e2c:	ldr	r1, [r0, #20]
   39e30:	cmp	r1, lr
   39e34:	bcc	39e98 <flatcc_builder_truncate_vector@@Base+0x8c>
   39e38:	ldr	r2, [r0, #16]
   39e3c:	sub	ip, r1, lr
   39e40:	mov	r1, #0
   39e44:	str	ip, [r0, #20]
   39e48:	ldr	r0, [r3, #16]
   39e4c:	ldr	ip, [r3, #20]
   39e50:	mul	r2, r2, lr
   39e54:	sub	ip, ip, r2
   39e58:	add	r0, r0, ip
   39e5c:	str	ip, [r3, #20]
   39e60:	bl	13f70 <memset@plt>
   39e64:	ldr	r4, [sp]
   39e68:	add	sp, sp, #4
   39e6c:	mov	r0, #0
   39e70:	pop	{pc}		; (ldr pc, [sp], #4)
   39e74:	ldr	r3, [pc, #64]	; 39ebc <flatcc_builder_truncate_vector@@Base+0xb0>
   39e78:	movw	r2, #985	; 0x3d9
   39e7c:	ldr	r1, [pc, #60]	; 39ec0 <flatcc_builder_truncate_vector@@Base+0xb4>
   39e80:	ldr	r0, [pc, #60]	; 39ec4 <flatcc_builder_truncate_vector@@Base+0xb8>
   39e84:	add	r3, pc, r3
   39e88:	add	r3, r3, #520	; 0x208
   39e8c:	add	r1, pc, r1
   39e90:	add	r0, pc, r0
   39e94:	bl	1400c <__assert_fail@plt>
   39e98:	ldr	r3, [pc, #40]	; 39ec8 <flatcc_builder_truncate_vector@@Base+0xbc>
   39e9c:	movw	r2, #986	; 0x3da
   39ea0:	ldr	r1, [pc, #36]	; 39ecc <flatcc_builder_truncate_vector@@Base+0xc0>
   39ea4:	ldr	r0, [pc, #36]	; 39ed0 <flatcc_builder_truncate_vector@@Base+0xc4>
   39ea8:	add	r3, pc, r3
   39eac:	add	r3, r3, #520	; 0x208
   39eb0:	add	r1, pc, r1
   39eb4:	add	r0, pc, r0
   39eb8:	bl	1400c <__assert_fail@plt>
   39ebc:	andeq	pc, r1, r4, lsl #31
   39ec0:	andeq	r0, r2, ip, asr #13
   39ec4:	andeq	r0, r2, r8, lsl r8
   39ec8:	andeq	pc, r1, r0, ror #30
   39ecc:	andeq	r0, r2, r8, lsr #13
   39ed0:	andeq	r0, r2, r0, asr #17

00039ed4 <flatcc_builder_truncate_offset_vector@@Base>:
   39ed4:	mov	r3, r0
   39ed8:	ldr	r0, [r0, #32]
   39edc:	str	r4, [sp, #-8]!
   39ee0:	ldrh	r2, [r0, #14]
   39ee4:	str	lr, [sp, #4]
   39ee8:	cmp	r2, #5
   39eec:	bne	39f3c <flatcc_builder_truncate_offset_vector@@Base+0x68>
   39ef0:	mov	lr, r1
   39ef4:	ldr	r1, [r0, #20]
   39ef8:	cmp	r1, lr
   39efc:	bcc	39f60 <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   39f00:	ldr	r2, [r0, #16]
   39f04:	sub	ip, r1, lr
   39f08:	mov	r1, #0
   39f0c:	str	ip, [r0, #20]
   39f10:	ldr	r0, [r3, #16]
   39f14:	ldr	ip, [r3, #20]
   39f18:	mul	r2, r2, lr
   39f1c:	sub	ip, ip, r2
   39f20:	add	r0, r0, ip
   39f24:	str	ip, [r3, #20]
   39f28:	bl	13f70 <memset@plt>
   39f2c:	ldr	r4, [sp]
   39f30:	add	sp, sp, #4
   39f34:	mov	r0, #0
   39f38:	pop	{pc}		; (ldr pc, [sp], #4)
   39f3c:	ldr	r3, [pc, #64]	; 39f84 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   39f40:	movw	r2, #994	; 0x3e2
   39f44:	ldr	r1, [pc, #60]	; 39f88 <flatcc_builder_truncate_offset_vector@@Base+0xb4>
   39f48:	ldr	r0, [pc, #60]	; 39f8c <flatcc_builder_truncate_offset_vector@@Base+0xb8>
   39f4c:	add	r3, pc, r3
   39f50:	add	r3, r3, #552	; 0x228
   39f54:	add	r1, pc, r1
   39f58:	add	r0, pc, r0
   39f5c:	bl	1400c <__assert_fail@plt>
   39f60:	ldr	r3, [pc, #40]	; 39f90 <flatcc_builder_truncate_offset_vector@@Base+0xbc>
   39f64:	movw	r2, #995	; 0x3e3
   39f68:	ldr	r1, [pc, #36]	; 39f94 <flatcc_builder_truncate_offset_vector@@Base+0xc0>
   39f6c:	ldr	r0, [pc, #36]	; 39f98 <flatcc_builder_truncate_offset_vector@@Base+0xc4>
   39f70:	add	r3, pc, r3
   39f74:	add	r3, r3, #552	; 0x228
   39f78:	add	r1, pc, r1
   39f7c:	add	r0, pc, r0
   39f80:	bl	1400c <__assert_fail@plt>
   39f84:			; <UNDEFINED> instruction: 0x0001febc
   39f88:	andeq	r0, r2, r4, lsl #12
   39f8c:			; <UNDEFINED> instruction: 0x000207bc
   39f90:	muleq	r1, r8, lr
   39f94:	andeq	r0, r2, r0, ror #11
   39f98:	andeq	r0, r2, ip, lsl r8

00039f9c <flatcc_builder_truncate_string@@Base>:
   39f9c:	str	r4, [sp, #-8]!
   39fa0:	str	lr, [sp, #4]
   39fa4:	ldr	lr, [r0, #32]
   39fa8:	ldrh	r2, [lr, #14]
   39fac:	cmp	r2, #6
   39fb0:	bne	3a000 <flatcc_builder_truncate_string@@Base+0x64>
   39fb4:	ldr	r2, [lr, #20]
   39fb8:	mov	ip, r1
   39fbc:	cmp	r2, r1
   39fc0:	bcc	3a024 <flatcc_builder_truncate_string@@Base+0x88>
   39fc4:	sub	r1, r2, r1
   39fc8:	mov	r3, r0
   39fcc:	ldr	r0, [r0, #16]
   39fd0:	mov	r2, ip
   39fd4:	str	r1, [lr, #20]
   39fd8:	mov	r1, #0
   39fdc:	ldr	lr, [r3, #20]
   39fe0:	sub	ip, lr, ip
   39fe4:	add	r0, r0, ip
   39fe8:	str	ip, [r3, #20]
   39fec:	bl	13f70 <memset@plt>
   39ff0:	ldr	r4, [sp]
   39ff4:	add	sp, sp, #4
   39ff8:	mov	r0, #0
   39ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   3a000:	ldr	r3, [pc, #64]	; 3a048 <flatcc_builder_truncate_string@@Base+0xac>
   3a004:	movw	r2, #1003	; 0x3eb
   3a008:	ldr	r1, [pc, #60]	; 3a04c <flatcc_builder_truncate_string@@Base+0xb0>
   3a00c:	ldr	r0, [pc, #60]	; 3a050 <flatcc_builder_truncate_string@@Base+0xb4>
   3a010:	add	r3, pc, r3
   3a014:	add	r3, r3, #592	; 0x250
   3a018:	add	r1, pc, r1
   3a01c:	add	r0, pc, r0
   3a020:	bl	1400c <__assert_fail@plt>
   3a024:	ldr	r3, [pc, #40]	; 3a054 <flatcc_builder_truncate_string@@Base+0xb8>
   3a028:	mov	r2, #1004	; 0x3ec
   3a02c:	ldr	r1, [pc, #36]	; 3a058 <flatcc_builder_truncate_string@@Base+0xbc>
   3a030:	ldr	r0, [pc, #36]	; 3a05c <flatcc_builder_truncate_string@@Base+0xc0>
   3a034:	add	r3, pc, r3
   3a038:	add	r3, r3, #592	; 0x250
   3a03c:	add	r1, pc, r1
   3a040:	add	r0, pc, r0
   3a044:	bl	1400c <__assert_fail@plt>
   3a048:	strdeq	pc, [r1], -r8
   3a04c:	andeq	r0, r2, r0, asr #10
   3a050:	andeq	r0, r2, ip, lsr #14
   3a054:	ldrdeq	pc, [r1], -r4
   3a058:	andeq	r0, r2, ip, lsl r5
   3a05c:	muleq	r2, r4, r7

0003a060 <flatcc_builder_start_vector@@Base>:
   3a060:	cmp	r2, #4
   3a064:	strd	r4, [sp, #-16]!
   3a068:	mov	r5, r1
   3a06c:	movcs	r1, r2
   3a070:	movcc	r1, #4
   3a074:	str	r6, [sp, #8]
   3a078:	mov	r4, r0
   3a07c:	mov	r6, r3
   3a080:	str	lr, [sp, #12]
   3a084:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   3a088:	cmp	r0, #0
   3a08c:	bne	3a0e8 <flatcc_builder_start_vector@@Base+0x88>
   3a090:	ldr	r3, [r4, #28]
   3a094:	mov	lr, #4
   3a098:	ldr	r2, [r4, #32]
   3a09c:	ldr	r1, [r4, #64]	; 0x40
   3a0a0:	ldr	ip, [r4, #60]	; 0x3c
   3a0a4:	strh	lr, [r2, #14]
   3a0a8:	str	r5, [r2, #16]
   3a0ac:	sub	r1, r1, r3
   3a0b0:	str	r0, [r2, #20]
   3a0b4:	cmn	r1, #4
   3a0b8:	str	r6, [r2, #24]
   3a0bc:	add	ip, ip, r3
   3a0c0:	mvnhi	r3, #3
   3a0c4:	strls	r1, [r4, #24]
   3a0c8:	strhi	r3, [r4, #24]
   3a0cc:	mvn	r3, #3
   3a0d0:	str	ip, [r4, #16]
   3a0d4:	str	r3, [r2, #4]
   3a0d8:	ldrd	r4, [sp]
   3a0dc:	ldr	r6, [sp, #8]
   3a0e0:	add	sp, sp, #12
   3a0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   3a0e8:	mvn	r0, #0
   3a0ec:	b	3a0d8 <flatcc_builder_start_vector@@Base+0x78>

0003a0f0 <flatcc_builder_start_offset_vector@@Base>:
   3a0f0:	mov	r1, #4
   3a0f4:	strd	r4, [sp, #-16]!
   3a0f8:	mov	r4, r0
   3a0fc:	str	r6, [sp, #8]
   3a100:	str	lr, [sp, #12]
   3a104:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   3a108:	cmp	r0, #0
   3a10c:	bne	3a164 <flatcc_builder_start_offset_vector@@Base+0x74>
   3a110:	ldr	ip, [r4, #28]
   3a114:	mov	lr, #4
   3a118:	mov	r5, #5
   3a11c:	ldr	r3, [r4, #32]
   3a120:	ldr	r2, [r4, #64]	; 0x40
   3a124:	ldr	r1, [r4, #60]	; 0x3c
   3a128:	strh	r5, [r3, #14]
   3a12c:	str	lr, [r3, #16]
   3a130:	sub	r2, r2, ip
   3a134:	str	r0, [r3, #20]
   3a138:	cmn	r2, #4
   3a13c:	mvnhi	r2, #3
   3a140:	add	r1, r1, ip
   3a144:	str	r1, [r4, #16]
   3a148:	str	r2, [r4, #24]
   3a14c:	mvn	r2, #3
   3a150:	str	r2, [r3, #4]
   3a154:	ldrd	r4, [sp]
   3a158:	ldr	r6, [sp, #8]
   3a15c:	add	sp, sp, #12
   3a160:	pop	{pc}		; (ldr pc, [sp], #4)
   3a164:	mvn	r0, #0
   3a168:	b	3a154 <flatcc_builder_start_offset_vector@@Base+0x64>

0003a16c <flatcc_builder_start_string@@Base>:
   3a16c:	mov	r1, #1
   3a170:	strd	r4, [sp, #-16]!
   3a174:	mov	r4, r0
   3a178:	str	r6, [sp, #8]
   3a17c:	str	lr, [sp, #12]
   3a180:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   3a184:	cmp	r0, #0
   3a188:	bne	3a1e0 <flatcc_builder_start_string@@Base+0x74>
   3a18c:	ldr	ip, [r4, #28]
   3a190:	mov	lr, #1
   3a194:	mov	r5, #6
   3a198:	ldr	r3, [r4, #32]
   3a19c:	ldr	r2, [r4, #64]	; 0x40
   3a1a0:	ldr	r1, [r4, #60]	; 0x3c
   3a1a4:	strh	r5, [r3, #14]
   3a1a8:	str	lr, [r3, #16]
   3a1ac:	sub	r2, r2, ip
   3a1b0:	str	r0, [r3, #20]
   3a1b4:	cmn	r2, #4
   3a1b8:	mvnhi	r2, #3
   3a1bc:	add	r1, r1, ip
   3a1c0:	str	r1, [r4, #16]
   3a1c4:	str	r2, [r4, #24]
   3a1c8:	mvn	r2, #3
   3a1cc:	str	r2, [r3, #4]
   3a1d0:	ldrd	r4, [sp]
   3a1d4:	ldr	r6, [sp, #8]
   3a1d8:	add	sp, sp, #12
   3a1dc:	pop	{pc}		; (ldr pc, [sp], #4)
   3a1e0:	mvn	r0, #0
   3a1e4:	b	3a1d0 <flatcc_builder_start_string@@Base+0x64>

0003a1e8 <flatcc_builder_reserve_table@@Base>:
   3a1e8:	cmp	r1, #0
   3a1ec:	strd	r4, [sp, #-20]!	; 0xffffffec
   3a1f0:	strd	r6, [sp, #8]
   3a1f4:	str	lr, [sp, #16]
   3a1f8:	sub	sp, sp, #12
   3a1fc:	blt	3a2e0 <flatcc_builder_reserve_table@@Base+0xf8>
   3a200:	ldr	r2, [r0, #32]
   3a204:	add	r1, r1, #2
   3a208:	mov	r4, r0
   3a20c:	lsl	r5, r1, #1
   3a210:	ldr	r1, [r0, #56]	; 0x38
   3a214:	ldrh	r6, [r2, #28]
   3a218:	ldr	r3, [r2, #16]
   3a21c:	add	r6, r3, r6, lsl #1
   3a220:	add	r2, r6, r5
   3a224:	cmp	r2, r1
   3a228:	bhi	3a290 <flatcc_builder_reserve_table@@Base+0xa8>
   3a22c:	ldr	r3, [r4, #52]	; 0x34
   3a230:	adds	r3, r3, r6
   3a234:	mvneq	r0, #0
   3a238:	streq	r3, [r4, #4]
   3a23c:	beq	3a27c <flatcc_builder_reserve_table@@Base+0x94>
   3a240:	ldr	r2, [r4, #32]
   3a244:	add	r3, r3, #4
   3a248:	ldr	r1, [r4, #80]	; 0x50
   3a24c:	ldr	r6, [r2, #20]
   3a250:	str	r3, [r4, #4]
   3a254:	add	r2, r5, r6
   3a258:	sub	r2, r2, #3
   3a25c:	cmp	r2, r1
   3a260:	bhi	3a2b8 <flatcc_builder_reserve_table@@Base+0xd0>
   3a264:	ldr	r3, [r4, #76]	; 0x4c
   3a268:	add	r3, r3, r6
   3a26c:	clz	r0, r3
   3a270:	lsr	r0, r0, #5
   3a274:	str	r3, [r4]
   3a278:	rsb	r0, r0, #0
   3a27c:	add	sp, sp, #12
   3a280:	ldrd	r4, [sp]
   3a284:	ldrd	r6, [sp, #8]
   3a288:	add	sp, sp, #16
   3a28c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a290:	mov	ip, #0
   3a294:	add	r1, r0, #52	; 0x34
   3a298:	ldr	r0, [r0, #40]	; 0x28
   3a29c:	mov	r3, #1
   3a2a0:	str	ip, [sp]
   3a2a4:	ldr	r7, [r4, #48]	; 0x30
   3a2a8:	blx	r7
   3a2ac:	cmp	r0, #0
   3a2b0:	beq	3a22c <flatcc_builder_reserve_table@@Base+0x44>
   3a2b4:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>
   3a2b8:	mov	ip, #3
   3a2bc:	mov	r3, #0
   3a2c0:	ldr	r0, [r4, #40]	; 0x28
   3a2c4:	add	r1, r4, #76	; 0x4c
   3a2c8:	str	ip, [sp]
   3a2cc:	ldr	r5, [r4, #48]	; 0x30
   3a2d0:	blx	r5
   3a2d4:	cmp	r0, #0
   3a2d8:	beq	3a264 <flatcc_builder_reserve_table@@Base+0x7c>
   3a2dc:	b	3a2b4 <flatcc_builder_reserve_table@@Base+0xcc>
   3a2e0:	ldr	r3, [pc, #28]	; 3a304 <flatcc_builder_reserve_table@@Base+0x11c>
   3a2e4:	movw	r2, #1065	; 0x429
   3a2e8:	ldr	r1, [pc, #24]	; 3a308 <flatcc_builder_reserve_table@@Base+0x120>
   3a2ec:	ldr	r0, [pc, #24]	; 3a30c <flatcc_builder_reserve_table@@Base+0x124>
   3a2f0:	add	r3, pc, r3
   3a2f4:	add	r3, r3, #624	; 0x270
   3a2f8:	add	r1, pc, r1
   3a2fc:	add	r0, pc, r0
   3a300:	bl	1400c <__assert_fail@plt>
   3a304:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   3a308:	andeq	r0, r2, r0, ror #4
   3a30c:	strdeq	r0, [r2], -ip

0003a310 <flatcc_builder_start_table@@Base>:
   3a310:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3a314:	mov	r5, r1
   3a318:	mov	r1, #4
   3a31c:	strd	r6, [sp, #8]
   3a320:	mov	r4, r0
   3a324:	strd	r8, [sp, #16]
   3a328:	str	sl, [sp, #24]
   3a32c:	str	lr, [sp, #28]
   3a330:	sub	sp, sp, #8
   3a334:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   3a338:	subs	r7, r0, #0
   3a33c:	bne	3a484 <flatcc_builder_start_table@@Base+0x174>
   3a340:	ldm	r4, {r0, r2}
   3a344:	add	r5, r5, #2
   3a348:	movw	ip, #15186	; 0x3b52
   3a34c:	movt	ip, #12137	; 0x2f69
   3a350:	lsl	r5, r5, #1
   3a354:	mov	r8, #3
   3a358:	ldrh	lr, [r4, #8]
   3a35c:	ldr	r1, [r4, #52]	; 0x34
   3a360:	ldr	sl, [r4, #76]	; 0x4c
   3a364:	ldr	r3, [r4, #32]
   3a368:	sub	r2, r2, r1
   3a36c:	ldr	r9, [r4, #56]	; 0x38
   3a370:	add	r6, r2, lr, lsl #1
   3a374:	sub	r0, r0, sl
   3a378:	ldr	sl, [r4, #12]
   3a37c:	str	r2, [r3, #16]
   3a380:	add	r2, r6, r5
   3a384:	str	r0, [r3, #20]
   3a388:	cmp	r2, r9
   3a38c:	str	sl, [r3, #24]
   3a390:	strh	lr, [r3, #28]
   3a394:	strh	r7, [r4, #8]
   3a398:	str	ip, [r4, #12]
   3a39c:	strh	r8, [r3, #14]
   3a3a0:	bls	3a3c8 <flatcc_builder_start_table@@Base+0xb8>
   3a3a4:	mov	r3, #1
   3a3a8:	add	r1, r4, #52	; 0x34
   3a3ac:	str	r7, [sp]
   3a3b0:	ldr	r0, [r4, #40]	; 0x28
   3a3b4:	ldr	r8, [r4, #48]	; 0x30
   3a3b8:	blx	r8
   3a3bc:	cmp	r0, #0
   3a3c0:	bne	3a480 <flatcc_builder_start_table@@Base+0x170>
   3a3c4:	ldr	r1, [r4, #52]	; 0x34
   3a3c8:	adds	r6, r6, r1
   3a3cc:	streq	r6, [r4, #4]
   3a3d0:	beq	3a484 <flatcc_builder_start_table@@Base+0x174>
   3a3d4:	ldr	r1, [r4, #32]
   3a3d8:	sub	r2, r5, #3
   3a3dc:	add	r6, r6, #4
   3a3e0:	ldr	r3, [r4, #80]	; 0x50
   3a3e4:	ldr	r5, [r1, #20]
   3a3e8:	str	r6, [r4, #4]
   3a3ec:	add	r2, r2, r5
   3a3f0:	cmp	r2, r3
   3a3f4:	bhi	3a45c <flatcc_builder_start_table@@Base+0x14c>
   3a3f8:	ldr	r3, [r4, #76]	; 0x4c
   3a3fc:	add	r3, r3, r5
   3a400:	cmp	r3, #0
   3a404:	str	r3, [r4]
   3a408:	beq	3a484 <flatcc_builder_start_table@@Base+0x174>
   3a40c:	ldr	r0, [r4, #28]
   3a410:	movw	r2, #65532	; 0xfffc
   3a414:	ldr	ip, [r4, #32]
   3a418:	ldr	r3, [r4, #64]	; 0x40
   3a41c:	ldr	r1, [r4, #60]	; 0x3c
   3a420:	sub	r3, r3, r0
   3a424:	cmp	r3, r2
   3a428:	add	r1, r1, r0
   3a42c:	movcs	r3, r2
   3a430:	str	r1, [r4, #16]
   3a434:	str	r3, [r4, #24]
   3a438:	str	r2, [ip, #4]
   3a43c:	mov	r0, r7
   3a440:	add	sp, sp, #8
   3a444:	ldrd	r4, [sp]
   3a448:	ldrd	r6, [sp, #8]
   3a44c:	ldrd	r8, [sp, #16]
   3a450:	ldr	sl, [sp, #24]
   3a454:	add	sp, sp, #28
   3a458:	pop	{pc}		; (ldr pc, [sp], #4)
   3a45c:	mov	ip, #3
   3a460:	mov	r3, #0
   3a464:	ldr	r0, [r4, #40]	; 0x28
   3a468:	add	r1, r4, #76	; 0x4c
   3a46c:	str	ip, [sp]
   3a470:	ldr	r6, [r4, #48]	; 0x30
   3a474:	blx	r6
   3a478:	cmp	r0, #0
   3a47c:	beq	3a3f8 <flatcc_builder_start_table@@Base+0xe8>
   3a480:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>
   3a484:	mvn	r7, #0
   3a488:	b	3a43c <flatcc_builder_start_table@@Base+0x12c>

0003a48c <flatcc_builder_create_vtable@@Base>:
   3a48c:	mov	r3, #0
   3a490:	strd	r4, [sp, #-16]!
   3a494:	mov	r5, r0
   3a498:	ldr	r0, [r0, #152]	; 0x98
   3a49c:	cmp	r2, #0
   3a4a0:	str	r6, [sp, #8]
   3a4a4:	str	lr, [sp, #12]
   3a4a8:	sub	sp, sp, #80	; 0x50
   3a4ac:	str	r3, [sp, #8]
   3a4b0:	str	r3, [sp, #12]
   3a4b4:	beq	3a52c <flatcc_builder_create_vtable@@Base+0xa0>
   3a4b8:	mov	r3, #1
   3a4bc:	cmp	r0, #0
   3a4c0:	strd	r2, [sp, #8]
   3a4c4:	str	r1, [sp, #16]
   3a4c8:	str	r2, [sp, #20]
   3a4cc:	beq	3a564 <flatcc_builder_create_vtable@@Base+0xd8>
   3a4d0:	ldr	r3, [r5, #136]	; 0x88
   3a4d4:	sub	r4, r3, r2
   3a4d8:	cmp	r3, r4
   3a4dc:	ble	3a540 <flatcc_builder_create_vtable@@Base+0xb4>
   3a4e0:	mov	r3, r4
   3a4e4:	add	r1, sp, #16
   3a4e8:	str	r2, [sp]
   3a4ec:	ldr	r2, [sp, #12]
   3a4f0:	ldr	r0, [r5, #36]	; 0x24
   3a4f4:	ldr	r6, [r5, #44]	; 0x2c
   3a4f8:	blx	r6
   3a4fc:	cmp	r0, #0
   3a500:	bne	3a5b0 <flatcc_builder_create_vtable@@Base+0x124>
   3a504:	cmp	r4, #0
   3a508:	str	r4, [r5, #136]	; 0x88
   3a50c:	beq	3a514 <flatcc_builder_create_vtable@@Base+0x88>
   3a510:	add	r4, r4, #1
   3a514:	mov	r0, r4
   3a518:	add	sp, sp, #80	; 0x50
   3a51c:	ldrd	r4, [sp]
   3a520:	ldr	r6, [sp, #8]
   3a524:	add	sp, sp, #12
   3a528:	pop	{pc}		; (ldr pc, [sp], #4)
   3a52c:	cmp	r0, #0
   3a530:	bne	3a540 <flatcc_builder_create_vtable@@Base+0xb4>
   3a534:	ldr	r3, [r5, #180]	; 0xb4
   3a538:	cmp	r3, #0
   3a53c:	beq	3a5a8 <flatcc_builder_create_vtable@@Base+0x11c>
   3a540:	ldr	r3, [pc, #108]	; 3a5b4 <flatcc_builder_create_vtable@@Base+0x128>
   3a544:	movw	r2, #647	; 0x287
   3a548:	ldr	r1, [pc, #104]	; 3a5b8 <flatcc_builder_create_vtable@@Base+0x12c>
   3a54c:	ldr	r0, [pc, #104]	; 3a5bc <flatcc_builder_create_vtable@@Base+0x130>
   3a550:	add	r3, pc, r3
   3a554:	add	r3, r3, #44	; 0x2c
   3a558:	add	r1, pc, r1
   3a55c:	add	r0, pc, r0
   3a560:	bl	1400c <__assert_fail@plt>
   3a564:	ldr	r3, [r5, #180]	; 0xb4
   3a568:	cmp	r3, #0
   3a56c:	bne	3a4d0 <flatcc_builder_create_vtable@@Base+0x44>
   3a570:	ldr	r4, [r5, #140]	; 0x8c
   3a574:	mov	r0, r2
   3a578:	add	r2, r4, r2
   3a57c:	str	r2, [r5, #140]	; 0x8c
   3a580:	mov	r3, r4
   3a584:	add	r1, sp, #16
   3a588:	str	r0, [sp]
   3a58c:	ldr	r2, [sp, #12]
   3a590:	ldr	r0, [r5, #36]	; 0x24
   3a594:	ldr	r5, [r5, #44]	; 0x2c
   3a598:	blx	r5
   3a59c:	cmp	r0, #0
   3a5a0:	beq	3a510 <flatcc_builder_create_vtable@@Base+0x84>
   3a5a4:	bl	38388 <flatcc_builder_default_alloc@@Base+0x158>
   3a5a8:	ldr	r4, [r5, #140]	; 0x8c
   3a5ac:	b	3a580 <flatcc_builder_create_vtable@@Base+0xf4>
   3a5b0:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   3a5b4:			; <UNDEFINED> instruction: 0x0001f8b8
   3a5b8:	andeq	r0, r2, r0
   3a5bc:	andeq	lr, r0, r0, lsl #17

0003a5c0 <flatcc_builder_create_cached_vtable@@Base>:
   3a5c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3a5c4:	strd	r6, [sp, #8]
   3a5c8:	mov	r6, r0
   3a5cc:	strd	r8, [sp, #16]
   3a5d0:	mov	r9, r2
   3a5d4:	mov	r8, r3
   3a5d8:	strd	sl, [sp, #24]
   3a5dc:	str	lr, [sp, #32]
   3a5e0:	sub	sp, sp, #28
   3a5e4:	str	r1, [sp, #8]
   3a5e8:	ldr	r1, [r0, #116]	; 0x74
   3a5ec:	cmp	r1, #0
   3a5f0:	rsbne	r1, r1, #32
   3a5f4:	beq	3a77c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   3a5f8:	ldr	sl, [r6, #92]	; 0x5c
   3a5fc:	lsr	r8, r8, r1
   3a600:	adds	fp, sl, r8, lsl #2
   3a604:	str	fp, [sp, #12]
   3a608:	beq	3a818 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3a60c:	ldr	r5, [sl, r8, lsl #2]
   3a610:	cmp	r5, #0
   3a614:	beq	3a84c <flatcc_builder_create_cached_vtable@@Base+0x28c>
   3a618:	mov	r3, #0
   3a61c:	str	r8, [sp, #16]
   3a620:	mov	r8, fp
   3a624:	mov	fp, r6
   3a628:	ldr	r7, [r6, #68]	; 0x44
   3a62c:	str	r3, [sp, #20]
   3a630:	ldr	r3, [r6, #100]	; 0x64
   3a634:	mov	r6, r3
   3a638:	add	r4, r6, r5
   3a63c:	ldr	r1, [r4, #8]
   3a640:	ldrh	r2, [r7, r1]
   3a644:	add	r1, r7, r1
   3a648:	cmp	r2, r9
   3a64c:	bne	3a728 <flatcc_builder_create_cached_vtable@@Base+0x168>
   3a650:	mov	r2, r9
   3a654:	ldr	r0, [sp, #8]
   3a658:	bl	13ec8 <memcmp@plt>
   3a65c:	cmp	r0, #0
   3a660:	bne	3a728 <flatcc_builder_create_cached_vtable@@Base+0x168>
   3a664:	ldr	r1, [r4, #4]
   3a668:	ldr	r2, [fp, #152]	; 0x98
   3a66c:	cmp	r1, r2
   3a670:	beq	3a734 <flatcc_builder_create_cached_vtable@@Base+0x174>
   3a674:	ldr	r5, [r4, #12]
   3a678:	add	r8, r4, #12
   3a67c:	str	r4, [sp, #20]
   3a680:	cmp	r5, #0
   3a684:	bne	3a638 <flatcc_builder_create_cached_vtable@@Base+0x78>
   3a688:	ldr	r8, [sp, #16]
   3a68c:	mov	r6, fp
   3a690:	ldr	r3, [r6, #104]	; 0x68
   3a694:	ldr	r4, [r6, #124]	; 0x7c
   3a698:	add	r2, r4, #16
   3a69c:	cmp	r2, r3
   3a6a0:	bls	3a6c8 <flatcc_builder_create_cached_vtable@@Base+0x108>
   3a6a4:	mov	ip, #6
   3a6a8:	mov	r3, #0
   3a6ac:	ldr	r0, [r6, #40]	; 0x28
   3a6b0:	add	r1, r6, #100	; 0x64
   3a6b4:	str	ip, [sp]
   3a6b8:	ldr	r5, [r6, #48]	; 0x30
   3a6bc:	blx	r5
   3a6c0:	cmp	r0, #0
   3a6c4:	bne	3a848 <flatcc_builder_create_cached_vtable@@Base+0x288>
   3a6c8:	ldr	r5, [r6, #100]	; 0x64
   3a6cc:	adds	r7, r5, r4
   3a6d0:	beq	3a818 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3a6d4:	ldr	r3, [r6, #124]	; 0x7c
   3a6d8:	mov	r2, r9
   3a6dc:	ldr	r0, [r6, #152]	; 0x98
   3a6e0:	ldr	r1, [sp, #8]
   3a6e4:	add	ip, r3, #16
   3a6e8:	str	ip, [r6, #124]	; 0x7c
   3a6ec:	str	r0, [r7, #4]
   3a6f0:	mov	r0, r6
   3a6f4:	ldr	ip, [sl, r8, lsl #2]
   3a6f8:	str	ip, [r7, #12]
   3a6fc:	str	r3, [sl, r8, lsl #2]
   3a700:	bl	3a48c <flatcc_builder_create_vtable@@Base>
   3a704:	cmp	r0, #0
   3a708:	str	r0, [r5, r4]
   3a70c:	beq	3a818 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3a710:	ldr	r3, [sp, #20]
   3a714:	cmp	r3, #0
   3a718:	beq	3a85c <flatcc_builder_create_cached_vtable@@Base+0x29c>
   3a71c:	ldr	r3, [r3, #8]
   3a720:	str	r3, [r7, #8]
   3a724:	b	3a760 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3a728:	add	r8, r4, #12
   3a72c:	ldr	r5, [r4, #12]
   3a730:	b	3a680 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   3a734:	ldr	r3, [sp, #12]
   3a738:	mov	fp, r8
   3a73c:	ldr	r8, [sp, #16]
   3a740:	cmp	r3, fp
   3a744:	beq	3a75c <flatcc_builder_create_cached_vtable@@Base+0x19c>
   3a748:	ldr	r3, [r4, #12]
   3a74c:	str	r3, [fp]
   3a750:	ldr	r3, [sl, r8, lsl #2]
   3a754:	str	r3, [r4, #12]
   3a758:	str	r5, [sl, r8, lsl #2]
   3a75c:	ldr	r0, [r4]
   3a760:	add	sp, sp, #28
   3a764:	ldrd	r4, [sp]
   3a768:	ldrd	r6, [sp, #8]
   3a76c:	ldrd	r8, [sp, #16]
   3a770:	ldrd	sl, [sp, #24]
   3a774:	add	sp, sp, #32
   3a778:	pop	{pc}		; (ldr pc, [sp], #4)
   3a77c:	ldr	r4, [r0, #124]	; 0x7c
   3a780:	add	r5, r0, #92	; 0x5c
   3a784:	cmp	r4, #0
   3a788:	bne	3a8f0 <flatcc_builder_create_cached_vtable@@Base+0x330>
   3a78c:	ldr	r3, [r0, #104]	; 0x68
   3a790:	cmp	r3, #15
   3a794:	bls	3a820 <flatcc_builder_create_cached_vtable@@Base+0x260>
   3a798:	ldr	r3, [r6, #100]	; 0x64
   3a79c:	cmp	r3, #0
   3a7a0:	beq	3a818 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3a7a4:	mov	ip, #16
   3a7a8:	mov	r2, #5
   3a7ac:	ldr	r0, [r6, #40]	; 0x28
   3a7b0:	mov	r1, r5
   3a7b4:	mov	r3, #1
   3a7b8:	str	r2, [sp]
   3a7bc:	mov	r2, #256	; 0x100
   3a7c0:	str	ip, [r6, #124]	; 0x7c
   3a7c4:	ldr	r5, [r6, #48]	; 0x30
   3a7c8:	blx	r5
   3a7cc:	cmp	r0, #0
   3a7d0:	bne	3a818 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3a7d4:	mov	r3, #256	; 0x100
   3a7d8:	ldr	r1, [r6, #96]	; 0x60
   3a7dc:	b	3a7e4 <flatcc_builder_create_cached_vtable@@Base+0x224>
   3a7e0:	mov	r3, r2
   3a7e4:	lsl	r2, r3, #1
   3a7e8:	cmp	r2, r1
   3a7ec:	bls	3a7e0 <flatcc_builder_create_cached_vtable@@Base+0x220>
   3a7f0:	lsr	r3, r3, #2
   3a7f4:	cmp	r3, #1
   3a7f8:	bls	3a854 <flatcc_builder_create_cached_vtable@@Base+0x294>
   3a7fc:	mov	r2, #1
   3a800:	add	r4, r4, #1
   3a804:	cmp	r3, r2, lsl r4
   3a808:	bhi	3a800 <flatcc_builder_create_cached_vtable@@Base+0x240>
   3a80c:	rsb	r1, r4, #32
   3a810:	str	r4, [r6, #116]	; 0x74
   3a814:	b	3a5f8 <flatcc_builder_create_cached_vtable@@Base+0x38>
   3a818:	mov	r0, #0
   3a81c:	b	3a760 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3a820:	mov	ip, #6
   3a824:	add	r1, r0, #100	; 0x64
   3a828:	ldr	r0, [r0, #40]	; 0x28
   3a82c:	mov	r3, r4
   3a830:	mov	r2, #16
   3a834:	str	ip, [sp]
   3a838:	ldr	r7, [r6, #48]	; 0x30
   3a83c:	blx	r7
   3a840:	cmp	r0, #0
   3a844:	beq	3a798 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   3a848:	bl	38354 <flatcc_builder_default_alloc@@Base+0x124>
   3a84c:	str	r5, [sp, #20]
   3a850:	b	3a690 <flatcc_builder_create_cached_vtable@@Base+0xd0>
   3a854:	mov	r1, #32
   3a858:	b	3a810 <flatcc_builder_create_cached_vtable@@Base+0x250>
   3a85c:	ldr	r8, [r6, #120]	; 0x78
   3a860:	ldr	r3, [r6, #172]	; 0xac
   3a864:	add	r2, r9, r8
   3a868:	cmp	r3, #0
   3a86c:	beq	3a878 <flatcc_builder_create_cached_vtable@@Base+0x2b8>
   3a870:	cmp	r3, r2
   3a874:	bcc	3a8d8 <flatcc_builder_create_cached_vtable@@Base+0x318>
   3a878:	ldr	r3, [r6, #72]	; 0x48
   3a87c:	cmp	r3, r2
   3a880:	bcs	3a8a8 <flatcc_builder_create_cached_vtable@@Base+0x2e8>
   3a884:	mov	ip, #2
   3a888:	mov	r3, #0
   3a88c:	ldr	r0, [r6, #40]	; 0x28
   3a890:	add	r1, r6, #68	; 0x44
   3a894:	str	ip, [sp]
   3a898:	ldr	sl, [r6, #48]	; 0x30
   3a89c:	blx	sl
   3a8a0:	cmp	r0, #0
   3a8a4:	bne	3a848 <flatcc_builder_create_cached_vtable@@Base+0x288>
   3a8a8:	ldr	r3, [r6, #68]	; 0x44
   3a8ac:	adds	r0, r3, r8
   3a8b0:	beq	3a8e8 <flatcc_builder_create_cached_vtable@@Base+0x328>
   3a8b4:	ldr	r3, [r6, #120]	; 0x78
   3a8b8:	mov	r2, r9
   3a8bc:	ldr	r1, [sp, #8]
   3a8c0:	add	r9, r3, r9
   3a8c4:	str	r3, [r7, #8]
   3a8c8:	str	r9, [r6, #120]	; 0x78
   3a8cc:	bl	13eb0 <memcpy@plt>
   3a8d0:	ldr	r0, [r5, r4]
   3a8d4:	b	3a760 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3a8d8:	mov	r0, r6
   3a8dc:	bl	388b4 <flatcc_builder_flush_vtable_cache@@Base>
   3a8e0:	ldr	r0, [r5, r4]
   3a8e4:	b	3a760 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3a8e8:	mvn	r0, #0
   3a8ec:	b	3a760 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3a8f0:	ldr	r3, [pc, #28]	; 3a914 <flatcc_builder_create_cached_vtable@@Base+0x354>
   3a8f4:	movw	r2, #342	; 0x156
   3a8f8:	ldr	r1, [pc, #24]	; 3a918 <flatcc_builder_create_cached_vtable@@Base+0x358>
   3a8fc:	ldr	r0, [pc, #24]	; 3a91c <flatcc_builder_create_cached_vtable@@Base+0x35c>
   3a900:	add	r3, pc, r3
   3a904:	add	r3, r3, #656	; 0x290
   3a908:	add	r1, pc, r1
   3a90c:	add	r0, pc, r0
   3a910:	bl	1400c <__assert_fail@plt>
   3a914:	andeq	pc, r1, r8, lsl #10
   3a918:	andeq	pc, r1, r0, asr ip	; <UNPREDICTABLE>
   3a91c:	strdeq	pc, [r1], -r8

0003a920 <flatcc_builder_create_table@@Base>:
   3a920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a924:	mov	r5, r0
   3a928:	strd	r6, [sp, #8]
   3a92c:	str	r8, [sp, #16]
   3a930:	str	lr, [sp, #20]
   3a934:	sub	sp, sp, #88	; 0x58
   3a938:	ldr	r6, [sp, #116]	; 0x74
   3a93c:	ldr	r7, [pc, #444]	; 3ab00 <flatcc_builder_create_table@@Base+0x1e0>
   3a940:	ldr	r0, [sp, #120]	; 0x78
   3a944:	cmp	r6, #0
   3a948:	add	r7, pc, r7
   3a94c:	blt	3aab4 <flatcc_builder_create_table@@Base+0x194>
   3a950:	tst	r0, #1
   3a954:	beq	3aa90 <flatcc_builder_create_table@@Base+0x170>
   3a958:	ldrh	ip, [r5, #128]	; 0x80
   3a95c:	cmp	r3, #4
   3a960:	sub	r0, r0, #1
   3a964:	movcc	r3, #4
   3a968:	cmp	ip, r3
   3a96c:	ldr	ip, [r5, #136]	; 0x88
   3a970:	strhcc	r3, [r5, #128]	; 0x80
   3a974:	sub	r3, r3, #1
   3a978:	cmp	r6, #0
   3a97c:	sub	r4, ip, r2
   3a980:	mov	r8, r4
   3a984:	sub	r4, r4, #4
   3a988:	and	r8, r8, r3
   3a98c:	sub	r0, r4, r0
   3a990:	sub	r0, r0, r8
   3a994:	str	r0, [sp, #12]
   3a998:	beq	3a9cc <flatcc_builder_create_table@@Base+0xac>
   3a99c:	ldr	ip, [sp, #112]	; 0x70
   3a9a0:	sub	r4, r8, r4
   3a9a4:	sub	r4, r4, #4
   3a9a8:	add	r6, ip, r6, lsl #1
   3a9ac:	ldrh	r3, [ip], #2
   3a9b0:	ldr	r0, [r1, r3]
   3a9b4:	sub	lr, r4, r3
   3a9b8:	cmp	r6, ip
   3a9bc:	add	r0, r0, lr
   3a9c0:	str	r0, [r1, r3]
   3a9c4:	bne	3a9ac <flatcc_builder_create_table@@Base+0x8c>
   3a9c8:	ldr	ip, [r5, #136]	; 0x88
   3a9cc:	mov	r3, #1
   3a9d0:	mov	r0, #4
   3a9d4:	cmp	r2, #0
   3a9d8:	str	r0, [sp, #16]
   3a9dc:	str	r3, [sp, #20]
   3a9e0:	add	r3, sp, #12
   3a9e4:	str	r3, [sp, #24]
   3a9e8:	str	r0, [sp, #28]
   3a9ec:	beq	3aa08 <flatcc_builder_create_table@@Base+0xe8>
   3a9f0:	add	r0, r2, r0
   3a9f4:	mov	r3, #2
   3a9f8:	str	r0, [sp, #16]
   3a9fc:	str	r3, [sp, #20]
   3aa00:	str	r1, [sp, #32]
   3aa04:	str	r2, [sp, #36]	; 0x24
   3aa08:	cmp	r8, #0
   3aa0c:	bne	3aa60 <flatcc_builder_create_table@@Base+0x140>
   3aa10:	sub	r4, ip, r0
   3aa14:	cmp	r4, ip
   3aa18:	bge	3aadc <flatcc_builder_create_table@@Base+0x1bc>
   3aa1c:	mov	r3, r4
   3aa20:	add	r1, sp, #24
   3aa24:	str	r0, [sp]
   3aa28:	ldr	r2, [sp, #20]
   3aa2c:	ldr	r0, [r5, #36]	; 0x24
   3aa30:	ldr	r6, [r5, #44]	; 0x2c
   3aa34:	blx	r6
   3aa38:	cmp	r0, #0
   3aa3c:	bne	3aad8 <flatcc_builder_create_table@@Base+0x1b8>
   3aa40:	mov	r0, r4
   3aa44:	str	r4, [r5, #136]	; 0x88
   3aa48:	add	sp, sp, #88	; 0x58
   3aa4c:	ldrd	r4, [sp]
   3aa50:	ldrd	r6, [sp, #8]
   3aa54:	ldr	r8, [sp, #16]
   3aa58:	add	sp, sp, #20
   3aa5c:	pop	{pc}		; (ldr pc, [sp], #4)
   3aa60:	ldr	r2, [pc, #156]	; 3ab04 <flatcc_builder_create_table@@Base+0x1e4>
   3aa64:	add	r0, r0, r8
   3aa68:	ldr	r3, [sp, #20]
   3aa6c:	str	r0, [sp, #16]
   3aa70:	ldr	r1, [r7, r2]
   3aa74:	add	r2, sp, #88	; 0x58
   3aa78:	add	r3, r3, #1
   3aa7c:	add	r2, r2, r3, lsl #3
   3aa80:	str	r3, [sp, #20]
   3aa84:	str	r1, [r2, #-72]	; 0xffffffb8
   3aa88:	str	r8, [r2, #-68]	; 0xffffffbc
   3aa8c:	b	3aa10 <flatcc_builder_create_table@@Base+0xf0>
   3aa90:	ldr	r3, [pc, #112]	; 3ab08 <flatcc_builder_create_table@@Base+0x1e8>
   3aa94:	movw	r2, #1243	; 0x4db
   3aa98:	ldr	r1, [pc, #108]	; 3ab0c <flatcc_builder_create_table@@Base+0x1ec>
   3aa9c:	ldr	r0, [pc, #108]	; 3ab10 <flatcc_builder_create_table@@Base+0x1f0>
   3aaa0:	add	r3, pc, r3
   3aaa4:	add	r3, r3, #668	; 0x29c
   3aaa8:	add	r1, pc, r1
   3aaac:	add	r0, pc, r0
   3aab0:	bl	1400c <__assert_fail@plt>
   3aab4:	ldr	r3, [pc, #88]	; 3ab14 <flatcc_builder_create_table@@Base+0x1f4>
   3aab8:	movw	r2, #1237	; 0x4d5
   3aabc:	ldr	r1, [pc, #84]	; 3ab18 <flatcc_builder_create_table@@Base+0x1f8>
   3aac0:	ldr	r0, [pc, #84]	; 3ab1c <flatcc_builder_create_table@@Base+0x1fc>
   3aac4:	add	r3, pc, r3
   3aac8:	add	r3, r3, #668	; 0x29c
   3aacc:	add	r1, pc, r1
   3aad0:	add	r0, pc, r0
   3aad4:	bl	1400c <__assert_fail@plt>
   3aad8:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   3aadc:	ldr	r3, [pc, #60]	; 3ab20 <flatcc_builder_create_table@@Base+0x200>
   3aae0:	movw	r2, #647	; 0x287
   3aae4:	ldr	r1, [pc, #56]	; 3ab24 <flatcc_builder_create_table@@Base+0x204>
   3aae8:	ldr	r0, [pc, #56]	; 3ab28 <flatcc_builder_create_table@@Base+0x208>
   3aaec:	add	r3, pc, r3
   3aaf0:	add	r3, r3, #44	; 0x2c
   3aaf4:	add	r1, pc, r1
   3aaf8:	add	r0, pc, r0
   3aafc:	bl	1400c <__assert_fail@plt>
   3ab00:			; <UNDEFINED> instruction: 0x000306b0
   3ab04:	muleq	r0, r8, r0
   3ab08:	andeq	pc, r1, r8, ror #6
   3ab0c:			; <UNDEFINED> instruction: 0x0001fab0
   3ab10:	andeq	pc, r1, ip, ror sp	; <UNPREDICTABLE>
   3ab14:	andeq	pc, r1, r4, asr #6
   3ab18:	andeq	pc, r1, ip, lsl #21
   3ab1c:	andeq	pc, r1, r4, asr #26
   3ab20:	andeq	pc, r1, ip, lsl r3	; <UNPREDICTABLE>
   3ab24:	andeq	pc, r1, r4, ror #20
   3ab28:	andeq	lr, r0, r4, ror #5

0003ab2c <flatcc_builder_check_required_field@@Base>:
   3ab2c:	ldr	r3, [r0, #32]
   3ab30:	ldrh	r3, [r3, #14]
   3ab34:	cmp	r3, #3
   3ab38:	bne	3ab68 <flatcc_builder_check_required_field@@Base+0x3c>
   3ab3c:	ldrh	r3, [r0, #8]
   3ab40:	cmp	r3, r1
   3ab44:	bls	3ab60 <flatcc_builder_check_required_field@@Base+0x34>
   3ab48:	ldr	r3, [r0, #4]
   3ab4c:	lsl	r1, r1, #1
   3ab50:	ldrh	r0, [r3, r1]
   3ab54:	adds	r0, r0, #0
   3ab58:	movne	r0, #1
   3ab5c:	bx	lr
   3ab60:	mov	r0, #0
   3ab64:	bx	lr
   3ab68:	ldr	r3, [pc, #36]	; 3ab94 <flatcc_builder_check_required_field@@Base+0x68>
   3ab6c:	movw	r2, #1272	; 0x4f8
   3ab70:	str	r4, [sp, #-8]!
   3ab74:	ldr	r1, [pc, #28]	; 3ab98 <flatcc_builder_check_required_field@@Base+0x6c>
   3ab78:	str	lr, [sp, #4]
   3ab7c:	ldr	r0, [pc, #24]	; 3ab9c <flatcc_builder_check_required_field@@Base+0x70>
   3ab80:	add	r3, pc, r3
   3ab84:	add	r3, r3, #696	; 0x2b8
   3ab88:	add	r1, pc, r1
   3ab8c:	add	r0, pc, r0
   3ab90:	bl	1400c <__assert_fail@plt>
   3ab94:	andeq	pc, r1, r8, lsl #5
   3ab98:	ldrdeq	pc, [r1], -r0
   3ab9c:	andeq	pc, r1, r8, lsr #25

0003aba0 <flatcc_builder_check_union_field@@Base>:
   3aba0:	ldr	r3, [r0, #32]
   3aba4:	ldrh	r3, [r3, #14]
   3aba8:	cmp	r3, #3
   3abac:	bne	3ac10 <flatcc_builder_check_union_field@@Base+0x70>
   3abb0:	cmp	r1, #0
   3abb4:	beq	3abfc <flatcc_builder_check_union_field@@Base+0x5c>
   3abb8:	ldrh	r3, [r0, #8]
   3abbc:	cmp	r3, r1
   3abc0:	bls	3abfc <flatcc_builder_check_union_field@@Base+0x5c>
   3abc4:	ldr	r3, [r0, #4]
   3abc8:	sub	r1, r1, #-2147483647	; 0x80000001
   3abcc:	lsl	r1, r1, #1
   3abd0:	ldrh	r2, [r3, r1]!
   3abd4:	cmp	r2, #0
   3abd8:	ldrh	r1, [r3, #2]
   3abdc:	beq	3abf0 <flatcc_builder_check_union_field@@Base+0x50>
   3abe0:	ldr	r3, [r0, #16]
   3abe4:	ldrb	r3, [r3, r2]
   3abe8:	cmp	r3, #0
   3abec:	bne	3ac04 <flatcc_builder_check_union_field@@Base+0x64>
   3abf0:	clz	r0, r1
   3abf4:	lsr	r0, r0, #5
   3abf8:	bx	lr
   3abfc:	mov	r0, #0
   3ac00:	bx	lr
   3ac04:	adds	r0, r1, #0
   3ac08:	movne	r0, #1
   3ac0c:	bx	lr
   3ac10:	ldr	r3, [pc, #36]	; 3ac3c <flatcc_builder_check_union_field@@Base+0x9c>
   3ac14:	movw	r2, #1279	; 0x4ff
   3ac18:	str	r4, [sp, #-8]!
   3ac1c:	ldr	r1, [pc, #28]	; 3ac40 <flatcc_builder_check_union_field@@Base+0xa0>
   3ac20:	str	lr, [sp, #4]
   3ac24:	ldr	r0, [pc, #24]	; 3ac44 <flatcc_builder_check_union_field@@Base+0xa4>
   3ac28:	add	r3, pc, r3
   3ac2c:	add	r3, r3, #732	; 0x2dc
   3ac30:	add	r1, pc, r1
   3ac34:	add	r0, pc, r0
   3ac38:	bl	1400c <__assert_fail@plt>
   3ac3c:	andeq	pc, r1, r0, ror #3
   3ac40:	andeq	pc, r1, r8, lsr #18
   3ac44:	andeq	pc, r1, r0, lsl #24

0003ac48 <flatcc_builder_check_required@@Base>:
   3ac48:	ldr	r3, [r0, #32]
   3ac4c:	ldrh	r3, [r3, #14]
   3ac50:	cmp	r3, #3
   3ac54:	bne	3acbc <flatcc_builder_check_required@@Base+0x74>
   3ac58:	ldrh	r3, [r0, #8]
   3ac5c:	cmp	r3, r2
   3ac60:	blt	3acb4 <flatcc_builder_check_required@@Base+0x6c>
   3ac64:	cmp	r2, #0
   3ac68:	ble	3acac <flatcc_builder_check_required@@Base+0x64>
   3ac6c:	ldrh	r3, [r1]
   3ac70:	ldr	ip, [r0, #4]
   3ac74:	lsl	r3, r3, #1
   3ac78:	ldrh	r0, [ip, r3]
   3ac7c:	cmp	r0, #0
   3ac80:	bxeq	lr
   3ac84:	add	r2, r1, r2, lsl #1
   3ac88:	add	r1, r1, #2
   3ac8c:	b	3aca4 <flatcc_builder_check_required@@Base+0x5c>
   3ac90:	ldrh	r3, [r1], #2
   3ac94:	lsl	r3, r3, #1
   3ac98:	ldrh	r0, [ip, r3]
   3ac9c:	cmp	r0, #0
   3aca0:	bxeq	lr
   3aca4:	cmp	r1, r2
   3aca8:	bne	3ac90 <flatcc_builder_check_required@@Base+0x48>
   3acac:	mov	r0, #1
   3acb0:	bx	lr
   3acb4:	mov	r0, #0
   3acb8:	bx	lr
   3acbc:	ldr	r3, [pc, #36]	; 3ace8 <flatcc_builder_check_required@@Base+0xa0>
   3acc0:	movw	r2, #1297	; 0x511
   3acc4:	str	r4, [sp, #-8]!
   3acc8:	ldr	r1, [pc, #28]	; 3acec <flatcc_builder_check_required@@Base+0xa4>
   3accc:	str	lr, [sp, #4]
   3acd0:	ldr	r0, [pc, #24]	; 3acf0 <flatcc_builder_check_required@@Base+0xa8>
   3acd4:	add	r3, pc, r3
   3acd8:	add	r3, r3, #768	; 0x300
   3acdc:	add	r1, pc, r1
   3ace0:	add	r0, pc, r0
   3ace4:	bl	1400c <__assert_fail@plt>
   3ace8:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>
   3acec:	andeq	pc, r1, ip, ror r8	; <UNPREDICTABLE>
   3acf0:	andeq	pc, r1, r4, asr fp	; <UNPREDICTABLE>

0003acf4 <flatcc_builder_end_table@@Base>:
   3acf4:	ldr	r3, [r0, #32]
   3acf8:	strd	r4, [sp, #-20]!	; 0xffffffec
   3acfc:	ldrh	r3, [r3, #14]
   3ad00:	strd	r6, [sp, #8]
   3ad04:	str	lr, [sp, #16]
   3ad08:	sub	sp, sp, #20
   3ad0c:	cmp	r3, #3
   3ad10:	bne	3ae94 <flatcc_builder_end_table@@Base+0x1a0>
   3ad14:	ldrh	r5, [r0, #8]
   3ad18:	movw	ip, #31153	; 0x79b1
   3ad1c:	movt	ip, #40503	; 0x9e37
   3ad20:	mov	r4, r0
   3ad24:	ldr	r1, [r0, #4]
   3ad28:	ldr	r3, [r0, #12]
   3ad2c:	add	r5, r5, #2
   3ad30:	lsl	r5, r5, #1
   3ad34:	ldr	lr, [r0, #20]
   3ad38:	sub	r6, r1, #4
   3ad3c:	uxth	r5, r5
   3ad40:	eor	r3, r3, r5
   3ad44:	mov	r2, r5
   3ad48:	strh	r5, [r1, #-4]
   3ad4c:	mul	r3, ip, r3
   3ad50:	add	lr, lr, #4
   3ad54:	uxth	lr, lr
   3ad58:	eor	r3, r3, lr
   3ad5c:	strh	lr, [r1, #-2]
   3ad60:	mov	r1, r6
   3ad64:	mul	r3, ip, r3
   3ad68:	str	r3, [r0, #12]
   3ad6c:	bl	3a5c0 <flatcc_builder_create_cached_vtable@@Base>
   3ad70:	subs	r7, r0, #0
   3ad74:	bne	3ad94 <flatcc_builder_end_table@@Base+0xa0>
   3ad78:	mov	r5, #0
   3ad7c:	mov	r0, r5
   3ad80:	add	sp, sp, #20
   3ad84:	ldrd	r4, [sp]
   3ad88:	ldrd	r6, [sp, #8]
   3ad8c:	add	sp, sp, #16
   3ad90:	pop	{pc}		; (ldr pc, [sp], #4)
   3ad94:	mov	r2, r5
   3ad98:	mov	r1, #0
   3ad9c:	mov	r0, r6
   3ada0:	bl	13f70 <memset@plt>
   3ada4:	ldr	ip, [r4]
   3ada8:	mov	r0, r4
   3adac:	ldr	r3, [r4, #32]
   3adb0:	ldr	r2, [r4, #76]	; 0x4c
   3adb4:	ldr	r1, [r3, #20]
   3adb8:	str	r7, [sp, #8]
   3adbc:	ldrh	r3, [r4, #130]	; 0x82
   3adc0:	add	r2, r2, r1
   3adc4:	ldr	r1, [r4, #16]
   3adc8:	sub	ip, ip, r2
   3adcc:	asr	ip, ip, #1
   3add0:	str	r2, [sp]
   3add4:	ldr	r2, [r4, #20]
   3add8:	str	ip, [sp, #4]
   3addc:	bl	3a920 <flatcc_builder_create_table@@Base>
   3ade0:	subs	r5, r0, #0
   3ade4:	beq	3ad78 <flatcc_builder_end_table@@Base+0x84>
   3ade8:	ldr	r3, [r4, #32]
   3adec:	mov	r1, #0
   3adf0:	ldr	r0, [r4, #52]	; 0x34
   3adf4:	ldr	r2, [r4, #76]	; 0x4c
   3adf8:	ldr	ip, [r3, #16]
   3adfc:	ldr	r6, [r3, #20]
   3ae00:	ldrh	lr, [r3, #28]
   3ae04:	add	r0, r0, ip
   3ae08:	ldr	ip, [r3, #24]
   3ae0c:	add	r3, r2, r6
   3ae10:	ldr	r2, [r4, #20]
   3ae14:	str	r3, [r4]
   3ae18:	str	r0, [r4, #4]
   3ae1c:	strh	lr, [r4, #8]
   3ae20:	str	ip, [r4, #12]
   3ae24:	ldr	r0, [r4, #16]
   3ae28:	bl	13f70 <memset@plt>
   3ae2c:	ldr	r3, [r4, #32]
   3ae30:	ldr	r0, [r4, #60]	; 0x3c
   3ae34:	ldr	r2, [r4, #64]	; 0x40
   3ae38:	ldr	ip, [r3]
   3ae3c:	ldmib	r3, {r1, lr}
   3ae40:	add	r0, r0, ip
   3ae44:	sub	r2, r2, ip
   3ae48:	str	r0, [r4, #16]
   3ae4c:	cmp	r2, r1
   3ae50:	ldrh	r0, [r4, #128]	; 0x80
   3ae54:	movcs	r2, r1
   3ae58:	str	lr, [r4, #20]
   3ae5c:	str	ip, [r4, #28]
   3ae60:	ldrh	ip, [r4, #130]	; 0x82
   3ae64:	str	r2, [r4, #24]
   3ae68:	ldr	r2, [r4, #156]	; 0x9c
   3ae6c:	str	r1, [r3, #4]
   3ae70:	cmp	r0, ip
   3ae74:	sub	r0, r3, #36	; 0x24
   3ae78:	strhcc	ip, [r4, #128]	; 0x80
   3ae7c:	ldrh	r1, [r3, #12]
   3ae80:	sub	r3, r2, #1
   3ae84:	str	r0, [r4, #32]
   3ae88:	strh	r1, [r4, #130]	; 0x82
   3ae8c:	str	r3, [r4, #156]	; 0x9c
   3ae90:	b	3ad7c <flatcc_builder_end_table@@Base+0x88>
   3ae94:	ldr	r3, [pc, #28]	; 3aeb8 <flatcc_builder_end_table@@Base+0x1c4>
   3ae98:	movw	r2, #1317	; 0x525
   3ae9c:	ldr	r1, [pc, #24]	; 3aebc <flatcc_builder_end_table@@Base+0x1c8>
   3aea0:	ldr	r0, [pc, #24]	; 3aec0 <flatcc_builder_end_table@@Base+0x1cc>
   3aea4:	add	r3, pc, r3
   3aea8:	add	r3, r3, #800	; 0x320
   3aeac:	add	r1, pc, r1
   3aeb0:	add	r0, pc, r0
   3aeb4:	bl	1400c <__assert_fail@plt>
   3aeb8:	andeq	lr, r1, r4, ror #30
   3aebc:	andeq	pc, r1, ip, lsr #13
   3aec0:	andeq	pc, r1, r4, lsl #19

0003aec4 <flatcc_builder_create_vector@@Base>:
   3aec4:	strd	r4, [sp, #-16]!
   3aec8:	mov	r4, r0
   3aecc:	str	r6, [sp, #8]
   3aed0:	str	lr, [sp, #12]
   3aed4:	sub	sp, sp, #88	; 0x58
   3aed8:	ldr	ip, [sp, #108]	; 0x6c
   3aedc:	ldr	r5, [pc, #328]	; 3b02c <flatcc_builder_create_vector@@Base+0x168>
   3aee0:	ldrh	r0, [sp, #104]	; 0x68
   3aee4:	cmp	r2, ip
   3aee8:	add	r5, pc, r5
   3aeec:	bhi	3afe0 <flatcc_builder_create_vector@@Base+0x11c>
   3aef0:	ldrh	ip, [r4, #128]	; 0x80
   3aef4:	cmp	r0, #4
   3aef8:	mul	r3, r3, r2
   3aefc:	movcc	r0, #4
   3af00:	str	r2, [sp, #12]
   3af04:	mov	r2, #1
   3af08:	ldr	r6, [r4, #136]	; 0x88
   3af0c:	mov	lr, #4
   3af10:	str	r2, [sp, #20]
   3af14:	cmp	ip, r0
   3af18:	add	ip, sp, #12
   3af1c:	str	lr, [sp, #16]
   3af20:	strhcc	r0, [r4, #128]	; 0x80
   3af24:	sub	r2, r6, r3
   3af28:	sub	r0, r0, #1
   3af2c:	cmp	r3, #0
   3af30:	and	r0, r0, r2
   3af34:	str	ip, [sp, #24]
   3af38:	moveq	r2, lr
   3af3c:	str	lr, [sp, #28]
   3af40:	beq	3af5c <flatcc_builder_create_vector@@Base+0x98>
   3af44:	add	r2, r3, lr
   3af48:	str	r1, [sp, #32]
   3af4c:	mov	r1, #2
   3af50:	str	r2, [sp, #16]
   3af54:	str	r1, [sp, #20]
   3af58:	str	r3, [sp, #36]	; 0x24
   3af5c:	cmp	r0, #0
   3af60:	bne	3afb0 <flatcc_builder_create_vector@@Base+0xec>
   3af64:	sub	r5, r6, r2
   3af68:	cmp	r6, r5
   3af6c:	ble	3b008 <flatcc_builder_create_vector@@Base+0x144>
   3af70:	mov	r3, r5
   3af74:	add	r1, sp, #24
   3af78:	str	r2, [sp]
   3af7c:	ldr	r2, [sp, #20]
   3af80:	ldr	r0, [r4, #36]	; 0x24
   3af84:	ldr	r6, [r4, #44]	; 0x2c
   3af88:	blx	r6
   3af8c:	cmp	r0, #0
   3af90:	bne	3b004 <flatcc_builder_create_vector@@Base+0x140>
   3af94:	mov	r0, r5
   3af98:	str	r5, [r4, #136]	; 0x88
   3af9c:	add	sp, sp, #88	; 0x58
   3afa0:	ldrd	r4, [sp]
   3afa4:	ldr	r6, [sp, #8]
   3afa8:	add	sp, sp, #12
   3afac:	pop	{pc}		; (ldr pc, [sp], #4)
   3afb0:	ldr	r1, [pc, #120]	; 3b030 <flatcc_builder_create_vector@@Base+0x16c>
   3afb4:	add	r2, r2, r0
   3afb8:	ldr	r3, [sp, #20]
   3afbc:	str	r2, [sp, #16]
   3afc0:	ldr	ip, [r5, r1]
   3afc4:	add	r1, sp, #88	; 0x58
   3afc8:	add	r3, r3, #1
   3afcc:	add	r1, r1, r3, lsl #3
   3afd0:	str	r3, [sp, #20]
   3afd4:	str	ip, [r1, #-72]	; 0xffffffb8
   3afd8:	str	r0, [r1, #-68]	; 0xffffffbc
   3afdc:	b	3af64 <flatcc_builder_create_vector@@Base+0xa0>
   3afe0:	ldr	r3, [pc, #76]	; 3b034 <flatcc_builder_create_vector@@Base+0x170>
   3afe4:	movw	r2, #1365	; 0x555
   3afe8:	ldr	r1, [pc, #72]	; 3b038 <flatcc_builder_create_vector@@Base+0x174>
   3afec:	ldr	r0, [pc, #72]	; 3b03c <flatcc_builder_create_vector@@Base+0x178>
   3aff0:	add	r3, pc, r3
   3aff4:	add	r3, r3, #828	; 0x33c
   3aff8:	add	r1, pc, r1
   3affc:	add	r0, pc, r0
   3b000:	bl	1400c <__assert_fail@plt>
   3b004:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   3b008:	ldr	r3, [pc, #48]	; 3b040 <flatcc_builder_create_vector@@Base+0x17c>
   3b00c:	movw	r2, #647	; 0x287
   3b010:	ldr	r1, [pc, #44]	; 3b044 <flatcc_builder_create_vector@@Base+0x180>
   3b014:	ldr	r0, [pc, #44]	; 3b048 <flatcc_builder_create_vector@@Base+0x184>
   3b018:	add	r3, pc, r3
   3b01c:	add	r3, r3, #44	; 0x2c
   3b020:	add	r1, pc, r1
   3b024:	add	r0, pc, r0
   3b028:	bl	1400c <__assert_fail@plt>
   3b02c:	andeq	r0, r3, r0, lsl r1
   3b030:	muleq	r0, r8, r0
   3b034:	andeq	lr, r1, r8, lsl lr
   3b038:	andeq	pc, r1, r0, ror #10
   3b03c:	andeq	pc, r1, r4, ror #16
   3b040:	strdeq	lr, [r1], -r0
   3b044:	andeq	pc, r1, r8, lsr r5	; <UNPREDICTABLE>
   3b048:			; <UNDEFINED> instruction: 0x0000ddb8

0003b04c <flatcc_builder_end_vector@@Base>:
   3b04c:	ldr	r1, [r0, #32]
   3b050:	strd	r4, [sp, #-12]!
   3b054:	ldrh	r3, [r1, #14]
   3b058:	str	lr, [sp, #8]
   3b05c:	sub	sp, sp, #12
   3b060:	cmp	r3, #4
   3b064:	bne	3b11c <flatcc_builder_end_vector@@Base+0xd0>
   3b068:	ldrh	ip, [r0, #130]	; 0x82
   3b06c:	mov	r4, r0
   3b070:	ldr	r3, [r1, #16]
   3b074:	ldr	r2, [r1, #20]
   3b078:	ldr	r1, [r1, #24]
   3b07c:	str	r1, [sp, #4]
   3b080:	ldr	r1, [r0, #16]
   3b084:	str	ip, [sp]
   3b088:	bl	3aec4 <flatcc_builder_create_vector@@Base>
   3b08c:	subs	r5, r0, #0
   3b090:	beq	3b108 <flatcc_builder_end_vector@@Base+0xbc>
   3b094:	mov	r1, #0
   3b098:	ldr	r0, [r4, #16]
   3b09c:	ldr	r2, [r4, #20]
   3b0a0:	bl	13f70 <memset@plt>
   3b0a4:	ldr	r3, [r4, #32]
   3b0a8:	ldr	r0, [r4, #60]	; 0x3c
   3b0ac:	ldr	r2, [r4, #64]	; 0x40
   3b0b0:	ldr	ip, [r3]
   3b0b4:	ldmib	r3, {r1, lr}
   3b0b8:	add	r0, r0, ip
   3b0bc:	sub	r2, r2, ip
   3b0c0:	str	r0, [r4, #16]
   3b0c4:	cmp	r2, r1
   3b0c8:	ldrh	r0, [r4, #128]	; 0x80
   3b0cc:	movcs	r2, r1
   3b0d0:	str	lr, [r4, #20]
   3b0d4:	str	ip, [r4, #28]
   3b0d8:	ldrh	ip, [r4, #130]	; 0x82
   3b0dc:	str	r2, [r4, #24]
   3b0e0:	ldr	r2, [r4, #156]	; 0x9c
   3b0e4:	str	r1, [r3, #4]
   3b0e8:	cmp	r0, ip
   3b0ec:	sub	r0, r3, #36	; 0x24
   3b0f0:	strhcc	ip, [r4, #128]	; 0x80
   3b0f4:	ldrh	r1, [r3, #12]
   3b0f8:	sub	r3, r2, #1
   3b0fc:	str	r0, [r4, #32]
   3b100:	strh	r1, [r4, #130]	; 0x82
   3b104:	str	r3, [r4, #156]	; 0x9c
   3b108:	mov	r0, r5
   3b10c:	add	sp, sp, #12
   3b110:	ldrd	r4, [sp]
   3b114:	add	sp, sp, #8
   3b118:	pop	{pc}		; (ldr pc, [sp], #4)
   3b11c:	ldr	r3, [pc, #28]	; 3b140 <flatcc_builder_end_vector@@Base+0xf4>
   3b120:	movw	r2, #1400	; 0x578
   3b124:	ldr	r1, [pc, #24]	; 3b144 <flatcc_builder_end_vector@@Base+0xf8>
   3b128:	ldr	r0, [pc, #24]	; 3b148 <flatcc_builder_end_vector@@Base+0xfc>
   3b12c:	add	r3, pc, r3
   3b130:	add	r3, r3, #860	; 0x35c
   3b134:	add	r1, pc, r1
   3b138:	add	r0, pc, r0
   3b13c:	bl	1400c <__assert_fail@plt>
   3b140:	ldrdeq	lr, [r1], -ip
   3b144:	andeq	pc, r1, r4, lsr #8
   3b148:	andeq	pc, r1, r0, ror r5	; <UNPREDICTABLE>

0003b14c <flatcc_builder_vector_count@@Base>:
   3b14c:	ldr	r3, [r0, #32]
   3b150:	ldr	r0, [r3, #20]
   3b154:	bx	lr

0003b158 <flatcc_builder_vector_edit@@Base>:
   3b158:	ldr	r0, [r0, #16]
   3b15c:	bx	lr

0003b160 <flatcc_builder_create_offset_vector_direct@@Base>:
   3b160:	cmn	r2, #-1073741823	; 0xc0000001
   3b164:	bhi	3b170 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3b168:	mov	r3, #0
   3b16c:	b	38688 <flatcc_builder_default_alloc@@Base+0x458>
   3b170:	mov	r0, #0
   3b174:	bx	lr

0003b178 <flatcc_builder_end_offset_vector@@Base>:
   3b178:	ldr	r3, [r0, #32]
   3b17c:	strd	r4, [sp, #-16]!
   3b180:	ldrh	r2, [r3, #14]
   3b184:	str	r6, [sp, #8]
   3b188:	str	lr, [sp, #12]
   3b18c:	cmp	r2, #5
   3b190:	bne	3b234 <flatcc_builder_end_offset_vector@@Base+0xbc>
   3b194:	ldr	r1, [r0, #16]
   3b198:	mov	r4, r0
   3b19c:	ldr	r2, [r3, #20]
   3b1a0:	bl	3b160 <flatcc_builder_create_offset_vector_direct@@Base>
   3b1a4:	subs	r5, r0, #0
   3b1a8:	beq	3b220 <flatcc_builder_end_offset_vector@@Base+0xa8>
   3b1ac:	mov	r1, #0
   3b1b0:	ldr	r0, [r4, #16]
   3b1b4:	ldr	r2, [r4, #20]
   3b1b8:	bl	13f70 <memset@plt>
   3b1bc:	ldr	r3, [r4, #32]
   3b1c0:	ldr	r0, [r4, #60]	; 0x3c
   3b1c4:	ldr	r2, [r4, #64]	; 0x40
   3b1c8:	ldr	ip, [r3]
   3b1cc:	ldmib	r3, {r1, lr}
   3b1d0:	add	r0, r0, ip
   3b1d4:	sub	r2, r2, ip
   3b1d8:	str	r0, [r4, #16]
   3b1dc:	cmp	r2, r1
   3b1e0:	ldrh	r0, [r4, #128]	; 0x80
   3b1e4:	movcs	r2, r1
   3b1e8:	str	lr, [r4, #20]
   3b1ec:	str	ip, [r4, #28]
   3b1f0:	ldrh	ip, [r4, #130]	; 0x82
   3b1f4:	str	r2, [r4, #24]
   3b1f8:	ldr	r2, [r4, #156]	; 0x9c
   3b1fc:	str	r1, [r3, #4]
   3b200:	cmp	r0, ip
   3b204:	sub	r0, r3, #36	; 0x24
   3b208:	strhcc	ip, [r4, #128]	; 0x80
   3b20c:	ldrh	r1, [r3, #12]
   3b210:	sub	r3, r2, #1
   3b214:	str	r0, [r4, #32]
   3b218:	strh	r1, [r4, #130]	; 0x82
   3b21c:	str	r3, [r4, #156]	; 0x9c
   3b220:	mov	r0, r5
   3b224:	ldrd	r4, [sp]
   3b228:	ldr	r6, [sp, #8]
   3b22c:	add	sp, sp, #12
   3b230:	pop	{pc}		; (ldr pc, [sp], #4)
   3b234:	ldr	r3, [pc, #28]	; 3b258 <flatcc_builder_end_offset_vector@@Base+0xe0>
   3b238:	movw	r2, #1480	; 0x5c8
   3b23c:	ldr	r1, [pc, #24]	; 3b25c <flatcc_builder_end_offset_vector@@Base+0xe4>
   3b240:	ldr	r0, [pc, #24]	; 3b260 <flatcc_builder_end_offset_vector@@Base+0xe8>
   3b244:	add	r3, pc, r3
   3b248:	add	r3, r3, #888	; 0x378
   3b24c:	add	r1, pc, r1
   3b250:	add	r0, pc, r0
   3b254:	bl	1400c <__assert_fail@plt>
   3b258:	andeq	lr, r1, r4, asr #23
   3b25c:	andeq	pc, r1, ip, lsl #6
   3b260:	andeq	pc, r1, r4, asr #9

0003b264 <flatcc_builder_create_offset_vector@@Base>:
   3b264:	strd	r4, [sp, #-16]!
   3b268:	mov	r5, r2
   3b26c:	mov	r4, r0
   3b270:	str	r6, [sp, #8]
   3b274:	mov	r6, r1
   3b278:	str	lr, [sp, #12]
   3b27c:	bl	3a0f0 <flatcc_builder_start_offset_vector@@Base>
   3b280:	cmp	r0, #0
   3b284:	beq	3b29c <flatcc_builder_create_offset_vector@@Base+0x38>
   3b288:	ldrd	r4, [sp]
   3b28c:	mov	r0, #0
   3b290:	ldr	r6, [sp, #8]
   3b294:	add	sp, sp, #12
   3b298:	pop	{pc}		; (ldr pc, [sp], #4)
   3b29c:	mov	r1, r5
   3b2a0:	mov	r0, r4
   3b2a4:	bl	399b4 <flatcc_builder_extend_offset_vector@@Base>
   3b2a8:	cmp	r0, #0
   3b2ac:	beq	3b288 <flatcc_builder_create_offset_vector@@Base+0x24>
   3b2b0:	lsl	r2, r5, #2
   3b2b4:	mov	r1, r6
   3b2b8:	bl	13eb0 <memcpy@plt>
   3b2bc:	mov	r0, r4
   3b2c0:	ldrd	r4, [sp]
   3b2c4:	ldr	r6, [sp, #8]
   3b2c8:	ldr	lr, [sp, #12]
   3b2cc:	add	sp, sp, #16
   3b2d0:	b	3b178 <flatcc_builder_end_offset_vector@@Base>

0003b2d4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3b2d4:	ldr	r2, [r0, #32]
   3b2d8:	strd	r4, [sp, #-16]!
   3b2dc:	ldrh	ip, [r2, #14]
   3b2e0:	str	r6, [sp, #8]
   3b2e4:	str	lr, [sp, #12]
   3b2e8:	cmp	ip, #5
   3b2ec:	bne	3b3a4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   3b2f0:	ldr	r2, [r2, #20]
   3b2f4:	cmn	r2, #-1073741823	; 0xc0000001
   3b2f8:	bhi	3b314 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
   3b2fc:	mov	r3, r1
   3b300:	ldr	r1, [r0, #16]
   3b304:	mov	r4, r0
   3b308:	bl	38688 <flatcc_builder_default_alloc@@Base+0x458>
   3b30c:	subs	r5, r0, #0
   3b310:	bne	3b32c <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   3b314:	mov	r5, #0
   3b318:	mov	r0, r5
   3b31c:	ldrd	r4, [sp]
   3b320:	ldr	r6, [sp, #8]
   3b324:	add	sp, sp, #12
   3b328:	pop	{pc}		; (ldr pc, [sp], #4)
   3b32c:	mov	r1, #0
   3b330:	ldr	r0, [r4, #16]
   3b334:	ldr	r2, [r4, #20]
   3b338:	bl	13f70 <memset@plt>
   3b33c:	ldr	r3, [r4, #32]
   3b340:	ldr	r0, [r4, #60]	; 0x3c
   3b344:	ldr	r2, [r4, #64]	; 0x40
   3b348:	ldr	ip, [r3]
   3b34c:	ldmib	r3, {r1, lr}
   3b350:	add	r0, r0, ip
   3b354:	sub	r2, r2, ip
   3b358:	str	r0, [r4, #16]
   3b35c:	cmp	r2, r1
   3b360:	ldrh	r0, [r4, #128]	; 0x80
   3b364:	movcs	r2, r1
   3b368:	str	lr, [r4, #20]
   3b36c:	str	ip, [r4, #28]
   3b370:	ldrh	ip, [r4, #130]	; 0x82
   3b374:	str	r2, [r4, #24]
   3b378:	ldr	r2, [r4, #156]	; 0x9c
   3b37c:	str	r1, [r3, #4]
   3b380:	cmp	r0, ip
   3b384:	sub	r0, r3, #36	; 0x24
   3b388:	strhcc	ip, [r4, #128]	; 0x80
   3b38c:	ldrh	r1, [r3, #12]
   3b390:	sub	r3, r2, #1
   3b394:	str	r0, [r4, #32]
   3b398:	strh	r1, [r4, #130]	; 0x82
   3b39c:	str	r3, [r4, #156]	; 0x9c
   3b3a0:	b	3b318 <flatcc_builder_end_offset_vector_for_unions@@Base+0x44>
   3b3a4:	ldr	r3, [pc, #28]	; 3b3c8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf4>
   3b3a8:	movw	r2, #1493	; 0x5d5
   3b3ac:	ldr	r1, [pc, #24]	; 3b3cc <flatcc_builder_end_offset_vector_for_unions@@Base+0xf8>
   3b3b0:	ldr	r0, [pc, #24]	; 3b3d0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xfc>
   3b3b4:	add	r3, pc, r3
   3b3b8:	add	r3, r3, #924	; 0x39c
   3b3bc:	add	r1, pc, r1
   3b3c0:	add	r0, pc, r0
   3b3c4:	bl	1400c <__assert_fail@plt>
   3b3c8:	andeq	lr, r1, r4, asr sl
   3b3cc:	muleq	r1, ip, r1
   3b3d0:	andeq	pc, r1, r4, asr r3	; <UNPREDICTABLE>

0003b3d4 <flatcc_builder_offset_vector_edit@@Base>:
   3b3d4:	ldr	r0, [r0, #16]
   3b3d8:	bx	lr

0003b3dc <flatcc_builder_offset_vector_count@@Base>:
   3b3dc:	ldr	r3, [r0, #32]
   3b3e0:	ldr	r0, [r3, #20]
   3b3e4:	bx	lr

0003b3e8 <flatcc_builder_create_union_vector_direct@@Base>:
   3b3e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3b3ec:	mov	r4, r0
   3b3f0:	strd	r6, [sp, #8]
   3b3f4:	str	r8, [sp, #16]
   3b3f8:	str	lr, [sp, #20]
   3b3fc:	sub	sp, sp, #8
   3b400:	ldr	r5, [sp, #32]
   3b404:	cmn	r5, #-1073741823	; 0xc0000001
   3b408:	bhi	3b46c <flatcc_builder_create_union_vector_direct@@Base+0x84>
   3b40c:	mov	r6, r1
   3b410:	mov	r7, r2
   3b414:	mov	r1, r3
   3b418:	mov	r0, r6
   3b41c:	mov	r3, r2
   3b420:	mov	r2, r5
   3b424:	bl	38688 <flatcc_builder_default_alloc@@Base+0x458>
   3b428:	subs	r8, r0, #0
   3b42c:	beq	3b46c <flatcc_builder_create_union_vector_direct@@Base+0x84>
   3b430:	mvn	ip, #0
   3b434:	mov	r3, #1
   3b438:	mov	r2, r5
   3b43c:	mov	r1, r7
   3b440:	mov	r0, r6
   3b444:	stm	sp, {r3, ip}
   3b448:	bl	3aec4 <flatcc_builder_create_vector@@Base>
   3b44c:	stm	r4, {r0, r8}
   3b450:	mov	r0, r4
   3b454:	add	sp, sp, #8
   3b458:	ldrd	r4, [sp]
   3b45c:	ldrd	r6, [sp, #8]
   3b460:	ldr	r8, [sp, #16]
   3b464:	add	sp, sp, #20
   3b468:	pop	{pc}		; (ldr pc, [sp], #4)
   3b46c:	mov	r3, #0
   3b470:	str	r3, [r4]
   3b474:	str	r3, [r4, #4]
   3b478:	b	3b450 <flatcc_builder_create_union_vector_direct@@Base+0x68>

0003b47c <flatcc_builder_create_union_vector@@Base>:
   3b47c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3b480:	mov	r5, r1
   3b484:	mov	r4, r2
   3b488:	strd	r6, [sp, #8]
   3b48c:	mov	r6, r0
   3b490:	mov	r0, r1
   3b494:	str	r8, [sp, #16]
   3b498:	mov	r7, r3
   3b49c:	str	lr, [sp, #20]
   3b4a0:	sub	sp, sp, #16
   3b4a4:	bl	3a0f0 <flatcc_builder_start_offset_vector@@Base>
   3b4a8:	cmp	r0, #0
   3b4ac:	beq	3b4d8 <flatcc_builder_create_union_vector@@Base+0x5c>
   3b4b0:	mov	r3, #0
   3b4b4:	str	r3, [r6]
   3b4b8:	str	r3, [r6, #4]
   3b4bc:	mov	r0, r6
   3b4c0:	add	sp, sp, #16
   3b4c4:	ldrd	r4, [sp]
   3b4c8:	ldrd	r6, [sp, #8]
   3b4cc:	ldr	r8, [sp, #16]
   3b4d0:	add	sp, sp, #20
   3b4d4:	pop	{pc}		; (ldr pc, [sp], #4)
   3b4d8:	mov	r1, r7
   3b4dc:	mov	r0, r5
   3b4e0:	bl	399b4 <flatcc_builder_extend_offset_vector@@Base>
   3b4e4:	cmp	r0, #0
   3b4e8:	beq	3b4b0 <flatcc_builder_create_union_vector@@Base+0x34>
   3b4ec:	ldr	r8, [r5, #20]
   3b4f0:	ldr	r3, [r5, #24]
   3b4f4:	add	r1, r7, r8
   3b4f8:	cmp	r1, r3
   3b4fc:	str	r1, [r5, #20]
   3b500:	bcs	3b5ec <flatcc_builder_create_union_vector@@Base+0x170>
   3b504:	ldr	r2, [r5, #16]
   3b508:	adds	r8, r2, r8
   3b50c:	beq	3b4b0 <flatcc_builder_create_union_vector@@Base+0x34>
   3b510:	mov	r0, r5
   3b514:	bl	3b3d4 <flatcc_builder_offset_vector_edit@@Base>
   3b518:	cmp	r7, #0
   3b51c:	mov	r3, r0
   3b520:	beq	3b550 <flatcc_builder_create_union_vector@@Base+0xd4>
   3b524:	add	r2, r4, r7, lsl #3
   3b528:	mov	r1, r4
   3b52c:	sub	lr, r8, #1
   3b530:	sub	ip, r0, #4
   3b534:	ldrb	r4, [r1]
   3b538:	add	r1, r1, #8
   3b53c:	strb	r4, [lr, #1]!
   3b540:	ldr	r4, [r1, #-4]
   3b544:	cmp	r1, r2
   3b548:	str	r4, [ip, #4]!
   3b54c:	bne	3b534 <flatcc_builder_create_union_vector@@Base+0xb8>
   3b550:	mov	r2, r8
   3b554:	mov	r1, r5
   3b558:	str	r7, [sp]
   3b55c:	add	r0, sp, #8
   3b560:	bl	3b3e8 <flatcc_builder_create_union_vector_direct@@Base>
   3b564:	mov	r1, #0
   3b568:	ldr	r0, [r5, #16]
   3b56c:	ldr	r2, [r5, #20]
   3b570:	ldr	r7, [sp, #8]
   3b574:	ldr	r4, [sp, #12]
   3b578:	bl	13f70 <memset@plt>
   3b57c:	ldr	r3, [r5, #32]
   3b580:	str	r7, [r6]
   3b584:	ldr	r0, [r5, #60]	; 0x3c
   3b588:	str	r4, [r6, #4]
   3b58c:	ldr	r2, [r5, #64]	; 0x40
   3b590:	ldr	ip, [r3]
   3b594:	ldmib	r3, {r1, lr}
   3b598:	add	r0, r0, ip
   3b59c:	sub	r2, r2, ip
   3b5a0:	str	r0, [r5, #16]
   3b5a4:	cmp	r2, r1
   3b5a8:	ldrh	r0, [r5, #128]	; 0x80
   3b5ac:	movcs	r2, r1
   3b5b0:	str	lr, [r5, #20]
   3b5b4:	str	ip, [r5, #28]
   3b5b8:	ldrh	ip, [r5, #130]	; 0x82
   3b5bc:	str	r2, [r5, #24]
   3b5c0:	ldr	r2, [r5, #156]	; 0x9c
   3b5c4:	str	r1, [r3, #4]
   3b5c8:	cmp	r0, ip
   3b5cc:	sub	r0, r3, #36	; 0x24
   3b5d0:	strhcc	ip, [r5, #128]	; 0x80
   3b5d4:	ldrh	r1, [r3, #12]
   3b5d8:	sub	r3, r2, #1
   3b5dc:	str	r0, [r5, #32]
   3b5e0:	strh	r1, [r5, #130]	; 0x82
   3b5e4:	str	r3, [r5, #156]	; 0x9c
   3b5e8:	b	3b4bc <flatcc_builder_create_union_vector@@Base+0x40>
   3b5ec:	add	r1, r1, #1
   3b5f0:	mvn	r2, #3
   3b5f4:	mov	r0, r5
   3b5f8:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3b5fc:	cmp	r0, #0
   3b600:	beq	3b504 <flatcc_builder_create_union_vector@@Base+0x88>
   3b604:	b	3b4b0 <flatcc_builder_create_union_vector@@Base+0x34>

0003b608 <flatcc_builder_start_union_vector@@Base>:
   3b608:	mov	r1, #4
   3b60c:	strd	r4, [sp, #-16]!
   3b610:	mov	r4, r0
   3b614:	str	r6, [sp, #8]
   3b618:	str	lr, [sp, #12]
   3b61c:	bl	38564 <flatcc_builder_default_alloc@@Base+0x334>
   3b620:	cmp	r0, #0
   3b624:	bne	3b67c <flatcc_builder_start_union_vector@@Base+0x74>
   3b628:	ldr	ip, [r4, #28]
   3b62c:	mov	lr, #8
   3b630:	mov	r5, #7
   3b634:	ldr	r3, [r4, #32]
   3b638:	ldr	r2, [r4, #64]	; 0x40
   3b63c:	ldr	r1, [r4, #60]	; 0x3c
   3b640:	strh	r5, [r3, #14]
   3b644:	str	lr, [r3, #16]
   3b648:	sub	r2, r2, ip
   3b64c:	str	r0, [r3, #20]
   3b650:	cmn	r2, #4
   3b654:	mvnhi	r2, #3
   3b658:	add	r1, r1, ip
   3b65c:	str	r1, [r4, #16]
   3b660:	str	r2, [r4, #24]
   3b664:	mvn	r2, #3
   3b668:	str	r2, [r3, #4]
   3b66c:	ldrd	r4, [sp]
   3b670:	ldr	r6, [sp, #8]
   3b674:	add	sp, sp, #12
   3b678:	pop	{pc}		; (ldr pc, [sp], #4)
   3b67c:	mvn	r0, #0
   3b680:	b	3b66c <flatcc_builder_start_union_vector@@Base+0x64>

0003b684 <flatcc_builder_union_vector_edit@@Base>:
   3b684:	ldr	r0, [r0, #16]
   3b688:	bx	lr

0003b68c <flatcc_builder_union_vector_count@@Base>:
   3b68c:	ldr	r3, [r0, #32]
   3b690:	ldr	r0, [r3, #20]
   3b694:	bx	lr

0003b698 <flatcc_builder_end_union_vector@@Base>:
   3b698:	ldr	r3, [r1, #32]
   3b69c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3b6a0:	ldrh	r3, [r3, #14]
   3b6a4:	strd	r6, [sp, #8]
   3b6a8:	str	r8, [sp, #16]
   3b6ac:	str	lr, [sp, #20]
   3b6b0:	sub	sp, sp, #16
   3b6b4:	cmp	r3, #7
   3b6b8:	bne	3b818 <flatcc_builder_end_union_vector@@Base+0x180>
   3b6bc:	mov	r4, r1
   3b6c0:	mov	r6, r0
   3b6c4:	mov	r0, r1
   3b6c8:	bl	3b68c <flatcc_builder_union_vector_count@@Base>
   3b6cc:	ldr	r8, [r4, #20]
   3b6d0:	lsl	r7, r0, #2
   3b6d4:	mov	r5, r0
   3b6d8:	ldr	r3, [r4, #24]
   3b6dc:	add	r1, r7, r0
   3b6e0:	add	r1, r1, r8
   3b6e4:	cmp	r1, r3
   3b6e8:	str	r1, [r4, #20]
   3b6ec:	bcs	3b7f0 <flatcc_builder_end_union_vector@@Base+0x158>
   3b6f0:	ldr	r3, [r4, #16]
   3b6f4:	adds	r8, r3, r8
   3b6f8:	beq	3b808 <flatcc_builder_end_union_vector@@Base+0x170>
   3b6fc:	mov	r0, r4
   3b700:	add	r7, r8, r7
   3b704:	bl	3b684 <flatcc_builder_union_vector_edit@@Base>
   3b708:	cmp	r5, #0
   3b70c:	beq	3b738 <flatcc_builder_end_union_vector@@Base+0xa0>
   3b710:	add	r3, r0, r5, lsl #3
   3b714:	sub	ip, r7, #1
   3b718:	sub	r1, r8, #4
   3b71c:	ldrb	lr, [r0]
   3b720:	add	r0, r0, #8
   3b724:	strb	lr, [ip, #1]!
   3b728:	ldr	lr, [r0, #-4]
   3b72c:	cmp	r0, r3
   3b730:	str	lr, [r1, #4]!
   3b734:	bne	3b71c <flatcc_builder_end_union_vector@@Base+0x84>
   3b738:	mov	r3, r8
   3b73c:	mov	r2, r7
   3b740:	str	r5, [sp]
   3b744:	mov	r1, r4
   3b748:	add	r0, sp, #8
   3b74c:	bl	3b3e8 <flatcc_builder_create_union_vector_direct@@Base>
   3b750:	mov	r1, #0
   3b754:	ldr	r0, [r4, #16]
   3b758:	ldr	r2, [r4, #20]
   3b75c:	ldr	r7, [sp, #8]
   3b760:	ldr	r5, [sp, #12]
   3b764:	bl	13f70 <memset@plt>
   3b768:	ldr	r3, [r4, #32]
   3b76c:	str	r7, [r6]
   3b770:	ldr	r0, [r4, #60]	; 0x3c
   3b774:	str	r5, [r6, #4]
   3b778:	ldr	r2, [r4, #64]	; 0x40
   3b77c:	ldr	ip, [r3]
   3b780:	ldmib	r3, {r1, lr}
   3b784:	add	r0, r0, ip
   3b788:	sub	r2, r2, ip
   3b78c:	str	r0, [r4, #16]
   3b790:	cmp	r2, r1
   3b794:	ldrh	r0, [r4, #128]	; 0x80
   3b798:	movcs	r2, r1
   3b79c:	str	lr, [r4, #20]
   3b7a0:	str	ip, [r4, #28]
   3b7a4:	ldrh	ip, [r4, #130]	; 0x82
   3b7a8:	str	r2, [r4, #24]
   3b7ac:	ldr	r2, [r4, #156]	; 0x9c
   3b7b0:	str	r1, [r3, #4]
   3b7b4:	cmp	r0, ip
   3b7b8:	sub	r0, r3, #36	; 0x24
   3b7bc:	strhcc	ip, [r4, #128]	; 0x80
   3b7c0:	ldrh	r1, [r3, #12]
   3b7c4:	sub	r3, r2, #1
   3b7c8:	str	r0, [r4, #32]
   3b7cc:	strh	r1, [r4, #130]	; 0x82
   3b7d0:	str	r3, [r4, #156]	; 0x9c
   3b7d4:	mov	r0, r6
   3b7d8:	add	sp, sp, #16
   3b7dc:	ldrd	r4, [sp]
   3b7e0:	ldrd	r6, [sp, #8]
   3b7e4:	ldr	r8, [sp, #16]
   3b7e8:	add	sp, sp, #20
   3b7ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3b7f0:	add	r1, r1, #1
   3b7f4:	mvn	r2, #3
   3b7f8:	mov	r0, r4
   3b7fc:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3b800:	cmp	r0, #0
   3b804:	beq	3b6f0 <flatcc_builder_end_union_vector@@Base+0x58>
   3b808:	mov	r3, #0
   3b80c:	str	r3, [r6]
   3b810:	str	r3, [r6, #4]
   3b814:	b	3b7d4 <flatcc_builder_end_union_vector@@Base+0x13c>
   3b818:	ldr	r3, [pc, #28]	; 3b83c <flatcc_builder_end_union_vector@@Base+0x1a4>
   3b81c:	movw	r2, #1617	; 0x651
   3b820:	ldr	r1, [pc, #24]	; 3b840 <flatcc_builder_end_union_vector@@Base+0x1a8>
   3b824:	ldr	r0, [pc, #24]	; 3b844 <flatcc_builder_end_union_vector@@Base+0x1ac>
   3b828:	add	r3, pc, r3
   3b82c:	add	r3, r3, #968	; 0x3c8
   3b830:	add	r1, pc, r1
   3b834:	add	r0, pc, r0
   3b838:	bl	1400c <__assert_fail@plt>
   3b83c:	andeq	lr, r1, r0, ror #11
   3b840:	andeq	lr, r1, r8, lsr #26
   3b844:	andeq	pc, r1, r0, asr #32

0003b848 <flatcc_builder_extend_union_vector@@Base>:
   3b848:	ldr	ip, [r0, #32]
   3b84c:	strd	r4, [sp, #-16]!
   3b850:	ldr	r3, [ip, #20]
   3b854:	str	r6, [sp, #8]
   3b858:	str	lr, [sp, #12]
   3b85c:	adds	r2, r1, r3
   3b860:	movcs	r3, #1
   3b864:	movcc	r3, #0
   3b868:	cmn	r2, #-536870911	; 0xe0000001
   3b86c:	movls	r4, #0
   3b870:	movhi	r4, #1
   3b874:	orrs	r4, r3, r4
   3b878:	bne	3b8d0 <flatcc_builder_extend_union_vector@@Base+0x88>
   3b87c:	ldr	r6, [r0, #20]
   3b880:	mov	r5, r0
   3b884:	ldr	r3, [r0, #24]
   3b888:	str	r2, [ip, #20]
   3b88c:	add	r1, r6, r1, lsl #3
   3b890:	cmp	r1, r3
   3b894:	str	r1, [r0, #20]
   3b898:	bcs	3b8b4 <flatcc_builder_extend_union_vector@@Base+0x6c>
   3b89c:	ldr	r0, [r5, #16]
   3b8a0:	add	r0, r0, r6
   3b8a4:	ldrd	r4, [sp]
   3b8a8:	ldr	r6, [sp, #8]
   3b8ac:	add	sp, sp, #12
   3b8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3b8b4:	add	r1, r1, #1
   3b8b8:	mvn	r2, #3
   3b8bc:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3b8c0:	cmp	r0, #0
   3b8c4:	beq	3b89c <flatcc_builder_extend_union_vector@@Base+0x54>
   3b8c8:	mov	r0, r4
   3b8cc:	b	3b8a4 <flatcc_builder_extend_union_vector@@Base+0x5c>
   3b8d0:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>

0003b8d4 <flatcc_builder_truncate_union_vector@@Base>:
   3b8d4:	mov	r3, r0
   3b8d8:	ldr	r0, [r0, #32]
   3b8dc:	str	r4, [sp, #-8]!
   3b8e0:	ldrh	r2, [r0, #14]
   3b8e4:	str	lr, [sp, #4]
   3b8e8:	cmp	r2, #7
   3b8ec:	bne	3b93c <flatcc_builder_truncate_union_vector@@Base+0x68>
   3b8f0:	mov	lr, r1
   3b8f4:	ldr	r1, [r0, #20]
   3b8f8:	cmp	r1, lr
   3b8fc:	bcc	3b960 <flatcc_builder_truncate_union_vector@@Base+0x8c>
   3b900:	ldr	r2, [r0, #16]
   3b904:	sub	ip, r1, lr
   3b908:	mov	r1, #0
   3b90c:	str	ip, [r0, #20]
   3b910:	ldr	r0, [r3, #16]
   3b914:	ldr	ip, [r3, #20]
   3b918:	mul	r2, r2, lr
   3b91c:	sub	ip, ip, r2
   3b920:	add	r0, r0, ip
   3b924:	str	ip, [r3, #20]
   3b928:	bl	13f70 <memset@plt>
   3b92c:	ldr	r4, [sp]
   3b930:	add	sp, sp, #4
   3b934:	mov	r0, #0
   3b938:	pop	{pc}		; (ldr pc, [sp], #4)
   3b93c:	ldr	r3, [pc, #64]	; 3b984 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3b940:	movw	r2, #1665	; 0x681
   3b944:	ldr	r1, [pc, #60]	; 3b988 <flatcc_builder_truncate_union_vector@@Base+0xb4>
   3b948:	ldr	r0, [pc, #60]	; 3b98c <flatcc_builder_truncate_union_vector@@Base+0xb8>
   3b94c:	add	r3, pc, r3
   3b950:	add	r3, r3, #1000	; 0x3e8
   3b954:	add	r1, pc, r1
   3b958:	add	r0, pc, r0
   3b95c:	bl	1400c <__assert_fail@plt>
   3b960:	ldr	r3, [pc, #40]	; 3b990 <flatcc_builder_truncate_union_vector@@Base+0xbc>
   3b964:	movw	r2, #1666	; 0x682
   3b968:	ldr	r1, [pc, #36]	; 3b994 <flatcc_builder_truncate_union_vector@@Base+0xc0>
   3b96c:	ldr	r0, [pc, #36]	; 3b998 <flatcc_builder_truncate_union_vector@@Base+0xc4>
   3b970:	add	r3, pc, r3
   3b974:	add	r3, r3, #1000	; 0x3e8
   3b978:	add	r1, pc, r1
   3b97c:	add	r0, pc, r0
   3b980:	bl	1400c <__assert_fail@plt>
   3b984:			; <UNDEFINED> instruction: 0x0001e4bc
   3b988:	andeq	lr, r1, r4, lsl #24
   3b98c:	andeq	lr, r1, ip, lsl pc
   3b990:	muleq	r1, r8, r4
   3b994:	andeq	lr, r1, r0, ror #23
   3b998:	andeq	lr, r1, ip, lsl lr

0003b99c <flatcc_builder_union_vector_push@@Base>:
   3b99c:	strd	r4, [sp, #-20]!	; 0xffffffec
   3b9a0:	strd	r6, [sp, #8]
   3b9a4:	str	lr, [sp, #16]
   3b9a8:	sub	sp, sp, #12
   3b9ac:	add	r3, sp, #8
   3b9b0:	stmdb	r3, {r1, r2}
   3b9b4:	ldr	r2, [r0, #32]
   3b9b8:	ldrh	r3, [r2, #14]
   3b9bc:	cmp	r3, #7
   3b9c0:	bne	3ba38 <flatcc_builder_union_vector_push@@Base+0x9c>
   3b9c4:	ldr	r3, [r2, #20]
   3b9c8:	cmn	r3, #-536870911	; 0xe0000001
   3b9cc:	beq	3ba30 <flatcc_builder_union_vector_push@@Base+0x94>
   3b9d0:	ldr	r5, [r0, #20]
   3b9d4:	add	r3, r3, #1
   3b9d8:	mov	r4, r0
   3b9dc:	ldr	r1, [r0, #24]
   3b9e0:	str	r3, [r2, #20]
   3b9e4:	add	r3, r5, #8
   3b9e8:	cmp	r3, r1
   3b9ec:	str	r3, [r0, #20]
   3b9f0:	bcs	3ba1c <flatcc_builder_union_vector_push@@Base+0x80>
   3b9f4:	ldr	r3, [r4, #16]
   3b9f8:	adds	r0, r3, r5
   3b9fc:	beq	3ba08 <flatcc_builder_union_vector_push@@Base+0x6c>
   3ba00:	ldrd	r6, [sp]
   3ba04:	strd	r6, [r3, r5]
   3ba08:	add	sp, sp, #12
   3ba0c:	ldrd	r4, [sp]
   3ba10:	ldrd	r6, [sp, #8]
   3ba14:	add	sp, sp, #16
   3ba18:	pop	{pc}		; (ldr pc, [sp], #4)
   3ba1c:	mvn	r2, #3
   3ba20:	add	r1, r5, #9
   3ba24:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3ba28:	cmp	r0, #0
   3ba2c:	beq	3b9f4 <flatcc_builder_union_vector_push@@Base+0x58>
   3ba30:	mov	r0, #0
   3ba34:	b	3ba08 <flatcc_builder_union_vector_push@@Base+0x6c>
   3ba38:	ldr	r3, [pc, #28]	; 3ba5c <flatcc_builder_union_vector_push@@Base+0xc0>
   3ba3c:	movw	r2, #1677	; 0x68d
   3ba40:	ldr	r1, [pc, #24]	; 3ba60 <flatcc_builder_union_vector_push@@Base+0xc4>
   3ba44:	ldr	r0, [pc, #24]	; 3ba64 <flatcc_builder_union_vector_push@@Base+0xc8>
   3ba48:	add	r3, pc, r3
   3ba4c:	add	r3, r3, #1040	; 0x410
   3ba50:	add	r1, pc, r1
   3ba54:	add	r0, pc, r0
   3ba58:	bl	1400c <__assert_fail@plt>
   3ba5c:	andeq	lr, r1, r0, asr #7
   3ba60:	andeq	lr, r1, r8, lsl #22
   3ba64:	andeq	lr, r1, r0, lsr #28

0003ba68 <flatcc_builder_append_union_vector@@Base>:
   3ba68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3ba6c:	mov	r4, r1
   3ba70:	ldr	r1, [r0, #32]
   3ba74:	ldrh	r3, [r1, #14]
   3ba78:	strd	r6, [sp, #8]
   3ba7c:	str	r8, [sp, #16]
   3ba80:	str	lr, [sp, #20]
   3ba84:	cmp	r3, #7
   3ba88:	bne	3bb28 <flatcc_builder_append_union_vector@@Base+0xc0>
   3ba8c:	ldr	r3, [r1, #20]
   3ba90:	adds	r3, r2, r3
   3ba94:	movcs	lr, #1
   3ba98:	movcc	lr, #0
   3ba9c:	cmn	r3, #-536870911	; 0xe0000001
   3baa0:	movls	ip, #0
   3baa4:	movhi	ip, #1
   3baa8:	orrs	r8, lr, ip
   3baac:	bne	3bb50 <flatcc_builder_append_union_vector@@Base+0xe8>
   3bab0:	ldr	r7, [r0, #20]
   3bab4:	lsl	r6, r2, #3
   3bab8:	mov	r5, r0
   3babc:	str	r3, [r1, #20]
   3bac0:	ldr	r3, [r0, #24]
   3bac4:	add	r1, r6, r7
   3bac8:	cmp	r1, r3
   3bacc:	str	r1, [r0, #20]
   3bad0:	bcs	3bb0c <flatcc_builder_append_union_vector@@Base+0xa4>
   3bad4:	ldr	r3, [r5, #16]
   3bad8:	adds	r3, r3, r7
   3badc:	beq	3baf4 <flatcc_builder_append_union_vector@@Base+0x8c>
   3bae0:	mov	r0, r3
   3bae4:	mov	r2, r6
   3bae8:	mov	r1, r4
   3baec:	bl	13eb0 <memcpy@plt>
   3baf0:	mov	r3, r0
   3baf4:	ldrd	r4, [sp]
   3baf8:	mov	r0, r3
   3bafc:	ldrd	r6, [sp, #8]
   3bb00:	ldr	r8, [sp, #16]
   3bb04:	add	sp, sp, #20
   3bb08:	pop	{pc}		; (ldr pc, [sp], #4)
   3bb0c:	add	r1, r1, #1
   3bb10:	mvn	r2, #3
   3bb14:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3bb18:	cmp	r0, #0
   3bb1c:	beq	3bad4 <flatcc_builder_append_union_vector@@Base+0x6c>
   3bb20:	mov	r3, r8
   3bb24:	b	3baf4 <flatcc_builder_append_union_vector@@Base+0x8c>
   3bb28:	ldr	r3, [pc, #36]	; 3bb54 <flatcc_builder_append_union_vector@@Base+0xec>
   3bb2c:	movw	r2, #1692	; 0x69c
   3bb30:	ldr	r1, [pc, #32]	; 3bb58 <flatcc_builder_append_union_vector@@Base+0xf0>
   3bb34:	ldr	r0, [pc, #32]	; 3bb5c <flatcc_builder_append_union_vector@@Base+0xf4>
   3bb38:	add	r3, pc, r3
   3bb3c:	add	r3, r3, #1072	; 0x430
   3bb40:	add	r1, pc, r1
   3bb44:	add	r3, r3, #4
   3bb48:	add	r0, pc, r0
   3bb4c:	bl	1400c <__assert_fail@plt>
   3bb50:	bl	3852c <flatcc_builder_default_alloc@@Base+0x2fc>
   3bb54:	ldrdeq	lr, [r1], -r0
   3bb58:	andeq	lr, r1, r8, lsl sl
   3bb5c:	andeq	lr, r1, ip, lsr #26

0003bb60 <flatcc_builder_create_string@@Base>:
   3bb60:	ldr	ip, [r0, #136]	; 0x88
   3bb64:	cmp	r2, #0
   3bb68:	strd	r4, [sp, #-20]!	; 0xffffffec
   3bb6c:	mov	r5, #4
   3bb70:	mov	r4, r0
   3bb74:	strd	r6, [sp, #8]
   3bb78:	mov	r0, #1
   3bb7c:	moveq	r7, #2
   3bb80:	str	lr, [sp, #16]
   3bb84:	sub	sp, sp, #92	; 0x5c
   3bb88:	moveq	r1, r0
   3bb8c:	add	r3, sp, #12
   3bb90:	ldr	lr, [pc, #204]	; 3bc64 <flatcc_builder_create_string@@Base+0x104>
   3bb94:	str	r2, [sp, #12]
   3bb98:	str	r3, [sp, #24]
   3bb9c:	sub	r3, ip, r2
   3bba0:	sub	r3, r3, #1
   3bba4:	str	r5, [sp, #28]
   3bba8:	and	r3, r3, #3
   3bbac:	add	lr, pc, lr
   3bbb0:	add	r3, r3, r0
   3bbb4:	beq	3bbcc <flatcc_builder_create_string@@Base+0x6c>
   3bbb8:	add	r5, r2, r5
   3bbbc:	mov	r7, #3
   3bbc0:	str	r1, [sp, #32]
   3bbc4:	mov	r1, #2
   3bbc8:	str	r2, [sp, #36]	; 0x24
   3bbcc:	ldr	r6, [pc, #148]	; 3bc68 <flatcc_builder_create_string@@Base+0x108>
   3bbd0:	add	r0, r3, r5
   3bbd4:	add	r2, sp, #88	; 0x58
   3bbd8:	add	r1, r1, #1
   3bbdc:	sub	r5, ip, r0
   3bbe0:	add	r1, r2, r1, lsl #3
   3bbe4:	str	r0, [sp, #16]
   3bbe8:	cmp	ip, r5
   3bbec:	ldr	r2, [lr, r6]
   3bbf0:	str	r7, [sp, #20]
   3bbf4:	strd	r2, [r1, #-72]	; 0xffffffb8
   3bbf8:	ble	3bc3c <flatcc_builder_create_string@@Base+0xdc>
   3bbfc:	mov	r2, r7
   3bc00:	mov	r3, r5
   3bc04:	str	r0, [sp]
   3bc08:	add	r1, sp, #24
   3bc0c:	ldr	r0, [r4, #36]	; 0x24
   3bc10:	ldr	r6, [r4, #44]	; 0x2c
   3bc14:	blx	r6
   3bc18:	cmp	r0, #0
   3bc1c:	bne	3bc60 <flatcc_builder_create_string@@Base+0x100>
   3bc20:	mov	r0, r5
   3bc24:	str	r5, [r4, #136]	; 0x88
   3bc28:	add	sp, sp, #92	; 0x5c
   3bc2c:	ldrd	r4, [sp]
   3bc30:	ldrd	r6, [sp, #8]
   3bc34:	add	sp, sp, #16
   3bc38:	pop	{pc}		; (ldr pc, [sp], #4)
   3bc3c:	ldr	r3, [pc, #40]	; 3bc6c <flatcc_builder_create_string@@Base+0x10c>
   3bc40:	movw	r2, #647	; 0x287
   3bc44:	ldr	r1, [pc, #36]	; 3bc70 <flatcc_builder_create_string@@Base+0x110>
   3bc48:	ldr	r0, [pc, #36]	; 3bc74 <flatcc_builder_create_string@@Base+0x114>
   3bc4c:	add	r3, pc, r3
   3bc50:	add	r3, r3, #44	; 0x2c
   3bc54:	add	r1, pc, r1
   3bc58:	add	r0, pc, r0
   3bc5c:	bl	1400c <__assert_fail@plt>
   3bc60:	bl	384f4 <flatcc_builder_default_alloc@@Base+0x2c4>
   3bc64:	andeq	pc, r2, ip, asr #8
   3bc68:	muleq	r0, r8, r0
   3bc6c:			; <UNDEFINED> instruction: 0x0001e1bc
   3bc70:	andeq	lr, r1, r4, lsl #18
   3bc74:	andeq	sp, r0, r4, lsl #3

0003bc78 <flatcc_builder_create_string_str@@Base>:
   3bc78:	strd	r4, [sp, #-16]!
   3bc7c:	mov	r5, r0
   3bc80:	mov	r0, r1
   3bc84:	mov	r4, r1
   3bc88:	str	r6, [sp, #8]
   3bc8c:	str	lr, [sp, #12]
   3bc90:	bl	13f4c <strlen@plt>
   3bc94:	mov	r2, r0
   3bc98:	mov	r1, r4
   3bc9c:	ldr	r6, [sp, #8]
   3bca0:	mov	r0, r5
   3bca4:	ldrd	r4, [sp]
   3bca8:	ldr	lr, [sp, #12]
   3bcac:	add	sp, sp, #16
   3bcb0:	b	3bb60 <flatcc_builder_create_string@@Base>

0003bcb4 <flatcc_builder_create_string_strn@@Base>:
   3bcb4:	strd	r4, [sp, #-16]!
   3bcb8:	mov	r4, r1
   3bcbc:	mov	r1, #0
   3bcc0:	str	r6, [sp, #8]
   3bcc4:	mov	r6, r0
   3bcc8:	mov	r0, r4
   3bccc:	mov	r5, r2
   3bcd0:	str	lr, [sp, #12]
   3bcd4:	bl	13f94 <memchr@plt>
   3bcd8:	cmp	r0, #0
   3bcdc:	mov	r1, r4
   3bce0:	ldr	lr, [sp, #12]
   3bce4:	subne	r5, r0, r4
   3bce8:	mov	r0, r6
   3bcec:	mov	r2, r5
   3bcf0:	ldrd	r4, [sp]
   3bcf4:	ldr	r6, [sp, #8]
   3bcf8:	add	sp, sp, #16
   3bcfc:	b	3bb60 <flatcc_builder_create_string@@Base>

0003bd00 <flatcc_builder_end_string@@Base>:
   3bd00:	ldr	r3, [r0, #32]
   3bd04:	strd	r4, [sp, #-16]!
   3bd08:	ldrh	r2, [r3, #14]
   3bd0c:	str	r6, [sp, #8]
   3bd10:	str	lr, [sp, #12]
   3bd14:	cmp	r2, #6
   3bd18:	bne	3bdf0 <flatcc_builder_end_string@@Base+0xf0>
   3bd1c:	ldr	r2, [r3, #20]
   3bd20:	mov	r4, r0
   3bd24:	ldr	r3, [r0, #20]
   3bd28:	cmp	r2, r3
   3bd2c:	bne	3bdc8 <flatcc_builder_end_string@@Base+0xc8>
   3bd30:	ldr	r1, [r0, #16]
   3bd34:	bl	3bb60 <flatcc_builder_create_string@@Base>
   3bd38:	subs	r5, r0, #0
   3bd3c:	beq	3bdb4 <flatcc_builder_end_string@@Base+0xb4>
   3bd40:	mov	r1, #0
   3bd44:	ldr	r0, [r4, #16]
   3bd48:	ldr	r2, [r4, #20]
   3bd4c:	bl	13f70 <memset@plt>
   3bd50:	ldr	r3, [r4, #32]
   3bd54:	ldr	r0, [r4, #60]	; 0x3c
   3bd58:	ldr	r2, [r4, #64]	; 0x40
   3bd5c:	ldr	ip, [r3]
   3bd60:	ldmib	r3, {r1, lr}
   3bd64:	add	r0, r0, ip
   3bd68:	sub	r2, r2, ip
   3bd6c:	str	r0, [r4, #16]
   3bd70:	cmp	r2, r1
   3bd74:	ldrh	r0, [r4, #128]	; 0x80
   3bd78:	movcs	r2, r1
   3bd7c:	str	lr, [r4, #20]
   3bd80:	str	ip, [r4, #28]
   3bd84:	ldrh	ip, [r4, #130]	; 0x82
   3bd88:	str	r2, [r4, #24]
   3bd8c:	ldr	r2, [r4, #156]	; 0x9c
   3bd90:	str	r1, [r3, #4]
   3bd94:	cmp	r0, ip
   3bd98:	sub	r0, r3, #36	; 0x24
   3bd9c:	strhcc	ip, [r4, #128]	; 0x80
   3bda0:	ldrh	r1, [r3, #12]
   3bda4:	sub	r3, r2, #1
   3bda8:	str	r0, [r4, #32]
   3bdac:	strh	r1, [r4, #130]	; 0x82
   3bdb0:	str	r3, [r4, #156]	; 0x9c
   3bdb4:	mov	r0, r5
   3bdb8:	ldrd	r4, [sp]
   3bdbc:	ldr	r6, [sp, #8]
   3bdc0:	add	sp, sp, #12
   3bdc4:	pop	{pc}		; (ldr pc, [sp], #4)
   3bdc8:	ldr	r3, [pc, #72]	; 3be18 <flatcc_builder_end_string@@Base+0x118>
   3bdcc:	movw	r2, #1733	; 0x6c5
   3bdd0:	ldr	r1, [pc, #68]	; 3be1c <flatcc_builder_end_string@@Base+0x11c>
   3bdd4:	ldr	r0, [pc, #68]	; 3be20 <flatcc_builder_end_string@@Base+0x120>
   3bdd8:	add	r3, pc, r3
   3bddc:	add	r3, r3, #1104	; 0x450
   3bde0:	add	r1, pc, r1
   3bde4:	add	r3, r3, #8
   3bde8:	add	r0, pc, r0
   3bdec:	bl	1400c <__assert_fail@plt>
   3bdf0:	ldr	r3, [pc, #44]	; 3be24 <flatcc_builder_end_string@@Base+0x124>
   3bdf4:	movw	r2, #1732	; 0x6c4
   3bdf8:	ldr	r1, [pc, #40]	; 3be28 <flatcc_builder_end_string@@Base+0x128>
   3bdfc:	ldr	r0, [pc, #40]	; 3be2c <flatcc_builder_end_string@@Base+0x12c>
   3be00:	add	r3, pc, r3
   3be04:	add	r3, r3, #1104	; 0x450
   3be08:	add	r1, pc, r1
   3be0c:	add	r3, r3, #8
   3be10:	add	r0, pc, r0
   3be14:	bl	1400c <__assert_fail@plt>
   3be18:	andeq	lr, r1, r0, lsr r0
   3be1c:	andeq	lr, r1, r8, ror r7
   3be20:	andeq	lr, r1, r0, asr #21
   3be24:	andeq	lr, r1, r8
   3be28:	andeq	lr, r1, r0, asr r7
   3be2c:	andeq	lr, r1, r8, lsr r9

0003be30 <flatcc_builder_string_edit@@Base>:
   3be30:	ldr	r0, [r0, #16]
   3be34:	bx	lr

0003be38 <flatcc_builder_string_len@@Base>:
   3be38:	ldr	r3, [r0, #32]
   3be3c:	ldr	r0, [r3, #20]
   3be40:	bx	lr

0003be44 <flatcc_builder_table_add@@Base>:
   3be44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3be48:	mov	r4, r0
   3be4c:	ldr	r0, [r0, #32]
   3be50:	ldrh	r0, [r0, #14]
   3be54:	strd	r6, [sp, #8]
   3be58:	strd	r8, [sp, #16]
   3be5c:	str	sl, [sp, #24]
   3be60:	str	lr, [sp, #28]
   3be64:	cmp	r0, #3
   3be68:	bne	3bf98 <flatcc_builder_table_add@@Base+0x154>
   3be6c:	movw	r0, #32764	; 0x7ffc
   3be70:	cmp	r1, r0
   3be74:	bhi	3bf70 <flatcc_builder_table_add@@Base+0x12c>
   3be78:	ldrh	r0, [r4, #130]	; 0x82
   3be7c:	lsl	r8, r1, #1
   3be80:	ldr	lr, [r4, #4]
   3be84:	cmp	r0, r3
   3be88:	strhcc	r3, [r4, #130]	; 0x82
   3be8c:	ldrh	r6, [lr, r8]
   3be90:	add	lr, lr, r8
   3be94:	cmp	r6, #0
   3be98:	bne	3bf48 <flatcc_builder_table_add@@Base+0x104>
   3be9c:	ldr	ip, [r4, #12]
   3bea0:	movw	r9, #31153	; 0x79b1
   3bea4:	movt	r9, #40503	; 0x9e37
   3bea8:	uxth	r7, r1
   3beac:	sub	r5, r3, #1
   3beb0:	ldr	r0, [r4, #20]
   3beb4:	rsb	r3, r3, #0
   3beb8:	eor	ip, ip, r1
   3bebc:	ldr	r1, [r4, #24]
   3bec0:	mul	ip, r9, ip
   3bec4:	add	r5, r5, r0
   3bec8:	and	r5, r5, r3
   3becc:	eor	ip, ip, r2
   3bed0:	add	r2, r2, r5
   3bed4:	cmp	r2, r1
   3bed8:	mul	ip, r9, ip
   3bedc:	str	ip, [r4, #12]
   3bee0:	str	r2, [r4, #20]
   3bee4:	bcs	3bf20 <flatcc_builder_table_add@@Base+0xdc>
   3bee8:	add	r3, r5, #4
   3beec:	ldr	r0, [r4, #16]
   3bef0:	strh	r3, [lr]
   3bef4:	ldrh	r3, [r4, #8]
   3bef8:	add	r0, r0, r5
   3befc:	cmp	r3, r7
   3bf00:	addls	r7, r7, #1
   3bf04:	strhls	r7, [r4, #8]
   3bf08:	ldrd	r4, [sp]
   3bf0c:	ldrd	r6, [sp, #8]
   3bf10:	ldrd	r8, [sp, #16]
   3bf14:	ldr	sl, [sp, #24]
   3bf18:	add	sp, sp, #28
   3bf1c:	pop	{pc}		; (ldr pc, [sp], #4)
   3bf20:	add	r1, r2, #1
   3bf24:	mov	r0, r4
   3bf28:	movw	r2, #65532	; 0xfffc
   3bf2c:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3bf30:	cmp	r0, #0
   3bf34:	movne	r0, r6
   3bf38:	bne	3bf08 <flatcc_builder_table_add@@Base+0xc4>
   3bf3c:	ldr	lr, [r4, #4]
   3bf40:	add	lr, lr, r8
   3bf44:	b	3bee8 <flatcc_builder_table_add@@Base+0xa4>
   3bf48:	ldr	r3, [pc, #112]	; 3bfc0 <flatcc_builder_table_add@@Base+0x17c>
   3bf4c:	movw	r2, #1784	; 0x6f8
   3bf50:	ldr	r1, [pc, #108]	; 3bfc4 <flatcc_builder_table_add@@Base+0x180>
   3bf54:	ldr	r0, [pc, #108]	; 3bfc8 <flatcc_builder_table_add@@Base+0x184>
   3bf58:	add	r3, pc, r3
   3bf5c:	add	r3, r3, #1136	; 0x470
   3bf60:	add	r1, pc, r1
   3bf64:	add	r3, r3, #4
   3bf68:	add	r0, pc, r0
   3bf6c:	bl	1400c <__assert_fail@plt>
   3bf70:	ldr	r3, [pc, #84]	; 3bfcc <flatcc_builder_table_add@@Base+0x188>
   3bf74:	movw	r2, #1774	; 0x6ee
   3bf78:	ldr	r1, [pc, #80]	; 3bfd0 <flatcc_builder_table_add@@Base+0x18c>
   3bf7c:	ldr	r0, [pc, #80]	; 3bfd4 <flatcc_builder_table_add@@Base+0x190>
   3bf80:	add	r3, pc, r3
   3bf84:	add	r3, r3, #1136	; 0x470
   3bf88:	add	r1, pc, r1
   3bf8c:	add	r3, r3, #4
   3bf90:	add	r0, pc, r0
   3bf94:	bl	1400c <__assert_fail@plt>
   3bf98:	ldr	r3, [pc, #56]	; 3bfd8 <flatcc_builder_table_add@@Base+0x194>
   3bf9c:	movw	r2, #1773	; 0x6ed
   3bfa0:	ldr	r1, [pc, #52]	; 3bfdc <flatcc_builder_table_add@@Base+0x198>
   3bfa4:	ldr	r0, [pc, #52]	; 3bfe0 <flatcc_builder_table_add@@Base+0x19c>
   3bfa8:	add	r3, pc, r3
   3bfac:	add	r3, r3, #1136	; 0x470
   3bfb0:	add	r1, pc, r1
   3bfb4:	add	r3, r3, #4
   3bfb8:	add	r0, pc, r0
   3bfbc:	bl	1400c <__assert_fail@plt>
   3bfc0:			; <UNDEFINED> instruction: 0x0001deb0
   3bfc4:	strdeq	lr, [r1], -r8
   3bfc8:	andeq	ip, r0, r4, ror lr
   3bfcc:	andeq	sp, r1, r8, lsl #29
   3bfd0:	ldrdeq	lr, [r1], -r0
   3bfd4:	andeq	lr, r1, ip, lsr r9
   3bfd8:	andeq	sp, r1, r0, ror #28
   3bfdc:	andeq	lr, r1, r8, lsr #11
   3bfe0:	andeq	lr, r1, ip, ror r8

0003bfe4 <flatcc_builder_table_edit@@Base>:
   3bfe4:	ldr	r2, [r0, #32]
   3bfe8:	ldrh	r2, [r2, #14]
   3bfec:	cmp	r2, #3
   3bff0:	bne	3c008 <flatcc_builder_table_edit@@Base+0x24>
   3bff4:	ldr	r3, [r0, #20]
   3bff8:	ldr	r0, [r0, #16]
   3bffc:	sub	r3, r3, r1
   3c000:	add	r0, r0, r3
   3c004:	bx	lr
   3c008:	ldr	r3, [pc, #36]	; 3c034 <flatcc_builder_table_edit@@Base+0x50>
   3c00c:	movw	r2, #1794	; 0x702
   3c010:	str	r4, [sp, #-8]!
   3c014:	ldr	r1, [pc, #28]	; 3c038 <flatcc_builder_table_edit@@Base+0x54>
   3c018:	str	lr, [sp, #4]
   3c01c:	ldr	r0, [pc, #24]	; 3c03c <flatcc_builder_table_edit@@Base+0x58>
   3c020:	add	r3, pc, r3
   3c024:	add	r3, r3, #1168	; 0x490
   3c028:	add	r1, pc, r1
   3c02c:	add	r0, pc, r0
   3c030:	bl	1400c <__assert_fail@plt>
   3c034:	andeq	sp, r1, r8, ror #27
   3c038:	andeq	lr, r1, r0, lsr r5
   3c03c:	andeq	lr, r1, r8, lsl #16

0003c040 <flatcc_builder_table_add_copy@@Base>:
   3c040:	strd	r4, [sp, #-16]!
   3c044:	mov	r4, r3
   3c048:	ldrh	r3, [sp, #16]
   3c04c:	str	r6, [sp, #8]
   3c050:	mov	r6, r2
   3c054:	mov	r2, r4
   3c058:	str	lr, [sp, #12]
   3c05c:	bl	3be44 <flatcc_builder_table_add@@Base>
   3c060:	subs	r5, r0, #0
   3c064:	beq	3c074 <flatcc_builder_table_add_copy@@Base+0x34>
   3c068:	mov	r2, r4
   3c06c:	mov	r1, r6
   3c070:	bl	13eb0 <memcpy@plt>
   3c074:	mov	r0, r5
   3c078:	ldrd	r4, [sp]
   3c07c:	ldr	r6, [sp, #8]
   3c080:	add	sp, sp, #12
   3c084:	pop	{pc}		; (ldr pc, [sp], #4)

0003c088 <flatcc_builder_table_add_offset@@Base>:
   3c088:	ldr	r3, [r0, #32]
   3c08c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c090:	ldrh	r3, [r3, #14]
   3c094:	strd	r6, [sp, #8]
   3c098:	str	r8, [sp, #16]
   3c09c:	str	lr, [sp, #20]
   3c0a0:	cmp	r3, #3
   3c0a4:	bne	3c1cc <flatcc_builder_table_add_offset@@Base+0x144>
   3c0a8:	movw	r3, #32764	; 0x7ffc
   3c0ac:	cmp	r1, r3
   3c0b0:	bhi	3c1a4 <flatcc_builder_table_add_offset@@Base+0x11c>
   3c0b4:	ldr	ip, [r0, #4]
   3c0b8:	lsl	r8, r1, #1
   3c0bc:	mov	r4, r0
   3c0c0:	ldrh	r6, [ip, r8]
   3c0c4:	add	ip, ip, r8
   3c0c8:	cmp	r6, #0
   3c0cc:	bne	3c17c <flatcc_builder_table_add_offset@@Base+0xf4>
   3c0d0:	ldr	r3, [r0, #12]
   3c0d4:	movw	r2, #31153	; 0x79b1
   3c0d8:	movt	r2, #40503	; 0x9e37
   3c0dc:	uxth	r7, r1
   3c0e0:	ldr	r5, [r0, #20]
   3c0e4:	ldr	lr, [r0, #24]
   3c0e8:	eor	r3, r3, r1
   3c0ec:	mul	r3, r2, r3
   3c0f0:	add	r5, r5, #3
   3c0f4:	bic	r5, r5, #3
   3c0f8:	add	r1, r5, #4
   3c0fc:	eor	r3, r3, #4
   3c100:	cmp	r1, lr
   3c104:	str	r1, [r0, #20]
   3c108:	mul	r3, r2, r3
   3c10c:	str	r3, [r0, #12]
   3c110:	bhi	3c15c <flatcc_builder_table_add_offset@@Base+0xd4>
   3c114:	uxth	r2, r5
   3c118:	ldr	r0, [r4, #16]
   3c11c:	add	r3, r2, #4
   3c120:	strh	r3, [ip]
   3c124:	ldrh	r3, [r4, #8]
   3c128:	add	r0, r0, r5
   3c12c:	cmp	r3, r7
   3c130:	ldr	r3, [r4]
   3c134:	addls	r7, r7, #1
   3c138:	strhls	r7, [r4, #8]
   3c13c:	add	r1, r3, #2
   3c140:	str	r1, [r4]
   3c144:	strh	r2, [r3]
   3c148:	ldrd	r4, [sp]
   3c14c:	ldrd	r6, [sp, #8]
   3c150:	ldr	r8, [sp, #16]
   3c154:	add	sp, sp, #20
   3c158:	pop	{pc}		; (ldr pc, [sp], #4)
   3c15c:	movw	r2, #65532	; 0xfffc
   3c160:	bl	381a8 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c164:	cmp	r0, #0
   3c168:	movne	r0, r6
   3c16c:	bne	3c148 <flatcc_builder_table_add_offset@@Base+0xc0>
   3c170:	ldr	ip, [r4, #4]
   3c174:	add	ip, ip, r8
   3c178:	b	3c114 <flatcc_builder_table_add_offset@@Base+0x8c>
   3c17c:	ldr	r3, [pc, #112]	; 3c1f4 <flatcc_builder_table_add_offset@@Base+0x16c>
   3c180:	movw	r2, #1819	; 0x71b
   3c184:	ldr	r1, [pc, #108]	; 3c1f8 <flatcc_builder_table_add_offset@@Base+0x170>
   3c188:	ldr	r0, [pc, #108]	; 3c1fc <flatcc_builder_table_add_offset@@Base+0x174>
   3c18c:	add	r3, pc, r3
   3c190:	add	r3, r3, #1184	; 0x4a0
   3c194:	add	r1, pc, r1
   3c198:	add	r3, r3, #12
   3c19c:	add	r0, pc, r0
   3c1a0:	bl	1400c <__assert_fail@plt>
   3c1a4:	ldr	r3, [pc, #84]	; 3c200 <flatcc_builder_table_add_offset@@Base+0x178>
   3c1a8:	movw	r2, #1812	; 0x714
   3c1ac:	ldr	r1, [pc, #80]	; 3c204 <flatcc_builder_table_add_offset@@Base+0x17c>
   3c1b0:	ldr	r0, [pc, #80]	; 3c208 <flatcc_builder_table_add_offset@@Base+0x180>
   3c1b4:	add	r3, pc, r3
   3c1b8:	add	r3, r3, #1184	; 0x4a0
   3c1bc:	add	r1, pc, r1
   3c1c0:	add	r3, r3, #12
   3c1c4:	add	r0, pc, r0
   3c1c8:	bl	1400c <__assert_fail@plt>
   3c1cc:	ldr	r3, [pc, #56]	; 3c20c <flatcc_builder_table_add_offset@@Base+0x184>
   3c1d0:	movw	r2, #1811	; 0x713
   3c1d4:	ldr	r1, [pc, #52]	; 3c210 <flatcc_builder_table_add_offset@@Base+0x188>
   3c1d8:	ldr	r0, [pc, #52]	; 3c214 <flatcc_builder_table_add_offset@@Base+0x18c>
   3c1dc:	add	r3, pc, r3
   3c1e0:	add	r3, r3, #1184	; 0x4a0
   3c1e4:	add	r1, pc, r1
   3c1e8:	add	r3, r3, #12
   3c1ec:	add	r0, pc, r0
   3c1f0:	bl	1400c <__assert_fail@plt>
   3c1f4:	andeq	sp, r1, ip, ror ip
   3c1f8:	andeq	lr, r1, r4, asr #7
   3c1fc:	andeq	ip, r0, r0, asr #24
   3c200:	andeq	sp, r1, r4, asr ip
   3c204:	muleq	r1, ip, r3
   3c208:	andeq	lr, r1, r8, lsl #14
   3c20c:	andeq	sp, r1, ip, lsr #24
   3c210:	andeq	lr, r1, r4, ror r3
   3c214:	andeq	lr, r1, r8, asr #12

0003c218 <flatcc_builder_table_add_union@@Base>:
   3c218:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c21c:	strd	r6, [sp, #8]
   3c220:	str	lr, [sp, #16]
   3c224:	sub	sp, sp, #12
   3c228:	add	ip, sp, #8
   3c22c:	stmdb	ip, {r2, r3}
   3c230:	ldr	r3, [r0, #32]
   3c234:	ldrb	r5, [sp]
   3c238:	ldr	r6, [sp, #4]
   3c23c:	ldrh	r3, [r3, #14]
   3c240:	cmp	r3, #3
   3c244:	bne	3c2d8 <flatcc_builder_table_add_union@@Base+0xc0>
   3c248:	cmp	r5, #0
   3c24c:	mov	r4, r0
   3c250:	mov	r7, r1
   3c254:	beq	3c2a8 <flatcc_builder_table_add_union@@Base+0x90>
   3c258:	cmp	r6, #0
   3c25c:	beq	3c270 <flatcc_builder_table_add_union@@Base+0x58>
   3c260:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   3c264:	cmp	r0, #0
   3c268:	strne	r6, [r0]
   3c26c:	beq	3c328 <flatcc_builder_table_add_union@@Base+0x110>
   3c270:	mov	r3, #1
   3c274:	sub	r1, r7, #1
   3c278:	mov	r2, r3
   3c27c:	mov	r0, r4
   3c280:	bl	3be44 <flatcc_builder_table_add@@Base>
   3c284:	subs	r3, r0, #0
   3c288:	beq	3c300 <flatcc_builder_table_add_union@@Base+0xe8>
   3c28c:	mov	r0, #0
   3c290:	strb	r5, [r3]
   3c294:	add	sp, sp, #12
   3c298:	ldrd	r4, [sp]
   3c29c:	ldrd	r6, [sp, #8]
   3c2a0:	add	sp, sp, #16
   3c2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c2a8:	cmp	r6, #0
   3c2ac:	beq	3c270 <flatcc_builder_table_add_union@@Base+0x58>
   3c2b0:	ldr	r3, [pc, #152]	; 3c350 <flatcc_builder_table_add_union@@Base+0x138>
   3c2b4:	movw	r2, #1519	; 0x5ef
   3c2b8:	ldr	r1, [pc, #148]	; 3c354 <flatcc_builder_table_add_union@@Base+0x13c>
   3c2bc:	ldr	r0, [pc, #148]	; 3c358 <flatcc_builder_table_add_union@@Base+0x140>
   3c2c0:	add	r3, pc, r3
   3c2c4:	add	r3, r3, #1216	; 0x4c0
   3c2c8:	add	r1, pc, r1
   3c2cc:	add	r3, r3, #12
   3c2d0:	add	r0, pc, r0
   3c2d4:	bl	1400c <__assert_fail@plt>
   3c2d8:	ldr	r3, [pc, #124]	; 3c35c <flatcc_builder_table_add_union@@Base+0x144>
   3c2dc:	movw	r2, #1518	; 0x5ee
   3c2e0:	ldr	r1, [pc, #120]	; 3c360 <flatcc_builder_table_add_union@@Base+0x148>
   3c2e4:	ldr	r0, [pc, #120]	; 3c364 <flatcc_builder_table_add_union@@Base+0x14c>
   3c2e8:	add	r3, pc, r3
   3c2ec:	add	r3, r3, #1216	; 0x4c0
   3c2f0:	add	r1, pc, r1
   3c2f4:	add	r3, r3, #12
   3c2f8:	add	r0, pc, r0
   3c2fc:	bl	1400c <__assert_fail@plt>
   3c300:	ldr	r3, [pc, #96]	; 3c368 <flatcc_builder_table_add_union@@Base+0x150>
   3c304:	movw	r2, #1526	; 0x5f6
   3c308:	ldr	r1, [pc, #92]	; 3c36c <flatcc_builder_table_add_union@@Base+0x154>
   3c30c:	ldr	r0, [pc, #92]	; 3c370 <flatcc_builder_table_add_union@@Base+0x158>
   3c310:	add	r3, pc, r3
   3c314:	add	r3, r3, #1216	; 0x4c0
   3c318:	add	r1, pc, r1
   3c31c:	add	r3, r3, #12
   3c320:	add	r0, pc, r0
   3c324:	bl	1400c <__assert_fail@plt>
   3c328:	ldr	r3, [pc, #68]	; 3c374 <flatcc_builder_table_add_union@@Base+0x15c>
   3c32c:	movw	r2, #1522	; 0x5f2
   3c330:	ldr	r1, [pc, #64]	; 3c378 <flatcc_builder_table_add_union@@Base+0x160>
   3c334:	ldr	r0, [pc, #64]	; 3c37c <flatcc_builder_table_add_union@@Base+0x164>
   3c338:	add	r3, pc, r3
   3c33c:	add	r3, r3, #1216	; 0x4c0
   3c340:	add	r1, pc, r1
   3c344:	add	r3, r3, #12
   3c348:	add	r0, pc, r0
   3c34c:	bl	1400c <__assert_fail@plt>
   3c350:	andeq	sp, r1, r8, asr #22
   3c354:	muleq	r1, r0, r2
   3c358:	andeq	lr, r1, r0, asr #12
   3c35c:	andeq	sp, r1, r0, lsr #22
   3c360:	andeq	lr, r1, r8, ror #4
   3c364:	andeq	lr, r1, ip, lsr r5
   3c368:	strdeq	sp, [r1], -r8
   3c36c:	andeq	lr, r1, r0, asr #4
   3c370:	andeq	lr, r1, r0, lsr #12
   3c374:	ldrdeq	sp, [r1], -r0
   3c378:	andeq	lr, r1, r8, lsl r2
   3c37c:	andeq	lr, r1, ip, ror #11

0003c380 <flatcc_builder_table_add_union_vector@@Base>:
   3c380:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c384:	strd	r6, [sp, #8]
   3c388:	mov	r7, r1
   3c38c:	str	lr, [sp, #16]
   3c390:	sub	sp, sp, #12
   3c394:	add	r1, sp, #8
   3c398:	stmdb	r1, {r2, r3}
   3c39c:	ldr	r3, [r0, #32]
   3c3a0:	ldm	sp, {r4, r6}
   3c3a4:	ldrh	r3, [r3, #14]
   3c3a8:	cmp	r3, #3
   3c3ac:	bne	3c458 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   3c3b0:	clz	r3, r6
   3c3b4:	clz	r2, r4
   3c3b8:	lsr	r3, r3, #5
   3c3bc:	lsr	r2, r2, #5
   3c3c0:	cmp	r2, r3
   3c3c4:	beq	3c3f4 <flatcc_builder_table_add_union_vector@@Base+0x74>
   3c3c8:	adds	r4, r4, #0
   3c3cc:	movne	r4, #1
   3c3d0:	cmp	r4, r3
   3c3d4:	mvnne	r4, #0
   3c3d8:	beq	3c480 <flatcc_builder_table_add_union_vector@@Base+0x100>
   3c3dc:	mov	r0, r4
   3c3e0:	add	sp, sp, #12
   3c3e4:	ldrd	r4, [sp]
   3c3e8:	ldrd	r6, [sp, #8]
   3c3ec:	add	sp, sp, #16
   3c3f0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c3f4:	cmp	r4, #0
   3c3f8:	beq	3c3dc <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3c3fc:	sub	r1, r7, #1
   3c400:	mov	r5, r0
   3c404:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   3c408:	subs	r3, r0, #0
   3c40c:	beq	3c4a8 <flatcc_builder_table_add_union_vector@@Base+0x128>
   3c410:	mov	r1, r7
   3c414:	mov	r0, r5
   3c418:	str	r4, [r3]
   3c41c:	bl	3c088 <flatcc_builder_table_add_offset@@Base>
   3c420:	cmp	r0, #0
   3c424:	movne	r4, #0
   3c428:	strne	r6, [r0]
   3c42c:	bne	3c3dc <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3c430:	ldr	r3, [pc, #152]	; 3c4d0 <flatcc_builder_table_add_union_vector@@Base+0x150>
   3c434:	movw	r2, #1544	; 0x608
   3c438:	ldr	r1, [pc, #148]	; 3c4d4 <flatcc_builder_table_add_union_vector@@Base+0x154>
   3c43c:	ldr	r0, [pc, #148]	; 3c4d8 <flatcc_builder_table_add_union_vector@@Base+0x158>
   3c440:	add	r3, pc, r3
   3c444:	add	r3, r3, #1248	; 0x4e0
   3c448:	add	r1, pc, r1
   3c44c:	add	r3, r3, #12
   3c450:	add	r0, pc, r0
   3c454:	bl	1400c <__assert_fail@plt>
   3c458:	ldr	r3, [pc, #124]	; 3c4dc <flatcc_builder_table_add_union_vector@@Base+0x15c>
   3c45c:	mov	r2, #1536	; 0x600
   3c460:	ldr	r1, [pc, #120]	; 3c4e0 <flatcc_builder_table_add_union_vector@@Base+0x160>
   3c464:	ldr	r0, [pc, #120]	; 3c4e4 <flatcc_builder_table_add_union_vector@@Base+0x164>
   3c468:	add	r3, pc, r3
   3c46c:	add	r3, r3, #1248	; 0x4e0
   3c470:	add	r1, pc, r1
   3c474:	add	r3, r3, #12
   3c478:	add	r0, pc, r0
   3c47c:	bl	1400c <__assert_fail@plt>
   3c480:	ldr	r3, [pc, #96]	; 3c4e8 <flatcc_builder_table_add_union_vector@@Base+0x168>
   3c484:	movw	r2, #1537	; 0x601
   3c488:	ldr	r1, [pc, #92]	; 3c4ec <flatcc_builder_table_add_union_vector@@Base+0x16c>
   3c48c:	ldr	r0, [pc, #92]	; 3c4f0 <flatcc_builder_table_add_union_vector@@Base+0x170>
   3c490:	add	r3, pc, r3
   3c494:	add	r3, r3, #1248	; 0x4e0
   3c498:	add	r1, pc, r1
   3c49c:	add	r3, r3, #12
   3c4a0:	add	r0, pc, r0
   3c4a4:	bl	1400c <__assert_fail@plt>
   3c4a8:	ldr	r3, [pc, #68]	; 3c4f4 <flatcc_builder_table_add_union_vector@@Base+0x174>
   3c4ac:	movw	r2, #1540	; 0x604
   3c4b0:	ldr	r1, [pc, #64]	; 3c4f8 <flatcc_builder_table_add_union_vector@@Base+0x178>
   3c4b4:	ldr	r0, [pc, #64]	; 3c4fc <flatcc_builder_table_add_union_vector@@Base+0x17c>
   3c4b8:	add	r3, pc, r3
   3c4bc:	add	r3, r3, #1248	; 0x4e0
   3c4c0:	add	r1, pc, r1
   3c4c4:	add	r3, r3, #12
   3c4c8:	add	r0, pc, r0
   3c4cc:	bl	1400c <__assert_fail@plt>
   3c4d0:	andeq	sp, r1, r8, asr #19
   3c4d4:	andeq	lr, r1, r0, lsl r1
   3c4d8:	andeq	lr, r1, r4, ror #9
   3c4dc:	andeq	sp, r1, r0, lsr #19
   3c4e0:	andeq	lr, r1, r8, ror #1
   3c4e4:			; <UNDEFINED> instruction: 0x0001e3bc
   3c4e8:	andeq	sp, r1, r8, ror r9
   3c4ec:	andeq	lr, r1, r0, asr #1
   3c4f0:	andeq	lr, r1, ip, lsr #9
   3c4f4:	andeq	sp, r1, r0, asr r9
   3c4f8:	muleq	r1, r8, r0
   3c4fc:	andeq	lr, r1, ip, ror #8

0003c500 <flatcc_builder_push_buffer_alignment@@Base>:
   3c500:	mov	r3, r0
   3c504:	mov	r2, #4
   3c508:	ldrh	r0, [r0, #128]	; 0x80
   3c50c:	strh	r2, [r3, #128]	; 0x80
   3c510:	bx	lr

0003c514 <flatcc_builder_pop_buffer_alignment@@Base>:
   3c514:	ldrh	r3, [r0, #128]	; 0x80
   3c518:	cmp	r3, r1
   3c51c:	strhcc	r1, [r0, #128]	; 0x80
   3c520:	bx	lr

0003c524 <flatcc_builder_get_buffer_alignment@@Base>:
   3c524:	ldrh	r0, [r0, #128]	; 0x80
   3c528:	bx	lr

0003c52c <flatcc_builder_set_vtable_clustering@@Base>:
   3c52c:	clz	r1, r1
   3c530:	lsr	r1, r1, #5
   3c534:	str	r1, [r0, #180]	; 0xb4
   3c538:	bx	lr

0003c53c <flatcc_builder_set_block_align@@Base>:
   3c53c:	strh	r1, [r0, #132]	; 0x84
   3c540:	bx	lr

0003c544 <flatcc_builder_get_level@@Base>:
   3c544:	ldr	r0, [r0, #156]	; 0x9c
   3c548:	bx	lr

0003c54c <flatcc_builder_set_max_level@@Base>:
   3c54c:	ldr	r3, [r0, #160]	; 0xa0
   3c550:	str	r1, [r0, #176]	; 0xb0
   3c554:	cmp	r3, r1
   3c558:	strlt	r1, [r0, #160]	; 0xa0
   3c55c:	bx	lr

0003c560 <flatcc_builder_get_buffer_size@@Base>:
   3c560:	ldr	r3, [r0, #136]	; 0x88
   3c564:	ldr	r0, [r0, #140]	; 0x8c
   3c568:	sub	r0, r0, r3
   3c56c:	bx	lr

0003c570 <flatcc_builder_get_buffer_start@@Base>:
   3c570:	ldr	r0, [r0, #136]	; 0x88
   3c574:	bx	lr

0003c578 <flatcc_builder_get_buffer_end@@Base>:
   3c578:	ldr	r0, [r0, #140]	; 0x8c
   3c57c:	bx	lr

0003c580 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3c580:	str	r1, [r0, #172]	; 0xac
   3c584:	bx	lr

0003c588 <flatcc_builder_set_identifier@@Base>:
   3c588:	ldr	r3, [pc, #40]	; 3c5b8 <flatcc_builder_set_identifier@@Base+0x30>
   3c58c:	cmp	r1, #0
   3c590:	add	r3, pc, r3
   3c594:	beq	3c5a4 <flatcc_builder_set_identifier@@Base+0x1c>
   3c598:	ldr	r3, [r1]
   3c59c:	str	r3, [r0, #168]	; 0xa8
   3c5a0:	bx	lr
   3c5a4:	ldr	r2, [pc, #16]	; 3c5bc <flatcc_builder_set_identifier@@Base+0x34>
   3c5a8:	ldr	r1, [r3, r2]
   3c5ac:	ldr	r3, [r1]
   3c5b0:	str	r3, [r0, #168]	; 0xa8
   3c5b4:	bx	lr
   3c5b8:	andeq	lr, r2, r8, ror #20
   3c5bc:	muleq	r0, r8, r0

0003c5c0 <flatcc_builder_get_type@@Base>:
   3c5c0:	ldr	r0, [r0, #32]
   3c5c4:	cmp	r0, #0
   3c5c8:	ldrhne	r0, [r0, #14]
   3c5cc:	bx	lr

0003c5d0 <flatcc_builder_get_type_at@@Base>:
   3c5d0:	cmp	r1, #0
   3c5d4:	ble	3c5fc <flatcc_builder_get_type_at@@Base+0x2c>
   3c5d8:	ldr	r3, [r0, #156]	; 0x9c
   3c5dc:	cmp	r3, r1
   3c5e0:	blt	3c5fc <flatcc_builder_get_type_at@@Base+0x2c>
   3c5e4:	ldr	r2, [r0, #32]
   3c5e8:	sub	r1, r1, r3
   3c5ec:	add	r1, r1, r1, lsl #3
   3c5f0:	add	r1, r2, r1, lsl #2
   3c5f4:	ldrh	r0, [r1, #14]
   3c5f8:	bx	lr
   3c5fc:	mov	r0, #0
   3c600:	bx	lr

0003c604 <flatcc_builder_get_direct_buffer@@Base>:
   3c604:	ldr	r3, [r0, #184]	; 0xb8
   3c608:	cmp	r3, #0
   3c60c:	bne	3c628 <flatcc_builder_get_direct_buffer@@Base+0x24>
   3c610:	cmp	r1, #0
   3c614:	movne	r3, #0
   3c618:	movne	r0, r3
   3c61c:	moveq	r0, r1
   3c620:	strne	r3, [r1]
   3c624:	bx	lr
   3c628:	ldrd	r2, [r0, #188]	; 0xbc
   3c62c:	cmp	r2, r3
   3c630:	bne	3c610 <flatcc_builder_get_direct_buffer@@Base+0xc>
   3c634:	cmp	r1, #0
   3c638:	ldrne	r3, [r0, #212]	; 0xd4
   3c63c:	ldr	r0, [r0, #196]	; 0xc4
   3c640:	strne	r3, [r1]
   3c644:	bx	lr

0003c648 <flatcc_builder_copy_buffer@@Base>:
   3c648:	ldr	r3, [r0, #184]	; 0xb8
   3c64c:	cmp	r3, #0
   3c650:	beq	3c678 <flatcc_builder_copy_buffer@@Base+0x30>
   3c654:	add	r0, r0, #188	; 0xbc
   3c658:	str	r4, [sp, #-8]!
   3c65c:	str	lr, [sp, #4]
   3c660:	bl	3cddc <flatcc_emitter_copy_buffer@@Base>
   3c664:	cmp	r0, #0
   3c668:	beq	3c680 <flatcc_builder_copy_buffer@@Base+0x38>
   3c66c:	ldr	r4, [sp]
   3c670:	add	sp, sp, #4
   3c674:	pop	{pc}		; (ldr pc, [sp], #4)
   3c678:	mov	r0, r3
   3c67c:	bx	lr
   3c680:	ldr	r3, [pc, #32]	; 3c6a8 <flatcc_builder_copy_buffer@@Base+0x60>
   3c684:	movw	r2, #1926	; 0x786
   3c688:	ldr	r1, [pc, #28]	; 3c6ac <flatcc_builder_copy_buffer@@Base+0x64>
   3c68c:	ldr	r0, [pc, #28]	; 3c6b0 <flatcc_builder_copy_buffer@@Base+0x68>
   3c690:	add	r3, pc, r3
   3c694:	add	r3, r3, #1296	; 0x510
   3c698:	add	r1, pc, r1
   3c69c:	add	r3, r3, #4
   3c6a0:	add	r0, pc, r0
   3c6a4:	bl	1400c <__assert_fail@plt>
   3c6a8:	andeq	sp, r1, r8, ror r7
   3c6ac:	andeq	sp, r1, r0, asr #29
   3c6b0:	ldrdeq	lr, [r1], -r4

0003c6b4 <flatcc_builder_finalize_buffer@@Base>:
   3c6b4:	strd	r4, [sp, #-16]!
   3c6b8:	mov	r5, r1
   3c6bc:	str	r6, [sp, #8]
   3c6c0:	mov	r6, r0
   3c6c4:	str	lr, [sp, #12]
   3c6c8:	bl	3c560 <flatcc_builder_get_buffer_size@@Base>
   3c6cc:	cmp	r5, #0
   3c6d0:	mov	r4, r0
   3c6d4:	strne	r0, [r5]
   3c6d8:	bl	13f10 <malloc@plt>
   3c6dc:	subs	r5, r0, #0
   3c6e0:	beq	3c710 <flatcc_builder_finalize_buffer@@Base+0x5c>
   3c6e4:	mov	r2, r4
   3c6e8:	mov	r0, r6
   3c6ec:	mov	r1, r5
   3c6f0:	bl	3c648 <flatcc_builder_copy_buffer@@Base>
   3c6f4:	cmp	r0, #0
   3c6f8:	beq	3c734 <flatcc_builder_finalize_buffer@@Base+0x80>
   3c6fc:	mov	r0, r5
   3c700:	ldrd	r4, [sp]
   3c704:	ldr	r6, [sp, #8]
   3c708:	add	sp, sp, #12
   3c70c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c710:	ldr	r3, [pc, #64]	; 3c758 <flatcc_builder_finalize_buffer@@Base+0xa4>
   3c714:	movw	r2, #1944	; 0x798
   3c718:	ldr	r1, [pc, #60]	; 3c75c <flatcc_builder_finalize_buffer@@Base+0xa8>
   3c71c:	ldr	r0, [pc, #60]	; 3c760 <flatcc_builder_finalize_buffer@@Base+0xac>
   3c720:	add	r3, pc, r3
   3c724:	add	r3, r3, #1328	; 0x530
   3c728:	add	r1, pc, r1
   3c72c:	add	r0, pc, r0
   3c730:	bl	1400c <__assert_fail@plt>
   3c734:	ldr	r3, [pc, #40]	; 3c764 <flatcc_builder_finalize_buffer@@Base+0xb0>
   3c738:	movw	r2, #1948	; 0x79c
   3c73c:	ldr	r1, [pc, #36]	; 3c768 <flatcc_builder_finalize_buffer@@Base+0xb4>
   3c740:	ldr	r0, [pc, #36]	; 3c76c <flatcc_builder_finalize_buffer@@Base+0xb8>
   3c744:	add	r3, pc, r3
   3c748:	add	r3, r3, #1328	; 0x530
   3c74c:	add	r1, pc, r1
   3c750:	add	r0, pc, r0
   3c754:	bl	1400c <__assert_fail@plt>
   3c758:	andeq	sp, r1, r8, ror #13
   3c75c:	andeq	sp, r1, r0, lsr lr
   3c760:			; <UNDEFINED> instruction: 0x0000c6b0
   3c764:	andeq	sp, r1, r4, asr #13
   3c768:	andeq	sp, r1, ip, lsl #28
   3c76c:	andeq	ip, r0, ip, lsl #13

0003c770 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3c770:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c774:	mov	r5, r1
   3c778:	strd	r6, [sp, #8]
   3c77c:	mov	r6, r0
   3c780:	str	lr, [sp, #16]
   3c784:	sub	sp, sp, #12
   3c788:	bl	3c560 <flatcc_builder_get_buffer_size@@Base>
   3c78c:	cmp	r5, #0
   3c790:	mov	r4, r0
   3c794:	sub	r4, r4, #1
   3c798:	strne	r0, [r5]
   3c79c:	mov	r0, r6
   3c7a0:	bl	3c524 <flatcc_builder_get_buffer_alignment@@Base>
   3c7a4:	rsb	r3, r0, #0
   3c7a8:	add	r4, r4, r0
   3c7ac:	cmp	r0, #4
   3c7b0:	and	r4, r4, r3
   3c7b4:	mov	r3, #0
   3c7b8:	movcs	r1, r0
   3c7bc:	movcc	r1, #4
   3c7c0:	mov	r2, r4
   3c7c4:	add	r0, sp, #4
   3c7c8:	str	r3, [sp, #4]
   3c7cc:	bl	13f64 <posix_memalign@plt>
   3c7d0:	cmp	r0, #0
   3c7d4:	beq	3c800 <flatcc_builder_finalize_aligned_buffer@@Base+0x90>
   3c7d8:	ldr	r0, [sp, #4]
   3c7dc:	cmp	r0, #0
   3c7e0:	beq	3c7e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3c7e4:	bl	13ea4 <free@plt>
   3c7e8:	cmp	r5, #0
   3c7ec:	movne	r3, #0
   3c7f0:	moveq	r7, r5
   3c7f4:	movne	r7, r3
   3c7f8:	strne	r3, [r5]
   3c7fc:	b	3c824 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
   3c800:	ldr	r7, [sp, #4]
   3c804:	cmp	r7, #0
   3c808:	beq	3c7e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3c80c:	mov	r2, r4
   3c810:	mov	r0, r6
   3c814:	mov	r1, r7
   3c818:	bl	3c648 <flatcc_builder_copy_buffer@@Base>
   3c81c:	cmp	r0, #0
   3c820:	beq	3c83c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   3c824:	mov	r0, r7
   3c828:	add	sp, sp, #12
   3c82c:	ldrd	r4, [sp]
   3c830:	ldrd	r6, [sp, #8]
   3c834:	add	sp, sp, #16
   3c838:	pop	{pc}		; (ldr pc, [sp], #4)
   3c83c:	mov	r0, r7
   3c840:	b	3c7e4 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>

0003c844 <flatcc_builder_aligned_alloc@@Base>:
   3c844:	cmp	r0, #4
   3c848:	str	r4, [sp, #-8]!
   3c84c:	mov	r4, #0
   3c850:	str	lr, [sp, #4]
   3c854:	sub	sp, sp, #8
   3c858:	mov	r2, r1
   3c85c:	movcs	r1, r0
   3c860:	movcc	r1, #4
   3c864:	add	r0, sp, #4
   3c868:	str	r4, [sp, #4]
   3c86c:	bl	13f64 <posix_memalign@plt>
   3c870:	cmp	r0, r4
   3c874:	ldr	r0, [sp, #4]
   3c878:	beq	3c88c <flatcc_builder_aligned_alloc@@Base+0x48>
   3c87c:	cmp	r0, #0
   3c880:	beq	3c88c <flatcc_builder_aligned_alloc@@Base+0x48>
   3c884:	bl	13ea4 <free@plt>
   3c888:	mov	r0, r4
   3c88c:	add	sp, sp, #8
   3c890:	ldr	r4, [sp]
   3c894:	add	sp, sp, #4
   3c898:	pop	{pc}		; (ldr pc, [sp], #4)

0003c89c <flatcc_builder_aligned_free@@Base>:
   3c89c:	b	13ea4 <free@plt>

0003c8a0 <flatcc_builder_get_emit_context@@Base>:
   3c8a0:	ldr	r0, [r0, #36]	; 0x24
   3c8a4:	bx	lr

0003c8a8 <flatcc_emitter_recycle_page@@Base>:
   3c8a8:	ldr	r3, [r0]
   3c8ac:	cmp	r3, r1
   3c8b0:	beq	3c8f4 <flatcc_emitter_recycle_page@@Base+0x4c>
   3c8b4:	ldr	r2, [r0, #4]
   3c8b8:	cmp	r2, r1
   3c8bc:	beq	3c8f4 <flatcc_emitter_recycle_page@@Base+0x4c>
   3c8c0:	push	{lr}		; (str lr, [sp, #-4]!)
   3c8c4:	mov	r0, #0
   3c8c8:	ldr	lr, [r1, #2944]	; 0xb80
   3c8cc:	ldr	ip, [r1, #2948]	; 0xb84
   3c8d0:	str	ip, [lr, #2948]	; 0xb84
   3c8d4:	ldr	r2, [r3, #2948]	; 0xb84
   3c8d8:	str	lr, [ip, #2944]	; 0xb80
   3c8dc:	str	r3, [r1, #2944]	; 0xb80
   3c8e0:	str	r2, [r1, #2948]	; 0xb84
   3c8e4:	str	r1, [r2, #2944]	; 0xb80
   3c8e8:	ldr	r3, [r1, #2944]	; 0xb80
   3c8ec:	str	r1, [r3, #2948]	; 0xb84
   3c8f0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8f4:	mvn	r0, #0
   3c8f8:	bx	lr

0003c8fc <flatcc_emitter_reset@@Base>:
   3c8fc:	ldr	r2, [r0]
   3c900:	cmp	r2, #0
   3c904:	bxeq	lr
   3c908:	strd	r4, [sp, #-16]!
   3c90c:	movw	ip, #64064	; 0xfa40
   3c910:	movt	ip, #65535	; 0xffff
   3c914:	ldr	r1, [r0, #24]
   3c918:	add	r4, r2, #1472	; 0x5c0
   3c91c:	ldr	r3, [r0, #32]
   3c920:	ldr	r5, [r0, #28]
   3c924:	str	r6, [sp, #8]
   3c928:	str	lr, [sp, #12]
   3c92c:	mov	lr, #1472	; 0x5c0
   3c930:	cmp	r3, #0
   3c934:	stmib	r0, {r2, r4}
   3c938:	moveq	r3, r1
   3c93c:	lsr	r1, r1, #2
   3c940:	str	lr, [r0, #12]
   3c944:	add	r3, r3, r3, lsl #1
   3c948:	str	r4, [r0, #16]
   3c94c:	str	lr, [r0, #20]
   3c950:	add	r3, r1, r3, lsr #2
   3c954:	str	ip, [r2, #2952]	; 0xb88
   3c958:	mov	ip, #0
   3c95c:	cmp	r5, r3, lsl #1
   3c960:	str	ip, [r0, #24]
   3c964:	str	r3, [r0, #32]
   3c968:	bls	3c9c0 <flatcc_emitter_reset@@Base+0xc4>
   3c96c:	ldr	r3, [r2, #2944]	; 0xb80
   3c970:	mov	r4, r0
   3c974:	cmp	r2, r3
   3c978:	bne	3c990 <flatcc_emitter_reset@@Base+0x94>
   3c97c:	b	3c9c0 <flatcc_emitter_reset@@Base+0xc4>
   3c980:	ldm	r4, {r1, r2}
   3c984:	ldr	r3, [r2, #2944]	; 0xb80
   3c988:	cmp	r3, r1
   3c98c:	beq	3c9c0 <flatcc_emitter_reset@@Base+0xc4>
   3c990:	ldr	r1, [r3, #2944]	; 0xb80
   3c994:	mov	r0, r3
   3c998:	str	r1, [r2, #2944]	; 0xb80
   3c99c:	ldr	r3, [r3, #2944]	; 0xb80
   3c9a0:	str	r2, [r3, #2948]	; 0xb84
   3c9a4:	bl	13ea4 <free@plt>
   3c9a8:	ldr	r3, [r4, #28]
   3c9ac:	ldr	r2, [r4, #32]
   3c9b0:	sub	r3, r3, #2944	; 0xb80
   3c9b4:	cmp	r3, r2, lsl #1
   3c9b8:	str	r3, [r4, #28]
   3c9bc:	bhi	3c980 <flatcc_emitter_reset@@Base+0x84>
   3c9c0:	ldrd	r4, [sp]
   3c9c4:	ldr	r6, [sp, #8]
   3c9c8:	add	sp, sp, #12
   3c9cc:	pop	{pc}		; (ldr pc, [sp], #4)

0003c9d0 <flatcc_emitter_clear@@Base>:
   3c9d0:	ldr	r3, [r0]
   3c9d4:	cmp	r3, #0
   3c9d8:	bxeq	lr
   3c9dc:	mov	r1, #0
   3c9e0:	strd	r4, [sp, #-16]!
   3c9e4:	mov	r5, r0
   3c9e8:	ldr	r2, [r3, #2948]	; 0xb84
   3c9ec:	str	r6, [sp, #8]
   3c9f0:	str	lr, [sp, #12]
   3c9f4:	str	r1, [r2, #2944]	; 0xb80
   3c9f8:	ldr	r4, [r3, #2944]	; 0xb80
   3c9fc:	cmp	r4, r1
   3ca00:	bne	3ca0c <flatcc_emitter_clear@@Base+0x3c>
   3ca04:	b	3ca48 <flatcc_emitter_clear@@Base+0x78>
   3ca08:	mov	r4, r3
   3ca0c:	ldr	r0, [r4, #2948]	; 0xb84
   3ca10:	bl	13ea4 <free@plt>
   3ca14:	ldr	r3, [r4, #2944]	; 0xb80
   3ca18:	cmp	r3, #0
   3ca1c:	bne	3ca08 <flatcc_emitter_clear@@Base+0x38>
   3ca20:	mov	r0, r4
   3ca24:	bl	13ea4 <free@plt>
   3ca28:	mov	r0, r5
   3ca2c:	mov	r2, #36	; 0x24
   3ca30:	ldrd	r4, [sp]
   3ca34:	mov	r1, #0
   3ca38:	ldr	r6, [sp, #8]
   3ca3c:	ldr	lr, [sp, #12]
   3ca40:	add	sp, sp, #16
   3ca44:	b	13f70 <memset@plt>
   3ca48:	mov	r4, r3
   3ca4c:	b	3ca20 <flatcc_emitter_clear@@Base+0x50>

0003ca50 <flatcc_emitter@@Base>:
   3ca50:	cmp	r3, #0
   3ca54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3ca58:	mov	r4, r0
   3ca5c:	ldr	r3, [r0, #24]
   3ca60:	strd	r6, [sp, #8]
   3ca64:	strd	r8, [sp, #16]
   3ca68:	sub	r8, r2, #1
   3ca6c:	strd	sl, [sp, #24]
   3ca70:	str	lr, [sp, #32]
   3ca74:	sub	sp, sp, #12
   3ca78:	ldr	r0, [sp, #48]	; 0x30
   3ca7c:	add	r3, r3, r0
   3ca80:	str	r3, [r4, #24]
   3ca84:	blt	3cc54 <flatcc_emitter@@Base+0x204>
   3ca88:	ldr	r3, [r4, #20]
   3ca8c:	cmp	r3, r0
   3ca90:	bcs	3cb30 <flatcc_emitter@@Base+0xe0>
   3ca94:	cmp	r2, #0
   3ca98:	beq	3cb10 <flatcc_emitter@@Base+0xc0>
   3ca9c:	mov	r8, r2
   3caa0:	add	r5, r1, #8
   3caa4:	movw	r2, #64064	; 0xfa40
   3caa8:	movt	r2, #65535	; 0xffff
   3caac:	str	r2, [sp, #4]
   3cab0:	ldmdb	r5, {r7, fp}
   3cab4:	cmp	fp, #0
   3cab8:	beq	3cb04 <flatcc_emitter@@Base+0xb4>
   3cabc:	mov	r9, #1472	; 0x5c0
   3cac0:	cmp	fp, r3
   3cac4:	mov	r6, r3
   3cac8:	bls	3cbc0 <flatcc_emitter@@Base+0x170>
   3cacc:	cmp	r3, #0
   3cad0:	subne	fp, fp, r3
   3cad4:	beq	3cb78 <flatcc_emitter@@Base+0x128>
   3cad8:	mov	r2, r6
   3cadc:	mov	r1, r7
   3cae0:	ldr	r0, [r4, #16]
   3cae4:	bl	13eb0 <memcpy@plt>
   3cae8:	ldrd	r2, [r4, #16]
   3caec:	cmp	fp, #0
   3caf0:	add	r7, r7, r6
   3caf4:	add	r2, r2, r6
   3caf8:	sub	r3, r3, r6
   3cafc:	strd	r2, [r4, #16]
   3cb00:	bne	3cac0 <flatcc_emitter@@Base+0x70>
   3cb04:	subs	r8, r8, #1
   3cb08:	add	r5, r5, #8
   3cb0c:	bne	3cab0 <flatcc_emitter@@Base+0x60>
   3cb10:	mov	r0, #0
   3cb14:	add	sp, sp, #12
   3cb18:	ldrd	r4, [sp]
   3cb1c:	ldrd	r6, [sp, #8]
   3cb20:	ldrd	r8, [sp, #16]
   3cb24:	ldrd	sl, [sp, #24]
   3cb28:	add	sp, sp, #32
   3cb2c:	pop	{pc}		; (ldr pc, [sp], #4)
   3cb30:	ldr	r7, [r4, #16]
   3cb34:	sub	r3, r3, r0
   3cb38:	str	r3, [r4, #20]
   3cb3c:	add	r0, r7, r0
   3cb40:	str	r0, [r4, #16]
   3cb44:	cmp	r2, #0
   3cb48:	addne	r4, r1, #8
   3cb4c:	beq	3cb10 <flatcc_emitter@@Base+0xc0>
   3cb50:	mov	r0, r7
   3cb54:	ldmdb	r4, {r1, r2}
   3cb58:	sub	r8, r8, #1
   3cb5c:	bl	13eb0 <memcpy@plt>
   3cb60:	ldr	r3, [r4, #-4]
   3cb64:	cmn	r8, #1
   3cb68:	add	r4, r4, #8
   3cb6c:	add	r7, r7, r3
   3cb70:	bne	3cb50 <flatcc_emitter@@Base+0x100>
   3cb74:	b	3cb10 <flatcc_emitter@@Base+0xc0>
   3cb78:	ldr	r6, [r4, #4]
   3cb7c:	cmp	r6, #0
   3cb80:	beq	3cc00 <flatcc_emitter@@Base+0x1b0>
   3cb84:	ldr	sl, [r4]
   3cb88:	ldr	r0, [r6, #2944]	; 0xb80
   3cb8c:	cmp	r0, sl
   3cb90:	beq	3cbcc <flatcc_emitter@@Base+0x17c>
   3cb94:	str	r0, [r4, #4]
   3cb98:	ldr	r2, [r0, #2948]	; 0xb84
   3cb9c:	mov	r3, #2944	; 0xb80
   3cba0:	cmp	fp, r3
   3cba4:	mov	r6, r3
   3cba8:	ldr	r2, [r2, #2952]	; 0xb88
   3cbac:	str	r0, [r4, #16]
   3cbb0:	str	r3, [r4, #20]
   3cbb4:	add	r2, r2, r3
   3cbb8:	str	r2, [r0, #2952]	; 0xb88
   3cbbc:	bhi	3cacc <flatcc_emitter@@Base+0x7c>
   3cbc0:	mov	r6, fp
   3cbc4:	mov	fp, #0
   3cbc8:	b	3cad8 <flatcc_emitter@@Base+0x88>
   3cbcc:	movw	r0, #2956	; 0xb8c
   3cbd0:	bl	13f10 <malloc@plt>
   3cbd4:	cmp	r0, #0
   3cbd8:	beq	3cc4c <flatcc_emitter@@Base+0x1fc>
   3cbdc:	ldr	r2, [r4, #28]
   3cbe0:	str	sl, [r0, #2944]	; 0xb80
   3cbe4:	str	r6, [r0, #2948]	; 0xb84
   3cbe8:	add	r2, r2, #2944	; 0xb80
   3cbec:	str	r2, [r4, #28]
   3cbf0:	str	r0, [sl, #2948]	; 0xb84
   3cbf4:	str	r0, [r6, #2944]	; 0xb80
   3cbf8:	str	r0, [r4, #4]
   3cbfc:	b	3cb98 <flatcc_emitter@@Base+0x148>
   3cc00:	movw	r0, #2956	; 0xb8c
   3cc04:	bl	13f10 <malloc@plt>
   3cc08:	cmp	r0, #0
   3cc0c:	beq	3cc4c <flatcc_emitter@@Base+0x1fc>
   3cc10:	ldr	r2, [r4, #28]
   3cc14:	add	r1, r0, #1472	; 0x5c0
   3cc18:	mov	r3, #1472	; 0x5c0
   3cc1c:	str	r0, [r4]
   3cc20:	strd	r0, [r4, #4]
   3cc24:	str	r9, [r4, #12]
   3cc28:	str	r1, [r4, #16]
   3cc2c:	add	r2, r2, #2944	; 0xb80
   3cc30:	str	r9, [r4, #20]
   3cc34:	str	r0, [r0, #2944]	; 0xb80
   3cc38:	str	r2, [r4, #28]
   3cc3c:	ldr	r2, [sp, #4]
   3cc40:	str	r0, [r0, #2948]	; 0xb84
   3cc44:	str	r2, [r0, #2952]	; 0xb88
   3cc48:	b	3cac0 <flatcc_emitter@@Base+0x70>
   3cc4c:	mvn	r0, #0
   3cc50:	b	3cb14 <flatcc_emitter@@Base+0xc4>
   3cc54:	ldr	r3, [r4, #12]
   3cc58:	cmp	r3, r0
   3cc5c:	bcs	3cdc4 <flatcc_emitter@@Base+0x374>
   3cc60:	add	r5, r1, r2, lsl #3
   3cc64:	movw	r3, #64064	; 0xfa40
   3cc68:	movt	r3, #65535	; 0xffff
   3cc6c:	str	r3, [sp, #4]
   3cc70:	cmn	r8, #1
   3cc74:	beq	3cb10 <flatcc_emitter@@Base+0xc0>
   3cc78:	ldr	r7, [r5, #-8]
   3cc7c:	ldr	r6, [r5, #-4]
   3cc80:	cmp	r6, #0
   3cc84:	add	r7, r7, r6
   3cc88:	beq	3ccd8 <flatcc_emitter@@Base+0x288>
   3cc8c:	mov	r9, #1472	; 0x5c0
   3cc90:	ldr	r2, [r4, #12]
   3cc94:	cmp	r2, r6
   3cc98:	bcs	3cd3c <flatcc_emitter@@Base+0x2ec>
   3cc9c:	cmp	r2, #0
   3cca0:	beq	3cce4 <flatcc_emitter@@Base+0x294>
   3cca4:	sub	r6, r6, r2
   3cca8:	mov	r1, #0
   3ccac:	ldr	r3, [r4, #8]
   3ccb0:	rsb	r0, r2, #0
   3ccb4:	add	r7, r7, r0
   3ccb8:	str	r1, [r4, #12]
   3ccbc:	mov	r1, r7
   3ccc0:	add	r3, r3, r0
   3ccc4:	mov	r0, r3
   3ccc8:	str	r3, [r4, #8]
   3cccc:	bl	13eb0 <memcpy@plt>
   3ccd0:	cmp	r6, #0
   3ccd4:	bne	3cc90 <flatcc_emitter@@Base+0x240>
   3ccd8:	sub	r5, r5, #8
   3ccdc:	sub	r8, r8, #1
   3cce0:	b	3cc70 <flatcc_emitter@@Base+0x220>
   3cce4:	ldr	fp, [r4]
   3cce8:	cmp	fp, #0
   3ccec:	beq	3cd80 <flatcc_emitter@@Base+0x330>
   3ccf0:	ldr	sl, [r4, #4]
   3ccf4:	ldr	r0, [fp, #2948]	; 0xb84
   3ccf8:	cmp	r0, sl
   3ccfc:	beq	3cd4c <flatcc_emitter@@Base+0x2fc>
   3cd00:	ldr	r3, [fp, #2952]	; 0xb88
   3cd04:	sub	r3, r3, #2944	; 0xb80
   3cd08:	str	r3, [r0, #2952]	; 0xb88
   3cd0c:	str	r0, [r4]
   3cd10:	ldr	r3, [r0, #2944]	; 0xb80
   3cd14:	mov	r2, #2944	; 0xb80
   3cd18:	add	r1, r0, #2944	; 0xb80
   3cd1c:	ldr	r3, [r3, #2952]	; 0xb88
   3cd20:	str	r1, [r4, #8]
   3cd24:	str	r2, [r4, #12]
   3cd28:	sub	r3, r3, #2944	; 0xb80
   3cd2c:	str	r3, [r0, #2952]	; 0xb88
   3cd30:	ldr	r2, [r4, #12]
   3cd34:	cmp	r2, r6
   3cd38:	bcc	3cc9c <flatcc_emitter@@Base+0x24c>
   3cd3c:	sub	r1, r2, r6
   3cd40:	mov	r2, r6
   3cd44:	mov	r6, #0
   3cd48:	b	3ccac <flatcc_emitter@@Base+0x25c>
   3cd4c:	movw	r0, #2956	; 0xb8c
   3cd50:	bl	13f10 <malloc@plt>
   3cd54:	cmp	r0, #0
   3cd58:	beq	3cc4c <flatcc_emitter@@Base+0x1fc>
   3cd5c:	ldr	r2, [r4, #28]
   3cd60:	str	fp, [r0, #2944]	; 0xb80
   3cd64:	str	sl, [r0, #2948]	; 0xb84
   3cd68:	add	r2, r2, #2944	; 0xb80
   3cd6c:	str	r2, [r4, #28]
   3cd70:	str	r0, [fp, #2948]	; 0xb84
   3cd74:	str	r0, [sl, #2944]	; 0xb80
   3cd78:	str	r0, [r4]
   3cd7c:	b	3cd10 <flatcc_emitter@@Base+0x2c0>
   3cd80:	movw	r0, #2956	; 0xb8c
   3cd84:	bl	13f10 <malloc@plt>
   3cd88:	cmp	r0, #0
   3cd8c:	beq	3cc4c <flatcc_emitter@@Base+0x1fc>
   3cd90:	ldr	r3, [r4, #28]
   3cd94:	add	r2, r0, #1472	; 0x5c0
   3cd98:	str	r0, [r4]
   3cd9c:	stmib	r4, {r0, r2, r9}
   3cda0:	add	r3, r3, #2944	; 0xb80
   3cda4:	str	r2, [r4, #16]
   3cda8:	str	r9, [r4, #20]
   3cdac:	str	r3, [r4, #28]
   3cdb0:	ldr	r3, [sp, #4]
   3cdb4:	str	r0, [r0, #2944]	; 0xb80
   3cdb8:	str	r0, [r0, #2948]	; 0xb84
   3cdbc:	str	r3, [r0, #2952]	; 0xb88
   3cdc0:	b	3cc90 <flatcc_emitter@@Base+0x240>
   3cdc4:	ldr	r7, [r4, #8]
   3cdc8:	sub	r3, r3, r0
   3cdcc:	str	r3, [r4, #12]
   3cdd0:	sub	r7, r7, r0
   3cdd4:	str	r7, [r4, #8]
   3cdd8:	b	3cb44 <flatcc_emitter@@Base+0xf4>

0003cddc <flatcc_emitter_copy_buffer@@Base>:
   3cddc:	ldr	r3, [r0, #24]
   3cde0:	strd	r4, [sp, #-16]!
   3cde4:	str	r6, [sp, #8]
   3cde8:	str	lr, [sp, #12]
   3cdec:	cmp	r3, r2
   3cdf0:	movhi	r5, #0
   3cdf4:	bhi	3ce74 <flatcc_emitter_copy_buffer@@Base+0x98>
   3cdf8:	ldr	r5, [r0]
   3cdfc:	mov	r6, r0
   3ce00:	cmp	r5, #0
   3ce04:	beq	3ce74 <flatcc_emitter_copy_buffer@@Base+0x98>
   3ce08:	ldr	r2, [r6, #4]
   3ce0c:	mov	r0, r1
   3ce10:	ldr	r1, [r6, #8]
   3ce14:	cmp	r5, r2
   3ce18:	beq	3ce88 <flatcc_emitter_copy_buffer@@Base+0xac>
   3ce1c:	ldr	r2, [r6, #12]
   3ce20:	rsb	r2, r2, #2944	; 0xb80
   3ce24:	add	r5, r0, r2
   3ce28:	bl	13eb0 <memcpy@plt>
   3ce2c:	ldrd	r2, [r6]
   3ce30:	ldr	r4, [r2, #2944]	; 0xb80
   3ce34:	cmp	r4, r3
   3ce38:	beq	3ce60 <flatcc_emitter_copy_buffer@@Base+0x84>
   3ce3c:	mov	r2, #2944	; 0xb80
   3ce40:	mov	r1, r4
   3ce44:	mov	r0, r5
   3ce48:	add	r5, r5, r2
   3ce4c:	bl	13eb0 <memcpy@plt>
   3ce50:	ldr	r3, [r6, #4]
   3ce54:	ldr	r4, [r4, #2944]	; 0xb80
   3ce58:	cmp	r3, r4
   3ce5c:	bne	3ce3c <flatcc_emitter_copy_buffer@@Base+0x60>
   3ce60:	ldr	r2, [r6, #20]
   3ce64:	mov	r1, r4
   3ce68:	mov	r0, r5
   3ce6c:	rsb	r2, r2, #2944	; 0xb80
   3ce70:	bl	13eb0 <memcpy@plt>
   3ce74:	mov	r0, r5
   3ce78:	ldrd	r4, [sp]
   3ce7c:	ldr	r6, [sp, #8]
   3ce80:	add	sp, sp, #12
   3ce84:	pop	{pc}		; (ldr pc, [sp], #4)
   3ce88:	mov	r2, r3
   3ce8c:	mov	r5, r0
   3ce90:	bl	13eb0 <memcpy@plt>
   3ce94:	b	3ce74 <flatcc_emitter_copy_buffer@@Base+0x98>

0003ce98 <cmetrohash64_1@@Base>:
   3ce98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3ce9c:	movw	ip, #24283	; 0x5edb
   3cea0:	movt	ip, #44806	; 0xaf06
   3cea4:	strd	r6, [sp, #8]
   3cea8:	adds	r4, r2, ip
   3ceac:	movw	r6, #23867	; 0x5d3b
   3ceb0:	movt	r6, #24802	; 0x60e2
   3ceb4:	strd	r8, [sp, #16]
   3ceb8:	add	ip, r0, r2
   3cebc:	strd	sl, [sp, #24]
   3cec0:	adc	r5, r3, r6
   3cec4:	cmp	r3, #0
   3cec8:	str	lr, [sp, #32]
   3cecc:	sub	sp, sp, #68	; 0x44
   3ced0:	mov	r3, r5
   3ced4:	ldr	lr, [sp, #104]	; 0x68
   3ced8:	movw	r1, #37345	; 0x91e1
   3cedc:	movt	r1, #51258	; 0xc83a
   3cee0:	cmpeq	r2, #31
   3cee4:	mov	r2, r4
   3cee8:	str	ip, [sp, #52]	; 0x34
   3ceec:	umlal	r2, r3, r1, lr
   3cef0:	mov	r4, r2
   3cef4:	mov	r5, r3
   3cef8:	strd	r4, [sp, #8]
   3cefc:	bls	3d194 <cmetrohash64_1@@Base+0x2fc>
   3cf00:	movw	lr, #49211	; 0xc03b
   3cf04:	movt	lr, #31710	; 0x7bde
   3cf08:	str	r4, [sp]
   3cf0c:	str	r1, [sp, #32]
   3cf10:	movw	r1, #56283	; 0xdbdb
   3cf14:	movt	r1, #34376	; 0x8648
   3cf18:	mov	fp, r3
   3cf1c:	mov	sl, r2
   3cf20:	str	r5, [sp, #28]
   3cf24:	str	r1, [sp, #36]	; 0x24
   3cf28:	movw	r1, #28837	; 0x70a5
   3cf2c:	movt	r1, #12120	; 0x2f58
   3cf30:	mov	r3, r2
   3cf34:	str	r1, [sp, #44]	; 0x2c
   3cf38:	sub	r1, ip, #32
   3cf3c:	mov	ip, r5
   3cf40:	str	r1, [sp, #40]	; 0x28
   3cf44:	mov	r1, r5
   3cf48:	str	lr, [sp, #48]	; 0x30
   3cf4c:	ldr	r4, [r0]
   3cf50:	add	r0, r0, #32
   3cf54:	ldr	r7, [sp, #32]
   3cf58:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3cf5c:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3cf60:	umull	r4, r5, r4, r7
   3cf64:	ldr	lr, [r0, #-20]	; 0xffffffec
   3cf68:	mla	r5, r7, r6, r5
   3cf6c:	ldr	r7, [sp, #36]	; 0x24
   3cf70:	adds	r3, r4, r3
   3cf74:	ldr	r6, [r0, #-16]
   3cf78:	adc	r4, r5, r1
   3cf7c:	lsr	r1, r4, #29
   3cf80:	umull	r8, r9, r8, r7
   3cf84:	orr	r5, r1, r3, lsl #3
   3cf88:	mla	r9, r7, lr, r9
   3cf8c:	ldr	lr, [r0, #-12]
   3cf90:	lsr	r7, r3, #29
   3cf94:	orr	r3, r7, r4, lsl #3
   3cf98:	ldr	r4, [r0, #-8]
   3cf9c:	adds	r3, r3, r2
   3cfa0:	adc	r1, r5, ip
   3cfa4:	adds	sl, r8, sl
   3cfa8:	lsr	r8, sl, #29
   3cfac:	adc	r5, r9, fp
   3cfb0:	ldr	r9, [sp, #48]	; 0x30
   3cfb4:	lsr	fp, r5, #29
   3cfb8:	orr	r5, r8, r5, lsl #3
   3cfbc:	ldr	r8, [sp]
   3cfc0:	orr	fp, fp, sl, lsl #3
   3cfc4:	umull	r6, r7, r6, r9
   3cfc8:	adds	sl, r5, r8
   3cfcc:	ldr	r5, [sp, #44]	; 0x2c
   3cfd0:	mla	r7, r9, lr, r7
   3cfd4:	ldr	r9, [sp, #28]
   3cfd8:	ldr	lr, [r0, #-4]
   3cfdc:	str	r5, [sp, #16]
   3cfe0:	umull	r4, r5, r4, r5
   3cfe4:	adc	fp, fp, r9
   3cfe8:	adds	r2, r6, r2
   3cfec:	strd	r4, [sp]
   3cff0:	adc	ip, r7, ip
   3cff4:	lsr	r6, r2, #29
   3cff8:	ldr	r4, [sp, #4]
   3cffc:	lsr	r7, ip, #29
   3d000:	orr	ip, r6, ip, lsl #3
   3d004:	ldr	r5, [sp, #16]
   3d008:	orr	r7, r7, r2, lsl #3
   3d00c:	adds	r2, ip, r3
   3d010:	adc	ip, r7, r1
   3d014:	mla	lr, r5, lr, r4
   3d018:	str	lr, [sp, #4]
   3d01c:	ldrd	r6, [sp]
   3d020:	adds	r4, r6, r8
   3d024:	lsr	lr, r4, #29
   3d028:	adc	r6, r7, r9
   3d02c:	lsr	r5, r6, #29
   3d030:	orr	lr, lr, r6, lsl #3
   3d034:	orr	r4, r5, r4, lsl #3
   3d038:	adds	lr, lr, sl
   3d03c:	str	lr, [sp]
   3d040:	adc	lr, r4, fp
   3d044:	str	lr, [sp, #28]
   3d048:	ldr	lr, [sp, #40]	; 0x28
   3d04c:	cmp	r0, lr
   3d050:	bls	3cf4c <cmetrohash64_1@@Base+0xb4>
   3d054:	eor	r5, r3, sl
   3d058:	ldr	lr, [sp]
   3d05c:	eor	r6, r1, fp
   3d060:	str	r5, [sp, #40]	; 0x28
   3d064:	ldr	r5, [sp, #28]
   3d068:	ldrd	r8, [sp, #32]
   3d06c:	adds	r4, r3, lr
   3d070:	str	r6, [sp, #32]
   3d074:	adc	lr, r1, r5
   3d078:	umull	r4, r5, r4, r8
   3d07c:	mla	r5, r8, lr, r5
   3d080:	adds	r6, r4, sl
   3d084:	lsl	r4, r6, #31
   3d088:	adc	lr, r5, fp
   3d08c:	orr	r4, r4, lr, lsr #1
   3d090:	lsl	lr, lr, #31
   3d094:	umull	r4, r5, r4, r9
   3d098:	orr	lr, lr, r6, lsr #1
   3d09c:	eor	r6, r4, r2
   3d0a0:	mla	r5, r9, lr, r5
   3d0a4:	adds	r4, sl, r6
   3d0a8:	eor	r7, r5, ip
   3d0ac:	umull	r4, r5, r4, r9
   3d0b0:	adc	r2, fp, r7
   3d0b4:	mla	r5, r9, r2, r5
   3d0b8:	adds	lr, r4, r3
   3d0bc:	lsl	r2, lr, #31
   3d0c0:	adc	ip, r5, r1
   3d0c4:	adds	r4, r3, r6
   3d0c8:	orr	r2, r2, ip, lsr #1
   3d0cc:	adc	r1, r1, r7
   3d0d0:	lsl	ip, ip, #31
   3d0d4:	umull	r4, r5, r4, r8
   3d0d8:	umull	r2, r3, r2, r8
   3d0dc:	orr	ip, ip, lr, lsr #1
   3d0e0:	mov	lr, r8
   3d0e4:	mla	r5, r8, r1, r5
   3d0e8:	strd	r2, [sp, #16]
   3d0ec:	mla	r3, r8, ip, r3
   3d0f0:	ldr	r2, [sp, #16]
   3d0f4:	mov	ip, r9
   3d0f8:	str	r3, [sp, #20]
   3d0fc:	ldr	r3, [sp]
   3d100:	ldr	r8, [sp, #20]
   3d104:	eor	r2, r2, r3
   3d108:	ldr	r3, [sp, #28]
   3d10c:	eor	r8, r8, r3
   3d110:	adds	r3, r4, r2
   3d114:	adc	r1, r5, r8
   3d118:	adds	sl, sl, r2
   3d11c:	lsl	r4, r3, #31
   3d120:	adc	r5, fp, r8
   3d124:	lsl	r2, r1, #31
   3d128:	umull	r8, r9, sl, r9
   3d12c:	mov	sl, ip
   3d130:	orr	r4, r4, r1, lsr #1
   3d134:	orr	r3, r2, r3, lsr #1
   3d138:	mla	r9, ip, r5, r9
   3d13c:	adds	r2, r8, r6
   3d140:	umull	r4, r5, r4, ip
   3d144:	lsl	r1, r2, #31
   3d148:	adc	ip, r9, r7
   3d14c:	lsl	r6, ip, #31
   3d150:	mla	r5, sl, r3, r5
   3d154:	ldr	r3, [sp, #40]	; 0x28
   3d158:	orr	ip, r1, ip, lsr #1
   3d15c:	ldr	r1, [sp, #8]
   3d160:	orr	r6, r6, r2, lsr #1
   3d164:	umull	r8, r9, ip, lr
   3d168:	ldr	r2, [sp, #32]
   3d16c:	eor	r3, r4, r3
   3d170:	eor	r3, r3, r8
   3d174:	mla	r9, lr, r6, r9
   3d178:	adds	r3, r1, r3
   3d17c:	eor	r2, r5, r2
   3d180:	str	r3, [sp, #8]
   3d184:	eor	r2, r2, r9
   3d188:	ldr	r3, [sp, #12]
   3d18c:	adc	r3, r3, r2
   3d190:	str	r3, [sp, #12]
   3d194:	ldr	r7, [sp, #52]	; 0x34
   3d198:	sub	r3, r7, r0
   3d19c:	cmp	r3, #15
   3d1a0:	ble	3d2fc <cmetrohash64_1@@Base+0x464>
   3d1a4:	ldr	r2, [r0]
   3d1a8:	movw	r3, #37345	; 0x91e1
   3d1ac:	movt	r3, #51258	; 0xc83a
   3d1b0:	movw	sl, #56283	; 0xdbdb
   3d1b4:	movt	sl, #34376	; 0x8648
   3d1b8:	ldr	r1, [r0, #4]
   3d1bc:	movw	r5, #46599	; 0xb607
   3d1c0:	movt	r5, #13299	; 0x33f3
   3d1c4:	add	r0, r0, #16
   3d1c8:	movw	lr, #42186	; 0xa4ca
   3d1cc:	movt	lr, #26887	; 0x6907
   3d1d0:	ldr	r4, [r0, #-8]
   3d1d4:	movw	r6, #18043	; 0x467b
   3d1d8:	movt	r6, #12846	; 0x322e
   3d1dc:	umull	r8, r9, r2, r3
   3d1e0:	str	r5, [sp, #16]
   3d1e4:	ldr	r2, [r0, #-4]
   3d1e8:	movw	ip, #45150	; 0xb05e
   3d1ec:	movt	ip, #5864	; 0x16e8
   3d1f0:	movw	fp, #49211	; 0xc03b
   3d1f4:	movt	fp, #31710	; 0x7bde
   3d1f8:	mla	r3, r3, r1, r9
   3d1fc:	umull	r4, r5, r4, sl
   3d200:	mov	r9, r3
   3d204:	sub	r3, r7, r0
   3d208:	strd	r4, [sp]
   3d20c:	mov	r5, r9
   3d210:	ldmib	sp, {r1, r7}
   3d214:	mla	r2, sl, r2, r1
   3d218:	ldr	r1, [sp, #8]
   3d21c:	str	r2, [sp, #4]
   3d220:	mov	r2, r5
   3d224:	ldrd	r4, [sp]
   3d228:	adds	r9, r8, r1
   3d22c:	ldr	r1, [sp, #12]
   3d230:	lsl	r8, r9, #31
   3d234:	adc	r1, r2, r1
   3d238:	adds	r7, r4, r7
   3d23c:	mov	r2, r5
   3d240:	ldrd	r4, [sp, #12]
   3d244:	orr	r8, r8, r1, lsr #1
   3d248:	lsl	r1, r1, #31
   3d24c:	mul	lr, lr, r8
   3d250:	orr	r1, r1, r9, lsr #1
   3d254:	adc	r2, r2, r4
   3d258:	lsl	r4, r7, #31
   3d25c:	orr	r4, r4, r2, lsr #1
   3d260:	lsl	r2, r2, #31
   3d264:	mla	lr, r6, r1, lr
   3d268:	orr	r2, r2, r7, lsr #1
   3d26c:	umull	r6, r7, r8, r6
   3d270:	umull	r8, r9, r8, sl
   3d274:	mul	ip, ip, r4
   3d278:	add	r7, lr, r7
   3d27c:	strd	r8, [sp]
   3d280:	umull	r8, r9, r4, fp
   3d284:	ldr	lr, [sp, #4]
   3d288:	mla	ip, r5, r2, ip
   3d28c:	umull	r4, r5, r4, r5
   3d290:	mla	r9, fp, r2, r9
   3d294:	lsl	r2, r7, #29
   3d298:	add	r5, ip, r5
   3d29c:	lsl	ip, r4, #29
   3d2a0:	mla	r1, sl, r1, lr
   3d2a4:	orr	ip, ip, r5, lsr #3
   3d2a8:	lsl	lr, r5, #29
   3d2ac:	str	r1, [sp, #4]
   3d2b0:	lsl	r1, r6, #29
   3d2b4:	ldrd	sl, [sp]
   3d2b8:	orr	r6, r2, r6, lsr #3
   3d2bc:	orr	r1, r1, r7, lsr #3
   3d2c0:	ldr	r2, [sp, #8]
   3d2c4:	orr	r4, lr, r4, lsr #3
   3d2c8:	adds	r1, r1, r8
   3d2cc:	adc	r6, r6, r9
   3d2d0:	eor	r1, r1, sl
   3d2d4:	eor	r6, r6, fp
   3d2d8:	adds	r1, r1, ip
   3d2dc:	eor	r1, r1, r8
   3d2e0:	adc	r4, r6, r4
   3d2e4:	adds	r2, r2, r1
   3d2e8:	eor	r4, r4, r9
   3d2ec:	str	r2, [sp, #8]
   3d2f0:	ldr	r2, [sp, #12]
   3d2f4:	adc	r2, r2, r4
   3d2f8:	str	r2, [sp, #12]
   3d2fc:	cmp	r3, #7
   3d300:	ble	3d364 <cmetrohash64_1@@Base+0x4cc>
   3d304:	ldr	r6, [r0]
   3d308:	movw	r2, #28837	; 0x70a5
   3d30c:	movt	r2, #12120	; 0x2f58
   3d310:	movw	lr, #56283	; 0xdbdb
   3d314:	movt	lr, #34376	; 0x8648
   3d318:	ldr	r1, [r0, #4]
   3d31c:	add	r0, r0, #8
   3d320:	ldrd	r8, [sp, #8]
   3d324:	umull	r6, r7, r6, r2
   3d328:	ldr	r3, [sp, #52]	; 0x34
   3d32c:	mla	r7, r2, r1, r7
   3d330:	adds	r1, r6, r8
   3d334:	lsl	r4, r1, #31
   3d338:	adc	r2, r7, r9
   3d33c:	sub	r3, r3, r0
   3d340:	orr	r4, r4, r2, lsr #1
   3d344:	lsl	ip, r2, #31
   3d348:	umull	r4, r5, r4, lr
   3d34c:	orr	ip, ip, r1, lsr #1
   3d350:	eor	r1, r4, r1
   3d354:	mla	r5, lr, ip, r5
   3d358:	str	r1, [sp, #8]
   3d35c:	eor	r2, r5, r2
   3d360:	str	r2, [sp, #12]
   3d364:	cmp	r3, #3
   3d368:	ble	3d3b8 <cmetrohash64_1@@Base+0x520>
   3d36c:	ldr	r2, [r0], #4
   3d370:	movw	r3, #28837	; 0x70a5
   3d374:	movt	r3, #12120	; 0x2f58
   3d378:	movw	r1, #56283	; 0xdbdb
   3d37c:	movt	r1, #34376	; 0x8648
   3d380:	ldrd	r6, [sp, #8]
   3d384:	umlal	r6, r7, r3, r2
   3d388:	ldr	r3, [sp, #52]	; 0x34
   3d38c:	lsr	r4, r6, #15
   3d390:	lsr	r2, r7, #15
   3d394:	orr	r4, r4, r7, lsl #17
   3d398:	sub	r3, r3, r0
   3d39c:	orr	r2, r2, r6, lsl #17
   3d3a0:	umull	r4, r5, r4, r1
   3d3a4:	mla	r5, r1, r2, r5
   3d3a8:	eor	r2, r4, r6
   3d3ac:	str	r2, [sp, #8]
   3d3b0:	eor	r2, r5, r7
   3d3b4:	str	r2, [sp, #12]
   3d3b8:	cmp	r3, #1
   3d3bc:	ble	3d40c <cmetrohash64_1@@Base+0x574>
   3d3c0:	ldrh	r2, [r0], #2
   3d3c4:	movw	r3, #28837	; 0x70a5
   3d3c8:	movt	r3, #12120	; 0x2f58
   3d3cc:	movw	r1, #56283	; 0xdbdb
   3d3d0:	movt	r1, #34376	; 0x8648
   3d3d4:	ldrd	r4, [sp, #8]
   3d3d8:	umlal	r4, r5, r3, r2
   3d3dc:	ldr	r3, [sp, #52]	; 0x34
   3d3e0:	lsr	r6, r4, #13
   3d3e4:	lsr	r2, r5, #13
   3d3e8:	orr	r6, r6, r5, lsl #19
   3d3ec:	sub	r3, r3, r0
   3d3f0:	orr	r2, r2, r4, lsl #19
   3d3f4:	umull	r6, r7, r6, r1
   3d3f8:	mla	r7, r1, r2, r7
   3d3fc:	eor	r2, r6, r4
   3d400:	str	r2, [sp, #8]
   3d404:	eor	r2, r7, r5
   3d408:	str	r2, [sp, #12]
   3d40c:	cmp	r3, #0
   3d410:	ble	3d460 <cmetrohash64_1@@Base+0x5c8>
   3d414:	ldrb	r0, [r0]
   3d418:	movw	r3, #28837	; 0x70a5
   3d41c:	movt	r3, #12120	; 0x2f58
   3d420:	movw	lr, #56283	; 0xdbdb
   3d424:	movt	lr, #34376	; 0x8648
   3d428:	ldrd	r4, [sp, #8]
   3d42c:	umull	r0, r1, r0, r3
   3d430:	adds	r6, r0, r4
   3d434:	lsr	r2, r6, #25
   3d438:	adc	r1, r1, r5
   3d43c:	lsr	ip, r1, #25
   3d440:	orr	r2, r2, r1, lsl #7
   3d444:	orr	ip, ip, r6, lsl #7
   3d448:	umull	r2, r3, r2, lr
   3d44c:	mla	r3, lr, ip, r3
   3d450:	eor	r0, r2, r6
   3d454:	str	r0, [sp, #8]
   3d458:	eor	r3, r3, r1
   3d45c:	str	r3, [sp, #12]
   3d460:	ldrd	r4, [sp, #8]
   3d464:	movw	r0, #37345	; 0x91e1
   3d468:	movt	r0, #51258	; 0xc83a
   3d46c:	lsl	r2, r4, #31
   3d470:	lsl	r1, r5, #31
   3d474:	orr	r2, r2, r5, lsr #1
   3d478:	orr	r1, r1, r4, lsr #1
   3d47c:	eor	r2, r2, r4
   3d480:	eor	r1, r1, r5
   3d484:	umull	r4, r5, r2, r0
   3d488:	mla	r5, r0, r1, r5
   3d48c:	lsl	r1, r4, #31
   3d490:	orr	r1, r1, r5, lsr #1
   3d494:	lsl	r0, r5, #31
   3d498:	eor	r2, r4, r1
   3d49c:	ldr	r1, [sp, #108]	; 0x6c
   3d4a0:	orr	r0, r0, r4, lsr #1
   3d4a4:	eor	r3, r5, r0
   3d4a8:	str	r2, [r1]
   3d4ac:	str	r3, [r1, #4]
   3d4b0:	add	sp, sp, #68	; 0x44
   3d4b4:	ldrd	r4, [sp]
   3d4b8:	ldrd	r6, [sp, #8]
   3d4bc:	ldrd	r8, [sp, #16]
   3d4c0:	ldrd	sl, [sp, #24]
   3d4c4:	add	sp, sp, #32
   3d4c8:	pop	{pc}		; (ldr pc, [sp], #4)

0003d4cc <cmetrohash64_2@@Base>:
   3d4cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d4d0:	movw	ip, #52149	; 0xcbb5
   3d4d4:	movt	ip, #56292	; 0xdbe4
   3d4d8:	strd	r6, [sp, #8]
   3d4dc:	adds	r4, r2, ip
   3d4e0:	movw	r6, #13310	; 0x33fe
   3d4e4:	movt	r6, #21180	; 0x52bc
   3d4e8:	strd	r8, [sp, #16]
   3d4ec:	add	ip, r0, r2
   3d4f0:	strd	sl, [sp, #24]
   3d4f4:	adc	r5, r3, r6
   3d4f8:	cmp	r3, #0
   3d4fc:	str	lr, [sp, #32]
   3d500:	sub	sp, sp, #68	; 0x44
   3d504:	mov	r3, r5
   3d508:	ldr	lr, [sp, #104]	; 0x68
   3d50c:	movw	r1, #6389	; 0x18f5
   3d510:	movt	r1, #54992	; 0xd6d0
   3d514:	cmpeq	r2, #31
   3d518:	mov	r2, r4
   3d51c:	str	ip, [sp, #52]	; 0x34
   3d520:	umlal	r2, r3, r1, lr
   3d524:	mov	r4, r2
   3d528:	mov	r5, r3
   3d52c:	strd	r4, [sp, #8]
   3d530:	bls	3d7c8 <cmetrohash64_2@@Base+0x2fc>
   3d534:	movw	lr, #12225	; 0x2fc1
   3d538:	movt	lr, #25241	; 0x6299
   3d53c:	str	r4, [sp]
   3d540:	str	r1, [sp, #32]
   3d544:	movw	r1, #827	; 0x33b
   3d548:	movt	r1, #41642	; 0xa2aa
   3d54c:	mov	fp, r3
   3d550:	mov	sl, r2
   3d554:	str	r5, [sp, #28]
   3d558:	str	r1, [sp, #36]	; 0x24
   3d55c:	movw	r1, #23337	; 0x5b29
   3d560:	movt	r1, #12476	; 0x30bc
   3d564:	mov	r3, r2
   3d568:	str	r1, [sp, #44]	; 0x2c
   3d56c:	sub	r1, ip, #32
   3d570:	mov	ip, r5
   3d574:	str	r1, [sp, #40]	; 0x28
   3d578:	mov	r1, r5
   3d57c:	str	lr, [sp, #48]	; 0x30
   3d580:	ldr	r4, [r0]
   3d584:	add	r0, r0, #32
   3d588:	ldr	r7, [sp, #32]
   3d58c:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3d590:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3d594:	umull	r4, r5, r4, r7
   3d598:	ldr	lr, [r0, #-20]	; 0xffffffec
   3d59c:	mla	r5, r7, r6, r5
   3d5a0:	ldr	r7, [sp, #36]	; 0x24
   3d5a4:	adds	r3, r4, r3
   3d5a8:	ldr	r6, [r0, #-16]
   3d5ac:	adc	r4, r5, r1
   3d5b0:	lsr	r1, r4, #29
   3d5b4:	umull	r8, r9, r8, r7
   3d5b8:	orr	r5, r1, r3, lsl #3
   3d5bc:	mla	r9, r7, lr, r9
   3d5c0:	ldr	lr, [r0, #-12]
   3d5c4:	lsr	r7, r3, #29
   3d5c8:	orr	r3, r7, r4, lsl #3
   3d5cc:	ldr	r4, [r0, #-8]
   3d5d0:	adds	r3, r3, r2
   3d5d4:	adc	r1, r5, ip
   3d5d8:	adds	sl, r8, sl
   3d5dc:	lsr	r8, sl, #29
   3d5e0:	adc	r5, r9, fp
   3d5e4:	ldr	r9, [sp, #48]	; 0x30
   3d5e8:	lsr	fp, r5, #29
   3d5ec:	orr	r5, r8, r5, lsl #3
   3d5f0:	ldr	r8, [sp]
   3d5f4:	orr	fp, fp, sl, lsl #3
   3d5f8:	umull	r6, r7, r6, r9
   3d5fc:	adds	sl, r5, r8
   3d600:	ldr	r5, [sp, #44]	; 0x2c
   3d604:	mla	r7, r9, lr, r7
   3d608:	ldr	r9, [sp, #28]
   3d60c:	ldr	lr, [r0, #-4]
   3d610:	str	r5, [sp, #16]
   3d614:	umull	r4, r5, r4, r5
   3d618:	adc	fp, fp, r9
   3d61c:	adds	r2, r6, r2
   3d620:	strd	r4, [sp]
   3d624:	adc	ip, r7, ip
   3d628:	lsr	r6, r2, #29
   3d62c:	ldr	r4, [sp, #4]
   3d630:	lsr	r7, ip, #29
   3d634:	orr	ip, r6, ip, lsl #3
   3d638:	ldr	r5, [sp, #16]
   3d63c:	orr	r7, r7, r2, lsl #3
   3d640:	adds	r2, ip, r3
   3d644:	adc	ip, r7, r1
   3d648:	mla	lr, r5, lr, r4
   3d64c:	str	lr, [sp, #4]
   3d650:	ldrd	r6, [sp]
   3d654:	adds	r4, r6, r8
   3d658:	lsr	lr, r4, #29
   3d65c:	adc	r6, r7, r9
   3d660:	lsr	r5, r6, #29
   3d664:	orr	lr, lr, r6, lsl #3
   3d668:	orr	r4, r5, r4, lsl #3
   3d66c:	adds	lr, lr, sl
   3d670:	str	lr, [sp]
   3d674:	adc	lr, r4, fp
   3d678:	str	lr, [sp, #28]
   3d67c:	ldr	lr, [sp, #40]	; 0x28
   3d680:	cmp	r0, lr
   3d684:	bls	3d580 <cmetrohash64_2@@Base+0xb4>
   3d688:	eor	r5, r3, sl
   3d68c:	ldr	lr, [sp]
   3d690:	eor	r6, r1, fp
   3d694:	str	r5, [sp, #40]	; 0x28
   3d698:	ldr	r5, [sp, #28]
   3d69c:	ldrd	r8, [sp, #32]
   3d6a0:	adds	r4, r3, lr
   3d6a4:	str	r6, [sp, #32]
   3d6a8:	adc	lr, r1, r5
   3d6ac:	umull	r4, r5, r4, r8
   3d6b0:	mla	r5, r8, lr, r5
   3d6b4:	adds	r6, r4, sl
   3d6b8:	lsr	r4, r6, #30
   3d6bc:	adc	lr, r5, fp
   3d6c0:	orr	r4, r4, lr, lsl #2
   3d6c4:	lsr	lr, lr, #30
   3d6c8:	umull	r4, r5, r4, r9
   3d6cc:	orr	lr, lr, r6, lsl #2
   3d6d0:	eor	r6, r4, r2
   3d6d4:	mla	r5, r9, lr, r5
   3d6d8:	adds	r4, sl, r6
   3d6dc:	eor	r7, r5, ip
   3d6e0:	umull	r4, r5, r4, r9
   3d6e4:	adc	r2, fp, r7
   3d6e8:	mla	r5, r9, r2, r5
   3d6ec:	adds	lr, r4, r3
   3d6f0:	lsr	r2, lr, #30
   3d6f4:	adc	ip, r5, r1
   3d6f8:	adds	r4, r3, r6
   3d6fc:	orr	r2, r2, ip, lsl #2
   3d700:	adc	r1, r1, r7
   3d704:	lsr	ip, ip, #30
   3d708:	umull	r4, r5, r4, r8
   3d70c:	umull	r2, r3, r2, r8
   3d710:	orr	ip, ip, lr, lsl #2
   3d714:	mov	lr, r8
   3d718:	mla	r5, r8, r1, r5
   3d71c:	strd	r2, [sp, #16]
   3d720:	mla	r3, r8, ip, r3
   3d724:	ldr	r2, [sp, #16]
   3d728:	mov	ip, r9
   3d72c:	str	r3, [sp, #20]
   3d730:	ldr	r3, [sp]
   3d734:	ldr	r8, [sp, #20]
   3d738:	eor	r2, r2, r3
   3d73c:	ldr	r3, [sp, #28]
   3d740:	eor	r8, r8, r3
   3d744:	adds	r3, r4, r2
   3d748:	adc	r1, r5, r8
   3d74c:	adds	sl, sl, r2
   3d750:	lsr	r4, r3, #30
   3d754:	adc	r5, fp, r8
   3d758:	lsr	r2, r1, #30
   3d75c:	umull	r8, r9, sl, r9
   3d760:	mov	sl, ip
   3d764:	orr	r4, r4, r1, lsl #2
   3d768:	orr	r3, r2, r3, lsl #2
   3d76c:	mla	r9, ip, r5, r9
   3d770:	adds	r2, r8, r6
   3d774:	umull	r4, r5, r4, ip
   3d778:	lsr	r1, r2, #30
   3d77c:	adc	ip, r9, r7
   3d780:	lsr	r6, ip, #30
   3d784:	mla	r5, sl, r3, r5
   3d788:	ldr	r3, [sp, #40]	; 0x28
   3d78c:	orr	ip, r1, ip, lsl #2
   3d790:	ldr	r1, [sp, #8]
   3d794:	orr	r6, r6, r2, lsl #2
   3d798:	umull	r8, r9, ip, lr
   3d79c:	ldr	r2, [sp, #32]
   3d7a0:	eor	r3, r4, r3
   3d7a4:	eor	r3, r3, r8
   3d7a8:	mla	r9, lr, r6, r9
   3d7ac:	adds	r3, r1, r3
   3d7b0:	eor	r2, r5, r2
   3d7b4:	str	r3, [sp, #8]
   3d7b8:	eor	r2, r2, r9
   3d7bc:	ldr	r3, [sp, #12]
   3d7c0:	adc	r3, r3, r2
   3d7c4:	str	r3, [sp, #12]
   3d7c8:	ldr	fp, [sp, #52]	; 0x34
   3d7cc:	sub	r3, fp, r0
   3d7d0:	cmp	r3, #15
   3d7d4:	ble	3d91c <cmetrohash64_2@@Base+0x450>
   3d7d8:	ldr	r4, [r0]
   3d7dc:	movw	r2, #12225	; 0x2fc1
   3d7e0:	movt	r2, #25241	; 0x6299
   3d7e4:	add	r0, r0, #16
   3d7e8:	movw	ip, #11461	; 0x2cc5
   3d7ec:	movt	ip, #2375	; 0x947
   3d7f0:	ldr	sl, [r0, #-8]
   3d7f4:	movw	r1, #23337	; 0x5b29
   3d7f8:	movt	r1, #12476	; 0x30bc
   3d7fc:	movw	r7, #11409	; 0x2c91
   3d800:	movt	r7, #25774	; 0x64ae
   3d804:	ldr	r9, [r0, #-12]
   3d808:	movw	lr, #4606	; 0x11fe
   3d80c:	movt	lr, #10469	; 0x28e5
   3d810:	umull	r4, r5, r4, r2
   3d814:	movw	r8, #5693	; 0x163d
   3d818:	movt	r8, #42015	; 0xa41f
   3d81c:	ldr	r6, [r0, #-4]
   3d820:	sub	r3, fp, r0
   3d824:	strd	r4, [sp]
   3d828:	umull	r4, r5, sl, r2
   3d82c:	ldr	sl, [sp, #4]
   3d830:	strd	r4, [sp, #16]
   3d834:	ldr	r4, [sp]
   3d838:	mla	r9, r2, r9, sl
   3d83c:	ldrd	sl, [sp, #8]
   3d840:	mla	r2, r2, r6, r5
   3d844:	ldr	r5, [sp, #16]
   3d848:	str	r9, [sp, #4]
   3d84c:	str	r2, [sp, #20]
   3d850:	adds	r9, r4, sl
   3d854:	ldr	r4, [sp, #4]
   3d858:	lsr	r6, r9, #29
   3d85c:	adc	r2, r4, fp
   3d860:	adds	r5, r5, sl
   3d864:	ldr	r4, [sp, #20]
   3d868:	orr	r6, r6, r2, lsl #3
   3d86c:	lsr	sl, r2, #29
   3d870:	ldr	r2, [sp, #12]
   3d874:	orr	r9, sl, r9, lsl #3
   3d878:	mul	lr, lr, r6
   3d87c:	adc	r2, r4, r2
   3d880:	lsr	r4, r5, #29
   3d884:	str	r9, [sp]
   3d888:	mla	lr, r8, r9, lr
   3d88c:	orr	r4, r4, r2, lsl #3
   3d890:	lsr	r2, r2, #29
   3d894:	umull	r8, r9, r6, r8
   3d898:	orr	r2, r2, r5, lsl #3
   3d89c:	mul	ip, ip, r4
   3d8a0:	umull	sl, fp, r4, r1
   3d8a4:	add	r9, lr, r9
   3d8a8:	umull	r4, r5, r4, r7
   3d8ac:	mla	ip, r7, r2, ip
   3d8b0:	umull	r6, r7, r6, r1
   3d8b4:	mla	fp, r1, r2, fp
   3d8b8:	add	r5, ip, r5
   3d8bc:	ldr	ip, [sp]
   3d8c0:	lsl	r2, r8, #30
   3d8c4:	lsl	lr, r5, #30
   3d8c8:	orr	r2, r2, r9, lsr #2
   3d8cc:	adds	r2, r2, sl
   3d8d0:	mla	r7, r1, ip, r7
   3d8d4:	eor	r2, r2, r6
   3d8d8:	lsl	r1, r9, #30
   3d8dc:	lsl	ip, r4, #30
   3d8e0:	orr	r8, r1, r8, lsr #2
   3d8e4:	ldr	r1, [sp, #8]
   3d8e8:	orr	ip, ip, r5, lsr #2
   3d8ec:	adc	r8, r8, fp
   3d8f0:	orr	r4, lr, r4, lsr #2
   3d8f4:	adds	r2, r2, ip
   3d8f8:	eor	r8, r8, r7
   3d8fc:	eor	r2, r2, sl
   3d900:	adc	r4, r8, r4
   3d904:	adds	r2, r1, r2
   3d908:	eor	r4, r4, fp
   3d90c:	str	r2, [sp, #8]
   3d910:	ldr	r2, [sp, #12]
   3d914:	adc	r2, r2, r4
   3d918:	str	r2, [sp, #12]
   3d91c:	cmp	r3, #7
   3d920:	ble	3d984 <cmetrohash64_2@@Base+0x4b8>
   3d924:	ldr	r6, [r0]
   3d928:	movw	r2, #23337	; 0x5b29
   3d92c:	movt	r2, #12476	; 0x30bc
   3d930:	movw	lr, #827	; 0x33b
   3d934:	movt	lr, #41642	; 0xa2aa
   3d938:	ldr	r1, [r0, #4]
   3d93c:	add	r0, r0, #8
   3d940:	ldrd	r8, [sp, #8]
   3d944:	umull	r6, r7, r6, r2
   3d948:	ldr	r3, [sp, #52]	; 0x34
   3d94c:	mla	r7, r2, r1, r7
   3d950:	adds	r1, r6, r8
   3d954:	lsl	r4, r1, #28
   3d958:	adc	r2, r7, r9
   3d95c:	sub	r3, r3, r0
   3d960:	orr	r4, r4, r2, lsr #4
   3d964:	lsl	ip, r2, #28
   3d968:	umull	r4, r5, r4, lr
   3d96c:	orr	ip, ip, r1, lsr #4
   3d970:	eor	r1, r4, r1
   3d974:	mla	r5, lr, ip, r5
   3d978:	str	r1, [sp, #8]
   3d97c:	eor	r2, r5, r2
   3d980:	str	r2, [sp, #12]
   3d984:	cmp	r3, #3
   3d988:	ble	3d9d8 <cmetrohash64_2@@Base+0x50c>
   3d98c:	ldr	r2, [r0], #4
   3d990:	movw	r3, #23337	; 0x5b29
   3d994:	movt	r3, #12476	; 0x30bc
   3d998:	movw	r1, #827	; 0x33b
   3d99c:	movt	r1, #41642	; 0xa2aa
   3d9a0:	ldrd	r6, [sp, #8]
   3d9a4:	umlal	r6, r7, r3, r2
   3d9a8:	ldr	r3, [sp, #52]	; 0x34
   3d9ac:	lsr	r4, r6, #15
   3d9b0:	lsr	r2, r7, #15
   3d9b4:	orr	r4, r4, r7, lsl #17
   3d9b8:	sub	r3, r3, r0
   3d9bc:	orr	r2, r2, r6, lsl #17
   3d9c0:	umull	r4, r5, r4, r1
   3d9c4:	mla	r5, r1, r2, r5
   3d9c8:	eor	r2, r4, r6
   3d9cc:	str	r2, [sp, #8]
   3d9d0:	eor	r2, r5, r7
   3d9d4:	str	r2, [sp, #12]
   3d9d8:	cmp	r3, #1
   3d9dc:	ble	3da2c <cmetrohash64_2@@Base+0x560>
   3d9e0:	ldrh	r2, [r0], #2
   3d9e4:	movw	r3, #23337	; 0x5b29
   3d9e8:	movt	r3, #12476	; 0x30bc
   3d9ec:	movw	r1, #827	; 0x33b
   3d9f0:	movt	r1, #41642	; 0xa2aa
   3d9f4:	ldrd	r4, [sp, #8]
   3d9f8:	umlal	r4, r5, r3, r2
   3d9fc:	ldr	r3, [sp, #52]	; 0x34
   3da00:	lsr	r6, r4, #15
   3da04:	lsr	r2, r5, #15
   3da08:	orr	r6, r6, r5, lsl #17
   3da0c:	sub	r3, r3, r0
   3da10:	orr	r2, r2, r4, lsl #17
   3da14:	umull	r6, r7, r6, r1
   3da18:	mla	r7, r1, r2, r7
   3da1c:	eor	r2, r6, r4
   3da20:	str	r2, [sp, #8]
   3da24:	eor	r2, r7, r5
   3da28:	str	r2, [sp, #12]
   3da2c:	cmp	r3, #0
   3da30:	ble	3da80 <cmetrohash64_2@@Base+0x5b4>
   3da34:	ldrb	r0, [r0]
   3da38:	movw	r3, #23337	; 0x5b29
   3da3c:	movt	r3, #12476	; 0x30bc
   3da40:	movw	lr, #827	; 0x33b
   3da44:	movt	lr, #41642	; 0xa2aa
   3da48:	ldrd	r4, [sp, #8]
   3da4c:	umull	r0, r1, r0, r3
   3da50:	adds	r6, r0, r4
   3da54:	lsr	r2, r6, #23
   3da58:	adc	r1, r1, r5
   3da5c:	lsr	ip, r1, #23
   3da60:	orr	r2, r2, r1, lsl #9
   3da64:	orr	ip, ip, r6, lsl #9
   3da68:	umull	r2, r3, r2, lr
   3da6c:	mla	r3, lr, ip, r3
   3da70:	eor	r0, r2, r6
   3da74:	str	r0, [sp, #8]
   3da78:	eor	r3, r3, r1
   3da7c:	str	r3, [sp, #12]
   3da80:	ldrd	r4, [sp, #8]
   3da84:	movw	r0, #6389	; 0x18f5
   3da88:	movt	r0, #54992	; 0xd6d0
   3da8c:	lsr	r2, r4, #28
   3da90:	lsr	r1, r5, #28
   3da94:	orr	r2, r2, r5, lsl #4
   3da98:	orr	r1, r1, r4, lsl #4
   3da9c:	eor	r2, r2, r4
   3daa0:	eor	r1, r1, r5
   3daa4:	umull	r4, r5, r2, r0
   3daa8:	mla	r5, r0, r1, r5
   3daac:	lsr	r0, r4, #29
   3dab0:	lsr	r1, r5, #29
   3dab4:	orr	r0, r0, r5, lsl #3
   3dab8:	orr	r1, r1, r4, lsl #3
   3dabc:	eor	r2, r4, r0
   3dac0:	eor	r3, r5, r1
   3dac4:	ldr	r1, [sp, #108]	; 0x6c
   3dac8:	str	r2, [r1]
   3dacc:	str	r3, [r1, #4]
   3dad0:	add	sp, sp, #68	; 0x44
   3dad4:	ldrd	r4, [sp]
   3dad8:	ldrd	r6, [sp, #8]
   3dadc:	ldrd	r8, [sp, #16]
   3dae0:	ldrd	sl, [sp, #24]
   3dae4:	add	sp, sp, #32
   3dae8:	pop	{pc}		; (ldr pc, [sp], #4)
   3daec:	str	r4, [sp, #-8]!
   3daf0:	mov	r4, r0
   3daf4:	ldr	r0, [r0]
   3daf8:	str	lr, [sp, #4]
   3dafc:	cmp	r0, #0
   3db00:	beq	3db08 <cmetrohash64_2@@Base+0x63c>
   3db04:	bl	13ea4 <free@plt>
   3db08:	mov	r3, #0
   3db0c:	str	r3, [r4]
   3db10:	str	r3, [r4, #4]
   3db14:	str	r3, [r4, #8]
   3db18:	str	r3, [r4, #12]
   3db1c:	ldr	r4, [sp]
   3db20:	add	sp, sp, #4
   3db24:	pop	{pc}		; (ldr pc, [sp], #4)
   3db28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3db2c:	ldr	r4, [pc, #588]	; 3dd80 <cmetrohash64_2@@Base+0x8b4>
   3db30:	strd	r6, [sp, #8]
   3db34:	strd	r8, [sp, #16]
   3db38:	strd	sl, [sp, #24]
   3db3c:	subs	fp, r3, #0
   3db40:	str	lr, [sp, #32]
   3db44:	sub	sp, sp, #28
   3db48:	add	r4, pc, r4
   3db4c:	str	r1, [sp, #8]
   3db50:	beq	3dd18 <cmetrohash64_2@@Base+0x84c>
   3db54:	cmp	fp, #2
   3db58:	beq	3dcf8 <cmetrohash64_2@@Base+0x82c>
   3db5c:	cmp	fp, #1
   3db60:	beq	3dd38 <cmetrohash64_2@@Base+0x86c>
   3db64:	mov	r3, #179	; 0xb3
   3db68:	ldr	r1, [r0, #8]
   3db6c:	mov	r9, r2
   3db70:	mov	sl, r0
   3db74:	ldr	r8, [r0, #12]
   3db78:	mul	r3, r3, r8
   3db7c:	cmp	r1, r3, lsr #8
   3db80:	bcs	3dc70 <cmetrohash64_2@@Base+0x7a4>
   3db84:	movw	r1, #15186	; 0x3b52
   3db88:	movt	r1, #12137	; 0x2f69
   3db8c:	ldr	r7, [sl]
   3db90:	mov	r3, #0
   3db94:	mov	r2, r9
   3db98:	str	r1, [sp]
   3db9c:	add	r1, sp, #16
   3dba0:	sub	r8, r8, #1
   3dba4:	ldr	r0, [sp, #8]
   3dba8:	str	r1, [sp, #4]
   3dbac:	bl	3ce98 <cmetrohash64_1@@Base>
   3dbb0:	ldr	r6, [sp, #16]
   3dbb4:	ldr	r3, [sp, #64]	; 0x40
   3dbb8:	sub	r3, r3, #2
   3dbbc:	cmp	r3, #1
   3dbc0:	and	r3, r8, r6
   3dbc4:	add	r4, r7, r3, lsl #2
   3dbc8:	bls	3dcb0 <cmetrohash64_2@@Base+0x7e4>
   3dbcc:	ldr	r5, [r7, r3, lsl #2]
   3dbd0:	cmp	r5, #0
   3dbd4:	moveq	r3, r4
   3dbd8:	beq	3dc98 <cmetrohash64_2@@Base+0x7cc>
   3dbdc:	mov	r3, #0
   3dbe0:	add	r6, r6, #1
   3dbe4:	str	sl, [sp, #12]
   3dbe8:	mov	sl, r8
   3dbec:	mov	r8, r3
   3dbf0:	b	3dc18 <cmetrohash64_2@@Base+0x74c>
   3dbf4:	ldr	r2, [r5, #12]
   3dbf8:	cmp	r9, r2
   3dbfc:	beq	3dc2c <cmetrohash64_2@@Base+0x760>
   3dc00:	and	r4, sl, r6
   3dc04:	add	r6, r6, #1
   3dc08:	ldr	r5, [r7, r4, lsl #2]
   3dc0c:	add	r4, r7, r4, lsl #2
   3dc10:	cmp	r5, #0
   3dc14:	beq	3dc88 <cmetrohash64_2@@Base+0x7bc>
   3dc18:	cmp	r5, #2
   3dc1c:	bne	3dbf4 <cmetrohash64_2@@Base+0x728>
   3dc20:	cmp	r8, #0
   3dc24:	moveq	r8, r4
   3dc28:	b	3dc00 <cmetrohash64_2@@Base+0x734>
   3dc2c:	mov	r2, r9
   3dc30:	ldr	r1, [r5, #8]
   3dc34:	ldr	r0, [sp, #8]
   3dc38:	bl	13ec8 <memcmp@plt>
   3dc3c:	cmp	r0, #0
   3dc40:	bne	3dc00 <cmetrohash64_2@@Base+0x734>
   3dc44:	ldr	r3, [sp, #64]	; 0x40
   3dc48:	cmp	r3, #0
   3dc4c:	streq	fp, [r4]
   3dc50:	mov	r0, r5
   3dc54:	add	sp, sp, #28
   3dc58:	ldrd	r4, [sp]
   3dc5c:	ldrd	r6, [sp, #8]
   3dc60:	ldrd	r8, [sp, #16]
   3dc64:	ldrd	sl, [sp, #24]
   3dc68:	add	sp, sp, #32
   3dc6c:	pop	{pc}		; (ldr pc, [sp], #4)
   3dc70:	lsl	r1, r1, #1
   3dc74:	bl	3ddb4 <cmetrohash64_2@@Base+0x8e8>
   3dc78:	cmp	r0, #0
   3dc7c:	bne	3dd58 <cmetrohash64_2@@Base+0x88c>
   3dc80:	ldr	r8, [sl, #12]
   3dc84:	b	3db84 <cmetrohash64_2@@Base+0x6b8>
   3dc88:	ldr	sl, [sp, #12]
   3dc8c:	cmp	r8, #0
   3dc90:	mov	r3, r8
   3dc94:	moveq	r3, r4
   3dc98:	ldr	r2, [sl, #8]
   3dc9c:	mov	r5, #0
   3dca0:	add	r2, r2, #1
   3dca4:	str	r2, [sl, #8]
   3dca8:	str	fp, [r3]
   3dcac:	b	3dc50 <cmetrohash64_2@@Base+0x784>
   3dcb0:	ldr	r2, [sl, #8]
   3dcb4:	ldr	r1, [r7, r3, lsl #2]
   3dcb8:	add	r3, r2, #1
   3dcbc:	cmp	r1, #2
   3dcc0:	cmpne	r1, #0
   3dcc4:	str	r3, [sl, #8]
   3dcc8:	beq	3dcec <cmetrohash64_2@@Base+0x820>
   3dccc:	add	r6, r6, #1
   3dcd0:	and	r4, r8, r6
   3dcd4:	add	r6, r6, #1
   3dcd8:	ldr	r3, [r7, r4, lsl #2]
   3dcdc:	add	r4, r7, r4, lsl #2
   3dce0:	cmp	r3, #0
   3dce4:	cmpne	r3, #2
   3dce8:	bne	3dcd0 <cmetrohash64_2@@Base+0x804>
   3dcec:	mov	r5, #0
   3dcf0:	str	fp, [r4]
   3dcf4:	b	3dc50 <cmetrohash64_2@@Base+0x784>
   3dcf8:	ldr	r3, [pc, #132]	; 3dd84 <cmetrohash64_2@@Base+0x8b8>
   3dcfc:	mov	r2, #115	; 0x73
   3dd00:	ldr	r1, [pc, #128]	; 3dd88 <cmetrohash64_2@@Base+0x8bc>
   3dd04:	ldr	r0, [pc, #128]	; 3dd8c <cmetrohash64_2@@Base+0x8c0>
   3dd08:	add	r3, pc, r3
   3dd0c:	add	r1, pc, r1
   3dd10:	add	r0, pc, r0
   3dd14:	bl	1400c <__assert_fail@plt>
   3dd18:	ldr	r3, [pc, #112]	; 3dd90 <cmetrohash64_2@@Base+0x8c4>
   3dd1c:	mov	r2, #114	; 0x72
   3dd20:	ldr	r1, [pc, #108]	; 3dd94 <cmetrohash64_2@@Base+0x8c8>
   3dd24:	ldr	r0, [pc, #108]	; 3dd98 <cmetrohash64_2@@Base+0x8cc>
   3dd28:	add	r3, pc, r3
   3dd2c:	add	r1, pc, r1
   3dd30:	add	r0, pc, r0
   3dd34:	bl	1400c <__assert_fail@plt>
   3dd38:	ldr	r3, [pc, #92]	; 3dd9c <cmetrohash64_2@@Base+0x8d0>
   3dd3c:	mov	r2, #116	; 0x74
   3dd40:	ldr	r1, [pc, #88]	; 3dda0 <cmetrohash64_2@@Base+0x8d4>
   3dd44:	ldr	r0, [pc, #88]	; 3dda4 <cmetrohash64_2@@Base+0x8d8>
   3dd48:	add	r3, pc, r3
   3dd4c:	add	r1, pc, r1
   3dd50:	add	r0, pc, r0
   3dd54:	bl	1400c <__assert_fail@plt>
   3dd58:	ldr	r3, [pc, #72]	; 3dda8 <cmetrohash64_2@@Base+0x8dc>
   3dd5c:	ldr	r2, [pc, #72]	; 3ddac <cmetrohash64_2@@Base+0x8e0>
   3dd60:	ldr	r1, [pc, #72]	; 3ddb0 <cmetrohash64_2@@Base+0x8e4>
   3dd64:	ldr	r3, [r4, r3]
   3dd68:	add	r2, pc, r2
   3dd6c:	add	r1, pc, r1
   3dd70:	ldr	r0, [r3]
   3dd74:	bl	13f58 <fprintf@plt>
   3dd78:	mov	r0, #1
   3dd7c:	bl	13f40 <exit@plt>
   3dd80:			; <UNDEFINED> instruction: 0x0002d4b0
   3dd84:	andeq	ip, r1, r4, ror ip
   3dd88:	andeq	r9, r1, r4, lsl r6
   3dd8c:	muleq	r1, r0, r6
   3dd90:	andeq	ip, r1, r4, asr ip
   3dd94:	strdeq	r9, [r1], -r4
   3dd98:	andeq	r9, r1, r8, asr r6
   3dd9c:	andeq	ip, r1, r4, lsr ip
   3dda0:	ldrdeq	r9, [r1], -r4
   3dda4:	andeq	r9, r1, r8, ror #12
   3dda8:	muleq	r0, ip, r0
   3ddac:	andeq	r9, r1, r8, ror #12
   3ddb0:	muleq	r1, r8, r6
   3ddb4:	ldr	r3, [r0, #8]
   3ddb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3ddbc:	strd	r6, [sp, #8]
   3ddc0:	mov	r7, r0
   3ddc4:	str	r8, [sp, #16]
   3ddc8:	str	lr, [sp, #20]
   3ddcc:	sub	sp, sp, #24
   3ddd0:	cmp	r1, r3
   3ddd4:	ldr	r6, [r0]
   3ddd8:	movcc	r1, r3
   3dddc:	cmp	r1, #2
   3dde0:	bls	3dec4 <cmetrohash64_2@@Base+0x9f8>
   3dde4:	mov	r3, #4
   3dde8:	movw	r0, #358	; 0x166
   3ddec:	mul	r2, r0, r3
   3ddf0:	lsl	r5, r3, #1
   3ddf4:	cmp	r1, r2, lsr #8
   3ddf8:	mov	r3, r5
   3ddfc:	bhi	3ddec <cmetrohash64_2@@Base+0x920>
   3de00:	mov	r1, #4
   3de04:	mov	r0, r5
   3de08:	bl	13e74 <calloc@plt>
   3de0c:	cmp	r0, #0
   3de10:	str	r0, [sp, #8]
   3de14:	beq	3decc <cmetrohash64_2@@Base+0xa00>
   3de18:	ldr	r3, [r7, #12]
   3de1c:	mov	r4, #0
   3de20:	str	r4, [sp, #12]
   3de24:	strd	r4, [sp, #16]
   3de28:	cmp	r3, r4
   3de2c:	addeq	r6, sp, #8
   3de30:	beq	3de84 <cmetrohash64_2@@Base+0x9b8>
   3de34:	sub	r5, r6, #4
   3de38:	mov	r8, #3
   3de3c:	add	r6, sp, #8
   3de40:	b	3de4c <cmetrohash64_2@@Base+0x980>
   3de44:	cmp	r3, r4
   3de48:	bls	3de84 <cmetrohash64_2@@Base+0x9b8>
   3de4c:	ldr	r2, [r5, #4]!
   3de50:	add	r4, r4, #1
   3de54:	cmp	r2, #0
   3de58:	cmpne	r2, #2
   3de5c:	beq	3de44 <cmetrohash64_2@@Base+0x978>
   3de60:	mov	r3, r2
   3de64:	mov	r0, r6
   3de68:	ldr	r1, [r2, #8]
   3de6c:	ldr	r2, [r2, #12]
   3de70:	str	r8, [sp]
   3de74:	bl	3db28 <cmetrohash64_2@@Base+0x65c>
   3de78:	ldr	r3, [r7, #12]
   3de7c:	cmp	r3, r4
   3de80:	bhi	3de4c <cmetrohash64_2@@Base+0x980>
   3de84:	mov	r0, r7
   3de88:	bl	3daec <cmetrohash64_2@@Base+0x620>
   3de8c:	ldr	r3, [sp, #8]
   3de90:	mov	r0, #0
   3de94:	ldmib	r6, {r1, r2}
   3de98:	str	r3, [r7]
   3de9c:	ldr	r3, [r6, #12]
   3dea0:	str	r1, [r7, #4]
   3dea4:	str	r2, [r7, #8]
   3dea8:	str	r3, [r7, #12]
   3deac:	add	sp, sp, #24
   3deb0:	ldrd	r4, [sp]
   3deb4:	ldrd	r6, [sp, #8]
   3deb8:	ldr	r8, [sp, #16]
   3debc:	add	sp, sp, #20
   3dec0:	pop	{pc}		; (ldr pc, [sp], #4)
   3dec4:	mov	r5, #4
   3dec8:	b	3de00 <cmetrohash64_2@@Base+0x934>
   3decc:	mvn	r0, #0
   3ded0:	b	3deac <cmetrohash64_2@@Base+0x9e0>
   3ded4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3ded8:	ldr	r5, [r0]
   3dedc:	strd	r6, [sp, #8]
   3dee0:	strd	r8, [sp, #16]
   3dee4:	strd	sl, [sp, #24]
   3dee8:	str	lr, [sp, #32]
   3deec:	sub	sp, sp, #20
   3def0:	cmp	r5, #0
   3def4:	beq	3dfc4 <cmetrohash64_2@@Base+0xaf8>
   3def8:	mov	r9, r1
   3defc:	movw	r1, #15186	; 0x3b52
   3df00:	movt	r1, #12137	; 0x2f69
   3df04:	mov	r8, r0
   3df08:	ldr	r6, [r8, #12]
   3df0c:	mov	r3, #0
   3df10:	mov	r0, r9
   3df14:	str	r1, [sp]
   3df18:	add	r1, sp, #8
   3df1c:	mov	r7, r2
   3df20:	str	r1, [sp, #4]
   3df24:	bl	3ce98 <cmetrohash64_1@@Base>
   3df28:	ldr	sl, [sp, #8]
   3df2c:	sub	r6, r6, #1
   3df30:	and	r3, r6, sl
   3df34:	ldr	fp, [r5, r3, lsl #2]
   3df38:	add	r4, r5, r3, lsl #2
   3df3c:	cmp	fp, #0
   3df40:	beq	3dfc4 <cmetrohash64_2@@Base+0xaf8>
   3df44:	add	sl, sl, #1
   3df48:	b	3df64 <cmetrohash64_2@@Base+0xa98>
   3df4c:	and	r3, sl, r6
   3df50:	add	sl, sl, #1
   3df54:	ldr	fp, [r5, r3, lsl #2]
   3df58:	add	r4, r5, r3, lsl #2
   3df5c:	cmp	fp, #0
   3df60:	beq	3dfc4 <cmetrohash64_2@@Base+0xaf8>
   3df64:	cmp	fp, #2
   3df68:	beq	3df4c <cmetrohash64_2@@Base+0xa80>
   3df6c:	ldr	r3, [fp, #12]
   3df70:	cmp	r7, r3
   3df74:	bne	3df4c <cmetrohash64_2@@Base+0xa80>
   3df78:	mov	r2, r7
   3df7c:	mov	r0, r9
   3df80:	ldr	r1, [fp, #8]
   3df84:	bl	13ec8 <memcmp@plt>
   3df88:	cmp	r0, #0
   3df8c:	bne	3df4c <cmetrohash64_2@@Base+0xa80>
   3df90:	ldr	r3, [r8, #8]
   3df94:	mov	r2, #2
   3df98:	str	r2, [r4]
   3df9c:	sub	r3, r3, #1
   3dfa0:	str	r3, [r8, #8]
   3dfa4:	mov	r0, fp
   3dfa8:	add	sp, sp, #20
   3dfac:	ldrd	r4, [sp]
   3dfb0:	ldrd	r6, [sp, #8]
   3dfb4:	ldrd	r8, [sp, #16]
   3dfb8:	ldrd	sl, [sp, #24]
   3dfbc:	add	sp, sp, #32
   3dfc0:	pop	{pc}		; (ldr pc, [sp], #4)
   3dfc4:	mov	fp, #0
   3dfc8:	b	3dfa4 <cmetrohash64_2@@Base+0xad8>
   3dfcc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3dfd0:	strd	r6, [sp, #8]
   3dfd4:	subs	r7, r0, #0
   3dfd8:	strd	r8, [sp, #16]
   3dfdc:	str	lr, [sp, #24]
   3dfe0:	sub	sp, sp, #20
   3dfe4:	beq	3e094 <cmetrohash64_2@@Base+0xbc8>
   3dfe8:	mov	r6, r3
   3dfec:	movw	r3, #15186	; 0x3b52
   3dff0:	movt	r3, #12137	; 0x2f69
   3dff4:	ldr	r8, [r1]
   3dff8:	add	r1, sp, #8
   3dffc:	mov	r9, r2
   3e000:	mov	r2, r6
   3e004:	mov	r0, r9
   3e008:	str	r3, [sp]
   3e00c:	mov	r3, #0
   3e010:	str	r1, [sp, #4]
   3e014:	bl	3ce98 <cmetrohash64_1@@Base>
   3e018:	ldr	r5, [sp, #8]
   3e01c:	sub	r8, r8, #1
   3e020:	and	r3, r8, r5
   3e024:	ldr	r4, [r7, r3, lsl #2]
   3e028:	cmp	r4, #0
   3e02c:	beq	3e094 <cmetrohash64_2@@Base+0xbc8>
   3e030:	add	r5, r5, #1
   3e034:	b	3e04c <cmetrohash64_2@@Base+0xb80>
   3e038:	and	r1, r8, r5
   3e03c:	add	r5, r5, #1
   3e040:	ldr	r4, [r7, r1, lsl #2]
   3e044:	cmp	r4, #0
   3e048:	beq	3e094 <cmetrohash64_2@@Base+0xbc8>
   3e04c:	cmp	r4, #2
   3e050:	beq	3e038 <cmetrohash64_2@@Base+0xb6c>
   3e054:	ldr	r3, [r4, #12]
   3e058:	cmp	r6, r3
   3e05c:	bne	3e038 <cmetrohash64_2@@Base+0xb6c>
   3e060:	mov	r2, r6
   3e064:	mov	r0, r9
   3e068:	ldr	r1, [r4, #8]
   3e06c:	bl	13ec8 <memcmp@plt>
   3e070:	cmp	r0, #0
   3e074:	bne	3e038 <cmetrohash64_2@@Base+0xb6c>
   3e078:	mov	r0, r4
   3e07c:	add	sp, sp, #20
   3e080:	ldrd	r4, [sp]
   3e084:	ldrd	r6, [sp, #8]
   3e088:	ldrd	r8, [sp, #16]
   3e08c:	add	sp, sp, #24
   3e090:	pop	{pc}		; (ldr pc, [sp], #4)
   3e094:	mov	r4, #0
   3e098:	b	3e078 <cmetrohash64_2@@Base+0xbac>

0003e09c <fb_name_table_clear@@Base>:
   3e09c:	b	3daec <cmetrohash64_2@@Base+0x620>

0003e0a0 <fb_name_table_destroy@@Base>:
   3e0a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e0a4:	strd	r6, [sp, #8]
   3e0a8:	mov	r7, r0
   3e0ac:	str	r8, [sp, #16]
   3e0b0:	subs	r8, r1, #0
   3e0b4:	str	lr, [sp, #20]
   3e0b8:	beq	3e104 <fb_name_table_destroy@@Base+0x64>
   3e0bc:	ldr	r5, [r0]
   3e0c0:	ldr	ip, [r0, #12]
   3e0c4:	cmp	ip, #0
   3e0c8:	beq	3e104 <fb_name_table_destroy@@Base+0x64>
   3e0cc:	mov	r6, r2
   3e0d0:	sub	r5, r5, #4
   3e0d4:	mov	r4, #0
   3e0d8:	ldr	r3, [r5, #4]!
   3e0dc:	mov	r0, r6
   3e0e0:	add	r4, r4, #1
   3e0e4:	cmp	r3, #0
   3e0e8:	cmpne	r3, #2
   3e0ec:	mov	r1, r3
   3e0f0:	beq	3e0fc <fb_name_table_destroy@@Base+0x5c>
   3e0f4:	blx	r8
   3e0f8:	ldr	ip, [r7, #12]
   3e0fc:	cmp	r4, ip
   3e100:	bcc	3e0d8 <fb_name_table_destroy@@Base+0x38>
   3e104:	mov	r0, r7
   3e108:	ldrd	r4, [sp]
   3e10c:	ldrd	r6, [sp, #8]
   3e110:	ldr	r8, [sp, #16]
   3e114:	ldr	lr, [sp, #20]
   3e118:	add	sp, sp, #24
   3e11c:	b	3daec <cmetrohash64_2@@Base+0x620>

0003e120 <fb_name_table_init@@Base>:
   3e120:	cmp	r1, #2
   3e124:	strd	r4, [sp, #-16]!
   3e128:	mov	r4, r0
   3e12c:	str	r6, [sp, #8]
   3e130:	str	lr, [sp, #12]
   3e134:	bls	3e190 <fb_name_table_init@@Base+0x70>
   3e138:	mov	r3, #4
   3e13c:	movw	r0, #358	; 0x166
   3e140:	mul	r2, r0, r3
   3e144:	lsl	r5, r3, #1
   3e148:	cmp	r1, r2, lsr #8
   3e14c:	mov	r3, r5
   3e150:	bhi	3e140 <fb_name_table_init@@Base+0x20>
   3e154:	mov	r1, #4
   3e158:	mov	r0, r5
   3e15c:	bl	13e74 <calloc@plt>
   3e160:	cmp	r0, #0
   3e164:	str	r0, [r4]
   3e168:	beq	3e198 <fb_name_table_init@@Base+0x78>
   3e16c:	mov	r3, #0
   3e170:	mov	r0, r3
   3e174:	str	r3, [r4, #4]
   3e178:	str	r3, [r4, #8]
   3e17c:	str	r5, [r4, #12]
   3e180:	ldrd	r4, [sp]
   3e184:	ldr	r6, [sp, #8]
   3e188:	add	sp, sp, #12
   3e18c:	pop	{pc}		; (ldr pc, [sp], #4)
   3e190:	mov	r5, #4
   3e194:	b	3e154 <fb_name_table_init@@Base+0x34>
   3e198:	mvn	r0, #0
   3e19c:	b	3e180 <fb_name_table_init@@Base+0x60>

0003e1a0 <fb_name_table_resize@@Base>:
   3e1a0:	b	3ddb4 <cmetrohash64_2@@Base+0x8e8>

0003e1a4 <fb_name_table_insert@@Base>:
   3e1a4:	b	3db28 <cmetrohash64_2@@Base+0x65c>

0003e1a8 <fb_name_table_insert_item@@Base>:
   3e1a8:	push	{lr}		; (str lr, [sp, #-4]!)
   3e1ac:	sub	sp, sp, #12
   3e1b0:	mov	ip, r1
   3e1b4:	mov	r3, r1
   3e1b8:	str	r2, [sp]
   3e1bc:	ldr	r1, [r1, #8]
   3e1c0:	ldr	r2, [ip, #12]
   3e1c4:	bl	3db28 <cmetrohash64_2@@Base+0x65c>
   3e1c8:	add	sp, sp, #12
   3e1cc:	pop	{pc}		; (ldr pc, [sp], #4)

0003e1d0 <fb_name_table_find@@Base>:
   3e1d0:	mov	ip, r0
   3e1d4:	mov	r3, r2
   3e1d8:	ldr	r0, [ip], #12
   3e1dc:	mov	r2, r1
   3e1e0:	mov	r1, ip
   3e1e4:	b	3dfcc <cmetrohash64_2@@Base+0xb00>

0003e1e8 <fb_name_table_find_item@@Base>:
   3e1e8:	ldr	ip, [r0], #12
   3e1ec:	ldrd	r2, [r1, #8]
   3e1f0:	mov	r1, r0
   3e1f4:	mov	r0, ip
   3e1f8:	b	3dfcc <cmetrohash64_2@@Base+0xb00>

0003e1fc <fb_name_table_remove@@Base>:
   3e1fc:	b	3ded4 <cmetrohash64_2@@Base+0xa08>

0003e200 <fb_name_table_remove_item@@Base>:
   3e200:	mov	r3, r1
   3e204:	ldr	r1, [r1, #8]
   3e208:	ldr	r2, [r3, #12]
   3e20c:	b	3ded4 <cmetrohash64_2@@Base+0xa08>

0003e210 <fb_name_table_visit@@Base>:
   3e210:	ldr	ip, [r0, #12]
   3e214:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e218:	ldr	r5, [r0]
   3e21c:	strd	r6, [sp, #8]
   3e220:	str	r8, [sp, #16]
   3e224:	cmp	ip, #0
   3e228:	str	lr, [sp, #20]
   3e22c:	beq	3e270 <fb_name_table_visit@@Base+0x60>
   3e230:	mov	r6, r2
   3e234:	mov	r8, r1
   3e238:	mov	r7, r0
   3e23c:	sub	r5, r5, #4
   3e240:	mov	r4, #0
   3e244:	ldr	r3, [r5, #4]!
   3e248:	mov	r0, r6
   3e24c:	add	r4, r4, #1
   3e250:	cmp	r3, #0
   3e254:	cmpne	r3, #2
   3e258:	mov	r1, r3
   3e25c:	beq	3e268 <fb_name_table_visit@@Base+0x58>
   3e260:	blx	r8
   3e264:	ldr	ip, [r7, #12]
   3e268:	cmp	r4, ip
   3e26c:	bcc	3e244 <fb_name_table_visit@@Base+0x34>
   3e270:	ldrd	r4, [sp]
   3e274:	ldrd	r6, [sp, #8]
   3e278:	ldr	r8, [sp, #16]
   3e27c:	add	sp, sp, #20
   3e280:	pop	{pc}		; (ldr pc, [sp], #4)
   3e284:	str	r4, [sp, #-8]!
   3e288:	mov	r4, r0
   3e28c:	ldr	r0, [r0]
   3e290:	str	lr, [sp, #4]
   3e294:	cmp	r0, #0
   3e298:	beq	3e2a0 <fb_name_table_visit@@Base+0x90>
   3e29c:	bl	13ea4 <free@plt>
   3e2a0:	mov	r3, #0
   3e2a4:	str	r3, [r4]
   3e2a8:	str	r3, [r4, #4]
   3e2ac:	str	r3, [r4, #8]
   3e2b0:	str	r3, [r4, #12]
   3e2b4:	ldr	r4, [sp]
   3e2b8:	add	sp, sp, #4
   3e2bc:	pop	{pc}		; (ldr pc, [sp], #4)
   3e2c0:	ldrh	r3, [r0, #8]
   3e2c4:	cmp	r3, #5
   3e2c8:	beq	3e2e4 <fb_name_table_visit@@Base+0xd4>
   3e2cc:	cmp	r3, #6
   3e2d0:	beq	3e310 <fb_name_table_visit@@Base+0x100>
   3e2d4:	cmp	r3, #4
   3e2d8:	beq	3e304 <fb_name_table_visit@@Base+0xf4>
   3e2dc:	mov	r0, #0
   3e2e0:	bx	lr
   3e2e4:	ldr	r2, [r0]
   3e2e8:	movw	r3, #15191	; 0x3b57
   3e2ec:	movt	r3, #12137	; 0x2f69
   3e2f0:	movw	r0, #31153	; 0x79b1
   3e2f4:	movt	r0, #40503	; 0x9e37
   3e2f8:	eor	r3, r3, r2
   3e2fc:	mul	r0, r0, r3
   3e300:	bx	lr
   3e304:	movw	r3, #15190	; 0x3b56
   3e308:	ldr	r2, [r0]
   3e30c:	b	3e2ec <fb_name_table_visit@@Base+0xdc>
   3e310:	ldrb	r2, [r0]
   3e314:	movw	r3, #15188	; 0x3b54
   3e318:	b	3e2ec <fb_name_table_visit@@Base+0xdc>
   3e31c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3e320:	strd	r6, [sp, #8]
   3e324:	ldr	r6, [pc, #580]	; 3e570 <fb_name_table_visit@@Base+0x360>
   3e328:	strd	r8, [sp, #16]
   3e32c:	strd	sl, [sp, #24]
   3e330:	subs	sl, r2, #0
   3e334:	str	lr, [sp, #32]
   3e338:	sub	sp, sp, #4
   3e33c:	add	r6, pc, r6
   3e340:	beq	3e550 <fb_name_table_visit@@Base+0x340>
   3e344:	cmp	sl, #2
   3e348:	beq	3e530 <fb_name_table_visit@@Base+0x320>
   3e34c:	cmp	sl, #1
   3e350:	beq	3e510 <fb_name_table_visit@@Base+0x300>
   3e354:	ldr	r5, [r0, #12]
   3e358:	mov	r4, r1
   3e35c:	mov	fp, r3
   3e360:	mov	r3, #179	; 0xb3
   3e364:	mov	r9, r0
   3e368:	ldr	r1, [r0, #8]
   3e36c:	mul	r3, r3, r5
   3e370:	cmp	r1, r3, lsr #8
   3e374:	bcs	3e48c <fb_name_table_visit@@Base+0x27c>
   3e378:	ldr	r1, [r9]
   3e37c:	mov	r0, r4
   3e380:	sub	r5, r5, #1
   3e384:	bl	3e2c0 <fb_name_table_visit@@Base+0xb0>
   3e388:	sub	r3, fp, #2
   3e38c:	and	r2, r5, r0
   3e390:	cmp	r3, #1
   3e394:	add	ip, r1, r2, lsl #2
   3e398:	ldr	lr, [r1, r2, lsl #2]
   3e39c:	bls	3e4a4 <fb_name_table_visit@@Base+0x294>
   3e3a0:	cmp	lr, #0
   3e3a4:	moveq	r8, ip
   3e3a8:	beq	3e458 <fb_name_table_visit@@Base+0x248>
   3e3ac:	add	r0, r0, #1
   3e3b0:	mov	r8, #0
   3e3b4:	b	3e3f8 <fb_name_table_visit@@Base+0x1e8>
   3e3b8:	ldrh	r2, [r4, #8]
   3e3bc:	ldrh	r3, [lr, #8]
   3e3c0:	cmp	r3, r2
   3e3c4:	bne	3e3e0 <fb_name_table_visit@@Base+0x1d0>
   3e3c8:	cmp	r3, #5
   3e3cc:	beq	3e40c <fb_name_table_visit@@Base+0x1fc>
   3e3d0:	cmp	r3, #6
   3e3d4:	beq	3e438 <fb_name_table_visit@@Base+0x228>
   3e3d8:	cmp	r3, #4
   3e3dc:	beq	3e40c <fb_name_table_visit@@Base+0x1fc>
   3e3e0:	and	ip, r5, r0
   3e3e4:	add	r0, r0, #1
   3e3e8:	ldr	lr, [r1, ip, lsl #2]
   3e3ec:	add	ip, r1, ip, lsl #2
   3e3f0:	cmp	lr, #0
   3e3f4:	beq	3e450 <fb_name_table_visit@@Base+0x240>
   3e3f8:	cmp	lr, #2
   3e3fc:	bne	3e3b8 <fb_name_table_visit@@Base+0x1a8>
   3e400:	cmp	r8, #0
   3e404:	moveq	r8, ip
   3e408:	b	3e3e0 <fb_name_table_visit@@Base+0x1d0>
   3e40c:	ldrd	r2, [lr]
   3e410:	ldrd	r6, [r4]
   3e414:	cmp	r7, r3
   3e418:	cmpeq	r6, r2
   3e41c:	moveq	r3, #1
   3e420:	movne	r3, #0
   3e424:	cmp	r3, #0
   3e428:	beq	3e3e0 <fb_name_table_visit@@Base+0x1d0>
   3e42c:	cmp	fp, #0
   3e430:	streq	sl, [ip]
   3e434:	b	3e46c <fb_name_table_visit@@Base+0x25c>
   3e438:	ldrb	r3, [r4]
   3e43c:	ldrb	r2, [lr]
   3e440:	sub	r3, r3, r2
   3e444:	clz	r3, r3
   3e448:	lsr	r3, r3, #5
   3e44c:	b	3e424 <fb_name_table_visit@@Base+0x214>
   3e450:	cmp	r8, #0
   3e454:	moveq	r8, ip
   3e458:	ldr	r3, [r9, #8]
   3e45c:	mov	lr, #0
   3e460:	add	r3, r3, #1
   3e464:	str	r3, [r9, #8]
   3e468:	str	sl, [r8]
   3e46c:	mov	r0, lr
   3e470:	add	sp, sp, #4
   3e474:	ldrd	r4, [sp]
   3e478:	ldrd	r6, [sp, #8]
   3e47c:	ldrd	r8, [sp, #16]
   3e480:	ldrd	sl, [sp, #24]
   3e484:	add	sp, sp, #32
   3e488:	pop	{pc}		; (ldr pc, [sp], #4)
   3e48c:	lsl	r1, r1, #1
   3e490:	bl	3e5a4 <fb_name_table_visit@@Base+0x394>
   3e494:	cmp	r0, #0
   3e498:	bne	3e4e8 <fb_name_table_visit@@Base+0x2d8>
   3e49c:	ldr	r5, [r9, #12]
   3e4a0:	b	3e378 <fb_name_table_visit@@Base+0x168>
   3e4a4:	ldr	r3, [r9, #8]
   3e4a8:	cmp	lr, #0
   3e4ac:	cmpne	lr, #2
   3e4b0:	add	r3, r3, #1
   3e4b4:	str	r3, [r9, #8]
   3e4b8:	beq	3e4dc <fb_name_table_visit@@Base+0x2cc>
   3e4bc:	add	r3, r0, #1
   3e4c0:	and	ip, r5, r3
   3e4c4:	add	r3, r3, #1
   3e4c8:	ldr	r2, [r1, ip, lsl #2]
   3e4cc:	add	ip, r1, ip, lsl #2
   3e4d0:	cmp	r2, #0
   3e4d4:	cmpne	r2, #2
   3e4d8:	bne	3e4c0 <fb_name_table_visit@@Base+0x2b0>
   3e4dc:	mov	lr, #0
   3e4e0:	str	sl, [ip]
   3e4e4:	b	3e46c <fb_name_table_visit@@Base+0x25c>
   3e4e8:	ldr	r3, [pc, #132]	; 3e574 <fb_name_table_visit@@Base+0x364>
   3e4ec:	ldr	r2, [pc, #132]	; 3e578 <fb_name_table_visit@@Base+0x368>
   3e4f0:	ldr	r1, [pc, #132]	; 3e57c <fb_name_table_visit@@Base+0x36c>
   3e4f4:	ldr	r3, [r6, r3]
   3e4f8:	add	r2, pc, r2
   3e4fc:	add	r1, pc, r1
   3e500:	ldr	r0, [r3]
   3e504:	bl	13f58 <fprintf@plt>
   3e508:	mov	r0, #1
   3e50c:	bl	13f40 <exit@plt>
   3e510:	ldr	r3, [pc, #104]	; 3e580 <fb_name_table_visit@@Base+0x370>
   3e514:	mov	r2, #116	; 0x74
   3e518:	ldr	r1, [pc, #100]	; 3e584 <fb_name_table_visit@@Base+0x374>
   3e51c:	ldr	r0, [pc, #100]	; 3e588 <fb_name_table_visit@@Base+0x378>
   3e520:	add	r3, pc, r3
   3e524:	add	r1, pc, r1
   3e528:	add	r0, pc, r0
   3e52c:	bl	1400c <__assert_fail@plt>
   3e530:	ldr	r3, [pc, #84]	; 3e58c <fb_name_table_visit@@Base+0x37c>
   3e534:	mov	r2, #115	; 0x73
   3e538:	ldr	r1, [pc, #80]	; 3e590 <fb_name_table_visit@@Base+0x380>
   3e53c:	ldr	r0, [pc, #80]	; 3e594 <fb_name_table_visit@@Base+0x384>
   3e540:	add	r3, pc, r3
   3e544:	add	r1, pc, r1
   3e548:	add	r0, pc, r0
   3e54c:	bl	1400c <__assert_fail@plt>
   3e550:	ldr	r3, [pc, #64]	; 3e598 <fb_name_table_visit@@Base+0x388>
   3e554:	mov	r2, #114	; 0x72
   3e558:	ldr	r1, [pc, #60]	; 3e59c <fb_name_table_visit@@Base+0x38c>
   3e55c:	ldr	r0, [pc, #60]	; 3e5a0 <fb_name_table_visit@@Base+0x390>
   3e560:	add	r3, pc, r3
   3e564:	add	r1, pc, r1
   3e568:	add	r0, pc, r0
   3e56c:	bl	1400c <__assert_fail@plt>
   3e570:			; <UNDEFINED> instruction: 0x0002ccbc
   3e574:	muleq	r0, ip, r0
   3e578:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   3e57c:	andeq	r8, r1, r8, lsl #30
   3e580:	andeq	ip, r1, r4, ror r4
   3e584:	strdeq	r8, [r1], -ip
   3e588:	muleq	r1, r0, lr
   3e58c:	andeq	ip, r1, r4, asr r4
   3e590:	ldrdeq	r8, [r1], -ip
   3e594:	andeq	r8, r1, r8, asr lr
   3e598:	andeq	ip, r1, r4, lsr r4
   3e59c:			; <UNDEFINED> instruction: 0x00018dbc
   3e5a0:	andeq	r8, r1, r0, lsr #28
   3e5a4:	ldr	r3, [r0, #8]
   3e5a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   3e5ac:	ldr	r5, [r0]
   3e5b0:	strd	r6, [sp, #8]
   3e5b4:	mov	r7, r0
   3e5b8:	str	lr, [sp, #16]
   3e5bc:	sub	sp, sp, #20
   3e5c0:	cmp	r1, r3
   3e5c4:	movcc	r1, r3
   3e5c8:	cmp	r1, #2
   3e5cc:	bls	3e6a4 <fb_name_table_visit@@Base+0x494>
   3e5d0:	mov	r3, #4
   3e5d4:	movw	r0, #358	; 0x166
   3e5d8:	mul	r2, r0, r3
   3e5dc:	lsl	r6, r3, #1
   3e5e0:	cmp	r1, r2, lsr #8
   3e5e4:	mov	r3, r6
   3e5e8:	bhi	3e5d8 <fb_name_table_visit@@Base+0x3c8>
   3e5ec:	mov	r1, #4
   3e5f0:	mov	r0, r6
   3e5f4:	bl	13e74 <calloc@plt>
   3e5f8:	cmp	r0, #0
   3e5fc:	str	r0, [sp]
   3e600:	beq	3e6ac <fb_name_table_visit@@Base+0x49c>
   3e604:	ldr	r3, [r7, #12]
   3e608:	mov	r4, #0
   3e60c:	str	r4, [sp, #4]
   3e610:	str	r4, [sp, #8]
   3e614:	str	r6, [sp, #12]
   3e618:	cmp	r3, r4
   3e61c:	moveq	r6, sp
   3e620:	beq	3e668 <fb_name_table_visit@@Base+0x458>
   3e624:	sub	r5, r5, #4
   3e628:	mov	r6, sp
   3e62c:	b	3e638 <fb_name_table_visit@@Base+0x428>
   3e630:	cmp	r3, r4
   3e634:	bls	3e668 <fb_name_table_visit@@Base+0x458>
   3e638:	ldr	r2, [r5, #4]!
   3e63c:	add	r4, r4, #1
   3e640:	cmp	r2, #0
   3e644:	cmpne	r2, #2
   3e648:	beq	3e630 <fb_name_table_visit@@Base+0x420>
   3e64c:	mov	r3, #3
   3e650:	mov	r1, r2
   3e654:	mov	r0, r6
   3e658:	bl	3e31c <fb_name_table_visit@@Base+0x10c>
   3e65c:	ldr	r3, [r7, #12]
   3e660:	cmp	r3, r4
   3e664:	bhi	3e638 <fb_name_table_visit@@Base+0x428>
   3e668:	mov	r0, r7
   3e66c:	bl	3e284 <fb_name_table_visit@@Base+0x74>
   3e670:	ldr	r3, [sp]
   3e674:	mov	r0, #0
   3e678:	ldmib	r6, {r1, r2}
   3e67c:	str	r3, [r7]
   3e680:	ldr	r3, [r6, #12]
   3e684:	str	r1, [r7, #4]
   3e688:	str	r2, [r7, #8]
   3e68c:	str	r3, [r7, #12]
   3e690:	add	sp, sp, #20
   3e694:	ldrd	r4, [sp]
   3e698:	ldrd	r6, [sp, #8]
   3e69c:	add	sp, sp, #16
   3e6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   3e6a4:	mov	r6, #4
   3e6a8:	b	3e5ec <fb_name_table_visit@@Base+0x3dc>
   3e6ac:	mvn	r0, #0
   3e6b0:	b	3e690 <fb_name_table_visit@@Base+0x480>
   3e6b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3e6b8:	subs	r4, r0, #0
   3e6bc:	strd	r6, [sp, #8]
   3e6c0:	strd	r8, [sp, #16]
   3e6c4:	str	sl, [sp, #24]
   3e6c8:	str	lr, [sp, #28]
   3e6cc:	beq	3e794 <fb_name_table_visit@@Base+0x584>
   3e6d0:	ldr	r1, [r1]
   3e6d4:	mov	r0, r2
   3e6d8:	mov	r5, r2
   3e6dc:	sub	r1, r1, #1
   3e6e0:	bl	3e2c0 <fb_name_table_visit@@Base+0xb0>
   3e6e4:	and	r3, r1, r0
   3e6e8:	mov	r2, r0
   3e6ec:	ldr	r0, [r4, r3, lsl #2]
   3e6f0:	cmp	r0, #0
   3e6f4:	beq	3e760 <fb_name_table_visit@@Base+0x550>
   3e6f8:	add	r2, r2, #1
   3e6fc:	b	3e71c <fb_name_table_visit@@Base+0x50c>
   3e700:	cmp	r3, #4
   3e704:	beq	3e778 <fb_name_table_visit@@Base+0x568>
   3e708:	and	r3, r1, r2
   3e70c:	add	r2, r2, #1
   3e710:	ldr	r0, [r4, r3, lsl #2]
   3e714:	cmp	r0, #0
   3e718:	beq	3e760 <fb_name_table_visit@@Base+0x550>
   3e71c:	cmp	r0, #2
   3e720:	beq	3e708 <fb_name_table_visit@@Base+0x4f8>
   3e724:	ldrh	ip, [r5, #8]
   3e728:	ldrh	r3, [r0, #8]
   3e72c:	cmp	r3, ip
   3e730:	bne	3e708 <fb_name_table_visit@@Base+0x4f8>
   3e734:	cmp	r3, #5
   3e738:	beq	3e778 <fb_name_table_visit@@Base+0x568>
   3e73c:	cmp	r3, #6
   3e740:	bne	3e700 <fb_name_table_visit@@Base+0x4f0>
   3e744:	ldrb	r3, [r5]
   3e748:	ldrb	ip, [r0]
   3e74c:	sub	r3, r3, ip
   3e750:	clz	r3, r3
   3e754:	lsr	r3, r3, #5
   3e758:	cmp	r3, #0
   3e75c:	beq	3e708 <fb_name_table_visit@@Base+0x4f8>
   3e760:	ldrd	r4, [sp]
   3e764:	ldrd	r6, [sp, #8]
   3e768:	ldrd	r8, [sp, #16]
   3e76c:	ldr	sl, [sp, #24]
   3e770:	add	sp, sp, #28
   3e774:	pop	{pc}		; (ldr pc, [sp], #4)
   3e778:	ldrd	r6, [r0]
   3e77c:	ldrd	r8, [r5]
   3e780:	cmp	r9, r7
   3e784:	cmpeq	r8, r6
   3e788:	moveq	r3, #1
   3e78c:	movne	r3, #0
   3e790:	b	3e758 <fb_name_table_visit@@Base+0x548>
   3e794:	mov	r0, r4
   3e798:	b	3e760 <fb_name_table_visit@@Base+0x550>
   3e79c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e7a0:	ldr	r4, [r0]
   3e7a4:	strd	r6, [sp, #8]
   3e7a8:	str	r8, [sp, #16]
   3e7ac:	str	lr, [sp, #20]
   3e7b0:	cmp	r4, #0
   3e7b4:	beq	3e894 <fb_name_table_visit@@Base+0x684>
   3e7b8:	mov	r8, r0
   3e7bc:	mov	r0, r1
   3e7c0:	bl	3e2c0 <fb_name_table_visit@@Base+0xb0>
   3e7c4:	ldr	r5, [r8, #12]
   3e7c8:	mov	lr, r0
   3e7cc:	sub	r5, r5, #1
   3e7d0:	and	ip, r5, r0
   3e7d4:	ldr	r0, [r4, ip, lsl #2]
   3e7d8:	add	ip, r4, ip, lsl #2
   3e7dc:	cmp	r0, #0
   3e7e0:	beq	3e864 <fb_name_table_visit@@Base+0x654>
   3e7e4:	add	lr, lr, #1
   3e7e8:	b	3e80c <fb_name_table_visit@@Base+0x5fc>
   3e7ec:	cmp	r3, #4
   3e7f0:	beq	3e878 <fb_name_table_visit@@Base+0x668>
   3e7f4:	and	ip, r5, lr
   3e7f8:	add	lr, lr, #1
   3e7fc:	ldr	r0, [r4, ip, lsl #2]
   3e800:	add	ip, r4, ip, lsl #2
   3e804:	cmp	r0, #0
   3e808:	beq	3e864 <fb_name_table_visit@@Base+0x654>
   3e80c:	cmp	r0, #2
   3e810:	beq	3e7f4 <fb_name_table_visit@@Base+0x5e4>
   3e814:	ldrh	r2, [r1, #8]
   3e818:	ldrh	r3, [r0, #8]
   3e81c:	cmp	r3, r2
   3e820:	bne	3e7f4 <fb_name_table_visit@@Base+0x5e4>
   3e824:	cmp	r3, #5
   3e828:	beq	3e878 <fb_name_table_visit@@Base+0x668>
   3e82c:	cmp	r3, #6
   3e830:	bne	3e7ec <fb_name_table_visit@@Base+0x5dc>
   3e834:	ldrb	r3, [r1]
   3e838:	ldrb	r2, [r0]
   3e83c:	sub	r3, r3, r2
   3e840:	clz	r3, r3
   3e844:	lsr	r3, r3, #5
   3e848:	cmp	r3, #0
   3e84c:	beq	3e7f4 <fb_name_table_visit@@Base+0x5e4>
   3e850:	ldr	r3, [r8, #8]
   3e854:	mov	r2, #2
   3e858:	str	r2, [ip]
   3e85c:	sub	r3, r3, #1
   3e860:	str	r3, [r8, #8]
   3e864:	ldrd	r4, [sp]
   3e868:	ldrd	r6, [sp, #8]
   3e86c:	ldr	r8, [sp, #16]
   3e870:	add	sp, sp, #20
   3e874:	pop	{pc}		; (ldr pc, [sp], #4)
   3e878:	ldrd	r2, [r0]
   3e87c:	ldrd	r6, [r1]
   3e880:	cmp	r7, r3
   3e884:	cmpeq	r6, r2
   3e888:	moveq	r3, #1
   3e88c:	movne	r3, #0
   3e890:	b	3e848 <fb_name_table_visit@@Base+0x638>
   3e894:	mov	r0, r4
   3e898:	b	3e864 <fb_name_table_visit@@Base+0x654>

0003e89c <fb_value_set_clear@@Base>:
   3e89c:	b	3e284 <fb_name_table_visit@@Base+0x74>

0003e8a0 <fb_value_set_destroy@@Base>:
   3e8a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e8a4:	strd	r6, [sp, #8]
   3e8a8:	mov	r7, r0
   3e8ac:	str	r8, [sp, #16]
   3e8b0:	subs	r8, r1, #0
   3e8b4:	str	lr, [sp, #20]
   3e8b8:	beq	3e904 <fb_value_set_destroy@@Base+0x64>
   3e8bc:	ldr	r5, [r0]
   3e8c0:	ldr	ip, [r0, #12]
   3e8c4:	cmp	ip, #0
   3e8c8:	beq	3e904 <fb_value_set_destroy@@Base+0x64>
   3e8cc:	mov	r6, r2
   3e8d0:	sub	r5, r5, #4
   3e8d4:	mov	r4, #0
   3e8d8:	ldr	r3, [r5, #4]!
   3e8dc:	mov	r0, r6
   3e8e0:	add	r4, r4, #1
   3e8e4:	cmp	r3, #0
   3e8e8:	cmpne	r3, #2
   3e8ec:	mov	r1, r3
   3e8f0:	beq	3e8fc <fb_value_set_destroy@@Base+0x5c>
   3e8f4:	blx	r8
   3e8f8:	ldr	ip, [r7, #12]
   3e8fc:	cmp	r4, ip
   3e900:	bcc	3e8d8 <fb_value_set_destroy@@Base+0x38>
   3e904:	mov	r0, r7
   3e908:	ldrd	r4, [sp]
   3e90c:	ldrd	r6, [sp, #8]
   3e910:	ldr	r8, [sp, #16]
   3e914:	ldr	lr, [sp, #20]
   3e918:	add	sp, sp, #24
   3e91c:	b	3e284 <fb_name_table_visit@@Base+0x74>

0003e920 <fb_value_set_init@@Base>:
   3e920:	cmp	r1, #2
   3e924:	strd	r4, [sp, #-16]!
   3e928:	mov	r4, r0
   3e92c:	str	r6, [sp, #8]
   3e930:	str	lr, [sp, #12]
   3e934:	bls	3e990 <fb_value_set_init@@Base+0x70>
   3e938:	mov	r3, #4
   3e93c:	movw	r0, #358	; 0x166
   3e940:	mul	r2, r0, r3
   3e944:	lsl	r5, r3, #1
   3e948:	cmp	r1, r2, lsr #8
   3e94c:	mov	r3, r5
   3e950:	bhi	3e940 <fb_value_set_init@@Base+0x20>
   3e954:	mov	r1, #4
   3e958:	mov	r0, r5
   3e95c:	bl	13e74 <calloc@plt>
   3e960:	cmp	r0, #0
   3e964:	str	r0, [r4]
   3e968:	beq	3e998 <fb_value_set_init@@Base+0x78>
   3e96c:	mov	r3, #0
   3e970:	mov	r0, r3
   3e974:	str	r3, [r4, #4]
   3e978:	str	r3, [r4, #8]
   3e97c:	str	r5, [r4, #12]
   3e980:	ldrd	r4, [sp]
   3e984:	ldr	r6, [sp, #8]
   3e988:	add	sp, sp, #12
   3e98c:	pop	{pc}		; (ldr pc, [sp], #4)
   3e990:	mov	r5, #4
   3e994:	b	3e954 <fb_value_set_init@@Base+0x34>
   3e998:	mvn	r0, #0
   3e99c:	b	3e980 <fb_value_set_init@@Base+0x60>

0003e9a0 <fb_value_set_resize@@Base>:
   3e9a0:	b	3e5a4 <fb_name_table_visit@@Base+0x394>

0003e9a4 <fb_value_set_insert@@Base>:
   3e9a4:	mov	r2, r3
   3e9a8:	ldr	r3, [sp]
   3e9ac:	b	3e31c <fb_name_table_visit@@Base+0x10c>

0003e9b0 <fb_value_set_insert_item@@Base>:
   3e9b0:	mov	r3, r2
   3e9b4:	mov	r2, r1
   3e9b8:	b	3e31c <fb_name_table_visit@@Base+0x10c>

0003e9bc <fb_value_set_find@@Base>:
   3e9bc:	mov	r3, r0
   3e9c0:	mov	r2, r1
   3e9c4:	ldr	r0, [r3], #12
   3e9c8:	mov	r1, r3
   3e9cc:	b	3e6b4 <fb_name_table_visit@@Base+0x4a4>

0003e9d0 <fb_value_set_find_item@@Base>:
   3e9d0:	mov	r3, r0
   3e9d4:	mov	r2, r1
   3e9d8:	ldr	r0, [r3], #12
   3e9dc:	mov	r1, r3
   3e9e0:	b	3e6b4 <fb_name_table_visit@@Base+0x4a4>

0003e9e4 <fb_value_set_remove@@Base>:
   3e9e4:	b	3e79c <fb_name_table_visit@@Base+0x58c>

0003e9e8 <fb_value_set_remove_item@@Base>:
   3e9e8:	b	3e79c <fb_name_table_visit@@Base+0x58c>

0003e9ec <fb_value_set_visit@@Base>:
   3e9ec:	ldr	ip, [r0, #12]
   3e9f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e9f4:	ldr	r5, [r0]
   3e9f8:	strd	r6, [sp, #8]
   3e9fc:	str	r8, [sp, #16]
   3ea00:	cmp	ip, #0
   3ea04:	str	lr, [sp, #20]
   3ea08:	beq	3ea4c <fb_value_set_visit@@Base+0x60>
   3ea0c:	mov	r6, r2
   3ea10:	mov	r8, r1
   3ea14:	mov	r7, r0
   3ea18:	sub	r5, r5, #4
   3ea1c:	mov	r4, #0
   3ea20:	ldr	r3, [r5, #4]!
   3ea24:	mov	r0, r6
   3ea28:	add	r4, r4, #1
   3ea2c:	cmp	r3, #0
   3ea30:	cmpne	r3, #2
   3ea34:	mov	r1, r3
   3ea38:	beq	3ea44 <fb_value_set_visit@@Base+0x58>
   3ea3c:	blx	r8
   3ea40:	ldr	ip, [r7, #12]
   3ea44:	cmp	r4, ip
   3ea48:	bcc	3ea20 <fb_value_set_visit@@Base+0x34>
   3ea4c:	ldrd	r4, [sp]
   3ea50:	ldrd	r6, [sp, #8]
   3ea54:	ldr	r8, [sp, #16]
   3ea58:	add	sp, sp, #20
   3ea5c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ea60:	eor	r1, r1, #-2147483648	; 0x80000000
   3ea64:	b	3ea6c <fb_value_set_visit@@Base+0x80>
   3ea68:	eor	r3, r3, #-2147483648	; 0x80000000
   3ea6c:	push	{r4, r5, lr}
   3ea70:	lsl	r4, r1, #1
   3ea74:	lsl	r5, r3, #1
   3ea78:	teq	r4, r5
   3ea7c:	teqeq	r0, r2
   3ea80:	orrsne	ip, r4, r0
   3ea84:	orrsne	ip, r5, r2
   3ea88:	mvnsne	ip, r4, asr #21
   3ea8c:	mvnsne	ip, r5, asr #21
   3ea90:	beq	3ec7c <fb_value_set_visit@@Base+0x290>
   3ea94:	lsr	r4, r4, #21
   3ea98:	rsbs	r5, r4, r5, lsr #21
   3ea9c:	rsblt	r5, r5, #0
   3eaa0:	ble	3eac0 <fb_value_set_visit@@Base+0xd4>
   3eaa4:	add	r4, r4, r5
   3eaa8:	eor	r2, r0, r2
   3eaac:	eor	r3, r1, r3
   3eab0:	eor	r0, r2, r0
   3eab4:	eor	r1, r3, r1
   3eab8:	eor	r2, r0, r2
   3eabc:	eor	r3, r1, r3
   3eac0:	cmp	r5, #54	; 0x36
   3eac4:	pophi	{r4, r5, pc}
   3eac8:	tst	r1, #-2147483648	; 0x80000000
   3eacc:	lsl	r1, r1, #12
   3ead0:	mov	ip, #1048576	; 0x100000
   3ead4:	orr	r1, ip, r1, lsr #12
   3ead8:	beq	3eae4 <fb_value_set_visit@@Base+0xf8>
   3eadc:	rsbs	r0, r0, #0
   3eae0:	rsc	r1, r1, #0
   3eae4:	tst	r3, #-2147483648	; 0x80000000
   3eae8:	lsl	r3, r3, #12
   3eaec:	orr	r3, ip, r3, lsr #12
   3eaf0:	beq	3eafc <fb_value_set_visit@@Base+0x110>
   3eaf4:	rsbs	r2, r2, #0
   3eaf8:	rsc	r3, r3, #0
   3eafc:	teq	r4, r5
   3eb00:	beq	3ec64 <fb_value_set_visit@@Base+0x278>
   3eb04:	sub	r4, r4, #1
   3eb08:	rsbs	lr, r5, #32
   3eb0c:	blt	3eb28 <fb_value_set_visit@@Base+0x13c>
   3eb10:	lsl	ip, r2, lr
   3eb14:	adds	r0, r0, r2, lsr r5
   3eb18:	adc	r1, r1, #0
   3eb1c:	adds	r0, r0, r3, lsl lr
   3eb20:	adcs	r1, r1, r3, asr r5
   3eb24:	b	3eb44 <fb_value_set_visit@@Base+0x158>
   3eb28:	sub	r5, r5, #32
   3eb2c:	add	lr, lr, #32
   3eb30:	cmp	r2, #1
   3eb34:	lsl	ip, r3, lr
   3eb38:	orrcs	ip, ip, #2
   3eb3c:	adds	r0, r0, r3, asr r5
   3eb40:	adcs	r1, r1, r3, asr #31
   3eb44:	and	r5, r1, #-2147483648	; 0x80000000
   3eb48:	bpl	3eb58 <fb_value_set_visit@@Base+0x16c>
   3eb4c:	rsbs	ip, ip, #0
   3eb50:	rscs	r0, r0, #0
   3eb54:	rsc	r1, r1, #0
   3eb58:	cmp	r1, #1048576	; 0x100000
   3eb5c:	bcc	3eb9c <fb_value_set_visit@@Base+0x1b0>
   3eb60:	cmp	r1, #2097152	; 0x200000
   3eb64:	bcc	3eb84 <fb_value_set_visit@@Base+0x198>
   3eb68:	lsrs	r1, r1, #1
   3eb6c:	rrxs	r0, r0
   3eb70:	rrx	ip, ip
   3eb74:	add	r4, r4, #1
   3eb78:	lsl	r2, r4, #21
   3eb7c:	cmn	r2, #4194304	; 0x400000
   3eb80:	bcs	3ecdc <fb_value_set_visit@@Base+0x2f0>
   3eb84:	cmp	ip, #-2147483648	; 0x80000000
   3eb88:	lsrseq	ip, r0, #1
   3eb8c:	adcs	r0, r0, #0
   3eb90:	adc	r1, r1, r4, lsl #20
   3eb94:	orr	r1, r1, r5
   3eb98:	pop	{r4, r5, pc}
   3eb9c:	lsls	ip, ip, #1
   3eba0:	adcs	r0, r0, r0
   3eba4:	adc	r1, r1, r1
   3eba8:	tst	r1, #1048576	; 0x100000
   3ebac:	sub	r4, r4, #1
   3ebb0:	bne	3eb84 <fb_value_set_visit@@Base+0x198>
   3ebb4:	teq	r1, #0
   3ebb8:	moveq	r1, r0
   3ebbc:	moveq	r0, #0
   3ebc0:	clz	r3, r1
   3ebc4:	addeq	r3, r3, #32
   3ebc8:	sub	r3, r3, #11
   3ebcc:	subs	r2, r3, #32
   3ebd0:	bge	3ebf4 <fb_value_set_visit@@Base+0x208>
   3ebd4:	adds	r2, r2, #12
   3ebd8:	ble	3ebf0 <fb_value_set_visit@@Base+0x204>
   3ebdc:	add	ip, r2, #20
   3ebe0:	rsb	r2, r2, #12
   3ebe4:	lsl	r0, r1, ip
   3ebe8:	lsr	r1, r1, r2
   3ebec:	b	3ec04 <fb_value_set_visit@@Base+0x218>
   3ebf0:	add	r2, r2, #20
   3ebf4:	rsble	ip, r2, #32
   3ebf8:	lsl	r1, r1, r2
   3ebfc:	orrle	r1, r1, r0, lsr ip
   3ec00:	lslle	r0, r0, r2
   3ec04:	subs	r4, r4, r3
   3ec08:	addge	r1, r1, r4, lsl #20
   3ec0c:	orrge	r1, r1, r5
   3ec10:	popge	{r4, r5, pc}
   3ec14:	mvn	r4, r4
   3ec18:	subs	r4, r4, #31
   3ec1c:	bge	3ec58 <fb_value_set_visit@@Base+0x26c>
   3ec20:	adds	r4, r4, #12
   3ec24:	bgt	3ec40 <fb_value_set_visit@@Base+0x254>
   3ec28:	add	r4, r4, #20
   3ec2c:	rsb	r2, r4, #32
   3ec30:	lsr	r0, r0, r4
   3ec34:	orr	r0, r0, r1, lsl r2
   3ec38:	orr	r1, r5, r1, lsr r4
   3ec3c:	pop	{r4, r5, pc}
   3ec40:	rsb	r4, r4, #12
   3ec44:	rsb	r2, r4, #32
   3ec48:	lsr	r0, r0, r2
   3ec4c:	orr	r0, r0, r1, lsl r4
   3ec50:	mov	r1, r5
   3ec54:	pop	{r4, r5, pc}
   3ec58:	lsr	r0, r1, r4
   3ec5c:	mov	r1, r5
   3ec60:	pop	{r4, r5, pc}
   3ec64:	teq	r4, #0
   3ec68:	eor	r3, r3, #1048576	; 0x100000
   3ec6c:	eoreq	r1, r1, #1048576	; 0x100000
   3ec70:	addeq	r4, r4, #1
   3ec74:	subne	r5, r5, #1
   3ec78:	b	3eb04 <fb_value_set_visit@@Base+0x118>
   3ec7c:	mvns	ip, r4, asr #21
   3ec80:	mvnsne	ip, r5, asr #21
   3ec84:	beq	3ecec <fb_value_set_visit@@Base+0x300>
   3ec88:	teq	r4, r5
   3ec8c:	teqeq	r0, r2
   3ec90:	beq	3eca4 <fb_value_set_visit@@Base+0x2b8>
   3ec94:	orrs	ip, r4, r0
   3ec98:	moveq	r1, r3
   3ec9c:	moveq	r0, r2
   3eca0:	pop	{r4, r5, pc}
   3eca4:	teq	r1, r3
   3eca8:	movne	r1, #0
   3ecac:	movne	r0, #0
   3ecb0:	popne	{r4, r5, pc}
   3ecb4:	lsrs	ip, r4, #21
   3ecb8:	bne	3eccc <fb_value_set_visit@@Base+0x2e0>
   3ecbc:	lsls	r0, r0, #1
   3ecc0:	adcs	r1, r1, r1
   3ecc4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3ecc8:	pop	{r4, r5, pc}
   3eccc:	adds	r4, r4, #4194304	; 0x400000
   3ecd0:	addcc	r1, r1, #1048576	; 0x100000
   3ecd4:	popcc	{r4, r5, pc}
   3ecd8:	and	r5, r1, #-2147483648	; 0x80000000
   3ecdc:	orr	r1, r5, #2130706432	; 0x7f000000
   3ece0:	orr	r1, r1, #15728640	; 0xf00000
   3ece4:	mov	r0, #0
   3ece8:	pop	{r4, r5, pc}
   3ecec:	mvns	ip, r4, asr #21
   3ecf0:	movne	r1, r3
   3ecf4:	movne	r0, r2
   3ecf8:	mvnseq	ip, r5, asr #21
   3ecfc:	movne	r3, r1
   3ed00:	movne	r2, r0
   3ed04:	orrs	r4, r0, r1, lsl #12
   3ed08:	orrseq	r5, r2, r3, lsl #12
   3ed0c:	teqeq	r1, r3
   3ed10:	orrne	r1, r1, #524288	; 0x80000
   3ed14:	pop	{r4, r5, pc}
   3ed18:	teq	r0, #0
   3ed1c:	moveq	r1, #0
   3ed20:	bxeq	lr
   3ed24:	push	{r4, r5, lr}
   3ed28:	mov	r4, #1024	; 0x400
   3ed2c:	add	r4, r4, #50	; 0x32
   3ed30:	mov	r5, #0
   3ed34:	mov	r1, #0
   3ed38:	b	3ebb4 <fb_value_set_visit@@Base+0x1c8>
   3ed3c:	teq	r0, #0
   3ed40:	moveq	r1, #0
   3ed44:	bxeq	lr
   3ed48:	push	{r4, r5, lr}
   3ed4c:	mov	r4, #1024	; 0x400
   3ed50:	add	r4, r4, #50	; 0x32
   3ed54:	ands	r5, r0, #-2147483648	; 0x80000000
   3ed58:	rsbmi	r0, r0, #0
   3ed5c:	mov	r1, #0
   3ed60:	b	3ebb4 <fb_value_set_visit@@Base+0x1c8>
   3ed64:	lsls	r2, r0, #1
   3ed68:	asr	r1, r2, #3
   3ed6c:	rrx	r1, r1
   3ed70:	lsl	r0, r2, #28
   3ed74:	andsne	r3, r2, #-16777216	; 0xff000000
   3ed78:	teqne	r3, #-16777216	; 0xff000000
   3ed7c:	eorne	r1, r1, #939524096	; 0x38000000
   3ed80:	bxne	lr
   3ed84:	bics	r2, r2, #-16777216	; 0xff000000
   3ed88:	bxeq	lr
   3ed8c:	teq	r3, #-16777216	; 0xff000000
   3ed90:	orreq	r1, r1, #524288	; 0x80000
   3ed94:	bxeq	lr
   3ed98:	push	{r4, r5, lr}
   3ed9c:	mov	r4, #896	; 0x380
   3eda0:	and	r5, r1, #-2147483648	; 0x80000000
   3eda4:	bic	r1, r1, #-2147483648	; 0x80000000
   3eda8:	b	3ebb4 <fb_value_set_visit@@Base+0x1c8>
   3edac:	orrs	r2, r0, r1
   3edb0:	bxeq	lr
   3edb4:	push	{r4, r5, lr}
   3edb8:	mov	r5, #0
   3edbc:	b	3eddc <fb_value_set_visit@@Base+0x3f0>
   3edc0:	orrs	r2, r0, r1
   3edc4:	bxeq	lr
   3edc8:	push	{r4, r5, lr}
   3edcc:	ands	r5, r1, #-2147483648	; 0x80000000
   3edd0:	bpl	3eddc <fb_value_set_visit@@Base+0x3f0>
   3edd4:	rsbs	r0, r0, #0
   3edd8:	rsc	r1, r1, #0
   3eddc:	mov	r4, #1024	; 0x400
   3ede0:	add	r4, r4, #50	; 0x32
   3ede4:	lsrs	ip, r1, #22
   3ede8:	beq	3eb58 <fb_value_set_visit@@Base+0x16c>
   3edec:	mov	r2, #3
   3edf0:	lsrs	ip, ip, #3
   3edf4:	addne	r2, r2, #3
   3edf8:	lsrs	ip, ip, #3
   3edfc:	addne	r2, r2, #3
   3ee00:	add	r2, r2, ip, lsr #3
   3ee04:	rsb	r3, r2, #32
   3ee08:	lsl	ip, r0, r3
   3ee0c:	lsr	r0, r0, r2
   3ee10:	orr	r0, r0, r1, lsl r3
   3ee14:	lsr	r1, r1, r2
   3ee18:	add	r4, r4, r2
   3ee1c:	b	3eb58 <fb_value_set_visit@@Base+0x16c>
   3ee20:	eor	r0, r0, #-2147483648	; 0x80000000
   3ee24:	b	3ee2c <fb_value_set_visit@@Base+0x440>
   3ee28:	eor	r1, r1, #-2147483648	; 0x80000000
   3ee2c:	lsls	r2, r0, #1
   3ee30:	lslsne	r3, r1, #1
   3ee34:	teqne	r2, r3
   3ee38:	mvnsne	ip, r2, asr #24
   3ee3c:	mvnsne	ip, r3, asr #24
   3ee40:	beq	3ef38 <fb_value_set_visit@@Base+0x54c>
   3ee44:	lsr	r2, r2, #24
   3ee48:	rsbs	r3, r2, r3, lsr #24
   3ee4c:	addgt	r2, r2, r3
   3ee50:	eorgt	r1, r0, r1
   3ee54:	eorgt	r0, r1, r0
   3ee58:	eorgt	r1, r0, r1
   3ee5c:	rsblt	r3, r3, #0
   3ee60:	cmp	r3, #25
   3ee64:	bxhi	lr
   3ee68:	tst	r0, #-2147483648	; 0x80000000
   3ee6c:	orr	r0, r0, #8388608	; 0x800000
   3ee70:	bic	r0, r0, #-16777216	; 0xff000000
   3ee74:	rsbne	r0, r0, #0
   3ee78:	tst	r1, #-2147483648	; 0x80000000
   3ee7c:	orr	r1, r1, #8388608	; 0x800000
   3ee80:	bic	r1, r1, #-16777216	; 0xff000000
   3ee84:	rsbne	r1, r1, #0
   3ee88:	teq	r2, r3
   3ee8c:	beq	3ef20 <fb_value_set_visit@@Base+0x534>
   3ee90:	sub	r2, r2, #1
   3ee94:	adds	r0, r0, r1, asr r3
   3ee98:	rsb	r3, r3, #32
   3ee9c:	lsl	r1, r1, r3
   3eea0:	and	r3, r0, #-2147483648	; 0x80000000
   3eea4:	bpl	3eeb0 <fb_value_set_visit@@Base+0x4c4>
   3eea8:	rsbs	r1, r1, #0
   3eeac:	rsc	r0, r0, #0
   3eeb0:	cmp	r0, #8388608	; 0x800000
   3eeb4:	bcc	3eee8 <fb_value_set_visit@@Base+0x4fc>
   3eeb8:	cmp	r0, #16777216	; 0x1000000
   3eebc:	bcc	3eed4 <fb_value_set_visit@@Base+0x4e8>
   3eec0:	lsrs	r0, r0, #1
   3eec4:	rrx	r1, r1
   3eec8:	add	r2, r2, #1
   3eecc:	cmp	r2, #254	; 0xfe
   3eed0:	bcs	3ef8c <fb_value_set_visit@@Base+0x5a0>
   3eed4:	cmp	r1, #-2147483648	; 0x80000000
   3eed8:	adc	r0, r0, r2, lsl #23
   3eedc:	biceq	r0, r0, #1
   3eee0:	orr	r0, r0, r3
   3eee4:	bx	lr
   3eee8:	lsls	r1, r1, #1
   3eeec:	adc	r0, r0, r0
   3eef0:	tst	r0, #8388608	; 0x800000
   3eef4:	sub	r2, r2, #1
   3eef8:	bne	3eed4 <fb_value_set_visit@@Base+0x4e8>
   3eefc:	clz	ip, r0
   3ef00:	sub	ip, ip, #8
   3ef04:	subs	r2, r2, ip
   3ef08:	lsl	r0, r0, ip
   3ef0c:	addge	r0, r0, r2, lsl #23
   3ef10:	rsblt	r2, r2, #0
   3ef14:	orrge	r0, r0, r3
   3ef18:	orrlt	r0, r3, r0, lsr r2
   3ef1c:	bx	lr
   3ef20:	teq	r2, #0
   3ef24:	eor	r1, r1, #8388608	; 0x800000
   3ef28:	eoreq	r0, r0, #8388608	; 0x800000
   3ef2c:	addeq	r2, r2, #1
   3ef30:	subne	r3, r3, #1
   3ef34:	b	3ee90 <fb_value_set_visit@@Base+0x4a4>
   3ef38:	lsl	r3, r1, #1
   3ef3c:	mvns	ip, r2, asr #24
   3ef40:	mvnsne	ip, r3, asr #24
   3ef44:	beq	3ef98 <fb_value_set_visit@@Base+0x5ac>
   3ef48:	teq	r2, r3
   3ef4c:	beq	3ef5c <fb_value_set_visit@@Base+0x570>
   3ef50:	teq	r2, #0
   3ef54:	moveq	r0, r1
   3ef58:	bx	lr
   3ef5c:	teq	r0, r1
   3ef60:	movne	r0, #0
   3ef64:	bxne	lr
   3ef68:	tst	r2, #-16777216	; 0xff000000
   3ef6c:	bne	3ef7c <fb_value_set_visit@@Base+0x590>
   3ef70:	lsls	r0, r0, #1
   3ef74:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3ef78:	bx	lr
   3ef7c:	adds	r2, r2, #33554432	; 0x2000000
   3ef80:	addcc	r0, r0, #8388608	; 0x800000
   3ef84:	bxcc	lr
   3ef88:	and	r3, r0, #-2147483648	; 0x80000000
   3ef8c:	orr	r0, r3, #2130706432	; 0x7f000000
   3ef90:	orr	r0, r0, #8388608	; 0x800000
   3ef94:	bx	lr
   3ef98:	mvns	r2, r2, asr #24
   3ef9c:	movne	r0, r1
   3efa0:	mvnseq	r3, r3, asr #24
   3efa4:	movne	r1, r0
   3efa8:	lsls	r2, r0, #9
   3efac:	lslseq	r3, r1, #9
   3efb0:	teqeq	r0, r1
   3efb4:	orrne	r0, r0, #4194304	; 0x400000
   3efb8:	bx	lr
   3efbc:	mov	r3, #0
   3efc0:	b	3efcc <fb_value_set_visit@@Base+0x5e0>
   3efc4:	ands	r3, r0, #-2147483648	; 0x80000000
   3efc8:	rsbmi	r0, r0, #0
   3efcc:	movs	ip, r0
   3efd0:	bxeq	lr
   3efd4:	orr	r3, r3, #1258291200	; 0x4b000000
   3efd8:	mov	r1, r0
   3efdc:	mov	r0, #0
   3efe0:	b	3f024 <fb_value_set_visit@@Base+0x638>
   3efe4:	orrs	r2, r0, r1
   3efe8:	bxeq	lr
   3efec:	mov	r3, #0
   3eff0:	b	3f00c <fb_value_set_visit@@Base+0x620>
   3eff4:	orrs	r2, r0, r1
   3eff8:	bxeq	lr
   3effc:	ands	r3, r1, #-2147483648	; 0x80000000
   3f000:	bpl	3f00c <fb_value_set_visit@@Base+0x620>
   3f004:	rsbs	r0, r0, #0
   3f008:	rsc	r1, r1, #0
   3f00c:	movs	ip, r1
   3f010:	moveq	ip, r0
   3f014:	moveq	r1, r0
   3f018:	moveq	r0, #0
   3f01c:	orr	r3, r3, #1526726656	; 0x5b000000
   3f020:	subeq	r3, r3, #268435456	; 0x10000000
   3f024:	sub	r3, r3, #8388608	; 0x800000
   3f028:	clz	r2, ip
   3f02c:	subs	r2, r2, #8
   3f030:	sub	r3, r3, r2, lsl #23
   3f034:	blt	3f054 <fb_value_set_visit@@Base+0x668>
   3f038:	add	r3, r3, r1, lsl r2
   3f03c:	lsl	ip, r0, r2
   3f040:	rsb	r2, r2, #32
   3f044:	cmp	ip, #-2147483648	; 0x80000000
   3f048:	adc	r0, r3, r0, lsr r2
   3f04c:	biceq	r0, r0, #1
   3f050:	bx	lr
   3f054:	add	r2, r2, #32
   3f058:	lsl	ip, r1, r2
   3f05c:	rsb	r2, r2, #32
   3f060:	orrs	r0, r0, ip, lsl #1
   3f064:	adc	r0, r3, r1, lsr r2
   3f068:	biceq	r0, r0, ip, lsr #31
   3f06c:	bx	lr
   3f070:	cmp	r3, #0
   3f074:	cmpeq	r2, #0
   3f078:	bne	3f090 <fb_value_set_visit@@Base+0x6a4>
   3f07c:	cmp	r1, #0
   3f080:	cmpeq	r0, #0
   3f084:	mvnne	r1, #0
   3f088:	mvnne	r0, #0
   3f08c:	b	3f0ac <fb_value_set_visit@@Base+0x6c0>
   3f090:	sub	sp, sp, #8
   3f094:	push	{sp, lr}
   3f098:	bl	3f198 <fb_value_set_visit@@Base+0x7ac>
   3f09c:	ldr	lr, [sp, #4]
   3f0a0:	add	sp, sp, #8
   3f0a4:	pop	{r2, r3}
   3f0a8:	bx	lr
   3f0ac:	push	{r1, lr}
   3f0b0:	mov	r0, #8
   3f0b4:	bl	13e80 <raise@plt>
   3f0b8:	pop	{r1, pc}
   3f0bc:	vmov	s15, r0
   3f0c0:	vcmpe.f32	s15, #0.0
   3f0c4:	vmrs	APSR_nzcv, fpscr
   3f0c8:	bmi	3f0d0 <fb_value_set_visit@@Base+0x6e4>
   3f0cc:	b	3f118 <fb_value_set_visit@@Base+0x72c>
   3f0d0:	push	{r4, lr}
   3f0d4:	eor	r0, r0, #-2147483648	; 0x80000000
   3f0d8:	bl	3f118 <fb_value_set_visit@@Base+0x72c>
   3f0dc:	rsbs	r0, r0, #0
   3f0e0:	rsc	r1, r1, #0
   3f0e4:	pop	{r4, pc}
   3f0e8:	vmov	d7, r0, r1
   3f0ec:	vcmpe.f64	d7, #0.0
   3f0f0:	vmrs	APSR_nzcv, fpscr
   3f0f4:	bmi	3f0fc <fb_value_set_visit@@Base+0x710>
   3f0f8:	b	3f158 <fb_value_set_visit@@Base+0x76c>
   3f0fc:	push	{r4, lr}
   3f100:	eor	r1, r1, #-2147483648	; 0x80000000
   3f104:	bl	3f158 <fb_value_set_visit@@Base+0x76c>
   3f108:	rsbs	r0, r0, #0
   3f10c:	rsc	r1, r1, #0
   3f110:	pop	{r4, pc}
   3f114:	andeq	r0, r0, r0
   3f118:	vmov	s15, r0
   3f11c:	vldr	d5, [pc, #36]	; 3f148 <fb_value_set_visit@@Base+0x75c>
   3f120:	vcvt.f64.f32	d6, s15
   3f124:	vldr	d7, [pc, #36]	; 3f150 <fb_value_set_visit@@Base+0x764>
   3f128:	vmul.f64	d7, d6, d7
   3f12c:	vcvt.u32.f64	s14, d7
   3f130:	vcvt.f64.u32	d4, s14
   3f134:	vmov	r1, s14
   3f138:	vmls.f64	d6, d4, d5
   3f13c:	vcvt.u32.f64	s15, d6
   3f140:	vmov	r0, s15
   3f144:	bx	lr
   3f148:	andeq	r0, r0, r0
   3f14c:	mvnsmi	r0, r0
   3f150:	andeq	r0, r0, r0
   3f154:	ldclcc	0, cr0, [r0]
   3f158:	vmov	d6, r0, r1
   3f15c:	vldr	d7, [pc, #36]	; 3f188 <fb_value_set_visit@@Base+0x79c>
   3f160:	vldr	d5, [pc, #40]	; 3f190 <fb_value_set_visit@@Base+0x7a4>
   3f164:	vmul.f64	d7, d6, d7
   3f168:	vcvt.u32.f64	s14, d7
   3f16c:	vcvt.f64.u32	d4, s14
   3f170:	vmov	r1, s14
   3f174:	vmls.f64	d6, d4, d5
   3f178:	vcvt.u32.f64	s15, d6
   3f17c:	vmov	r0, s15
   3f180:	bx	lr
   3f184:	nop			; (mov r0, r0)
   3f188:	andeq	r0, r0, r0
   3f18c:	ldclcc	0, cr0, [r0]
   3f190:	andeq	r0, r0, r0
   3f194:	mvnsmi	r0, r0
   3f198:	cmp	r1, r3
   3f19c:	cmpeq	r0, r2
   3f1a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f1a4:	mov	r4, r0
   3f1a8:	movcc	r0, #0
   3f1ac:	mov	r5, r1
   3f1b0:	ldr	lr, [sp, #36]	; 0x24
   3f1b4:	movcc	r1, r0
   3f1b8:	bcc	3f2b4 <fb_value_set_visit@@Base+0x8c8>
   3f1bc:	cmp	r3, #0
   3f1c0:	clzeq	ip, r2
   3f1c4:	clzne	ip, r3
   3f1c8:	addeq	ip, ip, #32
   3f1cc:	cmp	r5, #0
   3f1d0:	clzeq	r1, r4
   3f1d4:	addeq	r1, r1, #32
   3f1d8:	clzne	r1, r5
   3f1dc:	sub	ip, ip, r1
   3f1e0:	sub	sl, ip, #32
   3f1e4:	lsl	r9, r3, ip
   3f1e8:	rsb	fp, ip, #32
   3f1ec:	orr	r9, r9, r2, lsl sl
   3f1f0:	orr	r9, r9, r2, lsr fp
   3f1f4:	lsl	r8, r2, ip
   3f1f8:	cmp	r5, r9
   3f1fc:	cmpeq	r4, r8
   3f200:	movcc	r0, #0
   3f204:	movcc	r1, r0
   3f208:	bcc	3f224 <fb_value_set_visit@@Base+0x838>
   3f20c:	mov	r0, #1
   3f210:	subs	r4, r4, r8
   3f214:	lsl	r1, r0, sl
   3f218:	orr	r1, r1, r0, lsr fp
   3f21c:	lsl	r0, r0, ip
   3f220:	sbc	r5, r5, r9
   3f224:	cmp	ip, #0
   3f228:	beq	3f2b4 <fb_value_set_visit@@Base+0x8c8>
   3f22c:	lsr	r6, r8, #1
   3f230:	orr	r6, r6, r9, lsl #31
   3f234:	lsr	r7, r9, #1
   3f238:	mov	r2, ip
   3f23c:	b	3f260 <fb_value_set_visit@@Base+0x874>
   3f240:	subs	r3, r4, r6
   3f244:	sbc	r8, r5, r7
   3f248:	adds	r3, r3, r3
   3f24c:	adc	r8, r8, r8
   3f250:	adds	r4, r3, #1
   3f254:	adc	r5, r8, #0
   3f258:	subs	r2, r2, #1
   3f25c:	beq	3f27c <fb_value_set_visit@@Base+0x890>
   3f260:	cmp	r5, r7
   3f264:	cmpeq	r4, r6
   3f268:	bcs	3f240 <fb_value_set_visit@@Base+0x854>
   3f26c:	adds	r4, r4, r4
   3f270:	adc	r5, r5, r5
   3f274:	subs	r2, r2, #1
   3f278:	bne	3f260 <fb_value_set_visit@@Base+0x874>
   3f27c:	lsr	r3, r4, ip
   3f280:	orr	r3, r3, r5, lsl fp
   3f284:	lsr	r2, r5, ip
   3f288:	orr	r3, r3, r5, lsr sl
   3f28c:	adds	r0, r0, r4
   3f290:	mov	r4, r3
   3f294:	lsl	r3, r2, ip
   3f298:	orr	r3, r3, r4, lsl sl
   3f29c:	lsl	ip, r4, ip
   3f2a0:	orr	r3, r3, r4, lsr fp
   3f2a4:	adc	r1, r1, r5
   3f2a8:	subs	r0, r0, ip
   3f2ac:	mov	r5, r2
   3f2b0:	sbc	r1, r1, r3
   3f2b4:	cmp	lr, #0
   3f2b8:	strdne	r4, [lr]
   3f2bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f2c0 <__libc_csu_init@@Base>:
   3f2c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f2c4:	mov	r7, r0
   3f2c8:	ldr	r6, [pc, #72]	; 3f318 <__libc_csu_init@@Base+0x58>
   3f2cc:	ldr	r5, [pc, #72]	; 3f31c <__libc_csu_init@@Base+0x5c>
   3f2d0:	add	r6, pc, r6
   3f2d4:	add	r5, pc, r5
   3f2d8:	sub	r6, r6, r5
   3f2dc:	mov	r8, r1
   3f2e0:	mov	r9, r2
   3f2e4:	bl	13e54 <calloc@plt-0x20>
   3f2e8:	asrs	r6, r6, #2
   3f2ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f2f0:	mov	r4, #0
   3f2f4:	add	r4, r4, #1
   3f2f8:	ldr	r3, [r5], #4
   3f2fc:	mov	r2, r9
   3f300:	mov	r1, r8
   3f304:	mov	r0, r7
   3f308:	blx	r3
   3f30c:	cmp	r6, r4
   3f310:	bne	3f2f4 <__libc_csu_init@@Base+0x34>
   3f314:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f318:	andeq	fp, r2, ip, lsl #24
   3f31c:	andeq	fp, r2, r4, lsl #24

0003f320 <__libc_csu_fini@@Base>:
   3f320:	bx	lr

Disassembly of section .fini:

0003f324 <.fini>:
   3f324:	push	{r3, lr}
   3f328:	pop	{r3, pc}
