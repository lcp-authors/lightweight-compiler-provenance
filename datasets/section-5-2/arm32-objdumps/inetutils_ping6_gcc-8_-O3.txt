
../repos/inetutils/ping/ping6:     file format elf32-littlearm


Disassembly of section .init:

00011090 <.init>:
   11090:	push	{r3, lr}
   11094:	bl	11834 <__assert_fail@plt+0x430>
   11098:	pop	{r3, pc}

Disassembly of section .plt:

0001109c <calloc@plt-0x14>:
   1109c:	push	{lr}		; (str lr, [sp, #-4]!)
   110a0:	ldr	lr, [pc, #4]	; 110ac <calloc@plt-0x4>
   110a4:	add	lr, pc, lr
   110a8:	ldr	pc, [lr, #8]!
   110ac:	andeq	ip, r1, r4, asr pc

000110b0 <calloc@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #28, 20	; 0x1c000
   110b8:	ldr	pc, [ip, #3924]!	; 0xf54

000110bc <fputs_unlocked@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #28, 20	; 0x1c000
   110c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c8 <setbuf@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #28, 20	; 0x1c000
   110d0:	ldr	pc, [ip, #3908]!	; 0xf44

000110d4 <strcmp@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #28, 20	; 0x1c000
   110dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e0 <strtol@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #28, 20	; 0x1c000
   110e8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ec <setsockopt@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #28, 20	; 0x1c000
   110f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #28, 20	; 0x1c000
   11100:	ldr	pc, [ip, #3876]!	; 0xf24

00011104 <fflush@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #28, 20	; 0x1c000
   1110c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011110 <getuid@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #28, 20	; 0x1c000
   11118:	ldr	pc, [ip, #3860]!	; 0xf14

0001111c <memmove@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #28, 20	; 0x1c000
   11124:	ldr	pc, [ip, #3852]!	; 0xf0c

00011128 <strchrnul@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #28, 20	; 0x1c000
   11130:	ldr	pc, [ip, #3844]!	; 0xf04

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #28, 20	; 0x1c000
   1113c:	ldr	pc, [ip, #3836]!	; 0xefc

00011140 <gai_strerror@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #28, 20	; 0x1c000
   11148:	ldr	pc, [ip, #3828]!	; 0xef4

0001114c <strndup@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #28, 20	; 0x1c000
   11154:	ldr	pc, [ip, #3820]!	; 0xeec

00011158 <memcpy@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #28, 20	; 0x1c000
   11160:	ldr	pc, [ip, #3812]!	; 0xee4

00011164 <signal@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #28, 20	; 0x1c000
   1116c:	ldr	pc, [ip, #3804]!	; 0xedc

00011170 <fwrite_unlocked@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #28, 20	; 0x1c000
   11178:	ldr	pc, [ip, #3796]!	; 0xed4

0001117c <inet_ntoa@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #28, 20	; 0x1c000
   11184:	ldr	pc, [ip, #3788]!	; 0xecc

00011188 <select@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #28, 20	; 0x1c000
   11190:	ldr	pc, [ip, #3780]!	; 0xec4

00011194 <sleep@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #28, 20	; 0x1c000
   1119c:	ldr	pc, [ip, #3772]!	; 0xebc

000111a0 <gethostbyaddr@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #28, 20	; 0x1c000
   111a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111ac <strdup@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #28, 20	; 0x1c000
   111b4:	ldr	pc, [ip, #3756]!	; 0xeac

000111b8 <realloc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #28, 20	; 0x1c000
   111c0:	ldr	pc, [ip, #3748]!	; 0xea4

000111c4 <strcasecmp@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #28, 20	; 0x1c000
   111cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d0 <funlockfile@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #28, 20	; 0x1c000
   111d8:	ldr	pc, [ip, #3732]!	; 0xe94

000111dc <fwrite@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #28, 20	; 0x1c000
   111e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e8 <gettimeofday@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #28, 20	; 0x1c000
   111f0:	ldr	pc, [ip, #3716]!	; 0xe84

000111f4 <error@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #28, 20	; 0x1c000
   111fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00011200 <getenv@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #28, 20	; 0x1c000
   11208:	ldr	pc, [ip, #3700]!	; 0xe74

0001120c <puts@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #28, 20	; 0x1c000
   11214:	ldr	pc, [ip, #3692]!	; 0xe6c

00011218 <malloc@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #28, 20	; 0x1c000
   11220:	ldr	pc, [ip, #3684]!	; 0xe64

00011224 <__libc_start_main@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #28, 20	; 0x1c000
   1122c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011230 <strerror@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #28, 20	; 0x1c000
   11238:	ldr	pc, [ip, #3668]!	; 0xe54

0001123c <__ctype_tolower_loc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #28, 20	; 0x1c000
   11244:	ldr	pc, [ip, #3660]!	; 0xe4c

00011248 <__gmon_start__@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #28, 20	; 0x1c000
   11250:	ldr	pc, [ip, #3652]!	; 0xe44

00011254 <mempcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #28, 20	; 0x1c000
   1125c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011260 <__ctype_b_loc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #28, 20	; 0x1c000
   11268:	ldr	pc, [ip, #3636]!	; 0xe34

0001126c <getpid@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #28, 20	; 0x1c000
   11274:	ldr	pc, [ip, #3628]!	; 0xe2c

00011278 <exit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #28, 20	; 0x1c000
   11280:	ldr	pc, [ip, #3620]!	; 0xe24

00011284 <strtoul@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #28, 20	; 0x1c000
   1128c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011290 <strlen@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #28, 20	; 0x1c000
   11298:	ldr	pc, [ip, #3604]!	; 0xe14

0001129c <strchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #28, 20	; 0x1c000
   112a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a8 <fprintf@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #28, 20	; 0x1c000
   112b0:	ldr	pc, [ip, #3588]!	; 0xe04

000112b4 <__errno_location@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #28, 20	; 0x1c000
   112bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c0 <snprintf@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #28, 20	; 0x1c000
   112c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112cc <strerror_r@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #28, 20	; 0x1c000
   112d4:	ldr	pc, [ip, #3564]!	; 0xdec

000112d8 <setvbuf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #28, 20	; 0x1c000
   112e0:	ldr	pc, [ip, #3556]!	; 0xde4

000112e4 <memset@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #28, 20	; 0x1c000
   112ec:	ldr	pc, [ip, #3548]!	; 0xddc

000112f0 <putchar@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #28, 20	; 0x1c000
   112f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112fc <memchr@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #28, 20	; 0x1c000
   11304:	ldr	pc, [ip, #3532]!	; 0xdcc

00011308 <sendto@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #28, 20	; 0x1c000
   11310:	ldr	pc, [ip, #3524]!	; 0xdc4

00011314 <__overflow@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #28, 20	; 0x1c000
   1131c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011320 <setlocale@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #28, 20	; 0x1c000
   11328:	ldr	pc, [ip, #3508]!	; 0xdb4

0001132c <getnameinfo@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #28, 20	; 0x1c000
   11334:	ldr	pc, [ip, #3500]!	; 0xdac

00011338 <strrchr@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #28, 20	; 0x1c000
   11340:	ldr	pc, [ip, #3492]!	; 0xda4

00011344 <vfprintf@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #28, 20	; 0x1c000
   1134c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011350 <fputc@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #28, 20	; 0x1c000
   11358:	ldr	pc, [ip, #3476]!	; 0xd94

0001135c <setuid@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #28, 20	; 0x1c000
   11364:	ldr	pc, [ip, #3468]!	; 0xd8c

00011368 <sscanf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #28, 20	; 0x1c000
   11370:	ldr	pc, [ip, #3460]!	; 0xd84

00011374 <putc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #28, 20	; 0x1c000
   1137c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011380 <flockfile@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #28, 20	; 0x1c000
   11388:	ldr	pc, [ip, #3444]!	; 0xd74

0001138c <vsnprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #28, 20	; 0x1c000
   11394:	ldr	pc, [ip, #3436]!	; 0xd6c

00011398 <recvmsg@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #28, 20	; 0x1c000
   113a0:	ldr	pc, [ip, #3428]!	; 0xd64

000113a4 <qsort@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #28, 20	; 0x1c000
   113ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000113b0 <freeaddrinfo@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #28, 20	; 0x1c000
   113b8:	ldr	pc, [ip, #3412]!	; 0xd54

000113bc <getaddrinfo@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #28, 20	; 0x1c000
   113c4:	ldr	pc, [ip, #3404]!	; 0xd4c

000113c8 <inet_ntop@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #28, 20	; 0x1c000
   113d0:	ldr	pc, [ip, #3396]!	; 0xd44

000113d4 <socket@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #28, 20	; 0x1c000
   113dc:	ldr	pc, [ip, #3388]!	; 0xd3c

000113e0 <strncmp@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #28, 20	; 0x1c000
   113e8:	ldr	pc, [ip, #3380]!	; 0xd34

000113ec <abort@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #28, 20	; 0x1c000
   113f4:	ldr	pc, [ip, #3372]!	; 0xd2c

000113f8 <close@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #28, 20	; 0x1c000
   11400:	ldr	pc, [ip, #3364]!	; 0xd24

00011404 <__assert_fail@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #28, 20	; 0x1c000
   1140c:	ldr	pc, [ip, #3356]!	; 0xd1c

Disassembly of section .text:

00011410 <argp_failure@@Base-0x4880>:
   11410:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11414:	movw	r5, #58340	; 0xe3e4
   11418:	movt	r5, #2
   1141c:	strd	r6, [sp, #8]
   11420:	movw	r7, #57656	; 0xe138
   11424:	movt	r7, #2
   11428:	strd	r8, [sp, #16]
   1142c:	mov	r8, r0
   11430:	mov	r4, #0
   11434:	strd	sl, [sp, #24]
   11438:	mov	sl, r1
   1143c:	mov	r9, #1
   11440:	str	lr, [sp, #32]
   11444:	sub	sp, sp, #60	; 0x3c
   11448:	ldr	r0, [r1]
   1144c:	bl	18e00 <argp_parse@@Base+0x1164>
   11450:	movw	r1, #53636	; 0xd184
   11454:	movt	r1, #1
   11458:	mov	r0, #6
   1145c:	bl	11320 <setlocale@plt>
   11460:	bl	11110 <getuid@plt>
   11464:	cmp	r0, #0
   11468:	movw	r2, #49656	; 0xc1f8
   1146c:	movt	r2, #1
   11470:	moveq	r3, #1
   11474:	add	r1, r7, #128	; 0x80
   11478:	movw	r0, #49680	; 0xc210
   1147c:	movt	r0, #1
   11480:	strbeq	r3, [r5, #8]
   11484:	movw	r3, #58456	; 0xe458
   11488:	movt	r3, #2
   1148c:	str	r2, [r3]
   11490:	bl	18bdc <argp_parse@@Base+0xf40>
   11494:	add	ip, sp, #16
   11498:	mov	r3, r4
   1149c:	mov	r2, sl
   114a0:	mov	r1, r8
   114a4:	add	r0, r7, #136	; 0x88
   114a8:	str	ip, [sp]
   114ac:	str	r4, [sp, #4]
   114b0:	bl	17c9c <argp_parse@@Base>
   114b4:	bl	1126c <getpid@plt>
   114b8:	mov	r2, #58	; 0x3a
   114bc:	mov	r1, #3
   114c0:	str	r0, [sp, #12]
   114c4:	mov	r0, #10
   114c8:	str	r9, [sp, #20]
   114cc:	bl	113d4 <socket@plt>
   114d0:	subs	fp, r0, #0
   114d4:	blt	11788 <__assert_fail@plt+0x384>
   114d8:	mov	r3, #32
   114dc:	mvn	r1, #0
   114e0:	bic	lr, r1, #2
   114e4:	mov	r2, r9
   114e8:	str	r3, [sp]
   114ec:	bic	r3, r1, #30
   114f0:	str	r3, [sp, #24]
   114f4:	add	r3, sp, #24
   114f8:	str	r1, [sp, #28]
   114fc:	str	r1, [sp, #32]
   11500:	str	r1, [sp, #36]	; 0x24
   11504:	str	r1, [sp, #44]	; 0x2c
   11508:	str	r1, [sp, #48]	; 0x30
   1150c:	str	r1, [sp, #52]	; 0x34
   11510:	mov	r1, #58	; 0x3a
   11514:	str	lr, [sp, #40]	; 0x28
   11518:	bl	110ec <setsockopt@plt>
   1151c:	subs	r6, r0, #0
   11520:	bne	117d4 <__assert_fail@plt+0x3d0>
   11524:	mov	ip, #4
   11528:	add	r3, sp, #20
   1152c:	mov	r2, #51	; 0x33
   11530:	mov	r1, #41	; 0x29
   11534:	mov	r0, fp
   11538:	str	ip, [sp]
   1153c:	bl	110ec <setsockopt@plt>
   11540:	subs	r4, r0, #0
   11544:	bne	117c4 <__assert_fail@plt+0x3c0>
   11548:	mov	r0, #124	; 0x7c
   1154c:	bl	1a0c0 <argp_parse@@Base+0x2424>
   11550:	subs	r6, r0, #0
   11554:	beq	117c4 <__assert_fail@plt+0x3c0>
   11558:	mov	r2, #120	; 0x78
   1155c:	mov	r1, r4
   11560:	add	r0, r6, #4
   11564:	bl	112e4 <memset@plt>
   11568:	ldrh	r3, [sp, #12]
   1156c:	mov	ip, #8
   11570:	mov	r2, #128	; 0x80
   11574:	mov	r0, #1000	; 0x3e8
   11578:	mov	r1, r4
   1157c:	str	fp, [r6]
   11580:	str	r4, [r6, #8]
   11584:	str	r0, [r6, #20]
   11588:	add	r0, r6, #12
   1158c:	str	ip, [r6, #56]	; 0x38
   11590:	str	r3, [r6, #60]	; 0x3c
   11594:	str	r2, [r6, #72]	; 0x48
   11598:	bl	111e8 <gettimeofday@plt>
   1159c:	mov	r1, #4
   115a0:	add	r3, r7, #164	; 0xa4
   115a4:	str	r6, [r5, #36]	; 0x24
   115a8:	mov	r2, #6
   115ac:	str	r1, [sp]
   115b0:	mov	r1, r9
   115b4:	ldr	r0, [r6]
   115b8:	bl	110ec <setsockopt@plt>
   115bc:	bl	11110 <getuid@plt>
   115c0:	bl	1135c <setuid@plt>
   115c4:	cmp	r0, #0
   115c8:	bne	1176c <__assert_fail@plt+0x368>
   115cc:	mov	r3, #0
   115d0:	movw	r1, #58332	; 0xe3dc
   115d4:	movt	r1, #2
   115d8:	mov	r2, #1
   115dc:	ldr	r0, [r1]
   115e0:	mov	r1, r3
   115e4:	bl	112d8 <setvbuf@plt>
   115e8:	ldr	r1, [r5, #4]
   115ec:	ldr	r3, [sp, #16]
   115f0:	cmp	r1, #0
   115f4:	sub	r8, r8, r3
   115f8:	add	sl, sl, r3, lsl #2
   115fc:	bne	11760 <__assert_fail@plt+0x35c>
   11600:	movw	r3, #58448	; 0xe450
   11604:	movt	r3, #2
   11608:	ldr	r1, [r3]
   1160c:	cmp	r1, #0
   11610:	bne	1174c <__assert_fail@plt+0x348>
   11614:	movw	r6, #58444	; 0xe44c
   11618:	movt	r6, #2
   1161c:	ldr	r3, [r6]
   11620:	tst	r3, #2
   11624:	bne	11734 <__assert_fail@plt+0x330>
   11628:	ldr	r3, [r5, #32]
   1162c:	cmp	r3, #0
   11630:	bgt	116ac <__assert_fail@plt+0x2a8>
   11634:	ldr	r3, [r6]
   11638:	tst	r3, #256	; 0x100
   1163c:	bne	116f0 <__assert_fail@plt+0x2ec>
   11640:	movw	r3, #58436	; 0xe444
   11644:	movt	r3, #2
   11648:	ldr	r1, [r7]
   1164c:	sub	r6, r8, #1
   11650:	ldr	r0, [r3]
   11654:	bl	12d9c <__assert_fail@plt+0x1998>
   11658:	cmp	r8, #0
   1165c:	beq	117e4 <__assert_fail@plt+0x3e0>
   11660:	mov	r7, #0
   11664:	ldr	r0, [sl], #4
   11668:	sub	r6, r6, #1
   1166c:	bl	122ec <__assert_fail@plt+0xee8>
   11670:	ldr	r3, [r5, #36]	; 0x24
   11674:	cmn	r6, #1
   11678:	orr	r4, r4, r0
   1167c:	str	r7, [r3, #112]	; 0x70
   11680:	str	r7, [r3, #116]	; 0x74
   11684:	str	r7, [r3, #120]	; 0x78
   11688:	bne	11664 <__assert_fail@plt+0x260>
   1168c:	mov	r0, r4
   11690:	add	sp, sp, #60	; 0x3c
   11694:	ldrd	r4, [sp]
   11698:	ldrd	r6, [sp, #8]
   1169c:	ldrd	r8, [sp, #16]
   116a0:	ldrd	sl, [sp, #24]
   116a4:	add	sp, sp, #32
   116a8:	pop	{pc}		; (ldr pc, [sp], #4)
   116ac:	ldr	r0, [r5, #36]	; 0x24
   116b0:	mov	r3, #4
   116b4:	mov	r2, #16
   116b8:	mov	r1, #41	; 0x29
   116bc:	str	r3, [sp]
   116c0:	ldr	r3, [pc, #292]	; 117ec <__assert_fail@plt+0x3e8>
   116c4:	ldr	r0, [r0]
   116c8:	bl	110ec <setsockopt@plt>
   116cc:	cmp	r0, #0
   116d0:	bge	11634 <__assert_fail@plt+0x230>
   116d4:	bl	112b4 <__errno_location@plt>
   116d8:	movw	r2, #49708	; 0xc22c
   116dc:	movt	r2, #1
   116e0:	ldr	r1, [r0]
   116e4:	mov	r0, #0
   116e8:	bl	111f4 <error@plt>
   116ec:	b	11634 <__assert_fail@plt+0x230>
   116f0:	ldr	r0, [r5, #36]	; 0x24
   116f4:	mov	r3, #4
   116f8:	mov	r2, #67	; 0x43
   116fc:	mov	r1, #41	; 0x29
   11700:	str	r3, [sp]
   11704:	ldr	r3, [pc, #228]	; 117f0 <__assert_fail@plt+0x3ec>
   11708:	ldr	r0, [r0]
   1170c:	bl	110ec <setsockopt@plt>
   11710:	cmp	r0, #0
   11714:	bge	11640 <__assert_fail@plt+0x23c>
   11718:	bl	112b4 <__errno_location@plt>
   1171c:	movw	r2, #49736	; 0xc248
   11720:	movt	r2, #1
   11724:	ldr	r1, [r0]
   11728:	mov	r0, #1
   1172c:	bl	111f4 <error@plt>
   11730:	b	11640 <__assert_fail@plt+0x23c>
   11734:	movw	r3, #58452	; 0xe454
   11738:	movt	r3, #2
   1173c:	ldr	r0, [r5, #36]	; 0x24
   11740:	ldr	r1, [r3]
   11744:	bl	131f0 <__assert_fail@plt+0x1dec>
   11748:	b	11628 <__assert_fail@plt+0x224>
   1174c:	mov	r3, #4
   11750:	ldr	r2, [pc, #156]	; 117f4 <__assert_fail@plt+0x3f0>
   11754:	ldr	r0, [r5, #36]	; 0x24
   11758:	bl	131c4 <__assert_fail@plt+0x1dc0>
   1175c:	b	11614 <__assert_fail@plt+0x210>
   11760:	ldr	r0, [r5, #36]	; 0x24
   11764:	bl	131bc <__assert_fail@plt+0x1db8>
   11768:	b	11600 <__assert_fail@plt+0x1fc>
   1176c:	bl	112b4 <__errno_location@plt>
   11770:	movw	r2, #49700	; 0xc224
   11774:	movt	r2, #1
   11778:	ldr	r1, [r0]
   1177c:	mov	r0, r9
   11780:	bl	111f4 <error@plt>
   11784:	b	115cc <__assert_fail@plt+0x1c8>
   11788:	bl	112b4 <__errno_location@plt>
   1178c:	ldr	r1, [r0]
   11790:	cmp	r1, #13
   11794:	cmpne	r1, r9
   11798:	movne	r3, #0
   1179c:	moveq	r3, #1
   117a0:	strne	r3, [r5, #36]	; 0x24
   117a4:	bne	117bc <__assert_fail@plt+0x3b8>
   117a8:	mov	r0, r9
   117ac:	movw	r2, #49688	; 0xc218
   117b0:	movt	r2, #1
   117b4:	bl	111f4 <error@plt>
   117b8:	str	r4, [r5, #36]	; 0x24
   117bc:	mov	r0, #1
   117c0:	bl	11278 <exit@plt>
   117c4:	mov	r0, fp
   117c8:	bl	113f8 <close@plt>
   117cc:	str	r6, [r5, #36]	; 0x24
   117d0:	b	117bc <__assert_fail@plt+0x3b8>
   117d4:	mov	r0, fp
   117d8:	bl	113f8 <close@plt>
   117dc:	str	r4, [r5, #36]	; 0x24
   117e0:	b	117bc <__assert_fail@plt+0x3b8>
   117e4:	mov	r4, r8
   117e8:	b	1168c <__assert_fail@plt+0x288>
   117ec:	andeq	lr, r2, r4, lsl #8
   117f0:	andeq	lr, r2, r0, asr #2
   117f4:	ldrdeq	lr, [r2], -ip
   117f8:	mov	fp, #0
   117fc:	mov	lr, #0
   11800:	pop	{r1}		; (ldr r1, [sp], #4)
   11804:	mov	r2, sp
   11808:	push	{r2}		; (str r2, [sp, #-4]!)
   1180c:	push	{r0}		; (str r0, [sp, #-4]!)
   11810:	ldr	ip, [pc, #16]	; 11828 <__assert_fail@plt+0x424>
   11814:	push	{ip}		; (str ip, [sp, #-4]!)
   11818:	ldr	r0, [pc, #12]	; 1182c <__assert_fail@plt+0x428>
   1181c:	ldr	r3, [pc, #12]	; 11830 <__assert_fail@plt+0x42c>
   11820:	bl	11224 <__libc_start_main@plt>
   11824:	bl	113ec <abort@plt>
   11828:	andeq	fp, r1, r4, lsr #27
   1182c:	andeq	r1, r1, r0, lsl r4
   11830:	andeq	fp, r1, r4, asr #26
   11834:	ldr	r3, [pc, #20]	; 11850 <__assert_fail@plt+0x44c>
   11838:	ldr	r2, [pc, #20]	; 11854 <__assert_fail@plt+0x450>
   1183c:	add	r3, pc, r3
   11840:	ldr	r2, [r3, r2]
   11844:	cmp	r2, #0
   11848:	bxeq	lr
   1184c:	b	11248 <__gmon_start__@plt>
   11850:			; <UNDEFINED> instruction: 0x0001c7bc
   11854:	andeq	r0, r0, ip, lsr #2
   11858:	ldr	r0, [pc, #24]	; 11878 <__assert_fail@plt+0x474>
   1185c:	ldr	r3, [pc, #24]	; 1187c <__assert_fail@plt+0x478>
   11860:	cmp	r3, r0
   11864:	bxeq	lr
   11868:	ldr	r3, [pc, #16]	; 11880 <__assert_fail@plt+0x47c>
   1186c:	cmp	r3, #0
   11870:	bxeq	lr
   11874:	bx	r3
   11878:	andeq	lr, r2, ip, asr #7
   1187c:	andeq	lr, r2, ip, asr #7
   11880:	andeq	r0, r0, r0
   11884:	ldr	r0, [pc, #36]	; 118b0 <__assert_fail@plt+0x4ac>
   11888:	ldr	r1, [pc, #36]	; 118b4 <__assert_fail@plt+0x4b0>
   1188c:	sub	r1, r1, r0
   11890:	asr	r1, r1, #2
   11894:	add	r1, r1, r1, lsr #31
   11898:	asrs	r1, r1, #1
   1189c:	bxeq	lr
   118a0:	ldr	r3, [pc, #16]	; 118b8 <__assert_fail@plt+0x4b4>
   118a4:	cmp	r3, #0
   118a8:	bxeq	lr
   118ac:	bx	r3
   118b0:	andeq	lr, r2, ip, asr #7
   118b4:	andeq	lr, r2, ip, asr #7
   118b8:	andeq	r0, r0, r0
   118bc:	push	{r4, lr}
   118c0:	ldr	r4, [pc, #24]	; 118e0 <__assert_fail@plt+0x4dc>
   118c4:	ldrb	r3, [r4]
   118c8:	cmp	r3, #0
   118cc:	popne	{r4, pc}
   118d0:	bl	11858 <__assert_fail@plt+0x454>
   118d4:	mov	r3, #1
   118d8:	strb	r3, [r4]
   118dc:	pop	{r4, pc}
   118e0:	andeq	lr, r2, r0, ror #7
   118e4:	b	11884 <__assert_fail@plt+0x480>
   118e8:	movw	r3, #58340	; 0xe3e4
   118ec:	movt	r3, #2
   118f0:	mov	r2, #1
   118f4:	str	r2, [r3]
   118f8:	bx	lr
   118fc:	cmp	r0, #112	; 0x70
   11900:	strd	r4, [sp, #-12]!
   11904:	mov	r4, r1
   11908:	str	lr, [sp, #8]
   1190c:	sub	sp, sp, #12
   11910:	beq	11ae4 <__assert_fail@plt+0x6e0>
   11914:	bgt	11974 <__assert_fail@plt+0x570>
   11918:	cmp	r0, #102	; 0x66
   1191c:	beq	11ba4 <__assert_fail@plt+0x7a0>
   11920:	bgt	119f0 <__assert_fail@plt+0x5ec>
   11924:	cmp	r0, #99	; 0x63
   11928:	beq	11b48 <__assert_fail@plt+0x744>
   1192c:	cmp	r0, #100	; 0x64
   11930:	beq	11b10 <__assert_fail@plt+0x70c>
   11934:	cmp	r0, #84	; 0x54
   11938:	bne	119a0 <__assert_fail@plt+0x59c>
   1193c:	movw	r3, #58444	; 0xe44c
   11940:	movt	r3, #2
   11944:	ldr	ip, [r3]
   11948:	mov	r2, #0
   1194c:	mov	r0, r1
   11950:	mov	r1, r2
   11954:	orr	ip, ip, #256	; 0x100
   11958:	str	ip, [r3]
   1195c:	bl	12ce0 <__assert_fail@plt+0x18dc>
   11960:	movw	r2, #57656	; 0xe138
   11964:	movt	r2, #2
   11968:	mov	r3, #0
   1196c:	str	r0, [r2, #8]
   11970:	b	119a4 <__assert_fail@plt+0x5a0>
   11974:	cmp	r0, #118	; 0x76
   11978:	beq	11a6c <__assert_fail@plt+0x668>
   1197c:	ble	119b8 <__assert_fail@plt+0x5b4>
   11980:	cmp	r0, #256	; 0x100
   11984:	beq	11a88 <__assert_fail@plt+0x684>
   11988:	mov	r1, #2
   1198c:	movt	r1, #256	; 0x100
   11990:	cmp	r0, r1
   11994:	beq	11aac <__assert_fail@plt+0x6a8>
   11998:	cmp	r0, #119	; 0x77
   1199c:	beq	11ac0 <__assert_fail@plt+0x6bc>
   119a0:	mov	r3, #7
   119a4:	mov	r0, r3
   119a8:	add	sp, sp, #12
   119ac:	ldrd	r4, [sp]
   119b0:	add	sp, sp, #8
   119b4:	pop	{pc}		; (ldr pc, [sp], #4)
   119b8:	cmp	r0, #114	; 0x72
   119bc:	beq	11b6c <__assert_fail@plt+0x768>
   119c0:	blt	11b88 <__assert_fail@plt+0x784>
   119c4:	cmp	r0, #115	; 0x73
   119c8:	bne	119a0 <__assert_fail@plt+0x59c>
   119cc:	mov	r0, r1
   119d0:	mov	r2, #1
   119d4:	movw	r1, #65527	; 0xfff7
   119d8:	bl	12ce0 <__assert_fail@plt+0x18dc>
   119dc:	movw	r2, #57656	; 0xe138
   119e0:	movt	r2, #2
   119e4:	mov	r3, #0
   119e8:	str	r0, [r2, #4]
   119ec:	b	119a4 <__assert_fail@plt+0x5a0>
   119f0:	cmp	r0, #108	; 0x6c
   119f4:	beq	11be8 <__assert_fail@plt+0x7e4>
   119f8:	cmp	r0, #110	; 0x6e
   119fc:	beq	11b2c <__assert_fail@plt+0x728>
   11a00:	cmp	r0, #105	; 0x69
   11a04:	bne	119a0 <__assert_fail@plt+0x59c>
   11a08:	movw	r3, #58444	; 0xe44c
   11a0c:	movt	r3, #2
   11a10:	ldr	ip, [r3]
   11a14:	mov	r2, #0
   11a18:	mov	r0, r1
   11a1c:	mov	r1, r2
   11a20:	orr	ip, ip, #2
   11a24:	str	ip, [r3]
   11a28:	bl	12ce0 <__assert_fail@plt+0x18dc>
   11a2c:	movw	r3, #58340	; 0xe3e4
   11a30:	movt	r3, #2
   11a34:	ldrb	r3, [r3, #8]
   11a38:	mov	r2, #1000	; 0x3e8
   11a3c:	movw	r1, #58452	; 0xe454
   11a40:	movt	r1, #2
   11a44:	mul	r0, r2, r0
   11a48:	eor	r3, r3, #1
   11a4c:	str	r0, [r1]
   11a50:	cmp	r0, #199	; 0xc7
   11a54:	movhi	r3, #0
   11a58:	andls	r3, r3, #1
   11a5c:	cmp	r3, #0
   11a60:	bne	11c6c <__assert_fail@plt+0x868>
   11a64:	mov	r3, #0
   11a68:	b	119a4 <__assert_fail@plt+0x5a0>
   11a6c:	movw	r2, #58444	; 0xe44c
   11a70:	movt	r2, #2
   11a74:	ldr	r1, [r2]
   11a78:	mov	r3, #0
   11a7c:	orr	r1, r1, #32
   11a80:	str	r1, [r2]
   11a84:	b	119a4 <__assert_fail@plt+0x5a0>
   11a88:	mov	r0, r1
   11a8c:	mov	r2, #0
   11a90:	mov	r1, #255	; 0xff
   11a94:	bl	12ce0 <__assert_fail@plt+0x18dc>
   11a98:	movw	r2, #58340	; 0xe3e4
   11a9c:	movt	r2, #2
   11aa0:	mov	r3, #0
   11aa4:	str	r0, [r2, #32]
   11aa8:	b	119a4 <__assert_fail@plt+0x5a0>
   11aac:	mov	r0, r2
   11ab0:	movw	r1, #48808	; 0xbea8
   11ab4:	movt	r1, #1
   11ab8:	bl	17588 <argp_error@@Base>
   11abc:	b	119a0 <__assert_fail@plt+0x59c>
   11ac0:	mov	r2, #0
   11ac4:	mov	r0, r4
   11ac8:	mvn	r1, #-2147483648	; 0x80000000
   11acc:	bl	12ce0 <__assert_fail@plt+0x18dc>
   11ad0:	movw	r2, #57656	; 0xe138
   11ad4:	movt	r2, #2
   11ad8:	mov	r3, #0
   11adc:	str	r0, [r2, #12]
   11ae0:	b	119a4 <__assert_fail@plt+0x5a0>
   11ae4:	ldr	r5, [pc, #412]	; 11c88 <__assert_fail@plt+0x884>
   11ae8:	mov	r0, r1
   11aec:	movw	r1, #57656	; 0xe138
   11af0:	movt	r1, #2
   11af4:	mov	r2, r5
   11af8:	bl	12e7c <__assert_fail@plt+0x1a78>
   11afc:	movw	r2, #58436	; 0xe444
   11b00:	movt	r2, #2
   11b04:	mov	r3, #0
   11b08:	str	r5, [r2]
   11b0c:	b	119a4 <__assert_fail@plt+0x5a0>
   11b10:	movw	r2, #58448	; 0xe450
   11b14:	movt	r2, #2
   11b18:	ldr	r1, [r2]
   11b1c:	mov	r3, #0
   11b20:	orr	r1, r1, #1
   11b24:	str	r1, [r2]
   11b28:	b	119a4 <__assert_fail@plt+0x5a0>
   11b2c:	movw	r2, #58444	; 0xe44c
   11b30:	movt	r2, #2
   11b34:	ldr	r1, [r2]
   11b38:	mov	r3, #0
   11b3c:	orr	r1, r1, #4
   11b40:	str	r1, [r2]
   11b44:	b	119a4 <__assert_fail@plt+0x5a0>
   11b48:	mov	r2, #0
   11b4c:	mov	r0, r1
   11b50:	mov	r1, r2
   11b54:	bl	12ce0 <__assert_fail@plt+0x18dc>
   11b58:	movw	r2, #58340	; 0xe3e4
   11b5c:	movt	r2, #2
   11b60:	mov	r3, #0
   11b64:	str	r0, [r2, #4]
   11b68:	b	119a4 <__assert_fail@plt+0x5a0>
   11b6c:	movw	r2, #58448	; 0xe450
   11b70:	movt	r2, #2
   11b74:	ldr	r1, [r2]
   11b78:	mov	r3, #0
   11b7c:	orr	r1, r1, #5
   11b80:	str	r1, [r2]
   11b84:	b	119a4 <__assert_fail@plt+0x5a0>
   11b88:	movw	r2, #58444	; 0xe44c
   11b8c:	movt	r2, #2
   11b90:	ldr	r1, [r2]
   11b94:	mov	r3, #0
   11b98:	orr	r1, r1, #8
   11b9c:	str	r1, [r2]
   11ba0:	b	119a4 <__assert_fail@plt+0x5a0>
   11ba4:	movw	r3, #58340	; 0xe3e4
   11ba8:	movt	r3, #2
   11bac:	ldrb	r1, [r3, #8]
   11bb0:	cmp	r1, #0
   11bb4:	beq	11c58 <__assert_fail@plt+0x854>
   11bb8:	movw	r3, #58444	; 0xe44c
   11bbc:	movt	r3, #2
   11bc0:	ldr	r2, [r3]
   11bc4:	movw	r0, #58332	; 0xe3dc
   11bc8:	movt	r0, #2
   11bcc:	mov	r1, #0
   11bd0:	ldr	r0, [r0]
   11bd4:	orr	r2, r2, #1
   11bd8:	str	r2, [r3]
   11bdc:	bl	110c8 <setbuf@plt>
   11be0:	mov	r3, #0
   11be4:	b	119a4 <__assert_fail@plt+0x5a0>
   11be8:	movw	r5, #58340	; 0xe3e4
   11bec:	movt	r5, #2
   11bf0:	ldrb	r1, [r5, #8]
   11bf4:	cmp	r1, #0
   11bf8:	beq	11c44 <__assert_fail@plt+0x840>
   11bfc:	mov	r0, r4
   11c00:	mov	r2, #0
   11c04:	add	r1, sp, #4
   11c08:	bl	11284 <strtoul@plt>
   11c0c:	ldr	r3, [sp, #4]
   11c10:	str	r0, [r5, #12]
   11c14:	ldrb	r3, [r3]
   11c18:	cmp	r3, #0
   11c1c:	bne	11c28 <__assert_fail@plt+0x824>
   11c20:	cmp	r0, #0
   11c24:	bge	11a64 <__assert_fail@plt+0x660>
   11c28:	movw	r2, #48784	; 0xbe90
   11c2c:	movt	r2, #1
   11c30:	mov	r1, #0
   11c34:	mov	r0, #1
   11c38:	bl	111f4 <error@plt>
   11c3c:	mov	r3, #0
   11c40:	b	119a4 <__assert_fail@plt+0x5a0>
   11c44:	movw	r2, #48752	; 0xbe70
   11c48:	movt	r2, #1
   11c4c:	mov	r0, #1
   11c50:	bl	111f4 <error@plt>
   11c54:	b	11bfc <__assert_fail@plt+0x7f8>
   11c58:	movw	r2, #48692	; 0xbe34
   11c5c:	movt	r2, #1
   11c60:	mov	r0, #1
   11c64:	bl	111f4 <error@plt>
   11c68:	b	11bb8 <__assert_fail@plt+0x7b4>
   11c6c:	mov	r3, r4
   11c70:	movw	r2, #48724	; 0xbe54
   11c74:	movt	r2, #1
   11c78:	mov	r1, #0
   11c7c:	mov	r0, #1
   11c80:	bl	111f4 <error@plt>
   11c84:	b	11a64 <__assert_fail@plt+0x660>
   11c88:	strdeq	lr, [r2], -r4
   11c8c:	ldr	r1, [r0, #4]
   11c90:	movw	r0, #48832	; 0xbec0
   11c94:	movt	r0, #1
   11c98:	b	110f8 <printf@plt>
   11c9c:	movw	r3, #58332	; 0xe3dc
   11ca0:	movt	r3, #2
   11ca4:	str	r4, [sp, #-24]!	; 0xffffffe8
   11ca8:	movw	r4, #58340	; 0xe3e4
   11cac:	movt	r4, #2
   11cb0:	ldr	r0, [r3]
   11cb4:	strd	r6, [sp, #4]
   11cb8:	strd	r8, [sp, #12]
   11cbc:	str	lr, [sp, #20]
   11cc0:	vpush	{d8}
   11cc4:	sub	sp, sp, #24
   11cc8:	bl	11104 <fflush@plt>
   11ccc:	ldr	r3, [r4, #36]	; 0x24
   11cd0:	movw	r0, #48856	; 0xbed8
   11cd4:	movt	r0, #1
   11cd8:	ldr	r1, [r3, #52]	; 0x34
   11cdc:	bl	110f8 <printf@plt>
   11ce0:	ldr	r3, [r4, #36]	; 0x24
   11ce4:	movw	r0, #48884	; 0xbef4
   11ce8:	movt	r0, #1
   11cec:	ldr	r1, [r3, #112]	; 0x70
   11cf0:	bl	110f8 <printf@plt>
   11cf4:	ldr	r3, [r4, #36]	; 0x24
   11cf8:	movw	r0, #48912	; 0xbf10
   11cfc:	movt	r0, #1
   11d00:	ldr	r1, [r3, #116]	; 0x74
   11d04:	bl	110f8 <printf@plt>
   11d08:	ldr	r3, [r4, #36]	; 0x24
   11d0c:	ldr	r1, [r3, #120]	; 0x78
   11d10:	cmp	r1, #0
   11d14:	bne	11dac <__assert_fail@plt+0x9a8>
   11d18:	ldr	r2, [r3, #112]	; 0x70
   11d1c:	cmp	r2, #0
   11d20:	beq	11d3c <__assert_fail@plt+0x938>
   11d24:	ldr	r1, [r3, #116]	; 0x74
   11d28:	cmp	r2, r1
   11d2c:	bcs	11d8c <__assert_fail@plt+0x988>
   11d30:	movw	r0, #48956	; 0xbf3c
   11d34:	movt	r0, #1
   11d38:	bl	110f8 <printf@plt>
   11d3c:	mov	r0, #10
   11d40:	bl	112f0 <putchar@plt>
   11d44:	ldr	r3, [r4, #36]	; 0x24
   11d48:	ldr	r0, [r3, #116]	; 0x74
   11d4c:	cmp	r0, #0
   11d50:	beq	11d68 <__assert_fail@plt+0x964>
   11d54:	movw	r2, #57656	; 0xe138
   11d58:	movt	r2, #2
   11d5c:	ldr	r2, [r2, #4]
   11d60:	cmp	r2, #7
   11d64:	bhi	11dc0 <__assert_fail@plt+0x9bc>
   11d68:	clz	r0, r0
   11d6c:	lsr	r0, r0, #5
   11d70:	add	sp, sp, #24
   11d74:	vpop	{d8}
   11d78:	ldr	r4, [sp]
   11d7c:	ldrd	r6, [sp, #4]
   11d80:	ldrd	r8, [sp, #12]
   11d84:	add	sp, sp, #20
   11d88:	pop	{pc}		; (ldr pc, [sp], #4)
   11d8c:	sub	r1, r2, r1
   11d90:	mov	r3, #100	; 0x64
   11d94:	movw	r0, #48992	; 0xbf60
   11d98:	movt	r0, #1
   11d9c:	mul	r1, r3, r1
   11da0:	udiv	r1, r1, r2
   11da4:	bl	110f8 <printf@plt>
   11da8:	b	11d3c <__assert_fail@plt+0x938>
   11dac:	movw	r0, #48936	; 0xbf28
   11db0:	movt	r0, #1
   11db4:	bl	110f8 <printf@plt>
   11db8:	ldr	r3, [r4, #36]	; 0x24
   11dbc:	b	11d18 <__assert_fail@plt+0x914>
   11dc0:	ldr	r2, [r3, #120]	; 0x78
   11dc4:	ldr	r3, [r3, #68]	; 0x44
   11dc8:	vldr	d1, [pc, #88]	; 11e28 <__assert_fail@plt+0xa24>
   11dcc:	add	r0, r0, r2
   11dd0:	vmov	s15, r0
   11dd4:	ldrd	r8, [r3]
   11dd8:	vldr	d5, [r3, #16]
   11ddc:	vldr	d6, [r3, #24]
   11de0:	ldrd	r6, [r3, #8]
   11de4:	vcvt.f64.u32	d7, s15
   11de8:	vdiv.f64	d8, d5, d7
   11dec:	vdiv.f64	d0, d6, d7
   11df0:	vmls.f64	d0, d8, d8
   11df4:	bl	12f90 <__assert_fail@plt+0x1b8c>
   11df8:	mov	r3, r9
   11dfc:	mov	r2, r8
   11e00:	vstr	d8, [sp]
   11e04:	movw	r0, #49012	; 0xbf74
   11e08:	movt	r0, #1
   11e0c:	strd	r6, [sp, #8]
   11e10:	vstr	d0, [sp, #16]
   11e14:	bl	110f8 <printf@plt>
   11e18:	ldr	r3, [r4, #36]	; 0x24
   11e1c:	ldr	r0, [r3, #116]	; 0x74
   11e20:	b	11d68 <__assert_fail@plt+0x964>
   11e24:	nop	{0}
   11e28:	rscsle	sl, r1, #252, 18	; 0x3f0000
   11e2c:	svccc	0x0040624d
   11e30:	str	r4, [sp, #-8]!
   11e34:	mov	r4, r0
   11e38:	movw	r0, #49068	; 0xbfac
   11e3c:	movt	r0, #1
   11e40:	str	lr, [sp, #4]
   11e44:	bl	110f8 <printf@plt>
   11e48:	movw	r3, #57656	; 0xe138
   11e4c:	movt	r3, #2
   11e50:	ldrb	r1, [r4, #1]
   11e54:	ldr	r2, [r3, #16]
   11e58:	cmp	r1, r2
   11e5c:	beq	11eac <__assert_fail@plt+0xaa8>
   11e60:	ldr	r2, [r3, #24]
   11e64:	cmp	r1, r2
   11e68:	beq	11e94 <__assert_fail@plt+0xa90>
   11e6c:	ldr	r2, [r3, #32]
   11e70:	cmp	r2, r1
   11e74:	addeq	r3, r3, #32
   11e78:	beq	11e98 <__assert_fail@plt+0xa94>
   11e7c:	movw	r0, #49088	; 0xbfc0
   11e80:	movt	r0, #1
   11e84:	ldr	r4, [sp]
   11e88:	ldr	lr, [sp, #4]
   11e8c:	add	sp, sp, #8
   11e90:	b	110f8 <printf@plt>
   11e94:	add	r3, r3, #24
   11e98:	ldr	r4, [sp]
   11e9c:	ldr	lr, [sp, #4]
   11ea0:	add	sp, sp, #8
   11ea4:	ldr	r0, [r3, #4]
   11ea8:	b	1120c <puts@plt>
   11eac:	add	r3, r3, #16
   11eb0:	b	11e98 <__assert_fail@plt+0xa94>
   11eb4:	str	r4, [sp, #-8]!
   11eb8:	mov	r4, r0
   11ebc:	movw	r0, #49108	; 0xbfd4
   11ec0:	movt	r0, #1
   11ec4:	str	lr, [sp, #4]
   11ec8:	bl	110f8 <printf@plt>
   11ecc:	movw	r3, #57656	; 0xe138
   11ed0:	movt	r3, #2
   11ed4:	ldrb	r1, [r4, #1]
   11ed8:	ldr	r2, [r3, #40]	; 0x28
   11edc:	cmp	r1, r2
   11ee0:	beq	11f48 <__assert_fail@plt+0xb44>
   11ee4:	ldr	r2, [r3, #48]	; 0x30
   11ee8:	cmp	r1, r2
   11eec:	beq	11f50 <__assert_fail@plt+0xb4c>
   11ef0:	ldr	r2, [r3, #56]	; 0x38
   11ef4:	cmp	r1, r2
   11ef8:	beq	11f58 <__assert_fail@plt+0xb54>
   11efc:	ldr	r2, [r3, #64]	; 0x40
   11f00:	cmp	r1, r2
   11f04:	beq	11f30 <__assert_fail@plt+0xb2c>
   11f08:	ldr	r2, [r3, #72]	; 0x48
   11f0c:	cmp	r2, r1
   11f10:	addeq	r3, r3, #72	; 0x48
   11f14:	beq	11f34 <__assert_fail@plt+0xb30>
   11f18:	movw	r0, #49088	; 0xbfc0
   11f1c:	movt	r0, #1
   11f20:	ldr	r4, [sp]
   11f24:	ldr	lr, [sp, #4]
   11f28:	add	sp, sp, #8
   11f2c:	b	110f8 <printf@plt>
   11f30:	add	r3, r3, #64	; 0x40
   11f34:	ldr	r4, [sp]
   11f38:	ldr	lr, [sp, #4]
   11f3c:	add	sp, sp, #8
   11f40:	ldr	r0, [r3, #4]
   11f44:	b	1120c <puts@plt>
   11f48:	add	r3, r3, #40	; 0x28
   11f4c:	b	11f34 <__assert_fail@plt+0xb30>
   11f50:	add	r3, r3, #48	; 0x30
   11f54:	b	11f34 <__assert_fail@plt+0xb30>
   11f58:	add	r3, r3, #56	; 0x38
   11f5c:	b	11f34 <__assert_fail@plt+0xb30>
   11f60:	str	r4, [sp, #-8]!
   11f64:	mov	r4, r0
   11f68:	movw	r0, #49136	; 0xbff0
   11f6c:	movt	r0, #1
   11f70:	str	lr, [sp, #4]
   11f74:	bl	110f8 <printf@plt>
   11f78:	movw	r3, #57656	; 0xe138
   11f7c:	movt	r3, #2
   11f80:	ldrb	r1, [r4, #1]
   11f84:	ldr	r2, [r3, #80]	; 0x50
   11f88:	cmp	r2, r1
   11f8c:	beq	11fb4 <__assert_fail@plt+0xbb0>
   11f90:	ldr	r2, [r3, #88]	; 0x58
   11f94:	cmp	r1, r2
   11f98:	beq	11fcc <__assert_fail@plt+0xbc8>
   11f9c:	movw	r0, #49088	; 0xbfc0
   11fa0:	movt	r0, #1
   11fa4:	ldr	r4, [sp]
   11fa8:	ldr	lr, [sp, #4]
   11fac:	add	sp, sp, #8
   11fb0:	b	110f8 <printf@plt>
   11fb4:	add	r3, r3, #80	; 0x50
   11fb8:	ldr	r4, [sp]
   11fbc:	ldr	lr, [sp, #4]
   11fc0:	add	sp, sp, #8
   11fc4:	ldr	r0, [r3, #4]
   11fc8:	b	1120c <puts@plt>
   11fcc:	add	r3, r3, #88	; 0x58
   11fd0:	b	11fb8 <__assert_fail@plt+0xbb4>
   11fd4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11fd8:	movw	r5, #57656	; 0xe138
   11fdc:	movt	r5, #2
   11fe0:	ldr	r3, [r5, #4]
   11fe4:	mov	r4, r0
   11fe8:	strd	r6, [sp, #8]
   11fec:	strd	r8, [sp, #16]
   11ff0:	str	lr, [sp, #24]
   11ff4:	sub	sp, sp, #20
   11ff8:	cmp	r3, #7
   11ffc:	movls	r2, #0
   12000:	bhi	12114 <__assert_fail@plt+0xd10>
   12004:	movw	r3, #58440	; 0xe448
   12008:	movt	r3, #2
   1200c:	ldr	r1, [r3]
   12010:	cmp	r1, #0
   12014:	beq	12034 <__assert_fail@plt+0xc30>
   12018:	ldr	r3, [r5, #4]
   1201c:	mov	r0, #1
   12020:	str	r0, [sp]
   12024:	mov	r0, r4
   12028:	cmp	r3, r2
   1202c:	subhi	r3, r3, r2
   12030:	bl	130f4 <__assert_fail@plt+0x1cf0>
   12034:	mov	r1, #1
   12038:	mov	r0, r4
   1203c:	bl	1305c <__assert_fail@plt+0x1c58>
   12040:	subs	r6, r0, #0
   12044:	bne	12144 <__assert_fail@plt+0xd40>
   12048:	mov	r7, #1
   1204c:	ldr	r5, [r4, #56]	; 0x38
   12050:	mov	r0, #128	; 0x80
   12054:	mov	lr, r4
   12058:	mov	r8, #28
   1205c:	ldr	r2, [r4, #72]	; 0x48
   12060:	mov	r3, r6
   12064:	ldr	r9, [r4, #112]	; 0x70
   12068:	add	r5, r5, #8
   1206c:	ldr	ip, [r4, #76]	; 0x4c
   12070:	lsl	r1, r2, #3
   12074:	udiv	r2, r9, r1
   12078:	mls	r2, r1, r2, r9
   1207c:	ldrb	r1, [ip, r2, asr #3]
   12080:	and	r9, r2, #7
   12084:	bic	r1, r1, r7, lsl r9
   12088:	strb	r1, [ip, r2, asr #3]
   1208c:	mov	r2, r5
   12090:	ldr	ip, [r4, #80]	; 0x50
   12094:	str	r0, [ip]
   12098:	mov	r1, ip
   1209c:	ldr	r9, [r4, #60]	; 0x3c
   120a0:	ldr	r7, [r4, #112]	; 0x70
   120a4:	ldr	r0, [lr], #24
   120a8:	rev16	r9, r9
   120ac:	rev16	r7, r7
   120b0:	strh	r9, [ip, #4]
   120b4:	strh	r7, [ip, #6]
   120b8:	str	lr, [sp]
   120bc:	str	r8, [sp, #4]
   120c0:	bl	11308 <sendto@plt>
   120c4:	subs	r3, r0, #0
   120c8:	blt	12144 <__assert_fail@plt+0xd40>
   120cc:	ldr	r2, [r4, #112]	; 0x70
   120d0:	cmp	r5, r3
   120d4:	add	r2, r2, #1
   120d8:	str	r2, [r4, #112]	; 0x70
   120dc:	bne	120fc <__assert_fail@plt+0xcf8>
   120e0:	mov	r0, r6
   120e4:	add	sp, sp, #20
   120e8:	ldrd	r4, [sp]
   120ec:	ldrd	r6, [sp, #8]
   120f0:	ldrd	r8, [sp, #16]
   120f4:	add	sp, sp, #24
   120f8:	pop	{pc}		; (ldr pc, [sp], #4)
   120fc:	mov	r2, r5
   12100:	movw	r0, #49152	; 0xc000
   12104:	movt	r0, #1
   12108:	ldr	r1, [r4, #52]	; 0x34
   1210c:	bl	110f8 <printf@plt>
   12110:	b	120e0 <__assert_fail@plt+0xcdc>
   12114:	mov	r1, #0
   12118:	add	r0, sp, #8
   1211c:	bl	111e8 <gettimeofday@plt>
   12120:	mov	r0, #1
   12124:	mov	r2, #0
   12128:	add	r1, sp, #8
   1212c:	mov	r3, #8
   12130:	str	r0, [sp]
   12134:	mov	r0, r4
   12138:	bl	130f4 <__assert_fail@plt+0x1cf0>
   1213c:	mov	r2, #8
   12140:	b	12004 <__assert_fail@plt+0xc00>
   12144:	bl	112b4 <__errno_location@plt>
   12148:	movw	r2, #49188	; 0xc024
   1214c:	movt	r2, #1
   12150:	ldr	r1, [r0]
   12154:	mov	r0, #1
   12158:	mvn	r6, #0
   1215c:	bl	111f4 <error@plt>
   12160:	b	120e0 <__assert_fail@plt+0xcdc>
   12164:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12168:	add	r1, r0, #32
   1216c:	mov	r3, #46	; 0x2e
   12170:	strd	r6, [sp, #8]
   12174:	mov	r4, #0
   12178:	movw	r6, #49224	; 0xc048
   1217c:	movt	r6, #1
   12180:	strd	r8, [sp, #16]
   12184:	mov	r8, r0
   12188:	strd	sl, [sp, #24]
   1218c:	mov	r0, #10
   12190:	add	r5, r8, #8
   12194:	str	lr, [sp, #32]
   12198:	sub	sp, sp, #124	; 0x7c
   1219c:	movw	r7, #49220	; 0xc044
   121a0:	movt	r7, #1
   121a4:	add	sl, sp, #72	; 0x48
   121a8:	mov	r2, sl
   121ac:	add	fp, sp, #24
   121b0:	bl	113c8 <inet_ntop@plt>
   121b4:	add	r1, r5, #8
   121b8:	mov	r2, fp
   121bc:	mov	r3, #46	; 0x2e
   121c0:	mov	r0, #10
   121c4:	bl	113c8 <inet_ntop@plt>
   121c8:	movw	r0, #49204	; 0xc034
   121cc:	movt	r0, #1
   121d0:	bl	110f8 <printf@plt>
   121d4:	movw	r2, #53636	; 0xd184
   121d8:	movt	r2, #1
   121dc:	ldrb	r1, [r8, #8]
   121e0:	mov	r9, r2
   121e4:	b	121f8 <__assert_fail@plt+0xdf4>
   121e8:	ldrb	r1, [r5, #1]!
   121ec:	tst	r4, #1
   121f0:	movne	r2, r7
   121f4:	moveq	r2, r9
   121f8:	add	r4, r4, #1
   121fc:	mov	r0, r6
   12200:	bl	110f8 <printf@plt>
   12204:	cmp	r4, #8
   12208:	bne	121e8 <__assert_fail@plt+0xde4>
   1220c:	movw	r0, #49232	; 0xc050
   12210:	movt	r0, #1
   12214:	bl	1120c <puts@plt>
   12218:	movw	r0, #49244	; 0xc05c
   1221c:	movt	r0, #1
   12220:	bl	1120c <puts@plt>
   12224:	ldrh	r2, [r8, #12]
   12228:	movw	r0, #49280	; 0xc080
   1222c:	movt	r0, #1
   12230:	str	fp, [sp, #12]
   12234:	ldr	r1, [r8, #8]
   12238:	str	sl, [sp, #16]
   1223c:	ldrb	lr, [r8, #15]
   12240:	rev16	r2, r2
   12244:	ldrb	ip, [r8, #14]
   12248:	uxth	r2, r2
   1224c:	rev	r1, r1
   12250:	ubfx	r3, r1, #0, #20
   12254:	stm	sp, {r2, ip, lr}
   12258:	ubfx	r2, r1, #20, #8
   1225c:	lsr	r1, r1, #28
   12260:	bl	110f8 <printf@plt>
   12264:	ldrb	r3, [r8, #14]
   12268:	cmp	r3, #58	; 0x3a
   1226c:	beq	12294 <__assert_fail@plt+0xe90>
   12270:	mov	r0, #10
   12274:	bl	112f0 <putchar@plt>
   12278:	add	sp, sp, #124	; 0x7c
   1227c:	ldrd	r4, [sp]
   12280:	ldrd	r6, [sp, #8]
   12284:	ldrd	r8, [sp, #16]
   12288:	ldrd	sl, [sp, #24]
   1228c:	add	sp, sp, #32
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	ldrh	r3, [r8, #12]
   12298:	movw	r0, #49320	; 0xc0a8
   1229c:	movt	r0, #1
   122a0:	ldrb	r2, [r8, #49]	; 0x31
   122a4:	ldrb	r1, [r8, #48]	; 0x30
   122a8:	rev16	r3, r3
   122ac:	uxth	r3, r3
   122b0:	bl	110f8 <printf@plt>
   122b4:	ldrb	r3, [r8, #48]	; 0x30
   122b8:	sub	r3, r3, #128	; 0x80
   122bc:	cmp	r3, #1
   122c0:	bhi	12270 <__assert_fail@plt+0xe6c>
   122c4:	ldrh	r1, [r8, #52]	; 0x34
   122c8:	movw	r0, #49360	; 0xc0d0
   122cc:	movt	r0, #1
   122d0:	ldrh	r3, [r8, #54]	; 0x36
   122d4:	rev16	r1, r1
   122d8:	uxth	r1, r1
   122dc:	rev16	r3, r3
   122e0:	uxth	r2, r3
   122e4:	bl	110f8 <printf@plt>
   122e8:	b	12270 <__assert_fail@plt+0xe6c>
   122ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   122f0:	strd	r6, [sp, #8]
   122f4:	mov	r7, r0
   122f8:	strd	r8, [sp, #16]
   122fc:	movw	r8, #58444	; 0xe44c
   12300:	movt	r8, #2
   12304:	ldr	r3, [r8]
   12308:	strd	sl, [sp, #24]
   1230c:	str	lr, [sp, #32]
   12310:	vpush	{d8-d10}
   12314:	sub	sp, sp, #1840	; 0x730
   12318:	sub	sp, sp, #4
   1231c:	and	r3, r3, #3
   12320:	cmp	r3, #3
   12324:	beq	12c44 <__assert_fail@plt+0x1840>
   12328:	movw	sl, #58340	; 0xe3e4
   1232c:	movt	sl, #2
   12330:	movw	r9, #57656	; 0xe138
   12334:	movt	r9, #2
   12338:	ldr	r6, [sl, #36]	; 0x24
   1233c:	mov	r0, #0
   12340:	movt	r0, #65408	; 0xff80
   12344:	ldr	lr, [r9, #4]
   12348:	movw	r1, #52580	; 0xcd64
   1234c:	movt	r1, #16845	; 0x41cd
   12350:	mov	r4, #0
   12354:	mov	r5, #0
   12358:	add	ip, sp, #824	; 0x338
   1235c:	add	r3, sp, #144	; 0x90
   12360:	strd	r0, [sp, #144]	; 0x90
   12364:	add	r2, sp, #816	; 0x330
   12368:	mov	r0, #194	; 0xc2
   1236c:	strd	r4, [sp, #152]	; 0x98
   12370:	mov	r1, #10
   12374:	strd	r4, [sp, #160]	; 0xa0
   12378:	str	lr, [r6, #56]	; 0x38
   1237c:	str	r3, [r6, #68]	; 0x44
   12380:	add	r3, sp, #560	; 0x230
   12384:	strd	r4, [ip]
   12388:	strd	r0, [r2]
   1238c:	mov	r1, #0
   12390:	mov	r0, r7
   12394:	strd	r4, [ip, #8]
   12398:	strd	r4, [ip, #16]
   1239c:	strd	r4, [sp, #168]	; 0xa8
   123a0:	bl	113bc <getaddrinfo@plt>
   123a4:	cmp	r0, #0
   123a8:	bne	12c04 <__assert_fail@plt+0x1800>
   123ac:	ldr	r4, [sp, #560]	; 0x230
   123b0:	add	r0, r6, #24
   123b4:	ldr	r2, [r4, #16]
   123b8:	ldr	r1, [r4, #20]
   123bc:	bl	11158 <memcpy@plt>
   123c0:	ldr	r0, [r4, #24]
   123c4:	cmp	r0, #0
   123c8:	moveq	r0, r7
   123cc:	bl	111ac <strdup@plt>
   123d0:	str	r0, [r6, #52]	; 0x34
   123d4:	mov	r0, r4
   123d8:	bl	113b0 <freeaddrinfo@plt>
   123dc:	ldr	r3, [r6, #52]	; 0x34
   123e0:	cmp	r3, #0
   123e4:	beq	12c0c <__assert_fail@plt+0x1808>
   123e8:	ldr	r0, [sl, #36]	; 0x24
   123ec:	mov	r1, #0
   123f0:	mov	ip, #1
   123f4:	mov	r3, #256	; 0x100
   123f8:	add	r2, sp, #304	; 0x130
   123fc:	str	r1, [sp]
   12400:	stmib	sp, {r1, ip}
   12404:	mov	r1, #28
   12408:	add	r0, r0, #24
   1240c:	bl	1132c <getnameinfo@plt>
   12410:	subs	r3, r0, #0
   12414:	beq	1243c <__assert_fail@plt+0x1038>
   12418:	cmn	r3, #11
   1241c:	beq	12c5c <__assert_fail@plt+0x1858>
   12420:	bl	11140 <gai_strerror@plt>
   12424:	mov	r3, r0
   12428:	movw	r2, #49432	; 0xc118
   1242c:	movt	r2, #1
   12430:	mov	r1, #0
   12434:	mov	r0, #1
   12438:	bl	111f4 <error@plt>
   1243c:	ldr	r1, [sl, #36]	; 0x24
   12440:	add	r2, sp, #304	; 0x130
   12444:	movw	r0, #49448	; 0xc128
   12448:	movt	r0, #1
   1244c:	ldr	r3, [r9, #4]
   12450:	ldr	r1, [r1, #52]	; 0x34
   12454:	bl	110f8 <printf@plt>
   12458:	ldr	r3, [r8]
   1245c:	tst	r3, #32
   12460:	bne	12c28 <__assert_fail@plt+0x1824>
   12464:	mov	r0, #10
   12468:	bl	112f0 <putchar@plt>
   1246c:	ldr	r4, [sl, #36]	; 0x24
   12470:	movw	r1, #6376	; 0x18e8
   12474:	movt	r1, #1
   12478:	mov	r0, #2
   1247c:	bl	11164 <signal@plt>
   12480:	ldr	r0, [sl, #12]
   12484:	mov	r3, #0
   12488:	mov	r2, #0
   1248c:	ldr	r1, [r4]
   12490:	strd	r2, [sp, #64]	; 0x40
   12494:	strd	r2, [sp, #84]	; 0x54
   12498:	strd	r2, [sp, #92]	; 0x5c
   1249c:	cmp	r0, #0
   124a0:	movne	r5, #0
   124a4:	add	r3, r1, #1
   124a8:	str	r3, [sp, #52]	; 0x34
   124ac:	beq	124c8 <__assert_fail@plt+0x10c4>
   124b0:	mov	r0, r4
   124b4:	add	r5, r5, #1
   124b8:	bl	11fd4 <__assert_fail@plt+0xbd0>
   124bc:	ldr	r3, [sl, #12]
   124c0:	cmp	r5, r3
   124c4:	bcc	124b0 <__assert_fail@plt+0x10ac>
   124c8:	ldr	r3, [r8]
   124cc:	tst	r3, #1
   124d0:	movwne	r3, #10000	; 0x2710
   124d4:	strne	r3, [sp, #36]	; 0x24
   124d8:	bne	12504 <__assert_fail@plt+0x1100>
   124dc:	ldr	r2, [r4, #20]
   124e0:	movw	r3, #19923	; 0x4dd3
   124e4:	movt	r3, #4194	; 0x1062
   124e8:	mov	r1, #1000	; 0x3e8
   124ec:	umull	r0, r3, r3, r2
   124f0:	lsr	r3, r3, #6
   124f4:	mls	r2, r1, r3, r2
   124f8:	str	r3, [sp, #84]	; 0x54
   124fc:	mul	r3, r1, r2
   12500:	str	r3, [sp, #36]	; 0x24
   12504:	vldr	d9, [pc, #924]	; 128a8 <__assert_fail@plt+0x14a4>
   12508:	mov	r1, #0
   1250c:	add	r0, sp, #76	; 0x4c
   12510:	mov	r5, r1
   12514:	movw	fp, #16959	; 0x423f
   12518:	movt	fp, #15
   1251c:	vldr	d10, [pc, #908]	; 128b0 <__assert_fail@plt+0x14ac>
   12520:	str	r1, [sp, #24]
   12524:	str	r3, [sp, #88]	; 0x58
   12528:	bl	111e8 <gettimeofday@plt>
   1252c:	mov	r0, r4
   12530:	str	r5, [sp, #40]	; 0x28
   12534:	bl	11fd4 <__assert_fail@plt+0xbd0>
   12538:	str	r5, [sp, #32]
   1253c:	ldr	r7, [sl]
   12540:	cmp	r7, #0
   12544:	bne	12674 <__assert_fail@plt+0x1270>
   12548:	mov	r2, #128	; 0x80
   1254c:	mov	r1, r7
   12550:	add	r0, sp, #176	; 0xb0
   12554:	bl	112e4 <memset@plt>
   12558:	ldr	r3, [r4]
   1255c:	mov	ip, #1
   12560:	mov	r1, r7
   12564:	add	r0, sp, #92	; 0x5c
   12568:	cmp	r3, #0
   1256c:	add	r2, r3, #31
   12570:	movge	r2, r3
   12574:	rsbs	lr, r3, #0
   12578:	and	lr, lr, #31
   1257c:	asr	r2, r2, #5
   12580:	and	r3, r3, #31
   12584:	rsbpl	r3, lr, #0
   12588:	add	lr, sp, #1840	; 0x730
   1258c:	add	r2, lr, r2, lsl #2
   12590:	ldr	lr, [r2, #-1664]	; 0xfffff980
   12594:	orr	r3, lr, ip, lsl r3
   12598:	str	r3, [r2, #-1664]	; 0xfffff980
   1259c:	bl	111e8 <gettimeofday@plt>
   125a0:	ldr	r1, [sp, #36]	; 0x24
   125a4:	ldrd	r2, [sp, #76]	; 0x4c
   125a8:	ldr	ip, [sp, #84]	; 0x54
   125ac:	ldr	r0, [sp, #92]	; 0x5c
   125b0:	add	r3, r1, r3
   125b4:	ldr	r1, [sp, #96]	; 0x60
   125b8:	add	r2, r2, ip
   125bc:	sub	r2, r2, r0
   125c0:	sub	r3, r3, r1
   125c4:	cmp	r3, #0
   125c8:	strd	r2, [sp, #64]	; 0x40
   125cc:	bge	126b8 <__assert_fail@plt+0x12b4>
   125d0:	add	r3, r3, #999424	; 0xf4000
   125d4:	sub	r2, r2, #1
   125d8:	add	r3, r3, #576	; 0x240
   125dc:	cmp	r3, #0
   125e0:	blt	125d0 <__assert_fail@plt+0x11cc>
   125e4:	strd	r2, [sp, #64]	; 0x40
   125e8:	cmp	r2, #0
   125ec:	bge	125fc <__assert_fail@plt+0x11f8>
   125f0:	mov	r2, #0
   125f4:	mov	r3, #0
   125f8:	strd	r2, [sp, #64]	; 0x40
   125fc:	add	r2, sp, #64	; 0x40
   12600:	mov	r3, #0
   12604:	ldr	r0, [sp, #52]	; 0x34
   12608:	add	r1, sp, #176	; 0xb0
   1260c:	str	r2, [sp]
   12610:	mov	r2, r3
   12614:	bl	11188 <select@plt>
   12618:	subs	r6, r0, #0
   1261c:	blt	12868 <__assert_fail@plt+0x1464>
   12620:	cmp	r6, #1
   12624:	beq	12710 <__assert_fail@plt+0x130c>
   12628:	ldr	r3, [r4, #8]
   1262c:	cmp	r3, #0
   12630:	beq	126e0 <__assert_fail@plt+0x12dc>
   12634:	ldr	r2, [r4, #112]	; 0x70
   12638:	cmp	r3, r2
   1263c:	bhi	126e0 <__assert_fail@plt+0x12dc>
   12640:	ldr	r3, [sp, #40]	; 0x28
   12644:	cmp	r3, #0
   12648:	bne	12674 <__assert_fail@plt+0x1270>
   1264c:	mov	r3, #10
   12650:	mov	r2, #1
   12654:	str	r2, [sp, #40]	; 0x28
   12658:	str	r3, [sp, #84]	; 0x54
   1265c:	mov	r1, #0
   12660:	add	r0, sp, #76	; 0x4c
   12664:	bl	111e8 <gettimeofday@plt>
   12668:	ldr	r7, [sl]
   1266c:	cmp	r7, #0
   12670:	beq	12548 <__assert_fail@plt+0x1144>
   12674:	mov	r0, r4
   12678:	bl	131f8 <__assert_fail@plt+0x1df4>
   1267c:	bl	11c9c <__assert_fail@plt+0x898>
   12680:	ldr	r3, [sl, #36]	; 0x24
   12684:	mov	r4, r0
   12688:	ldr	r0, [r3, #52]	; 0x34
   1268c:	bl	18cd4 <argp_parse@@Base+0x1038>
   12690:	mov	r0, r4
   12694:	add	sp, sp, #1840	; 0x730
   12698:	add	sp, sp, #4
   1269c:	vpop	{d8-d10}
   126a0:	ldrd	r4, [sp]
   126a4:	ldrd	r6, [sp, #8]
   126a8:	ldrd	r8, [sp, #16]
   126ac:	ldrd	sl, [sp, #24]
   126b0:	add	sp, sp, #32
   126b4:	pop	{pc}		; (ldr pc, [sp], #4)
   126b8:	cmp	r3, fp
   126bc:	ble	125e8 <__assert_fail@plt+0x11e4>
   126c0:	add	r1, r2, #1
   126c4:	sub	r3, r3, #999424	; 0xf4000
   126c8:	mov	r2, r1
   126cc:	sub	r3, r3, #576	; 0x240
   126d0:	add	r1, r1, #1
   126d4:	cmp	r3, fp
   126d8:	bgt	126c4 <__assert_fail@plt+0x12c0>
   126dc:	b	125e4 <__assert_fail@plt+0x11e0>
   126e0:	mov	r0, r4
   126e4:	bl	11fd4 <__assert_fail@plt+0xbd0>
   126e8:	ldr	r3, [r8]
   126ec:	and	r3, r3, #9
   126f0:	cmp	r3, #1
   126f4:	beq	1288c <__assert_fail@plt+0x1488>
   126f8:	add	r0, r4, #12
   126fc:	ldr	r1, [r9, #12]
   12700:	bl	13240 <__assert_fail@plt+0x1e3c>
   12704:	cmp	r0, #0
   12708:	beq	1265c <__assert_fail@plt+0x1258>
   1270c:	b	12674 <__assert_fail@plt+0x1270>
   12710:	ldr	r3, [r4, #56]	; 0x38
   12714:	mov	lr, #28
   12718:	add	r2, sp, #100	; 0x64
   1271c:	mov	r0, #1024	; 0x400
   12720:	mov	ip, #0
   12724:	ldr	r1, [r4, #80]	; 0x50
   12728:	add	r5, r4, #84	; 0x54
   1272c:	str	lr, [sp, #120]	; 0x78
   12730:	add	lr, sp, #816	; 0x330
   12734:	add	r3, r3, #8
   12738:	str	r2, [sp, #124]	; 0x7c
   1273c:	mov	r2, ip
   12740:	str	r0, [sp, #136]	; 0x88
   12744:	ldr	r0, [r4]
   12748:	str	r1, [sp, #100]	; 0x64
   1274c:	add	r1, sp, #116	; 0x74
   12750:	str	r5, [sp, #44]	; 0x2c
   12754:	str	r3, [sp, #104]	; 0x68
   12758:	str	r5, [sp, #116]	; 0x74
   1275c:	str	r6, [sp, #128]	; 0x80
   12760:	str	lr, [sp, #132]	; 0x84
   12764:	str	ip, [sp, #140]	; 0x8c
   12768:	bl	11398 <recvmsg@plt>
   1276c:	subs	r3, r0, #0
   12770:	str	r3, [sp, #28]
   12774:	blt	12808 <__assert_fail@plt+0x1404>
   12778:	ldr	r1, [sp, #136]	; 0x88
   1277c:	cmp	r1, #11
   12780:	bls	127dc <__assert_fail@plt+0x13d8>
   12784:	ldr	r3, [sp, #132]	; 0x84
   12788:	cmp	r3, #0
   1278c:	beq	127dc <__assert_fail@plt+0x13d8>
   12790:	add	r1, r3, r1
   12794:	ldr	r2, [r3, #4]
   12798:	cmp	r2, #41	; 0x29
   1279c:	beq	12850 <__assert_fail@plt+0x144c>
   127a0:	ldr	r0, [r3]
   127a4:	add	r2, r0, #3
   127a8:	cmp	r0, #11
   127ac:	bic	r2, r2, #3
   127b0:	bls	127dc <__assert_fail@plt+0x13d8>
   127b4:	add	r3, r3, r2
   127b8:	add	r2, r3, #12
   127bc:	cmp	r1, r2
   127c0:	bcc	127dc <__assert_fail@plt+0x13d8>
   127c4:	ldr	r2, [r3]
   127c8:	add	r2, r2, #3
   127cc:	bic	r2, r2, #3
   127d0:	add	r2, r3, r2
   127d4:	cmp	r1, r2
   127d8:	bcs	12794 <__assert_fail@plt+0x1390>
   127dc:	mvn	r3, #0
   127e0:	str	r3, [sp, #20]
   127e4:	ldr	r5, [r4, #80]	; 0x50
   127e8:	ldrb	r3, [r5]
   127ec:	cmp	r3, #129	; 0x81
   127f0:	beq	128c8 <__assert_fail@plt+0x14c4>
   127f4:	ldr	r3, [sl, #36]	; 0x24
   127f8:	ldr	r1, [r5, #32]
   127fc:	ldr	r2, [r3, #32]
   12800:	cmp	r1, r2
   12804:	beq	12a50 <__assert_fail@plt+0x164c>
   12808:	ldr	r3, [sp, #32]
   1280c:	cmp	r3, #0
   12810:	beq	12a3c <__assert_fail@plt+0x1638>
   12814:	add	r0, r4, #12
   12818:	ldr	r1, [r9, #12]
   1281c:	bl	13240 <__assert_fail@plt+0x1e3c>
   12820:	cmp	r0, #0
   12824:	bne	12674 <__assert_fail@plt+0x1270>
   12828:	ldr	r2, [r4, #8]
   1282c:	ldr	r3, [sp, #24]
   12830:	cmp	r2, r3
   12834:	movhi	r3, #0
   12838:	movls	r3, #1
   1283c:	cmp	r2, #0
   12840:	moveq	r3, #0
   12844:	cmp	r3, #0
   12848:	beq	1253c <__assert_fail@plt+0x1138>
   1284c:	b	12674 <__assert_fail@plt+0x1270>
   12850:	ldr	r2, [r3, #8]
   12854:	cmp	r2, #52	; 0x34
   12858:	bne	127a0 <__assert_fail@plt+0x139c>
   1285c:	ldr	r3, [r3, #12]
   12860:	str	r3, [sp, #20]
   12864:	b	127e4 <__assert_fail@plt+0x13e0>
   12868:	bl	112b4 <__errno_location@plt>
   1286c:	ldr	r1, [r0]
   12870:	cmp	r1, #4
   12874:	beq	1253c <__assert_fail@plt+0x1138>
   12878:	movw	r2, #49500	; 0xc15c
   1287c:	movt	r2, #1
   12880:	mov	r0, #1
   12884:	bl	111f4 <error@plt>
   12888:	b	1253c <__assert_fail@plt+0x1138>
   1288c:	movw	r3, #58332	; 0xe3dc
   12890:	movt	r3, #2
   12894:	mov	r0, #46	; 0x2e
   12898:	ldr	r1, [r3]
   1289c:	bl	11374 <putc@plt>
   128a0:	b	126f8 <__assert_fail@plt+0x12f4>
   128a4:	nop	{0}
	...
   128b4:	addmi	r4, pc, r0
   128b8:	muleq	r2, r8, r1
   128bc:	andeq	lr, r2, r0, lsr #3
   128c0:	andeq	lr, r2, r8, lsr #3
   128c4:			; <UNDEFINED> instruction: 0x0002e1b0
   128c8:	ldrh	r3, [r5, #4]
   128cc:	ldr	r2, [r4, #60]	; 0x3c
   128d0:	rev16	r3, r3
   128d4:	uxth	r3, r3
   128d8:	cmp	r3, r2
   128dc:	bne	12808 <__assert_fail@plt+0x1404>
   128e0:	ldrh	r3, [r5, #6]
   128e4:	ldr	r2, [r4, #72]	; 0x48
   128e8:	ldr	r1, [r4, #76]	; 0x4c
   128ec:	rev16	r3, r3
   128f0:	uxth	r3, r3
   128f4:	lsl	r2, r2, #3
   128f8:	sdiv	r0, r3, r2
   128fc:	mls	r3, r2, r0, r3
   12900:	ldrb	r2, [r1, r3, asr #3]
   12904:	and	ip, r3, #7
   12908:	asr	r0, r2, ip
   1290c:	ands	r0, r0, #1
   12910:	str	r0, [sp, #60]	; 0x3c
   12914:	beq	12b20 <__assert_fail@plt+0x171c>
   12918:	ldr	r3, [r4, #120]	; 0x78
   1291c:	add	r3, r3, #1
   12920:	str	r3, [r4, #120]	; 0x78
   12924:	ldr	r2, [r4, #68]	; 0x44
   12928:	add	r3, sp, #108	; 0x6c
   1292c:	mov	r1, #0
   12930:	mov	r0, r3
   12934:	str	r3, [sp, #48]	; 0x30
   12938:	str	r2, [sp, #56]	; 0x38
   1293c:	bl	111e8 <gettimeofday@plt>
   12940:	ldr	r3, [sp, #28]
   12944:	sub	r3, r3, #8
   12948:	cmp	r3, #7
   1294c:	vmovls.f64	d8, d9
   12950:	bhi	12b88 <__assert_fail@plt+0x1784>
   12954:	ldr	r3, [r8]
   12958:	tst	r3, #8
   1295c:	bne	12a24 <__assert_fail@plt+0x1620>
   12960:	ands	r2, r3, #1
   12964:	bne	12c70 <__assert_fail@plt+0x186c>
   12968:	tst	r3, #4
   1296c:	mov	r1, #28
   12970:	str	r2, [sp]
   12974:	moveq	r6, #32
   12978:	mov	r3, #256	; 0x100
   1297c:	ldr	r0, [sp, #44]	; 0x2c
   12980:	stmib	sp, {r2, r6}
   12984:	add	r2, sp, #560	; 0x230
   12988:	bl	1132c <getnameinfo@plt>
   1298c:	subs	r3, r0, #0
   12990:	beq	129d0 <__assert_fail@plt+0x15cc>
   12994:	cmn	r3, #11
   12998:	beq	12c88 <__assert_fail@plt+0x1884>
   1299c:	bl	11140 <gai_strerror@plt>
   129a0:	mov	r2, r0
   129a4:	movw	r3, #58328	; 0xe3d8
   129a8:	movt	r3, #2
   129ac:	movw	r1, #49516	; 0xc16c
   129b0:	movt	r1, #1
   129b4:	ldr	r0, [r3]
   129b8:	bl	112a8 <fprintf@plt>
   129bc:	movw	r3, #49540	; 0xc184
   129c0:	movt	r3, #1
   129c4:	ldrd	r2, [r3]
   129c8:	add	r1, sp, #560	; 0x230
   129cc:	strd	r2, [r1]
   129d0:	ldrh	r3, [r5, #6]
   129d4:	movw	r0, #49548	; 0xc18c
   129d8:	movt	r0, #1
   129dc:	add	r2, sp, #560	; 0x230
   129e0:	ldr	r1, [sp, #28]
   129e4:	rev16	r3, r3
   129e8:	uxth	r3, r3
   129ec:	bl	110f8 <printf@plt>
   129f0:	ldr	r3, [sp, #20]
   129f4:	cmp	r3, #0
   129f8:	bge	12b3c <__assert_fail@plt+0x1738>
   129fc:	cmp	r7, #0
   12a00:	bne	12b68 <__assert_fail@plt+0x1764>
   12a04:	ldr	r3, [sp, #60]	; 0x3c
   12a08:	cmp	r3, #0
   12a0c:	bne	12b58 <__assert_fail@plt+0x1754>
   12a10:	movw	r3, #58332	; 0xe3dc
   12a14:	movt	r3, #2
   12a18:	mov	r0, #10
   12a1c:	ldr	r1, [r3]
   12a20:	bl	11374 <putc@plt>
   12a24:	ldr	r3, [sp, #24]
   12a28:	add	r3, r3, #1
   12a2c:	str	r3, [sp, #24]
   12a30:	ldr	r3, [sp, #32]
   12a34:	cmp	r3, #0
   12a38:	bne	12814 <__assert_fail@plt+0x1410>
   12a3c:	add	r0, sp, #92	; 0x5c
   12a40:	mov	r1, r3
   12a44:	str	r0, [sp, #32]
   12a48:	bl	111e8 <gettimeofday@plt>
   12a4c:	b	12814 <__assert_fail@plt+0x1410>
   12a50:	ldr	r2, [r3, #36]	; 0x24
   12a54:	ldr	r1, [r5, #36]	; 0x24
   12a58:	cmp	r1, r2
   12a5c:	bne	12808 <__assert_fail@plt+0x1404>
   12a60:	ldr	r2, [r3, #40]	; 0x28
   12a64:	ldr	r1, [r5, #40]	; 0x28
   12a68:	cmp	r1, r2
   12a6c:	bne	12808 <__assert_fail@plt+0x1404>
   12a70:	ldr	r3, [r3, #44]	; 0x2c
   12a74:	ldr	r2, [r5, #44]	; 0x2c
   12a78:	cmp	r2, r3
   12a7c:	bne	12808 <__assert_fail@plt+0x1404>
   12a80:	ldrb	r3, [r5, #14]
   12a84:	cmp	r3, #58	; 0x3a
   12a88:	bne	12808 <__assert_fail@plt+0x1404>
   12a8c:	ldrb	r3, [r5, #48]	; 0x30
   12a90:	cmp	r3, #128	; 0x80
   12a94:	bne	12808 <__assert_fail@plt+0x1404>
   12a98:	ldr	r3, [r4, #60]	; 0x3c
   12a9c:	ldrh	r2, [r5, #52]	; 0x34
   12aa0:	rev16	r3, r3
   12aa4:	uxth	r3, r3
   12aa8:	cmp	r2, r3
   12aac:	bne	12808 <__assert_fail@plt+0x1404>
   12ab0:	mov	r1, #28
   12ab4:	ldr	r0, [sp, #44]	; 0x2c
   12ab8:	bl	132a4 <__assert_fail@plt+0x1ea0>
   12abc:	mov	r2, r0
   12ac0:	mov	r6, r0
   12ac4:	ldr	r1, [sp, #28]
   12ac8:	movw	r0, #49612	; 0xc1cc
   12acc:	movt	r0, #1
   12ad0:	bl	110f8 <printf@plt>
   12ad4:	mov	r0, r6
   12ad8:	bl	18cd4 <argp_parse@@Base+0x1038>
   12adc:	ldrb	r1, [r5]
   12ae0:	ldr	r3, [r9, #96]	; 0x60
   12ae4:	cmp	r3, r1
   12ae8:	beq	12c9c <__assert_fail@plt+0x1898>
   12aec:	ldr	r3, [r9, #104]	; 0x68
   12af0:	cmp	r3, r1
   12af4:	beq	12cc4 <__assert_fail@plt+0x18c0>
   12af8:	ldr	r3, [r9, #112]	; 0x70
   12afc:	cmp	r1, r3
   12b00:	beq	12ccc <__assert_fail@plt+0x18c8>
   12b04:	ldr	r3, [r9, #120]	; 0x78
   12b08:	cmp	r1, r3
   12b0c:	beq	12cd4 <__assert_fail@plt+0x18d0>
   12b10:	movw	r0, #49632	; 0xc1e0
   12b14:	movt	r0, #1
   12b18:	bl	110f8 <printf@plt>
   12b1c:	b	12a24 <__assert_fail@plt+0x1620>
   12b20:	mov	r0, #1
   12b24:	orr	r2, r2, r0, lsl ip
   12b28:	strb	r2, [r1, r3, asr #3]
   12b2c:	ldr	r3, [r4, #116]	; 0x74
   12b30:	add	r3, r3, r0
   12b34:	str	r3, [r4, #116]	; 0x74
   12b38:	b	12924 <__assert_fail@plt+0x1520>
   12b3c:	mov	r1, r3
   12b40:	movw	r0, #49580	; 0xc1ac
   12b44:	movt	r0, #1
   12b48:	bl	110f8 <printf@plt>
   12b4c:	cmp	r7, #0
   12b50:	beq	12a04 <__assert_fail@plt+0x1600>
   12b54:	b	12b68 <__assert_fail@plt+0x1764>
   12b58:	movw	r0, #49604	; 0xc1c4
   12b5c:	movt	r0, #1
   12b60:	bl	110f8 <printf@plt>
   12b64:	b	12a10 <__assert_fail@plt+0x160c>
   12b68:	vmov	r2, r3, d8
   12b6c:	movw	r0, #49588	; 0xc1b4
   12b70:	movt	r0, #1
   12b74:	bl	110f8 <printf@plt>
   12b78:	ldr	r3, [sp, #60]	; 0x3c
   12b7c:	cmp	r3, #0
   12b80:	beq	12a10 <__assert_fail@plt+0x160c>
   12b84:	b	12b58 <__assert_fail@plt+0x1754>
   12b88:	mov	r3, r5
   12b8c:	add	r1, sp, #560	; 0x230
   12b90:	ldr	r0, [sp, #48]	; 0x30
   12b94:	mov	r7, #1
   12b98:	ldr	ip, [r3, #8]!
   12b9c:	ldr	r3, [r3, #4]
   12ba0:	str	ip, [sp, #560]	; 0x230
   12ba4:	str	r3, [sp, #564]	; 0x234
   12ba8:	bl	12f48 <__assert_fail@plt+0x1b44>
   12bac:	ldr	r2, [sp, #56]	; 0x38
   12bb0:	vldr	s15, [sp, #112]	; 0x70
   12bb4:	vldr	d5, [r2]
   12bb8:	vldr	d6, [r2, #24]
   12bbc:	vcvt.f64.s32	d3, s15
   12bc0:	vldr	s15, [sp, #108]	; 0x6c
   12bc4:	vdiv.f64	d8, d3, d10
   12bc8:	vcvt.f64.s32	d4, s15
   12bcc:	vldr	d7, [r2, #16]
   12bd0:	vmla.f64	d8, d4, d10
   12bd4:	vmla.f64	d6, d8, d8
   12bd8:	vadd.f64	d7, d7, d8
   12bdc:	vcmpe.f64	d8, d5
   12be0:	vstr	d7, [r2, #16]
   12be4:	vldr	d7, [r2, #8]
   12be8:	vmrs	APSR_nzcv, fpscr
   12bec:	vstr	d6, [r2, #24]
   12bf0:	vstrmi	d8, [r2]
   12bf4:	vcmpe.f64	d8, d7
   12bf8:	vmrs	APSR_nzcv, fpscr
   12bfc:	vstrgt	d8, [r2, #8]
   12c00:	b	12954 <__assert_fail@plt+0x1550>
   12c04:	mov	r0, #0
   12c08:	bl	18cd4 <argp_parse@@Base+0x1038>
   12c0c:	mov	r3, r7
   12c10:	movw	r2, #49416	; 0xc108
   12c14:	movt	r2, #1
   12c18:	mov	r1, #0
   12c1c:	mov	r0, #1
   12c20:	bl	111f4 <error@plt>
   12c24:	b	123e8 <__assert_fail@plt+0xfe4>
   12c28:	ldr	r3, [sl, #36]	; 0x24
   12c2c:	movw	r0, #49480	; 0xc148
   12c30:	movt	r0, #1
   12c34:	ldr	r2, [r3, #60]	; 0x3c
   12c38:	mov	r1, r2
   12c3c:	bl	110f8 <printf@plt>
   12c40:	b	12464 <__assert_fail@plt+0x1060>
   12c44:	movw	r2, #49384	; 0xc0e8
   12c48:	movt	r2, #1
   12c4c:	mov	r1, #0
   12c50:	mov	r0, #1
   12c54:	bl	111f4 <error@plt>
   12c58:	b	12328 <__assert_fail@plt+0xf24>
   12c5c:	bl	112b4 <__errno_location@plt>
   12c60:	ldr	r0, [r0]
   12c64:	bl	11230 <strerror@plt>
   12c68:	mov	r3, r0
   12c6c:	b	12428 <__assert_fail@plt+0x1024>
   12c70:	movw	r3, #58332	; 0xe3dc
   12c74:	movt	r3, #2
   12c78:	mov	r0, #8
   12c7c:	ldr	r1, [r3]
   12c80:	bl	11374 <putc@plt>
   12c84:	b	12a24 <__assert_fail@plt+0x1620>
   12c88:	bl	112b4 <__errno_location@plt>
   12c8c:	ldr	r0, [r0]
   12c90:	bl	11230 <strerror@plt>
   12c94:	mov	r2, r0
   12c98:	b	129a4 <__assert_fail@plt+0x15a0>
   12c9c:	ldr	r3, [pc, #-1004]	; 128b8 <__assert_fail@plt+0x14b4>
   12ca0:	mov	r0, r5
   12ca4:	ldr	r3, [r3, #4]
   12ca8:	blx	r3
   12cac:	ldr	r3, [r8]
   12cb0:	tst	r3, #32
   12cb4:	beq	12a24 <__assert_fail@plt+0x1620>
   12cb8:	mov	r0, r5
   12cbc:	bl	12164 <__assert_fail@plt+0xd60>
   12cc0:	b	12a24 <__assert_fail@plt+0x1620>
   12cc4:	ldr	r3, [pc, #-1040]	; 128bc <__assert_fail@plt+0x14b8>
   12cc8:	b	12ca0 <__assert_fail@plt+0x189c>
   12ccc:	ldr	r3, [pc, #-1044]	; 128c0 <__assert_fail@plt+0x14bc>
   12cd0:	b	12ca0 <__assert_fail@plt+0x189c>
   12cd4:	ldr	r3, [pc, #-1048]	; 128c4 <__assert_fail@plt+0x14c0>
   12cd8:	b	12ca0 <__assert_fail@plt+0x189c>
   12cdc:	andeq	r0, r0, r0
   12ce0:	strd	r4, [sp, #-20]!	; 0xffffffec
   12ce4:	mov	r5, r2
   12ce8:	mov	r2, #0
   12cec:	strd	r6, [sp, #8]
   12cf0:	mov	r6, r1
   12cf4:	mov	r7, r0
   12cf8:	str	lr, [sp, #16]
   12cfc:	sub	sp, sp, #20
   12d00:	add	r1, sp, #12
   12d04:	bl	11284 <strtoul@plt>
   12d08:	ldr	r3, [sp, #12]
   12d0c:	mov	r4, r0
   12d10:	ldrb	r2, [r3]
   12d14:	cmp	r2, #0
   12d18:	bne	12d7c <__assert_fail@plt+0x1978>
   12d1c:	orrs	r1, r5, r4
   12d20:	beq	12d64 <__assert_fail@plt+0x1960>
   12d24:	cmp	r6, #0
   12d28:	cmpne	r4, r6
   12d2c:	bhi	12d48 <__assert_fail@plt+0x1944>
   12d30:	mov	r0, r4
   12d34:	add	sp, sp, #20
   12d38:	ldrd	r4, [sp]
   12d3c:	ldrd	r6, [sp, #8]
   12d40:	add	sp, sp, #16
   12d44:	pop	{pc}		; (ldr pc, [sp], #4)
   12d48:	mov	r3, r7
   12d4c:	movw	r2, #50796	; 0xc66c
   12d50:	movt	r2, #1
   12d54:	mov	r1, #0
   12d58:	mov	r0, #1
   12d5c:	bl	111f4 <error@plt>
   12d60:	b	12d30 <__assert_fail@plt+0x192c>
   12d64:	mov	r3, r7
   12d68:	movw	r2, #48724	; 0xbe54
   12d6c:	movt	r2, #1
   12d70:	mov	r0, #1
   12d74:	bl	111f4 <error@plt>
   12d78:	b	12d30 <__assert_fail@plt+0x192c>
   12d7c:	movw	r2, #50764	; 0xc64c
   12d80:	movt	r2, #1
   12d84:	str	r3, [sp]
   12d88:	mov	r1, #0
   12d8c:	mov	r0, #1
   12d90:	mov	r3, r7
   12d94:	bl	111f4 <error@plt>
   12d98:	b	12d1c <__assert_fail@plt+0x1918>
   12d9c:	strd	r4, [sp, #-16]!
   12da0:	movw	r4, #57660	; 0xe13c
   12da4:	movt	r4, #2
   12da8:	ldr	r3, [r4]
   12dac:	str	r6, [sp, #8]
   12db0:	str	lr, [sp, #12]
   12db4:	cmp	r3, #0
   12db8:	bne	12dcc <__assert_fail@plt+0x19c8>
   12dbc:	ldrd	r4, [sp]
   12dc0:	ldr	r6, [sp, #8]
   12dc4:	add	sp, sp, #12
   12dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dcc:	mov	r5, r0
   12dd0:	mov	r0, r3
   12dd4:	mov	r6, r1
   12dd8:	bl	19a64 <argp_parse@@Base+0x1dc8>
   12ddc:	movw	r2, #58440	; 0xe448
   12de0:	movt	r2, #2
   12de4:	cmp	r5, #0
   12de8:	str	r0, [r2]
   12dec:	beq	12e38 <__assert_fail@plt+0x1a34>
   12df0:	ldr	r1, [r4]
   12df4:	add	r1, r0, r1
   12df8:	cmp	r0, r1
   12dfc:	bcs	12dbc <__assert_fail@plt+0x19b8>
   12e00:	sub	r2, r0, #1
   12e04:	sub	r1, r1, #1
   12e08:	mov	r3, #0
   12e0c:	ldrb	ip, [r5, r3]
   12e10:	add	r3, r3, #1
   12e14:	cmp	r6, r3
   12e18:	movls	r3, #0
   12e1c:	strb	ip, [r2, #1]!
   12e20:	cmp	r1, r2
   12e24:	bne	12e0c <__assert_fail@plt+0x1a08>
   12e28:	ldrd	r4, [sp]
   12e2c:	ldr	r6, [sp, #8]
   12e30:	add	sp, sp, #12
   12e34:	pop	{pc}		; (ldr pc, [sp], #4)
   12e38:	ldr	r3, [r4]
   12e3c:	cmp	r3, #0
   12e40:	beq	12dbc <__assert_fail@plt+0x19b8>
   12e44:	cmp	r3, #1
   12e48:	strb	r5, [r0]
   12e4c:	bls	12dbc <__assert_fail@plt+0x19b8>
   12e50:	mov	r3, #1
   12e54:	ldr	r1, [r2]
   12e58:	strb	r3, [r1, r3]
   12e5c:	add	r3, r3, #1
   12e60:	ldr	r1, [r4]
   12e64:	cmp	r1, r3
   12e68:	bhi	12e54 <__assert_fail@plt+0x1a50>
   12e6c:	ldrd	r4, [sp]
   12e70:	ldr	r6, [sp, #8]
   12e74:	add	sp, sp, #12
   12e78:	pop	{pc}		; (ldr pc, [sp], #4)
   12e7c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e80:	strd	r6, [sp, #8]
   12e84:	strd	r8, [sp, #16]
   12e88:	mov	r9, r1
   12e8c:	str	lr, [sp, #24]
   12e90:	sub	sp, sp, #12
   12e94:	ldrb	r5, [r0]
   12e98:	cmp	r5, #0
   12e9c:	beq	12f24 <__assert_fail@plt+0x1b20>
   12ea0:	ldr	r3, [r1]
   12ea4:	cmp	r3, #0
   12ea8:	ble	12f40 <__assert_fail@plt+0x1b3c>
   12eac:	movw	r8, #50824	; 0xc688
   12eb0:	movt	r8, #1
   12eb4:	movw	r7, #50832	; 0xc690
   12eb8:	movt	r7, #1
   12ebc:	mov	r4, r0
   12ec0:	sub	r6, r2, #1
   12ec4:	mov	r5, #0
   12ec8:	b	12ed8 <__assert_fail@plt+0x1ad4>
   12ecc:	ldr	r3, [r9]
   12ed0:	cmp	r3, r5
   12ed4:	ble	12f24 <__assert_fail@plt+0x1b20>
   12ed8:	add	r3, sp, #4
   12edc:	mov	r2, sp
   12ee0:	mov	r1, r8
   12ee4:	mov	r0, r4
   12ee8:	bl	11368 <sscanf@plt>
   12eec:	cmp	r0, #1
   12ef0:	mov	r3, r4
   12ef4:	mov	r2, r7
   12ef8:	mov	r1, #0
   12efc:	mov	r0, #1
   12f00:	beq	12f08 <__assert_fail@plt+0x1b04>
   12f04:	bl	111f4 <error@plt>
   12f08:	ldr	r3, [sp]
   12f0c:	add	r5, r5, #1
   12f10:	ldr	r2, [sp, #4]
   12f14:	strb	r3, [r6, #1]!
   12f18:	ldrb	r3, [r4, r2]!
   12f1c:	cmp	r3, #0
   12f20:	bne	12ecc <__assert_fail@plt+0x1ac8>
   12f24:	str	r5, [r9]
   12f28:	add	sp, sp, #12
   12f2c:	ldrd	r4, [sp]
   12f30:	ldrd	r6, [sp, #8]
   12f34:	ldrd	r8, [sp, #16]
   12f38:	add	sp, sp, #24
   12f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f40:	mov	r5, #0
   12f44:	b	12f24 <__assert_fail@plt+0x1b20>
   12f48:	ldrd	r2, [r0]
   12f4c:	ldr	ip, [r1, #4]
   12f50:	sub	r3, r3, ip
   12f54:	cmp	r3, #0
   12f58:	str	r3, [r0, #4]
   12f5c:	bge	12f70 <__assert_fail@plt+0x1b6c>
   12f60:	add	r3, r3, #999424	; 0xf4000
   12f64:	sub	r2, r2, #1
   12f68:	add	r3, r3, #576	; 0x240
   12f6c:	strd	r2, [r0]
   12f70:	ldr	r3, [r1]
   12f74:	sub	r2, r2, r3
   12f78:	str	r2, [r0]
   12f7c:	bx	lr
   12f80:	vcmpe.f64	d0, #0.0
   12f84:	vmrs	APSR_nzcv, fpscr
   12f88:	vnegmi.f64	d0, d0
   12f8c:	bx	lr
   12f90:	vcmpe.f64	d0, #0.0
   12f94:	vmrs	APSR_nzcv, fpscr
   12f98:	bmi	12fe4 <__assert_fail@plt+0x1be0>
   12f9c:	vcmpe.f64	d0, d1
   12fa0:	vmrs	APSR_nzcv, fpscr
   12fa4:	bmi	12fe4 <__assert_fail@plt+0x1be0>
   12fa8:	vldr	d4, [pc, #88]	; 13008 <__assert_fail@plt+0x1c04>
   12fac:	vmul.f64	d6, d0, d4
   12fb0:	vdiv.f64	d7, d0, d6
   12fb4:	vadd.f64	d7, d7, d6
   12fb8:	vmul.f64	d7, d7, d4
   12fbc:	vsub.f64	d5, d7, d6
   12fc0:	vmov.f64	d6, d7
   12fc4:	vcmpe.f64	d5, #0.0
   12fc8:	vneg.f64	d3, d5
   12fcc:	vmrs	APSR_nzcv, fpscr
   12fd0:	bmi	12ff0 <__assert_fail@plt+0x1bec>
   12fd4:	vcmpe.f64	d5, d1
   12fd8:	vmrs	APSR_nzcv, fpscr
   12fdc:	bgt	12fb0 <__assert_fail@plt+0x1bac>
   12fe0:	b	12fe8 <__assert_fail@plt+0x1be4>
   12fe4:	vldr	d7, [pc, #36]	; 13010 <__assert_fail@plt+0x1c0c>
   12fe8:	vmov.f64	d0, d7
   12fec:	bx	lr
   12ff0:	vcmpe.f64	d1, d3
   12ff4:	vmrs	APSR_nzcv, fpscr
   12ff8:	bmi	12fb0 <__assert_fail@plt+0x1bac>
   12ffc:	vmov.f64	d0, d7
   13000:	bx	lr
   13004:	nop	{0}
   13008:	andeq	r0, r0, r0
   1300c:	svccc	0x00e00000
	...
   13018:	mvn	r0, r0
   1301c:	lsr	r0, r0, #31
   13020:	bx	lr
   13024:	cmp	r2, #0
   13028:	bic	r3, r2, #-2147483648	; 0x80000000
   1302c:	str	r4, [sp, #-8]!
   13030:	movwge	r2, #50860	; 0xc6ac
   13034:	movwlt	r2, #50864	; 0xc6b0
   13038:	str	lr, [sp, #4]
   1303c:	mov	r4, r0
   13040:	movtge	r2, #1
   13044:	movtlt	r2, #1
   13048:	bl	112c0 <snprintf@plt>
   1304c:	mov	r0, r4
   13050:	ldr	r4, [sp]
   13054:	add	sp, sp, #4
   13058:	pop	{pc}		; (ldr pc, [sp], #4)
   1305c:	ldr	r3, [r0, #80]	; 0x50
   13060:	strd	r4, [sp, #-16]!
   13064:	mov	r5, r0
   13068:	str	r6, [sp, #8]
   1306c:	str	lr, [sp, #12]
   13070:	cmp	r3, #0
   13074:	beq	13098 <__assert_fail@plt+0x1c94>
   13078:	ldr	r4, [r5, #76]	; 0x4c
   1307c:	cmp	r4, #0
   13080:	movne	r0, #0
   13084:	beq	130c0 <__assert_fail@plt+0x1cbc>
   13088:	ldrd	r4, [sp]
   1308c:	ldr	r6, [sp, #8]
   13090:	add	sp, sp, #12
   13094:	pop	{pc}		; (ldr pc, [sp], #4)
   13098:	ldr	r0, [r0, #56]	; 0x38
   1309c:	cmp	r1, #0
   130a0:	addne	r0, r0, #8
   130a4:	addeq	r0, r0, #80	; 0x50
   130a8:	bl	1a0c0 <argp_parse@@Base+0x2424>
   130ac:	cmp	r0, #0
   130b0:	str	r0, [r5, #80]	; 0x50
   130b4:	bne	13078 <__assert_fail@plt+0x1c74>
   130b8:	mvn	r0, #0
   130bc:	b	13088 <__assert_fail@plt+0x1c84>
   130c0:	ldr	r0, [r5, #72]	; 0x48
   130c4:	bl	1a0c0 <argp_parse@@Base+0x2424>
   130c8:	cmp	r0, #0
   130cc:	str	r0, [r5, #76]	; 0x4c
   130d0:	beq	130b8 <__assert_fail@plt+0x1cb4>
   130d4:	mov	r1, r4
   130d8:	ldr	r2, [r5, #72]	; 0x48
   130dc:	bl	112e4 <memset@plt>
   130e0:	mov	r0, r4
   130e4:	ldrd	r4, [sp]
   130e8:	ldr	r6, [sp, #8]
   130ec:	add	sp, sp, #12
   130f0:	pop	{pc}		; (ldr pc, [sp], #4)
   130f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   130f8:	mov	r4, r0
   130fc:	mov	r5, r2
   13100:	strd	r6, [sp, #8]
   13104:	mov	r6, r3
   13108:	ldr	r3, [r0, #80]	; 0x50
   1310c:	str	r8, [sp, #16]
   13110:	mov	r8, r1
   13114:	ldrb	r1, [sp, #24]
   13118:	str	lr, [sp, #20]
   1311c:	cmp	r3, #0
   13120:	beq	13170 <__assert_fail@plt+0x1d6c>
   13124:	ldr	r7, [r4, #76]	; 0x4c
   13128:	cmp	r7, #0
   1312c:	beq	13198 <__assert_fail@plt+0x1d94>
   13130:	ldr	r2, [r4, #56]	; 0x38
   13134:	add	r3, r5, r6
   13138:	cmp	r2, r3
   1313c:	bcc	13190 <__assert_fail@plt+0x1d8c>
   13140:	ldr	r0, [r4, #80]	; 0x50
   13144:	mov	r2, r6
   13148:	mov	r1, r8
   1314c:	add	r0, r0, #8
   13150:	add	r0, r0, r5
   13154:	bl	11158 <memcpy@plt>
   13158:	mov	r0, #0
   1315c:	ldrd	r4, [sp]
   13160:	ldrd	r6, [sp, #8]
   13164:	ldr	r8, [sp, #16]
   13168:	add	sp, sp, #20
   1316c:	pop	{pc}		; (ldr pc, [sp], #4)
   13170:	ldr	r0, [r0, #56]	; 0x38
   13174:	cmp	r1, #0
   13178:	addne	r0, r0, #8
   1317c:	addeq	r0, r0, #80	; 0x50
   13180:	bl	1a0c0 <argp_parse@@Base+0x2424>
   13184:	cmp	r0, #0
   13188:	str	r0, [r4, #80]	; 0x50
   1318c:	bne	13124 <__assert_fail@plt+0x1d20>
   13190:	mvn	r0, #0
   13194:	b	1315c <__assert_fail@plt+0x1d58>
   13198:	ldr	r0, [r4, #72]	; 0x48
   1319c:	bl	1a0c0 <argp_parse@@Base+0x2424>
   131a0:	cmp	r0, #0
   131a4:	str	r0, [r4, #76]	; 0x4c
   131a8:	beq	13190 <__assert_fail@plt+0x1d8c>
   131ac:	mov	r1, r7
   131b0:	ldr	r2, [r4, #72]	; 0x48
   131b4:	bl	112e4 <memset@plt>
   131b8:	b	13130 <__assert_fail@plt+0x1d2c>
   131bc:	str	r1, [r0, #8]
   131c0:	bx	lr
   131c4:	push	{lr}		; (str lr, [sp, #-4]!)
   131c8:	sub	sp, sp, #20
   131cc:	ldr	r0, [r0]
   131d0:	str	r3, [sp]
   131d4:	add	r3, sp, #12
   131d8:	str	r2, [sp, #12]
   131dc:	mov	r2, r1
   131e0:	mov	r1, #1
   131e4:	bl	110ec <setsockopt@plt>
   131e8:	add	sp, sp, #20
   131ec:	pop	{pc}		; (ldr pc, [sp], #4)
   131f0:	str	r1, [r0, #20]
   131f4:	bx	lr
   131f8:	str	r4, [sp, #-8]!
   131fc:	mov	r4, r0
   13200:	ldr	r0, [r0, #80]	; 0x50
   13204:	str	lr, [sp, #4]
   13208:	cmp	r0, #0
   1320c:	beq	1321c <__assert_fail@plt+0x1e18>
   13210:	bl	18cd4 <argp_parse@@Base+0x1038>
   13214:	mov	r3, #0
   13218:	str	r3, [r4, #80]	; 0x50
   1321c:	ldr	r0, [r4, #76]	; 0x4c
   13220:	cmp	r0, #0
   13224:	beq	13234 <__assert_fail@plt+0x1e30>
   13228:	bl	18cd4 <argp_parse@@Base+0x1038>
   1322c:	mov	r3, #0
   13230:	str	r3, [r4, #76]	; 0x4c
   13234:	ldr	r4, [sp]
   13238:	add	sp, sp, #4
   1323c:	pop	{pc}		; (ldr pc, [sp], #4)
   13240:	strd	r4, [sp, #-12]!
   13244:	mov	r4, r1
   13248:	mov	r5, r0
   1324c:	str	lr, [sp, #8]
   13250:	sub	sp, sp, #12
   13254:	mov	r1, #0
   13258:	mov	r0, sp
   1325c:	bl	111e8 <gettimeofday@plt>
   13260:	cmn	r4, #1
   13264:	moveq	r0, #0
   13268:	beq	13294 <__assert_fail@plt+0x1e90>
   1326c:	ldm	sp, {r0, r3}
   13270:	ldr	r2, [r5, #4]
   13274:	sub	r3, r3, r2
   13278:	cmp	r3, #0
   1327c:	ldr	r3, [r5]
   13280:	sublt	r0, r0, #1
   13284:	sub	r0, r0, r3
   13288:	cmp	r4, r0
   1328c:	movgt	r0, #0
   13290:	movle	r0, #1
   13294:	add	sp, sp, #12
   13298:	ldrd	r4, [sp]
   1329c:	add	sp, sp, #8
   132a0:	pop	{pc}		; (ldr pc, [sp], #4)
   132a4:	mov	ip, #0
   132a8:	strd	r4, [sp, #-12]!
   132ac:	mov	r3, #46	; 0x2e
   132b0:	str	lr, [sp, #8]
   132b4:	sub	sp, sp, #324	; 0x144
   132b8:	mov	lr, #1
   132bc:	add	r2, sp, #16
   132c0:	mov	r4, r0
   132c4:	str	ip, [sp]
   132c8:	mov	r5, r1
   132cc:	stmib	sp, {ip, lr}
   132d0:	bl	1132c <getnameinfo@plt>
   132d4:	subs	r3, r0, #0
   132d8:	bne	13380 <__assert_fail@plt+0x1f7c>
   132dc:	movw	r3, #58444	; 0xe44c
   132e0:	movt	r3, #2
   132e4:	ldr	r3, [r3]
   132e8:	ands	r3, r3, #4
   132ec:	bne	13370 <__assert_fail@plt+0x1f6c>
   132f0:	mov	ip, #40	; 0x28
   132f4:	mov	r1, r5
   132f8:	str	r3, [sp]
   132fc:	mov	r0, r4
   13300:	add	r2, sp, #64	; 0x40
   13304:	stmib	sp, {r3, ip}
   13308:	mov	r3, #256	; 0x100
   1330c:	bl	1132c <getnameinfo@plt>
   13310:	cmp	r0, #0
   13314:	add	r0, sp, #16
   13318:	bne	133bc <__assert_fail@plt+0x1fb8>
   1331c:	bl	11290 <strlen@plt>
   13320:	mov	r4, r0
   13324:	add	r0, sp, #64	; 0x40
   13328:	bl	11290 <strlen@plt>
   1332c:	add	r4, r4, r0
   13330:	add	r4, r4, #4
   13334:	mov	r0, r4
   13338:	bl	19a64 <argp_parse@@Base+0x1dc8>
   1333c:	add	r3, sp, #16
   13340:	movw	r2, #50872	; 0xc6b8
   13344:	movt	r2, #1
   13348:	mov	r1, r4
   1334c:	str	r3, [sp]
   13350:	add	r3, sp, #64	; 0x40
   13354:	mov	r5, r0
   13358:	bl	112c0 <snprintf@plt>
   1335c:	mov	r0, r5
   13360:	add	sp, sp, #324	; 0x144
   13364:	ldrd	r4, [sp]
   13368:	add	sp, sp, #8
   1336c:	pop	{pc}		; (ldr pc, [sp], #4)
   13370:	add	r0, sp, #16
   13374:	bl	19fd0 <argp_parse@@Base+0x2334>
   13378:	mov	r5, r0
   1337c:	b	1335c <__assert_fail@plt+0x1f58>
   13380:	cmn	r3, #11
   13384:	beq	133c8 <__assert_fail@plt+0x1fc4>
   13388:	bl	11140 <gai_strerror@plt>
   1338c:	mov	r2, r0
   13390:	movw	r3, #58328	; 0xe3d8
   13394:	movt	r3, #2
   13398:	movw	r1, #49516	; 0xc16c
   1339c:	movt	r1, #1
   133a0:	ldr	r0, [r3]
   133a4:	bl	112a8 <fprintf@plt>
   133a8:	movw	r0, #49540	; 0xc184
   133ac:	movt	r0, #1
   133b0:	bl	19fd0 <argp_parse@@Base+0x2334>
   133b4:	mov	r5, r0
   133b8:	b	1335c <__assert_fail@plt+0x1f58>
   133bc:	bl	19fd0 <argp_parse@@Base+0x2334>
   133c0:	mov	r5, r0
   133c4:	b	1335c <__assert_fail@plt+0x1f58>
   133c8:	bl	112b4 <__errno_location@plt>
   133cc:	ldr	r0, [r0]
   133d0:	bl	11230 <strerror@plt>
   133d4:	mov	r2, r0
   133d8:	b	13390 <__assert_fail@plt+0x1f8c>
   133dc:	movw	r3, #58444	; 0xe44c
   133e0:	movt	r3, #2
   133e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   133e8:	ldr	r3, [r3]
   133ec:	strd	r6, [sp, #8]
   133f0:	str	lr, [sp, #16]
   133f4:	sub	sp, sp, #20
   133f8:	str	r0, [sp, #12]
   133fc:	tst	r3, #4
   13400:	bne	1347c <__assert_fail@plt+0x2078>
   13404:	mov	r2, #2
   13408:	mov	r1, #4
   1340c:	add	r0, sp, #12
   13410:	bl	111a0 <gethostbyaddr@plt>
   13414:	subs	r6, r0, #0
   13418:	ldr	r0, [sp, #12]
   1341c:	beq	1347c <__assert_fail@plt+0x2078>
   13420:	bl	1117c <inet_ntoa@plt>
   13424:	mov	r7, r0
   13428:	bl	11290 <strlen@plt>
   1342c:	mov	r4, r0
   13430:	ldr	r0, [r6]
   13434:	cmp	r0, #0
   13438:	addeq	r4, r4, #1
   1343c:	beq	1344c <__assert_fail@plt+0x2048>
   13440:	bl	11290 <strlen@plt>
   13444:	add	r4, r4, #5
   13448:	add	r4, r4, r0
   1344c:	mov	r0, r4
   13450:	bl	19a64 <argp_parse@@Base+0x1dc8>
   13454:	ldr	r3, [r6]
   13458:	mov	r5, r0
   1345c:	cmp	r3, #0
   13460:	beq	134a0 <__assert_fail@plt+0x209c>
   13464:	mov	r1, r4
   13468:	movw	r2, #50872	; 0xc6b8
   1346c:	movt	r2, #1
   13470:	str	r7, [sp]
   13474:	bl	112c0 <snprintf@plt>
   13478:	b	13488 <__assert_fail@plt+0x2084>
   1347c:	bl	1117c <inet_ntoa@plt>
   13480:	bl	19fd0 <argp_parse@@Base+0x2334>
   13484:	mov	r5, r0
   13488:	mov	r0, r5
   1348c:	add	sp, sp, #20
   13490:	ldrd	r4, [sp]
   13494:	ldrd	r6, [sp, #8]
   13498:	add	sp, sp, #16
   1349c:	pop	{pc}		; (ldr pc, [sp], #4)
   134a0:	mov	r3, r7
   134a4:	mov	r1, r4
   134a8:	movw	r2, #48748	; 0xbe6c
   134ac:	movt	r2, #1
   134b0:	bl	112c0 <snprintf@plt>
   134b4:	b	13488 <__assert_fail@plt+0x2084>
   134b8:	ldr	r3, [r0, #12]
   134bc:	strd	r4, [sp, #-16]!
   134c0:	ldr	r2, [r1, #12]
   134c4:	str	r6, [sp, #8]
   134c8:	str	lr, [sp, #12]
   134cc:	cmp	r3, r2
   134d0:	beq	13530 <__assert_fail@plt+0x212c>
   134d4:	mov	r5, r1
   134d8:	mov	r4, r0
   134dc:	mov	r1, r2
   134e0:	mov	r0, r3
   134e4:	bl	134b8 <__assert_fail@plt+0x20b4>
   134e8:	cmp	r0, #0
   134ec:	bne	13520 <__assert_fail@plt+0x211c>
   134f0:	ldr	r3, [r5, #8]
   134f4:	ldr	r0, [r4, #8]
   134f8:	mvn	r2, r3
   134fc:	lsr	r2, r2, #31
   13500:	cmp	r2, r0, lsr #31
   13504:	subne	r0, r0, r3
   13508:	subeq	r0, r3, r0
   1350c:	cmp	r0, #0
   13510:	bne	13520 <__assert_fail@plt+0x211c>
   13514:	ldr	r0, [r4, #4]
   13518:	ldr	r3, [r5, #4]
   1351c:	sub	r0, r3, r0
   13520:	ldrd	r4, [sp]
   13524:	ldr	r6, [sp, #8]
   13528:	add	sp, sp, #12
   1352c:	pop	{pc}		; (ldr pc, [sp], #4)
   13530:	ldr	lr, [r1, #4]
   13534:	ldr	r3, [r1, #8]
   13538:	ldr	r2, [r0, #8]
   1353c:	ldr	ip, [r0, #4]
   13540:	mvn	r1, r3
   13544:	lsr	r1, r1, #31
   13548:	ldrd	r4, [sp]
   1354c:	cmp	r1, r2, lsr #31
   13550:	ldr	r6, [sp, #8]
   13554:	add	sp, sp, #12
   13558:	subne	r0, r2, r3
   1355c:	subeq	r0, r3, r2
   13560:	cmp	r0, #0
   13564:	subeq	r0, lr, ip
   13568:	pop	{pc}		; (ldr pc, [sp], #4)
   1356c:	strd	r4, [sp, #-16]!
   13570:	subs	r5, r0, #0
   13574:	mov	r4, r1
   13578:	str	r6, [sp, #8]
   1357c:	str	lr, [sp, #12]
   13580:	beq	13594 <__assert_fail@plt+0x2190>
   13584:	mov	r1, #10
   13588:	bl	1129c <strchr@plt>
   1358c:	adds	r5, r0, #0
   13590:	movne	r5, #1
   13594:	cmp	r4, #0
   13598:	beq	135c4 <__assert_fail@plt+0x21c0>
   1359c:	ldr	r3, [r4]
   135a0:	cmp	r3, #0
   135a4:	beq	135c4 <__assert_fail@plt+0x21c0>
   135a8:	ldr	r0, [r3, #8]
   135ac:	ldr	r1, [r3, #16]
   135b0:	bl	1356c <__assert_fail@plt+0x2168>
   135b4:	ldr	r3, [r4, #16]!
   135b8:	add	r5, r5, r0
   135bc:	cmp	r3, #0
   135c0:	bne	135a8 <__assert_fail@plt+0x21a4>
   135c4:	mov	r0, r5
   135c8:	ldrd	r4, [sp]
   135cc:	ldr	r6, [sp, #8]
   135d0:	add	sp, sp, #12
   135d4:	pop	{pc}		; (ldr pc, [sp], #4)
   135d8:	ldr	r3, [r0, #16]
   135dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   135e0:	ldr	r4, [r0]
   135e4:	strd	r6, [sp, #8]
   135e8:	strd	r8, [sp, #16]
   135ec:	strd	sl, [sp, #24]
   135f0:	str	lr, [sp, #32]
   135f4:	sub	sp, sp, #52	; 0x34
   135f8:	stm	sp, {r0, r3}
   135fc:	mov	r0, #16
   13600:	str	r1, [sp, #8]
   13604:	bl	1a0c0 <argp_parse@@Base+0x2424>
   13608:	subs	fp, r0, #0
   1360c:	beq	13c74 <__assert_fail@plt+0x2870>
   13610:	mov	r3, #0
   13614:	cmp	r4, r3
   13618:	str	r3, [fp, #4]
   1361c:	str	r3, [fp, #12]
   13620:	beq	1387c <__assert_fail@plt+0x2478>
   13624:	ldr	r0, [r4, #12]
   13628:	ands	r0, r0, #4
   1362c:	bne	13cb0 <__assert_fail@plt+0x28ac>
   13630:	mov	r9, r0
   13634:	add	r5, r4, #24
   13638:	mov	r8, r0
   1363c:	b	1368c <__assert_fail@plt+0x2288>
   13640:	ldr	r3, [r5, #-12]
   13644:	tst	r3, #4
   13648:	bne	13658 <__assert_fail@plt+0x2254>
   1364c:	add	r9, r9, #1
   13650:	str	r9, [fp, #4]
   13654:	ldr	r3, [r5, #-12]
   13658:	tst	r3, #8
   1365c:	bne	13688 <__assert_fail@plt+0x2284>
   13660:	ldr	r6, [r5, #-20]	; 0xffffffec
   13664:	sub	r3, r6, #1
   13668:	cmp	r3, #254	; 0xfe
   1366c:	bhi	13688 <__assert_fail@plt+0x2284>
   13670:	bl	11260 <__ctype_b_loc@plt>
   13674:	ldr	r3, [r0]
   13678:	lsl	r6, r6, #1
   1367c:	ldrh	r3, [r3, r6]
   13680:	tst	r3, #16384	; 0x4000
   13684:	addne	r8, r8, #1
   13688:	add	r5, r5, #24
   1368c:	ldr	r3, [r5, #-20]	; 0xffffffec
   13690:	cmp	r3, #0
   13694:	bne	13640 <__assert_fail@plt+0x223c>
   13698:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1369c:	cmp	r3, #0
   136a0:	bne	13640 <__assert_fail@plt+0x223c>
   136a4:	ldr	r3, [r5, #-8]
   136a8:	cmp	r3, #0
   136ac:	bne	13640 <__assert_fail@plt+0x223c>
   136b0:	ldr	sl, [r5, #-4]
   136b4:	cmp	sl, #0
   136b8:	bne	13640 <__assert_fail@plt+0x223c>
   136bc:	rsb	r9, r9, r9, lsl #3
   136c0:	lsl	r0, r9, #2
   136c4:	bl	1a0c0 <argp_parse@@Base+0x2424>
   136c8:	str	r0, [fp]
   136cc:	add	r0, r8, #1
   136d0:	bl	1a0c0 <argp_parse@@Base+0x2424>
   136d4:	ldr	r5, [fp]
   136d8:	mov	r7, r0
   136dc:	str	r0, [fp, #8]
   136e0:	cmp	r5, #0
   136e4:	cmpne	r0, #0
   136e8:	beq	13c18 <__assert_fail@plt+0x2814>
   136ec:	ldr	r2, [fp, #4]
   136f0:	movw	r3, #37449	; 0x9249
   136f4:	movt	r3, #2340	; 0x924
   136f8:	cmp	r2, r3
   136fc:	bhi	13c38 <__assert_fail@plt+0x2834>
   13700:	mov	r6, r0
   13704:	mov	r8, sl
   13708:	ldr	r3, [r4, #4]
   1370c:	mov	r0, sl
   13710:	add	r5, r5, #28
   13714:	str	fp, [sp, #12]
   13718:	ldr	sl, [sp, #8]
   1371c:	mov	fp, r7
   13720:	cmp	r3, #0
   13724:	ldr	r7, [r4, #20]
   13728:	bne	13738 <__assert_fail@plt+0x2334>
   1372c:	ldr	ip, [r4]
   13730:	cmp	ip, #0
   13734:	beq	13818 <__assert_fail@plt+0x2414>
   13738:	cmp	r7, #0
   1373c:	str	r4, [r5, #-28]	; 0xffffffe4
   13740:	str	r8, [r5, #-24]	; 0xffffffe8
   13744:	str	r6, [r5, #-20]	; 0xffffffec
   13748:	bne	1375c <__assert_fail@plt+0x2358>
   1374c:	ldr	r2, [r4]
   13750:	orrs	r3, r2, r3
   13754:	movne	r7, r0
   13758:	beq	13838 <__assert_fail@plt+0x2434>
   1375c:	ldr	r2, [sp]
   13760:	mov	r3, #0
   13764:	str	r7, [r5, #-16]
   13768:	str	sl, [r5, #-12]
   1376c:	str	r2, [r5, #-8]
   13770:	add	r3, r3, #1
   13774:	str	r3, [r5, #-24]	; 0xffffffe8
   13778:	ldr	r3, [r4, #12]
   1377c:	tst	r3, #8
   13780:	bne	137e8 <__assert_fail@plt+0x23e4>
   13784:	ldr	r9, [r4, #4]
   13788:	sub	r3, r9, #1
   1378c:	cmp	r3, #254	; 0xfe
   13790:	bhi	137e8 <__assert_fail@plt+0x23e4>
   13794:	bl	11260 <__ctype_b_loc@plt>
   13798:	ldr	r0, [r0]
   1379c:	lsl	r3, r9, #1
   137a0:	ldrh	r3, [r0, r3]
   137a4:	tst	r3, #16384	; 0x4000
   137a8:	beq	137e8 <__assert_fail@plt+0x23e4>
   137ac:	cmp	fp, r6
   137b0:	uxtb	r9, r9
   137b4:	bcs	137e4 <__assert_fail@plt+0x23e0>
   137b8:	ldrb	r3, [fp]
   137bc:	cmp	r3, r9
   137c0:	beq	137e8 <__assert_fail@plt+0x23e4>
   137c4:	mov	r3, fp
   137c8:	sub	r0, r6, #1
   137cc:	b	137dc <__assert_fail@plt+0x23d8>
   137d0:	ldrb	ip, [r3, #1]!
   137d4:	cmp	ip, r9
   137d8:	beq	137e8 <__assert_fail@plt+0x23e4>
   137dc:	cmp	r0, r3
   137e0:	bne	137d0 <__assert_fail@plt+0x23cc>
   137e4:	strb	r9, [r6], #1
   137e8:	add	r4, r4, #24
   137ec:	ldr	r0, [r4, #4]
   137f0:	cmp	r0, #0
   137f4:	bne	13804 <__assert_fail@plt+0x2400>
   137f8:	ldr	r3, [r4]
   137fc:	cmp	r3, #0
   13800:	beq	13840 <__assert_fail@plt+0x243c>
   13804:	ldr	r3, [r4, #12]
   13808:	tst	r3, #4
   1380c:	beq	13864 <__assert_fail@plt+0x2460>
   13810:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13814:	b	13770 <__assert_fail@plt+0x236c>
   13818:	ldr	ip, [r4, #16]
   1381c:	cmp	ip, #0
   13820:	beq	1386c <__assert_fail@plt+0x2468>
   13824:	cmp	r7, #0
   13828:	str	r4, [r5, #-28]	; 0xffffffe4
   1382c:	str	r3, [r5, #-24]	; 0xffffffe8
   13830:	str	r6, [r5, #-20]	; 0xffffffec
   13834:	bne	1375c <__assert_fail@plt+0x2358>
   13838:	add	r7, r0, #1
   1383c:	b	1375c <__assert_fail@plt+0x2358>
   13840:	ldr	r3, [r4, #16]
   13844:	cmp	r3, #0
   13848:	bne	13804 <__assert_fail@plt+0x2400>
   1384c:	ldr	r3, [r4, #20]
   13850:	cmp	r3, #0
   13854:	bne	13804 <__assert_fail@plt+0x2400>
   13858:	add	r5, r5, #28
   1385c:	mov	r0, r7
   13860:	b	13720 <__assert_fail@plt+0x231c>
   13864:	mov	r3, r0
   13868:	b	13858 <__assert_fail@plt+0x2454>
   1386c:	cmp	r7, #0
   13870:	bne	139b8 <__assert_fail@plt+0x25b4>
   13874:	ldr	fp, [sp, #12]
   13878:	strb	r3, [r6]
   1387c:	ldr	sl, [sp, #4]
   13880:	cmp	sl, #0
   13884:	beq	13998 <__assert_fail@plt+0x2594>
   13888:	ldr	r0, [sl]
   1388c:	cmp	r0, #0
   13890:	beq	13998 <__assert_fail@plt+0x2594>
   13894:	movw	r3, #37449	; 0x9249
   13898:	movt	r3, #2340	; 0x924
   1389c:	str	r3, [sp, #28]
   138a0:	add	r3, fp, #12
   138a4:	str	r3, [sp, #44]	; 0x2c
   138a8:	ldr	r6, [sl, #8]
   138ac:	ldr	r5, [sl, #12]
   138b0:	cmp	r5, #0
   138b4:	bne	138c0 <__assert_fail@plt+0x24bc>
   138b8:	cmp	r6, #0
   138bc:	beq	13c00 <__assert_fail@plt+0x27fc>
   138c0:	ldr	r3, [sp]
   138c4:	mov	r0, #28
   138c8:	ldr	r4, [r3, #16]
   138cc:	bl	1a0c0 <argp_parse@@Base+0x2424>
   138d0:	subs	r1, r0, #0
   138d4:	beq	139c8 <__assert_fail@plt+0x25c4>
   138d8:	ldr	r2, [sp]
   138dc:	sub	r4, sl, r4
   138e0:	asr	r4, r4, #4
   138e4:	str	r6, [r1]
   138e8:	ldr	r3, [sp, #8]
   138ec:	strd	r4, [r1, #4]
   138f0:	cmp	r3, #0
   138f4:	str	r3, [r1, #12]
   138f8:	ldrne	r3, [r3, #20]
   138fc:	str	r2, [r1, #16]
   13900:	ldr	r2, [fp, #12]
   13904:	ldr	r0, [sl]
   13908:	addne	r3, r3, #1
   1390c:	str	r1, [fp, #12]
   13910:	str	r3, [r1, #20]
   13914:	str	r2, [r1, #24]
   13918:	bl	135d8 <__assert_fail@plt+0x21d4>
   1391c:	ldr	r3, [fp, #12]
   13920:	mov	r4, r0
   13924:	cmp	r3, #0
   13928:	bne	13934 <__assert_fail@plt+0x2530>
   1392c:	b	13c08 <__assert_fail@plt+0x2804>
   13930:	mov	r3, r2
   13934:	ldr	r2, [r3, #24]
   13938:	cmp	r2, #0
   1393c:	bne	13930 <__assert_fail@plt+0x252c>
   13940:	add	r3, r3, #24
   13944:	ldr	r2, [r4, #4]
   13948:	ldr	r1, [r4, #12]
   1394c:	cmp	r2, #0
   13950:	str	r1, [r3]
   13954:	mov	r3, #0
   13958:	str	r3, [r4, #12]
   1395c:	beq	13984 <__assert_fail@plt+0x2580>
   13960:	ldr	r3, [fp, #4]
   13964:	cmp	r3, #0
   13968:	bne	139d0 <__assert_fail@plt+0x25cc>
   1396c:	ldr	r1, [r4]
   13970:	str	r2, [fp, #4]
   13974:	ldr	r2, [r4, #8]
   13978:	str	r1, [fp]
   1397c:	str	r2, [fp, #8]
   13980:	str	r3, [r4, #4]
   13984:	mov	r0, r4
   13988:	bl	18cd4 <argp_parse@@Base+0x1038>
   1398c:	ldr	r0, [sl, #16]!
   13990:	cmp	r0, #0
   13994:	bne	138a8 <__assert_fail@plt+0x24a4>
   13998:	mov	r0, fp
   1399c:	add	sp, sp, #52	; 0x34
   139a0:	ldrd	r4, [sp]
   139a4:	ldrd	r6, [sp, #8]
   139a8:	ldrd	r8, [sp, #16]
   139ac:	ldrd	sl, [sp, #24]
   139b0:	add	sp, sp, #32
   139b4:	pop	{pc}		; (ldr pc, [sp], #4)
   139b8:	str	r4, [r5, #-28]	; 0xffffffe4
   139bc:	str	r3, [r5, #-24]	; 0xffffffe8
   139c0:	str	r6, [r5, #-20]	; 0xffffffec
   139c4:	b	1375c <__assert_fail@plt+0x2358>
   139c8:	ldr	r0, [sl]
   139cc:	b	13918 <__assert_fail@plt+0x2514>
   139d0:	add	r3, r2, r3
   139d4:	rsb	r0, r3, r3, lsl #3
   139d8:	str	r3, [sp, #12]
   139dc:	lsl	r0, r0, #2
   139e0:	bl	1a0c0 <argp_parse@@Base+0x2424>
   139e4:	mov	r5, r0
   139e8:	ldr	r0, [fp, #8]
   139ec:	str	r5, [sp, #4]
   139f0:	bl	11290 <strlen@plt>
   139f4:	mov	r8, r0
   139f8:	ldr	r0, [r4, #8]
   139fc:	bl	11290 <strlen@plt>
   13a00:	add	r0, r8, r0
   13a04:	add	r0, r0, #1
   13a08:	bl	1a0c0 <argp_parse@@Base+0x2424>
   13a0c:	cmp	r5, #0
   13a10:	cmpne	r0, #0
   13a14:	mov	r9, r0
   13a18:	beq	13c58 <__assert_fail@plt+0x2854>
   13a1c:	ldr	r3, [sp, #12]
   13a20:	ldr	r2, [sp, #28]
   13a24:	cmp	r3, r2
   13a28:	bhi	13c94 <__assert_fail@plt+0x2890>
   13a2c:	ldm	fp, {r1, r6}
   13a30:	ldr	r0, [sp, #4]
   13a34:	rsb	r5, r6, r6, lsl #3
   13a38:	str	r1, [sp, #16]
   13a3c:	lsl	r5, r5, #2
   13a40:	mov	r2, r5
   13a44:	bl	11254 <mempcpy@plt>
   13a48:	ldm	r4, {r1, r3}
   13a4c:	rsb	r2, r3, r3, lsl #3
   13a50:	str	r3, [sp, #20]
   13a54:	lsl	r2, r2, #2
   13a58:	bl	11158 <memcpy@plt>
   13a5c:	ldr	r7, [fp, #8]
   13a60:	mov	r2, r8
   13a64:	mov	r0, r9
   13a68:	mov	r1, r7
   13a6c:	bl	11158 <memcpy@plt>
   13a70:	cmp	r6, #0
   13a74:	ldr	r3, [sp, #20]
   13a78:	beq	13c10 <__assert_fail@plt+0x280c>
   13a7c:	ldr	r1, [sp, #4]
   13a80:	subs	r6, r6, #1
   13a84:	add	r1, r1, #28
   13a88:	ldr	r2, [r1, #-20]	; 0xffffffec
   13a8c:	sub	r2, r2, r7
   13a90:	add	r2, r9, r2
   13a94:	str	r2, [r1, #-20]	; 0xffffffec
   13a98:	bne	13a80 <__assert_fail@plt+0x267c>
   13a9c:	ldr	r2, [sp, #4]
   13aa0:	add	r5, r2, r5
   13aa4:	add	r2, r9, r8
   13aa8:	cmp	r3, #0
   13aac:	ldr	r1, [r4, #8]
   13ab0:	str	r2, [sp, #20]
   13ab4:	beq	13b54 <__assert_fail@plt+0x2750>
   13ab8:	sub	r0, r2, #1
   13abc:	add	r5, r5, #28
   13ac0:	mov	r7, r2
   13ac4:	str	r0, [sp, #24]
   13ac8:	strd	sl, [sp, #36]	; 0x24
   13acc:	mov	sl, r1
   13ad0:	mov	fp, r3
   13ad4:	str	r4, [sp, #32]
   13ad8:	str	r7, [r5, #-20]	; 0xffffffec
   13adc:	ldr	r6, [r5, #-24]	; 0xffffffe8
   13ae0:	ldr	r8, [r5, #-28]	; 0xffffffe4
   13ae4:	cmp	r6, #0
   13ae8:	beq	13b3c <__assert_fail@plt+0x2738>
   13aec:	ldr	r3, [r8, #12]
   13af0:	tst	r3, #8
   13af4:	bne	13b30 <__assert_fail@plt+0x272c>
   13af8:	ldr	r4, [r8, #4]
   13afc:	sub	r3, r4, #1
   13b00:	cmp	r3, #254	; 0xfe
   13b04:	bhi	13b30 <__assert_fail@plt+0x272c>
   13b08:	bl	11260 <__ctype_b_loc@plt>
   13b0c:	ldr	r1, [r0]
   13b10:	lsl	r2, r4, #1
   13b14:	ldrb	r3, [sl]
   13b18:	ldrh	r2, [r1, r2]
   13b1c:	sub	r4, r3, r4
   13b20:	clz	r4, r4
   13b24:	lsr	r4, r4, #5
   13b28:	ands	r2, r4, r2, lsr #14
   13b2c:	bne	13bbc <__assert_fail@plt+0x27b8>
   13b30:	subs	r6, r6, #1
   13b34:	add	r8, r8, #24
   13b38:	bne	13aec <__assert_fail@plt+0x26e8>
   13b3c:	subs	fp, fp, #1
   13b40:	add	r5, r5, #28
   13b44:	bne	13ad8 <__assert_fail@plt+0x26d4>
   13b48:	add	r4, sp, #32
   13b4c:	mov	r2, r7
   13b50:	ldm	r4, {r4, sl, fp}
   13b54:	mov	r3, #0
   13b58:	strb	r3, [r2]
   13b5c:	ldr	r0, [sp, #16]
   13b60:	bl	18cd4 <argp_parse@@Base+0x1038>
   13b64:	ldr	r0, [fp, #8]
   13b68:	bl	18cd4 <argp_parse@@Base+0x1038>
   13b6c:	ldr	r3, [sp, #4]
   13b70:	ldr	r0, [r4, #12]
   13b74:	str	r3, [fp]
   13b78:	ldr	r3, [sp, #12]
   13b7c:	cmp	r0, #0
   13b80:	str	r3, [fp, #4]
   13b84:	str	r9, [fp, #8]
   13b88:	beq	13b9c <__assert_fail@plt+0x2798>
   13b8c:	ldr	r5, [r0, #24]
   13b90:	bl	18cd4 <argp_parse@@Base+0x1038>
   13b94:	subs	r0, r5, #0
   13b98:	bne	13b8c <__assert_fail@plt+0x2788>
   13b9c:	ldr	r3, [r4, #4]
   13ba0:	cmp	r3, #0
   13ba4:	beq	13984 <__assert_fail@plt+0x2580>
   13ba8:	ldr	r0, [r4]
   13bac:	bl	18cd4 <argp_parse@@Base+0x1038>
   13bb0:	ldr	r0, [r4, #8]
   13bb4:	bl	18cd4 <argp_parse@@Base+0x1038>
   13bb8:	b	13984 <__assert_fail@plt+0x2580>
   13bbc:	ldr	r2, [sp, #20]
   13bc0:	cmp	r9, r2
   13bc4:	bcs	13bf4 <__assert_fail@plt+0x27f0>
   13bc8:	ldrb	r2, [r9]
   13bcc:	cmp	r2, r3
   13bd0:	beq	13bf8 <__assert_fail@plt+0x27f4>
   13bd4:	mov	r2, r9
   13bd8:	ldr	r0, [sp, #24]
   13bdc:	b	13bec <__assert_fail@plt+0x27e8>
   13be0:	ldrb	r1, [r2, #1]!
   13be4:	cmp	r1, r3
   13be8:	beq	13bf8 <__assert_fail@plt+0x27f4>
   13bec:	cmp	r0, r2
   13bf0:	bne	13be0 <__assert_fail@plt+0x27dc>
   13bf4:	strb	r3, [r7], #1
   13bf8:	add	sl, sl, #1
   13bfc:	b	13b30 <__assert_fail@plt+0x272c>
   13c00:	ldr	r1, [sp, #8]
   13c04:	b	13918 <__assert_fail@plt+0x2514>
   13c08:	ldr	r3, [sp, #44]	; 0x2c
   13c0c:	b	13944 <__assert_fail@plt+0x2540>
   13c10:	ldr	r5, [sp, #4]
   13c14:	b	13aa4 <__assert_fail@plt+0x26a0>
   13c18:	movw	r3, #50880	; 0xc6c0
   13c1c:	movt	r3, #1
   13c20:	movw	r1, #51048	; 0xc768
   13c24:	movt	r1, #1
   13c28:	movw	r0, #51080	; 0xc788
   13c2c:	movt	r0, #1
   13c30:	movw	r2, #474	; 0x1da
   13c34:	bl	11404 <__assert_fail@plt>
   13c38:	movw	r3, #50880	; 0xc6c0
   13c3c:	movt	r3, #1
   13c40:	movw	r1, #51048	; 0xc768
   13c44:	movt	r1, #1
   13c48:	movw	r0, #51116	; 0xc7ac
   13c4c:	movt	r0, #1
   13c50:	mov	r2, #476	; 0x1dc
   13c54:	bl	11404 <__assert_fail@plt>
   13c58:	movw	r1, #51048	; 0xc768
   13c5c:	movt	r1, #1
   13c60:	ldr	r3, [pc, #104]	; 13cd0 <__assert_fail@plt+0x28cc>
   13c64:	movw	r0, #51176	; 0xc7e8
   13c68:	movt	r0, #1
   13c6c:	movw	r2, #970	; 0x3ca
   13c70:	bl	11404 <__assert_fail@plt>
   13c74:	movw	r3, #50880	; 0xc6c0
   13c78:	movt	r3, #1
   13c7c:	movw	r1, #51048	; 0xc768
   13c80:	movt	r1, #1
   13c84:	movw	r0, #51060	; 0xc774
   13c88:	movt	r0, #1
   13c8c:	movw	r2, #450	; 0x1c2
   13c90:	bl	11404 <__assert_fail@plt>
   13c94:	movw	r1, #51048	; 0xc768
   13c98:	movt	r1, #1
   13c9c:	ldr	r3, [pc, #44]	; 13cd0 <__assert_fail@plt+0x28cc>
   13ca0:	movw	r0, #51204	; 0xc804
   13ca4:	movt	r0, #1
   13ca8:	mov	r2, #972	; 0x3cc
   13cac:	bl	11404 <__assert_fail@plt>
   13cb0:	movw	r3, #50880	; 0xc6c0
   13cb4:	movt	r3, #1
   13cb8:	movw	r1, #51048	; 0xc768
   13cbc:	movt	r1, #1
   13cc0:	movw	r0, #51064	; 0xc778
   13cc4:	movt	r0, #1
   13cc8:	mov	r2, #460	; 0x1cc
   13ccc:	bl	11404 <__assert_fail@plt>
   13cd0:	andeq	ip, r1, ip, asr #13
   13cd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13cd8:	mov	r4, r3
   13cdc:	ldr	r3, [r0, #20]
   13ce0:	cmp	r3, #0
   13ce4:	ldr	r3, [r0, #16]
   13ce8:	strd	r6, [sp, #8]
   13cec:	strd	r8, [sp, #16]
   13cf0:	mov	r8, r2
   13cf4:	ldr	r2, [r2]
   13cf8:	strd	sl, [sp, #24]
   13cfc:	ldr	r7, [r0, #8]
   13d00:	str	lr, [sp, #32]
   13d04:	sub	sp, sp, #28
   13d08:	ldr	r5, [sp, #64]	; 0x40
   13d0c:	str	r3, [sp, #8]
   13d10:	moveq	r9, r7
   13d14:	str	r7, [sp, #12]
   13d18:	str	r2, [sp, #16]
   13d1c:	str	r1, [sp, #20]
   13d20:	beq	13d48 <__assert_fail@plt+0x2944>
   13d24:	mov	r6, r0
   13d28:	bl	18b54 <argp_parse@@Base+0xeb8>
   13d2c:	mov	r2, r0
   13d30:	mov	r1, r7
   13d34:	ldr	r3, [r6, #20]
   13d38:	mov	r0, #6
   13d3c:	movt	r0, #512	; 0x200
   13d40:	blx	r3
   13d44:	mov	r9, r0
   13d48:	cmp	r9, #0
   13d4c:	beq	13f3c <__assert_fail@plt+0x2b38>
   13d50:	mov	r1, #10
   13d54:	mov	r0, r9
   13d58:	bl	11128 <strchrnul@plt>
   13d5c:	ldrb	r3, [r0]
   13d60:	mov	r6, r0
   13d64:	cmp	r3, #0
   13d68:	moveq	fp, r3
   13d6c:	moveq	r7, r9
   13d70:	beq	13dbc <__assert_fail@plt+0x29b8>
   13d74:	ldr	r3, [sp, #16]
   13d78:	ldrb	sl, [r3]
   13d7c:	cmp	sl, #0
   13d80:	beq	13fc0 <__assert_fail@plt+0x2bbc>
   13d84:	mov	fp, #0
   13d88:	add	r7, r0, #1
   13d8c:	add	fp, fp, #1
   13d90:	mov	r0, r7
   13d94:	mov	r1, #10
   13d98:	bl	11128 <strchrnul@plt>
   13d9c:	cmp	fp, sl
   13da0:	bne	13d88 <__assert_fail@plt+0x2984>
   13da4:	mov	r6, r0
   13da8:	ldr	r3, [r8]
   13dac:	mov	r2, #1
   13db0:	mov	fp, r2
   13db4:	add	r3, r3, r2
   13db8:	str	r3, [r8]
   13dbc:	ldr	ip, [r5, #16]
   13dc0:	add	sl, r6, #1
   13dc4:	sub	sl, sl, r7
   13dc8:	ldr	r1, [r5, #24]
   13dcc:	ldr	r3, [r5, #28]
   13dd0:	sub	r1, r3, r1
   13dd4:	mov	r0, r3
   13dd8:	cmp	r1, ip
   13ddc:	bhi	13f28 <__assert_fail@plt+0x2b24>
   13de0:	ldr	ip, [r5, #8]
   13de4:	ldr	r1, [r5, #20]
   13de8:	cmp	r1, #0
   13dec:	addge	sl, sl, r1
   13df0:	ldr	r1, [r5, #32]
   13df4:	cmp	sl, ip
   13df8:	bcc	13e18 <__assert_fail@plt+0x2a14>
   13dfc:	cmp	r3, r1
   13e00:	bcs	13f78 <__assert_fail@plt+0x2b74>
   13e04:	add	r0, r3, #1
   13e08:	mov	r1, #10
   13e0c:	str	r0, [r5, #28]
   13e10:	strb	r1, [r3]
   13e14:	b	13e30 <__assert_fail@plt+0x2a2c>
   13e18:	cmp	r3, r1
   13e1c:	bcs	13fa4 <__assert_fail@plt+0x2ba0>
   13e20:	add	r1, r0, #1
   13e24:	mov	r3, #32
   13e28:	str	r1, [r5, #28]
   13e2c:	strb	r3, [r0]
   13e30:	ldrd	r0, [r5, #28]
   13e34:	sub	sl, r6, r7
   13e38:	add	r3, r0, sl
   13e3c:	cmp	r1, r3
   13e40:	bcs	13e5c <__assert_fail@plt+0x2a58>
   13e44:	mov	r1, sl
   13e48:	mov	r0, r5
   13e4c:	bl	1a87c <argp_parse@@Base+0x2be0>
   13e50:	cmp	r0, #0
   13e54:	beq	13e74 <__assert_fail@plt+0x2a70>
   13e58:	ldr	r0, [r5, #28]
   13e5c:	mov	r2, sl
   13e60:	mov	r1, r7
   13e64:	bl	11158 <memcpy@plt>
   13e68:	ldr	r3, [r5, #28]
   13e6c:	add	sl, r3, sl
   13e70:	str	sl, [r5, #28]
   13e74:	ldr	r3, [sp, #12]
   13e78:	cmp	r3, r9
   13e7c:	beq	13e88 <__assert_fail@plt+0x2a84>
   13e80:	mov	r0, r9
   13e84:	bl	18cd4 <argp_parse@@Base+0x1038>
   13e88:	ldr	r3, [sp, #8]
   13e8c:	cmp	r3, #0
   13e90:	beq	13ed8 <__assert_fail@plt+0x2ad4>
   13e94:	ldr	r2, [r3]
   13e98:	cmp	r2, #0
   13e9c:	beq	13ed8 <__assert_fail@plt+0x2ad4>
   13ea0:	mov	r3, r4
   13ea4:	ldr	r7, [sp, #8]
   13ea8:	ldr	r4, [sp, #20]
   13eac:	mov	r0, r2
   13eb0:	mov	r1, r4
   13eb4:	str	r5, [sp]
   13eb8:	mov	r2, r8
   13ebc:	bl	13cd4 <__assert_fail@plt+0x28d0>
   13ec0:	ldr	r2, [r7, #16]!
   13ec4:	clz	r3, r0
   13ec8:	lsr	r3, r3, #5
   13ecc:	cmp	r2, #0
   13ed0:	bne	13eac <__assert_fail@plt+0x2aa8>
   13ed4:	mov	r4, r3
   13ed8:	cmp	r4, #0
   13edc:	mov	r3, fp
   13ee0:	moveq	r3, #0
   13ee4:	cmp	r3, #0
   13ee8:	beq	13f5c <__assert_fail@plt+0x2b58>
   13eec:	ldrb	r3, [r6]
   13ef0:	ldr	r2, [sp, #16]
   13ef4:	cmp	r3, #0
   13ef8:	ldrb	r0, [r2]
   13efc:	beq	13f68 <__assert_fail@plt+0x2b64>
   13f00:	add	r4, r0, #1
   13f04:	mov	r0, #1
   13f08:	strb	r4, [r2]
   13f0c:	add	sp, sp, #28
   13f10:	ldrd	r4, [sp]
   13f14:	ldrd	r6, [sp, #8]
   13f18:	ldrd	r8, [sp, #16]
   13f1c:	ldrd	sl, [sp, #24]
   13f20:	add	sp, sp, #32
   13f24:	pop	{pc}		; (ldr pc, [sp], #4)
   13f28:	mov	r0, r5
   13f2c:	bl	1a1ec <argp_parse@@Base+0x2550>
   13f30:	ldr	r3, [r5, #28]
   13f34:	mov	r0, r3
   13f38:	b	13de0 <__assert_fail@plt+0x29dc>
   13f3c:	ldr	r3, [sp, #8]
   13f40:	cmp	r3, #0
   13f44:	beq	13f5c <__assert_fail@plt+0x2b58>
   13f48:	ldr	r2, [r3]
   13f4c:	cmp	r2, #0
   13f50:	movne	r6, r9
   13f54:	movne	fp, r6
   13f58:	bne	13ea0 <__assert_fail@plt+0x2a9c>
   13f5c:	clz	r0, r4
   13f60:	lsr	r0, r0, #5
   13f64:	b	13f0c <__assert_fail@plt+0x2b08>
   13f68:	cmp	r0, #0
   13f6c:	movne	r0, r3
   13f70:	strbne	r3, [r2]
   13f74:	b	13f0c <__assert_fail@plt+0x2b08>
   13f78:	mov	r1, #1
   13f7c:	mov	r0, r5
   13f80:	bl	1a87c <argp_parse@@Base+0x2be0>
   13f84:	cmp	r0, #0
   13f88:	beq	13e30 <__assert_fail@plt+0x2a2c>
   13f8c:	ldr	r3, [r5, #28]
   13f90:	mov	r1, #10
   13f94:	add	r0, r3, #1
   13f98:	str	r0, [r5, #28]
   13f9c:	strb	r1, [r3]
   13fa0:	b	13e30 <__assert_fail@plt+0x2a2c>
   13fa4:	mov	r1, #1
   13fa8:	mov	r0, r5
   13fac:	bl	1a87c <argp_parse@@Base+0x2be0>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13e30 <__assert_fail@plt+0x2a2c>
   13fb8:	ldr	r0, [r5, #28]
   13fbc:	b	13e20 <__assert_fail@plt+0x2a1c>
   13fc0:	mov	r7, r9
   13fc4:	b	13da8 <__assert_fail@plt+0x29a4>
   13fc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13fcc:	subs	r4, r1, #0
   13fd0:	strd	r6, [sp, #8]
   13fd4:	mov	r7, r0
   13fd8:	mov	r6, r2
   13fdc:	strd	r8, [sp, #16]
   13fe0:	strd	sl, [sp, #24]
   13fe4:	str	lr, [sp, #32]
   13fe8:	sub	sp, sp, #12
   13fec:	beq	14028 <__assert_fail@plt+0x2c24>
   13ff0:	ldr	r3, [r4, #20]
   13ff4:	cmp	r3, #0
   13ff8:	beq	14028 <__assert_fail@plt+0x2c24>
   13ffc:	mov	r0, r4
   14000:	ldr	r1, [r2, #16]
   14004:	bl	18b54 <argp_parse@@Base+0xeb8>
   14008:	mov	r2, r0
   1400c:	mov	r1, r7
   14010:	ldr	r3, [r4, #20]
   14014:	mov	r0, #3
   14018:	movt	r0, #512	; 0x200
   1401c:	blx	r3
   14020:	mov	r9, r0
   14024:	b	1402c <__assert_fail@plt+0x2c28>
   14028:	mov	r9, r7
   1402c:	cmp	r9, #0
   14030:	beq	1404c <__assert_fail@plt+0x2c48>
   14034:	ldrb	r2, [r9]
   14038:	ldr	r3, [r6, #8]
   1403c:	cmp	r2, #0
   14040:	bne	14078 <__assert_fail@plt+0x2c74>
   14044:	mov	r2, #1
   14048:	str	r2, [r3, #4]
   1404c:	cmp	r7, r9
   14050:	beq	141c4 <__assert_fail@plt+0x2dc0>
   14054:	mov	r0, r9
   14058:	add	sp, sp, #12
   1405c:	ldrd	r4, [sp]
   14060:	ldrd	r6, [sp, #8]
   14064:	ldrd	r8, [sp, #16]
   14068:	ldrd	sl, [sp, #24]
   1406c:	ldr	lr, [sp, #32]
   14070:	add	sp, sp, #36	; 0x24
   14074:	b	18cd4 <argp_parse@@Base+0x1038>
   14078:	ldr	r3, [r3]
   1407c:	ldr	r4, [r6, #4]
   14080:	cmp	r3, #0
   14084:	ldr	r3, [r4, #28]
   14088:	beq	140c8 <__assert_fail@plt+0x2cc4>
   1408c:	ldr	r2, [r4, #32]
   14090:	cmp	r2, r3
   14094:	bhi	140b0 <__assert_fail@plt+0x2cac>
   14098:	mov	r1, #1
   1409c:	mov	r0, r4
   140a0:	bl	1a87c <argp_parse@@Base+0x2be0>
   140a4:	cmp	r0, #0
   140a8:	ldrne	r3, [r4, #28]
   140ac:	beq	140c0 <__assert_fail@plt+0x2cbc>
   140b0:	add	r1, r3, #1
   140b4:	mov	r2, #10
   140b8:	str	r1, [r4, #28]
   140bc:	strb	r2, [r3]
   140c0:	ldr	r4, [r6, #4]
   140c4:	ldr	r3, [r4, #28]
   140c8:	movw	r8, #58256	; 0xe390
   140cc:	movt	r8, #2
   140d0:	ldr	r2, [r4, #16]
   140d4:	ldr	r1, [r4, #24]
   140d8:	ldr	r5, [r8, #24]
   140dc:	sub	r3, r3, r1
   140e0:	cmp	r3, r2
   140e4:	bhi	142a8 <__assert_fail@plt+0x2ea4>
   140e8:	ldr	r3, [r4, #20]
   140ec:	cmp	r3, #0
   140f0:	subge	r5, r5, r3
   140f4:	cmp	r5, #0
   140f8:	sub	r5, r5, #1
   140fc:	ble	14144 <__assert_fail@plt+0x2d40>
   14100:	mov	sl, #32
   14104:	ldr	r3, [r4, #28]
   14108:	mov	r1, #1
   1410c:	mov	r0, r4
   14110:	sub	r5, r5, #1
   14114:	ldr	r2, [r4, #32]
   14118:	cmp	r3, r2
   1411c:	bcc	14130 <__assert_fail@plt+0x2d2c>
   14120:	bl	1a87c <argp_parse@@Base+0x2be0>
   14124:	cmp	r0, #0
   14128:	beq	1413c <__assert_fail@plt+0x2d38>
   1412c:	ldr	r3, [r4, #28]
   14130:	add	r2, r3, #1
   14134:	str	r2, [r4, #28]
   14138:	strb	sl, [r3]
   1413c:	cmn	r5, #1
   14140:	bne	14104 <__assert_fail@plt+0x2d00>
   14144:	ldr	r4, [r6, #4]
   14148:	ldr	sl, [r8, #24]
   1414c:	ldr	r1, [r4, #16]
   14150:	ldr	r3, [r4, #24]
   14154:	ldr	r5, [r4, #28]
   14158:	sub	r3, r5, r3
   1415c:	cmp	r3, r1
   14160:	movls	fp, r4
   14164:	strls	sl, [r4, #4]
   14168:	bhi	14260 <__assert_fail@plt+0x2e5c>
   1416c:	mov	r0, r9
   14170:	str	sl, [fp, #12]
   14174:	bl	11290 <strlen@plt>
   14178:	subs	r8, r0, #0
   1417c:	bne	14210 <__assert_fail@plt+0x2e0c>
   14180:	ldr	r2, [r4, #16]
   14184:	ldr	r3, [r4, #24]
   14188:	sub	r3, r5, r3
   1418c:	cmp	r3, r2
   14190:	movls	r8, r4
   14194:	bhi	141fc <__assert_fail@plt+0x2df8>
   14198:	ldr	r3, [r8, #32]
   1419c:	mov	r2, #0
   141a0:	str	r2, [r4, #4]
   141a4:	cmp	r3, r5
   141a8:	bls	141e0 <__assert_fail@plt+0x2ddc>
   141ac:	add	r2, r5, #1
   141b0:	mov	r3, #10
   141b4:	str	r2, [r8, #28]
   141b8:	strb	r3, [r5]
   141bc:	ldr	r3, [r6, #8]
   141c0:	b	14044 <__assert_fail@plt+0x2c40>
   141c4:	add	sp, sp, #12
   141c8:	ldrd	r4, [sp]
   141cc:	ldrd	r6, [sp, #8]
   141d0:	ldrd	r8, [sp, #16]
   141d4:	ldrd	sl, [sp, #24]
   141d8:	add	sp, sp, #32
   141dc:	pop	{pc}		; (ldr pc, [sp], #4)
   141e0:	mov	r1, #1
   141e4:	mov	r0, r8
   141e8:	bl	1a87c <argp_parse@@Base+0x2be0>
   141ec:	cmp	r0, #0
   141f0:	ldrne	r5, [r8, #28]
   141f4:	bne	141ac <__assert_fail@plt+0x2da8>
   141f8:	b	141bc <__assert_fail@plt+0x2db8>
   141fc:	mov	r0, r4
   14200:	bl	1a1ec <argp_parse@@Base+0x2550>
   14204:	ldr	r8, [r6, #4]
   14208:	ldr	r5, [r8, #28]
   1420c:	b	14198 <__assert_fail@plt+0x2d94>
   14210:	ldr	r2, [r4, #32]
   14214:	add	r3, r5, r8
   14218:	cmp	r2, r3
   1421c:	bcs	14238 <__assert_fail@plt+0x2e34>
   14220:	mov	r1, r8
   14224:	mov	r0, r4
   14228:	bl	1a87c <argp_parse@@Base+0x2be0>
   1422c:	cmp	r0, #0
   14230:	beq	14254 <__assert_fail@plt+0x2e50>
   14234:	ldr	r5, [r4, #28]
   14238:	mov	r2, r8
   1423c:	mov	r0, r5
   14240:	mov	r1, r9
   14244:	bl	11158 <memcpy@plt>
   14248:	ldr	r3, [r4, #28]
   1424c:	add	r8, r3, r8
   14250:	str	r8, [r4, #28]
   14254:	ldr	r4, [r6, #4]
   14258:	ldr	r5, [r4, #28]
   1425c:	b	14180 <__assert_fail@plt+0x2d7c>
   14260:	mov	r0, r4
   14264:	str	sl, [sp, #4]
   14268:	bl	1a1ec <argp_parse@@Base+0x2550>
   1426c:	ldr	fp, [r6, #4]
   14270:	ldr	r2, [sp, #4]
   14274:	ldr	sl, [r8, #24]
   14278:	ldr	r1, [fp, #16]
   1427c:	ldr	r3, [fp, #24]
   14280:	ldr	r5, [fp, #28]
   14284:	str	r2, [r4, #4]
   14288:	sub	r3, r5, r3
   1428c:	cmp	r3, r1
   14290:	bls	142b4 <__assert_fail@plt+0x2eb0>
   14294:	mov	r0, fp
   14298:	bl	1a1ec <argp_parse@@Base+0x2550>
   1429c:	ldr	r4, [r6, #4]
   142a0:	ldr	r5, [r4, #28]
   142a4:	b	1416c <__assert_fail@plt+0x2d68>
   142a8:	mov	r0, r4
   142ac:	bl	1a1ec <argp_parse@@Base+0x2550>
   142b0:	b	140e8 <__assert_fail@plt+0x2ce4>
   142b4:	mov	r4, fp
   142b8:	b	1416c <__assert_fail@plt+0x2d68>
   142bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142c0:	strd	r6, [sp, #8]
   142c4:	strd	r8, [sp, #16]
   142c8:	strd	sl, [sp, #24]
   142cc:	add	fp, sp, #32
   142d0:	str	lr, [sp, #32]
   142d4:	sub	sp, sp, #36	; 0x24
   142d8:	ldr	r3, [r0, #4]
   142dc:	cmp	r3, #0
   142e0:	str	r3, [fp, #-40]	; 0xffffffd8
   142e4:	beq	14500 <__assert_fail@plt+0x30fc>
   142e8:	mov	r4, r0
   142ec:	ldr	r0, [r0, #8]
   142f0:	str	r4, [fp, #-60]	; 0xffffffc4
   142f4:	str	r1, [fp, #-48]	; 0xffffffd0
   142f8:	str	r3, [fp, #-44]	; 0xffffffd4
   142fc:	bl	11290 <strlen@plt>
   14300:	add	r3, r0, #8
   14304:	ldr	r2, [r4]
   14308:	bic	r3, r3, #7
   1430c:	sub	sp, sp, r3
   14310:	mov	r3, sp
   14314:	str	r3, [fp, #-56]	; 0xffffffc8
   14318:	str	r3, [fp, #-52]	; 0xffffffcc
   1431c:	add	r3, r2, #28
   14320:	mov	r9, r3
   14324:	str	r3, [fp, #-64]	; 0xffffffc0
   14328:	ldr	r8, [r9, #-28]	; 0xffffffe4
   1432c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   14330:	ldr	sl, [r9, #-20]	; 0xffffffec
   14334:	cmp	r5, #0
   14338:	beq	1438c <__assert_fail@plt+0x2f88>
   1433c:	mov	r4, r8
   14340:	ldr	r6, [r4, #12]
   14344:	tst	r6, #8
   14348:	bne	14380 <__assert_fail@plt+0x2f7c>
   1434c:	ldr	r7, [r4, #4]
   14350:	sub	r3, r7, #1
   14354:	cmp	r3, #254	; 0xfe
   14358:	bhi	14380 <__assert_fail@plt+0x2f7c>
   1435c:	bl	11260 <__ctype_b_loc@plt>
   14360:	ldr	r2, [r0]
   14364:	lsl	r3, r7, #1
   14368:	ldrh	r3, [r2, r3]
   1436c:	tst	r3, #16384	; 0x4000
   14370:	beq	14380 <__assert_fail@plt+0x2f7c>
   14374:	ldrb	r3, [sl]
   14378:	cmp	r7, r3
   1437c:	beq	1451c <__assert_fail@plt+0x3118>
   14380:	subs	r5, r5, #1
   14384:	add	r4, r4, #24
   14388:	bne	14340 <__assert_fail@plt+0x2f3c>
   1438c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14390:	add	r9, r9, #28
   14394:	subs	r3, r3, #1
   14398:	str	r3, [fp, #-44]	; 0xffffffd4
   1439c:	bne	14328 <__assert_fail@plt+0x2f24>
   143a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   143a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143a8:	cmp	r3, r2
   143ac:	bcc	146ec <__assert_fail@plt+0x32e8>
   143b0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   143b4:	movw	r3, #51276	; 0xc84c
   143b8:	movt	r3, #1
   143bc:	str	r3, [fp, #-44]	; 0xffffffd4
   143c0:	movw	r3, #51264	; 0xc840
   143c4:	movt	r3, #1
   143c8:	str	r3, [fp, #-52]	; 0xffffffcc
   143cc:	ldr	r8, [r6, #-28]	; 0xffffffe4
   143d0:	ldr	r5, [r6, #-24]	; 0xffffffe8
   143d4:	ldr	r7, [r6, #-20]	; 0xffffffec
   143d8:	cmp	r5, #0
   143dc:	movne	r4, r8
   143e0:	beq	14430 <__assert_fail@plt+0x302c>
   143e4:	ldr	r9, [r4, #12]
   143e8:	tst	r9, #8
   143ec:	bne	14424 <__assert_fail@plt+0x3020>
   143f0:	ldr	sl, [r4, #4]
   143f4:	sub	r3, sl, #1
   143f8:	cmp	r3, #254	; 0xfe
   143fc:	bhi	14424 <__assert_fail@plt+0x3020>
   14400:	bl	11260 <__ctype_b_loc@plt>
   14404:	ldr	r2, [r0]
   14408:	lsl	r3, sl, #1
   1440c:	ldrh	r3, [r2, r3]
   14410:	tst	r3, #16384	; 0x4000
   14414:	beq	14424 <__assert_fail@plt+0x3020>
   14418:	ldrb	r3, [r7]
   1441c:	cmp	sl, r3
   14420:	beq	14564 <__assert_fail@plt+0x3160>
   14424:	subs	r5, r5, #1
   14428:	add	r4, r4, #24
   1442c:	bne	143e4 <__assert_fail@plt+0x2fe0>
   14430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14434:	add	r6, r6, #28
   14438:	subs	r3, r3, #1
   1443c:	str	r3, [fp, #-40]	; 0xffffffd8
   14440:	bne	143cc <__assert_fail@plt+0x2fc8>
   14444:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14448:	ldm	r3, {r7, r8}
   1444c:	cmp	r8, #0
   14450:	beq	14500 <__assert_fail@plt+0x30fc>
   14454:	movw	sl, #51304	; 0xc868
   14458:	movt	sl, #1
   1445c:	movw	r9, #51288	; 0xc858
   14460:	movt	r9, #1
   14464:	str	sl, [fp, #-40]	; 0xffffffd8
   14468:	movw	r3, #51316	; 0xc874
   1446c:	movt	r3, #1
   14470:	ldr	sl, [fp, #-48]	; 0xffffffd0
   14474:	add	r7, r7, #28
   14478:	str	r3, [fp, #-44]	; 0xffffffd4
   1447c:	ldr	r6, [r7, #-28]	; 0xffffffe4
   14480:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14484:	cmp	r5, #0
   14488:	movne	r4, r6
   1448c:	beq	144f4 <__assert_fail@plt+0x30f0>
   14490:	ldr	r2, [r4]
   14494:	cmp	r2, #0
   14498:	beq	144e8 <__assert_fail@plt+0x30e4>
   1449c:	ldr	r1, [r4, #12]
   144a0:	tst	r1, #4
   144a4:	moveq	r6, r4
   144a8:	tst	r1, #2
   144ac:	bne	144e8 <__assert_fail@plt+0x30e4>
   144b0:	ldr	r3, [r4, #8]
   144b4:	ldr	r0, [r6, #12]
   144b8:	cmp	r3, #0
   144bc:	orr	r1, r1, r0
   144c0:	and	r0, r1, #16
   144c4:	beq	14540 <__assert_fail@plt+0x313c>
   144c8:	cmp	r0, #0
   144cc:	bne	144e8 <__assert_fail@plt+0x30e4>
   144d0:	tst	r1, #1
   144d4:	movne	r1, r9
   144d8:	movne	r0, sl
   144dc:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   144e0:	moveq	r0, sl
   144e4:	bl	1a89c <argp_parse@@Base+0x2c00>
   144e8:	subs	r5, r5, #1
   144ec:	add	r4, r4, #24
   144f0:	bne	14490 <__assert_fail@plt+0x308c>
   144f4:	subs	r8, r8, #1
   144f8:	add	r7, r7, #28
   144fc:	bne	1447c <__assert_fail@plt+0x3078>
   14500:	sub	sp, fp, #32
   14504:	ldrd	r4, [sp]
   14508:	ldrd	r6, [sp, #8]
   1450c:	ldrd	r8, [sp, #16]
   14510:	ldrd	sl, [sp, #24]
   14514:	add	sp, sp, #32
   14518:	pop	{pc}		; (ldr pc, [sp], #4)
   1451c:	tst	r6, #4
   14520:	moveq	r8, r4
   14524:	tst	r6, #2
   14528:	bne	14538 <__assert_fail@plt+0x3134>
   1452c:	ldr	r3, [r4, #8]
   14530:	cmp	r3, #0
   14534:	beq	145b0 <__assert_fail@plt+0x31ac>
   14538:	add	sl, sl, #1
   1453c:	b	14380 <__assert_fail@plt+0x2f7c>
   14540:	cmp	r0, #0
   14544:	bne	144e8 <__assert_fail@plt+0x30e4>
   14548:	ldr	r3, [r6, #8]
   1454c:	cmp	r3, #0
   14550:	bne	144d0 <__assert_fail@plt+0x30cc>
   14554:	mov	r0, sl
   14558:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1455c:	bl	1a89c <argp_parse@@Base+0x2c00>
   14560:	b	144e8 <__assert_fail@plt+0x30e4>
   14564:	tst	r9, #4
   14568:	moveq	r8, r4
   1456c:	tst	r9, #2
   14570:	bne	145a8 <__assert_fail@plt+0x31a4>
   14574:	ldr	r3, [r4, #8]
   14578:	cmp	r3, #0
   1457c:	beq	145dc <__assert_fail@plt+0x31d8>
   14580:	ldr	r2, [r8, #12]
   14584:	orr	r9, r9, r2
   14588:	tst	r9, #16
   1458c:	bne	145a8 <__assert_fail@plt+0x31a4>
   14590:	tst	r9, #1
   14594:	beq	145ec <__assert_fail@plt+0x31e8>
   14598:	mov	r2, sl
   1459c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   145a4:	bl	1a89c <argp_parse@@Base+0x2c00>
   145a8:	add	r7, r7, #1
   145ac:	b	14424 <__assert_fail@plt+0x3020>
   145b0:	ldr	r3, [r8, #8]
   145b4:	cmp	r3, #0
   145b8:	bne	14538 <__assert_fail@plt+0x3134>
   145bc:	ldr	r3, [r8, #12]
   145c0:	orr	r6, r6, r3
   145c4:	tst	r6, #16
   145c8:	bne	14538 <__assert_fail@plt+0x3134>
   145cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   145d0:	strb	r7, [r3], #1
   145d4:	str	r3, [fp, #-52]	; 0xffffffcc
   145d8:	b	14538 <__assert_fail@plt+0x3134>
   145dc:	ldr	r3, [r8, #8]
   145e0:	cmp	r3, #0
   145e4:	beq	145a8 <__assert_fail@plt+0x31a4>
   145e8:	b	14580 <__assert_fail@plt+0x317c>
   145ec:	mov	r0, r3
   145f0:	str	r3, [fp, #-56]	; 0xffffffc8
   145f4:	bl	11290 <strlen@plt>
   145f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   145fc:	mov	r9, r0
   14600:	ldr	r0, [r3, #16]
   14604:	ldr	r2, [r3, #24]
   14608:	ldr	r1, [r3, #28]
   1460c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14610:	sub	r2, r1, r2
   14614:	cmp	r2, r0
   14618:	bhi	146d4 <__assert_fail@plt+0x32d0>
   1461c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   14620:	ldr	r0, [lr, #8]
   14624:	ldr	r2, [lr, #20]
   14628:	ldr	ip, [lr, #32]
   1462c:	bic	r2, r2, r2, asr #31
   14630:	add	r2, r2, #6
   14634:	add	r2, r2, r9
   14638:	cmp	r2, r0
   1463c:	bcs	14690 <__assert_fail@plt+0x328c>
   14640:	cmp	r1, ip
   14644:	bcc	1466c <__assert_fail@plt+0x3268>
   14648:	mov	r1, #1
   1464c:	mov	r0, lr
   14650:	str	r3, [fp, #-56]	; 0xffffffc8
   14654:	mov	r9, lr
   14658:	bl	1a87c <argp_parse@@Base+0x2be0>
   1465c:	cmp	r0, #0
   14660:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14664:	beq	14680 <__assert_fail@plt+0x327c>
   14668:	ldr	r1, [r9, #28]
   1466c:	add	r2, r1, #1
   14670:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14674:	str	r2, [r0, #28]
   14678:	mov	r2, #32
   1467c:	strb	r2, [r1]
   14680:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   14684:	ldr	r2, [r4, #4]
   14688:	bl	1a89c <argp_parse@@Base+0x2c00>
   1468c:	b	145a8 <__assert_fail@plt+0x31a4>
   14690:	cmp	r1, ip
   14694:	bcc	146bc <__assert_fail@plt+0x32b8>
   14698:	mov	r1, #1
   1469c:	mov	r0, lr
   146a0:	str	r3, [fp, #-56]	; 0xffffffc8
   146a4:	mov	r9, lr
   146a8:	bl	1a87c <argp_parse@@Base+0x2be0>
   146ac:	cmp	r0, #0
   146b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   146b4:	beq	14680 <__assert_fail@plt+0x327c>
   146b8:	ldr	r1, [r9, #28]
   146bc:	add	r0, r1, #1
   146c0:	mov	r2, #10
   146c4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   146c8:	str	r0, [ip, #28]
   146cc:	strb	r2, [r1]
   146d0:	b	14680 <__assert_fail@plt+0x327c>
   146d4:	ldr	sl, [fp, #-48]	; 0xffffffd0
   146d8:	mov	r0, sl
   146dc:	bl	1a1ec <argp_parse@@Base+0x2550>
   146e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   146e4:	ldr	r1, [sl, #28]
   146e8:	b	1461c <__assert_fail@plt+0x3218>
   146ec:	mov	r2, r3
   146f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   146f4:	movw	r1, #51256	; 0xc838
   146f8:	movt	r1, #1
   146fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14700:	strb	r0, [r3]
   14704:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14708:	bl	1a89c <argp_parse@@Base+0x2c00>
   1470c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14710:	ldr	r3, [r2, #4]
   14714:	cmp	r3, #0
   14718:	str	r3, [fp, #-40]	; 0xffffffd8
   1471c:	beq	14500 <__assert_fail@plt+0x30fc>
   14720:	ldr	r2, [r2]
   14724:	add	r3, r2, #28
   14728:	str	r3, [fp, #-64]	; 0xffffffc0
   1472c:	b	143b0 <__assert_fail@plt+0x2fac>
   14730:	ldr	r3, [r1, #12]
   14734:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14738:	mov	r5, r0
   1473c:	ldr	r4, [r1, #4]
   14740:	strd	r6, [sp, #8]
   14744:	mov	r6, r1
   14748:	str	r8, [sp, #16]
   1474c:	cmp	r3, #0
   14750:	str	lr, [sp, #20]
   14754:	beq	14880 <__assert_fail@plt+0x347c>
   14758:	ldr	r2, [r1]
   1475c:	ldr	r3, [r1, #8]
   14760:	ldr	r7, [r2, #16]
   14764:	ldr	r8, [r3]
   14768:	ldr	r3, [r3, #4]
   1476c:	cmp	r3, #0
   14770:	cmpne	r8, #0
   14774:	bne	14828 <__assert_fail@plt+0x3424>
   14778:	cmp	r7, #0
   1477c:	beq	14798 <__assert_fail@plt+0x3394>
   14780:	ldr	r0, [r7]
   14784:	cmp	r0, #0
   14788:	beq	14798 <__assert_fail@plt+0x3394>
   1478c:	ldrb	r3, [r0]
   14790:	cmp	r3, #0
   14794:	bne	148f0 <__assert_fail@plt+0x34ec>
   14798:	ldr	r2, [r4, #16]
   1479c:	ldr	r1, [r4, #24]
   147a0:	ldr	r3, [r4, #28]
   147a4:	sub	r3, r3, r1
   147a8:	mov	r1, #0
   147ac:	cmp	r3, r2
   147b0:	str	r1, [r6, #12]
   147b4:	bhi	148e4 <__assert_fail@plt+0x34e0>
   147b8:	ldr	r3, [r4, #20]
   147bc:	cmp	r3, #0
   147c0:	subge	r5, r5, r3
   147c4:	cmp	r5, #0
   147c8:	sub	r5, r5, #1
   147cc:	ble	14814 <__assert_fail@plt+0x3410>
   147d0:	mov	r6, #32
   147d4:	ldr	r3, [r4, #28]
   147d8:	mov	r1, #1
   147dc:	mov	r0, r4
   147e0:	sub	r5, r5, #1
   147e4:	ldr	r2, [r4, #32]
   147e8:	cmp	r3, r2
   147ec:	bcc	14800 <__assert_fail@plt+0x33fc>
   147f0:	bl	1a87c <argp_parse@@Base+0x2be0>
   147f4:	cmp	r0, #0
   147f8:	beq	1480c <__assert_fail@plt+0x3408>
   147fc:	ldr	r3, [r4, #28]
   14800:	add	r2, r3, #1
   14804:	str	r2, [r4, #28]
   14808:	strb	r6, [r3]
   1480c:	cmn	r5, #1
   14810:	bne	147d4 <__assert_fail@plt+0x33d0>
   14814:	ldrd	r4, [sp]
   14818:	ldrd	r6, [sp, #8]
   1481c:	ldr	r8, [sp, #16]
   14820:	add	sp, sp, #20
   14824:	pop	{pc}		; (ldr pc, [sp], #4)
   14828:	ldr	r2, [r2, #12]
   1482c:	ldr	r3, [r8, #12]
   14830:	cmp	r2, r3
   14834:	beq	14778 <__assert_fail@plt+0x3374>
   14838:	ldr	r3, [r4, #28]
   1483c:	ldr	r2, [r4, #32]
   14840:	cmp	r3, r2
   14844:	bcc	14860 <__assert_fail@plt+0x345c>
   14848:	mov	r1, #1
   1484c:	mov	r0, r4
   14850:	bl	1a87c <argp_parse@@Base+0x2be0>
   14854:	cmp	r0, #0
   14858:	ldrne	r3, [r4, #28]
   1485c:	beq	14870 <__assert_fail@plt+0x346c>
   14860:	add	r1, r3, #1
   14864:	mov	r2, #10
   14868:	str	r1, [r4, #28]
   1486c:	strb	r2, [r3]
   14870:	cmp	r7, #0
   14874:	ldr	r4, [r6, #4]
   14878:	bne	14780 <__assert_fail@plt+0x337c>
   1487c:	b	14798 <__assert_fail@plt+0x3394>
   14880:	ldr	r3, [r4, #28]
   14884:	ldr	r1, [r4, #32]
   14888:	add	r2, r3, #2
   1488c:	cmp	r1, r2
   14890:	bcs	148ac <__assert_fail@plt+0x34a8>
   14894:	mov	r1, #2
   14898:	mov	r0, r4
   1489c:	bl	1a87c <argp_parse@@Base+0x2be0>
   148a0:	cmp	r0, #0
   148a4:	beq	148c8 <__assert_fail@plt+0x34c4>
   148a8:	ldr	r3, [r4, #28]
   148ac:	movw	r2, #48932	; 0xbf24
   148b0:	movt	r2, #1
   148b4:	ldrh	r2, [r2]
   148b8:	strh	r2, [r3]
   148bc:	ldr	r3, [r4, #28]
   148c0:	add	r3, r3, #2
   148c4:	str	r3, [r4, #28]
   148c8:	ldr	r4, [r6, #4]
   148cc:	ldr	r2, [r4, #16]
   148d0:	ldr	r1, [r4, #24]
   148d4:	ldr	r3, [r4, #28]
   148d8:	sub	r3, r3, r1
   148dc:	cmp	r3, r2
   148e0:	bls	147b8 <__assert_fail@plt+0x33b4>
   148e4:	mov	r0, r4
   148e8:	bl	1a1ec <argp_parse@@Base+0x2550>
   148ec:	b	147b8 <__assert_fail@plt+0x33b4>
   148f0:	cmp	r8, #0
   148f4:	beq	14924 <__assert_fail@plt+0x3520>
   148f8:	ldr	r3, [r8, #16]
   148fc:	cmp	r3, r7
   14900:	beq	14798 <__assert_fail@plt+0x3394>
   14904:	cmp	r3, #0
   14908:	beq	14924 <__assert_fail@plt+0x3520>
   1490c:	ldr	r3, [r3, #12]
   14910:	cmp	r3, #0
   14914:	cmpne	r7, r3
   14918:	bne	1490c <__assert_fail@plt+0x3508>
   1491c:	cmp	r7, r3
   14920:	beq	14798 <__assert_fail@plt+0x3394>
   14924:	mov	r2, r6
   14928:	ldr	r1, [r7, #16]
   1492c:	ldr	r7, [r4, #12]
   14930:	bl	13fc8 <__assert_fail@plt+0x2bc4>
   14934:	ldr	r8, [r6, #4]
   14938:	ldr	r2, [r8, #16]
   1493c:	ldr	r1, [r8, #24]
   14940:	ldr	r3, [r8, #28]
   14944:	sub	r3, r3, r1
   14948:	cmp	r3, r2
   1494c:	movls	r4, r8
   14950:	bhi	1495c <__assert_fail@plt+0x3558>
   14954:	str	r7, [r8, #12]
   14958:	b	147a8 <__assert_fail@plt+0x33a4>
   1495c:	mov	r0, r8
   14960:	bl	1a1ec <argp_parse@@Base+0x2550>
   14964:	ldr	r4, [r6, #4]
   14968:	ldr	r2, [r4, #16]
   1496c:	ldr	r1, [r4, #24]
   14970:	ldr	r3, [r4, #28]
   14974:	sub	r3, r3, r1
   14978:	b	14954 <__assert_fail@plt+0x3550>
   1497c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14980:	strd	r6, [sp, #8]
   14984:	mov	r7, r0
   14988:	ldr	r6, [r0, #12]
   1498c:	strd	r8, [sp, #16]
   14990:	mov	r8, r2
   14994:	strd	sl, [sp, #24]
   14998:	mov	sl, r3
   1499c:	mov	fp, r1
   149a0:	ldr	r3, [r0, #16]
   149a4:	str	lr, [sp, #32]
   149a8:	sub	sp, sp, #28
   149ac:	cmp	r6, #0
   149b0:	ldr	r5, [sp, #68]	; 0x44
   149b4:	str	r3, [sp, #8]
   149b8:	ldr	r3, [r0, #20]
   149bc:	beq	14d2c <__assert_fail@plt+0x3928>
   149c0:	mov	r1, #11
   149c4:	mov	r0, r6
   149c8:	str	r3, [sp, #12]
   149cc:	bl	1129c <strchr@plt>
   149d0:	cmp	r8, #0
   149d4:	mov	r9, r0
   149d8:	ldr	r3, [sp, #12]
   149dc:	bne	14c28 <__assert_fail@plt+0x3824>
   149e0:	cmp	r0, #0
   149e4:	beq	14f28 <__assert_fail@plt+0x3b24>
   149e8:	subs	r1, r0, r6
   149ec:	movne	r4, #1
   149f0:	moveq	r4, #0
   149f4:	cmp	r3, #0
   149f8:	str	r1, [sp, #20]
   149fc:	beq	14ecc <__assert_fail@plt+0x3ac8>
   14a00:	cmp	r1, #0
   14a04:	beq	14f1c <__assert_fail@plt+0x3b18>
   14a08:	mov	r0, r6
   14a0c:	mov	r4, #1
   14a10:	bl	1114c <strndup@plt>
   14a14:	adds	r3, r0, #0
   14a18:	mov	r6, r0
   14a1c:	movne	r3, #1
   14a20:	str	r3, [sp, #16]
   14a24:	mov	r1, fp
   14a28:	mov	r0, r7
   14a2c:	bl	18b54 <argp_parse@@Base+0xeb8>
   14a30:	mov	r2, r0
   14a34:	mov	r1, r6
   14a38:	ldr	r3, [r7, #20]
   14a3c:	mov	r0, #1
   14a40:	movt	r0, #512	; 0x200
   14a44:	str	r2, [sp, #12]
   14a48:	blx	r3
   14a4c:	subs	r9, r0, #0
   14a50:	moveq	r4, r9
   14a54:	beq	14ae4 <__assert_fail@plt+0x36e0>
   14a58:	cmp	r6, r9
   14a5c:	movne	r4, #0
   14a60:	andeq	r4, r4, #1
   14a64:	cmp	sl, #0
   14a68:	ldr	r2, [r5, #28]
   14a6c:	bne	14d74 <__assert_fail@plt+0x3970>
   14a70:	cmp	r4, #0
   14a74:	beq	14ccc <__assert_fail@plt+0x38c8>
   14a78:	ldr	r3, [sp, #20]
   14a7c:	ldr	r0, [r5, #32]
   14a80:	add	r1, r2, r3
   14a84:	cmp	r0, r1
   14a88:	bcs	14c84 <__assert_fail@plt+0x3880>
   14a8c:	mov	r1, r3
   14a90:	mov	r0, r5
   14a94:	bl	1a87c <argp_parse@@Base+0x2be0>
   14a98:	cmp	r0, #0
   14a9c:	ldr	r2, [r5, #28]
   14aa0:	bne	14c84 <__assert_fail@plt+0x3880>
   14aa4:	ldr	r0, [r5, #16]
   14aa8:	ldr	r1, [r5, #24]
   14aac:	sub	r2, r2, r1
   14ab0:	cmp	r2, r0
   14ab4:	bhi	14dbc <__assert_fail@plt+0x39b8>
   14ab8:	ldr	r1, [r5, #4]
   14abc:	ldr	r2, [r5, #20]
   14ac0:	bic	r2, r2, r2, asr #31
   14ac4:	cmp	r1, r2
   14ac8:	bcc	14d98 <__assert_fail@plt+0x3994>
   14acc:	cmp	r9, r6
   14ad0:	moveq	r4, #1
   14ad4:	beq	14ae4 <__assert_fail@plt+0x36e0>
   14ad8:	mov	r0, r9
   14adc:	mov	r4, #1
   14ae0:	bl	18cd4 <argp_parse@@Base+0x1038>
   14ae4:	ldr	r3, [sp, #16]
   14ae8:	cmp	r3, #0
   14aec:	beq	14b04 <__assert_fail@plt+0x3700>
   14af0:	ldr	r3, [r7, #20]
   14af4:	cmp	r3, #0
   14af8:	beq	14b84 <__assert_fail@plt+0x3780>
   14afc:	mov	r0, r6
   14b00:	bl	18cd4 <argp_parse@@Base+0x1038>
   14b04:	cmp	r8, #0
   14b08:	beq	14b84 <__assert_fail@plt+0x3780>
   14b0c:	ldr	r3, [r7, #20]
   14b10:	cmp	r3, #0
   14b14:	beq	14b84 <__assert_fail@plt+0x3780>
   14b18:	mov	r0, #4
   14b1c:	movt	r0, #512	; 0x200
   14b20:	ldr	r2, [sp, #12]
   14b24:	mov	r1, #0
   14b28:	blx	r3
   14b2c:	subs	r6, r0, #0
   14b30:	beq	14b84 <__assert_fail@plt+0x3780>
   14b34:	orrs	r3, sl, r4
   14b38:	bne	14e58 <__assert_fail@plt+0x3a54>
   14b3c:	mov	r0, r6
   14b40:	bl	11290 <strlen@plt>
   14b44:	subs	r4, r0, #0
   14b48:	bne	14e10 <__assert_fail@plt+0x3a0c>
   14b4c:	mov	r0, r6
   14b50:	bl	18cd4 <argp_parse@@Base+0x1038>
   14b54:	ldr	r2, [r5, #16]
   14b58:	ldr	r1, [r5, #24]
   14b5c:	ldr	r3, [r5, #28]
   14b60:	sub	r3, r3, r1
   14b64:	cmp	r3, r2
   14b68:	bhi	14ea4 <__assert_fail@plt+0x3aa0>
   14b6c:	ldr	r2, [r5, #4]
   14b70:	ldr	r3, [r5, #20]
   14b74:	bic	r3, r3, r3, asr #31
   14b78:	cmp	r2, r3
   14b7c:	bcc	14e7c <__assert_fail@plt+0x3a78>
   14b80:	mov	r4, #1
   14b84:	ldr	r7, [sp, #8]
   14b88:	cmp	r7, #0
   14b8c:	beq	14c08 <__assert_fail@plt+0x3804>
   14b90:	ldr	r3, [r7]
   14b94:	cmp	r3, #0
   14b98:	beq	14c08 <__assert_fail@plt+0x3804>
   14b9c:	ldr	r2, [sp, #64]	; 0x40
   14ba0:	eor	r6, r2, #1
   14ba4:	eor	r2, r4, #1
   14ba8:	orr	r2, r2, r6
   14bac:	and	r6, r6, #1
   14bb0:	tst	r2, #1
   14bb4:	beq	14edc <__assert_fail@plt+0x3ad8>
   14bb8:	ldr	r9, [sp, #64]	; 0x40
   14bbc:	orrs	r2, r4, sl
   14bc0:	mov	r0, r3
   14bc4:	str	r9, [sp]
   14bc8:	movne	r3, #1
   14bcc:	moveq	r3, #0
   14bd0:	str	r5, [sp, #4]
   14bd4:	mov	r2, r8
   14bd8:	mov	r1, fp
   14bdc:	bl	1497c <__assert_fail@plt+0x3578>
   14be0:	ldr	r3, [r7, #16]
   14be4:	orr	r4, r4, r0
   14be8:	add	r7, r7, #16
   14bec:	cmp	r3, #0
   14bf0:	beq	14c08 <__assert_fail@plt+0x3804>
   14bf4:	cmp	r4, #0
   14bf8:	movne	r2, r6
   14bfc:	moveq	r2, #1
   14c00:	cmp	r2, #0
   14c04:	bne	14bbc <__assert_fail@plt+0x37b8>
   14c08:	mov	r0, r4
   14c0c:	add	sp, sp, #28
   14c10:	ldrd	r4, [sp]
   14c14:	ldrd	r6, [sp, #8]
   14c18:	ldrd	r8, [sp, #16]
   14c1c:	ldrd	sl, [sp, #24]
   14c20:	add	sp, sp, #32
   14c24:	pop	{pc}		; (ldr pc, [sp], #4)
   14c28:	cmp	r0, #0
   14c2c:	beq	14eb0 <__assert_fail@plt+0x3aac>
   14c30:	cmp	r3, #0
   14c34:	add	r6, r0, #1
   14c38:	movne	r1, fp
   14c3c:	movne	r0, r7
   14c40:	beq	14ca8 <__assert_fail@plt+0x38a4>
   14c44:	bl	18b54 <argp_parse@@Base+0xeb8>
   14c48:	ldr	r3, [r7, #20]
   14c4c:	str	r0, [sp, #12]
   14c50:	mov	r0, #2
   14c54:	movt	r0, #512	; 0x200
   14c58:	mov	r1, r6
   14c5c:	ldr	r2, [sp, #12]
   14c60:	blx	r3
   14c64:	subs	r9, r0, #0
   14c68:	moveq	r4, r9
   14c6c:	beq	14b04 <__assert_fail@plt+0x3700>
   14c70:	mov	r3, #0
   14c74:	mov	r4, r3
   14c78:	str	r3, [sp, #16]
   14c7c:	str	r3, [sp, #20]
   14c80:	b	14a58 <__assert_fail@plt+0x3654>
   14c84:	ldr	r4, [sp, #20]
   14c88:	mov	r0, r2
   14c8c:	mov	r1, r6
   14c90:	mov	r2, r4
   14c94:	bl	11158 <memcpy@plt>
   14c98:	ldr	r2, [r5, #28]
   14c9c:	add	r2, r2, r4
   14ca0:	str	r2, [r5, #28]
   14ca4:	b	14aa4 <__assert_fail@plt+0x36a0>
   14ca8:	cmp	r6, #0
   14cac:	moveq	r4, r6
   14cb0:	beq	14b84 <__assert_fail@plt+0x3780>
   14cb4:	cmp	sl, #0
   14cb8:	ldr	r2, [r5, #28]
   14cbc:	bne	14d5c <__assert_fail@plt+0x3958>
   14cc0:	mov	r9, r6
   14cc4:	str	sl, [sp, #12]
   14cc8:	str	sl, [sp, #16]
   14ccc:	mov	r0, r9
   14cd0:	str	r2, [sp, #20]
   14cd4:	bl	11290 <strlen@plt>
   14cd8:	subs	r4, r0, #0
   14cdc:	ldr	r2, [sp, #20]
   14ce0:	beq	14aa4 <__assert_fail@plt+0x36a0>
   14ce4:	ldr	r0, [r5, #32]
   14ce8:	add	r1, r2, r4
   14cec:	cmp	r0, r1
   14cf0:	bcs	14d0c <__assert_fail@plt+0x3908>
   14cf4:	mov	r1, r4
   14cf8:	mov	r0, r5
   14cfc:	bl	1a87c <argp_parse@@Base+0x2be0>
   14d00:	cmp	r0, #0
   14d04:	ldr	r2, [r5, #28]
   14d08:	beq	14aa4 <__assert_fail@plt+0x36a0>
   14d0c:	mov	r0, r2
   14d10:	mov	r1, r9
   14d14:	mov	r2, r4
   14d18:	bl	11158 <memcpy@plt>
   14d1c:	ldr	r2, [r5, #28]
   14d20:	add	r2, r2, r4
   14d24:	str	r2, [r5, #28]
   14d28:	b	14aa4 <__assert_fail@plt+0x36a0>
   14d2c:	cmp	r3, #0
   14d30:	beq	14ec4 <__assert_fail@plt+0x3ac0>
   14d34:	bl	18b54 <argp_parse@@Base+0xeb8>
   14d38:	mov	r2, #1
   14d3c:	movt	r2, #512	; 0x200
   14d40:	str	r0, [sp, #12]
   14d44:	cmp	r8, #0
   14d48:	mov	r0, #2
   14d4c:	movt	r0, #512	; 0x200
   14d50:	moveq	r0, r2
   14d54:	ldr	r3, [r7, #20]
   14d58:	b	14c58 <__assert_fail@plt+0x3854>
   14d5c:	mov	r3, #0
   14d60:	mov	r9, r6
   14d64:	mov	r4, r3
   14d68:	str	r3, [sp, #12]
   14d6c:	str	r3, [sp, #16]
   14d70:	str	r3, [sp, #20]
   14d74:	ldr	r1, [r5, #32]
   14d78:	cmp	r1, r2
   14d7c:	bls	14dc8 <__assert_fail@plt+0x39c4>
   14d80:	add	r0, r2, #1
   14d84:	mov	r1, #10
   14d88:	str	r0, [r5, #28]
   14d8c:	strb	r1, [r2]
   14d90:	ldr	r2, [r5, #28]
   14d94:	b	14a70 <__assert_fail@plt+0x366c>
   14d98:	ldr	r2, [r5, #28]
   14d9c:	ldr	r1, [r5, #32]
   14da0:	cmp	r2, r1
   14da4:	bcs	14de4 <__assert_fail@plt+0x39e0>
   14da8:	add	r0, r2, #1
   14dac:	mov	r1, #10
   14db0:	str	r0, [r5, #28]
   14db4:	strb	r1, [r2]
   14db8:	b	14acc <__assert_fail@plt+0x36c8>
   14dbc:	mov	r0, r5
   14dc0:	bl	1a1ec <argp_parse@@Base+0x2550>
   14dc4:	b	14ab8 <__assert_fail@plt+0x36b4>
   14dc8:	mov	r1, #1
   14dcc:	mov	r0, r5
   14dd0:	bl	1a87c <argp_parse@@Base+0x2be0>
   14dd4:	cmp	r0, #0
   14dd8:	ldr	r2, [r5, #28]
   14ddc:	bne	14d80 <__assert_fail@plt+0x397c>
   14de0:	b	14a70 <__assert_fail@plt+0x366c>
   14de4:	mov	r1, #1
   14de8:	mov	r0, r5
   14dec:	bl	1a87c <argp_parse@@Base+0x2be0>
   14df0:	cmp	r0, #0
   14df4:	beq	14acc <__assert_fail@plt+0x36c8>
   14df8:	ldr	r2, [r5, #28]
   14dfc:	mov	r1, #10
   14e00:	add	r0, r2, #1
   14e04:	str	r0, [r5, #28]
   14e08:	strb	r1, [r2]
   14e0c:	b	14acc <__assert_fail@plt+0x36c8>
   14e10:	ldr	r0, [r5, #28]
   14e14:	ldr	r2, [r5, #32]
   14e18:	add	r3, r0, r4
   14e1c:	cmp	r2, r3
   14e20:	bcs	14e3c <__assert_fail@plt+0x3a38>
   14e24:	mov	r1, r4
   14e28:	mov	r0, r5
   14e2c:	bl	1a87c <argp_parse@@Base+0x2be0>
   14e30:	cmp	r0, #0
   14e34:	beq	14b4c <__assert_fail@plt+0x3748>
   14e38:	ldr	r0, [r5, #28]
   14e3c:	mov	r2, r4
   14e40:	mov	r1, r6
   14e44:	bl	11158 <memcpy@plt>
   14e48:	ldr	r3, [r5, #28]
   14e4c:	add	r4, r3, r4
   14e50:	str	r4, [r5, #28]
   14e54:	b	14b4c <__assert_fail@plt+0x3748>
   14e58:	ldr	r3, [r5, #28]
   14e5c:	ldr	r2, [r5, #32]
   14e60:	cmp	r3, r2
   14e64:	bcs	14f00 <__assert_fail@plt+0x3afc>
   14e68:	add	r1, r3, #1
   14e6c:	mov	r2, #10
   14e70:	str	r1, [r5, #28]
   14e74:	strb	r2, [r3]
   14e78:	b	14b3c <__assert_fail@plt+0x3738>
   14e7c:	ldr	r3, [r5, #28]
   14e80:	ldr	r2, [r5, #32]
   14e84:	cmp	r3, r2
   14e88:	bcs	14ee4 <__assert_fail@plt+0x3ae0>
   14e8c:	add	r1, r3, #1
   14e90:	mov	r2, #10
   14e94:	mov	r4, #1
   14e98:	str	r1, [r5, #28]
   14e9c:	strb	r2, [r3]
   14ea0:	b	14b84 <__assert_fail@plt+0x3780>
   14ea4:	mov	r0, r5
   14ea8:	bl	1a1ec <argp_parse@@Base+0x2550>
   14eac:	b	14b6c <__assert_fail@plt+0x3768>
   14eb0:	cmp	r3, #0
   14eb4:	movne	r1, fp
   14eb8:	movne	r0, r7
   14ebc:	movne	r6, r9
   14ec0:	bne	14c44 <__assert_fail@plt+0x3840>
   14ec4:	mov	r4, r3
   14ec8:	b	14b84 <__assert_fail@plt+0x3780>
   14ecc:	mov	r9, r6
   14ed0:	str	r8, [sp, #12]
   14ed4:	str	r4, [sp, #16]
   14ed8:	b	14a58 <__assert_fail@plt+0x3654>
   14edc:	mov	r4, #1
   14ee0:	b	14c08 <__assert_fail@plt+0x3804>
   14ee4:	mov	r1, #1
   14ee8:	mov	r0, r5
   14eec:	bl	1a87c <argp_parse@@Base+0x2be0>
   14ef0:	cmp	r0, #0
   14ef4:	beq	14b80 <__assert_fail@plt+0x377c>
   14ef8:	ldr	r3, [r5, #28]
   14efc:	b	14e8c <__assert_fail@plt+0x3a88>
   14f00:	mov	r1, #1
   14f04:	mov	r0, r5
   14f08:	bl	1a87c <argp_parse@@Base+0x2be0>
   14f0c:	cmp	r0, #0
   14f10:	beq	14b3c <__assert_fail@plt+0x3738>
   14f14:	ldr	r3, [r5, #28]
   14f18:	b	14e68 <__assert_fail@plt+0x3a64>
   14f1c:	ldr	r4, [sp, #20]
   14f20:	str	r4, [sp, #16]
   14f24:	b	14a24 <__assert_fail@plt+0x3620>
   14f28:	cmp	r3, #0
   14f2c:	beq	14cb4 <__assert_fail@plt+0x38b0>
   14f30:	mov	r1, fp
   14f34:	mov	r0, r7
   14f38:	bl	18b54 <argp_parse@@Base+0xeb8>
   14f3c:	str	r0, [sp, #12]
   14f40:	mov	r0, #1
   14f44:	movt	r0, #512	; 0x200
   14f48:	ldr	r3, [r7, #20]
   14f4c:	b	14c58 <__assert_fail@plt+0x3854>
   14f50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14f54:	ldr	r4, [r0, #16]
   14f58:	strd	r6, [sp, #8]
   14f5c:	strd	r8, [sp, #16]
   14f60:	strd	sl, [sp, #24]
   14f64:	str	lr, [sp, #32]
   14f68:	sub	sp, sp, #20
   14f6c:	cmp	r4, #0
   14f70:	movne	r3, r4
   14f74:	bne	14f80 <__assert_fail@plt+0x3b7c>
   14f78:	b	15810 <__assert_fail@plt+0x440c>
   14f7c:	mov	r3, r2
   14f80:	ldr	r2, [r3, #12]
   14f84:	cmp	r2, #0
   14f88:	bne	14f7c <__assert_fail@plt+0x3b78>
   14f8c:	ldr	r2, [r3, #8]
   14f90:	ldr	r7, [r1, #16]
   14f94:	cmp	r7, #0
   14f98:	movne	r3, r7
   14f9c:	bne	14fa8 <__assert_fail@plt+0x3ba4>
   14fa0:	b	15808 <__assert_fail@plt+0x4404>
   14fa4:	mov	r3, ip
   14fa8:	ldr	ip, [r3, #12]
   14fac:	cmp	ip, #0
   14fb0:	bne	14fa4 <__assert_fail@plt+0x3ba0>
   14fb4:	ldr	ip, [r3, #8]
   14fb8:	mvn	r3, ip
   14fbc:	lsr	r3, r3, #31
   14fc0:	cmp	r3, r2, lsr #31
   14fc4:	subne	ip, r2, ip
   14fc8:	subeq	ip, ip, r2
   14fcc:	cmp	ip, #0
   14fd0:	bne	151b0 <__assert_fail@plt+0x3dac>
   14fd4:	adds	ip, r7, #0
   14fd8:	movne	ip, #1
   14fdc:	cmp	r4, #0
   14fe0:	rsbeq	ip, ip, #0
   14fe4:	rsbne	ip, ip, #1
   14fe8:	cmp	ip, #0
   14fec:	bne	151b0 <__assert_fail@plt+0x3dac>
   14ff0:	cmp	r4, #0
   14ff4:	mov	r6, r1
   14ff8:	mov	r5, r0
   14ffc:	beq	15500 <__assert_fail@plt+0x40fc>
   15000:	ldr	r8, [r4, #12]
   15004:	ldr	r1, [r4, #20]
   15008:	ldr	r2, [r7, #20]
   1500c:	ldr	r9, [r7, #12]
   15010:	cmp	r1, r2
   15014:	bgt	151d4 <__assert_fail@plt+0x3dd0>
   15018:	blt	15024 <__assert_fail@plt+0x3c20>
   1501c:	b	15364 <__assert_fail@plt+0x3f60>
   15020:	mov	r9, r5
   15024:	ldr	r5, [r9, #12]
   15028:	ldr	r3, [r9, #20]
   1502c:	cmp	r1, r3
   15030:	blt	15020 <__assert_fail@plt+0x3c1c>
   15034:	cmp	r8, r5
   15038:	beq	159d0 <__assert_fail@plt+0x45cc>
   1503c:	ldr	r7, [r5, #12]
   15040:	ldr	r6, [r8, #12]
   15044:	cmp	r6, r7
   15048:	beq	15918 <__assert_fail@plt+0x4514>
   1504c:	ldr	sl, [r6, #12]
   15050:	ldr	fp, [r7, #12]
   15054:	cmp	sl, fp
   15058:	beq	15a38 <__assert_fail@plt+0x4634>
   1505c:	ldr	r3, [sl, #12]
   15060:	ldr	r2, [fp, #12]
   15064:	cmp	r3, r2
   15068:	beq	15ad4 <__assert_fail@plt+0x46d0>
   1506c:	ldr	r1, [r2, #12]
   15070:	ldr	r0, [r3, #12]
   15074:	cmp	r0, r1
   15078:	beq	15b70 <__assert_fail@plt+0x476c>
   1507c:	str	r3, [sp]
   15080:	str	r2, [sp, #4]
   15084:	bl	134b8 <__assert_fail@plt+0x20b4>
   15088:	subs	ip, r0, #0
   1508c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15090:	ldr	r3, [sp]
   15094:	ldr	r2, [sp, #4]
   15098:	ldr	r0, [r3, #8]
   1509c:	ldr	r1, [r2, #8]
   150a0:	mvn	ip, r1
   150a4:	lsr	ip, ip, #31
   150a8:	cmp	ip, r0, lsr #31
   150ac:	subne	ip, r0, r1
   150b0:	subeq	ip, r1, r0
   150b4:	cmp	ip, #0
   150b8:	bne	151b0 <__assert_fail@plt+0x3dac>
   150bc:	ldr	r1, [r2, #4]
   150c0:	ldr	r3, [r3, #4]
   150c4:	sub	ip, r1, r3
   150c8:	cmp	ip, #0
   150cc:	bne	151b0 <__assert_fail@plt+0x3dac>
   150d0:	ldr	r1, [fp, #8]
   150d4:	ldr	r0, [sl, #8]
   150d8:	mvn	r3, r1
   150dc:	lsr	r3, r3, #31
   150e0:	cmp	r3, r0, lsr #31
   150e4:	subne	ip, r0, r1
   150e8:	subeq	ip, r1, r0
   150ec:	cmp	ip, #0
   150f0:	bne	151b0 <__assert_fail@plt+0x3dac>
   150f4:	ldr	r3, [sl, #4]
   150f8:	ldr	r1, [fp, #4]
   150fc:	sub	ip, r1, r3
   15100:	cmp	ip, #0
   15104:	bne	151b0 <__assert_fail@plt+0x3dac>
   15108:	ldr	r1, [r7, #8]
   1510c:	ldr	r0, [r6, #8]
   15110:	mvn	r3, r1
   15114:	lsr	r3, r3, #31
   15118:	cmp	r3, r0, lsr #31
   1511c:	subne	ip, r0, r1
   15120:	subeq	ip, r1, r0
   15124:	cmp	ip, #0
   15128:	bne	151b0 <__assert_fail@plt+0x3dac>
   1512c:	ldr	r3, [r6, #4]
   15130:	ldr	r1, [r7, #4]
   15134:	sub	ip, r1, r3
   15138:	cmp	ip, #0
   1513c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15140:	ldr	r1, [r5, #8]
   15144:	ldr	r0, [r8, #8]
   15148:	mvn	r3, r1
   1514c:	lsr	r3, r3, #31
   15150:	cmp	r3, r0, lsr #31
   15154:	subne	ip, r0, r1
   15158:	subeq	ip, r1, r0
   1515c:	cmp	ip, #0
   15160:	bne	151b0 <__assert_fail@plt+0x3dac>
   15164:	ldr	r1, [r5, #4]
   15168:	ldr	r3, [r8, #4]
   1516c:	sub	ip, r1, r3
   15170:	cmp	ip, #0
   15174:	bne	151b0 <__assert_fail@plt+0x3dac>
   15178:	ldr	r1, [r9, #8]
   1517c:	ldr	r0, [r4, #8]
   15180:	mvn	r3, r1
   15184:	lsr	r3, r3, #31
   15188:	cmp	r3, r0, lsr #31
   1518c:	subne	ip, r0, r1
   15190:	subeq	ip, r1, r0
   15194:	cmp	ip, #0
   15198:	bne	151b0 <__assert_fail@plt+0x3dac>
   1519c:	ldr	r0, [r4, #4]
   151a0:	ldr	r1, [r9, #4]
   151a4:	sub	ip, r1, r0
   151a8:	cmp	ip, #0
   151ac:	mvneq	ip, #0
   151b0:	mov	r0, ip
   151b4:	add	sp, sp, #20
   151b8:	ldrd	r4, [sp]
   151bc:	ldrd	r6, [sp, #8]
   151c0:	ldrd	r8, [sp, #16]
   151c4:	ldrd	sl, [sp, #24]
   151c8:	add	sp, sp, #32
   151cc:	pop	{pc}		; (ldr pc, [sp], #4)
   151d0:	mov	r8, r4
   151d4:	ldr	r4, [r8, #12]
   151d8:	ldr	r3, [r8, #20]
   151dc:	cmp	r2, r3
   151e0:	blt	151d0 <__assert_fail@plt+0x3dcc>
   151e4:	cmp	r4, r9
   151e8:	beq	1599c <__assert_fail@plt+0x4598>
   151ec:	ldr	r5, [r4, #12]
   151f0:	ldr	r6, [r9, #12]
   151f4:	cmp	r5, r6
   151f8:	beq	15a04 <__assert_fail@plt+0x4600>
   151fc:	ldr	sl, [r5, #12]
   15200:	ldr	fp, [r6, #12]
   15204:	cmp	sl, fp
   15208:	beq	1594c <__assert_fail@plt+0x4548>
   1520c:	ldr	r3, [sl, #12]
   15210:	ldr	r2, [fp, #12]
   15214:	cmp	r3, r2
   15218:	beq	15a7c <__assert_fail@plt+0x4678>
   1521c:	ldr	r1, [r2, #12]
   15220:	ldr	r0, [r3, #12]
   15224:	cmp	r0, r1
   15228:	beq	15b08 <__assert_fail@plt+0x4704>
   1522c:	str	r3, [sp]
   15230:	str	r2, [sp, #4]
   15234:	bl	134b8 <__assert_fail@plt+0x20b4>
   15238:	subs	ip, r0, #0
   1523c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15240:	ldr	r3, [sp]
   15244:	ldr	r2, [sp, #4]
   15248:	ldr	r0, [r3, #8]
   1524c:	ldr	r1, [r2, #8]
   15250:	mvn	ip, r1
   15254:	lsr	ip, ip, #31
   15258:	cmp	ip, r0, lsr #31
   1525c:	subne	ip, r0, r1
   15260:	subeq	ip, r1, r0
   15264:	cmp	ip, #0
   15268:	bne	151b0 <__assert_fail@plt+0x3dac>
   1526c:	ldr	r1, [r2, #4]
   15270:	ldr	r3, [r3, #4]
   15274:	sub	ip, r1, r3
   15278:	cmp	ip, #0
   1527c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15280:	ldr	r1, [fp, #8]
   15284:	ldr	r0, [sl, #8]
   15288:	mvn	r3, r1
   1528c:	lsr	r3, r3, #31
   15290:	cmp	r3, r0, lsr #31
   15294:	subne	ip, r0, r1
   15298:	subeq	ip, r1, r0
   1529c:	cmp	ip, #0
   152a0:	bne	151b0 <__assert_fail@plt+0x3dac>
   152a4:	ldr	r3, [sl, #4]
   152a8:	ldr	r1, [fp, #4]
   152ac:	sub	ip, r1, r3
   152b0:	cmp	ip, #0
   152b4:	bne	151b0 <__assert_fail@plt+0x3dac>
   152b8:	ldr	r1, [r6, #8]
   152bc:	ldr	r0, [r5, #8]
   152c0:	mvn	r3, r1
   152c4:	lsr	r3, r3, #31
   152c8:	cmp	r3, r0, lsr #31
   152cc:	subne	ip, r0, r1
   152d0:	subeq	ip, r1, r0
   152d4:	cmp	ip, #0
   152d8:	bne	151b0 <__assert_fail@plt+0x3dac>
   152dc:	ldr	r3, [r5, #4]
   152e0:	ldr	r1, [r6, #4]
   152e4:	sub	ip, r1, r3
   152e8:	cmp	ip, #0
   152ec:	bne	151b0 <__assert_fail@plt+0x3dac>
   152f0:	ldr	r1, [r9, #8]
   152f4:	ldr	r0, [r4, #8]
   152f8:	mvn	r3, r1
   152fc:	lsr	r3, r3, #31
   15300:	cmp	r3, r0, lsr #31
   15304:	subne	ip, r0, r1
   15308:	subeq	ip, r1, r0
   1530c:	cmp	ip, #0
   15310:	bne	151b0 <__assert_fail@plt+0x3dac>
   15314:	ldr	r0, [r4, #4]
   15318:	ldr	r1, [r9, #4]
   1531c:	sub	ip, r1, r0
   15320:	cmp	ip, #0
   15324:	bne	151b0 <__assert_fail@plt+0x3dac>
   15328:	ldr	r1, [r7, #8]
   1532c:	ldr	r0, [r8, #8]
   15330:	mvn	r3, r1
   15334:	lsr	r3, r3, #31
   15338:	cmp	r3, r0, lsr #31
   1533c:	subne	ip, r0, r1
   15340:	subeq	ip, r1, r0
   15344:	cmp	ip, #0
   15348:	bne	151b0 <__assert_fail@plt+0x3dac>
   1534c:	ldr	r1, [r7, #4]
   15350:	ldr	r0, [r8, #4]
   15354:	sub	ip, r1, r0
   15358:	cmp	ip, #0
   1535c:	moveq	ip, #1
   15360:	b	151b0 <__assert_fail@plt+0x3dac>
   15364:	cmp	r8, r9
   15368:	beq	15b3c <__assert_fail@plt+0x4738>
   1536c:	ldr	sl, [r8, #12]
   15370:	ldr	fp, [r9, #12]
   15374:	cmp	sl, fp
   15378:	beq	15ba4 <__assert_fail@plt+0x47a0>
   1537c:	ldr	r3, [sl, #12]
   15380:	mov	r2, r3
   15384:	ldr	r3, [fp, #12]
   15388:	str	r2, [sp]
   1538c:	cmp	r2, r3
   15390:	beq	15bd8 <__assert_fail@plt+0x47d4>
   15394:	ldr	r2, [r2, #12]
   15398:	mov	r1, r2
   1539c:	ldr	r2, [r3, #12]
   153a0:	str	r1, [sp, #4]
   153a4:	cmp	r1, r2
   153a8:	beq	15c0c <__assert_fail@plt+0x4808>
   153ac:	ldr	r0, [r1, #12]
   153b0:	ldr	r1, [r2, #12]
   153b4:	cmp	r0, r1
   153b8:	beq	15c44 <__assert_fail@plt+0x4840>
   153bc:	str	r3, [sp, #8]
   153c0:	str	r2, [sp, #12]
   153c4:	bl	134b8 <__assert_fail@plt+0x20b4>
   153c8:	subs	ip, r0, #0
   153cc:	bne	151b0 <__assert_fail@plt+0x3dac>
   153d0:	ldr	r3, [sp, #4]
   153d4:	ldr	r2, [sp, #12]
   153d8:	ldr	r0, [r3, #8]
   153dc:	ldr	r1, [r2, #8]
   153e0:	ldr	r3, [sp, #8]
   153e4:	mvn	ip, r1
   153e8:	lsr	ip, ip, #31
   153ec:	cmp	ip, r0, lsr #31
   153f0:	subne	ip, r0, r1
   153f4:	subeq	ip, r1, r0
   153f8:	cmp	ip, #0
   153fc:	bne	151b0 <__assert_fail@plt+0x3dac>
   15400:	ldr	r1, [r2, #4]
   15404:	ldr	r2, [sp, #4]
   15408:	ldr	r2, [r2, #4]
   1540c:	sub	ip, r1, r2
   15410:	cmp	ip, #0
   15414:	bne	151b0 <__assert_fail@plt+0x3dac>
   15418:	ldr	r2, [sp]
   1541c:	ldr	r1, [r3, #8]
   15420:	ldr	r0, [r2, #8]
   15424:	mvn	r2, r1
   15428:	lsr	r2, r2, #31
   1542c:	cmp	r2, r0, lsr #31
   15430:	subne	ip, r0, r1
   15434:	subeq	ip, r1, r0
   15438:	cmp	ip, #0
   1543c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15440:	ldr	r1, [r3, #4]
   15444:	ldr	r3, [sp]
   15448:	ldr	r3, [r3, #4]
   1544c:	sub	ip, r1, r3
   15450:	cmp	ip, #0
   15454:	bne	151b0 <__assert_fail@plt+0x3dac>
   15458:	ldr	r1, [fp, #8]
   1545c:	ldr	r0, [sl, #8]
   15460:	mvn	r3, r1
   15464:	lsr	r3, r3, #31
   15468:	cmp	r3, r0, lsr #31
   1546c:	subne	ip, r0, r1
   15470:	subeq	ip, r1, r0
   15474:	cmp	ip, #0
   15478:	bne	151b0 <__assert_fail@plt+0x3dac>
   1547c:	ldr	r3, [sl, #4]
   15480:	ldr	r1, [fp, #4]
   15484:	sub	ip, r1, r3
   15488:	cmp	ip, #0
   1548c:	bne	151b0 <__assert_fail@plt+0x3dac>
   15490:	ldr	r1, [r9, #8]
   15494:	ldr	r0, [r8, #8]
   15498:	mvn	r3, r1
   1549c:	lsr	r3, r3, #31
   154a0:	cmp	r3, r0, lsr #31
   154a4:	subne	ip, r0, r1
   154a8:	subeq	ip, r1, r0
   154ac:	cmp	ip, #0
   154b0:	bne	151b0 <__assert_fail@plt+0x3dac>
   154b4:	ldr	r3, [r8, #4]
   154b8:	ldr	r1, [r9, #4]
   154bc:	sub	ip, r1, r3
   154c0:	cmp	ip, #0
   154c4:	bne	151b0 <__assert_fail@plt+0x3dac>
   154c8:	ldr	r1, [r7, #8]
   154cc:	ldr	r0, [r4, #8]
   154d0:	mvn	r3, r1
   154d4:	lsr	r3, r3, #31
   154d8:	cmp	r3, r0, lsr #31
   154dc:	subne	ip, r0, r1
   154e0:	subeq	ip, r1, r0
   154e4:	cmp	ip, #0
   154e8:	bne	151b0 <__assert_fail@plt+0x3dac>
   154ec:	ldr	r3, [r4, #4]
   154f0:	ldr	r1, [r7, #4]
   154f4:	sub	ip, r1, r3
   154f8:	cmp	ip, #0
   154fc:	bne	151b0 <__assert_fail@plt+0x3dac>
   15500:	ldr	r1, [r6, #12]
   15504:	ldr	r0, [r5, #12]
   15508:	mvn	r3, r1
   1550c:	lsr	r3, r3, #31
   15510:	cmp	r3, r0, lsr #31
   15514:	subne	ip, r0, r1
   15518:	subeq	ip, r1, r0
   1551c:	cmp	ip, #0
   15520:	bne	151b0 <__assert_fail@plt+0x3dac>
   15524:	ldm	r5, {r3, sl}
   15528:	cmp	sl, #0
   1552c:	beq	15a6c <__assert_fail@plt+0x4668>
   15530:	add	r2, r3, #24
   15534:	mov	r1, sl
   15538:	ldr	r7, [r2, #-24]	; 0xffffffe8
   1553c:	cmp	r7, #0
   15540:	beq	15550 <__assert_fail@plt+0x414c>
   15544:	ldr	r0, [r2, #-12]
   15548:	tst	r0, #2
   1554c:	beq	15560 <__assert_fail@plt+0x415c>
   15550:	subs	r1, r1, #1
   15554:	add	r2, r2, #24
   15558:	bne	15538 <__assert_fail@plt+0x4134>
   1555c:	mov	r7, r1
   15560:	ldrd	r8, [r6]
   15564:	cmp	r9, #0
   15568:	beq	15a74 <__assert_fail@plt+0x4670>
   1556c:	add	r2, r8, #24
   15570:	mov	r1, r9
   15574:	ldr	r4, [r2, #-24]	; 0xffffffe8
   15578:	cmp	r4, #0
   1557c:	beq	1558c <__assert_fail@plt+0x4188>
   15580:	ldr	r0, [r2, #-12]
   15584:	tst	r0, #2
   15588:	beq	1559c <__assert_fail@plt+0x4198>
   1558c:	subs	r1, r1, #1
   15590:	add	r2, r2, #24
   15594:	bne	15574 <__assert_fail@plt+0x4170>
   15598:	mov	r4, r1
   1559c:	ldr	r2, [r3, #12]
   155a0:	tst	r2, #8
   155a4:	beq	15618 <__assert_fail@plt+0x4214>
   155a8:	cmp	r7, #0
   155ac:	beq	15618 <__assert_fail@plt+0x4214>
   155b0:	str	r3, [sp]
   155b4:	bl	11260 <__ctype_b_loc@plt>
   155b8:	ldrb	r1, [r7]
   155bc:	ldr	r0, [r0]
   155c0:	ldr	r3, [sp]
   155c4:	lsl	r2, r1, #1
   155c8:	ldrh	r2, [r0, r2]
   155cc:	tst	r2, #8192	; 0x2000
   155d0:	beq	155e8 <__assert_fail@plt+0x41e4>
   155d4:	ldrb	r1, [r7, #1]!
   155d8:	lsl	r2, r1, #1
   155dc:	ldrh	r2, [r0, r2]
   155e0:	tst	r2, #8192	; 0x2000
   155e4:	bne	155d4 <__assert_fail@plt+0x41d0>
   155e8:	cmp	r1, #0
   155ec:	bne	15608 <__assert_fail@plt+0x4204>
   155f0:	b	158fc <__assert_fail@plt+0x44f8>
   155f4:	ldrb	r2, [r7, #1]!
   155f8:	cmp	r2, #0
   155fc:	lsl	ip, r2, #1
   15600:	beq	15610 <__assert_fail@plt+0x420c>
   15604:	ldrh	r2, [r0, ip]
   15608:	tst	r2, #8
   1560c:	beq	155f4 <__assert_fail@plt+0x41f0>
   15610:	cmp	r1, #45	; 0x2d
   15614:	bne	158fc <__assert_fail@plt+0x44f8>
   15618:	ldr	r2, [r8, #12]
   1561c:	tst	r2, #8
   15620:	bne	15818 <__assert_fail@plt+0x4414>
   15624:	cmp	sl, #0
   15628:	ldr	r2, [r5, #8]
   1562c:	ldr	r6, [r6, #8]
   15630:	beq	158a0 <__assert_fail@plt+0x449c>
   15634:	mov	fp, sl
   15638:	mov	r5, r3
   1563c:	str	r7, [sp]
   15640:	stmib	sp, {r4, r6}
   15644:	mov	r4, r2
   15648:	ldr	sl, [r5, #12]
   1564c:	mov	r0, #1
   15650:	ands	r6, sl, #8
   15654:	movne	r6, #0
   15658:	bne	156a8 <__assert_fail@plt+0x42a4>
   1565c:	ldr	r7, [r5, #4]
   15660:	sub	ip, r7, #1
   15664:	cmp	ip, #254	; 0xfe
   15668:	bhi	156a8 <__assert_fail@plt+0x42a4>
   1566c:	bl	11260 <__ctype_b_loc@plt>
   15670:	ldr	lr, [r0]
   15674:	lsl	ip, r7, #1
   15678:	mov	r0, #1
   1567c:	ldrh	ip, [lr, ip]
   15680:	tst	ip, #16384	; 0x4000
   15684:	beq	156a8 <__assert_fail@plt+0x42a4>
   15688:	ldrb	ip, [r4]
   1568c:	cmp	r7, ip
   15690:	bne	156a8 <__assert_fail@plt+0x42a4>
   15694:	and	sl, sl, #2
   15698:	add	r4, r4, r0
   1569c:	cmp	sl, #0
   156a0:	moveq	r6, r7
   156a4:	moveq	r0, #0
   156a8:	subs	fp, fp, #1
   156ac:	add	r5, r5, #24
   156b0:	moveq	r0, #0
   156b4:	cmp	r0, #0
   156b8:	bne	15648 <__assert_fail@plt+0x4244>
   156bc:	uxtb	r3, r6
   156c0:	mov	fp, r6
   156c4:	ldr	r7, [sp]
   156c8:	cmp	r9, #0
   156cc:	ldmib	sp, {r4, r6}
   156d0:	str	r3, [sp]
   156d4:	strne	r4, [sp, #4]
   156d8:	beq	15ab0 <__assert_fail@plt+0x46ac>
   156dc:	ldr	r5, [r8, #12]
   156e0:	mov	r3, #1
   156e4:	ands	sl, r5, #8
   156e8:	movne	sl, #0
   156ec:	bne	1573c <__assert_fail@plt+0x4338>
   156f0:	ldr	r4, [r8, #4]
   156f4:	sub	r1, r4, #1
   156f8:	cmp	r1, #254	; 0xfe
   156fc:	bhi	1573c <__assert_fail@plt+0x4338>
   15700:	bl	11260 <__ctype_b_loc@plt>
   15704:	ldr	r0, [r0]
   15708:	lsl	r1, r4, #1
   1570c:	mov	r3, #1
   15710:	ldrh	r1, [r0, r1]
   15714:	tst	r1, #16384	; 0x4000
   15718:	beq	1573c <__assert_fail@plt+0x4338>
   1571c:	ldrb	r1, [r6]
   15720:	cmp	r4, r1
   15724:	bne	1573c <__assert_fail@plt+0x4338>
   15728:	and	r5, r5, #2
   1572c:	add	r6, r6, r3
   15730:	cmp	r5, #0
   15734:	moveq	sl, r4
   15738:	moveq	r3, #0
   1573c:	subs	r9, r9, #1
   15740:	add	r8, r8, #24
   15744:	moveq	r3, #0
   15748:	cmp	r3, #0
   1574c:	bne	156dc <__assert_fail@plt+0x42d8>
   15750:	cmp	fp, #0
   15754:	uxtb	r6, sl
   15758:	ldr	r4, [sp, #4]
   1575c:	beq	158e0 <__assert_fail@plt+0x44dc>
   15760:	ldr	r3, [sp]
   15764:	lsl	r9, r3, #2
   15768:	cmp	sl, #0
   1576c:	beq	158cc <__assert_fail@plt+0x44c8>
   15770:	lsl	r8, r6, #2
   15774:	bl	1123c <__ctype_tolower_loc@plt>
   15778:	ldr	r3, [r0]
   1577c:	ldr	r1, [r3, r9]
   15780:	ldr	r0, [r3, r8]
   15784:	subs	ip, r1, r0
   15788:	bne	151b0 <__assert_fail@plt+0x3dac>
   1578c:	ldr	r3, [sp]
   15790:	subs	ip, r6, r3
   15794:	bne	151b0 <__assert_fail@plt+0x3dac>
   15798:	adds	r0, sl, #0
   1579c:	movne	r0, #1
   157a0:	cmp	fp, #0
   157a4:	rsbeq	ip, r0, #0
   157a8:	rsbne	ip, r0, #1
   157ac:	cmp	ip, #0
   157b0:	bne	151b0 <__assert_fail@plt+0x3dac>
   157b4:	cmp	fp, #0
   157b8:	bne	151b0 <__assert_fail@plt+0x3dac>
   157bc:	adds	r0, r4, #0
   157c0:	movne	r0, #1
   157c4:	cmp	r7, #0
   157c8:	rsbeq	ip, r0, #0
   157cc:	rsbne	ip, r0, #1
   157d0:	cmp	ip, #0
   157d4:	bne	151b0 <__assert_fail@plt+0x3dac>
   157d8:	cmp	r7, #0
   157dc:	beq	151b0 <__assert_fail@plt+0x3dac>
   157e0:	mov	r1, r4
   157e4:	mov	r0, r7
   157e8:	add	sp, sp, #20
   157ec:	ldrd	r4, [sp]
   157f0:	ldrd	r6, [sp, #8]
   157f4:	ldrd	r8, [sp, #16]
   157f8:	ldrd	sl, [sp, #24]
   157fc:	ldr	lr, [sp, #32]
   15800:	add	sp, sp, #36	; 0x24
   15804:	b	111c4 <strcasecmp@plt>
   15808:	ldr	ip, [r1, #12]
   1580c:	b	14fb8 <__assert_fail@plt+0x3bb4>
   15810:	ldr	r2, [r0, #12]
   15814:	b	14f90 <__assert_fail@plt+0x3b8c>
   15818:	cmp	r4, #0
   1581c:	movne	fp, #0
   15820:	beq	15624 <__assert_fail@plt+0x4220>
   15824:	str	r3, [sp]
   15828:	bl	11260 <__ctype_b_loc@plt>
   1582c:	ldrb	ip, [r4]
   15830:	ldr	r1, [r0]
   15834:	ldr	r3, [sp]
   15838:	lsl	r2, ip, #1
   1583c:	ldrh	r2, [r1, r2]
   15840:	tst	r2, #8192	; 0x2000
   15844:	beq	1585c <__assert_fail@plt+0x4458>
   15848:	ldrb	ip, [r4, #1]!
   1584c:	lsl	r2, ip, #1
   15850:	ldrh	r2, [r1, r2]
   15854:	tst	r2, #8192	; 0x2000
   15858:	bne	15848 <__assert_fail@plt+0x4444>
   1585c:	cmp	ip, #0
   15860:	bne	1587c <__assert_fail@plt+0x4478>
   15864:	b	15884 <__assert_fail@plt+0x4480>
   15868:	ldrb	r2, [r4, #1]!
   1586c:	cmp	r2, #0
   15870:	lsl	r0, r2, #1
   15874:	beq	15884 <__assert_fail@plt+0x4480>
   15878:	ldrh	r2, [r1, r0]
   1587c:	tst	r2, #8
   15880:	beq	15868 <__assert_fail@plt+0x4464>
   15884:	cmp	ip, #45	; 0x2d
   15888:	moveq	r0, fp
   1588c:	subne	r0, fp, #1
   15890:	cmp	r0, #0
   15894:	movne	ip, r0
   15898:	bne	151b0 <__assert_fail@plt+0x3dac>
   1589c:	b	15624 <__assert_fail@plt+0x4220>
   158a0:	cmp	r9, #0
   158a4:	movne	fp, sl
   158a8:	strne	r4, [sp, #4]
   158ac:	strne	fp, [sp]
   158b0:	bne	156dc <__assert_fail@plt+0x42d8>
   158b4:	cmp	r7, #0
   158b8:	beq	15c80 <__assert_fail@plt+0x487c>
   158bc:	ldrb	r3, [r7]
   158c0:	mov	fp, sl
   158c4:	lsl	r9, r3, #2
   158c8:	str	r3, [sp]
   158cc:	cmp	r4, #0
   158d0:	beq	15980 <__assert_fail@plt+0x457c>
   158d4:	ldrb	r6, [r4]
   158d8:	mov	sl, #0
   158dc:	b	15770 <__assert_fail@plt+0x436c>
   158e0:	cmp	r7, #0
   158e4:	beq	15990 <__assert_fail@plt+0x458c>
   158e8:	ldrb	r3, [r7]
   158ec:	mov	fp, #0
   158f0:	lsl	r9, r3, #2
   158f4:	str	r3, [sp]
   158f8:	b	15768 <__assert_fail@plt+0x4364>
   158fc:	ldr	r2, [r8, #12]
   15900:	tst	r2, #8
   15904:	beq	15910 <__assert_fail@plt+0x450c>
   15908:	cmp	r4, #0
   1590c:	bne	15c88 <__assert_fail@plt+0x4884>
   15910:	mov	ip, #1
   15914:	b	151b0 <__assert_fail@plt+0x3dac>
   15918:	ldr	lr, [r5, #4]
   1591c:	ldr	r1, [r5, #8]
   15920:	ldr	r0, [r8, #8]
   15924:	ldr	r2, [r8, #4]
   15928:	mvn	r3, r1
   1592c:	lsr	r3, r3, #31
   15930:	cmp	r3, r0, lsr #31
   15934:	subne	ip, r0, r1
   15938:	subeq	ip, r1, r0
   1593c:	cmp	ip, #0
   15940:	subeq	ip, lr, r2
   15944:	beq	15170 <__assert_fail@plt+0x3d6c>
   15948:	b	151b0 <__assert_fail@plt+0x3dac>
   1594c:	ldr	r2, [r5, #4]
   15950:	ldr	r1, [r6, #8]
   15954:	ldr	r0, [r5, #8]
   15958:	ldr	lr, [r6, #4]
   1595c:	mvn	r3, r1
   15960:	lsr	r3, r3, #31
   15964:	cmp	r3, r0, lsr #31
   15968:	subne	ip, r0, r1
   1596c:	subeq	ip, r1, r0
   15970:	cmp	ip, #0
   15974:	subeq	ip, lr, r2
   15978:	beq	152e8 <__assert_fail@plt+0x3ee4>
   1597c:	b	151b0 <__assert_fail@plt+0x3dac>
   15980:	mov	sl, r4
   15984:	mov	r8, r4
   15988:	mov	r6, r4
   1598c:	b	15774 <__assert_fail@plt+0x4370>
   15990:	mov	r9, r7
   15994:	str	r7, [sp]
   15998:	b	15768 <__assert_fail@plt+0x4364>
   1599c:	ldr	lr, [r7, #4]
   159a0:	ldr	r1, [r7, #8]
   159a4:	ldr	r0, [r8, #8]
   159a8:	ldr	r2, [r8, #4]
   159ac:	mvn	r3, r1
   159b0:	lsr	r3, r3, #31
   159b4:	cmp	r3, r0, lsr #31
   159b8:	subne	ip, r0, r1
   159bc:	subeq	ip, r1, r0
   159c0:	cmp	ip, #0
   159c4:	subeq	ip, lr, r2
   159c8:	beq	15358 <__assert_fail@plt+0x3f54>
   159cc:	b	151b0 <__assert_fail@plt+0x3dac>
   159d0:	ldr	r2, [r4, #4]
   159d4:	ldr	r1, [r9, #8]
   159d8:	ldr	r0, [r4, #8]
   159dc:	ldr	lr, [r9, #4]
   159e0:	mvn	r3, r1
   159e4:	lsr	r3, r3, #31
   159e8:	cmp	r3, r0, lsr #31
   159ec:	subne	ip, r0, r1
   159f0:	subeq	ip, r1, r0
   159f4:	cmp	ip, #0
   159f8:	subeq	ip, lr, r2
   159fc:	beq	151a8 <__assert_fail@plt+0x3da4>
   15a00:	b	151b0 <__assert_fail@plt+0x3dac>
   15a04:	ldr	r2, [r4, #4]
   15a08:	ldr	r1, [r9, #8]
   15a0c:	ldr	r0, [r4, #8]
   15a10:	ldr	lr, [r9, #4]
   15a14:	mvn	r3, r1
   15a18:	lsr	r3, r3, #31
   15a1c:	cmp	r3, r0, lsr #31
   15a20:	subne	ip, r0, r1
   15a24:	subeq	ip, r1, r0
   15a28:	cmp	ip, #0
   15a2c:	subeq	ip, lr, r2
   15a30:	beq	15320 <__assert_fail@plt+0x3f1c>
   15a34:	b	151b0 <__assert_fail@plt+0x3dac>
   15a38:	ldr	r2, [r6, #4]
   15a3c:	ldr	r1, [r7, #8]
   15a40:	ldr	r0, [r6, #8]
   15a44:	ldr	lr, [r7, #4]
   15a48:	mvn	r3, r1
   15a4c:	lsr	r3, r3, #31
   15a50:	cmp	r3, r0, lsr #31
   15a54:	subne	ip, r0, r1
   15a58:	subeq	ip, r1, r0
   15a5c:	cmp	ip, #0
   15a60:	subeq	ip, lr, r2
   15a64:	beq	15138 <__assert_fail@plt+0x3d34>
   15a68:	b	151b0 <__assert_fail@plt+0x3dac>
   15a6c:	mov	r7, ip
   15a70:	b	15560 <__assert_fail@plt+0x415c>
   15a74:	mov	r4, r9
   15a78:	b	1559c <__assert_fail@plt+0x4198>
   15a7c:	ldr	r2, [sl, #4]
   15a80:	ldr	r1, [fp, #8]
   15a84:	ldr	r0, [sl, #8]
   15a88:	ldr	lr, [fp, #4]
   15a8c:	mvn	r3, r1
   15a90:	lsr	r3, r3, #31
   15a94:	cmp	r3, r0, lsr #31
   15a98:	subne	ip, r0, r1
   15a9c:	subeq	ip, r1, r0
   15aa0:	cmp	ip, #0
   15aa4:	subeq	ip, lr, r2
   15aa8:	beq	152b0 <__assert_fail@plt+0x3eac>
   15aac:	b	151b0 <__assert_fail@plt+0x3dac>
   15ab0:	cmp	fp, #0
   15ab4:	lslne	r9, fp, #2
   15ab8:	bne	158cc <__assert_fail@plt+0x44c8>
   15abc:	cmp	r7, #0
   15ac0:	movne	sl, fp
   15ac4:	movne	r6, sl
   15ac8:	bne	158e8 <__assert_fail@plt+0x44e4>
   15acc:	str	r7, [sp]
   15ad0:	b	158cc <__assert_fail@plt+0x44c8>
   15ad4:	ldr	r2, [sl, #4]
   15ad8:	ldr	r1, [fp, #8]
   15adc:	ldr	r0, [sl, #8]
   15ae0:	ldr	lr, [fp, #4]
   15ae4:	mvn	r3, r1
   15ae8:	lsr	r3, r3, #31
   15aec:	cmp	r3, r0, lsr #31
   15af0:	subne	ip, r0, r1
   15af4:	subeq	ip, r1, r0
   15af8:	cmp	ip, #0
   15afc:	subeq	ip, lr, r2
   15b00:	beq	15100 <__assert_fail@plt+0x3cfc>
   15b04:	b	151b0 <__assert_fail@plt+0x3dac>
   15b08:	ldr	r0, [r3, #8]
   15b0c:	ldr	r1, [r2, #8]
   15b10:	ldr	lr, [r2, #4]
   15b14:	ldr	r3, [r3, #4]
   15b18:	mvn	r2, r1
   15b1c:	lsr	r2, r2, #31
   15b20:	cmp	r2, r0, lsr #31
   15b24:	subne	ip, r0, r1
   15b28:	subeq	ip, r1, r0
   15b2c:	cmp	ip, #0
   15b30:	subeq	ip, lr, r3
   15b34:	beq	15278 <__assert_fail@plt+0x3e74>
   15b38:	b	151b0 <__assert_fail@plt+0x3dac>
   15b3c:	ldr	r2, [r4, #4]
   15b40:	ldr	r1, [r7, #8]
   15b44:	ldr	r0, [r4, #8]
   15b48:	ldr	lr, [r7, #4]
   15b4c:	mvn	r3, r1
   15b50:	lsr	r3, r3, #31
   15b54:	cmp	r3, r0, lsr #31
   15b58:	subne	ip, r0, r1
   15b5c:	subeq	ip, r1, r0
   15b60:	cmp	ip, #0
   15b64:	subeq	ip, lr, r2
   15b68:	beq	154f8 <__assert_fail@plt+0x40f4>
   15b6c:	b	151b0 <__assert_fail@plt+0x3dac>
   15b70:	ldr	r0, [r3, #8]
   15b74:	ldr	r1, [r2, #8]
   15b78:	ldr	lr, [r2, #4]
   15b7c:	ldr	r3, [r3, #4]
   15b80:	mvn	r2, r1
   15b84:	lsr	r2, r2, #31
   15b88:	cmp	r2, r0, lsr #31
   15b8c:	subne	ip, r0, r1
   15b90:	subeq	ip, r1, r0
   15b94:	cmp	ip, #0
   15b98:	subeq	ip, lr, r3
   15b9c:	beq	150c8 <__assert_fail@plt+0x3cc4>
   15ba0:	b	151b0 <__assert_fail@plt+0x3dac>
   15ba4:	ldr	r2, [r8, #4]
   15ba8:	ldr	r1, [r9, #8]
   15bac:	ldr	r0, [r8, #8]
   15bb0:	ldr	lr, [r9, #4]
   15bb4:	mvn	r3, r1
   15bb8:	lsr	r3, r3, #31
   15bbc:	cmp	r3, r0, lsr #31
   15bc0:	subne	ip, r0, r1
   15bc4:	subeq	ip, r1, r0
   15bc8:	cmp	ip, #0
   15bcc:	subeq	ip, lr, r2
   15bd0:	beq	154c0 <__assert_fail@plt+0x40bc>
   15bd4:	b	151b0 <__assert_fail@plt+0x3dac>
   15bd8:	ldr	r2, [sl, #4]
   15bdc:	ldr	r1, [fp, #8]
   15be0:	ldr	r0, [sl, #8]
   15be4:	ldr	lr, [fp, #4]
   15be8:	mvn	r3, r1
   15bec:	lsr	r3, r3, #31
   15bf0:	cmp	r3, r0, lsr #31
   15bf4:	subne	ip, r0, r1
   15bf8:	subeq	ip, r1, r0
   15bfc:	cmp	ip, #0
   15c00:	subeq	ip, lr, r2
   15c04:	beq	15488 <__assert_fail@plt+0x4084>
   15c08:	b	151b0 <__assert_fail@plt+0x3dac>
   15c0c:	ldr	ip, [sp]
   15c10:	ldr	r2, [r3, #4]
   15c14:	ldr	r1, [r3, #8]
   15c18:	ldr	lr, [ip, #4]
   15c1c:	ldr	r0, [ip, #8]
   15c20:	mvn	r3, r1
   15c24:	lsr	r3, r3, #31
   15c28:	cmp	r3, r0, lsr #31
   15c2c:	subne	ip, r0, r1
   15c30:	subeq	ip, r1, r0
   15c34:	cmp	ip, #0
   15c38:	subeq	ip, r2, lr
   15c3c:	beq	15450 <__assert_fail@plt+0x404c>
   15c40:	b	151b0 <__assert_fail@plt+0x3dac>
   15c44:	ldr	r0, [sp, #4]
   15c48:	ldr	lr, [r2, #4]
   15c4c:	ldr	r1, [r2, #8]
   15c50:	ldr	r2, [sp, #4]
   15c54:	ldr	r0, [r0, #8]
   15c58:	mvn	ip, r1
   15c5c:	lsr	ip, ip, #31
   15c60:	ldr	r2, [r2, #4]
   15c64:	cmp	ip, r0, lsr #31
   15c68:	subne	ip, r0, r1
   15c6c:	subeq	ip, r1, r0
   15c70:	cmp	ip, #0
   15c74:	subeq	ip, lr, r2
   15c78:	beq	15410 <__assert_fail@plt+0x400c>
   15c7c:	b	151b0 <__assert_fail@plt+0x3dac>
   15c80:	mov	fp, r7
   15c84:	b	15acc <__assert_fail@plt+0x46c8>
   15c88:	mov	fp, #1
   15c8c:	b	15824 <__assert_fail@plt+0x4420>

00015c90 <argp_failure@@Base>:
   15c90:	push	{r3}		; (str r3, [sp, #-4]!)
   15c94:	strd	r4, [sp, #-20]!	; 0xffffffec
   15c98:	subs	r5, r0, #0
   15c9c:	strd	r6, [sp, #8]
   15ca0:	mov	r7, r1
   15ca4:	mov	r6, r2
   15ca8:	str	lr, [sp, #16]
   15cac:	sub	sp, sp, #200	; 0xc8
   15cb0:	beq	15e0c <argp_failure@@Base+0x17c>
   15cb4:	ldr	r3, [r5, #16]
   15cb8:	tst	r3, #2
   15cbc:	bne	15df0 <argp_failure@@Base+0x160>
   15cc0:	ldr	r4, [r5, #44]	; 0x2c
   15cc4:	cmp	r4, #0
   15cc8:	beq	15df0 <argp_failure@@Base+0x160>
   15ccc:	mov	r0, r4
   15cd0:	bl	11380 <flockfile@plt>
   15cd4:	ldr	r0, [r5, #40]	; 0x28
   15cd8:	mov	r1, r4
   15cdc:	bl	110bc <fputs_unlocked@plt>
   15ce0:	ldr	r3, [sp, #220]	; 0xdc
   15ce4:	cmp	r3, #0
   15ce8:	beq	15d44 <argp_failure@@Base+0xb4>
   15cec:	ldr	r3, [r4, #20]
   15cf0:	add	r1, sp, #224	; 0xe0
   15cf4:	ldr	r2, [r4, #24]
   15cf8:	str	r1, [sp]
   15cfc:	cmp	r3, r2
   15d00:	addcc	r1, r3, #1
   15d04:	movcc	r2, #58	; 0x3a
   15d08:	strcc	r1, [r4, #20]
   15d0c:	strbcc	r2, [r3]
   15d10:	bcs	15e7c <argp_failure@@Base+0x1ec>
   15d14:	ldr	r3, [r4, #20]
   15d18:	ldr	r2, [r4, #24]
   15d1c:	cmp	r3, r2
   15d20:	addcc	r1, r3, #1
   15d24:	movcc	r2, #32
   15d28:	strcc	r1, [r4, #20]
   15d2c:	strbcc	r2, [r3]
   15d30:	bcs	15e6c <argp_failure@@Base+0x1dc>
   15d34:	mov	r0, r4
   15d38:	ldr	r2, [sp]
   15d3c:	ldr	r1, [sp, #220]	; 0xdc
   15d40:	bl	11344 <vfprintf@plt>
   15d44:	cmp	r6, #0
   15d48:	ldr	r3, [r4, #20]
   15d4c:	ldr	r2, [r4, #24]
   15d50:	beq	15db4 <argp_failure@@Base+0x124>
   15d54:	cmp	r2, r3
   15d58:	addhi	r1, r3, #1
   15d5c:	movhi	r2, #58	; 0x3a
   15d60:	strhi	r1, [r4, #20]
   15d64:	strbhi	r2, [r3]
   15d68:	bls	15e9c <argp_failure@@Base+0x20c>
   15d6c:	ldr	r3, [r4, #20]
   15d70:	ldr	r2, [r4, #24]
   15d74:	cmp	r3, r2
   15d78:	addcc	r1, r3, #1
   15d7c:	movcc	r2, #32
   15d80:	strcc	r1, [r4, #20]
   15d84:	strbcc	r2, [r3]
   15d88:	bcs	15e8c <argp_failure@@Base+0x1fc>
   15d8c:	mov	r2, #200	; 0xc8
   15d90:	mov	r1, sp
   15d94:	mov	r0, r6
   15d98:	bl	112cc <strerror_r@plt>
   15d9c:	cmp	r0, #0
   15da0:	beq	15e50 <argp_failure@@Base+0x1c0>
   15da4:	mov	r1, r4
   15da8:	bl	110bc <fputs_unlocked@plt>
   15dac:	ldr	r3, [r4, #20]
   15db0:	ldr	r2, [r4, #24]
   15db4:	cmp	r3, r2
   15db8:	addcc	r1, r3, #1
   15dbc:	movcc	r2, #10
   15dc0:	strcc	r1, [r4, #20]
   15dc4:	strbcc	r2, [r3]
   15dc8:	bcs	15e40 <argp_failure@@Base+0x1b0>
   15dcc:	mov	r0, r4
   15dd0:	bl	111d0 <funlockfile@plt>
   15dd4:	cmp	r7, #0
   15dd8:	beq	15df0 <argp_failure@@Base+0x160>
   15ddc:	cmp	r5, #0
   15de0:	beq	15e38 <argp_failure@@Base+0x1a8>
   15de4:	ldr	r3, [r5, #16]
   15de8:	tst	r3, #32
   15dec:	beq	15e38 <argp_failure@@Base+0x1a8>
   15df0:	add	sp, sp, #200	; 0xc8
   15df4:	ldrd	r4, [sp]
   15df8:	ldrd	r6, [sp, #8]
   15dfc:	ldr	lr, [sp, #16]
   15e00:	add	sp, sp, #20
   15e04:	add	sp, sp, #4
   15e08:	bx	lr
   15e0c:	movw	r3, #58328	; 0xe3d8
   15e10:	movt	r3, #2
   15e14:	ldr	r4, [r3]
   15e18:	cmp	r4, #0
   15e1c:	beq	15df0 <argp_failure@@Base+0x160>
   15e20:	mov	r0, r4
   15e24:	bl	11380 <flockfile@plt>
   15e28:	movw	r3, #58320	; 0xe3d0
   15e2c:	movt	r3, #2
   15e30:	ldr	r0, [r3]
   15e34:	b	15cd8 <argp_failure@@Base+0x48>
   15e38:	mov	r0, r7
   15e3c:	bl	11278 <exit@plt>
   15e40:	mov	r1, #10
   15e44:	mov	r0, r4
   15e48:	bl	11314 <__overflow@plt>
   15e4c:	b	15dcc <argp_failure@@Base+0x13c>
   15e50:	mov	r0, r6
   15e54:	bl	11230 <strerror@plt>
   15e58:	cmp	r0, #0
   15e5c:	movw	r3, #51324	; 0xc87c
   15e60:	movt	r3, #1
   15e64:	moveq	r0, r3
   15e68:	b	15da4 <argp_failure@@Base+0x114>
   15e6c:	mov	r1, #32
   15e70:	mov	r0, r4
   15e74:	bl	11314 <__overflow@plt>
   15e78:	b	15d34 <argp_failure@@Base+0xa4>
   15e7c:	mov	r1, #58	; 0x3a
   15e80:	mov	r0, r4
   15e84:	bl	11314 <__overflow@plt>
   15e88:	b	15d14 <argp_failure@@Base+0x84>
   15e8c:	mov	r1, #32
   15e90:	mov	r0, r4
   15e94:	bl	11314 <__overflow@plt>
   15e98:	b	15d8c <argp_failure@@Base+0xfc>
   15e9c:	mov	r1, #58	; 0x3a
   15ea0:	mov	r0, r4
   15ea4:	bl	11314 <__overflow@plt>
   15ea8:	b	15d6c <argp_failure@@Base+0xdc>
   15eac:	cmp	r2, #0
   15eb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15eb4:	strd	r6, [sp, #8]
   15eb8:	strd	r8, [sp, #16]
   15ebc:	strd	sl, [sp, #24]
   15ec0:	add	fp, sp, #32
   15ec4:	str	lr, [sp, #32]
   15ec8:	sub	sp, sp, #124	; 0x7c
   15ecc:	str	r2, [fp, #-132]	; 0xffffff7c
   15ed0:	str	r0, [fp, #-108]	; 0xffffff94
   15ed4:	str	r3, [fp, #-104]	; 0xffffff98
   15ed8:	str	r1, [fp, #-100]	; 0xffffff9c
   15edc:	beq	16390 <argp_failure@@Base+0x700>
   15ee0:	mov	r0, r2
   15ee4:	movw	r9, #58256	; 0xe390
   15ee8:	movt	r9, #2
   15eec:	bl	11380 <flockfile@plt>
   15ef0:	ldr	r3, [r9, #36]	; 0x24
   15ef4:	cmp	r3, #0
   15ef8:	beq	163ac <argp_failure@@Base+0x71c>
   15efc:	mov	r3, #0
   15f00:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15f04:	mov	r1, r3
   15f08:	ldr	r2, [r9, #32]
   15f0c:	bl	1a154 <argp_parse@@Base+0x24b8>
   15f10:	subs	r7, r0, #0
   15f14:	beq	17208 <argp_failure@@Base+0x1578>
   15f18:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f1c:	ands	r3, r3, #11
   15f20:	streq	r3, [fp, #-112]	; 0xffffff90
   15f24:	bne	16738 <argp_failure@@Base+0xaa8>
   15f28:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f2c:	ands	r4, r3, #3
   15f30:	bne	1657c <argp_failure@@Base+0x8ec>
   15f34:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f38:	tst	r3, #16
   15f3c:	bne	16548 <argp_failure@@Base+0x8b8>
   15f40:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f44:	tst	r3, #4
   15f48:	and	r5, r3, #8
   15f4c:	bne	164c0 <argp_failure@@Base+0x830>
   15f50:	cmp	r5, #0
   15f54:	beq	162fc <argp_failure@@Base+0x66c>
   15f58:	ldr	r3, [fp, #-112]	; 0xffffff90
   15f5c:	ldr	r3, [r3, #4]
   15f60:	cmp	r3, #0
   15f64:	str	r3, [fp, #-116]	; 0xffffff8c
   15f68:	beq	162fc <argp_failure@@Base+0x66c>
   15f6c:	cmp	r4, #0
   15f70:	bne	164f0 <argp_failure@@Base+0x860>
   15f74:	ldr	r3, [fp, #-112]	; 0xffffff90
   15f78:	ldr	r3, [r3]
   15f7c:	str	r4, [fp, #-88]	; 0xffffffa8
   15f80:	str	r4, [fp, #-84]	; 0xffffffac
   15f84:	str	r4, [fp, #-80]	; 0xffffffb0
   15f88:	mov	r0, r3
   15f8c:	movw	r3, #52160	; 0xcbc0
   15f90:	movt	r3, #1
   15f94:	ldr	r2, [r7, #16]
   15f98:	str	r3, [fp, #-140]	; 0xffffff74
   15f9c:	movw	r3, #51772	; 0xca3c
   15fa0:	movt	r3, #1
   15fa4:	ldr	r1, [r7, #24]
   15fa8:	str	r3, [fp, #-144]	; 0xffffff70
   15fac:	ldr	r3, [r7, #28]
   15fb0:	str	r9, [fp, #-96]	; 0xffffffa0
   15fb4:	mov	r9, r0
   15fb8:	sub	r3, r3, r1
   15fbc:	ldr	r4, [r9]
   15fc0:	cmp	r3, r2
   15fc4:	ldr	r8, [r9, #8]
   15fc8:	bhi	16c8c <argp_failure@@Base+0xffc>
   15fcc:	mov	r1, #1
   15fd0:	ldr	r0, [r7, #4]
   15fd4:	ldr	r6, [r4, #12]
   15fd8:	str	r0, [fp, #-120]	; 0xffffff88
   15fdc:	mov	r0, #0
   15fe0:	str	r0, [r7, #4]
   15fe4:	ldr	r0, [r7, #12]
   15fe8:	str	r1, [fp, #-64]	; 0xffffffc0
   15fec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15ff0:	str	r0, [fp, #-124]	; 0xffffff84
   15ff4:	ands	r0, r6, #8
   15ff8:	str	r9, [fp, #-76]	; 0xffffffb4
   15ffc:	str	r0, [fp, #-128]	; 0xffffff80
   16000:	sub	r0, fp, #88	; 0x58
   16004:	str	r7, [fp, #-72]	; 0xffffffb8
   16008:	str	r1, [fp, #-60]	; 0xffffffc4
   1600c:	movne	r1, #0
   16010:	str	r0, [fp, #-68]	; 0xffffffbc
   16014:	strne	r1, [fp, #-128]	; 0xffffff80
   16018:	bne	16050 <argp_failure@@Base+0x3c0>
   1601c:	ldr	r0, [r9, #4]
   16020:	cmp	r0, #0
   16024:	beq	16050 <argp_failure@@Base+0x3c0>
   16028:	add	r1, r4, #24
   1602c:	ldr	ip, [r1, #-24]	; 0xffffffe8
   16030:	cmp	ip, #0
   16034:	beq	16044 <argp_failure@@Base+0x3b4>
   16038:	ldr	ip, [r1, #-12]
   1603c:	tst	ip, #2
   16040:	beq	16dbc <argp_failure@@Base+0x112c>
   16044:	subs	r0, r0, #1
   16048:	add	r1, r1, #24
   1604c:	bne	1602c <argp_failure@@Base+0x39c>
   16050:	cmp	r3, r2
   16054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16058:	ldr	r5, [r3, #8]
   1605c:	bhi	16c80 <argp_failure@@Base+0xff0>
   16060:	str	r5, [r7, #12]
   16064:	ldr	sl, [r9, #4]
   16068:	cmp	sl, #0
   1606c:	beq	160dc <argp_failure@@Base+0x44c>
   16070:	mov	r5, r4
   16074:	str	r9, [fp, #-136]	; 0xffffff78
   16078:	mov	r9, r7
   1607c:	mov	r7, r4
   16080:	mov	r4, r8
   16084:	ldr	r8, [r5, #12]
   16088:	tst	r8, #8
   1608c:	bne	160c4 <argp_failure@@Base+0x434>
   16090:	ldr	r6, [r5, #4]
   16094:	sub	r2, r6, #1
   16098:	cmp	r2, #254	; 0xfe
   1609c:	bhi	160c4 <argp_failure@@Base+0x434>
   160a0:	bl	11260 <__ctype_b_loc@plt>
   160a4:	ldr	r1, [r0]
   160a8:	lsl	r2, r6, #1
   160ac:	ldrh	r2, [r1, r2]
   160b0:	tst	r2, #16384	; 0x4000
   160b4:	beq	160c4 <argp_failure@@Base+0x434>
   160b8:	ldrb	r2, [r4]
   160bc:	cmp	r6, r2
   160c0:	beq	16890 <argp_failure@@Base+0xc00>
   160c4:	subs	sl, sl, #1
   160c8:	add	r5, r5, #24
   160cc:	bne	16084 <argp_failure@@Base+0x3f4>
   160d0:	mov	r4, r7
   160d4:	mov	r7, r9
   160d8:	ldr	r9, [fp, #-136]	; 0xffffff78
   160dc:	ldr	r2, [r4, #12]
   160e0:	ldr	r1, [r7, #24]
   160e4:	ldr	r3, [r7, #28]
   160e8:	tst	r2, #8
   160ec:	ldr	r2, [r7, #16]
   160f0:	sub	r3, r3, r1
   160f4:	beq	168a0 <argp_failure@@Base+0xc10>
   160f8:	cmp	r3, r2
   160fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16100:	ldr	r5, [r3, #16]
   16104:	bhi	16e20 <argp_failure@@Base+0x1190>
   16108:	str	r5, [r7, #12]
   1610c:	ldr	r6, [r9, #4]
   16110:	cmp	r6, #0
   16114:	addne	r5, r4, #24
   16118:	bne	1612c <argp_failure@@Base+0x49c>
   1611c:	b	161bc <argp_failure@@Base+0x52c>
   16120:	subs	r6, r6, #1
   16124:	add	r5, r5, #24
   16128:	beq	161bc <argp_failure@@Base+0x52c>
   1612c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16130:	cmp	r3, #0
   16134:	beq	16120 <argp_failure@@Base+0x490>
   16138:	ldr	r3, [r5, #-12]
   1613c:	tst	r3, #2
   16140:	bne	16120 <argp_failure@@Base+0x490>
   16144:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16148:	sub	r1, fp, #76	; 0x4c
   1614c:	ldr	r0, [r3, #16]
   16150:	bl	14730 <__assert_fail@plt+0x332c>
   16154:	ldr	sl, [r5, #-24]	; 0xffffffe8
   16158:	mov	r0, sl
   1615c:	bl	11290 <strlen@plt>
   16160:	subs	r8, r0, #0
   16164:	beq	16120 <argp_failure@@Base+0x490>
   16168:	ldr	ip, [r7, #28]
   1616c:	mov	r1, r8
   16170:	mov	r0, r7
   16174:	ldr	lr, [r7, #32]
   16178:	add	r2, ip, r8
   1617c:	cmp	lr, r2
   16180:	bcs	16194 <argp_failure@@Base+0x504>
   16184:	bl	1a87c <argp_parse@@Base+0x2be0>
   16188:	cmp	r0, #0
   1618c:	beq	16120 <argp_failure@@Base+0x490>
   16190:	ldr	ip, [r7, #28]
   16194:	mov	r2, r8
   16198:	mov	r1, sl
   1619c:	mov	r0, ip
   161a0:	add	r5, r5, #24
   161a4:	bl	11158 <memcpy@plt>
   161a8:	ldr	r2, [r7, #28]
   161ac:	subs	r6, r6, #1
   161b0:	add	r3, r2, r8
   161b4:	str	r3, [r7, #28]
   161b8:	bne	1612c <argp_failure@@Base+0x49c>
   161bc:	ldr	r2, [r7, #16]
   161c0:	ldr	r1, [r7, #24]
   161c4:	ldr	r3, [r7, #28]
   161c8:	sub	r3, r3, r1
   161cc:	cmp	r3, r2
   161d0:	bhi	16c74 <argp_failure@@Base+0xfe4>
   161d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   161d8:	mov	r2, #0
   161dc:	str	r2, [r7, #4]
   161e0:	cmp	r3, r2
   161e4:	beq	16954 <argp_failure@@Base+0xcc4>
   161e8:	ldr	r3, [r4, #12]
   161ec:	tst	r3, #8
   161f0:	bne	1621c <argp_failure@@Base+0x58c>
   161f4:	ldr	r5, [r4, #4]
   161f8:	sub	r3, r5, #1
   161fc:	cmp	r3, #254	; 0xfe
   16200:	bhi	1621c <argp_failure@@Base+0x58c>
   16204:	bl	11260 <__ctype_b_loc@plt>
   16208:	ldr	r3, [r0]
   1620c:	lsl	r5, r5, #1
   16210:	ldrh	r3, [r3, r5]
   16214:	tst	r3, #16384	; 0x4000
   16218:	bne	16228 <argp_failure@@Base+0x598>
   1621c:	ldr	r3, [r4]
   16220:	cmp	r3, #0
   16224:	beq	16f54 <argp_failure@@Base+0x12c4>
   16228:	ldr	r2, [r7, #16]
   1622c:	ldr	r1, [r7, #24]
   16230:	ldr	r3, [r7, #28]
   16234:	sub	r0, r3, r1
   16238:	cmp	r0, r2
   1623c:	bhi	16ca8 <argp_failure@@Base+0x1018>
   16240:	ldr	r0, [fp, #-120]	; 0xffffff88
   16244:	str	r0, [r7, #4]
   16248:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1624c:	add	r9, r9, #28
   16250:	subs	r0, r0, #1
   16254:	str	r0, [fp, #-116]	; 0xffffff8c
   16258:	ldr	r0, [fp, #-124]	; 0xffffff84
   1625c:	str	r0, [r7, #12]
   16260:	bne	15fb8 <argp_failure@@Base+0x328>
   16264:	ldr	r9, [fp, #-96]	; 0xffffffa0
   16268:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1626c:	cmp	r3, #0
   16270:	beq	162f8 <argp_failure@@Base+0x668>
   16274:	ldr	r3, [r9, #4]
   16278:	cmp	r3, #0
   1627c:	beq	162f8 <argp_failure@@Base+0x668>
   16280:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16284:	cmp	r1, #0
   16288:	beq	17330 <argp_failure@@Base+0x16a0>
   1628c:	ldr	r5, [r1]
   16290:	cmp	r5, #0
   16294:	beq	17420 <argp_failure@@Base+0x1790>
   16298:	ldr	r4, [r5, #20]
   1629c:	cmp	r4, #0
   162a0:	beq	173c0 <argp_failure@@Base+0x1730>
   162a4:	mov	r0, r5
   162a8:	movw	r4, #51348	; 0xc894
   162ac:	movt	r4, #1
   162b0:	bl	18b54 <argp_parse@@Base+0xeb8>
   162b4:	mov	r2, r0
   162b8:	mov	r1, r4
   162bc:	ldr	r3, [r5, #20]
   162c0:	mov	r0, #5
   162c4:	movt	r0, #512	; 0x200
   162c8:	blx	r3
   162cc:	subs	r5, r0, #0
   162d0:	beq	162f8 <argp_failure@@Base+0x668>
   162d4:	ldrb	r3, [r5]
   162d8:	subs	r4, r5, r4
   162dc:	movne	r4, #1
   162e0:	cmp	r3, #0
   162e4:	bne	1733c <argp_failure@@Base+0x16ac>
   162e8:	cmp	r4, #0
   162ec:	beq	162f8 <argp_failure@@Base+0x668>
   162f0:	mov	r0, r5
   162f4:	bl	18cd4 <argp_parse@@Base+0x1038>
   162f8:	mov	r4, #1
   162fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   16300:	tst	r3, #32
   16304:	bne	1682c <argp_failure@@Base+0xb9c>
   16308:	ldr	r3, [fp, #-104]	; 0xffffff98
   1630c:	tst	r3, #64	; 0x40
   16310:	beq	16340 <argp_failure@@Base+0x6b0>
   16314:	movw	r5, #58456	; 0xe458
   16318:	movt	r5, #2
   1631c:	ldr	r2, [r5]
   16320:	cmp	r2, #0
   16324:	beq	16340 <argp_failure@@Base+0x6b0>
   16328:	cmp	r4, #0
   1632c:	bne	16868 <argp_failure@@Base+0xbd8>
   16330:	movw	r1, #51804	; 0xca5c
   16334:	movt	r1, #1
   16338:	mov	r0, r7
   1633c:	bl	1a89c <argp_parse@@Base+0x2c00>
   16340:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16344:	bl	111d0 <funlockfile@plt>
   16348:	ldr	r3, [fp, #-112]	; 0xffffff90
   1634c:	cmp	r3, #0
   16350:	beq	16388 <argp_failure@@Base+0x6f8>
   16354:	ldr	r0, [r3, #12]
   16358:	cmp	r0, #0
   1635c:	beq	16370 <argp_failure@@Base+0x6e0>
   16360:	ldr	r4, [r0, #24]
   16364:	bl	18cd4 <argp_parse@@Base+0x1038>
   16368:	subs	r0, r4, #0
   1636c:	bne	16360 <argp_failure@@Base+0x6d0>
   16370:	ldr	r3, [fp, #-112]	; 0xffffff90
   16374:	ldr	r3, [r3, #4]
   16378:	cmp	r3, #0
   1637c:	bne	170c0 <argp_failure@@Base+0x1430>
   16380:	ldr	r0, [fp, #-112]	; 0xffffff90
   16384:	bl	18cd4 <argp_parse@@Base+0x1038>
   16388:	mov	r0, r7
   1638c:	bl	1a74c <argp_parse@@Base+0x2ab0>
   16390:	sub	sp, fp, #32
   16394:	ldrd	r4, [sp]
   16398:	ldrd	r6, [sp, #8]
   1639c:	ldrd	r8, [sp, #16]
   163a0:	ldrd	sl, [sp, #24]
   163a4:	add	sp, sp, #32
   163a8:	pop	{pc}		; (ldr pc, [sp], #4)
   163ac:	movw	r0, #51464	; 0xc908
   163b0:	movt	r0, #1
   163b4:	bl	11200 <getenv@plt>
   163b8:	subs	r8, r0, #0
   163bc:	ldrd	r2, [r9]
   163c0:	sub	sl, fp, #76	; 0x4c
   163c4:	ldrd	r0, [r9, #8]
   163c8:	ldrd	r4, [r9, #16]
   163cc:	strd	r2, [fp, #-76]	; 0xffffffb4
   163d0:	ldrd	r2, [r9, #24]
   163d4:	strd	r0, [sl, #8]
   163d8:	ldrd	r0, [r9, #32]
   163dc:	strd	r4, [sl, #16]
   163e0:	strd	r2, [sl, #24]
   163e4:	strd	r0, [sl, #32]
   163e8:	beq	15efc <argp_failure@@Base+0x26c>
   163ec:	ldrb	r6, [r8]
   163f0:	cmp	r6, #0
   163f4:	beq	16440 <argp_failure@@Base+0x7b0>
   163f8:	bl	11260 <__ctype_b_loc@plt>
   163fc:	mov	r3, r0
   16400:	mov	r0, r6
   16404:	mov	r6, r3
   16408:	ldr	r1, [r6]
   1640c:	lsl	r3, r0, #1
   16410:	ldrh	r3, [r1, r3]
   16414:	tst	r3, #8192	; 0x2000
   16418:	beq	16430 <argp_failure@@Base+0x7a0>
   1641c:	ldrb	r0, [r8, #1]!
   16420:	lsl	r3, r0, #1
   16424:	ldrh	r3, [r1, r3]
   16428:	tst	r3, #8192	; 0x2000
   1642c:	bne	1641c <argp_failure@@Base+0x78c>
   16430:	ands	r2, r3, #1024	; 0x400
   16434:	bne	16af8 <argp_failure@@Base+0xe68>
   16438:	cmp	r0, #0
   1643c:	bne	17214 <argp_failure@@Base+0x1584>
   16440:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16444:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16448:	cmp	r3, r2
   1644c:	ble	173cc <argp_failure@@Base+0x173c>
   16450:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16454:	cmp	r3, r2
   16458:	ble	173f8 <argp_failure@@Base+0x1768>
   1645c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16460:	cmp	r3, r2
   16464:	ble	17400 <argp_failure@@Base+0x1770>
   16468:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1646c:	cmp	r3, r2
   16470:	ble	17408 <argp_failure@@Base+0x1778>
   16474:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16478:	cmp	r3, r2
   1647c:	ble	17410 <argp_failure@@Base+0x1780>
   16480:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16484:	cmp	r3, r2
   16488:	ble	17418 <argp_failure@@Base+0x1788>
   1648c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   16490:	mov	ip, #1
   16494:	ldrd	r4, [sl, #8]
   16498:	ldrd	r2, [sl, #32]
   1649c:	strd	r0, [r9]
   164a0:	ldrd	r0, [sl, #24]
   164a4:	strd	r4, [r9, #8]
   164a8:	strd	r2, [r9, #32]
   164ac:	ldrd	r2, [sl, #16]
   164b0:	strd	r2, [r9, #16]
   164b4:	strd	r0, [r9, #24]
   164b8:	str	ip, [r9, #36]	; 0x24
   164bc:	b	15efc <argp_failure@@Base+0x26c>
   164c0:	ldr	r3, [fp, #4]
   164c4:	movw	r1, #51716	; 0xca04
   164c8:	movt	r1, #1
   164cc:	mov	r0, r7
   164d0:	mov	r2, r3
   164d4:	bl	1a89c <argp_parse@@Base+0x2c00>
   164d8:	cmp	r5, #0
   164dc:	beq	162f8 <argp_failure@@Base+0x668>
   164e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   164e4:	ldr	r3, [r3, #4]
   164e8:	cmp	r3, #0
   164ec:	beq	162f8 <argp_failure@@Base+0x668>
   164f0:	ldr	r3, [r7, #28]
   164f4:	ldr	r2, [r7, #32]
   164f8:	cmp	r3, r2
   164fc:	bcs	17268 <argp_failure@@Base+0x15d8>
   16500:	add	r1, r3, #1
   16504:	mov	r2, #10
   16508:	str	r1, [r7, #28]
   1650c:	strb	r2, [r3]
   16510:	ldr	r3, [fp, #-112]	; 0xffffff90
   16514:	ldr	r3, [r3, #4]
   16518:	mov	r2, r3
   1651c:	str	r3, [fp, #-116]	; 0xffffff8c
   16520:	mov	r3, #0
   16524:	cmp	r2, r3
   16528:	ldr	r2, [fp, #-112]	; 0xffffff90
   1652c:	ldr	r2, [r2]
   16530:	str	r3, [fp, #-88]	; 0xffffffa8
   16534:	str	r3, [fp, #-84]	; 0xffffffac
   16538:	str	r3, [fp, #-80]	; 0xffffffb0
   1653c:	mov	r0, r2
   16540:	bne	15f8c <argp_failure@@Base+0x2fc>
   16544:	b	162f8 <argp_failure@@Base+0x668>
   16548:	mov	r0, #1
   1654c:	mov	r3, #0
   16550:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16554:	mov	r2, r3
   16558:	stm	sp, {r0, r7}
   1655c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16560:	bl	1497c <__assert_fail@plt+0x3578>
   16564:	ldr	r3, [fp, #-104]	; 0xffffff98
   16568:	orr	r4, r4, r0
   1656c:	tst	r3, #4
   16570:	and	r5, r3, #8
   16574:	beq	15f50 <argp_failure@@Base+0x2c0>
   16578:	b	164c0 <argp_failure@@Base+0x830>
   1657c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16580:	ldr	r0, [r3, #8]
   16584:	ldr	r5, [r3, #16]
   16588:	cmp	r0, #0
   1658c:	moveq	r4, r0
   16590:	beq	165a4 <argp_failure@@Base+0x914>
   16594:	mov	r1, #10
   16598:	bl	1129c <strchr@plt>
   1659c:	adds	r4, r0, #0
   165a0:	movne	r4, #1
   165a4:	cmp	r5, #0
   165a8:	beq	165d4 <argp_failure@@Base+0x944>
   165ac:	ldr	r3, [r5]
   165b0:	cmp	r3, #0
   165b4:	beq	165d4 <argp_failure@@Base+0x944>
   165b8:	ldr	r0, [r3, #8]
   165bc:	ldr	r1, [r3, #16]
   165c0:	bl	1356c <__assert_fail@plt+0x2168>
   165c4:	ldr	r3, [r5, #16]!
   165c8:	add	r4, r4, r0
   165cc:	cmp	r3, #0
   165d0:	bne	165b8 <argp_failure@@Base+0x928>
   165d4:	add	r3, r4, #7
   165d8:	sub	sl, fp, #76	; 0x4c
   165dc:	bic	r3, r3, #7
   165e0:	movw	r8, #51684	; 0xc9e4
   165e4:	movt	r8, #1
   165e8:	sub	sp, sp, r3
   165ec:	movw	r3, #51692	; 0xc9ec
   165f0:	movt	r3, #1
   165f4:	mov	r2, r4
   165f8:	mov	r1, #0
   165fc:	str	r3, [fp, #-124]	; 0xffffff84
   16600:	add	r3, sp, #8
   16604:	mov	r4, #1
   16608:	mov	r0, r3
   1660c:	str	r3, [fp, #-96]	; 0xffffffa0
   16610:	movw	r3, #51676	; 0xc9dc
   16614:	movt	r3, #1
   16618:	str	r3, [fp, #-128]	; 0xffffff80
   1661c:	bl	112e4 <memset@plt>
   16620:	str	r8, [fp, #-120]	; 0xffffff88
   16624:	str	sl, [fp, #-116]	; 0xffffff8c
   16628:	ldr	sl, [fp, #-112]	; 0xffffff90
   1662c:	ldr	r8, [fp, #-104]	; 0xffffff98
   16630:	b	16710 <argp_failure@@Base+0xa80>
   16634:	cmp	r4, #0
   16638:	mov	r0, r7
   1663c:	ldr	r1, [fp, #-120]	; 0xffffff88
   16640:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16644:	ldrne	r2, [fp, #-128]	; 0xffffff80
   16648:	ldreq	r2, [fp, #-124]	; 0xffffff84
   1664c:	ldr	r4, [r7, #12]
   16650:	str	r5, [r7, #12]
   16654:	str	r3, [fp, #-76]	; 0xffffffb4
   16658:	ldr	r3, [fp, #4]
   1665c:	bl	1a89c <argp_parse@@Base+0x2c00>
   16660:	ldr	r2, [r7, #16]
   16664:	ldr	r1, [r7, #24]
   16668:	ldr	r3, [r7, #28]
   1666c:	ldr	r5, [r9, #28]
   16670:	sub	r3, r3, r1
   16674:	cmp	r3, r2
   16678:	bhi	16820 <argp_failure@@Base+0xb90>
   1667c:	tst	r8, #2
   16680:	ldr	r6, [r7, #4]
   16684:	str	r5, [r7, #4]
   16688:	beq	1680c <argp_failure@@Base+0xb7c>
   1668c:	ldr	r3, [sl, #4]
   16690:	cmp	r3, #0
   16694:	bne	16ff8 <argp_failure@@Base+0x1368>
   16698:	mov	r3, #1
   1669c:	str	r7, [sp]
   166a0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   166a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   166a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   166ac:	bl	13cd4 <__assert_fail@plt+0x28d0>
   166b0:	ldr	r1, [r7, #16]
   166b4:	mov	r5, r0
   166b8:	ldrd	r2, [r7, #24]
   166bc:	sub	r2, r3, r2
   166c0:	cmp	r2, r1
   166c4:	strls	r4, [r7, #12]
   166c8:	bhi	167dc <argp_failure@@Base+0xb4c>
   166cc:	ldr	r2, [r7, #32]
   166d0:	str	r6, [r7, #4]
   166d4:	cmp	r2, r3
   166d8:	bhi	166f4 <argp_failure@@Base+0xa64>
   166dc:	mov	r1, #1
   166e0:	mov	r0, r7
   166e4:	bl	1a87c <argp_parse@@Base+0x2be0>
   166e8:	cmp	r0, #0
   166ec:	beq	16704 <argp_failure@@Base+0xa74>
   166f0:	ldr	r3, [r7, #28]
   166f4:	add	r1, r3, #1
   166f8:	mov	r2, #10
   166fc:	str	r1, [r7, #28]
   16700:	strb	r2, [r3]
   16704:	cmp	r5, #0
   16708:	mov	r4, #0
   1670c:	beq	16850 <argp_failure@@Base+0xbc0>
   16710:	ldr	r2, [r7, #16]
   16714:	ldr	r1, [r7, #24]
   16718:	ldr	r3, [r7, #28]
   1671c:	ldr	r5, [r9, #28]
   16720:	sub	r3, r3, r1
   16724:	cmp	r3, r2
   16728:	bls	16634 <argp_failure@@Base+0x9a4>
   1672c:	mov	r0, r7
   16730:	bl	1a1ec <argp_parse@@Base+0x2550>
   16734:	b	16634 <argp_failure@@Base+0x9a4>
   16738:	mov	r1, #0
   1673c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16740:	bl	135d8 <__assert_fail@plt+0x21d4>
   16744:	ldr	r5, [r0]
   16748:	mov	r3, r0
   1674c:	ldr	r2, [r0, #4]
   16750:	cmp	r2, #0
   16754:	sub	r4, r2, #1
   16758:	strd	r2, [fp, #-116]	; 0xffffff8c
   1675c:	str	r5, [fp, #-96]	; 0xffffffa0
   16760:	beq	15f28 <argp_failure@@Base+0x298>
   16764:	movw	r6, #51660	; 0xc9cc
   16768:	movt	r6, #1
   1676c:	str	r4, [fp, #-120]	; 0xffffff88
   16770:	mov	sl, r4
   16774:	ldr	r8, [r5]
   16778:	ldr	r3, [r5, #4]
   1677c:	cmp	r3, #0
   16780:	sub	r4, r3, #1
   16784:	beq	167c4 <argp_failure@@Base+0xb34>
   16788:	add	r8, r8, #24
   1678c:	ldr	r0, [r8, #-24]	; 0xffffffe8
   16790:	sub	r4, r4, #1
   16794:	cmp	r0, #0
   16798:	beq	167b8 <argp_failure@@Base+0xb28>
   1679c:	ldr	r3, [r8, #-12]
   167a0:	mov	r1, r6
   167a4:	tst	r3, #2
   167a8:	bne	167b8 <argp_failure@@Base+0xb28>
   167ac:	bl	110d4 <strcmp@plt>
   167b0:	cmp	r0, #0
   167b4:	beq	16e6c <argp_failure@@Base+0x11dc>
   167b8:	cmn	r4, #1
   167bc:	add	r8, r8, #24
   167c0:	bne	1678c <argp_failure@@Base+0xafc>
   167c4:	sub	sl, sl, #1
   167c8:	add	r5, r5, #28
   167cc:	cmn	sl, #1
   167d0:	bne	16774 <argp_failure@@Base+0xae4>
   167d4:	ldr	r4, [fp, #-120]	; 0xffffff88
   167d8:	b	16e8c <argp_failure@@Base+0x11fc>
   167dc:	mov	r0, r7
   167e0:	bl	1a1ec <argp_parse@@Base+0x2550>
   167e4:	ldr	r1, [r7, #16]
   167e8:	str	r4, [r7, #12]
   167ec:	ldrd	r2, [r7, #24]
   167f0:	sub	r2, r3, r2
   167f4:	cmp	r2, r1
   167f8:	bls	166cc <argp_failure@@Base+0xa3c>
   167fc:	mov	r0, r7
   16800:	bl	1a1ec <argp_parse@@Base+0x2550>
   16804:	ldr	r3, [r7, #28]
   16808:	b	166cc <argp_failure@@Base+0xa3c>
   1680c:	mov	r1, r7
   16810:	mov	r0, sl
   16814:	orr	r8, r8, #2
   16818:	bl	142bc <__assert_fail@plt+0x2eb8>
   1681c:	b	16698 <argp_failure@@Base+0xa08>
   16820:	mov	r0, r7
   16824:	bl	1a1ec <argp_parse@@Base+0x2550>
   16828:	b	1667c <argp_failure@@Base+0x9ec>
   1682c:	mov	r2, #0
   16830:	mov	r3, r4
   16834:	ldr	r0, [fp, #-108]	; 0xffffff94
   16838:	stm	sp, {r2, r7}
   1683c:	mov	r2, #1
   16840:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16844:	bl	1497c <__assert_fail@plt+0x3578>
   16848:	orr	r4, r4, r0
   1684c:	b	16308 <argp_failure@@Base+0x678>
   16850:	str	r8, [fp, #-104]	; 0xffffff98
   16854:	mov	r4, #1
   16858:	ldr	r3, [fp, #-104]	; 0xffffff98
   1685c:	tst	r3, #16
   16860:	beq	15f40 <argp_failure@@Base+0x2b0>
   16864:	b	16548 <argp_failure@@Base+0x8b8>
   16868:	ldr	r3, [r7, #28]
   1686c:	ldr	r2, [r7, #32]
   16870:	cmp	r3, r2
   16874:	bcs	1724c <argp_failure@@Base+0x15bc>
   16878:	add	r1, r3, #1
   1687c:	mov	r2, #10
   16880:	str	r1, [r7, #28]
   16884:	strb	r2, [r3]
   16888:	ldr	r2, [r5]
   1688c:	b	16330 <argp_failure@@Base+0x6a0>
   16890:	tst	r8, #2
   16894:	beq	16d0c <argp_failure@@Base+0x107c>
   16898:	add	r4, r4, #1
   1689c:	b	160c4 <argp_failure@@Base+0x434>
   168a0:	cmp	r3, r2
   168a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168a8:	ldr	r5, [r3, #12]
   168ac:	bhi	16e3c <argp_failure@@Base+0x11ac>
   168b0:	str	r5, [r7, #12]
   168b4:	ldr	sl, [r9, #4]
   168b8:	cmp	sl, #0
   168bc:	beq	161bc <argp_failure@@Base+0x52c>
   168c0:	movw	r3, #51788	; 0xca4c
   168c4:	movt	r3, #1
   168c8:	movw	r6, #51780	; 0xca44
   168cc:	movt	r6, #1
   168d0:	movw	r8, #51796	; 0xca54
   168d4:	movt	r8, #1
   168d8:	str	r3, [fp, #-128]	; 0xffffff80
   168dc:	add	r5, r4, #24
   168e0:	b	168f0 <argp_failure@@Base+0xc60>
   168e4:	subs	sl, sl, #1
   168e8:	add	r5, r5, #24
   168ec:	beq	161bc <argp_failure@@Base+0x52c>
   168f0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   168f4:	cmp	r3, #0
   168f8:	beq	168e4 <argp_failure@@Base+0xc54>
   168fc:	ldr	r3, [r5, #-12]
   16900:	tst	r3, #2
   16904:	bne	168e4 <argp_failure@@Base+0xc54>
   16908:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1690c:	sub	r1, fp, #76	; 0x4c
   16910:	ldr	r0, [r3, #12]
   16914:	bl	14730 <__assert_fail@plt+0x332c>
   16918:	mov	r1, r6
   1691c:	mov	r0, r7
   16920:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16924:	bl	1a89c <argp_parse@@Base+0x2c00>
   16928:	ldr	r3, [r4, #8]
   1692c:	cmp	r3, #0
   16930:	beq	168e4 <argp_failure@@Base+0xc54>
   16934:	ldr	ip, [r4, #12]
   16938:	mov	r1, r8
   1693c:	mov	r2, r3
   16940:	mov	r0, r7
   16944:	tst	ip, #1
   16948:	ldrne	r1, [fp, #-128]	; 0xffffff80
   1694c:	bl	1a89c <argp_parse@@Base+0x2c00>
   16950:	b	168e4 <argp_failure@@Base+0xc54>
   16954:	ldr	r6, [r9, #20]
   16958:	ldr	r5, [r4, #16]
   1695c:	cmp	r6, #0
   16960:	beq	16d04 <argp_failure@@Base+0x1074>
   16964:	ldr	r3, [r6, #20]
   16968:	cmp	r3, #0
   1696c:	beq	16d04 <argp_failure@@Base+0x1074>
   16970:	ldr	r4, [r4, #4]
   16974:	mov	r0, r6
   16978:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1697c:	bl	18b54 <argp_parse@@Base+0xeb8>
   16980:	mov	r2, r0
   16984:	mov	r1, r5
   16988:	ldr	r3, [r6, #20]
   1698c:	mov	r0, r4
   16990:	blx	r3
   16994:	mov	r4, r0
   16998:	cmp	r4, #0
   1699c:	beq	16aa0 <argp_failure@@Base+0xe10>
   169a0:	ldrb	r3, [r4]
   169a4:	cmp	r3, #0
   169a8:	beq	16a90 <argp_failure@@Base+0xe00>
   169ac:	ldr	r1, [r7, #16]
   169b0:	ldrd	r2, [r7, #24]
   169b4:	sub	r2, r3, r2
   169b8:	cmp	r2, r1
   169bc:	bhi	171a0 <argp_failure@@Base+0x1510>
   169c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   169c4:	ldr	r8, [r7, #20]
   169c8:	ldr	r6, [r2, #20]
   169cc:	bic	r8, r8, r8, asr #31
   169d0:	mov	sl, r6
   169d4:	str	r6, [r7, #4]
   169d8:	add	r2, r6, #3
   169dc:	str	sl, [r7, #12]
   169e0:	cmp	r2, r8
   169e4:	bcc	17180 <argp_failure@@Base+0x14f0>
   169e8:	cmp	r6, r8
   169ec:	bhi	1710c <argp_failure@@Base+0x147c>
   169f0:	ldr	r1, [r7, #32]
   169f4:	add	r2, r3, #3
   169f8:	cmp	r1, r2
   169fc:	bcs	16a18 <argp_failure@@Base+0xd88>
   16a00:	mov	r1, #3
   16a04:	mov	r0, r7
   16a08:	bl	1a87c <argp_parse@@Base+0x2be0>
   16a0c:	cmp	r0, #0
   16a10:	beq	16a3c <argp_failure@@Base+0xdac>
   16a14:	ldr	r3, [r7, #28]
   16a18:	movw	r2, #51800	; 0xca58
   16a1c:	movt	r2, #1
   16a20:	ldrh	r1, [r2]
   16a24:	ldrb	r2, [r2, #2]
   16a28:	strh	r1, [r3]
   16a2c:	strb	r2, [r3, #2]
   16a30:	ldr	r3, [r7, #28]
   16a34:	add	r3, r3, #3
   16a38:	str	r3, [r7, #28]
   16a3c:	mov	r0, r4
   16a40:	bl	11290 <strlen@plt>
   16a44:	subs	r6, r0, #0
   16a48:	beq	16a90 <argp_failure@@Base+0xe00>
   16a4c:	ldr	r0, [r7, #28]
   16a50:	ldr	r2, [r7, #32]
   16a54:	add	r3, r0, r6
   16a58:	cmp	r2, r3
   16a5c:	bcs	16a78 <argp_failure@@Base+0xde8>
   16a60:	mov	r1, r6
   16a64:	mov	r0, r7
   16a68:	bl	1a87c <argp_parse@@Base+0x2be0>
   16a6c:	cmp	r0, #0
   16a70:	beq	16a90 <argp_failure@@Base+0xe00>
   16a74:	ldr	r0, [r7, #28]
   16a78:	mov	r2, r6
   16a7c:	mov	r1, r4
   16a80:	bl	11158 <memcpy@plt>
   16a84:	ldr	r3, [r7, #28]
   16a88:	add	r6, r3, r6
   16a8c:	str	r6, [r7, #28]
   16a90:	cmp	r5, r4
   16a94:	beq	16aa0 <argp_failure@@Base+0xe10>
   16a98:	mov	r0, r4
   16a9c:	bl	18cd4 <argp_parse@@Base+0x1038>
   16aa0:	ldr	r1, [r7, #16]
   16aa4:	ldrd	r2, [r7, #24]
   16aa8:	sub	r2, r3, r2
   16aac:	cmp	r2, r1
   16ab0:	bhi	16e2c <argp_failure@@Base+0x119c>
   16ab4:	mov	r2, #0
   16ab8:	str	r2, [r7, #4]
   16abc:	ldr	r2, [r7, #32]
   16ac0:	cmp	r2, r3
   16ac4:	bhi	16ae0 <argp_failure@@Base+0xe50>
   16ac8:	mov	r1, #1
   16acc:	mov	r0, r7
   16ad0:	bl	1a87c <argp_parse@@Base+0x2be0>
   16ad4:	cmp	r0, #0
   16ad8:	beq	16af0 <argp_failure@@Base+0xe60>
   16adc:	ldr	r3, [r7, #28]
   16ae0:	add	r1, r3, #1
   16ae4:	mov	r2, #10
   16ae8:	str	r1, [r7, #28]
   16aec:	strb	r2, [r3]
   16af0:	str	r9, [fp, #-88]	; 0xffffffa8
   16af4:	b	16228 <argp_failure@@Base+0x598>
   16af8:	cmp	r0, #45	; 0x2d
   16afc:	cmpne	r0, #95	; 0x5f
   16b00:	ubfx	r7, r3, #3, #1
   16b04:	moveq	r2, #1
   16b08:	movne	r2, #0
   16b0c:	orrs	r7, r2, r7
   16b10:	beq	17324 <argp_failure@@Base+0x1694>
   16b14:	mov	r4, r8
   16b18:	ldrb	r2, [r4, #1]!
   16b1c:	lsl	r3, r2, #1
   16b20:	cmp	r2, #45	; 0x2d
   16b24:	cmpne	r2, #95	; 0x5f
   16b28:	moveq	lr, #1
   16b2c:	movne	lr, #0
   16b30:	ldrh	r3, [r1, r3]
   16b34:	ubfx	ip, r3, #3, #1
   16b38:	orrs	ip, lr, ip
   16b3c:	bne	16b18 <argp_failure@@Base+0xe88>
   16b40:	tst	r3, #8192	; 0x2000
   16b44:	sub	r7, r4, r8
   16b48:	beq	16b60 <argp_failure@@Base+0xed0>
   16b4c:	ldrb	r2, [r4, #1]!
   16b50:	lsl	r3, r2, #1
   16b54:	ldrh	r3, [r1, r3]
   16b58:	tst	r3, #8192	; 0x2000
   16b5c:	bne	16b4c <argp_failure@@Base+0xebc>
   16b60:	cmp	r2, #44	; 0x2c
   16b64:	cmpne	r2, #0
   16b68:	beq	16dc8 <argp_failure@@Base+0x1138>
   16b6c:	cmp	r2, #61	; 0x3d
   16b70:	beq	17290 <argp_failure@@Base+0x1600>
   16b74:	ands	r3, r3, #2048	; 0x800
   16b78:	streq	r3, [fp, #-112]	; 0xffffff90
   16b7c:	streq	r3, [fp, #-96]	; 0xffffffa0
   16b80:	bne	172c0 <argp_failure@@Base+0x1630>
   16b84:	ldr	r0, [pc, #2292]	; 17480 <argp_failure@@Base+0x17f0>
   16b88:	bl	11290 <strlen@plt>
   16b8c:	cmp	r7, r0
   16b90:	beq	16dec <argp_failure@@Base+0x115c>
   16b94:	ldr	r5, [pc, #2280]	; 17484 <argp_failure@@Base+0x17f4>
   16b98:	mov	r0, r5
   16b9c:	bl	11290 <strlen@plt>
   16ba0:	cmp	r7, r0
   16ba4:	beq	16f68 <argp_failure@@Base+0x12d8>
   16ba8:	ldr	r5, [pc, #2264]	; 17488 <argp_failure@@Base+0x17f8>
   16bac:	mov	r0, r5
   16bb0:	bl	11290 <strlen@plt>
   16bb4:	cmp	r7, r0
   16bb8:	beq	16fa4 <argp_failure@@Base+0x1314>
   16bbc:	ldr	r5, [pc, #2248]	; 1748c <argp_failure@@Base+0x17fc>
   16bc0:	mov	r0, r5
   16bc4:	bl	11290 <strlen@plt>
   16bc8:	cmp	r7, r0
   16bcc:	beq	16fc0 <argp_failure@@Base+0x1330>
   16bd0:	ldr	r5, [pc, #2232]	; 17490 <argp_failure@@Base+0x1800>
   16bd4:	mov	r0, r5
   16bd8:	bl	11290 <strlen@plt>
   16bdc:	cmp	r7, r0
   16be0:	beq	16fdc <argp_failure@@Base+0x134c>
   16be4:	ldr	r5, [pc, #2216]	; 17494 <argp_failure@@Base+0x1804>
   16be8:	mov	r0, r5
   16bec:	bl	11290 <strlen@plt>
   16bf0:	cmp	r7, r0
   16bf4:	beq	17050 <argp_failure@@Base+0x13c0>
   16bf8:	ldr	r5, [pc, #2200]	; 17498 <argp_failure@@Base+0x1808>
   16bfc:	mov	r0, r5
   16c00:	bl	11290 <strlen@plt>
   16c04:	cmp	r7, r0
   16c08:	beq	1706c <argp_failure@@Base+0x13dc>
   16c0c:	ldr	r5, [pc, #2184]	; 1749c <argp_failure@@Base+0x180c>
   16c10:	mov	r0, r5
   16c14:	bl	11290 <strlen@plt>
   16c18:	cmp	r7, r0
   16c1c:	beq	17088 <argp_failure@@Base+0x13f8>
   16c20:	ldr	r5, [pc, #2168]	; 174a0 <argp_failure@@Base+0x1810>
   16c24:	mov	r0, r5
   16c28:	bl	11290 <strlen@plt>
   16c2c:	cmp	r0, r7
   16c30:	beq	170a4 <argp_failure@@Base+0x1414>
   16c34:	movw	r3, #51528	; 0xc948
   16c38:	movt	r3, #1
   16c3c:	mov	r2, #0
   16c40:	mov	r1, r2
   16c44:	stm	sp, {r7, r8}
   16c48:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16c4c:	bl	15c90 <argp_failure@@Base>
   16c50:	ldrb	r0, [r4]
   16c54:	cmp	r0, #44	; 0x2c
   16c58:	movne	r8, r4
   16c5c:	bne	16c68 <argp_failure@@Base+0xfd8>
   16c60:	ldrb	r0, [r4, #1]
   16c64:	add	r8, r4, #1
   16c68:	cmp	r0, #0
   16c6c:	bne	16408 <argp_failure@@Base+0x778>
   16c70:	b	16440 <argp_failure@@Base+0x7b0>
   16c74:	mov	r0, r7
   16c78:	bl	1a1ec <argp_parse@@Base+0x2550>
   16c7c:	b	161d4 <argp_failure@@Base+0x544>
   16c80:	mov	r0, r7
   16c84:	bl	1a1ec <argp_parse@@Base+0x2550>
   16c88:	b	16060 <argp_failure@@Base+0x3d0>
   16c8c:	mov	r0, r7
   16c90:	bl	1a1ec <argp_parse@@Base+0x2550>
   16c94:	ldr	r2, [r7, #16]
   16c98:	ldr	r3, [r7, #24]
   16c9c:	ldr	r1, [r7, #28]
   16ca0:	sub	r3, r1, r3
   16ca4:	b	15fcc <argp_failure@@Base+0x33c>
   16ca8:	mov	r0, r7
   16cac:	bl	1a1ec <argp_parse@@Base+0x2550>
   16cb0:	ldr	r3, [fp, #-120]	; 0xffffff88
   16cb4:	ldr	r2, [r7, #16]
   16cb8:	ldr	r1, [r7, #24]
   16cbc:	str	r3, [r7, #4]
   16cc0:	ldr	r3, [r7, #28]
   16cc4:	sub	r0, r3, r1
   16cc8:	cmp	r0, r2
   16ccc:	bls	16248 <argp_failure@@Base+0x5b8>
   16cd0:	mov	r0, r7
   16cd4:	add	r9, r9, #28
   16cd8:	bl	1a1ec <argp_parse@@Base+0x2550>
   16cdc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16ce0:	subs	r3, r3, #1
   16ce4:	str	r3, [fp, #-116]	; 0xffffff8c
   16ce8:	ldr	r3, [fp, #-124]	; 0xffffff84
   16cec:	str	r3, [r7, #12]
   16cf0:	beq	16264 <argp_failure@@Base+0x5d4>
   16cf4:	ldr	r2, [r7, #16]
   16cf8:	ldr	r1, [r7, #24]
   16cfc:	ldr	r3, [r7, #28]
   16d00:	b	15fb8 <argp_failure@@Base+0x328>
   16d04:	mov	r4, r5
   16d08:	b	16998 <argp_failure@@Base+0xd08>
   16d0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16d10:	sub	r1, fp, #76	; 0x4c
   16d14:	ldr	r0, [r3, #8]
   16d18:	bl	14730 <__assert_fail@plt+0x332c>
   16d1c:	ldr	r2, [r9, #28]
   16d20:	ldr	r1, [r9, #32]
   16d24:	cmp	r2, r1
   16d28:	bcc	16d44 <argp_failure@@Base+0x10b4>
   16d2c:	mov	r1, #1
   16d30:	mov	r0, r9
   16d34:	bl	1a87c <argp_parse@@Base+0x2be0>
   16d38:	cmp	r0, #0
   16d3c:	beq	16d54 <argp_failure@@Base+0x10c4>
   16d40:	ldr	r2, [r9, #28]
   16d44:	add	r0, r2, #1
   16d48:	mov	r1, #45	; 0x2d
   16d4c:	str	r0, [r9, #28]
   16d50:	strb	r1, [r2]
   16d54:	ldr	r2, [r9, #28]
   16d58:	ldr	r1, [r9, #32]
   16d5c:	ldrb	r6, [r4]
   16d60:	cmp	r2, r1
   16d64:	bcc	16d80 <argp_failure@@Base+0x10f0>
   16d68:	mov	r1, #1
   16d6c:	mov	r0, r9
   16d70:	bl	1a87c <argp_parse@@Base+0x2be0>
   16d74:	cmp	r0, #0
   16d78:	beq	16d8c <argp_failure@@Base+0x10fc>
   16d7c:	ldr	r2, [r9, #28]
   16d80:	add	r1, r2, #1
   16d84:	str	r1, [r9, #28]
   16d88:	strb	r6, [r2]
   16d8c:	ldr	r3, [fp, #-128]	; 0xffffff80
   16d90:	ldr	r2, [r7, #8]
   16d94:	cmp	r3, #0
   16d98:	beq	16e48 <argp_failure@@Base+0x11b8>
   16d9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16da0:	ldr	r1, [r3]
   16da4:	cmp	r1, #0
   16da8:	bne	16e48 <argp_failure@@Base+0x11b8>
   16dac:	cmp	r2, #0
   16db0:	movne	r2, #1
   16db4:	strne	r2, [fp, #-80]	; 0xffffffb0
   16db8:	b	16898 <argp_failure@@Base+0xc08>
   16dbc:	mov	r1, #1
   16dc0:	str	r1, [fp, #-128]	; 0xffffff80
   16dc4:	b	16050 <argp_failure@@Base+0x3c0>
   16dc8:	cmp	r0, #110	; 0x6e
   16dcc:	beq	170d8 <argp_failure@@Base+0x1448>
   16dd0:	mov	r3, #1
   16dd4:	ldr	r0, [pc, #1700]	; 17480 <argp_failure@@Base+0x17f0>
   16dd8:	str	r3, [fp, #-112]	; 0xffffff90
   16ddc:	str	r3, [fp, #-96]	; 0xffffffa0
   16de0:	bl	11290 <strlen@plt>
   16de4:	cmp	r7, r0
   16de8:	bne	16b94 <argp_failure@@Base+0xf04>
   16dec:	mov	r2, r7
   16df0:	ldr	r1, [pc, #1672]	; 17480 <argp_failure@@Base+0x17f0>
   16df4:	mov	r0, r8
   16df8:	bl	113e0 <strncmp@plt>
   16dfc:	cmp	r0, #0
   16e00:	bne	16b94 <argp_failure@@Base+0xf04>
   16e04:	ldr	r5, [pc, #1652]	; 17480 <argp_failure@@Base+0x17f0>
   16e08:	sub	r2, fp, #36	; 0x24
   16e0c:	ldrb	r3, [r5, #15]
   16e10:	add	r3, r2, r3
   16e14:	ldr	r2, [fp, #-112]	; 0xffffff90
   16e18:	str	r2, [r3, #-40]	; 0xffffffd8
   16e1c:	b	16c50 <argp_failure@@Base+0xfc0>
   16e20:	mov	r0, r7
   16e24:	bl	1a1ec <argp_parse@@Base+0x2550>
   16e28:	b	16108 <argp_failure@@Base+0x478>
   16e2c:	mov	r0, r7
   16e30:	bl	1a1ec <argp_parse@@Base+0x2550>
   16e34:	ldr	r3, [r7, #28]
   16e38:	b	16ab4 <argp_failure@@Base+0xe24>
   16e3c:	mov	r0, r7
   16e40:	bl	1a1ec <argp_parse@@Base+0x2550>
   16e44:	b	168b0 <argp_failure@@Base+0xc20>
   16e48:	cmp	r2, #0
   16e4c:	beq	16898 <argp_failure@@Base+0xc08>
   16e50:	ldr	r1, [r7, #12]
   16e54:	mov	r0, r9
   16e58:	tst	r1, #1
   16e5c:	ldrne	r1, [fp, #-144]	; 0xffffff70
   16e60:	ldreq	r1, [fp, #-140]	; 0xffffff74
   16e64:	bl	1a89c <argp_parse@@Base+0x2c00>
   16e68:	b	16898 <argp_failure@@Base+0xc08>
   16e6c:	mvn	r3, #0
   16e70:	str	r3, [r5, #12]
   16e74:	ldr	r3, [fp, #-112]	; 0xffffff90
   16e78:	ldr	r3, [r3, #4]
   16e7c:	cmp	r3, #0
   16e80:	sub	r4, r3, #1
   16e84:	str	r3, [fp, #-116]	; 0xffffff8c
   16e88:	beq	15f28 <argp_failure@@Base+0x298>
   16e8c:	ldr	r5, [fp, #-96]	; 0xffffffa0
   16e90:	movw	r6, #51668	; 0xc9d4
   16e94:	movt	r6, #1
   16e98:	ldm	r5, {r8, sl}
   16e9c:	cmp	sl, #0
   16ea0:	sub	sl, sl, #1
   16ea4:	beq	16ee4 <argp_failure@@Base+0x1254>
   16ea8:	add	r8, r8, #24
   16eac:	ldr	r0, [r8, #-24]	; 0xffffffe8
   16eb0:	sub	sl, sl, #1
   16eb4:	cmp	r0, #0
   16eb8:	beq	16ed8 <argp_failure@@Base+0x1248>
   16ebc:	ldr	r3, [r8, #-12]
   16ec0:	mov	r1, r6
   16ec4:	tst	r3, #2
   16ec8:	bne	16ed8 <argp_failure@@Base+0x1248>
   16ecc:	bl	110d4 <strcmp@plt>
   16ed0:	cmp	r0, #0
   16ed4:	beq	16efc <argp_failure@@Base+0x126c>
   16ed8:	cmn	sl, #1
   16edc:	add	r8, r8, #24
   16ee0:	bne	16eac <argp_failure@@Base+0x121c>
   16ee4:	cmp	r4, #0
   16ee8:	add	r5, r5, #28
   16eec:	sub	r4, r4, #1
   16ef0:	bne	16e98 <argp_failure@@Base+0x1208>
   16ef4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16ef8:	b	16f14 <argp_failure@@Base+0x1284>
   16efc:	mvn	r3, #0
   16f00:	str	r3, [r5, #12]
   16f04:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f08:	ldr	r1, [r3, #4]
   16f0c:	cmp	r1, #0
   16f10:	beq	15f28 <argp_failure@@Base+0x298>
   16f14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16f18:	mov	r3, #0
   16f1c:	str	r3, [r2, #24]
   16f20:	add	r3, r3, #1
   16f24:	add	r2, r2, #28
   16f28:	cmp	r1, r3
   16f2c:	bhi	16f1c <argp_failure@@Base+0x128c>
   16f30:	movw	r3, #20304	; 0x4f50
   16f34:	movt	r3, #1
   16f38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16f3c:	mov	r2, #28
   16f40:	bl	113a4 <qsort@plt>
   16f44:	ldr	r3, [fp, #-104]	; 0xffffff98
   16f48:	ands	r4, r3, #3
   16f4c:	beq	15f34 <argp_failure@@Base+0x2a4>
   16f50:	b	1657c <argp_failure@@Base+0x8ec>
   16f54:	sub	r2, fp, #76	; 0x4c
   16f58:	ldr	r0, [r4, #16]
   16f5c:	ldr	r1, [r9, #20]
   16f60:	bl	13fc8 <__assert_fail@plt+0x2bc4>
   16f64:	b	16af0 <argp_failure@@Base+0xe60>
   16f68:	mov	r2, r7
   16f6c:	mov	r1, r5
   16f70:	mov	r0, r8
   16f74:	bl	113e0 <strncmp@plt>
   16f78:	cmp	r0, #0
   16f7c:	bne	16ba8 <argp_failure@@Base+0xf18>
   16f80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f84:	cmp	r3, #0
   16f88:	beq	16e08 <argp_failure@@Base+0x1178>
   16f8c:	ldrb	r2, [r5, #14]
   16f90:	cmp	r2, #0
   16f94:	movweq	r3, #51480	; 0xc918
   16f98:	movteq	r3, #1
   16f9c:	bne	16e08 <argp_failure@@Base+0x1178>
   16fa0:	b	16c40 <argp_failure@@Base+0xfb0>
   16fa4:	mov	r2, r7
   16fa8:	mov	r1, r5
   16fac:	mov	r0, r8
   16fb0:	bl	113e0 <strncmp@plt>
   16fb4:	cmp	r0, #0
   16fb8:	bne	16bbc <argp_failure@@Base+0xf2c>
   16fbc:	b	16f80 <argp_failure@@Base+0x12f0>
   16fc0:	mov	r2, r7
   16fc4:	mov	r1, r5
   16fc8:	mov	r0, r8
   16fcc:	bl	113e0 <strncmp@plt>
   16fd0:	cmp	r0, #0
   16fd4:	bne	16bd0 <argp_failure@@Base+0xf40>
   16fd8:	b	16f80 <argp_failure@@Base+0x12f0>
   16fdc:	mov	r2, r7
   16fe0:	mov	r1, r5
   16fe4:	mov	r0, r8
   16fe8:	bl	113e0 <strncmp@plt>
   16fec:	cmp	r0, #0
   16ff0:	bne	16be4 <argp_failure@@Base+0xf54>
   16ff4:	b	16f80 <argp_failure@@Base+0x12f0>
   16ff8:	ldr	r3, [r7, #28]
   16ffc:	ldr	r1, [r7, #32]
   17000:	add	r2, r3, #12
   17004:	cmp	r1, r2
   17008:	bcs	17024 <argp_failure@@Base+0x1394>
   1700c:	mov	r1, #12
   17010:	mov	r0, r7
   17014:	bl	1a87c <argp_parse@@Base+0x2be0>
   17018:	cmp	r0, #0
   1701c:	beq	16698 <argp_failure@@Base+0xa08>
   17020:	ldr	r3, [r7, #28]
   17024:	movw	r2, #51700	; 0xc9f4
   17028:	movt	r2, #1
   1702c:	ldrd	r0, [r2]
   17030:	ldr	r2, [r2, #8]
   17034:	str	r0, [r3]
   17038:	str	r1, [r3, #4]
   1703c:	str	r2, [r3, #8]
   17040:	ldr	r3, [r7, #28]
   17044:	add	r3, r3, #12
   17048:	str	r3, [r7, #28]
   1704c:	b	16698 <argp_failure@@Base+0xa08>
   17050:	mov	r2, r7
   17054:	mov	r1, r5
   17058:	mov	r0, r8
   1705c:	bl	113e0 <strncmp@plt>
   17060:	cmp	r0, #0
   17064:	bne	16bf8 <argp_failure@@Base+0xf68>
   17068:	b	16f80 <argp_failure@@Base+0x12f0>
   1706c:	mov	r2, r7
   17070:	mov	r1, r5
   17074:	mov	r0, r8
   17078:	bl	113e0 <strncmp@plt>
   1707c:	cmp	r0, #0
   17080:	bne	16c0c <argp_failure@@Base+0xf7c>
   17084:	b	16f80 <argp_failure@@Base+0x12f0>
   17088:	mov	r2, r7
   1708c:	mov	r1, r5
   17090:	mov	r0, r8
   17094:	bl	113e0 <strncmp@plt>
   17098:	cmp	r0, #0
   1709c:	bne	16c20 <argp_failure@@Base+0xf90>
   170a0:	b	16f80 <argp_failure@@Base+0x12f0>
   170a4:	mov	r2, r7
   170a8:	mov	r1, r5
   170ac:	mov	r0, r8
   170b0:	bl	113e0 <strncmp@plt>
   170b4:	cmp	r0, #0
   170b8:	bne	16c34 <argp_failure@@Base+0xfa4>
   170bc:	b	16f80 <argp_failure@@Base+0x12f0>
   170c0:	ldr	r4, [fp, #-112]	; 0xffffff90
   170c4:	ldr	r0, [r4]
   170c8:	bl	18cd4 <argp_parse@@Base+0x1038>
   170cc:	ldr	r0, [r4, #8]
   170d0:	bl	18cd4 <argp_parse@@Base+0x1038>
   170d4:	b	16380 <argp_failure@@Base+0x6f0>
   170d8:	ldrb	r3, [r8, #1]
   170dc:	cmp	r3, #111	; 0x6f
   170e0:	bne	16dd0 <argp_failure@@Base+0x1140>
   170e4:	ldrb	r3, [r8, #2]
   170e8:	cmp	r3, #45	; 0x2d
   170ec:	bne	16dd0 <argp_failure@@Base+0x1140>
   170f0:	mov	r3, #0
   170f4:	add	r8, r8, #3
   170f8:	sub	r7, r7, #3
   170fc:	str	r3, [fp, #-112]	; 0xffffff90
   17100:	mov	r3, #1
   17104:	str	r3, [fp, #-96]	; 0xffffffa0
   17108:	b	16b84 <argp_failure@@Base+0xef4>
   1710c:	ldr	r1, [r7, #16]
   17110:	ldr	r2, [r7, #24]
   17114:	sub	r3, r3, r2
   17118:	cmp	r3, r1
   1711c:	bhi	17284 <argp_failure@@Base+0x15f4>
   17120:	ldr	r3, [r7, #20]
   17124:	cmp	r3, #0
   17128:	subge	r6, r6, r3
   1712c:	cmp	r6, #0
   17130:	sub	r6, r6, #1
   17134:	ble	16a3c <argp_failure@@Base+0xdac>
   17138:	mov	r8, #32
   1713c:	ldr	r3, [r7, #28]
   17140:	mov	r1, #1
   17144:	mov	r0, r7
   17148:	sub	r6, r6, #1
   1714c:	ldr	r2, [r7, #32]
   17150:	cmp	r3, r2
   17154:	bcc	17168 <argp_failure@@Base+0x14d8>
   17158:	bl	1a87c <argp_parse@@Base+0x2be0>
   1715c:	cmp	r0, #0
   17160:	beq	17174 <argp_failure@@Base+0x14e4>
   17164:	ldr	r3, [r7, #28]
   17168:	add	r2, r3, #1
   1716c:	str	r2, [r7, #28]
   17170:	strb	r8, [r3]
   17174:	cmn	r6, #1
   17178:	bne	1713c <argp_failure@@Base+0x14ac>
   1717c:	b	16a3c <argp_failure@@Base+0xdac>
   17180:	ldr	r2, [r7, #32]
   17184:	cmp	r2, r3
   17188:	bls	17230 <argp_failure@@Base+0x15a0>
   1718c:	add	r1, r3, #1
   17190:	mov	r2, #10
   17194:	str	r1, [r7, #28]
   17198:	strb	r2, [r3]
   1719c:	b	16a3c <argp_failure@@Base+0xdac>
   171a0:	mov	r0, r7
   171a4:	bl	1a1ec <argp_parse@@Base+0x2550>
   171a8:	ldr	r1, [r7, #16]
   171ac:	ldrd	r2, [r7, #24]
   171b0:	ldr	sl, [fp, #-96]	; 0xffffffa0
   171b4:	ldr	r8, [r7, #20]
   171b8:	sub	r2, r3, r2
   171bc:	cmp	r2, r1
   171c0:	ldr	r6, [sl, #20]
   171c4:	bic	r8, r8, r8, asr #31
   171c8:	bls	169d0 <argp_failure@@Base+0xd40>
   171cc:	mov	r0, r7
   171d0:	bl	1a1ec <argp_parse@@Base+0x2550>
   171d4:	ldr	r1, [r7, #16]
   171d8:	str	r6, [r7, #4]
   171dc:	mov	r6, sl
   171e0:	ldrd	r2, [r7, #24]
   171e4:	ldr	sl, [sl, #20]
   171e8:	sub	r2, r3, r2
   171ec:	cmp	r2, r1
   171f0:	bls	17478 <argp_failure@@Base+0x17e8>
   171f4:	mov	r0, r7
   171f8:	bl	1a1ec <argp_parse@@Base+0x2550>
   171fc:	ldr	r6, [r6, #20]
   17200:	ldr	r3, [r7, #28]
   17204:	b	169d8 <argp_failure@@Base+0xd48>
   17208:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1720c:	bl	111d0 <funlockfile@plt>
   17210:	b	16390 <argp_failure@@Base+0x700>
   17214:	movw	r3, #51568	; 0xc970
   17218:	movt	r3, #1
   1721c:	str	r8, [sp]
   17220:	mov	r1, r2
   17224:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17228:	bl	15c90 <argp_failure@@Base>
   1722c:	b	16440 <argp_failure@@Base+0x7b0>
   17230:	mov	r1, #1
   17234:	mov	r0, r7
   17238:	bl	1a87c <argp_parse@@Base+0x2be0>
   1723c:	cmp	r0, #0
   17240:	beq	16a3c <argp_failure@@Base+0xdac>
   17244:	ldr	r3, [r7, #28]
   17248:	b	1718c <argp_failure@@Base+0x14fc>
   1724c:	mov	r1, #1
   17250:	mov	r0, r7
   17254:	bl	1a87c <argp_parse@@Base+0x2be0>
   17258:	cmp	r0, #0
   1725c:	ldrne	r3, [r7, #28]
   17260:	bne	16878 <argp_failure@@Base+0xbe8>
   17264:	b	16888 <argp_failure@@Base+0xbf8>
   17268:	mov	r1, #1
   1726c:	mov	r0, r7
   17270:	bl	1a87c <argp_parse@@Base+0x2be0>
   17274:	cmp	r0, #0
   17278:	ldrne	r3, [r7, #28]
   1727c:	bne	16500 <argp_failure@@Base+0x870>
   17280:	b	16510 <argp_failure@@Base+0x880>
   17284:	mov	r0, r7
   17288:	bl	1a1ec <argp_parse@@Base+0x2550>
   1728c:	b	17120 <argp_failure@@Base+0x1490>
   17290:	ldrb	r3, [r4, #1]
   17294:	add	r4, r4, #1
   17298:	lsl	r3, r3, #1
   1729c:	ldrh	r3, [r1, r3]
   172a0:	tst	r3, #8192	; 0x2000
   172a4:	beq	16b74 <argp_failure@@Base+0xee4>
   172a8:	ldrb	r3, [r4, #1]!
   172ac:	lsl	r3, r3, #1
   172b0:	ldrh	r3, [r1, r3]
   172b4:	tst	r3, #8192	; 0x2000
   172b8:	bne	172a8 <argp_failure@@Base+0x1618>
   172bc:	b	16b74 <argp_failure@@Base+0xee4>
   172c0:	mov	r2, #10
   172c4:	mov	r1, #0
   172c8:	mov	r0, r4
   172cc:	bl	110e0 <strtol@plt>
   172d0:	ldrb	r3, [r4]
   172d4:	ldr	r2, [r6]
   172d8:	lsl	r3, r3, #1
   172dc:	ldrh	r3, [r2, r3]
   172e0:	str	r0, [fp, #-112]	; 0xffffff90
   172e4:	tst	r3, #2048	; 0x800
   172e8:	beq	17300 <argp_failure@@Base+0x1670>
   172ec:	ldrb	r3, [r4, #1]!
   172f0:	lsl	r3, r3, #1
   172f4:	ldrh	r3, [r2, r3]
   172f8:	tst	r3, #2048	; 0x800
   172fc:	bne	172ec <argp_failure@@Base+0x165c>
   17300:	ands	r3, r3, #8192	; 0x2000
   17304:	beq	1731c <argp_failure@@Base+0x168c>
   17308:	ldrb	r3, [r4, #1]!
   1730c:	lsl	r3, r3, #1
   17310:	ldrh	r3, [r2, r3]
   17314:	ands	r3, r3, #8192	; 0x2000
   17318:	bne	17308 <argp_failure@@Base+0x1678>
   1731c:	str	r3, [fp, #-96]	; 0xffffffa0
   17320:	b	16b84 <argp_failure@@Base+0xef4>
   17324:	mov	r2, r0
   17328:	mov	r4, r8
   1732c:	b	16b60 <argp_failure@@Base+0xed0>
   17330:	movw	r5, #51348	; 0xc894
   17334:	movt	r5, #1
   17338:	mov	r4, r1
   1733c:	ldr	r3, [r7, #28]
   17340:	ldr	r2, [r7, #32]
   17344:	cmp	r3, r2
   17348:	bcc	17364 <argp_failure@@Base+0x16d4>
   1734c:	mov	r1, #1
   17350:	mov	r0, r7
   17354:	bl	1a87c <argp_parse@@Base+0x2be0>
   17358:	cmp	r0, #0
   1735c:	beq	17374 <argp_failure@@Base+0x16e4>
   17360:	ldr	r3, [r7, #28]
   17364:	add	r1, r3, #1
   17368:	mov	r2, #10
   1736c:	str	r1, [r7, #28]
   17370:	strb	r2, [r3]
   17374:	mov	r0, r5
   17378:	bl	11290 <strlen@plt>
   1737c:	subs	r6, r0, #0
   17380:	ldr	r0, [r7, #28]
   17384:	ldr	r3, [r7, #32]
   17388:	bne	17430 <argp_failure@@Base+0x17a0>
   1738c:	cmp	r0, r3
   17390:	bcc	173ac <argp_failure@@Base+0x171c>
   17394:	mov	r1, #1
   17398:	mov	r0, r7
   1739c:	bl	1a87c <argp_parse@@Base+0x2be0>
   173a0:	cmp	r0, #0
   173a4:	beq	162e8 <argp_failure@@Base+0x658>
   173a8:	ldr	r0, [r7, #28]
   173ac:	add	r2, r0, #1
   173b0:	mov	r3, #10
   173b4:	str	r2, [r7, #28]
   173b8:	strb	r3, [r0]
   173bc:	b	162e8 <argp_failure@@Base+0x658>
   173c0:	movw	r5, #51348	; 0xc894
   173c4:	movt	r5, #1
   173c8:	b	1733c <argp_failure@@Base+0x16ac>
   173cc:	ldr	r3, [pc, #180]	; 17488 <argp_failure@@Base+0x17f8>
   173d0:	movw	r0, #51652	; 0xc9c4
   173d4:	movt	r0, #1
   173d8:	mov	r2, #0
   173dc:	mov	r1, r2
   173e0:	stm	sp, {r0, r3}
   173e4:	movw	r3, #51600	; 0xc990
   173e8:	movt	r3, #1
   173ec:	ldr	r0, [fp, #-100]	; 0xffffff9c
   173f0:	bl	15c90 <argp_failure@@Base>
   173f4:	b	15efc <argp_failure@@Base+0x26c>
   173f8:	ldr	r3, [pc, #140]	; 1748c <argp_failure@@Base+0x17fc>
   173fc:	b	173d0 <argp_failure@@Base+0x1740>
   17400:	ldr	r3, [pc, #136]	; 17490 <argp_failure@@Base+0x1800>
   17404:	b	173d0 <argp_failure@@Base+0x1740>
   17408:	ldr	r3, [pc, #132]	; 17494 <argp_failure@@Base+0x1804>
   1740c:	b	173d0 <argp_failure@@Base+0x1740>
   17410:	ldr	r3, [pc, #128]	; 17498 <argp_failure@@Base+0x1808>
   17414:	b	173d0 <argp_failure@@Base+0x1740>
   17418:	ldr	r3, [pc, #124]	; 1749c <argp_failure@@Base+0x180c>
   1741c:	b	173d0 <argp_failure@@Base+0x1740>
   17420:	mov	r4, r5
   17424:	movw	r5, #51348	; 0xc894
   17428:	movt	r5, #1
   1742c:	b	1733c <argp_failure@@Base+0x16ac>
   17430:	add	r2, r0, r6
   17434:	cmp	r3, r2
   17438:	bcs	17458 <argp_failure@@Base+0x17c8>
   1743c:	mov	r1, r6
   17440:	mov	r0, r7
   17444:	bl	1a87c <argp_parse@@Base+0x2be0>
   17448:	cmp	r0, #0
   1744c:	ldr	r0, [r7, #28]
   17450:	ldreq	r3, [r7, #32]
   17454:	beq	1738c <argp_failure@@Base+0x16fc>
   17458:	mov	r2, r6
   1745c:	mov	r1, r5
   17460:	bl	11158 <memcpy@plt>
   17464:	ldr	r0, [r7, #28]
   17468:	ldr	r3, [r7, #32]
   1746c:	add	r0, r0, r6
   17470:	str	r0, [r7, #28]
   17474:	b	1738c <argp_failure@@Base+0x16fc>
   17478:	mov	r6, sl
   1747c:	b	169d8 <argp_failure@@Base+0xd48>
   17480:	ldrdeq	ip, [r1], -r8
   17484:	andeq	ip, r1, r8, ror #13
   17488:	strdeq	ip, [r1], -r8
   1748c:	andeq	ip, r1, r8, lsl #14
   17490:	andeq	ip, r1, r8, lsl r7
   17494:	andeq	ip, r1, r8, lsr #14
   17498:	andeq	ip, r1, r8, lsr r7
   1749c:	andeq	ip, r1, r8, asr #14
   174a0:	andeq	ip, r1, r8, asr r7

000174a4 <argp_help@@Base>:
   174a4:	push	{lr}		; (str lr, [sp, #-4]!)
   174a8:	sub	sp, sp, #12
   174ac:	str	r3, [sp]
   174b0:	mov	r3, r2
   174b4:	mov	r2, r1
   174b8:	mov	r1, #0
   174bc:	bl	15eac <argp_failure@@Base+0x21c>
   174c0:	add	sp, sp, #12
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)

000174c8 <argp_state_help@@Base>:
   174c8:	strd	r4, [sp, #-12]!
   174cc:	subs	r4, r0, #0
   174d0:	mov	r5, r2
   174d4:	str	lr, [sp, #8]
   174d8:	sub	sp, sp, #12
   174dc:	beq	1754c <argp_state_help@@Base+0x84>
   174e0:	ldr	r3, [r4, #16]
   174e4:	adds	r2, r1, #0
   174e8:	movne	r2, #1
   174ec:	eor	r0, r3, #2
   174f0:	ands	r2, r2, r0, lsr #1
   174f4:	bne	17508 <argp_state_help@@Base+0x40>
   174f8:	add	sp, sp, #12
   174fc:	ldrd	r4, [sp]
   17500:	add	sp, sp, #8
   17504:	pop	{pc}		; (ldr pc, [sp], #4)
   17508:	ldr	r0, [r4, #40]	; 0x28
   1750c:	tst	r3, #64	; 0x40
   17510:	mov	r2, r1
   17514:	orrne	r5, r5, #128	; 0x80
   17518:	mov	r1, r4
   1751c:	mov	r3, r5
   17520:	str	r0, [sp]
   17524:	ldr	r0, [r4]
   17528:	bl	15eac <argp_failure@@Base+0x21c>
   1752c:	ldr	r3, [r4, #16]
   17530:	tst	r3, #32
   17534:	bne	174f8 <argp_state_help@@Base+0x30>
   17538:	ands	r0, r5, #256	; 0x100
   1753c:	bne	17578 <argp_state_help@@Base+0xb0>
   17540:	tst	r5, #512	; 0x200
   17544:	beq	174f8 <argp_state_help@@Base+0x30>
   17548:	bl	11278 <exit@plt>
   1754c:	cmp	r1, #0
   17550:	beq	174f8 <argp_state_help@@Base+0x30>
   17554:	movw	r3, #58320	; 0xe3d0
   17558:	movt	r3, #2
   1755c:	ldr	ip, [r3]
   17560:	mov	r2, r1
   17564:	mov	r3, r5
   17568:	mov	r1, r4
   1756c:	str	ip, [sp]
   17570:	bl	15eac <argp_failure@@Base+0x21c>
   17574:	b	17538 <argp_state_help@@Base+0x70>
   17578:	movw	r3, #58296	; 0xe3b8
   1757c:	movt	r3, #2
   17580:	ldr	r0, [r3]
   17584:	bl	11278 <exit@plt>

00017588 <argp_error@@Base>:
   17588:	push	{r1, r2, r3}
   1758c:	strd	r4, [sp, #-12]!
   17590:	subs	r5, r0, #0
   17594:	str	lr, [sp, #8]
   17598:	sub	sp, sp, #8
   1759c:	beq	17674 <argp_error@@Base+0xec>
   175a0:	ldr	r3, [r5, #16]
   175a4:	tst	r3, #2
   175a8:	bne	1765c <argp_error@@Base+0xd4>
   175ac:	ldr	r4, [r5, #44]	; 0x2c
   175b0:	cmp	r4, #0
   175b4:	beq	1765c <argp_error@@Base+0xd4>
   175b8:	mov	r0, r4
   175bc:	bl	11380 <flockfile@plt>
   175c0:	ldr	r0, [r5, #40]	; 0x28
   175c4:	add	r3, sp, #24
   175c8:	str	r3, [sp, #4]
   175cc:	mov	r1, r4
   175d0:	bl	110bc <fputs_unlocked@plt>
   175d4:	ldr	r3, [r4, #20]
   175d8:	ldr	r2, [r4, #24]
   175dc:	cmp	r3, r2
   175e0:	addcc	r1, r3, #1
   175e4:	movcc	r2, #58	; 0x3a
   175e8:	strcc	r1, [r4, #20]
   175ec:	strbcc	r2, [r3]
   175f0:	bcs	176b8 <argp_error@@Base+0x130>
   175f4:	ldr	r3, [r4, #20]
   175f8:	ldr	r2, [r4, #24]
   175fc:	cmp	r3, r2
   17600:	addcc	r1, r3, #1
   17604:	movcc	r2, #32
   17608:	strcc	r1, [r4, #20]
   1760c:	strbcc	r2, [r3]
   17610:	bcs	176c8 <argp_error@@Base+0x140>
   17614:	mov	r0, r4
   17618:	ldr	r2, [sp, #4]
   1761c:	ldr	r1, [sp, #20]
   17620:	bl	11344 <vfprintf@plt>
   17624:	ldr	r3, [r4, #20]
   17628:	ldr	r2, [r4, #24]
   1762c:	cmp	r3, r2
   17630:	addcc	r1, r3, #1
   17634:	movcc	r2, #10
   17638:	strcc	r1, [r4, #20]
   1763c:	strbcc	r2, [r3]
   17640:	bcs	176a8 <argp_error@@Base+0x120>
   17644:	mov	r0, r5
   17648:	mov	r2, #260	; 0x104
   1764c:	mov	r1, r4
   17650:	bl	174c8 <argp_state_help@@Base>
   17654:	mov	r0, r4
   17658:	bl	111d0 <funlockfile@plt>
   1765c:	add	sp, sp, #8
   17660:	ldrd	r4, [sp]
   17664:	ldr	lr, [sp, #8]
   17668:	add	sp, sp, #12
   1766c:	add	sp, sp, #12
   17670:	bx	lr
   17674:	movw	r3, #58328	; 0xe3d8
   17678:	movt	r3, #2
   1767c:	ldr	r4, [r3]
   17680:	cmp	r4, #0
   17684:	beq	1765c <argp_error@@Base+0xd4>
   17688:	mov	r0, r4
   1768c:	bl	11380 <flockfile@plt>
   17690:	add	r2, sp, #24
   17694:	movw	r3, #58320	; 0xe3d0
   17698:	movt	r3, #2
   1769c:	str	r2, [sp, #4]
   176a0:	ldr	r0, [r3]
   176a4:	b	175cc <argp_error@@Base+0x44>
   176a8:	mov	r1, #10
   176ac:	mov	r0, r4
   176b0:	bl	11314 <__overflow@plt>
   176b4:	b	17644 <argp_error@@Base+0xbc>
   176b8:	mov	r1, #58	; 0x3a
   176bc:	mov	r0, r4
   176c0:	bl	11314 <__overflow@plt>
   176c4:	b	175f4 <argp_error@@Base+0x6c>
   176c8:	mov	r1, #32
   176cc:	mov	r0, r4
   176d0:	bl	11314 <__overflow@plt>
   176d4:	b	17614 <argp_error@@Base+0x8c>
   176d8:	ldr	r3, [r0]
   176dc:	strd	r4, [sp, #-16]!
   176e0:	ldr	r5, [r0, #16]
   176e4:	str	r6, [sp, #8]
   176e8:	str	lr, [sp, #12]
   176ec:	cmp	r3, #0
   176f0:	beq	1779c <argp_error@@Base+0x214>
   176f4:	ldr	r0, [r1, #8]
   176f8:	mov	r2, #0
   176fc:	add	r0, r0, #1
   17700:	str	r0, [r1, #8]
   17704:	b	1770c <argp_error@@Base+0x184>
   17708:	add	r2, r2, #1
   1770c:	add	r3, r3, #24
   17710:	ldr	r0, [r3, #-20]	; 0xffffffec
   17714:	cmp	r0, #0
   17718:	bne	17708 <argp_error@@Base+0x180>
   1771c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   17720:	cmp	r0, #0
   17724:	bne	17708 <argp_error@@Base+0x180>
   17728:	ldr	r0, [r3, #-8]
   1772c:	cmp	r0, #0
   17730:	bne	17708 <argp_error@@Base+0x180>
   17734:	ldr	r0, [r3, #-4]
   17738:	cmp	r0, #0
   1773c:	bne	17708 <argp_error@@Base+0x180>
   17740:	ldm	r1, {r0, r3}
   17744:	add	ip, r2, r2, lsl #1
   17748:	add	r2, r3, r2
   1774c:	add	r0, r0, ip
   17750:	stm	r1, {r0, r2}
   17754:	cmp	r5, #0
   17758:	beq	1778c <argp_error@@Base+0x204>
   1775c:	ldr	r0, [r5]
   17760:	cmp	r0, #0
   17764:	beq	1778c <argp_error@@Base+0x204>
   17768:	mov	r4, r1
   1776c:	mov	r1, r4
   17770:	bl	176d8 <argp_error@@Base+0x150>
   17774:	ldr	r3, [r4, #12]
   17778:	ldr	r0, [r5, #16]!
   1777c:	add	r3, r3, #1
   17780:	cmp	r0, #0
   17784:	str	r3, [r4, #12]
   17788:	bne	1776c <argp_error@@Base+0x1e4>
   1778c:	ldrd	r4, [sp]
   17790:	ldr	r6, [sp, #8]
   17794:	add	sp, sp, #12
   17798:	pop	{pc}		; (ldr pc, [sp], #4)
   1779c:	ldr	r3, [r0, #4]
   177a0:	cmp	r3, #0
   177a4:	beq	17754 <argp_error@@Base+0x1cc>
   177a8:	ldr	r3, [r1, #8]
   177ac:	add	r3, r3, #1
   177b0:	str	r3, [r1, #8]
   177b4:	b	17754 <argp_error@@Base+0x1cc>
   177b8:	cmp	r0, #86	; 0x56
   177bc:	beq	177c8 <argp_error@@Base+0x240>
   177c0:	mov	r0, #7
   177c4:	bx	lr
   177c8:	movw	r3, #58384	; 0xe410
   177cc:	movt	r3, #2
   177d0:	str	r4, [sp, #-8]!
   177d4:	ldr	r3, [r3]
   177d8:	mov	r4, r2
   177dc:	str	lr, [sp, #4]
   177e0:	cmp	r3, #0
   177e4:	beq	17814 <argp_error@@Base+0x28c>
   177e8:	mov	r1, r2
   177ec:	ldr	r0, [r2, #48]	; 0x30
   177f0:	blx	r3
   177f4:	ldr	r0, [r4, #16]
   177f8:	ands	r0, r0, #32
   177fc:	beq	17810 <argp_error@@Base+0x288>
   17800:	ldr	r4, [sp]
   17804:	add	sp, sp, #4
   17808:	mov	r0, #0
   1780c:	pop	{pc}		; (ldr pc, [sp], #4)
   17810:	bl	11278 <exit@plt>
   17814:	movw	r3, #58460	; 0xe45c
   17818:	movt	r3, #2
   1781c:	ldr	r2, [r3]
   17820:	cmp	r2, #0
   17824:	beq	1783c <argp_error@@Base+0x2b4>
   17828:	movw	r1, #52500	; 0xcd14
   1782c:	movt	r1, #1
   17830:	ldr	r0, [r4, #48]	; 0x30
   17834:	bl	112a8 <fprintf@plt>
   17838:	b	177f4 <argp_error@@Base+0x26c>
   1783c:	movw	r2, #52104	; 0xcb88
   17840:	movt	r2, #1
   17844:	movw	r1, #48748	; 0xbe6c
   17848:	movt	r1, #1
   1784c:	mov	r0, r4
   17850:	bl	17588 <argp_error@@Base>
   17854:	b	177f4 <argp_error@@Base+0x26c>
   17858:	cmn	r0, #3
   1785c:	str	r4, [sp, #-8]!
   17860:	mov	r4, r2
   17864:	str	lr, [sp, #4]
   17868:	sub	sp, sp, #8
   1786c:	beq	1796c <argp_error@@Base+0x3e4>
   17870:	ble	178a8 <argp_error@@Base+0x320>
   17874:	cmn	r0, #2
   17878:	beq	17920 <argp_error@@Base+0x398>
   1787c:	cmp	r0, #63	; 0x3f
   17880:	bne	1790c <argp_error@@Base+0x384>
   17884:	mov	r0, r4
   17888:	movw	r2, #634	; 0x27a
   1788c:	ldr	r1, [r4, #48]	; 0x30
   17890:	bl	174c8 <argp_state_help@@Base>
   17894:	mov	r0, #0
   17898:	add	sp, sp, #8
   1789c:	ldr	r4, [sp]
   178a0:	add	sp, sp, #4
   178a4:	pop	{pc}		; (ldr pc, [sp], #4)
   178a8:	cmn	r0, #4
   178ac:	bne	1790c <argp_error@@Base+0x384>
   178b0:	cmp	r1, #0
   178b4:	movw	r0, #52140	; 0xcbac
   178b8:	movt	r0, #1
   178bc:	mov	r2, #10
   178c0:	movne	r0, r1
   178c4:	movw	r4, #58380	; 0xe40c
   178c8:	movt	r4, #2
   178cc:	mov	r1, #0
   178d0:	bl	110e0 <strtol@plt>
   178d4:	str	r0, [r4]
   178d8:	b	178e4 <argp_error@@Base+0x35c>
   178dc:	mov	r0, #1
   178e0:	bl	11194 <sleep@plt>
   178e4:	ldr	r3, [r4]
   178e8:	sub	r2, r3, #1
   178ec:	cmp	r3, #0
   178f0:	str	r2, [r4]
   178f4:	bgt	178dc <argp_error@@Base+0x354>
   178f8:	mov	r0, #0
   178fc:	add	sp, sp, #8
   17900:	ldr	r4, [sp]
   17904:	add	sp, sp, #4
   17908:	pop	{pc}		; (ldr pc, [sp], #4)
   1790c:	mov	r0, #7
   17910:	add	sp, sp, #8
   17914:	ldr	r4, [sp]
   17918:	add	sp, sp, #4
   1791c:	pop	{pc}		; (ldr pc, [sp], #4)
   17920:	movw	r3, #58324	; 0xe3d4
   17924:	movt	r3, #2
   17928:	str	r1, [sp, #4]
   1792c:	mov	r0, r1
   17930:	str	r1, [r3]
   17934:	bl	18c00 <argp_parse@@Base+0xf64>
   17938:	ldr	r3, [r4, #16]
   1793c:	movw	r2, #58320	; 0xe3d0
   17940:	movt	r2, #2
   17944:	str	r0, [r4, #40]	; 0x28
   17948:	str	r0, [r2]
   1794c:	ldr	r1, [sp, #4]
   17950:	and	r3, r3, #3
   17954:	cmp	r3, #1
   17958:	bne	178f8 <argp_error@@Base+0x370>
   1795c:	ldr	r3, [r4, #8]
   17960:	mov	r0, #0
   17964:	str	r1, [r3]
   17968:	b	17898 <argp_error@@Base+0x310>
   1796c:	ldr	r1, [r4, #48]	; 0x30
   17970:	mov	r0, r4
   17974:	movw	r2, #513	; 0x201
   17978:	bl	174c8 <argp_state_help@@Base>
   1797c:	mov	r0, #0
   17980:	add	sp, sp, #8
   17984:	ldr	r4, [sp]
   17988:	add	sp, sp, #4
   1798c:	pop	{pc}		; (ldr pc, [sp], #4)
   17990:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17994:	strd	r6, [sp, #8]
   17998:	strd	r8, [sp, #16]
   1799c:	strd	sl, [sp, #24]
   179a0:	str	lr, [sp, #32]
   179a4:	sub	sp, sp, #44	; 0x2c
   179a8:	ldr	fp, [r0]
   179ac:	str	r3, [sp, #16]
   179b0:	ldr	r3, [r0, #16]
   179b4:	ldr	r7, [sp, #80]	; 0x50
   179b8:	cmp	fp, #0
   179bc:	str	r3, [sp, #24]
   179c0:	strd	r0, [sp, #28]
   179c4:	str	r2, [sp, #36]	; 0x24
   179c8:	beq	17c74 <argp_error@@Base+0x6ec>
   179cc:	ldr	r9, [r7, #4]
   179d0:	movw	r3, #36409	; 0x8e39
   179d4:	movt	r3, #14563	; 0x38e3
   179d8:	mov	r4, fp
   179dc:	str	r3, [sp, #20]
   179e0:	ldr	r6, [r4, #4]
   179e4:	cmp	r6, #0
   179e8:	bne	179f8 <argp_error@@Base+0x470>
   179ec:	ldr	r3, [r4]
   179f0:	cmp	r3, #0
   179f4:	beq	17b6c <argp_error@@Base+0x5e4>
   179f8:	ldr	r3, [r4, #12]
   179fc:	tst	r3, #4
   17a00:	moveq	r5, r3
   17a04:	moveq	fp, r4
   17a08:	ldrne	r5, [fp, #12]
   17a0c:	ands	r5, r5, #8
   17a10:	bne	17b54 <argp_error@@Base+0x5cc>
   17a14:	tst	r3, #8
   17a18:	bne	17a98 <argp_error@@Base+0x510>
   17a1c:	sub	r3, r6, #1
   17a20:	cmp	r3, #254	; 0xfe
   17a24:	bhi	17a98 <argp_error@@Base+0x510>
   17a28:	bl	11260 <__ctype_b_loc@plt>
   17a2c:	ldr	r1, [r0]
   17a30:	lsl	r3, r6, #1
   17a34:	ldrh	r3, [r1, r3]
   17a38:	tst	r3, #16384	; 0x4000
   17a3c:	beq	17a98 <argp_error@@Base+0x510>
   17a40:	add	r3, r9, #1
   17a44:	str	r3, [r7, #4]
   17a48:	strb	r6, [r9]
   17a4c:	ldr	r3, [fp, #8]
   17a50:	cmp	r3, #0
   17a54:	beq	17a88 <argp_error@@Base+0x500>
   17a58:	ldr	r3, [r7, #4]
   17a5c:	mov	r2, #58	; 0x3a
   17a60:	add	r1, r3, #1
   17a64:	str	r1, [r7, #4]
   17a68:	strb	r2, [r3]
   17a6c:	ldr	r3, [fp, #12]
   17a70:	tst	r3, #1
   17a74:	beq	17a88 <argp_error@@Base+0x500>
   17a78:	ldr	r3, [r7, #4]
   17a7c:	add	r1, r3, #1
   17a80:	str	r1, [r7, #4]
   17a84:	strb	r2, [r3]
   17a88:	ldr	r3, [r7, #4]
   17a8c:	mov	r2, #0
   17a90:	strb	r2, [r3]
   17a94:	ldr	r9, [r7, #4]
   17a98:	ldr	sl, [r4]
   17a9c:	cmp	sl, #0
   17aa0:	beq	17b54 <argp_error@@Base+0x5cc>
   17aa4:	ldr	r3, [r7]
   17aa8:	ldr	r8, [r3, #8]
   17aac:	str	r3, [sp, #12]
   17ab0:	ldr	r0, [r8]
   17ab4:	cmp	r0, #0
   17ab8:	beq	17adc <argp_error@@Base+0x554>
   17abc:	mov	r6, r8
   17ac0:	mov	r1, sl
   17ac4:	bl	110d4 <strcmp@plt>
   17ac8:	cmp	r0, #0
   17acc:	beq	17b5c <argp_error@@Base+0x5d4>
   17ad0:	ldr	r0, [r6, #16]!
   17ad4:	cmp	r0, #0
   17ad8:	bne	17ac0 <argp_error@@Base+0x538>
   17adc:	ldr	r0, [fp, #8]
   17ae0:	ldr	r1, [r7, #8]
   17ae4:	cmp	r0, #0
   17ae8:	str	sl, [r1]
   17aec:	beq	17b00 <argp_error@@Base+0x578>
   17af0:	ldr	r3, [fp, #12]
   17af4:	tst	r3, #1
   17af8:	movne	r5, #2
   17afc:	moveq	r5, #1
   17b00:	str	r5, [r1, #4]
   17b04:	mov	r3, #0
   17b08:	add	ip, r1, #16
   17b0c:	ldr	r0, [r4, #4]
   17b10:	str	r3, [r1, #8]
   17b14:	ldr	r2, [sp, #16]
   17b18:	cmp	r0, r3
   17b1c:	ldr	r3, [sp, #12]
   17b20:	ldreq	r0, [fp, #4]
   17b24:	ldr	r3, [r3, #48]	; 0x30
   17b28:	bic	r0, r0, #-16777216	; 0xff000000
   17b2c:	sub	r3, r2, r3
   17b30:	ldr	r2, [sp, #20]
   17b34:	asr	r3, r3, #2
   17b38:	mul	r3, r2, r3
   17b3c:	add	r3, r3, #1
   17b40:	add	r3, r0, r3, lsl #24
   17b44:	str	r3, [r1, #12]
   17b48:	mov	r3, #0
   17b4c:	str	ip, [r7, #8]
   17b50:	str	r3, [r1, #16]
   17b54:	add	r4, r4, #24
   17b58:	b	179e0 <argp_error@@Base+0x458>
   17b5c:	sub	r6, r6, r8
   17b60:	cmp	r6, #0
   17b64:	bge	17b54 <argp_error@@Base+0x5cc>
   17b68:	b	17adc <argp_error@@Base+0x554>
   17b6c:	ldr	r3, [r4, #16]
   17b70:	cmp	r3, #0
   17b74:	bne	179f8 <argp_error@@Base+0x470>
   17b78:	ldr	r3, [r4, #20]
   17b7c:	cmp	r3, #0
   17b80:	bne	179f8 <argp_error@@Base+0x470>
   17b84:	ldr	r3, [sp, #28]
   17b88:	ldr	r2, [r3, #4]
   17b8c:	mov	r3, #0
   17b90:	ldr	r1, [sp, #16]
   17b94:	ldr	r0, [sp, #24]
   17b98:	str	r2, [r1]
   17b9c:	mov	r2, r1
   17ba0:	ldr	r1, [sp, #28]
   17ba4:	cmp	r0, r3
   17ba8:	stmib	r2, {r1, r9}
   17bac:	ldr	r1, [sp, #32]
   17bb0:	str	r3, [r2, #12]
   17bb4:	str	r1, [r2, #16]
   17bb8:	ldr	r1, [sp, #36]	; 0x24
   17bbc:	str	r3, [r2, #24]
   17bc0:	str	r3, [r2, #28]
   17bc4:	str	r3, [r2, #32]
   17bc8:	str	r1, [r2, #20]
   17bcc:	beq	17c08 <argp_error@@Base+0x680>
   17bd0:	ldr	r2, [r0]
   17bd4:	cmp	r2, r3
   17bd8:	beq	17c94 <argp_error@@Base+0x70c>
   17bdc:	mov	r1, r0
   17be0:	add	r3, r3, #1
   17be4:	ldr	r2, [r1, r3, lsl #4]
   17be8:	cmp	r2, #0
   17bec:	bne	17be0 <argp_error@@Base+0x658>
   17bf0:	lsl	r3, r3, #2
   17bf4:	ldr	r2, [r7, #12]
   17bf8:	ldr	r1, [sp, #16]
   17bfc:	add	r3, r2, r3
   17c00:	str	r2, [r1, #28]
   17c04:	str	r3, [r7, #12]
   17c08:	ldr	r3, [sp, #16]
   17c0c:	add	r0, r3, #36	; 0x24
   17c10:	ldr	r5, [sp, #24]
   17c14:	cmp	r5, #0
   17c18:	beq	17c58 <argp_error@@Base+0x6d0>
   17c1c:	ldr	r1, [r5]
   17c20:	cmp	r1, #0
   17c24:	beq	17c58 <argp_error@@Base+0x6d0>
   17c28:	ldr	r6, [sp, #16]
   17c2c:	mov	r2, #0
   17c30:	add	r4, r2, #1
   17c34:	mov	r3, r0
   17c38:	str	r7, [sp]
   17c3c:	mov	r0, r1
   17c40:	mov	r1, r6
   17c44:	bl	17990 <argp_error@@Base+0x408>
   17c48:	ldr	r1, [r5, r4, lsl #4]
   17c4c:	mov	r2, r4
   17c50:	cmp	r1, #0
   17c54:	bne	17c30 <argp_error@@Base+0x6a8>
   17c58:	add	sp, sp, #44	; 0x2c
   17c5c:	ldrd	r4, [sp]
   17c60:	ldrd	r6, [sp, #8]
   17c64:	ldrd	r8, [sp, #16]
   17c68:	ldrd	sl, [sp, #24]
   17c6c:	add	sp, sp, #32
   17c70:	pop	{pc}		; (ldr pc, [sp], #4)
   17c74:	ldr	r2, [r0, #4]
   17c78:	cmp	r2, #0
   17c7c:	beq	17c88 <argp_error@@Base+0x700>
   17c80:	ldr	r9, [r7, #4]
   17c84:	b	17b8c <argp_error@@Base+0x604>
   17c88:	ldr	r0, [sp, #16]
   17c8c:	str	r2, [sp, #16]
   17c90:	b	17c10 <argp_error@@Base+0x688>
   17c94:	mov	r3, r2
   17c98:	b	17bf4 <argp_error@@Base+0x66c>

00017c9c <argp_parse@@Base>:
   17c9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17ca0:	tst	r3, #1
   17ca4:	mov	r4, r3
   17ca8:	strd	r6, [sp, #8]
   17cac:	strd	r8, [sp, #16]
   17cb0:	strd	sl, [sp, #24]
   17cb4:	add	fp, sp, #32
   17cb8:	str	lr, [sp, #32]
   17cbc:	sub	sp, sp, #236	; 0xec
   17cc0:	str	r1, [fp, #-256]	; 0xffffff00
   17cc4:	str	r2, [fp, #-236]	; 0xffffff14
   17cc8:	str	r0, [fp, #-232]	; 0xffffff18
   17ccc:	bne	17cf8 <argp_parse@@Base+0x5c>
   17cd0:	movw	r3, #58324	; 0xe3d4
   17cd4:	movt	r3, #2
   17cd8:	ldr	r2, [r3]
   17cdc:	cmp	r2, #0
   17ce0:	beq	18724 <argp_parse@@Base+0xa88>
   17ce4:	movw	r5, #58320	; 0xe3d0
   17ce8:	movt	r5, #2
   17cec:	ldr	r3, [r5]
   17cf0:	cmp	r3, #0
   17cf4:	beq	18734 <argp_parse@@Base+0xa98>
   17cf8:	ands	r3, r4, #4
   17cfc:	moveq	r5, #1
   17d00:	movne	r5, #0
   17d04:	ands	ip, r4, #16
   17d08:	str	r3, [fp, #-240]	; 0xffffff10
   17d0c:	beq	17d64 <argp_parse@@Base+0xc8>
   17d10:	ldr	r2, [fp, #-232]	; 0xffffff18
   17d14:	mov	r3, #0
   17d18:	sub	r9, fp, #196	; 0xc4
   17d1c:	str	r5, [fp, #-228]	; 0xffffff1c
   17d20:	str	r3, [fp, #-224]	; 0xffffff20
   17d24:	str	r3, [fp, #-220]	; 0xffffff24
   17d28:	str	r3, [fp, #-216]	; 0xffffff28
   17d2c:	cmp	r2, r3
   17d30:	str	r3, [r9, #8]
   17d34:	str	r3, [r9, #12]
   17d38:	str	r3, [r9, #16]
   17d3c:	str	r3, [r9, #20]
   17d40:	str	r3, [r9, #24]
   17d44:	str	r3, [r9, #28]
   17d48:	str	r3, [r9, #32]
   17d4c:	bne	17e18 <argp_parse@@Base+0x17c>
   17d50:	mov	r3, #52	; 0x34
   17d54:	mov	sl, #36	; 0x24
   17d58:	str	r3, [fp, #-240]	; 0xffffff10
   17d5c:	mov	r3, sl
   17d60:	b	17e54 <argp_parse@@Base+0x1b8>
   17d64:	sub	sp, sp, #64	; 0x40
   17d68:	mov	r1, ip
   17d6c:	add	r3, sp, #8
   17d70:	sub	sp, sp, #32
   17d74:	add	r7, sp, #8
   17d78:	mov	r0, r3
   17d7c:	mov	r2, #64	; 0x40
   17d80:	str	ip, [r7]
   17d84:	str	ip, [r7, #4]
   17d88:	str	ip, [r7, #8]
   17d8c:	str	ip, [r7, #12]
   17d90:	str	r3, [r7, #16]
   17d94:	str	ip, [r7, #20]
   17d98:	str	ip, [r7, #24]
   17d9c:	bl	112e4 <memset@plt>
   17da0:	ldr	r2, [fp, #-232]	; 0xffffff18
   17da4:	mov	r3, r0
   17da8:	cmp	r2, #0
   17dac:	strne	r2, [r3], #16
   17db0:	movw	r2, #58460	; 0xe45c
   17db4:	movt	r2, #2
   17db8:	ldr	r1, [r2]
   17dbc:	movw	r2, #51824	; 0xca70
   17dc0:	movt	r2, #1
   17dc4:	str	r2, [r3]
   17dc8:	cmp	r1, #0
   17dcc:	beq	188c0 <argp_parse@@Base+0xc24>
   17dd0:	ldr	r1, [pc, #3444]	; 18b4c <argp_parse@@Base+0xeb0>
   17dd4:	add	r2, r3, #32
   17dd8:	str	r1, [r3, #16]
   17ddc:	mov	r3, #0
   17de0:	sub	r9, fp, #196	; 0xc4
   17de4:	str	r7, [fp, #-232]	; 0xffffff18
   17de8:	str	r5, [fp, #-228]	; 0xffffff1c
   17dec:	str	r3, [fp, #-224]	; 0xffffff20
   17df0:	str	r3, [fp, #-220]	; 0xffffff24
   17df4:	str	r3, [fp, #-216]	; 0xffffff28
   17df8:	str	r3, [r2]
   17dfc:	str	r3, [r9, #8]
   17e00:	str	r3, [r9, #12]
   17e04:	str	r3, [r9, #16]
   17e08:	str	r3, [r9, #20]
   17e0c:	str	r3, [r9, #24]
   17e10:	str	r3, [r9, #28]
   17e14:	str	r3, [r9, #32]
   17e18:	sub	r1, fp, #228	; 0xe4
   17e1c:	ldr	r0, [fp, #-232]	; 0xffffff18
   17e20:	bl	176d8 <argp_error@@Base+0x150>
   17e24:	ldr	r5, [fp, #-228]	; 0xffffff1c
   17e28:	ldr	r3, [fp, #-220]	; 0xffffff24
   17e2c:	ldr	r2, [fp, #-216]	; 0xffffff28
   17e30:	ldr	r7, [fp, #-224]	; 0xffffff20
   17e34:	add	r3, r3, #1
   17e38:	add	r3, r3, r3, lsl #3
   17e3c:	lsl	r2, r2, #2
   17e40:	lsl	r3, r3, #2
   17e44:	add	r7, r7, #1
   17e48:	add	sl, r2, r3
   17e4c:	add	r1, sl, r7, lsl #4
   17e50:	str	r1, [fp, #-240]	; 0xffffff10
   17e54:	str	r3, [fp, #-252]	; 0xffffff04
   17e58:	ldr	r3, [fp, #-240]	; 0xffffff10
   17e5c:	str	r2, [fp, #-244]	; 0xffffff0c
   17e60:	add	r0, r3, r5
   17e64:	add	r0, r0, #1
   17e68:	bl	1a0c0 <argp_parse@@Base+0x2424>
   17e6c:	cmp	r0, #0
   17e70:	mov	r5, r0
   17e74:	str	r0, [fp, #-40]	; 0xffffffd8
   17e78:	moveq	r5, #12
   17e7c:	ldr	r3, [fp, #-252]	; 0xffffff04
   17e80:	ldr	r2, [fp, #-244]	; 0xffffff0c
   17e84:	beq	18398 <argp_parse@@Base+0x6fc>
   17e88:	add	ip, r5, sl
   17e8c:	add	r3, r5, r3
   17e90:	ldr	r1, [fp, #-240]	; 0xffffff10
   17e94:	str	ip, [fp, #-244]	; 0xffffff0c
   17e98:	ldrd	r6, [r9, #8]
   17e9c:	str	ip, [fp, #-152]	; 0xffffff68
   17ea0:	add	sl, r5, r1
   17ea4:	ldrd	r0, [r9, #16]
   17ea8:	str	r5, [fp, #-112]	; 0xffffff90
   17eac:	strd	r6, [fp, #-140]	; 0xffffff74
   17eb0:	ldrd	r6, [r9, #24]
   17eb4:	strd	r0, [fp, #-252]	; 0xffffff04
   17eb8:	mov	r0, r3
   17ebc:	ldr	r1, [r9, #32]
   17ec0:	str	sl, [fp, #-156]	; 0xffffff64
   17ec4:	ldrd	r8, [fp, #-252]	; 0xffffff04
   17ec8:	str	r3, [fp, #-104]	; 0xffffff98
   17ecc:	strd	r8, [fp, #-132]	; 0xffffff7c
   17ed0:	mov	r9, #1
   17ed4:	mov	r8, #1
   17ed8:	str	r1, [fp, #-116]	; 0xffffff8c
   17edc:	mov	r1, #0
   17ee0:	strd	r8, [fp, #-196]	; 0xffffff3c
   17ee4:	strd	r8, [fp, #-148]	; 0xffffff6c
   17ee8:	sub	r9, fp, #160	; 0xa0
   17eec:	strd	r6, [fp, #-124]	; 0xffffff84
   17ef0:	bl	112e4 <memset@plt>
   17ef4:	ldr	ip, [fp, #-244]	; 0xffffff0c
   17ef8:	tst	r4, #8
   17efc:	str	r9, [fp, #-212]	; 0xffffff2c
   17f00:	str	sl, [fp, #-208]	; 0xffffff30
   17f04:	str	ip, [fp, #-204]	; 0xffffff34
   17f08:	str	r0, [fp, #-200]	; 0xffffff38
   17f0c:	bne	183b8 <argp_parse@@Base+0x71c>
   17f10:	ands	r3, r4, #4
   17f14:	cmp	r3, #0
   17f18:	moveq	r3, sl
   17f1c:	moveq	r2, ip
   17f20:	beq	17f38 <argp_parse@@Base+0x29c>
   17f24:	mov	r2, #43	; 0x2b
   17f28:	add	r3, sl, #1
   17f2c:	strb	r2, [sl]
   17f30:	mov	r2, ip
   17f34:	str	r3, [fp, #-208]	; 0xffffff30
   17f38:	ldr	r0, [fp, #-232]	; 0xffffff18
   17f3c:	mov	r5, #0
   17f40:	strb	r5, [r3]
   17f44:	str	r5, [r2]
   17f48:	cmp	r0, r5
   17f4c:	str	r0, [fp, #-160]	; 0xffffff60
   17f50:	beq	185a4 <argp_parse@@Base+0x908>
   17f54:	sub	ip, fp, #212	; 0xd4
   17f58:	mov	r2, r5
   17f5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f60:	mov	r1, r5
   17f64:	str	ip, [sp]
   17f68:	bl	17990 <argp_error@@Base+0x408>
   17f6c:	movw	r1, #58328	; 0xe3d8
   17f70:	movt	r1, #2
   17f74:	ldr	r6, [fp, #-236]	; 0xffffff14
   17f78:	mov	lr, #1
   17f7c:	movw	r2, #58332	; 0xe3dc
   17f80:	movt	r2, #2
   17f84:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f88:	str	r0, [fp, #-108]	; 0xffffff94
   17f8c:	ldr	ip, [r1]
   17f90:	str	lr, [fp, #-100]	; 0xffffff9c
   17f94:	ldr	r1, [fp, #-256]	; 0xffffff00
   17f98:	cmp	r0, r3
   17f9c:	mov	r0, #0
   17fa0:	ldr	lr, [fp, #-160]	; 0xffffff60
   17fa4:	movls	r3, r6
   17fa8:	ldr	r2, [r2]
   17fac:	str	ip, [fp, #-52]	; 0xffffffcc
   17fb0:	str	r9, [fp, #-44]	; 0xffffffd4
   17fb4:	str	r1, [fp, #-92]	; 0xffffffa4
   17fb8:	mov	r1, #0
   17fbc:	str	lr, [fp, #-96]	; 0xffffffa0
   17fc0:	str	r6, [fp, #-88]	; 0xffffffa8
   17fc4:	str	r5, [fp, #-84]	; 0xffffffac
   17fc8:	str	r4, [fp, #-80]	; 0xffffffb0
   17fcc:	strd	r0, [fp, #-76]	; 0xffffffb4
   17fd0:	strd	r0, [fp, #-68]	; 0xffffffbc
   17fd4:	strd	r0, [fp, #-60]	; 0xffffffc4
   17fd8:	str	r2, [fp, #-48]	; 0xffffffd0
   17fdc:	bls	180c4 <argp_parse@@Base+0x428>
   17fe0:	ldr	r2, [fp, #8]
   17fe4:	mov	r8, r6
   17fe8:	add	r4, r3, #36	; 0x24
   17fec:	mov	r6, #3
   17ff0:	movt	r6, #256	; 0x100
   17ff4:	str	r2, [r3, #24]
   17ff8:	b	18044 <argp_parse@@Base+0x3a8>
   17ffc:	ldr	r7, [r4, #-24]	; 0xffffffe8
   18000:	ldr	r5, [r4, #-12]
   18004:	ldr	lr, [r4, #-8]
   18008:	ldr	ip, [r4, #-4]
   1800c:	str	r7, [fp, #-76]	; 0xffffffb4
   18010:	str	r5, [fp, #-68]	; 0xffffffbc
   18014:	str	lr, [fp, #-64]	; 0xffffffc0
   18018:	str	ip, [fp, #-60]	; 0xffffffc4
   1801c:	blx	r3
   18020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18024:	str	r3, [r4, #-4]
   18028:	ldr	r3, [fp, #-108]	; 0xffffff94
   1802c:	cmp	r3, r4
   18030:	bls	18658 <argp_parse@@Base+0x9bc>
   18034:	cmp	r0, #7
   18038:	cmpne	r0, #0
   1803c:	bne	18648 <argp_parse@@Base+0x9ac>
   18040:	add	r4, r4, #36	; 0x24
   18044:	ldr	r3, [r4, #-20]	; 0xffffffec
   18048:	mov	r1, #0
   1804c:	sub	r2, fp, #96	; 0x60
   18050:	mov	r0, r6
   18054:	cmp	r3, r1
   18058:	beq	1806c <argp_parse@@Base+0x3d0>
   1805c:	ldr	ip, [r4, #-16]
   18060:	ldr	r3, [r3, #28]
   18064:	ldr	r3, [r3, ip, lsl #2]
   18068:	str	r3, [r4, #-12]
   1806c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18070:	cmp	r3, #0
   18074:	bne	17ffc <argp_parse@@Base+0x360>
   18078:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1807c:	ldr	r3, [r3, #16]
   18080:	cmp	r3, #0
   18084:	beq	180ac <argp_parse@@Base+0x410>
   18088:	ldr	r3, [r3]
   1808c:	cmp	r3, #0
   18090:	beq	180ac <argp_parse@@Base+0x410>
   18094:	ldr	ip, [r4, #-12]
   18098:	ldr	r3, [r4, #-8]
   1809c:	str	ip, [r3]
   180a0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   180a4:	cmp	r3, #0
   180a8:	bne	17ffc <argp_parse@@Base+0x360>
   180ac:	ldr	r3, [fp, #-108]	; 0xffffff94
   180b0:	cmp	r4, r3
   180b4:	bcc	18040 <argp_parse@@Base+0x3a4>
   180b8:	str	r8, [fp, #-236]	; 0xffffff14
   180bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   180c0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   180c4:	tst	r4, #2
   180c8:	beq	18618 <argp_parse@@Base+0x97c>
   180cc:	tst	r4, #1
   180d0:	mov	r2, #0
   180d4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   180d8:	subne	r3, r3, #4
   180dc:	str	r2, [fp, #-144]	; 0xffffff70
   180e0:	ldr	r2, [fp, #-236]	; 0xffffff14
   180e4:	strne	r3, [fp, #-88]	; 0xffffffa8
   180e8:	addne	r4, r4, #1
   180ec:	strne	r4, [fp, #-92]	; 0xffffffa4
   180f0:	cmp	r2, r3
   180f4:	beq	18630 <argp_parse@@Base+0x994>
   180f8:	movw	r3, #58320	; 0xe3d0
   180fc:	movt	r3, #2
   18100:	ldr	r3, [r3]
   18104:	str	r3, [fp, #-56]	; 0xffffffc8
   18108:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1810c:	movw	r3, #52152	; 0xcbb8
   18110:	movt	r3, #1
   18114:	mov	r9, #6
   18118:	movt	r9, #256	; 0x100
   1811c:	ldr	r7, [fp, #-84]	; 0xffffffac
   18120:	mov	r0, r4
   18124:	str	r3, [fp, #-232]	; 0xffffff18
   18128:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1812c:	cmp	r3, #0
   18130:	beq	18218 <argp_parse@@Base+0x57c>
   18134:	cmp	r3, r7
   18138:	movgt	r3, #0
   1813c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   18140:	bgt	18218 <argp_parse@@Base+0x57c>
   18144:	cmp	r7, r0
   18148:	bge	18468 <argp_parse@@Base+0x7cc>
   1814c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18150:	tst	r3, #4
   18154:	bne	1867c <argp_parse@@Base+0x9e0>
   18158:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1815c:	ldr	r5, [r3, r7, lsl #2]
   18160:	str	r5, [fp, #-136]	; 0xffffff78
   18164:	ldr	r8, [fp, #-112]	; 0xffffff90
   18168:	str	r7, [fp, #-84]	; 0xffffffac
   1816c:	ldr	ip, [fp, #-108]	; 0xffffff94
   18170:	cmp	r8, ip
   18174:	bcs	18460 <argp_parse@@Base+0x7c4>
   18178:	mov	r3, r7
   1817c:	add	r4, r8, #36	; 0x24
   18180:	ldr	sl, [r4, #-36]	; 0xffffffdc
   18184:	mov	r0, #0
   18188:	add	lr, r3, #1
   1818c:	sub	r2, fp, #96	; 0x60
   18190:	mov	r1, r5
   18194:	sub	r6, r4, #36	; 0x24
   18198:	mov	r8, r4
   1819c:	str	lr, [fp, #-84]	; 0xffffffac
   181a0:	cmp	sl, r0
   181a4:	beq	1844c <argp_parse@@Base+0x7b0>
   181a8:	ldr	r3, [r4, #-12]
   181ac:	ldr	lr, [r4, #-8]
   181b0:	ldr	ip, [r4, #-4]
   181b4:	str	r3, [fp, #-68]	; 0xffffffbc
   181b8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   181bc:	str	r3, [fp, #-76]	; 0xffffffb4
   181c0:	str	lr, [fp, #-64]	; 0xffffffc0
   181c4:	str	ip, [fp, #-60]	; 0xffffffc4
   181c8:	blx	sl
   181cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   181d0:	cmp	r0, #7
   181d4:	str	r3, [r4, #-4]
   181d8:	beq	183d4 <argp_parse@@Base+0x738>
   181dc:	cmp	r0, #0
   181e0:	bne	1851c <argp_parse@@Base+0x880>
   181e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   181e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   181ec:	cmp	r7, r3
   181f0:	bge	18534 <argp_parse@@Base+0x898>
   181f4:	ldr	r1, [r4, #-24]	; 0xffffffe8
   181f8:	sub	ip, r3, r7
   181fc:	mov	r7, r3
   18200:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18204:	add	r3, r1, ip
   18208:	str	r3, [r4, #-24]	; 0xffffffe8
   1820c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18210:	cmp	r3, #0
   18214:	bne	18134 <argp_parse@@Base+0x498>
   18218:	cmp	r2, #0
   1821c:	beq	18144 <argp_parse@@Base+0x4a8>
   18220:	mvn	r2, #0
   18224:	str	r7, [fp, #-148]	; 0xffffff6c
   18228:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1822c:	str	r2, [fp, #-140]	; 0xffffff74
   18230:	ldr	r2, [fp, #-156]	; 0xffffff64
   18234:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18238:	ands	ip, r3, #64	; 0x40
   1823c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18240:	beq	18548 <argp_parse@@Base+0x8ac>
   18244:	mov	ip, #0
   18248:	sub	lr, fp, #148	; 0x94
   1824c:	stm	sp, {ip, lr}
   18250:	bl	18dc4 <argp_parse@@Base+0x1128>
   18254:	ldr	r7, [fp, #-148]	; 0xffffff6c
   18258:	mov	r4, r0
   1825c:	cmn	r4, #1
   18260:	str	r7, [fp, #-84]	; 0xffffffac
   18264:	beq	1856c <argp_parse@@Base+0x8d0>
   18268:	cmp	r4, #63	; 0x3f
   1826c:	beq	18284 <argp_parse@@Base+0x5e8>
   18270:	cmp	r4, #1
   18274:	bne	18830 <argp_parse@@Base+0xb94>
   18278:	sub	r7, r7, #1
   1827c:	ldr	r5, [fp, #-136]	; 0xffffff78
   18280:	b	18164 <argp_parse@@Base+0x4c8>
   18284:	ldr	r3, [fp, #-140]	; 0xffffff74
   18288:	cmn	r3, #1
   1828c:	beq	18748 <argp_parse@@Base+0xaac>
   18290:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18294:	sub	r6, fp, #96	; 0x60
   18298:	mov	r0, r6
   1829c:	mov	r2, #260	; 0x104
   182a0:	mov	r5, #7
   182a4:	bl	174c8 <argp_state_help@@Base>
   182a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   182ac:	ldr	ip, [fp, #-108]	; 0xffffff94
   182b0:	cmp	r3, ip
   182b4:	mov	r6, r3
   182b8:	mov	r4, ip
   182bc:	bcs	18ad0 <argp_parse@@Base+0xe34>
   182c0:	mov	r7, #5
   182c4:	movt	r7, #256	; 0x100
   182c8:	ldr	r3, [r6]
   182cc:	mov	r1, #0
   182d0:	sub	r2, fp, #96	; 0x60
   182d4:	mov	r0, r7
   182d8:	cmp	r3, r1
   182dc:	beq	1880c <argp_parse@@Base+0xb70>
   182e0:	ldr	ip, [r6, #24]
   182e4:	add	r6, r6, #36	; 0x24
   182e8:	ldr	r4, [r6, #-8]
   182ec:	ldr	lr, [r6, #-4]
   182f0:	str	ip, [fp, #-68]	; 0xffffffbc
   182f4:	ldr	ip, [r6, #-24]	; 0xffffffe8
   182f8:	str	ip, [fp, #-76]	; 0xffffffb4
   182fc:	str	r4, [fp, #-64]	; 0xffffffc0
   18300:	str	lr, [fp, #-60]	; 0xffffffc4
   18304:	blx	r3
   18308:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1830c:	str	r3, [r6, #-4]
   18310:	ldr	r4, [fp, #-108]	; 0xffffff94
   18314:	cmp	r6, r4
   18318:	bcc	182c8 <argp_parse@@Base+0x62c>
   1831c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18320:	sub	r4, r4, #36	; 0x24
   18324:	cmp	r3, r4
   18328:	bhi	18388 <argp_parse@@Base+0x6ec>
   1832c:	mov	r7, #7
   18330:	movt	r7, #256	; 0x100
   18334:	ldr	r6, [r4]
   18338:	mov	r1, #0
   1833c:	sub	r2, fp, #96	; 0x60
   18340:	mov	r0, r7
   18344:	cmp	r6, r1
   18348:	beq	187fc <argp_parse@@Base+0xb60>
   1834c:	ldr	r8, [r4, #12]
   18350:	sub	r4, r4, #36	; 0x24
   18354:	ldr	lr, [r4, #60]	; 0x3c
   18358:	ldr	ip, [r4, #64]	; 0x40
   1835c:	ldr	r3, [r4, #68]	; 0x44
   18360:	str	r8, [fp, #-76]	; 0xffffffb4
   18364:	str	lr, [fp, #-68]	; 0xffffffbc
   18368:	str	ip, [fp, #-64]	; 0xffffffc0
   1836c:	str	r3, [fp, #-60]	; 0xffffffc4
   18370:	blx	r6
   18374:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18378:	str	r3, [r4, #68]	; 0x44
   1837c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18380:	cmp	r3, r4
   18384:	bls	18334 <argp_parse@@Base+0x698>
   18388:	cmp	r5, #7
   1838c:	moveq	r5, #22
   18390:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18394:	bl	18cd4 <argp_parse@@Base+0x1038>
   18398:	mov	r0, r5
   1839c:	sub	sp, fp, #32
   183a0:	ldrd	r4, [sp]
   183a4:	ldrd	r6, [sp, #8]
   183a8:	ldrd	r8, [sp, #16]
   183ac:	ldrd	sl, [sp, #24]
   183b0:	add	sp, sp, #32
   183b4:	pop	{pc}		; (ldr pc, [sp], #4)
   183b8:	ldr	r1, [fp, #-240]	; 0xffffff10
   183bc:	mov	r2, #45	; 0x2d
   183c0:	add	r3, sl, #1
   183c4:	str	r3, [fp, #-208]	; 0xffffff30
   183c8:	strb	r2, [r5, r1]
   183cc:	mov	r2, ip
   183d0:	b	17f38 <argp_parse@@Base+0x29c>
   183d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   183d8:	ldr	sl, [r4, #-36]	; 0xffffffdc
   183dc:	sub	r3, r3, #1
   183e0:	cmp	sl, #0
   183e4:	str	r3, [fp, #-84]	; 0xffffffac
   183e8:	beq	18b18 <argp_parse@@Base+0xe7c>
   183ec:	ldr	r3, [r6, #24]
   183f0:	sub	r2, fp, #96	; 0x60
   183f4:	mov	r1, #0
   183f8:	mov	r0, r9
   183fc:	ldr	lr, [r6, #28]
   18400:	ldr	ip, [r6, #32]
   18404:	str	r3, [fp, #-68]	; 0xffffffbc
   18408:	ldr	r3, [r6, #12]
   1840c:	str	r3, [fp, #-76]	; 0xffffffb4
   18410:	str	lr, [fp, #-64]	; 0xffffffc0
   18414:	str	ip, [fp, #-60]	; 0xffffffc4
   18418:	blx	sl
   1841c:	ldr	ip, [fp, #-108]	; 0xffffff94
   18420:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18424:	cmp	ip, r4
   18428:	movls	r2, #0
   1842c:	movhi	r2, #1
   18430:	cmp	r0, #7
   18434:	str	r3, [r6, #32]
   18438:	movne	r2, #0
   1843c:	cmp	r2, #0
   18440:	beq	18b20 <argp_parse@@Base+0xe84>
   18444:	ldr	r3, [fp, #-84]	; 0xffffffac
   18448:	b	1817c <argp_parse@@Base+0x4e0>
   1844c:	str	r3, [fp, #-84]	; 0xffffffac
   18450:	add	r2, r4, #36	; 0x24
   18454:	cmp	ip, r4
   18458:	mov	r4, r2
   1845c:	bhi	18180 <argp_parse@@Base+0x4e4>
   18460:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18464:	ldr	r7, [fp, #-84]	; 0xffffffac
   18468:	cmp	r7, r0
   1846c:	bne	1867c <argp_parse@@Base+0x9e0>
   18470:	ldr	r4, [fp, #-112]	; 0xffffff90
   18474:	ldr	ip, [fp, #-108]	; 0xffffff94
   18478:	mov	r3, r4
   1847c:	cmp	r4, ip
   18480:	bcs	18ae0 <argp_parse@@Base+0xe44>
   18484:	mov	r6, #2
   18488:	movt	r6, #256	; 0x100
   1848c:	mov	r5, #0
   18490:	b	184d8 <argp_parse@@Base+0x83c>
   18494:	ldr	r7, [r4, #-12]
   18498:	ldr	lr, [r4, #-8]
   1849c:	ldr	ip, [r4, #-4]
   184a0:	str	r3, [fp, #-76]	; 0xffffffb4
   184a4:	str	r7, [fp, #-68]	; 0xffffffbc
   184a8:	str	lr, [fp, #-64]	; 0xffffffc0
   184ac:	str	ip, [fp, #-60]	; 0xffffffc4
   184b0:	blx	r5
   184b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   184b8:	mov	r5, r0
   184bc:	str	r3, [r4, #-4]
   184c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   184c4:	cmp	ip, r4
   184c8:	bls	189b4 <argp_parse@@Base+0xd18>
   184cc:	cmp	r5, #7
   184d0:	cmpne	r5, #0
   184d4:	bne	1897c <argp_parse@@Base+0xce0>
   184d8:	ldr	r3, [r4, #12]
   184dc:	sub	r2, fp, #96	; 0x60
   184e0:	mov	r0, r6
   184e4:	add	r4, r4, #36	; 0x24
   184e8:	subs	r1, r3, #0
   184ec:	bne	184c4 <argp_parse@@Base+0x828>
   184f0:	ldr	r5, [r4, #-36]	; 0xffffffdc
   184f4:	cmp	r5, #0
   184f8:	bne	18494 <argp_parse@@Base+0x7f8>
   184fc:	cmp	ip, r4
   18500:	mov	r5, #7
   18504:	bhi	184d8 <argp_parse@@Base+0x83c>
   18508:	ldr	r3, [fp, #-112]	; 0xffffff90
   1850c:	sub	r4, ip, #36	; 0x24
   18510:	cmp	r3, r4
   18514:	bls	189d0 <argp_parse@@Base+0xd34>
   18518:	b	18a54 <argp_parse@@Base+0xdb8>
   1851c:	mov	r5, r0
   18520:	cmp	r5, #7
   18524:	bne	182a8 <argp_parse@@Base+0x60c>
   18528:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1852c:	sub	r6, fp, #96	; 0x60
   18530:	b	18298 <argp_parse@@Base+0x5fc>
   18534:	mov	r1, #1
   18538:	mov	r7, r3
   1853c:	mov	r2, r1
   18540:	str	r1, [fp, #-100]	; 0xffffff9c
   18544:	b	18128 <argp_parse@@Base+0x48c>
   18548:	str	ip, [sp]
   1854c:	sub	ip, fp, #148	; 0x94
   18550:	str	ip, [sp, #4]
   18554:	bl	18d5c <argp_parse@@Base+0x10c0>
   18558:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1855c:	mov	r4, r0
   18560:	cmn	r4, #1
   18564:	str	r7, [fp, #-84]	; 0xffffffac
   18568:	bne	18268 <argp_parse@@Base+0x5cc>
   1856c:	mov	r3, #0
   18570:	cmp	r7, #1
   18574:	str	r3, [fp, #-100]	; 0xffffff9c
   18578:	ble	18650 <argp_parse@@Base+0x9b4>
   1857c:	sub	r3, r7, #-1073741823	; 0xc0000001
   18580:	ldr	r1, [fp, #-232]	; 0xffffff18
   18584:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18588:	ldr	r0, [r2, r3, lsl #2]
   1858c:	bl	110d4 <strcmp@plt>
   18590:	cmp	r0, #0
   18594:	bne	18650 <argp_parse@@Base+0x9b4>
   18598:	str	r7, [fp, #-72]	; 0xffffffb8
   1859c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   185a0:	b	18144 <argp_parse@@Base+0x4a8>
   185a4:	ldr	r2, [fp, #-256]	; 0xffffff00
   185a8:	movw	r3, #58328	; 0xe3d8
   185ac:	movt	r3, #2
   185b0:	mov	lr, r0
   185b4:	mov	r0, #1
   185b8:	ldr	r1, [r3]
   185bc:	movw	r3, #58332	; 0xe3dc
   185c0:	movt	r3, #2
   185c4:	str	r0, [fp, #-100]	; 0xffffff9c
   185c8:	mov	r0, #0
   185cc:	tst	r4, #2
   185d0:	ldr	ip, [fp, #-236]	; 0xffffff14
   185d4:	str	lr, [fp, #-96]	; 0xffffffa0
   185d8:	str	r2, [fp, #-92]	; 0xffffffa4
   185dc:	ldr	r2, [fp, #-112]	; 0xffffff90
   185e0:	ldr	r3, [r3]
   185e4:	str	r2, [fp, #-108]	; 0xffffff94
   185e8:	str	r1, [fp, #-52]	; 0xffffffcc
   185ec:	mov	r1, #0
   185f0:	str	ip, [fp, #-88]	; 0xffffffa8
   185f4:	str	lr, [fp, #-84]	; 0xffffffac
   185f8:	str	r4, [fp, #-80]	; 0xffffffb0
   185fc:	strd	r0, [fp, #-76]	; 0xffffffb4
   18600:	strd	r0, [fp, #-68]	; 0xffffffbc
   18604:	strd	r0, [fp, #-60]	; 0xffffffc4
   18608:	str	r3, [fp, #-48]	; 0xffffffd0
   1860c:	mov	r3, ip
   18610:	str	r9, [fp, #-44]	; 0xffffffd4
   18614:	bne	180cc <argp_parse@@Base+0x430>
   18618:	mov	r2, #1
   1861c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18620:	str	r2, [fp, #-144]	; 0xffffff70
   18624:	ldr	r2, [fp, #-236]	; 0xffffff14
   18628:	cmp	r2, r3
   1862c:	bne	180f8 <argp_parse@@Base+0x45c>
   18630:	ldr	r0, [r2]
   18634:	cmp	r0, #0
   18638:	beq	180f8 <argp_parse@@Base+0x45c>
   1863c:	bl	18c00 <argp_parse@@Base+0xf64>
   18640:	str	r0, [fp, #-56]	; 0xffffffc8
   18644:	b	18108 <argp_parse@@Base+0x46c>
   18648:	mov	r5, r0
   1864c:	b	18398 <argp_parse@@Base+0x6fc>
   18650:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18654:	b	18144 <argp_parse@@Base+0x4a8>
   18658:	cmp	r0, #7
   1865c:	mov	r5, r0
   18660:	str	r8, [fp, #-236]	; 0xffffff14
   18664:	beq	180bc <argp_parse@@Base+0x420>
   18668:	cmp	r0, #0
   1866c:	bne	18398 <argp_parse@@Base+0x6fc>
   18670:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18674:	ldr	r4, [fp, #-80]	; 0xffffffb0
   18678:	b	180c4 <argp_parse@@Base+0x428>
   1867c:	ldr	r3, [fp, #4]
   18680:	cmp	r3, #0
   18684:	beq	187c4 <argp_parse@@Base+0xb28>
   18688:	str	r7, [r3]
   1868c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18690:	ldr	ip, [fp, #-108]	; 0xffffff94
   18694:	sub	r2, ip, #36	; 0x24
   18698:	cmp	r3, r2
   1869c:	movls	r6, #4
   186a0:	subls	r4, ip, #72	; 0x48
   186a4:	movtls	r6, #256	; 0x100
   186a8:	bhi	188fc <argp_parse@@Base+0xc60>
   186ac:	ldr	r5, [r4, #36]	; 0x24
   186b0:	mov	r1, #0
   186b4:	sub	r2, fp, #96	; 0x60
   186b8:	mov	r0, r6
   186bc:	cmp	r5, r1
   186c0:	beq	1881c <argp_parse@@Base+0xb80>
   186c4:	ldr	r3, [r4, #60]	; 0x3c
   186c8:	ldr	lr, [r4, #64]	; 0x40
   186cc:	ldr	ip, [r4, #68]	; 0x44
   186d0:	str	r3, [fp, #-68]	; 0xffffffbc
   186d4:	ldr	r3, [r4, #48]	; 0x30
   186d8:	str	r3, [fp, #-76]	; 0xffffffb4
   186dc:	str	lr, [fp, #-64]	; 0xffffffc0
   186e0:	str	ip, [fp, #-60]	; 0xffffffc4
   186e4:	blx	r5
   186e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   186ec:	str	r3, [r4, #68]	; 0x44
   186f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   186f4:	cmp	r4, r3
   186f8:	sub	r4, r4, #36	; 0x24
   186fc:	bcc	188dc <argp_parse@@Base+0xc40>
   18700:	cmp	r0, #7
   18704:	cmpne	r0, #0
   18708:	beq	186ac <argp_parse@@Base+0xa10>
   1870c:	ldr	ip, [fp, #-108]	; 0xffffff94
   18710:	mov	r5, r0
   18714:	sub	r4, ip, #36	; 0x24
   18718:	cmp	r4, r3
   1871c:	bcs	1832c <argp_parse@@Base+0x690>
   18720:	b	18390 <argp_parse@@Base+0x6f4>
   18724:	ldr	r2, [fp, #-236]	; 0xffffff14
   18728:	ldr	r2, [r2]
   1872c:	str	r2, [r3]
   18730:	b	17ce4 <argp_parse@@Base+0x48>
   18734:	ldr	r3, [fp, #-236]	; 0xffffff14
   18738:	ldr	r0, [r3]
   1873c:	bl	18c00 <argp_parse@@Base+0xf64>
   18740:	str	r0, [r5]
   18744:	b	17cf8 <argp_parse@@Base+0x5c>
   18748:	mov	r1, r4
   1874c:	ldr	r0, [fp, #-156]	; 0xffffff64
   18750:	bl	1129c <strchr@plt>
   18754:	cmp	r0, #0
   18758:	beq	18794 <argp_parse@@Base+0xaf8>
   1875c:	ldr	r5, [fp, #-112]	; 0xffffff90
   18760:	ldr	r2, [fp, #-108]	; 0xffffff94
   18764:	cmp	r5, r2
   18768:	bcs	18794 <argp_parse@@Base+0xaf8>
   1876c:	ldr	r3, [r5, #8]
   18770:	cmp	r3, r0
   18774:	bls	18788 <argp_parse@@Base+0xaec>
   18778:	b	18a70 <argp_parse@@Base+0xdd4>
   1877c:	ldr	r3, [r5, #8]
   18780:	cmp	r0, r3
   18784:	bcc	18a70 <argp_parse@@Base+0xdd4>
   18788:	add	r5, r5, #36	; 0x24
   1878c:	cmp	r5, r2
   18790:	bcc	1877c <argp_parse@@Base+0xae0>
   18794:	sub	r6, fp, #96	; 0x60
   18798:	mov	r2, r4
   1879c:	add	r4, r4, #1
   187a0:	ldr	r3, [pc, #936]	; 18b50 <argp_parse@@Base+0xeb4>
   187a4:	movw	r1, #52156	; 0xcbbc
   187a8:	movt	r1, #1
   187ac:	mov	r0, r6
   187b0:	bic	r4, r4, #2
   187b4:	bl	17588 <argp_error@@Base>
   187b8:	cmp	r4, #0
   187bc:	bne	187f4 <argp_parse@@Base+0xb58>
   187c0:	b	18460 <argp_parse@@Base+0x7c4>
   187c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   187c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   187cc:	tst	r3, #2
   187d0:	bne	1852c <argp_parse@@Base+0x890>
   187d4:	cmp	r1, #0
   187d8:	beq	1852c <argp_parse@@Base+0x890>
   187dc:	mov	r0, r1
   187e0:	movw	r1, #52176	; 0xcbd0
   187e4:	movt	r1, #1
   187e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   187ec:	sub	r6, fp, #96	; 0x60
   187f0:	bl	112a8 <fprintf@plt>
   187f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   187f8:	b	18298 <argp_parse@@Base+0x5fc>
   187fc:	sub	r4, r4, #36	; 0x24
   18800:	cmp	r4, r3
   18804:	bcs	18334 <argp_parse@@Base+0x698>
   18808:	b	18388 <argp_parse@@Base+0x6ec>
   1880c:	add	r6, r6, #36	; 0x24
   18810:	cmp	r6, r4
   18814:	bcc	182c8 <argp_parse@@Base+0x62c>
   18818:	b	1831c <argp_parse@@Base+0x680>
   1881c:	cmp	r4, r3
   18820:	sub	r4, r4, #36	; 0x24
   18824:	bcs	186ac <argp_parse@@Base+0xa10>
   18828:	mov	r5, #7
   1882c:	b	188e0 <argp_parse@@Base+0xc44>
   18830:	asrs	r8, r4, #24
   18834:	beq	18748 <argp_parse@@Base+0xaac>
   18838:	add	r3, r8, r8, lsl #3
   1883c:	ldr	r5, [fp, #-112]	; 0xffffff90
   18840:	ands	r2, r4, #8388608	; 0x800000
   18844:	movne	r2, #-16777216	; 0xff000000
   18848:	bic	r0, r4, #-16777216	; 0xff000000
   1884c:	lsl	r3, r3, #2
   18850:	orr	r0, r0, r2
   18854:	sub	r3, r3, #36	; 0x24
   18858:	ldr	r7, [r5, r3]
   1885c:	add	r5, r5, r3
   18860:	cmp	r7, #0
   18864:	beq	18ad8 <argp_parse@@Base+0xe3c>
   18868:	ldr	r3, [r5, #24]
   1886c:	sub	r6, fp, #96	; 0x60
   18870:	mov	r2, r6
   18874:	ldr	ip, [r5, #28]
   18878:	ldr	r1, [r5, #32]
   1887c:	str	r3, [fp, #-68]	; 0xffffffbc
   18880:	ldr	r3, [r5, #12]
   18884:	str	r3, [fp, #-76]	; 0xffffffb4
   18888:	str	ip, [fp, #-64]	; 0xffffffc0
   1888c:	str	r1, [fp, #-60]	; 0xffffffc4
   18890:	ldr	r1, [fp, #-136]	; 0xffffff78
   18894:	blx	r7
   18898:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1889c:	str	r3, [r5, #32]
   188a0:	cmp	r0, #7
   188a4:	beq	18904 <argp_parse@@Base+0xc68>
   188a8:	cmp	r0, #0
   188ac:	bne	1851c <argp_parse@@Base+0x880>
   188b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   188b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   188b8:	ldr	r7, [fp, #-84]	; 0xffffffac
   188bc:	b	18128 <argp_parse@@Base+0x48c>
   188c0:	movw	r2, #58384	; 0xe410
   188c4:	movt	r2, #2
   188c8:	ldr	r2, [r2]
   188cc:	cmp	r2, #0
   188d0:	addeq	r2, r3, #16
   188d4:	bne	17dd0 <argp_parse@@Base+0x134>
   188d8:	b	17ddc <argp_parse@@Base+0x140>
   188dc:	mov	r5, r0
   188e0:	ldr	ip, [fp, #-108]	; 0xffffff94
   188e4:	cmp	r5, #7
   188e8:	sub	r4, ip, #36	; 0x24
   188ec:	bne	18718 <argp_parse@@Base+0xa7c>
   188f0:	cmp	r4, r3
   188f4:	movcs	r5, #0
   188f8:	bcs	1832c <argp_parse@@Base+0x690>
   188fc:	mov	r5, #0
   18900:	b	18390 <argp_parse@@Base+0x6f4>
   18904:	cmp	r8, #0
   18908:	beq	18798 <argp_parse@@Base+0xafc>
   1890c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18910:	ldr	r2, [r3]
   18914:	ldr	r1, [r3, #12]
   18918:	cmp	r4, r1
   1891c:	bne	18938 <argp_parse@@Base+0xc9c>
   18920:	b	18968 <argp_parse@@Base+0xccc>
   18924:	add	r3, r3, #16
   18928:	ldr	r2, [r3]
   1892c:	ldr	r1, [r3, #12]
   18930:	cmp	r4, r1
   18934:	beq	18968 <argp_parse@@Base+0xccc>
   18938:	cmp	r2, #0
   1893c:	bne	18924 <argp_parse@@Base+0xc88>
   18940:	movw	r2, #52148	; 0xcbb4
   18944:	movt	r2, #1
   18948:	movw	r1, #52164	; 0xcbc4
   1894c:	movt	r1, #1
   18950:	ldr	r3, [pc, #504]	; 18b50 <argp_parse@@Base+0xeb4>
   18954:	mov	r0, r6
   18958:	add	r4, r4, #1
   1895c:	bl	17588 <argp_error@@Base>
   18960:	bic	r4, r4, #2
   18964:	b	187b8 <argp_parse@@Base+0xb1c>
   18968:	movw	r3, #52148	; 0xcbb4
   1896c:	movt	r3, #1
   18970:	cmp	r2, #0
   18974:	moveq	r2, r3
   18978:	b	18948 <argp_parse@@Base+0xcac>
   1897c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18980:	sub	r2, ip, #36	; 0x24
   18984:	cmp	r3, r2
   18988:	bhi	18b08 <argp_parse@@Base+0xe6c>
   1898c:	ldr	r2, [fp, #4]
   18990:	cmp	r2, #0
   18994:	beq	189a4 <argp_parse@@Base+0xd08>
   18998:	ldr	r2, [fp, #-84]	; 0xffffffac
   1899c:	ldr	r1, [fp, #4]
   189a0:	str	r2, [r1]
   189a4:	cmp	r5, #0
   189a8:	bne	18520 <argp_parse@@Base+0x884>
   189ac:	ldr	ip, [fp, #-108]	; 0xffffff94
   189b0:	b	18694 <argp_parse@@Base+0x9f8>
   189b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   189b8:	sub	r4, ip, #36	; 0x24
   189bc:	cmp	r4, r3
   189c0:	bcc	18ac4 <argp_parse@@Base+0xe28>
   189c4:	cmp	r5, #0
   189c8:	cmpne	r5, #7
   189cc:	bne	1898c <argp_parse@@Base+0xcf0>
   189d0:	mov	r6, #1
   189d4:	movt	r6, #256	; 0x100
   189d8:	sub	r4, r4, #36	; 0x24
   189dc:	ldr	r5, [r4, #36]	; 0x24
   189e0:	mov	r1, #0
   189e4:	sub	r2, fp, #96	; 0x60
   189e8:	mov	r0, r6
   189ec:	cmp	r5, r1
   189f0:	beq	18a44 <argp_parse@@Base+0xda8>
   189f4:	ldr	r3, [r4, #60]	; 0x3c
   189f8:	ldr	lr, [r4, #64]	; 0x40
   189fc:	ldr	ip, [r4, #68]	; 0x44
   18a00:	str	r3, [fp, #-68]	; 0xffffffbc
   18a04:	ldr	r3, [r4, #48]	; 0x30
   18a08:	str	r3, [fp, #-76]	; 0xffffffb4
   18a0c:	str	lr, [fp, #-64]	; 0xffffffc0
   18a10:	str	ip, [fp, #-60]	; 0xffffffc4
   18a14:	blx	r5
   18a18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18a1c:	str	r3, [r4, #68]	; 0x44
   18a20:	ldr	r3, [fp, #-112]	; 0xffffff90
   18a24:	cmp	r3, r4
   18a28:	sub	r4, r4, #36	; 0x24
   18a2c:	bhi	18ac0 <argp_parse@@Base+0xe24>
   18a30:	cmp	r0, #7
   18a34:	cmpne	r0, #0
   18a38:	beq	189dc <argp_parse@@Base+0xd40>
   18a3c:	mov	r5, r0
   18a40:	b	1898c <argp_parse@@Base+0xcf0>
   18a44:	cmp	r3, r4
   18a48:	sub	r4, r4, #36	; 0x24
   18a4c:	bls	189dc <argp_parse@@Base+0xd40>
   18a50:	ldr	ip, [fp, #-108]	; 0xffffff94
   18a54:	ldr	r2, [fp, #4]
   18a58:	cmp	r2, #0
   18a5c:	beq	18694 <argp_parse@@Base+0x9f8>
   18a60:	mov	r1, r2
   18a64:	ldr	r2, [fp, #-84]	; 0xffffffac
   18a68:	str	r2, [r1]
   18a6c:	b	18694 <argp_parse@@Base+0x9f8>
   18a70:	ldr	r3, [r5]
   18a74:	cmp	r3, #0
   18a78:	beq	18794 <argp_parse@@Base+0xaf8>
   18a7c:	ldr	r2, [r5, #12]
   18a80:	sub	r6, fp, #96	; 0x60
   18a84:	mov	r8, #0
   18a88:	ldr	r0, [r5, #24]
   18a8c:	ldr	ip, [r5, #28]
   18a90:	ldr	r1, [r5, #32]
   18a94:	str	r2, [fp, #-76]	; 0xffffffb4
   18a98:	mov	r2, r6
   18a9c:	str	r0, [fp, #-68]	; 0xffffffbc
   18aa0:	mov	r0, r4
   18aa4:	str	ip, [fp, #-64]	; 0xffffffc0
   18aa8:	str	r1, [fp, #-60]	; 0xffffffc4
   18aac:	ldr	r1, [fp, #-136]	; 0xffffff78
   18ab0:	blx	r3
   18ab4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ab8:	str	r3, [r5, #32]
   18abc:	b	188a0 <argp_parse@@Base+0xc04>
   18ac0:	mov	r5, r0
   18ac4:	cmp	r5, #7
   18ac8:	beq	18a50 <argp_parse@@Base+0xdb4>
   18acc:	b	1898c <argp_parse@@Base+0xcf0>
   18ad0:	sub	r4, ip, #36	; 0x24
   18ad4:	b	18324 <argp_parse@@Base+0x688>
   18ad8:	sub	r6, fp, #96	; 0x60
   18adc:	b	1890c <argp_parse@@Base+0xc70>
   18ae0:	sub	r4, ip, #36	; 0x24
   18ae4:	cmp	r3, r4
   18ae8:	bls	189d0 <argp_parse@@Base+0xd34>
   18aec:	ldr	r2, [fp, #4]
   18af0:	cmp	r2, #0
   18af4:	beq	188fc <argp_parse@@Base+0xc60>
   18af8:	ldr	r2, [fp, #-84]	; 0xffffffac
   18afc:	ldr	r1, [fp, #4]
   18b00:	str	r2, [r1]
   18b04:	b	18694 <argp_parse@@Base+0x9f8>
   18b08:	ldr	r2, [fp, #4]
   18b0c:	cmp	r2, #0
   18b10:	bne	18998 <argp_parse@@Base+0xcfc>
   18b14:	b	182b0 <argp_parse@@Base+0x614>
   18b18:	ldr	ip, [fp, #-108]	; 0xffffff94
   18b1c:	b	18450 <argp_parse@@Base+0x7b4>
   18b20:	cmp	r0, #0
   18b24:	beq	18b3c <argp_parse@@Base+0xea0>
   18b28:	cmp	r0, #7
   18b2c:	mov	r5, r0
   18b30:	ldrne	r3, [fp, #-112]	; 0xffffff90
   18b34:	beq	18460 <argp_parse@@Base+0x7c4>
   18b38:	b	182b0 <argp_parse@@Base+0x614>
   18b3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18b40:	mov	r0, r3
   18b44:	str	r3, [fp, #-84]	; 0xffffffac
   18b48:	b	181ec <argp_parse@@Base+0x550>
   18b4c:	andeq	ip, r1, ip, lsl #21
   18b50:	andeq	ip, r1, r8, lsr #21
   18b54:	cmp	r1, #0
   18b58:	beq	18b98 <argp_parse@@Base+0xefc>
   18b5c:	ldr	r2, [r1, #52]	; 0x34
   18b60:	ldr	r3, [r2, #48]	; 0x30
   18b64:	ldr	r1, [r2, #52]	; 0x34
   18b68:	cmp	r3, r1
   18b6c:	bcs	18b98 <argp_parse@@Base+0xefc>
   18b70:	ldr	r2, [r3, #4]
   18b74:	cmp	r0, r2
   18b78:	bne	18b8c <argp_parse@@Base+0xef0>
   18b7c:	b	18ba0 <argp_parse@@Base+0xf04>
   18b80:	ldr	r2, [r3, #4]
   18b84:	cmp	r2, r0
   18b88:	beq	18ba0 <argp_parse@@Base+0xf04>
   18b8c:	add	r3, r3, #36	; 0x24
   18b90:	cmp	r3, r1
   18b94:	bcc	18b80 <argp_parse@@Base+0xee4>
   18b98:	mov	r0, #0
   18b9c:	bx	lr
   18ba0:	ldr	r0, [r3, #24]
   18ba4:	bx	lr
   18ba8:	movw	r1, #58388	; 0xe414
   18bac:	movt	r1, #2
   18bb0:	push	{lr}		; (str lr, [sp, #-4]!)
   18bb4:	ldm	r1, {r1, ip}
   18bb8:	sub	sp, sp, #12
   18bbc:	movw	r3, #52392	; 0xcca8
   18bc0:	movt	r3, #1
   18bc4:	movw	r2, #52408	; 0xccb8
   18bc8:	movt	r2, #1
   18bcc:	str	ip, [sp]
   18bd0:	bl	191d0 <argp_parse@@Base+0x1534>
   18bd4:	add	sp, sp, #12
   18bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   18bdc:	movw	r2, #58384	; 0xe410
   18be0:	movt	r2, #2
   18be4:	movw	ip, #35752	; 0x8ba8
   18be8:	movt	ip, #1
   18bec:	movw	r3, #58388	; 0xe414
   18bf0:	movt	r3, #2
   18bf4:	str	ip, [r2]
   18bf8:	strd	r0, [r3]
   18bfc:	bx	lr
   18c00:	ldrb	r3, [r0]
   18c04:	cmp	r3, #47	; 0x2f
   18c08:	bne	18c18 <argp_parse@@Base+0xf7c>
   18c0c:	ldrb	r3, [r0, #1]!
   18c10:	cmp	r3, #47	; 0x2f
   18c14:	beq	18c0c <argp_parse@@Base+0xf70>
   18c18:	cmp	r3, #0
   18c1c:	beq	18c4c <argp_parse@@Base+0xfb0>
   18c20:	mov	r2, r0
   18c24:	mov	r1, #0
   18c28:	cmp	r3, #47	; 0x2f
   18c2c:	moveq	r1, #1
   18c30:	beq	18c40 <argp_parse@@Base+0xfa4>
   18c34:	cmp	r1, #0
   18c38:	movne	r0, r2
   18c3c:	movne	r1, #0
   18c40:	ldrb	r3, [r2, #1]!
   18c44:	cmp	r3, #0
   18c48:	bne	18c28 <argp_parse@@Base+0xf8c>
   18c4c:	bx	lr
   18c50:	str	r4, [sp, #-8]!
   18c54:	mov	r4, r0
   18c58:	str	lr, [sp, #4]
   18c5c:	bl	11290 <strlen@plt>
   18c60:	cmp	r0, #1
   18c64:	bls	18c78 <argp_parse@@Base+0xfdc>
   18c68:	sub	r2, r0, #1
   18c6c:	ldrb	r1, [r4, r2]
   18c70:	cmp	r1, #47	; 0x2f
   18c74:	beq	18c84 <argp_parse@@Base+0xfe8>
   18c78:	ldr	r4, [sp]
   18c7c:	add	sp, sp, #4
   18c80:	pop	{pc}		; (ldr pc, [sp], #4)
   18c84:	cmp	r2, #1
   18c88:	beq	18c9c <argp_parse@@Base+0x1000>
   18c8c:	add	r1, r4, r0
   18c90:	ldrb	r1, [r1, #-2]
   18c94:	cmp	r1, #47	; 0x2f
   18c98:	beq	18cac <argp_parse@@Base+0x1010>
   18c9c:	ldr	r4, [sp]
   18ca0:	add	sp, sp, #4
   18ca4:	mov	r0, r2
   18ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   18cac:	sub	r3, r0, #3
   18cb0:	rsb	r0, r4, #1
   18cb4:	add	r3, r4, r3
   18cb8:	cmp	r3, r4
   18cbc:	add	r2, r0, r3
   18cc0:	beq	18c9c <argp_parse@@Base+0x1000>
   18cc4:	ldrb	r1, [r3], #-1
   18cc8:	cmp	r1, #47	; 0x2f
   18ccc:	bne	18c9c <argp_parse@@Base+0x1000>
   18cd0:	b	18cb8 <argp_parse@@Base+0x101c>
   18cd4:	strd	r4, [sp, #-12]!
   18cd8:	mov	r5, r0
   18cdc:	str	lr, [sp, #8]
   18ce0:	sub	sp, sp, #12
   18ce4:	bl	112b4 <__errno_location@plt>
   18ce8:	mov	r4, r0
   18cec:	mov	r2, #0
   18cf0:	ldr	r3, [r4]
   18cf4:	mov	r0, r5
   18cf8:	str	r2, [r4]
   18cfc:	str	r3, [sp]
   18d00:	str	r3, [sp, #4]
   18d04:	bl	11134 <free@plt>
   18d08:	ldr	r3, [r4]
   18d0c:	add	r2, sp, #8
   18d10:	clz	r3, r3
   18d14:	lsr	r3, r3, #5
   18d18:	add	r3, r2, r3, lsl #2
   18d1c:	ldr	r3, [r3, #-8]
   18d20:	str	r3, [r4]
   18d24:	add	sp, sp, #12
   18d28:	ldrd	r4, [sp]
   18d2c:	add	sp, sp, #8
   18d30:	pop	{pc}		; (ldr pc, [sp], #4)
   18d34:	push	{lr}		; (str lr, [sp, #-4]!)
   18d38:	sub	sp, sp, #20
   18d3c:	mov	ip, #0
   18d40:	ldr	lr, [sp, #24]
   18d44:	str	lr, [sp]
   18d48:	str	ip, [sp, #4]
   18d4c:	str	ip, [sp, #8]
   18d50:	bl	1b820 <argp_parse@@Base+0x3b84>
   18d54:	add	sp, sp, #20
   18d58:	pop	{pc}		; (ldr pc, [sp], #4)
   18d5c:	str	r4, [sp, #-8]!
   18d60:	mov	ip, #0
   18d64:	str	lr, [sp, #4]
   18d68:	sub	sp, sp, #16
   18d6c:	ldr	r4, [sp, #24]
   18d70:	str	ip, [sp, #12]
   18d74:	ldr	lr, [sp, #28]
   18d78:	stm	sp, {r4, ip, lr}
   18d7c:	bl	1b284 <argp_parse@@Base+0x35e8>
   18d80:	add	sp, sp, #16
   18d84:	ldr	r4, [sp]
   18d88:	add	sp, sp, #4
   18d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d90:	str	r4, [sp, #-8]!
   18d94:	mov	r4, #1
   18d98:	str	lr, [sp, #4]
   18d9c:	sub	sp, sp, #16
   18da0:	mov	lr, #0
   18da4:	ldr	ip, [sp, #24]
   18da8:	str	ip, [sp]
   18dac:	stmib	sp, {r4, lr}
   18db0:	bl	1b820 <argp_parse@@Base+0x3b84>
   18db4:	add	sp, sp, #16
   18db8:	ldr	r4, [sp]
   18dbc:	add	sp, sp, #4
   18dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   18dc4:	strd	r4, [sp, #-12]!
   18dc8:	mov	r4, #0
   18dcc:	mov	r5, #1
   18dd0:	str	lr, [sp, #8]
   18dd4:	sub	sp, sp, #20
   18dd8:	ldr	lr, [sp, #32]
   18ddc:	ldr	ip, [sp, #36]	; 0x24
   18de0:	str	lr, [sp]
   18de4:	str	r4, [sp, #12]
   18de8:	stmib	sp, {r5, ip}
   18dec:	bl	1b284 <argp_parse@@Base+0x35e8>
   18df0:	add	sp, sp, #20
   18df4:	ldrd	r4, [sp]
   18df8:	add	sp, sp, #8
   18dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   18e00:	strd	r4, [sp, #-16]!
   18e04:	subs	r4, r0, #0
   18e08:	str	r6, [sp, #8]
   18e0c:	str	lr, [sp, #12]
   18e10:	beq	18ea8 <argp_parse@@Base+0x120c>
   18e14:	mov	r1, #47	; 0x2f
   18e18:	bl	11338 <strrchr@plt>
   18e1c:	subs	r5, r0, #0
   18e20:	beq	18e80 <argp_parse@@Base+0x11e4>
   18e24:	add	r6, r5, #1
   18e28:	sub	r3, r6, r4
   18e2c:	cmp	r3, #6
   18e30:	ble	18e80 <argp_parse@@Base+0x11e4>
   18e34:	movw	r1, #52480	; 0xcd00
   18e38:	movt	r1, #1
   18e3c:	mov	r2, #7
   18e40:	sub	r0, r5, #6
   18e44:	bl	113e0 <strncmp@plt>
   18e48:	cmp	r0, #0
   18e4c:	bne	18e80 <argp_parse@@Base+0x11e4>
   18e50:	movw	r1, #52488	; 0xcd08
   18e54:	movt	r1, #1
   18e58:	mov	r2, #3
   18e5c:	mov	r0, r6
   18e60:	bl	113e0 <strncmp@plt>
   18e64:	cmp	r0, #0
   18e68:	movne	r4, r6
   18e6c:	bne	18e80 <argp_parse@@Base+0x11e4>
   18e70:	add	r4, r5, #4
   18e74:	movw	r3, #58320	; 0xe3d0
   18e78:	movt	r3, #2
   18e7c:	str	r4, [r3]
   18e80:	movw	r2, #58396	; 0xe41c
   18e84:	movt	r2, #2
   18e88:	ldr	r6, [sp, #8]
   18e8c:	movw	r3, #58324	; 0xe3d4
   18e90:	movt	r3, #2
   18e94:	str	r4, [r2]
   18e98:	str	r4, [r3]
   18e9c:	ldrd	r4, [sp]
   18ea0:	add	sp, sp, #12
   18ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ea8:	movw	r3, #58328	; 0xe3d8
   18eac:	movt	r3, #2
   18eb0:	movw	r0, #52424	; 0xccc8
   18eb4:	movt	r0, #1
   18eb8:	ldr	r3, [r3]
   18ebc:	mov	r2, #55	; 0x37
   18ec0:	mov	r1, #1
   18ec4:	bl	111dc <fwrite@plt>
   18ec8:	bl	113ec <abort@plt>
   18ecc:	cmp	r1, #0
   18ed0:	strd	r4, [sp, #-16]!
   18ed4:	mov	r4, r0
   18ed8:	str	r6, [sp, #8]
   18edc:	str	lr, [sp, #12]
   18ee0:	sub	sp, sp, #32
   18ee4:	ldr	r5, [sp, #48]	; 0x30
   18ee8:	ldr	r6, [sp, #52]	; 0x34
   18eec:	beq	18ff0 <argp_parse@@Base+0x1354>
   18ef0:	mov	ip, r3
   18ef4:	mov	r3, r2
   18ef8:	mov	r2, r1
   18efc:	movw	r1, #52492	; 0xcd0c
   18f00:	movt	r1, #1
   18f04:	str	ip, [sp]
   18f08:	bl	112a8 <fprintf@plt>
   18f0c:	movw	r3, #2022	; 0x7e6
   18f10:	movw	r2, #52504	; 0xcd18
   18f14:	movt	r2, #1
   18f18:	movw	r1, #53272	; 0xd018
   18f1c:	movt	r1, #1
   18f20:	mov	r0, r4
   18f24:	bl	112a8 <fprintf@plt>
   18f28:	mov	r1, r4
   18f2c:	mov	r0, #10
   18f30:	bl	11350 <fputc@plt>
   18f34:	movw	r2, #52508	; 0xcd1c
   18f38:	movt	r2, #1
   18f3c:	movw	r1, #52544	; 0xcd40
   18f40:	movt	r1, #1
   18f44:	mov	r0, r4
   18f48:	bl	112a8 <fprintf@plt>
   18f4c:	mov	r1, r4
   18f50:	mov	r0, #10
   18f54:	bl	11350 <fputc@plt>
   18f58:	cmp	r6, #9
   18f5c:	ldrls	pc, [pc, r6, lsl #2]
   18f60:	b	191bc <argp_parse@@Base+0x1520>
   18f64:	ldrdeq	r8, [r1], -ip
   18f68:	andeq	r9, r1, r0
   18f6c:	andeq	r9, r1, r8, lsr #32
   18f70:	andeq	r9, r1, r0, asr r0
   18f74:	andeq	r9, r1, r0, lsl #1
   18f78:	strheq	r9, [r1], -ip
   18f7c:	strdeq	r9, [r1], -r0
   18f80:	andeq	r9, r1, ip, lsr #2
   18f84:	andeq	r9, r1, r0, ror r1
   18f88:	andeq	r8, r1, ip, lsl #31
   18f8c:	ldr	ip, [r5, #8]
   18f90:	movw	r1, #52984	; 0xcef8
   18f94:	movt	r1, #1
   18f98:	mov	r0, r4
   18f9c:	ldr	r3, [r5, #12]
   18fa0:	ldr	r2, [r5, #32]
   18fa4:	str	ip, [sp]
   18fa8:	ldr	ip, [r5, #16]
   18fac:	str	r2, [sp, #24]
   18fb0:	ldr	r2, [r5, #28]
   18fb4:	str	r3, [sp, #4]
   18fb8:	ldr	r3, [r5, #20]
   18fbc:	str	ip, [sp, #8]
   18fc0:	ldr	ip, [r5, #24]
   18fc4:	str	r2, [sp, #20]
   18fc8:	ldr	r2, [r5]
   18fcc:	str	r3, [sp, #12]
   18fd0:	ldr	r3, [r5, #4]
   18fd4:	str	ip, [sp, #16]
   18fd8:	bl	112a8 <fprintf@plt>
   18fdc:	add	sp, sp, #32
   18fe0:	ldrd	r4, [sp]
   18fe4:	ldr	r6, [sp, #8]
   18fe8:	add	sp, sp, #12
   18fec:	pop	{pc}		; (ldr pc, [sp], #4)
   18ff0:	movw	r1, #49312	; 0xc0a0
   18ff4:	movt	r1, #1
   18ff8:	bl	112a8 <fprintf@plt>
   18ffc:	b	18f0c <argp_parse@@Base+0x1270>
   19000:	ldr	r2, [r5]
   19004:	mov	r0, r4
   19008:	movw	r1, #52716	; 0xcdec
   1900c:	movt	r1, #1
   19010:	add	sp, sp, #32
   19014:	ldrd	r4, [sp]
   19018:	ldr	r6, [sp, #8]
   1901c:	ldr	lr, [sp, #12]
   19020:	add	sp, sp, #16
   19024:	b	112a8 <fprintf@plt>
   19028:	ldrd	r2, [r5]
   1902c:	mov	r0, r4
   19030:	movw	r1, #52732	; 0xcdfc
   19034:	movt	r1, #1
   19038:	add	sp, sp, #32
   1903c:	ldrd	r4, [sp]
   19040:	ldr	r6, [sp, #8]
   19044:	ldr	lr, [sp, #12]
   19048:	add	sp, sp, #16
   1904c:	b	112a8 <fprintf@plt>
   19050:	ldrd	r2, [r5]
   19054:	mov	r0, r4
   19058:	movw	r1, #52756	; 0xce14
   1905c:	movt	r1, #1
   19060:	ldr	ip, [r5, #8]
   19064:	str	ip, [sp, #48]	; 0x30
   19068:	add	sp, sp, #32
   1906c:	ldrd	r4, [sp]
   19070:	ldr	r6, [sp, #8]
   19074:	ldr	lr, [sp, #12]
   19078:	add	sp, sp, #16
   1907c:	b	112a8 <fprintf@plt>
   19080:	ldr	r2, [r5]
   19084:	mov	r0, r4
   19088:	movw	r1, #52784	; 0xce30
   1908c:	movt	r1, #1
   19090:	ldr	r3, [r5, #8]
   19094:	ldr	ip, [r5, #12]
   19098:	str	r3, [sp, #48]	; 0x30
   1909c:	ldr	r3, [r5, #4]
   190a0:	str	ip, [sp, #52]	; 0x34
   190a4:	add	sp, sp, #32
   190a8:	ldrd	r4, [sp]
   190ac:	ldr	r6, [sp, #8]
   190b0:	ldr	lr, [sp, #12]
   190b4:	add	sp, sp, #16
   190b8:	b	112a8 <fprintf@plt>
   190bc:	ldr	r2, [r5, #8]
   190c0:	mov	r0, r4
   190c4:	movw	r1, #52816	; 0xce50
   190c8:	movt	r1, #1
   190cc:	ldr	ip, [r5, #12]
   190d0:	ldr	r3, [r5, #16]
   190d4:	str	r2, [sp]
   190d8:	ldr	r2, [r5]
   190dc:	str	r3, [sp, #8]
   190e0:	ldr	r3, [r5, #4]
   190e4:	str	ip, [sp, #4]
   190e8:	bl	112a8 <fprintf@plt>
   190ec:	b	18fdc <argp_parse@@Base+0x1340>
   190f0:	ldr	ip, [r5, #8]
   190f4:	mov	r0, r4
   190f8:	movw	r1, #52852	; 0xce74
   190fc:	movt	r1, #1
   19100:	ldr	r3, [r5, #12]
   19104:	ldr	r2, [r5, #20]
   19108:	str	ip, [sp]
   1910c:	ldr	ip, [r5, #16]
   19110:	str	r2, [sp, #12]
   19114:	ldr	r2, [r5]
   19118:	str	r3, [sp, #4]
   1911c:	ldr	r3, [r5, #4]
   19120:	str	ip, [sp, #8]
   19124:	bl	112a8 <fprintf@plt>
   19128:	b	18fdc <argp_parse@@Base+0x1340>
   1912c:	ldr	r3, [r5, #8]
   19130:	mov	r0, r4
   19134:	movw	r1, #52892	; 0xce9c
   19138:	movt	r1, #1
   1913c:	ldr	r2, [r5, #12]
   19140:	ldr	ip, [r5, #24]
   19144:	str	r3, [sp]
   19148:	ldr	r3, [r5, #16]
   1914c:	str	ip, [sp, #16]
   19150:	ldr	ip, [r5, #20]
   19154:	str	r2, [sp, #4]
   19158:	ldr	r2, [r5]
   1915c:	str	r3, [sp, #8]
   19160:	ldr	r3, [r5, #4]
   19164:	str	ip, [sp, #12]
   19168:	bl	112a8 <fprintf@plt>
   1916c:	b	18fdc <argp_parse@@Base+0x1340>
   19170:	ldr	r2, [r5, #8]
   19174:	mov	r0, r4
   19178:	movw	r1, #52936	; 0xcec8
   1917c:	movt	r1, #1
   19180:	ldr	ip, [r5, #12]
   19184:	ldr	r3, [r5, #28]
   19188:	str	r2, [sp]
   1918c:	ldr	r2, [r5, #16]
   19190:	str	r3, [sp, #20]
   19194:	ldr	r3, [r5, #24]
   19198:	str	ip, [sp, #4]
   1919c:	ldr	ip, [r5, #20]
   191a0:	str	r2, [sp, #8]
   191a4:	ldr	r2, [r5]
   191a8:	str	r3, [sp, #16]
   191ac:	ldr	r3, [r5, #4]
   191b0:	str	ip, [sp, #12]
   191b4:	bl	112a8 <fprintf@plt>
   191b8:	b	18fdc <argp_parse@@Base+0x1340>
   191bc:	movw	r1, #53036	; 0xcf2c
   191c0:	movt	r1, #1
   191c4:	ldr	ip, [r5, #8]
   191c8:	mov	r0, r4
   191cc:	b	18f9c <argp_parse@@Base+0x1300>
   191d0:	strd	r4, [sp, #-16]!
   191d4:	mov	ip, r3
   191d8:	str	r6, [sp, #8]
   191dc:	mov	r6, r0
   191e0:	str	lr, [sp, #12]
   191e4:	sub	sp, sp, #32
   191e8:	ldr	r5, [sp, #48]	; 0x30
   191ec:	ldr	r4, [r5]
   191f0:	cmp	r4, #0
   191f4:	beq	19210 <argp_parse@@Base+0x1574>
   191f8:	mov	r3, r5
   191fc:	mov	r4, #0
   19200:	ldr	r0, [r3, #4]!
   19204:	add	r4, r4, #1
   19208:	cmp	r0, #0
   1920c:	bne	19200 <argp_parse@@Base+0x1564>
   19210:	cmp	r1, #0
   19214:	beq	19318 <argp_parse@@Base+0x167c>
   19218:	mov	r3, r2
   1921c:	mov	r0, r6
   19220:	str	ip, [sp]
   19224:	mov	r2, r1
   19228:	movw	r1, #52492	; 0xcd0c
   1922c:	movt	r1, #1
   19230:	bl	112a8 <fprintf@plt>
   19234:	movw	r3, #2022	; 0x7e6
   19238:	movw	r2, #52504	; 0xcd18
   1923c:	movt	r2, #1
   19240:	movw	r1, #53272	; 0xd018
   19244:	movt	r1, #1
   19248:	mov	r0, r6
   1924c:	bl	112a8 <fprintf@plt>
   19250:	mov	r1, r6
   19254:	mov	r0, #10
   19258:	bl	11350 <fputc@plt>
   1925c:	movw	r2, #52508	; 0xcd1c
   19260:	movt	r2, #1
   19264:	movw	r1, #52544	; 0xcd40
   19268:	movt	r1, #1
   1926c:	mov	r0, r6
   19270:	bl	112a8 <fprintf@plt>
   19274:	mov	r1, r6
   19278:	mov	r0, #10
   1927c:	bl	11350 <fputc@plt>
   19280:	cmp	r4, #9
   19284:	ldrls	pc, [pc, r4, lsl #2]
   19288:	b	194dc <argp_parse@@Base+0x1840>
   1928c:	andeq	r9, r1, r4, lsl #6
   19290:	andeq	r9, r1, r0, lsr r3
   19294:	andeq	r9, r1, r8, asr r3
   19298:	andeq	r9, r1, r0, lsl #7
   1929c:			; <UNDEFINED> instruction: 0x000193b0
   192a0:	ldrdeq	r9, [r1], -ip
   192a4:	andeq	r9, r1, r0, lsl r4
   192a8:	andeq	r9, r1, ip, asr #8
   192ac:	muleq	r1, r0, r4
   192b0:			; <UNDEFINED> instruction: 0x000192b4
   192b4:	ldr	ip, [r5, #8]
   192b8:	movw	r1, #52984	; 0xcef8
   192bc:	movt	r1, #1
   192c0:	mov	r0, r6
   192c4:	ldr	r3, [r5, #12]
   192c8:	ldr	r2, [r5, #32]
   192cc:	str	ip, [sp]
   192d0:	ldr	ip, [r5, #16]
   192d4:	str	r2, [sp, #24]
   192d8:	ldr	r2, [r5, #28]
   192dc:	str	r3, [sp, #4]
   192e0:	ldr	r3, [r5, #20]
   192e4:	str	ip, [sp, #8]
   192e8:	ldr	ip, [r5, #24]
   192ec:	str	r2, [sp, #20]
   192f0:	ldr	r2, [r5]
   192f4:	str	r3, [sp, #12]
   192f8:	ldr	r3, [r5, #4]
   192fc:	str	ip, [sp, #16]
   19300:	bl	112a8 <fprintf@plt>
   19304:	add	sp, sp, #32
   19308:	ldrd	r4, [sp]
   1930c:	ldr	r6, [sp, #8]
   19310:	add	sp, sp, #12
   19314:	pop	{pc}		; (ldr pc, [sp], #4)
   19318:	mov	r3, ip
   1931c:	movw	r1, #49312	; 0xc0a0
   19320:	movt	r1, #1
   19324:	mov	r0, r6
   19328:	bl	112a8 <fprintf@plt>
   1932c:	b	19234 <argp_parse@@Base+0x1598>
   19330:	ldr	r2, [r5]
   19334:	mov	r0, r6
   19338:	movw	r1, #52716	; 0xcdec
   1933c:	movt	r1, #1
   19340:	add	sp, sp, #32
   19344:	ldrd	r4, [sp]
   19348:	ldr	r6, [sp, #8]
   1934c:	ldr	lr, [sp, #12]
   19350:	add	sp, sp, #16
   19354:	b	112a8 <fprintf@plt>
   19358:	ldrd	r2, [r5]
   1935c:	mov	r0, r6
   19360:	movw	r1, #52732	; 0xcdfc
   19364:	movt	r1, #1
   19368:	add	sp, sp, #32
   1936c:	ldrd	r4, [sp]
   19370:	ldr	r6, [sp, #8]
   19374:	ldr	lr, [sp, #12]
   19378:	add	sp, sp, #16
   1937c:	b	112a8 <fprintf@plt>
   19380:	ldrd	r2, [r5]
   19384:	mov	r0, r6
   19388:	movw	r1, #52756	; 0xce14
   1938c:	movt	r1, #1
   19390:	ldr	ip, [r5, #8]
   19394:	str	ip, [sp, #48]	; 0x30
   19398:	add	sp, sp, #32
   1939c:	ldrd	r4, [sp]
   193a0:	ldr	r6, [sp, #8]
   193a4:	ldr	lr, [sp, #12]
   193a8:	add	sp, sp, #16
   193ac:	b	112a8 <fprintf@plt>
   193b0:	mov	r0, r6
   193b4:	movw	r1, #52784	; 0xce30
   193b8:	movt	r1, #1
   193bc:	ldr	r3, [r5, #8]
   193c0:	ldr	ip, [r5, #12]
   193c4:	ldr	r2, [r5]
   193c8:	str	r3, [sp]
   193cc:	ldr	r3, [r5, #4]
   193d0:	str	ip, [sp, #4]
   193d4:	bl	112a8 <fprintf@plt>
   193d8:	b	19304 <argp_parse@@Base+0x1668>
   193dc:	ldr	r2, [r5, #8]
   193e0:	mov	r0, r6
   193e4:	movw	r1, #52816	; 0xce50
   193e8:	movt	r1, #1
   193ec:	ldr	ip, [r5, #12]
   193f0:	ldr	r3, [r5, #16]
   193f4:	str	r2, [sp]
   193f8:	ldr	r2, [r5]
   193fc:	str	r3, [sp, #8]
   19400:	ldr	r3, [r5, #4]
   19404:	str	ip, [sp, #4]
   19408:	bl	112a8 <fprintf@plt>
   1940c:	b	19304 <argp_parse@@Base+0x1668>
   19410:	ldr	ip, [r5, #8]
   19414:	mov	r0, r6
   19418:	movw	r1, #52852	; 0xce74
   1941c:	movt	r1, #1
   19420:	ldr	r3, [r5, #12]
   19424:	ldr	r2, [r5, #20]
   19428:	str	ip, [sp]
   1942c:	ldr	ip, [r5, #16]
   19430:	str	r2, [sp, #12]
   19434:	ldr	r2, [r5]
   19438:	str	r3, [sp, #4]
   1943c:	ldr	r3, [r5, #4]
   19440:	str	ip, [sp, #8]
   19444:	bl	112a8 <fprintf@plt>
   19448:	b	19304 <argp_parse@@Base+0x1668>
   1944c:	ldr	r3, [r5, #8]
   19450:	mov	r0, r6
   19454:	movw	r1, #52892	; 0xce9c
   19458:	movt	r1, #1
   1945c:	ldr	r2, [r5, #12]
   19460:	ldr	ip, [r5, #24]
   19464:	str	r3, [sp]
   19468:	ldr	r3, [r5, #16]
   1946c:	str	ip, [sp, #16]
   19470:	ldr	ip, [r5, #20]
   19474:	str	r2, [sp, #4]
   19478:	ldr	r2, [r5]
   1947c:	str	r3, [sp, #8]
   19480:	ldr	r3, [r5, #4]
   19484:	str	ip, [sp, #12]
   19488:	bl	112a8 <fprintf@plt>
   1948c:	b	19304 <argp_parse@@Base+0x1668>
   19490:	ldr	r2, [r5, #8]
   19494:	mov	r0, r6
   19498:	movw	r1, #52936	; 0xcec8
   1949c:	movt	r1, #1
   194a0:	ldr	ip, [r5, #12]
   194a4:	ldr	r3, [r5, #28]
   194a8:	str	r2, [sp]
   194ac:	ldr	r2, [r5, #16]
   194b0:	str	r3, [sp, #20]
   194b4:	ldr	r3, [r5, #24]
   194b8:	str	ip, [sp, #4]
   194bc:	ldr	ip, [r5, #20]
   194c0:	str	r2, [sp, #8]
   194c4:	ldr	r2, [r5]
   194c8:	str	r3, [sp, #16]
   194cc:	ldr	r3, [r5, #4]
   194d0:	str	ip, [sp, #12]
   194d4:	bl	112a8 <fprintf@plt>
   194d8:	b	19304 <argp_parse@@Base+0x1668>
   194dc:	movw	r1, #53036	; 0xcf2c
   194e0:	movt	r1, #1
   194e4:	ldr	ip, [r5, #8]
   194e8:	mov	r0, r6
   194ec:	b	192c4 <argp_parse@@Base+0x1628>
   194f0:	strd	r4, [sp, #-12]!
   194f4:	mov	r4, r0
   194f8:	mov	r0, r3
   194fc:	str	lr, [sp, #8]
   19500:	sub	sp, sp, #76	; 0x4c
   19504:	ldr	ip, [sp, #88]	; 0x58
   19508:	ldr	r3, [ip]
   1950c:	cmp	r3, #0
   19510:	str	r3, [sp, #32]
   19514:	beq	19834 <argp_parse@@Base+0x1b98>
   19518:	ldr	r3, [ip, #4]
   1951c:	cmp	r3, #0
   19520:	str	r3, [sp, #36]	; 0x24
   19524:	beq	1983c <argp_parse@@Base+0x1ba0>
   19528:	ldr	r3, [ip, #8]
   1952c:	cmp	r3, #0
   19530:	str	r3, [sp, #40]	; 0x28
   19534:	beq	19844 <argp_parse@@Base+0x1ba8>
   19538:	ldr	r3, [ip, #12]
   1953c:	cmp	r3, #0
   19540:	str	r3, [sp, #44]	; 0x2c
   19544:	beq	1984c <argp_parse@@Base+0x1bb0>
   19548:	ldr	r3, [ip, #16]
   1954c:	cmp	r3, #0
   19550:	str	r3, [sp, #48]	; 0x30
   19554:	beq	19854 <argp_parse@@Base+0x1bb8>
   19558:	ldr	r3, [ip, #20]
   1955c:	cmp	r3, #0
   19560:	str	r3, [sp, #52]	; 0x34
   19564:	beq	1985c <argp_parse@@Base+0x1bc0>
   19568:	ldr	r3, [ip, #24]
   1956c:	cmp	r3, #0
   19570:	str	r3, [sp, #56]	; 0x38
   19574:	beq	19864 <argp_parse@@Base+0x1bc8>
   19578:	ldr	r3, [ip, #28]
   1957c:	cmp	r3, #0
   19580:	str	r3, [sp, #60]	; 0x3c
   19584:	beq	1986c <argp_parse@@Base+0x1bd0>
   19588:	ldr	r3, [ip, #32]
   1958c:	cmp	r3, #0
   19590:	str	r3, [sp, #64]	; 0x40
   19594:	beq	19874 <argp_parse@@Base+0x1bd8>
   19598:	ldr	r3, [ip, #36]	; 0x24
   1959c:	cmp	r3, #0
   195a0:	movne	r5, #10
   195a4:	moveq	r5, #9
   195a8:	cmp	r1, #0
   195ac:	beq	196a8 <argp_parse@@Base+0x1a0c>
   195b0:	mov	r3, r2
   195b4:	mov	r2, r1
   195b8:	str	r0, [sp]
   195bc:	movw	r1, #52492	; 0xcd0c
   195c0:	movt	r1, #1
   195c4:	mov	r0, r4
   195c8:	bl	112a8 <fprintf@plt>
   195cc:	movw	r3, #2022	; 0x7e6
   195d0:	movw	r2, #52504	; 0xcd18
   195d4:	movt	r2, #1
   195d8:	movw	r1, #53272	; 0xd018
   195dc:	movt	r1, #1
   195e0:	mov	r0, r4
   195e4:	bl	112a8 <fprintf@plt>
   195e8:	mov	r1, r4
   195ec:	mov	r0, #10
   195f0:	bl	11350 <fputc@plt>
   195f4:	movw	r2, #52508	; 0xcd1c
   195f8:	movt	r2, #1
   195fc:	movw	r1, #52544	; 0xcd40
   19600:	movt	r1, #1
   19604:	mov	r0, r4
   19608:	bl	112a8 <fprintf@plt>
   1960c:	mov	r1, r4
   19610:	mov	r0, #10
   19614:	bl	11350 <fputc@plt>
   19618:	cmp	r5, #9
   1961c:	ldrls	pc, [pc, r5, lsl #2]
   19620:	b	1987c <argp_parse@@Base+0x1be0>
   19624:	muleq	r1, r8, r6
   19628:	andeq	r9, r1, r0, asr #13
   1962c:	andeq	r9, r1, r4, ror #13
   19630:	andeq	r9, r1, r8, lsl #14
   19634:	andeq	r9, r1, r4, lsr r7
   19638:	andeq	r9, r1, ip, asr r7
   1963c:	andeq	r9, r1, r4, lsl #15
   19640:			; <UNDEFINED> instruction: 0x000197bc
   19644:	strdeq	r9, [r1], -ip
   19648:	andeq	r9, r1, ip, asr #12
   1964c:	ldr	ip, [sp, #40]	; 0x28
   19650:	movw	r1, #52984	; 0xcef8
   19654:	movt	r1, #1
   19658:	mov	r0, r4
   1965c:	str	ip, [sp]
   19660:	ldr	r2, [sp, #44]	; 0x2c
   19664:	ldr	ip, [sp, #48]	; 0x30
   19668:	ldr	r3, [sp, #64]	; 0x40
   1966c:	str	r2, [sp, #4]
   19670:	ldr	r2, [sp, #52]	; 0x34
   19674:	str	ip, [sp, #8]
   19678:	ldr	ip, [sp, #56]	; 0x38
   1967c:	str	r3, [sp, #24]
   19680:	ldr	r3, [sp, #60]	; 0x3c
   19684:	str	r2, [sp, #12]
   19688:	str	ip, [sp, #16]
   1968c:	str	r3, [sp, #20]
   19690:	ldrd	r2, [sp, #32]
   19694:	bl	112a8 <fprintf@plt>
   19698:	add	sp, sp, #76	; 0x4c
   1969c:	ldrd	r4, [sp]
   196a0:	add	sp, sp, #8
   196a4:	pop	{pc}		; (ldr pc, [sp], #4)
   196a8:	mov	r3, r0
   196ac:	movw	r1, #49312	; 0xc0a0
   196b0:	movt	r1, #1
   196b4:	mov	r0, r4
   196b8:	bl	112a8 <fprintf@plt>
   196bc:	b	195cc <argp_parse@@Base+0x1930>
   196c0:	ldr	r2, [sp, #32]
   196c4:	mov	r0, r4
   196c8:	movw	r1, #52716	; 0xcdec
   196cc:	movt	r1, #1
   196d0:	add	sp, sp, #76	; 0x4c
   196d4:	ldrd	r4, [sp]
   196d8:	ldr	lr, [sp, #8]
   196dc:	add	sp, sp, #12
   196e0:	b	112a8 <fprintf@plt>
   196e4:	ldrd	r2, [sp, #32]
   196e8:	mov	r0, r4
   196ec:	movw	r1, #52732	; 0xcdfc
   196f0:	movt	r1, #1
   196f4:	add	sp, sp, #76	; 0x4c
   196f8:	ldrd	r4, [sp]
   196fc:	ldr	lr, [sp, #8]
   19700:	add	sp, sp, #12
   19704:	b	112a8 <fprintf@plt>
   19708:	ldrd	r2, [sp, #32]
   1970c:	mov	r0, r4
   19710:	movw	r1, #52756	; 0xce14
   19714:	movt	r1, #1
   19718:	ldr	ip, [sp, #40]	; 0x28
   1971c:	str	ip, [sp, #88]	; 0x58
   19720:	add	sp, sp, #76	; 0x4c
   19724:	ldrd	r4, [sp]
   19728:	ldr	lr, [sp, #8]
   1972c:	add	sp, sp, #12
   19730:	b	112a8 <fprintf@plt>
   19734:	mov	r0, r4
   19738:	movw	r1, #52784	; 0xce30
   1973c:	movt	r1, #1
   19740:	ldr	r3, [sp, #40]	; 0x28
   19744:	ldr	ip, [sp, #44]	; 0x2c
   19748:	ldr	r2, [sp, #32]
   1974c:	stm	sp, {r3, ip}
   19750:	ldr	r3, [sp, #36]	; 0x24
   19754:	bl	112a8 <fprintf@plt>
   19758:	b	19698 <argp_parse@@Base+0x19fc>
   1975c:	ldrd	r2, [sp, #40]	; 0x28
   19760:	mov	r0, r4
   19764:	movw	r1, #52816	; 0xce50
   19768:	movt	r1, #1
   1976c:	ldr	ip, [sp, #48]	; 0x30
   19770:	strd	r2, [sp]
   19774:	ldrd	r2, [sp, #32]
   19778:	str	ip, [sp, #8]
   1977c:	bl	112a8 <fprintf@plt>
   19780:	b	19698 <argp_parse@@Base+0x19fc>
   19784:	ldr	ip, [sp, #40]	; 0x28
   19788:	mov	r0, r4
   1978c:	movw	r1, #52852	; 0xce74
   19790:	movt	r1, #1
   19794:	ldr	r2, [sp, #44]	; 0x2c
   19798:	ldr	r3, [sp, #52]	; 0x34
   1979c:	str	ip, [sp]
   197a0:	ldr	ip, [sp, #48]	; 0x30
   197a4:	str	r2, [sp, #4]
   197a8:	str	ip, [sp, #8]
   197ac:	str	r3, [sp, #12]
   197b0:	ldrd	r2, [sp, #32]
   197b4:	bl	112a8 <fprintf@plt>
   197b8:	b	19698 <argp_parse@@Base+0x19fc>
   197bc:	ldr	r3, [sp, #40]	; 0x28
   197c0:	mov	r0, r4
   197c4:	movw	r1, #52892	; 0xce9c
   197c8:	movt	r1, #1
   197cc:	ldr	ip, [sp, #44]	; 0x2c
   197d0:	ldr	r2, [sp, #56]	; 0x38
   197d4:	stm	sp, {r3, ip}
   197d8:	ldr	r3, [sp, #48]	; 0x30
   197dc:	ldr	ip, [sp, #52]	; 0x34
   197e0:	str	r3, [sp, #8]
   197e4:	str	r2, [sp, #16]
   197e8:	str	ip, [sp, #12]
   197ec:	ldr	r2, [sp, #32]
   197f0:	ldr	r3, [sp, #36]	; 0x24
   197f4:	bl	112a8 <fprintf@plt>
   197f8:	b	19698 <argp_parse@@Base+0x19fc>
   197fc:	ldrd	r2, [sp, #40]	; 0x28
   19800:	mov	r0, r4
   19804:	movw	r1, #52936	; 0xcec8
   19808:	movt	r1, #1
   1980c:	ldr	ip, [sp, #60]	; 0x3c
   19810:	strd	r2, [sp]
   19814:	ldrd	r2, [sp, #48]	; 0x30
   19818:	str	ip, [sp, #20]
   1981c:	ldr	ip, [sp, #56]	; 0x38
   19820:	strd	r2, [sp, #8]
   19824:	ldrd	r2, [sp, #32]
   19828:	str	ip, [sp, #16]
   1982c:	bl	112a8 <fprintf@plt>
   19830:	b	19698 <argp_parse@@Base+0x19fc>
   19834:	mov	r5, r3
   19838:	b	195a8 <argp_parse@@Base+0x190c>
   1983c:	mov	r5, #1
   19840:	b	195a8 <argp_parse@@Base+0x190c>
   19844:	mov	r5, #2
   19848:	b	195a8 <argp_parse@@Base+0x190c>
   1984c:	mov	r5, #3
   19850:	b	195a8 <argp_parse@@Base+0x190c>
   19854:	mov	r5, #4
   19858:	b	195a8 <argp_parse@@Base+0x190c>
   1985c:	mov	r5, #5
   19860:	b	195a8 <argp_parse@@Base+0x190c>
   19864:	mov	r5, #6
   19868:	b	195a8 <argp_parse@@Base+0x190c>
   1986c:	mov	r5, #7
   19870:	b	195a8 <argp_parse@@Base+0x190c>
   19874:	mov	r5, #8
   19878:	b	195a8 <argp_parse@@Base+0x190c>
   1987c:	movw	r1, #53036	; 0xcf2c
   19880:	movt	r1, #1
   19884:	ldr	ip, [sp, #40]	; 0x28
   19888:	mov	r0, r4
   1988c:	b	1965c <argp_parse@@Base+0x19c0>
   19890:	push	{r3}		; (str r3, [sp, #-4]!)
   19894:	push	{lr}		; (str lr, [sp, #-4]!)
   19898:	sub	sp, sp, #56	; 0x38
   1989c:	ldr	ip, [sp, #64]	; 0x40
   198a0:	add	r3, sp, #64	; 0x40
   198a4:	str	r3, [sp, #12]
   198a8:	cmp	ip, #0
   198ac:	str	ip, [sp, #16]
   198b0:	beq	19948 <argp_parse@@Base+0x1cac>
   198b4:	ldr	ip, [sp, #68]	; 0x44
   198b8:	cmp	ip, #0
   198bc:	str	ip, [sp, #20]
   198c0:	beq	1996c <argp_parse@@Base+0x1cd0>
   198c4:	ldr	ip, [sp, #72]	; 0x48
   198c8:	cmp	ip, #0
   198cc:	str	ip, [sp, #24]
   198d0:	beq	19974 <argp_parse@@Base+0x1cd8>
   198d4:	ldr	ip, [sp, #76]	; 0x4c
   198d8:	cmp	ip, #0
   198dc:	str	ip, [sp, #28]
   198e0:	beq	1997c <argp_parse@@Base+0x1ce0>
   198e4:	ldr	ip, [sp, #80]	; 0x50
   198e8:	cmp	ip, #0
   198ec:	str	ip, [sp, #32]
   198f0:	beq	19984 <argp_parse@@Base+0x1ce8>
   198f4:	ldr	ip, [sp, #84]	; 0x54
   198f8:	cmp	ip, #0
   198fc:	str	ip, [sp, #36]	; 0x24
   19900:	beq	1998c <argp_parse@@Base+0x1cf0>
   19904:	ldr	ip, [sp, #88]	; 0x58
   19908:	cmp	ip, #0
   1990c:	str	ip, [sp, #40]	; 0x28
   19910:	beq	19994 <argp_parse@@Base+0x1cf8>
   19914:	ldr	ip, [sp, #92]	; 0x5c
   19918:	cmp	ip, #0
   1991c:	str	ip, [sp, #44]	; 0x2c
   19920:	beq	1999c <argp_parse@@Base+0x1d00>
   19924:	ldr	ip, [sp, #96]	; 0x60
   19928:	cmp	ip, #0
   1992c:	str	ip, [sp, #48]	; 0x30
   19930:	beq	199a4 <argp_parse@@Base+0x1d08>
   19934:	ldr	r3, [sp, #100]	; 0x64
   19938:	cmp	r3, #0
   1993c:	str	r3, [sp, #52]	; 0x34
   19940:	movne	ip, #10
   19944:	moveq	ip, #9
   19948:	ldr	r3, [sp, #60]	; 0x3c
   1994c:	add	lr, sp, #16
   19950:	str	lr, [sp]
   19954:	str	ip, [sp, #4]
   19958:	bl	18ecc <argp_parse@@Base+0x1230>
   1995c:	add	sp, sp, #56	; 0x38
   19960:	pop	{lr}		; (ldr lr, [sp], #4)
   19964:	add	sp, sp, #4
   19968:	bx	lr
   1996c:	mov	ip, #1
   19970:	b	19948 <argp_parse@@Base+0x1cac>
   19974:	mov	ip, #2
   19978:	b	19948 <argp_parse@@Base+0x1cac>
   1997c:	mov	ip, #3
   19980:	b	19948 <argp_parse@@Base+0x1cac>
   19984:	mov	ip, #4
   19988:	b	19948 <argp_parse@@Base+0x1cac>
   1998c:	mov	ip, #5
   19990:	b	19948 <argp_parse@@Base+0x1cac>
   19994:	mov	ip, #6
   19998:	b	19948 <argp_parse@@Base+0x1cac>
   1999c:	mov	ip, #7
   199a0:	b	19948 <argp_parse@@Base+0x1cac>
   199a4:	mov	ip, #8
   199a8:	b	19948 <argp_parse@@Base+0x1cac>
   199ac:	movw	r3, #58332	; 0xe3dc
   199b0:	movt	r3, #2
   199b4:	str	r4, [sp, #-8]!
   199b8:	mov	r0, #10
   199bc:	ldr	r1, [r3]
   199c0:	str	lr, [sp, #4]
   199c4:	bl	11350 <fputc@plt>
   199c8:	movw	r1, #53096	; 0xcf68
   199cc:	movt	r1, #1
   199d0:	movw	r0, #53120	; 0xcf80
   199d4:	movt	r0, #1
   199d8:	bl	110f8 <printf@plt>
   199dc:	movw	r2, #53140	; 0xcf94
   199e0:	movt	r2, #1
   199e4:	movw	r1, #52408	; 0xccb8
   199e8:	movt	r1, #1
   199ec:	movw	r0, #53180	; 0xcfbc
   199f0:	movt	r0, #1
   199f4:	bl	110f8 <printf@plt>
   199f8:	movw	r1, #53200	; 0xcfd0
   199fc:	movt	r1, #1
   19a00:	ldr	r4, [sp]
   19a04:	movw	r0, #53232	; 0xcff0
   19a08:	movt	r0, #1
   19a0c:	ldr	lr, [sp, #4]
   19a10:	add	sp, sp, #8
   19a14:	b	110f8 <printf@plt>
   19a18:	strd	r4, [sp, #-16]!
   19a1c:	mov	r4, r0
   19a20:	mov	r5, r2
   19a24:	str	r6, [sp, #8]
   19a28:	mov	r6, r1
   19a2c:	str	lr, [sp, #12]
   19a30:	bl	1bd0c <argp_parse@@Base+0x4070>
   19a34:	cmp	r0, #0
   19a38:	beq	19a4c <argp_parse@@Base+0x1db0>
   19a3c:	ldrd	r4, [sp]
   19a40:	ldr	r6, [sp, #8]
   19a44:	add	sp, sp, #12
   19a48:	pop	{pc}		; (ldr pc, [sp], #4)
   19a4c:	cmp	r4, #0
   19a50:	beq	19a60 <argp_parse@@Base+0x1dc4>
   19a54:	cmp	r6, #0
   19a58:	cmpne	r5, #0
   19a5c:	beq	19a3c <argp_parse@@Base+0x1da0>
   19a60:	bl	1a01c <argp_parse@@Base+0x2380>
   19a64:	str	r4, [sp, #-8]!
   19a68:	str	lr, [sp, #4]
   19a6c:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19a70:	cmp	r0, #0
   19a74:	beq	19a84 <argp_parse@@Base+0x1de8>
   19a78:	ldr	r4, [sp]
   19a7c:	add	sp, sp, #4
   19a80:	pop	{pc}		; (ldr pc, [sp], #4)
   19a84:	bl	1a01c <argp_parse@@Base+0x2380>
   19a88:	str	r4, [sp, #-8]!
   19a8c:	str	lr, [sp, #4]
   19a90:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19a94:	cmp	r0, #0
   19a98:	beq	19aa8 <argp_parse@@Base+0x1e0c>
   19a9c:	ldr	r4, [sp]
   19aa0:	add	sp, sp, #4
   19aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   19aa8:	bl	1a01c <argp_parse@@Base+0x2380>
   19aac:	str	r4, [sp, #-8]!
   19ab0:	str	lr, [sp, #4]
   19ab4:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19ab8:	cmp	r0, #0
   19abc:	beq	19acc <argp_parse@@Base+0x1e30>
   19ac0:	ldr	r4, [sp]
   19ac4:	add	sp, sp, #4
   19ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   19acc:	bl	1a01c <argp_parse@@Base+0x2380>
   19ad0:	strd	r4, [sp, #-16]!
   19ad4:	mov	r5, r0
   19ad8:	mov	r4, r1
   19adc:	str	r6, [sp, #8]
   19ae0:	str	lr, [sp, #12]
   19ae4:	bl	1a0fc <argp_parse@@Base+0x2460>
   19ae8:	cmp	r0, #0
   19aec:	beq	19b00 <argp_parse@@Base+0x1e64>
   19af0:	ldrd	r4, [sp]
   19af4:	ldr	r6, [sp, #8]
   19af8:	add	sp, sp, #12
   19afc:	pop	{pc}		; (ldr pc, [sp], #4)
   19b00:	adds	r4, r4, #0
   19b04:	movne	r4, #1
   19b08:	cmp	r5, #0
   19b0c:	moveq	r4, #1
   19b10:	cmp	r4, #0
   19b14:	beq	19af0 <argp_parse@@Base+0x1e54>
   19b18:	bl	1a01c <argp_parse@@Base+0x2380>
   19b1c:	cmp	r1, #0
   19b20:	orreq	r1, r1, #1
   19b24:	str	r4, [sp, #-8]!
   19b28:	str	lr, [sp, #4]
   19b2c:	bl	1a0fc <argp_parse@@Base+0x2460>
   19b30:	cmp	r0, #0
   19b34:	beq	19b44 <argp_parse@@Base+0x1ea8>
   19b38:	ldr	r4, [sp]
   19b3c:	add	sp, sp, #4
   19b40:	pop	{pc}		; (ldr pc, [sp], #4)
   19b44:	bl	1a01c <argp_parse@@Base+0x2380>
   19b48:	strd	r4, [sp, #-16]!
   19b4c:	mov	r4, r0
   19b50:	mov	r5, r2
   19b54:	str	r6, [sp, #8]
   19b58:	mov	r6, r1
   19b5c:	str	lr, [sp, #12]
   19b60:	bl	1bd0c <argp_parse@@Base+0x4070>
   19b64:	cmp	r0, #0
   19b68:	beq	19b7c <argp_parse@@Base+0x1ee0>
   19b6c:	ldrd	r4, [sp]
   19b70:	ldr	r6, [sp, #8]
   19b74:	add	sp, sp, #12
   19b78:	pop	{pc}		; (ldr pc, [sp], #4)
   19b7c:	cmp	r4, #0
   19b80:	beq	19b90 <argp_parse@@Base+0x1ef4>
   19b84:	cmp	r6, #0
   19b88:	cmpne	r5, #0
   19b8c:	beq	19b6c <argp_parse@@Base+0x1ed0>
   19b90:	bl	1a01c <argp_parse@@Base+0x2380>
   19b94:	cmp	r2, #0
   19b98:	cmpne	r1, #0
   19b9c:	str	r4, [sp, #-8]!
   19ba0:	moveq	r2, #1
   19ba4:	str	lr, [sp, #4]
   19ba8:	moveq	r1, r2
   19bac:	bl	1bd0c <argp_parse@@Base+0x4070>
   19bb0:	cmp	r0, #0
   19bb4:	beq	19bc4 <argp_parse@@Base+0x1f28>
   19bb8:	ldr	r4, [sp]
   19bbc:	add	sp, sp, #4
   19bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   19bc4:	bl	1a01c <argp_parse@@Base+0x2380>
   19bc8:	mov	r2, r1
   19bcc:	mov	r1, r0
   19bd0:	str	r4, [sp, #-8]!
   19bd4:	mov	r0, #0
   19bd8:	str	lr, [sp, #4]
   19bdc:	bl	1bd0c <argp_parse@@Base+0x4070>
   19be0:	cmp	r0, #0
   19be4:	beq	19bf4 <argp_parse@@Base+0x1f58>
   19be8:	ldr	r4, [sp]
   19bec:	add	sp, sp, #4
   19bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   19bf4:	bl	1a01c <argp_parse@@Base+0x2380>
   19bf8:	cmp	r1, #0
   19bfc:	cmpne	r0, #0
   19c00:	str	r4, [sp, #-8]!
   19c04:	moveq	r2, #1
   19c08:	movne	r2, r1
   19c0c:	str	lr, [sp, #4]
   19c10:	movne	r1, r0
   19c14:	moveq	r1, r2
   19c18:	mov	r0, #0
   19c1c:	bl	1bd0c <argp_parse@@Base+0x4070>
   19c20:	cmp	r0, #0
   19c24:	beq	19c34 <argp_parse@@Base+0x1f98>
   19c28:	ldr	r4, [sp]
   19c2c:	add	sp, sp, #4
   19c30:	pop	{pc}		; (ldr pc, [sp], #4)
   19c34:	bl	1a01c <argp_parse@@Base+0x2380>
   19c38:	cmp	r0, #0
   19c3c:	strd	r4, [sp, #-16]!
   19c40:	mov	r5, r1
   19c44:	ldr	r4, [r1]
   19c48:	str	r6, [sp, #8]
   19c4c:	str	lr, [sp, #12]
   19c50:	beq	19c98 <argp_parse@@Base+0x1ffc>
   19c54:	lsr	r3, r4, #1
   19c58:	add	r3, r3, #1
   19c5c:	adds	r4, r4, r3
   19c60:	bcs	19c94 <argp_parse@@Base+0x1ff8>
   19c64:	mov	r2, #1
   19c68:	mov	r1, r4
   19c6c:	bl	1bd0c <argp_parse@@Base+0x4070>
   19c70:	cmp	r0, #0
   19c74:	beq	19c8c <argp_parse@@Base+0x1ff0>
   19c78:	ldr	r6, [sp, #8]
   19c7c:	str	r4, [r5]
   19c80:	ldrd	r4, [sp]
   19c84:	add	sp, sp, #12
   19c88:	pop	{pc}		; (ldr pc, [sp], #4)
   19c8c:	cmp	r4, #0
   19c90:	beq	19c78 <argp_parse@@Base+0x1fdc>
   19c94:	bl	1a01c <argp_parse@@Base+0x2380>
   19c98:	cmp	r4, #0
   19c9c:	mov	r2, #1
   19ca0:	moveq	r4, #64	; 0x40
   19ca4:	mov	r1, r4
   19ca8:	bl	1bd0c <argp_parse@@Base+0x4070>
   19cac:	cmp	r0, #0
   19cb0:	bne	19c78 <argp_parse@@Base+0x1fdc>
   19cb4:	b	19c94 <argp_parse@@Base+0x1ff8>
   19cb8:	cmp	r0, #0
   19cbc:	strd	r4, [sp, #-16]!
   19cc0:	mov	r5, r1
   19cc4:	ldr	r4, [r1]
   19cc8:	str	r6, [sp, #8]
   19ccc:	mov	r6, r2
   19cd0:	str	lr, [sp, #12]
   19cd4:	beq	19d1c <argp_parse@@Base+0x2080>
   19cd8:	lsr	r3, r4, #1
   19cdc:	add	r3, r3, #1
   19ce0:	adds	r4, r4, r3
   19ce4:	bcs	19d18 <argp_parse@@Base+0x207c>
   19ce8:	mov	r1, r4
   19cec:	bl	1bd0c <argp_parse@@Base+0x4070>
   19cf0:	cmp	r0, #0
   19cf4:	beq	19d0c <argp_parse@@Base+0x2070>
   19cf8:	ldr	r6, [sp, #8]
   19cfc:	str	r4, [r5]
   19d00:	ldrd	r4, [sp]
   19d04:	add	sp, sp, #12
   19d08:	pop	{pc}		; (ldr pc, [sp], #4)
   19d0c:	cmp	r4, #0
   19d10:	cmpne	r6, #0
   19d14:	beq	19cf8 <argp_parse@@Base+0x205c>
   19d18:	bl	1a01c <argp_parse@@Base+0x2380>
   19d1c:	cmp	r4, #0
   19d20:	bne	19d34 <argp_parse@@Base+0x2098>
   19d24:	mov	r4, #64	; 0x40
   19d28:	udiv	r4, r4, r2
   19d2c:	cmp	r2, #64	; 0x40
   19d30:	addhi	r4, r4, #1
   19d34:	mov	r2, r6
   19d38:	mov	r1, r4
   19d3c:	mov	r0, #0
   19d40:	bl	1bd0c <argp_parse@@Base+0x4070>
   19d44:	cmp	r0, #0
   19d48:	bne	19cf8 <argp_parse@@Base+0x205c>
   19d4c:	b	19d18 <argp_parse@@Base+0x207c>
   19d50:	ldr	ip, [r1]
   19d54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19d58:	strd	r6, [sp, #8]
   19d5c:	mov	r7, r1
   19d60:	mov	r6, r0
   19d64:	str	r8, [sp, #16]
   19d68:	mvn	r8, r3
   19d6c:	lsr	r8, r8, #31
   19d70:	str	lr, [sp, #20]
   19d74:	asr	r1, ip, #1
   19d78:	ldr	lr, [sp, #24]
   19d7c:	adds	r4, ip, r1
   19d80:	mvnvs	r4, #-2147483648	; 0x80000000
   19d84:	cmp	r3, r4
   19d88:	movge	r1, #0
   19d8c:	andlt	r1, r8, #1
   19d90:	cmp	r1, #0
   19d94:	movne	r4, r3
   19d98:	smull	r0, r1, r4, lr
   19d9c:	cmp	r1, r0, asr #31
   19da0:	bne	19e50 <argp_parse@@Base+0x21b4>
   19da4:	cmp	r0, #63	; 0x3f
   19da8:	mov	r5, r0
   19dac:	ble	19e1c <argp_parse@@Base+0x2180>
   19db0:	cmp	r6, #0
   19db4:	sub	r1, r4, ip
   19db8:	streq	r6, [r7]
   19dbc:	cmp	r1, r2
   19dc0:	bge	19df0 <argp_parse@@Base+0x2154>
   19dc4:	adds	r4, ip, r2
   19dc8:	bvs	19e4c <argp_parse@@Base+0x21b0>
   19dcc:	cmp	r4, r3
   19dd0:	movle	r3, #0
   19dd4:	andgt	r3, r8, #1
   19dd8:	cmp	r3, #0
   19ddc:	bne	19e4c <argp_parse@@Base+0x21b0>
   19de0:	smull	r0, r1, r4, lr
   19de4:	cmp	r1, r0, asr #31
   19de8:	mov	r5, r0
   19dec:	bne	19e4c <argp_parse@@Base+0x21b0>
   19df0:	mov	r1, r5
   19df4:	mov	r0, r6
   19df8:	bl	1a0fc <argp_parse@@Base+0x2460>
   19dfc:	cmp	r0, #0
   19e00:	beq	19e30 <argp_parse@@Base+0x2194>
   19e04:	ldr	r8, [sp, #16]
   19e08:	str	r4, [r7]
   19e0c:	ldrd	r4, [sp]
   19e10:	ldrd	r6, [sp, #8]
   19e14:	add	sp, sp, #20
   19e18:	pop	{pc}		; (ldr pc, [sp], #4)
   19e1c:	mov	r0, #64	; 0x40
   19e20:	sdiv	r4, r0, lr
   19e24:	mls	r5, lr, r4, r0
   19e28:	sub	r5, r0, r5
   19e2c:	b	19db0 <argp_parse@@Base+0x2114>
   19e30:	adds	r5, r5, #0
   19e34:	movne	r5, #1
   19e38:	cmp	r6, #0
   19e3c:	movne	r6, r5
   19e40:	moveq	r6, #1
   19e44:	cmp	r6, #0
   19e48:	beq	19e04 <argp_parse@@Base+0x2168>
   19e4c:	bl	1a01c <argp_parse@@Base+0x2380>
   19e50:	mvn	r0, #-2147483648	; 0x80000000
   19e54:	b	19e20 <argp_parse@@Base+0x2184>
   19e58:	mov	r1, #1
   19e5c:	str	r4, [sp, #-8]!
   19e60:	str	lr, [sp, #4]
   19e64:	bl	1a04c <argp_parse@@Base+0x23b0>
   19e68:	cmp	r0, #0
   19e6c:	beq	19e7c <argp_parse@@Base+0x21e0>
   19e70:	ldr	r4, [sp]
   19e74:	add	sp, sp, #4
   19e78:	pop	{pc}		; (ldr pc, [sp], #4)
   19e7c:	bl	1a01c <argp_parse@@Base+0x2380>
   19e80:	mov	r1, #1
   19e84:	str	r4, [sp, #-8]!
   19e88:	str	lr, [sp, #4]
   19e8c:	bl	1a04c <argp_parse@@Base+0x23b0>
   19e90:	cmp	r0, #0
   19e94:	beq	19ea4 <argp_parse@@Base+0x2208>
   19e98:	ldr	r4, [sp]
   19e9c:	add	sp, sp, #4
   19ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   19ea4:	bl	1a01c <argp_parse@@Base+0x2380>
   19ea8:	str	r4, [sp, #-8]!
   19eac:	str	lr, [sp, #4]
   19eb0:	bl	1a04c <argp_parse@@Base+0x23b0>
   19eb4:	cmp	r0, #0
   19eb8:	beq	19ec8 <argp_parse@@Base+0x222c>
   19ebc:	ldr	r4, [sp]
   19ec0:	add	sp, sp, #4
   19ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   19ec8:	bl	1a01c <argp_parse@@Base+0x2380>
   19ecc:	str	r4, [sp, #-8]!
   19ed0:	str	lr, [sp, #4]
   19ed4:	bl	1a04c <argp_parse@@Base+0x23b0>
   19ed8:	cmp	r0, #0
   19edc:	beq	19eec <argp_parse@@Base+0x2250>
   19ee0:	ldr	r4, [sp]
   19ee4:	add	sp, sp, #4
   19ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   19eec:	bl	1a01c <argp_parse@@Base+0x2380>
   19ef0:	strd	r4, [sp, #-16]!
   19ef4:	mov	r4, r1
   19ef8:	str	r6, [sp, #8]
   19efc:	mov	r6, r0
   19f00:	mov	r0, r1
   19f04:	str	lr, [sp, #12]
   19f08:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19f0c:	subs	r5, r0, #0
   19f10:	beq	19f34 <argp_parse@@Base+0x2298>
   19f14:	mov	r2, r4
   19f18:	mov	r1, r6
   19f1c:	bl	11158 <memcpy@plt>
   19f20:	mov	r0, r5
   19f24:	ldrd	r4, [sp]
   19f28:	ldr	r6, [sp, #8]
   19f2c:	add	sp, sp, #12
   19f30:	pop	{pc}		; (ldr pc, [sp], #4)
   19f34:	bl	1a01c <argp_parse@@Base+0x2380>
   19f38:	strd	r4, [sp, #-16]!
   19f3c:	mov	r4, r1
   19f40:	str	r6, [sp, #8]
   19f44:	mov	r6, r0
   19f48:	mov	r0, r1
   19f4c:	str	lr, [sp, #12]
   19f50:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19f54:	subs	r5, r0, #0
   19f58:	beq	19f7c <argp_parse@@Base+0x22e0>
   19f5c:	mov	r2, r4
   19f60:	mov	r1, r6
   19f64:	bl	11158 <memcpy@plt>
   19f68:	mov	r0, r5
   19f6c:	ldrd	r4, [sp]
   19f70:	ldr	r6, [sp, #8]
   19f74:	add	sp, sp, #12
   19f78:	pop	{pc}		; (ldr pc, [sp], #4)
   19f7c:	bl	1a01c <argp_parse@@Base+0x2380>
   19f80:	strd	r4, [sp, #-16]!
   19f84:	mov	r4, r1
   19f88:	str	r6, [sp, #8]
   19f8c:	mov	r6, r0
   19f90:	add	r0, r1, #1
   19f94:	str	lr, [sp, #12]
   19f98:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19f9c:	subs	r5, r0, #0
   19fa0:	beq	19fcc <argp_parse@@Base+0x2330>
   19fa4:	mov	r3, #0
   19fa8:	mov	r1, r6
   19fac:	mov	r2, r4
   19fb0:	strb	r3, [r5, r4]
   19fb4:	bl	11158 <memcpy@plt>
   19fb8:	mov	r0, r5
   19fbc:	ldrd	r4, [sp]
   19fc0:	ldr	r6, [sp, #8]
   19fc4:	add	sp, sp, #12
   19fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   19fcc:	bl	1a01c <argp_parse@@Base+0x2380>
   19fd0:	strd	r4, [sp, #-16]!
   19fd4:	str	r6, [sp, #8]
   19fd8:	mov	r6, r0
   19fdc:	str	lr, [sp, #12]
   19fe0:	bl	11290 <strlen@plt>
   19fe4:	add	r4, r0, #1
   19fe8:	mov	r0, r4
   19fec:	bl	1a0c0 <argp_parse@@Base+0x2424>
   19ff0:	subs	r5, r0, #0
   19ff4:	beq	1a018 <argp_parse@@Base+0x237c>
   19ff8:	mov	r2, r4
   19ffc:	mov	r1, r6
   1a000:	bl	11158 <memcpy@plt>
   1a004:	mov	r0, r5
   1a008:	ldrd	r4, [sp]
   1a00c:	ldr	r6, [sp, #8]
   1a010:	add	sp, sp, #12
   1a014:	pop	{pc}		; (ldr pc, [sp], #4)
   1a018:	bl	1a01c <argp_parse@@Base+0x2380>
   1a01c:	movw	r3, #58300	; 0xe3bc
   1a020:	movt	r3, #2
   1a024:	str	r4, [sp, #-8]!
   1a028:	movw	r2, #48748	; 0xbe6c
   1a02c:	movt	r2, #1
   1a030:	ldr	r0, [r3]
   1a034:	mov	r1, #0
   1a038:	movw	r3, #53320	; 0xd048
   1a03c:	movt	r3, #1
   1a040:	str	lr, [sp, #4]
   1a044:	bl	111f4 <error@plt>
   1a048:	bl	113ec <abort@plt>
   1a04c:	cmp	r1, #0
   1a050:	cmpne	r0, #0
   1a054:	beq	1a0a0 <argp_parse@@Base+0x2404>
   1a058:	strd	r4, [sp, #-16]!
   1a05c:	umull	r4, r5, r0, r1
   1a060:	str	r6, [sp, #8]
   1a064:	str	lr, [sp, #12]
   1a068:	adds	r3, r5, #0
   1a06c:	movne	r3, #1
   1a070:	cmp	r4, #0
   1a074:	blt	1a080 <argp_parse@@Base+0x23e4>
   1a078:	cmp	r3, #0
   1a07c:	beq	1a0ac <argp_parse@@Base+0x2410>
   1a080:	bl	112b4 <__errno_location@plt>
   1a084:	mov	r3, #12
   1a088:	ldrd	r4, [sp]
   1a08c:	ldr	r6, [sp, #8]
   1a090:	add	sp, sp, #12
   1a094:	str	r3, [r0]
   1a098:	mov	r0, #0
   1a09c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0a0:	mov	r1, #1
   1a0a4:	mov	r0, r1
   1a0a8:	b	110b0 <calloc@plt>
   1a0ac:	ldrd	r4, [sp]
   1a0b0:	ldr	r6, [sp, #8]
   1a0b4:	ldr	lr, [sp, #12]
   1a0b8:	add	sp, sp, #16
   1a0bc:	b	110b0 <calloc@plt>
   1a0c0:	cmp	r0, #0
   1a0c4:	beq	1a0d0 <argp_parse@@Base+0x2434>
   1a0c8:	blt	1a0d8 <argp_parse@@Base+0x243c>
   1a0cc:	b	11218 <malloc@plt>
   1a0d0:	mov	r0, #1
   1a0d4:	b	11218 <malloc@plt>
   1a0d8:	str	r4, [sp, #-8]!
   1a0dc:	str	lr, [sp, #4]
   1a0e0:	bl	112b4 <__errno_location@plt>
   1a0e4:	mov	r3, #12
   1a0e8:	ldr	r4, [sp]
   1a0ec:	add	sp, sp, #4
   1a0f0:	str	r3, [r0]
   1a0f4:	mov	r0, #0
   1a0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0fc:	cmp	r0, #0
   1a100:	beq	1a128 <argp_parse@@Base+0x248c>
   1a104:	cmp	r1, #0
   1a108:	str	r4, [sp, #-8]!
   1a10c:	str	lr, [sp, #4]
   1a110:	beq	1a130 <argp_parse@@Base+0x2494>
   1a114:	blt	1a144 <argp_parse@@Base+0x24a8>
   1a118:	ldr	r4, [sp]
   1a11c:	ldr	lr, [sp, #4]
   1a120:	add	sp, sp, #8
   1a124:	b	111b8 <realloc@plt>
   1a128:	mov	r0, r1
   1a12c:	b	1a0c0 <argp_parse@@Base+0x2424>
   1a130:	bl	18cd4 <argp_parse@@Base+0x1038>
   1a134:	ldr	r4, [sp]
   1a138:	add	sp, sp, #4
   1a13c:	mov	r0, #0
   1a140:	pop	{pc}		; (ldr pc, [sp], #4)
   1a144:	bl	112b4 <__errno_location@plt>
   1a148:	mov	r3, #12
   1a14c:	str	r3, [r0]
   1a150:	b	1a134 <argp_parse@@Base+0x2498>
   1a154:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a158:	mov	r5, r3
   1a15c:	strd	r6, [sp, #8]
   1a160:	mov	r7, r1
   1a164:	mov	r6, r2
   1a168:	str	r8, [sp, #16]
   1a16c:	mov	r8, r0
   1a170:	mov	r0, #36	; 0x24
   1a174:	str	lr, [sp, #20]
   1a178:	bl	1a0c0 <argp_parse@@Base+0x2424>
   1a17c:	subs	r4, r0, #0
   1a180:	beq	1a1c4 <argp_parse@@Base+0x2528>
   1a184:	mov	r3, #0
   1a188:	mov	r0, #200	; 0xc8
   1a18c:	str	r8, [r4]
   1a190:	str	r7, [r4, #4]
   1a194:	str	r6, [r4, #8]
   1a198:	str	r5, [r4, #12]
   1a19c:	str	r3, [r4, #16]
   1a1a0:	str	r3, [r4, #20]
   1a1a4:	bl	1a0c0 <argp_parse@@Base+0x2424>
   1a1a8:	cmp	r0, #0
   1a1ac:	mov	r3, r0
   1a1b0:	str	r0, [r4, #24]
   1a1b4:	addne	r2, r0, #200	; 0xc8
   1a1b8:	strne	r0, [r4, #28]
   1a1bc:	strne	r2, [r4, #32]
   1a1c0:	beq	1a1dc <argp_parse@@Base+0x2540>
   1a1c4:	mov	r0, r4
   1a1c8:	ldrd	r4, [sp]
   1a1cc:	ldrd	r6, [sp, #8]
   1a1d0:	ldr	r8, [sp, #16]
   1a1d4:	add	sp, sp, #20
   1a1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1dc:	mov	r0, r4
   1a1e0:	mov	r4, r3
   1a1e4:	bl	18cd4 <argp_parse@@Base+0x1038>
   1a1e8:	b	1a1c4 <argp_parse@@Base+0x2528>
   1a1ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a1f0:	mov	r5, r0
   1a1f4:	ldr	r4, [r0, #16]
   1a1f8:	ldr	r3, [r0, #24]
   1a1fc:	strd	r6, [sp, #8]
   1a200:	strd	r8, [sp, #16]
   1a204:	ldr	r8, [r0, #28]
   1a208:	strd	sl, [sp, #24]
   1a20c:	add	r4, r3, r4
   1a210:	str	lr, [sp, #32]
   1a214:	sub	sp, sp, #12
   1a218:	cmp	r4, r8
   1a21c:	bcc	1a298 <argp_parse@@Base+0x25fc>
   1a220:	b	1a4f4 <argp_parse@@Base+0x2858>
   1a224:	sub	r2, fp, r4
   1a228:	add	r2, r2, r6
   1a22c:	cmp	r2, r3
   1a230:	blt	1a534 <argp_parse@@Base+0x2898>
   1a234:	ldr	sl, [r5, #12]
   1a238:	sub	r7, r3, #1
   1a23c:	str	r3, [sp, #4]
   1a240:	cmp	sl, #0
   1a244:	bge	1a354 <argp_parse@@Base+0x26b8>
   1a248:	cmp	r8, fp
   1a24c:	bls	1a6cc <argp_parse@@Base+0x2a30>
   1a250:	sub	r0, r7, r6
   1a254:	sub	r2, r8, fp
   1a258:	add	r0, r4, r0
   1a25c:	mov	r1, fp
   1a260:	bl	1111c <memmove@plt>
   1a264:	ldr	r2, [r5, #20]
   1a268:	mov	r3, #0
   1a26c:	str	r3, [r5, #20]
   1a270:	ldr	r3, [sp, #4]
   1a274:	ldr	r8, [r5, #28]
   1a278:	sub	r7, r7, r2
   1a27c:	add	r7, r4, r7
   1a280:	sub	fp, r7, fp
   1a284:	add	r4, r4, r3
   1a288:	sub	r8, r8, fp
   1a28c:	str	r8, [r5, #28]
   1a290:	cmp	r4, r8
   1a294:	bcs	1a4f0 <argp_parse@@Base+0x2854>
   1a298:	ldr	r6, [r5, #20]
   1a29c:	cmp	r6, #0
   1a2a0:	bne	1a300 <argp_parse@@Base+0x2664>
   1a2a4:	ldr	r7, [r5, #4]
   1a2a8:	cmp	r7, #0
   1a2ac:	beq	1a518 <argp_parse@@Base+0x287c>
   1a2b0:	ldr	r2, [r5, #32]
   1a2b4:	add	r3, r8, r7
   1a2b8:	cmp	r2, r3
   1a2bc:	bls	1a640 <argp_parse@@Base+0x29a4>
   1a2c0:	add	r6, r4, r7
   1a2c4:	sub	r2, r8, r4
   1a2c8:	mov	r1, r4
   1a2cc:	mov	r0, r6
   1a2d0:	bl	1111c <memmove@plt>
   1a2d4:	ldr	r3, [r5, #28]
   1a2d8:	mov	r0, r4
   1a2dc:	mov	r2, r7
   1a2e0:	mov	r1, #32
   1a2e4:	mov	r4, r6
   1a2e8:	add	r3, r3, r7
   1a2ec:	str	r3, [r5, #28]
   1a2f0:	bl	112e4 <memset@plt>
   1a2f4:	ldr	r8, [r5, #28]
   1a2f8:	mov	r6, r7
   1a2fc:	str	r7, [r5, #20]
   1a300:	sub	r9, r8, r4
   1a304:	mov	r1, #10
   1a308:	mov	r2, r9
   1a30c:	mov	r0, r4
   1a310:	bl	112fc <memchr@plt>
   1a314:	cmp	r6, #0
   1a318:	mov	fp, r0
   1a31c:	bge	1a328 <argp_parse@@Base+0x268c>
   1a320:	mov	r6, #0
   1a324:	str	r6, [r5, #20]
   1a328:	cmp	fp, #0
   1a32c:	ldr	r3, [r5, #8]
   1a330:	bne	1a224 <argp_parse@@Base+0x2588>
   1a334:	add	r1, r6, r9
   1a338:	cmp	r1, r3
   1a33c:	bcc	1a73c <argp_parse@@Base+0x2aa0>
   1a340:	ldr	sl, [r5, #12]
   1a344:	sub	r7, r3, #1
   1a348:	cmp	sl, #0
   1a34c:	blt	1a6d0 <argp_parse@@Base+0x2a34>
   1a350:	mov	fp, r8
   1a354:	add	r7, r7, #1
   1a358:	sub	r6, r7, r6
   1a35c:	adds	r6, r4, r6
   1a360:	bcs	1a578 <argp_parse@@Base+0x28dc>
   1a364:	bl	11260 <__ctype_b_loc@plt>
   1a368:	mov	r3, r6
   1a36c:	ldr	ip, [r0]
   1a370:	b	1a380 <argp_parse@@Base+0x26e4>
   1a374:	cmp	r4, r0
   1a378:	mov	r3, r0
   1a37c:	bhi	1a57c <argp_parse@@Base+0x28e0>
   1a380:	ldrb	r1, [r3]
   1a384:	mov	r7, r3
   1a388:	sub	r0, r3, #1
   1a38c:	lsl	r1, r1, #1
   1a390:	ldrh	r1, [ip, r1]
   1a394:	tst	r1, #1
   1a398:	beq	1a374 <argp_parse@@Base+0x26d8>
   1a39c:	add	r0, r3, #1
   1a3a0:	cmp	r4, r0
   1a3a4:	bcs	1a58c <argp_parse@@Base+0x28f0>
   1a3a8:	cmp	r4, r3
   1a3ac:	movhi	r6, r0
   1a3b0:	movhi	r7, r6
   1a3b4:	bls	1a3d0 <argp_parse@@Base+0x2734>
   1a3b8:	b	1a3e4 <argp_parse@@Base+0x2748>
   1a3bc:	ldrb	r1, [r6, #-1]
   1a3c0:	lsl	r1, r1, #1
   1a3c4:	ldrh	r1, [ip, r1]
   1a3c8:	tst	r1, #1
   1a3cc:	beq	1a3e0 <argp_parse@@Base+0x2744>
   1a3d0:	cmp	r4, r3
   1a3d4:	mov	r6, r3
   1a3d8:	sub	r3, r3, #1
   1a3dc:	bne	1a3bc <argp_parse@@Base+0x2720>
   1a3e0:	mov	r7, r0
   1a3e4:	add	r3, r9, #1
   1a3e8:	add	r3, r4, r3
   1a3ec:	cmp	r7, r3
   1a3f0:	beq	1a548 <argp_parse@@Base+0x28ac>
   1a3f4:	add	r1, r6, #1
   1a3f8:	sub	r3, r7, r1
   1a3fc:	cmp	r3, sl
   1a400:	bge	1a560 <argp_parse@@Base+0x28c4>
   1a404:	cmp	r7, r8
   1a408:	bcs	1a558 <argp_parse@@Base+0x28bc>
   1a40c:	ldr	r3, [r5, #32]
   1a410:	add	sl, sl, #1
   1a414:	sub	r3, r3, r8
   1a418:	cmp	r3, sl
   1a41c:	bgt	1a6e8 <argp_parse@@Base+0x2a4c>
   1a420:	ldr	r3, [r5]
   1a424:	ldr	r0, [r5, #24]
   1a428:	cmp	r0, r6
   1a42c:	bcs	1a440 <argp_parse@@Base+0x27a4>
   1a430:	sub	r2, r6, r0
   1a434:	mov	r1, #1
   1a438:	bl	11170 <fwrite_unlocked@plt>
   1a43c:	ldr	r3, [r5]
   1a440:	ldr	r2, [r3, #20]
   1a444:	ldr	r1, [r3, #24]
   1a448:	cmp	r2, r1
   1a44c:	addcc	r1, r2, #1
   1a450:	strcc	r1, [r3, #20]
   1a454:	movcc	r3, #10
   1a458:	strbcc	r3, [r2]
   1a45c:	bcs	1a72c <argp_parse@@Base+0x2a90>
   1a460:	ldr	fp, [r5, #24]
   1a464:	sub	r4, r4, fp
   1a468:	sub	r3, r7, fp
   1a46c:	add	r9, r9, r4
   1a470:	mov	r8, r3
   1a474:	mov	r4, fp
   1a478:	ldr	r2, [r5, #12]
   1a47c:	cmp	r2, r3
   1a480:	ble	1a4a4 <argp_parse@@Base+0x2808>
   1a484:	add	r3, r9, #1
   1a488:	add	r3, fp, r3
   1a48c:	cmp	r7, r3
   1a490:	bne	1a5c0 <argp_parse@@Base+0x2924>
   1a494:	ldr	r3, [r5, #32]
   1a498:	sub	r3, r3, r7
   1a49c:	cmp	r2, r3
   1a4a0:	bgt	1a5c0 <argp_parse@@Base+0x2924>
   1a4a4:	cmp	r2, #0
   1a4a8:	ble	1a4c8 <argp_parse@@Base+0x282c>
   1a4ac:	mov	r3, #0
   1a4b0:	mov	r1, #32
   1a4b4:	strb	r1, [r4], #1
   1a4b8:	add	r3, r3, #1
   1a4bc:	ldr	r2, [r5, #12]
   1a4c0:	cmp	r2, r3
   1a4c4:	bgt	1a4b4 <argp_parse@@Base+0x2818>
   1a4c8:	cmp	r4, r7
   1a4cc:	bcc	1a624 <argp_parse@@Base+0x2988>
   1a4d0:	cmp	r2, #0
   1a4d4:	sub	r8, r9, r8
   1a4d8:	add	r8, r4, r8
   1a4dc:	mvneq	r2, #0
   1a4e0:	cmp	r4, r8
   1a4e4:	str	r2, [r5, #20]
   1a4e8:	str	r8, [r5, #28]
   1a4ec:	bcc	1a298 <argp_parse@@Base+0x25fc>
   1a4f0:	ldr	r3, [r5, #24]
   1a4f4:	sub	r8, r8, r3
   1a4f8:	str	r8, [r5, #16]
   1a4fc:	add	sp, sp, #12
   1a500:	ldrd	r4, [sp]
   1a504:	ldrd	r6, [sp, #8]
   1a508:	ldrd	r8, [sp, #16]
   1a50c:	ldrd	sl, [sp, #24]
   1a510:	add	sp, sp, #32
   1a514:	pop	{pc}		; (ldr pc, [sp], #4)
   1a518:	sub	r9, r8, r4
   1a51c:	mov	r1, #10
   1a520:	mov	r2, r9
   1a524:	mov	r0, r4
   1a528:	bl	112fc <memchr@plt>
   1a52c:	mov	fp, r0
   1a530:	b	1a328 <argp_parse@@Base+0x268c>
   1a534:	mov	r3, #0
   1a538:	add	r4, fp, #1
   1a53c:	ldr	r8, [r5, #28]
   1a540:	str	r3, [r5, #20]
   1a544:	b	1a290 <argp_parse@@Base+0x25f4>
   1a548:	ldr	r3, [r5, #32]
   1a54c:	sub	r3, r3, r6
   1a550:	cmp	r3, sl
   1a554:	ble	1a404 <argp_parse@@Base+0x2768>
   1a558:	add	r1, r6, #1
   1a55c:	sub	r3, r7, r1
   1a560:	mov	r2, #10
   1a564:	sub	r8, r7, r4
   1a568:	mov	fp, r4
   1a56c:	mov	r4, r1
   1a570:	strb	r2, [r6]
   1a574:	b	1a478 <argp_parse@@Base+0x27dc>
   1a578:	add	r7, r6, #1
   1a57c:	cmp	r4, r7
   1a580:	bcs	1a58c <argp_parse@@Base+0x28f0>
   1a584:	mov	r6, r7
   1a588:	b	1a3e4 <argp_parse@@Base+0x2748>
   1a58c:	cmp	r6, fp
   1a590:	bcc	1a694 <argp_parse@@Base+0x29f8>
   1a594:	cmp	r6, fp
   1a598:	beq	1a680 <argp_parse@@Base+0x29e4>
   1a59c:	bl	11260 <__ctype_b_loc@plt>
   1a5a0:	ldr	r1, [r0]
   1a5a4:	mov	r7, r6
   1a5a8:	ldrb	r3, [r7, #1]!
   1a5ac:	lsl	r3, r3, #1
   1a5b0:	ldrh	r3, [r1, r3]
   1a5b4:	tst	r3, #1
   1a5b8:	bne	1a5a8 <argp_parse@@Base+0x290c>
   1a5bc:	b	1a3e4 <argp_parse@@Base+0x2748>
   1a5c0:	cmp	r2, #0
   1a5c4:	movgt	r6, #0
   1a5c8:	movgt	sl, #32
   1a5cc:	bgt	1a5ec <argp_parse@@Base+0x2950>
   1a5d0:	b	1a4c8 <argp_parse@@Base+0x282c>
   1a5d4:	str	ip, [r0, #20]
   1a5d8:	add	r6, r6, #1
   1a5dc:	strb	sl, [r2]
   1a5e0:	ldr	r2, [r5, #12]
   1a5e4:	cmp	r2, r6
   1a5e8:	ble	1a4c8 <argp_parse@@Base+0x282c>
   1a5ec:	ldr	r0, [r5]
   1a5f0:	ldr	r2, [r0, #20]
   1a5f4:	ldr	r1, [r0, #24]
   1a5f8:	add	ip, r2, #1
   1a5fc:	cmp	r2, r1
   1a600:	bcc	1a5d4 <argp_parse@@Base+0x2938>
   1a604:	mov	r1, #32
   1a608:	add	r6, r6, #1
   1a60c:	bl	11314 <__overflow@plt>
   1a610:	ldr	r2, [r5, #12]
   1a614:	cmp	r6, r2
   1a618:	blt	1a5ec <argp_parse@@Base+0x2950>
   1a61c:	cmp	r4, r7
   1a620:	bcs	1a4d0 <argp_parse@@Base+0x2834>
   1a624:	add	r2, fp, r9
   1a628:	mov	r1, r7
   1a62c:	sub	r2, r2, r7
   1a630:	mov	r0, r4
   1a634:	bl	1111c <memmove@plt>
   1a638:	ldr	r2, [r5, #12]
   1a63c:	b	1a4d0 <argp_parse@@Base+0x2834>
   1a640:	mov	r8, #32
   1a644:	b	1a654 <argp_parse@@Base+0x29b8>
   1a648:	add	r6, r6, #1
   1a64c:	cmp	r7, r6
   1a650:	beq	1a2f4 <argp_parse@@Base+0x2658>
   1a654:	ldr	r0, [r5]
   1a658:	ldr	r3, [r0, #20]
   1a65c:	ldr	r2, [r0, #24]
   1a660:	add	r1, r3, #1
   1a664:	cmp	r3, r2
   1a668:	strcc	r1, [r0, #20]
   1a66c:	strbcc	r8, [r3]
   1a670:	bcc	1a648 <argp_parse@@Base+0x29ac>
   1a674:	mov	r1, #32
   1a678:	bl	11314 <__overflow@plt>
   1a67c:	b	1a648 <argp_parse@@Base+0x29ac>
   1a680:	mov	r3, #0
   1a684:	add	r4, r6, #1
   1a688:	ldr	r8, [r5, #28]
   1a68c:	str	r3, [r5, #20]
   1a690:	b	1a290 <argp_parse@@Base+0x25f4>
   1a694:	add	r7, r6, #1
   1a698:	b	1a6bc <argp_parse@@Base+0x2a20>
   1a69c:	bl	11260 <__ctype_b_loc@plt>
   1a6a0:	ldrb	r3, [r7]
   1a6a4:	add	r7, r7, #1
   1a6a8:	ldr	r1, [r0]
   1a6ac:	lsl	r3, r3, #1
   1a6b0:	ldrh	r3, [r1, r3]
   1a6b4:	tst	r3, #1
   1a6b8:	bne	1a5a4 <argp_parse@@Base+0x2908>
   1a6bc:	cmp	fp, r7
   1a6c0:	mov	r6, r7
   1a6c4:	bne	1a69c <argp_parse@@Base+0x2a00>
   1a6c8:	b	1a594 <argp_parse@@Base+0x28f8>
   1a6cc:	add	r1, r9, r6
   1a6d0:	sub	r7, r7, r1
   1a6d4:	str	r1, [r5, #20]
   1a6d8:	add	r8, r8, r7
   1a6dc:	ldr	r3, [r5, #24]
   1a6e0:	str	r8, [r5, #28]
   1a6e4:	b	1a4f4 <argp_parse@@Base+0x2858>
   1a6e8:	sub	r8, r8, r7
   1a6ec:	mov	r1, r7
   1a6f0:	mov	r2, r8
   1a6f4:	add	r0, r6, sl
   1a6f8:	bl	1111c <memmove@plt>
   1a6fc:	ldr	r3, [r5, #12]
   1a700:	mov	r2, r6
   1a704:	mov	r1, #10
   1a708:	mov	fp, r4
   1a70c:	strb	r1, [r2], #1
   1a710:	add	r7, r3, #1
   1a714:	add	r7, r6, r7
   1a718:	add	r9, r7, r8
   1a71c:	sub	r8, r7, r4
   1a720:	sub	r9, r9, r4
   1a724:	mov	r4, r2
   1a728:	b	1a478 <argp_parse@@Base+0x27dc>
   1a72c:	mov	r0, r3
   1a730:	mov	r1, #10
   1a734:	bl	11314 <__overflow@plt>
   1a738:	b	1a460 <argp_parse@@Base+0x27c4>
   1a73c:	str	r1, [r5, #20]
   1a740:	ldr	r3, [r5, #24]
   1a744:	ldr	r8, [r5, #28]
   1a748:	b	1a4f4 <argp_parse@@Base+0x2858>
   1a74c:	str	r4, [sp, #-8]!
   1a750:	mov	r4, r0
   1a754:	str	lr, [sp, #4]
   1a758:	bl	1a1ec <argp_parse@@Base+0x2550>
   1a75c:	ldr	r0, [r4, #24]
   1a760:	ldr	r2, [r4, #28]
   1a764:	cmp	r2, r0
   1a768:	bls	1a780 <argp_parse@@Base+0x2ae4>
   1a76c:	sub	r2, r2, r0
   1a770:	mov	r1, #1
   1a774:	ldr	r3, [r4]
   1a778:	bl	11170 <fwrite_unlocked@plt>
   1a77c:	ldr	r0, [r4, #24]
   1a780:	bl	18cd4 <argp_parse@@Base+0x1038>
   1a784:	mov	r0, r4
   1a788:	ldr	r4, [sp]
   1a78c:	ldr	lr, [sp, #4]
   1a790:	add	sp, sp, #8
   1a794:	b	18cd4 <argp_parse@@Base+0x1038>
   1a798:	strd	r4, [sp, #-16]!
   1a79c:	mov	r4, r0
   1a7a0:	mov	r5, r1
   1a7a4:	str	r6, [sp, #8]
   1a7a8:	str	lr, [sp, #12]
   1a7ac:	bl	1a1ec <argp_parse@@Base+0x2550>
   1a7b0:	mov	r1, #1
   1a7b4:	ldr	r3, [r4]
   1a7b8:	ldr	r2, [r4, #24]
   1a7bc:	ldr	ip, [r4, #28]
   1a7c0:	mov	r0, r2
   1a7c4:	sub	r2, ip, r2
   1a7c8:	bl	11170 <fwrite_unlocked@plt>
   1a7cc:	mov	ip, r0
   1a7d0:	ldr	r0, [r4, #24]
   1a7d4:	ldr	r3, [r4, #28]
   1a7d8:	sub	r2, r3, r0
   1a7dc:	cmp	ip, r2
   1a7e0:	bne	1a840 <argp_parse@@Base+0x2ba4>
   1a7e4:	ldr	r1, [r4, #32]
   1a7e8:	mov	r3, #0
   1a7ec:	str	r3, [r4, #16]
   1a7f0:	str	r0, [r4, #28]
   1a7f4:	sub	r1, r1, r0
   1a7f8:	cmp	r1, r5
   1a7fc:	movcs	r3, #1
   1a800:	bcs	1a82c <argp_parse@@Base+0x2b90>
   1a804:	adds	r5, r1, r5
   1a808:	bcs	1a868 <argp_parse@@Base+0x2bcc>
   1a80c:	mov	r1, r5
   1a810:	bl	1a0fc <argp_parse@@Base+0x2460>
   1a814:	cmp	r0, #0
   1a818:	beq	1a868 <argp_parse@@Base+0x2bcc>
   1a81c:	add	r1, r0, r5
   1a820:	mov	r3, #1
   1a824:	str	r0, [r4, #24]
   1a828:	strd	r0, [r4, #28]
   1a82c:	ldrd	r4, [sp]
   1a830:	mov	r0, r3
   1a834:	ldr	r6, [sp, #8]
   1a838:	add	sp, sp, #12
   1a83c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a840:	ldr	lr, [r4, #16]
   1a844:	sub	r3, r3, ip
   1a848:	add	r1, r0, ip
   1a84c:	sub	r2, r3, r0
   1a850:	str	r3, [r4, #28]
   1a854:	sub	ip, lr, ip
   1a858:	str	ip, [r4, #16]
   1a85c:	bl	1111c <memmove@plt>
   1a860:	mov	r3, #0
   1a864:	b	1a82c <argp_parse@@Base+0x2b90>
   1a868:	bl	112b4 <__errno_location@plt>
   1a86c:	mov	r2, #12
   1a870:	mov	r3, #0
   1a874:	str	r2, [r0]
   1a878:	b	1a82c <argp_parse@@Base+0x2b90>
   1a87c:	ldr	ip, [r0, #28]
   1a880:	ldr	r3, [r0, #32]
   1a884:	sub	r3, r3, ip
   1a888:	cmp	r3, r1
   1a88c:	bcc	1a898 <argp_parse@@Base+0x2bfc>
   1a890:	mov	r0, #1
   1a894:	bx	lr
   1a898:	b	1a798 <argp_parse@@Base+0x2afc>
   1a89c:	push	{r1, r2, r3}
   1a8a0:	mov	r1, #150	; 0x96
   1a8a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a8a8:	mov	r5, r0
   1a8ac:	strd	r6, [sp, #8]
   1a8b0:	str	lr, [sp, #16]
   1a8b4:	sub	sp, sp, #8
   1a8b8:	ldr	r7, [sp, #28]
   1a8bc:	add	r6, sp, #32
   1a8c0:	ldr	r0, [r5, #28]
   1a8c4:	ldr	r3, [r5, #32]
   1a8c8:	sub	r2, r3, r0
   1a8cc:	cmp	r1, r2
   1a8d0:	bhi	1a920 <argp_parse@@Base+0x2c84>
   1a8d4:	sub	r4, r3, r0
   1a8d8:	mov	r2, r7
   1a8dc:	str	r6, [sp, #4]
   1a8e0:	mov	r1, r4
   1a8e4:	mov	r3, r6
   1a8e8:	bl	1138c <vsnprintf@plt>
   1a8ec:	cmp	r0, r4
   1a8f0:	add	r1, r0, #1
   1a8f4:	bcs	1a8c0 <argp_parse@@Base+0x2c24>
   1a8f8:	ldr	r3, [r5, #28]
   1a8fc:	add	r3, r3, r0
   1a900:	str	r3, [r5, #28]
   1a904:	add	sp, sp, #8
   1a908:	ldrd	r4, [sp]
   1a90c:	ldrd	r6, [sp, #8]
   1a910:	ldr	lr, [sp, #16]
   1a914:	add	sp, sp, #20
   1a918:	add	sp, sp, #12
   1a91c:	bx	lr
   1a920:	mov	r0, r5
   1a924:	bl	1a798 <argp_parse@@Base+0x2afc>
   1a928:	cmp	r0, #0
   1a92c:	beq	1a93c <argp_parse@@Base+0x2ca0>
   1a930:	ldr	r0, [r5, #28]
   1a934:	ldr	r3, [r5, #32]
   1a938:	b	1a8d4 <argp_parse@@Base+0x2c38>
   1a93c:	mvn	r0, #0
   1a940:	b	1a904 <argp_parse@@Base+0x2c68>
   1a944:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a948:	ldr	r2, [r1]
   1a94c:	ldr	ip, [r1, #32]
   1a950:	strd	r6, [sp, #8]
   1a954:	strd	r8, [sp, #16]
   1a958:	strd	sl, [sp, #24]
   1a95c:	str	lr, [sp, #32]
   1a960:	sub	sp, sp, #36	; 0x24
   1a964:	str	r2, [sp, #24]
   1a968:	str	r1, [sp, #28]
   1a96c:	ldr	r1, [r1, #28]
   1a970:	cmp	r1, ip
   1a974:	cmplt	ip, r2
   1a978:	str	r1, [sp, #20]
   1a97c:	bge	1aa7c <argp_parse@@Base+0x2de0>
   1a980:	mov	r3, r1
   1a984:	lsl	r1, ip, #2
   1a988:	mov	lr, r2
   1a98c:	mov	r2, r1
   1a990:	add	r2, r2, #8
   1a994:	str	r1, [sp, #8]
   1a998:	add	r1, r0, r1
   1a99c:	str	r1, [sp, #4]
   1a9a0:	str	r2, [sp, #12]
   1a9a4:	sub	r2, r1, #8
   1a9a8:	str	r2, [sp, #16]
   1a9ac:	sub	r1, lr, ip
   1a9b0:	sub	r8, ip, r3
   1a9b4:	cmp	r1, r8
   1a9b8:	ble	1aab4 <argp_parse@@Base+0x2e18>
   1a9bc:	lsl	r2, r3, #2
   1a9c0:	sub	lr, lr, r8
   1a9c4:	sub	r5, r8, #1
   1a9c8:	add	r1, lr, #2
   1a9cc:	lsl	r6, lr, #2
   1a9d0:	cmp	r2, r1, lsl #2
   1a9d4:	add	r7, r2, #8
   1a9d8:	add	r2, r0, r2
   1a9dc:	add	r1, r0, r6
   1a9e0:	movge	r4, #1
   1a9e4:	movlt	r4, #0
   1a9e8:	cmp	r6, r7
   1a9ec:	orrge	r4, r4, #1
   1a9f0:	orr	r9, r1, r2
   1a9f4:	cmp	r5, #3
   1a9f8:	movls	r4, #0
   1a9fc:	andhi	r4, r4, #1
   1aa00:	tst	r9, #7
   1aa04:	movne	r4, #0
   1aa08:	cmp	r4, #0
   1aa0c:	beq	1ab88 <argp_parse@@Base+0x2eec>
   1aa10:	lsr	fp, r8, #1
   1aa14:	sub	r2, r2, #8
   1aa18:	sub	sl, r1, #8
   1aa1c:	mov	r9, r2
   1aa20:	add	fp, r1, fp, lsl #3
   1aa24:	ldrd	r4, [r2, #8]!
   1aa28:	ldrd	r6, [sl, #8]!
   1aa2c:	strd	r6, [r9, #8]!
   1aa30:	strd	r4, [r1], #8
   1aa34:	cmp	r1, fp
   1aa38:	bne	1aa24 <argp_parse@@Base+0x2d88>
   1aa3c:	bic	r2, r8, #1
   1aa40:	cmp	r8, r2
   1aa44:	beq	1aa60 <argp_parse@@Base+0x2dc4>
   1aa48:	add	r1, r3, r2
   1aa4c:	add	r2, lr, r2
   1aa50:	ldr	r4, [r0, r1, lsl #2]
   1aa54:	ldr	r5, [r0, r2, lsl #2]
   1aa58:	str	r5, [r0, r1, lsl #2]
   1aa5c:	str	r4, [r0, r2, lsl #2]
   1aa60:	cmp	lr, ip
   1aa64:	movle	r2, #0
   1aa68:	movgt	r2, #1
   1aa6c:	cmp	r3, ip
   1aa70:	movge	r2, #0
   1aa74:	cmp	r2, #0
   1aa78:	bne	1a9ac <argp_parse@@Base+0x2d10>
   1aa7c:	ldr	r3, [sp, #24]
   1aa80:	ldr	r2, [sp, #28]
   1aa84:	sub	ip, r3, ip
   1aa88:	str	r3, [r2, #32]
   1aa8c:	ldr	r3, [sp, #20]
   1aa90:	add	ip, ip, r3
   1aa94:	str	ip, [r2, #28]
   1aa98:	add	sp, sp, #36	; 0x24
   1aa9c:	ldrd	r4, [sp]
   1aaa0:	ldrd	r6, [sp, #8]
   1aaa4:	ldrd	r8, [sp, #16]
   1aaa8:	ldrd	sl, [sp, #24]
   1aaac:	add	sp, sp, #32
   1aab0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aab4:	ldr	r4, [sp, #8]
   1aab8:	lsl	r5, r3, #2
   1aabc:	sub	r7, r1, #1
   1aac0:	ldr	r8, [sp, #12]
   1aac4:	mov	r6, r5
   1aac8:	add	r5, r5, #8
   1aacc:	add	r2, r0, r6
   1aad0:	cmp	r8, r6
   1aad4:	cmpgt	r5, r4
   1aad8:	ldr	r8, [sp, #4]
   1aadc:	movle	r5, #1
   1aae0:	movgt	r5, #0
   1aae4:	cmp	r7, #3
   1aae8:	movls	r4, #0
   1aaec:	andhi	r4, r5, #1
   1aaf0:	orr	r6, r2, r8
   1aaf4:	tst	r6, #7
   1aaf8:	movne	r4, #0
   1aafc:	cmp	r4, #0
   1ab00:	beq	1ab60 <argp_parse@@Base+0x2ec4>
   1ab04:	lsr	fp, r1, #1
   1ab08:	ldr	sl, [sp, #16]
   1ab0c:	sub	r2, r2, #8
   1ab10:	mov	r9, r2
   1ab14:	add	fp, r8, fp, lsl #3
   1ab18:	ldrd	r4, [r2, #8]!
   1ab1c:	ldrd	r6, [sl, #8]!
   1ab20:	strd	r6, [r9, #8]!
   1ab24:	strd	r4, [r8], #8
   1ab28:	cmp	r8, fp
   1ab2c:	bne	1ab18 <argp_parse@@Base+0x2e7c>
   1ab30:	bic	r2, r1, #1
   1ab34:	cmp	r1, r2
   1ab38:	addeq	r3, r1, r3
   1ab3c:	beq	1aa60 <argp_parse@@Base+0x2dc4>
   1ab40:	add	r4, r3, r2
   1ab44:	add	r2, ip, r2
   1ab48:	ldr	r5, [r0, r4, lsl #2]
   1ab4c:	add	r3, r1, r3
   1ab50:	ldr	r6, [r0, r2, lsl #2]
   1ab54:	str	r6, [r0, r4, lsl #2]
   1ab58:	str	r5, [r0, r2, lsl #2]
   1ab5c:	b	1aa60 <argp_parse@@Base+0x2dc4>
   1ab60:	add	r3, r1, r3
   1ab64:	ldr	r1, [sp, #4]
   1ab68:	add	r6, r0, r3, lsl #2
   1ab6c:	ldr	r5, [r1]
   1ab70:	ldr	r4, [r2]
   1ab74:	str	r5, [r2], #4
   1ab78:	cmp	r2, r6
   1ab7c:	str	r4, [r1], #4
   1ab80:	bne	1ab6c <argp_parse@@Base+0x2ed0>
   1ab84:	b	1aa60 <argp_parse@@Base+0x2dc4>
   1ab88:	add	r8, r3, r8
   1ab8c:	add	r8, r0, r8, lsl #2
   1ab90:	ldr	r5, [r1]
   1ab94:	ldr	r4, [r2]
   1ab98:	str	r5, [r2], #4
   1ab9c:	cmp	r8, r2
   1aba0:	str	r4, [r1], #4
   1aba4:	bne	1ab90 <argp_parse@@Base+0x2ef4>
   1aba8:	b	1aa60 <argp_parse@@Base+0x2dc4>
   1abac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1abb0:	strd	r6, [sp, #8]
   1abb4:	strd	r8, [sp, #16]
   1abb8:	strd	sl, [sp, #24]
   1abbc:	str	lr, [sp, #32]
   1abc0:	sub	sp, sp, #52	; 0x34
   1abc4:	str	r3, [sp, #8]
   1abc8:	ldr	r3, [sp, #96]	; 0x60
   1abcc:	str	r1, [sp, #20]
   1abd0:	str	r2, [sp, #28]
   1abd4:	str	r0, [sp, #32]
   1abd8:	ldr	r9, [r3, #20]
   1abdc:	ldrb	r5, [r9]
   1abe0:	mov	r8, r9
   1abe4:	str	r9, [sp, #24]
   1abe8:	cmp	r5, #61	; 0x3d
   1abec:	cmpne	r5, #0
   1abf0:	movne	r5, #1
   1abf4:	moveq	r5, #0
   1abf8:	beq	1ac10 <argp_parse@@Base+0x2f74>
   1abfc:	ldrb	r3, [r8, #1]!
   1ac00:	cmp	r3, #0
   1ac04:	cmpne	r3, #61	; 0x3d
   1ac08:	bne	1abfc <argp_parse@@Base+0x2f60>
   1ac0c:	sub	r5, r8, r9
   1ac10:	ldr	r3, [sp, #8]
   1ac14:	ldr	r3, [r3]
   1ac18:	cmp	r3, #0
   1ac1c:	str	r3, [sp, #12]
   1ac20:	beq	1ae14 <argp_parse@@Base+0x3178>
   1ac24:	ldr	fp, [sp, #8]
   1ac28:	mov	r4, r3
   1ac2c:	mov	r6, #0
   1ac30:	str	fp, [sp, #16]
   1ac34:	b	1ac3c <argp_parse@@Base+0x2fa0>
   1ac38:	mov	r6, r7
   1ac3c:	mov	r2, r5
   1ac40:	mov	r1, r9
   1ac44:	mov	r0, r4
   1ac48:	add	r7, r6, #1
   1ac4c:	bl	113e0 <strncmp@plt>
   1ac50:	cmp	r0, #0
   1ac54:	mov	sl, fp
   1ac58:	mov	r0, r4
   1ac5c:	bne	1ac6c <argp_parse@@Base+0x2fd0>
   1ac60:	bl	11290 <strlen@plt>
   1ac64:	cmp	r0, r5
   1ac68:	beq	1ad8c <argp_parse@@Base+0x30f0>
   1ac6c:	ldr	r4, [fp, #16]!
   1ac70:	cmp	r4, #0
   1ac74:	bne	1ac38 <argp_parse@@Base+0x2f9c>
   1ac78:	ldr	r3, [sp, #100]	; 0x64
   1ac7c:	cmp	r3, #0
   1ac80:	ldr	r3, [sp, #92]	; 0x5c
   1ac84:	beq	1ad20 <argp_parse@@Base+0x3084>
   1ac88:	cmp	r3, #0
   1ac8c:	bne	1ae8c <argp_parse@@Base+0x31f0>
   1ac90:	ldr	r0, [sp, #12]
   1ac94:	mov	r9, r3
   1ac98:	mov	sl, r3
   1ac9c:	mov	fp, #1
   1aca0:	str	r3, [sp, #40]	; 0x28
   1aca4:	ldr	r1, [sp, #24]
   1aca8:	str	r7, [sp, #24]
   1acac:	mov	r7, r5
   1acb0:	ldr	r5, [sp, #16]
   1acb4:	str	r6, [sp, #16]
   1acb8:	ldr	r6, [sp, #96]	; 0x60
   1acbc:	str	r3, [sp, #44]	; 0x2c
   1acc0:	mvn	r3, #0
   1acc4:	str	r3, [sp, #36]	; 0x24
   1acc8:	mov	r2, r7
   1accc:	bl	113e0 <strncmp@plt>
   1acd0:	cmp	r0, #0
   1acd4:	bne	1ad08 <argp_parse@@Base+0x306c>
   1acd8:	cmp	sl, #0
   1acdc:	beq	1b070 <argp_parse@@Base+0x33d4>
   1ace0:	ldr	r2, [r5, #4]
   1ace4:	ldr	r1, [sl, #4]
   1ace8:	cmp	r1, r2
   1acec:	beq	1b190 <argp_parse@@Base+0x34f4>
   1acf0:	ldr	r3, [sp, #40]	; 0x28
   1acf4:	cmp	r3, #0
   1acf8:	bne	1ad08 <argp_parse@@Base+0x306c>
   1acfc:	cmp	r4, #0
   1ad00:	beq	1b108 <argp_parse@@Base+0x346c>
   1ad04:	strb	fp, [r4, r9]
   1ad08:	ldr	r0, [r5, #16]!
   1ad0c:	add	r9, r9, #1
   1ad10:	cmp	r0, #0
   1ad14:	beq	1afa0 <argp_parse@@Base+0x3304>
   1ad18:	ldr	r1, [r6, #20]
   1ad1c:	b	1acc8 <argp_parse@@Base+0x302c>
   1ad20:	cmp	r3, #0
   1ad24:	beq	1af04 <argp_parse@@Base+0x3268>
   1ad28:	ldr	r0, [sp, #12]
   1ad2c:	mvn	r3, #0
   1ad30:	ldr	r6, [sp, #100]	; 0x64
   1ad34:	str	r3, [sp, #36]	; 0x24
   1ad38:	ldr	sl, [sp, #16]
   1ad3c:	mov	r7, r6
   1ad40:	mov	r2, r5
   1ad44:	mov	r1, r9
   1ad48:	bl	113e0 <strncmp@plt>
   1ad4c:	cmp	r0, #0
   1ad50:	bne	1ad64 <argp_parse@@Base+0x30c8>
   1ad54:	cmp	r4, #0
   1ad58:	moveq	r4, sl
   1ad5c:	movne	r6, #1
   1ad60:	streq	r7, [sp, #36]	; 0x24
   1ad64:	ldr	r0, [sl, #16]!
   1ad68:	add	r7, r7, #1
   1ad6c:	cmp	r0, #0
   1ad70:	bne	1ad40 <argp_parse@@Base+0x30a4>
   1ad74:	cmp	r6, #0
   1ad78:	moveq	sl, r4
   1ad7c:	bne	1b008 <argp_parse@@Base+0x336c>
   1ad80:	cmp	sl, #0
   1ad84:	ldrne	r6, [sp, #36]	; 0x24
   1ad88:	beq	1ae14 <argp_parse@@Base+0x3178>
   1ad8c:	ldr	r3, [sp, #96]	; 0x60
   1ad90:	mov	r2, #0
   1ad94:	ldr	r1, [sp, #96]	; 0x60
   1ad98:	ldr	r0, [sl, #4]
   1ad9c:	ldr	r3, [r3]
   1ada0:	str	r2, [r1, #20]
   1ada4:	add	r2, r3, #1
   1ada8:	str	r2, [r1]
   1adac:	ldrb	r1, [r8]
   1adb0:	cmp	r1, #0
   1adb4:	bne	1adfc <argp_parse@@Base+0x3160>
   1adb8:	cmp	r0, #1
   1adbc:	beq	1b03c <argp_parse@@Base+0x33a0>
   1adc0:	ldr	r3, [sp, #88]	; 0x58
   1adc4:	cmp	r3, #0
   1adc8:	strne	r6, [r3]
   1adcc:	ldr	r3, [sl, #8]
   1add0:	ldr	r0, [sl, #12]
   1add4:	cmp	r3, #0
   1add8:	strne	r0, [r3]
   1addc:	movne	r0, #0
   1ade0:	add	sp, sp, #52	; 0x34
   1ade4:	ldrd	r4, [sp]
   1ade8:	ldrd	r6, [sp, #8]
   1adec:	ldrd	r8, [sp, #16]
   1adf0:	ldrd	sl, [sp, #24]
   1adf4:	add	sp, sp, #32
   1adf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1adfc:	cmp	r0, #0
   1ae00:	beq	1b07c <argp_parse@@Base+0x33e0>
   1ae04:	ldr	r3, [sp, #96]	; 0x60
   1ae08:	add	r8, r8, #1
   1ae0c:	str	r8, [r3, #12]
   1ae10:	b	1adc0 <argp_parse@@Base+0x3124>
   1ae14:	ldr	r3, [sp, #92]	; 0x5c
   1ae18:	cmp	r3, #0
   1ae1c:	beq	1ae58 <argp_parse@@Base+0x31bc>
   1ae20:	ldr	r2, [sp, #20]
   1ae24:	ldr	r3, [sp, #96]	; 0x60
   1ae28:	ldr	r3, [r3]
   1ae2c:	ldr	r3, [r2, r3, lsl #2]
   1ae30:	ldrb	r3, [r3, #1]
   1ae34:	cmp	r3, #45	; 0x2d
   1ae38:	beq	1ae58 <argp_parse@@Base+0x31bc>
   1ae3c:	ldr	r0, [sp, #28]
   1ae40:	ldr	r3, [sp, #96]	; 0x60
   1ae44:	ldr	r3, [r3, #20]
   1ae48:	ldrb	r1, [r3]
   1ae4c:	bl	1129c <strchr@plt>
   1ae50:	cmp	r0, #0
   1ae54:	bne	1b0cc <argp_parse@@Base+0x3430>
   1ae58:	ldr	r3, [sp, #100]	; 0x64
   1ae5c:	cmp	r3, #0
   1ae60:	bne	1af6c <argp_parse@@Base+0x32d0>
   1ae64:	ldr	r3, [sp, #96]	; 0x60
   1ae68:	mov	r2, #0
   1ae6c:	mov	r0, #63	; 0x3f
   1ae70:	ldr	r1, [sp, #96]	; 0x60
   1ae74:	ldr	r3, [r3]
   1ae78:	str	r2, [r1, #8]
   1ae7c:	str	r2, [r1, #20]
   1ae80:	add	r3, r3, #1
   1ae84:	str	r3, [r1]
   1ae88:	b	1ade0 <argp_parse@@Base+0x3144>
   1ae8c:	ldr	r0, [sp, #12]
   1ae90:	mvn	r3, #0
   1ae94:	mov	sl, r4
   1ae98:	mov	r9, r4
   1ae9c:	ldr	fp, [sp, #16]
   1aea0:	str	r3, [sp, #36]	; 0x24
   1aea4:	ldr	r1, [sp, #24]
   1aea8:	str	r7, [sp, #24]
   1aeac:	ldr	r7, [sp, #96]	; 0x60
   1aeb0:	str	r4, [sp, #40]	; 0x28
   1aeb4:	str	r4, [sp, #44]	; 0x2c
   1aeb8:	mov	r2, r5
   1aebc:	bl	113e0 <strncmp@plt>
   1aec0:	cmp	r0, #0
   1aec4:	bne	1aeec <argp_parse@@Base+0x3250>
   1aec8:	cmp	sl, #0
   1aecc:	beq	1b064 <argp_parse@@Base+0x33c8>
   1aed0:	ldr	r3, [sp, #40]	; 0x28
   1aed4:	cmp	r3, #0
   1aed8:	bne	1aeec <argp_parse@@Base+0x3250>
   1aedc:	cmp	r4, #0
   1aee0:	beq	1b0d4 <argp_parse@@Base+0x3438>
   1aee4:	mov	r3, #1
   1aee8:	strb	r3, [r4, r9]
   1aeec:	ldr	r0, [fp, #16]!
   1aef0:	add	r9, r9, #1
   1aef4:	cmp	r0, #0
   1aef8:	beq	1afa4 <argp_parse@@Base+0x3308>
   1aefc:	ldr	r1, [r7, #20]
   1af00:	b	1aeb8 <argp_parse@@Base+0x321c>
   1af04:	mov	r6, r3
   1af08:	mov	r7, r3
   1af0c:	ldr	r0, [sp, #12]
   1af10:	mvn	r3, #0
   1af14:	ldr	sl, [sp, #16]
   1af18:	str	r3, [sp, #36]	; 0x24
   1af1c:	b	1af44 <argp_parse@@Base+0x32a8>
   1af20:	ldr	r2, [r4, #4]
   1af24:	ldr	r3, [sl, #4]
   1af28:	cmp	r2, r3
   1af2c:	beq	1b16c <argp_parse@@Base+0x34d0>
   1af30:	mov	r6, #1
   1af34:	ldr	r0, [sl, #16]!
   1af38:	add	r7, r7, #1
   1af3c:	cmp	r0, #0
   1af40:	beq	1ad74 <argp_parse@@Base+0x30d8>
   1af44:	mov	r2, r5
   1af48:	mov	r1, r9
   1af4c:	bl	113e0 <strncmp@plt>
   1af50:	cmp	r0, #0
   1af54:	bne	1af34 <argp_parse@@Base+0x3298>
   1af58:	cmp	r4, #0
   1af5c:	bne	1af20 <argp_parse@@Base+0x3284>
   1af60:	mov	r4, sl
   1af64:	str	r7, [sp, #36]	; 0x24
   1af68:	b	1af34 <argp_parse@@Base+0x3298>
   1af6c:	ldr	r3, [sp, #96]	; 0x60
   1af70:	movw	r0, #58328	; 0xe3d8
   1af74:	movt	r0, #2
   1af78:	movw	r1, #53428	; 0xd0b4
   1af7c:	movt	r1, #1
   1af80:	ldr	r0, [r0]
   1af84:	ldr	ip, [r3, #20]
   1af88:	ldr	r3, [sp, #20]
   1af8c:	ldr	r2, [r3]
   1af90:	str	ip, [sp]
   1af94:	ldr	r3, [sp, #104]	; 0x68
   1af98:	bl	112a8 <fprintf@plt>
   1af9c:	b	1ae64 <argp_parse@@Base+0x31c8>
   1afa0:	ldr	r6, [sp, #16]
   1afa4:	ldr	r3, [sp, #40]	; 0x28
   1afa8:	orrs	r3, r4, r3
   1afac:	beq	1ad80 <argp_parse@@Base+0x30e4>
   1afb0:	ldr	r3, [sp, #40]	; 0x28
   1afb4:	movw	r5, #58328	; 0xe3d8
   1afb8:	movt	r5, #2
   1afbc:	ldr	r0, [r5]
   1afc0:	cmp	r3, #0
   1afc4:	beq	1b1b4 <argp_parse@@Base+0x3518>
   1afc8:	ldr	r2, [sp, #20]
   1afcc:	movw	r1, #53340	; 0xd05c
   1afd0:	movt	r1, #1
   1afd4:	ldr	r3, [sp, #96]	; 0x60
   1afd8:	ldr	r2, [r2]
   1afdc:	ldr	ip, [r3, #20]
   1afe0:	ldr	r3, [sp, #104]	; 0x68
   1afe4:	str	ip, [sp]
   1afe8:	bl	112a8 <fprintf@plt>
   1afec:	ldr	r3, [sp, #44]	; 0x2c
   1aff0:	cmp	r3, #0
   1aff4:	beq	1b000 <argp_parse@@Base+0x3364>
   1aff8:	mov	r0, r4
   1affc:	bl	18cd4 <argp_parse@@Base+0x1038>
   1b000:	ldr	r3, [sp, #96]	; 0x60
   1b004:	ldr	r9, [r3, #20]
   1b008:	mov	r0, r9
   1b00c:	bl	11290 <strlen@plt>
   1b010:	ldr	r3, [sp, #96]	; 0x60
   1b014:	add	r9, r9, r0
   1b018:	mov	r2, #0
   1b01c:	mov	r0, #63	; 0x3f
   1b020:	ldr	r1, [sp, #96]	; 0x60
   1b024:	ldr	r3, [r3]
   1b028:	str	r2, [r1, #8]
   1b02c:	str	r9, [r1, #20]
   1b030:	add	r3, r3, #1
   1b034:	str	r3, [r1]
   1b038:	b	1ade0 <argp_parse@@Base+0x3144>
   1b03c:	ldr	r1, [sp, #32]
   1b040:	cmp	r2, r1
   1b044:	bge	1b13c <argp_parse@@Base+0x34a0>
   1b048:	ldr	r1, [sp, #20]
   1b04c:	add	r3, r3, #2
   1b050:	ldr	r2, [r1, r2, lsl #2]
   1b054:	ldr	r1, [sp, #96]	; 0x60
   1b058:	str	r3, [r1]
   1b05c:	str	r2, [r1, #12]
   1b060:	b	1adc0 <argp_parse@@Base+0x3124>
   1b064:	mov	sl, fp
   1b068:	str	r9, [sp, #36]	; 0x24
   1b06c:	b	1aeec <argp_parse@@Base+0x3250>
   1b070:	mov	sl, r5
   1b074:	str	r9, [sp, #36]	; 0x24
   1b078:	b	1ad08 <argp_parse@@Base+0x306c>
   1b07c:	ldr	r3, [sp, #100]	; 0x64
   1b080:	cmp	r3, #0
   1b084:	bne	1b09c <argp_parse@@Base+0x3400>
   1b088:	ldr	r3, [sl, #12]
   1b08c:	mov	r0, #63	; 0x3f
   1b090:	ldr	r2, [sp, #96]	; 0x60
   1b094:	str	r3, [r2, #8]
   1b098:	b	1ade0 <argp_parse@@Base+0x3144>
   1b09c:	ldr	ip, [sl]
   1b0a0:	movw	r0, #58328	; 0xe3d8
   1b0a4:	movt	r0, #2
   1b0a8:	movw	r1, #53460	; 0xd0d4
   1b0ac:	movt	r1, #1
   1b0b0:	ldr	r3, [sp, #20]
   1b0b4:	ldr	r0, [r0]
   1b0b8:	ldr	r2, [r3]
   1b0bc:	str	ip, [sp]
   1b0c0:	ldr	r3, [sp, #104]	; 0x68
   1b0c4:	bl	112a8 <fprintf@plt>
   1b0c8:	b	1b088 <argp_parse@@Base+0x33ec>
   1b0cc:	mvn	r0, #0
   1b0d0:	b	1ade0 <argp_parse@@Base+0x3144>
   1b0d4:	ldr	r0, [sp, #24]
   1b0d8:	bl	1a0c0 <argp_parse@@Base+0x2424>
   1b0dc:	subs	r4, r0, #0
   1b0e0:	beq	1b278 <argp_parse@@Base+0x35dc>
   1b0e4:	ldr	r2, [sp, #24]
   1b0e8:	ldr	r1, [sp, #40]	; 0x28
   1b0ec:	bl	112e4 <memset@plt>
   1b0f0:	mov	r3, #1
   1b0f4:	mov	r2, #1
   1b0f8:	str	r3, [sp, #44]	; 0x2c
   1b0fc:	ldr	r3, [sp, #36]	; 0x24
   1b100:	strb	r2, [r4, r3]
   1b104:	b	1aee4 <argp_parse@@Base+0x3248>
   1b108:	ldr	r0, [sp, #24]
   1b10c:	bl	1a0c0 <argp_parse@@Base+0x2424>
   1b110:	subs	r4, r0, #0
   1b114:	mov	r3, #1
   1b118:	streq	r3, [sp, #40]	; 0x28
   1b11c:	beq	1ad08 <argp_parse@@Base+0x306c>
   1b120:	ldr	r2, [sp, #24]
   1b124:	str	r3, [sp, #44]	; 0x2c
   1b128:	ldr	r1, [sp, #40]	; 0x28
   1b12c:	bl	112e4 <memset@plt>
   1b130:	ldr	r3, [sp, #36]	; 0x24
   1b134:	strb	fp, [r4, r3]
   1b138:	b	1ad04 <argp_parse@@Base+0x3068>
   1b13c:	ldr	r3, [sp, #100]	; 0x64
   1b140:	cmp	r3, #0
   1b144:	bne	1b248 <argp_parse@@Base+0x35ac>
   1b148:	ldr	r3, [sl, #12]
   1b14c:	ldr	r2, [sp, #96]	; 0x60
   1b150:	str	r3, [r2, #8]
   1b154:	ldr	r3, [sp, #28]
   1b158:	ldrb	r3, [r3]
   1b15c:	cmp	r3, #58	; 0x3a
   1b160:	moveq	r0, #58	; 0x3a
   1b164:	movne	r0, #63	; 0x3f
   1b168:	b	1ade0 <argp_parse@@Base+0x3144>
   1b16c:	ldr	r2, [r4, #8]
   1b170:	ldr	r3, [sl, #8]
   1b174:	cmp	r2, r3
   1b178:	bne	1af30 <argp_parse@@Base+0x3294>
   1b17c:	ldr	r2, [r4, #12]
   1b180:	ldr	r3, [sl, #12]
   1b184:	cmp	r2, r3
   1b188:	movne	r6, #1
   1b18c:	b	1af34 <argp_parse@@Base+0x3298>
   1b190:	ldr	r2, [r5, #8]
   1b194:	ldr	r1, [sl, #8]
   1b198:	cmp	r1, r2
   1b19c:	bne	1acf0 <argp_parse@@Base+0x3054>
   1b1a0:	ldr	r2, [r5, #12]
   1b1a4:	ldr	r1, [sl, #12]
   1b1a8:	cmp	r1, r2
   1b1ac:	bne	1acf0 <argp_parse@@Base+0x3054>
   1b1b0:	b	1ad08 <argp_parse@@Base+0x306c>
   1b1b4:	bl	11380 <flockfile@plt>
   1b1b8:	ldr	r2, [sp, #20]
   1b1bc:	movw	r1, #53372	; 0xd07c
   1b1c0:	movt	r1, #1
   1b1c4:	movw	r7, #53420	; 0xd0ac
   1b1c8:	movt	r7, #1
   1b1cc:	ldr	r3, [sp, #96]	; 0x60
   1b1d0:	add	r6, r4, r6
   1b1d4:	sub	r8, r4, #1
   1b1d8:	ldr	r2, [r2]
   1b1dc:	ldr	r0, [r3, #20]
   1b1e0:	ldr	r3, [sp, #104]	; 0x68
   1b1e4:	str	r0, [sp]
   1b1e8:	ldr	r0, [r5]
   1b1ec:	bl	112a8 <fprintf@plt>
   1b1f0:	ldr	r0, [r5]
   1b1f4:	ldr	sl, [sp, #8]
   1b1f8:	ldr	r9, [sp, #40]	; 0x28
   1b1fc:	b	1b20c <argp_parse@@Base+0x3570>
   1b200:	cmp	r6, r8
   1b204:	add	r9, r9, #1
   1b208:	beq	1b230 <argp_parse@@Base+0x3594>
   1b20c:	ldrb	r3, [r8, #1]!
   1b210:	cmp	r3, #0
   1b214:	beq	1b200 <argp_parse@@Base+0x3564>
   1b218:	mov	r1, r7
   1b21c:	ldr	r3, [sl, r9, lsl #4]
   1b220:	ldr	r2, [sp, #104]	; 0x68
   1b224:	bl	112a8 <fprintf@plt>
   1b228:	ldr	r0, [r5]
   1b22c:	b	1b200 <argp_parse@@Base+0x3564>
   1b230:	mov	r1, r0
   1b234:	mov	r0, #10
   1b238:	bl	11350 <fputc@plt>
   1b23c:	ldr	r0, [r5]
   1b240:	bl	111d0 <funlockfile@plt>
   1b244:	b	1afec <argp_parse@@Base+0x3350>
   1b248:	ldr	ip, [sl]
   1b24c:	movw	r0, #58328	; 0xe3d8
   1b250:	movt	r0, #2
   1b254:	movw	r1, #53508	; 0xd104
   1b258:	movt	r1, #1
   1b25c:	ldr	r3, [sp, #20]
   1b260:	ldr	r0, [r0]
   1b264:	ldr	r2, [r3]
   1b268:	str	ip, [sp]
   1b26c:	ldr	r3, [sp, #104]	; 0x68
   1b270:	bl	112a8 <fprintf@plt>
   1b274:	b	1b148 <argp_parse@@Base+0x34ac>
   1b278:	mov	r3, #1
   1b27c:	str	r3, [sp, #40]	; 0x28
   1b280:	b	1aeec <argp_parse@@Base+0x3250>
   1b284:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b288:	subs	r5, r0, #0
   1b28c:	strd	r6, [sp, #8]
   1b290:	strd	r8, [sp, #16]
   1b294:	strd	sl, [sp, #24]
   1b298:	str	lr, [sp, #32]
   1b29c:	sub	sp, sp, #36	; 0x24
   1b2a0:	ldr	r4, [sp, #80]	; 0x50
   1b2a4:	ldr	r7, [r4, #4]
   1b2a8:	ble	1b49c <argp_parse@@Base+0x3800>
   1b2ac:	mov	r6, r2
   1b2b0:	mov	sl, r3
   1b2b4:	ldr	r2, [r4]
   1b2b8:	mov	r3, #0
   1b2bc:	mov	r9, r1
   1b2c0:	str	r3, [r4, #12]
   1b2c4:	cmp	r2, r3
   1b2c8:	beq	1b544 <argp_parse@@Base+0x38a8>
   1b2cc:	ldr	r3, [r4, #16]
   1b2d0:	cmp	r3, #0
   1b2d4:	bne	1b468 <argp_parse@@Base+0x37cc>
   1b2d8:	mov	r3, #0
   1b2dc:	str	r3, [r4, #20]
   1b2e0:	str	r2, [r4, #28]
   1b2e4:	str	r2, [r4, #32]
   1b2e8:	ldrb	r2, [r6]
   1b2ec:	cmp	r2, #45	; 0x2d
   1b2f0:	moveq	r2, #2
   1b2f4:	addeq	r6, r6, #1
   1b2f8:	streq	r2, [r4, #24]
   1b2fc:	beq	1b324 <argp_parse@@Base+0x3688>
   1b300:	cmp	r2, #43	; 0x2b
   1b304:	addeq	r6, r6, #1
   1b308:	streq	r3, [r4, #24]
   1b30c:	beq	1b324 <argp_parse@@Base+0x3688>
   1b310:	ldr	r2, [sp, #84]	; 0x54
   1b314:	cmp	r2, #0
   1b318:	beq	1b674 <argp_parse@@Base+0x39d8>
   1b31c:	mov	r2, #0
   1b320:	str	r2, [r4, #24]
   1b324:	mov	r2, #1
   1b328:	str	r2, [r4, #16]
   1b32c:	ldrb	r2, [r6]
   1b330:	cmp	r2, #58	; 0x3a
   1b334:	moveq	r7, #0
   1b338:	cmp	r3, #0
   1b33c:	beq	1b3d0 <argp_parse@@Base+0x3734>
   1b340:	ldrb	r2, [r3]
   1b344:	cmp	r2, #0
   1b348:	beq	1b3d0 <argp_parse@@Base+0x3734>
   1b34c:	add	fp, r3, #1
   1b350:	mov	r0, r6
   1b354:	str	r3, [sp, #28]
   1b358:	str	fp, [r4, #20]
   1b35c:	ldrb	r8, [r3]
   1b360:	mov	r1, r8
   1b364:	str	r8, [sp, #24]
   1b368:	bl	1129c <strchr@plt>
   1b36c:	ldrd	r2, [sp, #24]
   1b370:	ldrb	r1, [r3, #1]
   1b374:	cmp	r1, #0
   1b378:	bne	1b388 <argp_parse@@Base+0x36ec>
   1b37c:	ldr	r1, [r4]
   1b380:	add	r1, r1, #1
   1b384:	str	r1, [r4]
   1b388:	sub	r1, r8, #58	; 0x3a
   1b38c:	cmp	r0, #0
   1b390:	cmpne	r1, #1
   1b394:	bls	1b6ec <argp_parse@@Base+0x3a50>
   1b398:	ldrb	ip, [r0]
   1b39c:	ldrb	r1, [r0, #1]
   1b3a0:	cmp	ip, #87	; 0x57
   1b3a4:	beq	1b5f4 <argp_parse@@Base+0x3958>
   1b3a8:	cmp	r1, #58	; 0x3a
   1b3ac:	beq	1b698 <argp_parse@@Base+0x39fc>
   1b3b0:	mov	r0, r2
   1b3b4:	add	sp, sp, #36	; 0x24
   1b3b8:	ldrd	r4, [sp]
   1b3bc:	ldrd	r6, [sp, #8]
   1b3c0:	ldrd	r8, [sp, #16]
   1b3c4:	ldrd	sl, [sp, #24]
   1b3c8:	add	sp, sp, #32
   1b3cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3d0:	ldr	r8, [r4]
   1b3d4:	ldr	r2, [r4, #28]
   1b3d8:	ldr	r3, [r4, #32]
   1b3dc:	cmp	r3, r8
   1b3e0:	ldr	r3, [r4, #24]
   1b3e4:	strgt	r8, [r4, #32]
   1b3e8:	cmp	r8, r2
   1b3ec:	movlt	r2, r8
   1b3f0:	strlt	r8, [r4, #28]
   1b3f4:	cmp	r3, #1
   1b3f8:	beq	1b4a4 <argp_parse@@Base+0x3808>
   1b3fc:	cmp	r5, r8
   1b400:	beq	1b484 <argp_parse@@Base+0x37e8>
   1b404:	ldr	r3, [r9, r8, lsl #2]
   1b408:	movw	fp, #52152	; 0xcbb8
   1b40c:	movt	fp, #1
   1b410:	mov	r1, fp
   1b414:	mov	r0, r3
   1b418:	str	r3, [sp, #24]
   1b41c:	bl	110d4 <strcmp@plt>
   1b420:	cmp	r0, #0
   1b424:	ldr	r3, [sp, #24]
   1b428:	bne	1b518 <argp_parse@@Base+0x387c>
   1b42c:	ldr	r3, [r4, #28]
   1b430:	add	r8, r8, #1
   1b434:	ldr	r2, [r4, #32]
   1b438:	str	r8, [r4]
   1b43c:	cmp	r3, r2
   1b440:	beq	1b700 <argp_parse@@Base+0x3a64>
   1b444:	cmp	r8, r2
   1b448:	beq	1b45c <argp_parse@@Base+0x37c0>
   1b44c:	mov	r0, r9
   1b450:	mov	r1, r4
   1b454:	bl	1a944 <argp_parse@@Base+0x2ca8>
   1b458:	ldr	r3, [r4, #28]
   1b45c:	str	r5, [r4]
   1b460:	str	r5, [r4, #32]
   1b464:	b	1b48c <argp_parse@@Base+0x37f0>
   1b468:	ldrb	r2, [r6]
   1b46c:	ldr	r3, [r4, #20]
   1b470:	sub	r1, r2, #43	; 0x2b
   1b474:	tst	r1, #253	; 0xfd
   1b478:	ldrbeq	r2, [r6, #1]
   1b47c:	addeq	r6, r6, #1
   1b480:	b	1b330 <argp_parse@@Base+0x3694>
   1b484:	ldr	r3, [r4, #28]
   1b488:	ldr	r5, [r4, #32]
   1b48c:	cmp	r5, r3
   1b490:	mvnne	r2, #0
   1b494:	strne	r3, [r4]
   1b498:	bne	1b3b0 <argp_parse@@Base+0x3714>
   1b49c:	mvn	r2, #0
   1b4a0:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b4a4:	ldr	r3, [r4, #32]
   1b4a8:	cmp	r3, r2
   1b4ac:	beq	1b6d8 <argp_parse@@Base+0x3a3c>
   1b4b0:	cmp	r8, r3
   1b4b4:	beq	1b4c8 <argp_parse@@Base+0x382c>
   1b4b8:	mov	r1, r4
   1b4bc:	mov	r0, r9
   1b4c0:	bl	1a944 <argp_parse@@Base+0x2ca8>
   1b4c4:	ldr	r3, [r4]
   1b4c8:	cmp	r5, r3
   1b4cc:	ble	1b504 <argp_parse@@Base+0x3868>
   1b4d0:	add	r1, r9, r3, lsl #2
   1b4d4:	b	1b4e8 <argp_parse@@Base+0x384c>
   1b4d8:	add	r3, r3, #1
   1b4dc:	cmp	r3, r5
   1b4e0:	str	r3, [r4]
   1b4e4:	beq	1b504 <argp_parse@@Base+0x3868>
   1b4e8:	ldr	r2, [r1], #4
   1b4ec:	ldrb	r0, [r2]
   1b4f0:	cmp	r0, #45	; 0x2d
   1b4f4:	bne	1b4d8 <argp_parse@@Base+0x383c>
   1b4f8:	ldrb	r2, [r2, #1]
   1b4fc:	cmp	r2, #0
   1b500:	beq	1b4d8 <argp_parse@@Base+0x383c>
   1b504:	mov	r8, r3
   1b508:	str	r3, [r4, #32]
   1b50c:	cmp	r5, r8
   1b510:	bne	1b404 <argp_parse@@Base+0x3768>
   1b514:	b	1b484 <argp_parse@@Base+0x37e8>
   1b518:	ldrb	r2, [r3]
   1b51c:	cmp	r2, #45	; 0x2d
   1b520:	beq	1b554 <argp_parse@@Base+0x38b8>
   1b524:	ldr	r2, [r4, #24]
   1b528:	cmp	r2, #0
   1b52c:	beq	1b49c <argp_parse@@Base+0x3800>
   1b530:	add	r8, r8, #1
   1b534:	mov	r2, #1
   1b538:	str	r8, [r4]
   1b53c:	str	r3, [r4, #12]
   1b540:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b544:	mov	r3, #1
   1b548:	mov	r2, r3
   1b54c:	str	r3, [r4]
   1b550:	b	1b2d8 <argp_parse@@Base+0x363c>
   1b554:	ldrb	r1, [r3, #1]
   1b558:	cmp	r1, #0
   1b55c:	beq	1b524 <argp_parse@@Base+0x3888>
   1b560:	cmp	sl, #0
   1b564:	beq	1b5ec <argp_parse@@Base+0x3950>
   1b568:	cmp	r1, #45	; 0x2d
   1b56c:	beq	1b784 <argp_parse@@Base+0x3ae8>
   1b570:	ldr	r2, [sp, #76]	; 0x4c
   1b574:	cmp	r2, #0
   1b578:	beq	1b5ec <argp_parse@@Base+0x3950>
   1b57c:	ldrb	r2, [r3, #2]
   1b580:	cmp	r2, #0
   1b584:	bne	1b5a0 <argp_parse@@Base+0x3904>
   1b588:	mov	r0, r6
   1b58c:	str	r3, [sp, #24]
   1b590:	bl	1129c <strchr@plt>
   1b594:	cmp	r0, #0
   1b598:	ldr	r3, [sp, #24]
   1b59c:	bne	1b5ec <argp_parse@@Base+0x3950>
   1b5a0:	ldr	r2, [sp, #72]	; 0x48
   1b5a4:	add	ip, r3, #1
   1b5a8:	movw	r0, #53564	; 0xd13c
   1b5ac:	movt	r0, #1
   1b5b0:	mov	r3, sl
   1b5b4:	ldr	r1, [sp, #76]	; 0x4c
   1b5b8:	str	r2, [sp]
   1b5bc:	mov	r2, r6
   1b5c0:	str	r0, [sp, #16]
   1b5c4:	mov	r0, r5
   1b5c8:	stmib	sp, {r1, r4, r7}
   1b5cc:	mov	r1, r9
   1b5d0:	str	ip, [r4, #20]
   1b5d4:	bl	1abac <argp_parse@@Base+0x2f10>
   1b5d8:	cmn	r0, #1
   1b5dc:	mov	r2, r0
   1b5e0:	bne	1b3b0 <argp_parse@@Base+0x3714>
   1b5e4:	ldr	r3, [r4]
   1b5e8:	ldr	r3, [r9, r3, lsl #2]
   1b5ec:	add	r3, r3, #1
   1b5f0:	b	1b34c <argp_parse@@Base+0x36b0>
   1b5f4:	sub	ip, r1, #59	; 0x3b
   1b5f8:	cmp	sl, #0
   1b5fc:	clz	ip, ip
   1b600:	lsr	ip, ip, #5
   1b604:	moveq	ip, #0
   1b608:	cmp	ip, #0
   1b60c:	beq	1b3a8 <argp_parse@@Base+0x370c>
   1b610:	ldrb	r3, [r3, #1]
   1b614:	cmp	r3, #0
   1b618:	bne	1b62c <argp_parse@@Base+0x3990>
   1b61c:	ldr	r3, [r4]
   1b620:	cmp	r3, r5
   1b624:	beq	1b7b8 <argp_parse@@Base+0x3b1c>
   1b628:	ldr	fp, [r9, r3, lsl #2]
   1b62c:	mov	lr, #0
   1b630:	movw	ip, #53640	; 0xd188
   1b634:	movt	ip, #1
   1b638:	ldr	r3, [sp, #72]	; 0x48
   1b63c:	mov	r2, r6
   1b640:	mov	r1, r9
   1b644:	mov	r0, r5
   1b648:	str	r3, [sp]
   1b64c:	mov	r3, sl
   1b650:	str	r4, [sp, #8]
   1b654:	str	r7, [sp, #12]
   1b658:	str	ip, [sp, #16]
   1b65c:	str	fp, [r4, #20]
   1b660:	str	lr, [sp, #4]
   1b664:	str	lr, [r4, #12]
   1b668:	bl	1abac <argp_parse@@Base+0x2f10>
   1b66c:	mov	r2, r0
   1b670:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b674:	movw	r0, #53548	; 0xd12c
   1b678:	movt	r0, #1
   1b67c:	bl	11200 <getenv@plt>
   1b680:	cmp	r0, #0
   1b684:	ldr	r3, [r4, #20]
   1b688:	bne	1b31c <argp_parse@@Base+0x3680>
   1b68c:	mov	r2, #1
   1b690:	str	r2, [r4, #24]
   1b694:	b	1b324 <argp_parse@@Base+0x3688>
   1b698:	ldrb	r1, [r0, #2]
   1b69c:	ldrb	r3, [r3, #1]
   1b6a0:	cmp	r1, #58	; 0x3a
   1b6a4:	beq	1b740 <argp_parse@@Base+0x3aa4>
   1b6a8:	cmp	r3, #0
   1b6ac:	ldr	r3, [r4]
   1b6b0:	bne	1b70c <argp_parse@@Base+0x3a70>
   1b6b4:	cmp	r5, r3
   1b6b8:	beq	1b764 <argp_parse@@Base+0x3ac8>
   1b6bc:	ldr	r1, [r9, r3, lsl #2]
   1b6c0:	add	r3, r3, #1
   1b6c4:	str	r3, [r4]
   1b6c8:	str	r1, [r4, #12]
   1b6cc:	mov	r3, #0
   1b6d0:	str	r3, [r4, #20]
   1b6d4:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b6d8:	cmp	r8, r2
   1b6dc:	movne	r3, r8
   1b6e0:	moveq	r3, r2
   1b6e4:	strne	r8, [r4, #28]
   1b6e8:	b	1b4c8 <argp_parse@@Base+0x382c>
   1b6ec:	cmp	r7, #0
   1b6f0:	bne	1b71c <argp_parse@@Base+0x3a80>
   1b6f4:	mov	r2, #63	; 0x3f
   1b6f8:	str	r8, [r4, #8]
   1b6fc:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b700:	mov	r3, r8
   1b704:	str	r8, [r4, #28]
   1b708:	b	1b45c <argp_parse@@Base+0x37c0>
   1b70c:	add	r3, r3, #1
   1b710:	str	r3, [r4]
   1b714:	str	fp, [r4, #12]
   1b718:	b	1b6cc <argp_parse@@Base+0x3a30>
   1b71c:	movw	r0, #58328	; 0xe3d8
   1b720:	movt	r0, #2
   1b724:	ldr	r2, [r9]
   1b728:	movw	r1, #53568	; 0xd140
   1b72c:	movt	r1, #1
   1b730:	mov	r3, r8
   1b734:	ldr	r0, [r0]
   1b738:	bl	112a8 <fprintf@plt>
   1b73c:	b	1b6f4 <argp_parse@@Base+0x3a58>
   1b740:	cmp	r3, #0
   1b744:	ldrne	r3, [r4]
   1b748:	moveq	fp, r3
   1b74c:	str	fp, [r4, #12]
   1b750:	addne	r3, r3, #1
   1b754:	strne	r3, [r4]
   1b758:	mov	r3, #0
   1b75c:	str	r3, [r4, #20]
   1b760:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b764:	cmp	r7, #0
   1b768:	bne	1b7d8 <argp_parse@@Base+0x3b3c>
   1b76c:	str	r8, [r4, #8]
   1b770:	ldrb	r3, [r6]
   1b774:	cmp	r3, #58	; 0x3a
   1b778:	moveq	r2, #58	; 0x3a
   1b77c:	movne	r2, #63	; 0x3f
   1b780:	b	1b6cc <argp_parse@@Base+0x3a30>
   1b784:	ldr	r2, [sp, #72]	; 0x48
   1b788:	add	ip, r3, #2
   1b78c:	mov	r1, r9
   1b790:	mov	r3, sl
   1b794:	ldr	r0, [sp, #76]	; 0x4c
   1b798:	str	r2, [sp]
   1b79c:	mov	r2, r6
   1b7a0:	stmib	sp, {r0, r4, r7, fp}
   1b7a4:	mov	r0, r5
   1b7a8:	str	ip, [r4, #20]
   1b7ac:	bl	1abac <argp_parse@@Base+0x2f10>
   1b7b0:	mov	r2, r0
   1b7b4:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b7b8:	cmp	r7, #0
   1b7bc:	bne	1b7fc <argp_parse@@Base+0x3b60>
   1b7c0:	str	r8, [r4, #8]
   1b7c4:	ldrb	r3, [r6]
   1b7c8:	cmp	r3, #58	; 0x3a
   1b7cc:	moveq	r2, #58	; 0x3a
   1b7d0:	movne	r2, #63	; 0x3f
   1b7d4:	b	1b3b0 <argp_parse@@Base+0x3714>
   1b7d8:	movw	r0, #58328	; 0xe3d8
   1b7dc:	movt	r0, #2
   1b7e0:	ldr	r2, [r9]
   1b7e4:	movw	r1, #53596	; 0xd15c
   1b7e8:	movt	r1, #1
   1b7ec:	mov	r3, r8
   1b7f0:	ldr	r0, [r0]
   1b7f4:	bl	112a8 <fprintf@plt>
   1b7f8:	b	1b76c <argp_parse@@Base+0x3ad0>
   1b7fc:	movw	r0, #58328	; 0xe3d8
   1b800:	movt	r0, #2
   1b804:	ldr	r2, [r9]
   1b808:	movw	r1, #53596	; 0xd15c
   1b80c:	movt	r1, #1
   1b810:	mov	r3, r8
   1b814:	ldr	r0, [r0]
   1b818:	bl	112a8 <fprintf@plt>
   1b81c:	b	1b7c0 <argp_parse@@Base+0x3b24>
   1b820:	strd	r4, [sp, #-16]!
   1b824:	movw	r5, #58304	; 0xe3c0
   1b828:	movt	r5, #2
   1b82c:	str	r6, [sp, #8]
   1b830:	movw	r4, #58400	; 0xe420
   1b834:	movt	r4, #2
   1b838:	str	lr, [sp, #12]
   1b83c:	sub	sp, sp, #16
   1b840:	ldr	lr, [sp, #32]
   1b844:	ldr	ip, [r5]
   1b848:	ldr	r6, [sp, #36]	; 0x24
   1b84c:	str	lr, [sp]
   1b850:	ldr	lr, [sp, #40]	; 0x28
   1b854:	str	ip, [r4]
   1b858:	ldr	ip, [r5, #4]
   1b85c:	str	r6, [sp, #4]
   1b860:	str	r4, [sp, #8]
   1b864:	str	lr, [sp, #12]
   1b868:	str	ip, [r4, #4]
   1b86c:	bl	1b284 <argp_parse@@Base+0x35e8>
   1b870:	ldr	ip, [r4]
   1b874:	movw	r3, #58464	; 0xe460
   1b878:	movt	r3, #2
   1b87c:	ldr	r1, [r4, #8]
   1b880:	ldr	r2, [r4, #12]
   1b884:	str	ip, [r5]
   1b888:	str	r1, [r5, #8]
   1b88c:	str	r2, [r3]
   1b890:	add	sp, sp, #16
   1b894:	ldrd	r4, [sp]
   1b898:	ldr	r6, [sp, #8]
   1b89c:	add	sp, sp, #12
   1b8a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b8a8:	movw	r4, #58400	; 0xe420
   1b8ac:	movt	r4, #2
   1b8b0:	strd	r6, [sp, #8]
   1b8b4:	movw	r6, #58304	; 0xe3c0
   1b8b8:	movt	r6, #2
   1b8bc:	strd	r8, [sp, #16]
   1b8c0:	subs	r9, r0, #0
   1b8c4:	strd	sl, [sp, #24]
   1b8c8:	ldm	r6, {r5, sl}
   1b8cc:	str	lr, [sp, #32]
   1b8d0:	sub	sp, sp, #20
   1b8d4:	str	r1, [sp, #4]
   1b8d8:	stm	r4, {r5, sl}
   1b8dc:	ble	1bcb0 <argp_parse@@Base+0x4014>
   1b8e0:	mov	r3, #0
   1b8e4:	mov	r8, r2
   1b8e8:	cmp	r5, r3
   1b8ec:	str	r3, [r4, #12]
   1b8f0:	beq	1b9c0 <argp_parse@@Base+0x3d24>
   1b8f4:	ldr	r3, [r4, #16]
   1b8f8:	cmp	r3, #0
   1b8fc:	beq	1b9cc <argp_parse@@Base+0x3d30>
   1b900:	ldrb	r3, [r2]
   1b904:	sub	r2, r3, #43	; 0x2b
   1b908:	tst	r2, #253	; 0xfd
   1b90c:	ldrbeq	r3, [r8, #1]
   1b910:	addeq	r8, r8, #1
   1b914:	cmp	r3, #58	; 0x3a
   1b918:	ldr	r3, [r4, #20]
   1b91c:	moveq	sl, #0
   1b920:	cmp	r3, #0
   1b924:	beq	1ba0c <argp_parse@@Base+0x3d70>
   1b928:	ldrb	r2, [r3]
   1b92c:	cmp	r2, #0
   1b930:	beq	1ba0c <argp_parse@@Base+0x3d70>
   1b934:	add	r7, r3, #1
   1b938:	mov	r0, r8
   1b93c:	str	r3, [sp, #12]
   1b940:	str	r7, [r4, #20]
   1b944:	ldrb	fp, [r3]
   1b948:	mov	r1, fp
   1b94c:	str	fp, [sp, #8]
   1b950:	bl	1129c <strchr@plt>
   1b954:	ldrd	r2, [sp, #8]
   1b958:	ldrb	r1, [r3, #1]
   1b95c:	cmp	r1, #0
   1b960:	sub	r1, fp, #58	; 0x3a
   1b964:	addeq	r5, r5, #1
   1b968:	streq	r5, [r4]
   1b96c:	cmp	r0, #0
   1b970:	cmpne	r1, #1
   1b974:	bls	1bbd8 <argp_parse@@Base+0x3f3c>
   1b978:	ldrb	r1, [r0, #1]
   1b97c:	cmp	r1, #58	; 0x3a
   1b980:	beq	1bbf4 <argp_parse@@Base+0x3f58>
   1b984:	ldr	r1, [r4, #8]
   1b988:	ldr	r7, [r4, #12]
   1b98c:	mov	r0, r2
   1b990:	movw	r3, #58464	; 0xe460
   1b994:	movt	r3, #2
   1b998:	str	r5, [r6]
   1b99c:	str	r1, [r6, #8]
   1b9a0:	str	r7, [r3]
   1b9a4:	add	sp, sp, #20
   1b9a8:	ldrd	r4, [sp]
   1b9ac:	ldrd	r6, [sp, #8]
   1b9b0:	ldrd	r8, [sp, #16]
   1b9b4:	ldrd	sl, [sp, #24]
   1b9b8:	add	sp, sp, #32
   1b9bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9c0:	mov	r3, #1
   1b9c4:	mov	r5, r3
   1b9c8:	str	r3, [r4]
   1b9cc:	mov	r3, #0
   1b9d0:	str	r3, [r4, #20]
   1b9d4:	str	r5, [r4, #28]
   1b9d8:	str	r5, [r4, #32]
   1b9dc:	ldrb	r2, [r8]
   1b9e0:	cmp	r2, #45	; 0x2d
   1b9e4:	beq	1bab4 <argp_parse@@Base+0x3e18>
   1b9e8:	cmp	r2, #43	; 0x2b
   1b9ec:	mov	r1, r3
   1b9f0:	str	r3, [r4, #24]
   1b9f4:	addeq	r8, r8, #1
   1b9f8:	mov	r3, #1
   1b9fc:	str	r3, [r4, #16]
   1ba00:	ldrb	r3, [r8]
   1ba04:	cmp	r3, #58	; 0x3a
   1ba08:	beq	1baf8 <argp_parse@@Base+0x3e5c>
   1ba0c:	mov	r2, r5
   1ba10:	ldr	r1, [r4, #24]
   1ba14:	ldr	r3, [r4, #32]
   1ba18:	ldr	r0, [r4, #28]
   1ba1c:	cmp	r3, r5
   1ba20:	movgt	r3, r5
   1ba24:	strgt	r5, [r4, #32]
   1ba28:	cmp	r5, r0
   1ba2c:	movge	r5, r0
   1ba30:	strlt	r5, [r4, #28]
   1ba34:	cmp	r1, #1
   1ba38:	beq	1bb0c <argp_parse@@Base+0x3e70>
   1ba3c:	cmp	r9, r2
   1ba40:	beq	1bb80 <argp_parse@@Base+0x3ee4>
   1ba44:	ldr	fp, [sp, #4]
   1ba48:	movw	r1, #52152	; 0xcbb8
   1ba4c:	movt	r1, #1
   1ba50:	strd	r2, [sp, #8]
   1ba54:	ldr	r7, [fp, r2, lsl #2]
   1ba58:	mov	r0, r7
   1ba5c:	bl	110d4 <strcmp@plt>
   1ba60:	cmp	r0, #0
   1ba64:	ldr	r2, [sp, #8]
   1ba68:	bne	1bac8 <argp_parse@@Base+0x3e2c>
   1ba6c:	ldr	r3, [sp, #12]
   1ba70:	add	r2, r2, #1
   1ba74:	ldr	r5, [r4, #28]
   1ba78:	str	r2, [r4]
   1ba7c:	cmp	r5, r3
   1ba80:	beq	1bc3c <argp_parse@@Base+0x3fa0>
   1ba84:	cmp	r2, r3
   1ba88:	beq	1baa0 <argp_parse@@Base+0x3e04>
   1ba8c:	mov	r0, fp
   1ba90:	movw	r1, #58400	; 0xe420
   1ba94:	movt	r1, #2
   1ba98:	bl	1a944 <argp_parse@@Base+0x2ca8>
   1ba9c:	ldr	r5, [r4, #28]
   1baa0:	mov	r2, r9
   1baa4:	mov	r3, r9
   1baa8:	str	r9, [r4]
   1baac:	str	r9, [r4, #32]
   1bab0:	b	1bb84 <argp_parse@@Base+0x3ee8>
   1bab4:	mov	r3, #2
   1bab8:	add	r8, r8, #1
   1babc:	mov	r1, r3
   1bac0:	str	r3, [r4, #24]
   1bac4:	b	1b9f8 <argp_parse@@Base+0x3d5c>
   1bac8:	ldrb	r3, [r7]
   1bacc:	cmp	r3, #45	; 0x2d
   1bad0:	beq	1bba4 <argp_parse@@Base+0x3f08>
   1bad4:	ldr	r3, [r4, #24]
   1bad8:	cmp	r3, #0
   1badc:	beq	1bcac <argp_parse@@Base+0x4010>
   1bae0:	add	r5, r2, #1
   1bae4:	mov	r2, #1
   1bae8:	ldr	r1, [r4, #8]
   1baec:	str	r5, [r4]
   1baf0:	str	r7, [r4, #12]
   1baf4:	b	1b98c <argp_parse@@Base+0x3cf0>
   1baf8:	cmp	r1, #1
   1bafc:	mov	r3, r5
   1bb00:	mov	r2, r5
   1bb04:	mov	sl, #0
   1bb08:	bne	1ba3c <argp_parse@@Base+0x3da0>
   1bb0c:	cmp	r5, r3
   1bb10:	beq	1bbbc <argp_parse@@Base+0x3f20>
   1bb14:	cmp	r2, r3
   1bb18:	beq	1bb30 <argp_parse@@Base+0x3e94>
   1bb1c:	movw	r1, #58400	; 0xe420
   1bb20:	movt	r1, #2
   1bb24:	ldr	r0, [sp, #4]
   1bb28:	bl	1a944 <argp_parse@@Base+0x2ca8>
   1bb2c:	ldr	r3, [r4]
   1bb30:	cmp	r9, r3
   1bb34:	ble	1bb70 <argp_parse@@Base+0x3ed4>
   1bb38:	ldr	r2, [sp, #4]
   1bb3c:	add	r1, r2, r3, lsl #2
   1bb40:	b	1bb54 <argp_parse@@Base+0x3eb8>
   1bb44:	add	r3, r3, #1
   1bb48:	cmp	r9, r3
   1bb4c:	str	r3, [r4]
   1bb50:	beq	1bbd0 <argp_parse@@Base+0x3f34>
   1bb54:	ldr	r2, [r1], #4
   1bb58:	ldrb	r0, [r2]
   1bb5c:	cmp	r0, #45	; 0x2d
   1bb60:	bne	1bb44 <argp_parse@@Base+0x3ea8>
   1bb64:	ldrb	r2, [r2, #1]
   1bb68:	cmp	r2, #0
   1bb6c:	beq	1bb44 <argp_parse@@Base+0x3ea8>
   1bb70:	mov	r2, r3
   1bb74:	cmp	r9, r2
   1bb78:	str	r3, [r4, #32]
   1bb7c:	bne	1ba44 <argp_parse@@Base+0x3da8>
   1bb80:	ldr	r5, [r4, #28]
   1bb84:	cmp	r3, r5
   1bb88:	moveq	r5, r2
   1bb8c:	mvnne	r2, #0
   1bb90:	ldr	r1, [r4, #8]
   1bb94:	strne	r5, [r4]
   1bb98:	mvneq	r2, #0
   1bb9c:	ldr	r7, [r4, #12]
   1bba0:	b	1b98c <argp_parse@@Base+0x3cf0>
   1bba4:	ldrb	r3, [r7, #1]
   1bba8:	cmp	r3, #0
   1bbac:	beq	1bad4 <argp_parse@@Base+0x3e38>
   1bbb0:	add	r3, r7, #1
   1bbb4:	mov	r5, r2
   1bbb8:	b	1b934 <argp_parse@@Base+0x3c98>
   1bbbc:	cmp	r2, r3
   1bbc0:	beq	1bb30 <argp_parse@@Base+0x3e94>
   1bbc4:	mov	r3, r2
   1bbc8:	str	r2, [r4, #28]
   1bbcc:	b	1bb30 <argp_parse@@Base+0x3e94>
   1bbd0:	mov	r2, r9
   1bbd4:	b	1bb74 <argp_parse@@Base+0x3ed8>
   1bbd8:	cmp	sl, #0
   1bbdc:	bne	1bc5c <argp_parse@@Base+0x3fc0>
   1bbe0:	mov	r1, fp
   1bbe4:	mov	r2, #63	; 0x3f
   1bbe8:	str	fp, [r4, #8]
   1bbec:	ldr	r7, [r4, #12]
   1bbf0:	b	1b98c <argp_parse@@Base+0x3cf0>
   1bbf4:	ldrb	r1, [r0, #2]
   1bbf8:	ldrb	r3, [r3, #1]
   1bbfc:	cmp	r1, #58	; 0x3a
   1bc00:	beq	1bc88 <argp_parse@@Base+0x3fec>
   1bc04:	cmp	r3, #0
   1bc08:	bne	1bc48 <argp_parse@@Base+0x3fac>
   1bc0c:	cmp	r9, r5
   1bc10:	beq	1bcb8 <argp_parse@@Base+0x401c>
   1bc14:	ldr	r3, [sp, #4]
   1bc18:	ldr	r1, [r4, #8]
   1bc1c:	ldr	r7, [r3, r5, lsl #2]
   1bc20:	add	r3, r5, #1
   1bc24:	mov	r5, r3
   1bc28:	str	r3, [r4]
   1bc2c:	str	r7, [r4, #12]
   1bc30:	mov	r3, #0
   1bc34:	str	r3, [r4, #20]
   1bc38:	b	1b98c <argp_parse@@Base+0x3cf0>
   1bc3c:	mov	r5, r2
   1bc40:	str	r2, [r4, #28]
   1bc44:	b	1baa0 <argp_parse@@Base+0x3e04>
   1bc48:	add	r5, r5, #1
   1bc4c:	ldr	r1, [r4, #8]
   1bc50:	str	r5, [r4]
   1bc54:	str	r7, [r4, #12]
   1bc58:	b	1bc30 <argp_parse@@Base+0x3f94>
   1bc5c:	ldr	r3, [sp, #4]
   1bc60:	movw	r0, #58328	; 0xe3d8
   1bc64:	movt	r0, #2
   1bc68:	movw	r1, #53568	; 0xd140
   1bc6c:	movt	r1, #1
   1bc70:	ldr	r0, [r0]
   1bc74:	ldr	r2, [r3]
   1bc78:	mov	r3, fp
   1bc7c:	bl	112a8 <fprintf@plt>
   1bc80:	ldr	r5, [r4]
   1bc84:	b	1bbe0 <argp_parse@@Base+0x3f44>
   1bc88:	cmp	r3, #0
   1bc8c:	ldr	r1, [r4, #8]
   1bc90:	moveq	r7, r3
   1bc94:	addne	r5, r5, #1
   1bc98:	mov	r3, #0
   1bc9c:	strne	r5, [r4]
   1bca0:	str	r7, [r4, #12]
   1bca4:	str	r3, [r4, #20]
   1bca8:	b	1b98c <argp_parse@@Base+0x3cf0>
   1bcac:	mov	r5, r2
   1bcb0:	mvn	r2, #0
   1bcb4:	b	1b984 <argp_parse@@Base+0x3ce8>
   1bcb8:	cmp	sl, #0
   1bcbc:	bne	1bce0 <argp_parse@@Base+0x4044>
   1bcc0:	str	fp, [r4, #8]
   1bcc4:	mov	r1, fp
   1bcc8:	ldrb	r3, [r8]
   1bccc:	ldr	r7, [r4, #12]
   1bcd0:	cmp	r3, #58	; 0x3a
   1bcd4:	moveq	r2, #58	; 0x3a
   1bcd8:	movne	r2, #63	; 0x3f
   1bcdc:	b	1bc30 <argp_parse@@Base+0x3f94>
   1bce0:	ldr	r3, [sp, #4]
   1bce4:	movw	r0, #58328	; 0xe3d8
   1bce8:	movt	r0, #2
   1bcec:	movw	r1, #53596	; 0xd15c
   1bcf0:	movt	r1, #1
   1bcf4:	ldr	r0, [r0]
   1bcf8:	ldr	r2, [r3]
   1bcfc:	mov	r3, fp
   1bd00:	bl	112a8 <fprintf@plt>
   1bd04:	ldr	r5, [r4]
   1bd08:	b	1bcc0 <argp_parse@@Base+0x4024>
   1bd0c:	umull	r2, r3, r1, r2
   1bd10:	cmp	r3, #0
   1bd14:	bne	1bd20 <argp_parse@@Base+0x4084>
   1bd18:	mov	r1, r2
   1bd1c:	b	1a0fc <argp_parse@@Base+0x2460>
   1bd20:	str	r4, [sp, #-8]!
   1bd24:	str	lr, [sp, #4]
   1bd28:	bl	112b4 <__errno_location@plt>
   1bd2c:	mov	r3, #12
   1bd30:	ldr	r4, [sp]
   1bd34:	add	sp, sp, #4
   1bd38:	str	r3, [r0]
   1bd3c:	mov	r0, #0
   1bd40:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bd48:	mov	r7, r0
   1bd4c:	ldr	r6, [pc, #72]	; 1bd9c <argp_parse@@Base+0x4100>
   1bd50:	ldr	r5, [pc, #72]	; 1bda0 <argp_parse@@Base+0x4104>
   1bd54:	add	r6, pc, r6
   1bd58:	add	r5, pc, r5
   1bd5c:	sub	r6, r6, r5
   1bd60:	mov	r8, r1
   1bd64:	mov	r9, r2
   1bd68:	bl	11090 <calloc@plt-0x20>
   1bd6c:	asrs	r6, r6, #2
   1bd70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd74:	mov	r4, #0
   1bd78:	add	r4, r4, #1
   1bd7c:	ldr	r3, [r5], #4
   1bd80:	mov	r2, r9
   1bd84:	mov	r1, r8
   1bd88:	mov	r0, r7
   1bd8c:	blx	r3
   1bd90:	cmp	r6, r4
   1bd94:	bne	1bd78 <argp_parse@@Base+0x40dc>
   1bd98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd9c:			; <UNDEFINED> instruction: 0x000121b8
   1bda0:			; <UNDEFINED> instruction: 0x000121b0
   1bda4:	bx	lr

Disassembly of section .fini:

0001bda8 <.fini>:
   1bda8:	push	{r3, lr}
   1bdac:	pop	{r3, pc}
