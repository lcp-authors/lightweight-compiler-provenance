
../repos/inetutils/src/rexecd:     file format elf32-littlearm


Disassembly of section .init:

0001124c <.init>:
   1124c:	push	{r3, lr}
   11250:	bl	11748 <__assert_fail@plt+0x140>
   11254:	pop	{r3, pc}

Disassembly of section .plt:

00011258 <calloc@plt-0x14>:
   11258:	push	{lr}		; (str lr, [sp, #-4]!)
   1125c:	ldr	lr, [pc, #4]	; 11268 <calloc@plt-0x4>
   11260:	add	lr, pc, lr
   11264:	ldr	pc, [lr, #8]!
   11268:	muleq	r1, r8, sp

0001126c <calloc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3480]!	; 0xd98

00011278 <fputs_unlocked@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3472]!	; 0xd90

00011284 <raise@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3464]!	; 0xd88

00011290 <strcmp@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3456]!	; 0xd80

0001129c <strtol@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3448]!	; 0xd78

000112a8 <setsockopt@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3440]!	; 0xd70

000112b4 <printf@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3432]!	; 0xd68

000112c0 <read@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3424]!	; 0xd60

000112cc <getspnam@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3416]!	; 0xd58

000112d8 <memmove@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3408]!	; 0xd50

000112e4 <strchrnul@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3400]!	; 0xd48

000112f0 <free@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3392]!	; 0xd40

000112fc <strndup@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3384]!	; 0xd38

00011308 <memcpy@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3376]!	; 0xd30

00011314 <signal@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3368]!	; 0xd28

00011320 <fwrite_unlocked@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3360]!	; 0xd20

0001132c <select@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3352]!	; 0xd18

00011338 <sleep@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3344]!	; 0xd10

00011344 <alarm@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3336]!	; 0xd08

00011350 <sysconf@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3328]!	; 0xd00

0001135c <dup2@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3320]!	; 0xcf8

00011368 <realloc@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3312]!	; 0xcf0

00011374 <killpg@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3304]!	; 0xce8

00011380 <initgroups@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3296]!	; 0xce0

0001138c <chdir@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #24, 20	; 0x18000
   11394:	ldr	pc, [ip, #3288]!	; 0xcd8

00011398 <strcasecmp@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #24, 20	; 0x18000
   113a0:	ldr	pc, [ip, #3280]!	; 0xcd0

000113a4 <funlockfile@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #24, 20	; 0x18000
   113ac:	ldr	pc, [ip, #3272]!	; 0xcc8

000113b0 <fwrite@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #24, 20	; 0x18000
   113b8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113bc <ioctl@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #24, 20	; 0x18000
   113c4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113c8 <error@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #24, 20	; 0x18000
   113d0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113d4 <getenv@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #24, 20	; 0x18000
   113dc:	ldr	pc, [ip, #3240]!	; 0xca8

000113e0 <setgid@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #24, 20	; 0x18000
   113e8:	ldr	pc, [ip, #3232]!	; 0xca0

000113ec <malloc@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #24, 20	; 0x18000
   113f4:	ldr	pc, [ip, #3224]!	; 0xc98

000113f8 <__libc_start_main@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #24, 20	; 0x18000
   11400:	ldr	pc, [ip, #3216]!	; 0xc90

00011404 <strerror@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #24, 20	; 0x18000
   1140c:	ldr	pc, [ip, #3208]!	; 0xc88

00011410 <__ctype_tolower_loc@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #24, 20	; 0x18000
   11418:	ldr	pc, [ip, #3200]!	; 0xc80

0001141c <__gmon_start__@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #24, 20	; 0x18000
   11424:	ldr	pc, [ip, #3192]!	; 0xc78

00011428 <mempcpy@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #24, 20	; 0x18000
   11430:	ldr	pc, [ip, #3184]!	; 0xc70

00011434 <__ctype_b_loc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #24, 20	; 0x18000
   1143c:	ldr	pc, [ip, #3176]!	; 0xc68

00011440 <getpid@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #24, 20	; 0x18000
   11448:	ldr	pc, [ip, #3168]!	; 0xc60

0001144c <exit@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #24, 20	; 0x18000
   11454:	ldr	pc, [ip, #3160]!	; 0xc58

00011458 <strlen@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #24, 20	; 0x18000
   11460:	ldr	pc, [ip, #3152]!	; 0xc50

00011464 <strchr@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #24, 20	; 0x18000
   1146c:	ldr	pc, [ip, #3144]!	; 0xc48

00011470 <getpwnam_r@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #24, 20	; 0x18000
   11478:	ldr	pc, [ip, #3136]!	; 0xc40

0001147c <fprintf@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #24, 20	; 0x18000
   11484:	ldr	pc, [ip, #3128]!	; 0xc38

00011488 <setpwent@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #24, 20	; 0x18000
   11490:	ldr	pc, [ip, #3120]!	; 0xc30

00011494 <__errno_location@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #24, 20	; 0x18000
   1149c:	ldr	pc, [ip, #3112]!	; 0xc28

000114a0 <strerror_r@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #24, 20	; 0x18000
   114a8:	ldr	pc, [ip, #3104]!	; 0xc20

000114ac <memset@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #24, 20	; 0x18000
   114b4:	ldr	pc, [ip, #3096]!	; 0xc18

000114b8 <strncpy@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #24, 20	; 0x18000
   114c0:	ldr	pc, [ip, #3088]!	; 0xc10

000114c4 <write@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #24, 20	; 0x18000
   114cc:	ldr	pc, [ip, #3080]!	; 0xc08

000114d0 <memchr@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #3072]!	; 0xc00

000114dc <pipe@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114e8 <shutdown@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114f4 <__overflow@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #3048]!	; 0xbe8

00011500 <fork@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #3040]!	; 0xbe0

0001150c <getnameinfo@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #3032]!	; 0xbd8

00011518 <endpwent@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #3024]!	; 0xbd0

00011524 <execl@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #24, 20	; 0x18000
   1152c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011530 <strrchr@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #24, 20	; 0x18000
   11538:	ldr	pc, [ip, #3008]!	; 0xbc0

0001153c <vfprintf@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #24, 20	; 0x18000
   11544:	ldr	pc, [ip, #3000]!	; 0xbb8

00011548 <crypt@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #24, 20	; 0x18000
   11550:	ldr	pc, [ip, #2992]!	; 0xbb0

00011554 <fputc@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #24, 20	; 0x18000
   1155c:	ldr	pc, [ip, #2984]!	; 0xba8

00011560 <syslog@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #24, 20	; 0x18000
   11568:	ldr	pc, [ip, #2976]!	; 0xba0

0001156c <setuid@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #24, 20	; 0x18000
   11574:	ldr	pc, [ip, #2968]!	; 0xb98

00011578 <setpgid@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #24, 20	; 0x18000
   11580:	ldr	pc, [ip, #2960]!	; 0xb90

00011584 <openlog@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #24, 20	; 0x18000
   1158c:	ldr	pc, [ip, #2952]!	; 0xb88

00011590 <flockfile@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #24, 20	; 0x18000
   11598:	ldr	pc, [ip, #2944]!	; 0xb80

0001159c <vsnprintf@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #24, 20	; 0x18000
   115a4:	ldr	pc, [ip, #2936]!	; 0xb78

000115a8 <qsort@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #24, 20	; 0x18000
   115b0:	ldr	pc, [ip, #2928]!	; 0xb70

000115b4 <getpeername@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #24, 20	; 0x18000
   115bc:	ldr	pc, [ip, #2920]!	; 0xb68

000115c0 <socket@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #24, 20	; 0x18000
   115c8:	ldr	pc, [ip, #2912]!	; 0xb60

000115cc <strncat@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #24, 20	; 0x18000
   115d4:	ldr	pc, [ip, #2904]!	; 0xb58

000115d8 <strncmp@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #24, 20	; 0x18000
   115e0:	ldr	pc, [ip, #2896]!	; 0xb50

000115e4 <abort@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #24, 20	; 0x18000
   115ec:	ldr	pc, [ip, #2888]!	; 0xb48

000115f0 <close@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #24, 20	; 0x18000
   115f8:	ldr	pc, [ip, #2880]!	; 0xb40

000115fc <connect@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #24, 20	; 0x18000
   11604:	ldr	pc, [ip, #2872]!	; 0xb38

00011608 <__assert_fail@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #24, 20	; 0x18000
   11610:	ldr	pc, [ip, #2864]!	; 0xb30

Disassembly of section .text:

00011614 <argp_parse@@Base-0x1214>:
   11614:	push	{r4, r5, lr}
   11618:	mov	r4, r0
   1161c:	sub	sp, sp, #148	; 0x94
   11620:	ldr	r0, [r1]
   11624:	mov	r5, r1
   11628:	bl	137f8 <argp_parse@@Base+0xfd0>
   1162c:	ldr	r3, [pc, #184]	; 116ec <__assert_fail@plt+0xe4>
   11630:	ldr	r2, [pc, #184]	; 116f0 <__assert_fail@plt+0xe8>
   11634:	ldr	r1, [pc, #184]	; 116f4 <__assert_fail@plt+0xec>
   11638:	ldr	r0, [pc, #184]	; 116f8 <__assert_fail@plt+0xf0>
   1163c:	str	r2, [r3]
   11640:	bl	135ec <argp_parse@@Base+0xdc4>
   11644:	mov	r3, #0
   11648:	add	r0, sp, #12
   1164c:	mov	r2, r5
   11650:	stm	sp, {r0, r3}
   11654:	mov	r1, r4
   11658:	ldr	r0, [pc, #156]	; 116fc <__assert_fail@plt+0xf4>
   1165c:	bl	12828 <argp_parse@@Base>
   11660:	mov	r2, #24
   11664:	mov	r1, #21
   11668:	ldr	r0, [pc, #136]	; 116f8 <__assert_fail@plt+0xf0>
   1166c:	bl	11584 <openlog@plt>
   11670:	ldr	r2, [sp, #12]
   11674:	cmp	r4, r2
   11678:	bgt	116b4 <__assert_fail@plt+0xac>
   1167c:	mov	r3, #128	; 0x80
   11680:	add	r1, sp, #16
   11684:	add	r2, sp, #8
   11688:	mov	r0, #0
   1168c:	str	r3, [sp, #8]
   11690:	bl	115b4 <getpeername@plt>
   11694:	cmp	r0, #0
   11698:	blt	116c8 <__assert_fail@plt+0xc0>
   1169c:	add	r1, sp, #16
   116a0:	ldr	r2, [sp, #8]
   116a4:	mov	r0, #0
   116a8:	bl	119b8 <__assert_fail@plt+0x3b0>
   116ac:	mov	r0, #0
   116b0:	bl	1144c <exit@plt>
   116b4:	sub	r2, r4, r2
   116b8:	ldr	r1, [pc, #64]	; 11700 <__assert_fail@plt+0xf8>
   116bc:	mov	r0, #5
   116c0:	bl	11560 <syslog@plt>
   116c4:	b	1167c <__assert_fail@plt+0x74>
   116c8:	ldr	r1, [pc, #52]	; 11704 <__assert_fail@plt+0xfc>
   116cc:	mov	r0, #3
   116d0:	bl	11560 <syslog@plt>
   116d4:	bl	11494 <__errno_location@plt>
   116d8:	ldr	r2, [pc, #40]	; 11708 <__assert_fail@plt+0x100>
   116dc:	ldr	r1, [r0]
   116e0:	mov	r0, #1
   116e4:	bl	113c8 <error@plt>
   116e8:	b	1169c <__assert_fail@plt+0x94>
   116ec:	andeq	sl, r2, r8, asr r5
   116f0:	andeq	r9, r1, r8, ror #2
   116f4:			; <UNDEFINED> instruction: 0x0002a4b8
   116f8:	andeq	r9, r1, r0, lsl #3
   116fc:	andeq	sl, r2, ip, ror #8
   11700:	andeq	r9, r1, r8, lsl #3
   11704:	muleq	r1, ip, r1
   11708:	andeq	r9, r1, ip, lsr #3
   1170c:	mov	fp, #0
   11710:	mov	lr, #0
   11714:	pop	{r1}		; (ldr r1, [sp], #4)
   11718:	mov	r2, sp
   1171c:	push	{r2}		; (str r2, [sp, #-4]!)
   11720:	push	{r0}		; (str r0, [sp, #-4]!)
   11724:	ldr	ip, [pc, #16]	; 1173c <__assert_fail@plt+0x134>
   11728:	push	{ip}		; (str ip, [sp, #-4]!)
   1172c:	ldr	r0, [pc, #12]	; 11740 <__assert_fail@plt+0x138>
   11730:	ldr	r3, [pc, #12]	; 11744 <__assert_fail@plt+0x13c>
   11734:	bl	113f8 <__libc_start_main@plt>
   11738:	bl	115e4 <abort@plt>
   1173c:	andeq	r8, r1, r8, ror #29
   11740:	andeq	r1, r1, r4, lsl r6
   11744:	andeq	r8, r1, r8, lsl #29
   11748:	ldr	r3, [pc, #20]	; 11764 <__assert_fail@plt+0x15c>
   1174c:	ldr	r2, [pc, #20]	; 11768 <__assert_fail@plt+0x160>
   11750:	add	r3, pc, r3
   11754:	ldr	r2, [r3, r2]
   11758:	cmp	r2, #0
   1175c:	bxeq	lr
   11760:	b	1141c <__gmon_start__@plt>
   11764:	andeq	r8, r1, r8, lsr #17
   11768:	andeq	r0, r0, r4, asr #2
   1176c:	ldr	r3, [pc, #28]	; 11790 <__assert_fail@plt+0x188>
   11770:	ldr	r0, [pc, #28]	; 11794 <__assert_fail@plt+0x18c>
   11774:	sub	r3, r3, r0
   11778:	cmp	r3, #6
   1177c:	bxls	lr
   11780:	ldr	r3, [pc, #16]	; 11798 <__assert_fail@plt+0x190>
   11784:	cmp	r3, #0
   11788:	bxeq	lr
   1178c:	bx	r3
   11790:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   11794:	strdeq	sl, [r2], -ip
   11798:	andeq	r0, r0, r0
   1179c:	ldr	r1, [pc, #36]	; 117c8 <__assert_fail@plt+0x1c0>
   117a0:	ldr	r0, [pc, #36]	; 117cc <__assert_fail@plt+0x1c4>
   117a4:	sub	r1, r1, r0
   117a8:	asr	r1, r1, #2
   117ac:	add	r1, r1, r1, lsr #31
   117b0:	asrs	r1, r1, #1
   117b4:	bxeq	lr
   117b8:	ldr	r3, [pc, #16]	; 117d0 <__assert_fail@plt+0x1c8>
   117bc:	cmp	r3, #0
   117c0:	bxeq	lr
   117c4:	bx	r3
   117c8:	strdeq	sl, [r2], -ip
   117cc:	strdeq	sl, [r2], -ip
   117d0:	andeq	r0, r0, r0
   117d4:	push	{r4, lr}
   117d8:	ldr	r4, [pc, #24]	; 117f8 <__assert_fail@plt+0x1f0>
   117dc:	ldrb	r3, [r4]
   117e0:	cmp	r3, #0
   117e4:	popne	{r4, pc}
   117e8:	bl	1176c <__assert_fail@plt+0x164>
   117ec:	mov	r3, #1
   117f0:	strb	r3, [r4]
   117f4:	pop	{r4, pc}
   117f8:	andeq	sl, r2, r8, lsl r5
   117fc:	ldr	r0, [pc, #40]	; 1182c <__assert_fail@plt+0x224>
   11800:	ldr	r3, [r0]
   11804:	cmp	r3, #0
   11808:	bne	11810 <__assert_fail@plt+0x208>
   1180c:	b	1179c <__assert_fail@plt+0x194>
   11810:	ldr	r3, [pc, #24]	; 11830 <__assert_fail@plt+0x228>
   11814:	cmp	r3, #0
   11818:	beq	1180c <__assert_fail@plt+0x204>
   1181c:	push	{r4, lr}
   11820:	blx	r3
   11824:	pop	{r4, lr}
   11828:	b	1179c <__assert_fail@plt+0x194>
   1182c:	andeq	r9, r2, r4, lsl #30
   11830:	andeq	r0, r0, r0
   11834:	cmp	r0, #108	; 0x6c
   11838:	moveq	r0, #0
   1183c:	ldreq	r2, [pc, #16]	; 11854 <__assert_fail@plt+0x24c>
   11840:	movne	r0, #7
   11844:	ldreq	r3, [r2]
   11848:	addeq	r3, r3, #1
   1184c:	streq	r3, [r2]
   11850:	bx	lr
   11854:	andeq	sl, r2, ip, lsl r5
   11858:	push	{r1, r2, r3}
   1185c:	mov	r3, #1
   11860:	push	{r4, r5, r6, lr}
   11864:	sub	sp, sp, #8192	; 0x2000
   11868:	sub	sp, sp, #12
   1186c:	add	r5, sp, #8
   11870:	mov	r2, r5
   11874:	mov	r6, r0
   11878:	strb	r3, [r2], #1
   1187c:	mov	r0, r2
   11880:	add	r2, sp, #8192	; 0x2000
   11884:	ldr	r4, [pc, #68]	; 118d0 <__assert_fail@plt+0x2c8>
   11888:	add	ip, sp, #8192	; 0x2000
   1188c:	add	r2, r2, #28
   11890:	add	ip, ip, #32
   11894:	mov	r3, ip
   11898:	mov	r1, r4
   1189c:	ldr	r2, [r2]
   118a0:	str	ip, [sp, #4]
   118a4:	bl	1159c <vsnprintf@plt>
   118a8:	mov	r3, #10
   118ac:	mov	r1, r5
   118b0:	cmp	r0, r4
   118b4:	movlt	r4, r0
   118b8:	add	r2, r4, #1
   118bc:	mov	r0, #2
   118c0:	strb	r3, [r5, r4]
   118c4:	bl	114c4 <write@plt>
   118c8:	mov	r0, r6
   118cc:	bl	1144c <exit@plt>
   118d0:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   118d4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118d8:	mov	r9, r0
   118dc:	mov	r0, #100	; 0x64
   118e0:	bl	1425c <argp_parse@@Base+0x1a34>
   118e4:	subs	r6, r0, #0
   118e8:	beq	1198c <__assert_fail@plt+0x384>
   118ec:	ldr	sl, [pc, #184]	; 119ac <__assert_fail@plt+0x3a4>
   118f0:	mov	r4, r6
   118f4:	mov	r5, #100	; 0x64
   118f8:	mov	r8, #1
   118fc:	mov	r7, #0
   11900:	b	11910 <__assert_fail@plt+0x308>
   11904:	ldrb	r3, [r4, #-1]
   11908:	cmp	r3, #0
   1190c:	beq	11968 <__assert_fail@plt+0x360>
   11910:	mov	r2, r8
   11914:	mov	r1, r4
   11918:	mov	r0, r7
   1191c:	bl	112c0 <read@plt>
   11920:	subs	fp, r0, #0
   11924:	ble	11970 <__assert_fail@plt+0x368>
   11928:	add	r4, r4, fp
   1192c:	add	r3, r6, r5
   11930:	sub	r3, r3, r4
   11934:	cmp	r3, r5, lsr #3
   11938:	bge	11904 <__assert_fail@plt+0x2fc>
   1193c:	lsl	r5, r5, #1
   11940:	mov	r0, r6
   11944:	mov	r1, r5
   11948:	bl	14288 <argp_parse@@Base+0x1a60>
   1194c:	sub	r4, r4, r6
   11950:	subs	r6, r0, #0
   11954:	beq	1198c <__assert_fail@plt+0x384>
   11958:	add	r4, r6, r4
   1195c:	ldrb	r3, [r4, #-1]
   11960:	cmp	r3, #0
   11964:	bne	11910 <__assert_fail@plt+0x308>
   11968:	mov	r0, r6
   1196c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11970:	beq	1199c <__assert_fail@plt+0x394>
   11974:	mov	r3, r9
   11978:	mov	r2, sl
   1197c:	mov	r1, r7
   11980:	mov	r0, r8
   11984:	bl	113c8 <error@plt>
   11988:	b	11928 <__assert_fail@plt+0x320>
   1198c:	mov	r2, r9
   11990:	ldr	r1, [pc, #24]	; 119b0 <__assert_fail@plt+0x3a8>
   11994:	mov	r0, #1
   11998:	bl	11858 <__assert_fail@plt+0x250>
   1199c:	mov	r2, r9
   119a0:	ldr	r1, [pc, #12]	; 119b4 <__assert_fail@plt+0x3ac>
   119a4:	mov	r0, #1
   119a8:	bl	11858 <__assert_fail@plt+0x250>
   119ac:	andeq	r8, r1, ip, lsr pc
   119b0:	andeq	r8, r1, r8, lsl pc
   119b4:	andeq	r8, r1, r0, lsr pc
   119b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119bc:	sub	sp, sp, #8576	; 0x2180
   119c0:	sub	sp, sp, #4
   119c4:	mov	r6, r0
   119c8:	mov	r4, #1
   119cc:	mov	r0, #70	; 0x46
   119d0:	mov	fp, r2
   119d4:	mov	r8, r1
   119d8:	str	r4, [sp, #40]	; 0x28
   119dc:	bl	11350 <sysconf@plt>
   119e0:	cmp	r0, #0
   119e4:	movgt	sl, r0
   119e8:	movle	sl, #1024	; 0x400
   119ec:	mov	r0, sl
   119f0:	bl	13ca0 <argp_parse@@Base+0x1478>
   119f4:	mov	r1, #0
   119f8:	str	r0, [sp, #24]
   119fc:	mov	r0, #2
   11a00:	bl	11314 <signal@plt>
   11a04:	mov	r1, #0
   11a08:	mov	r0, #3
   11a0c:	bl	11314 <signal@plt>
   11a10:	mov	r1, #0
   11a14:	mov	r0, #15
   11a18:	bl	11314 <signal@plt>
   11a1c:	cmp	r6, #0
   11a20:	bne	11dbc <__assert_fail@plt+0x7b4>
   11a24:	mov	r3, #0
   11a28:	mov	r1, #1
   11a2c:	str	r1, [sp, #8]
   11a30:	str	r3, [sp, #4]
   11a34:	str	r3, [sp]
   11a38:	add	r2, sp, #80	; 0x50
   11a3c:	mov	r3, #46	; 0x2e
   11a40:	mov	r1, fp
   11a44:	mov	r0, r8
   11a48:	bl	1150c <getnameinfo@plt>
   11a4c:	cmp	r0, #0
   11a50:	bne	11d9c <__assert_fail@plt+0x794>
   11a54:	ldr	r9, [pc, #2020]	; 12240 <__assert_fail@plt+0xc38>
   11a58:	ldr	r3, [r9]
   11a5c:	cmp	r3, #1
   11a60:	ble	11a74 <__assert_fail@plt+0x46c>
   11a64:	add	r2, sp, #80	; 0x50
   11a68:	ldr	r1, [pc, #2004]	; 12244 <__assert_fail@plt+0xc3c>
   11a6c:	mov	r0, #6
   11a70:	bl	11560 <syslog@plt>
   11a74:	mov	r0, #60	; 0x3c
   11a78:	bl	11344 <alarm@plt>
   11a7c:	mov	r4, #0
   11a80:	mov	r7, #1
   11a84:	b	11a98 <__assert_fail@plt+0x490>
   11a88:	add	r4, r4, r4, lsl #2
   11a8c:	sub	r2, r2, #48	; 0x30
   11a90:	add	r2, r2, r4, lsl #1
   11a94:	uxth	r4, r2
   11a98:	mov	r2, r7
   11a9c:	add	r1, sp, #384	; 0x180
   11aa0:	mov	r0, r6
   11aa4:	bl	112c0 <read@plt>
   11aa8:	cmp	r0, #1
   11aac:	bne	11eb0 <__assert_fail@plt+0x8a8>
   11ab0:	ldrb	r2, [sp, #384]	; 0x180
   11ab4:	cmp	r2, #0
   11ab8:	bne	11a88 <__assert_fail@plt+0x480>
   11abc:	mov	r5, r0
   11ac0:	mov	r0, r2
   11ac4:	str	r2, [sp, #20]
   11ac8:	bl	11344 <alarm@plt>
   11acc:	cmp	r4, #0
   11ad0:	ldr	r2, [sp, #20]
   11ad4:	addeq	r7, sp, #64	; 0x40
   11ad8:	bne	11cdc <__assert_fail@plt+0x6d4>
   11adc:	ldr	r0, [pc, #1892]	; 12248 <__assert_fail@plt+0xc40>
   11ae0:	bl	118d4 <__assert_fail@plt+0x2cc>
   11ae4:	mov	r5, r0
   11ae8:	ldr	r0, [pc, #1884]	; 1224c <__assert_fail@plt+0xc44>
   11aec:	bl	118d4 <__assert_fail@plt+0x2cc>
   11af0:	mov	fp, r0
   11af4:	ldr	r0, [pc, #1876]	; 12250 <__assert_fail@plt+0xc48>
   11af8:	bl	118d4 <__assert_fail@plt+0x2cc>
   11afc:	mov	r8, r0
   11b00:	bl	11488 <setpwent@plt>
   11b04:	sub	r1, r7, #28
   11b08:	str	r1, [sp]
   11b0c:	mov	r3, sl
   11b10:	ldr	r2, [sp, #24]
   11b14:	mov	r0, r5
   11b18:	sub	r1, r7, #12
   11b1c:	bl	11470 <getpwnam_r@plt>
   11b20:	cmp	r0, #0
   11b24:	bne	120d8 <__assert_fail@plt+0xad0>
   11b28:	ldr	r3, [sp, #36]	; 0x24
   11b2c:	cmp	r3, #0
   11b30:	beq	120d8 <__assert_fail@plt+0xad0>
   11b34:	bl	11518 <endpwent@plt>
   11b38:	ldr	r3, [sp, #36]	; 0x24
   11b3c:	ldm	r3, {r0, sl}
   11b40:	bl	112cc <getspnam@plt>
   11b44:	cmp	r0, #0
   11b48:	ldrne	sl, [r0, #4]
   11b4c:	ldrb	r3, [sl]
   11b50:	cmp	r3, #0
   11b54:	bne	11d58 <__assert_fail@plt+0x750>
   11b58:	ldr	r3, [sp, #36]	; 0x24
   11b5c:	ldr	r0, [r3, #12]
   11b60:	bl	113e0 <setgid@plt>
   11b64:	ldr	r3, [sp, #36]	; 0x24
   11b68:	cmp	r0, #0
   11b6c:	blt	12124 <__assert_fail@plt+0xb1c>
   11b70:	ldr	r1, [r3, #12]
   11b74:	ldr	r0, [r3]
   11b78:	bl	11380 <initgroups@plt>
   11b7c:	cmp	r0, #0
   11b80:	blt	12100 <__assert_fail@plt+0xaf8>
   11b84:	ldr	r3, [sp, #36]	; 0x24
   11b88:	ldr	r0, [r3, #8]
   11b8c:	bl	1156c <setuid@plt>
   11b90:	cmp	r0, #0
   11b94:	blt	120b8 <__assert_fail@plt+0xab0>
   11b98:	cmp	r4, #0
   11b9c:	bne	11e44 <__assert_fail@plt+0x83c>
   11ba0:	cmp	r6, #2
   11ba4:	bgt	11e38 <__assert_fail@plt+0x830>
   11ba8:	ldr	r3, [sp, #36]	; 0x24
   11bac:	ldr	r0, [r3, #20]
   11bb0:	bl	1138c <chdir@plt>
   11bb4:	cmp	r0, #0
   11bb8:	blt	12088 <__assert_fail@plt+0xa80>
   11bbc:	ldr	r4, [pc, #1680]	; 12254 <__assert_fail@plt+0xc4c>
   11bc0:	mov	r0, r4
   11bc4:	bl	11458 <strlen@plt>
   11bc8:	ldr	r3, [pc, #1672]	; 12258 <__assert_fail@plt+0xc50>
   11bcc:	ldr	r6, [sp, #36]	; 0x24
   11bd0:	mov	lr, r0
   11bd4:	ldm	r3!, {r0, r1, r2}
   11bd8:	add	ip, r4, lr
   11bdc:	ldrh	r3, [r3]
   11be0:	str	r0, [r4, lr]
   11be4:	str	r2, [ip, #8]
   11be8:	strh	r3, [ip, #12]
   11bec:	str	r1, [ip, #4]
   11bf0:	add	r0, r4, #20
   11bf4:	ldr	r1, [r6, #20]
   11bf8:	mov	r2, #255	; 0xff
   11bfc:	bl	115cc <strncat@plt>
   11c00:	ldr	r1, [r6, #24]
   11c04:	add	r0, r4, #284	; 0x11c
   11c08:	mov	r2, #255	; 0xff
   11c0c:	bl	115cc <strncat@plt>
   11c10:	ldr	r1, [r6]
   11c14:	add	r0, r4, #548	; 0x224
   11c18:	mov	r2, #31
   11c1c:	bl	115cc <strncat@plt>
   11c20:	ldr	r1, [r6]
   11c24:	add	r0, r4, #588	; 0x24c
   11c28:	mov	r2, #31
   11c2c:	bl	115cc <strncat@plt>
   11c30:	mov	r2, #127	; 0x7f
   11c34:	add	r0, r4, #632	; 0x278
   11c38:	add	r1, sp, #80	; 0x50
   11c3c:	bl	115cc <strncat@plt>
   11c40:	ldr	r7, [r6, #24]
   11c44:	ldr	r3, [pc, #1552]	; 1225c <__assert_fail@plt+0xc54>
   11c48:	add	r4, r4, #768	; 0x300
   11c4c:	mov	r1, #47	; 0x2f
   11c50:	str	r4, [r3]
   11c54:	ldrb	r3, [r7]
   11c58:	cmp	r3, #0
   11c5c:	ldreq	r3, [pc, #1532]	; 12260 <__assert_fail@plt+0xc58>
   11c60:	moveq	r7, r3
   11c64:	streq	r3, [r6, #24]
   11c68:	mov	r0, r7
   11c6c:	bl	11530 <strrchr@plt>
   11c70:	mov	r2, #1
   11c74:	ldr	r1, [pc, #1512]	; 12264 <__assert_fail@plt+0xc5c>
   11c78:	cmp	r0, #0
   11c7c:	addne	r7, r0, #1
   11c80:	mov	r0, #2
   11c84:	bl	114c4 <write@plt>
   11c88:	ldr	ip, [r9]
   11c8c:	cmp	ip, #0
   11c90:	bne	11de4 <__assert_fail@plt+0x7dc>
   11c94:	ldr	r2, [sp, #36]	; 0x24
   11c98:	mov	r3, r8
   11c9c:	mov	r1, r7
   11ca0:	ldr	r0, [r2, #24]
   11ca4:	ldr	r2, [pc, #1468]	; 12268 <__assert_fail@plt+0xc60>
   11ca8:	str	ip, [sp]
   11cac:	bl	11524 <execl@plt>
   11cb0:	bl	11494 <__errno_location@plt>
   11cb4:	ldr	r3, [sp, #36]	; 0x24
   11cb8:	ldr	r2, [pc, #1452]	; 1226c <__assert_fail@plt+0xc64>
   11cbc:	ldr	r3, [r3, #24]
   11cc0:	ldr	r1, [r0]
   11cc4:	mov	r0, #1
   11cc8:	bl	113c8 <error@plt>
   11ccc:	mvn	r0, #0
   11cd0:	add	sp, sp, #8576	; 0x2180
   11cd4:	add	sp, sp, #4
   11cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cdc:	mov	r1, r5
   11ce0:	ldrh	r0, [r8]
   11ce4:	bl	115c0 <socket@plt>
   11ce8:	subs	r3, r0, #0
   11cec:	str	r3, [sp, #28]
   11cf0:	blt	12140 <__assert_fail@plt+0xb38>
   11cf4:	mov	r2, #4
   11cf8:	add	r7, sp, #64	; 0x40
   11cfc:	sub	r3, r7, #24
   11d00:	str	r2, [sp]
   11d04:	mov	r1, r5
   11d08:	mov	r2, #2
   11d0c:	bl	112a8 <setsockopt@plt>
   11d10:	mov	r0, #60	; 0x3c
   11d14:	bl	11344 <alarm@plt>
   11d18:	ldrh	r2, [r8]
   11d1c:	cmp	r2, #2
   11d20:	beq	11d2c <__assert_fail@plt+0x724>
   11d24:	cmp	r2, #10
   11d28:	bne	11e9c <__assert_fail@plt+0x894>
   11d2c:	rev16	r3, r4
   11d30:	strh	r3, [r8, #2]
   11d34:	mov	r2, fp
   11d38:	mov	r1, r8
   11d3c:	ldr	r0, [sp, #28]
   11d40:	bl	115fc <connect@plt>
   11d44:	cmp	r0, #0
   11d48:	blt	11ed4 <__assert_fail@plt+0x8cc>
   11d4c:	mov	r0, #0
   11d50:	bl	11344 <alarm@plt>
   11d54:	b	11adc <__assert_fail@plt+0x4d4>
   11d58:	mov	r1, sl
   11d5c:	mov	r0, fp
   11d60:	bl	11548 <crypt@plt>
   11d64:	mov	r1, sl
   11d68:	bl	11290 <strcmp@plt>
   11d6c:	cmp	r0, #0
   11d70:	beq	11b58 <__assert_fail@plt+0x550>
   11d74:	ldr	r3, [r9]
   11d78:	cmp	r3, #0
   11d7c:	beq	11d90 <__assert_fail@plt+0x788>
   11d80:	mov	r2, r5
   11d84:	ldr	r1, [pc, #1252]	; 12270 <__assert_fail@plt+0xc68>
   11d88:	mov	r0, #36	; 0x24
   11d8c:	bl	11560 <syslog@plt>
   11d90:	ldr	r1, [pc, #1244]	; 12274 <__assert_fail@plt+0xc6c>
   11d94:	mov	r0, #1
   11d98:	bl	11858 <__assert_fail@plt+0x250>
   11d9c:	ldr	r1, [pc, #1236]	; 12278 <__assert_fail@plt+0xc70>
   11da0:	mov	r0, #4
   11da4:	bl	11560 <syslog@plt>
   11da8:	mov	r2, #46	; 0x2e
   11dac:	ldr	r1, [pc, #1224]	; 1227c <__assert_fail@plt+0xc74>
   11db0:	add	r0, sp, #80	; 0x50
   11db4:	bl	114b8 <strncpy@plt>
   11db8:	b	11a54 <__assert_fail@plt+0x44c>
   11dbc:	mov	r1, #0
   11dc0:	mov	r0, r6
   11dc4:	bl	1135c <dup2@plt>
   11dc8:	mov	r1, r4
   11dcc:	mov	r0, r6
   11dd0:	bl	1135c <dup2@plt>
   11dd4:	mov	r1, #2
   11dd8:	mov	r0, r6
   11ddc:	bl	1135c <dup2@plt>
   11de0:	b	11a24 <__assert_fail@plt+0x41c>
   11de4:	add	r3, sp, #80	; 0x50
   11de8:	mov	r2, r5
   11dec:	ldr	r1, [pc, #1164]	; 12280 <__assert_fail@plt+0xc78>
   11df0:	mov	r0, #6
   11df4:	bl	11560 <syslog@plt>
   11df8:	ldr	r3, [sp, #36]	; 0x24
   11dfc:	ldr	r4, [r9]
   11e00:	mov	r2, #0
   11e04:	ldr	r0, [r3, #24]
   11e08:	mov	r1, r7
   11e0c:	str	r2, [sp]
   11e10:	mov	r3, r8
   11e14:	ldr	r2, [pc, #1100]	; 12268 <__assert_fail@plt+0xc60>
   11e18:	bl	11524 <execl@plt>
   11e1c:	cmp	r4, #0
   11e20:	beq	11cb0 <__assert_fail@plt+0x6a8>
   11e24:	mov	r2, r5
   11e28:	ldr	r1, [pc, #1108]	; 12284 <__assert_fail@plt+0xc7c>
   11e2c:	mov	r0, #3
   11e30:	bl	11560 <syslog@plt>
   11e34:	b	11cb0 <__assert_fail@plt+0x6a8>
   11e38:	mov	r0, r6
   11e3c:	bl	115f0 <close@plt>
   11e40:	b	11ba8 <__assert_fail@plt+0x5a0>
   11e44:	sub	r0, r7, #20
   11e48:	bl	114dc <pipe@plt>
   11e4c:	bl	11500 <fork@plt>
   11e50:	cmn	r0, #1
   11e54:	mov	r4, r0
   11e58:	beq	11ef0 <__assert_fail@plt+0x8e8>
   11e5c:	cmp	r0, #0
   11e60:	bne	11f18 <__assert_fail@plt+0x910>
   11e64:	bl	11440 <getpid@plt>
   11e68:	mov	r1, r0
   11e6c:	mov	r0, r4
   11e70:	bl	11578 <setpgid@plt>
   11e74:	ldr	r0, [sp, #28]
   11e78:	bl	115f0 <close@plt>
   11e7c:	ldr	r0, [sp, #44]	; 0x2c
   11e80:	bl	115f0 <close@plt>
   11e84:	mov	r1, #2
   11e88:	ldr	r0, [sp, #48]	; 0x30
   11e8c:	bl	1135c <dup2@plt>
   11e90:	ldr	r0, [sp, #48]	; 0x30
   11e94:	bl	115f0 <close@plt>
   11e98:	b	11ba0 <__assert_fail@plt+0x598>
   11e9c:	mov	r0, #3
   11ea0:	ldr	r1, [pc, #992]	; 12288 <__assert_fail@plt+0xc80>
   11ea4:	bl	11560 <syslog@plt>
   11ea8:	mov	r0, r5
   11eac:	bl	1144c <exit@plt>
   11eb0:	ldr	r3, [r9]
   11eb4:	cmp	r3, #0
   11eb8:	bne	11ec4 <__assert_fail@plt+0x8bc>
   11ebc:	mov	r0, #1
   11ec0:	bl	1144c <exit@plt>
   11ec4:	ldr	r1, [pc, #960]	; 1228c <__assert_fail@plt+0xc84>
   11ec8:	mov	r0, #3
   11ecc:	bl	11560 <syslog@plt>
   11ed0:	b	11ebc <__assert_fail@plt+0x8b4>
   11ed4:	ldr	r3, [r9]
   11ed8:	cmp	r3, #0
   11edc:	beq	11ebc <__assert_fail@plt+0x8b4>
   11ee0:	ldr	r1, [pc, #936]	; 12290 <__assert_fail@plt+0xc88>
   11ee4:	mov	r0, #5
   11ee8:	bl	11560 <syslog@plt>
   11eec:	b	11ebc <__assert_fail@plt+0x8b4>
   11ef0:	ldr	r3, [r9]
   11ef4:	cmp	r3, #0
   11ef8:	beq	11f0c <__assert_fail@plt+0x904>
   11efc:	mov	r2, r5
   11f00:	ldr	r1, [pc, #908]	; 12294 <__assert_fail@plt+0xc8c>
   11f04:	mov	r0, #3
   11f08:	bl	11560 <syslog@plt>
   11f0c:	ldr	r1, [pc, #900]	; 12298 <__assert_fail@plt+0xc90>
   11f10:	mov	r0, #1
   11f14:	bl	11858 <__assert_fail@plt+0x250>
   11f18:	mov	r0, #0
   11f1c:	bl	115f0 <close@plt>
   11f20:	mov	r0, #1
   11f24:	bl	115f0 <close@plt>
   11f28:	mov	r0, #2
   11f2c:	bl	115f0 <close@plt>
   11f30:	mov	r0, r6
   11f34:	bl	115f0 <close@plt>
   11f38:	ldr	r0, [sp, #48]	; 0x30
   11f3c:	bl	115f0 <close@plt>
   11f40:	add	r3, sp, #124	; 0x7c
   11f44:	add	r1, sp, #252	; 0xfc
   11f48:	mov	r2, #0
   11f4c:	str	r2, [r3, #4]!
   11f50:	cmp	r1, r3
   11f54:	bne	11f4c <__assert_fail@plt+0x944>
   11f58:	ldr	r2, [sp, #28]
   11f5c:	ldr	r3, [sp, #44]	; 0x2c
   11f60:	add	r1, sp, #384	; 0x180
   11f64:	cmp	r3, #0
   11f68:	asr	r5, r2, #5
   11f6c:	add	ip, r3, #31
   11f70:	movge	ip, r3
   11f74:	add	r5, r1, r5, lsl #2
   11f78:	and	r8, r2, #31
   11f7c:	mov	r6, #1
   11f80:	asr	r2, r3, #31
   11f84:	asr	ip, ip, #5
   11f88:	ldr	r1, [r5, #-256]	; 0xffffff00
   11f8c:	lsr	r2, r2, #27
   11f90:	lsl	r8, r6, r8
   11f94:	add	r0, sp, #384	; 0x180
   11f98:	add	ip, r0, ip, lsl #2
   11f9c:	add	r3, r3, r2
   11fa0:	orr	r1, r1, r8
   11fa4:	and	r3, r3, #31
   11fa8:	str	r1, [r5, #-256]	; 0xffffff00
   11fac:	sub	r3, r3, r2
   11fb0:	ldr	r1, [ip, #-256]	; 0xffffff00
   11fb4:	sub	r2, r7, #24
   11fb8:	orr	r3, r1, r6, lsl r3
   11fbc:	ldr	r0, [sp, #48]	; 0x30
   11fc0:	ldr	r1, [pc, #724]	; 1229c <__assert_fail@plt+0xc94>
   11fc4:	str	r3, [ip, #-256]	; 0xffffff00
   11fc8:	bl	137c8 <argp_parse@@Base+0xfa0>
   11fcc:	ldr	r3, [sp, #44]	; 0x2c
   11fd0:	mvn	r9, r8
   11fd4:	sub	r7, r7, #29
   11fd8:	mov	sl, #128	; 0x80
   11fdc:	mov	fp, #0
   11fe0:	mov	r2, sl
   11fe4:	add	r1, sp, #128	; 0x80
   11fe8:	add	r0, sp, #256	; 0x100
   11fec:	str	r3, [sp, #20]
   11ff0:	bl	11308 <memcpy@plt>
   11ff4:	ldr	r2, [sp, #28]
   11ff8:	ldr	r3, [sp, #20]
   11ffc:	str	fp, [sp]
   12000:	cmp	r2, r3
   12004:	movge	r0, r2
   12008:	movlt	r0, r3
   1200c:	mov	r3, #0
   12010:	mov	r2, r3
   12014:	add	r1, sp, #256	; 0x100
   12018:	add	r0, r0, #1
   1201c:	bl	1132c <select@plt>
   12020:	ldr	r3, [r5, #-128]	; 0xffffff80
   12024:	tst	r8, r3
   12028:	bne	121b8 <__assert_fail@plt+0xbb0>
   1202c:	ldr	r3, [sp, #44]	; 0x2c
   12030:	cmp	r3, #0
   12034:	asr	r2, r3, #31
   12038:	add	r1, r3, #31
   1203c:	lsr	r0, r2, #27
   12040:	movge	r1, r3
   12044:	add	r2, r3, r0
   12048:	asr	r1, r1, #5
   1204c:	and	r2, r2, #31
   12050:	sub	r2, r2, r0
   12054:	add	r0, sp, #384	; 0x180
   12058:	add	r1, r0, r1, lsl #2
   1205c:	lsl	r2, r6, r2
   12060:	ldr	r0, [r1, #-128]	; 0xffffff80
   12064:	tst	r2, r0
   12068:	bne	1215c <__assert_fail@plt+0xb54>
   1206c:	ldr	r0, [r1, #-256]	; 0xffffff00
   12070:	tst	r0, r2
   12074:	bne	11fe0 <__assert_fail@plt+0x9d8>
   12078:	ldr	r0, [r5, #-256]	; 0xffffff00
   1207c:	ands	r0, r8, r0
   12080:	bne	11fe0 <__assert_fail@plt+0x9d8>
   12084:	bl	1144c <exit@plt>
   12088:	ldr	r3, [r9]
   1208c:	cmp	r3, #0
   12090:	beq	120ac <__assert_fail@plt+0xaa4>
   12094:	ldr	r3, [sp, #36]	; 0x24
   12098:	mov	r2, r5
   1209c:	ldr	r1, [pc, #508]	; 122a0 <__assert_fail@plt+0xc98>
   120a0:	ldr	r3, [r3, #20]
   120a4:	mov	r0, #37	; 0x25
   120a8:	bl	11560 <syslog@plt>
   120ac:	ldr	r1, [pc, #496]	; 122a4 <__assert_fail@plt+0xc9c>
   120b0:	mov	r0, #1
   120b4:	bl	11858 <__assert_fail@plt+0x250>
   120b8:	ldr	r3, [sp, #36]	; 0x24
   120bc:	ldr	r1, [pc, #484]	; 122a8 <__assert_fail@plt+0xca0>
   120c0:	mov	r0, #39	; 0x27
   120c4:	ldr	r2, [r3, #8]
   120c8:	bl	11560 <syslog@plt>
   120cc:	ldr	r1, [pc, #472]	; 122ac <__assert_fail@plt+0xca4>
   120d0:	mov	r0, #1
   120d4:	bl	11858 <__assert_fail@plt+0x250>
   120d8:	ldr	r3, [r9]
   120dc:	cmp	r3, #0
   120e0:	beq	120f4 <__assert_fail@plt+0xaec>
   120e4:	mov	r2, r5
   120e8:	ldr	r1, [pc, #448]	; 122b0 <__assert_fail@plt+0xca8>
   120ec:	mov	r0, #36	; 0x24
   120f0:	bl	11560 <syslog@plt>
   120f4:	ldr	r1, [pc, #440]	; 122b4 <__assert_fail@plt+0xcac>
   120f8:	mov	r0, #1
   120fc:	bl	11858 <__assert_fail@plt+0x250>
   12100:	ldr	r2, [sp, #36]	; 0x24
   12104:	ldr	r1, [pc, #428]	; 122b8 <__assert_fail@plt+0xcb0>
   12108:	mov	r0, #39	; 0x27
   1210c:	ldr	r3, [r2, #12]
   12110:	ldr	r2, [r2]
   12114:	bl	11560 <syslog@plt>
   12118:	ldr	r1, [pc, #412]	; 122bc <__assert_fail@plt+0xcb4>
   1211c:	mov	r0, #1
   12120:	bl	11858 <__assert_fail@plt+0x250>
   12124:	ldr	r1, [pc, #404]	; 122c0 <__assert_fail@plt+0xcb8>
   12128:	mov	r0, #39	; 0x27
   1212c:	ldr	r2, [r3, #12]
   12130:	bl	11560 <syslog@plt>
   12134:	ldr	r1, [pc, #384]	; 122bc <__assert_fail@plt+0xcb4>
   12138:	mov	r0, #1
   1213c:	bl	11858 <__assert_fail@plt+0x250>
   12140:	ldr	r3, [r9]
   12144:	cmp	r3, #0
   12148:	beq	11ebc <__assert_fail@plt+0x8b4>
   1214c:	ldr	r1, [pc, #368]	; 122c4 <__assert_fail@plt+0xcbc>
   12150:	mov	r0, #3
   12154:	bl	11560 <syslog@plt>
   12158:	b	11ebc <__assert_fail@plt+0x8b4>
   1215c:	mov	r2, #8192	; 0x2000
   12160:	mov	r0, r3
   12164:	add	r1, sp, #384	; 0x180
   12168:	bl	112c0 <read@plt>
   1216c:	subs	r2, r0, #0
   12170:	ble	121e0 <__assert_fail@plt+0xbd8>
   12174:	add	r1, sp, #384	; 0x180
   12178:	ldr	r0, [sp, #28]
   1217c:	bl	114c4 <write@plt>
   12180:	ldr	r3, [sp, #44]	; 0x2c
   12184:	cmp	r3, #0
   12188:	asr	r2, r3, #31
   1218c:	add	r1, r3, #31
   12190:	lsr	r0, r2, #27
   12194:	add	r2, r3, r0
   12198:	movge	r1, r3
   1219c:	and	r2, r2, #31
   121a0:	sub	r2, r2, r0
   121a4:	asr	r1, r1, #5
   121a8:	add	r0, sp, #384	; 0x180
   121ac:	add	r1, r0, r1, lsl #2
   121b0:	lsl	r2, r6, r2
   121b4:	b	1206c <__assert_fail@plt+0xa64>
   121b8:	mov	r2, r6
   121bc:	mov	r1, r7
   121c0:	ldr	r0, [sp, #28]
   121c4:	bl	112c0 <read@plt>
   121c8:	cmp	r0, #0
   121cc:	ble	12230 <__assert_fail@plt+0xc28>
   121d0:	ldrb	r1, [sp, #35]	; 0x23
   121d4:	mov	r0, r4
   121d8:	bl	11374 <killpg@plt>
   121dc:	b	1202c <__assert_fail@plt+0xa24>
   121e0:	mov	r1, #2
   121e4:	ldr	r0, [sp, #28]
   121e8:	bl	114e8 <shutdown@plt>
   121ec:	ldr	r3, [sp, #44]	; 0x2c
   121f0:	cmp	r3, #0
   121f4:	asr	r2, r3, #31
   121f8:	add	r1, r3, #31
   121fc:	lsr	r0, r2, #27
   12200:	movge	r1, r3
   12204:	add	r2, r3, r0
   12208:	asr	r1, r1, #5
   1220c:	and	r2, r2, #31
   12210:	sub	r2, r2, r0
   12214:	add	r0, sp, #384	; 0x180
   12218:	add	r1, r0, r1, lsl #2
   1221c:	lsl	r2, r6, r2
   12220:	ldr	r0, [r1, #-256]	; 0xffffff00
   12224:	bic	r0, r0, r2
   12228:	str	r0, [r1, #-256]	; 0xffffff00
   1222c:	b	12070 <__assert_fail@plt+0xa68>
   12230:	ldr	r3, [r5, #-256]	; 0xffffff00
   12234:	and	r3, r3, r9
   12238:	str	r3, [r5, #-256]	; 0xffffff00
   1223c:	b	1202c <__assert_fail@plt+0xa24>
   12240:	andeq	sl, r2, ip, lsl r5
   12244:	andeq	r8, r1, r4, ror #30
   12248:	andeq	r8, r1, r4, asr #31
   1224c:	ldrdeq	r8, [r1], -r0
   12250:	ldrdeq	r8, [r1], -ip
   12254:	andeq	sl, r2, r0, asr r1
   12258:	andeq	r9, r1, ip, lsl #2
   1225c:	andeq	sl, r2, r4, lsl #10
   12260:	andeq	r8, r1, r0, asr #30
   12264:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12268:	andeq	r9, r1, r8, lsr r1
   1226c:	andeq	r9, r1, r8, asr r1
   12270:	andeq	r9, r1, ip
   12274:	andeq	r9, r1, r8, lsr #32
   12278:	andeq	r8, r1, r8, asr #30
   1227c:	andeq	r8, r1, r8, asr pc
   12280:	andeq	r9, r1, ip, lsl r1
   12284:	andeq	r9, r1, ip, lsr r1
   12288:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1228c:	andeq	r8, r1, r8, ror pc
   12290:			; <UNDEFINED> instruction: 0x00018fb8
   12294:	strheq	r9, [r1], -r8
   12298:	ldrdeq	r9, [r1], -r0
   1229c:	andeq	r5, r0, r1, lsr #8
   122a0:	ldrdeq	r9, [r1], -ip
   122a4:	strdeq	r9, [r1], -r4
   122a8:	andeq	r9, r1, r8, lsl #1
   122ac:	andeq	r9, r1, r0, lsr #1
   122b0:	andeq	r8, r1, r4, ror #31
   122b4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   122b8:	andeq	r9, r1, r0, ror r0
   122bc:	andeq	r9, r1, r4, asr r0
   122c0:	andeq	r9, r1, ip, lsr r0
   122c4:	andeq	r8, r1, r8, lsl #31
   122c8:	ldr	r3, [r0]
   122cc:	push	{r4, r5, r6, lr}
   122d0:	cmp	r3, #0
   122d4:	ldr	r5, [r0, #16]
   122d8:	beq	12340 <__assert_fail@plt+0xd38>
   122dc:	ldr	r0, [r1, #8]
   122e0:	mov	r2, #0
   122e4:	add	r0, r0, #1
   122e8:	str	r0, [r1, #8]
   122ec:	b	122f4 <__assert_fail@plt+0xcec>
   122f0:	add	r2, r2, #1
   122f4:	add	r3, r3, #24
   122f8:	ldr	r0, [r3, #-20]	; 0xffffffec
   122fc:	cmp	r0, #0
   12300:	bne	122f0 <__assert_fail@plt+0xce8>
   12304:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12308:	cmp	r0, #0
   1230c:	bne	122f0 <__assert_fail@plt+0xce8>
   12310:	ldr	r0, [r3, #-8]
   12314:	cmp	r0, #0
   12318:	bne	122f0 <__assert_fail@plt+0xce8>
   1231c:	ldr	r0, [r3, #-4]
   12320:	cmp	r0, #0
   12324:	bne	122f0 <__assert_fail@plt+0xce8>
   12328:	ldm	r1, {r0, r3}
   1232c:	add	ip, r2, r2, lsl #1
   12330:	add	r0, r0, ip
   12334:	add	r2, r3, r2
   12338:	stm	r1, {r0, r2}
   1233c:	b	12354 <__assert_fail@plt+0xd4c>
   12340:	ldr	r3, [r0, #4]
   12344:	cmp	r3, #0
   12348:	ldrne	r3, [r1, #8]
   1234c:	addne	r3, r3, #1
   12350:	strne	r3, [r1, #8]
   12354:	cmp	r5, #0
   12358:	popeq	{r4, r5, r6, pc}
   1235c:	ldr	r0, [r5]
   12360:	cmp	r0, #0
   12364:	popeq	{r4, r5, r6, pc}
   12368:	mov	r4, r1
   1236c:	mov	r1, r4
   12370:	bl	122c8 <__assert_fail@plt+0xcc0>
   12374:	ldr	r3, [r4, #12]
   12378:	ldr	r0, [r5, #16]!
   1237c:	add	r3, r3, #1
   12380:	cmp	r0, #0
   12384:	str	r3, [r4, #12]
   12388:	bne	1236c <__assert_fail@plt+0xd64>
   1238c:	pop	{r4, r5, r6, pc}
   12390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12394:	sub	sp, sp, #36	; 0x24
   12398:	ldr	sl, [r0]
   1239c:	str	r0, [sp, #12]
   123a0:	cmp	sl, #0
   123a4:	str	r1, [sp, #16]
   123a8:	str	r2, [sp, #20]
   123ac:	mov	r9, r3
   123b0:	ldr	r8, [r0, #16]
   123b4:	ldr	r7, [sp, #72]	; 0x48
   123b8:	beq	12584 <__assert_fail@plt+0xf7c>
   123bc:	add	fp, sl, #24
   123c0:	str	r8, [sp, #28]
   123c4:	str	r3, [sp, #24]
   123c8:	ldr	r4, [fp, #-20]	; 0xffffffec
   123cc:	sub	r1, fp, #24
   123d0:	cmp	r4, #0
   123d4:	bne	123e4 <__assert_fail@plt+0xddc>
   123d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123dc:	cmp	r3, #0
   123e0:	beq	12558 <__assert_fail@plt+0xf50>
   123e4:	ldr	r3, [fp, #-12]
   123e8:	tst	r3, #4
   123ec:	moveq	sl, r1
   123f0:	moveq	r5, r3
   123f4:	ldrne	r5, [sl, #12]
   123f8:	ands	r5, r5, #8
   123fc:	bne	12540 <__assert_fail@plt+0xf38>
   12400:	tst	r3, #8
   12404:	bne	12480 <__assert_fail@plt+0xe78>
   12408:	sub	r3, r4, #1
   1240c:	cmp	r3, #254	; 0xfe
   12410:	bhi	12480 <__assert_fail@plt+0xe78>
   12414:	bl	11434 <__ctype_b_loc@plt>
   12418:	lsl	r3, r4, #1
   1241c:	ldr	r1, [r0]
   12420:	ldrh	r3, [r1, r3]
   12424:	tst	r3, #16384	; 0x4000
   12428:	beq	12480 <__assert_fail@plt+0xe78>
   1242c:	ldr	r3, [r7, #4]
   12430:	add	r1, r3, #1
   12434:	str	r1, [r7, #4]
   12438:	strb	r4, [r3]
   1243c:	ldr	r3, [sl, #8]
   12440:	cmp	r3, #0
   12444:	beq	12474 <__assert_fail@plt+0xe6c>
   12448:	ldr	r3, [r7, #4]
   1244c:	mov	r2, #58	; 0x3a
   12450:	add	r1, r3, #1
   12454:	str	r1, [r7, #4]
   12458:	strb	r2, [r3]
   1245c:	ldr	r3, [sl, #12]
   12460:	tst	r3, #1
   12464:	ldrne	r3, [r7, #4]
   12468:	addne	r1, r3, #1
   1246c:	strne	r1, [r7, #4]
   12470:	strbne	r2, [r3]
   12474:	ldr	r3, [r7, #4]
   12478:	mov	r2, #0
   1247c:	strb	r2, [r3]
   12480:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12484:	cmp	r4, #0
   12488:	beq	12540 <__assert_fail@plt+0xf38>
   1248c:	ldr	r8, [r7]
   12490:	ldr	r6, [r8, #8]
   12494:	ldr	r0, [r6]
   12498:	cmp	r0, #0
   1249c:	beq	124c0 <__assert_fail@plt+0xeb8>
   124a0:	mov	r9, r6
   124a4:	mov	r1, r4
   124a8:	bl	11290 <strcmp@plt>
   124ac:	cmp	r0, #0
   124b0:	beq	12548 <__assert_fail@plt+0xf40>
   124b4:	ldr	r0, [r9, #16]!
   124b8:	cmp	r0, #0
   124bc:	bne	124a4 <__assert_fail@plt+0xe9c>
   124c0:	ldr	r3, [sl, #8]
   124c4:	ldr	r1, [r7, #8]
   124c8:	cmp	r3, #0
   124cc:	str	r4, [r1]
   124d0:	beq	124e4 <__assert_fail@plt+0xedc>
   124d4:	ldr	r3, [sl, #12]
   124d8:	tst	r3, #1
   124dc:	moveq	r5, #1
   124e0:	movne	r5, #2
   124e4:	str	r5, [r1, #4]
   124e8:	ldr	ip, [fp, #-20]	; 0xffffffec
   124ec:	mov	r3, #0
   124f0:	cmp	ip, r3
   124f4:	str	r3, [r1, #8]
   124f8:	ldr	r2, [sp, #24]
   124fc:	ldr	r3, [r8, #48]	; 0x30
   12500:	ldreq	ip, [sl, #4]
   12504:	sub	r3, r2, r3
   12508:	bic	ip, ip, #-16777216	; 0xff000000
   1250c:	asr	r3, r3, #2
   12510:	add	lr, r1, #16
   12514:	rsb	r0, r3, r3, lsl #3
   12518:	add	r0, r0, r0, lsl #6
   1251c:	add	r0, r3, r0, lsl #3
   12520:	rsb	r0, r0, r0, lsl #15
   12524:	add	r3, r3, r0, lsl #3
   12528:	add	r3, r3, #1
   1252c:	add	r3, ip, r3, lsl #24
   12530:	str	r3, [r1, #12]
   12534:	mov	r3, #0
   12538:	str	lr, [r7, #8]
   1253c:	str	r3, [r1, #16]
   12540:	add	fp, fp, #24
   12544:	b	123c8 <__assert_fail@plt+0xdc0>
   12548:	sub	r6, r9, r6
   1254c:	cmn	r6, #15
   12550:	bge	12540 <__assert_fail@plt+0xf38>
   12554:	b	124c0 <__assert_fail@plt+0xeb8>
   12558:	ldr	r3, [fp, #-8]
   1255c:	cmp	r3, #0
   12560:	bne	123e4 <__assert_fail@plt+0xddc>
   12564:	ldr	r3, [fp, #-4]
   12568:	cmp	r3, #0
   1256c:	bne	123e4 <__assert_fail@plt+0xddc>
   12570:	ldr	r3, [sp, #12]
   12574:	ldr	r8, [sp, #28]
   12578:	ldr	r9, [sp, #24]
   1257c:	ldr	r3, [r3, #4]
   12580:	b	1259c <__assert_fail@plt+0xf94>
   12584:	ldr	r3, [sp, #12]
   12588:	ldr	r3, [r3, #4]
   1258c:	cmp	r3, #0
   12590:	moveq	r0, r9
   12594:	moveq	r9, r3
   12598:	beq	1260c <__assert_fail@plt+0x1004>
   1259c:	ldr	r2, [r7, #4]
   125a0:	ldr	r1, [sp, #12]
   125a4:	str	r3, [r9]
   125a8:	cmp	r8, #0
   125ac:	stmib	r9, {r1, r2}
   125b0:	ldr	r2, [sp, #16]
   125b4:	mov	r3, #0
   125b8:	str	r2, [r9, #16]
   125bc:	ldr	r2, [sp, #20]
   125c0:	str	r3, [r9, #12]
   125c4:	str	r2, [r9, #20]
   125c8:	str	r3, [r9, #24]
   125cc:	str	r3, [r9, #32]
   125d0:	str	r3, [r9, #28]
   125d4:	beq	12608 <__assert_fail@plt+0x1000>
   125d8:	ldr	r2, [r8]
   125dc:	cmp	r2, r3
   125e0:	beq	12654 <__assert_fail@plt+0x104c>
   125e4:	add	r3, r3, #1
   125e8:	ldr	r2, [r8, r3, lsl #4]
   125ec:	cmp	r2, #0
   125f0:	bne	125e4 <__assert_fail@plt+0xfdc>
   125f4:	lsl	r3, r3, #2
   125f8:	ldr	r2, [r7, #12]
   125fc:	add	r3, r2, r3
   12600:	str	r2, [r9, #28]
   12604:	str	r3, [r7, #12]
   12608:	add	r0, r9, #36	; 0x24
   1260c:	cmp	r8, #0
   12610:	beq	1264c <__assert_fail@plt+0x1044>
   12614:	ldr	r1, [r8]
   12618:	cmp	r1, #0
   1261c:	beq	1264c <__assert_fail@plt+0x1044>
   12620:	mov	r2, #0
   12624:	add	r4, r2, #1
   12628:	mov	r3, r0
   1262c:	str	r7, [sp]
   12630:	mov	r0, r1
   12634:	mov	r1, r9
   12638:	bl	12390 <__assert_fail@plt+0xd88>
   1263c:	ldr	r1, [r8, r4, lsl #4]
   12640:	mov	r2, r4
   12644:	cmp	r1, #0
   12648:	bne	12624 <__assert_fail@plt+0x101c>
   1264c:	add	sp, sp, #36	; 0x24
   12650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12654:	mov	r3, r2
   12658:	b	125f8 <__assert_fail@plt+0xff0>
   1265c:	cmp	r0, #86	; 0x56
   12660:	beq	1266c <__assert_fail@plt+0x1064>
   12664:	mov	r0, #7
   12668:	bx	lr
   1266c:	ldr	r3, [pc, #104]	; 126dc <__assert_fail@plt+0x10d4>
   12670:	push	{r4, lr}
   12674:	mov	r4, r2
   12678:	ldr	r3, [r3]
   1267c:	cmp	r3, #0
   12680:	beq	126a4 <__assert_fail@plt+0x109c>
   12684:	mov	r1, r2
   12688:	ldr	r0, [r2, #48]	; 0x30
   1268c:	blx	r3
   12690:	ldr	r0, [r4, #16]
   12694:	ands	r0, r0, #32
   12698:	beq	126d8 <__assert_fail@plt+0x10d0>
   1269c:	mov	r0, #0
   126a0:	pop	{r4, pc}
   126a4:	ldr	r3, [pc, #52]	; 126e0 <__assert_fail@plt+0x10d8>
   126a8:	ldr	r2, [r3]
   126ac:	cmp	r2, #0
   126b0:	beq	126c4 <__assert_fail@plt+0x10bc>
   126b4:	ldr	r1, [pc, #40]	; 126e4 <__assert_fail@plt+0x10dc>
   126b8:	ldr	r0, [r4, #48]	; 0x30
   126bc:	bl	1147c <fprintf@plt>
   126c0:	b	12690 <__assert_fail@plt+0x1088>
   126c4:	ldr	r2, [pc, #28]	; 126e8 <__assert_fail@plt+0x10e0>
   126c8:	ldr	r1, [pc, #28]	; 126ec <__assert_fail@plt+0x10e4>
   126cc:	mov	r0, r4
   126d0:	bl	174e0 <argp_error@@Base>
   126d4:	b	12690 <__assert_fail@plt+0x1088>
   126d8:	bl	1144c <exit@plt>
   126dc:	andeq	sl, r2, r4, lsr #10
   126e0:	andeq	sl, r2, ip, asr r5
   126e4:	andeq	r9, r1, r4, lsr #9
   126e8:	andeq	r9, r1, r8, lsl #6
   126ec:	andeq	r8, r1, ip, lsr pc
   126f0:	cmn	r0, #3
   126f4:	push	{r4, r5, lr}
   126f8:	mov	r4, r2
   126fc:	sub	sp, sp, #12
   12700:	beq	127e4 <__assert_fail@plt+0x11dc>
   12704:	ble	12774 <__assert_fail@plt+0x116c>
   12708:	cmn	r0, #2
   1270c:	beq	12734 <__assert_fail@plt+0x112c>
   12710:	cmp	r0, #63	; 0x3f
   12714:	bne	127d8 <__assert_fail@plt+0x11d0>
   12718:	mov	r0, r4
   1271c:	ldr	r2, [pc, #236]	; 12810 <__assert_fail@plt+0x1208>
   12720:	ldr	r1, [r4, #48]	; 0x30
   12724:	bl	17430 <argp_state_help@@Base>
   12728:	mov	r0, #0
   1272c:	add	sp, sp, #12
   12730:	pop	{r4, r5, pc}
   12734:	ldr	r3, [pc, #216]	; 12814 <__assert_fail@plt+0x120c>
   12738:	mov	r0, r1
   1273c:	str	r1, [sp, #4]
   12740:	str	r1, [r3]
   12744:	bl	13614 <argp_parse@@Base+0xdec>
   12748:	ldr	r3, [r4, #16]
   1274c:	ldr	r2, [pc, #196]	; 12818 <__assert_fail@plt+0x1210>
   12750:	and	r3, r3, #3
   12754:	cmp	r3, #1
   12758:	ldr	r1, [sp, #4]
   1275c:	str	r0, [r4, #40]	; 0x28
   12760:	str	r0, [r2]
   12764:	beq	12800 <__assert_fail@plt+0x11f8>
   12768:	mov	r0, #0
   1276c:	add	sp, sp, #12
   12770:	pop	{r4, r5, pc}
   12774:	cmn	r0, #4
   12778:	bne	127d8 <__assert_fail@plt+0x11d0>
   1277c:	cmp	r1, #0
   12780:	ldr	r0, [pc, #148]	; 1281c <__assert_fail@plt+0x1214>
   12784:	mov	r2, #10
   12788:	movne	r0, r1
   1278c:	mov	r1, #0
   12790:	bl	1129c <strtol@plt>
   12794:	ldr	r4, [pc, #132]	; 12820 <__assert_fail@plt+0x1218>
   12798:	str	r0, [r4]
   1279c:	ldr	r3, [r4]
   127a0:	cmp	r3, #0
   127a4:	sub	r3, r3, #1
   127a8:	str	r3, [r4]
   127ac:	ble	12768 <__assert_fail@plt+0x1160>
   127b0:	mov	r5, #1
   127b4:	mov	r0, r5
   127b8:	bl	11338 <sleep@plt>
   127bc:	ldr	r3, [r4]
   127c0:	cmp	r3, #0
   127c4:	sub	r3, r3, #1
   127c8:	str	r3, [r4]
   127cc:	bgt	127b4 <__assert_fail@plt+0x11ac>
   127d0:	mov	r0, #0
   127d4:	b	1276c <__assert_fail@plt+0x1164>
   127d8:	mov	r0, #7
   127dc:	add	sp, sp, #12
   127e0:	pop	{r4, r5, pc}
   127e4:	mov	r0, r4
   127e8:	ldr	r2, [pc, #52]	; 12824 <__assert_fail@plt+0x121c>
   127ec:	ldr	r1, [r4, #48]	; 0x30
   127f0:	bl	17430 <argp_state_help@@Base>
   127f4:	mov	r0, #0
   127f8:	add	sp, sp, #12
   127fc:	pop	{r4, r5, pc}
   12800:	ldr	r3, [r4, #8]
   12804:	mov	r0, #0
   12808:	str	r1, [r3]
   1280c:	b	1272c <__assert_fail@plt+0x1124>
   12810:	andeq	r0, r0, sl, ror r2
   12814:	andeq	sl, r2, r8, lsl #10
   12818:	andeq	sl, r2, r0, lsl #10
   1281c:	andeq	r9, r1, ip, lsr #6
   12820:	andeq	sl, r2, r0, lsr #10
   12824:	andeq	r0, r0, r1, lsl #4

00012828 <argp_parse@@Base>:
   12828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1282c:	add	fp, sp, #32
   12830:	tst	r3, #1
   12834:	sub	sp, sp, #228	; 0xe4
   12838:	mov	r6, r3
   1283c:	mov	r7, r0
   12840:	str	r1, [fp, #-240]	; 0xffffff10
   12844:	str	r2, [fp, #-232]	; 0xffffff18
   12848:	bne	12874 <argp_parse@@Base+0x4c>
   1284c:	ldr	r3, [pc, #3260]	; 13510 <argp_parse@@Base+0xce8>
   12850:	ldr	r4, [pc, #3260]	; 13514 <argp_parse@@Base+0xcec>
   12854:	ldr	r2, [r3]
   12858:	cmp	r2, #0
   1285c:	ldreq	r2, [fp, #-232]	; 0xffffff18
   12860:	ldreq	r2, [r2]
   12864:	streq	r2, [r3]
   12868:	ldr	r3, [r4]
   1286c:	cmp	r3, #0
   12870:	beq	12f14 <argp_parse@@Base+0x6ec>
   12874:	ands	r3, r6, #16
   12878:	beq	12e1c <argp_parse@@Base+0x5f4>
   1287c:	sub	r4, fp, #196	; 0xc4
   12880:	mov	r0, r4
   12884:	mov	r2, #36	; 0x24
   12888:	mov	r1, #0
   1288c:	bl	114ac <memset@plt>
   12890:	ands	r3, r6, #4
   12894:	str	r3, [fp, #-244]	; 0xffffff0c
   12898:	mov	r3, #0
   1289c:	moveq	r0, #1
   128a0:	movne	r0, #0
   128a4:	cmp	r7, r3
   128a8:	str	r3, [fp, #-224]	; 0xffffff20
   128ac:	str	r3, [fp, #-220]	; 0xffffff24
   128b0:	str	r3, [fp, #-216]	; 0xffffff28
   128b4:	str	r0, [fp, #-228]	; 0xffffff1c
   128b8:	beq	12d20 <argp_parse@@Base+0x4f8>
   128bc:	mov	r0, r7
   128c0:	sub	r1, fp, #228	; 0xe4
   128c4:	bl	122c8 <__assert_fail@plt+0xcc0>
   128c8:	ldr	r5, [fp, #-220]	; 0xffffff24
   128cc:	ldr	r9, [fp, #-216]	; 0xffffff28
   128d0:	add	r5, r5, #1
   128d4:	ldr	r3, [fp, #-224]	; 0xffffff20
   128d8:	add	r5, r5, r5, lsl #3
   128dc:	lsl	r2, r9, #2
   128e0:	lsl	r5, r5, #2
   128e4:	add	r3, r3, #1
   128e8:	add	sl, r2, r5
   128ec:	ldr	r0, [fp, #-228]	; 0xffffff1c
   128f0:	add	r9, sl, r3, lsl #4
   128f4:	str	r2, [fp, #-236]	; 0xffffff14
   128f8:	add	r0, r9, r0
   128fc:	add	r0, r0, #1
   12900:	bl	1425c <argp_parse@@Base+0x1a34>
   12904:	cmp	r0, #0
   12908:	mov	r8, r0
   1290c:	str	r0, [fp, #-40]	; 0xffffffd8
   12910:	moveq	r5, #12
   12914:	beq	12d14 <argp_parse@@Base+0x4ec>
   12918:	mov	r3, #1
   1291c:	str	r3, [fp, #-196]	; 0xffffff3c
   12920:	str	r3, [fp, #-192]	; 0xffffff40
   12924:	ldm	r4!, {r0, r1, r2, r3}
   12928:	sub	ip, fp, #148	; 0x94
   1292c:	add	r5, r8, r5
   12930:	str	r5, [fp, #-104]	; 0xffffff98
   12934:	stmia	ip!, {r0, r1, r2, r3}
   12938:	add	r3, r8, sl
   1293c:	mov	lr, r3
   12940:	ldm	r4!, {r0, r1, r2, r3}
   12944:	add	sl, r8, r9
   12948:	str	lr, [fp, #-248]	; 0xffffff08
   1294c:	str	lr, [fp, #-152]	; 0xffffff68
   12950:	ldr	lr, [r4]
   12954:	stmia	ip!, {r0, r1, r2, r3}
   12958:	mov	r0, r5
   1295c:	ldr	r2, [fp, #-236]	; 0xffffff14
   12960:	mov	r1, #0
   12964:	str	lr, [ip]
   12968:	str	r8, [fp, #-112]	; 0xffffff90
   1296c:	str	sl, [fp, #-156]	; 0xffffff64
   12970:	bl	114ac <memset@plt>
   12974:	ldr	lr, [fp, #-248]	; 0xffffff08
   12978:	sub	r4, fp, #160	; 0xa0
   1297c:	tst	r6, #8
   12980:	str	lr, [fp, #-204]	; 0xffffff34
   12984:	str	sl, [fp, #-208]	; 0xffffff30
   12988:	str	r5, [fp, #-200]	; 0xffffff38
   1298c:	str	r4, [fp, #-212]	; 0xffffff2c
   12990:	bne	12d34 <argp_parse@@Base+0x50c>
   12994:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12998:	cmp	r3, #0
   1299c:	addne	r3, sl, #1
   129a0:	movne	r2, #43	; 0x2b
   129a4:	strbne	r2, [sl]
   129a8:	movne	sl, r3
   129ac:	strne	r3, [fp, #-208]	; 0xffffff30
   129b0:	mov	r2, #0
   129b4:	strb	r2, [sl]
   129b8:	ldr	r3, [fp, #-204]	; 0xffffff34
   129bc:	cmp	r7, r2
   129c0:	str	r2, [r3]
   129c4:	str	r7, [fp, #-160]	; 0xffffff60
   129c8:	beq	12edc <argp_parse@@Base+0x6b4>
   129cc:	sub	r1, fp, #212	; 0xd4
   129d0:	mov	r0, r7
   129d4:	str	r1, [sp]
   129d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   129dc:	mov	r1, r2
   129e0:	bl	12390 <__assert_fail@plt+0xd88>
   129e4:	ldr	r7, [fp, #-160]	; 0xffffff60
   129e8:	ldr	r5, [fp, #-112]	; 0xffffff90
   129ec:	mov	r8, r0
   129f0:	str	r0, [fp, #-108]	; 0xffffff94
   129f4:	mov	r2, #56	; 0x38
   129f8:	mov	r1, #0
   129fc:	sub	r0, fp, #96	; 0x60
   12a00:	bl	114ac <memset@plt>
   12a04:	ldr	r2, [pc, #2828]	; 13518 <argp_parse@@Base+0xcf0>
   12a08:	ldr	r3, [pc, #2828]	; 1351c <argp_parse@@Base+0xcf4>
   12a0c:	ldr	r0, [fp, #-240]	; 0xffffff10
   12a10:	ldr	r1, [r2]
   12a14:	str	r0, [fp, #-92]	; 0xffffffa4
   12a18:	ldr	r2, [r3]
   12a1c:	ldr	r0, [fp, #-232]	; 0xffffff18
   12a20:	mov	r3, #1
   12a24:	cmp	r5, r8
   12a28:	str	r7, [fp, #-96]	; 0xffffffa0
   12a2c:	str	r0, [fp, #-88]	; 0xffffffa8
   12a30:	str	r6, [fp, #-80]	; 0xffffffb0
   12a34:	str	r4, [fp, #-44]	; 0xffffffd4
   12a38:	str	r1, [fp, #-52]	; 0xffffffcc
   12a3c:	str	r2, [fp, #-48]	; 0xffffffd0
   12a40:	str	r3, [fp, #-100]	; 0xffffff9c
   12a44:	bcc	12d48 <argp_parse@@Base+0x520>
   12a48:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a4c:	tst	r3, #2
   12a50:	bne	12eec <argp_parse@@Base+0x6c4>
   12a54:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a58:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12a5c:	mov	r2, #1
   12a60:	str	r2, [fp, #-144]	; 0xffffff70
   12a64:	ldr	r2, [fp, #-232]	; 0xffffff18
   12a68:	cmp	r2, r3
   12a6c:	beq	133ec <argp_parse@@Base+0xbc4>
   12a70:	ldr	r3, [pc, #2716]	; 13514 <argp_parse@@Base+0xcec>
   12a74:	ldr	r3, [r3]
   12a78:	str	r3, [fp, #-56]	; 0xffffffc8
   12a7c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12a80:	ldr	r5, [fp, #-84]	; 0xffffffac
   12a84:	ldr	sl, [pc, #2708]	; 13520 <argp_parse@@Base+0xcf8>
   12a88:	mov	r0, r4
   12a8c:	mov	r6, #0
   12a90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12a94:	cmp	r3, #0
   12a98:	beq	12f28 <argp_parse@@Base+0x700>
   12a9c:	cmp	r3, r5
   12aa0:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12aa4:	bgt	12f28 <argp_parse@@Base+0x700>
   12aa8:	cmp	r5, r0
   12aac:	blt	132c4 <argp_parse@@Base+0xa9c>
   12ab0:	cmp	r5, r0
   12ab4:	bne	132d0 <argp_parse@@Base+0xaa8>
   12ab8:	ldr	r3, [fp, #-112]	; 0xffffff90
   12abc:	ldr	ip, [fp, #-108]	; 0xffffff94
   12ac0:	cmp	r3, ip
   12ac4:	bcs	134b4 <argp_parse@@Base+0xc8c>
   12ac8:	mov	r5, #0
   12acc:	add	r4, r3, #36	; 0x24
   12ad0:	mov	r7, r5
   12ad4:	ldr	r6, [pc, #2632]	; 13524 <argp_parse@@Base+0xcfc>
   12ad8:	mov	r0, r5
   12adc:	b	12b24 <argp_parse@@Base+0x2fc>
   12ae0:	ldr	ip, [r4, #-4]
   12ae4:	str	ip, [fp, #-60]	; 0xffffffc4
   12ae8:	ldr	ip, [r4, #-12]
   12aec:	str	ip, [fp, #-68]	; 0xffffffbc
   12af0:	ldr	ip, [r4, #-8]
   12af4:	str	r3, [fp, #-76]	; 0xffffffb4
   12af8:	str	ip, [fp, #-64]	; 0xffffffc0
   12afc:	blx	r5
   12b00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12b04:	str	r3, [r4, #-4]
   12b08:	ldr	ip, [fp, #-108]	; 0xffffff94
   12b0c:	cmp	ip, r4
   12b10:	bls	1345c <argp_parse@@Base+0xc34>
   12b14:	cmp	r0, #7
   12b18:	cmpne	r0, #0
   12b1c:	bne	13438 <argp_parse@@Base+0xc10>
   12b20:	add	r4, r4, #36	; 0x24
   12b24:	ldr	r3, [r4, #-24]	; 0xffffffe8
   12b28:	cmp	r3, #0
   12b2c:	bne	12b0c <argp_parse@@Base+0x2e4>
   12b30:	ldr	r5, [r4, #-36]	; 0xffffffdc
   12b34:	sub	r2, fp, #96	; 0x60
   12b38:	cmp	r5, #0
   12b3c:	mov	r1, r7
   12b40:	mov	r0, r6
   12b44:	bne	12ae0 <argp_parse@@Base+0x2b8>
   12b48:	cmp	ip, r4
   12b4c:	mov	r0, #7
   12b50:	bhi	12b20 <argp_parse@@Base+0x2f8>
   12b54:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b58:	sub	r4, ip, #36	; 0x24
   12b5c:	cmp	r4, r3
   12b60:	movcs	r5, #7
   12b64:	bcc	12bec <argp_parse@@Base+0x3c4>
   12b68:	cmp	r5, #7
   12b6c:	cmpne	r5, #0
   12b70:	bne	1344c <argp_parse@@Base+0xc24>
   12b74:	sub	r4, r4, #36	; 0x24
   12b78:	mov	r7, #0
   12b7c:	ldr	r6, [pc, #2468]	; 13528 <argp_parse@@Base+0xd00>
   12b80:	b	12bcc <argp_parse@@Base+0x3a4>
   12b84:	ldr	r3, [r4, #68]	; 0x44
   12b88:	ldr	ip, [r4, #48]	; 0x30
   12b8c:	str	r3, [fp, #-60]	; 0xffffffc4
   12b90:	ldr	r3, [r4, #60]	; 0x3c
   12b94:	str	r3, [fp, #-68]	; 0xffffffbc
   12b98:	ldr	r3, [r4, #64]	; 0x40
   12b9c:	str	ip, [fp, #-76]	; 0xffffffb4
   12ba0:	str	r3, [fp, #-64]	; 0xffffffc0
   12ba4:	blx	r5
   12ba8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bac:	str	r3, [r4, #68]	; 0x44
   12bb0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12bb4:	cmp	r4, r3
   12bb8:	bcc	134ac <argp_parse@@Base+0xc84>
   12bbc:	cmp	r0, #7
   12bc0:	cmpne	r0, #0
   12bc4:	bne	1341c <argp_parse@@Base+0xbf4>
   12bc8:	sub	r4, r4, #36	; 0x24
   12bcc:	ldr	r5, [r4, #36]	; 0x24
   12bd0:	sub	r2, fp, #96	; 0x60
   12bd4:	cmp	r5, #0
   12bd8:	mov	r1, r7
   12bdc:	mov	r0, r6
   12be0:	bne	12b84 <argp_parse@@Base+0x35c>
   12be4:	cmp	r4, r3
   12be8:	bcs	12bc8 <argp_parse@@Base+0x3a0>
   12bec:	ldr	r2, [fp, #4]
   12bf0:	cmp	r2, #0
   12bf4:	beq	12c10 <argp_parse@@Base+0x3e8>
   12bf8:	mov	r5, #0
   12bfc:	ldr	r1, [fp, #4]
   12c00:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c04:	str	r2, [r1]
   12c08:	cmp	r5, #0
   12c0c:	bne	1342c <argp_parse@@Base+0xc04>
   12c10:	ldr	ip, [fp, #-108]	; 0xffffff94
   12c14:	b	132e8 <argp_parse@@Base+0xac0>
   12c18:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c1c:	mov	r5, r0
   12c20:	ldr	ip, [fp, #-108]	; 0xffffff94
   12c24:	cmp	ip, r3
   12c28:	bls	133e4 <argp_parse@@Base+0xbbc>
   12c2c:	ldr	r7, [pc, #2296]	; 1352c <argp_parse@@Base+0xd04>
   12c30:	add	r4, r3, #36	; 0x24
   12c34:	mov	r8, #0
   12c38:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12c3c:	sub	r2, fp, #96	; 0x60
   12c40:	cmp	r3, #0
   12c44:	mov	r1, r8
   12c48:	mov	r0, r7
   12c4c:	mov	r6, r4
   12c50:	beq	12c84 <argp_parse@@Base+0x45c>
   12c54:	ldr	ip, [r4, #-4]
   12c58:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12c5c:	str	ip, [fp, #-60]	; 0xffffffc4
   12c60:	ldr	ip, [r4, #-12]
   12c64:	str	ip, [fp, #-68]	; 0xffffffbc
   12c68:	ldr	ip, [r4, #-8]
   12c6c:	str	lr, [fp, #-76]	; 0xffffffb4
   12c70:	str	ip, [fp, #-64]	; 0xffffffc0
   12c74:	blx	r3
   12c78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12c7c:	str	r3, [r4, #-4]
   12c80:	ldr	ip, [fp, #-108]	; 0xffffff94
   12c84:	cmp	ip, r6
   12c88:	add	r4, r4, #36	; 0x24
   12c8c:	bhi	12c38 <argp_parse@@Base+0x410>
   12c90:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c94:	sub	ip, ip, #36	; 0x24
   12c98:	cmp	r3, ip
   12c9c:	bhi	12d04 <argp_parse@@Base+0x4dc>
   12ca0:	ldr	r8, [pc, #2184]	; 13530 <argp_parse@@Base+0xd08>
   12ca4:	sub	r4, ip, #36	; 0x24
   12ca8:	mov	r9, #0
   12cac:	ldr	r6, [r4, #36]	; 0x24
   12cb0:	sub	r2, fp, #96	; 0x60
   12cb4:	cmp	r6, #0
   12cb8:	mov	r1, r9
   12cbc:	mov	r0, r8
   12cc0:	mov	r7, r4
   12cc4:	beq	12cf8 <argp_parse@@Base+0x4d0>
   12cc8:	ldr	r3, [r4, #68]	; 0x44
   12ccc:	ldr	ip, [r4, #48]	; 0x30
   12cd0:	str	r3, [fp, #-60]	; 0xffffffc4
   12cd4:	ldr	r3, [r4, #60]	; 0x3c
   12cd8:	str	r3, [fp, #-68]	; 0xffffffbc
   12cdc:	ldr	r3, [r4, #64]	; 0x40
   12ce0:	str	ip, [fp, #-76]	; 0xffffffb4
   12ce4:	str	r3, [fp, #-64]	; 0xffffffc0
   12ce8:	blx	r6
   12cec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12cf0:	str	r3, [r4, #68]	; 0x44
   12cf4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cf8:	cmp	r3, r7
   12cfc:	sub	r4, r4, #36	; 0x24
   12d00:	bls	12cac <argp_parse@@Base+0x484>
   12d04:	cmp	r5, #7
   12d08:	moveq	r5, #22
   12d0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d10:	bl	136c0 <argp_parse@@Base+0xe98>
   12d14:	mov	r0, r5
   12d18:	sub	sp, fp, #32
   12d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d20:	mov	sl, #36	; 0x24
   12d24:	mov	r5, sl
   12d28:	mov	r9, #52	; 0x34
   12d2c:	str	r7, [fp, #-236]	; 0xffffff14
   12d30:	b	128f8 <argp_parse@@Base+0xd0>
   12d34:	add	sl, sl, #1
   12d38:	mov	r3, #45	; 0x2d
   12d3c:	str	sl, [fp, #-208]	; 0xffffff30
   12d40:	strb	r3, [r8, r9]
   12d44:	b	129b0 <argp_parse@@Base+0x188>
   12d48:	ldr	r3, [fp, #8]
   12d4c:	add	r4, r5, #36	; 0x24
   12d50:	str	r3, [r5, #24]
   12d54:	mov	r7, #0
   12d58:	ldr	r6, [pc, #2004]	; 13534 <argp_parse@@Base+0xd0c>
   12d5c:	b	12db4 <argp_parse@@Base+0x58c>
   12d60:	ldr	r2, [r4, #-4]
   12d64:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12d68:	str	r2, [fp, #-60]	; 0xffffffc4
   12d6c:	ldr	r1, [r4, #-12]
   12d70:	sub	r2, fp, #96	; 0x60
   12d74:	str	r1, [fp, #-68]	; 0xffffffbc
   12d78:	ldr	ip, [r4, #-8]
   12d7c:	mov	r1, r7
   12d80:	str	r0, [fp, #-76]	; 0xffffffb4
   12d84:	str	ip, [fp, #-64]	; 0xffffffc0
   12d88:	mov	r0, r6
   12d8c:	blx	r3
   12d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12d94:	str	r3, [r4, #-4]
   12d98:	ldr	r3, [fp, #-108]	; 0xffffff94
   12d9c:	cmp	r3, r4
   12da0:	bls	134d0 <argp_parse@@Base+0xca8>
   12da4:	cmp	r0, #7
   12da8:	cmpne	r0, #0
   12dac:	bne	12ecc <argp_parse@@Base+0x6a4>
   12db0:	add	r4, r4, #36	; 0x24
   12db4:	ldr	r3, [r4, #-20]	; 0xffffffec
   12db8:	cmp	r3, #0
   12dbc:	ldrne	r3, [r3, #28]
   12dc0:	ldrne	r2, [r4, #-16]
   12dc4:	ldrne	r3, [r3, r2, lsl #2]
   12dc8:	strne	r3, [r4, #-12]
   12dcc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12dd0:	cmp	r3, #0
   12dd4:	bne	12d60 <argp_parse@@Base+0x538>
   12dd8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   12ddc:	ldr	r3, [r3, #16]
   12de0:	cmp	r3, #0
   12de4:	beq	12e0c <argp_parse@@Base+0x5e4>
   12de8:	ldr	r3, [r3]
   12dec:	cmp	r3, #0
   12df0:	beq	12e0c <argp_parse@@Base+0x5e4>
   12df4:	ldr	r3, [r4, #-8]
   12df8:	ldr	r2, [r4, #-12]
   12dfc:	str	r2, [r3]
   12e00:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12e04:	cmp	r3, #0
   12e08:	bne	12d60 <argp_parse@@Base+0x538>
   12e0c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e10:	cmp	r3, r4
   12e14:	bhi	12db0 <argp_parse@@Base+0x588>
   12e18:	b	12a48 <argp_parse@@Base+0x220>
   12e1c:	sub	sp, sp, #72	; 0x48
   12e20:	add	r4, sp, #8
   12e24:	sub	sp, sp, #40	; 0x28
   12e28:	add	r5, sp, #8
   12e2c:	mov	r1, r3
   12e30:	mov	r0, r4
   12e34:	mov	r2, #64	; 0x40
   12e38:	str	r3, [r5]
   12e3c:	str	r3, [r5, #4]
   12e40:	str	r3, [r5, #8]
   12e44:	str	r3, [r5, #12]
   12e48:	str	r3, [r5, #20]
   12e4c:	str	r3, [r5, #24]
   12e50:	str	r4, [r5, #16]
   12e54:	bl	114ac <memset@plt>
   12e58:	ldr	r3, [pc, #1752]	; 13538 <argp_parse@@Base+0xd10>
   12e5c:	cmp	r7, #0
   12e60:	strne	r7, [r4]
   12e64:	ldr	r3, [r3]
   12e68:	addne	r4, r4, #16
   12e6c:	ldr	r2, [pc, #1736]	; 1353c <argp_parse@@Base+0xd14>
   12e70:	cmp	r3, #0
   12e74:	str	r2, [r4]
   12e78:	beq	13404 <argp_parse@@Base+0xbdc>
   12e7c:	ldr	r2, [pc, #1724]	; 13540 <argp_parse@@Base+0xd18>
   12e80:	add	r3, r4, #32
   12e84:	str	r2, [r4, #16]
   12e88:	mov	r8, #0
   12e8c:	sub	r4, fp, #196	; 0xc4
   12e90:	str	r8, [r3]
   12e94:	mov	r1, r8
   12e98:	mov	r0, r4
   12e9c:	mov	r2, #36	; 0x24
   12ea0:	bl	114ac <memset@plt>
   12ea4:	ands	r3, r6, #4
   12ea8:	str	r3, [fp, #-244]	; 0xffffff0c
   12eac:	moveq	r3, #1
   12eb0:	movne	r3, r8
   12eb4:	mov	r7, r5
   12eb8:	str	r8, [fp, #-224]	; 0xffffff20
   12ebc:	str	r8, [fp, #-220]	; 0xffffff24
   12ec0:	str	r8, [fp, #-216]	; 0xffffff28
   12ec4:	str	r3, [fp, #-228]	; 0xffffff1c
   12ec8:	b	128bc <argp_parse@@Base+0x94>
   12ecc:	mov	r5, r0
   12ed0:	mov	r0, r5
   12ed4:	sub	sp, fp, #32
   12ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12edc:	ldr	r5, [fp, #-112]	; 0xffffff90
   12ee0:	mov	r8, r5
   12ee4:	str	r5, [fp, #-108]	; 0xffffff94
   12ee8:	b	129f4 <argp_parse@@Base+0x1cc>
   12eec:	tst	r3, #1
   12ef0:	mov	r3, #0
   12ef4:	str	r3, [fp, #-144]	; 0xffffff70
   12ef8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12efc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12f00:	subne	r3, r3, #4
   12f04:	addne	r4, r4, #1
   12f08:	strne	r3, [fp, #-88]	; 0xffffffa8
   12f0c:	strne	r4, [fp, #-92]	; 0xffffffa4
   12f10:	b	12a64 <argp_parse@@Base+0x23c>
   12f14:	ldr	r3, [fp, #-232]	; 0xffffff18
   12f18:	ldr	r0, [r3]
   12f1c:	bl	13614 <argp_parse@@Base+0xdec>
   12f20:	str	r0, [r4]
   12f24:	b	12874 <argp_parse@@Base+0x4c>
   12f28:	cmp	r2, #0
   12f2c:	beq	12aa8 <argp_parse@@Base+0x280>
   12f30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12f34:	str	r5, [fp, #-148]	; 0xffffff6c
   12f38:	ands	ip, r3, #64	; 0x40
   12f3c:	mvn	r3, #0
   12f40:	str	r3, [fp, #-140]	; 0xffffff74
   12f44:	ldr	r2, [fp, #-156]	; 0xffffff64
   12f48:	ldr	r3, [fp, #-152]	; 0xffffff68
   12f4c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12f50:	beq	13270 <argp_parse@@Base+0xa48>
   12f54:	sub	ip, fp, #148	; 0x94
   12f58:	stm	sp, {r6, ip}
   12f5c:	bl	13794 <argp_parse@@Base+0xf6c>
   12f60:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12f64:	str	r5, [fp, #-84]	; 0xffffffac
   12f68:	mov	r7, r0
   12f6c:	cmn	r7, #1
   12f70:	beq	13290 <argp_parse@@Base+0xa68>
   12f74:	cmp	r7, #63	; 0x3f
   12f78:	beq	13394 <argp_parse@@Base+0xb6c>
   12f7c:	cmp	r7, #1
   12f80:	beq	130d8 <argp_parse@@Base+0x8b0>
   12f84:	asrs	r8, r7, #24
   12f88:	bne	13034 <argp_parse@@Base+0x80c>
   12f8c:	mov	r1, r7
   12f90:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f94:	bl	11464 <strchr@plt>
   12f98:	cmp	r0, #0
   12f9c:	beq	130a4 <argp_parse@@Base+0x87c>
   12fa0:	ldr	r4, [fp, #-112]	; 0xffffff90
   12fa4:	ldr	r2, [fp, #-108]	; 0xffffff94
   12fa8:	cmp	r4, r2
   12fac:	bcc	12fc0 <argp_parse@@Base+0x798>
   12fb0:	b	130a4 <argp_parse@@Base+0x87c>
   12fb4:	add	r4, r4, #36	; 0x24
   12fb8:	cmp	r4, r2
   12fbc:	bcs	130a4 <argp_parse@@Base+0x87c>
   12fc0:	ldr	r3, [r4, #8]
   12fc4:	cmp	r0, r3
   12fc8:	bcs	12fb4 <argp_parse@@Base+0x78c>
   12fcc:	ldr	r3, [r4]
   12fd0:	cmp	r3, #0
   12fd4:	beq	130a4 <argp_parse@@Base+0x87c>
   12fd8:	ldr	r2, [r4, #32]
   12fdc:	ldr	r0, [r4, #28]
   12fe0:	ldr	ip, [r4, #24]
   12fe4:	str	r2, [fp, #-60]	; 0xffffffc4
   12fe8:	ldr	r2, [r4, #12]
   12fec:	ldr	r1, [fp, #-136]	; 0xffffff78
   12ff0:	str	r0, [fp, #-64]	; 0xffffffc0
   12ff4:	str	r2, [fp, #-76]	; 0xffffffb4
   12ff8:	str	ip, [fp, #-68]	; 0xffffffbc
   12ffc:	sub	r2, fp, #96	; 0x60
   13000:	mov	r0, r7
   13004:	blx	r3
   13008:	mov	r8, r6
   1300c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13010:	str	r3, [r4, #32]
   13014:	cmp	r0, #7
   13018:	beq	1309c <argp_parse@@Base+0x874>
   1301c:	cmp	r0, #0
   13020:	bne	12c18 <argp_parse@@Base+0x3f0>
   13024:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13028:	ldr	r5, [fp, #-84]	; 0xffffffac
   1302c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13030:	b	12a90 <argp_parse@@Base+0x268>
   13034:	add	r3, r8, r8, lsl #3
   13038:	ldr	r2, [fp, #-112]	; 0xffffff90
   1303c:	lsl	r3, r3, #2
   13040:	sub	r3, r3, #36	; 0x24
   13044:	add	r4, r2, r3
   13048:	ldr	r5, [r2, r3]
   1304c:	ands	r3, r7, #8388608	; 0x800000
   13050:	movne	r3, #-16777216	; 0xff000000
   13054:	cmp	r5, #0
   13058:	beq	13228 <argp_parse@@Base+0xa00>
   1305c:	ldr	r0, [r4, #32]
   13060:	ldr	r2, [r4, #24]
   13064:	str	r0, [fp, #-60]	; 0xffffffc4
   13068:	ldr	r0, [r4, #28]
   1306c:	str	r2, [fp, #-68]	; 0xffffffbc
   13070:	ldr	r2, [r4, #12]
   13074:	str	r0, [fp, #-64]	; 0xffffffc0
   13078:	bic	r0, r7, #-16777216	; 0xff000000
   1307c:	str	r2, [fp, #-76]	; 0xffffffb4
   13080:	orr	r0, r0, r3
   13084:	ldr	r1, [fp, #-136]	; 0xffffff78
   13088:	sub	r2, fp, #96	; 0x60
   1308c:	blx	r5
   13090:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13094:	str	r3, [r4, #32]
   13098:	b	13014 <argp_parse@@Base+0x7ec>
   1309c:	cmp	r8, #0
   130a0:	bne	13228 <argp_parse@@Base+0xa00>
   130a4:	mov	r2, r7
   130a8:	ldr	r3, [pc, #1172]	; 13544 <argp_parse@@Base+0xd1c>
   130ac:	ldr	r1, [pc, #1172]	; 13548 <argp_parse@@Base+0xd20>
   130b0:	sub	r0, fp, #96	; 0x60
   130b4:	bl	174e0 <argp_error@@Base>
   130b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   130bc:	mov	r2, #260	; 0x104
   130c0:	sub	r0, fp, #96	; 0x60
   130c4:	bl	17430 <argp_state_help@@Base>
   130c8:	mov	r5, #7
   130cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   130d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   130d4:	b	12c24 <argp_parse@@Base+0x3fc>
   130d8:	ldr	r7, [fp, #-136]	; 0xffffff78
   130dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   130e0:	ldr	ip, [fp, #-108]	; 0xffffff94
   130e4:	sub	r8, r5, #1
   130e8:	cmp	r3, ip
   130ec:	str	r8, [fp, #-84]	; 0xffffffac
   130f0:	bcs	1321c <argp_parse@@Base+0x9f4>
   130f4:	mov	lr, r8
   130f8:	add	r4, r3, #36	; 0x24
   130fc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13100:	add	r5, lr, #1
   13104:	cmp	r3, #0
   13108:	str	r5, [fp, #-84]	; 0xffffffac
   1310c:	sub	r2, fp, #96	; 0x60
   13110:	mov	r1, r7
   13114:	mov	r0, r6
   13118:	sub	r5, r4, #36	; 0x24
   1311c:	mov	r9, r4
   13120:	streq	lr, [fp, #-84]	; 0xffffffac
   13124:	beq	13210 <argp_parse@@Base+0x9e8>
   13128:	ldr	ip, [r4, #-4]
   1312c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13130:	str	ip, [fp, #-60]	; 0xffffffc4
   13134:	ldr	ip, [r4, #-12]
   13138:	str	ip, [fp, #-68]	; 0xffffffbc
   1313c:	ldr	ip, [r4, #-8]
   13140:	str	lr, [fp, #-76]	; 0xffffffb4
   13144:	str	ip, [fp, #-64]	; 0xffffffc0
   13148:	blx	r3
   1314c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13150:	str	r3, [r4, #-4]
   13154:	cmp	r0, #7
   13158:	beq	13194 <argp_parse@@Base+0x96c>
   1315c:	cmp	r0, #0
   13160:	bne	12c18 <argp_parse@@Base+0x3f0>
   13164:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13168:	ldr	r5, [fp, #-84]	; 0xffffffac
   1316c:	cmp	r8, r5
   13170:	sublt	r8, r5, r8
   13174:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   13178:	movge	r3, #1
   1317c:	addlt	r8, r3, r8
   13180:	strlt	r8, [r4, #-24]	; 0xffffffe8
   13184:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   13188:	strge	r3, [fp, #-100]	; 0xffffff9c
   1318c:	movge	r2, r3
   13190:	b	12a90 <argp_parse@@Base+0x268>
   13194:	ldr	lr, [fp, #-84]	; 0xffffffac
   13198:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1319c:	sub	lr, lr, #1
   131a0:	cmp	r3, #0
   131a4:	str	lr, [fp, #-84]	; 0xffffffac
   131a8:	beq	1320c <argp_parse@@Base+0x9e4>
   131ac:	add	r0, r5, #24
   131b0:	ldr	r2, [r5, #12]
   131b4:	ldm	r0, {r0, r1, ip}
   131b8:	str	r2, [fp, #-76]	; 0xffffffb4
   131bc:	sub	r2, fp, #96	; 0x60
   131c0:	str	ip, [fp, #-60]	; 0xffffffc4
   131c4:	str	r0, [fp, #-68]	; 0xffffffbc
   131c8:	str	r1, [fp, #-64]	; 0xffffffc0
   131cc:	mov	r0, sl
   131d0:	mov	r1, r6
   131d4:	blx	r3
   131d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   131dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   131e0:	cmp	r4, ip
   131e4:	movcs	r1, #0
   131e8:	movcc	r1, #1
   131ec:	mov	r3, r4
   131f0:	str	r2, [r5, #32]
   131f4:	cmp	r0, #7
   131f8:	movne	r1, #0
   131fc:	cmp	r1, #0
   13200:	beq	134e8 <argp_parse@@Base+0xcc0>
   13204:	ldr	lr, [fp, #-84]	; 0xffffffac
   13208:	b	130f8 <argp_parse@@Base+0x8d0>
   1320c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13210:	cmp	r9, ip
   13214:	add	r4, r4, #36	; 0x24
   13218:	bcc	130fc <argp_parse@@Base+0x8d4>
   1321c:	ldr	r5, [fp, #-84]	; 0xffffffac
   13220:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13224:	b	12ab0 <argp_parse@@Base+0x288>
   13228:	ldr	r3, [fp, #-152]	; 0xffffff68
   1322c:	ldr	r2, [r3, #12]
   13230:	cmp	r2, r7
   13234:	bne	1324c <argp_parse@@Base+0xa24>
   13238:	b	13380 <argp_parse@@Base+0xb58>
   1323c:	add	r3, r3, #16
   13240:	ldr	r2, [r3, #12]
   13244:	cmp	r2, r7
   13248:	beq	13380 <argp_parse@@Base+0xb58>
   1324c:	ldr	r2, [r3]
   13250:	cmp	r2, #0
   13254:	bne	1323c <argp_parse@@Base+0xa14>
   13258:	ldr	r2, [pc, #748]	; 1354c <argp_parse@@Base+0xd24>
   1325c:	ldr	r3, [pc, #736]	; 13544 <argp_parse@@Base+0xd1c>
   13260:	ldr	r1, [pc, #744]	; 13550 <argp_parse@@Base+0xd28>
   13264:	sub	r0, fp, #96	; 0x60
   13268:	bl	174e0 <argp_error@@Base>
   1326c:	b	130b8 <argp_parse@@Base+0x890>
   13270:	sub	lr, fp, #148	; 0x94
   13274:	stm	sp, {ip, lr}
   13278:	bl	13740 <argp_parse@@Base+0xf18>
   1327c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13280:	str	r5, [fp, #-84]	; 0xffffffac
   13284:	mov	r7, r0
   13288:	cmn	r7, #1
   1328c:	bne	12f74 <argp_parse@@Base+0x74c>
   13290:	cmp	r5, #1
   13294:	str	r6, [fp, #-100]	; 0xffffff9c
   13298:	ble	132b8 <argp_parse@@Base+0xa90>
   1329c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132a0:	sub	r3, r5, #-1073741823	; 0xc0000001
   132a4:	ldr	r1, [pc, #680]	; 13554 <argp_parse@@Base+0xd2c>
   132a8:	ldr	r0, [r2, r3, lsl #2]
   132ac:	bl	11290 <strcmp@plt>
   132b0:	cmp	r0, #0
   132b4:	streq	r5, [fp, #-72]	; 0xffffffb8
   132b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   132bc:	cmp	r5, r0
   132c0:	bge	12ab0 <argp_parse@@Base+0x288>
   132c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   132c8:	tst	r3, #4
   132cc:	beq	133a4 <argp_parse@@Base+0xb7c>
   132d0:	ldr	r3, [fp, #4]
   132d4:	cmp	r3, #0
   132d8:	beq	1347c <argp_parse@@Base+0xc54>
   132dc:	str	r5, [r3]
   132e0:	ldr	ip, [fp, #-108]	; 0xffffff94
   132e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   132e8:	sub	r2, ip, #36	; 0x24
   132ec:	cmp	r3, r2
   132f0:	bhi	133d8 <argp_parse@@Base+0xbb0>
   132f4:	ldr	r6, [pc, #604]	; 13558 <argp_parse@@Base+0xd30>
   132f8:	sub	r4, ip, #72	; 0x48
   132fc:	mov	r7, #0
   13300:	ldr	r5, [r4, #36]	; 0x24
   13304:	sub	r2, fp, #96	; 0x60
   13308:	cmp	r5, #0
   1330c:	mov	r1, r7
   13310:	mov	r0, r6
   13314:	beq	13370 <argp_parse@@Base+0xb48>
   13318:	ldr	r3, [r4, #68]	; 0x44
   1331c:	ldr	ip, [r4, #48]	; 0x30
   13320:	str	r3, [fp, #-60]	; 0xffffffc4
   13324:	ldr	r3, [r4, #60]	; 0x3c
   13328:	str	r3, [fp, #-68]	; 0xffffffbc
   1332c:	ldr	r3, [r4, #64]	; 0x40
   13330:	str	ip, [fp, #-76]	; 0xffffffb4
   13334:	str	r3, [fp, #-64]	; 0xffffffc0
   13338:	blx	r5
   1333c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13340:	str	r3, [r4, #68]	; 0x44
   13344:	ldr	r3, [fp, #-112]	; 0xffffff90
   13348:	cmp	r4, r3
   1334c:	bcc	133b8 <argp_parse@@Base+0xb90>
   13350:	cmp	r0, #7
   13354:	cmpne	r0, #0
   13358:	sub	r4, r4, #36	; 0x24
   1335c:	beq	13300 <argp_parse@@Base+0xad8>
   13360:	ldr	ip, [fp, #-108]	; 0xffffff94
   13364:	mov	r5, r0
   13368:	sub	ip, ip, #36	; 0x24
   1336c:	b	12c98 <argp_parse@@Base+0x470>
   13370:	cmp	r4, r3
   13374:	bcc	133c4 <argp_parse@@Base+0xb9c>
   13378:	sub	r4, r4, #36	; 0x24
   1337c:	b	13300 <argp_parse@@Base+0xad8>
   13380:	ldr	r2, [r3]
   13384:	ldr	r3, [pc, #448]	; 1354c <argp_parse@@Base+0xd24>
   13388:	cmp	r2, #0
   1338c:	moveq	r2, r3
   13390:	b	1325c <argp_parse@@Base+0xa34>
   13394:	ldr	r3, [fp, #-140]	; 0xffffff74
   13398:	cmn	r3, #1
   1339c:	bne	130b8 <argp_parse@@Base+0x890>
   133a0:	b	12f8c <argp_parse@@Base+0x764>
   133a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   133a8:	ldr	r7, [r3, r5, lsl #2]
   133ac:	add	r5, r5, #1
   133b0:	str	r7, [fp, #-136]	; 0xffffff78
   133b4:	b	130dc <argp_parse@@Base+0x8b4>
   133b8:	cmp	r0, #7
   133bc:	mov	r5, r0
   133c0:	bne	133e0 <argp_parse@@Base+0xbb8>
   133c4:	ldr	ip, [fp, #-108]	; 0xffffff94
   133c8:	sub	ip, ip, #36	; 0x24
   133cc:	cmp	ip, r3
   133d0:	movcs	r5, #0
   133d4:	bcs	12ca0 <argp_parse@@Base+0x478>
   133d8:	mov	r5, #0
   133dc:	b	12d0c <argp_parse@@Base+0x4e4>
   133e0:	ldr	ip, [fp, #-108]	; 0xffffff94
   133e4:	sub	ip, ip, #36	; 0x24
   133e8:	b	12c98 <argp_parse@@Base+0x470>
   133ec:	ldr	r0, [r2]
   133f0:	cmp	r0, #0
   133f4:	beq	12a70 <argp_parse@@Base+0x248>
   133f8:	bl	13614 <argp_parse@@Base+0xdec>
   133fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13400:	b	12a7c <argp_parse@@Base+0x254>
   13404:	ldr	r3, [pc, #336]	; 1355c <argp_parse@@Base+0xd34>
   13408:	ldr	r3, [r3]
   1340c:	cmp	r3, #0
   13410:	addeq	r3, r4, #16
   13414:	bne	12e7c <argp_parse@@Base+0x654>
   13418:	b	12e88 <argp_parse@@Base+0x660>
   1341c:	mov	r5, r0
   13420:	ldr	r2, [fp, #4]
   13424:	cmp	r2, #0
   13428:	bne	12bfc <argp_parse@@Base+0x3d4>
   1342c:	cmp	r5, #7
   13430:	bne	12c20 <argp_parse@@Base+0x3f8>
   13434:	b	130b8 <argp_parse@@Base+0x890>
   13438:	ldr	r3, [fp, #-112]	; 0xffffff90
   1343c:	sub	ip, ip, #36	; 0x24
   13440:	cmp	r3, ip
   13444:	mov	r5, r0
   13448:	bls	13420 <argp_parse@@Base+0xbf8>
   1344c:	ldr	r2, [fp, #4]
   13450:	cmp	r2, #0
   13454:	bne	12bfc <argp_parse@@Base+0x3d4>
   13458:	b	12c08 <argp_parse@@Base+0x3e0>
   1345c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13460:	sub	r4, ip, #36	; 0x24
   13464:	cmp	r4, r3
   13468:	mov	r5, r0
   1346c:	bcs	12b68 <argp_parse@@Base+0x340>
   13470:	cmp	r5, #7
   13474:	beq	12bec <argp_parse@@Base+0x3c4>
   13478:	b	1344c <argp_parse@@Base+0xc24>
   1347c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13480:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13484:	tst	r3, #2
   13488:	bne	130bc <argp_parse@@Base+0x894>
   1348c:	cmp	r1, #0
   13490:	beq	130bc <argp_parse@@Base+0x894>
   13494:	mov	r0, r1
   13498:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1349c:	ldr	r1, [pc, #188]	; 13560 <argp_parse@@Base+0xd38>
   134a0:	bl	1147c <fprintf@plt>
   134a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   134a8:	b	130bc <argp_parse@@Base+0x894>
   134ac:	mov	r5, r0
   134b0:	b	13470 <argp_parse@@Base+0xc48>
   134b4:	sub	r4, ip, #36	; 0x24
   134b8:	cmp	r3, r4
   134bc:	bls	12b74 <argp_parse@@Base+0x34c>
   134c0:	ldr	r2, [fp, #4]
   134c4:	cmp	r2, #0
   134c8:	bne	12bf8 <argp_parse@@Base+0x3d0>
   134cc:	b	132e8 <argp_parse@@Base+0xac0>
   134d0:	cmp	r0, #7
   134d4:	mov	r5, r0
   134d8:	beq	12a48 <argp_parse@@Base+0x220>
   134dc:	cmp	r0, #0
   134e0:	beq	12a48 <argp_parse@@Base+0x220>
   134e4:	b	12d14 <argp_parse@@Base+0x4ec>
   134e8:	cmp	r0, #0
   134ec:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   134f0:	moveq	r5, r0
   134f4:	streq	r0, [fp, #-84]	; 0xffffffac
   134f8:	beq	1316c <argp_parse@@Base+0x944>
   134fc:	cmp	r0, #7
   13500:	mov	r5, r0
   13504:	beq	1321c <argp_parse@@Base+0x9f4>
   13508:	ldr	r3, [fp, #-112]	; 0xffffff90
   1350c:	b	12c24 <argp_parse@@Base+0x3fc>
   13510:	andeq	sl, r2, r8, lsl #10
   13514:	andeq	sl, r2, r0, lsl #10
   13518:	andeq	sl, r2, r0, lsl r5
   1351c:	andeq	sl, r2, r4, lsl r5
   13520:	tsteq	r0, r6
   13524:	tsteq	r0, r2
   13528:	tsteq	r0, r1
   1352c:	tsteq	r0, r5
   13530:	tsteq	r0, r7
   13534:	tsteq	r0, r3
   13538:	andeq	sl, r2, ip, asr r5
   1353c:	strdeq	r9, [r1], -r0
   13540:	andeq	r9, r1, ip, lsl #4
   13544:	andeq	r9, r1, r8, lsr #4
   13548:	andeq	r9, r1, ip, lsr r3
   1354c:	andeq	r9, r1, r4, lsr r3
   13550:	andeq	r9, r1, r4, asr #6
   13554:	andeq	r9, r1, r8, lsr r3
   13558:	tsteq	r0, r4
   1355c:	andeq	sl, r2, r4, lsr #10
   13560:	andeq	r9, r1, r0, asr r3
   13564:	cmp	r1, #0
   13568:	beq	135a8 <argp_parse@@Base+0xd80>
   1356c:	ldr	r2, [r1, #52]	; 0x34
   13570:	ldr	r3, [r2, #48]	; 0x30
   13574:	ldr	r1, [r2, #52]	; 0x34
   13578:	cmp	r3, r1
   1357c:	bcs	135a8 <argp_parse@@Base+0xd80>
   13580:	ldr	r2, [r3, #4]
   13584:	cmp	r0, r2
   13588:	bne	1359c <argp_parse@@Base+0xd74>
   1358c:	b	135b0 <argp_parse@@Base+0xd88>
   13590:	ldr	r2, [r3, #4]
   13594:	cmp	r2, r0
   13598:	beq	135b0 <argp_parse@@Base+0xd88>
   1359c:	add	r3, r3, #36	; 0x24
   135a0:	cmp	r3, r1
   135a4:	bcc	13590 <argp_parse@@Base+0xd68>
   135a8:	mov	r0, #0
   135ac:	bx	lr
   135b0:	ldr	r0, [r3, #24]
   135b4:	bx	lr
   135b8:	ldr	ip, [pc, #32]	; 135e0 <argp_parse@@Base+0xdb8>
   135bc:	push	{lr}		; (str lr, [sp, #-4]!)
   135c0:	sub	sp, sp, #12
   135c4:	ldm	ip, {r1, ip}
   135c8:	ldr	r3, [pc, #20]	; 135e4 <argp_parse@@Base+0xdbc>
   135cc:	ldr	r2, [pc, #20]	; 135e8 <argp_parse@@Base+0xdc0>
   135d0:	str	ip, [sp]
   135d4:	bl	13b54 <argp_parse@@Base+0x132c>
   135d8:	add	sp, sp, #12
   135dc:	pop	{pc}		; (ldr pc, [sp], #4)
   135e0:	andeq	sl, r2, r8, lsr #10
   135e4:	andeq	r9, r1, r8, lsr r4
   135e8:	andeq	r9, r1, r8, asr #8
   135ec:	ldr	r3, [pc, #20]	; 13608 <argp_parse@@Base+0xde0>
   135f0:	ldr	r2, [pc, #20]	; 1360c <argp_parse@@Base+0xde4>
   135f4:	ldr	ip, [pc, #20]	; 13610 <argp_parse@@Base+0xde8>
   135f8:	str	r0, [r3]
   135fc:	str	ip, [r2]
   13600:	str	r1, [r3, #4]
   13604:	bx	lr
   13608:	andeq	sl, r2, r8, lsr #10
   1360c:	andeq	sl, r2, r4, lsr #10
   13610:			; <UNDEFINED> instruction: 0x000135b8
   13614:	ldrb	r3, [r0]
   13618:	cmp	r3, #47	; 0x2f
   1361c:	bne	1362c <argp_parse@@Base+0xe04>
   13620:	ldrb	r3, [r0, #1]!
   13624:	cmp	r3, #47	; 0x2f
   13628:	beq	13620 <argp_parse@@Base+0xdf8>
   1362c:	cmp	r3, #0
   13630:	bxeq	lr
   13634:	mov	r2, #0
   13638:	push	{lr}		; (str lr, [sp, #-4]!)
   1363c:	mov	ip, r2
   13640:	mov	r1, r0
   13644:	mov	lr, #1
   13648:	cmp	r3, #47	; 0x2f
   1364c:	moveq	r2, lr
   13650:	beq	13660 <argp_parse@@Base+0xe38>
   13654:	cmp	r2, #0
   13658:	movne	r0, r1
   1365c:	movne	r2, ip
   13660:	ldrb	r3, [r1, #1]!
   13664:	cmp	r3, #0
   13668:	bne	13648 <argp_parse@@Base+0xe20>
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)
   13670:	push	{r4, lr}
   13674:	mov	r4, r0
   13678:	bl	11458 <strlen@plt>
   1367c:	cmp	r0, #1
   13680:	popls	{r4, pc}
   13684:	sub	r3, r0, #1
   13688:	add	r2, r4, r3
   1368c:	ldrb	r1, [r4, r3]
   13690:	cmp	r1, #47	; 0x2f
   13694:	popne	{r4, pc}
   13698:	cmp	r3, #1
   1369c:	beq	136b0 <argp_parse@@Base+0xe88>
   136a0:	ldrb	r1, [r2, #-1]!
   136a4:	sub	r0, r3, #1
   136a8:	cmp	r1, #47	; 0x2f
   136ac:	beq	136b8 <argp_parse@@Base+0xe90>
   136b0:	mov	r0, r3
   136b4:	pop	{r4, pc}
   136b8:	mov	r3, r0
   136bc:	b	13698 <argp_parse@@Base+0xe70>
   136c0:	push	{r4, r5, lr}
   136c4:	sub	sp, sp, #12
   136c8:	mov	r5, r0
   136cc:	bl	11494 <__errno_location@plt>
   136d0:	mov	r2, #0
   136d4:	mov	r4, r0
   136d8:	ldr	r3, [r0]
   136dc:	str	r2, [r4]
   136e0:	mov	r0, r5
   136e4:	str	r3, [sp]
   136e8:	str	r3, [sp, #4]
   136ec:	bl	112f0 <free@plt>
   136f0:	ldr	r3, [r4]
   136f4:	add	r2, sp, #8
   136f8:	cmp	r3, #0
   136fc:	moveq	r3, #4
   13700:	movne	r3, #0
   13704:	add	r3, r2, r3
   13708:	ldr	r3, [r3, #-8]
   1370c:	str	r3, [r4]
   13710:	add	sp, sp, #12
   13714:	pop	{r4, r5, pc}
   13718:	push	{lr}		; (str lr, [sp, #-4]!)
   1371c:	sub	sp, sp, #20
   13720:	mov	ip, #0
   13724:	ldr	lr, [sp, #24]
   13728:	str	ip, [sp, #8]
   1372c:	str	lr, [sp]
   13730:	str	ip, [sp, #4]
   13734:	bl	18184 <argp_error@@Base+0xca4>
   13738:	add	sp, sp, #20
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)
   13740:	push	{r4, lr}
   13744:	sub	sp, sp, #16
   13748:	mov	ip, #0
   1374c:	ldr	r4, [sp, #24]
   13750:	ldr	lr, [sp, #28]
   13754:	str	r4, [sp]
   13758:	str	lr, [sp, #8]
   1375c:	str	ip, [sp, #12]
   13760:	str	ip, [sp, #4]
   13764:	bl	17c24 <argp_error@@Base+0x744>
   13768:	add	sp, sp, #16
   1376c:	pop	{r4, pc}
   13770:	push	{r4, lr}
   13774:	sub	sp, sp, #16
   13778:	mov	lr, #0
   1377c:	ldr	r4, [sp, #24]
   13780:	mov	ip, #1
   13784:	stm	sp, {r4, ip, lr}
   13788:	bl	18184 <argp_error@@Base+0xca4>
   1378c:	add	sp, sp, #16
   13790:	pop	{r4, pc}
   13794:	push	{r4, r5, lr}
   13798:	sub	sp, sp, #20
   1379c:	mov	lr, #0
   137a0:	ldr	r5, [sp, #32]
   137a4:	ldr	r4, [sp, #36]	; 0x24
   137a8:	mov	ip, #1
   137ac:	str	r5, [sp]
   137b0:	str	r4, [sp, #8]
   137b4:	str	lr, [sp, #12]
   137b8:	str	ip, [sp, #4]
   137bc:	bl	17c24 <argp_error@@Base+0x744>
   137c0:	add	sp, sp, #20
   137c4:	pop	{r4, r5, pc}
   137c8:	push	{r1, r2, r3}
   137cc:	push	{lr}		; (str lr, [sp, #-4]!)
   137d0:	sub	sp, sp, #8
   137d4:	add	r3, sp, #16
   137d8:	ldr	r2, [sp, #16]
   137dc:	ldr	r1, [sp, #12]
   137e0:	str	r3, [sp, #4]
   137e4:	bl	113bc <ioctl@plt>
   137e8:	add	sp, sp, #8
   137ec:	pop	{lr}		; (ldr lr, [sp], #4)
   137f0:	add	sp, sp, #12
   137f4:	bx	lr
   137f8:	push	{r4, r5, r6, lr}
   137fc:	subs	r4, r0, #0
   13800:	beq	13874 <argp_parse@@Base+0x104c>
   13804:	mov	r1, #47	; 0x2f
   13808:	bl	11530 <strrchr@plt>
   1380c:	subs	r5, r0, #0
   13810:	beq	13860 <argp_parse@@Base+0x1038>
   13814:	add	r6, r5, #1
   13818:	sub	r3, r6, r4
   1381c:	cmp	r3, #6
   13820:	ble	13860 <argp_parse@@Base+0x1038>
   13824:	mov	r2, #7
   13828:	ldr	r1, [pc, #96]	; 13890 <argp_parse@@Base+0x1068>
   1382c:	sub	r0, r5, #6
   13830:	bl	115d8 <strncmp@plt>
   13834:	cmp	r0, #0
   13838:	bne	13860 <argp_parse@@Base+0x1038>
   1383c:	mov	r2, #3
   13840:	ldr	r1, [pc, #76]	; 13894 <argp_parse@@Base+0x106c>
   13844:	mov	r0, r6
   13848:	bl	115d8 <strncmp@plt>
   1384c:	cmp	r0, #0
   13850:	movne	r4, r6
   13854:	ldreq	r3, [pc, #60]	; 13898 <argp_parse@@Base+0x1070>
   13858:	addeq	r4, r5, #4
   1385c:	streq	r4, [r3]
   13860:	ldr	r2, [pc, #52]	; 1389c <argp_parse@@Base+0x1074>
   13864:	ldr	r3, [pc, #52]	; 138a0 <argp_parse@@Base+0x1078>
   13868:	str	r4, [r2]
   1386c:	str	r4, [r3]
   13870:	pop	{r4, r5, r6, pc}
   13874:	ldr	r3, [pc, #40]	; 138a4 <argp_parse@@Base+0x107c>
   13878:	mov	r2, #55	; 0x37
   1387c:	mov	r1, #1
   13880:	ldr	r3, [r3]
   13884:	ldr	r0, [pc, #28]	; 138a8 <argp_parse@@Base+0x1080>
   13888:	bl	113b0 <fwrite@plt>
   1388c:	bl	115e4 <abort@plt>
   13890:	muleq	r1, r0, r4
   13894:	muleq	r1, r8, r4
   13898:	andeq	sl, r2, r0, lsl #10
   1389c:	andeq	sl, r2, r0, lsr r5
   138a0:	andeq	sl, r2, r8, lsl #10
   138a4:	andeq	sl, r2, r0, lsl r5
   138a8:	andeq	r9, r1, r8, asr r4
   138ac:	push	{r4, r5, r6, r7, lr}
   138b0:	sub	sp, sp, #36	; 0x24
   138b4:	cmp	r1, #0
   138b8:	mov	r4, r0
   138bc:	ldr	r5, [sp, #56]	; 0x38
   138c0:	ldr	r6, [sp, #60]	; 0x3c
   138c4:	beq	13b04 <argp_parse@@Base+0x12dc>
   138c8:	str	r3, [sp]
   138cc:	mov	r3, r2
   138d0:	mov	r2, r1
   138d4:	ldr	r1, [pc, #564]	; 13b10 <argp_parse@@Base+0x12e8>
   138d8:	bl	1147c <fprintf@plt>
   138dc:	ldr	r3, [pc, #560]	; 13b14 <argp_parse@@Base+0x12ec>
   138e0:	ldr	r2, [pc, #560]	; 13b18 <argp_parse@@Base+0x12f0>
   138e4:	ldr	r1, [pc, #560]	; 13b1c <argp_parse@@Base+0x12f4>
   138e8:	mov	r0, r4
   138ec:	bl	1147c <fprintf@plt>
   138f0:	mov	r1, r4
   138f4:	mov	r0, #10
   138f8:	bl	11554 <fputc@plt>
   138fc:	ldr	r1, [pc, #540]	; 13b20 <argp_parse@@Base+0x12f8>
   13900:	ldr	r2, [pc, #540]	; 13b24 <argp_parse@@Base+0x12fc>
   13904:	mov	r0, r4
   13908:	bl	1147c <fprintf@plt>
   1390c:	mov	r1, r4
   13910:	mov	r0, #10
   13914:	bl	11554 <fputc@plt>
   13918:	cmp	r6, #9
   1391c:	ldrls	pc, [pc, r6, lsl #2]
   13920:	b	1394c <argp_parse@@Base+0x1124>
   13924:	andeq	r3, r1, ip, lsl #19
   13928:	ldrdeq	r3, [r1], -r8
   1392c:	strdeq	r3, [r1], -r0
   13930:	andeq	r3, r1, r8, lsl #20
   13934:	andeq	r3, r1, r8, lsr #20
   13938:	andeq	r3, r1, r0, asr sl
   1393c:	andeq	r3, r1, r0, ror sl
   13940:	muleq	r1, r8, sl
   13944:	andeq	r3, r1, r8, asr #21
   13948:	muleq	r1, r4, r9
   1394c:	ldr	ip, [r5, #32]
   13950:	ldr	r1, [r5, #28]
   13954:	ldm	r5, {r2, r3}
   13958:	ldr	r7, [r5, #24]
   1395c:	ldr	r6, [r5, #20]
   13960:	str	ip, [sp, #24]
   13964:	ldr	lr, [r5, #16]
   13968:	str	r1, [sp, #20]
   1396c:	ldr	r1, [r5, #8]
   13970:	ldr	ip, [r5, #12]
   13974:	mov	r0, r4
   13978:	str	r7, [sp, #16]
   1397c:	stm	sp, {r1, ip, lr}
   13980:	str	r6, [sp, #12]
   13984:	ldr	r1, [pc, #412]	; 13b28 <argp_parse@@Base+0x1300>
   13988:	bl	1147c <fprintf@plt>
   1398c:	add	sp, sp, #36	; 0x24
   13990:	pop	{r4, r5, r6, r7, pc}
   13994:	ldr	ip, [r5, #32]
   13998:	ldr	r1, [r5, #28]
   1399c:	ldm	r5, {r2, r3}
   139a0:	ldr	r7, [r5, #24]
   139a4:	ldr	r6, [r5, #20]
   139a8:	str	ip, [sp, #24]
   139ac:	ldr	lr, [r5, #16]
   139b0:	str	r1, [sp, #20]
   139b4:	ldr	r1, [r5, #8]
   139b8:	ldr	ip, [r5, #12]
   139bc:	mov	r0, r4
   139c0:	str	r7, [sp, #16]
   139c4:	stm	sp, {r1, ip, lr}
   139c8:	str	r6, [sp, #12]
   139cc:	ldr	r1, [pc, #344]	; 13b2c <argp_parse@@Base+0x1304>
   139d0:	bl	1147c <fprintf@plt>
   139d4:	b	1398c <argp_parse@@Base+0x1164>
   139d8:	ldr	r2, [r5]
   139dc:	mov	r0, r4
   139e0:	ldr	r1, [pc, #328]	; 13b30 <argp_parse@@Base+0x1308>
   139e4:	add	sp, sp, #36	; 0x24
   139e8:	pop	{r4, r5, r6, r7, lr}
   139ec:	b	1147c <fprintf@plt>
   139f0:	mov	r0, r4
   139f4:	ldm	r5, {r2, r3}
   139f8:	ldr	r1, [pc, #308]	; 13b34 <argp_parse@@Base+0x130c>
   139fc:	add	sp, sp, #36	; 0x24
   13a00:	pop	{r4, r5, r6, r7, lr}
   13a04:	b	1147c <fprintf@plt>
   13a08:	ldr	r1, [r5, #8]
   13a0c:	ldm	r5, {r2, r3}
   13a10:	mov	r0, r4
   13a14:	str	r1, [sp, #56]	; 0x38
   13a18:	ldr	r1, [pc, #280]	; 13b38 <argp_parse@@Base+0x1310>
   13a1c:	add	sp, sp, #36	; 0x24
   13a20:	pop	{r4, r5, r6, r7, lr}
   13a24:	b	1147c <fprintf@plt>
   13a28:	ldr	r1, [r5, #8]
   13a2c:	ldr	ip, [r5, #12]
   13a30:	ldm	r5, {r2, r3}
   13a34:	mov	r0, r4
   13a38:	str	r1, [sp, #56]	; 0x38
   13a3c:	str	ip, [sp, #60]	; 0x3c
   13a40:	ldr	r1, [pc, #244]	; 13b3c <argp_parse@@Base+0x1314>
   13a44:	add	sp, sp, #36	; 0x24
   13a48:	pop	{r4, r5, r6, r7, lr}
   13a4c:	b	1147c <fprintf@plt>
   13a50:	add	r1, r5, #8
   13a54:	ldm	r5, {r2, r3}
   13a58:	ldm	r1, {r1, ip, lr}
   13a5c:	mov	r0, r4
   13a60:	stm	sp, {r1, ip, lr}
   13a64:	ldr	r1, [pc, #212]	; 13b40 <argp_parse@@Base+0x1318>
   13a68:	bl	1147c <fprintf@plt>
   13a6c:	b	1398c <argp_parse@@Base+0x1164>
   13a70:	add	r1, r5, #8
   13a74:	ldr	r6, [r5, #20]
   13a78:	ldm	r1, {r1, ip, lr}
   13a7c:	mov	r0, r4
   13a80:	ldm	r5, {r2, r3}
   13a84:	str	r6, [sp, #12]
   13a88:	stm	sp, {r1, ip, lr}
   13a8c:	ldr	r1, [pc, #176]	; 13b44 <argp_parse@@Base+0x131c>
   13a90:	bl	1147c <fprintf@plt>
   13a94:	b	1398c <argp_parse@@Base+0x1164>
   13a98:	add	r1, r5, #8
   13a9c:	ldr	r7, [r5, #24]
   13aa0:	ldm	r1, {r1, ip, lr}
   13aa4:	mov	r0, r4
   13aa8:	ldr	r6, [r5, #20]
   13aac:	ldm	r5, {r2, r3}
   13ab0:	stm	sp, {r1, ip, lr}
   13ab4:	str	r7, [sp, #16]
   13ab8:	str	r6, [sp, #12]
   13abc:	ldr	r1, [pc, #132]	; 13b48 <argp_parse@@Base+0x1320>
   13ac0:	bl	1147c <fprintf@plt>
   13ac4:	b	1398c <argp_parse@@Base+0x1164>
   13ac8:	ldr	r1, [r5, #28]
   13acc:	ldm	r5, {r2, r3}
   13ad0:	ldr	r7, [r5, #24]
   13ad4:	ldr	r6, [r5, #20]
   13ad8:	ldr	lr, [r5, #16]
   13adc:	str	r1, [sp, #20]
   13ae0:	ldr	r1, [r5, #8]
   13ae4:	ldr	ip, [r5, #12]
   13ae8:	mov	r0, r4
   13aec:	str	r7, [sp, #16]
   13af0:	stm	sp, {r1, ip, lr}
   13af4:	str	r6, [sp, #12]
   13af8:	ldr	r1, [pc, #76]	; 13b4c <argp_parse@@Base+0x1324>
   13afc:	bl	1147c <fprintf@plt>
   13b00:	b	1398c <argp_parse@@Base+0x1164>
   13b04:	ldr	r1, [pc, #68]	; 13b50 <argp_parse@@Base+0x1328>
   13b08:	bl	1147c <fprintf@plt>
   13b0c:	b	138dc <argp_parse@@Base+0x10b4>
   13b10:	muleq	r1, ip, r4
   13b14:	andeq	r0, r0, r6, ror #15
   13b18:			; <UNDEFINED> instruction: 0x000194b0
   13b1c:			; <UNDEFINED> instruction: 0x000197b0
   13b20:	ldrdeq	r9, [r1], -r8
   13b24:			; <UNDEFINED> instruction: 0x000194b4
   13b28:	andeq	r9, r1, r4, asr #13
   13b2c:	muleq	r1, r0, r6
   13b30:	andeq	r9, r1, r4, lsl #11
   13b34:	muleq	r1, r4, r5
   13b38:	andeq	r9, r1, ip, lsr #11
   13b3c:	andeq	r9, r1, r8, asr #11
   13b40:	andeq	r9, r1, r8, ror #11
   13b44:	andeq	r9, r1, ip, lsl #12
   13b48:	andeq	r9, r1, r4, lsr r6
   13b4c:	andeq	r9, r1, r0, ror #12
   13b50:	andeq	r9, r1, r8, lsr #9
   13b54:	push	{r4, r5, lr}
   13b58:	sub	sp, sp, #12
   13b5c:	ldr	r5, [sp, #24]
   13b60:	ldr	ip, [r5]
   13b64:	cmp	ip, #0
   13b68:	beq	13b84 <argp_parse@@Base+0x135c>
   13b6c:	mov	lr, r5
   13b70:	mov	ip, #0
   13b74:	ldr	r4, [lr, #4]!
   13b78:	add	ip, ip, #1
   13b7c:	cmp	r4, #0
   13b80:	bne	13b74 <argp_parse@@Base+0x134c>
   13b84:	stm	sp, {r5, ip}
   13b88:	bl	138ac <argp_parse@@Base+0x1084>
   13b8c:	add	sp, sp, #12
   13b90:	pop	{r4, r5, pc}
   13b94:	push	{r4, r5, lr}
   13b98:	sub	sp, sp, #52	; 0x34
   13b9c:	add	r5, sp, #4
   13ba0:	ldr	r4, [sp, #64]	; 0x40
   13ba4:	mov	ip, #0
   13ba8:	sub	r4, r4, #4
   13bac:	ldr	lr, [r4, #4]!
   13bb0:	cmp	lr, #0
   13bb4:	str	lr, [r5, #4]!
   13bb8:	beq	13bc8 <argp_parse@@Base+0x13a0>
   13bbc:	add	ip, ip, #1
   13bc0:	cmp	ip, #10
   13bc4:	bne	13bac <argp_parse@@Base+0x1384>
   13bc8:	add	lr, sp, #8
   13bcc:	str	ip, [sp, #4]
   13bd0:	str	lr, [sp]
   13bd4:	bl	138ac <argp_parse@@Base+0x1084>
   13bd8:	add	sp, sp, #52	; 0x34
   13bdc:	pop	{r4, r5, pc}
   13be0:	push	{r3}		; (str r3, [sp, #-4]!)
   13be4:	push	{r4, lr}
   13be8:	sub	sp, sp, #60	; 0x3c
   13bec:	add	lr, sp, #56	; 0x38
   13bf0:	add	r3, sp, #72	; 0x48
   13bf4:	str	r3, [lr, #-44]!	; 0xffffffd4
   13bf8:	add	r4, sp, #68	; 0x44
   13bfc:	mov	r3, #0
   13c00:	ldr	ip, [r4, #4]!
   13c04:	cmp	ip, #0
   13c08:	str	ip, [lr, #4]!
   13c0c:	beq	13c1c <argp_parse@@Base+0x13f4>
   13c10:	add	r3, r3, #1
   13c14:	cmp	r3, #10
   13c18:	bne	13c00 <argp_parse@@Base+0x13d8>
   13c1c:	add	ip, sp, #16
   13c20:	str	r3, [sp, #4]
   13c24:	str	ip, [sp]
   13c28:	ldr	r3, [sp, #68]	; 0x44
   13c2c:	bl	138ac <argp_parse@@Base+0x1084>
   13c30:	add	sp, sp, #60	; 0x3c
   13c34:	pop	{r4, lr}
   13c38:	add	sp, sp, #4
   13c3c:	bx	lr
   13c40:	ldr	r3, [pc, #56]	; 13c80 <argp_parse@@Base+0x1458>
   13c44:	push	{r4, lr}
   13c48:	mov	r0, #10
   13c4c:	ldr	r1, [r3]
   13c50:	bl	11554 <fputc@plt>
   13c54:	ldr	r1, [pc, #40]	; 13c84 <argp_parse@@Base+0x145c>
   13c58:	ldr	r0, [pc, #40]	; 13c88 <argp_parse@@Base+0x1460>
   13c5c:	bl	112b4 <printf@plt>
   13c60:	ldr	r1, [pc, #36]	; 13c8c <argp_parse@@Base+0x1464>
   13c64:	ldr	r2, [pc, #36]	; 13c90 <argp_parse@@Base+0x1468>
   13c68:	ldr	r0, [pc, #36]	; 13c94 <argp_parse@@Base+0x146c>
   13c6c:	bl	112b4 <printf@plt>
   13c70:	ldr	r1, [pc, #32]	; 13c98 <argp_parse@@Base+0x1470>
   13c74:	ldr	r0, [pc, #32]	; 13c9c <argp_parse@@Base+0x1474>
   13c78:	pop	{r4, lr}
   13c7c:	b	112b4 <printf@plt>
   13c80:	andeq	sl, r2, r4, lsl r5
   13c84:	andeq	r9, r1, r0, lsl #14
   13c88:	andeq	r9, r1, r8, lsl r7
   13c8c:	andeq	r9, r1, r8, asr #8
   13c90:	andeq	r9, r1, ip, lsr #14
   13c94:	andeq	r9, r1, r4, asr r7
   13c98:	andeq	r9, r1, r8, ror #14
   13c9c:	andeq	r9, r1, r8, lsl #15
   13ca0:	push	{r4, lr}
   13ca4:	bl	1425c <argp_parse@@Base+0x1a34>
   13ca8:	cmp	r0, #0
   13cac:	popne	{r4, pc}
   13cb0:	bl	141e8 <argp_parse@@Base+0x19c0>
   13cb4:	push	{r4, lr}
   13cb8:	bl	1425c <argp_parse@@Base+0x1a34>
   13cbc:	cmp	r0, #0
   13cc0:	popne	{r4, pc}
   13cc4:	bl	141e8 <argp_parse@@Base+0x19c0>
   13cc8:	push	{r4, lr}
   13ccc:	bl	1425c <argp_parse@@Base+0x1a34>
   13cd0:	cmp	r0, #0
   13cd4:	popne	{r4, pc}
   13cd8:	bl	141e8 <argp_parse@@Base+0x19c0>
   13cdc:	push	{r4, r5, r6, lr}
   13ce0:	mov	r5, r0
   13ce4:	mov	r4, r1
   13ce8:	bl	14288 <argp_parse@@Base+0x1a60>
   13cec:	cmp	r0, #0
   13cf0:	popne	{r4, r5, r6, pc}
   13cf4:	adds	r4, r4, #0
   13cf8:	movne	r4, #1
   13cfc:	cmp	r5, #0
   13d00:	orreq	r4, r4, #1
   13d04:	cmp	r4, #0
   13d08:	popeq	{r4, r5, r6, pc}
   13d0c:	bl	141e8 <argp_parse@@Base+0x19c0>
   13d10:	push	{r4, lr}
   13d14:	cmp	r1, #0
   13d18:	orreq	r1, r1, #1
   13d1c:	bl	14288 <argp_parse@@Base+0x1a60>
   13d20:	cmp	r0, #0
   13d24:	popne	{r4, pc}
   13d28:	bl	141e8 <argp_parse@@Base+0x19c0>
   13d2c:	push	{r4, r5, r6, lr}
   13d30:	mov	r6, r0
   13d34:	mov	r5, r1
   13d38:	mov	r4, r2
   13d3c:	bl	18218 <argp_error@@Base+0xd38>
   13d40:	cmp	r0, #0
   13d44:	popne	{r4, r5, r6, pc}
   13d48:	cmp	r6, #0
   13d4c:	beq	13d5c <argp_parse@@Base+0x1534>
   13d50:	cmp	r5, #0
   13d54:	cmpne	r4, #0
   13d58:	popeq	{r4, r5, r6, pc}
   13d5c:	bl	141e8 <argp_parse@@Base+0x19c0>
   13d60:	b	13d2c <argp_parse@@Base+0x1504>
   13d64:	cmp	r2, #0
   13d68:	cmpne	r1, #0
   13d6c:	moveq	r2, #1
   13d70:	moveq	r1, r2
   13d74:	push	{r4, lr}
   13d78:	bl	18218 <argp_error@@Base+0xd38>
   13d7c:	cmp	r0, #0
   13d80:	popne	{r4, pc}
   13d84:	bl	141e8 <argp_parse@@Base+0x19c0>
   13d88:	mov	r2, r1
   13d8c:	mov	r1, r0
   13d90:	mov	r0, #0
   13d94:	b	13d2c <argp_parse@@Base+0x1504>
   13d98:	mov	r2, r1
   13d9c:	mov	r1, r0
   13da0:	mov	r0, #0
   13da4:	b	13d64 <argp_parse@@Base+0x153c>
   13da8:	push	{r4, r5, r6, lr}
   13dac:	subs	r6, r0, #0
   13db0:	sub	sp, sp, #8
   13db4:	mov	r5, r1
   13db8:	ldr	r4, [r1]
   13dbc:	beq	13df8 <argp_parse@@Base+0x15d0>
   13dc0:	lsr	r1, r4, #1
   13dc4:	add	r3, r1, #1
   13dc8:	mvn	r3, r3
   13dcc:	cmp	r4, r3
   13dd0:	bhi	13df4 <argp_parse@@Base+0x15cc>
   13dd4:	add	r4, r4, #1
   13dd8:	add	r4, r4, r1
   13ddc:	mov	r0, r6
   13de0:	mov	r1, r4
   13de4:	bl	13d2c <argp_parse@@Base+0x1504>
   13de8:	str	r4, [r5]
   13dec:	add	sp, sp, #8
   13df0:	pop	{r4, r5, r6, pc}
   13df4:	bl	141e8 <argp_parse@@Base+0x19c0>
   13df8:	cmp	r4, #0
   13dfc:	bne	13ddc <argp_parse@@Base+0x15b4>
   13e00:	mov	r1, r2
   13e04:	mov	r0, #64	; 0x40
   13e08:	str	r2, [sp, #4]
   13e0c:	bl	18a2c <argp_error@@Base+0x154c>
   13e10:	ldr	r2, [sp, #4]
   13e14:	cmp	r0, #0
   13e18:	movne	r4, r0
   13e1c:	addeq	r4, r0, #1
   13e20:	b	13ddc <argp_parse@@Base+0x15b4>
   13e24:	mov	r2, #1
   13e28:	b	13da8 <argp_parse@@Base+0x1580>
   13e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e30:	sub	sp, sp, #12
   13e34:	ldr	r6, [r1]
   13e38:	mov	sl, r1
   13e3c:	mov	r9, r0
   13e40:	asrs	r4, r6, #1
   13e44:	mov	r5, r2
   13e48:	mov	fp, r3
   13e4c:	ldr	r7, [sp, #48]	; 0x30
   13e50:	bmi	13fbc <argp_parse@@Base+0x1794>
   13e54:	mvn	r3, #-2147483648	; 0x80000000
   13e58:	sub	r3, r3, r4
   13e5c:	cmp	r6, r3
   13e60:	movle	r3, #0
   13e64:	movgt	r3, #1
   13e68:	mvn	r8, fp
   13e6c:	cmp	r3, #0
   13e70:	addeq	r4, r4, r6
   13e74:	mvnne	r4, #-2147483648	; 0x80000000
   13e78:	lsr	r8, r8, #31
   13e7c:	cmp	fp, r4
   13e80:	movge	r3, #0
   13e84:	andlt	r3, r8, #1
   13e88:	cmp	r3, #0
   13e8c:	beq	13f74 <argp_parse@@Base+0x174c>
   13e90:	cmp	r7, #0
   13e94:	blt	14044 <argp_parse@@Base+0x181c>
   13e98:	bne	1403c <argp_parse@@Base+0x1814>
   13e9c:	mov	r2, #64	; 0x40
   13ea0:	mov	r1, r7
   13ea4:	mov	r0, r2
   13ea8:	str	r2, [sp, #4]
   13eac:	bl	18c38 <argp_error@@Base+0x1758>
   13eb0:	ldr	r2, [sp, #4]
   13eb4:	mov	r1, r7
   13eb8:	mov	r4, r0
   13ebc:	mov	r0, r2
   13ec0:	bl	18e58 <argp_error@@Base+0x1978>
   13ec4:	ldr	r2, [sp, #4]
   13ec8:	sub	r1, r2, r1
   13ecc:	cmp	r9, #0
   13ed0:	sub	r3, r4, r6
   13ed4:	streq	r9, [sl]
   13ed8:	cmp	r3, r5
   13edc:	bge	13f60 <argp_parse@@Base+0x1738>
   13ee0:	cmp	r5, #0
   13ee4:	blt	13fd0 <argp_parse@@Base+0x17a8>
   13ee8:	cmp	r6, #0
   13eec:	blt	13f0c <argp_parse@@Base+0x16e4>
   13ef0:	mvn	r3, #-2147483648	; 0x80000000
   13ef4:	sub	r3, r3, r5
   13ef8:	cmp	r6, r3
   13efc:	movle	r3, #0
   13f00:	movgt	r3, #1
   13f04:	cmp	r3, #0
   13f08:	bne	140cc <argp_parse@@Base+0x18a4>
   13f0c:	add	r5, r6, r5
   13f10:	cmp	fp, r5
   13f14:	movge	r8, #0
   13f18:	andlt	r8, r8, #1
   13f1c:	cmp	r8, #0
   13f20:	mov	r4, r5
   13f24:	bne	140cc <argp_parse@@Base+0x18a4>
   13f28:	cmp	r7, #0
   13f2c:	blt	13fe4 <argp_parse@@Base+0x17bc>
   13f30:	beq	13f5c <argp_parse@@Base+0x1734>
   13f34:	cmp	r5, #0
   13f38:	blt	1408c <argp_parse@@Base+0x1864>
   13f3c:	mov	r1, r7
   13f40:	mvn	r0, #-2147483648	; 0x80000000
   13f44:	bl	18c38 <argp_error@@Base+0x1758>
   13f48:	cmp	r5, r0
   13f4c:	movle	r0, #0
   13f50:	movgt	r0, #1
   13f54:	cmp	r0, #0
   13f58:	bne	140cc <argp_parse@@Base+0x18a4>
   13f5c:	mul	r1, r5, r7
   13f60:	mov	r0, r9
   13f64:	bl	13cdc <argp_parse@@Base+0x14b4>
   13f68:	str	r4, [sl]
   13f6c:	add	sp, sp, #12
   13f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f74:	cmp	r7, #0
   13f78:	blt	14010 <argp_parse@@Base+0x17e8>
   13f7c:	beq	13e9c <argp_parse@@Base+0x1674>
   13f80:	cmp	r4, #0
   13f84:	blt	1404c <argp_parse@@Base+0x1824>
   13f88:	mov	r1, r7
   13f8c:	mvn	r0, #-2147483648	; 0x80000000
   13f90:	bl	18c38 <argp_error@@Base+0x1758>
   13f94:	cmp	r0, r4
   13f98:	movge	r0, #0
   13f9c:	movlt	r0, #1
   13fa0:	cmp	r0, #0
   13fa4:	mvnne	r2, #-2147483648	; 0x80000000
   13fa8:	bne	13ea0 <argp_parse@@Base+0x1678>
   13fac:	mul	r1, r7, r4
   13fb0:	cmp	r1, #63	; 0x3f
   13fb4:	bgt	13ecc <argp_parse@@Base+0x16a4>
   13fb8:	b	13e9c <argp_parse@@Base+0x1674>
   13fbc:	rsb	r3, r4, #-2147483648	; 0x80000000
   13fc0:	cmp	r6, r3
   13fc4:	movge	r3, #0
   13fc8:	movlt	r3, #1
   13fcc:	b	13e68 <argp_parse@@Base+0x1640>
   13fd0:	rsb	r3, r5, #-2147483648	; 0x80000000
   13fd4:	cmp	r6, r3
   13fd8:	movge	r3, #0
   13fdc:	movlt	r3, #1
   13fe0:	b	13f04 <argp_parse@@Base+0x16dc>
   13fe4:	cmp	r5, #0
   13fe8:	blt	14070 <argp_parse@@Base+0x1848>
   13fec:	cmn	r7, #1
   13ff0:	beq	13f5c <argp_parse@@Base+0x1734>
   13ff4:	mov	r1, r7
   13ff8:	mov	r0, #-2147483648	; 0x80000000
   13ffc:	bl	18c38 <argp_error@@Base+0x1758>
   14000:	cmp	r5, r0
   14004:	movle	r0, #0
   14008:	movgt	r0, #1
   1400c:	b	13f54 <argp_parse@@Base+0x172c>
   14010:	cmp	r4, #0
   14014:	blt	140b0 <argp_parse@@Base+0x1888>
   14018:	cmn	r7, #1
   1401c:	beq	13fac <argp_parse@@Base+0x1784>
   14020:	mov	r1, r7
   14024:	mov	r0, #-2147483648	; 0x80000000
   14028:	bl	18c38 <argp_error@@Base+0x1758>
   1402c:	cmp	r0, r4
   14030:	movge	r0, #0
   14034:	movlt	r0, #1
   14038:	b	13fa0 <argp_parse@@Base+0x1778>
   1403c:	mov	r4, fp
   14040:	b	13f88 <argp_parse@@Base+0x1760>
   14044:	mov	r4, fp
   14048:	b	14018 <argp_parse@@Base+0x17f0>
   1404c:	cmn	r4, #1
   14050:	beq	13fac <argp_parse@@Base+0x1784>
   14054:	mov	r1, r4
   14058:	mov	r0, #-2147483648	; 0x80000000
   1405c:	bl	18c38 <argp_error@@Base+0x1758>
   14060:	cmp	r7, r0
   14064:	movle	r0, #0
   14068:	movgt	r0, #1
   1406c:	b	13fa0 <argp_parse@@Base+0x1778>
   14070:	mov	r1, r7
   14074:	mvn	r0, #-2147483648	; 0x80000000
   14078:	bl	18c38 <argp_error@@Base+0x1758>
   1407c:	cmp	r5, r0
   14080:	movge	r0, #0
   14084:	movlt	r0, #1
   14088:	b	13f54 <argp_parse@@Base+0x172c>
   1408c:	cmn	r5, #1
   14090:	beq	13f5c <argp_parse@@Base+0x1734>
   14094:	mov	r1, r5
   14098:	mov	r0, #-2147483648	; 0x80000000
   1409c:	bl	18c38 <argp_error@@Base+0x1758>
   140a0:	cmp	r7, r0
   140a4:	movle	r0, #0
   140a8:	movgt	r0, #1
   140ac:	b	13f54 <argp_parse@@Base+0x172c>
   140b0:	mov	r1, r7
   140b4:	mvn	r0, #-2147483648	; 0x80000000
   140b8:	bl	18c38 <argp_error@@Base+0x1758>
   140bc:	cmp	r0, r4
   140c0:	movle	r0, #0
   140c4:	movgt	r0, #1
   140c8:	b	13fa0 <argp_parse@@Base+0x1778>
   140cc:	bl	141e8 <argp_parse@@Base+0x19c0>
   140d0:	push	{r4, lr}
   140d4:	mov	r1, #1
   140d8:	bl	14214 <argp_parse@@Base+0x19ec>
   140dc:	cmp	r0, #0
   140e0:	popne	{r4, pc}
   140e4:	bl	141e8 <argp_parse@@Base+0x19c0>
   140e8:	push	{r4, lr}
   140ec:	mov	r1, #1
   140f0:	bl	14214 <argp_parse@@Base+0x19ec>
   140f4:	cmp	r0, #0
   140f8:	popne	{r4, pc}
   140fc:	bl	141e8 <argp_parse@@Base+0x19c0>
   14100:	push	{r4, lr}
   14104:	bl	14214 <argp_parse@@Base+0x19ec>
   14108:	cmp	r0, #0
   1410c:	popne	{r4, pc}
   14110:	bl	141e8 <argp_parse@@Base+0x19c0>
   14114:	push	{r4, lr}
   14118:	bl	14214 <argp_parse@@Base+0x19ec>
   1411c:	cmp	r0, #0
   14120:	popne	{r4, pc}
   14124:	bl	141e8 <argp_parse@@Base+0x19c0>
   14128:	push	{r4, r5, r6, lr}
   1412c:	mov	r6, r0
   14130:	mov	r0, r1
   14134:	mov	r4, r1
   14138:	bl	1425c <argp_parse@@Base+0x1a34>
   1413c:	subs	r5, r0, #0
   14140:	beq	14158 <argp_parse@@Base+0x1930>
   14144:	mov	r2, r4
   14148:	mov	r1, r6
   1414c:	bl	11308 <memcpy@plt>
   14150:	mov	r0, r5
   14154:	pop	{r4, r5, r6, pc}
   14158:	bl	141e8 <argp_parse@@Base+0x19c0>
   1415c:	push	{r4, r5, r6, lr}
   14160:	mov	r6, r0
   14164:	mov	r0, r1
   14168:	mov	r4, r1
   1416c:	bl	1425c <argp_parse@@Base+0x1a34>
   14170:	subs	r5, r0, #0
   14174:	beq	1418c <argp_parse@@Base+0x1964>
   14178:	mov	r2, r4
   1417c:	mov	r1, r6
   14180:	bl	11308 <memcpy@plt>
   14184:	mov	r0, r5
   14188:	pop	{r4, r5, r6, pc}
   1418c:	bl	141e8 <argp_parse@@Base+0x19c0>
   14190:	push	{r4, r5, r6, lr}
   14194:	mov	r6, r0
   14198:	add	r0, r1, #1
   1419c:	mov	r4, r1
   141a0:	bl	1425c <argp_parse@@Base+0x1a34>
   141a4:	subs	r5, r0, #0
   141a8:	beq	141c8 <argp_parse@@Base+0x19a0>
   141ac:	mov	r3, #0
   141b0:	mov	r1, r6
   141b4:	strb	r3, [r5, r4]
   141b8:	mov	r2, r4
   141bc:	bl	11308 <memcpy@plt>
   141c0:	mov	r0, r5
   141c4:	pop	{r4, r5, r6, pc}
   141c8:	bl	141e8 <argp_parse@@Base+0x19c0>
   141cc:	push	{r4, lr}
   141d0:	mov	r4, r0
   141d4:	bl	11458 <strlen@plt>
   141d8:	add	r1, r0, #1
   141dc:	mov	r0, r4
   141e0:	pop	{r4, lr}
   141e4:	b	14128 <argp_parse@@Base+0x1900>
   141e8:	ldr	r1, [pc, #24]	; 14208 <argp_parse@@Base+0x19e0>
   141ec:	push	{r4, lr}
   141f0:	ldr	r0, [r1]
   141f4:	ldr	r3, [pc, #16]	; 1420c <argp_parse@@Base+0x19e4>
   141f8:	ldr	r2, [pc, #16]	; 14210 <argp_parse@@Base+0x19e8>
   141fc:	mov	r1, #0
   14200:	bl	113c8 <error@plt>
   14204:	bl	115e4 <abort@plt>
   14208:	andeq	sl, r2, r8, ror #9
   1420c:	andeq	r9, r1, r0, ror #15
   14210:	andeq	r8, r1, ip, lsr pc
   14214:	cmp	r1, #0
   14218:	cmpne	r0, #0
   1421c:	moveq	r1, #1
   14220:	moveq	r0, r1
   14224:	umull	r2, r3, r0, r1
   14228:	adds	r3, r3, #0
   1422c:	movne	r3, #1
   14230:	cmp	r2, #0
   14234:	blt	14244 <argp_parse@@Base+0x1a1c>
   14238:	cmp	r3, #0
   1423c:	bne	14244 <argp_parse@@Base+0x1a1c>
   14240:	b	1126c <calloc@plt>
   14244:	push	{r4, lr}
   14248:	bl	11494 <__errno_location@plt>
   1424c:	mov	r3, #12
   14250:	str	r3, [r0]
   14254:	mov	r0, #0
   14258:	pop	{r4, pc}
   1425c:	cmp	r0, #0
   14260:	moveq	r0, #1
   14264:	cmp	r0, #0
   14268:	blt	14270 <argp_parse@@Base+0x1a48>
   1426c:	b	113ec <malloc@plt>
   14270:	push	{r4, lr}
   14274:	bl	11494 <__errno_location@plt>
   14278:	mov	r3, #12
   1427c:	str	r3, [r0]
   14280:	mov	r0, #0
   14284:	pop	{r4, pc}
   14288:	cmp	r0, #0
   1428c:	beq	142b0 <argp_parse@@Base+0x1a88>
   14290:	cmp	r1, #0
   14294:	push	{lr}		; (str lr, [sp, #-4]!)
   14298:	sub	sp, sp, #12
   1429c:	beq	142b8 <argp_parse@@Base+0x1a90>
   142a0:	blt	142d0 <argp_parse@@Base+0x1aa8>
   142a4:	add	sp, sp, #12
   142a8:	pop	{lr}		; (ldr lr, [sp], #4)
   142ac:	b	11368 <realloc@plt>
   142b0:	mov	r0, r1
   142b4:	b	1425c <argp_parse@@Base+0x1a34>
   142b8:	str	r1, [sp, #4]
   142bc:	bl	136c0 <argp_parse@@Base+0xe98>
   142c0:	ldr	r3, [sp, #4]
   142c4:	mov	r0, r3
   142c8:	add	sp, sp, #12
   142cc:	pop	{pc}		; (ldr pc, [sp], #4)
   142d0:	bl	11494 <__errno_location@plt>
   142d4:	mov	r2, #12
   142d8:	mov	r3, #0
   142dc:	str	r2, [r0]
   142e0:	b	142c4 <argp_parse@@Base+0x1a9c>
   142e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142e8:	sub	sp, sp, #20
   142ec:	ldr	r5, [r0, #4]
   142f0:	ldr	r4, [r0]
   142f4:	cmp	r5, #0
   142f8:	ldr	r7, [r0, #8]
   142fc:	beq	143d4 <argp_parse@@Base+0x1bac>
   14300:	stmib	sp, {r1, r2, r3}
   14304:	mov	r6, #1
   14308:	str	r4, [sp]
   1430c:	mov	r8, #0
   14310:	b	14330 <argp_parse@@Base+0x1b08>
   14314:	mov	r3, r6
   14318:	subs	r5, r5, #1
   1431c:	moveq	r3, #0
   14320:	andne	r3, r3, #1
   14324:	cmp	r3, #0
   14328:	add	r4, r4, #24
   1432c:	beq	1439c <argp_parse@@Base+0x1b74>
   14330:	ldr	fp, [r4, #12]
   14334:	ands	r9, fp, #8
   14338:	movne	r3, r6
   1433c:	movne	r9, r8
   14340:	bne	14318 <argp_parse@@Base+0x1af0>
   14344:	ldr	sl, [r4, #4]
   14348:	sub	r3, sl, #1
   1434c:	cmp	r3, #254	; 0xfe
   14350:	bhi	14314 <argp_parse@@Base+0x1aec>
   14354:	bl	11434 <__ctype_b_loc@plt>
   14358:	lsl	r3, sl, #1
   1435c:	ldr	r1, [r0]
   14360:	ldrh	r3, [r1, r3]
   14364:	tst	r3, #16384	; 0x4000
   14368:	beq	14314 <argp_parse@@Base+0x1aec>
   1436c:	ldrb	r3, [r7]
   14370:	cmp	r3, sl
   14374:	bne	14314 <argp_parse@@Base+0x1aec>
   14378:	ldr	r3, [sp]
   1437c:	tst	fp, #4
   14380:	moveq	r3, r4
   14384:	tst	fp, #2
   14388:	str	r3, [sp]
   1438c:	movne	r3, r6
   14390:	beq	143ac <argp_parse@@Base+0x1b84>
   14394:	add	r7, r7, #1
   14398:	b	14318 <argp_parse@@Base+0x1af0>
   1439c:	mov	sl, r9
   143a0:	mov	r0, sl
   143a4:	add	sp, sp, #20
   143a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143ac:	ldr	r3, [sp, #12]
   143b0:	ldr	r2, [sp, #8]
   143b4:	ldr	r1, [sp]
   143b8:	mov	r0, r4
   143bc:	ldr	ip, [sp, #4]
   143c0:	blx	ip
   143c4:	clz	r3, r0
   143c8:	mov	r9, r0
   143cc:	lsr	r3, r3, #5
   143d0:	b	14394 <argp_parse@@Base+0x1b6c>
   143d4:	mov	sl, r5
   143d8:	b	143a0 <argp_parse@@Base+0x1b78>
   143dc:	push	{r4, r5, r6, lr}
   143e0:	ldr	r4, [r0, #12]
   143e4:	ands	r4, r4, #8
   143e8:	movne	r4, #0
   143ec:	bne	14418 <argp_parse@@Base+0x1bf0>
   143f0:	ldr	r5, [r0, #4]
   143f4:	sub	r3, r5, #1
   143f8:	cmp	r3, #254	; 0xfe
   143fc:	bhi	14418 <argp_parse@@Base+0x1bf0>
   14400:	bl	11434 <__ctype_b_loc@plt>
   14404:	lsl	r3, r5, #1
   14408:	ldr	r2, [r0]
   1440c:	ldrh	r3, [r2, r3]
   14410:	tst	r3, #16384	; 0x4000
   14414:	movne	r4, r5
   14418:	mov	r0, r4
   1441c:	pop	{r4, r5, r6, pc}
   14420:	push	{r4, lr}
   14424:	mov	r4, r0
   14428:	bl	11434 <__ctype_b_loc@plt>
   1442c:	ldr	r2, [r4]
   14430:	ldr	lr, [r0]
   14434:	b	1443c <argp_parse@@Base+0x1c14>
   14438:	str	r2, [r4]
   1443c:	ldrb	r1, [r2]
   14440:	mov	r3, r2
   14444:	add	r2, r2, #1
   14448:	lsl	r0, r1, #1
   1444c:	ldrh	ip, [lr, r0]
   14450:	tst	ip, #8192	; 0x2000
   14454:	bne	14438 <argp_parse@@Base+0x1c10>
   14458:	subs	r0, r1, #45	; 0x2d
   1445c:	movne	r0, #1
   14460:	cmp	r1, #0
   14464:	popeq	{r4, pc}
   14468:	tst	ip, #8
   1446c:	popne	{r4, pc}
   14470:	add	r3, r3, #1
   14474:	str	r3, [r4]
   14478:	ldrb	r2, [r3]
   1447c:	cmp	r2, #0
   14480:	lsl	r2, r2, #1
   14484:	popeq	{r4, pc}
   14488:	ldrh	r2, [lr, r2]
   1448c:	tst	r2, #8
   14490:	beq	14470 <argp_parse@@Base+0x1c48>
   14494:	pop	{r4, pc}
   14498:	push	{r4, r5, r6, lr}
   1449c:	mov	r5, r0
   144a0:	ldr	r0, [r0, #12]
   144a4:	cmp	r0, #0
   144a8:	beq	144bc <argp_parse@@Base+0x1c94>
   144ac:	ldr	r4, [r0, #24]
   144b0:	bl	136c0 <argp_parse@@Base+0xe98>
   144b4:	subs	r0, r4, #0
   144b8:	bne	144ac <argp_parse@@Base+0x1c84>
   144bc:	ldr	r3, [r5, #4]
   144c0:	cmp	r3, #0
   144c4:	beq	144d8 <argp_parse@@Base+0x1cb0>
   144c8:	ldr	r0, [r5]
   144cc:	bl	136c0 <argp_parse@@Base+0xe98>
   144d0:	ldr	r0, [r5, #8]
   144d4:	bl	136c0 <argp_parse@@Base+0xe98>
   144d8:	mov	r0, r5
   144dc:	pop	{r4, r5, r6, lr}
   144e0:	b	136c0 <argp_parse@@Base+0xe98>
   144e4:	push	{r4, r5, r6, r7, r8, lr}
   144e8:	mov	r5, r1
   144ec:	ldr	r3, [r0, #28]
   144f0:	ldr	r1, [r0, #24]
   144f4:	ldr	r2, [r0, #16]
   144f8:	sub	r3, r3, r1
   144fc:	cmp	r3, r2
   14500:	mov	r4, r0
   14504:	bhi	14570 <argp_parse@@Base+0x1d48>
   14508:	ldr	r1, [r4, #20]
   1450c:	mov	r6, #32
   14510:	cmp	r1, #0
   14514:	subge	r5, r5, r1
   14518:	mov	r7, #1
   1451c:	cmp	r5, #0
   14520:	sub	r5, r5, #1
   14524:	ble	14550 <argp_parse@@Base+0x1d28>
   14528:	ldr	r3, [r4, #28]
   1452c:	ldr	r2, [r4, #32]
   14530:	cmp	r3, r2
   14534:	bcs	14554 <argp_parse@@Base+0x1d2c>
   14538:	add	r2, r3, #1
   1453c:	cmp	r5, #0
   14540:	str	r2, [r4, #28]
   14544:	sub	r5, r5, #1
   14548:	strb	r6, [r3]
   1454c:	bgt	14528 <argp_parse@@Base+0x1d00>
   14550:	pop	{r4, r5, r6, r7, r8, pc}
   14554:	mov	r1, r7
   14558:	mov	r0, r4
   1455c:	bl	18970 <argp_error@@Base+0x1490>
   14560:	cmp	r0, #0
   14564:	beq	1451c <argp_parse@@Base+0x1cf4>
   14568:	ldr	r3, [r4, #28]
   1456c:	b	14538 <argp_parse@@Base+0x1d10>
   14570:	bl	182e0 <argp_error@@Base+0xe00>
   14574:	b	14508 <argp_parse@@Base+0x1ce0>
   14578:	push	{r4, r5, r6, lr}
   1457c:	subs	r4, r2, #0
   14580:	popeq	{r4, r5, r6, pc}
   14584:	ldr	ip, [r4, #20]
   14588:	cmp	ip, #0
   1458c:	popeq	{r4, r5, r6, pc}
   14590:	mov	r6, r1
   14594:	mov	r5, r0
   14598:	mov	r1, r3
   1459c:	mov	r0, r4
   145a0:	bl	13564 <argp_parse@@Base+0xd3c>
   145a4:	ldr	r3, [r4, #20]
   145a8:	mov	r1, r5
   145ac:	mov	r2, r0
   145b0:	mov	r0, r6
   145b4:	pop	{r4, r5, r6, lr}
   145b8:	bx	r3
   145bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145c0:	mov	r5, r2
   145c4:	sub	sp, sp, #12
   145c8:	mov	r2, r1
   145cc:	ldr	r3, [r5, #16]
   145d0:	ldr	r1, [pc, #488]	; 147c0 <argp_parse@@Base+0x1f98>
   145d4:	mov	r8, r0
   145d8:	bl	14578 <argp_parse@@Base+0x1d50>
   145dc:	subs	r6, r0, #0
   145e0:	beq	146ec <argp_parse@@Base+0x1ec4>
   145e4:	ldrb	r3, [r6]
   145e8:	cmp	r3, #0
   145ec:	beq	146e0 <argp_parse@@Base+0x1eb8>
   145f0:	ldr	r3, [r5, #8]
   145f4:	ldr	r3, [r3]
   145f8:	cmp	r3, #0
   145fc:	beq	14624 <argp_parse@@Base+0x1dfc>
   14600:	ldr	r4, [r5, #4]
   14604:	ldr	r3, [r4, #28]
   14608:	ldr	r2, [r4, #32]
   1460c:	cmp	r3, r2
   14610:	bcs	147a4 <argp_parse@@Base+0x1f7c>
   14614:	add	r1, r3, #1
   14618:	mov	r2, #10
   1461c:	str	r1, [r4, #28]
   14620:	strb	r2, [r3]
   14624:	ldr	sl, [pc, #408]	; 147c4 <argp_parse@@Base+0x1f9c>
   14628:	ldr	r0, [r5, #4]
   1462c:	ldr	r1, [sl, #24]
   14630:	bl	144e4 <argp_parse@@Base+0x1cbc>
   14634:	ldr	r4, [r5, #4]
   14638:	ldr	r9, [sl, #24]
   1463c:	ldr	r7, [r4, #28]
   14640:	ldr	r3, [r4, #24]
   14644:	ldr	r2, [r4, #16]
   14648:	sub	r3, r7, r3
   1464c:	cmp	r3, r2
   14650:	strls	r9, [r4, #4]
   14654:	movls	fp, r4
   14658:	bhi	14728 <argp_parse@@Base+0x1f00>
   1465c:	str	r9, [fp, #12]
   14660:	mov	r0, r6
   14664:	bl	11458 <strlen@plt>
   14668:	subs	r9, r0, #0
   1466c:	beq	146a4 <argp_parse@@Base+0x1e7c>
   14670:	ldr	r2, [r4, #32]
   14674:	add	r3, r7, r9
   14678:	cmp	r2, r3
   1467c:	bcc	1470c <argp_parse@@Base+0x1ee4>
   14680:	mov	r2, r9
   14684:	mov	r0, r7
   14688:	mov	r1, r6
   1468c:	bl	11308 <memcpy@plt>
   14690:	ldr	r3, [r4, #28]
   14694:	add	r9, r3, r9
   14698:	str	r9, [r4, #28]
   1469c:	ldr	r4, [r5, #4]
   146a0:	ldr	r7, [r4, #28]
   146a4:	ldr	r3, [r4, #24]
   146a8:	ldr	r2, [r4, #16]
   146ac:	sub	r3, r7, r3
   146b0:	cmp	r3, r2
   146b4:	movls	r9, r4
   146b8:	bhi	14774 <argp_parse@@Base+0x1f4c>
   146bc:	ldr	r2, [r9, #32]
   146c0:	mov	r3, #0
   146c4:	cmp	r2, r7
   146c8:	str	r3, [r4, #4]
   146cc:	bls	14788 <argp_parse@@Base+0x1f60>
   146d0:	add	r2, r7, #1
   146d4:	mov	r3, #10
   146d8:	str	r2, [r9, #28]
   146dc:	strb	r3, [r7]
   146e0:	ldr	r3, [r5, #8]
   146e4:	mov	r2, #1
   146e8:	str	r2, [r3, #4]
   146ec:	cmp	r8, r6
   146f0:	beq	14704 <argp_parse@@Base+0x1edc>
   146f4:	mov	r0, r6
   146f8:	add	sp, sp, #12
   146fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14700:	b	136c0 <argp_parse@@Base+0xe98>
   14704:	add	sp, sp, #12
   14708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1470c:	mov	r1, r9
   14710:	mov	r0, r4
   14714:	bl	18970 <argp_error@@Base+0x1490>
   14718:	cmp	r0, #0
   1471c:	beq	1469c <argp_parse@@Base+0x1e74>
   14720:	ldr	r7, [r4, #28]
   14724:	b	14680 <argp_parse@@Base+0x1e58>
   14728:	mov	r0, r4
   1472c:	str	r9, [sp, #4]
   14730:	bl	182e0 <argp_error@@Base+0xe00>
   14734:	ldr	fp, [r5, #4]
   14738:	ldr	r3, [sp, #4]
   1473c:	ldr	r9, [sl, #24]
   14740:	ldr	r7, [fp, #28]
   14744:	ldr	r2, [fp, #24]
   14748:	ldr	r1, [fp, #16]
   1474c:	sub	r2, r7, r2
   14750:	cmp	r2, r1
   14754:	str	r3, [r4, #4]
   14758:	movls	r4, fp
   1475c:	bls	1465c <argp_parse@@Base+0x1e34>
   14760:	mov	r0, fp
   14764:	bl	182e0 <argp_error@@Base+0xe00>
   14768:	ldr	r4, [r5, #4]
   1476c:	ldr	r7, [r4, #28]
   14770:	b	1465c <argp_parse@@Base+0x1e34>
   14774:	mov	r0, r4
   14778:	bl	182e0 <argp_error@@Base+0xe00>
   1477c:	ldr	r9, [r5, #4]
   14780:	ldr	r7, [r9, #28]
   14784:	b	146bc <argp_parse@@Base+0x1e94>
   14788:	mov	r1, #1
   1478c:	mov	r0, r9
   14790:	bl	18970 <argp_error@@Base+0x1490>
   14794:	cmp	r0, #0
   14798:	beq	146e0 <argp_parse@@Base+0x1eb8>
   1479c:	ldr	r7, [r9, #28]
   147a0:	b	146d0 <argp_parse@@Base+0x1ea8>
   147a4:	mov	r1, #1
   147a8:	mov	r0, r4
   147ac:	bl	18970 <argp_error@@Base+0x1490>
   147b0:	cmp	r0, #0
   147b4:	beq	14624 <argp_parse@@Base+0x1dfc>
   147b8:	ldr	r3, [r4, #28]
   147bc:	b	14614 <argp_parse@@Base+0x1dec>
   147c0:	andeq	r0, r0, #3
   147c4:	andeq	sl, r2, r0, asr #9
   147c8:	ldr	r3, [r1, #12]
   147cc:	push	{r4, r5, r6, r7, r8, lr}
   147d0:	cmp	r3, #0
   147d4:	mov	r4, r1
   147d8:	mov	r6, r0
   147dc:	beq	148c4 <argp_parse@@Base+0x209c>
   147e0:	ldr	r3, [r1, #8]
   147e4:	ldr	r2, [r1]
   147e8:	ldr	r7, [r3]
   147ec:	ldr	r3, [r3, #4]
   147f0:	ldr	r5, [r2, #16]
   147f4:	cmp	r3, #0
   147f8:	cmpne	r7, #0
   147fc:	beq	14834 <argp_parse@@Base+0x200c>
   14800:	ldr	r2, [r2, #12]
   14804:	ldr	r3, [r7, #12]
   14808:	cmp	r2, r3
   1480c:	beq	14834 <argp_parse@@Base+0x200c>
   14810:	ldr	r8, [r1, #4]
   14814:	ldr	r3, [r8, #28]
   14818:	ldr	r2, [r8, #32]
   1481c:	cmp	r3, r2
   14820:	bcs	14954 <argp_parse@@Base+0x212c>
   14824:	add	r1, r3, #1
   14828:	mov	r2, #10
   1482c:	str	r1, [r8, #28]
   14830:	strb	r2, [r3]
   14834:	cmp	r5, #0
   14838:	beq	14920 <argp_parse@@Base+0x20f8>
   1483c:	ldr	r0, [r5]
   14840:	cmp	r0, #0
   14844:	beq	14920 <argp_parse@@Base+0x20f8>
   14848:	ldrb	r3, [r0]
   1484c:	cmp	r3, #0
   14850:	beq	14920 <argp_parse@@Base+0x20f8>
   14854:	cmp	r7, #0
   14858:	beq	14888 <argp_parse@@Base+0x2060>
   1485c:	ldr	r3, [r7, #16]
   14860:	cmp	r5, r3
   14864:	beq	14920 <argp_parse@@Base+0x20f8>
   14868:	cmp	r3, #0
   1486c:	beq	14888 <argp_parse@@Base+0x2060>
   14870:	ldr	r3, [r3, #12]
   14874:	cmp	r3, #0
   14878:	cmpne	r5, r3
   1487c:	bne	14870 <argp_parse@@Base+0x2048>
   14880:	cmp	r5, r3
   14884:	beq	14920 <argp_parse@@Base+0x20f8>
   14888:	ldr	r3, [r4, #4]
   1488c:	ldr	r1, [r5, #16]
   14890:	mov	r2, r4
   14894:	ldr	r7, [r3, #12]
   14898:	bl	145bc <argp_parse@@Base+0x1d94>
   1489c:	ldr	r5, [r4, #4]
   148a0:	mov	r0, r5
   148a4:	ldr	r3, [r5, #28]
   148a8:	ldr	r1, [r5, #24]
   148ac:	ldr	r2, [r5, #16]
   148b0:	sub	r3, r3, r1
   148b4:	cmp	r3, r2
   148b8:	bhi	14948 <argp_parse@@Base+0x2120>
   148bc:	str	r7, [r5, #12]
   148c0:	b	14924 <argp_parse@@Base+0x20fc>
   148c4:	ldr	r5, [r1, #4]
   148c8:	ldr	r3, [r5, #28]
   148cc:	ldr	r1, [r5, #32]
   148d0:	add	r2, r3, #2
   148d4:	cmp	r1, r2
   148d8:	bcc	14904 <argp_parse@@Base+0x20dc>
   148dc:	ldr	r2, [pc, #140]	; 14970 <argp_parse@@Base+0x2148>
   148e0:	mov	r1, r6
   148e4:	ldrh	r2, [r2]
   148e8:	strh	r2, [r3]
   148ec:	ldr	r3, [r5, #28]
   148f0:	ldr	r0, [r4, #4]
   148f4:	add	r3, r3, #2
   148f8:	str	r3, [r5, #28]
   148fc:	pop	{r4, r5, r6, r7, r8, lr}
   14900:	b	144e4 <argp_parse@@Base+0x1cbc>
   14904:	mov	r1, #2
   14908:	mov	r0, r5
   1490c:	bl	18970 <argp_error@@Base+0x1490>
   14910:	cmp	r0, #0
   14914:	beq	14938 <argp_parse@@Base+0x2110>
   14918:	ldr	r3, [r5, #28]
   1491c:	b	148dc <argp_parse@@Base+0x20b4>
   14920:	ldr	r0, [r4, #4]
   14924:	mov	r3, #0
   14928:	str	r3, [r4, #12]
   1492c:	mov	r1, r6
   14930:	pop	{r4, r5, r6, r7, r8, lr}
   14934:	b	144e4 <argp_parse@@Base+0x1cbc>
   14938:	ldr	r0, [r4, #4]
   1493c:	mov	r1, r6
   14940:	pop	{r4, r5, r6, r7, r8, lr}
   14944:	b	144e4 <argp_parse@@Base+0x1cbc>
   14948:	bl	182e0 <argp_error@@Base+0xe00>
   1494c:	ldr	r0, [r4, #4]
   14950:	b	148bc <argp_parse@@Base+0x2094>
   14954:	mov	r1, #1
   14958:	mov	r0, r8
   1495c:	bl	18970 <argp_error@@Base+0x1490>
   14960:	cmp	r0, #0
   14964:	beq	14834 <argp_parse@@Base+0x200c>
   14968:	ldr	r3, [r8, #28]
   1496c:	b	14824 <argp_parse@@Base+0x1ffc>
   14970:	muleq	r1, ip, r8
   14974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14978:	mov	r7, r3
   1497c:	ldr	sl, [r0, #12]
   14980:	sub	sp, sp, #36	; 0x24
   14984:	ldr	r3, [r0, #16]
   14988:	cmp	sl, #0
   1498c:	mov	fp, r0
   14990:	mov	r6, r2
   14994:	str	r3, [sp, #16]
   14998:	mov	r9, r1
   1499c:	ldr	r8, [sp, #72]	; 0x48
   149a0:	ldr	r5, [sp, #76]	; 0x4c
   149a4:	beq	14d74 <argp_parse@@Base+0x254c>
   149a8:	mov	r1, #11
   149ac:	mov	r0, sl
   149b0:	bl	11464 <strchr@plt>
   149b4:	cmp	r6, #0
   149b8:	bne	14c90 <argp_parse@@Base+0x2468>
   149bc:	cmp	r0, #0
   149c0:	ldr	r3, [fp, #20]
   149c4:	beq	14ecc <argp_parse@@Base+0x26a4>
   149c8:	cmp	r3, #0
   149cc:	sub	r4, r0, sl
   149d0:	beq	14e64 <argp_parse@@Base+0x263c>
   149d4:	cmp	r4, #0
   149d8:	beq	14e04 <argp_parse@@Base+0x25dc>
   149dc:	mov	r0, sl
   149e0:	mov	r1, r4
   149e4:	bl	112fc <strndup@plt>
   149e8:	mov	r3, #1
   149ec:	str	r3, [sp, #24]
   149f0:	mov	sl, r0
   149f4:	adds	r3, r0, #0
   149f8:	movne	r3, #1
   149fc:	str	r3, [sp, #20]
   14a00:	mov	r1, r9
   14a04:	mov	r0, fp
   14a08:	bl	13564 <argp_parse@@Base+0xd3c>
   14a0c:	ldr	r3, [fp, #20]
   14a10:	str	r0, [sp, #12]
   14a14:	ldr	r0, [pc, #1272]	; 14f14 <argp_parse@@Base+0x26ec>
   14a18:	ldr	r2, [sp, #12]
   14a1c:	mov	r1, sl
   14a20:	blx	r3
   14a24:	subs	r3, r0, #0
   14a28:	beq	14db4 <argp_parse@@Base+0x258c>
   14a2c:	cmp	r7, #0
   14a30:	beq	14a54 <argp_parse@@Base+0x222c>
   14a34:	ldr	r2, [r5, #28]
   14a38:	ldr	r1, [r5, #32]
   14a3c:	cmp	r2, r1
   14a40:	bcs	14dbc <argp_parse@@Base+0x2594>
   14a44:	add	r0, r2, #1
   14a48:	mov	r1, #10
   14a4c:	str	r0, [r5, #28]
   14a50:	strb	r1, [r2]
   14a54:	ldr	r2, [sp, #24]
   14a58:	cmp	r3, sl
   14a5c:	movne	r2, #0
   14a60:	andeq	r2, r2, #1
   14a64:	cmp	r2, #0
   14a68:	beq	14cd4 <argp_parse@@Base+0x24ac>
   14a6c:	ldr	r0, [r5, #28]
   14a70:	ldr	r1, [r5, #32]
   14a74:	add	r2, r0, r4
   14a78:	cmp	r1, r2
   14a7c:	bcs	14d34 <argp_parse@@Base+0x250c>
   14a80:	mov	r1, r4
   14a84:	mov	r0, r5
   14a88:	str	r3, [sp, #24]
   14a8c:	bl	18970 <argp_error@@Base+0x1490>
   14a90:	ldr	r3, [sp, #24]
   14a94:	cmp	r0, #0
   14a98:	bne	14d30 <argp_parse@@Base+0x2508>
   14a9c:	ldr	r4, [r5, #28]
   14aa0:	ldr	r1, [r5, #24]
   14aa4:	ldr	r2, [r5, #16]
   14aa8:	sub	r4, r4, r1
   14aac:	cmp	r4, r2
   14ab0:	bhi	14d58 <argp_parse@@Base+0x2530>
   14ab4:	ldr	r2, [r5, #20]
   14ab8:	ldr	r1, [r5, #4]
   14abc:	bic	r2, r2, r2, asr #31
   14ac0:	cmp	r1, r2
   14ac4:	bcs	14ae8 <argp_parse@@Base+0x22c0>
   14ac8:	ldr	r2, [r5, #28]
   14acc:	ldr	r1, [r5, #32]
   14ad0:	cmp	r2, r1
   14ad4:	bcs	14de0 <argp_parse@@Base+0x25b8>
   14ad8:	add	r0, r2, #1
   14adc:	mov	r1, #10
   14ae0:	str	r0, [r5, #28]
   14ae4:	strb	r1, [r2]
   14ae8:	cmp	r3, sl
   14aec:	moveq	r4, #1
   14af0:	beq	14b00 <argp_parse@@Base+0x22d8>
   14af4:	mov	r0, r3
   14af8:	bl	136c0 <argp_parse@@Base+0xe98>
   14afc:	mov	r4, #1
   14b00:	ldr	r3, [sp, #20]
   14b04:	cmp	r3, #0
   14b08:	beq	14b20 <argp_parse@@Base+0x22f8>
   14b0c:	ldr	r3, [fp, #20]
   14b10:	cmp	r3, #0
   14b14:	beq	14c04 <argp_parse@@Base+0x23dc>
   14b18:	mov	r0, sl
   14b1c:	bl	136c0 <argp_parse@@Base+0xe98>
   14b20:	cmp	r6, #0
   14b24:	beq	14c04 <argp_parse@@Base+0x23dc>
   14b28:	ldr	r3, [fp, #20]
   14b2c:	cmp	r3, #0
   14b30:	beq	14c04 <argp_parse@@Base+0x23dc>
   14b34:	ldr	r2, [sp, #12]
   14b38:	mov	r1, #0
   14b3c:	ldr	r0, [pc, #980]	; 14f18 <argp_parse@@Base+0x26f0>
   14b40:	blx	r3
   14b44:	subs	sl, r0, #0
   14b48:	beq	14c04 <argp_parse@@Base+0x23dc>
   14b4c:	orrs	r3, r7, r4
   14b50:	beq	14b74 <argp_parse@@Base+0x234c>
   14b54:	ldr	r3, [r5, #28]
   14b58:	ldr	r2, [r5, #32]
   14b5c:	cmp	r3, r2
   14b60:	bcs	14e9c <argp_parse@@Base+0x2674>
   14b64:	add	r1, r3, #1
   14b68:	mov	r2, #10
   14b6c:	str	r1, [r5, #28]
   14b70:	strb	r2, [r3]
   14b74:	mov	r0, sl
   14b78:	bl	11458 <strlen@plt>
   14b7c:	subs	r4, r0, #0
   14b80:	beq	14bac <argp_parse@@Base+0x2384>
   14b84:	ldr	r0, [r5, #28]
   14b88:	ldr	r2, [r5, #32]
   14b8c:	add	r3, r0, r4
   14b90:	cmp	r2, r3
   14b94:	bcs	14e14 <argp_parse@@Base+0x25ec>
   14b98:	mov	r1, r4
   14b9c:	mov	r0, r5
   14ba0:	bl	18970 <argp_error@@Base+0x1490>
   14ba4:	cmp	r0, #0
   14ba8:	bne	14e10 <argp_parse@@Base+0x25e8>
   14bac:	mov	r0, sl
   14bb0:	bl	136c0 <argp_parse@@Base+0xe98>
   14bb4:	ldr	r3, [r5, #28]
   14bb8:	ldr	r1, [r5, #24]
   14bbc:	ldr	r2, [r5, #16]
   14bc0:	sub	r3, r3, r1
   14bc4:	cmp	r3, r2
   14bc8:	bhi	14e30 <argp_parse@@Base+0x2608>
   14bcc:	ldr	r3, [r5, #20]
   14bd0:	ldr	r2, [r5, #4]
   14bd4:	bic	r3, r3, r3, asr #31
   14bd8:	cmp	r2, r3
   14bdc:	bcs	14d6c <argp_parse@@Base+0x2544>
   14be0:	ldr	r3, [r5, #28]
   14be4:	ldr	r2, [r5, #32]
   14be8:	cmp	r3, r2
   14bec:	bcs	14e80 <argp_parse@@Base+0x2658>
   14bf0:	mov	r4, #1
   14bf4:	add	r2, r3, r4
   14bf8:	str	r2, [r5, #28]
   14bfc:	mov	r2, #10
   14c00:	strb	r2, [r3]
   14c04:	ldr	fp, [sp, #16]
   14c08:	cmp	fp, #0
   14c0c:	beq	14c84 <argp_parse@@Base+0x245c>
   14c10:	ldr	r3, [fp]
   14c14:	cmp	r3, #0
   14c18:	beq	14c84 <argp_parse@@Base+0x245c>
   14c1c:	eor	r2, r4, #1
   14c20:	and	r2, r2, #1
   14c24:	clz	sl, r8
   14c28:	lsr	sl, sl, #5
   14c2c:	orrs	r2, sl, r2
   14c30:	bne	14c4c <argp_parse@@Base+0x2424>
   14c34:	b	14eb8 <argp_parse@@Base+0x2690>
   14c38:	cmp	r4, #0
   14c3c:	movne	r2, sl
   14c40:	orreq	r2, sl, #1
   14c44:	cmp	r2, #0
   14c48:	beq	14c84 <argp_parse@@Base+0x245c>
   14c4c:	orrs	r2, r7, r4
   14c50:	mov	r0, r3
   14c54:	str	r5, [sp, #4]
   14c58:	movne	r3, #1
   14c5c:	moveq	r3, #0
   14c60:	str	r8, [sp]
   14c64:	mov	r2, r6
   14c68:	mov	r1, r9
   14c6c:	bl	14974 <argp_parse@@Base+0x214c>
   14c70:	ldr	r3, [fp, #16]
   14c74:	add	fp, fp, #16
   14c78:	cmp	r3, #0
   14c7c:	orr	r4, r4, r0
   14c80:	bne	14c38 <argp_parse@@Base+0x2410>
   14c84:	mov	r0, r4
   14c88:	add	sp, sp, #36	; 0x24
   14c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c90:	cmp	r0, #0
   14c94:	addne	sl, r0, #1
   14c98:	beq	14e5c <argp_parse@@Base+0x2634>
   14c9c:	ldr	r3, [fp, #20]
   14ca0:	cmp	r3, #0
   14ca4:	beq	14e3c <argp_parse@@Base+0x2614>
   14ca8:	mov	r3, #0
   14cac:	mov	r1, r9
   14cb0:	mov	r0, fp
   14cb4:	mov	r4, r3
   14cb8:	str	r3, [sp, #20]
   14cbc:	bl	13564 <argp_parse@@Base+0xd3c>
   14cc0:	str	r4, [sp, #24]
   14cc4:	ldr	r3, [fp, #20]
   14cc8:	str	r0, [sp, #12]
   14ccc:	ldr	r0, [pc, #584]	; 14f1c <argp_parse@@Base+0x26f4>
   14cd0:	b	14a18 <argp_parse@@Base+0x21f0>
   14cd4:	mov	r0, r3
   14cd8:	str	r3, [sp, #24]
   14cdc:	bl	11458 <strlen@plt>
   14ce0:	ldr	r3, [sp, #24]
   14ce4:	subs	r4, r0, #0
   14ce8:	beq	14a9c <argp_parse@@Base+0x2274>
   14cec:	ldr	r0, [r5, #28]
   14cf0:	ldr	r1, [r5, #32]
   14cf4:	add	r2, r0, r4
   14cf8:	cmp	r1, r2
   14cfc:	bcs	14d20 <argp_parse@@Base+0x24f8>
   14d00:	mov	r1, r4
   14d04:	mov	r0, r5
   14d08:	str	r3, [sp, #24]
   14d0c:	bl	18970 <argp_error@@Base+0x1490>
   14d10:	ldr	r3, [sp, #24]
   14d14:	cmp	r0, #0
   14d18:	beq	14a9c <argp_parse@@Base+0x2274>
   14d1c:	ldr	r0, [r5, #28]
   14d20:	mov	r2, r4
   14d24:	mov	r1, r3
   14d28:	str	r3, [sp, #24]
   14d2c:	b	14d40 <argp_parse@@Base+0x2518>
   14d30:	ldr	r0, [r5, #28]
   14d34:	mov	r2, r4
   14d38:	mov	r1, sl
   14d3c:	str	r3, [sp, #24]
   14d40:	bl	11308 <memcpy@plt>
   14d44:	ldr	r2, [r5, #28]
   14d48:	ldr	r3, [sp, #24]
   14d4c:	add	r4, r2, r4
   14d50:	str	r4, [r5, #28]
   14d54:	b	14aa0 <argp_parse@@Base+0x2278>
   14d58:	mov	r0, r5
   14d5c:	str	r3, [sp, #24]
   14d60:	bl	182e0 <argp_error@@Base+0xe00>
   14d64:	ldr	r3, [sp, #24]
   14d68:	b	14ab4 <argp_parse@@Base+0x228c>
   14d6c:	mov	r4, #1
   14d70:	b	14c04 <argp_parse@@Base+0x23dc>
   14d74:	ldr	r4, [r0, #20]
   14d78:	cmp	r4, #0
   14d7c:	beq	14ec4 <argp_parse@@Base+0x269c>
   14d80:	bl	13564 <argp_parse@@Base+0xd3c>
   14d84:	cmp	r6, #0
   14d88:	ldr	r3, [fp, #20]
   14d8c:	strne	sl, [sp, #20]
   14d90:	strne	sl, [sp, #24]
   14d94:	movne	r4, sl
   14d98:	streq	r6, [sp, #20]
   14d9c:	streq	r6, [sp, #24]
   14da0:	moveq	r4, r6
   14da4:	str	r0, [sp, #12]
   14da8:	ldrne	r0, [pc, #364]	; 14f1c <argp_parse@@Base+0x26f4>
   14dac:	ldreq	r0, [pc, #352]	; 14f14 <argp_parse@@Base+0x26ec>
   14db0:	b	14a18 <argp_parse@@Base+0x21f0>
   14db4:	mov	r4, r3
   14db8:	b	14b00 <argp_parse@@Base+0x22d8>
   14dbc:	mov	r1, #1
   14dc0:	mov	r0, r5
   14dc4:	str	r3, [sp, #28]
   14dc8:	bl	18970 <argp_error@@Base+0x1490>
   14dcc:	ldr	r3, [sp, #28]
   14dd0:	cmp	r0, #0
   14dd4:	beq	14a54 <argp_parse@@Base+0x222c>
   14dd8:	ldr	r2, [r5, #28]
   14ddc:	b	14a44 <argp_parse@@Base+0x221c>
   14de0:	mov	r1, #1
   14de4:	mov	r0, r5
   14de8:	str	r3, [sp, #24]
   14dec:	bl	18970 <argp_error@@Base+0x1490>
   14df0:	ldr	r3, [sp, #24]
   14df4:	cmp	r0, #0
   14df8:	beq	14ae8 <argp_parse@@Base+0x22c0>
   14dfc:	ldr	r2, [r5, #28]
   14e00:	b	14ad8 <argp_parse@@Base+0x22b0>
   14e04:	str	r4, [sp, #20]
   14e08:	str	r4, [sp, #24]
   14e0c:	b	14a00 <argp_parse@@Base+0x21d8>
   14e10:	ldr	r0, [r5, #28]
   14e14:	mov	r2, r4
   14e18:	mov	r1, sl
   14e1c:	bl	11308 <memcpy@plt>
   14e20:	ldr	r3, [r5, #28]
   14e24:	add	r4, r3, r4
   14e28:	str	r4, [r5, #28]
   14e2c:	b	14bac <argp_parse@@Base+0x2384>
   14e30:	mov	r0, r5
   14e34:	bl	182e0 <argp_error@@Base+0xe00>
   14e38:	b	14bcc <argp_parse@@Base+0x23a4>
   14e3c:	cmp	sl, #0
   14e40:	beq	14ec0 <argp_parse@@Base+0x2698>
   14e44:	str	r3, [sp, #20]
   14e48:	str	r3, [sp, #24]
   14e4c:	mov	r4, r3
   14e50:	str	r3, [sp, #12]
   14e54:	mov	r3, sl
   14e58:	b	14a2c <argp_parse@@Base+0x2204>
   14e5c:	mov	sl, r0
   14e60:	b	14c9c <argp_parse@@Base+0x2474>
   14e64:	adds	r3, r4, #0
   14e68:	movne	r3, #1
   14e6c:	str	r3, [sp, #24]
   14e70:	str	r3, [sp, #20]
   14e74:	str	r6, [sp, #12]
   14e78:	mov	r3, sl
   14e7c:	b	14a2c <argp_parse@@Base+0x2204>
   14e80:	mov	r1, #1
   14e84:	mov	r0, r5
   14e88:	bl	18970 <argp_error@@Base+0x1490>
   14e8c:	cmp	r0, #0
   14e90:	beq	14d6c <argp_parse@@Base+0x2544>
   14e94:	ldr	r3, [r5, #28]
   14e98:	b	14bf0 <argp_parse@@Base+0x23c8>
   14e9c:	mov	r1, #1
   14ea0:	mov	r0, r5
   14ea4:	bl	18970 <argp_error@@Base+0x1490>
   14ea8:	cmp	r0, #0
   14eac:	beq	14b74 <argp_parse@@Base+0x234c>
   14eb0:	ldr	r3, [r5, #28]
   14eb4:	b	14b64 <argp_parse@@Base+0x233c>
   14eb8:	mov	r4, #1
   14ebc:	b	14c84 <argp_parse@@Base+0x245c>
   14ec0:	mov	r4, sl
   14ec4:	str	r4, [sp, #12]
   14ec8:	b	14b20 <argp_parse@@Base+0x22f8>
   14ecc:	cmp	r3, #0
   14ed0:	beq	14efc <argp_parse@@Base+0x26d4>
   14ed4:	mov	r1, r9
   14ed8:	mov	r0, fp
   14edc:	bl	13564 <argp_parse@@Base+0xd3c>
   14ee0:	mov	r4, r6
   14ee4:	ldr	r3, [fp, #20]
   14ee8:	str	r6, [sp, #20]
   14eec:	str	r6, [sp, #24]
   14ef0:	str	r0, [sp, #12]
   14ef4:	ldr	r0, [pc, #24]	; 14f14 <argp_parse@@Base+0x26ec>
   14ef8:	b	14a18 <argp_parse@@Base+0x21f0>
   14efc:	mov	r3, sl
   14f00:	str	r6, [sp, #20]
   14f04:	str	r6, [sp, #24]
   14f08:	mov	r4, r6
   14f0c:	str	r6, [sp, #12]
   14f10:	b	14a2c <argp_parse@@Base+0x2204>
   14f14:	andeq	r0, r0, #1
   14f18:	andeq	r0, r0, #4
   14f1c:	andeq	r0, r0, #2
   14f20:	ldr	r3, [r0, #12]
   14f24:	ldr	r2, [r1, #12]
   14f28:	push	{r4, r5, r6, lr}
   14f2c:	cmp	r3, r2
   14f30:	beq	14f80 <argp_parse@@Base+0x2758>
   14f34:	mov	r5, r1
   14f38:	mov	r4, r0
   14f3c:	mov	r1, r2
   14f40:	mov	r0, r3
   14f44:	bl	14f20 <argp_parse@@Base+0x26f8>
   14f48:	cmp	r0, #0
   14f4c:	popne	{r4, r5, r6, pc}
   14f50:	ldr	r3, [r5, #8]
   14f54:	ldr	r0, [r4, #8]
   14f58:	mvn	r2, r3
   14f5c:	lsr	r2, r2, #31
   14f60:	cmp	r2, r0, lsr #31
   14f64:	subne	r0, r0, r3
   14f68:	subeq	r0, r3, r0
   14f6c:	cmp	r0, #0
   14f70:	ldreq	r3, [r5, #4]
   14f74:	ldreq	r0, [r4, #4]
   14f78:	subeq	r0, r3, r0
   14f7c:	pop	{r4, r5, r6, pc}
   14f80:	ldr	r3, [r1, #8]
   14f84:	ldr	r2, [r0, #8]
   14f88:	mvn	ip, r3
   14f8c:	ldr	lr, [r1, #4]
   14f90:	lsr	ip, ip, #31
   14f94:	cmp	ip, r2, lsr #31
   14f98:	ldr	r1, [r0, #4]
   14f9c:	subne	r0, r2, r3
   14fa0:	subeq	r0, r3, r2
   14fa4:	cmp	r0, #0
   14fa8:	subeq	r0, lr, r1
   14fac:	pop	{r4, r5, r6, pc}
   14fb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   14fb4:	sub	sp, sp, #12
   14fb8:	ldr	lr, [r0, #16]
   14fbc:	cmp	lr, #0
   14fc0:	movne	r2, lr
   14fc4:	bne	14fd0 <argp_parse@@Base+0x27a8>
   14fc8:	b	15294 <argp_parse@@Base+0x2a6c>
   14fcc:	mov	r2, r3
   14fd0:	ldr	r3, [r2, #12]
   14fd4:	cmp	r3, #0
   14fd8:	bne	14fcc <argp_parse@@Base+0x27a4>
   14fdc:	ldr	ip, [r1, #16]
   14fe0:	ldr	r4, [r2, #8]
   14fe4:	cmp	ip, #0
   14fe8:	movne	r2, ip
   14fec:	bne	14ff8 <argp_parse@@Base+0x27d0>
   14ff0:	b	152a8 <argp_parse@@Base+0x2a80>
   14ff4:	mov	r2, r3
   14ff8:	ldr	r3, [r2, #12]
   14ffc:	cmp	r3, #0
   15000:	bne	14ff4 <argp_parse@@Base+0x27cc>
   15004:	ldr	r3, [r2, #8]
   15008:	mvn	r2, r3
   1500c:	lsr	r2, r2, #31
   15010:	cmp	r2, r4, lsr #31
   15014:	subne	r4, r4, r3
   15018:	subeq	r4, r3, r4
   1501c:	cmp	r4, #0
   15020:	bne	15088 <argp_parse@@Base+0x2860>
   15024:	adds	r4, ip, #0
   15028:	movne	r4, #1
   1502c:	cmp	lr, #0
   15030:	rsbeq	r4, r4, #0
   15034:	rsbne	r4, r4, #1
   15038:	cmp	r4, #0
   1503c:	bne	15088 <argp_parse@@Base+0x2860>
   15040:	cmp	lr, #0
   15044:	mov	r5, r1
   15048:	mov	r6, r0
   1504c:	beq	150a4 <argp_parse@@Base+0x287c>
   15050:	ldr	r0, [lr, #20]
   15054:	ldr	r2, [ip, #20]
   15058:	cmp	r0, r2
   1505c:	ble	15268 <argp_parse@@Base+0x2a40>
   15060:	mov	r0, lr
   15064:	ldr	r0, [r0, #12]
   15068:	ldr	r3, [r0, #20]
   1506c:	cmp	r2, r3
   15070:	blt	15064 <argp_parse@@Base+0x283c>
   15074:	mov	r1, ip
   15078:	bl	14f20 <argp_parse@@Base+0x26f8>
   1507c:	cmp	r0, #0
   15080:	movne	r4, r0
   15084:	moveq	r4, #1
   15088:	mov	r0, r4
   1508c:	add	sp, sp, #12
   15090:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15094:	mov	r0, lr
   15098:	bl	14f20 <argp_parse@@Base+0x26f8>
   1509c:	subs	r4, r0, #0
   150a0:	bne	15088 <argp_parse@@Base+0x2860>
   150a4:	ldr	r4, [r5, #12]
   150a8:	ldr	r3, [r6, #12]
   150ac:	mvn	r2, r4
   150b0:	lsr	r2, r2, #31
   150b4:	cmp	r2, r3, lsr #31
   150b8:	subne	r4, r3, r4
   150bc:	subeq	r4, r4, r3
   150c0:	cmp	r4, #0
   150c4:	bne	15088 <argp_parse@@Base+0x2860>
   150c8:	ldr	r2, [r6, #4]
   150cc:	ldr	lr, [r6]
   150d0:	cmp	r2, #0
   150d4:	beq	15100 <argp_parse@@Base+0x28d8>
   150d8:	add	r3, lr, #24
   150dc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   150e0:	cmp	r1, #0
   150e4:	beq	150f4 <argp_parse@@Base+0x28cc>
   150e8:	ldr	r0, [r3, #-12]
   150ec:	tst	r0, #2
   150f0:	beq	152b0 <argp_parse@@Base+0x2a88>
   150f4:	subs	r2, r2, #1
   150f8:	add	r3, r3, #24
   150fc:	bne	150dc <argp_parse@@Base+0x28b4>
   15100:	ldr	r2, [r5, #4]
   15104:	mov	ip, #0
   15108:	cmp	r2, ip
   1510c:	str	ip, [sp]
   15110:	ldr	r3, [r5]
   15114:	beq	15320 <argp_parse@@Base+0x2af8>
   15118:	add	r3, r3, #24
   1511c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15120:	cmp	r1, #0
   15124:	beq	15134 <argp_parse@@Base+0x290c>
   15128:	ldr	r0, [r3, #-12]
   1512c:	tst	r0, #2
   15130:	beq	15144 <argp_parse@@Base+0x291c>
   15134:	subs	r2, r2, #1
   15138:	add	r3, r3, #24
   1513c:	bne	1511c <argp_parse@@Base+0x28f4>
   15140:	mov	r1, r2
   15144:	ldr	r3, [lr, #12]
   15148:	str	r1, [sp, #4]
   1514c:	ands	r3, ip, r3, lsr #3
   15150:	beq	15318 <argp_parse@@Base+0x2af0>
   15154:	mov	r0, sp
   15158:	bl	14420 <argp_parse@@Base+0x1bf8>
   1515c:	ldr	r3, [r5]
   15160:	cmp	r0, #0
   15164:	bne	15304 <argp_parse@@Base+0x2adc>
   15168:	ldr	r3, [r3, #12]
   1516c:	tst	r3, #8
   15170:	beq	15198 <argp_parse@@Base+0x2970>
   15174:	ldr	r3, [sp, #4]
   15178:	cmp	r3, #0
   1517c:	beq	15198 <argp_parse@@Base+0x2970>
   15180:	add	r0, sp, #4
   15184:	bl	14420 <argp_parse@@Base+0x1bf8>
   15188:	cmp	r0, #0
   1518c:	subne	r4, r4, #1
   15190:	cmp	r4, #0
   15194:	bne	15088 <argp_parse@@Base+0x2860>
   15198:	ldr	r2, [r6, #20]
   1519c:	mov	r0, r6
   151a0:	mov	r3, #0
   151a4:	ldr	r2, [r2, #24]
   151a8:	ldr	r1, [pc, #408]	; 15348 <argp_parse@@Base+0x2b20>
   151ac:	bl	142e4 <argp_parse@@Base+0x1abc>
   151b0:	ldr	r2, [r5, #20]
   151b4:	mov	r3, #0
   151b8:	ldr	r1, [pc, #392]	; 15348 <argp_parse@@Base+0x2b20>
   151bc:	ldr	r2, [r2, #24]
   151c0:	uxtb	r6, r0
   151c4:	mov	r0, r5
   151c8:	bl	142e4 <argp_parse@@Base+0x1abc>
   151cc:	cmp	r6, #0
   151d0:	lslne	r4, r6, #2
   151d4:	movne	r7, r6
   151d8:	uxtb	r5, r0
   151dc:	beq	152e8 <argp_parse@@Base+0x2ac0>
   151e0:	cmp	r5, #0
   151e4:	lslne	r9, r5, #2
   151e8:	movne	r8, r5
   151ec:	beq	152cc <argp_parse@@Base+0x2aa4>
   151f0:	bl	11410 <__ctype_tolower_loc@plt>
   151f4:	ldr	r3, [r0]
   151f8:	ldr	r4, [r3, r4]
   151fc:	ldr	r3, [r3, r9]
   15200:	subs	r4, r4, r3
   15204:	bne	15088 <argp_parse@@Base+0x2860>
   15208:	subs	r4, r8, r7
   1520c:	bne	15088 <argp_parse@@Base+0x2860>
   15210:	adds	r4, r5, #0
   15214:	movne	r4, #1
   15218:	cmp	r6, #0
   1521c:	rsbeq	r4, r4, #0
   15220:	rsbne	r4, r4, #1
   15224:	cmp	r4, #0
   15228:	bne	15088 <argp_parse@@Base+0x2860>
   1522c:	cmp	r6, #0
   15230:	bne	15088 <argp_parse@@Base+0x2860>
   15234:	ldm	sp, {r0, r1}
   15238:	adds	r4, r1, #0
   1523c:	movne	r4, #1
   15240:	cmp	r0, #0
   15244:	rsbeq	r4, r4, #0
   15248:	rsbne	r4, r4, #1
   1524c:	cmp	r4, #0
   15250:	bne	15088 <argp_parse@@Base+0x2860>
   15254:	cmp	r0, #0
   15258:	beq	15088 <argp_parse@@Base+0x2860>
   1525c:	bl	11398 <strcasecmp@plt>
   15260:	mov	r4, r0
   15264:	b	15088 <argp_parse@@Base+0x2860>
   15268:	mov	r1, ip
   1526c:	bge	15094 <argp_parse@@Base+0x286c>
   15270:	ldr	r1, [r1, #12]
   15274:	ldr	r3, [r1, #20]
   15278:	cmp	r0, r3
   1527c:	blt	15270 <argp_parse@@Base+0x2a48>
   15280:	mov	r0, lr
   15284:	bl	14f20 <argp_parse@@Base+0x26f8>
   15288:	subs	r4, r0, #0
   1528c:	mvneq	r4, #0
   15290:	b	15088 <argp_parse@@Base+0x2860>
   15294:	ldr	ip, [r1, #16]
   15298:	ldr	r4, [r0, #12]
   1529c:	cmp	ip, #0
   152a0:	movne	r2, ip
   152a4:	bne	14ff8 <argp_parse@@Base+0x27d0>
   152a8:	ldr	r3, [r1, #12]
   152ac:	b	15008 <argp_parse@@Base+0x27e0>
   152b0:	ldr	r2, [r5, #4]
   152b4:	str	r1, [sp]
   152b8:	cmp	r2, #0
   152bc:	ldr	r3, [r5]
   152c0:	beq	15328 <argp_parse@@Base+0x2b00>
   152c4:	mov	ip, #1
   152c8:	b	15118 <argp_parse@@Base+0x28f0>
   152cc:	ldr	r3, [sp, #4]
   152d0:	cmp	r3, #0
   152d4:	moveq	r9, r5
   152d8:	ldrbne	r8, [r3]
   152dc:	moveq	r8, r5
   152e0:	lslne	r9, r8, #2
   152e4:	b	151f0 <argp_parse@@Base+0x29c8>
   152e8:	ldr	r3, [sp]
   152ec:	cmp	r3, #0
   152f0:	moveq	r4, r6
   152f4:	ldrbne	r7, [r3]
   152f8:	moveq	r7, r6
   152fc:	lslne	r4, r7, #2
   15300:	b	151e0 <argp_parse@@Base+0x29b8>
   15304:	ldr	r3, [r3, #12]
   15308:	tst	r3, #8
   1530c:	bne	15334 <argp_parse@@Base+0x2b0c>
   15310:	mov	r4, #1
   15314:	b	15088 <argp_parse@@Base+0x2860>
   15318:	ldr	r3, [r5]
   1531c:	b	15168 <argp_parse@@Base+0x2940>
   15320:	str	r2, [sp, #4]
   15324:	b	15198 <argp_parse@@Base+0x2970>
   15328:	mov	r1, r2
   1532c:	mov	ip, #1
   15330:	b	15144 <argp_parse@@Base+0x291c>
   15334:	ldr	r3, [sp, #4]
   15338:	mov	r4, #1
   1533c:	cmp	r3, #0
   15340:	bne	15180 <argp_parse@@Base+0x2958>
   15344:	b	15088 <argp_parse@@Base+0x2860>
   15348:	ldrdeq	r4, [r1], -ip
   1534c:	ldr	r3, [r0, #28]
   15350:	ldr	r2, [r0, #24]
   15354:	push	{r4, r5, r6, lr}
   15358:	mov	r5, r1
   1535c:	ldr	r1, [r0, #16]
   15360:	sub	r2, r3, r2
   15364:	cmp	r2, r1
   15368:	mov	r4, r0
   1536c:	movls	r2, r3
   15370:	bhi	153cc <argp_parse@@Base+0x2ba4>
   15374:	ldr	r1, [r4, #20]
   15378:	ldr	r0, [r4, #8]
   1537c:	cmp	r1, #0
   15380:	addge	r5, r5, r1
   15384:	cmp	r5, r0
   15388:	bcc	153ac <argp_parse@@Base+0x2b84>
   1538c:	ldr	r1, [r4, #32]
   15390:	cmp	r1, r3
   15394:	bls	153dc <argp_parse@@Base+0x2bb4>
   15398:	add	r1, r2, #1
   1539c:	mov	r3, #10
   153a0:	str	r1, [r4, #28]
   153a4:	strb	r3, [r2]
   153a8:	pop	{r4, r5, r6, pc}
   153ac:	ldr	r2, [r4, #32]
   153b0:	cmp	r2, r3
   153b4:	bls	153f8 <argp_parse@@Base+0x2bd0>
   153b8:	add	r1, r3, #1
   153bc:	mov	r2, #32
   153c0:	str	r1, [r4, #28]
   153c4:	strb	r2, [r3]
   153c8:	pop	{r4, r5, r6, pc}
   153cc:	bl	182e0 <argp_error@@Base+0xe00>
   153d0:	ldr	r3, [r4, #28]
   153d4:	mov	r2, r3
   153d8:	b	15374 <argp_parse@@Base+0x2b4c>
   153dc:	mov	r1, #1
   153e0:	mov	r0, r4
   153e4:	bl	18970 <argp_error@@Base+0x1490>
   153e8:	cmp	r0, #0
   153ec:	popeq	{r4, r5, r6, pc}
   153f0:	ldr	r2, [r4, #28]
   153f4:	b	15398 <argp_parse@@Base+0x2b70>
   153f8:	mov	r1, #1
   153fc:	mov	r0, r4
   15400:	bl	18970 <argp_error@@Base+0x1490>
   15404:	cmp	r0, #0
   15408:	popeq	{r4, r5, r6, pc}
   1540c:	ldr	r3, [r4, #28]
   15410:	b	153b8 <argp_parse@@Base+0x2b90>
   15414:	push	{r4, r5, r6, lr}
   15418:	ldr	r5, [r0, #8]
   1541c:	ldr	r2, [r0, #12]
   15420:	ldr	ip, [r1, #12]
   15424:	cmp	r5, #0
   15428:	orr	r2, r2, ip
   1542c:	beq	15494 <argp_parse@@Base+0x2c6c>
   15430:	tst	r2, #16
   15434:	bne	15470 <argp_parse@@Base+0x2c48>
   15438:	tst	r2, #1
   1543c:	mov	r6, r3
   15440:	mov	r4, r0
   15444:	bne	15478 <argp_parse@@Base+0x2c50>
   15448:	mov	r0, r5
   1544c:	bl	11458 <strlen@plt>
   15450:	add	r1, r0, #6
   15454:	mov	r0, r6
   15458:	bl	1534c <argp_parse@@Base+0x2b24>
   1545c:	mov	r3, r5
   15460:	ldr	r2, [r4, #4]
   15464:	mov	r0, r6
   15468:	ldr	r1, [pc, #56]	; 154a8 <argp_parse@@Base+0x2c80>
   1546c:	bl	18990 <argp_error@@Base+0x14b0>
   15470:	mov	r0, #0
   15474:	pop	{r4, r5, r6, pc}
   15478:	ldr	r2, [r0, #4]
   1547c:	mov	r3, r5
   15480:	mov	r0, r6
   15484:	ldr	r1, [pc, #32]	; 154ac <argp_parse@@Base+0x2c84>
   15488:	bl	18990 <argp_error@@Base+0x14b0>
   1548c:	mov	r0, #0
   15490:	pop	{r4, r5, r6, pc}
   15494:	ldr	r5, [r1, #8]
   15498:	cmp	r5, #0
   1549c:	bne	15430 <argp_parse@@Base+0x2c08>
   154a0:	mov	r0, #0
   154a4:	pop	{r4, r5, r6, pc}
   154a8:	andeq	r9, r1, ip, lsr #17
   154ac:	andeq	r9, r1, r0, lsr #17
   154b0:	mov	ip, r0
   154b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b8:	mov	r8, r2
   154bc:	sub	sp, sp, #28
   154c0:	mov	r2, ip
   154c4:	ldr	ip, [ip, #16]
   154c8:	mov	r9, r1
   154cc:	ldr	r1, [r0, #8]
   154d0:	str	ip, [sp, #8]
   154d4:	ldr	ip, [r8]
   154d8:	str	r1, [sp, #16]
   154dc:	mov	r0, r1
   154e0:	mov	r4, r3
   154e4:	ldr	r1, [pc, #456]	; 156b4 <argp_parse@@Base+0x2e8c>
   154e8:	mov	r3, r9
   154ec:	mov	r5, ip
   154f0:	str	ip, [sp, #20]
   154f4:	ldr	r6, [sp, #64]	; 0x40
   154f8:	bl	14578 <argp_parse@@Base+0x1d50>
   154fc:	subs	r3, r0, #0
   15500:	str	r3, [sp, #12]
   15504:	beq	15660 <argp_parse@@Base+0x2e38>
   15508:	mov	r1, #10
   1550c:	bl	112e4 <strchrnul@plt>
   15510:	ldrb	sl, [r0]
   15514:	mov	r7, r0
   15518:	cmp	sl, #0
   1551c:	bne	1561c <argp_parse@@Base+0x2df4>
   15520:	ldr	r5, [sp, #12]
   15524:	add	r1, r7, #1
   15528:	sub	r1, r1, r5
   1552c:	mov	r0, r6
   15530:	bl	1534c <argp_parse@@Base+0x2b24>
   15534:	ldr	r0, [r6, #28]
   15538:	sub	fp, r7, r5
   1553c:	ldr	r1, [r6, #32]
   15540:	add	r2, r0, fp
   15544:	cmp	r1, r2
   15548:	bcs	15564 <argp_parse@@Base+0x2d3c>
   1554c:	mov	r1, fp
   15550:	mov	r0, r6
   15554:	bl	18970 <argp_error@@Base+0x1490>
   15558:	cmp	r0, #0
   1555c:	beq	1557c <argp_parse@@Base+0x2d54>
   15560:	ldr	r0, [r6, #28]
   15564:	mov	r2, fp
   15568:	mov	r1, r5
   1556c:	bl	11308 <memcpy@plt>
   15570:	ldr	r3, [r6, #28]
   15574:	add	fp, r3, fp
   15578:	str	fp, [r6, #28]
   1557c:	ldr	r3, [sp, #16]
   15580:	ldr	r2, [sp, #12]
   15584:	cmp	r3, r2
   15588:	beq	15594 <argp_parse@@Base+0x2d6c>
   1558c:	mov	r0, r2
   15590:	bl	136c0 <argp_parse@@Base+0xe98>
   15594:	ldr	r3, [sp, #8]
   15598:	cmp	r3, #0
   1559c:	beq	155e0 <argp_parse@@Base+0x2db8>
   155a0:	ldr	r2, [r3]
   155a4:	cmp	r2, #0
   155a8:	beq	155e0 <argp_parse@@Base+0x2db8>
   155ac:	ldr	r5, [sp, #8]
   155b0:	mov	r3, r4
   155b4:	mov	r0, r2
   155b8:	str	r6, [sp]
   155bc:	mov	r2, r8
   155c0:	mov	r1, r9
   155c4:	bl	154b0 <argp_parse@@Base+0x2c88>
   155c8:	ldr	r2, [r5, #16]!
   155cc:	cmp	r2, #0
   155d0:	clz	r3, r0
   155d4:	lsr	r3, r3, #5
   155d8:	bne	155b4 <argp_parse@@Base+0x2d8c>
   155dc:	mov	r4, r3
   155e0:	cmp	r4, #0
   155e4:	moveq	sl, #0
   155e8:	andne	sl, sl, #1
   155ec:	cmp	sl, #0
   155f0:	beq	15680 <argp_parse@@Base+0x2e58>
   155f4:	ldrb	r0, [r7]
   155f8:	cmp	r0, #0
   155fc:	bne	15690 <argp_parse@@Base+0x2e68>
   15600:	ldr	r3, [sp, #20]
   15604:	ldrb	r4, [r3]
   15608:	cmp	r4, #0
   1560c:	moveq	r0, r4
   15610:	strbne	r0, [r3]
   15614:	add	sp, sp, #28
   15618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1561c:	ldrb	sl, [r5]
   15620:	cmp	sl, #0
   15624:	beq	156ac <argp_parse@@Base+0x2e84>
   15628:	mov	fp, #0
   1562c:	add	r5, r0, #1
   15630:	add	fp, fp, #1
   15634:	mov	r0, r5
   15638:	mov	r1, #10
   1563c:	bl	112e4 <strchrnul@plt>
   15640:	cmp	fp, sl
   15644:	bne	1562c <argp_parse@@Base+0x2e04>
   15648:	mov	r7, r0
   1564c:	ldr	r2, [r8]
   15650:	mov	sl, #1
   15654:	add	r2, r2, sl
   15658:	str	r2, [r8]
   1565c:	b	15524 <argp_parse@@Base+0x2cfc>
   15660:	ldr	r3, [sp, #8]
   15664:	cmp	r3, #0
   15668:	beq	15680 <argp_parse@@Base+0x2e58>
   1566c:	ldr	r2, [r3]
   15670:	cmp	r2, #0
   15674:	ldrne	r7, [sp, #12]
   15678:	movne	sl, r7
   1567c:	bne	155ac <argp_parse@@Base+0x2d84>
   15680:	clz	r0, r4
   15684:	lsr	r0, r0, #5
   15688:	add	sp, sp, #28
   1568c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15690:	ldr	r2, [sp, #20]
   15694:	mov	r0, #1
   15698:	ldrb	r3, [r2]
   1569c:	add	r3, r3, r0
   156a0:	strb	r3, [r2]
   156a4:	add	sp, sp, #28
   156a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156ac:	ldr	r5, [sp, #12]
   156b0:	b	1564c <argp_parse@@Base+0x2e24>
   156b4:	andeq	r0, r0, #6
   156b8:	ldr	r2, [r0, #8]
   156bc:	cmp	r2, #0
   156c0:	beq	156cc <argp_parse@@Base+0x2ea4>
   156c4:	mov	r0, #0
   156c8:	bx	lr
   156cc:	ldr	r2, [r1, #8]
   156d0:	cmp	r2, #0
   156d4:	bne	156c4 <argp_parse@@Base+0x2e9c>
   156d8:	ldr	r1, [r1, #12]
   156dc:	ldr	r2, [r0, #12]
   156e0:	orr	r2, r2, r1
   156e4:	tst	r2, #16
   156e8:	ldreq	r2, [r3]
   156ec:	ldreq	r1, [r0, #4]
   156f0:	addeq	r0, r2, #1
   156f4:	streq	r0, [r3]
   156f8:	strbeq	r1, [r2]
   156fc:	b	156c4 <argp_parse@@Base+0x2e9c>
   15700:	mov	r3, r0
   15704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15708:	sub	sp, sp, #52	; 0x34
   1570c:	ldr	r2, [r3, #16]
   15710:	str	r0, [sp, #24]
   15714:	mov	r0, #16
   15718:	ldr	r4, [r3]
   1571c:	str	r1, [sp, #28]
   15720:	str	r2, [sp, #8]
   15724:	bl	1425c <argp_parse@@Base+0x1a34>
   15728:	subs	r3, r0, #0
   1572c:	str	r3, [sp, #20]
   15730:	beq	15d94 <argp_parse@@Base+0x356c>
   15734:	ldr	r2, [sp, #20]
   15738:	mov	r3, #0
   1573c:	cmp	r4, #0
   15740:	str	r3, [r2, #4]
   15744:	str	r3, [r2, #12]
   15748:	beq	1594c <argp_parse@@Base+0x3124>
   1574c:	ldr	r5, [r4, #12]
   15750:	ands	r5, r5, #4
   15754:	bne	15da8 <argp_parse@@Base+0x3580>
   15758:	add	r6, r4, #24
   1575c:	mov	r9, r5
   15760:	mov	sl, r5
   15764:	mov	fp, r2
   15768:	b	157ac <argp_parse@@Base+0x2f84>
   1576c:	ldr	r3, [r6, #-12]
   15770:	tst	r3, #4
   15774:	addeq	r9, r9, #1
   15778:	streq	r9, [fp, #4]
   1577c:	tst	r3, #8
   15780:	bne	157a8 <argp_parse@@Base+0x2f80>
   15784:	sub	r3, r8, #1
   15788:	cmp	r3, #254	; 0xfe
   1578c:	bhi	157a8 <argp_parse@@Base+0x2f80>
   15790:	bl	11434 <__ctype_b_loc@plt>
   15794:	lsl	r8, r8, #1
   15798:	ldr	r3, [r0]
   1579c:	ldrh	r3, [r3, r8]
   157a0:	tst	r3, #16384	; 0x4000
   157a4:	addne	sl, sl, #1
   157a8:	add	r6, r6, #24
   157ac:	ldr	r8, [r6, #-20]	; 0xffffffec
   157b0:	cmp	r8, #0
   157b4:	bne	1576c <argp_parse@@Base+0x2f44>
   157b8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   157bc:	cmp	r3, #0
   157c0:	bne	1576c <argp_parse@@Base+0x2f44>
   157c4:	ldr	r3, [r6, #-8]
   157c8:	cmp	r3, #0
   157cc:	bne	1576c <argp_parse@@Base+0x2f44>
   157d0:	ldr	r7, [r6, #-4]
   157d4:	cmp	r7, #0
   157d8:	bne	1576c <argp_parse@@Base+0x2f44>
   157dc:	rsb	r9, r9, r9, lsl #3
   157e0:	lsl	r0, r9, #2
   157e4:	bl	1425c <argp_parse@@Base+0x1a34>
   157e8:	ldr	r6, [sp, #20]
   157ec:	str	r0, [r6]
   157f0:	add	r0, sl, #1
   157f4:	bl	1425c <argp_parse@@Base+0x1a34>
   157f8:	ldr	r8, [r6]
   157fc:	mov	r3, r6
   15800:	cmp	r0, #0
   15804:	cmpne	r8, #0
   15808:	mov	sl, r0
   1580c:	str	r0, [r3, #8]
   15810:	beq	15d58 <argp_parse@@Base+0x3530>
   15814:	ldr	r2, [sp, #20]
   15818:	ldr	r3, [pc, #1436]	; 15dbc <argp_parse@@Base+0x3594>
   1581c:	ldr	r2, [r2, #4]
   15820:	cmp	r2, r3
   15824:	bhi	15d44 <argp_parse@@Base+0x351c>
   15828:	add	r8, r8, #28
   1582c:	mov	r2, r8
   15830:	ldr	r3, [r4, #4]
   15834:	mov	r8, sl
   15838:	mov	r9, r2
   1583c:	cmp	r3, #0
   15840:	bne	15850 <argp_parse@@Base+0x3028>
   15844:	ldr	r2, [r4]
   15848:	cmp	r2, #0
   1584c:	beq	15cfc <argp_parse@@Base+0x34d4>
   15850:	str	r7, [r9, #-24]	; 0xffffffe8
   15854:	ldr	r6, [r4, #20]
   15858:	str	r4, [r9, #-28]	; 0xffffffe4
   1585c:	cmp	r6, #0
   15860:	str	sl, [r9, #-20]	; 0xffffffec
   15864:	bne	1587c <argp_parse@@Base+0x3054>
   15868:	ldr	r2, [r4]
   1586c:	cmp	r2, #0
   15870:	cmpeq	r3, #0
   15874:	movne	r6, r5
   15878:	beq	15d20 <argp_parse@@Base+0x34f8>
   1587c:	ldr	r1, [sp, #28]
   15880:	str	r6, [r9, #-16]
   15884:	mov	r5, r4
   15888:	ldr	r2, [r4, #12]
   1588c:	mov	r3, r7
   15890:	str	r1, [r9, #-12]
   15894:	ldr	r1, [sp, #24]
   15898:	str	r1, [r9, #-8]
   1589c:	add	r3, r3, #1
   158a0:	tst	r2, #8
   158a4:	str	r3, [r9, #-24]	; 0xffffffe8
   158a8:	bne	15914 <argp_parse@@Base+0x30ec>
   158ac:	ldr	fp, [r4, #4]
   158b0:	sub	r3, fp, #1
   158b4:	cmp	r3, #254	; 0xfe
   158b8:	bhi	15914 <argp_parse@@Base+0x30ec>
   158bc:	bl	11434 <__ctype_b_loc@plt>
   158c0:	lsl	r3, fp, #1
   158c4:	ldr	r2, [r0]
   158c8:	ldrh	r3, [r2, r3]
   158cc:	tst	r3, #16384	; 0x4000
   158d0:	beq	15914 <argp_parse@@Base+0x30ec>
   158d4:	cmp	r8, sl
   158d8:	uxtb	r1, fp
   158dc:	bcs	1590c <argp_parse@@Base+0x30e4>
   158e0:	ldrb	r3, [r8]
   158e4:	cmp	r3, r1
   158e8:	movne	r3, r8
   158ec:	subne	r0, sl, #1
   158f0:	bne	15904 <argp_parse@@Base+0x30dc>
   158f4:	b	15914 <argp_parse@@Base+0x30ec>
   158f8:	ldrb	r2, [r3, #1]!
   158fc:	cmp	r2, r1
   15900:	beq	15914 <argp_parse@@Base+0x30ec>
   15904:	cmp	r0, r3
   15908:	bne	158f8 <argp_parse@@Base+0x30d0>
   1590c:	strb	r1, [sl]
   15910:	add	sl, sl, #1
   15914:	ldr	r3, [r5, #28]
   15918:	add	r4, r4, #24
   1591c:	cmp	r3, #0
   15920:	bne	15930 <argp_parse@@Base+0x3108>
   15924:	ldr	r2, [r5, #24]
   15928:	cmp	r2, #0
   1592c:	beq	15cd8 <argp_parse@@Base+0x34b0>
   15930:	ldr	r2, [r5, #36]	; 0x24
   15934:	tst	r2, #4
   15938:	beq	15cf0 <argp_parse@@Base+0x34c8>
   1593c:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15940:	mov	r5, r4
   15944:	b	1589c <argp_parse@@Base+0x3074>
   15948:	strb	r3, [sl]
   1594c:	ldr	r3, [sp, #8]
   15950:	cmp	r3, #0
   15954:	beq	15a90 <argp_parse@@Base+0x3268>
   15958:	ldr	r3, [r3]
   1595c:	cmp	r3, #0
   15960:	beq	15a90 <argp_parse@@Base+0x3268>
   15964:	ldr	r3, [sp, #20]
   15968:	add	r3, r3, #12
   1596c:	str	r3, [sp, #44]	; 0x2c
   15970:	ldr	r3, [sp, #8]
   15974:	ldr	r5, [r3, #12]
   15978:	cmp	r5, #0
   1597c:	ldrne	r6, [r3, #8]
   15980:	bne	15994 <argp_parse@@Base+0x316c>
   15984:	ldr	r3, [sp, #8]
   15988:	ldr	r6, [r3, #8]
   1598c:	cmp	r6, #0
   15990:	beq	15cb8 <argp_parse@@Base+0x3490>
   15994:	ldr	r7, [sp, #24]
   15998:	ldr	r2, [sp, #8]
   1599c:	mov	r0, #28
   159a0:	ldr	r3, [r7, #16]
   159a4:	sub	r3, r2, r3
   159a8:	asr	r4, r3, #4
   159ac:	bl	1425c <argp_parse@@Base+0x1a34>
   159b0:	subs	r1, r0, #0
   159b4:	beq	159f4 <argp_parse@@Base+0x31cc>
   159b8:	ldr	r3, [sp, #28]
   159bc:	ldr	r0, [sp, #20]
   159c0:	cmp	r3, #0
   159c4:	str	r3, [r1, #12]
   159c8:	ldrne	r3, [r3, #20]
   159cc:	ldr	r2, [r0, #12]
   159d0:	addne	r3, r3, #1
   159d4:	moveq	r3, #0
   159d8:	str	r5, [r1, #8]
   159dc:	str	r6, [r1]
   159e0:	str	r4, [r1, #4]
   159e4:	str	r7, [r1, #16]
   159e8:	str	r3, [r1, #20]
   159ec:	str	r2, [r1, #24]
   159f0:	str	r1, [r0, #12]
   159f4:	ldr	r3, [sp, #8]
   159f8:	ldr	r0, [r3]
   159fc:	bl	15700 <argp_parse@@Base+0x2ed8>
   15a00:	ldr	r3, [sp, #20]
   15a04:	ldr	r2, [r3, #12]
   15a08:	cmp	r2, #0
   15a0c:	str	r0, [sp, #16]
   15a10:	bne	15a1c <argp_parse@@Base+0x31f4>
   15a14:	b	15cc0 <argp_parse@@Base+0x3498>
   15a18:	mov	r2, r3
   15a1c:	ldr	r3, [r2, #24]
   15a20:	cmp	r3, #0
   15a24:	bne	15a18 <argp_parse@@Base+0x31f0>
   15a28:	add	r2, r2, #24
   15a2c:	ldr	r0, [sp, #16]
   15a30:	mov	ip, r0
   15a34:	ldr	r3, [r0, #4]
   15a38:	ldr	r1, [r0, #12]
   15a3c:	cmp	r3, #0
   15a40:	str	r1, [r2]
   15a44:	mov	r2, #0
   15a48:	str	r2, [r0, #12]
   15a4c:	beq	15a74 <argp_parse@@Base+0x324c>
   15a50:	ldr	lr, [sp, #20]
   15a54:	ldr	r2, [lr, #4]
   15a58:	cmp	r2, #0
   15a5c:	bne	15a9c <argp_parse@@Base+0x3274>
   15a60:	ldr	r0, [r0]
   15a64:	ldr	r1, [ip, #8]
   15a68:	stm	lr, {r0, r3}
   15a6c:	str	r1, [lr, #8]
   15a70:	str	r2, [ip, #4]
   15a74:	ldr	r0, [sp, #16]
   15a78:	bl	14498 <argp_parse@@Base+0x1c70>
   15a7c:	ldr	r2, [sp, #8]
   15a80:	ldr	r3, [r2, #16]!
   15a84:	cmp	r3, #0
   15a88:	str	r2, [sp, #8]
   15a8c:	bne	15970 <argp_parse@@Base+0x3148>
   15a90:	ldr	r0, [sp, #20]
   15a94:	add	sp, sp, #52	; 0x34
   15a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a9c:	add	r3, r3, r2
   15aa0:	str	r3, [sp, #36]	; 0x24
   15aa4:	rsb	r0, r3, r3, lsl #3
   15aa8:	lsl	r0, r0, #2
   15aac:	bl	1425c <argp_parse@@Base+0x1a34>
   15ab0:	ldr	r3, [sp, #20]
   15ab4:	mov	r4, r0
   15ab8:	str	r0, [sp, #32]
   15abc:	ldr	r0, [r3, #8]
   15ac0:	bl	11458 <strlen@plt>
   15ac4:	ldr	r3, [sp, #16]
   15ac8:	mov	r8, r0
   15acc:	ldr	r0, [r3, #8]
   15ad0:	bl	11458 <strlen@plt>
   15ad4:	add	r0, r8, r0
   15ad8:	add	r0, r0, #1
   15adc:	bl	1425c <argp_parse@@Base+0x1a34>
   15ae0:	cmp	r4, #0
   15ae4:	cmpne	r0, #0
   15ae8:	mov	r7, r0
   15aec:	beq	15d6c <argp_parse@@Base+0x3544>
   15af0:	ldr	r3, [sp, #36]	; 0x24
   15af4:	ldr	r2, [pc, #704]	; 15dbc <argp_parse@@Base+0x3594>
   15af8:	cmp	r3, r2
   15afc:	bhi	15d80 <argp_parse@@Base+0x3558>
   15b00:	ldr	r5, [sp, #20]
   15b04:	ldr	r9, [sp, #32]
   15b08:	ldm	r5, {r3, r4}
   15b0c:	mov	r0, r9
   15b10:	rsb	r6, r4, r4, lsl #3
   15b14:	mov	r1, r3
   15b18:	lsl	r6, r6, #2
   15b1c:	mov	r2, r6
   15b20:	str	r3, [sp, #40]	; 0x28
   15b24:	bl	11428 <mempcpy@plt>
   15b28:	ldr	r3, [sp, #16]
   15b2c:	ldr	r1, [r3, #4]
   15b30:	mov	ip, r1
   15b34:	str	r1, [sp, #4]
   15b38:	rsb	r2, ip, ip, lsl #3
   15b3c:	ldr	r1, [r3]
   15b40:	lsl	r2, r2, #2
   15b44:	bl	11308 <memcpy@plt>
   15b48:	ldr	r5, [r5, #8]
   15b4c:	mov	r2, r8
   15b50:	mov	r1, r5
   15b54:	mov	r0, r7
   15b58:	bl	11308 <memcpy@plt>
   15b5c:	cmp	r4, #0
   15b60:	beq	15cd0 <argp_parse@@Base+0x34a8>
   15b64:	mov	r2, r9
   15b68:	ldr	r3, [r2, #8]
   15b6c:	subs	r4, r4, #1
   15b70:	sub	r3, r3, r5
   15b74:	add	r3, r7, r3
   15b78:	str	r3, [r2, #8]
   15b7c:	add	r2, r2, #28
   15b80:	bne	15b68 <argp_parse@@Base+0x3340>
   15b84:	ldr	r3, [sp, #32]
   15b88:	add	r1, r3, r6
   15b8c:	ldr	r3, [sp, #4]
   15b90:	ldr	r2, [sp, #16]
   15b94:	cmp	r3, #0
   15b98:	add	r3, r7, r8
   15b9c:	str	r3, [sp, #12]
   15ba0:	ldr	sl, [r2, #8]
   15ba4:	beq	15cc8 <argp_parse@@Base+0x34a0>
   15ba8:	sub	r8, r3, #1
   15bac:	add	fp, r1, #28
   15bb0:	mov	r9, r3
   15bb4:	mov	r3, r8
   15bb8:	mov	r8, fp
   15bbc:	mov	fp, sl
   15bc0:	mov	sl, r3
   15bc4:	ldr	r5, [r8, #-24]	; 0xffffffe8
   15bc8:	str	r9, [r8, #-20]	; 0xffffffec
   15bcc:	cmp	r5, #0
   15bd0:	ldr	r4, [r8, #-28]	; 0xffffffe4
   15bd4:	bne	15be8 <argp_parse@@Base+0x33c0>
   15bd8:	b	15c74 <argp_parse@@Base+0x344c>
   15bdc:	subs	r5, r5, #1
   15be0:	add	r4, r4, #24
   15be4:	beq	15c74 <argp_parse@@Base+0x344c>
   15be8:	ldr	r3, [r4, #12]
   15bec:	tst	r3, #8
   15bf0:	bne	15bdc <argp_parse@@Base+0x33b4>
   15bf4:	ldr	r6, [r4, #4]
   15bf8:	sub	r3, r6, #1
   15bfc:	cmp	r3, #254	; 0xfe
   15c00:	bhi	15bdc <argp_parse@@Base+0x33b4>
   15c04:	bl	11434 <__ctype_b_loc@plt>
   15c08:	lsl	r3, r6, #1
   15c0c:	ldr	r2, [r0]
   15c10:	ldrh	r3, [r2, r3]
   15c14:	tst	r3, #16384	; 0x4000
   15c18:	beq	15bdc <argp_parse@@Base+0x33b4>
   15c1c:	ldrb	r1, [fp]
   15c20:	cmp	r1, r6
   15c24:	bne	15bdc <argp_parse@@Base+0x33b4>
   15c28:	ldr	r3, [sp, #12]
   15c2c:	cmp	r7, r3
   15c30:	bcs	15c5c <argp_parse@@Base+0x3434>
   15c34:	ldrb	r3, [r7]
   15c38:	cmp	r3, r1
   15c3c:	movne	r3, r7
   15c40:	bne	15c54 <argp_parse@@Base+0x342c>
   15c44:	b	15c64 <argp_parse@@Base+0x343c>
   15c48:	ldrb	r2, [r3, #1]!
   15c4c:	cmp	r2, r1
   15c50:	beq	15c64 <argp_parse@@Base+0x343c>
   15c54:	cmp	sl, r3
   15c58:	bne	15c48 <argp_parse@@Base+0x3420>
   15c5c:	strb	r1, [r9]
   15c60:	add	r9, r9, #1
   15c64:	subs	r5, r5, #1
   15c68:	add	fp, fp, #1
   15c6c:	add	r4, r4, #24
   15c70:	bne	15be8 <argp_parse@@Base+0x33c0>
   15c74:	ldr	r3, [sp, #4]
   15c78:	add	r8, r8, #28
   15c7c:	subs	r3, r3, #1
   15c80:	str	r3, [sp, #4]
   15c84:	bne	15bc4 <argp_parse@@Base+0x339c>
   15c88:	mov	r3, #0
   15c8c:	strb	r3, [r9]
   15c90:	ldr	r0, [sp, #40]	; 0x28
   15c94:	bl	136c0 <argp_parse@@Base+0xe98>
   15c98:	ldr	r4, [sp, #20]
   15c9c:	ldr	r0, [r4, #8]
   15ca0:	bl	136c0 <argp_parse@@Base+0xe98>
   15ca4:	ldr	r2, [sp, #32]
   15ca8:	str	r2, [r4]
   15cac:	ldr	r2, [sp, #36]	; 0x24
   15cb0:	stmib	r4, {r2, r7}
   15cb4:	b	15a74 <argp_parse@@Base+0x324c>
   15cb8:	ldr	r1, [sp, #28]
   15cbc:	b	159f4 <argp_parse@@Base+0x31cc>
   15cc0:	ldr	r2, [sp, #44]	; 0x2c
   15cc4:	b	15a2c <argp_parse@@Base+0x3204>
   15cc8:	ldr	r9, [sp, #12]
   15ccc:	b	15c88 <argp_parse@@Base+0x3460>
   15cd0:	ldr	r1, [sp, #32]
   15cd4:	b	15b8c <argp_parse@@Base+0x3364>
   15cd8:	ldr	r2, [r5, #40]	; 0x28
   15cdc:	cmp	r2, #0
   15ce0:	bne	15930 <argp_parse@@Base+0x3108>
   15ce4:	ldr	r2, [r5, #44]	; 0x2c
   15ce8:	cmp	r2, #0
   15cec:	bne	15930 <argp_parse@@Base+0x3108>
   15cf0:	add	r9, r9, #28
   15cf4:	mov	r5, r6
   15cf8:	b	1583c <argp_parse@@Base+0x3014>
   15cfc:	ldr	r2, [r4, #16]
   15d00:	cmp	r2, #0
   15d04:	beq	15d28 <argp_parse@@Base+0x3500>
   15d08:	str	r3, [r9, #-24]	; 0xffffffe8
   15d0c:	ldr	r6, [r4, #20]
   15d10:	str	r4, [r9, #-28]	; 0xffffffe4
   15d14:	cmp	r6, #0
   15d18:	str	sl, [r9, #-20]	; 0xffffffec
   15d1c:	bne	1587c <argp_parse@@Base+0x3054>
   15d20:	add	r6, r5, #1
   15d24:	b	1587c <argp_parse@@Base+0x3054>
   15d28:	ldr	r6, [r4, #20]
   15d2c:	cmp	r6, #0
   15d30:	beq	15948 <argp_parse@@Base+0x3120>
   15d34:	str	r4, [r9, #-28]	; 0xffffffe4
   15d38:	str	r3, [r9, #-24]	; 0xffffffe8
   15d3c:	str	sl, [r9, #-20]	; 0xffffffec
   15d40:	b	1587c <argp_parse@@Base+0x3054>
   15d44:	ldr	r3, [pc, #116]	; 15dc0 <argp_parse@@Base+0x3598>
   15d48:	mov	r2, #476	; 0x1dc
   15d4c:	ldr	r1, [pc, #112]	; 15dc4 <argp_parse@@Base+0x359c>
   15d50:	ldr	r0, [pc, #112]	; 15dc8 <argp_parse@@Base+0x35a0>
   15d54:	bl	11608 <__assert_fail@plt>
   15d58:	ldr	r3, [pc, #96]	; 15dc0 <argp_parse@@Base+0x3598>
   15d5c:	ldr	r2, [pc, #104]	; 15dcc <argp_parse@@Base+0x35a4>
   15d60:	ldr	r1, [pc, #92]	; 15dc4 <argp_parse@@Base+0x359c>
   15d64:	ldr	r0, [pc, #100]	; 15dd0 <argp_parse@@Base+0x35a8>
   15d68:	bl	11608 <__assert_fail@plt>
   15d6c:	ldr	r3, [pc, #96]	; 15dd4 <argp_parse@@Base+0x35ac>
   15d70:	ldr	r2, [pc, #96]	; 15dd8 <argp_parse@@Base+0x35b0>
   15d74:	ldr	r1, [pc, #72]	; 15dc4 <argp_parse@@Base+0x359c>
   15d78:	ldr	r0, [pc, #92]	; 15ddc <argp_parse@@Base+0x35b4>
   15d7c:	bl	11608 <__assert_fail@plt>
   15d80:	ldr	r3, [pc, #76]	; 15dd4 <argp_parse@@Base+0x35ac>
   15d84:	mov	r2, #972	; 0x3cc
   15d88:	ldr	r1, [pc, #52]	; 15dc4 <argp_parse@@Base+0x359c>
   15d8c:	ldr	r0, [pc, #76]	; 15de0 <argp_parse@@Base+0x35b8>
   15d90:	bl	11608 <__assert_fail@plt>
   15d94:	ldr	r3, [pc, #36]	; 15dc0 <argp_parse@@Base+0x3598>
   15d98:	ldr	r2, [pc, #68]	; 15de4 <argp_parse@@Base+0x35bc>
   15d9c:	ldr	r1, [pc, #32]	; 15dc4 <argp_parse@@Base+0x359c>
   15da0:	ldr	r0, [pc, #64]	; 15de8 <argp_parse@@Base+0x35c0>
   15da4:	bl	11608 <__assert_fail@plt>
   15da8:	ldr	r3, [pc, #16]	; 15dc0 <argp_parse@@Base+0x3598>
   15dac:	mov	r2, #460	; 0x1cc
   15db0:	ldr	r1, [pc, #12]	; 15dc4 <argp_parse@@Base+0x359c>
   15db4:	ldr	r0, [pc, #48]	; 15dec <argp_parse@@Base+0x35c4>
   15db8:	bl	11608 <__assert_fail@plt>
   15dbc:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15dc0:	strdeq	r9, [r1], -r4
   15dc4:			; <UNDEFINED> instruction: 0x000198b8
   15dc8:	strdeq	r9, [r1], -ip
   15dcc:	ldrdeq	r0, [r0], -sl
   15dd0:	ldrdeq	r9, [r1], -r8
   15dd4:	andeq	r9, r1, r0, lsl #16
   15dd8:	andeq	r0, r0, sl, asr #7
   15ddc:	andeq	r9, r1, r8, lsr r9
   15de0:	andeq	r9, r1, r4, asr r9
   15de4:	andeq	r0, r0, r2, asr #3
   15de8:	andeq	r9, r1, r4, asr #17
   15dec:	andeq	r9, r1, r8, asr #17
   15df0:	cmp	r1, #0
   15df4:	push	{r4, r5, r6, r7, r8, lr}
   15df8:	beq	15e70 <argp_parse@@Base+0x3648>
   15dfc:	sub	r7, r1, #1
   15e00:	mov	r8, r2
   15e04:	mov	r6, r0
   15e08:	ldm	r6, {r4, r5}
   15e0c:	cmp	r5, #0
   15e10:	sub	r5, r5, #1
   15e14:	beq	15e54 <argp_parse@@Base+0x362c>
   15e18:	add	r4, r4, #24
   15e1c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15e20:	mov	r1, r8
   15e24:	subs	r0, r3, #0
   15e28:	sub	r5, r5, #1
   15e2c:	beq	15e48 <argp_parse@@Base+0x3620>
   15e30:	ldr	r3, [r4, #-12]
   15e34:	tst	r3, #2
   15e38:	bne	15e48 <argp_parse@@Base+0x3620>
   15e3c:	bl	11290 <strcmp@plt>
   15e40:	cmp	r0, #0
   15e44:	beq	15e68 <argp_parse@@Base+0x3640>
   15e48:	cmn	r5, #1
   15e4c:	add	r4, r4, #24
   15e50:	bne	15e1c <argp_parse@@Base+0x35f4>
   15e54:	sub	r7, r7, #1
   15e58:	cmn	r7, #1
   15e5c:	add	r6, r6, #28
   15e60:	bne	15e08 <argp_parse@@Base+0x35e0>
   15e64:	mov	r6, #0
   15e68:	mov	r0, r6
   15e6c:	pop	{r4, r5, r6, r7, r8, pc}
   15e70:	mov	r6, r1
   15e74:	b	15e68 <argp_parse@@Base+0x3640>
   15e78:	push	{r4, r5, r6, lr}
   15e7c:	subs	r4, r0, #0
   15e80:	mov	r5, r1
   15e84:	beq	15e98 <argp_parse@@Base+0x3670>
   15e88:	mov	r1, #10
   15e8c:	bl	11464 <strchr@plt>
   15e90:	adds	r4, r0, #0
   15e94:	movne	r4, #1
   15e98:	cmp	r5, #0
   15e9c:	beq	15ec8 <argp_parse@@Base+0x36a0>
   15ea0:	ldr	r3, [r5]
   15ea4:	cmp	r3, #0
   15ea8:	beq	15ec8 <argp_parse@@Base+0x36a0>
   15eac:	ldr	r1, [r3, #16]
   15eb0:	ldr	r0, [r3, #8]
   15eb4:	bl	15e78 <argp_parse@@Base+0x3650>
   15eb8:	ldr	r3, [r5, #16]!
   15ebc:	cmp	r3, #0
   15ec0:	add	r4, r4, r0
   15ec4:	bne	15eac <argp_parse@@Base+0x3684>
   15ec8:	mov	r0, r4
   15ecc:	pop	{r4, r5, r6, pc}
   15ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ed4:	add	fp, sp, #32
   15ed8:	sub	sp, sp, #12
   15edc:	ldr	r5, [r0, #4]
   15ee0:	cmp	r5, #0
   15ee4:	bne	15ef0 <argp_parse@@Base+0x36c8>
   15ee8:	sub	sp, fp, #32
   15eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ef0:	mov	r6, r0
   15ef4:	ldr	r0, [r0, #8]
   15ef8:	mov	r9, r1
   15efc:	bl	11458 <strlen@plt>
   15f00:	ldr	r8, [pc, #360]	; 16070 <argp_parse@@Base+0x3848>
   15f04:	ldr	r4, [r6]
   15f08:	sub	r7, fp, #36	; 0x24
   15f0c:	add	r3, r0, #15
   15f10:	bic	r3, r3, #7
   15f14:	sub	sp, sp, r3
   15f18:	mov	sl, sp
   15f1c:	str	sp, [r7, #-4]!
   15f20:	ldr	r2, [r4, #20]
   15f24:	mov	r0, r4
   15f28:	mov	r3, r7
   15f2c:	mov	r1, r8
   15f30:	ldr	r2, [r2, #24]
   15f34:	bl	142e4 <argp_parse@@Base+0x1abc>
   15f38:	subs	r5, r5, #1
   15f3c:	add	r4, r4, #28
   15f40:	bne	15f20 <argp_parse@@Base+0x36f8>
   15f44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f48:	cmp	sl, r3
   15f4c:	bcc	16050 <argp_parse@@Base+0x3828>
   15f50:	ldm	r6, {r4, r5}
   15f54:	cmp	r5, #0
   15f58:	beq	15ee8 <argp_parse@@Base+0x36c0>
   15f5c:	ldr	r7, [pc, #272]	; 16074 <argp_parse@@Base+0x384c>
   15f60:	ldr	r2, [r4, #20]
   15f64:	mov	r0, r4
   15f68:	mov	r3, r9
   15f6c:	mov	r1, r7
   15f70:	ldr	r2, [r2, #24]
   15f74:	bl	142e4 <argp_parse@@Base+0x1abc>
   15f78:	subs	r5, r5, #1
   15f7c:	add	r4, r4, #28
   15f80:	bne	15f60 <argp_parse@@Base+0x3738>
   15f84:	ldm	r6, {r7, r8}
   15f88:	cmp	r8, #0
   15f8c:	beq	15ee8 <argp_parse@@Base+0x36c0>
   15f90:	ldr	sl, [pc, #224]	; 16078 <argp_parse@@Base+0x3850>
   15f94:	add	r7, r7, #28
   15f98:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15f9c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   15fa0:	cmp	r5, #0
   15fa4:	movne	r6, r4
   15fa8:	bne	15fbc <argp_parse@@Base+0x3794>
   15fac:	b	16018 <argp_parse@@Base+0x37f0>
   15fb0:	subs	r5, r5, #1
   15fb4:	add	r4, r4, #24
   15fb8:	beq	16018 <argp_parse@@Base+0x37f0>
   15fbc:	ldr	r2, [r4]
   15fc0:	cmp	r2, #0
   15fc4:	beq	15fb0 <argp_parse@@Base+0x3788>
   15fc8:	ldr	r1, [r4, #12]
   15fcc:	tst	r1, #4
   15fd0:	moveq	r6, r4
   15fd4:	tst	r1, #2
   15fd8:	bne	15fb0 <argp_parse@@Base+0x3788>
   15fdc:	ldr	r3, [r4, #8]
   15fe0:	ldr	r0, [r6, #12]
   15fe4:	cmp	r3, #0
   15fe8:	orr	r1, r1, r0
   15fec:	beq	1602c <argp_parse@@Base+0x3804>
   15ff0:	tst	r1, #16
   15ff4:	bne	15fb0 <argp_parse@@Base+0x3788>
   15ff8:	tst	r1, #1
   15ffc:	moveq	r1, sl
   16000:	ldrne	r1, [pc, #116]	; 1607c <argp_parse@@Base+0x3854>
   16004:	mov	r0, r9
   16008:	bl	18990 <argp_error@@Base+0x14b0>
   1600c:	subs	r5, r5, #1
   16010:	add	r4, r4, #24
   16014:	bne	15fbc <argp_parse@@Base+0x3794>
   16018:	subs	r8, r8, #1
   1601c:	add	r7, r7, #28
   16020:	bne	15f98 <argp_parse@@Base+0x3770>
   16024:	sub	sp, fp, #32
   16028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1602c:	tst	r1, #16
   16030:	bne	15fb0 <argp_parse@@Base+0x3788>
   16034:	ldr	r3, [r6, #8]
   16038:	cmp	r3, #0
   1603c:	bne	15ff8 <argp_parse@@Base+0x37d0>
   16040:	ldr	r1, [pc, #56]	; 16080 <argp_parse@@Base+0x3858>
   16044:	mov	r0, r9
   16048:	bl	18990 <argp_error@@Base+0x14b0>
   1604c:	b	15fb0 <argp_parse@@Base+0x3788>
   16050:	add	r1, r3, #1
   16054:	str	r1, [fp, #-40]	; 0xffffffd8
   16058:	mov	r2, sl
   1605c:	ldr	r1, [pc, #32]	; 16084 <argp_parse@@Base+0x385c>
   16060:	strb	r5, [r3]
   16064:	mov	r0, r9
   16068:	bl	18990 <argp_error@@Base+0x14b0>
   1606c:	b	15f50 <argp_parse@@Base+0x3728>
   16070:			; <UNDEFINED> instruction: 0x000156b8
   16074:	andeq	r5, r1, r4, lsl r4
   16078:	andeq	r9, r1, r0, lsr #19
   1607c:	muleq	r1, r0, r9
   16080:	andeq	r9, r1, ip, lsr #19
   16084:	andeq	r9, r1, r8, lsl #19

00016088 <argp_failure@@Base>:
   16088:	push	{r3}		; (str r3, [sp, #-4]!)
   1608c:	push	{r4, r5, r6, r7, lr}
   16090:	subs	r5, r0, #0
   16094:	sub	sp, sp, #200	; 0xc8
   16098:	mov	r7, r1
   1609c:	mov	r6, r2
   160a0:	beq	161f0 <argp_failure@@Base+0x168>
   160a4:	ldr	r3, [r5, #16]
   160a8:	tst	r3, #2
   160ac:	bne	161e0 <argp_failure@@Base+0x158>
   160b0:	ldr	r4, [r5, #44]	; 0x2c
   160b4:	cmp	r4, #0
   160b8:	beq	161e0 <argp_failure@@Base+0x158>
   160bc:	mov	r0, r4
   160c0:	bl	11590 <flockfile@plt>
   160c4:	ldr	r0, [r5, #40]	; 0x28
   160c8:	mov	r1, r4
   160cc:	bl	11278 <fputs_unlocked@plt>
   160d0:	ldr	r3, [sp, #220]	; 0xdc
   160d4:	cmp	r3, #0
   160d8:	beq	16134 <argp_failure@@Base+0xac>
   160dc:	ldr	r3, [r4, #20]
   160e0:	ldr	r1, [r4, #24]
   160e4:	add	r2, sp, #224	; 0xe0
   160e8:	cmp	r3, r1
   160ec:	str	r2, [sp]
   160f0:	addcc	r1, r3, #1
   160f4:	movcc	r2, #58	; 0x3a
   160f8:	strcc	r1, [r4, #20]
   160fc:	strbcc	r2, [r3]
   16100:	bcs	1623c <argp_failure@@Base+0x1b4>
   16104:	ldr	r3, [r4, #20]
   16108:	ldr	r2, [r4, #24]
   1610c:	cmp	r3, r2
   16110:	addcc	r1, r3, #1
   16114:	movcc	r2, #32
   16118:	strcc	r1, [r4, #20]
   1611c:	strbcc	r2, [r3]
   16120:	bcs	1622c <argp_failure@@Base+0x1a4>
   16124:	ldr	r2, [sp]
   16128:	ldr	r1, [sp, #220]	; 0xdc
   1612c:	mov	r0, r4
   16130:	bl	1153c <vfprintf@plt>
   16134:	cmp	r6, #0
   16138:	beq	1619c <argp_failure@@Base+0x114>
   1613c:	ldr	r3, [r4, #20]
   16140:	ldr	r2, [r4, #24]
   16144:	cmp	r3, r2
   16148:	addcc	r1, r3, #1
   1614c:	movcc	r2, #58	; 0x3a
   16150:	strcc	r1, [r4, #20]
   16154:	strbcc	r2, [r3]
   16158:	bcs	1625c <argp_failure@@Base+0x1d4>
   1615c:	ldr	r3, [r4, #20]
   16160:	ldr	r2, [r4, #24]
   16164:	cmp	r3, r2
   16168:	addcc	r1, r3, #1
   1616c:	movcc	r2, #32
   16170:	strcc	r1, [r4, #20]
   16174:	strbcc	r2, [r3]
   16178:	bcs	1624c <argp_failure@@Base+0x1c4>
   1617c:	mov	r2, #200	; 0xc8
   16180:	mov	r1, sp
   16184:	mov	r0, r6
   16188:	bl	114a0 <strerror_r@plt>
   1618c:	cmp	r0, #0
   16190:	beq	1626c <argp_failure@@Base+0x1e4>
   16194:	mov	r1, r4
   16198:	bl	11278 <fputs_unlocked@plt>
   1619c:	ldr	r3, [r4, #20]
   161a0:	ldr	r2, [r4, #24]
   161a4:	cmp	r3, r2
   161a8:	addcc	r1, r3, #1
   161ac:	movcc	r2, #10
   161b0:	strcc	r1, [r4, #20]
   161b4:	strbcc	r2, [r3]
   161b8:	bcs	16214 <argp_failure@@Base+0x18c>
   161bc:	mov	r0, r4
   161c0:	bl	113a4 <funlockfile@plt>
   161c4:	cmp	r7, #0
   161c8:	beq	161e0 <argp_failure@@Base+0x158>
   161cc:	cmp	r5, #0
   161d0:	beq	16224 <argp_failure@@Base+0x19c>
   161d4:	ldr	r3, [r5, #16]
   161d8:	tst	r3, #32
   161dc:	beq	16224 <argp_failure@@Base+0x19c>
   161e0:	add	sp, sp, #200	; 0xc8
   161e4:	pop	{r4, r5, r6, r7, lr}
   161e8:	add	sp, sp, #4
   161ec:	bx	lr
   161f0:	ldr	r3, [pc, #140]	; 16284 <argp_failure@@Base+0x1fc>
   161f4:	ldr	r4, [r3]
   161f8:	cmp	r4, #0
   161fc:	beq	161e0 <argp_failure@@Base+0x158>
   16200:	mov	r0, r4
   16204:	bl	11590 <flockfile@plt>
   16208:	ldr	r3, [pc, #120]	; 16288 <argp_failure@@Base+0x200>
   1620c:	ldr	r0, [r3]
   16210:	b	160c8 <argp_failure@@Base+0x40>
   16214:	mov	r1, #10
   16218:	mov	r0, r4
   1621c:	bl	114f4 <__overflow@plt>
   16220:	b	161bc <argp_failure@@Base+0x134>
   16224:	mov	r0, r7
   16228:	bl	1144c <exit@plt>
   1622c:	mov	r1, #32
   16230:	mov	r0, r4
   16234:	bl	114f4 <__overflow@plt>
   16238:	b	16124 <argp_failure@@Base+0x9c>
   1623c:	mov	r1, #58	; 0x3a
   16240:	mov	r0, r4
   16244:	bl	114f4 <__overflow@plt>
   16248:	b	16104 <argp_failure@@Base+0x7c>
   1624c:	mov	r1, #32
   16250:	mov	r0, r4
   16254:	bl	114f4 <__overflow@plt>
   16258:	b	1617c <argp_failure@@Base+0xf4>
   1625c:	mov	r1, #58	; 0x3a
   16260:	mov	r0, r4
   16264:	bl	114f4 <__overflow@plt>
   16268:	b	1615c <argp_failure@@Base+0xd4>
   1626c:	mov	r0, r6
   16270:	bl	11404 <strerror@plt>
   16274:	ldr	r3, [pc, #16]	; 1628c <argp_failure@@Base+0x204>
   16278:	cmp	r0, #0
   1627c:	moveq	r0, r3
   16280:	b	16194 <argp_failure@@Base+0x10c>
   16284:	andeq	sl, r2, r0, lsl r5
   16288:	andeq	sl, r2, r0, lsl #10
   1628c:			; <UNDEFINED> instruction: 0x000199b4
   16290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16294:	add	fp, sp, #32
   16298:	cmp	r2, #0
   1629c:	sub	sp, sp, #116	; 0x74
   162a0:	str	r2, [fp, #-132]	; 0xffffff7c
   162a4:	str	r0, [fp, #-112]	; 0xffffff90
   162a8:	str	r1, [fp, #-104]	; 0xffffff98
   162ac:	str	r3, [fp, #-96]	; 0xffffffa0
   162b0:	beq	16368 <argp_failure@@Base+0x2e0>
   162b4:	ldr	sl, [pc, #4064]	; 1729c <argp_failure@@Base+0x1214>
   162b8:	mov	r0, r2
   162bc:	bl	11590 <flockfile@plt>
   162c0:	ldr	r3, [sl, #36]	; 0x24
   162c4:	cmp	r3, #0
   162c8:	str	r3, [fp, #-108]	; 0xffffff94
   162cc:	beq	16818 <argp_failure@@Base+0x790>
   162d0:	mov	r3, #0
   162d4:	mov	r1, r3
   162d8:	ldr	r2, [sl, #32]
   162dc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   162e0:	bl	18264 <argp_error@@Base+0xd84>
   162e4:	subs	r9, r0, #0
   162e8:	beq	1735c <argp_failure@@Base+0x12d4>
   162ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   162f0:	ands	r3, r3, #11
   162f4:	streq	r3, [fp, #-136]	; 0xffffff78
   162f8:	bne	16c74 <argp_failure@@Base+0xbec>
   162fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16300:	ands	r4, r3, #3
   16304:	bne	16a68 <argp_failure@@Base+0x9e0>
   16308:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1630c:	tst	r3, #16
   16310:	bne	16a44 <argp_failure@@Base+0x9bc>
   16314:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16318:	tst	r3, #4
   1631c:	bne	16a28 <argp_failure@@Base+0x9a0>
   16320:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16324:	tst	r3, #8
   16328:	bne	163bc <argp_failure@@Base+0x334>
   1632c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16330:	tst	r3, #32
   16334:	bne	167f0 <argp_failure@@Base+0x768>
   16338:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1633c:	tst	r3, #64	; 0x40
   16340:	bne	16370 <argp_failure@@Base+0x2e8>
   16344:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16348:	bl	113a4 <funlockfile@plt>
   1634c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16350:	cmp	r3, #0
   16354:	beq	16360 <argp_failure@@Base+0x2d8>
   16358:	mov	r0, r3
   1635c:	bl	14498 <argp_parse@@Base+0x1c70>
   16360:	mov	r0, r9
   16364:	bl	18850 <argp_error@@Base+0x1370>
   16368:	sub	sp, fp, #32
   1636c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16370:	ldr	r5, [pc, #3880]	; 172a0 <argp_failure@@Base+0x1218>
   16374:	ldr	r2, [r5]
   16378:	cmp	r2, #0
   1637c:	beq	16344 <argp_failure@@Base+0x2bc>
   16380:	cmp	r4, #0
   16384:	beq	163ac <argp_failure@@Base+0x324>
   16388:	ldr	r3, [r9, #28]
   1638c:	ldr	r2, [r9, #32]
   16390:	cmp	r3, r2
   16394:	bcs	17340 <argp_failure@@Base+0x12b8>
   16398:	add	r1, r3, #1
   1639c:	mov	r2, #10
   163a0:	str	r1, [r9, #28]
   163a4:	strb	r2, [r3]
   163a8:	ldr	r2, [r5]
   163ac:	ldr	r1, [pc, #3824]	; 172a4 <argp_failure@@Base+0x121c>
   163b0:	mov	r0, r9
   163b4:	bl	18990 <argp_error@@Base+0x14b0>
   163b8:	b	16344 <argp_failure@@Base+0x2bc>
   163bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   163c0:	ldr	r3, [r3, #4]
   163c4:	cmp	r3, #0
   163c8:	str	r3, [fp, #-108]	; 0xffffff94
   163cc:	beq	1632c <argp_failure@@Base+0x2a4>
   163d0:	cmp	r4, #0
   163d4:	beq	171f0 <argp_failure@@Base+0x1168>
   163d8:	ldr	r3, [r9, #28]
   163dc:	ldr	r2, [r9, #32]
   163e0:	cmp	r3, r2
   163e4:	bcs	17394 <argp_failure@@Base+0x130c>
   163e8:	add	r1, r3, #1
   163ec:	mov	r2, #10
   163f0:	str	r1, [r9, #28]
   163f4:	strb	r2, [r3]
   163f8:	ldr	r3, [fp, #-136]	; 0xffffff78
   163fc:	ldr	r2, [fp, #-136]	; 0xffffff78
   16400:	ldr	r3, [r3, #4]
   16404:	ldr	r8, [r2]
   16408:	str	r3, [fp, #-108]	; 0xffffff94
   1640c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16410:	cmp	r3, #0
   16414:	mov	r3, #0
   16418:	str	r3, [fp, #-88]	; 0xffffffa8
   1641c:	str	r3, [fp, #-84]	; 0xffffffac
   16420:	str	r3, [fp, #-80]	; 0xffffffb0
   16424:	beq	167e0 <argp_failure@@Base+0x758>
   16428:	str	sl, [fp, #-100]	; 0xffffff9c
   1642c:	ldr	lr, [r9, #28]
   16430:	ldr	r3, [r9, #24]
   16434:	ldr	r5, [r9, #16]
   16438:	sub	lr, lr, r3
   1643c:	cmp	lr, r5
   16440:	ldr	r6, [r8]
   16444:	ldr	sl, [r8, #8]
   16448:	bhi	16f48 <argp_failure@@Base+0xec0>
   1644c:	ldr	r1, [r9, #4]
   16450:	ldr	r7, [r6, #12]
   16454:	str	r1, [fp, #-116]	; 0xffffff8c
   16458:	ldr	r1, [r9, #12]
   1645c:	mov	r3, #0
   16460:	str	r1, [fp, #-120]	; 0xffffff88
   16464:	sub	r1, fp, #88	; 0x58
   16468:	str	r3, [r9, #4]
   1646c:	and	r2, r7, #8
   16470:	str	r1, [fp, #-68]	; 0xffffffbc
   16474:	ldr	r1, [fp, #-104]	; 0xffffff98
   16478:	mov	r0, #1
   1647c:	cmp	r2, r3
   16480:	mov	r4, r2
   16484:	str	r0, [fp, #-64]	; 0xffffffc0
   16488:	str	r8, [fp, #-76]	; 0xffffffb4
   1648c:	str	r9, [fp, #-72]	; 0xffffffb8
   16490:	str	r1, [fp, #-60]	; 0xffffffc4
   16494:	bne	16dd4 <argp_failure@@Base+0xd4c>
   16498:	ldr	ip, [r8, #4]
   1649c:	cmp	ip, r3
   164a0:	beq	164cc <argp_failure@@Base+0x444>
   164a4:	add	r0, r6, #24
   164a8:	ldr	r3, [r0, #-24]	; 0xffffffe8
   164ac:	cmp	r3, #0
   164b0:	beq	164c0 <argp_failure@@Base+0x438>
   164b4:	ldr	r3, [r0, #-12]
   164b8:	tst	r3, #2
   164bc:	beq	16dd0 <argp_failure@@Base+0xd48>
   164c0:	subs	ip, ip, #1
   164c4:	add	r0, r0, #24
   164c8:	bne	164a8 <argp_failure@@Base+0x420>
   164cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   164d0:	cmp	lr, r5
   164d4:	str	r2, [fp, #-128]	; 0xffffff80
   164d8:	ldr	r5, [r3, #8]
   164dc:	bhi	16de8 <argp_failure@@Base+0xd60>
   164e0:	str	r5, [r9, #12]
   164e4:	ldr	r5, [r8, #4]
   164e8:	cmp	r5, #0
   164ec:	beq	16570 <argp_failure@@Base+0x4e8>
   164f0:	mov	r4, r6
   164f4:	str	r8, [fp, #-124]	; 0xffffff84
   164f8:	b	16510 <argp_failure@@Base+0x488>
   164fc:	subs	r5, r5, #1
   16500:	add	r4, r4, #24
   16504:	beq	16564 <argp_failure@@Base+0x4dc>
   16508:	ldr	r7, [r4, #12]
   1650c:	and	r2, r7, #8
   16510:	cmp	r2, #0
   16514:	bne	164fc <argp_failure@@Base+0x474>
   16518:	ldr	r8, [r4, #4]
   1651c:	sub	r2, r8, #1
   16520:	cmp	r2, #254	; 0xfe
   16524:	bhi	164fc <argp_failure@@Base+0x474>
   16528:	bl	11434 <__ctype_b_loc@plt>
   1652c:	lsl	r2, r8, #1
   16530:	ldr	r1, [r0]
   16534:	ldrh	r2, [r1, r2]
   16538:	tst	r2, #16384	; 0x4000
   1653c:	beq	164fc <argp_failure@@Base+0x474>
   16540:	ldrb	r2, [sl]
   16544:	cmp	r8, r2
   16548:	bne	164fc <argp_failure@@Base+0x474>
   1654c:	tst	r7, #2
   16550:	beq	16e94 <argp_failure@@Base+0xe0c>
   16554:	subs	r5, r5, #1
   16558:	add	sl, sl, #1
   1655c:	add	r4, r4, #24
   16560:	bne	16508 <argp_failure@@Base+0x480>
   16564:	ldr	r4, [r6, #12]
   16568:	ldr	r8, [fp, #-124]	; 0xffffff84
   1656c:	and	r4, r4, #8
   16570:	ldr	r3, [r9, #28]
   16574:	ldr	r1, [r9, #24]
   16578:	cmp	r4, #0
   1657c:	ldr	r2, [r9, #16]
   16580:	sub	r3, r3, r1
   16584:	beq	16e00 <argp_failure@@Base+0xd78>
   16588:	cmp	r3, r2
   1658c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16590:	ldr	r4, [r3, #16]
   16594:	bhi	170c8 <argp_failure@@Base+0x1040>
   16598:	str	r4, [r9, #12]
   1659c:	ldr	r5, [r8, #4]
   165a0:	cmp	r5, #0
   165a4:	addne	r4, r6, #24
   165a8:	bne	165bc <argp_failure@@Base+0x534>
   165ac:	b	1664c <argp_failure@@Base+0x5c4>
   165b0:	subs	r5, r5, #1
   165b4:	add	r4, r4, #24
   165b8:	beq	1664c <argp_failure@@Base+0x5c4>
   165bc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   165c0:	cmp	r3, #0
   165c4:	beq	165b0 <argp_failure@@Base+0x528>
   165c8:	ldr	r3, [r4, #-12]
   165cc:	tst	r3, #2
   165d0:	bne	165b0 <argp_failure@@Base+0x528>
   165d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165d8:	sub	r1, fp, #76	; 0x4c
   165dc:	ldr	r0, [r3, #16]
   165e0:	bl	147c8 <argp_parse@@Base+0x1fa0>
   165e4:	ldr	sl, [r4, #-24]	; 0xffffffe8
   165e8:	mov	r0, sl
   165ec:	bl	11458 <strlen@plt>
   165f0:	subs	r7, r0, #0
   165f4:	beq	165b0 <argp_failure@@Base+0x528>
   165f8:	ldr	r2, [r9, #28]
   165fc:	ldr	lr, [r9, #32]
   16600:	add	ip, r2, r7
   16604:	cmp	lr, ip
   16608:	mov	r1, r7
   1660c:	mov	r0, r9
   16610:	bcs	16624 <argp_failure@@Base+0x59c>
   16614:	bl	18970 <argp_error@@Base+0x1490>
   16618:	cmp	r0, #0
   1661c:	beq	165b0 <argp_failure@@Base+0x528>
   16620:	ldr	r2, [r9, #28]
   16624:	mov	r0, r2
   16628:	mov	r1, sl
   1662c:	mov	r2, r7
   16630:	bl	11308 <memcpy@plt>
   16634:	ldr	r2, [r9, #28]
   16638:	subs	r5, r5, #1
   1663c:	add	r3, r2, r7
   16640:	str	r3, [r9, #28]
   16644:	add	r4, r4, #24
   16648:	bne	165bc <argp_failure@@Base+0x534>
   1664c:	ldr	r3, [r9, #28]
   16650:	ldr	r1, [r9, #24]
   16654:	ldr	r2, [r9, #16]
   16658:	sub	r3, r3, r1
   1665c:	cmp	r3, r2
   16660:	bhi	1707c <argp_failure@@Base+0xff4>
   16664:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16668:	mov	r3, #0
   1666c:	cmp	r2, r3
   16670:	str	r3, [r9, #4]
   16674:	beq	16f64 <argp_failure@@Base+0xedc>
   16678:	ldr	r3, [r6, #12]
   1667c:	tst	r3, #8
   16680:	bne	166ac <argp_failure@@Base+0x624>
   16684:	ldr	r4, [r6, #4]
   16688:	sub	r3, r4, #1
   1668c:	cmp	r3, #254	; 0xfe
   16690:	bhi	166ac <argp_failure@@Base+0x624>
   16694:	bl	11434 <__ctype_b_loc@plt>
   16698:	lsl	r4, r4, #1
   1669c:	ldr	r3, [r0]
   166a0:	ldrh	r3, [r3, r4]
   166a4:	tst	r3, #16384	; 0x4000
   166a8:	bne	166b8 <argp_failure@@Base+0x630>
   166ac:	ldr	r3, [r6]
   166b0:	cmp	r3, #0
   166b4:	beq	1732c <argp_failure@@Base+0x12a4>
   166b8:	ldr	r3, [r9, #28]
   166bc:	ldr	r1, [r9, #24]
   166c0:	ldr	r2, [r9, #16]
   166c4:	sub	r3, r3, r1
   166c8:	cmp	r3, r2
   166cc:	bhi	16f14 <argp_failure@@Base+0xe8c>
   166d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   166d4:	str	r3, [r9, #4]
   166d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   166dc:	add	r8, r8, #28
   166e0:	subs	r3, r3, #1
   166e4:	str	r3, [fp, #-108]	; 0xffffff94
   166e8:	ldr	r3, [fp, #-120]	; 0xffffff88
   166ec:	str	r3, [r9, #12]
   166f0:	bne	1642c <argp_failure@@Base+0x3a4>
   166f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   166f8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   166fc:	cmp	r3, #0
   16700:	beq	167e0 <argp_failure@@Base+0x758>
   16704:	ldr	r3, [sl, #4]
   16708:	cmp	r3, #0
   1670c:	beq	167e0 <argp_failure@@Base+0x758>
   16710:	ldr	r3, [fp, #-104]	; 0xffffff98
   16714:	ldr	r1, [pc, #2956]	; 172a8 <argp_failure@@Base+0x1220>
   16718:	cmp	r3, #0
   1671c:	ldr	r0, [pc, #2952]	; 172ac <argp_failure@@Base+0x1224>
   16720:	ldrne	r2, [r3]
   16724:	ldreq	r2, [fp, #-104]	; 0xffffff98
   16728:	ldr	r3, [fp, #-104]	; 0xffffff98
   1672c:	bl	14578 <argp_parse@@Base+0x1d50>
   16730:	subs	r4, r0, #0
   16734:	beq	167e0 <argp_failure@@Base+0x758>
   16738:	ldrb	r3, [r4]
   1673c:	cmp	r3, #0
   16740:	beq	167d4 <argp_failure@@Base+0x74c>
   16744:	ldr	r3, [r9, #28]
   16748:	ldr	r2, [r9, #32]
   1674c:	cmp	r3, r2
   16750:	bcs	173f0 <argp_failure@@Base+0x1368>
   16754:	add	r1, r3, #1
   16758:	mov	r2, #10
   1675c:	str	r1, [r9, #28]
   16760:	strb	r2, [r3]
   16764:	mov	r0, r4
   16768:	bl	11458 <strlen@plt>
   1676c:	subs	r5, r0, #0
   16770:	beq	173cc <argp_failure@@Base+0x1344>
   16774:	ldr	r0, [r9, #28]
   16778:	ldr	r2, [r9, #32]
   1677c:	add	r3, r0, r5
   16780:	cmp	r2, r3
   16784:	bcs	167a0 <argp_failure@@Base+0x718>
   16788:	mov	r1, r5
   1678c:	mov	r0, r9
   16790:	bl	18970 <argp_error@@Base+0x1490>
   16794:	cmp	r0, #0
   16798:	beq	173cc <argp_failure@@Base+0x1344>
   1679c:	ldr	r0, [r9, #28]
   167a0:	mov	r2, r5
   167a4:	mov	r1, r4
   167a8:	bl	11308 <memcpy@plt>
   167ac:	ldr	r3, [r9, #28]
   167b0:	add	r3, r3, r5
   167b4:	str	r3, [r9, #28]
   167b8:	ldr	r2, [r9, #32]
   167bc:	cmp	r2, r3
   167c0:	bls	173d4 <argp_failure@@Base+0x134c>
   167c4:	add	r1, r3, #1
   167c8:	mov	r2, #10
   167cc:	str	r1, [r9, #28]
   167d0:	strb	r2, [r3]
   167d4:	ldr	r3, [pc, #2768]	; 172ac <argp_failure@@Base+0x1224>
   167d8:	cmp	r4, r3
   167dc:	bne	17320 <argp_failure@@Base+0x1298>
   167e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   167e4:	mov	r4, #1
   167e8:	tst	r3, #32
   167ec:	beq	16338 <argp_failure@@Base+0x2b0>
   167f0:	mov	r3, #0
   167f4:	str	r3, [sp]
   167f8:	str	r9, [sp, #4]
   167fc:	mov	r3, r4
   16800:	ldr	r1, [fp, #-104]	; 0xffffff98
   16804:	ldr	r0, [fp, #-112]	; 0xffffff90
   16808:	mov	r2, #1
   1680c:	bl	14974 <argp_parse@@Base+0x214c>
   16810:	orr	r4, r4, r0
   16814:	b	16338 <argp_failure@@Base+0x2b0>
   16818:	ldr	r0, [pc, #2704]	; 172b0 <argp_failure@@Base+0x1228>
   1681c:	bl	113d4 <getenv@plt>
   16820:	mov	lr, sl
   16824:	sub	r3, fp, #76	; 0x4c
   16828:	mov	ip, r3
   1682c:	str	r3, [fp, #-100]	; 0xffffff9c
   16830:	mov	r6, r0
   16834:	ldm	lr!, {r0, r1, r2, r3}
   16838:	cmp	r6, #0
   1683c:	stmia	ip!, {r0, r1, r2, r3}
   16840:	ldm	lr!, {r0, r1, r2, r3}
   16844:	stmia	ip!, {r0, r1, r2, r3}
   16848:	ldm	lr, {r0, r1}
   1684c:	stm	ip, {r0, r1}
   16850:	beq	162d0 <argp_failure@@Base+0x248>
   16854:	ldrb	r9, [r6]
   16858:	ldr	r8, [pc, #2644]	; 172b4 <argp_failure@@Base+0x122c>
   1685c:	cmp	r9, #0
   16860:	beq	169b4 <argp_failure@@Base+0x92c>
   16864:	bl	11434 <__ctype_b_loc@plt>
   16868:	mov	r5, r0
   1686c:	ldr	r1, [r0]
   16870:	b	16878 <argp_failure@@Base+0x7f0>
   16874:	ldrb	r9, [r6, #1]!
   16878:	lsl	r3, r9, #1
   1687c:	ldrh	r3, [r1, r3]
   16880:	tst	r3, #8192	; 0x2000
   16884:	bne	16874 <argp_failure@@Base+0x7ec>
   16888:	ands	r2, r3, #1024	; 0x400
   1688c:	beq	169ac <argp_failure@@Base+0x924>
   16890:	cmp	r9, #95	; 0x5f
   16894:	cmpne	r9, #45	; 0x2d
   16898:	lsl	r3, r3, #28
   1689c:	moveq	r7, #1
   168a0:	movne	r7, #0
   168a4:	orrs	r3, r7, r3, lsr #31
   168a8:	beq	17168 <argp_failure@@Base+0x10e0>
   168ac:	mov	r4, r6
   168b0:	ldrb	r3, [r4, #1]!
   168b4:	cmp	r3, #95	; 0x5f
   168b8:	cmpne	r3, #45	; 0x2d
   168bc:	lsl	r2, r3, #1
   168c0:	moveq	r0, #1
   168c4:	ldrh	r2, [r1, r2]
   168c8:	movne	r0, #0
   168cc:	lsl	ip, r2, #28
   168d0:	orrs	r0, r0, ip, lsr #31
   168d4:	bne	168b0 <argp_failure@@Base+0x828>
   168d8:	tst	r2, #8192	; 0x2000
   168dc:	sub	r7, r4, r6
   168e0:	beq	168f8 <argp_failure@@Base+0x870>
   168e4:	ldrb	r3, [r4, #1]!
   168e8:	lsl	r2, r3, #1
   168ec:	ldrh	r2, [r1, r2]
   168f0:	tst	r2, #8192	; 0x2000
   168f4:	bne	168e4 <argp_failure@@Base+0x85c>
   168f8:	cmp	r3, #44	; 0x2c
   168fc:	cmpne	r3, #0
   16900:	beq	16a14 <argp_failure@@Base+0x98c>
   16904:	cmp	r3, #61	; 0x3d
   16908:	beq	16d70 <argp_failure@@Base+0xce8>
   1690c:	ldrb	r3, [r4]
   16910:	lsl	r3, r3, #1
   16914:	ldrh	r3, [r1, r3]
   16918:	tst	r3, #2048	; 0x800
   1691c:	bne	16d10 <argp_failure@@Base+0xc88>
   16920:	ldr	r3, [fp, #-108]	; 0xffffff94
   16924:	mov	r9, r3
   16928:	str	r3, [fp, #-116]	; 0xffffff8c
   1692c:	ldr	r5, [pc, #2436]	; 172b8 <argp_failure@@Base+0x1230>
   16930:	b	16940 <argp_failure@@Base+0x8b8>
   16934:	add	r5, r5, #16
   16938:	cmp	r5, r8
   1693c:	beq	171d0 <argp_failure@@Base+0x1148>
   16940:	mov	r0, r5
   16944:	bl	11458 <strlen@plt>
   16948:	cmp	r0, r7
   1694c:	bne	16934 <argp_failure@@Base+0x8ac>
   16950:	mov	r2, r7
   16954:	mov	r1, r5
   16958:	mov	r0, r6
   1695c:	bl	115d8 <strncmp@plt>
   16960:	cmp	r0, #0
   16964:	bne	16934 <argp_failure@@Base+0x8ac>
   16968:	cmp	r9, #0
   1696c:	beq	1697c <argp_failure@@Base+0x8f4>
   16970:	ldrb	r1, [r5, #14]
   16974:	cmp	r1, #0
   16978:	beq	173b0 <argp_failure@@Base+0x1328>
   1697c:	ldrb	r3, [r5, #15]
   16980:	sub	r2, fp, #36	; 0x24
   16984:	add	r3, r2, r3
   16988:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1698c:	str	r2, [r3, #-40]	; 0xffffffd8
   16990:	cmp	r5, r8
   16994:	beq	171d0 <argp_failure@@Base+0x1148>
   16998:	ldrb	r9, [r4]
   1699c:	cmp	r9, #44	; 0x2c
   169a0:	beq	170b0 <argp_failure@@Base+0x1028>
   169a4:	mov	r6, r4
   169a8:	b	1685c <argp_failure@@Base+0x7d4>
   169ac:	cmp	r9, #0
   169b0:	bne	17308 <argp_failure@@Base+0x1280>
   169b4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   169b8:	ldr	r1, [pc, #2296]	; 172b8 <argp_failure@@Base+0x1230>
   169bc:	add	r3, r1, #16
   169c0:	cmp	r3, r8
   169c4:	mov	r1, r3
   169c8:	beq	1710c <argp_failure@@Base+0x1084>
   169cc:	ldrb	r2, [r3, #14]
   169d0:	cmp	r2, #0
   169d4:	bne	169bc <argp_failure@@Base+0x934>
   169d8:	ldrb	r0, [r3, #15]
   169dc:	sub	ip, fp, #36	; 0x24
   169e0:	cmp	r0, #32
   169e4:	add	ip, ip, r0
   169e8:	beq	169bc <argp_failure@@Base+0x934>
   169ec:	ldr	r0, [ip, #-40]	; 0xffffffd8
   169f0:	cmp	r0, lr
   169f4:	blt	169bc <argp_failure@@Base+0x934>
   169f8:	ldr	r1, [pc, #2236]	; 172bc <argp_failure@@Base+0x1234>
   169fc:	ldr	r0, [fp, #-104]	; 0xffffff98
   16a00:	stm	sp, {r1, r3}
   16a04:	ldr	r3, [pc, #2228]	; 172c0 <argp_failure@@Base+0x1238>
   16a08:	mov	r1, r2
   16a0c:	bl	16088 <argp_failure@@Base>
   16a10:	b	162d0 <argp_failure@@Base+0x248>
   16a14:	cmp	r9, #110	; 0x6e
   16a18:	beq	16da0 <argp_failure@@Base+0xd18>
   16a1c:	mov	r9, #1
   16a20:	str	r9, [fp, #-116]	; 0xffffff8c
   16a24:	b	1692c <argp_failure@@Base+0x8a4>
   16a28:	ldr	r3, [fp, #4]
   16a2c:	ldr	r1, [pc, #2192]	; 172c4 <argp_failure@@Base+0x123c>
   16a30:	mov	r2, r3
   16a34:	mov	r0, r9
   16a38:	bl	18990 <argp_error@@Base+0x14b0>
   16a3c:	mov	r4, #1
   16a40:	b	16320 <argp_failure@@Base+0x298>
   16a44:	mov	r2, #1
   16a48:	mov	r3, #0
   16a4c:	stm	sp, {r2, r9}
   16a50:	ldr	r1, [fp, #-104]	; 0xffffff98
   16a54:	mov	r2, r3
   16a58:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a5c:	bl	14974 <argp_parse@@Base+0x214c>
   16a60:	orr	r4, r4, r0
   16a64:	b	16314 <argp_failure@@Base+0x28c>
   16a68:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a6c:	mov	r4, #1
   16a70:	mov	r6, r4
   16a74:	ldr	r1, [r3, #16]
   16a78:	ldr	r0, [r3, #8]
   16a7c:	bl	15e78 <argp_parse@@Base+0x3650>
   16a80:	mov	r1, #0
   16a84:	add	r3, r0, #14
   16a88:	bic	r3, r3, #7
   16a8c:	sub	sp, sp, r3
   16a90:	add	r7, sp, #8
   16a94:	mov	r2, r0
   16a98:	mov	r0, r7
   16a9c:	bl	114ac <memset@plt>
   16aa0:	sub	r3, fp, #76	; 0x4c
   16aa4:	str	r3, [fp, #-100]	; 0xffffff9c
   16aa8:	ldr	r8, [fp, #-136]	; 0xffffff78
   16aac:	str	r7, [fp, #-108]	; 0xffffff94
   16ab0:	b	16bcc <argp_failure@@Base+0xb44>
   16ab4:	cmp	r4, #0
   16ab8:	ldr	r3, [fp, #-108]	; 0xffffff94
   16abc:	ldr	r5, [r9, #12]
   16ac0:	ldrne	r2, [pc, #2048]	; 172c8 <argp_failure@@Base+0x1240>
   16ac4:	str	r7, [r9, #12]
   16ac8:	ldreq	r2, [pc, #2044]	; 172cc <argp_failure@@Base+0x1244>
   16acc:	str	r3, [fp, #-76]	; 0xffffffb4
   16ad0:	ldr	r1, [pc, #2040]	; 172d0 <argp_failure@@Base+0x1248>
   16ad4:	ldr	r3, [fp, #4]
   16ad8:	mov	r0, r9
   16adc:	bl	18990 <argp_error@@Base+0x14b0>
   16ae0:	ldr	r3, [r9, #28]
   16ae4:	ldr	r1, [r9, #24]
   16ae8:	ldr	r2, [r9, #16]
   16aec:	sub	r3, r3, r1
   16af0:	cmp	r3, r2
   16af4:	ldr	r7, [sl, #28]
   16af8:	bhi	16c60 <argp_failure@@Base+0xbd8>
   16afc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16b00:	ldr	r4, [r9, #4]
   16b04:	tst	r3, #2
   16b08:	str	r7, [r9, #4]
   16b0c:	beq	16c44 <argp_failure@@Base+0xbbc>
   16b10:	ldr	r3, [r8, #4]
   16b14:	cmp	r3, #0
   16b18:	beq	16b68 <argp_failure@@Base+0xae0>
   16b1c:	ldr	ip, [r9, #28]
   16b20:	ldr	r2, [r9, #32]
   16b24:	add	r3, ip, #12
   16b28:	cmp	r2, r3
   16b2c:	bcs	16b48 <argp_failure@@Base+0xac0>
   16b30:	mov	r1, #12
   16b34:	mov	r0, r9
   16b38:	bl	18970 <argp_error@@Base+0x1490>
   16b3c:	cmp	r0, #0
   16b40:	beq	16b68 <argp_failure@@Base+0xae0>
   16b44:	ldr	ip, [r9, #28]
   16b48:	ldr	r3, [pc, #1924]	; 172d4 <argp_failure@@Base+0x124c>
   16b4c:	ldm	r3!, {r0, r1, r2}
   16b50:	str	r0, [ip]
   16b54:	str	r1, [ip, #4]
   16b58:	str	r2, [ip, #8]
   16b5c:	ldr	r3, [r9, #28]
   16b60:	add	r3, r3, #12
   16b64:	str	r3, [r9, #28]
   16b68:	mov	r3, r6
   16b6c:	ldr	r1, [fp, #-104]	; 0xffffff98
   16b70:	str	r9, [sp]
   16b74:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16b78:	ldr	r0, [fp, #-112]	; 0xffffff90
   16b7c:	bl	154b0 <argp_parse@@Base+0x2c88>
   16b80:	ldr	r3, [r9, #28]
   16b84:	ldr	r1, [r9, #24]
   16b88:	sub	r1, r3, r1
   16b8c:	mov	r7, r0
   16b90:	ldr	r0, [r9, #16]
   16b94:	cmp	r1, r0
   16b98:	strls	r5, [r9, #12]
   16b9c:	bhi	16c10 <argp_failure@@Base+0xb88>
   16ba0:	ldr	r1, [r9, #32]
   16ba4:	str	r4, [r9, #4]
   16ba8:	cmp	r1, r3
   16bac:	bls	16bf4 <argp_failure@@Base+0xb6c>
   16bb0:	add	r1, r3, #1
   16bb4:	mov	r2, #10
   16bb8:	str	r1, [r9, #28]
   16bbc:	strb	r2, [r3]
   16bc0:	cmp	r7, #0
   16bc4:	mov	r4, #0
   16bc8:	beq	16c6c <argp_failure@@Base+0xbe4>
   16bcc:	ldr	r3, [r9, #28]
   16bd0:	ldr	r1, [r9, #24]
   16bd4:	ldr	r2, [r9, #16]
   16bd8:	sub	r3, r3, r1
   16bdc:	cmp	r3, r2
   16be0:	ldr	r7, [sl, #28]
   16be4:	bls	16ab4 <argp_failure@@Base+0xa2c>
   16be8:	mov	r0, r9
   16bec:	bl	182e0 <argp_error@@Base+0xe00>
   16bf0:	b	16ab4 <argp_failure@@Base+0xa2c>
   16bf4:	mov	r1, r6
   16bf8:	mov	r0, r9
   16bfc:	bl	18970 <argp_error@@Base+0x1490>
   16c00:	cmp	r0, #0
   16c04:	beq	16bc0 <argp_failure@@Base+0xb38>
   16c08:	ldr	r3, [r9, #28]
   16c0c:	b	16bb0 <argp_failure@@Base+0xb28>
   16c10:	mov	r0, r9
   16c14:	bl	182e0 <argp_error@@Base+0xe00>
   16c18:	ldr	r3, [r9, #28]
   16c1c:	ldr	r1, [r9, #24]
   16c20:	ldr	r0, [r9, #16]
   16c24:	sub	r1, r3, r1
   16c28:	cmp	r1, r0
   16c2c:	str	r5, [r9, #12]
   16c30:	bls	16ba0 <argp_failure@@Base+0xb18>
   16c34:	mov	r0, r9
   16c38:	bl	182e0 <argp_error@@Base+0xe00>
   16c3c:	ldr	r3, [r9, #28]
   16c40:	b	16ba0 <argp_failure@@Base+0xb18>
   16c44:	mov	r1, r9
   16c48:	mov	r0, r8
   16c4c:	bl	15ed0 <argp_parse@@Base+0x36a8>
   16c50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c54:	orr	r3, r3, #2
   16c58:	str	r3, [fp, #-96]	; 0xffffffa0
   16c5c:	b	16b68 <argp_failure@@Base+0xae0>
   16c60:	mov	r0, r9
   16c64:	bl	182e0 <argp_error@@Base+0xe00>
   16c68:	b	16afc <argp_failure@@Base+0xa74>
   16c6c:	mov	r4, #1
   16c70:	b	16308 <argp_failure@@Base+0x280>
   16c74:	mov	r1, #0
   16c78:	ldr	r0, [fp, #-112]	; 0xffffff90
   16c7c:	bl	15700 <argp_parse@@Base+0x2ed8>
   16c80:	ldr	r2, [pc, #1616]	; 172d8 <argp_failure@@Base+0x1250>
   16c84:	ldr	r4, [r0, #4]
   16c88:	ldr	r5, [r0]
   16c8c:	mov	r1, r4
   16c90:	mov	r6, r0
   16c94:	str	r0, [fp, #-136]	; 0xffffff78
   16c98:	mov	r0, r5
   16c9c:	bl	15df0 <argp_parse@@Base+0x35c8>
   16ca0:	ldr	r2, [pc, #1588]	; 172dc <argp_failure@@Base+0x1254>
   16ca4:	cmp	r0, #0
   16ca8:	mvnne	r3, #0
   16cac:	strne	r3, [r0, #12]
   16cb0:	movne	r3, r6
   16cb4:	mov	r0, r5
   16cb8:	ldrne	r4, [r3, #4]
   16cbc:	mov	r1, r4
   16cc0:	bl	15df0 <argp_parse@@Base+0x35c8>
   16cc4:	cmp	r0, #0
   16cc8:	mvnne	r3, #0
   16ccc:	strne	r3, [r0, #12]
   16cd0:	ldrne	r3, [fp, #-136]	; 0xffffff78
   16cd4:	ldrne	r4, [r3, #4]
   16cd8:	cmp	r4, #0
   16cdc:	beq	162fc <argp_failure@@Base+0x274>
   16ce0:	mov	r3, r5
   16ce4:	mov	r1, #0
   16ce8:	str	r1, [r3, #24]
   16cec:	add	r1, r1, #1
   16cf0:	cmp	r1, r4
   16cf4:	add	r3, r3, #28
   16cf8:	bne	16ce8 <argp_failure@@Base+0xc60>
   16cfc:	mov	r0, r5
   16d00:	ldr	r3, [pc, #1496]	; 172e0 <argp_failure@@Base+0x1258>
   16d04:	mov	r2, #28
   16d08:	bl	115a8 <qsort@plt>
   16d0c:	b	162fc <argp_failure@@Base+0x274>
   16d10:	mov	r2, #10
   16d14:	mov	r1, #0
   16d18:	mov	r0, r4
   16d1c:	bl	1129c <strtol@plt>
   16d20:	ldrb	r3, [r4]
   16d24:	ldr	r2, [r5]
   16d28:	lsl	r3, r3, #1
   16d2c:	ldrh	r3, [r2, r3]
   16d30:	tst	r3, #2048	; 0x800
   16d34:	str	r0, [fp, #-116]	; 0xffffff8c
   16d38:	beq	16d60 <argp_failure@@Base+0xcd8>
   16d3c:	ldrb	r3, [r4, #1]!
   16d40:	lsl	r3, r3, #1
   16d44:	ldrh	r3, [r2, r3]
   16d48:	tst	r3, #2048	; 0x800
   16d4c:	bne	16d3c <argp_failure@@Base+0xcb4>
   16d50:	b	16d60 <argp_failure@@Base+0xcd8>
   16d54:	ldrb	r3, [r4, #1]!
   16d58:	lsl	r3, r3, #1
   16d5c:	ldrh	r3, [r2, r3]
   16d60:	tst	r3, #8192	; 0x2000
   16d64:	bne	16d54 <argp_failure@@Base+0xccc>
   16d68:	ldr	r9, [fp, #-108]	; 0xffffff94
   16d6c:	b	1692c <argp_failure@@Base+0x8a4>
   16d70:	ldrb	r3, [r4, #1]
   16d74:	add	r4, r4, #1
   16d78:	lsl	r3, r3, #1
   16d7c:	ldrh	r3, [r1, r3]
   16d80:	tst	r3, #8192	; 0x2000
   16d84:	beq	16918 <argp_failure@@Base+0x890>
   16d88:	ldrb	r3, [r4, #1]!
   16d8c:	lsl	r3, r3, #1
   16d90:	ldrh	r3, [r1, r3]
   16d94:	tst	r3, #8192	; 0x2000
   16d98:	bne	16d88 <argp_failure@@Base+0xd00>
   16d9c:	b	16918 <argp_failure@@Base+0x890>
   16da0:	ldrb	r3, [r6, #1]
   16da4:	cmp	r3, #111	; 0x6f
   16da8:	bne	16a1c <argp_failure@@Base+0x994>
   16dac:	ldrb	r3, [r6, #2]
   16db0:	cmp	r3, #45	; 0x2d
   16db4:	bne	16a1c <argp_failure@@Base+0x994>
   16db8:	ldr	r3, [fp, #-108]	; 0xffffff94
   16dbc:	add	r6, r6, #3
   16dc0:	sub	r7, r7, #3
   16dc4:	str	r3, [fp, #-116]	; 0xffffff8c
   16dc8:	mov	r9, #1
   16dcc:	b	1692c <argp_failure@@Base+0x8a4>
   16dd0:	mov	r3, #1
   16dd4:	str	r3, [fp, #-128]	; 0xffffff80
   16dd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ddc:	cmp	lr, r5
   16de0:	ldr	r5, [r3, #8]
   16de4:	bls	164e0 <argp_failure@@Base+0x458>
   16de8:	mov	r0, r9
   16dec:	bl	182e0 <argp_error@@Base+0xe00>
   16df0:	ldr	r7, [r6, #12]
   16df4:	and	r2, r7, #8
   16df8:	mov	r4, r2
   16dfc:	b	164e0 <argp_failure@@Base+0x458>
   16e00:	cmp	r3, r2
   16e04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16e08:	ldr	r4, [r3, #12]
   16e0c:	bhi	170bc <argp_failure@@Base+0x1034>
   16e10:	str	r4, [r9, #12]
   16e14:	ldr	r5, [r8, #4]
   16e18:	cmp	r5, #0
   16e1c:	beq	1664c <argp_failure@@Base+0x5c4>
   16e20:	add	r4, r6, #24
   16e24:	ldr	r7, [fp, #-100]	; 0xffffff9c
   16e28:	b	16e38 <argp_failure@@Base+0xdb0>
   16e2c:	subs	r5, r5, #1
   16e30:	add	r4, r4, #24
   16e34:	beq	1664c <argp_failure@@Base+0x5c4>
   16e38:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16e3c:	cmp	r3, #0
   16e40:	beq	16e2c <argp_failure@@Base+0xda4>
   16e44:	ldr	r3, [r4, #-12]
   16e48:	tst	r3, #2
   16e4c:	bne	16e2c <argp_failure@@Base+0xda4>
   16e50:	sub	r1, fp, #76	; 0x4c
   16e54:	ldr	r0, [r7, #12]
   16e58:	bl	147c8 <argp_parse@@Base+0x1fa0>
   16e5c:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16e60:	ldr	r1, [pc, #1148]	; 172e4 <argp_failure@@Base+0x125c>
   16e64:	mov	r0, r9
   16e68:	bl	18990 <argp_error@@Base+0x14b0>
   16e6c:	ldr	r3, [r6, #8]
   16e70:	ldr	r1, [pc, #1136]	; 172e8 <argp_failure@@Base+0x1260>
   16e74:	subs	r2, r3, #0
   16e78:	mov	r0, r9
   16e7c:	beq	16e2c <argp_failure@@Base+0xda4>
   16e80:	ldr	ip, [r6, #12]
   16e84:	tst	ip, #1
   16e88:	ldrne	r1, [pc, #1116]	; 172ec <argp_failure@@Base+0x1264>
   16e8c:	bl	18990 <argp_error@@Base+0x14b0>
   16e90:	b	16e2c <argp_failure@@Base+0xda4>
   16e94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16e98:	sub	r1, fp, #76	; 0x4c
   16e9c:	ldr	r0, [r3, #8]
   16ea0:	bl	147c8 <argp_parse@@Base+0x1fa0>
   16ea4:	ldr	r3, [r9, #28]
   16ea8:	ldr	r2, [r9, #32]
   16eac:	cmp	r3, r2
   16eb0:	bcs	170f0 <argp_failure@@Base+0x1068>
   16eb4:	add	r2, r3, #1
   16eb8:	str	r2, [r9, #28]
   16ebc:	mov	r2, #45	; 0x2d
   16ec0:	strb	r2, [r3]
   16ec4:	ldr	r3, [r9, #28]
   16ec8:	ldr	r2, [r9, #32]
   16ecc:	ldrb	r7, [sl]
   16ed0:	cmp	r3, r2
   16ed4:	bcs	170d4 <argp_failure@@Base+0x104c>
   16ed8:	add	r2, r3, #1
   16edc:	str	r2, [r9, #28]
   16ee0:	strb	r7, [r3]
   16ee4:	ldr	r3, [fp, #-128]	; 0xffffff80
   16ee8:	cmp	r3, #0
   16eec:	beq	17088 <argp_failure@@Base+0x1000>
   16ef0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ef4:	ldr	r3, [r3]
   16ef8:	cmp	r3, #0
   16efc:	bne	17088 <argp_failure@@Base+0x1000>
   16f00:	ldr	r3, [r6, #8]
   16f04:	cmp	r3, #0
   16f08:	movne	r3, #1
   16f0c:	strne	r3, [fp, #-80]	; 0xffffffb0
   16f10:	b	16554 <argp_failure@@Base+0x4cc>
   16f14:	mov	r0, r9
   16f18:	bl	182e0 <argp_error@@Base+0xe00>
   16f1c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16f20:	ldr	r3, [r9, #28]
   16f24:	ldr	r1, [r9, #24]
   16f28:	str	r2, [r9, #4]
   16f2c:	ldr	r2, [r9, #16]
   16f30:	sub	r3, r3, r1
   16f34:	cmp	r3, r2
   16f38:	bls	166d8 <argp_failure@@Base+0x650>
   16f3c:	mov	r0, r9
   16f40:	bl	182e0 <argp_error@@Base+0xe00>
   16f44:	b	166d8 <argp_failure@@Base+0x650>
   16f48:	mov	r0, r9
   16f4c:	bl	182e0 <argp_error@@Base+0xe00>
   16f50:	ldr	lr, [r9, #28]
   16f54:	ldr	r2, [r9, #24]
   16f58:	ldr	r5, [r9, #16]
   16f5c:	sub	lr, lr, r2
   16f60:	b	1644c <argp_failure@@Base+0x3c4>
   16f64:	ldr	r4, [r6, #16]
   16f68:	ldr	r1, [r6, #4]
   16f6c:	mov	r0, r4
   16f70:	ldr	r3, [fp, #-104]	; 0xffffff98
   16f74:	ldr	r2, [r8, #20]
   16f78:	bl	14578 <argp_parse@@Base+0x1d50>
   16f7c:	subs	r5, r0, #0
   16f80:	beq	17038 <argp_failure@@Base+0xfb0>
   16f84:	ldrb	r3, [r5]
   16f88:	cmp	r3, #0
   16f8c:	beq	17028 <argp_failure@@Base+0xfa0>
   16f90:	ldr	r3, [r9, #28]
   16f94:	ldr	r1, [r9, #24]
   16f98:	ldr	r2, [r9, #16]
   16f9c:	sub	r3, r3, r1
   16fa0:	cmp	r3, r2
   16fa4:	bhi	17228 <argp_failure@@Base+0x11a0>
   16fa8:	ldr	r7, [r9, #20]
   16fac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16fb0:	bic	r7, r7, r7, asr #31
   16fb4:	ldr	r6, [r3, #20]
   16fb8:	mov	r3, r6
   16fbc:	str	r6, [r9, #4]
   16fc0:	add	r2, r6, #3
   16fc4:	cmp	r2, r7
   16fc8:	str	r3, [r9, #12]
   16fcc:	bcs	17178 <argp_failure@@Base+0x10f0>
   16fd0:	ldr	r3, [r9, #28]
   16fd4:	ldr	r2, [r9, #32]
   16fd8:	cmp	r3, r2
   16fdc:	bcs	17378 <argp_failure@@Base+0x12f0>
   16fe0:	add	r1, r3, #1
   16fe4:	mov	r2, #10
   16fe8:	str	r1, [r9, #28]
   16fec:	strb	r2, [r3]
   16ff0:	mov	r0, r5
   16ff4:	bl	11458 <strlen@plt>
   16ff8:	subs	r6, r0, #0
   16ffc:	beq	17028 <argp_failure@@Base+0xfa0>
   17000:	ldr	r0, [r9, #28]
   17004:	ldr	r2, [r9, #32]
   17008:	add	r3, r0, r6
   1700c:	cmp	r2, r3
   17010:	bcs	1720c <argp_failure@@Base+0x1184>
   17014:	mov	r1, r6
   17018:	mov	r0, r9
   1701c:	bl	18970 <argp_error@@Base+0x1490>
   17020:	cmp	r0, #0
   17024:	bne	17208 <argp_failure@@Base+0x1180>
   17028:	cmp	r4, r5
   1702c:	beq	17038 <argp_failure@@Base+0xfb0>
   17030:	mov	r0, r5
   17034:	bl	136c0 <argp_parse@@Base+0xe98>
   17038:	ldr	r3, [r9, #28]
   1703c:	ldr	r2, [r9, #24]
   17040:	ldr	r1, [r9, #16]
   17044:	sub	r2, r3, r2
   17048:	cmp	r2, r1
   1704c:	bhi	17158 <argp_failure@@Base+0x10d0>
   17050:	ldr	r1, [r9, #32]
   17054:	mov	r2, #0
   17058:	cmp	r1, r3
   1705c:	str	r2, [r9, #4]
   17060:	bls	1713c <argp_failure@@Base+0x10b4>
   17064:	add	r1, r3, #1
   17068:	mov	r2, #10
   1706c:	str	r1, [r9, #28]
   17070:	strb	r2, [r3]
   17074:	str	r8, [fp, #-88]	; 0xffffffa8
   17078:	b	166b8 <argp_failure@@Base+0x630>
   1707c:	mov	r0, r9
   17080:	bl	182e0 <argp_error@@Base+0xe00>
   17084:	b	16664 <argp_failure@@Base+0x5dc>
   17088:	ldr	r2, [r6, #8]
   1708c:	cmp	r2, #0
   17090:	beq	16554 <argp_failure@@Base+0x4cc>
   17094:	ldr	r3, [r6, #12]
   17098:	mov	r0, r9
   1709c:	tst	r3, #1
   170a0:	ldrne	r1, [pc, #584]	; 172f0 <argp_failure@@Base+0x1268>
   170a4:	ldreq	r1, [pc, #584]	; 172f4 <argp_failure@@Base+0x126c>
   170a8:	bl	18990 <argp_error@@Base+0x14b0>
   170ac:	b	16554 <argp_failure@@Base+0x4cc>
   170b0:	ldrb	r9, [r4, #1]
   170b4:	add	r4, r4, #1
   170b8:	b	169a4 <argp_failure@@Base+0x91c>
   170bc:	mov	r0, r9
   170c0:	bl	182e0 <argp_error@@Base+0xe00>
   170c4:	b	16e10 <argp_failure@@Base+0xd88>
   170c8:	mov	r0, r9
   170cc:	bl	182e0 <argp_error@@Base+0xe00>
   170d0:	b	16598 <argp_failure@@Base+0x510>
   170d4:	mov	r1, #1
   170d8:	mov	r0, r9
   170dc:	bl	18970 <argp_error@@Base+0x1490>
   170e0:	cmp	r0, #0
   170e4:	beq	16ee4 <argp_failure@@Base+0xe5c>
   170e8:	ldr	r3, [r9, #28]
   170ec:	b	16ed8 <argp_failure@@Base+0xe50>
   170f0:	mov	r1, #1
   170f4:	mov	r0, r9
   170f8:	bl	18970 <argp_error@@Base+0x1490>
   170fc:	cmp	r0, #0
   17100:	beq	16ec4 <argp_failure@@Base+0xe3c>
   17104:	ldr	r3, [r9, #28]
   17108:	b	16eb4 <argp_failure@@Base+0xe2c>
   1710c:	ldr	lr, [fp, #-100]	; 0xffffff9c
   17110:	ldr	sl, [pc, #388]	; 1729c <argp_failure@@Base+0x1214>
   17114:	mov	r4, #1
   17118:	ldm	lr!, {r0, r1, r2, r3}
   1711c:	mov	ip, sl
   17120:	stmia	ip!, {r0, r1, r2, r3}
   17124:	ldm	lr!, {r0, r1, r2, r3}
   17128:	stmia	ip!, {r0, r1, r2, r3}
   1712c:	ldm	lr, {r0, r1}
   17130:	stm	ip, {r0, r1}
   17134:	str	r4, [sl, #36]	; 0x24
   17138:	b	162d0 <argp_failure@@Base+0x248>
   1713c:	mov	r1, #1
   17140:	mov	r0, r9
   17144:	bl	18970 <argp_error@@Base+0x1490>
   17148:	cmp	r0, #0
   1714c:	beq	17074 <argp_failure@@Base+0xfec>
   17150:	ldr	r3, [r9, #28]
   17154:	b	17064 <argp_failure@@Base+0xfdc>
   17158:	mov	r0, r9
   1715c:	bl	182e0 <argp_error@@Base+0xe00>
   17160:	ldr	r3, [r9, #28]
   17164:	b	17050 <argp_failure@@Base+0xfc8>
   17168:	mov	r7, r3
   1716c:	mov	r4, r6
   17170:	mov	r3, r9
   17174:	b	168f8 <argp_failure@@Base+0x870>
   17178:	cmp	r6, r7
   1717c:	bhi	17368 <argp_failure@@Base+0x12e0>
   17180:	ldr	r3, [r9, #28]
   17184:	ldr	r1, [r9, #32]
   17188:	add	r2, r3, #3
   1718c:	cmp	r1, r2
   17190:	bcs	171ac <argp_failure@@Base+0x1124>
   17194:	mov	r1, #3
   17198:	mov	r0, r9
   1719c:	bl	18970 <argp_error@@Base+0x1490>
   171a0:	cmp	r0, #0
   171a4:	beq	16ff0 <argp_failure@@Base+0xf68>
   171a8:	ldr	r3, [r9, #28]
   171ac:	ldr	r2, [pc, #324]	; 172f8 <argp_failure@@Base+0x1270>
   171b0:	ldrh	r1, [r2]
   171b4:	ldrb	r2, [r2, #2]
   171b8:	strh	r1, [r3]
   171bc:	strb	r2, [r3, #2]
   171c0:	ldr	r3, [r9, #28]
   171c4:	add	r3, r3, #3
   171c8:	str	r3, [r9, #28]
   171cc:	b	16ff0 <argp_failure@@Base+0xf68>
   171d0:	mov	r2, #0
   171d4:	str	r6, [sp, #4]
   171d8:	str	r7, [sp]
   171dc:	ldr	r3, [pc, #280]	; 172fc <argp_failure@@Base+0x1274>
   171e0:	mov	r1, r2
   171e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   171e8:	bl	16088 <argp_failure@@Base>
   171ec:	b	16998 <argp_failure@@Base+0x910>
   171f0:	ldr	r3, [fp, #-136]	; 0xffffff78
   171f4:	ldr	r8, [r3]
   171f8:	str	r4, [fp, #-88]	; 0xffffffa8
   171fc:	str	r4, [fp, #-84]	; 0xffffffac
   17200:	str	r4, [fp, #-80]	; 0xffffffb0
   17204:	b	16428 <argp_failure@@Base+0x3a0>
   17208:	ldr	r0, [r9, #28]
   1720c:	mov	r2, r6
   17210:	mov	r1, r5
   17214:	bl	11308 <memcpy@plt>
   17218:	ldr	r3, [r9, #28]
   1721c:	add	r6, r3, r6
   17220:	str	r6, [r9, #28]
   17224:	b	17028 <argp_failure@@Base+0xfa0>
   17228:	mov	r0, r9
   1722c:	bl	182e0 <argp_error@@Base+0xe00>
   17230:	ldr	r3, [r9, #28]
   17234:	ldr	r1, [r9, #24]
   17238:	ldr	r2, [r9, #16]
   1723c:	ldr	r7, [r9, #20]
   17240:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17244:	sub	r3, r3, r1
   17248:	cmp	r3, r2
   1724c:	ldr	r6, [sl, #20]
   17250:	bic	r7, r7, r7, asr #31
   17254:	bls	16fb8 <argp_failure@@Base+0xf30>
   17258:	mov	r0, r9
   1725c:	bl	182e0 <argp_error@@Base+0xe00>
   17260:	ldr	r3, [r9, #28]
   17264:	ldr	r1, [r9, #24]
   17268:	ldr	r2, [r9, #16]
   1726c:	sub	r3, r3, r1
   17270:	cmp	r3, r2
   17274:	ldr	r3, [sl, #20]
   17278:	str	r6, [r9, #4]
   1727c:	movls	r6, r3
   17280:	bls	16fc0 <argp_failure@@Base+0xf38>
   17284:	mov	r0, r9
   17288:	str	r3, [fp, #-124]	; 0xffffff84
   1728c:	bl	182e0 <argp_error@@Base+0xe00>
   17290:	ldr	r6, [sl, #20]
   17294:	ldr	r3, [fp, #-124]	; 0xffffff84
   17298:	b	16fc0 <argp_failure@@Base+0xf38>
   1729c:	andeq	sl, r2, r0, asr #9
   172a0:	andeq	sl, r2, r8, asr r5
   172a4:	andeq	r9, r1, r4, lsl #23
   172a8:	andeq	r0, r0, #5
   172ac:	andeq	r9, r1, r0, lsl fp
   172b0:	andeq	r9, r1, ip, asr #19
   172b4:	muleq	r1, ip, r8
   172b8:	andeq	r9, r1, ip, lsl #16
   172bc:	andeq	r9, r1, r8, lsl #21
   172c0:	andeq	r9, r1, r4, asr sl
   172c4:			; <UNDEFINED> instruction: 0x00019ab8
   172c8:	muleq	r1, r0, sl
   172cc:	andeq	r9, r1, r0, lsr #21
   172d0:	muleq	r1, r8, sl
   172d4:	andeq	r9, r1, r8, lsr #21
   172d8:	muleq	r1, r0, r3
   172dc:	andeq	r9, r1, r0, ror r3
   172e0:			; <UNDEFINED> instruction: 0x00014fb0
   172e4:	strdeq	r9, [r1], -r8
   172e8:	andeq	r9, r1, r8, lsl #22
   172ec:	andeq	r9, r1, r0, lsl #22
   172f0:	strdeq	r9, [r1], -r0
   172f4:	andeq	r9, r1, r0, asr #6
   172f8:	andeq	r9, r1, ip, lsl #22
   172fc:	andeq	r9, r1, ip, lsl #20
   17300:	andeq	r9, r1, r4, lsr sl
   17304:	ldrdeq	r9, [r1], -ip
   17308:	str	r6, [sp]
   1730c:	ldr	r3, [pc, #-20]	; 17300 <argp_failure@@Base+0x1278>
   17310:	mov	r1, r2
   17314:	ldr	r0, [fp, #-104]	; 0xffffff98
   17318:	bl	16088 <argp_failure@@Base>
   1731c:	b	169b4 <argp_failure@@Base+0x92c>
   17320:	mov	r0, r4
   17324:	bl	136c0 <argp_parse@@Base+0xe98>
   17328:	b	167e0 <argp_failure@@Base+0x758>
   1732c:	ldr	r0, [r6, #16]
   17330:	sub	r2, fp, #76	; 0x4c
   17334:	ldr	r1, [r8, #20]
   17338:	bl	145bc <argp_parse@@Base+0x1d94>
   1733c:	b	17074 <argp_failure@@Base+0xfec>
   17340:	mov	r1, #1
   17344:	mov	r0, r9
   17348:	bl	18970 <argp_error@@Base+0x1490>
   1734c:	cmp	r0, #0
   17350:	beq	163a8 <argp_failure@@Base+0x320>
   17354:	ldr	r3, [r9, #28]
   17358:	b	16398 <argp_failure@@Base+0x310>
   1735c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17360:	bl	113a4 <funlockfile@plt>
   17364:	b	16368 <argp_failure@@Base+0x2e0>
   17368:	mov	r1, r6
   1736c:	mov	r0, r9
   17370:	bl	144e4 <argp_parse@@Base+0x1cbc>
   17374:	b	16ff0 <argp_failure@@Base+0xf68>
   17378:	mov	r1, #1
   1737c:	mov	r0, r9
   17380:	bl	18970 <argp_error@@Base+0x1490>
   17384:	cmp	r0, #0
   17388:	beq	16ff0 <argp_failure@@Base+0xf68>
   1738c:	ldr	r3, [r9, #28]
   17390:	b	16fe0 <argp_failure@@Base+0xf58>
   17394:	mov	r1, #1
   17398:	mov	r0, r9
   1739c:	bl	18970 <argp_error@@Base+0x1490>
   173a0:	cmp	r0, #0
   173a4:	beq	163f8 <argp_failure@@Base+0x370>
   173a8:	ldr	r3, [r9, #28]
   173ac:	b	163e8 <argp_failure@@Base+0x360>
   173b0:	str	r6, [sp, #4]
   173b4:	str	r7, [sp]
   173b8:	ldr	r3, [pc, #-188]	; 17304 <argp_failure@@Base+0x127c>
   173bc:	mov	r2, #0
   173c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   173c4:	bl	16088 <argp_failure@@Base>
   173c8:	b	16990 <argp_failure@@Base+0x908>
   173cc:	ldr	r3, [r9, #28]
   173d0:	b	167b8 <argp_failure@@Base+0x730>
   173d4:	mov	r1, #1
   173d8:	mov	r0, r9
   173dc:	bl	18970 <argp_error@@Base+0x1490>
   173e0:	cmp	r0, #0
   173e4:	beq	167d4 <argp_failure@@Base+0x74c>
   173e8:	ldr	r3, [r9, #28]
   173ec:	b	167c4 <argp_failure@@Base+0x73c>
   173f0:	mov	r1, #1
   173f4:	mov	r0, r9
   173f8:	bl	18970 <argp_error@@Base+0x1490>
   173fc:	cmp	r0, #0
   17400:	beq	16764 <argp_failure@@Base+0x6dc>
   17404:	ldr	r3, [r9, #28]
   17408:	b	16754 <argp_failure@@Base+0x6cc>

0001740c <argp_help@@Base>:
   1740c:	push	{lr}		; (str lr, [sp, #-4]!)
   17410:	sub	sp, sp, #12
   17414:	str	r3, [sp]
   17418:	mov	r3, r2
   1741c:	mov	r2, r1
   17420:	mov	r1, #0
   17424:	bl	16290 <argp_failure@@Base+0x208>
   17428:	add	sp, sp, #12
   1742c:	pop	{pc}		; (ldr pc, [sp], #4)

00017430 <argp_state_help@@Base>:
   17430:	push	{r4, r5, lr}
   17434:	subs	r4, r0, #0
   17438:	sub	sp, sp, #12
   1743c:	mov	r5, r2
   17440:	beq	174a0 <argp_state_help@@Base+0x70>
   17444:	ldr	r3, [r4, #16]
   17448:	tst	r3, #2
   1744c:	bne	17498 <argp_state_help@@Base+0x68>
   17450:	cmp	r1, #0
   17454:	beq	17498 <argp_state_help@@Base+0x68>
   17458:	tst	r3, #64	; 0x40
   1745c:	ldr	r3, [r4, #40]	; 0x28
   17460:	orrne	r5, r5, #128	; 0x80
   17464:	ldr	r0, [r4]
   17468:	mov	r2, r1
   1746c:	str	r3, [sp]
   17470:	mov	r1, r4
   17474:	mov	r3, r5
   17478:	bl	16290 <argp_failure@@Base+0x208>
   1747c:	ldr	r3, [r4, #16]
   17480:	tst	r3, #32
   17484:	bne	17498 <argp_state_help@@Base+0x68>
   17488:	ands	r0, r5, #256	; 0x100
   1748c:	bne	174cc <argp_state_help@@Base+0x9c>
   17490:	tst	r5, #512	; 0x200
   17494:	bne	174c8 <argp_state_help@@Base+0x98>
   17498:	add	sp, sp, #12
   1749c:	pop	{r4, r5, pc}
   174a0:	cmp	r1, #0
   174a4:	beq	17498 <argp_state_help@@Base+0x68>
   174a8:	ldr	r3, [pc, #40]	; 174d8 <argp_state_help@@Base+0xa8>
   174ac:	mov	r2, r1
   174b0:	mov	r1, r4
   174b4:	ldr	ip, [r3]
   174b8:	mov	r3, r5
   174bc:	str	ip, [sp]
   174c0:	bl	16290 <argp_failure@@Base+0x208>
   174c4:	b	17488 <argp_state_help@@Base+0x58>
   174c8:	bl	1144c <exit@plt>
   174cc:	ldr	r3, [pc, #8]	; 174dc <argp_state_help@@Base+0xac>
   174d0:	ldr	r0, [r3]
   174d4:	bl	1144c <exit@plt>
   174d8:	andeq	sl, r2, r0, lsl #10
   174dc:	strdeq	sl, [r2], -r8

000174e0 <argp_error@@Base>:
   174e0:	push	{r1, r2, r3}
   174e4:	push	{r4, r5, lr}
   174e8:	subs	r5, r0, #0
   174ec:	sub	sp, sp, #8
   174f0:	beq	175c0 <argp_error@@Base+0xe0>
   174f4:	ldr	r3, [r5, #16]
   174f8:	tst	r3, #2
   174fc:	bne	175b0 <argp_error@@Base+0xd0>
   17500:	ldr	r4, [r5, #44]	; 0x2c
   17504:	cmp	r4, #0
   17508:	beq	175b0 <argp_error@@Base+0xd0>
   1750c:	mov	r0, r4
   17510:	bl	11590 <flockfile@plt>
   17514:	ldr	r0, [r5, #40]	; 0x28
   17518:	add	r3, sp, #24
   1751c:	str	r3, [sp, #4]
   17520:	mov	r1, r4
   17524:	bl	11278 <fputs_unlocked@plt>
   17528:	ldr	r3, [r4, #20]
   1752c:	ldr	r2, [r4, #24]
   17530:	cmp	r3, r2
   17534:	addcc	r1, r3, #1
   17538:	movcc	r2, #58	; 0x3a
   1753c:	strcc	r1, [r4, #20]
   17540:	strbcc	r2, [r3]
   17544:	bcs	1760c <argp_error@@Base+0x12c>
   17548:	ldr	r3, [r4, #20]
   1754c:	ldr	r2, [r4, #24]
   17550:	cmp	r3, r2
   17554:	addcc	r1, r3, #1
   17558:	movcc	r2, #32
   1755c:	strcc	r1, [r4, #20]
   17560:	strbcc	r2, [r3]
   17564:	bcs	175fc <argp_error@@Base+0x11c>
   17568:	ldr	r1, [sp, #20]
   1756c:	ldr	r2, [sp, #4]
   17570:	mov	r0, r4
   17574:	bl	1153c <vfprintf@plt>
   17578:	ldr	r3, [r4, #20]
   1757c:	ldr	r2, [r4, #24]
   17580:	cmp	r3, r2
   17584:	addcc	r1, r3, #1
   17588:	movcc	r2, #10
   1758c:	strcc	r1, [r4, #20]
   17590:	strbcc	r2, [r3]
   17594:	bcs	175ec <argp_error@@Base+0x10c>
   17598:	mov	r0, r5
   1759c:	mov	r2, #260	; 0x104
   175a0:	mov	r1, r4
   175a4:	bl	17430 <argp_state_help@@Base>
   175a8:	mov	r0, r4
   175ac:	bl	113a4 <funlockfile@plt>
   175b0:	add	sp, sp, #8
   175b4:	pop	{r4, r5, lr}
   175b8:	add	sp, sp, #12
   175bc:	bx	lr
   175c0:	ldr	r3, [pc, #84]	; 1761c <argp_error@@Base+0x13c>
   175c4:	ldr	r4, [r3]
   175c8:	cmp	r4, #0
   175cc:	beq	175b0 <argp_error@@Base+0xd0>
   175d0:	mov	r0, r4
   175d4:	bl	11590 <flockfile@plt>
   175d8:	ldr	r2, [pc, #64]	; 17620 <argp_error@@Base+0x140>
   175dc:	add	r3, sp, #24
   175e0:	str	r3, [sp, #4]
   175e4:	ldr	r0, [r2]
   175e8:	b	17520 <argp_error@@Base+0x40>
   175ec:	mov	r1, #10
   175f0:	mov	r0, r4
   175f4:	bl	114f4 <__overflow@plt>
   175f8:	b	17598 <argp_error@@Base+0xb8>
   175fc:	mov	r1, #32
   17600:	mov	r0, r4
   17604:	bl	114f4 <__overflow@plt>
   17608:	b	17568 <argp_error@@Base+0x88>
   1760c:	mov	r1, #58	; 0x3a
   17610:	mov	r0, r4
   17614:	bl	114f4 <__overflow@plt>
   17618:	b	17548 <argp_error@@Base+0x68>
   1761c:	andeq	sl, r2, r0, lsl r5
   17620:	andeq	sl, r2, r0, lsl #10
   17624:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17628:	ldr	r4, [r1, #32]
   1762c:	ldr	r8, [r1, #28]
   17630:	ldr	r7, [r1]
   17634:	add	r6, r0, r4, lsl #2
   17638:	mov	r2, r8
   1763c:	mov	r5, r7
   17640:	cmp	r5, r4
   17644:	movle	r3, #0
   17648:	movgt	r3, #1
   1764c:	cmp	r2, r4
   17650:	movge	r3, #0
   17654:	cmp	r3, #0
   17658:	beq	176cc <argp_error@@Base+0x1ec>
   1765c:	sub	r3, r5, r4
   17660:	sub	sl, r4, r2
   17664:	cmp	r3, sl
   17668:	ble	1769c <argp_error@@Base+0x1bc>
   1766c:	sub	r5, r5, sl
   17670:	add	sl, sl, r2
   17674:	add	ip, r0, r5, lsl #2
   17678:	add	sl, r0, sl, lsl #2
   1767c:	add	r3, r0, r2, lsl #2
   17680:	ldr	r9, [ip]
   17684:	ldr	lr, [r3]
   17688:	str	r9, [r3], #4
   1768c:	cmp	sl, r3
   17690:	str	lr, [ip], #4
   17694:	bne	17680 <argp_error@@Base+0x1a0>
   17698:	b	17640 <argp_error@@Base+0x160>
   1769c:	add	sl, r3, r2
   176a0:	add	r3, r0, r2, lsl #2
   176a4:	add	r9, r0, sl, lsl #2
   176a8:	mov	r2, r6
   176ac:	ldr	lr, [r2]
   176b0:	ldr	ip, [r3]
   176b4:	str	lr, [r3], #4
   176b8:	cmp	r3, r9
   176bc:	str	ip, [r2], #4
   176c0:	bne	176ac <argp_error@@Base+0x1cc>
   176c4:	mov	r2, sl
   176c8:	b	17640 <argp_error@@Base+0x160>
   176cc:	sub	r4, r7, r4
   176d0:	add	r8, r4, r8
   176d4:	str	r8, [r1, #28]
   176d8:	str	r7, [r1, #32]
   176dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   176e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176e4:	sub	sp, sp, #44	; 0x2c
   176e8:	str	r1, [sp, #20]
   176ec:	ldr	r1, [sp, #88]	; 0x58
   176f0:	str	r0, [sp, #24]
   176f4:	str	r2, [sp, #28]
   176f8:	ldr	r8, [r1, #20]
   176fc:	str	r3, [sp, #12]
   17700:	mov	r7, r8
   17704:	ldrb	r5, [r8]
   17708:	cmp	r5, #61	; 0x3d
   1770c:	cmpne	r5, #0
   17710:	movne	r5, #1
   17714:	moveq	r5, #0
   17718:	beq	17730 <argp_error@@Base+0x250>
   1771c:	ldrb	r3, [r7, #1]!
   17720:	cmp	r3, #0
   17724:	cmpne	r3, #61	; 0x3d
   17728:	bne	1771c <argp_error@@Base+0x23c>
   1772c:	sub	r5, r7, r8
   17730:	ldr	r3, [sp, #12]
   17734:	ldr	sl, [r3]
   17738:	cmp	sl, #0
   1773c:	beq	179f0 <argp_error@@Base+0x510>
   17740:	mov	fp, r3
   17744:	mov	r4, sl
   17748:	mov	r6, #0
   1774c:	mov	r2, r5
   17750:	mov	r1, r8
   17754:	mov	r0, r4
   17758:	bl	115d8 <strncmp@plt>
   1775c:	mov	r9, fp
   17760:	cmp	r0, #0
   17764:	mov	r0, r4
   17768:	bne	17778 <argp_error@@Base+0x298>
   1776c:	bl	11458 <strlen@plt>
   17770:	cmp	r0, r5
   17774:	beq	17804 <argp_error@@Base+0x324>
   17778:	ldr	r4, [fp, #16]!
   1777c:	add	r6, r6, #1
   17780:	cmp	r4, #0
   17784:	bne	1774c <argp_error@@Base+0x26c>
   17788:	ldr	r3, [sp, #12]
   1778c:	ldr	fp, [sp, #88]	; 0x58
   17790:	mov	r0, sl
   17794:	mov	r1, r8
   17798:	mov	r9, r4
   1779c:	mov	sl, r4
   177a0:	mov	r8, r3
   177a4:	mvn	r2, #0
   177a8:	str	r4, [sp, #36]	; 0x24
   177ac:	str	r4, [sp, #16]
   177b0:	str	r2, [sp, #32]
   177b4:	mov	r2, r5
   177b8:	bl	115d8 <strncmp@plt>
   177bc:	cmp	r0, #0
   177c0:	bne	177e0 <argp_error@@Base+0x300>
   177c4:	cmp	r9, #0
   177c8:	beq	17a60 <argp_error@@Base+0x580>
   177cc:	ldr	r3, [sp, #84]	; 0x54
   177d0:	cmp	r3, #0
   177d4:	beq	178a8 <argp_error@@Base+0x3c8>
   177d8:	cmp	r4, #0
   177dc:	beq	178dc <argp_error@@Base+0x3fc>
   177e0:	ldr	r0, [r8, #16]!
   177e4:	add	sl, sl, #1
   177e8:	cmp	r0, #0
   177ec:	beq	17910 <argp_error@@Base+0x430>
   177f0:	ldr	r1, [fp, #20]
   177f4:	b	177b4 <argp_error@@Base+0x2d4>
   177f8:	cmp	r9, #0
   177fc:	beq	179f0 <argp_error@@Base+0x510>
   17800:	ldr	r6, [sp, #32]
   17804:	ldr	r3, [sp, #88]	; 0x58
   17808:	ldr	r0, [sp, #88]	; 0x58
   1780c:	mov	r1, #0
   17810:	ldr	r2, [r3]
   17814:	str	r1, [r0, #20]
   17818:	add	r3, r2, #1
   1781c:	str	r3, [r0]
   17820:	ldrb	r1, [r7]
   17824:	cmp	r1, #0
   17828:	bne	17868 <argp_error@@Base+0x388>
   1782c:	ldr	r1, [r9, #4]
   17830:	cmp	r1, #1
   17834:	beq	17a6c <argp_error@@Base+0x58c>
   17838:	ldr	r3, [sp, #80]	; 0x50
   1783c:	ldr	r2, [r9, #8]
   17840:	cmp	r3, #0
   17844:	strne	r6, [r3]
   17848:	cmp	r2, #0
   1784c:	movne	r3, #0
   17850:	ldreq	r3, [r9, #12]
   17854:	ldrne	r1, [r9, #12]
   17858:	strne	r1, [r2]
   1785c:	mov	r0, r3
   17860:	add	sp, sp, #44	; 0x2c
   17864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17868:	ldr	r3, [r9, #4]
   1786c:	cmp	r3, #0
   17870:	movne	r3, r0
   17874:	addne	r7, r7, #1
   17878:	strne	r7, [r3, #12]
   1787c:	bne	17838 <argp_error@@Base+0x358>
   17880:	ldr	r3, [sp, #92]	; 0x5c
   17884:	cmp	r3, #0
   17888:	bne	179b8 <argp_error@@Base+0x4d8>
   1788c:	ldr	r1, [sp, #88]	; 0x58
   17890:	ldr	r2, [r9, #12]
   17894:	mov	r3, #63	; 0x3f
   17898:	str	r2, [r1, #8]
   1789c:	mov	r0, r3
   178a0:	add	sp, sp, #44	; 0x2c
   178a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178a8:	ldr	r2, [r9, #4]
   178ac:	ldr	r3, [r8, #4]
   178b0:	cmp	r2, r3
   178b4:	bne	177d8 <argp_error@@Base+0x2f8>
   178b8:	ldr	r2, [r9, #8]
   178bc:	ldr	r3, [r8, #8]
   178c0:	cmp	r2, r3
   178c4:	bne	177d8 <argp_error@@Base+0x2f8>
   178c8:	ldr	r2, [r9, #12]
   178cc:	ldr	r3, [r8, #12]
   178d0:	cmp	r2, r3
   178d4:	bne	177d8 <argp_error@@Base+0x2f8>
   178d8:	b	177e0 <argp_error@@Base+0x300>
   178dc:	ldr	r3, [sp, #92]	; 0x5c
   178e0:	cmp	r3, #0
   178e4:	ldr	r3, [sp, #16]
   178e8:	beq	179a8 <argp_error@@Base+0x4c8>
   178ec:	cmp	r3, #0
   178f0:	beq	17bc4 <argp_error@@Base+0x6e4>
   178f4:	ldr	r3, [sp, #16]
   178f8:	ldr	r0, [r8, #16]!
   178fc:	mov	r2, #1
   17900:	cmp	r0, #0
   17904:	strb	r2, [r3, sl]
   17908:	add	sl, sl, #1
   1790c:	bne	177f0 <argp_error@@Base+0x310>
   17910:	ldr	r3, [sp, #16]
   17914:	cmp	r3, #0
   17918:	cmpeq	r4, #0
   1791c:	beq	177f8 <argp_error@@Base+0x318>
   17920:	ldr	r3, [sp, #92]	; 0x5c
   17924:	cmp	r3, #0
   17928:	beq	17aa8 <argp_error@@Base+0x5c8>
   1792c:	cmp	r4, #0
   17930:	bne	17b30 <argp_error@@Base+0x650>
   17934:	ldr	r5, [pc, #716]	; 17c08 <argp_error@@Base+0x728>
   17938:	ldr	r8, [sp, #16]
   1793c:	ldr	r7, [pc, #712]	; 17c0c <argp_error@@Base+0x72c>
   17940:	ldr	r0, [r5]
   17944:	bl	11590 <flockfile@plt>
   17948:	ldr	r3, [sp, #20]
   1794c:	ldr	r0, [r5]
   17950:	ldr	r1, [pc, #696]	; 17c10 <argp_error@@Base+0x730>
   17954:	ldr	r2, [r3]
   17958:	ldr	r3, [sp, #88]	; 0x58
   1795c:	add	r6, r8, r6
   17960:	ldr	r3, [r3, #20]
   17964:	str	r3, [sp]
   17968:	ldr	r3, [sp, #96]	; 0x60
   1796c:	bl	1147c <fprintf@plt>
   17970:	ldr	r9, [sp, #12]
   17974:	b	17984 <argp_error@@Base+0x4a4>
   17978:	cmp	r8, r6
   1797c:	add	r4, r4, #1
   17980:	beq	17a94 <argp_error@@Base+0x5b4>
   17984:	ldrb	r3, [r8], #1
   17988:	cmp	r3, #0
   1798c:	beq	17978 <argp_error@@Base+0x498>
   17990:	ldr	r3, [r9, r4, lsl #4]
   17994:	ldr	r2, [sp, #96]	; 0x60
   17998:	mov	r1, r7
   1799c:	ldr	r0, [r5]
   179a0:	bl	1147c <fprintf@plt>
   179a4:	b	17978 <argp_error@@Base+0x498>
   179a8:	cmp	r3, #0
   179ac:	mov	r4, #1
   179b0:	bne	178f4 <argp_error@@Base+0x414>
   179b4:	b	177e0 <argp_error@@Base+0x300>
   179b8:	ldr	r3, [sp, #20]
   179bc:	ldr	r1, [pc, #580]	; 17c08 <argp_error@@Base+0x728>
   179c0:	ldr	r2, [r3]
   179c4:	ldr	r3, [r9]
   179c8:	ldr	r0, [r1]
   179cc:	str	r3, [sp]
   179d0:	ldr	r1, [pc, #572]	; 17c14 <argp_error@@Base+0x734>
   179d4:	ldr	r3, [sp, #96]	; 0x60
   179d8:	bl	1147c <fprintf@plt>
   179dc:	ldr	r1, [sp, #88]	; 0x58
   179e0:	ldr	r2, [r9, #12]
   179e4:	mov	r3, #63	; 0x3f
   179e8:	str	r2, [r1, #8]
   179ec:	b	1789c <argp_error@@Base+0x3bc>
   179f0:	ldr	r3, [sp, #84]	; 0x54
   179f4:	cmp	r3, #0
   179f8:	bne	17b84 <argp_error@@Base+0x6a4>
   179fc:	ldr	r3, [sp, #92]	; 0x5c
   17a00:	cmp	r3, #0
   17a04:	beq	17a30 <argp_error@@Base+0x550>
   17a08:	ldr	r3, [sp, #20]
   17a0c:	ldr	r1, [pc, #500]	; 17c08 <argp_error@@Base+0x728>
   17a10:	ldr	r2, [r3]
   17a14:	ldr	r3, [sp, #88]	; 0x58
   17a18:	ldr	r0, [r1]
   17a1c:	ldr	r1, [pc, #500]	; 17c18 <argp_error@@Base+0x738>
   17a20:	ldr	r3, [r3, #20]
   17a24:	str	r3, [sp]
   17a28:	ldr	r3, [sp, #96]	; 0x60
   17a2c:	bl	1147c <fprintf@plt>
   17a30:	ldr	r3, [sp, #88]	; 0x58
   17a34:	ldr	r1, [sp, #88]	; 0x58
   17a38:	mov	r2, #0
   17a3c:	ldr	r3, [r3]
   17a40:	str	r2, [r1, #20]
   17a44:	add	r3, r3, #1
   17a48:	str	r3, [r1]
   17a4c:	mov	r3, #63	; 0x3f
   17a50:	mov	r0, r3
   17a54:	str	r2, [r1, #8]
   17a58:	add	sp, sp, #44	; 0x2c
   17a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a60:	str	sl, [sp, #32]
   17a64:	mov	r9, r8
   17a68:	b	177e0 <argp_error@@Base+0x300>
   17a6c:	ldr	r1, [sp, #24]
   17a70:	cmp	r3, r1
   17a74:	bge	17b00 <argp_error@@Base+0x620>
   17a78:	ldr	r1, [sp, #20]
   17a7c:	add	r2, r2, #2
   17a80:	ldr	r3, [r1, r3, lsl #2]
   17a84:	ldr	r1, [sp, #88]	; 0x58
   17a88:	str	r3, [r1, #12]
   17a8c:	str	r2, [r1]
   17a90:	b	17838 <argp_error@@Base+0x358>
   17a94:	ldr	r1, [r5]
   17a98:	mov	r0, #10
   17a9c:	bl	11554 <fputc@plt>
   17aa0:	ldr	r0, [r5]
   17aa4:	bl	113a4 <funlockfile@plt>
   17aa8:	ldr	r3, [sp, #36]	; 0x24
   17aac:	cmp	r3, #0
   17ab0:	beq	17abc <argp_error@@Base+0x5dc>
   17ab4:	ldr	r0, [sp, #16]
   17ab8:	bl	136c0 <argp_parse@@Base+0xe98>
   17abc:	ldr	r3, [sp, #88]	; 0x58
   17ac0:	ldr	r4, [r3, #20]
   17ac4:	mov	r0, r4
   17ac8:	bl	11458 <strlen@plt>
   17acc:	ldr	r3, [sp, #88]	; 0x58
   17ad0:	ldr	r1, [sp, #88]	; 0x58
   17ad4:	mov	r2, #0
   17ad8:	ldr	r3, [r3]
   17adc:	str	r2, [r1, #8]
   17ae0:	add	r3, r3, #1
   17ae4:	str	r3, [r1]
   17ae8:	mov	r3, #63	; 0x3f
   17aec:	add	r0, r4, r0
   17af0:	str	r0, [r1, #20]
   17af4:	mov	r0, r3
   17af8:	add	sp, sp, #44	; 0x2c
   17afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b00:	ldr	r3, [sp, #92]	; 0x5c
   17b04:	cmp	r3, #0
   17b08:	bne	17b5c <argp_error@@Base+0x67c>
   17b0c:	ldr	r2, [sp, #88]	; 0x58
   17b10:	ldr	r3, [r9, #12]
   17b14:	str	r3, [r2, #8]
   17b18:	ldr	r3, [sp, #28]
   17b1c:	ldrb	r3, [r3]
   17b20:	cmp	r3, #58	; 0x3a
   17b24:	movne	r3, #63	; 0x3f
   17b28:	moveq	r3, #58	; 0x3a
   17b2c:	b	1785c <argp_error@@Base+0x37c>
   17b30:	ldr	r3, [sp, #20]
   17b34:	ldr	r1, [pc, #204]	; 17c08 <argp_error@@Base+0x728>
   17b38:	ldr	r2, [r3]
   17b3c:	ldr	r3, [sp, #88]	; 0x58
   17b40:	ldr	r0, [r1]
   17b44:	ldr	r1, [pc, #208]	; 17c1c <argp_error@@Base+0x73c>
   17b48:	ldr	r3, [r3, #20]
   17b4c:	str	r3, [sp]
   17b50:	ldr	r3, [sp, #96]	; 0x60
   17b54:	bl	1147c <fprintf@plt>
   17b58:	b	17aa8 <argp_error@@Base+0x5c8>
   17b5c:	ldr	r3, [sp, #20]
   17b60:	ldr	r1, [pc, #160]	; 17c08 <argp_error@@Base+0x728>
   17b64:	ldr	r2, [r3]
   17b68:	ldr	r3, [r9]
   17b6c:	ldr	r0, [r1]
   17b70:	str	r3, [sp]
   17b74:	ldr	r1, [pc, #164]	; 17c20 <argp_error@@Base+0x740>
   17b78:	ldr	r3, [sp, #96]	; 0x60
   17b7c:	bl	1147c <fprintf@plt>
   17b80:	b	17b0c <argp_error@@Base+0x62c>
   17b84:	ldr	r3, [sp, #88]	; 0x58
   17b88:	ldr	r2, [sp, #20]
   17b8c:	ldr	r3, [r3]
   17b90:	ldr	r3, [r2, r3, lsl #2]
   17b94:	ldrb	r3, [r3, #1]
   17b98:	cmp	r3, #45	; 0x2d
   17b9c:	beq	179fc <argp_error@@Base+0x51c>
   17ba0:	ldr	r3, [sp, #88]	; 0x58
   17ba4:	ldr	r0, [sp, #28]
   17ba8:	ldr	r3, [r3, #20]
   17bac:	ldrb	r1, [r3]
   17bb0:	bl	11464 <strchr@plt>
   17bb4:	cmp	r0, #0
   17bb8:	beq	179fc <argp_error@@Base+0x51c>
   17bbc:	mvn	r3, #0
   17bc0:	b	1785c <argp_error@@Base+0x37c>
   17bc4:	mov	r0, r6
   17bc8:	bl	1425c <argp_parse@@Base+0x1a34>
   17bcc:	subs	r3, r0, #0
   17bd0:	str	r3, [sp, #16]
   17bd4:	beq	17c00 <argp_error@@Base+0x720>
   17bd8:	mov	r2, r6
   17bdc:	mov	r1, #0
   17be0:	bl	114ac <memset@plt>
   17be4:	mov	r3, #1
   17be8:	str	r3, [sp, #36]	; 0x24
   17bec:	ldr	r2, [sp, #32]
   17bf0:	ldr	r3, [sp, #16]
   17bf4:	mov	r1, #1
   17bf8:	strb	r1, [r3, r2]
   17bfc:	b	178f4 <argp_error@@Base+0x414>
   17c00:	mov	r4, #1
   17c04:	b	177e0 <argp_error@@Base+0x300>
   17c08:	andeq	sl, r2, r0, lsl r5
   17c0c:	andeq	r9, r1, r8, ror #23
   17c10:			; <UNDEFINED> instruction: 0x00019bb8
   17c14:	andeq	r9, r1, r0, lsl ip
   17c18:	strdeq	r9, [r1], -r0
   17c1c:	muleq	r1, r8, fp
   17c20:	andeq	r9, r1, r0, asr #24
   17c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c28:	sub	sp, sp, #36	; 0x24
   17c2c:	subs	r6, r0, #0
   17c30:	ldr	r4, [sp, #80]	; 0x50
   17c34:	ldr	r8, [r4, #4]
   17c38:	ble	17e14 <argp_error@@Base+0x934>
   17c3c:	mov	sl, r3
   17c40:	ldr	r3, [r4]
   17c44:	mov	r7, r2
   17c48:	mov	r2, #0
   17c4c:	cmp	r3, r2
   17c50:	mov	r9, r1
   17c54:	str	r2, [r4, #12]
   17c58:	beq	17e9c <argp_error@@Base+0x9bc>
   17c5c:	ldr	r2, [r4, #16]
   17c60:	cmp	r2, #0
   17c64:	bne	17e20 <argp_error@@Base+0x940>
   17c68:	mov	r5, #0
   17c6c:	str	r3, [r4, #32]
   17c70:	str	r3, [r4, #28]
   17c74:	str	r5, [r4, #20]
   17c78:	ldrb	r3, [r7]
   17c7c:	cmp	r3, #45	; 0x2d
   17c80:	moveq	r3, #2
   17c84:	addeq	r7, r7, #1
   17c88:	streq	r3, [r4, #24]
   17c8c:	beq	17cb4 <argp_error@@Base+0x7d4>
   17c90:	cmp	r3, #43	; 0x2b
   17c94:	streq	r5, [r4, #24]
   17c98:	addeq	r7, r7, #1
   17c9c:	beq	17cb4 <argp_error@@Base+0x7d4>
   17ca0:	ldr	r3, [sp, #84]	; 0x54
   17ca4:	cmp	r3, #0
   17ca8:	beq	17f3c <argp_error@@Base+0xa5c>
   17cac:	mov	r3, #0
   17cb0:	str	r3, [r4, #24]
   17cb4:	mov	r3, #1
   17cb8:	str	r3, [r4, #16]
   17cbc:	ldrb	r3, [r7]
   17cc0:	cmp	r3, #58	; 0x3a
   17cc4:	moveq	r8, #0
   17cc8:	cmp	r5, #0
   17ccc:	beq	17d80 <argp_error@@Base+0x8a0>
   17cd0:	ldrb	r3, [r5]
   17cd4:	cmp	r3, #0
   17cd8:	beq	17d80 <argp_error@@Base+0x8a0>
   17cdc:	add	r3, r5, #1
   17ce0:	str	r3, [r4, #20]
   17ce4:	ldrb	fp, [r5]
   17ce8:	mov	r0, r7
   17cec:	str	r3, [sp, #28]
   17cf0:	mov	r1, fp
   17cf4:	bl	11464 <strchr@plt>
   17cf8:	ldrb	r1, [r5, #1]
   17cfc:	ldr	r3, [sp, #28]
   17d00:	cmp	r1, #0
   17d04:	ldreq	r1, [r4]
   17d08:	addeq	r1, r1, #1
   17d0c:	streq	r1, [r4]
   17d10:	sub	r1, fp, #58	; 0x3a
   17d14:	mov	r2, r0
   17d18:	cmp	r2, #0
   17d1c:	cmpne	r1, #1
   17d20:	mov	r0, fp
   17d24:	bls	17e6c <argp_error@@Base+0x98c>
   17d28:	ldrb	r1, [r2]
   17d2c:	cmp	r1, #87	; 0x57
   17d30:	ldrb	r1, [r2, #1]
   17d34:	beq	17fc0 <argp_error@@Base+0xae0>
   17d38:	cmp	r1, #58	; 0x3a
   17d3c:	bne	17e64 <argp_error@@Base+0x984>
   17d40:	ldrb	r2, [r2, #2]
   17d44:	cmp	r2, #58	; 0x3a
   17d48:	ldrb	r2, [r5, #1]
   17d4c:	beq	18048 <argp_error@@Base+0xb68>
   17d50:	cmp	r2, #0
   17d54:	bne	18054 <argp_error@@Base+0xb74>
   17d58:	ldr	r3, [r4]
   17d5c:	cmp	r6, r3
   17d60:	beq	180f4 <argp_error@@Base+0xc14>
   17d64:	ldr	r2, [r9, r3, lsl #2]
   17d68:	add	r3, r3, #1
   17d6c:	str	r2, [r4, #12]
   17d70:	str	r3, [r4]
   17d74:	mov	r3, #0
   17d78:	str	r3, [r4, #20]
   17d7c:	b	17e64 <argp_error@@Base+0x984>
   17d80:	ldr	fp, [r4]
   17d84:	ldr	r3, [r4, #32]
   17d88:	cmp	r3, fp
   17d8c:	ldr	r3, [r4, #28]
   17d90:	strgt	fp, [r4, #32]
   17d94:	cmp	fp, r3
   17d98:	ldr	r3, [r4, #24]
   17d9c:	strlt	fp, [r4, #28]
   17da0:	cmp	r3, #1
   17da4:	beq	17eac <argp_error@@Base+0x9cc>
   17da8:	cmp	r6, fp
   17dac:	beq	17f24 <argp_error@@Base+0xa44>
   17db0:	ldr	r3, [pc, #944]	; 18168 <argp_error@@Base+0xc88>
   17db4:	ldr	r5, [r9, fp, lsl #2]
   17db8:	mov	r1, r3
   17dbc:	mov	r0, r5
   17dc0:	str	r3, [sp, #28]
   17dc4:	bl	11290 <strcmp@plt>
   17dc8:	ldr	r3, [sp, #28]
   17dcc:	cmp	r0, #0
   17dd0:	bne	17e3c <argp_error@@Base+0x95c>
   17dd4:	ldr	r3, [r4, #28]
   17dd8:	ldr	r2, [r4, #32]
   17ddc:	add	fp, fp, #1
   17de0:	cmp	r3, r2
   17de4:	str	fp, [r4]
   17de8:	beq	17fb4 <argp_error@@Base+0xad4>
   17dec:	cmp	fp, r2
   17df0:	beq	17e04 <argp_error@@Base+0x924>
   17df4:	mov	r0, r9
   17df8:	mov	r1, r4
   17dfc:	bl	17624 <argp_error@@Base+0x144>
   17e00:	ldr	r3, [r4, #28]
   17e04:	cmp	r3, r6
   17e08:	str	r6, [r4]
   17e0c:	str	r6, [r4, #32]
   17e10:	strne	r3, [r4]
   17e14:	mvn	r0, #0
   17e18:	add	sp, sp, #36	; 0x24
   17e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e20:	ldrb	r3, [r7]
   17e24:	ldr	r5, [r4, #20]
   17e28:	sub	r2, r3, #43	; 0x2b
   17e2c:	tst	r2, #253	; 0xfd
   17e30:	ldrbeq	r3, [r7, #1]
   17e34:	addeq	r7, r7, #1
   17e38:	b	17cc0 <argp_error@@Base+0x7e0>
   17e3c:	ldrb	r2, [r5]
   17e40:	cmp	r2, #45	; 0x2d
   17e44:	beq	17f68 <argp_error@@Base+0xa88>
   17e48:	ldr	r3, [r4, #24]
   17e4c:	cmp	r3, #0
   17e50:	beq	17e14 <argp_error@@Base+0x934>
   17e54:	mov	r0, #1
   17e58:	add	fp, fp, #1
   17e5c:	str	fp, [r4]
   17e60:	str	r5, [r4, #12]
   17e64:	add	sp, sp, #36	; 0x24
   17e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e6c:	cmp	r8, #0
   17e70:	beq	17e8c <argp_error@@Base+0x9ac>
   17e74:	ldr	r1, [pc, #752]	; 1816c <argp_error@@Base+0xc8c>
   17e78:	ldr	r2, [r9]
   17e7c:	mov	r3, fp
   17e80:	ldr	r0, [r1]
   17e84:	ldr	r1, [pc, #740]	; 18170 <argp_error@@Base+0xc90>
   17e88:	bl	1147c <fprintf@plt>
   17e8c:	mov	r0, #63	; 0x3f
   17e90:	str	fp, [r4, #8]
   17e94:	add	sp, sp, #36	; 0x24
   17e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e9c:	mov	r2, #1
   17ea0:	mov	r3, r2
   17ea4:	str	r2, [r4]
   17ea8:	b	17c68 <argp_error@@Base+0x788>
   17eac:	ldr	r2, [r4, #28]
   17eb0:	ldr	r3, [r4, #32]
   17eb4:	cmp	r2, r3
   17eb8:	beq	18038 <argp_error@@Base+0xb58>
   17ebc:	cmp	fp, r3
   17ec0:	beq	17ed4 <argp_error@@Base+0x9f4>
   17ec4:	mov	r1, r4
   17ec8:	mov	r0, r9
   17ecc:	bl	17624 <argp_error@@Base+0x144>
   17ed0:	ldr	r3, [r4]
   17ed4:	cmp	r6, r3
   17ed8:	movle	fp, r3
   17edc:	ble	17f18 <argp_error@@Base+0xa38>
   17ee0:	add	r1, r9, r3, lsl #2
   17ee4:	b	17ef8 <argp_error@@Base+0xa18>
   17ee8:	add	r3, r3, #1
   17eec:	cmp	r6, r3
   17ef0:	str	r3, [r4]
   17ef4:	beq	17f5c <argp_error@@Base+0xa7c>
   17ef8:	ldr	r2, [r1], #4
   17efc:	ldrb	r0, [r2]
   17f00:	cmp	r0, #45	; 0x2d
   17f04:	bne	17ee8 <argp_error@@Base+0xa08>
   17f08:	ldrb	r2, [r2, #1]
   17f0c:	cmp	r2, #0
   17f10:	beq	17ee8 <argp_error@@Base+0xa08>
   17f14:	ldr	fp, [r4]
   17f18:	str	r3, [r4, #32]
   17f1c:	cmp	r6, fp
   17f20:	bne	17db0 <argp_error@@Base+0x8d0>
   17f24:	ldr	r3, [r4, #28]
   17f28:	ldr	r6, [r4, #32]
   17f2c:	mvn	r0, #0
   17f30:	cmp	r3, r6
   17f34:	strne	r3, [r4]
   17f38:	b	17e18 <argp_error@@Base+0x938>
   17f3c:	ldr	r0, [pc, #560]	; 18174 <argp_error@@Base+0xc94>
   17f40:	bl	113d4 <getenv@plt>
   17f44:	ldr	r5, [r4, #20]
   17f48:	cmp	r0, #0
   17f4c:	bne	17cac <argp_error@@Base+0x7cc>
   17f50:	mov	r3, #1
   17f54:	str	r3, [r4, #24]
   17f58:	b	17cb4 <argp_error@@Base+0x7d4>
   17f5c:	mov	fp, r6
   17f60:	str	r3, [r4, #32]
   17f64:	b	17f1c <argp_error@@Base+0xa3c>
   17f68:	ldrb	r1, [r5, #1]
   17f6c:	cmp	r1, #0
   17f70:	beq	17e48 <argp_error@@Base+0x968>
   17f74:	cmp	sl, #0
   17f78:	beq	17fac <argp_error@@Base+0xacc>
   17f7c:	cmp	r1, #45	; 0x2d
   17f80:	beq	180b8 <argp_error@@Base+0xbd8>
   17f84:	ldr	r3, [sp, #76]	; 0x4c
   17f88:	cmp	r3, #0
   17f8c:	beq	17fac <argp_error@@Base+0xacc>
   17f90:	ldrb	r3, [r5, #2]
   17f94:	cmp	r3, #0
   17f98:	bne	18068 <argp_error@@Base+0xb88>
   17f9c:	mov	r0, r7
   17fa0:	bl	11464 <strchr@plt>
   17fa4:	cmp	r0, #0
   17fa8:	beq	18068 <argp_error@@Base+0xb88>
   17fac:	add	r5, r5, #1
   17fb0:	b	17cdc <argp_error@@Base+0x7fc>
   17fb4:	mov	r3, fp
   17fb8:	str	fp, [r4, #28]
   17fbc:	b	17e04 <argp_error@@Base+0x924>
   17fc0:	cmp	sl, #0
   17fc4:	sub	ip, r1, #59	; 0x3b
   17fc8:	clz	ip, ip
   17fcc:	lsr	ip, ip, #5
   17fd0:	moveq	ip, #0
   17fd4:	cmp	ip, #0
   17fd8:	beq	17d38 <argp_error@@Base+0x858>
   17fdc:	ldrb	r2, [r5, #1]
   17fe0:	cmp	r2, #0
   17fe4:	bne	17ff8 <argp_error@@Base+0xb18>
   17fe8:	ldr	r3, [r4]
   17fec:	cmp	r6, r3
   17ff0:	ldrne	r3, [r9, r3, lsl #2]
   17ff4:	beq	18114 <argp_error@@Base+0xc34>
   17ff8:	str	r3, [r4, #20]
   17ffc:	ldr	lr, [pc, #372]	; 18178 <argp_error@@Base+0xc98>
   18000:	ldr	r3, [sp, #72]	; 0x48
   18004:	mov	ip, #0
   18008:	str	r3, [sp]
   1800c:	str	r8, [sp, #12]
   18010:	str	r4, [sp, #8]
   18014:	str	lr, [sp, #16]
   18018:	mov	r3, sl
   1801c:	str	ip, [r4, #12]
   18020:	mov	r2, r7
   18024:	mov	r1, r9
   18028:	mov	r0, r6
   1802c:	str	ip, [sp, #4]
   18030:	bl	176e0 <argp_error@@Base+0x200>
   18034:	b	17e64 <argp_error@@Base+0x984>
   18038:	cmp	fp, r3
   1803c:	movne	r3, fp
   18040:	strne	fp, [r4, #28]
   18044:	b	17ed4 <argp_error@@Base+0x9f4>
   18048:	cmp	r2, #0
   1804c:	streq	r2, [r4, #12]
   18050:	beq	17d74 <argp_error@@Base+0x894>
   18054:	ldr	r2, [r4]
   18058:	str	r3, [r4, #12]
   1805c:	add	r3, r2, #1
   18060:	str	r3, [r4]
   18064:	b	17d74 <argp_error@@Base+0x894>
   18068:	ldr	r2, [sp, #76]	; 0x4c
   1806c:	add	r5, r5, #1
   18070:	str	r5, [r4, #20]
   18074:	ldr	r3, [pc, #256]	; 1817c <argp_error@@Base+0xc9c>
   18078:	str	r2, [sp, #4]
   1807c:	ldr	r2, [sp, #72]	; 0x48
   18080:	str	r3, [sp, #16]
   18084:	str	r2, [sp]
   18088:	str	r8, [sp, #12]
   1808c:	str	r4, [sp, #8]
   18090:	mov	r3, sl
   18094:	mov	r2, r7
   18098:	mov	r1, r9
   1809c:	mov	r0, r6
   180a0:	bl	176e0 <argp_error@@Base+0x200>
   180a4:	cmn	r0, #1
   180a8:	bne	17e64 <argp_error@@Base+0x984>
   180ac:	ldr	r3, [r4]
   180b0:	ldr	r5, [r9, r3, lsl #2]
   180b4:	b	17fac <argp_error@@Base+0xacc>
   180b8:	add	r5, r5, #2
   180bc:	str	r5, [r4, #20]
   180c0:	str	r3, [sp, #16]
   180c4:	ldr	r3, [sp, #76]	; 0x4c
   180c8:	str	r8, [sp, #12]
   180cc:	str	r3, [sp, #4]
   180d0:	ldr	r3, [sp, #72]	; 0x48
   180d4:	str	r4, [sp, #8]
   180d8:	str	r3, [sp]
   180dc:	mov	r2, r7
   180e0:	mov	r3, sl
   180e4:	mov	r1, r9
   180e8:	mov	r0, r6
   180ec:	bl	176e0 <argp_error@@Base+0x200>
   180f0:	b	17e64 <argp_error@@Base+0x984>
   180f4:	cmp	r8, #0
   180f8:	bne	1814c <argp_error@@Base+0xc6c>
   180fc:	str	fp, [r4, #8]
   18100:	ldrb	r0, [r7]
   18104:	cmp	r0, #58	; 0x3a
   18108:	movne	r0, #63	; 0x3f
   1810c:	moveq	r0, #58	; 0x3a
   18110:	b	17d74 <argp_error@@Base+0x894>
   18114:	cmp	r8, #0
   18118:	beq	18134 <argp_error@@Base+0xc54>
   1811c:	ldr	r1, [pc, #72]	; 1816c <argp_error@@Base+0xc8c>
   18120:	ldr	r2, [r9]
   18124:	mov	r3, fp
   18128:	ldr	r0, [r1]
   1812c:	ldr	r1, [pc, #76]	; 18180 <argp_error@@Base+0xca0>
   18130:	bl	1147c <fprintf@plt>
   18134:	str	fp, [r4, #8]
   18138:	ldrb	r0, [r7]
   1813c:	cmp	r0, #58	; 0x3a
   18140:	movne	r0, #63	; 0x3f
   18144:	moveq	r0, #58	; 0x3a
   18148:	b	17e64 <argp_error@@Base+0x984>
   1814c:	ldr	r1, [pc, #24]	; 1816c <argp_error@@Base+0xc8c>
   18150:	ldr	r2, [r9]
   18154:	mov	r3, fp
   18158:	ldr	r0, [r1]
   1815c:	ldr	r1, [pc, #28]	; 18180 <argp_error@@Base+0xca0>
   18160:	bl	1147c <fprintf@plt>
   18164:	b	180fc <argp_error@@Base+0xc1c>
   18168:	andeq	r9, r1, r8, lsr r3
   1816c:	andeq	sl, r2, r0, lsl r5
   18170:	andeq	r9, r1, ip, ror ip
   18174:	andeq	r9, r1, r8, ror #24
   18178:	andeq	r9, r1, r4, asr #25
   1817c:	andeq	r9, r1, r8, ror ip
   18180:	muleq	r1, r8, ip
   18184:	push	{r4, r5, r6, lr}
   18188:	sub	sp, sp, #16
   1818c:	ldr	r5, [pc, #84]	; 181e8 <argp_error@@Base+0xd08>
   18190:	ldr	ip, [sp, #32]
   18194:	ldr	r4, [pc, #80]	; 181ec <argp_error@@Base+0xd0c>
   18198:	str	ip, [sp]
   1819c:	ldr	ip, [sp, #40]	; 0x28
   181a0:	ldr	r6, [sp, #36]	; 0x24
   181a4:	ldr	lr, [r5]
   181a8:	str	ip, [sp, #12]
   181ac:	ldr	ip, [r5, #4]
   181b0:	str	r4, [sp, #8]
   181b4:	str	r6, [sp, #4]
   181b8:	str	ip, [r4, #4]
   181bc:	str	lr, [r4]
   181c0:	bl	17c24 <argp_error@@Base+0x744>
   181c4:	ldr	r3, [pc, #36]	; 181f0 <argp_error@@Base+0xd10>
   181c8:	ldr	ip, [r4]
   181cc:	ldr	r1, [r4, #8]
   181d0:	ldr	r2, [r4, #12]
   181d4:	str	ip, [r5]
   181d8:	str	r1, [r5, #8]
   181dc:	str	r2, [r3]
   181e0:	add	sp, sp, #16
   181e4:	pop	{r4, r5, r6, pc}
   181e8:	andeq	sl, r2, ip, ror #9
   181ec:	andeq	sl, r2, r4, lsr r5
   181f0:	andeq	sl, r2, r0, ror #10
   181f4:	push	{lr}		; (str lr, [sp, #-4]!)
   181f8:	mov	r3, #0
   181fc:	sub	sp, sp, #20
   18200:	mov	ip, #1
   18204:	str	r3, [sp]
   18208:	stmib	sp, {r3, ip}
   1820c:	bl	18184 <argp_error@@Base+0xca4>
   18210:	add	sp, sp, #20
   18214:	pop	{pc}		; (ldr pc, [sp], #4)
   18218:	push	{r4, r5, r6, lr}
   1821c:	subs	r4, r2, #0
   18220:	mov	r6, r0
   18224:	mov	r5, r1
   18228:	beq	18254 <argp_error@@Base+0xd74>
   1822c:	mov	r1, r4
   18230:	mvn	r0, #0
   18234:	bl	18a2c <argp_error@@Base+0x154c>
   18238:	cmp	r0, r5
   1823c:	bcs	18254 <argp_error@@Base+0xd74>
   18240:	bl	11494 <__errno_location@plt>
   18244:	mov	r3, #12
   18248:	str	r3, [r0]
   1824c:	mov	r0, #0
   18250:	pop	{r4, r5, r6, pc}
   18254:	mul	r1, r5, r4
   18258:	mov	r0, r6
   1825c:	pop	{r4, r5, r6, lr}
   18260:	b	14288 <argp_parse@@Base+0x1a60>
   18264:	push	{r4, r5, r6, r7, r8, lr}
   18268:	mov	r8, r0
   1826c:	mov	r0, #36	; 0x24
   18270:	mov	r7, r1
   18274:	mov	r6, r2
   18278:	mov	r5, r3
   1827c:	bl	1425c <argp_parse@@Base+0x1a34>
   18280:	subs	r4, r0, #0
   18284:	beq	182c8 <argp_error@@Base+0xde8>
   18288:	mov	r0, #0
   1828c:	str	r5, [r4, #12]
   18290:	str	r0, [r4, #20]
   18294:	str	r0, [r4, #16]
   18298:	str	r8, [r4]
   1829c:	str	r7, [r4, #4]
   182a0:	str	r6, [r4, #8]
   182a4:	mov	r0, #200	; 0xc8
   182a8:	bl	1425c <argp_parse@@Base+0x1a34>
   182ac:	cmp	r0, #0
   182b0:	addne	r3, r0, #200	; 0xc8
   182b4:	mov	r5, r0
   182b8:	str	r0, [r4, #24]
   182bc:	strne	r0, [r4, #28]
   182c0:	strne	r3, [r4, #32]
   182c4:	beq	182d0 <argp_error@@Base+0xdf0>
   182c8:	mov	r0, r4
   182cc:	pop	{r4, r5, r6, r7, r8, pc}
   182d0:	mov	r0, r4
   182d4:	bl	136c0 <argp_parse@@Base+0xe98>
   182d8:	mov	r4, r5
   182dc:	b	182c8 <argp_error@@Base+0xde8>
   182e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182e4:	mov	r7, r0
   182e8:	ldr	r6, [r0, #24]
   182ec:	ldr	r3, [r0, #16]
   182f0:	ldr	fp, [r0, #28]
   182f4:	sub	sp, sp, #12
   182f8:	add	r6, r6, r3
   182fc:	mov	r9, #32
   18300:	cmp	r6, fp
   18304:	bcs	183e0 <argp_error@@Base+0xf00>
   18308:	ldr	r8, [r7, #20]
   1830c:	cmp	r8, #0
   18310:	bne	18380 <argp_error@@Base+0xea0>
   18314:	ldr	r4, [r7, #4]
   18318:	cmp	r4, #0
   1831c:	beq	18624 <argp_error@@Base+0x1144>
   18320:	ldr	r2, [r7, #32]
   18324:	add	r3, fp, r4
   18328:	cmp	r2, r3
   1832c:	bls	18340 <argp_error@@Base+0xe60>
   18330:	b	1876c <argp_error@@Base+0x128c>
   18334:	add	r8, r8, #1
   18338:	cmp	r4, r8
   1833c:	beq	18374 <argp_error@@Base+0xe94>
   18340:	ldr	r0, [r7]
   18344:	ldr	r3, [r0, #20]
   18348:	ldr	r2, [r0, #24]
   1834c:	add	r1, r3, #1
   18350:	cmp	r3, r2
   18354:	strcc	r1, [r0, #20]
   18358:	strbcc	r9, [r3]
   1835c:	bcc	18334 <argp_error@@Base+0xe54>
   18360:	mov	r1, r9
   18364:	add	r8, r8, #1
   18368:	bl	114f4 <__overflow@plt>
   1836c:	cmp	r4, r8
   18370:	bne	18340 <argp_error@@Base+0xe60>
   18374:	ldr	fp, [r7, #28]
   18378:	mov	r8, r4
   1837c:	str	r4, [r7, #20]
   18380:	sub	sl, fp, r6
   18384:	mov	r2, sl
   18388:	mov	r1, #10
   1838c:	mov	r0, r6
   18390:	bl	114d0 <memchr@plt>
   18394:	cmp	r8, #0
   18398:	movlt	r8, #0
   1839c:	movlt	r3, r8
   183a0:	str	r6, [sp]
   183a4:	mov	r4, r0
   183a8:	strlt	r3, [r7, #20]
   183ac:	cmp	r4, #0
   183b0:	beq	18648 <argp_error@@Base+0x1168>
   183b4:	sub	r2, r4, r6
   183b8:	ldr	r3, [r7, #8]
   183bc:	add	r2, r2, r8
   183c0:	cmp	r2, r3
   183c4:	bge	183f4 <argp_error@@Base+0xf14>
   183c8:	ldr	fp, [r7, #28]
   183cc:	add	r6, r4, #1
   183d0:	mov	r3, #0
   183d4:	cmp	r6, fp
   183d8:	str	r3, [r7, #20]
   183dc:	bcc	18308 <argp_error@@Base+0xe28>
   183e0:	ldr	r3, [r7, #24]
   183e4:	sub	r3, fp, r3
   183e8:	str	r3, [r7, #16]
   183ec:	add	sp, sp, #12
   183f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183f4:	ldr	r2, [r7, #12]
   183f8:	sub	r5, r3, #1
   183fc:	cmp	r2, #0
   18400:	str	r2, [sp, #4]
   18404:	blt	18700 <argp_error@@Base+0x1220>
   18408:	add	r5, r5, #1
   1840c:	sub	r8, r5, r8
   18410:	adds	r8, r6, r8
   18414:	bcs	18680 <argp_error@@Base+0x11a0>
   18418:	bl	11434 <__ctype_b_loc@plt>
   1841c:	mov	r3, r8
   18420:	ldr	r0, [r0]
   18424:	b	18430 <argp_error@@Base+0xf50>
   18428:	cmp	r3, r6
   1842c:	bcc	18684 <argp_error@@Base+0x11a4>
   18430:	mov	r1, r3
   18434:	sub	r3, r3, #1
   18438:	ldrb	r2, [r1]
   1843c:	mov	r5, r3
   18440:	lsl	r2, r2, #1
   18444:	ldrh	r2, [r0, r2]
   18448:	tst	r2, #1
   1844c:	beq	18428 <argp_error@@Base+0xf48>
   18450:	add	r5, r1, #1
   18454:	cmp	r5, r6
   18458:	bls	18698 <argp_error@@Base+0x11b8>
   1845c:	cmp	r1, r6
   18460:	bcc	18690 <argp_error@@Base+0x11b0>
   18464:	mov	r1, r3
   18468:	sub	r8, r6, #1
   1846c:	b	18488 <argp_error@@Base+0xfa8>
   18470:	ldrb	r3, [r1]
   18474:	sub	r1, r1, #1
   18478:	lsl	r3, r3, #1
   1847c:	ldrh	r3, [r0, r3]
   18480:	tst	r3, #1
   18484:	beq	187b0 <argp_error@@Base+0x12d0>
   18488:	cmp	r8, r1
   1848c:	mov	r2, r1
   18490:	bne	18470 <argp_error@@Base+0xf90>
   18494:	add	r8, r8, #1
   18498:	add	r3, sl, #1
   1849c:	add	r3, r6, r3
   184a0:	cmp	r5, r3
   184a4:	beq	1858c <argp_error@@Base+0x10ac>
   184a8:	add	r3, r8, #1
   184ac:	ldr	r1, [sp, #4]
   184b0:	sub	r2, r5, r3
   184b4:	cmp	r2, r1
   184b8:	bge	185a8 <argp_error@@Base+0x10c8>
   184bc:	cmp	r5, fp
   184c0:	bcs	185a0 <argp_error@@Base+0x10c0>
   184c4:	ldr	r3, [r7, #32]
   184c8:	ldr	r2, [sp, #4]
   184cc:	sub	r3, r3, fp
   184d0:	add	r0, r2, #1
   184d4:	cmp	r3, r0
   184d8:	bgt	187e0 <argp_error@@Base+0x1300>
   184dc:	ldr	r0, [r7, #24]
   184e0:	cmp	r8, r0
   184e4:	bls	184f8 <argp_error@@Base+0x1018>
   184e8:	sub	r2, r8, r0
   184ec:	ldr	r3, [r7]
   184f0:	mov	r1, #1
   184f4:	bl	11320 <fwrite_unlocked@plt>
   184f8:	ldr	r0, [r7]
   184fc:	ldr	r2, [r0, #24]
   18500:	ldr	r3, [r0, #20]
   18504:	cmp	r3, r2
   18508:	addcc	r2, r3, #1
   1850c:	strcc	r2, [r0, #20]
   18510:	movcc	r2, #10
   18514:	strbcc	r2, [r3]
   18518:	bcs	18820 <argp_error@@Base+0x1340>
   1851c:	ldr	r6, [r7, #24]
   18520:	ldr	r3, [sp]
   18524:	sub	r2, r5, r6
   18528:	sub	r3, r3, r6
   1852c:	add	sl, sl, r3
   18530:	mov	fp, r2
   18534:	mov	r4, r6
   18538:	ldr	r3, [r7, #12]
   1853c:	cmp	r3, r2
   18540:	bgt	185c8 <argp_error@@Base+0x10e8>
   18544:	cmp	r3, #0
   18548:	movgt	r2, r6
   1854c:	ble	18568 <argp_error@@Base+0x1088>
   18550:	strb	r9, [r2], #1
   18554:	ldr	r3, [r7, #12]
   18558:	sub	r1, r2, r6
   1855c:	cmp	r3, r1
   18560:	bgt	18550 <argp_error@@Base+0x1070>
   18564:	mov	r6, r2
   18568:	cmp	r6, r5
   1856c:	bcc	18750 <argp_error@@Base+0x1270>
   18570:	sub	fp, sl, fp
   18574:	cmp	r3, #0
   18578:	add	fp, r6, fp
   1857c:	mvneq	r3, #0
   18580:	str	fp, [r7, #28]
   18584:	str	r3, [r7, #20]
   18588:	b	18300 <argp_error@@Base+0xe20>
   1858c:	ldr	r3, [r7, #32]
   18590:	ldr	r2, [sp, #4]
   18594:	sub	r3, r3, r8
   18598:	cmp	r3, r2
   1859c:	ble	184bc <argp_error@@Base+0xfdc>
   185a0:	add	r3, r8, #1
   185a4:	sub	r2, r5, r3
   185a8:	sub	fp, r5, r6
   185ac:	mov	r4, r6
   185b0:	mov	r6, r3
   185b4:	mov	r3, #10
   185b8:	strb	r3, [r8]
   185bc:	ldr	r3, [r7, #12]
   185c0:	cmp	r3, r2
   185c4:	ble	18544 <argp_error@@Base+0x1064>
   185c8:	add	r2, sl, #1
   185cc:	add	r2, r4, r2
   185d0:	cmp	r5, r2
   185d4:	beq	187cc <argp_error@@Base+0x12ec>
   185d8:	cmp	r3, #0
   185dc:	movgt	r8, #0
   185e0:	bgt	185f8 <argp_error@@Base+0x1118>
   185e4:	b	18568 <argp_error@@Base+0x1088>
   185e8:	ldr	r3, [r7, #12]
   185ec:	add	r8, r8, #1
   185f0:	cmp	r3, r8
   185f4:	ble	18568 <argp_error@@Base+0x1088>
   185f8:	ldr	r0, [r7]
   185fc:	ldr	r3, [r0, #20]
   18600:	ldr	r2, [r0, #24]
   18604:	add	r1, r3, #1
   18608:	cmp	r3, r2
   1860c:	strcc	r1, [r0, #20]
   18610:	strbcc	r9, [r3]
   18614:	bcc	185e8 <argp_error@@Base+0x1108>
   18618:	mov	r1, r9
   1861c:	bl	114f4 <__overflow@plt>
   18620:	b	185e8 <argp_error@@Base+0x1108>
   18624:	sub	sl, fp, r6
   18628:	mov	r2, sl
   1862c:	mov	r1, #10
   18630:	mov	r0, r6
   18634:	bl	114d0 <memchr@plt>
   18638:	str	r6, [sp]
   1863c:	mov	r4, r0
   18640:	cmp	r4, #0
   18644:	bne	183b4 <argp_error@@Base+0xed4>
   18648:	ldr	r5, [r7, #8]
   1864c:	add	r3, r8, sl
   18650:	cmp	r3, r5
   18654:	bcc	18844 <argp_error@@Base+0x1364>
   18658:	ldr	r2, [r7, #12]
   1865c:	sub	r5, r5, #1
   18660:	cmp	r2, #0
   18664:	str	r2, [sp, #4]
   18668:	blt	18830 <argp_error@@Base+0x1350>
   1866c:	add	r5, r5, #1
   18670:	sub	r8, r5, r8
   18674:	adds	r8, r6, r8
   18678:	mov	r4, fp
   1867c:	bcc	18418 <argp_error@@Base+0xf38>
   18680:	mov	r5, r8
   18684:	add	r5, r5, #1
   18688:	cmp	r5, r6
   1868c:	bls	18698 <argp_error@@Base+0x11b8>
   18690:	mov	r8, r5
   18694:	b	18498 <argp_error@@Base+0xfb8>
   18698:	cmp	r8, r4
   1869c:	bcs	186d4 <argp_error@@Base+0x11f4>
   186a0:	add	r5, r8, #1
   186a4:	b	186c8 <argp_error@@Base+0x11e8>
   186a8:	bl	11434 <__ctype_b_loc@plt>
   186ac:	ldrb	r3, [r5]
   186b0:	add	r5, r5, #1
   186b4:	lsl	r3, r3, #1
   186b8:	ldr	r2, [r0]
   186bc:	ldrh	r3, [r2, r3]
   186c0:	tst	r3, #1
   186c4:	bne	186e4 <argp_error@@Base+0x1204>
   186c8:	cmp	r5, r4
   186cc:	mov	r8, r5
   186d0:	bne	186a8 <argp_error@@Base+0x11c8>
   186d4:	cmp	r8, r4
   186d8:	beq	187b8 <argp_error@@Base+0x12d8>
   186dc:	bl	11434 <__ctype_b_loc@plt>
   186e0:	ldr	r2, [r0]
   186e4:	mov	r5, r8
   186e8:	ldrb	r3, [r5, #1]!
   186ec:	lsl	r3, r3, #1
   186f0:	ldrh	r3, [r2, r3]
   186f4:	tst	r3, #1
   186f8:	bne	186e8 <argp_error@@Base+0x1208>
   186fc:	b	18498 <argp_error@@Base+0xfb8>
   18700:	cmp	r4, fp
   18704:	str	r3, [sp]
   18708:	bcs	1882c <argp_error@@Base+0x134c>
   1870c:	sub	r0, r5, r8
   18710:	sub	r2, fp, r4
   18714:	add	r0, r6, r0
   18718:	mov	r1, r4
   1871c:	bl	112d8 <memmove@plt>
   18720:	ldr	r2, [r7, #20]
   18724:	ldr	fp, [r7, #28]
   18728:	sub	r5, r5, r2
   1872c:	add	r5, r6, r5
   18730:	mov	r3, #0
   18734:	sub	r4, r5, r4
   18738:	str	r3, [r7, #20]
   1873c:	ldr	r3, [sp]
   18740:	sub	fp, fp, r4
   18744:	add	r6, r6, r3
   18748:	str	fp, [r7, #28]
   1874c:	b	18300 <argp_error@@Base+0xe20>
   18750:	add	r2, r4, sl
   18754:	sub	r2, r2, r5
   18758:	mov	r1, r5
   1875c:	mov	r0, r6
   18760:	bl	112d8 <memmove@plt>
   18764:	ldr	r3, [r7, #12]
   18768:	b	18570 <argp_error@@Base+0x1090>
   1876c:	add	r5, r6, r4
   18770:	sub	r2, fp, r6
   18774:	mov	r1, r6
   18778:	mov	r0, r5
   1877c:	bl	112d8 <memmove@plt>
   18780:	ldr	r3, [r7, #28]
   18784:	mov	r0, r6
   18788:	add	r3, r3, r4
   1878c:	str	r3, [r7, #28]
   18790:	mov	r2, r4
   18794:	mov	r1, r9
   18798:	bl	114ac <memset@plt>
   1879c:	mov	r6, r5
   187a0:	ldr	fp, [r7, #28]
   187a4:	mov	r8, r4
   187a8:	str	r4, [r7, #20]
   187ac:	b	18380 <argp_error@@Base+0xea0>
   187b0:	add	r8, r2, #1
   187b4:	b	18498 <argp_error@@Base+0xfb8>
   187b8:	mov	r3, #0
   187bc:	str	r3, [r7, #20]
   187c0:	add	r6, r8, #1
   187c4:	ldr	fp, [r7, #28]
   187c8:	b	18300 <argp_error@@Base+0xe20>
   187cc:	ldr	r2, [r7, #32]
   187d0:	sub	r2, r2, r5
   187d4:	cmp	r3, r2
   187d8:	ble	18544 <argp_error@@Base+0x1064>
   187dc:	b	185d8 <argp_error@@Base+0x10f8>
   187e0:	sub	fp, fp, r5
   187e4:	mov	r2, fp
   187e8:	mov	r1, r5
   187ec:	add	r0, r8, r0
   187f0:	bl	112d8 <memmove@plt>
   187f4:	ldr	r2, [r7, #12]
   187f8:	mov	r3, #10
   187fc:	add	r5, r2, #1
   18800:	add	r5, r8, r5
   18804:	add	fp, r5, fp
   18808:	sub	sl, fp, r6
   1880c:	mov	r4, r6
   18810:	sub	fp, r5, r6
   18814:	strb	r3, [r8]
   18818:	add	r6, r8, #1
   1881c:	b	18538 <argp_error@@Base+0x1058>
   18820:	mov	r1, #10
   18824:	bl	114f4 <__overflow@plt>
   18828:	b	1851c <argp_error@@Base+0x103c>
   1882c:	add	r3, r8, sl
   18830:	sub	r5, r5, r3
   18834:	add	fp, fp, r5
   18838:	str	fp, [r7, #28]
   1883c:	str	r3, [r7, #20]
   18840:	b	183e0 <argp_error@@Base+0xf00>
   18844:	str	r3, [r7, #20]
   18848:	ldr	fp, [r7, #28]
   1884c:	b	183e0 <argp_error@@Base+0xf00>
   18850:	push	{r4, lr}
   18854:	mov	r4, r0
   18858:	bl	182e0 <argp_error@@Base+0xe00>
   1885c:	ldr	r2, [r4, #28]
   18860:	ldr	r0, [r4, #24]
   18864:	cmp	r2, r0
   18868:	bls	18880 <argp_error@@Base+0x13a0>
   1886c:	sub	r2, r2, r0
   18870:	ldr	r3, [r4]
   18874:	mov	r1, #1
   18878:	bl	11320 <fwrite_unlocked@plt>
   1887c:	ldr	r0, [r4, #24]
   18880:	bl	136c0 <argp_parse@@Base+0xe98>
   18884:	mov	r0, r4
   18888:	pop	{r4, lr}
   1888c:	b	136c0 <argp_parse@@Base+0xe98>
   18890:	push	{r4, r5, r6, lr}
   18894:	mov	r4, r0
   18898:	mov	r5, r1
   1889c:	bl	182e0 <argp_error@@Base+0xe00>
   188a0:	ldr	r3, [r4, #24]
   188a4:	ldr	r2, [r4, #28]
   188a8:	mov	r0, r3
   188ac:	sub	r2, r2, r3
   188b0:	mov	r1, #1
   188b4:	ldr	r3, [r4]
   188b8:	bl	11320 <fwrite_unlocked@plt>
   188bc:	ldr	r2, [r4, #28]
   188c0:	ldr	r3, [r4, #24]
   188c4:	sub	r1, r2, r3
   188c8:	cmp	r0, r1
   188cc:	bne	18910 <argp_error@@Base+0x1430>
   188d0:	ldr	r1, [r4, #32]
   188d4:	mov	r2, #0
   188d8:	sub	r1, r1, r3
   188dc:	cmp	r1, r5
   188e0:	str	r3, [r4, #28]
   188e4:	str	r2, [r4, #16]
   188e8:	movcs	r3, #1
   188ec:	bcs	18908 <argp_error@@Base+0x1428>
   188f0:	adds	r5, r1, r5
   188f4:	bcc	18940 <argp_error@@Base+0x1460>
   188f8:	bl	11494 <__errno_location@plt>
   188fc:	mov	r3, #0
   18900:	mov	r2, #12
   18904:	str	r2, [r0]
   18908:	mov	r0, r3
   1890c:	pop	{r4, r5, r6, pc}
   18910:	ldr	r1, [r4, #16]
   18914:	sub	r2, r2, r0
   18918:	sub	r1, r1, r0
   1891c:	str	r2, [r4, #28]
   18920:	str	r1, [r4, #16]
   18924:	sub	r2, r2, r3
   18928:	add	r1, r3, r0
   1892c:	mov	r0, r3
   18930:	bl	112d8 <memmove@plt>
   18934:	mov	r3, #0
   18938:	mov	r0, r3
   1893c:	pop	{r4, r5, r6, pc}
   18940:	mov	r0, r3
   18944:	mov	r1, r5
   18948:	bl	14288 <argp_parse@@Base+0x1a60>
   1894c:	cmp	r0, #0
   18950:	beq	188f8 <argp_error@@Base+0x1418>
   18954:	add	r1, r0, r5
   18958:	mov	r3, #1
   1895c:	str	r0, [r4, #24]
   18960:	str	r0, [r4, #28]
   18964:	str	r1, [r4, #32]
   18968:	mov	r0, r3
   1896c:	pop	{r4, r5, r6, pc}
   18970:	ldr	r3, [r0, #32]
   18974:	ldr	r2, [r0, #28]
   18978:	sub	r3, r3, r2
   1897c:	cmp	r3, r1
   18980:	bcc	1898c <argp_error@@Base+0x14ac>
   18984:	mov	r0, #1
   18988:	bx	lr
   1898c:	b	18890 <argp_error@@Base+0x13b0>
   18990:	push	{r1, r2, r3}
   18994:	mov	r1, #150	; 0x96
   18998:	push	{r4, r5, r6, r7, lr}
   1899c:	sub	sp, sp, #8
   189a0:	mov	r5, r0
   189a4:	ldr	r7, [sp, #28]
   189a8:	add	r6, sp, #32
   189ac:	ldr	r3, [r5, #32]
   189b0:	ldr	r0, [r5, #28]
   189b4:	sub	r2, r3, r0
   189b8:	cmp	r1, r2
   189bc:	bhi	18a00 <argp_error@@Base+0x1520>
   189c0:	sub	r4, r3, r0
   189c4:	mov	r1, r4
   189c8:	mov	r3, r6
   189cc:	mov	r2, r7
   189d0:	str	r6, [sp, #4]
   189d4:	bl	1159c <vsnprintf@plt>
   189d8:	cmp	r4, r0
   189dc:	addls	r1, r0, #1
   189e0:	bls	189ac <argp_error@@Base+0x14cc>
   189e4:	ldr	r3, [r5, #28]
   189e8:	add	r3, r3, r0
   189ec:	str	r3, [r5, #28]
   189f0:	add	sp, sp, #8
   189f4:	pop	{r4, r5, r6, r7, lr}
   189f8:	add	sp, sp, #12
   189fc:	bx	lr
   18a00:	mov	r0, r5
   18a04:	bl	18890 <argp_error@@Base+0x13b0>
   18a08:	cmp	r0, #0
   18a0c:	ldrne	r3, [r5, #32]
   18a10:	ldrne	r0, [r5, #28]
   18a14:	bne	189c0 <argp_error@@Base+0x14e0>
   18a18:	mvn	r0, #0
   18a1c:	add	sp, sp, #8
   18a20:	pop	{r4, r5, r6, r7, lr}
   18a24:	add	sp, sp, #12
   18a28:	bx	lr
   18a2c:	subs	r2, r1, #1
   18a30:	bxeq	lr
   18a34:	bcc	18c0c <argp_error@@Base+0x172c>
   18a38:	cmp	r0, r1
   18a3c:	bls	18bf0 <argp_error@@Base+0x1710>
   18a40:	tst	r1, r2
   18a44:	beq	18bfc <argp_error@@Base+0x171c>
   18a48:	clz	r3, r0
   18a4c:	clz	r2, r1
   18a50:	sub	r3, r2, r3
   18a54:	rsbs	r3, r3, #31
   18a58:	addne	r3, r3, r3, lsl #1
   18a5c:	mov	r2, #0
   18a60:	addne	pc, pc, r3, lsl #2
   18a64:	nop			; (mov r0, r0)
   18a68:	cmp	r0, r1, lsl #31
   18a6c:	adc	r2, r2, r2
   18a70:	subcs	r0, r0, r1, lsl #31
   18a74:	cmp	r0, r1, lsl #30
   18a78:	adc	r2, r2, r2
   18a7c:	subcs	r0, r0, r1, lsl #30
   18a80:	cmp	r0, r1, lsl #29
   18a84:	adc	r2, r2, r2
   18a88:	subcs	r0, r0, r1, lsl #29
   18a8c:	cmp	r0, r1, lsl #28
   18a90:	adc	r2, r2, r2
   18a94:	subcs	r0, r0, r1, lsl #28
   18a98:	cmp	r0, r1, lsl #27
   18a9c:	adc	r2, r2, r2
   18aa0:	subcs	r0, r0, r1, lsl #27
   18aa4:	cmp	r0, r1, lsl #26
   18aa8:	adc	r2, r2, r2
   18aac:	subcs	r0, r0, r1, lsl #26
   18ab0:	cmp	r0, r1, lsl #25
   18ab4:	adc	r2, r2, r2
   18ab8:	subcs	r0, r0, r1, lsl #25
   18abc:	cmp	r0, r1, lsl #24
   18ac0:	adc	r2, r2, r2
   18ac4:	subcs	r0, r0, r1, lsl #24
   18ac8:	cmp	r0, r1, lsl #23
   18acc:	adc	r2, r2, r2
   18ad0:	subcs	r0, r0, r1, lsl #23
   18ad4:	cmp	r0, r1, lsl #22
   18ad8:	adc	r2, r2, r2
   18adc:	subcs	r0, r0, r1, lsl #22
   18ae0:	cmp	r0, r1, lsl #21
   18ae4:	adc	r2, r2, r2
   18ae8:	subcs	r0, r0, r1, lsl #21
   18aec:	cmp	r0, r1, lsl #20
   18af0:	adc	r2, r2, r2
   18af4:	subcs	r0, r0, r1, lsl #20
   18af8:	cmp	r0, r1, lsl #19
   18afc:	adc	r2, r2, r2
   18b00:	subcs	r0, r0, r1, lsl #19
   18b04:	cmp	r0, r1, lsl #18
   18b08:	adc	r2, r2, r2
   18b0c:	subcs	r0, r0, r1, lsl #18
   18b10:	cmp	r0, r1, lsl #17
   18b14:	adc	r2, r2, r2
   18b18:	subcs	r0, r0, r1, lsl #17
   18b1c:	cmp	r0, r1, lsl #16
   18b20:	adc	r2, r2, r2
   18b24:	subcs	r0, r0, r1, lsl #16
   18b28:	cmp	r0, r1, lsl #15
   18b2c:	adc	r2, r2, r2
   18b30:	subcs	r0, r0, r1, lsl #15
   18b34:	cmp	r0, r1, lsl #14
   18b38:	adc	r2, r2, r2
   18b3c:	subcs	r0, r0, r1, lsl #14
   18b40:	cmp	r0, r1, lsl #13
   18b44:	adc	r2, r2, r2
   18b48:	subcs	r0, r0, r1, lsl #13
   18b4c:	cmp	r0, r1, lsl #12
   18b50:	adc	r2, r2, r2
   18b54:	subcs	r0, r0, r1, lsl #12
   18b58:	cmp	r0, r1, lsl #11
   18b5c:	adc	r2, r2, r2
   18b60:	subcs	r0, r0, r1, lsl #11
   18b64:	cmp	r0, r1, lsl #10
   18b68:	adc	r2, r2, r2
   18b6c:	subcs	r0, r0, r1, lsl #10
   18b70:	cmp	r0, r1, lsl #9
   18b74:	adc	r2, r2, r2
   18b78:	subcs	r0, r0, r1, lsl #9
   18b7c:	cmp	r0, r1, lsl #8
   18b80:	adc	r2, r2, r2
   18b84:	subcs	r0, r0, r1, lsl #8
   18b88:	cmp	r0, r1, lsl #7
   18b8c:	adc	r2, r2, r2
   18b90:	subcs	r0, r0, r1, lsl #7
   18b94:	cmp	r0, r1, lsl #6
   18b98:	adc	r2, r2, r2
   18b9c:	subcs	r0, r0, r1, lsl #6
   18ba0:	cmp	r0, r1, lsl #5
   18ba4:	adc	r2, r2, r2
   18ba8:	subcs	r0, r0, r1, lsl #5
   18bac:	cmp	r0, r1, lsl #4
   18bb0:	adc	r2, r2, r2
   18bb4:	subcs	r0, r0, r1, lsl #4
   18bb8:	cmp	r0, r1, lsl #3
   18bbc:	adc	r2, r2, r2
   18bc0:	subcs	r0, r0, r1, lsl #3
   18bc4:	cmp	r0, r1, lsl #2
   18bc8:	adc	r2, r2, r2
   18bcc:	subcs	r0, r0, r1, lsl #2
   18bd0:	cmp	r0, r1, lsl #1
   18bd4:	adc	r2, r2, r2
   18bd8:	subcs	r0, r0, r1, lsl #1
   18bdc:	cmp	r0, r1
   18be0:	adc	r2, r2, r2
   18be4:	subcs	r0, r0, r1
   18be8:	mov	r0, r2
   18bec:	bx	lr
   18bf0:	moveq	r0, #1
   18bf4:	movne	r0, #0
   18bf8:	bx	lr
   18bfc:	clz	r2, r1
   18c00:	rsb	r2, r2, #31
   18c04:	lsr	r0, r0, r2
   18c08:	bx	lr
   18c0c:	cmp	r0, #0
   18c10:	mvnne	r0, #0
   18c14:	b	18e78 <argp_error@@Base+0x1998>
   18c18:	cmp	r1, #0
   18c1c:	beq	18c0c <argp_error@@Base+0x172c>
   18c20:	push	{r0, r1, lr}
   18c24:	bl	18a2c <argp_error@@Base+0x154c>
   18c28:	pop	{r1, r2, lr}
   18c2c:	mul	r3, r2, r0
   18c30:	sub	r1, r1, r3
   18c34:	bx	lr
   18c38:	cmp	r1, #0
   18c3c:	beq	18e48 <argp_error@@Base+0x1968>
   18c40:	eor	ip, r0, r1
   18c44:	rsbmi	r1, r1, #0
   18c48:	subs	r2, r1, #1
   18c4c:	beq	18e14 <argp_error@@Base+0x1934>
   18c50:	movs	r3, r0
   18c54:	rsbmi	r3, r0, #0
   18c58:	cmp	r3, r1
   18c5c:	bls	18e20 <argp_error@@Base+0x1940>
   18c60:	tst	r1, r2
   18c64:	beq	18e30 <argp_error@@Base+0x1950>
   18c68:	clz	r2, r3
   18c6c:	clz	r0, r1
   18c70:	sub	r2, r0, r2
   18c74:	rsbs	r2, r2, #31
   18c78:	addne	r2, r2, r2, lsl #1
   18c7c:	mov	r0, #0
   18c80:	addne	pc, pc, r2, lsl #2
   18c84:	nop			; (mov r0, r0)
   18c88:	cmp	r3, r1, lsl #31
   18c8c:	adc	r0, r0, r0
   18c90:	subcs	r3, r3, r1, lsl #31
   18c94:	cmp	r3, r1, lsl #30
   18c98:	adc	r0, r0, r0
   18c9c:	subcs	r3, r3, r1, lsl #30
   18ca0:	cmp	r3, r1, lsl #29
   18ca4:	adc	r0, r0, r0
   18ca8:	subcs	r3, r3, r1, lsl #29
   18cac:	cmp	r3, r1, lsl #28
   18cb0:	adc	r0, r0, r0
   18cb4:	subcs	r3, r3, r1, lsl #28
   18cb8:	cmp	r3, r1, lsl #27
   18cbc:	adc	r0, r0, r0
   18cc0:	subcs	r3, r3, r1, lsl #27
   18cc4:	cmp	r3, r1, lsl #26
   18cc8:	adc	r0, r0, r0
   18ccc:	subcs	r3, r3, r1, lsl #26
   18cd0:	cmp	r3, r1, lsl #25
   18cd4:	adc	r0, r0, r0
   18cd8:	subcs	r3, r3, r1, lsl #25
   18cdc:	cmp	r3, r1, lsl #24
   18ce0:	adc	r0, r0, r0
   18ce4:	subcs	r3, r3, r1, lsl #24
   18ce8:	cmp	r3, r1, lsl #23
   18cec:	adc	r0, r0, r0
   18cf0:	subcs	r3, r3, r1, lsl #23
   18cf4:	cmp	r3, r1, lsl #22
   18cf8:	adc	r0, r0, r0
   18cfc:	subcs	r3, r3, r1, lsl #22
   18d00:	cmp	r3, r1, lsl #21
   18d04:	adc	r0, r0, r0
   18d08:	subcs	r3, r3, r1, lsl #21
   18d0c:	cmp	r3, r1, lsl #20
   18d10:	adc	r0, r0, r0
   18d14:	subcs	r3, r3, r1, lsl #20
   18d18:	cmp	r3, r1, lsl #19
   18d1c:	adc	r0, r0, r0
   18d20:	subcs	r3, r3, r1, lsl #19
   18d24:	cmp	r3, r1, lsl #18
   18d28:	adc	r0, r0, r0
   18d2c:	subcs	r3, r3, r1, lsl #18
   18d30:	cmp	r3, r1, lsl #17
   18d34:	adc	r0, r0, r0
   18d38:	subcs	r3, r3, r1, lsl #17
   18d3c:	cmp	r3, r1, lsl #16
   18d40:	adc	r0, r0, r0
   18d44:	subcs	r3, r3, r1, lsl #16
   18d48:	cmp	r3, r1, lsl #15
   18d4c:	adc	r0, r0, r0
   18d50:	subcs	r3, r3, r1, lsl #15
   18d54:	cmp	r3, r1, lsl #14
   18d58:	adc	r0, r0, r0
   18d5c:	subcs	r3, r3, r1, lsl #14
   18d60:	cmp	r3, r1, lsl #13
   18d64:	adc	r0, r0, r0
   18d68:	subcs	r3, r3, r1, lsl #13
   18d6c:	cmp	r3, r1, lsl #12
   18d70:	adc	r0, r0, r0
   18d74:	subcs	r3, r3, r1, lsl #12
   18d78:	cmp	r3, r1, lsl #11
   18d7c:	adc	r0, r0, r0
   18d80:	subcs	r3, r3, r1, lsl #11
   18d84:	cmp	r3, r1, lsl #10
   18d88:	adc	r0, r0, r0
   18d8c:	subcs	r3, r3, r1, lsl #10
   18d90:	cmp	r3, r1, lsl #9
   18d94:	adc	r0, r0, r0
   18d98:	subcs	r3, r3, r1, lsl #9
   18d9c:	cmp	r3, r1, lsl #8
   18da0:	adc	r0, r0, r0
   18da4:	subcs	r3, r3, r1, lsl #8
   18da8:	cmp	r3, r1, lsl #7
   18dac:	adc	r0, r0, r0
   18db0:	subcs	r3, r3, r1, lsl #7
   18db4:	cmp	r3, r1, lsl #6
   18db8:	adc	r0, r0, r0
   18dbc:	subcs	r3, r3, r1, lsl #6
   18dc0:	cmp	r3, r1, lsl #5
   18dc4:	adc	r0, r0, r0
   18dc8:	subcs	r3, r3, r1, lsl #5
   18dcc:	cmp	r3, r1, lsl #4
   18dd0:	adc	r0, r0, r0
   18dd4:	subcs	r3, r3, r1, lsl #4
   18dd8:	cmp	r3, r1, lsl #3
   18ddc:	adc	r0, r0, r0
   18de0:	subcs	r3, r3, r1, lsl #3
   18de4:	cmp	r3, r1, lsl #2
   18de8:	adc	r0, r0, r0
   18dec:	subcs	r3, r3, r1, lsl #2
   18df0:	cmp	r3, r1, lsl #1
   18df4:	adc	r0, r0, r0
   18df8:	subcs	r3, r3, r1, lsl #1
   18dfc:	cmp	r3, r1
   18e00:	adc	r0, r0, r0
   18e04:	subcs	r3, r3, r1
   18e08:	cmp	ip, #0
   18e0c:	rsbmi	r0, r0, #0
   18e10:	bx	lr
   18e14:	teq	ip, r0
   18e18:	rsbmi	r0, r0, #0
   18e1c:	bx	lr
   18e20:	movcc	r0, #0
   18e24:	asreq	r0, ip, #31
   18e28:	orreq	r0, r0, #1
   18e2c:	bx	lr
   18e30:	clz	r2, r1
   18e34:	rsb	r2, r2, #31
   18e38:	cmp	ip, #0
   18e3c:	lsr	r0, r3, r2
   18e40:	rsbmi	r0, r0, #0
   18e44:	bx	lr
   18e48:	cmp	r0, #0
   18e4c:	mvngt	r0, #-2147483648	; 0x80000000
   18e50:	movlt	r0, #-2147483648	; 0x80000000
   18e54:	b	18e78 <argp_error@@Base+0x1998>
   18e58:	cmp	r1, #0
   18e5c:	beq	18e48 <argp_error@@Base+0x1968>
   18e60:	push	{r0, r1, lr}
   18e64:	bl	18c40 <argp_error@@Base+0x1760>
   18e68:	pop	{r1, r2, lr}
   18e6c:	mul	r3, r2, r0
   18e70:	sub	r1, r1, r3
   18e74:	bx	lr
   18e78:	push	{r1, lr}
   18e7c:	mov	r0, #8
   18e80:	bl	11284 <raise@plt>
   18e84:	pop	{r1, pc}
   18e88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18e8c:	mov	r7, r0
   18e90:	ldr	r6, [pc, #72]	; 18ee0 <argp_error@@Base+0x1a00>
   18e94:	ldr	r5, [pc, #72]	; 18ee4 <argp_error@@Base+0x1a04>
   18e98:	add	r6, pc, r6
   18e9c:	add	r5, pc, r5
   18ea0:	sub	r6, r6, r5
   18ea4:	mov	r8, r1
   18ea8:	mov	r9, r2
   18eac:	bl	1124c <calloc@plt-0x20>
   18eb0:	asrs	r6, r6, #2
   18eb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18eb8:	mov	r4, #0
   18ebc:	add	r4, r4, #1
   18ec0:	ldr	r3, [r5], #4
   18ec4:	mov	r2, r9
   18ec8:	mov	r1, r8
   18ecc:	mov	r0, r7
   18ed0:	blx	r3
   18ed4:	cmp	r6, r4
   18ed8:	bne	18ebc <argp_error@@Base+0x19dc>
   18edc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ee0:	andeq	r1, r1, r0, rrx
   18ee4:	andeq	r1, r1, r8, asr r0
   18ee8:	bx	lr

Disassembly of section .fini:

00018eec <.fini>:
   18eec:	push	{r3, lr}
   18ef0:	pop	{r3, pc}
