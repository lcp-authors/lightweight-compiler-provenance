
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011b48 <.init>:
   11b48:	push	{r3, lr}
   11b4c:	bl	12098 <_start@@Base+0x3c>
   11b50:	pop	{r3, pc}

Disassembly of section .plt:

00011b54 <calloc@plt-0x14>:
   11b54:	push	{lr}		; (str lr, [sp, #-4]!)
   11b58:	ldr	lr, [pc, #4]	; 11b64 <calloc@plt-0x4>
   11b5c:	add	lr, pc, lr
   11b60:	ldr	pc, [lr, #8]!
   11b64:	muleq	r1, ip, r4

00011b68 <calloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #20, 20	; 0x14000
   11b70:	ldr	pc, [ip, #1180]!	; 0x49c

00011b74 <raise@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #20, 20	; 0x14000
   11b7c:	ldr	pc, [ip, #1172]!	; 0x494

00011b80 <strcmp@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #20, 20	; 0x14000
   11b88:	ldr	pc, [ip, #1164]!	; 0x48c

00011b8c <printf@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #20, 20	; 0x14000
   11b94:	ldr	pc, [ip, #1156]!	; 0x484

00011b98 <free@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #20, 20	; 0x14000
   11ba0:	ldr	pc, [ip, #1148]!	; 0x47c

00011ba4 <time@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #20, 20	; 0x14000
   11bac:	ldr	pc, [ip, #1140]!	; 0x474

00011bb0 <realloc@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #20, 20	; 0x14000
   11bb8:	ldr	pc, [ip, #1132]!	; 0x46c

00011bbc <strcpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #20, 20	; 0x14000
   11bc4:	ldr	pc, [ip, #1124]!	; 0x464

00011bc8 <puts@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #20, 20	; 0x14000
   11bd0:	ldr	pc, [ip, #1116]!	; 0x45c

00011bd4 <malloc@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #20, 20	; 0x14000
   11bdc:	ldr	pc, [ip, #1108]!	; 0x454

00011be0 <__libc_start_main@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #20, 20	; 0x14000
   11be8:	ldr	pc, [ip, #1100]!	; 0x44c

00011bec <__gmon_start__@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #20, 20	; 0x14000
   11bf4:	ldr	pc, [ip, #1092]!	; 0x444

00011bf8 <strlen@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #20, 20	; 0x14000
   11c00:	ldr	pc, [ip, #1084]!	; 0x43c

00011c04 <srand@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #20, 20	; 0x14000
   11c0c:	ldr	pc, [ip, #1076]!	; 0x434

00011c10 <snprintf@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #20, 20	; 0x14000
   11c18:	ldr	pc, [ip, #1068]!	; 0x42c

00011c1c <__isoc99_sscanf@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #20, 20	; 0x14000
   11c24:	ldr	pc, [ip, #1060]!	; 0x424

00011c28 <rand@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #20, 20	; 0x14000
   11c30:	ldr	pc, [ip, #1052]!	; 0x41c

00011c34 <abort@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #20, 20	; 0x14000
   11c3c:	ldr	pc, [ip, #1044]!	; 0x414

Disassembly of section .text:

00011c40 <main@@Base>:
   11c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c44:	sub	sp, sp, #356	; 0x164
   11c48:	add	r0, sp, #36	; 0x24
   11c4c:	bl	11ba4 <time@plt>
   11c50:	bl	11c04 <srand@plt>
   11c54:	bl	11c28 <rand@plt>
   11c58:	ldr	r2, [pc, #980]	; 12034 <main@@Base+0x3f4>
   11c5c:	mov	r1, #100	; 0x64
   11c60:	mov	r4, #0
   11c64:	mov	r3, r0
   11c68:	umull	r0, r2, r2, r3
   11c6c:	add	r0, sp, #40	; 0x28
   11c70:	lsr	r2, r2, #5
   11c74:	mul	r2, r1, r2
   11c78:	sub	r3, r3, r2
   11c7c:	add	r5, r3, r1
   11c80:	bl	121d8 <table_init@@Base>
   11c84:	add	r4, r4, #1
   11c88:	add	r0, sp, #40	; 0x28
   11c8c:	bl	141f8 <table_add_row@@Base>
   11c90:	cmp	r5, r4
   11c94:	bgt	11c84 <main@@Base+0x44>
   11c98:	add	r0, sp, #40	; 0x28
   11c9c:	bl	141f0 <table_get_row_length@@Base>
   11ca0:	mov	r4, #0
   11ca4:	ldr	r8, [pc, #908]	; 12038 <main@@Base+0x3f8>
   11ca8:	mov	r7, r4
   11cac:	mov	r6, #255	; 0xff
   11cb0:	mov	sl, r0
   11cb4:	bl	11c28 <rand@plt>
   11cb8:	ldr	r3, [pc, #892]	; 1203c <main@@Base+0x3fc>
   11cbc:	umull	r2, r3, r3, r0
   11cc0:	lsr	r3, r3, #2
   11cc4:	add	r3, r3, r3, lsl #2
   11cc8:	sub	r0, r0, r3
   11ccc:	add	r5, r0, #2
   11cd0:	mov	r3, r4
   11cd4:	mov	r2, r8
   11cd8:	mov	r1, r6
   11cdc:	add	r0, sp, #96	; 0x60
   11ce0:	bl	11c10 <snprintf@plt>
   11ce4:	add	r4, r4, #1
   11ce8:	mov	r2, r7
   11cec:	add	r1, sp, #96	; 0x60
   11cf0:	add	r0, sp, #40	; 0x28
   11cf4:	bl	1366c <table_add_column@@Base>
   11cf8:	cmp	r5, r4
   11cfc:	bgt	11cd0 <main@@Base+0x90>
   11d00:	add	r0, sp, #40	; 0x28
   11d04:	bl	135e8 <table_get_column_length@@Base>
   11d08:	subs	r9, r0, #0
   11d0c:	ble	11fec <main@@Base+0x3ac>
   11d10:	cmp	sl, #0
   11d14:	ble	11d64 <main@@Base+0x124>
   11d18:	ldr	r6, [pc, #800]	; 12040 <main@@Base+0x400>
   11d1c:	mov	r5, #0
   11d20:	mov	r4, #0
   11d24:	bl	11c28 <rand@plt>
   11d28:	mov	r2, r5
   11d2c:	smull	r1, r3, r6, r0
   11d30:	asr	ip, r0, #31
   11d34:	rsb	ip, ip, r3, asr #3
   11d38:	mov	r1, r4
   11d3c:	add	ip, ip, ip, lsl #2
   11d40:	add	r4, r4, #1
   11d44:	sub	r3, r0, ip, lsl #2
   11d48:	add	r0, sp, #40	; 0x28
   11d4c:	bl	1478c <table_set_int@@Base>
   11d50:	cmp	sl, r4
   11d54:	bne	11d24 <main@@Base+0xe4>
   11d58:	add	r5, r5, #1
   11d5c:	cmp	r9, r5
   11d60:	bne	11d20 <main@@Base+0xe0>
   11d64:	mov	r1, #4
   11d68:	mov	r0, r9
   11d6c:	bl	11b68 <calloc@plt>
   11d70:	mov	r1, #4
   11d74:	mov	r4, r0
   11d78:	str	r0, [sp, #28]
   11d7c:	mov	r0, r9
   11d80:	bl	11b68 <calloc@plt>
   11d84:	sub	r6, r4, #4
   11d88:	mov	r4, #0
   11d8c:	sub	r5, r0, #4
   11d90:	str	r0, [sp, #20]
   11d94:	str	r4, [r6, #4]!
   11d98:	bl	11c28 <rand@plt>
   11d9c:	add	r4, r4, #1
   11da0:	cmp	r9, r4
   11da4:	add	r3, r0, r0, lsr #31
   11da8:	and	r3, r3, #1
   11dac:	sub	r3, r3, r0, lsr #31
   11db0:	str	r3, [r5, #4]!
   11db4:	bne	11d94 <main@@Base+0x154>
   11db8:	mov	r3, r9
   11dbc:	ldr	r2, [sp, #20]
   11dc0:	ldr	r1, [sp, #28]
   11dc4:	add	r0, sp, #40	; 0x28
   11dc8:	bl	154cc <table_column_sort@@Base>
   11dcc:	cmp	sl, #0
   11dd0:	ble	1200c <main@@Base+0x3cc>
   11dd4:	mvn	r3, #0
   11dd8:	mov	r6, #0
   11ddc:	str	r3, [sp, #12]
   11de0:	str	r3, [sp, #16]
   11de4:	add	r5, r6, #1
   11de8:	mov	r3, sl
   11dec:	cmp	r3, r5
   11df0:	mov	fp, r6
   11df4:	str	sl, [sp, #24]
   11df8:	beq	11ea8 <main@@Base+0x268>
   11dfc:	cmp	r9, #0
   11e00:	ble	11e94 <main@@Base+0x254>
   11e04:	ldr	r3, [sp, #20]
   11e08:	mov	r4, #0
   11e0c:	sub	r8, r3, #4
   11e10:	ldr	r3, [r8, #4]!
   11e14:	mov	r2, r4
   11e18:	cmp	r3, #0
   11e1c:	mov	r1, r6
   11e20:	add	r0, sp, #40	; 0x28
   11e24:	bne	11f8c <main@@Base+0x34c>
   11e28:	bl	13fb8 <table_get_int@@Base>
   11e2c:	mov	r2, r4
   11e30:	mov	r1, r5
   11e34:	mov	r7, r0
   11e38:	add	r0, sp, #40	; 0x28
   11e3c:	bl	13fb8 <table_get_int@@Base>
   11e40:	cmp	r7, r0
   11e44:	bgt	11fcc <main@@Base+0x38c>
   11e48:	add	sl, r4, #1
   11e4c:	cmp	r9, sl
   11e50:	beq	11e94 <main@@Base+0x254>
   11e54:	mov	r2, r4
   11e58:	mov	r1, r5
   11e5c:	add	r0, sp, #40	; 0x28
   11e60:	bl	13fb8 <table_get_int@@Base>
   11e64:	mov	r2, r4
   11e68:	mov	r1, r6
   11e6c:	sub	r4, r4, #1
   11e70:	mov	r7, r0
   11e74:	add	r0, sp, #40	; 0x28
   11e78:	bl	13fb8 <table_get_int@@Base>
   11e7c:	cmp	r7, r0
   11e80:	bne	11e94 <main@@Base+0x254>
   11e84:	cmn	r4, #1
   11e88:	bne	11e54 <main@@Base+0x214>
   11e8c:	mov	r4, sl
   11e90:	b	11e10 <main@@Base+0x1d0>
   11e94:	mov	r6, r5
   11e98:	ldr	r3, [sp, #24]
   11e9c:	add	r5, r6, #1
   11ea0:	cmp	r3, r5
   11ea4:	bne	11dfc <main@@Base+0x1bc>
   11ea8:	ldr	r4, [sp, #16]
   11eac:	str	fp, [sp, #24]
   11eb0:	cmn	r4, #1
   11eb4:	beq	11f68 <main@@Base+0x328>
   11eb8:	add	r0, sp, #40	; 0x28
   11ebc:	bl	141f0 <table_get_row_length@@Base>
   11ec0:	add	r0, sp, #40	; 0x28
   11ec4:	bl	141f0 <table_get_row_length@@Base>
   11ec8:	mov	r9, r0
   11ecc:	ldr	r0, [pc, #368]	; 12044 <main@@Base+0x404>
   11ed0:	bl	11bc8 <puts@plt>
   11ed4:	cmp	r9, #0
   11ed8:	ble	11f68 <main@@Base+0x328>
   11edc:	ldr	r6, [pc, #356]	; 12048 <main@@Base+0x408>
   11ee0:	ldr	r8, [pc, #356]	; 1204c <main@@Base+0x40c>
   11ee4:	ldr	sl, [pc, #344]	; 12044 <main@@Base+0x404>
   11ee8:	ldr	fp, [sp, #12]
   11eec:	str	r9, [sp, #16]
   11ef0:	mov	r5, #0
   11ef4:	mov	r7, #255	; 0xff
   11ef8:	mov	r9, r4
   11efc:	mov	r4, #0
   11f00:	b	11f28 <main@@Base+0x2e8>
   11f04:	str	r7, [sp]
   11f08:	bl	12b70 <table_cell_to_buffer@@Base>
   11f0c:	cmp	r9, r5
   11f10:	cmpeq	fp, r4
   11f14:	mov	r0, r6
   11f18:	add	r1, sp, #96	; 0x60
   11f1c:	moveq	r0, r8
   11f20:	bl	11b8c <printf@plt>
   11f24:	add	r4, r4, #1
   11f28:	add	r0, sp, #40	; 0x28
   11f2c:	bl	135e8 <table_get_column_length@@Base>
   11f30:	mov	r2, r4
   11f34:	add	r3, sp, #96	; 0x60
   11f38:	mov	r1, r5
   11f3c:	cmp	r4, r0
   11f40:	add	r0, sp, #40	; 0x28
   11f44:	blt	11f04 <main@@Base+0x2c4>
   11f48:	cmp	r9, r5
   11f4c:	beq	12018 <main@@Base+0x3d8>
   11f50:	mov	r0, sl
   11f54:	bl	11bc8 <puts@plt>
   11f58:	ldr	r3, [sp, #16]
   11f5c:	add	r5, r5, #1
   11f60:	cmp	r3, r5
   11f64:	bne	11efc <main@@Base+0x2bc>
   11f68:	add	r0, sp, #40	; 0x28
   11f6c:	bl	12220 <table_destroy@@Base>
   11f70:	ldr	r0, [sp, #28]
   11f74:	bl	11b98 <free@plt>
   11f78:	ldr	r0, [sp, #20]
   11f7c:	bl	11b98 <free@plt>
   11f80:	ldr	r0, [sp, #24]
   11f84:	add	sp, sp, #356	; 0x164
   11f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f8c:	bl	13fb8 <table_get_int@@Base>
   11f90:	mov	r2, r4
   11f94:	mov	r1, r5
   11f98:	mov	r7, r0
   11f9c:	add	r0, sp, #40	; 0x28
   11fa0:	bl	13fb8 <table_get_int@@Base>
   11fa4:	cmp	r7, r0
   11fa8:	bge	11e48 <main@@Base+0x208>
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	ldr	r0, [pc, #148]	; 12050 <main@@Base+0x410>
   11fb8:	bl	11b8c <printf@plt>
   11fbc:	mvn	fp, #0
   11fc0:	str	r4, [sp, #12]
   11fc4:	str	r5, [sp, #16]
   11fc8:	b	11e48 <main@@Base+0x208>
   11fcc:	mov	r2, r4
   11fd0:	mov	r1, r5
   11fd4:	ldr	r0, [pc, #120]	; 12054 <main@@Base+0x414>
   11fd8:	bl	11b8c <printf@plt>
   11fdc:	mvn	fp, #0
   11fe0:	str	r4, [sp, #12]
   11fe4:	str	r5, [sp, #16]
   11fe8:	b	11e48 <main@@Base+0x208>
   11fec:	mov	r1, #4
   11ff0:	bl	11b68 <calloc@plt>
   11ff4:	mov	r1, #4
   11ff8:	str	r0, [sp, #28]
   11ffc:	mov	r0, r9
   12000:	bl	11b68 <calloc@plt>
   12004:	str	r0, [sp, #20]
   12008:	b	11db8 <main@@Base+0x178>
   1200c:	mov	r3, #0
   12010:	str	r3, [sp, #24]
   12014:	b	11f68 <main@@Base+0x328>
   12018:	ldr	r0, [pc, #56]	; 12058 <main@@Base+0x418>
   1201c:	bl	11bc8 <puts@plt>
   12020:	ldr	r3, [sp, #16]
   12024:	add	r5, r9, #1
   12028:	cmp	r3, r5
   1202c:	bne	11efc <main@@Base+0x2bc>
   12030:	b	11f68 <main@@Base+0x328>
   12034:	mvnpl	r8, pc, lsl r5
   12038:	andeq	r5, r1, r8, lsr sl
   1203c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12040:	strbtvs	r6, [r6], -r7, ror #12
   12044:	ldrdeq	r5, [r1], -r4
   12048:	andeq	r5, r1, r0, ror #21
   1204c:	ldrdeq	r5, [r1], -r8
   12050:	andeq	r5, r1, r8, lsl #21
   12054:	andeq	r5, r1, r0, asr #20
   12058:	andeq	r5, r1, r4, ror #21

0001205c <_start@@Base>:
   1205c:	mov	fp, #0
   12060:	mov	lr, #0
   12064:	pop	{r1}		; (ldr r1, [sp], #4)
   12068:	mov	r2, sp
   1206c:	push	{r2}		; (str r2, [sp, #-4]!)
   12070:	push	{r0}		; (str r0, [sp, #-4]!)
   12074:	ldr	ip, [pc, #16]	; 1208c <_start@@Base+0x30>
   12078:	push	{ip}		; (str ip, [sp, #-4]!)
   1207c:	ldr	r0, [pc, #12]	; 12090 <_start@@Base+0x34>
   12080:	ldr	r3, [pc, #12]	; 12094 <_start@@Base+0x38>
   12084:	bl	11be0 <__libc_start_main@plt>
   12088:	bl	11c34 <abort@plt>
   1208c:	andeq	r5, r1, r8, lsr #20
   12090:	andeq	r1, r1, r0, asr #24
   12094:	andeq	r5, r1, r8, asr #19
   12098:	ldr	r3, [pc, #20]	; 120b4 <_start@@Base+0x58>
   1209c:	ldr	r2, [pc, #20]	; 120b8 <_start@@Base+0x5c>
   120a0:	add	r3, pc, r3
   120a4:	ldr	r2, [r3, r2]
   120a8:	cmp	r2, #0
   120ac:	bxeq	lr
   120b0:	b	11bec <__gmon_start__@plt>
   120b4:	andeq	r3, r1, r8, asr pc
   120b8:	andeq	r0, r0, r4, asr r0
   120bc:	ldr	r3, [pc, #28]	; 120e0 <_start@@Base+0x84>
   120c0:	ldr	r0, [pc, #28]	; 120e4 <_start@@Base+0x88>
   120c4:	sub	r3, r3, r0
   120c8:	cmp	r3, #6
   120cc:	bxls	lr
   120d0:	ldr	r3, [pc, #16]	; 120e8 <_start@@Base+0x8c>
   120d4:	cmp	r3, #0
   120d8:	bxeq	lr
   120dc:	bx	r3
   120e0:	andeq	r6, r2, r3, rrx
   120e4:	andeq	r6, r2, r0, rrx
   120e8:	andeq	r0, r0, r0
   120ec:	ldr	r1, [pc, #36]	; 12118 <_start@@Base+0xbc>
   120f0:	ldr	r0, [pc, #36]	; 1211c <_start@@Base+0xc0>
   120f4:	sub	r1, r1, r0
   120f8:	asr	r1, r1, #2
   120fc:	add	r1, r1, r1, lsr #31
   12100:	asrs	r1, r1, #1
   12104:	bxeq	lr
   12108:	ldr	r3, [pc, #16]	; 12120 <_start@@Base+0xc4>
   1210c:	cmp	r3, #0
   12110:	bxeq	lr
   12114:	bx	r3
   12118:	andeq	r6, r2, r0, rrx
   1211c:	andeq	r6, r2, r0, rrx
   12120:	andeq	r0, r0, r0
   12124:	push	{r4, lr}
   12128:	ldr	r4, [pc, #24]	; 12148 <_start@@Base+0xec>
   1212c:	ldrb	r3, [r4]
   12130:	cmp	r3, #0
   12134:	popne	{r4, pc}
   12138:	bl	120bc <_start@@Base+0x60>
   1213c:	mov	r3, #1
   12140:	strb	r3, [r4]
   12144:	pop	{r4, pc}
   12148:	andeq	r6, r2, r0, rrx
   1214c:	ldr	r0, [pc, #40]	; 1217c <_start@@Base+0x120>
   12150:	ldr	r3, [r0]
   12154:	cmp	r3, #0
   12158:	bne	12160 <_start@@Base+0x104>
   1215c:	b	120ec <_start@@Base+0x90>
   12160:	ldr	r3, [pc, #24]	; 12180 <_start@@Base+0x124>
   12164:	cmp	r3, #0
   12168:	beq	1215c <_start@@Base+0x100>
   1216c:	push	{r4, lr}
   12170:	blx	r3
   12174:	pop	{r4, lr}
   12178:	b	120ec <_start@@Base+0x90>
   1217c:	andeq	r5, r2, r4, lsl pc
   12180:	andeq	r0, r0, r0

00012184 <table_new@@Base>:
   12184:	push	{r4, lr}
   12188:	mov	r0, #56	; 0x38
   1218c:	bl	11bd4 <malloc@plt>
   12190:	mov	r2, #0
   12194:	mov	r1, #10
   12198:	mov	ip, #20
   1219c:	str	ip, [r0, #24]
   121a0:	str	r2, [r0]
   121a4:	str	r2, [r0, #4]
   121a8:	str	r2, [r0, #12]
   121ac:	str	r2, [r0, #16]
   121b0:	str	r2, [r0, #20]
   121b4:	str	r2, [r0, #28]
   121b8:	str	r2, [r0, #36]	; 0x24
   121bc:	str	r2, [r0, #40]	; 0x28
   121c0:	str	r2, [r0, #44]	; 0x2c
   121c4:	str	r2, [r0, #32]
   121c8:	str	r2, [r0, #52]	; 0x34
   121cc:	str	r1, [r0, #8]
   121d0:	str	r1, [r0, #48]	; 0x30
   121d4:	pop	{r4, pc}

000121d8 <table_init@@Base>:
   121d8:	mov	r3, #0
   121dc:	mov	r2, #10
   121e0:	mov	r1, #20
   121e4:	str	r1, [r0, #24]
   121e8:	str	r3, [r0]
   121ec:	str	r3, [r0, #4]
   121f0:	str	r3, [r0, #12]
   121f4:	str	r3, [r0, #16]
   121f8:	str	r3, [r0, #20]
   121fc:	str	r3, [r0, #28]
   12200:	str	r3, [r0, #36]	; 0x24
   12204:	str	r3, [r0, #40]	; 0x28
   12208:	str	r3, [r0, #44]	; 0x2c
   1220c:	str	r3, [r0, #32]
   12210:	str	r3, [r0, #52]	; 0x34
   12214:	str	r2, [r0, #8]
   12218:	str	r2, [r0, #48]	; 0x30
   1221c:	bx	lr

00012220 <table_destroy@@Base>:
   12220:	push	{r4, r5, r6, lr}
   12224:	subs	r5, r0, #0
   12228:	popeq	{r4, r5, r6, pc}
   1222c:	mvn	r2, #0
   12230:	mov	r1, r2
   12234:	mov	r3, #64	; 0x40
   12238:	bl	12a88 <table_notify@@Base>
   1223c:	mov	r0, r5
   12240:	bl	141f0 <table_get_row_length@@Base>
   12244:	subs	r6, r0, #0
   12248:	movgt	r4, #0
   1224c:	ble	12268 <table_destroy@@Base+0x48>
   12250:	mov	r1, r4
   12254:	mov	r0, r5
   12258:	add	r4, r4, #1
   1225c:	bl	1419c <table_row_destroy@@Base>
   12260:	cmp	r6, r4
   12264:	bne	12250 <table_destroy@@Base+0x30>
   12268:	ldr	r0, [r5, #16]
   1226c:	cmp	r0, #0
   12270:	beq	12278 <table_destroy@@Base+0x58>
   12274:	bl	11b98 <free@plt>
   12278:	mov	r0, r5
   1227c:	bl	135e8 <table_get_column_length@@Base>
   12280:	subs	r6, r0, #0
   12284:	movgt	r4, #0
   12288:	ble	122a4 <table_destroy@@Base+0x84>
   1228c:	mov	r1, r4
   12290:	mov	r0, r5
   12294:	add	r4, r4, #1
   12298:	bl	135d0 <table_column_destroy@@Base>
   1229c:	cmp	r6, r4
   122a0:	bne	1228c <table_destroy@@Base+0x6c>
   122a4:	ldr	r0, [r5]
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0x94>
   122b0:	bl	11b98 <free@plt>
   122b4:	ldr	r0, [r5, #36]	; 0x24
   122b8:	cmp	r0, #0
   122bc:	beq	122c4 <table_destroy@@Base+0xa4>
   122c0:	bl	11b98 <free@plt>
   122c4:	ldr	r0, [r5, #40]	; 0x28
   122c8:	cmp	r0, #0
   122cc:	beq	122d4 <table_destroy@@Base+0xb4>
   122d0:	bl	11b98 <free@plt>
   122d4:	ldr	r0, [r5, #44]	; 0x2c
   122d8:	cmp	r0, #0
   122dc:	popeq	{r4, r5, r6, pc}
   122e0:	pop	{r4, r5, r6, lr}
   122e4:	b	11b98 <free@plt>

000122e8 <table_delete@@Base>:
   122e8:	push	{r4, lr}
   122ec:	mov	r4, r0
   122f0:	bl	12220 <table_destroy@@Base>
   122f4:	mov	r0, r4
   122f8:	pop	{r4, lr}
   122fc:	b	11b98 <free@plt>

00012300 <table_dupe@@Base>:
   12300:	push	{r4, r5, r6, r7, r8, r9, lr}
   12304:	sub	sp, sp, #20
   12308:	mov	r6, r0
   1230c:	bl	141f0 <table_get_row_length@@Base>
   12310:	mov	r4, #0
   12314:	mov	r9, r0
   12318:	mov	r0, r6
   1231c:	bl	135e8 <table_get_column_length@@Base>
   12320:	mov	r8, r0
   12324:	mov	r0, #56	; 0x38
   12328:	bl	11bd4 <malloc@plt>
   1232c:	mov	r3, #10
   12330:	mov	r2, #20
   12334:	cmp	r8, #0
   12338:	mov	r7, r0
   1233c:	str	r2, [r0, #24]
   12340:	str	r4, [r0]
   12344:	str	r4, [r0, #4]
   12348:	str	r4, [r0, #12]
   1234c:	str	r4, [r0, #16]
   12350:	str	r4, [r0, #20]
   12354:	str	r4, [r0, #28]
   12358:	str	r4, [r0, #36]	; 0x24
   1235c:	str	r4, [r0, #40]	; 0x28
   12360:	str	r4, [r0, #44]	; 0x2c
   12364:	str	r4, [r0, #32]
   12368:	str	r4, [r0, #52]	; 0x34
   1236c:	str	r3, [r0, #8]
   12370:	str	r3, [r0, #48]	; 0x30
   12374:	ble	123b0 <table_dupe@@Base+0xb0>
   12378:	mov	r1, r4
   1237c:	mov	r0, r6
   12380:	bl	13924 <table_get_column_name@@Base>
   12384:	mov	r1, r4
   12388:	add	r4, r4, #1
   1238c:	mov	r5, r0
   12390:	mov	r0, r6
   12394:	bl	13658 <table_get_column_data_type@@Base>
   12398:	mov	r1, r5
   1239c:	mov	r2, r0
   123a0:	mov	r0, r7
   123a4:	bl	1366c <table_add_column@@Base>
   123a8:	cmp	r8, r4
   123ac:	bne	12378 <table_dupe@@Base+0x78>
   123b0:	cmp	r9, #0
   123b4:	movgt	r5, #0
   123b8:	ble	12488 <table_dupe@@Base+0x188>
   123bc:	mov	r0, r7
   123c0:	bl	141f8 <table_add_row@@Base>
   123c4:	cmp	r8, #0
   123c8:	movgt	r4, #0
   123cc:	ble	1247c <table_dupe@@Base+0x17c>
   123d0:	mov	r1, r4
   123d4:	mov	r0, r6
   123d8:	bl	13658 <table_get_column_data_type@@Base>
   123dc:	cmp	r0, #23
   123e0:	ldrls	pc, [pc, r0, lsl #2]
   123e4:	b	12470 <table_dupe@@Base+0x170>
   123e8:	andeq	r2, r1, r4, ror #9
   123ec:	andeq	r2, r1, r8, asr r7
   123f0:	andeq	r2, r1, r0, lsr r7
   123f4:	andeq	r2, r1, r8, lsl #14
   123f8:	andeq	r2, r1, r0, ror #13
   123fc:	strdeq	r2, [r1], -r8
   12400:	ldrdeq	r2, [r1], -r0
   12404:	andeq	r2, r1, r8, lsr #15
   12408:	andeq	r2, r1, r0, lsl #15
   1240c:			; <UNDEFINED> instruction: 0x000126b8
   12410:	muleq	r1, r0, r6
   12414:	andeq	r2, r1, r8, ror #12
   12418:	andeq	r2, r1, r0, asr #12
   1241c:	andeq	r2, r1, r8, lsl r6
   12420:	strdeq	r2, [r1], -r0
   12424:	andeq	r2, r1, r8, asr #11
   12428:	andeq	r2, r1, r4, lsr #11
   1242c:	andeq	r2, r1, r0, lsl #11
   12430:	andeq	r2, r1, ip, asr r5
   12434:	andeq	r2, r1, r4, lsr r5
   12438:	andeq	r2, r1, ip, lsl #10
   1243c:			; <UNDEFINED> instruction: 0x000124bc
   12440:	muleq	r1, r4, r4
   12444:	andeq	r2, r1, r8, asr #8
   12448:	mov	r2, r4
   1244c:	mov	r1, r5
   12450:	mov	r0, r6
   12454:	bl	1416c <table_get_ptr@@Base>
   12458:	add	r3, sp, #12
   1245c:	mov	r2, r4
   12460:	mov	r1, r5
   12464:	str	r0, [sp, #12]
   12468:	mov	r0, r7
   1246c:	bl	1529c <table_set_ptr@@Base>
   12470:	add	r4, r4, #1
   12474:	cmp	r8, r4
   12478:	bne	123d0 <table_dupe@@Base+0xd0>
   1247c:	add	r5, r5, #1
   12480:	cmp	r9, r5
   12484:	bne	123bc <table_dupe@@Base+0xbc>
   12488:	mov	r0, r7
   1248c:	add	sp, sp, #20
   12490:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12494:	mov	r2, r4
   12498:	mov	r1, r5
   1249c:	mov	r0, r6
   124a0:	bl	13fa4 <table_get_bool@@Base>
   124a4:	mov	r2, r4
   124a8:	mov	r1, r5
   124ac:	mov	r3, r0
   124b0:	mov	r0, r7
   124b4:	bl	14710 <table_set_bool@@Base>
   124b8:	b	12470 <table_dupe@@Base+0x170>
   124bc:	mov	r2, r4
   124c0:	mov	r1, r5
   124c4:	mov	r0, r6
   124c8:	bl	1415c <table_get_string@@Base>
   124cc:	mov	r2, r4
   124d0:	mov	r1, r5
   124d4:	mov	r3, r0
   124d8:	mov	r0, r7
   124dc:	bl	15124 <table_set_string@@Base>
   124e0:	b	12470 <table_dupe@@Base+0x170>
   124e4:	mov	r2, r4
   124e8:	mov	r1, r5
   124ec:	mov	r0, r6
   124f0:	bl	13fb8 <table_get_int@@Base>
   124f4:	mov	r2, r4
   124f8:	mov	r1, r5
   124fc:	mov	r3, r0
   12500:	mov	r0, r7
   12504:	bl	1478c <table_set_int@@Base>
   12508:	b	12470 <table_dupe@@Base+0x170>
   1250c:	mov	r2, r4
   12510:	mov	r1, r5
   12514:	mov	r0, r6
   12518:	bl	14148 <table_get_uchar@@Base>
   1251c:	mov	r2, r4
   12520:	mov	r1, r5
   12524:	mov	r3, r0
   12528:	mov	r0, r7
   1252c:	bl	15220 <table_set_uchar@@Base>
   12530:	b	12470 <table_dupe@@Base+0x170>
   12534:	mov	r2, r4
   12538:	mov	r1, r5
   1253c:	mov	r0, r6
   12540:	bl	14134 <table_get_char@@Base>
   12544:	mov	r2, r4
   12548:	mov	r1, r5
   1254c:	mov	r3, r0
   12550:	mov	r0, r7
   12554:	bl	151a4 <table_set_char@@Base>
   12558:	b	12470 <table_dupe@@Base+0x170>
   1255c:	mov	r2, r4
   12560:	mov	r1, r5
   12564:	mov	r0, r6
   12568:	bl	14120 <table_get_ldouble@@Base>
   1256c:	mov	r2, r4
   12570:	mov	r1, r5
   12574:	mov	r0, r7
   12578:	bl	1508c <table_set_ldouble@@Base>
   1257c:	b	12470 <table_dupe@@Base+0x170>
   12580:	mov	r2, r4
   12584:	mov	r1, r5
   12588:	mov	r0, r6
   1258c:	bl	1410c <table_get_double@@Base>
   12590:	mov	r2, r4
   12594:	mov	r1, r5
   12598:	mov	r0, r7
   1259c:	bl	14ff4 <table_set_double@@Base>
   125a0:	b	12470 <table_dupe@@Base+0x170>
   125a4:	mov	r2, r4
   125a8:	mov	r1, r5
   125ac:	mov	r0, r6
   125b0:	bl	140f8 <table_get_float@@Base>
   125b4:	mov	r2, r4
   125b8:	mov	r1, r5
   125bc:	mov	r0, r7
   125c0:	bl	14f78 <table_set_float@@Base>
   125c4:	b	12470 <table_dupe@@Base+0x170>
   125c8:	mov	r2, r4
   125cc:	mov	r1, r5
   125d0:	mov	r0, r6
   125d4:	bl	140e4 <table_get_ullong@@Base>
   125d8:	mov	r2, r4
   125dc:	strd	r0, [sp]
   125e0:	mov	r1, r5
   125e4:	mov	r0, r7
   125e8:	bl	14ef0 <table_set_ullong@@Base>
   125ec:	b	12470 <table_dupe@@Base+0x170>
   125f0:	mov	r2, r4
   125f4:	mov	r1, r5
   125f8:	mov	r0, r6
   125fc:	bl	140d0 <table_get_llong@@Base>
   12600:	mov	r2, r4
   12604:	strd	r0, [sp]
   12608:	mov	r1, r5
   1260c:	mov	r0, r7
   12610:	bl	14e68 <table_set_llong@@Base>
   12614:	b	12470 <table_dupe@@Base+0x170>
   12618:	mov	r2, r4
   1261c:	mov	r1, r5
   12620:	mov	r0, r6
   12624:	bl	140bc <table_get_ulong@@Base>
   12628:	mov	r2, r4
   1262c:	mov	r1, r5
   12630:	mov	r3, r0
   12634:	mov	r0, r7
   12638:	bl	14dec <table_set_ulong@@Base>
   1263c:	b	12470 <table_dupe@@Base+0x170>
   12640:	mov	r2, r4
   12644:	mov	r1, r5
   12648:	mov	r0, r6
   1264c:	bl	140a8 <table_get_long@@Base>
   12650:	mov	r2, r4
   12654:	mov	r1, r5
   12658:	mov	r3, r0
   1265c:	mov	r0, r7
   12660:	bl	14d70 <table_set_long@@Base>
   12664:	b	12470 <table_dupe@@Base+0x170>
   12668:	mov	r2, r4
   1266c:	mov	r1, r5
   12670:	mov	r0, r6
   12674:	bl	14094 <table_get_ushort@@Base>
   12678:	mov	r2, r4
   1267c:	mov	r1, r5
   12680:	mov	r3, r0
   12684:	mov	r0, r7
   12688:	bl	14cf4 <table_set_ushort@@Base>
   1268c:	b	12470 <table_dupe@@Base+0x170>
   12690:	mov	r2, r4
   12694:	mov	r1, r5
   12698:	mov	r0, r6
   1269c:	bl	14080 <table_get_short@@Base>
   126a0:	mov	r2, r4
   126a4:	mov	r1, r5
   126a8:	mov	r3, r0
   126ac:	mov	r0, r7
   126b0:	bl	14c78 <table_set_short@@Base>
   126b4:	b	12470 <table_dupe@@Base+0x170>
   126b8:	mov	r2, r4
   126bc:	mov	r1, r5
   126c0:	mov	r0, r6
   126c4:	bl	1406c <table_get_uint64@@Base>
   126c8:	mov	r2, r4
   126cc:	strd	r0, [sp]
   126d0:	mov	r1, r5
   126d4:	mov	r0, r7
   126d8:	bl	14bf0 <table_set_uint64@@Base>
   126dc:	b	12470 <table_dupe@@Base+0x170>
   126e0:	mov	r2, r4
   126e4:	mov	r1, r5
   126e8:	mov	r0, r6
   126ec:	bl	14008 <table_get_int16@@Base>
   126f0:	mov	r2, r4
   126f4:	mov	r1, r5
   126f8:	mov	r3, r0
   126fc:	mov	r0, r7
   12700:	bl	1497c <table_set_int16@@Base>
   12704:	b	12470 <table_dupe@@Base+0x170>
   12708:	mov	r2, r4
   1270c:	mov	r1, r5
   12710:	mov	r0, r6
   12714:	bl	13ff4 <table_get_uint8@@Base>
   12718:	mov	r2, r4
   1271c:	mov	r1, r5
   12720:	mov	r3, r0
   12724:	mov	r0, r7
   12728:	bl	14900 <table_set_uint8@@Base>
   1272c:	b	12470 <table_dupe@@Base+0x170>
   12730:	mov	r2, r4
   12734:	mov	r1, r5
   12738:	mov	r0, r6
   1273c:	bl	13fe0 <table_get_int8@@Base>
   12740:	mov	r2, r4
   12744:	mov	r1, r5
   12748:	mov	r3, r0
   1274c:	mov	r0, r7
   12750:	bl	14884 <table_set_int8@@Base>
   12754:	b	12470 <table_dupe@@Base+0x170>
   12758:	mov	r2, r4
   1275c:	mov	r1, r5
   12760:	mov	r0, r6
   12764:	bl	13fcc <table_get_uint@@Base>
   12768:	mov	r2, r4
   1276c:	mov	r1, r5
   12770:	mov	r3, r0
   12774:	mov	r0, r7
   12778:	bl	14808 <table_set_uint@@Base>
   1277c:	b	12470 <table_dupe@@Base+0x170>
   12780:	mov	r2, r4
   12784:	mov	r1, r5
   12788:	mov	r0, r6
   1278c:	bl	14058 <table_get_int64@@Base>
   12790:	mov	r2, r4
   12794:	strd	r0, [sp]
   12798:	mov	r1, r5
   1279c:	mov	r0, r7
   127a0:	bl	14b6c <table_set_int64@@Base>
   127a4:	b	12470 <table_dupe@@Base+0x170>
   127a8:	mov	r2, r4
   127ac:	mov	r1, r5
   127b0:	mov	r0, r6
   127b4:	bl	14044 <table_get_uint32@@Base>
   127b8:	mov	r2, r4
   127bc:	mov	r1, r5
   127c0:	mov	r3, r0
   127c4:	mov	r0, r7
   127c8:	bl	14af0 <table_set_uint32@@Base>
   127cc:	b	12470 <table_dupe@@Base+0x170>
   127d0:	mov	r2, r4
   127d4:	mov	r1, r5
   127d8:	mov	r0, r6
   127dc:	bl	14030 <table_get_int32@@Base>
   127e0:	mov	r2, r4
   127e4:	mov	r1, r5
   127e8:	mov	r3, r0
   127ec:	mov	r0, r7
   127f0:	bl	14a74 <table_set_int32@@Base>
   127f4:	b	12470 <table_dupe@@Base+0x170>
   127f8:	mov	r2, r4
   127fc:	mov	r1, r5
   12800:	mov	r0, r6
   12804:	bl	1401c <table_get_uint16@@Base>
   12808:	mov	r2, r4
   1280c:	mov	r1, r5
   12810:	mov	r3, r0
   12814:	mov	r0, r7
   12818:	bl	149f8 <table_set_uint16@@Base>
   1281c:	b	12470 <table_dupe@@Base+0x170>

00012820 <table_get_major_version@@Base>:
   12820:	mov	r0, #0
   12824:	bx	lr

00012828 <table_get_minor_version@@Base>:
   12828:	mov	r0, #0
   1282c:	bx	lr

00012830 <table_get_patch_version@@Base>:
   12830:	mov	r0, #0
   12834:	bx	lr

00012838 <table_get_version@@Base>:
   12838:	ldr	r0, [pc]	; 12840 <table_get_version@@Base+0x8>
   1283c:	bx	lr
   12840:	ldrdeq	r5, [r1], -ip

00012844 <table_get_callback_length@@Base>:
   12844:	ldr	r0, [r0, #32]
   12848:	bx	lr

0001284c <table_register_callback@@Base>:
   1284c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12850:	ldr	r5, [r0, #32]
   12854:	ldr	r7, [r0, #36]	; 0x24
   12858:	cmp	r5, #0
   1285c:	ble	128b4 <table_register_callback@@Base+0x68>
   12860:	mov	ip, #0
   12864:	sub	lr, r7, #4
   12868:	b	12878 <table_register_callback@@Base+0x2c>
   1286c:	add	ip, ip, #1
   12870:	cmp	ip, r5
   12874:	beq	128b4 <table_register_callback@@Base+0x68>
   12878:	ldr	r4, [lr, #4]!
   1287c:	lsl	r6, ip, #2
   12880:	cmp	r1, r4
   12884:	bne	1286c <table_register_callback@@Base+0x20>
   12888:	ldr	r4, [r0, #40]	; 0x28
   1288c:	ldr	r4, [r4, ip, lsl #2]
   12890:	cmp	r2, r4
   12894:	bne	1286c <table_register_callback@@Base+0x20>
   12898:	cmp	ip, #0
   1289c:	beq	128b4 <table_register_callback@@Base+0x68>
   128a0:	ldr	r1, [r0, #44]	; 0x2c
   128a4:	ldr	r2, [r1, r6]
   128a8:	orr	r3, r2, r3
   128ac:	str	r3, [r1, r6]
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b4:	ldr	sl, [r0, #48]	; 0x30
   128b8:	mov	r9, r1
   128bc:	mov	r8, r0
   128c0:	mov	r1, sl
   128c4:	mov	r0, r5
   128c8:	mov	r6, r3
   128cc:	mov	r4, r2
   128d0:	bl	15998 <table_column_sort@@Base+0x4cc>
   128d4:	cmp	r1, #0
   128d8:	beq	12900 <table_register_callback@@Base+0xb4>
   128dc:	str	r9, [r7, r5, lsl #2]
   128e0:	ldr	r3, [r8, #40]	; 0x28
   128e4:	str	r4, [r3, r5, lsl #2]
   128e8:	ldr	r3, [r8, #44]	; 0x2c
   128ec:	str	r6, [r3, r5, lsl #2]
   128f0:	ldr	r3, [r8, #32]
   128f4:	add	r3, r3, #1
   128f8:	str	r3, [r8, #32]
   128fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12900:	ldr	r1, [r8, #52]	; 0x34
   12904:	mov	r0, r7
   12908:	add	r1, sl, r1
   1290c:	str	r1, [r8, #52]	; 0x34
   12910:	lsl	r1, r1, #2
   12914:	bl	11bb0 <realloc@plt>
   12918:	ldr	r1, [r8, #52]	; 0x34
   1291c:	lsl	r1, r1, #2
   12920:	str	r0, [r8, #36]	; 0x24
   12924:	ldr	r0, [r8, #40]	; 0x28
   12928:	bl	11bb0 <realloc@plt>
   1292c:	ldr	r1, [r8, #52]	; 0x34
   12930:	lsl	r1, r1, #2
   12934:	str	r0, [r8, #40]	; 0x28
   12938:	ldr	r0, [r8, #44]	; 0x2c
   1293c:	bl	11bb0 <realloc@plt>
   12940:	ldr	r7, [r8, #36]	; 0x24
   12944:	ldr	r5, [r8, #32]
   12948:	str	r0, [r8, #44]	; 0x2c
   1294c:	b	128dc <table_register_callback@@Base+0x90>

00012950 <table_unregister_callback@@Base>:
   12950:	push	{r4, r5, r6, lr}
   12954:	ldr	lr, [r0, #32]
   12958:	cmp	lr, #0
   1295c:	pople	{r4, r5, r6, pc}
   12960:	ldr	r6, [r0, #36]	; 0x24
   12964:	mov	r3, #0
   12968:	sub	r4, r6, #4
   1296c:	b	1297c <table_unregister_callback@@Base+0x2c>
   12970:	add	r3, r3, #1
   12974:	cmp	r3, lr
   12978:	beq	12a48 <table_unregister_callback@@Base+0xf8>
   1297c:	ldr	r5, [r4, #4]!
   12980:	lsl	ip, r3, #2
   12984:	cmp	r1, r5
   12988:	bne	12970 <table_unregister_callback@@Base+0x20>
   1298c:	ldr	r5, [r0, #40]	; 0x28
   12990:	ldr	r5, [r5, r3, lsl #2]
   12994:	cmp	r2, r5
   12998:	bne	12970 <table_unregister_callback@@Base+0x20>
   1299c:	sub	lr, lr, #1
   129a0:	cmp	lr, r3
   129a4:	bgt	129b0 <table_unregister_callback@@Base+0x60>
   129a8:	b	129ec <table_unregister_callback@@Base+0x9c>
   129ac:	ldr	r6, [r0, #36]	; 0x24
   129b0:	add	r2, ip, #4
   129b4:	add	r3, r3, #1
   129b8:	ldr	r1, [r6, r2]
   129bc:	str	r1, [r6, ip]
   129c0:	ldr	r1, [r0, #40]	; 0x28
   129c4:	ldr	lr, [r1, r2]
   129c8:	str	lr, [r1, ip]
   129cc:	ldr	r1, [r0, #44]	; 0x2c
   129d0:	ldr	lr, [r1, r2]
   129d4:	str	lr, [r1, ip]
   129d8:	ldr	lr, [r0, #32]
   129dc:	mov	ip, r2
   129e0:	sub	lr, lr, #1
   129e4:	cmp	lr, r3
   129e8:	bgt	129ac <table_unregister_callback@@Base+0x5c>
   129ec:	ldr	r6, [r0, #48]	; 0x30
   129f0:	str	lr, [r0, #32]
   129f4:	mov	r4, r0
   129f8:	mov	r1, r6
   129fc:	mov	r0, lr
   12a00:	bl	15998 <table_column_sort@@Base+0x4cc>
   12a04:	cmp	r1, #0
   12a08:	popne	{r4, r5, r6, pc}
   12a0c:	ldr	r5, [r4, #52]	; 0x34
   12a10:	sub	r5, r5, r6
   12a14:	cmp	r5, #0
   12a18:	str	r5, [r4, #52]	; 0x34
   12a1c:	bne	12a4c <table_unregister_callback@@Base+0xfc>
   12a20:	ldr	r0, [r4, #36]	; 0x24
   12a24:	bl	11b98 <free@plt>
   12a28:	ldr	r0, [r4, #40]	; 0x28
   12a2c:	bl	11b98 <free@plt>
   12a30:	ldr	r0, [r4, #44]	; 0x2c
   12a34:	bl	11b98 <free@plt>
   12a38:	str	r5, [r4, #36]	; 0x24
   12a3c:	str	r5, [r4, #40]	; 0x28
   12a40:	str	r5, [r4, #44]	; 0x2c
   12a44:	pop	{r4, r5, r6, pc}
   12a48:	pop	{r4, r5, r6, pc}
   12a4c:	lsl	r1, r5, #2
   12a50:	ldr	r0, [r4, #36]	; 0x24
   12a54:	bl	11bb0 <realloc@plt>
   12a58:	ldr	r1, [r4, #52]	; 0x34
   12a5c:	lsl	r1, r1, #2
   12a60:	str	r0, [r4, #36]	; 0x24
   12a64:	ldr	r0, [r4, #40]	; 0x28
   12a68:	bl	11bb0 <realloc@plt>
   12a6c:	ldr	r1, [r4, #52]	; 0x34
   12a70:	lsl	r1, r1, #2
   12a74:	str	r0, [r4, #40]	; 0x28
   12a78:	ldr	r0, [r4, #44]	; 0x2c
   12a7c:	bl	11bb0 <realloc@plt>
   12a80:	str	r0, [r4, #44]	; 0x2c
   12a84:	pop	{r4, r5, r6, pc}

00012a88 <table_notify@@Base>:
   12a88:	ldr	ip, [r0, #32]
   12a8c:	cmp	ip, #0
   12a90:	bxle	lr
   12a94:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a98:	mov	r6, r3
   12a9c:	sub	sp, sp, #12
   12aa0:	mov	r8, r2
   12aa4:	mov	r7, r1
   12aa8:	mov	r5, r0
   12aac:	mov	r4, #0
   12ab0:	b	12ac0 <table_notify@@Base+0x38>
   12ab4:	add	r4, r4, #1
   12ab8:	cmp	r4, ip
   12abc:	bge	12b08 <table_notify@@Base+0x80>
   12ac0:	ldr	r0, [r5, #44]	; 0x2c
   12ac4:	ldr	r0, [r0, r4, lsl #2]
   12ac8:	tst	r6, r0
   12acc:	beq	12ab4 <table_notify@@Base+0x2c>
   12ad0:	ldr	r2, [r5, #40]	; 0x28
   12ad4:	ldr	r0, [r5, #36]	; 0x24
   12ad8:	mov	r3, r6
   12adc:	ldr	r1, [r2, r4, lsl #2]
   12ae0:	mov	r2, r8
   12ae4:	str	r1, [sp]
   12ae8:	mov	r1, r7
   12aec:	ldr	r9, [r0, r4, lsl #2]
   12af0:	mov	r0, r5
   12af4:	blx	r9
   12af8:	ldr	ip, [r5, #32]
   12afc:	add	r4, r4, #1
   12b00:	cmp	r4, ip
   12b04:	blt	12ac0 <table_notify@@Base+0x38>
   12b08:	add	sp, sp, #12
   12b0c:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012b10 <table_cell_init@@Base>:
   12b10:	push	{r4, lr}
   12b14:	mov	r4, r2
   12b18:	bl	143a8 <table_get_row_ptr@@Base>
   12b1c:	mov	r2, #0
   12b20:	ldr	r3, [r0]
   12b24:	str	r2, [r3, r4, lsl #2]
   12b28:	pop	{r4, pc}

00012b2c <table_cell_destroy@@Base>:
   12b2c:	push	{r4, r5, r6, lr}
   12b30:	mov	r6, r1
   12b34:	mov	r1, r2
   12b38:	mov	r4, r2
   12b3c:	mov	r5, r0
   12b40:	bl	13658 <table_get_column_data_type@@Base>
   12b44:	cmp	r0, #23
   12b48:	popeq	{r4, r5, r6, pc}
   12b4c:	mov	r1, r6
   12b50:	mov	r0, r5
   12b54:	bl	143a8 <table_get_row_ptr@@Base>
   12b58:	ldr	r3, [r0]
   12b5c:	ldr	r0, [r3, r4, lsl #2]
   12b60:	cmp	r0, #0
   12b64:	popeq	{r4, r5, r6, pc}
   12b68:	pop	{r4, r5, r6, lr}
   12b6c:	b	11b98 <free@plt>

00012b70 <table_cell_to_buffer@@Base>:
   12b70:	push	{r4, r5, r6, r7, lr}
   12b74:	mov	r7, r1
   12b78:	sub	sp, sp, #12
   12b7c:	mov	r1, r2
   12b80:	mov	r4, r2
   12b84:	mov	r5, r3
   12b88:	mov	r6, r0
   12b8c:	bl	13658 <table_get_column_data_type@@Base>
   12b90:	cmp	r0, #23
   12b94:	ldrls	pc, [pc, r0, lsl #2]
   12b98:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12b9c:	strdeq	r2, [r1], -r4
   12ba0:	andeq	r2, r1, r0, ror #29
   12ba4:	andeq	r2, r1, ip, asr #29
   12ba8:			; <UNDEFINED> instruction: 0x00012eb8
   12bac:	andeq	r2, r1, r4, lsr #29
   12bb0:	muleq	r1, r0, lr
   12bb4:	andeq	r2, r1, ip, ror lr
   12bb8:	andeq	r2, r1, ip, asr #28
   12bbc:	andeq	r2, r1, r8, lsr lr
   12bc0:	andeq	r2, r1, r4, lsr #28
   12bc4:	strdeq	r2, [r1], -ip
   12bc8:	ldrdeq	r2, [r1], -r4
   12bcc:	andeq	r2, r1, ip, lsr #27
   12bd0:	andeq	r2, r1, r4, lsl #27
   12bd4:	andeq	r2, r1, ip, asr sp
   12bd8:	andeq	r2, r1, r4, lsr sp
   12bdc:	andeq	r2, r1, r8, lsl #26
   12be0:	andeq	r2, r1, r0, ror #25
   12be4:			; <UNDEFINED> instruction: 0x00012cb8
   12be8:	andeq	r2, r1, r4, lsr #25
   12bec:	andeq	r2, r1, ip, ror ip
   12bf0:	andeq	r2, r1, r4, asr ip
   12bf4:	strdeq	r2, [r1], -ip
   12bf8:	andeq	r2, r1, ip, lsr #24
   12bfc:	mov	r2, r4
   12c00:	mov	r1, r7
   12c04:	mov	r0, r6
   12c08:	bl	13fa4 <table_get_bool@@Base>
   12c0c:	mov	r3, r0
   12c10:	ldr	r2, [pc, #752]	; 12f08 <table_cell_to_buffer@@Base+0x398>
   12c14:	mov	r0, r5
   12c18:	ldr	r1, [sp, #32]
   12c1c:	bl	11c10 <snprintf@plt>
   12c20:	mov	r0, #0
   12c24:	add	sp, sp, #12
   12c28:	pop	{r4, r5, r6, r7, pc}
   12c2c:	mov	r2, r4
   12c30:	mov	r1, r7
   12c34:	mov	r0, r6
   12c38:	bl	1416c <table_get_ptr@@Base>
   12c3c:	ldr	r2, [pc, #712]	; 12f0c <table_cell_to_buffer@@Base+0x39c>
   12c40:	ldr	r1, [sp, #32]
   12c44:	mov	r3, r0
   12c48:	mov	r0, r5
   12c4c:	bl	11c10 <snprintf@plt>
   12c50:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12c54:	mov	r2, r4
   12c58:	mov	r1, r7
   12c5c:	mov	r0, r6
   12c60:	bl	1415c <table_get_string@@Base>
   12c64:	ldr	r2, [pc, #676]	; 12f10 <table_cell_to_buffer@@Base+0x3a0>
   12c68:	ldr	r1, [sp, #32]
   12c6c:	mov	r3, r0
   12c70:	mov	r0, r5
   12c74:	bl	11c10 <snprintf@plt>
   12c78:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12c7c:	mov	r2, r4
   12c80:	mov	r1, r7
   12c84:	mov	r0, r6
   12c88:	bl	14148 <table_get_uchar@@Base>
   12c8c:	mov	r3, r0
   12c90:	ldr	r2, [pc, #636]	; 12f14 <table_cell_to_buffer@@Base+0x3a4>
   12c94:	mov	r0, r5
   12c98:	ldr	r1, [sp, #32]
   12c9c:	bl	11c10 <snprintf@plt>
   12ca0:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12ca4:	mov	r2, r4
   12ca8:	mov	r1, r7
   12cac:	mov	r0, r6
   12cb0:	bl	14134 <table_get_char@@Base>
   12cb4:	b	12c8c <table_cell_to_buffer@@Base+0x11c>
   12cb8:	mov	r2, r4
   12cbc:	mov	r1, r7
   12cc0:	mov	r0, r6
   12cc4:	bl	14120 <table_get_ldouble@@Base>
   12cc8:	mov	r0, r5
   12ccc:	ldr	r2, [pc, #580]	; 12f18 <table_cell_to_buffer@@Base+0x3a8>
   12cd0:	ldr	r1, [sp, #32]
   12cd4:	vstr	d0, [sp]
   12cd8:	bl	11c10 <snprintf@plt>
   12cdc:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12ce0:	mov	r2, r4
   12ce4:	mov	r1, r7
   12ce8:	mov	r0, r6
   12cec:	bl	1410c <table_get_double@@Base>
   12cf0:	mov	r0, r5
   12cf4:	ldr	r2, [pc, #544]	; 12f1c <table_cell_to_buffer@@Base+0x3ac>
   12cf8:	ldr	r1, [sp, #32]
   12cfc:	vstr	d0, [sp]
   12d00:	bl	11c10 <snprintf@plt>
   12d04:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12d08:	mov	r2, r4
   12d0c:	mov	r1, r7
   12d10:	mov	r0, r6
   12d14:	bl	140f8 <table_get_float@@Base>
   12d18:	mov	r0, r5
   12d1c:	ldr	r2, [pc, #508]	; 12f20 <table_cell_to_buffer@@Base+0x3b0>
   12d20:	ldr	r1, [sp, #32]
   12d24:	vcvt.f64.f32	d0, s0
   12d28:	vstr	d0, [sp]
   12d2c:	bl	11c10 <snprintf@plt>
   12d30:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12d34:	mov	r2, r4
   12d38:	mov	r1, r7
   12d3c:	mov	r0, r6
   12d40:	bl	140e4 <table_get_ullong@@Base>
   12d44:	strd	r0, [sp]
   12d48:	ldr	r2, [pc, #468]	; 12f24 <table_cell_to_buffer@@Base+0x3b4>
   12d4c:	mov	r0, r5
   12d50:	ldr	r1, [sp, #32]
   12d54:	bl	11c10 <snprintf@plt>
   12d58:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12d5c:	mov	r2, r4
   12d60:	mov	r1, r7
   12d64:	mov	r0, r6
   12d68:	bl	140d0 <table_get_llong@@Base>
   12d6c:	strd	r0, [sp]
   12d70:	ldr	r2, [pc, #432]	; 12f28 <table_cell_to_buffer@@Base+0x3b8>
   12d74:	mov	r0, r5
   12d78:	ldr	r1, [sp, #32]
   12d7c:	bl	11c10 <snprintf@plt>
   12d80:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12d84:	mov	r2, r4
   12d88:	mov	r1, r7
   12d8c:	mov	r0, r6
   12d90:	bl	140bc <table_get_ulong@@Base>
   12d94:	ldr	r2, [pc, #400]	; 12f2c <table_cell_to_buffer@@Base+0x3bc>
   12d98:	ldr	r1, [sp, #32]
   12d9c:	mov	r3, r0
   12da0:	mov	r0, r5
   12da4:	bl	11c10 <snprintf@plt>
   12da8:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12dac:	mov	r2, r4
   12db0:	mov	r1, r7
   12db4:	mov	r0, r6
   12db8:	bl	140a8 <table_get_long@@Base>
   12dbc:	ldr	r2, [pc, #364]	; 12f30 <table_cell_to_buffer@@Base+0x3c0>
   12dc0:	ldr	r1, [sp, #32]
   12dc4:	mov	r3, r0
   12dc8:	mov	r0, r5
   12dcc:	bl	11c10 <snprintf@plt>
   12dd0:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12dd4:	mov	r2, r4
   12dd8:	mov	r1, r7
   12ddc:	mov	r0, r6
   12de0:	bl	14094 <table_get_ushort@@Base>
   12de4:	ldr	r2, [pc, #328]	; 12f34 <table_cell_to_buffer@@Base+0x3c4>
   12de8:	ldr	r1, [sp, #32]
   12dec:	mov	r3, r0
   12df0:	mov	r0, r5
   12df4:	bl	11c10 <snprintf@plt>
   12df8:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12dfc:	mov	r2, r4
   12e00:	mov	r1, r7
   12e04:	mov	r0, r6
   12e08:	bl	14080 <table_get_short@@Base>
   12e0c:	ldr	r2, [pc, #292]	; 12f38 <table_cell_to_buffer@@Base+0x3c8>
   12e10:	ldr	r1, [sp, #32]
   12e14:	mov	r3, r0
   12e18:	mov	r0, r5
   12e1c:	bl	11c10 <snprintf@plt>
   12e20:	b	12c20 <table_cell_to_buffer@@Base+0xb0>
   12e24:	mov	r2, r4
   12e28:	mov	r1, r7
   12e2c:	mov	r0, r6
   12e30:	bl	1406c <table_get_uint64@@Base>
   12e34:	b	12d44 <table_cell_to_buffer@@Base+0x1d4>
   12e38:	mov	r2, r4
   12e3c:	mov	r1, r7
   12e40:	mov	r0, r6
   12e44:	bl	14058 <table_get_int64@@Base>
   12e48:	b	12d6c <table_cell_to_buffer@@Base+0x1fc>
   12e4c:	mov	r2, r4
   12e50:	mov	r1, r7
   12e54:	mov	r0, r6
   12e58:	bl	14044 <table_get_uint32@@Base>
   12e5c:	mov	r3, r0
   12e60:	ldr	r2, [pc, #212]	; 12f3c <table_cell_to_buffer@@Base+0x3cc>
   12e64:	mov	r0, r5
   12e68:	ldr	r1, [sp, #32]
   12e6c:	bl	11c10 <snprintf@plt>
   12e70:	mov	r0, #0
   12e74:	add	sp, sp, #12
   12e78:	pop	{r4, r5, r6, r7, pc}
   12e7c:	mov	r2, r4
   12e80:	mov	r1, r7
   12e84:	mov	r0, r6
   12e88:	bl	14030 <table_get_int32@@Base>
   12e8c:	b	12c0c <table_cell_to_buffer@@Base+0x9c>
   12e90:	mov	r2, r4
   12e94:	mov	r1, r7
   12e98:	mov	r0, r6
   12e9c:	bl	1401c <table_get_uint16@@Base>
   12ea0:	b	12e5c <table_cell_to_buffer@@Base+0x2ec>
   12ea4:	mov	r2, r4
   12ea8:	mov	r1, r7
   12eac:	mov	r0, r6
   12eb0:	bl	14008 <table_get_int16@@Base>
   12eb4:	b	12c0c <table_cell_to_buffer@@Base+0x9c>
   12eb8:	mov	r2, r4
   12ebc:	mov	r1, r7
   12ec0:	mov	r0, r6
   12ec4:	bl	13ff4 <table_get_uint8@@Base>
   12ec8:	b	12e5c <table_cell_to_buffer@@Base+0x2ec>
   12ecc:	mov	r2, r4
   12ed0:	mov	r1, r7
   12ed4:	mov	r0, r6
   12ed8:	bl	13fe0 <table_get_int8@@Base>
   12edc:	b	12c0c <table_cell_to_buffer@@Base+0x9c>
   12ee0:	mov	r2, r4
   12ee4:	mov	r1, r7
   12ee8:	mov	r0, r6
   12eec:	bl	13fcc <table_get_uint@@Base>
   12ef0:	b	12e5c <table_cell_to_buffer@@Base+0x2ec>
   12ef4:	mov	r2, r4
   12ef8:	mov	r1, r7
   12efc:	mov	r0, r6
   12f00:	bl	13fb8 <table_get_int@@Base>
   12f04:	b	12c0c <table_cell_to_buffer@@Base+0x9c>
   12f08:	andeq	r5, r1, ip, lsr sl
   12f0c:	andeq	r5, r1, r0, lsr #22
   12f10:	andeq	r5, r1, ip, lsl #22
   12f14:	andeq	r5, r1, ip, lsl fp
   12f18:	andeq	r5, r1, r8, lsl fp
   12f1c:	andeq	r5, r1, r4, lsl fp
   12f20:	andeq	r5, r1, r0, lsl fp
   12f24:	strdeq	r5, [r1], -r4
   12f28:	andeq	r5, r1, ip, ror #21
   12f2c:	andeq	r5, r1, r8, lsl #22
   12f30:	andeq	r5, r1, r4, lsl #22
   12f34:	andeq	r5, r1, r0, lsl #22
   12f38:	strdeq	r5, [r1], -ip
   12f3c:	andeq	r5, r1, r8, ror #21

00012f40 <table_cell_from_buffer@@Base>:
   12f40:	push	{r4, r5, r6, r7, r8, lr}
   12f44:	mov	r8, r1
   12f48:	sub	sp, sp, #264	; 0x108
   12f4c:	mov	r1, r2
   12f50:	mov	r4, r2
   12f54:	mov	r6, r3
   12f58:	mov	r5, r0
   12f5c:	bl	13658 <table_get_column_data_type@@Base>
   12f60:	cmp	r0, #23
   12f64:	ldrls	pc, [pc, r0, lsl #2]
   12f68:	b	134f0 <table_cell_from_buffer@@Base+0x5b0>
   12f6c:	andeq	r3, r1, r8, lsl #9
   12f70:	andeq	r3, r1, r4, asr r4
   12f74:	andeq	r3, r1, r0, lsr #8
   12f78:	andeq	r3, r1, ip, ror #7
   12f7c:			; <UNDEFINED> instruction: 0x000133b8
   12f80:	andeq	r3, r1, r4, lsl #7
   12f84:	andeq	r3, r1, r0, asr r3
   12f88:	andeq	r3, r1, ip, lsl r3
   12f8c:	andeq	r3, r1, r4, ror #5
   12f90:	andeq	r3, r1, ip, lsr #5
   12f94:	andeq	r3, r1, r8, ror r2
   12f98:	andeq	r3, r1, r4, asr #4
   12f9c:	andeq	r3, r1, r0, lsl r2
   12fa0:	ldrdeq	r3, [r1], -ip
   12fa4:	andeq	r3, r1, r4, lsr #3
   12fa8:	andeq	r3, r1, ip, ror #2
   12fac:	andeq	r3, r1, r4, lsl #2
   12fb0:	ldrdeq	r3, [r1], -r0
   12fb4:	andeq	r3, r1, r8, lsr r1
   12fb8:	andeq	r3, r1, r4, lsr r0
   12fbc:	muleq	r1, ip, r0
   12fc0:	andeq	r3, r1, r8, rrx
   12fc4:	strdeq	r2, [r1], -r4
   12fc8:	andeq	r2, r1, ip, asr #31
   12fcc:	mov	r0, r6
   12fd0:	add	r2, sp, #8
   12fd4:	ldr	r1, [pc, #1308]	; 134f8 <table_cell_from_buffer@@Base+0x5b8>
   12fd8:	bl	11c1c <__isoc99_sscanf@plt>
   12fdc:	cmp	r0, #1
   12fe0:	beq	134d4 <table_cell_from_buffer@@Base+0x594>
   12fe4:	mvn	r6, #0
   12fe8:	mov	r0, r6
   12fec:	add	sp, sp, #264	; 0x108
   12ff0:	pop	{r4, r5, r6, r7, r8, pc}
   12ff4:	mov	r0, r6
   12ff8:	add	r2, sp, #8
   12ffc:	ldr	r1, [pc, #1272]	; 134fc <table_cell_from_buffer@@Base+0x5bc>
   13000:	bl	11c1c <__isoc99_sscanf@plt>
   13004:	cmp	r0, #1
   13008:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1300c:	ldr	r6, [sp, #8]
   13010:	cmp	r6, #0
   13014:	beq	134bc <table_cell_from_buffer@@Base+0x57c>
   13018:	mov	r3, r0
   1301c:	mov	r2, r4
   13020:	mov	r1, r8
   13024:	mov	r0, r5
   13028:	bl	14710 <table_set_bool@@Base>
   1302c:	mov	r6, #0
   13030:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13034:	mov	r0, r6
   13038:	add	r2, sp, #8
   1303c:	ldr	r1, [pc, #1212]	; 13500 <table_cell_from_buffer@@Base+0x5c0>
   13040:	bl	11c1c <__isoc99_sscanf@plt>
   13044:	cmp	r0, #1
   13048:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1304c:	mov	r2, r4
   13050:	mov	r1, r8
   13054:	mov	r0, r5
   13058:	ldrb	r3, [sp, #8]
   1305c:	bl	151a4 <table_set_char@@Base>
   13060:	mov	r6, #0
   13064:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13068:	mov	r0, r6
   1306c:	add	r2, sp, #8
   13070:	ldr	r1, [pc, #1164]	; 13504 <table_cell_from_buffer@@Base+0x5c4>
   13074:	bl	11c1c <__isoc99_sscanf@plt>
   13078:	cmp	r0, #1
   1307c:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13080:	add	r3, sp, #8
   13084:	mov	r2, r4
   13088:	mov	r1, r8
   1308c:	mov	r0, r5
   13090:	bl	15124 <table_set_string@@Base>
   13094:	mov	r6, #0
   13098:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   1309c:	mov	r0, r6
   130a0:	add	r2, sp, #8
   130a4:	ldr	r1, [pc, #1108]	; 13500 <table_cell_from_buffer@@Base+0x5c0>
   130a8:	bl	11c1c <__isoc99_sscanf@plt>
   130ac:	cmp	r0, #1
   130b0:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   130b4:	mov	r2, r4
   130b8:	mov	r1, r8
   130bc:	mov	r0, r5
   130c0:	ldrb	r3, [sp, #8]
   130c4:	bl	15220 <table_set_uchar@@Base>
   130c8:	mov	r6, #0
   130cc:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   130d0:	mov	r0, r6
   130d4:	add	r2, sp, #8
   130d8:	ldr	r1, [pc, #1064]	; 13508 <table_cell_from_buffer@@Base+0x5c8>
   130dc:	bl	11c1c <__isoc99_sscanf@plt>
   130e0:	cmp	r0, #1
   130e4:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   130e8:	mov	r2, r4
   130ec:	mov	r1, r8
   130f0:	mov	r0, r5
   130f4:	vldr	d0, [sp, #8]
   130f8:	bl	14ff4 <table_set_double@@Base>
   130fc:	mov	r6, #0
   13100:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13104:	mov	r0, r6
   13108:	add	r2, sp, #8
   1310c:	ldr	r1, [pc, #1016]	; 1350c <table_cell_from_buffer@@Base+0x5cc>
   13110:	bl	11c1c <__isoc99_sscanf@plt>
   13114:	cmp	r0, #1
   13118:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1311c:	mov	r2, r4
   13120:	mov	r1, r8
   13124:	mov	r0, r5
   13128:	vldr	s0, [sp, #8]
   1312c:	bl	14f78 <table_set_float@@Base>
   13130:	mov	r6, #0
   13134:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13138:	mov	r0, r6
   1313c:	add	r2, sp, #8
   13140:	ldr	r1, [pc, #968]	; 13510 <table_cell_from_buffer@@Base+0x5d0>
   13144:	bl	11c1c <__isoc99_sscanf@plt>
   13148:	cmp	r0, #1
   1314c:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13150:	mov	r2, r4
   13154:	mov	r1, r8
   13158:	mov	r0, r5
   1315c:	vldr	d0, [sp, #8]
   13160:	bl	1508c <table_set_ldouble@@Base>
   13164:	mov	r6, #0
   13168:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   1316c:	mov	r0, r6
   13170:	add	r2, sp, #8
   13174:	ldr	r1, [pc, #920]	; 13514 <table_cell_from_buffer@@Base+0x5d4>
   13178:	bl	11c1c <__isoc99_sscanf@plt>
   1317c:	cmp	r0, #1
   13180:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13184:	ldrd	r6, [sp, #8]
   13188:	mov	r2, r4
   1318c:	mov	r1, r8
   13190:	strd	r6, [sp]
   13194:	mov	r0, r5
   13198:	bl	14ef0 <table_set_ullong@@Base>
   1319c:	mov	r6, #0
   131a0:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   131a4:	mov	r0, r6
   131a8:	add	r2, sp, #8
   131ac:	ldr	r1, [pc, #868]	; 13518 <table_cell_from_buffer@@Base+0x5d8>
   131b0:	bl	11c1c <__isoc99_sscanf@plt>
   131b4:	cmp	r0, #1
   131b8:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   131bc:	ldrd	r6, [sp, #8]
   131c0:	mov	r2, r4
   131c4:	mov	r1, r8
   131c8:	strd	r6, [sp]
   131cc:	mov	r0, r5
   131d0:	bl	14e68 <table_set_llong@@Base>
   131d4:	mov	r6, #0
   131d8:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   131dc:	mov	r0, r6
   131e0:	add	r2, sp, #8
   131e4:	ldr	r1, [pc, #816]	; 1351c <table_cell_from_buffer@@Base+0x5dc>
   131e8:	bl	11c1c <__isoc99_sscanf@plt>
   131ec:	cmp	r0, #1
   131f0:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   131f4:	mov	r2, r4
   131f8:	mov	r1, r8
   131fc:	mov	r0, r5
   13200:	ldr	r3, [sp, #8]
   13204:	bl	14dec <table_set_ulong@@Base>
   13208:	mov	r6, #0
   1320c:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13210:	mov	r0, r6
   13214:	add	r2, sp, #8
   13218:	ldr	r1, [pc, #768]	; 13520 <table_cell_from_buffer@@Base+0x5e0>
   1321c:	bl	11c1c <__isoc99_sscanf@plt>
   13220:	cmp	r0, #1
   13224:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13228:	mov	r2, r4
   1322c:	mov	r1, r8
   13230:	mov	r0, r5
   13234:	ldr	r3, [sp, #8]
   13238:	bl	14d70 <table_set_long@@Base>
   1323c:	mov	r6, #0
   13240:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13244:	mov	r0, r6
   13248:	add	r2, sp, #8
   1324c:	ldr	r1, [pc, #720]	; 13524 <table_cell_from_buffer@@Base+0x5e4>
   13250:	bl	11c1c <__isoc99_sscanf@plt>
   13254:	cmp	r0, #1
   13258:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1325c:	ldrh	r3, [sp, #8]
   13260:	mov	r2, r4
   13264:	mov	r1, r8
   13268:	mov	r0, r5
   1326c:	bl	14cf4 <table_set_ushort@@Base>
   13270:	mov	r6, #0
   13274:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13278:	mov	r0, r6
   1327c:	add	r2, sp, #8
   13280:	ldr	r1, [pc, #672]	; 13528 <table_cell_from_buffer@@Base+0x5e8>
   13284:	bl	11c1c <__isoc99_sscanf@plt>
   13288:	cmp	r0, #1
   1328c:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13290:	ldrsh	r3, [sp, #8]
   13294:	mov	r2, r4
   13298:	mov	r1, r8
   1329c:	mov	r0, r5
   132a0:	bl	14c78 <table_set_short@@Base>
   132a4:	mov	r6, #0
   132a8:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   132ac:	mov	r0, r6
   132b0:	add	r2, sp, #8
   132b4:	ldr	r1, [pc, #600]	; 13514 <table_cell_from_buffer@@Base+0x5d4>
   132b8:	bl	11c1c <__isoc99_sscanf@plt>
   132bc:	cmp	r0, #1
   132c0:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   132c4:	ldrd	r6, [sp, #8]
   132c8:	mov	r2, r4
   132cc:	mov	r1, r8
   132d0:	strd	r6, [sp]
   132d4:	mov	r0, r5
   132d8:	bl	14bf0 <table_set_uint64@@Base>
   132dc:	mov	r6, #0
   132e0:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   132e4:	mov	r0, r6
   132e8:	add	r2, sp, #8
   132ec:	ldr	r1, [pc, #548]	; 13518 <table_cell_from_buffer@@Base+0x5d8>
   132f0:	bl	11c1c <__isoc99_sscanf@plt>
   132f4:	cmp	r0, #1
   132f8:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   132fc:	ldrd	r6, [sp, #8]
   13300:	mov	r2, r4
   13304:	mov	r1, r8
   13308:	strd	r6, [sp]
   1330c:	mov	r0, r5
   13310:	bl	14b6c <table_set_int64@@Base>
   13314:	mov	r6, #0
   13318:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   1331c:	mov	r0, r6
   13320:	add	r2, sp, #8
   13324:	ldr	r1, [pc, #512]	; 1352c <table_cell_from_buffer@@Base+0x5ec>
   13328:	bl	11c1c <__isoc99_sscanf@plt>
   1332c:	cmp	r0, #1
   13330:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13334:	mov	r2, r4
   13338:	mov	r1, r8
   1333c:	mov	r0, r5
   13340:	ldr	r3, [sp, #8]
   13344:	bl	14af0 <table_set_uint32@@Base>
   13348:	mov	r6, #0
   1334c:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13350:	mov	r0, r6
   13354:	add	r2, sp, #8
   13358:	ldr	r1, [pc, #412]	; 134fc <table_cell_from_buffer@@Base+0x5bc>
   1335c:	bl	11c1c <__isoc99_sscanf@plt>
   13360:	cmp	r0, #1
   13364:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13368:	mov	r2, r4
   1336c:	mov	r1, r8
   13370:	mov	r0, r5
   13374:	ldr	r3, [sp, #8]
   13378:	bl	14a74 <table_set_int32@@Base>
   1337c:	mov	r6, #0
   13380:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13384:	mov	r0, r6
   13388:	add	r2, sp, #8
   1338c:	ldr	r1, [pc, #400]	; 13524 <table_cell_from_buffer@@Base+0x5e4>
   13390:	bl	11c1c <__isoc99_sscanf@plt>
   13394:	cmp	r0, #1
   13398:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1339c:	ldrh	r3, [sp, #8]
   133a0:	mov	r2, r4
   133a4:	mov	r1, r8
   133a8:	mov	r0, r5
   133ac:	bl	149f8 <table_set_uint16@@Base>
   133b0:	mov	r6, #0
   133b4:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   133b8:	mov	r0, r6
   133bc:	add	r2, sp, #8
   133c0:	ldr	r1, [pc, #352]	; 13528 <table_cell_from_buffer@@Base+0x5e8>
   133c4:	bl	11c1c <__isoc99_sscanf@plt>
   133c8:	cmp	r0, #1
   133cc:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   133d0:	ldrsh	r3, [sp, #8]
   133d4:	mov	r2, r4
   133d8:	mov	r1, r8
   133dc:	mov	r0, r5
   133e0:	bl	1497c <table_set_int16@@Base>
   133e4:	mov	r6, #0
   133e8:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   133ec:	mov	r0, r6
   133f0:	add	r2, sp, #8
   133f4:	ldr	r1, [pc, #308]	; 13530 <table_cell_from_buffer@@Base+0x5f0>
   133f8:	bl	11c1c <__isoc99_sscanf@plt>
   133fc:	cmp	r0, #1
   13400:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13404:	mov	r2, r4
   13408:	mov	r1, r8
   1340c:	mov	r0, r5
   13410:	ldrb	r3, [sp, #8]
   13414:	bl	14900 <table_set_uint8@@Base>
   13418:	mov	r6, #0
   1341c:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13420:	mov	r0, r6
   13424:	add	r2, sp, #8
   13428:	ldr	r1, [pc, #260]	; 13534 <table_cell_from_buffer@@Base+0x5f4>
   1342c:	bl	11c1c <__isoc99_sscanf@plt>
   13430:	cmp	r0, #1
   13434:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   13438:	ldrsb	r3, [sp, #8]
   1343c:	mov	r2, r4
   13440:	mov	r1, r8
   13444:	mov	r0, r5
   13448:	bl	14884 <table_set_int8@@Base>
   1344c:	mov	r6, #0
   13450:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13454:	mov	r0, r6
   13458:	add	r2, sp, #8
   1345c:	ldr	r1, [pc, #200]	; 1352c <table_cell_from_buffer@@Base+0x5ec>
   13460:	bl	11c1c <__isoc99_sscanf@plt>
   13464:	cmp	r0, #1
   13468:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   1346c:	mov	r2, r4
   13470:	mov	r1, r8
   13474:	mov	r0, r5
   13478:	ldr	r3, [sp, #8]
   1347c:	bl	14808 <table_set_uint@@Base>
   13480:	mov	r6, #0
   13484:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   13488:	mov	r0, r6
   1348c:	add	r2, sp, #8
   13490:	ldr	r1, [pc, #100]	; 134fc <table_cell_from_buffer@@Base+0x5bc>
   13494:	bl	11c1c <__isoc99_sscanf@plt>
   13498:	cmp	r0, #1
   1349c:	bne	12fe4 <table_cell_from_buffer@@Base+0xa4>
   134a0:	mov	r2, r4
   134a4:	mov	r1, r8
   134a8:	mov	r0, r5
   134ac:	ldr	r3, [sp, #8]
   134b0:	bl	1478c <table_set_int@@Base>
   134b4:	mov	r6, #0
   134b8:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   134bc:	mov	r2, r4
   134c0:	mov	r1, r8
   134c4:	mov	r0, r5
   134c8:	mov	r3, r6
   134cc:	bl	14710 <table_set_bool@@Base>
   134d0:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   134d4:	mov	r2, r4
   134d8:	mov	r1, r8
   134dc:	mov	r0, r5
   134e0:	ldr	r3, [sp, #8]
   134e4:	bl	1529c <table_set_ptr@@Base>
   134e8:	mov	r6, #0
   134ec:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   134f0:	mov	r6, #0
   134f4:	b	12fe8 <table_cell_from_buffer@@Base+0xa8>
   134f8:	andeq	r5, r1, r0, lsr #22
   134fc:	andeq	r5, r1, ip, lsr sl
   13500:	andeq	r5, r1, ip, lsl fp
   13504:	andeq	r5, r1, ip, lsl #22
   13508:	andeq	r5, r1, r4, lsl fp
   1350c:	andeq	r5, r1, r0, lsl fp
   13510:	andeq	r5, r1, r8, lsl fp
   13514:	strdeq	r5, [r1], -r4
   13518:	andeq	r5, r1, ip, ror #21
   1351c:	andeq	r5, r1, r8, lsl #22
   13520:	andeq	r5, r1, r4, lsl #22
   13524:	andeq	r5, r1, r0, lsl #22
   13528:	strdeq	r5, [r1], -ip
   1352c:	andeq	r5, r1, r8, ror #21
   13530:	andeq	r5, r1, ip, lsr #22
   13534:	andeq	r5, r1, r4, lsr #22

00013538 <table_cell_nullify@@Base>:
   13538:	push	{r4, r5, r6, lr}
   1353c:	mov	r5, r2
   13540:	bl	143a8 <table_get_row_ptr@@Base>
   13544:	ldr	r4, [r0]
   13548:	ldr	r0, [r4, r5, lsl #2]
   1354c:	cmp	r0, #0
   13550:	beq	13560 <table_cell_nullify@@Base+0x28>
   13554:	bl	11b98 <free@plt>
   13558:	mov	r3, #0
   1355c:	str	r3, [r4, r5, lsl #2]
   13560:	mov	r0, #0
   13564:	pop	{r4, r5, r6, pc}

00013568 <table_get_cell_ptr@@Base>:
   13568:	push	{r4, lr}
   1356c:	mov	r4, r2
   13570:	bl	143a8 <table_get_row_ptr@@Base>
   13574:	ldr	r0, [r0]
   13578:	add	r0, r0, r4, lsl #2
   1357c:	pop	{r4, pc}

00013580 <table_column_init@@Base>:
   13580:	add	r1, r1, r1, lsl #1
   13584:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13588:	lsl	r4, r1, #2
   1358c:	ldr	r6, [r0]
   13590:	mov	r0, r2
   13594:	mov	r9, r3
   13598:	mov	r7, r2
   1359c:	bl	11bf8 <strlen@plt>
   135a0:	ldr	r8, [sp, #32]
   135a4:	add	r5, r6, r4
   135a8:	add	r0, r0, #1
   135ac:	bl	11bd4 <malloc@plt>
   135b0:	subs	r3, r0, #0
   135b4:	str	r0, [r6, r4]
   135b8:	beq	135c4 <table_column_init@@Base+0x44>
   135bc:	mov	r1, r7
   135c0:	bl	11bbc <strcpy@plt>
   135c4:	str	r9, [r5, #4]
   135c8:	str	r8, [r5, #8]
   135cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000135d0 <table_column_destroy@@Base>:
   135d0:	ldr	r3, [r0]
   135d4:	add	r1, r1, r1, lsl #1
   135d8:	ldr	r0, [r3, r1, lsl #2]
   135dc:	cmp	r0, #0
   135e0:	bxeq	lr
   135e4:	b	11b98 <free@plt>

000135e8 <table_get_column_length@@Base>:
   135e8:	ldr	r0, [r0, #4]
   135ec:	bx	lr

000135f0 <table_get_column@@Base>:
   135f0:	push	{r4, r5, r6, r7, r8, lr}
   135f4:	ldr	r7, [r0, #4]
   135f8:	cmp	r7, #0
   135fc:	ble	1364c <table_get_column@@Base+0x5c>
   13600:	mov	r4, #0
   13604:	mov	r6, r1
   13608:	ldr	r8, [r0]
   1360c:	mov	r5, r4
   13610:	b	13620 <table_get_column@@Base+0x30>
   13614:	add	r5, r5, #1
   13618:	cmp	r7, r5
   1361c:	beq	13640 <table_get_column@@Base+0x50>
   13620:	ldr	r0, [r8, r4]
   13624:	mov	r1, r6
   13628:	bl	11b80 <strcmp@plt>
   1362c:	add	r4, r4, #12
   13630:	cmp	r0, #0
   13634:	bne	13614 <table_get_column@@Base+0x24>
   13638:	mov	r0, r5
   1363c:	pop	{r4, r5, r6, r7, r8, pc}
   13640:	mvn	r5, #0
   13644:	mov	r0, r5
   13648:	pop	{r4, r5, r6, r7, r8, pc}
   1364c:	mvneq	r5, #0
   13650:	movne	r5, #0
   13654:	b	13638 <table_get_column@@Base+0x48>

00013658 <table_get_column_data_type@@Base>:
   13658:	ldr	r3, [r0]
   1365c:	add	r1, r1, r1, lsl #1
   13660:	add	r3, r3, r1, lsl #2
   13664:	ldr	r0, [r3, #4]
   13668:	bx	lr

0001366c <table_add_column@@Base>:
   1366c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13670:	mov	r5, r0
   13674:	ldmib	r0, {r0, r6}
   13678:	sub	sp, sp, #12
   1367c:	mov	r9, r1
   13680:	mov	r1, r6
   13684:	mov	r8, r2
   13688:	bl	15998 <table_column_sort@@Base+0x4cc>
   1368c:	subs	r4, r1, #0
   13690:	beq	13740 <table_add_column@@Base+0xd4>
   13694:	mov	r0, r5
   13698:	bl	141f0 <table_get_row_length@@Base>
   1369c:	ldr	r6, [r5, #4]
   136a0:	add	r4, r6, r6, lsl #1
   136a4:	lsl	r4, r4, #2
   136a8:	mov	r7, r0
   136ac:	mov	r0, r8
   136b0:	bl	13f7c <table_get_default_compare_function_for_data_type@@Base>
   136b4:	mov	fp, r0
   136b8:	mov	r0, r9
   136bc:	bl	11bf8 <strlen@plt>
   136c0:	ldr	r3, [r5]
   136c4:	add	sl, r3, r4
   136c8:	str	r3, [sp, #4]
   136cc:	add	r0, r0, #1
   136d0:	bl	11bd4 <malloc@plt>
   136d4:	ldr	r3, [sp, #4]
   136d8:	cmp	r0, #0
   136dc:	str	r0, [r3, r4]
   136e0:	beq	136ec <table_add_column@@Base+0x80>
   136e4:	mov	r1, r9
   136e8:	bl	11bbc <strcpy@plt>
   136ec:	cmp	r7, #0
   136f0:	stmib	sl, {r8, fp}
   136f4:	ble	13718 <table_add_column@@Base+0xac>
   136f8:	mov	r4, #0
   136fc:	mov	r1, r4
   13700:	mov	r2, r6
   13704:	mov	r0, r5
   13708:	add	r4, r4, #1
   1370c:	bl	12b10 <table_cell_init@@Base>
   13710:	cmp	r7, r4
   13714:	bne	136fc <table_add_column@@Base+0x90>
   13718:	mov	r0, r5
   1371c:	mov	r3, #8
   13720:	ldr	r2, [r5, #4]
   13724:	mvn	r1, #0
   13728:	bl	12a88 <table_notify@@Base>
   1372c:	ldr	r0, [r5, #4]
   13730:	add	r3, r0, #1
   13734:	str	r3, [r5, #4]
   13738:	add	sp, sp, #12
   1373c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13740:	ldr	r1, [r5, #12]
   13744:	ldr	r0, [r5]
   13748:	add	r6, r6, r1
   1374c:	str	r6, [r5, #12]
   13750:	add	r6, r6, r6, lsl #1
   13754:	lsl	r1, r6, #2
   13758:	bl	11bb0 <realloc@plt>
   1375c:	str	r0, [r5]
   13760:	mov	r0, r5
   13764:	bl	141f0 <table_get_row_length@@Base>
   13768:	subs	r7, r0, #0
   1376c:	ble	13694 <table_add_column@@Base+0x28>
   13770:	mov	r1, r4
   13774:	mov	r0, r5
   13778:	bl	143a8 <table_get_row_ptr@@Base>
   1377c:	ldr	r1, [r5, #12]
   13780:	add	r4, r4, #1
   13784:	lsl	r1, r1, #2
   13788:	mov	r6, r0
   1378c:	ldr	r0, [r0]
   13790:	bl	11bb0 <realloc@plt>
   13794:	cmp	r7, r4
   13798:	str	r0, [r6]
   1379c:	bne	13770 <table_add_column@@Base+0x104>
   137a0:	b	13694 <table_add_column@@Base+0x28>

000137a4 <table_remove_column@@Base>:
   137a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137a8:	add	r5, r1, r1, lsl #1
   137ac:	ldr	r3, [r0]
   137b0:	lsl	r5, r5, #2
   137b4:	mov	r6, r0
   137b8:	ldr	r0, [r3, r5]
   137bc:	mov	r9, r1
   137c0:	cmp	r0, #0
   137c4:	beq	137cc <table_remove_column@@Base+0x28>
   137c8:	bl	11b98 <free@plt>
   137cc:	ldr	r4, [r6, #4]
   137d0:	sub	r4, r4, #1
   137d4:	cmp	r9, r4
   137d8:	movlt	r1, r9
   137dc:	bge	13818 <table_remove_column@@Base+0x74>
   137e0:	ldr	r3, [r6]
   137e4:	add	r0, r5, #12
   137e8:	add	r2, r3, r0
   137ec:	add	r1, r1, #1
   137f0:	ldr	lr, [r2, #4]
   137f4:	ldr	ip, [r2, #8]
   137f8:	ldr	r7, [r2]
   137fc:	add	r2, r3, r5
   13800:	cmp	r1, r4
   13804:	str	r7, [r3, r5]
   13808:	str	lr, [r2, #4]
   1380c:	str	ip, [r2, #8]
   13810:	mov	r5, r0
   13814:	bne	137e0 <table_remove_column@@Base+0x3c>
   13818:	mov	r0, r6
   1381c:	bl	141f0 <table_get_row_length@@Base>
   13820:	subs	r7, r0, #0
   13824:	lslgt	r8, r9, #2
   13828:	movgt	r5, #0
   1382c:	ble	13888 <table_remove_column@@Base+0xe4>
   13830:	mov	r2, r9
   13834:	mov	r1, r5
   13838:	mov	r0, r6
   1383c:	bl	12b2c <table_cell_destroy@@Base>
   13840:	mov	r1, r5
   13844:	mov	r0, r6
   13848:	bl	143a8 <table_get_row_ptr@@Base>
   1384c:	cmp	r9, r4
   13850:	movlt	r2, r8
   13854:	movlt	r3, r9
   13858:	bge	1387c <table_remove_column@@Base+0xd8>
   1385c:	ldr	ip, [r0]
   13860:	add	r1, r2, #4
   13864:	add	r3, r3, #1
   13868:	ldr	lr, [ip, r1]
   1386c:	cmp	r3, r4
   13870:	str	lr, [ip, r2]
   13874:	mov	r2, r1
   13878:	bne	1385c <table_remove_column@@Base+0xb8>
   1387c:	add	r5, r5, #1
   13880:	cmp	r7, r5
   13884:	bne	13830 <table_remove_column@@Base+0x8c>
   13888:	ldmib	r6, {r0, r5}
   1388c:	sub	r0, r0, #1
   13890:	str	r0, [r6, #4]
   13894:	mov	r1, r5
   13898:	bl	15998 <table_column_sort@@Base+0x4cc>
   1389c:	subs	r4, r1, #0
   138a0:	beq	138c0 <table_remove_column@@Base+0x11c>
   138a4:	mov	r0, r6
   138a8:	mov	r2, r9
   138ac:	mov	r3, #16
   138b0:	mvn	r1, #0
   138b4:	bl	12a88 <table_notify@@Base>
   138b8:	mov	r0, #0
   138bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138c0:	ldr	r1, [r6, #12]
   138c4:	ldr	r0, [r6]
   138c8:	sub	r1, r1, r5
   138cc:	str	r1, [r6, #12]
   138d0:	add	r1, r1, r1, lsl #1
   138d4:	lsl	r1, r1, #2
   138d8:	bl	11bb0 <realloc@plt>
   138dc:	str	r0, [r6]
   138e0:	mov	r0, r6
   138e4:	bl	141f0 <table_get_row_length@@Base>
   138e8:	subs	r7, r0, #0
   138ec:	ble	138a4 <table_remove_column@@Base+0x100>
   138f0:	mov	r1, r4
   138f4:	mov	r0, r6
   138f8:	bl	143a8 <table_get_row_ptr@@Base>
   138fc:	ldr	r1, [r6, #12]
   13900:	add	r4, r4, #1
   13904:	lsl	r1, r1, #2
   13908:	mov	r5, r0
   1390c:	ldr	r0, [r0]
   13910:	bl	11bb0 <realloc@plt>
   13914:	cmp	r7, r4
   13918:	str	r0, [r5]
   1391c:	bne	138f0 <table_remove_column@@Base+0x14c>
   13920:	b	138a4 <table_remove_column@@Base+0x100>

00013924 <table_get_column_name@@Base>:
   13924:	ldr	r3, [r0]
   13928:	add	r1, r1, r1, lsl #1
   1392c:	ldr	r0, [r3, r1, lsl #2]
   13930:	bx	lr

00013934 <table_get_col_ptr@@Base>:
   13934:	add	r1, r1, r1, lsl #1
   13938:	ldr	r0, [r0]
   1393c:	add	r0, r0, r1, lsl #2
   13940:	bx	lr

00013944 <table_get_column_compare_function@@Base>:
   13944:	ldr	r3, [r0]
   13948:	add	r1, r1, r1, lsl #1
   1394c:	add	r3, r3, r1, lsl #2
   13950:	ldr	r0, [r3, #8]
   13954:	bx	lr

00013958 <table_set_column_compare_function@@Base>:
   13958:	ldr	r3, [r0]
   1395c:	add	r1, r1, r1, lsl #1
   13960:	add	r3, r3, r1, lsl #2
   13964:	str	r2, [r3, #8]
   13968:	bx	lr

0001396c <table_compare_bool@@Base>:
   1396c:	cmp	r0, #0
   13970:	beq	139a0 <table_compare_bool@@Base+0x34>
   13974:	cmp	r1, #0
   13978:	beq	13998 <table_compare_bool@@Base+0x2c>
   1397c:	ldrb	r2, [r0]
   13980:	ldrb	r3, [r1]
   13984:	cmp	r2, r3
   13988:	bgt	13998 <table_compare_bool@@Base+0x2c>
   1398c:	mvnlt	r0, #0
   13990:	movge	r0, #0
   13994:	bx	lr
   13998:	mov	r0, #1
   1399c:	bx	lr
   139a0:	adds	r0, r1, #0
   139a4:	mvnne	r0, #0
   139a8:	bx	lr

000139ac <table_compare_int8@@Base>:
   139ac:	cmp	r0, #0
   139b0:	beq	139e0 <table_compare_int8@@Base+0x34>
   139b4:	cmp	r1, #0
   139b8:	beq	139d8 <table_compare_int8@@Base+0x2c>
   139bc:	ldrsb	r2, [r0]
   139c0:	ldrsb	r3, [r1]
   139c4:	cmp	r2, r3
   139c8:	bgt	139d8 <table_compare_int8@@Base+0x2c>
   139cc:	mvnlt	r0, #0
   139d0:	movge	r0, #0
   139d4:	bx	lr
   139d8:	mov	r0, #1
   139dc:	bx	lr
   139e0:	adds	r0, r1, #0
   139e4:	mvnne	r0, #0
   139e8:	bx	lr

000139ec <table_compare_int32@@Base>:
   139ec:	cmp	r0, #0
   139f0:	beq	13a20 <table_compare_int32@@Base+0x34>
   139f4:	cmp	r1, #0
   139f8:	beq	13a18 <table_compare_int32@@Base+0x2c>
   139fc:	ldr	r2, [r0]
   13a00:	ldr	r3, [r1]
   13a04:	cmp	r2, r3
   13a08:	bgt	13a18 <table_compare_int32@@Base+0x2c>
   13a0c:	mvnlt	r0, #0
   13a10:	movge	r0, #0
   13a14:	bx	lr
   13a18:	mov	r0, #1
   13a1c:	bx	lr
   13a20:	adds	r0, r1, #0
   13a24:	mvnne	r0, #0
   13a28:	bx	lr

00013a2c <table_compare_uint32@@Base>:
   13a2c:	cmp	r0, #0
   13a30:	beq	13a60 <table_compare_uint32@@Base+0x34>
   13a34:	cmp	r1, #0
   13a38:	beq	13a58 <table_compare_uint32@@Base+0x2c>
   13a3c:	ldr	r2, [r0]
   13a40:	ldr	r3, [r1]
   13a44:	cmp	r2, r3
   13a48:	bhi	13a58 <table_compare_uint32@@Base+0x2c>
   13a4c:	mvncc	r0, #0
   13a50:	movcs	r0, #0
   13a54:	bx	lr
   13a58:	mov	r0, #1
   13a5c:	bx	lr
   13a60:	adds	r0, r1, #0
   13a64:	mvnne	r0, #0
   13a68:	bx	lr

00013a6c <table_compare_uint64@@Base>:
   13a6c:	cmp	r0, #0
   13a70:	beq	13aa8 <table_compare_uint64@@Base+0x3c>
   13a74:	cmp	r1, #0
   13a78:	beq	13ab4 <table_compare_uint64@@Base+0x48>
   13a7c:	ldrd	r2, [r1]
   13a80:	push	{r4, r5}
   13a84:	ldrd	r4, [r0]
   13a88:	cmp	r5, r3
   13a8c:	cmpeq	r4, r2
   13a90:	movhi	r0, #1
   13a94:	bhi	13aa0 <table_compare_uint64@@Base+0x34>
   13a98:	mvncc	r0, #0
   13a9c:	movcs	r0, #0
   13aa0:	pop	{r4, r5}
   13aa4:	bx	lr
   13aa8:	adds	r0, r1, #0
   13aac:	mvnne	r0, #0
   13ab0:	bx	lr
   13ab4:	mov	r0, #1
   13ab8:	bx	lr

00013abc <table_compare_short@@Base>:
   13abc:	cmp	r0, #0
   13ac0:	beq	13af0 <table_compare_short@@Base+0x34>
   13ac4:	cmp	r1, #0
   13ac8:	beq	13ae8 <table_compare_short@@Base+0x2c>
   13acc:	ldrsh	r2, [r0]
   13ad0:	ldrsh	r3, [r1]
   13ad4:	cmp	r2, r3
   13ad8:	bgt	13ae8 <table_compare_short@@Base+0x2c>
   13adc:	mvnlt	r0, #0
   13ae0:	movge	r0, #0
   13ae4:	bx	lr
   13ae8:	mov	r0, #1
   13aec:	bx	lr
   13af0:	adds	r0, r1, #0
   13af4:	mvnne	r0, #0
   13af8:	bx	lr

00013afc <table_compare_ushort@@Base>:
   13afc:	cmp	r0, #0
   13b00:	beq	13b30 <table_compare_ushort@@Base+0x34>
   13b04:	cmp	r1, #0
   13b08:	beq	13b28 <table_compare_ushort@@Base+0x2c>
   13b0c:	ldrh	r2, [r0]
   13b10:	ldrh	r3, [r1]
   13b14:	cmp	r2, r3
   13b18:	bhi	13b28 <table_compare_ushort@@Base+0x2c>
   13b1c:	mvncc	r0, #0
   13b20:	movcs	r0, #0
   13b24:	bx	lr
   13b28:	mov	r0, #1
   13b2c:	bx	lr
   13b30:	adds	r0, r1, #0
   13b34:	mvnne	r0, #0
   13b38:	bx	lr

00013b3c <table_compare_long@@Base>:
   13b3c:	cmp	r0, #0
   13b40:	beq	13b70 <table_compare_long@@Base+0x34>
   13b44:	cmp	r1, #0
   13b48:	beq	13b68 <table_compare_long@@Base+0x2c>
   13b4c:	ldr	r2, [r0]
   13b50:	ldr	r3, [r1]
   13b54:	cmp	r2, r3
   13b58:	bgt	13b68 <table_compare_long@@Base+0x2c>
   13b5c:	mvnlt	r0, #0
   13b60:	movge	r0, #0
   13b64:	bx	lr
   13b68:	mov	r0, #1
   13b6c:	bx	lr
   13b70:	adds	r0, r1, #0
   13b74:	mvnne	r0, #0
   13b78:	bx	lr

00013b7c <table_compare_llong@@Base>:
   13b7c:	cmp	r0, #0
   13b80:	beq	13bc0 <table_compare_llong@@Base+0x44>
   13b84:	cmp	r1, #0
   13b88:	beq	13bcc <table_compare_llong@@Base+0x50>
   13b8c:	ldrd	r2, [r1]
   13b90:	push	{r4, r5}
   13b94:	ldrd	r4, [r0]
   13b98:	cmp	r2, r4
   13b9c:	sbcs	r1, r3, r5
   13ba0:	movlt	r0, #1
   13ba4:	blt	13bb8 <table_compare_llong@@Base+0x3c>
   13ba8:	cmp	r4, r2
   13bac:	sbcs	r3, r5, r3
   13bb0:	mvnlt	r0, #0
   13bb4:	movge	r0, #0
   13bb8:	pop	{r4, r5}
   13bbc:	bx	lr
   13bc0:	adds	r0, r1, #0
   13bc4:	mvnne	r0, #0
   13bc8:	bx	lr
   13bcc:	mov	r0, #1
   13bd0:	bx	lr

00013bd4 <table_compare_ullong@@Base>:
   13bd4:	cmp	r0, #0
   13bd8:	beq	13c08 <table_compare_ullong@@Base+0x34>
   13bdc:	cmp	r1, #0
   13be0:	beq	13c00 <table_compare_ullong@@Base+0x2c>
   13be4:	ldr	r2, [r0]
   13be8:	ldr	r3, [r1]
   13bec:	cmp	r2, r3
   13bf0:	bhi	13c00 <table_compare_ullong@@Base+0x2c>
   13bf4:	mvncc	r0, #0
   13bf8:	movcs	r0, #0
   13bfc:	bx	lr
   13c00:	mov	r0, #1
   13c04:	bx	lr
   13c08:	adds	r0, r1, #0
   13c0c:	mvnne	r0, #0
   13c10:	bx	lr

00013c14 <table_compare_float@@Base>:
   13c14:	cmp	r0, #0
   13c18:	beq	13c4c <table_compare_float@@Base+0x38>
   13c1c:	cmp	r1, #0
   13c20:	beq	13c44 <table_compare_float@@Base+0x30>
   13c24:	vldr	s14, [r0]
   13c28:	vldr	s15, [r1]
   13c2c:	vcmpe.f32	s14, s15
   13c30:	vmrs	APSR_nzcv, fpscr
   13c34:	bgt	13c44 <table_compare_float@@Base+0x30>
   13c38:	mvnmi	r0, #0
   13c3c:	movpl	r0, #0
   13c40:	bx	lr
   13c44:	mov	r0, #1
   13c48:	bx	lr
   13c4c:	adds	r0, r1, #0
   13c50:	mvnne	r0, #0
   13c54:	bx	lr

00013c58 <table_compare_double@@Base>:
   13c58:	cmp	r0, #0
   13c5c:	beq	13c90 <table_compare_double@@Base+0x38>
   13c60:	cmp	r1, #0
   13c64:	beq	13c88 <table_compare_double@@Base+0x30>
   13c68:	vldr	d6, [r0]
   13c6c:	vldr	d7, [r1]
   13c70:	vcmpe.f64	d6, d7
   13c74:	vmrs	APSR_nzcv, fpscr
   13c78:	bgt	13c88 <table_compare_double@@Base+0x30>
   13c7c:	mvnmi	r0, #0
   13c80:	movpl	r0, #0
   13c84:	bx	lr
   13c88:	mov	r0, #1
   13c8c:	bx	lr
   13c90:	adds	r0, r1, #0
   13c94:	mvnne	r0, #0
   13c98:	bx	lr

00013c9c <table_compare_ldouble@@Base>:
   13c9c:	cmp	r0, #0
   13ca0:	beq	13cd4 <table_compare_ldouble@@Base+0x38>
   13ca4:	cmp	r1, #0
   13ca8:	beq	13ccc <table_compare_ldouble@@Base+0x30>
   13cac:	vldr	d6, [r0]
   13cb0:	vldr	d7, [r1]
   13cb4:	vcmpe.f64	d6, d7
   13cb8:	vmrs	APSR_nzcv, fpscr
   13cbc:	bgt	13ccc <table_compare_ldouble@@Base+0x30>
   13cc0:	mvnmi	r0, #0
   13cc4:	movpl	r0, #0
   13cc8:	bx	lr
   13ccc:	mov	r0, #1
   13cd0:	bx	lr
   13cd4:	adds	r0, r1, #0
   13cd8:	mvnne	r0, #0
   13cdc:	bx	lr

00013ce0 <table_compare_uchar@@Base>:
   13ce0:	cmp	r0, #0
   13ce4:	beq	13d14 <table_compare_uchar@@Base+0x34>
   13ce8:	cmp	r1, #0
   13cec:	beq	13d0c <table_compare_uchar@@Base+0x2c>
   13cf0:	ldrb	r2, [r0]
   13cf4:	ldrb	r3, [r1]
   13cf8:	cmp	r2, r3
   13cfc:	bhi	13d0c <table_compare_uchar@@Base+0x2c>
   13d00:	mvncc	r0, #0
   13d04:	movcs	r0, #0
   13d08:	bx	lr
   13d0c:	mov	r0, #1
   13d10:	bx	lr
   13d14:	adds	r0, r1, #0
   13d18:	mvnne	r0, #0
   13d1c:	bx	lr

00013d20 <table_compare_ptr@@Base>:
   13d20:	cmp	r0, r1
   13d24:	bhi	13d34 <table_compare_ptr@@Base+0x14>
   13d28:	mvncc	r0, #0
   13d2c:	movcs	r0, #0
   13d30:	bx	lr
   13d34:	mov	r0, #1
   13d38:	bx	lr

00013d3c <table_compare_string@@Base>:
   13d3c:	cmp	r0, #0
   13d40:	beq	13d50 <table_compare_string@@Base+0x14>
   13d44:	cmp	r1, #0
   13d48:	beq	13d5c <table_compare_string@@Base+0x20>
   13d4c:	b	11b80 <strcmp@plt>
   13d50:	adds	r0, r1, #0
   13d54:	mvnne	r0, #0
   13d58:	bx	lr
   13d5c:	mov	r0, #1
   13d60:	bx	lr

00013d64 <table_compare_ulong@@Base>:
   13d64:	cmp	r0, #0
   13d68:	beq	13d98 <table_compare_ulong@@Base+0x34>
   13d6c:	cmp	r1, #0
   13d70:	beq	13d90 <table_compare_ulong@@Base+0x2c>
   13d74:	ldr	r2, [r0]
   13d78:	ldr	r3, [r1]
   13d7c:	cmp	r2, r3
   13d80:	bhi	13d90 <table_compare_ulong@@Base+0x2c>
   13d84:	mvncc	r0, #0
   13d88:	movcs	r0, #0
   13d8c:	bx	lr
   13d90:	mov	r0, #1
   13d94:	bx	lr
   13d98:	adds	r0, r1, #0
   13d9c:	mvnne	r0, #0
   13da0:	bx	lr

00013da4 <table_compare_int@@Base>:
   13da4:	cmp	r0, #0
   13da8:	beq	13dd8 <table_compare_int@@Base+0x34>
   13dac:	cmp	r1, #0
   13db0:	beq	13dd0 <table_compare_int@@Base+0x2c>
   13db4:	ldr	r2, [r0]
   13db8:	ldr	r3, [r1]
   13dbc:	cmp	r2, r3
   13dc0:	bgt	13dd0 <table_compare_int@@Base+0x2c>
   13dc4:	mvnlt	r0, #0
   13dc8:	movge	r0, #0
   13dcc:	bx	lr
   13dd0:	mov	r0, #1
   13dd4:	bx	lr
   13dd8:	adds	r0, r1, #0
   13ddc:	mvnne	r0, #0
   13de0:	bx	lr

00013de4 <table_compare_uint@@Base>:
   13de4:	cmp	r0, #0
   13de8:	beq	13e18 <table_compare_uint@@Base+0x34>
   13dec:	cmp	r1, #0
   13df0:	beq	13e10 <table_compare_uint@@Base+0x2c>
   13df4:	ldr	r2, [r0]
   13df8:	ldr	r3, [r1]
   13dfc:	cmp	r2, r3
   13e00:	bhi	13e10 <table_compare_uint@@Base+0x2c>
   13e04:	mvncc	r0, #0
   13e08:	movcs	r0, #0
   13e0c:	bx	lr
   13e10:	mov	r0, #1
   13e14:	bx	lr
   13e18:	adds	r0, r1, #0
   13e1c:	mvnne	r0, #0
   13e20:	bx	lr

00013e24 <table_compare_int16@@Base>:
   13e24:	cmp	r0, #0
   13e28:	beq	13e58 <table_compare_int16@@Base+0x34>
   13e2c:	cmp	r1, #0
   13e30:	beq	13e50 <table_compare_int16@@Base+0x2c>
   13e34:	ldrsh	r2, [r0]
   13e38:	ldrsh	r3, [r1]
   13e3c:	cmp	r2, r3
   13e40:	bgt	13e50 <table_compare_int16@@Base+0x2c>
   13e44:	mvnlt	r0, #0
   13e48:	movge	r0, #0
   13e4c:	bx	lr
   13e50:	mov	r0, #1
   13e54:	bx	lr
   13e58:	adds	r0, r1, #0
   13e5c:	mvnne	r0, #0
   13e60:	bx	lr

00013e64 <table_compare_uint16@@Base>:
   13e64:	cmp	r0, #0
   13e68:	beq	13e98 <table_compare_uint16@@Base+0x34>
   13e6c:	cmp	r1, #0
   13e70:	beq	13e90 <table_compare_uint16@@Base+0x2c>
   13e74:	ldrh	r2, [r0]
   13e78:	ldrh	r3, [r1]
   13e7c:	cmp	r2, r3
   13e80:	bhi	13e90 <table_compare_uint16@@Base+0x2c>
   13e84:	mvncc	r0, #0
   13e88:	movcs	r0, #0
   13e8c:	bx	lr
   13e90:	mov	r0, #1
   13e94:	bx	lr
   13e98:	adds	r0, r1, #0
   13e9c:	mvnne	r0, #0
   13ea0:	bx	lr

00013ea4 <table_compare_int64@@Base>:
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ee8 <table_compare_int64@@Base+0x44>
   13eac:	cmp	r1, #0
   13eb0:	beq	13ef4 <table_compare_int64@@Base+0x50>
   13eb4:	ldrd	r2, [r1]
   13eb8:	push	{r4, r5}
   13ebc:	ldrd	r4, [r0]
   13ec0:	cmp	r2, r4
   13ec4:	sbcs	r1, r3, r5
   13ec8:	movlt	r0, #1
   13ecc:	blt	13ee0 <table_compare_int64@@Base+0x3c>
   13ed0:	cmp	r4, r2
   13ed4:	sbcs	r3, r5, r3
   13ed8:	mvnlt	r0, #0
   13edc:	movge	r0, #0
   13ee0:	pop	{r4, r5}
   13ee4:	bx	lr
   13ee8:	adds	r0, r1, #0
   13eec:	mvnne	r0, #0
   13ef0:	bx	lr
   13ef4:	mov	r0, #1
   13ef8:	bx	lr

00013efc <table_compare_char@@Base>:
   13efc:	cmp	r0, #0
   13f00:	beq	13f30 <table_compare_char@@Base+0x34>
   13f04:	cmp	r1, #0
   13f08:	beq	13f28 <table_compare_char@@Base+0x2c>
   13f0c:	ldrb	r2, [r0]
   13f10:	ldrb	r3, [r1]
   13f14:	cmp	r2, r3
   13f18:	bhi	13f28 <table_compare_char@@Base+0x2c>
   13f1c:	mvncc	r0, #0
   13f20:	movcs	r0, #0
   13f24:	bx	lr
   13f28:	mov	r0, #1
   13f2c:	bx	lr
   13f30:	adds	r0, r1, #0
   13f34:	mvnne	r0, #0
   13f38:	bx	lr

00013f3c <table_compare_uint8@@Base>:
   13f3c:	cmp	r0, #0
   13f40:	beq	13f70 <table_compare_uint8@@Base+0x34>
   13f44:	cmp	r1, #0
   13f48:	beq	13f68 <table_compare_uint8@@Base+0x2c>
   13f4c:	ldrb	r2, [r0]
   13f50:	ldrb	r3, [r1]
   13f54:	cmp	r2, r3
   13f58:	bhi	13f68 <table_compare_uint8@@Base+0x2c>
   13f5c:	mvncc	r0, #0
   13f60:	movcs	r0, #0
   13f64:	bx	lr
   13f68:	mov	r0, #1
   13f6c:	bx	lr
   13f70:	adds	r0, r1, #0
   13f74:	mvnne	r0, #0
   13f78:	bx	lr

00013f7c <table_get_default_compare_function_for_data_type@@Base>:
   13f7c:	cmp	r0, #23
   13f80:	ldrls	r3, [pc, #8]	; 13f90 <table_get_default_compare_function_for_data_type@@Base+0x14>
   13f84:	ldrls	r0, [r3, r0, lsl #2]
   13f88:	movhi	r0, #0
   13f8c:	bx	lr
   13f90:	andeq	r5, r1, r4, lsr fp

00013f94 <table_get@@Base>:
   13f94:	push	{r4, lr}
   13f98:	bl	13568 <table_get_cell_ptr@@Base>
   13f9c:	ldr	r0, [r0]
   13fa0:	pop	{r4, pc}

00013fa4 <table_get_bool@@Base>:
   13fa4:	push	{r4, lr}
   13fa8:	bl	13568 <table_get_cell_ptr@@Base>
   13fac:	ldr	r3, [r0]
   13fb0:	ldrb	r0, [r3]
   13fb4:	pop	{r4, pc}

00013fb8 <table_get_int@@Base>:
   13fb8:	push	{r4, lr}
   13fbc:	bl	13568 <table_get_cell_ptr@@Base>
   13fc0:	ldr	r3, [r0]
   13fc4:	ldr	r0, [r3]
   13fc8:	pop	{r4, pc}

00013fcc <table_get_uint@@Base>:
   13fcc:	push	{r4, lr}
   13fd0:	bl	13568 <table_get_cell_ptr@@Base>
   13fd4:	ldr	r3, [r0]
   13fd8:	ldr	r0, [r3]
   13fdc:	pop	{r4, pc}

00013fe0 <table_get_int8@@Base>:
   13fe0:	push	{r4, lr}
   13fe4:	bl	13568 <table_get_cell_ptr@@Base>
   13fe8:	ldr	r3, [r0]
   13fec:	ldrsb	r0, [r3]
   13ff0:	pop	{r4, pc}

00013ff4 <table_get_uint8@@Base>:
   13ff4:	push	{r4, lr}
   13ff8:	bl	13568 <table_get_cell_ptr@@Base>
   13ffc:	ldr	r3, [r0]
   14000:	ldrb	r0, [r3]
   14004:	pop	{r4, pc}

00014008 <table_get_int16@@Base>:
   14008:	push	{r4, lr}
   1400c:	bl	13568 <table_get_cell_ptr@@Base>
   14010:	ldr	r3, [r0]
   14014:	ldrsh	r0, [r3]
   14018:	pop	{r4, pc}

0001401c <table_get_uint16@@Base>:
   1401c:	push	{r4, lr}
   14020:	bl	13568 <table_get_cell_ptr@@Base>
   14024:	ldr	r3, [r0]
   14028:	ldrh	r0, [r3]
   1402c:	pop	{r4, pc}

00014030 <table_get_int32@@Base>:
   14030:	push	{r4, lr}
   14034:	bl	13568 <table_get_cell_ptr@@Base>
   14038:	ldr	r3, [r0]
   1403c:	ldr	r0, [r3]
   14040:	pop	{r4, pc}

00014044 <table_get_uint32@@Base>:
   14044:	push	{r4, lr}
   14048:	bl	13568 <table_get_cell_ptr@@Base>
   1404c:	ldr	r3, [r0]
   14050:	ldr	r0, [r3]
   14054:	pop	{r4, pc}

00014058 <table_get_int64@@Base>:
   14058:	push	{r4, lr}
   1405c:	bl	13568 <table_get_cell_ptr@@Base>
   14060:	ldr	r3, [r0]
   14064:	ldrd	r0, [r3]
   14068:	pop	{r4, pc}

0001406c <table_get_uint64@@Base>:
   1406c:	push	{r4, lr}
   14070:	bl	13568 <table_get_cell_ptr@@Base>
   14074:	ldr	r3, [r0]
   14078:	ldrd	r0, [r3]
   1407c:	pop	{r4, pc}

00014080 <table_get_short@@Base>:
   14080:	push	{r4, lr}
   14084:	bl	13568 <table_get_cell_ptr@@Base>
   14088:	ldr	r3, [r0]
   1408c:	ldrsh	r0, [r3]
   14090:	pop	{r4, pc}

00014094 <table_get_ushort@@Base>:
   14094:	push	{r4, lr}
   14098:	bl	13568 <table_get_cell_ptr@@Base>
   1409c:	ldr	r3, [r0]
   140a0:	ldrh	r0, [r3]
   140a4:	pop	{r4, pc}

000140a8 <table_get_long@@Base>:
   140a8:	push	{r4, lr}
   140ac:	bl	13568 <table_get_cell_ptr@@Base>
   140b0:	ldr	r3, [r0]
   140b4:	ldr	r0, [r3]
   140b8:	pop	{r4, pc}

000140bc <table_get_ulong@@Base>:
   140bc:	push	{r4, lr}
   140c0:	bl	13568 <table_get_cell_ptr@@Base>
   140c4:	ldr	r3, [r0]
   140c8:	ldr	r0, [r3]
   140cc:	pop	{r4, pc}

000140d0 <table_get_llong@@Base>:
   140d0:	push	{r4, lr}
   140d4:	bl	13568 <table_get_cell_ptr@@Base>
   140d8:	ldr	r3, [r0]
   140dc:	ldrd	r0, [r3]
   140e0:	pop	{r4, pc}

000140e4 <table_get_ullong@@Base>:
   140e4:	push	{r4, lr}
   140e8:	bl	13568 <table_get_cell_ptr@@Base>
   140ec:	ldr	r3, [r0]
   140f0:	ldrd	r0, [r3]
   140f4:	pop	{r4, pc}

000140f8 <table_get_float@@Base>:
   140f8:	push	{r4, lr}
   140fc:	bl	13568 <table_get_cell_ptr@@Base>
   14100:	ldr	r3, [r0]
   14104:	vldr	s0, [r3]
   14108:	pop	{r4, pc}

0001410c <table_get_double@@Base>:
   1410c:	push	{r4, lr}
   14110:	bl	13568 <table_get_cell_ptr@@Base>
   14114:	ldr	r3, [r0]
   14118:	vldr	d0, [r3]
   1411c:	pop	{r4, pc}

00014120 <table_get_ldouble@@Base>:
   14120:	push	{r4, lr}
   14124:	bl	13568 <table_get_cell_ptr@@Base>
   14128:	ldr	r3, [r0]
   1412c:	vldr	d0, [r3]
   14130:	pop	{r4, pc}

00014134 <table_get_char@@Base>:
   14134:	push	{r4, lr}
   14138:	bl	13568 <table_get_cell_ptr@@Base>
   1413c:	ldr	r3, [r0]
   14140:	ldrb	r0, [r3]
   14144:	pop	{r4, pc}

00014148 <table_get_uchar@@Base>:
   14148:	push	{r4, lr}
   1414c:	bl	13568 <table_get_cell_ptr@@Base>
   14150:	ldr	r3, [r0]
   14154:	ldrb	r0, [r3]
   14158:	pop	{r4, pc}

0001415c <table_get_string@@Base>:
   1415c:	push	{r4, lr}
   14160:	bl	13568 <table_get_cell_ptr@@Base>
   14164:	ldr	r0, [r0]
   14168:	pop	{r4, pc}

0001416c <table_get_ptr@@Base>:
   1416c:	push	{r4, lr}
   14170:	bl	13568 <table_get_cell_ptr@@Base>
   14174:	ldr	r0, [r0]
   14178:	pop	{r4, pc}

0001417c <table_row_init@@Base>:
   1417c:	ldr	r3, [r0, #12]
   14180:	push	{r4, r5, r6, lr}
   14184:	mov	r5, r1
   14188:	ldr	r4, [r0, #16]
   1418c:	lsl	r0, r3, #2
   14190:	bl	11bd4 <malloc@plt>
   14194:	str	r0, [r4, r5, lsl #2]
   14198:	pop	{r4, r5, r6, pc}

0001419c <table_row_destroy@@Base>:
   1419c:	push	{r4, r5, r6, r7, r8, lr}
   141a0:	mov	r6, r0
   141a4:	mov	r5, r1
   141a8:	bl	135e8 <table_get_column_length@@Base>
   141ac:	ldr	r8, [r6, #16]
   141b0:	subs	r7, r0, #0
   141b4:	movgt	r4, #0
   141b8:	ble	141d8 <table_row_destroy@@Base+0x3c>
   141bc:	mov	r2, r4
   141c0:	mov	r1, r5
   141c4:	add	r4, r4, #1
   141c8:	mov	r0, r6
   141cc:	bl	12b2c <table_cell_destroy@@Base>
   141d0:	cmp	r7, r4
   141d4:	bne	141bc <table_row_destroy@@Base+0x20>
   141d8:	ldr	r0, [r8, r5, lsl #2]
   141dc:	cmp	r0, #0
   141e0:	beq	141ec <table_row_destroy@@Base+0x50>
   141e4:	pop	{r4, r5, r6, r7, r8, lr}
   141e8:	b	11b98 <free@plt>
   141ec:	pop	{r4, r5, r6, r7, r8, pc}

000141f0 <table_get_row_length@@Base>:
   141f0:	ldr	r0, [r0, #20]
   141f4:	bx	lr

000141f8 <table_add_row@@Base>:
   141f8:	push	{r4, r5, r6, r7, r8, lr}
   141fc:	mov	r5, r0
   14200:	ldr	r4, [r0, #24]
   14204:	ldr	r6, [r0, #20]
   14208:	mov	r1, r4
   1420c:	mov	r0, r6
   14210:	bl	15998 <table_column_sort@@Base+0x4cc>
   14214:	cmp	r1, #0
   14218:	bne	1423c <table_add_row@@Base+0x44>
   1421c:	ldr	r1, [r5, #28]
   14220:	ldr	r0, [r5, #16]
   14224:	add	r1, r4, r1
   14228:	str	r1, [r5, #28]
   1422c:	lsl	r1, r1, #2
   14230:	bl	11bb0 <realloc@plt>
   14234:	ldr	r6, [r5, #20]
   14238:	str	r0, [r5, #16]
   1423c:	mov	r0, r5
   14240:	bl	135e8 <table_get_column_length@@Base>
   14244:	ldr	r4, [r5, #16]
   14248:	mov	r7, r0
   1424c:	ldr	r0, [r5, #12]
   14250:	lsl	r0, r0, #2
   14254:	bl	11bd4 <malloc@plt>
   14258:	cmp	r7, #0
   1425c:	str	r0, [r4, r6, lsl #2]
   14260:	ble	14284 <table_add_row@@Base+0x8c>
   14264:	mov	r4, #0
   14268:	mov	r2, r4
   1426c:	mov	r1, r6
   14270:	add	r4, r4, #1
   14274:	mov	r0, r5
   14278:	bl	12b10 <table_cell_init@@Base>
   1427c:	cmp	r7, r4
   14280:	bne	14268 <table_add_row@@Base+0x70>
   14284:	mov	r0, r5
   14288:	mov	r3, #2
   1428c:	mvn	r2, #0
   14290:	ldr	r1, [r5, #20]
   14294:	bl	12a88 <table_notify@@Base>
   14298:	ldr	r0, [r5, #20]
   1429c:	add	r3, r0, #1
   142a0:	str	r3, [r5, #20]
   142a4:	pop	{r4, r5, r6, r7, r8, pc}

000142a8 <table_remove_row@@Base>:
   142a8:	push	{r4, r5, r6, r7, r8, lr}
   142ac:	mov	r5, r0
   142b0:	mov	r6, r1
   142b4:	ldr	r7, [r0, #20]
   142b8:	bl	135e8 <table_get_column_length@@Base>
   142bc:	subs	r8, r0, #0
   142c0:	movgt	r4, #0
   142c4:	ble	14308 <table_remove_row@@Base+0x60>
   142c8:	mov	r1, r4
   142cc:	mov	r0, r5
   142d0:	bl	13658 <table_get_column_data_type@@Base>
   142d4:	mov	r2, r4
   142d8:	mov	r1, r6
   142dc:	add	r4, r4, #1
   142e0:	cmp	r0, #23
   142e4:	mov	r0, r5
   142e8:	beq	14300 <table_remove_row@@Base+0x58>
   142ec:	bl	13568 <table_get_cell_ptr@@Base>
   142f0:	ldr	r3, [r0]
   142f4:	subs	r0, r3, #0
   142f8:	beq	14300 <table_remove_row@@Base+0x58>
   142fc:	bl	11b98 <free@plt>
   14300:	cmp	r8, r4
   14304:	bne	142c8 <table_remove_row@@Base+0x20>
   14308:	ldr	r3, [r5, #16]
   1430c:	lsl	r4, r6, #2
   14310:	ldr	r0, [r3, r6, lsl #2]
   14314:	cmp	r0, #0
   14318:	beq	14320 <table_remove_row@@Base+0x78>
   1431c:	bl	11b98 <free@plt>
   14320:	sub	ip, r7, #1
   14324:	cmp	r6, ip
   14328:	movlt	r3, r6
   1432c:	bge	14350 <table_remove_row@@Base+0xa8>
   14330:	ldr	r1, [r5, #16]
   14334:	add	r2, r4, #4
   14338:	add	r3, r3, #1
   1433c:	ldr	r0, [r1, r2]
   14340:	cmp	r3, ip
   14344:	str	r0, [r1, r4]
   14348:	mov	r4, r2
   1434c:	bne	14330 <table_remove_row@@Base+0x88>
   14350:	ldr	r0, [r5, #20]
   14354:	ldr	r4, [r5, #24]
   14358:	sub	r0, r0, #1
   1435c:	str	r0, [r5, #20]
   14360:	mov	r1, r4
   14364:	bl	15998 <table_column_sort@@Base+0x4cc>
   14368:	cmp	r1, #0
   1436c:	bne	1438c <table_remove_row@@Base+0xe4>
   14370:	ldr	r1, [r5, #28]
   14374:	ldr	r0, [r5, #16]
   14378:	sub	r1, r1, r4
   1437c:	str	r1, [r5, #28]
   14380:	lsl	r1, r1, #2
   14384:	bl	11bb0 <realloc@plt>
   14388:	str	r0, [r5, #16]
   1438c:	mov	r0, r5
   14390:	mov	r1, r6
   14394:	mov	r3, #4
   14398:	mvn	r2, #0
   1439c:	bl	12a88 <table_notify@@Base>
   143a0:	mov	r0, #0
   143a4:	pop	{r4, r5, r6, r7, r8, pc}

000143a8 <table_get_row_ptr@@Base>:
   143a8:	ldr	r0, [r0, #16]
   143ac:	add	r0, r0, r1, lsl #2
   143b0:	bx	lr

000143b4 <table_set_row_ptr@@Base>:
   143b4:	ldr	r3, [r0, #16]
   143b8:	ldr	r2, [r2]
   143bc:	str	r2, [r3, r1, lsl #2]
   143c0:	bx	lr

000143c4 <table_set@@Base>:
   143c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143c8:	mov	r5, r0
   143cc:	mov	r6, r2
   143d0:	ldr	r4, [sp, #32]
   143d4:	mov	r9, r1
   143d8:	mov	r7, r3
   143dc:	bl	13568 <table_get_cell_ptr@@Base>
   143e0:	mov	r1, r6
   143e4:	mov	r8, r0
   143e8:	mov	r0, r5
   143ec:	bl	13934 <table_get_col_ptr@@Base>
   143f0:	cmp	r4, #23
   143f4:	ldrls	pc, [pc, r4, lsl #2]
   143f8:	b	14470 <table_set@@Base+0xac>
   143fc:	andeq	r4, r1, r4, lsl r6
   14400:	andeq	r4, r1, r4, lsl #12
   14404:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14408:	andeq	r4, r1, r4, ror #11
   1440c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14410:			; <UNDEFINED> instruction: 0x000145b0
   14414:	andeq	r4, r1, r0, lsr #11
   14418:	muleq	r1, r0, r5
   1441c:	andeq	r4, r1, r4, asr r6
   14420:	andeq	r4, r1, r4, asr #12
   14424:	andeq	r4, r1, r4, lsr r6
   14428:	andeq	r4, r1, r4, lsr #12
   1442c:	andeq	r4, r1, r0, lsr #13
   14430:	andeq	r4, r1, r0, lsl #13
   14434:	muleq	r1, r0, r6
   14438:	andeq	r4, r1, r0, lsl #11
   1443c:	andeq	r4, r1, ip, asr r5
   14440:	andeq	r4, r1, ip, asr #10
   14444:	andeq	r4, r1, r0, lsr #10
   14448:	andeq	r4, r1, r0, lsl r5
   1444c:	andeq	r4, r1, r0, lsl #10
   14450:	andeq	r4, r1, r8, asr #9
   14454:	andeq	r4, r1, r4, lsr #9
   14458:	andeq	r4, r1, r8, ror r4
   1445c:	bl	11bd4 <malloc@plt>
   14460:	cmp	r0, #0
   14464:	mov	r3, r0
   14468:	str	r0, [r8]
   1446c:	bne	1466c <table_set@@Base+0x2a8>
   14470:	mvn	r0, #0
   14474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14478:	ldr	r3, [r0, #4]
   1447c:	cmp	r3, #23
   14480:	bne	14470 <table_set@@Base+0xac>
   14484:	str	r7, [r8]
   14488:	mov	r0, r5
   1448c:	mov	r2, r6
   14490:	mov	r1, r9
   14494:	mov	r3, #1
   14498:	bl	12a88 <table_notify@@Base>
   1449c:	mov	r0, #0
   144a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144a4:	ldr	r3, [r0, #4]
   144a8:	cmp	r3, #22
   144ac:	bne	14470 <table_set@@Base+0xac>
   144b0:	ldr	r0, [r8]
   144b4:	cmp	r0, #0
   144b8:	beq	146c8 <table_set@@Base+0x304>
   144bc:	ldrb	r3, [r7]
   144c0:	strb	r3, [r0]
   144c4:	b	14488 <table_set@@Base+0xc4>
   144c8:	ldr	r3, [r0, #4]
   144cc:	cmp	r3, #21
   144d0:	bne	14470 <table_set@@Base+0xac>
   144d4:	mov	r0, r7
   144d8:	bl	11bf8 <strlen@plt>
   144dc:	add	r1, r0, #1
   144e0:	ldr	r0, [r8]
   144e4:	bl	11bb0 <realloc@plt>
   144e8:	cmp	r0, #0
   144ec:	str	r0, [r8]
   144f0:	beq	14470 <table_set@@Base+0xac>
   144f4:	mov	r1, r7
   144f8:	bl	11bbc <strcpy@plt>
   144fc:	b	14488 <table_set@@Base+0xc4>
   14500:	ldr	r3, [r0, #4]
   14504:	cmp	r3, #20
   14508:	beq	144b0 <table_set@@Base+0xec>
   1450c:	b	14470 <table_set@@Base+0xac>
   14510:	ldr	r3, [r0, #4]
   14514:	cmp	r3, #19
   14518:	beq	144b0 <table_set@@Base+0xec>
   1451c:	b	14470 <table_set@@Base+0xac>
   14520:	ldr	r3, [r0, #4]
   14524:	cmp	r3, #18
   14528:	bne	14470 <table_set@@Base+0xac>
   1452c:	ldr	r0, [r8]
   14530:	cmp	r0, #0
   14534:	beq	146e0 <table_set@@Base+0x31c>
   14538:	ldr	r2, [r7]
   1453c:	ldr	r3, [r7, #4]
   14540:	str	r2, [r0]
   14544:	str	r3, [r0, #4]
   14548:	b	14488 <table_set@@Base+0xc4>
   1454c:	ldr	r3, [r0, #4]
   14550:	cmp	r3, #17
   14554:	beq	1452c <table_set@@Base+0x168>
   14558:	b	14470 <table_set@@Base+0xac>
   1455c:	ldr	r3, [r0, #4]
   14560:	cmp	r3, #16
   14564:	bne	14470 <table_set@@Base+0xac>
   14568:	ldr	r0, [r8]
   1456c:	cmp	r0, #0
   14570:	beq	146b0 <table_set@@Base+0x2ec>
   14574:	ldr	r3, [r7]
   14578:	str	r3, [r0]
   1457c:	b	14488 <table_set@@Base+0xc4>
   14580:	ldr	r3, [r0, #4]
   14584:	cmp	r3, #15
   14588:	beq	1452c <table_set@@Base+0x168>
   1458c:	b	14470 <table_set@@Base+0xac>
   14590:	ldr	r3, [r0, #4]
   14594:	cmp	r3, #7
   14598:	beq	14568 <table_set@@Base+0x1a4>
   1459c:	b	14470 <table_set@@Base+0xac>
   145a0:	ldr	r3, [r0, #4]
   145a4:	cmp	r3, #6
   145a8:	beq	14568 <table_set@@Base+0x1a4>
   145ac:	b	14470 <table_set@@Base+0xac>
   145b0:	ldr	r3, [r0, #4]
   145b4:	cmp	r3, #5
   145b8:	bne	14470 <table_set@@Base+0xac>
   145bc:	ldr	r0, [r8]
   145c0:	cmp	r0, #0
   145c4:	beq	146f8 <table_set@@Base+0x334>
   145c8:	ldrh	r3, [r7]
   145cc:	strh	r3, [r0]
   145d0:	b	14488 <table_set@@Base+0xc4>
   145d4:	ldr	r3, [r0, #4]
   145d8:	cmp	r3, #4
   145dc:	beq	145bc <table_set@@Base+0x1f8>
   145e0:	b	14470 <table_set@@Base+0xac>
   145e4:	ldr	r3, [r0, #4]
   145e8:	cmp	r3, #3
   145ec:	beq	144b0 <table_set@@Base+0xec>
   145f0:	b	14470 <table_set@@Base+0xac>
   145f4:	ldr	r3, [r0, #4]
   145f8:	cmp	r3, #2
   145fc:	beq	144b0 <table_set@@Base+0xec>
   14600:	b	14470 <table_set@@Base+0xac>
   14604:	ldr	r3, [r0, #4]
   14608:	cmp	r3, #1
   1460c:	beq	14568 <table_set@@Base+0x1a4>
   14610:	b	14470 <table_set@@Base+0xac>
   14614:	ldr	r3, [r0, #4]
   14618:	cmp	r3, #0
   1461c:	beq	14568 <table_set@@Base+0x1a4>
   14620:	b	14470 <table_set@@Base+0xac>
   14624:	ldr	r3, [r0, #4]
   14628:	cmp	r3, #11
   1462c:	beq	145bc <table_set@@Base+0x1f8>
   14630:	b	14470 <table_set@@Base+0xac>
   14634:	ldr	r3, [r0, #4]
   14638:	cmp	r3, #10
   1463c:	beq	145bc <table_set@@Base+0x1f8>
   14640:	b	14470 <table_set@@Base+0xac>
   14644:	ldr	r3, [r0, #4]
   14648:	cmp	r3, #9
   1464c:	beq	1452c <table_set@@Base+0x168>
   14650:	b	14470 <table_set@@Base+0xac>
   14654:	ldr	r0, [r0, #4]
   14658:	cmp	r0, #8
   1465c:	bne	14470 <table_set@@Base+0xac>
   14660:	ldr	r3, [r8]
   14664:	cmp	r3, #0
   14668:	beq	1445c <table_set@@Base+0x98>
   1466c:	ldr	r1, [r7]
   14670:	ldr	r2, [r7, #4]
   14674:	str	r1, [r3]
   14678:	str	r2, [r3, #4]
   1467c:	b	14488 <table_set@@Base+0xc4>
   14680:	ldr	r3, [r0, #4]
   14684:	cmp	r3, #13
   14688:	beq	14568 <table_set@@Base+0x1a4>
   1468c:	b	14470 <table_set@@Base+0xac>
   14690:	ldr	r3, [r0, #4]
   14694:	cmp	r3, #14
   14698:	beq	1452c <table_set@@Base+0x168>
   1469c:	b	14470 <table_set@@Base+0xac>
   146a0:	ldr	r3, [r0, #4]
   146a4:	cmp	r3, #12
   146a8:	beq	14568 <table_set@@Base+0x1a4>
   146ac:	b	14470 <table_set@@Base+0xac>
   146b0:	mov	r0, #4
   146b4:	bl	11bd4 <malloc@plt>
   146b8:	cmp	r0, #0
   146bc:	str	r0, [r8]
   146c0:	bne	14574 <table_set@@Base+0x1b0>
   146c4:	b	14470 <table_set@@Base+0xac>
   146c8:	mov	r0, #1
   146cc:	bl	11bd4 <malloc@plt>
   146d0:	cmp	r0, #0
   146d4:	str	r0, [r8]
   146d8:	bne	144bc <table_set@@Base+0xf8>
   146dc:	b	14470 <table_set@@Base+0xac>
   146e0:	mov	r0, #8
   146e4:	bl	11bd4 <malloc@plt>
   146e8:	cmp	r0, #0
   146ec:	str	r0, [r8]
   146f0:	bne	14538 <table_set@@Base+0x174>
   146f4:	b	14470 <table_set@@Base+0xac>
   146f8:	mov	r0, #2
   146fc:	bl	11bd4 <malloc@plt>
   14700:	cmp	r0, #0
   14704:	str	r0, [r8]
   14708:	bne	145c8 <table_set@@Base+0x204>
   1470c:	b	14470 <table_set@@Base+0xac>

00014710 <table_set_bool@@Base>:
   14710:	push	{r4, r5, r6, r7, r8, lr}
   14714:	mov	r5, r2
   14718:	mov	r4, r0
   1471c:	mov	r8, r3
   14720:	mov	r7, r1
   14724:	bl	13568 <table_get_cell_ptr@@Base>
   14728:	mov	r1, r5
   1472c:	mov	r6, r0
   14730:	mov	r0, r4
   14734:	bl	13934 <table_get_col_ptr@@Base>
   14738:	ldr	r2, [r0, #4]
   1473c:	cmp	r2, #22
   14740:	bne	14784 <table_set_bool@@Base+0x74>
   14744:	ldr	r0, [r6]
   14748:	cmp	r0, #0
   1474c:	beq	14770 <table_set_bool@@Base+0x60>
   14750:	strb	r8, [r0]
   14754:	mov	r2, r5
   14758:	mov	r0, r4
   1475c:	mov	r1, r7
   14760:	mov	r3, #1
   14764:	bl	12a88 <table_notify@@Base>
   14768:	mov	r0, #0
   1476c:	pop	{r4, r5, r6, r7, r8, pc}
   14770:	mov	r0, #1
   14774:	bl	11bd4 <malloc@plt>
   14778:	cmp	r0, #0
   1477c:	str	r0, [r6]
   14780:	bne	14750 <table_set_bool@@Base+0x40>
   14784:	mvn	r0, #0
   14788:	pop	{r4, r5, r6, r7, r8, pc}

0001478c <table_set_int@@Base>:
   1478c:	push	{r4, r5, r6, r7, r8, lr}
   14790:	mov	r5, r2
   14794:	mov	r4, r0
   14798:	mov	r8, r3
   1479c:	mov	r7, r1
   147a0:	bl	13568 <table_get_cell_ptr@@Base>
   147a4:	mov	r1, r5
   147a8:	mov	r6, r0
   147ac:	mov	r0, r4
   147b0:	bl	13934 <table_get_col_ptr@@Base>
   147b4:	ldr	r2, [r0, #4]
   147b8:	cmp	r2, #0
   147bc:	bne	14800 <table_set_int@@Base+0x74>
   147c0:	ldr	r0, [r6]
   147c4:	cmp	r0, #0
   147c8:	beq	147ec <table_set_int@@Base+0x60>
   147cc:	str	r8, [r0]
   147d0:	mov	r2, r5
   147d4:	mov	r0, r4
   147d8:	mov	r1, r7
   147dc:	mov	r3, #1
   147e0:	bl	12a88 <table_notify@@Base>
   147e4:	mov	r0, #0
   147e8:	pop	{r4, r5, r6, r7, r8, pc}
   147ec:	mov	r0, #4
   147f0:	bl	11bd4 <malloc@plt>
   147f4:	cmp	r0, #0
   147f8:	str	r0, [r6]
   147fc:	bne	147cc <table_set_int@@Base+0x40>
   14800:	mvn	r0, #0
   14804:	pop	{r4, r5, r6, r7, r8, pc}

00014808 <table_set_uint@@Base>:
   14808:	push	{r4, r5, r6, r7, r8, lr}
   1480c:	mov	r5, r2
   14810:	mov	r4, r0
   14814:	mov	r8, r3
   14818:	mov	r7, r1
   1481c:	bl	13568 <table_get_cell_ptr@@Base>
   14820:	mov	r1, r5
   14824:	mov	r6, r0
   14828:	mov	r0, r4
   1482c:	bl	13934 <table_get_col_ptr@@Base>
   14830:	ldr	r2, [r0, #4]
   14834:	cmp	r2, #1
   14838:	bne	1487c <table_set_uint@@Base+0x74>
   1483c:	ldr	r0, [r6]
   14840:	cmp	r0, #0
   14844:	beq	14868 <table_set_uint@@Base+0x60>
   14848:	str	r8, [r0]
   1484c:	mov	r2, r5
   14850:	mov	r0, r4
   14854:	mov	r1, r7
   14858:	mov	r3, #1
   1485c:	bl	12a88 <table_notify@@Base>
   14860:	mov	r0, #0
   14864:	pop	{r4, r5, r6, r7, r8, pc}
   14868:	mov	r0, #4
   1486c:	bl	11bd4 <malloc@plt>
   14870:	cmp	r0, #0
   14874:	str	r0, [r6]
   14878:	bne	14848 <table_set_uint@@Base+0x40>
   1487c:	mvn	r0, #0
   14880:	pop	{r4, r5, r6, r7, r8, pc}

00014884 <table_set_int8@@Base>:
   14884:	push	{r4, r5, r6, r7, r8, lr}
   14888:	mov	r5, r2
   1488c:	mov	r4, r0
   14890:	mov	r8, r3
   14894:	mov	r7, r1
   14898:	bl	13568 <table_get_cell_ptr@@Base>
   1489c:	mov	r1, r5
   148a0:	mov	r6, r0
   148a4:	mov	r0, r4
   148a8:	bl	13934 <table_get_col_ptr@@Base>
   148ac:	ldr	r2, [r0, #4]
   148b0:	cmp	r2, #2
   148b4:	bne	148f8 <table_set_int8@@Base+0x74>
   148b8:	ldr	r0, [r6]
   148bc:	cmp	r0, #0
   148c0:	beq	148e4 <table_set_int8@@Base+0x60>
   148c4:	strb	r8, [r0]
   148c8:	mov	r2, r5
   148cc:	mov	r0, r4
   148d0:	mov	r1, r7
   148d4:	mov	r3, #1
   148d8:	bl	12a88 <table_notify@@Base>
   148dc:	mov	r0, #0
   148e0:	pop	{r4, r5, r6, r7, r8, pc}
   148e4:	mov	r0, #1
   148e8:	bl	11bd4 <malloc@plt>
   148ec:	cmp	r0, #0
   148f0:	str	r0, [r6]
   148f4:	bne	148c4 <table_set_int8@@Base+0x40>
   148f8:	mvn	r0, #0
   148fc:	pop	{r4, r5, r6, r7, r8, pc}

00014900 <table_set_uint8@@Base>:
   14900:	push	{r4, r5, r6, r7, r8, lr}
   14904:	mov	r5, r2
   14908:	mov	r4, r0
   1490c:	mov	r8, r3
   14910:	mov	r7, r1
   14914:	bl	13568 <table_get_cell_ptr@@Base>
   14918:	mov	r1, r5
   1491c:	mov	r6, r0
   14920:	mov	r0, r4
   14924:	bl	13934 <table_get_col_ptr@@Base>
   14928:	ldr	r2, [r0, #4]
   1492c:	cmp	r2, #3
   14930:	bne	14974 <table_set_uint8@@Base+0x74>
   14934:	ldr	r0, [r6]
   14938:	cmp	r0, #0
   1493c:	beq	14960 <table_set_uint8@@Base+0x60>
   14940:	strb	r8, [r0]
   14944:	mov	r2, r5
   14948:	mov	r0, r4
   1494c:	mov	r1, r7
   14950:	mov	r3, #1
   14954:	bl	12a88 <table_notify@@Base>
   14958:	mov	r0, #0
   1495c:	pop	{r4, r5, r6, r7, r8, pc}
   14960:	mov	r0, #1
   14964:	bl	11bd4 <malloc@plt>
   14968:	cmp	r0, #0
   1496c:	str	r0, [r6]
   14970:	bne	14940 <table_set_uint8@@Base+0x40>
   14974:	mvn	r0, #0
   14978:	pop	{r4, r5, r6, r7, r8, pc}

0001497c <table_set_int16@@Base>:
   1497c:	push	{r4, r5, r6, r7, r8, lr}
   14980:	mov	r5, r2
   14984:	mov	r4, r0
   14988:	mov	r8, r3
   1498c:	mov	r7, r1
   14990:	bl	13568 <table_get_cell_ptr@@Base>
   14994:	mov	r1, r5
   14998:	mov	r6, r0
   1499c:	mov	r0, r4
   149a0:	bl	13934 <table_get_col_ptr@@Base>
   149a4:	ldr	r2, [r0, #4]
   149a8:	cmp	r2, #4
   149ac:	bne	149f0 <table_set_int16@@Base+0x74>
   149b0:	ldr	r0, [r6]
   149b4:	cmp	r0, #0
   149b8:	beq	149dc <table_set_int16@@Base+0x60>
   149bc:	strh	r8, [r0]
   149c0:	mov	r2, r5
   149c4:	mov	r0, r4
   149c8:	mov	r1, r7
   149cc:	mov	r3, #1
   149d0:	bl	12a88 <table_notify@@Base>
   149d4:	mov	r0, #0
   149d8:	pop	{r4, r5, r6, r7, r8, pc}
   149dc:	mov	r0, #2
   149e0:	bl	11bd4 <malloc@plt>
   149e4:	cmp	r0, #0
   149e8:	str	r0, [r6]
   149ec:	bne	149bc <table_set_int16@@Base+0x40>
   149f0:	mvn	r0, #0
   149f4:	pop	{r4, r5, r6, r7, r8, pc}

000149f8 <table_set_uint16@@Base>:
   149f8:	push	{r4, r5, r6, r7, r8, lr}
   149fc:	mov	r5, r2
   14a00:	mov	r4, r0
   14a04:	mov	r8, r3
   14a08:	mov	r7, r1
   14a0c:	bl	13568 <table_get_cell_ptr@@Base>
   14a10:	mov	r1, r5
   14a14:	mov	r6, r0
   14a18:	mov	r0, r4
   14a1c:	bl	13934 <table_get_col_ptr@@Base>
   14a20:	ldr	r2, [r0, #4]
   14a24:	cmp	r2, #5
   14a28:	bne	14a6c <table_set_uint16@@Base+0x74>
   14a2c:	ldr	r0, [r6]
   14a30:	cmp	r0, #0
   14a34:	beq	14a58 <table_set_uint16@@Base+0x60>
   14a38:	strh	r8, [r0]
   14a3c:	mov	r2, r5
   14a40:	mov	r0, r4
   14a44:	mov	r1, r7
   14a48:	mov	r3, #1
   14a4c:	bl	12a88 <table_notify@@Base>
   14a50:	mov	r0, #0
   14a54:	pop	{r4, r5, r6, r7, r8, pc}
   14a58:	mov	r0, #2
   14a5c:	bl	11bd4 <malloc@plt>
   14a60:	cmp	r0, #0
   14a64:	str	r0, [r6]
   14a68:	bne	14a38 <table_set_uint16@@Base+0x40>
   14a6c:	mvn	r0, #0
   14a70:	pop	{r4, r5, r6, r7, r8, pc}

00014a74 <table_set_int32@@Base>:
   14a74:	push	{r4, r5, r6, r7, r8, lr}
   14a78:	mov	r5, r2
   14a7c:	mov	r4, r0
   14a80:	mov	r8, r3
   14a84:	mov	r7, r1
   14a88:	bl	13568 <table_get_cell_ptr@@Base>
   14a8c:	mov	r1, r5
   14a90:	mov	r6, r0
   14a94:	mov	r0, r4
   14a98:	bl	13934 <table_get_col_ptr@@Base>
   14a9c:	ldr	r2, [r0, #4]
   14aa0:	cmp	r2, #6
   14aa4:	bne	14ae8 <table_set_int32@@Base+0x74>
   14aa8:	ldr	r0, [r6]
   14aac:	cmp	r0, #0
   14ab0:	beq	14ad4 <table_set_int32@@Base+0x60>
   14ab4:	str	r8, [r0]
   14ab8:	mov	r2, r5
   14abc:	mov	r0, r4
   14ac0:	mov	r1, r7
   14ac4:	mov	r3, #1
   14ac8:	bl	12a88 <table_notify@@Base>
   14acc:	mov	r0, #0
   14ad0:	pop	{r4, r5, r6, r7, r8, pc}
   14ad4:	mov	r0, #4
   14ad8:	bl	11bd4 <malloc@plt>
   14adc:	cmp	r0, #0
   14ae0:	str	r0, [r6]
   14ae4:	bne	14ab4 <table_set_int32@@Base+0x40>
   14ae8:	mvn	r0, #0
   14aec:	pop	{r4, r5, r6, r7, r8, pc}

00014af0 <table_set_uint32@@Base>:
   14af0:	push	{r4, r5, r6, r7, r8, lr}
   14af4:	mov	r5, r2
   14af8:	mov	r4, r0
   14afc:	mov	r8, r3
   14b00:	mov	r7, r1
   14b04:	bl	13568 <table_get_cell_ptr@@Base>
   14b08:	mov	r1, r5
   14b0c:	mov	r6, r0
   14b10:	mov	r0, r4
   14b14:	bl	13934 <table_get_col_ptr@@Base>
   14b18:	ldr	r2, [r0, #4]
   14b1c:	cmp	r2, #7
   14b20:	bne	14b64 <table_set_uint32@@Base+0x74>
   14b24:	ldr	r0, [r6]
   14b28:	cmp	r0, #0
   14b2c:	beq	14b50 <table_set_uint32@@Base+0x60>
   14b30:	str	r8, [r0]
   14b34:	mov	r2, r5
   14b38:	mov	r0, r4
   14b3c:	mov	r1, r7
   14b40:	mov	r3, #1
   14b44:	bl	12a88 <table_notify@@Base>
   14b48:	mov	r0, #0
   14b4c:	pop	{r4, r5, r6, r7, r8, pc}
   14b50:	mov	r0, #4
   14b54:	bl	11bd4 <malloc@plt>
   14b58:	cmp	r0, #0
   14b5c:	str	r0, [r6]
   14b60:	bne	14b30 <table_set_uint32@@Base+0x40>
   14b64:	mvn	r0, #0
   14b68:	pop	{r4, r5, r6, r7, r8, pc}

00014b6c <table_set_int64@@Base>:
   14b6c:	push	{r4, r5, r6, r7, r8, lr}
   14b70:	mov	r5, r2
   14b74:	mov	r4, r0
   14b78:	mov	r7, r1
   14b7c:	bl	13568 <table_get_cell_ptr@@Base>
   14b80:	mov	r1, r5
   14b84:	mov	r6, r0
   14b88:	mov	r0, r4
   14b8c:	bl	13934 <table_get_col_ptr@@Base>
   14b90:	ldr	r0, [r0, #4]
   14b94:	cmp	r0, #8
   14b98:	bne	14be8 <table_set_int64@@Base+0x7c>
   14b9c:	ldr	ip, [r6]
   14ba0:	cmp	ip, #0
   14ba4:	beq	14bd4 <table_set_int64@@Base+0x68>
   14ba8:	add	r3, sp, #24
   14bac:	mov	r2, r5
   14bb0:	ldm	r3!, {r0, r1}
   14bb4:	mov	r3, #1
   14bb8:	str	r0, [ip]
   14bbc:	str	r1, [ip, #4]
   14bc0:	mov	r0, r4
   14bc4:	mov	r1, r7
   14bc8:	bl	12a88 <table_notify@@Base>
   14bcc:	mov	r0, #0
   14bd0:	pop	{r4, r5, r6, r7, r8, pc}
   14bd4:	bl	11bd4 <malloc@plt>
   14bd8:	cmp	r0, #0
   14bdc:	mov	ip, r0
   14be0:	str	r0, [r6]
   14be4:	bne	14ba8 <table_set_int64@@Base+0x3c>
   14be8:	mvn	r0, #0
   14bec:	pop	{r4, r5, r6, r7, r8, pc}

00014bf0 <table_set_uint64@@Base>:
   14bf0:	push	{r4, r5, r6, r7, r8, lr}
   14bf4:	mov	r5, r2
   14bf8:	mov	r4, r0
   14bfc:	mov	r7, r1
   14c00:	bl	13568 <table_get_cell_ptr@@Base>
   14c04:	mov	r1, r5
   14c08:	mov	r6, r0
   14c0c:	mov	r0, r4
   14c10:	bl	13934 <table_get_col_ptr@@Base>
   14c14:	ldr	r3, [r0, #4]
   14c18:	cmp	r3, #9
   14c1c:	bne	14c70 <table_set_uint64@@Base+0x80>
   14c20:	ldr	ip, [r6]
   14c24:	cmp	ip, #0
   14c28:	beq	14c58 <table_set_uint64@@Base+0x68>
   14c2c:	add	r3, sp, #24
   14c30:	mov	r2, r5
   14c34:	ldm	r3!, {r0, r1}
   14c38:	mov	r3, #1
   14c3c:	str	r0, [ip]
   14c40:	str	r1, [ip, #4]
   14c44:	mov	r0, r4
   14c48:	mov	r1, r7
   14c4c:	bl	12a88 <table_notify@@Base>
   14c50:	mov	r0, #0
   14c54:	pop	{r4, r5, r6, r7, r8, pc}
   14c58:	mov	r0, #8
   14c5c:	bl	11bd4 <malloc@plt>
   14c60:	cmp	r0, #0
   14c64:	mov	ip, r0
   14c68:	str	r0, [r6]
   14c6c:	bne	14c2c <table_set_uint64@@Base+0x3c>
   14c70:	mvn	r0, #0
   14c74:	pop	{r4, r5, r6, r7, r8, pc}

00014c78 <table_set_short@@Base>:
   14c78:	push	{r4, r5, r6, r7, r8, lr}
   14c7c:	mov	r5, r2
   14c80:	mov	r4, r0
   14c84:	mov	r8, r3
   14c88:	mov	r7, r1
   14c8c:	bl	13568 <table_get_cell_ptr@@Base>
   14c90:	mov	r1, r5
   14c94:	mov	r6, r0
   14c98:	mov	r0, r4
   14c9c:	bl	13934 <table_get_col_ptr@@Base>
   14ca0:	ldr	r2, [r0, #4]
   14ca4:	cmp	r2, #10
   14ca8:	bne	14cec <table_set_short@@Base+0x74>
   14cac:	ldr	r0, [r6]
   14cb0:	cmp	r0, #0
   14cb4:	beq	14cd8 <table_set_short@@Base+0x60>
   14cb8:	strh	r8, [r0]
   14cbc:	mov	r2, r5
   14cc0:	mov	r0, r4
   14cc4:	mov	r1, r7
   14cc8:	mov	r3, #1
   14ccc:	bl	12a88 <table_notify@@Base>
   14cd0:	mov	r0, #0
   14cd4:	pop	{r4, r5, r6, r7, r8, pc}
   14cd8:	mov	r0, #2
   14cdc:	bl	11bd4 <malloc@plt>
   14ce0:	cmp	r0, #0
   14ce4:	str	r0, [r6]
   14ce8:	bne	14cb8 <table_set_short@@Base+0x40>
   14cec:	mvn	r0, #0
   14cf0:	pop	{r4, r5, r6, r7, r8, pc}

00014cf4 <table_set_ushort@@Base>:
   14cf4:	push	{r4, r5, r6, r7, r8, lr}
   14cf8:	mov	r5, r2
   14cfc:	mov	r4, r0
   14d00:	mov	r8, r3
   14d04:	mov	r7, r1
   14d08:	bl	13568 <table_get_cell_ptr@@Base>
   14d0c:	mov	r1, r5
   14d10:	mov	r6, r0
   14d14:	mov	r0, r4
   14d18:	bl	13934 <table_get_col_ptr@@Base>
   14d1c:	ldr	r2, [r0, #4]
   14d20:	cmp	r2, #11
   14d24:	bne	14d68 <table_set_ushort@@Base+0x74>
   14d28:	ldr	r0, [r6]
   14d2c:	cmp	r0, #0
   14d30:	beq	14d54 <table_set_ushort@@Base+0x60>
   14d34:	strh	r8, [r0]
   14d38:	mov	r2, r5
   14d3c:	mov	r0, r4
   14d40:	mov	r1, r7
   14d44:	mov	r3, #1
   14d48:	bl	12a88 <table_notify@@Base>
   14d4c:	mov	r0, #0
   14d50:	pop	{r4, r5, r6, r7, r8, pc}
   14d54:	mov	r0, #2
   14d58:	bl	11bd4 <malloc@plt>
   14d5c:	cmp	r0, #0
   14d60:	str	r0, [r6]
   14d64:	bne	14d34 <table_set_ushort@@Base+0x40>
   14d68:	mvn	r0, #0
   14d6c:	pop	{r4, r5, r6, r7, r8, pc}

00014d70 <table_set_long@@Base>:
   14d70:	push	{r4, r5, r6, r7, r8, lr}
   14d74:	mov	r5, r2
   14d78:	mov	r4, r0
   14d7c:	mov	r8, r3
   14d80:	mov	r7, r1
   14d84:	bl	13568 <table_get_cell_ptr@@Base>
   14d88:	mov	r1, r5
   14d8c:	mov	r6, r0
   14d90:	mov	r0, r4
   14d94:	bl	13934 <table_get_col_ptr@@Base>
   14d98:	ldr	r2, [r0, #4]
   14d9c:	cmp	r2, #12
   14da0:	bne	14de4 <table_set_long@@Base+0x74>
   14da4:	ldr	r0, [r6]
   14da8:	cmp	r0, #0
   14dac:	beq	14dd0 <table_set_long@@Base+0x60>
   14db0:	str	r8, [r0]
   14db4:	mov	r2, r5
   14db8:	mov	r0, r4
   14dbc:	mov	r1, r7
   14dc0:	mov	r3, #1
   14dc4:	bl	12a88 <table_notify@@Base>
   14dc8:	mov	r0, #0
   14dcc:	pop	{r4, r5, r6, r7, r8, pc}
   14dd0:	mov	r0, #4
   14dd4:	bl	11bd4 <malloc@plt>
   14dd8:	cmp	r0, #0
   14ddc:	str	r0, [r6]
   14de0:	bne	14db0 <table_set_long@@Base+0x40>
   14de4:	mvn	r0, #0
   14de8:	pop	{r4, r5, r6, r7, r8, pc}

00014dec <table_set_ulong@@Base>:
   14dec:	push	{r4, r5, r6, r7, r8, lr}
   14df0:	mov	r5, r2
   14df4:	mov	r4, r0
   14df8:	mov	r8, r3
   14dfc:	mov	r7, r1
   14e00:	bl	13568 <table_get_cell_ptr@@Base>
   14e04:	mov	r1, r5
   14e08:	mov	r6, r0
   14e0c:	mov	r0, r4
   14e10:	bl	13934 <table_get_col_ptr@@Base>
   14e14:	ldr	r2, [r0, #4]
   14e18:	cmp	r2, #13
   14e1c:	bne	14e60 <table_set_ulong@@Base+0x74>
   14e20:	ldr	r0, [r6]
   14e24:	cmp	r0, #0
   14e28:	beq	14e4c <table_set_ulong@@Base+0x60>
   14e2c:	str	r8, [r0]
   14e30:	mov	r2, r5
   14e34:	mov	r0, r4
   14e38:	mov	r1, r7
   14e3c:	mov	r3, #1
   14e40:	bl	12a88 <table_notify@@Base>
   14e44:	mov	r0, #0
   14e48:	pop	{r4, r5, r6, r7, r8, pc}
   14e4c:	mov	r0, #4
   14e50:	bl	11bd4 <malloc@plt>
   14e54:	cmp	r0, #0
   14e58:	str	r0, [r6]
   14e5c:	bne	14e2c <table_set_ulong@@Base+0x40>
   14e60:	mvn	r0, #0
   14e64:	pop	{r4, r5, r6, r7, r8, pc}

00014e68 <table_set_llong@@Base>:
   14e68:	push	{r4, r5, r6, r7, r8, lr}
   14e6c:	mov	r5, r2
   14e70:	mov	r4, r0
   14e74:	mov	r7, r1
   14e78:	bl	13568 <table_get_cell_ptr@@Base>
   14e7c:	mov	r1, r5
   14e80:	mov	r6, r0
   14e84:	mov	r0, r4
   14e88:	bl	13934 <table_get_col_ptr@@Base>
   14e8c:	ldr	r3, [r0, #4]
   14e90:	cmp	r3, #14
   14e94:	bne	14ee8 <table_set_llong@@Base+0x80>
   14e98:	ldr	ip, [r6]
   14e9c:	cmp	ip, #0
   14ea0:	beq	14ed0 <table_set_llong@@Base+0x68>
   14ea4:	add	r3, sp, #24
   14ea8:	mov	r2, r5
   14eac:	ldm	r3!, {r0, r1}
   14eb0:	mov	r3, #1
   14eb4:	str	r0, [ip]
   14eb8:	str	r1, [ip, #4]
   14ebc:	mov	r0, r4
   14ec0:	mov	r1, r7
   14ec4:	bl	12a88 <table_notify@@Base>
   14ec8:	mov	r0, #0
   14ecc:	pop	{r4, r5, r6, r7, r8, pc}
   14ed0:	mov	r0, #8
   14ed4:	bl	11bd4 <malloc@plt>
   14ed8:	cmp	r0, #0
   14edc:	mov	ip, r0
   14ee0:	str	r0, [r6]
   14ee4:	bne	14ea4 <table_set_llong@@Base+0x3c>
   14ee8:	mvn	r0, #0
   14eec:	pop	{r4, r5, r6, r7, r8, pc}

00014ef0 <table_set_ullong@@Base>:
   14ef0:	push	{r4, r5, r6, r7, r8, lr}
   14ef4:	mov	r5, r2
   14ef8:	mov	r4, r0
   14efc:	mov	r7, r1
   14f00:	bl	13568 <table_get_cell_ptr@@Base>
   14f04:	mov	r1, r5
   14f08:	mov	r6, r0
   14f0c:	mov	r0, r4
   14f10:	bl	13934 <table_get_col_ptr@@Base>
   14f14:	ldr	r3, [r0, #4]
   14f18:	cmp	r3, #15
   14f1c:	bne	14f70 <table_set_ullong@@Base+0x80>
   14f20:	ldr	ip, [r6]
   14f24:	cmp	ip, #0
   14f28:	beq	14f58 <table_set_ullong@@Base+0x68>
   14f2c:	add	r3, sp, #24
   14f30:	mov	r2, r5
   14f34:	ldm	r3!, {r0, r1}
   14f38:	mov	r3, #1
   14f3c:	str	r0, [ip]
   14f40:	str	r1, [ip, #4]
   14f44:	mov	r0, r4
   14f48:	mov	r1, r7
   14f4c:	bl	12a88 <table_notify@@Base>
   14f50:	mov	r0, #0
   14f54:	pop	{r4, r5, r6, r7, r8, pc}
   14f58:	mov	r0, #8
   14f5c:	bl	11bd4 <malloc@plt>
   14f60:	cmp	r0, #0
   14f64:	mov	ip, r0
   14f68:	str	r0, [r6]
   14f6c:	bne	14f2c <table_set_ullong@@Base+0x3c>
   14f70:	mvn	r0, #0
   14f74:	pop	{r4, r5, r6, r7, r8, pc}

00014f78 <table_set_float@@Base>:
   14f78:	push	{r4, r5, r6, r7, r8, lr}
   14f7c:	mov	r5, r2
   14f80:	mov	r4, r0
   14f84:	mov	r7, r1
   14f88:	vmov	r8, s0
   14f8c:	bl	13568 <table_get_cell_ptr@@Base>
   14f90:	mov	r1, r5
   14f94:	mov	r6, r0
   14f98:	mov	r0, r4
   14f9c:	bl	13934 <table_get_col_ptr@@Base>
   14fa0:	ldr	r3, [r0, #4]
   14fa4:	cmp	r3, #16
   14fa8:	bne	14fec <table_set_float@@Base+0x74>
   14fac:	ldr	r0, [r6]
   14fb0:	cmp	r0, #0
   14fb4:	beq	14fd8 <table_set_float@@Base+0x60>
   14fb8:	str	r8, [r0]
   14fbc:	mov	r2, r5
   14fc0:	mov	r0, r4
   14fc4:	mov	r1, r7
   14fc8:	mov	r3, #1
   14fcc:	bl	12a88 <table_notify@@Base>
   14fd0:	mov	r0, #0
   14fd4:	pop	{r4, r5, r6, r7, r8, pc}
   14fd8:	mov	r0, #4
   14fdc:	bl	11bd4 <malloc@plt>
   14fe0:	cmp	r0, #0
   14fe4:	str	r0, [r6]
   14fe8:	bne	14fb8 <table_set_float@@Base+0x40>
   14fec:	mvn	r0, #0
   14ff0:	pop	{r4, r5, r6, r7, r8, pc}

00014ff4 <table_set_double@@Base>:
   14ff4:	push	{r4, r5, r6, r7, lr}
   14ff8:	sub	sp, sp, #12
   14ffc:	mov	r5, r2
   15000:	mov	r4, r0
   15004:	vstr	d0, [sp]
   15008:	mov	r7, r1
   1500c:	bl	13568 <table_get_cell_ptr@@Base>
   15010:	mov	r1, r5
   15014:	mov	r6, r0
   15018:	mov	r0, r4
   1501c:	bl	13934 <table_get_col_ptr@@Base>
   15020:	ldr	r3, [r0, #4]
   15024:	cmp	r3, #17
   15028:	bne	15080 <table_set_double@@Base+0x8c>
   1502c:	ldr	ip, [r6]
   15030:	cmp	ip, #0
   15034:	beq	15068 <table_set_double@@Base+0x74>
   15038:	mov	r3, sp
   1503c:	mov	r2, r5
   15040:	ldm	r3!, {r0, r1}
   15044:	mov	r3, #1
   15048:	str	r0, [ip]
   1504c:	str	r1, [ip, #4]
   15050:	mov	r0, r4
   15054:	mov	r1, r7
   15058:	bl	12a88 <table_notify@@Base>
   1505c:	mov	r0, #0
   15060:	add	sp, sp, #12
   15064:	pop	{r4, r5, r6, r7, pc}
   15068:	mov	r0, #8
   1506c:	bl	11bd4 <malloc@plt>
   15070:	cmp	r0, #0
   15074:	mov	ip, r0
   15078:	str	r0, [r6]
   1507c:	bne	15038 <table_set_double@@Base+0x44>
   15080:	mvn	r0, #0
   15084:	add	sp, sp, #12
   15088:	pop	{r4, r5, r6, r7, pc}

0001508c <table_set_ldouble@@Base>:
   1508c:	push	{r4, r5, r6, r7, lr}
   15090:	sub	sp, sp, #12
   15094:	mov	r5, r2
   15098:	mov	r4, r0
   1509c:	vstr	d0, [sp]
   150a0:	mov	r7, r1
   150a4:	bl	13568 <table_get_cell_ptr@@Base>
   150a8:	mov	r1, r5
   150ac:	mov	r6, r0
   150b0:	mov	r0, r4
   150b4:	bl	13934 <table_get_col_ptr@@Base>
   150b8:	ldr	r3, [r0, #4]
   150bc:	cmp	r3, #18
   150c0:	bne	15118 <table_set_ldouble@@Base+0x8c>
   150c4:	ldr	ip, [r6]
   150c8:	cmp	ip, #0
   150cc:	beq	15100 <table_set_ldouble@@Base+0x74>
   150d0:	mov	r3, sp
   150d4:	mov	r2, r5
   150d8:	ldm	r3!, {r0, r1}
   150dc:	mov	r3, #1
   150e0:	str	r0, [ip]
   150e4:	str	r1, [ip, #4]
   150e8:	mov	r0, r4
   150ec:	mov	r1, r7
   150f0:	bl	12a88 <table_notify@@Base>
   150f4:	mov	r0, #0
   150f8:	add	sp, sp, #12
   150fc:	pop	{r4, r5, r6, r7, pc}
   15100:	mov	r0, #8
   15104:	bl	11bd4 <malloc@plt>
   15108:	cmp	r0, #0
   1510c:	mov	ip, r0
   15110:	str	r0, [r6]
   15114:	bne	150d0 <table_set_ldouble@@Base+0x44>
   15118:	mvn	r0, #0
   1511c:	add	sp, sp, #12
   15120:	pop	{r4, r5, r6, r7, pc}

00015124 <table_set_string@@Base>:
   15124:	push	{r4, r5, r6, r7, r8, lr}
   15128:	mov	r5, r2
   1512c:	mov	r7, r3
   15130:	mov	r4, r0
   15134:	mov	r8, r1
   15138:	bl	13568 <table_get_cell_ptr@@Base>
   1513c:	mov	r1, r5
   15140:	mov	r6, r0
   15144:	mov	r0, r4
   15148:	bl	13934 <table_get_col_ptr@@Base>
   1514c:	ldr	r3, [r0, #4]
   15150:	cmp	r3, #21
   15154:	bne	1519c <table_set_string@@Base+0x78>
   15158:	mov	r0, r7
   1515c:	bl	11bf8 <strlen@plt>
   15160:	add	r1, r0, #1
   15164:	ldr	r0, [r6]
   15168:	bl	11bb0 <realloc@plt>
   1516c:	cmp	r0, #0
   15170:	str	r0, [r6]
   15174:	beq	1519c <table_set_string@@Base+0x78>
   15178:	mov	r1, r7
   1517c:	bl	11bbc <strcpy@plt>
   15180:	mov	r0, r4
   15184:	mov	r2, r5
   15188:	mov	r1, r8
   1518c:	mov	r3, #1
   15190:	bl	12a88 <table_notify@@Base>
   15194:	mov	r0, #0
   15198:	pop	{r4, r5, r6, r7, r8, pc}
   1519c:	mvn	r0, #0
   151a0:	pop	{r4, r5, r6, r7, r8, pc}

000151a4 <table_set_char@@Base>:
   151a4:	push	{r4, r5, r6, r7, r8, lr}
   151a8:	mov	r5, r2
   151ac:	mov	r4, r0
   151b0:	mov	r8, r3
   151b4:	mov	r7, r1
   151b8:	bl	13568 <table_get_cell_ptr@@Base>
   151bc:	mov	r1, r5
   151c0:	mov	r6, r0
   151c4:	mov	r0, r4
   151c8:	bl	13934 <table_get_col_ptr@@Base>
   151cc:	ldr	r2, [r0, #4]
   151d0:	cmp	r2, #19
   151d4:	bne	15218 <table_set_char@@Base+0x74>
   151d8:	ldr	r0, [r6]
   151dc:	cmp	r0, #0
   151e0:	beq	15204 <table_set_char@@Base+0x60>
   151e4:	strb	r8, [r0]
   151e8:	mov	r2, r5
   151ec:	mov	r0, r4
   151f0:	mov	r1, r7
   151f4:	mov	r3, #1
   151f8:	bl	12a88 <table_notify@@Base>
   151fc:	mov	r0, #0
   15200:	pop	{r4, r5, r6, r7, r8, pc}
   15204:	mov	r0, #1
   15208:	bl	11bd4 <malloc@plt>
   1520c:	cmp	r0, #0
   15210:	str	r0, [r6]
   15214:	bne	151e4 <table_set_char@@Base+0x40>
   15218:	mvn	r0, #0
   1521c:	pop	{r4, r5, r6, r7, r8, pc}

00015220 <table_set_uchar@@Base>:
   15220:	push	{r4, r5, r6, r7, r8, lr}
   15224:	mov	r5, r2
   15228:	mov	r4, r0
   1522c:	mov	r8, r3
   15230:	mov	r7, r1
   15234:	bl	13568 <table_get_cell_ptr@@Base>
   15238:	mov	r1, r5
   1523c:	mov	r6, r0
   15240:	mov	r0, r4
   15244:	bl	13934 <table_get_col_ptr@@Base>
   15248:	ldr	r2, [r0, #4]
   1524c:	cmp	r2, #20
   15250:	bne	15294 <table_set_uchar@@Base+0x74>
   15254:	ldr	r0, [r6]
   15258:	cmp	r0, #0
   1525c:	beq	15280 <table_set_uchar@@Base+0x60>
   15260:	strb	r8, [r0]
   15264:	mov	r2, r5
   15268:	mov	r0, r4
   1526c:	mov	r1, r7
   15270:	mov	r3, #1
   15274:	bl	12a88 <table_notify@@Base>
   15278:	mov	r0, #0
   1527c:	pop	{r4, r5, r6, r7, r8, pc}
   15280:	mov	r0, #1
   15284:	bl	11bd4 <malloc@plt>
   15288:	cmp	r0, #0
   1528c:	str	r0, [r6]
   15290:	bne	15260 <table_set_uchar@@Base+0x40>
   15294:	mvn	r0, #0
   15298:	pop	{r4, r5, r6, r7, r8, pc}

0001529c <table_set_ptr@@Base>:
   1529c:	push	{r4, r5, r6, r7, r8, lr}
   152a0:	mov	r5, r2
   152a4:	mov	r4, r0
   152a8:	mov	r8, r3
   152ac:	mov	r6, r1
   152b0:	bl	13568 <table_get_cell_ptr@@Base>
   152b4:	mov	r1, r5
   152b8:	mov	r7, r0
   152bc:	mov	r0, r4
   152c0:	bl	13934 <table_get_col_ptr@@Base>
   152c4:	ldr	r2, [r0, #4]
   152c8:	cmp	r2, #23
   152cc:	bne	152f0 <table_set_ptr@@Base+0x54>
   152d0:	mov	r0, r4
   152d4:	str	r8, [r7]
   152d8:	mov	r2, r5
   152dc:	mov	r1, r6
   152e0:	mov	r3, #1
   152e4:	bl	12a88 <table_notify@@Base>
   152e8:	mov	r0, #0
   152ec:	pop	{r4, r5, r6, r7, r8, pc}
   152f0:	mvn	r0, #0
   152f4:	pop	{r4, r5, r6, r7, r8, pc}
   152f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152fc:	sub	sp, sp, #36	; 0x24
   15300:	ldr	lr, [sp, #72]	; 0x48
   15304:	sub	sl, lr, r3
   15308:	cmp	sl, #0
   1530c:	ble	154c4 <table_set_ptr@@Base+0x228>
   15310:	ldr	lr, [sp, #72]	; 0x48
   15314:	ldr	ip, [sp, #76]	; 0x4c
   15318:	add	fp, lr, r3
   1531c:	str	ip, [sp, #4]
   15320:	add	fp, fp, fp, lsr #31
   15324:	mov	r6, r1
   15328:	asr	fp, fp, #1
   1532c:	str	fp, [sp]
   15330:	mov	r7, r2
   15334:	mov	r5, r1
   15338:	mov	r4, r0
   1533c:	str	r2, [sp, #12]
   15340:	mov	r8, r3
   15344:	str	r3, [sp, #24]
   15348:	bl	152f8 <table_set_ptr@@Base+0x5c>
   1534c:	ldr	r3, [sp, #76]	; 0x4c
   15350:	add	r9, fp, #1
   15354:	str	r3, [sp, #4]
   15358:	ldr	r3, [sp, #72]	; 0x48
   1535c:	mov	r2, r7
   15360:	mov	r1, r6
   15364:	str	r3, [sp]
   15368:	mov	r0, r4
   1536c:	mov	r3, r9
   15370:	bl	152f8 <table_set_ptr@@Base+0x5c>
   15374:	mov	r1, r7
   15378:	mov	r0, r4
   1537c:	bl	13944 <table_get_column_compare_function@@Base>
   15380:	mov	r7, r6
   15384:	str	r5, [sp, #28]
   15388:	mov	r6, #0
   1538c:	ldr	r5, [sp, #76]	; 0x4c
   15390:	str	r0, [sp, #16]
   15394:	b	15414 <table_set_ptr@@Base+0x178>
   15398:	cmp	fp, r8
   1539c:	blt	153ec <table_set_ptr@@Base+0x150>
   153a0:	ldr	r3, [sp, #72]	; 0x48
   153a4:	cmp	r3, r9
   153a8:	blt	15470 <table_set_ptr@@Base+0x1d4>
   153ac:	ldr	r2, [sp, #12]
   153b0:	mov	r1, r8
   153b4:	mov	r0, r4
   153b8:	bl	13f94 <table_get@@Base>
   153bc:	ldr	r2, [sp, #12]
   153c0:	mov	r1, r9
   153c4:	str	r0, [sp, #20]
   153c8:	mov	r0, r4
   153cc:	bl	13f94 <table_get@@Base>
   153d0:	ldr	r3, [sp, #20]
   153d4:	mov	r1, r0
   153d8:	mov	r0, r3
   153dc:	ldr	r3, [sp, #16]
   153e0:	blx	r3
   153e4:	cmp	r0, #0
   153e8:	blt	15470 <table_set_ptr@@Base+0x1d4>
   153ec:	mov	r1, r9
   153f0:	mov	r0, r4
   153f4:	bl	143a8 <table_get_row_ptr@@Base>
   153f8:	add	r6, r6, #1
   153fc:	cmp	sl, r6
   15400:	add	r9, r9, #1
   15404:	add	r7, r7, #4
   15408:	ldr	r3, [r0]
   1540c:	str	r3, [r7, #-4]
   15410:	blt	15498 <table_set_ptr@@Base+0x1fc>
   15414:	cmp	r5, #0
   15418:	beq	15398 <table_set_ptr@@Base+0xfc>
   1541c:	cmp	fp, r8
   15420:	blt	153ec <table_set_ptr@@Base+0x150>
   15424:	ldr	r3, [sp, #72]	; 0x48
   15428:	cmp	r3, r9
   1542c:	blt	15470 <table_set_ptr@@Base+0x1d4>
   15430:	ldr	r2, [sp, #12]
   15434:	mov	r1, r8
   15438:	mov	r0, r4
   1543c:	bl	13f94 <table_get@@Base>
   15440:	ldr	r2, [sp, #12]
   15444:	mov	r1, r9
   15448:	str	r0, [sp, #20]
   1544c:	mov	r0, r4
   15450:	bl	13f94 <table_get@@Base>
   15454:	ldr	r3, [sp, #20]
   15458:	mov	r1, r0
   1545c:	mov	r0, r3
   15460:	ldr	r3, [sp, #16]
   15464:	blx	r3
   15468:	cmp	r0, #0
   1546c:	ble	153ec <table_set_ptr@@Base+0x150>
   15470:	mov	r1, r8
   15474:	mov	r0, r4
   15478:	bl	143a8 <table_get_row_ptr@@Base>
   1547c:	add	r6, r6, #1
   15480:	cmp	sl, r6
   15484:	add	r8, r8, #1
   15488:	add	r7, r7, #4
   1548c:	ldr	r3, [r0]
   15490:	str	r3, [r7, #-4]
   15494:	bge	15414 <table_set_ptr@@Base+0x178>
   15498:	ldr	r5, [sp, #28]
   1549c:	ldr	r7, [sp, #24]
   154a0:	mov	r6, #0
   154a4:	mov	r2, r5
   154a8:	add	r1, r6, r7
   154ac:	mov	r0, r4
   154b0:	add	r6, r6, #1
   154b4:	bl	143b4 <table_set_row_ptr@@Base>
   154b8:	cmp	sl, r6
   154bc:	add	r5, r5, #4
   154c0:	bge	154a4 <table_set_ptr@@Base+0x208>
   154c4:	add	sp, sp, #36	; 0x24
   154c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000154cc <table_column_sort@@Base>:
   154cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154d0:	sub	sp, sp, #60	; 0x3c
   154d4:	cmp	r3, #0
   154d8:	str	r3, [sp, #52]	; 0x34
   154dc:	mov	fp, r0
   154e0:	str	r1, [sp, #32]
   154e4:	str	r2, [sp, #44]	; 0x2c
   154e8:	ble	156a8 <table_column_sort@@Base+0x1dc>
   154ec:	mvn	r3, #0
   154f0:	str	r3, [sp, #12]
   154f4:	mov	r3, #0
   154f8:	str	r3, [sp, #40]	; 0x28
   154fc:	ldr	r3, [sp, #32]
   15500:	sub	r3, r3, #4
   15504:	str	r3, [sp, #36]	; 0x24
   15508:	mov	r0, fp
   1550c:	bl	141f0 <table_get_row_length@@Base>
   15510:	ldr	r3, [sp, #40]	; 0x28
   15514:	cmp	r3, #0
   15518:	str	r0, [sp, #24]
   1551c:	beq	15760 <table_column_sort@@Base+0x294>
   15520:	ldr	r3, [sp, #36]	; 0x24
   15524:	mov	r0, fp
   15528:	ldr	r1, [r3]
   1552c:	bl	13944 <table_get_column_compare_function@@Base>
   15530:	ldr	r3, [sp, #24]
   15534:	cmp	r3, #0
   15538:	mov	r9, r0
   1553c:	ble	15678 <table_column_sort@@Base+0x1ac>
   15540:	mvn	r2, #0
   15544:	str	r2, [sp, #16]
   15548:	str	r2, [sp, #20]
   1554c:	ldr	r2, [sp, #12]
   15550:	mov	r7, #0
   15554:	sub	r3, r3, #1
   15558:	lsl	r2, r2, #2
   1555c:	str	r2, [sp, #28]
   15560:	str	r3, [sp, #48]	; 0x30
   15564:	cmp	r7, #0
   15568:	beq	155d8 <table_column_sort@@Base+0x10c>
   1556c:	ldr	r3, [sp, #12]
   15570:	cmp	r3, #0
   15574:	blt	155d8 <table_column_sort@@Base+0x10c>
   15578:	ldr	r3, [sp, #32]
   1557c:	ldr	r2, [sp, #28]
   15580:	sub	r8, r7, #1
   15584:	add	r4, r3, r2
   15588:	ldr	r5, [sp, #12]
   1558c:	b	15598 <table_column_sort@@Base+0xcc>
   15590:	cmn	r5, #1
   15594:	beq	155f4 <table_column_sort@@Base+0x128>
   15598:	mov	sl, r4
   1559c:	mov	r1, r7
   155a0:	ldr	r2, [r4], #-4
   155a4:	mov	r0, fp
   155a8:	bl	13f94 <table_get@@Base>
   155ac:	ldr	r2, [sl]
   155b0:	mov	r1, r8
   155b4:	sub	r5, r5, #1
   155b8:	mov	r6, r0
   155bc:	mov	r0, fp
   155c0:	bl	13f94 <table_get@@Base>
   155c4:	mov	r1, r0
   155c8:	mov	r0, r6
   155cc:	blx	r9
   155d0:	cmp	r0, #0
   155d4:	beq	15590 <table_column_sort@@Base+0xc4>
   155d8:	ldr	r3, [sp, #20]
   155dc:	cmn	r3, #1
   155e0:	beq	15664 <table_column_sort@@Base+0x198>
   155e4:	ldr	r3, [sp, #16]
   155e8:	cmp	r3, r7
   155ec:	bne	156c8 <table_column_sort@@Base+0x1fc>
   155f0:	b	15600 <table_column_sort@@Base+0x134>
   155f4:	ldr	r3, [sp, #20]
   155f8:	cmn	r3, #1
   155fc:	beq	15628 <table_column_sort@@Base+0x15c>
   15600:	ldr	r3, [sp, #48]	; 0x30
   15604:	cmp	r3, r7
   15608:	beq	156c4 <table_column_sort@@Base+0x1f8>
   1560c:	ldr	r2, [sp, #24]
   15610:	add	r3, r7, #1
   15614:	cmp	r2, r3
   15618:	str	r7, [sp, #16]
   1561c:	ble	15678 <table_column_sort@@Base+0x1ac>
   15620:	mov	r7, r3
   15624:	b	15564 <table_column_sort@@Base+0x98>
   15628:	cmn	r8, #1
   1562c:	bne	15750 <table_column_sort@@Base+0x284>
   15630:	mov	r3, #0
   15634:	str	r3, [sp, #16]
   15638:	ldr	r3, [sp, #24]
   1563c:	add	r7, r0, #1
   15640:	cmp	r3, r7
   15644:	ble	15678 <table_column_sort@@Base+0x1ac>
   15648:	cmp	r7, #0
   1564c:	beq	15758 <table_column_sort@@Base+0x28c>
   15650:	ldr	r3, [sp, #12]
   15654:	cmp	r3, #0
   15658:	mvn	r3, #0
   1565c:	str	r3, [sp, #20]
   15660:	bge	15578 <table_column_sort@@Base+0xac>
   15664:	mov	r0, r7
   15668:	ldr	r3, [sp, #24]
   1566c:	add	r7, r0, #1
   15670:	cmp	r3, r7
   15674:	bgt	15648 <table_column_sort@@Base+0x17c>
   15678:	ldr	r3, [sp, #40]	; 0x28
   1567c:	ldr	r2, [sp, #52]	; 0x34
   15680:	add	r3, r3, #1
   15684:	str	r3, [sp, #40]	; 0x28
   15688:	cmp	r2, r3
   1568c:	ldr	r3, [sp, #12]
   15690:	add	r3, r3, #1
   15694:	str	r3, [sp, #12]
   15698:	ldr	r3, [sp, #36]	; 0x24
   1569c:	add	r3, r3, #4
   156a0:	str	r3, [sp, #36]	; 0x24
   156a4:	bne	15508 <table_column_sort@@Base+0x3c>
   156a8:	mvn	r2, #0
   156ac:	mov	r0, fp
   156b0:	mov	r1, r2
   156b4:	mov	r3, #32
   156b8:	add	sp, sp, #60	; 0x3c
   156bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156c0:	b	12a88 <table_notify@@Base>
   156c4:	str	r3, [sp, #16]
   156c8:	ldr	r3, [sp, #36]	; 0x24
   156cc:	ldr	r8, [sp, #16]
   156d0:	ldr	sl, [sp, #20]
   156d4:	ldr	r5, [r3, #4]
   156d8:	ldr	r2, [sp, #40]	; 0x28
   156dc:	ldr	r3, [sp, #44]	; 0x2c
   156e0:	sub	r0, r8, sl
   156e4:	mov	r1, #4
   156e8:	add	r0, r0, #1
   156ec:	ldr	r6, [r3, r2, lsl #2]
   156f0:	bl	11b68 <calloc@plt>
   156f4:	mov	r3, sl
   156f8:	mov	r2, r5
   156fc:	str	r6, [sp, #4]
   15700:	str	r8, [sp]
   15704:	add	r7, r7, #1
   15708:	mov	r1, r0
   1570c:	mov	r4, r0
   15710:	mov	r0, fp
   15714:	bl	152f8 <table_set_ptr@@Base+0x5c>
   15718:	mov	r0, r4
   1571c:	bl	11b98 <free@plt>
   15720:	ldr	r3, [sp, #24]
   15724:	cmp	r3, r7
   15728:	ble	15678 <table_column_sort@@Base+0x1ac>
   1572c:	cmp	r7, #0
   15730:	mvnne	r3, #0
   15734:	strne	r3, [sp, #16]
   15738:	bne	15650 <table_column_sort@@Base+0x184>
   1573c:	mvn	r3, #0
   15740:	str	r3, [sp, #16]
   15744:	mov	r0, #0
   15748:	ldr	r3, [sp, #24]
   1574c:	b	1563c <table_column_sort@@Base+0x170>
   15750:	str	r8, [sp, #20]
   15754:	b	15600 <table_column_sort@@Base+0x134>
   15758:	mov	r0, #0
   1575c:	b	1563c <table_column_sort@@Base+0x170>
   15760:	ldr	r3, [sp, #32]
   15764:	mov	r1, #4
   15768:	ldr	r5, [r3]
   1576c:	ldr	r3, [sp, #44]	; 0x2c
   15770:	ldr	r6, [r3]
   15774:	bl	11b68 <calloc@plt>
   15778:	ldr	r3, [sp, #24]
   1577c:	str	r6, [sp, #4]
   15780:	sub	r3, r3, #1
   15784:	str	r3, [sp]
   15788:	mov	r2, r5
   1578c:	mov	r3, #0
   15790:	mov	r4, r0
   15794:	mov	r1, r0
   15798:	mov	r0, fp
   1579c:	bl	152f8 <table_set_ptr@@Base+0x5c>
   157a0:	mov	r0, r4
   157a4:	bl	11b98 <free@plt>
   157a8:	b	15678 <table_column_sort@@Base+0x1ac>
   157ac:	subs	r2, r1, #1
   157b0:	bxeq	lr
   157b4:	bcc	1598c <table_column_sort@@Base+0x4c0>
   157b8:	cmp	r0, r1
   157bc:	bls	15970 <table_column_sort@@Base+0x4a4>
   157c0:	tst	r1, r2
   157c4:	beq	1597c <table_column_sort@@Base+0x4b0>
   157c8:	clz	r3, r0
   157cc:	clz	r2, r1
   157d0:	sub	r3, r2, r3
   157d4:	rsbs	r3, r3, #31
   157d8:	addne	r3, r3, r3, lsl #1
   157dc:	mov	r2, #0
   157e0:	addne	pc, pc, r3, lsl #2
   157e4:	nop			; (mov r0, r0)
   157e8:	cmp	r0, r1, lsl #31
   157ec:	adc	r2, r2, r2
   157f0:	subcs	r0, r0, r1, lsl #31
   157f4:	cmp	r0, r1, lsl #30
   157f8:	adc	r2, r2, r2
   157fc:	subcs	r0, r0, r1, lsl #30
   15800:	cmp	r0, r1, lsl #29
   15804:	adc	r2, r2, r2
   15808:	subcs	r0, r0, r1, lsl #29
   1580c:	cmp	r0, r1, lsl #28
   15810:	adc	r2, r2, r2
   15814:	subcs	r0, r0, r1, lsl #28
   15818:	cmp	r0, r1, lsl #27
   1581c:	adc	r2, r2, r2
   15820:	subcs	r0, r0, r1, lsl #27
   15824:	cmp	r0, r1, lsl #26
   15828:	adc	r2, r2, r2
   1582c:	subcs	r0, r0, r1, lsl #26
   15830:	cmp	r0, r1, lsl #25
   15834:	adc	r2, r2, r2
   15838:	subcs	r0, r0, r1, lsl #25
   1583c:	cmp	r0, r1, lsl #24
   15840:	adc	r2, r2, r2
   15844:	subcs	r0, r0, r1, lsl #24
   15848:	cmp	r0, r1, lsl #23
   1584c:	adc	r2, r2, r2
   15850:	subcs	r0, r0, r1, lsl #23
   15854:	cmp	r0, r1, lsl #22
   15858:	adc	r2, r2, r2
   1585c:	subcs	r0, r0, r1, lsl #22
   15860:	cmp	r0, r1, lsl #21
   15864:	adc	r2, r2, r2
   15868:	subcs	r0, r0, r1, lsl #21
   1586c:	cmp	r0, r1, lsl #20
   15870:	adc	r2, r2, r2
   15874:	subcs	r0, r0, r1, lsl #20
   15878:	cmp	r0, r1, lsl #19
   1587c:	adc	r2, r2, r2
   15880:	subcs	r0, r0, r1, lsl #19
   15884:	cmp	r0, r1, lsl #18
   15888:	adc	r2, r2, r2
   1588c:	subcs	r0, r0, r1, lsl #18
   15890:	cmp	r0, r1, lsl #17
   15894:	adc	r2, r2, r2
   15898:	subcs	r0, r0, r1, lsl #17
   1589c:	cmp	r0, r1, lsl #16
   158a0:	adc	r2, r2, r2
   158a4:	subcs	r0, r0, r1, lsl #16
   158a8:	cmp	r0, r1, lsl #15
   158ac:	adc	r2, r2, r2
   158b0:	subcs	r0, r0, r1, lsl #15
   158b4:	cmp	r0, r1, lsl #14
   158b8:	adc	r2, r2, r2
   158bc:	subcs	r0, r0, r1, lsl #14
   158c0:	cmp	r0, r1, lsl #13
   158c4:	adc	r2, r2, r2
   158c8:	subcs	r0, r0, r1, lsl #13
   158cc:	cmp	r0, r1, lsl #12
   158d0:	adc	r2, r2, r2
   158d4:	subcs	r0, r0, r1, lsl #12
   158d8:	cmp	r0, r1, lsl #11
   158dc:	adc	r2, r2, r2
   158e0:	subcs	r0, r0, r1, lsl #11
   158e4:	cmp	r0, r1, lsl #10
   158e8:	adc	r2, r2, r2
   158ec:	subcs	r0, r0, r1, lsl #10
   158f0:	cmp	r0, r1, lsl #9
   158f4:	adc	r2, r2, r2
   158f8:	subcs	r0, r0, r1, lsl #9
   158fc:	cmp	r0, r1, lsl #8
   15900:	adc	r2, r2, r2
   15904:	subcs	r0, r0, r1, lsl #8
   15908:	cmp	r0, r1, lsl #7
   1590c:	adc	r2, r2, r2
   15910:	subcs	r0, r0, r1, lsl #7
   15914:	cmp	r0, r1, lsl #6
   15918:	adc	r2, r2, r2
   1591c:	subcs	r0, r0, r1, lsl #6
   15920:	cmp	r0, r1, lsl #5
   15924:	adc	r2, r2, r2
   15928:	subcs	r0, r0, r1, lsl #5
   1592c:	cmp	r0, r1, lsl #4
   15930:	adc	r2, r2, r2
   15934:	subcs	r0, r0, r1, lsl #4
   15938:	cmp	r0, r1, lsl #3
   1593c:	adc	r2, r2, r2
   15940:	subcs	r0, r0, r1, lsl #3
   15944:	cmp	r0, r1, lsl #2
   15948:	adc	r2, r2, r2
   1594c:	subcs	r0, r0, r1, lsl #2
   15950:	cmp	r0, r1, lsl #1
   15954:	adc	r2, r2, r2
   15958:	subcs	r0, r0, r1, lsl #1
   1595c:	cmp	r0, r1
   15960:	adc	r2, r2, r2
   15964:	subcs	r0, r0, r1
   15968:	mov	r0, r2
   1596c:	bx	lr
   15970:	moveq	r0, #1
   15974:	movne	r0, #0
   15978:	bx	lr
   1597c:	clz	r2, r1
   15980:	rsb	r2, r2, #31
   15984:	lsr	r0, r0, r2
   15988:	bx	lr
   1598c:	cmp	r0, #0
   15990:	mvnne	r0, #0
   15994:	b	159b8 <table_column_sort@@Base+0x4ec>
   15998:	cmp	r1, #0
   1599c:	beq	1598c <table_column_sort@@Base+0x4c0>
   159a0:	push	{r0, r1, lr}
   159a4:	bl	157ac <table_column_sort@@Base+0x2e0>
   159a8:	pop	{r1, r2, lr}
   159ac:	mul	r3, r2, r0
   159b0:	sub	r1, r1, r3
   159b4:	bx	lr
   159b8:	push	{r1, lr}
   159bc:	mov	r0, #8
   159c0:	bl	11b74 <raise@plt>
   159c4:	pop	{r1, pc}

000159c8 <__libc_csu_init@@Base>:
   159c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159cc:	mov	r7, r0
   159d0:	ldr	r6, [pc, #72]	; 15a20 <__libc_csu_init@@Base+0x58>
   159d4:	ldr	r5, [pc, #72]	; 15a24 <__libc_csu_init@@Base+0x5c>
   159d8:	add	r6, pc, r6
   159dc:	add	r5, pc, r5
   159e0:	sub	r6, r6, r5
   159e4:	mov	r8, r1
   159e8:	mov	r9, r2
   159ec:	bl	11b48 <calloc@plt-0x20>
   159f0:	asrs	r6, r6, #2
   159f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   159f8:	mov	r4, #0
   159fc:	add	r4, r4, #1
   15a00:	ldr	r3, [r5], #4
   15a04:	mov	r2, r9
   15a08:	mov	r1, r8
   15a0c:	mov	r0, r7
   15a10:	blx	r3
   15a14:	cmp	r6, r4
   15a18:	bne	159fc <__libc_csu_init@@Base+0x34>
   15a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a20:	andeq	r0, r1, r0, lsr r5
   15a24:	andeq	r0, r1, r8, lsr #10

00015a28 <__libc_csu_fini@@Base>:
   15a28:	bx	lr

Disassembly of section .fini:

00015a2c <.fini>:
   15a2c:	push	{r3, lr}
   15a30:	pop	{r3, pc}
