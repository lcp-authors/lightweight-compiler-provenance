
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

0001093c <.init>:
   1093c:	push	{r3, lr}
   10940:	bl	10c44 <_start@@Base+0x3c>
   10944:	pop	{r3, pc}

Disassembly of section .plt:

00010948 <raise@plt-0x14>:
   10948:	push	{lr}		; (str lr, [sp, #-4]!)
   1094c:	ldr	lr, [pc, #4]	; 10958 <raise@plt-0x4>
   10950:	add	lr, pc, lr
   10954:	ldr	pc, [lr, #8]!
   10958:	andeq	r1, r1, r8, lsr #13

0001095c <raise@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1704]!	; 0x6a8

00010968 <fopen@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1696]!	; 0x6a0

00010974 <time@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1688]!	; 0x698

00010980 <xcb_connect@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1680]!	; 0x690

0001098c <sleep@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1672]!	; 0x688

00010998 <xcb_flush@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1664]!	; 0x680

000109a4 <rewind@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1656]!	; 0x678

000109b0 <xcb_screen_next@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1648]!	; 0x670

000109bc <fread@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1640]!	; 0x668

000109c8 <xcb_setup_roots_iterator@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1632]!	; 0x660

000109d4 <puts@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1624]!	; 0x658

000109e0 <__libc_start_main@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1616]!	; 0x650

000109ec <localtime@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1608]!	; 0x648

000109f8 <__gmon_start__@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1600]!	; 0x640

00010a04 <exit@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1592]!	; 0x638

00010a10 <snprintf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1584]!	; 0x630

00010a1c <__isoc99_sscanf@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1576]!	; 0x628

00010a28 <fclose@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1568]!	; 0x620

00010a34 <xcb_disconnect@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1560]!	; 0x618

00010a40 <xcb_connection_has_error@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1552]!	; 0x610

00010a4c <xcb_get_setup@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1544]!	; 0x608

00010a58 <xcb_change_property@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1536]!	; 0x600

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00010a70 <main@@Base>:
   10a70:	push	{r4, r5, r6, r7, r8, r9, lr}
   10a74:	sub	sp, sp, #148	; 0x94
   10a78:	add	r1, sp, #24
   10a7c:	mov	r0, #0
   10a80:	bl	10980 <xcb_connect@plt>
   10a84:	mov	r6, r0
   10a88:	bl	10a40 <xcb_connection_has_error@plt>
   10a8c:	cmp	r0, #0
   10a90:	beq	10aac <main@@Base+0x3c>
   10a94:	ldr	r0, [pc, #352]	; 10bfc <main@@Base+0x18c>
   10a98:	bl	109d4 <puts@plt>
   10a9c:	mov	r0, r6
   10aa0:	bl	10a34 <xcb_disconnect@plt>
   10aa4:	mov	r0, #1
   10aa8:	bl	10a04 <exit@plt>
   10aac:	mov	r0, r6
   10ab0:	bl	10a4c <xcb_get_setup@plt>
   10ab4:	add	r7, sp, #60	; 0x3c
   10ab8:	mov	r1, r0
   10abc:	mov	r0, r7
   10ac0:	bl	109c8 <xcb_setup_roots_iterator@plt>
   10ac4:	ldr	r4, [sp, #24]
   10ac8:	sub	r3, r4, #1
   10acc:	cmp	r4, #0
   10ad0:	str	r3, [sp, #24]
   10ad4:	bne	10be4 <main@@Base+0x174>
   10ad8:	ldr	r3, [sp, #60]	; 0x3c
   10adc:	add	r0, sp, #24
   10ae0:	ldr	r9, [pc, #280]	; 10c00 <main@@Base+0x190>
   10ae4:	ldr	r8, [r3]
   10ae8:	bl	10d90 <init_bat@@Base>
   10aec:	ldrb	r3, [sp, #48]	; 0x30
   10af0:	strb	r4, [sp, #140]	; 0x8c
   10af4:	cmp	r3, #0
   10af8:	moveq	r5, r4
   10afc:	beq	10b14 <main@@Base+0xa4>
   10b00:	mov	r2, #80	; 0x50
   10b04:	mov	r1, r7
   10b08:	add	r0, sp, #24
   10b0c:	bl	10eb0 <bat@@Base>
   10b10:	mov	r5, r0
   10b14:	mov	r0, r4
   10b18:	bl	10974 <time@plt>
   10b1c:	str	r0, [sp, #20]
   10b20:	add	r0, sp, #20
   10b24:	bl	109ec <localtime@plt>
   10b28:	rsb	r1, r5, #80	; 0x50
   10b2c:	ldr	r2, [r0, #4]
   10b30:	ldr	r3, [r0, #20]
   10b34:	str	r2, [sp, #12]
   10b38:	ldr	r2, [r0, #8]
   10b3c:	add	r3, r3, #1888	; 0x760
   10b40:	str	r2, [sp, #8]
   10b44:	ldr	r2, [r0, #12]
   10b48:	add	r3, r3, #12
   10b4c:	str	r2, [sp, #4]
   10b50:	ldr	r2, [r0, #16]
   10b54:	add	r0, r7, r5
   10b58:	add	r2, r2, #1
   10b5c:	str	r2, [sp]
   10b60:	mov	r2, r9
   10b64:	bl	10a10 <snprintf@plt>
   10b68:	mov	r2, #31
   10b6c:	mov	r3, #8
   10b70:	mov	r1, r4
   10b74:	stm	sp, {r2, r3}
   10b78:	str	r7, [sp, #12]
   10b7c:	mov	r3, #39	; 0x27
   10b80:	mov	r2, r8
   10b84:	add	r0, r0, r5
   10b88:	str	r0, [sp, #8]
   10b8c:	mov	r0, r6
   10b90:	bl	10a58 <xcb_change_property@plt>
   10b94:	mov	r0, r6
   10b98:	bl	10998 <xcb_flush@plt>
   10b9c:	cmp	r0, #0
   10ba0:	bgt	10bf0 <main@@Base+0x180>
   10ba4:	ldr	r0, [pc, #88]	; 10c04 <main@@Base+0x194>
   10ba8:	bl	109d4 <puts@plt>
   10bac:	mov	r0, r6
   10bb0:	bl	10a34 <xcb_disconnect@plt>
   10bb4:	ldrb	r3, [sp, #48]	; 0x30
   10bb8:	cmp	r3, #0
   10bbc:	beq	10bd8 <main@@Base+0x168>
   10bc0:	ldr	r0, [sp, #24]
   10bc4:	bl	10a28 <fclose@plt>
   10bc8:	ldr	r0, [sp, #32]
   10bcc:	bl	10a28 <fclose@plt>
   10bd0:	ldr	r0, [sp, #28]
   10bd4:	bl	10a28 <fclose@plt>
   10bd8:	mov	r0, #2
   10bdc:	add	sp, sp, #148	; 0x94
   10be0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10be4:	mov	r0, r7
   10be8:	bl	109b0 <xcb_screen_next@plt>
   10bec:	b	10ac4 <main@@Base+0x54>
   10bf0:	mov	r0, #60	; 0x3c
   10bf4:	bl	1098c <sleep@plt>
   10bf8:	b	10aec <main@@Base+0x7c>
   10bfc:	andeq	r1, r1, r8, lsl #3
   10c00:	andeq	r1, r1, r0, lsr #3
   10c04:			; <UNDEFINED> instruction: 0x000111b9

00010c08 <_start@@Base>:
   10c08:	mov	fp, #0
   10c0c:	mov	lr, #0
   10c10:	pop	{r1}		; (ldr r1, [sp], #4)
   10c14:	mov	r2, sp
   10c18:	push	{r2}		; (str r2, [sp, #-4]!)
   10c1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c20:	ldr	ip, [pc, #16]	; 10c38 <_start@@Base+0x30>
   10c24:	push	{ip}		; (str ip, [sp, #-4]!)
   10c28:	ldr	r0, [pc, #12]	; 10c3c <_start@@Base+0x34>
   10c2c:	ldr	r3, [pc, #12]	; 10c40 <_start@@Base+0x38>
   10c30:	bl	109e0 <__libc_start_main@plt>
   10c34:	bl	10a64 <abort@plt>
   10c38:	andeq	r1, r1, r8, ror r1
   10c3c:	andeq	r0, r1, r0, ror sl
   10c40:	andeq	r1, r1, r8, lsl r1
   10c44:	ldr	r3, [pc, #20]	; 10c60 <_start@@Base+0x58>
   10c48:	ldr	r2, [pc, #20]	; 10c64 <_start@@Base+0x5c>
   10c4c:	add	r3, pc, r3
   10c50:	ldr	r2, [r3, r2]
   10c54:	cmp	r2, #0
   10c58:	bxeq	lr
   10c5c:	b	109f8 <__gmon_start__@plt>
   10c60:	andeq	r1, r1, ip, lsr #7
   10c64:	andeq	r0, r0, r8, rrx
   10c68:	ldr	r3, [pc, #28]	; 10c8c <_start@@Base+0x84>
   10c6c:	ldr	r0, [pc, #28]	; 10c90 <_start@@Base+0x88>
   10c70:	sub	r3, r3, r0
   10c74:	cmp	r3, #6
   10c78:	bxls	lr
   10c7c:	ldr	r3, [pc, #16]	; 10c94 <_start@@Base+0x8c>
   10c80:	cmp	r3, #0
   10c84:	bxeq	lr
   10c88:	bx	r3
   10c8c:	andeq	r2, r2, r7, ror r0
   10c90:	andeq	r2, r2, r4, ror r0
   10c94:	andeq	r0, r0, r0
   10c98:	ldr	r1, [pc, #36]	; 10cc4 <_start@@Base+0xbc>
   10c9c:	ldr	r0, [pc, #36]	; 10cc8 <_start@@Base+0xc0>
   10ca0:	sub	r1, r1, r0
   10ca4:	asr	r1, r1, #2
   10ca8:	add	r1, r1, r1, lsr #31
   10cac:	asrs	r1, r1, #1
   10cb0:	bxeq	lr
   10cb4:	ldr	r3, [pc, #16]	; 10ccc <_start@@Base+0xc4>
   10cb8:	cmp	r3, #0
   10cbc:	bxeq	lr
   10cc0:	bx	r3
   10cc4:	andeq	r2, r2, r4, ror r0
   10cc8:	andeq	r2, r2, r4, ror r0
   10ccc:	andeq	r0, r0, r0
   10cd0:	push	{r4, lr}
   10cd4:	ldr	r4, [pc, #24]	; 10cf4 <_start@@Base+0xec>
   10cd8:	ldrb	r3, [r4]
   10cdc:	cmp	r3, #0
   10ce0:	popne	{r4, pc}
   10ce4:	bl	10c68 <_start@@Base+0x60>
   10ce8:	mov	r3, #1
   10cec:	strb	r3, [r4]
   10cf0:	pop	{r4, pc}
   10cf4:	andeq	r2, r2, r4, ror r0
   10cf8:	ldr	r0, [pc, #40]	; 10d28 <_start@@Base+0x120>
   10cfc:	ldr	r3, [r0]
   10d00:	cmp	r3, #0
   10d04:	bne	10d0c <_start@@Base+0x104>
   10d08:	b	10c98 <_start@@Base+0x90>
   10d0c:	ldr	r3, [pc, #24]	; 10d2c <_start@@Base+0x124>
   10d10:	cmp	r3, #0
   10d14:	beq	10d08 <_start@@Base+0x100>
   10d18:	push	{r4, lr}
   10d1c:	blx	r3
   10d20:	pop	{r4, lr}
   10d24:	b	10c98 <_start@@Base+0x90>
   10d28:	andeq	r1, r2, ip, lsl #30
   10d2c:	andeq	r0, r0, r0

00010d30 <read_int@@Base>:
   10d30:	push	{r4, lr}
   10d34:	mov	r4, r0
   10d38:	sub	sp, sp, #48	; 0x30
   10d3c:	bl	109a4 <rewind@plt>
   10d40:	mov	r3, r4
   10d44:	mov	r2, #40	; 0x28
   10d48:	mov	r1, #1
   10d4c:	add	r0, sp, #8
   10d50:	bl	109bc <fread@plt>
   10d54:	add	r3, sp, #48	; 0x30
   10d58:	ldr	r1, [pc, #44]	; 10d8c <read_int@@Base+0x5c>
   10d5c:	mov	r2, sp
   10d60:	add	r0, r3, r0
   10d64:	mov	r3, #0
   10d68:	strb	r3, [r0, #-40]	; 0xffffffd8
   10d6c:	add	r0, sp, #8
   10d70:	bl	10a1c <__isoc99_sscanf@plt>
   10d74:	cmp	r0, #1
   10d78:	mvnne	r0, #0
   10d7c:	movne	r1, #0
   10d80:	ldrdeq	r0, [sp]
   10d84:	add	sp, sp, #48	; 0x30
   10d88:	pop	{r4, pc}
   10d8c:	ldrdeq	r1, [r1], -r9

00010d90 <init_bat@@Base>:
   10d90:	push	{r4, r5, r6, lr}
   10d94:	mov	r4, r0
   10d98:	ldr	r1, [pc, #180]	; 10e54 <init_bat@@Base+0xc4>
   10d9c:	ldr	r0, [pc, #180]	; 10e58 <init_bat@@Base+0xc8>
   10da0:	bl	10968 <fopen@plt>
   10da4:	subs	r5, r0, #0
   10da8:	bne	10dd4 <init_bat@@Base+0x44>
   10dac:	ldr	r1, [pc, #160]	; 10e54 <init_bat@@Base+0xc4>
   10db0:	ldr	r0, [pc, #164]	; 10e5c <init_bat@@Base+0xcc>
   10db4:	bl	10968 <fopen@plt>
   10db8:	subs	r5, r0, #0
   10dbc:	bne	10dd4 <init_bat@@Base+0x44>
   10dc0:	strb	r5, [r4, #24]
   10dc4:	str	r5, [r4]
   10dc8:	str	r5, [r4, #4]
   10dcc:	str	r5, [r4, #8]
   10dd0:	pop	{r4, r5, r6, pc}
   10dd4:	mov	r3, #1
   10dd8:	strb	r3, [r4, #24]
   10ddc:	mov	r0, r5
   10de0:	bl	10d30 <read_int@@Base>
   10de4:	strd	r0, [r4, #16]
   10de8:	ldr	r1, [pc, #100]	; 10e54 <init_bat@@Base+0xc4>
   10dec:	ldr	r0, [pc, #108]	; 10e60 <init_bat@@Base+0xd0>
   10df0:	bl	10968 <fopen@plt>
   10df4:	ldr	r1, [pc, #88]	; 10e54 <init_bat@@Base+0xc4>
   10df8:	str	r0, [r4]
   10dfc:	ldr	r0, [pc, #96]	; 10e64 <init_bat@@Base+0xd4>
   10e00:	bl	10968 <fopen@plt>
   10e04:	cmp	r0, #0
   10e08:	str	r0, [r4, #4]
   10e0c:	bne	10e20 <init_bat@@Base+0x90>
   10e10:	ldr	r1, [pc, #60]	; 10e54 <init_bat@@Base+0xc4>
   10e14:	ldr	r0, [pc, #76]	; 10e68 <init_bat@@Base+0xd8>
   10e18:	bl	10968 <fopen@plt>
   10e1c:	str	r0, [r4, #4]
   10e20:	ldr	r1, [pc, #44]	; 10e54 <init_bat@@Base+0xc4>
   10e24:	ldr	r0, [pc, #64]	; 10e6c <init_bat@@Base+0xdc>
   10e28:	bl	10968 <fopen@plt>
   10e2c:	cmp	r0, #0
   10e30:	str	r0, [r4, #8]
   10e34:	bne	10e48 <init_bat@@Base+0xb8>
   10e38:	ldr	r1, [pc, #20]	; 10e54 <init_bat@@Base+0xc4>
   10e3c:	ldr	r0, [pc, #44]	; 10e70 <init_bat@@Base+0xe0>
   10e40:	bl	10968 <fopen@plt>
   10e44:	str	r0, [r4, #8]
   10e48:	mov	r0, r5
   10e4c:	pop	{r4, r5, r6, lr}
   10e50:	b	10a28 <fclose@plt>
   10e54:	ldrdeq	r1, [r1], -lr
   10e58:	andeq	r1, r1, r0, ror #3
   10e5c:	andeq	r1, r1, r9, lsl #4
   10e60:	andeq	r1, r1, r2, lsr r2
   10e64:	andeq	r1, r1, r4, asr r2
   10e68:	andeq	r1, r1, ip, ror r2
   10e6c:	andeq	r1, r1, r4, lsr #5
   10e70:	andeq	r1, r1, fp, asr #5

00010e74 <close_bat@@Base>:
   10e74:	push	{r4, lr}
   10e78:	mov	r4, r0
   10e7c:	ldr	r0, [r0]
   10e80:	cmp	r0, #0
   10e84:	beq	10e8c <close_bat@@Base+0x18>
   10e88:	bl	10a28 <fclose@plt>
   10e8c:	ldr	r0, [r4, #4]
   10e90:	cmp	r0, #0
   10e94:	beq	10e9c <close_bat@@Base+0x28>
   10e98:	bl	10a28 <fclose@plt>
   10e9c:	ldr	r0, [r4, #8]
   10ea0:	cmp	r0, #0
   10ea4:	popeq	{r4, pc}
   10ea8:	pop	{r4, lr}
   10eac:	b	10a28 <fclose@plt>

00010eb0 <bat@@Base>:
   10eb0:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   10eb4:	mov	r4, r0
   10eb8:	ldr	r0, [r0]
   10ebc:	mov	r6, r2
   10ec0:	mov	r5, r1
   10ec4:	bl	10d30 <read_int@@Base>
   10ec8:	strd	r0, [sp, #8]
   10ecc:	ldr	r0, [r4, #4]
   10ed0:	bl	10d30 <read_int@@Base>
   10ed4:	mov	sl, r0
   10ed8:	ldr	r0, [r4, #8]
   10edc:	mov	r7, r1
   10ee0:	bl	10d30 <read_int@@Base>
   10ee4:	mov	r3, #100	; 0x64
   10ee8:	mov	r8, r0
   10eec:	mov	r9, r1
   10ef0:	umull	r0, r1, sl, r3
   10ef4:	mla	r1, r3, r7, r1
   10ef8:	ldrd	r2, [r4, #16]
   10efc:	bl	10fa4 <bat@@Base+0xf4>
   10f00:	ldrd	r2, [sp, #8]
   10f04:	orrs	r3, r2, r3
   10f08:	ldrne	r2, [pc, #136]	; 10f98 <bat@@Base+0xe8>
   10f0c:	mov	r4, r0
   10f10:	movne	r3, r0
   10f14:	bne	10f84 <bat@@Base+0xd4>
   10f18:	orrs	r3, r8, r9
   10f1c:	moveq	r3, r0
   10f20:	ldreq	r2, [pc, #116]	; 10f9c <bat@@Base+0xec>
   10f24:	beq	10f84 <bat@@Base+0xd4>
   10f28:	mov	r3, #60	; 0x3c
   10f2c:	mov	r2, r8
   10f30:	umull	r0, r1, sl, r3
   10f34:	mla	r1, r3, r7, r1
   10f38:	mov	r3, r9
   10f3c:	bl	10fa4 <bat@@Base+0xf4>
   10f40:	mov	r2, #60	; 0x3c
   10f44:	mov	r3, #0
   10f48:	bl	10fa4 <bat@@Base+0xf4>
   10f4c:	mov	r3, r9
   10f50:	mov	r0, sl
   10f54:	mov	r1, r7
   10f58:	str	r2, [sp, #4]
   10f5c:	mov	r2, r8
   10f60:	bl	10fa4 <bat@@Base+0xf4>
   10f64:	mov	r3, r4
   10f68:	ldr	r2, [pc, #48]	; 10fa0 <bat@@Base+0xf0>
   10f6c:	mov	r1, r6
   10f70:	str	r0, [sp]
   10f74:	mov	r0, r5
   10f78:	bl	10a10 <snprintf@plt>
   10f7c:	add	sp, sp, #16
   10f80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f84:	mov	r1, r6
   10f88:	mov	r0, r5
   10f8c:	add	sp, sp, #16
   10f90:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f94:	b	10a10 <snprintf@plt>
   10f98:	strdeq	r1, [r1], -r4
   10f9c:	andeq	r1, r1, r3, lsl r3
   10fa0:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10fa4:	cmp	r3, #0
   10fa8:	cmpeq	r2, #0
   10fac:	bne	10fc4 <bat@@Base+0x114>
   10fb0:	cmp	r1, #0
   10fb4:	cmpeq	r0, #0
   10fb8:	mvnne	r1, #0
   10fbc:	mvnne	r0, #0
   10fc0:	b	10fe0 <bat@@Base+0x130>
   10fc4:	sub	sp, sp, #8
   10fc8:	push	{sp, lr}
   10fcc:	bl	10ff0 <bat@@Base+0x140>
   10fd0:	ldr	lr, [sp, #4]
   10fd4:	add	sp, sp, #8
   10fd8:	pop	{r2, r3}
   10fdc:	bx	lr
   10fe0:	push	{r1, lr}
   10fe4:	mov	r0, #8
   10fe8:	bl	1095c <raise@plt>
   10fec:	pop	{r1, pc}
   10ff0:	cmp	r1, r3
   10ff4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10ff8:	cmpeq	r0, r2
   10ffc:	mov	r4, r0
   11000:	mov	r5, r1
   11004:	ldr	r9, [sp, #28]
   11008:	movcc	r0, #0
   1100c:	movcc	r1, #0
   11010:	bcc	11108 <bat@@Base+0x258>
   11014:	cmp	r3, #0
   11018:	clzeq	ip, r2
   1101c:	clzne	ip, r3
   11020:	addeq	ip, ip, #32
   11024:	cmp	r5, #0
   11028:	clzeq	r1, r4
   1102c:	addeq	r1, r1, #32
   11030:	clzne	r1, r5
   11034:	sub	ip, ip, r1
   11038:	sub	lr, ip, #32
   1103c:	lsl	r7, r3, ip
   11040:	rsb	r8, ip, #32
   11044:	orr	r7, r7, r2, lsl lr
   11048:	orr	r7, r7, r2, lsr r8
   1104c:	lsl	r6, r2, ip
   11050:	cmp	r5, r7
   11054:	cmpeq	r4, r6
   11058:	movcc	r0, #0
   1105c:	movcc	r1, #0
   11060:	bcc	1107c <bat@@Base+0x1cc>
   11064:	mov	r3, #1
   11068:	subs	r4, r4, r6
   1106c:	lsl	r1, r3, lr
   11070:	lsl	r0, r3, ip
   11074:	orr	r1, r1, r3, lsr r8
   11078:	sbc	r5, r5, r7
   1107c:	cmp	ip, #0
   11080:	beq	11108 <bat@@Base+0x258>
   11084:	lsrs	r3, r7, #1
   11088:	rrx	r2, r6
   1108c:	mov	r6, ip
   11090:	b	110b4 <bat@@Base+0x204>
   11094:	subs	r4, r4, r2
   11098:	sbc	r5, r5, r3
   1109c:	adds	r4, r4, r4
   110a0:	adc	r5, r5, r5
   110a4:	adds	r4, r4, #1
   110a8:	adc	r5, r5, #0
   110ac:	subs	r6, r6, #1
   110b0:	beq	110d0 <bat@@Base+0x220>
   110b4:	cmp	r5, r3
   110b8:	cmpeq	r4, r2
   110bc:	bcs	11094 <bat@@Base+0x1e4>
   110c0:	adds	r4, r4, r4
   110c4:	adc	r5, r5, r5
   110c8:	subs	r6, r6, #1
   110cc:	bne	110b4 <bat@@Base+0x204>
   110d0:	lsr	r6, r4, ip
   110d4:	lsr	r7, r5, ip
   110d8:	orr	r6, r6, r5, lsl r8
   110dc:	adds	r2, r0, r4
   110e0:	orr	r6, r6, r5, lsr lr
   110e4:	adc	r3, r1, r5
   110e8:	lsl	r1, r7, ip
   110ec:	orr	r1, r1, r6, lsl lr
   110f0:	lsl	r0, r6, ip
   110f4:	orr	r1, r1, r6, lsr r8
   110f8:	subs	r0, r2, r0
   110fc:	mov	r4, r6
   11100:	mov	r5, r7
   11104:	sbc	r1, r3, r1
   11108:	cmp	r9, #0
   1110c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   11110:	strd	r4, [r9]
   11114:	pop	{r4, r5, r6, r7, r8, r9, pc}

00011118 <__libc_csu_init@@Base>:
   11118:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1111c:	mov	r7, r0
   11120:	ldr	r6, [pc, #72]	; 11170 <__libc_csu_init@@Base+0x58>
   11124:	ldr	r5, [pc, #72]	; 11174 <__libc_csu_init@@Base+0x5c>
   11128:	add	r6, pc, r6
   1112c:	add	r5, pc, r5
   11130:	sub	r6, r6, r5
   11134:	mov	r8, r1
   11138:	mov	r9, r2
   1113c:	bl	1093c <raise@plt-0x20>
   11140:	asrs	r6, r6, #2
   11144:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11148:	mov	r4, #0
   1114c:	add	r4, r4, #1
   11150:	ldr	r3, [r5], #4
   11154:	mov	r2, r9
   11158:	mov	r1, r8
   1115c:	mov	r0, r7
   11160:	blx	r3
   11164:	cmp	r6, r4
   11168:	bne	1114c <__libc_csu_init@@Base+0x34>
   1116c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11170:	ldrdeq	r0, [r1], -r8
   11174:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00011178 <__libc_csu_fini@@Base>:
   11178:	bx	lr

Disassembly of section .fini:

0001117c <.fini>:
   1117c:	push	{r3, lr}
   11180:	pop	{r3, pc}
