
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	10dec <_start@@Base+0x3c>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <calloc@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <calloc@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r1, r1, r8, lsr r3

00010ccc <calloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <strcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <strtol@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <printf@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <fopen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <free@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fgets@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <strcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <puts@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <__gmon_start__@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <feof@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <strchr@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <fclose@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <fgets_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <abort@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010db0 <_start@@Base>:
   10db0:	mov	fp, #0
   10db4:	mov	lr, #0
   10db8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dbc:	mov	r2, sp
   10dc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc8:	ldr	ip, [pc, #16]	; 10de0 <_start@@Base+0x30>
   10dcc:	push	{ip}		; (str ip, [sp, #-4]!)
   10dd0:	ldr	r0, [pc, #12]	; 10de4 <_start@@Base+0x34>
   10dd4:	ldr	r3, [pc, #12]	; 10de8 <_start@@Base+0x38>
   10dd8:	bl	10d50 <__libc_start_main@plt>
   10ddc:	bl	10da4 <abort@plt>
   10de0:	ldrdeq	r1, [r1], -r4
   10de4:	muleq	r1, r4, r1
   10de8:	andeq	r1, r1, r4, ror ip
   10dec:	ldr	r3, [pc, #20]	; 10e08 <_start@@Base+0x58>
   10df0:	ldr	r2, [pc, #20]	; 10e0c <_start@@Base+0x5c>
   10df4:	add	r3, pc, r3
   10df8:	ldr	r2, [r3, r2]
   10dfc:	cmp	r2, #0
   10e00:	bxeq	lr
   10e04:	b	10d5c <__gmon_start__@plt>
   10e08:	andeq	r1, r1, r4, lsl #4
   10e0c:	andeq	r0, r0, r8, asr r0
   10e10:	ldr	r0, [pc, #24]	; 10e30 <_start@@Base+0x80>
   10e14:	ldr	r3, [pc, #24]	; 10e34 <_start@@Base+0x84>
   10e18:	cmp	r3, r0
   10e1c:	bxeq	lr
   10e20:	ldr	r3, [pc, #16]	; 10e38 <_start@@Base+0x88>
   10e24:	cmp	r3, #0
   10e28:	bxeq	lr
   10e2c:	bx	r3
   10e30:	andeq	r2, r2, r4, rrx
   10e34:	andeq	r2, r2, r4, rrx
   10e38:	andeq	r0, r0, r0
   10e3c:	ldr	r0, [pc, #36]	; 10e68 <_start@@Base+0xb8>
   10e40:	ldr	r1, [pc, #36]	; 10e6c <_start@@Base+0xbc>
   10e44:	sub	r1, r1, r0
   10e48:	asr	r1, r1, #2
   10e4c:	add	r1, r1, r1, lsr #31
   10e50:	asrs	r1, r1, #1
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0xc0>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r2, r2, r4, rrx
   10e6c:	andeq	r2, r2, r4, rrx
   10e70:	andeq	r0, r0, r0
   10e74:	push	{r4, lr}
   10e78:	ldr	r4, [pc, #24]	; 10e98 <_start@@Base+0xe8>
   10e7c:	ldrb	r3, [r4]
   10e80:	cmp	r3, #0
   10e84:	popne	{r4, pc}
   10e88:	bl	10e10 <_start@@Base+0x60>
   10e8c:	mov	r3, #1
   10e90:	strb	r3, [r4]
   10e94:	pop	{r4, pc}
   10e98:	andeq	r2, r2, r4, rrx
   10e9c:	b	10e3c <_start@@Base+0x8c>

00010ea0 <retira_duplicados@@Base>:
   10ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ea4:	add	fp, sp, #24
   10ea8:	mov	r4, r0
   10eac:	bl	1157c <vetor_tamanho@@Base>
   10eb0:	cmp	r0, #2
   10eb4:	blt	10f48 <retira_duplicados@@Base+0xa8>
   10eb8:	mov	r8, #0
   10ebc:	b	10ed4 <retira_duplicados@@Base+0x34>
   10ec0:	mov	r0, r4
   10ec4:	bl	1157c <vetor_tamanho@@Base>
   10ec8:	sub	r0, r0, #1
   10ecc:	cmp	r8, r0
   10ed0:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   10ed4:	mov	r0, r4
   10ed8:	mov	r5, r8
   10edc:	add	r8, r8, #1
   10ee0:	bl	1157c <vetor_tamanho@@Base>
   10ee4:	cmp	r8, r0
   10ee8:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10eec:	mov	r6, r8
   10ef0:	mov	r0, r4
   10ef4:	mov	r1, r5
   10ef8:	bl	1158c <vetor_elemento@@Base>
   10efc:	mov	r7, r0
   10f00:	mov	r0, r4
   10f04:	mov	r1, r6
   10f08:	bl	1158c <vetor_elemento@@Base>
   10f0c:	mov	r1, r0
   10f10:	mov	r0, r7
   10f14:	bl	10cd8 <strcmp@plt>
   10f18:	cmp	r0, #0
   10f1c:	bne	10f30 <retira_duplicados@@Base+0x90>
   10f20:	mov	r0, r4
   10f24:	mov	r1, r6
   10f28:	bl	11688 <vetor_remove@@Base>
   10f2c:	sub	r6, r6, #1
   10f30:	mov	r0, r4
   10f34:	add	r6, r6, #1
   10f38:	bl	1157c <vetor_tamanho@@Base>
   10f3c:	cmp	r6, r0
   10f40:	blt	10ef0 <retira_duplicados@@Base+0x50>
   10f44:	b	10ec0 <retira_duplicados@@Base+0x20>
   10f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f4c <interseta@@Base>:
   10f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f50:	add	fp, sp, #28
   10f54:	sub	sp, sp, #4
   10f58:	mov	r4, r1
   10f5c:	mov	sl, r0
   10f60:	bl	11468 <vetor_novo@@Base>
   10f64:	ldr	r7, [sl]
   10f68:	mov	r8, r0
   10f6c:	cmp	r7, #0
   10f70:	bne	10f80 <interseta@@Base+0x34>
   10f74:	ldr	r0, [sl, #8]
   10f78:	cmp	r0, #1
   10f7c:	blt	10ffc <interseta@@Base+0xb0>
   10f80:	mov	r9, #0
   10f84:	mov	r0, #1
   10f88:	ldr	r1, [r7]
   10f8c:	mov	r5, r0
   10f90:	mov	r0, r4
   10f94:	mov	r2, #0
   10f98:	bl	11a9c <lista_pesquisa@@Base>
   10f9c:	cmp	r0, #0
   10fa0:	beq	10fe0 <interseta@@Base+0x94>
   10fa4:	ldr	r6, [r7]
   10fa8:	mov	r0, r4
   10fac:	mov	r2, #0
   10fb0:	mov	r1, r6
   10fb4:	bl	11a9c <lista_pesquisa@@Base>
   10fb8:	ldr	r1, [r0]
   10fbc:	mov	r0, r6
   10fc0:	bl	10cd8 <strcmp@plt>
   10fc4:	cmp	r0, #0
   10fc8:	bne	10fe0 <interseta@@Base+0x94>
   10fcc:	ldr	r1, [r7]
   10fd0:	mov	r0, r8
   10fd4:	mov	r2, r9
   10fd8:	bl	115b4 <vetor_insere@@Base>
   10fdc:	add	r9, r9, #1
   10fe0:	ldr	r7, [r7, #4]
   10fe4:	ldr	r1, [sl, #8]
   10fe8:	add	r0, r5, #1
   10fec:	cmp	r7, #0
   10ff0:	bne	10f88 <interseta@@Base+0x3c>
   10ff4:	cmp	r5, r1
   10ff8:	blt	10f88 <interseta@@Base+0x3c>
   10ffc:	mov	r0, r8
   11000:	sub	sp, fp, #28
   11004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011008 <anteriores@@Base>:
   11008:	push	{r4, r5, r6, r7, fp, lr}
   1100c:	add	fp, sp, #16
   11010:	mov	r4, r1
   11014:	mov	r6, r0
   11018:	bl	11468 <vetor_novo@@Base>
   1101c:	ldr	r7, [r6]
   11020:	mov	r5, r0
   11024:	b	1102c <anteriores@@Base+0x24>
   11028:	ldr	r7, [r7, #4]
   1102c:	cmp	r7, #0
   11030:	moveq	r0, r5
   11034:	popeq	{r4, r5, r6, r7, fp, pc}
   11038:	ldr	r6, [r7]
   1103c:	mov	r0, r6
   11040:	bl	10d74 <strlen@plt>
   11044:	add	r0, r6, r0
   11048:	mov	r1, #0
   1104c:	mov	r2, #10
   11050:	sub	r0, r0, #5
   11054:	bl	10ce4 <strtol@plt>
   11058:	cmp	r0, r4
   1105c:	bge	11028 <anteriores@@Base+0x20>
   11060:	ldr	r2, [r5]
   11064:	mov	r0, r5
   11068:	mov	r1, r6
   1106c:	bl	115b4 <vetor_insere@@Base>
   11070:	b	11028 <anteriores@@Base+0x20>

00011074 <lerAtores@@Base>:
   11074:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11078:	add	fp, sp, #24
   1107c:	sub	sp, sp, #256	; 0x100
   11080:	cmp	r0, #0
   11084:	beq	110f4 <lerAtores@@Base+0x80>
   11088:	mov	r5, r0
   1108c:	bl	11468 <vetor_novo@@Base>
   11090:	mov	r4, r0
   11094:	mov	r0, r5
   11098:	bl	10d68 <feof@plt>
   1109c:	cmp	r0, #0
   110a0:	bne	110f8 <lerAtores@@Base+0x84>
   110a4:	mov	r6, sp
   110a8:	mov	r7, #0
   110ac:	mov	r0, r6
   110b0:	mov	r1, #255	; 0xff
   110b4:	mov	r2, r5
   110b8:	bl	10d14 <fgets@plt>
   110bc:	mov	r0, r6
   110c0:	mov	r1, #10
   110c4:	bl	10d80 <strchr@plt>
   110c8:	cmp	r0, #0
   110cc:	mov	r1, r6
   110d0:	strbne	r7, [r0]
   110d4:	mov	r0, r4
   110d8:	ldr	r2, [r4]
   110dc:	bl	115b4 <vetor_insere@@Base>
   110e0:	mov	r0, r5
   110e4:	bl	10d68 <feof@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	110ac <lerAtores@@Base+0x38>
   110f0:	b	110f8 <lerAtores@@Base+0x84>
   110f4:	mov	r4, #0
   110f8:	mov	r0, r4
   110fc:	sub	sp, fp, #24
   11100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011104 <lerFilmes@@Base>:
   11104:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11108:	add	fp, sp, #24
   1110c:	sub	sp, sp, #256	; 0x100
   11110:	cmp	r0, #0
   11114:	beq	11184 <lerFilmes@@Base+0x80>
   11118:	mov	r5, r0
   1111c:	bl	11890 <lista_nova@@Base>
   11120:	mov	r4, r0
   11124:	mov	r0, r5
   11128:	bl	10d68 <feof@plt>
   1112c:	cmp	r0, #0
   11130:	bne	11188 <lerFilmes@@Base+0x84>
   11134:	mov	r6, sp
   11138:	mov	r7, #0
   1113c:	mov	r0, r6
   11140:	mov	r1, #255	; 0xff
   11144:	mov	r2, r5
   11148:	bl	10d14 <fgets@plt>
   1114c:	mov	r0, r6
   11150:	mov	r1, #10
   11154:	bl	10d80 <strchr@plt>
   11158:	cmp	r0, #0
   1115c:	mov	r1, r6
   11160:	mov	r2, #0
   11164:	strbne	r7, [r0]
   11168:	mov	r0, r4
   1116c:	bl	11938 <lista_insere@@Base>
   11170:	mov	r0, r5
   11174:	bl	10d68 <feof@plt>
   11178:	cmp	r0, #0
   1117c:	beq	1113c <lerFilmes@@Base+0x38>
   11180:	b	11188 <lerFilmes@@Base+0x84>
   11184:	mov	r4, #0
   11188:	mov	r0, r4
   1118c:	sub	sp, fp, #24
   11190:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011194 <main@@Base>:
   11194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11198:	add	fp, sp, #28
   1119c:	sub	sp, sp, #276	; 0x114
   111a0:	ldr	r0, [pc, #664]	; 11440 <main@@Base+0x2ac>
   111a4:	ldr	r4, [pc, #664]	; 11444 <main@@Base+0x2b0>
   111a8:	add	r4, pc, r4
   111ac:	add	r0, pc, r0
   111b0:	mov	r1, r4
   111b4:	bl	10cfc <fopen@plt>
   111b8:	mov	sl, r0
   111bc:	ldr	r0, [pc, #644]	; 11448 <main@@Base+0x2b4>
   111c0:	mov	r1, r4
   111c4:	add	r0, pc, r0
   111c8:	bl	10cfc <fopen@plt>
   111cc:	mov	r5, r0
   111d0:	ldr	r0, [pc, #628]	; 1144c <main@@Base+0x2b8>
   111d4:	mov	r1, r4
   111d8:	add	r0, pc, r0
   111dc:	bl	10cfc <fopen@plt>
   111e0:	mov	r6, r0
   111e4:	mov	r0, sl
   111e8:	bl	11074 <lerAtores@@Base>
   111ec:	mov	r7, r0
   111f0:	mov	r9, #0
   111f4:	cmp	r5, #0
   111f8:	mov	r4, #0
   111fc:	str	r0, [sp, #12]
   11200:	beq	1121c <main@@Base+0x88>
   11204:	bl	11890 <lista_nova@@Base>
   11208:	mov	r4, r0
   1120c:	mov	r0, r5
   11210:	bl	10d68 <feof@plt>
   11214:	cmp	r0, #0
   11218:	beq	11290 <main@@Base+0xfc>
   1121c:	cmp	r6, #0
   11220:	beq	112e8 <main@@Base+0x154>
   11224:	bl	11890 <lista_nova@@Base>
   11228:	mov	r9, r0
   1122c:	mov	r0, r6
   11230:	bl	10d68 <feof@plt>
   11234:	cmp	r0, #0
   11238:	bne	112e8 <main@@Base+0x154>
   1123c:	add	r7, sp, #16
   11240:	mov	r8, #0
   11244:	mov	r0, r7
   11248:	mov	r1, #255	; 0xff
   1124c:	mov	r2, r6
   11250:	bl	10d98 <fgets_unlocked@plt>
   11254:	mov	r0, r7
   11258:	mov	r1, #10
   1125c:	bl	10d80 <strchr@plt>
   11260:	cmp	r0, #0
   11264:	mov	r1, r7
   11268:	mov	r2, #0
   1126c:	strbne	r8, [r0]
   11270:	mov	r0, r9
   11274:	bl	11938 <lista_insere@@Base>
   11278:	mov	r0, r6
   1127c:	bl	10d68 <feof@plt>
   11280:	cmp	r0, #0
   11284:	beq	11244 <main@@Base+0xb0>
   11288:	ldr	r7, [sp, #12]
   1128c:	b	112e8 <main@@Base+0x154>
   11290:	add	r7, sp, #16
   11294:	mov	r8, #0
   11298:	mov	r0, r7
   1129c:	mov	r1, #255	; 0xff
   112a0:	mov	r2, r5
   112a4:	bl	10d98 <fgets_unlocked@plt>
   112a8:	mov	r0, r7
   112ac:	mov	r1, #10
   112b0:	bl	10d80 <strchr@plt>
   112b4:	cmp	r0, #0
   112b8:	mov	r1, r7
   112bc:	mov	r2, #0
   112c0:	strbne	r8, [r0]
   112c4:	mov	r0, r4
   112c8:	bl	11938 <lista_insere@@Base>
   112cc:	mov	r0, r5
   112d0:	bl	10d68 <feof@plt>
   112d4:	cmp	r0, #0
   112d8:	beq	11298 <main@@Base+0x104>
   112dc:	ldr	r7, [sp, #12]
   112e0:	cmp	r6, #0
   112e4:	bne	11224 <main@@Base+0x90>
   112e8:	mov	r0, r7
   112ec:	bl	1157c <vetor_tamanho@@Base>
   112f0:	mov	r1, r0
   112f4:	ldr	r0, [pc, #340]	; 11450 <main@@Base+0x2bc>
   112f8:	add	r0, pc, r0
   112fc:	bl	10cf0 <printf@plt>
   11300:	mov	r0, r7
   11304:	bl	10ea0 <retira_duplicados@@Base>
   11308:	mov	r0, r7
   1130c:	bl	1157c <vetor_tamanho@@Base>
   11310:	mov	r1, r0
   11314:	ldr	r0, [pc, #312]	; 11454 <main@@Base+0x2c0>
   11318:	add	r0, pc, r0
   1131c:	bl	10cf0 <printf@plt>
   11320:	mov	r0, r4
   11324:	mov	r1, r9
   11328:	bl	10f4c <interseta@@Base>
   1132c:	cmp	r0, #0
   11330:	str	sl, [sp, #4]
   11334:	str	r0, [sp, #8]
   11338:	beq	11354 <main@@Base+0x1c0>
   1133c:	bl	1157c <vetor_tamanho@@Base>
   11340:	mov	r1, r0
   11344:	ldr	r0, [pc, #268]	; 11458 <main@@Base+0x2c4>
   11348:	add	r0, pc, r0
   1134c:	bl	10cf0 <printf@plt>
   11350:	b	11360 <main@@Base+0x1cc>
   11354:	ldr	r0, [pc, #256]	; 1145c <main@@Base+0x2c8>
   11358:	add	r0, pc, r0
   1135c:	bl	10d38 <puts@plt>
   11360:	bl	11468 <vetor_novo@@Base>
   11364:	ldr	sl, [r4]
   11368:	mov	r8, r0
   1136c:	cmp	sl, #0
   11370:	bne	11384 <main@@Base+0x1f0>
   11374:	b	113c0 <main@@Base+0x22c>
   11378:	ldr	sl, [sl, #4]
   1137c:	cmp	sl, #0
   11380:	beq	113c0 <main@@Base+0x22c>
   11384:	ldr	r7, [sl]
   11388:	mov	r0, r7
   1138c:	bl	10d74 <strlen@plt>
   11390:	add	r0, r7, r0
   11394:	mov	r1, #0
   11398:	mov	r2, #10
   1139c:	sub	r0, r0, #5
   113a0:	bl	10ce4 <strtol@plt>
   113a4:	cmp	r0, #2000	; 0x7d0
   113a8:	bge	11378 <main@@Base+0x1e4>
   113ac:	ldr	r2, [r8]
   113b0:	mov	r0, r8
   113b4:	mov	r1, r7
   113b8:	bl	115b4 <vetor_insere@@Base>
   113bc:	b	11378 <main@@Base+0x1e4>
   113c0:	cmp	r8, #0
   113c4:	beq	113e4 <main@@Base+0x250>
   113c8:	mov	r0, r8
   113cc:	bl	1157c <vetor_tamanho@@Base>
   113d0:	mov	r1, r0
   113d4:	ldr	r0, [pc, #132]	; 11460 <main@@Base+0x2cc>
   113d8:	add	r0, pc, r0
   113dc:	bl	10cf0 <printf@plt>
   113e0:	b	113f0 <main@@Base+0x25c>
   113e4:	ldr	r0, [pc, #120]	; 11464 <main@@Base+0x2d0>
   113e8:	add	r0, pc, r0
   113ec:	bl	10d38 <puts@plt>
   113f0:	ldr	r0, [sp, #12]
   113f4:	ldr	r7, [sp, #4]
   113f8:	bl	11498 <vetor_apaga@@Base>
   113fc:	ldr	r0, [sp, #8]
   11400:	bl	11498 <vetor_apaga@@Base>
   11404:	mov	r0, r8
   11408:	bl	11498 <vetor_apaga@@Base>
   1140c:	mov	r0, r4
   11410:	bl	118c0 <lista_apaga@@Base>
   11414:	mov	r0, r9
   11418:	bl	118c0 <lista_apaga@@Base>
   1141c:	mov	r0, r7
   11420:	bl	10d8c <fclose@plt>
   11424:	mov	r0, r5
   11428:	bl	10d8c <fclose@plt>
   1142c:	mov	r0, r6
   11430:	bl	10d8c <fclose@plt>
   11434:	mov	r0, #0
   11438:	sub	sp, fp, #28
   1143c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11440:	andeq	r0, r0, r0, lsr fp
   11444:	andeq	r0, r0, r0, asr #22
   11448:	andeq	r0, r0, r6, lsr #22
   1144c:	andeq	r0, r0, sp, lsl fp
   11450:	andeq	r0, r0, r9, lsl #20
   11454:	strdeq	r0, [r0], -ip
   11458:	andeq	r0, r0, r8, ror #19
   1145c:	andeq	r0, r0, r0, lsr #20
   11460:	andeq	r0, r0, r7, ror r9
   11464:			; <UNDEFINED> instruction: 0x000009b0

00011468 <vetor_novo@@Base>:
   11468:	push	{fp, lr}
   1146c:	mov	fp, sp
   11470:	mov	r0, #12
   11474:	bl	10d44 <malloc@plt>
   11478:	cmp	r0, #0
   1147c:	movne	r1, #0
   11480:	strne	r1, [r0]
   11484:	strne	r1, [r0, #4]
   11488:	strne	r1, [r0, #8]
   1148c:	popne	{fp, pc}
   11490:	mov	r0, #0
   11494:	pop	{fp, pc}

00011498 <vetor_apaga@@Base>:
   11498:	cmp	r0, #0
   1149c:	bxeq	lr
   114a0:	push	{r4, r5, fp, lr}
   114a4:	add	fp, sp, #8
   114a8:	ldr	r1, [r0]
   114ac:	mov	r4, r0
   114b0:	ldr	r0, [r0, #8]
   114b4:	cmp	r1, #1
   114b8:	blt	114dc <vetor_apaga@@Base+0x44>
   114bc:	mov	r5, #0
   114c0:	ldr	r0, [r0, r5, lsl #2]
   114c4:	bl	10d08 <free@plt>
   114c8:	ldr	r1, [r4]
   114cc:	ldr	r0, [r4, #8]
   114d0:	add	r5, r5, #1
   114d4:	cmp	r5, r1
   114d8:	blt	114c0 <vetor_apaga@@Base+0x28>
   114dc:	bl	10d08 <free@plt>
   114e0:	mov	r0, r4
   114e4:	pop	{r4, r5, fp, lr}
   114e8:	b	10d08 <free@plt>

000114ec <vetor_atribui@@Base>:
   114ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114f0:	add	fp, sp, #24
   114f4:	mvn	r5, #0
   114f8:	cmp	r0, #0
   114fc:	beq	11574 <vetor_atribui@@Base+0x88>
   11500:	mov	r4, r1
   11504:	cmp	r1, #0
   11508:	blt	11574 <vetor_atribui@@Base+0x88>
   1150c:	mov	r7, r0
   11510:	ldr	r0, [r0]
   11514:	cmp	r0, r4
   11518:	ble	11574 <vetor_atribui@@Base+0x88>
   1151c:	mov	r0, r2
   11520:	mov	r8, r2
   11524:	bl	10d74 <strlen@plt>
   11528:	mov	r9, r0
   1152c:	ldr	r0, [r7, #8]
   11530:	ldr	r6, [r0, r4, lsl #2]
   11534:	mov	r0, r6
   11538:	bl	10d74 <strlen@plt>
   1153c:	cmp	r9, r0
   11540:	bls	11564 <vetor_atribui@@Base+0x78>
   11544:	add	r1, r9, #1
   11548:	mov	r0, r6
   1154c:	bl	10d20 <realloc@plt>
   11550:	mov	r6, r0
   11554:	ldr	r0, [r7, #8]
   11558:	cmp	r6, #0
   1155c:	str	r6, [r0, r4, lsl #2]
   11560:	beq	11574 <vetor_atribui@@Base+0x88>
   11564:	mov	r0, r6
   11568:	mov	r1, r8
   1156c:	bl	10d2c <strcpy@plt>
   11570:	mov	r5, r4
   11574:	mov	r0, r5
   11578:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001157c <vetor_tamanho@@Base>:
   1157c:	cmp	r0, #0
   11580:	ldrne	r0, [r0]
   11584:	mvneq	r0, #0
   11588:	bx	lr

0001158c <vetor_elemento@@Base>:
   1158c:	mov	r2, r0
   11590:	mov	r0, #0
   11594:	cmp	r2, #0
   11598:	bxeq	lr
   1159c:	cmp	r1, #0
   115a0:	ldrge	r3, [r2]
   115a4:	cmpge	r3, r1
   115a8:	ldrgt	r0, [r2, #8]
   115ac:	ldrgt	r0, [r0, r1, lsl #2]
   115b0:	bx	lr

000115b4 <vetor_insere@@Base>:
   115b4:	push	{r4, r5, r6, r7, fp, lr}
   115b8:	add	fp, sp, #16
   115bc:	mvn	r4, #0
   115c0:	cmp	r0, #0
   115c4:	beq	11680 <vetor_insere@@Base+0xcc>
   115c8:	mov	r5, r2
   115cc:	cmp	r2, #0
   115d0:	blt	11680 <vetor_insere@@Base+0xcc>
   115d4:	mov	r6, r0
   115d8:	ldr	r0, [r0]
   115dc:	cmp	r0, r5
   115e0:	blt	11680 <vetor_insere@@Base+0xcc>
   115e4:	mov	r7, r1
   115e8:	ldr	r1, [r6, #4]
   115ec:	cmp	r0, r1
   115f0:	bne	1163c <vetor_insere@@Base+0x88>
   115f4:	lsl	r1, r0, #1
   115f8:	cmp	r0, #0
   115fc:	movweq	r1, #1
   11600:	str	r1, [r6, #4]
   11604:	lsl	r1, r1, #2
   11608:	ldr	r0, [r6, #8]
   1160c:	bl	10d20 <realloc@plt>
   11610:	cmp	r0, #0
   11614:	str	r0, [r6, #8]
   11618:	beq	11680 <vetor_insere@@Base+0xcc>
   1161c:	ldr	r0, [r6]
   11620:	cmp	r0, r5
   11624:	ble	11644 <vetor_insere@@Base+0x90>
   11628:	ldr	r1, [r6, #8]
   1162c:	add	r2, r1, r0, lsl #2
   11630:	ldr	r2, [r2, #-4]
   11634:	str	r2, [r1, r0, lsl #2]
   11638:	sub	r0, r0, #1
   1163c:	cmp	r0, r5
   11640:	bgt	11628 <vetor_insere@@Base+0x74>
   11644:	mov	r0, r7
   11648:	bl	10d74 <strlen@plt>
   1164c:	add	r0, r0, #1
   11650:	mov	r1, #1
   11654:	bl	10ccc <calloc@plt>
   11658:	ldr	r1, [r6, #8]
   1165c:	cmp	r0, #0
   11660:	str	r0, [r1, r5, lsl #2]
   11664:	beq	11680 <vetor_insere@@Base+0xcc>
   11668:	mov	r1, r7
   1166c:	bl	10d2c <strcpy@plt>
   11670:	ldr	r0, [r6]
   11674:	mov	r4, r5
   11678:	add	r0, r0, #1
   1167c:	str	r0, [r6]
   11680:	mov	r0, r4
   11684:	pop	{r4, r5, r6, r7, fp, pc}

00011688 <vetor_remove@@Base>:
   11688:	push	{r4, r5, fp, lr}
   1168c:	add	fp, sp, #8
   11690:	mov	r4, r0
   11694:	mvn	r0, #0
   11698:	cmp	r4, #0
   1169c:	popeq	{r4, r5, fp, pc}
   116a0:	cmp	r1, #0
   116a4:	mov	r5, r1
   116a8:	ldrge	r1, [r4]
   116ac:	cmpge	r1, r5
   116b0:	bgt	116b8 <vetor_remove@@Base+0x30>
   116b4:	pop	{r4, r5, fp, pc}
   116b8:	ldr	r0, [r4, #8]
   116bc:	ldr	r0, [r0, r5, lsl #2]
   116c0:	bl	10d08 <free@plt>
   116c4:	ldr	r0, [r4]
   116c8:	add	r1, r5, #1
   116cc:	cmp	r1, r0
   116d0:	bge	116f8 <vetor_remove@@Base+0x70>
   116d4:	ldr	r1, [r4, #8]
   116d8:	add	r2, r1, r5, lsl #2
   116dc:	ldr	r2, [r2, #4]
   116e0:	str	r2, [r1, r5, lsl #2]
   116e4:	add	r2, r5, #2
   116e8:	add	r1, r5, #1
   116ec:	cmp	r2, r0
   116f0:	mov	r5, r1
   116f4:	blt	116d4 <vetor_remove@@Base+0x4c>
   116f8:	sub	r0, r0, #1
   116fc:	str	r0, [r4]
   11700:	mov	r0, #0
   11704:	pop	{r4, r5, fp, pc}

00011708 <vetor_pesquisa@@Base>:
   11708:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1170c:	add	fp, sp, #24
   11710:	mvn	r8, #0
   11714:	cmp	r0, #0
   11718:	beq	11758 <vetor_pesquisa@@Base+0x50>
   1171c:	ldr	r6, [r0]
   11720:	cmp	r6, #1
   11724:	blt	11758 <vetor_pesquisa@@Base+0x50>
   11728:	ldr	r4, [r0, #8]
   1172c:	mov	r5, r1
   11730:	mov	r7, #0
   11734:	ldr	r0, [r4, r7, lsl #2]
   11738:	mov	r1, r5
   1173c:	bl	10cd8 <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	moveq	r0, r7
   11748:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1174c:	add	r7, r7, #1
   11750:	cmp	r7, r6
   11754:	blt	11734 <vetor_pesquisa@@Base+0x2c>
   11758:	mov	r0, r8
   1175c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011760 <vetor_ordena@@Base>:
   11760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11764:	add	fp, sp, #28
   11768:	sub	sp, sp, #4
   1176c:	cmp	r0, #0
   11770:	mvneq	r0, #0
   11774:	subeq	sp, fp, #28
   11778:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1177c:	ldr	r1, [r0]
   11780:	mov	sl, r0
   11784:	mov	r0, #0
   11788:	cmp	r1, #2
   1178c:	str	r1, [sp]
   11790:	blt	11818 <vetor_ordena@@Base+0xb8>
   11794:	ldr	r5, [sl, #8]
   11798:	mov	r8, #1
   1179c:	sub	r9, r8, #1
   117a0:	ldr	r6, [r5, r8, lsl #2]
   117a4:	ldr	r7, [r5, r9, lsl #2]
   117a8:	mov	r0, r6
   117ac:	mov	r1, r7
   117b0:	bl	10cd8 <strcmp@plt>
   117b4:	cmn	r0, #1
   117b8:	bgt	117fc <vetor_ordena@@Base+0x9c>
   117bc:	add	r0, r5, r9, lsl #2
   117c0:	mov	r4, r9
   117c4:	str	r7, [r0, #4]
   117c8:	add	r0, r9, #1
   117cc:	ldr	r5, [sl, #8]
   117d0:	cmp	r0, #2
   117d4:	blt	11800 <vetor_ordena@@Base+0xa0>
   117d8:	add	r0, r5, r4, lsl #2
   117dc:	ldr	r7, [r0, #-4]
   117e0:	mov	r0, r6
   117e4:	mov	r1, r7
   117e8:	bl	10cd8 <strcmp@plt>
   117ec:	sub	r9, r4, #1
   117f0:	cmp	r0, #0
   117f4:	blt	117bc <vetor_ordena@@Base+0x5c>
   117f8:	b	11800 <vetor_ordena@@Base+0xa0>
   117fc:	mov	r4, r8
   11800:	ldr	r0, [sp]
   11804:	add	r8, r8, #1
   11808:	str	r6, [r5, r4, lsl #2]
   1180c:	cmp	r8, r0
   11810:	blt	1179c <vetor_ordena@@Base+0x3c>
   11814:	mov	r0, #0
   11818:	sub	sp, fp, #28
   1181c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011820 <novo_str@@Base>:
   11820:	push	{r4, r5, r6, sl, fp, lr}
   11824:	add	fp, sp, #16
   11828:	mov	r6, r0
   1182c:	mov	r0, #12
   11830:	bl	10d44 <malloc@plt>
   11834:	mov	r5, #0
   11838:	cmp	r0, #0
   1183c:	beq	11878 <novo_str@@Base+0x58>
   11840:	mov	r4, r0
   11844:	mov	r0, r6
   11848:	bl	10d74 <strlen@plt>
   1184c:	add	r0, r0, #1
   11850:	bl	10d44 <malloc@plt>
   11854:	cmp	r0, #0
   11858:	str	r0, [r4]
   1185c:	beq	11880 <novo_str@@Base+0x60>
   11860:	mov	r1, r6
   11864:	bl	10d2c <strcpy@plt>
   11868:	mov	r0, #0
   1186c:	mov	r5, r4
   11870:	str	r0, [r4, #4]
   11874:	str	r0, [r4, #8]
   11878:	mov	r0, r5
   1187c:	pop	{r4, r5, r6, sl, fp, pc}
   11880:	mov	r0, r4
   11884:	bl	10d08 <free@plt>
   11888:	mov	r0, r5
   1188c:	pop	{r4, r5, r6, sl, fp, pc}

00011890 <lista_nova@@Base>:
   11890:	push	{fp, lr}
   11894:	mov	fp, sp
   11898:	mov	r0, #12
   1189c:	bl	10d44 <malloc@plt>
   118a0:	cmp	r0, #0
   118a4:	movne	r1, #0
   118a8:	strne	r1, [r0]
   118ac:	strne	r1, [r0, #4]
   118b0:	strne	r1, [r0, #8]
   118b4:	popne	{fp, pc}
   118b8:	mov	r0, #0
   118bc:	pop	{fp, pc}

000118c0 <lista_apaga@@Base>:
   118c0:	cmp	r0, #0
   118c4:	bxeq	lr
   118c8:	push	{r4, r5, fp, lr}
   118cc:	add	fp, sp, #8
   118d0:	mov	r4, r0
   118d4:	b	118f0 <lista_apaga@@Base+0x30>
   118d8:	ldr	r0, [r5, #4]
   118dc:	str	r0, [r4]
   118e0:	ldr	r0, [r5]
   118e4:	bl	10d08 <free@plt>
   118e8:	mov	r0, r5
   118ec:	bl	10d08 <free@plt>
   118f0:	ldr	r5, [r4]
   118f4:	cmp	r5, #0
   118f8:	bne	118d8 <lista_apaga@@Base+0x18>
   118fc:	mov	r0, r4
   11900:	pop	{r4, r5, fp, lr}
   11904:	b	10d08 <free@plt>

00011908 <lista_tamanho@@Base>:
   11908:	cmp	r0, #0
   1190c:	ldrne	r0, [r0, #8]
   11910:	mvneq	r0, #0
   11914:	bx	lr

00011918 <lista_inicio@@Base>:
   11918:	cmp	r0, #0
   1191c:	ldrne	r0, [r0]
   11920:	moveq	r0, #0
   11924:	bx	lr

00011928 <lista_fim@@Base>:
   11928:	cmp	r0, #0
   1192c:	ldrne	r0, [r0, #4]
   11930:	moveq	r0, #0
   11934:	bx	lr

00011938 <lista_insere@@Base>:
   11938:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1193c:	add	fp, sp, #24
   11940:	cmp	r0, #0
   11944:	mov	r7, #0
   11948:	movne	r6, r1
   1194c:	cmpne	r1, #0
   11950:	bne	1195c <lista_insere@@Base+0x24>
   11954:	mov	r0, r7
   11958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1195c:	mov	r5, r0
   11960:	mov	r0, #12
   11964:	mov	r8, r2
   11968:	bl	10d44 <malloc@plt>
   1196c:	cmp	r0, #0
   11970:	beq	11954 <lista_insere@@Base+0x1c>
   11974:	mov	r4, r0
   11978:	mov	r0, r6
   1197c:	bl	10d74 <strlen@plt>
   11980:	add	r0, r0, #1
   11984:	bl	10d44 <malloc@plt>
   11988:	cmp	r0, #0
   1198c:	str	r0, [r4]
   11990:	beq	119e0 <lista_insere@@Base+0xa8>
   11994:	mov	r1, r6
   11998:	bl	10d2c <strcpy@plt>
   1199c:	mov	r0, #0
   119a0:	cmp	r8, #0
   119a4:	str	r0, [r4, #4]
   119a8:	str	r0, [r4, #8]
   119ac:	ldr	r1, [r5, #8]
   119b0:	ldr	r0, [r5]
   119b4:	add	r1, r1, #1
   119b8:	str	r1, [r5, #8]
   119bc:	beq	119f0 <lista_insere@@Base+0xb8>
   119c0:	cmp	r0, r8
   119c4:	beq	11a08 <lista_insere@@Base+0xd0>
   119c8:	ldr	r0, [r8, #8]
   119cc:	str	r8, [r4, #4]
   119d0:	str	r0, [r4, #8]
   119d4:	str	r4, [r0, #4]
   119d8:	str	r4, [r8, #8]
   119dc:	b	11a20 <lista_insere@@Base+0xe8>
   119e0:	mov	r0, r4
   119e4:	bl	10d08 <free@plt>
   119e8:	mov	r0, r7
   119ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119f0:	cmp	r0, #0
   119f4:	beq	11a18 <lista_insere@@Base+0xe0>
   119f8:	ldr	r0, [r5, #4]
   119fc:	str	r0, [r4, #8]
   11a00:	str	r4, [r0, #4]
   11a04:	b	11a1c <lista_insere@@Base+0xe4>
   11a08:	str	r8, [r4, #4]
   11a0c:	str	r4, [r8, #8]
   11a10:	str	r4, [r5]
   11a14:	b	11a20 <lista_insere@@Base+0xe8>
   11a18:	str	r4, [r5]
   11a1c:	str	r4, [r5, #4]
   11a20:	mov	r7, r4
   11a24:	mov	r0, r7
   11a28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011a2c <lista_remove@@Base>:
   11a2c:	push	{r4, r5, fp, lr}
   11a30:	add	fp, sp, #8
   11a34:	cmp	r0, #0
   11a38:	mov	r4, #0
   11a3c:	movne	r5, r1
   11a40:	cmpne	r1, #0
   11a44:	bne	11a50 <lista_remove@@Base+0x24>
   11a48:	mov	r0, r4
   11a4c:	pop	{r4, r5, fp, pc}
   11a50:	ldr	r1, [r0, #8]
   11a54:	sub	r1, r1, #1
   11a58:	str	r1, [r0, #8]
   11a5c:	ldr	r1, [r5, #8]
   11a60:	ldr	r4, [r5, #4]
   11a64:	cmp	r1, #0
   11a68:	streq	r4, [r0]
   11a6c:	strne	r4, [r1, #4]
   11a70:	ldrne	r4, [r5, #4]
   11a74:	add	r2, r4, #8
   11a78:	cmp	r4, #0
   11a7c:	addeq	r2, r0, #4
   11a80:	str	r1, [r2]
   11a84:	ldr	r0, [r5]
   11a88:	bl	10d08 <free@plt>
   11a8c:	mov	r0, r5
   11a90:	bl	10d08 <free@plt>
   11a94:	mov	r0, r4
   11a98:	pop	{r4, r5, fp, pc}

00011a9c <lista_pesquisa@@Base>:
   11a9c:	push	{r4, r5, r6, sl, fp, lr}
   11aa0:	add	fp, sp, #16
   11aa4:	cmp	r0, #0
   11aa8:	mov	r4, #0
   11aac:	movne	r5, r1
   11ab0:	cmpne	r1, #0
   11ab4:	bne	11ac0 <lista_pesquisa@@Base+0x24>
   11ab8:	mov	r0, r4
   11abc:	pop	{r4, r5, r6, sl, fp, pc}
   11ac0:	cmp	r2, #1
   11ac4:	bhi	11ab8 <lista_pesquisa@@Base+0x1c>
   11ac8:	cmp	r2, #0
   11acc:	beq	11b04 <lista_pesquisa@@Base+0x68>
   11ad0:	ldr	r6, [r0, #4]
   11ad4:	cmp	r6, #0
   11ad8:	bne	11aec <lista_pesquisa@@Base+0x50>
   11adc:	b	11ab8 <lista_pesquisa@@Base+0x1c>
   11ae0:	ldr	r6, [r6, #8]
   11ae4:	cmp	r6, #0
   11ae8:	beq	11ab8 <lista_pesquisa@@Base+0x1c>
   11aec:	ldr	r0, [r6]
   11af0:	mov	r1, r5
   11af4:	bl	10cd8 <strcmp@plt>
   11af8:	cmp	r0, #0
   11afc:	bne	11ae0 <lista_pesquisa@@Base+0x44>
   11b00:	b	11b34 <lista_pesquisa@@Base+0x98>
   11b04:	ldr	r6, [r0]
   11b08:	cmp	r6, #0
   11b0c:	bne	11b20 <lista_pesquisa@@Base+0x84>
   11b10:	b	11ab8 <lista_pesquisa@@Base+0x1c>
   11b14:	ldr	r6, [r6, #4]
   11b18:	cmp	r6, #0
   11b1c:	beq	11ab8 <lista_pesquisa@@Base+0x1c>
   11b20:	ldr	r0, [r6]
   11b24:	mov	r1, r5
   11b28:	bl	10cd8 <strcmp@plt>
   11b2c:	cmp	r0, #0
   11b30:	bne	11b14 <lista_pesquisa@@Base+0x78>
   11b34:	mov	r4, r6
   11b38:	mov	r0, r4
   11b3c:	pop	{r4, r5, r6, sl, fp, pc}

00011b40 <lista_ordena@@Base>:
   11b40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11b44:	add	fp, sp, #24
   11b48:	cmp	r0, #0
   11b4c:	beq	11bc8 <lista_ordena@@Base+0x88>
   11b50:	ldr	r0, [r0]
   11b54:	mov	r8, #0
   11b58:	mov	r5, r0
   11b5c:	ldr	r4, [r5, #4]!
   11b60:	cmp	r4, #0
   11b64:	bne	11b98 <lista_ordena@@Base+0x58>
   11b68:	b	11bcc <lista_ordena@@Base+0x8c>
   11b6c:	cmp	r7, r9
   11b70:	mov	r0, r4
   11b74:	ldrne	r0, [r9]
   11b78:	ldrne	r1, [r7]
   11b7c:	strne	r1, [r9]
   11b80:	strne	r0, [r7]
   11b84:	ldrne	r0, [r5]
   11b88:	mov	r5, r0
   11b8c:	ldr	r4, [r5, #4]!
   11b90:	cmp	r4, #0
   11b94:	beq	11bcc <lista_ordena@@Base+0x8c>
   11b98:	mov	r9, r0
   11b9c:	mov	r7, r0
   11ba0:	mov	r6, r4
   11ba4:	ldr	r1, [r7]
   11ba8:	ldr	r0, [r6]
   11bac:	bl	10cd8 <strcmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	movlt	r7, r6
   11bb8:	ldr	r6, [r6, #4]
   11bbc:	cmp	r6, #0
   11bc0:	bne	11ba4 <lista_ordena@@Base+0x64>
   11bc4:	b	11b6c <lista_ordena@@Base+0x2c>
   11bc8:	mvn	r8, #0
   11bcc:	mov	r0, r8
   11bd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011bd4 <lista_inverte@@Base>:
   11bd4:	cmp	r0, #0
   11bd8:	mvneq	r1, #0
   11bdc:	moveq	r0, r1
   11be0:	bxeq	lr
   11be4:	ldr	r2, [r0, #8]
   11be8:	mov	r1, #0
   11bec:	cmp	r2, #2
   11bf0:	blt	11c6c <lista_inverte@@Base+0x98>
   11bf4:	bne	11c00 <lista_inverte@@Base+0x2c>
   11bf8:	ldr	r2, [r0]
   11bfc:	b	11c48 <lista_inverte@@Base+0x74>
   11c00:	push	{fp, lr}
   11c04:	mov	fp, sp
   11c08:	ldr	ip, [r0]
   11c0c:	sub	r1, r2, #2
   11c10:	ldr	r3, [ip, #4]
   11c14:	mov	r2, r3
   11c18:	ldr	r3, [r3, #4]
   11c1c:	subs	r1, r1, #1
   11c20:	ldr	lr, [r2, #8]
   11c24:	str	r3, [lr, #4]
   11c28:	ldr	r3, [r2, #4]
   11c2c:	str	lr, [r3, #8]
   11c30:	str	ip, [r2, #4]
   11c34:	str	r2, [ip, #8]
   11c38:	mov	ip, r2
   11c3c:	bne	11c14 <lista_inverte@@Base+0x40>
   11c40:	str	r2, [r0]
   11c44:	pop	{fp, lr}
   11c48:	ldr	r3, [r0, #4]
   11c4c:	mov	r1, #0
   11c50:	ldr	ip, [r3, #8]
   11c54:	str	ip, [r0, #4]
   11c58:	str	r1, [ip, #4]
   11c5c:	str	r2, [r3, #4]
   11c60:	str	r1, [r3, #8]
   11c64:	str	r3, [r2, #8]
   11c68:	str	r3, [r0]
   11c6c:	mov	r0, r1
   11c70:	bx	lr

00011c74 <__libc_csu_init@@Base>:
   11c74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c78:	mov	r7, r0
   11c7c:	ldr	r6, [pc, #72]	; 11ccc <__libc_csu_init@@Base+0x58>
   11c80:	ldr	r5, [pc, #72]	; 11cd0 <__libc_csu_init@@Base+0x5c>
   11c84:	add	r6, pc, r6
   11c88:	add	r5, pc, r5
   11c8c:	sub	r6, r6, r5
   11c90:	mov	r8, r1
   11c94:	mov	r9, r2
   11c98:	bl	10cac <calloc@plt-0x20>
   11c9c:	asrs	r6, r6, #2
   11ca0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ca4:	mov	r4, #0
   11ca8:	add	r4, r4, #1
   11cac:	ldr	r3, [r5], #4
   11cb0:	mov	r2, r9
   11cb4:	mov	r1, r8
   11cb8:	mov	r0, r7
   11cbc:	blx	r3
   11cc0:	cmp	r6, r4
   11cc4:	bne	11ca8 <__libc_csu_init@@Base+0x34>
   11cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ccc:	andeq	r0, r1, r0, lsl #5
   11cd0:	andeq	r0, r1, r8, ror r2

00011cd4 <__libc_csu_fini@@Base>:
   11cd4:	bx	lr

Disassembly of section .fini:

00011cd8 <.fini>:
   11cd8:	push	{r3, lr}
   11cdc:	pop	{r3, pc}
