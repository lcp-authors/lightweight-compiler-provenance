
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010dcc <.init>:
   10dcc:	push	{r3, lr}
   10dd0:	bl	11098 <__mempcpy_chk@plt+0x48>
   10dd4:	pop	{r3, pc}

Disassembly of section .plt:

00010dd8 <calloc@plt-0x14>:
   10dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10ddc:	ldr	lr, [pc, #4]	; 10de8 <calloc@plt-0x4>
   10de0:	add	lr, pc, lr
   10de4:	ldr	pc, [lr, #8]!
   10de8:	andeq	r5, r1, r8, lsl r2

00010dec <calloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #536]!	; 0x218

00010df8 <fputs_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #528]!	; 0x210

00010e04 <strcmp@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #520]!	; 0x208

00010e10 <fflush@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #512]!	; 0x200

00010e1c <free@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #504]!	; 0x1f8

00010e28 <_exit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #496]!	; 0x1f0

00010e34 <memcpy@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e40 <execvp@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #480]!	; 0x1e0

00010e4c <mbsinit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #472]!	; 0x1d8

00010e58 <signal@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #464]!	; 0x1d0

00010e64 <memcmp@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e70 <dcgettext@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #448]!	; 0x1c0

00010e7c <dup2@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #440]!	; 0x1b8

00010e88 <realloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #432]!	; 0x1b0

00010e94 <textdomain@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #424]!	; 0x1a8

00010ea0 <iswprint@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #416]!	; 0x1a0

00010eac <fwrite@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #408]!	; 0x198

00010eb8 <lseek64@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #400]!	; 0x190

00010ec4 <__ctype_get_mb_cur_max@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #392]!	; 0x188

00010ed0 <__fpending@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #384]!	; 0x180

00010edc <ferror_unlocked@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #376]!	; 0x178

00010ee8 <mbrtowc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #368]!	; 0x170

00010ef4 <error@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #360]!	; 0x168

00010f00 <open64@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #352]!	; 0x160

00010f0c <getenv@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #344]!	; 0x158

00010f18 <malloc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #336]!	; 0x150

00010f24 <__libc_start_main@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #328]!	; 0x148

00010f30 <__freading@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #320]!	; 0x140

00010f3c <__gmon_start__@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #312]!	; 0x138

00010f48 <getopt_long@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #304]!	; 0x130

00010f54 <__ctype_b_loc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #296]!	; 0x128

00010f60 <exit@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #288]!	; 0x120

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #280]!	; 0x118

00010f78 <__errno_location@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #272]!	; 0x110

00010f84 <__cxa_atexit@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #264]!	; 0x108

00010f90 <memset@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #256]!	; 0x100

00010f9c <__printf_chk@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #248]!	; 0xf8

00010fa8 <fileno@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #240]!	; 0xf0

00010fb4 <__fprintf_chk@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #232]!	; 0xe8

00010fc0 <fclose@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #224]!	; 0xe0

00010fcc <fseeko64@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #216]!	; 0xd8

00010fd8 <fcntl64@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #208]!	; 0xd0

00010fe4 <setlocale@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #200]!	; 0xc8

00010ff0 <strrchr@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #192]!	; 0xc0

00010ffc <nl_langinfo@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #184]!	; 0xb8

00011008 <bindtextdomain@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #176]!	; 0xb0

00011014 <umask@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #168]!	; 0xa8

00011020 <isatty@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #160]!	; 0xa0

0001102c <strncmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #152]!	; 0x98

00011038 <abort@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #144]!	; 0x90

00011044 <close@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #136]!	; 0x88

00011050 <__mempcpy_chk@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

0001105c <.text>:
   1105c:	mov	fp, #0
   11060:	mov	lr, #0
   11064:	pop	{r1}		; (ldr r1, [sp], #4)
   11068:	mov	r2, sp
   1106c:	push	{r2}		; (str r2, [sp, #-4]!)
   11070:	push	{r0}		; (str r0, [sp, #-4]!)
   11074:	ldr	ip, [pc, #16]	; 1108c <__mempcpy_chk@plt+0x3c>
   11078:	push	{ip}		; (str ip, [sp, #-4]!)
   1107c:	ldr	r0, [pc, #12]	; 11090 <__mempcpy_chk@plt+0x40>
   11080:	ldr	r3, [pc, #12]	; 11094 <__mempcpy_chk@plt+0x44>
   11084:	bl	10f24 <__libc_start_main@plt>
   11088:	bl	11038 <abort@plt>
   1108c:	andeq	r4, r1, r8, ror sp
   11090:	andeq	r1, r1, ip, lsl #8
   11094:	andeq	r4, r1, r8, lsl sp
   11098:	ldr	r3, [pc, #20]	; 110b4 <__mempcpy_chk@plt+0x64>
   1109c:	ldr	r2, [pc, #20]	; 110b8 <__mempcpy_chk@plt+0x68>
   110a0:	add	r3, pc, r3
   110a4:	ldr	r2, [r3, r2]
   110a8:	cmp	r2, #0
   110ac:	bxeq	lr
   110b0:	b	10f3c <__gmon_start__@plt>
   110b4:	andeq	r4, r1, r8, asr pc
   110b8:	ldrdeq	r0, [r0], -ip
   110bc:	ldr	r0, [pc, #24]	; 110dc <__mempcpy_chk@plt+0x8c>
   110c0:	ldr	r3, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0x90>
   110c4:	cmp	r3, r0
   110c8:	bxeq	lr
   110cc:	ldr	r3, [pc, #16]	; 110e4 <__mempcpy_chk@plt+0x94>
   110d0:	cmp	r3, #0
   110d4:	bxeq	lr
   110d8:	bx	r3
   110dc:	andeq	r6, r2, r0, lsr r1
   110e0:	andeq	r6, r2, r0, lsr r1
   110e4:	andeq	r0, r0, r0
   110e8:	ldr	r0, [pc, #36]	; 11114 <__mempcpy_chk@plt+0xc4>
   110ec:	ldr	r1, [pc, #36]	; 11118 <__mempcpy_chk@plt+0xc8>
   110f0:	sub	r1, r1, r0
   110f4:	asr	r1, r1, #2
   110f8:	add	r1, r1, r1, lsr #31
   110fc:	asrs	r1, r1, #1
   11100:	bxeq	lr
   11104:	ldr	r3, [pc, #16]	; 1111c <__mempcpy_chk@plt+0xcc>
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:	andeq	r6, r2, r0, lsr r1
   11118:	andeq	r6, r2, r0, lsr r1
   1111c:	andeq	r0, r0, r0
   11120:	push	{r4, lr}
   11124:	ldr	r4, [pc, #24]	; 11144 <__mempcpy_chk@plt+0xf4>
   11128:	ldrb	r3, [r4]
   1112c:	cmp	r3, #0
   11130:	popne	{r4, pc}
   11134:	bl	110bc <__mempcpy_chk@plt+0x6c>
   11138:	mov	r3, #1
   1113c:	strb	r3, [r4]
   11140:	pop	{r4, pc}
   11144:	andeq	r6, r2, ip, asr #2
   11148:	b	110e8 <__mempcpy_chk@plt+0x98>
   1114c:	push	{fp, lr}
   11150:	mov	fp, sp
   11154:	mov	r4, r0
   11158:	cmp	r0, #0
   1115c:	bne	11244 <__mempcpy_chk@plt+0x1f4>
   11160:	movw	r1, #19915	; 0x4dcb
   11164:	movt	r1, #1
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	bl	10e70 <dcgettext@plt>
   11174:	mov	r1, r0
   11178:	movw	r5, #24924	; 0x615c
   1117c:	movt	r5, #2
   11180:	ldr	r2, [r5]
   11184:	mov	r0, #1
   11188:	mov	r3, r2
   1118c:	bl	10f9c <__printf_chk@plt>
   11190:	movw	r1, #19960	; 0x4df8
   11194:	movt	r1, #1
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	bl	10e70 <dcgettext@plt>
   111a4:	movw	r6, #24900	; 0x6144
   111a8:	movt	r6, #2
   111ac:	ldr	r1, [r6]
   111b0:	bl	10df8 <fputs_unlocked@plt>
   111b4:	movw	r1, #20000	; 0x4e20
   111b8:	movt	r1, #1
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	bl	10e70 <dcgettext@plt>
   111c8:	ldr	r1, [r6]
   111cc:	bl	10df8 <fputs_unlocked@plt>
   111d0:	movw	r1, #20045	; 0x4e4d
   111d4:	movt	r1, #1
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	bl	10e70 <dcgettext@plt>
   111e4:	ldr	r1, [r6]
   111e8:	bl	10df8 <fputs_unlocked@plt>
   111ec:	movw	r1, #20099	; 0x4e83
   111f0:	movt	r1, #1
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	bl	10e70 <dcgettext@plt>
   11200:	mov	r1, r0
   11204:	ldr	r2, [r5]
   11208:	mov	r0, #1
   1120c:	bl	10f9c <__printf_chk@plt>
   11210:	movw	r1, #20390	; 0x4fa6
   11214:	movt	r1, #1
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	bl	10e70 <dcgettext@plt>
   11224:	mov	r1, r0
   11228:	movw	r2, #20581	; 0x5065
   1122c:	movt	r2, #1
   11230:	mov	r0, #1
   11234:	bl	10f9c <__printf_chk@plt>
   11238:	bl	11288 <__mempcpy_chk@plt+0x238>
   1123c:	mov	r0, r4
   11240:	bl	10f60 <exit@plt>
   11244:	movw	r0, #24896	; 0x6140
   11248:	movt	r0, #2
   1124c:	ldr	r5, [r0]
   11250:	movw	r1, #19876	; 0x4da4
   11254:	movt	r1, #1
   11258:	mov	r0, #0
   1125c:	mov	r2, #5
   11260:	bl	10e70 <dcgettext@plt>
   11264:	mov	r2, r0
   11268:	movw	r0, #24924	; 0x615c
   1126c:	movt	r0, #2
   11270:	ldr	r3, [r0]
   11274:	mov	r0, r5
   11278:	mov	r1, #1
   1127c:	bl	10fb4 <__fprintf_chk@plt>
   11280:	mov	r0, r4
   11284:	bl	10f60 <exit@plt>
   11288:	push	{r4, r5, fp, lr}
   1128c:	add	fp, sp, #8
   11290:	sub	sp, sp, #56	; 0x38
   11294:	movw	r0, #21232	; 0x52f0
   11298:	movt	r0, #1
   1129c:	add	r1, r0, #32
   112a0:	mov	r5, sp
   112a4:	mov	r2, #48	; 0x30
   112a8:	vld1.64	{d16-d17}, [r1]
   112ac:	add	r1, r5, #32
   112b0:	add	r3, r0, #16
   112b4:	vld1.64	{d18-d19}, [r0], r2
   112b8:	vld1.64	{d20-d21}, [r3]
   112bc:	vldr	d22, [r0]
   112c0:	vst1.64	{d16-d17}, [r1]
   112c4:	add	r0, r5, #16
   112c8:	vst1.64	{d20-d21}, [r0]
   112cc:	mov	r0, r5
   112d0:	vst1.64	{d18-d19}, [r0], r2
   112d4:	vstr	d22, [r0]
   112d8:	ldr	r1, [sp]
   112dc:	cmp	r1, #0
   112e0:	beq	11308 <__mempcpy_chk@plt+0x2b8>
   112e4:	mov	r5, sp
   112e8:	movw	r4, #20581	; 0x5065
   112ec:	movt	r4, #1
   112f0:	mov	r0, r4
   112f4:	bl	10e04 <strcmp@plt>
   112f8:	cmp	r0, #0
   112fc:	ldrne	r1, [r5, #8]!
   11300:	cmpne	r1, #0
   11304:	bne	112f0 <__mempcpy_chk@plt+0x2a0>
   11308:	ldr	r4, [r5, #4]
   1130c:	movw	r1, #21013	; 0x5215
   11310:	movt	r1, #1
   11314:	mov	r0, #0
   11318:	mov	r2, #5
   1131c:	bl	10e70 <dcgettext@plt>
   11320:	mov	r1, r0
   11324:	movw	r2, #20627	; 0x5093
   11328:	movt	r2, #1
   1132c:	movw	r3, #21036	; 0x522c
   11330:	movt	r3, #1
   11334:	mov	r0, #1
   11338:	bl	10f9c <__printf_chk@plt>
   1133c:	movw	r5, #20581	; 0x5065
   11340:	movt	r5, #1
   11344:	cmp	r4, #0
   11348:	moveq	r4, r5
   1134c:	mov	r0, #5
   11350:	mov	r1, #0
   11354:	bl	10fe4 <setlocale@plt>
   11358:	cmp	r0, #0
   1135c:	beq	1139c <__mempcpy_chk@plt+0x34c>
   11360:	movw	r1, #21076	; 0x5254
   11364:	movt	r1, #1
   11368:	mov	r2, #3
   1136c:	bl	1102c <strncmp@plt>
   11370:	cmp	r0, #0
   11374:	beq	1139c <__mempcpy_chk@plt+0x34c>
   11378:	movw	r1, #21080	; 0x5258
   1137c:	movt	r1, #1
   11380:	mov	r0, #0
   11384:	mov	r2, #5
   11388:	bl	10e70 <dcgettext@plt>
   1138c:	movw	r1, #24900	; 0x6144
   11390:	movt	r1, #2
   11394:	ldr	r1, [r1]
   11398:	bl	10df8 <fputs_unlocked@plt>
   1139c:	movw	r1, #21151	; 0x529f
   113a0:	movt	r1, #1
   113a4:	mov	r0, #0
   113a8:	mov	r2, #5
   113ac:	bl	10e70 <dcgettext@plt>
   113b0:	mov	r1, r0
   113b4:	movw	r2, #21036	; 0x522c
   113b8:	movt	r2, #1
   113bc:	mov	r0, #1
   113c0:	mov	r3, r5
   113c4:	bl	10f9c <__printf_chk@plt>
   113c8:	movw	r1, #21178	; 0x52ba
   113cc:	movt	r1, #1
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	bl	10e70 <dcgettext@plt>
   113dc:	mov	r1, r0
   113e0:	movw	r0, #20946	; 0x51d2
   113e4:	movt	r0, #1
   113e8:	movw	r3, #19999	; 0x4e1f
   113ec:	movt	r3, #1
   113f0:	cmp	r4, r5
   113f4:	moveq	r3, r0
   113f8:	mov	r0, #1
   113fc:	mov	r2, r4
   11400:	bl	10f9c <__printf_chk@plt>
   11404:	sub	sp, fp, #8
   11408:	pop	{r4, r5, fp, pc}
   1140c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11410:	add	fp, sp, #28
   11414:	sub	sp, sp, #44	; 0x2c
   11418:	mov	r9, r1
   1141c:	mov	r4, r0
   11420:	ldr	r0, [r1]
   11424:	bl	11f30 <__mempcpy_chk@plt+0xee0>
   11428:	movw	r1, #19999	; 0x4e1f
   1142c:	movt	r1, #1
   11430:	mov	r0, #6
   11434:	bl	10fe4 <setlocale@plt>
   11438:	movw	r5, #20631	; 0x5097
   1143c:	movt	r5, #1
   11440:	movw	r1, #20587	; 0x506b
   11444:	movt	r1, #1
   11448:	mov	r0, r5
   1144c:	bl	11008 <bindtextdomain@plt>
   11450:	mov	r0, r5
   11454:	bl	10e94 <textdomain@plt>
   11458:	movw	r0, #20611	; 0x5083
   1145c:	movt	r0, #1
   11460:	bl	10f0c <getenv@plt>
   11464:	mov	sl, #127	; 0x7f
   11468:	cmp	r0, #0
   1146c:	movweq	sl, #125	; 0x7d
   11470:	mov	r0, sl
   11474:	bl	11934 <__mempcpy_chk@plt+0x8e4>
   11478:	movw	r0, #6504	; 0x1968
   1147c:	movt	r0, #1
   11480:	bl	14d7c <__mempcpy_chk@plt+0x3d2c>
   11484:	movw	r0, #24808	; 0x60e8
   11488:	movt	r0, #2
   1148c:	ldr	r0, [r0]
   11490:	mov	r5, #0
   11494:	movw	r1, #20641	; 0x50a1
   11498:	movt	r1, #1
   1149c:	movw	r2, #4428	; 0x114c
   114a0:	movt	r2, #1
   114a4:	stm	sp, {r0, r5}
   114a8:	str	r2, [sp, #8]
   114ac:	str	r1, [sp, #12]
   114b0:	str	r5, [sp, #16]
   114b4:	movw	r2, #20581	; 0x5065
   114b8:	movt	r2, #1
   114bc:	movw	r3, #20627	; 0x5093
   114c0:	movt	r3, #1
   114c4:	mov	r0, r4
   114c8:	mov	r1, r9
   114cc:	bl	11e68 <__mempcpy_chk@plt+0xe18>
   114d0:	movw	r0, #24888	; 0x6138
   114d4:	movt	r0, #2
   114d8:	ldr	r0, [r0]
   114dc:	cmp	r0, r4
   114e0:	bge	11908 <__mempcpy_chk@plt+0x8b8>
   114e4:	mov	r0, #0
   114e8:	bl	11020 <isatty@plt>
   114ec:	mov	r6, r0
   114f0:	mov	r0, #1
   114f4:	bl	11020 <isatty@plt>
   114f8:	mov	r7, r0
   114fc:	cmp	r0, #0
   11500:	bne	11518 <__mempcpy_chk@plt+0x4c8>
   11504:	bl	10f78 <__errno_location@plt>
   11508:	ldr	r0, [r0]
   1150c:	sub	r0, r0, #9
   11510:	clz	r0, r0
   11514:	lsr	r5, r0, #5
   11518:	mov	r0, #2
   1151c:	bl	11020 <isatty@plt>
   11520:	mov	r8, r0
   11524:	cmp	r6, #0
   11528:	beq	11554 <__mempcpy_chk@plt+0x504>
   1152c:	movw	r1, #20670	; 0x50be
   11530:	movt	r1, #1
   11534:	mov	r0, #0
   11538:	mov	r2, #1
   1153c:	mov	r3, #0
   11540:	bl	11c34 <__mempcpy_chk@plt+0xbe4>
   11544:	cmn	r0, #1
   11548:	ble	11728 <__mempcpy_chk@plt+0x6d8>
   1154c:	orrs	r0, r8, r7
   11550:	beq	1175c <__mempcpy_chk@plt+0x70c>
   11554:	str	r6, [fp, #-32]	; 0xffffffe0
   11558:	cmp	r7, #0
   1155c:	beq	1158c <__mempcpy_chk@plt+0x53c>
   11560:	str	r5, [sp, #36]	; 0x24
   11564:	mvn	r0, #384	; 0x180
   11568:	bl	11014 <umask@plt>
   1156c:	mov	r5, r0
   11570:	movw	r1, #20736	; 0x5100
   11574:	movt	r1, #1
   11578:	mov	r0, #1
   1157c:	movw	r2, #1089	; 0x441
   11580:	mov	r3, #384	; 0x180
   11584:	bl	11c34 <__mempcpy_chk@plt+0xbe4>
   11588:	b	115c8 <__mempcpy_chk@plt+0x578>
   1158c:	cmp	r8, #0
   11590:	mov	r0, r8
   11594:	movwne	r0, #1
   11598:	mov	r6, #1
   1159c:	tst	r5, r0
   115a0:	beq	11648 <__mempcpy_chk@plt+0x5f8>
   115a4:	str	r5, [sp, #36]	; 0x24
   115a8:	mvn	r0, #384	; 0x180
   115ac:	bl	11014 <umask@plt>
   115b0:	mov	r5, r0
   115b4:	movw	r0, #20736	; 0x5100
   115b8:	movt	r0, #1
   115bc:	movw	r1, #1089	; 0x441
   115c0:	mov	r2, #384	; 0x180
   115c4:	bl	10f00 <open64@plt>
   115c8:	mov	r6, r0
   115cc:	cmn	r0, #1
   115d0:	ble	116cc <__mempcpy_chk@plt+0x67c>
   115d4:	str	r9, [sp, #32]
   115d8:	mov	r4, #0
   115dc:	movw	r9, #20736	; 0x5100
   115e0:	movt	r9, #1
   115e4:	mov	r0, r5
   115e8:	bl	11014 <umask@plt>
   115ec:	movw	r0, #20769	; 0x5121
   115f0:	movt	r0, #1
   115f4:	movw	r1, #20788	; 0x5134
   115f8:	movt	r1, #1
   115fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11600:	cmp	r2, #0
   11604:	movne	r1, r0
   11608:	mov	r0, #0
   1160c:	mov	r2, #5
   11610:	bl	10e70 <dcgettext@plt>
   11614:	mov	r5, r0
   11618:	mov	r0, #4
   1161c:	mov	r1, r9
   11620:	bl	13574 <__mempcpy_chk@plt+0x2524>
   11624:	mov	r3, r0
   11628:	mov	r0, #0
   1162c:	mov	r1, #0
   11630:	mov	r2, r5
   11634:	bl	10ef4 <error@plt>
   11638:	mov	r0, r4
   1163c:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   11640:	ldr	r9, [sp, #32]
   11644:	ldr	r5, [sp, #36]	; 0x24
   11648:	cmp	r8, #0
   1164c:	beq	116c4 <__mempcpy_chk@plt+0x674>
   11650:	mov	r0, #2
   11654:	movw	r1, #1030	; 0x406
   11658:	mov	r2, #3
   1165c:	bl	11a50 <__mempcpy_chk@plt+0xa00>
   11660:	mov	r4, r0
   11664:	cmp	r7, #0
   11668:	bne	116a4 <__mempcpy_chk@plt+0x654>
   1166c:	movw	r0, #20811	; 0x514b
   11670:	movt	r0, #1
   11674:	movw	r1, #20830	; 0x515e
   11678:	movt	r1, #1
   1167c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11680:	cmp	r2, #0
   11684:	movne	r1, r0
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	bl	10e70 <dcgettext@plt>
   11694:	mov	r2, r0
   11698:	mov	r0, #0
   1169c:	mov	r1, #0
   116a0:	bl	10ef4 <error@plt>
   116a4:	mov	r0, r6
   116a8:	mov	r1, #2
   116ac:	bl	10e7c <dup2@plt>
   116b0:	cmn	r0, #1
   116b4:	ble	11784 <__mempcpy_chk@plt+0x734>
   116b8:	cmp	r5, #0
   116bc:	bne	117c0 <__mempcpy_chk@plt+0x770>
   116c0:	b	117c8 <__mempcpy_chk@plt+0x778>
   116c4:	mov	r4, #2
   116c8:	b	117c8 <__mempcpy_chk@plt+0x778>
   116cc:	bl	10f78 <__errno_location@plt>
   116d0:	str	r0, [sp, #24]
   116d4:	ldr	r0, [r0]
   116d8:	str	r0, [sp, #28]
   116dc:	movw	r0, #20746	; 0x510a
   116e0:	movt	r0, #1
   116e4:	bl	10f0c <getenv@plt>
   116e8:	cmp	r0, #0
   116ec:	beq	11850 <__mempcpy_chk@plt+0x800>
   116f0:	str	r9, [sp, #32]
   116f4:	movw	r1, #20736	; 0x5100
   116f8:	movt	r1, #1
   116fc:	mov	r2, #0
   11700:	bl	11c9c <__mempcpy_chk@plt+0xc4c>
   11704:	mov	r9, r0
   11708:	cmp	r7, #0
   1170c:	beq	11858 <__mempcpy_chk@plt+0x808>
   11710:	mov	r0, #1
   11714:	mov	r1, r9
   11718:	movw	r2, #1089	; 0x441
   1171c:	mov	r3, #384	; 0x180
   11720:	bl	11c34 <__mempcpy_chk@plt+0xbe4>
   11724:	b	11868 <__mempcpy_chk@plt+0x818>
   11728:	bl	10f78 <__errno_location@plt>
   1172c:	ldr	r4, [r0]
   11730:	movw	r1, #20680	; 0x50c8
   11734:	movt	r1, #1
   11738:	mov	r0, #0
   1173c:	mov	r2, #5
   11740:	bl	10e70 <dcgettext@plt>
   11744:	mov	r2, r0
   11748:	mov	r0, sl
   1174c:	mov	r1, r4
   11750:	bl	10ef4 <error@plt>
   11754:	orrs	r0, r8, r7
   11758:	bne	11554 <__mempcpy_chk@plt+0x504>
   1175c:	movw	r1, #20721	; 0x50f1
   11760:	movt	r1, #1
   11764:	mov	r0, #0
   11768:	mov	r2, #5
   1176c:	bl	10e70 <dcgettext@plt>
   11770:	mov	r2, r0
   11774:	mov	r0, #0
   11778:	mov	r1, #0
   1177c:	bl	10ef4 <error@plt>
   11780:	b	11554 <__mempcpy_chk@plt+0x504>
   11784:	bl	10f78 <__errno_location@plt>
   11788:	mov	r7, r5
   1178c:	ldr	r5, [r0]
   11790:	movw	r1, #20859	; 0x517b
   11794:	movt	r1, #1
   11798:	mov	r0, #0
   1179c:	mov	r2, #5
   117a0:	bl	10e70 <dcgettext@plt>
   117a4:	mov	r2, r0
   117a8:	mov	r0, sl
   117ac:	mov	r1, r5
   117b0:	mov	r5, r7
   117b4:	bl	10ef4 <error@plt>
   117b8:	cmp	r5, #0
   117bc:	beq	117c8 <__mempcpy_chk@plt+0x778>
   117c0:	mov	r0, r6
   117c4:	bl	11044 <close@plt>
   117c8:	movw	r0, #24896	; 0x6140
   117cc:	movt	r0, #2
   117d0:	ldr	r0, [r0]
   117d4:	bl	10edc <ferror_unlocked@plt>
   117d8:	cmp	r0, #0
   117dc:	bne	118fc <__mempcpy_chk@plt+0x8ac>
   117e0:	mov	r0, #1
   117e4:	mov	r1, #1
   117e8:	bl	10e58 <signal@plt>
   117ec:	movw	r0, #24888	; 0x6138
   117f0:	movt	r0, #2
   117f4:	ldr	r0, [r0]
   117f8:	ldr	r0, [r9, r0, lsl #2]!
   117fc:	mov	r1, r9
   11800:	bl	10e40 <execvp@plt>
   11804:	bl	10f78 <__errno_location@plt>
   11808:	ldr	r5, [r0]
   1180c:	mov	sl, #126	; 0x7e
   11810:	cmp	r5, #2
   11814:	movweq	sl, #127	; 0x7f
   11818:	mov	r0, r4
   1181c:	mov	r1, #2
   11820:	bl	10e7c <dup2@plt>
   11824:	cmp	r0, #2
   11828:	bne	118fc <__mempcpy_chk@plt+0x8ac>
   1182c:	movw	r1, #20893	; 0x519d
   11830:	movt	r1, #1
   11834:	mov	r0, #0
   11838:	mov	r2, #5
   1183c:	bl	10e70 <dcgettext@plt>
   11840:	mov	r4, r0
   11844:	ldr	r1, [r9]
   11848:	mov	r0, #4
   1184c:	b	118e4 <__mempcpy_chk@plt+0x894>
   11850:	mov	r9, #0
   11854:	b	11878 <__mempcpy_chk@plt+0x828>
   11858:	mov	r0, r9
   1185c:	movw	r1, #1089	; 0x441
   11860:	mov	r2, #384	; 0x180
   11864:	bl	10f00 <open64@plt>
   11868:	mov	r6, r0
   1186c:	cmn	r0, #1
   11870:	mov	r4, r9
   11874:	bgt	115e4 <__mempcpy_chk@plt+0x594>
   11878:	ldr	r0, [sp, #24]
   1187c:	ldr	r5, [r0]
   11880:	movw	r1, #20751	; 0x510f
   11884:	movt	r1, #1
   11888:	mov	r0, #0
   1188c:	mov	r2, #5
   11890:	bl	10e70 <dcgettext@plt>
   11894:	mov	r4, r0
   11898:	movw	r1, #20736	; 0x5100
   1189c:	movt	r1, #1
   118a0:	mov	r0, #4
   118a4:	bl	13574 <__mempcpy_chk@plt+0x2524>
   118a8:	mov	r3, r0
   118ac:	mov	r0, #0
   118b0:	ldr	r1, [sp, #28]
   118b4:	mov	r2, r4
   118b8:	bl	10ef4 <error@plt>
   118bc:	cmp	r9, #0
   118c0:	beq	118fc <__mempcpy_chk@plt+0x8ac>
   118c4:	movw	r1, #20751	; 0x510f
   118c8:	movt	r1, #1
   118cc:	mov	r0, #0
   118d0:	mov	r2, #5
   118d4:	bl	10e70 <dcgettext@plt>
   118d8:	mov	r4, r0
   118dc:	mov	r0, #4
   118e0:	mov	r1, r9
   118e4:	bl	13574 <__mempcpy_chk@plt+0x2524>
   118e8:	mov	r3, r0
   118ec:	mov	r0, #0
   118f0:	mov	r1, r5
   118f4:	mov	r2, r4
   118f8:	bl	10ef4 <error@plt>
   118fc:	mov	r0, sl
   11900:	sub	sp, fp, #28
   11904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11908:	movw	r1, #20654	; 0x50ae
   1190c:	movt	r1, #1
   11910:	mov	r0, #0
   11914:	mov	r2, #5
   11918:	bl	10e70 <dcgettext@plt>
   1191c:	mov	r2, r0
   11920:	mov	r0, #0
   11924:	mov	r1, #0
   11928:	bl	10ef4 <error@plt>
   1192c:	mov	r0, sl
   11930:	bl	1114c <__mempcpy_chk@plt+0xfc>
   11934:	cmp	r0, #1
   11938:	movwne	r1, #24812	; 0x60ec
   1193c:	movtne	r1, #2
   11940:	strne	r0, [r1]
   11944:	bx	lr
   11948:	movw	r1, #24912	; 0x6150
   1194c:	movt	r1, #2
   11950:	str	r0, [r1]
   11954:	bx	lr
   11958:	movw	r1, #24916	; 0x6154
   1195c:	movt	r1, #2
   11960:	strb	r0, [r1]
   11964:	bx	lr
   11968:	push	{r4, r5, r6, sl, fp, lr}
   1196c:	add	fp, sp, #16
   11970:	sub	sp, sp, #8
   11974:	movw	r0, #24900	; 0x6144
   11978:	movt	r0, #2
   1197c:	ldr	r0, [r0]
   11980:	bl	148b4 <__mempcpy_chk@plt+0x3864>
   11984:	cmp	r0, #0
   11988:	beq	119b0 <__mempcpy_chk@plt+0x960>
   1198c:	movw	r0, #24916	; 0x6154
   11990:	movt	r0, #2
   11994:	ldrb	r0, [r0]
   11998:	cmp	r0, #0
   1199c:	beq	119d0 <__mempcpy_chk@plt+0x980>
   119a0:	bl	10f78 <__errno_location@plt>
   119a4:	ldr	r0, [r0]
   119a8:	cmp	r0, #32
   119ac:	bne	119d0 <__mempcpy_chk@plt+0x980>
   119b0:	movw	r0, #24896	; 0x6140
   119b4:	movt	r0, #2
   119b8:	ldr	r0, [r0]
   119bc:	bl	148b4 <__mempcpy_chk@plt+0x3864>
   119c0:	cmp	r0, #0
   119c4:	subeq	sp, fp, #16
   119c8:	popeq	{r4, r5, r6, sl, fp, pc}
   119cc:	b	11a40 <__mempcpy_chk@plt+0x9f0>
   119d0:	movw	r1, #21303	; 0x5337
   119d4:	movt	r1, #1
   119d8:	mov	r0, #0
   119dc:	mov	r2, #5
   119e0:	bl	10e70 <dcgettext@plt>
   119e4:	mov	r4, r0
   119e8:	movw	r0, #24912	; 0x6150
   119ec:	movt	r0, #2
   119f0:	ldr	r6, [r0]
   119f4:	bl	10f78 <__errno_location@plt>
   119f8:	ldr	r5, [r0]
   119fc:	cmp	r6, #0
   11a00:	bne	11a1c <__mempcpy_chk@plt+0x9cc>
   11a04:	movw	r2, #21319	; 0x5347
   11a08:	movt	r2, #1
   11a0c:	mov	r0, #0
   11a10:	mov	r1, r5
   11a14:	mov	r3, r4
   11a18:	b	11a3c <__mempcpy_chk@plt+0x9ec>
   11a1c:	mov	r0, r6
   11a20:	bl	13618 <__mempcpy_chk@plt+0x25c8>
   11a24:	mov	r3, r0
   11a28:	str	r4, [sp]
   11a2c:	movw	r2, #21315	; 0x5343
   11a30:	movt	r2, #1
   11a34:	mov	r0, #0
   11a38:	mov	r1, r5
   11a3c:	bl	10ef4 <error@plt>
   11a40:	movw	r0, #24812	; 0x60ec
   11a44:	movt	r0, #2
   11a48:	ldr	r0, [r0]
   11a4c:	bl	10e28 <_exit@plt>
   11a50:	sub	sp, sp, #8
   11a54:	push	{fp, lr}
   11a58:	mov	fp, sp
   11a5c:	sub	sp, sp, #8
   11a60:	str	r3, [fp, #12]
   11a64:	str	r2, [fp, #8]
   11a68:	add	r2, fp, #8
   11a6c:	str	r2, [sp, #4]
   11a70:	cmp	r1, #11
   11a74:	bhi	11ab4 <__mempcpy_chk@plt+0xa64>
   11a78:	mov	r2, #1
   11a7c:	movw	r3, #1300	; 0x514
   11a80:	tst	r3, r2, lsl r1
   11a84:	bne	11b04 <__mempcpy_chk@plt+0xab4>
   11a88:	movw	r3, #2570	; 0xa0a
   11a8c:	tst	r3, r2, lsl r1
   11a90:	bne	11adc <__mempcpy_chk@plt+0xa8c>
   11a94:	cmp	r1, #0
   11a98:	bne	11ab4 <__mempcpy_chk@plt+0xa64>
   11a9c:	ldr	r1, [sp, #4]
   11aa0:	add	r2, r1, #4
   11aa4:	str	r2, [sp, #4]
   11aa8:	ldr	r1, [r1]
   11aac:	bl	11b28 <__mempcpy_chk@plt+0xad8>
   11ab0:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11ab4:	sub	r2, r1, #1024	; 0x400
   11ab8:	cmp	r2, #10
   11abc:	bhi	11b04 <__mempcpy_chk@plt+0xab4>
   11ac0:	mov	ip, #1
   11ac4:	movw	r3, #645	; 0x285
   11ac8:	tst	r3, ip, lsl r2
   11acc:	bne	11b04 <__mempcpy_chk@plt+0xab4>
   11ad0:	movw	r3, #1282	; 0x502
   11ad4:	tst	r3, ip, lsl r2
   11ad8:	beq	11ae4 <__mempcpy_chk@plt+0xa94>
   11adc:	bl	10fd8 <fcntl64@plt>
   11ae0:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11ae4:	cmp	r2, #6
   11ae8:	bne	11b04 <__mempcpy_chk@plt+0xab4>
   11aec:	ldr	r1, [sp, #4]
   11af0:	add	r2, r1, #4
   11af4:	str	r2, [sp, #4]
   11af8:	ldr	r1, [r1]
   11afc:	bl	11b34 <__mempcpy_chk@plt+0xae4>
   11b00:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11b04:	ldr	r2, [sp, #4]
   11b08:	add	r3, r2, #4
   11b0c:	str	r3, [sp, #4]
   11b10:	ldr	r2, [r2]
   11b14:	bl	10fd8 <fcntl64@plt>
   11b18:	mov	sp, fp
   11b1c:	pop	{fp, lr}
   11b20:	add	sp, sp, #8
   11b24:	bx	lr
   11b28:	mov	r2, r1
   11b2c:	mov	r1, #0
   11b30:	b	10fd8 <fcntl64@plt>
   11b34:	push	{r4, r5, r6, r7, fp, lr}
   11b38:	add	fp, sp, #16
   11b3c:	mov	r5, r1
   11b40:	mov	r6, r0
   11b44:	movw	r7, #24920	; 0x6158
   11b48:	movt	r7, #2
   11b4c:	ldr	r0, [r7]
   11b50:	cmp	r0, #0
   11b54:	blt	11bb8 <__mempcpy_chk@plt+0xb68>
   11b58:	mov	r0, r6
   11b5c:	movw	r1, #1030	; 0x406
   11b60:	mov	r2, r5
   11b64:	bl	10fd8 <fcntl64@plt>
   11b68:	mov	r4, r0
   11b6c:	cmn	r0, #1
   11b70:	bgt	11ba4 <__mempcpy_chk@plt+0xb54>
   11b74:	bl	10f78 <__errno_location@plt>
   11b78:	ldr	r0, [r0]
   11b7c:	cmp	r0, #22
   11b80:	bne	11ba4 <__mempcpy_chk@plt+0xb54>
   11b84:	mov	r0, r6
   11b88:	mov	r1, r5
   11b8c:	bl	11b28 <__mempcpy_chk@plt+0xad8>
   11b90:	mov	r4, r0
   11b94:	cmp	r0, #0
   11b98:	blt	11c08 <__mempcpy_chk@plt+0xbb8>
   11b9c:	mvn	r0, #0
   11ba0:	b	11ba8 <__mempcpy_chk@plt+0xb58>
   11ba4:	mov	r0, #1
   11ba8:	str	r0, [r7]
   11bac:	cmp	r4, #0
   11bb0:	bge	11bd0 <__mempcpy_chk@plt+0xb80>
   11bb4:	b	11c08 <__mempcpy_chk@plt+0xbb8>
   11bb8:	mov	r0, r6
   11bbc:	mov	r1, r5
   11bc0:	bl	11b28 <__mempcpy_chk@plt+0xad8>
   11bc4:	mov	r4, r0
   11bc8:	cmp	r4, #0
   11bcc:	blt	11c08 <__mempcpy_chk@plt+0xbb8>
   11bd0:	ldr	r0, [r7]
   11bd4:	cmn	r0, #1
   11bd8:	bne	11c08 <__mempcpy_chk@plt+0xbb8>
   11bdc:	mov	r0, r4
   11be0:	mov	r1, #1
   11be4:	bl	10fd8 <fcntl64@plt>
   11be8:	cmp	r0, #0
   11bec:	blt	11c10 <__mempcpy_chk@plt+0xbc0>
   11bf0:	orr	r2, r0, #1
   11bf4:	mov	r0, r4
   11bf8:	mov	r1, #2
   11bfc:	bl	10fd8 <fcntl64@plt>
   11c00:	cmn	r0, #1
   11c04:	beq	11c10 <__mempcpy_chk@plt+0xbc0>
   11c08:	mov	r0, r4
   11c0c:	pop	{r4, r5, r6, r7, fp, pc}
   11c10:	bl	10f78 <__errno_location@plt>
   11c14:	mov	r5, r0
   11c18:	ldr	r6, [r0]
   11c1c:	mov	r0, r4
   11c20:	bl	11044 <close@plt>
   11c24:	str	r6, [r5]
   11c28:	mvn	r4, #0
   11c2c:	mov	r0, r4
   11c30:	pop	{r4, r5, r6, r7, fp, pc}
   11c34:	push	{r4, r5, r6, r7, fp, lr}
   11c38:	add	fp, sp, #16
   11c3c:	mov	r5, r0
   11c40:	mov	r0, r1
   11c44:	mov	r1, r2
   11c48:	mov	r2, r3
   11c4c:	bl	10f00 <open64@plt>
   11c50:	mov	r4, r0
   11c54:	cmp	r0, r5
   11c58:	beq	11c94 <__mempcpy_chk@plt+0xc44>
   11c5c:	cmp	r4, #0
   11c60:	blt	11c94 <__mempcpy_chk@plt+0xc44>
   11c64:	mov	r0, r4
   11c68:	mov	r1, r5
   11c6c:	bl	10e7c <dup2@plt>
   11c70:	mov	r5, r0
   11c74:	bl	10f78 <__errno_location@plt>
   11c78:	mov	r6, r0
   11c7c:	ldr	r7, [r0]
   11c80:	mov	r0, r4
   11c84:	bl	11044 <close@plt>
   11c88:	str	r7, [r6]
   11c8c:	mov	r0, r5
   11c90:	pop	{r4, r5, r6, r7, fp, pc}
   11c94:	mov	r0, r4
   11c98:	pop	{r4, r5, r6, r7, fp, pc}
   11c9c:	push	{fp, lr}
   11ca0:	mov	fp, sp
   11ca4:	bl	11cb4 <__mempcpy_chk@plt+0xc64>
   11ca8:	cmp	r0, #0
   11cac:	popne	{fp, pc}
   11cb0:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   11cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cb8:	add	fp, sp, #28
   11cbc:	push	{r2}		; (str r2, [sp, #-4]!)
   11cc0:	mov	sl, r1
   11cc4:	mov	r7, r0
   11cc8:	bl	1450c <__mempcpy_chk@plt+0x34bc>
   11ccc:	sub	r4, r0, r7
   11cd0:	bl	14558 <__mempcpy_chk@plt+0x3508>
   11cd4:	mov	r6, r0
   11cd8:	add	r5, r4, r0
   11cdc:	mov	r0, sl
   11ce0:	bl	10f6c <strlen@plt>
   11ce4:	mov	r9, r0
   11ce8:	cmp	r6, #0
   11cec:	beq	11d14 <__mempcpy_chk@plt+0xcc4>
   11cf0:	add	r0, r7, r5
   11cf4:	ldrb	r0, [r0, #-1]
   11cf8:	mov	r4, #0
   11cfc:	cmp	r0, #47	; 0x2f
   11d00:	beq	11d24 <__mempcpy_chk@plt+0xcd4>
   11d04:	ldrb	r0, [sl]
   11d08:	subs	r4, r0, #47	; 0x2f
   11d0c:	movwne	r4, #47	; 0x2f
   11d10:	b	11d24 <__mempcpy_chk@plt+0xcd4>
   11d14:	ldrb	r0, [sl]
   11d18:	mov	r4, #0
   11d1c:	cmp	r0, #47	; 0x2f
   11d20:	movweq	r4, #46	; 0x2e
   11d24:	add	r0, r9, r5
   11d28:	uxtb	r8, r4
   11d2c:	cmp	r8, #0
   11d30:	movwne	r8, #1
   11d34:	add	r0, r0, r8
   11d38:	add	r0, r0, #1
   11d3c:	bl	14488 <__mempcpy_chk@plt+0x3438>
   11d40:	mov	r6, r0
   11d44:	cmp	r0, #0
   11d48:	beq	11d88 <__mempcpy_chk@plt+0xd38>
   11d4c:	mov	r0, r6
   11d50:	mov	r1, r7
   11d54:	mov	r2, r5
   11d58:	mvn	r3, #0
   11d5c:	bl	11050 <__mempcpy_chk@plt>
   11d60:	strb	r4, [r0], r8
   11d64:	ldr	r1, [sp]
   11d68:	cmp	r1, #0
   11d6c:	strne	r0, [r1]
   11d70:	mov	r1, sl
   11d74:	mov	r2, r9
   11d78:	mvn	r3, #0
   11d7c:	bl	11050 <__mempcpy_chk@plt>
   11d80:	mov	r1, #0
   11d84:	strb	r1, [r0]
   11d88:	mov	r0, r6
   11d8c:	sub	sp, fp, #28
   11d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d94:	push	{r4, r5, r6, sl, fp, lr}
   11d98:	add	fp, sp, #16
   11d9c:	mov	r4, r0
   11da0:	bl	10f78 <__errno_location@plt>
   11da4:	mov	r5, r0
   11da8:	ldr	r6, [r0]
   11dac:	mov	r0, r4
   11db0:	bl	10e1c <free@plt>
   11db4:	str	r6, [r5]
   11db8:	pop	{r4, r5, r6, sl, fp, pc}
   11dbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11dc0:	add	fp, sp, #24
   11dc4:	sub	sp, sp, #8
   11dc8:	movw	r6, #24904	; 0x6148
   11dcc:	movt	r6, #2
   11dd0:	ldr	r7, [r6]
   11dd4:	mov	r4, #0
   11dd8:	str	r4, [r6]
   11ddc:	cmp	r0, #2
   11de0:	bne	11e50 <__mempcpy_chk@plt+0xe00>
   11de4:	mov	r8, r3
   11de8:	mov	r5, r2
   11dec:	str	r4, [sp]
   11df0:	movw	r2, #21322	; 0x534a
   11df4:	movt	r2, #1
   11df8:	movw	r3, #21340	; 0x535c
   11dfc:	movt	r3, #1
   11e00:	bl	10f48 <getopt_long@plt>
   11e04:	cmp	r0, #104	; 0x68
   11e08:	beq	11e44 <__mempcpy_chk@plt+0xdf4>
   11e0c:	cmp	r0, #118	; 0x76
   11e10:	bne	11e50 <__mempcpy_chk@plt+0xe00>
   11e14:	ldr	r3, [fp, #8]
   11e18:	add	r1, fp, #16
   11e1c:	str	r1, [sp, #4]
   11e20:	movw	r0, #24900	; 0x6144
   11e24:	movt	r0, #2
   11e28:	ldr	r0, [r0]
   11e2c:	str	r1, [sp]
   11e30:	mov	r1, r5
   11e34:	mov	r2, r8
   11e38:	bl	13eec <__mempcpy_chk@plt+0x2e9c>
   11e3c:	mov	r0, #0
   11e40:	bl	10f60 <exit@plt>
   11e44:	ldr	r1, [fp, #12]
   11e48:	mov	r0, #0
   11e4c:	blx	r1
   11e50:	movw	r0, #24888	; 0x6138
   11e54:	movt	r0, #2
   11e58:	str	r4, [r0]
   11e5c:	str	r7, [r6]
   11e60:	sub	sp, fp, #24
   11e64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e6c:	add	fp, sp, #24
   11e70:	sub	sp, sp, #8
   11e74:	mov	r8, r3
   11e78:	mov	r5, r2
   11e7c:	movw	r6, #24904	; 0x6148
   11e80:	movt	r6, #2
   11e84:	ldr	r7, [r6]
   11e88:	mov	r2, #1
   11e8c:	str	r2, [r6]
   11e90:	mov	r2, #0
   11e94:	str	r2, [sp]
   11e98:	ldr	r3, [fp, #12]
   11e9c:	movw	r4, #19999	; 0x4e1f
   11ea0:	movt	r4, #1
   11ea4:	movw	r2, #21322	; 0x534a
   11ea8:	movt	r2, #1
   11eac:	cmp	r3, #0
   11eb0:	movne	r2, r4
   11eb4:	movw	r3, #21340	; 0x535c
   11eb8:	movt	r3, #1
   11ebc:	bl	10f48 <getopt_long@plt>
   11ec0:	cmn	r0, #1
   11ec4:	beq	11ef4 <__mempcpy_chk@plt+0xea4>
   11ec8:	ldr	r1, [fp, #16]
   11ecc:	cmp	r0, #104	; 0x68
   11ed0:	beq	11eec <__mempcpy_chk@plt+0xe9c>
   11ed4:	cmp	r0, #118	; 0x76
   11ed8:	beq	11f00 <__mempcpy_chk@plt+0xeb0>
   11edc:	movw	r0, #24812	; 0x60ec
   11ee0:	movt	r0, #2
   11ee4:	ldr	r0, [r0]
   11ee8:	b	11ef0 <__mempcpy_chk@plt+0xea0>
   11eec:	mov	r0, #0
   11ef0:	blx	r1
   11ef4:	str	r7, [r6]
   11ef8:	sub	sp, fp, #24
   11efc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f00:	ldr	r3, [fp, #8]
   11f04:	add	r1, fp, #20
   11f08:	str	r1, [sp, #4]
   11f0c:	movw	r0, #24900	; 0x6144
   11f10:	movt	r0, #2
   11f14:	ldr	r0, [r0]
   11f18:	str	r1, [sp]
   11f1c:	mov	r1, r5
   11f20:	mov	r2, r8
   11f24:	bl	13eec <__mempcpy_chk@plt+0x2e9c>
   11f28:	mov	r0, #0
   11f2c:	bl	10f60 <exit@plt>
   11f30:	push	{r4, r5, fp, lr}
   11f34:	add	fp, sp, #8
   11f38:	cmp	r0, #0
   11f3c:	beq	11fd0 <__mempcpy_chk@plt+0xf80>
   11f40:	mov	r4, r0
   11f44:	mov	r1, #47	; 0x2f
   11f48:	bl	10ff0 <strrchr@plt>
   11f4c:	cmp	r0, #0
   11f50:	mov	r5, r4
   11f54:	addne	r5, r0, #1
   11f58:	sub	r0, r5, r4
   11f5c:	cmp	r0, #7
   11f60:	blt	11fb4 <__mempcpy_chk@plt+0xf64>
   11f64:	sub	r0, r5, #7
   11f68:	movw	r1, #21444	; 0x53c4
   11f6c:	movt	r1, #1
   11f70:	mov	r2, #7
   11f74:	bl	1102c <strncmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	bne	11fb4 <__mempcpy_chk@plt+0xf64>
   11f80:	movw	r1, #21452	; 0x53cc
   11f84:	movt	r1, #1
   11f88:	mov	r0, r5
   11f8c:	mov	r2, #3
   11f90:	bl	1102c <strncmp@plt>
   11f94:	cmp	r0, #0
   11f98:	beq	11fa4 <__mempcpy_chk@plt+0xf54>
   11f9c:	mov	r4, r5
   11fa0:	b	11fb4 <__mempcpy_chk@plt+0xf64>
   11fa4:	add	r4, r5, #3
   11fa8:	movw	r0, #24880	; 0x6130
   11fac:	movt	r0, #2
   11fb0:	str	r4, [r0]
   11fb4:	movw	r0, #24884	; 0x6134
   11fb8:	movt	r0, #2
   11fbc:	str	r4, [r0]
   11fc0:	movw	r0, #24924	; 0x615c
   11fc4:	movt	r0, #2
   11fc8:	str	r4, [r0]
   11fcc:	pop	{r4, r5, fp, pc}
   11fd0:	movw	r0, #24896	; 0x6140
   11fd4:	movt	r0, #2
   11fd8:	ldr	r3, [r0]
   11fdc:	movw	r0, #21388	; 0x538c
   11fe0:	movt	r0, #1
   11fe4:	mov	r1, #55	; 0x37
   11fe8:	mov	r2, #1
   11fec:	bl	10eac <fwrite@plt>
   11ff0:	bl	11038 <abort@plt>
   11ff4:	push	{r4, r5, r6, sl, fp, lr}
   11ff8:	add	fp, sp, #16
   11ffc:	mov	r4, r0
   12000:	movw	r0, #24928	; 0x6160
   12004:	movt	r0, #2
   12008:	cmp	r4, #0
   1200c:	moveq	r4, r0
   12010:	bl	10f78 <__errno_location@plt>
   12014:	mov	r5, r0
   12018:	ldr	r6, [r0]
   1201c:	mov	r0, r4
   12020:	mov	r1, #48	; 0x30
   12024:	bl	14334 <__mempcpy_chk@plt+0x32e4>
   12028:	str	r6, [r5]
   1202c:	pop	{r4, r5, r6, sl, fp, pc}
   12030:	movw	r1, #24928	; 0x6160
   12034:	movt	r1, #2
   12038:	cmp	r0, #0
   1203c:	movne	r1, r0
   12040:	ldr	r0, [r1]
   12044:	bx	lr
   12048:	movw	r2, #24928	; 0x6160
   1204c:	movt	r2, #2
   12050:	cmp	r0, #0
   12054:	movne	r2, r0
   12058:	str	r1, [r2]
   1205c:	bx	lr
   12060:	movw	r3, #24928	; 0x6160
   12064:	movt	r3, #2
   12068:	cmp	r0, #0
   1206c:	movne	r3, r0
   12070:	ubfx	r0, r1, #5, #3
   12074:	add	r0, r3, r0, lsl #2
   12078:	ldr	r3, [r0, #8]
   1207c:	and	r1, r1, #31
   12080:	eor	r2, r2, r3, lsr r1
   12084:	and	r2, r2, #1
   12088:	eor	r2, r3, r2, lsl r1
   1208c:	str	r2, [r0, #8]
   12090:	mov	r0, #1
   12094:	and	r0, r0, r3, lsr r1
   12098:	bx	lr
   1209c:	movw	r2, #24928	; 0x6160
   120a0:	movt	r2, #2
   120a4:	cmp	r0, #0
   120a8:	movne	r2, r0
   120ac:	ldr	r0, [r2, #4]
   120b0:	str	r1, [r2, #4]
   120b4:	bx	lr
   120b8:	movw	r3, #24928	; 0x6160
   120bc:	movt	r3, #2
   120c0:	cmp	r0, #0
   120c4:	movne	r3, r0
   120c8:	mov	r0, #10
   120cc:	str	r0, [r3]
   120d0:	cmp	r1, #0
   120d4:	cmpne	r2, #0
   120d8:	bne	120e8 <__mempcpy_chk@plt+0x1098>
   120dc:	push	{fp, lr}
   120e0:	mov	fp, sp
   120e4:	bl	11038 <abort@plt>
   120e8:	str	r1, [r3, #40]	; 0x28
   120ec:	str	r2, [r3, #44]	; 0x2c
   120f0:	bx	lr
   120f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120f8:	add	fp, sp, #28
   120fc:	sub	sp, sp, #20
   12100:	mov	r8, r3
   12104:	mov	r9, r2
   12108:	mov	sl, r1
   1210c:	mov	r7, r0
   12110:	ldr	r0, [fp, #8]
   12114:	movw	r5, #24928	; 0x6160
   12118:	movt	r5, #2
   1211c:	cmp	r0, #0
   12120:	movne	r5, r0
   12124:	bl	10f78 <__errno_location@plt>
   12128:	mov	r4, r0
   1212c:	ldm	r5, {r0, r1}
   12130:	ldr	r2, [r5, #40]	; 0x28
   12134:	ldr	r3, [r5, #44]	; 0x2c
   12138:	ldr	r6, [r4]
   1213c:	add	r5, r5, #8
   12140:	stm	sp, {r0, r1, r5}
   12144:	str	r2, [sp, #12]
   12148:	str	r3, [sp, #16]
   1214c:	mov	r0, r7
   12150:	mov	r1, sl
   12154:	mov	r2, r9
   12158:	mov	r3, r8
   1215c:	bl	1216c <__mempcpy_chk@plt+0x111c>
   12160:	str	r6, [r4]
   12164:	sub	sp, fp, #28
   12168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1216c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12170:	add	fp, sp, #28
   12174:	sub	sp, sp, #156	; 0x9c
   12178:	mov	r9, r3
   1217c:	str	r2, [fp, #-84]	; 0xffffffac
   12180:	mov	r6, r1
   12184:	mov	r7, r0
   12188:	ldr	r0, [fp, #12]
   1218c:	and	r1, r0, #4
   12190:	str	r1, [sp, #32]
   12194:	and	r1, r0, #1
   12198:	str	r1, [sp, #36]	; 0x24
   1219c:	ubfx	sl, r0, #1, #1
   121a0:	bl	10ec4 <__ctype_get_mb_cur_max@plt>
   121a4:	str	r0, [sp, #40]	; 0x28
   121a8:	ldr	r0, [fp, #24]
   121ac:	str	r0, [sp, #76]	; 0x4c
   121b0:	ldr	r0, [fp, #20]
   121b4:	str	r0, [sp, #68]	; 0x44
   121b8:	ldr	r0, [fp, #8]
   121bc:	str	r0, [fp, #-60]	; 0xffffffc4
   121c0:	mov	r0, #0
   121c4:	str	r0, [sp, #72]	; 0x48
   121c8:	mov	r0, #0
   121cc:	str	r0, [sp, #92]	; 0x5c
   121d0:	mov	r0, #0
   121d4:	str	r0, [fp, #-72]	; 0xffffffb8
   121d8:	mov	r0, #0
   121dc:	mov	r1, #0
   121e0:	str	r1, [fp, #-56]	; 0xffffffc8
   121e4:	mov	r1, #0
   121e8:	str	r1, [sp, #56]	; 0x38
   121ec:	mov	r5, #1
   121f0:	str	r7, [sp, #80]	; 0x50
   121f4:	mov	r4, r6
   121f8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   121fc:	cmp	r6, #10
   12200:	bhi	13168 <__mempcpy_chk@plt+0x2118>
   12204:	add	r1, pc, #20
   12208:	mov	r8, #0
   1220c:	mov	r2, #1
   12210:	mov	r3, #0
   12214:	ldr	ip, [fp, #-84]	; 0xffffffac
   12218:	mov	lr, r9
   1221c:	ldr	pc, [r1, r6, lsl #2]
   12220:	strdeq	r2, [r1], -r8
   12224:	andeq	r2, r1, r8, lsr #6
   12228:	andeq	r2, r1, r8, ror #5
   1222c:	andeq	r2, r1, r0, ror #5
   12230:	andeq	r2, r1, ip, lsl r3
   12234:	andeq	r2, r1, ip, ror r3
   12238:	andeq	r2, r1, r8, lsl #6
   1223c:	ldrdeq	r2, [r1], -r8
   12240:	andeq	r2, r1, ip, asr #4
   12244:	andeq	r2, r1, ip, asr #4
   12248:	andeq	r2, r1, r4, ror r2
   1224c:	movw	r0, #21536	; 0x5420
   12250:	movt	r0, #1
   12254:	mov	r1, r6
   12258:	bl	13774 <__mempcpy_chk@plt+0x2724>
   1225c:	str	r0, [sp, #68]	; 0x44
   12260:	movw	r0, #21538	; 0x5422
   12264:	movt	r0, #1
   12268:	mov	r1, r6
   1226c:	bl	13774 <__mempcpy_chk@plt+0x2724>
   12270:	str	r0, [sp, #76]	; 0x4c
   12274:	mov	r8, #0
   12278:	tst	sl, #1
   1227c:	bne	122b4 <__mempcpy_chk@plt+0x1264>
   12280:	ldr	r0, [sp, #68]	; 0x44
   12284:	ldrb	r0, [r0]
   12288:	cmp	r0, #0
   1228c:	beq	122b4 <__mempcpy_chk@plt+0x1264>
   12290:	ldr	r1, [sp, #68]	; 0x44
   12294:	add	r1, r1, #1
   12298:	mov	r8, #0
   1229c:	cmp	r8, r4
   122a0:	strbcc	r0, [r7, r8]
   122a4:	ldrb	r0, [r1, r8]
   122a8:	add	r8, r8, #1
   122ac:	cmp	r0, #0
   122b0:	bne	1229c <__mempcpy_chk@plt+0x124c>
   122b4:	ldr	r6, [sp, #76]	; 0x4c
   122b8:	mov	r0, r6
   122bc:	bl	10f6c <strlen@plt>
   122c0:	str	r0, [fp, #-72]	; 0xffffffb8
   122c4:	str	r6, [sp, #92]	; 0x5c
   122c8:	mov	r2, #1
   122cc:	mov	r3, sl
   122d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   122d4:	mov	lr, r9
   122d8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   122dc:	b	123d8 <__mempcpy_chk@plt+0x1388>
   122e0:	mov	r0, #1
   122e4:	b	12328 <__mempcpy_chk@plt+0x12d8>
   122e8:	tst	sl, #1
   122ec:	bne	12328 <__mempcpy_chk@plt+0x12d8>
   122f0:	mov	r2, r0
   122f4:	b	12350 <__mempcpy_chk@plt+0x1300>
   122f8:	mov	r6, #0
   122fc:	mov	r8, #0
   12300:	mov	r2, r0
   12304:	b	123d4 <__mempcpy_chk@plt+0x1384>
   12308:	mov	r0, #1
   1230c:	str	r0, [fp, #-72]	; 0xffffffb8
   12310:	mov	r8, #0
   12314:	mov	r6, #5
   12318:	b	12394 <__mempcpy_chk@plt+0x1344>
   1231c:	mov	r2, #1
   12320:	tst	sl, #1
   12324:	beq	12350 <__mempcpy_chk@plt+0x1300>
   12328:	mov	r1, #1
   1232c:	str	r1, [fp, #-72]	; 0xffffffb8
   12330:	mov	r8, #0
   12334:	mov	r6, #2
   12338:	movw	r1, #21538	; 0x5422
   1233c:	movt	r1, #1
   12340:	str	r1, [sp, #92]	; 0x5c
   12344:	mov	r2, r0
   12348:	mov	r3, #1
   1234c:	b	123d8 <__mempcpy_chk@plt+0x1388>
   12350:	mov	r8, #1
   12354:	mov	r6, #2
   12358:	cmp	r4, #0
   1235c:	movne	r0, #39	; 0x27
   12360:	strbne	r0, [r7]
   12364:	movw	r0, #21538	; 0x5422
   12368:	movt	r0, #1
   1236c:	str	r0, [sp, #92]	; 0x5c
   12370:	mov	r0, #1
   12374:	str	r0, [fp, #-72]	; 0xffffffb8
   12378:	b	123d4 <__mempcpy_chk@plt+0x1384>
   1237c:	mov	r6, #5
   12380:	tst	sl, #1
   12384:	beq	123ac <__mempcpy_chk@plt+0x135c>
   12388:	mov	r0, #1
   1238c:	str	r0, [fp, #-72]	; 0xffffffb8
   12390:	mov	r8, #0
   12394:	movw	r0, #21534	; 0x541e
   12398:	movt	r0, #1
   1239c:	str	r0, [sp, #92]	; 0x5c
   123a0:	mov	r2, #1
   123a4:	mov	r3, #1
   123a8:	b	123d8 <__mempcpy_chk@plt+0x1388>
   123ac:	cmp	r4, #0
   123b0:	movne	r0, #34	; 0x22
   123b4:	strbne	r0, [r7]
   123b8:	mov	r8, #1
   123bc:	movw	r0, #21534	; 0x541e
   123c0:	movt	r0, #1
   123c4:	str	r0, [sp, #92]	; 0x5c
   123c8:	mov	r0, #1
   123cc:	str	r0, [fp, #-72]	; 0xffffffb8
   123d0:	mov	r2, #1
   123d4:	mov	r3, #0
   123d8:	ldr	r0, [fp, #16]
   123dc:	cmp	r0, #0
   123e0:	movwne	r0, #1
   123e4:	and	r0, r0, r3
   123e8:	str	r0, [fp, #-88]	; 0xffffffa8
   123ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   123f0:	cmp	r0, #0
   123f4:	movwne	r0, #1
   123f8:	and	r1, r0, r3
   123fc:	and	r1, r2, r1
   12400:	str	r1, [sp, #48]	; 0x30
   12404:	str	r6, [fp, #-60]	; 0xffffffc4
   12408:	subs	r6, r6, #2
   1240c:	clz	r1, r6
   12410:	lsr	r1, r1, #5
   12414:	and	r1, r1, r3
   12418:	str	r1, [sp, #60]	; 0x3c
   1241c:	str	r6, [fp, #-80]	; 0xffffffb0
   12420:	mov	r1, r6
   12424:	movwne	r1, #1
   12428:	str	r3, [fp, #-76]	; 0xffffffb4
   1242c:	eor	r3, r3, #1
   12430:	str	r3, [sp, #88]	; 0x58
   12434:	orr	r3, r1, r3
   12438:	str	r3, [sp, #64]	; 0x40
   1243c:	and	r1, r1, r2
   12440:	str	r1, [fp, #-68]	; 0xffffffbc
   12444:	and	r0, r0, r1
   12448:	str	r0, [fp, #-64]	; 0xffffffc0
   1244c:	str	r2, [sp, #84]	; 0x54
   12450:	eor	r0, r2, #1
   12454:	str	r0, [sp, #52]	; 0x34
   12458:	mov	r6, #0
   1245c:	cmn	lr, #1
   12460:	beq	12470 <__mempcpy_chk@plt+0x1420>
   12464:	cmp	r6, lr
   12468:	bne	1247c <__mempcpy_chk@plt+0x142c>
   1246c:	b	12fe8 <__mempcpy_chk@plt+0x1f98>
   12470:	ldrb	r0, [ip, r6]
   12474:	cmp	r0, #0
   12478:	beq	12fe8 <__mempcpy_chk@plt+0x1f98>
   1247c:	str	r5, [fp, #-48]	; 0xffffffd0
   12480:	mov	sl, #0
   12484:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12488:	cmp	r0, #0
   1248c:	beq	124c0 <__mempcpy_chk@plt+0x1470>
   12490:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12494:	add	r5, r6, r0
   12498:	cmp	r0, #2
   1249c:	bcc	124b8 <__mempcpy_chk@plt+0x1468>
   124a0:	cmn	lr, #1
   124a4:	bne	124b8 <__mempcpy_chk@plt+0x1468>
   124a8:	mov	r0, ip
   124ac:	bl	10f6c <strlen@plt>
   124b0:	ldr	ip, [fp, #-84]	; 0xffffffac
   124b4:	mov	lr, r0
   124b8:	cmp	r5, lr
   124bc:	bls	124cc <__mempcpy_chk@plt+0x147c>
   124c0:	mov	r0, #0
   124c4:	str	r0, [fp, #-52]	; 0xffffffcc
   124c8:	b	12518 <__mempcpy_chk@plt+0x14c8>
   124cc:	mov	r5, r4
   124d0:	mov	r4, lr
   124d4:	add	r0, ip, r6
   124d8:	ldr	r1, [sp, #92]	; 0x5c
   124dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   124e0:	bl	10e64 <memcmp@plt>
   124e4:	cmp	r0, #0
   124e8:	mov	r1, r0
   124ec:	movwne	r1, #1
   124f0:	ldr	r2, [sp, #88]	; 0x58
   124f4:	orr	r1, r1, r2
   124f8:	tst	r1, #1
   124fc:	beq	130ac <__mempcpy_chk@plt+0x205c>
   12500:	clz	r0, r0
   12504:	lsr	r0, r0, #5
   12508:	str	r0, [fp, #-52]	; 0xffffffcc
   1250c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12510:	mov	lr, r4
   12514:	mov	r4, r5
   12518:	ldrb	r5, [ip, r6]
   1251c:	cmp	r5, #126	; 0x7e
   12520:	bhi	128dc <__mempcpy_chk@plt+0x188c>
   12524:	mov	r9, #1
   12528:	mov	r2, #110	; 0x6e
   1252c:	mov	r0, #97	; 0x61
   12530:	add	r3, pc, #4
   12534:	mov	r1, #0
   12538:	ldr	pc, [r3, r5, lsl #2]
   1253c:	ldrdeq	r2, [r1], -r4
   12540:	ldrdeq	r2, [r1], -ip
   12544:	ldrdeq	r2, [r1], -ip
   12548:	ldrdeq	r2, [r1], -ip
   1254c:	ldrdeq	r2, [r1], -ip
   12550:	ldrdeq	r2, [r1], -ip
   12554:	ldrdeq	r2, [r1], -ip
   12558:	andeq	r2, r1, r0, lsr #19
   1255c:			; <UNDEFINED> instruction: 0x000127b4
   12560:	andeq	r2, r1, ip, lsr #15
   12564:	andeq	r2, r1, r0, asr #15
   12568:	andeq	r2, r1, r4, asr #16
   1256c:	andeq	r2, r1, r4, lsr #15
   12570:			; <UNDEFINED> instruction: 0x000127bc
   12574:	ldrdeq	r2, [r1], -ip
   12578:	ldrdeq	r2, [r1], -ip
   1257c:	ldrdeq	r2, [r1], -ip
   12580:	ldrdeq	r2, [r1], -ip
   12584:	ldrdeq	r2, [r1], -ip
   12588:	ldrdeq	r2, [r1], -ip
   1258c:	ldrdeq	r2, [r1], -ip
   12590:	ldrdeq	r2, [r1], -ip
   12594:	ldrdeq	r2, [r1], -ip
   12598:	ldrdeq	r2, [r1], -ip
   1259c:	ldrdeq	r2, [r1], -ip
   125a0:	ldrdeq	r2, [r1], -ip
   125a4:	ldrdeq	r2, [r1], -ip
   125a8:	ldrdeq	r2, [r1], -ip
   125ac:	ldrdeq	r2, [r1], -ip
   125b0:	ldrdeq	r2, [r1], -ip
   125b4:	ldrdeq	r2, [r1], -ip
   125b8:	ldrdeq	r2, [r1], -ip
   125bc:	andeq	r2, r1, r0, asr r9
   125c0:	andeq	r2, r1, r4, asr r9
   125c4:	andeq	r2, r1, r4, asr r9
   125c8:	andeq	r2, r1, ip, asr #14
   125cc:	andeq	r2, r1, r4, asr r9
   125d0:	andeq	r2, r1, r8, lsr r7
   125d4:	andeq	r2, r1, r4, asr r9
   125d8:	andeq	r2, r1, ip, asr #16
   125dc:	andeq	r2, r1, r4, asr r9
   125e0:	andeq	r2, r1, r4, asr r9
   125e4:	andeq	r2, r1, r4, asr r9
   125e8:	andeq	r2, r1, r8, lsr r7
   125ec:	andeq	r2, r1, r8, lsr r7
   125f0:	andeq	r2, r1, r8, lsr r7
   125f4:	andeq	r2, r1, r8, lsr r7
   125f8:	andeq	r2, r1, r8, lsr r7
   125fc:	andeq	r2, r1, r8, lsr r7
   12600:	andeq	r2, r1, r8, lsr r7
   12604:	andeq	r2, r1, r8, lsr r7
   12608:	andeq	r2, r1, r8, lsr r7
   1260c:	andeq	r2, r1, r8, lsr r7
   12610:	andeq	r2, r1, r8, lsr r7
   12614:	andeq	r2, r1, r8, lsr r7
   12618:	andeq	r2, r1, r8, lsr r7
   1261c:	andeq	r2, r1, r8, lsr r7
   12620:	andeq	r2, r1, r8, lsr r7
   12624:	andeq	r2, r1, r8, lsr r7
   12628:	andeq	r2, r1, r4, asr r9
   1262c:	andeq	r2, r1, r4, asr r9
   12630:	andeq	r2, r1, r4, asr r9
   12634:	andeq	r2, r1, r4, asr r9
   12638:	andeq	r2, r1, r4, lsl r8
   1263c:	ldrdeq	r2, [r1], -ip
   12640:	andeq	r2, r1, r8, lsr r7
   12644:	andeq	r2, r1, r8, lsr r7
   12648:	andeq	r2, r1, r8, lsr r7
   1264c:	andeq	r2, r1, r8, lsr r7
   12650:	andeq	r2, r1, r8, lsr r7
   12654:	andeq	r2, r1, r8, lsr r7
   12658:	andeq	r2, r1, r8, lsr r7
   1265c:	andeq	r2, r1, r8, lsr r7
   12660:	andeq	r2, r1, r8, lsr r7
   12664:	andeq	r2, r1, r8, lsr r7
   12668:	andeq	r2, r1, r8, lsr r7
   1266c:	andeq	r2, r1, r8, lsr r7
   12670:	andeq	r2, r1, r8, lsr r7
   12674:	andeq	r2, r1, r8, lsr r7
   12678:	andeq	r2, r1, r8, lsr r7
   1267c:	andeq	r2, r1, r8, lsr r7
   12680:	andeq	r2, r1, r8, lsr r7
   12684:	andeq	r2, r1, r8, lsr r7
   12688:	andeq	r2, r1, r8, lsr r7
   1268c:	andeq	r2, r1, r8, lsr r7
   12690:	andeq	r2, r1, r8, lsr r7
   12694:	andeq	r2, r1, r8, lsr r7
   12698:	andeq	r2, r1, r8, lsr r7
   1269c:	andeq	r2, r1, r8, lsr r7
   126a0:	andeq	r2, r1, r8, lsr r7
   126a4:	andeq	r2, r1, r8, lsr r7
   126a8:	andeq	r2, r1, r4, asr r9
   126ac:	andeq	r2, r1, r0, lsl #15
   126b0:	andeq	r2, r1, r8, lsr r7
   126b4:	andeq	r2, r1, r4, asr r9
   126b8:	andeq	r2, r1, r8, lsr r7
   126bc:	andeq	r2, r1, r4, asr r9
   126c0:	andeq	r2, r1, r8, lsr r7
   126c4:	andeq	r2, r1, r8, lsr r7
   126c8:	andeq	r2, r1, r8, lsr r7
   126cc:	andeq	r2, r1, r8, lsr r7
   126d0:	andeq	r2, r1, r8, lsr r7
   126d4:	andeq	r2, r1, r8, lsr r7
   126d8:	andeq	r2, r1, r8, lsr r7
   126dc:	andeq	r2, r1, r8, lsr r7
   126e0:	andeq	r2, r1, r8, lsr r7
   126e4:	andeq	r2, r1, r8, lsr r7
   126e8:	andeq	r2, r1, r8, lsr r7
   126ec:	andeq	r2, r1, r8, lsr r7
   126f0:	andeq	r2, r1, r8, lsr r7
   126f4:	andeq	r2, r1, r8, lsr r7
   126f8:	andeq	r2, r1, r8, lsr r7
   126fc:	andeq	r2, r1, r8, lsr r7
   12700:	andeq	r2, r1, r8, lsr r7
   12704:	andeq	r2, r1, r8, lsr r7
   12708:	andeq	r2, r1, r8, lsr r7
   1270c:	andeq	r2, r1, r8, lsr r7
   12710:	andeq	r2, r1, r8, lsr r7
   12714:	andeq	r2, r1, r8, lsr r7
   12718:	andeq	r2, r1, r8, lsr r7
   1271c:	andeq	r2, r1, r8, lsr r7
   12720:	andeq	r2, r1, r8, lsr r7
   12724:	andeq	r2, r1, r8, lsr r7
   12728:	andeq	r2, r1, r0, ror #14
   1272c:	andeq	r2, r1, r4, asr r9
   12730:	andeq	r2, r1, r0, ror #14
   12734:	andeq	r2, r1, ip, asr #14
   12738:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1273c:	cmp	r0, #0
   12740:	beq	129b4 <__mempcpy_chk@plt+0x1964>
   12744:	ldr	r0, [fp, #16]
   12748:	b	129b8 <__mempcpy_chk@plt+0x1968>
   1274c:	mov	r9, #0
   12750:	cmp	r6, #0
   12754:	beq	12950 <__mempcpy_chk@plt+0x1900>
   12758:	mov	sl, #0
   1275c:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12760:	mov	r9, #0
   12764:	cmn	lr, #1
   12768:	beq	12934 <__mempcpy_chk@plt+0x18e4>
   1276c:	cmp	r6, #0
   12770:	bne	12758 <__mempcpy_chk@plt+0x1708>
   12774:	cmp	lr, #1
   12778:	beq	12950 <__mempcpy_chk@plt+0x1900>
   1277c:	b	12758 <__mempcpy_chk@plt+0x1708>
   12780:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12784:	cmp	r0, #2
   12788:	bne	1297c <__mempcpy_chk@plt+0x192c>
   1278c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12790:	tst	r0, #1
   12794:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   12798:	mov	sl, #0
   1279c:	mov	r0, #92	; 0x5c
   127a0:	b	12990 <__mempcpy_chk@plt+0x1940>
   127a4:	mov	r0, #102	; 0x66
   127a8:	b	129a0 <__mempcpy_chk@plt+0x1950>
   127ac:	mov	r2, #116	; 0x74
   127b0:	b	127c0 <__mempcpy_chk@plt+0x1770>
   127b4:	mov	r0, #98	; 0x62
   127b8:	b	129a0 <__mempcpy_chk@plt+0x1950>
   127bc:	mov	r2, #114	; 0x72
   127c0:	ldr	r0, [sp, #64]	; 0x40
   127c4:	tst	r0, #1
   127c8:	mov	r0, r2
   127cc:	bne	129a0 <__mempcpy_chk@plt+0x1950>
   127d0:	b	130c4 <__mempcpy_chk@plt+0x2074>
   127d4:	ldr	r0, [sp, #84]	; 0x54
   127d8:	tst	r0, #1
   127dc:	beq	12a90 <__mempcpy_chk@plt+0x1a40>
   127e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   127e4:	tst	r0, #1
   127e8:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   127ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   127f0:	cmp	r0, #2
   127f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   127f8:	movwne	r0, #1
   127fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12800:	orr	r0, r0, r2
   12804:	tst	r0, #1
   12808:	beq	12e84 <__mempcpy_chk@plt+0x1e34>
   1280c:	mov	r0, r8
   12810:	b	12eb8 <__mempcpy_chk@plt+0x1e68>
   12814:	mov	sl, #0
   12818:	mov	r5, #63	; 0x3f
   1281c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12820:	cmp	r0, #5
   12824:	beq	12c44 <__mempcpy_chk@plt+0x1bf4>
   12828:	cmp	r0, #2
   1282c:	bne	12ce4 <__mempcpy_chk@plt+0x1c94>
   12830:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12834:	tst	r0, #1
   12838:	mov	r9, #0
   1283c:	beq	12738 <__mempcpy_chk@plt+0x16e8>
   12840:	b	130c4 <__mempcpy_chk@plt+0x2074>
   12844:	mov	r0, #118	; 0x76
   12848:	b	129a0 <__mempcpy_chk@plt+0x1950>
   1284c:	mov	r5, #39	; 0x27
   12850:	mov	r0, #1
   12854:	str	r0, [sp, #56]	; 0x38
   12858:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1285c:	cmp	r0, #2
   12860:	bne	12ab0 <__mempcpy_chk@plt+0x1a60>
   12864:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12868:	tst	r0, #1
   1286c:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   12870:	ldr	r2, [sp, #72]	; 0x48
   12874:	cmp	r2, #0
   12878:	mov	r0, r2
   1287c:	movwne	r0, #1
   12880:	clz	r1, r4
   12884:	lsr	r1, r1, #5
   12888:	orrs	r0, r0, r1
   1288c:	moveq	r2, r4
   12890:	str	r2, [sp, #72]	; 0x48
   12894:	moveq	r4, r0
   12898:	cmp	r8, r4
   1289c:	movcc	r0, #39	; 0x27
   128a0:	strbcc	r0, [r7, r8]
   128a4:	add	r0, r8, #1
   128a8:	cmp	r0, r4
   128ac:	movcc	r1, #92	; 0x5c
   128b0:	strbcc	r1, [r7, r0]
   128b4:	add	r0, r8, #2
   128b8:	cmp	r0, r4
   128bc:	movcc	r1, #39	; 0x27
   128c0:	strbcc	r1, [r7, r0]
   128c4:	add	r8, r8, #3
   128c8:	mov	r0, #0
   128cc:	str	r0, [fp, #-56]	; 0xffffffc8
   128d0:	mov	sl, #0
   128d4:	mov	r9, #1
   128d8:	b	12738 <__mempcpy_chk@plt+0x16e8>
   128dc:	str	r4, [sp, #24]
   128e0:	ldr	r0, [sp, #40]	; 0x28
   128e4:	cmp	r0, #1
   128e8:	bne	12ab8 <__mempcpy_chk@plt+0x1a68>
   128ec:	str	lr, [sp, #28]
   128f0:	bl	10f54 <__ctype_b_loc@plt>
   128f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128f8:	ldr	r0, [r0]
   128fc:	add	r0, r0, r5, lsl #1
   12900:	ldrb	r0, [r0, #1]
   12904:	ubfx	r9, r0, #6, #1
   12908:	mov	r1, #1
   1290c:	ldr	r4, [sp, #24]
   12910:	ldr	r0, [sp, #52]	; 0x34
   12914:	orr	r0, r9, r0
   12918:	mov	r2, r1
   1291c:	cmp	r1, #1
   12920:	bhi	12cec <__mempcpy_chk@plt+0x1c9c>
   12924:	tst	r0, #1
   12928:	beq	12cec <__mempcpy_chk@plt+0x1c9c>
   1292c:	ldr	lr, [sp, #28]
   12930:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12934:	cmp	r6, #0
   12938:	ldrbeq	r0, [ip, #1]
   1293c:	cmpeq	r0, #0
   12940:	beq	12950 <__mempcpy_chk@plt+0x1900>
   12944:	mvn	lr, #0
   12948:	mov	sl, #0
   1294c:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12950:	mov	r1, #1
   12954:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12958:	cmp	r0, #2
   1295c:	bne	12974 <__mempcpy_chk@plt+0x1924>
   12960:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12964:	tst	r0, #1
   12968:	mov	r9, r1
   1296c:	beq	12738 <__mempcpy_chk@plt+0x16e8>
   12970:	b	130c4 <__mempcpy_chk@plt+0x2074>
   12974:	mov	r9, r1
   12978:	b	12738 <__mempcpy_chk@plt+0x16e8>
   1297c:	mov	sl, #0
   12980:	mov	r0, #92	; 0x5c
   12984:	ldr	r1, [sp, #48]	; 0x30
   12988:	cmp	r1, #0
   1298c:	beq	129a0 <__mempcpy_chk@plt+0x1950>
   12990:	mov	r9, #0
   12994:	cmp	sl, #0
   12998:	beq	12f50 <__mempcpy_chk@plt+0x1f00>
   1299c:	b	12f8c <__mempcpy_chk@plt+0x1f3c>
   129a0:	mov	r9, #0
   129a4:	ldr	r1, [sp, #84]	; 0x54
   129a8:	tst	r1, #1
   129ac:	mov	sl, #0
   129b0:	bne	129f0 <__mempcpy_chk@plt+0x19a0>
   129b4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   129b8:	cmp	r0, #0
   129bc:	mov	r0, r5
   129c0:	beq	129e4 <__mempcpy_chk@plt+0x1994>
   129c4:	ubfx	r0, r5, #5, #3
   129c8:	ldr	r1, [fp, #16]
   129cc:	ldr	r0, [r1, r0, lsl #2]
   129d0:	and	r1, r5, #31
   129d4:	mov	r2, #1
   129d8:	tst	r0, r2, lsl r1
   129dc:	mov	r0, r5
   129e0:	bne	129f0 <__mempcpy_chk@plt+0x19a0>
   129e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   129e8:	cmp	r1, #0
   129ec:	beq	12f48 <__mempcpy_chk@plt+0x1ef8>
   129f0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   129f4:	tst	r1, #1
   129f8:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   129fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12a00:	cmp	r1, #2
   12a04:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12a08:	movwne	r1, #1
   12a0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12a10:	orr	r1, r1, r2
   12a14:	tst	r1, #1
   12a18:	beq	12a24 <__mempcpy_chk@plt+0x19d4>
   12a1c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a20:	b	12a60 <__mempcpy_chk@plt+0x1a10>
   12a24:	cmp	r8, r4
   12a28:	movcc	r1, #39	; 0x27
   12a2c:	strbcc	r1, [r7, r8]
   12a30:	add	r1, r8, #1
   12a34:	cmp	r1, r4
   12a38:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a3c:	movcc	r2, #36	; 0x24
   12a40:	strbcc	r2, [r7, r1]
   12a44:	add	r1, r8, #2
   12a48:	cmp	r1, r4
   12a4c:	movcc	r2, #39	; 0x27
   12a50:	strbcc	r2, [r7, r1]
   12a54:	add	r8, r8, #3
   12a58:	mov	r1, #1
   12a5c:	str	r1, [fp, #-56]	; 0xffffffc8
   12a60:	cmp	r8, r4
   12a64:	movcc	r1, #92	; 0x5c
   12a68:	strbcc	r1, [r7, r8]
   12a6c:	add	r8, r8, #1
   12a70:	cmp	r8, r4
   12a74:	strbcc	r0, [r7, r8]
   12a78:	and	r5, r5, r9
   12a7c:	add	r8, r8, #1
   12a80:	add	r6, r6, #1
   12a84:	cmn	lr, #1
   12a88:	bne	12464 <__mempcpy_chk@plt+0x1414>
   12a8c:	b	12470 <__mempcpy_chk@plt+0x1420>
   12a90:	mov	r9, #0
   12a94:	ldr	r0, [sp, #36]	; 0x24
   12a98:	cmp	r0, #0
   12a9c:	mov	sl, #0
   12aa0:	mov	r5, #0
   12aa4:	beq	129b4 <__mempcpy_chk@plt+0x1964>
   12aa8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12aac:	b	12a80 <__mempcpy_chk@plt+0x1a30>
   12ab0:	mov	r9, #1
   12ab4:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12ab8:	mov	r0, #0
   12abc:	str	r0, [fp, #-36]	; 0xffffffdc
   12ac0:	str	r0, [fp, #-40]	; 0xffffffd8
   12ac4:	cmn	lr, #1
   12ac8:	bne	12adc <__mempcpy_chk@plt+0x1a8c>
   12acc:	mov	r0, ip
   12ad0:	bl	10f6c <strlen@plt>
   12ad4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ad8:	mov	lr, r0
   12adc:	add	r0, ip, r6
   12ae0:	str	r0, [sp, #20]
   12ae4:	mov	r9, #1
   12ae8:	mov	r7, #0
   12aec:	sub	r4, fp, #40	; 0x28
   12af0:	str	lr, [sp, #28]
   12af4:	str	r7, [sp, #44]	; 0x2c
   12af8:	add	r7, r7, r6
   12afc:	add	r1, ip, r7
   12b00:	sub	r2, lr, r7
   12b04:	sub	r0, fp, #44	; 0x2c
   12b08:	mov	r3, r4
   12b0c:	bl	14b70 <__mempcpy_chk@plt+0x3b20>
   12b10:	cmp	r0, #0
   12b14:	beq	12fd4 <__mempcpy_chk@plt+0x1f84>
   12b18:	cmn	r0, #1
   12b1c:	beq	12f94 <__mempcpy_chk@plt+0x1f44>
   12b20:	cmn	r0, #2
   12b24:	ldr	lr, [sp, #28]
   12b28:	beq	12f9c <__mempcpy_chk@plt+0x1f4c>
   12b2c:	cmp	r0, #2
   12b30:	mov	r1, #0
   12b34:	movwcc	r1, #1
   12b38:	ldr	r2, [sp, #60]	; 0x3c
   12b3c:	eor	r2, r2, #1
   12b40:	orrs	r1, r2, r1
   12b44:	ldr	r4, [sp, #24]
   12b48:	bne	12c08 <__mempcpy_chk@plt+0x1bb8>
   12b4c:	ldr	r1, [sp, #44]	; 0x2c
   12b50:	ldr	r2, [sp, #20]
   12b54:	add	r1, r2, r1
   12b58:	mov	r2, #1
   12b5c:	ldrb	r3, [r1, r2]
   12b60:	sub	r3, r3, #91	; 0x5b
   12b64:	cmp	r3, #33	; 0x21
   12b68:	bhi	12bfc <__mempcpy_chk@plt+0x1bac>
   12b6c:	add	r7, pc, #0
   12b70:	ldr	pc, [r7, r3, lsl #2]
   12b74:	strheq	r3, [r1], -ip
   12b78:	strheq	r3, [r1], -ip
   12b7c:	strdeq	r2, [r1], -ip
   12b80:	strheq	r3, [r1], -ip
   12b84:	strdeq	r2, [r1], -ip
   12b88:	strheq	r3, [r1], -ip
   12b8c:	strdeq	r2, [r1], -ip
   12b90:	strdeq	r2, [r1], -ip
   12b94:	strdeq	r2, [r1], -ip
   12b98:	strdeq	r2, [r1], -ip
   12b9c:	strdeq	r2, [r1], -ip
   12ba0:	strdeq	r2, [r1], -ip
   12ba4:	strdeq	r2, [r1], -ip
   12ba8:	strdeq	r2, [r1], -ip
   12bac:	strdeq	r2, [r1], -ip
   12bb0:	strdeq	r2, [r1], -ip
   12bb4:	strdeq	r2, [r1], -ip
   12bb8:	strdeq	r2, [r1], -ip
   12bbc:	strdeq	r2, [r1], -ip
   12bc0:	strdeq	r2, [r1], -ip
   12bc4:	strdeq	r2, [r1], -ip
   12bc8:	strdeq	r2, [r1], -ip
   12bcc:	strdeq	r2, [r1], -ip
   12bd0:	strdeq	r2, [r1], -ip
   12bd4:	strdeq	r2, [r1], -ip
   12bd8:	strdeq	r2, [r1], -ip
   12bdc:	strdeq	r2, [r1], -ip
   12be0:	strdeq	r2, [r1], -ip
   12be4:	strdeq	r2, [r1], -ip
   12be8:	strdeq	r2, [r1], -ip
   12bec:	strdeq	r2, [r1], -ip
   12bf0:	strdeq	r2, [r1], -ip
   12bf4:	strdeq	r2, [r1], -ip
   12bf8:	strheq	r3, [r1], -ip
   12bfc:	add	r2, r2, #1
   12c00:	cmp	r2, r0
   12c04:	bcc	12b5c <__mempcpy_chk@plt+0x1b0c>
   12c08:	ldr	r7, [sp, #44]	; 0x2c
   12c0c:	add	r7, r0, r7
   12c10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c14:	bl	10ea0 <iswprint@plt>
   12c18:	cmp	r0, #0
   12c1c:	movwne	r0, #1
   12c20:	and	r9, r9, r0
   12c24:	sub	r4, fp, #40	; 0x28
   12c28:	mov	r0, r4
   12c2c:	bl	10e4c <mbsinit@plt>
   12c30:	ldr	lr, [sp, #28]
   12c34:	cmp	r0, #0
   12c38:	ldr	ip, [fp, #-84]	; 0xffffffac
   12c3c:	beq	12af4 <__mempcpy_chk@plt+0x1aa4>
   12c40:	b	12fdc <__mempcpy_chk@plt+0x1f8c>
   12c44:	ldr	r0, [sp, #32]
   12c48:	cmp	r0, #0
   12c4c:	beq	12ce4 <__mempcpy_chk@plt+0x1c94>
   12c50:	add	r0, r6, #2
   12c54:	cmp	r0, lr
   12c58:	bcs	12ce4 <__mempcpy_chk@plt+0x1c94>
   12c5c:	add	r1, ip, r6
   12c60:	ldrb	r1, [r1, #1]
   12c64:	cmp	r1, #63	; 0x3f
   12c68:	bne	12ce4 <__mempcpy_chk@plt+0x1c94>
   12c6c:	ldrb	r9, [ip, r0]
   12c70:	sub	r2, r9, #33	; 0x21
   12c74:	cmp	r2, #29
   12c78:	bhi	12ce4 <__mempcpy_chk@plt+0x1c94>
   12c7c:	mov	r3, #1
   12c80:	movw	r1, #20929	; 0x51c1
   12c84:	movt	r1, #14336	; 0x3800
   12c88:	tst	r1, r3, lsl r2
   12c8c:	beq	12ce4 <__mempcpy_chk@plt+0x1c94>
   12c90:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12c94:	tst	r1, #1
   12c98:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   12c9c:	cmp	r8, r4
   12ca0:	movcc	r1, #63	; 0x3f
   12ca4:	strbcc	r1, [r7, r8]
   12ca8:	add	r2, r8, #1
   12cac:	cmp	r2, r4
   12cb0:	movcc	r1, #34	; 0x22
   12cb4:	strbcc	r1, [r7, r2]
   12cb8:	add	r2, r8, #2
   12cbc:	cmp	r2, r4
   12cc0:	movcc	r1, #34	; 0x22
   12cc4:	strbcc	r1, [r7, r2]
   12cc8:	add	r2, r8, #3
   12ccc:	cmp	r2, r4
   12cd0:	movcc	r1, #63	; 0x3f
   12cd4:	strbcc	r1, [r7, r2]
   12cd8:	add	r8, r8, #4
   12cdc:	mov	r6, r0
   12ce0:	mov	r5, r9
   12ce4:	mov	r9, #0
   12ce8:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12cec:	add	r1, r2, r6
   12cf0:	str	r1, [sp, #44]	; 0x2c
   12cf4:	add	r1, r6, #1
   12cf8:	mov	r3, #0
   12cfc:	ldr	lr, [sp, #28]
   12d00:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12d04:	tst	r0, #1
   12d08:	bne	12dfc <__mempcpy_chk@plt+0x1dac>
   12d0c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12d10:	tst	r2, #1
   12d14:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   12d18:	cmp	r6, #2
   12d1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d20:	movwne	r3, #1
   12d24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d28:	orr	r3, r3, r2
   12d2c:	tst	r3, #1
   12d30:	bne	12d6c <__mempcpy_chk@plt+0x1d1c>
   12d34:	cmp	r8, r4
   12d38:	movcc	r2, #39	; 0x27
   12d3c:	strbcc	r2, [r7, r8]
   12d40:	add	r3, r8, #1
   12d44:	cmp	r3, r4
   12d48:	movcc	r2, #36	; 0x24
   12d4c:	strbcc	r2, [r7, r3]
   12d50:	add	r3, r8, #2
   12d54:	cmp	r3, r4
   12d58:	movcc	r2, #39	; 0x27
   12d5c:	strbcc	r2, [r7, r3]
   12d60:	add	r8, r8, #3
   12d64:	mov	r2, #1
   12d68:	str	r2, [fp, #-56]	; 0xffffffc8
   12d6c:	cmp	r8, r4
   12d70:	movcc	r2, #92	; 0x5c
   12d74:	strbcc	r2, [r7, r8]
   12d78:	add	r3, r8, #1
   12d7c:	cmp	r3, r4
   12d80:	bcs	12da0 <__mempcpy_chk@plt+0x1d50>
   12d84:	and	r7, r5, #192	; 0xc0
   12d88:	mov	r2, #48	; 0x30
   12d8c:	orr	r7, r2, r7, lsr #6
   12d90:	ldr	r6, [sp, #80]	; 0x50
   12d94:	strb	r7, [r6, r3]
   12d98:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12d9c:	ldr	r7, [sp, #80]	; 0x50
   12da0:	add	r3, r8, #2
   12da4:	cmp	r3, r4
   12da8:	bcs	12dc8 <__mempcpy_chk@plt+0x1d78>
   12dac:	lsr	r7, r5, #3
   12db0:	mov	r2, #6
   12db4:	bfi	r7, r2, #3, #29
   12db8:	ldr	r6, [sp, #80]	; 0x50
   12dbc:	strb	r7, [r6, r3]
   12dc0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12dc4:	ldr	r7, [sp, #80]	; 0x50
   12dc8:	mov	r2, #6
   12dcc:	bfi	r5, r2, #3, #29
   12dd0:	add	r8, r8, #3
   12dd4:	mov	r3, #1
   12dd8:	b	12e20 <__mempcpy_chk@plt+0x1dd0>
   12ddc:	ldr	r7, [sp, #80]	; 0x50
   12de0:	cmp	r8, r4
   12de4:	strbcc	r5, [r7, r8]
   12de8:	ldrb	r5, [ip, r1]
   12dec:	add	r1, r1, #1
   12df0:	add	r8, r8, #1
   12df4:	tst	r0, #1
   12df8:	beq	12d0c <__mempcpy_chk@plt+0x1cbc>
   12dfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12e00:	tst	r2, #1
   12e04:	beq	12e18 <__mempcpy_chk@plt+0x1dc8>
   12e08:	cmp	r8, r4
   12e0c:	movcc	r2, #92	; 0x5c
   12e10:	strbcc	r2, [r7, r8]
   12e14:	add	r8, r8, #1
   12e18:	mov	r2, #0
   12e1c:	str	r2, [fp, #-52]	; 0xffffffcc
   12e20:	and	sl, r3, #1
   12e24:	ldr	r2, [sp, #44]	; 0x2c
   12e28:	cmp	r2, r1
   12e2c:	bls	12f38 <__mempcpy_chk@plt+0x1ee8>
   12e30:	cmp	sl, #0
   12e34:	movwne	sl, #1
   12e38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12e3c:	mvn	r7, r2
   12e40:	orr	r7, r7, sl
   12e44:	tst	r7, #1
   12e48:	bne	12ddc <__mempcpy_chk@plt+0x1d8c>
   12e4c:	cmp	r8, r4
   12e50:	ldrcc	r7, [sp, #80]	; 0x50
   12e54:	movcc	r2, #39	; 0x27
   12e58:	strbcc	r2, [r7, r8]
   12e5c:	add	r7, r8, #1
   12e60:	cmp	r7, r4
   12e64:	ldrcc	r6, [sp, #80]	; 0x50
   12e68:	movcc	r2, #39	; 0x27
   12e6c:	strbcc	r2, [r6, r7]
   12e70:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   12e74:	add	r8, r8, #2
   12e78:	mov	r2, #0
   12e7c:	str	r2, [fp, #-56]	; 0xffffffc8
   12e80:	b	12ddc <__mempcpy_chk@plt+0x1d8c>
   12e84:	cmp	r8, r4
   12e88:	movcc	r0, #39	; 0x27
   12e8c:	strbcc	r0, [r7, r8]
   12e90:	add	r0, r8, #1
   12e94:	cmp	r0, r4
   12e98:	movcc	r1, #36	; 0x24
   12e9c:	strbcc	r1, [r7, r0]
   12ea0:	add	r0, r8, #2
   12ea4:	cmp	r0, r4
   12ea8:	movcc	r1, #39	; 0x27
   12eac:	strbcc	r1, [r7, r0]
   12eb0:	add	r0, r8, #3
   12eb4:	mov	r2, #1
   12eb8:	cmp	r0, r4
   12ebc:	movcc	r1, #92	; 0x5c
   12ec0:	strbcc	r1, [r7, r0]
   12ec4:	str	r2, [fp, #-56]	; 0xffffffc8
   12ec8:	add	r8, r0, #1
   12ecc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12ed0:	cmp	r1, #2
   12ed4:	beq	12f28 <__mempcpy_chk@plt+0x1ed8>
   12ed8:	add	r1, r6, #1
   12edc:	mov	r9, #0
   12ee0:	mov	sl, #1
   12ee4:	mov	r5, #48	; 0x30
   12ee8:	cmp	r1, lr
   12eec:	bcs	12738 <__mempcpy_chk@plt+0x16e8>
   12ef0:	ldrb	r1, [ip, r1]
   12ef4:	sub	r1, r1, #48	; 0x30
   12ef8:	uxtb	r1, r1
   12efc:	cmp	r1, #9
   12f00:	bhi	12738 <__mempcpy_chk@plt+0x16e8>
   12f04:	cmp	r8, r4
   12f08:	movcc	r1, #48	; 0x30
   12f0c:	strbcc	r1, [r7, r8]
   12f10:	add	r1, r0, #2
   12f14:	cmp	r1, r4
   12f18:	movcc	r2, #48	; 0x30
   12f1c:	strbcc	r2, [r7, r1]
   12f20:	add	r8, r0, #3
   12f24:	b	12738 <__mempcpy_chk@plt+0x16e8>
   12f28:	mov	r0, #48	; 0x30
   12f2c:	mov	sl, #1
   12f30:	mov	r9, #0
   12f34:	b	129e4 <__mempcpy_chk@plt+0x1994>
   12f38:	sub	r6, r1, #1
   12f3c:	cmp	sl, #0
   12f40:	movwne	sl, #1
   12f44:	mov	r0, r5
   12f48:	cmp	sl, #0
   12f4c:	bne	12f8c <__mempcpy_chk@plt+0x1f3c>
   12f50:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12f54:	tst	r1, #1
   12f58:	beq	12f8c <__mempcpy_chk@plt+0x1f3c>
   12f5c:	cmp	r8, r4
   12f60:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12f64:	movcc	r1, #39	; 0x27
   12f68:	strbcc	r1, [r7, r8]
   12f6c:	add	r1, r8, #1
   12f70:	cmp	r1, r4
   12f74:	movcc	r2, #39	; 0x27
   12f78:	strbcc	r2, [r7, r1]
   12f7c:	add	r8, r8, #2
   12f80:	mov	r1, #0
   12f84:	str	r1, [fp, #-56]	; 0xffffffc8
   12f88:	b	12a70 <__mempcpy_chk@plt+0x1a20>
   12f8c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12f90:	b	12a70 <__mempcpy_chk@plt+0x1a20>
   12f94:	mov	r9, #0
   12f98:	b	12fd4 <__mempcpy_chk@plt+0x1f84>
   12f9c:	mov	r9, #0
   12fa0:	cmp	r7, lr
   12fa4:	bcs	12fd4 <__mempcpy_chk@plt+0x1f84>
   12fa8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fac:	ldr	r7, [sp, #44]	; 0x2c
   12fb0:	ldr	r0, [sp, #20]
   12fb4:	ldrb	r0, [r0, r7]
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fdc <__mempcpy_chk@plt+0x1f8c>
   12fc0:	add	r7, r7, #1
   12fc4:	add	r0, r6, r7
   12fc8:	cmp	r0, lr
   12fcc:	bcc	12fb0 <__mempcpy_chk@plt+0x1f60>
   12fd0:	b	12fdc <__mempcpy_chk@plt+0x1f8c>
   12fd4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fd8:	ldr	r7, [sp, #44]	; 0x2c
   12fdc:	mov	r1, r7
   12fe0:	ldr	r7, [sp, #80]	; 0x50
   12fe4:	b	1290c <__mempcpy_chk@plt+0x18bc>
   12fe8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12fec:	eor	r0, r1, #2
   12ff0:	orr	r0, r0, r8
   12ff4:	clz	r0, r0
   12ff8:	lsr	r0, r0, #5
   12ffc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13000:	tst	r2, r0
   13004:	bne	130c4 <__mempcpy_chk@plt+0x2074>
   13008:	cmp	r1, #2
   1300c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13010:	movwne	r0, #1
   13014:	orr	r0, r2, r0
   13018:	tst	r0, #1
   1301c:	ldreq	r0, [sp, #56]	; 0x38
   13020:	eoreq	r0, r0, #1
   13024:	tsteq	r0, #1
   13028:	bne	1305c <__mempcpy_chk@plt+0x200c>
   1302c:	mov	r9, lr
   13030:	tst	r5, #1
   13034:	bne	1312c <__mempcpy_chk@plt+0x20dc>
   13038:	ldr	r0, [sp, #72]	; 0x48
   1303c:	cmp	r0, #0
   13040:	beq	1305c <__mempcpy_chk@plt+0x200c>
   13044:	mov	r5, #0
   13048:	cmp	r4, #0
   1304c:	ldr	r0, [sp, #84]	; 0x54
   13050:	mov	sl, r2
   13054:	ldr	r6, [sp, #72]	; 0x48
   13058:	beq	121f4 <__mempcpy_chk@plt+0x11a4>
   1305c:	ldr	r1, [sp, #92]	; 0x5c
   13060:	clz	r0, r1
   13064:	lsr	r0, r0, #5
   13068:	orr	r0, r0, r2
   1306c:	tst	r0, #1
   13070:	bne	1309c <__mempcpy_chk@plt+0x204c>
   13074:	ldrb	r0, [r1]
   13078:	cmp	r0, #0
   1307c:	beq	1309c <__mempcpy_chk@plt+0x204c>
   13080:	add	r1, r1, #1
   13084:	cmp	r8, r4
   13088:	strbcc	r0, [r7, r8]
   1308c:	add	r8, r8, #1
   13090:	ldrb	r0, [r1], #1
   13094:	cmp	r0, #0
   13098:	bne	13084 <__mempcpy_chk@plt+0x2034>
   1309c:	cmp	r8, r4
   130a0:	movcc	r0, #0
   130a4:	strbcc	r0, [r7, r8]
   130a8:	b	13120 <__mempcpy_chk@plt+0x20d0>
   130ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   130b0:	mov	lr, r4
   130b4:	mov	r4, r5
   130b8:	b	130c4 <__mempcpy_chk@plt+0x2074>
   130bc:	ldr	r7, [sp, #80]	; 0x50
   130c0:	ldr	ip, [fp, #-84]	; 0xffffffac
   130c4:	mov	r0, #0
   130c8:	ldr	r1, [fp, #12]
   130cc:	bic	r1, r1, #2
   130d0:	ldr	r2, [sp, #84]	; 0x54
   130d4:	tst	r2, #1
   130d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   130dc:	mov	r2, r3
   130e0:	movwne	r2, #4
   130e4:	cmp	r3, #2
   130e8:	movne	r2, r3
   130ec:	str	r2, [sp]
   130f0:	str	r1, [sp, #4]
   130f4:	str	r0, [sp, #8]
   130f8:	ldr	r0, [sp, #68]	; 0x44
   130fc:	str	r0, [sp, #12]
   13100:	ldr	r0, [sp, #76]	; 0x4c
   13104:	str	r0, [sp, #16]
   13108:	mov	r0, r7
   1310c:	mov	r1, r4
   13110:	mov	r2, ip
   13114:	mov	r3, lr
   13118:	bl	1216c <__mempcpy_chk@plt+0x111c>
   1311c:	mov	r8, r0
   13120:	mov	r0, r8
   13124:	sub	sp, fp, #28
   13128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1312c:	mov	r0, #5
   13130:	str	r0, [sp]
   13134:	ldr	r0, [fp, #12]
   13138:	str	r0, [sp, #4]
   1313c:	ldr	r0, [fp, #16]
   13140:	str	r0, [sp, #8]
   13144:	ldr	r0, [sp, #68]	; 0x44
   13148:	str	r0, [sp, #12]
   1314c:	ldr	r0, [sp, #76]	; 0x4c
   13150:	str	r0, [sp, #16]
   13154:	mov	r0, r7
   13158:	ldr	r1, [sp, #72]	; 0x48
   1315c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13160:	mov	r3, r9
   13164:	b	13118 <__mempcpy_chk@plt+0x20c8>
   13168:	bl	11038 <abort@plt>
   1316c:	mov	r3, r2
   13170:	mov	r2, #0
   13174:	b	13178 <__mempcpy_chk@plt+0x2128>
   13178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1317c:	add	fp, sp, #28
   13180:	sub	sp, sp, #36	; 0x24
   13184:	mov	r4, r2
   13188:	str	r2, [sp, #24]
   1318c:	mov	r5, r1
   13190:	mov	r6, r0
   13194:	str	r0, [sp, #20]
   13198:	movw	r8, #24928	; 0x6160
   1319c:	movt	r8, #2
   131a0:	cmp	r3, #0
   131a4:	movne	r8, r3
   131a8:	bl	10f78 <__errno_location@plt>
   131ac:	str	r0, [sp, #28]
   131b0:	ldm	r8, {r3, r9}
   131b4:	ldr	r1, [r8, #40]	; 0x28
   131b8:	ldr	r2, [r8, #44]	; 0x2c
   131bc:	ldr	r7, [r0]
   131c0:	str	r7, [sp, #32]
   131c4:	add	sl, r8, #8
   131c8:	cmp	r4, #0
   131cc:	orreq	r9, r9, #1
   131d0:	stm	sp, {r3, r9, sl}
   131d4:	str	r1, [sp, #12]
   131d8:	str	r2, [sp, #16]
   131dc:	mov	r0, #0
   131e0:	mov	r1, #0
   131e4:	mov	r2, r6
   131e8:	mov	r3, r5
   131ec:	mov	r7, r5
   131f0:	bl	1216c <__mempcpy_chk@plt+0x111c>
   131f4:	mov	r5, r0
   131f8:	add	r4, r0, #1
   131fc:	mov	r0, r4
   13200:	bl	1407c <__mempcpy_chk@plt+0x302c>
   13204:	mov	r6, r0
   13208:	ldr	r0, [r8]
   1320c:	ldr	r1, [r8, #40]	; 0x28
   13210:	ldr	r2, [r8, #44]	; 0x2c
   13214:	stm	sp, {r0, r9, sl}
   13218:	str	r1, [sp, #12]
   1321c:	str	r2, [sp, #16]
   13220:	mov	r0, r6
   13224:	mov	r1, r4
   13228:	ldr	r2, [sp, #20]
   1322c:	mov	r3, r7
   13230:	bl	1216c <__mempcpy_chk@plt+0x111c>
   13234:	ldr	r0, [sp, #24]
   13238:	ldr	r1, [sp, #32]
   1323c:	ldr	r2, [sp, #28]
   13240:	str	r1, [r2]
   13244:	cmp	r0, #0
   13248:	strne	r5, [r0]
   1324c:	mov	r0, r6
   13250:	sub	sp, fp, #28
   13254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13258:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1325c:	add	fp, sp, #24
   13260:	movw	r8, #24816	; 0x60f0
   13264:	movt	r8, #2
   13268:	ldr	r4, [r8]
   1326c:	movw	r5, #24820	; 0x60f4
   13270:	movt	r5, #2
   13274:	ldr	r0, [r5]
   13278:	cmp	r0, #2
   1327c:	blt	132a8 <__mempcpy_chk@plt+0x2258>
   13280:	add	r7, r4, #12
   13284:	mov	r6, #0
   13288:	ldr	r0, [r7, r6, lsl #3]
   1328c:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   13290:	add	r0, r6, #1
   13294:	ldr	r1, [r5]
   13298:	add	r2, r6, #2
   1329c:	cmp	r2, r1
   132a0:	mov	r6, r0
   132a4:	blt	13288 <__mempcpy_chk@plt+0x2238>
   132a8:	ldr	r0, [r4, #4]
   132ac:	movw	r7, #24976	; 0x6190
   132b0:	movt	r7, #2
   132b4:	cmp	r0, r7
   132b8:	beq	132d0 <__mempcpy_chk@plt+0x2280>
   132bc:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   132c0:	movw	r0, #24824	; 0x60f8
   132c4:	movt	r0, #2
   132c8:	mov	r6, #256	; 0x100
   132cc:	strd	r6, [r0]
   132d0:	movw	r6, #24824	; 0x60f8
   132d4:	movt	r6, #2
   132d8:	cmp	r4, r6
   132dc:	beq	132ec <__mempcpy_chk@plt+0x229c>
   132e0:	mov	r0, r4
   132e4:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   132e8:	str	r6, [r8]
   132ec:	mov	r0, #1
   132f0:	str	r0, [r5]
   132f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132f8:	movw	r3, #24928	; 0x6160
   132fc:	movt	r3, #2
   13300:	mvn	r2, #0
   13304:	b	13308 <__mempcpy_chk@plt+0x22b8>
   13308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1330c:	add	fp, sp, #28
   13310:	sub	sp, sp, #44	; 0x2c
   13314:	mov	r7, r3
   13318:	str	r2, [sp, #36]	; 0x24
   1331c:	str	r1, [sp, #32]
   13320:	mov	r5, r0
   13324:	bl	10f78 <__errno_location@plt>
   13328:	cmp	r5, #0
   1332c:	blt	13498 <__mempcpy_chk@plt+0x2448>
   13330:	cmn	r5, #-2147483647	; 0x80000001
   13334:	beq	13498 <__mempcpy_chk@plt+0x2448>
   13338:	movw	r4, #24816	; 0x60f0
   1333c:	movt	r4, #2
   13340:	ldr	r6, [r4]
   13344:	str	r0, [sp, #28]
   13348:	ldr	r0, [r0]
   1334c:	str	r0, [sp, #24]
   13350:	movw	r8, #24820	; 0x60f4
   13354:	movt	r8, #2
   13358:	ldr	r1, [r8]
   1335c:	cmp	r1, r5
   13360:	ble	1336c <__mempcpy_chk@plt+0x231c>
   13364:	mov	sl, r6
   13368:	b	133d4 <__mempcpy_chk@plt+0x2384>
   1336c:	str	r1, [fp, #-32]	; 0xffffffe0
   13370:	mov	r0, #8
   13374:	str	r0, [sp]
   13378:	movw	r9, #24824	; 0x60f8
   1337c:	movt	r9, #2
   13380:	subs	r0, r6, r9
   13384:	movne	r0, r6
   13388:	add	r2, r5, #1
   1338c:	sub	r2, r2, r1
   13390:	sub	r1, fp, #32
   13394:	mvn	r3, #-2147483648	; 0x80000000
   13398:	bl	14164 <__mempcpy_chk@plt+0x3114>
   1339c:	mov	sl, r0
   133a0:	str	r0, [r4]
   133a4:	cmp	r6, r9
   133a8:	ldrdeq	r0, [r9]
   133ac:	stmeq	sl, {r0, r1}
   133b0:	ldr	r1, [r8]
   133b4:	add	r0, sl, r1, lsl #3
   133b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133bc:	sub	r1, r2, r1
   133c0:	lsl	r2, r1, #3
   133c4:	mov	r1, #0
   133c8:	bl	10f90 <memset@plt>
   133cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133d0:	str	r0, [r8]
   133d4:	mov	r9, sl
   133d8:	ldr	r6, [r9, r5, lsl #3]!
   133dc:	ldr	r4, [r9, #4]!
   133e0:	ldm	r7, {r0, r1}
   133e4:	ldr	r2, [r7, #40]	; 0x28
   133e8:	ldr	r3, [r7, #44]	; 0x2c
   133ec:	orr	r8, r1, #1
   133f0:	add	r1, r7, #8
   133f4:	stm	sp, {r0, r8}
   133f8:	str	r1, [sp, #20]
   133fc:	add	r0, sp, #8
   13400:	stm	r0, {r1, r2, r3}
   13404:	mov	r0, r4
   13408:	mov	r1, r6
   1340c:	ldr	r2, [sp, #32]
   13410:	ldr	r3, [sp, #36]	; 0x24
   13414:	bl	1216c <__mempcpy_chk@plt+0x111c>
   13418:	cmp	r6, r0
   1341c:	bhi	13480 <__mempcpy_chk@plt+0x2430>
   13420:	add	r6, r0, #1
   13424:	str	r6, [sl, r5, lsl #3]
   13428:	movw	r0, #24976	; 0x6190
   1342c:	movt	r0, #2
   13430:	cmp	r4, r0
   13434:	beq	13440 <__mempcpy_chk@plt+0x23f0>
   13438:	mov	r0, r4
   1343c:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   13440:	mov	r0, r6
   13444:	bl	1407c <__mempcpy_chk@plt+0x302c>
   13448:	mov	r4, r0
   1344c:	str	r0, [r9]
   13450:	ldr	r0, [r7]
   13454:	ldr	r1, [r7, #40]	; 0x28
   13458:	ldr	r2, [r7, #44]	; 0x2c
   1345c:	stm	sp, {r0, r8}
   13460:	ldr	r0, [sp, #20]
   13464:	add	r3, sp, #8
   13468:	stm	r3, {r0, r1, r2}
   1346c:	mov	r0, r4
   13470:	mov	r1, r6
   13474:	ldr	r2, [sp, #32]
   13478:	ldr	r3, [sp, #36]	; 0x24
   1347c:	bl	1216c <__mempcpy_chk@plt+0x111c>
   13480:	ldr	r0, [sp, #28]
   13484:	ldr	r1, [sp, #24]
   13488:	str	r1, [r0]
   1348c:	mov	r0, r4
   13490:	sub	sp, fp, #28
   13494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13498:	bl	11038 <abort@plt>
   1349c:	movw	r3, #24928	; 0x6160
   134a0:	movt	r3, #2
   134a4:	b	13308 <__mempcpy_chk@plt+0x22b8>
   134a8:	mov	r1, r0
   134ac:	mov	r0, #0
   134b0:	b	132f8 <__mempcpy_chk@plt+0x22a8>
   134b4:	mov	r2, r1
   134b8:	mov	r1, r0
   134bc:	mov	r0, #0
   134c0:	b	1349c <__mempcpy_chk@plt+0x244c>
   134c4:	push	{r4, r5, r6, sl, fp, lr}
   134c8:	add	fp, sp, #16
   134cc:	sub	sp, sp, #48	; 0x30
   134d0:	mov	r4, r2
   134d4:	mov	r5, r0
   134d8:	mov	r6, sp
   134dc:	mov	r0, r6
   134e0:	bl	13500 <__mempcpy_chk@plt+0x24b0>
   134e4:	mov	r0, r5
   134e8:	mov	r1, r4
   134ec:	mvn	r2, #0
   134f0:	mov	r3, r6
   134f4:	bl	13308 <__mempcpy_chk@plt+0x22b8>
   134f8:	sub	sp, fp, #16
   134fc:	pop	{r4, r5, r6, sl, fp, pc}
   13500:	vmov.i32	q8, #0	; 0x00000000
   13504:	mov	r2, #32
   13508:	mov	r3, r0
   1350c:	vst1.32	{d16-d17}, [r3], r2
   13510:	vst1.32	{d16-d17}, [r3]
   13514:	add	r2, r0, #16
   13518:	vst1.32	{d16-d17}, [r2]
   1351c:	cmp	r1, #10
   13520:	strne	r1, [r0]
   13524:	bxne	lr
   13528:	push	{fp, lr}
   1352c:	mov	fp, sp
   13530:	bl	11038 <abort@plt>
   13534:	push	{r4, r5, r6, r7, fp, lr}
   13538:	add	fp, sp, #16
   1353c:	sub	sp, sp, #48	; 0x30
   13540:	mov	r4, r3
   13544:	mov	r5, r2
   13548:	mov	r6, r0
   1354c:	mov	r7, sp
   13550:	mov	r0, r7
   13554:	bl	13500 <__mempcpy_chk@plt+0x24b0>
   13558:	mov	r0, r6
   1355c:	mov	r1, r5
   13560:	mov	r2, r4
   13564:	mov	r3, r7
   13568:	bl	13308 <__mempcpy_chk@plt+0x22b8>
   1356c:	sub	sp, fp, #16
   13570:	pop	{r4, r5, r6, r7, fp, pc}
   13574:	mov	r2, r1
   13578:	mov	r1, r0
   1357c:	mov	r0, #0
   13580:	b	134c4 <__mempcpy_chk@plt+0x2474>
   13584:	mov	r3, r2
   13588:	mov	r2, r1
   1358c:	mov	r1, r0
   13590:	mov	r0, #0
   13594:	b	13534 <__mempcpy_chk@plt+0x24e4>
   13598:	push	{r4, r5, r6, sl, fp, lr}
   1359c:	add	fp, sp, #16
   135a0:	sub	sp, sp, #48	; 0x30
   135a4:	mov	r4, r1
   135a8:	mov	r5, r0
   135ac:	mov	r0, #32
   135b0:	movw	r1, #24928	; 0x6160
   135b4:	movt	r1, #2
   135b8:	add	r3, r1, #16
   135bc:	vld1.64	{d16-d17}, [r1], r0
   135c0:	mov	r6, sp
   135c4:	vld1.64	{d18-d19}, [r3]
   135c8:	add	r3, r6, #16
   135cc:	vld1.64	{d20-d21}, [r1]
   135d0:	vst1.64	{d18-d19}, [r3]
   135d4:	mov	r1, r6
   135d8:	vst1.64	{d16-d17}, [r1], r0
   135dc:	vst1.64	{d20-d21}, [r1]
   135e0:	mov	r0, r6
   135e4:	mov	r1, r2
   135e8:	mov	r2, #1
   135ec:	bl	12060 <__mempcpy_chk@plt+0x1010>
   135f0:	mov	r0, #0
   135f4:	mov	r1, r5
   135f8:	mov	r2, r4
   135fc:	mov	r3, r6
   13600:	bl	13308 <__mempcpy_chk@plt+0x22b8>
   13604:	sub	sp, fp, #16
   13608:	pop	{r4, r5, r6, sl, fp, pc}
   1360c:	mov	r2, r1
   13610:	mvn	r1, #0
   13614:	b	13598 <__mempcpy_chk@plt+0x2548>
   13618:	mov	r1, #58	; 0x3a
   1361c:	b	1360c <__mempcpy_chk@plt+0x25bc>
   13620:	mov	r2, #58	; 0x3a
   13624:	b	13598 <__mempcpy_chk@plt+0x2548>
   13628:	push	{r4, r5, r6, sl, fp, lr}
   1362c:	add	fp, sp, #16
   13630:	sub	sp, sp, #48	; 0x30
   13634:	mov	r4, r2
   13638:	mov	r5, r0
   1363c:	mov	r6, sp
   13640:	mov	r0, r6
   13644:	bl	13500 <__mempcpy_chk@plt+0x24b0>
   13648:	mov	r0, r6
   1364c:	mov	r1, #58	; 0x3a
   13650:	mov	r2, #1
   13654:	bl	12060 <__mempcpy_chk@plt+0x1010>
   13658:	mov	r0, r5
   1365c:	mov	r1, r4
   13660:	mvn	r2, #0
   13664:	mov	r3, r6
   13668:	bl	13308 <__mempcpy_chk@plt+0x22b8>
   1366c:	sub	sp, fp, #16
   13670:	pop	{r4, r5, r6, sl, fp, pc}
   13674:	push	{fp, lr}
   13678:	mov	fp, sp
   1367c:	sub	sp, sp, #8
   13680:	mvn	ip, #0
   13684:	str	ip, [sp]
   13688:	bl	13694 <__mempcpy_chk@plt+0x2644>
   1368c:	mov	sp, fp
   13690:	pop	{fp, pc}
   13694:	push	{r4, r5, r6, r7, fp, lr}
   13698:	add	fp, sp, #16
   1369c:	sub	sp, sp, #48	; 0x30
   136a0:	mov	r7, r3
   136a4:	mov	r5, r0
   136a8:	mov	r0, #32
   136ac:	movw	r3, #24928	; 0x6160
   136b0:	movt	r3, #2
   136b4:	add	r4, r3, #16
   136b8:	vld1.64	{d16-d17}, [r3], r0
   136bc:	mov	r6, sp
   136c0:	vld1.64	{d18-d19}, [r4]
   136c4:	add	r4, r6, #16
   136c8:	vld1.64	{d20-d21}, [r3]
   136cc:	vst1.64	{d18-d19}, [r4]
   136d0:	mov	r3, r6
   136d4:	vst1.64	{d16-d17}, [r3], r0
   136d8:	vst1.64	{d20-d21}, [r3]
   136dc:	mov	r0, r6
   136e0:	bl	120b8 <__mempcpy_chk@plt+0x1068>
   136e4:	ldr	r2, [fp, #8]
   136e8:	mov	r0, r5
   136ec:	mov	r1, r7
   136f0:	mov	r3, r6
   136f4:	bl	13308 <__mempcpy_chk@plt+0x22b8>
   136f8:	sub	sp, fp, #16
   136fc:	pop	{r4, r5, r6, r7, fp, pc}
   13700:	mov	r3, r2
   13704:	mov	r2, r1
   13708:	mov	r1, r0
   1370c:	mov	r0, #0
   13710:	b	13674 <__mempcpy_chk@plt+0x2624>
   13714:	push	{fp, lr}
   13718:	mov	fp, sp
   1371c:	sub	sp, sp, #8
   13720:	mov	ip, r2
   13724:	mov	r2, r1
   13728:	mov	r1, r0
   1372c:	str	r3, [sp]
   13730:	mov	r0, #0
   13734:	mov	r3, ip
   13738:	bl	13694 <__mempcpy_chk@plt+0x2644>
   1373c:	mov	sp, fp
   13740:	pop	{fp, pc}
   13744:	movw	r3, #24832	; 0x6100
   13748:	movt	r3, #2
   1374c:	b	13308 <__mempcpy_chk@plt+0x22b8>
   13750:	mov	r2, r1
   13754:	mov	r1, r0
   13758:	mov	r0, #0
   1375c:	b	13744 <__mempcpy_chk@plt+0x26f4>
   13760:	mvn	r2, #0
   13764:	b	13744 <__mempcpy_chk@plt+0x26f4>
   13768:	mov	r1, r0
   1376c:	mov	r0, #0
   13770:	b	13760 <__mempcpy_chk@plt+0x2710>
   13774:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13778:	add	fp, sp, #24
   1377c:	sub	sp, sp, #16
   13780:	mov	r4, r1
   13784:	mov	r5, r0
   13788:	mov	r7, #0
   1378c:	mov	r0, #0
   13790:	mov	r1, r5
   13794:	mov	r2, #5
   13798:	bl	10e70 <dcgettext@plt>
   1379c:	cmp	r0, r5
   137a0:	beq	137ac <__mempcpy_chk@plt+0x275c>
   137a4:	sub	sp, fp, #24
   137a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137ac:	bl	14b38 <__mempcpy_chk@plt+0x3ae8>
   137b0:	mov	r6, r0
   137b4:	mov	r8, #56	; 0x38
   137b8:	mov	r0, #45	; 0x2d
   137bc:	stm	sp, {r0, r8}
   137c0:	str	r7, [sp, #8]
   137c4:	str	r7, [sp, #12]
   137c8:	mov	r0, r6
   137cc:	mov	r1, #85	; 0x55
   137d0:	mov	r2, #84	; 0x54
   137d4:	mov	r3, #70	; 0x46
   137d8:	bl	13870 <__mempcpy_chk@plt+0x2820>
   137dc:	cmp	r0, #0
   137e0:	beq	137fc <__mempcpy_chk@plt+0x27ac>
   137e4:	ldrb	r1, [r5]
   137e8:	movw	r2, #21540	; 0x5424
   137ec:	movt	r2, #1
   137f0:	movw	r0, #21544	; 0x5428
   137f4:	movt	r0, #1
   137f8:	b	13840 <__mempcpy_chk@plt+0x27f0>
   137fc:	mov	r0, #48	; 0x30
   13800:	mov	r1, #51	; 0x33
   13804:	str	r8, [sp]
   13808:	stmib	sp, {r0, r1}
   1380c:	str	r0, [sp, #12]
   13810:	mov	r0, r6
   13814:	mov	r1, #71	; 0x47
   13818:	mov	r2, #66	; 0x42
   1381c:	mov	r3, #49	; 0x31
   13820:	bl	13870 <__mempcpy_chk@plt+0x2820>
   13824:	cmp	r0, #0
   13828:	beq	13850 <__mempcpy_chk@plt+0x2800>
   1382c:	ldrb	r1, [r5]
   13830:	movw	r2, #21548	; 0x542c
   13834:	movt	r2, #1
   13838:	movw	r0, #21552	; 0x5430
   1383c:	movt	r0, #1
   13840:	cmp	r1, #96	; 0x60
   13844:	moveq	r0, r2
   13848:	sub	sp, fp, #24
   1384c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13850:	movw	r1, #21534	; 0x541e
   13854:	movt	r1, #1
   13858:	movw	r0, #21538	; 0x5422
   1385c:	movt	r0, #1
   13860:	cmp	r4, #9
   13864:	moveq	r0, r1
   13868:	sub	sp, fp, #24
   1386c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13870:	push	{r4, r5, r6, r7, fp, lr}
   13874:	add	fp, sp, #16
   13878:	sub	sp, sp, #16
   1387c:	mov	r4, r3
   13880:	mov	r5, r2
   13884:	mov	r7, r1
   13888:	mov	r6, r0
   1388c:	mov	r0, r1
   13890:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13894:	ldrb	r1, [r6]
   13898:	cmp	r0, #0
   1389c:	andne	r1, r1, #223	; 0xdf
   138a0:	mov	r0, #0
   138a4:	cmp	r1, r7
   138a8:	bne	138e8 <__mempcpy_chk@plt+0x2898>
   138ac:	cmp	r7, #0
   138b0:	moveq	r0, #1
   138b4:	subeq	sp, fp, #16
   138b8:	popeq	{r4, r5, r6, r7, fp, pc}
   138bc:	ldr	r0, [fp, #20]
   138c0:	ldr	r1, [fp, #16]
   138c4:	ldr	r2, [fp, #12]
   138c8:	ldr	r3, [fp, #8]
   138cc:	str	r2, [sp]
   138d0:	str	r1, [sp, #4]
   138d4:	str	r0, [sp, #8]
   138d8:	mov	r0, r6
   138dc:	mov	r1, r5
   138e0:	mov	r2, r4
   138e4:	bl	138f0 <__mempcpy_chk@plt+0x28a0>
   138e8:	sub	sp, fp, #16
   138ec:	pop	{r4, r5, r6, r7, fp, pc}
   138f0:	push	{r4, r5, r6, r7, fp, lr}
   138f4:	add	fp, sp, #16
   138f8:	sub	sp, sp, #8
   138fc:	mov	r4, r3
   13900:	mov	r5, r2
   13904:	mov	r7, r1
   13908:	mov	r6, r0
   1390c:	mov	r0, r1
   13910:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13914:	ldrb	r1, [r6, #1]
   13918:	cmp	r0, #0
   1391c:	andne	r1, r1, #223	; 0xdf
   13920:	mov	r0, #0
   13924:	cmp	r1, r7
   13928:	bne	13960 <__mempcpy_chk@plt+0x2910>
   1392c:	cmp	r7, #0
   13930:	moveq	r0, #1
   13934:	subeq	sp, fp, #16
   13938:	popeq	{r4, r5, r6, r7, fp, pc}
   1393c:	ldr	r0, [fp, #16]
   13940:	ldr	r1, [fp, #12]
   13944:	ldr	r3, [fp, #8]
   13948:	str	r1, [sp]
   1394c:	str	r0, [sp, #4]
   13950:	mov	r0, r6
   13954:	mov	r1, r5
   13958:	mov	r2, r4
   1395c:	bl	13968 <__mempcpy_chk@plt+0x2918>
   13960:	sub	sp, fp, #16
   13964:	pop	{r4, r5, r6, r7, fp, pc}
   13968:	push	{r4, r5, r6, r7, fp, lr}
   1396c:	add	fp, sp, #16
   13970:	sub	sp, sp, #8
   13974:	mov	r4, r3
   13978:	mov	r5, r2
   1397c:	mov	r7, r1
   13980:	mov	r6, r0
   13984:	mov	r0, r1
   13988:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   1398c:	ldrb	r1, [r6, #2]
   13990:	cmp	r0, #0
   13994:	andne	r1, r1, #223	; 0xdf
   13998:	mov	r0, #0
   1399c:	cmp	r1, r7
   139a0:	bne	139d0 <__mempcpy_chk@plt+0x2980>
   139a4:	cmp	r7, #0
   139a8:	moveq	r0, #1
   139ac:	subeq	sp, fp, #16
   139b0:	popeq	{r4, r5, r6, r7, fp, pc}
   139b4:	ldr	r0, [fp, #12]
   139b8:	ldr	r3, [fp, #8]
   139bc:	str	r0, [sp]
   139c0:	mov	r0, r6
   139c4:	mov	r1, r5
   139c8:	mov	r2, r4
   139cc:	bl	139d8 <__mempcpy_chk@plt+0x2988>
   139d0:	sub	sp, fp, #16
   139d4:	pop	{r4, r5, r6, r7, fp, pc}
   139d8:	push	{r4, r5, r6, r7, fp, lr}
   139dc:	add	fp, sp, #16
   139e0:	mov	r4, r3
   139e4:	mov	r5, r2
   139e8:	mov	r7, r1
   139ec:	mov	r6, r0
   139f0:	mov	r0, r1
   139f4:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   139f8:	ldrb	r1, [r6, #3]
   139fc:	ldr	r3, [fp, #8]
   13a00:	cmp	r0, #0
   13a04:	andne	r1, r1, #223	; 0xdf
   13a08:	mov	r0, #0
   13a0c:	cmp	r1, r7
   13a10:	popne	{r4, r5, r6, r7, fp, pc}
   13a14:	cmp	r7, #0
   13a18:	beq	13a30 <__mempcpy_chk@plt+0x29e0>
   13a1c:	mov	r0, r6
   13a20:	mov	r1, r5
   13a24:	mov	r2, r4
   13a28:	pop	{r4, r5, r6, r7, fp, lr}
   13a2c:	b	13a38 <__mempcpy_chk@plt+0x29e8>
   13a30:	mov	r0, #1
   13a34:	pop	{r4, r5, r6, r7, fp, pc}
   13a38:	push	{r4, r5, r6, r7, fp, lr}
   13a3c:	add	fp, sp, #16
   13a40:	mov	r4, r3
   13a44:	mov	r5, r2
   13a48:	mov	r7, r1
   13a4c:	mov	r6, r0
   13a50:	mov	r0, r1
   13a54:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13a58:	ldrb	r1, [r6, #4]
   13a5c:	cmp	r0, #0
   13a60:	andne	r1, r1, #223	; 0xdf
   13a64:	mov	r0, #0
   13a68:	cmp	r1, r7
   13a6c:	popne	{r4, r5, r6, r7, fp, pc}
   13a70:	cmp	r7, #0
   13a74:	beq	13a8c <__mempcpy_chk@plt+0x2a3c>
   13a78:	mov	r0, r6
   13a7c:	mov	r1, r5
   13a80:	mov	r2, r4
   13a84:	pop	{r4, r5, r6, r7, fp, lr}
   13a88:	b	13a94 <__mempcpy_chk@plt+0x2a44>
   13a8c:	mov	r0, #1
   13a90:	pop	{r4, r5, r6, r7, fp, pc}
   13a94:	push	{r4, r5, r6, sl, fp, lr}
   13a98:	add	fp, sp, #16
   13a9c:	mov	r4, r2
   13aa0:	mov	r6, r1
   13aa4:	mov	r5, r0
   13aa8:	mov	r0, r1
   13aac:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13ab0:	ldrb	r1, [r5, #5]
   13ab4:	cmp	r0, #0
   13ab8:	andne	r1, r1, #223	; 0xdf
   13abc:	mov	r0, #0
   13ac0:	cmp	r1, r6
   13ac4:	popne	{r4, r5, r6, sl, fp, pc}
   13ac8:	cmp	r6, #0
   13acc:	beq	13ae0 <__mempcpy_chk@plt+0x2a90>
   13ad0:	mov	r0, r5
   13ad4:	mov	r1, r4
   13ad8:	pop	{r4, r5, r6, sl, fp, lr}
   13adc:	b	13ae8 <__mempcpy_chk@plt+0x2a98>
   13ae0:	mov	r0, #1
   13ae4:	pop	{r4, r5, r6, sl, fp, pc}
   13ae8:	push	{r4, r5, fp, lr}
   13aec:	add	fp, sp, #8
   13af0:	mov	r5, r1
   13af4:	mov	r4, r0
   13af8:	mov	r0, r1
   13afc:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13b00:	ldrb	r1, [r4, #6]
   13b04:	cmp	r0, #0
   13b08:	andne	r1, r1, #223	; 0xdf
   13b0c:	mov	r0, #0
   13b10:	cmp	r1, r5
   13b14:	popne	{r4, r5, fp, pc}
   13b18:	cmp	r5, #0
   13b1c:	beq	13b2c <__mempcpy_chk@plt+0x2adc>
   13b20:	mov	r0, r4
   13b24:	pop	{r4, r5, fp, lr}
   13b28:	b	13b34 <__mempcpy_chk@plt+0x2ae4>
   13b2c:	mov	r0, #1
   13b30:	pop	{r4, r5, fp, pc}
   13b34:	push	{r4, sl, fp, lr}
   13b38:	add	fp, sp, #8
   13b3c:	mov	r4, r0
   13b40:	mov	r0, #0
   13b44:	bl	14844 <__mempcpy_chk@plt+0x37f4>
   13b48:	ldrb	r1, [r4, #7]
   13b4c:	cmp	r0, #0
   13b50:	beq	13b68 <__mempcpy_chk@plt+0x2b18>
   13b54:	tst	r1, #223	; 0xdf
   13b58:	moveq	r0, #1
   13b5c:	popeq	{r4, sl, fp, pc}
   13b60:	mov	r0, #0
   13b64:	pop	{r4, sl, fp, pc}
   13b68:	cmp	r1, #0
   13b6c:	moveq	r0, #1
   13b70:	popeq	{r4, sl, fp, pc}
   13b74:	mov	r0, #0
   13b78:	pop	{r4, sl, fp, pc}
   13b7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b80:	add	fp, sp, #24
   13b84:	sub	sp, sp, #32
   13b88:	mov	r4, r2
   13b8c:	mov	r8, r0
   13b90:	ldr	r6, [fp, #12]
   13b94:	ldr	r7, [fp, #8]
   13b98:	cmp	r1, #0
   13b9c:	beq	13bc4 <__mempcpy_chk@plt+0x2b74>
   13ba0:	mov	r5, r1
   13ba4:	str	r4, [sp]
   13ba8:	str	r3, [sp, #4]
   13bac:	movw	r2, #21640	; 0x5488
   13bb0:	movt	r2, #1
   13bb4:	mov	r0, r8
   13bb8:	mov	r1, #1
   13bbc:	mov	r3, r5
   13bc0:	b	13bdc <__mempcpy_chk@plt+0x2b8c>
   13bc4:	str	r3, [sp]
   13bc8:	movw	r2, #21652	; 0x5494
   13bcc:	movt	r2, #1
   13bd0:	mov	r0, r8
   13bd4:	mov	r1, #1
   13bd8:	mov	r3, r4
   13bdc:	bl	10fb4 <__fprintf_chk@plt>
   13be0:	movw	r1, #21659	; 0x549b
   13be4:	movt	r1, #1
   13be8:	mov	r0, #0
   13bec:	mov	r2, #5
   13bf0:	bl	10e70 <dcgettext@plt>
   13bf4:	mov	r3, r0
   13bf8:	movw	r0, #2022	; 0x7e6
   13bfc:	str	r0, [sp]
   13c00:	movw	r2, #22377	; 0x5769
   13c04:	movt	r2, #1
   13c08:	mov	r0, r8
   13c0c:	mov	r1, #1
   13c10:	bl	10fb4 <__fprintf_chk@plt>
   13c14:	movw	r4, #19998	; 0x4e1e
   13c18:	movt	r4, #1
   13c1c:	mov	r0, r4
   13c20:	mov	r1, r8
   13c24:	bl	10df8 <fputs_unlocked@plt>
   13c28:	movw	r1, #21663	; 0x549f
   13c2c:	movt	r1, #1
   13c30:	mov	r0, #0
   13c34:	mov	r2, #5
   13c38:	bl	10e70 <dcgettext@plt>
   13c3c:	mov	r2, r0
   13c40:	movw	r3, #21834	; 0x554a
   13c44:	movt	r3, #1
   13c48:	mov	r0, r8
   13c4c:	mov	r1, #1
   13c50:	bl	10fb4 <__fprintf_chk@plt>
   13c54:	mov	r0, r4
   13c58:	mov	r1, r8
   13c5c:	bl	10df8 <fputs_unlocked@plt>
   13c60:	cmp	r6, #9
   13c64:	bhi	13ca0 <__mempcpy_chk@plt+0x2c50>
   13c68:	add	r0, pc, #0
   13c6c:	ldr	pc, [r0, r6, lsl #2]
   13c70:	muleq	r1, r8, ip
   13c74:	andeq	r3, r1, ip, lsr #25
   13c78:	ldrdeq	r3, [r1], -ip
   13c7c:	andeq	r3, r1, r4, lsl #26
   13c80:	andeq	r3, r1, ip, lsr #26
   13c84:	andeq	r3, r1, r4, asr sp
   13c88:	andeq	r3, r1, ip, ror sp
   13c8c:			; <UNDEFINED> instruction: 0x00013db4
   13c90:	andeq	r3, r1, r4, asr lr
   13c94:	strdeq	r3, [r1], -ip
   13c98:	sub	sp, fp, #24
   13c9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ca0:	movw	r1, #22187	; 0x56ab
   13ca4:	movt	r1, #1
   13ca8:	b	13e04 <__mempcpy_chk@plt+0x2db4>
   13cac:	movw	r1, #21868	; 0x556c
   13cb0:	movt	r1, #1
   13cb4:	mov	r0, #0
   13cb8:	mov	r2, #5
   13cbc:	bl	10e70 <dcgettext@plt>
   13cc0:	mov	r2, r0
   13cc4:	ldr	r3, [r7]
   13cc8:	mov	r0, r8
   13ccc:	mov	r1, #1
   13cd0:	sub	sp, fp, #24
   13cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cd8:	b	10fb4 <__fprintf_chk@plt>
   13cdc:	movw	r1, #21884	; 0x557c
   13ce0:	movt	r1, #1
   13ce4:	mov	r0, #0
   13ce8:	mov	r2, #5
   13cec:	bl	10e70 <dcgettext@plt>
   13cf0:	mov	r2, r0
   13cf4:	ldr	r3, [r7]
   13cf8:	ldr	r0, [r7, #4]
   13cfc:	str	r0, [sp]
   13d00:	b	13df0 <__mempcpy_chk@plt+0x2da0>
   13d04:	movw	r1, #21907	; 0x5593
   13d08:	movt	r1, #1
   13d0c:	mov	r0, #0
   13d10:	mov	r2, #5
   13d14:	bl	10e70 <dcgettext@plt>
   13d18:	mov	r2, r0
   13d1c:	ldr	r3, [r7]
   13d20:	ldmib	r7, {r0, r1}
   13d24:	stm	sp, {r0, r1}
   13d28:	b	13df0 <__mempcpy_chk@plt+0x2da0>
   13d2c:	movw	r1, #21935	; 0x55af
   13d30:	movt	r1, #1
   13d34:	mov	r0, #0
   13d38:	mov	r2, #5
   13d3c:	bl	10e70 <dcgettext@plt>
   13d40:	mov	r2, r0
   13d44:	ldr	r3, [r7]
   13d48:	ldmib	r7, {r0, r1, r7}
   13d4c:	stm	sp, {r0, r1, r7}
   13d50:	b	13df0 <__mempcpy_chk@plt+0x2da0>
   13d54:	movw	r1, #21967	; 0x55cf
   13d58:	movt	r1, #1
   13d5c:	mov	r0, #0
   13d60:	mov	r2, #5
   13d64:	bl	10e70 <dcgettext@plt>
   13d68:	mov	r2, r0
   13d6c:	ldr	r3, [r7]
   13d70:	ldmib	r7, {r0, r1, r6, r7}
   13d74:	stm	sp, {r0, r1, r6, r7}
   13d78:	b	13df0 <__mempcpy_chk@plt+0x2da0>
   13d7c:	movw	r1, #22003	; 0x55f3
   13d80:	movt	r1, #1
   13d84:	mov	r0, #0
   13d88:	mov	r2, #5
   13d8c:	bl	10e70 <dcgettext@plt>
   13d90:	mov	r2, r0
   13d94:	ldr	r3, [r7]
   13d98:	ldmib	r7, {r0, r1, r6}
   13d9c:	ldr	r5, [r7, #16]
   13da0:	ldr	r7, [r7, #20]
   13da4:	stm	sp, {r0, r1, r6}
   13da8:	str	r5, [sp, #12]
   13dac:	str	r7, [sp, #16]
   13db0:	b	13df0 <__mempcpy_chk@plt+0x2da0>
   13db4:	movw	r1, #22043	; 0x561b
   13db8:	movt	r1, #1
   13dbc:	mov	r0, #0
   13dc0:	mov	r2, #5
   13dc4:	bl	10e70 <dcgettext@plt>
   13dc8:	mov	r2, r0
   13dcc:	ldr	r3, [r7]
   13dd0:	ldmib	r7, {r0, r1, r6}
   13dd4:	ldr	r5, [r7, #16]
   13dd8:	ldr	r4, [r7, #20]
   13ddc:	ldr	r7, [r7, #24]
   13de0:	stm	sp, {r0, r1, r6}
   13de4:	str	r5, [sp, #12]
   13de8:	str	r4, [sp, #16]
   13dec:	str	r7, [sp, #20]
   13df0:	mov	r0, r8
   13df4:	mov	r1, #1
   13df8:	b	13ea4 <__mempcpy_chk@plt+0x2e54>
   13dfc:	movw	r1, #22135	; 0x5677
   13e00:	movt	r1, #1
   13e04:	mov	r0, #0
   13e08:	mov	r2, #5
   13e0c:	bl	10e70 <dcgettext@plt>
   13e10:	mov	ip, r0
   13e14:	ldr	r3, [r7]
   13e18:	ldr	r0, [r7, #4]
   13e1c:	ldr	r1, [r7, #8]
   13e20:	ldr	r6, [r7, #12]
   13e24:	ldr	r5, [r7, #16]
   13e28:	ldr	r4, [r7, #20]
   13e2c:	ldr	r2, [r7, #24]
   13e30:	ldr	lr, [r7, #28]
   13e34:	ldr	r7, [r7, #32]
   13e38:	stm	sp, {r0, r1, r6}
   13e3c:	str	r5, [sp, #12]
   13e40:	str	r4, [sp, #16]
   13e44:	str	r2, [sp, #20]
   13e48:	str	lr, [sp, #24]
   13e4c:	str	r7, [sp, #28]
   13e50:	b	13e98 <__mempcpy_chk@plt+0x2e48>
   13e54:	movw	r1, #22087	; 0x5647
   13e58:	movt	r1, #1
   13e5c:	mov	r0, #0
   13e60:	mov	r2, #5
   13e64:	bl	10e70 <dcgettext@plt>
   13e68:	mov	ip, r0
   13e6c:	ldr	r3, [r7]
   13e70:	ldmib	r7, {r0, r1, r6}
   13e74:	ldr	r5, [r7, #16]
   13e78:	ldr	r4, [r7, #20]
   13e7c:	ldr	r2, [r7, #24]
   13e80:	ldr	r7, [r7, #28]
   13e84:	stm	sp, {r0, r1, r6}
   13e88:	str	r5, [sp, #12]
   13e8c:	str	r4, [sp, #16]
   13e90:	str	r2, [sp, #20]
   13e94:	str	r7, [sp, #24]
   13e98:	mov	r0, r8
   13e9c:	mov	r1, #1
   13ea0:	mov	r2, ip
   13ea4:	bl	10fb4 <__fprintf_chk@plt>
   13ea8:	sub	sp, fp, #24
   13eac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13eb0:	push	{r4, sl, fp, lr}
   13eb4:	add	fp, sp, #8
   13eb8:	sub	sp, sp, #8
   13ebc:	mov	lr, #0
   13ec0:	ldr	ip, [fp, #8]
   13ec4:	ldr	r4, [ip, lr, lsl #2]
   13ec8:	add	lr, lr, #1
   13ecc:	cmp	r4, #0
   13ed0:	bne	13ec4 <__mempcpy_chk@plt+0x2e74>
   13ed4:	sub	r4, lr, #1
   13ed8:	str	ip, [sp]
   13edc:	str	r4, [sp, #4]
   13ee0:	bl	13b7c <__mempcpy_chk@plt+0x2b2c>
   13ee4:	sub	sp, fp, #8
   13ee8:	pop	{r4, sl, fp, pc}
   13eec:	push	{r4, r5, fp, lr}
   13ef0:	add	fp, sp, #8
   13ef4:	sub	sp, sp, #48	; 0x30
   13ef8:	mov	ip, #0
   13efc:	ldr	r4, [fp, #8]
   13f00:	add	lr, sp, #8
   13f04:	ldr	r5, [r4]
   13f08:	str	r5, [lr, ip, lsl #2]
   13f0c:	cmp	r5, #0
   13f10:	beq	13f24 <__mempcpy_chk@plt+0x2ed4>
   13f14:	add	ip, ip, #1
   13f18:	add	r4, r4, #4
   13f1c:	cmp	ip, #10
   13f20:	bcc	13f04 <__mempcpy_chk@plt+0x2eb4>
   13f24:	str	lr, [sp]
   13f28:	str	ip, [sp, #4]
   13f2c:	bl	13b7c <__mempcpy_chk@plt+0x2b2c>
   13f30:	sub	sp, fp, #8
   13f34:	pop	{r4, r5, fp, pc}
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	sub	sp, sp, #8
   13f44:	add	ip, fp, #8
   13f48:	str	ip, [sp, #4]
   13f4c:	str	ip, [sp]
   13f50:	bl	13eec <__mempcpy_chk@plt+0x2e9c>
   13f54:	mov	sp, fp
   13f58:	pop	{fp, pc}
   13f5c:	push	{fp, lr}
   13f60:	mov	fp, sp
   13f64:	movw	r0, #24900	; 0x6144
   13f68:	movt	r0, #2
   13f6c:	ldr	r1, [r0]
   13f70:	movw	r0, #19998	; 0x4e1e
   13f74:	movt	r0, #1
   13f78:	bl	10df8 <fputs_unlocked@plt>
   13f7c:	movw	r1, #22247	; 0x56e7
   13f80:	movt	r1, #1
   13f84:	mov	r0, #0
   13f88:	mov	r2, #5
   13f8c:	bl	10e70 <dcgettext@plt>
   13f90:	mov	r1, r0
   13f94:	movw	r2, #22267	; 0x56fb
   13f98:	movt	r2, #1
   13f9c:	mov	r0, #1
   13fa0:	bl	10f9c <__printf_chk@plt>
   13fa4:	movw	r1, #22289	; 0x5711
   13fa8:	movt	r1, #1
   13fac:	mov	r0, #0
   13fb0:	mov	r2, #5
   13fb4:	bl	10e70 <dcgettext@plt>
   13fb8:	mov	r1, r0
   13fbc:	movw	r2, #20627	; 0x5093
   13fc0:	movt	r2, #1
   13fc4:	movw	r3, #21036	; 0x522c
   13fc8:	movt	r3, #1
   13fcc:	mov	r0, #1
   13fd0:	bl	10f9c <__printf_chk@plt>
   13fd4:	movw	r1, #22309	; 0x5725
   13fd8:	movt	r1, #1
   13fdc:	mov	r0, #0
   13fe0:	mov	r2, #5
   13fe4:	bl	10e70 <dcgettext@plt>
   13fe8:	mov	r1, r0
   13fec:	movw	r2, #22348	; 0x574c
   13ff0:	movt	r2, #1
   13ff4:	mov	r0, #1
   13ff8:	pop	{fp, lr}
   13ffc:	b	10f9c <__printf_chk@plt>
   14000:	b	14004 <__mempcpy_chk@plt+0x2fb4>
   14004:	push	{r4, r5, r6, sl, fp, lr}
   14008:	add	fp, sp, #16
   1400c:	mov	r4, r2
   14010:	mov	r5, r1
   14014:	mov	r6, r0
   14018:	bl	14bd0 <__mempcpy_chk@plt+0x3b80>
   1401c:	cmp	r0, #0
   14020:	popne	{r4, r5, r6, sl, fp, pc}
   14024:	cmp	r6, #0
   14028:	beq	1403c <__mempcpy_chk@plt+0x2fec>
   1402c:	cmp	r5, #0
   14030:	cmpne	r4, #0
   14034:	bne	1403c <__mempcpy_chk@plt+0x2fec>
   14038:	pop	{r4, r5, r6, sl, fp, pc}
   1403c:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	bl	14488 <__mempcpy_chk@plt+0x3438>
   1404c:	bl	14054 <__mempcpy_chk@plt+0x3004>
   14050:	pop	{fp, pc}
   14054:	cmp	r0, #0
   14058:	bxne	lr
   1405c:	push	{fp, lr}
   14060:	mov	fp, sp
   14064:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   14068:	push	{fp, lr}
   1406c:	mov	fp, sp
   14070:	bl	14b04 <__mempcpy_chk@plt+0x3ab4>
   14074:	bl	14054 <__mempcpy_chk@plt+0x3004>
   14078:	pop	{fp, pc}
   1407c:	b	14040 <__mempcpy_chk@plt+0x2ff0>
   14080:	push	{r4, r5, fp, lr}
   14084:	add	fp, sp, #8
   14088:	mov	r4, r1
   1408c:	mov	r5, r0
   14090:	bl	144b8 <__mempcpy_chk@plt+0x3468>
   14094:	cmp	r0, #0
   14098:	popne	{r4, r5, fp, pc}
   1409c:	cmp	r5, #0
   140a0:	beq	140b0 <__mempcpy_chk@plt+0x3060>
   140a4:	cmp	r4, #0
   140a8:	bne	140b0 <__mempcpy_chk@plt+0x3060>
   140ac:	pop	{r4, r5, fp, pc}
   140b0:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   140b4:	push	{fp, lr}
   140b8:	mov	fp, sp
   140bc:	bl	14b08 <__mempcpy_chk@plt+0x3ab8>
   140c0:	bl	14054 <__mempcpy_chk@plt+0x3004>
   140c4:	pop	{fp, pc}
   140c8:	push	{fp, lr}
   140cc:	mov	fp, sp
   140d0:	bl	14b18 <__mempcpy_chk@plt+0x3ac8>
   140d4:	bl	14054 <__mempcpy_chk@plt+0x3004>
   140d8:	pop	{fp, pc}
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	mov	r2, r1
   140e8:	mov	r1, r0
   140ec:	mov	r0, #0
   140f0:	bl	14004 <__mempcpy_chk@plt+0x2fb4>
   140f4:	pop	{fp, pc}
   140f8:	mov	r2, r1
   140fc:	mov	r1, r0
   14100:	mov	r0, #0
   14104:	b	140c8 <__mempcpy_chk@plt+0x3078>
   14108:	mov	r2, #1
   1410c:	b	14110 <__mempcpy_chk@plt+0x30c0>
   14110:	push	{r4, r5, fp, lr}
   14114:	add	fp, sp, #8
   14118:	mov	r4, r1
   1411c:	ldr	r5, [r1]
   14120:	cmp	r0, #0
   14124:	beq	1413c <__mempcpy_chk@plt+0x30ec>
   14128:	mov	r1, #1
   1412c:	add	r1, r1, r5, lsr #1
   14130:	adds	r5, r5, r1
   14134:	bcc	14154 <__mempcpy_chk@plt+0x3104>
   14138:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   1413c:	cmp	r5, #0
   14140:	bne	14154 <__mempcpy_chk@plt+0x3104>
   14144:	mov	r1, #64	; 0x40
   14148:	udiv	r5, r1, r2
   1414c:	cmp	r2, #64	; 0x40
   14150:	addhi	r5, r5, #1
   14154:	mov	r1, r5
   14158:	bl	14004 <__mempcpy_chk@plt+0x2fb4>
   1415c:	str	r5, [r4]
   14160:	pop	{r4, r5, fp, pc}
   14164:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14168:	add	fp, sp, #24
   1416c:	mov	r8, r1
   14170:	ldr	r6, [r1]
   14174:	add	r1, r6, r6, asr #1
   14178:	cmp	r1, r6
   1417c:	mvnvs	r1, #-2147483648	; 0x80000000
   14180:	cmp	r1, r3
   14184:	mov	r5, r1
   14188:	movgt	r5, r3
   1418c:	cmn	r3, #1
   14190:	movle	r5, r1
   14194:	ldr	r4, [fp, #8]
   14198:	cmn	r4, #1
   1419c:	ble	141c4 <__mempcpy_chk@plt+0x3174>
   141a0:	cmp	r4, #0
   141a4:	beq	14218 <__mempcpy_chk@plt+0x31c8>
   141a8:	cmn	r5, #1
   141ac:	ble	141ec <__mempcpy_chk@plt+0x319c>
   141b0:	mvn	r7, #-2147483648	; 0x80000000
   141b4:	udiv	r1, r7, r4
   141b8:	cmp	r1, r5
   141bc:	bge	14218 <__mempcpy_chk@plt+0x31c8>
   141c0:	b	14228 <__mempcpy_chk@plt+0x31d8>
   141c4:	cmn	r5, #1
   141c8:	ble	14208 <__mempcpy_chk@plt+0x31b8>
   141cc:	cmn	r4, #1
   141d0:	beq	14218 <__mempcpy_chk@plt+0x31c8>
   141d4:	mov	r1, #-2147483648	; 0x80000000
   141d8:	sdiv	r1, r1, r4
   141dc:	mvn	r7, #-2147483648	; 0x80000000
   141e0:	cmp	r1, r5
   141e4:	bge	14218 <__mempcpy_chk@plt+0x31c8>
   141e8:	b	14228 <__mempcpy_chk@plt+0x31d8>
   141ec:	beq	14218 <__mempcpy_chk@plt+0x31c8>
   141f0:	mov	r1, #-2147483648	; 0x80000000
   141f4:	sdiv	r1, r1, r5
   141f8:	mvn	r7, #-2147483648	; 0x80000000
   141fc:	cmp	r1, r4
   14200:	bge	14218 <__mempcpy_chk@plt+0x31c8>
   14204:	b	14228 <__mempcpy_chk@plt+0x31d8>
   14208:	mvn	r7, #-2147483648	; 0x80000000
   1420c:	sdiv	r1, r7, r4
   14210:	cmp	r5, r1
   14214:	blt	14228 <__mempcpy_chk@plt+0x31d8>
   14218:	mul	r1, r5, r4
   1421c:	mov	r7, #64	; 0x40
   14220:	cmp	r1, #63	; 0x3f
   14224:	bgt	14230 <__mempcpy_chk@plt+0x31e0>
   14228:	sdiv	r5, r7, r4
   1422c:	mul	r1, r5, r4
   14230:	cmp	r0, #0
   14234:	moveq	r7, #0
   14238:	streq	r7, [r8]
   1423c:	sub	r7, r5, r6
   14240:	cmp	r7, r2
   14244:	bge	142f0 <__mempcpy_chk@plt+0x32a0>
   14248:	add	r5, r6, r2
   1424c:	mov	r1, #0
   14250:	cmp	r5, r3
   14254:	mov	r2, #0
   14258:	movwgt	r2, #1
   1425c:	cmn	r3, #1
   14260:	movwgt	r1, #1
   14264:	cmp	r5, r6
   14268:	bvs	142d8 <__mempcpy_chk@plt+0x3288>
   1426c:	ands	r1, r1, r2
   14270:	bne	142d8 <__mempcpy_chk@plt+0x3288>
   14274:	cmn	r4, #1
   14278:	ble	142a0 <__mempcpy_chk@plt+0x3250>
   1427c:	cmp	r4, #0
   14280:	beq	142ec <__mempcpy_chk@plt+0x329c>
   14284:	cmn	r5, #1
   14288:	ble	142c4 <__mempcpy_chk@plt+0x3274>
   1428c:	mvn	r1, #-2147483648	; 0x80000000
   14290:	udiv	r1, r1, r4
   14294:	cmp	r1, r5
   14298:	bge	142ec <__mempcpy_chk@plt+0x329c>
   1429c:	b	142d8 <__mempcpy_chk@plt+0x3288>
   142a0:	cmn	r5, #1
   142a4:	ble	142dc <__mempcpy_chk@plt+0x328c>
   142a8:	cmn	r4, #1
   142ac:	beq	142ec <__mempcpy_chk@plt+0x329c>
   142b0:	mov	r1, #-2147483648	; 0x80000000
   142b4:	sdiv	r1, r1, r4
   142b8:	cmp	r1, r5
   142bc:	bge	142ec <__mempcpy_chk@plt+0x329c>
   142c0:	b	142d8 <__mempcpy_chk@plt+0x3288>
   142c4:	beq	142ec <__mempcpy_chk@plt+0x329c>
   142c8:	mov	r1, #-2147483648	; 0x80000000
   142cc:	sdiv	r1, r1, r5
   142d0:	cmp	r1, r4
   142d4:	bge	142ec <__mempcpy_chk@plt+0x329c>
   142d8:	bl	143f0 <__mempcpy_chk@plt+0x33a0>
   142dc:	mvn	r1, #-2147483648	; 0x80000000
   142e0:	sdiv	r1, r1, r4
   142e4:	cmp	r5, r1
   142e8:	blt	142d8 <__mempcpy_chk@plt+0x3288>
   142ec:	mul	r1, r5, r4
   142f0:	bl	14080 <__mempcpy_chk@plt+0x3030>
   142f4:	str	r5, [r8]
   142f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142fc:	mov	r1, #1
   14300:	b	14304 <__mempcpy_chk@plt+0x32b4>
   14304:	push	{fp, lr}
   14308:	mov	fp, sp
   1430c:	bl	14434 <__mempcpy_chk@plt+0x33e4>
   14310:	bl	14054 <__mempcpy_chk@plt+0x3004>
   14314:	pop	{fp, pc}
   14318:	mov	r1, #1
   1431c:	b	14320 <__mempcpy_chk@plt+0x32d0>
   14320:	push	{fp, lr}
   14324:	mov	fp, sp
   14328:	bl	14b14 <__mempcpy_chk@plt+0x3ac4>
   1432c:	bl	14054 <__mempcpy_chk@plt+0x3004>
   14330:	pop	{fp, pc}
   14334:	push	{r4, r5, r6, sl, fp, lr}
   14338:	add	fp, sp, #16
   1433c:	mov	r4, r1
   14340:	mov	r5, r0
   14344:	mov	r0, r1
   14348:	bl	14040 <__mempcpy_chk@plt+0x2ff0>
   1434c:	mov	r6, r0
   14350:	mov	r1, r5
   14354:	mov	r2, r4
   14358:	bl	10e34 <memcpy@plt>
   1435c:	mov	r0, r6
   14360:	pop	{r4, r5, r6, sl, fp, pc}
   14364:	push	{r4, r5, r6, sl, fp, lr}
   14368:	add	fp, sp, #16
   1436c:	mov	r4, r1
   14370:	mov	r5, r0
   14374:	mov	r0, r1
   14378:	bl	14068 <__mempcpy_chk@plt+0x3018>
   1437c:	mov	r6, r0
   14380:	mov	r1, r5
   14384:	mov	r2, r4
   14388:	bl	10e34 <memcpy@plt>
   1438c:	mov	r0, r6
   14390:	pop	{r4, r5, r6, sl, fp, pc}
   14394:	push	{r4, r5, r6, sl, fp, lr}
   14398:	add	fp, sp, #16
   1439c:	mov	r4, r1
   143a0:	mov	r5, r0
   143a4:	add	r0, r1, #1
   143a8:	bl	14068 <__mempcpy_chk@plt+0x3018>
   143ac:	mov	r6, r0
   143b0:	mov	r0, #0
   143b4:	strb	r0, [r6, r4]
   143b8:	mov	r0, r6
   143bc:	mov	r1, r5
   143c0:	mov	r2, r4
   143c4:	bl	10e34 <memcpy@plt>
   143c8:	mov	r0, r6
   143cc:	pop	{r4, r5, r6, sl, fp, pc}
   143d0:	push	{r4, sl, fp, lr}
   143d4:	add	fp, sp, #8
   143d8:	mov	r4, r0
   143dc:	bl	10f6c <strlen@plt>
   143e0:	add	r1, r0, #1
   143e4:	mov	r0, r4
   143e8:	pop	{r4, sl, fp, lr}
   143ec:	b	14334 <__mempcpy_chk@plt+0x32e4>
   143f0:	push	{fp, lr}
   143f4:	mov	fp, sp
   143f8:	movw	r0, #24812	; 0x60ec
   143fc:	movt	r0, #2
   14400:	ldr	r4, [r0]
   14404:	movw	r1, #22424	; 0x5798
   14408:	movt	r1, #1
   1440c:	mov	r0, #0
   14410:	mov	r2, #5
   14414:	bl	10e70 <dcgettext@plt>
   14418:	mov	r3, r0
   1441c:	movw	r2, #21319	; 0x5347
   14420:	movt	r2, #1
   14424:	mov	r0, r4
   14428:	mov	r1, #0
   1442c:	bl	10ef4 <error@plt>
   14430:	bl	11038 <abort@plt>
   14434:	clz	r2, r1
   14438:	lsr	r2, r2, #5
   1443c:	clz	r3, r0
   14440:	lsr	r3, r3, #5
   14444:	orrs	r2, r3, r2
   14448:	movwne	r1, #1
   1444c:	movwne	r0, #1
   14450:	cmp	r1, #0
   14454:	beq	14484 <__mempcpy_chk@plt+0x3434>
   14458:	mvn	r2, #-2147483648	; 0x80000000
   1445c:	udiv	r2, r2, r1
   14460:	cmp	r2, r0
   14464:	bcs	14484 <__mempcpy_chk@plt+0x3434>
   14468:	push	{fp, lr}
   1446c:	mov	fp, sp
   14470:	bl	10f78 <__errno_location@plt>
   14474:	mov	r1, #12
   14478:	str	r1, [r0]
   1447c:	mov	r0, #0
   14480:	pop	{fp, pc}
   14484:	b	10dec <calloc@plt>
   14488:	cmp	r0, #0
   1448c:	movweq	r0, #1
   14490:	cmn	r0, #1
   14494:	ble	1449c <__mempcpy_chk@plt+0x344c>
   14498:	b	10f18 <malloc@plt>
   1449c:	push	{fp, lr}
   144a0:	mov	fp, sp
   144a4:	bl	10f78 <__errno_location@plt>
   144a8:	mov	r1, #12
   144ac:	str	r1, [r0]
   144b0:	mov	r0, #0
   144b4:	pop	{fp, pc}
   144b8:	push	{fp, lr}
   144bc:	mov	fp, sp
   144c0:	cmp	r0, #0
   144c4:	beq	144e0 <__mempcpy_chk@plt+0x3490>
   144c8:	cmp	r1, #0
   144cc:	beq	144ec <__mempcpy_chk@plt+0x349c>
   144d0:	cmn	r1, #1
   144d4:	ble	144f8 <__mempcpy_chk@plt+0x34a8>
   144d8:	pop	{fp, lr}
   144dc:	b	10e88 <realloc@plt>
   144e0:	mov	r0, r1
   144e4:	pop	{fp, lr}
   144e8:	b	14488 <__mempcpy_chk@plt+0x3438>
   144ec:	bl	11d94 <__mempcpy_chk@plt+0xd44>
   144f0:	mov	r0, #0
   144f4:	pop	{fp, pc}
   144f8:	bl	10f78 <__errno_location@plt>
   144fc:	mov	r1, #12
   14500:	str	r1, [r0]
   14504:	mov	r0, #0
   14508:	pop	{fp, pc}
   1450c:	sub	r0, r0, #1
   14510:	ldrb	r3, [r0, #1]!
   14514:	cmp	r3, #47	; 0x2f
   14518:	beq	14510 <__mempcpy_chk@plt+0x34c0>
   1451c:	mov	r2, #0
   14520:	mov	r1, r0
   14524:	b	14540 <__mempcpy_chk@plt+0x34f0>
   14528:	cmp	r3, #0
   1452c:	bxeq	lr
   14530:	tst	r2, #1
   14534:	movne	r0, r1
   14538:	mov	r2, #0
   1453c:	ldrb	r3, [r1, #1]!
   14540:	uxtb	r3, r3
   14544:	cmp	r3, #47	; 0x2f
   14548:	bne	14528 <__mempcpy_chk@plt+0x34d8>
   1454c:	mov	r2, #1
   14550:	ldrb	r3, [r1, #1]!
   14554:	b	14540 <__mempcpy_chk@plt+0x34f0>
   14558:	push	{r4, sl, fp, lr}
   1455c:	add	fp, sp, #8
   14560:	mov	r4, r0
   14564:	bl	10f6c <strlen@plt>
   14568:	mov	r1, r0
   1456c:	sub	r2, r4, #1
   14570:	mov	r0, r1
   14574:	cmp	r1, #2
   14578:	popcc	{r4, sl, fp, pc}
   1457c:	ldrb	r3, [r2, r0]
   14580:	sub	r1, r0, #1
   14584:	cmp	r3, #47	; 0x2f
   14588:	beq	14570 <__mempcpy_chk@plt+0x3520>
   1458c:	pop	{r4, sl, fp, pc}
   14590:	mov	r1, r0
   14594:	sub	r2, r0, #65	; 0x41
   14598:	mov	r0, #1
   1459c:	cmp	r2, #26
   145a0:	subcs	r2, r1, #97	; 0x61
   145a4:	cmpcs	r2, #26
   145a8:	bcs	145b0 <__mempcpy_chk@plt+0x3560>
   145ac:	bx	lr
   145b0:	sub	r1, r1, #48	; 0x30
   145b4:	cmp	r1, #10
   145b8:	movcs	r0, #0
   145bc:	bx	lr
   145c0:	mov	r1, r0
   145c4:	sub	r2, r0, #65	; 0x41
   145c8:	mov	r0, #1
   145cc:	cmp	r2, #26
   145d0:	subcs	r1, r1, #97	; 0x61
   145d4:	cmpcs	r1, #26
   145d8:	movcs	r0, #0
   145dc:	bx	lr
   145e0:	mov	r1, #0
   145e4:	cmp	r0, #128	; 0x80
   145e8:	movwcc	r1, #1
   145ec:	mov	r0, r1
   145f0:	bx	lr
   145f4:	sub	r1, r0, #9
   145f8:	clz	r1, r1
   145fc:	lsr	r1, r1, #5
   14600:	sub	r0, r0, #32
   14604:	clz	r0, r0
   14608:	lsr	r0, r0, #5
   1460c:	orr	r0, r0, r1
   14610:	bx	lr
   14614:	mov	r1, r0
   14618:	mov	r0, #1
   1461c:	cmp	r1, #32
   14620:	bxcc	lr
   14624:	cmp	r1, #127	; 0x7f
   14628:	movne	r0, #0
   1462c:	bx	lr
   14630:	sub	r1, r0, #48	; 0x30
   14634:	mov	r0, #0
   14638:	cmp	r1, #10
   1463c:	movwcc	r0, #1
   14640:	bx	lr
   14644:	sub	r1, r0, #33	; 0x21
   14648:	mov	r0, #0
   1464c:	cmp	r1, #94	; 0x5e
   14650:	movwcc	r0, #1
   14654:	bx	lr
   14658:	sub	r1, r0, #97	; 0x61
   1465c:	mov	r0, #0
   14660:	cmp	r1, #26
   14664:	movwcc	r0, #1
   14668:	bx	lr
   1466c:	sub	r1, r0, #32
   14670:	mov	r0, #0
   14674:	cmp	r1, #95	; 0x5f
   14678:	movwcc	r0, #1
   1467c:	bx	lr
   14680:	sub	r1, r0, #33	; 0x21
   14684:	cmp	r1, #93	; 0x5d
   14688:	bhi	14814 <__mempcpy_chk@plt+0x37c4>
   1468c:	mov	r0, #1
   14690:	add	r2, pc, #0
   14694:	ldr	pc, [r2, r1, lsl #2]
   14698:	andeq	r4, r1, r0, lsl r8
   1469c:	andeq	r4, r1, r0, lsl r8
   146a0:	andeq	r4, r1, r0, lsl r8
   146a4:	andeq	r4, r1, r0, lsl r8
   146a8:	andeq	r4, r1, r0, lsl r8
   146ac:	andeq	r4, r1, r0, lsl r8
   146b0:	andeq	r4, r1, r0, lsl r8
   146b4:	andeq	r4, r1, r0, lsl r8
   146b8:	andeq	r4, r1, r0, lsl r8
   146bc:	andeq	r4, r1, r0, lsl r8
   146c0:	andeq	r4, r1, r0, lsl r8
   146c4:	andeq	r4, r1, r0, lsl r8
   146c8:	andeq	r4, r1, r0, lsl r8
   146cc:	andeq	r4, r1, r0, lsl r8
   146d0:	andeq	r4, r1, r0, lsl r8
   146d4:	andeq	r4, r1, r4, lsl r8
   146d8:	andeq	r4, r1, r4, lsl r8
   146dc:	andeq	r4, r1, r4, lsl r8
   146e0:	andeq	r4, r1, r4, lsl r8
   146e4:	andeq	r4, r1, r4, lsl r8
   146e8:	andeq	r4, r1, r4, lsl r8
   146ec:	andeq	r4, r1, r4, lsl r8
   146f0:	andeq	r4, r1, r4, lsl r8
   146f4:	andeq	r4, r1, r4, lsl r8
   146f8:	andeq	r4, r1, r4, lsl r8
   146fc:	andeq	r4, r1, r0, lsl r8
   14700:	andeq	r4, r1, r0, lsl r8
   14704:	andeq	r4, r1, r0, lsl r8
   14708:	andeq	r4, r1, r0, lsl r8
   1470c:	andeq	r4, r1, r0, lsl r8
   14710:	andeq	r4, r1, r0, lsl r8
   14714:	andeq	r4, r1, r0, lsl r8
   14718:	andeq	r4, r1, r4, lsl r8
   1471c:	andeq	r4, r1, r4, lsl r8
   14720:	andeq	r4, r1, r4, lsl r8
   14724:	andeq	r4, r1, r4, lsl r8
   14728:	andeq	r4, r1, r4, lsl r8
   1472c:	andeq	r4, r1, r4, lsl r8
   14730:	andeq	r4, r1, r4, lsl r8
   14734:	andeq	r4, r1, r4, lsl r8
   14738:	andeq	r4, r1, r4, lsl r8
   1473c:	andeq	r4, r1, r4, lsl r8
   14740:	andeq	r4, r1, r4, lsl r8
   14744:	andeq	r4, r1, r4, lsl r8
   14748:	andeq	r4, r1, r4, lsl r8
   1474c:	andeq	r4, r1, r4, lsl r8
   14750:	andeq	r4, r1, r4, lsl r8
   14754:	andeq	r4, r1, r4, lsl r8
   14758:	andeq	r4, r1, r4, lsl r8
   1475c:	andeq	r4, r1, r4, lsl r8
   14760:	andeq	r4, r1, r4, lsl r8
   14764:	andeq	r4, r1, r4, lsl r8
   14768:	andeq	r4, r1, r4, lsl r8
   1476c:	andeq	r4, r1, r4, lsl r8
   14770:	andeq	r4, r1, r4, lsl r8
   14774:	andeq	r4, r1, r4, lsl r8
   14778:	andeq	r4, r1, r4, lsl r8
   1477c:	andeq	r4, r1, r4, lsl r8
   14780:	andeq	r4, r1, r0, lsl r8
   14784:	andeq	r4, r1, r0, lsl r8
   14788:	andeq	r4, r1, r0, lsl r8
   1478c:	andeq	r4, r1, r0, lsl r8
   14790:	andeq	r4, r1, r0, lsl r8
   14794:	andeq	r4, r1, r0, lsl r8
   14798:	andeq	r4, r1, r4, lsl r8
   1479c:	andeq	r4, r1, r4, lsl r8
   147a0:	andeq	r4, r1, r4, lsl r8
   147a4:	andeq	r4, r1, r4, lsl r8
   147a8:	andeq	r4, r1, r4, lsl r8
   147ac:	andeq	r4, r1, r4, lsl r8
   147b0:	andeq	r4, r1, r4, lsl r8
   147b4:	andeq	r4, r1, r4, lsl r8
   147b8:	andeq	r4, r1, r4, lsl r8
   147bc:	andeq	r4, r1, r4, lsl r8
   147c0:	andeq	r4, r1, r4, lsl r8
   147c4:	andeq	r4, r1, r4, lsl r8
   147c8:	andeq	r4, r1, r4, lsl r8
   147cc:	andeq	r4, r1, r4, lsl r8
   147d0:	andeq	r4, r1, r4, lsl r8
   147d4:	andeq	r4, r1, r4, lsl r8
   147d8:	andeq	r4, r1, r4, lsl r8
   147dc:	andeq	r4, r1, r4, lsl r8
   147e0:	andeq	r4, r1, r4, lsl r8
   147e4:	andeq	r4, r1, r4, lsl r8
   147e8:	andeq	r4, r1, r4, lsl r8
   147ec:	andeq	r4, r1, r4, lsl r8
   147f0:	andeq	r4, r1, r4, lsl r8
   147f4:	andeq	r4, r1, r4, lsl r8
   147f8:	andeq	r4, r1, r4, lsl r8
   147fc:	andeq	r4, r1, r4, lsl r8
   14800:	andeq	r4, r1, r0, lsl r8
   14804:	andeq	r4, r1, r0, lsl r8
   14808:	andeq	r4, r1, r0, lsl r8
   1480c:	andeq	r4, r1, r0, lsl r8
   14810:	bx	lr
   14814:	mov	r0, #0
   14818:	bx	lr
   1481c:	sub	r0, r0, #9
   14820:	cmp	r0, #23
   14824:	movhi	r0, #0
   14828:	bxhi	lr
   1482c:	bic	r0, r0, #-16777216	; 0xff000000
   14830:	movw	r1, #31
   14834:	movt	r1, #128	; 0x80
   14838:	mov	r2, #1
   1483c:	and	r0, r2, r1, lsr r0
   14840:	bx	lr
   14844:	sub	r1, r0, #65	; 0x41
   14848:	mov	r0, #0
   1484c:	cmp	r1, #26
   14850:	movwcc	r0, #1
   14854:	bx	lr
   14858:	mov	r1, r0
   1485c:	sub	r2, r0, #48	; 0x30
   14860:	mov	r0, #1
   14864:	cmp	r2, #22
   14868:	bhi	14880 <__mempcpy_chk@plt+0x3830>
   1486c:	mov	ip, #1
   14870:	movw	r3, #1023	; 0x3ff
   14874:	movt	r3, #126	; 0x7e
   14878:	tst	r3, ip, lsl r2
   1487c:	bxne	lr
   14880:	sub	r1, r1, #97	; 0x61
   14884:	cmp	r1, #6
   14888:	movcs	r0, #0
   1488c:	bxcs	lr
   14890:	bx	lr
   14894:	sub	r1, r0, #65	; 0x41
   14898:	cmp	r1, #26
   1489c:	addcc	r0, r0, #32
   148a0:	bx	lr
   148a4:	sub	r1, r0, #97	; 0x61
   148a8:	cmp	r1, #26
   148ac:	subcc	r0, r0, #32
   148b0:	bx	lr
   148b4:	push	{r4, r5, r6, sl, fp, lr}
   148b8:	add	fp, sp, #16
   148bc:	mov	r4, r0
   148c0:	bl	10ed0 <__fpending@plt>
   148c4:	mov	r5, r0
   148c8:	mov	r0, r4
   148cc:	bl	10edc <ferror_unlocked@plt>
   148d0:	mov	r6, r0
   148d4:	mov	r0, r4
   148d8:	bl	1493c <__mempcpy_chk@plt+0x38ec>
   148dc:	cmp	r6, #0
   148e0:	beq	14900 <__mempcpy_chk@plt+0x38b0>
   148e4:	mvn	r4, #0
   148e8:	cmp	r0, #0
   148ec:	bne	14934 <__mempcpy_chk@plt+0x38e4>
   148f0:	bl	10f78 <__errno_location@plt>
   148f4:	mov	r1, #0
   148f8:	str	r1, [r0]
   148fc:	b	14934 <__mempcpy_chk@plt+0x38e4>
   14900:	cmp	r0, #0
   14904:	mov	r4, r0
   14908:	mvnne	r4, #0
   1490c:	cmp	r5, #0
   14910:	bne	14934 <__mempcpy_chk@plt+0x38e4>
   14914:	cmp	r0, #0
   14918:	beq	14934 <__mempcpy_chk@plt+0x38e4>
   1491c:	bl	10f78 <__errno_location@plt>
   14920:	ldr	r0, [r0]
   14924:	subs	r4, r0, #9
   14928:	mvnne	r4, #0
   1492c:	mov	r0, r4
   14930:	pop	{r4, r5, r6, sl, fp, pc}
   14934:	mov	r0, r4
   14938:	pop	{r4, r5, r6, sl, fp, pc}
   1493c:	push	{r4, r5, fp, lr}
   14940:	add	fp, sp, #8
   14944:	sub	sp, sp, #8
   14948:	mov	r4, r0
   1494c:	bl	10fa8 <fileno@plt>
   14950:	cmn	r0, #1
   14954:	ble	149cc <__mempcpy_chk@plt+0x397c>
   14958:	mov	r0, r4
   1495c:	bl	10f30 <__freading@plt>
   14960:	cmp	r0, #0
   14964:	beq	14990 <__mempcpy_chk@plt+0x3940>
   14968:	mov	r0, r4
   1496c:	bl	10fa8 <fileno@plt>
   14970:	mov	r1, #1
   14974:	str	r1, [sp]
   14978:	mov	r2, #0
   1497c:	mov	r3, #0
   14980:	bl	10eb8 <lseek64@plt>
   14984:	and	r0, r0, r1
   14988:	cmn	r0, #1
   1498c:	beq	149cc <__mempcpy_chk@plt+0x397c>
   14990:	mov	r0, r4
   14994:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14998:	cmp	r0, #0
   1499c:	beq	149cc <__mempcpy_chk@plt+0x397c>
   149a0:	bl	10f78 <__errno_location@plt>
   149a4:	ldr	r5, [r0]
   149a8:	mov	r0, r4
   149ac:	bl	10fc0 <fclose@plt>
   149b0:	cmp	r5, #0
   149b4:	beq	149c4 <__mempcpy_chk@plt+0x3974>
   149b8:	bl	10f78 <__errno_location@plt>
   149bc:	str	r5, [r0]
   149c0:	mvn	r0, #0
   149c4:	sub	sp, fp, #8
   149c8:	pop	{r4, r5, fp, pc}
   149cc:	mov	r0, r4
   149d0:	sub	sp, fp, #8
   149d4:	pop	{r4, r5, fp, lr}
   149d8:	b	10fc0 <fclose@plt>
   149dc:	push	{r4, sl, fp, lr}
   149e0:	add	fp, sp, #8
   149e4:	mov	r4, r0
   149e8:	cmp	r0, #0
   149ec:	beq	14a04 <__mempcpy_chk@plt+0x39b4>
   149f0:	mov	r0, r4
   149f4:	bl	10f30 <__freading@plt>
   149f8:	cmp	r0, #0
   149fc:	movne	r0, r4
   14a00:	blne	14a10 <__mempcpy_chk@plt+0x39c0>
   14a04:	mov	r0, r4
   14a08:	pop	{r4, sl, fp, lr}
   14a0c:	b	10e10 <fflush@plt>
   14a10:	ldrb	r1, [r0, #1]
   14a14:	tst	r1, #1
   14a18:	bxeq	lr
   14a1c:	push	{fp, lr}
   14a20:	mov	fp, sp
   14a24:	sub	sp, sp, #8
   14a28:	mov	r1, #1
   14a2c:	str	r1, [sp]
   14a30:	mov	r2, #0
   14a34:	mov	r3, #0
   14a38:	bl	14a44 <__mempcpy_chk@plt+0x39f4>
   14a3c:	mov	sp, fp
   14a40:	pop	{fp, pc}
   14a44:	push	{r4, r5, r6, r7, fp, lr}
   14a48:	add	fp, sp, #16
   14a4c:	sub	sp, sp, #8
   14a50:	mov	r5, r3
   14a54:	mov	r6, r2
   14a58:	mov	r4, r0
   14a5c:	ldr	r0, [r0, #4]
   14a60:	ldr	r1, [r4, #8]
   14a64:	cmp	r1, r0
   14a68:	bne	14a84 <__mempcpy_chk@plt+0x3a34>
   14a6c:	ldrd	r0, [r4, #16]
   14a70:	cmp	r1, r0
   14a74:	bne	14a84 <__mempcpy_chk@plt+0x3a34>
   14a78:	ldr	r0, [r4, #36]	; 0x24
   14a7c:	cmp	r0, #0
   14a80:	beq	14a9c <__mempcpy_chk@plt+0x3a4c>
   14a84:	mov	r0, r4
   14a88:	mov	r2, r6
   14a8c:	mov	r3, r5
   14a90:	sub	sp, fp, #16
   14a94:	pop	{r4, r5, r6, r7, fp, lr}
   14a98:	b	10fcc <fseeko64@plt>
   14a9c:	ldr	r7, [fp, #8]
   14aa0:	mov	r0, r4
   14aa4:	bl	10fa8 <fileno@plt>
   14aa8:	str	r7, [sp]
   14aac:	mov	r2, r6
   14ab0:	mov	r3, r5
   14ab4:	bl	10eb8 <lseek64@plt>
   14ab8:	and	r2, r0, r1
   14abc:	cmn	r2, #1
   14ac0:	mvneq	r0, #0
   14ac4:	subeq	sp, fp, #16
   14ac8:	popeq	{r4, r5, r6, r7, fp, pc}
   14acc:	strd	r0, [r4, #80]	; 0x50
   14ad0:	ldr	r0, [r4]
   14ad4:	bic	r0, r0, #16
   14ad8:	str	r0, [r4]
   14adc:	mov	r0, #0
   14ae0:	sub	sp, fp, #16
   14ae4:	pop	{r4, r5, r6, r7, fp, pc}
   14ae8:	push	{fp, lr}
   14aec:	mov	fp, sp
   14af0:	bl	10f78 <__errno_location@plt>
   14af4:	mov	r1, #12
   14af8:	str	r1, [r0]
   14afc:	mov	r0, #0
   14b00:	pop	{fp, pc}
   14b04:	b	14488 <__mempcpy_chk@plt+0x3438>
   14b08:	cmp	r1, #0
   14b0c:	orreq	r1, r1, #1
   14b10:	b	144b8 <__mempcpy_chk@plt+0x3468>
   14b14:	b	14434 <__mempcpy_chk@plt+0x33e4>
   14b18:	clz	r3, r2
   14b1c:	lsr	ip, r3, #5
   14b20:	clz	r3, r1
   14b24:	lsr	r3, r3, #5
   14b28:	orrs	r3, r3, ip
   14b2c:	movwne	r1, #1
   14b30:	movwne	r2, #1
   14b34:	b	14bd0 <__mempcpy_chk@plt+0x3b80>
   14b38:	push	{fp, lr}
   14b3c:	mov	fp, sp
   14b40:	mov	r0, #14
   14b44:	bl	10ffc <nl_langinfo@plt>
   14b48:	movw	r1, #19999	; 0x4e1f
   14b4c:	movt	r1, #1
   14b50:	cmp	r0, #0
   14b54:	movne	r1, r0
   14b58:	ldrb	r2, [r1]
   14b5c:	movw	r0, #22441	; 0x57a9
   14b60:	movt	r0, #1
   14b64:	cmp	r2, #0
   14b68:	movne	r0, r1
   14b6c:	pop	{fp, pc}
   14b70:	push	{r4, r5, r6, r7, fp, lr}
   14b74:	add	fp, sp, #16
   14b78:	sub	sp, sp, #8
   14b7c:	mov	r7, r2
   14b80:	mov	r4, r1
   14b84:	add	r5, sp, #4
   14b88:	cmp	r0, #0
   14b8c:	movne	r5, r0
   14b90:	mov	r0, r5
   14b94:	bl	10ee8 <mbrtowc@plt>
   14b98:	mov	r6, r0
   14b9c:	cmp	r7, #0
   14ba0:	beq	14bc4 <__mempcpy_chk@plt+0x3b74>
   14ba4:	cmn	r6, #2
   14ba8:	bcc	14bc4 <__mempcpy_chk@plt+0x3b74>
   14bac:	mov	r0, #0
   14bb0:	bl	14c0c <__mempcpy_chk@plt+0x3bbc>
   14bb4:	cmp	r0, #0
   14bb8:	ldrbeq	r0, [r4]
   14bbc:	streq	r0, [r5]
   14bc0:	moveq	r6, #1
   14bc4:	mov	r0, r6
   14bc8:	sub	sp, fp, #16
   14bcc:	pop	{r4, r5, r6, r7, fp, pc}
   14bd0:	cmp	r2, #0
   14bd4:	beq	14c04 <__mempcpy_chk@plt+0x3bb4>
   14bd8:	mvn	r3, #0
   14bdc:	udiv	r3, r3, r2
   14be0:	cmp	r3, r1
   14be4:	bcs	14c04 <__mempcpy_chk@plt+0x3bb4>
   14be8:	push	{fp, lr}
   14bec:	mov	fp, sp
   14bf0:	bl	10f78 <__errno_location@plt>
   14bf4:	mov	r1, #12
   14bf8:	str	r1, [r0]
   14bfc:	mov	r0, #0
   14c00:	pop	{fp, pc}
   14c04:	mul	r1, r2, r1
   14c08:	b	144b8 <__mempcpy_chk@plt+0x3468>
   14c0c:	push	{r4, sl, fp, lr}
   14c10:	add	fp, sp, #8
   14c14:	sub	sp, sp, #264	; 0x108
   14c18:	add	r1, sp, #7
   14c1c:	movw	r2, #257	; 0x101
   14c20:	bl	14c70 <__mempcpy_chk@plt+0x3c20>
   14c24:	mov	r4, #0
   14c28:	cmp	r0, #0
   14c2c:	bne	14c64 <__mempcpy_chk@plt+0x3c14>
   14c30:	add	r0, sp, #7
   14c34:	movw	r1, #22447	; 0x57af
   14c38:	movt	r1, #1
   14c3c:	bl	10e04 <strcmp@plt>
   14c40:	cmp	r0, #0
   14c44:	beq	14c64 <__mempcpy_chk@plt+0x3c14>
   14c48:	add	r0, sp, #7
   14c4c:	movw	r1, #22449	; 0x57b1
   14c50:	movt	r1, #1
   14c54:	bl	10e04 <strcmp@plt>
   14c58:	mov	r4, r0
   14c5c:	cmp	r0, #0
   14c60:	movwne	r4, #1
   14c64:	mov	r0, r4
   14c68:	sub	sp, fp, #8
   14c6c:	pop	{r4, sl, fp, pc}
   14c70:	b	14c74 <__mempcpy_chk@plt+0x3c24>
   14c74:	push	{r4, r5, r6, r7, fp, lr}
   14c78:	add	fp, sp, #16
   14c7c:	mov	r6, r2
   14c80:	mov	r4, r1
   14c84:	bl	14d10 <__mempcpy_chk@plt+0x3cc0>
   14c88:	cmp	r0, #0
   14c8c:	beq	14cbc <__mempcpy_chk@plt+0x3c6c>
   14c90:	mov	r7, r0
   14c94:	bl	10f6c <strlen@plt>
   14c98:	cmp	r0, r6
   14c9c:	bcs	14cdc <__mempcpy_chk@plt+0x3c8c>
   14ca0:	add	r2, r0, #1
   14ca4:	mov	r0, r4
   14ca8:	mov	r1, r7
   14cac:	bl	10e34 <memcpy@plt>
   14cb0:	mov	r5, #0
   14cb4:	mov	r0, r5
   14cb8:	pop	{r4, r5, r6, r7, fp, pc}
   14cbc:	mov	r5, #22
   14cc0:	cmp	r6, #0
   14cc4:	movne	r0, #0
   14cc8:	strbne	r0, [r4]
   14ccc:	movne	r0, r5
   14cd0:	popne	{r4, r5, r6, r7, fp, pc}
   14cd4:	mov	r0, r5
   14cd8:	pop	{r4, r5, r6, r7, fp, pc}
   14cdc:	mov	r5, #34	; 0x22
   14ce0:	cmp	r6, #0
   14ce4:	beq	14d04 <__mempcpy_chk@plt+0x3cb4>
   14ce8:	sub	r6, r6, #1
   14cec:	mov	r0, r4
   14cf0:	mov	r1, r7
   14cf4:	mov	r2, r6
   14cf8:	bl	10e34 <memcpy@plt>
   14cfc:	mov	r0, #0
   14d00:	strb	r0, [r4, r6]
   14d04:	mov	r0, r5
   14d08:	pop	{r4, r5, r6, r7, fp, pc}
   14d0c:	b	14d10 <__mempcpy_chk@plt+0x3cc0>
   14d10:	mov	r1, #0
   14d14:	b	10fe4 <setlocale@plt>
   14d18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d1c:	mov	r7, r0
   14d20:	ldr	r6, [pc, #72]	; 14d70 <__mempcpy_chk@plt+0x3d20>
   14d24:	ldr	r5, [pc, #72]	; 14d74 <__mempcpy_chk@plt+0x3d24>
   14d28:	add	r6, pc, r6
   14d2c:	add	r5, pc, r5
   14d30:	sub	r6, r6, r5
   14d34:	mov	r8, r1
   14d38:	mov	r9, r2
   14d3c:	bl	10dcc <calloc@plt-0x20>
   14d40:	asrs	r6, r6, #2
   14d44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d48:	mov	r4, #0
   14d4c:	add	r4, r4, #1
   14d50:	ldr	r3, [r5], #4
   14d54:	mov	r2, r9
   14d58:	mov	r1, r8
   14d5c:	mov	r0, r7
   14d60:	blx	r3
   14d64:	cmp	r6, r4
   14d68:	bne	14d4c <__mempcpy_chk@plt+0x3cfc>
   14d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d70:	ldrdeq	r1, [r1], -ip
   14d74:	ldrdeq	r1, [r1], -r4
   14d78:	bx	lr
   14d7c:	ldr	r3, [pc, #12]	; 14d90 <__mempcpy_chk@plt+0x3d40>
   14d80:	mov	r1, #0
   14d84:	add	r3, pc, r3
   14d88:	ldr	r2, [r3]
   14d8c:	b	10f84 <__cxa_atexit@plt>
   14d90:	andeq	r1, r1, r8, asr r3

Disassembly of section .fini:

00014d94 <.fini>:
   14d94:	push	{r3, lr}
   14d98:	pop	{r3, pc}
