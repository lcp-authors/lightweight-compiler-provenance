
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

0001082c <.init>:
   1082c:	push	{r3, lr}
   10830:	bl	10948 <_start@@Base+0x3c>
   10834:	pop	{r3, pc}

Disassembly of section .plt:

00010838 <strcmp@plt-0x14>:
   10838:	push	{lr}		; (str lr, [sp, #-4]!)
   1083c:	ldr	lr, [pc, #4]	; 10848 <strcmp@plt-0x4>
   10840:	add	lr, pc, lr
   10844:	ldr	pc, [lr, #8]!
   10848:			; <UNDEFINED> instruction: 0x000107b8

0001084c <strcmp@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #16, 20	; 0x10000
   10854:	ldr	pc, [ip, #1976]!	; 0x7b8

00010858 <printf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #16, 20	; 0x10000
   10860:	ldr	pc, [ip, #1968]!	; 0x7b0

00010864 <__isoc99_fscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #16, 20	; 0x10000
   1086c:	ldr	pc, [ip, #1960]!	; 0x7a8

00010870 <fopen@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #16, 20	; 0x10000
   10878:	ldr	pc, [ip, #1952]!	; 0x7a0

0001087c <free@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #16, 20	; 0x10000
   10884:	ldr	pc, [ip, #1944]!	; 0x798

00010888 <fwrite_unlocked@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #16, 20	; 0x10000
   10890:	ldr	pc, [ip, #1936]!	; 0x790

00010894 <realloc@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #16, 20	; 0x10000
   1089c:	ldr	pc, [ip, #1928]!	; 0x788

000108a0 <fwrite@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #16, 20	; 0x10000
   108a8:	ldr	pc, [ip, #1920]!	; 0x780

000108ac <strcpy@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #16, 20	; 0x10000
   108b4:	ldr	pc, [ip, #1912]!	; 0x778

000108b8 <malloc@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #16, 20	; 0x10000
   108c0:	ldr	pc, [ip, #1904]!	; 0x770

000108c4 <__libc_start_main@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #16, 20	; 0x10000
   108cc:	ldr	pc, [ip, #1896]!	; 0x768

000108d0 <__gmon_start__@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #16, 20	; 0x10000
   108d8:	ldr	pc, [ip, #1888]!	; 0x760

000108dc <fprintf@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #16, 20	; 0x10000
   108e4:	ldr	pc, [ip, #1880]!	; 0x758

000108e8 <fclose@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #16, 20	; 0x10000
   108f0:	ldr	pc, [ip, #1872]!	; 0x750

000108f4 <__isoc99_scanf@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #16, 20	; 0x10000
   108fc:	ldr	pc, [ip, #1864]!	; 0x748

00010900 <abort@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #16, 20	; 0x10000
   10908:	ldr	pc, [ip, #1856]!	; 0x740

Disassembly of section .text:

0001090c <_start@@Base>:
   1090c:	mov	fp, #0
   10910:	mov	lr, #0
   10914:	pop	{r1}		; (ldr r1, [sp], #4)
   10918:	mov	r2, sp
   1091c:	push	{r2}		; (str r2, [sp, #-4]!)
   10920:	push	{r0}		; (str r0, [sp, #-4]!)
   10924:	ldr	ip, [pc, #16]	; 1093c <_start@@Base+0x30>
   10928:	push	{ip}		; (str ip, [sp, #-4]!)
   1092c:	ldr	r0, [pc, #12]	; 10940 <_start@@Base+0x34>
   10930:	ldr	r3, [pc, #12]	; 10944 <_start@@Base+0x38>
   10934:	bl	108c4 <__libc_start_main@plt>
   10938:	bl	10900 <abort@plt>
   1093c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10940:	andeq	r0, r1, r4, ror fp
   10944:	muleq	r1, r0, ip
   10948:	ldr	r3, [pc, #20]	; 10964 <_start@@Base+0x58>
   1094c:	ldr	r2, [pc, #20]	; 10968 <_start@@Base+0x5c>
   10950:	add	r3, pc, r3
   10954:	ldr	r2, [r3, r2]
   10958:	cmp	r2, #0
   1095c:	bxeq	lr
   10960:	b	108d0 <__gmon_start__@plt>
   10964:	andeq	r0, r1, r8, lsr #13
   10968:	andeq	r0, r0, ip, asr #32
   1096c:	ldr	r0, [pc, #24]	; 1098c <_start@@Base+0x80>
   10970:	ldr	r3, [pc, #24]	; 10990 <_start@@Base+0x84>
   10974:	cmp	r3, r0
   10978:	bxeq	lr
   1097c:	ldr	r3, [pc, #16]	; 10994 <_start@@Base+0x88>
   10980:	cmp	r3, #0
   10984:	bxeq	lr
   10988:	bx	r3
   1098c:	andeq	r1, r2, r8, asr r0
   10990:	andeq	r1, r2, r8, asr r0
   10994:	andeq	r0, r0, r0
   10998:	ldr	r0, [pc, #36]	; 109c4 <_start@@Base+0xb8>
   1099c:	ldr	r1, [pc, #36]	; 109c8 <_start@@Base+0xbc>
   109a0:	sub	r1, r1, r0
   109a4:	asr	r1, r1, #2
   109a8:	add	r1, r1, r1, lsr #31
   109ac:	asrs	r1, r1, #1
   109b0:	bxeq	lr
   109b4:	ldr	r3, [pc, #16]	; 109cc <_start@@Base+0xc0>
   109b8:	cmp	r3, #0
   109bc:	bxeq	lr
   109c0:	bx	r3
   109c4:	andeq	r1, r2, r8, asr r0
   109c8:	andeq	r1, r2, r8, asr r0
   109cc:	andeq	r0, r0, r0
   109d0:	push	{r4, lr}
   109d4:	ldr	r4, [pc, #24]	; 109f4 <_start@@Base+0xe8>
   109d8:	ldrb	r3, [r4]
   109dc:	cmp	r3, #0
   109e0:	popne	{r4, pc}
   109e4:	bl	1096c <_start@@Base+0x60>
   109e8:	mov	r3, #1
   109ec:	strb	r3, [r4]
   109f0:	pop	{r4, pc}
   109f4:	andeq	r1, r2, r8, asr r0
   109f8:	b	10998 <_start@@Base+0x8c>

000109fc <analisarFicheiro@@Base>:
   109fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a00:	add	fp, sp, #28
   10a04:	sub	sp, sp, #60	; 0x3c
   10a08:	mov	r6, r0
   10a0c:	mov	r0, #104	; 0x68
   10a10:	str	r1, [sp, #4]
   10a14:	bl	108b8 <malloc@plt>
   10a18:	movw	r1, #3328	; 0xd00
   10a1c:	mov	r7, r0
   10a20:	add	r2, sp, #10
   10a24:	mov	r0, r6
   10a28:	movt	r1, #1
   10a2c:	bl	10864 <__isoc99_fscanf@plt>
   10a30:	mov	r8, #0
   10a34:	cmn	r0, #1
   10a38:	beq	10ae8 <analisarFicheiro@@Base+0xec>
   10a3c:	add	r4, sp, #10
   10a40:	cmp	r8, #0
   10a44:	bpl	10a7c <analisarFicheiro@@Base+0x80>
   10a48:	b	10a58 <analisarFicheiro@@Base+0x5c>
   10a4c:	ldr	r0, [r5, #100]	; 0x64
   10a50:	add	r0, r0, #1
   10a54:	str	r0, [r5, #100]	; 0x64
   10a58:	movw	r1, #3328	; 0xd00
   10a5c:	mov	r0, r6
   10a60:	mov	r2, r4
   10a64:	movt	r1, #1
   10a68:	bl	10864 <__isoc99_fscanf@plt>
   10a6c:	cmn	r0, #1
   10a70:	beq	10ae8 <analisarFicheiro@@Base+0xec>
   10a74:	cmp	r8, #0
   10a78:	bmi	10a58 <analisarFicheiro@@Base+0x5c>
   10a7c:	rsb	r9, r8, #0
   10a80:	add	sl, r8, #1
   10a84:	mov	r5, r7
   10a88:	mov	r0, r4
   10a8c:	mov	r1, r5
   10a90:	bl	1084c <strcmp@plt>
   10a94:	cmp	r0, #0
   10a98:	beq	10a4c <analisarFicheiro@@Base+0x50>
   10a9c:	cmp	r9, #0
   10aa0:	beq	10ab8 <analisarFicheiro@@Base+0xbc>
   10aa4:	add	r9, r9, #1
   10aa8:	add	r5, r5, #104	; 0x68
   10aac:	cmp	r9, #1
   10ab0:	bne	10a88 <analisarFicheiro@@Base+0x8c>
   10ab4:	b	10a58 <analisarFicheiro@@Base+0x5c>
   10ab8:	mov	r5, #104	; 0x68
   10abc:	mov	r0, r7
   10ac0:	mul	r1, sl, r5
   10ac4:	bl	10894 <realloc@plt>
   10ac8:	mov	r7, r0
   10acc:	mla	r0, r8, r5, r0
   10ad0:	mov	r1, r4
   10ad4:	bl	108ac <strcpy@plt>
   10ad8:	mov	r1, #1
   10adc:	mov	r8, sl
   10ae0:	str	r1, [r0, #100]	; 0x64
   10ae4:	b	10a58 <analisarFicheiro@@Base+0x5c>
   10ae8:	ldr	r0, [sp, #4]
   10aec:	str	r8, [r0]
   10af0:	mov	r0, r7
   10af4:	sub	sp, fp, #28
   10af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010afc <gerarRelatorio@@Base>:
   10afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10b00:	add	fp, sp, #24
   10b04:	sub	sp, sp, #8
   10b08:	mov	r6, r0
   10b0c:	movw	r0, #3331	; 0xd03
   10b10:	mov	r4, r2
   10b14:	mov	r5, r1
   10b18:	mov	r1, #53	; 0x35
   10b1c:	mov	r2, #1
   10b20:	movt	r0, #1
   10b24:	mov	r3, r6
   10b28:	bl	108a0 <fwrite@plt>
   10b2c:	cmp	r4, #1
   10b30:	blt	10b6c <gerarRelatorio@@Base+0x70>
   10b34:	movw	r8, #3385	; 0xd39
   10b38:	mov	r7, #0
   10b3c:	movt	r8, #1
   10b40:	ldr	r0, [r5, #100]	; 0x64
   10b44:	add	r7, r7, #1
   10b48:	mov	r1, r8
   10b4c:	mov	r3, r5
   10b50:	mov	r2, r7
   10b54:	str	r0, [sp]
   10b58:	mov	r0, r6
   10b5c:	bl	108dc <fprintf@plt>
   10b60:	add	r5, r5, #104	; 0x68
   10b64:	cmp	r4, r7
   10b68:	bne	10b40 <gerarRelatorio@@Base+0x44>
   10b6c:	sub	sp, fp, #24
   10b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010b74 <main@@Base>:
   10b74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b78:	add	fp, sp, #28
   10b7c:	sub	sp, sp, #108	; 0x6c
   10b80:	movw	r0, #3398	; 0xd46
   10b84:	movt	r0, #1
   10b88:	bl	10858 <printf@plt>
   10b8c:	movw	r4, #3328	; 0xd00
   10b90:	add	r5, sp, #58	; 0x3a
   10b94:	movt	r4, #1
   10b98:	mov	r1, r5
   10b9c:	mov	r0, r4
   10ba0:	bl	108f4 <__isoc99_scanf@plt>
   10ba4:	movw	r0, #3420	; 0xd5c
   10ba8:	movt	r0, #1
   10bac:	bl	10858 <printf@plt>
   10bb0:	add	r1, sp, #8
   10bb4:	mov	r0, r4
   10bb8:	bl	108f4 <__isoc99_scanf@plt>
   10bbc:	movw	r1, #3440	; 0xd70
   10bc0:	mov	r0, r5
   10bc4:	movt	r1, #1
   10bc8:	bl	10870 <fopen@plt>
   10bcc:	mov	r6, #1
   10bd0:	cmp	r0, #0
   10bd4:	beq	10c84 <main@@Base+0x110>
   10bd8:	movw	r1, #3442	; 0xd72
   10bdc:	mov	r9, r0
   10be0:	add	r0, sp, #8
   10be4:	movt	r1, #1
   10be8:	bl	10870 <fopen@plt>
   10bec:	cmp	r0, #0
   10bf0:	beq	10c84 <main@@Base+0x110>
   10bf4:	mov	r5, r0
   10bf8:	add	r1, sp, #4
   10bfc:	mov	r0, r9
   10c00:	bl	109fc <analisarFicheiro@@Base>
   10c04:	mov	r8, r0
   10c08:	movw	r0, #3331	; 0xd03
   10c0c:	ldr	r6, [sp, #4]
   10c10:	mov	r1, #53	; 0x35
   10c14:	mov	r2, #1
   10c18:	mov	r3, r5
   10c1c:	movt	r0, #1
   10c20:	bl	10888 <fwrite_unlocked@plt>
   10c24:	cmp	r6, #1
   10c28:	blt	10c68 <main@@Base+0xf4>
   10c2c:	movw	sl, #3385	; 0xd39
   10c30:	mov	r7, #0
   10c34:	mov	r4, r8
   10c38:	movt	sl, #1
   10c3c:	ldr	r0, [r4, #100]	; 0x64
   10c40:	add	r7, r7, #1
   10c44:	mov	r1, sl
   10c48:	mov	r3, r4
   10c4c:	mov	r2, r7
   10c50:	str	r0, [sp]
   10c54:	mov	r0, r5
   10c58:	bl	108dc <fprintf@plt>
   10c5c:	add	r4, r4, #104	; 0x68
   10c60:	cmp	r6, r7
   10c64:	bne	10c3c <main@@Base+0xc8>
   10c68:	mov	r0, r9
   10c6c:	bl	108e8 <fclose@plt>
   10c70:	mov	r0, r5
   10c74:	bl	108e8 <fclose@plt>
   10c78:	mov	r0, r8
   10c7c:	bl	1087c <free@plt>
   10c80:	mov	r6, #0
   10c84:	mov	r0, r6
   10c88:	sub	sp, fp, #28
   10c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010c90 <__libc_csu_init@@Base>:
   10c90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c94:	mov	r7, r0
   10c98:	ldr	r6, [pc, #72]	; 10ce8 <__libc_csu_init@@Base+0x58>
   10c9c:	ldr	r5, [pc, #72]	; 10cec <__libc_csu_init@@Base+0x5c>
   10ca0:	add	r6, pc, r6
   10ca4:	add	r5, pc, r5
   10ca8:	sub	r6, r6, r5
   10cac:	mov	r8, r1
   10cb0:	mov	r9, r2
   10cb4:	bl	1082c <strcmp@plt-0x20>
   10cb8:	asrs	r6, r6, #2
   10cbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cc0:	mov	r4, #0
   10cc4:	add	r4, r4, #1
   10cc8:	ldr	r3, [r5], #4
   10ccc:	mov	r2, r9
   10cd0:	mov	r1, r8
   10cd4:	mov	r0, r7
   10cd8:	blx	r3
   10cdc:	cmp	r6, r4
   10ce0:	bne	10cc4 <__libc_csu_init@@Base+0x34>
   10ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ce8:	andeq	r0, r1, r4, ror #4
   10cec:	andeq	r0, r1, ip, asr r2

00010cf0 <__libc_csu_fini@@Base>:
   10cf0:	bx	lr

Disassembly of section .fini:

00010cf4 <.fini>:
   10cf4:	push	{r3, lr}
   10cf8:	pop	{r3, pc}
