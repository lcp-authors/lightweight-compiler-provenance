
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b18 <_init>:
 b18:	push	{r3, lr}
 b1c:	bl	cdc <call_weak_fn>
 b20:	pop	{r3, pc}

Disassembly of section .plt:

00000b24 <.plt>:
 b24:	push	{lr}		; (str lr, [sp, #-4]!)
 b28:	ldr	lr, [pc, #4]	; b34 <.plt+0x10>
 b2c:	add	lr, pc, lr
 b30:	ldr	pc, [lr, #8]!
 b34:	.word	0x000124cc

00000b38 <make_conf@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1228]!	; 0x4cc

00000b44 <parse_netmask_strict@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1220]!	; 0x4c4

00000b50 <rb_current_time@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1212]!	; 0x4bc

00000b5c <sendto_match_servs@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1204]!	; 0x4b4

00000b68 <__cxa_finalize@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1196]!	; 0x4ac

00000b74 <strtol@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1188]!	; 0x4a4

00000b80 <sendto_one@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1180]!	; 0x49c

00000b8c <rb_outofmemory@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1172]!	; 0x494

00000b98 <parse_netmask@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1164]!	; 0x48c

00000ba4 <sendto_realops_snomask@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1156]!	; 0x484

00000bb0 <bandb_add@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1148]!	; 0x47c

00000bbc <get_oper_name@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1140]!	; 0x474

00000bc8 <rb_free_rb_dlink_node@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1132]!	; 0x46c

00000bd4 <operhash_add@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1124]!	; 0x464

00000be0 <strcpy@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1116]!	; 0x45c

00000bec <add_temp_dline@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1108]!	; 0x454

00000bf8 <rb_set_time@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #1100]!	; 0x44c

00000c04 <malloc@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #73728	; 0x12000
 c0c:	ldr	pc, [ip, #1092]!	; 0x444

00000c10 <add_conf_by_address@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #73728	; 0x12000
 c18:	ldr	pc, [ip, #1084]!	; 0x43c

00000c1c <__gmon_start__@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #73728	; 0x12000
 c24:	ldr	pc, [ip, #1076]!	; 0x434

00000c28 <strlen@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #73728	; 0x12000
 c30:	ldr	pc, [ip, #1068]!	; 0x42c

00000c34 <strchr@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #73728	; 0x12000
 c3c:	ldr	pc, [ip, #1060]!	; 0x424

00000c40 <delete_one_address_conf@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #73728	; 0x12000
 c48:	ldr	pc, [ip, #1052]!	; 0x41c

00000c4c <ilog@plt>:
 c4c:	add	ip, pc, #0, 12
 c50:	add	ip, ip, #73728	; 0x12000
 c54:	ldr	pc, [ip, #1044]!	; 0x414

00000c58 <match@plt>:
 c58:	add	ip, pc, #0, 12
 c5c:	add	ip, ip, #73728	; 0x12000
 c60:	ldr	pc, [ip, #1036]!	; 0x40c

00000c64 <valid_temp_time@plt>:
 c64:	add	ip, pc, #0, 12
 c68:	add	ip, ip, #73728	; 0x12000
 c6c:	ldr	pc, [ip, #1028]!	; 0x404

00000c70 <check_dlines@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #73728	; 0x12000
 c78:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c7c <sendto_one_notice@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #73728	; 0x12000
 c84:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c88 <bandb_del@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #73728	; 0x12000
 c90:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c94 <find_exact_conf_by_address@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #73728	; 0x12000
 c9c:	ldr	pc, [ip, #996]!	; 0x3e4

00000ca0 <rb_strlcpy@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #73728	; 0x12000
 ca8:	ldr	pc, [ip, #988]!	; 0x3dc

00000cac <find_shared_conf@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #73728	; 0x12000
 cb4:	ldr	pc, [ip, #980]!	; 0x3d4

00000cb8 <privilegeset_in_set@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #73728	; 0x12000
 cc0:	ldr	pc, [ip, #972]!	; 0x3cc

00000cc4 <irccmp@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #964]!	; 0x3c4

00000cd0 <find_dline@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #73728	; 0x12000
 cd8:	ldr	pc, [ip, #956]!	; 0x3bc

Disassembly of section .text:

00000cdc <call_weak_fn>:
     cdc:	ldr	r3, [pc, #20]	; cf8 <call_weak_fn+0x1c>
     ce0:	ldr	r2, [pc, #20]	; cfc <call_weak_fn+0x20>
     ce4:	add	r3, pc, r3
     ce8:	ldr	r2, [r3, r2]
     cec:	cmp	r2, #0
     cf0:	bxeq	lr
     cf4:	b	c1c <__gmon_start__@plt>
     cf8:	.word	0x00012314
     cfc:	.word	0x000000a0

00000d00 <deregister_tm_clones>:
     d00:	ldr	r0, [pc, #44]	; d34 <deregister_tm_clones+0x34>
     d04:	ldr	r3, [pc, #44]	; d38 <deregister_tm_clones+0x38>
     d08:	add	r0, pc, r0
     d0c:	add	r3, pc, r3
     d10:	cmp	r3, r0
     d14:	ldr	r3, [pc, #32]	; d3c <deregister_tm_clones+0x3c>
     d18:	add	r3, pc, r3
     d1c:	bxeq	lr
     d20:	ldr	r2, [pc, #24]	; d40 <deregister_tm_clones+0x40>
     d24:	ldr	r3, [r3, r2]
     d28:	cmp	r3, #0
     d2c:	bxeq	lr
     d30:	bx	r3
     d34:	.word	0x00012468
     d38:	.word	0x00012464
     d3c:	.word	0x000122e0
     d40:	.word	0x0000009c

00000d44 <register_tm_clones>:
     d44:	ldr	r0, [pc, #56]	; d84 <register_tm_clones+0x40>
     d48:	ldr	r3, [pc, #56]	; d88 <register_tm_clones+0x44>
     d4c:	add	r0, pc, r0
     d50:	add	r3, pc, r3
     d54:	sub	r1, r3, r0
     d58:	ldr	r3, [pc, #44]	; d8c <register_tm_clones+0x48>
     d5c:	asr	r1, r1, #2
     d60:	add	r3, pc, r3
     d64:	add	r1, r1, r1, lsr #31
     d68:	asrs	r1, r1, #1
     d6c:	bxeq	lr
     d70:	ldr	r2, [pc, #24]	; d90 <register_tm_clones+0x4c>
     d74:	ldr	r3, [r3, r2]
     d78:	cmp	r3, #0
     d7c:	bxeq	lr
     d80:	bx	r3
     d84:	.word	0x00012424
     d88:	.word	0x00012420
     d8c:	.word	0x00012298
     d90:	.word	0x000000a8

00000d94 <__do_global_dtors_aux>:
     d94:	ldr	r3, [pc, #76]	; de8 <__do_global_dtors_aux+0x54>
     d98:	ldr	r2, [pc, #76]	; dec <__do_global_dtors_aux+0x58>
     d9c:	add	r3, pc, r3
     da0:	add	r2, pc, r2
     da4:	ldrb	r3, [r3]
     da8:	cmp	r3, #0
     dac:	bxne	lr
     db0:	ldr	r3, [pc, #56]	; df0 <__do_global_dtors_aux+0x5c>
     db4:	push	{r4, lr}
     db8:	ldr	r3, [r2, r3]
     dbc:	cmp	r3, #0
     dc0:	beq	dd0 <__do_global_dtors_aux+0x3c>
     dc4:	ldr	r3, [pc, #40]	; df4 <__do_global_dtors_aux+0x60>
     dc8:	ldr	r0, [pc, r3]
     dcc:	bl	b68 <__cxa_finalize@plt>
     dd0:	bl	d00 <deregister_tm_clones>
     dd4:	ldr	r3, [pc, #28]	; df8 <__do_global_dtors_aux+0x64>
     dd8:	mov	r2, #1
     ddc:	add	r3, pc, r3
     de0:	strb	r2, [r3]
     de4:	pop	{r4, pc}
     de8:	.word	0x000123d4
     dec:	.word	0x00012258
     df0:	.word	0x00000098
     df4:	.word	0x000122e8
     df8:	.word	0x00012394

00000dfc <frame_dummy>:
     dfc:	b	d44 <register_tm_clones>

00000e00 <me_dline>:
     e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     e04:	add	fp, sp, #24
     e08:	ldr	r6, [fp, #8]
     e0c:	mov	r4, r2
     e10:	mov	r1, #0
     e14:	mov	r2, #10
     e18:	ldr	r0, [r6, #4]
     e1c:	bl	b74 <strtol@plt>
     e20:	mov	r5, r0
     e24:	ldrh	r0, [r4, #80]	; 0x50
     e28:	cmp	r0, #64	; 0x40
     e2c:	bne	ea8 <me_dline+0xa8>
     e30:	ldr	r0, [r4, #24]
     e34:	cmp	r0, #0
     e38:	beq	ea8 <me_dline+0xa8>
     e3c:	ldr	r2, [r4, #32]
     e40:	mov	r3, #4096	; 0x1000
     e44:	cmp	r5, #0
     e48:	add	r0, r4, #152	; 0x98
     e4c:	add	r1, r4, #163	; 0xa3
     e50:	movwgt	r3, #2048	; 0x800
     e54:	add	r2, r2, #88	; 0x58
     e58:	bl	cac <find_shared_conf@plt>
     e5c:	cmp	r0, #0
     e60:	beq	ea8 <me_dline+0xa8>
     e64:	ldr	r7, [r6, #12]
     e68:	ldr	r8, [r6, #8]
     e6c:	mov	r0, r7
     e70:	bl	c28 <strlen@plt>
     e74:	add	r0, r0, #8
     e78:	bic	r0, r0, #7
     e7c:	sub	r6, sp, r0
     e80:	mov	sp, r6
     e84:	mov	r0, r6
     e88:	mov	r1, r7
     e8c:	bl	be0 <strcpy@plt>
     e90:	mov	r0, r4
     e94:	mov	r1, r8
     e98:	mov	r2, r5
     e9c:	mov	r3, r6
     ea0:	bl	130c <apply_dline>
     ea4:	bl	c70 <check_dlines@plt>
     ea8:	sub	sp, fp, #24
     eac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000eb0 <mo_dline>:
     eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     eb4:	add	fp, sp, #28
     eb8:	sub	sp, sp, #92	; 0x5c
     ebc:	ldr	r0, [pc, #604]	; 1120 <mo_dline+0x270>
     ec0:	mov	r4, r2
     ec4:	add	r0, pc, r0
     ec8:	vldr	d16, [r0]
     ecc:	mov	r0, #110	; 0x6e
     ed0:	strh	r0, [fp, #-40]	; 0xffffffd8
     ed4:	vstr	d16, [fp, #-48]	; 0xffffffd0
     ed8:	ldr	r0, [r2, #24]
     edc:	cmp	r0, #0
     ee0:	ldrne	r0, [r0, #36]	; 0x24
     ee4:	cmpne	r0, #0
     ee8:	bne	f28 <mo_dline+0x78>
     eec:	sub	sp, sp, #8
     ef0:	ldr	r0, [pc, #560]	; 1128 <mo_dline+0x278>
     ef4:	add	r0, pc, r0
     ef8:	str	r0, [sp]
     efc:	add	r3, r4, #88	; 0x58
     f00:	ldr	r0, [pc, #548]	; 112c <mo_dline+0x27c>
     f04:	ldr	r0, [pc, r0]
     f08:	ldr	r1, [pc, #544]	; 1130 <mo_dline+0x280>
     f0c:	add	r2, r0, #88	; 0x58
     f10:	add	r1, pc, r1
     f14:	mov	r0, r4
     f18:	bl	b80 <sendto_one@plt>
     f1c:	add	sp, sp, #8
     f20:	sub	sp, fp, #28
     f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f28:	ldr	r1, [pc, #500]	; 1124 <mo_dline+0x274>
     f2c:	mov	r7, r3
     f30:	add	r1, pc, r1
     f34:	bl	cb8 <privilegeset_in_set@plt>
     f38:	cmp	r0, #0
     f3c:	beq	eec <mo_dline+0x3c>
     f40:	ldr	r9, [fp, #8]
     f44:	ldr	r0, [r9, #4]
     f48:	bl	c64 <valid_temp_time@plt>
     f4c:	mov	r6, #1
     f50:	cmn	r0, #1
     f54:	mov	sl, r0
     f58:	sub	r0, fp, #112	; 0x70
     f5c:	mov	r2, #64	; 0x40
     f60:	movwgt	r6, #2
     f64:	ldr	r5, [r9, r6, lsl #2]
     f68:	mov	r1, r5
     f6c:	bl	ca0 <rb_strlcpy@plt>
     f70:	ldrb	r0, [r5]
     f74:	cmp	r0, #58	; 0x3a
     f78:	bne	f88 <mo_dline+0xd8>
     f7c:	ldr	r1, [pc, #432]	; 1134 <mo_dline+0x284>
     f80:	add	r1, pc, r1
     f84:	b	103c <mo_dline+0x18c>
     f88:	mov	r0, r5
     f8c:	mov	r1, #0
     f90:	mov	r2, #0
     f94:	bl	b44 <parse_netmask_strict@plt>
     f98:	orr	r0, r0, #1
     f9c:	cmp	r0, #3
     fa0:	bne	1034 <mo_dline+0x184>
     fa4:	mov	r0, #0
     fa8:	add	r8, r6, #1
     fac:	str	r0, [fp, #-116]	; 0xffffff8c
     fb0:	add	r0, r6, #3
     fb4:	cmp	r0, r7
     fb8:	bgt	fd8 <mo_dline+0x128>
     fbc:	str	r0, [fp, #-120]	; 0xffffff88
     fc0:	ldr	r0, [r9, r8, lsl #2]
     fc4:	ldr	r1, [pc, #368]	; 113c <mo_dline+0x28c>
     fc8:	add	r1, pc, r1
     fcc:	bl	cc4 <irccmp@plt>
     fd0:	cmp	r0, #0
     fd4:	beq	10d4 <mo_dline+0x224>
     fd8:	sub	r1, fp, #48	; 0x30
     fdc:	cmp	r8, r7
     fe0:	bge	1050 <mo_dline+0x1a0>
     fe4:	ldr	r8, [r9, r8, lsl #2]
     fe8:	cmp	r8, #0
     fec:	beq	1050 <mo_dline+0x1a0>
     ff0:	ldrb	r0, [r8]
     ff4:	ldr	r6, [fp, #-116]	; 0xffffff8c
     ff8:	mov	r7, r1
     ffc:	cmp	r0, #0
    1000:	beq	1058 <mo_dline+0x1a8>
    1004:	mov	r0, r8
    1008:	bl	c28 <strlen@plt>
    100c:	add	r0, r0, #8
    1010:	bic	r0, r0, #7
    1014:	sub	r7, sp, r0
    1018:	mov	sp, r7
    101c:	mov	r0, r7
    1020:	mov	r1, r8
    1024:	bl	be0 <strcpy@plt>
    1028:	cmp	r6, #0
    102c:	bne	1060 <mo_dline+0x1b0>
    1030:	b	10b4 <mo_dline+0x204>
    1034:	ldr	r1, [pc, #252]	; 1138 <mo_dline+0x288>
    1038:	add	r1, pc, r1
    103c:	mov	r0, r4
    1040:	mov	r2, r5
    1044:	bl	c7c <sendto_one_notice@plt>
    1048:	sub	sp, fp, #28
    104c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1050:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1054:	mov	r7, r1
    1058:	cmp	r6, #0
    105c:	beq	10b4 <mo_dline+0x204>
    1060:	ldr	r0, [pc, #224]	; 1148 <mo_dline+0x298>
    1064:	ldr	r0, [pc, r0]
    1068:	ldr	r2, [r0]
    106c:	sub	sp, sp, #24
    1070:	ldr	r0, [pc, #212]	; 114c <mo_dline+0x29c>
    1074:	mov	r1, r6
    1078:	mov	r3, #0
    107c:	add	r0, pc, r0
    1080:	stm	sp, {r0, r6, sl}
    1084:	mov	r0, r4
    1088:	str	r5, [sp, #12]
    108c:	str	r7, [sp, #16]
    1090:	bl	b5c <sendto_match_servs@plt>
    1094:	add	sp, sp, #24
    1098:	ldr	r0, [pc, #176]	; 1150 <mo_dline+0x2a0>
    109c:	ldr	r0, [pc, r0]
    10a0:	add	r1, r0, #88	; 0x58
    10a4:	mov	r0, r6
    10a8:	bl	c58 <match@plt>
    10ac:	cmp	r0, #0
    10b0:	beq	10cc <mo_dline+0x21c>
    10b4:	mov	r0, r4
    10b8:	mov	r1, r5
    10bc:	mov	r2, sl
    10c0:	mov	r3, r7
    10c4:	bl	130c <apply_dline>
    10c8:	bl	c70 <check_dlines@plt>
    10cc:	sub	sp, fp, #28
    10d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10d4:	ldr	r0, [r4, #24]
    10d8:	cmp	r0, #0
    10dc:	ldrne	r0, [r0, #36]	; 0x24
    10e0:	cmpne	r0, #0
    10e4:	bne	10f8 <mo_dline+0x248>
    10e8:	sub	sp, sp, #8
    10ec:	ldr	r0, [pc, #80]	; 1144 <mo_dline+0x294>
    10f0:	add	r0, pc, r0
    10f4:	b	ef8 <mo_dline+0x48>
    10f8:	ldr	r1, [pc, #64]	; 1140 <mo_dline+0x290>
    10fc:	add	r1, pc, r1
    1100:	bl	cb8 <privilegeset_in_set@plt>
    1104:	cmp	r0, #0
    1108:	beq	10e8 <mo_dline+0x238>
    110c:	add	r0, r9, r6, lsl #2
    1110:	ldr	r8, [fp, #-120]	; 0xffffff88
    1114:	ldr	r0, [r0, #8]
    1118:	str	r0, [fp, #-116]	; 0xffffff8c
    111c:	b	fd8 <mo_dline+0x128>
    1120:	.word	0x00001084
    1124:	.word	0x00000c10
    1128:	.word	0x00000c51
    112c:	.word	0x000121a0
    1130:	.word	0x00000c3b
    1134:	.word	0x00000bf2
    1138:	.word	0x00000b68
    113c:	.word	0x00000c0b
    1140:	.word	0x00000ada
    1144:	.word	0x00000aeb
    1148:	.word	0x00012044
    114c:	.word	0x00000b69
    1150:	.word	0x00012008

00001154 <me_undline>:
    1154:	push	{r4, r5, fp, lr}
    1158:	add	fp, sp, #8
    115c:	ldrh	r0, [r2, #80]	; 0x50
    1160:	cmp	r0, #64	; 0x40
    1164:	bne	11ac <me_undline+0x58>
    1168:	ldr	r0, [r2, #24]
    116c:	mov	r4, r2
    1170:	cmp	r0, #0
    1174:	popeq	{r4, r5, fp, pc}
    1178:	ldr	r2, [r4, #32]
    117c:	ldr	r5, [fp, #8]
    1180:	add	r0, r4, #152	; 0x98
    1184:	add	r1, r4, #163	; 0xa3
    1188:	mov	r3, #8192	; 0x2000
    118c:	add	r2, r2, #88	; 0x58
    1190:	bl	cac <find_shared_conf@plt>
    1194:	cmp	r0, #0
    1198:	beq	11ac <me_undline+0x58>
    119c:	ldr	r1, [r5, #4]
    11a0:	mov	r0, r4
    11a4:	pop	{r4, r5, fp, lr}
    11a8:	b	1844 <apply_undline>
    11ac:	pop	{r4, r5, fp, pc}

000011b0 <mo_undline>:
    11b0:	push	{r4, r5, r6, r7, fp, lr}
    11b4:	add	fp, sp, #16
    11b8:	sub	sp, sp, #16
    11bc:	ldr	r0, [r2, #24]
    11c0:	mov	r4, r2
    11c4:	cmp	r0, #0
    11c8:	ldrne	r0, [r0, #36]	; 0x24
    11cc:	cmpne	r0, #0
    11d0:	bne	1208 <mo_undline+0x58>
    11d4:	ldr	r0, [pc, #268]	; 12e8 <mo_undline+0x138>
    11d8:	add	r0, pc, r0
    11dc:	str	r0, [sp]
    11e0:	add	r3, r4, #88	; 0x58
    11e4:	ldr	r0, [pc, #256]	; 12ec <mo_undline+0x13c>
    11e8:	ldr	r0, [pc, r0]
    11ec:	ldr	r1, [pc, #252]	; 12f0 <mo_undline+0x140>
    11f0:	add	r2, r0, #88	; 0x58
    11f4:	add	r1, pc, r1
    11f8:	mov	r0, r4
    11fc:	bl	b80 <sendto_one@plt>
    1200:	sub	sp, fp, #16
    1204:	pop	{r4, r5, r6, r7, fp, pc}
    1208:	ldr	r7, [fp, #8]
    120c:	ldr	r1, [pc, #208]	; 12e4 <mo_undline+0x134>
    1210:	mov	r6, r3
    1214:	add	r1, pc, r1
    1218:	bl	cb8 <privilegeset_in_set@plt>
    121c:	cmp	r0, #0
    1220:	beq	11d4 <mo_undline+0x24>
    1224:	ldr	r5, [r7, #4]
    1228:	cmp	r6, #4
    122c:	blt	1248 <mo_undline+0x98>
    1230:	ldr	r0, [r7, #8]
    1234:	ldr	r1, [pc, #184]	; 12f4 <mo_undline+0x144>
    1238:	add	r1, pc, r1
    123c:	bl	cc4 <irccmp@plt>
    1240:	cmp	r0, #0
    1244:	beq	125c <mo_undline+0xac>
    1248:	mov	r0, r4
    124c:	mov	r1, r5
    1250:	sub	sp, fp, #16
    1254:	pop	{r4, r5, r6, r7, fp, lr}
    1258:	b	1844 <apply_undline>
    125c:	ldr	r0, [r4, #24]
    1260:	cmp	r0, #0
    1264:	ldrne	r0, [r0, #36]	; 0x24
    1268:	cmpne	r0, #0
    126c:	bne	127c <mo_undline+0xcc>
    1270:	ldr	r0, [pc, #132]	; 12fc <mo_undline+0x14c>
    1274:	add	r0, pc, r0
    1278:	b	11dc <mo_undline+0x2c>
    127c:	ldr	r1, [pc, #116]	; 12f8 <mo_undline+0x148>
    1280:	add	r1, pc, r1
    1284:	bl	cb8 <privilegeset_in_set@plt>
    1288:	cmp	r0, #0
    128c:	beq	1270 <mo_undline+0xc0>
    1290:	ldr	r0, [pc, #104]	; 1300 <mo_undline+0x150>
    1294:	mov	r3, #0
    1298:	ldr	r0, [pc, r0]
    129c:	ldr	r6, [r7, #12]
    12a0:	ldr	r2, [r0]
    12a4:	ldr	r0, [pc, #88]	; 1304 <mo_undline+0x154>
    12a8:	mov	r1, r6
    12ac:	add	r0, pc, r0
    12b0:	stm	sp, {r0, r6}
    12b4:	mov	r0, r4
    12b8:	str	r5, [sp, #8]
    12bc:	bl	b5c <sendto_match_servs@plt>
    12c0:	ldr	r0, [pc, #64]	; 1308 <mo_undline+0x158>
    12c4:	ldr	r0, [pc, r0]
    12c8:	add	r1, r0, #88	; 0x58
    12cc:	mov	r0, r6
    12d0:	bl	c58 <match@plt>
    12d4:	cmp	r0, #0
    12d8:	subeq	sp, fp, #16
    12dc:	popeq	{r4, r5, r6, r7, fp, pc}
    12e0:	b	1248 <mo_undline+0x98>
    12e4:	.word	0x0000092c
    12e8:	.word	0x00000c4b
    12ec:	.word	0x00011ebc
    12f0:	.word	0x00000957
    12f4:	.word	0x0000099b
    12f8:	.word	0x00000956
    12fc:	.word	0x00000967
    1300:	.word	0x00011e10
    1304:	.word	0x00000b7f
    1308:	.word	0x00011de0

0000130c <apply_dline>:
    130c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1310:	add	fp, sp, #24
    1314:	sub	sp, sp, #152	; 0x98
    1318:	mov	r7, r1
    131c:	mov	r8, r2
    1320:	mov	r4, r0
    1324:	add	r1, sp, #24
    1328:	add	r2, sp, #20
    132c:	mov	r9, r3
    1330:	mov	r0, r7
    1334:	bl	b44 <parse_netmask_strict@plt>
    1338:	orr	r1, r0, #1
    133c:	cmp	r1, #3
    1340:	bne	13c0 <apply_dline+0xb4>
    1344:	ldr	r1, [r4, #24]
    1348:	mov	r5, #2
    134c:	cmp	r0, #3
    1350:	movweq	r5, #10
    1354:	cmp	r1, #0
    1358:	beq	13dc <apply_dline+0xd0>
    135c:	ldr	r0, [r1, #36]	; 0x24
    1360:	cmp	r0, #0
    1364:	beq	1388 <apply_dline+0x7c>
    1368:	ldr	r1, [pc, #1156]	; 17f4 <apply_dline+0x4e8>
    136c:	add	r1, pc, r1
    1370:	bl	cb8 <privilegeset_in_set@plt>
    1374:	cmp	r0, #0
    1378:	bne	13a8 <apply_dline+0x9c>
    137c:	ldr	r1, [r4, #24]
    1380:	cmp	r1, #0
    1384:	beq	13dc <apply_dline+0xd0>
    1388:	ldr	r0, [r1, #36]	; 0x24
    138c:	cmp	r0, #0
    1390:	beq	13dc <apply_dline+0xd0>
    1394:	ldr	r1, [pc, #1116]	; 17f8 <apply_dline+0x4ec>
    1398:	add	r1, pc, r1
    139c:	bl	cb8 <privilegeset_in_set@plt>
    13a0:	cmp	r0, #0
    13a4:	beq	13dc <apply_dline+0xd0>
    13a8:	ldr	r0, [sp, #20]
    13ac:	cmp	r0, #7
    13b0:	bgt	1400 <apply_dline+0xf4>
    13b4:	ldr	r1, [pc, #1088]	; 17fc <apply_dline+0x4f0>
    13b8:	add	r1, pc, r1
    13bc:	b	13f0 <apply_dline+0xe4>
    13c0:	ldr	r0, [pc, #1060]	; 17ec <apply_dline+0x4e0>
    13c4:	add	r3, r4, #88	; 0x58
    13c8:	ldr	r0, [pc, r0]
    13cc:	ldr	r1, [pc, #1052]	; 17f0 <apply_dline+0x4e4>
    13d0:	add	r2, r0, #88	; 0x58
    13d4:	add	r1, pc, r1
    13d8:	b	170c <apply_dline+0x400>
    13dc:	ldr	r0, [sp, #20]
    13e0:	cmp	r0, #15
    13e4:	bgt	1400 <apply_dline+0xf4>
    13e8:	ldr	r1, [pc, #1040]	; 1800 <apply_dline+0x4f4>
    13ec:	add	r1, pc, r1
    13f0:	mov	r0, r4
    13f4:	bl	c7c <sendto_one_notice@plt>
    13f8:	sub	sp, fp, #24
    13fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1400:	ldr	r0, [pc, #1020]	; 1804 <apply_dline+0x4f8>
    1404:	ldr	r0, [pc, r0]
    1408:	ldr	r0, [r0, #140]	; 0x8c
    140c:	cmp	r0, #0
    1410:	beq	1454 <apply_dline+0x148>
    1414:	add	r0, sp, #24
    1418:	mov	r1, r5
    141c:	bl	cd0 <find_dline@plt>
    1420:	cmp	r0, #0
    1424:	beq	1454 <apply_dline+0x148>
    1428:	mov	r5, r0
    142c:	ldr	r0, [r0, #16]
    1430:	add	r2, sp, #16
    1434:	mov	r1, #0
    1438:	bl	b44 <parse_netmask_strict@plt>
    143c:	cmp	r0, #0
    1440:	beq	1454 <apply_dline+0x148>
    1444:	ldr	r0, [sp, #16]
    1448:	ldr	r1, [sp, #20]
    144c:	cmp	r1, r0
    1450:	bge	1778 <apply_dline+0x46c>
    1454:	bl	bf8 <rb_set_time@plt>
    1458:	bl	b38 <make_conf@plt>
    145c:	mov	r6, r0
    1460:	mov	r0, #131072	; 0x20000
    1464:	str	r0, [r6]
    1468:	bl	b50 <rb_current_time@plt>
    146c:	str	r0, [r6, #40]	; 0x28
    1470:	mov	r0, r7
    1474:	bl	c28 <strlen@plt>
    1478:	add	r0, r0, #1
    147c:	bl	c04 <malloc@plt>
    1480:	cmp	r0, #0
    1484:	beq	17e8 <apply_dline+0x4dc>
    1488:	mov	r1, r7
    148c:	mov	r5, r0
    1490:	bl	be0 <strcpy@plt>
    1494:	mov	r0, r9
    1498:	str	r5, [r6, #16]
    149c:	bl	c28 <strlen@plt>
    14a0:	add	r0, r0, #1
    14a4:	bl	c04 <malloc@plt>
    14a8:	cmp	r0, #0
    14ac:	beq	17e8 <apply_dline+0x4dc>
    14b0:	mov	r1, r9
    14b4:	mov	r5, r0
    14b8:	bl	be0 <strcpy@plt>
    14bc:	mov	r0, r4
    14c0:	str	r5, [r6, #20]
    14c4:	bl	bbc <get_oper_name@plt>
    14c8:	bl	bd4 <operhash_add@plt>
    14cc:	str	r0, [r6, #12]
    14d0:	mov	r0, r9
    14d4:	bl	c28 <strlen@plt>
    14d8:	movw	r1, #391	; 0x187
    14dc:	cmp	r0, r1
    14e0:	mov	r1, #124	; 0x7c
    14e4:	movcs	r0, #0
    14e8:	strbcs	r0, [r9, #390]	; 0x186
    14ec:	mov	r0, r9
    14f0:	bl	c34 <strchr@plt>
    14f4:	cmp	r0, #0
    14f8:	beq	15c4 <apply_dline+0x2b8>
    14fc:	mov	r7, r0
    1500:	mov	r0, #0
    1504:	strb	r0, [r7]
    1508:	ldrb	r0, [r7, #1]!
    150c:	cmp	r0, #0
    1510:	beq	153c <apply_dline+0x230>
    1514:	mov	r0, r7
    1518:	bl	c28 <strlen@plt>
    151c:	add	r0, r0, #1
    1520:	bl	c04 <malloc@plt>
    1524:	cmp	r0, #0
    1528:	beq	17e8 <apply_dline+0x4dc>
    152c:	mov	r1, r7
    1530:	mov	r5, r0
    1534:	bl	be0 <strcpy@plt>
    1538:	str	r5, [r6, #24]
    153c:	cmp	r8, #1
    1540:	blt	15d0 <apply_dline+0x2c4>
    1544:	bl	b50 <rb_current_time@plt>
    1548:	add	r0, r0, r8
    154c:	str	r0, [r6, #36]	; 0x24
    1550:	mov	r0, r6
    1554:	bl	bec <add_temp_dline@plt>
    1558:	cmp	r7, #0
    155c:	ldrbne	r0, [r7]
    1560:	cmpne	r0, #0
    1564:	bne	167c <apply_dline+0x370>
    1568:	mov	r0, r4
    156c:	bl	bbc <get_oper_name@plt>
    1570:	movw	r1, #34953	; 0x8889
    1574:	mov	r3, r0
    1578:	ldr	r0, [r6, #16]
    157c:	movt	r1, #34952	; 0x8888
    1580:	umull	r1, r2, r8, r1
    1584:	lsr	r5, r2, #5
    1588:	mov	r1, #0
    158c:	str	r5, [sp]
    1590:	stmib	sp, {r0, r9}
    1594:	mov	r0, #256	; 0x100
    1598:	ldr	r2, [pc, #636]	; 181c <apply_dline+0x510>
    159c:	add	r2, pc, r2
    15a0:	bl	ba4 <sendto_realops_snomask@plt>
    15a4:	mov	r0, r4
    15a8:	bl	bbc <get_oper_name@plt>
    15ac:	mov	r2, r0
    15b0:	ldr	r0, [r6, #16]
    15b4:	stm	sp, {r0, r9}
    15b8:	ldr	r1, [pc, #608]	; 1820 <apply_dline+0x514>
    15bc:	add	r1, pc, r1
    15c0:	b	16dc <apply_dline+0x3d0>
    15c4:	mov	r7, #0
    15c8:	cmp	r8, #1
    15cc:	bge	1544 <apply_dline+0x238>
    15d0:	ldr	r0, [r6, #16]
    15d4:	mov	r1, #131072	; 0x20000
    15d8:	mov	r2, #0
    15dc:	mov	r3, #0
    15e0:	str	r6, [sp]
    15e4:	mov	r5, #0
    15e8:	bl	c10 <add_conf_by_address@plt>
    15ec:	ldr	r1, [r6, #24]
    15f0:	ldr	r2, [r6, #16]
    15f4:	mov	r0, #0
    15f8:	cmp	r1, #0
    15fc:	beq	160c <apply_dline+0x300>
    1600:	ldrb	r0, [r1]
    1604:	cmp	r0, #0
    1608:	movne	r0, r1
    160c:	str	r9, [sp]
    1610:	stmib	sp, {r0, r5}
    1614:	mov	r0, #1
    1618:	mov	r1, r4
    161c:	mov	r3, #0
    1620:	bl	bb0 <bandb_add@plt>
    1624:	cmp	r7, #0
    1628:	ldrbne	r0, [r7]
    162c:	cmpne	r0, #0
    1630:	bne	171c <apply_dline+0x410>
    1634:	mov	r0, r4
    1638:	bl	bbc <get_oper_name@plt>
    163c:	mov	r3, r0
    1640:	ldr	r0, [r6, #16]
    1644:	mov	r1, #0
    1648:	stm	sp, {r0, r9}
    164c:	mov	r0, #256	; 0x100
    1650:	ldr	r2, [pc, #476]	; 1834 <apply_dline+0x528>
    1654:	add	r2, pc, r2
    1658:	bl	ba4 <sendto_realops_snomask@plt>
    165c:	mov	r0, r4
    1660:	bl	bbc <get_oper_name@plt>
    1664:	ldr	r3, [r6, #16]
    1668:	str	r9, [sp]
    166c:	mov	r2, r0
    1670:	ldr	r1, [pc, #448]	; 1838 <apply_dline+0x52c>
    1674:	add	r1, pc, r1
    1678:	b	1768 <apply_dline+0x45c>
    167c:	mov	r0, r4
    1680:	bl	bbc <get_oper_name@plt>
    1684:	movw	r1, #34953	; 0x8889
    1688:	mov	r3, r0
    168c:	ldr	r0, [r6, #16]
    1690:	movt	r1, #34952	; 0x8888
    1694:	umull	r1, r2, r8, r1
    1698:	lsr	r5, r2, #5
    169c:	mov	r1, #0
    16a0:	str	r5, [sp]
    16a4:	stmib	sp, {r0, r9}
    16a8:	str	r7, [sp, #12]
    16ac:	mov	r0, #256	; 0x100
    16b0:	ldr	r2, [pc, #364]	; 1824 <apply_dline+0x518>
    16b4:	add	r2, pc, r2
    16b8:	bl	ba4 <sendto_realops_snomask@plt>
    16bc:	mov	r0, r4
    16c0:	bl	bbc <get_oper_name@plt>
    16c4:	mov	r2, r0
    16c8:	ldr	r0, [r6, #16]
    16cc:	stm	sp, {r0, r9}
    16d0:	str	r7, [sp, #8]
    16d4:	ldr	r1, [pc, #332]	; 1828 <apply_dline+0x51c>
    16d8:	add	r1, pc, r1
    16dc:	mov	r0, #7
    16e0:	mov	r3, r5
    16e4:	bl	c4c <ilog@plt>
    16e8:	ldr	r0, [r6, #16]
    16ec:	str	r5, [sp]
    16f0:	add	r3, r4, #88	; 0x58
    16f4:	str	r0, [sp, #4]
    16f8:	ldr	r0, [pc, #300]	; 182c <apply_dline+0x520>
    16fc:	ldr	r0, [pc, r0]
    1700:	ldr	r1, [pc, #296]	; 1830 <apply_dline+0x524>
    1704:	add	r2, r0, #88	; 0x58
    1708:	add	r1, pc, r1
    170c:	mov	r0, r4
    1710:	bl	b80 <sendto_one@plt>
    1714:	sub	sp, fp, #24
    1718:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    171c:	mov	r0, r4
    1720:	bl	bbc <get_oper_name@plt>
    1724:	mov	r3, r0
    1728:	ldr	r0, [r6, #16]
    172c:	mov	r1, #0
    1730:	stm	sp, {r0, r9}
    1734:	str	r7, [sp, #8]
    1738:	mov	r0, #256	; 0x100
    173c:	ldr	r2, [pc, #248]	; 183c <apply_dline+0x530>
    1740:	add	r2, pc, r2
    1744:	bl	ba4 <sendto_realops_snomask@plt>
    1748:	mov	r0, r4
    174c:	bl	bbc <get_oper_name@plt>
    1750:	ldr	r3, [r6, #16]
    1754:	str	r9, [sp]
    1758:	str	r7, [sp, #4]
    175c:	mov	r2, r0
    1760:	ldr	r1, [pc, #216]	; 1840 <apply_dline+0x534>
    1764:	add	r1, pc, r1
    1768:	mov	r0, #7
    176c:	bl	c4c <ilog@plt>
    1770:	sub	sp, fp, #24
    1774:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1778:	ldr	r2, [r5, #20]
    177c:	ldr	r1, [r5, #16]
    1780:	ldr	r0, [pc, #128]	; 1808 <apply_dline+0x4fc>
    1784:	add	r3, r4, #88	; 0x58
    1788:	add	r0, pc, r0
    178c:	cmp	r2, #0
    1790:	movne	r0, r2
    1794:	ldrb	r2, [r5, #4]
    1798:	tst	r2, #64	; 0x40
    179c:	bne	17c4 <apply_dline+0x4b8>
    17a0:	str	r7, [sp]
    17a4:	str	r1, [sp, #4]
    17a8:	str	r0, [sp, #8]
    17ac:	ldr	r0, [pc, #96]	; 1814 <apply_dline+0x508>
    17b0:	ldr	r0, [pc, r0]
    17b4:	ldr	r1, [pc, #92]	; 1818 <apply_dline+0x50c>
    17b8:	add	r2, r0, #88	; 0x58
    17bc:	add	r1, pc, r1
    17c0:	b	170c <apply_dline+0x400>
    17c4:	str	r7, [sp]
    17c8:	str	r1, [sp, #4]
    17cc:	str	r0, [sp, #8]
    17d0:	ldr	r0, [pc, #52]	; 180c <apply_dline+0x500>
    17d4:	ldr	r0, [pc, r0]
    17d8:	ldr	r1, [pc, #48]	; 1810 <apply_dline+0x504>
    17dc:	add	r2, r0, #88	; 0x58
    17e0:	add	r1, pc, r1
    17e4:	b	170c <apply_dline+0x400>
    17e8:	bl	b8c <rb_outofmemory@plt>
    17ec:	.word	0x00011cdc
    17f0:	.word	0x0000082a
    17f4:	.word	0x000008b0
    17f8:	.word	0x0000088f
    17fc:	.word	0x00000881
    1800:	.word	0x00000884
    1804:	.word	0x00011ca8
    1808:	.word	0x0000051a
    180c:	.word	0x000118d0
    1810:	.word	0x000004ce
    1814:	.word	0x000118f4
    1818:	.word	0x00000521
    181c:	.word	0x00000772
    1820:	.word	0x00000782
    1824:	.word	0x00000698
    1828:	.word	0x000006a7
    182c:	.word	0x000119a8
    1830:	.word	0x00000688
    1834:	.word	0x00000773
    1838:	.word	0x00000771
    183c:	.word	0x000006b2
    1840:	.word	0x000006af

00001844 <apply_undline>:
    1844:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1848:	add	fp, sp, #24
    184c:	sub	sp, sp, #520	; 0x208
    1850:	mov	r4, r0
    1854:	mov	r6, r1
    1858:	mov	r0, r1
    185c:	mov	r1, #0
    1860:	mov	r2, #0
    1864:	bl	b98 <parse_netmask@plt>
    1868:	orr	r0, r0, #1
    186c:	cmp	r0, #3
    1870:	bne	18d4 <apply_undline+0x90>
    1874:	mov	r0, r6
    1878:	mov	r1, #131072	; 0x20000
    187c:	mov	r2, #0
    1880:	bl	c94 <find_exact_conf_by_address@plt>
    1884:	cmp	r0, #0
    1888:	beq	18e0 <apply_undline+0x9c>
    188c:	ldr	r1, [r0, #16]
    1890:	add	r8, sp, #8
    1894:	mov	r5, r0
    1898:	mov	r2, #512	; 0x200
    189c:	mov	r0, r8
    18a0:	bl	ca0 <rb_strlcpy@plt>
    18a4:	ldr	r1, [pc, #600]	; 1b04 <apply_undline+0x2c0>
    18a8:	ldr	r1, [pc, r1]
    18ac:	mov	r2, r1
    18b0:	ldr	r0, [r2]
    18b4:	cmp	r0, #0
    18b8:	beq	18fc <apply_undline+0xb8>
    18bc:	mov	r2, r0
    18c0:	ldr	r3, [r2], #8
    18c4:	cmp	r3, r5
    18c8:	bne	18b0 <apply_undline+0x6c>
    18cc:	mov	lr, #0
    18d0:	b	1984 <apply_undline+0x140>
    18d4:	ldr	r1, [pc, #544]	; 1afc <apply_undline+0x2b8>
    18d8:	add	r1, pc, r1
    18dc:	b	18e8 <apply_undline+0xa4>
    18e0:	ldr	r1, [pc, #536]	; 1b00 <apply_undline+0x2bc>
    18e4:	add	r1, pc, r1
    18e8:	mov	r0, r4
    18ec:	mov	r2, r6
    18f0:	bl	c7c <sendto_one_notice@plt>
    18f4:	sub	sp, fp, #24
    18f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    18fc:	ldr	r3, [pc, #516]	; 1b08 <apply_undline+0x2c4>
    1900:	ldr	r3, [pc, r3]
    1904:	add	r1, r3, #12
    1908:	mov	r2, r1
    190c:	ldr	r0, [r2]
    1910:	cmp	r0, #0
    1914:	beq	1930 <apply_undline+0xec>
    1918:	mov	r2, r0
    191c:	ldr	r7, [r2], #8
    1920:	cmp	r7, r5
    1924:	bne	190c <apply_undline+0xc8>
    1928:	mov	lr, #1
    192c:	b	1984 <apply_undline+0x140>
    1930:	add	r1, r3, #24
    1934:	mov	r2, r1
    1938:	ldr	r0, [r2]
    193c:	cmp	r0, #0
    1940:	beq	195c <apply_undline+0x118>
    1944:	mov	r2, r0
    1948:	ldr	r7, [r2], #8
    194c:	cmp	r7, r5
    1950:	bne	1938 <apply_undline+0xf4>
    1954:	mov	lr, #2
    1958:	b	1984 <apply_undline+0x140>
    195c:	add	r1, r3, #36	; 0x24
    1960:	mov	r2, r1
    1964:	ldr	r0, [r2]
    1968:	cmp	r0, #0
    196c:	beq	1a68 <apply_undline+0x224>
    1970:	mov	r2, r0
    1974:	ldr	r3, [r2], #8
    1978:	cmp	r3, r5
    197c:	bne	1964 <apply_undline+0x120>
    1980:	mov	lr, #3
    1984:	ldr	r6, [r0, #8]
    1988:	ldr	r7, [r0, #4]
    198c:	cmp	r6, #0
    1990:	beq	19a0 <apply_undline+0x15c>
    1994:	str	r7, [r6, #4]
    1998:	ldr	r7, [r0, #4]
    199c:	b	19b4 <apply_undline+0x170>
    19a0:	ldr	r3, [pc, #356]	; 1b0c <apply_undline+0x2c8>
    19a4:	add	ip, lr, lr, lsl #1
    19a8:	ldr	r3, [pc, r3]
    19ac:	add	r3, r3, ip, lsl #2
    19b0:	str	r7, [r3, #4]
    19b4:	cmp	r7, #0
    19b8:	addne	r1, r7, #8
    19bc:	str	r6, [r1]
    19c0:	mov	r1, #0
    19c4:	str	r1, [r0, #4]
    19c8:	str	r1, [r2]
    19cc:	add	r1, lr, lr, lsl #1
    19d0:	ldr	r2, [pc, #312]	; 1b10 <apply_undline+0x2cc>
    19d4:	ldr	r2, [pc, r2]
    19d8:	add	r1, r2, r1, lsl #2
    19dc:	ldr	r2, [r1, #8]
    19e0:	sub	r2, r2, #1
    19e4:	str	r2, [r1, #8]
    19e8:	bl	bc8 <rb_free_rb_dlink_node@plt>
    19ec:	ldr	r0, [r5, #16]
    19f0:	mov	r1, r5
    19f4:	bl	c40 <delete_one_address_conf@plt>
    19f8:	str	r8, [sp]
    19fc:	add	r3, r4, #88	; 0x58
    1a00:	ldr	r0, [pc, #268]	; 1b14 <apply_undline+0x2d0>
    1a04:	ldr	r0, [pc, r0]
    1a08:	ldr	r1, [pc, #264]	; 1b18 <apply_undline+0x2d4>
    1a0c:	add	r2, r0, #88	; 0x58
    1a10:	add	r1, pc, r1
    1a14:	mov	r0, r4
    1a18:	bl	b80 <sendto_one@plt>
    1a1c:	mov	r0, r4
    1a20:	bl	bbc <get_oper_name@plt>
    1a24:	str	r8, [sp]
    1a28:	mov	r3, r0
    1a2c:	mov	r0, #256	; 0x100
    1a30:	mov	r1, #0
    1a34:	ldr	r2, [pc, #224]	; 1b1c <apply_undline+0x2d8>
    1a38:	add	r2, pc, r2
    1a3c:	bl	ba4 <sendto_realops_snomask@plt>
    1a40:	mov	r0, r4
    1a44:	bl	bbc <get_oper_name@plt>
    1a48:	ldr	r1, [pc, #208]	; 1b20 <apply_undline+0x2dc>
    1a4c:	mov	r2, r0
    1a50:	mov	r0, #7
    1a54:	mov	r3, r8
    1a58:	add	r1, pc, r1
    1a5c:	bl	c4c <ilog@plt>
    1a60:	sub	sp, fp, #24
    1a64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a68:	ldr	r1, [r5, #16]
    1a6c:	mov	r0, #1
    1a70:	mov	r2, #0
    1a74:	bl	c88 <bandb_del@plt>
    1a78:	ldr	r0, [r5, #16]
    1a7c:	add	r3, r4, #88	; 0x58
    1a80:	str	r0, [sp]
    1a84:	ldr	r0, [pc, #152]	; 1b24 <apply_undline+0x2e0>
    1a88:	ldr	r0, [pc, r0]
    1a8c:	ldr	r1, [pc, #148]	; 1b28 <apply_undline+0x2e4>
    1a90:	add	r2, r0, #88	; 0x58
    1a94:	add	r1, pc, r1
    1a98:	mov	r0, r4
    1a9c:	bl	b80 <sendto_one@plt>
    1aa0:	mov	r0, r4
    1aa4:	bl	bbc <get_oper_name@plt>
    1aa8:	mov	r3, r0
    1aac:	ldr	r0, [r5, #16]
    1ab0:	mov	r1, #0
    1ab4:	str	r0, [sp]
    1ab8:	mov	r0, #256	; 0x100
    1abc:	ldr	r2, [pc, #104]	; 1b2c <apply_undline+0x2e8>
    1ac0:	add	r2, pc, r2
    1ac4:	bl	ba4 <sendto_realops_snomask@plt>
    1ac8:	mov	r0, r4
    1acc:	bl	bbc <get_oper_name@plt>
    1ad0:	ldr	r3, [r5, #16]
    1ad4:	ldr	r1, [pc, #84]	; 1b30 <apply_undline+0x2ec>
    1ad8:	mov	r2, r0
    1adc:	mov	r0, #7
    1ae0:	add	r1, pc, r1
    1ae4:	bl	c4c <ilog@plt>
    1ae8:	ldr	r0, [r5, #16]
    1aec:	mov	r1, r5
    1af0:	bl	c40 <delete_one_address_conf@plt>
    1af4:	sub	sp, fp, #24
    1af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1afc:	.word	0x000002c8
    1b00:	.word	0x0000055b
    1b04:	.word	0x000117f4
    1b08:	.word	0x0001179c
    1b0c:	.word	0x000116f4
    1b10:	.word	0x000116c8
    1b14:	.word	0x000116a0
    1b18:	.word	0x00000441
    1b1c:	.word	0x0000044e
    1b20:	.word	0x0000045c
    1b24:	.word	0x0001161c
    1b28:	.word	0x00000429
    1b2c:	.word	0x00000427
    1b30:	.word	0x000003d4

Disassembly of section .fini:

00001b34 <_fini>:
    1b34:	push	{r3, lr}
    1b38:	pop	{r3, pc}
