
../repos/inetutils/src/logger:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	1133c <__assert_fail@plt+0x48>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <calloc@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <calloc@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	r9, r1, r4

00011000 <calloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #4]!

0001100c <fputs_unlocked@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <raise@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <__getdelim@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #24, 20	; 0x18000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <strcmp@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #24, 20	; 0x18000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <strtol@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #24, 20	; 0x18000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <getpwuid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #24, 20	; 0x18000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <printf@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #24, 20	; 0x18000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <getuid@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #24, 20	; 0x18000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <memmove@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <strchrnul@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <free@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <gai_strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <strndup@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <time@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <fwrite_unlocked@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <sleep@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <ctime@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <realloc@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <strcasecmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <funlockfile@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <fwrite@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <__ctype_tolower_loc@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <__gmon_start__@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <freopen64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <mempcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <__ctype_b_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <getpid@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <exit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <strtoul@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <__errno_location@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <strerror_r@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <bind@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <memset@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #24, 20	; 0x18000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <fileno@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #24, 20	; 0x18000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <asprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #24, 20	; 0x18000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #24, 20	; 0x18000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <writev@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #24, 20	; 0x18000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #24, 20	; 0x18000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <strrchr@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <vfprintf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <fputc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <flockfile@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <vsnprintf@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <qsort@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <freeaddrinfo@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <getaddrinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <socket@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <send@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <connect@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #24, 20	; 0x18000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <__assert_fail@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #24, 20	; 0x18000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

00011300 <argp_parse@@Base-0x12b0>:
   11300:	mov	fp, #0
   11304:	mov	lr, #0
   11308:	pop	{r1}		; (ldr r1, [sp], #4)
   1130c:	mov	r2, sp
   11310:	push	{r2}		; (str r2, [sp, #-4]!)
   11314:	push	{r0}		; (str r0, [sp, #-4]!)
   11318:	ldr	ip, [pc, #16]	; 11330 <__assert_fail@plt+0x3c>
   1131c:	push	{ip}		; (str ip, [sp, #-4]!)
   11320:	ldr	r0, [pc, #12]	; 11334 <__assert_fail@plt+0x40>
   11324:	ldr	r3, [pc, #12]	; 11338 <__assert_fail@plt+0x44>
   11328:	bl	11144 <__libc_start_main@plt>
   1132c:	bl	112c4 <abort@plt>
   11330:			; <UNDEFINED> instruction: 0x000189bc
   11334:	andeq	r1, r1, ip, lsr #20
   11338:	andeq	r8, r1, ip, asr r9
   1133c:	ldr	r3, [pc, #20]	; 11358 <__assert_fail@plt+0x64>
   11340:	ldr	r2, [pc, #20]	; 1135c <__assert_fail@plt+0x68>
   11344:	add	r3, pc, r3
   11348:	ldr	r2, [r3, r2]
   1134c:	cmp	r2, #0
   11350:	bxeq	lr
   11354:	b	11168 <__gmon_start__@plt>
   11358:			; <UNDEFINED> instruction: 0x00018cb4
   1135c:	andeq	r0, r0, ip, lsl #2
   11360:	ldr	r0, [pc, #24]	; 11380 <__assert_fail@plt+0x8c>
   11364:	ldr	r3, [pc, #24]	; 11384 <__assert_fail@plt+0x90>
   11368:	cmp	r3, r0
   1136c:	bxeq	lr
   11370:	ldr	r3, [pc, #16]	; 11388 <__assert_fail@plt+0x94>
   11374:	cmp	r3, #0
   11378:	bxeq	lr
   1137c:	bx	r3
   11380:	andeq	sl, r2, r8, lsr #7
   11384:	andeq	sl, r2, r8, lsr #7
   11388:	andeq	r0, r0, r0
   1138c:	ldr	r0, [pc, #36]	; 113b8 <__assert_fail@plt+0xc4>
   11390:	ldr	r1, [pc, #36]	; 113bc <__assert_fail@plt+0xc8>
   11394:	sub	r1, r1, r0
   11398:	asr	r1, r1, #2
   1139c:	add	r1, r1, r1, lsr #31
   113a0:	asrs	r1, r1, #1
   113a4:	bxeq	lr
   113a8:	ldr	r3, [pc, #16]	; 113c0 <__assert_fail@plt+0xcc>
   113ac:	cmp	r3, #0
   113b0:	bxeq	lr
   113b4:	bx	r3
   113b8:	andeq	sl, r2, r8, lsr #7
   113bc:	andeq	sl, r2, r8, lsr #7
   113c0:	andeq	r0, r0, r0
   113c4:	push	{r4, lr}
   113c8:	ldr	r4, [pc, #24]	; 113e8 <__assert_fail@plt+0xf4>
   113cc:	ldrb	r3, [r4]
   113d0:	cmp	r3, #0
   113d4:	popne	{r4, pc}
   113d8:	bl	11360 <__assert_fail@plt+0x6c>
   113dc:	mov	r3, #1
   113e0:	strb	r3, [r4]
   113e4:	pop	{r4, pc}
   113e8:	andeq	sl, r2, r0, asr #7
   113ec:	b	1138c <__assert_fail@plt+0x98>
   113f0:	strd	r4, [sp, #-12]!
   113f4:	str	lr, [sp, #8]
   113f8:	sub	sp, sp, #44	; 0x2c
   113fc:	mov	r4, r0
   11400:	mov	r0, #0
   11404:	bl	110b4 <time@plt>
   11408:	str	r0, [sp, #32]
   1140c:	movw	r3, #41924	; 0xa3c4
   11410:	movt	r3, #2
   11414:	ldr	r3, [r3]
   11418:	tst	r3, #1
   1141c:	beq	11538 <__assert_fail@plt+0x244>
   11420:	movw	r3, #41240	; 0xa118
   11424:	movt	r3, #2
   11428:	ldr	r5, [r3]
   1142c:	add	r0, sp, #32
   11430:	bl	110d8 <ctime@plt>
   11434:	str	r4, [sp, #8]
   11438:	movw	r3, #41924	; 0xa3c4
   1143c:	movt	r3, #2
   11440:	ldr	r2, [r3, #4]
   11444:	str	r2, [sp, #4]
   11448:	ldr	r3, [r3, #8]
   1144c:	str	r3, [sp]
   11450:	add	r3, r0, #4
   11454:	mov	r2, r5
   11458:	movw	r1, #35312	; 0x89f0
   1145c:	movt	r1, #1
   11460:	add	r0, sp, #36	; 0x24
   11464:	bl	1121c <asprintf@plt>
   11468:	cmn	r0, #1
   1146c:	beq	1157c <__assert_fail@plt+0x288>
   11470:	ldr	r0, [sp, #36]	; 0x24
   11474:	bl	111bc <strlen@plt>
   11478:	mov	r5, r0
   1147c:	movw	r3, #41924	; 0xa3c4
   11480:	movt	r3, #2
   11484:	ldr	r3, [r3]
   11488:	tst	r3, #32
   1148c:	beq	114f0 <__assert_fail@plt+0x1fc>
   11490:	mov	r0, r4
   11494:	bl	111bc <strlen@plt>
   11498:	str	r4, [sp, #16]
   1149c:	str	r0, [sp, #20]
   114a0:	add	r4, r4, r0
   114a4:	ldrb	r3, [r4, #-1]
   114a8:	cmp	r3, #10
   114ac:	addeq	r4, sp, #16
   114b0:	beq	114cc <__assert_fail@plt+0x1d8>
   114b4:	movw	r3, #35380	; 0x8a34
   114b8:	movt	r3, #1
   114bc:	str	r3, [sp, #24]
   114c0:	mov	r3, #1
   114c4:	str	r3, [sp, #28]
   114c8:	add	r4, sp, #24
   114cc:	movw	r3, #41904	; 0xa3b0
   114d0:	movt	r3, #2
   114d4:	ldr	r0, [r3]
   114d8:	bl	11210 <fileno@plt>
   114dc:	add	r1, sp, #16
   114e0:	sub	r2, r4, r1
   114e4:	asr	r2, r2, #3
   114e8:	add	r2, r2, #1
   114ec:	bl	11234 <writev@plt>
   114f0:	movw	r0, #42004	; 0xa414
   114f4:	movt	r0, #2
   114f8:	mov	r3, #0
   114fc:	mov	r2, r5
   11500:	ldr	r1, [sp, #36]	; 0x24
   11504:	ldr	r0, [r0]
   11508:	bl	112dc <send@plt>
   1150c:	mov	r4, r0
   11510:	ldr	r0, [sp, #36]	; 0x24
   11514:	bl	13288 <argp_parse@@Base+0xcd8>
   11518:	cmn	r4, #1
   1151c:	beq	11598 <__assert_fail@plt+0x2a4>
   11520:	cmp	r5, r4
   11524:	bne	115b4 <__assert_fail@plt+0x2c0>
   11528:	add	sp, sp, #44	; 0x2c
   1152c:	ldrd	r4, [sp]
   11530:	add	sp, sp, #8
   11534:	pop	{pc}		; (ldr pc, [sp], #4)
   11538:	movw	r3, #41240	; 0xa118
   1153c:	movt	r3, #2
   11540:	ldr	r5, [r3]
   11544:	add	r0, sp, #32
   11548:	bl	110d8 <ctime@plt>
   1154c:	str	r4, [sp, #4]
   11550:	movw	r3, #41924	; 0xa3c4
   11554:	movt	r3, #2
   11558:	ldr	r3, [r3, #8]
   1155c:	str	r3, [sp]
   11560:	add	r3, r0, #4
   11564:	mov	r2, r5
   11568:	movw	r1, #35336	; 0x8a08
   1156c:	movt	r1, #1
   11570:	add	r0, sp, #36	; 0x24
   11574:	bl	1121c <asprintf@plt>
   11578:	b	11468 <__assert_fail@plt+0x174>
   1157c:	bl	111e0 <__errno_location@plt>
   11580:	movw	r2, #35356	; 0x8a1c
   11584:	movt	r2, #1
   11588:	ldr	r1, [r0]
   1158c:	mov	r0, #1
   11590:	bl	11120 <error@plt>
   11594:	b	11470 <__assert_fail@plt+0x17c>
   11598:	bl	111e0 <__errno_location@plt>
   1159c:	movw	r2, #35384	; 0x8a38
   115a0:	movt	r2, #1
   115a4:	ldr	r1, [r0]
   115a8:	mov	r0, #0
   115ac:	bl	11120 <error@plt>
   115b0:	b	11528 <__assert_fail@plt+0x234>
   115b4:	bl	111e0 <__errno_location@plt>
   115b8:	ldr	r1, [r0]
   115bc:	str	r5, [sp]
   115c0:	mov	r3, r4
   115c4:	movw	r2, #35396	; 0x8a44
   115c8:	movt	r2, #1
   115cc:	mov	r0, #0
   115d0:	bl	11120 <error@plt>
   115d4:	b	11528 <__assert_fail@plt+0x234>
   115d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   115dc:	strd	r6, [sp, #8]
   115e0:	str	lr, [sp, #16]
   115e4:	sub	sp, sp, #20
   115e8:	mov	r5, r0
   115ec:	mov	r4, r1
   115f0:	mov	r7, r2
   115f4:	bl	1118c <__ctype_b_loc@plt>
   115f8:	ldrb	r3, [r5]
   115fc:	ldr	r2, [r0]
   11600:	lsl	r3, r3, #1
   11604:	ldrh	r3, [r2, r3]
   11608:	tst	r3, #2048	; 0x800
   1160c:	bne	1166c <__assert_fail@plt+0x378>
   11610:	ldr	r1, [r4]
   11614:	cmp	r1, #0
   11618:	beq	11638 <__assert_fail@plt+0x344>
   1161c:	mov	r0, r5
   11620:	bl	110f0 <strcasecmp@plt>
   11624:	cmp	r0, #0
   11628:	beq	116b8 <__assert_fail@plt+0x3c4>
   1162c:	ldr	r1, [r4, #8]!
   11630:	cmp	r1, #0
   11634:	bne	1161c <__assert_fail@plt+0x328>
   11638:	str	r5, [sp]
   1163c:	mov	r3, r7
   11640:	movw	r2, #35464	; 0x8a88
   11644:	movt	r2, #1
   11648:	mov	r1, #0
   1164c:	mov	r0, #1
   11650:	bl	11120 <error@plt>
   11654:	mvn	r0, #0
   11658:	add	sp, sp, #20
   1165c:	ldrd	r4, [sp]
   11660:	ldrd	r6, [sp, #8]
   11664:	add	sp, sp, #16
   11668:	pop	{pc}		; (ldr pc, [sp], #4)
   1166c:	mov	r2, #0
   11670:	add	r1, sp, #12
   11674:	mov	r0, r5
   11678:	bl	111b0 <strtoul@plt>
   1167c:	mov	r4, r0
   11680:	ldr	r3, [sp, #12]
   11684:	ldrb	r3, [r3]
   11688:	cmp	r0, #1016	; 0x3f8
   1168c:	cmpls	r3, #0
   11690:	beq	116b0 <__assert_fail@plt+0x3bc>
   11694:	str	r5, [sp]
   11698:	mov	r3, r7
   1169c:	movw	r2, #35440	; 0x8a70
   116a0:	movt	r2, #1
   116a4:	mov	r1, #0
   116a8:	mov	r0, #1
   116ac:	bl	11120 <error@plt>
   116b0:	mov	r0, r4
   116b4:	b	11658 <__assert_fail@plt+0x364>
   116b8:	ldr	r0, [r4, #4]
   116bc:	b	11658 <__assert_fail@plt+0x364>
   116c0:	strd	r4, [sp, #-16]!
   116c4:	str	r6, [sp, #8]
   116c8:	str	lr, [sp, #12]
   116cc:	mov	r4, r0
   116d0:	mov	r1, #46	; 0x2e
   116d4:	bl	111c8 <strchr@plt>
   116d8:	subs	r5, r0, #0
   116dc:	beq	1173c <__assert_fail@plt+0x448>
   116e0:	mov	r3, #0
   116e4:	strb	r3, [r5], #1
   116e8:	movw	r2, #35484	; 0x8a9c
   116ec:	movt	r2, #1
   116f0:	ldr	r1, [pc, #100]	; 1175c <__assert_fail@plt+0x468>
   116f4:	mov	r0, r4
   116f8:	bl	115d8 <__assert_fail@plt+0x2e4>
   116fc:	mov	r4, r0
   11700:	cmp	r5, #0
   11704:	moveq	r0, #5
   11708:	beq	11720 <__assert_fail@plt+0x42c>
   1170c:	movw	r2, #35496	; 0x8aa8
   11710:	movt	r2, #1
   11714:	ldr	r1, [pc, #68]	; 11760 <__assert_fail@plt+0x46c>
   11718:	mov	r0, r5
   1171c:	bl	115d8 <__assert_fail@plt+0x2e4>
   11720:	and	r4, r4, #1016	; 0x3f8
   11724:	and	r0, r0, #7
   11728:	orr	r0, r4, r0
   1172c:	ldrd	r4, [sp]
   11730:	ldr	r6, [sp, #8]
   11734:	add	sp, sp, #12
   11738:	pop	{pc}		; (ldr pc, [sp], #4)
   1173c:	movw	r2, #35484	; 0x8a9c
   11740:	movt	r2, #1
   11744:	ldr	r1, [pc, #16]	; 1175c <__assert_fail@plt+0x468>
   11748:	mov	r0, r4
   1174c:	bl	115d8 <__assert_fail@plt+0x2e4>
   11750:	mov	r4, r0
   11754:	mov	r0, #5
   11758:	b	11720 <__assert_fail@plt+0x42c>
   1175c:	andeq	sl, r2, ip, lsl r1
   11760:	ldrdeq	sl, [r2], -r4
   11764:	str	r4, [sp, #-8]!
   11768:	str	lr, [sp, #4]
   1176c:	sub	sp, sp, #24
   11770:	mov	r4, r1
   11774:	sub	r0, r0, #52	; 0x34
   11778:	cmp	r0, #65	; 0x41
   1177c:	ldrls	pc, [pc, r0, lsl #2]
   11780:	b	11a24 <__assert_fail@plt+0x730>
   11784:	andeq	r1, r1, ip, lsl #17
   11788:	andeq	r1, r1, r4, lsr #20
   1178c:			; <UNDEFINED> instruction: 0x000118b0
   11790:	andeq	r1, r1, r4, lsr #20
   11794:	andeq	r1, r1, r4, lsr #20
   11798:	andeq	r1, r1, r4, lsr #20
   1179c:	andeq	r1, r1, r4, lsr #20
   117a0:	andeq	r1, r1, r4, lsr #20
   117a4:	andeq	r1, r1, r4, lsr #20
   117a8:	andeq	r1, r1, r4, lsr #20
   117ac:	andeq	r1, r1, r4, lsr #20
   117b0:	andeq	r1, r1, r4, lsr #20
   117b4:	andeq	r1, r1, r4, lsr #20
   117b8:	andeq	r1, r1, r4, lsr #20
   117bc:	andeq	r1, r1, r4, lsr #20
   117c0:	andeq	r1, r1, r4, lsr #20
   117c4:	andeq	r1, r1, r4, lsr #20
   117c8:	andeq	r1, r1, r4, lsr #20
   117cc:	andeq	r1, r1, r4, lsr #20
   117d0:	andeq	r1, r1, r4, lsr #20
   117d4:	andeq	r1, r1, r4, lsr #20
   117d8:	andeq	r1, r1, r4, lsr #20
   117dc:	andeq	r1, r1, r4, lsr #20
   117e0:	andeq	r1, r1, r4, lsr #20
   117e4:	andeq	r1, r1, r4, lsr #20
   117e8:	andeq	r1, r1, r4, lsr #20
   117ec:	andeq	r1, r1, r4, lsr #20
   117f0:	andeq	r1, r1, r4, lsr #20
   117f4:	andeq	r1, r1, r4, lsr #20
   117f8:	andeq	r1, r1, r4, lsr #20
   117fc:	andeq	r1, r1, r4, lsr #20
   11800:	andeq	r1, r1, r8, lsl #18
   11804:	andeq	r1, r1, r4, lsr #20
   11808:	andeq	r1, r1, r4, lsr #20
   1180c:	andeq	r1, r1, r4, lsr #20
   11810:	andeq	r1, r1, r4, lsr #20
   11814:	andeq	r1, r1, r4, lsr #20
   11818:	andeq	r1, r1, r4, lsr #20
   1181c:	andeq	r1, r1, r4, lsr #20
   11820:	andeq	r1, r1, r4, lsr #20
   11824:	andeq	r1, r1, r4, lsr #20
   11828:	andeq	r1, r1, r4, lsr #20
   1182c:	andeq	r1, r1, r4, lsr #20
   11830:	andeq	r1, r1, r4, lsr #20
   11834:	andeq	r1, r1, r4, lsr #20
   11838:	andeq	r1, r1, r4, lsr #20
   1183c:	andeq	r1, r1, r4, lsr #20
   11840:	andeq	r1, r1, r4, lsr #20
   11844:	andeq	r1, r1, r4, lsr #20
   11848:	andeq	r1, r1, r4, lsr #20
   1184c:	muleq	r1, r0, r9
   11850:	andeq	r1, r1, r4, lsr #20
   11854:	andeq	r1, r1, r8, asr #17
   11858:	andeq	r1, r1, ip, lsl r9
   1185c:	andeq	r1, r1, r4, lsr #20
   11860:	andeq	r1, r1, r4, lsr #20
   11864:	andeq	r1, r1, r4, lsr #20
   11868:	andeq	r1, r1, r4, lsr #20
   1186c:	andeq	r1, r1, r4, lsr #20
   11870:	andeq	r1, r1, r4, lsr #20
   11874:	strdeq	r1, [r1], -r4
   11878:	andeq	r1, r1, r4, lsr #20
   1187c:	andeq	r1, r1, r4, lsr #20
   11880:	andeq	r1, r1, r4, ror r9
   11884:	andeq	r1, r1, r0, lsl sl
   11888:	andeq	r1, r1, r8, ror #17
   1188c:	movw	r3, #41924	; 0xa3c4
   11890:	movt	r3, #2
   11894:	mov	r2, #2
   11898:	str	r2, [r3, #12]
   1189c:	mov	r0, #0
   118a0:	add	sp, sp, #24
   118a4:	ldr	r4, [sp]
   118a8:	add	sp, sp, #4
   118ac:	pop	{pc}		; (ldr pc, [sp], #4)
   118b0:	movw	r3, #41924	; 0xa3c4
   118b4:	movt	r3, #2
   118b8:	mov	r2, #10
   118bc:	str	r2, [r3, #12]
   118c0:	mov	r0, #0
   118c4:	b	118a0 <__assert_fail@plt+0x5ac>
   118c8:	movw	r3, #41240	; 0xa118
   118cc:	movt	r3, #2
   118d0:	str	r1, [r3, #292]	; 0x124
   118d4:	movw	r3, #41924	; 0xa3c4
   118d8:	movt	r3, #2
   118dc:	mov	r0, #0
   118e0:	str	r0, [r3, #16]
   118e4:	b	118a0 <__assert_fail@plt+0x5ac>
   118e8:	movw	r3, #41924	; 0xa3c4
   118ec:	movt	r3, #2
   118f0:	str	r1, [r3, #16]
   118f4:	movw	r3, #41240	; 0xa118
   118f8:	movt	r3, #2
   118fc:	mov	r0, #0
   11900:	str	r0, [r3, #292]	; 0x124
   11904:	b	118a0 <__assert_fail@plt+0x5ac>
   11908:	movw	r3, #41924	; 0xa3c4
   1190c:	movt	r3, #2
   11910:	str	r1, [r3, #20]
   11914:	mov	r0, #0
   11918:	b	118a0 <__assert_fail@plt+0x5ac>
   1191c:	movw	r3, #41924	; 0xa3c4
   11920:	movt	r3, #2
   11924:	ldr	r2, [r3]
   11928:	orr	r2, r2, #1
   1192c:	str	r2, [r3]
   11930:	cmp	r1, #0
   11934:	beq	1194c <__assert_fail@plt+0x658>
   11938:	movw	r3, #41924	; 0xa3c4
   1193c:	movt	r3, #2
   11940:	str	r1, [r3, #4]
   11944:	mov	r0, #0
   11948:	b	118a0 <__assert_fail@plt+0x5ac>
   1194c:	bl	11198 <getpid@plt>
   11950:	mov	r2, sp
   11954:	asr	r1, r0, #31
   11958:	bl	133a0 <argp_parse@@Base+0xdf0>
   1195c:	bl	13db8 <argp_parse@@Base+0x1808>
   11960:	movw	r3, #41924	; 0xa3c4
   11964:	movt	r3, #2
   11968:	str	r0, [r3, #4]
   1196c:	mov	r0, #0
   11970:	b	118a0 <__assert_fail@plt+0x5ac>
   11974:	movw	r3, #41924	; 0xa3c4
   11978:	movt	r3, #2
   1197c:	ldr	r2, [r3]
   11980:	orr	r2, r2, #32
   11984:	str	r2, [r3]
   11988:	mov	r0, #0
   1198c:	b	118a0 <__assert_fail@plt+0x5ac>
   11990:	movw	r1, #35508	; 0x8ab4
   11994:	movt	r1, #1
   11998:	mov	r0, r4
   1199c:	bl	11030 <strcmp@plt>
   119a0:	cmp	r0, #0
   119a4:	beq	118a0 <__assert_fail@plt+0x5ac>
   119a8:	movw	r3, #41912	; 0xa3b8
   119ac:	movt	r3, #2
   119b0:	ldr	r2, [r3]
   119b4:	movw	r1, #38456	; 0x9638
   119b8:	movt	r1, #1
   119bc:	mov	r0, r4
   119c0:	bl	11174 <freopen64@plt>
   119c4:	cmp	r0, #0
   119c8:	movne	r0, #0
   119cc:	bne	118a0 <__assert_fail@plt+0x5ac>
   119d0:	bl	111e0 <__errno_location@plt>
   119d4:	mov	r3, r4
   119d8:	movw	r2, #35512	; 0x8ab8
   119dc:	movt	r2, #1
   119e0:	ldr	r1, [r0]
   119e4:	mov	r0, #1
   119e8:	bl	11120 <error@plt>
   119ec:	mov	r0, #0
   119f0:	b	118a0 <__assert_fail@plt+0x5ac>
   119f4:	mov	r0, r1
   119f8:	bl	116c0 <__assert_fail@plt+0x3cc>
   119fc:	movw	r3, #41240	; 0xa118
   11a00:	movt	r3, #2
   11a04:	str	r0, [r3]
   11a08:	mov	r0, #0
   11a0c:	b	118a0 <__assert_fail@plt+0x5ac>
   11a10:	movw	r3, #41924	; 0xa3c4
   11a14:	movt	r3, #2
   11a18:	str	r1, [r3, #8]
   11a1c:	mov	r0, #0
   11a20:	b	118a0 <__assert_fail@plt+0x5ac>
   11a24:	mov	r0, #7
   11a28:	b	118a0 <__assert_fail@plt+0x5ac>
   11a2c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11a30:	strd	r6, [sp, #8]
   11a34:	strd	r8, [sp, #16]
   11a38:	strd	sl, [sp, #24]
   11a3c:	str	lr, [sp, #32]
   11a40:	sub	sp, sp, #180	; 0xb4
   11a44:	mov	r5, r0
   11a48:	mov	r6, r1
   11a4c:	mov	r7, #0
   11a50:	str	r7, [sp, #168]	; 0xa8
   11a54:	ldr	r0, [r1]
   11a58:	bl	1342c <argp_parse@@Base+0xe7c>
   11a5c:	movw	r3, #42008	; 0xa418
   11a60:	movt	r3, #2
   11a64:	movw	r2, #35524	; 0x8ac4
   11a68:	movt	r2, #1
   11a6c:	str	r2, [r3]
   11a70:	movw	r4, #41240	; 0xa118
   11a74:	movt	r4, #2
   11a78:	add	r1, r4, #296	; 0x128
   11a7c:	movw	r0, #35548	; 0x8adc
   11a80:	movt	r0, #1
   11a84:	bl	1319c <argp_parse@@Base+0xbec>
   11a88:	str	r7, [sp, #4]
   11a8c:	add	r3, sp, #172	; 0xac
   11a90:	str	r3, [sp]
   11a94:	mov	r3, r7
   11a98:	mov	r2, r6
   11a9c:	mov	r1, r5
   11aa0:	add	r0, r4, #304	; 0x130
   11aa4:	bl	125b0 <argp_parse@@Base>
   11aa8:	ldr	r4, [sp, #172]	; 0xac
   11aac:	sub	r5, r5, r4
   11ab0:	movw	r3, #41924	; 0xa3c4
   11ab4:	movt	r3, #2
   11ab8:	ldr	r3, [r3, #8]
   11abc:	cmp	r3, r7
   11ac0:	beq	11b04 <__assert_fail@plt+0x810>
   11ac4:	movw	r3, #41240	; 0xa118
   11ac8:	movt	r3, #2
   11acc:	ldr	r7, [r3, #292]	; 0x124
   11ad0:	cmp	r7, #0
   11ad4:	beq	11b50 <__assert_fail@plt+0x85c>
   11ad8:	mov	r1, #47	; 0x2f
   11adc:	mov	r0, r7
   11ae0:	bl	111c8 <strchr@plt>
   11ae4:	cmp	r0, #0
   11ae8:	beq	11b50 <__assert_fail@plt+0x85c>
   11aec:	movw	r3, #41924	; 0xa3c4
   11af0:	movt	r3, #2
   11af4:	ldr	r3, [r3, #16]
   11af8:	cmp	r3, #0
   11afc:	beq	11b70 <__assert_fail@plt+0x87c>
   11b00:	b	11b64 <__assert_fail@plt+0x870>
   11b04:	movw	r0, #35556	; 0x8ae4
   11b08:	movt	r0, #1
   11b0c:	bl	1112c <getenv@plt>
   11b10:	movw	r3, #41924	; 0xa3c4
   11b14:	movt	r3, #2
   11b18:	str	r0, [r3, #8]
   11b1c:	cmp	r0, r7
   11b20:	bne	11ac4 <__assert_fail@plt+0x7d0>
   11b24:	bl	11060 <getuid@plt>
   11b28:	bl	11048 <getpwuid@plt>
   11b2c:	cmp	r0, #0
   11b30:	ldrne	r0, [r0]
   11b34:	movweq	r0, #35564	; 0x8aec
   11b38:	movteq	r0, #1
   11b3c:	bl	13db8 <argp_parse@@Base+0x1808>
   11b40:	movw	r3, #41924	; 0xa3c4
   11b44:	movt	r3, #2
   11b48:	str	r0, [r3, #8]
   11b4c:	b	11ac4 <__assert_fail@plt+0x7d0>
   11b50:	movw	r3, #41924	; 0xa3c4
   11b54:	movt	r3, #2
   11b58:	ldr	r3, [r3, #16]
   11b5c:	cmp	r3, #0
   11b60:	beq	11c98 <__assert_fail@plt+0x9a4>
   11b64:	movw	r2, #41240	; 0xa118
   11b68:	movt	r2, #2
   11b6c:	str	r3, [r2, #292]	; 0x124
   11b70:	movw	r3, #41240	; 0xa118
   11b74:	movt	r3, #2
   11b78:	ldr	r0, [r3, #292]	; 0x124
   11b7c:	bl	111bc <strlen@plt>
   11b80:	cmp	r0, #107	; 0x6b
   11b84:	bhi	11c80 <__assert_fail@plt+0x98c>
   11b88:	movw	r3, #41240	; 0xa118
   11b8c:	movt	r3, #2
   11b90:	ldr	r1, [r3, #292]	; 0x124
   11b94:	add	r0, sp, #58	; 0x3a
   11b98:	bl	11114 <strcpy@plt>
   11b9c:	mov	r0, #1
   11ba0:	strh	r0, [sp, #56]	; 0x38
   11ba4:	mov	r2, #0
   11ba8:	mov	r1, #2
   11bac:	bl	112ac <socket@plt>
   11bb0:	movw	r3, #42004	; 0xa414
   11bb4:	movt	r3, #2
   11bb8:	str	r0, [r3]
   11bbc:	cmp	r0, #0
   11bc0:	blt	11eac <__assert_fail@plt+0xbb8>
   11bc4:	movw	r3, #42004	; 0xa414
   11bc8:	movt	r3, #2
   11bcc:	mov	r2, #110	; 0x6e
   11bd0:	add	r1, sp, #56	; 0x38
   11bd4:	ldr	r0, [r3]
   11bd8:	bl	112e8 <connect@plt>
   11bdc:	cmp	r0, #0
   11be0:	bne	11ec8 <__assert_fail@plt+0xbd4>
   11be4:	cmp	r5, #0
   11be8:	ble	11ee4 <__assert_fail@plt+0xbf0>
   11bec:	add	r4, r6, r4, lsl #2
   11bf0:	add	r5, r4, r5, lsl #2
   11bf4:	mov	r6, r4
   11bf8:	mov	r7, #0
   11bfc:	ldr	r0, [r6], #4
   11c00:	bl	111bc <strlen@plt>
   11c04:	add	r0, r0, #1
   11c08:	add	r7, r7, r0
   11c0c:	cmp	r6, r5
   11c10:	bne	11bfc <__assert_fail@plt+0x908>
   11c14:	mov	r0, r7
   11c18:	bl	1394c <argp_parse@@Base+0x139c>
   11c1c:	mov	sl, r0
   11c20:	str	r0, [sp, #168]	; 0xa8
   11c24:	mov	r8, r0
   11c28:	mov	r9, #32
   11c2c:	ldr	r6, [r4], #4
   11c30:	mov	r0, r6
   11c34:	bl	111bc <strlen@plt>
   11c38:	mov	r7, r0
   11c3c:	mov	r2, r0
   11c40:	mov	r1, r6
   11c44:	mov	r0, r8
   11c48:	bl	110a8 <memcpy@plt>
   11c4c:	add	r7, r8, r7
   11c50:	mov	r8, r7
   11c54:	strb	r9, [r8], #1
   11c58:	cmp	r4, r5
   11c5c:	bne	11c2c <__assert_fail@plt+0x938>
   11c60:	mov	r3, #0
   11c64:	strb	r3, [r7]
   11c68:	mov	r0, sl
   11c6c:	bl	113f0 <__assert_fail@plt+0xfc>
   11c70:	ldr	r0, [sp, #168]	; 0xa8
   11c74:	bl	13288 <argp_parse@@Base+0xcd8>
   11c78:	mov	r0, #0
   11c7c:	bl	111a4 <exit@plt>
   11c80:	movw	r2, #35572	; 0x8af4
   11c84:	movt	r2, #1
   11c88:	mov	r1, #0
   11c8c:	mov	r0, #1
   11c90:	bl	11120 <error@plt>
   11c94:	b	11b88 <__assert_fail@plt+0x894>
   11c98:	ldrb	r3, [r7]
   11c9c:	cmp	r3, #91	; 0x5b
   11ca0:	beq	11d4c <__assert_fail@plt+0xa58>
   11ca4:	mov	r1, #58	; 0x3a
   11ca8:	mov	r0, r7
   11cac:	bl	1124c <strrchr@plt>
   11cb0:	cmp	r0, #0
   11cb4:	beq	11f5c <__assert_fail@plt+0xc68>
   11cb8:	mov	r2, r0
   11cbc:	mov	r3, #0
   11cc0:	strb	r3, [r2], #1
   11cc4:	movw	r3, #35516	; 0x8abc
   11cc8:	movt	r3, #1
   11ccc:	cmp	r2, #0
   11cd0:	moveq	r2, r3
   11cd4:	str	r2, [sp, #12]
   11cd8:	mov	r2, #0
   11cdc:	mov	r3, #0
   11ce0:	strd	r2, [sp, #24]
   11ce4:	strd	r2, [sp, #32]
   11ce8:	strd	r2, [sp, #40]	; 0x28
   11cec:	strd	r2, [sp, #48]	; 0x30
   11cf0:	mov	r3, #2
   11cf4:	str	r3, [sp, #32]
   11cf8:	movw	r3, #41924	; 0xa3c4
   11cfc:	movt	r3, #2
   11d00:	ldr	r3, [r3, #12]
   11d04:	str	r3, [sp, #28]
   11d08:	movw	r0, #41240	; 0xa118
   11d0c:	movt	r0, #2
   11d10:	add	r3, sp, #16
   11d14:	add	r2, sp, #24
   11d18:	ldr	r1, [sp, #12]
   11d1c:	ldr	r0, [r0, #292]	; 0x124
   11d20:	bl	112a0 <getaddrinfo@plt>
   11d24:	cmp	r0, #0
   11d28:	blt	11d98 <__assert_fail@plt+0xaa4>
   11d2c:	ldr	r7, [sp, #16]
   11d30:	movw	r8, #42004	; 0xa414
   11d34:	movt	r8, #2
   11d38:	movw	r9, #41924	; 0xa3c4
   11d3c:	movt	r9, #2
   11d40:	mov	sl, #0
   11d44:	mov	fp, #0
   11d48:	b	11ddc <__assert_fail@plt+0xae8>
   11d4c:	add	r0, r7, #1
   11d50:	movw	r3, #41240	; 0xa118
   11d54:	movt	r3, #2
   11d58:	str	r0, [r3, #292]	; 0x124
   11d5c:	mov	r1, #93	; 0x5d
   11d60:	bl	111c8 <strchr@plt>
   11d64:	cmp	r0, #0
   11d68:	beq	11f5c <__assert_fail@plt+0xc68>
   11d6c:	mov	r3, #0
   11d70:	strb	r3, [r0]
   11d74:	ldrb	r3, [r0, #1]
   11d78:	cmp	r3, #58	; 0x3a
   11d7c:	addeq	r3, r0, #2
   11d80:	streq	r3, [sp, #12]
   11d84:	beq	11cd8 <__assert_fail@plt+0x9e4>
   11d88:	movw	r3, #35516	; 0x8abc
   11d8c:	movt	r3, #1
   11d90:	str	r3, [sp, #12]
   11d94:	b	11cd8 <__assert_fail@plt+0x9e4>
   11d98:	movw	r3, #41240	; 0xa118
   11d9c:	movt	r3, #2
   11da0:	ldr	r7, [r3, #292]	; 0x124
   11da4:	bl	11090 <gai_strerror@plt>
   11da8:	str	r0, [sp, #4]
   11dac:	ldr	r3, [sp, #12]
   11db0:	str	r3, [sp]
   11db4:	mov	r3, r7
   11db8:	movw	r2, #35600	; 0x8b10
   11dbc:	movt	r2, #1
   11dc0:	mov	r1, #0
   11dc4:	mov	r0, #1
   11dc8:	bl	11120 <error@plt>
   11dcc:	b	11d2c <__assert_fail@plt+0xa38>
   11dd0:	ldr	r0, [r8]
   11dd4:	bl	112d0 <close@plt>
   11dd8:	ldr	r7, [r7, #28]
   11ddc:	cmp	r7, #0
   11de0:	beq	11f20 <__assert_fail@plt+0xc2c>
   11de4:	ldr	r2, [r7, #12]
   11de8:	ldr	r1, [r7, #8]
   11dec:	ldr	r0, [r7, #4]
   11df0:	bl	112ac <socket@plt>
   11df4:	str	r0, [r8]
   11df8:	cmp	r0, #0
   11dfc:	blt	11dd8 <__assert_fail@plt+0xae4>
   11e00:	ldr	r0, [r9, #20]
   11e04:	cmp	r0, #0
   11e08:	beq	11e60 <__assert_fail@plt+0xb6c>
   11e0c:	strd	sl, [sp, #56]	; 0x38
   11e10:	strd	sl, [sp, #64]	; 0x40
   11e14:	strd	sl, [sp, #72]	; 0x48
   11e18:	strd	sl, [sp, #80]	; 0x50
   11e1c:	ldr	r3, [r7, #4]
   11e20:	str	r3, [sp, #60]	; 0x3c
   11e24:	add	r3, sp, #20
   11e28:	add	r2, sp, #56	; 0x38
   11e2c:	mov	r1, #0
   11e30:	bl	112a0 <getaddrinfo@plt>
   11e34:	cmp	r0, #0
   11e38:	bne	11dd0 <__assert_fail@plt+0xadc>
   11e3c:	ldr	r3, [sp, #20]
   11e40:	ldr	r2, [r3, #16]
   11e44:	ldr	r1, [r3, #20]
   11e48:	ldr	r0, [r8]
   11e4c:	bl	111f8 <bind@plt>
   11e50:	cmp	r0, #0
   11e54:	bne	11e8c <__assert_fail@plt+0xb98>
   11e58:	ldr	r0, [sp, #20]
   11e5c:	bl	11294 <freeaddrinfo@plt>
   11e60:	ldr	r2, [r7, #16]
   11e64:	ldr	r1, [r7, #20]
   11e68:	ldr	r0, [r8]
   11e6c:	bl	112e8 <connect@plt>
   11e70:	cmp	r0, #0
   11e74:	bne	11ea0 <__assert_fail@plt+0xbac>
   11e78:	ldr	r0, [sp, #16]
   11e7c:	cmp	r0, #0
   11e80:	beq	11be4 <__assert_fail@plt+0x8f0>
   11e84:	bl	11294 <freeaddrinfo@plt>
   11e88:	b	11be4 <__assert_fail@plt+0x8f0>
   11e8c:	ldr	r0, [sp, #20]
   11e90:	bl	11294 <freeaddrinfo@plt>
   11e94:	ldr	r0, [r8]
   11e98:	bl	112d0 <close@plt>
   11e9c:	b	11dd8 <__assert_fail@plt+0xae4>
   11ea0:	ldr	r0, [r8]
   11ea4:	bl	112d0 <close@plt>
   11ea8:	b	11dd8 <__assert_fail@plt+0xae4>
   11eac:	bl	111e0 <__errno_location@plt>
   11eb0:	movw	r2, #35620	; 0x8b24
   11eb4:	movt	r2, #1
   11eb8:	ldr	r1, [r0]
   11ebc:	mov	r0, #1
   11ec0:	bl	11120 <error@plt>
   11ec4:	b	11bc4 <__assert_fail@plt+0x8d0>
   11ec8:	bl	111e0 <__errno_location@plt>
   11ecc:	movw	r2, #35644	; 0x8b3c
   11ed0:	movt	r2, #1
   11ed4:	ldr	r1, [r0]
   11ed8:	mov	r0, #1
   11edc:	bl	11120 <error@plt>
   11ee0:	b	11be4 <__assert_fail@plt+0x8f0>
   11ee4:	mov	r3, #0
   11ee8:	str	r3, [sp, #56]	; 0x38
   11eec:	movw	r4, #41912	; 0xa3b8
   11ef0:	movt	r4, #2
   11ef4:	b	11f00 <__assert_fail@plt+0xc0c>
   11ef8:	ldr	r0, [sp, #168]	; 0xa8
   11efc:	bl	113f0 <__assert_fail@plt+0xfc>
   11f00:	ldr	r3, [r4]
   11f04:	mov	r2, #10
   11f08:	add	r1, sp, #56	; 0x38
   11f0c:	add	r0, sp, #168	; 0xa8
   11f10:	bl	11024 <__getdelim@plt>
   11f14:	cmp	r0, #0
   11f18:	bgt	11ef8 <__assert_fail@plt+0xc04>
   11f1c:	b	11c70 <__assert_fail@plt+0x97c>
   11f20:	ldr	r0, [sp, #16]
   11f24:	cmp	r0, #0
   11f28:	beq	11f30 <__assert_fail@plt+0xc3c>
   11f2c:	bl	11294 <freeaddrinfo@plt>
   11f30:	movw	r3, #41240	; 0xa118
   11f34:	movt	r3, #2
   11f38:	ldr	r2, [sp, #12]
   11f3c:	str	r2, [sp]
   11f40:	ldr	r3, [r3, #292]	; 0x124
   11f44:	movw	r2, #35612	; 0x8b1c
   11f48:	movt	r2, #1
   11f4c:	mov	r1, #99	; 0x63
   11f50:	mov	r0, #1
   11f54:	bl	11120 <error@plt>
   11f58:	b	11be4 <__assert_fail@plt+0x8f0>
   11f5c:	movw	r3, #35516	; 0x8abc
   11f60:	movt	r3, #1
   11f64:	str	r3, [sp, #12]
   11f68:	b	11cd8 <__assert_fail@plt+0x9e4>
   11f6c:	ldr	ip, [r0]
   11f70:	cmp	ip, #0
   11f74:	beq	11fdc <__assert_fail@plt+0xce8>
   11f78:	strd	r4, [sp, #-16]!
   11f7c:	str	r6, [sp, #8]
   11f80:	str	lr, [sp, #12]
   11f84:	mov	ip, r2
   11f88:	mov	r5, r1
   11f8c:	mov	r4, r0
   11f90:	ldr	r2, [r0, #32]
   11f94:	str	r2, [r1, #36]	; 0x24
   11f98:	ldr	r2, [r0, #24]
   11f9c:	str	r2, [r1, #28]
   11fa0:	ldr	r2, [r0, #28]
   11fa4:	str	r2, [r1, #32]
   11fa8:	ldr	r2, [r0, #12]
   11fac:	str	r2, [r1, #20]
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r2, r1
   11fb8:	mov	r1, r3
   11fbc:	mov	r0, ip
   11fc0:	blx	r6
   11fc4:	ldr	r3, [r5, #36]	; 0x24
   11fc8:	str	r3, [r4, #32]
   11fcc:	ldrd	r4, [sp]
   11fd0:	ldr	r6, [sp, #8]
   11fd4:	add	sp, sp, #12
   11fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11fdc:	mov	r0, #7
   11fe0:	bx	lr
   11fe4:	strd	r4, [sp, #-16]!
   11fe8:	str	r6, [sp, #8]
   11fec:	str	lr, [sp, #12]
   11ff0:	ldr	r5, [r0, #16]
   11ff4:	ldr	r3, [r0]
   11ff8:	cmp	r3, #0
   11ffc:	beq	12014 <__assert_fail@plt+0xd20>
   12000:	ldr	r2, [r1, #8]
   12004:	add	r2, r2, #1
   12008:	str	r2, [r1, #8]
   1200c:	mov	r2, #0
   12010:	b	12034 <__assert_fail@plt+0xd40>
   12014:	ldr	r3, [r0, #4]
   12018:	cmp	r3, #0
   1201c:	beq	12084 <__assert_fail@plt+0xd90>
   12020:	ldr	r3, [r1, #8]
   12024:	add	r3, r3, #1
   12028:	str	r3, [r1, #8]
   1202c:	b	12084 <__assert_fail@plt+0xd90>
   12030:	add	r2, r2, #1
   12034:	add	r3, r3, #24
   12038:	ldr	r0, [r3, #-20]	; 0xffffffec
   1203c:	cmp	r0, #0
   12040:	bne	12030 <__assert_fail@plt+0xd3c>
   12044:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12048:	cmp	r0, #0
   1204c:	bne	12030 <__assert_fail@plt+0xd3c>
   12050:	ldr	r0, [r3, #-8]
   12054:	cmp	r0, #0
   12058:	bne	12030 <__assert_fail@plt+0xd3c>
   1205c:	ldr	r0, [r3, #-4]
   12060:	cmp	r0, #0
   12064:	bne	12030 <__assert_fail@plt+0xd3c>
   12068:	add	r0, r2, r2, lsl #1
   1206c:	ldr	r3, [r1]
   12070:	add	r3, r3, r0
   12074:	str	r3, [r1]
   12078:	ldr	r3, [r1, #4]
   1207c:	add	r2, r3, r2
   12080:	str	r2, [r1, #4]
   12084:	cmp	r5, #0
   12088:	beq	120bc <__assert_fail@plt+0xdc8>
   1208c:	ldr	r0, [r5]
   12090:	cmp	r0, #0
   12094:	beq	120bc <__assert_fail@plt+0xdc8>
   12098:	mov	r4, r1
   1209c:	mov	r1, r4
   120a0:	bl	11fe4 <__assert_fail@plt+0xcf0>
   120a4:	ldr	r3, [r4, #12]
   120a8:	add	r3, r3, #1
   120ac:	str	r3, [r4, #12]
   120b0:	ldr	r0, [r5, #16]!
   120b4:	cmp	r0, #0
   120b8:	bne	1209c <__assert_fail@plt+0xda8>
   120bc:	ldrd	r4, [sp]
   120c0:	ldr	r6, [sp, #8]
   120c4:	add	sp, sp, #12
   120c8:	pop	{pc}		; (ldr pc, [sp], #4)
   120cc:	cmp	r0, #86	; 0x56
   120d0:	beq	120dc <__assert_fail@plt+0xde8>
   120d4:	mov	r0, #7
   120d8:	bx	lr
   120dc:	str	r4, [sp, #-8]!
   120e0:	str	lr, [sp, #4]
   120e4:	mov	r4, r2
   120e8:	movw	r3, #41952	; 0xa3e0
   120ec:	movt	r3, #2
   120f0:	ldr	r3, [r3]
   120f4:	cmp	r3, #0
   120f8:	beq	12124 <__assert_fail@plt+0xe30>
   120fc:	mov	r1, r2
   12100:	ldr	r0, [r2, #48]	; 0x30
   12104:	blx	r3
   12108:	ldr	r3, [r4, #16]
   1210c:	tst	r3, #32
   12110:	beq	12168 <__assert_fail@plt+0xe74>
   12114:	mov	r0, #0
   12118:	ldr	r4, [sp]
   1211c:	add	sp, sp, #4
   12120:	pop	{pc}		; (ldr pc, [sp], #4)
   12124:	movw	r3, #42012	; 0xa41c
   12128:	movt	r3, #2
   1212c:	ldr	r2, [r3]
   12130:	cmp	r2, #0
   12134:	beq	1214c <__assert_fail@plt+0xe58>
   12138:	movw	r1, #37036	; 0x90ac
   1213c:	movt	r1, #1
   12140:	ldr	r0, [r4, #48]	; 0x30
   12144:	bl	111d4 <fprintf@plt>
   12148:	b	12108 <__assert_fail@plt+0xe14>
   1214c:	movw	r2, #36624	; 0x8f10
   12150:	movt	r2, #1
   12154:	movw	r1, #35512	; 0x8ab8
   12158:	movt	r1, #1
   1215c:	mov	r0, r4
   12160:	bl	17208 <argp_error@@Base>
   12164:	b	12108 <__assert_fail@plt+0xe14>
   12168:	mov	r0, #0
   1216c:	bl	111a4 <exit@plt>
   12170:	strd	r4, [sp, #-16]!
   12174:	str	r6, [sp, #8]
   12178:	str	lr, [sp, #12]
   1217c:	mov	r4, r2
   12180:	cmn	r0, #3
   12184:	beq	1223c <__assert_fail@plt+0xf48>
   12188:	mov	r5, r1
   1218c:	ble	121c8 <__assert_fail@plt+0xed4>
   12190:	cmn	r0, #2
   12194:	beq	12254 <__assert_fail@plt+0xf60>
   12198:	cmp	r0, #63	; 0x3f
   1219c:	movne	r0, #7
   121a0:	bne	121b8 <__assert_fail@plt+0xec4>
   121a4:	movw	r2, #634	; 0x27a
   121a8:	ldr	r1, [r4, #48]	; 0x30
   121ac:	mov	r0, r4
   121b0:	bl	17140 <argp_state_help@@Base>
   121b4:	mov	r0, #0
   121b8:	ldrd	r4, [sp]
   121bc:	ldr	r6, [sp, #8]
   121c0:	add	sp, sp, #12
   121c4:	pop	{pc}		; (ldr pc, [sp], #4)
   121c8:	cmn	r0, #4
   121cc:	movne	r0, #7
   121d0:	bne	121b8 <__assert_fail@plt+0xec4>
   121d4:	movw	r0, #36660	; 0x8f34
   121d8:	movt	r0, #1
   121dc:	mov	r2, #10
   121e0:	mov	r1, #0
   121e4:	cmp	r5, r1
   121e8:	movne	r0, r5
   121ec:	bl	1103c <strtol@plt>
   121f0:	movw	r3, #41948	; 0xa3dc
   121f4:	movt	r3, #2
   121f8:	str	r0, [r3]
   121fc:	ldr	r2, [r3]
   12200:	sub	r1, r2, #1
   12204:	str	r1, [r3]
   12208:	cmp	r2, #0
   1220c:	ble	1229c <__assert_fail@plt+0xfa8>
   12210:	mov	r5, #1
   12214:	mov	r4, r3
   12218:	mov	r0, r5
   1221c:	bl	110cc <sleep@plt>
   12220:	ldr	r3, [r4]
   12224:	sub	r2, r3, #1
   12228:	str	r2, [r4]
   1222c:	cmp	r3, #0
   12230:	bgt	12218 <__assert_fail@plt+0xf24>
   12234:	mov	r0, #0
   12238:	b	121b8 <__assert_fail@plt+0xec4>
   1223c:	movw	r2, #513	; 0x201
   12240:	ldr	r1, [r4, #48]	; 0x30
   12244:	mov	r0, r4
   12248:	bl	17140 <argp_state_help@@Base>
   1224c:	mov	r0, #0
   12250:	b	121b8 <__assert_fail@plt+0xec4>
   12254:	movw	r3, #41900	; 0xa3ac
   12258:	movt	r3, #2
   1225c:	str	r1, [r3]
   12260:	mov	r0, r1
   12264:	bl	131c4 <argp_parse@@Base+0xc14>
   12268:	str	r0, [r4, #40]	; 0x28
   1226c:	movw	r3, #41896	; 0xa3a8
   12270:	movt	r3, #2
   12274:	str	r0, [r3]
   12278:	ldr	r3, [r4, #16]
   1227c:	and	r3, r3, #3
   12280:	cmp	r3, #1
   12284:	movne	r0, #0
   12288:	bne	121b8 <__assert_fail@plt+0xec4>
   1228c:	ldr	r3, [r4, #8]
   12290:	str	r5, [r3]
   12294:	mov	r0, #0
   12298:	b	121b8 <__assert_fail@plt+0xec4>
   1229c:	mov	r0, #0
   122a0:	b	121b8 <__assert_fail@plt+0xec4>
   122a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   122a8:	strd	r6, [sp, #8]
   122ac:	strd	r8, [sp, #16]
   122b0:	strd	sl, [sp, #24]
   122b4:	str	lr, [sp, #32]
   122b8:	sub	sp, sp, #36	; 0x24
   122bc:	str	r0, [sp, #16]
   122c0:	str	r1, [sp, #20]
   122c4:	str	r2, [sp, #24]
   122c8:	str	r3, [sp, #8]
   122cc:	ldr	r8, [sp, #72]	; 0x48
   122d0:	ldr	r6, [r0]
   122d4:	ldr	sl, [r0, #16]
   122d8:	cmp	r6, #0
   122dc:	beq	122f8 <__assert_fail@plt+0x1004>
   122e0:	mov	r4, r6
   122e4:	movw	r3, #36409	; 0x8e39
   122e8:	movt	r3, #14563	; 0x38e3
   122ec:	str	r3, [sp, #12]
   122f0:	str	sl, [sp, #28]
   122f4:	b	1233c <__assert_fail@plt+0x1048>
   122f8:	ldr	r3, [r0, #4]
   122fc:	cmp	r3, #0
   12300:	bne	124c8 <__assert_fail@plt+0x11d4>
   12304:	ldr	r0, [sp, #8]
   12308:	str	r6, [sp, #8]
   1230c:	b	1254c <__assert_fail@plt+0x1258>
   12310:	ldr	r0, [r7, #16]!
   12314:	cmp	r0, #0
   12318:	beq	1241c <__assert_fail@plt+0x1128>
   1231c:	mov	r1, r9
   12320:	bl	11030 <strcmp@plt>
   12324:	cmp	r0, #0
   12328:	bne	12310 <__assert_fail@plt+0x101c>
   1232c:	sub	sl, r7, fp
   12330:	cmp	sl, #0
   12334:	blt	1241c <__assert_fail@plt+0x1128>
   12338:	add	r4, r4, #24
   1233c:	ldr	r7, [r4, #4]
   12340:	cmp	r7, #0
   12344:	bne	12354 <__assert_fail@plt+0x1060>
   12348:	ldr	r3, [r4]
   1234c:	cmp	r3, #0
   12350:	beq	124ac <__assert_fail@plt+0x11b8>
   12354:	ldr	r3, [r4, #12]
   12358:	and	r2, r3, #4
   1235c:	cmp	r2, #0
   12360:	moveq	r6, r4
   12364:	ldr	r5, [r6, #12]
   12368:	ands	r5, r5, #8
   1236c:	bne	12338 <__assert_fail@plt+0x1044>
   12370:	tst	r3, #8
   12374:	bne	123f4 <__assert_fail@plt+0x1100>
   12378:	sub	r3, r7, #1
   1237c:	cmp	r3, #254	; 0xfe
   12380:	bhi	123f4 <__assert_fail@plt+0x1100>
   12384:	bl	1118c <__ctype_b_loc@plt>
   12388:	ldr	r2, [r0]
   1238c:	lsl	r3, r7, #1
   12390:	ldrh	r3, [r2, r3]
   12394:	tst	r3, #16384	; 0x4000
   12398:	beq	123f4 <__assert_fail@plt+0x1100>
   1239c:	ldr	r3, [r8, #4]
   123a0:	add	r2, r3, #1
   123a4:	str	r2, [r8, #4]
   123a8:	strb	r7, [r3]
   123ac:	ldr	r3, [r6, #8]
   123b0:	cmp	r3, #0
   123b4:	beq	123e8 <__assert_fail@plt+0x10f4>
   123b8:	ldr	r3, [r8, #4]
   123bc:	add	r2, r3, #1
   123c0:	str	r2, [r8, #4]
   123c4:	mov	r1, #58	; 0x3a
   123c8:	strb	r1, [r3]
   123cc:	ldr	r3, [r6, #12]
   123d0:	tst	r3, #1
   123d4:	beq	123e8 <__assert_fail@plt+0x10f4>
   123d8:	ldr	r3, [r8, #4]
   123dc:	add	r2, r3, #1
   123e0:	str	r2, [r8, #4]
   123e4:	strb	r1, [r3]
   123e8:	ldr	r3, [r8, #4]
   123ec:	mov	r2, #0
   123f0:	strb	r2, [r3]
   123f4:	ldr	r9, [r4]
   123f8:	cmp	r9, #0
   123fc:	beq	12338 <__assert_fail@plt+0x1044>
   12400:	ldr	r3, [r8]
   12404:	ldr	fp, [r3, #8]
   12408:	ldr	r0, [fp]
   1240c:	cmp	r0, #0
   12410:	beq	1241c <__assert_fail@plt+0x1128>
   12414:	mov	r7, fp
   12418:	b	1231c <__assert_fail@plt+0x1028>
   1241c:	ldr	r3, [r8, #8]
   12420:	str	r9, [r3]
   12424:	ldr	r3, [r6, #8]
   12428:	cmp	r3, #0
   1242c:	beq	12444 <__assert_fail@plt+0x1150>
   12430:	ldr	r3, [r6, #12]
   12434:	and	r3, r3, #1
   12438:	cmp	r3, #0
   1243c:	movne	r5, #2
   12440:	moveq	r5, #1
   12444:	ldr	r3, [r8, #8]
   12448:	str	r5, [r3, #4]
   1244c:	ldr	r3, [r8, #8]
   12450:	mov	r2, #0
   12454:	str	r2, [r3, #8]
   12458:	ldr	r3, [r4, #4]
   1245c:	cmp	r3, r2
   12460:	ldreq	r3, [r6, #4]
   12464:	bic	r2, r3, #-16777216	; 0xff000000
   12468:	ldr	r1, [r8, #8]
   1246c:	ldr	r3, [r8]
   12470:	ldr	r3, [r3, #48]	; 0x30
   12474:	ldr	r0, [sp, #8]
   12478:	sub	r3, r0, r3
   1247c:	asr	r3, r3, #2
   12480:	ldr	r0, [sp, #12]
   12484:	mul	r3, r0, r3
   12488:	add	r3, r3, #1
   1248c:	add	r3, r2, r3, lsl #24
   12490:	str	r3, [r1, #12]
   12494:	ldr	r3, [r8, #8]
   12498:	add	r2, r3, #16
   1249c:	str	r2, [r8, #8]
   124a0:	mov	r2, #0
   124a4:	str	r2, [r3, #16]
   124a8:	b	12338 <__assert_fail@plt+0x1044>
   124ac:	ldr	r3, [r4, #16]
   124b0:	cmp	r3, #0
   124b4:	bne	12354 <__assert_fail@plt+0x1060>
   124b8:	ldr	r3, [r4, #20]
   124bc:	cmp	r3, #0
   124c0:	bne	12354 <__assert_fail@plt+0x1060>
   124c4:	ldr	sl, [sp, #28]
   124c8:	ldr	r1, [sp, #16]
   124cc:	ldr	r3, [r1, #4]
   124d0:	ldr	r2, [sp, #8]
   124d4:	str	r3, [r2]
   124d8:	str	r1, [r2, #4]
   124dc:	ldr	r3, [r8, #4]
   124e0:	str	r3, [r2, #8]
   124e4:	mov	r3, #0
   124e8:	str	r3, [r2, #12]
   124ec:	ldr	r1, [sp, #20]
   124f0:	str	r1, [r2, #16]
   124f4:	ldr	r1, [sp, #24]
   124f8:	str	r1, [r2, #20]
   124fc:	str	r3, [r2, #24]
   12500:	str	r3, [r2, #32]
   12504:	str	r3, [r2, #28]
   12508:	cmp	sl, r3
   1250c:	beq	12544 <__assert_fail@plt+0x1250>
   12510:	ldr	r3, [sl]
   12514:	cmp	r3, #0
   12518:	beq	125a8 <__assert_fail@plt+0x12b4>
   1251c:	mov	r3, #0
   12520:	add	r3, r3, #1
   12524:	ldr	r2, [sl, r3, lsl #4]
   12528:	cmp	r2, #0
   1252c:	bne	12520 <__assert_fail@plt+0x122c>
   12530:	ldr	r2, [r8, #12]
   12534:	ldr	r1, [sp, #8]
   12538:	str	r2, [r1, #28]
   1253c:	add	r3, r2, r3, lsl #2
   12540:	str	r3, [r8, #12]
   12544:	ldr	r3, [sp, #8]
   12548:	add	r0, r3, #36	; 0x24
   1254c:	cmp	sl, #0
   12550:	beq	1258c <__assert_fail@plt+0x1298>
   12554:	ldr	ip, [sl]
   12558:	cmp	ip, #0
   1255c:	beq	1258c <__assert_fail@plt+0x1298>
   12560:	mov	r2, #0
   12564:	add	r4, r2, #1
   12568:	str	r8, [sp]
   1256c:	mov	r3, r0
   12570:	ldr	r1, [sp, #8]
   12574:	mov	r0, ip
   12578:	bl	122a4 <__assert_fail@plt+0xfb0>
   1257c:	ldr	ip, [sl, r4, lsl #4]
   12580:	mov	r2, r4
   12584:	cmp	ip, #0
   12588:	bne	12564 <__assert_fail@plt+0x1270>
   1258c:	add	sp, sp, #36	; 0x24
   12590:	ldrd	r4, [sp]
   12594:	ldrd	r6, [sp, #8]
   12598:	ldrd	r8, [sp, #16]
   1259c:	ldrd	sl, [sp, #24]
   125a0:	add	sp, sp, #32
   125a4:	pop	{pc}		; (ldr pc, [sp], #4)
   125a8:	mov	r3, #0
   125ac:	b	12530 <__assert_fail@plt+0x123c>

000125b0 <argp_parse@@Base>:
   125b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   125b4:	strd	r6, [sp, #8]
   125b8:	strd	r8, [sp, #16]
   125bc:	strd	sl, [sp, #24]
   125c0:	str	lr, [sp, #32]
   125c4:	add	fp, sp, #32
   125c8:	sub	sp, sp, #228	; 0xe4
   125cc:	mov	r8, r0
   125d0:	str	r1, [fp, #-240]	; 0xffffff10
   125d4:	str	r2, [fp, #-232]	; 0xffffff18
   125d8:	mov	r7, r3
   125dc:	tst	r3, #1
   125e0:	bne	1260c <argp_parse@@Base+0x5c>
   125e4:	movw	r3, #41900	; 0xa3ac
   125e8:	movt	r3, #2
   125ec:	ldr	r3, [r3]
   125f0:	cmp	r3, #0
   125f4:	beq	12664 <argp_parse@@Base+0xb4>
   125f8:	movw	r3, #41896	; 0xa3a8
   125fc:	movt	r3, #2
   12600:	ldr	r3, [r3]
   12604:	cmp	r3, #0
   12608:	beq	12678 <argp_parse@@Base+0xc8>
   1260c:	tst	r7, #16
   12610:	beq	12694 <argp_parse@@Base+0xe4>
   12614:	str	r7, [fp, #-244]	; 0xffffff0c
   12618:	mov	r3, #0
   1261c:	str	r3, [fp, #-188]	; 0xffffff44
   12620:	str	r3, [fp, #-184]	; 0xffffff48
   12624:	str	r3, [fp, #-180]	; 0xffffff4c
   12628:	str	r3, [fp, #-176]	; 0xffffff50
   1262c:	str	r3, [fp, #-172]	; 0xffffff54
   12630:	str	r3, [fp, #-168]	; 0xffffff58
   12634:	str	r3, [fp, #-164]	; 0xffffff5c
   12638:	ands	r2, r7, #4
   1263c:	str	r2, [fp, #-248]	; 0xffffff08
   12640:	moveq	r2, #1
   12644:	movne	r2, r3
   12648:	str	r2, [fp, #-228]	; 0xffffff1c
   1264c:	str	r3, [fp, #-224]	; 0xffffff20
   12650:	str	r3, [fp, #-220]	; 0xffffff24
   12654:	str	r3, [fp, #-216]	; 0xffffff28
   12658:	cmp	r8, r3
   1265c:	beq	12760 <argp_parse@@Base+0x1b0>
   12660:	b	12754 <argp_parse@@Base+0x1a4>
   12664:	ldr	r2, [r2]
   12668:	movw	r3, #41900	; 0xa3ac
   1266c:	movt	r3, #2
   12670:	str	r2, [r3]
   12674:	b	125f8 <argp_parse@@Base+0x48>
   12678:	ldr	r3, [fp, #-232]	; 0xffffff18
   1267c:	ldr	r0, [r3]
   12680:	bl	131c4 <argp_parse@@Base+0xc14>
   12684:	movw	r3, #41896	; 0xa3a8
   12688:	movt	r3, #2
   1268c:	str	r0, [r3]
   12690:	b	1260c <argp_parse@@Base+0x5c>
   12694:	sub	sp, sp, #64	; 0x40
   12698:	add	r5, sp, #8
   1269c:	sub	sp, sp, #32
   126a0:	add	r4, sp, #8
   126a4:	mov	r1, #0
   126a8:	str	r1, [r4]
   126ac:	str	r1, [r4, #4]
   126b0:	str	r1, [r4, #8]
   126b4:	str	r1, [r4, #12]
   126b8:	str	r1, [r4, #20]
   126bc:	str	r1, [r4, #24]
   126c0:	str	r5, [r4, #16]
   126c4:	mov	r2, #64	; 0x40
   126c8:	mov	r0, r5
   126cc:	bl	11204 <memset@plt>
   126d0:	cmp	r8, #0
   126d4:	mov	r0, r5
   126d8:	strne	r8, [r0], #16
   126dc:	movw	r3, #36344	; 0x8df8
   126e0:	movt	r3, #1
   126e4:	str	r3, [r0]
   126e8:	movw	r3, #42012	; 0xa41c
   126ec:	movt	r3, #2
   126f0:	ldr	r3, [r3]
   126f4:	cmp	r3, #0
   126f8:	beq	12920 <argp_parse@@Base+0x370>
   126fc:	add	r2, r0, #32
   12700:	ldr	r3, [pc, #2548]	; 130fc <argp_parse@@Base+0xb4c>
   12704:	str	r3, [r0, #16]
   12708:	mov	r3, #0
   1270c:	str	r3, [r2]
   12710:	str	r7, [fp, #-244]	; 0xffffff0c
   12714:	str	r3, [fp, #-188]	; 0xffffff44
   12718:	str	r3, [fp, #-184]	; 0xffffff48
   1271c:	str	r3, [fp, #-180]	; 0xffffff4c
   12720:	str	r3, [fp, #-176]	; 0xffffff50
   12724:	str	r3, [fp, #-172]	; 0xffffff54
   12728:	str	r3, [fp, #-168]	; 0xffffff58
   1272c:	str	r3, [fp, #-164]	; 0xffffff5c
   12730:	ands	r2, r7, #4
   12734:	str	r2, [fp, #-248]	; 0xffffff08
   12738:	moveq	r2, #1
   1273c:	movne	r2, r3
   12740:	str	r2, [fp, #-228]	; 0xffffff1c
   12744:	str	r3, [fp, #-224]	; 0xffffff20
   12748:	str	r3, [fp, #-220]	; 0xffffff24
   1274c:	str	r3, [fp, #-216]	; 0xffffff28
   12750:	mov	r8, r4
   12754:	sub	r1, fp, #228	; 0xe4
   12758:	mov	r0, r8
   1275c:	bl	11fe4 <__assert_fail@plt+0xcf0>
   12760:	ldr	r4, [fp, #-220]	; 0xffffff24
   12764:	add	r4, r4, #1
   12768:	add	r4, r4, r4, lsl #3
   1276c:	lsl	r4, r4, #2
   12770:	ldr	r3, [fp, #-216]	; 0xffffff28
   12774:	lsl	r3, r3, #2
   12778:	str	r3, [fp, #-236]	; 0xffffff14
   1277c:	add	r9, r3, r4
   12780:	ldr	r5, [fp, #-224]	; 0xffffff20
   12784:	add	r5, r5, #1
   12788:	add	r5, r9, r5, lsl #4
   1278c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12790:	add	r0, r0, #1
   12794:	add	r0, r0, r5
   12798:	bl	13e84 <argp_parse@@Base+0x18d4>
   1279c:	mov	r6, r0
   127a0:	str	r0, [fp, #-40]	; 0xffffffd8
   127a4:	cmp	r0, #0
   127a8:	moveq	r4, #12
   127ac:	beq	12f1c <argp_parse@@Base+0x96c>
   127b0:	str	r0, [fp, #-112]	; 0xffffff90
   127b4:	add	r4, r0, r4
   127b8:	str	r4, [fp, #-104]	; 0xffffff98
   127bc:	add	r9, r0, r9
   127c0:	str	r9, [fp, #-152]	; 0xffffff68
   127c4:	add	sl, r0, r5
   127c8:	str	sl, [fp, #-156]	; 0xffffff64
   127cc:	mov	r3, #1
   127d0:	str	r3, [fp, #-196]	; 0xffffff3c
   127d4:	str	r3, [fp, #-192]	; 0xffffff40
   127d8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   127dc:	strd	r2, [fp, #-148]	; 0xffffff6c
   127e0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   127e4:	strd	r2, [fp, #-140]	; 0xffffff74
   127e8:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   127ec:	strd	r2, [fp, #-132]	; 0xffffff7c
   127f0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   127f4:	strd	r2, [fp, #-124]	; 0xffffff84
   127f8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   127fc:	str	r3, [fp, #-116]	; 0xffffff8c
   12800:	ldr	r2, [fp, #-236]	; 0xffffff14
   12804:	mov	r1, #0
   12808:	mov	r0, r4
   1280c:	bl	11204 <memset@plt>
   12810:	sub	r3, fp, #160	; 0xa0
   12814:	str	r3, [fp, #-212]	; 0xffffff2c
   12818:	str	sl, [fp, #-208]	; 0xffffff30
   1281c:	str	r9, [fp, #-204]	; 0xffffff34
   12820:	str	r4, [fp, #-200]	; 0xffffff38
   12824:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12828:	tst	r3, #8
   1282c:	beq	1293c <argp_parse@@Base+0x38c>
   12830:	add	sl, sl, #1
   12834:	str	sl, [fp, #-208]	; 0xffffff30
   12838:	mov	r3, #45	; 0x2d
   1283c:	strb	r3, [r6, r5]
   12840:	mov	r3, #0
   12844:	ldr	r2, [fp, #-208]	; 0xffffff30
   12848:	strb	r3, [r2]
   1284c:	ldr	r2, [fp, #-204]	; 0xffffff34
   12850:	str	r3, [r2]
   12854:	str	r8, [fp, #-160]	; 0xffffff60
   12858:	cmp	r8, r3
   1285c:	beq	1295c <argp_parse@@Base+0x3ac>
   12860:	sub	r3, fp, #212	; 0xd4
   12864:	str	r3, [sp]
   12868:	ldr	r3, [fp, #-112]	; 0xffffff90
   1286c:	mov	r2, #0
   12870:	mov	r1, r2
   12874:	mov	r0, r8
   12878:	bl	122a4 <__assert_fail@plt+0xfb0>
   1287c:	str	r0, [fp, #-108]	; 0xffffff94
   12880:	mov	r2, #0
   12884:	mov	r3, #0
   12888:	strd	r2, [fp, #-76]	; 0xffffffb4
   1288c:	strd	r2, [fp, #-68]	; 0xffffffbc
   12890:	strd	r2, [fp, #-60]	; 0xffffffc4
   12894:	ldr	r3, [fp, #-160]	; 0xffffff60
   12898:	str	r3, [fp, #-96]	; 0xffffffa0
   1289c:	ldr	r3, [fp, #-240]	; 0xffffff10
   128a0:	str	r3, [fp, #-92]	; 0xffffffa4
   128a4:	ldr	r3, [fp, #-232]	; 0xffffff18
   128a8:	str	r3, [fp, #-88]	; 0xffffffa8
   128ac:	str	r7, [fp, #-80]	; 0xffffffb0
   128b0:	movw	r3, #41904	; 0xa3b0
   128b4:	movt	r3, #2
   128b8:	ldr	r3, [r3]
   128bc:	str	r3, [fp, #-52]	; 0xffffffcc
   128c0:	movw	r3, #41916	; 0xa3bc
   128c4:	movt	r3, #2
   128c8:	ldr	r3, [r3]
   128cc:	str	r3, [fp, #-48]	; 0xffffffd0
   128d0:	mov	r3, #0
   128d4:	str	r3, [fp, #-84]	; 0xffffffac
   128d8:	sub	r3, fp, #160	; 0xa0
   128dc:	str	r3, [fp, #-44]	; 0xffffffd4
   128e0:	mov	r3, #1
   128e4:	str	r3, [fp, #-100]	; 0xffffff9c
   128e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   128ec:	ldr	r2, [fp, #-108]	; 0xffffff94
   128f0:	cmp	r3, r2
   128f4:	bcs	12a08 <argp_parse@@Base+0x458>
   128f8:	ldr	r2, [fp, #8]
   128fc:	str	r2, [r3, #24]
   12900:	ldr	r5, [fp, #-112]	; 0xffffff90
   12904:	ldr	r3, [fp, #-108]	; 0xffffff94
   12908:	cmp	r5, r3
   1290c:	bcs	12a08 <argp_parse@@Base+0x458>
   12910:	mov	r6, #3
   12914:	movt	r6, #256	; 0x100
   12918:	mov	r7, #0
   1291c:	b	129a4 <argp_parse@@Base+0x3f4>
   12920:	movw	r3, #41952	; 0xa3e0
   12924:	movt	r3, #2
   12928:	ldr	r3, [r3]
   1292c:	cmp	r3, #0
   12930:	addeq	r2, r0, #16
   12934:	bne	126fc <argp_parse@@Base+0x14c>
   12938:	b	12708 <argp_parse@@Base+0x158>
   1293c:	ldr	r3, [fp, #-248]	; 0xffffff08
   12940:	cmp	r3, #0
   12944:	beq	12840 <argp_parse@@Base+0x290>
   12948:	add	sl, sl, #1
   1294c:	str	sl, [fp, #-208]	; 0xffffff30
   12950:	mov	r3, #43	; 0x2b
   12954:	strb	r3, [r6, r5]
   12958:	b	12840 <argp_parse@@Base+0x290>
   1295c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12960:	str	r3, [fp, #-108]	; 0xffffff94
   12964:	b	12880 <argp_parse@@Base+0x2d0>
   12968:	ldr	r3, [r5]
   1296c:	cmp	r3, #0
   12970:	beq	129c4 <argp_parse@@Base+0x414>
   12974:	mov	r3, r7
   12978:	mov	r2, r6
   1297c:	sub	r1, fp, #96	; 0x60
   12980:	mov	r0, r5
   12984:	bl	11f6c <__assert_fail@plt+0xc78>
   12988:	add	r5, r5, #36	; 0x24
   1298c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12990:	cmp	r5, r3
   12994:	bcs	129f8 <argp_parse@@Base+0x448>
   12998:	cmp	r0, #7
   1299c:	cmpne	r0, #0
   129a0:	bne	129f0 <argp_parse@@Base+0x440>
   129a4:	ldr	r3, [r5, #16]
   129a8:	cmp	r3, #0
   129ac:	beq	12968 <argp_parse@@Base+0x3b8>
   129b0:	ldr	r2, [r5, #20]
   129b4:	ldr	r3, [r3, #28]
   129b8:	ldr	r3, [r3, r2, lsl #2]
   129bc:	str	r3, [r5, #24]
   129c0:	b	12968 <argp_parse@@Base+0x3b8>
   129c4:	ldr	r3, [r5, #4]
   129c8:	ldr	r3, [r3, #16]
   129cc:	cmp	r3, #0
   129d0:	beq	12974 <argp_parse@@Base+0x3c4>
   129d4:	ldr	r3, [r3]
   129d8:	cmp	r3, #0
   129dc:	beq	12974 <argp_parse@@Base+0x3c4>
   129e0:	ldr	r3, [r5, #28]
   129e4:	ldr	r2, [r5, #24]
   129e8:	str	r2, [r3]
   129ec:	b	12974 <argp_parse@@Base+0x3c4>
   129f0:	mov	r4, r0
   129f4:	b	12f1c <argp_parse@@Base+0x96c>
   129f8:	mov	r4, r0
   129fc:	cmp	r0, #7
   12a00:	cmpne	r0, #0
   12a04:	bne	12f1c <argp_parse@@Base+0x96c>
   12a08:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a0c:	tst	r3, #2
   12a10:	moveq	r3, #1
   12a14:	streq	r3, [fp, #-144]	; 0xffffff70
   12a18:	beq	12a44 <argp_parse@@Base+0x494>
   12a1c:	mov	r2, #0
   12a20:	str	r2, [fp, #-144]	; 0xffffff70
   12a24:	tst	r3, #1
   12a28:	beq	12a44 <argp_parse@@Base+0x494>
   12a2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a30:	sub	r3, r3, #4
   12a34:	str	r3, [fp, #-88]	; 0xffffffa8
   12a38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a3c:	add	r3, r3, #1
   12a40:	str	r3, [fp, #-92]	; 0xffffffa4
   12a44:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a48:	ldr	r2, [fp, #-232]	; 0xffffff18
   12a4c:	cmp	r2, r3
   12a50:	beq	12a78 <argp_parse@@Base+0x4c8>
   12a54:	movw	r3, #41896	; 0xa3a8
   12a58:	movt	r3, #2
   12a5c:	ldr	r3, [r3]
   12a60:	str	r3, [fp, #-56]	; 0xffffffc8
   12a64:	movw	sl, #36672	; 0x8f40
   12a68:	movt	sl, #1
   12a6c:	mov	r9, #6
   12a70:	movt	r9, #256	; 0x100
   12a74:	b	12b40 <argp_parse@@Base+0x590>
   12a78:	ldr	r0, [r2]
   12a7c:	cmp	r0, #0
   12a80:	beq	12a54 <argp_parse@@Base+0x4a4>
   12a84:	bl	131c4 <argp_parse@@Base+0xc14>
   12a88:	str	r0, [fp, #-56]	; 0xffffffc8
   12a8c:	b	12a64 <argp_parse@@Base+0x4b4>
   12a90:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a94:	str	r3, [fp, #-148]	; 0xffffff6c
   12a98:	mvn	r3, #0
   12a9c:	str	r3, [fp, #-140]	; 0xffffff74
   12aa0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12aa4:	tst	r3, #64	; 0x40
   12aa8:	beq	12bc4 <argp_parse@@Base+0x614>
   12aac:	sub	r3, fp, #148	; 0x94
   12ab0:	str	r3, [sp, #4]
   12ab4:	mov	r3, #0
   12ab8:	str	r3, [sp]
   12abc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12ac0:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ac4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ac8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12acc:	bl	1336c <argp_parse@@Base+0xdbc>
   12ad0:	mov	r5, r0
   12ad4:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12ad8:	str	r4, [fp, #-84]	; 0xffffffac
   12adc:	cmn	r5, #1
   12ae0:	beq	12bf0 <argp_parse@@Base+0x640>
   12ae4:	cmp	r5, #63	; 0x3f
   12ae8:	beq	12c20 <argp_parse@@Base+0x670>
   12aec:	cmp	r5, #1
   12af0:	beq	12b9c <argp_parse@@Base+0x5ec>
   12af4:	ldr	r4, [fp, #-136]	; 0xffffff78
   12af8:	asrs	r3, r5, #24
   12afc:	beq	12c30 <argp_parse@@Base+0x680>
   12b00:	ands	r1, r5, #8388608	; 0x800000
   12b04:	movne	r1, #-16777216	; 0xff000000
   12b08:	bic	r2, r5, #-16777216	; 0xff000000
   12b0c:	add	r0, r3, r3, lsl #3
   12b10:	lsl	r0, r0, #2
   12b14:	sub	r0, r0, #36	; 0x24
   12b18:	mov	r3, r4
   12b1c:	orr	r2, r2, r1
   12b20:	sub	r1, fp, #96	; 0x60
   12b24:	ldr	ip, [fp, #-112]	; 0xffffff90
   12b28:	add	r0, ip, r0
   12b2c:	bl	11f6c <__assert_fail@plt+0xc78>
   12b30:	cmp	r0, #7
   12b34:	beq	12df8 <argp_parse@@Base+0x848>
   12b38:	cmp	r0, #0
   12b3c:	bne	12e7c <argp_parse@@Base+0x8cc>
   12b40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b44:	cmp	r3, #0
   12b48:	beq	12b60 <argp_parse@@Base+0x5b0>
   12b4c:	ldr	r2, [fp, #-84]	; 0xffffffac
   12b50:	cmp	r3, r2
   12b54:	movgt	r3, #0
   12b58:	strgt	r3, [fp, #-72]	; 0xffffffb8
   12b5c:	ble	12b6c <argp_parse@@Base+0x5bc>
   12b60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12b64:	cmp	r3, #0
   12b68:	bne	12a90 <argp_parse@@Base+0x4e0>
   12b6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12b70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12b74:	cmp	r3, r2
   12b78:	bge	130ec <argp_parse@@Base+0xb3c>
   12b7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12b80:	tst	r2, #4
   12b84:	bne	130f4 <argp_parse@@Base+0xb44>
   12b88:	add	r2, r3, #1
   12b8c:	str	r2, [fp, #-84]	; 0xffffffac
   12b90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12b94:	ldr	r3, [r2, r3, lsl #2]
   12b98:	str	r3, [fp, #-136]	; 0xffffff78
   12b9c:	ldr	r7, [fp, #-136]	; 0xffffff78
   12ba0:	ldr	r4, [fp, #-84]	; 0xffffffac
   12ba4:	sub	r4, r4, #1
   12ba8:	str	r4, [fp, #-84]	; 0xffffffac
   12bac:	ldr	r5, [fp, #-112]	; 0xffffff90
   12bb0:	ldr	r3, [fp, #-108]	; 0xffffff94
   12bb4:	cmp	r3, r5
   12bb8:	bls	12e74 <argp_parse@@Base+0x8c4>
   12bbc:	mov	r6, #0
   12bc0:	b	12cf0 <argp_parse@@Base+0x740>
   12bc4:	sub	r3, fp, #148	; 0x94
   12bc8:	str	r3, [sp, #4]
   12bcc:	mov	r3, #0
   12bd0:	str	r3, [sp]
   12bd4:	ldr	r3, [fp, #-152]	; 0xffffff68
   12bd8:	ldr	r2, [fp, #-156]	; 0xffffff64
   12bdc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12be0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12be4:	bl	13310 <argp_parse@@Base+0xd60>
   12be8:	mov	r5, r0
   12bec:	b	12ad4 <argp_parse@@Base+0x524>
   12bf0:	mov	r3, #0
   12bf4:	str	r3, [fp, #-100]	; 0xffffff9c
   12bf8:	cmp	r4, #1
   12bfc:	ble	12b6c <argp_parse@@Base+0x5bc>
   12c00:	sub	r3, r4, #-1073741823	; 0xc0000001
   12c04:	mov	r1, sl
   12c08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12c0c:	ldr	r0, [r2, r3, lsl #2]
   12c10:	bl	11030 <strcmp@plt>
   12c14:	cmp	r0, #0
   12c18:	streq	r4, [fp, #-72]	; 0xffffffb8
   12c1c:	b	12b6c <argp_parse@@Base+0x5bc>
   12c20:	ldr	r3, [fp, #-140]	; 0xffffff74
   12c24:	cmn	r3, #1
   12c28:	bne	130e4 <argp_parse@@Base+0xb34>
   12c2c:	ldr	r4, [fp, #-136]	; 0xffffff78
   12c30:	mov	r1, r5
   12c34:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c38:	bl	111c8 <strchr@plt>
   12c3c:	subs	r1, r0, #0
   12c40:	beq	12c90 <argp_parse@@Base+0x6e0>
   12c44:	ldr	r0, [fp, #-112]	; 0xffffff90
   12c48:	ldr	r2, [fp, #-108]	; 0xffffff94
   12c4c:	cmp	r2, r0
   12c50:	bls	12c90 <argp_parse@@Base+0x6e0>
   12c54:	ldr	r3, [r0, #8]
   12c58:	cmp	r1, r3
   12c5c:	bcc	12c78 <argp_parse@@Base+0x6c8>
   12c60:	add	r0, r0, #36	; 0x24
   12c64:	cmp	r2, r0
   12c68:	bls	12c90 <argp_parse@@Base+0x6e0>
   12c6c:	ldr	r3, [r0, #8]
   12c70:	cmp	r1, r3
   12c74:	bcs	12c60 <argp_parse@@Base+0x6b0>
   12c78:	mov	r3, r4
   12c7c:	mov	r2, r5
   12c80:	sub	r1, fp, #96	; 0x60
   12c84:	bl	11f6c <__assert_fail@plt+0xc78>
   12c88:	cmp	r0, #7
   12c8c:	bne	12b38 <argp_parse@@Base+0x588>
   12c90:	ldr	r3, [pc, #1128]	; 13100 <argp_parse@@Base+0xb50>
   12c94:	mov	r2, r5
   12c98:	movw	r1, #36676	; 0x8f44
   12c9c:	movt	r1, #1
   12ca0:	sub	r0, fp, #96	; 0x60
   12ca4:	bl	17208 <argp_error@@Base>
   12ca8:	b	12d30 <argp_parse@@Base+0x780>
   12cac:	ldr	r3, [fp, #-84]	; 0xffffffac
   12cb0:	sub	r3, r3, #1
   12cb4:	str	r3, [fp, #-84]	; 0xffffffac
   12cb8:	mov	r3, r6
   12cbc:	mov	r2, r9
   12cc0:	sub	r1, fp, #96	; 0x60
   12cc4:	mov	r0, r5
   12cc8:	bl	11f6c <__assert_fail@plt+0xc78>
   12ccc:	add	r5, r5, #36	; 0x24
   12cd0:	ldr	r2, [fp, #-108]	; 0xffffff94
   12cd4:	cmp	r5, r2
   12cd8:	movcs	r3, #0
   12cdc:	movcc	r3, #1
   12ce0:	cmp	r0, #7
   12ce4:	movne	r3, #0
   12ce8:	cmp	r3, #0
   12cec:	beq	12dc0 <argp_parse@@Base+0x810>
   12cf0:	ldr	r3, [fp, #-84]	; 0xffffffac
   12cf4:	add	r3, r3, #1
   12cf8:	str	r3, [fp, #-84]	; 0xffffffac
   12cfc:	mov	r3, r7
   12d00:	mov	r2, r6
   12d04:	sub	r1, fp, #96	; 0x60
   12d08:	mov	r0, r5
   12d0c:	bl	11f6c <__assert_fail@plt+0xc78>
   12d10:	cmp	r0, #7
   12d14:	beq	12cac <argp_parse@@Base+0x6fc>
   12d18:	add	r5, r5, #36	; 0x24
   12d1c:	cmp	r0, #0
   12d20:	beq	12dd0 <argp_parse@@Base+0x820>
   12d24:	cmp	r0, #7
   12d28:	bne	12b38 <argp_parse@@Base+0x588>
   12d2c:	mov	r5, #1
   12d30:	add	r5, r5, #1
   12d34:	bics	r3, r5, #2
   12d38:	moveq	r3, #1
   12d3c:	movne	r3, #0
   12d40:	cmp	r3, #0
   12d44:	beq	13088 <argp_parse@@Base+0xad8>
   12d48:	ldr	r3, [fp, #-84]	; 0xffffffac
   12d4c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12d50:	cmp	r3, r2
   12d54:	beq	12f3c <argp_parse@@Base+0x98c>
   12d58:	ldr	r2, [fp, #4]
   12d5c:	cmp	r2, #0
   12d60:	strne	r3, [r2]
   12d64:	beq	13060 <argp_parse@@Base+0xab0>
   12d68:	ldr	r5, [fp, #-108]	; 0xffffff94
   12d6c:	sub	r5, r5, #36	; 0x24
   12d70:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d74:	cmp	r5, r3
   12d78:	bcc	130c8 <argp_parse@@Base+0xb18>
   12d7c:	mov	r6, #4
   12d80:	movt	r6, #256	; 0x100
   12d84:	mov	r7, #0
   12d88:	mov	r3, r7
   12d8c:	mov	r2, r6
   12d90:	sub	r1, fp, #96	; 0x60
   12d94:	mov	r0, r5
   12d98:	bl	11f6c <__assert_fail@plt+0xc78>
   12d9c:	sub	r5, r5, #36	; 0x24
   12da0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12da4:	cmp	r5, r3
   12da8:	bcc	130a0 <argp_parse@@Base+0xaf0>
   12dac:	cmp	r0, #7
   12db0:	cmpne	r0, #0
   12db4:	beq	12d88 <argp_parse@@Base+0x7d8>
   12db8:	mov	r4, r0
   12dbc:	b	130b0 <argp_parse@@Base+0xb00>
   12dc0:	cmp	r0, #0
   12dc4:	bne	12d24 <argp_parse@@Base+0x774>
   12dc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12dcc:	str	r3, [fp, #-84]	; 0xffffffac
   12dd0:	ldr	r3, [fp, #-84]	; 0xffffffac
   12dd4:	cmp	r4, r3
   12dd8:	movge	r3, #1
   12ddc:	strge	r3, [fp, #-100]	; 0xffffff9c
   12de0:	bge	12b40 <argp_parse@@Base+0x590>
   12de4:	sub	r4, r3, r4
   12de8:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12dec:	add	r4, r3, r4
   12df0:	str	r4, [r5, #-24]	; 0xffffffe8
   12df4:	b	12b40 <argp_parse@@Base+0x590>
   12df8:	ldr	r3, [fp, #-152]	; 0xffffff68
   12dfc:	ldr	r2, [r3, #12]
   12e00:	cmp	r2, r5
   12e04:	beq	12e3c <argp_parse@@Base+0x88c>
   12e08:	ldr	r2, [r3]
   12e0c:	cmp	r2, #0
   12e10:	beq	12e68 <argp_parse@@Base+0x8b8>
   12e14:	add	r3, r3, #16
   12e18:	ldr	r2, [r3, #12]
   12e1c:	cmp	r5, r2
   12e20:	beq	12e3c <argp_parse@@Base+0x88c>
   12e24:	ldr	r2, [r3]
   12e28:	cmp	r2, #0
   12e2c:	bne	12e14 <argp_parse@@Base+0x864>
   12e30:	movw	r2, #36668	; 0x8f3c
   12e34:	movt	r2, #1
   12e38:	b	12e50 <argp_parse@@Base+0x8a0>
   12e3c:	ldr	r2, [r3]
   12e40:	movw	r3, #36668	; 0x8f3c
   12e44:	movt	r3, #1
   12e48:	cmp	r2, #0
   12e4c:	moveq	r2, r3
   12e50:	ldr	r3, [pc, #680]	; 13100 <argp_parse@@Base+0xb50>
   12e54:	movw	r1, #36684	; 0x8f4c
   12e58:	movt	r1, #1
   12e5c:	sub	r0, fp, #96	; 0x60
   12e60:	bl	17208 <argp_error@@Base>
   12e64:	b	12d30 <argp_parse@@Base+0x780>
   12e68:	movw	r2, #36668	; 0x8f3c
   12e6c:	movt	r2, #1
   12e70:	b	12e50 <argp_parse@@Base+0x8a0>
   12e74:	mov	r5, #1
   12e78:	b	12d30 <argp_parse@@Base+0x780>
   12e7c:	mov	r4, r0
   12e80:	cmp	r4, #7
   12e84:	beq	13088 <argp_parse@@Base+0xad8>
   12e88:	ldr	r5, [fp, #-112]	; 0xffffff90
   12e8c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e90:	cmp	r5, r3
   12e94:	bcs	12ec8 <argp_parse@@Base+0x918>
   12e98:	mov	r6, #5
   12e9c:	movt	r6, #256	; 0x100
   12ea0:	mov	r7, #0
   12ea4:	mov	r3, r7
   12ea8:	mov	r2, r6
   12eac:	sub	r1, fp, #96	; 0x60
   12eb0:	mov	r0, r5
   12eb4:	bl	11f6c <__assert_fail@plt+0xc78>
   12eb8:	add	r5, r5, #36	; 0x24
   12ebc:	ldr	r3, [fp, #-108]	; 0xffffff94
   12ec0:	cmp	r5, r3
   12ec4:	bcc	12ea4 <argp_parse@@Base+0x8f4>
   12ec8:	ldr	r5, [fp, #-108]	; 0xffffff94
   12ecc:	sub	r5, r5, #36	; 0x24
   12ed0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ed4:	cmp	r3, r5
   12ed8:	bhi	12f0c <argp_parse@@Base+0x95c>
   12edc:	mov	r6, #7
   12ee0:	movt	r6, #256	; 0x100
   12ee4:	mov	r7, #0
   12ee8:	mov	r3, r7
   12eec:	mov	r2, r6
   12ef0:	sub	r1, fp, #96	; 0x60
   12ef4:	mov	r0, r5
   12ef8:	bl	11f6c <__assert_fail@plt+0xc78>
   12efc:	sub	r5, r5, #36	; 0x24
   12f00:	ldr	r3, [fp, #-112]	; 0xffffff90
   12f04:	cmp	r5, r3
   12f08:	bcs	12ee8 <argp_parse@@Base+0x938>
   12f0c:	cmp	r4, #7
   12f10:	moveq	r4, #22
   12f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f18:	bl	13288 <argp_parse@@Base+0xcd8>
   12f1c:	mov	r0, r4
   12f20:	sub	sp, fp, #32
   12f24:	ldrd	r4, [sp]
   12f28:	ldrd	r6, [sp, #8]
   12f2c:	ldrd	r8, [sp, #16]
   12f30:	ldrd	sl, [sp, #24]
   12f34:	add	sp, sp, #32
   12f38:	pop	{pc}		; (ldr pc, [sp], #4)
   12f3c:	ldr	r6, [fp, #-112]	; 0xffffff90
   12f40:	ldr	r5, [fp, #-108]	; 0xffffff94
   12f44:	cmp	r5, r6
   12f48:	bls	130d0 <argp_parse@@Base+0xb20>
   12f4c:	mov	r4, #0
   12f50:	mov	r7, #2
   12f54:	movt	r7, #256	; 0x100
   12f58:	mov	r8, r4
   12f5c:	mov	r0, r4
   12f60:	b	12f80 <argp_parse@@Base+0x9d0>
   12f64:	add	r6, r6, #36	; 0x24
   12f68:	ldr	r5, [fp, #-108]	; 0xffffff94
   12f6c:	cmp	r6, r5
   12f70:	bcs	12fbc <argp_parse@@Base+0xa0c>
   12f74:	cmp	r0, #7
   12f78:	cmpne	r0, #0
   12f7c:	bne	12fa4 <argp_parse@@Base+0x9f4>
   12f80:	ldr	r3, [r6, #12]
   12f84:	cmp	r3, #0
   12f88:	bne	12f64 <argp_parse@@Base+0x9b4>
   12f8c:	mov	r3, r8
   12f90:	mov	r2, r7
   12f94:	sub	r1, fp, #96	; 0x60
   12f98:	mov	r0, r6
   12f9c:	bl	11f6c <__assert_fail@plt+0xc78>
   12fa0:	b	12f64 <argp_parse@@Base+0x9b4>
   12fa4:	mov	r4, r0
   12fa8:	sub	r5, r5, #36	; 0x24
   12fac:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fb0:	cmp	r3, r5
   12fb4:	bls	12fd0 <argp_parse@@Base+0xa20>
   12fb8:	b	1301c <argp_parse@@Base+0xa6c>
   12fbc:	mov	r4, r0
   12fc0:	sub	r5, r5, #36	; 0x24
   12fc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fc8:	cmp	r3, r5
   12fcc:	bhi	13044 <argp_parse@@Base+0xa94>
   12fd0:	cmp	r4, #7
   12fd4:	cmpne	r4, #0
   12fd8:	bne	1301c <argp_parse@@Base+0xa6c>
   12fdc:	mov	r6, #1
   12fe0:	movt	r6, #256	; 0x100
   12fe4:	mov	r7, #0
   12fe8:	mov	r3, r7
   12fec:	mov	r2, r6
   12ff0:	sub	r1, fp, #96	; 0x60
   12ff4:	mov	r0, r5
   12ff8:	bl	11f6c <__assert_fail@plt+0xc78>
   12ffc:	sub	r5, r5, #36	; 0x24
   13000:	ldr	r3, [fp, #-112]	; 0xffffff90
   13004:	cmp	r5, r3
   13008:	bcc	13040 <argp_parse@@Base+0xa90>
   1300c:	cmp	r0, #7
   13010:	cmpne	r0, #0
   13014:	beq	12fe8 <argp_parse@@Base+0xa38>
   13018:	mov	r4, r0
   1301c:	ldr	r3, [fp, #4]
   13020:	cmp	r3, #0
   13024:	beq	13034 <argp_parse@@Base+0xa84>
   13028:	ldr	r3, [fp, #-84]	; 0xffffffac
   1302c:	ldr	r2, [fp, #4]
   13030:	str	r3, [r2]
   13034:	cmp	r4, #0
   13038:	beq	12d68 <argp_parse@@Base+0x7b8>
   1303c:	b	12e80 <argp_parse@@Base+0x8d0>
   13040:	mov	r4, r0
   13044:	cmp	r4, #7
   13048:	bne	1301c <argp_parse@@Base+0xa6c>
   1304c:	ldr	r3, [fp, #4]
   13050:	cmp	r3, #0
   13054:	movne	r4, #0
   13058:	bne	13028 <argp_parse@@Base+0xa78>
   1305c:	b	12d68 <argp_parse@@Base+0x7b8>
   13060:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13064:	tst	r3, #2
   13068:	bne	13088 <argp_parse@@Base+0xad8>
   1306c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13070:	cmp	r0, #0
   13074:	beq	13088 <argp_parse@@Base+0xad8>
   13078:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1307c:	movw	r1, #36696	; 0x8f58
   13080:	movt	r1, #1
   13084:	bl	111d4 <fprintf@plt>
   13088:	mov	r2, #260	; 0x104
   1308c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13090:	sub	r0, fp, #96	; 0x60
   13094:	bl	17140 <argp_state_help@@Base>
   13098:	mov	r4, #7
   1309c:	b	12e88 <argp_parse@@Base+0x8d8>
   130a0:	mov	r4, r0
   130a4:	cmp	r0, #7
   130a8:	movne	r4, r0
   130ac:	moveq	r4, #0
   130b0:	ldr	r5, [fp, #-108]	; 0xffffff94
   130b4:	sub	r5, r5, #36	; 0x24
   130b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   130bc:	cmp	r3, r5
   130c0:	bls	12edc <argp_parse@@Base+0x92c>
   130c4:	b	12f14 <argp_parse@@Base+0x964>
   130c8:	mov	r4, #0
   130cc:	b	12f14 <argp_parse@@Base+0x964>
   130d0:	sub	r5, r5, #36	; 0x24
   130d4:	cmp	r5, r6
   130d8:	movcc	r4, #0
   130dc:	bcs	12fdc <argp_parse@@Base+0xa2c>
   130e0:	b	1301c <argp_parse@@Base+0xa6c>
   130e4:	mov	r3, #0
   130e8:	b	12d40 <argp_parse@@Base+0x790>
   130ec:	mov	r3, #1
   130f0:	b	12d40 <argp_parse@@Base+0x790>
   130f4:	mov	r3, #1
   130f8:	b	12d40 <argp_parse@@Base+0x790>
   130fc:	andeq	r8, r1, r4, lsl lr
   13100:	andeq	r8, r1, r0, lsr lr
   13104:	cmp	r1, #0
   13108:	beq	13154 <argp_parse@@Base+0xba4>
   1310c:	ldr	r2, [r1, #52]	; 0x34
   13110:	ldr	r3, [r2, #48]	; 0x30
   13114:	ldr	r1, [r2, #52]	; 0x34
   13118:	cmp	r3, r1
   1311c:	bcs	1315c <argp_parse@@Base+0xbac>
   13120:	ldr	r2, [r3, #4]
   13124:	cmp	r0, r2
   13128:	beq	13144 <argp_parse@@Base+0xb94>
   1312c:	add	r3, r3, #36	; 0x24
   13130:	cmp	r3, r1
   13134:	bcs	1314c <argp_parse@@Base+0xb9c>
   13138:	ldr	r2, [r3, #4]
   1313c:	cmp	r2, r0
   13140:	bne	1312c <argp_parse@@Base+0xb7c>
   13144:	ldr	r0, [r3, #24]
   13148:	bx	lr
   1314c:	mov	r0, #0
   13150:	bx	lr
   13154:	mov	r0, r1
   13158:	bx	lr
   1315c:	mov	r0, #0
   13160:	bx	lr
   13164:	push	{lr}		; (str lr, [sp, #-4]!)
   13168:	sub	sp, sp, #12
   1316c:	movw	r1, #41956	; 0xa3e4
   13170:	movt	r1, #2
   13174:	ldr	r3, [r1, #4]
   13178:	str	r3, [sp]
   1317c:	movw	r3, #36928	; 0x9040
   13180:	movt	r3, #1
   13184:	movw	r2, #36944	; 0x9050
   13188:	movt	r2, #1
   1318c:	ldr	r1, [r1]
   13190:	bl	13804 <argp_parse@@Base+0x1254>
   13194:	add	sp, sp, #12
   13198:	pop	{pc}		; (ldr pc, [sp], #4)
   1319c:	movw	r3, #41952	; 0xa3e0
   131a0:	movt	r3, #2
   131a4:	movw	r2, #12644	; 0x3164
   131a8:	movt	r2, #1
   131ac:	str	r2, [r3]
   131b0:	movw	r3, #41956	; 0xa3e4
   131b4:	movt	r3, #2
   131b8:	str	r0, [r3]
   131bc:	str	r1, [r3, #4]
   131c0:	bx	lr
   131c4:	ldrb	r3, [r0]
   131c8:	cmp	r3, #47	; 0x2f
   131cc:	bne	131dc <argp_parse@@Base+0xc2c>
   131d0:	ldrb	r3, [r0, #1]!
   131d4:	cmp	r3, #47	; 0x2f
   131d8:	beq	131d0 <argp_parse@@Base+0xc20>
   131dc:	ldrb	r2, [r0]
   131e0:	cmp	r2, #0
   131e4:	bxeq	lr
   131e8:	push	{lr}		; (str lr, [sp, #-4]!)
   131ec:	mov	r1, r0
   131f0:	mov	r3, #0
   131f4:	mov	lr, #1
   131f8:	mov	ip, r3
   131fc:	b	13218 <argp_parse@@Base+0xc68>
   13200:	cmp	r3, #0
   13204:	movne	r0, r1
   13208:	movne	r3, ip
   1320c:	ldrb	r2, [r1, #1]!
   13210:	cmp	r2, #0
   13214:	beq	13228 <argp_parse@@Base+0xc78>
   13218:	cmp	r2, #47	; 0x2f
   1321c:	moveq	r3, lr
   13220:	bne	13200 <argp_parse@@Base+0xc50>
   13224:	b	1320c <argp_parse@@Base+0xc5c>
   13228:	pop	{pc}		; (ldr pc, [sp], #4)
   1322c:	str	r4, [sp, #-8]!
   13230:	str	lr, [sp, #4]
   13234:	mov	r4, r0
   13238:	bl	111bc <strlen@plt>
   1323c:	cmp	r0, #1
   13240:	bls	13260 <argp_parse@@Base+0xcb0>
   13244:	add	r3, r4, r0
   13248:	ldrb	r3, [r3, #-1]
   1324c:	cmp	r3, #47	; 0x2f
   13250:	subeq	r0, r0, #2
   13254:	addeq	r3, r4, r0
   13258:	rsbeq	r1, r4, #1
   1325c:	beq	1326c <argp_parse@@Base+0xcbc>
   13260:	ldr	r4, [sp]
   13264:	add	sp, sp, #4
   13268:	pop	{pc}		; (ldr pc, [sp], #4)
   1326c:	add	r0, r1, r3
   13270:	cmp	r3, r4
   13274:	beq	13260 <argp_parse@@Base+0xcb0>
   13278:	ldrb	r2, [r3], #-1
   1327c:	cmp	r2, #47	; 0x2f
   13280:	bne	13260 <argp_parse@@Base+0xcb0>
   13284:	b	1326c <argp_parse@@Base+0xcbc>
   13288:	strd	r4, [sp, #-12]!
   1328c:	str	lr, [sp, #8]
   13290:	sub	sp, sp, #12
   13294:	mov	r5, r0
   13298:	bl	111e0 <__errno_location@plt>
   1329c:	mov	r4, r0
   132a0:	ldr	r3, [r0]
   132a4:	str	r3, [sp]
   132a8:	str	r3, [sp, #4]
   132ac:	mov	r3, #0
   132b0:	str	r3, [r0]
   132b4:	mov	r0, r5
   132b8:	bl	11084 <free@plt>
   132bc:	ldr	r3, [r4]
   132c0:	clz	r3, r3
   132c4:	lsr	r3, r3, #5
   132c8:	add	r2, sp, #8
   132cc:	add	r3, r2, r3, lsl #2
   132d0:	ldr	r3, [r3, #-8]
   132d4:	str	r3, [r4]
   132d8:	add	sp, sp, #12
   132dc:	ldrd	r4, [sp]
   132e0:	add	sp, sp, #8
   132e4:	pop	{pc}		; (ldr pc, [sp], #4)
   132e8:	push	{lr}		; (str lr, [sp, #-4]!)
   132ec:	sub	sp, sp, #20
   132f0:	mov	ip, #0
   132f4:	str	ip, [sp, #8]
   132f8:	str	ip, [sp, #4]
   132fc:	ldr	ip, [sp, #24]
   13300:	str	ip, [sp]
   13304:	bl	17f68 <argp_error@@Base+0xd60>
   13308:	add	sp, sp, #20
   1330c:	pop	{pc}		; (ldr pc, [sp], #4)
   13310:	push	{lr}		; (str lr, [sp, #-4]!)
   13314:	sub	sp, sp, #20
   13318:	mov	ip, #0
   1331c:	str	ip, [sp, #12]
   13320:	ldr	lr, [sp, #28]
   13324:	str	lr, [sp, #8]
   13328:	str	ip, [sp, #4]
   1332c:	ldr	ip, [sp, #24]
   13330:	str	ip, [sp]
   13334:	bl	179ac <argp_error@@Base+0x7a4>
   13338:	add	sp, sp, #20
   1333c:	pop	{pc}		; (ldr pc, [sp], #4)
   13340:	push	{lr}		; (str lr, [sp, #-4]!)
   13344:	sub	sp, sp, #20
   13348:	mov	ip, #0
   1334c:	str	ip, [sp, #8]
   13350:	mov	ip, #1
   13354:	str	ip, [sp, #4]
   13358:	ldr	ip, [sp, #24]
   1335c:	str	ip, [sp]
   13360:	bl	17f68 <argp_error@@Base+0xd60>
   13364:	add	sp, sp, #20
   13368:	pop	{pc}		; (ldr pc, [sp], #4)
   1336c:	push	{lr}		; (str lr, [sp, #-4]!)
   13370:	sub	sp, sp, #20
   13374:	mov	ip, #0
   13378:	str	ip, [sp, #12]
   1337c:	ldr	ip, [sp, #28]
   13380:	str	ip, [sp, #8]
   13384:	mov	ip, #1
   13388:	str	ip, [sp, #4]
   1338c:	ldr	ip, [sp, #24]
   13390:	str	ip, [sp]
   13394:	bl	179ac <argp_error@@Base+0x7a4>
   13398:	add	sp, sp, #20
   1339c:	pop	{pc}		; (ldr pc, [sp], #4)
   133a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   133a4:	str	r6, [sp, #8]
   133a8:	strd	r8, [sp, #12]
   133ac:	str	lr, [sp, #20]
   133b0:	mov	r4, r0
   133b4:	mov	r5, r1
   133b8:	add	r6, r2, #20
   133bc:	mov	r3, #0
   133c0:	strb	r3, [r2, #20]
   133c4:	mov	r8, #10
   133c8:	mov	r9, #0
   133cc:	b	133d8 <argp_parse@@Base+0xe28>
   133d0:	mov	r4, r0
   133d4:	mov	r5, r1
   133d8:	mov	r2, r8
   133dc:	mov	r3, r9
   133e0:	mov	r0, r4
   133e4:	mov	r1, r5
   133e8:	bl	187e8 <argp_error@@Base+0x15e0>
   133ec:	add	r2, r2, #48	; 0x30
   133f0:	strb	r2, [r6, #-1]!
   133f4:	mov	r2, r8
   133f8:	mov	r3, r9
   133fc:	mov	r0, r4
   13400:	mov	r1, r5
   13404:	bl	187e8 <argp_error@@Base+0x15e0>
   13408:	cmp	r5, #0
   1340c:	cmpeq	r4, #9
   13410:	bhi	133d0 <argp_parse@@Base+0xe20>
   13414:	mov	r0, r6
   13418:	ldrd	r4, [sp]
   1341c:	ldr	r6, [sp, #8]
   13420:	ldrd	r8, [sp, #12]
   13424:	add	sp, sp, #20
   13428:	pop	{pc}		; (ldr pc, [sp], #4)
   1342c:	strd	r4, [sp, #-16]!
   13430:	str	r6, [sp, #8]
   13434:	str	lr, [sp, #12]
   13438:	subs	r4, r0, #0
   1343c:	beq	134d8 <argp_parse@@Base+0xf28>
   13440:	mov	r1, #47	; 0x2f
   13444:	mov	r0, r4
   13448:	bl	1124c <strrchr@plt>
   1344c:	subs	r5, r0, #0
   13450:	beq	134b0 <argp_parse@@Base+0xf00>
   13454:	add	r6, r5, #1
   13458:	sub	r3, r6, r4
   1345c:	cmp	r3, #6
   13460:	ble	134b0 <argp_parse@@Base+0xf00>
   13464:	mov	r2, #7
   13468:	movw	r1, #37016	; 0x9098
   1346c:	movt	r1, #1
   13470:	sub	r0, r5, #6
   13474:	bl	112b8 <strncmp@plt>
   13478:	cmp	r0, #0
   1347c:	bne	134b0 <argp_parse@@Base+0xf00>
   13480:	mov	r2, #3
   13484:	movw	r1, #37024	; 0x90a0
   13488:	movt	r1, #1
   1348c:	mov	r0, r6
   13490:	bl	112b8 <strncmp@plt>
   13494:	cmp	r0, #0
   13498:	movne	r4, r6
   1349c:	bne	134b0 <argp_parse@@Base+0xf00>
   134a0:	add	r4, r5, #4
   134a4:	movw	r3, #41896	; 0xa3a8
   134a8:	movt	r3, #2
   134ac:	str	r4, [r3]
   134b0:	movw	r3, #41964	; 0xa3ec
   134b4:	movt	r3, #2
   134b8:	str	r4, [r3]
   134bc:	movw	r3, #41900	; 0xa3ac
   134c0:	movt	r3, #2
   134c4:	str	r4, [r3]
   134c8:	ldrd	r4, [sp]
   134cc:	ldr	r6, [sp, #8]
   134d0:	add	sp, sp, #12
   134d4:	pop	{pc}		; (ldr pc, [sp], #4)
   134d8:	movw	r3, #41904	; 0xa3b0
   134dc:	movt	r3, #2
   134e0:	ldr	r3, [r3]
   134e4:	mov	r2, #55	; 0x37
   134e8:	mov	r1, #1
   134ec:	movw	r0, #36960	; 0x9060
   134f0:	movt	r0, #1
   134f4:	bl	11108 <fwrite@plt>
   134f8:	bl	112c4 <abort@plt>
   134fc:	strd	r4, [sp, #-16]!
   13500:	str	r6, [sp, #8]
   13504:	str	lr, [sp, #12]
   13508:	sub	sp, sp, #32
   1350c:	mov	r4, r0
   13510:	ldr	r5, [sp, #48]	; 0x30
   13514:	ldr	r6, [sp, #52]	; 0x34
   13518:	cmp	r1, #0
   1351c:	beq	135b8 <argp_parse@@Base+0x1008>
   13520:	str	r3, [sp]
   13524:	mov	r3, r2
   13528:	mov	r2, r1
   1352c:	movw	r1, #37028	; 0x90a4
   13530:	movt	r1, #1
   13534:	bl	111d4 <fprintf@plt>
   13538:	movw	r3, #2022	; 0x7e6
   1353c:	movw	r2, #37048	; 0x90b8
   13540:	movt	r2, #1
   13544:	movw	r1, #37816	; 0x93b8
   13548:	movt	r1, #1
   1354c:	mov	r0, r4
   13550:	bl	111d4 <fprintf@plt>
   13554:	mov	r1, r4
   13558:	mov	r0, #10
   1355c:	bl	11264 <fputc@plt>
   13560:	movw	r2, #37052	; 0x90bc
   13564:	movt	r2, #1
   13568:	movw	r1, #37088	; 0x90e0
   1356c:	movt	r1, #1
   13570:	mov	r0, r4
   13574:	bl	111d4 <fprintf@plt>
   13578:	mov	r1, r4
   1357c:	mov	r0, #10
   13580:	bl	11264 <fputc@plt>
   13584:	cmp	r6, #9
   13588:	ldrls	pc, [pc, r6, lsl #2]
   1358c:	b	137b0 <argp_parse@@Base+0x1200>
   13590:	ldrdeq	r3, [r1], -ip
   13594:	andeq	r3, r1, r8, asr #11
   13598:	strdeq	r3, [r1], -r0
   1359c:	andeq	r3, r1, ip, lsl #12
   135a0:	andeq	r3, r1, r0, lsr r6
   135a4:	andeq	r3, r1, ip, asr r6
   135a8:	muleq	r1, r0, r6
   135ac:	andeq	r3, r1, ip, asr #13
   135b0:	andeq	r3, r1, r0, lsl r7
   135b4:	andeq	r3, r1, ip, asr r7
   135b8:	movw	r1, #37040	; 0x90b0
   135bc:	movt	r1, #1
   135c0:	bl	111d4 <fprintf@plt>
   135c4:	b	13538 <argp_parse@@Base+0xf88>
   135c8:	ldr	r2, [r5]
   135cc:	movw	r1, #37260	; 0x918c
   135d0:	movt	r1, #1
   135d4:	mov	r0, r4
   135d8:	bl	111d4 <fprintf@plt>
   135dc:	add	sp, sp, #32
   135e0:	ldrd	r4, [sp]
   135e4:	ldr	r6, [sp, #8]
   135e8:	add	sp, sp, #12
   135ec:	pop	{pc}		; (ldr pc, [sp], #4)
   135f0:	ldr	r3, [r5, #4]
   135f4:	ldr	r2, [r5]
   135f8:	movw	r1, #37276	; 0x919c
   135fc:	movt	r1, #1
   13600:	mov	r0, r4
   13604:	bl	111d4 <fprintf@plt>
   13608:	b	135dc <argp_parse@@Base+0x102c>
   1360c:	ldr	r3, [r5, #8]
   13610:	str	r3, [sp]
   13614:	ldr	r3, [r5, #4]
   13618:	ldr	r2, [r5]
   1361c:	movw	r1, #37300	; 0x91b4
   13620:	movt	r1, #1
   13624:	mov	r0, r4
   13628:	bl	111d4 <fprintf@plt>
   1362c:	b	135dc <argp_parse@@Base+0x102c>
   13630:	ldr	r3, [r5, #12]
   13634:	str	r3, [sp, #4]
   13638:	ldr	r3, [r5, #8]
   1363c:	str	r3, [sp]
   13640:	ldr	r3, [r5, #4]
   13644:	ldr	r2, [r5]
   13648:	movw	r1, #37328	; 0x91d0
   1364c:	movt	r1, #1
   13650:	mov	r0, r4
   13654:	bl	111d4 <fprintf@plt>
   13658:	b	135dc <argp_parse@@Base+0x102c>
   1365c:	ldr	r3, [r5, #16]
   13660:	str	r3, [sp, #8]
   13664:	ldr	r3, [r5, #12]
   13668:	str	r3, [sp, #4]
   1366c:	ldr	r3, [r5, #8]
   13670:	str	r3, [sp]
   13674:	ldr	r3, [r5, #4]
   13678:	ldr	r2, [r5]
   1367c:	movw	r1, #37360	; 0x91f0
   13680:	movt	r1, #1
   13684:	mov	r0, r4
   13688:	bl	111d4 <fprintf@plt>
   1368c:	b	135dc <argp_parse@@Base+0x102c>
   13690:	ldr	r3, [r5, #20]
   13694:	str	r3, [sp, #12]
   13698:	ldr	r3, [r5, #16]
   1369c:	str	r3, [sp, #8]
   136a0:	ldr	r3, [r5, #12]
   136a4:	str	r3, [sp, #4]
   136a8:	ldr	r3, [r5, #8]
   136ac:	str	r3, [sp]
   136b0:	ldr	r3, [r5, #4]
   136b4:	ldr	r2, [r5]
   136b8:	movw	r1, #37396	; 0x9214
   136bc:	movt	r1, #1
   136c0:	mov	r0, r4
   136c4:	bl	111d4 <fprintf@plt>
   136c8:	b	135dc <argp_parse@@Base+0x102c>
   136cc:	ldr	r3, [r5, #24]
   136d0:	str	r3, [sp, #16]
   136d4:	ldr	r3, [r5, #20]
   136d8:	str	r3, [sp, #12]
   136dc:	ldr	r3, [r5, #16]
   136e0:	str	r3, [sp, #8]
   136e4:	ldr	r3, [r5, #12]
   136e8:	str	r3, [sp, #4]
   136ec:	ldr	r3, [r5, #8]
   136f0:	str	r3, [sp]
   136f4:	ldr	r3, [r5, #4]
   136f8:	ldr	r2, [r5]
   136fc:	movw	r1, #37436	; 0x923c
   13700:	movt	r1, #1
   13704:	mov	r0, r4
   13708:	bl	111d4 <fprintf@plt>
   1370c:	b	135dc <argp_parse@@Base+0x102c>
   13710:	ldr	r3, [r5, #28]
   13714:	str	r3, [sp, #20]
   13718:	ldr	r3, [r5, #24]
   1371c:	str	r3, [sp, #16]
   13720:	ldr	r3, [r5, #20]
   13724:	str	r3, [sp, #12]
   13728:	ldr	r3, [r5, #16]
   1372c:	str	r3, [sp, #8]
   13730:	ldr	r3, [r5, #12]
   13734:	str	r3, [sp, #4]
   13738:	ldr	r3, [r5, #8]
   1373c:	str	r3, [sp]
   13740:	ldr	r3, [r5, #4]
   13744:	ldr	r2, [r5]
   13748:	movw	r1, #37480	; 0x9268
   1374c:	movt	r1, #1
   13750:	mov	r0, r4
   13754:	bl	111d4 <fprintf@plt>
   13758:	b	135dc <argp_parse@@Base+0x102c>
   1375c:	ldr	r3, [r5, #32]
   13760:	str	r3, [sp, #24]
   13764:	ldr	r3, [r5, #28]
   13768:	str	r3, [sp, #20]
   1376c:	ldr	r3, [r5, #24]
   13770:	str	r3, [sp, #16]
   13774:	ldr	r3, [r5, #20]
   13778:	str	r3, [sp, #12]
   1377c:	ldr	r3, [r5, #16]
   13780:	str	r3, [sp, #8]
   13784:	ldr	r3, [r5, #12]
   13788:	str	r3, [sp, #4]
   1378c:	ldr	r3, [r5, #8]
   13790:	str	r3, [sp]
   13794:	ldr	r3, [r5, #4]
   13798:	ldr	r2, [r5]
   1379c:	movw	r1, #37528	; 0x9298
   137a0:	movt	r1, #1
   137a4:	mov	r0, r4
   137a8:	bl	111d4 <fprintf@plt>
   137ac:	b	135dc <argp_parse@@Base+0x102c>
   137b0:	ldr	r3, [r5, #32]
   137b4:	str	r3, [sp, #24]
   137b8:	ldr	r3, [r5, #28]
   137bc:	str	r3, [sp, #20]
   137c0:	ldr	r3, [r5, #24]
   137c4:	str	r3, [sp, #16]
   137c8:	ldr	r3, [r5, #20]
   137cc:	str	r3, [sp, #12]
   137d0:	ldr	r3, [r5, #16]
   137d4:	str	r3, [sp, #8]
   137d8:	ldr	r3, [r5, #12]
   137dc:	str	r3, [sp, #4]
   137e0:	ldr	r3, [r5, #8]
   137e4:	str	r3, [sp]
   137e8:	ldr	r3, [r5, #4]
   137ec:	ldr	r2, [r5]
   137f0:	movw	r1, #37580	; 0x92cc
   137f4:	movt	r1, #1
   137f8:	mov	r0, r4
   137fc:	bl	111d4 <fprintf@plt>
   13800:	b	135dc <argp_parse@@Base+0x102c>
   13804:	strd	r4, [sp, #-12]!
   13808:	str	lr, [sp, #8]
   1380c:	sub	sp, sp, #12
   13810:	ldr	r5, [sp, #24]
   13814:	ldr	ip, [r5]
   13818:	cmp	ip, #0
   1381c:	beq	13854 <argp_parse@@Base+0x12a4>
   13820:	mov	lr, r5
   13824:	mov	ip, #0
   13828:	add	ip, ip, #1
   1382c:	ldr	r4, [lr, #4]!
   13830:	cmp	r4, #0
   13834:	bne	13828 <argp_parse@@Base+0x1278>
   13838:	str	ip, [sp, #4]
   1383c:	str	r5, [sp]
   13840:	bl	134fc <argp_parse@@Base+0xf4c>
   13844:	add	sp, sp, #12
   13848:	ldrd	r4, [sp]
   1384c:	add	sp, sp, #8
   13850:	pop	{pc}		; (ldr pc, [sp], #4)
   13854:	mov	ip, #0
   13858:	b	13838 <argp_parse@@Base+0x1288>
   1385c:	strd	r4, [sp, #-12]!
   13860:	str	lr, [sp, #8]
   13864:	sub	sp, sp, #52	; 0x34
   13868:	ldr	r5, [sp, #64]	; 0x40
   1386c:	add	r4, sp, #8
   13870:	mov	ip, #0
   13874:	ldr	lr, [r5], #4
   13878:	str	lr, [r4], #4
   1387c:	cmp	lr, #0
   13880:	beq	13890 <argp_parse@@Base+0x12e0>
   13884:	add	ip, ip, #1
   13888:	cmp	ip, #10
   1388c:	bne	13874 <argp_parse@@Base+0x12c4>
   13890:	str	ip, [sp, #4]
   13894:	add	ip, sp, #8
   13898:	str	ip, [sp]
   1389c:	bl	134fc <argp_parse@@Base+0xf4c>
   138a0:	add	sp, sp, #52	; 0x34
   138a4:	ldrd	r4, [sp]
   138a8:	add	sp, sp, #8
   138ac:	pop	{pc}		; (ldr pc, [sp], #4)
   138b0:	push	{r3}		; (str r3, [sp, #-4]!)
   138b4:	push	{lr}		; (str lr, [sp, #-4]!)
   138b8:	sub	sp, sp, #16
   138bc:	add	r3, sp, #24
   138c0:	str	r3, [sp, #12]
   138c4:	str	r3, [sp]
   138c8:	ldr	r3, [sp, #20]
   138cc:	bl	1385c <argp_parse@@Base+0x12ac>
   138d0:	add	sp, sp, #16
   138d4:	pop	{lr}		; (ldr lr, [sp], #4)
   138d8:	add	sp, sp, #4
   138dc:	bx	lr
   138e0:	str	r4, [sp, #-8]!
   138e4:	str	lr, [sp, #4]
   138e8:	movw	r3, #41916	; 0xa3bc
   138ec:	movt	r3, #2
   138f0:	ldr	r1, [r3]
   138f4:	mov	r0, #10
   138f8:	bl	11264 <fputc@plt>
   138fc:	movw	r1, #37640	; 0x9308
   13900:	movt	r1, #1
   13904:	movw	r0, #37664	; 0x9320
   13908:	movt	r0, #1
   1390c:	bl	11054 <printf@plt>
   13910:	movw	r2, #37684	; 0x9334
   13914:	movt	r2, #1
   13918:	movw	r1, #36944	; 0x9050
   1391c:	movt	r1, #1
   13920:	movw	r0, #37724	; 0x935c
   13924:	movt	r0, #1
   13928:	bl	11054 <printf@plt>
   1392c:	movw	r1, #37744	; 0x9370
   13930:	movt	r1, #1
   13934:	movw	r0, #37776	; 0x9390
   13938:	movt	r0, #1
   1393c:	bl	11054 <printf@plt>
   13940:	ldr	r4, [sp]
   13944:	add	sp, sp, #4
   13948:	pop	{pc}		; (ldr pc, [sp], #4)
   1394c:	str	r4, [sp, #-8]!
   13950:	str	lr, [sp, #4]
   13954:	bl	13e84 <argp_parse@@Base+0x18d4>
   13958:	cmp	r0, #0
   1395c:	beq	1396c <argp_parse@@Base+0x13bc>
   13960:	ldr	r4, [sp]
   13964:	add	sp, sp, #4
   13968:	pop	{pc}		; (ldr pc, [sp], #4)
   1396c:	bl	13de0 <argp_parse@@Base+0x1830>
   13970:	str	r4, [sp, #-8]!
   13974:	str	lr, [sp, #4]
   13978:	bl	13e84 <argp_parse@@Base+0x18d4>
   1397c:	cmp	r0, #0
   13980:	beq	13990 <argp_parse@@Base+0x13e0>
   13984:	ldr	r4, [sp]
   13988:	add	sp, sp, #4
   1398c:	pop	{pc}		; (ldr pc, [sp], #4)
   13990:	bl	13de0 <argp_parse@@Base+0x1830>
   13994:	str	r4, [sp, #-8]!
   13998:	str	lr, [sp, #4]
   1399c:	bl	1394c <argp_parse@@Base+0x139c>
   139a0:	ldr	r4, [sp]
   139a4:	add	sp, sp, #4
   139a8:	pop	{pc}		; (ldr pc, [sp], #4)
   139ac:	strd	r4, [sp, #-16]!
   139b0:	str	r6, [sp, #8]
   139b4:	str	lr, [sp, #12]
   139b8:	mov	r5, r0
   139bc:	mov	r4, r1
   139c0:	bl	13ec0 <argp_parse@@Base+0x1910>
   139c4:	cmp	r0, #0
   139c8:	beq	139dc <argp_parse@@Base+0x142c>
   139cc:	ldrd	r4, [sp]
   139d0:	ldr	r6, [sp, #8]
   139d4:	add	sp, sp, #12
   139d8:	pop	{pc}		; (ldr pc, [sp], #4)
   139dc:	adds	r4, r4, #0
   139e0:	movne	r4, #1
   139e4:	cmp	r5, #0
   139e8:	moveq	r4, #1
   139ec:	cmp	r4, #0
   139f0:	beq	139cc <argp_parse@@Base+0x141c>
   139f4:	bl	13de0 <argp_parse@@Base+0x1830>
   139f8:	str	r4, [sp, #-8]!
   139fc:	str	lr, [sp, #4]
   13a00:	cmp	r1, #0
   13a04:	orreq	r1, r1, #1
   13a08:	bl	13ec0 <argp_parse@@Base+0x1910>
   13a0c:	cmp	r0, #0
   13a10:	beq	13a20 <argp_parse@@Base+0x1470>
   13a14:	ldr	r4, [sp]
   13a18:	add	sp, sp, #4
   13a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a20:	bl	13de0 <argp_parse@@Base+0x1830>
   13a24:	strd	r4, [sp, #-16]!
   13a28:	str	r6, [sp, #8]
   13a2c:	str	lr, [sp, #12]
   13a30:	mov	r4, r0
   13a34:	mov	r6, r1
   13a38:	mov	r5, r2
   13a3c:	bl	1800c <argp_error@@Base+0xe04>
   13a40:	cmp	r0, #0
   13a44:	beq	13a58 <argp_parse@@Base+0x14a8>
   13a48:	ldrd	r4, [sp]
   13a4c:	ldr	r6, [sp, #8]
   13a50:	add	sp, sp, #12
   13a54:	pop	{pc}		; (ldr pc, [sp], #4)
   13a58:	cmp	r4, #0
   13a5c:	beq	13a6c <argp_parse@@Base+0x14bc>
   13a60:	cmp	r6, #0
   13a64:	cmpne	r5, #0
   13a68:	beq	13a48 <argp_parse@@Base+0x1498>
   13a6c:	bl	13de0 <argp_parse@@Base+0x1830>
   13a70:	str	r4, [sp, #-8]!
   13a74:	str	lr, [sp, #4]
   13a78:	bl	13a24 <argp_parse@@Base+0x1474>
   13a7c:	ldr	r4, [sp]
   13a80:	add	sp, sp, #4
   13a84:	pop	{pc}		; (ldr pc, [sp], #4)
   13a88:	str	r4, [sp, #-8]!
   13a8c:	str	lr, [sp, #4]
   13a90:	mov	ip, r1
   13a94:	mov	r3, r2
   13a98:	cmp	r2, #0
   13a9c:	cmpne	r1, #0
   13aa0:	moveq	r3, #1
   13aa4:	moveq	ip, r3
   13aa8:	mov	r2, r3
   13aac:	mov	r1, ip
   13ab0:	bl	1800c <argp_error@@Base+0xe04>
   13ab4:	cmp	r0, #0
   13ab8:	beq	13ac8 <argp_parse@@Base+0x1518>
   13abc:	ldr	r4, [sp]
   13ac0:	add	sp, sp, #4
   13ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ac8:	bl	13de0 <argp_parse@@Base+0x1830>
   13acc:	str	r4, [sp, #-8]!
   13ad0:	str	lr, [sp, #4]
   13ad4:	mov	r2, r1
   13ad8:	mov	r1, r0
   13adc:	mov	r0, #0
   13ae0:	bl	13a24 <argp_parse@@Base+0x1474>
   13ae4:	ldr	r4, [sp]
   13ae8:	add	sp, sp, #4
   13aec:	pop	{pc}		; (ldr pc, [sp], #4)
   13af0:	str	r4, [sp, #-8]!
   13af4:	str	lr, [sp, #4]
   13af8:	mov	r2, r1
   13afc:	mov	r1, r0
   13b00:	mov	r0, #0
   13b04:	bl	13a88 <argp_parse@@Base+0x14d8>
   13b08:	ldr	r4, [sp]
   13b0c:	add	sp, sp, #4
   13b10:	pop	{pc}		; (ldr pc, [sp], #4)
   13b14:	strd	r4, [sp, #-16]!
   13b18:	str	r6, [sp, #8]
   13b1c:	str	lr, [sp, #12]
   13b20:	mov	r5, r1
   13b24:	ldr	r4, [r1]
   13b28:	cmp	r0, #0
   13b2c:	beq	13b5c <argp_parse@@Base+0x15ac>
   13b30:	lsr	r3, r4, #1
   13b34:	add	r3, r3, #1
   13b38:	adds	r4, r4, r3
   13b3c:	bcs	13b78 <argp_parse@@Base+0x15c8>
   13b40:	mov	r1, r4
   13b44:	bl	13a24 <argp_parse@@Base+0x1474>
   13b48:	str	r4, [r5]
   13b4c:	ldrd	r4, [sp]
   13b50:	ldr	r6, [sp, #8]
   13b54:	add	sp, sp, #12
   13b58:	pop	{pc}		; (ldr pc, [sp], #4)
   13b5c:	cmp	r4, #0
   13b60:	bne	13b40 <argp_parse@@Base+0x1590>
   13b64:	mov	r4, #64	; 0x40
   13b68:	udiv	r4, r4, r2
   13b6c:	cmp	r2, #64	; 0x40
   13b70:	addhi	r4, r4, #1
   13b74:	b	13b40 <argp_parse@@Base+0x1590>
   13b78:	bl	13de0 <argp_parse@@Base+0x1830>
   13b7c:	str	r4, [sp, #-8]!
   13b80:	str	lr, [sp, #4]
   13b84:	mov	r2, #1
   13b88:	bl	13b14 <argp_parse@@Base+0x1564>
   13b8c:	ldr	r4, [sp]
   13b90:	add	sp, sp, #4
   13b94:	pop	{pc}		; (ldr pc, [sp], #4)
   13b98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13b9c:	strd	r6, [sp, #8]
   13ba0:	str	r8, [sp, #16]
   13ba4:	str	lr, [sp, #20]
   13ba8:	mov	r5, r1
   13bac:	ldr	lr, [sp, #24]
   13bb0:	ldr	ip, [r1]
   13bb4:	asr	r4, ip, #1
   13bb8:	adds	r4, ip, r4
   13bbc:	movvs	r1, #1
   13bc0:	movvc	r1, #0
   13bc4:	cmp	r1, #0
   13bc8:	mvnne	r4, #-2147483648	; 0x80000000
   13bcc:	mvn	r8, r3
   13bd0:	lsr	r8, r8, #31
   13bd4:	cmp	r3, r4
   13bd8:	movge	r1, #0
   13bdc:	andlt	r1, r8, #1
   13be0:	cmp	r1, #0
   13be4:	movne	r4, r3
   13be8:	smull	r6, r7, r4, lr
   13bec:	asr	r1, r6, #31
   13bf0:	cmp	r1, r7
   13bf4:	bne	13c0c <argp_parse@@Base+0x165c>
   13bf8:	mov	r1, r6
   13bfc:	cmp	r6, #63	; 0x3f
   13c00:	movle	r1, #64	; 0x40
   13c04:	ble	13c10 <argp_parse@@Base+0x1660>
   13c08:	b	13c1c <argp_parse@@Base+0x166c>
   13c0c:	mvn	r1, #-2147483648	; 0x80000000
   13c10:	sdiv	r4, r1, lr
   13c14:	mls	r6, lr, r4, r1
   13c18:	sub	r1, r1, r6
   13c1c:	cmp	r0, #0
   13c20:	moveq	r6, #0
   13c24:	streq	r6, [r5]
   13c28:	sub	r6, r4, ip
   13c2c:	cmp	r6, r2
   13c30:	bge	13c68 <argp_parse@@Base+0x16b8>
   13c34:	adds	r2, ip, r2
   13c38:	mov	r4, r2
   13c3c:	bvs	13c84 <argp_parse@@Base+0x16d4>
   13c40:	cmp	r2, r3
   13c44:	movle	r3, #0
   13c48:	andgt	r3, r8, #1
   13c4c:	cmp	r3, #0
   13c50:	bne	13c84 <argp_parse@@Base+0x16d4>
   13c54:	smull	r2, r3, r2, lr
   13c58:	asr	ip, r2, #31
   13c5c:	mov	r1, r2
   13c60:	cmp	ip, r3
   13c64:	bne	13c84 <argp_parse@@Base+0x16d4>
   13c68:	bl	139ac <argp_parse@@Base+0x13fc>
   13c6c:	str	r4, [r5]
   13c70:	ldrd	r4, [sp]
   13c74:	ldrd	r6, [sp, #8]
   13c78:	ldr	r8, [sp, #16]
   13c7c:	add	sp, sp, #20
   13c80:	pop	{pc}		; (ldr pc, [sp], #4)
   13c84:	bl	13de0 <argp_parse@@Base+0x1830>
   13c88:	str	r4, [sp, #-8]!
   13c8c:	str	lr, [sp, #4]
   13c90:	bl	13e10 <argp_parse@@Base+0x1860>
   13c94:	cmp	r0, #0
   13c98:	beq	13ca8 <argp_parse@@Base+0x16f8>
   13c9c:	ldr	r4, [sp]
   13ca0:	add	sp, sp, #4
   13ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca8:	bl	13de0 <argp_parse@@Base+0x1830>
   13cac:	str	r4, [sp, #-8]!
   13cb0:	str	lr, [sp, #4]
   13cb4:	mov	r1, #1
   13cb8:	bl	13c88 <argp_parse@@Base+0x16d8>
   13cbc:	ldr	r4, [sp]
   13cc0:	add	sp, sp, #4
   13cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   13cc8:	str	r4, [sp, #-8]!
   13ccc:	str	lr, [sp, #4]
   13cd0:	bl	13e10 <argp_parse@@Base+0x1860>
   13cd4:	cmp	r0, #0
   13cd8:	beq	13ce8 <argp_parse@@Base+0x1738>
   13cdc:	ldr	r4, [sp]
   13ce0:	add	sp, sp, #4
   13ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ce8:	bl	13de0 <argp_parse@@Base+0x1830>
   13cec:	str	r4, [sp, #-8]!
   13cf0:	str	lr, [sp, #4]
   13cf4:	mov	r1, #1
   13cf8:	bl	13cc8 <argp_parse@@Base+0x1718>
   13cfc:	ldr	r4, [sp]
   13d00:	add	sp, sp, #4
   13d04:	pop	{pc}		; (ldr pc, [sp], #4)
   13d08:	strd	r4, [sp, #-16]!
   13d0c:	str	r6, [sp, #8]
   13d10:	str	lr, [sp, #12]
   13d14:	mov	r5, r0
   13d18:	mov	r4, r1
   13d1c:	mov	r0, r1
   13d20:	bl	1394c <argp_parse@@Base+0x139c>
   13d24:	mov	r2, r4
   13d28:	mov	r1, r5
   13d2c:	bl	110a8 <memcpy@plt>
   13d30:	ldrd	r4, [sp]
   13d34:	ldr	r6, [sp, #8]
   13d38:	add	sp, sp, #12
   13d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d40:	strd	r4, [sp, #-16]!
   13d44:	str	r6, [sp, #8]
   13d48:	str	lr, [sp, #12]
   13d4c:	mov	r5, r0
   13d50:	mov	r4, r1
   13d54:	mov	r0, r1
   13d58:	bl	13970 <argp_parse@@Base+0x13c0>
   13d5c:	mov	r2, r4
   13d60:	mov	r1, r5
   13d64:	bl	110a8 <memcpy@plt>
   13d68:	ldrd	r4, [sp]
   13d6c:	ldr	r6, [sp, #8]
   13d70:	add	sp, sp, #12
   13d74:	pop	{pc}		; (ldr pc, [sp], #4)
   13d78:	strd	r4, [sp, #-16]!
   13d7c:	str	r6, [sp, #8]
   13d80:	str	lr, [sp, #12]
   13d84:	mov	r5, r0
   13d88:	mov	r4, r1
   13d8c:	add	r0, r1, #1
   13d90:	bl	13970 <argp_parse@@Base+0x13c0>
   13d94:	mov	r2, #0
   13d98:	strb	r2, [r0, r4]
   13d9c:	mov	r2, r4
   13da0:	mov	r1, r5
   13da4:	bl	110a8 <memcpy@plt>
   13da8:	ldrd	r4, [sp]
   13dac:	ldr	r6, [sp, #8]
   13db0:	add	sp, sp, #12
   13db4:	pop	{pc}		; (ldr pc, [sp], #4)
   13db8:	str	r4, [sp, #-8]!
   13dbc:	str	lr, [sp, #4]
   13dc0:	mov	r4, r0
   13dc4:	bl	111bc <strlen@plt>
   13dc8:	add	r1, r0, #1
   13dcc:	mov	r0, r4
   13dd0:	bl	13d08 <argp_parse@@Base+0x1758>
   13dd4:	ldr	r4, [sp]
   13dd8:	add	sp, sp, #4
   13ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   13de0:	str	r4, [sp, #-8]!
   13de4:	str	lr, [sp, #4]
   13de8:	movw	r3, #41876	; 0xa394
   13dec:	movt	r3, #2
   13df0:	ldr	r0, [r3]
   13df4:	movw	r3, #37864	; 0x93e8
   13df8:	movt	r3, #1
   13dfc:	movw	r2, #35512	; 0x8ab8
   13e00:	movt	r2, #1
   13e04:	mov	r1, #0
   13e08:	bl	11120 <error@plt>
   13e0c:	bl	112c4 <abort@plt>
   13e10:	strd	r4, [sp, #-16]!
   13e14:	str	r6, [sp, #8]
   13e18:	str	lr, [sp, #12]
   13e1c:	cmp	r1, #0
   13e20:	cmpne	r0, #0
   13e24:	beq	13e60 <argp_parse@@Base+0x18b0>
   13e28:	mov	r2, r0
   13e2c:	mov	r3, r1
   13e30:	umull	r4, r5, r0, r1
   13e34:	adds	r1, r5, #0
   13e38:	movne	r1, #1
   13e3c:	cmp	r4, #0
   13e40:	movlt	r1, #1
   13e44:	cmp	r1, #0
   13e48:	beq	13e68 <argp_parse@@Base+0x18b8>
   13e4c:	bl	111e0 <__errno_location@plt>
   13e50:	mov	r3, #12
   13e54:	str	r3, [r0]
   13e58:	mov	r0, #0
   13e5c:	b	13e74 <argp_parse@@Base+0x18c4>
   13e60:	mov	r3, #1
   13e64:	mov	r2, r3
   13e68:	mov	r1, r3
   13e6c:	mov	r0, r2
   13e70:	bl	11000 <calloc@plt>
   13e74:	ldrd	r4, [sp]
   13e78:	ldr	r6, [sp, #8]
   13e7c:	add	sp, sp, #12
   13e80:	pop	{pc}		; (ldr pc, [sp], #4)
   13e84:	str	r4, [sp, #-8]!
   13e88:	str	lr, [sp, #4]
   13e8c:	cmp	r0, #0
   13e90:	beq	13eac <argp_parse@@Base+0x18fc>
   13e94:	bge	13eb0 <argp_parse@@Base+0x1900>
   13e98:	bl	111e0 <__errno_location@plt>
   13e9c:	mov	r3, #12
   13ea0:	str	r3, [r0]
   13ea4:	mov	r0, #0
   13ea8:	b	13eb4 <argp_parse@@Base+0x1904>
   13eac:	mov	r0, #1
   13eb0:	bl	11138 <malloc@plt>
   13eb4:	ldr	r4, [sp]
   13eb8:	add	sp, sp, #4
   13ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ec0:	str	r4, [sp, #-8]!
   13ec4:	str	lr, [sp, #4]
   13ec8:	cmp	r0, #0
   13ecc:	beq	13ef0 <argp_parse@@Base+0x1940>
   13ed0:	cmp	r1, #0
   13ed4:	beq	13efc <argp_parse@@Base+0x194c>
   13ed8:	cmp	r1, #0
   13edc:	blt	13f08 <argp_parse@@Base+0x1958>
   13ee0:	bl	110e4 <realloc@plt>
   13ee4:	ldr	r4, [sp]
   13ee8:	add	sp, sp, #4
   13eec:	pop	{pc}		; (ldr pc, [sp], #4)
   13ef0:	mov	r0, r1
   13ef4:	bl	13e84 <argp_parse@@Base+0x18d4>
   13ef8:	b	13ee4 <argp_parse@@Base+0x1934>
   13efc:	bl	13288 <argp_parse@@Base+0xcd8>
   13f00:	mov	r0, #0
   13f04:	b	13ee4 <argp_parse@@Base+0x1934>
   13f08:	bl	111e0 <__errno_location@plt>
   13f0c:	mov	r3, #12
   13f10:	str	r3, [r0]
   13f14:	mov	r0, #0
   13f18:	b	13ee4 <argp_parse@@Base+0x1934>
   13f1c:	ldr	r3, [r0]
   13f20:	ldr	r2, [r0, #4]
   13f24:	cmp	r2, #0
   13f28:	beq	13f64 <argp_parse@@Base+0x19b4>
   13f2c:	add	r3, r3, #24
   13f30:	b	13f40 <argp_parse@@Base+0x1990>
   13f34:	add	r3, r3, #24
   13f38:	subs	r2, r2, #1
   13f3c:	beq	13f5c <argp_parse@@Base+0x19ac>
   13f40:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13f44:	cmp	r0, #0
   13f48:	beq	13f34 <argp_parse@@Base+0x1984>
   13f4c:	ldr	r1, [r3, #-12]
   13f50:	tst	r1, #2
   13f54:	bne	13f34 <argp_parse@@Base+0x1984>
   13f58:	bx	lr
   13f5c:	mov	r0, #0
   13f60:	bx	lr
   13f64:	mov	r0, #0
   13f68:	b	13f58 <argp_parse@@Base+0x19a8>
   13f6c:	ldr	r2, [r0, #8]
   13f70:	cmp	r2, #0
   13f74:	beq	13f80 <argp_parse@@Base+0x19d0>
   13f78:	mov	r0, #0
   13f7c:	bx	lr
   13f80:	ldr	r2, [r1, #8]
   13f84:	cmp	r2, #0
   13f88:	bne	13f78 <argp_parse@@Base+0x19c8>
   13f8c:	ldr	r2, [r0, #12]
   13f90:	ldr	r1, [r1, #12]
   13f94:	orr	r2, r2, r1
   13f98:	tst	r2, #16
   13f9c:	bne	13f78 <argp_parse@@Base+0x19c8>
   13fa0:	ldr	r1, [r0, #4]
   13fa4:	ldr	r2, [r3]
   13fa8:	add	r0, r2, #1
   13fac:	str	r0, [r3]
   13fb0:	strb	r1, [r2]
   13fb4:	b	13f78 <argp_parse@@Base+0x19c8>
   13fb8:	str	r4, [sp, #-8]!
   13fbc:	str	lr, [sp, #4]
   13fc0:	mov	r4, r0
   13fc4:	bl	1118c <__ctype_b_loc@plt>
   13fc8:	ldr	r3, [r4]
   13fcc:	ldrb	r2, [r3]
   13fd0:	ldr	ip, [r0]
   13fd4:	lsl	r1, r2, #1
   13fd8:	ldrh	r1, [ip, r1]
   13fdc:	tst	r1, #8192	; 0x2000
   13fe0:	beq	13ff0 <argp_parse@@Base+0x1a40>
   13fe4:	add	r3, r3, #1
   13fe8:	str	r3, [r4]
   13fec:	b	13fc8 <argp_parse@@Base+0x1a18>
   13ff0:	subs	ip, r2, #45	; 0x2d
   13ff4:	movne	ip, #1
   13ff8:	cmp	r2, #0
   13ffc:	beq	14030 <argp_parse@@Base+0x1a80>
   14000:	tst	r1, #8
   14004:	bne	14030 <argp_parse@@Base+0x1a80>
   14008:	add	r3, r3, #1
   1400c:	str	r3, [r4]
   14010:	ldrb	r2, [r3]
   14014:	cmp	r2, #0
   14018:	beq	14030 <argp_parse@@Base+0x1a80>
   1401c:	ldr	r1, [r0]
   14020:	lsl	r2, r2, #1
   14024:	ldrh	r2, [r1, r2]
   14028:	tst	r2, #8
   1402c:	beq	14008 <argp_parse@@Base+0x1a58>
   14030:	mov	r0, ip
   14034:	ldr	r4, [sp]
   14038:	add	sp, sp, #4
   1403c:	pop	{pc}		; (ldr pc, [sp], #4)
   14040:	strd	r4, [sp, #-16]!
   14044:	str	r6, [sp, #8]
   14048:	str	lr, [sp, #12]
   1404c:	mov	r5, r0
   14050:	ldr	r0, [r0, #12]
   14054:	cmp	r0, #0
   14058:	beq	14070 <argp_parse@@Base+0x1ac0>
   1405c:	ldr	r4, [r0, #24]
   14060:	bl	13288 <argp_parse@@Base+0xcd8>
   14064:	mov	r0, r4
   14068:	cmp	r4, #0
   1406c:	bne	1405c <argp_parse@@Base+0x1aac>
   14070:	ldr	r3, [r5, #4]
   14074:	cmp	r3, #0
   14078:	bne	14094 <argp_parse@@Base+0x1ae4>
   1407c:	mov	r0, r5
   14080:	bl	13288 <argp_parse@@Base+0xcd8>
   14084:	ldrd	r4, [sp]
   14088:	ldr	r6, [sp, #8]
   1408c:	add	sp, sp, #12
   14090:	pop	{pc}		; (ldr pc, [sp], #4)
   14094:	ldr	r0, [r5]
   14098:	bl	13288 <argp_parse@@Base+0xcd8>
   1409c:	ldr	r0, [r5, #8]
   140a0:	bl	13288 <argp_parse@@Base+0xcd8>
   140a4:	b	1407c <argp_parse@@Base+0x1acc>
   140a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   140ac:	strd	r6, [sp, #8]
   140b0:	str	r8, [sp, #16]
   140b4:	str	lr, [sp, #20]
   140b8:	mov	r6, r1
   140bc:	ldr	r7, [r0]
   140c0:	ldr	r3, [r0, #4]
   140c4:	sub	r8, r3, #1
   140c8:	cmp	r3, #0
   140cc:	bne	14138 <argp_parse@@Base+0x1b88>
   140d0:	mov	r7, #0
   140d4:	b	14110 <argp_parse@@Base+0x1b60>
   140d8:	sub	r5, r5, #1
   140dc:	add	r4, r4, #24
   140e0:	cmn	r5, #1
   140e4:	beq	14128 <argp_parse@@Base+0x1b78>
   140e8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   140ec:	cmp	r0, #0
   140f0:	beq	140d8 <argp_parse@@Base+0x1b28>
   140f4:	ldr	r3, [r4, #-12]
   140f8:	tst	r3, #2
   140fc:	bne	140d8 <argp_parse@@Base+0x1b28>
   14100:	mov	r1, r6
   14104:	bl	11030 <strcmp@plt>
   14108:	cmp	r0, #0
   1410c:	bne	140d8 <argp_parse@@Base+0x1b28>
   14110:	mov	r0, r7
   14114:	ldrd	r4, [sp]
   14118:	ldrd	r6, [sp, #8]
   1411c:	ldr	r8, [sp, #16]
   14120:	add	sp, sp, #20
   14124:	pop	{pc}		; (ldr pc, [sp], #4)
   14128:	add	r7, r7, #28
   1412c:	sub	r8, r8, #1
   14130:	cmn	r8, #1
   14134:	beq	14154 <argp_parse@@Base+0x1ba4>
   14138:	ldr	r4, [r7]
   1413c:	ldr	r3, [r7, #4]
   14140:	sub	r5, r3, #1
   14144:	cmp	r3, #0
   14148:	beq	14128 <argp_parse@@Base+0x1b78>
   1414c:	add	r4, r4, #24
   14150:	b	140e8 <argp_parse@@Base+0x1b38>
   14154:	mov	r7, #0
   14158:	b	14110 <argp_parse@@Base+0x1b60>
   1415c:	strd	r4, [sp, #-16]!
   14160:	str	r6, [sp, #8]
   14164:	str	lr, [sp, #12]
   14168:	ldr	r4, [r0, #16]
   1416c:	ldr	r0, [r0, #8]
   14170:	cmp	r0, #0
   14174:	moveq	r5, #0
   14178:	beq	1418c <argp_parse@@Base+0x1bdc>
   1417c:	mov	r1, #10
   14180:	bl	111c8 <strchr@plt>
   14184:	adds	r5, r0, #0
   14188:	movne	r5, #1
   1418c:	cmp	r4, #0
   14190:	beq	141b4 <argp_parse@@Base+0x1c04>
   14194:	ldr	r0, [r4]
   14198:	cmp	r0, #0
   1419c:	beq	141b4 <argp_parse@@Base+0x1c04>
   141a0:	bl	1415c <argp_parse@@Base+0x1bac>
   141a4:	add	r5, r5, r0
   141a8:	ldr	r0, [r4, #16]!
   141ac:	cmp	r0, #0
   141b0:	bne	141a0 <argp_parse@@Base+0x1bf0>
   141b4:	mov	r0, r5
   141b8:	ldrd	r4, [sp]
   141bc:	ldr	r6, [sp, #8]
   141c0:	add	sp, sp, #12
   141c4:	pop	{pc}		; (ldr pc, [sp], #4)
   141c8:	strd	r4, [sp, #-16]!
   141cc:	str	r6, [sp, #8]
   141d0:	str	lr, [sp, #12]
   141d4:	mov	r4, r0
   141d8:	subs	r5, r2, #0
   141dc:	beq	14214 <argp_parse@@Base+0x1c64>
   141e0:	mov	r6, r1
   141e4:	ldr	r2, [r5, #20]
   141e8:	cmp	r2, #0
   141ec:	beq	14214 <argp_parse@@Base+0x1c64>
   141f0:	mov	r1, r3
   141f4:	mov	r0, r5
   141f8:	bl	13104 <argp_parse@@Base+0xb54>
   141fc:	ldr	r3, [r5, #20]
   14200:	mov	r2, r0
   14204:	mov	r1, r4
   14208:	mov	r0, r6
   1420c:	blx	r3
   14210:	mov	r4, r0
   14214:	mov	r0, r4
   14218:	ldrd	r4, [sp]
   1421c:	ldr	r6, [sp, #8]
   14220:	add	sp, sp, #12
   14224:	pop	{pc}		; (ldr pc, [sp], #4)
   14228:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1422c:	strd	r6, [sp, #8]
   14230:	strd	r8, [sp, #16]
   14234:	strd	sl, [sp, #24]
   14238:	str	lr, [sp, #32]
   1423c:	sub	sp, sp, #20
   14240:	ldr	r4, [r0]
   14244:	ldr	r9, [r0, #8]
   14248:	ldr	r6, [r0, #4]
   1424c:	cmp	r6, #0
   14250:	beq	142a4 <argp_parse@@Base+0x1cf4>
   14254:	str	r3, [sp, #12]
   14258:	str	r2, [sp, #8]
   1425c:	str	r1, [sp, #4]
   14260:	mov	fp, r4
   14264:	mov	sl, #0
   14268:	b	142f4 <argp_parse@@Base+0x1d44>
   1426c:	and	r3, r5, #4
   14270:	cmp	r3, #0
   14274:	moveq	fp, r4
   14278:	tst	r5, #2
   1427c:	bne	1429c <argp_parse@@Base+0x1cec>
   14280:	ldr	r3, [sp, #12]
   14284:	ldr	r2, [sp, #8]
   14288:	mov	r1, fp
   1428c:	mov	r0, r4
   14290:	ldr	ip, [sp, #4]
   14294:	blx	ip
   14298:	mov	r7, r0
   1429c:	add	r9, r9, #1
   142a0:	b	142d4 <argp_parse@@Base+0x1d24>
   142a4:	mov	r7, #0
   142a8:	mov	r0, r7
   142ac:	add	sp, sp, #20
   142b0:	ldrd	r4, [sp]
   142b4:	ldrd	r6, [sp, #8]
   142b8:	ldrd	r8, [sp, #16]
   142bc:	ldrd	sl, [sp, #24]
   142c0:	add	sp, sp, #32
   142c4:	pop	{pc}		; (ldr pc, [sp], #4)
   142c8:	ldrb	r3, [r9]
   142cc:	cmp	r3, r8
   142d0:	beq	1426c <argp_parse@@Base+0x1cbc>
   142d4:	add	r4, r4, #24
   142d8:	subs	r6, r6, #1
   142dc:	movne	r3, #1
   142e0:	moveq	r3, #0
   142e4:	cmp	r7, #0
   142e8:	movne	r3, #0
   142ec:	cmp	r3, #0
   142f0:	beq	142a8 <argp_parse@@Base+0x1cf8>
   142f4:	ldr	r5, [r4, #12]
   142f8:	ands	r7, r5, #8
   142fc:	movne	r7, sl
   14300:	bne	142d4 <argp_parse@@Base+0x1d24>
   14304:	ldr	r8, [r4, #4]
   14308:	sub	r3, r8, #1
   1430c:	cmp	r3, #254	; 0xfe
   14310:	bhi	142d4 <argp_parse@@Base+0x1d24>
   14314:	bl	1118c <__ctype_b_loc@plt>
   14318:	ldr	r2, [r0]
   1431c:	lsl	r3, r8, #1
   14320:	ldrh	r3, [r2, r3]
   14324:	tst	r3, #16384	; 0x4000
   14328:	bne	142c8 <argp_parse@@Base+0x1d18>
   1432c:	b	142d4 <argp_parse@@Base+0x1d24>
   14330:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14334:	strd	r6, [sp, #8]
   14338:	strd	r8, [sp, #16]
   1433c:	strd	sl, [sp, #24]
   14340:	str	lr, [sp, #32]
   14344:	add	fp, sp, #32
   14348:	sub	sp, sp, #20
   1434c:	ldr	r5, [r0, #4]
   14350:	cmp	r5, #0
   14354:	beq	144fc <argp_parse@@Base+0x1f4c>
   14358:	str	r1, [fp, #-48]	; 0xffffffd0
   1435c:	mov	r6, r0
   14360:	ldr	r0, [r0, #8]
   14364:	bl	111bc <strlen@plt>
   14368:	add	r3, r0, #8
   1436c:	bic	r3, r3, #7
   14370:	sub	sp, sp, r3
   14374:	mov	r8, sp
   14378:	str	r8, [fp, #-40]	; 0xffffffd8
   1437c:	ldr	r4, [r6]
   14380:	movw	r7, #16236	; 0x3f6c
   14384:	movt	r7, #1
   14388:	ldr	r2, [r4, #20]
   1438c:	sub	r3, fp, #40	; 0x28
   14390:	ldr	r2, [r2, #24]
   14394:	mov	r1, r7
   14398:	mov	r0, r4
   1439c:	bl	14228 <argp_parse@@Base+0x1c78>
   143a0:	add	r4, r4, #28
   143a4:	subs	r5, r5, #1
   143a8:	bne	14388 <argp_parse@@Base+0x1dd8>
   143ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   143b0:	cmp	r3, r8
   143b4:	bhi	14428 <argp_parse@@Base+0x1e78>
   143b8:	ldr	r4, [r6]
   143bc:	ldr	r5, [r6, #4]
   143c0:	cmp	r5, #0
   143c4:	beq	144fc <argp_parse@@Base+0x1f4c>
   143c8:	movw	r7, #18164	; 0x46f4
   143cc:	movt	r7, #1
   143d0:	ldr	r2, [r4, #20]
   143d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   143d8:	ldr	r2, [r2, #24]
   143dc:	mov	r1, r7
   143e0:	mov	r0, r4
   143e4:	bl	14228 <argp_parse@@Base+0x1c78>
   143e8:	add	r4, r4, #28
   143ec:	subs	r5, r5, #1
   143f0:	bne	143d0 <argp_parse@@Base+0x1e20>
   143f4:	ldr	r7, [r6]
   143f8:	ldr	r8, [r6, #4]
   143fc:	cmp	r8, #0
   14400:	beq	144fc <argp_parse@@Base+0x1f4c>
   14404:	add	r7, r7, #28
   14408:	movw	sl, #38076	; 0x94bc
   1440c:	movt	sl, #1
   14410:	movw	r9, #38060	; 0x94ac
   14414:	movt	r9, #1
   14418:	movw	r3, #38088	; 0x94c8
   1441c:	movt	r3, #1
   14420:	str	r3, [fp, #-52]	; 0xffffffcc
   14424:	b	144e4 <argp_parse@@Base+0x1f34>
   14428:	add	r2, r3, #1
   1442c:	str	r2, [fp, #-40]	; 0xffffffd8
   14430:	mov	r2, #0
   14434:	strb	r2, [r3]
   14438:	mov	r2, r8
   1443c:	movw	r1, #38052	; 0x94a4
   14440:	movt	r1, #1
   14444:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14448:	bl	18758 <argp_error@@Base+0x1550>
   1444c:	b	143b8 <argp_parse@@Base+0x1e08>
   14450:	tst	r1, #16
   14454:	bne	14488 <argp_parse@@Base+0x1ed8>
   14458:	ldr	r3, [r6, #8]
   1445c:	cmp	r3, #0
   14460:	bne	14474 <argp_parse@@Base+0x1ec4>
   14464:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14468:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1446c:	bl	18758 <argp_error@@Base+0x1550>
   14470:	b	14488 <argp_parse@@Base+0x1ed8>
   14474:	tst	r1, #1
   14478:	movne	r1, r9
   1447c:	moveq	r1, sl
   14480:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14484:	bl	18758 <argp_error@@Base+0x1550>
   14488:	add	r4, r4, #24
   1448c:	subs	r5, r5, #1
   14490:	beq	144d8 <argp_parse@@Base+0x1f28>
   14494:	ldr	r2, [r4]
   14498:	cmp	r2, #0
   1449c:	beq	14488 <argp_parse@@Base+0x1ed8>
   144a0:	ldr	r1, [r4, #12]
   144a4:	and	r3, r1, #4
   144a8:	cmp	r3, #0
   144ac:	moveq	r6, r4
   144b0:	tst	r1, #2
   144b4:	bne	14488 <argp_parse@@Base+0x1ed8>
   144b8:	ldr	r3, [r4, #8]
   144bc:	ldr	r0, [r6, #12]
   144c0:	orr	r1, r1, r0
   144c4:	cmp	r3, #0
   144c8:	beq	14450 <argp_parse@@Base+0x1ea0>
   144cc:	tst	r1, #16
   144d0:	beq	14474 <argp_parse@@Base+0x1ec4>
   144d4:	b	14488 <argp_parse@@Base+0x1ed8>
   144d8:	add	r7, r7, #28
   144dc:	subs	r8, r8, #1
   144e0:	beq	144fc <argp_parse@@Base+0x1f4c>
   144e4:	ldr	r4, [r7, #-28]	; 0xffffffe4
   144e8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   144ec:	cmp	r5, #0
   144f0:	beq	144d8 <argp_parse@@Base+0x1f28>
   144f4:	mov	r6, r4
   144f8:	b	14494 <argp_parse@@Base+0x1ee4>
   144fc:	sub	sp, fp, #32
   14500:	ldrd	r4, [sp]
   14504:	ldrd	r6, [sp, #8]
   14508:	ldrd	r8, [sp, #16]
   1450c:	ldrd	sl, [sp, #24]
   14510:	add	sp, sp, #32
   14514:	pop	{pc}		; (ldr pc, [sp], #4)
   14518:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1451c:	strd	r6, [sp, #8]
   14520:	str	r8, [sp, #16]
   14524:	str	lr, [sp, #20]
   14528:	mov	r4, r0
   1452c:	mov	r5, r1
   14530:	ldr	r3, [r0, #28]
   14534:	ldr	r2, [r0, #24]
   14538:	sub	r3, r3, r2
   1453c:	ldr	r2, [r0, #16]
   14540:	cmp	r3, r2
   14544:	bhi	14560 <argp_parse@@Base+0x1fb0>
   14548:	ldr	r3, [r4, #20]
   1454c:	cmp	r3, #0
   14550:	subge	r5, r5, r3
   14554:	mov	r6, #32
   14558:	mov	r7, #1
   1455c:	b	1457c <argp_parse@@Base+0x1fcc>
   14560:	bl	180e0 <argp_error@@Base+0xed8>
   14564:	b	14548 <argp_parse@@Base+0x1f98>
   14568:	ldr	r3, [r4, #28]
   1456c:	add	r2, r3, #1
   14570:	str	r2, [r4, #28]
   14574:	strb	r6, [r3]
   14578:	sub	r5, r5, #1
   1457c:	cmp	r5, #0
   14580:	ble	145ac <argp_parse@@Base+0x1ffc>
   14584:	ldr	r2, [r4, #28]
   14588:	ldr	r3, [r4, #32]
   1458c:	cmp	r2, r3
   14590:	bcc	14568 <argp_parse@@Base+0x1fb8>
   14594:	mov	r1, r7
   14598:	mov	r0, r4
   1459c:	bl	18658 <argp_error@@Base+0x1450>
   145a0:	cmp	r0, #0
   145a4:	bne	14568 <argp_parse@@Base+0x1fb8>
   145a8:	b	14578 <argp_parse@@Base+0x1fc8>
   145ac:	ldrd	r4, [sp]
   145b0:	ldrd	r6, [sp, #8]
   145b4:	ldr	r8, [sp, #16]
   145b8:	add	sp, sp, #20
   145bc:	pop	{pc}		; (ldr pc, [sp], #4)
   145c0:	strd	r4, [sp, #-16]!
   145c4:	str	r6, [sp, #8]
   145c8:	str	lr, [sp, #12]
   145cc:	ldr	r4, [r0, #12]
   145d0:	ands	r4, r4, #8
   145d4:	movne	r4, #0
   145d8:	bne	14608 <argp_parse@@Base+0x2058>
   145dc:	ldr	r5, [r0, #4]
   145e0:	sub	r3, r5, #1
   145e4:	cmp	r3, #254	; 0xfe
   145e8:	bhi	14608 <argp_parse@@Base+0x2058>
   145ec:	bl	1118c <__ctype_b_loc@plt>
   145f0:	ldr	r2, [r0]
   145f4:	lsl	r3, r5, #1
   145f8:	ldrh	r3, [r2, r3]
   145fc:	and	r3, r3, #16384	; 0x4000
   14600:	cmp	r3, #0
   14604:	movne	r4, r5
   14608:	mov	r0, r4
   1460c:	ldrd	r4, [sp]
   14610:	ldr	r6, [sp, #8]
   14614:	add	sp, sp, #12
   14618:	pop	{pc}		; (ldr pc, [sp], #4)
   1461c:	strd	r4, [sp, #-16]!
   14620:	str	r6, [sp, #8]
   14624:	str	lr, [sp, #12]
   14628:	mov	r4, r0
   1462c:	mov	r5, r1
   14630:	ldr	r3, [r0, #28]
   14634:	ldr	r2, [r0, #24]
   14638:	sub	r3, r3, r2
   1463c:	ldr	r2, [r0, #16]
   14640:	cmp	r3, r2
   14644:	bhi	14694 <argp_parse@@Base+0x20e4>
   14648:	ldr	r3, [r4, #20]
   1464c:	cmp	r3, #0
   14650:	addge	r5, r5, r3
   14654:	ldr	r3, [r4, #8]
   14658:	cmp	r5, r3
   1465c:	bcc	146b4 <argp_parse@@Base+0x2104>
   14660:	ldr	r2, [r4, #28]
   14664:	ldr	r3, [r4, #32]
   14668:	cmp	r2, r3
   1466c:	bcs	1469c <argp_parse@@Base+0x20ec>
   14670:	ldr	r3, [r4, #28]
   14674:	add	r2, r3, #1
   14678:	str	r2, [r4, #28]
   1467c:	mov	r2, #10
   14680:	strb	r2, [r3]
   14684:	ldrd	r4, [sp]
   14688:	ldr	r6, [sp, #8]
   1468c:	add	sp, sp, #12
   14690:	pop	{pc}		; (ldr pc, [sp], #4)
   14694:	bl	180e0 <argp_error@@Base+0xed8>
   14698:	b	14648 <argp_parse@@Base+0x2098>
   1469c:	mov	r1, #1
   146a0:	mov	r0, r4
   146a4:	bl	18658 <argp_error@@Base+0x1450>
   146a8:	cmp	r0, #0
   146ac:	bne	14670 <argp_parse@@Base+0x20c0>
   146b0:	b	14684 <argp_parse@@Base+0x20d4>
   146b4:	ldr	r2, [r4, #28]
   146b8:	ldr	r3, [r4, #32]
   146bc:	cmp	r2, r3
   146c0:	bcs	146dc <argp_parse@@Base+0x212c>
   146c4:	ldr	r3, [r4, #28]
   146c8:	add	r2, r3, #1
   146cc:	str	r2, [r4, #28]
   146d0:	mov	r2, #32
   146d4:	strb	r2, [r3]
   146d8:	b	14684 <argp_parse@@Base+0x20d4>
   146dc:	mov	r1, #1
   146e0:	mov	r0, r4
   146e4:	bl	18658 <argp_error@@Base+0x1450>
   146e8:	cmp	r0, #0
   146ec:	bne	146c4 <argp_parse@@Base+0x2114>
   146f0:	b	14684 <argp_parse@@Base+0x20d4>
   146f4:	strd	r4, [sp, #-16]!
   146f8:	str	r6, [sp, #8]
   146fc:	str	lr, [sp, #12]
   14700:	ldr	r5, [r0, #8]
   14704:	cmp	r5, #0
   14708:	beq	1474c <argp_parse@@Base+0x219c>
   1470c:	ldr	r2, [r0, #12]
   14710:	ldr	r1, [r1, #12]
   14714:	orr	r2, r2, r1
   14718:	tst	r2, #16
   1471c:	bne	14758 <argp_parse@@Base+0x21a8>
   14720:	mov	r6, r3
   14724:	mov	r4, r0
   14728:	tst	r2, #1
   1472c:	beq	1476c <argp_parse@@Base+0x21bc>
   14730:	mov	r3, r5
   14734:	ldr	r2, [r0, #4]
   14738:	movw	r1, #38096	; 0x94d0
   1473c:	movt	r1, #1
   14740:	mov	r0, r6
   14744:	bl	18758 <argp_error@@Base+0x1550>
   14748:	b	14758 <argp_parse@@Base+0x21a8>
   1474c:	ldr	r5, [r1, #8]
   14750:	cmp	r5, #0
   14754:	bne	1470c <argp_parse@@Base+0x215c>
   14758:	mov	r0, #0
   1475c:	ldrd	r4, [sp]
   14760:	ldr	r6, [sp, #8]
   14764:	add	sp, sp, #12
   14768:	pop	{pc}		; (ldr pc, [sp], #4)
   1476c:	mov	r0, r5
   14770:	bl	111bc <strlen@plt>
   14774:	add	r1, r0, #6
   14778:	mov	r0, r6
   1477c:	bl	1461c <argp_parse@@Base+0x206c>
   14780:	mov	r3, r5
   14784:	ldr	r2, [r4, #4]
   14788:	movw	r1, #38108	; 0x94dc
   1478c:	movt	r1, #1
   14790:	mov	r0, r6
   14794:	bl	18758 <argp_error@@Base+0x1550>
   14798:	b	14758 <argp_parse@@Base+0x21a8>
   1479c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   147a0:	strd	r6, [sp, #8]
   147a4:	strd	r8, [sp, #16]
   147a8:	strd	sl, [sp, #24]
   147ac:	str	lr, [sp, #32]
   147b0:	sub	sp, sp, #28
   147b4:	str	r1, [sp, #8]
   147b8:	mov	sl, r2
   147bc:	mov	r4, r3
   147c0:	ldr	r9, [sp, #64]	; 0x40
   147c4:	ldr	r6, [r2]
   147c8:	str	r6, [sp, #20]
   147cc:	ldr	r7, [r0, #16]
   147d0:	ldr	r2, [r0, #8]
   147d4:	mov	ip, r2
   147d8:	str	r2, [sp, #16]
   147dc:	mov	r3, r1
   147e0:	mov	r2, r0
   147e4:	mov	r1, #6
   147e8:	movt	r1, #512	; 0x200
   147ec:	mov	r0, ip
   147f0:	bl	141c8 <argp_parse@@Base+0x1c18>
   147f4:	cmp	r0, #0
   147f8:	str	r0, [sp, #12]
   147fc:	beq	1498c <argp_parse@@Base+0x23dc>
   14800:	mov	r1, #10
   14804:	bl	11078 <strchrnul@plt>
   14808:	mov	r5, r0
   1480c:	ldrb	r3, [r0]
   14810:	cmp	r3, #0
   14814:	beq	1495c <argp_parse@@Base+0x23ac>
   14818:	ldrb	fp, [r6]
   1481c:	cmp	fp, #0
   14820:	ble	14954 <argp_parse@@Base+0x23a4>
   14824:	mov	r6, #0
   14828:	add	r8, r0, #1
   1482c:	mov	r1, #10
   14830:	mov	r0, r8
   14834:	bl	11078 <strchrnul@plt>
   14838:	add	r6, r6, #1
   1483c:	cmp	r6, fp
   14840:	bne	14828 <argp_parse@@Base+0x2278>
   14844:	mov	r5, r0
   14848:	ldr	r3, [sl]
   1484c:	add	r3, r3, #1
   14850:	str	r3, [sl]
   14854:	mov	fp, #1
   14858:	add	r1, r5, #1
   1485c:	sub	r1, r1, r8
   14860:	mov	r0, r9
   14864:	bl	1461c <argp_parse@@Base+0x206c>
   14868:	sub	r6, r5, r8
   1486c:	ldr	r3, [r9, #28]
   14870:	add	r3, r3, r6
   14874:	ldr	r2, [r9, #32]
   14878:	cmp	r2, r3
   1487c:	bcs	14894 <argp_parse@@Base+0x22e4>
   14880:	mov	r1, r6
   14884:	mov	r0, r9
   14888:	bl	18658 <argp_error@@Base+0x1450>
   1488c:	cmp	r0, #0
   14890:	beq	148b0 <argp_parse@@Base+0x2300>
   14894:	mov	r2, r6
   14898:	mov	r1, r8
   1489c:	ldr	r0, [r9, #28]
   148a0:	bl	110a8 <memcpy@plt>
   148a4:	ldr	r3, [r9, #28]
   148a8:	add	r6, r3, r6
   148ac:	str	r6, [r9, #28]
   148b0:	ldr	r2, [sp, #16]
   148b4:	ldr	r3, [sp, #12]
   148b8:	cmp	r2, r3
   148bc:	bne	14968 <argp_parse@@Base+0x23b8>
   148c0:	cmp	r7, #0
   148c4:	beq	14900 <argp_parse@@Base+0x2350>
   148c8:	ldr	r0, [r7]
   148cc:	cmp	r0, #0
   148d0:	beq	14900 <argp_parse@@Base+0x2350>
   148d4:	mov	r3, r4
   148d8:	str	r9, [sp]
   148dc:	mov	r2, sl
   148e0:	ldr	r1, [sp, #8]
   148e4:	bl	1479c <argp_parse@@Base+0x21ec>
   148e8:	clz	r3, r0
   148ec:	lsr	r3, r3, #5
   148f0:	ldr	r0, [r7, #16]!
   148f4:	cmp	r0, #0
   148f8:	bne	148d8 <argp_parse@@Base+0x2328>
   148fc:	mov	r4, r3
   14900:	cmp	r4, #0
   14904:	moveq	fp, #0
   14908:	cmp	fp, #0
   1490c:	beq	14930 <argp_parse@@Base+0x2380>
   14910:	ldrb	r3, [r5]
   14914:	cmp	r3, #0
   14918:	beq	14974 <argp_parse@@Base+0x23c4>
   1491c:	ldr	r2, [sp, #20]
   14920:	ldrb	r3, [r2]
   14924:	add	r3, r3, #1
   14928:	strb	r3, [r2]
   1492c:	mov	r4, #0
   14930:	clz	r0, r4
   14934:	lsr	r0, r0, #5
   14938:	add	sp, sp, #28
   1493c:	ldrd	r4, [sp]
   14940:	ldrd	r6, [sp, #8]
   14944:	ldrd	r8, [sp, #16]
   14948:	ldrd	sl, [sp, #24]
   1494c:	add	sp, sp, #32
   14950:	pop	{pc}		; (ldr pc, [sp], #4)
   14954:	ldr	r8, [sp, #12]
   14958:	b	14848 <argp_parse@@Base+0x2298>
   1495c:	ldr	r8, [sp, #12]
   14960:	mov	fp, #0
   14964:	b	14858 <argp_parse@@Base+0x22a8>
   14968:	mov	r0, r3
   1496c:	bl	13288 <argp_parse@@Base+0xcd8>
   14970:	b	148c0 <argp_parse@@Base+0x2310>
   14974:	ldr	r2, [sp, #20]
   14978:	ldrb	r3, [r2]
   1497c:	cmp	r3, #0
   14980:	movne	r3, #0
   14984:	strbne	r3, [r2]
   14988:	b	14930 <argp_parse@@Base+0x2380>
   1498c:	cmp	r7, #0
   14990:	beq	14930 <argp_parse@@Base+0x2380>
   14994:	ldr	r5, [sp, #12]
   14998:	mov	fp, #0
   1499c:	b	148c8 <argp_parse@@Base+0x2318>
   149a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   149a4:	strd	r6, [sp, #8]
   149a8:	str	r8, [sp, #16]
   149ac:	str	lr, [sp, #20]
   149b0:	mov	r6, r0
   149b4:	mov	r4, r2
   149b8:	ldr	r3, [r2, #16]
   149bc:	mov	r2, r1
   149c0:	mov	r1, #3
   149c4:	movt	r1, #512	; 0x200
   149c8:	bl	141c8 <argp_parse@@Base+0x1c18>
   149cc:	subs	r5, r0, #0
   149d0:	beq	14ae4 <argp_parse@@Base+0x2534>
   149d4:	ldrb	r3, [r5]
   149d8:	cmp	r3, #0
   149dc:	beq	14ad8 <argp_parse@@Base+0x2528>
   149e0:	ldr	r3, [r4, #8]
   149e4:	ldr	r3, [r3]
   149e8:	cmp	r3, #0
   149ec:	beq	14a18 <argp_parse@@Base+0x2468>
   149f0:	ldr	r7, [r4, #4]
   149f4:	ldr	r2, [r7, #28]
   149f8:	ldr	r3, [r7, #32]
   149fc:	cmp	r2, r3
   14a00:	bcs	14b08 <argp_parse@@Base+0x2558>
   14a04:	ldr	r3, [r7, #28]
   14a08:	add	r2, r3, #1
   14a0c:	str	r2, [r7, #28]
   14a10:	mov	r2, #10
   14a14:	strb	r2, [r3]
   14a18:	movw	r8, #41836	; 0xa36c
   14a1c:	movt	r8, #2
   14a20:	ldr	r1, [r8, #24]
   14a24:	ldr	r0, [r4, #4]
   14a28:	bl	14518 <argp_parse@@Base+0x1f68>
   14a2c:	ldr	r7, [r4, #4]
   14a30:	ldr	r8, [r8, #24]
   14a34:	ldr	r3, [r7, #28]
   14a38:	ldr	r2, [r7, #24]
   14a3c:	sub	r3, r3, r2
   14a40:	ldr	r2, [r7, #16]
   14a44:	cmp	r3, r2
   14a48:	bhi	14b20 <argp_parse@@Base+0x2570>
   14a4c:	str	r8, [r7, #4]
   14a50:	ldr	r7, [r4, #4]
   14a54:	movw	r3, #41836	; 0xa36c
   14a58:	movt	r3, #2
   14a5c:	ldr	r8, [r3, #24]
   14a60:	ldr	r3, [r7, #28]
   14a64:	ldr	r2, [r7, #24]
   14a68:	sub	r3, r3, r2
   14a6c:	ldr	r2, [r7, #16]
   14a70:	cmp	r3, r2
   14a74:	bhi	14b2c <argp_parse@@Base+0x257c>
   14a78:	str	r8, [r7, #12]
   14a7c:	mov	r0, r5
   14a80:	bl	111bc <strlen@plt>
   14a84:	subs	r7, r0, #0
   14a88:	bne	14b38 <argp_parse@@Base+0x2588>
   14a8c:	ldr	r7, [r4, #4]
   14a90:	ldr	r3, [r7, #28]
   14a94:	ldr	r2, [r7, #24]
   14a98:	sub	r3, r3, r2
   14a9c:	ldr	r2, [r7, #16]
   14aa0:	cmp	r3, r2
   14aa4:	bhi	14b84 <argp_parse@@Base+0x25d4>
   14aa8:	mov	r3, #0
   14aac:	str	r3, [r7, #4]
   14ab0:	ldr	r7, [r4, #4]
   14ab4:	ldr	r2, [r7, #28]
   14ab8:	ldr	r3, [r7, #32]
   14abc:	cmp	r2, r3
   14ac0:	bcs	14b90 <argp_parse@@Base+0x25e0>
   14ac4:	ldr	r3, [r7, #28]
   14ac8:	add	r2, r3, #1
   14acc:	str	r2, [r7, #28]
   14ad0:	mov	r2, #10
   14ad4:	strb	r2, [r3]
   14ad8:	ldr	r3, [r4, #8]
   14adc:	mov	r2, #1
   14ae0:	str	r2, [r3, #4]
   14ae4:	cmp	r6, r5
   14ae8:	beq	14af4 <argp_parse@@Base+0x2544>
   14aec:	mov	r0, r5
   14af0:	bl	13288 <argp_parse@@Base+0xcd8>
   14af4:	ldrd	r4, [sp]
   14af8:	ldrd	r6, [sp, #8]
   14afc:	ldr	r8, [sp, #16]
   14b00:	add	sp, sp, #20
   14b04:	pop	{pc}		; (ldr pc, [sp], #4)
   14b08:	mov	r1, #1
   14b0c:	mov	r0, r7
   14b10:	bl	18658 <argp_error@@Base+0x1450>
   14b14:	cmp	r0, #0
   14b18:	bne	14a04 <argp_parse@@Base+0x2454>
   14b1c:	b	14a18 <argp_parse@@Base+0x2468>
   14b20:	mov	r0, r7
   14b24:	bl	180e0 <argp_error@@Base+0xed8>
   14b28:	b	14a4c <argp_parse@@Base+0x249c>
   14b2c:	mov	r0, r7
   14b30:	bl	180e0 <argp_error@@Base+0xed8>
   14b34:	b	14a78 <argp_parse@@Base+0x24c8>
   14b38:	ldr	r8, [r4, #4]
   14b3c:	ldr	r3, [r8, #28]
   14b40:	add	r3, r3, r7
   14b44:	ldr	r2, [r8, #32]
   14b48:	cmp	r2, r3
   14b4c:	bcs	14b64 <argp_parse@@Base+0x25b4>
   14b50:	mov	r1, r7
   14b54:	mov	r0, r8
   14b58:	bl	18658 <argp_error@@Base+0x1450>
   14b5c:	cmp	r0, #0
   14b60:	beq	14a8c <argp_parse@@Base+0x24dc>
   14b64:	mov	r2, r7
   14b68:	mov	r1, r5
   14b6c:	ldr	r0, [r8, #28]
   14b70:	bl	110a8 <memcpy@plt>
   14b74:	ldr	r3, [r8, #28]
   14b78:	add	r7, r3, r7
   14b7c:	str	r7, [r8, #28]
   14b80:	b	14a8c <argp_parse@@Base+0x24dc>
   14b84:	mov	r0, r7
   14b88:	bl	180e0 <argp_error@@Base+0xed8>
   14b8c:	b	14aa8 <argp_parse@@Base+0x24f8>
   14b90:	mov	r1, #1
   14b94:	mov	r0, r7
   14b98:	bl	18658 <argp_error@@Base+0x1450>
   14b9c:	cmp	r0, #0
   14ba0:	bne	14ac4 <argp_parse@@Base+0x2514>
   14ba4:	b	14ad8 <argp_parse@@Base+0x2528>
   14ba8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14bac:	strd	r6, [sp, #8]
   14bb0:	str	r8, [sp, #16]
   14bb4:	str	lr, [sp, #20]
   14bb8:	mov	r6, r0
   14bbc:	mov	r4, r1
   14bc0:	ldr	r3, [r1, #12]
   14bc4:	cmp	r3, #0
   14bc8:	beq	14cfc <argp_parse@@Base+0x274c>
   14bcc:	ldr	r3, [r1, #8]
   14bd0:	ldr	r7, [r3]
   14bd4:	ldr	r2, [r1]
   14bd8:	ldr	r5, [r2, #16]
   14bdc:	ldr	r3, [r3, #4]
   14be0:	cmp	r3, #0
   14be4:	cmpne	r7, #0
   14be8:	bne	14c9c <argp_parse@@Base+0x26ec>
   14bec:	cmp	r5, #0
   14bf0:	beq	14c74 <argp_parse@@Base+0x26c4>
   14bf4:	ldr	r0, [r5]
   14bf8:	cmp	r0, #0
   14bfc:	beq	14c74 <argp_parse@@Base+0x26c4>
   14c00:	ldrb	r3, [r0]
   14c04:	cmp	r3, #0
   14c08:	beq	14c74 <argp_parse@@Base+0x26c4>
   14c0c:	cmp	r7, #0
   14c10:	beq	14c40 <argp_parse@@Base+0x2690>
   14c14:	ldr	r3, [r7, #16]
   14c18:	cmp	r3, r5
   14c1c:	beq	14c74 <argp_parse@@Base+0x26c4>
   14c20:	cmp	r3, #0
   14c24:	beq	14c40 <argp_parse@@Base+0x2690>
   14c28:	ldr	r3, [r3, #12]
   14c2c:	cmp	r3, #0
   14c30:	cmpne	r5, r3
   14c34:	bne	14c28 <argp_parse@@Base+0x2678>
   14c38:	cmp	r5, r3
   14c3c:	beq	14c74 <argp_parse@@Base+0x26c4>
   14c40:	ldr	r3, [r4, #4]
   14c44:	ldr	r7, [r3, #12]
   14c48:	mov	r2, r4
   14c4c:	ldr	r1, [r5, #16]
   14c50:	bl	149a0 <argp_parse@@Base+0x23f0>
   14c54:	ldr	r5, [r4, #4]
   14c58:	ldr	r3, [r5, #28]
   14c5c:	ldr	r2, [r5, #24]
   14c60:	sub	r3, r3, r2
   14c64:	ldr	r2, [r5, #16]
   14c68:	cmp	r3, r2
   14c6c:	bhi	14cf0 <argp_parse@@Base+0x2740>
   14c70:	str	r7, [r5, #12]
   14c74:	mov	r3, #0
   14c78:	str	r3, [r4, #12]
   14c7c:	mov	r1, r6
   14c80:	ldr	r0, [r4, #4]
   14c84:	bl	14518 <argp_parse@@Base+0x1f68>
   14c88:	ldrd	r4, [sp]
   14c8c:	ldrd	r6, [sp, #8]
   14c90:	ldr	r8, [sp, #16]
   14c94:	add	sp, sp, #20
   14c98:	pop	{pc}		; (ldr pc, [sp], #4)
   14c9c:	ldr	r2, [r2, #12]
   14ca0:	ldr	r3, [r7, #12]
   14ca4:	cmp	r2, r3
   14ca8:	beq	14bec <argp_parse@@Base+0x263c>
   14cac:	ldr	r8, [r1, #4]
   14cb0:	ldr	r2, [r8, #28]
   14cb4:	ldr	r3, [r8, #32]
   14cb8:	cmp	r2, r3
   14cbc:	bcs	14cd8 <argp_parse@@Base+0x2728>
   14cc0:	ldr	r3, [r8, #28]
   14cc4:	add	r2, r3, #1
   14cc8:	str	r2, [r8, #28]
   14ccc:	mov	r2, #10
   14cd0:	strb	r2, [r3]
   14cd4:	b	14bec <argp_parse@@Base+0x263c>
   14cd8:	mov	r1, #1
   14cdc:	mov	r0, r8
   14ce0:	bl	18658 <argp_error@@Base+0x1450>
   14ce4:	cmp	r0, #0
   14ce8:	bne	14cc0 <argp_parse@@Base+0x2710>
   14cec:	b	14bec <argp_parse@@Base+0x263c>
   14cf0:	mov	r0, r5
   14cf4:	bl	180e0 <argp_error@@Base+0xed8>
   14cf8:	b	14c70 <argp_parse@@Base+0x26c0>
   14cfc:	ldr	r5, [r1, #4]
   14d00:	ldr	r3, [r5, #28]
   14d04:	add	r3, r3, #2
   14d08:	ldr	r2, [r5, #32]
   14d0c:	cmp	r2, r3
   14d10:	bcs	14d28 <argp_parse@@Base+0x2778>
   14d14:	mov	r1, #2
   14d18:	mov	r0, r5
   14d1c:	bl	18658 <argp_error@@Base+0x1450>
   14d20:	cmp	r0, #0
   14d24:	beq	14c7c <argp_parse@@Base+0x26cc>
   14d28:	ldr	r2, [r5, #28]
   14d2c:	movw	r3, #38120	; 0x94e8
   14d30:	movt	r3, #1
   14d34:	ldrh	r3, [r3]
   14d38:	strh	r3, [r2]
   14d3c:	ldr	r3, [r5, #28]
   14d40:	add	r3, r3, #2
   14d44:	str	r3, [r5, #28]
   14d48:	b	14c7c <argp_parse@@Base+0x26cc>
   14d4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14d50:	strd	r6, [sp, #8]
   14d54:	strd	r8, [sp, #16]
   14d58:	strd	sl, [sp, #24]
   14d5c:	str	lr, [sp, #32]
   14d60:	sub	sp, sp, #28
   14d64:	mov	r8, r0
   14d68:	str	r1, [sp, #12]
   14d6c:	str	r2, [sp, #8]
   14d70:	mov	fp, r3
   14d74:	ldr	sl, [sp, #64]	; 0x40
   14d78:	ldr	r4, [sp, #68]	; 0x44
   14d7c:	ldr	r6, [r0, #12]
   14d80:	ldr	r9, [r0, #16]
   14d84:	cmp	r6, #0
   14d88:	beq	15204 <argp_parse@@Base+0x2c54>
   14d8c:	mov	r5, r2
   14d90:	mov	r1, #11
   14d94:	mov	r0, r6
   14d98:	bl	111c8 <strchr@plt>
   14d9c:	cmp	r5, #0
   14da0:	beq	14de0 <argp_parse@@Base+0x2830>
   14da4:	cmp	r0, #0
   14da8:	addne	r6, r0, #1
   14dac:	beq	1524c <argp_parse@@Base+0x2c9c>
   14db0:	ldr	r3, [r8, #20]
   14db4:	cmp	r3, #0
   14db8:	beq	15254 <argp_parse@@Base+0x2ca4>
   14dbc:	ldr	r1, [sp, #12]
   14dc0:	mov	r0, r8
   14dc4:	bl	13104 <argp_parse@@Base+0xb54>
   14dc8:	str	r0, [sp, #16]
   14dcc:	ldr	r3, [r8, #20]
   14dd0:	mov	r7, #0
   14dd4:	mov	r0, #2
   14dd8:	movt	r0, #512	; 0x200
   14ddc:	b	14e2c <argp_parse@@Base+0x287c>
   14de0:	cmp	r0, #0
   14de4:	beq	15270 <argp_parse@@Base+0x2cc0>
   14de8:	sub	r7, r0, r6
   14dec:	ldr	r3, [r8, #20]
   14df0:	cmp	r3, #0
   14df4:	beq	15014 <argp_parse@@Base+0x2a64>
   14df8:	cmp	r7, #0
   14dfc:	beq	14e10 <argp_parse@@Base+0x2860>
   14e00:	mov	r1, r7
   14e04:	mov	r0, r6
   14e08:	bl	1109c <strndup@plt>
   14e0c:	mov	r6, r0
   14e10:	ldr	r1, [sp, #12]
   14e14:	mov	r0, r8
   14e18:	bl	13104 <argp_parse@@Base+0xb54>
   14e1c:	str	r0, [sp, #16]
   14e20:	ldr	r3, [r8, #20]
   14e24:	mov	r0, #1
   14e28:	movt	r0, #512	; 0x200
   14e2c:	ldr	r2, [sp, #16]
   14e30:	mov	r1, r6
   14e34:	blx	r3
   14e38:	subs	r5, r0, #0
   14e3c:	beq	15120 <argp_parse@@Base+0x2b70>
   14e40:	cmp	fp, #0
   14e44:	bne	15024 <argp_parse@@Base+0x2a74>
   14e48:	cmp	r5, r6
   14e4c:	movne	r3, #0
   14e50:	moveq	r3, #1
   14e54:	cmp	r7, #0
   14e58:	moveq	r3, #0
   14e5c:	cmp	r3, #0
   14e60:	beq	15064 <argp_parse@@Base+0x2ab4>
   14e64:	ldr	r3, [r4, #28]
   14e68:	add	r3, r3, r7
   14e6c:	ldr	r2, [r4, #32]
   14e70:	cmp	r2, r3
   14e74:	bcs	14e8c <argp_parse@@Base+0x28dc>
   14e78:	mov	r1, r7
   14e7c:	mov	r0, r4
   14e80:	bl	18658 <argp_error@@Base+0x1450>
   14e84:	cmp	r0, #0
   14e88:	beq	14ea8 <argp_parse@@Base+0x28f8>
   14e8c:	mov	r2, r7
   14e90:	mov	r1, r6
   14e94:	ldr	r0, [r4, #28]
   14e98:	bl	110a8 <memcpy@plt>
   14e9c:	ldr	r3, [r4, #28]
   14ea0:	add	r3, r3, r7
   14ea4:	str	r3, [r4, #28]
   14ea8:	ldr	r3, [r4, #28]
   14eac:	ldr	r2, [r4, #24]
   14eb0:	sub	r3, r3, r2
   14eb4:	ldr	r2, [r4, #16]
   14eb8:	cmp	r3, r2
   14ebc:	bhi	150c4 <argp_parse@@Base+0x2b14>
   14ec0:	ldr	r3, [r4, #20]
   14ec4:	bic	r3, r3, r3, asr #31
   14ec8:	ldr	r2, [r4, #4]
   14ecc:	cmp	r2, r3
   14ed0:	bcc	150d0 <argp_parse@@Base+0x2b20>
   14ed4:	cmp	r5, r6
   14ed8:	moveq	r5, #1
   14edc:	bne	15110 <argp_parse@@Base+0x2b60>
   14ee0:	cmp	r6, #0
   14ee4:	cmpne	r7, #0
   14ee8:	beq	14f00 <argp_parse@@Base+0x2950>
   14eec:	ldr	r3, [r8, #20]
   14ef0:	cmp	r3, #0
   14ef4:	beq	14f84 <argp_parse@@Base+0x29d4>
   14ef8:	mov	r0, r6
   14efc:	bl	13288 <argp_parse@@Base+0xcd8>
   14f00:	ldr	r3, [sp, #8]
   14f04:	cmp	r3, #0
   14f08:	beq	14f84 <argp_parse@@Base+0x29d4>
   14f0c:	ldr	r3, [r8, #20]
   14f10:	cmp	r3, #0
   14f14:	beq	14f84 <argp_parse@@Base+0x29d4>
   14f18:	ldr	r2, [sp, #16]
   14f1c:	mov	r1, #0
   14f20:	mov	r0, #4
   14f24:	movt	r0, #512	; 0x200
   14f28:	blx	r3
   14f2c:	subs	r6, r0, #0
   14f30:	beq	14f84 <argp_parse@@Base+0x29d4>
   14f34:	orrs	r3, fp, r5
   14f38:	bne	15128 <argp_parse@@Base+0x2b78>
   14f3c:	mov	r0, r6
   14f40:	bl	111bc <strlen@plt>
   14f44:	subs	r5, r0, #0
   14f48:	bne	15168 <argp_parse@@Base+0x2bb8>
   14f4c:	mov	r0, r6
   14f50:	bl	13288 <argp_parse@@Base+0xcd8>
   14f54:	ldr	r3, [r4, #28]
   14f58:	ldr	r2, [r4, #24]
   14f5c:	sub	r3, r3, r2
   14f60:	ldr	r2, [r4, #16]
   14f64:	cmp	r3, r2
   14f68:	bhi	151b0 <argp_parse@@Base+0x2c00>
   14f6c:	ldr	r3, [r4, #20]
   14f70:	bic	r3, r3, r3, asr #31
   14f74:	ldr	r2, [r4, #4]
   14f78:	cmp	r2, r3
   14f7c:	movcs	r5, #1
   14f80:	bcc	151bc <argp_parse@@Base+0x2c0c>
   14f84:	cmp	r9, #0
   14f88:	beq	14ff4 <argp_parse@@Base+0x2a44>
   14f8c:	ldr	r0, [r9]
   14f90:	cmp	r0, #0
   14f94:	beq	14ff4 <argp_parse@@Base+0x2a44>
   14f98:	clz	r6, sl
   14f9c:	lsr	r6, r6, #5
   14fa0:	cmp	sl, #0
   14fa4:	cmpne	r5, #0
   14fa8:	bne	14ff4 <argp_parse@@Base+0x2a44>
   14fac:	orrs	r3, fp, r5
   14fb0:	str	r4, [sp, #4]
   14fb4:	str	sl, [sp]
   14fb8:	movne	r3, #1
   14fbc:	moveq	r3, #0
   14fc0:	ldr	r2, [sp, #8]
   14fc4:	ldr	r1, [sp, #12]
   14fc8:	bl	14d4c <argp_parse@@Base+0x279c>
   14fcc:	orr	r5, r5, r0
   14fd0:	ldr	r0, [r9, #16]
   14fd4:	cmp	r0, #0
   14fd8:	beq	14ff4 <argp_parse@@Base+0x2a44>
   14fdc:	add	r9, r9, #16
   14fe0:	cmp	r5, #0
   14fe4:	movne	r3, r6
   14fe8:	moveq	r3, #1
   14fec:	cmp	r3, #0
   14ff0:	bne	14fac <argp_parse@@Base+0x29fc>
   14ff4:	mov	r0, r5
   14ff8:	add	sp, sp, #28
   14ffc:	ldrd	r4, [sp]
   15000:	ldrd	r6, [sp, #8]
   15004:	ldrd	r8, [sp, #16]
   15008:	ldrd	sl, [sp, #24]
   1500c:	add	sp, sp, #32
   15010:	pop	{pc}		; (ldr pc, [sp], #4)
   15014:	mov	r5, r6
   15018:	mov	r3, #0
   1501c:	str	r3, [sp, #16]
   15020:	b	14e40 <argp_parse@@Base+0x2890>
   15024:	ldr	r2, [r4, #28]
   15028:	ldr	r3, [r4, #32]
   1502c:	cmp	r2, r3
   15030:	bcs	1504c <argp_parse@@Base+0x2a9c>
   15034:	ldr	r3, [r4, #28]
   15038:	add	r2, r3, #1
   1503c:	str	r2, [r4, #28]
   15040:	mov	r2, #10
   15044:	strb	r2, [r3]
   15048:	b	14e48 <argp_parse@@Base+0x2898>
   1504c:	mov	r1, #1
   15050:	mov	r0, r4
   15054:	bl	18658 <argp_error@@Base+0x1450>
   15058:	cmp	r0, #0
   1505c:	bne	15034 <argp_parse@@Base+0x2a84>
   15060:	b	14e48 <argp_parse@@Base+0x2898>
   15064:	mov	r0, r5
   15068:	bl	111bc <strlen@plt>
   1506c:	subs	r3, r0, #0
   15070:	str	r3, [sp, #20]
   15074:	beq	14ea8 <argp_parse@@Base+0x28f8>
   15078:	ldr	r3, [r4, #28]
   1507c:	mov	r1, r0
   15080:	add	r3, r3, r0
   15084:	ldr	r2, [r4, #32]
   15088:	cmp	r2, r3
   1508c:	bcs	150a0 <argp_parse@@Base+0x2af0>
   15090:	mov	r0, r4
   15094:	bl	18658 <argp_error@@Base+0x1450>
   15098:	cmp	r0, #0
   1509c:	beq	14ea8 <argp_parse@@Base+0x28f8>
   150a0:	ldr	r2, [sp, #20]
   150a4:	mov	r1, r5
   150a8:	ldr	r0, [r4, #28]
   150ac:	bl	110a8 <memcpy@plt>
   150b0:	ldr	r3, [r4, #28]
   150b4:	ldr	r2, [sp, #20]
   150b8:	add	r3, r3, r2
   150bc:	str	r3, [r4, #28]
   150c0:	b	14ea8 <argp_parse@@Base+0x28f8>
   150c4:	mov	r0, r4
   150c8:	bl	180e0 <argp_error@@Base+0xed8>
   150cc:	b	14ec0 <argp_parse@@Base+0x2910>
   150d0:	ldr	r2, [r4, #28]
   150d4:	ldr	r3, [r4, #32]
   150d8:	cmp	r2, r3
   150dc:	bcs	150f8 <argp_parse@@Base+0x2b48>
   150e0:	ldr	r3, [r4, #28]
   150e4:	add	r2, r3, #1
   150e8:	str	r2, [r4, #28]
   150ec:	mov	r2, #10
   150f0:	strb	r2, [r3]
   150f4:	b	14ed4 <argp_parse@@Base+0x2924>
   150f8:	mov	r1, #1
   150fc:	mov	r0, r4
   15100:	bl	18658 <argp_error@@Base+0x1450>
   15104:	cmp	r0, #0
   15108:	bne	150e0 <argp_parse@@Base+0x2b30>
   1510c:	b	14ed4 <argp_parse@@Base+0x2924>
   15110:	mov	r0, r5
   15114:	bl	13288 <argp_parse@@Base+0xcd8>
   15118:	mov	r5, #1
   1511c:	b	14ee0 <argp_parse@@Base+0x2930>
   15120:	mov	r5, #0
   15124:	b	14ee0 <argp_parse@@Base+0x2930>
   15128:	ldr	r2, [r4, #28]
   1512c:	ldr	r3, [r4, #32]
   15130:	cmp	r2, r3
   15134:	bcs	15150 <argp_parse@@Base+0x2ba0>
   15138:	ldr	r3, [r4, #28]
   1513c:	add	r2, r3, #1
   15140:	str	r2, [r4, #28]
   15144:	mov	r2, #10
   15148:	strb	r2, [r3]
   1514c:	b	14f3c <argp_parse@@Base+0x298c>
   15150:	mov	r1, #1
   15154:	mov	r0, r4
   15158:	bl	18658 <argp_error@@Base+0x1450>
   1515c:	cmp	r0, #0
   15160:	bne	15138 <argp_parse@@Base+0x2b88>
   15164:	b	14f3c <argp_parse@@Base+0x298c>
   15168:	ldr	r3, [r4, #28]
   1516c:	add	r3, r3, r5
   15170:	ldr	r2, [r4, #32]
   15174:	cmp	r2, r3
   15178:	bcs	15190 <argp_parse@@Base+0x2be0>
   1517c:	mov	r1, r5
   15180:	mov	r0, r4
   15184:	bl	18658 <argp_error@@Base+0x1450>
   15188:	cmp	r0, #0
   1518c:	beq	14f4c <argp_parse@@Base+0x299c>
   15190:	mov	r2, r5
   15194:	mov	r1, r6
   15198:	ldr	r0, [r4, #28]
   1519c:	bl	110a8 <memcpy@plt>
   151a0:	ldr	r3, [r4, #28]
   151a4:	add	r5, r3, r5
   151a8:	str	r5, [r4, #28]
   151ac:	b	14f4c <argp_parse@@Base+0x299c>
   151b0:	mov	r0, r4
   151b4:	bl	180e0 <argp_error@@Base+0xed8>
   151b8:	b	14f6c <argp_parse@@Base+0x29bc>
   151bc:	ldr	r2, [r4, #28]
   151c0:	ldr	r3, [r4, #32]
   151c4:	cmp	r2, r3
   151c8:	bcs	151e8 <argp_parse@@Base+0x2c38>
   151cc:	ldr	r3, [r4, #28]
   151d0:	add	r2, r3, #1
   151d4:	str	r2, [r4, #28]
   151d8:	mov	r2, #10
   151dc:	strb	r2, [r3]
   151e0:	mov	r5, #1
   151e4:	b	14f84 <argp_parse@@Base+0x29d4>
   151e8:	mov	r1, #1
   151ec:	mov	r0, r4
   151f0:	bl	18658 <argp_error@@Base+0x1450>
   151f4:	cmp	r0, #0
   151f8:	bne	151cc <argp_parse@@Base+0x2c1c>
   151fc:	mov	r5, #1
   15200:	b	14f84 <argp_parse@@Base+0x29d4>
   15204:	ldr	r3, [r0, #20]
   15208:	cmp	r3, #0
   1520c:	moveq	r5, r6
   15210:	beq	15258 <argp_parse@@Base+0x2ca8>
   15214:	ldr	r1, [sp, #12]
   15218:	mov	r0, r8
   1521c:	bl	13104 <argp_parse@@Base+0xb54>
   15220:	str	r0, [sp, #16]
   15224:	ldr	r3, [r8, #20]
   15228:	mov	r7, #0
   1522c:	mov	r0, #2
   15230:	movt	r0, #512	; 0x200
   15234:	mov	r2, #1
   15238:	movt	r2, #512	; 0x200
   1523c:	ldr	r1, [sp, #8]
   15240:	cmp	r1, r7
   15244:	moveq	r0, r2
   15248:	b	14e2c <argp_parse@@Base+0x287c>
   1524c:	mov	r6, r0
   15250:	b	14db0 <argp_parse@@Base+0x2800>
   15254:	mov	r5, r6
   15258:	cmp	r5, #0
   1525c:	streq	r5, [sp, #16]
   15260:	beq	14f00 <argp_parse@@Base+0x2950>
   15264:	mov	r7, #0
   15268:	str	r7, [sp, #16]
   1526c:	b	14e40 <argp_parse@@Base+0x2890>
   15270:	ldr	r3, [r8, #20]
   15274:	cmp	r3, #0
   15278:	moveq	r5, r6
   1527c:	beq	15258 <argp_parse@@Base+0x2ca8>
   15280:	ldr	r1, [sp, #12]
   15284:	mov	r0, r8
   15288:	bl	13104 <argp_parse@@Base+0xb54>
   1528c:	str	r0, [sp, #16]
   15290:	ldr	r3, [r8, #20]
   15294:	mov	r7, #0
   15298:	mov	r0, #1
   1529c:	movt	r0, #512	; 0x200
   152a0:	b	14e2c <argp_parse@@Base+0x287c>
   152a4:	ldr	r3, [r0, #12]
   152a8:	ldr	r2, [r1, #12]
   152ac:	cmp	r3, r2
   152b0:	beq	15320 <argp_parse@@Base+0x2d70>
   152b4:	strd	r4, [sp, #-16]!
   152b8:	str	r6, [sp, #8]
   152bc:	str	lr, [sp, #12]
   152c0:	mov	r5, r1
   152c4:	mov	r4, r0
   152c8:	mov	r1, r2
   152cc:	mov	r0, r3
   152d0:	bl	152a4 <argp_parse@@Base+0x2cf4>
   152d4:	subs	r3, r0, #0
   152d8:	bne	1530c <argp_parse@@Base+0x2d5c>
   152dc:	ldr	r0, [r4, #8]
   152e0:	ldr	r3, [r5, #8]
   152e4:	mvn	r2, r3
   152e8:	lsr	r2, r2, #31
   152ec:	cmp	r2, r0, lsr #31
   152f0:	subne	r3, r0, r3
   152f4:	subeq	r3, r3, r0
   152f8:	cmp	r3, #0
   152fc:	bne	1530c <argp_parse@@Base+0x2d5c>
   15300:	ldr	r3, [r5, #4]
   15304:	ldr	r0, [r4, #4]
   15308:	sub	r3, r3, r0
   1530c:	mov	r0, r3
   15310:	ldrd	r4, [sp]
   15314:	ldr	r6, [sp, #8]
   15318:	add	sp, sp, #12
   1531c:	pop	{pc}		; (ldr pc, [sp], #4)
   15320:	ldr	r2, [r0, #8]
   15324:	ldr	r3, [r1, #8]
   15328:	mvn	ip, r3
   1532c:	lsr	ip, ip, #31
   15330:	cmp	ip, r2, lsr #31
   15334:	subne	r3, r2, r3
   15338:	subeq	r3, r3, r2
   1533c:	cmp	r3, #0
   15340:	bne	15350 <argp_parse@@Base+0x2da0>
   15344:	ldr	r3, [r1, #4]
   15348:	ldr	r0, [r0, #4]
   1534c:	sub	r3, r3, r0
   15350:	mov	r0, r3
   15354:	bx	lr
   15358:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1535c:	strd	r6, [sp, #8]
   15360:	str	r8, [sp, #16]
   15364:	str	lr, [sp, #20]
   15368:	sub	sp, sp, #8
   1536c:	ldr	lr, [r0, #16]
   15370:	cmp	lr, #0
   15374:	movne	r3, lr
   15378:	bne	15388 <argp_parse@@Base+0x2dd8>
   1537c:	ldr	ip, [r0, #12]
   15380:	b	15398 <argp_parse@@Base+0x2de8>
   15384:	mov	r3, r2
   15388:	ldr	r2, [r3, #12]
   1538c:	cmp	r2, #0
   15390:	bne	15384 <argp_parse@@Base+0x2dd4>
   15394:	ldr	ip, [r3, #8]
   15398:	ldr	r5, [r1, #16]
   1539c:	cmp	r5, #0
   153a0:	movne	r3, r5
   153a4:	bne	153b4 <argp_parse@@Base+0x2e04>
   153a8:	ldr	r4, [r1, #12]
   153ac:	b	153c4 <argp_parse@@Base+0x2e14>
   153b0:	mov	r3, r2
   153b4:	ldr	r2, [r3, #12]
   153b8:	cmp	r2, #0
   153bc:	bne	153b0 <argp_parse@@Base+0x2e00>
   153c0:	ldr	r4, [r3, #8]
   153c4:	mvn	r3, r4
   153c8:	lsr	r3, r3, #31
   153cc:	cmp	r3, ip, lsr #31
   153d0:	subne	r4, ip, r4
   153d4:	subeq	r4, r4, ip
   153d8:	cmp	r4, #0
   153dc:	bne	1551c <argp_parse@@Base+0x2f6c>
   153e0:	adds	r4, r5, #0
   153e4:	movne	r4, #1
   153e8:	cmp	lr, #0
   153ec:	rsbeq	r4, r4, #0
   153f0:	rsbne	r4, r4, #1
   153f4:	cmp	r4, #0
   153f8:	bne	1551c <argp_parse@@Base+0x2f6c>
   153fc:	mov	r7, r1
   15400:	mov	r6, r0
   15404:	cmp	lr, #0
   15408:	beq	15488 <argp_parse@@Base+0x2ed8>
   1540c:	ldr	r1, [lr, #20]
   15410:	ldr	r2, [r5, #20]
   15414:	cmp	r1, r2
   15418:	ble	15444 <argp_parse@@Base+0x2e94>
   1541c:	ldr	lr, [lr, #12]
   15420:	ldr	r3, [lr, #20]
   15424:	cmp	r2, r3
   15428:	blt	1541c <argp_parse@@Base+0x2e6c>
   1542c:	mov	r1, r5
   15430:	mov	r0, lr
   15434:	bl	152a4 <argp_parse@@Base+0x2cf4>
   15438:	subs	r4, r0, #0
   1543c:	moveq	r4, #1
   15440:	b	1551c <argp_parse@@Base+0x2f6c>
   15444:	cmp	r1, r2
   15448:	bge	15474 <argp_parse@@Base+0x2ec4>
   1544c:	ldr	r5, [r5, #12]
   15450:	ldr	r3, [r5, #20]
   15454:	cmp	r1, r3
   15458:	blt	1544c <argp_parse@@Base+0x2e9c>
   1545c:	mov	r1, r5
   15460:	mov	r0, lr
   15464:	bl	152a4 <argp_parse@@Base+0x2cf4>
   15468:	subs	r4, r0, #0
   1546c:	mvneq	r4, #0
   15470:	b	1551c <argp_parse@@Base+0x2f6c>
   15474:	mov	r1, r5
   15478:	mov	r0, lr
   1547c:	bl	152a4 <argp_parse@@Base+0x2cf4>
   15480:	subs	r4, r0, #0
   15484:	bne	1551c <argp_parse@@Base+0x2f6c>
   15488:	ldr	r3, [r6, #12]
   1548c:	ldr	r4, [r7, #12]
   15490:	mvn	r2, r4
   15494:	lsr	r2, r2, #31
   15498:	cmp	r2, r3, lsr #31
   1549c:	subne	r4, r3, r4
   154a0:	subeq	r4, r4, r3
   154a4:	cmp	r4, #0
   154a8:	bne	1551c <argp_parse@@Base+0x2f6c>
   154ac:	mov	r0, r6
   154b0:	bl	13f1c <argp_parse@@Base+0x196c>
   154b4:	mov	r5, r0
   154b8:	str	r0, [sp]
   154bc:	mov	r0, r7
   154c0:	bl	13f1c <argp_parse@@Base+0x196c>
   154c4:	str	r0, [sp, #4]
   154c8:	ldr	r3, [r6]
   154cc:	ldr	r0, [r3, #12]
   154d0:	ubfx	r0, r0, #3, #1
   154d4:	cmp	r5, #0
   154d8:	moveq	r0, #0
   154dc:	cmp	r0, #0
   154e0:	bne	15538 <argp_parse@@Base+0x2f88>
   154e4:	ldr	r3, [r7]
   154e8:	ldr	r3, [r3, #12]
   154ec:	tst	r3, #8
   154f0:	beq	15570 <argp_parse@@Base+0x2fc0>
   154f4:	ldr	r3, [sp, #4]
   154f8:	cmp	r3, #0
   154fc:	beq	15570 <argp_parse@@Base+0x2fc0>
   15500:	add	r0, sp, #4
   15504:	bl	13fb8 <argp_parse@@Base+0x1a08>
   15508:	adds	r3, r0, #0
   1550c:	movne	r3, #1
   15510:	mov	r0, r4
   15514:	subs	r4, r0, r3
   15518:	beq	15570 <argp_parse@@Base+0x2fc0>
   1551c:	mov	r0, r4
   15520:	add	sp, sp, #8
   15524:	ldrd	r4, [sp]
   15528:	ldrd	r6, [sp, #8]
   1552c:	ldr	r8, [sp, #16]
   15530:	add	sp, sp, #20
   15534:	pop	{pc}		; (ldr pc, [sp], #4)
   15538:	mov	r0, sp
   1553c:	bl	13fb8 <argp_parse@@Base+0x1a08>
   15540:	adds	r0, r0, #0
   15544:	movne	r0, #1
   15548:	ldr	r3, [r7]
   1554c:	ldr	r3, [r3, #12]
   15550:	ands	r3, r3, #8
   15554:	beq	15514 <argp_parse@@Base+0x2f64>
   15558:	ldr	r3, [sp, #4]
   1555c:	cmp	r3, #0
   15560:	moveq	r3, r4
   15564:	beq	15514 <argp_parse@@Base+0x2f64>
   15568:	mov	r4, r0
   1556c:	b	15500 <argp_parse@@Base+0x2f50>
   15570:	ldr	r2, [r6, #20]
   15574:	movw	r4, #17856	; 0x45c0
   15578:	movt	r4, #1
   1557c:	mov	r3, #0
   15580:	ldr	r2, [r2, #24]
   15584:	mov	r1, r4
   15588:	mov	r0, r6
   1558c:	bl	14228 <argp_parse@@Base+0x1c78>
   15590:	mov	r5, r0
   15594:	uxtb	r8, r0
   15598:	ldr	r2, [r7, #20]
   1559c:	mov	r3, #0
   155a0:	ldr	r2, [r2, #24]
   155a4:	mov	r1, r4
   155a8:	mov	r0, r7
   155ac:	bl	14228 <argp_parse@@Base+0x1c78>
   155b0:	uxtb	r7, r0
   155b4:	cmp	r8, #0
   155b8:	movne	r5, r8
   155bc:	bne	155d0 <argp_parse@@Base+0x3020>
   155c0:	ldr	r3, [sp]
   155c4:	cmp	r3, #0
   155c8:	ldrbne	r5, [r3]
   155cc:	moveq	r5, #0
   155d0:	cmp	r7, #0
   155d4:	uxtbne	r6, r0
   155d8:	bne	155ec <argp_parse@@Base+0x303c>
   155dc:	ldr	r3, [sp, #4]
   155e0:	cmp	r3, #0
   155e4:	ldrbne	r6, [r3]
   155e8:	moveq	r6, #0
   155ec:	bl	1115c <__ctype_tolower_loc@plt>
   155f0:	ldr	r3, [r0]
   155f4:	ldr	r4, [r3, r5, lsl #2]
   155f8:	ldr	r3, [r3, r6, lsl #2]
   155fc:	subs	r4, r4, r3
   15600:	bne	1551c <argp_parse@@Base+0x2f6c>
   15604:	subs	r4, r6, r5
   15608:	bne	1551c <argp_parse@@Base+0x2f6c>
   1560c:	adds	r4, r7, #0
   15610:	movne	r4, #1
   15614:	cmp	r8, #0
   15618:	rsbeq	r4, r4, #0
   1561c:	rsbne	r4, r4, #1
   15620:	cmp	r4, #0
   15624:	bne	1551c <argp_parse@@Base+0x2f6c>
   15628:	cmp	r8, #0
   1562c:	bne	1551c <argp_parse@@Base+0x2f6c>
   15630:	ldr	r0, [sp]
   15634:	ldr	r1, [sp, #4]
   15638:	adds	r4, r1, #0
   1563c:	movne	r4, #1
   15640:	cmp	r0, #0
   15644:	rsbeq	r4, r4, #0
   15648:	rsbne	r4, r4, #1
   1564c:	cmp	r4, #0
   15650:	bne	1551c <argp_parse@@Base+0x2f6c>
   15654:	cmp	r0, #0
   15658:	beq	1551c <argp_parse@@Base+0x2f6c>
   1565c:	bl	110f0 <strcasecmp@plt>
   15660:	mov	r4, r0
   15664:	b	1551c <argp_parse@@Base+0x2f6c>
   15668:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1566c:	strd	r6, [sp, #8]
   15670:	strd	r8, [sp, #16]
   15674:	strd	sl, [sp, #24]
   15678:	str	lr, [sp, #32]
   1567c:	sub	sp, sp, #52	; 0x34
   15680:	str	r0, [sp, #12]
   15684:	str	r1, [sp, #4]
   15688:	ldr	fp, [r0, #16]
   1568c:	ldr	r4, [r0]
   15690:	mov	r0, #16
   15694:	bl	13e84 <argp_parse@@Base+0x18d4>
   15698:	subs	sl, r0, #0
   1569c:	beq	156cc <argp_parse@@Base+0x311c>
   156a0:	mov	r3, #0
   156a4:	str	r3, [sl, #4]
   156a8:	str	r3, [sl, #12]
   156ac:	cmp	r4, r3
   156b0:	beq	158d8 <argp_parse@@Base+0x3328>
   156b4:	ldr	r3, [r4, #12]
   156b8:	tst	r3, #4
   156bc:	bne	156ec <argp_parse@@Base+0x313c>
   156c0:	add	r5, r4, #24
   156c4:	mov	r6, #0
   156c8:	b	15710 <argp_parse@@Base+0x3160>
   156cc:	movw	r3, #37884	; 0x93fc
   156d0:	movt	r3, #1
   156d4:	movw	r2, #450	; 0x1c2
   156d8:	movw	r1, #38124	; 0x94ec
   156dc:	movt	r1, #1
   156e0:	movw	r0, #38136	; 0x94f8
   156e4:	movt	r0, #1
   156e8:	bl	112f4 <__assert_fail@plt>
   156ec:	movw	r3, #37884	; 0x93fc
   156f0:	movt	r3, #1
   156f4:	mov	r2, #460	; 0x1cc
   156f8:	movw	r1, #38124	; 0x94ec
   156fc:	movt	r1, #1
   15700:	movw	r0, #38140	; 0x94fc
   15704:	movt	r0, #1
   15708:	bl	112f4 <__assert_fail@plt>
   1570c:	add	r5, r5, #24
   15710:	mov	r3, r5
   15714:	ldr	r2, [r5, #-20]	; 0xffffffec
   15718:	cmp	r2, #0
   1571c:	bne	1572c <argp_parse@@Base+0x317c>
   15720:	ldr	r2, [r5, #-24]	; 0xffffffe8
   15724:	cmp	r2, #0
   15728:	beq	1577c <argp_parse@@Base+0x31cc>
   1572c:	ldr	r2, [r3, #-12]
   15730:	tst	r2, #4
   15734:	bne	15744 <argp_parse@@Base+0x3194>
   15738:	ldr	r2, [sl, #4]
   1573c:	add	r2, r2, #1
   15740:	str	r2, [sl, #4]
   15744:	ldr	r2, [r3, #-12]
   15748:	tst	r2, #8
   1574c:	bne	1570c <argp_parse@@Base+0x315c>
   15750:	ldr	r7, [r3, #-20]	; 0xffffffec
   15754:	sub	r3, r7, #1
   15758:	cmp	r3, #254	; 0xfe
   1575c:	bhi	1570c <argp_parse@@Base+0x315c>
   15760:	bl	1118c <__ctype_b_loc@plt>
   15764:	ldr	r3, [r0]
   15768:	lsl	r7, r7, #1
   1576c:	ldrh	r3, [r3, r7]
   15770:	tst	r3, #16384	; 0x4000
   15774:	addne	r6, r6, #1
   15778:	b	1570c <argp_parse@@Base+0x315c>
   1577c:	ldr	r2, [r5, #-8]
   15780:	cmp	r2, #0
   15784:	bne	1572c <argp_parse@@Base+0x317c>
   15788:	ldr	r9, [r5, #-4]
   1578c:	cmp	r9, #0
   15790:	bne	1572c <argp_parse@@Base+0x317c>
   15794:	ldr	r0, [sl, #4]
   15798:	rsb	r0, r0, r0, lsl #3
   1579c:	lsl	r0, r0, #2
   157a0:	bl	13e84 <argp_parse@@Base+0x18d4>
   157a4:	str	r0, [sl]
   157a8:	add	r0, r6, #1
   157ac:	bl	13e84 <argp_parse@@Base+0x18d4>
   157b0:	mov	r5, r0
   157b4:	str	r0, [sl, #8]
   157b8:	ldr	r7, [sl]
   157bc:	cmp	r0, #0
   157c0:	cmpne	r7, #0
   157c4:	beq	157ec <argp_parse@@Base+0x323c>
   157c8:	movw	r3, #37449	; 0x9249
   157cc:	movt	r3, #2340	; 0x924
   157d0:	ldr	r2, [sl, #4]
   157d4:	cmp	r2, r3
   157d8:	bhi	1580c <argp_parse@@Base+0x325c>
   157dc:	add	r7, r7, #28
   157e0:	str	fp, [sp, #8]
   157e4:	ldr	fp, [sp, #12]
   157e8:	b	15858 <argp_parse@@Base+0x32a8>
   157ec:	movw	r3, #37884	; 0x93fc
   157f0:	movt	r3, #1
   157f4:	movw	r2, #474	; 0x1da
   157f8:	movw	r1, #38124	; 0x94ec
   157fc:	movt	r1, #1
   15800:	movw	r0, #38156	; 0x950c
   15804:	movt	r0, #1
   15808:	bl	112f4 <__assert_fail@plt>
   1580c:	movw	r3, #37884	; 0x93fc
   15810:	movt	r3, #1
   15814:	mov	r2, #476	; 0x1dc
   15818:	movw	r1, #38124	; 0x94ec
   1581c:	movt	r1, #1
   15820:	movw	r0, #38192	; 0x9530
   15824:	movt	r0, #1
   15828:	bl	112f4 <__assert_fail@plt>
   1582c:	ldr	r3, [r4, #4]
   15830:	cmp	r3, #0
   15834:	addeq	r9, r9, #1
   15838:	b	158a0 <argp_parse@@Base+0x32f0>
   1583c:	ldr	r3, [r4, #16]
   15840:	cmp	r3, #0
   15844:	bne	15c78 <argp_parse@@Base+0x36c8>
   15848:	ldr	r3, [r4, #20]
   1584c:	cmp	r3, #0
   15850:	bne	15c78 <argp_parse@@Base+0x36c8>
   15854:	add	r7, r7, #28
   15858:	ldr	r3, [r4, #4]
   1585c:	cmp	r3, #0
   15860:	bne	15870 <argp_parse@@Base+0x32c0>
   15864:	ldr	r3, [r4]
   15868:	cmp	r3, #0
   1586c:	beq	158b4 <argp_parse@@Base+0x3304>
   15870:	mov	r8, r7
   15874:	str	r4, [r7, #-28]	; 0xffffffe4
   15878:	mov	r3, #0
   1587c:	str	r3, [r7, #-24]	; 0xffffffe8
   15880:	str	r5, [r7, #-20]	; 0xffffffec
   15884:	ldr	r3, [r4, #20]
   15888:	cmp	r3, #0
   1588c:	movne	r9, r3
   15890:	bne	158a0 <argp_parse@@Base+0x32f0>
   15894:	ldr	r3, [r4]
   15898:	cmp	r3, #0
   1589c:	beq	1582c <argp_parse@@Base+0x327c>
   158a0:	str	r9, [r8, #-16]
   158a4:	ldr	r3, [sp, #4]
   158a8:	str	r3, [r8, #-12]
   158ac:	str	fp, [r8, #-8]
   158b0:	b	15c84 <argp_parse@@Base+0x36d4>
   158b4:	ldr	r3, [r4, #16]
   158b8:	cmp	r3, #0
   158bc:	bne	15870 <argp_parse@@Base+0x32c0>
   158c0:	ldr	r3, [r4, #20]
   158c4:	cmp	r3, #0
   158c8:	bne	15870 <argp_parse@@Base+0x32c0>
   158cc:	ldr	fp, [sp, #8]
   158d0:	mov	r3, #0
   158d4:	strb	r3, [r5]
   158d8:	cmp	fp, #0
   158dc:	beq	15cfc <argp_parse@@Base+0x374c>
   158e0:	ldr	r3, [fp]
   158e4:	cmp	r3, #0
   158e8:	beq	15cfc <argp_parse@@Base+0x374c>
   158ec:	movw	r3, #37449	; 0x9249
   158f0:	movt	r3, #2340	; 0x924
   158f4:	str	r3, [sp, #32]
   158f8:	b	1596c <argp_parse@@Base+0x33bc>
   158fc:	ldr	r1, [sp, #4]
   15900:	b	159e4 <argp_parse@@Base+0x3434>
   15904:	mov	r3, r2
   15908:	ldr	r2, [r3, #24]
   1590c:	cmp	r2, #0
   15910:	bne	15904 <argp_parse@@Base+0x3354>
   15914:	add	r3, r3, #24
   15918:	ldr	r2, [r5, #12]
   1591c:	str	r2, [r3]
   15920:	mov	r1, #0
   15924:	str	r1, [r5, #12]
   15928:	ldr	r3, [r5, #4]
   1592c:	cmp	r3, r1
   15930:	beq	15958 <argp_parse@@Base+0x33a8>
   15934:	ldr	r2, [sl, #4]
   15938:	cmp	r2, r1
   1593c:	bne	15a04 <argp_parse@@Base+0x3454>
   15940:	str	r3, [sl, #4]
   15944:	ldr	r3, [r5]
   15948:	str	r3, [sl]
   1594c:	ldr	r3, [r5, #8]
   15950:	str	r3, [sl, #8]
   15954:	str	r1, [r5, #4]
   15958:	mov	r0, r5
   1595c:	bl	14040 <argp_parse@@Base+0x1a90>
   15960:	ldr	r3, [fp, #16]!
   15964:	cmp	r3, #0
   15968:	beq	15cfc <argp_parse@@Base+0x374c>
   1596c:	mov	r5, fp
   15970:	ldr	r6, [fp, #12]
   15974:	cmp	r6, #0
   15978:	bne	15988 <argp_parse@@Base+0x33d8>
   1597c:	ldr	r3, [fp, #8]
   15980:	cmp	r3, #0
   15984:	beq	158fc <argp_parse@@Base+0x334c>
   15988:	ldr	r7, [r5, #8]
   1598c:	ldr	r8, [sp, #12]
   15990:	ldr	r4, [r8, #16]
   15994:	mov	r0, #28
   15998:	bl	13e84 <argp_parse@@Base+0x18d4>
   1599c:	subs	r1, r0, #0
   159a0:	beq	159e4 <argp_parse@@Base+0x3434>
   159a4:	str	r6, [r1, #8]
   159a8:	str	r7, [r1]
   159ac:	sub	r4, r5, r4
   159b0:	asr	r4, r4, #4
   159b4:	str	r4, [r1, #4]
   159b8:	ldr	r3, [sp, #4]
   159bc:	str	r3, [r1, #12]
   159c0:	str	r8, [r1, #16]
   159c4:	cmp	r3, #0
   159c8:	ldrne	r3, [r3, #20]
   159cc:	addne	r3, r3, #1
   159d0:	moveq	r3, #0
   159d4:	str	r3, [r1, #20]
   159d8:	ldr	r3, [sl, #12]
   159dc:	str	r3, [r1, #24]
   159e0:	str	r1, [sl, #12]
   159e4:	ldr	r0, [r5]
   159e8:	bl	15668 <argp_parse@@Base+0x30b8>
   159ec:	mov	r5, r0
   159f0:	ldr	r3, [sl, #12]
   159f4:	cmp	r3, #0
   159f8:	bne	15908 <argp_parse@@Base+0x3358>
   159fc:	add	r3, sl, #12
   15a00:	b	15918 <argp_parse@@Base+0x3368>
   15a04:	add	r3, r3, r2
   15a08:	str	r3, [sp, #24]
   15a0c:	rsb	r0, r3, r3, lsl #3
   15a10:	lsl	r0, r0, #2
   15a14:	bl	13e84 <argp_parse@@Base+0x18d4>
   15a18:	mov	r4, r0
   15a1c:	str	r0, [sp, #20]
   15a20:	ldr	r0, [sl, #8]
   15a24:	bl	111bc <strlen@plt>
   15a28:	mov	r7, r0
   15a2c:	ldr	r0, [r5, #8]
   15a30:	bl	111bc <strlen@plt>
   15a34:	add	r0, r7, r0
   15a38:	add	r0, r0, #1
   15a3c:	bl	13e84 <argp_parse@@Base+0x18d4>
   15a40:	mov	r9, r0
   15a44:	cmp	r4, #0
   15a48:	cmpne	r0, #0
   15a4c:	beq	15b18 <argp_parse@@Base+0x3568>
   15a50:	ldr	r3, [sp, #24]
   15a54:	ldr	r2, [sp, #32]
   15a58:	cmp	r3, r2
   15a5c:	bhi	15b34 <argp_parse@@Base+0x3584>
   15a60:	ldr	r1, [sl]
   15a64:	str	r1, [sp, #28]
   15a68:	ldr	r4, [sl, #4]
   15a6c:	rsb	r8, r4, r4, lsl #3
   15a70:	lsl	r8, r8, #2
   15a74:	mov	r2, r8
   15a78:	ldr	r0, [sp, #20]
   15a7c:	bl	11180 <mempcpy@plt>
   15a80:	ldr	r3, [r5, #4]
   15a84:	str	r3, [sp, #16]
   15a88:	rsb	r2, r3, r3, lsl #3
   15a8c:	lsl	r2, r2, #2
   15a90:	ldr	r1, [r5]
   15a94:	bl	110a8 <memcpy@plt>
   15a98:	ldr	r6, [sl, #8]
   15a9c:	mov	r2, r7
   15aa0:	mov	r1, r6
   15aa4:	mov	r0, r9
   15aa8:	bl	110a8 <memcpy@plt>
   15aac:	cmp	r4, #0
   15ab0:	beq	15b50 <argp_parse@@Base+0x35a0>
   15ab4:	ldr	r2, [sp, #20]
   15ab8:	ldr	r3, [r2, #8]
   15abc:	sub	r3, r3, r6
   15ac0:	add	r3, r9, r3
   15ac4:	str	r3, [r2, #8]
   15ac8:	add	r2, r2, #28
   15acc:	subs	r4, r4, #1
   15ad0:	bne	15ab8 <argp_parse@@Base+0x3508>
   15ad4:	ldr	r3, [sp, #20]
   15ad8:	add	r4, r3, r8
   15adc:	add	r3, r9, r7
   15ae0:	str	r3, [sp, #8]
   15ae4:	ldr	r1, [r5, #8]
   15ae8:	ldr	r8, [sp, #16]
   15aec:	cmp	r8, #0
   15af0:	beq	15bf4 <argp_parse@@Base+0x3644>
   15af4:	add	r4, r4, #28
   15af8:	sub	r2, r3, #1
   15afc:	str	r2, [sp, #16]
   15b00:	str	r5, [sp, #36]	; 0x24
   15b04:	str	fp, [sp, #40]	; 0x28
   15b08:	mov	fp, r3
   15b0c:	str	sl, [sp, #44]	; 0x2c
   15b10:	mov	sl, r1
   15b14:	b	15b9c <argp_parse@@Base+0x35ec>
   15b18:	ldr	r3, [pc, #508]	; 15d1c <argp_parse@@Base+0x376c>
   15b1c:	movw	r2, #970	; 0x3ca
   15b20:	movw	r1, #38124	; 0x94ec
   15b24:	movt	r1, #1
   15b28:	movw	r0, #38252	; 0x956c
   15b2c:	movt	r0, #1
   15b30:	bl	112f4 <__assert_fail@plt>
   15b34:	ldr	r3, [pc, #480]	; 15d1c <argp_parse@@Base+0x376c>
   15b38:	mov	r2, #972	; 0x3cc
   15b3c:	movw	r1, #38124	; 0x94ec
   15b40:	movt	r1, #1
   15b44:	movw	r0, #38280	; 0x9588
   15b48:	movt	r0, #1
   15b4c:	bl	112f4 <__assert_fail@plt>
   15b50:	ldr	r4, [sp, #20]
   15b54:	b	15adc <argp_parse@@Base+0x352c>
   15b58:	ldr	r2, [sp, #8]
   15b5c:	cmp	r9, r2
   15b60:	bcs	15bfc <argp_parse@@Base+0x364c>
   15b64:	ldrb	r2, [r9]
   15b68:	cmp	r2, r3
   15b6c:	beq	15c00 <argp_parse@@Base+0x3650>
   15b70:	mov	r2, r9
   15b74:	ldr	r1, [sp, #16]
   15b78:	cmp	r1, r2
   15b7c:	beq	15bfc <argp_parse@@Base+0x364c>
   15b80:	ldrb	r1, [r2, #1]!
   15b84:	cmp	r1, r3
   15b88:	bne	15b74 <argp_parse@@Base+0x35c4>
   15b8c:	b	15c00 <argp_parse@@Base+0x3650>
   15b90:	add	r4, r4, #28
   15b94:	subs	r8, r8, #1
   15b98:	beq	15bb4 <argp_parse@@Base+0x3604>
   15b9c:	str	fp, [r4, #-20]	; 0xffffffec
   15ba0:	ldr	r5, [r4, #-24]	; 0xffffffe8
   15ba4:	ldr	r6, [r4, #-28]	; 0xffffffe4
   15ba8:	cmp	r5, #0
   15bac:	bne	15c20 <argp_parse@@Base+0x3670>
   15bb0:	b	15b90 <argp_parse@@Base+0x35e0>
   15bb4:	ldr	r5, [sp, #36]	; 0x24
   15bb8:	mov	r3, fp
   15bbc:	ldr	fp, [sp, #40]	; 0x28
   15bc0:	ldr	sl, [sp, #44]	; 0x2c
   15bc4:	mov	r2, #0
   15bc8:	strb	r2, [r3]
   15bcc:	ldr	r0, [sp, #28]
   15bd0:	bl	13288 <argp_parse@@Base+0xcd8>
   15bd4:	ldr	r0, [sl, #8]
   15bd8:	bl	13288 <argp_parse@@Base+0xcd8>
   15bdc:	ldr	r3, [sp, #20]
   15be0:	str	r3, [sl]
   15be4:	ldr	r3, [sp, #24]
   15be8:	str	r3, [sl, #4]
   15bec:	str	r9, [sl, #8]
   15bf0:	b	15958 <argp_parse@@Base+0x33a8>
   15bf4:	ldr	r3, [sp, #8]
   15bf8:	b	15bc4 <argp_parse@@Base+0x3614>
   15bfc:	strb	r3, [fp], #1
   15c00:	add	sl, sl, #1
   15c04:	b	15c14 <argp_parse@@Base+0x3664>
   15c08:	ldrb	r3, [sl]
   15c0c:	cmp	r3, r7
   15c10:	beq	15b58 <argp_parse@@Base+0x35a8>
   15c14:	add	r6, r6, #24
   15c18:	subs	r5, r5, #1
   15c1c:	beq	15b90 <argp_parse@@Base+0x35e0>
   15c20:	ldr	r3, [r6, #12]
   15c24:	tst	r3, #8
   15c28:	bne	15c14 <argp_parse@@Base+0x3664>
   15c2c:	ldr	r7, [r6, #4]
   15c30:	sub	r3, r7, #1
   15c34:	cmp	r3, #254	; 0xfe
   15c38:	bhi	15c14 <argp_parse@@Base+0x3664>
   15c3c:	bl	1118c <__ctype_b_loc@plt>
   15c40:	ldr	r2, [r0]
   15c44:	lsl	r3, r7, #1
   15c48:	ldrh	r3, [r2, r3]
   15c4c:	tst	r3, #16384	; 0x4000
   15c50:	bne	15c08 <argp_parse@@Base+0x3658>
   15c54:	b	15c14 <argp_parse@@Base+0x3664>
   15c58:	strb	r6, [r5], #1
   15c5c:	add	r4, r4, #24
   15c60:	ldr	r3, [r4, #4]
   15c64:	cmp	r3, #0
   15c68:	bne	15c78 <argp_parse@@Base+0x36c8>
   15c6c:	ldr	r3, [r4]
   15c70:	cmp	r3, #0
   15c74:	beq	1583c <argp_parse@@Base+0x328c>
   15c78:	ldr	r3, [r4, #12]
   15c7c:	tst	r3, #4
   15c80:	beq	15854 <argp_parse@@Base+0x32a4>
   15c84:	ldr	r3, [r8, #-24]	; 0xffffffe8
   15c88:	add	r3, r3, #1
   15c8c:	str	r3, [r8, #-24]	; 0xffffffe8
   15c90:	ldr	r3, [r4, #12]
   15c94:	tst	r3, #8
   15c98:	bne	15c5c <argp_parse@@Base+0x36ac>
   15c9c:	ldr	r6, [r4, #4]
   15ca0:	sub	r3, r6, #1
   15ca4:	cmp	r3, #254	; 0xfe
   15ca8:	bhi	15c5c <argp_parse@@Base+0x36ac>
   15cac:	bl	1118c <__ctype_b_loc@plt>
   15cb0:	ldr	r2, [r0]
   15cb4:	lsl	r3, r6, #1
   15cb8:	ldrh	r3, [r2, r3]
   15cbc:	tst	r3, #16384	; 0x4000
   15cc0:	beq	15c5c <argp_parse@@Base+0x36ac>
   15cc4:	uxtb	r6, r6
   15cc8:	ldr	r3, [sl, #8]
   15ccc:	cmp	r3, r5
   15cd0:	bcs	15c58 <argp_parse@@Base+0x36a8>
   15cd4:	ldrb	r2, [r3]
   15cd8:	cmp	r2, r6
   15cdc:	beq	15c5c <argp_parse@@Base+0x36ac>
   15ce0:	sub	r2, r5, #1
   15ce4:	cmp	r3, r2
   15ce8:	beq	15c58 <argp_parse@@Base+0x36a8>
   15cec:	ldrb	r1, [r3, #1]!
   15cf0:	cmp	r1, r6
   15cf4:	bne	15ce4 <argp_parse@@Base+0x3734>
   15cf8:	b	15c5c <argp_parse@@Base+0x36ac>
   15cfc:	mov	r0, sl
   15d00:	add	sp, sp, #52	; 0x34
   15d04:	ldrd	r4, [sp]
   15d08:	ldrd	r6, [sp, #8]
   15d0c:	ldrd	r8, [sp, #16]
   15d10:	ldrd	sl, [sp, #24]
   15d14:	add	sp, sp, #32
   15d18:	pop	{pc}		; (ldr pc, [sp], #4)
   15d1c:	andeq	r9, r1, r8, lsl #8

00015d20 <argp_failure@@Base>:
   15d20:	push	{r3}		; (str r3, [sp, #-4]!)
   15d24:	strd	r4, [sp, #-20]!	; 0xffffffec
   15d28:	strd	r6, [sp, #8]
   15d2c:	str	lr, [sp, #16]
   15d30:	sub	sp, sp, #200	; 0xc8
   15d34:	mov	r7, r1
   15d38:	mov	r6, r2
   15d3c:	subs	r5, r0, #0
   15d40:	beq	15e9c <argp_failure@@Base+0x17c>
   15d44:	ldr	r3, [r5, #16]
   15d48:	tst	r3, #2
   15d4c:	bne	15e80 <argp_failure@@Base+0x160>
   15d50:	ldr	r4, [r5, #44]	; 0x2c
   15d54:	cmp	r4, #0
   15d58:	beq	15e80 <argp_failure@@Base+0x160>
   15d5c:	mov	r0, r4
   15d60:	bl	11270 <flockfile@plt>
   15d64:	ldr	r0, [r5, #40]	; 0x28
   15d68:	mov	r1, r4
   15d6c:	bl	1100c <fputs_unlocked@plt>
   15d70:	ldr	r3, [sp, #220]	; 0xdc
   15d74:	cmp	r3, #0
   15d78:	beq	15dd4 <argp_failure@@Base+0xb4>
   15d7c:	add	r3, sp, #224	; 0xe0
   15d80:	str	r3, [sp]
   15d84:	ldr	r3, [r4, #20]
   15d88:	ldr	r2, [r4, #24]
   15d8c:	cmp	r3, r2
   15d90:	addcc	r2, r3, #1
   15d94:	strcc	r2, [r4, #20]
   15d98:	movcc	r2, #58	; 0x3a
   15d9c:	strbcc	r2, [r3]
   15da0:	bcs	15ec8 <argp_failure@@Base+0x1a8>
   15da4:	ldr	r3, [r4, #20]
   15da8:	ldr	r2, [r4, #24]
   15dac:	cmp	r3, r2
   15db0:	addcc	r2, r3, #1
   15db4:	strcc	r2, [r4, #20]
   15db8:	movcc	r2, #32
   15dbc:	strbcc	r2, [r3]
   15dc0:	bcs	15ed8 <argp_failure@@Base+0x1b8>
   15dc4:	ldr	r2, [sp]
   15dc8:	ldr	r1, [sp, #220]	; 0xdc
   15dcc:	mov	r0, r4
   15dd0:	bl	11258 <vfprintf@plt>
   15dd4:	cmp	r6, #0
   15dd8:	beq	15e3c <argp_failure@@Base+0x11c>
   15ddc:	ldr	r3, [r4, #20]
   15de0:	ldr	r2, [r4, #24]
   15de4:	cmp	r3, r2
   15de8:	addcc	r2, r3, #1
   15dec:	strcc	r2, [r4, #20]
   15df0:	movcc	r2, #58	; 0x3a
   15df4:	strbcc	r2, [r3]
   15df8:	bcs	15ee8 <argp_failure@@Base+0x1c8>
   15dfc:	ldr	r3, [r4, #20]
   15e00:	ldr	r2, [r4, #24]
   15e04:	cmp	r3, r2
   15e08:	addcc	r2, r3, #1
   15e0c:	strcc	r2, [r4, #20]
   15e10:	movcc	r2, #32
   15e14:	strbcc	r2, [r3]
   15e18:	bcs	15ef8 <argp_failure@@Base+0x1d8>
   15e1c:	mov	r2, #200	; 0xc8
   15e20:	mov	r1, sp
   15e24:	mov	r0, r6
   15e28:	bl	111ec <strerror_r@plt>
   15e2c:	cmp	r0, #0
   15e30:	beq	15f08 <argp_failure@@Base+0x1e8>
   15e34:	mov	r1, r4
   15e38:	bl	1100c <fputs_unlocked@plt>
   15e3c:	ldr	r3, [r4, #20]
   15e40:	ldr	r2, [r4, #24]
   15e44:	cmp	r3, r2
   15e48:	addcc	r2, r3, #1
   15e4c:	strcc	r2, [r4, #20]
   15e50:	movcc	r2, #10
   15e54:	strbcc	r2, [r3]
   15e58:	bcs	15f24 <argp_failure@@Base+0x204>
   15e5c:	mov	r0, r4
   15e60:	bl	110fc <funlockfile@plt>
   15e64:	cmp	r7, #0
   15e68:	beq	15e80 <argp_failure@@Base+0x160>
   15e6c:	cmp	r5, #0
   15e70:	beq	15f34 <argp_failure@@Base+0x214>
   15e74:	ldr	r3, [r5, #16]
   15e78:	tst	r3, #32
   15e7c:	beq	15f34 <argp_failure@@Base+0x214>
   15e80:	add	sp, sp, #200	; 0xc8
   15e84:	ldrd	r4, [sp]
   15e88:	ldrd	r6, [sp, #8]
   15e8c:	ldr	lr, [sp, #16]
   15e90:	add	sp, sp, #20
   15e94:	add	sp, sp, #4
   15e98:	bx	lr
   15e9c:	movw	r3, #41904	; 0xa3b0
   15ea0:	movt	r3, #2
   15ea4:	ldr	r4, [r3]
   15ea8:	cmp	r4, #0
   15eac:	beq	15e80 <argp_failure@@Base+0x160>
   15eb0:	mov	r0, r4
   15eb4:	bl	11270 <flockfile@plt>
   15eb8:	movw	r3, #41896	; 0xa3a8
   15ebc:	movt	r3, #2
   15ec0:	ldr	r0, [r3]
   15ec4:	b	15d68 <argp_failure@@Base+0x48>
   15ec8:	mov	r1, #58	; 0x3a
   15ecc:	mov	r0, r4
   15ed0:	bl	11240 <__overflow@plt>
   15ed4:	b	15da4 <argp_failure@@Base+0x84>
   15ed8:	mov	r1, #32
   15edc:	mov	r0, r4
   15ee0:	bl	11240 <__overflow@plt>
   15ee4:	b	15dc4 <argp_failure@@Base+0xa4>
   15ee8:	mov	r1, #58	; 0x3a
   15eec:	mov	r0, r4
   15ef0:	bl	11240 <__overflow@plt>
   15ef4:	b	15dfc <argp_failure@@Base+0xdc>
   15ef8:	mov	r1, #32
   15efc:	mov	r0, r4
   15f00:	bl	11240 <__overflow@plt>
   15f04:	b	15e1c <argp_failure@@Base+0xfc>
   15f08:	mov	r0, r6
   15f0c:	bl	11150 <strerror@plt>
   15f10:	movw	r3, #38332	; 0x95bc
   15f14:	movt	r3, #1
   15f18:	cmp	r0, #0
   15f1c:	moveq	r0, r3
   15f20:	b	15e34 <argp_failure@@Base+0x114>
   15f24:	mov	r1, #10
   15f28:	mov	r0, r4
   15f2c:	bl	11240 <__overflow@plt>
   15f30:	b	15e5c <argp_failure@@Base+0x13c>
   15f34:	mov	r0, r7
   15f38:	bl	111a4 <exit@plt>
   15f3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15f40:	strd	r6, [sp, #8]
   15f44:	strd	r8, [sp, #16]
   15f48:	strd	sl, [sp, #24]
   15f4c:	str	lr, [sp, #32]
   15f50:	add	fp, sp, #32
   15f54:	sub	sp, sp, #124	; 0x7c
   15f58:	str	r0, [fp, #-108]	; 0xffffff94
   15f5c:	str	r1, [fp, #-104]	; 0xffffff98
   15f60:	str	r3, [fp, #-100]	; 0xffffff9c
   15f64:	subs	r3, r2, #0
   15f68:	str	r3, [fp, #-132]	; 0xffffff7c
   15f6c:	beq	16f54 <argp_failure@@Base+0x1234>
   15f70:	mov	r0, r3
   15f74:	bl	11270 <flockfile@plt>
   15f78:	movw	r3, #41836	; 0xa36c
   15f7c:	movt	r3, #2
   15f80:	ldr	r9, [r3, #36]	; 0x24
   15f84:	cmp	r9, #0
   15f88:	beq	16060 <argp_failure@@Base+0x340>
   15f8c:	movw	r2, #41836	; 0xa36c
   15f90:	movt	r2, #2
   15f94:	mov	r3, #0
   15f98:	ldr	r2, [r2, #32]
   15f9c:	mov	r1, r3
   15fa0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15fa4:	bl	18048 <argp_error@@Base+0xe40>
   15fa8:	subs	sl, r0, #0
   15fac:	beq	1643c <argp_failure@@Base+0x71c>
   15fb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fb4:	tst	r3, #11
   15fb8:	moveq	r3, #0
   15fbc:	streq	r3, [fp, #-128]	; 0xffffff80
   15fc0:	bne	16448 <argp_failure@@Base+0x728>
   15fc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fc8:	tst	r3, #3
   15fcc:	moveq	r4, #0
   15fd0:	bne	164d8 <argp_failure@@Base+0x7b8>
   15fd4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fd8:	tst	r3, #16
   15fdc:	bne	166fc <argp_failure@@Base+0x9dc>
   15fe0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fe4:	tst	r3, #4
   15fe8:	bne	16724 <argp_failure@@Base+0xa04>
   15fec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ff0:	tst	r3, #8
   15ff4:	beq	16ee0 <argp_failure@@Base+0x11c0>
   15ff8:	ldr	r3, [fp, #-128]	; 0xffffff80
   15ffc:	ldr	r3, [r3, #4]
   16000:	cmp	r3, #0
   16004:	beq	16ee0 <argp_failure@@Base+0x11c0>
   16008:	cmp	r4, #0
   1600c:	bne	16744 <argp_failure@@Base+0xa24>
   16010:	mov	r3, #0
   16014:	str	r3, [fp, #-88]	; 0xffffffa8
   16018:	str	r3, [fp, #-84]	; 0xffffffac
   1601c:	str	r3, [fp, #-80]	; 0xffffffb0
   16020:	ldr	r3, [fp, #-128]	; 0xffffff80
   16024:	ldr	r9, [r3]
   16028:	ldr	r3, [r3, #4]
   1602c:	str	r3, [fp, #-116]	; 0xffffff8c
   16030:	cmp	r3, #0
   16034:	beq	16edc <argp_failure@@Base+0x11bc>
   16038:	movw	r3, #41836	; 0xa36c
   1603c:	movt	r3, #2
   16040:	str	r3, [fp, #-96]	; 0xffffffa0
   16044:	movw	r3, #38648	; 0x96f8
   16048:	movt	r3, #1
   1604c:	str	r3, [fp, #-140]	; 0xffffff74
   16050:	movw	r3, #36680	; 0x8f48
   16054:	movt	r3, #1
   16058:	str	r3, [fp, #-144]	; 0xffffff70
   1605c:	b	16d5c <argp_failure@@Base+0x103c>
   16060:	movw	r0, #38356	; 0x95d4
   16064:	movt	r0, #1
   16068:	bl	1112c <getenv@plt>
   1606c:	movw	r1, #41836	; 0xa36c
   16070:	movt	r1, #2
   16074:	ldrd	r2, [r1]
   16078:	strd	r2, [fp, #-76]	; 0xffffffb4
   1607c:	ldrd	r2, [r1, #8]
   16080:	strd	r2, [fp, #-68]	; 0xffffffbc
   16084:	ldrd	r2, [r1, #16]
   16088:	strd	r2, [fp, #-60]	; 0xffffffc4
   1608c:	ldrd	r2, [r1, #24]
   16090:	strd	r2, [fp, #-52]	; 0xffffffcc
   16094:	ldrd	r2, [r1, #32]
   16098:	strd	r2, [fp, #-44]	; 0xffffffd4
   1609c:	subs	r6, r0, #0
   160a0:	beq	15f8c <argp_failure@@Base+0x26c>
   160a4:	movw	sl, #37884	; 0x93fc
   160a8:	movt	sl, #1
   160ac:	add	r8, sl, #168	; 0xa8
   160b0:	b	1630c <argp_failure@@Base+0x5ec>
   160b4:	cmp	r0, #45	; 0x2d
   160b8:	cmpne	r0, #95	; 0x5f
   160bc:	moveq	r3, #1
   160c0:	movne	r3, #0
   160c4:	ubfx	r1, r1, #3, #1
   160c8:	orrs	r3, r3, r1
   160cc:	beq	170b8 <argp_failure@@Base+0x1398>
   160d0:	mov	r4, r6
   160d4:	ldrb	r3, [r4, #1]!
   160d8:	lsl	r1, r3, #1
   160dc:	ldrh	r1, [r2, r1]
   160e0:	ubfx	r1, r1, #3, #1
   160e4:	cmp	r3, #95	; 0x5f
   160e8:	cmpne	r3, #45	; 0x2d
   160ec:	moveq	r3, #1
   160f0:	movne	r3, #0
   160f4:	orrs	r3, r1, r3
   160f8:	bne	160d4 <argp_failure@@Base+0x3b4>
   160fc:	sub	r7, r4, r6
   16100:	ldrb	r3, [r4]
   16104:	lsl	r1, r3, #1
   16108:	ldrh	r1, [r2, r1]
   1610c:	tst	r1, #8192	; 0x2000
   16110:	beq	16128 <argp_failure@@Base+0x408>
   16114:	ldrb	r3, [r4, #1]!
   16118:	lsl	r1, r3, #1
   1611c:	ldrh	r1, [r2, r1]
   16120:	tst	r1, #8192	; 0x2000
   16124:	bne	16114 <argp_failure@@Base+0x3f4>
   16128:	cmp	r3, #44	; 0x2c
   1612c:	cmpne	r3, #0
   16130:	beq	16194 <argp_failure@@Base+0x474>
   16134:	cmp	r3, #61	; 0x3d
   16138:	beq	16160 <argp_failure@@Base+0x440>
   1613c:	ldrb	r3, [r4]
   16140:	lsl	r3, r3, #1
   16144:	ldrh	r3, [r2, r3]
   16148:	tst	r3, #2048	; 0x800
   1614c:	streq	r9, [fp, #-96]	; 0xffffffa0
   16150:	streq	r9, [fp, #-112]	; 0xffffff90
   16154:	bne	161f8 <argp_failure@@Base+0x4d8>
   16158:	add	r5, sl, #24
   1615c:	b	162a0 <argp_failure@@Base+0x580>
   16160:	add	r1, r4, #1
   16164:	ldrb	r3, [r4, #1]
   16168:	lsl	r3, r3, #1
   1616c:	ldrh	r3, [r2, r3]
   16170:	tst	r3, #8192	; 0x2000
   16174:	beq	161f0 <argp_failure@@Base+0x4d0>
   16178:	ldrb	r3, [r1, #1]!
   1617c:	lsl	r3, r3, #1
   16180:	ldrh	r3, [r2, r3]
   16184:	tst	r3, #8192	; 0x2000
   16188:	bne	16178 <argp_failure@@Base+0x458>
   1618c:	mov	r4, r1
   16190:	b	1613c <argp_failure@@Base+0x41c>
   16194:	cmp	r0, #110	; 0x6e
   16198:	movne	r3, #1
   1619c:	strne	r3, [fp, #-96]	; 0xffffffa0
   161a0:	strne	r3, [fp, #-112]	; 0xffffff90
   161a4:	bne	16158 <argp_failure@@Base+0x438>
   161a8:	ldrb	r3, [r6, #1]
   161ac:	cmp	r3, #111	; 0x6f
   161b0:	movne	r3, #1
   161b4:	strne	r3, [fp, #-96]	; 0xffffffa0
   161b8:	strne	r3, [fp, #-112]	; 0xffffff90
   161bc:	bne	16158 <argp_failure@@Base+0x438>
   161c0:	ldrb	r3, [r6, #2]
   161c4:	cmp	r3, #45	; 0x2d
   161c8:	movne	r3, #1
   161cc:	strne	r3, [fp, #-96]	; 0xffffffa0
   161d0:	strne	r3, [fp, #-112]	; 0xffffff90
   161d4:	bne	16158 <argp_failure@@Base+0x438>
   161d8:	add	r6, r6, #3
   161dc:	sub	r7, r7, #3
   161e0:	str	r9, [fp, #-112]	; 0xffffff90
   161e4:	mov	r3, #1
   161e8:	str	r3, [fp, #-96]	; 0xffffffa0
   161ec:	b	16158 <argp_failure@@Base+0x438>
   161f0:	mov	r4, r1
   161f4:	b	1613c <argp_failure@@Base+0x41c>
   161f8:	mov	r2, #10
   161fc:	mov	r1, #0
   16200:	mov	r0, r4
   16204:	bl	1103c <strtol@plt>
   16208:	str	r0, [fp, #-112]	; 0xffffff90
   1620c:	ldr	r2, [r5]
   16210:	ldrb	r3, [r4]
   16214:	lsl	r3, r3, #1
   16218:	ldrh	r3, [r2, r3]
   1621c:	tst	r3, #2048	; 0x800
   16220:	beq	16238 <argp_failure@@Base+0x518>
   16224:	ldrb	r3, [r4, #1]!
   16228:	lsl	r3, r3, #1
   1622c:	ldrh	r3, [r2, r3]
   16230:	tst	r3, #2048	; 0x800
   16234:	bne	16224 <argp_failure@@Base+0x504>
   16238:	ldrb	r3, [r4]
   1623c:	lsl	r3, r3, #1
   16240:	ldrh	r3, [r2, r3]
   16244:	tst	r3, #8192	; 0x2000
   16248:	beq	16268 <argp_failure@@Base+0x548>
   1624c:	ldrb	r3, [r4, #1]!
   16250:	lsl	r3, r3, #1
   16254:	ldrh	r3, [r2, r3]
   16258:	tst	r3, #8192	; 0x2000
   1625c:	bne	1624c <argp_failure@@Base+0x52c>
   16260:	str	r9, [fp, #-96]	; 0xffffffa0
   16264:	b	16158 <argp_failure@@Base+0x438>
   16268:	str	r9, [fp, #-96]	; 0xffffffa0
   1626c:	b	16158 <argp_failure@@Base+0x438>
   16270:	str	r6, [sp, #4]
   16274:	str	r7, [sp]
   16278:	movw	r3, #38372	; 0x95e4
   1627c:	movt	r3, #1
   16280:	mov	r2, #0
   16284:	mov	r1, r2
   16288:	ldr	r0, [fp, #-104]	; 0xffffff98
   1628c:	bl	15d20 <argp_failure@@Base>
   16290:	b	162f4 <argp_failure@@Base+0x5d4>
   16294:	add	r5, r5, #16
   16298:	cmp	r5, r8
   1629c:	beq	163dc <argp_failure@@Base+0x6bc>
   162a0:	mov	r0, r5
   162a4:	bl	111bc <strlen@plt>
   162a8:	cmp	r0, r7
   162ac:	bne	16294 <argp_failure@@Base+0x574>
   162b0:	mov	r2, r7
   162b4:	mov	r1, r5
   162b8:	mov	r0, r6
   162bc:	bl	112b8 <strncmp@plt>
   162c0:	cmp	r0, #0
   162c4:	bne	16294 <argp_failure@@Base+0x574>
   162c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   162cc:	cmp	r3, #0
   162d0:	beq	162e0 <argp_failure@@Base+0x5c0>
   162d4:	ldrb	r3, [r5, #14]
   162d8:	cmp	r3, #0
   162dc:	beq	16270 <argp_failure@@Base+0x550>
   162e0:	ldrb	r3, [r5, #15]
   162e4:	sub	r2, fp, #36	; 0x24
   162e8:	add	r3, r2, r3
   162ec:	ldr	r2, [fp, #-112]	; 0xffffff90
   162f0:	str	r2, [r3, #-40]	; 0xffffffd8
   162f4:	cmp	r5, r8
   162f8:	beq	163dc <argp_failure@@Base+0x6bc>
   162fc:	ldrb	r3, [r4]
   16300:	cmp	r3, #44	; 0x2c
   16304:	addeq	r6, r4, #1
   16308:	movne	r6, r4
   1630c:	ldrb	r3, [r6]
   16310:	cmp	r3, #0
   16314:	beq	1636c <argp_failure@@Base+0x64c>
   16318:	bl	1118c <__ctype_b_loc@plt>
   1631c:	mov	r5, r0
   16320:	ldr	r2, [r0]
   16324:	mov	r3, r6
   16328:	mov	r6, r3
   1632c:	ldrb	r0, [r3], #1
   16330:	lsl	r1, r0, #1
   16334:	ldrh	r1, [r2, r1]
   16338:	tst	r1, #8192	; 0x2000
   1633c:	bne	16328 <argp_failure@@Base+0x608>
   16340:	tst	r1, #1024	; 0x400
   16344:	bne	160b4 <argp_failure@@Base+0x394>
   16348:	cmp	r0, #0
   1634c:	beq	1630c <argp_failure@@Base+0x5ec>
   16350:	str	r6, [sp]
   16354:	movw	r3, #38460	; 0x963c
   16358:	movt	r3, #1
   1635c:	mov	r2, #0
   16360:	mov	r1, r2
   16364:	ldr	r0, [fp, #-104]	; 0xffffff98
   16368:	bl	15d20 <argp_failure@@Base>
   1636c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16370:	ldr	r3, [pc, #3488]	; 17118 <argp_failure@@Base+0x13f8>
   16374:	add	r1, r3, #144	; 0x90
   16378:	add	r3, r3, #16
   1637c:	cmp	r3, r1
   16380:	beq	16400 <argp_failure@@Base+0x6e0>
   16384:	ldrb	r2, [r3, #14]
   16388:	cmp	r2, #0
   1638c:	bne	16378 <argp_failure@@Base+0x658>
   16390:	ldrb	r2, [r3, #15]
   16394:	cmp	r2, #32
   16398:	beq	16378 <argp_failure@@Base+0x658>
   1639c:	sub	ip, fp, #36	; 0x24
   163a0:	add	r2, ip, r2
   163a4:	ldr	r2, [r2, #-40]	; 0xffffffd8
   163a8:	cmp	r2, r0
   163ac:	blt	16378 <argp_failure@@Base+0x658>
   163b0:	str	r3, [sp, #4]
   163b4:	movw	r3, #38544	; 0x9690
   163b8:	movt	r3, #1
   163bc:	str	r3, [sp]
   163c0:	movw	r3, #38492	; 0x965c
   163c4:	movt	r3, #1
   163c8:	mov	r2, #0
   163cc:	mov	r1, r2
   163d0:	ldr	r0, [fp, #-104]	; 0xffffff98
   163d4:	bl	15d20 <argp_failure@@Base>
   163d8:	b	15f8c <argp_failure@@Base+0x26c>
   163dc:	str	r6, [sp, #4]
   163e0:	str	r7, [sp]
   163e4:	movw	r3, #38420	; 0x9614
   163e8:	movt	r3, #1
   163ec:	mov	r2, #0
   163f0:	mov	r1, r2
   163f4:	ldr	r0, [fp, #-104]	; 0xffffff98
   163f8:	bl	15d20 <argp_failure@@Base>
   163fc:	b	162fc <argp_failure@@Base+0x5dc>
   16400:	movw	r1, #41836	; 0xa36c
   16404:	movt	r1, #2
   16408:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1640c:	strd	r2, [r1]
   16410:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16414:	strd	r2, [r1, #8]
   16418:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1641c:	strd	r2, [r1, #16]
   16420:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   16424:	strd	r2, [r1, #24]
   16428:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1642c:	strd	r2, [r1, #32]
   16430:	mov	r3, #1
   16434:	str	r3, [r1, #36]	; 0x24
   16438:	b	15f8c <argp_failure@@Base+0x26c>
   1643c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16440:	bl	110fc <funlockfile@plt>
   16444:	b	16f54 <argp_failure@@Base+0x1234>
   16448:	mov	r1, #0
   1644c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16450:	bl	15668 <argp_parse@@Base+0x30b8>
   16454:	str	r0, [fp, #-128]	; 0xffffff80
   16458:	movw	r1, #36760	; 0x8f98
   1645c:	movt	r1, #1
   16460:	bl	140a8 <argp_parse@@Base+0x1af8>
   16464:	cmp	r0, #0
   16468:	mvnne	r3, #0
   1646c:	strne	r3, [r0, #12]
   16470:	movw	r1, #36728	; 0x8f78
   16474:	movt	r1, #1
   16478:	ldr	r0, [fp, #-128]	; 0xffffff80
   1647c:	bl	140a8 <argp_parse@@Base+0x1af8>
   16480:	cmp	r0, #0
   16484:	mvnne	r3, #0
   16488:	strne	r3, [r0, #12]
   1648c:	ldr	r0, [fp, #-128]	; 0xffffff80
   16490:	ldr	r3, [r0, #4]
   16494:	cmp	r3, #0
   16498:	beq	15fc4 <argp_failure@@Base+0x2a4>
   1649c:	ldr	r2, [r0]
   164a0:	mov	r3, #0
   164a4:	str	r3, [r2, #24]
   164a8:	add	r3, r3, #1
   164ac:	add	r2, r2, #28
   164b0:	ldr	r1, [r0, #4]
   164b4:	cmp	r3, r1
   164b8:	bcc	164a4 <argp_failure@@Base+0x784>
   164bc:	movw	r3, #21336	; 0x5358
   164c0:	movt	r3, #1
   164c4:	mov	r2, #28
   164c8:	ldr	r0, [fp, #-128]	; 0xffffff80
   164cc:	ldr	r0, [r0]
   164d0:	bl	11288 <qsort@plt>
   164d4:	b	15fc4 <argp_failure@@Base+0x2a4>
   164d8:	ldr	r0, [fp, #-108]	; 0xffffff94
   164dc:	bl	1415c <argp_parse@@Base+0x1bac>
   164e0:	mov	r2, r0
   164e4:	add	r3, r0, #7
   164e8:	bic	r3, r3, #7
   164ec:	sub	sp, sp, r3
   164f0:	add	r9, sp, #8
   164f4:	mov	r1, #0
   164f8:	mov	r0, r9
   164fc:	bl	11204 <memset@plt>
   16500:	mov	r5, #1
   16504:	movw	r4, #41836	; 0xa36c
   16508:	movt	r4, #2
   1650c:	movw	r3, #38568	; 0x96a8
   16510:	movt	r3, #1
   16514:	str	r3, [fp, #-116]	; 0xffffff8c
   16518:	movw	r8, #38560	; 0x96a0
   1651c:	movt	r8, #1
   16520:	str	r9, [fp, #-96]	; 0xffffffa0
   16524:	ldr	r9, [fp, #-128]	; 0xffffff80
   16528:	str	r8, [fp, #-112]	; 0xffffff90
   1652c:	ldr	r8, [fp, #-100]	; 0xffffff9c
   16530:	b	165e0 <argp_failure@@Base+0x8c0>
   16534:	mov	r0, sl
   16538:	bl	180e0 <argp_error@@Base+0xed8>
   1653c:	b	165fc <argp_failure@@Base+0x8dc>
   16540:	mov	r0, sl
   16544:	bl	180e0 <argp_error@@Base+0xed8>
   16548:	b	16648 <argp_failure@@Base+0x928>
   1654c:	mov	r1, sl
   16550:	mov	r0, r9
   16554:	bl	14330 <argp_parse@@Base+0x1d80>
   16558:	orr	r8, r8, #2
   1655c:	str	sl, [sp]
   16560:	mov	r3, #1
   16564:	sub	r2, fp, #76	; 0x4c
   16568:	ldr	r1, [fp, #-104]	; 0xffffff98
   1656c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16570:	bl	1479c <argp_parse@@Base+0x21ec>
   16574:	mov	r6, r0
   16578:	ldr	r3, [sl, #28]
   1657c:	ldr	r2, [sl, #24]
   16580:	sub	r3, r3, r2
   16584:	ldr	r2, [sl, #16]
   16588:	cmp	r3, r2
   1658c:	bhi	166c0 <argp_failure@@Base+0x9a0>
   16590:	str	r7, [sl, #12]
   16594:	ldr	r3, [sl, #28]
   16598:	ldr	r2, [sl, #24]
   1659c:	sub	r3, r3, r2
   165a0:	ldr	r2, [sl, #16]
   165a4:	cmp	r3, r2
   165a8:	bhi	166cc <argp_failure@@Base+0x9ac>
   165ac:	str	r5, [sl, #4]
   165b0:	ldr	r2, [sl, #28]
   165b4:	ldr	r3, [sl, #32]
   165b8:	cmp	r2, r3
   165bc:	bcs	166d8 <argp_failure@@Base+0x9b8>
   165c0:	ldr	r3, [sl, #28]
   165c4:	add	r2, r3, #1
   165c8:	str	r2, [sl, #28]
   165cc:	mov	r2, #10
   165d0:	strb	r2, [r3]
   165d4:	mov	r5, #0
   165d8:	cmp	r6, r5
   165dc:	beq	166f0 <argp_failure@@Base+0x9d0>
   165e0:	ldr	r6, [r4, #28]
   165e4:	ldr	r3, [sl, #28]
   165e8:	ldr	r2, [sl, #24]
   165ec:	sub	r3, r3, r2
   165f0:	ldr	r2, [sl, #16]
   165f4:	cmp	r3, r2
   165f8:	bhi	16534 <argp_failure@@Base+0x814>
   165fc:	ldr	r7, [sl, #12]
   16600:	str	r6, [sl, #12]
   16604:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16608:	str	r3, [fp, #-76]	; 0xffffffb4
   1660c:	cmp	r5, #0
   16610:	ldr	r3, [fp, #4]
   16614:	movwne	r2, #38552	; 0x9698
   16618:	movtne	r2, #1
   1661c:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   16620:	ldr	r1, [fp, #-112]	; 0xffffff90
   16624:	mov	r0, sl
   16628:	bl	18758 <argp_error@@Base+0x1550>
   1662c:	ldr	r6, [r4, #28]
   16630:	ldr	r3, [sl, #28]
   16634:	ldr	r2, [sl, #24]
   16638:	sub	r3, r3, r2
   1663c:	ldr	r2, [sl, #16]
   16640:	cmp	r3, r2
   16644:	bhi	16540 <argp_failure@@Base+0x820>
   16648:	ldr	r5, [sl, #4]
   1664c:	str	r6, [sl, #4]
   16650:	tst	r8, #2
   16654:	beq	1654c <argp_failure@@Base+0x82c>
   16658:	ldr	r3, [r9, #4]
   1665c:	cmp	r3, #0
   16660:	beq	1655c <argp_failure@@Base+0x83c>
   16664:	ldr	r3, [sl, #28]
   16668:	add	r3, r3, #12
   1666c:	ldr	r2, [sl, #32]
   16670:	cmp	r2, r3
   16674:	bcs	1668c <argp_failure@@Base+0x96c>
   16678:	mov	r1, #12
   1667c:	mov	r0, sl
   16680:	bl	18658 <argp_error@@Base+0x1450>
   16684:	cmp	r0, #0
   16688:	beq	1655c <argp_failure@@Base+0x83c>
   1668c:	ldr	r2, [sl, #28]
   16690:	movw	r3, #38576	; 0x96b0
   16694:	movt	r3, #1
   16698:	ldr	r0, [r3]
   1669c:	ldr	r1, [r3, #4]
   166a0:	str	r0, [r2]
   166a4:	str	r1, [r2, #4]
   166a8:	ldr	r3, [r3, #8]
   166ac:	str	r3, [r2, #8]
   166b0:	ldr	r3, [sl, #28]
   166b4:	add	r3, r3, #12
   166b8:	str	r3, [sl, #28]
   166bc:	b	1655c <argp_failure@@Base+0x83c>
   166c0:	mov	r0, sl
   166c4:	bl	180e0 <argp_error@@Base+0xed8>
   166c8:	b	16590 <argp_failure@@Base+0x870>
   166cc:	mov	r0, sl
   166d0:	bl	180e0 <argp_error@@Base+0xed8>
   166d4:	b	165ac <argp_failure@@Base+0x88c>
   166d8:	mov	r1, #1
   166dc:	mov	r0, sl
   166e0:	bl	18658 <argp_error@@Base+0x1450>
   166e4:	cmp	r0, #0
   166e8:	bne	165c0 <argp_failure@@Base+0x8a0>
   166ec:	b	165d4 <argp_failure@@Base+0x8b4>
   166f0:	str	r8, [fp, #-100]	; 0xffffff9c
   166f4:	mov	r4, #1
   166f8:	b	15fd4 <argp_failure@@Base+0x2b4>
   166fc:	str	sl, [sp, #4]
   16700:	mov	r3, #1
   16704:	str	r3, [sp]
   16708:	mov	r3, #0
   1670c:	mov	r2, r3
   16710:	ldr	r1, [fp, #-104]	; 0xffffff98
   16714:	ldr	r0, [fp, #-108]	; 0xffffff94
   16718:	bl	14d4c <argp_parse@@Base+0x279c>
   1671c:	orr	r4, r4, r0
   16720:	b	15fe0 <argp_failure@@Base+0x2c0>
   16724:	ldr	r3, [fp, #4]
   16728:	mov	r2, r3
   1672c:	movw	r1, #38592	; 0x96c0
   16730:	movt	r1, #1
   16734:	mov	r0, sl
   16738:	bl	18758 <argp_error@@Base+0x1550>
   1673c:	mov	r4, #1
   16740:	b	15fec <argp_failure@@Base+0x2cc>
   16744:	ldr	r2, [sl, #28]
   16748:	ldr	r3, [sl, #32]
   1674c:	cmp	r2, r3
   16750:	bcs	1676c <argp_failure@@Base+0xa4c>
   16754:	ldr	r3, [sl, #28]
   16758:	add	r2, r3, #1
   1675c:	str	r2, [sl, #28]
   16760:	mov	r2, #10
   16764:	strb	r2, [r3]
   16768:	b	16010 <argp_failure@@Base+0x2f0>
   1676c:	mov	r1, #1
   16770:	mov	r0, sl
   16774:	bl	18658 <argp_error@@Base+0x1450>
   16778:	cmp	r0, #0
   1677c:	bne	16754 <argp_failure@@Base+0xa34>
   16780:	b	16010 <argp_failure@@Base+0x2f0>
   16784:	mov	r0, sl
   16788:	bl	180e0 <argp_error@@Base+0xed8>
   1678c:	b	16d7c <argp_failure@@Base+0x105c>
   16790:	add	r3, r3, #24
   16794:	subs	r2, r2, #1
   16798:	beq	167bc <argp_failure@@Base+0xa9c>
   1679c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   167a0:	cmp	r1, #0
   167a4:	beq	16790 <argp_failure@@Base+0xa70>
   167a8:	ldr	r1, [r3, #-12]
   167ac:	tst	r1, #2
   167b0:	bne	16790 <argp_failure@@Base+0xa70>
   167b4:	mov	r3, #1
   167b8:	str	r3, [fp, #-112]	; 0xffffff90
   167bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   167c0:	ldr	r5, [r3, #8]
   167c4:	ldr	r3, [sl, #28]
   167c8:	ldr	r2, [sl, #24]
   167cc:	sub	r3, r3, r2
   167d0:	ldr	r2, [sl, #16]
   167d4:	cmp	r3, r2
   167d8:	bhi	167f8 <argp_failure@@Base+0xad8>
   167dc:	str	r5, [sl, #12]
   167e0:	ldr	r6, [r9, #4]
   167e4:	cmp	r6, #0
   167e8:	beq	168f8 <argp_failure@@Base+0xbd8>
   167ec:	mov	r5, r4
   167f0:	str	r9, [fp, #-136]	; 0xffffff78
   167f4:	b	170e0 <argp_failure@@Base+0x13c0>
   167f8:	mov	r0, sl
   167fc:	bl	180e0 <argp_error@@Base+0xed8>
   16800:	b	167dc <argp_failure@@Base+0xabc>
   16804:	tst	r9, #2
   16808:	beq	16814 <argp_failure@@Base+0xaf4>
   1680c:	add	r8, r8, #1
   16810:	b	170d4 <argp_failure@@Base+0x13b4>
   16814:	sub	r1, fp, #76	; 0x4c
   16818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1681c:	ldr	r0, [r3, #8]
   16820:	bl	14ba8 <argp_parse@@Base+0x25f8>
   16824:	ldr	r2, [sl, #28]
   16828:	ldr	r3, [sl, #32]
   1682c:	cmp	r2, r3
   16830:	bcs	168b0 <argp_failure@@Base+0xb90>
   16834:	ldr	r3, [sl, #28]
   16838:	add	r2, r3, #1
   1683c:	str	r2, [sl, #28]
   16840:	mov	r2, #45	; 0x2d
   16844:	strb	r2, [r3]
   16848:	ldrb	r7, [r8]
   1684c:	ldr	r2, [sl, #28]
   16850:	ldr	r3, [sl, #32]
   16854:	cmp	r2, r3
   16858:	bcs	168c8 <argp_failure@@Base+0xba8>
   1685c:	ldr	r3, [sl, #28]
   16860:	add	r2, r3, #1
   16864:	str	r2, [sl, #28]
   16868:	strb	r7, [r3]
   1686c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16870:	cmp	r3, #0
   16874:	beq	16888 <argp_failure@@Base+0xb68>
   16878:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1687c:	ldr	r3, [r3]
   16880:	cmp	r3, #0
   16884:	beq	168e0 <argp_failure@@Base+0xbc0>
   16888:	ldr	r2, [r4, #8]
   1688c:	cmp	r2, #0
   16890:	beq	1680c <argp_failure@@Base+0xaec>
   16894:	ldr	r3, [r4, #12]
   16898:	tst	r3, #1
   1689c:	ldrne	r1, [fp, #-140]	; 0xffffff74
   168a0:	ldreq	r1, [fp, #-144]	; 0xffffff70
   168a4:	mov	r0, sl
   168a8:	bl	18758 <argp_error@@Base+0x1550>
   168ac:	b	1680c <argp_failure@@Base+0xaec>
   168b0:	mov	r1, #1
   168b4:	mov	r0, sl
   168b8:	bl	18658 <argp_error@@Base+0x1450>
   168bc:	cmp	r0, #0
   168c0:	bne	16834 <argp_failure@@Base+0xb14>
   168c4:	b	16848 <argp_failure@@Base+0xb28>
   168c8:	mov	r1, #1
   168cc:	mov	r0, sl
   168d0:	bl	18658 <argp_error@@Base+0x1450>
   168d4:	cmp	r0, #0
   168d8:	bne	1685c <argp_failure@@Base+0xb3c>
   168dc:	b	1686c <argp_failure@@Base+0xb4c>
   168e0:	ldr	r3, [r4, #8]
   168e4:	cmp	r3, #0
   168e8:	movne	r3, #1
   168ec:	strne	r3, [fp, #-80]	; 0xffffffb0
   168f0:	b	1680c <argp_failure@@Base+0xaec>
   168f4:	ldr	r9, [fp, #-136]	; 0xffffff78
   168f8:	ldr	r3, [r4, #12]
   168fc:	tst	r3, #8
   16900:	beq	169d8 <argp_failure@@Base+0xcb8>
   16904:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16908:	ldr	r5, [r3, #16]
   1690c:	ldr	r3, [sl, #28]
   16910:	ldr	r2, [sl, #24]
   16914:	sub	r3, r3, r2
   16918:	ldr	r2, [sl, #16]
   1691c:	cmp	r3, r2
   16920:	bhi	1693c <argp_failure@@Base+0xc1c>
   16924:	str	r5, [sl, #12]
   16928:	ldr	r6, [r9, #4]
   1692c:	cmp	r6, #0
   16930:	beq	16aa0 <argp_failure@@Base+0xd80>
   16934:	add	r5, r4, #24
   16938:	b	16970 <argp_failure@@Base+0xc50>
   1693c:	mov	r0, sl
   16940:	bl	180e0 <argp_error@@Base+0xed8>
   16944:	b	16924 <argp_failure@@Base+0xc04>
   16948:	mov	r2, r8
   1694c:	mov	r1, r7
   16950:	ldr	r0, [sl, #28]
   16954:	bl	110a8 <memcpy@plt>
   16958:	ldr	r3, [sl, #28]
   1695c:	add	r8, r3, r8
   16960:	str	r8, [sl, #28]
   16964:	add	r5, r5, #24
   16968:	subs	r6, r6, #1
   1696c:	beq	16aa0 <argp_failure@@Base+0xd80>
   16970:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16974:	cmp	r3, #0
   16978:	beq	16964 <argp_failure@@Base+0xc44>
   1697c:	ldr	r3, [r5, #-12]
   16980:	tst	r3, #2
   16984:	bne	16964 <argp_failure@@Base+0xc44>
   16988:	sub	r1, fp, #76	; 0x4c
   1698c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16990:	ldr	r0, [r3, #16]
   16994:	bl	14ba8 <argp_parse@@Base+0x25f8>
   16998:	ldr	r7, [r5, #-24]	; 0xffffffe8
   1699c:	mov	r0, r7
   169a0:	bl	111bc <strlen@plt>
   169a4:	subs	r8, r0, #0
   169a8:	beq	16964 <argp_failure@@Base+0xc44>
   169ac:	ldr	r3, [sl, #28]
   169b0:	add	r3, r3, r8
   169b4:	ldr	r2, [sl, #32]
   169b8:	cmp	r2, r3
   169bc:	bcs	16948 <argp_failure@@Base+0xc28>
   169c0:	mov	r1, r8
   169c4:	mov	r0, sl
   169c8:	bl	18658 <argp_error@@Base+0x1450>
   169cc:	cmp	r0, #0
   169d0:	beq	16964 <argp_failure@@Base+0xc44>
   169d4:	b	16948 <argp_failure@@Base+0xc28>
   169d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   169dc:	ldr	r5, [r3, #12]
   169e0:	ldr	r3, [sl, #28]
   169e4:	ldr	r2, [sl, #24]
   169e8:	sub	r3, r3, r2
   169ec:	ldr	r2, [sl, #16]
   169f0:	cmp	r3, r2
   169f4:	bhi	16a24 <argp_failure@@Base+0xd04>
   169f8:	str	r5, [sl, #12]
   169fc:	ldr	r6, [r9, #4]
   16a00:	cmp	r6, #0
   16a04:	beq	16aa0 <argp_failure@@Base+0xd80>
   16a08:	add	r5, r4, #24
   16a0c:	movw	r8, #38656	; 0x9700
   16a10:	movt	r8, #1
   16a14:	movw	r7, #38672	; 0x9710
   16a18:	movt	r7, #1
   16a1c:	str	r7, [fp, #-112]	; 0xffffff90
   16a20:	b	16a3c <argp_failure@@Base+0xd1c>
   16a24:	mov	r0, sl
   16a28:	bl	180e0 <argp_error@@Base+0xed8>
   16a2c:	b	169f8 <argp_failure@@Base+0xcd8>
   16a30:	add	r5, r5, #24
   16a34:	subs	r6, r6, #1
   16a38:	beq	16aa0 <argp_failure@@Base+0xd80>
   16a3c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16a40:	cmp	r3, #0
   16a44:	beq	16a30 <argp_failure@@Base+0xd10>
   16a48:	ldr	r3, [r5, #-12]
   16a4c:	tst	r3, #2
   16a50:	bne	16a30 <argp_failure@@Base+0xd10>
   16a54:	sub	r1, fp, #76	; 0x4c
   16a58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16a5c:	ldr	r0, [r3, #12]
   16a60:	bl	14ba8 <argp_parse@@Base+0x25f8>
   16a64:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16a68:	mov	r1, r8
   16a6c:	mov	r0, sl
   16a70:	bl	18758 <argp_error@@Base+0x1550>
   16a74:	ldr	r2, [r4, #8]
   16a78:	cmp	r2, #0
   16a7c:	beq	16a30 <argp_failure@@Base+0xd10>
   16a80:	ldr	r3, [r4, #12]
   16a84:	tst	r3, #1
   16a88:	movwne	r1, #38664	; 0x9708
   16a8c:	movtne	r1, #1
   16a90:	ldreq	r1, [fp, #-112]	; 0xffffff90
   16a94:	mov	r0, sl
   16a98:	bl	18758 <argp_error@@Base+0x1550>
   16a9c:	b	16a30 <argp_failure@@Base+0xd10>
   16aa0:	ldr	r3, [sl, #28]
   16aa4:	ldr	r2, [sl, #24]
   16aa8:	sub	r3, r3, r2
   16aac:	ldr	r2, [sl, #16]
   16ab0:	cmp	r3, r2
   16ab4:	bhi	16b20 <argp_failure@@Base+0xe00>
   16ab8:	mov	r3, #0
   16abc:	str	r3, [sl, #4]
   16ac0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ac4:	cmp	r3, #0
   16ac8:	beq	16b2c <argp_failure@@Base+0xe0c>
   16acc:	ldr	r3, [r4, #12]
   16ad0:	tst	r3, #8
   16ad4:	bne	16b00 <argp_failure@@Base+0xde0>
   16ad8:	ldr	r5, [r4, #4]
   16adc:	sub	r3, r5, #1
   16ae0:	cmp	r3, #254	; 0xfe
   16ae4:	bhi	16b00 <argp_failure@@Base+0xde0>
   16ae8:	bl	1118c <__ctype_b_loc@plt>
   16aec:	ldr	r3, [r0]
   16af0:	lsl	r5, r5, #1
   16af4:	ldrh	r3, [r3, r5]
   16af8:	tst	r3, #16384	; 0x4000
   16afc:	bne	16d08 <argp_failure@@Base+0xfe8>
   16b00:	ldr	r3, [r4]
   16b04:	cmp	r3, #0
   16b08:	bne	16d08 <argp_failure@@Base+0xfe8>
   16b0c:	sub	r2, fp, #76	; 0x4c
   16b10:	ldr	r1, [r9, #20]
   16b14:	ldr	r0, [r4, #16]
   16b18:	bl	149a0 <argp_parse@@Base+0x23f0>
   16b1c:	b	16d04 <argp_failure@@Base+0xfe4>
   16b20:	mov	r0, sl
   16b24:	bl	180e0 <argp_error@@Base+0xed8>
   16b28:	b	16ab8 <argp_failure@@Base+0xd98>
   16b2c:	ldr	r5, [r4, #16]
   16b30:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b34:	ldr	r2, [r9, #20]
   16b38:	ldr	r1, [r4, #4]
   16b3c:	mov	r0, r5
   16b40:	bl	141c8 <argp_parse@@Base+0x1c18>
   16b44:	subs	r4, r0, #0
   16b48:	beq	16cc0 <argp_failure@@Base+0xfa0>
   16b4c:	ldrb	r3, [r4]
   16b50:	cmp	r3, #0
   16b54:	beq	16cb8 <argp_failure@@Base+0xf98>
   16b58:	ldr	r3, [sl, #28]
   16b5c:	ldr	r2, [sl, #24]
   16b60:	sub	r3, r3, r2
   16b64:	ldr	r2, [sl, #16]
   16b68:	cmp	r3, r2
   16b6c:	bhi	16c18 <argp_failure@@Base+0xef8>
   16b70:	ldr	r6, [sl, #20]
   16b74:	bic	r6, r6, r6, asr #31
   16b78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16b7c:	ldr	r7, [r3, #20]
   16b80:	str	r7, [sl, #4]
   16b84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16b88:	ldr	r7, [r3, #20]
   16b8c:	ldr	r3, [sl, #28]
   16b90:	ldr	r2, [sl, #24]
   16b94:	sub	r3, r3, r2
   16b98:	ldr	r2, [sl, #16]
   16b9c:	cmp	r3, r2
   16ba0:	bhi	16c54 <argp_failure@@Base+0xf34>
   16ba4:	str	r7, [sl, #12]
   16ba8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16bac:	ldr	r1, [r3, #20]
   16bb0:	add	r3, r1, #3
   16bb4:	cmp	r6, r3
   16bb8:	bhi	16c60 <argp_failure@@Base+0xf40>
   16bbc:	cmp	r6, r1
   16bc0:	bcc	16ca0 <argp_failure@@Base+0xf80>
   16bc4:	ldr	r3, [sl, #28]
   16bc8:	add	r3, r3, #3
   16bcc:	ldr	r2, [sl, #32]
   16bd0:	cmp	r2, r3
   16bd4:	bcs	16bec <argp_failure@@Base+0xecc>
   16bd8:	mov	r1, #3
   16bdc:	mov	r0, sl
   16be0:	bl	18658 <argp_error@@Base+0x1450>
   16be4:	cmp	r0, #0
   16be8:	beq	16ca8 <argp_failure@@Base+0xf88>
   16bec:	ldr	r2, [sl, #28]
   16bf0:	movw	r3, #38676	; 0x9714
   16bf4:	movt	r3, #1
   16bf8:	ldrh	r1, [r3]
   16bfc:	strh	r1, [r2]
   16c00:	ldrb	r3, [r3, #2]
   16c04:	strb	r3, [r2, #2]
   16c08:	ldr	r3, [sl, #28]
   16c0c:	add	r3, r3, #3
   16c10:	str	r3, [sl, #28]
   16c14:	b	16ca8 <argp_failure@@Base+0xf88>
   16c18:	mov	r0, sl
   16c1c:	bl	180e0 <argp_error@@Base+0xed8>
   16c20:	ldr	r6, [sl, #20]
   16c24:	bic	r6, r6, r6, asr #31
   16c28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c2c:	ldr	r7, [r3, #20]
   16c30:	ldr	r3, [sl, #28]
   16c34:	ldr	r2, [sl, #24]
   16c38:	sub	r3, r3, r2
   16c3c:	ldr	r2, [sl, #16]
   16c40:	cmp	r3, r2
   16c44:	bls	16b80 <argp_failure@@Base+0xe60>
   16c48:	mov	r0, sl
   16c4c:	bl	180e0 <argp_error@@Base+0xed8>
   16c50:	b	16b80 <argp_failure@@Base+0xe60>
   16c54:	mov	r0, sl
   16c58:	bl	180e0 <argp_error@@Base+0xed8>
   16c5c:	b	16ba4 <argp_failure@@Base+0xe84>
   16c60:	ldr	r2, [sl, #28]
   16c64:	ldr	r3, [sl, #32]
   16c68:	cmp	r2, r3
   16c6c:	bcs	16c88 <argp_failure@@Base+0xf68>
   16c70:	ldr	r3, [sl, #28]
   16c74:	add	r2, r3, #1
   16c78:	str	r2, [sl, #28]
   16c7c:	mov	r2, #10
   16c80:	strb	r2, [r3]
   16c84:	b	16ca8 <argp_failure@@Base+0xf88>
   16c88:	mov	r1, #1
   16c8c:	mov	r0, sl
   16c90:	bl	18658 <argp_error@@Base+0x1450>
   16c94:	cmp	r0, #0
   16c98:	bne	16c70 <argp_failure@@Base+0xf50>
   16c9c:	b	16ca8 <argp_failure@@Base+0xf88>
   16ca0:	mov	r0, sl
   16ca4:	bl	14518 <argp_parse@@Base+0x1f68>
   16ca8:	mov	r0, r4
   16cac:	bl	111bc <strlen@plt>
   16cb0:	subs	r6, r0, #0
   16cb4:	bne	16de0 <argp_failure@@Base+0x10c0>
   16cb8:	cmp	r5, r4
   16cbc:	bne	16e28 <argp_failure@@Base+0x1108>
   16cc0:	ldr	r3, [sl, #28]
   16cc4:	ldr	r2, [sl, #24]
   16cc8:	sub	r3, r3, r2
   16ccc:	ldr	r2, [sl, #16]
   16cd0:	cmp	r3, r2
   16cd4:	bhi	16e34 <argp_failure@@Base+0x1114>
   16cd8:	mov	r3, #0
   16cdc:	str	r3, [sl, #4]
   16ce0:	ldr	r2, [sl, #28]
   16ce4:	ldr	r3, [sl, #32]
   16ce8:	cmp	r2, r3
   16cec:	bcs	16e40 <argp_failure@@Base+0x1120>
   16cf0:	ldr	r3, [sl, #28]
   16cf4:	add	r2, r3, #1
   16cf8:	str	r2, [sl, #28]
   16cfc:	mov	r2, #10
   16d00:	strb	r2, [r3]
   16d04:	str	r9, [fp, #-88]	; 0xffffffa8
   16d08:	ldr	r3, [sl, #28]
   16d0c:	ldr	r2, [sl, #24]
   16d10:	sub	r3, r3, r2
   16d14:	ldr	r2, [sl, #16]
   16d18:	cmp	r3, r2
   16d1c:	bhi	16e58 <argp_failure@@Base+0x1138>
   16d20:	ldr	r3, [fp, #-120]	; 0xffffff88
   16d24:	str	r3, [sl, #4]
   16d28:	ldr	r3, [sl, #28]
   16d2c:	ldr	r2, [sl, #24]
   16d30:	sub	r3, r3, r2
   16d34:	ldr	r2, [sl, #16]
   16d38:	cmp	r3, r2
   16d3c:	bhi	16e64 <argp_failure@@Base+0x1144>
   16d40:	ldr	r3, [fp, #-124]	; 0xffffff84
   16d44:	str	r3, [sl, #12]
   16d48:	add	r9, r9, #28
   16d4c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16d50:	subs	r3, r3, #1
   16d54:	str	r3, [fp, #-116]	; 0xffffff8c
   16d58:	beq	16e70 <argp_failure@@Base+0x1150>
   16d5c:	ldr	r4, [r9]
   16d60:	ldr	r8, [r9, #8]
   16d64:	ldr	r3, [sl, #28]
   16d68:	ldr	r2, [sl, #24]
   16d6c:	sub	r3, r3, r2
   16d70:	ldr	r2, [sl, #16]
   16d74:	cmp	r3, r2
   16d78:	bhi	16784 <argp_failure@@Base+0xa64>
   16d7c:	ldr	r3, [sl, #4]
   16d80:	str	r3, [fp, #-120]	; 0xffffff88
   16d84:	mov	r3, #0
   16d88:	str	r3, [sl, #4]
   16d8c:	ldr	r3, [sl, #12]
   16d90:	str	r3, [fp, #-124]	; 0xffffff84
   16d94:	str	r9, [fp, #-76]	; 0xffffffb4
   16d98:	str	sl, [fp, #-72]	; 0xffffffb8
   16d9c:	sub	r3, fp, #88	; 0x58
   16da0:	str	r3, [fp, #-68]	; 0xffffffbc
   16da4:	mov	r3, #1
   16da8:	str	r3, [fp, #-64]	; 0xffffffc0
   16dac:	ldr	r3, [fp, #-104]	; 0xffffff98
   16db0:	str	r3, [fp, #-60]	; 0xffffffc4
   16db4:	ldr	r3, [r4, #12]
   16db8:	ands	r3, r3, #8
   16dbc:	str	r3, [fp, #-112]	; 0xffffff90
   16dc0:	movne	r3, #0
   16dc4:	strne	r3, [fp, #-112]	; 0xffffff90
   16dc8:	bne	167bc <argp_failure@@Base+0xa9c>
   16dcc:	ldr	r2, [r9, #4]
   16dd0:	cmp	r2, #0
   16dd4:	beq	167bc <argp_failure@@Base+0xa9c>
   16dd8:	add	r3, r4, #24
   16ddc:	b	1679c <argp_failure@@Base+0xa7c>
   16de0:	ldr	r3, [sl, #28]
   16de4:	add	r3, r3, r6
   16de8:	ldr	r2, [sl, #32]
   16dec:	cmp	r2, r3
   16df0:	bcs	16e08 <argp_failure@@Base+0x10e8>
   16df4:	mov	r1, r6
   16df8:	mov	r0, sl
   16dfc:	bl	18658 <argp_error@@Base+0x1450>
   16e00:	cmp	r0, #0
   16e04:	beq	16cb8 <argp_failure@@Base+0xf98>
   16e08:	mov	r2, r6
   16e0c:	mov	r1, r4
   16e10:	ldr	r0, [sl, #28]
   16e14:	bl	110a8 <memcpy@plt>
   16e18:	ldr	r3, [sl, #28]
   16e1c:	add	r6, r3, r6
   16e20:	str	r6, [sl, #28]
   16e24:	b	16cb8 <argp_failure@@Base+0xf98>
   16e28:	mov	r0, r4
   16e2c:	bl	13288 <argp_parse@@Base+0xcd8>
   16e30:	b	16cc0 <argp_failure@@Base+0xfa0>
   16e34:	mov	r0, sl
   16e38:	bl	180e0 <argp_error@@Base+0xed8>
   16e3c:	b	16cd8 <argp_failure@@Base+0xfb8>
   16e40:	mov	r1, #1
   16e44:	mov	r0, sl
   16e48:	bl	18658 <argp_error@@Base+0x1450>
   16e4c:	cmp	r0, #0
   16e50:	bne	16cf0 <argp_failure@@Base+0xfd0>
   16e54:	b	16d04 <argp_failure@@Base+0xfe4>
   16e58:	mov	r0, sl
   16e5c:	bl	180e0 <argp_error@@Base+0xed8>
   16e60:	b	16d20 <argp_failure@@Base+0x1000>
   16e64:	mov	r0, sl
   16e68:	bl	180e0 <argp_error@@Base+0xed8>
   16e6c:	b	16d40 <argp_failure@@Base+0x1020>
   16e70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16e74:	cmp	r3, #0
   16e78:	beq	16edc <argp_failure@@Base+0x11bc>
   16e7c:	movw	r3, #41836	; 0xa36c
   16e80:	movt	r3, #2
   16e84:	ldr	r3, [r3, #4]
   16e88:	cmp	r3, #0
   16e8c:	beq	16edc <argp_failure@@Base+0x11bc>
   16e90:	ldr	r3, [fp, #-104]	; 0xffffff98
   16e94:	cmp	r3, #0
   16e98:	ldrne	r2, [r3]
   16e9c:	ldreq	r2, [fp, #-104]	; 0xffffff98
   16ea0:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ea4:	mov	r1, #5
   16ea8:	movt	r1, #512	; 0x200
   16eac:	movw	r0, #38680	; 0x9718
   16eb0:	movt	r0, #1
   16eb4:	bl	141c8 <argp_parse@@Base+0x1c18>
   16eb8:	subs	r4, r0, #0
   16ebc:	beq	16edc <argp_failure@@Base+0x11bc>
   16ec0:	ldrb	r3, [r4]
   16ec4:	cmp	r3, #0
   16ec8:	bne	16f70 <argp_failure@@Base+0x1250>
   16ecc:	movw	r3, #38680	; 0x9718
   16ed0:	movt	r3, #1
   16ed4:	cmp	r4, r3
   16ed8:	bne	17044 <argp_failure@@Base+0x1324>
   16edc:	mov	r4, #1
   16ee0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ee4:	tst	r3, #32
   16ee8:	bne	17050 <argp_failure@@Base+0x1330>
   16eec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ef0:	tst	r3, #64	; 0x40
   16ef4:	beq	16f30 <argp_failure@@Base+0x1210>
   16ef8:	movw	r3, #42008	; 0xa418
   16efc:	movt	r3, #2
   16f00:	ldr	r3, [r3]
   16f04:	cmp	r3, #0
   16f08:	beq	16f30 <argp_failure@@Base+0x1210>
   16f0c:	cmp	r4, #0
   16f10:	bne	17078 <argp_failure@@Base+0x1358>
   16f14:	movw	r3, #42008	; 0xa418
   16f18:	movt	r3, #2
   16f1c:	ldr	r2, [r3]
   16f20:	movw	r1, #38796	; 0x978c
   16f24:	movt	r1, #1
   16f28:	mov	r0, sl
   16f2c:	bl	18758 <argp_error@@Base+0x1550>
   16f30:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16f34:	bl	110fc <funlockfile@plt>
   16f38:	ldr	r3, [fp, #-128]	; 0xffffff80
   16f3c:	cmp	r3, #0
   16f40:	beq	16f4c <argp_failure@@Base+0x122c>
   16f44:	mov	r0, r3
   16f48:	bl	14040 <argp_parse@@Base+0x1a90>
   16f4c:	mov	r0, sl
   16f50:	bl	1860c <argp_error@@Base+0x1404>
   16f54:	sub	sp, fp, #32
   16f58:	ldrd	r4, [sp]
   16f5c:	ldrd	r6, [sp, #8]
   16f60:	ldrd	r8, [sp, #16]
   16f64:	ldrd	sl, [sp, #24]
   16f68:	add	sp, sp, #32
   16f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f70:	ldr	r2, [sl, #28]
   16f74:	ldr	r3, [sl, #32]
   16f78:	cmp	r2, r3
   16f7c:	bcs	16fcc <argp_failure@@Base+0x12ac>
   16f80:	ldr	r3, [sl, #28]
   16f84:	add	r2, r3, #1
   16f88:	str	r2, [sl, #28]
   16f8c:	mov	r2, #10
   16f90:	strb	r2, [r3]
   16f94:	mov	r0, r4
   16f98:	bl	111bc <strlen@plt>
   16f9c:	subs	r5, r0, #0
   16fa0:	bne	16fe4 <argp_failure@@Base+0x12c4>
   16fa4:	ldr	r2, [sl, #28]
   16fa8:	ldr	r3, [sl, #32]
   16fac:	cmp	r2, r3
   16fb0:	bcs	1702c <argp_failure@@Base+0x130c>
   16fb4:	ldr	r3, [sl, #28]
   16fb8:	add	r2, r3, #1
   16fbc:	str	r2, [sl, #28]
   16fc0:	mov	r2, #10
   16fc4:	strb	r2, [r3]
   16fc8:	b	16ecc <argp_failure@@Base+0x11ac>
   16fcc:	mov	r1, #1
   16fd0:	mov	r0, sl
   16fd4:	bl	18658 <argp_error@@Base+0x1450>
   16fd8:	cmp	r0, #0
   16fdc:	bne	16f80 <argp_failure@@Base+0x1260>
   16fe0:	b	16f94 <argp_failure@@Base+0x1274>
   16fe4:	ldr	r3, [sl, #28]
   16fe8:	add	r3, r3, r5
   16fec:	ldr	r2, [sl, #32]
   16ff0:	cmp	r2, r3
   16ff4:	bcs	1700c <argp_failure@@Base+0x12ec>
   16ff8:	mov	r1, r5
   16ffc:	mov	r0, sl
   17000:	bl	18658 <argp_error@@Base+0x1450>
   17004:	cmp	r0, #0
   17008:	beq	16fa4 <argp_failure@@Base+0x1284>
   1700c:	mov	r2, r5
   17010:	mov	r1, r4
   17014:	ldr	r0, [sl, #28]
   17018:	bl	110a8 <memcpy@plt>
   1701c:	ldr	r3, [sl, #28]
   17020:	add	r5, r3, r5
   17024:	str	r5, [sl, #28]
   17028:	b	16fa4 <argp_failure@@Base+0x1284>
   1702c:	mov	r1, #1
   17030:	mov	r0, sl
   17034:	bl	18658 <argp_error@@Base+0x1450>
   17038:	cmp	r0, #0
   1703c:	bne	16fb4 <argp_failure@@Base+0x1294>
   17040:	b	16ecc <argp_failure@@Base+0x11ac>
   17044:	mov	r0, r4
   17048:	bl	13288 <argp_parse@@Base+0xcd8>
   1704c:	b	16edc <argp_failure@@Base+0x11bc>
   17050:	str	sl, [sp, #4]
   17054:	mov	r3, #0
   17058:	str	r3, [sp]
   1705c:	mov	r3, r4
   17060:	mov	r2, #1
   17064:	ldr	r1, [fp, #-104]	; 0xffffff98
   17068:	ldr	r0, [fp, #-108]	; 0xffffff94
   1706c:	bl	14d4c <argp_parse@@Base+0x279c>
   17070:	orr	r4, r4, r0
   17074:	b	16eec <argp_failure@@Base+0x11cc>
   17078:	ldr	r2, [sl, #28]
   1707c:	ldr	r3, [sl, #32]
   17080:	cmp	r2, r3
   17084:	bcs	170a0 <argp_failure@@Base+0x1380>
   17088:	ldr	r3, [sl, #28]
   1708c:	add	r2, r3, #1
   17090:	str	r2, [sl, #28]
   17094:	mov	r2, #10
   17098:	strb	r2, [r3]
   1709c:	b	16f14 <argp_failure@@Base+0x11f4>
   170a0:	mov	r1, #1
   170a4:	mov	r0, sl
   170a8:	bl	18658 <argp_error@@Base+0x1450>
   170ac:	cmp	r0, #0
   170b0:	bne	17088 <argp_failure@@Base+0x1368>
   170b4:	b	16f14 <argp_failure@@Base+0x11f4>
   170b8:	ldrb	r3, [r6]
   170bc:	mov	r4, r6
   170c0:	mov	r7, #0
   170c4:	b	16128 <argp_failure@@Base+0x408>
   170c8:	ldrb	r3, [r8]
   170cc:	cmp	r3, r7
   170d0:	beq	16804 <argp_failure@@Base+0xae4>
   170d4:	add	r5, r5, #24
   170d8:	subs	r6, r6, #1
   170dc:	beq	168f4 <argp_failure@@Base+0xbd4>
   170e0:	ldr	r9, [r5, #12]
   170e4:	tst	r9, #8
   170e8:	bne	170d4 <argp_failure@@Base+0x13b4>
   170ec:	ldr	r7, [r5, #4]
   170f0:	sub	r3, r7, #1
   170f4:	cmp	r3, #254	; 0xfe
   170f8:	bhi	170d4 <argp_failure@@Base+0x13b4>
   170fc:	bl	1118c <__ctype_b_loc@plt>
   17100:	ldr	r2, [r0]
   17104:	lsl	r3, r7, #1
   17108:	ldrh	r3, [r2, r3]
   1710c:	tst	r3, #16384	; 0x4000
   17110:	bne	170c8 <argp_failure@@Base+0x13a8>
   17114:	b	170d4 <argp_failure@@Base+0x13b4>
   17118:	andeq	r9, r1, r4, lsl r4

0001711c <argp_help@@Base>:
   1711c:	push	{lr}		; (str lr, [sp, #-4]!)
   17120:	sub	sp, sp, #12
   17124:	str	r3, [sp]
   17128:	mov	r3, r2
   1712c:	mov	r2, r1
   17130:	mov	r1, #0
   17134:	bl	15f3c <argp_failure@@Base+0x21c>
   17138:	add	sp, sp, #12
   1713c:	pop	{pc}		; (ldr pc, [sp], #4)

00017140 <argp_state_help@@Base>:
   17140:	strd	r4, [sp, #-12]!
   17144:	str	lr, [sp, #8]
   17148:	sub	sp, sp, #12
   1714c:	mov	r5, r2
   17150:	subs	r4, r0, #0
   17154:	beq	17174 <argp_state_help@@Base+0x34>
   17158:	ldr	r3, [r4, #16]
   1715c:	tst	r3, #2
   17160:	beq	171b4 <argp_state_help@@Base+0x74>
   17164:	add	sp, sp, #12
   17168:	ldrd	r4, [sp]
   1716c:	add	sp, sp, #8
   17170:	pop	{pc}		; (ldr pc, [sp], #4)
   17174:	cmp	r1, #0
   17178:	beq	17164 <argp_state_help@@Base+0x24>
   1717c:	movw	r3, #41896	; 0xa3a8
   17180:	movt	r3, #2
   17184:	ldr	r3, [r3]
   17188:	str	r3, [sp]
   1718c:	mov	r3, r2
   17190:	mov	r2, r1
   17194:	mov	r1, #0
   17198:	mov	r0, r1
   1719c:	bl	15f3c <argp_failure@@Base+0x21c>
   171a0:	b	171f0 <argp_state_help@@Base+0xb0>
   171a4:	movw	r3, #41892	; 0xa3a4
   171a8:	movt	r3, #2
   171ac:	ldr	r0, [r3]
   171b0:	bl	111a4 <exit@plt>
   171b4:	cmp	r1, #0
   171b8:	beq	17164 <argp_state_help@@Base+0x24>
   171bc:	ldr	r3, [r4, #16]
   171c0:	tst	r3, #64	; 0x40
   171c4:	orrne	r5, r5, #128	; 0x80
   171c8:	ldr	r3, [r4, #40]	; 0x28
   171cc:	str	r3, [sp]
   171d0:	mov	r3, r5
   171d4:	mov	r2, r1
   171d8:	mov	r1, r4
   171dc:	ldr	r0, [r4]
   171e0:	bl	15f3c <argp_failure@@Base+0x21c>
   171e4:	ldr	r3, [r4, #16]
   171e8:	tst	r3, #32
   171ec:	bne	17164 <argp_state_help@@Base+0x24>
   171f0:	tst	r5, #256	; 0x100
   171f4:	bne	171a4 <argp_state_help@@Base+0x64>
   171f8:	tst	r5, #512	; 0x200
   171fc:	beq	17164 <argp_state_help@@Base+0x24>
   17200:	mov	r0, #0
   17204:	bl	111a4 <exit@plt>

00017208 <argp_error@@Base>:
   17208:	push	{r1, r2, r3}
   1720c:	strd	r4, [sp, #-12]!
   17210:	str	lr, [sp, #8]
   17214:	sub	sp, sp, #8
   17218:	subs	r5, r0, #0
   1721c:	beq	172f4 <argp_error@@Base+0xec>
   17220:	ldr	r3, [r5, #16]
   17224:	tst	r3, #2
   17228:	bne	172dc <argp_error@@Base+0xd4>
   1722c:	ldr	r4, [r5, #44]	; 0x2c
   17230:	cmp	r4, #0
   17234:	beq	172dc <argp_error@@Base+0xd4>
   17238:	mov	r0, r4
   1723c:	bl	11270 <flockfile@plt>
   17240:	add	r3, sp, #24
   17244:	str	r3, [sp, #4]
   17248:	ldr	r0, [r5, #40]	; 0x28
   1724c:	mov	r1, r4
   17250:	bl	1100c <fputs_unlocked@plt>
   17254:	ldr	r3, [r4, #20]
   17258:	ldr	r2, [r4, #24]
   1725c:	cmp	r3, r2
   17260:	addcc	r2, r3, #1
   17264:	strcc	r2, [r4, #20]
   17268:	movcc	r2, #58	; 0x3a
   1726c:	strbcc	r2, [r3]
   17270:	bcs	17328 <argp_error@@Base+0x120>
   17274:	ldr	r3, [r4, #20]
   17278:	ldr	r2, [r4, #24]
   1727c:	cmp	r3, r2
   17280:	addcc	r2, r3, #1
   17284:	strcc	r2, [r4, #20]
   17288:	movcc	r2, #32
   1728c:	strbcc	r2, [r3]
   17290:	bcs	17338 <argp_error@@Base+0x130>
   17294:	ldr	r2, [sp, #4]
   17298:	ldr	r1, [sp, #20]
   1729c:	mov	r0, r4
   172a0:	bl	11258 <vfprintf@plt>
   172a4:	ldr	r3, [r4, #20]
   172a8:	ldr	r2, [r4, #24]
   172ac:	cmp	r3, r2
   172b0:	addcc	r2, r3, #1
   172b4:	strcc	r2, [r4, #20]
   172b8:	movcc	r2, #10
   172bc:	strbcc	r2, [r3]
   172c0:	bcs	17348 <argp_error@@Base+0x140>
   172c4:	mov	r2, #260	; 0x104
   172c8:	mov	r1, r4
   172cc:	mov	r0, r5
   172d0:	bl	17140 <argp_state_help@@Base>
   172d4:	mov	r0, r4
   172d8:	bl	110fc <funlockfile@plt>
   172dc:	add	sp, sp, #8
   172e0:	ldrd	r4, [sp]
   172e4:	ldr	lr, [sp, #8]
   172e8:	add	sp, sp, #12
   172ec:	add	sp, sp, #12
   172f0:	bx	lr
   172f4:	movw	r3, #41904	; 0xa3b0
   172f8:	movt	r3, #2
   172fc:	ldr	r4, [r3]
   17300:	cmp	r4, #0
   17304:	beq	172dc <argp_error@@Base+0xd4>
   17308:	mov	r0, r4
   1730c:	bl	11270 <flockfile@plt>
   17310:	add	r3, sp, #24
   17314:	str	r3, [sp, #4]
   17318:	movw	r3, #41896	; 0xa3a8
   1731c:	movt	r3, #2
   17320:	ldr	r0, [r3]
   17324:	b	1724c <argp_error@@Base+0x44>
   17328:	mov	r1, #58	; 0x3a
   1732c:	mov	r0, r4
   17330:	bl	11240 <__overflow@plt>
   17334:	b	17274 <argp_error@@Base+0x6c>
   17338:	mov	r1, #32
   1733c:	mov	r0, r4
   17340:	bl	11240 <__overflow@plt>
   17344:	b	17294 <argp_error@@Base+0x8c>
   17348:	mov	r1, #10
   1734c:	mov	r0, r4
   17350:	bl	11240 <__overflow@plt>
   17354:	b	172c4 <argp_error@@Base+0xbc>
   17358:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1735c:	strd	r6, [sp, #8]
   17360:	strd	r8, [sp, #16]
   17364:	str	lr, [sp, #24]
   17368:	ldr	r5, [r1, #28]
   1736c:	ldr	r6, [r1, #32]
   17370:	ldr	r8, [r1]
   17374:	add	r7, r0, r6, lsl #2
   17378:	b	173a8 <argp_error@@Base+0x1a0>
   1737c:	add	r3, r0, r5, lsl #2
   17380:	add	r4, r9, r5
   17384:	add	r4, r0, r4, lsl #2
   17388:	mov	r2, r7
   1738c:	ldr	ip, [r3]
   17390:	ldr	lr, [r2]
   17394:	str	lr, [r3], #4
   17398:	str	ip, [r2], #4
   1739c:	cmp	r3, r4
   173a0:	bne	1738c <argp_error@@Base+0x184>
   173a4:	add	r5, r5, r9
   173a8:	cmp	r8, r6
   173ac:	movle	r3, #0
   173b0:	movgt	r3, #1
   173b4:	cmp	r5, r6
   173b8:	movge	r3, #0
   173bc:	cmp	r3, #0
   173c0:	beq	17404 <argp_error@@Base+0x1fc>
   173c4:	sub	r9, r8, r6
   173c8:	sub	r3, r6, r5
   173cc:	cmp	r9, r3
   173d0:	ble	1737c <argp_error@@Base+0x174>
   173d4:	add	r2, r0, r5, lsl #2
   173d8:	sub	r9, r8, r3
   173dc:	add	r3, r0, r9, lsl #2
   173e0:	add	r4, r0, r8, lsl #2
   173e4:	ldr	ip, [r2]
   173e8:	ldr	lr, [r3]
   173ec:	str	lr, [r2], #4
   173f0:	str	ip, [r3], #4
   173f4:	cmp	r3, r4
   173f8:	bne	173e4 <argp_error@@Base+0x1dc>
   173fc:	mov	r8, r9
   17400:	b	173a8 <argp_error@@Base+0x1a0>
   17404:	ldr	r0, [r1]
   17408:	ldr	r3, [r1, #32]
   1740c:	sub	r2, r0, r3
   17410:	ldr	r3, [r1, #28]
   17414:	add	r3, r3, r2
   17418:	str	r3, [r1, #28]
   1741c:	str	r0, [r1, #32]
   17420:	ldrd	r4, [sp]
   17424:	ldrd	r6, [sp, #8]
   17428:	ldrd	r8, [sp, #16]
   1742c:	add	sp, sp, #24
   17430:	pop	{pc}		; (ldr pc, [sp], #4)
   17434:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17438:	strd	r6, [sp, #8]
   1743c:	strd	r8, [sp, #16]
   17440:	strd	sl, [sp, #24]
   17444:	str	lr, [sp, #32]
   17448:	sub	sp, sp, #52	; 0x34
   1744c:	str	r0, [sp, #32]
   17450:	str	r1, [sp, #20]
   17454:	str	r2, [sp, #28]
   17458:	str	r3, [sp, #16]
   1745c:	ldr	fp, [sp, #96]	; 0x60
   17460:	ldr	r9, [fp, #20]
   17464:	ldrb	r3, [r9]
   17468:	cmp	r3, #0
   1746c:	cmpne	r3, #61	; 0x3d
   17470:	beq	174a8 <argp_error@@Base+0x2a0>
   17474:	mov	r8, r9
   17478:	ldrb	r3, [r8, #1]!
   1747c:	cmp	r3, #0
   17480:	cmpne	r3, #61	; 0x3d
   17484:	bne	17478 <argp_error@@Base+0x270>
   17488:	sub	r7, r8, r9
   1748c:	ldr	r5, [sp, #16]
   17490:	ldr	sl, [r5]
   17494:	cmp	sl, #0
   17498:	beq	1796c <argp_error@@Base+0x764>
   1749c:	mov	r4, sl
   174a0:	mov	r6, #0
   174a4:	b	174c0 <argp_error@@Base+0x2b8>
   174a8:	mov	r8, r9
   174ac:	b	17488 <argp_error@@Base+0x280>
   174b0:	add	r6, r6, #1
   174b4:	ldr	r4, [r5, #16]!
   174b8:	cmp	r4, #0
   174bc:	beq	17970 <argp_error@@Base+0x768>
   174c0:	str	r5, [sp, #12]
   174c4:	mov	r2, r7
   174c8:	mov	r1, r9
   174cc:	mov	r0, r4
   174d0:	bl	112b8 <strncmp@plt>
   174d4:	cmp	r0, #0
   174d8:	bne	174b0 <argp_error@@Base+0x2a8>
   174dc:	mov	r0, r4
   174e0:	bl	111bc <strlen@plt>
   174e4:	cmp	r0, r7
   174e8:	bne	174b0 <argp_error@@Base+0x2a8>
   174ec:	cmp	r5, #0
   174f0:	beq	17978 <argp_error@@Base+0x770>
   174f4:	ldr	r3, [fp]
   174f8:	add	r2, r3, #1
   174fc:	str	r2, [fp]
   17500:	mov	r1, #0
   17504:	str	r1, [fp, #20]
   17508:	ldrb	r1, [r8]
   1750c:	cmp	r1, #0
   17510:	beq	178c0 <argp_error@@Base+0x6b8>
   17514:	ldr	r3, [sp, #12]
   17518:	ldr	r3, [r3, #4]
   1751c:	cmp	r3, #0
   17520:	beq	1786c <argp_error@@Base+0x664>
   17524:	add	r8, r8, #1
   17528:	str	r8, [fp, #12]
   1752c:	ldr	r3, [sp, #88]	; 0x58
   17530:	cmp	r3, #0
   17534:	strne	r6, [r3]
   17538:	ldr	r2, [sp, #12]
   1753c:	ldr	r3, [r2, #8]
   17540:	cmp	r3, #0
   17544:	beq	17958 <argp_error@@Base+0x750>
   17548:	ldr	r2, [r2, #12]
   1754c:	str	r2, [r3]
   17550:	mov	r0, #0
   17554:	add	sp, sp, #52	; 0x34
   17558:	ldrd	r4, [sp]
   1755c:	ldrd	r6, [sp, #8]
   17560:	ldrd	r8, [sp, #16]
   17564:	ldrd	sl, [sp, #24]
   17568:	add	sp, sp, #32
   1756c:	pop	{pc}		; (ldr pc, [sp], #4)
   17570:	ldr	r2, [sl, #8]
   17574:	ldr	r3, [r9, #8]
   17578:	cmp	r2, r3
   1757c:	bne	1763c <argp_error@@Base+0x434>
   17580:	ldr	r2, [sl, #12]
   17584:	ldr	r3, [r9, #12]
   17588:	cmp	r2, r3
   1758c:	bne	1763c <argp_error@@Base+0x434>
   17590:	b	175f4 <argp_error@@Base+0x3ec>
   17594:	mov	r0, r6
   17598:	bl	13e84 <argp_parse@@Base+0x18d4>
   1759c:	subs	r3, r0, #0
   175a0:	str	r3, [sp, #24]
   175a4:	beq	1766c <argp_error@@Base+0x464>
   175a8:	mov	r2, r6
   175ac:	mov	r1, #0
   175b0:	ldr	r7, [sp, #24]
   175b4:	mov	r0, r7
   175b8:	bl	11204 <memset@plt>
   175bc:	ldr	r2, [sp, #36]	; 0x24
   175c0:	mov	r1, #1
   175c4:	strb	r1, [r7, r2]
   175c8:	ldr	r3, [sp, #44]	; 0x2c
   175cc:	str	r3, [sp, #40]	; 0x28
   175d0:	b	1765c <argp_error@@Base+0x454>
   175d4:	ldr	r3, [sp, #24]
   175d8:	cmp	r3, #0
   175dc:	moveq	r5, #1
   175e0:	beq	175f4 <argp_error@@Base+0x3ec>
   175e4:	mov	r5, #1
   175e8:	b	1765c <argp_error@@Base+0x454>
   175ec:	str	r4, [sp, #36]	; 0x24
   175f0:	mov	sl, r9
   175f4:	add	r4, r4, #1
   175f8:	ldr	r0, [r9, #16]!
   175fc:	cmp	r0, #0
   17600:	beq	17674 <argp_error@@Base+0x46c>
   17604:	ldr	r2, [sp, #12]
   17608:	ldr	r1, [fp, #20]
   1760c:	bl	112b8 <strncmp@plt>
   17610:	cmp	r0, #0
   17614:	bne	175f4 <argp_error@@Base+0x3ec>
   17618:	cmp	sl, #0
   1761c:	beq	175ec <argp_error@@Base+0x3e4>
   17620:	ldr	r3, [sp, #92]	; 0x5c
   17624:	cmp	r3, #0
   17628:	bne	1763c <argp_error@@Base+0x434>
   1762c:	ldr	r2, [sl, #4]
   17630:	ldr	r3, [r9, #4]
   17634:	cmp	r2, r3
   17638:	beq	17570 <argp_error@@Base+0x368>
   1763c:	cmp	r5, #0
   17640:	bne	175f4 <argp_error@@Base+0x3ec>
   17644:	ldr	r3, [sp, #100]	; 0x64
   17648:	cmp	r3, #0
   1764c:	beq	175d4 <argp_error@@Base+0x3cc>
   17650:	ldr	r3, [sp, #24]
   17654:	cmp	r3, #0
   17658:	beq	17594 <argp_error@@Base+0x38c>
   1765c:	ldr	r3, [sp, #24]
   17660:	mov	r2, #1
   17664:	strb	r2, [r3, r4]
   17668:	b	175f4 <argp_error@@Base+0x3ec>
   1766c:	mov	r5, #1
   17670:	b	175f4 <argp_error@@Base+0x3ec>
   17674:	str	sl, [sp, #12]
   17678:	ldr	r3, [sp, #24]
   1767c:	orrs	r3, r3, r5
   17680:	bne	176f8 <argp_error@@Base+0x4f0>
   17684:	ldr	r3, [sp, #12]
   17688:	cmp	r3, #0
   1768c:	bne	17864 <argp_error@@Base+0x65c>
   17690:	ldr	r3, [sp, #92]	; 0x5c
   17694:	cmp	r3, #0
   17698:	beq	176cc <argp_error@@Base+0x4c4>
   1769c:	ldr	r3, [fp]
   176a0:	ldr	r2, [sp, #20]
   176a4:	ldr	r3, [r2, r3, lsl #2]
   176a8:	ldrb	r3, [r3, #1]
   176ac:	cmp	r3, #45	; 0x2d
   176b0:	beq	176cc <argp_error@@Base+0x4c4>
   176b4:	ldr	r3, [fp, #20]
   176b8:	ldrb	r1, [r3]
   176bc:	ldr	r0, [sp, #28]
   176c0:	bl	111c8 <strchr@plt>
   176c4:	cmp	r0, #0
   176c8:	bne	17964 <argp_error@@Base+0x75c>
   176cc:	ldr	r3, [sp, #100]	; 0x64
   176d0:	cmp	r3, #0
   176d4:	bne	17834 <argp_error@@Base+0x62c>
   176d8:	mov	r2, #0
   176dc:	str	r2, [fp, #20]
   176e0:	ldr	r3, [fp]
   176e4:	add	r3, r3, #1
   176e8:	str	r3, [fp]
   176ec:	str	r2, [fp, #8]
   176f0:	mov	r0, #63	; 0x3f
   176f4:	b	17554 <argp_error@@Base+0x34c>
   176f8:	ldr	r3, [sp, #100]	; 0x64
   176fc:	cmp	r3, #0
   17700:	beq	17738 <argp_error@@Base+0x530>
   17704:	cmp	r5, #0
   17708:	beq	17774 <argp_error@@Base+0x56c>
   1770c:	movw	r0, #41904	; 0xa3b0
   17710:	movt	r0, #2
   17714:	ldr	r3, [fp, #20]
   17718:	str	r3, [sp]
   1771c:	ldr	r3, [sp, #104]	; 0x68
   17720:	ldr	r2, [sp, #20]
   17724:	ldr	r2, [r2]
   17728:	movw	r1, #38816	; 0x97a0
   1772c:	movt	r1, #1
   17730:	ldr	r0, [r0]
   17734:	bl	111d4 <fprintf@plt>
   17738:	ldr	r3, [sp, #40]	; 0x28
   1773c:	cmp	r3, #0
   17740:	bne	17828 <argp_error@@Base+0x620>
   17744:	ldr	r4, [fp, #20]
   17748:	mov	r0, r4
   1774c:	bl	111bc <strlen@plt>
   17750:	add	r0, r4, r0
   17754:	str	r0, [fp, #20]
   17758:	ldr	r3, [fp]
   1775c:	add	r3, r3, #1
   17760:	str	r3, [fp]
   17764:	mov	r3, #0
   17768:	str	r3, [fp, #8]
   1776c:	mov	r0, #63	; 0x3f
   17770:	b	17554 <argp_error@@Base+0x34c>
   17774:	movw	r4, #41904	; 0xa3b0
   17778:	movt	r4, #2
   1777c:	ldr	r0, [r4]
   17780:	bl	11270 <flockfile@plt>
   17784:	ldr	r3, [fp, #20]
   17788:	str	r3, [sp]
   1778c:	ldr	r3, [sp, #104]	; 0x68
   17790:	ldr	r2, [sp, #20]
   17794:	ldr	r2, [r2]
   17798:	movw	r1, #38848	; 0x97c0
   1779c:	movt	r1, #1
   177a0:	ldr	r0, [r4]
   177a4:	bl	111d4 <fprintf@plt>
   177a8:	cmp	r6, #0
   177ac:	ble	17808 <argp_error@@Base+0x600>
   177b0:	ldr	r2, [sp, #24]
   177b4:	sub	r4, r2, #1
   177b8:	sub	r3, r6, #1
   177bc:	add	r8, r2, r3
   177c0:	movw	r7, #38896	; 0x97f0
   177c4:	movt	r7, #1
   177c8:	movw	r6, #41904	; 0xa3b0
   177cc:	movt	r6, #2
   177d0:	ldr	r9, [sp, #16]
   177d4:	b	177e4 <argp_error@@Base+0x5dc>
   177d8:	add	r5, r5, #1
   177dc:	cmp	r8, r4
   177e0:	beq	17808 <argp_error@@Base+0x600>
   177e4:	ldrb	r3, [r4, #1]!
   177e8:	cmp	r3, #0
   177ec:	beq	177d8 <argp_error@@Base+0x5d0>
   177f0:	ldr	r3, [r9, r5, lsl #4]
   177f4:	ldr	r2, [sp, #104]	; 0x68
   177f8:	mov	r1, r7
   177fc:	ldr	r0, [r6]
   17800:	bl	111d4 <fprintf@plt>
   17804:	b	177d8 <argp_error@@Base+0x5d0>
   17808:	movw	r4, #41904	; 0xa3b0
   1780c:	movt	r4, #2
   17810:	ldr	r1, [r4]
   17814:	mov	r0, #10
   17818:	bl	11264 <fputc@plt>
   1781c:	ldr	r0, [r4]
   17820:	bl	110fc <funlockfile@plt>
   17824:	b	17738 <argp_error@@Base+0x530>
   17828:	ldr	r0, [sp, #24]
   1782c:	bl	13288 <argp_parse@@Base+0xcd8>
   17830:	b	17744 <argp_error@@Base+0x53c>
   17834:	movw	r0, #41904	; 0xa3b0
   17838:	movt	r0, #2
   1783c:	ldr	r3, [fp, #20]
   17840:	str	r3, [sp]
   17844:	ldr	r3, [sp, #104]	; 0x68
   17848:	ldr	r2, [sp, #20]
   1784c:	ldr	r2, [r2]
   17850:	movw	r1, #38904	; 0x97f8
   17854:	movt	r1, #1
   17858:	ldr	r0, [r0]
   1785c:	bl	111d4 <fprintf@plt>
   17860:	b	176d8 <argp_error@@Base+0x4d0>
   17864:	ldr	r6, [sp, #36]	; 0x24
   17868:	b	174f4 <argp_error@@Base+0x2ec>
   1786c:	ldr	r3, [sp, #100]	; 0x64
   17870:	cmp	r3, #0
   17874:	bne	1788c <argp_error@@Base+0x684>
   17878:	ldr	r3, [sp, #12]
   1787c:	ldr	r3, [r3, #12]
   17880:	str	r3, [fp, #8]
   17884:	mov	r0, #63	; 0x3f
   17888:	b	17554 <argp_error@@Base+0x34c>
   1788c:	movw	r0, #41904	; 0xa3b0
   17890:	movt	r0, #2
   17894:	ldr	r3, [sp, #12]
   17898:	ldr	r3, [r3]
   1789c:	str	r3, [sp]
   178a0:	ldr	r3, [sp, #104]	; 0x68
   178a4:	ldr	r2, [sp, #20]
   178a8:	ldr	r2, [r2]
   178ac:	movw	r1, #38936	; 0x9818
   178b0:	movt	r1, #1
   178b4:	ldr	r0, [r0]
   178b8:	bl	111d4 <fprintf@plt>
   178bc:	b	17878 <argp_error@@Base+0x670>
   178c0:	ldr	r1, [sp, #12]
   178c4:	ldr	r1, [r1, #4]
   178c8:	cmp	r1, #1
   178cc:	bne	1752c <argp_error@@Base+0x324>
   178d0:	ldr	r1, [sp, #32]
   178d4:	cmp	r2, r1
   178d8:	bge	178f4 <argp_error@@Base+0x6ec>
   178dc:	add	r3, r3, #2
   178e0:	str	r3, [fp]
   178e4:	ldr	r3, [sp, #20]
   178e8:	ldr	r3, [r3, r2, lsl #2]
   178ec:	str	r3, [fp, #12]
   178f0:	b	1752c <argp_error@@Base+0x324>
   178f4:	ldr	r3, [sp, #100]	; 0x64
   178f8:	cmp	r3, #0
   178fc:	bne	17924 <argp_error@@Base+0x71c>
   17900:	ldr	r3, [sp, #12]
   17904:	ldr	r3, [r3, #12]
   17908:	str	r3, [fp, #8]
   1790c:	ldr	r3, [sp, #28]
   17910:	ldrb	r3, [r3]
   17914:	cmp	r3, #58	; 0x3a
   17918:	moveq	r0, #58	; 0x3a
   1791c:	movne	r0, #63	; 0x3f
   17920:	b	17554 <argp_error@@Base+0x34c>
   17924:	movw	r0, #41904	; 0xa3b0
   17928:	movt	r0, #2
   1792c:	ldr	r3, [sp, #12]
   17930:	ldr	r3, [r3]
   17934:	str	r3, [sp]
   17938:	ldr	r3, [sp, #104]	; 0x68
   1793c:	ldr	r2, [sp, #20]
   17940:	ldr	r2, [r2]
   17944:	movw	r1, #38984	; 0x9848
   17948:	movt	r1, #1
   1794c:	ldr	r0, [r0]
   17950:	bl	111d4 <fprintf@plt>
   17954:	b	17900 <argp_error@@Base+0x6f8>
   17958:	ldr	r3, [sp, #12]
   1795c:	ldr	r0, [r3, #12]
   17960:	b	17554 <argp_error@@Base+0x34c>
   17964:	mvn	r0, #0
   17968:	b	17554 <argp_error@@Base+0x34c>
   1796c:	mov	r6, #0
   17970:	cmp	sl, #0
   17974:	beq	17690 <argp_error@@Base+0x488>
   17978:	ldr	r9, [sp, #16]
   1797c:	mvn	r3, #0
   17980:	str	r3, [sp, #36]	; 0x24
   17984:	mov	r5, #0
   17988:	str	r5, [sp, #40]	; 0x28
   1798c:	str	r5, [sp, #24]
   17990:	mov	r4, r5
   17994:	mov	r3, #1
   17998:	str	r3, [sp, #44]	; 0x2c
   1799c:	mov	r0, sl
   179a0:	mov	sl, r5
   179a4:	str	r7, [sp, #12]
   179a8:	b	17604 <argp_error@@Base+0x3fc>
   179ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   179b0:	strd	r6, [sp, #8]
   179b4:	strd	r8, [sp, #16]
   179b8:	strd	sl, [sp, #24]
   179bc:	str	lr, [sp, #32]
   179c0:	sub	sp, sp, #36	; 0x24
   179c4:	str	r3, [sp, #24]
   179c8:	ldr	r4, [sp, #80]	; 0x50
   179cc:	ldr	r8, [r4, #4]
   179d0:	subs	r5, r0, #0
   179d4:	ble	17f10 <argp_error@@Base+0xd08>
   179d8:	mov	r9, r1
   179dc:	mov	r6, r2
   179e0:	mov	r3, #0
   179e4:	str	r3, [r4, #12]
   179e8:	ldr	r3, [r4]
   179ec:	cmp	r3, #0
   179f0:	beq	17a14 <argp_error@@Base+0x80c>
   179f4:	ldr	r3, [r4, #16]
   179f8:	cmp	r3, #0
   179fc:	beq	17a1c <argp_error@@Base+0x814>
   17a00:	ldrb	r3, [r2]
   17a04:	sub	r3, r3, #43	; 0x2b
   17a08:	tst	r3, #253	; 0xfd
   17a0c:	addeq	r6, r2, #1
   17a10:	b	17a78 <argp_error@@Base+0x870>
   17a14:	mov	r3, #1
   17a18:	str	r3, [r4]
   17a1c:	ldr	r3, [r4]
   17a20:	str	r3, [r4, #32]
   17a24:	str	r3, [r4, #28]
   17a28:	mov	r3, #0
   17a2c:	str	r3, [r4, #20]
   17a30:	ldrb	r3, [r6]
   17a34:	cmp	r3, #45	; 0x2d
   17a38:	moveq	r3, #2
   17a3c:	streq	r3, [r4, #24]
   17a40:	addeq	r6, r6, #1
   17a44:	beq	17a70 <argp_error@@Base+0x868>
   17a48:	cmp	r3, #43	; 0x2b
   17a4c:	moveq	r3, #0
   17a50:	streq	r3, [r4, #24]
   17a54:	addeq	r6, r6, #1
   17a58:	beq	17a70 <argp_error@@Base+0x868>
   17a5c:	ldr	r3, [sp, #84]	; 0x54
   17a60:	cmp	r3, #0
   17a64:	beq	17b38 <argp_error@@Base+0x930>
   17a68:	mov	r3, #0
   17a6c:	str	r3, [r4, #24]
   17a70:	mov	r3, #1
   17a74:	str	r3, [r4, #16]
   17a78:	ldrb	r3, [r6]
   17a7c:	cmp	r3, #58	; 0x3a
   17a80:	moveq	r8, #0
   17a84:	ldr	r3, [r4, #20]
   17a88:	cmp	r3, #0
   17a8c:	beq	17a9c <argp_error@@Base+0x894>
   17a90:	ldrb	r3, [r3]
   17a94:	cmp	r3, #0
   17a98:	bne	17c3c <argp_error@@Base+0xa34>
   17a9c:	ldr	r3, [r4]
   17aa0:	ldr	r2, [r4, #32]
   17aa4:	cmp	r2, r3
   17aa8:	strgt	r3, [r4, #32]
   17aac:	ldr	r2, [r4, #28]
   17ab0:	cmp	r3, r2
   17ab4:	strlt	r3, [r4, #28]
   17ab8:	ldr	r2, [r4, #24]
   17abc:	cmp	r2, #1
   17ac0:	beq	17b58 <argp_error@@Base+0x950>
   17ac4:	ldr	r7, [r4]
   17ac8:	cmp	r7, r5
   17acc:	beq	17b18 <argp_error@@Base+0x910>
   17ad0:	ldr	sl, [r9, r7, lsl #2]
   17ad4:	movw	r1, #36672	; 0x8f40
   17ad8:	movt	r1, #1
   17adc:	mov	r0, sl
   17ae0:	bl	11030 <strcmp@plt>
   17ae4:	cmp	r0, #0
   17ae8:	bne	17f20 <argp_error@@Base+0xd18>
   17aec:	add	r7, r7, #1
   17af0:	str	r7, [r4]
   17af4:	ldr	r2, [r4, #28]
   17af8:	ldr	r3, [r4, #32]
   17afc:	cmp	r2, r3
   17b00:	cmpne	r7, r3
   17b04:	bne	17bd4 <argp_error@@Base+0x9cc>
   17b08:	cmp	r2, r3
   17b0c:	streq	r7, [r4, #28]
   17b10:	str	r5, [r4, #32]
   17b14:	str	r5, [r4]
   17b18:	ldr	r3, [r4, #28]
   17b1c:	ldr	r2, [r4, #32]
   17b20:	cmp	r3, r2
   17b24:	mvneq	r0, #0
   17b28:	beq	17f4c <argp_error@@Base+0xd44>
   17b2c:	str	r3, [r4]
   17b30:	mvn	r0, #0
   17b34:	b	17f4c <argp_error@@Base+0xd44>
   17b38:	movw	r0, #39024	; 0x9870
   17b3c:	movt	r0, #1
   17b40:	bl	1112c <getenv@plt>
   17b44:	cmp	r0, #0
   17b48:	bne	17a68 <argp_error@@Base+0x860>
   17b4c:	mov	r3, #1
   17b50:	str	r3, [r4, #24]
   17b54:	b	17a70 <argp_error@@Base+0x868>
   17b58:	ldr	r2, [r4, #32]
   17b5c:	ldr	r1, [r4, #28]
   17b60:	cmp	r1, r2
   17b64:	cmpne	r3, r2
   17b68:	bne	17b88 <argp_error@@Base+0x980>
   17b6c:	cmp	r3, r2
   17b70:	strne	r3, [r4, #28]
   17b74:	ldr	r3, [r4]
   17b78:	cmp	r5, r3
   17b7c:	ble	17bcc <argp_error@@Base+0x9c4>
   17b80:	add	r1, r9, r3, lsl #2
   17b84:	b	17ba8 <argp_error@@Base+0x9a0>
   17b88:	mov	r1, r4
   17b8c:	mov	r0, r9
   17b90:	bl	17358 <argp_error@@Base+0x150>
   17b94:	b	17b74 <argp_error@@Base+0x96c>
   17b98:	add	r3, r3, #1
   17b9c:	str	r3, [r4]
   17ba0:	cmp	r3, r5
   17ba4:	beq	17bc8 <argp_error@@Base+0x9c0>
   17ba8:	ldr	r2, [r1], #4
   17bac:	ldrb	r0, [r2]
   17bb0:	cmp	r0, #45	; 0x2d
   17bb4:	bne	17b98 <argp_error@@Base+0x990>
   17bb8:	ldrb	r2, [r2, #1]
   17bbc:	cmp	r2, #0
   17bc0:	beq	17b98 <argp_error@@Base+0x990>
   17bc4:	b	17bcc <argp_error@@Base+0x9c4>
   17bc8:	mov	r3, r5
   17bcc:	str	r3, [r4, #32]
   17bd0:	b	17ac4 <argp_error@@Base+0x8bc>
   17bd4:	mov	r1, r4
   17bd8:	mov	r0, r9
   17bdc:	bl	17358 <argp_error@@Base+0x150>
   17be0:	b	17b10 <argp_error@@Base+0x908>
   17be4:	ldrb	r1, [sl, #1]
   17be8:	cmp	r1, #0
   17bec:	beq	17f2c <argp_error@@Base+0xd24>
   17bf0:	ldr	r3, [sp, #24]
   17bf4:	cmp	r3, #0
   17bf8:	beq	17c2c <argp_error@@Base+0xa24>
   17bfc:	cmp	r1, #45	; 0x2d
   17c00:	beq	17ca8 <argp_error@@Base+0xaa0>
   17c04:	ldr	r3, [sp, #76]	; 0x4c
   17c08:	cmp	r3, #0
   17c0c:	beq	17c2c <argp_error@@Base+0xa24>
   17c10:	ldrb	r3, [sl, #2]
   17c14:	cmp	r3, #0
   17c18:	bne	17cec <argp_error@@Base+0xae4>
   17c1c:	mov	r0, r6
   17c20:	bl	111c8 <strchr@plt>
   17c24:	cmp	r0, #0
   17c28:	beq	17cec <argp_error@@Base+0xae4>
   17c2c:	ldr	r3, [r4]
   17c30:	ldr	r3, [r9, r3, lsl #2]
   17c34:	add	r3, r3, #1
   17c38:	str	r3, [r4, #20]
   17c3c:	ldr	sl, [r4, #20]
   17c40:	add	fp, sl, #1
   17c44:	str	fp, [r4, #20]
   17c48:	ldrb	r7, [sl]
   17c4c:	str	r7, [sp, #28]
   17c50:	mov	r1, r7
   17c54:	mov	r0, r6
   17c58:	bl	111c8 <strchr@plt>
   17c5c:	ldrb	r3, [sl, #1]
   17c60:	cmp	r3, #0
   17c64:	bne	17c74 <argp_error@@Base+0xa6c>
   17c68:	ldr	r3, [r4]
   17c6c:	add	r3, r3, #1
   17c70:	str	r3, [r4]
   17c74:	sub	r3, r7, #58	; 0x3a
   17c78:	uxtb	r3, r3
   17c7c:	cmp	r0, #0
   17c80:	cmpne	r3, #1
   17c84:	bls	17d38 <argp_error@@Base+0xb30>
   17c88:	ldrb	r3, [r0]
   17c8c:	cmp	r3, #87	; 0x57
   17c90:	beq	17d74 <argp_error@@Base+0xb6c>
   17c94:	ldrb	r3, [r0, #1]
   17c98:	cmp	r3, #58	; 0x3a
   17c9c:	beq	17e48 <argp_error@@Base+0xc40>
   17ca0:	mov	r0, r7
   17ca4:	b	17f4c <argp_error@@Base+0xd44>
   17ca8:	add	sl, sl, #2
   17cac:	str	sl, [r4, #20]
   17cb0:	movw	r3, #36672	; 0x8f40
   17cb4:	movt	r3, #1
   17cb8:	str	r3, [sp, #16]
   17cbc:	str	r8, [sp, #12]
   17cc0:	str	r4, [sp, #8]
   17cc4:	ldr	r3, [sp, #76]	; 0x4c
   17cc8:	str	r3, [sp, #4]
   17ccc:	ldr	r3, [sp, #72]	; 0x48
   17cd0:	str	r3, [sp]
   17cd4:	ldr	r3, [sp, #24]
   17cd8:	mov	r2, r6
   17cdc:	mov	r1, r9
   17ce0:	mov	r0, r5
   17ce4:	bl	17434 <argp_error@@Base+0x22c>
   17ce8:	b	17f4c <argp_error@@Base+0xd44>
   17cec:	add	sl, sl, #1
   17cf0:	str	sl, [r4, #20]
   17cf4:	movw	r3, #35508	; 0x8ab4
   17cf8:	movt	r3, #1
   17cfc:	str	r3, [sp, #16]
   17d00:	str	r8, [sp, #12]
   17d04:	str	r4, [sp, #8]
   17d08:	ldr	r3, [sp, #76]	; 0x4c
   17d0c:	str	r3, [sp, #4]
   17d10:	ldr	r3, [sp, #72]	; 0x48
   17d14:	str	r3, [sp]
   17d18:	ldr	r3, [sp, #24]
   17d1c:	mov	r2, r6
   17d20:	mov	r1, r9
   17d24:	mov	r0, r5
   17d28:	bl	17434 <argp_error@@Base+0x22c>
   17d2c:	cmn	r0, #1
   17d30:	bne	17f4c <argp_error@@Base+0xd44>
   17d34:	b	17c2c <argp_error@@Base+0xa24>
   17d38:	cmp	r8, #0
   17d3c:	bne	17d50 <argp_error@@Base+0xb48>
   17d40:	ldr	r3, [sp, #28]
   17d44:	str	r3, [r4, #8]
   17d48:	mov	r0, #63	; 0x3f
   17d4c:	b	17f4c <argp_error@@Base+0xd44>
   17d50:	movw	r0, #41904	; 0xa3b0
   17d54:	movt	r0, #2
   17d58:	ldr	r3, [sp, #28]
   17d5c:	ldr	r2, [r9]
   17d60:	movw	r1, #39040	; 0x9880
   17d64:	movt	r1, #1
   17d68:	ldr	r0, [r0]
   17d6c:	bl	111d4 <fprintf@plt>
   17d70:	b	17d40 <argp_error@@Base+0xb38>
   17d74:	ldrb	r1, [r0, #1]
   17d78:	ldr	r2, [sp, #24]
   17d7c:	cmp	r1, #59	; 0x3b
   17d80:	movne	r3, #0
   17d84:	moveq	r3, #1
   17d88:	cmp	r2, #0
   17d8c:	moveq	r3, #0
   17d90:	cmp	r3, #0
   17d94:	beq	17c94 <argp_error@@Base+0xa8c>
   17d98:	ldrb	r3, [sl, #1]
   17d9c:	cmp	r3, #0
   17da0:	strne	fp, [r4, #12]
   17da4:	bne	17dbc <argp_error@@Base+0xbb4>
   17da8:	ldr	r3, [r4]
   17dac:	cmp	r3, r5
   17db0:	beq	17e04 <argp_error@@Base+0xbfc>
   17db4:	ldr	r3, [r9, r3, lsl #2]
   17db8:	str	r3, [r4, #12]
   17dbc:	ldr	r3, [r4, #12]
   17dc0:	str	r3, [r4, #20]
   17dc4:	mov	r2, #0
   17dc8:	str	r2, [r4, #12]
   17dcc:	movw	r3, #39112	; 0x98c8
   17dd0:	movt	r3, #1
   17dd4:	str	r3, [sp, #16]
   17dd8:	str	r8, [sp, #12]
   17ddc:	str	r4, [sp, #8]
   17de0:	str	r2, [sp, #4]
   17de4:	ldr	r3, [sp, #72]	; 0x48
   17de8:	str	r3, [sp]
   17dec:	ldr	r3, [sp, #24]
   17df0:	mov	r2, r6
   17df4:	mov	r1, r9
   17df8:	mov	r0, r5
   17dfc:	bl	17434 <argp_error@@Base+0x22c>
   17e00:	b	17f4c <argp_error@@Base+0xd44>
   17e04:	cmp	r8, #0
   17e08:	bne	17e24 <argp_error@@Base+0xc1c>
   17e0c:	ldr	r3, [sp, #28]
   17e10:	str	r3, [r4, #8]
   17e14:	ldrb	r0, [r6]
   17e18:	cmp	r0, #58	; 0x3a
   17e1c:	movne	r0, #63	; 0x3f
   17e20:	b	17f4c <argp_error@@Base+0xd44>
   17e24:	movw	r0, #41904	; 0xa3b0
   17e28:	movt	r0, #2
   17e2c:	ldr	r3, [sp, #28]
   17e30:	ldr	r2, [r9]
   17e34:	movw	r1, #39068	; 0x989c
   17e38:	movt	r1, #1
   17e3c:	ldr	r0, [r0]
   17e40:	bl	111d4 <fprintf@plt>
   17e44:	b	17e0c <argp_error@@Base+0xc04>
   17e48:	ldrb	r3, [r0, #2]
   17e4c:	cmp	r3, #58	; 0x3a
   17e50:	beq	17e7c <argp_error@@Base+0xc74>
   17e54:	ldrb	r3, [sl, #1]
   17e58:	cmp	r3, #0
   17e5c:	beq	17eac <argp_error@@Base+0xca4>
   17e60:	str	fp, [r4, #12]
   17e64:	ldr	r3, [r4]
   17e68:	add	r3, r3, #1
   17e6c:	str	r3, [r4]
   17e70:	mov	r3, #0
   17e74:	str	r3, [r4, #20]
   17e78:	b	17ca0 <argp_error@@Base+0xa98>
   17e7c:	ldrb	r3, [sl, #1]
   17e80:	cmp	r3, #0
   17e84:	moveq	r3, #0
   17e88:	streq	r3, [r4, #12]
   17e8c:	beq	17ea0 <argp_error@@Base+0xc98>
   17e90:	str	fp, [r4, #12]
   17e94:	ldr	r3, [r4]
   17e98:	add	r3, r3, #1
   17e9c:	str	r3, [r4]
   17ea0:	mov	r3, #0
   17ea4:	str	r3, [r4, #20]
   17ea8:	b	17ca0 <argp_error@@Base+0xa98>
   17eac:	ldr	r3, [r4]
   17eb0:	cmp	r3, r5
   17eb4:	beq	17ecc <argp_error@@Base+0xcc4>
   17eb8:	add	r2, r3, #1
   17ebc:	str	r2, [r4]
   17ec0:	ldr	r3, [r9, r3, lsl #2]
   17ec4:	str	r3, [r4, #12]
   17ec8:	b	17e70 <argp_error@@Base+0xc68>
   17ecc:	cmp	r8, #0
   17ed0:	bne	17eec <argp_error@@Base+0xce4>
   17ed4:	ldr	r3, [sp, #28]
   17ed8:	str	r3, [r4, #8]
   17edc:	ldrb	r7, [r6]
   17ee0:	cmp	r7, #58	; 0x3a
   17ee4:	movne	r7, #63	; 0x3f
   17ee8:	b	17e70 <argp_error@@Base+0xc68>
   17eec:	movw	r0, #41904	; 0xa3b0
   17ef0:	movt	r0, #2
   17ef4:	ldr	r3, [sp, #28]
   17ef8:	ldr	r2, [r9]
   17efc:	movw	r1, #39068	; 0x989c
   17f00:	movt	r1, #1
   17f04:	ldr	r0, [r0]
   17f08:	bl	111d4 <fprintf@plt>
   17f0c:	b	17ed4 <argp_error@@Base+0xccc>
   17f10:	mvn	r0, #0
   17f14:	b	17f4c <argp_error@@Base+0xd44>
   17f18:	mvn	r0, #0
   17f1c:	b	17f4c <argp_error@@Base+0xd44>
   17f20:	ldrb	r3, [sl]
   17f24:	cmp	r3, #45	; 0x2d
   17f28:	beq	17be4 <argp_error@@Base+0x9dc>
   17f2c:	ldr	r3, [r4, #24]
   17f30:	cmp	r3, #0
   17f34:	beq	17f18 <argp_error@@Base+0xd10>
   17f38:	add	r3, r7, #1
   17f3c:	str	r3, [r4]
   17f40:	ldr	r3, [r9, r7, lsl #2]
   17f44:	str	r3, [r4, #12]
   17f48:	mov	r0, #1
   17f4c:	add	sp, sp, #36	; 0x24
   17f50:	ldrd	r4, [sp]
   17f54:	ldrd	r6, [sp, #8]
   17f58:	ldrd	r8, [sp, #16]
   17f5c:	ldrd	sl, [sp, #24]
   17f60:	add	sp, sp, #32
   17f64:	pop	{pc}		; (ldr pc, [sp], #4)
   17f68:	strd	r4, [sp, #-12]!
   17f6c:	str	lr, [sp, #8]
   17f70:	sub	sp, sp, #20
   17f74:	movw	r4, #41968	; 0xa3f0
   17f78:	movt	r4, #2
   17f7c:	movw	r5, #41880	; 0xa398
   17f80:	movt	r5, #2
   17f84:	ldr	ip, [r5]
   17f88:	str	ip, [r4]
   17f8c:	ldr	ip, [r5, #4]
   17f90:	str	ip, [r4, #4]
   17f94:	ldr	ip, [sp, #40]	; 0x28
   17f98:	str	ip, [sp, #12]
   17f9c:	str	r4, [sp, #8]
   17fa0:	ldr	ip, [sp, #36]	; 0x24
   17fa4:	str	ip, [sp, #4]
   17fa8:	ldr	ip, [sp, #32]
   17fac:	str	ip, [sp]
   17fb0:	bl	179ac <argp_error@@Base+0x7a4>
   17fb4:	ldr	r3, [r4]
   17fb8:	str	r3, [r5]
   17fbc:	movw	r3, #42016	; 0xa420
   17fc0:	movt	r3, #2
   17fc4:	ldr	r2, [r4, #12]
   17fc8:	str	r2, [r3]
   17fcc:	ldr	r3, [r4, #8]
   17fd0:	str	r3, [r5, #8]
   17fd4:	add	sp, sp, #20
   17fd8:	ldrd	r4, [sp]
   17fdc:	add	sp, sp, #8
   17fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   17fe4:	push	{lr}		; (str lr, [sp, #-4]!)
   17fe8:	sub	sp, sp, #20
   17fec:	mov	r3, #1
   17ff0:	str	r3, [sp, #8]
   17ff4:	mov	r3, #0
   17ff8:	str	r3, [sp, #4]
   17ffc:	str	r3, [sp]
   18000:	bl	17f68 <argp_error@@Base+0xd60>
   18004:	add	sp, sp, #20
   18008:	pop	{pc}		; (ldr pc, [sp], #4)
   1800c:	str	r4, [sp, #-8]!
   18010:	str	lr, [sp, #4]
   18014:	umull	r2, r3, r1, r2
   18018:	cmp	r3, #0
   1801c:	bne	18034 <argp_error@@Base+0xe2c>
   18020:	mov	r1, r2
   18024:	bl	13ec0 <argp_parse@@Base+0x1910>
   18028:	ldr	r4, [sp]
   1802c:	add	sp, sp, #4
   18030:	pop	{pc}		; (ldr pc, [sp], #4)
   18034:	bl	111e0 <__errno_location@plt>
   18038:	mov	r3, #12
   1803c:	str	r3, [r0]
   18040:	mov	r0, #0
   18044:	b	18028 <argp_error@@Base+0xe20>
   18048:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1804c:	strd	r6, [sp, #8]
   18050:	str	r8, [sp, #16]
   18054:	str	lr, [sp, #20]
   18058:	mov	r8, r0
   1805c:	mov	r7, r1
   18060:	mov	r6, r2
   18064:	mov	r5, r3
   18068:	mov	r0, #36	; 0x24
   1806c:	bl	13e84 <argp_parse@@Base+0x18d4>
   18070:	subs	r4, r0, #0
   18074:	beq	180b8 <argp_error@@Base+0xeb0>
   18078:	str	r8, [r4]
   1807c:	str	r7, [r4, #4]
   18080:	str	r6, [r4, #8]
   18084:	str	r5, [r4, #12]
   18088:	mov	r3, #0
   1808c:	str	r3, [r4, #20]
   18090:	str	r3, [r4, #16]
   18094:	mov	r0, #200	; 0xc8
   18098:	bl	13e84 <argp_parse@@Base+0x18d4>
   1809c:	mov	r5, r0
   180a0:	str	r0, [r4, #24]
   180a4:	cmp	r0, #0
   180a8:	strne	r0, [r4, #28]
   180ac:	addne	r5, r0, #200	; 0xc8
   180b0:	strne	r5, [r4, #32]
   180b4:	beq	180d0 <argp_error@@Base+0xec8>
   180b8:	mov	r0, r4
   180bc:	ldrd	r4, [sp]
   180c0:	ldrd	r6, [sp, #8]
   180c4:	ldr	r8, [sp, #16]
   180c8:	add	sp, sp, #20
   180cc:	pop	{pc}		; (ldr pc, [sp], #4)
   180d0:	mov	r0, r4
   180d4:	bl	13288 <argp_parse@@Base+0xcd8>
   180d8:	mov	r4, r5
   180dc:	b	180b8 <argp_error@@Base+0xeb0>
   180e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   180e4:	strd	r6, [sp, #8]
   180e8:	strd	r8, [sp, #16]
   180ec:	strd	sl, [sp, #24]
   180f0:	str	lr, [sp, #32]
   180f4:	sub	sp, sp, #20
   180f8:	mov	r4, r0
   180fc:	ldr	r5, [r0, #24]
   18100:	ldr	r3, [r0, #16]
   18104:	add	r5, r5, r3
   18108:	mov	sl, #32
   1810c:	str	sl, [sp, #8]
   18110:	b	181f8 <argp_error@@Base+0xff0>
   18114:	mov	r7, #0
   18118:	ldr	r0, [r4]
   1811c:	ldr	r3, [r0, #20]
   18120:	ldr	r2, [r0, #24]
   18124:	cmp	r3, r2
   18128:	addcc	r2, r3, #1
   1812c:	strcc	r2, [r0, #20]
   18130:	strbcc	sl, [r3]
   18134:	bcs	18264 <argp_error@@Base+0x105c>
   18138:	add	r7, r7, #1
   1813c:	cmp	r6, r7
   18140:	bne	18118 <argp_error@@Base+0xf10>
   18144:	str	r6, [r4, #20]
   18148:	ldr	r8, [r4, #28]
   1814c:	sub	fp, r8, r5
   18150:	mov	r2, fp
   18154:	mov	r1, #10
   18158:	mov	r0, r5
   1815c:	bl	11228 <memchr@plt>
   18160:	mov	r6, r0
   18164:	ldr	r3, [r4, #20]
   18168:	cmp	r3, #0
   1816c:	movlt	r3, #0
   18170:	strlt	r3, [r4, #20]
   18174:	cmp	r6, #0
   18178:	beq	18270 <argp_error@@Base+0x1068>
   1817c:	ldr	r0, [r4, #20]
   18180:	ldr	r9, [r4, #8]
   18184:	sub	r3, r6, r5
   18188:	add	r3, r3, r0
   1818c:	cmp	r3, r9
   18190:	movlt	r3, #0
   18194:	strlt	r3, [r4, #20]
   18198:	addlt	r5, r6, #1
   1819c:	blt	181f8 <argp_error@@Base+0xff0>
   181a0:	sub	r7, r9, #1
   181a4:	ldr	r3, [r4, #12]
   181a8:	str	r3, [sp, #4]
   181ac:	cmp	r3, #0
   181b0:	bge	1829c <argp_error@@Base+0x1094>
   181b4:	cmp	r8, r6
   181b8:	bls	1832c <argp_error@@Base+0x1124>
   181bc:	sub	r0, r7, r0
   181c0:	sub	r2, r8, r6
   181c4:	mov	r1, r6
   181c8:	add	r0, r5, r0
   181cc:	bl	1106c <memmove@plt>
   181d0:	ldr	r3, [r4, #20]
   181d4:	sub	r7, r7, r3
   181d8:	add	r7, r5, r7
   181dc:	sub	r6, r7, r6
   181e0:	ldr	r3, [r4, #28]
   181e4:	sub	r6, r3, r6
   181e8:	str	r6, [r4, #28]
   181ec:	mov	r3, #0
   181f0:	str	r3, [r4, #20]
   181f4:	add	r5, r5, r9
   181f8:	ldr	r8, [r4, #28]
   181fc:	cmp	r8, r5
   18200:	bls	18344 <argp_error@@Base+0x113c>
   18204:	ldr	r3, [r4, #20]
   18208:	cmp	r3, #0
   1820c:	bne	18148 <argp_error@@Base+0xf40>
   18210:	ldr	r6, [r4, #4]
   18214:	cmp	r6, #0
   18218:	beq	185f0 <argp_error@@Base+0x13e8>
   1821c:	add	r3, r8, r6
   18220:	ldr	r2, [r4, #32]
   18224:	cmp	r2, r3
   18228:	bls	18114 <argp_error@@Base+0xf0c>
   1822c:	add	r7, r5, r6
   18230:	sub	r2, r8, r5
   18234:	mov	r1, r5
   18238:	mov	r0, r7
   1823c:	bl	1106c <memmove@plt>
   18240:	ldr	r3, [r4, #28]
   18244:	add	r3, r3, r6
   18248:	str	r3, [r4, #28]
   1824c:	mov	r2, r6
   18250:	mov	r1, sl
   18254:	mov	r0, r5
   18258:	bl	11204 <memset@plt>
   1825c:	mov	r5, r7
   18260:	b	18144 <argp_error@@Base+0xf3c>
   18264:	ldr	r1, [sp, #8]
   18268:	bl	11240 <__overflow@plt>
   1826c:	b	18138 <argp_error@@Base+0xf30>
   18270:	ldr	r3, [r4, #20]
   18274:	add	r3, fp, r3
   18278:	ldr	r7, [r4, #8]
   1827c:	cmp	r3, r7
   18280:	bcc	18324 <argp_error@@Base+0x111c>
   18284:	sub	r7, r7, #1
   18288:	ldr	r3, [r4, #12]
   1828c:	str	r3, [sp, #4]
   18290:	cmp	r3, #0
   18294:	blt	1832c <argp_error@@Base+0x1124>
   18298:	mov	r6, r8
   1829c:	ldr	r3, [r4, #20]
   182a0:	rsb	r3, r3, #1
   182a4:	add	r7, r3, r7
   182a8:	adds	r7, r5, r7
   182ac:	bcs	185e8 <argp_error@@Base+0x13e0>
   182b0:	bl	1118c <__ctype_b_loc@plt>
   182b4:	ldr	r0, [r0]
   182b8:	mov	r3, r7
   182bc:	mov	r1, r3
   182c0:	sub	r3, r3, #1
   182c4:	ldrb	r2, [r1]
   182c8:	lsl	r2, r2, #1
   182cc:	ldrh	r2, [r0, r2]
   182d0:	tst	r2, #1
   182d4:	bne	18370 <argp_error@@Base+0x1168>
   182d8:	mov	r1, r3
   182dc:	cmp	r3, r5
   182e0:	bcs	182bc <argp_error@@Base+0x10b4>
   182e4:	add	r9, r1, #1
   182e8:	cmp	r9, r5
   182ec:	bhi	183ac <argp_error@@Base+0x11a4>
   182f0:	cmp	r6, r7
   182f4:	bhi	18448 <argp_error@@Base+0x1240>
   182f8:	cmp	r7, r6
   182fc:	beq	18488 <argp_error@@Base+0x1280>
   18300:	bl	1118c <__ctype_b_loc@plt>
   18304:	ldr	r2, [r0]
   18308:	mov	r9, r7
   1830c:	ldrb	r3, [r9, #1]!
   18310:	lsl	r3, r3, #1
   18314:	ldrh	r3, [r2, r3]
   18318:	tst	r3, #1
   1831c:	bne	1830c <argp_error@@Base+0x1104>
   18320:	b	183b0 <argp_error@@Base+0x11a8>
   18324:	str	r3, [r4, #20]
   18328:	b	18344 <argp_error@@Base+0x113c>
   1832c:	ldr	r3, [r4, #20]
   18330:	add	r3, fp, r3
   18334:	str	r3, [r4, #20]
   18338:	sub	r3, r7, r3
   1833c:	add	r8, r8, r3
   18340:	str	r8, [r4, #28]
   18344:	ldr	r3, [r4, #28]
   18348:	ldr	r2, [r4, #24]
   1834c:	sub	r3, r3, r2
   18350:	str	r3, [r4, #16]
   18354:	add	sp, sp, #20
   18358:	ldrd	r4, [sp]
   1835c:	ldrd	r6, [sp, #8]
   18360:	ldrd	r8, [sp, #16]
   18364:	ldrd	sl, [sp, #24]
   18368:	add	sp, sp, #32
   1836c:	pop	{pc}		; (ldr pc, [sp], #4)
   18370:	add	r9, r1, #1
   18374:	cmp	r9, r5
   18378:	bls	182f0 <argp_error@@Base+0x10e8>
   1837c:	cmp	r5, r1
   18380:	bhi	183ac <argp_error@@Base+0x11a4>
   18384:	sub	ip, r5, #1
   18388:	mov	r1, r3
   1838c:	cmp	r3, ip
   18390:	beq	183ac <argp_error@@Base+0x11a4>
   18394:	sub	r3, r3, #1
   18398:	ldrb	r2, [r1]
   1839c:	lsl	r2, r2, #1
   183a0:	ldrh	r2, [r0, r2]
   183a4:	tst	r2, #1
   183a8:	bne	18388 <argp_error@@Base+0x1180>
   183ac:	add	r7, r1, #1
   183b0:	add	r3, fp, #1
   183b4:	add	r3, r5, r3
   183b8:	cmp	r9, r3
   183bc:	beq	18498 <argp_error@@Base+0x1290>
   183c0:	add	r3, r7, #1
   183c4:	sub	r3, r9, r3
   183c8:	ldr	r2, [sp, #4]
   183cc:	cmp	r3, r2
   183d0:	bge	184ac <argp_error@@Base+0x12a4>
   183d4:	cmp	r9, r8
   183d8:	bcs	184ac <argp_error@@Base+0x12a4>
   183dc:	ldr	r3, [r4, #32]
   183e0:	sub	r3, r3, r8
   183e4:	ldr	r2, [sp, #4]
   183e8:	add	r2, r2, #1
   183ec:	cmp	r3, r2
   183f0:	bgt	18554 <argp_error@@Base+0x134c>
   183f4:	ldr	r0, [r4, #24]
   183f8:	cmp	r0, r7
   183fc:	bcs	18410 <argp_error@@Base+0x1208>
   18400:	ldr	r3, [r4]
   18404:	sub	r2, r7, r0
   18408:	mov	r1, #1
   1840c:	bl	110c0 <fwrite_unlocked@plt>
   18410:	ldr	r0, [r4]
   18414:	ldr	r3, [r0, #20]
   18418:	ldr	r2, [r0, #24]
   1841c:	cmp	r3, r2
   18420:	addcc	r2, r3, #1
   18424:	strcc	r2, [r0, #20]
   18428:	movcc	r2, #10
   1842c:	strbcc	r2, [r3]
   18430:	bcs	18594 <argp_error@@Base+0x138c>
   18434:	ldr	r8, [r4, #24]
   18438:	sub	r5, r5, r8
   1843c:	add	fp, fp, r5
   18440:	mov	r5, r8
   18444:	b	184bc <argp_error@@Base+0x12b4>
   18448:	add	r9, r7, #1
   1844c:	str	r6, [sp, #12]
   18450:	mov	r7, r9
   18454:	cmp	r9, r6
   18458:	beq	18480 <argp_error@@Base+0x1278>
   1845c:	bl	1118c <__ctype_b_loc@plt>
   18460:	add	r9, r9, #1
   18464:	ldrb	r3, [r7]
   18468:	ldr	r2, [r0]
   1846c:	lsl	r3, r3, #1
   18470:	ldrh	r3, [r2, r3]
   18474:	tst	r3, #1
   18478:	beq	18450 <argp_error@@Base+0x1248>
   1847c:	b	18300 <argp_error@@Base+0x10f8>
   18480:	ldr	r6, [sp, #12]
   18484:	b	182f8 <argp_error@@Base+0x10f0>
   18488:	mov	r3, #0
   1848c:	str	r3, [r4, #20]
   18490:	add	r5, r6, #1
   18494:	b	181f8 <argp_error@@Base+0xff0>
   18498:	ldr	r3, [r4, #32]
   1849c:	sub	r3, r3, r7
   184a0:	ldr	r2, [sp, #4]
   184a4:	cmp	r3, r2
   184a8:	ble	183d4 <argp_error@@Base+0x11cc>
   184ac:	mov	r3, #10
   184b0:	strb	r3, [r7], #1
   184b4:	mov	r8, r5
   184b8:	mov	r5, r7
   184bc:	ldr	r3, [r4, #12]
   184c0:	sub	r2, r9, r5
   184c4:	cmp	r2, r3
   184c8:	bge	185a0 <argp_error@@Base+0x1398>
   184cc:	add	r2, fp, #1
   184d0:	add	r2, r8, r2
   184d4:	cmp	r9, r2
   184d8:	bne	184ec <argp_error@@Base+0x12e4>
   184dc:	ldr	r2, [r4, #32]
   184e0:	sub	r2, r2, r9
   184e4:	cmp	r3, r2
   184e8:	ble	185a0 <argp_error@@Base+0x1398>
   184ec:	cmp	r3, #0
   184f0:	movgt	r6, #0
   184f4:	ble	18528 <argp_error@@Base+0x1320>
   184f8:	ldr	r0, [r4]
   184fc:	ldr	r3, [r0, #20]
   18500:	ldr	r2, [r0, #24]
   18504:	cmp	r3, r2
   18508:	addcc	r2, r3, #1
   1850c:	strcc	r2, [r0, #20]
   18510:	strbcc	sl, [r3]
   18514:	bcs	185c4 <argp_error@@Base+0x13bc>
   18518:	add	r6, r6, #1
   1851c:	ldr	r3, [r4, #12]
   18520:	cmp	r3, r6
   18524:	bgt	184f8 <argp_error@@Base+0x12f0>
   18528:	cmp	r5, r9
   1852c:	bcc	185d0 <argp_error@@Base+0x13c8>
   18530:	sub	r9, r9, r8
   18534:	sub	fp, fp, r9
   18538:	add	fp, r5, fp
   1853c:	str	fp, [r4, #28]
   18540:	ldr	r3, [r4, #12]
   18544:	cmp	r3, #0
   18548:	mvneq	r3, #0
   1854c:	str	r3, [r4, #20]
   18550:	b	181f8 <argp_error@@Base+0xff0>
   18554:	sub	r8, r8, r9
   18558:	mov	r0, r2
   1855c:	mov	r2, r8
   18560:	mov	r1, r9
   18564:	add	r0, r7, r0
   18568:	bl	1106c <memmove@plt>
   1856c:	ldr	r9, [r4, #12]
   18570:	add	r9, r9, #1
   18574:	add	r9, r7, r9
   18578:	add	r8, r9, r8
   1857c:	sub	fp, r8, r5
   18580:	mov	r3, #10
   18584:	strb	r3, [r7], #1
   18588:	mov	r8, r5
   1858c:	mov	r5, r7
   18590:	b	184bc <argp_error@@Base+0x12b4>
   18594:	mov	r1, #10
   18598:	bl	11240 <__overflow@plt>
   1859c:	b	18434 <argp_error@@Base+0x122c>
   185a0:	cmp	r3, #0
   185a4:	movgt	r3, #0
   185a8:	ble	18528 <argp_error@@Base+0x1320>
   185ac:	strb	sl, [r5], #1
   185b0:	add	r3, r3, #1
   185b4:	ldr	r2, [r4, #12]
   185b8:	cmp	r2, r3
   185bc:	bgt	185ac <argp_error@@Base+0x13a4>
   185c0:	b	18528 <argp_error@@Base+0x1320>
   185c4:	ldr	r1, [sp, #8]
   185c8:	bl	11240 <__overflow@plt>
   185cc:	b	18518 <argp_error@@Base+0x1310>
   185d0:	add	r2, r8, fp
   185d4:	sub	r2, r2, r9
   185d8:	mov	r1, r9
   185dc:	mov	r0, r5
   185e0:	bl	1106c <memmove@plt>
   185e4:	b	18530 <argp_error@@Base+0x1328>
   185e8:	mov	r1, r7
   185ec:	b	182e4 <argp_error@@Base+0x10dc>
   185f0:	sub	fp, r8, r5
   185f4:	mov	r2, fp
   185f8:	mov	r1, #10
   185fc:	mov	r0, r5
   18600:	bl	11228 <memchr@plt>
   18604:	mov	r6, r0
   18608:	b	18174 <argp_error@@Base+0xf6c>
   1860c:	str	r4, [sp, #-8]!
   18610:	str	lr, [sp, #4]
   18614:	mov	r4, r0
   18618:	bl	180e0 <argp_error@@Base+0xed8>
   1861c:	ldr	r2, [r4, #28]
   18620:	ldr	r0, [r4, #24]
   18624:	cmp	r2, r0
   18628:	bls	1863c <argp_error@@Base+0x1434>
   1862c:	ldr	r3, [r4]
   18630:	sub	r2, r2, r0
   18634:	mov	r1, #1
   18638:	bl	110c0 <fwrite_unlocked@plt>
   1863c:	ldr	r0, [r4, #24]
   18640:	bl	13288 <argp_parse@@Base+0xcd8>
   18644:	mov	r0, r4
   18648:	bl	13288 <argp_parse@@Base+0xcd8>
   1864c:	ldr	r4, [sp]
   18650:	add	sp, sp, #4
   18654:	pop	{pc}		; (ldr pc, [sp], #4)
   18658:	ldr	r3, [r0, #32]
   1865c:	ldr	r2, [r0, #28]
   18660:	sub	r3, r3, r2
   18664:	cmp	r3, r1
   18668:	bcc	18674 <argp_error@@Base+0x146c>
   1866c:	mov	r0, #1
   18670:	bx	lr
   18674:	strd	r4, [sp, #-16]!
   18678:	str	r6, [sp, #8]
   1867c:	str	lr, [sp, #12]
   18680:	mov	r5, r1
   18684:	mov	r4, r0
   18688:	bl	180e0 <argp_error@@Base+0xed8>
   1868c:	ldr	r0, [r4, #24]
   18690:	ldr	r2, [r4, #28]
   18694:	ldr	r3, [r4]
   18698:	sub	r2, r2, r0
   1869c:	mov	r1, #1
   186a0:	bl	110c0 <fwrite_unlocked@plt>
   186a4:	ldr	r2, [r4, #28]
   186a8:	ldr	r3, [r4, #24]
   186ac:	sub	r1, r2, r3
   186b0:	cmp	r1, r0
   186b4:	bne	186f4 <argp_error@@Base+0x14ec>
   186b8:	str	r3, [r4, #28]
   186bc:	mov	r2, #0
   186c0:	str	r2, [r4, #16]
   186c4:	ldr	r1, [r4, #32]
   186c8:	sub	r1, r1, r3
   186cc:	cmp	r1, r5
   186d0:	movcs	r0, #1
   186d4:	bcs	1871c <argp_error@@Base+0x1514>
   186d8:	adds	r5, r1, r5
   186dc:	bcc	1872c <argp_error@@Base+0x1524>
   186e0:	bl	111e0 <__errno_location@plt>
   186e4:	mov	r3, #12
   186e8:	str	r3, [r0]
   186ec:	mov	r0, #0
   186f0:	b	1871c <argp_error@@Base+0x1514>
   186f4:	sub	r2, r2, r0
   186f8:	str	r2, [r4, #28]
   186fc:	ldr	r1, [r4, #16]
   18700:	sub	r1, r1, r0
   18704:	str	r1, [r4, #16]
   18708:	sub	r2, r2, r3
   1870c:	add	r1, r3, r0
   18710:	mov	r0, r3
   18714:	bl	1106c <memmove@plt>
   18718:	mov	r0, #0
   1871c:	ldrd	r4, [sp]
   18720:	ldr	r6, [sp, #8]
   18724:	add	sp, sp, #12
   18728:	pop	{pc}		; (ldr pc, [sp], #4)
   1872c:	mov	r1, r5
   18730:	mov	r0, r3
   18734:	bl	13ec0 <argp_parse@@Base+0x1910>
   18738:	cmp	r0, #0
   1873c:	beq	186e0 <argp_error@@Base+0x14d8>
   18740:	str	r0, [r4, #24]
   18744:	add	r5, r0, r5
   18748:	str	r5, [r4, #32]
   1874c:	str	r0, [r4, #28]
   18750:	mov	r0, #1
   18754:	b	1871c <argp_error@@Base+0x1514>
   18758:	push	{r1, r2, r3}
   1875c:	strd	r4, [sp, #-16]!
   18760:	str	r6, [sp, #8]
   18764:	str	lr, [sp, #12]
   18768:	sub	sp, sp, #12
   1876c:	mov	r5, r0
   18770:	mov	r1, #150	; 0x96
   18774:	add	r6, sp, #32
   18778:	mov	r0, r5
   1877c:	bl	18658 <argp_error@@Base+0x1450>
   18780:	cmp	r0, #0
   18784:	beq	187b8 <argp_error@@Base+0x15b0>
   18788:	str	r6, [sp, #4]
   1878c:	ldr	r0, [r5, #28]
   18790:	ldr	r4, [r5, #32]
   18794:	sub	r4, r4, r0
   18798:	mov	r3, r6
   1879c:	ldr	r2, [sp, #28]
   187a0:	mov	r1, r4
   187a4:	bl	1127c <vsnprintf@plt>
   187a8:	cmp	r0, r4
   187ac:	bcc	187d8 <argp_error@@Base+0x15d0>
   187b0:	add	r1, r0, #1
   187b4:	b	18778 <argp_error@@Base+0x1570>
   187b8:	mvn	r0, #0
   187bc:	add	sp, sp, #12
   187c0:	ldrd	r4, [sp]
   187c4:	ldr	r6, [sp, #8]
   187c8:	ldr	lr, [sp, #12]
   187cc:	add	sp, sp, #16
   187d0:	add	sp, sp, #12
   187d4:	bx	lr
   187d8:	ldr	r2, [r5, #28]
   187dc:	add	r3, r2, r0
   187e0:	str	r3, [r5, #28]
   187e4:	b	187bc <argp_error@@Base+0x15b4>
   187e8:	cmp	r3, #0
   187ec:	cmpeq	r2, #0
   187f0:	bne	18808 <argp_error@@Base+0x1600>
   187f4:	cmp	r1, #0
   187f8:	cmpeq	r0, #0
   187fc:	mvnne	r1, #0
   18800:	mvnne	r0, #0
   18804:	b	18824 <argp_error@@Base+0x161c>
   18808:	sub	sp, sp, #8
   1880c:	push	{sp, lr}
   18810:	bl	18834 <argp_error@@Base+0x162c>
   18814:	ldr	lr, [sp, #4]
   18818:	add	sp, sp, #8
   1881c:	pop	{r2, r3}
   18820:	bx	lr
   18824:	push	{r1, lr}
   18828:	mov	r0, #8
   1882c:	bl	11018 <raise@plt>
   18830:	pop	{r1, pc}
   18834:	cmp	r1, r3
   18838:	cmpeq	r0, r2
   1883c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18840:	mov	r4, r0
   18844:	movcc	r0, #0
   18848:	mov	r5, r1
   1884c:	ldr	lr, [sp, #36]	; 0x24
   18850:	movcc	r1, r0
   18854:	bcc	18950 <argp_error@@Base+0x1748>
   18858:	cmp	r3, #0
   1885c:	clzeq	ip, r2
   18860:	clzne	ip, r3
   18864:	addeq	ip, ip, #32
   18868:	cmp	r5, #0
   1886c:	clzeq	r1, r4
   18870:	addeq	r1, r1, #32
   18874:	clzne	r1, r5
   18878:	sub	ip, ip, r1
   1887c:	sub	sl, ip, #32
   18880:	lsl	r9, r3, ip
   18884:	rsb	fp, ip, #32
   18888:	orr	r9, r9, r2, lsl sl
   1888c:	orr	r9, r9, r2, lsr fp
   18890:	lsl	r8, r2, ip
   18894:	cmp	r5, r9
   18898:	cmpeq	r4, r8
   1889c:	movcc	r0, #0
   188a0:	movcc	r1, r0
   188a4:	bcc	188c0 <argp_error@@Base+0x16b8>
   188a8:	mov	r0, #1
   188ac:	subs	r4, r4, r8
   188b0:	lsl	r1, r0, sl
   188b4:	orr	r1, r1, r0, lsr fp
   188b8:	lsl	r0, r0, ip
   188bc:	sbc	r5, r5, r9
   188c0:	cmp	ip, #0
   188c4:	beq	18950 <argp_error@@Base+0x1748>
   188c8:	lsr	r6, r8, #1
   188cc:	orr	r6, r6, r9, lsl #31
   188d0:	lsr	r7, r9, #1
   188d4:	mov	r2, ip
   188d8:	b	188fc <argp_error@@Base+0x16f4>
   188dc:	subs	r3, r4, r6
   188e0:	sbc	r8, r5, r7
   188e4:	adds	r3, r3, r3
   188e8:	adc	r8, r8, r8
   188ec:	adds	r4, r3, #1
   188f0:	adc	r5, r8, #0
   188f4:	subs	r2, r2, #1
   188f8:	beq	18918 <argp_error@@Base+0x1710>
   188fc:	cmp	r5, r7
   18900:	cmpeq	r4, r6
   18904:	bcs	188dc <argp_error@@Base+0x16d4>
   18908:	adds	r4, r4, r4
   1890c:	adc	r5, r5, r5
   18910:	subs	r2, r2, #1
   18914:	bne	188fc <argp_error@@Base+0x16f4>
   18918:	lsr	r3, r4, ip
   1891c:	orr	r3, r3, r5, lsl fp
   18920:	lsr	r2, r5, ip
   18924:	orr	r3, r3, r5, lsr sl
   18928:	adds	r0, r0, r4
   1892c:	mov	r4, r3
   18930:	lsl	r3, r2, ip
   18934:	orr	r3, r3, r4, lsl sl
   18938:	lsl	ip, r4, ip
   1893c:	orr	r3, r3, r4, lsr fp
   18940:	adc	r1, r1, r5
   18944:	subs	r0, r0, ip
   18948:	mov	r5, r2
   1894c:	sbc	r1, r1, r3
   18950:	cmp	lr, #0
   18954:	strdne	r4, [lr]
   18958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1895c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18960:	mov	r7, r0
   18964:	ldr	r6, [pc, #72]	; 189b4 <argp_error@@Base+0x17ac>
   18968:	ldr	r5, [pc, #72]	; 189b8 <argp_error@@Base+0x17b0>
   1896c:	add	r6, pc, r6
   18970:	add	r5, pc, r5
   18974:	sub	r6, r6, r5
   18978:	mov	r8, r1
   1897c:	mov	r9, r2
   18980:	bl	10fe0 <calloc@plt-0x20>
   18984:	asrs	r6, r6, #2
   18988:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1898c:	mov	r4, #0
   18990:	add	r4, r4, #1
   18994:	ldr	r3, [r5], #4
   18998:	mov	r2, r9
   1899c:	mov	r1, r8
   189a0:	mov	r0, r7
   189a4:	blx	r3
   189a8:	cmp	r6, r4
   189ac:	bne	18990 <argp_error@@Base+0x1788>
   189b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   189b4:	muleq	r1, r8, r5
   189b8:	muleq	r1, r0, r5
   189bc:	bx	lr

Disassembly of section .fini:

000189c0 <.fini>:
   189c0:	push	{r3, lr}
   189c4:	pop	{r3, pc}
