
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

000005b0 <_init>:
 5b0:	push	{r3, lr}
 5b4:	bl	66c <call_weak_fn>
 5b8:	pop	{r3, pc}

Disassembly of section .plt:

000005bc <.plt>:
 5bc:	push	{lr}		; (str lr, [sp, #-4]!)
 5c0:	ldr	lr, [pc, #4]	; 5cc <.plt+0x10>
 5c4:	add	lr, pc, lr
 5c8:	ldr	pc, [lr, #8]!
 5cc:	.word	0x00010a34

000005d0 <__cxa_finalize@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2612]!	; 0xa34

000005dc <match_esc@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2604]!	; 0xa2c

000005e8 <sendto_one@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2596]!	; 0xa24

000005f4 <collapse_esc@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2588]!	; 0xa1c

00000600 <match_ips@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2580]!	; 0xa14

0000060c <strcpy@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2572]!	; 0xa0c

00000618 <__gmon_start__@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2564]!	; 0xa04

00000624 <strlen@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2556]!	; 0x9fc

00000630 <strchr@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2548]!	; 0x9f4

0000063c <collapse@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2540]!	; 0x9ec

00000648 <match@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2532]!	; 0x9e4

00000654 <sendto_one_notice@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000660 <show_ip@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2516]!	; 0x9d4

Disassembly of section .text:

0000066c <call_weak_fn>:
 66c:	ldr	r3, [pc, #20]	; 688 <call_weak_fn+0x1c>
 670:	ldr	r2, [pc, #20]	; 68c <call_weak_fn+0x20>
 674:	add	r3, pc, r3
 678:	ldr	r2, [r3, r2]
 67c:	cmp	r2, #0
 680:	bxeq	lr
 684:	b	618 <__gmon_start__@plt>
 688:	.word	0x00010984
 68c:	.word	0x00000048

00000690 <deregister_tm_clones>:
 690:	ldr	r3, [pc, #52]	; 6cc <deregister_tm_clones+0x3c>
 694:	ldr	r0, [pc, #52]	; 6d0 <deregister_tm_clones+0x40>
 698:	add	r3, pc, r3
 69c:	add	r0, pc, r0
 6a0:	add	r3, r3, #3
 6a4:	sub	r3, r3, r0
 6a8:	cmp	r3, #6
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x44>
 6b0:	add	r3, pc, r3
 6b4:	bxls	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x48>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00010a34
 6d0:	.word	0x00010a30
 6d4:	.word	0x00010948
 6d8:	.word	0x00000044

000006dc <register_tm_clones>:
 6dc:	ldr	r1, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r0, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r1, pc, r1
 6e8:	add	r0, pc, r0
 6ec:	sub	r1, r1, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000109e8
 720:	.word	0x000109e4
 724:	.word	0x00010900
 728:	.word	0x00000054

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	5d0 <__cxa_finalize@plt>
 768:	bl	690 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x00010998
 784:	.word	0x000108c0
 788:	.word	0x00000040
 78c:	.word	0x000108f4
 790:	.word	0x00010958

00000794 <frame_dummy>:
 794:	ldr	r0, [pc, #56]	; 7d4 <frame_dummy+0x40>
 798:	ldr	r3, [pc, #56]	; 7d8 <frame_dummy+0x44>
 79c:	add	r0, pc, r0
 7a0:	ldr	r2, [r0]
 7a4:	add	r3, pc, r3
 7a8:	cmp	r2, #0
 7ac:	bne	7b4 <frame_dummy+0x20>
 7b0:	b	6dc <register_tm_clones>
 7b4:	ldr	r2, [pc, #32]	; 7dc <frame_dummy+0x48>
 7b8:	ldr	r3, [r3, r2]
 7bc:	cmp	r3, #0
 7c0:	beq	7b0 <frame_dummy+0x1c>
 7c4:	push	{r4, lr}
 7c8:	blx	r3
 7cc:	pop	{r4, lr}
 7d0:	b	6dc <register_tm_clones>
 7d4:	.word	0x00010758
 7d8:	.word	0x00010854
 7dc:	.word	0x00000050

000007e0 <mo_testmask>:
 7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7e4:	add	fp, sp, #32
 7e8:	sub	sp, sp, #60	; 0x3c
 7ec:	str	r2, [fp, #-40]	; 0xffffffd8
 7f0:	mov	r7, r3
 7f4:	ldr	r5, [fp, #4]
 7f8:	ldr	r9, [pc, #852]	; b54 <mo_testmask+0x374>
 7fc:	add	r9, pc, r9
 800:	ldr	r4, [r5, #4]
 804:	mov	r0, r4
 808:	bl	624 <strlen@plt>
 80c:	add	r0, r0, #15
 810:	bic	r0, r0, #7
 814:	sub	sp, sp, r0
 818:	add	r6, sp, #24
 81c:	mov	r1, r4
 820:	mov	r0, r6
 824:	bl	60c <strcpy@plt>
 828:	mov	r0, r6
 82c:	bl	63c <collapse@plt>
 830:	mov	r1, #64	; 0x40
 834:	mov	r0, r6
 838:	bl	630 <strchr@plt>
 83c:	subs	r4, r0, #0
 840:	beq	910 <mo_testmask+0x130>
 844:	add	sl, r4, #1
 848:	mov	r3, #0
 84c:	strb	r3, [r4]
 850:	mov	r1, #33	; 0x21
 854:	mov	r0, r6
 858:	bl	630 <strchr@plt>
 85c:	cmp	r0, #0
 860:	addne	r8, r0, #1
 864:	movne	r3, #0
 868:	strbne	r3, [r0]
 86c:	moveq	r8, r6
 870:	moveq	r6, r0
 874:	cmp	r8, #0
 878:	beq	924 <mo_testmask+0x144>
 87c:	ldrb	r3, [r8]
 880:	cmp	sl, #0
 884:	cmpne	r3, #0
 888:	beq	924 <mo_testmask+0x144>
 88c:	ldrb	r3, [r4, #1]
 890:	cmp	r3, #0
 894:	beq	924 <mo_testmask+0x144>
 898:	cmp	r7, #2
 89c:	movle	r3, #0
 8a0:	strle	r3, [fp, #-44]	; 0xffffffd4
 8a4:	ble	8c8 <mo_testmask+0xe8>
 8a8:	ldr	r4, [r5, #8]
 8ac:	cmp	r4, #0
 8b0:	beq	974 <mo_testmask+0x194>
 8b4:	ldrb	r3, [r4]
 8b8:	cmp	r3, #0
 8bc:	moveq	r3, #0
 8c0:	streq	r3, [fp, #-44]	; 0xffffffd4
 8c4:	bne	93c <mo_testmask+0x15c>
 8c8:	ldr	r3, [pc, #648]	; b58 <mo_testmask+0x378>
 8cc:	ldr	r3, [r9, r3]
 8d0:	ldr	r4, [r3]
 8d4:	cmp	r4, #0
 8d8:	beq	acc <mo_testmask+0x2ec>
 8dc:	mov	r3, #0
 8e0:	str	r3, [fp, #-48]	; 0xffffffd0
 8e4:	str	r3, [fp, #-56]	; 0xffffffc8
 8e8:	ldr	r3, [pc, #620]	; b5c <mo_testmask+0x37c>
 8ec:	add	r3, pc, r3
 8f0:	str	r3, [fp, #-64]	; 0xffffffc0
 8f4:	ldr	r3, [pc, #612]	; b60 <mo_testmask+0x380>
 8f8:	add	r3, pc, r3
 8fc:	str	r3, [fp, #-52]	; 0xffffffcc
 900:	ldr	r3, [pc, #604]	; b64 <mo_testmask+0x384>
 904:	add	r3, pc, r3
 908:	str	r3, [fp, #-60]	; 0xffffffc4
 90c:	b	9a4 <mo_testmask+0x1c4>
 910:	ldr	r1, [pc, #592]	; b68 <mo_testmask+0x388>
 914:	add	r1, pc, r1
 918:	ldr	r0, [fp, #-40]	; 0xffffffd8
 91c:	bl	654 <sendto_one_notice@plt>
 920:	b	934 <mo_testmask+0x154>
 924:	ldr	r1, [pc, #576]	; b6c <mo_testmask+0x38c>
 928:	add	r1, pc, r1
 92c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 930:	bl	654 <sendto_one_notice@plt>
 934:	sub	sp, fp, #32
 938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 93c:	mov	r0, r4
 940:	bl	624 <strlen@plt>
 944:	add	r3, r0, #15
 948:	bic	r3, r3, #7
 94c:	sub	sp, sp, r3
 950:	add	r3, sp, #24
 954:	str	r3, [fp, #-44]	; 0xffffffd4
 958:	mov	r1, r4
 95c:	mov	r4, r3
 960:	mov	r0, r3
 964:	bl	60c <strcpy@plt>
 968:	mov	r0, r4
 96c:	bl	5f4 <collapse_esc@plt>
 970:	b	8c8 <mo_testmask+0xe8>
 974:	mov	r3, #0
 978:	str	r3, [fp, #-44]	; 0xffffffd4
 97c:	b	8c8 <mo_testmask+0xe8>
 980:	ldr	r7, [fp, #-64]	; 0xffffffc0
 984:	add	r1, r5, #152	; 0x98
 988:	mov	r0, r8
 98c:	bl	648 <match@plt>
 990:	cmp	r0, #0
 994:	bne	9f8 <mo_testmask+0x218>
 998:	ldr	r4, [r4, #8]
 99c:	cmp	r4, #0
 9a0:	beq	ad8 <mo_testmask+0x2f8>
 9a4:	ldr	r5, [r4]
 9a8:	ldrh	r3, [r5, #80]	; 0x50
 9ac:	cmp	r3, #64	; 0x40
 9b0:	bne	998 <mo_testmask+0x1b8>
 9b4:	ldr	r3, [r5, #24]
 9b8:	cmp	r3, #0
 9bc:	beq	998 <mo_testmask+0x1b8>
 9c0:	add	r3, r5, #288	; 0x120
 9c4:	adds	r7, r3, #3
 9c8:	beq	980 <mo_testmask+0x1a0>
 9cc:	ldrb	r3, [r5, #291]	; 0x123
 9d0:	cmp	r3, #0
 9d4:	ldreq	r7, [fp, #-52]	; 0xffffffcc
 9d8:	beq	984 <mo_testmask+0x1a4>
 9dc:	mov	r1, r5
 9e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
 9e4:	bl	660 <show_ip@plt>
 9e8:	cmp	r0, #0
 9ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
 9f0:	moveq	r7, r3
 9f4:	b	984 <mo_testmask+0x1a4>
 9f8:	add	r1, r5, #163	; 0xa3
 9fc:	mov	r0, sl
 a00:	bl	648 <match@plt>
 a04:	cmp	r0, #0
 a08:	beq	a7c <mo_testmask+0x29c>
 a0c:	cmp	r6, #0
 a10:	beq	a28 <mo_testmask+0x248>
 a14:	add	r1, r5, #88	; 0x58
 a18:	mov	r0, r6
 a1c:	bl	648 <match@plt>
 a20:	cmp	r0, #0
 a24:	beq	998 <mo_testmask+0x1b8>
 a28:	ldr	r3, [fp, #-44]	; 0xffffffd4
 a2c:	cmp	r3, #0
 a30:	beq	a4c <mo_testmask+0x26c>
 a34:	add	r1, r5, #344	; 0x158
 a38:	add	r1, r1, #1
 a3c:	mov	r0, r3
 a40:	bl	5dc <match_esc@plt>
 a44:	cmp	r0, #0
 a48:	beq	998 <mo_testmask+0x1b8>
 a4c:	ldrd	r2, [r5, #64]	; 0x40
 a50:	and	r2, r2, #8192	; 0x2000
 a54:	mov	r3, #0
 a58:	orrs	r3, r2, r3
 a5c:	beq	a6c <mo_testmask+0x28c>
 a60:	ldrh	r3, [r5, #80]	; 0x50
 a64:	cmp	r3, #64	; 0x40
 a68:	beq	abc <mo_testmask+0x2dc>
 a6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 a70:	add	r3, r3, #1
 a74:	str	r3, [fp, #-48]	; 0xffffffd0
 a78:	b	998 <mo_testmask+0x1b8>
 a7c:	add	r1, r5, #227	; 0xe3
 a80:	mov	r0, sl
 a84:	bl	648 <match@plt>
 a88:	cmp	r0, #0
 a8c:	bne	a0c <mo_testmask+0x22c>
 a90:	mov	r1, r7
 a94:	mov	r0, sl
 a98:	bl	648 <match@plt>
 a9c:	cmp	r0, #0
 aa0:	bne	a0c <mo_testmask+0x22c>
 aa4:	mov	r1, r7
 aa8:	mov	r0, sl
 aac:	bl	600 <match_ips@plt>
 ab0:	cmp	r0, #0
 ab4:	beq	998 <mo_testmask+0x1b8>
 ab8:	b	a0c <mo_testmask+0x22c>
 abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
 ac0:	add	r3, r3, #1
 ac4:	str	r3, [fp, #-56]	; 0xffffffc8
 ac8:	b	998 <mo_testmask+0x1b8>
 acc:	mov	r3, #0
 ad0:	str	r3, [fp, #-48]	; 0xffffffd0
 ad4:	str	r3, [fp, #-56]	; 0xffffffc8
 ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 adc:	add	r3, r3, #88	; 0x58
 ae0:	cmp	r6, #0
 ae4:	beq	b38 <mo_testmask+0x358>
 ae8:	ldr	r2, [fp, #-44]	; 0xffffffd4
 aec:	cmp	r2, #0
 af0:	beq	b44 <mo_testmask+0x364>
 af4:	ldr	r2, [pc, #116]	; b70 <mo_testmask+0x390>
 af8:	ldr	r2, [r9, r2]
 afc:	ldr	r1, [fp, #-44]	; 0xffffffd4
 b00:	str	r1, [sp, #20]
 b04:	str	sl, [sp, #16]
 b08:	str	r8, [sp, #12]
 b0c:	str	r6, [sp, #8]
 b10:	ldr	r1, [fp, #-48]	; 0xffffffd0
 b14:	str	r1, [sp, #4]
 b18:	ldr	r1, [fp, #-56]	; 0xffffffc8
 b1c:	str	r1, [sp]
 b20:	add	r2, r2, #88	; 0x58
 b24:	ldr	r1, [pc, #72]	; b74 <mo_testmask+0x394>
 b28:	add	r1, pc, r1
 b2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 b30:	bl	5e8 <sendto_one@plt>
 b34:	b	934 <mo_testmask+0x154>
 b38:	ldr	r6, [pc, #56]	; b78 <mo_testmask+0x398>
 b3c:	add	r6, pc, r6
 b40:	b	ae8 <mo_testmask+0x308>
 b44:	ldr	r2, [pc, #48]	; b7c <mo_testmask+0x39c>
 b48:	add	r2, pc, r2
 b4c:	str	r2, [fp, #-44]	; 0xffffffd4
 b50:	b	af4 <mo_testmask+0x314>
 b54:	.word	0x000107fc
 b58:	.word	0x0000004c
 b5c:	.word	0x000002f0
 b60:	.word	0x000002e4
 b64:	.word	0x000002e8
 b68:	.word	0x000002e0
 b6c:	.word	0x000002cc
 b70:	.word	0x00000058
 b74:	.word	0x000000e0
 b78:	.word	0x000000b4
 b7c:	.word	0x000000a8

Disassembly of section .fini:

00000b80 <_fini>:
 b80:	push	{r3, lr}
 b84:	pop	{r3, pc}
