
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010fc8 <.init>:
   10fc8:	push	{r3, lr}
   10fcc:	bl	114bc <putchar_unlocked@plt+0x180>
   10fd0:	pop	{r3, pc}

Disassembly of section .plt:

00010fd4 <calloc@plt-0x14>:
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	ldr	lr, [pc, #4]	; 10fe4 <calloc@plt-0x4>
   10fdc:	add	lr, pc, lr
   10fe0:	ldr	pc, [lr, #8]!
   10fe4:	andeq	r7, r1, ip, lsl r0

00010fe8 <calloc@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #28]!

00010ff4 <fputs_unlocked@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #20]!

00011000 <raise@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #12]!

0001100c <gmtime_r@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #4]!

00011018 <strcmp@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #4092]!	; 0xffc

00011024 <mktime@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #4084]!	; 0xff4

00011030 <fflush@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #4076]!	; 0xfec

0001103c <utmpxname@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #4068]!	; 0xfe4

00011048 <free@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #4060]!	; 0xfdc

00011054 <_exit@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011060 <memcpy@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001106c <mbsinit@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #4036]!	; 0xfc4

00011078 <time@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #4028]!	; 0xfbc

00011084 <memcmp@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011090 <fputc_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #4012]!	; 0xfac

0001109c <dcgettext@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a8 <setutxent@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b4 <realloc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #90112	; 0x16000
   110bc:	ldr	pc, [ip, #3988]!	; 0xf94

000110c0 <localtime_r@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #90112	; 0x16000
   110c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110cc <textdomain@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #90112	; 0x16000
   110d4:	ldr	pc, [ip, #3972]!	; 0xf84

000110d8 <iswprint@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #90112	; 0x16000
   110e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e4 <tzset@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #90112	; 0x16000
   110ec:	ldr	pc, [ip, #3956]!	; 0xf74

000110f0 <fwrite@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #90112	; 0x16000
   110f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110fc <lseek64@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #90112	; 0x16000
   11104:	ldr	pc, [ip, #3940]!	; 0xf64

00011108 <__ctype_get_mb_cur_max@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #90112	; 0x16000
   11110:	ldr	pc, [ip, #3932]!	; 0xf5c

00011114 <__fpending@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #90112	; 0x16000
   1111c:	ldr	pc, [ip, #3924]!	; 0xf54

00011120 <ferror_unlocked@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #90112	; 0x16000
   11128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001112c <mbrtowc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #90112	; 0x16000
   11134:	ldr	pc, [ip, #3908]!	; 0xf44

00011138 <error@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #90112	; 0x16000
   11140:	ldr	pc, [ip, #3900]!	; 0xf3c

00011144 <getenv@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #90112	; 0x16000
   1114c:	ldr	pc, [ip, #3892]!	; 0xf34

00011150 <malloc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #90112	; 0x16000
   11158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001115c <__libc_start_main@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #90112	; 0x16000
   11164:	ldr	pc, [ip, #3876]!	; 0xf24

00011168 <strftime@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #90112	; 0x16000
   11170:	ldr	pc, [ip, #3868]!	; 0xf1c

00011174 <__freading@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #90112	; 0x16000
   1117c:	ldr	pc, [ip, #3860]!	; 0xf14

00011180 <localtime@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001118c <__ctype_tolower_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3844]!	; 0xf04

00011198 <__ctype_toupper_loc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3836]!	; 0xefc

000111a4 <__gmon_start__@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3828]!	; 0xef4

000111b0 <getopt_long@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #90112	; 0x16000
   111b8:	ldr	pc, [ip, #3820]!	; 0xeec

000111bc <kill@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #90112	; 0x16000
   111c4:	ldr	pc, [ip, #3812]!	; 0xee4

000111c8 <__ctype_b_loc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #90112	; 0x16000
   111d0:	ldr	pc, [ip, #3804]!	; 0xedc

000111d4 <exit@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #90112	; 0x16000
   111dc:	ldr	pc, [ip, #3796]!	; 0xed4

000111e0 <strlen@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #90112	; 0x16000
   111e8:	ldr	pc, [ip, #3788]!	; 0xecc

000111ec <setenv@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #90112	; 0x16000
   111f4:	ldr	pc, [ip, #3780]!	; 0xec4

000111f8 <__errno_location@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #90112	; 0x16000
   11200:	ldr	pc, [ip, #3772]!	; 0xebc

00011204 <__cxa_atexit@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #90112	; 0x16000
   1120c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011210 <memset@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #90112	; 0x16000
   11218:	ldr	pc, [ip, #3756]!	; 0xeac

0001121c <strncpy@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #90112	; 0x16000
   11224:	ldr	pc, [ip, #3748]!	; 0xea4

00011228 <__printf_chk@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #90112	; 0x16000
   11230:	ldr	pc, [ip, #3740]!	; 0xe9c

00011234 <fileno@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #90112	; 0x16000
   1123c:	ldr	pc, [ip, #3732]!	; 0xe94

00011240 <__fprintf_chk@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #90112	; 0x16000
   11248:	ldr	pc, [ip, #3724]!	; 0xe8c

0001124c <fclose@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #90112	; 0x16000
   11254:	ldr	pc, [ip, #3716]!	; 0xe84

00011258 <fseeko64@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #90112	; 0x16000
   11260:	ldr	pc, [ip, #3708]!	; 0xe7c

00011264 <getloadavg@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #90112	; 0x16000
   1126c:	ldr	pc, [ip, #3700]!	; 0xe74

00011270 <strtod_l@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #90112	; 0x16000
   11278:	ldr	pc, [ip, #3692]!	; 0xe6c

0001127c <endutxent@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #90112	; 0x16000
   11284:	ldr	pc, [ip, #3684]!	; 0xe64

00011288 <setlocale@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #90112	; 0x16000
   11290:	ldr	pc, [ip, #3676]!	; 0xe5c

00011294 <strrchr@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #90112	; 0x16000
   1129c:	ldr	pc, [ip, #3668]!	; 0xe54

000112a0 <nl_langinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #90112	; 0x16000
   112a8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112ac <fputc@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #90112	; 0x16000
   112b4:	ldr	pc, [ip, #3652]!	; 0xe44

000112b8 <newlocale@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #90112	; 0x16000
   112c0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c4 <timegm@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #90112	; 0x16000
   112cc:	ldr	pc, [ip, #3636]!	; 0xe34

000112d0 <fopen64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #90112	; 0x16000
   112d8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112dc <fgets_unlocked@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #90112	; 0x16000
   112e4:	ldr	pc, [ip, #3620]!	; 0xe24

000112e8 <bindtextdomain@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #90112	; 0x16000
   112f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000112f4 <unsetenv@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #90112	; 0x16000
   112fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011300 <fputs@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #90112	; 0x16000
   11308:	ldr	pc, [ip, #3596]!	; 0xe0c

0001130c <strncmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #90112	; 0x16000
   11314:	ldr	pc, [ip, #3588]!	; 0xe04

00011318 <abort@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #90112	; 0x16000
   11320:	ldr	pc, [ip, #3580]!	; 0xdfc

00011324 <getutxent@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #90112	; 0x16000
   1132c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011330 <dcngettext@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #90112	; 0x16000
   11338:	ldr	pc, [ip, #3564]!	; 0xdec

0001133c <putchar_unlocked@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #90112	; 0x16000
   11344:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011348 <.text>:
   11348:	push	{r7, lr}
   1134c:	mov	r4, r0
   11350:	sub	sp, sp, #32
   11354:	ldr	r0, [r1]
   11358:	mov	r6, r1
   1135c:	bl	138a0 <putchar_unlocked@plt+0x2564>
   11360:	ldr	r1, [pc, #224]	; 11448 <putchar_unlocked@plt+0x10c>
   11364:	mov	r0, #6
   11368:	bl	11288 <setlocale@plt>
   1136c:	ldr	r1, [pc, #216]	; 1144c <putchar_unlocked@plt+0x110>
   11370:	ldr	r0, [pc, #216]	; 11450 <putchar_unlocked@plt+0x114>
   11374:	bl	112e8 <bindtextdomain@plt>
   11378:	ldr	r0, [pc, #208]	; 11450 <putchar_unlocked@plt+0x114>
   1137c:	bl	110cc <textdomain@plt>
   11380:	ldr	r0, [pc, #204]	; 11454 <putchar_unlocked@plt+0x118>
   11384:	bl	16654 <putchar_unlocked@plt+0x5318>
   11388:	ldr	r3, [pc, #200]	; 11458 <putchar_unlocked@plt+0x11c>
   1138c:	mov	r5, #0
   11390:	str	r3, [sp, #20]
   11394:	ldr	r3, [pc, #192]	; 1145c <putchar_unlocked@plt+0x120>
   11398:	mov	r7, #1
   1139c:	str	r3, [sp, #16]
   113a0:	ldr	r3, [pc, #184]	; 11460 <putchar_unlocked@plt+0x124>
   113a4:	str	r5, [sp, #24]
   113a8:	str	r3, [sp, #12]
   113ac:	ldr	r3, [pc, #176]	; 11464 <putchar_unlocked@plt+0x128>
   113b0:	str	r7, [sp, #4]
   113b4:	str	r3, [sp, #8]
   113b8:	ldr	r3, [pc, #168]	; 11468 <putchar_unlocked@plt+0x12c>
   113bc:	ldr	r8, [pc, #168]	; 1146c <putchar_unlocked@plt+0x130>
   113c0:	mov	r0, r4
   113c4:	ldr	r3, [r3]
   113c8:	ldr	r2, [pc, #160]	; 11470 <putchar_unlocked@plt+0x134>
   113cc:	str	r3, [sp]
   113d0:	mov	r1, r6
   113d4:	ldr	r3, [pc, #152]	; 11474 <putchar_unlocked@plt+0x138>
   113d8:	bl	137d8 <putchar_unlocked@plt+0x249c>
   113dc:	ldr	r3, [r8]
   113e0:	subs	r4, r4, r3
   113e4:	beq	11430 <putchar_unlocked@plt+0xf4>
   113e8:	cmp	r4, r7
   113ec:	beq	1143c <putchar_unlocked@plt+0x100>
   113f0:	mov	r2, #5
   113f4:	ldr	r1, [pc, #124]	; 11478 <putchar_unlocked@plt+0x13c>
   113f8:	mov	r0, r5
   113fc:	bl	1109c <dcgettext@plt>
   11400:	ldr	r3, [r8]
   11404:	add	r3, r3, #1
   11408:	mov	r4, r0
   1140c:	ldr	r0, [r6, r3, lsl #2]
   11410:	bl	14ed0 <putchar_unlocked@plt+0x3b94>
   11414:	mov	r2, r4
   11418:	mov	r1, r5
   1141c:	mov	r3, r0
   11420:	mov	r0, r5
   11424:	bl	11138 <error@plt>
   11428:	mov	r0, r7
   1142c:	bl	1195c <putchar_unlocked@plt+0x620>
   11430:	ldr	r0, [pc, #68]	; 1147c <putchar_unlocked@plt+0x140>
   11434:	mov	r1, r7
   11438:	bl	118f4 <putchar_unlocked@plt+0x5b8>
   1143c:	mov	r1, r5
   11440:	ldr	r0, [r6, r3, lsl #2]
   11444:	b	11438 <putchar_unlocked@plt+0xfc>
   11448:	strdeq	r6, [r1], -ip
   1144c:	andeq	r6, r1, r2, ror #20
   11450:			; <UNDEFINED> instruction: 0x000169bf
   11454:	andeq	r1, r1, r4, ror #24
   11458:	andeq	r6, r1, sl, ror sl
   1145c:	andeq	r6, r1, r6, lsl #21
   11460:	muleq	r1, r6, sl
   11464:	andeq	r1, r1, ip, asr r9
   11468:	andeq	r8, r2, r8, lsr r1
   1146c:	andeq	r8, r2, r8, lsl #3
   11470:			; <UNDEFINED> instruction: 0x000166b6
   11474:			; <UNDEFINED> instruction: 0x000169bb
   11478:	andeq	r6, r1, r7, lsr #21
   1147c:	andeq	r6, r1, fp, lsl #18
   11480:	mov	fp, #0
   11484:	mov	lr, #0
   11488:	pop	{r1}		; (ldr r1, [sp], #4)
   1148c:	mov	r2, sp
   11490:	push	{r2}		; (str r2, [sp, #-4]!)
   11494:	push	{r0}		; (str r0, [sp, #-4]!)
   11498:	ldr	ip, [pc, #16]	; 114b0 <putchar_unlocked@plt+0x174>
   1149c:	push	{ip}		; (str ip, [sp, #-4]!)
   114a0:	ldr	r0, [pc, #12]	; 114b4 <putchar_unlocked@plt+0x178>
   114a4:	ldr	r3, [pc, #12]	; 114b8 <putchar_unlocked@plt+0x17c>
   114a8:	bl	1115c <__libc_start_main@plt>
   114ac:	bl	11318 <abort@plt>
   114b0:	andeq	r6, r1, r0, asr r6
   114b4:	andeq	r1, r1, r8, asr #6
   114b8:	strdeq	r6, [r1], -r0
   114bc:	ldr	r3, [pc, #20]	; 114d8 <putchar_unlocked@plt+0x19c>
   114c0:	ldr	r2, [pc, #20]	; 114dc <putchar_unlocked@plt+0x1a0>
   114c4:	add	r3, pc, r3
   114c8:	ldr	r2, [r3, r2]
   114cc:	cmp	r2, #0
   114d0:	bxeq	lr
   114d4:	b	111a4 <__gmon_start__@plt>
   114d8:	andeq	r6, r1, r4, lsr fp
   114dc:	andeq	r0, r0, ip, lsr #2
   114e0:	ldr	r3, [pc, #28]	; 11504 <putchar_unlocked@plt+0x1c8>
   114e4:	ldr	r0, [pc, #28]	; 11508 <putchar_unlocked@plt+0x1cc>
   114e8:	sub	r3, r3, r0
   114ec:	cmp	r3, #6
   114f0:	bxls	lr
   114f4:	ldr	r3, [pc, #16]	; 1150c <putchar_unlocked@plt+0x1d0>
   114f8:	cmp	r3, #0
   114fc:	bxeq	lr
   11500:	bx	r3
   11504:	andeq	r8, r2, r3, lsl #3
   11508:	andeq	r8, r2, r0, lsl #3
   1150c:	andeq	r0, r0, r0
   11510:	ldr	r1, [pc, #36]	; 1153c <putchar_unlocked@plt+0x200>
   11514:	ldr	r0, [pc, #36]	; 11540 <putchar_unlocked@plt+0x204>
   11518:	sub	r1, r1, r0
   1151c:	asr	r1, r1, #2
   11520:	add	r1, r1, r1, lsr #31
   11524:	asrs	r1, r1, #1
   11528:	bxeq	lr
   1152c:	ldr	r3, [pc, #16]	; 11544 <putchar_unlocked@plt+0x208>
   11530:	cmp	r3, #0
   11534:	bxeq	lr
   11538:	bx	r3
   1153c:	andeq	r8, r2, r0, lsl #3
   11540:	andeq	r8, r2, r0, lsl #3
   11544:	andeq	r0, r0, r0
   11548:	push	{r4, lr}
   1154c:	ldr	r4, [pc, #24]	; 1156c <putchar_unlocked@plt+0x230>
   11550:	ldrb	r3, [r4]
   11554:	cmp	r3, #0
   11558:	popne	{r4, pc}
   1155c:	bl	114e0 <putchar_unlocked@plt+0x1a4>
   11560:	mov	r3, #1
   11564:	strb	r3, [r4]
   11568:	pop	{r4, pc}
   1156c:	muleq	r2, ip, r1
   11570:	ldr	r0, [pc, #40]	; 115a0 <putchar_unlocked@plt+0x264>
   11574:	ldr	r3, [r0]
   11578:	cmp	r3, #0
   1157c:	bne	11584 <putchar_unlocked@plt+0x248>
   11580:	b	11510 <putchar_unlocked@plt+0x1d4>
   11584:	ldr	r3, [pc, #24]	; 115a4 <putchar_unlocked@plt+0x268>
   11588:	cmp	r3, #0
   1158c:	beq	11580 <putchar_unlocked@plt+0x244>
   11590:	push	{r4, lr}
   11594:	blx	r3
   11598:	pop	{r4, lr}
   1159c:	b	11510 <putchar_unlocked@plt+0x1d4>
   115a0:	andeq	r7, r2, r4, lsl pc
   115a4:	andeq	r0, r0, r0
   115a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115ac:	sub	sp, sp, #8192	; 0x2000
   115b0:	sub	sp, sp, #16
   115b4:	mov	r8, r0
   115b8:	mov	r6, r1
   115bc:	ldr	r0, [pc, #748]	; 118b0 <putchar_unlocked@plt+0x574>
   115c0:	ldr	r1, [pc, #748]	; 118b4 <putchar_unlocked@plt+0x578>
   115c4:	bl	112d0 <fopen64@plt>
   115c8:	subs	r5, r0, #0
   115cc:	moveq	r4, r5
   115d0:	beq	11634 <putchar_unlocked@plt+0x2f8>
   115d4:	add	r7, sp, #16
   115d8:	mov	r2, r5
   115dc:	mov	r1, #8192	; 0x2000
   115e0:	mov	r0, r7
   115e4:	bl	112dc <fgets_unlocked@plt>
   115e8:	cmp	r0, r7
   115ec:	mov	r4, r0
   115f0:	bne	11698 <putchar_unlocked@plt+0x35c>
   115f4:	sub	r1, r0, #4
   115f8:	bl	11bd8 <putchar_unlocked@plt+0x89c>
   115fc:	ldr	r3, [r4, #-4]
   11600:	cmp	r3, r4
   11604:	beq	11698 <putchar_unlocked@plt+0x35c>
   11608:	vcmpe.f64	d0, #0.0
   1160c:	vmrs	APSR_nzcv, fpscr
   11610:	blt	11690 <putchar_unlocked@plt+0x354>
   11614:	vldr	d7, [pc, #652]	; 118a8 <putchar_unlocked@plt+0x56c>
   11618:	vcmpe.f64	d0, d7
   1161c:	vmrs	APSR_nzcv, fpscr
   11620:	bpl	11690 <putchar_unlocked@plt+0x354>
   11624:	vcvt.s32.f64	s15, d0
   11628:	vmov	r4, s15
   1162c:	mov	r0, r5
   11630:	bl	11d48 <putchar_unlocked@plt+0xa0c>
   11634:	mov	r5, #0
   11638:	mov	r7, r5
   1163c:	mov	r1, r5
   11640:	subs	r8, r8, #1
   11644:	bcs	116a0 <putchar_unlocked@plt+0x364>
   11648:	mov	r0, #0
   1164c:	bl	11078 <time@plt>
   11650:	cmp	r4, #0
   11654:	str	r0, [sp, #12]
   11658:	bne	116d0 <putchar_unlocked@plt+0x394>
   1165c:	cmp	r5, #0
   11660:	subne	r4, r0, r5
   11664:	bne	116d0 <putchar_unlocked@plt+0x394>
   11668:	bl	111f8 <__errno_location@plt>
   1166c:	mov	r2, #5
   11670:	ldr	r1, [pc, #576]	; 118b8 <putchar_unlocked@plt+0x57c>
   11674:	ldr	r4, [r0]
   11678:	mov	r0, r5
   1167c:	bl	1109c <dcgettext@plt>
   11680:	mov	r1, r4
   11684:	mov	r2, r0
   11688:	mov	r0, #1
   1168c:	bl	11138 <error@plt>
   11690:	mvn	r4, #0
   11694:	b	1162c <putchar_unlocked@plt+0x2f0>
   11698:	mov	r4, #0
   1169c:	b	1162c <putchar_unlocked@plt+0x2f0>
   116a0:	ldrb	r3, [r6, #44]	; 0x2c
   116a4:	cmp	r3, #0
   116a8:	ldrsh	r3, [r6]
   116ac:	moveq	r2, r1
   116b0:	add	r6, r6, #384	; 0x180
   116b4:	subne	r2, r3, #7
   116b8:	clzne	r2, r2
   116bc:	lsrne	r2, r2, #5
   116c0:	cmp	r3, #2
   116c4:	add	r7, r7, r2
   116c8:	ldreq	r5, [r6, #-44]	; 0xffffffd4
   116cc:	b	11640 <putchar_unlocked@plt+0x304>
   116d0:	ldr	r1, [pc, #484]	; 118bc <putchar_unlocked@plt+0x580>
   116d4:	mov	r0, r4
   116d8:	bl	163a0 <putchar_unlocked@plt+0x5064>
   116dc:	ldr	r6, [pc, #476]	; 118c0 <putchar_unlocked@plt+0x584>
   116e0:	mov	r1, #3600	; 0xe10
   116e4:	mla	r6, r6, r0, r4
   116e8:	mov	r5, r0
   116ec:	mov	r0, r6
   116f0:	bl	163a0 <putchar_unlocked@plt+0x5064>
   116f4:	mov	r1, #60	; 0x3c
   116f8:	mov	r8, r0
   116fc:	ldr	r0, [pc, #448]	; 118c4 <putchar_unlocked@plt+0x588>
   11700:	mla	r0, r0, r8, r6
   11704:	bl	163a0 <putchar_unlocked@plt+0x5064>
   11708:	mov	r6, r0
   1170c:	add	r0, sp, #12
   11710:	bl	11180 <localtime@plt>
   11714:	subs	sl, r0, #0
   11718:	beq	117c8 <putchar_unlocked@plt+0x48c>
   1171c:	ldr	r3, [pc, #420]	; 118c8 <putchar_unlocked@plt+0x58c>
   11720:	mov	r2, #5
   11724:	ldr	r1, [pc, #416]	; 118cc <putchar_unlocked@plt+0x590>
   11728:	mov	r0, #0
   1172c:	ldr	r9, [r3]
   11730:	bl	1109c <dcgettext@plt>
   11734:	mov	r3, #0
   11738:	str	r3, [sp]
   1173c:	mov	r2, sl
   11740:	mov	r1, r0
   11744:	mov	r0, r9
   11748:	bl	1364c <putchar_unlocked@plt+0x2310>
   1174c:	cmn	r4, #1
   11750:	bne	117e4 <putchar_unlocked@plt+0x4a8>
   11754:	ldr	r1, [pc, #372]	; 118d0 <putchar_unlocked@plt+0x594>
   11758:	mov	r2, #5
   1175c:	mov	r0, #0
   11760:	bl	1109c <dcgettext@plt>
   11764:	mov	r1, r0
   11768:	mov	r0, #1
   1176c:	bl	11228 <__printf_chk@plt>
   11770:	mov	r5, #5
   11774:	mov	r3, r7
   11778:	ldr	r2, [pc, #340]	; 118d4 <putchar_unlocked@plt+0x598>
   1177c:	ldr	r1, [pc, #340]	; 118d8 <putchar_unlocked@plt+0x59c>
   11780:	str	r5, [sp]
   11784:	mov	r0, #0
   11788:	bl	11330 <dcngettext@plt>
   1178c:	mov	r2, r7
   11790:	mov	r1, r0
   11794:	mov	r0, #1
   11798:	bl	11228 <__printf_chk@plt>
   1179c:	mov	r1, #3
   117a0:	add	r0, sp, #16
   117a4:	bl	11264 <getloadavg@plt>
   117a8:	cmn	r0, #1
   117ac:	mov	r4, r0
   117b0:	bne	1184c <putchar_unlocked@plt+0x510>
   117b4:	mov	r0, #10
   117b8:	bl	1133c <putchar_unlocked@plt>
   117bc:	add	sp, sp, #8192	; 0x2000
   117c0:	add	sp, sp, #16
   117c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117c8:	mov	r2, #5
   117cc:	ldr	r1, [pc, #264]	; 118dc <putchar_unlocked@plt+0x5a0>
   117d0:	bl	1109c <dcgettext@plt>
   117d4:	mov	r1, r0
   117d8:	mov	r0, #1
   117dc:	bl	11228 <__printf_chk@plt>
   117e0:	b	1174c <putchar_unlocked@plt+0x410>
   117e4:	cmp	r5, #0
   117e8:	ble	11824 <putchar_unlocked@plt+0x4e8>
   117ec:	mov	r3, #5
   117f0:	str	r3, [sp]
   117f4:	ldr	r2, [pc, #228]	; 118e0 <putchar_unlocked@plt+0x5a4>
   117f8:	mov	r3, r5
   117fc:	ldr	r1, [pc, #224]	; 118e4 <putchar_unlocked@plt+0x5a8>
   11800:	mov	r0, #0
   11804:	bl	11330 <dcngettext@plt>
   11808:	str	r6, [sp]
   1180c:	mov	r3, r8
   11810:	mov	r2, r5
   11814:	mov	r1, r0
   11818:	mov	r0, #1
   1181c:	bl	11228 <__printf_chk@plt>
   11820:	b	11770 <putchar_unlocked@plt+0x434>
   11824:	mov	r2, #5
   11828:	ldr	r1, [pc, #184]	; 118e8 <putchar_unlocked@plt+0x5ac>
   1182c:	mov	r0, #0
   11830:	bl	1109c <dcgettext@plt>
   11834:	mov	r3, r6
   11838:	mov	r2, r8
   1183c:	mov	r1, r0
   11840:	mov	r0, #1
   11844:	bl	11228 <__printf_chk@plt>
   11848:	b	11770 <putchar_unlocked@plt+0x434>
   1184c:	cmp	r0, #0
   11850:	ble	117bc <putchar_unlocked@plt+0x480>
   11854:	mov	r2, r5
   11858:	ldr	r1, [pc, #140]	; 118ec <putchar_unlocked@plt+0x5b0>
   1185c:	mov	r0, #0
   11860:	bl	1109c <dcgettext@plt>
   11864:	ldrd	r2, [sp, #16]
   11868:	mov	r1, r0
   1186c:	mov	r0, #1
   11870:	bl	11228 <__printf_chk@plt>
   11874:	cmp	r4, #1
   11878:	beq	117b4 <putchar_unlocked@plt+0x478>
   1187c:	ldrd	r2, [sp, #24]
   11880:	ldr	r1, [pc, #104]	; 118f0 <putchar_unlocked@plt+0x5b4>
   11884:	mov	r0, #1
   11888:	bl	11228 <__printf_chk@plt>
   1188c:	cmp	r4, #2
   11890:	beq	117b4 <putchar_unlocked@plt+0x478>
   11894:	ldrd	r2, [sp, #32]
   11898:	ldr	r1, [pc, #80]	; 118f0 <putchar_unlocked@plt+0x5b4>
   1189c:	mov	r0, #1
   118a0:	bl	11228 <__printf_chk@plt>
   118a4:	b	117b4 <putchar_unlocked@plt+0x478>
   118a8:			; <UNDEFINED> instruction: 0xffc00000
   118ac:	ldrshmi	pc, [pc, #255]	; 119b3 <putchar_unlocked@plt+0x677>	; <UNPREDICTABLE>
   118b0:			; <UNDEFINED> instruction: 0x000166b0
   118b4:	andeq	r6, r1, r1, asr r7
   118b8:			; <UNDEFINED> instruction: 0x000166bd
   118bc:	andeq	r5, r1, r0, lsl #3
   118c0:			; <UNDEFINED> instruction: 0xfffeae80
   118c4:			; <UNDEFINED> instruction: 0xfffff1f0
   118c8:	muleq	r2, r4, r1
   118cc:	ldrdeq	r6, [r1], -r4
   118d0:	andeq	r6, r1, fp, ror #13
   118d4:	andeq	r6, r1, r0, asr #14
   118d8:	andeq	r6, r1, sl, asr #14
   118dc:	andeq	r6, r1, r0, ror #13
   118e0:	andeq	r6, r1, r1, lsl #14
   118e4:	andeq	r6, r1, r9, lsl r7
   118e8:	andeq	r6, r1, r0, lsr r7
   118ec:	andeq	r6, r1, r3, asr r7
   118f0:	andeq	r6, r1, r9, ror #14
   118f4:	push	{r0, r1, r2, lr}
   118f8:	add	r2, sp, #8
   118fc:	mov	r4, #0
   11900:	mov	r3, r1
   11904:	str	r4, [r2, #-4]!
   11908:	mov	r1, sp
   1190c:	mov	r6, r0
   11910:	bl	14f34 <putchar_unlocked@plt+0x3bf8>
   11914:	subs	r5, r0, #0
   11918:	beq	11948 <putchar_unlocked@plt+0x60c>
   1191c:	bl	111f8 <__errno_location@plt>
   11920:	mov	r2, r6
   11924:	mov	r1, #3
   11928:	ldr	r5, [r0]
   1192c:	mov	r0, r4
   11930:	bl	14d90 <putchar_unlocked@plt+0x3a54>
   11934:	ldr	r2, [pc, #28]	; 11958 <putchar_unlocked@plt+0x61c>
   11938:	mov	r1, r5
   1193c:	mov	r3, r0
   11940:	mov	r0, #1
   11944:	bl	11138 <error@plt>
   11948:	ldm	sp, {r0, r1}
   1194c:	bl	115a8 <putchar_unlocked@plt+0x26c>
   11950:	mov	r0, r5
   11954:	bl	111d4 <exit@plt>
   11958:	andeq	r6, r1, r8, lsr fp
   1195c:	subs	r4, r0, #0
   11960:	push	{r7, lr}
   11964:	sub	sp, sp, #56	; 0x38
   11968:	ldr	r5, [pc, #520]	; 11b78 <putchar_unlocked@plt+0x83c>
   1196c:	beq	119a4 <putchar_unlocked@plt+0x668>
   11970:	ldr	r3, [pc, #516]	; 11b7c <putchar_unlocked@plt+0x840>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #512]	; 11b80 <putchar_unlocked@plt+0x844>
   1197c:	mov	r0, #0
   11980:	ldr	r6, [r3]
   11984:	bl	1109c <dcgettext@plt>
   11988:	ldr	r3, [r5]
   1198c:	mov	r1, #1
   11990:	mov	r2, r0
   11994:	mov	r0, r6
   11998:	bl	11240 <__fprintf_chk@plt>
   1199c:	mov	r0, r4
   119a0:	bl	111d4 <exit@plt>
   119a4:	mov	r2, #5
   119a8:	ldr	r1, [pc, #468]	; 11b84 <putchar_unlocked@plt+0x848>
   119ac:	bl	1109c <dcgettext@plt>
   119b0:	ldr	r2, [r5]
   119b4:	ldr	r6, [pc, #460]	; 11b88 <putchar_unlocked@plt+0x84c>
   119b8:	ldr	r8, [pc, #460]	; 11b8c <putchar_unlocked@plt+0x850>
   119bc:	mov	r7, r4
   119c0:	mov	r1, r0
   119c4:	mov	r0, #1
   119c8:	bl	11228 <__printf_chk@plt>
   119cc:	mov	r2, #5
   119d0:	ldr	r1, [pc, #440]	; 11b90 <putchar_unlocked@plt+0x854>
   119d4:	mov	r0, r4
   119d8:	bl	1109c <dcgettext@plt>
   119dc:	mov	r1, r0
   119e0:	mov	r0, #1
   119e4:	bl	11228 <__printf_chk@plt>
   119e8:	mov	r2, #5
   119ec:	ldr	r1, [pc, #416]	; 11b94 <putchar_unlocked@plt+0x858>
   119f0:	mov	r0, r4
   119f4:	bl	1109c <dcgettext@plt>
   119f8:	mov	r1, r0
   119fc:	mov	r0, #1
   11a00:	bl	11228 <__printf_chk@plt>
   11a04:	mov	r2, #5
   11a08:	ldr	r1, [pc, #392]	; 11b98 <putchar_unlocked@plt+0x85c>
   11a0c:	mov	r0, r4
   11a10:	bl	1109c <dcgettext@plt>
   11a14:	ldr	r3, [pc, #384]	; 11b9c <putchar_unlocked@plt+0x860>
   11a18:	ldr	r2, [pc, #384]	; 11ba0 <putchar_unlocked@plt+0x864>
   11a1c:	mov	r1, r0
   11a20:	mov	r0, #1
   11a24:	bl	11228 <__printf_chk@plt>
   11a28:	mov	r2, #5
   11a2c:	ldr	r1, [pc, #368]	; 11ba4 <putchar_unlocked@plt+0x868>
   11a30:	mov	r0, r4
   11a34:	bl	1109c <dcgettext@plt>
   11a38:	ldr	r1, [r6]
   11a3c:	bl	10ff4 <fputs_unlocked@plt>
   11a40:	mov	r2, #5
   11a44:	ldr	r1, [pc, #348]	; 11ba8 <putchar_unlocked@plt+0x86c>
   11a48:	mov	r0, r4
   11a4c:	bl	1109c <dcgettext@plt>
   11a50:	ldr	r1, [r6]
   11a54:	bl	10ff4 <fputs_unlocked@plt>
   11a58:	ldr	lr, [pc, #332]	; 11bac <putchar_unlocked@plt+0x870>
   11a5c:	mov	ip, sp
   11a60:	ldm	lr!, {r0, r1, r2, r3}
   11a64:	stmia	ip!, {r0, r1, r2, r3}
   11a68:	ldm	lr!, {r0, r1, r2, r3}
   11a6c:	stmia	ip!, {r0, r1, r2, r3}
   11a70:	ldm	lr!, {r0, r1, r2, r3}
   11a74:	stmia	ip!, {r0, r1, r2, r3}
   11a78:	ldm	lr, {r0, r1}
   11a7c:	stm	ip, {r0, r1}
   11a80:	ldr	r1, [sp, r7]
   11a84:	add	r5, sp, r7
   11a88:	cmp	r1, #0
   11a8c:	bne	11b30 <putchar_unlocked@plt+0x7f4>
   11a90:	ldr	r5, [r5, #4]
   11a94:	ldr	r7, [pc, #240]	; 11b8c <putchar_unlocked@plt+0x850>
   11a98:	cmp	r5, #0
   11a9c:	mov	r2, #5
   11aa0:	ldr	r1, [pc, #264]	; 11bb0 <putchar_unlocked@plt+0x874>
   11aa4:	mov	r0, #0
   11aa8:	moveq	r5, r7
   11aac:	bl	1109c <dcgettext@plt>
   11ab0:	ldr	r3, [pc, #252]	; 11bb4 <putchar_unlocked@plt+0x878>
   11ab4:	ldr	r2, [pc, #252]	; 11bb8 <putchar_unlocked@plt+0x87c>
   11ab8:	mov	r1, r0
   11abc:	mov	r0, #1
   11ac0:	bl	11228 <__printf_chk@plt>
   11ac4:	mov	r1, #0
   11ac8:	mov	r0, #5
   11acc:	bl	11288 <setlocale@plt>
   11ad0:	cmp	r0, #0
   11ad4:	bne	11b48 <putchar_unlocked@plt+0x80c>
   11ad8:	mov	r2, #5
   11adc:	ldr	r1, [pc, #216]	; 11bbc <putchar_unlocked@plt+0x880>
   11ae0:	mov	r0, #0
   11ae4:	bl	1109c <dcgettext@plt>
   11ae8:	ldr	r3, [pc, #156]	; 11b8c <putchar_unlocked@plt+0x850>
   11aec:	ldr	r2, [pc, #192]	; 11bb4 <putchar_unlocked@plt+0x878>
   11af0:	mov	r1, r0
   11af4:	mov	r0, #1
   11af8:	bl	11228 <__printf_chk@plt>
   11afc:	mov	r2, #5
   11b00:	ldr	r1, [pc, #184]	; 11bc0 <putchar_unlocked@plt+0x884>
   11b04:	mov	r0, #0
   11b08:	bl	1109c <dcgettext@plt>
   11b0c:	ldr	r2, [pc, #176]	; 11bc4 <putchar_unlocked@plt+0x888>
   11b10:	cmp	r5, r7
   11b14:	ldr	r3, [pc, #172]	; 11bc8 <putchar_unlocked@plt+0x88c>
   11b18:	moveq	r3, r2
   11b1c:	mov	r2, r5
   11b20:	mov	r1, r0
   11b24:	mov	r0, #1
   11b28:	bl	11228 <__printf_chk@plt>
   11b2c:	b	1199c <putchar_unlocked@plt+0x660>
   11b30:	mov	r0, r8
   11b34:	bl	11018 <strcmp@plt>
   11b38:	add	r7, r7, #8
   11b3c:	cmp	r0, #0
   11b40:	bne	11a80 <putchar_unlocked@plt+0x744>
   11b44:	b	11a90 <putchar_unlocked@plt+0x754>
   11b48:	mov	r2, #3
   11b4c:	ldr	r1, [pc, #120]	; 11bcc <putchar_unlocked@plt+0x890>
   11b50:	bl	1130c <strncmp@plt>
   11b54:	cmp	r0, #0
   11b58:	beq	11ad8 <putchar_unlocked@plt+0x79c>
   11b5c:	mov	r2, #5
   11b60:	ldr	r1, [pc, #104]	; 11bd0 <putchar_unlocked@plt+0x894>
   11b64:	mov	r0, #0
   11b68:	bl	1109c <dcgettext@plt>
   11b6c:	ldr	r1, [r6]
   11b70:	bl	10ff4 <fputs_unlocked@plt>
   11b74:	b	11ad8 <putchar_unlocked@plt+0x79c>
   11b78:	andeq	r8, r2, ip, lsr #3
   11b7c:	muleq	r2, r0, r1
   11b80:	andeq	r6, r1, r0, ror r7
   11b84:	muleq	r1, r7, r7
   11b88:	muleq	r2, r4, r1
   11b8c:			; <UNDEFINED> instruction: 0x000166b6
   11b90:			; <UNDEFINED> instruction: 0x000167b5
   11b94:	andeq	r6, r1, lr, ror #16
   11b98:	andeq	r6, r1, r2, asr #17
   11b9c:	strdeq	r6, [r1], -sp
   11ba0:	andeq	r6, r1, fp, lsl #18
   11ba4:	andeq	r6, r1, r9, lsl r9
   11ba8:	andeq	r6, r1, r6, asr #18
   11bac:	andeq	r6, r1, r8, ror r6
   11bb0:	andeq	r6, r1, ip, ror r9
   11bb4:	muleq	r1, r3, r9
   11bb8:			; <UNDEFINED> instruction: 0x000169bb
   11bbc:	andeq	r6, r1, r4, lsl sl
   11bc0:	andeq	r6, r1, pc, lsr #20
   11bc4:	ldrdeq	r6, [r1], -r4
   11bc8:	strdeq	r6, [r1], -ip
   11bcc:	andeq	r6, r1, r9, asr #19
   11bd0:	andeq	r6, r1, sp, asr #19
   11bd4:	andeq	r0, r0, r0
   11bd8:	push	{r4, r5, r6, lr}
   11bdc:	mov	r6, r0
   11be0:	ldr	r4, [pc, #80]	; 11c38 <putchar_unlocked@plt+0x8fc>
   11be4:	mov	r5, r1
   11be8:	ldr	r2, [r4]
   11bec:	cmp	r2, #0
   11bf0:	bne	11c04 <putchar_unlocked@plt+0x8c8>
   11bf4:	ldr	r1, [pc, #64]	; 11c3c <putchar_unlocked@plt+0x900>
   11bf8:	ldr	r0, [pc, #64]	; 11c40 <putchar_unlocked@plt+0x904>
   11bfc:	bl	112b8 <newlocale@plt>
   11c00:	str	r0, [r4]
   11c04:	ldr	r2, [r4]
   11c08:	cmp	r2, #0
   11c0c:	bne	11c20 <putchar_unlocked@plt+0x8e4>
   11c10:	cmp	r5, #0
   11c14:	strne	r6, [r5]
   11c18:	vldr	d0, [pc, #16]	; 11c30 <putchar_unlocked@plt+0x8f4>
   11c1c:	pop	{r4, r5, r6, pc}
   11c20:	mov	r1, r5
   11c24:	mov	r0, r6
   11c28:	pop	{r4, r5, r6, lr}
   11c2c:	b	11270 <strtod_l@plt>
	...
   11c38:	andeq	r8, r2, r0, lsr #3
   11c3c:	andeq	r6, r1, r6, lsr #22
   11c40:			; <UNDEFINED> instruction: 0x00001fbf
   11c44:	ldr	r3, [pc, #4]	; 11c50 <putchar_unlocked@plt+0x914>
   11c48:	str	r0, [r3]
   11c4c:	bx	lr
   11c50:	andeq	r8, r2, r4, lsr #3
   11c54:	ldr	r3, [pc, #4]	; 11c60 <putchar_unlocked@plt+0x924>
   11c58:	strb	r0, [r3, #4]
   11c5c:	bx	lr
   11c60:	andeq	r8, r2, r4, lsr #3
   11c64:	ldr	r3, [pc, #192]	; 11d2c <putchar_unlocked@plt+0x9f0>
   11c68:	push	{r0, r1, r4, r5, r6, lr}
   11c6c:	ldr	r0, [r3]
   11c70:	bl	15f20 <putchar_unlocked@plt+0x4be4>
   11c74:	cmp	r0, #0
   11c78:	beq	11d10 <putchar_unlocked@plt+0x9d4>
   11c7c:	ldr	r3, [pc, #172]	; 11d30 <putchar_unlocked@plt+0x9f4>
   11c80:	mov	r4, r3
   11c84:	ldrb	r2, [r3, #4]
   11c88:	cmp	r2, #0
   11c8c:	beq	11ca0 <putchar_unlocked@plt+0x964>
   11c90:	bl	111f8 <__errno_location@plt>
   11c94:	ldr	r3, [r0]
   11c98:	cmp	r3, #32
   11c9c:	beq	11d10 <putchar_unlocked@plt+0x9d4>
   11ca0:	mov	r2, #5
   11ca4:	ldr	r1, [pc, #136]	; 11d34 <putchar_unlocked@plt+0x9f8>
   11ca8:	mov	r0, #0
   11cac:	bl	1109c <dcgettext@plt>
   11cb0:	ldr	r4, [r4]
   11cb4:	cmp	r4, #0
   11cb8:	mov	r5, r0
   11cbc:	beq	11cf4 <putchar_unlocked@plt+0x9b8>
   11cc0:	bl	111f8 <__errno_location@plt>
   11cc4:	ldr	r6, [r0]
   11cc8:	mov	r0, r4
   11ccc:	bl	14d80 <putchar_unlocked@plt+0x3a44>
   11cd0:	str	r5, [sp]
   11cd4:	ldr	r2, [pc, #92]	; 11d38 <putchar_unlocked@plt+0x9fc>
   11cd8:	mov	r1, r6
   11cdc:	mov	r3, r0
   11ce0:	mov	r0, #0
   11ce4:	bl	11138 <error@plt>
   11ce8:	ldr	r3, [pc, #76]	; 11d3c <putchar_unlocked@plt+0xa00>
   11cec:	ldr	r0, [r3]
   11cf0:	bl	11054 <_exit@plt>
   11cf4:	bl	111f8 <__errno_location@plt>
   11cf8:	mov	r3, r5
   11cfc:	ldr	r2, [pc, #60]	; 11d40 <putchar_unlocked@plt+0xa04>
   11d00:	ldr	r1, [r0]
   11d04:	mov	r0, r4
   11d08:	bl	11138 <error@plt>
   11d0c:	b	11ce8 <putchar_unlocked@plt+0x9ac>
   11d10:	ldr	r3, [pc, #44]	; 11d44 <putchar_unlocked@plt+0xa08>
   11d14:	ldr	r0, [r3]
   11d18:	bl	15f20 <putchar_unlocked@plt+0x4be4>
   11d1c:	cmp	r0, #0
   11d20:	bne	11ce8 <putchar_unlocked@plt+0x9ac>
   11d24:	add	sp, sp, #8
   11d28:	pop	{r4, r5, r6, pc}
   11d2c:	muleq	r2, r4, r1
   11d30:	andeq	r8, r2, r4, lsr #3
   11d34:	andeq	r6, r1, r8, lsr #22
   11d38:	andeq	r6, r1, r4, lsr fp
   11d3c:	andeq	r8, r2, ip, lsr r1
   11d40:	andeq	r6, r1, r8, lsr fp
   11d44:	muleq	r2, r0, r1
   11d48:	push	{r0, r1, r2, r4, r5, lr}
   11d4c:	mov	r4, r0
   11d50:	bl	11234 <fileno@plt>
   11d54:	cmp	r0, #0
   11d58:	mov	r0, r4
   11d5c:	bge	11d6c <putchar_unlocked@plt+0xa30>
   11d60:	add	sp, sp, #12
   11d64:	pop	{r4, r5, lr}
   11d68:	b	1124c <fclose@plt>
   11d6c:	bl	11174 <__freading@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11db0 <putchar_unlocked@plt+0xa74>
   11d78:	mov	r0, r4
   11d7c:	bl	11df0 <putchar_unlocked@plt+0xab4>
   11d80:	cmp	r0, #0
   11d84:	bne	11de4 <putchar_unlocked@plt+0xaa8>
   11d88:	mov	r5, #0
   11d8c:	mov	r0, r4
   11d90:	bl	1124c <fclose@plt>
   11d94:	cmp	r5, #0
   11d98:	beq	11da8 <putchar_unlocked@plt+0xa6c>
   11d9c:	bl	111f8 <__errno_location@plt>
   11da0:	str	r5, [r0]
   11da4:	mvn	r0, #0
   11da8:	add	sp, sp, #12
   11dac:	pop	{r4, r5, pc}
   11db0:	mov	r0, r4
   11db4:	bl	11234 <fileno@plt>
   11db8:	mov	r3, #1
   11dbc:	str	r3, [sp]
   11dc0:	mov	r2, #0
   11dc4:	mov	r3, #0
   11dc8:	bl	110fc <lseek64@plt>
   11dcc:	mvn	r3, #0
   11dd0:	mvn	r2, #0
   11dd4:	cmp	r1, r3
   11dd8:	cmpeq	r0, r2
   11ddc:	bne	11d78 <putchar_unlocked@plt+0xa3c>
   11de0:	b	11d88 <putchar_unlocked@plt+0xa4c>
   11de4:	bl	111f8 <__errno_location@plt>
   11de8:	ldr	r5, [r0]
   11dec:	b	11d8c <putchar_unlocked@plt+0xa50>
   11df0:	push	{r0, r1, r4, lr}
   11df4:	subs	r4, r0, #0
   11df8:	bne	11e0c <putchar_unlocked@plt+0xad0>
   11dfc:	mov	r0, r4
   11e00:	add	sp, sp, #8
   11e04:	pop	{r4, lr}
   11e08:	b	11030 <fflush@plt>
   11e0c:	bl	11174 <__freading@plt>
   11e10:	cmp	r0, #0
   11e14:	beq	11dfc <putchar_unlocked@plt+0xac0>
   11e18:	ldr	r3, [r4]
   11e1c:	tst	r3, #256	; 0x100
   11e20:	beq	11dfc <putchar_unlocked@plt+0xac0>
   11e24:	mov	r3, #1
   11e28:	str	r3, [sp]
   11e2c:	mov	r2, #0
   11e30:	mov	r3, #0
   11e34:	mov	r0, r4
   11e38:	bl	1368c <putchar_unlocked@plt+0x2350>
   11e3c:	b	11dfc <putchar_unlocked@plt+0xac0>
   11e40:	push	{r4, r5, r6, lr}
   11e44:	mov	r6, r0
   11e48:	mov	r4, r1
   11e4c:	add	r5, r1, r2
   11e50:	cmp	r4, r5
   11e54:	bne	11e5c <putchar_unlocked@plt+0xb20>
   11e58:	pop	{r4, r5, r6, pc}
   11e5c:	bl	1118c <__ctype_tolower_loc@plt>
   11e60:	ldrb	r2, [r4], #1
   11e64:	mov	r1, r6
   11e68:	ldr	r3, [r0]
   11e6c:	ldr	r0, [r3, r2, lsl #2]
   11e70:	bl	112ac <fputc@plt>
   11e74:	b	11e50 <putchar_unlocked@plt+0xb14>
   11e78:	push	{r4, r5, r6, lr}
   11e7c:	mov	r6, r0
   11e80:	mov	r4, r1
   11e84:	add	r5, r1, r2
   11e88:	cmp	r4, r5
   11e8c:	bne	11e94 <putchar_unlocked@plt+0xb58>
   11e90:	pop	{r4, r5, r6, pc}
   11e94:	bl	11198 <__ctype_toupper_loc@plt>
   11e98:	ldrb	r2, [r4], #1
   11e9c:	mov	r1, r6
   11ea0:	ldr	r3, [r0]
   11ea4:	ldr	r0, [r3, r2, lsl #2]
   11ea8:	bl	112ac <fputc@plt>
   11eac:	b	11e88 <putchar_unlocked@plt+0xb4c>
   11eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb4:	sub	sp, sp, #1120	; 0x460
   11eb8:	sub	sp, sp, #4
   11ebc:	mov	fp, r0
   11ec0:	str	r2, [sp, #36]	; 0x24
   11ec4:	str	r3, [sp, #76]	; 0x4c
   11ec8:	str	r1, [sp, #56]	; 0x38
   11ecc:	bl	111f8 <__errno_location@plt>
   11ed0:	ldr	r4, [sp, #1164]	; 0x48c
   11ed4:	ldr	r3, [r0]
   11ed8:	str	r0, [sp, #52]	; 0x34
   11edc:	str	r3, [sp, #72]	; 0x48
   11ee0:	ldr	r3, [sp, #36]	; 0x24
   11ee4:	ldr	r3, [r3, #8]
   11ee8:	str	r3, [sp, #60]	; 0x3c
   11eec:	ldr	r3, [sp, #36]	; 0x24
   11ef0:	ldr	r3, [r3, #40]	; 0x28
   11ef4:	str	r3, [sp, #64]	; 0x40
   11ef8:	ldr	r2, [sp, #64]	; 0x40
   11efc:	ldr	r3, [pc, #4060]	; 12ee0 <putchar_unlocked@plt+0x1ba4>
   11f00:	cmp	r2, #0
   11f04:	moveq	r2, r3
   11f08:	ldr	r3, [sp, #60]	; 0x3c
   11f0c:	str	r2, [sp, #64]	; 0x40
   11f10:	cmp	r3, #12
   11f14:	subgt	r3, r3, #12
   11f18:	bgt	11f28 <putchar_unlocked@plt+0xbec>
   11f1c:	ldr	r3, [sp, #60]	; 0x3c
   11f20:	cmp	r3, #0
   11f24:	moveq	r3, #12
   11f28:	str	r3, [sp, #60]	; 0x3c
   11f2c:	mov	r3, #0
   11f30:	str	r3, [sp, #28]
   11f34:	add	r3, sp, #94	; 0x5e
   11f38:	str	r3, [sp, #68]	; 0x44
   11f3c:	ldr	r3, [sp, #56]	; 0x38
   11f40:	ldrb	r3, [r3]
   11f44:	cmp	r3, #0
   11f48:	ldreq	r3, [sp, #52]	; 0x34
   11f4c:	ldreq	r2, [sp, #72]	; 0x48
   11f50:	streq	r2, [r3]
   11f54:	beq	1305c <putchar_unlocked@plt+0x1d20>
   11f58:	cmp	r3, #37	; 0x25
   11f5c:	bne	11fb0 <putchar_unlocked@plt+0xc74>
   11f60:	ldr	r3, [sp, #76]	; 0x4c
   11f64:	mov	r2, #1
   11f68:	str	r3, [sp, #44]	; 0x2c
   11f6c:	ldr	r3, [sp, #56]	; 0x38
   11f70:	mov	r5, #0
   11f74:	str	r3, [sp, #40]	; 0x28
   11f78:	str	r5, [sp, #32]
   11f7c:	ldr	r1, [sp, #40]	; 0x28
   11f80:	ldrb	r3, [r1, #1]!
   11f84:	cmp	r3, #45	; 0x2d
   11f88:	str	r1, [sp, #40]	; 0x28
   11f8c:	beq	11fa8 <putchar_unlocked@plt+0xc6c>
   11f90:	bhi	1204c <putchar_unlocked@plt+0xd10>
   11f94:	cmp	r3, #35	; 0x23
   11f98:	moveq	r5, r2
   11f9c:	beq	11f7c <putchar_unlocked@plt+0xc40>
   11fa0:	cmp	r3, #43	; 0x2b
   11fa4:	bne	12064 <putchar_unlocked@plt+0xd28>
   11fa8:	str	r3, [sp, #32]
   11fac:	b	11f7c <putchar_unlocked@plt+0xc40>
   11fb0:	bic	r4, r4, r4, asr #31
   11fb4:	ldr	r3, [sp, #28]
   11fb8:	cmp	r4, #1
   11fbc:	movcs	r5, r4
   11fc0:	movcc	r5, #1
   11fc4:	mvn	r3, r3
   11fc8:	cmp	r5, r3
   11fcc:	bcc	11fd8 <putchar_unlocked@plt+0xc9c>
   11fd0:	mov	r3, #34	; 0x22
   11fd4:	b	1304c <putchar_unlocked@plt+0x1d10>
   11fd8:	cmp	fp, #0
   11fdc:	beq	11ff8 <putchar_unlocked@plt+0xcbc>
   11fe0:	cmp	r4, #1
   11fe4:	bgt	12018 <putchar_unlocked@plt+0xcdc>
   11fe8:	ldr	r3, [sp, #56]	; 0x38
   11fec:	mov	r1, fp
   11ff0:	ldrb	r0, [r3]
   11ff4:	bl	112ac <fputc@plt>
   11ff8:	ldr	r3, [sp, #28]
   11ffc:	add	r3, r3, r5
   12000:	str	r3, [sp, #28]
   12004:	ldr	r3, [sp, #56]	; 0x38
   12008:	mvn	r4, #0
   1200c:	add	r3, r3, #1
   12010:	str	r3, [sp, #56]	; 0x38
   12014:	b	11f3c <putchar_unlocked@plt+0xc00>
   12018:	sub	r4, r4, #1
   1201c:	mov	r6, #0
   12020:	mov	r7, #32
   12024:	mov	r1, fp
   12028:	mov	r0, r7
   1202c:	add	r6, r6, #1
   12030:	bl	112ac <fputc@plt>
   12034:	cmp	r4, r6
   12038:	bhi	12024 <putchar_unlocked@plt+0xce8>
   1203c:	b	11fe8 <putchar_unlocked@plt+0xcac>
   12040:	mov	r3, #1
   12044:	str	r3, [sp, #44]	; 0x2c
   12048:	b	11f7c <putchar_unlocked@plt+0xc40>
   1204c:	cmp	r3, #94	; 0x5e
   12050:	beq	12040 <putchar_unlocked@plt+0xd04>
   12054:	cmp	r3, #95	; 0x5f
   12058:	beq	11fa8 <putchar_unlocked@plt+0xc6c>
   1205c:	cmp	r3, #48	; 0x30
   12060:	b	11fa4 <putchar_unlocked@plt+0xc68>
   12064:	sub	r3, r3, #48	; 0x30
   12068:	cmp	r3, #9
   1206c:	bhi	12108 <putchar_unlocked@plt+0xdcc>
   12070:	mov	r4, #0
   12074:	ldr	r6, [pc, #3688]	; 12ee4 <putchar_unlocked@plt+0x1ba8>
   12078:	mov	r7, r4
   1207c:	mov	r8, #-2147483648	; 0x80000000
   12080:	mov	r9, #10
   12084:	mvn	sl, #-2147483648	; 0x80000000
   12088:	cmp	r4, #0
   1208c:	bge	12334 <putchar_unlocked@plt+0xff8>
   12090:	cmn	r4, #1
   12094:	moveq	r0, r7
   12098:	beq	120b4 <putchar_unlocked@plt+0xd78>
   1209c:	mov	r1, r4
   120a0:	mov	r0, r8
   120a4:	bl	163a0 <putchar_unlocked@plt+0x5064>
   120a8:	cmp	r0, #9
   120ac:	movgt	r0, #0
   120b0:	movle	r0, #1
   120b4:	cmp	r0, #0
   120b8:	bne	12364 <putchar_unlocked@plt+0x1028>
   120bc:	ldr	r3, [sp, #40]	; 0x28
   120c0:	mul	r4, r9, r4
   120c4:	ldrb	r2, [r3]
   120c8:	cmp	r2, #47	; 0x2f
   120cc:	bgt	12344 <putchar_unlocked@plt+0x1008>
   120d0:	rsb	r3, r2, #-2147483600	; 0x80000030
   120d4:	cmp	r4, r3
   120d8:	movge	r3, #0
   120dc:	movlt	r3, #1
   120e0:	cmp	r3, #0
   120e4:	bne	12364 <putchar_unlocked@plt+0x1028>
   120e8:	add	r4, r2, r4
   120ec:	sub	r4, r4, #48	; 0x30
   120f0:	ldr	r2, [sp, #40]	; 0x28
   120f4:	ldrb	r3, [r2, #1]!
   120f8:	sub	r3, r3, #48	; 0x30
   120fc:	cmp	r3, #9
   12100:	str	r2, [sp, #40]	; 0x28
   12104:	bls	12088 <putchar_unlocked@plt+0xd4c>
   12108:	ldr	r3, [sp, #40]	; 0x28
   1210c:	ldrb	sl, [r3]
   12110:	cmp	sl, #69	; 0x45
   12114:	beq	12124 <putchar_unlocked@plt+0xde8>
   12118:	cmp	sl, #79	; 0x4f
   1211c:	movne	sl, #0
   12120:	bne	12130 <putchar_unlocked@plt+0xdf4>
   12124:	ldr	r3, [sp, #40]	; 0x28
   12128:	add	r3, r3, #1
   1212c:	str	r3, [sp, #40]	; 0x28
   12130:	ldr	r3, [sp, #40]	; 0x28
   12134:	ldrb	r8, [r3]
   12138:	str	r8, [sp, #48]	; 0x30
   1213c:	cmp	r8, #122	; 0x7a
   12140:	ldrls	pc, [pc, r8, lsl #2]
   12144:	b	12674 <putchar_unlocked@plt+0x1338>
   12148:	andeq	r3, r1, r0, asr #11
   1214c:	andeq	r2, r1, r4, ror r6
   12150:	andeq	r2, r1, r4, ror r6
   12154:	andeq	r2, r1, r4, ror r6
   12158:	andeq	r2, r1, r4, ror r6
   1215c:	andeq	r2, r1, r4, ror r6
   12160:	andeq	r2, r1, r4, ror r6
   12164:	andeq	r2, r1, r4, ror r6
   12168:	andeq	r2, r1, r4, ror r6
   1216c:	andeq	r2, r1, r4, ror r6
   12170:	andeq	r2, r1, r4, ror r6
   12174:	andeq	r2, r1, r4, ror r6
   12178:	andeq	r2, r1, r4, ror r6
   1217c:	andeq	r2, r1, r4, ror r6
   12180:	andeq	r2, r1, r4, ror r6
   12184:	andeq	r2, r1, r4, ror r6
   12188:	andeq	r2, r1, r4, ror r6
   1218c:	andeq	r2, r1, r4, ror r6
   12190:	andeq	r2, r1, r4, ror r6
   12194:	andeq	r2, r1, r4, ror r6
   12198:	andeq	r2, r1, r4, ror r6
   1219c:	andeq	r2, r1, r4, ror r6
   121a0:	andeq	r2, r1, r4, ror r6
   121a4:	andeq	r2, r1, r4, ror r6
   121a8:	andeq	r2, r1, r4, ror r6
   121ac:	andeq	r2, r1, r4, ror r6
   121b0:	andeq	r2, r1, r4, ror r6
   121b4:	andeq	r2, r1, r4, ror r6
   121b8:	andeq	r2, r1, r4, ror r6
   121bc:	andeq	r2, r1, r4, ror r6
   121c0:	andeq	r2, r1, r4, ror r6
   121c4:	andeq	r2, r1, r4, ror r6
   121c8:	andeq	r2, r1, r4, ror r6
   121cc:	andeq	r2, r1, r4, ror r6
   121d0:	andeq	r2, r1, r4, ror r6
   121d4:	andeq	r2, r1, r4, ror r6
   121d8:	andeq	r2, r1, r4, ror r6
   121dc:	andeq	r2, r1, ip, asr #8
   121e0:	andeq	r2, r1, r4, ror r6
   121e4:	andeq	r2, r1, r4, ror r6
   121e8:	andeq	r2, r1, r4, ror r6
   121ec:	andeq	r2, r1, r4, ror r6
   121f0:	andeq	r2, r1, r4, ror r6
   121f4:	andeq	r2, r1, r4, ror r6
   121f8:	andeq	r2, r1, r4, ror r6
   121fc:	andeq	r2, r1, r4, ror r6
   12200:	andeq	r2, r1, r4, ror r6
   12204:	andeq	r2, r1, r4, ror r6
   12208:	andeq	r2, r1, r4, ror r6
   1220c:	andeq	r2, r1, r4, ror r6
   12210:	andeq	r2, r1, r4, ror r6
   12214:	andeq	r2, r1, r4, ror r6
   12218:	andeq	r2, r1, r4, ror r6
   1221c:	andeq	r2, r1, r4, ror r6
   12220:	andeq	r2, r1, r4, ror r6
   12224:	andeq	r2, r1, r4, ror r6
   12228:	andeq	r2, r1, r4, ror r6
   1222c:	andeq	r2, r1, r4, ror r6
   12230:	muleq	r1, r4, r3
   12234:	andeq	r2, r1, r4, ror r6
   12238:	andeq	r2, r1, r4, ror r6
   1223c:	andeq	r2, r1, r4, ror r6
   12240:	andeq	r2, r1, r4, ror r6
   12244:	andeq	r2, r1, r4, ror r6
   12248:	andeq	r2, r1, r4, ror r6
   1224c:	andeq	r2, r1, r4, asr #10
   12250:	andeq	r2, r1, r8, asr #12
   12254:	andeq	r2, r1, r8, lsl #18
   12258:	andeq	r2, r1, ip, asr fp
   1225c:	andeq	r2, r1, r4, ror r6
   12260:	andeq	r2, r1, r0, ror #24
   12264:	ldrdeq	r3, [r1], -r8
   12268:	andeq	r2, r1, ip, lsl #25
   1226c:	andeq	r2, r1, r0, lsr #25
   12270:	andeq	r2, r1, r4, ror r6
   12274:	andeq	r2, r1, r4, ror r6
   12278:	andeq	r2, r1, r4, ror r6
   1227c:	andeq	r2, r1, r4, lsl #26
   12280:	andeq	r2, r1, r8, asr #26
   12284:	andeq	r2, r1, r4, ror r6
   12288:			; <UNDEFINED> instruction: 0x00012fbc
   1228c:	andeq	r2, r1, r4, ror r6
   12290:	strdeq	r2, [r1], -r0
   12294:	strdeq	r2, [r1], -r0
   12298:			; <UNDEFINED> instruction: 0x000127bc
   1229c:			; <UNDEFINED> instruction: 0x000131b0
   122a0:	ldrdeq	r3, [r1], -r8
   122a4:	andeq	r3, r1, r8, lsl #7
   122a8:	andeq	r3, r1, ip, asr #1
   122ac:	andeq	r3, r1, r8, asr #7
   122b0:	andeq	r3, r1, r4, lsr r4
   122b4:	andeq	r2, r1, r4, ror r6
   122b8:	andeq	r2, r1, r4, ror r6
   122bc:	andeq	r2, r1, r4, ror r6
   122c0:	andeq	r2, r1, r4, ror r6
   122c4:	andeq	r2, r1, r4, ror r6
   122c8:	andeq	r2, r1, r4, ror r6
   122cc:	andeq	r2, r1, r4, lsr #10
   122d0:	andeq	r2, r1, r8, lsr #12
   122d4:	andeq	r2, r1, r8, ror #12
   122d8:	andeq	r2, r1, r0, ror fp
   122dc:	andeq	r2, r1, r8, lsl #23
   122e0:	andeq	r2, r1, r4, ror r6
   122e4:	ldrdeq	r3, [r1], -r8
   122e8:	andeq	r2, r1, r8, lsr #12
   122ec:	andeq	r2, r1, r4, ror r6
   122f0:	ldrdeq	r2, [r1], -r4
   122f4:			; <UNDEFINED> instruction: 0x00012cb0
   122f8:	andeq	r2, r1, r4, asr #25
   122fc:	andeq	r2, r1, r8, lsl sp
   12300:	andeq	r2, r1, r8, lsl #30
   12304:	andeq	r2, r1, r4, ror r6
   12308:	andeq	r2, r1, ip, ror #6
   1230c:	andeq	r2, r1, r4, asr #31
   12310:	andeq	r2, r1, ip, lsr r8
   12314:	andeq	r3, r1, r4
   12318:	ldrdeq	r3, [r1], -ip
   1231c:	muleq	r1, r0, r1
   12320:	andeq	r2, r1, r4, ror r6
   12324:			; <UNDEFINED> instruction: 0x000133b4
   12328:	andeq	r2, r1, ip, asr #22
   1232c:	strdeq	r3, [r1], -ip
   12330:	andeq	r3, r1, ip, asr #10
   12334:	cmp	r4, r6
   12338:	movle	r0, #0
   1233c:	movgt	r0, #1
   12340:	b	120b4 <putchar_unlocked@plt+0xd78>
   12344:	cmp	r4, #0
   12348:	blt	120e8 <putchar_unlocked@plt+0xdac>
   1234c:	sub	r3, r2, #48	; 0x30
   12350:	sub	r3, sl, r3
   12354:	cmp	r4, r3
   12358:	movle	r3, #0
   1235c:	movgt	r3, #1
   12360:	b	120e0 <putchar_unlocked@plt+0xda4>
   12364:	mvn	r4, #-2147483648	; 0x80000000
   12368:	b	120f0 <putchar_unlocked@plt+0xdb4>
   1236c:	mov	r3, #0
   12370:	cmp	r5, #0
   12374:	moveq	r5, r3
   12378:	moveq	r3, #112	; 0x70
   1237c:	beq	12558 <putchar_unlocked@plt+0x121c>
   12380:	mov	r3, #112	; 0x70
   12384:	str	r3, [sp, #48]	; 0x30
   12388:	mov	r3, #0
   1238c:	str	r3, [sp, #44]	; 0x2c
   12390:	b	1255c <putchar_unlocked@plt+0x1220>
   12394:	ldr	r3, [sp, #40]	; 0x28
   12398:	add	r3, r3, #1
   1239c:	ldr	r2, [sp, #40]	; 0x28
   123a0:	mov	r1, r3
   123a4:	sub	r7, r3, r2
   123a8:	ldrb	r2, [r3], #1
   123ac:	cmp	r2, #58	; 0x3a
   123b0:	beq	1239c <putchar_unlocked@plt+0x1060>
   123b4:	cmp	r2, #122	; 0x7a
   123b8:	streq	r1, [sp, #40]	; 0x28
   123bc:	bne	12674 <putchar_unlocked@plt+0x1338>
   123c0:	ldr	r3, [sp, #36]	; 0x24
   123c4:	ldr	r3, [r3, #32]
   123c8:	cmp	r3, #0
   123cc:	blt	1261c <putchar_unlocked@plt+0x12e0>
   123d0:	ldr	r3, [sp, #36]	; 0x24
   123d4:	ldr	r6, [r3, #36]	; 0x24
   123d8:	cmp	r6, #0
   123dc:	movlt	r8, #1
   123e0:	blt	123fc <putchar_unlocked@plt+0x10c0>
   123e4:	ldreq	r3, [sp, #64]	; 0x40
   123e8:	movne	r8, #0
   123ec:	ldrbeq	r8, [r3]
   123f0:	subeq	r8, r8, #45	; 0x2d
   123f4:	clzeq	r8, r8
   123f8:	lsreq	r8, r8, #5
   123fc:	mov	r1, #3600	; 0xe10
   12400:	mov	r0, r6
   12404:	bl	163a0 <putchar_unlocked@plt+0x5064>
   12408:	mov	r1, #60	; 0x3c
   1240c:	mov	r5, r0
   12410:	mov	r0, r6
   12414:	bl	163a0 <putchar_unlocked@plt+0x5064>
   12418:	mov	r1, #60	; 0x3c
   1241c:	bl	165c0 <putchar_unlocked@plt+0x5284>
   12420:	mov	r0, r6
   12424:	mov	r9, r1
   12428:	mov	r1, #60	; 0x3c
   1242c:	bl	165c0 <putchar_unlocked@plt+0x5284>
   12430:	cmp	r7, #3
   12434:	ldrls	pc, [pc, r7, lsl #2]
   12438:	b	12674 <putchar_unlocked@plt+0x1338>
   1243c:	andeq	r3, r1, r4, asr r5
   12440:	andeq	r3, r1, ip, ror #10
   12444:	andeq	r3, r1, r4, lsl #11
   12448:	andeq	r3, r1, r8, lsr #11
   1244c:	ldr	r3, [sp, #40]	; 0x28
   12450:	ldr	r2, [sp, #56]	; 0x38
   12454:	sub	r3, r3, #1
   12458:	cmp	r2, r3
   1245c:	bne	135c0 <putchar_unlocked@plt+0x2284>
   12460:	ldr	r2, [sp, #32]
   12464:	mvn	r3, r4
   12468:	cmp	r2, #45	; 0x2d
   1246c:	lsr	r3, r3, #31
   12470:	moveq	r3, #0
   12474:	cmp	r3, #0
   12478:	moveq	r4, #0
   1247c:	ldr	r3, [sp, #28]
   12480:	cmp	r4, #1
   12484:	movcs	r5, r4
   12488:	movcc	r5, #1
   1248c:	mvn	r3, r3
   12490:	cmp	r5, r3
   12494:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12498:	cmp	fp, #0
   1249c:	beq	124b8 <putchar_unlocked@plt+0x117c>
   124a0:	cmp	r4, #1
   124a4:	bgt	124c4 <putchar_unlocked@plt+0x1188>
   124a8:	ldr	r3, [sp, #40]	; 0x28
   124ac:	mov	r1, fp
   124b0:	ldrb	r0, [r3]
   124b4:	bl	112ac <fputc@plt>
   124b8:	ldr	r3, [sp, #28]
   124bc:	add	r3, r3, r5
   124c0:	b	12618 <putchar_unlocked@plt+0x12dc>
   124c4:	ldr	r3, [sp, #32]
   124c8:	sub	r4, r4, #1
   124cc:	cmp	r3, #43	; 0x2b
   124d0:	cmpne	r3, #48	; 0x30
   124d4:	moveq	r6, #1
   124d8:	movne	r6, #0
   124dc:	bne	12504 <putchar_unlocked@plt+0x11c8>
   124e0:	mov	r6, #0
   124e4:	mov	r7, #48	; 0x30
   124e8:	mov	r1, fp
   124ec:	mov	r0, r7
   124f0:	add	r6, r6, #1
   124f4:	bl	112ac <fputc@plt>
   124f8:	cmp	r4, r6
   124fc:	bhi	124e8 <putchar_unlocked@plt+0x11ac>
   12500:	b	124a8 <putchar_unlocked@plt+0x116c>
   12504:	mov	r7, #32
   12508:	mov	r1, fp
   1250c:	mov	r0, r7
   12510:	add	r6, r6, #1
   12514:	bl	112ac <fputc@plt>
   12518:	cmp	r4, r6
   1251c:	bhi	12508 <putchar_unlocked@plt+0x11cc>
   12520:	b	124a8 <putchar_unlocked@plt+0x116c>
   12524:	cmp	sl, #0
   12528:	bne	12674 <putchar_unlocked@plt+0x1338>
   1252c:	cmp	r5, #0
   12530:	moveq	r3, #97	; 0x61
   12534:	beq	12558 <putchar_unlocked@plt+0x121c>
   12538:	str	r5, [sp, #44]	; 0x2c
   1253c:	mov	r3, #97	; 0x61
   12540:	b	12840 <putchar_unlocked@plt+0x1504>
   12544:	cmp	sl, #0
   12548:	bne	12674 <putchar_unlocked@plt+0x1338>
   1254c:	cmp	r5, #0
   12550:	bne	12848 <putchar_unlocked@plt+0x150c>
   12554:	mov	r3, #65	; 0x41
   12558:	str	r3, [sp, #48]	; 0x30
   1255c:	mov	r3, #32
   12560:	cmp	sl, #0
   12564:	strb	r3, [sp, #80]	; 0x50
   12568:	ldrb	r2, [sp, #48]	; 0x30
   1256c:	mov	r3, #37	; 0x25
   12570:	strb	r3, [sp, #81]	; 0x51
   12574:	addne	r3, sp, #83	; 0x53
   12578:	addeq	r3, sp, #82	; 0x52
   1257c:	mov	r7, #0
   12580:	strbne	sl, [sp, #82]	; 0x52
   12584:	mov	r1, #1024	; 0x400
   12588:	strb	r2, [r3]
   1258c:	strb	r7, [r3, #1]
   12590:	add	r2, sp, #80	; 0x50
   12594:	ldr	r3, [sp, #36]	; 0x24
   12598:	add	r0, sp, #96	; 0x60
   1259c:	bl	11168 <strftime@plt>
   125a0:	cmp	r0, #0
   125a4:	beq	1261c <putchar_unlocked@plt+0x12e0>
   125a8:	ldr	r2, [sp, #32]
   125ac:	cmp	r4, r7
   125b0:	movlt	r3, #0
   125b4:	movge	r3, #1
   125b8:	cmp	r2, #45	; 0x2d
   125bc:	moveq	r3, #0
   125c0:	cmp	r3, r7
   125c4:	sub	r6, r0, #1
   125c8:	moveq	r4, r7
   125cc:	ldr	r3, [sp, #28]
   125d0:	cmp	r4, r6
   125d4:	movcs	r8, r4
   125d8:	movcc	r8, r6
   125dc:	mvn	r3, r3
   125e0:	cmp	r8, r3
   125e4:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   125e8:	cmp	fp, #0
   125ec:	beq	12610 <putchar_unlocked@plt+0x12d4>
   125f0:	cmp	r4, r6
   125f4:	bhi	1286c <putchar_unlocked@plt+0x1530>
   125f8:	cmp	r5, #0
   125fc:	beq	128cc <putchar_unlocked@plt+0x1590>
   12600:	mov	r2, r6
   12604:	add	r1, sp, #97	; 0x61
   12608:	mov	r0, fp
   1260c:	bl	11e40 <putchar_unlocked@plt+0xb04>
   12610:	ldr	r3, [sp, #28]
   12614:	add	r3, r3, r8
   12618:	str	r3, [sp, #28]
   1261c:	ldr	r3, [sp, #40]	; 0x28
   12620:	str	r3, [sp, #56]	; 0x38
   12624:	b	12004 <putchar_unlocked@plt+0xcc8>
   12628:	ldr	r3, [sp, #44]	; 0x2c
   1262c:	cmp	r5, #0
   12630:	movne	r3, r5
   12634:	cmp	sl, #69	; 0x45
   12638:	str	r3, [sp, #44]	; 0x2c
   1263c:	beq	12674 <putchar_unlocked@plt+0x1338>
   12640:	mov	r5, #0
   12644:	b	1255c <putchar_unlocked@plt+0x1220>
   12648:	cmp	sl, #69	; 0x45
   1264c:	beq	12674 <putchar_unlocked@plt+0x1338>
   12650:	cmp	r5, #0
   12654:	moveq	r3, #66	; 0x42
   12658:	beq	12558 <putchar_unlocked@plt+0x121c>
   1265c:	str	r5, [sp, #44]	; 0x2c
   12660:	mov	r3, #66	; 0x42
   12664:	b	12840 <putchar_unlocked@plt+0x1504>
   12668:	cmp	sl, #79	; 0x4f
   1266c:	movne	r3, #99	; 0x63
   12670:	bne	12840 <putchar_unlocked@plt+0x1504>
   12674:	ldr	r3, [sp, #40]	; 0x28
   12678:	ldr	r2, [sp, #56]	; 0x38
   1267c:	sub	r5, r3, r2
   12680:	ldr	r2, [sp, #32]
   12684:	mvn	r3, r4
   12688:	cmp	r2, #45	; 0x2d
   1268c:	lsr	r3, r3, #31
   12690:	moveq	r3, #0
   12694:	cmp	r3, #0
   12698:	add	r5, r5, #1
   1269c:	moveq	r4, #0
   126a0:	ldr	r3, [sp, #28]
   126a4:	cmp	r4, r5
   126a8:	movcs	r6, r4
   126ac:	movcc	r6, r5
   126b0:	mvn	r3, r3
   126b4:	cmp	r6, r3
   126b8:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   126bc:	cmp	fp, #0
   126c0:	beq	13640 <putchar_unlocked@plt+0x2304>
   126c4:	cmp	r4, r5
   126c8:	bhi	135d0 <putchar_unlocked@plt+0x2294>
   126cc:	ldr	r3, [sp, #44]	; 0x2c
   126d0:	cmp	r3, #0
   126d4:	bne	13630 <putchar_unlocked@plt+0x22f4>
   126d8:	mov	r3, fp
   126dc:	mov	r2, #1
   126e0:	mov	r1, r5
   126e4:	ldr	r0, [sp, #56]	; 0x38
   126e8:	bl	110f0 <fwrite@plt>
   126ec:	b	13640 <putchar_unlocked@plt+0x2304>
   126f0:	ldr	r6, [pc, #2032]	; 12ee8 <putchar_unlocked@plt+0x1bac>
   126f4:	mvn	r5, #0
   126f8:	ldr	r3, [sp, #1176]	; 0x498
   126fc:	ldr	r2, [sp, #36]	; 0x24
   12700:	str	r3, [sp, #16]
   12704:	ldr	r3, [sp, #1172]	; 0x494
   12708:	str	r5, [sp, #4]
   1270c:	str	r3, [sp, #12]
   12710:	ldr	r3, [sp, #1168]	; 0x490
   12714:	mov	r1, r6
   12718:	str	r3, [sp, #8]
   1271c:	ldr	r3, [sp, #32]
   12720:	mov	r0, #0
   12724:	str	r3, [sp]
   12728:	ldr	r3, [sp, #44]	; 0x2c
   1272c:	bl	11eb0 <putchar_unlocked@plt+0xb74>
   12730:	ldr	r2, [sp, #32]
   12734:	mvn	r3, r4
   12738:	cmp	r2, #45	; 0x2d
   1273c:	lsr	r3, r3, #31
   12740:	moveq	r3, #0
   12744:	cmp	r3, #0
   12748:	moveq	r4, #0
   1274c:	ldr	r3, [sp, #28]
   12750:	mvn	r3, r3
   12754:	cmp	r4, r0
   12758:	movcs	r7, r4
   1275c:	movcc	r7, r0
   12760:	cmp	r7, r3
   12764:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12768:	cmp	fp, #0
   1276c:	beq	127b0 <putchar_unlocked@plt+0x1474>
   12770:	cmp	r4, r0
   12774:	bhi	127dc <putchar_unlocked@plt+0x14a0>
   12778:	ldr	r3, [sp, #1176]	; 0x498
   1277c:	str	r5, [sp, #4]
   12780:	str	r3, [sp, #16]
   12784:	ldr	r3, [sp, #1172]	; 0x494
   12788:	ldr	r2, [sp, #36]	; 0x24
   1278c:	str	r3, [sp, #12]
   12790:	ldr	r3, [sp, #1168]	; 0x490
   12794:	mov	r1, r6
   12798:	str	r3, [sp, #8]
   1279c:	ldr	r3, [sp, #32]
   127a0:	mov	r0, fp
   127a4:	str	r3, [sp]
   127a8:	ldr	r3, [sp, #44]	; 0x2c
   127ac:	bl	11eb0 <putchar_unlocked@plt+0xb74>
   127b0:	ldr	r3, [sp, #28]
   127b4:	add	r3, r3, r7
   127b8:	b	12618 <putchar_unlocked@plt+0x12dc>
   127bc:	mvn	r5, #0
   127c0:	ldr	r6, [pc, #1828]	; 12eec <putchar_unlocked@plt+0x1bb0>
   127c4:	b	126f8 <putchar_unlocked@plt+0x13bc>
   127c8:	mov	r3, #43	; 0x2b
   127cc:	mov	r5, #4
   127d0:	ldr	r6, [pc, #1816]	; 12ef0 <putchar_unlocked@plt+0x1bb4>
   127d4:	str	r3, [sp, #32]
   127d8:	b	126f8 <putchar_unlocked@plt+0x13bc>
   127dc:	ldr	r3, [sp, #32]
   127e0:	sub	r4, r4, r0
   127e4:	cmp	r3, #43	; 0x2b
   127e8:	cmpne	r3, #48	; 0x30
   127ec:	moveq	r8, #1
   127f0:	movne	r8, #0
   127f4:	movne	r9, #32
   127f8:	moveq	r8, #0
   127fc:	moveq	r9, #48	; 0x30
   12800:	beq	12830 <putchar_unlocked@plt+0x14f4>
   12804:	cmp	r8, r4
   12808:	beq	12778 <putchar_unlocked@plt+0x143c>
   1280c:	mov	r1, fp
   12810:	mov	r0, r9
   12814:	bl	112ac <fputc@plt>
   12818:	add	r8, r8, #1
   1281c:	b	12804 <putchar_unlocked@plt+0x14c8>
   12820:	mov	r1, fp
   12824:	mov	r0, r9
   12828:	bl	112ac <fputc@plt>
   1282c:	add	r8, r8, #1
   12830:	cmp	r8, r4
   12834:	bne	12820 <putchar_unlocked@plt+0x14e4>
   12838:	b	12778 <putchar_unlocked@plt+0x143c>
   1283c:	mov	r3, #114	; 0x72
   12840:	str	r3, [sp, #48]	; 0x30
   12844:	b	12640 <putchar_unlocked@plt+0x1304>
   12848:	str	r5, [sp, #44]	; 0x2c
   1284c:	mov	r3, #65	; 0x41
   12850:	b	12840 <putchar_unlocked@plt+0x1504>
   12854:	mov	r3, #67	; 0x43
   12858:	b	12840 <putchar_unlocked@plt+0x1504>
   1285c:	mov	r3, #89	; 0x59
   12860:	b	12840 <putchar_unlocked@plt+0x1504>
   12864:	mov	r3, #121	; 0x79
   12868:	b	12840 <putchar_unlocked@plt+0x1504>
   1286c:	ldr	r3, [sp, #32]
   12870:	sub	r4, r4, r6
   12874:	cmp	r3, #43	; 0x2b
   12878:	cmpne	r3, #48	; 0x30
   1287c:	movne	r3, #0
   12880:	moveq	r3, #1
   12884:	movne	r7, r3
   12888:	movne	r9, #32
   1288c:	moveq	r9, #48	; 0x30
   12890:	beq	128c0 <putchar_unlocked@plt+0x1584>
   12894:	cmp	r7, r4
   12898:	beq	125f8 <putchar_unlocked@plt+0x12bc>
   1289c:	mov	r1, fp
   128a0:	mov	r0, r9
   128a4:	bl	112ac <fputc@plt>
   128a8:	add	r7, r7, #1
   128ac:	b	12894 <putchar_unlocked@plt+0x1558>
   128b0:	mov	r1, fp
   128b4:	mov	r0, r9
   128b8:	bl	112ac <fputc@plt>
   128bc:	add	r7, r7, #1
   128c0:	cmp	r7, r4
   128c4:	bne	128b0 <putchar_unlocked@plt+0x1574>
   128c8:	b	125f8 <putchar_unlocked@plt+0x12bc>
   128cc:	ldr	r3, [sp, #44]	; 0x2c
   128d0:	cmp	r3, #0
   128d4:	beq	128ec <putchar_unlocked@plt+0x15b0>
   128d8:	mov	r2, r6
   128dc:	add	r1, sp, #97	; 0x61
   128e0:	mov	r0, fp
   128e4:	bl	11e78 <putchar_unlocked@plt+0xb3c>
   128e8:	b	12610 <putchar_unlocked@plt+0x12d4>
   128ec:	mov	r2, #1
   128f0:	add	r0, sp, #96	; 0x60
   128f4:	mov	r3, fp
   128f8:	mov	r1, r6
   128fc:	add	r0, r0, r2
   12900:	bl	110f0 <fwrite@plt>
   12904:	b	12610 <putchar_unlocked@plt+0x12d4>
   12908:	cmp	sl, #69	; 0x45
   1290c:	beq	12854 <putchar_unlocked@plt+0x1518>
   12910:	ldr	r3, [sp, #36]	; 0x24
   12914:	ldr	r8, [pc, #1508]	; 12f00 <putchar_unlocked@plt+0x1bc4>
   12918:	ldr	r0, [pc, #1492]	; 12ef4 <putchar_unlocked@plt+0x1bb8>
   1291c:	ldr	r2, [r3, #20]
   12920:	mov	r1, #100	; 0x64
   12924:	add	r3, r2, #1888	; 0x760
   12928:	add	r3, r3, #12
   1292c:	cmp	r2, r8
   12930:	movge	r8, #0
   12934:	movlt	r8, #1
   12938:	cmp	r3, r0
   1293c:	movhi	r3, #0
   12940:	movls	r3, #1
   12944:	mvn	r0, #98	; 0x62
   12948:	mla	r0, r0, r3, r2
   1294c:	bl	163a0 <putchar_unlocked@plt+0x5064>
   12950:	add	r5, r0, #19
   12954:	mov	r6, #2
   12958:	ldr	r3, [sp, #32]
   1295c:	ldr	r2, [sp, #1160]	; 0x488
   12960:	cmp	r3, #0
   12964:	moveq	r3, r2
   12968:	cmp	r3, #43	; 0x2b
   1296c:	str	r3, [sp, #32]
   12970:	movne	r7, #0
   12974:	bne	12998 <putchar_unlocked@plt+0x165c>
   12978:	ldr	r7, [pc, #1400]	; 12ef8 <putchar_unlocked@plt+0x1bbc>
   1297c:	cmp	r6, #2
   12980:	moveq	r7, #99	; 0x63
   12984:	cmp	r5, r7
   12988:	movls	r7, #0
   1298c:	movhi	r7, #1
   12990:	cmp	r6, r4
   12994:	orrlt	r7, r7, #1
   12998:	mov	r9, #0
   1299c:	eor	r3, r8, #1
   129a0:	cmp	sl, #79	; 0x4f
   129a4:	movne	r3, #0
   129a8:	andeq	r3, r3, #1
   129ac:	cmp	r3, #0
   129b0:	bne	12640 <putchar_unlocked@plt+0x1304>
   129b4:	cmp	r8, #0
   129b8:	ldr	sl, [sp, #68]	; 0x44
   129bc:	rsbne	r5, r5, #0
   129c0:	mov	r2, #58	; 0x3a
   129c4:	tst	r9, #1
   129c8:	subne	r3, sl, #1
   129cc:	moveq	r3, sl
   129d0:	strbne	r2, [sl, #-1]
   129d4:	mov	r0, r5
   129d8:	mov	r1, #10
   129dc:	str	r2, [sp, #56]	; 0x38
   129e0:	sub	sl, r3, #1
   129e4:	str	r3, [sp, #48]	; 0x30
   129e8:	bl	16380 <putchar_unlocked@plt+0x5044>
   129ec:	ldr	r3, [sp, #48]	; 0x30
   129f0:	mov	r0, r5
   129f4:	asr	r9, r9, #1
   129f8:	add	r1, r1, #48	; 0x30
   129fc:	strb	r1, [r3, #-1]
   12a00:	mov	r1, #10
   12a04:	bl	16194 <putchar_unlocked@plt+0x4e58>
   12a08:	ldr	r2, [sp, #56]	; 0x38
   12a0c:	cmp	r9, #0
   12a10:	cmpeq	r0, #0
   12a14:	mov	r5, r0
   12a18:	bne	129c4 <putchar_unlocked@plt+0x1688>
   12a1c:	ldr	r3, [sp, #32]
   12a20:	cmp	r3, #0
   12a24:	moveq	r3, #48	; 0x30
   12a28:	cmp	r4, #0
   12a2c:	movge	r6, r4
   12a30:	cmp	r8, #0
   12a34:	str	r3, [sp, #32]
   12a38:	movne	r7, #45	; 0x2d
   12a3c:	bne	12a4c <putchar_unlocked@plt+0x1710>
   12a40:	cmp	r7, #0
   12a44:	movne	r7, #43	; 0x2b
   12a48:	moveq	r7, #0
   12a4c:	ldr	r3, [sp, #68]	; 0x44
   12a50:	cmp	r7, #0
   12a54:	moveq	r4, r6
   12a58:	subne	r4, r6, #1
   12a5c:	sub	r5, r3, sl
   12a60:	ldr	r3, [sp, #32]
   12a64:	sub	r4, r4, r5
   12a68:	subs	r8, r3, #45	; 0x2d
   12a6c:	movne	r8, #1
   12a70:	cmp	r4, #0
   12a74:	movle	r3, #0
   12a78:	andgt	r3, r8, #1
   12a7c:	cmp	r3, #0
   12a80:	moveq	r4, #0
   12a84:	cmp	r7, #0
   12a88:	beq	12ae8 <putchar_unlocked@plt+0x17ac>
   12a8c:	ldr	r3, [sp, #32]
   12a90:	cmp	r3, #95	; 0x5f
   12a94:	bne	12ab8 <putchar_unlocked@plt+0x177c>
   12a98:	cmp	fp, #0
   12a9c:	movne	r9, #0
   12aa0:	movne	r3, #32
   12aa4:	bne	12bd8 <putchar_unlocked@plt+0x189c>
   12aa8:	ldr	r3, [sp, #28]
   12aac:	sub	r6, r6, r4
   12ab0:	add	r3, r3, r4
   12ab4:	str	r3, [sp, #28]
   12ab8:	ldr	r3, [sp, #28]
   12abc:	cmn	r3, #3
   12ac0:	bhi	11fd0 <putchar_unlocked@plt+0xc94>
   12ac4:	cmp	fp, #0
   12ac8:	beq	12ad8 <putchar_unlocked@plt+0x179c>
   12acc:	mov	r1, fp
   12ad0:	mov	r0, r7
   12ad4:	bl	112ac <fputc@plt>
   12ad8:	ldr	r3, [sp, #28]
   12adc:	sub	r6, r6, #1
   12ae0:	add	r3, r3, #1
   12ae4:	str	r3, [sp, #28]
   12ae8:	cmp	r6, #0
   12aec:	movlt	r8, #0
   12af0:	andge	r8, r8, #1
   12af4:	cmp	r8, #0
   12af8:	moveq	r6, #0
   12afc:	ldr	r3, [sp, #28]
   12b00:	cmp	r6, r5
   12b04:	movcs	r4, r6
   12b08:	movcc	r4, r5
   12b0c:	mvn	r3, r3
   12b10:	cmp	r4, r3
   12b14:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12b18:	cmp	fp, #0
   12b1c:	beq	12c54 <putchar_unlocked@plt+0x1918>
   12b20:	cmp	r6, r5
   12b24:	bhi	12be4 <putchar_unlocked@plt+0x18a8>
   12b28:	ldr	r3, [sp, #44]	; 0x2c
   12b2c:	cmp	r3, #0
   12b30:	bne	12c44 <putchar_unlocked@plt+0x1908>
   12b34:	mov	r3, fp
   12b38:	mov	r2, #1
   12b3c:	mov	r1, r5
   12b40:	mov	r0, sl
   12b44:	bl	110f0 <fwrite@plt>
   12b48:	b	12c54 <putchar_unlocked@plt+0x1918>
   12b4c:	cmp	sl, #79	; 0x4f
   12b50:	movne	r3, #120	; 0x78
   12b54:	bne	12840 <putchar_unlocked@plt+0x1504>
   12b58:	b	12674 <putchar_unlocked@plt+0x1338>
   12b5c:	cmp	sl, #0
   12b60:	mvneq	r5, #0
   12b64:	ldreq	r6, [pc, #912]	; 12efc <putchar_unlocked@plt+0x1bc0>
   12b68:	beq	126f8 <putchar_unlocked@plt+0x13bc>
   12b6c:	b	12674 <putchar_unlocked@plt+0x1338>
   12b70:	cmp	sl, #69	; 0x45
   12b74:	ldrne	r3, [sp, #36]	; 0x24
   12b78:	ldrne	r0, [r3, #12]
   12b7c:	beq	12674 <putchar_unlocked@plt+0x1338>
   12b80:	mov	r6, #2
   12b84:	b	12bac <putchar_unlocked@plt+0x1870>
   12b88:	cmp	sl, #69	; 0x45
   12b8c:	ldrne	r3, [sp, #36]	; 0x24
   12b90:	ldrne	r0, [r3, #12]
   12b94:	beq	12674 <putchar_unlocked@plt+0x1338>
   12b98:	ldr	r3, [sp, #32]
   12b9c:	mov	r6, #2
   12ba0:	cmp	r3, #0
   12ba4:	moveq	r3, #95	; 0x5f
   12ba8:	streq	r3, [sp, #32]
   12bac:	mov	r9, #0
   12bb0:	lsr	r8, r0, #31
   12bb4:	mov	r5, r0
   12bb8:	mov	r7, r9
   12bbc:	b	1299c <putchar_unlocked@plt+0x1660>
   12bc0:	mov	r0, r3
   12bc4:	mov	r1, fp
   12bc8:	str	r3, [sp, #48]	; 0x30
   12bcc:	bl	112ac <fputc@plt>
   12bd0:	ldr	r3, [sp, #48]	; 0x30
   12bd4:	add	r9, r9, #1
   12bd8:	cmp	r9, r4
   12bdc:	bne	12bc0 <putchar_unlocked@plt+0x1884>
   12be0:	b	12aa8 <putchar_unlocked@plt+0x176c>
   12be4:	ldr	r3, [sp, #32]
   12be8:	sub	r6, r6, r5
   12bec:	cmp	r3, #43	; 0x2b
   12bf0:	cmpne	r3, #48	; 0x30
   12bf4:	moveq	r7, #1
   12bf8:	movne	r7, #0
   12bfc:	movne	r8, #32
   12c00:	moveq	r7, #0
   12c04:	moveq	r8, #48	; 0x30
   12c08:	beq	12c38 <putchar_unlocked@plt+0x18fc>
   12c0c:	cmp	r7, r6
   12c10:	beq	12b28 <putchar_unlocked@plt+0x17ec>
   12c14:	mov	r1, fp
   12c18:	mov	r0, r8
   12c1c:	bl	112ac <fputc@plt>
   12c20:	add	r7, r7, #1
   12c24:	b	12c0c <putchar_unlocked@plt+0x18d0>
   12c28:	mov	r1, fp
   12c2c:	mov	r0, r8
   12c30:	bl	112ac <fputc@plt>
   12c34:	add	r7, r7, #1
   12c38:	cmp	r7, r6
   12c3c:	bne	12c28 <putchar_unlocked@plt+0x18ec>
   12c40:	b	12b28 <putchar_unlocked@plt+0x17ec>
   12c44:	mov	r2, r5
   12c48:	mov	r1, sl
   12c4c:	mov	r0, fp
   12c50:	bl	11e78 <putchar_unlocked@plt+0xb3c>
   12c54:	ldr	r3, [sp, #28]
   12c58:	add	r3, r3, r4
   12c5c:	b	12618 <putchar_unlocked@plt+0x12dc>
   12c60:	cmp	sl, #0
   12c64:	bne	12674 <putchar_unlocked@plt+0x1338>
   12c68:	ldr	r3, [sp, #32]
   12c6c:	clz	r3, r3
   12c70:	lsr	r3, r3, #5
   12c74:	ands	r3, r3, r4, lsr #31
   12c78:	bne	127c8 <putchar_unlocked@plt+0x148c>
   12c7c:	sub	r5, r4, #6
   12c80:	ldr	r6, [pc, #616]	; 12ef0 <putchar_unlocked@plt+0x1bb4>
   12c84:	bic	r5, r5, r5, asr #31
   12c88:	b	126f8 <putchar_unlocked@plt+0x13bc>
   12c8c:	cmp	sl, #69	; 0x45
   12c90:	beq	12674 <putchar_unlocked@plt+0x1338>
   12c94:	ldr	r3, [sp, #36]	; 0x24
   12c98:	ldr	r0, [r3, #8]
   12c9c:	b	12b80 <putchar_unlocked@plt+0x1844>
   12ca0:	cmp	sl, #69	; 0x45
   12ca4:	ldrne	r0, [sp, #60]	; 0x3c
   12ca8:	bne	12b80 <putchar_unlocked@plt+0x1844>
   12cac:	b	12674 <putchar_unlocked@plt+0x1338>
   12cb0:	cmp	sl, #69	; 0x45
   12cb4:	ldrne	r3, [sp, #36]	; 0x24
   12cb8:	ldrne	r0, [r3, #8]
   12cbc:	bne	12b98 <putchar_unlocked@plt+0x185c>
   12cc0:	b	12674 <putchar_unlocked@plt+0x1338>
   12cc4:	cmp	sl, #69	; 0x45
   12cc8:	ldrne	r0, [sp, #60]	; 0x3c
   12ccc:	bne	12b98 <putchar_unlocked@plt+0x185c>
   12cd0:	b	12674 <putchar_unlocked@plt+0x1338>
   12cd4:	cmp	sl, #69	; 0x45
   12cd8:	beq	12674 <putchar_unlocked@plt+0x1338>
   12cdc:	ldr	r3, [sp, #36]	; 0x24
   12ce0:	mov	r9, #0
   12ce4:	mov	r7, r9
   12ce8:	ldr	r1, [r3, #28]
   12cec:	cmn	r1, #1
   12cf0:	movge	r8, #0
   12cf4:	movlt	r8, #1
   12cf8:	add	r5, r1, #1
   12cfc:	mov	r6, #3
   12d00:	b	1299c <putchar_unlocked@plt+0x1660>
   12d04:	cmp	sl, #69	; 0x45
   12d08:	ldrne	r3, [sp, #36]	; 0x24
   12d0c:	ldrne	r0, [r3, #4]
   12d10:	bne	12b80 <putchar_unlocked@plt+0x1844>
   12d14:	b	12674 <putchar_unlocked@plt+0x1338>
   12d18:	cmp	sl, #69	; 0x45
   12d1c:	beq	12674 <putchar_unlocked@plt+0x1338>
   12d20:	ldr	r3, [sp, #36]	; 0x24
   12d24:	mov	r9, #0
   12d28:	mov	r7, r9
   12d2c:	ldr	r1, [r3, #16]
   12d30:	mov	r6, #2
   12d34:	cmn	r1, #1
   12d38:	movge	r8, #0
   12d3c:	movlt	r8, #1
   12d40:	add	r5, r1, #1
   12d44:	b	1299c <putchar_unlocked@plt+0x1660>
   12d48:	cmp	sl, #69	; 0x45
   12d4c:	beq	12674 <putchar_unlocked@plt+0x1338>
   12d50:	cmp	r4, #0
   12d54:	ldr	r7, [sp, #1176]	; 0x498
   12d58:	movle	r4, #9
   12d5c:	mov	r5, #9
   12d60:	mov	r6, #10
   12d64:	cmp	r5, r4
   12d68:	bgt	12e24 <putchar_unlocked@plt+0x1ae8>
   12d6c:	cmp	r5, #1
   12d70:	bgt	12e10 <putchar_unlocked@plt+0x1ad4>
   12d74:	mov	r8, r5
   12d78:	mov	r6, #10
   12d7c:	cmp	r8, #0
   12d80:	bgt	12e3c <putchar_unlocked@plt+0x1b00>
   12d84:	ldr	r3, [sp, #32]
   12d88:	cmp	r3, #0
   12d8c:	moveq	r3, #48	; 0x30
   12d90:	str	r3, [sp, #32]
   12d94:	ldr	r3, [sp, #28]
   12d98:	cmp	r5, #0
   12d9c:	movcs	r6, r5
   12da0:	movcc	r6, #0
   12da4:	mvn	r3, r3
   12da8:	cmp	r6, r3
   12dac:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12db0:	cmp	fp, #0
   12db4:	beq	12dd4 <putchar_unlocked@plt+0x1a98>
   12db8:	ldr	r3, [sp, #44]	; 0x2c
   12dbc:	cmp	r3, #0
   12dc0:	beq	12e6c <putchar_unlocked@plt+0x1b30>
   12dc4:	mov	r2, r5
   12dc8:	add	r1, sp, #80	; 0x50
   12dcc:	mov	r0, fp
   12dd0:	bl	11e78 <putchar_unlocked@plt+0xb3c>
   12dd4:	ldr	r3, [sp, #28]
   12dd8:	add	r6, r3, r6
   12ddc:	ldr	r3, [sp, #32]
   12de0:	cmp	r3, #45	; 0x2d
   12de4:	subne	r4, r4, r5
   12de8:	moveq	r4, #0
   12dec:	bicne	r4, r4, r4, asr #31
   12df0:	mvn	r3, r6
   12df4:	cmp	r4, r3
   12df8:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12dfc:	cmp	fp, #0
   12e00:	cmpne	r4, #0
   12e04:	bne	12e84 <putchar_unlocked@plt+0x1b48>
   12e08:	add	r3, r4, r6
   12e0c:	b	12618 <putchar_unlocked@plt+0x12dc>
   12e10:	mov	r1, r6
   12e14:	mov	r0, r7
   12e18:	bl	165c0 <putchar_unlocked@plt+0x5284>
   12e1c:	cmp	r1, #0
   12e20:	bne	12d74 <putchar_unlocked@plt+0x1a38>
   12e24:	mov	r0, r7
   12e28:	mov	r1, r6
   12e2c:	bl	163a0 <putchar_unlocked@plt+0x5064>
   12e30:	sub	r5, r5, #1
   12e34:	mov	r7, r0
   12e38:	b	12d64 <putchar_unlocked@plt+0x1a28>
   12e3c:	mov	r0, r7
   12e40:	mov	r1, r6
   12e44:	bl	165c0 <putchar_unlocked@plt+0x5284>
   12e48:	sub	r8, r8, #1
   12e4c:	add	r3, sp, #80	; 0x50
   12e50:	mov	r0, r7
   12e54:	add	r1, r1, #48	; 0x30
   12e58:	strb	r1, [r3, r8]
   12e5c:	mov	r1, r6
   12e60:	bl	163a0 <putchar_unlocked@plt+0x5064>
   12e64:	mov	r7, r0
   12e68:	b	12d7c <putchar_unlocked@plt+0x1a40>
   12e6c:	mov	r3, fp
   12e70:	mov	r2, #1
   12e74:	mov	r1, r5
   12e78:	add	r0, sp, #80	; 0x50
   12e7c:	bl	110f0 <fwrite@plt>
   12e80:	b	12dd4 <putchar_unlocked@plt+0x1a98>
   12e84:	ldr	r3, [sp, #32]
   12e88:	cmp	r3, #43	; 0x2b
   12e8c:	cmpne	r3, #48	; 0x30
   12e90:	moveq	r5, #1
   12e94:	movne	r5, #0
   12e98:	bne	12ec0 <putchar_unlocked@plt+0x1b84>
   12e9c:	mov	r5, #0
   12ea0:	mov	r7, #48	; 0x30
   12ea4:	mov	r1, fp
   12ea8:	mov	r0, r7
   12eac:	add	r5, r5, #1
   12eb0:	bl	112ac <fputc@plt>
   12eb4:	cmp	r4, r5
   12eb8:	bhi	12ea4 <putchar_unlocked@plt+0x1b68>
   12ebc:	b	12e08 <putchar_unlocked@plt+0x1acc>
   12ec0:	mov	r7, #32
   12ec4:	mov	r1, fp
   12ec8:	mov	r0, r7
   12ecc:	add	r5, r5, #1
   12ed0:	bl	112ac <fputc@plt>
   12ed4:	cmp	r4, r5
   12ed8:	bhi	12ec4 <putchar_unlocked@plt+0x1b88>
   12edc:	b	12e08 <putchar_unlocked@plt+0x1acc>
   12ee0:	strdeq	r6, [r1], -ip
   12ee4:	stcleq	12, cr12, [ip], {204}	; 0xcc
   12ee8:	andeq	r6, r1, fp, lsr fp
   12eec:	andeq	r6, r1, r1, asr #22
   12ef0:	andeq	r6, r1, sl, asr #22
   12ef4:	andeq	r0, r0, fp, ror #14
   12ef8:	andeq	r2, r0, pc, lsl #14
   12efc:	andeq	r6, r1, r3, asr fp
   12f00:			; <UNDEFINED> instruction: 0xfffff894
   12f04:	andeq	r2, r0, r0, lsl r7
   12f08:	ldr	r3, [sp, #32]
   12f0c:	subs	r3, r3, #45	; 0x2d
   12f10:	movne	r3, #1
   12f14:	cmp	r4, #0
   12f18:	movlt	r3, #0
   12f1c:	cmp	r3, #0
   12f20:	moveq	r4, #0
   12f24:	ldr	r3, [sp, #28]
   12f28:	cmp	r4, #1
   12f2c:	movcs	r5, r4
   12f30:	movcc	r5, #1
   12f34:	mvn	r3, r3
   12f38:	cmp	r5, r3
   12f3c:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   12f40:	cmp	fp, #0
   12f44:	beq	124b8 <putchar_unlocked@plt+0x117c>
   12f48:	cmp	r4, #1
   12f4c:	bgt	12f5c <putchar_unlocked@plt+0x1c20>
   12f50:	mov	r1, fp
   12f54:	mov	r0, #10
   12f58:	b	124b4 <putchar_unlocked@plt+0x1178>
   12f5c:	ldr	r3, [sp, #32]
   12f60:	sub	r4, r4, #1
   12f64:	cmp	r3, #43	; 0x2b
   12f68:	cmpne	r3, #48	; 0x30
   12f6c:	moveq	r6, #1
   12f70:	movne	r6, #0
   12f74:	bne	12f9c <putchar_unlocked@plt+0x1c60>
   12f78:	mov	r6, #0
   12f7c:	mov	r7, #48	; 0x30
   12f80:	mov	r1, fp
   12f84:	mov	r0, r7
   12f88:	add	r6, r6, #1
   12f8c:	bl	112ac <fputc@plt>
   12f90:	cmp	r4, r6
   12f94:	bhi	12f80 <putchar_unlocked@plt+0x1c44>
   12f98:	b	12f50 <putchar_unlocked@plt+0x1c14>
   12f9c:	mov	r7, #32
   12fa0:	mov	r1, fp
   12fa4:	mov	r0, r7
   12fa8:	add	r6, r6, #1
   12fac:	bl	112ac <fputc@plt>
   12fb0:	cmp	r4, r6
   12fb4:	bhi	12fa0 <putchar_unlocked@plt+0x1c64>
   12fb8:	b	12f50 <putchar_unlocked@plt+0x1c14>
   12fbc:	mov	r3, #1
   12fc0:	b	12370 <putchar_unlocked@plt+0x1034>
   12fc4:	ldr	r3, [sp, #36]	; 0x24
   12fc8:	mov	r1, #11
   12fcc:	mov	r9, #0
   12fd0:	ldr	r5, [r3, #16]
   12fd4:	mov	r7, r9
   12fd8:	mov	r8, r9
   12fdc:	mul	r1, r1, r5
   12fe0:	mov	r6, #1
   12fe4:	asr	r1, r1, #5
   12fe8:	add	r5, r1, #1
   12fec:	b	1299c <putchar_unlocked@plt+0x1660>
   12ff0:	cmp	sl, #69	; 0x45
   12ff4:	ldrne	r3, [sp, #36]	; 0x24
   12ff8:	ldrne	r0, [r3]
   12ffc:	bne	12b80 <putchar_unlocked@plt+0x1844>
   13000:	b	12674 <putchar_unlocked@plt+0x1338>
   13004:	ldr	lr, [sp, #36]	; 0x24
   13008:	add	ip, sp, #96	; 0x60
   1300c:	ldm	lr!, {r0, r1, r2, r3}
   13010:	stmia	ip!, {r0, r1, r2, r3}
   13014:	ldm	lr!, {r0, r1, r2, r3}
   13018:	stmia	ip!, {r0, r1, r2, r3}
   1301c:	mvn	r3, #0
   13020:	ldm	lr, {r0, r1, r2}
   13024:	str	r3, [sp, #124]	; 0x7c
   13028:	stm	ip, {r0, r1, r2}
   1302c:	add	r1, sp, #96	; 0x60
   13030:	ldr	r0, [sp, #1172]	; 0x494
   13034:	bl	15378 <putchar_unlocked@plt+0x403c>
   13038:	ldr	r2, [sp, #124]	; 0x7c
   1303c:	cmp	r2, #0
   13040:	mov	r3, r0
   13044:	bge	1306c <putchar_unlocked@plt+0x1d30>
   13048:	mov	r3, #75	; 0x4b
   1304c:	ldr	r2, [sp, #52]	; 0x34
   13050:	str	r3, [r2]
   13054:	mov	r3, #0
   13058:	str	r3, [sp, #28]
   1305c:	ldr	r0, [sp, #28]
   13060:	add	sp, sp, #1120	; 0x460
   13064:	add	sp, sp, #4
   13068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1306c:	lsr	r8, r0, #31
   13070:	add	r9, sp, #93	; 0x5d
   13074:	mov	r7, r0
   13078:	mov	r6, #10
   1307c:	mov	r0, r7
   13080:	mov	r1, r6
   13084:	str	r3, [sp, #48]	; 0x30
   13088:	bl	165c0 <putchar_unlocked@plt+0x5284>
   1308c:	mov	r0, r7
   13090:	mov	sl, r9
   13094:	mov	r5, r1
   13098:	mov	r1, r6
   1309c:	bl	163a0 <putchar_unlocked@plt+0x5064>
   130a0:	ldr	r3, [sp, #48]	; 0x30
   130a4:	cmp	r3, #0
   130a8:	rsblt	r5, r5, #48	; 0x30
   130ac:	addge	r5, r5, #48	; 0x30
   130b0:	uxtb	r5, r5
   130b4:	strb	r5, [r9], #-1
   130b8:	cmp	r0, #0
   130bc:	mov	r7, r0
   130c0:	bne	1307c <putchar_unlocked@plt+0x1d40>
   130c4:	mov	r6, #1
   130c8:	b	12a1c <putchar_unlocked@plt+0x16e0>
   130cc:	cmp	sl, #79	; 0x4f
   130d0:	movne	r3, #88	; 0x58
   130d4:	bne	12840 <putchar_unlocked@plt+0x1504>
   130d8:	b	12674 <putchar_unlocked@plt+0x1338>
   130dc:	ldr	r3, [sp, #32]
   130e0:	subs	r3, r3, #45	; 0x2d
   130e4:	movne	r3, #1
   130e8:	cmp	r4, #0
   130ec:	movlt	r3, #0
   130f0:	cmp	r3, #0
   130f4:	moveq	r4, #0
   130f8:	ldr	r3, [sp, #28]
   130fc:	cmp	r4, #1
   13100:	movcs	r5, r4
   13104:	movcc	r5, #1
   13108:	mvn	r3, r3
   1310c:	cmp	r5, r3
   13110:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   13114:	cmp	fp, #0
   13118:	beq	124b8 <putchar_unlocked@plt+0x117c>
   1311c:	cmp	r4, #1
   13120:	bgt	13130 <putchar_unlocked@plt+0x1df4>
   13124:	mov	r1, fp
   13128:	mov	r0, #9
   1312c:	b	124b4 <putchar_unlocked@plt+0x1178>
   13130:	ldr	r3, [sp, #32]
   13134:	sub	r4, r4, #1
   13138:	cmp	r3, #43	; 0x2b
   1313c:	cmpne	r3, #48	; 0x30
   13140:	moveq	r6, #1
   13144:	movne	r6, #0
   13148:	bne	13170 <putchar_unlocked@plt+0x1e34>
   1314c:	mov	r6, #0
   13150:	mov	r7, #48	; 0x30
   13154:	mov	r1, fp
   13158:	mov	r0, r7
   1315c:	add	r6, r6, #1
   13160:	bl	112ac <fputc@plt>
   13164:	cmp	r4, r6
   13168:	bhi	13154 <putchar_unlocked@plt+0x1e18>
   1316c:	b	13124 <putchar_unlocked@plt+0x1de8>
   13170:	mov	r7, #32
   13174:	mov	r1, fp
   13178:	mov	r0, r7
   1317c:	add	r6, r6, #1
   13180:	bl	112ac <fputc@plt>
   13184:	cmp	r4, r6
   13188:	bhi	13174 <putchar_unlocked@plt+0x1e38>
   1318c:	b	13124 <putchar_unlocked@plt+0x1de8>
   13190:	ldr	r3, [sp, #36]	; 0x24
   13194:	mov	r1, #7
   13198:	ldr	r0, [r3, #24]
   1319c:	add	r0, r0, #6
   131a0:	bl	165c0 <putchar_unlocked@plt+0x5284>
   131a4:	add	r0, r1, #1
   131a8:	mov	r6, #1
   131ac:	b	12bac <putchar_unlocked@plt+0x1870>
   131b0:	cmp	sl, #69	; 0x45
   131b4:	beq	12674 <putchar_unlocked@plt+0x1338>
   131b8:	ldr	r3, [sp, #36]	; 0x24
   131bc:	ldr	r0, [r3, #28]
   131c0:	ldr	r3, [r3, #24]
   131c4:	sub	r0, r0, r3
   131c8:	mov	r1, #7
   131cc:	add	r0, r0, r1
   131d0:	bl	163a0 <putchar_unlocked@plt+0x5064>
   131d4:	b	12b80 <putchar_unlocked@plt+0x1844>
   131d8:	cmp	sl, #69	; 0x45
   131dc:	beq	12674 <putchar_unlocked@plt+0x1338>
   131e0:	ldr	r3, [sp, #36]	; 0x24
   131e4:	mov	r1, #7
   131e8:	ldr	r7, [r3, #20]
   131ec:	cmp	r7, #0
   131f0:	mvnge	r3, #99	; 0x63
   131f4:	movlt	r3, #300	; 0x12c
   131f8:	add	r5, r3, r7
   131fc:	ldr	r3, [sp, #36]	; 0x24
   13200:	ldr	r9, [r3, #28]
   13204:	ldr	r6, [r3, #24]
   13208:	sub	r0, r9, r6
   1320c:	add	r0, r0, #380	; 0x17c
   13210:	add	r0, r0, #2
   13214:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13218:	sub	r1, r9, r1
   1321c:	adds	r3, r1, #3
   13220:	str	r3, [sp, #56]	; 0x38
   13224:	bpl	132e0 <putchar_unlocked@plt+0x1fa4>
   13228:	sub	r5, r5, #1
   1322c:	tst	r5, #3
   13230:	movne	r1, #0
   13234:	bne	13264 <putchar_unlocked@plt+0x1f28>
   13238:	mov	r1, #100	; 0x64
   1323c:	mov	r0, r5
   13240:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13244:	cmp	r1, #0
   13248:	movne	r1, #1
   1324c:	bne	13264 <putchar_unlocked@plt+0x1f28>
   13250:	mov	r1, #400	; 0x190
   13254:	mov	r0, r5
   13258:	bl	165c0 <putchar_unlocked@plt+0x5284>
   1325c:	clz	r1, r1
   13260:	lsr	r1, r1, #5
   13264:	add	r1, r1, #364	; 0x16c
   13268:	add	r1, r1, #1
   1326c:	add	r9, r1, r9
   13270:	sub	r0, r9, r6
   13274:	add	r0, r0, #380	; 0x17c
   13278:	mov	r1, #7
   1327c:	add	r0, r0, #2
   13280:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13284:	mvn	r5, #0
   13288:	sub	r1, r9, r1
   1328c:	add	r0, r1, #3
   13290:	cmp	r8, #71	; 0x47
   13294:	beq	13350 <putchar_unlocked@plt+0x2014>
   13298:	cmp	r8, #103	; 0x67
   1329c:	bne	13378 <putchar_unlocked@plt+0x203c>
   132a0:	mov	r1, #100	; 0x64
   132a4:	mov	r0, r7
   132a8:	bl	165c0 <putchar_unlocked@plt+0x5284>
   132ac:	add	r0, r1, r5
   132b0:	mov	r1, #100	; 0x64
   132b4:	bl	165c0 <putchar_unlocked@plt+0x5284>
   132b8:	cmp	r1, #0
   132bc:	movge	r5, r1
   132c0:	bge	132d8 <putchar_unlocked@plt+0x1f9c>
   132c4:	ldr	r3, [pc, #-972]	; 12f00 <putchar_unlocked@plt+0x1bc4>
   132c8:	sub	r3, r3, r5
   132cc:	cmp	r7, r3
   132d0:	rsblt	r5, r1, #0
   132d4:	addge	r5, r1, #100	; 0x64
   132d8:	mov	r8, #0
   132dc:	b	12954 <putchar_unlocked@plt+0x1618>
   132e0:	tst	r5, #3
   132e4:	movne	r1, #0
   132e8:	bne	13318 <putchar_unlocked@plt+0x1fdc>
   132ec:	mov	r1, #100	; 0x64
   132f0:	mov	r0, r5
   132f4:	bl	165c0 <putchar_unlocked@plt+0x5284>
   132f8:	cmp	r1, #0
   132fc:	movne	r1, #1
   13300:	bne	13318 <putchar_unlocked@plt+0x1fdc>
   13304:	mov	r1, #400	; 0x190
   13308:	mov	r0, r5
   1330c:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13310:	clz	r1, r1
   13314:	lsr	r1, r1, #5
   13318:	add	r1, r1, #364	; 0x16c
   1331c:	add	r1, r1, #1
   13320:	sub	r9, r9, r1
   13324:	sub	r0, r9, r6
   13328:	add	r0, r0, #380	; 0x17c
   1332c:	mov	r1, #7
   13330:	add	r0, r0, #2
   13334:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13338:	sub	r1, r9, r1
   1333c:	adds	r0, r1, #3
   13340:	movmi	r5, #0
   13344:	ldrmi	r0, [sp, #56]	; 0x38
   13348:	movpl	r5, #1
   1334c:	b	13290 <putchar_unlocked@plt+0x1f54>
   13350:	ldr	r8, [pc, #-1112]	; 12f00 <putchar_unlocked@plt+0x1bc4>
   13354:	add	r1, r7, #1888	; 0x760
   13358:	sub	r8, r8, r5
   1335c:	cmp	r7, r8
   13360:	add	r1, r1, #12
   13364:	movge	r8, #0
   13368:	movlt	r8, #1
   1336c:	add	r5, r1, r5
   13370:	mov	r6, #4
   13374:	b	12958 <putchar_unlocked@plt+0x161c>
   13378:	mov	r1, #7
   1337c:	bl	163a0 <putchar_unlocked@plt+0x5064>
   13380:	add	r0, r0, #1
   13384:	b	12b80 <putchar_unlocked@plt+0x1844>
   13388:	cmp	sl, #69	; 0x45
   1338c:	beq	12674 <putchar_unlocked@plt+0x1338>
   13390:	ldr	r3, [sp, #36]	; 0x24
   13394:	mov	r1, #7
   13398:	ldr	r0, [r3, #24]
   1339c:	add	r0, r0, #6
   133a0:	bl	165c0 <putchar_unlocked@plt+0x5284>
   133a4:	ldr	r3, [sp, #36]	; 0x24
   133a8:	ldr	r0, [r3, #28]
   133ac:	sub	r0, r0, r1
   133b0:	b	131c8 <putchar_unlocked@plt+0x1e8c>
   133b4:	cmp	sl, #69	; 0x45
   133b8:	beq	12674 <putchar_unlocked@plt+0x1338>
   133bc:	ldr	r3, [sp, #36]	; 0x24
   133c0:	ldr	r0, [r3, #24]
   133c4:	b	131a8 <putchar_unlocked@plt+0x1e6c>
   133c8:	cmp	sl, #69	; 0x45
   133cc:	beq	1285c <putchar_unlocked@plt+0x1520>
   133d0:	cmp	sl, #79	; 0x4f
   133d4:	beq	12674 <putchar_unlocked@plt+0x1338>
   133d8:	ldr	r3, [sp, #36]	; 0x24
   133dc:	ldr	r8, [pc, #-1252]	; 12f00 <putchar_unlocked@plt+0x1bc4>
   133e0:	ldr	r5, [r3, #20]
   133e4:	cmp	r5, r8
   133e8:	add	r5, r5, #1888	; 0x760
   133ec:	movge	r8, #0
   133f0:	movlt	r8, #1
   133f4:	add	r5, r5, #12
   133f8:	b	13370 <putchar_unlocked@plt+0x2034>
   133fc:	cmp	sl, #69	; 0x45
   13400:	beq	12864 <putchar_unlocked@plt+0x1528>
   13404:	ldr	r3, [sp, #36]	; 0x24
   13408:	mov	r1, #100	; 0x64
   1340c:	ldr	r6, [r3, #20]
   13410:	mov	r0, r6
   13414:	bl	165c0 <putchar_unlocked@plt+0x5284>
   13418:	subs	r5, r1, #0
   1341c:	bge	132d8 <putchar_unlocked@plt+0x1f9c>
   13420:	ldr	r3, [pc, #-1320]	; 12f00 <putchar_unlocked@plt+0x1bc4>
   13424:	cmp	r6, r3
   13428:	rsblt	r5, r5, #0
   1342c:	addge	r5, r5, #100	; 0x64
   13430:	b	132d8 <putchar_unlocked@plt+0x1f9c>
   13434:	ldr	r3, [sp, #44]	; 0x2c
   13438:	cmp	r5, #0
   1343c:	movne	r3, #0
   13440:	ldr	r0, [sp, #64]	; 0x40
   13444:	str	r3, [sp, #44]	; 0x2c
   13448:	bl	111e0 <strlen@plt>
   1344c:	ldr	r2, [sp, #32]
   13450:	mvn	r3, r4
   13454:	cmp	r2, #45	; 0x2d
   13458:	lsr	r3, r3, #31
   1345c:	moveq	r3, #0
   13460:	cmp	r3, #0
   13464:	moveq	r4, #0
   13468:	ldr	r3, [sp, #28]
   1346c:	mvn	r3, r3
   13470:	cmp	r4, r0
   13474:	movcs	r7, r4
   13478:	movcc	r7, r0
   1347c:	cmp	r7, r3
   13480:	mov	r6, r0
   13484:	bcs	11fd0 <putchar_unlocked@plt+0xc94>
   13488:	cmp	fp, #0
   1348c:	beq	127b0 <putchar_unlocked@plt+0x1474>
   13490:	cmp	r4, r0
   13494:	bhi	134b4 <putchar_unlocked@plt+0x2178>
   13498:	cmp	r5, #0
   1349c:	beq	13514 <putchar_unlocked@plt+0x21d8>
   134a0:	mov	r2, r6
   134a4:	ldr	r1, [sp, #64]	; 0x40
   134a8:	mov	r0, fp
   134ac:	bl	11e40 <putchar_unlocked@plt+0xb04>
   134b0:	b	127b0 <putchar_unlocked@plt+0x1474>
   134b4:	ldr	r3, [sp, #32]
   134b8:	sub	r4, r4, r0
   134bc:	cmp	r3, #43	; 0x2b
   134c0:	cmpne	r3, #48	; 0x30
   134c4:	moveq	r8, #1
   134c8:	movne	r8, #0
   134cc:	movne	r9, #32
   134d0:	moveq	r8, #0
   134d4:	moveq	r9, #48	; 0x30
   134d8:	beq	13508 <putchar_unlocked@plt+0x21cc>
   134dc:	cmp	r8, r4
   134e0:	beq	13498 <putchar_unlocked@plt+0x215c>
   134e4:	mov	r1, fp
   134e8:	mov	r0, r9
   134ec:	bl	112ac <fputc@plt>
   134f0:	add	r8, r8, #1
   134f4:	b	134dc <putchar_unlocked@plt+0x21a0>
   134f8:	mov	r1, fp
   134fc:	mov	r0, r9
   13500:	bl	112ac <fputc@plt>
   13504:	add	r8, r8, #1
   13508:	cmp	r8, r4
   1350c:	bne	134f8 <putchar_unlocked@plt+0x21bc>
   13510:	b	13498 <putchar_unlocked@plt+0x215c>
   13514:	ldr	r3, [sp, #44]	; 0x2c
   13518:	cmp	r3, #0
   1351c:	beq	13534 <putchar_unlocked@plt+0x21f8>
   13520:	mov	r2, r6
   13524:	ldr	r1, [sp, #64]	; 0x40
   13528:	mov	r0, fp
   1352c:	bl	11e78 <putchar_unlocked@plt+0xb3c>
   13530:	b	127b0 <putchar_unlocked@plt+0x1474>
   13534:	mov	r3, fp
   13538:	mov	r2, #1
   1353c:	mov	r1, r6
   13540:	ldr	r0, [sp, #64]	; 0x40
   13544:	bl	110f0 <fwrite@plt>
   13548:	b	127b0 <putchar_unlocked@plt+0x1474>
   1354c:	mov	r7, #0
   13550:	b	123c0 <putchar_unlocked@plt+0x1084>
   13554:	mov	r1, #100	; 0x64
   13558:	mov	r7, #1
   1355c:	mla	r5, r1, r5, r9
   13560:	mov	r6, #5
   13564:	mov	r9, #0
   13568:	b	1299c <putchar_unlocked@plt+0x1660>
   1356c:	mov	r1, #100	; 0x64
   13570:	mov	r7, #1
   13574:	mla	r5, r1, r5, r9
   13578:	mov	r6, #6
   1357c:	mov	r9, #4
   13580:	b	1299c <putchar_unlocked@plt+0x1660>
   13584:	mov	r3, #100	; 0x64
   13588:	mov	r7, #1
   1358c:	mul	r9, r3, r9
   13590:	ldr	r3, [pc, #-1684]	; 12f04 <putchar_unlocked@plt+0x1bc8>
   13594:	mov	r6, #9
   13598:	mla	r5, r3, r5, r9
   1359c:	mov	r9, #20
   135a0:	add	r5, r5, r1
   135a4:	b	1299c <putchar_unlocked@plt+0x1660>
   135a8:	cmp	r1, #0
   135ac:	bne	13584 <putchar_unlocked@plt+0x2248>
   135b0:	cmp	r9, #0
   135b4:	bne	1356c <putchar_unlocked@plt+0x2230>
   135b8:	mov	r7, #1
   135bc:	b	12cfc <putchar_unlocked@plt+0x19c0>
   135c0:	ldr	r3, [sp, #40]	; 0x28
   135c4:	sub	r3, r3, #1
   135c8:	str	r3, [sp, #40]	; 0x28
   135cc:	b	12674 <putchar_unlocked@plt+0x1338>
   135d0:	ldr	r3, [sp, #32]
   135d4:	sub	r4, r4, r5
   135d8:	cmp	r3, #43	; 0x2b
   135dc:	cmpne	r3, #48	; 0x30
   135e0:	moveq	r7, #1
   135e4:	movne	r7, #0
   135e8:	movne	r8, #32
   135ec:	moveq	r7, #0
   135f0:	moveq	r8, #48	; 0x30
   135f4:	beq	13624 <putchar_unlocked@plt+0x22e8>
   135f8:	cmp	r7, r4
   135fc:	beq	126cc <putchar_unlocked@plt+0x1390>
   13600:	mov	r1, fp
   13604:	mov	r0, r8
   13608:	bl	112ac <fputc@plt>
   1360c:	add	r7, r7, #1
   13610:	b	135f8 <putchar_unlocked@plt+0x22bc>
   13614:	mov	r1, fp
   13618:	mov	r0, r8
   1361c:	bl	112ac <fputc@plt>
   13620:	add	r7, r7, #1
   13624:	cmp	r7, r4
   13628:	bne	13614 <putchar_unlocked@plt+0x22d8>
   1362c:	b	126cc <putchar_unlocked@plt+0x1390>
   13630:	mov	r2, r5
   13634:	ldr	r1, [sp, #56]	; 0x38
   13638:	mov	r0, fp
   1363c:	bl	11e78 <putchar_unlocked@plt+0xb3c>
   13640:	ldr	r3, [sp, #28]
   13644:	add	r3, r3, r6
   13648:	b	12618 <putchar_unlocked@plt+0x12dc>
   1364c:	push	{r4, lr}
   13650:	sub	sp, sp, #32
   13654:	add	lr, sp, #32
   13658:	mov	ip, #0
   1365c:	ldr	r4, [sp, #40]	; 0x28
   13660:	strb	ip, [lr, #-1]!
   13664:	str	r3, [sp, #12]
   13668:	mvn	r3, #0
   1366c:	str	r3, [sp, #4]
   13670:	str	r4, [sp, #16]
   13674:	str	lr, [sp, #8]
   13678:	str	ip, [sp]
   1367c:	mov	r3, ip
   13680:	bl	11eb0 <putchar_unlocked@plt+0xb74>
   13684:	add	sp, sp, #32
   13688:	pop	{r4, pc}
   1368c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13690:	mov	r4, r0
   13694:	ldmib	r0, {ip, lr}
   13698:	ldr	r8, [sp, #32]
   1369c:	cmp	lr, ip
   136a0:	bne	1370c <putchar_unlocked@plt+0x23d0>
   136a4:	ldr	lr, [r0, #20]
   136a8:	ldr	ip, [r0, #16]
   136ac:	cmp	lr, ip
   136b0:	bne	1370c <putchar_unlocked@plt+0x23d0>
   136b4:	ldr	r5, [r0, #36]	; 0x24
   136b8:	cmp	r5, #0
   136bc:	bne	1370c <putchar_unlocked@plt+0x23d0>
   136c0:	mov	r6, r2
   136c4:	mov	r7, r3
   136c8:	bl	11234 <fileno@plt>
   136cc:	mov	r2, r6
   136d0:	mov	r3, r7
   136d4:	str	r8, [sp]
   136d8:	bl	110fc <lseek64@plt>
   136dc:	mvn	r3, #0
   136e0:	mvn	r2, #0
   136e4:	cmp	r1, r3
   136e8:	cmpeq	r0, r2
   136ec:	mvneq	r0, #0
   136f0:	ldrne	r3, [r4]
   136f4:	strdne	r0, [r4, #80]	; 0x50
   136f8:	movne	r0, r5
   136fc:	bicne	r3, r3, #16
   13700:	strne	r3, [r4]
   13704:	add	sp, sp, #8
   13708:	pop	{r4, r5, r6, r7, r8, pc}
   1370c:	str	r8, [sp, #32]
   13710:	mov	r0, r4
   13714:	add	sp, sp, #8
   13718:	pop	{r4, r5, r6, r7, r8, lr}
   1371c:	b	11258 <fseeko64@plt>
   13720:	ldr	ip, [pc, #156]	; 137c4 <putchar_unlocked@plt+0x2488>
   13724:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   13728:	cmp	r0, #2
   1372c:	mov	r6, #0
   13730:	ldr	r7, [ip]
   13734:	mov	r8, ip
   13738:	str	r6, [ip]
   1373c:	bne	13770 <putchar_unlocked@plt+0x2434>
   13740:	mov	r5, r3
   13744:	mov	r4, r2
   13748:	str	r6, [sp]
   1374c:	ldr	r3, [pc, #116]	; 137c8 <putchar_unlocked@plt+0x248c>
   13750:	ldr	r2, [pc, #116]	; 137cc <putchar_unlocked@plt+0x2490>
   13754:	bl	111b0 <getopt_long@plt>
   13758:	cmn	r0, #1
   1375c:	beq	13770 <putchar_unlocked@plt+0x2434>
   13760:	cmp	r0, #104	; 0x68
   13764:	beq	13788 <putchar_unlocked@plt+0x244c>
   13768:	cmp	r0, #118	; 0x76
   1376c:	beq	13798 <putchar_unlocked@plt+0x245c>
   13770:	ldr	r3, [pc, #88]	; 137d0 <putchar_unlocked@plt+0x2494>
   13774:	mov	r2, #0
   13778:	str	r7, [r8]
   1377c:	str	r2, [r3]
   13780:	add	sp, sp, #16
   13784:	pop	{r4, r5, r6, r7, r8, pc}
   13788:	mov	r0, r6
   1378c:	ldr	r3, [sp, #44]	; 0x2c
   13790:	blx	r3
   13794:	b	13770 <putchar_unlocked@plt+0x2434>
   13798:	ldr	r0, [pc, #52]	; 137d4 <putchar_unlocked@plt+0x2498>
   1379c:	add	r3, sp, #48	; 0x30
   137a0:	str	r3, [sp]
   137a4:	str	r3, [sp, #12]
   137a8:	ldr	r0, [r0]
   137ac:	ldr	r3, [sp, #40]	; 0x28
   137b0:	mov	r2, r5
   137b4:	mov	r1, r4
   137b8:	bl	1585c <putchar_unlocked@plt+0x4520>
   137bc:	mov	r0, r6
   137c0:	bl	111d4 <exit@plt>
   137c4:	muleq	r2, r8, r1
   137c8:	andeq	r6, r1, ip, asr fp
   137cc:	andeq	r6, r1, ip, lsl #23
   137d0:	andeq	r8, r2, r8, lsl #3
   137d4:	muleq	r2, r4, r1
   137d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   137dc:	sub	sp, sp, #20
   137e0:	mov	r8, r3
   137e4:	ldrb	lr, [sp, #52]	; 0x34
   137e8:	ldr	r3, [pc, #152]	; 13888 <putchar_unlocked@plt+0x254c>
   137ec:	mov	r4, #0
   137f0:	ldr	ip, [pc, #148]	; 1388c <putchar_unlocked@plt+0x2550>
   137f4:	cmp	lr, r4
   137f8:	mov	r7, r2
   137fc:	mov	r2, #1
   13800:	ldr	r9, [r3]
   13804:	mov	r5, r3
   13808:	str	r2, [r3]
   1380c:	ldr	r2, [pc, #124]	; 13890 <putchar_unlocked@plt+0x2554>
   13810:	str	r4, [sp]
   13814:	moveq	r2, ip
   13818:	ldr	r3, [pc, #116]	; 13894 <putchar_unlocked@plt+0x2558>
   1381c:	ldr	r6, [sp, #56]	; 0x38
   13820:	bl	111b0 <getopt_long@plt>
   13824:	cmn	r0, #1
   13828:	beq	13850 <putchar_unlocked@plt+0x2514>
   1382c:	cmp	r0, #104	; 0x68
   13830:	beq	13848 <putchar_unlocked@plt+0x250c>
   13834:	cmp	r0, #118	; 0x76
   13838:	beq	1385c <putchar_unlocked@plt+0x2520>
   1383c:	ldr	r3, [pc, #84]	; 13898 <putchar_unlocked@plt+0x255c>
   13840:	ldr	r0, [r3]
   13844:	b	1384c <putchar_unlocked@plt+0x2510>
   13848:	mov	r0, r4
   1384c:	blx	r6
   13850:	str	r9, [r5]
   13854:	add	sp, sp, #20
   13858:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1385c:	ldr	r0, [pc, #56]	; 1389c <putchar_unlocked@plt+0x2560>
   13860:	add	r3, sp, #60	; 0x3c
   13864:	str	r3, [sp]
   13868:	str	r3, [sp, #12]
   1386c:	ldr	r0, [r0]
   13870:	ldr	r3, [sp, #48]	; 0x30
   13874:	mov	r2, r8
   13878:	mov	r1, r7
   1387c:	bl	1585c <putchar_unlocked@plt+0x4520>
   13880:	mov	r0, r4
   13884:	bl	111d4 <exit@plt>
   13888:	muleq	r2, r8, r1
   1388c:	andeq	r6, r1, ip, lsl #23
   13890:	strdeq	r6, [r1], -ip
   13894:	andeq	r6, r1, ip, asr fp
   13898:	andeq	r8, r2, ip, lsr r1
   1389c:	muleq	r2, r4, r1
   138a0:	push	{r4, r5, r6, lr}
   138a4:	subs	r5, r0, #0
   138a8:	bne	138c0 <putchar_unlocked@plt+0x2584>
   138ac:	ldr	r3, [pc, #124]	; 13930 <putchar_unlocked@plt+0x25f4>
   138b0:	ldr	r0, [pc, #124]	; 13934 <putchar_unlocked@plt+0x25f8>
   138b4:	ldr	r1, [r3]
   138b8:	bl	11300 <fputs@plt>
   138bc:	bl	11318 <abort@plt>
   138c0:	mov	r1, #47	; 0x2f
   138c4:	bl	11294 <strrchr@plt>
   138c8:	cmp	r0, #0
   138cc:	addne	r4, r0, #1
   138d0:	moveq	r4, r5
   138d4:	sub	r3, r4, r5
   138d8:	cmp	r3, #6
   138dc:	ble	1391c <putchar_unlocked@plt+0x25e0>
   138e0:	mov	r2, #7
   138e4:	ldr	r1, [pc, #76]	; 13938 <putchar_unlocked@plt+0x25fc>
   138e8:	sub	r0, r4, #7
   138ec:	bl	1130c <strncmp@plt>
   138f0:	cmp	r0, #0
   138f4:	bne	1391c <putchar_unlocked@plt+0x25e0>
   138f8:	mov	r2, #3
   138fc:	ldr	r1, [pc, #56]	; 1393c <putchar_unlocked@plt+0x2600>
   13900:	mov	r0, r4
   13904:	bl	1130c <strncmp@plt>
   13908:	cmp	r0, #0
   1390c:	movne	r5, r4
   13910:	ldreq	r3, [pc, #40]	; 13940 <putchar_unlocked@plt+0x2604>
   13914:	addeq	r5, r4, #3
   13918:	streq	r5, [r3]
   1391c:	ldr	r3, [pc, #32]	; 13944 <putchar_unlocked@plt+0x2608>
   13920:	str	r5, [r3]
   13924:	ldr	r3, [pc, #28]	; 13948 <putchar_unlocked@plt+0x260c>
   13928:	str	r5, [r3]
   1392c:	pop	{r4, r5, r6, pc}
   13930:	muleq	r2, r0, r1
   13934:	muleq	r1, fp, fp
   13938:	ldrdeq	r6, [r1], -r3
   1393c:	ldrdeq	r6, [r1], -fp
   13940:	andeq	r8, r2, r0, lsl #3
   13944:	andeq	r8, r2, ip, lsr #3
   13948:	andeq	r8, r2, r4, lsl #3
   1394c:	push	{r4, r5, r6, lr}
   13950:	mov	r2, #48	; 0x30
   13954:	mov	r5, r1
   13958:	mov	r1, #0
   1395c:	mov	r4, r0
   13960:	bl	11210 <memset@plt>
   13964:	cmp	r5, #10
   13968:	bne	13970 <putchar_unlocked@plt+0x2634>
   1396c:	bl	11318 <abort@plt>
   13970:	str	r5, [r4]
   13974:	mov	r0, r4
   13978:	pop	{r4, r5, r6, pc}
   1397c:	push	{r4, r5, r6, lr}
   13980:	mov	r4, r0
   13984:	mov	r5, r1
   13988:	bl	15fe4 <putchar_unlocked@plt+0x4ca8>
   1398c:	ldrb	r3, [r0]
   13990:	bic	r3, r3, #32
   13994:	cmp	r3, #85	; 0x55
   13998:	bne	13a08 <putchar_unlocked@plt+0x26cc>
   1399c:	ldrb	r3, [r0, #1]
   139a0:	bic	r3, r3, #32
   139a4:	cmp	r3, #84	; 0x54
   139a8:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   139ac:	ldrb	r3, [r0, #2]
   139b0:	bic	r3, r3, #32
   139b4:	cmp	r3, #70	; 0x46
   139b8:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   139bc:	ldrb	r3, [r0, #3]
   139c0:	cmp	r3, #45	; 0x2d
   139c4:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   139c8:	ldrb	r3, [r0, #4]
   139cc:	cmp	r3, #56	; 0x38
   139d0:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   139d4:	ldrb	r3, [r0, #5]
   139d8:	cmp	r3, #0
   139dc:	beq	139f4 <putchar_unlocked@plt+0x26b8>
   139e0:	ldr	r1, [pc, #144]	; 13a78 <putchar_unlocked@plt+0x273c>
   139e4:	ldr	r0, [pc, #144]	; 13a7c <putchar_unlocked@plt+0x2740>
   139e8:	cmp	r5, #9
   139ec:	movne	r0, r1
   139f0:	pop	{r4, r5, r6, pc}
   139f4:	ldrb	r3, [r4]
   139f8:	ldr	r1, [pc, #128]	; 13a80 <putchar_unlocked@plt+0x2744>
   139fc:	ldr	r0, [pc, #128]	; 13a84 <putchar_unlocked@plt+0x2748>
   13a00:	cmp	r3, #96	; 0x60
   13a04:	b	139ec <putchar_unlocked@plt+0x26b0>
   13a08:	cmp	r3, #71	; 0x47
   13a0c:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a10:	ldrb	r3, [r0, #1]
   13a14:	bic	r3, r3, #32
   13a18:	cmp	r3, #66	; 0x42
   13a1c:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a20:	ldrb	r3, [r0, #2]
   13a24:	cmp	r3, #49	; 0x31
   13a28:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a2c:	ldrb	r3, [r0, #3]
   13a30:	cmp	r3, #56	; 0x38
   13a34:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a38:	ldrb	r3, [r0, #4]
   13a3c:	cmp	r3, #48	; 0x30
   13a40:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a44:	ldrb	r3, [r0, #5]
   13a48:	cmp	r3, #51	; 0x33
   13a4c:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a50:	ldrb	r3, [r0, #6]
   13a54:	cmp	r3, #48	; 0x30
   13a58:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a5c:	ldrb	r3, [r0, #7]
   13a60:	cmp	r3, #0
   13a64:	bne	139e0 <putchar_unlocked@plt+0x26a4>
   13a68:	ldrb	r3, [r4]
   13a6c:	ldr	r1, [pc, #20]	; 13a88 <putchar_unlocked@plt+0x274c>
   13a70:	ldr	r0, [pc, #20]	; 13a8c <putchar_unlocked@plt+0x2750>
   13a74:	b	13a00 <putchar_unlocked@plt+0x26c4>
   13a78:	andeq	r6, r1, r5, asr #24
   13a7c:	andeq	r6, r1, r3, asr #24
   13a80:	andeq	r6, r1, r8, lsr ip
   13a84:	andeq	r6, r1, r4, lsr ip
   13a88:	andeq	r6, r1, r0, asr #24
   13a8c:	andeq	r6, r1, ip, lsr ip
   13a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a94:	sub	sp, sp, #108	; 0x6c
   13a98:	mov	r8, r0
   13a9c:	str	r3, [sp, #36]	; 0x24
   13aa0:	mov	r5, r1
   13aa4:	str	r2, [sp, #44]	; 0x2c
   13aa8:	ldr	sl, [sp, #144]	; 0x90
   13aac:	bl	11108 <__ctype_get_mb_cur_max@plt>
   13ab0:	ldr	r3, [sp, #148]	; 0x94
   13ab4:	mov	r7, #0
   13ab8:	str	r7, [sp, #48]	; 0x30
   13abc:	lsr	r6, r3, #1
   13ac0:	and	r6, r6, #1
   13ac4:	mov	r3, #1
   13ac8:	str	r3, [sp, #72]	; 0x48
   13acc:	str	r7, [sp, #24]
   13ad0:	str	r7, [sp, #32]
   13ad4:	str	r7, [sp, #40]	; 0x28
   13ad8:	str	r7, [sp, #60]	; 0x3c
   13adc:	str	r0, [sp, #76]	; 0x4c
   13ae0:	cmp	sl, #10
   13ae4:	ldrls	pc, [pc, sl, lsl #2]
   13ae8:	b	13d24 <putchar_unlocked@plt+0x29e8>
   13aec:	andeq	r3, r1, r8, lsl fp
   13af0:	andeq	r4, r1, ip, lsr #15
   13af4:	strdeq	r3, [r1], -r0
   13af8:	andeq	r3, r1, ip, lsr sp
   13afc:	andeq	r3, r1, ip, asr #25
   13b00:	andeq	r3, r1, r4, lsr #22
   13b04:	andeq	r4, r1, ip, lsl #15
   13b08:	andeq	r3, r1, r8, lsr #26
   13b0c:	andeq	r3, r1, ip, lsl ip
   13b10:	andeq	r3, r1, ip, lsl ip
   13b14:	andeq	r3, r1, ip, lsl ip
   13b18:	mov	r6, #0
   13b1c:	mov	r4, #0
   13b20:	b	13b50 <putchar_unlocked@plt+0x2814>
   13b24:	cmp	r6, #0
   13b28:	bne	13d4c <putchar_unlocked@plt+0x2a10>
   13b2c:	cmp	r5, #0
   13b30:	movne	r3, #34	; 0x22
   13b34:	strbne	r3, [r8]
   13b38:	mov	r3, #1
   13b3c:	str	r3, [sp, #24]
   13b40:	str	r3, [sp, #32]
   13b44:	mov	r4, #1
   13b48:	ldr	r3, [pc, #3172]	; 147b4 <putchar_unlocked@plt+0x3478>
   13b4c:	str	r3, [sp, #40]	; 0x28
   13b50:	mov	r9, r5
   13b54:	mov	r3, #0
   13b58:	str	r7, [sp, #68]	; 0x44
   13b5c:	str	r3, [sp, #28]
   13b60:	ldr	r3, [sp, #36]	; 0x24
   13b64:	cmn	r3, #1
   13b68:	bne	146f8 <putchar_unlocked@plt+0x33bc>
   13b6c:	ldr	r3, [sp, #44]	; 0x2c
   13b70:	ldr	r2, [sp, #28]
   13b74:	ldrb	r3, [r3, r2]
   13b78:	adds	r3, r3, #0
   13b7c:	movne	r3, #1
   13b80:	str	r3, [sp, #52]	; 0x34
   13b84:	ldr	r3, [sp, #52]	; 0x34
   13b88:	cmp	r3, #0
   13b8c:	bne	13d74 <putchar_unlocked@plt+0x2a38>
   13b90:	sub	r2, sl, #2
   13b94:	clz	r2, r2
   13b98:	lsr	r2, r2, #5
   13b9c:	and	r3, r6, r2
   13ba0:	cmp	r4, #0
   13ba4:	movne	r3, #0
   13ba8:	andeq	r3, r3, #1
   13bac:	cmp	r3, #0
   13bb0:	bne	13f3c <putchar_unlocked@plt+0x2c00>
   13bb4:	eor	r3, r6, #1
   13bb8:	ands	r2, r2, r3
   13bbc:	beq	14730 <putchar_unlocked@plt+0x33f4>
   13bc0:	ldr	r3, [sp, #68]	; 0x44
   13bc4:	cmp	r3, #0
   13bc8:	beq	14768 <putchar_unlocked@plt+0x342c>
   13bcc:	ldr	r3, [sp, #72]	; 0x48
   13bd0:	cmp	r3, #0
   13bd4:	beq	1470c <putchar_unlocked@plt+0x33d0>
   13bd8:	ldr	r3, [sp, #160]	; 0xa0
   13bdc:	ldr	r2, [sp, #44]	; 0x2c
   13be0:	str	r3, [sp, #16]
   13be4:	ldr	r3, [sp, #156]	; 0x9c
   13be8:	ldr	r1, [sp, #60]	; 0x3c
   13bec:	str	r3, [sp, #12]
   13bf0:	ldr	r3, [sp, #152]	; 0x98
   13bf4:	str	r3, [sp, #8]
   13bf8:	ldr	r3, [sp, #148]	; 0x94
   13bfc:	str	r3, [sp, #4]
   13c00:	mov	r3, #5
   13c04:	str	r3, [sp]
   13c08:	ldr	r3, [sp, #36]	; 0x24
   13c0c:	mov	r0, r8
   13c10:	bl	13a90 <putchar_unlocked@plt+0x2754>
   13c14:	mov	r4, r0
   13c18:	b	1475c <putchar_unlocked@plt+0x3420>
   13c1c:	cmp	sl, #10
   13c20:	beq	13c7c <putchar_unlocked@plt+0x2940>
   13c24:	ldr	r4, [pc, #2956]	; 147b8 <putchar_unlocked@plt+0x347c>
   13c28:	mov	r2, #5
   13c2c:	mov	r1, r4
   13c30:	mov	r0, #0
   13c34:	bl	1109c <dcgettext@plt>
   13c38:	cmp	r0, r4
   13c3c:	str	r0, [sp, #156]	; 0x9c
   13c40:	bne	13c50 <putchar_unlocked@plt+0x2914>
   13c44:	mov	r1, sl
   13c48:	bl	1397c <putchar_unlocked@plt+0x2640>
   13c4c:	str	r0, [sp, #156]	; 0x9c
   13c50:	ldr	r4, [pc, #2916]	; 147bc <putchar_unlocked@plt+0x3480>
   13c54:	mov	r2, #5
   13c58:	mov	r1, r4
   13c5c:	mov	r0, #0
   13c60:	bl	1109c <dcgettext@plt>
   13c64:	cmp	r0, r4
   13c68:	str	r0, [sp, #160]	; 0xa0
   13c6c:	bne	13c7c <putchar_unlocked@plt+0x2940>
   13c70:	mov	r1, sl
   13c74:	bl	1397c <putchar_unlocked@plt+0x2640>
   13c78:	str	r0, [sp, #160]	; 0xa0
   13c7c:	cmp	r6, #0
   13c80:	moveq	r4, r6
   13c84:	beq	13c9c <putchar_unlocked@plt+0x2960>
   13c88:	mov	r4, #0
   13c8c:	b	13cac <putchar_unlocked@plt+0x2970>
   13c90:	cmp	r5, r4
   13c94:	strbhi	r3, [r8, r4]
   13c98:	add	r4, r4, #1
   13c9c:	ldr	r3, [sp, #156]	; 0x9c
   13ca0:	ldrb	r3, [r3, r4]
   13ca4:	cmp	r3, #0
   13ca8:	bne	13c90 <putchar_unlocked@plt+0x2954>
   13cac:	ldr	r0, [sp, #160]	; 0xa0
   13cb0:	bl	111e0 <strlen@plt>
   13cb4:	ldr	r3, [sp, #160]	; 0xa0
   13cb8:	str	r3, [sp, #40]	; 0x28
   13cbc:	mov	r3, #1
   13cc0:	str	r3, [sp, #24]
   13cc4:	str	r0, [sp, #32]
   13cc8:	b	13b50 <putchar_unlocked@plt+0x2814>
   13ccc:	mov	r3, #1
   13cd0:	cmp	r6, #0
   13cd4:	streq	r3, [sp, #24]
   13cd8:	beq	13cf8 <putchar_unlocked@plt+0x29bc>
   13cdc:	str	r3, [sp, #32]
   13ce0:	ldr	r3, [pc, #2772]	; 147bc <putchar_unlocked@plt+0x3480>
   13ce4:	mov	r4, #0
   13ce8:	str	r3, [sp, #40]	; 0x28
   13cec:	b	13d1c <putchar_unlocked@plt+0x29e0>
   13cf0:	cmp	r6, #0
   13cf4:	bne	13d64 <putchar_unlocked@plt+0x2a28>
   13cf8:	cmp	r5, #0
   13cfc:	movne	r3, #39	; 0x27
   13d00:	strbne	r3, [r8]
   13d04:	mov	r3, #1
   13d08:	str	r3, [sp, #32]
   13d0c:	mov	r6, #0
   13d10:	ldr	r3, [pc, #2724]	; 147bc <putchar_unlocked@plt+0x3480>
   13d14:	mov	r4, #1
   13d18:	str	r3, [sp, #40]	; 0x28
   13d1c:	mov	sl, #2
   13d20:	b	13b50 <putchar_unlocked@plt+0x2814>
   13d24:	bl	11318 <abort@plt>
   13d28:	mov	r6, #0
   13d2c:	mov	r3, #1
   13d30:	str	r3, [sp, #24]
   13d34:	mov	r4, r6
   13d38:	b	13b50 <putchar_unlocked@plt+0x2814>
   13d3c:	mov	r6, #1
   13d40:	str	r6, [sp, #24]
   13d44:	str	r6, [sp, #32]
   13d48:	b	13ce0 <putchar_unlocked@plt+0x29a4>
   13d4c:	mov	r3, #1
   13d50:	str	r3, [sp, #32]
   13d54:	ldr	r3, [pc, #2648]	; 147b4 <putchar_unlocked@plt+0x3478>
   13d58:	str	r6, [sp, #24]
   13d5c:	str	r3, [sp, #40]	; 0x28
   13d60:	b	13b1c <putchar_unlocked@plt+0x27e0>
   13d64:	mov	r3, #1
   13d68:	str	r3, [sp, #32]
   13d6c:	ldr	r3, [pc, #2632]	; 147bc <putchar_unlocked@plt+0x3480>
   13d70:	b	13d5c <putchar_unlocked@plt+0x2a20>
   13d74:	ldr	r3, [sp, #32]
   13d78:	ldr	fp, [sp, #24]
   13d7c:	cmp	sl, #2
   13d80:	moveq	fp, #0
   13d84:	andne	fp, fp, #1
   13d88:	adds	r5, r3, #0
   13d8c:	movne	r5, #1
   13d90:	ands	r3, r5, fp
   13d94:	str	r3, [sp, #64]	; 0x40
   13d98:	beq	13e68 <putchar_unlocked@plt+0x2b2c>
   13d9c:	ldr	r2, [sp, #32]
   13da0:	ldr	r3, [sp, #28]
   13da4:	add	r7, r3, r2
   13da8:	mov	r3, r2
   13dac:	ldr	r2, [sp, #36]	; 0x24
   13db0:	cmp	r3, #1
   13db4:	movls	r3, #0
   13db8:	movhi	r3, #1
   13dbc:	cmn	r2, #1
   13dc0:	movne	r3, #0
   13dc4:	cmp	r3, #0
   13dc8:	beq	13dd8 <putchar_unlocked@plt+0x2a9c>
   13dcc:	ldr	r0, [sp, #44]	; 0x2c
   13dd0:	bl	111e0 <strlen@plt>
   13dd4:	str	r0, [sp, #36]	; 0x24
   13dd8:	ldr	r3, [sp, #36]	; 0x24
   13ddc:	cmp	r3, r7
   13de0:	bcc	13e60 <putchar_unlocked@plt+0x2b24>
   13de4:	ldr	r3, [sp, #44]	; 0x2c
   13de8:	ldr	r0, [sp, #28]
   13dec:	ldr	r2, [sp, #32]
   13df0:	ldr	r1, [sp, #40]	; 0x28
   13df4:	add	r0, r3, r0
   13df8:	bl	11084 <memcmp@plt>
   13dfc:	cmp	r0, #0
   13e00:	bne	13e60 <putchar_unlocked@plt+0x2b24>
   13e04:	cmp	r6, #0
   13e08:	beq	13e68 <putchar_unlocked@plt+0x2b2c>
   13e0c:	str	r6, [sp, #24]
   13e10:	ldr	r3, [sp, #24]
   13e14:	ldr	r2, [sp, #44]	; 0x2c
   13e18:	cmp	sl, #2
   13e1c:	movne	r3, #0
   13e20:	andeq	r3, r3, #1
   13e24:	cmp	r3, #0
   13e28:	ldr	r3, [sp, #160]	; 0xa0
   13e2c:	movne	sl, #4
   13e30:	str	r3, [sp, #16]
   13e34:	ldr	r3, [sp, #156]	; 0x9c
   13e38:	str	sl, [sp]
   13e3c:	str	r3, [sp, #12]
   13e40:	mov	r3, #0
   13e44:	str	r3, [sp, #8]
   13e48:	ldr	r3, [sp, #148]	; 0x94
   13e4c:	mov	r1, r9
   13e50:	bic	r3, r3, #2
   13e54:	str	r3, [sp, #4]
   13e58:	ldr	r3, [sp, #36]	; 0x24
   13e5c:	b	13c0c <putchar_unlocked@plt+0x28d0>
   13e60:	mov	r3, #0
   13e64:	str	r3, [sp, #64]	; 0x40
   13e68:	ldr	r2, [sp, #28]
   13e6c:	ldr	r3, [sp, #44]	; 0x2c
   13e70:	add	r3, r3, r2
   13e74:	str	r3, [sp, #80]	; 0x50
   13e78:	ldr	r3, [sp, #44]	; 0x2c
   13e7c:	ldrb	r7, [r3, r2]
   13e80:	cmp	r7, #58	; 0x3a
   13e84:	bhi	13fec <putchar_unlocked@plt+0x2cb0>
   13e88:	cmp	r7, #43	; 0x2b
   13e8c:	bcs	14040 <putchar_unlocked@plt+0x2d04>
   13e90:	cmp	r7, #32
   13e94:	beq	14098 <putchar_unlocked@plt+0x2d5c>
   13e98:	bhi	13f44 <putchar_unlocked@plt+0x2c08>
   13e9c:	cmp	r7, #9
   13ea0:	beq	1434c <putchar_unlocked@plt+0x3010>
   13ea4:	bhi	13f08 <putchar_unlocked@plt+0x2bcc>
   13ea8:	cmp	r7, #7
   13eac:	beq	143f8 <putchar_unlocked@plt+0x30bc>
   13eb0:	bhi	140b4 <putchar_unlocked@plt+0x2d78>
   13eb4:	cmp	r7, #0
   13eb8:	beq	140d0 <putchar_unlocked@plt+0x2d94>
   13ebc:	ldr	r3, [sp, #76]	; 0x4c
   13ec0:	cmp	r3, #1
   13ec4:	bne	1443c <putchar_unlocked@plt+0x3100>
   13ec8:	bl	111c8 <__ctype_b_loc@plt>
   13ecc:	sxth	r3, r7
   13ed0:	lsl	r3, r3, #1
   13ed4:	ldr	r2, [r0]
   13ed8:	ldrh	r5, [r2, r3]
   13edc:	ldr	r3, [sp, #76]	; 0x4c
   13ee0:	str	r3, [sp, #56]	; 0x38
   13ee4:	lsr	r5, r5, #14
   13ee8:	and	r5, r5, #1
   13eec:	ldr	r3, [sp, #24]
   13ef0:	eor	fp, r5, #1
   13ef4:	and	fp, fp, r3
   13ef8:	ands	fp, fp, #255	; 0xff
   13efc:	beq	14284 <putchar_unlocked@plt+0x2f48>
   13f00:	mov	r5, #0
   13f04:	b	144e8 <putchar_unlocked@plt+0x31ac>
   13f08:	cmp	r7, #11
   13f0c:	beq	14354 <putchar_unlocked@plt+0x3018>
   13f10:	bcc	143f0 <putchar_unlocked@plt+0x30b4>
   13f14:	cmp	r7, #12
   13f18:	beq	14400 <putchar_unlocked@plt+0x30c4>
   13f1c:	cmp	r7, #13
   13f20:	moveq	r3, #114	; 0x72
   13f24:	bne	13ebc <putchar_unlocked@plt+0x2b80>
   13f28:	cmp	sl, #2
   13f2c:	movne	r2, #0
   13f30:	andeq	r2, r6, #1
   13f34:	cmp	r2, #0
   13f38:	beq	140b8 <putchar_unlocked@plt+0x2d7c>
   13f3c:	mov	sl, #2
   13f40:	b	13e10 <putchar_unlocked@plt+0x2ad4>
   13f44:	cmp	r7, #37	; 0x25
   13f48:	beq	14040 <putchar_unlocked@plt+0x2d04>
   13f4c:	bhi	13f60 <putchar_unlocked@plt+0x2c24>
   13f50:	cmp	r7, #35	; 0x23
   13f54:	beq	1408c <putchar_unlocked@plt+0x2d50>
   13f58:	mov	r5, #0
   13f5c:	b	1409c <putchar_unlocked@plt+0x2d60>
   13f60:	cmp	r7, #39	; 0x27
   13f64:	bne	13f58 <putchar_unlocked@plt+0x2c1c>
   13f68:	cmp	sl, #2
   13f6c:	ldrne	r5, [sp, #52]	; 0x34
   13f70:	movne	r3, r5
   13f74:	strne	r3, [sp, #68]	; 0x44
   13f78:	bne	14044 <putchar_unlocked@plt+0x2d08>
   13f7c:	cmp	r6, #0
   13f80:	bne	13e10 <putchar_unlocked@plt+0x2ad4>
   13f84:	ldr	r2, [sp, #60]	; 0x3c
   13f88:	adds	r3, r9, #0
   13f8c:	movne	r3, #1
   13f90:	cmp	r2, #0
   13f94:	movne	r3, #0
   13f98:	cmp	r3, #0
   13f9c:	strne	r9, [sp, #60]	; 0x3c
   13fa0:	movne	r9, #0
   13fa4:	bne	13fb4 <putchar_unlocked@plt+0x2c78>
   13fa8:	cmp	r9, r4
   13fac:	movhi	r3, #39	; 0x27
   13fb0:	strbhi	r3, [r8, r4]
   13fb4:	add	r3, r4, #1
   13fb8:	cmp	r3, r9
   13fbc:	movcc	r2, #92	; 0x5c
   13fc0:	strbcc	r2, [r8, r3]
   13fc4:	add	r3, r4, #2
   13fc8:	cmp	r3, r9
   13fcc:	ldr	r5, [sp, #52]	; 0x34
   13fd0:	movcc	r2, #39	; 0x27
   13fd4:	strbcc	r2, [r8, r3]
   13fd8:	add	r4, r4, #3
   13fdc:	mov	fp, r6
   13fe0:	str	r5, [sp, #68]	; 0x44
   13fe4:	str	r6, [sp, #48]	; 0x30
   13fe8:	b	14284 <putchar_unlocked@plt+0x2f48>
   13fec:	cmp	r7, #94	; 0x5e
   13ff0:	beq	13f58 <putchar_unlocked@plt+0x2c1c>
   13ff4:	bhi	1404c <putchar_unlocked@plt+0x2d10>
   13ff8:	cmp	r7, #90	; 0x5a
   13ffc:	bhi	14034 <putchar_unlocked@plt+0x2cf8>
   14000:	cmp	r7, #65	; 0x41
   14004:	bcs	14040 <putchar_unlocked@plt+0x2d04>
   14008:	cmp	r7, #62	; 0x3e
   1400c:	bls	13f58 <putchar_unlocked@plt+0x2c1c>
   14010:	cmp	r7, #63	; 0x3f
   14014:	bne	13ebc <putchar_unlocked@plt+0x2b80>
   14018:	cmp	sl, #2
   1401c:	beq	141c0 <putchar_unlocked@plt+0x2e84>
   14020:	cmp	sl, #5
   14024:	beq	141d0 <putchar_unlocked@plt+0x2e94>
   14028:	mov	fp, #0
   1402c:	mov	r5, fp
   14030:	b	14284 <putchar_unlocked@plt+0x2f48>
   14034:	cmp	r7, #92	; 0x5c
   14038:	beq	1435c <putchar_unlocked@plt+0x3020>
   1403c:	bls	13f58 <putchar_unlocked@plt+0x2c1c>
   14040:	ldr	r5, [sp, #52]	; 0x34
   14044:	mov	fp, #0
   14048:	b	14284 <putchar_unlocked@plt+0x2f48>
   1404c:	cmp	r7, #122	; 0x7a
   14050:	bhi	14070 <putchar_unlocked@plt+0x2d34>
   14054:	cmp	r7, #97	; 0x61
   14058:	bcs	14040 <putchar_unlocked@plt+0x2d04>
   1405c:	cmp	r7, #95	; 0x5f
   14060:	beq	14040 <putchar_unlocked@plt+0x2d04>
   14064:	cmp	r7, #96	; 0x60
   14068:	bne	13ebc <putchar_unlocked@plt+0x2b80>
   1406c:	b	13f58 <putchar_unlocked@plt+0x2c1c>
   14070:	cmp	r7, #124	; 0x7c
   14074:	beq	13f58 <putchar_unlocked@plt+0x2c1c>
   14078:	bcc	14408 <putchar_unlocked@plt+0x30cc>
   1407c:	cmp	r7, #125	; 0x7d
   14080:	beq	14408 <putchar_unlocked@plt+0x30cc>
   14084:	cmp	r7, #126	; 0x7e
   14088:	bne	13ebc <putchar_unlocked@plt+0x2b80>
   1408c:	ldr	r3, [sp, #28]
   14090:	cmp	r3, #0
   14094:	bne	141c8 <putchar_unlocked@plt+0x2e8c>
   14098:	ldr	r5, [sp, #52]	; 0x34
   1409c:	cmp	sl, #2
   140a0:	movne	fp, #0
   140a4:	andeq	fp, r6, #1
   140a8:	cmp	fp, #0
   140ac:	beq	14284 <putchar_unlocked@plt+0x2f48>
   140b0:	b	13f3c <putchar_unlocked@plt+0x2c00>
   140b4:	mov	r3, #98	; 0x62
   140b8:	ldr	r2, [sp, #24]
   140bc:	cmp	r2, #0
   140c0:	beq	141c8 <putchar_unlocked@plt+0x2e8c>
   140c4:	mov	r7, r3
   140c8:	mov	r5, #0
   140cc:	b	142dc <putchar_unlocked@plt+0x2fa0>
   140d0:	ldr	r3, [sp, #24]
   140d4:	cmp	r3, #0
   140d8:	beq	141a4 <putchar_unlocked@plt+0x2e68>
   140dc:	cmp	r6, #0
   140e0:	bne	13e0c <putchar_unlocked@plt+0x2ad0>
   140e4:	ldr	r3, [sp, #48]	; 0x30
   140e8:	eor	r2, r3, #1
   140ec:	cmp	sl, #2
   140f0:	movne	r2, #0
   140f4:	andeq	r2, r2, #1
   140f8:	cmp	r2, #0
   140fc:	moveq	r3, r4
   14100:	beq	14138 <putchar_unlocked@plt+0x2dfc>
   14104:	cmp	r9, r4
   14108:	movhi	r3, #39	; 0x27
   1410c:	strbhi	r3, [r8, r4]
   14110:	add	r3, r4, #1
   14114:	cmp	r9, r3
   14118:	movhi	r1, #36	; 0x24
   1411c:	strbhi	r1, [r8, r3]
   14120:	add	r3, r4, #2
   14124:	cmp	r9, r3
   14128:	movhi	r1, #39	; 0x27
   1412c:	strbhi	r1, [r8, r3]
   14130:	add	r3, r4, #3
   14134:	str	r2, [sp, #48]	; 0x30
   14138:	cmp	r9, r3
   1413c:	movhi	r2, #92	; 0x5c
   14140:	strbhi	r2, [r8, r3]
   14144:	cmp	fp, #0
   14148:	add	r4, r3, #1
   1414c:	beq	146dc <putchar_unlocked@plt+0x33a0>
   14150:	ldr	r2, [sp, #28]
   14154:	ldr	r1, [sp, #36]	; 0x24
   14158:	add	r2, r2, #1
   1415c:	cmp	r1, r2
   14160:	bls	1419c <putchar_unlocked@plt+0x2e60>
   14164:	ldr	r1, [sp, #44]	; 0x2c
   14168:	mov	r7, #48	; 0x30
   1416c:	ldrb	r2, [r1, r2]
   14170:	sub	r2, r2, #48	; 0x30
   14174:	cmp	r2, #9
   14178:	movhi	r5, r6
   1417c:	bhi	14284 <putchar_unlocked@plt+0x2f48>
   14180:	cmp	r9, r4
   14184:	add	r2, r3, #2
   14188:	strbhi	r7, [r8, r4]
   1418c:	cmp	r9, r2
   14190:	add	r4, r3, #3
   14194:	movhi	r1, #48	; 0x30
   14198:	strbhi	r1, [r8, r2]
   1419c:	mov	r5, r6
   141a0:	b	146e4 <putchar_unlocked@plt+0x33a8>
   141a4:	ldr	r3, [sp, #148]	; 0x94
   141a8:	tst	r3, #1
   141ac:	ldreq	r5, [sp, #24]
   141b0:	beq	146f0 <putchar_unlocked@plt+0x33b4>
   141b4:	ldr	r3, [sp, #28]
   141b8:	add	r3, r3, #1
   141bc:	b	13b5c <putchar_unlocked@plt+0x2820>
   141c0:	cmp	r6, #0
   141c4:	bne	13e10 <putchar_unlocked@plt+0x2ad4>
   141c8:	mov	r5, #0
   141cc:	b	14044 <putchar_unlocked@plt+0x2d08>
   141d0:	ldr	r3, [sp, #148]	; 0x94
   141d4:	tst	r3, #4
   141d8:	beq	141c8 <putchar_unlocked@plt+0x2e8c>
   141dc:	ldr	r3, [sp, #28]
   141e0:	add	r2, r3, #2
   141e4:	ldr	r3, [sp, #36]	; 0x24
   141e8:	cmp	r3, r2
   141ec:	bls	141c8 <putchar_unlocked@plt+0x2e8c>
   141f0:	ldr	r3, [sp, #44]	; 0x2c
   141f4:	ldr	r1, [sp, #28]
   141f8:	add	r3, r3, r1
   141fc:	ldrb	r0, [r3, #1]
   14200:	cmp	r0, #63	; 0x3f
   14204:	bne	141c8 <putchar_unlocked@plt+0x2e8c>
   14208:	ldr	r3, [sp, #44]	; 0x2c
   1420c:	ldrb	r1, [r3, r2]
   14210:	sub	r3, r1, #33	; 0x21
   14214:	uxtb	r3, r3
   14218:	cmp	r3, #29
   1421c:	bhi	146ec <putchar_unlocked@plt+0x33b0>
   14220:	mov	ip, #1
   14224:	ldr	r5, [pc, #1428]	; 147c0 <putchar_unlocked@plt+0x3484>
   14228:	ands	r5, r5, ip, lsl r3
   1422c:	beq	14044 <putchar_unlocked@plt+0x2d08>
   14230:	cmp	r6, #0
   14234:	bne	13e10 <putchar_unlocked@plt+0x2ad4>
   14238:	add	r3, r4, #1
   1423c:	cmp	r9, r4
   14240:	strbhi	r0, [r8, r4]
   14244:	cmp	r9, r3
   14248:	movhi	r0, #34	; 0x22
   1424c:	strbhi	r0, [r8, r3]
   14250:	add	r3, r4, #2
   14254:	cmp	r9, r3
   14258:	movhi	r0, #34	; 0x22
   1425c:	strbhi	r0, [r8, r3]
   14260:	add	r3, r4, #3
   14264:	cmp	r9, r3
   14268:	add	r4, r4, #4
   1426c:	mov	r5, r6
   14270:	mov	fp, r6
   14274:	mov	r7, r1
   14278:	movhi	r0, #63	; 0x3f
   1427c:	strbhi	r0, [r8, r3]
   14280:	str	r2, [sp, #28]
   14284:	ldr	r3, [sp, #24]
   14288:	eor	r3, r3, #1
   1428c:	cmp	sl, #2
   14290:	orreq	r3, r3, #1
   14294:	eor	r3, r3, #1
   14298:	orr	r3, r6, r3
   1429c:	tst	r3, #255	; 0xff
   142a0:	beq	142d0 <putchar_unlocked@plt+0x2f94>
   142a4:	ldr	r3, [sp, #152]	; 0x98
   142a8:	cmp	r3, #0
   142ac:	beq	142d0 <putchar_unlocked@plt+0x2f94>
   142b0:	lsr	r2, r7, #5
   142b4:	ldr	r1, [sp, #152]	; 0x98
   142b8:	uxtb	r2, r2
   142bc:	and	r3, r7, #31
   142c0:	ldr	r2, [r1, r2, lsl #2]
   142c4:	lsr	r3, r2, r3
   142c8:	tst	r3, #1
   142cc:	bne	142dc <putchar_unlocked@plt+0x2fa0>
   142d0:	ldr	r3, [sp, #64]	; 0x40
   142d4:	cmp	r3, #0
   142d8:	beq	14374 <putchar_unlocked@plt+0x3038>
   142dc:	cmp	r6, #0
   142e0:	bne	13e10 <putchar_unlocked@plt+0x2ad4>
   142e4:	ldr	r3, [sp, #48]	; 0x30
   142e8:	eor	r3, r3, #1
   142ec:	cmp	sl, #2
   142f0:	movne	r3, #0
   142f4:	andeq	r3, r3, #1
   142f8:	cmp	r3, #0
   142fc:	beq	14334 <putchar_unlocked@plt+0x2ff8>
   14300:	cmp	r9, r4
   14304:	movhi	r2, #39	; 0x27
   14308:	strbhi	r2, [r8, r4]
   1430c:	add	r2, r4, #1
   14310:	cmp	r9, r2
   14314:	movhi	r1, #36	; 0x24
   14318:	strbhi	r1, [r8, r2]
   1431c:	add	r2, r4, #2
   14320:	cmp	r9, r2
   14324:	add	r4, r4, #3
   14328:	movhi	r1, #39	; 0x27
   1432c:	strbhi	r1, [r8, r2]
   14330:	str	r3, [sp, #48]	; 0x30
   14334:	cmp	r9, r4
   14338:	movhi	r3, #92	; 0x5c
   1433c:	strbhi	r3, [r8, r4]
   14340:	ldr	fp, [sp, #52]	; 0x34
   14344:	add	r4, r4, #1
   14348:	b	14374 <putchar_unlocked@plt+0x3038>
   1434c:	mov	r3, #116	; 0x74
   14350:	b	13f28 <putchar_unlocked@plt+0x2bec>
   14354:	mov	r3, #118	; 0x76
   14358:	b	140b8 <putchar_unlocked@plt+0x2d7c>
   1435c:	cmp	sl, #2
   14360:	bne	143d0 <putchar_unlocked@plt+0x3094>
   14364:	cmp	r6, #0
   14368:	bne	13e10 <putchar_unlocked@plt+0x2ad4>
   1436c:	mov	r5, r6
   14370:	mov	fp, r6
   14374:	ldr	r3, [sp, #48]	; 0x30
   14378:	eor	fp, fp, #1
   1437c:	and	fp, fp, r3
   14380:	tst	fp, #255	; 0xff
   14384:	beq	143b0 <putchar_unlocked@plt+0x3074>
   14388:	cmp	r9, r4
   1438c:	movhi	r3, #39	; 0x27
   14390:	strbhi	r3, [r8, r4]
   14394:	add	r3, r4, #1
   14398:	cmp	r9, r3
   1439c:	movhi	r2, #39	; 0x27
   143a0:	add	r4, r4, #2
   143a4:	strbhi	r2, [r8, r3]
   143a8:	mov	r3, #0
   143ac:	str	r3, [sp, #48]	; 0x30
   143b0:	cmp	r9, r4
   143b4:	strbhi	r7, [r8, r4]
   143b8:	ldr	r3, [sp, #72]	; 0x48
   143bc:	cmp	r5, #0
   143c0:	moveq	r3, #0
   143c4:	add	r4, r4, #1
   143c8:	str	r3, [sp, #72]	; 0x48
   143cc:	b	141b4 <putchar_unlocked@plt+0x2e78>
   143d0:	ldr	r3, [sp, #24]
   143d4:	and	r3, r3, r6
   143d8:	tst	r5, r3
   143dc:	moveq	r3, r7
   143e0:	beq	13f28 <putchar_unlocked@plt+0x2bec>
   143e4:	mov	fp, #0
   143e8:	mov	r5, fp
   143ec:	b	14374 <putchar_unlocked@plt+0x3038>
   143f0:	mov	r3, #110	; 0x6e
   143f4:	b	13f28 <putchar_unlocked@plt+0x2bec>
   143f8:	mov	r3, #97	; 0x61
   143fc:	b	140b8 <putchar_unlocked@plt+0x2d7c>
   14400:	mov	r3, #102	; 0x66
   14404:	b	140b8 <putchar_unlocked@plt+0x2d7c>
   14408:	ldr	r3, [sp, #36]	; 0x24
   1440c:	cmn	r3, #1
   14410:	bne	14430 <putchar_unlocked@plt+0x30f4>
   14414:	ldr	r3, [sp, #44]	; 0x2c
   14418:	ldrb	r3, [r3, #1]
   1441c:	adds	r3, r3, #0
   14420:	movne	r3, #1
   14424:	cmp	r3, #0
   14428:	bne	141c8 <putchar_unlocked@plt+0x2e8c>
   1442c:	b	1408c <putchar_unlocked@plt+0x2d50>
   14430:	ldr	r3, [sp, #36]	; 0x24
   14434:	subs	r3, r3, #1
   14438:	b	14420 <putchar_unlocked@plt+0x30e4>
   1443c:	mov	r3, #0
   14440:	str	r3, [sp, #96]	; 0x60
   14444:	str	r3, [sp, #100]	; 0x64
   14448:	ldr	r3, [sp, #36]	; 0x24
   1444c:	cmn	r3, #1
   14450:	bne	14460 <putchar_unlocked@plt+0x3124>
   14454:	ldr	r0, [sp, #44]	; 0x2c
   14458:	bl	111e0 <strlen@plt>
   1445c:	str	r0, [sp, #36]	; 0x24
   14460:	ldr	r5, [sp, #52]	; 0x34
   14464:	mov	r3, #0
   14468:	str	r3, [sp, #56]	; 0x38
   1446c:	ldr	r3, [sp, #28]
   14470:	ldr	r2, [sp, #56]	; 0x38
   14474:	ldr	r1, [sp, #36]	; 0x24
   14478:	add	r2, r3, r2
   1447c:	ldr	r3, [sp, #44]	; 0x2c
   14480:	add	r0, sp, #92	; 0x5c
   14484:	add	fp, r3, r2
   14488:	sub	r2, r1, r2
   1448c:	add	r3, sp, #96	; 0x60
   14490:	mov	r1, fp
   14494:	bl	16018 <putchar_unlocked@plt+0x4cdc>
   14498:	subs	r2, r0, #0
   1449c:	beq	144dc <putchar_unlocked@plt+0x31a0>
   144a0:	cmn	r2, #1
   144a4:	beq	146b4 <putchar_unlocked@plt+0x3378>
   144a8:	cmn	r2, #2
   144ac:	bne	14624 <putchar_unlocked@plt+0x32e8>
   144b0:	ldr	r2, [sp, #56]	; 0x38
   144b4:	ldr	r3, [sp, #28]
   144b8:	add	r3, r3, r2
   144bc:	ldr	r2, [sp, #36]	; 0x24
   144c0:	cmp	r2, r3
   144c4:	bls	146b4 <putchar_unlocked@plt+0x3378>
   144c8:	ldr	r3, [sp, #80]	; 0x50
   144cc:	ldr	r2, [sp, #56]	; 0x38
   144d0:	ldrb	r5, [r3, r2]
   144d4:	cmp	r5, #0
   144d8:	bne	14614 <putchar_unlocked@plt+0x32d8>
   144dc:	ldr	r3, [sp, #56]	; 0x38
   144e0:	cmp	r3, #1
   144e4:	bls	13eec <putchar_unlocked@plt+0x2bb0>
   144e8:	ldr	r2, [sp, #56]	; 0x38
   144ec:	ldr	r3, [sp, #28]
   144f0:	mov	fp, #0
   144f4:	add	r3, r3, r2
   144f8:	ldr	r2, [sp, #24]
   144fc:	str	r3, [sp, #52]	; 0x34
   14500:	eor	r3, r5, #1
   14504:	and	r3, r3, r2
   14508:	mov	ip, #92	; 0x5c
   1450c:	uxtb	r3, r3
   14510:	mov	r2, #39	; 0x27
   14514:	cmp	r3, #0
   14518:	beq	146bc <putchar_unlocked@plt+0x3380>
   1451c:	cmp	r6, #0
   14520:	bne	13e0c <putchar_unlocked@plt+0x2ad0>
   14524:	ldr	r1, [sp, #48]	; 0x30
   14528:	eor	r1, r1, #1
   1452c:	cmp	sl, #2
   14530:	movne	r1, #0
   14534:	andeq	r1, r1, #1
   14538:	cmp	r1, #0
   1453c:	beq	1456c <putchar_unlocked@plt+0x3230>
   14540:	add	r0, r4, #1
   14544:	cmp	r9, r4
   14548:	strbhi	r2, [r8, r4]
   1454c:	cmp	r9, r0
   14550:	movhi	lr, #36	; 0x24
   14554:	strbhi	lr, [r8, r0]
   14558:	add	r0, r4, #2
   1455c:	add	r4, r4, #3
   14560:	cmp	r9, r0
   14564:	strbhi	r2, [r8, r0]
   14568:	str	r1, [sp, #48]	; 0x30
   1456c:	add	r0, r4, #1
   14570:	cmp	r9, r4
   14574:	strbhi	ip, [r8, r4]
   14578:	cmp	r9, r0
   1457c:	lsrhi	r1, r7, #6
   14580:	addhi	r1, r1, #48	; 0x30
   14584:	strbhi	r1, [r8, r0]
   14588:	add	r0, r4, #2
   1458c:	cmp	r9, r0
   14590:	lsrhi	r1, r7, #3
   14594:	and	r7, r7, #7
   14598:	andhi	r1, r1, #7
   1459c:	add	r4, r4, #3
   145a0:	add	r7, r7, #48	; 0x30
   145a4:	mov	fp, r3
   145a8:	addhi	r1, r1, #48	; 0x30
   145ac:	strbhi	r1, [r8, r0]
   145b0:	ldr	r1, [sp, #28]
   145b4:	ldr	r0, [sp, #52]	; 0x34
   145b8:	add	r1, r1, #1
   145bc:	cmp	r0, r1
   145c0:	bls	14374 <putchar_unlocked@plt+0x3038>
   145c4:	ldr	lr, [sp, #48]	; 0x30
   145c8:	eor	r0, fp, #1
   145cc:	and	r0, r0, lr
   145d0:	tst	r0, #255	; 0xff
   145d4:	beq	145f8 <putchar_unlocked@plt+0x32bc>
   145d8:	add	r0, r4, #1
   145dc:	cmp	r9, r4
   145e0:	strbhi	r2, [r8, r4]
   145e4:	cmp	r9, r0
   145e8:	add	r4, r4, #2
   145ec:	strbhi	r2, [r8, r0]
   145f0:	mov	r0, #0
   145f4:	str	r0, [sp, #48]	; 0x30
   145f8:	ldr	r0, [sp, #44]	; 0x2c
   145fc:	cmp	r9, r4
   14600:	strbhi	r7, [r8, r4]
   14604:	str	r1, [sp, #28]
   14608:	add	r4, r4, #1
   1460c:	ldrb	r7, [r0, r1]
   14610:	b	14514 <putchar_unlocked@plt+0x31d8>
   14614:	ldr	r3, [sp, #56]	; 0x38
   14618:	add	r3, r3, #1
   1461c:	str	r3, [sp, #56]	; 0x38
   14620:	b	144b0 <putchar_unlocked@plt+0x3174>
   14624:	cmp	sl, #2
   14628:	movne	r3, #0
   1462c:	andeq	r3, r6, #1
   14630:	cmp	r3, #0
   14634:	movne	r1, #1
   14638:	bne	14694 <putchar_unlocked@plt+0x3358>
   1463c:	ldr	r0, [sp, #92]	; 0x5c
   14640:	str	r2, [sp, #84]	; 0x54
   14644:	bl	110d8 <iswprint@plt>
   14648:	ldr	r3, [sp, #56]	; 0x38
   1464c:	ldr	r2, [sp, #84]	; 0x54
   14650:	add	r3, r3, r2
   14654:	str	r3, [sp, #56]	; 0x38
   14658:	cmp	r0, #0
   1465c:	add	r0, sp, #96	; 0x60
   14660:	moveq	r5, #0
   14664:	bl	1106c <mbsinit@plt>
   14668:	cmp	r0, #0
   1466c:	beq	1446c <putchar_unlocked@plt+0x3130>
   14670:	b	144dc <putchar_unlocked@plt+0x31a0>
   14674:	ldrb	r3, [fp, r1]
   14678:	cmp	r3, #94	; 0x5e
   1467c:	beq	13f3c <putchar_unlocked@plt+0x2c00>
   14680:	bhi	146a0 <putchar_unlocked@plt+0x3364>
   14684:	sub	r3, r3, #91	; 0x5b
   14688:	cmp	r3, #1
   1468c:	bls	13f3c <putchar_unlocked@plt+0x2c00>
   14690:	add	r1, r1, #1
   14694:	cmp	r1, r2
   14698:	bne	14674 <putchar_unlocked@plt+0x3338>
   1469c:	b	1463c <putchar_unlocked@plt+0x3300>
   146a0:	cmp	r3, #96	; 0x60
   146a4:	beq	13f3c <putchar_unlocked@plt+0x2c00>
   146a8:	cmp	r3, #124	; 0x7c
   146ac:	bne	14690 <putchar_unlocked@plt+0x3354>
   146b0:	b	13f3c <putchar_unlocked@plt+0x2c00>
   146b4:	mov	r5, #0
   146b8:	b	144dc <putchar_unlocked@plt+0x31a0>
   146bc:	ldr	r1, [sp, #64]	; 0x40
   146c0:	cmp	r1, #0
   146c4:	beq	145b0 <putchar_unlocked@plt+0x3274>
   146c8:	cmp	r9, r4
   146cc:	strbhi	ip, [r8, r4]
   146d0:	str	r3, [sp, #64]	; 0x40
   146d4:	add	r4, r4, #1
   146d8:	b	145b0 <putchar_unlocked@plt+0x3274>
   146dc:	mov	r5, fp
   146e0:	ldr	fp, [sp, #24]
   146e4:	mov	r7, #48	; 0x30
   146e8:	b	14284 <putchar_unlocked@plt+0x2f48>
   146ec:	mov	r5, #0
   146f0:	mov	fp, r5
   146f4:	b	14284 <putchar_unlocked@plt+0x2f48>
   146f8:	ldr	r3, [sp, #36]	; 0x24
   146fc:	ldr	r2, [sp, #28]
   14700:	subs	r3, r3, r2
   14704:	movne	r3, #1
   14708:	b	13b80 <putchar_unlocked@plt+0x2844>
   1470c:	ldr	r3, [sp, #60]	; 0x3c
   14710:	clz	r7, r9
   14714:	cmp	r3, #0
   14718:	lsr	r7, r7, #5
   1471c:	moveq	r7, #0
   14720:	cmp	r7, #0
   14724:	mov	r5, r3
   14728:	bne	13ae0 <putchar_unlocked@plt+0x27a4>
   1472c:	ldr	r3, [sp, #68]	; 0x44
   14730:	ldr	r2, [sp, #40]	; 0x28
   14734:	cmp	r2, #0
   14738:	moveq	r3, #0
   1473c:	andne	r3, r3, #1
   14740:	cmp	r3, #0
   14744:	movne	r3, r2
   14748:	subne	r2, r3, #1
   1474c:	bne	1477c <putchar_unlocked@plt+0x3440>
   14750:	cmp	r9, r4
   14754:	movhi	r3, #0
   14758:	strbhi	r3, [r8, r4]
   1475c:	mov	r0, r4
   14760:	add	sp, sp, #108	; 0x6c
   14764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14768:	mov	r3, r2
   1476c:	b	14730 <putchar_unlocked@plt+0x33f4>
   14770:	cmp	r9, r4
   14774:	strbhi	r3, [r8, r4]
   14778:	add	r4, r4, #1
   1477c:	ldrb	r3, [r2, #1]!
   14780:	cmp	r3, #0
   14784:	bne	14770 <putchar_unlocked@plt+0x3434>
   14788:	b	14750 <putchar_unlocked@plt+0x3414>
   1478c:	ldr	r3, [pc, #32]	; 147b4 <putchar_unlocked@plt+0x3478>
   14790:	mov	r6, #1
   14794:	str	r6, [sp, #24]
   14798:	str	r6, [sp, #32]
   1479c:	str	r3, [sp, #40]	; 0x28
   147a0:	mov	r4, #0
   147a4:	mov	sl, #5
   147a8:	b	13b50 <putchar_unlocked@plt+0x2814>
   147ac:	mov	r6, #1
   147b0:	b	13d44 <putchar_unlocked@plt+0x2a08>
   147b4:	andeq	r6, r1, r3, asr #24
   147b8:	andeq	r6, r1, r7, asr #24
   147bc:	andeq	r6, r1, r5, asr #24
   147c0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   147c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147c8:	sub	sp, sp, #52	; 0x34
   147cc:	mov	r6, r0
   147d0:	mov	r5, r3
   147d4:	mov	r8, r1
   147d8:	mov	r9, r2
   147dc:	bl	111f8 <__errno_location@plt>
   147e0:	ldr	r7, [pc, #380]	; 14964 <putchar_unlocked@plt+0x3628>
   147e4:	cmn	r6, #-2147483647	; 0x80000001
   147e8:	ldr	r4, [r7]
   147ec:	ldr	r3, [r0]
   147f0:	str	r0, [sp, #24]
   147f4:	str	r3, [sp, #32]
   147f8:	movne	r3, #0
   147fc:	moveq	r3, #1
   14800:	orrs	r3, r3, r6, lsr #31
   14804:	beq	1480c <putchar_unlocked@plt+0x34d0>
   14808:	bl	11318 <abort@plt>
   1480c:	ldr	r2, [r7, #4]
   14810:	cmp	r6, r2
   14814:	blt	14884 <putchar_unlocked@plt+0x3548>
   14818:	add	r1, sp, #48	; 0x30
   1481c:	add	sl, r7, #8
   14820:	str	r2, [r1, #-4]!
   14824:	cmp	r4, sl
   14828:	mov	r3, #8
   1482c:	sub	r2, r6, r2
   14830:	movne	r0, r4
   14834:	str	r3, [sp]
   14838:	add	r2, r2, #1
   1483c:	mvn	r3, #-2147483648	; 0x80000000
   14840:	moveq	r0, #0
   14844:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14848:	cmp	r4, sl
   1484c:	ldr	r2, [sp, #44]	; 0x2c
   14850:	mov	fp, r0
   14854:	str	r0, [r7]
   14858:	ldmeq	r4, {r0, r1}
   1485c:	mov	r4, fp
   14860:	stmeq	fp, {r0, r1}
   14864:	ldr	r0, [r7, #4]
   14868:	mov	r1, #0
   1486c:	sub	r2, r2, r0
   14870:	add	r0, fp, r0, lsl #3
   14874:	lsl	r2, r2, #3
   14878:	bl	11210 <memset@plt>
   1487c:	ldr	r3, [sp, #44]	; 0x2c
   14880:	str	r3, [r7, #4]
   14884:	ldr	r3, [r5, #4]
   14888:	add	sl, r4, r6, lsl #3
   1488c:	orr	r3, r3, #1
   14890:	str	r3, [sp, #28]
   14894:	add	r3, r5, #8
   14898:	str	r3, [sp, #36]	; 0x24
   1489c:	ldr	r3, [r5, #44]	; 0x2c
   148a0:	ldr	fp, [r4, r6, lsl #3]
   148a4:	ldr	r7, [sl, #4]
   148a8:	str	r3, [sp, #16]
   148ac:	ldr	r3, [r5, #40]	; 0x28
   148b0:	mov	r2, r8
   148b4:	str	r3, [sp, #12]
   148b8:	add	r3, r5, #8
   148bc:	str	r3, [sp, #8]
   148c0:	ldr	r3, [sp, #28]
   148c4:	mov	r1, fp
   148c8:	str	r3, [sp, #4]
   148cc:	ldr	r3, [r5]
   148d0:	mov	r0, r7
   148d4:	str	r3, [sp]
   148d8:	mov	r3, r9
   148dc:	bl	13a90 <putchar_unlocked@plt+0x2754>
   148e0:	cmp	fp, r0
   148e4:	bhi	1494c <putchar_unlocked@plt+0x3610>
   148e8:	ldr	r3, [pc, #120]	; 14968 <putchar_unlocked@plt+0x362c>
   148ec:	add	fp, r0, #1
   148f0:	cmp	r7, r3
   148f4:	str	fp, [r4, r6, lsl #3]
   148f8:	beq	14904 <putchar_unlocked@plt+0x35c8>
   148fc:	mov	r0, r7
   14900:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   14904:	mov	r0, fp
   14908:	bl	15990 <putchar_unlocked@plt+0x4654>
   1490c:	ldr	r3, [r5, #44]	; 0x2c
   14910:	mov	r2, r8
   14914:	mov	r1, fp
   14918:	str	r0, [sl, #4]
   1491c:	str	r3, [sp, #16]
   14920:	ldr	r3, [r5, #40]	; 0x28
   14924:	mov	r7, r0
   14928:	str	r3, [sp, #12]
   1492c:	add	r3, r5, #8
   14930:	str	r3, [sp, #8]
   14934:	ldr	r3, [sp, #28]
   14938:	str	r3, [sp, #4]
   1493c:	ldr	r3, [r5]
   14940:	str	r3, [sp]
   14944:	mov	r3, r9
   14948:	bl	13a90 <putchar_unlocked@plt+0x2754>
   1494c:	ldr	r3, [sp, #24]
   14950:	ldr	r2, [sp, #32]
   14954:	mov	r0, r7
   14958:	str	r2, [r3]
   1495c:	add	sp, sp, #52	; 0x34
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14964:	andeq	r8, r2, r0, asr #2
   14968:			; <UNDEFINED> instruction: 0x000281b0
   1496c:	push	{r4, r5, r6, lr}
   14970:	mov	r5, r0
   14974:	bl	111f8 <__errno_location@plt>
   14978:	cmp	r5, #0
   1497c:	mov	r1, #48	; 0x30
   14980:	ldr	r6, [r0]
   14984:	mov	r4, r0
   14988:	ldr	r0, [pc, #12]	; 1499c <putchar_unlocked@plt+0x3660>
   1498c:	movne	r0, r5
   14990:	bl	15d6c <putchar_unlocked@plt+0x4a30>
   14994:	str	r6, [r4]
   14998:	pop	{r4, r5, r6, pc}
   1499c:			; <UNDEFINED> instruction: 0x000282b0
   149a0:	ldr	r3, [pc, #12]	; 149b4 <putchar_unlocked@plt+0x3678>
   149a4:	cmp	r0, #0
   149a8:	moveq	r0, r3
   149ac:	ldr	r0, [r0]
   149b0:	bx	lr
   149b4:			; <UNDEFINED> instruction: 0x000282b0
   149b8:	ldr	r3, [pc, #12]	; 149cc <putchar_unlocked@plt+0x3690>
   149bc:	cmp	r0, #0
   149c0:	moveq	r0, r3
   149c4:	str	r1, [r0]
   149c8:	bx	lr
   149cc:			; <UNDEFINED> instruction: 0x000282b0
   149d0:	ldr	r3, [pc, #52]	; 14a0c <putchar_unlocked@plt+0x36d0>
   149d4:	cmp	r0, #0
   149d8:	moveq	r0, r3
   149dc:	add	r3, r0, #8
   149e0:	push	{lr}		; (str lr, [sp, #-4]!)
   149e4:	lsr	lr, r1, #5
   149e8:	and	r1, r1, #31
   149ec:	ldr	ip, [r3, lr, lsl #2]
   149f0:	lsr	r0, ip, r1
   149f4:	eor	r2, r2, r0
   149f8:	and	r2, r2, #1
   149fc:	and	r0, r0, #1
   14a00:	eor	r1, ip, r2, lsl r1
   14a04:	str	r1, [r3, lr, lsl #2]
   14a08:	pop	{pc}		; (ldr pc, [sp], #4)
   14a0c:			; <UNDEFINED> instruction: 0x000282b0
   14a10:	ldr	r3, [pc, #16]	; 14a28 <putchar_unlocked@plt+0x36ec>
   14a14:	cmp	r0, #0
   14a18:	movne	r3, r0
   14a1c:	ldr	r0, [r3, #4]
   14a20:	str	r1, [r3, #4]
   14a24:	bx	lr
   14a28:			; <UNDEFINED> instruction: 0x000282b0
   14a2c:	ldr	r3, [pc, #44]	; 14a60 <putchar_unlocked@plt+0x3724>
   14a30:	cmp	r0, #0
   14a34:	moveq	r0, r3
   14a38:	mov	r3, #10
   14a3c:	cmp	r2, #0
   14a40:	cmpne	r1, #0
   14a44:	str	r3, [r0]
   14a48:	bne	14a54 <putchar_unlocked@plt+0x3718>
   14a4c:	push	{r4, lr}
   14a50:	bl	11318 <abort@plt>
   14a54:	str	r1, [r0, #40]	; 0x28
   14a58:	str	r2, [r0, #44]	; 0x2c
   14a5c:	bx	lr
   14a60:			; <UNDEFINED> instruction: 0x000282b0
   14a64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a68:	sub	sp, sp, #24
   14a6c:	mov	sl, r3
   14a70:	ldr	r4, [sp, #56]	; 0x38
   14a74:	ldr	r3, [pc, #100]	; 14ae0 <putchar_unlocked@plt+0x37a4>
   14a78:	cmp	r4, #0
   14a7c:	moveq	r4, r3
   14a80:	mov	r7, r0
   14a84:	mov	r8, r1
   14a88:	mov	r9, r2
   14a8c:	bl	111f8 <__errno_location@plt>
   14a90:	ldr	r3, [r4, #44]	; 0x2c
   14a94:	mov	r2, r9
   14a98:	mov	r1, r8
   14a9c:	ldr	r6, [r0]
   14aa0:	str	r3, [sp, #16]
   14aa4:	ldr	r3, [r4, #40]	; 0x28
   14aa8:	mov	r5, r0
   14aac:	str	r3, [sp, #12]
   14ab0:	add	r3, r4, #8
   14ab4:	str	r3, [sp, #8]
   14ab8:	ldr	r3, [r4, #4]
   14abc:	mov	r0, r7
   14ac0:	str	r3, [sp, #4]
   14ac4:	ldr	r3, [r4]
   14ac8:	str	r3, [sp]
   14acc:	mov	r3, sl
   14ad0:	bl	13a90 <putchar_unlocked@plt+0x2754>
   14ad4:	str	r6, [r5]
   14ad8:	add	sp, sp, #24
   14adc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ae0:			; <UNDEFINED> instruction: 0x000282b0
   14ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ae8:	cmp	r3, #0
   14aec:	sub	sp, sp, #44	; 0x2c
   14af0:	ldr	r4, [pc, #188]	; 14bb4 <putchar_unlocked@plt+0x3878>
   14af4:	mov	r6, r2
   14af8:	movne	r4, r3
   14afc:	mov	sl, r1
   14b00:	mov	r9, r0
   14b04:	bl	111f8 <__errno_location@plt>
   14b08:	ldr	r5, [r4, #4]
   14b0c:	add	fp, r4, #8
   14b10:	cmp	r6, #0
   14b14:	orreq	r5, r5, #1
   14b18:	mov	r1, #0
   14b1c:	mov	r2, r9
   14b20:	ldr	r3, [r0]
   14b24:	mov	r8, r0
   14b28:	str	r3, [sp, #28]
   14b2c:	ldr	r3, [r4, #44]	; 0x2c
   14b30:	mov	r0, r1
   14b34:	str	r3, [sp, #16]
   14b38:	ldr	r3, [r4, #40]	; 0x28
   14b3c:	stmib	sp, {r5, fp}
   14b40:	str	r3, [sp, #12]
   14b44:	ldr	r3, [r4]
   14b48:	str	r3, [sp]
   14b4c:	mov	r3, sl
   14b50:	bl	13a90 <putchar_unlocked@plt+0x2754>
   14b54:	add	r1, r0, #1
   14b58:	mov	r7, r0
   14b5c:	mov	r0, r1
   14b60:	str	r1, [sp, #36]	; 0x24
   14b64:	bl	15990 <putchar_unlocked@plt+0x4654>
   14b68:	ldr	r3, [r4, #44]	; 0x2c
   14b6c:	mov	r2, r9
   14b70:	str	r3, [sp, #16]
   14b74:	ldr	r3, [r4, #40]	; 0x28
   14b78:	stmib	sp, {r5, fp}
   14b7c:	str	r3, [sp, #12]
   14b80:	ldr	r3, [r4]
   14b84:	ldr	r1, [sp, #36]	; 0x24
   14b88:	str	r3, [sp]
   14b8c:	mov	r3, sl
   14b90:	str	r0, [sp, #32]
   14b94:	bl	13a90 <putchar_unlocked@plt+0x2754>
   14b98:	ldr	r3, [sp, #28]
   14b9c:	cmp	r6, #0
   14ba0:	str	r3, [r8]
   14ba4:	ldr	r0, [sp, #32]
   14ba8:	strne	r7, [r6]
   14bac:	add	sp, sp, #44	; 0x2c
   14bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bb4:			; <UNDEFINED> instruction: 0x000282b0
   14bb8:	mov	r3, r2
   14bbc:	mov	r2, #0
   14bc0:	b	14ae4 <putchar_unlocked@plt+0x37a8>
   14bc4:	push	{r4, r5, r6, r7, r8, lr}
   14bc8:	mov	r6, #1
   14bcc:	ldr	r4, [pc, #104]	; 14c3c <putchar_unlocked@plt+0x3900>
   14bd0:	ldr	r5, [r4]
   14bd4:	add	r7, r5, #12
   14bd8:	ldr	r3, [r4, #4]
   14bdc:	add	r7, r7, #8
   14be0:	cmp	r6, r3
   14be4:	blt	14c2c <putchar_unlocked@plt+0x38f0>
   14be8:	ldr	r0, [r5, #4]
   14bec:	ldr	r6, [pc, #76]	; 14c40 <putchar_unlocked@plt+0x3904>
   14bf0:	cmp	r0, r6
   14bf4:	beq	14c08 <putchar_unlocked@plt+0x38cc>
   14bf8:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   14bfc:	mov	r3, #256	; 0x100
   14c00:	str	r3, [r4, #8]
   14c04:	str	r6, [r4, #12]
   14c08:	ldr	r6, [pc, #52]	; 14c44 <putchar_unlocked@plt+0x3908>
   14c0c:	cmp	r5, r6
   14c10:	beq	14c20 <putchar_unlocked@plt+0x38e4>
   14c14:	mov	r0, r5
   14c18:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   14c1c:	str	r6, [r4]
   14c20:	mov	r3, #1
   14c24:	str	r3, [r4, #4]
   14c28:	pop	{r4, r5, r6, r7, r8, pc}
   14c2c:	ldr	r0, [r7, #-8]
   14c30:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   14c34:	add	r6, r6, #1
   14c38:	b	14bd8 <putchar_unlocked@plt+0x389c>
   14c3c:	andeq	r8, r2, r0, asr #2
   14c40:			; <UNDEFINED> instruction: 0x000281b0
   14c44:	andeq	r8, r2, r8, asr #2
   14c48:	ldr	r3, [pc, #4]	; 14c54 <putchar_unlocked@plt+0x3918>
   14c4c:	mvn	r2, #0
   14c50:	b	147c4 <putchar_unlocked@plt+0x3488>
   14c54:			; <UNDEFINED> instruction: 0x000282b0
   14c58:	ldr	r3, [pc]	; 14c60 <putchar_unlocked@plt+0x3924>
   14c5c:	b	147c4 <putchar_unlocked@plt+0x3488>
   14c60:			; <UNDEFINED> instruction: 0x000282b0
   14c64:	mov	r1, r0
   14c68:	mov	r0, #0
   14c6c:	b	14c48 <putchar_unlocked@plt+0x390c>
   14c70:	mov	r2, r1
   14c74:	mov	r1, r0
   14c78:	mov	r0, #0
   14c7c:	b	14c58 <putchar_unlocked@plt+0x391c>
   14c80:	push	{r4, r5, lr}
   14c84:	sub	sp, sp, #52	; 0x34
   14c88:	mov	r5, r2
   14c8c:	mov	r4, r0
   14c90:	mov	r0, sp
   14c94:	bl	1394c <putchar_unlocked@plt+0x2610>
   14c98:	mov	r3, sp
   14c9c:	mvn	r2, #0
   14ca0:	mov	r1, r5
   14ca4:	mov	r0, r4
   14ca8:	bl	147c4 <putchar_unlocked@plt+0x3488>
   14cac:	add	sp, sp, #52	; 0x34
   14cb0:	pop	{r4, r5, pc}
   14cb4:	push	{r4, r5, r6, lr}
   14cb8:	sub	sp, sp, #48	; 0x30
   14cbc:	mov	r5, r2
   14cc0:	mov	r6, r3
   14cc4:	mov	r4, r0
   14cc8:	mov	r0, sp
   14ccc:	bl	1394c <putchar_unlocked@plt+0x2610>
   14cd0:	mov	r3, sp
   14cd4:	mov	r2, r6
   14cd8:	mov	r1, r5
   14cdc:	mov	r0, r4
   14ce0:	bl	147c4 <putchar_unlocked@plt+0x3488>
   14ce4:	add	sp, sp, #48	; 0x30
   14ce8:	pop	{r4, r5, r6, pc}
   14cec:	mov	r2, r1
   14cf0:	mov	r1, r0
   14cf4:	mov	r0, #0
   14cf8:	b	14c80 <putchar_unlocked@plt+0x3944>
   14cfc:	mov	r3, r2
   14d00:	mov	r2, r1
   14d04:	mov	r1, r0
   14d08:	mov	r0, #0
   14d0c:	b	14cb4 <putchar_unlocked@plt+0x3978>
   14d10:	push	{r4, r5, r6, lr}
   14d14:	mov	r4, r0
   14d18:	ldr	lr, [pc, #80]	; 14d70 <putchar_unlocked@plt+0x3a34>
   14d1c:	mov	r5, r1
   14d20:	mov	r6, r2
   14d24:	ldm	lr!, {r0, r1, r2, r3}
   14d28:	sub	sp, sp, #48	; 0x30
   14d2c:	mov	ip, sp
   14d30:	stmia	ip!, {r0, r1, r2, r3}
   14d34:	ldm	lr!, {r0, r1, r2, r3}
   14d38:	stmia	ip!, {r0, r1, r2, r3}
   14d3c:	ldm	lr, {r0, r1, r2, r3}
   14d40:	stm	ip, {r0, r1, r2, r3}
   14d44:	mov	r1, r6
   14d48:	mov	r2, #1
   14d4c:	mov	r0, sp
   14d50:	bl	149d0 <putchar_unlocked@plt+0x3694>
   14d54:	mov	r3, sp
   14d58:	mov	r2, r5
   14d5c:	mov	r1, r4
   14d60:	mov	r0, #0
   14d64:	bl	147c4 <putchar_unlocked@plt+0x3488>
   14d68:	add	sp, sp, #48	; 0x30
   14d6c:	pop	{r4, r5, r6, pc}
   14d70:			; <UNDEFINED> instruction: 0x000282b0
   14d74:	mov	r2, r1
   14d78:	mvn	r1, #0
   14d7c:	b	14d10 <putchar_unlocked@plt+0x39d4>
   14d80:	mov	r1, #58	; 0x3a
   14d84:	b	14d74 <putchar_unlocked@plt+0x3a38>
   14d88:	mov	r2, #58	; 0x3a
   14d8c:	b	14d10 <putchar_unlocked@plt+0x39d4>
   14d90:	push	{r4, r5, lr}
   14d94:	sub	sp, sp, #100	; 0x64
   14d98:	mov	r4, r0
   14d9c:	mov	r0, sp
   14da0:	mov	r5, r2
   14da4:	bl	1394c <putchar_unlocked@plt+0x2610>
   14da8:	mov	ip, sp
   14dac:	add	lr, sp, #48	; 0x30
   14db0:	ldm	ip!, {r0, r1, r2, r3}
   14db4:	stmia	lr!, {r0, r1, r2, r3}
   14db8:	ldm	ip!, {r0, r1, r2, r3}
   14dbc:	stmia	lr!, {r0, r1, r2, r3}
   14dc0:	ldm	ip, {r0, r1, r2, r3}
   14dc4:	stm	lr, {r0, r1, r2, r3}
   14dc8:	mov	r2, #1
   14dcc:	mov	r1, #58	; 0x3a
   14dd0:	add	r0, sp, #48	; 0x30
   14dd4:	bl	149d0 <putchar_unlocked@plt+0x3694>
   14dd8:	add	r3, sp, #48	; 0x30
   14ddc:	mvn	r2, #0
   14de0:	mov	r1, r5
   14de4:	mov	r0, r4
   14de8:	bl	147c4 <putchar_unlocked@plt+0x3488>
   14dec:	add	sp, sp, #100	; 0x64
   14df0:	pop	{r4, r5, pc}
   14df4:	push	{r4, r5, r6, r7, lr}
   14df8:	mov	r4, r0
   14dfc:	ldr	lr, [pc, #84]	; 14e58 <putchar_unlocked@plt+0x3b1c>
   14e00:	mov	r6, r1
   14e04:	mov	r7, r2
   14e08:	mov	r5, r3
   14e0c:	ldm	lr!, {r0, r1, r2, r3}
   14e10:	sub	sp, sp, #52	; 0x34
   14e14:	mov	ip, sp
   14e18:	stmia	ip!, {r0, r1, r2, r3}
   14e1c:	ldm	lr!, {r0, r1, r2, r3}
   14e20:	stmia	ip!, {r0, r1, r2, r3}
   14e24:	ldm	lr, {r0, r1, r2, r3}
   14e28:	stm	ip, {r0, r1, r2, r3}
   14e2c:	mov	r2, r7
   14e30:	mov	r1, r6
   14e34:	mov	r0, sp
   14e38:	bl	14a2c <putchar_unlocked@plt+0x36f0>
   14e3c:	mov	r3, sp
   14e40:	ldr	r2, [sp, #72]	; 0x48
   14e44:	mov	r1, r5
   14e48:	mov	r0, r4
   14e4c:	bl	147c4 <putchar_unlocked@plt+0x3488>
   14e50:	add	sp, sp, #52	; 0x34
   14e54:	pop	{r4, r5, r6, r7, pc}
   14e58:			; <UNDEFINED> instruction: 0x000282b0
   14e5c:	mvn	ip, #0
   14e60:	push	{r0, r1, r2, lr}
   14e64:	str	ip, [sp]
   14e68:	bl	14df4 <putchar_unlocked@plt+0x3ab8>
   14e6c:	add	sp, sp, #12
   14e70:	pop	{pc}		; (ldr pc, [sp], #4)
   14e74:	mov	r3, r2
   14e78:	mov	r2, r1
   14e7c:	mov	r1, r0
   14e80:	mov	r0, #0
   14e84:	b	14e5c <putchar_unlocked@plt+0x3b20>
   14e88:	push	{r0, r1, r2, lr}
   14e8c:	str	r3, [sp]
   14e90:	mov	r3, r2
   14e94:	mov	r2, r1
   14e98:	mov	r1, r0
   14e9c:	mov	r0, #0
   14ea0:	bl	14df4 <putchar_unlocked@plt+0x3ab8>
   14ea4:	add	sp, sp, #12
   14ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   14eac:	ldr	r3, [pc]	; 14eb4 <putchar_unlocked@plt+0x3b78>
   14eb0:	b	147c4 <putchar_unlocked@plt+0x3488>
   14eb4:	andeq	r8, r2, r0, asr r1
   14eb8:	mov	r2, r1
   14ebc:	mov	r1, r0
   14ec0:	mov	r0, #0
   14ec4:	b	14eac <putchar_unlocked@plt+0x3b70>
   14ec8:	mvn	r2, #0
   14ecc:	b	14eac <putchar_unlocked@plt+0x3b70>
   14ed0:	mov	r1, r0
   14ed4:	mov	r0, #0
   14ed8:	b	14ec8 <putchar_unlocked@plt+0x3b8c>
   14edc:	push	{r4, r5, r6, lr}
   14ee0:	mov	r5, r0
   14ee4:	mov	r0, #33	; 0x21
   14ee8:	bl	15968 <putchar_unlocked@plt+0x462c>
   14eec:	add	r1, r5, #44	; 0x2c
   14ef0:	mov	r2, #32
   14ef4:	mov	r5, #0
   14ef8:	mov	r4, r0
   14efc:	bl	1121c <strncpy@plt>
   14f00:	mov	r0, r4
   14f04:	strb	r5, [r4, #32]
   14f08:	bl	111e0 <strlen@plt>
   14f0c:	add	r0, r4, r0
   14f10:	cmp	r4, r0
   14f14:	bcs	14f24 <putchar_unlocked@plt+0x3be8>
   14f18:	ldrb	r3, [r0, #-1]!
   14f1c:	cmp	r3, #32
   14f20:	beq	14f2c <putchar_unlocked@plt+0x3bf0>
   14f24:	mov	r0, r4
   14f28:	pop	{r4, r5, r6, pc}
   14f2c:	strb	r5, [r0]
   14f30:	b	14f10 <putchar_unlocked@plt+0x3bd4>
   14f34:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   14f38:	mov	r4, #0
   14f3c:	mov	r8, r3
   14f40:	mov	r9, r1
   14f44:	mov	sl, r2
   14f48:	str	r4, [sp, #12]
   14f4c:	bl	1103c <utmpxname@plt>
   14f50:	bl	110a8 <setutxent@plt>
   14f54:	lsr	r6, r8, #1
   14f58:	eor	r6, r6, #1
   14f5c:	mov	r7, r4
   14f60:	and	r6, r6, #1
   14f64:	bl	11324 <getutxent@plt>
   14f68:	subs	r5, r0, #0
   14f6c:	bne	14f88 <putchar_unlocked@plt+0x3c4c>
   14f70:	bl	1127c <endutxent@plt>
   14f74:	str	r4, [r9]
   14f78:	mov	r0, r5
   14f7c:	str	r7, [sl]
   14f80:	add	sp, sp, #16
   14f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f88:	ldrb	r3, [r5, #44]	; 0x2c
   14f8c:	cmp	r3, #0
   14f90:	ldrshne	r3, [r5]
   14f94:	subne	r3, r3, #7
   14f98:	clzne	r3, r3
   14f9c:	lsrne	r3, r3, #5
   14fa0:	orrs	r2, r6, r3
   14fa4:	beq	14f64 <putchar_unlocked@plt+0x3c28>
   14fa8:	tst	r8, r3
   14fac:	beq	14fdc <putchar_unlocked@plt+0x3ca0>
   14fb0:	ldr	r0, [r5, #4]
   14fb4:	cmp	r0, #0
   14fb8:	ble	14fdc <putchar_unlocked@plt+0x3ca0>
   14fbc:	mov	r1, #0
   14fc0:	bl	111bc <kill@plt>
   14fc4:	cmp	r0, #0
   14fc8:	bge	14fdc <putchar_unlocked@plt+0x3ca0>
   14fcc:	bl	111f8 <__errno_location@plt>
   14fd0:	ldr	r3, [r0]
   14fd4:	cmp	r3, #3
   14fd8:	beq	14f64 <putchar_unlocked@plt+0x3c28>
   14fdc:	ldr	r3, [sp, #12]
   14fe0:	cmp	r4, r3
   14fe4:	bne	15008 <putchar_unlocked@plt+0x3ccc>
   14fe8:	mov	r3, #384	; 0x180
   14fec:	str	r3, [sp]
   14ff0:	mov	r0, r7
   14ff4:	mvn	r3, #0
   14ff8:	mov	r2, #1
   14ffc:	add	r1, sp, #12
   15000:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   15004:	mov	r7, r0
   15008:	mov	r2, #384	; 0x180
   1500c:	mov	r1, r5
   15010:	mla	r0, r2, r4, r7
   15014:	bl	11060 <memcpy@plt>
   15018:	add	r4, r4, #1
   1501c:	b	14f64 <putchar_unlocked@plt+0x3c28>
   15020:	push	{r4, lr}
   15024:	ldrb	r3, [r0, #4]
   15028:	cmp	r3, #0
   1502c:	beq	1505c <putchar_unlocked@plt+0x3d20>
   15030:	add	r1, r0, #5
   15034:	mov	r2, #1
   15038:	ldr	r0, [pc, #40]	; 15068 <putchar_unlocked@plt+0x3d2c>
   1503c:	bl	111ec <setenv@plt>
   15040:	cmp	r0, #0
   15044:	bne	15054 <putchar_unlocked@plt+0x3d18>
   15048:	bl	110e4 <tzset@plt>
   1504c:	mov	r0, #1
   15050:	pop	{r4, pc}
   15054:	mov	r0, #0
   15058:	pop	{r4, pc}
   1505c:	ldr	r0, [pc, #4]	; 15068 <putchar_unlocked@plt+0x3d2c>
   15060:	bl	112f4 <unsetenv@plt>
   15064:	b	15040 <putchar_unlocked@plt+0x3d04>
   15068:	muleq	r1, r7, ip
   1506c:	push	{r4, r5, r6, r7, r8, lr}
   15070:	subs	r7, r0, #0
   15074:	beq	150e4 <putchar_unlocked@plt+0x3da8>
   15078:	bl	111e0 <strlen@plt>
   1507c:	add	r5, r0, #1
   15080:	cmp	r5, #58	; 0x3a
   15084:	addhi	r0, r0, #2
   15088:	bhi	15090 <putchar_unlocked@plt+0x3d54>
   1508c:	mov	r0, #59	; 0x3b
   15090:	add	r0, r0, #8
   15094:	bic	r0, r0, #3
   15098:	bl	15e84 <putchar_unlocked@plt+0x4b48>
   1509c:	subs	r4, r0, #0
   150a0:	beq	150dc <putchar_unlocked@plt+0x3da0>
   150a4:	mov	r6, #0
   150a8:	cmp	r7, r6
   150ac:	movne	r3, #1
   150b0:	moveq	r3, r6
   150b4:	str	r6, [r4]
   150b8:	strb	r3, [r4, #4]
   150bc:	strb	r6, [r4, #5]
   150c0:	beq	150dc <putchar_unlocked@plt+0x3da0>
   150c4:	add	r3, r4, #5
   150c8:	mov	r2, r5
   150cc:	mov	r1, r7
   150d0:	mov	r0, r3
   150d4:	bl	11060 <memcpy@plt>
   150d8:	strb	r6, [r0, r5]
   150dc:	mov	r0, r4
   150e0:	pop	{r4, r5, r6, r7, r8, pc}
   150e4:	mov	r5, r7
   150e8:	b	1508c <putchar_unlocked@plt+0x3d50>
   150ec:	push	{r4, r5, r6, r7, r8, lr}
   150f0:	ldr	r5, [r1, #40]	; 0x28
   150f4:	cmp	r5, #0
   150f8:	beq	151ec <putchar_unlocked@plt+0x3eb0>
   150fc:	cmp	r1, r5
   15100:	mov	r6, r0
   15104:	mov	r7, r1
   15108:	bhi	15118 <putchar_unlocked@plt+0x3ddc>
   1510c:	add	r3, r1, #44	; 0x2c
   15110:	cmp	r5, r3
   15114:	bcc	151ec <putchar_unlocked@plt+0x3eb0>
   15118:	ldrb	r3, [r5]
   1511c:	cmp	r3, #0
   15120:	addne	r4, r6, #5
   15124:	bne	15164 <putchar_unlocked@plt+0x3e28>
   15128:	ldr	r4, [pc, #196]	; 151f4 <putchar_unlocked@plt+0x3eb8>
   1512c:	b	151e8 <putchar_unlocked@plt+0x3eac>
   15130:	ldrb	r3, [r6, #4]
   15134:	cmp	r3, #0
   15138:	beq	15190 <putchar_unlocked@plt+0x3e54>
   1513c:	mov	r0, r4
   15140:	bl	111e0 <strlen@plt>
   15144:	add	r0, r0, #1
   15148:	ldrb	r3, [r4, r0]!
   1514c:	cmp	r3, #0
   15150:	bne	15164 <putchar_unlocked@plt+0x3e28>
   15154:	ldr	r3, [r6]
   15158:	cmp	r3, #0
   1515c:	addne	r4, r3, #5
   15160:	movne	r6, r3
   15164:	mov	r1, r5
   15168:	mov	r0, r4
   1516c:	bl	11018 <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	beq	151e8 <putchar_unlocked@plt+0x3eac>
   15178:	ldrb	r3, [r4]
   1517c:	cmp	r3, #0
   15180:	bne	1513c <putchar_unlocked@plt+0x3e00>
   15184:	add	r3, r6, #5
   15188:	cmp	r4, r3
   1518c:	beq	15130 <putchar_unlocked@plt+0x3df4>
   15190:	mov	r0, r5
   15194:	bl	111e0 <strlen@plt>
   15198:	add	r3, r6, #64	; 0x40
   1519c:	sub	r3, r3, r4
   151a0:	add	r8, r0, #1
   151a4:	cmp	r8, r3
   151a8:	blt	151d0 <putchar_unlocked@plt+0x3e94>
   151ac:	mov	r0, r5
   151b0:	bl	1506c <putchar_unlocked@plt+0x3d30>
   151b4:	cmp	r0, #0
   151b8:	movne	r3, #0
   151bc:	str	r0, [r6]
   151c0:	addne	r4, r0, #5
   151c4:	strbne	r3, [r0, #4]
   151c8:	bne	151e8 <putchar_unlocked@plt+0x3eac>
   151cc:	pop	{r4, r5, r6, r7, r8, pc}
   151d0:	mov	r2, r8
   151d4:	mov	r1, r5
   151d8:	mov	r0, r4
   151dc:	bl	11060 <memcpy@plt>
   151e0:	mov	r3, #0
   151e4:	strb	r3, [r4, r8]
   151e8:	str	r4, [r7, #40]	; 0x28
   151ec:	mov	r0, #1
   151f0:	pop	{r4, r5, r6, r7, r8, pc}
   151f4:	strdeq	r6, [r1], -ip
   151f8:	cmp	r0, #1
   151fc:	bne	15204 <putchar_unlocked@plt+0x3ec8>
   15200:	bx	lr
   15204:	cmp	r0, #0
   15208:	bne	15210 <putchar_unlocked@plt+0x3ed4>
   1520c:	bx	lr
   15210:	push	{r4, lr}
   15214:	ldr	r4, [r0]
   15218:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   1521c:	cmp	r4, #0
   15220:	mov	r0, r4
   15224:	bne	15214 <putchar_unlocked@plt+0x3ed8>
   15228:	pop	{r4, pc}
   1522c:	push	{r4, r5, r6, r7, r8, lr}
   15230:	mov	r6, r0
   15234:	ldr	r0, [pc, #128]	; 152bc <putchar_unlocked@plt+0x3f80>
   15238:	bl	11144 <getenv@plt>
   1523c:	ldrb	r4, [r6, #4]
   15240:	subs	r5, r0, #0
   15244:	beq	152b4 <putchar_unlocked@plt+0x3f78>
   15248:	cmp	r4, #0
   1524c:	beq	15264 <putchar_unlocked@plt+0x3f28>
   15250:	mov	r1, r5
   15254:	add	r0, r6, #5
   15258:	bl	11018 <strcmp@plt>
   1525c:	clz	r4, r0
   15260:	lsr	r4, r4, #5
   15264:	cmp	r4, #0
   15268:	movne	r5, #1
   1526c:	bne	152ac <putchar_unlocked@plt+0x3f70>
   15270:	mov	r0, r5
   15274:	bl	1506c <putchar_unlocked@plt+0x3d30>
   15278:	subs	r5, r0, #0
   1527c:	beq	152ac <putchar_unlocked@plt+0x3f70>
   15280:	mov	r0, r6
   15284:	bl	15020 <putchar_unlocked@plt+0x3ce4>
   15288:	cmp	r0, #0
   1528c:	bne	152ac <putchar_unlocked@plt+0x3f70>
   15290:	bl	111f8 <__errno_location@plt>
   15294:	ldr	r7, [r0]
   15298:	mov	r6, r0
   1529c:	mov	r0, r5
   152a0:	mov	r5, r4
   152a4:	bl	151f8 <putchar_unlocked@plt+0x3ebc>
   152a8:	str	r7, [r6]
   152ac:	mov	r0, r5
   152b0:	pop	{r4, r5, r6, r7, r8, pc}
   152b4:	clz	r4, r4
   152b8:	b	15260 <putchar_unlocked@plt+0x3f24>
   152bc:	muleq	r1, r7, ip
   152c0:	cmp	r0, #1
   152c4:	push	{r4, r5, r6, r7, r8, lr}
   152c8:	moveq	r4, r0
   152cc:	beq	152fc <putchar_unlocked@plt+0x3fc0>
   152d0:	mov	r7, r0
   152d4:	bl	111f8 <__errno_location@plt>
   152d8:	ldr	r6, [r0]
   152dc:	mov	r5, r0
   152e0:	mov	r0, r7
   152e4:	bl	15020 <putchar_unlocked@plt+0x3ce4>
   152e8:	subs	r4, r0, #0
   152ec:	mov	r0, r7
   152f0:	ldreq	r6, [r5]
   152f4:	bl	151f8 <putchar_unlocked@plt+0x3ebc>
   152f8:	str	r6, [r5]
   152fc:	mov	r0, r4
   15300:	pop	{r4, r5, r6, r7, r8, pc}
   15304:	push	{r4, r5, r6, r7, r8, lr}
   15308:	subs	r7, r0, #0
   1530c:	mov	r4, r1
   15310:	mov	r5, r2
   15314:	bne	15328 <putchar_unlocked@plt+0x3fec>
   15318:	mov	r0, r4
   1531c:	mov	r1, r2
   15320:	pop	{r4, r5, r6, r7, r8, lr}
   15324:	b	1100c <gmtime_r@plt>
   15328:	bl	1522c <putchar_unlocked@plt+0x3ef0>
   1532c:	subs	r6, r0, #0
   15330:	beq	1536c <putchar_unlocked@plt+0x4030>
   15334:	mov	r0, r4
   15338:	mov	r1, r5
   1533c:	bl	110c0 <localtime_r@plt>
   15340:	subs	r4, r0, #0
   15344:	beq	15358 <putchar_unlocked@plt+0x401c>
   15348:	mov	r1, r5
   1534c:	mov	r0, r7
   15350:	bl	150ec <putchar_unlocked@plt+0x3db0>
   15354:	mov	r4, r0
   15358:	mov	r0, r6
   1535c:	bl	152c0 <putchar_unlocked@plt+0x3f84>
   15360:	and	r4, r4, #1
   15364:	tst	r0, r4
   15368:	bne	15370 <putchar_unlocked@plt+0x4034>
   1536c:	mov	r5, #0
   15370:	mov	r0, r5
   15374:	pop	{r4, r5, r6, r7, r8, pc}
   15378:	push	{r4, r5, r6, r7, lr}
   1537c:	subs	r6, r0, #0
   15380:	sub	sp, sp, #52	; 0x34
   15384:	mov	r4, r1
   15388:	bne	153a4 <putchar_unlocked@plt+0x4068>
   1538c:	mov	r0, r1
   15390:	bl	112c4 <timegm@plt>
   15394:	mov	r5, r0
   15398:	mov	r0, r5
   1539c:	add	sp, sp, #52	; 0x34
   153a0:	pop	{r4, r5, r6, r7, pc}
   153a4:	bl	1522c <putchar_unlocked@plt+0x3ef0>
   153a8:	subs	r7, r0, #0
   153ac:	beq	15454 <putchar_unlocked@plt+0x4118>
   153b0:	ldr	r3, [r4]
   153b4:	add	r0, sp, #4
   153b8:	str	r3, [sp, #4]
   153bc:	ldr	r3, [r4, #4]
   153c0:	str	r3, [sp, #8]
   153c4:	ldr	r3, [r4, #8]
   153c8:	str	r3, [sp, #12]
   153cc:	ldr	r3, [r4, #12]
   153d0:	str	r3, [sp, #16]
   153d4:	ldr	r3, [r4, #16]
   153d8:	str	r3, [sp, #20]
   153dc:	ldr	r3, [r4, #20]
   153e0:	str	r3, [sp, #24]
   153e4:	mvn	r3, #0
   153e8:	str	r3, [sp, #32]
   153ec:	ldr	r3, [r4, #32]
   153f0:	str	r3, [sp, #36]	; 0x24
   153f4:	bl	11024 <mktime@plt>
   153f8:	ldr	r3, [sp, #32]
   153fc:	cmp	r3, #0
   15400:	movlt	r6, #0
   15404:	mov	r5, r0
   15408:	blt	1541c <putchar_unlocked@plt+0x40e0>
   1540c:	mov	r0, r6
   15410:	add	r1, sp, #4
   15414:	bl	150ec <putchar_unlocked@plt+0x3db0>
   15418:	mov	r6, r0
   1541c:	mov	r0, r7
   15420:	bl	152c0 <putchar_unlocked@plt+0x3f84>
   15424:	and	r6, r6, #1
   15428:	tst	r0, r6
   1542c:	beq	15454 <putchar_unlocked@plt+0x4118>
   15430:	add	lr, sp, #4
   15434:	mov	ip, r4
   15438:	ldm	lr!, {r0, r1, r2, r3}
   1543c:	stmia	ip!, {r0, r1, r2, r3}
   15440:	ldm	lr!, {r0, r1, r2, r3}
   15444:	stmia	ip!, {r0, r1, r2, r3}
   15448:	ldm	lr, {r0, r1, r2}
   1544c:	stm	ip, {r0, r1, r2}
   15450:	b	15398 <putchar_unlocked@plt+0x405c>
   15454:	mvn	r5, #0
   15458:	b	15398 <putchar_unlocked@plt+0x405c>
   1545c:	push	{r4, r5, r6, lr}
   15460:	sub	sp, sp, #32
   15464:	cmp	r1, #0
   15468:	mov	r5, r0
   1546c:	ldr	r4, [sp, #48]	; 0x30
   15470:	ldr	r6, [sp, #52]	; 0x34
   15474:	beq	15528 <putchar_unlocked@plt+0x41ec>
   15478:	stm	sp, {r2, r3}
   1547c:	mov	r3, r1
   15480:	ldr	r2, [pc, #860]	; 157e4 <putchar_unlocked@plt+0x44a8>
   15484:	mov	r1, #1
   15488:	bl	11240 <__fprintf_chk@plt>
   1548c:	mov	r2, #5
   15490:	ldr	r1, [pc, #848]	; 157e8 <putchar_unlocked@plt+0x44ac>
   15494:	mov	r0, #0
   15498:	bl	1109c <dcgettext@plt>
   1549c:	ldr	r3, [pc, #840]	; 157ec <putchar_unlocked@plt+0x44b0>
   154a0:	ldr	r2, [pc, #840]	; 157f0 <putchar_unlocked@plt+0x44b4>
   154a4:	str	r3, [sp]
   154a8:	mov	r1, #1
   154ac:	mov	r3, r0
   154b0:	mov	r0, r5
   154b4:	bl	11240 <__fprintf_chk@plt>
   154b8:	mov	r1, r5
   154bc:	mov	r0, #10
   154c0:	bl	11090 <fputc_unlocked@plt>
   154c4:	mov	r2, #5
   154c8:	ldr	r1, [pc, #804]	; 157f4 <putchar_unlocked@plt+0x44b8>
   154cc:	mov	r0, #0
   154d0:	bl	1109c <dcgettext@plt>
   154d4:	mov	r1, #1
   154d8:	ldr	r3, [pc, #792]	; 157f8 <putchar_unlocked@plt+0x44bc>
   154dc:	mov	r2, r0
   154e0:	mov	r0, r5
   154e4:	bl	11240 <__fprintf_chk@plt>
   154e8:	mov	r1, r5
   154ec:	mov	r0, #10
   154f0:	bl	11090 <fputc_unlocked@plt>
   154f4:	cmp	r6, #9
   154f8:	ldrls	pc, [pc, r6, lsl #2]
   154fc:	b	157d8 <putchar_unlocked@plt+0x449c>
   15500:	andeq	r5, r1, r8, lsl r6
   15504:	andeq	r5, r1, r0, asr #10
   15508:	andeq	r5, r1, ip, ror #10
   1550c:	andeq	r5, r1, r0, lsr #11
   15510:	ldrdeq	r5, [r1], -ip
   15514:	andeq	r5, r1, r0, lsr #12
   15518:	andeq	r5, r1, r8, ror #12
   1551c:			; <UNDEFINED> instruction: 0x000156b8
   15520:	andeq	r5, r1, r0, lsl r7
   15524:	andeq	r5, r1, r0, ror r7
   15528:	str	r3, [sp]
   1552c:	mov	r1, #1
   15530:	mov	r3, r2
   15534:	ldr	r2, [pc, #704]	; 157fc <putchar_unlocked@plt+0x44c0>
   15538:	bl	11240 <__fprintf_chk@plt>
   1553c:	b	1548c <putchar_unlocked@plt+0x4150>
   15540:	mov	r2, #5
   15544:	ldr	r1, [pc, #692]	; 15800 <putchar_unlocked@plt+0x44c4>
   15548:	mov	r0, #0
   1554c:	bl	1109c <dcgettext@plt>
   15550:	ldr	r3, [r4]
   15554:	mov	r1, #1
   15558:	mov	r2, r0
   1555c:	mov	r0, r5
   15560:	add	sp, sp, #32
   15564:	pop	{r4, r5, r6, lr}
   15568:	b	11240 <__fprintf_chk@plt>
   1556c:	mov	r2, #5
   15570:	ldr	r1, [pc, #652]	; 15804 <putchar_unlocked@plt+0x44c8>
   15574:	mov	r0, #0
   15578:	bl	1109c <dcgettext@plt>
   1557c:	ldr	r3, [r4, #4]
   15580:	mov	r1, #1
   15584:	str	r3, [sp, #48]	; 0x30
   15588:	ldr	r3, [r4]
   1558c:	mov	r2, r0
   15590:	mov	r0, r5
   15594:	add	sp, sp, #32
   15598:	pop	{r4, r5, r6, lr}
   1559c:	b	11240 <__fprintf_chk@plt>
   155a0:	mov	r2, #5
   155a4:	ldr	r1, [pc, #604]	; 15808 <putchar_unlocked@plt+0x44cc>
   155a8:	mov	r0, #0
   155ac:	bl	1109c <dcgettext@plt>
   155b0:	ldr	r3, [r4, #8]
   155b4:	mov	r1, #1
   155b8:	str	r3, [sp, #52]	; 0x34
   155bc:	ldr	r3, [r4, #4]
   155c0:	str	r3, [sp, #48]	; 0x30
   155c4:	ldr	r3, [r4]
   155c8:	mov	r2, r0
   155cc:	mov	r0, r5
   155d0:	add	sp, sp, #32
   155d4:	pop	{r4, r5, r6, lr}
   155d8:	b	11240 <__fprintf_chk@plt>
   155dc:	mov	r2, #5
   155e0:	ldr	r1, [pc, #548]	; 1580c <putchar_unlocked@plt+0x44d0>
   155e4:	mov	r0, #0
   155e8:	bl	1109c <dcgettext@plt>
   155ec:	ldr	r3, [r4, #12]
   155f0:	mov	r1, #1
   155f4:	str	r3, [sp, #8]
   155f8:	ldr	r3, [r4, #8]
   155fc:	str	r3, [sp, #4]
   15600:	ldr	r3, [r4, #4]
   15604:	str	r3, [sp]
   15608:	ldr	r3, [r4]
   1560c:	mov	r2, r0
   15610:	mov	r0, r5
   15614:	bl	11240 <__fprintf_chk@plt>
   15618:	add	sp, sp, #32
   1561c:	pop	{r4, r5, r6, pc}
   15620:	mov	r2, #5
   15624:	ldr	r1, [pc, #484]	; 15810 <putchar_unlocked@plt+0x44d4>
   15628:	mov	r0, #0
   1562c:	bl	1109c <dcgettext@plt>
   15630:	ldr	r3, [r4, #16]
   15634:	mov	r1, #1
   15638:	str	r3, [sp, #12]
   1563c:	ldr	r3, [r4, #12]
   15640:	str	r3, [sp, #8]
   15644:	ldr	r3, [r4, #8]
   15648:	str	r3, [sp, #4]
   1564c:	ldr	r3, [r4, #4]
   15650:	str	r3, [sp]
   15654:	ldr	r3, [r4]
   15658:	mov	r2, r0
   1565c:	mov	r0, r5
   15660:	bl	11240 <__fprintf_chk@plt>
   15664:	b	15618 <putchar_unlocked@plt+0x42dc>
   15668:	mov	r2, #5
   1566c:	ldr	r1, [pc, #416]	; 15814 <putchar_unlocked@plt+0x44d8>
   15670:	mov	r0, #0
   15674:	bl	1109c <dcgettext@plt>
   15678:	ldr	r3, [r4, #20]
   1567c:	mov	r1, #1
   15680:	str	r3, [sp, #16]
   15684:	ldr	r3, [r4, #16]
   15688:	str	r3, [sp, #12]
   1568c:	ldr	r3, [r4, #12]
   15690:	str	r3, [sp, #8]
   15694:	ldr	r3, [r4, #8]
   15698:	str	r3, [sp, #4]
   1569c:	ldr	r3, [r4, #4]
   156a0:	str	r3, [sp]
   156a4:	ldr	r3, [r4]
   156a8:	mov	r2, r0
   156ac:	mov	r0, r5
   156b0:	bl	11240 <__fprintf_chk@plt>
   156b4:	b	15618 <putchar_unlocked@plt+0x42dc>
   156b8:	mov	r2, #5
   156bc:	ldr	r1, [pc, #340]	; 15818 <putchar_unlocked@plt+0x44dc>
   156c0:	mov	r0, #0
   156c4:	bl	1109c <dcgettext@plt>
   156c8:	ldr	r3, [r4, #24]
   156cc:	mov	r1, #1
   156d0:	str	r3, [sp, #20]
   156d4:	ldr	r3, [r4, #20]
   156d8:	str	r3, [sp, #16]
   156dc:	ldr	r3, [r4, #16]
   156e0:	str	r3, [sp, #12]
   156e4:	ldr	r3, [r4, #12]
   156e8:	str	r3, [sp, #8]
   156ec:	ldr	r3, [r4, #8]
   156f0:	str	r3, [sp, #4]
   156f4:	ldr	r3, [r4, #4]
   156f8:	str	r3, [sp]
   156fc:	ldr	r3, [r4]
   15700:	mov	r2, r0
   15704:	mov	r0, r5
   15708:	bl	11240 <__fprintf_chk@plt>
   1570c:	b	15618 <putchar_unlocked@plt+0x42dc>
   15710:	mov	r2, #5
   15714:	ldr	r1, [pc, #256]	; 1581c <putchar_unlocked@plt+0x44e0>
   15718:	mov	r0, #0
   1571c:	bl	1109c <dcgettext@plt>
   15720:	ldr	r3, [r4, #28]
   15724:	mov	r1, #1
   15728:	str	r3, [sp, #24]
   1572c:	ldr	r3, [r4, #24]
   15730:	str	r3, [sp, #20]
   15734:	ldr	r3, [r4, #20]
   15738:	str	r3, [sp, #16]
   1573c:	ldr	r3, [r4, #16]
   15740:	str	r3, [sp, #12]
   15744:	ldr	r3, [r4, #12]
   15748:	str	r3, [sp, #8]
   1574c:	ldr	r3, [r4, #8]
   15750:	str	r3, [sp, #4]
   15754:	ldr	r3, [r4, #4]
   15758:	str	r3, [sp]
   1575c:	ldr	r3, [r4]
   15760:	mov	r2, r0
   15764:	mov	r0, r5
   15768:	bl	11240 <__fprintf_chk@plt>
   1576c:	b	15618 <putchar_unlocked@plt+0x42dc>
   15770:	ldr	r1, [pc, #168]	; 15820 <putchar_unlocked@plt+0x44e4>
   15774:	mov	r2, #5
   15778:	mov	r0, #0
   1577c:	bl	1109c <dcgettext@plt>
   15780:	ldr	r3, [r4, #32]
   15784:	mov	r1, #1
   15788:	str	r3, [sp, #28]
   1578c:	ldr	r3, [r4, #28]
   15790:	str	r3, [sp, #24]
   15794:	ldr	r3, [r4, #24]
   15798:	str	r3, [sp, #20]
   1579c:	ldr	r3, [r4, #20]
   157a0:	str	r3, [sp, #16]
   157a4:	ldr	r3, [r4, #16]
   157a8:	str	r3, [sp, #12]
   157ac:	ldr	r3, [r4, #12]
   157b0:	str	r3, [sp, #8]
   157b4:	ldr	r3, [r4, #8]
   157b8:	str	r3, [sp, #4]
   157bc:	ldr	r3, [r4, #4]
   157c0:	str	r3, [sp]
   157c4:	ldr	r3, [r4]
   157c8:	mov	r2, r0
   157cc:	mov	r0, r5
   157d0:	bl	11240 <__fprintf_chk@plt>
   157d4:	b	15618 <putchar_unlocked@plt+0x42dc>
   157d8:	mov	r2, #5
   157dc:	ldr	r1, [pc, #64]	; 15824 <putchar_unlocked@plt+0x44e8>
   157e0:	b	15778 <putchar_unlocked@plt+0x443c>
   157e4:	muleq	r1, sl, ip
   157e8:	andeq	r6, r1, sp, lsr #25
   157ec:	andeq	r0, r0, r6, ror #15
   157f0:	andeq	r6, r1, fp, ror pc
   157f4:			; <UNDEFINED> instruction: 0x00016cb1
   157f8:	andeq	r6, r1, ip, asr sp
   157fc:	andeq	r6, r1, r6, lsr #25
   15800:	andeq	r6, r1, lr, ror sp
   15804:	andeq	r6, r1, lr, lsl #27
   15808:	andeq	r6, r1, r5, lsr #27
   1580c:	andeq	r6, r1, r1, asr #27
   15810:	andeq	r6, r1, r1, ror #27
   15814:	andeq	r6, r1, r5, lsl #28
   15818:	andeq	r6, r1, sp, lsr #28
   1581c:	andeq	r6, r1, r9, asr lr
   15820:	andeq	r6, r1, r9, lsl #29
   15824:			; <UNDEFINED> instruction: 0x00016ebd
   15828:	push	{r0, r1, r4, lr}
   1582c:	mov	ip, #0
   15830:	ldr	lr, [sp, #16]
   15834:	ldr	r4, [lr, ip, lsl #2]
   15838:	cmp	r4, #0
   1583c:	bne	15854 <putchar_unlocked@plt+0x4518>
   15840:	str	ip, [sp, #4]
   15844:	str	lr, [sp]
   15848:	bl	1545c <putchar_unlocked@plt+0x4120>
   1584c:	add	sp, sp, #8
   15850:	pop	{r4, pc}
   15854:	add	ip, ip, #1
   15858:	b	15834 <putchar_unlocked@plt+0x44f8>
   1585c:	push	{r4, r5, lr}
   15860:	sub	sp, sp, #52	; 0x34
   15864:	mov	ip, #0
   15868:	ldr	r5, [sp, #64]	; 0x40
   1586c:	add	lr, sp, #8
   15870:	ldr	r4, [r5, ip, lsl #2]
   15874:	cmp	r4, #0
   15878:	str	r4, [lr, ip, lsl #2]
   1587c:	beq	1588c <putchar_unlocked@plt+0x4550>
   15880:	add	ip, ip, #1
   15884:	cmp	ip, #10
   15888:	bne	15870 <putchar_unlocked@plt+0x4534>
   1588c:	str	ip, [sp, #4]
   15890:	str	lr, [sp]
   15894:	bl	1545c <putchar_unlocked@plt+0x4120>
   15898:	add	sp, sp, #52	; 0x34
   1589c:	pop	{r4, r5, pc}
   158a0:	push	{r3}		; (str r3, [sp, #-4]!)
   158a4:	push	{r0, r1, r2, r3, lr}
   158a8:	add	r3, sp, #24
   158ac:	str	r3, [sp, #12]
   158b0:	str	r3, [sp]
   158b4:	ldr	r3, [sp, #20]
   158b8:	bl	1585c <putchar_unlocked@plt+0x4520>
   158bc:	add	sp, sp, #16
   158c0:	pop	{lr}		; (ldr lr, [sp], #4)
   158c4:	add	sp, sp, #4
   158c8:	bx	lr
   158cc:	ldr	r3, [pc, #116]	; 15948 <putchar_unlocked@plt+0x460c>
   158d0:	push	{r4, lr}
   158d4:	mov	r0, #10
   158d8:	ldr	r1, [r3]
   158dc:	bl	11090 <fputc_unlocked@plt>
   158e0:	mov	r2, #5
   158e4:	ldr	r1, [pc, #96]	; 1594c <putchar_unlocked@plt+0x4610>
   158e8:	mov	r0, #0
   158ec:	bl	1109c <dcgettext@plt>
   158f0:	ldr	r2, [pc, #88]	; 15950 <putchar_unlocked@plt+0x4614>
   158f4:	mov	r1, r0
   158f8:	mov	r0, #1
   158fc:	bl	11228 <__printf_chk@plt>
   15900:	mov	r2, #5
   15904:	ldr	r1, [pc, #72]	; 15954 <putchar_unlocked@plt+0x4618>
   15908:	mov	r0, #0
   1590c:	bl	1109c <dcgettext@plt>
   15910:	ldr	r3, [pc, #64]	; 15958 <putchar_unlocked@plt+0x461c>
   15914:	ldr	r2, [pc, #64]	; 1595c <putchar_unlocked@plt+0x4620>
   15918:	mov	r1, r0
   1591c:	mov	r0, #1
   15920:	bl	11228 <__printf_chk@plt>
   15924:	mov	r2, #5
   15928:	ldr	r1, [pc, #48]	; 15960 <putchar_unlocked@plt+0x4624>
   1592c:	mov	r0, #0
   15930:	bl	1109c <dcgettext@plt>
   15934:	ldr	r2, [pc, #40]	; 15964 <putchar_unlocked@plt+0x4628>
   15938:	pop	{r4, lr}
   1593c:	mov	r1, r0
   15940:	mov	r0, #1
   15944:	b	11228 <__printf_chk@plt>
   15948:	muleq	r2, r4, r1
   1594c:	strdeq	r6, [r1], -r9
   15950:	andeq	r6, r1, sp, lsl #30
   15954:	andeq	r6, r1, r3, lsr #30
   15958:	muleq	r1, r3, r9
   1595c:			; <UNDEFINED> instruction: 0x000169bb
   15960:	andeq	r6, r1, r7, lsr pc
   15964:	andeq	r6, r1, lr, asr pc
   15968:	push	{r4, lr}
   1596c:	bl	15e84 <putchar_unlocked@plt+0x4b48>
   15970:	cmp	r0, #0
   15974:	popne	{r4, pc}
   15978:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   1597c:	push	{r4, lr}
   15980:	bl	15e84 <putchar_unlocked@plt+0x4b48>
   15984:	cmp	r0, #0
   15988:	popne	{r4, pc}
   1598c:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15990:	b	15968 <putchar_unlocked@plt+0x462c>
   15994:	push	{r4, r5, r6, lr}
   15998:	mov	r5, r0
   1599c:	mov	r4, r1
   159a0:	bl	15ec4 <putchar_unlocked@plt+0x4b88>
   159a4:	cmp	r0, #0
   159a8:	popne	{r4, r5, r6, pc}
   159ac:	adds	r4, r4, #0
   159b0:	movne	r4, #1
   159b4:	cmp	r5, #0
   159b8:	orreq	r4, r4, #1
   159bc:	cmp	r4, #0
   159c0:	popeq	{r4, r5, r6, pc}
   159c4:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   159c8:	push	{r4, lr}
   159cc:	cmp	r1, #0
   159d0:	orreq	r1, r1, #1
   159d4:	bl	15ec4 <putchar_unlocked@plt+0x4b88>
   159d8:	cmp	r0, #0
   159dc:	popne	{r4, pc}
   159e0:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   159e4:	push	{r4, r5, r6, lr}
   159e8:	mov	r6, r0
   159ec:	mov	r5, r1
   159f0:	mov	r4, r2
   159f4:	bl	16068 <putchar_unlocked@plt+0x4d2c>
   159f8:	cmp	r0, #0
   159fc:	popne	{r4, r5, r6, pc}
   15a00:	cmp	r6, #0
   15a04:	beq	15a14 <putchar_unlocked@plt+0x46d8>
   15a08:	cmp	r5, #0
   15a0c:	cmpne	r4, #0
   15a10:	popeq	{r4, r5, r6, pc}
   15a14:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15a18:	b	159e4 <putchar_unlocked@plt+0x46a8>
   15a1c:	cmp	r2, #0
   15a20:	cmpne	r1, #0
   15a24:	moveq	r2, #1
   15a28:	moveq	r1, r2
   15a2c:	push	{r4, lr}
   15a30:	bl	16068 <putchar_unlocked@plt+0x4d2c>
   15a34:	cmp	r0, #0
   15a38:	popne	{r4, pc}
   15a3c:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15a40:	mov	r2, r1
   15a44:	mov	r1, r0
   15a48:	mov	r0, #0
   15a4c:	b	159e4 <putchar_unlocked@plt+0x46a8>
   15a50:	mov	r2, r1
   15a54:	mov	r1, r0
   15a58:	mov	r0, #0
   15a5c:	b	15a1c <putchar_unlocked@plt+0x46e0>
   15a60:	push	{r4, r5, r6, r7, r8, lr}
   15a64:	subs	r7, r0, #0
   15a68:	mov	r5, r1
   15a6c:	mov	r6, r2
   15a70:	ldr	r4, [r1]
   15a74:	bne	15ab0 <putchar_unlocked@plt+0x4774>
   15a78:	cmp	r4, #0
   15a7c:	bne	15a98 <putchar_unlocked@plt+0x475c>
   15a80:	mov	r1, r2
   15a84:	mov	r0, #64	; 0x40
   15a88:	bl	16194 <putchar_unlocked@plt+0x4e58>
   15a8c:	cmp	r0, #0
   15a90:	movne	r4, r0
   15a94:	addeq	r4, r0, #1
   15a98:	mov	r2, r6
   15a9c:	mov	r1, r4
   15aa0:	mov	r0, r7
   15aa4:	bl	159e4 <putchar_unlocked@plt+0x46a8>
   15aa8:	str	r4, [r5]
   15aac:	pop	{r4, r5, r6, r7, r8, pc}
   15ab0:	lsr	r2, r4, #1
   15ab4:	add	r3, r2, #1
   15ab8:	mvn	r3, r3
   15abc:	cmp	r4, r3
   15ac0:	addls	r4, r4, #1
   15ac4:	addls	r4, r4, r2
   15ac8:	bls	15a98 <putchar_unlocked@plt+0x475c>
   15acc:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15ad0:	mov	r2, #1
   15ad4:	b	15a60 <putchar_unlocked@plt+0x4724>
   15ad8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15adc:	mov	sl, r0
   15ae0:	ldr	r8, [r1]
   15ae4:	mov	fp, r1
   15ae8:	mov	r5, r2
   15aec:	asrs	r4, r8, #1
   15af0:	mov	r9, r3
   15af4:	ldr	r7, [sp, #48]	; 0x30
   15af8:	bpl	15b94 <putchar_unlocked@plt+0x4858>
   15afc:	rsb	r2, r4, #-2147483648	; 0x80000000
   15b00:	cmp	r8, r2
   15b04:	movge	r2, #0
   15b08:	movlt	r2, #1
   15b0c:	mvn	r3, r9
   15b10:	cmp	r2, #0
   15b14:	lsr	r3, r3, #31
   15b18:	addeq	r4, r4, r8
   15b1c:	mvnne	r4, #-2147483648	; 0x80000000
   15b20:	mov	r0, r3
   15b24:	cmp	r9, r4
   15b28:	movge	r0, #0
   15b2c:	andlt	r0, r0, #1
   15b30:	cmp	r0, #0
   15b34:	str	r3, [sp, #4]
   15b38:	bne	15d08 <putchar_unlocked@plt+0x49cc>
   15b3c:	cmp	r7, #0
   15b40:	bge	15c54 <putchar_unlocked@plt+0x4918>
   15b44:	cmp	r4, #0
   15b48:	bge	15bac <putchar_unlocked@plt+0x4870>
   15b4c:	mov	r1, r7
   15b50:	mvn	r0, #-2147483648	; 0x80000000
   15b54:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15b58:	cmp	r0, r4
   15b5c:	movle	r0, #0
   15b60:	movgt	r0, #1
   15b64:	cmp	r0, #0
   15b68:	mvnne	r6, #-2147483648	; 0x80000000
   15b6c:	beq	15bbc <putchar_unlocked@plt+0x4880>
   15b70:	mov	r1, r7
   15b74:	mov	r0, r6
   15b78:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15b7c:	mov	r1, r7
   15b80:	mov	r4, r0
   15b84:	mov	r0, r6
   15b88:	bl	165c0 <putchar_unlocked@plt+0x5284>
   15b8c:	sub	r1, r6, r1
   15b90:	b	15bcc <putchar_unlocked@plt+0x4890>
   15b94:	mvn	r2, #-2147483648	; 0x80000000
   15b98:	sub	r2, r2, r4
   15b9c:	cmp	r8, r2
   15ba0:	movle	r2, #0
   15ba4:	movgt	r2, #1
   15ba8:	b	15b0c <putchar_unlocked@plt+0x47d0>
   15bac:	cmn	r7, #1
   15bb0:	movne	r1, r7
   15bb4:	movne	r0, #-2147483648	; 0x80000000
   15bb8:	bne	15d20 <putchar_unlocked@plt+0x49e4>
   15bbc:	mul	r1, r7, r4
   15bc0:	cmp	r1, #63	; 0x3f
   15bc4:	movle	r6, #64	; 0x40
   15bc8:	ble	15b70 <putchar_unlocked@plt+0x4834>
   15bcc:	cmp	sl, #0
   15bd0:	sub	r2, r4, r8
   15bd4:	streq	sl, [fp]
   15bd8:	cmp	r2, r5
   15bdc:	bge	15cb0 <putchar_unlocked@plt+0x4974>
   15be0:	cmp	r5, #0
   15be4:	bge	15c7c <putchar_unlocked@plt+0x4940>
   15be8:	rsb	r2, r5, #-2147483648	; 0x80000000
   15bec:	cmp	r8, r2
   15bf0:	movge	r2, #0
   15bf4:	movlt	r2, #1
   15bf8:	cmp	r2, #0
   15bfc:	bne	15c50 <putchar_unlocked@plt+0x4914>
   15c00:	ldr	r0, [sp, #4]
   15c04:	add	r5, r8, r5
   15c08:	cmp	r9, r5
   15c0c:	movge	r0, #0
   15c10:	andlt	r0, r0, #1
   15c14:	cmp	r0, #0
   15c18:	mov	r4, r5
   15c1c:	bne	15c50 <putchar_unlocked@plt+0x4914>
   15c20:	cmp	r7, #0
   15c24:	bge	15cc4 <putchar_unlocked@plt+0x4988>
   15c28:	cmp	r5, #0
   15c2c:	bge	15c9c <putchar_unlocked@plt+0x4960>
   15c30:	mov	r1, r7
   15c34:	mvn	r0, #-2147483648	; 0x80000000
   15c38:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15c3c:	cmp	r5, r0
   15c40:	movge	r0, #0
   15c44:	movlt	r0, #1
   15c48:	cmp	r0, #0
   15c4c:	beq	15cac <putchar_unlocked@plt+0x4970>
   15c50:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15c54:	beq	15bbc <putchar_unlocked@plt+0x4880>
   15c58:	cmp	r4, #0
   15c5c:	bge	15d18 <putchar_unlocked@plt+0x49dc>
   15c60:	cmn	r4, #1
   15c64:	beq	15bbc <putchar_unlocked@plt+0x4880>
   15c68:	mov	r1, r4
   15c6c:	mov	r0, #-2147483648	; 0x80000000
   15c70:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15c74:	cmp	r7, r0
   15c78:	b	15b5c <putchar_unlocked@plt+0x4820>
   15c7c:	cmp	r8, #0
   15c80:	blt	15c00 <putchar_unlocked@plt+0x48c4>
   15c84:	mvn	r2, #-2147483648	; 0x80000000
   15c88:	sub	r2, r2, r5
   15c8c:	cmp	r8, r2
   15c90:	movle	r2, #0
   15c94:	movgt	r2, #1
   15c98:	b	15bf8 <putchar_unlocked@plt+0x48bc>
   15c9c:	cmn	r7, #1
   15ca0:	movne	r1, r7
   15ca4:	movne	r0, #-2147483648	; 0x80000000
   15ca8:	bne	15cfc <putchar_unlocked@plt+0x49c0>
   15cac:	mul	r1, r5, r7
   15cb0:	mov	r0, sl
   15cb4:	bl	15994 <putchar_unlocked@plt+0x4658>
   15cb8:	str	r4, [fp]
   15cbc:	add	sp, sp, #12
   15cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cc4:	beq	15cac <putchar_unlocked@plt+0x4970>
   15cc8:	cmp	r5, #0
   15ccc:	movge	r1, r7
   15cd0:	mvnge	r0, #-2147483648	; 0x80000000
   15cd4:	bge	15cfc <putchar_unlocked@plt+0x49c0>
   15cd8:	cmn	r5, #1
   15cdc:	beq	15cac <putchar_unlocked@plt+0x4970>
   15ce0:	mov	r1, r5
   15ce4:	mov	r0, #-2147483648	; 0x80000000
   15ce8:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15cec:	cmp	r7, r0
   15cf0:	movle	r0, #0
   15cf4:	movgt	r0, #1
   15cf8:	b	15c48 <putchar_unlocked@plt+0x490c>
   15cfc:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15d00:	cmp	r5, r0
   15d04:	b	15cf0 <putchar_unlocked@plt+0x49b4>
   15d08:	cmp	r7, #0
   15d0c:	mov	r4, r9
   15d10:	blt	15bac <putchar_unlocked@plt+0x4870>
   15d14:	beq	15bbc <putchar_unlocked@plt+0x4880>
   15d18:	mov	r1, r7
   15d1c:	mvn	r0, #-2147483648	; 0x80000000
   15d20:	bl	163a0 <putchar_unlocked@plt+0x5064>
   15d24:	cmp	r0, r4
   15d28:	movge	r0, #0
   15d2c:	movlt	r0, #1
   15d30:	b	15b64 <putchar_unlocked@plt+0x4828>
   15d34:	push	{r4, lr}
   15d38:	bl	15e3c <putchar_unlocked@plt+0x4b00>
   15d3c:	cmp	r0, #0
   15d40:	popne	{r4, pc}
   15d44:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15d48:	mov	r1, #1
   15d4c:	b	15d34 <putchar_unlocked@plt+0x49f8>
   15d50:	push	{r4, lr}
   15d54:	bl	15e3c <putchar_unlocked@plt+0x4b00>
   15d58:	cmp	r0, #0
   15d5c:	popne	{r4, pc}
   15d60:	bl	15dfc <putchar_unlocked@plt+0x4ac0>
   15d64:	mov	r1, #1
   15d68:	b	15d50 <putchar_unlocked@plt+0x4a14>
   15d6c:	push	{r4, r5, r6, lr}
   15d70:	mov	r4, r1
   15d74:	mov	r5, r0
   15d78:	mov	r0, r1
   15d7c:	bl	15968 <putchar_unlocked@plt+0x462c>
   15d80:	mov	r2, r4
   15d84:	mov	r1, r5
   15d88:	pop	{r4, r5, r6, lr}
   15d8c:	b	11060 <memcpy@plt>
   15d90:	push	{r4, r5, r6, lr}
   15d94:	mov	r4, r1
   15d98:	mov	r5, r0
   15d9c:	mov	r0, r1
   15da0:	bl	1597c <putchar_unlocked@plt+0x4640>
   15da4:	mov	r2, r4
   15da8:	mov	r1, r5
   15dac:	pop	{r4, r5, r6, lr}
   15db0:	b	11060 <memcpy@plt>
   15db4:	push	{r4, r5, r6, lr}
   15db8:	mov	r5, r0
   15dbc:	add	r0, r1, #1
   15dc0:	mov	r4, r1
   15dc4:	bl	1597c <putchar_unlocked@plt+0x4640>
   15dc8:	mov	r2, #0
   15dcc:	mov	r1, r5
   15dd0:	strb	r2, [r0, r4]
   15dd4:	mov	r2, r4
   15dd8:	pop	{r4, r5, r6, lr}
   15ddc:	b	11060 <memcpy@plt>
   15de0:	push	{r4, lr}
   15de4:	mov	r4, r0
   15de8:	bl	111e0 <strlen@plt>
   15dec:	add	r1, r0, #1
   15df0:	mov	r0, r4
   15df4:	pop	{r4, lr}
   15df8:	b	15d6c <putchar_unlocked@plt+0x4a30>
   15dfc:	ldr	r3, [pc, #44]	; 15e30 <putchar_unlocked@plt+0x4af4>
   15e00:	push	{r4, lr}
   15e04:	mov	r2, #5
   15e08:	ldr	r1, [pc, #36]	; 15e34 <putchar_unlocked@plt+0x4af8>
   15e0c:	mov	r0, #0
   15e10:	ldr	r4, [r3]
   15e14:	bl	1109c <dcgettext@plt>
   15e18:	ldr	r2, [pc, #24]	; 15e38 <putchar_unlocked@plt+0x4afc>
   15e1c:	mov	r1, #0
   15e20:	mov	r3, r0
   15e24:	mov	r0, r4
   15e28:	bl	11138 <error@plt>
   15e2c:	bl	11318 <abort@plt>
   15e30:	andeq	r8, r2, ip, lsr r1
   15e34:	andeq	r6, r1, sl, lsr #31
   15e38:	andeq	r6, r1, r8, lsr fp
   15e3c:	cmp	r1, #0
   15e40:	cmpne	r0, #0
   15e44:	moveq	r1, #1
   15e48:	moveq	r0, r1
   15e4c:	umull	r2, r3, r0, r1
   15e50:	adds	r3, r3, #0
   15e54:	movne	r3, #1
   15e58:	cmp	r2, #0
   15e5c:	blt	15e6c <putchar_unlocked@plt+0x4b30>
   15e60:	cmp	r3, #0
   15e64:	bne	15e6c <putchar_unlocked@plt+0x4b30>
   15e68:	b	10fe8 <calloc@plt>
   15e6c:	push	{r4, lr}
   15e70:	bl	111f8 <__errno_location@plt>
   15e74:	mov	r3, #12
   15e78:	str	r3, [r0]
   15e7c:	mov	r0, #0
   15e80:	pop	{r4, pc}
   15e84:	cmp	r0, #0
   15e88:	mov	r3, #0
   15e8c:	moveq	r0, #1
   15e90:	adds	r3, r3, #0
   15e94:	movne	r3, #1
   15e98:	cmp	r0, #0
   15e9c:	blt	15eac <putchar_unlocked@plt+0x4b70>
   15ea0:	cmp	r3, #0
   15ea4:	bne	15eac <putchar_unlocked@plt+0x4b70>
   15ea8:	b	11150 <malloc@plt>
   15eac:	push	{r4, lr}
   15eb0:	bl	111f8 <__errno_location@plt>
   15eb4:	mov	r3, #12
   15eb8:	str	r3, [r0]
   15ebc:	mov	r0, #0
   15ec0:	pop	{r4, pc}
   15ec4:	cmp	r0, #0
   15ec8:	push	{r4, lr}
   15ecc:	mov	r4, r1
   15ed0:	bne	15ee0 <putchar_unlocked@plt+0x4ba4>
   15ed4:	mov	r0, r1
   15ed8:	pop	{r4, lr}
   15edc:	b	15e84 <putchar_unlocked@plt+0x4b48>
   15ee0:	cmp	r1, #0
   15ee4:	bne	15ef4 <putchar_unlocked@plt+0x4bb8>
   15ee8:	bl	15f90 <putchar_unlocked@plt+0x4c54>
   15eec:	mov	r0, #0
   15ef0:	pop	{r4, pc}
   15ef4:	cmp	r1, #0
   15ef8:	blt	15f08 <putchar_unlocked@plt+0x4bcc>
   15efc:	mov	r3, #0
   15f00:	cmp	r3, r3
   15f04:	beq	15f18 <putchar_unlocked@plt+0x4bdc>
   15f08:	bl	111f8 <__errno_location@plt>
   15f0c:	mov	r3, #12
   15f10:	str	r3, [r0]
   15f14:	b	15eec <putchar_unlocked@plt+0x4bb0>
   15f18:	pop	{r4, lr}
   15f1c:	b	110b4 <realloc@plt>
   15f20:	push	{r4, r5, r6, lr}
   15f24:	mov	r4, r0
   15f28:	bl	11114 <__fpending@plt>
   15f2c:	mov	r5, r0
   15f30:	mov	r0, r4
   15f34:	bl	11120 <ferror_unlocked@plt>
   15f38:	mov	r6, r0
   15f3c:	mov	r0, r4
   15f40:	bl	11d48 <putchar_unlocked@plt+0xa0c>
   15f44:	cmp	r6, #0
   15f48:	mov	r4, r0
   15f4c:	bne	15f78 <putchar_unlocked@plt+0x4c3c>
   15f50:	cmp	r0, #0
   15f54:	beq	15f70 <putchar_unlocked@plt+0x4c34>
   15f58:	cmp	r5, #0
   15f5c:	bne	15f88 <putchar_unlocked@plt+0x4c4c>
   15f60:	bl	111f8 <__errno_location@plt>
   15f64:	ldr	r4, [r0]
   15f68:	subs	r4, r4, #9
   15f6c:	mvnne	r4, #0
   15f70:	mov	r0, r4
   15f74:	pop	{r4, r5, r6, pc}
   15f78:	cmp	r0, #0
   15f7c:	bne	15f88 <putchar_unlocked@plt+0x4c4c>
   15f80:	bl	111f8 <__errno_location@plt>
   15f84:	str	r4, [r0]
   15f88:	mvn	r4, #0
   15f8c:	b	15f70 <putchar_unlocked@plt+0x4c34>
   15f90:	push	{r0, r1, r2, r4, r5, lr}
   15f94:	mov	r5, r0
   15f98:	bl	111f8 <__errno_location@plt>
   15f9c:	ldr	r3, [r0]
   15fa0:	mov	r4, r0
   15fa4:	str	r3, [sp]
   15fa8:	str	r3, [sp, #4]
   15fac:	mov	r3, #0
   15fb0:	str	r3, [r0]
   15fb4:	mov	r0, r5
   15fb8:	bl	11048 <free@plt>
   15fbc:	ldr	r3, [r4]
   15fc0:	add	r2, sp, #8
   15fc4:	cmp	r3, #0
   15fc8:	moveq	r3, #4
   15fcc:	movne	r3, #0
   15fd0:	add	r3, r2, r3
   15fd4:	ldr	r3, [r3, #-8]
   15fd8:	str	r3, [r4]
   15fdc:	add	sp, sp, #12
   15fe0:	pop	{r4, r5, pc}
   15fe4:	push	{r4, lr}
   15fe8:	mov	r0, #14
   15fec:	bl	112a0 <nl_langinfo@plt>
   15ff0:	ldr	r3, [pc, #24]	; 16010 <putchar_unlocked@plt+0x4cd4>
   15ff4:	cmp	r0, #0
   15ff8:	moveq	r0, r3
   15ffc:	ldr	r3, [pc, #16]	; 16014 <putchar_unlocked@plt+0x4cd8>
   16000:	ldrb	r2, [r0]
   16004:	cmp	r2, #0
   16008:	moveq	r0, r3
   1600c:	pop	{r4, pc}
   16010:	strdeq	r6, [r1], -ip
   16014:			; <UNDEFINED> instruction: 0x00016fbb
   16018:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1601c:	subs	r5, r0, #0
   16020:	addeq	r5, sp, #4
   16024:	mov	r0, r5
   16028:	mov	r7, r2
   1602c:	mov	r6, r1
   16030:	bl	1112c <mbrtowc@plt>
   16034:	cmp	r7, #0
   16038:	cmnne	r0, #3
   1603c:	mov	r4, r0
   16040:	bls	1605c <putchar_unlocked@plt+0x4d20>
   16044:	mov	r0, #0
   16048:	bl	160b4 <putchar_unlocked@plt+0x4d78>
   1604c:	cmp	r0, #0
   16050:	moveq	r4, #1
   16054:	ldrbeq	r3, [r6]
   16058:	streq	r3, [r5]
   1605c:	mov	r0, r4
   16060:	add	sp, sp, #12
   16064:	pop	{r4, r5, r6, r7, pc}
   16068:	push	{r4, r5, r6, lr}
   1606c:	subs	r4, r2, #0
   16070:	mov	r6, r0
   16074:	mov	r5, r1
   16078:	beq	16090 <putchar_unlocked@plt+0x4d54>
   1607c:	mov	r1, r4
   16080:	mvn	r0, #0
   16084:	bl	16194 <putchar_unlocked@plt+0x4e58>
   16088:	cmp	r0, r5
   1608c:	bcc	160a0 <putchar_unlocked@plt+0x4d64>
   16090:	mul	r1, r5, r4
   16094:	mov	r0, r6
   16098:	pop	{r4, r5, r6, lr}
   1609c:	b	15ec4 <putchar_unlocked@plt+0x4b88>
   160a0:	bl	111f8 <__errno_location@plt>
   160a4:	mov	r3, #12
   160a8:	str	r3, [r0]
   160ac:	mov	r0, #0
   160b0:	pop	{r4, r5, r6, pc}
   160b4:	push	{lr}		; (str lr, [sp, #-4]!)
   160b8:	sub	sp, sp, #268	; 0x10c
   160bc:	ldr	r2, [pc, #64]	; 16104 <putchar_unlocked@plt+0x4dc8>
   160c0:	add	r1, sp, #4
   160c4:	bl	16110 <putchar_unlocked@plt+0x4dd4>
   160c8:	cmp	r0, #0
   160cc:	movne	r0, #0
   160d0:	bne	160fc <putchar_unlocked@plt+0x4dc0>
   160d4:	ldr	r1, [pc, #44]	; 16108 <putchar_unlocked@plt+0x4dcc>
   160d8:	add	r0, sp, #4
   160dc:	bl	11018 <strcmp@plt>
   160e0:	cmp	r0, #0
   160e4:	beq	160fc <putchar_unlocked@plt+0x4dc0>
   160e8:	ldr	r1, [pc, #28]	; 1610c <putchar_unlocked@plt+0x4dd0>
   160ec:	add	r0, sp, #4
   160f0:	bl	11018 <strcmp@plt>
   160f4:	adds	r0, r0, #0
   160f8:	movne	r0, #1
   160fc:	add	sp, sp, #268	; 0x10c
   16100:	pop	{pc}		; (ldr pc, [sp], #4)
   16104:	andeq	r0, r0, r1, lsl #2
   16108:	andeq	r6, r1, r6, lsr #22
   1610c:	andeq	r6, r1, r1, asr #31
   16110:	push	{r4, r5, r6, lr}
   16114:	mov	r5, r1
   16118:	mov	r1, #0
   1611c:	mov	r4, r2
   16120:	bl	11288 <setlocale@plt>
   16124:	subs	r6, r0, #0
   16128:	bne	1613c <putchar_unlocked@plt+0x4e00>
   1612c:	cmp	r4, #0
   16130:	strbne	r6, [r5]
   16134:	mov	r0, #22
   16138:	pop	{r4, r5, r6, pc}
   1613c:	bl	111e0 <strlen@plt>
   16140:	cmp	r4, r0
   16144:	bls	16160 <putchar_unlocked@plt+0x4e24>
   16148:	add	r2, r0, #1
   1614c:	mov	r1, r6
   16150:	mov	r0, r5
   16154:	bl	11060 <memcpy@plt>
   16158:	mov	r0, #0
   1615c:	pop	{r4, r5, r6, pc}
   16160:	cmp	r4, #0
   16164:	beq	16184 <putchar_unlocked@plt+0x4e48>
   16168:	sub	r4, r4, #1
   1616c:	mov	r2, r4
   16170:	mov	r1, r6
   16174:	mov	r0, r5
   16178:	bl	11060 <memcpy@plt>
   1617c:	mov	r3, #0
   16180:	strb	r3, [r5, r4]
   16184:	mov	r0, #34	; 0x22
   16188:	pop	{r4, r5, r6, pc}
   1618c:	mov	r1, #0
   16190:	b	11288 <setlocale@plt>
   16194:	subs	r2, r1, #1
   16198:	bxeq	lr
   1619c:	bcc	16374 <putchar_unlocked@plt+0x5038>
   161a0:	cmp	r0, r1
   161a4:	bls	16358 <putchar_unlocked@plt+0x501c>
   161a8:	tst	r1, r2
   161ac:	beq	16364 <putchar_unlocked@plt+0x5028>
   161b0:	clz	r3, r0
   161b4:	clz	r2, r1
   161b8:	sub	r3, r2, r3
   161bc:	rsbs	r3, r3, #31
   161c0:	addne	r3, r3, r3, lsl #1
   161c4:	mov	r2, #0
   161c8:	addne	pc, pc, r3, lsl #2
   161cc:	nop			; (mov r0, r0)
   161d0:	cmp	r0, r1, lsl #31
   161d4:	adc	r2, r2, r2
   161d8:	subcs	r0, r0, r1, lsl #31
   161dc:	cmp	r0, r1, lsl #30
   161e0:	adc	r2, r2, r2
   161e4:	subcs	r0, r0, r1, lsl #30
   161e8:	cmp	r0, r1, lsl #29
   161ec:	adc	r2, r2, r2
   161f0:	subcs	r0, r0, r1, lsl #29
   161f4:	cmp	r0, r1, lsl #28
   161f8:	adc	r2, r2, r2
   161fc:	subcs	r0, r0, r1, lsl #28
   16200:	cmp	r0, r1, lsl #27
   16204:	adc	r2, r2, r2
   16208:	subcs	r0, r0, r1, lsl #27
   1620c:	cmp	r0, r1, lsl #26
   16210:	adc	r2, r2, r2
   16214:	subcs	r0, r0, r1, lsl #26
   16218:	cmp	r0, r1, lsl #25
   1621c:	adc	r2, r2, r2
   16220:	subcs	r0, r0, r1, lsl #25
   16224:	cmp	r0, r1, lsl #24
   16228:	adc	r2, r2, r2
   1622c:	subcs	r0, r0, r1, lsl #24
   16230:	cmp	r0, r1, lsl #23
   16234:	adc	r2, r2, r2
   16238:	subcs	r0, r0, r1, lsl #23
   1623c:	cmp	r0, r1, lsl #22
   16240:	adc	r2, r2, r2
   16244:	subcs	r0, r0, r1, lsl #22
   16248:	cmp	r0, r1, lsl #21
   1624c:	adc	r2, r2, r2
   16250:	subcs	r0, r0, r1, lsl #21
   16254:	cmp	r0, r1, lsl #20
   16258:	adc	r2, r2, r2
   1625c:	subcs	r0, r0, r1, lsl #20
   16260:	cmp	r0, r1, lsl #19
   16264:	adc	r2, r2, r2
   16268:	subcs	r0, r0, r1, lsl #19
   1626c:	cmp	r0, r1, lsl #18
   16270:	adc	r2, r2, r2
   16274:	subcs	r0, r0, r1, lsl #18
   16278:	cmp	r0, r1, lsl #17
   1627c:	adc	r2, r2, r2
   16280:	subcs	r0, r0, r1, lsl #17
   16284:	cmp	r0, r1, lsl #16
   16288:	adc	r2, r2, r2
   1628c:	subcs	r0, r0, r1, lsl #16
   16290:	cmp	r0, r1, lsl #15
   16294:	adc	r2, r2, r2
   16298:	subcs	r0, r0, r1, lsl #15
   1629c:	cmp	r0, r1, lsl #14
   162a0:	adc	r2, r2, r2
   162a4:	subcs	r0, r0, r1, lsl #14
   162a8:	cmp	r0, r1, lsl #13
   162ac:	adc	r2, r2, r2
   162b0:	subcs	r0, r0, r1, lsl #13
   162b4:	cmp	r0, r1, lsl #12
   162b8:	adc	r2, r2, r2
   162bc:	subcs	r0, r0, r1, lsl #12
   162c0:	cmp	r0, r1, lsl #11
   162c4:	adc	r2, r2, r2
   162c8:	subcs	r0, r0, r1, lsl #11
   162cc:	cmp	r0, r1, lsl #10
   162d0:	adc	r2, r2, r2
   162d4:	subcs	r0, r0, r1, lsl #10
   162d8:	cmp	r0, r1, lsl #9
   162dc:	adc	r2, r2, r2
   162e0:	subcs	r0, r0, r1, lsl #9
   162e4:	cmp	r0, r1, lsl #8
   162e8:	adc	r2, r2, r2
   162ec:	subcs	r0, r0, r1, lsl #8
   162f0:	cmp	r0, r1, lsl #7
   162f4:	adc	r2, r2, r2
   162f8:	subcs	r0, r0, r1, lsl #7
   162fc:	cmp	r0, r1, lsl #6
   16300:	adc	r2, r2, r2
   16304:	subcs	r0, r0, r1, lsl #6
   16308:	cmp	r0, r1, lsl #5
   1630c:	adc	r2, r2, r2
   16310:	subcs	r0, r0, r1, lsl #5
   16314:	cmp	r0, r1, lsl #4
   16318:	adc	r2, r2, r2
   1631c:	subcs	r0, r0, r1, lsl #4
   16320:	cmp	r0, r1, lsl #3
   16324:	adc	r2, r2, r2
   16328:	subcs	r0, r0, r1, lsl #3
   1632c:	cmp	r0, r1, lsl #2
   16330:	adc	r2, r2, r2
   16334:	subcs	r0, r0, r1, lsl #2
   16338:	cmp	r0, r1, lsl #1
   1633c:	adc	r2, r2, r2
   16340:	subcs	r0, r0, r1, lsl #1
   16344:	cmp	r0, r1
   16348:	adc	r2, r2, r2
   1634c:	subcs	r0, r0, r1
   16350:	mov	r0, r2
   16354:	bx	lr
   16358:	moveq	r0, #1
   1635c:	movne	r0, #0
   16360:	bx	lr
   16364:	clz	r2, r1
   16368:	rsb	r2, r2, #31
   1636c:	lsr	r0, r0, r2
   16370:	bx	lr
   16374:	cmp	r0, #0
   16378:	mvnne	r0, #0
   1637c:	b	165e0 <putchar_unlocked@plt+0x52a4>
   16380:	cmp	r1, #0
   16384:	beq	16374 <putchar_unlocked@plt+0x5038>
   16388:	push	{r0, r1, lr}
   1638c:	bl	16194 <putchar_unlocked@plt+0x4e58>
   16390:	pop	{r1, r2, lr}
   16394:	mul	r3, r2, r0
   16398:	sub	r1, r1, r3
   1639c:	bx	lr
   163a0:	cmp	r1, #0
   163a4:	beq	165b0 <putchar_unlocked@plt+0x5274>
   163a8:	eor	ip, r0, r1
   163ac:	rsbmi	r1, r1, #0
   163b0:	subs	r2, r1, #1
   163b4:	beq	1657c <putchar_unlocked@plt+0x5240>
   163b8:	movs	r3, r0
   163bc:	rsbmi	r3, r0, #0
   163c0:	cmp	r3, r1
   163c4:	bls	16588 <putchar_unlocked@plt+0x524c>
   163c8:	tst	r1, r2
   163cc:	beq	16598 <putchar_unlocked@plt+0x525c>
   163d0:	clz	r2, r3
   163d4:	clz	r0, r1
   163d8:	sub	r2, r0, r2
   163dc:	rsbs	r2, r2, #31
   163e0:	addne	r2, r2, r2, lsl #1
   163e4:	mov	r0, #0
   163e8:	addne	pc, pc, r2, lsl #2
   163ec:	nop			; (mov r0, r0)
   163f0:	cmp	r3, r1, lsl #31
   163f4:	adc	r0, r0, r0
   163f8:	subcs	r3, r3, r1, lsl #31
   163fc:	cmp	r3, r1, lsl #30
   16400:	adc	r0, r0, r0
   16404:	subcs	r3, r3, r1, lsl #30
   16408:	cmp	r3, r1, lsl #29
   1640c:	adc	r0, r0, r0
   16410:	subcs	r3, r3, r1, lsl #29
   16414:	cmp	r3, r1, lsl #28
   16418:	adc	r0, r0, r0
   1641c:	subcs	r3, r3, r1, lsl #28
   16420:	cmp	r3, r1, lsl #27
   16424:	adc	r0, r0, r0
   16428:	subcs	r3, r3, r1, lsl #27
   1642c:	cmp	r3, r1, lsl #26
   16430:	adc	r0, r0, r0
   16434:	subcs	r3, r3, r1, lsl #26
   16438:	cmp	r3, r1, lsl #25
   1643c:	adc	r0, r0, r0
   16440:	subcs	r3, r3, r1, lsl #25
   16444:	cmp	r3, r1, lsl #24
   16448:	adc	r0, r0, r0
   1644c:	subcs	r3, r3, r1, lsl #24
   16450:	cmp	r3, r1, lsl #23
   16454:	adc	r0, r0, r0
   16458:	subcs	r3, r3, r1, lsl #23
   1645c:	cmp	r3, r1, lsl #22
   16460:	adc	r0, r0, r0
   16464:	subcs	r3, r3, r1, lsl #22
   16468:	cmp	r3, r1, lsl #21
   1646c:	adc	r0, r0, r0
   16470:	subcs	r3, r3, r1, lsl #21
   16474:	cmp	r3, r1, lsl #20
   16478:	adc	r0, r0, r0
   1647c:	subcs	r3, r3, r1, lsl #20
   16480:	cmp	r3, r1, lsl #19
   16484:	adc	r0, r0, r0
   16488:	subcs	r3, r3, r1, lsl #19
   1648c:	cmp	r3, r1, lsl #18
   16490:	adc	r0, r0, r0
   16494:	subcs	r3, r3, r1, lsl #18
   16498:	cmp	r3, r1, lsl #17
   1649c:	adc	r0, r0, r0
   164a0:	subcs	r3, r3, r1, lsl #17
   164a4:	cmp	r3, r1, lsl #16
   164a8:	adc	r0, r0, r0
   164ac:	subcs	r3, r3, r1, lsl #16
   164b0:	cmp	r3, r1, lsl #15
   164b4:	adc	r0, r0, r0
   164b8:	subcs	r3, r3, r1, lsl #15
   164bc:	cmp	r3, r1, lsl #14
   164c0:	adc	r0, r0, r0
   164c4:	subcs	r3, r3, r1, lsl #14
   164c8:	cmp	r3, r1, lsl #13
   164cc:	adc	r0, r0, r0
   164d0:	subcs	r3, r3, r1, lsl #13
   164d4:	cmp	r3, r1, lsl #12
   164d8:	adc	r0, r0, r0
   164dc:	subcs	r3, r3, r1, lsl #12
   164e0:	cmp	r3, r1, lsl #11
   164e4:	adc	r0, r0, r0
   164e8:	subcs	r3, r3, r1, lsl #11
   164ec:	cmp	r3, r1, lsl #10
   164f0:	adc	r0, r0, r0
   164f4:	subcs	r3, r3, r1, lsl #10
   164f8:	cmp	r3, r1, lsl #9
   164fc:	adc	r0, r0, r0
   16500:	subcs	r3, r3, r1, lsl #9
   16504:	cmp	r3, r1, lsl #8
   16508:	adc	r0, r0, r0
   1650c:	subcs	r3, r3, r1, lsl #8
   16510:	cmp	r3, r1, lsl #7
   16514:	adc	r0, r0, r0
   16518:	subcs	r3, r3, r1, lsl #7
   1651c:	cmp	r3, r1, lsl #6
   16520:	adc	r0, r0, r0
   16524:	subcs	r3, r3, r1, lsl #6
   16528:	cmp	r3, r1, lsl #5
   1652c:	adc	r0, r0, r0
   16530:	subcs	r3, r3, r1, lsl #5
   16534:	cmp	r3, r1, lsl #4
   16538:	adc	r0, r0, r0
   1653c:	subcs	r3, r3, r1, lsl #4
   16540:	cmp	r3, r1, lsl #3
   16544:	adc	r0, r0, r0
   16548:	subcs	r3, r3, r1, lsl #3
   1654c:	cmp	r3, r1, lsl #2
   16550:	adc	r0, r0, r0
   16554:	subcs	r3, r3, r1, lsl #2
   16558:	cmp	r3, r1, lsl #1
   1655c:	adc	r0, r0, r0
   16560:	subcs	r3, r3, r1, lsl #1
   16564:	cmp	r3, r1
   16568:	adc	r0, r0, r0
   1656c:	subcs	r3, r3, r1
   16570:	cmp	ip, #0
   16574:	rsbmi	r0, r0, #0
   16578:	bx	lr
   1657c:	teq	ip, r0
   16580:	rsbmi	r0, r0, #0
   16584:	bx	lr
   16588:	movcc	r0, #0
   1658c:	asreq	r0, ip, #31
   16590:	orreq	r0, r0, #1
   16594:	bx	lr
   16598:	clz	r2, r1
   1659c:	rsb	r2, r2, #31
   165a0:	cmp	ip, #0
   165a4:	lsr	r0, r3, r2
   165a8:	rsbmi	r0, r0, #0
   165ac:	bx	lr
   165b0:	cmp	r0, #0
   165b4:	mvngt	r0, #-2147483648	; 0x80000000
   165b8:	movlt	r0, #-2147483648	; 0x80000000
   165bc:	b	165e0 <putchar_unlocked@plt+0x52a4>
   165c0:	cmp	r1, #0
   165c4:	beq	165b0 <putchar_unlocked@plt+0x5274>
   165c8:	push	{r0, r1, lr}
   165cc:	bl	163a8 <putchar_unlocked@plt+0x506c>
   165d0:	pop	{r1, r2, lr}
   165d4:	mul	r3, r2, r0
   165d8:	sub	r1, r1, r3
   165dc:	bx	lr
   165e0:	push	{r1, lr}
   165e4:	mov	r0, #8
   165e8:	bl	11000 <raise@plt>
   165ec:	pop	{r1, pc}
   165f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   165f4:	mov	r7, r0
   165f8:	ldr	r6, [pc, #72]	; 16648 <putchar_unlocked@plt+0x530c>
   165fc:	ldr	r5, [pc, #72]	; 1664c <putchar_unlocked@plt+0x5310>
   16600:	add	r6, pc, r6
   16604:	add	r5, pc, r5
   16608:	sub	r6, r6, r5
   1660c:	mov	r8, r1
   16610:	mov	r9, r2
   16614:	bl	10fc8 <calloc@plt-0x20>
   16618:	asrs	r6, r6, #2
   1661c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16620:	mov	r4, #0
   16624:	add	r4, r4, #1
   16628:	ldr	r3, [r5], #4
   1662c:	mov	r2, r9
   16630:	mov	r1, r8
   16634:	mov	r0, r7
   16638:	blx	r3
   1663c:	cmp	r6, r4
   16640:	bne	16624 <putchar_unlocked@plt+0x52e8>
   16644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16648:	andeq	r1, r1, r8, lsl #18
   1664c:	andeq	r1, r1, r0, lsl #18
   16650:	bx	lr
   16654:	ldr	r3, [pc, #12]	; 16668 <putchar_unlocked@plt+0x532c>
   16658:	mov	r1, #0
   1665c:	add	r3, pc, r3
   16660:	ldr	r2, [r3]
   16664:	b	11204 <__cxa_atexit@plt>
   16668:	ldrdeq	r1, [r1], -r0

Disassembly of section .fini:

0001666c <.fini>:
   1666c:	push	{r3, lr}
   16670:	pop	{r3, pc}
