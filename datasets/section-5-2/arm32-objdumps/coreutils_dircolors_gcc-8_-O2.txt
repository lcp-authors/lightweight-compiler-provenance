
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010d18 <.init>:
   10d18:	push	{r3, lr}
   10d1c:	bl	11484 <close@plt+0x4f4>
   10d20:	pop	{r3, pc}

Disassembly of section .plt:

00010d24 <calloc@plt-0x14>:
   10d24:	push	{lr}		; (str lr, [sp, #-4]!)
   10d28:	ldr	lr, [pc, #4]	; 10d34 <calloc@plt-0x4>
   10d2c:	add	lr, pc, lr
   10d30:	ldr	pc, [lr, #8]!
   10d34:	andeq	r7, r1, ip, asr #5

00010d38 <calloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #716]!	; 0x2cc

00010d44 <fputs_unlocked@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d50 <__getdelim@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #700]!	; 0x2bc

00010d5c <strcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #692]!	; 0x2b4

00010d68 <fflush@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #684]!	; 0x2ac

00010d74 <free@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d80 <_exit@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #668]!	; 0x29c

00010d8c <memcpy@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #660]!	; 0x294

00010d98 <mbsinit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #652]!	; 0x28c

00010da4 <fwrite_unlocked@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #644]!	; 0x284

00010db0 <memcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #636]!	; 0x27c

00010dbc <fputc_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #628]!	; 0x274

00010dc8 <dcgettext@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #620]!	; 0x26c

00010dd4 <dup2@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #612]!	; 0x264

00010de0 <realloc@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #604]!	; 0x25c

00010dec <textdomain@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #596]!	; 0x254

00010df8 <iswprint@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #588]!	; 0x24c

00010e04 <fwrite@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #580]!	; 0x244

00010e10 <lseek64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #572]!	; 0x23c

00010e1c <__ctype_get_mb_cur_max@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #564]!	; 0x234

00010e28 <__fpending@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #556]!	; 0x22c

00010e34 <mbrtowc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #548]!	; 0x224

00010e40 <error@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #540]!	; 0x21c

00010e4c <fnmatch@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #532]!	; 0x214

00010e58 <open64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #524]!	; 0x20c

00010e64 <getenv@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #516]!	; 0x204

00010e70 <puts@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #508]!	; 0x1fc

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #500]!	; 0x1f4

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #492]!	; 0x1ec

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00010ea0 <__gmon_start__@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00010eac <freopen64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ee8 <__errno_location@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ef4 <__cxa_atexit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #420]!	; 0x1a4

00010f00 <memset@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #412]!	; 0x19c

00010f0c <__printf_chk@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #404]!	; 0x194

00010f18 <fileno@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #396]!	; 0x18c

00010f24 <__fprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #388]!	; 0x184

00010f30 <fclose@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #380]!	; 0x17c

00010f3c <fseeko64@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #372]!	; 0x174

00010f48 <setlocale@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #364]!	; 0x16c

00010f54 <strrchr@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #356]!	; 0x164

00010f60 <nl_langinfo@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #348]!	; 0x15c

00010f6c <bindtextdomain@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #340]!	; 0x154

00010f78 <strncmp@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #332]!	; 0x14c

00010f84 <abort@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #324]!	; 0x144

00010f90 <close@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #316]!	; 0x13c

Disassembly of section .text:

00010f9c <_obstack_begin@@Base-0x183c>:
   10f9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10fa0:	mov	r5, #0
   10fa4:	movw	r4, #29492	; 0x7334
   10fa8:	movt	r4, #1
   10fac:	strd	r6, [sp, #8]
   10fb0:	mov	r6, r1
   10fb4:	strd	r8, [sp, #16]
   10fb8:	mov	r8, r0
   10fbc:	mov	r7, r5
   10fc0:	strd	sl, [sp, #24]
   10fc4:	mov	sl, #2
   10fc8:	str	lr, [sp, #32]
   10fcc:	sub	sp, sp, #12
   10fd0:	ldr	r0, [r1]
   10fd4:	bl	12a6c <_obstack_memory_used@@Base+0x34>
   10fd8:	movw	r1, #29416	; 0x72e8
   10fdc:	movt	r1, #1
   10fe0:	ldr	r9, [pc, #1116]	; 11444 <close@plt+0x4b4>
   10fe4:	mov	r0, #6
   10fe8:	bl	10f48 <setlocale@plt>
   10fec:	movw	r1, #29452	; 0x730c
   10ff0:	movt	r1, #1
   10ff4:	movw	r0, #29228	; 0x722c
   10ff8:	movt	r0, #1
   10ffc:	bl	10f6c <bindtextdomain@plt>
   11000:	movw	r0, #29228	; 0x722c
   11004:	movt	r0, #1
   11008:	bl	10dec <textdomain@plt>
   1100c:	movw	r0, #8544	; 0x2160
   11010:	movt	r0, #1
   11014:	bl	15bc8 <_obstack_memory_used@@Base+0x3190>
   11018:	mov	r3, r9
   1101c:	mov	r2, r4
   11020:	str	r7, [sp]
   11024:	mov	r1, r6
   11028:	mov	r0, r8
   1102c:	bl	10eb8 <getopt_long@plt>
   11030:	cmn	r0, #1
   11034:	beq	110c4 <close@plt+0x134>
   11038:	cmp	r0, #98	; 0x62
   1103c:	beq	110bc <close@plt+0x12c>
   11040:	ble	11054 <close@plt+0xc4>
   11044:	cmp	r0, #99	; 0x63
   11048:	bne	1109c <close@plt+0x10c>
   1104c:	mov	sl, #1
   11050:	b	11018 <close@plt+0x88>
   11054:	cmn	r0, #3
   11058:	bne	110ac <close@plt+0x11c>
   1105c:	movw	r2, #29476	; 0x7324
   11060:	movt	r2, #1
   11064:	movw	r3, #32996	; 0x80e4
   11068:	movt	r3, #2
   1106c:	movw	r0, #33100	; 0x814c
   11070:	movt	r0, #2
   11074:	stm	sp, {r2, r7}
   11078:	movw	r1, #28472	; 0x6f38
   1107c:	movt	r1, #1
   11080:	ldr	r0, [r0]
   11084:	movw	r2, #29224	; 0x7228
   11088:	movt	r2, #1
   1108c:	ldr	r3, [r3]
   11090:	bl	151f8 <_obstack_memory_used@@Base+0x27c0>
   11094:	mov	r0, #0
   11098:	bl	10ed0 <exit@plt>
   1109c:	cmp	r0, #112	; 0x70
   110a0:	bne	113d0 <close@plt+0x440>
   110a4:	mov	r5, #1
   110a8:	b	11018 <close@plt+0x88>
   110ac:	cmn	r0, #2
   110b0:	bne	113d0 <close@plt+0x440>
   110b4:	mov	r0, #0
   110b8:	bl	11cd8 <close@plt+0xd48>
   110bc:	mov	sl, #0
   110c0:	b	11018 <close@plt+0x88>
   110c4:	movw	r3, #33080	; 0x8138
   110c8:	movt	r3, #2
   110cc:	ldr	r4, [r3]
   110d0:	cmp	sl, #2
   110d4:	moveq	r9, #0
   110d8:	andne	r9, r5, #1
   110dc:	cmp	r9, #0
   110e0:	sub	r8, r8, r4
   110e4:	add	fp, r6, r4, lsl #2
   110e8:	bne	113d8 <close@plt+0x448>
   110ec:	eor	r7, r5, #1
   110f0:	uxtb	r3, r7
   110f4:	cmp	r3, r8
   110f8:	blt	1135c <close@plt+0x3cc>
   110fc:	cmp	r5, #0
   11100:	beq	11158 <close@plt+0x1c8>
   11104:	movw	r5, #24020	; 0x5dd4
   11108:	movt	r5, #1
   1110c:	mov	r4, r5
   11110:	movw	r6, #4309	; 0x10d5
   11114:	mov	r0, r4
   11118:	bl	10e70 <puts@plt>
   1111c:	mov	r0, r4
   11120:	bl	10edc <strlen@plt>
   11124:	add	r0, r0, #1
   11128:	add	r4, r4, r0
   1112c:	sub	r3, r4, r5
   11130:	cmp	r3, r6
   11134:	bls	11114 <close@plt+0x184>
   11138:	uxtb	r0, r7
   1113c:	add	sp, sp, #12
   11140:	ldrd	r4, [sp]
   11144:	ldrd	r6, [sp, #8]
   11148:	ldrd	r8, [sp, #16]
   1114c:	ldrd	sl, [sp, #24]
   11150:	add	sp, sp, #32
   11154:	pop	{pc}		; (ldr pc, [sp], #4)
   11158:	cmp	sl, #2
   1115c:	beq	112bc <close@plt+0x32c>
   11160:	movw	r0, #9056	; 0x2360
   11164:	movt	r0, #1
   11168:	mov	r2, #0
   1116c:	movw	r3, #22584	; 0x5838
   11170:	movt	r3, #1
   11174:	mov	r1, r2
   11178:	str	r0, [sp]
   1117c:	movw	r0, #33108	; 0x8154
   11180:	movt	r0, #2
   11184:	bl	127d8 <_obstack_begin@@Base>
   11188:	cmp	r8, #0
   1118c:	beq	112a8 <close@plt+0x318>
   11190:	ldr	r6, [r6, r4, lsl #2]
   11194:	movw	r1, #29704	; 0x7408
   11198:	movt	r1, #1
   1119c:	movw	r4, #33096	; 0x8148
   111a0:	movt	r4, #2
   111a4:	mov	r0, r6
   111a8:	bl	10d5c <strcmp@plt>
   111ac:	cmp	r0, #0
   111b0:	beq	111d0 <close@plt+0x240>
   111b4:	movw	r1, #29708	; 0x740c
   111b8:	movt	r1, #1
   111bc:	ldr	r2, [r4]
   111c0:	mov	r0, r6
   111c4:	bl	1242c <close@plt+0x149c>
   111c8:	subs	r5, r0, #0
   111cc:	beq	11328 <close@plt+0x398>
   111d0:	mov	r1, r6
   111d4:	ldr	r0, [r4]
   111d8:	bl	116dc <close@plt+0x74c>
   111dc:	mov	r5, r0
   111e0:	ldr	r0, [r4]
   111e4:	bl	1224c <close@plt+0x12bc>
   111e8:	cmp	r0, #0
   111ec:	bne	11328 <close@plt+0x398>
   111f0:	cmp	r5, #0
   111f4:	moveq	r7, #1
   111f8:	beq	11138 <close@plt+0x1a8>
   111fc:	movw	ip, #33108	; 0x8154
   11200:	movt	ip, #2
   11204:	ldr	r4, [ip, #8]
   11208:	ldr	r3, [ip, #12]
   1120c:	cmp	r3, r4
   11210:	sub	r6, r3, r4
   11214:	beq	11318 <close@plt+0x388>
   11218:	ldr	r2, [ip, #4]
   1121c:	eor	r7, r5, #1
   11220:	movw	r0, #29420	; 0x72ec
   11224:	movt	r0, #1
   11228:	movw	r8, #29392	; 0x72d0
   1122c:	movt	r8, #1
   11230:	ldr	r1, [ip, #24]
   11234:	ldr	lr, [ip, #16]
   11238:	add	r3, r3, r1
   1123c:	bic	r3, r3, r1
   11240:	movw	r1, #29432	; 0x72f8
   11244:	movt	r1, #1
   11248:	sub	r5, r3, r2
   1124c:	sub	r2, lr, r2
   11250:	cmp	r5, r2
   11254:	movw	r5, #33100	; 0x814c
   11258:	movt	r5, #2
   1125c:	movhi	r3, lr
   11260:	cmp	sl, #0
   11264:	movw	r2, #29396	; 0x72d4
   11268:	movt	r2, #1
   1126c:	movne	r0, r1
   11270:	ldr	r1, [r5]
   11274:	moveq	r8, r2
   11278:	str	r3, [ip, #8]
   1127c:	str	r3, [ip, #12]
   11280:	bl	10d44 <fputs_unlocked@plt>
   11284:	mov	r2, r6
   11288:	mov	r0, r4
   1128c:	ldr	r3, [r5]
   11290:	mov	r1, #1
   11294:	bl	10da4 <fwrite_unlocked@plt>
   11298:	mov	r0, r8
   1129c:	ldr	r1, [r5]
   112a0:	bl	10d44 <fputs_unlocked@plt>
   112a4:	b	11138 <close@plt+0x1a8>
   112a8:	mov	r1, r8
   112ac:	mov	r0, r8
   112b0:	bl	116dc <close@plt+0x74c>
   112b4:	mov	r5, r0
   112b8:	b	111f0 <close@plt+0x260>
   112bc:	movw	r0, #29620	; 0x73b4
   112c0:	movt	r0, #1
   112c4:	bl	10e64 <getenv@plt>
   112c8:	subs	r3, r0, #0
   112cc:	beq	11400 <close@plt+0x470>
   112d0:	ldrb	r3, [r3]
   112d4:	cmp	r3, #0
   112d8:	beq	11400 <close@plt+0x470>
   112dc:	bl	1200c <close@plt+0x107c>
   112e0:	movw	r1, #29628	; 0x73bc
   112e4:	movt	r1, #1
   112e8:	mov	r5, r0
   112ec:	bl	10d5c <strcmp@plt>
   112f0:	cmp	r0, #0
   112f4:	moveq	sl, #1
   112f8:	beq	11160 <close@plt+0x1d0>
   112fc:	mov	r0, r5
   11300:	movw	r1, #29632	; 0x73c0
   11304:	movt	r1, #1
   11308:	bl	10d5c <strcmp@plt>
   1130c:	clz	sl, r0
   11310:	lsr	sl, sl, #5
   11314:	b	11160 <close@plt+0x1d0>
   11318:	ldrb	r2, [ip, #40]	; 0x28
   1131c:	orr	r2, r2, #2
   11320:	strb	r2, [ip, #40]	; 0x28
   11324:	b	11218 <close@plt+0x288>
   11328:	bl	10ee8 <__errno_location@plt>
   1132c:	ldr	r4, [r0]
   11330:	mov	r2, r6
   11334:	mov	r1, #3
   11338:	mov	r0, #0
   1133c:	bl	14b84 <_obstack_memory_used@@Base+0x214c>
   11340:	mov	r3, r0
   11344:	movw	r2, #30376	; 0x76a8
   11348:	movt	r2, #1
   1134c:	mov	r0, #0
   11350:	mov	r1, r4
   11354:	bl	10e40 <error@plt>
   11358:	b	11138 <close@plt+0x1a8>
   1135c:	movw	r1, #29600	; 0x73a0
   11360:	movt	r1, #1
   11364:	mov	r2, #5
   11368:	mov	r0, r9
   1136c:	bl	10dc8 <dcgettext@plt>
   11370:	cmp	r5, #0
   11374:	mov	r7, r0
   11378:	beq	11424 <close@plt+0x494>
   1137c:	ldr	r0, [r6, r4, lsl #2]
   11380:	bl	14d5c <_obstack_memory_used@@Base+0x2324>
   11384:	mov	r3, r0
   11388:	mov	r2, r7
   1138c:	mov	r1, r9
   11390:	mov	r0, r9
   11394:	bl	10e40 <error@plt>
   11398:	movw	r3, #33088	; 0x8140
   1139c:	movt	r3, #2
   113a0:	ldr	r4, [r3]
   113a4:	mov	r2, #5
   113a8:	mov	r0, r9
   113ac:	movw	r1, #29712	; 0x7410
   113b0:	movt	r1, #1
   113b4:	bl	10dc8 <dcgettext@plt>
   113b8:	mov	r3, r0
   113bc:	movw	r2, #30704	; 0x77f0
   113c0:	movt	r2, #1
   113c4:	mov	r1, #1
   113c8:	mov	r0, r4
   113cc:	bl	10f24 <__fprintf_chk@plt>
   113d0:	mov	r0, #1
   113d4:	bl	11cd8 <close@plt+0xd48>
   113d8:	mov	r2, #5
   113dc:	movw	r1, #29496	; 0x7338
   113e0:	movt	r1, #1
   113e4:	mov	r0, #0
   113e8:	bl	10dc8 <dcgettext@plt>
   113ec:	mov	r1, #0
   113f0:	mov	r2, r0
   113f4:	mov	r0, r1
   113f8:	bl	10e40 <error@plt>
   113fc:	b	113d0 <close@plt+0x440>
   11400:	mov	r2, #5
   11404:	movw	r1, #29640	; 0x73c8
   11408:	movt	r1, #1
   1140c:	mov	r0, #0
   11410:	bl	10dc8 <dcgettext@plt>
   11414:	mov	r2, r0
   11418:	mov	r1, #0
   1141c:	mov	r0, #1
   11420:	bl	10e40 <error@plt>
   11424:	ldr	r0, [fp, #4]
   11428:	bl	14d5c <_obstack_memory_used@@Base+0x2324>
   1142c:	mov	r3, r0
   11430:	mov	r2, r7
   11434:	mov	r1, r5
   11438:	mov	r0, r5
   1143c:	bl	10e40 <error@plt>
   11440:	b	113d0 <close@plt+0x440>
   11444:	andeq	r5, r1, r4, asr sp
   11448:	mov	fp, #0
   1144c:	mov	lr, #0
   11450:	pop	{r1}		; (ldr r1, [sp], #4)
   11454:	mov	r2, sp
   11458:	push	{r2}		; (str r2, [sp, #-4]!)
   1145c:	push	{r0}		; (str r0, [sp, #-4]!)
   11460:	ldr	ip, [pc, #16]	; 11478 <close@plt+0x4e8>
   11464:	push	{ip}		; (str ip, [sp, #-4]!)
   11468:	ldr	r0, [pc, #12]	; 1147c <close@plt+0x4ec>
   1146c:	ldr	r3, [pc, #12]	; 11480 <close@plt+0x4f0>
   11470:	bl	10e88 <__libc_start_main@plt>
   11474:	bl	10f84 <abort@plt>
   11478:	andeq	r5, r1, r4, asr #23
   1147c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11480:	andeq	r5, r1, r4, ror #22
   11484:	ldr	r3, [pc, #20]	; 114a0 <close@plt+0x510>
   11488:	ldr	r2, [pc, #20]	; 114a4 <close@plt+0x514>
   1148c:	add	r3, pc, r3
   11490:	ldr	r2, [r3, r2]
   11494:	cmp	r2, #0
   11498:	bxeq	lr
   1149c:	b	10ea0 <__gmon_start__@plt>
   114a0:	andeq	r6, r1, ip, ror #22
   114a4:	ldrdeq	r0, [r0], -r8
   114a8:	ldr	r0, [pc, #24]	; 114c8 <close@plt+0x538>
   114ac:	ldr	r3, [pc, #24]	; 114cc <close@plt+0x53c>
   114b0:	cmp	r3, r0
   114b4:	bxeq	lr
   114b8:	ldr	r3, [pc, #16]	; 114d0 <close@plt+0x540>
   114bc:	cmp	r3, #0
   114c0:	bxeq	lr
   114c4:	bx	r3
   114c8:	andeq	r8, r2, r0, lsr r1
   114cc:	andeq	r8, r2, r0, lsr r1
   114d0:	andeq	r0, r0, r0
   114d4:	ldr	r0, [pc, #36]	; 11500 <close@plt+0x570>
   114d8:	ldr	r1, [pc, #36]	; 11504 <close@plt+0x574>
   114dc:	sub	r1, r1, r0
   114e0:	asr	r1, r1, #2
   114e4:	add	r1, r1, r1, lsr #31
   114e8:	asrs	r1, r1, #1
   114ec:	bxeq	lr
   114f0:	ldr	r3, [pc, #16]	; 11508 <close@plt+0x578>
   114f4:	cmp	r3, #0
   114f8:	bxeq	lr
   114fc:	bx	r3
   11500:	andeq	r8, r2, r0, lsr r1
   11504:	andeq	r8, r2, r0, lsr r1
   11508:	andeq	r0, r0, r0
   1150c:	push	{r4, lr}
   11510:	ldr	r4, [pc, #24]	; 11530 <close@plt+0x5a0>
   11514:	ldrb	r3, [r4]
   11518:	cmp	r3, #0
   1151c:	popne	{r4, pc}
   11520:	bl	114a8 <close@plt+0x518>
   11524:	mov	r3, #1
   11528:	strb	r3, [r4]
   1152c:	pop	{r4, pc}
   11530:	andeq	r8, r2, r0, asr r1
   11534:	b	114d4 <close@plt+0x544>
   11538:	ldrb	r3, [r0]
   1153c:	cmp	r3, #0
   11540:	bxeq	lr
   11544:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11548:	movw	r4, #33108	; 0x8154
   1154c:	movt	r4, #2
   11550:	mov	r5, r0
   11554:	strd	r6, [sp, #8]
   11558:	mov	r6, #1
   1155c:	mov	r7, #92	; 0x5c
   11560:	str	r8, [sp, #16]
   11564:	mov	r8, r4
   11568:	str	lr, [sp, #20]
   1156c:	b	115f4 <close@plt+0x664>
   11570:	cmp	r1, r2
   11574:	beq	1168c <close@plt+0x6fc>
   11578:	add	r1, r2, #1
   1157c:	mov	r3, #39	; 0x27
   11580:	str	r1, [r4, #12]
   11584:	strb	r3, [r2]
   11588:	ldr	r3, [r4, #12]
   1158c:	ldr	r2, [r4, #16]
   11590:	cmp	r2, r3
   11594:	beq	116b4 <close@plt+0x724>
   11598:	add	r2, r3, #1
   1159c:	str	r2, [r4, #12]
   115a0:	strb	r7, [r3]
   115a4:	ldr	r3, [r4, #12]
   115a8:	ldr	r2, [r4, #16]
   115ac:	cmp	r2, r3
   115b0:	beq	116a0 <close@plt+0x710>
   115b4:	add	r1, r3, #1
   115b8:	mov	r2, #39	; 0x27
   115bc:	mov	r6, #1
   115c0:	str	r1, [r4, #12]
   115c4:	strb	r2, [r3]
   115c8:	ldr	r2, [r4, #12]
   115cc:	ldr	r1, [r4, #16]
   115d0:	cmp	r1, r2
   115d4:	beq	11644 <close@plt+0x6b4>
   115d8:	add	r3, r2, #1
   115dc:	str	r3, [r4, #12]
   115e0:	ldrb	r3, [r5]
   115e4:	strb	r3, [r2]
   115e8:	ldrb	r3, [r5, #1]!
   115ec:	cmp	r3, #0
   115f0:	beq	11678 <close@plt+0x6e8>
   115f4:	cmp	r3, #61	; 0x3d
   115f8:	ldr	r2, [r4, #12]
   115fc:	ldr	r1, [r4, #16]
   11600:	beq	11618 <close@plt+0x688>
   11604:	bhi	11660 <close@plt+0x6d0>
   11608:	cmp	r3, #39	; 0x27
   1160c:	beq	11570 <close@plt+0x5e0>
   11610:	cmp	r3, #58	; 0x3a
   11614:	bne	11658 <close@plt+0x6c8>
   11618:	cmp	r6, #0
   1161c:	beq	11658 <close@plt+0x6c8>
   11620:	cmp	r1, r2
   11624:	beq	116c8 <close@plt+0x738>
   11628:	add	r3, r2, #1
   1162c:	str	r3, [r4, #12]
   11630:	strb	r7, [r2]
   11634:	ldr	r2, [r4, #12]
   11638:	ldr	r1, [r4, #16]
   1163c:	cmp	r1, r2
   11640:	bne	115d8 <close@plt+0x648>
   11644:	mov	r1, #1
   11648:	mov	r0, r8
   1164c:	bl	12840 <_obstack_newchunk@@Base>
   11650:	ldr	r2, [r4, #12]
   11654:	b	115d8 <close@plt+0x648>
   11658:	mov	r6, #1
   1165c:	b	115d0 <close@plt+0x640>
   11660:	cmp	r3, #92	; 0x5c
   11664:	beq	11670 <close@plt+0x6e0>
   11668:	cmp	r3, #94	; 0x5e
   1166c:	bne	11658 <close@plt+0x6c8>
   11670:	eor	r6, r6, #1
   11674:	b	115d0 <close@plt+0x640>
   11678:	ldrd	r4, [sp]
   1167c:	ldrd	r6, [sp, #8]
   11680:	ldr	r8, [sp, #16]
   11684:	add	sp, sp, #20
   11688:	pop	{pc}		; (ldr pc, [sp], #4)
   1168c:	mov	r1, #1
   11690:	mov	r0, r8
   11694:	bl	12840 <_obstack_newchunk@@Base>
   11698:	ldr	r2, [r4, #12]
   1169c:	b	11578 <close@plt+0x5e8>
   116a0:	mov	r1, #1
   116a4:	mov	r0, r8
   116a8:	bl	12840 <_obstack_newchunk@@Base>
   116ac:	ldr	r3, [r4, #12]
   116b0:	b	115b4 <close@plt+0x624>
   116b4:	mov	r1, #1
   116b8:	mov	r0, r8
   116bc:	bl	12840 <_obstack_newchunk@@Base>
   116c0:	ldr	r3, [r4, #12]
   116c4:	b	11598 <close@plt+0x608>
   116c8:	mov	r1, #1
   116cc:	mov	r0, r8
   116d0:	bl	12840 <_obstack_newchunk@@Base>
   116d4:	ldr	r2, [r4, #12]
   116d8:	b	11628 <close@plt+0x698>
   116dc:	mov	r3, #0
   116e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   116e4:	strd	r6, [sp, #8]
   116e8:	strd	r8, [sp, #16]
   116ec:	mov	r8, r0
   116f0:	movw	r0, #28348	; 0x6ebc
   116f4:	movt	r0, #1
   116f8:	strd	sl, [sp, #24]
   116fc:	str	lr, [sp, #32]
   11700:	sub	sp, sp, #44	; 0x2c
   11704:	str	r1, [sp, #16]
   11708:	str	r3, [sp, #32]
   1170c:	str	r3, [sp, #36]	; 0x24
   11710:	bl	10e64 <getenv@plt>
   11714:	subs	r1, r0, #0
   11718:	beq	11b14 <close@plt+0xb84>
   1171c:	ldrb	r2, [r1]
   11720:	movw	r3, #28332	; 0x6eac
   11724:	movt	r3, #1
   11728:	cmp	r2, #0
   1172c:	moveq	r1, r3
   11730:	str	r1, [sp, #8]
   11734:	movw	r3, #28356	; 0x6ec4
   11738:	movt	r3, #1
   1173c:	movw	r5, #24020	; 0x5dd4
   11740:	movt	r5, #1
   11744:	movw	fp, #28348	; 0x6ebc
   11748:	movt	fp, #1
   1174c:	str	r3, [sp, #20]
   11750:	mov	r9, #3
   11754:	mov	r3, #1
   11758:	mov	r6, #0
   1175c:	str	r3, [sp, #12]
   11760:	cmp	r8, #0
   11764:	add	r6, r6, #1
   11768:	beq	11908 <close@plt+0x978>
   1176c:	mov	r3, r8
   11770:	mov	r2, #10
   11774:	add	r1, sp, #36	; 0x24
   11778:	add	r0, sp, #32
   1177c:	bl	10d50 <__getdelim@plt>
   11780:	cmp	r0, #0
   11784:	ble	11a44 <close@plt+0xab4>
   11788:	ldr	r4, [sp, #32]
   1178c:	bl	10ec4 <__ctype_b_loc@plt>
   11790:	ldr	r1, [r0]
   11794:	mov	sl, r0
   11798:	mov	r3, r4
   1179c:	mov	r0, r3
   117a0:	add	r3, r3, #1
   117a4:	ldrb	r2, [r3, #-1]
   117a8:	lsl	ip, r2, #1
   117ac:	ldrh	ip, [r1, ip]
   117b0:	tst	ip, #8192	; 0x2000
   117b4:	bne	1179c <close@plt+0x80c>
   117b8:	cmp	r2, #35	; 0x23
   117bc:	cmpne	r2, #0
   117c0:	beq	11760 <close@plt+0x7d0>
   117c4:	mov	r7, r0
   117c8:	ldrb	r3, [r7, #1]!
   117cc:	lsl	r2, r3, #1
   117d0:	adds	r3, r3, #0
   117d4:	movne	r3, #1
   117d8:	ldrh	r2, [r1, r2]
   117dc:	eor	r2, r2, #8192	; 0x2000
   117e0:	ands	r3, r3, r2, lsr #13
   117e4:	bne	117c8 <close@plt+0x838>
   117e8:	sub	r1, r7, r0
   117ec:	bl	15708 <_obstack_memory_used@@Base+0x2cd0>
   117f0:	ldrb	r3, [r7]
   117f4:	mov	r4, r0
   117f8:	cmp	r3, #0
   117fc:	beq	119f8 <close@plt+0xa68>
   11800:	ldr	r0, [sl]
   11804:	ldrb	r3, [r7, #1]!
   11808:	lsl	r2, r3, #1
   1180c:	ldrh	r2, [r0, r2]
   11810:	tst	r2, #8192	; 0x2000
   11814:	bne	11804 <close@plt+0x874>
   11818:	cmp	r3, #35	; 0x23
   1181c:	cmpne	r3, #0
   11820:	movne	r3, r7
   11824:	bne	11830 <close@plt+0x8a0>
   11828:	b	119f8 <close@plt+0xa68>
   1182c:	mov	r3, r1
   11830:	ldrb	r2, [r3, #1]
   11834:	add	r1, r3, #1
   11838:	cmp	r2, #0
   1183c:	cmpne	r2, #35	; 0x23
   11840:	bne	1182c <close@plt+0x89c>
   11844:	ldrb	r2, [r1, #-1]
   11848:	lsl	r2, r2, #1
   1184c:	ldrh	r2, [r0, r2]
   11850:	tst	r2, #8192	; 0x2000
   11854:	movne	r1, r3
   11858:	bne	11930 <close@plt+0x9a0>
   1185c:	sub	r1, r1, r7
   11860:	mov	r0, r7
   11864:	bl	15708 <_obstack_memory_used@@Base+0x2cd0>
   11868:	mov	r7, r0
   1186c:	mov	r1, fp
   11870:	mov	r0, r4
   11874:	bl	120c4 <close@plt+0x1134>
   11878:	subs	r2, r0, #0
   1187c:	beq	1194c <close@plt+0x9bc>
   11880:	cmp	r9, #2
   11884:	beq	1196c <close@plt+0x9dc>
   11888:	cmp	r9, #0
   1188c:	beq	118ec <close@plt+0x95c>
   11890:	ldrb	r3, [r4]
   11894:	cmp	r3, #46	; 0x2e
   11898:	beq	1197c <close@plt+0x9ec>
   1189c:	cmp	r3, #42	; 0x2a
   118a0:	beq	11a6c <close@plt+0xadc>
   118a4:	movw	r1, #28400	; 0x6ef0
   118a8:	movt	r1, #1
   118ac:	mov	r0, r4
   118b0:	bl	120c4 <close@plt+0x1134>
   118b4:	cmp	r0, #0
   118b8:	beq	118ec <close@plt+0x95c>
   118bc:	movw	r1, #28408	; 0x6ef8
   118c0:	movt	r1, #1
   118c4:	mov	r0, r4
   118c8:	bl	120c4 <close@plt+0x1134>
   118cc:	cmp	r0, #0
   118d0:	beq	118ec <close@plt+0x95c>
   118d4:	movw	r1, #28416	; 0x6f00
   118d8:	movt	r1, #1
   118dc:	mov	r0, r4
   118e0:	bl	120c4 <close@plt+0x1134>
   118e4:	cmp	r0, #0
   118e8:	bne	11b24 <close@plt+0xb94>
   118ec:	mov	r0, r4
   118f0:	add	r6, r6, #1
   118f4:	bl	12360 <close@plt+0x13d0>
   118f8:	mov	r0, r7
   118fc:	bl	12360 <close@plt+0x13d0>
   11900:	cmp	r8, #0
   11904:	bne	1176c <close@plt+0x7dc>
   11908:	ldr	r3, [pc, #964]	; 11cd4 <close@plt+0xd44>
   1190c:	cmp	r5, r3
   11910:	beq	11a4c <close@plt+0xabc>
   11914:	mov	r0, r5
   11918:	mov	r4, r5
   1191c:	bl	10edc <strlen@plt>
   11920:	add	r0, r0, #1
   11924:	add	r5, r5, r0
   11928:	b	1178c <close@plt+0x7fc>
   1192c:	mov	r1, r2
   11930:	ldrb	r3, [r1, #-1]
   11934:	sub	r2, r1, #1
   11938:	lsl	r3, r3, #1
   1193c:	ldrh	r3, [r0, r3]
   11940:	tst	r3, #8192	; 0x2000
   11944:	beq	1185c <close@plt+0x8cc>
   11948:	b	1192c <close@plt+0x99c>
   1194c:	mov	r0, r7
   11950:	ldr	r1, [sp, #8]
   11954:	bl	10e4c <fnmatch@plt>
   11958:	cmp	r0, #0
   1195c:	cmpne	r9, #2
   11960:	movne	r9, #0
   11964:	moveq	r9, #2
   11968:	b	118ec <close@plt+0x95c>
   1196c:	ldrb	r3, [r4]
   11970:	mov	r9, #1
   11974:	cmp	r3, #46	; 0x2e
   11978:	bne	1189c <close@plt+0x90c>
   1197c:	movw	sl, #33108	; 0x8154
   11980:	movt	sl, #2
   11984:	ldr	r2, [sl, #12]
   11988:	ldr	r1, [sl, #16]
   1198c:	cmp	r1, r2
   11990:	beq	11ad0 <close@plt+0xb40>
   11994:	add	r0, r2, #1
   11998:	mov	r1, #42	; 0x2a
   1199c:	str	r0, [sl, #12]
   119a0:	mov	r0, r4
   119a4:	strb	r1, [r2]
   119a8:	bl	11538 <close@plt+0x5a8>
   119ac:	ldr	r2, [sl, #12]
   119b0:	ldr	r1, [sl, #16]
   119b4:	cmp	r1, r2
   119b8:	beq	11afc <close@plt+0xb6c>
   119bc:	add	r0, r2, #1
   119c0:	mov	r1, #61	; 0x3d
   119c4:	str	r0, [sl, #12]
   119c8:	mov	r0, r7
   119cc:	strb	r1, [r2]
   119d0:	bl	11538 <close@plt+0x5a8>
   119d4:	ldr	r2, [sl, #12]
   119d8:	ldr	r1, [sl, #16]
   119dc:	cmp	r1, r2
   119e0:	beq	11ae4 <close@plt+0xb54>
   119e4:	add	r0, r2, #1
   119e8:	mov	r1, #58	; 0x3a
   119ec:	str	r0, [sl, #12]
   119f0:	strb	r1, [r2]
   119f4:	b	118ec <close@plt+0x95c>
   119f8:	mov	r0, #0
   119fc:	mov	r2, #5
   11a00:	ldr	r1, [sp, #20]
   11a04:	str	r0, [sp, #12]
   11a08:	bl	10dc8 <dcgettext@plt>
   11a0c:	mov	r7, r0
   11a10:	mov	r1, #3
   11a14:	ldr	r2, [sp, #16]
   11a18:	mov	r0, #0
   11a1c:	bl	14b84 <_obstack_memory_used@@Base+0x214c>
   11a20:	mov	r1, #0
   11a24:	mov	r3, r0
   11a28:	str	r6, [sp]
   11a2c:	mov	r0, r1
   11a30:	mov	r2, r7
   11a34:	bl	10e40 <error@plt>
   11a38:	mov	r0, r4
   11a3c:	bl	12360 <close@plt+0x13d0>
   11a40:	b	11760 <close@plt+0x7d0>
   11a44:	ldr	r0, [sp, #32]
   11a48:	bl	12360 <close@plt+0x13d0>
   11a4c:	ldr	r0, [sp, #12]
   11a50:	add	sp, sp, #44	; 0x2c
   11a54:	ldrd	r4, [sp]
   11a58:	ldrd	r6, [sp, #8]
   11a5c:	ldrd	r8, [sp, #16]
   11a60:	ldrd	sl, [sp, #24]
   11a64:	add	sp, sp, #32
   11a68:	pop	{pc}		; (ldr pc, [sp], #4)
   11a6c:	mov	r0, r4
   11a70:	movw	sl, #33108	; 0x8154
   11a74:	movt	sl, #2
   11a78:	bl	11538 <close@plt+0x5a8>
   11a7c:	ldr	r2, [sl, #12]
   11a80:	ldr	r1, [sl, #16]
   11a84:	cmp	r1, r2
   11a88:	beq	11c10 <close@plt+0xc80>
   11a8c:	ldr	r2, [sl, #12]
   11a90:	mov	r1, #61	; 0x3d
   11a94:	mov	r0, r7
   11a98:	add	ip, r2, #1
   11a9c:	str	ip, [sl, #12]
   11aa0:	strb	r1, [r2]
   11aa4:	bl	11538 <close@plt+0x5a8>
   11aa8:	ldr	r2, [sl, #12]
   11aac:	ldr	r1, [sl, #16]
   11ab0:	cmp	r1, r2
   11ab4:	beq	11bfc <close@plt+0xc6c>
   11ab8:	ldr	r2, [sl, #12]
   11abc:	mov	r1, #58	; 0x3a
   11ac0:	add	r0, r2, #1
   11ac4:	str	r0, [sl, #12]
   11ac8:	strb	r1, [r2]
   11acc:	b	118ec <close@plt+0x95c>
   11ad0:	mov	r1, #1
   11ad4:	mov	r0, sl
   11ad8:	bl	12840 <_obstack_newchunk@@Base>
   11adc:	ldr	r2, [sl, #12]
   11ae0:	b	11994 <close@plt+0xa04>
   11ae4:	movw	r0, #33108	; 0x8154
   11ae8:	movt	r0, #2
   11aec:	mov	r1, #1
   11af0:	bl	12840 <_obstack_newchunk@@Base>
   11af4:	ldr	r2, [sl, #12]
   11af8:	b	119e4 <close@plt+0xa54>
   11afc:	movw	r0, #33108	; 0x8154
   11b00:	movt	r0, #2
   11b04:	mov	r1, #1
   11b08:	bl	12840 <_obstack_newchunk@@Base>
   11b0c:	ldr	r2, [sl, #12]
   11b10:	b	119bc <close@plt+0xa2c>
   11b14:	movw	r3, #28332	; 0x6eac
   11b18:	movt	r3, #1
   11b1c:	str	r3, [sp, #8]
   11b20:	b	11734 <close@plt+0x7a4>
   11b24:	movw	r3, #23532	; 0x5bec
   11b28:	movt	r3, #1
   11b2c:	str	r5, [sp, #24]
   11b30:	mov	sl, r3
   11b34:	mov	r2, #0
   11b38:	str	r3, [sp, #28]
   11b3c:	movw	r3, #28340	; 0x6eb4
   11b40:	movt	r3, #1
   11b44:	mov	r5, sl
   11b48:	mov	r1, r3
   11b4c:	mov	sl, r2
   11b50:	b	11b64 <close@plt+0xbd4>
   11b54:	ldr	r1, [r5, #4]!
   11b58:	add	sl, sl, #1
   11b5c:	cmp	r1, #0
   11b60:	beq	11c20 <close@plt+0xc90>
   11b64:	mov	r0, r4
   11b68:	bl	120c4 <close@plt+0x1134>
   11b6c:	cmp	r0, #0
   11b70:	bne	11b54 <close@plt+0xbc4>
   11b74:	ldr	r5, [sp, #24]
   11b78:	str	sl, [sp, #24]
   11b7c:	movw	sl, #33108	; 0x8154
   11b80:	movt	sl, #2
   11b84:	ldr	r2, [sl, #12]
   11b88:	ldr	r1, [sl, #16]
   11b8c:	cmp	r1, r2
   11b90:	beq	11cc4 <close@plt+0xd34>
   11b94:	ldrd	r2, [sp, #24]
   11b98:	add	r3, r3, r2, lsl #2
   11b9c:	ldr	r2, [sl, #12]
   11ba0:	ldr	r3, [r3, #152]	; 0x98
   11ba4:	add	r1, r2, #1
   11ba8:	str	r1, [sl, #12]
   11bac:	ldrb	r1, [r3]
   11bb0:	strb	r1, [r2]
   11bb4:	ldr	r2, [sl, #12]
   11bb8:	ldr	r1, [sl, #16]
   11bbc:	cmp	r1, r2
   11bc0:	beq	11ca8 <close@plt+0xd18>
   11bc4:	ldr	r2, [sl, #12]
   11bc8:	add	r1, r2, #1
   11bcc:	str	r1, [sl, #12]
   11bd0:	ldrb	r1, [r3, #1]
   11bd4:	strb	r1, [r2]
   11bd8:	ldr	r2, [sl, #12]
   11bdc:	ldr	r1, [sl, #16]
   11be0:	cmp	r1, r2
   11be4:	bne	11a8c <close@plt+0xafc>
   11be8:	movw	r0, #33108	; 0x8154
   11bec:	movt	r0, #2
   11bf0:	mov	r1, #1
   11bf4:	bl	12840 <_obstack_newchunk@@Base>
   11bf8:	b	11a8c <close@plt+0xafc>
   11bfc:	movw	r0, #33108	; 0x8154
   11c00:	movt	r0, #2
   11c04:	mov	r1, #1
   11c08:	bl	12840 <_obstack_newchunk@@Base>
   11c0c:	b	11ab8 <close@plt+0xb28>
   11c10:	mov	r1, #1
   11c14:	mov	r0, sl
   11c18:	bl	12840 <_obstack_newchunk@@Base>
   11c1c:	b	11a8c <close@plt+0xafc>
   11c20:	cmp	r9, #3
   11c24:	mov	r3, r1
   11c28:	ldr	r5, [sp, #24]
   11c2c:	beq	118ec <close@plt+0x95c>
   11c30:	mov	r2, #5
   11c34:	movw	r1, #28428	; 0x6f0c
   11c38:	movt	r1, #1
   11c3c:	mov	r0, r3
   11c40:	str	r3, [sp, #12]
   11c44:	bl	10dc8 <dcgettext@plt>
   11c48:	ldr	r2, [sp, #16]
   11c4c:	mov	sl, r0
   11c50:	cmp	r2, #0
   11c54:	beq	11c8c <close@plt+0xcfc>
   11c58:	ldr	r3, [sp, #12]
   11c5c:	mov	r1, #3
   11c60:	mov	r0, r3
   11c64:	bl	14b84 <_obstack_memory_used@@Base+0x214c>
   11c68:	mov	r3, r0
   11c6c:	mov	r1, #0
   11c70:	mov	r2, sl
   11c74:	str	r6, [sp]
   11c78:	mov	r0, r1
   11c7c:	str	r4, [sp, #4]
   11c80:	str	r1, [sp, #12]
   11c84:	bl	10e40 <error@plt>
   11c88:	b	118ec <close@plt+0x95c>
   11c8c:	movw	r1, #28460	; 0x6f2c
   11c90:	movt	r1, #1
   11c94:	ldr	r0, [sp, #16]
   11c98:	mov	r2, #5
   11c9c:	bl	10dc8 <dcgettext@plt>
   11ca0:	mov	r3, r0
   11ca4:	b	11c6c <close@plt+0xcdc>
   11ca8:	movw	r0, #33108	; 0x8154
   11cac:	movt	r0, #2
   11cb0:	str	r3, [sp, #24]
   11cb4:	mov	r1, #1
   11cb8:	bl	12840 <_obstack_newchunk@@Base>
   11cbc:	ldr	r3, [sp, #24]
   11cc0:	b	11bc4 <close@plt+0xc34>
   11cc4:	mov	r1, #1
   11cc8:	mov	r0, sl
   11ccc:	bl	12840 <_obstack_newchunk@@Base>
   11cd0:	b	11b94 <close@plt+0xc04>
   11cd4:	andeq	r6, r1, sl, lsr #29
   11cd8:	subs	r6, r0, #0
   11cdc:	str	r7, [sp, #-8]!
   11ce0:	str	lr, [sp, #4]
   11ce4:	sub	sp, sp, #56	; 0x38
   11ce8:	beq	11d30 <close@plt+0xda0>
   11cec:	movw	r3, #33088	; 0x8140
   11cf0:	movt	r3, #2
   11cf4:	ldr	r4, [r3]
   11cf8:	mov	r2, #5
   11cfc:	movw	r1, #28484	; 0x6f44
   11d00:	movt	r1, #1
   11d04:	mov	r0, #0
   11d08:	bl	10dc8 <dcgettext@plt>
   11d0c:	movw	r3, #33160	; 0x8188
   11d10:	movt	r3, #2
   11d14:	mov	r2, r0
   11d18:	mov	r1, #1
   11d1c:	ldr	r3, [r3]
   11d20:	mov	r0, r4
   11d24:	bl	10f24 <__fprintf_chk@plt>
   11d28:	mov	r0, r6
   11d2c:	bl	10ed0 <exit@plt>
   11d30:	mov	r2, #5
   11d34:	movw	r1, #28524	; 0x6f6c
   11d38:	movt	r1, #1
   11d3c:	movw	r7, #33100	; 0x814c
   11d40:	movt	r7, #2
   11d44:	bl	10dc8 <dcgettext@plt>
   11d48:	movw	r3, #33160	; 0x8188
   11d4c:	movt	r3, #2
   11d50:	mov	r1, r0
   11d54:	mov	r0, #1
   11d58:	ldr	r2, [r3]
   11d5c:	bl	10f0c <__printf_chk@plt>
   11d60:	mov	r2, #5
   11d64:	movw	r1, #28556	; 0x6f8c
   11d68:	movt	r1, #1
   11d6c:	mov	r0, r6
   11d70:	bl	10dc8 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	10d44 <fputs_unlocked@plt>
   11d7c:	mov	r2, #5
   11d80:	movw	r1, #28832	; 0x70a0
   11d84:	movt	r1, #1
   11d88:	mov	r0, r6
   11d8c:	bl	10dc8 <dcgettext@plt>
   11d90:	ldr	r1, [r7]
   11d94:	bl	10d44 <fputs_unlocked@plt>
   11d98:	mov	r2, #5
   11d9c:	movw	r1, #28880	; 0x70d0
   11da0:	movt	r1, #1
   11da4:	mov	r0, r6
   11da8:	bl	10dc8 <dcgettext@plt>
   11dac:	ldr	r1, [r7]
   11db0:	bl	10d44 <fputs_unlocked@plt>
   11db4:	mov	r2, #5
   11db8:	movw	r1, #28936	; 0x7108
   11dbc:	movt	r1, #1
   11dc0:	mov	r0, r6
   11dc4:	bl	10dc8 <dcgettext@plt>
   11dc8:	ldr	r1, [r7]
   11dcc:	bl	10d44 <fputs_unlocked@plt>
   11dd0:	ldr	lr, [pc, #560]	; 12008 <close@plt+0x1078>
   11dd4:	ldr	ip, [lr]
   11dd8:	ldr	r4, [lr, #4]
   11ddc:	ldrd	r8, [lr, #8]
   11de0:	subs	r1, ip, #0
   11de4:	str	ip, [sp]
   11de8:	ldrd	r2, [lr, #16]
   11dec:	str	r4, [sp, #4]
   11df0:	ldrd	r4, [lr, #24]
   11df4:	strd	r8, [sp, #8]
   11df8:	ldrd	r8, [lr, #32]
   11dfc:	strd	r2, [sp, #16]
   11e00:	ldrd	r2, [lr, #40]	; 0x28
   11e04:	strd	r4, [sp, #24]
   11e08:	ldrd	r4, [lr, #48]	; 0x30
   11e0c:	strd	r8, [sp, #32]
   11e10:	strd	r2, [sp, #40]	; 0x28
   11e14:	strd	r4, [sp, #48]	; 0x30
   11e18:	movwne	r5, #28472	; 0x6f38
   11e1c:	mov	r4, sp
   11e20:	movtne	r5, #1
   11e24:	bne	11f1c <close@plt+0xf8c>
   11e28:	ldr	r4, [r4, #4]
   11e2c:	movw	r1, #29160	; 0x71e8
   11e30:	movt	r1, #1
   11e34:	mov	r2, #5
   11e38:	cmp	r4, #0
   11e3c:	beq	11f30 <close@plt+0xfa0>
   11e40:	mov	r0, #0
   11e44:	bl	10dc8 <dcgettext@plt>
   11e48:	mov	r1, r0
   11e4c:	movw	r3, #29184	; 0x7200
   11e50:	movt	r3, #1
   11e54:	movw	r2, #29224	; 0x7228
   11e58:	movt	r2, #1
   11e5c:	mov	r0, #1
   11e60:	bl	10f0c <__printf_chk@plt>
   11e64:	mov	r1, #0
   11e68:	mov	r0, #5
   11e6c:	bl	10f48 <setlocale@plt>
   11e70:	cmp	r0, #0
   11e74:	movweq	r5, #28472	; 0x6f38
   11e78:	movteq	r5, #1
   11e7c:	beq	11ea0 <close@plt+0xf10>
   11e80:	movw	r1, #29240	; 0x7238
   11e84:	movt	r1, #1
   11e88:	mov	r2, #3
   11e8c:	movw	r5, #28472	; 0x6f38
   11e90:	movt	r5, #1
   11e94:	bl	10f78 <strncmp@plt>
   11e98:	cmp	r0, #0
   11e9c:	bne	11fe8 <close@plt+0x1058>
   11ea0:	mov	r2, #5
   11ea4:	movw	r1, #29316	; 0x7284
   11ea8:	movt	r1, #1
   11eac:	mov	r0, #0
   11eb0:	bl	10dc8 <dcgettext@plt>
   11eb4:	mov	r1, r0
   11eb8:	movw	r3, #28472	; 0x6f38
   11ebc:	movt	r3, #1
   11ec0:	movw	r2, #29184	; 0x7200
   11ec4:	movt	r2, #1
   11ec8:	mov	r0, #1
   11ecc:	bl	10f0c <__printf_chk@plt>
   11ed0:	mov	r2, #5
   11ed4:	movw	r1, #29344	; 0x72a0
   11ed8:	movt	r1, #1
   11edc:	mov	r0, #0
   11ee0:	bl	10dc8 <dcgettext@plt>
   11ee4:	movw	r2, #29780	; 0x7454
   11ee8:	movt	r2, #1
   11eec:	cmp	r4, r5
   11ef0:	movw	r3, #29416	; 0x72e8
   11ef4:	movt	r3, #1
   11ef8:	mov	r1, r0
   11efc:	moveq	r3, r2
   11f00:	mov	r2, r4
   11f04:	mov	r0, #1
   11f08:	bl	10f0c <__printf_chk@plt>
   11f0c:	b	11d28 <close@plt+0xd98>
   11f10:	ldr	r1, [r4, #8]!
   11f14:	cmp	r1, #0
   11f18:	beq	11e28 <close@plt+0xe98>
   11f1c:	mov	r0, r5
   11f20:	bl	10d5c <strcmp@plt>
   11f24:	cmp	r0, #0
   11f28:	bne	11f10 <close@plt+0xf80>
   11f2c:	b	11e28 <close@plt+0xe98>
   11f30:	mov	r0, r4
   11f34:	bl	10dc8 <dcgettext@plt>
   11f38:	mov	r1, r0
   11f3c:	movw	r3, #29184	; 0x7200
   11f40:	movt	r3, #1
   11f44:	movw	r2, #29224	; 0x7228
   11f48:	movt	r2, #1
   11f4c:	mov	r0, #1
   11f50:	bl	10f0c <__printf_chk@plt>
   11f54:	mov	r1, r4
   11f58:	mov	r0, #5
   11f5c:	bl	10f48 <setlocale@plt>
   11f60:	cmp	r0, #0
   11f64:	beq	11f80 <close@plt+0xff0>
   11f68:	movw	r1, #29240	; 0x7238
   11f6c:	movt	r1, #1
   11f70:	mov	r2, #3
   11f74:	bl	10f78 <strncmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	bne	11fdc <close@plt+0x104c>
   11f80:	mov	r2, #5
   11f84:	movw	r1, #29316	; 0x7284
   11f88:	movt	r1, #1
   11f8c:	mov	r0, #0
   11f90:	bl	10dc8 <dcgettext@plt>
   11f94:	mov	r1, r0
   11f98:	movw	r3, #28472	; 0x6f38
   11f9c:	movt	r3, #1
   11fa0:	movw	r2, #29184	; 0x7200
   11fa4:	movt	r2, #1
   11fa8:	mov	r0, #1
   11fac:	bl	10f0c <__printf_chk@plt>
   11fb0:	movw	r1, #29344	; 0x72a0
   11fb4:	movt	r1, #1
   11fb8:	mov	r2, #5
   11fbc:	mov	r0, #0
   11fc0:	bl	10dc8 <dcgettext@plt>
   11fc4:	movw	r4, #28472	; 0x6f38
   11fc8:	movt	r4, #1
   11fcc:	movw	r3, #29780	; 0x7454
   11fd0:	movt	r3, #1
   11fd4:	mov	r1, r0
   11fd8:	b	11f00 <close@plt+0xf70>
   11fdc:	movw	r5, #28472	; 0x6f38
   11fe0:	movt	r5, #1
   11fe4:	mov	r4, r5
   11fe8:	mov	r2, #5
   11fec:	movw	r1, #29244	; 0x723c
   11ff0:	movt	r1, #1
   11ff4:	mov	r0, #0
   11ff8:	bl	10dc8 <dcgettext@plt>
   11ffc:	ldr	r1, [r7]
   12000:	bl	10d44 <fputs_unlocked@plt>
   12004:	b	11ea0 <close@plt+0xf10>
   12008:	andeq	r5, r1, ip, lsl sp
   1200c:	ldrb	r3, [r0]
   12010:	cmp	r3, #47	; 0x2f
   12014:	bne	12024 <close@plt+0x1094>
   12018:	ldrb	r3, [r0, #1]!
   1201c:	cmp	r3, #47	; 0x2f
   12020:	beq	12018 <close@plt+0x1088>
   12024:	cmp	r3, #0
   12028:	beq	12058 <close@plt+0x10c8>
   1202c:	mov	r2, r0
   12030:	mov	r1, #0
   12034:	cmp	r3, #47	; 0x2f
   12038:	moveq	r1, #1
   1203c:	beq	1204c <close@plt+0x10bc>
   12040:	cmp	r1, #0
   12044:	movne	r0, r2
   12048:	movne	r1, #0
   1204c:	ldrb	r3, [r2, #1]!
   12050:	cmp	r3, #0
   12054:	bne	12034 <close@plt+0x10a4>
   12058:	bx	lr
   1205c:	str	r4, [sp, #-8]!
   12060:	mov	r4, r0
   12064:	str	lr, [sp, #4]
   12068:	bl	10edc <strlen@plt>
   1206c:	cmp	r0, #1
   12070:	bls	12094 <close@plt+0x1104>
   12074:	add	r2, r4, r0
   12078:	mov	r3, r0
   1207c:	ldrb	r2, [r2, #-1]
   12080:	cmp	r2, #47	; 0x2f
   12084:	subeq	r3, r0, #2
   12088:	rsbeq	r1, r4, #1
   1208c:	addeq	r3, r4, r3
   12090:	beq	120a0 <close@plt+0x1110>
   12094:	ldr	r4, [sp]
   12098:	add	sp, sp, #4
   1209c:	pop	{pc}		; (ldr pc, [sp], #4)
   120a0:	cmp	r3, r4
   120a4:	add	r0, r1, r3
   120a8:	beq	12094 <close@plt+0x1104>
   120ac:	ldrb	r2, [r3], #-1
   120b0:	cmp	r2, #47	; 0x2f
   120b4:	beq	120a0 <close@plt+0x1110>
   120b8:	ldr	r4, [sp]
   120bc:	add	sp, sp, #4
   120c0:	pop	{pc}		; (ldr pc, [sp], #4)
   120c4:	cmp	r0, r1
   120c8:	beq	12138 <close@plt+0x11a8>
   120cc:	sub	r0, r0, #1
   120d0:	sub	r1, r1, #1
   120d4:	str	r4, [sp, #-8]!
   120d8:	str	lr, [sp, #4]
   120dc:	b	120e8 <close@plt+0x1158>
   120e0:	cmp	r3, r2
   120e4:	bne	12120 <close@plt+0x1190>
   120e8:	ldrb	r3, [r0, #1]!
   120ec:	sub	r2, r3, #65	; 0x41
   120f0:	mov	ip, r3
   120f4:	cmp	r2, #25
   120f8:	ldrb	r2, [r1, #1]!
   120fc:	addls	ip, r3, #32
   12100:	uxtbls	r3, ip
   12104:	sub	r4, r2, #65	; 0x41
   12108:	mov	lr, r2
   1210c:	cmp	r4, #25
   12110:	addls	lr, r2, #32
   12114:	uxtbls	r2, lr
   12118:	cmp	r3, #0
   1211c:	bne	120e0 <close@plt+0x1150>
   12120:	uxtb	ip, ip
   12124:	uxtb	r0, lr
   12128:	ldr	r4, [sp]
   1212c:	add	sp, sp, #4
   12130:	sub	r0, ip, r0
   12134:	pop	{pc}		; (ldr pc, [sp], #4)
   12138:	mov	r0, #0
   1213c:	bx	lr
   12140:	movw	r3, #33152	; 0x8180
   12144:	movt	r3, #2
   12148:	str	r0, [r3]
   1214c:	bx	lr
   12150:	movw	r3, #33152	; 0x8180
   12154:	movt	r3, #2
   12158:	strb	r0, [r3, #4]
   1215c:	bx	lr
   12160:	movw	r3, #33100	; 0x814c
   12164:	movt	r3, #2
   12168:	strd	r4, [sp, #-16]!
   1216c:	ldr	r0, [r3]
   12170:	str	r6, [sp, #8]
   12174:	str	lr, [sp, #12]
   12178:	sub	sp, sp, #8
   1217c:	bl	158cc <_obstack_memory_used@@Base+0x2e94>
   12180:	cmp	r0, #0
   12184:	beq	121b0 <close@plt+0x1220>
   12188:	movw	r4, #33152	; 0x8180
   1218c:	movt	r4, #2
   12190:	ldrb	r6, [r4, #4]
   12194:	bl	10ee8 <__errno_location@plt>
   12198:	mov	r5, r0
   1219c:	cmp	r6, #0
   121a0:	beq	121dc <close@plt+0x124c>
   121a4:	ldr	r3, [r0]
   121a8:	cmp	r3, #32
   121ac:	bne	121dc <close@plt+0x124c>
   121b0:	movw	r3, #33088	; 0x8140
   121b4:	movt	r3, #2
   121b8:	ldr	r0, [r3]
   121bc:	bl	158cc <_obstack_memory_used@@Base+0x2e94>
   121c0:	cmp	r0, #0
   121c4:	bne	12224 <close@plt+0x1294>
   121c8:	add	sp, sp, #8
   121cc:	ldrd	r4, [sp]
   121d0:	ldr	r6, [sp, #8]
   121d4:	add	sp, sp, #12
   121d8:	pop	{pc}		; (ldr pc, [sp], #4)
   121dc:	movw	r1, #30360	; 0x7698
   121e0:	movt	r1, #1
   121e4:	mov	r2, #5
   121e8:	mov	r0, #0
   121ec:	bl	10dc8 <dcgettext@plt>
   121f0:	mov	r6, r0
   121f4:	ldr	r0, [r4]
   121f8:	cmp	r0, #0
   121fc:	beq	12234 <close@plt+0x12a4>
   12200:	ldr	r4, [r5]
   12204:	bl	14b70 <_obstack_memory_used@@Base+0x2138>
   12208:	mov	r3, r0
   1220c:	movw	r2, #30372	; 0x76a4
   12210:	movt	r2, #1
   12214:	mov	r0, #0
   12218:	str	r6, [sp]
   1221c:	mov	r1, r4
   12220:	bl	10e40 <error@plt>
   12224:	movw	r3, #33000	; 0x80e8
   12228:	movt	r3, #2
   1222c:	ldr	r0, [r3]
   12230:	bl	10d80 <_exit@plt>
   12234:	mov	r3, r6
   12238:	movw	r2, #30376	; 0x76a8
   1223c:	movt	r2, #1
   12240:	ldr	r1, [r5]
   12244:	bl	10e40 <error@plt>
   12248:	b	12224 <close@plt+0x1294>
   1224c:	strd	r4, [sp, #-12]!
   12250:	mov	r4, r0
   12254:	str	lr, [sp, #8]
   12258:	sub	sp, sp, #12
   1225c:	bl	10f18 <fileno@plt>
   12260:	cmp	r0, #0
   12264:	mov	r0, r4
   12268:	blt	122ec <close@plt+0x135c>
   1226c:	bl	10e94 <__freading@plt>
   12270:	cmp	r0, #0
   12274:	bne	122b8 <close@plt+0x1328>
   12278:	mov	r0, r4
   1227c:	bl	12300 <close@plt+0x1370>
   12280:	cmp	r0, #0
   12284:	beq	122e8 <close@plt+0x1358>
   12288:	bl	10ee8 <__errno_location@plt>
   1228c:	mov	r5, r0
   12290:	mov	r0, r4
   12294:	ldr	r4, [r5]
   12298:	bl	10f30 <fclose@plt>
   1229c:	cmp	r4, #0
   122a0:	mvnne	r0, #0
   122a4:	strne	r4, [r5]
   122a8:	add	sp, sp, #12
   122ac:	ldrd	r4, [sp]
   122b0:	add	sp, sp, #8
   122b4:	pop	{pc}		; (ldr pc, [sp], #4)
   122b8:	mov	r0, r4
   122bc:	bl	10f18 <fileno@plt>
   122c0:	mov	r1, #1
   122c4:	mov	r2, #0
   122c8:	mov	r3, #0
   122cc:	str	r1, [sp]
   122d0:	bl	10e10 <lseek64@plt>
   122d4:	mvn	r3, #0
   122d8:	mvn	r2, #0
   122dc:	cmp	r1, r3
   122e0:	cmpeq	r0, r2
   122e4:	bne	12278 <close@plt+0x12e8>
   122e8:	mov	r0, r4
   122ec:	add	sp, sp, #12
   122f0:	ldrd	r4, [sp]
   122f4:	ldr	lr, [sp, #8]
   122f8:	add	sp, sp, #12
   122fc:	b	10f30 <fclose@plt>
   12300:	str	r4, [sp, #-8]!
   12304:	subs	r4, r0, #0
   12308:	str	lr, [sp, #4]
   1230c:	sub	sp, sp, #8
   12310:	beq	1232c <close@plt+0x139c>
   12314:	bl	10e94 <__freading@plt>
   12318:	cmp	r0, #0
   1231c:	beq	1232c <close@plt+0x139c>
   12320:	ldr	r3, [r4]
   12324:	tst	r3, #256	; 0x100
   12328:	bne	12344 <close@plt+0x13b4>
   1232c:	mov	r0, r4
   12330:	add	sp, sp, #8
   12334:	ldr	r4, [sp]
   12338:	ldr	lr, [sp, #4]
   1233c:	add	sp, sp, #8
   12340:	b	10d68 <fflush@plt>
   12344:	mov	r1, #1
   12348:	mov	r2, #0
   1234c:	mov	r3, #0
   12350:	mov	r0, r4
   12354:	str	r1, [sp]
   12358:	bl	125c8 <close@plt+0x1638>
   1235c:	b	1232c <close@plt+0x139c>
   12360:	strd	r4, [sp, #-12]!
   12364:	mov	r5, r0
   12368:	str	lr, [sp, #8]
   1236c:	sub	sp, sp, #12
   12370:	bl	10ee8 <__errno_location@plt>
   12374:	mov	r4, r0
   12378:	mov	r2, #0
   1237c:	ldr	r3, [r4]
   12380:	mov	r0, r5
   12384:	str	r2, [r4]
   12388:	str	r3, [sp]
   1238c:	str	r3, [sp, #4]
   12390:	bl	10d74 <free@plt>
   12394:	ldr	r3, [r4]
   12398:	add	r2, sp, #8
   1239c:	clz	r3, r3
   123a0:	lsr	r3, r3, #5
   123a4:	add	r3, r2, r3, lsl #2
   123a8:	ldr	r3, [r3, #-8]
   123ac:	str	r3, [r4]
   123b0:	add	sp, sp, #12
   123b4:	ldrd	r4, [sp]
   123b8:	add	sp, sp, #8
   123bc:	pop	{pc}		; (ldr pc, [sp], #4)
   123c0:	mov	r1, #0
   123c4:	str	r4, [sp, #-8]!
   123c8:	mov	r4, r0
   123cc:	movw	r0, #30380	; 0x76ac
   123d0:	movt	r0, #1
   123d4:	str	lr, [sp, #4]
   123d8:	bl	10e58 <open64@plt>
   123dc:	cmp	r4, r0
   123e0:	moveq	r3, #1
   123e4:	beq	123f8 <close@plt+0x1468>
   123e8:	cmp	r0, #0
   123ec:	mov	r3, r0
   123f0:	movlt	r3, #0
   123f4:	bge	12408 <close@plt+0x1478>
   123f8:	ldr	r4, [sp]
   123fc:	add	sp, sp, #4
   12400:	mov	r0, r3
   12404:	pop	{pc}		; (ldr pc, [sp], #4)
   12408:	bl	10f90 <close@plt>
   1240c:	bl	10ee8 <__errno_location@plt>
   12410:	mov	r2, #9
   12414:	mov	r3, #0
   12418:	ldr	r4, [sp]
   1241c:	add	sp, sp, #4
   12420:	str	r2, [r0]
   12424:	mov	r0, r3
   12428:	pop	{pc}		; (ldr pc, [sp], #4)
   1242c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12430:	strd	r6, [sp, #8]
   12434:	strd	r8, [sp, #16]
   12438:	mov	r8, r2
   1243c:	strd	sl, [sp, #24]
   12440:	mov	sl, r0
   12444:	mov	r0, r2
   12448:	str	lr, [sp, #32]
   1244c:	sub	sp, sp, #4
   12450:	mov	fp, r1
   12454:	bl	10f18 <fileno@plt>
   12458:	mov	r4, r0
   1245c:	bl	10ee8 <__errno_location@plt>
   12460:	cmp	r4, #1
   12464:	mov	r9, r0
   12468:	beq	125b4 <close@plt+0x1624>
   1246c:	cmp	r4, #2
   12470:	beq	12554 <close@plt+0x15c4>
   12474:	cmp	r4, #0
   12478:	beq	12548 <close@plt+0x15b8>
   1247c:	mov	r1, #2
   12480:	mov	r0, r1
   12484:	bl	10dd4 <dup2@plt>
   12488:	subs	r4, r0, #2
   1248c:	movne	r4, #1
   12490:	mov	r1, #1
   12494:	mov	r0, r1
   12498:	bl	10dd4 <dup2@plt>
   1249c:	subs	r7, r0, #1
   124a0:	movne	r7, #1
   124a4:	mov	r1, #0
   124a8:	mov	r0, r1
   124ac:	bl	10dd4 <dup2@plt>
   124b0:	subs	r5, r0, #0
   124b4:	beq	124d0 <close@plt+0x1540>
   124b8:	mov	r0, #0
   124bc:	bl	123c0 <close@plt+0x1430>
   124c0:	cmp	r0, #0
   124c4:	mov	r5, r0
   124c8:	mov	r6, r0
   124cc:	beq	125c0 <close@plt+0x1630>
   124d0:	cmp	r7, #0
   124d4:	bne	12568 <close@plt+0x15d8>
   124d8:	cmp	r4, #0
   124dc:	beq	124f0 <close@plt+0x1560>
   124e0:	mov	r0, #2
   124e4:	bl	123c0 <close@plt+0x1430>
   124e8:	subs	r4, r0, #0
   124ec:	beq	125a0 <close@plt+0x1610>
   124f0:	mov	r2, r8
   124f4:	mov	r1, fp
   124f8:	mov	r0, sl
   124fc:	bl	10eac <freopen64@plt>
   12500:	mov	r6, r0
   12504:	cmp	r4, #0
   12508:	ldr	r8, [r9]
   1250c:	bne	125a8 <close@plt+0x1618>
   12510:	cmp	r7, #0
   12514:	bne	12594 <close@plt+0x1604>
   12518:	cmp	r5, #0
   1251c:	bne	1255c <close@plt+0x15cc>
   12520:	cmp	r6, #0
   12524:	mov	r0, r6
   12528:	streq	r8, [r9]
   1252c:	add	sp, sp, #4
   12530:	ldrd	r4, [sp]
   12534:	ldrd	r6, [sp, #8]
   12538:	ldrd	r8, [sp, #16]
   1253c:	ldrd	sl, [sp, #24]
   12540:	add	sp, sp, #32
   12544:	pop	{pc}		; (ldr pc, [sp], #4)
   12548:	mov	r7, r4
   1254c:	mov	r5, r4
   12550:	b	124f0 <close@plt+0x1560>
   12554:	mov	r4, #0
   12558:	b	12490 <close@plt+0x1500>
   1255c:	mov	r0, #0
   12560:	bl	10f90 <close@plt>
   12564:	b	12520 <close@plt+0x1590>
   12568:	mov	r0, #1
   1256c:	bl	123c0 <close@plt+0x1430>
   12570:	subs	r7, r0, #0
   12574:	bne	124d8 <close@plt+0x1548>
   12578:	cmp	r4, #0
   1257c:	ldr	r8, [r9]
   12580:	moveq	r6, r4
   12584:	beq	12594 <close@plt+0x1604>
   12588:	mov	r0, #2
   1258c:	mov	r6, r7
   12590:	bl	10f90 <close@plt>
   12594:	mov	r0, #1
   12598:	bl	10f90 <close@plt>
   1259c:	b	12518 <close@plt+0x1588>
   125a0:	ldr	r8, [r9]
   125a4:	mov	r6, r4
   125a8:	mov	r0, #2
   125ac:	bl	10f90 <close@plt>
   125b0:	b	12510 <close@plt+0x1580>
   125b4:	mov	r4, #0
   125b8:	mov	r7, r4
   125bc:	b	124a4 <close@plt+0x1514>
   125c0:	mov	r5, #1
   125c4:	b	12504 <close@plt+0x1574>
   125c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   125cc:	mov	r4, r0
   125d0:	ldr	ip, [r0, #4]
   125d4:	strd	r6, [sp, #8]
   125d8:	str	lr, [sp, #20]
   125dc:	ldr	lr, [r0, #8]
   125e0:	str	r8, [sp, #16]
   125e4:	sub	sp, sp, #8
   125e8:	ldr	r5, [sp, #32]
   125ec:	cmp	lr, ip
   125f0:	beq	12618 <close@plt+0x1688>
   125f4:	mov	r0, r4
   125f8:	str	r5, [sp, #32]
   125fc:	add	sp, sp, #8
   12600:	ldrd	r4, [sp]
   12604:	ldrd	r6, [sp, #8]
   12608:	ldr	r8, [sp, #16]
   1260c:	ldr	lr, [sp, #20]
   12610:	add	sp, sp, #24
   12614:	b	10f3c <fseeko64@plt>
   12618:	ldr	ip, [r0, #16]
   1261c:	ldr	lr, [r0, #20]
   12620:	cmp	lr, ip
   12624:	bne	125f4 <close@plt+0x1664>
   12628:	ldr	r8, [r0, #36]	; 0x24
   1262c:	cmp	r8, #0
   12630:	bne	125f4 <close@plt+0x1664>
   12634:	mov	r6, r2
   12638:	mov	r7, r3
   1263c:	bl	10f18 <fileno@plt>
   12640:	mov	r2, r6
   12644:	mov	r3, r7
   12648:	str	r5, [sp]
   1264c:	bl	10e10 <lseek64@plt>
   12650:	mvn	r3, #0
   12654:	mvn	r2, #0
   12658:	cmp	r1, r3
   1265c:	cmpeq	r0, r2
   12660:	beq	12690 <close@plt+0x1700>
   12664:	ldr	r3, [r4]
   12668:	strd	r0, [r4, #80]	; 0x50
   1266c:	bic	r3, r3, #16
   12670:	str	r3, [r4]
   12674:	mov	r0, r8
   12678:	add	sp, sp, #8
   1267c:	ldrd	r4, [sp]
   12680:	ldrd	r6, [sp, #8]
   12684:	ldr	r8, [sp, #16]
   12688:	add	sp, sp, #20
   1268c:	pop	{pc}		; (ldr pc, [sp], #4)
   12690:	mvn	r8, #0
   12694:	b	12674 <close@plt+0x16e4>
   12698:	movw	r3, #33088	; 0x8140
   1269c:	movt	r3, #2
   126a0:	str	r4, [sp, #-8]!
   126a4:	ldr	r4, [r3]
   126a8:	mov	r2, #5
   126ac:	movw	r1, #30392	; 0x76b8
   126b0:	movt	r1, #1
   126b4:	mov	r0, #0
   126b8:	str	lr, [sp, #4]
   126bc:	bl	10dc8 <dcgettext@plt>
   126c0:	mov	r3, r0
   126c4:	movw	r2, #30704	; 0x77f0
   126c8:	movt	r2, #1
   126cc:	mov	r1, #1
   126d0:	mov	r0, r4
   126d4:	bl	10f24 <__fprintf_chk@plt>
   126d8:	movw	r3, #33000	; 0x80e8
   126dc:	movt	r3, #2
   126e0:	ldr	r0, [r3]
   126e4:	bl	10ed0 <exit@plt>
   126e8:	ldrb	r2, [r0, #40]	; 0x28
   126ec:	ldr	r3, [r0, #28]
   126f0:	tst	r2, #1
   126f4:	beq	12700 <close@plt+0x1770>
   126f8:	ldr	r0, [r0, #36]	; 0x24
   126fc:	bx	r3
   12700:	mov	r0, r1
   12704:	bx	r3
   12708:	ldrb	r2, [r0, #40]	; 0x28
   1270c:	ldr	r3, [r0, #32]
   12710:	tst	r2, #1
   12714:	beq	12720 <close@plt+0x1790>
   12718:	ldr	r0, [r0, #36]	; 0x24
   1271c:	bx	r3
   12720:	mov	r0, r1
   12724:	bx	r3
   12728:	strd	r4, [sp, #-16]!
   1272c:	subs	r5, r2, #0
   12730:	movw	r2, #4072	; 0xfe8
   12734:	moveq	r5, #8
   12738:	str	r6, [sp, #8]
   1273c:	subne	r6, r5, #1
   12740:	moveq	r6, #7
   12744:	cmp	r1, #0
   12748:	str	lr, [sp, #12]
   1274c:	mov	r3, r1
   12750:	moveq	r3, r2
   12754:	mov	r1, r3
   12758:	mov	r4, r0
   1275c:	str	r3, [r0]
   12760:	str	r6, [r0, #24]
   12764:	bl	126e8 <close@plt+0x1758>
   12768:	cmp	r0, #0
   1276c:	mov	r3, r0
   12770:	str	r0, [r4, #4]
   12774:	beq	127c8 <close@plt+0x1838>
   12778:	ldrb	lr, [r4, #40]	; 0x28
   1277c:	add	r1, r0, #8
   12780:	rsb	r2, r5, #0
   12784:	add	r1, r1, r6
   12788:	mov	r5, #0
   1278c:	ldr	ip, [r4]
   12790:	and	r2, r2, r1
   12794:	mov	r0, #1
   12798:	ldr	r6, [sp, #8]
   1279c:	bic	lr, lr, #6
   127a0:	str	r2, [r4, #8]
   127a4:	str	r2, [r4, #12]
   127a8:	add	r2, r3, ip
   127ac:	str	r2, [r3]
   127b0:	str	r2, [r4, #16]
   127b4:	str	r5, [r3, #4]
   127b8:	strb	lr, [r4, #40]	; 0x28
   127bc:	ldrd	r4, [sp]
   127c0:	add	sp, sp, #12
   127c4:	pop	{pc}		; (ldr pc, [sp], #4)
   127c8:	movw	r3, #33004	; 0x80ec
   127cc:	movt	r3, #2
   127d0:	ldr	r3, [r3]
   127d4:	blx	r3

000127d8 <_obstack_begin@@Base>:
   127d8:	str	r4, [sp, #-8]!
   127dc:	str	lr, [sp, #4]
   127e0:	ldrb	lr, [r0, #40]	; 0x28
   127e4:	str	r3, [r0, #28]
   127e8:	ldr	r4, [sp, #8]
   127ec:	bfc	lr, #0, #1
   127f0:	str	r4, [r0, #32]
   127f4:	ldr	r4, [sp]
   127f8:	strb	lr, [r0, #40]	; 0x28
   127fc:	ldr	lr, [sp, #4]
   12800:	add	sp, sp, #8
   12804:	b	12728 <close@plt+0x1798>

00012808 <_obstack_begin_1@@Base>:
   12808:	str	r4, [sp, #-8]!
   1280c:	str	lr, [sp, #4]
   12810:	ldrb	lr, [r0, #40]	; 0x28
   12814:	str	r3, [r0, #28]
   12818:	ldr	r4, [sp, #8]
   1281c:	ldr	r3, [sp, #12]
   12820:	orr	lr, lr, #1
   12824:	str	r4, [r0, #32]
   12828:	ldr	r4, [sp]
   1282c:	str	r3, [r0, #36]	; 0x24
   12830:	strb	lr, [r0, #40]	; 0x28
   12834:	ldr	lr, [sp, #4]
   12838:	add	sp, sp, #8
   1283c:	b	12728 <close@plt+0x1798>

00012840 <_obstack_newchunk@@Base>:
   12840:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12844:	ldr	r2, [r0, #8]
   12848:	ldr	r3, [r0, #24]
   1284c:	strd	r6, [sp, #8]
   12850:	str	r8, [sp, #16]
   12854:	ldr	r6, [r0, #12]
   12858:	str	lr, [sp, #20]
   1285c:	ldr	lr, [r0]
   12860:	ldr	r7, [r0, #4]
   12864:	sub	r6, r6, r2
   12868:	adds	r1, r6, r1
   1286c:	movcs	ip, #1
   12870:	movcc	ip, #0
   12874:	adds	r3, r3, r1
   12878:	eor	ip, ip, #1
   1287c:	add	r4, r3, r6, lsr #3
   12880:	movcs	r2, #1
   12884:	movcc	r2, #0
   12888:	cmp	r3, lr
   1288c:	eor	r2, r2, #1
   12890:	add	r4, r4, #100	; 0x64
   12894:	movcc	r3, lr
   12898:	cmp	r3, r4
   1289c:	movcs	r4, r3
   128a0:	tst	ip, r2
   128a4:	beq	1295c <_obstack_newchunk@@Base+0x11c>
   128a8:	mov	r1, r4
   128ac:	mov	r5, r0
   128b0:	bl	126e8 <close@plt+0x1758>
   128b4:	subs	r8, r0, #0
   128b8:	beq	1295c <_obstack_newchunk@@Base+0x11c>
   128bc:	add	r3, r8, r4
   128c0:	mov	r4, r8
   128c4:	str	r8, [r5, #4]
   128c8:	ldr	r0, [r5, #24]
   128cc:	mov	r2, r6
   128d0:	ldr	r1, [r5, #8]
   128d4:	str	r7, [r8, #4]
   128d8:	str	r3, [r5, #16]
   128dc:	str	r3, [r4], #8
   128e0:	add	r4, r4, r0
   128e4:	bic	r4, r4, r0
   128e8:	mov	r0, r4
   128ec:	bl	10d8c <memcpy@plt>
   128f0:	ldrb	r3, [r5, #40]	; 0x28
   128f4:	tst	r3, #2
   128f8:	bne	12918 <_obstack_newchunk@@Base+0xd8>
   128fc:	ldr	r1, [r5, #8]
   12900:	add	r3, r7, #8
   12904:	ldr	r2, [r5, #24]
   12908:	add	r3, r3, r2
   1290c:	bic	r3, r3, r2
   12910:	cmp	r1, r3
   12914:	beq	12944 <_obstack_newchunk@@Base+0x104>
   12918:	ldrb	r3, [r5, #40]	; 0x28
   1291c:	add	r6, r4, r6
   12920:	ldr	r8, [sp, #16]
   12924:	str	r4, [r5, #8]
   12928:	str	r6, [r5, #12]
   1292c:	bfc	r3, #1, #1
   12930:	ldrd	r6, [sp, #8]
   12934:	strb	r3, [r5, #40]	; 0x28
   12938:	ldrd	r4, [sp]
   1293c:	add	sp, sp, #20
   12940:	pop	{pc}		; (ldr pc, [sp], #4)
   12944:	ldr	r3, [r7, #4]
   12948:	mov	r1, r7
   1294c:	mov	r0, r5
   12950:	str	r3, [r8, #4]
   12954:	bl	12708 <close@plt+0x1778>
   12958:	b	12918 <_obstack_newchunk@@Base+0xd8>
   1295c:	movw	r3, #33004	; 0x80ec
   12960:	movt	r3, #2
   12964:	ldr	r3, [r3]
   12968:	blx	r3

0001296c <_obstack_allocated_p@@Base>:
   1296c:	ldr	r0, [r0, #4]
   12970:	cmp	r0, #0
   12974:	beq	129a4 <_obstack_allocated_p@@Base+0x38>
   12978:	cmp	r1, r0
   1297c:	bls	1298c <_obstack_allocated_p@@Base+0x20>
   12980:	ldr	r3, [r0]
   12984:	cmp	r3, r1
   12988:	bcs	1299c <_obstack_allocated_p@@Base+0x30>
   1298c:	ldr	r0, [r0, #4]
   12990:	cmp	r0, #0
   12994:	bne	12978 <_obstack_allocated_p@@Base+0xc>
   12998:	bx	lr
   1299c:	mov	r0, #1
   129a0:	bx	lr
   129a4:	bx	lr

000129a8 <_obstack_free@@Base>:
   129a8:	strd	r4, [sp, #-16]!
   129ac:	ldr	r4, [r0, #4]
   129b0:	str	r6, [sp, #8]
   129b4:	mov	r6, r1
   129b8:	str	lr, [sp, #12]
   129bc:	cmp	r4, #0
   129c0:	movne	r5, r0
   129c4:	beq	12a00 <_obstack_free@@Base+0x58>
   129c8:	cmp	r4, r6
   129cc:	bcs	129dc <_obstack_free@@Base+0x34>
   129d0:	ldr	r2, [r4]
   129d4:	cmp	r2, r6
   129d8:	bcs	12a18 <_obstack_free@@Base+0x70>
   129dc:	mov	r1, r4
   129e0:	mov	r0, r5
   129e4:	ldr	r4, [r4, #4]
   129e8:	bl	12708 <close@plt+0x1778>
   129ec:	ldrb	r2, [r5, #40]	; 0x28
   129f0:	cmp	r4, #0
   129f4:	orr	r2, r2, #2
   129f8:	strb	r2, [r5, #40]	; 0x28
   129fc:	bne	129c8 <_obstack_free@@Base+0x20>
   12a00:	cmp	r6, #0
   12a04:	bne	12a34 <_obstack_free@@Base+0x8c>
   12a08:	ldrd	r4, [sp]
   12a0c:	ldr	r6, [sp, #8]
   12a10:	add	sp, sp, #12
   12a14:	pop	{pc}		; (ldr pc, [sp], #4)
   12a18:	stmib	r5, {r4, r6}
   12a1c:	str	r6, [r5, #12]
   12a20:	str	r2, [r5, #16]
   12a24:	ldrd	r4, [sp]
   12a28:	ldr	r6, [sp, #8]
   12a2c:	add	sp, sp, #12
   12a30:	pop	{pc}		; (ldr pc, [sp], #4)
   12a34:	bl	10f84 <abort@plt>

00012a38 <_obstack_memory_used@@Base>:
   12a38:	ldr	r3, [r0, #4]
   12a3c:	cmp	r3, #0
   12a40:	beq	12a64 <_obstack_memory_used@@Base+0x2c>
   12a44:	mov	r0, #0
   12a48:	ldr	r2, [r3]
   12a4c:	sub	r2, r2, r3
   12a50:	ldr	r3, [r3, #4]
   12a54:	add	r0, r0, r2
   12a58:	cmp	r3, #0
   12a5c:	bne	12a48 <_obstack_memory_used@@Base+0x10>
   12a60:	bx	lr
   12a64:	mov	r0, r3
   12a68:	bx	lr
   12a6c:	strd	r4, [sp, #-16]!
   12a70:	subs	r4, r0, #0
   12a74:	str	r6, [sp, #8]
   12a78:	str	lr, [sp, #12]
   12a7c:	beq	12b14 <_obstack_memory_used@@Base+0xdc>
   12a80:	mov	r1, #47	; 0x2f
   12a84:	bl	10f54 <strrchr@plt>
   12a88:	subs	r5, r0, #0
   12a8c:	beq	12aec <_obstack_memory_used@@Base+0xb4>
   12a90:	add	r6, r5, #1
   12a94:	sub	r3, r6, r4
   12a98:	cmp	r3, #6
   12a9c:	ble	12aec <_obstack_memory_used@@Base+0xb4>
   12aa0:	movw	r1, #30468	; 0x7704
   12aa4:	movt	r1, #1
   12aa8:	mov	r2, #7
   12aac:	sub	r0, r5, #6
   12ab0:	bl	10f78 <strncmp@plt>
   12ab4:	cmp	r0, #0
   12ab8:	bne	12aec <_obstack_memory_used@@Base+0xb4>
   12abc:	movw	r1, #30476	; 0x770c
   12ac0:	movt	r1, #1
   12ac4:	mov	r2, #3
   12ac8:	mov	r0, r6
   12acc:	bl	10f78 <strncmp@plt>
   12ad0:	cmp	r0, #0
   12ad4:	movne	r4, r6
   12ad8:	bne	12aec <_obstack_memory_used@@Base+0xb4>
   12adc:	add	r4, r5, #4
   12ae0:	movw	r3, #33072	; 0x8130
   12ae4:	movt	r3, #2
   12ae8:	str	r4, [r3]
   12aec:	movw	r2, #33160	; 0x8188
   12af0:	movt	r2, #2
   12af4:	ldr	r6, [sp, #8]
   12af8:	movw	r3, #33076	; 0x8134
   12afc:	movt	r3, #2
   12b00:	str	r4, [r2]
   12b04:	str	r4, [r3]
   12b08:	ldrd	r4, [sp]
   12b0c:	add	sp, sp, #12
   12b10:	pop	{pc}		; (ldr pc, [sp], #4)
   12b14:	movw	r3, #33088	; 0x8140
   12b18:	movt	r3, #2
   12b1c:	movw	r0, #30412	; 0x76cc
   12b20:	movt	r0, #1
   12b24:	ldr	r3, [r3]
   12b28:	mov	r2, #55	; 0x37
   12b2c:	mov	r1, #1
   12b30:	bl	10e04 <fwrite@plt>
   12b34:	bl	10f84 <abort@plt>
   12b38:	strd	r4, [sp, #-16]!
   12b3c:	mov	r4, #0
   12b40:	mov	r5, #0
   12b44:	cmp	r1, #10
   12b48:	str	r6, [sp, #8]
   12b4c:	strd	r4, [r0]
   12b50:	strd	r4, [r0, #8]
   12b54:	str	lr, [sp, #12]
   12b58:	strd	r4, [r0, #16]
   12b5c:	strd	r4, [r0, #24]
   12b60:	strd	r4, [r0, #32]
   12b64:	strd	r4, [r0, #40]	; 0x28
   12b68:	beq	12b80 <_obstack_memory_used@@Base+0x148>
   12b6c:	ldrd	r4, [sp]
   12b70:	str	r1, [r0]
   12b74:	ldr	r6, [sp, #8]
   12b78:	add	sp, sp, #12
   12b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b80:	bl	10f84 <abort@plt>
   12b84:	mov	r2, #5
   12b88:	strd	r4, [sp, #-16]!
   12b8c:	mov	r5, r0
   12b90:	str	r6, [sp, #8]
   12b94:	mov	r6, r1
   12b98:	mov	r1, r0
   12b9c:	mov	r0, #0
   12ba0:	str	lr, [sp, #12]
   12ba4:	bl	10dc8 <dcgettext@plt>
   12ba8:	cmp	r5, r0
   12bac:	mov	r4, r0
   12bb0:	beq	12bc8 <_obstack_memory_used@@Base+0x190>
   12bb4:	mov	r0, r4
   12bb8:	ldrd	r4, [sp]
   12bbc:	ldr	r6, [sp, #8]
   12bc0:	add	sp, sp, #12
   12bc4:	pop	{pc}		; (ldr pc, [sp], #4)
   12bc8:	bl	15954 <_obstack_memory_used@@Base+0x2f1c>
   12bcc:	ldrb	r3, [r0]
   12bd0:	bic	r3, r3, #32
   12bd4:	cmp	r3, #85	; 0x55
   12bd8:	bne	12c40 <_obstack_memory_used@@Base+0x208>
   12bdc:	ldrb	r3, [r0, #1]
   12be0:	bic	r3, r3, #32
   12be4:	cmp	r3, #84	; 0x54
   12be8:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12bec:	ldrb	r3, [r0, #2]
   12bf0:	bic	r3, r3, #32
   12bf4:	cmp	r3, #70	; 0x46
   12bf8:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12bfc:	ldrb	r3, [r0, #3]
   12c00:	cmp	r3, #45	; 0x2d
   12c04:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c08:	ldrb	r3, [r0, #4]
   12c0c:	cmp	r3, #56	; 0x38
   12c10:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c14:	ldrb	r3, [r0, #5]
   12c18:	cmp	r3, #0
   12c1c:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c20:	ldrb	r2, [r4]
   12c24:	movw	r3, #30568	; 0x7768
   12c28:	movt	r3, #1
   12c2c:	movw	r4, #30580	; 0x7774
   12c30:	movt	r4, #1
   12c34:	cmp	r2, #96	; 0x60
   12c38:	movne	r4, r3
   12c3c:	b	12bb4 <_obstack_memory_used@@Base+0x17c>
   12c40:	cmp	r3, #71	; 0x47
   12c44:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c48:	ldrb	r3, [r0, #1]
   12c4c:	bic	r3, r3, #32
   12c50:	cmp	r3, #66	; 0x42
   12c54:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c58:	ldrb	r3, [r0, #2]
   12c5c:	cmp	r3, #49	; 0x31
   12c60:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c64:	ldrb	r3, [r0, #3]
   12c68:	cmp	r3, #56	; 0x38
   12c6c:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c70:	ldrb	r3, [r0, #4]
   12c74:	cmp	r3, #48	; 0x30
   12c78:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c7c:	ldrb	r3, [r0, #5]
   12c80:	cmp	r3, #51	; 0x33
   12c84:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c88:	ldrb	r3, [r0, #6]
   12c8c:	cmp	r3, #48	; 0x30
   12c90:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12c94:	ldrb	r3, [r0, #7]
   12c98:	cmp	r3, #0
   12c9c:	bne	12cc0 <_obstack_memory_used@@Base+0x288>
   12ca0:	ldrb	r2, [r4]
   12ca4:	movw	r3, #30572	; 0x776c
   12ca8:	movt	r3, #1
   12cac:	movw	r4, #30576	; 0x7770
   12cb0:	movt	r4, #1
   12cb4:	cmp	r2, #96	; 0x60
   12cb8:	movne	r4, r3
   12cbc:	b	12bb4 <_obstack_memory_used@@Base+0x17c>
   12cc0:	movw	r3, #30584	; 0x7778
   12cc4:	movt	r3, #1
   12cc8:	cmp	r6, #9
   12ccc:	movw	r4, #30564	; 0x7764
   12cd0:	movt	r4, #1
   12cd4:	movne	r4, r3
   12cd8:	b	12bb4 <_obstack_memory_used@@Base+0x17c>
   12cdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12ce0:	strd	r6, [sp, #8]
   12ce4:	strd	r8, [sp, #16]
   12ce8:	strd	sl, [sp, #24]
   12cec:	mov	fp, r0
   12cf0:	mov	sl, r1
   12cf4:	str	lr, [sp, #32]
   12cf8:	sub	sp, sp, #116	; 0x74
   12cfc:	ldr	r8, [sp, #152]	; 0x98
   12d00:	str	r3, [sp, #28]
   12d04:	ldr	r3, [sp, #156]	; 0x9c
   12d08:	str	r2, [sp, #32]
   12d0c:	and	r4, r3, #2
   12d10:	ubfx	r3, r3, #1, #1
   12d14:	str	r3, [sp, #44]	; 0x2c
   12d18:	bl	10e1c <__ctype_get_mb_cur_max@plt>
   12d1c:	str	r0, [sp, #64]	; 0x40
   12d20:	cmp	r8, #10
   12d24:	ldrls	pc, [pc, r8, lsl #2]
   12d28:	b	14498 <_obstack_memory_used@@Base+0x1a60>
   12d2c:	andeq	r3, r1, r0, lsr r1
   12d30:	andeq	r3, r1, ip, asr #3
   12d34:	andeq	r3, r1, r8, lsr #15
   12d38:	andeq	r3, r1, ip, ror #3
   12d3c:	muleq	r1, r4, r0
   12d40:	andeq	r3, r1, r0, ror #1
   12d44:	andeq	r3, r1, r0, ror #2
   12d48:	muleq	r1, ip, r1
   12d4c:	andeq	r2, r1, r8, asr sp
   12d50:	andeq	r2, r1, r8, asr sp
   12d54:	andeq	r2, r1, r8, asr sp
   12d58:	cmp	r8, #10
   12d5c:	beq	12d88 <_obstack_memory_used@@Base+0x350>
   12d60:	mov	r1, r8
   12d64:	movw	r0, #30588	; 0x777c
   12d68:	movt	r0, #1
   12d6c:	bl	12b84 <_obstack_memory_used@@Base+0x14c>
   12d70:	mov	r1, r8
   12d74:	str	r0, [sp, #164]	; 0xa4
   12d78:	movw	r0, #30584	; 0x7778
   12d7c:	movt	r0, #1
   12d80:	bl	12b84 <_obstack_memory_used@@Base+0x14c>
   12d84:	str	r0, [sp, #168]	; 0xa8
   12d88:	cmp	r4, #0
   12d8c:	movne	r4, #0
   12d90:	beq	14174 <_obstack_memory_used@@Base+0x173c>
   12d94:	mov	r3, #1
   12d98:	mov	r5, #0
   12d9c:	ldr	r0, [sp, #168]	; 0xa8
   12da0:	str	r3, [sp, #36]	; 0x24
   12da4:	str	r3, [sp, #40]	; 0x28
   12da8:	str	r5, [sp, #68]	; 0x44
   12dac:	bl	10edc <strlen@plt>
   12db0:	ldr	r3, [sp, #168]	; 0xa8
   12db4:	str	r5, [sp, #48]	; 0x30
   12db8:	str	r0, [sp, #56]	; 0x38
   12dbc:	str	r3, [sp, #60]	; 0x3c
   12dc0:	str	r5, [sp, #72]	; 0x48
   12dc4:	str	r8, [sp, #152]	; 0x98
   12dc8:	mov	r8, fp
   12dcc:	mov	r9, #0
   12dd0:	ldr	fp, [sp, #152]	; 0x98
   12dd4:	ldr	r3, [sp, #28]
   12dd8:	cmn	r3, #1
   12ddc:	beq	1333c <_obstack_memory_used@@Base+0x904>
   12de0:	ldr	r3, [sp, #28]
   12de4:	subs	r6, r3, r9
   12de8:	movne	r6, #1
   12dec:	cmp	r6, #0
   12df0:	beq	13354 <_obstack_memory_used@@Base+0x91c>
   12df4:	ldr	r0, [sp, #32]
   12df8:	ldr	r7, [sp, #40]	; 0x28
   12dfc:	add	r3, r0, r9
   12e00:	cmp	fp, #2
   12e04:	moveq	r7, #0
   12e08:	andne	r7, r7, #1
   12e0c:	str	r3, [sp, #52]	; 0x34
   12e10:	cmp	r7, #0
   12e14:	beq	137f0 <_obstack_memory_used@@Base+0xdb8>
   12e18:	ldr	r2, [sp, #56]	; 0x38
   12e1c:	cmp	r2, #0
   12e20:	beq	13a8c <_obstack_memory_used@@Base+0x1054>
   12e24:	ldr	r1, [sp, #28]
   12e28:	cmp	r2, #1
   12e2c:	mov	r3, r2
   12e30:	movls	r3, #0
   12e34:	movhi	r3, #1
   12e38:	add	r5, r9, r2
   12e3c:	cmn	r1, #1
   12e40:	movne	r3, #0
   12e44:	cmp	r3, #0
   12e48:	beq	12e54 <_obstack_memory_used@@Base+0x41c>
   12e4c:	bl	10edc <strlen@plt>
   12e50:	str	r0, [sp, #28]
   12e54:	ldr	r3, [sp, #28]
   12e58:	cmp	r5, r3
   12e5c:	bhi	13a8c <_obstack_memory_used@@Base+0x1054>
   12e60:	ldr	r0, [sp, #52]	; 0x34
   12e64:	ldr	r2, [sp, #56]	; 0x38
   12e68:	ldr	r1, [sp, #60]	; 0x3c
   12e6c:	bl	10db0 <memcmp@plt>
   12e70:	cmp	r0, #0
   12e74:	bne	13a8c <_obstack_memory_used@@Base+0x1054>
   12e78:	ldr	r3, [sp, #44]	; 0x2c
   12e7c:	cmp	r3, #0
   12e80:	bne	143bc <_obstack_memory_used@@Base+0x1984>
   12e84:	ldr	r3, [sp, #52]	; 0x34
   12e88:	ldrb	r5, [r3]
   12e8c:	cmp	r5, #126	; 0x7e
   12e90:	ldrls	pc, [pc, r5, lsl #2]
   12e94:	b	1374c <_obstack_memory_used@@Base+0xd14>
   12e98:	andeq	r3, r1, r0, asr r6
   12e9c:	andeq	r3, r1, ip, asr #14
   12ea0:	andeq	r3, r1, ip, asr #14
   12ea4:	andeq	r3, r1, ip, asr #14
   12ea8:	andeq	r3, r1, ip, asr #14
   12eac:	andeq	r3, r1, ip, asr #14
   12eb0:	andeq	r3, r1, ip, asr #14
   12eb4:	andeq	r3, r1, r4, lsr #12
   12eb8:	andeq	r3, r1, ip, lsl r6
   12ebc:	andeq	r3, r1, r4, ror #10
   12ec0:	andeq	r3, r1, r0, lsl r6
   12ec4:	andeq	r3, r1, ip, asr r5
   12ec8:	andeq	r3, r1, ip, ror #11
   12ecc:	andeq	r3, r1, r8, lsr r6
   12ed0:	andeq	r3, r1, ip, asr #14
   12ed4:	andeq	r3, r1, ip, asr #14
   12ed8:	andeq	r3, r1, ip, asr #14
   12edc:	andeq	r3, r1, ip, asr #14
   12ee0:	andeq	r3, r1, ip, asr #14
   12ee4:	andeq	r3, r1, ip, asr #14
   12ee8:	andeq	r3, r1, ip, asr #14
   12eec:	andeq	r3, r1, ip, asr #14
   12ef0:	andeq	r3, r1, ip, asr #14
   12ef4:	andeq	r3, r1, ip, asr #14
   12ef8:	andeq	r3, r1, ip, asr #14
   12efc:	andeq	r3, r1, ip, asr #14
   12f00:	andeq	r3, r1, ip, asr #14
   12f04:	andeq	r3, r1, ip, asr #14
   12f08:	andeq	r3, r1, ip, asr #14
   12f0c:	andeq	r3, r1, ip, asr #14
   12f10:	andeq	r3, r1, ip, asr #14
   12f14:	andeq	r3, r1, ip, asr #14
   12f18:	andeq	r3, r1, r8, lsr #14
   12f1c:	andeq	r3, r1, r0, lsr r6
   12f20:	andeq	r3, r1, r0, lsr r6
   12f24:	andeq	r3, r1, ip, lsl #14
   12f28:	andeq	r3, r1, r0, lsr r6
   12f2c:	andeq	r3, r1, r0, asr #14
   12f30:	andeq	r3, r1, r0, lsr r6
   12f34:	andeq	r3, r1, ip, lsl #9
   12f38:	andeq	r3, r1, r0, lsr r6
   12f3c:	andeq	r3, r1, r0, lsr r6
   12f40:	andeq	r3, r1, r0, lsr r6
   12f44:	andeq	r3, r1, r0, asr #14
   12f48:	andeq	r3, r1, r0, asr #14
   12f4c:	andeq	r3, r1, r0, asr #14
   12f50:	andeq	r3, r1, r0, asr #14
   12f54:	andeq	r3, r1, r0, asr #14
   12f58:	andeq	r3, r1, r0, asr #14
   12f5c:	andeq	r3, r1, r0, asr #14
   12f60:	andeq	r3, r1, r0, asr #14
   12f64:	andeq	r3, r1, r0, asr #14
   12f68:	andeq	r3, r1, r0, asr #14
   12f6c:	andeq	r3, r1, r0, asr #14
   12f70:	andeq	r3, r1, r0, asr #14
   12f74:	andeq	r3, r1, r0, asr #14
   12f78:	andeq	r3, r1, r0, asr #14
   12f7c:	andeq	r3, r1, r0, asr #14
   12f80:	andeq	r3, r1, r0, asr #14
   12f84:	andeq	r3, r1, r0, lsr r6
   12f88:	andeq	r3, r1, r0, lsr r6
   12f8c:	andeq	r3, r1, r0, lsr r6
   12f90:	andeq	r3, r1, r0, lsr r6
   12f94:	andeq	r3, r1, r0, ror #8
   12f98:	andeq	r3, r1, ip, asr #14
   12f9c:	andeq	r3, r1, r0, asr #14
   12fa0:	andeq	r3, r1, r0, asr #14
   12fa4:	andeq	r3, r1, r0, asr #14
   12fa8:	andeq	r3, r1, r0, asr #14
   12fac:	andeq	r3, r1, r0, asr #14
   12fb0:	andeq	r3, r1, r0, asr #14
   12fb4:	andeq	r3, r1, r0, asr #14
   12fb8:	andeq	r3, r1, r0, asr #14
   12fbc:	andeq	r3, r1, r0, asr #14
   12fc0:	andeq	r3, r1, r0, asr #14
   12fc4:	andeq	r3, r1, r0, asr #14
   12fc8:	andeq	r3, r1, r0, asr #14
   12fcc:	andeq	r3, r1, r0, asr #14
   12fd0:	andeq	r3, r1, r0, asr #14
   12fd4:	andeq	r3, r1, r0, asr #14
   12fd8:	andeq	r3, r1, r0, asr #14
   12fdc:	andeq	r3, r1, r0, asr #14
   12fe0:	andeq	r3, r1, r0, asr #14
   12fe4:	andeq	r3, r1, r0, asr #14
   12fe8:	andeq	r3, r1, r0, asr #14
   12fec:	andeq	r3, r1, r0, asr #14
   12ff0:	andeq	r3, r1, r0, asr #14
   12ff4:	andeq	r3, r1, r0, asr #14
   12ff8:	andeq	r3, r1, r0, asr #14
   12ffc:	andeq	r3, r1, r0, asr #14
   13000:	andeq	r3, r1, r0, asr #14
   13004:	andeq	r3, r1, r0, lsr r6
   13008:	andeq	r3, r1, r8, lsl #8
   1300c:	andeq	r3, r1, r0, asr #14
   13010:	andeq	r3, r1, r0, lsr r6
   13014:	andeq	r3, r1, r0, asr #14
   13018:	andeq	r3, r1, r0, lsr r6
   1301c:	andeq	r3, r1, r0, asr #14
   13020:	andeq	r3, r1, r0, asr #14
   13024:	andeq	r3, r1, r0, asr #14
   13028:	andeq	r3, r1, r0, asr #14
   1302c:	andeq	r3, r1, r0, asr #14
   13030:	andeq	r3, r1, r0, asr #14
   13034:	andeq	r3, r1, r0, asr #14
   13038:	andeq	r3, r1, r0, asr #14
   1303c:	andeq	r3, r1, r0, asr #14
   13040:	andeq	r3, r1, r0, asr #14
   13044:	andeq	r3, r1, r0, asr #14
   13048:	andeq	r3, r1, r0, asr #14
   1304c:	andeq	r3, r1, r0, asr #14
   13050:	andeq	r3, r1, r0, asr #14
   13054:	andeq	r3, r1, r0, asr #14
   13058:	andeq	r3, r1, r0, asr #14
   1305c:	andeq	r3, r1, r0, asr #14
   13060:	andeq	r3, r1, r0, asr #14
   13064:	andeq	r3, r1, r0, asr #14
   13068:	andeq	r3, r1, r0, asr #14
   1306c:	andeq	r3, r1, r0, asr #14
   13070:	andeq	r3, r1, r0, asr #14
   13074:	andeq	r3, r1, r0, asr #14
   13078:	andeq	r3, r1, r0, asr #14
   1307c:	andeq	r3, r1, r0, asr #14
   13080:	andeq	r3, r1, r0, asr #14
   13084:	andeq	r3, r1, ip, lsr #4
   13088:	andeq	r3, r1, r0, lsr r6
   1308c:	andeq	r3, r1, ip, lsr #4
   13090:	andeq	r3, r1, ip, lsl #14
   13094:	cmp	r4, #0
   13098:	moveq	r3, #1
   1309c:	streq	r3, [sp, #40]	; 0x28
   130a0:	beq	137b4 <_obstack_memory_used@@Base+0xd7c>
   130a4:	mov	r3, #0
   130a8:	mov	r2, #1
   130ac:	mov	r4, r3
   130b0:	str	r2, [sp, #36]	; 0x24
   130b4:	str	r2, [sp, #44]	; 0x2c
   130b8:	str	r2, [sp, #56]	; 0x38
   130bc:	str	r3, [sp, #68]	; 0x44
   130c0:	movw	r3, #30584	; 0x7778
   130c4:	movt	r3, #1
   130c8:	str	r4, [sp, #40]	; 0x28
   130cc:	mov	r8, #2
   130d0:	str	r4, [sp, #48]	; 0x30
   130d4:	str	r3, [sp, #60]	; 0x3c
   130d8:	str	r4, [sp, #72]	; 0x48
   130dc:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   130e0:	cmp	r4, #0
   130e4:	bne	14330 <_obstack_memory_used@@Base+0x18f8>
   130e8:	cmp	sl, #0
   130ec:	beq	140f0 <_obstack_memory_used@@Base+0x16b8>
   130f0:	mov	r3, #34	; 0x22
   130f4:	mov	r1, r4
   130f8:	mov	r2, #1
   130fc:	strb	r3, [fp]
   13100:	movw	r3, #30564	; 0x7764
   13104:	movt	r3, #1
   13108:	mov	r4, r2
   1310c:	str	r2, [sp, #36]	; 0x24
   13110:	str	r2, [sp, #40]	; 0x28
   13114:	str	r1, [sp, #44]	; 0x2c
   13118:	str	r1, [sp, #48]	; 0x30
   1311c:	str	r2, [sp, #56]	; 0x38
   13120:	str	r3, [sp, #60]	; 0x3c
   13124:	str	r1, [sp, #68]	; 0x44
   13128:	str	r1, [sp, #72]	; 0x48
   1312c:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   13130:	mov	r3, #0
   13134:	mov	r4, r8
   13138:	str	r3, [sp, #40]	; 0x28
   1313c:	str	r3, [sp, #44]	; 0x2c
   13140:	str	r3, [sp, #48]	; 0x30
   13144:	str	r8, [sp, #56]	; 0x38
   13148:	str	r3, [sp, #60]	; 0x3c
   1314c:	str	r3, [sp, #68]	; 0x44
   13150:	mov	r3, #1
   13154:	str	r3, [sp, #36]	; 0x24
   13158:	str	r8, [sp, #72]	; 0x48
   1315c:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   13160:	mov	r3, #1
   13164:	mov	r2, #0
   13168:	mov	r4, r2
   1316c:	mov	r8, #5
   13170:	str	r3, [sp, #36]	; 0x24
   13174:	str	r3, [sp, #40]	; 0x28
   13178:	str	r3, [sp, #44]	; 0x2c
   1317c:	str	r2, [sp, #48]	; 0x30
   13180:	str	r3, [sp, #56]	; 0x38
   13184:	movw	r3, #30564	; 0x7764
   13188:	movt	r3, #1
   1318c:	str	r3, [sp, #60]	; 0x3c
   13190:	str	r2, [sp, #68]	; 0x44
   13194:	str	r2, [sp, #72]	; 0x48
   13198:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   1319c:	mov	r3, #0
   131a0:	mov	r2, #1
   131a4:	mov	r4, r3
   131a8:	str	r2, [sp, #36]	; 0x24
   131ac:	str	r2, [sp, #40]	; 0x28
   131b0:	str	r3, [sp, #44]	; 0x2c
   131b4:	str	r3, [sp, #48]	; 0x30
   131b8:	str	r3, [sp, #56]	; 0x38
   131bc:	str	r3, [sp, #60]	; 0x3c
   131c0:	str	r3, [sp, #68]	; 0x44
   131c4:	str	r3, [sp, #72]	; 0x48
   131c8:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   131cc:	mov	r2, #1
   131d0:	mov	r3, #0
   131d4:	mov	r4, r3
   131d8:	str	r2, [sp, #36]	; 0x24
   131dc:	str	r2, [sp, #44]	; 0x2c
   131e0:	str	r8, [sp, #56]	; 0x38
   131e4:	str	r3, [sp, #68]	; 0x44
   131e8:	b	130c0 <_obstack_memory_used@@Base+0x688>
   131ec:	mov	r3, #1
   131f0:	mov	r2, #0
   131f4:	mov	r4, r2
   131f8:	mov	r8, #2
   131fc:	str	r3, [sp, #36]	; 0x24
   13200:	str	r3, [sp, #40]	; 0x28
   13204:	str	r3, [sp, #44]	; 0x2c
   13208:	str	r2, [sp, #48]	; 0x30
   1320c:	str	r3, [sp, #56]	; 0x38
   13210:	movw	r3, #30584	; 0x7778
   13214:	movt	r3, #1
   13218:	str	r3, [sp, #60]	; 0x3c
   1321c:	str	r2, [sp, #68]	; 0x44
   13220:	str	r2, [sp, #72]	; 0x48
   13224:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   13228:	mov	r7, #0
   1322c:	ldr	r3, [sp, #28]
   13230:	cmn	r3, #1
   13234:	beq	13d0c <_obstack_memory_used@@Base+0x12d4>
   13238:	ldr	r3, [sp, #28]
   1323c:	subs	r2, r3, #1
   13240:	movne	r2, #1
   13244:	sub	r3, fp, #2
   13248:	cmp	r2, #0
   1324c:	clz	r3, r3
   13250:	lsr	r3, r3, #5
   13254:	bne	13260 <_obstack_memory_used@@Base+0x828>
   13258:	cmp	r9, #0
   1325c:	beq	13a6c <_obstack_memory_used@@Base+0x1034>
   13260:	mov	r6, #0
   13264:	ldr	r2, [sp, #40]	; 0x28
   13268:	eor	r2, r2, #1
   1326c:	orrs	r3, r3, r2
   13270:	bne	13448 <_obstack_memory_used@@Base+0xa10>
   13274:	ldr	r2, [sp, #160]	; 0xa0
   13278:	cmp	r2, #0
   1327c:	beq	1329c <_obstack_memory_used@@Base+0x864>
   13280:	ldr	r0, [sp, #160]	; 0xa0
   13284:	ubfx	r1, r5, #5, #8
   13288:	and	r2, r5, #31
   1328c:	ldr	r1, [r0, r1, lsl #2]
   13290:	lsr	r2, r1, r2
   13294:	tst	r2, #1
   13298:	bne	132a4 <_obstack_memory_used@@Base+0x86c>
   1329c:	cmp	r7, #0
   132a0:	beq	13514 <_obstack_memory_used@@Base+0xadc>
   132a4:	ldr	r2, [sp, #44]	; 0x2c
   132a8:	sub	r3, fp, #2
   132ac:	clz	r3, r3
   132b0:	lsr	r3, r3, #5
   132b4:	cmp	r2, #0
   132b8:	bne	14060 <_obstack_memory_used@@Base+0x1628>
   132bc:	ldr	r2, [sp, #48]	; 0x30
   132c0:	eor	r2, r2, #1
   132c4:	ands	r3, r3, r2
   132c8:	beq	13300 <_obstack_memory_used@@Base+0x8c8>
   132cc:	cmp	sl, r4
   132d0:	str	r3, [sp, #48]	; 0x30
   132d4:	movhi	r2, #39	; 0x27
   132d8:	strbhi	r2, [r8, r4]
   132dc:	add	r2, r4, #1
   132e0:	cmp	sl, r2
   132e4:	movhi	r1, #36	; 0x24
   132e8:	strbhi	r1, [r8, r2]
   132ec:	add	r2, r4, #2
   132f0:	add	r4, r4, #3
   132f4:	cmp	sl, r2
   132f8:	movhi	r1, #39	; 0x27
   132fc:	strbhi	r1, [r8, r2]
   13300:	cmp	r4, sl
   13304:	add	r9, r9, #1
   13308:	movcc	r3, #92	; 0x5c
   1330c:	strbcc	r3, [r8, r4]
   13310:	add	r4, r4, #1
   13314:	cmp	r4, sl
   13318:	ldr	r3, [sp, #36]	; 0x24
   1331c:	strbcc	r5, [r8, r4]
   13320:	cmp	r6, #0
   13324:	add	r4, r4, #1
   13328:	moveq	r3, #0
   1332c:	str	r3, [sp, #36]	; 0x24
   13330:	ldr	r3, [sp, #28]
   13334:	cmn	r3, #1
   13338:	bne	12de0 <_obstack_memory_used@@Base+0x3a8>
   1333c:	ldr	r3, [sp, #32]
   13340:	ldrb	r6, [r3, r9]
   13344:	adds	r6, r6, #0
   13348:	movne	r6, #1
   1334c:	cmp	r6, #0
   13350:	bne	12df4 <_obstack_memory_used@@Base+0x3bc>
   13354:	str	fp, [sp, #152]	; 0x98
   13358:	mov	fp, r8
   1335c:	cmp	r4, #0
   13360:	ldr	r1, [sp, #44]	; 0x2c
   13364:	movne	r3, #0
   13368:	ldr	r8, [sp, #152]	; 0x98
   1336c:	sub	r2, r8, #2
   13370:	clz	r2, r2
   13374:	lsr	r2, r2, #5
   13378:	andeq	r3, r2, r1
   1337c:	cmp	r3, #0
   13380:	bne	1443c <_obstack_memory_used@@Base+0x1a04>
   13384:	eor	r3, r1, #1
   13388:	ands	r2, r2, r3
   1338c:	beq	14368 <_obstack_memory_used@@Base+0x1930>
   13390:	ldr	r3, [sp, #68]	; 0x44
   13394:	cmp	r3, #0
   13398:	beq	1436c <_obstack_memory_used@@Base+0x1934>
   1339c:	ldr	r3, [sp, #36]	; 0x24
   133a0:	cmp	r3, #0
   133a4:	bne	143f8 <_obstack_memory_used@@Base+0x19c0>
   133a8:	ldr	r3, [sp, #72]	; 0x48
   133ac:	adds	r3, r3, #0
   133b0:	movne	r3, #1
   133b4:	cmp	sl, #0
   133b8:	movne	r3, #0
   133bc:	cmp	r3, #0
   133c0:	ldreq	r2, [sp, #68]	; 0x44
   133c4:	beq	1436c <_obstack_memory_used@@Base+0x1934>
   133c8:	ldr	r2, [sp, #72]	; 0x48
   133cc:	str	r3, [sp, #68]	; 0x44
   133d0:	movw	r3, #30584	; 0x7778
   133d4:	movt	r3, #1
   133d8:	mov	r1, #39	; 0x27
   133dc:	mov	r4, #1
   133e0:	ldr	sl, [sp, #72]	; 0x48
   133e4:	mov	r8, #2
   133e8:	str	r3, [sp, #60]	; 0x3c
   133ec:	mov	r3, #0
   133f0:	strb	r1, [fp]
   133f4:	str	r3, [sp, #44]	; 0x2c
   133f8:	str	r4, [sp, #56]	; 0x38
   133fc:	str	r2, [sp, #72]	; 0x48
   13400:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   13404:	mov	r7, #0
   13408:	cmp	fp, #2
   1340c:	beq	13cec <_obstack_memory_used@@Base+0x12b4>
   13410:	ldr	r2, [sp, #40]	; 0x28
   13414:	ldr	r3, [sp, #56]	; 0x38
   13418:	ldr	r1, [sp, #44]	; 0x2c
   1341c:	cmp	r3, #0
   13420:	moveq	r3, #0
   13424:	andne	r3, r2, r1
   13428:	cmp	r3, #0
   1342c:	moveq	r5, #92	; 0x5c
   13430:	moveq	r3, r5
   13434:	bne	13cf8 <_obstack_memory_used@@Base+0x12c0>
   13438:	ldr	r2, [sp, #40]	; 0x28
   1343c:	cmp	r2, #0
   13440:	bne	14134 <_obstack_memory_used@@Base+0x16fc>
   13444:	mov	r6, #0
   13448:	ldr	r3, [sp, #44]	; 0x2c
   1344c:	cmp	r3, #0
   13450:	beq	13ce4 <_obstack_memory_used@@Base+0x12ac>
   13454:	mov	r3, #0
   13458:	b	13274 <_obstack_memory_used@@Base+0x83c>
   1345c:	mov	r7, #0
   13460:	cmp	fp, #2
   13464:	beq	13d5c <_obstack_memory_used@@Base+0x1324>
   13468:	cmp	fp, #5
   1346c:	beq	13d20 <_obstack_memory_used@@Base+0x12e8>
   13470:	sub	r3, fp, #2
   13474:	mov	r6, #0
   13478:	clz	r3, r3
   1347c:	mov	r5, #63	; 0x3f
   13480:	lsr	r3, r3, #5
   13484:	b	13264 <_obstack_memory_used@@Base+0x82c>
   13488:	mov	r7, #0
   1348c:	cmp	fp, #2
   13490:	movne	r3, #0
   13494:	movne	r5, #39	; 0x27
   13498:	strne	r6, [sp, #68]	; 0x44
   1349c:	bne	13264 <_obstack_memory_used@@Base+0x82c>
   134a0:	ldr	r3, [sp, #44]	; 0x2c
   134a4:	cmp	r3, #0
   134a8:	bne	14164 <_obstack_memory_used@@Base+0x172c>
   134ac:	ldr	r3, [sp, #72]	; 0x48
   134b0:	cmp	sl, #0
   134b4:	clz	r3, r3
   134b8:	lsr	r3, r3, #5
   134bc:	moveq	r3, #0
   134c0:	cmp	r3, #0
   134c4:	bne	14090 <_obstack_memory_used@@Base+0x1658>
   134c8:	cmp	sl, r4
   134cc:	movhi	r3, #39	; 0x27
   134d0:	strbhi	r3, [r8, r4]
   134d4:	add	r3, r4, #1
   134d8:	cmp	sl, r3
   134dc:	movhi	r2, #92	; 0x5c
   134e0:	strbhi	r2, [r8, r3]
   134e4:	add	r3, r4, #2
   134e8:	cmp	sl, r3
   134ec:	bls	134f8 <_obstack_memory_used@@Base+0xac0>
   134f0:	mov	r2, #39	; 0x27
   134f4:	strb	r2, [r8, r3]
   134f8:	mov	r3, #0
   134fc:	cmp	r7, #0
   13500:	add	r4, r4, #3
   13504:	mov	r5, #39	; 0x27
   13508:	str	r3, [sp, #48]	; 0x30
   1350c:	str	r6, [sp, #68]	; 0x44
   13510:	bne	132a4 <_obstack_memory_used@@Base+0x86c>
   13514:	ldr	r2, [sp, #48]	; 0x30
   13518:	eor	r3, r3, #1
   1351c:	add	r9, r9, #1
   13520:	and	r3, r3, r2
   13524:	uxtb	r3, r3
   13528:	cmp	r3, #0
   1352c:	beq	13314 <_obstack_memory_used@@Base+0x8dc>
   13530:	cmp	sl, r4
   13534:	movhi	r3, #39	; 0x27
   13538:	strbhi	r3, [r8, r4]
   1353c:	add	r3, r4, #1
   13540:	add	r4, r4, #2
   13544:	cmp	sl, r3
   13548:	movhi	r2, #39	; 0x27
   1354c:	strbhi	r2, [r8, r3]
   13550:	mov	r3, #0
   13554:	str	r3, [sp, #48]	; 0x30
   13558:	b	13314 <_obstack_memory_used@@Base+0x8dc>
   1355c:	mov	r3, #118	; 0x76
   13560:	b	13438 <_obstack_memory_used@@Base+0xa00>
   13564:	mov	r3, #116	; 0x74
   13568:	ldr	r2, [sp, #44]	; 0x2c
   1356c:	cmp	fp, #2
   13570:	movne	r2, #0
   13574:	andeq	r2, r2, #1
   13578:	cmp	r2, #0
   1357c:	beq	13438 <_obstack_memory_used@@Base+0xa00>
   13580:	mov	fp, r8
   13584:	mov	r8, #2
   13588:	ldr	r3, [sp, #40]	; 0x28
   1358c:	cmp	r3, #0
   13590:	movne	r8, #4
   13594:	mov	lr, #0
   13598:	mov	r0, fp
   1359c:	ldr	r2, [sp, #32]
   135a0:	ldr	r3, [sp, #156]	; 0x9c
   135a4:	ldr	r1, [sp, #164]	; 0xa4
   135a8:	bic	ip, r3, #2
   135ac:	ldr	r3, [sp, #28]
   135b0:	stm	sp, {r8, ip, lr}
   135b4:	ldr	ip, [sp, #168]	; 0xa8
   135b8:	str	r1, [sp, #12]
   135bc:	mov	r1, sl
   135c0:	str	ip, [sp, #16]
   135c4:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   135c8:	mov	r4, r0
   135cc:	mov	r0, r4
   135d0:	add	sp, sp, #116	; 0x74
   135d4:	ldrd	r4, [sp]
   135d8:	ldrd	r6, [sp, #8]
   135dc:	ldrd	r8, [sp, #16]
   135e0:	ldrd	sl, [sp, #24]
   135e4:	add	sp, sp, #32
   135e8:	pop	{pc}		; (ldr pc, [sp], #4)
   135ec:	mov	r5, #102	; 0x66
   135f0:	ldr	r2, [sp, #44]	; 0x2c
   135f4:	sub	r3, fp, #2
   135f8:	clz	r3, r3
   135fc:	lsr	r3, r3, #5
   13600:	cmp	r2, #0
   13604:	bne	14060 <_obstack_memory_used@@Base+0x1628>
   13608:	mov	r6, r2
   1360c:	b	13300 <_obstack_memory_used@@Base+0x8c8>
   13610:	mov	r5, #110	; 0x6e
   13614:	mov	r6, #0
   13618:	b	132a4 <_obstack_memory_used@@Base+0x86c>
   1361c:	mov	r5, #98	; 0x62
   13620:	b	135f0 <_obstack_memory_used@@Base+0xbb8>
   13624:	mov	r5, #97	; 0x61
   13628:	b	135f0 <_obstack_memory_used@@Base+0xbb8>
   1362c:	mov	r7, #0
   13630:	mov	r6, #0
   13634:	b	13454 <_obstack_memory_used@@Base+0xa1c>
   13638:	mov	r5, #114	; 0x72
   1363c:	b	13614 <_obstack_memory_used@@Base+0xbdc>
   13640:	ldr	r3, [sp, #44]	; 0x2c
   13644:	cmp	r3, #0
   13648:	bne	143d8 <_obstack_memory_used@@Base+0x19a0>
   1364c:	mov	r7, r3
   13650:	ldr	r3, [sp, #48]	; 0x30
   13654:	sub	r2, fp, #2
   13658:	clz	r2, r2
   1365c:	lsr	r2, r2, #5
   13660:	eor	r3, r3, #1
   13664:	ands	r3, r2, r3
   13668:	beq	1407c <_obstack_memory_used@@Base+0x1644>
   1366c:	cmp	sl, r4
   13670:	movhi	r1, #39	; 0x27
   13674:	strbhi	r1, [r8, r4]
   13678:	add	r1, r4, #1
   1367c:	cmp	sl, r1
   13680:	movhi	r0, #36	; 0x24
   13684:	strbhi	r0, [r8, r1]
   13688:	add	r1, r4, #2
   1368c:	cmp	sl, r1
   13690:	movhi	r0, #39	; 0x27
   13694:	strbhi	r0, [r8, r1]
   13698:	add	r1, r4, #3
   1369c:	cmp	sl, r1
   136a0:	bls	140d4 <_obstack_memory_used@@Base+0x169c>
   136a4:	mov	r4, r1
   136a8:	mov	r1, #92	; 0x5c
   136ac:	mov	r0, r4
   136b0:	str	r3, [sp, #48]	; 0x30
   136b4:	strb	r1, [r8, r4]
   136b8:	cmp	fp, #2
   136bc:	add	r4, r4, #1
   136c0:	beq	14124 <_obstack_memory_used@@Base+0x16ec>
   136c4:	ldr	r1, [sp, #28]
   136c8:	add	r3, r9, #1
   136cc:	cmp	r3, r1
   136d0:	bcs	136e8 <_obstack_memory_used@@Base+0xcb0>
   136d4:	ldr	r1, [sp, #32]
   136d8:	ldrb	r3, [r1, r3]
   136dc:	sub	r3, r3, #48	; 0x30
   136e0:	cmp	r3, #9
   136e4:	bls	1413c <_obstack_memory_used@@Base+0x1704>
   136e8:	mov	r5, #48	; 0x30
   136ec:	ldr	r3, [sp, #40]	; 0x28
   136f0:	eor	r3, r3, #1
   136f4:	orrs	r2, r2, r3
   136f8:	mov	r3, r6
   136fc:	moveq	r6, r2
   13700:	beq	13274 <_obstack_memory_used@@Base+0x83c>
   13704:	mov	r6, #0
   13708:	b	1329c <_obstack_memory_used@@Base+0x864>
   1370c:	cmp	r9, #0
   13710:	mov	r2, r7
   13714:	bne	13cb4 <_obstack_memory_used@@Base+0x127c>
   13718:	mov	r6, r7
   1371c:	mov	r3, r9
   13720:	mov	r7, r2
   13724:	b	13264 <_obstack_memory_used@@Base+0x82c>
   13728:	mov	r2, r7
   1372c:	mov	r6, r7
   13730:	mov	r3, #0
   13734:	mov	r7, r2
   13738:	mov	r5, #32
   1373c:	b	13264 <_obstack_memory_used@@Base+0x82c>
   13740:	mov	r6, r7
   13744:	b	13454 <_obstack_memory_used@@Base+0xa1c>
   13748:	mov	r7, #0
   1374c:	ldr	r3, [sp, #64]	; 0x40
   13750:	cmp	r3, #1
   13754:	bne	13d74 <_obstack_memory_used@@Base+0x133c>
   13758:	bl	10ec4 <__ctype_b_loc@plt>
   1375c:	ldr	r2, [r0]
   13760:	sxth	r3, r5
   13764:	lsl	r3, r3, #1
   13768:	ldr	r1, [sp, #64]	; 0x40
   1376c:	ldrh	r3, [r2, r3]
   13770:	mov	ip, r1
   13774:	and	r3, r3, #16384	; 0x4000
   13778:	cmp	r3, #0
   1377c:	ldr	r3, [sp, #40]	; 0x28
   13780:	movne	r6, #1
   13784:	moveq	r6, #0
   13788:	movne	r2, #0
   1378c:	andeq	r2, r3, #1
   13790:	cmp	r2, #0
   13794:	bne	140bc <_obstack_memory_used@@Base+0x1684>
   13798:	sub	r3, fp, #2
   1379c:	clz	r3, r3
   137a0:	lsr	r3, r3, #5
   137a4:	b	13264 <_obstack_memory_used@@Base+0x82c>
   137a8:	cmp	r4, #0
   137ac:	bne	1444c <_obstack_memory_used@@Base+0x1a14>
   137b0:	str	r4, [sp, #40]	; 0x28
   137b4:	cmp	sl, #0
   137b8:	bne	1447c <_obstack_memory_used@@Base+0x1a44>
   137bc:	mov	r3, #1
   137c0:	movw	r2, #30584	; 0x7778
   137c4:	movt	r2, #1
   137c8:	mov	r4, r3
   137cc:	mov	r8, #2
   137d0:	str	r3, [sp, #36]	; 0x24
   137d4:	str	sl, [sp, #44]	; 0x2c
   137d8:	str	sl, [sp, #48]	; 0x30
   137dc:	str	r3, [sp, #56]	; 0x38
   137e0:	str	r2, [sp, #60]	; 0x3c
   137e4:	str	sl, [sp, #68]	; 0x44
   137e8:	str	sl, [sp, #72]	; 0x48
   137ec:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   137f0:	ldr	r3, [sp, #32]
   137f4:	ldrb	r5, [r3, r9]
   137f8:	cmp	r5, #126	; 0x7e
   137fc:	ldrls	pc, [pc, r5, lsl #2]
   13800:	b	1374c <_obstack_memory_used@@Base+0xd14>
   13804:	andeq	r3, r1, r8, lsr #20
   13808:	andeq	r3, r1, ip, asr #14
   1380c:	andeq	r3, r1, ip, asr #14
   13810:	andeq	r3, r1, ip, asr #14
   13814:	andeq	r3, r1, ip, asr #14
   13818:	andeq	r3, r1, ip, asr #14
   1381c:	andeq	r3, r1, ip, asr #14
   13820:	andeq	r3, r1, r0, lsr #20
   13824:	andeq	r3, r1, r8, lsl sl
   13828:	andeq	r3, r1, r4, ror #10
   1382c:	andeq	r3, r1, r0, lsl sl
   13830:	andeq	r3, r1, ip, asr r5
   13834:	andeq	r3, r1, r8, lsl #20
   13838:	andeq	r3, r1, r0, lsl #20
   1383c:	andeq	r3, r1, ip, asr #14
   13840:	andeq	r3, r1, ip, asr #14
   13844:	andeq	r3, r1, ip, asr #14
   13848:	andeq	r3, r1, ip, asr #14
   1384c:	andeq	r3, r1, ip, asr #14
   13850:	andeq	r3, r1, ip, asr #14
   13854:	andeq	r3, r1, ip, asr #14
   13858:	andeq	r3, r1, ip, asr #14
   1385c:	andeq	r3, r1, ip, asr #14
   13860:	andeq	r3, r1, ip, asr #14
   13864:	andeq	r3, r1, ip, asr #14
   13868:	andeq	r3, r1, ip, asr #14
   1386c:	andeq	r3, r1, ip, asr #14
   13870:	andeq	r3, r1, ip, asr #14
   13874:	andeq	r3, r1, ip, asr #14
   13878:	andeq	r3, r1, ip, asr #14
   1387c:	andeq	r3, r1, ip, asr #14
   13880:	andeq	r3, r1, ip, asr #14
   13884:	andeq	r3, r1, ip, ror sl
   13888:	andeq	r3, r1, ip, asr sl
   1388c:	andeq	r3, r1, ip, asr sl
   13890:	andeq	r3, r1, ip, asr #20
   13894:	andeq	r3, r1, ip, asr sl
   13898:	muleq	r1, r8, r7
   1389c:	andeq	r3, r1, ip, asr sl
   138a0:	andeq	r3, r1, ip, lsl #9
   138a4:	andeq	r3, r1, ip, asr sl
   138a8:	andeq	r3, r1, ip, asr sl
   138ac:	andeq	r3, r1, ip, asr sl
   138b0:	muleq	r1, r8, r7
   138b4:	muleq	r1, r8, r7
   138b8:	muleq	r1, r8, r7
   138bc:	muleq	r1, r8, r7
   138c0:	muleq	r1, r8, r7
   138c4:	muleq	r1, r8, r7
   138c8:	muleq	r1, r8, r7
   138cc:	muleq	r1, r8, r7
   138d0:	muleq	r1, r8, r7
   138d4:	muleq	r1, r8, r7
   138d8:	muleq	r1, r8, r7
   138dc:	muleq	r1, r8, r7
   138e0:	muleq	r1, r8, r7
   138e4:	muleq	r1, r8, r7
   138e8:	muleq	r1, r8, r7
   138ec:	muleq	r1, r8, r7
   138f0:	andeq	r3, r1, ip, asr sl
   138f4:	andeq	r3, r1, ip, asr sl
   138f8:	andeq	r3, r1, ip, asr sl
   138fc:	andeq	r3, r1, ip, asr sl
   13900:	andeq	r3, r1, r0, ror #8
   13904:	andeq	r3, r1, ip, asr #14
   13908:	muleq	r1, r8, r7
   1390c:	muleq	r1, r8, r7
   13910:	muleq	r1, r8, r7
   13914:	muleq	r1, r8, r7
   13918:	muleq	r1, r8, r7
   1391c:	muleq	r1, r8, r7
   13920:	muleq	r1, r8, r7
   13924:	muleq	r1, r8, r7
   13928:	muleq	r1, r8, r7
   1392c:	muleq	r1, r8, r7
   13930:	muleq	r1, r8, r7
   13934:	muleq	r1, r8, r7
   13938:	muleq	r1, r8, r7
   1393c:	muleq	r1, r8, r7
   13940:	muleq	r1, r8, r7
   13944:	muleq	r1, r8, r7
   13948:	muleq	r1, r8, r7
   1394c:	muleq	r1, r8, r7
   13950:	muleq	r1, r8, r7
   13954:	muleq	r1, r8, r7
   13958:	muleq	r1, r8, r7
   1395c:	muleq	r1, r8, r7
   13960:	muleq	r1, r8, r7
   13964:	muleq	r1, r8, r7
   13968:	muleq	r1, r8, r7
   1396c:	muleq	r1, r8, r7
   13970:	andeq	r3, r1, ip, asr sl
   13974:	andeq	r3, r1, r8, lsl #8
   13978:	muleq	r1, r8, r7
   1397c:	andeq	r3, r1, ip, asr sl
   13980:	muleq	r1, r8, r7
   13984:	andeq	r3, r1, ip, asr sl
   13988:	muleq	r1, r8, r7
   1398c:	muleq	r1, r8, r7
   13990:	muleq	r1, r8, r7
   13994:	muleq	r1, r8, r7
   13998:	muleq	r1, r8, r7
   1399c:	muleq	r1, r8, r7
   139a0:	muleq	r1, r8, r7
   139a4:	muleq	r1, r8, r7
   139a8:	muleq	r1, r8, r7
   139ac:	muleq	r1, r8, r7
   139b0:	muleq	r1, r8, r7
   139b4:	muleq	r1, r8, r7
   139b8:	muleq	r1, r8, r7
   139bc:	muleq	r1, r8, r7
   139c0:	muleq	r1, r8, r7
   139c4:	muleq	r1, r8, r7
   139c8:	muleq	r1, r8, r7
   139cc:	muleq	r1, r8, r7
   139d0:	muleq	r1, r8, r7
   139d4:	muleq	r1, r8, r7
   139d8:	muleq	r1, r8, r7
   139dc:	muleq	r1, r8, r7
   139e0:	muleq	r1, r8, r7
   139e4:	muleq	r1, r8, r7
   139e8:	muleq	r1, r8, r7
   139ec:	muleq	r1, r8, r7
   139f0:	andeq	r3, r1, ip, lsr #4
   139f4:	andeq	r3, r1, ip, asr sl
   139f8:	andeq	r3, r1, ip, lsr #4
   139fc:	andeq	r3, r1, ip, asr #20
   13a00:	mov	r3, #114	; 0x72
   13a04:	b	13568 <_obstack_memory_used@@Base+0xb30>
   13a08:	mov	r3, #102	; 0x66
   13a0c:	b	13438 <_obstack_memory_used@@Base+0xa00>
   13a10:	mov	r3, #110	; 0x6e
   13a14:	b	13568 <_obstack_memory_used@@Base+0xb30>
   13a18:	mov	r3, #98	; 0x62
   13a1c:	b	13438 <_obstack_memory_used@@Base+0xa00>
   13a20:	mov	r3, #97	; 0x61
   13a24:	b	13438 <_obstack_memory_used@@Base+0xa00>
   13a28:	ldr	r3, [sp, #40]	; 0x28
   13a2c:	cmp	r3, #0
   13a30:	bne	13640 <_obstack_memory_used@@Base+0xc08>
   13a34:	ldr	r3, [sp, #156]	; 0x9c
   13a38:	tst	r3, #1
   13a3c:	addne	r9, r9, #1
   13a40:	bne	12dd4 <_obstack_memory_used@@Base+0x39c>
   13a44:	ldr	r7, [sp, #40]	; 0x28
   13a48:	b	13444 <_obstack_memory_used@@Base+0xa0c>
   13a4c:	sub	r3, fp, #2
   13a50:	clz	r3, r3
   13a54:	lsr	r3, r3, #5
   13a58:	b	13258 <_obstack_memory_used@@Base+0x820>
   13a5c:	sub	r3, fp, #2
   13a60:	mov	r6, #0
   13a64:	clz	r3, r3
   13a68:	lsr	r3, r3, #5
   13a6c:	ldr	r2, [sp, #44]	; 0x2c
   13a70:	tst	r2, r3
   13a74:	beq	13264 <_obstack_memory_used@@Base+0x82c>
   13a78:	b	13580 <_obstack_memory_used@@Base+0xb48>
   13a7c:	sub	r3, fp, #2
   13a80:	clz	r3, r3
   13a84:	lsr	r3, r3, #5
   13a88:	b	13a6c <_obstack_memory_used@@Base+0x1034>
   13a8c:	ldr	r3, [sp, #52]	; 0x34
   13a90:	ldrb	r5, [r3]
   13a94:	cmp	r5, #126	; 0x7e
   13a98:	ldrls	pc, [pc, r5, lsl #2]
   13a9c:	b	13748 <_obstack_memory_used@@Base+0xd10>
   13aa0:	andeq	r3, r1, r0, asr #12
   13aa4:	andeq	r3, r1, r8, asr #14
   13aa8:	andeq	r3, r1, r8, asr #14
   13aac:	andeq	r3, r1, r8, asr #14
   13ab0:	andeq	r3, r1, r8, asr #14
   13ab4:	andeq	r3, r1, r8, asr #14
   13ab8:	andeq	r3, r1, r8, asr #14
   13abc:	andeq	r3, r1, r4, lsr #12
   13ac0:	andeq	r3, r1, ip, lsl r6
   13ac4:	ldrdeq	r3, [r1], -r8
   13ac8:	andeq	r3, r1, r0, lsl r6
   13acc:	andeq	r3, r1, ip, asr #25
   13ad0:	andeq	r3, r1, ip, ror #11
   13ad4:	andeq	r3, r1, r8, lsr r6
   13ad8:	andeq	r3, r1, r8, asr #14
   13adc:	andeq	r3, r1, r8, asr #14
   13ae0:	andeq	r3, r1, r8, asr #14
   13ae4:	andeq	r3, r1, r8, asr #14
   13ae8:	andeq	r3, r1, r8, asr #14
   13aec:	andeq	r3, r1, r8, asr #14
   13af0:	andeq	r3, r1, r8, asr #14
   13af4:	andeq	r3, r1, r8, asr #14
   13af8:	andeq	r3, r1, r8, asr #14
   13afc:	andeq	r3, r1, r8, asr #14
   13b00:	andeq	r3, r1, r8, asr #14
   13b04:	andeq	r3, r1, r8, asr #14
   13b08:	andeq	r3, r1, r8, asr #14
   13b0c:	andeq	r3, r1, r8, asr #14
   13b10:	andeq	r3, r1, r8, asr #14
   13b14:	andeq	r3, r1, r8, asr #14
   13b18:	andeq	r3, r1, r8, asr #14
   13b1c:	andeq	r3, r1, r8, asr #14
   13b20:	andeq	r3, r1, r4, asr #25
   13b24:	andeq	r3, r1, ip, lsr #12
   13b28:	andeq	r3, r1, ip, lsr #12
   13b2c:	andeq	r3, r1, r8, lsr #25
   13b30:	andeq	r3, r1, ip, lsr #12
   13b34:	muleq	r1, ip, ip
   13b38:	andeq	r3, r1, ip, lsr #12
   13b3c:	andeq	r3, r1, r8, lsl #9
   13b40:	andeq	r3, r1, ip, lsr #12
   13b44:	andeq	r3, r1, ip, lsr #12
   13b48:	andeq	r3, r1, ip, lsr #12
   13b4c:	muleq	r1, ip, ip
   13b50:	muleq	r1, ip, ip
   13b54:	muleq	r1, ip, ip
   13b58:	muleq	r1, ip, ip
   13b5c:	muleq	r1, ip, ip
   13b60:	muleq	r1, ip, ip
   13b64:	muleq	r1, ip, ip
   13b68:	muleq	r1, ip, ip
   13b6c:	muleq	r1, ip, ip
   13b70:	muleq	r1, ip, ip
   13b74:	muleq	r1, ip, ip
   13b78:	muleq	r1, ip, ip
   13b7c:	muleq	r1, ip, ip
   13b80:	muleq	r1, ip, ip
   13b84:	muleq	r1, ip, ip
   13b88:	muleq	r1, ip, ip
   13b8c:	andeq	r3, r1, ip, lsr #12
   13b90:	andeq	r3, r1, ip, lsr #12
   13b94:	andeq	r3, r1, ip, lsr #12
   13b98:	andeq	r3, r1, ip, lsr #12
   13b9c:	andeq	r3, r1, ip, asr r4
   13ba0:	andeq	r3, r1, r8, asr #14
   13ba4:	muleq	r1, ip, ip
   13ba8:	muleq	r1, ip, ip
   13bac:	muleq	r1, ip, ip
   13bb0:	muleq	r1, ip, ip
   13bb4:	muleq	r1, ip, ip
   13bb8:	muleq	r1, ip, ip
   13bbc:	muleq	r1, ip, ip
   13bc0:	muleq	r1, ip, ip
   13bc4:	muleq	r1, ip, ip
   13bc8:	muleq	r1, ip, ip
   13bcc:	muleq	r1, ip, ip
   13bd0:	muleq	r1, ip, ip
   13bd4:	muleq	r1, ip, ip
   13bd8:	muleq	r1, ip, ip
   13bdc:	muleq	r1, ip, ip
   13be0:	muleq	r1, ip, ip
   13be4:	muleq	r1, ip, ip
   13be8:	muleq	r1, ip, ip
   13bec:	muleq	r1, ip, ip
   13bf0:	muleq	r1, ip, ip
   13bf4:	muleq	r1, ip, ip
   13bf8:	muleq	r1, ip, ip
   13bfc:	muleq	r1, ip, ip
   13c00:	muleq	r1, ip, ip
   13c04:	muleq	r1, ip, ip
   13c08:	muleq	r1, ip, ip
   13c0c:	andeq	r3, r1, ip, lsr #12
   13c10:	andeq	r3, r1, r4, lsl #8
   13c14:	muleq	r1, ip, ip
   13c18:	andeq	r3, r1, ip, lsr #12
   13c1c:	muleq	r1, ip, ip
   13c20:	andeq	r3, r1, ip, lsr #12
   13c24:	muleq	r1, ip, ip
   13c28:	muleq	r1, ip, ip
   13c2c:	muleq	r1, ip, ip
   13c30:	muleq	r1, ip, ip
   13c34:	muleq	r1, ip, ip
   13c38:	muleq	r1, ip, ip
   13c3c:	muleq	r1, ip, ip
   13c40:	muleq	r1, ip, ip
   13c44:	muleq	r1, ip, ip
   13c48:	muleq	r1, ip, ip
   13c4c:	muleq	r1, ip, ip
   13c50:	muleq	r1, ip, ip
   13c54:	muleq	r1, ip, ip
   13c58:	muleq	r1, ip, ip
   13c5c:	muleq	r1, ip, ip
   13c60:	muleq	r1, ip, ip
   13c64:	muleq	r1, ip, ip
   13c68:	muleq	r1, ip, ip
   13c6c:	muleq	r1, ip, ip
   13c70:	muleq	r1, ip, ip
   13c74:	muleq	r1, ip, ip
   13c78:	muleq	r1, ip, ip
   13c7c:	muleq	r1, ip, ip
   13c80:	muleq	r1, ip, ip
   13c84:	muleq	r1, ip, ip
   13c88:	muleq	r1, ip, ip
   13c8c:	andeq	r3, r1, r8, lsr #4
   13c90:	andeq	r3, r1, ip, lsr #12
   13c94:	andeq	r3, r1, r8, lsr #4
   13c98:	andeq	r3, r1, r8, lsr #25
   13c9c:	mov	r6, r7
   13ca0:	mov	r7, #0
   13ca4:	b	13454 <_obstack_memory_used@@Base+0xa1c>
   13ca8:	cmp	r9, #0
   13cac:	mov	r2, #0
   13cb0:	beq	13718 <_obstack_memory_used@@Base+0xce0>
   13cb4:	mov	r6, #0
   13cb8:	mov	r7, r2
   13cbc:	mov	r3, r6
   13cc0:	b	13274 <_obstack_memory_used@@Base+0x83c>
   13cc4:	mov	r2, #0
   13cc8:	b	1372c <_obstack_memory_used@@Base+0xcf4>
   13ccc:	mov	r7, #0
   13cd0:	mov	r3, #118	; 0x76
   13cd4:	b	13438 <_obstack_memory_used@@Base+0xa00>
   13cd8:	mov	r7, #0
   13cdc:	mov	r3, #116	; 0x74
   13ce0:	b	13568 <_obstack_memory_used@@Base+0xb30>
   13ce4:	ldr	r3, [sp, #44]	; 0x2c
   13ce8:	b	1329c <_obstack_memory_used@@Base+0x864>
   13cec:	ldr	r3, [sp, #44]	; 0x2c
   13cf0:	cmp	r3, #0
   13cf4:	bne	14164 <_obstack_memory_used@@Base+0x172c>
   13cf8:	add	r9, r9, #1
   13cfc:	mov	r6, #0
   13d00:	ldr	r3, [sp, #48]	; 0x30
   13d04:	mov	r5, #92	; 0x5c
   13d08:	b	13528 <_obstack_memory_used@@Base+0xaf0>
   13d0c:	ldr	r3, [sp, #32]
   13d10:	ldrb	r2, [r3, #1]
   13d14:	adds	r2, r2, #0
   13d18:	movne	r2, #1
   13d1c:	b	13244 <_obstack_memory_used@@Base+0x80c>
   13d20:	ldr	r3, [sp, #156]	; 0x9c
   13d24:	ands	r3, r3, #4
   13d28:	beq	13d50 <_obstack_memory_used@@Base+0x1318>
   13d2c:	ldr	r2, [sp, #28]
   13d30:	add	r3, r9, #2
   13d34:	cmp	r3, r2
   13d38:	bcs	13d4c <_obstack_memory_used@@Base+0x1314>
   13d3c:	ldr	r2, [sp, #52]	; 0x34
   13d40:	ldrb	r5, [r2, #1]
   13d44:	cmp	r5, #63	; 0x3f
   13d48:	beq	141c8 <_obstack_memory_used@@Base+0x1790>
   13d4c:	mov	r3, #0
   13d50:	mov	r5, #63	; 0x3f
   13d54:	mov	r6, r3
   13d58:	b	13264 <_obstack_memory_used@@Base+0x82c>
   13d5c:	ldr	r3, [sp, #44]	; 0x2c
   13d60:	cmp	r3, #0
   13d64:	bne	14164 <_obstack_memory_used@@Base+0x172c>
   13d68:	mov	r6, r3
   13d6c:	mov	r5, #63	; 0x3f
   13d70:	b	1329c <_obstack_memory_used@@Base+0x864>
   13d74:	ldr	r1, [sp, #28]
   13d78:	mov	r2, #0
   13d7c:	mov	r3, #0
   13d80:	strd	r2, [sp, #104]	; 0x68
   13d84:	cmn	r1, #1
   13d88:	bne	13d98 <_obstack_memory_used@@Base+0x1360>
   13d8c:	ldr	r0, [sp, #32]
   13d90:	bl	10edc <strlen@plt>
   13d94:	str	r0, [sp, #28]
   13d98:	str	r8, [sp, #76]	; 0x4c
   13d9c:	mov	r3, #0
   13da0:	str	sl, [sp, #80]	; 0x50
   13da4:	ldr	sl, [sp, #32]
   13da8:	str	r5, [sp, #84]	; 0x54
   13dac:	mov	r5, r3
   13db0:	ldr	r8, [sp, #44]	; 0x2c
   13db4:	str	r7, [sp, #88]	; 0x58
   13db8:	str	r4, [sp, #92]	; 0x5c
   13dbc:	ldr	r2, [sp, #28]
   13dc0:	add	r4, r9, r5
   13dc4:	add	r3, sp, #104	; 0x68
   13dc8:	add	r7, sl, r4
   13dcc:	add	r0, sp, #100	; 0x64
   13dd0:	mov	r1, r7
   13dd4:	sub	r2, r2, r4
   13dd8:	bl	159a0 <_obstack_memory_used@@Base+0x2f68>
   13ddc:	subs	r1, r0, #0
   13de0:	beq	13e2c <_obstack_memory_used@@Base+0x13f4>
   13de4:	cmn	r1, #1
   13de8:	beq	141a4 <_obstack_memory_used@@Base+0x176c>
   13dec:	cmn	r1, #2
   13df0:	beq	142c4 <_obstack_memory_used@@Base+0x188c>
   13df4:	cmp	fp, #2
   13df8:	movne	r3, #0
   13dfc:	andeq	r3, r8, #1
   13e00:	cmp	r3, #0
   13e04:	bne	13f90 <_obstack_memory_used@@Base+0x1558>
   13e08:	ldr	r0, [sp, #100]	; 0x64
   13e0c:	add	r5, r5, r1
   13e10:	bl	10df8 <iswprint@plt>
   13e14:	cmp	r0, #0
   13e18:	add	r0, sp, #104	; 0x68
   13e1c:	moveq	r6, #0
   13e20:	bl	10d98 <mbsinit@plt>
   13e24:	cmp	r0, #0
   13e28:	beq	13dbc <_obstack_memory_used@@Base+0x1384>
   13e2c:	ldr	r3, [sp, #40]	; 0x28
   13e30:	mov	ip, r5
   13e34:	eor	r2, r6, #1
   13e38:	ldr	r8, [sp, #76]	; 0x4c
   13e3c:	ldr	sl, [sp, #80]	; 0x50
   13e40:	and	r2, r2, r3
   13e44:	ldr	r5, [sp, #84]	; 0x54
   13e48:	ldr	r7, [sp, #88]	; 0x58
   13e4c:	ldr	r4, [sp, #92]	; 0x5c
   13e50:	cmp	ip, #1
   13e54:	bls	13790 <_obstack_memory_used@@Base+0xd58>
   13e58:	add	r1, ip, r9
   13e5c:	mov	r0, #39	; 0x27
   13e60:	ldr	lr, [sp, #52]	; 0x34
   13e64:	mov	ip, #0
   13e68:	str	r6, [sp, #52]	; 0x34
   13e6c:	ldr	r6, [sp, #48]	; 0x30
   13e70:	b	13f2c <_obstack_memory_used@@Base+0x14f4>
   13e74:	ldr	ip, [sp, #44]	; 0x2c
   13e78:	sub	r3, fp, #2
   13e7c:	clz	r3, r3
   13e80:	lsr	r3, r3, #5
   13e84:	cmp	ip, #0
   13e88:	bne	1409c <_obstack_memory_used@@Base+0x1664>
   13e8c:	eor	ip, r6, #1
   13e90:	ands	r3, r3, ip
   13e94:	beq	13ec4 <_obstack_memory_used@@Base+0x148c>
   13e98:	cmp	sl, r4
   13e9c:	add	ip, r4, #1
   13ea0:	strbhi	r0, [r8, r4]
   13ea4:	cmp	sl, ip
   13ea8:	movhi	r6, #36	; 0x24
   13eac:	strbhi	r6, [r8, ip]
   13eb0:	add	ip, r4, #2
   13eb4:	mov	r6, r3
   13eb8:	cmp	sl, ip
   13ebc:	add	r4, r4, #3
   13ec0:	strbhi	r0, [r8, ip]
   13ec4:	cmp	sl, r4
   13ec8:	movhi	r3, #92	; 0x5c
   13ecc:	strbhi	r3, [r8, r4]
   13ed0:	add	r3, r4, #1
   13ed4:	cmp	sl, r3
   13ed8:	bls	13ee8 <_obstack_memory_used@@Base+0x14b0>
   13edc:	lsr	ip, r5, #6
   13ee0:	add	ip, ip, #48	; 0x30
   13ee4:	strb	ip, [r8, r3]
   13ee8:	add	r3, r4, #2
   13eec:	cmp	sl, r3
   13ef0:	bls	13f00 <_obstack_memory_used@@Base+0x14c8>
   13ef4:	ubfx	ip, r5, #3, #3
   13ef8:	add	ip, ip, #48	; 0x30
   13efc:	strb	ip, [r8, r3]
   13f00:	add	r9, r9, #1
   13f04:	and	r5, r5, #7
   13f08:	cmp	r9, r1
   13f0c:	add	r5, r5, #48	; 0x30
   13f10:	add	r4, r4, #3
   13f14:	bcs	140c8 <_obstack_memory_used@@Base+0x1690>
   13f18:	mov	ip, r2
   13f1c:	cmp	sl, r4
   13f20:	strbhi	r5, [r8, r4]
   13f24:	add	r4, r4, #1
   13f28:	ldrb	r5, [lr, #1]!
   13f2c:	cmp	r2, #0
   13f30:	bne	13e74 <_obstack_memory_used@@Base+0x143c>
   13f34:	eor	r3, ip, #1
   13f38:	cmp	r7, #0
   13f3c:	and	r3, r3, r6
   13f40:	uxtb	r3, r3
   13f44:	beq	13f58 <_obstack_memory_used@@Base+0x1520>
   13f48:	cmp	sl, r4
   13f4c:	movhi	r7, #92	; 0x5c
   13f50:	strbhi	r7, [r8, r4]
   13f54:	add	r4, r4, #1
   13f58:	add	r9, r9, #1
   13f5c:	cmp	r9, r1
   13f60:	bcs	140b0 <_obstack_memory_used@@Base+0x1678>
   13f64:	cmp	r3, #0
   13f68:	beq	140e8 <_obstack_memory_used@@Base+0x16b0>
   13f6c:	cmp	sl, r4
   13f70:	add	r3, r4, #1
   13f74:	mov	r7, #0
   13f78:	strbhi	r0, [r8, r4]
   13f7c:	cmp	sl, r3
   13f80:	add	r4, r4, #2
   13f84:	mov	r6, r7
   13f88:	strbhi	r0, [r8, r3]
   13f8c:	b	13f1c <_obstack_memory_used@@Base+0x14e4>
   13f90:	cmp	r1, #1
   13f94:	beq	13e08 <_obstack_memory_used@@Base+0x13d0>
   13f98:	add	r2, r4, #1
   13f9c:	add	r3, sl, r1
   13fa0:	add	r2, sl, r2
   13fa4:	add	r4, r3, r4
   13fa8:	ldrb	r3, [r2], #1
   13fac:	sub	r3, r3, #91	; 0x5b
   13fb0:	cmp	r3, #33	; 0x21
   13fb4:	ldrls	pc, [pc, r3, lsl #2]
   13fb8:	b	14044 <_obstack_memory_used@@Base+0x160c>
   13fbc:	andeq	r4, r1, r0, asr r0
   13fc0:	andeq	r4, r1, r0, asr r0
   13fc4:	andeq	r4, r1, r4, asr #32
   13fc8:	andeq	r4, r1, r0, asr r0
   13fcc:	andeq	r4, r1, r4, asr #32
   13fd0:	andeq	r4, r1, r0, asr r0
   13fd4:	andeq	r4, r1, r4, asr #32
   13fd8:	andeq	r4, r1, r4, asr #32
   13fdc:	andeq	r4, r1, r4, asr #32
   13fe0:	andeq	r4, r1, r4, asr #32
   13fe4:	andeq	r4, r1, r4, asr #32
   13fe8:	andeq	r4, r1, r4, asr #32
   13fec:	andeq	r4, r1, r4, asr #32
   13ff0:	andeq	r4, r1, r4, asr #32
   13ff4:	andeq	r4, r1, r4, asr #32
   13ff8:	andeq	r4, r1, r4, asr #32
   13ffc:	andeq	r4, r1, r4, asr #32
   14000:	andeq	r4, r1, r4, asr #32
   14004:	andeq	r4, r1, r4, asr #32
   14008:	andeq	r4, r1, r4, asr #32
   1400c:	andeq	r4, r1, r4, asr #32
   14010:	andeq	r4, r1, r4, asr #32
   14014:	andeq	r4, r1, r4, asr #32
   14018:	andeq	r4, r1, r4, asr #32
   1401c:	andeq	r4, r1, r4, asr #32
   14020:	andeq	r4, r1, r4, asr #32
   14024:	andeq	r4, r1, r4, asr #32
   14028:	andeq	r4, r1, r4, asr #32
   1402c:	andeq	r4, r1, r4, asr #32
   14030:	andeq	r4, r1, r4, asr #32
   14034:	andeq	r4, r1, r4, asr #32
   14038:	andeq	r4, r1, r4, asr #32
   1403c:	andeq	r4, r1, r4, asr #32
   14040:	andeq	r4, r1, r0, asr r0
   14044:	cmp	r4, r2
   14048:	bne	13fa8 <_obstack_memory_used@@Base+0x1570>
   1404c:	b	13e08 <_obstack_memory_used@@Base+0x13d0>
   14050:	mov	r8, #2
   14054:	ldr	fp, [sp, #76]	; 0x4c
   14058:	ldr	sl, [sp, #80]	; 0x50
   1405c:	b	13588 <_obstack_memory_used@@Base+0xb50>
   14060:	ldr	r2, [sp, #40]	; 0x28
   14064:	str	fp, [sp, #152]	; 0x98
   14068:	mov	fp, r8
   1406c:	ldr	r8, [sp, #152]	; 0x98
   14070:	and	r2, r2, r3
   14074:	str	r2, [sp, #40]	; 0x28
   14078:	b	13588 <_obstack_memory_used@@Base+0xb50>
   1407c:	cmp	sl, r4
   14080:	movls	r0, r4
   14084:	bls	136b8 <_obstack_memory_used@@Base+0xc80>
   14088:	ldr	r3, [sp, #48]	; 0x30
   1408c:	b	136a8 <_obstack_memory_used@@Base+0xc70>
   14090:	str	sl, [sp, #72]	; 0x48
   14094:	ldr	sl, [sp, #44]	; 0x2c
   14098:	b	134f8 <_obstack_memory_used@@Base+0xac0>
   1409c:	str	r3, [sp, #40]	; 0x28
   140a0:	str	fp, [sp, #152]	; 0x98
   140a4:	mov	fp, r8
   140a8:	ldr	r8, [sp, #152]	; 0x98
   140ac:	b	13588 <_obstack_memory_used@@Base+0xb50>
   140b0:	str	r6, [sp, #48]	; 0x30
   140b4:	ldr	r6, [sp, #52]	; 0x34
   140b8:	b	13528 <_obstack_memory_used@@Base+0xaf0>
   140bc:	mov	r6, #0
   140c0:	ldr	r2, [sp, #40]	; 0x28
   140c4:	b	13e58 <_obstack_memory_used@@Base+0x1420>
   140c8:	str	r6, [sp, #48]	; 0x30
   140cc:	ldr	r6, [sp, #52]	; 0x34
   140d0:	b	13314 <_obstack_memory_used@@Base+0x8dc>
   140d4:	add	r4, r4, #4
   140d8:	mov	r6, #0
   140dc:	str	r3, [sp, #48]	; 0x30
   140e0:	mov	r5, #48	; 0x30
   140e4:	b	1329c <_obstack_memory_used@@Base+0x864>
   140e8:	mov	r7, r3
   140ec:	b	13f1c <_obstack_memory_used@@Base+0x14e4>
   140f0:	mov	r3, #1
   140f4:	movw	r2, #30564	; 0x7764
   140f8:	movt	r2, #1
   140fc:	mov	r4, r3
   14100:	str	r3, [sp, #36]	; 0x24
   14104:	str	r3, [sp, #40]	; 0x28
   14108:	str	sl, [sp, #44]	; 0x2c
   1410c:	str	sl, [sp, #48]	; 0x30
   14110:	str	r3, [sp, #56]	; 0x38
   14114:	str	r2, [sp, #60]	; 0x3c
   14118:	str	sl, [sp, #68]	; 0x44
   1411c:	str	sl, [sp, #72]	; 0x48
   14120:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   14124:	mov	r3, r6
   14128:	mov	r5, #48	; 0x30
   1412c:	mov	r6, #0
   14130:	b	1329c <_obstack_memory_used@@Base+0x864>
   14134:	mov	r5, r3
   14138:	b	13614 <_obstack_memory_used@@Base+0xbdc>
   1413c:	cmp	sl, r4
   14140:	mov	r5, #48	; 0x30
   14144:	movhi	r3, #48	; 0x30
   14148:	strbhi	r3, [r8, r4]
   1414c:	add	r3, r0, #2
   14150:	add	r4, r0, #3
   14154:	cmp	sl, r3
   14158:	movhi	r1, #48	; 0x30
   1415c:	strbhi	r1, [r8, r3]
   14160:	b	136ec <_obstack_memory_used@@Base+0xcb4>
   14164:	str	fp, [sp, #152]	; 0x98
   14168:	mov	fp, r8
   1416c:	ldr	r8, [sp, #152]	; 0x98
   14170:	b	13588 <_obstack_memory_used@@Base+0xb50>
   14174:	ldr	r3, [sp, #164]	; 0xa4
   14178:	ldrb	r3, [r3]
   1417c:	cmp	r3, #0
   14180:	beq	12d94 <_obstack_memory_used@@Base+0x35c>
   14184:	ldr	r2, [sp, #164]	; 0xa4
   14188:	cmp	sl, r4
   1418c:	strbhi	r3, [fp, r4]
   14190:	add	r4, r4, #1
   14194:	ldrb	r3, [r2, #1]!
   14198:	cmp	r3, #0
   1419c:	bne	14188 <_obstack_memory_used@@Base+0x1750>
   141a0:	b	12d94 <_obstack_memory_used@@Base+0x35c>
   141a4:	mov	ip, r5
   141a8:	mov	r6, #0
   141ac:	ldr	r2, [sp, #40]	; 0x28
   141b0:	ldr	r8, [sp, #76]	; 0x4c
   141b4:	ldr	sl, [sp, #80]	; 0x50
   141b8:	ldr	r5, [sp, #84]	; 0x54
   141bc:	ldr	r7, [sp, #88]	; 0x58
   141c0:	ldr	r4, [sp, #92]	; 0x5c
   141c4:	b	13e50 <_obstack_memory_used@@Base+0x1418>
   141c8:	ldr	r2, [sp, #32]
   141cc:	ldrb	r1, [r2, r3]
   141d0:	sub	r2, r1, #33	; 0x21
   141d4:	cmp	r2, #29
   141d8:	ldrls	pc, [pc, r2, lsl #2]
   141dc:	b	142b8 <_obstack_memory_used@@Base+0x1880>
   141e0:	andeq	r4, r1, r8, asr r2
   141e4:			; <UNDEFINED> instruction: 0x000142b8
   141e8:			; <UNDEFINED> instruction: 0x000142b8
   141ec:			; <UNDEFINED> instruction: 0x000142b8
   141f0:			; <UNDEFINED> instruction: 0x000142b8
   141f4:			; <UNDEFINED> instruction: 0x000142b8
   141f8:	andeq	r4, r1, r8, asr r2
   141fc:	andeq	r4, r1, r8, asr r2
   14200:	andeq	r4, r1, r8, asr r2
   14204:			; <UNDEFINED> instruction: 0x000142b8
   14208:			; <UNDEFINED> instruction: 0x000142b8
   1420c:			; <UNDEFINED> instruction: 0x000142b8
   14210:	andeq	r4, r1, r8, asr r2
   14214:			; <UNDEFINED> instruction: 0x000142b8
   14218:	andeq	r4, r1, r8, asr r2
   1421c:			; <UNDEFINED> instruction: 0x000142b8
   14220:			; <UNDEFINED> instruction: 0x000142b8
   14224:			; <UNDEFINED> instruction: 0x000142b8
   14228:			; <UNDEFINED> instruction: 0x000142b8
   1422c:			; <UNDEFINED> instruction: 0x000142b8
   14230:			; <UNDEFINED> instruction: 0x000142b8
   14234:			; <UNDEFINED> instruction: 0x000142b8
   14238:			; <UNDEFINED> instruction: 0x000142b8
   1423c:			; <UNDEFINED> instruction: 0x000142b8
   14240:			; <UNDEFINED> instruction: 0x000142b8
   14244:			; <UNDEFINED> instruction: 0x000142b8
   14248:			; <UNDEFINED> instruction: 0x000142b8
   1424c:	andeq	r4, r1, r8, asr r2
   14250:	andeq	r4, r1, r8, asr r2
   14254:	andeq	r4, r1, r8, asr r2
   14258:	ldr	r2, [sp, #44]	; 0x2c
   1425c:	cmp	r2, #0
   14260:	bne	143bc <_obstack_memory_used@@Base+0x1984>
   14264:	cmp	sl, r4
   14268:	mov	r5, r1
   1426c:	movhi	r2, #63	; 0x3f
   14270:	mov	r9, r3
   14274:	strbhi	r2, [r8, r4]
   14278:	add	r2, r4, #1
   1427c:	cmp	sl, r2
   14280:	movhi	r0, #34	; 0x22
   14284:	strbhi	r0, [r8, r2]
   14288:	add	r2, r4, #2
   1428c:	cmp	sl, r2
   14290:	movhi	r0, #34	; 0x22
   14294:	strbhi	r0, [r8, r2]
   14298:	add	r2, r4, #3
   1429c:	add	r4, r4, #4
   142a0:	cmp	sl, r2
   142a4:	movhi	r0, #63	; 0x3f
   142a8:	strbhi	r0, [r8, r2]
   142ac:	mov	r2, #0
   142b0:	mov	r6, r2
   142b4:	b	136ec <_obstack_memory_used@@Base+0xcb4>
   142b8:	mov	r3, #0
   142bc:	mov	r6, r3
   142c0:	b	13264 <_obstack_memory_used@@Base+0x82c>
   142c4:	ldr	r0, [sp, #28]
   142c8:	mov	r1, r4
   142cc:	mov	r2, r7
   142d0:	mov	r3, r5
   142d4:	mov	ip, r5
   142d8:	ldr	r8, [sp, #76]	; 0x4c
   142dc:	ldr	sl, [sp, #80]	; 0x50
   142e0:	cmp	r1, r0
   142e4:	ldr	r5, [sp, #84]	; 0x54
   142e8:	ldr	r7, [sp, #88]	; 0x58
   142ec:	ldr	r4, [sp, #92]	; 0x5c
   142f0:	bcs	14324 <_obstack_memory_used@@Base+0x18ec>
   142f4:	ldrb	r6, [r2]
   142f8:	cmp	r6, #0
   142fc:	bne	14310 <_obstack_memory_used@@Base+0x18d8>
   14300:	b	14444 <_obstack_memory_used@@Base+0x1a0c>
   14304:	ldrb	r6, [r2, #1]!
   14308:	cmp	r6, #0
   1430c:	beq	143cc <_obstack_memory_used@@Base+0x1994>
   14310:	add	r3, r3, #1
   14314:	add	r1, r9, r3
   14318:	cmp	r1, r0
   1431c:	bcc	14304 <_obstack_memory_used@@Base+0x18cc>
   14320:	mov	ip, r3
   14324:	mov	r6, #0
   14328:	ldr	r2, [sp, #40]	; 0x28
   1432c:	b	13e50 <_obstack_memory_used@@Base+0x1418>
   14330:	mov	r3, #1
   14334:	mov	r2, #0
   14338:	mov	r4, r2
   1433c:	str	r3, [sp, #36]	; 0x24
   14340:	str	r3, [sp, #40]	; 0x28
   14344:	str	r3, [sp, #44]	; 0x2c
   14348:	str	r2, [sp, #48]	; 0x30
   1434c:	str	r3, [sp, #56]	; 0x38
   14350:	movw	r3, #30564	; 0x7764
   14354:	movt	r3, #1
   14358:	str	r3, [sp, #60]	; 0x3c
   1435c:	str	r2, [sp, #68]	; 0x44
   14360:	str	r2, [sp, #72]	; 0x48
   14364:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   14368:	mov	r2, r3
   1436c:	ldr	r3, [sp, #60]	; 0x3c
   14370:	cmp	r3, #0
   14374:	moveq	r2, #0
   14378:	andne	r2, r2, #1
   1437c:	cmp	r2, #0
   14380:	beq	143ac <_obstack_memory_used@@Base+0x1974>
   14384:	mov	r2, r3
   14388:	ldrb	r3, [r3]
   1438c:	cmp	r3, #0
   14390:	beq	143ac <_obstack_memory_used@@Base+0x1974>
   14394:	cmp	sl, r4
   14398:	strbhi	r3, [fp, r4]
   1439c:	add	r4, r4, #1
   143a0:	ldrb	r3, [r2, #1]!
   143a4:	cmp	r3, #0
   143a8:	bne	14394 <_obstack_memory_used@@Base+0x195c>
   143ac:	cmp	sl, r4
   143b0:	movhi	r3, #0
   143b4:	strbhi	r3, [fp, r4]
   143b8:	b	135cc <_obstack_memory_used@@Base+0xb94>
   143bc:	str	fp, [sp, #152]	; 0x98
   143c0:	mov	fp, r8
   143c4:	ldr	r8, [sp, #152]	; 0x98
   143c8:	b	13594 <_obstack_memory_used@@Base+0xb5c>
   143cc:	mov	ip, r3
   143d0:	ldr	r2, [sp, #40]	; 0x28
   143d4:	b	13e50 <_obstack_memory_used@@Base+0x1418>
   143d8:	str	fp, [sp, #152]	; 0x98
   143dc:	mov	fp, r8
   143e0:	ldr	r8, [sp, #152]	; 0x98
   143e4:	sub	r3, r8, #2
   143e8:	clz	r3, r3
   143ec:	lsr	r3, r3, #5
   143f0:	str	r3, [sp, #40]	; 0x28
   143f4:	b	13588 <_obstack_memory_used@@Base+0xb50>
   143f8:	mov	ip, #5
   143fc:	ldr	r3, [sp, #28]
   14400:	str	ip, [sp]
   14404:	ldr	r2, [sp, #156]	; 0x9c
   14408:	ldr	ip, [sp, #164]	; 0xa4
   1440c:	ldr	r0, [sp, #160]	; 0xa0
   14410:	str	r2, [sp, #4]
   14414:	ldr	r2, [sp, #32]
   14418:	ldr	r1, [sp, #72]	; 0x48
   1441c:	str	ip, [sp, #12]
   14420:	ldr	ip, [sp, #168]	; 0xa8
   14424:	str	r0, [sp, #8]
   14428:	mov	r0, fp
   1442c:	str	ip, [sp, #16]
   14430:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   14434:	mov	r4, r0
   14438:	b	135cc <_obstack_memory_used@@Base+0xb94>
   1443c:	mov	r8, #2
   14440:	b	13588 <_obstack_memory_used@@Base+0xb50>
   14444:	ldr	r2, [sp, #40]	; 0x28
   14448:	b	13e50 <_obstack_memory_used@@Base+0x1418>
   1444c:	mov	r3, #0
   14450:	mov	r2, #1
   14454:	mov	r4, r3
   14458:	strd	r2, [sp, #36]	; 0x24
   1445c:	strd	r2, [sp, #44]	; 0x2c
   14460:	str	r2, [sp, #56]	; 0x38
   14464:	str	r3, [sp, #68]	; 0x44
   14468:	str	r3, [sp, #72]	; 0x48
   1446c:	movw	r3, #30584	; 0x7778
   14470:	movt	r3, #1
   14474:	str	r3, [sp, #60]	; 0x3c
   14478:	b	12dc4 <_obstack_memory_used@@Base+0x38c>
   1447c:	mov	r3, #0
   14480:	mov	r1, #1
   14484:	mov	r2, r3
   14488:	str	r1, [sp, #36]	; 0x24
   1448c:	str	r3, [sp, #48]	; 0x30
   14490:	str	sl, [sp, #72]	; 0x48
   14494:	b	133cc <_obstack_memory_used@@Base+0x994>
   14498:	bl	10f84 <abort@plt>
   1449c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   144a0:	mov	r4, r0
   144a4:	mov	r5, r3
   144a8:	strd	r6, [sp, #8]
   144ac:	movw	r7, #33008	; 0x80f0
   144b0:	movt	r7, #2
   144b4:	strd	r8, [sp, #16]
   144b8:	strd	sl, [sp, #24]
   144bc:	mov	sl, r1
   144c0:	mov	fp, r2
   144c4:	str	lr, [sp, #32]
   144c8:	sub	sp, sp, #60	; 0x3c
   144cc:	bl	10ee8 <__errno_location@plt>
   144d0:	mov	r8, r0
   144d4:	cmn	r4, #-2147483647	; 0x80000001
   144d8:	ldr	r6, [r7]
   144dc:	movne	r0, #0
   144e0:	moveq	r0, #1
   144e4:	ldr	r3, [r8]
   144e8:	orrs	r0, r0, r4, lsr #31
   144ec:	str	r3, [sp, #28]
   144f0:	bne	14680 <_obstack_memory_used@@Base+0x1c48>
   144f4:	ldr	r3, [r7, #4]
   144f8:	cmp	r3, r4
   144fc:	bgt	1455c <_obstack_memory_used@@Base+0x1b24>
   14500:	add	r1, r7, #8
   14504:	sub	r2, r4, r3
   14508:	str	r3, [sp, #52]	; 0x34
   1450c:	cmp	r6, r1
   14510:	add	r2, r2, #1
   14514:	beq	14658 <_obstack_memory_used@@Base+0x1c20>
   14518:	mov	r1, #8
   1451c:	mov	r0, r6
   14520:	mvn	r3, #-2147483648	; 0x80000000
   14524:	str	r1, [sp]
   14528:	add	r1, sp, #52	; 0x34
   1452c:	bl	15500 <_obstack_memory_used@@Base+0x2ac8>
   14530:	mov	r6, r0
   14534:	str	r0, [r7]
   14538:	ldr	r0, [r7, #4]
   1453c:	mov	r1, #0
   14540:	ldr	r2, [sp, #52]	; 0x34
   14544:	sub	r2, r2, r0
   14548:	add	r0, r6, r0, lsl #3
   1454c:	lsl	r2, r2, #3
   14550:	bl	10f00 <memset@plt>
   14554:	ldr	r3, [sp, #52]	; 0x34
   14558:	str	r3, [r7, #4]
   1455c:	ldr	r1, [r5, #4]
   14560:	add	r0, r6, r4, lsl #3
   14564:	add	ip, r5, #8
   14568:	mov	r3, fp
   1456c:	mov	r2, sl
   14570:	ldr	r7, [r0, #4]
   14574:	str	r0, [sp, #36]	; 0x24
   14578:	str	ip, [sp, #40]	; 0x28
   1457c:	orr	r0, r1, #1
   14580:	ldr	r9, [r6, r4, lsl #3]
   14584:	str	ip, [sp, #8]
   14588:	ldr	lr, [r5, #44]	; 0x2c
   1458c:	str	r0, [sp, #4]
   14590:	ldr	ip, [r5]
   14594:	mov	r1, r9
   14598:	str	ip, [sp, #32]
   1459c:	ldr	ip, [r5, #40]	; 0x28
   145a0:	str	ip, [sp, #12]
   145a4:	ldr	ip, [sp, #32]
   145a8:	str	lr, [sp, #16]
   145ac:	str	r0, [sp, #44]	; 0x2c
   145b0:	mov	r0, r7
   145b4:	str	ip, [sp]
   145b8:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   145bc:	cmp	r9, r0
   145c0:	bhi	14630 <_obstack_memory_used@@Base+0x1bf8>
   145c4:	add	r9, r0, #1
   145c8:	movw	r3, #33164	; 0x818c
   145cc:	movt	r3, #2
   145d0:	cmp	r7, r3
   145d4:	str	r9, [r6, r4, lsl #3]
   145d8:	beq	145e4 <_obstack_memory_used@@Base+0x1bac>
   145dc:	mov	r0, r7
   145e0:	bl	12360 <close@plt+0x13d0>
   145e4:	mov	r0, r9
   145e8:	bl	15350 <_obstack_memory_used@@Base+0x2918>
   145ec:	ldr	ip, [r5]
   145f0:	mov	r3, fp
   145f4:	mov	r2, sl
   145f8:	mov	r1, r9
   145fc:	mov	r7, r0
   14600:	ldr	lr, [sp, #36]	; 0x24
   14604:	ldr	r4, [r5, #40]	; 0x28
   14608:	str	r0, [lr, #4]
   1460c:	ldr	lr, [r5, #44]	; 0x2c
   14610:	str	ip, [sp]
   14614:	ldr	ip, [sp, #44]	; 0x2c
   14618:	str	ip, [sp, #4]
   1461c:	ldr	ip, [sp, #40]	; 0x28
   14620:	str	r4, [sp, #12]
   14624:	str	lr, [sp, #16]
   14628:	str	ip, [sp, #8]
   1462c:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   14630:	ldr	r3, [sp, #28]
   14634:	mov	r0, r7
   14638:	str	r3, [r8]
   1463c:	add	sp, sp, #60	; 0x3c
   14640:	ldrd	r4, [sp]
   14644:	ldrd	r6, [sp, #8]
   14648:	ldrd	r8, [sp, #16]
   1464c:	ldrd	sl, [sp, #24]
   14650:	add	sp, sp, #32
   14654:	pop	{pc}		; (ldr pc, [sp], #4)
   14658:	mov	r1, #8
   1465c:	mvn	r3, #-2147483648	; 0x80000000
   14660:	str	r1, [sp]
   14664:	add	r1, sp, #52	; 0x34
   14668:	bl	15500 <_obstack_memory_used@@Base+0x2ac8>
   1466c:	ldrd	r2, [r7, #8]
   14670:	mov	r6, r0
   14674:	str	r0, [r7]
   14678:	strd	r2, [r0]
   1467c:	b	14538 <_obstack_memory_used@@Base+0x1b00>
   14680:	bl	10f84 <abort@plt>
   14684:	strd	r4, [sp, #-16]!
   14688:	mov	r5, r0
   1468c:	str	r6, [sp, #8]
   14690:	str	lr, [sp, #12]
   14694:	bl	10ee8 <__errno_location@plt>
   14698:	mov	r4, r0
   1469c:	cmp	r5, #0
   146a0:	ldr	r0, [pc, #32]	; 146c8 <_obstack_memory_used@@Base+0x1c90>
   146a4:	mov	r1, #48	; 0x30
   146a8:	movne	r0, r5
   146ac:	ldr	r6, [r4]
   146b0:	bl	15678 <_obstack_memory_used@@Base+0x2c40>
   146b4:	str	r6, [r4]
   146b8:	ldrd	r4, [sp]
   146bc:	ldr	r6, [sp, #8]
   146c0:	add	sp, sp, #12
   146c4:	pop	{pc}		; (ldr pc, [sp], #4)
   146c8:	andeq	r8, r2, ip, lsl #5
   146cc:	ldr	r3, [pc, #12]	; 146e0 <_obstack_memory_used@@Base+0x1ca8>
   146d0:	cmp	r0, #0
   146d4:	moveq	r0, r3
   146d8:	ldr	r0, [r0]
   146dc:	bx	lr
   146e0:	andeq	r8, r2, ip, lsl #5
   146e4:	ldr	r3, [pc, #12]	; 146f8 <_obstack_memory_used@@Base+0x1cc0>
   146e8:	cmp	r0, #0
   146ec:	moveq	r0, r3
   146f0:	str	r1, [r0]
   146f4:	bx	lr
   146f8:	andeq	r8, r2, ip, lsl #5
   146fc:	ldr	r3, [pc, #52]	; 14738 <_obstack_memory_used@@Base+0x1d00>
   14700:	cmp	r0, #0
   14704:	push	{lr}		; (str lr, [sp, #-4]!)
   14708:	lsr	lr, r1, #5
   1470c:	and	r1, r1, #31
   14710:	moveq	r0, r3
   14714:	add	r3, r0, #8
   14718:	ldr	ip, [r3, lr, lsl #2]
   1471c:	lsr	r0, ip, r1
   14720:	eor	r2, r2, r0
   14724:	and	r0, r0, #1
   14728:	and	r2, r2, #1
   1472c:	eor	r1, ip, r2, lsl r1
   14730:	str	r1, [r3, lr, lsl #2]
   14734:	pop	{pc}		; (ldr pc, [sp], #4)
   14738:	andeq	r8, r2, ip, lsl #5
   1473c:	ldr	r3, [pc, #16]	; 14754 <_obstack_memory_used@@Base+0x1d1c>
   14740:	cmp	r0, #0
   14744:	movne	r3, r0
   14748:	ldr	r0, [r3, #4]
   1474c:	str	r1, [r3, #4]
   14750:	bx	lr
   14754:	andeq	r8, r2, ip, lsl #5
   14758:	ldr	r3, [pc, #48]	; 14790 <_obstack_memory_used@@Base+0x1d58>
   1475c:	cmp	r0, #0
   14760:	mov	ip, #10
   14764:	moveq	r0, r3
   14768:	cmp	r2, #0
   1476c:	cmpne	r1, #0
   14770:	str	ip, [r0]
   14774:	beq	14784 <_obstack_memory_used@@Base+0x1d4c>
   14778:	str	r1, [r0, #40]	; 0x28
   1477c:	str	r2, [r0, #44]	; 0x2c
   14780:	bx	lr
   14784:	str	r4, [sp, #-8]!
   14788:	str	lr, [sp, #4]
   1478c:	bl	10f84 <abort@plt>
   14790:	andeq	r8, r2, ip, lsl #5
   14794:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14798:	strd	r6, [sp, #8]
   1479c:	mov	r7, r0
   147a0:	mov	r6, r1
   147a4:	strd	r8, [sp, #16]
   147a8:	mov	r8, r2
   147ac:	mov	r9, r3
   147b0:	str	lr, [sp, #24]
   147b4:	sub	sp, sp, #28
   147b8:	ldr	r4, [sp, #56]	; 0x38
   147bc:	ldr	ip, [pc, #104]	; 1482c <_obstack_memory_used@@Base+0x1df4>
   147c0:	cmp	r4, #0
   147c4:	moveq	r4, ip
   147c8:	bl	10ee8 <__errno_location@plt>
   147cc:	ldr	ip, [r4, #44]	; 0x2c
   147d0:	mov	r5, r0
   147d4:	mov	r1, r6
   147d8:	add	lr, r4, #8
   147dc:	mov	r3, r9
   147e0:	ldr	r6, [r5]
   147e4:	mov	r2, r8
   147e8:	mov	r0, r7
   147ec:	str	ip, [sp, #16]
   147f0:	ldr	ip, [r4, #40]	; 0x28
   147f4:	str	lr, [sp, #8]
   147f8:	str	ip, [sp, #12]
   147fc:	ldr	ip, [r4, #4]
   14800:	str	ip, [sp, #4]
   14804:	ldr	ip, [r4]
   14808:	str	ip, [sp]
   1480c:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   14810:	str	r6, [r5]
   14814:	add	sp, sp, #28
   14818:	ldrd	r4, [sp]
   1481c:	ldrd	r6, [sp, #8]
   14820:	ldrd	r8, [sp, #16]
   14824:	add	sp, sp, #24
   14828:	pop	{pc}		; (ldr pc, [sp], #4)
   1482c:	andeq	r8, r2, ip, lsl #5
   14830:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14834:	cmp	r3, #0
   14838:	ldr	r4, [pc, #220]	; 1491c <_obstack_memory_used@@Base+0x1ee4>
   1483c:	movne	r4, r3
   14840:	strd	r6, [sp, #8]
   14844:	mov	r6, r2
   14848:	strd	r8, [sp, #16]
   1484c:	mov	r9, r0
   14850:	strd	sl, [sp, #24]
   14854:	mov	sl, r1
   14858:	str	lr, [sp, #32]
   1485c:	sub	sp, sp, #44	; 0x2c
   14860:	bl	10ee8 <__errno_location@plt>
   14864:	ldr	r5, [r4, #4]
   14868:	mov	r7, r0
   1486c:	mov	r1, #0
   14870:	add	r8, r4, #8
   14874:	mov	r3, sl
   14878:	ldr	ip, [r4, #44]	; 0x2c
   1487c:	mov	r2, r9
   14880:	mov	r0, r1
   14884:	ldr	lr, [r7]
   14888:	cmp	r6, r1
   1488c:	orreq	r5, r5, #1
   14890:	str	ip, [sp, #16]
   14894:	ldr	ip, [r4, #40]	; 0x28
   14898:	stmib	sp, {r5, r8, ip}
   1489c:	ldr	ip, [r4]
   148a0:	str	lr, [sp, #28]
   148a4:	str	ip, [sp]
   148a8:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   148ac:	add	r1, r0, #1
   148b0:	mov	fp, r0
   148b4:	mov	r0, r1
   148b8:	str	r1, [sp, #36]	; 0x24
   148bc:	bl	15350 <_obstack_memory_used@@Base+0x2918>
   148c0:	ldr	ip, [r4, #44]	; 0x2c
   148c4:	mov	r3, sl
   148c8:	mov	r2, r9
   148cc:	ldr	r1, [sp, #36]	; 0x24
   148d0:	str	ip, [sp, #16]
   148d4:	ldr	ip, [r4, #40]	; 0x28
   148d8:	str	r0, [sp, #32]
   148dc:	stmib	sp, {r5, r8, ip}
   148e0:	ldr	ip, [r4]
   148e4:	str	ip, [sp]
   148e8:	bl	12cdc <_obstack_memory_used@@Base+0x2a4>
   148ec:	ldr	lr, [sp, #28]
   148f0:	cmp	r6, #0
   148f4:	ldr	r0, [sp, #32]
   148f8:	str	lr, [r7]
   148fc:	strne	fp, [r6]
   14900:	add	sp, sp, #44	; 0x2c
   14904:	ldrd	r4, [sp]
   14908:	ldrd	r6, [sp, #8]
   1490c:	ldrd	r8, [sp, #16]
   14910:	ldrd	sl, [sp, #24]
   14914:	add	sp, sp, #32
   14918:	pop	{pc}		; (ldr pc, [sp], #4)
   1491c:	andeq	r8, r2, ip, lsl #5
   14920:	mov	r3, r2
   14924:	mov	r2, #0
   14928:	b	14830 <_obstack_memory_used@@Base+0x1df8>
   1492c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14930:	movw	r5, #33008	; 0x80f0
   14934:	movt	r5, #2
   14938:	ldr	r3, [r5, #4]
   1493c:	strd	r6, [sp, #8]
   14940:	str	r8, [sp, #16]
   14944:	str	lr, [sp, #20]
   14948:	ldr	r7, [r5]
   1494c:	cmp	r3, #1
   14950:	ble	14974 <_obstack_memory_used@@Base+0x1f3c>
   14954:	mov	r4, #1
   14958:	add	r6, r7, #4
   1495c:	ldr	r0, [r6, r4, lsl #3]
   14960:	add	r4, r4, #1
   14964:	bl	12360 <close@plt+0x13d0>
   14968:	ldr	r3, [r5, #4]
   1496c:	cmp	r3, r4
   14970:	bgt	1495c <_obstack_memory_used@@Base+0x1f24>
   14974:	ldr	r0, [r7, #4]
   14978:	movw	r4, #33164	; 0x818c
   1497c:	movt	r4, #2
   14980:	cmp	r0, r4
   14984:	beq	14998 <_obstack_memory_used@@Base+0x1f60>
   14988:	bl	12360 <close@plt+0x13d0>
   1498c:	mov	r3, #256	; 0x100
   14990:	str	r3, [r5, #8]
   14994:	str	r4, [r5, #12]
   14998:	ldr	r4, [pc, #44]	; 149cc <_obstack_memory_used@@Base+0x1f94>
   1499c:	cmp	r7, r4
   149a0:	beq	149b0 <_obstack_memory_used@@Base+0x1f78>
   149a4:	mov	r0, r7
   149a8:	bl	12360 <close@plt+0x13d0>
   149ac:	str	r4, [r5]
   149b0:	mov	r3, #1
   149b4:	ldrd	r6, [sp, #8]
   149b8:	str	r3, [r5, #4]
   149bc:	ldrd	r4, [sp]
   149c0:	ldr	r8, [sp, #16]
   149c4:	add	sp, sp, #20
   149c8:	pop	{pc}		; (ldr pc, [sp], #4)
   149cc:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   149d0:	ldr	r3, [pc, #4]	; 149dc <_obstack_memory_used@@Base+0x1fa4>
   149d4:	mvn	r2, #0
   149d8:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   149dc:	andeq	r8, r2, ip, lsl #5
   149e0:	ldr	r3, [pc]	; 149e8 <_obstack_memory_used@@Base+0x1fb0>
   149e4:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   149e8:	andeq	r8, r2, ip, lsl #5
   149ec:	mov	r1, r0
   149f0:	ldr	r3, [pc, #8]	; 14a00 <_obstack_memory_used@@Base+0x1fc8>
   149f4:	mvn	r2, #0
   149f8:	mov	r0, #0
   149fc:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14a00:	andeq	r8, r2, ip, lsl #5
   14a04:	mov	r2, r1
   14a08:	ldr	r3, [pc, #8]	; 14a18 <_obstack_memory_used@@Base+0x1fe0>
   14a0c:	mov	r1, r0
   14a10:	mov	r0, #0
   14a14:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14a18:	andeq	r8, r2, ip, lsl #5
   14a1c:	strd	r4, [sp, #-12]!
   14a20:	mov	r5, r2
   14a24:	mov	r4, r0
   14a28:	str	lr, [sp, #8]
   14a2c:	sub	sp, sp, #52	; 0x34
   14a30:	mov	r0, sp
   14a34:	bl	12b38 <_obstack_memory_used@@Base+0x100>
   14a38:	mov	r3, sp
   14a3c:	mov	r1, r5
   14a40:	mov	r0, r4
   14a44:	mvn	r2, #0
   14a48:	bl	1449c <_obstack_memory_used@@Base+0x1a64>
   14a4c:	add	sp, sp, #52	; 0x34
   14a50:	ldrd	r4, [sp]
   14a54:	add	sp, sp, #8
   14a58:	pop	{pc}		; (ldr pc, [sp], #4)
   14a5c:	strd	r4, [sp, #-16]!
   14a60:	mov	r5, r2
   14a64:	mov	r4, r0
   14a68:	str	r6, [sp, #8]
   14a6c:	mov	r6, r3
   14a70:	str	lr, [sp, #12]
   14a74:	sub	sp, sp, #48	; 0x30
   14a78:	mov	r0, sp
   14a7c:	bl	12b38 <_obstack_memory_used@@Base+0x100>
   14a80:	mov	r3, sp
   14a84:	mov	r2, r6
   14a88:	mov	r1, r5
   14a8c:	mov	r0, r4
   14a90:	bl	1449c <_obstack_memory_used@@Base+0x1a64>
   14a94:	add	sp, sp, #48	; 0x30
   14a98:	ldrd	r4, [sp]
   14a9c:	ldr	r6, [sp, #8]
   14aa0:	add	sp, sp, #12
   14aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   14aa8:	mov	r2, r1
   14aac:	mov	r1, r0
   14ab0:	mov	r0, #0
   14ab4:	b	14a1c <_obstack_memory_used@@Base+0x1fe4>
   14ab8:	mov	r3, r2
   14abc:	mov	r2, r1
   14ac0:	mov	r1, r0
   14ac4:	mov	r0, #0
   14ac8:	b	14a5c <_obstack_memory_used@@Base+0x2024>
   14acc:	ldr	ip, [pc, #140]	; 14b60 <_obstack_memory_used@@Base+0x2128>
   14ad0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14ad4:	ldrd	r4, [ip]
   14ad8:	strd	r6, [sp, #8]
   14adc:	ldrd	r6, [ip, #8]
   14ae0:	strd	r8, [sp, #16]
   14ae4:	lsr	r9, r2, #5
   14ae8:	str	lr, [sp, #24]
   14aec:	sub	sp, sp, #52	; 0x34
   14af0:	and	lr, r2, #31
   14af4:	add	r8, sp, #8
   14af8:	mov	r2, r1
   14afc:	strd	r4, [sp]
   14b00:	mov	r1, r0
   14b04:	mov	r3, sp
   14b08:	strd	r6, [sp, #8]
   14b0c:	mov	r0, #0
   14b10:	ldrd	r4, [ip, #16]
   14b14:	ldrd	r6, [ip, #24]
   14b18:	strd	r4, [sp, #16]
   14b1c:	ldrd	r4, [ip, #32]
   14b20:	strd	r6, [sp, #24]
   14b24:	ldrd	r6, [ip, #40]	; 0x28
   14b28:	strd	r4, [sp, #32]
   14b2c:	strd	r6, [sp, #40]	; 0x28
   14b30:	ldr	ip, [r8, r9, lsl #2]
   14b34:	mvn	r4, ip, lsr lr
   14b38:	and	r4, r4, #1
   14b3c:	eor	lr, ip, r4, lsl lr
   14b40:	str	lr, [r8, r9, lsl #2]
   14b44:	bl	1449c <_obstack_memory_used@@Base+0x1a64>
   14b48:	add	sp, sp, #52	; 0x34
   14b4c:	ldrd	r4, [sp]
   14b50:	ldrd	r6, [sp, #8]
   14b54:	ldrd	r8, [sp, #16]
   14b58:	add	sp, sp, #24
   14b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b60:	andeq	r8, r2, ip, lsl #5
   14b64:	mov	r2, r1
   14b68:	mvn	r1, #0
   14b6c:	b	14acc <_obstack_memory_used@@Base+0x2094>
   14b70:	mov	r2, #58	; 0x3a
   14b74:	mvn	r1, #0
   14b78:	b	14acc <_obstack_memory_used@@Base+0x2094>
   14b7c:	mov	r2, #58	; 0x3a
   14b80:	b	14acc <_obstack_memory_used@@Base+0x2094>
   14b84:	strd	r4, [sp, #-20]!	; 0xffffffec
   14b88:	strd	r6, [sp, #8]
   14b8c:	mov	r6, r0
   14b90:	mov	r7, r2
   14b94:	str	lr, [sp, #16]
   14b98:	sub	sp, sp, #100	; 0x64
   14b9c:	mov	r0, sp
   14ba0:	bl	12b38 <_obstack_memory_used@@Base+0x100>
   14ba4:	ldrd	r4, [sp, #8]
   14ba8:	mov	r1, r7
   14bac:	mov	r0, r6
   14bb0:	add	r3, sp, #48	; 0x30
   14bb4:	mvn	r2, #0
   14bb8:	ldrd	r6, [sp]
   14bbc:	strd	r4, [sp, #56]	; 0x38
   14bc0:	ldrd	r4, [sp, #16]
   14bc4:	strd	r6, [sp, #48]	; 0x30
   14bc8:	ldrd	r6, [sp, #32]
   14bcc:	ldr	lr, [sp, #60]	; 0x3c
   14bd0:	strd	r4, [sp, #64]	; 0x40
   14bd4:	ldrd	r4, [sp, #24]
   14bd8:	mvn	ip, lr
   14bdc:	and	ip, ip, #67108864	; 0x4000000
   14be0:	strd	r4, [sp, #72]	; 0x48
   14be4:	eor	ip, ip, lr
   14be8:	ldrd	r4, [sp, #40]	; 0x28
   14bec:	str	ip, [sp, #60]	; 0x3c
   14bf0:	strd	r6, [sp, #80]	; 0x50
   14bf4:	strd	r4, [sp, #88]	; 0x58
   14bf8:	bl	1449c <_obstack_memory_used@@Base+0x1a64>
   14bfc:	add	sp, sp, #100	; 0x64
   14c00:	ldrd	r4, [sp]
   14c04:	ldrd	r6, [sp, #8]
   14c08:	add	sp, sp, #16
   14c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c10:	ldr	ip, [pc, #156]	; 14cb4 <_obstack_memory_used@@Base+0x227c>
   14c14:	cmp	r2, #0
   14c18:	cmpne	r1, #0
   14c1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14c20:	strd	r6, [sp, #8]
   14c24:	mov	r6, r2
   14c28:	str	r8, [sp, #16]
   14c2c:	mov	r8, r3
   14c30:	strd	sl, [sp, #20]
   14c34:	ldrd	r4, [ip]
   14c38:	str	lr, [sp, #28]
   14c3c:	sub	sp, sp, #48	; 0x30
   14c40:	mov	lr, #10
   14c44:	ldrd	r2, [ip, #8]
   14c48:	ldrd	sl, [ip, #16]
   14c4c:	strd	r4, [sp]
   14c50:	ldrd	r4, [ip, #32]
   14c54:	str	lr, [sp]
   14c58:	strd	r2, [sp, #8]
   14c5c:	strd	sl, [sp, #16]
   14c60:	ldrd	r2, [ip, #24]
   14c64:	ldrd	sl, [ip, #40]	; 0x28
   14c68:	strd	r2, [sp, #24]
   14c6c:	strd	r4, [sp, #32]
   14c70:	strd	sl, [sp, #40]	; 0x28
   14c74:	beq	14cb0 <_obstack_memory_used@@Base+0x2278>
   14c78:	ldr	r2, [sp, #80]	; 0x50
   14c7c:	mov	r7, r1
   14c80:	mov	r3, sp
   14c84:	mov	r1, r8
   14c88:	str	r7, [sp, #40]	; 0x28
   14c8c:	str	r6, [sp, #44]	; 0x2c
   14c90:	bl	1449c <_obstack_memory_used@@Base+0x1a64>
   14c94:	add	sp, sp, #48	; 0x30
   14c98:	ldrd	r4, [sp]
   14c9c:	ldrd	r6, [sp, #8]
   14ca0:	ldr	r8, [sp, #16]
   14ca4:	ldrd	sl, [sp, #20]
   14ca8:	add	sp, sp, #28
   14cac:	pop	{pc}		; (ldr pc, [sp], #4)
   14cb0:	bl	10f84 <abort@plt>
   14cb4:	andeq	r8, r2, ip, lsl #5
   14cb8:	mvn	ip, #0
   14cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   14cc0:	sub	sp, sp, #12
   14cc4:	str	ip, [sp]
   14cc8:	bl	14c10 <_obstack_memory_used@@Base+0x21d8>
   14ccc:	add	sp, sp, #12
   14cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cd4:	mvn	ip, #0
   14cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cdc:	sub	sp, sp, #12
   14ce0:	mov	r3, r2
   14ce4:	mov	r2, r1
   14ce8:	mov	r1, r0
   14cec:	mov	r0, #0
   14cf0:	str	ip, [sp]
   14cf4:	bl	14c10 <_obstack_memory_used@@Base+0x21d8>
   14cf8:	add	sp, sp, #12
   14cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14d00:	push	{lr}		; (str lr, [sp, #-4]!)
   14d04:	sub	sp, sp, #12
   14d08:	str	r3, [sp]
   14d0c:	mov	r3, r2
   14d10:	mov	r2, r1
   14d14:	mov	r1, r0
   14d18:	mov	r0, #0
   14d1c:	bl	14c10 <_obstack_memory_used@@Base+0x21d8>
   14d20:	add	sp, sp, #12
   14d24:	pop	{pc}		; (ldr pc, [sp], #4)
   14d28:	ldr	r3, [pc]	; 14d30 <_obstack_memory_used@@Base+0x22f8>
   14d2c:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14d30:	andeq	r8, r2, r0, lsl #2
   14d34:	mov	r2, r1
   14d38:	ldr	r3, [pc, #8]	; 14d48 <_obstack_memory_used@@Base+0x2310>
   14d3c:	mov	r1, r0
   14d40:	mov	r0, #0
   14d44:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14d48:	andeq	r8, r2, r0, lsl #2
   14d4c:	ldr	r3, [pc, #4]	; 14d58 <_obstack_memory_used@@Base+0x2320>
   14d50:	mvn	r2, #0
   14d54:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14d58:	andeq	r8, r2, r0, lsl #2
   14d5c:	mov	r1, r0
   14d60:	ldr	r3, [pc, #8]	; 14d70 <_obstack_memory_used@@Base+0x2338>
   14d64:	mvn	r2, #0
   14d68:	mov	r0, #0
   14d6c:	b	1449c <_obstack_memory_used@@Base+0x1a64>
   14d70:	andeq	r8, r2, r0, lsl #2
   14d74:	cmp	r1, #0
   14d78:	strd	r4, [sp, #-16]!
   14d7c:	mov	ip, r3
   14d80:	str	r6, [sp, #8]
   14d84:	mov	r4, r0
   14d88:	str	lr, [sp, #12]
   14d8c:	sub	sp, sp, #32
   14d90:	ldr	r5, [sp, #48]	; 0x30
   14d94:	ldr	r6, [sp, #52]	; 0x34
   14d98:	beq	14edc <_obstack_memory_used@@Base+0x24a4>
   14d9c:	mov	r3, r1
   14da0:	mov	r1, #1
   14da4:	stm	sp, {r2, ip}
   14da8:	movw	r2, #30696	; 0x77e8
   14dac:	movt	r2, #1
   14db0:	bl	10f24 <__fprintf_chk@plt>
   14db4:	mov	r2, #5
   14db8:	movw	r1, #30716	; 0x77fc
   14dbc:	movt	r1, #1
   14dc0:	mov	r0, #0
   14dc4:	bl	10dc8 <dcgettext@plt>
   14dc8:	movw	ip, #2022	; 0x7e6
   14dcc:	mov	r3, r0
   14dd0:	mov	r1, #1
   14dd4:	movw	r2, #31444	; 0x7ad4
   14dd8:	movt	r2, #1
   14ddc:	mov	r0, r4
   14de0:	str	ip, [sp]
   14de4:	bl	10f24 <__fprintf_chk@plt>
   14de8:	mov	r1, r4
   14dec:	mov	r0, #10
   14df0:	bl	10dbc <fputc_unlocked@plt>
   14df4:	mov	r2, #5
   14df8:	movw	r1, #30720	; 0x7800
   14dfc:	movt	r1, #1
   14e00:	mov	r0, #0
   14e04:	bl	10dc8 <dcgettext@plt>
   14e08:	mov	r2, r0
   14e0c:	mov	r1, #1
   14e10:	movw	r3, #30892	; 0x78ac
   14e14:	movt	r3, #1
   14e18:	mov	r0, r4
   14e1c:	bl	10f24 <__fprintf_chk@plt>
   14e20:	mov	r1, r4
   14e24:	mov	r0, #10
   14e28:	bl	10dbc <fputc_unlocked@plt>
   14e2c:	cmp	r6, #9
   14e30:	ldrls	pc, [pc, r6, lsl #2]
   14e34:	b	15148 <_obstack_memory_used@@Base+0x2710>
   14e38:	andeq	r4, r1, r8, asr #29
   14e3c:	strdeq	r4, [r1], -r8
   14e40:	andeq	r4, r1, r4, lsr pc
   14e44:	andeq	r4, r1, r4, ror pc
   14e48:			; <UNDEFINED> instruction: 0x00014fbc
   14e4c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14e50:	andeq	r5, r1, ip, lsr r0
   14e54:	muleq	r1, r0, r0
   14e58:	andeq	r5, r1, r8, ror #1
   14e5c:	andeq	r4, r1, r0, ror #28
   14e60:	movw	r1, #31196	; 0x79dc
   14e64:	movt	r1, #1
   14e68:	mov	r2, #5
   14e6c:	mov	r0, #0
   14e70:	bl	10dc8 <dcgettext@plt>
   14e74:	ldr	lr, [r5, #4]
   14e78:	mov	r2, r0
   14e7c:	mov	r1, #1
   14e80:	mov	r0, r4
   14e84:	ldr	r3, [r5, #8]
   14e88:	ldr	ip, [r5, #32]
   14e8c:	str	lr, [sp]
   14e90:	ldr	lr, [r5, #12]
   14e94:	str	ip, [sp, #28]
   14e98:	ldr	ip, [r5, #28]
   14e9c:	str	r3, [sp, #4]
   14ea0:	ldr	r3, [r5, #16]
   14ea4:	str	lr, [sp, #8]
   14ea8:	ldr	lr, [r5, #20]
   14eac:	str	ip, [sp, #24]
   14eb0:	ldr	ip, [r5, #24]
   14eb4:	str	r3, [sp, #12]
   14eb8:	ldr	r3, [r5]
   14ebc:	str	lr, [sp, #16]
   14ec0:	str	ip, [sp, #20]
   14ec4:	bl	10f24 <__fprintf_chk@plt>
   14ec8:	add	sp, sp, #32
   14ecc:	ldrd	r4, [sp]
   14ed0:	ldr	r6, [sp, #8]
   14ed4:	add	sp, sp, #12
   14ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   14edc:	mov	r3, r2
   14ee0:	mov	r1, #1
   14ee4:	str	ip, [sp]
   14ee8:	movw	r2, #30708	; 0x77f4
   14eec:	movt	r2, #1
   14ef0:	bl	10f24 <__fprintf_chk@plt>
   14ef4:	b	14db4 <_obstack_memory_used@@Base+0x237c>
   14ef8:	mov	r2, #5
   14efc:	movw	r1, #30928	; 0x78d0
   14f00:	movt	r1, #1
   14f04:	mov	r0, #0
   14f08:	bl	10dc8 <dcgettext@plt>
   14f0c:	ldr	r3, [r5]
   14f10:	mov	r2, r0
   14f14:	mov	r1, #1
   14f18:	mov	r0, r4
   14f1c:	add	sp, sp, #32
   14f20:	ldrd	r4, [sp]
   14f24:	ldr	r6, [sp, #8]
   14f28:	ldr	lr, [sp, #12]
   14f2c:	add	sp, sp, #16
   14f30:	b	10f24 <__fprintf_chk@plt>
   14f34:	mov	r2, #5
   14f38:	movw	r1, #30944	; 0x78e0
   14f3c:	movt	r1, #1
   14f40:	mov	r0, #0
   14f44:	bl	10dc8 <dcgettext@plt>
   14f48:	ldm	r5, {r3, ip}
   14f4c:	mov	r2, r0
   14f50:	mov	r1, #1
   14f54:	mov	r0, r4
   14f58:	str	ip, [sp, #48]	; 0x30
   14f5c:	add	sp, sp, #32
   14f60:	ldrd	r4, [sp]
   14f64:	ldr	r6, [sp, #8]
   14f68:	ldr	lr, [sp, #12]
   14f6c:	add	sp, sp, #16
   14f70:	b	10f24 <__fprintf_chk@plt>
   14f74:	mov	r2, #5
   14f78:	movw	r1, #30968	; 0x78f8
   14f7c:	movt	r1, #1
   14f80:	mov	r0, #0
   14f84:	bl	10dc8 <dcgettext@plt>
   14f88:	ldm	r5, {r3, lr}
   14f8c:	mov	r2, r0
   14f90:	mov	r1, #1
   14f94:	mov	r0, r4
   14f98:	ldr	ip, [r5, #8]
   14f9c:	str	lr, [sp, #48]	; 0x30
   14fa0:	str	ip, [sp, #52]	; 0x34
   14fa4:	add	sp, sp, #32
   14fa8:	ldrd	r4, [sp]
   14fac:	ldr	r6, [sp, #8]
   14fb0:	ldr	lr, [sp, #12]
   14fb4:	add	sp, sp, #16
   14fb8:	b	10f24 <__fprintf_chk@plt>
   14fbc:	mov	r2, #5
   14fc0:	movw	r1, #30996	; 0x7914
   14fc4:	movt	r1, #1
   14fc8:	mov	r0, #0
   14fcc:	bl	10dc8 <dcgettext@plt>
   14fd0:	ldmib	r5, {r3, ip, lr}
   14fd4:	mov	r2, r0
   14fd8:	mov	r1, #1
   14fdc:	mov	r0, r4
   14fe0:	str	r3, [sp]
   14fe4:	ldr	r3, [r5]
   14fe8:	stmib	sp, {ip, lr}
   14fec:	bl	10f24 <__fprintf_chk@plt>
   14ff0:	b	14ec8 <_obstack_memory_used@@Base+0x2490>
   14ff4:	mov	r2, #5
   14ff8:	movw	r1, #31028	; 0x7934
   14ffc:	movt	r1, #1
   15000:	mov	r0, #0
   15004:	bl	10dc8 <dcgettext@plt>
   15008:	ldmib	r5, {ip, lr}
   1500c:	mov	r2, r0
   15010:	mov	r1, #1
   15014:	mov	r0, r4
   15018:	ldr	r3, [r5, #16]
   1501c:	str	ip, [sp]
   15020:	ldr	ip, [r5, #12]
   15024:	str	r3, [sp, #12]
   15028:	ldr	r3, [r5]
   1502c:	str	lr, [sp, #4]
   15030:	str	ip, [sp, #8]
   15034:	bl	10f24 <__fprintf_chk@plt>
   15038:	b	14ec8 <_obstack_memory_used@@Base+0x2490>
   1503c:	mov	r2, #5
   15040:	movw	r1, #31064	; 0x7958
   15044:	movt	r1, #1
   15048:	mov	r0, #0
   1504c:	bl	10dc8 <dcgettext@plt>
   15050:	ldr	lr, [r5, #4]
   15054:	mov	r2, r0
   15058:	mov	r1, #1
   1505c:	mov	r0, r4
   15060:	ldr	r3, [r5, #8]
   15064:	ldr	ip, [r5, #20]
   15068:	str	lr, [sp]
   1506c:	ldr	lr, [r5, #12]
   15070:	str	ip, [sp, #16]
   15074:	ldr	ip, [r5, #16]
   15078:	str	r3, [sp, #4]
   1507c:	ldr	r3, [r5]
   15080:	str	lr, [sp, #8]
   15084:	str	ip, [sp, #12]
   15088:	bl	10f24 <__fprintf_chk@plt>
   1508c:	b	14ec8 <_obstack_memory_used@@Base+0x2490>
   15090:	mov	r2, #5
   15094:	movw	r1, #31104	; 0x7980
   15098:	movt	r1, #1
   1509c:	mov	r0, #0
   150a0:	bl	10dc8 <dcgettext@plt>
   150a4:	ldmib	r5, {r3, ip}
   150a8:	mov	r2, r0
   150ac:	mov	r1, #1
   150b0:	mov	r0, r4
   150b4:	ldr	lr, [r5, #24]
   150b8:	str	r3, [sp]
   150bc:	ldr	r3, [r5, #12]
   150c0:	str	lr, [sp, #20]
   150c4:	ldr	lr, [r5, #20]
   150c8:	str	ip, [sp, #4]
   150cc:	ldr	ip, [r5, #16]
   150d0:	str	r3, [sp, #8]
   150d4:	ldr	r3, [r5]
   150d8:	str	ip, [sp, #12]
   150dc:	str	lr, [sp, #16]
   150e0:	bl	10f24 <__fprintf_chk@plt>
   150e4:	b	14ec8 <_obstack_memory_used@@Base+0x2490>
   150e8:	mov	r2, #5
   150ec:	movw	r1, #31148	; 0x79ac
   150f0:	movt	r1, #1
   150f4:	mov	r0, #0
   150f8:	bl	10dc8 <dcgettext@plt>
   150fc:	ldmib	r5, {ip, lr}
   15100:	mov	r2, r0
   15104:	mov	r1, #1
   15108:	mov	r0, r4
   1510c:	ldr	r3, [r5, #28]
   15110:	str	ip, [sp]
   15114:	ldr	ip, [r5, #12]
   15118:	str	r3, [sp, #24]
   1511c:	ldr	r3, [r5, #24]
   15120:	str	lr, [sp, #4]
   15124:	ldr	lr, [r5, #16]
   15128:	str	ip, [sp, #8]
   1512c:	ldr	ip, [r5, #20]
   15130:	str	r3, [sp, #20]
   15134:	ldr	r3, [r5]
   15138:	str	lr, [sp, #12]
   1513c:	str	ip, [sp, #16]
   15140:	bl	10f24 <__fprintf_chk@plt>
   15144:	b	14ec8 <_obstack_memory_used@@Base+0x2490>
   15148:	movw	r1, #31248	; 0x7a10
   1514c:	movt	r1, #1
   15150:	b	14e68 <_obstack_memory_used@@Base+0x2430>
   15154:	strd	r4, [sp, #-12]!
   15158:	str	lr, [sp, #8]
   1515c:	sub	sp, sp, #12
   15160:	ldr	r5, [sp, #24]
   15164:	ldr	ip, [r5]
   15168:	cmp	ip, #0
   1516c:	beq	15188 <_obstack_memory_used@@Base+0x2750>
   15170:	mov	lr, r5
   15174:	mov	ip, #0
   15178:	ldr	r4, [lr, #4]!
   1517c:	add	ip, ip, #1
   15180:	cmp	r4, #0
   15184:	bne	15178 <_obstack_memory_used@@Base+0x2740>
   15188:	stm	sp, {r5, ip}
   1518c:	bl	14d74 <_obstack_memory_used@@Base+0x233c>
   15190:	add	sp, sp, #12
   15194:	ldrd	r4, [sp]
   15198:	add	sp, sp, #8
   1519c:	pop	{pc}		; (ldr pc, [sp], #4)
   151a0:	strd	r4, [sp, #-16]!
   151a4:	mov	ip, #0
   151a8:	str	r6, [sp, #8]
   151ac:	str	lr, [sp, #12]
   151b0:	sub	sp, sp, #48	; 0x30
   151b4:	ldr	r5, [sp, #64]	; 0x40
   151b8:	add	r6, sp, #8
   151bc:	mov	r4, r6
   151c0:	ldr	lr, [r5], #4
   151c4:	cmp	lr, #0
   151c8:	str	lr, [r4], #4
   151cc:	beq	151dc <_obstack_memory_used@@Base+0x27a4>
   151d0:	add	ip, ip, #1
   151d4:	cmp	ip, #10
   151d8:	bne	151c0 <_obstack_memory_used@@Base+0x2788>
   151dc:	stm	sp, {r6, ip}
   151e0:	bl	14d74 <_obstack_memory_used@@Base+0x233c>
   151e4:	add	sp, sp, #48	; 0x30
   151e8:	ldrd	r4, [sp]
   151ec:	ldr	r6, [sp, #8]
   151f0:	add	sp, sp, #12
   151f4:	pop	{pc}		; (ldr pc, [sp], #4)
   151f8:	push	{r3}		; (str r3, [sp, #-4]!)
   151fc:	mov	ip, #0
   15200:	strd	r4, [sp, #-12]!
   15204:	str	lr, [sp, #8]
   15208:	sub	sp, sp, #56	; 0x38
   1520c:	add	r3, sp, #72	; 0x48
   15210:	add	r5, sp, #16
   15214:	mov	r4, r3
   15218:	mov	lr, r5
   1521c:	str	r3, [sp, #12]
   15220:	ldr	r3, [r4], #4
   15224:	cmp	r3, #0
   15228:	str	r3, [lr], #4
   1522c:	beq	1523c <_obstack_memory_used@@Base+0x2804>
   15230:	add	ip, ip, #1
   15234:	cmp	ip, #10
   15238:	bne	15220 <_obstack_memory_used@@Base+0x27e8>
   1523c:	ldr	r3, [sp, #68]	; 0x44
   15240:	stm	sp, {r5, ip}
   15244:	bl	14d74 <_obstack_memory_used@@Base+0x233c>
   15248:	add	sp, sp, #56	; 0x38
   1524c:	ldrd	r4, [sp]
   15250:	ldr	lr, [sp, #8]
   15254:	add	sp, sp, #12
   15258:	add	sp, sp, #4
   1525c:	bx	lr
   15260:	movw	r3, #33100	; 0x814c
   15264:	movt	r3, #2
   15268:	str	r4, [sp, #-8]!
   1526c:	mov	r0, #10
   15270:	ldr	r1, [r3]
   15274:	str	lr, [sp, #4]
   15278:	bl	10dbc <fputc_unlocked@plt>
   1527c:	mov	r2, #5
   15280:	movw	r1, #31308	; 0x7a4c
   15284:	movt	r1, #1
   15288:	mov	r0, #0
   1528c:	bl	10dc8 <dcgettext@plt>
   15290:	mov	r1, r0
   15294:	movw	r2, #31328	; 0x7a60
   15298:	movt	r2, #1
   1529c:	mov	r0, #1
   152a0:	bl	10f0c <__printf_chk@plt>
   152a4:	mov	r2, #5
   152a8:	movw	r1, #31352	; 0x7a78
   152ac:	movt	r1, #1
   152b0:	mov	r0, #0
   152b4:	bl	10dc8 <dcgettext@plt>
   152b8:	mov	r1, r0
   152bc:	movw	r3, #29184	; 0x7200
   152c0:	movt	r3, #1
   152c4:	movw	r2, #29224	; 0x7228
   152c8:	movt	r2, #1
   152cc:	mov	r0, #1
   152d0:	bl	10f0c <__printf_chk@plt>
   152d4:	mov	r2, #5
   152d8:	movw	r1, #31372	; 0x7a8c
   152dc:	movt	r1, #1
   152e0:	mov	r0, #0
   152e4:	bl	10dc8 <dcgettext@plt>
   152e8:	mov	r1, r0
   152ec:	movw	r2, #31412	; 0x7ab4
   152f0:	movt	r2, #1
   152f4:	mov	r0, #1
   152f8:	ldr	r4, [sp]
   152fc:	ldr	lr, [sp, #4]
   15300:	add	sp, sp, #8
   15304:	b	10f0c <__printf_chk@plt>
   15308:	str	r4, [sp, #-8]!
   1530c:	str	lr, [sp, #4]
   15310:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   15314:	cmp	r0, #0
   15318:	beq	15328 <_obstack_memory_used@@Base+0x28f0>
   1531c:	ldr	r4, [sp]
   15320:	add	sp, sp, #4
   15324:	pop	{pc}		; (ldr pc, [sp], #4)
   15328:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   1532c:	str	r4, [sp, #-8]!
   15330:	str	lr, [sp, #4]
   15334:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   15338:	cmp	r0, #0
   1533c:	beq	1534c <_obstack_memory_used@@Base+0x2914>
   15340:	ldr	r4, [sp]
   15344:	add	sp, sp, #4
   15348:	pop	{pc}		; (ldr pc, [sp], #4)
   1534c:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15350:	str	r4, [sp, #-8]!
   15354:	str	lr, [sp, #4]
   15358:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   1535c:	cmp	r0, #0
   15360:	beq	15370 <_obstack_memory_used@@Base+0x2938>
   15364:	ldr	r4, [sp]
   15368:	add	sp, sp, #4
   1536c:	pop	{pc}		; (ldr pc, [sp], #4)
   15370:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15374:	strd	r4, [sp, #-16]!
   15378:	mov	r5, r0
   1537c:	mov	r4, r1
   15380:	str	r6, [sp, #8]
   15384:	str	lr, [sp, #12]
   15388:	bl	15874 <_obstack_memory_used@@Base+0x2e3c>
   1538c:	cmp	r0, #0
   15390:	beq	153a4 <_obstack_memory_used@@Base+0x296c>
   15394:	ldrd	r4, [sp]
   15398:	ldr	r6, [sp, #8]
   1539c:	add	sp, sp, #12
   153a0:	pop	{pc}		; (ldr pc, [sp], #4)
   153a4:	adds	r4, r4, #0
   153a8:	movne	r4, #1
   153ac:	cmp	r5, #0
   153b0:	moveq	r4, #1
   153b4:	cmp	r4, #0
   153b8:	beq	15394 <_obstack_memory_used@@Base+0x295c>
   153bc:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   153c0:	cmp	r1, #0
   153c4:	orreq	r1, r1, #1
   153c8:	str	r4, [sp, #-8]!
   153cc:	str	lr, [sp, #4]
   153d0:	bl	15874 <_obstack_memory_used@@Base+0x2e3c>
   153d4:	cmp	r0, #0
   153d8:	beq	153e8 <_obstack_memory_used@@Base+0x29b0>
   153dc:	ldr	r4, [sp]
   153e0:	add	sp, sp, #4
   153e4:	pop	{pc}		; (ldr pc, [sp], #4)
   153e8:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   153ec:	strd	r4, [sp, #-16]!
   153f0:	mov	r4, r0
   153f4:	mov	r5, r2
   153f8:	str	r6, [sp, #8]
   153fc:	mov	r6, r1
   15400:	str	lr, [sp, #12]
   15404:	bl	15a10 <_obstack_memory_used@@Base+0x2fd8>
   15408:	cmp	r0, #0
   1540c:	beq	15420 <_obstack_memory_used@@Base+0x29e8>
   15410:	ldrd	r4, [sp]
   15414:	ldr	r6, [sp, #8]
   15418:	add	sp, sp, #12
   1541c:	pop	{pc}		; (ldr pc, [sp], #4)
   15420:	cmp	r4, #0
   15424:	beq	15434 <_obstack_memory_used@@Base+0x29fc>
   15428:	cmp	r6, #0
   1542c:	cmpne	r5, #0
   15430:	beq	15410 <_obstack_memory_used@@Base+0x29d8>
   15434:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15438:	b	153ec <_obstack_memory_used@@Base+0x29b4>
   1543c:	cmp	r2, #0
   15440:	cmpne	r1, #0
   15444:	str	r4, [sp, #-8]!
   15448:	moveq	r2, #1
   1544c:	str	lr, [sp, #4]
   15450:	moveq	r1, r2
   15454:	bl	15a10 <_obstack_memory_used@@Base+0x2fd8>
   15458:	cmp	r0, #0
   1545c:	beq	1546c <_obstack_memory_used@@Base+0x2a34>
   15460:	ldr	r4, [sp]
   15464:	add	sp, sp, #4
   15468:	pop	{pc}		; (ldr pc, [sp], #4)
   1546c:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15470:	mov	r2, r1
   15474:	mov	r1, r0
   15478:	mov	r0, #0
   1547c:	b	153ec <_obstack_memory_used@@Base+0x29b4>
   15480:	mov	r2, r1
   15484:	mov	r1, r0
   15488:	mov	r0, #0
   1548c:	b	1543c <_obstack_memory_used@@Base+0x2a04>
   15490:	cmp	r0, #0
   15494:	strd	r4, [sp, #-16]!
   15498:	mov	r5, r1
   1549c:	ldr	r4, [r1]
   154a0:	str	r6, [sp, #8]
   154a4:	str	lr, [sp, #12]
   154a8:	beq	154d8 <_obstack_memory_used@@Base+0x2aa0>
   154ac:	lsr	r3, r4, #1
   154b0:	add	r3, r3, #1
   154b4:	adds	r4, r4, r3
   154b8:	bcs	154f4 <_obstack_memory_used@@Base+0x2abc>
   154bc:	mov	r1, r4
   154c0:	bl	153ec <_obstack_memory_used@@Base+0x29b4>
   154c4:	ldr	r6, [sp, #8]
   154c8:	str	r4, [r5]
   154cc:	ldrd	r4, [sp]
   154d0:	add	sp, sp, #12
   154d4:	pop	{pc}		; (ldr pc, [sp], #4)
   154d8:	cmp	r4, #0
   154dc:	bne	154bc <_obstack_memory_used@@Base+0x2a84>
   154e0:	mov	r4, #64	; 0x40
   154e4:	udiv	r4, r4, r2
   154e8:	cmp	r2, #64	; 0x40
   154ec:	addhi	r4, r4, #1
   154f0:	b	154bc <_obstack_memory_used@@Base+0x2a84>
   154f4:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   154f8:	mov	r2, #1
   154fc:	b	15490 <_obstack_memory_used@@Base+0x2a58>
   15500:	ldr	ip, [r1]
   15504:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15508:	mov	r5, r1
   1550c:	strd	r6, [sp, #8]
   15510:	str	lr, [sp, #28]
   15514:	strd	r8, [sp, #16]
   15518:	asr	lr, ip, #1
   1551c:	ldr	r8, [sp, #32]
   15520:	str	sl, [sp, #24]
   15524:	adds	r4, ip, lr
   15528:	mvn	lr, r3
   1552c:	lsr	lr, lr, #31
   15530:	mvnvs	r4, #-2147483648	; 0x80000000
   15534:	cmp	r3, r4
   15538:	movge	r1, #0
   1553c:	andlt	r1, lr, #1
   15540:	cmp	r1, #0
   15544:	movne	r4, r3
   15548:	smull	r6, r7, r4, r8
   1554c:	cmp	r7, r6, asr #31
   15550:	bne	155d8 <_obstack_memory_used@@Base+0x2ba0>
   15554:	cmp	r6, #63	; 0x3f
   15558:	mov	r1, r6
   1555c:	ble	155c0 <_obstack_memory_used@@Base+0x2b88>
   15560:	cmp	r0, #0
   15564:	sub	r6, r4, ip
   15568:	streq	r0, [r5]
   1556c:	cmp	r6, r2
   15570:	bge	155a0 <_obstack_memory_used@@Base+0x2b68>
   15574:	adds	r4, ip, r2
   15578:	bvs	155d4 <_obstack_memory_used@@Base+0x2b9c>
   1557c:	cmp	r4, r3
   15580:	movle	r3, #0
   15584:	andgt	r3, lr, #1
   15588:	cmp	r3, #0
   1558c:	bne	155d4 <_obstack_memory_used@@Base+0x2b9c>
   15590:	smull	r8, r9, r4, r8
   15594:	cmp	r9, r8, asr #31
   15598:	mov	r1, r8
   1559c:	bne	155d4 <_obstack_memory_used@@Base+0x2b9c>
   155a0:	bl	15374 <_obstack_memory_used@@Base+0x293c>
   155a4:	ldrd	r6, [sp, #8]
   155a8:	ldrd	r8, [sp, #16]
   155ac:	ldr	sl, [sp, #24]
   155b0:	str	r4, [r5]
   155b4:	ldrd	r4, [sp]
   155b8:	add	sp, sp, #28
   155bc:	pop	{pc}		; (ldr pc, [sp], #4)
   155c0:	mov	r6, #64	; 0x40
   155c4:	sdiv	r4, r6, r8
   155c8:	mls	r1, r8, r4, r6
   155cc:	sub	r1, r6, r1
   155d0:	b	15560 <_obstack_memory_used@@Base+0x2b28>
   155d4:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   155d8:	mvn	r6, #-2147483648	; 0x80000000
   155dc:	b	155c4 <_obstack_memory_used@@Base+0x2b8c>
   155e0:	mov	r1, #1
   155e4:	str	r4, [sp, #-8]!
   155e8:	str	lr, [sp, #4]
   155ec:	bl	157c4 <_obstack_memory_used@@Base+0x2d8c>
   155f0:	cmp	r0, #0
   155f4:	beq	15604 <_obstack_memory_used@@Base+0x2bcc>
   155f8:	ldr	r4, [sp]
   155fc:	add	sp, sp, #4
   15600:	pop	{pc}		; (ldr pc, [sp], #4)
   15604:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15608:	mov	r1, #1
   1560c:	str	r4, [sp, #-8]!
   15610:	str	lr, [sp, #4]
   15614:	bl	157c4 <_obstack_memory_used@@Base+0x2d8c>
   15618:	cmp	r0, #0
   1561c:	beq	1562c <_obstack_memory_used@@Base+0x2bf4>
   15620:	ldr	r4, [sp]
   15624:	add	sp, sp, #4
   15628:	pop	{pc}		; (ldr pc, [sp], #4)
   1562c:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15630:	str	r4, [sp, #-8]!
   15634:	str	lr, [sp, #4]
   15638:	bl	157c4 <_obstack_memory_used@@Base+0x2d8c>
   1563c:	cmp	r0, #0
   15640:	beq	15650 <_obstack_memory_used@@Base+0x2c18>
   15644:	ldr	r4, [sp]
   15648:	add	sp, sp, #4
   1564c:	pop	{pc}		; (ldr pc, [sp], #4)
   15650:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15654:	str	r4, [sp, #-8]!
   15658:	str	lr, [sp, #4]
   1565c:	bl	157c4 <_obstack_memory_used@@Base+0x2d8c>
   15660:	cmp	r0, #0
   15664:	beq	15674 <_obstack_memory_used@@Base+0x2c3c>
   15668:	ldr	r4, [sp]
   1566c:	add	sp, sp, #4
   15670:	pop	{pc}		; (ldr pc, [sp], #4)
   15674:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15678:	strd	r4, [sp, #-16]!
   1567c:	mov	r4, r1
   15680:	str	r6, [sp, #8]
   15684:	mov	r6, r0
   15688:	mov	r0, r1
   1568c:	str	lr, [sp, #12]
   15690:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   15694:	subs	r5, r0, #0
   15698:	beq	156bc <_obstack_memory_used@@Base+0x2c84>
   1569c:	mov	r2, r4
   156a0:	mov	r1, r6
   156a4:	bl	10d8c <memcpy@plt>
   156a8:	mov	r0, r5
   156ac:	ldrd	r4, [sp]
   156b0:	ldr	r6, [sp, #8]
   156b4:	add	sp, sp, #12
   156b8:	pop	{pc}		; (ldr pc, [sp], #4)
   156bc:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   156c0:	strd	r4, [sp, #-16]!
   156c4:	mov	r4, r1
   156c8:	str	r6, [sp, #8]
   156cc:	mov	r6, r0
   156d0:	mov	r0, r1
   156d4:	str	lr, [sp, #12]
   156d8:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   156dc:	subs	r5, r0, #0
   156e0:	beq	15704 <_obstack_memory_used@@Base+0x2ccc>
   156e4:	mov	r2, r4
   156e8:	mov	r1, r6
   156ec:	bl	10d8c <memcpy@plt>
   156f0:	mov	r0, r5
   156f4:	ldrd	r4, [sp]
   156f8:	ldr	r6, [sp, #8]
   156fc:	add	sp, sp, #12
   15700:	pop	{pc}		; (ldr pc, [sp], #4)
   15704:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15708:	strd	r4, [sp, #-16]!
   1570c:	mov	r4, r1
   15710:	str	r6, [sp, #8]
   15714:	mov	r6, r0
   15718:	add	r0, r1, #1
   1571c:	str	lr, [sp, #12]
   15720:	bl	15838 <_obstack_memory_used@@Base+0x2e00>
   15724:	subs	r5, r0, #0
   15728:	beq	15754 <_obstack_memory_used@@Base+0x2d1c>
   1572c:	mov	r3, #0
   15730:	mov	r1, r6
   15734:	mov	r2, r4
   15738:	strb	r3, [r5, r4]
   1573c:	bl	10d8c <memcpy@plt>
   15740:	mov	r0, r5
   15744:	ldrd	r4, [sp]
   15748:	ldr	r6, [sp, #8]
   1574c:	add	sp, sp, #12
   15750:	pop	{pc}		; (ldr pc, [sp], #4)
   15754:	bl	15780 <_obstack_memory_used@@Base+0x2d48>
   15758:	str	r4, [sp, #-8]!
   1575c:	mov	r4, r0
   15760:	str	lr, [sp, #4]
   15764:	bl	10edc <strlen@plt>
   15768:	add	r1, r0, #1
   1576c:	mov	r0, r4
   15770:	ldr	r4, [sp]
   15774:	ldr	lr, [sp, #4]
   15778:	add	sp, sp, #8
   1577c:	b	15678 <_obstack_memory_used@@Base+0x2c40>
   15780:	movw	r3, #33000	; 0x80e8
   15784:	movt	r3, #2
   15788:	str	r4, [sp, #-8]!
   1578c:	ldr	r4, [r3]
   15790:	mov	r2, #5
   15794:	movw	r1, #30392	; 0x76b8
   15798:	movt	r1, #1
   1579c:	mov	r0, #0
   157a0:	str	lr, [sp, #4]
   157a4:	bl	10dc8 <dcgettext@plt>
   157a8:	mov	r3, r0
   157ac:	movw	r2, #30376	; 0x76a8
   157b0:	movt	r2, #1
   157b4:	mov	r1, #0
   157b8:	mov	r0, r4
   157bc:	bl	10e40 <error@plt>
   157c0:	bl	10f84 <abort@plt>
   157c4:	cmp	r1, #0
   157c8:	cmpne	r0, #0
   157cc:	beq	15818 <_obstack_memory_used@@Base+0x2de0>
   157d0:	strd	r4, [sp, #-16]!
   157d4:	umull	r4, r5, r0, r1
   157d8:	str	r6, [sp, #8]
   157dc:	str	lr, [sp, #12]
   157e0:	adds	r3, r5, #0
   157e4:	movne	r3, #1
   157e8:	cmp	r4, #0
   157ec:	blt	157f8 <_obstack_memory_used@@Base+0x2dc0>
   157f0:	cmp	r3, #0
   157f4:	beq	15824 <_obstack_memory_used@@Base+0x2dec>
   157f8:	bl	10ee8 <__errno_location@plt>
   157fc:	mov	r3, #12
   15800:	ldrd	r4, [sp]
   15804:	ldr	r6, [sp, #8]
   15808:	add	sp, sp, #12
   1580c:	str	r3, [r0]
   15810:	mov	r0, #0
   15814:	pop	{pc}		; (ldr pc, [sp], #4)
   15818:	mov	r1, #1
   1581c:	mov	r0, r1
   15820:	b	10d38 <calloc@plt>
   15824:	ldrd	r4, [sp]
   15828:	ldr	r6, [sp, #8]
   1582c:	ldr	lr, [sp, #12]
   15830:	add	sp, sp, #16
   15834:	b	10d38 <calloc@plt>
   15838:	cmp	r0, #0
   1583c:	beq	15848 <_obstack_memory_used@@Base+0x2e10>
   15840:	blt	15850 <_obstack_memory_used@@Base+0x2e18>
   15844:	b	10e7c <malloc@plt>
   15848:	mov	r0, #1
   1584c:	b	10e7c <malloc@plt>
   15850:	str	r4, [sp, #-8]!
   15854:	str	lr, [sp, #4]
   15858:	bl	10ee8 <__errno_location@plt>
   1585c:	mov	r3, #12
   15860:	ldr	r4, [sp]
   15864:	add	sp, sp, #4
   15868:	str	r3, [r0]
   1586c:	mov	r0, #0
   15870:	pop	{pc}		; (ldr pc, [sp], #4)
   15874:	cmp	r0, #0
   15878:	beq	158a0 <_obstack_memory_used@@Base+0x2e68>
   1587c:	cmp	r1, #0
   15880:	str	r4, [sp, #-8]!
   15884:	str	lr, [sp, #4]
   15888:	beq	158a8 <_obstack_memory_used@@Base+0x2e70>
   1588c:	blt	158bc <_obstack_memory_used@@Base+0x2e84>
   15890:	ldr	r4, [sp]
   15894:	ldr	lr, [sp, #4]
   15898:	add	sp, sp, #8
   1589c:	b	10de0 <realloc@plt>
   158a0:	mov	r0, r1
   158a4:	b	15838 <_obstack_memory_used@@Base+0x2e00>
   158a8:	bl	12360 <close@plt+0x13d0>
   158ac:	ldr	r4, [sp]
   158b0:	add	sp, sp, #4
   158b4:	mov	r0, #0
   158b8:	pop	{pc}		; (ldr pc, [sp], #4)
   158bc:	bl	10ee8 <__errno_location@plt>
   158c0:	mov	r3, #12
   158c4:	str	r3, [r0]
   158c8:	b	158ac <_obstack_memory_used@@Base+0x2e74>
   158cc:	strd	r4, [sp, #-16]!
   158d0:	mov	r4, r0
   158d4:	str	r6, [sp, #8]
   158d8:	str	lr, [sp, #12]
   158dc:	bl	10e28 <__fpending@plt>
   158e0:	ldr	r5, [r4]
   158e4:	mov	r6, r0
   158e8:	mov	r0, r4
   158ec:	bl	1224c <close@plt+0x12bc>
   158f0:	mov	r4, r0
   158f4:	and	r5, r5, #32
   158f8:	cmp	r5, #0
   158fc:	bne	15934 <_obstack_memory_used@@Base+0x2efc>
   15900:	cmp	r0, #0
   15904:	beq	15920 <_obstack_memory_used@@Base+0x2ee8>
   15908:	cmp	r6, #0
   1590c:	bne	1594c <_obstack_memory_used@@Base+0x2f14>
   15910:	bl	10ee8 <__errno_location@plt>
   15914:	ldr	r4, [r0]
   15918:	subs	r4, r4, #9
   1591c:	mvnne	r4, #0
   15920:	mov	r0, r4
   15924:	ldrd	r4, [sp]
   15928:	ldr	r6, [sp, #8]
   1592c:	add	sp, sp, #12
   15930:	pop	{pc}		; (ldr pc, [sp], #4)
   15934:	cmp	r0, #0
   15938:	bne	1594c <_obstack_memory_used@@Base+0x2f14>
   1593c:	bl	10ee8 <__errno_location@plt>
   15940:	str	r4, [r0]
   15944:	mvn	r4, #0
   15948:	b	15920 <_obstack_memory_used@@Base+0x2ee8>
   1594c:	mvn	r4, #0
   15950:	b	15920 <_obstack_memory_used@@Base+0x2ee8>
   15954:	mov	r0, #14
   15958:	str	r4, [sp, #-8]!
   1595c:	str	lr, [sp, #4]
   15960:	bl	10f60 <nl_langinfo@plt>
   15964:	cmp	r0, #0
   15968:	beq	1598c <_obstack_memory_used@@Base+0x2f54>
   1596c:	ldrb	r2, [r0]
   15970:	movw	r3, #31492	; 0x7b04
   15974:	movt	r3, #1
   15978:	ldr	r4, [sp]
   1597c:	add	sp, sp, #4
   15980:	cmp	r2, #0
   15984:	moveq	r0, r3
   15988:	pop	{pc}		; (ldr pc, [sp], #4)
   1598c:	ldr	r4, [sp]
   15990:	add	sp, sp, #4
   15994:	movw	r0, #31492	; 0x7b04
   15998:	movt	r0, #1
   1599c:	pop	{pc}		; (ldr pc, [sp], #4)
   159a0:	strd	r4, [sp, #-20]!	; 0xffffffec
   159a4:	mov	r5, r2
   159a8:	strd	r6, [sp, #8]
   159ac:	subs	r6, r0, #0
   159b0:	mov	r7, r1
   159b4:	str	lr, [sp, #16]
   159b8:	sub	sp, sp, #12
   159bc:	addeq	r6, sp, #4
   159c0:	mov	r0, r6
   159c4:	bl	10e34 <mbrtowc@plt>
   159c8:	cmp	r5, #0
   159cc:	cmnne	r0, #3
   159d0:	mov	r4, r0
   159d4:	bhi	159f0 <_obstack_memory_used@@Base+0x2fb8>
   159d8:	mov	r0, r4
   159dc:	add	sp, sp, #12
   159e0:	ldrd	r4, [sp]
   159e4:	ldrd	r6, [sp, #8]
   159e8:	add	sp, sp, #16
   159ec:	pop	{pc}		; (ldr pc, [sp], #4)
   159f0:	mov	r0, #0
   159f4:	bl	15a48 <_obstack_memory_used@@Base+0x3010>
   159f8:	cmp	r0, #0
   159fc:	bne	159d8 <_obstack_memory_used@@Base+0x2fa0>
   15a00:	ldrb	r3, [r7]
   15a04:	mov	r4, #1
   15a08:	str	r3, [r6]
   15a0c:	b	159d8 <_obstack_memory_used@@Base+0x2fa0>
   15a10:	umull	r2, r3, r1, r2
   15a14:	cmp	r3, #0
   15a18:	bne	15a24 <_obstack_memory_used@@Base+0x2fec>
   15a1c:	mov	r1, r2
   15a20:	b	15874 <_obstack_memory_used@@Base+0x2e3c>
   15a24:	str	r4, [sp, #-8]!
   15a28:	str	lr, [sp, #4]
   15a2c:	bl	10ee8 <__errno_location@plt>
   15a30:	mov	r3, #12
   15a34:	ldr	r4, [sp]
   15a38:	add	sp, sp, #4
   15a3c:	str	r3, [r0]
   15a40:	mov	r0, #0
   15a44:	pop	{pc}		; (ldr pc, [sp], #4)
   15a48:	push	{lr}		; (str lr, [sp, #-4]!)
   15a4c:	sub	sp, sp, #268	; 0x10c
   15a50:	movw	r2, #257	; 0x101
   15a54:	add	r1, sp, #4
   15a58:	bl	15aa0 <_obstack_memory_used@@Base+0x3068>
   15a5c:	cmp	r0, #0
   15a60:	movne	r0, #0
   15a64:	bne	15a98 <_obstack_memory_used@@Base+0x3060>
   15a68:	movw	r1, #31500	; 0x7b0c
   15a6c:	movt	r1, #1
   15a70:	add	r0, sp, #4
   15a74:	bl	10d5c <strcmp@plt>
   15a78:	cmp	r0, #0
   15a7c:	beq	15a98 <_obstack_memory_used@@Base+0x3060>
   15a80:	add	r0, sp, #4
   15a84:	movw	r1, #31504	; 0x7b10
   15a88:	movt	r1, #1
   15a8c:	bl	10d5c <strcmp@plt>
   15a90:	adds	r0, r0, #0
   15a94:	movne	r0, #1
   15a98:	add	sp, sp, #268	; 0x10c
   15a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa0:	strd	r4, [sp, #-16]!
   15aa4:	mov	r5, r1
   15aa8:	mov	r1, #0
   15aac:	mov	r4, r2
   15ab0:	str	r6, [sp, #8]
   15ab4:	str	lr, [sp, #12]
   15ab8:	bl	10f48 <setlocale@plt>
   15abc:	subs	r6, r0, #0
   15ac0:	beq	15b40 <_obstack_memory_used@@Base+0x3108>
   15ac4:	bl	10edc <strlen@plt>
   15ac8:	cmp	r4, r0
   15acc:	bhi	15aec <_obstack_memory_used@@Base+0x30b4>
   15ad0:	cmp	r4, #0
   15ad4:	moveq	r0, #34	; 0x22
   15ad8:	bne	15b10 <_obstack_memory_used@@Base+0x30d8>
   15adc:	ldrd	r4, [sp]
   15ae0:	ldr	r6, [sp, #8]
   15ae4:	add	sp, sp, #12
   15ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   15aec:	add	r2, r0, #1
   15af0:	mov	r1, r6
   15af4:	mov	r0, r5
   15af8:	bl	10d8c <memcpy@plt>
   15afc:	ldrd	r4, [sp]
   15b00:	mov	r0, #0
   15b04:	ldr	r6, [sp, #8]
   15b08:	add	sp, sp, #12
   15b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b10:	sub	r4, r4, #1
   15b14:	mov	r1, r6
   15b18:	mov	r2, r4
   15b1c:	mov	r0, r5
   15b20:	bl	10d8c <memcpy@plt>
   15b24:	mov	r3, #0
   15b28:	mov	r0, #34	; 0x22
   15b2c:	strb	r3, [r5, r4]
   15b30:	ldrd	r4, [sp]
   15b34:	ldr	r6, [sp, #8]
   15b38:	add	sp, sp, #12
   15b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b40:	cmp	r4, #0
   15b44:	mov	r0, #22
   15b48:	strbne	r6, [r5]
   15b4c:	ldrd	r4, [sp]
   15b50:	ldr	r6, [sp, #8]
   15b54:	add	sp, sp, #12
   15b58:	pop	{pc}		; (ldr pc, [sp], #4)
   15b5c:	mov	r1, #0
   15b60:	b	10f48 <setlocale@plt>
   15b64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b68:	mov	r7, r0
   15b6c:	ldr	r6, [pc, #72]	; 15bbc <_obstack_memory_used@@Base+0x3184>
   15b70:	ldr	r5, [pc, #72]	; 15bc0 <_obstack_memory_used@@Base+0x3188>
   15b74:	add	r6, pc, r6
   15b78:	add	r5, pc, r5
   15b7c:	sub	r6, r6, r5
   15b80:	mov	r8, r1
   15b84:	mov	r9, r2
   15b88:	bl	10d18 <calloc@plt-0x20>
   15b8c:	asrs	r6, r6, #2
   15b90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b94:	mov	r4, #0
   15b98:	add	r4, r4, #1
   15b9c:	ldr	r3, [r5], #4
   15ba0:	mov	r2, r9
   15ba4:	mov	r1, r8
   15ba8:	mov	r0, r7
   15bac:	blx	r3
   15bb0:	cmp	r6, r4
   15bb4:	bne	15b98 <_obstack_memory_used@@Base+0x3160>
   15bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15bbc:	muleq	r1, r8, r3
   15bc0:	muleq	r1, r0, r3
   15bc4:	bx	lr
   15bc8:	ldr	r3, [pc, #12]	; 15bdc <_obstack_memory_used@@Base+0x31a4>
   15bcc:	mov	r1, #0
   15bd0:	add	r3, pc, r3
   15bd4:	ldr	r2, [r3]
   15bd8:	b	10ef4 <__cxa_atexit@plt>
   15bdc:	andeq	r2, r1, r8, lsl #10

Disassembly of section .fini:

00015be0 <.fini>:
   15be0:	push	{r3, lr}
   15be4:	pop	{r3, pc}
