
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	1218c <dcngettext@plt+0x119c>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000182b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #24, 20	; 0x18000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #24, 20	; 0x18000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #24, 20	; 0x18000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #24, 20	; 0x18000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #24, 20	; 0x18000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #24, 20	; 0x18000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #24, 20	; 0x18000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #24, 20	; 0x18000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #24, 20	; 0x18000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #24, 20	; 0x18000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #24, 20	; 0x18000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #24, 20	; 0x18000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #24, 20	; 0x18000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #24, 20	; 0x18000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #24, 20	; 0x18000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #24, 20	; 0x18000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #24, 20	; 0x18000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #24, 20	; 0x18000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #24, 20	; 0x18000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #24, 20	; 0x18000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #24, 20	; 0x18000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #24, 20	; 0x18000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #24, 20	; 0x18000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #24, 20	; 0x18000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #24, 20	; 0x18000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #24, 20	; 0x18000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #24, 20	; 0x18000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #24, 20	; 0x18000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #24, 20	; 0x18000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #24, 20	; 0x18000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #24, 20	; 0x18000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #24, 20	; 0x18000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #24, 20	; 0x18000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #24, 20	; 0x18000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #24, 20	; 0x18000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #24, 20	; 0x18000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #24, 20	; 0x18000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #24, 20	; 0x18000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #24, 20	; 0x18000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #24, 20	; 0x18000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #24, 20	; 0x18000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #24, 20	; 0x18000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #24, 20	; 0x18000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #24, 20	; 0x18000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #24, 20	; 0x18000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #24, 20	; 0x18000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #24, 20	; 0x18000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #24, 20	; 0x18000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11000:	mov	r5, #0
   11004:	movw	r4, #37228	; 0x916c
   11008:	movt	r4, #2
   1100c:	strd	r6, [sp, #8]
   11010:	movw	r6, #31608	; 0x7b78
   11014:	movt	r6, #1
   11018:	strd	r8, [sp, #16]
   1101c:	mov	r9, r0
   11020:	strd	sl, [sp, #24]
   11024:	mov	r8, r1
   11028:	movw	r7, #37236	; 0x9174
   1102c:	movt	r7, #2
   11030:	str	lr, [sp, #32]
   11034:	sub	sp, sp, #204	; 0xcc
   11038:	ldr	r0, [r1]
   1103c:	str	r5, [sp, #24]
   11040:	str	r4, [sp, #60]	; 0x3c
   11044:	bl	13e68 <dcngettext@plt+0x2e78>
   11048:	movw	r1, #30232	; 0x7618
   1104c:	movt	r1, #1
   11050:	ldr	sl, [pc, #4076]	; 12044 <dcngettext@plt+0x1054>
   11054:	mov	r0, #6
   11058:	bl	10f78 <setlocale@plt>
   1105c:	movw	r1, #31536	; 0x7b30
   11060:	movt	r1, #1
   11064:	movw	r0, #31368	; 0x7a88
   11068:	movt	r0, #1
   1106c:	bl	10fb4 <bindtextdomain@plt>
   11070:	movw	r0, #31368	; 0x7a88
   11074:	movt	r0, #1
   11078:	bl	10e1c <textdomain@plt>
   1107c:	movw	r0, #10864	; 0x2a70
   11080:	movt	r0, #1
   11084:	bl	1732c <dcngettext@plt+0x633c>
   11088:	mov	r3, r5
   1108c:	mov	r1, r5
   11090:	ldr	r0, [r4]
   11094:	mov	r2, #1
   11098:	bl	10f0c <setvbuf@plt>
   1109c:	str	r5, [sp, #28]
   110a0:	mvn	r5, #0
   110a4:	mov	r4, #0
   110a8:	mov	r3, sl
   110ac:	mov	r2, r6
   110b0:	mov	r1, r8
   110b4:	mov	r0, r9
   110b8:	str	r4, [sp]
   110bc:	bl	10eb8 <getopt_long@plt>
   110c0:	cmn	r0, #1
   110c4:	beq	11220 <dcngettext@plt+0x230>
   110c8:	cmp	r0, #119	; 0x77
   110cc:	beq	111f8 <dcngettext@plt+0x208>
   110d0:	ble	11108 <dcngettext@plt+0x118>
   110d4:	movw	r3, #257	; 0x101
   110d8:	cmp	r0, r3
   110dc:	beq	1120c <dcngettext@plt+0x21c>
   110e0:	ble	11140 <dcngettext@plt+0x150>
   110e4:	movw	r3, #259	; 0x103
   110e8:	cmp	r0, r3
   110ec:	beq	111ec <dcngettext@plt+0x1fc>
   110f0:	bge	11128 <dcngettext@plt+0x138>
   110f4:	mov	r3, #1
   110f8:	strb	r4, [r7, #6]
   110fc:	strb	r4, [r7, #7]
   11100:	strb	r3, [r7, #8]
   11104:	b	110a4 <dcngettext@plt+0xb4>
   11108:	cmp	r0, #98	; 0x62
   1110c:	beq	111e4 <dcngettext@plt+0x1f4>
   11110:	ble	11168 <dcngettext@plt+0x178>
   11114:	cmp	r0, #99	; 0x63
   11118:	bne	11158 <dcngettext@plt+0x168>
   1111c:	mov	r3, #1
   11120:	str	r3, [sp, #28]
   11124:	b	110a4 <dcngettext@plt+0xb4>
   11128:	cmp	r0, #260	; 0x104
   1112c:	bne	112d4 <dcngettext@plt+0x2e4>
   11130:	mov	r3, #1
   11134:	mov	r5, r3
   11138:	str	r3, [sp, #24]
   1113c:	b	110a4 <dcngettext@plt+0xb4>
   11140:	cmp	r0, #122	; 0x7a
   11144:	bne	111c0 <dcngettext@plt+0x1d0>
   11148:	movw	r3, #37116	; 0x90fc
   1114c:	movt	r3, #2
   11150:	strb	r4, [r3]
   11154:	b	110a4 <dcngettext@plt+0xb4>
   11158:	cmp	r0, #116	; 0x74
   1115c:	bne	112d4 <dcngettext@plt+0x2e4>
   11160:	mov	r5, r4
   11164:	b	110a4 <dcngettext@plt+0xb4>
   11168:	cmn	r0, #3
   1116c:	bne	111d4 <dcngettext@plt+0x1e4>
   11170:	ldr	r1, [sp, #60]	; 0x3c
   11174:	movw	r3, #31560	; 0x7b48
   11178:	movt	r3, #1
   1117c:	movw	r2, #31576	; 0x7b58
   11180:	movt	r2, #1
   11184:	str	r4, [sp, #12]
   11188:	ldr	r0, [r1]
   1118c:	movw	r1, #31592	; 0x7b68
   11190:	movt	r1, #1
   11194:	stm	sp, {r1, r2, r3}
   11198:	movw	r3, #37124	; 0x9104
   1119c:	movt	r3, #2
   111a0:	movw	r2, #31364	; 0x7a84
   111a4:	movt	r2, #1
   111a8:	movw	r1, #29820	; 0x747c
   111ac:	movt	r1, #1
   111b0:	ldr	r3, [r3]
   111b4:	bl	16600 <dcngettext@plt+0x5610>
   111b8:	mov	r0, r4
   111bc:	bl	10ed0 <exit@plt>
   111c0:	cmp	r0, #256	; 0x100
   111c4:	bne	112d4 <dcngettext@plt+0x2e4>
   111c8:	mov	r3, #1
   111cc:	strb	r3, [r7, #5]
   111d0:	b	110a4 <dcngettext@plt+0xb4>
   111d4:	cmn	r0, #2
   111d8:	bne	112d4 <dcngettext@plt+0x2e4>
   111dc:	mov	r0, r4
   111e0:	bl	12620 <dcngettext@plt+0x1630>
   111e4:	mov	r5, #1
   111e8:	b	110a4 <dcngettext@plt+0xb4>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r7, #9]
   111f4:	b	110a4 <dcngettext@plt+0xb4>
   111f8:	mov	r3, #1
   111fc:	strb	r4, [r7, #6]
   11200:	strb	r3, [r7, #7]
   11204:	strb	r4, [r7, #8]
   11208:	b	110a4 <dcngettext@plt+0xb4>
   1120c:	mov	r3, #1
   11210:	strb	r3, [r7, #6]
   11214:	strb	r4, [r7, #7]
   11218:	strb	r4, [r7, #8]
   1121c:	b	110a4 <dcngettext@plt+0xb4>
   11220:	ldr	r6, [sp, #24]
   11224:	cmp	r5, r4
   11228:	movw	sl, #37236	; 0x9174
   1122c:	movt	sl, #2
   11230:	mov	r3, #34	; 0x22
   11234:	mov	r2, #32
   11238:	movne	r6, r4
   1123c:	str	r2, [sl]
   11240:	cmp	r6, r4
   11244:	str	r3, [sl, #12]
   11248:	bne	12138 <dcngettext@plt+0x1148>
   1124c:	movw	r3, #37116	; 0x90fc
   11250:	movt	r3, #2
   11254:	str	r3, [sp, #88]	; 0x58
   11258:	ldrb	r3, [r3]
   1125c:	cmp	r3, #10
   11260:	ldr	r3, [sp, #28]
   11264:	beq	112dc <dcngettext@plt+0x2ec>
   11268:	cmp	r3, #0
   1126c:	movwne	r1, #31652	; 0x7ba4
   11270:	movtne	r1, #1
   11274:	bne	120f0 <dcngettext@plt+0x1100>
   11278:	ldrb	r3, [sl, #5]
   1127c:	cmp	r3, #0
   11280:	bne	12144 <dcngettext@plt+0x1154>
   11284:	ldrb	r3, [sl, #6]
   11288:	cmp	r3, #0
   1128c:	bne	1212c <dcngettext@plt+0x113c>
   11290:	ldrb	r3, [sl, #7]
   11294:	cmp	r3, #0
   11298:	bne	11fbc <dcngettext@plt+0xfcc>
   1129c:	ldrb	r3, [sl, #8]
   112a0:	ldr	r2, [sp, #28]
   112a4:	eor	r3, r3, #1
   112a8:	orrs	r4, r2, r3
   112ac:	movweq	r1, #32048	; 0x7d30
   112b0:	movteq	r1, #1
   112b4:	bne	11334 <dcngettext@plt+0x344>
   112b8:	mov	r2, #5
   112bc:	mov	r0, r4
   112c0:	bl	10e04 <dcgettext@plt>
   112c4:	mov	r2, r0
   112c8:	mov	r1, r4
   112cc:	mov	r0, r4
   112d0:	bl	10e70 <error@plt>
   112d4:	mov	r0, #1
   112d8:	bl	12620 <dcngettext@plt+0x1630>
   112dc:	ldr	r2, [sp, #24]
   112e0:	ands	r4, r3, r2
   112e4:	movwne	r1, #31712	; 0x7be0
   112e8:	movtne	r1, #1
   112ec:	bne	120f0 <dcngettext@plt+0x1100>
   112f0:	ldr	r3, [sp, #28]
   112f4:	cmp	r5, #0
   112f8:	movlt	r3, #0
   112fc:	andge	r3, r3, #1
   11300:	cmp	r3, #0
   11304:	movwne	r1, #31772	; 0x7c1c
   11308:	movtne	r1, #1
   1130c:	bne	112b8 <dcngettext@plt+0x2c8>
   11310:	ldrb	r3, [sl, #5]
   11314:	cmp	r3, #0
   11318:	beq	12114 <dcngettext@plt+0x1124>
   1131c:	ldr	r3, [sp, #28]
   11320:	cmp	r3, #0
   11324:	beq	12144 <dcngettext@plt+0x1154>
   11328:	ldrb	r3, [sl, #7]
   1132c:	cmp	r3, #0
   11330:	bne	11348 <dcngettext@plt+0x358>
   11334:	ldr	r3, [sp, #28]
   11338:	ldrb	r2, [sl, #9]
   1133c:	eor	r3, r3, #1
   11340:	tst	r2, r3
   11344:	bne	120e8 <dcngettext@plt+0x10f8>
   11348:	movw	r3, #37208	; 0x9158
   1134c:	movt	r3, #2
   11350:	add	r2, r8, r9, lsl #2
   11354:	ldr	r3, [r3]
   11358:	cmn	r5, #1
   1135c:	moveq	r5, #0
   11360:	str	r2, [sp, #76]	; 0x4c
   11364:	cmp	r3, r9
   11368:	bne	11380 <dcngettext@plt+0x390>
   1136c:	add	r2, r2, #4
   11370:	str	r2, [sp, #76]	; 0x4c
   11374:	movw	r2, #29812	; 0x7474
   11378:	movt	r2, #1
   1137c:	str	r2, [r8, r9, lsl #2]
   11380:	add	r8, r8, r3, lsl #2
   11384:	ldr	r3, [sp, #76]	; 0x4c
   11388:	cmp	r3, r8
   1138c:	bls	1208c <dcngettext@plt+0x109c>
   11390:	cmp	r5, #0
   11394:	movw	r2, #32692	; 0x7fb4
   11398:	movt	r2, #1
   1139c:	movne	r3, #42	; 0x2a
   113a0:	str	r8, [sp, #32]
   113a4:	moveq	r3, #32
   113a8:	str	sl, [sp, #68]	; 0x44
   113ac:	str	r2, [sp, #128]	; 0x80
   113b0:	str	r3, [sp, #140]	; 0x8c
   113b4:	uxtb	r3, r3
   113b8:	str	r3, [sp, #132]	; 0x84
   113bc:	movw	r3, #29944	; 0x74f8
   113c0:	movt	r3, #1
   113c4:	str	r3, [sp, #40]	; 0x28
   113c8:	movw	r3, #32680	; 0x7fa8
   113cc:	movt	r3, #1
   113d0:	str	r3, [sp, #136]	; 0x88
   113d4:	mov	r3, #1
   113d8:	str	r3, [sp, #64]	; 0x40
   113dc:	ldr	r3, [sp, #28]
   113e0:	cmp	r3, #0
   113e4:	ldr	r3, [sp, #32]
   113e8:	ldr	r0, [r3], #4
   113ec:	str	r3, [sp, #32]
   113f0:	str	r0, [sp, #36]	; 0x24
   113f4:	beq	1196c <dcngettext@plt+0x97c>
   113f8:	movw	r1, #29812	; 0x7474
   113fc:	movt	r1, #1
   11400:	bl	10d8c <strcmp@plt>
   11404:	subs	r3, r0, #0
   11408:	str	r3, [sp, #56]	; 0x38
   1140c:	bne	11b28 <dcngettext@plt+0xb38>
   11410:	ldr	ip, [sp, #68]	; 0x44
   11414:	mov	r3, #1
   11418:	movw	r1, #32176	; 0x7db0
   1141c:	movt	r1, #1
   11420:	mov	r2, #5
   11424:	strb	r3, [ip, #4]
   11428:	bl	10e04 <dcgettext@plt>
   1142c:	movw	r3, #37224	; 0x9168
   11430:	movt	r3, #2
   11434:	str	r0, [sp, #36]	; 0x24
   11438:	ldr	r9, [r3]
   1143c:	mov	r3, #0
   11440:	mov	r0, #0
   11444:	ldr	r7, [sp, #68]	; 0x44
   11448:	mov	r1, #0
   1144c:	movw	r2, #32304	; 0x7e30
   11450:	movt	r2, #1
   11454:	mov	sl, #1
   11458:	mov	fp, #0
   1145c:	strd	r0, [sp, #16]
   11460:	str	r3, [sp, #72]	; 0x48
   11464:	str	r3, [sp, #92]	; 0x5c
   11468:	str	r3, [sp, #152]	; 0x98
   1146c:	str	r3, [sp, #156]	; 0x9c
   11470:	movw	r3, #32288	; 0x7e20
   11474:	movt	r3, #1
   11478:	strd	r0, [sp, #48]	; 0x30
   1147c:	strd	r0, [sp, #80]	; 0x50
   11480:	str	r3, [sp, #96]	; 0x60
   11484:	str	r2, [sp, #100]	; 0x64
   11488:	mov	r3, r9
   1148c:	mov	r2, #10
   11490:	add	r1, sp, #156	; 0x9c
   11494:	add	r0, sp, #152	; 0x98
   11498:	bl	10d80 <__getdelim@plt>
   1149c:	subs	r4, r0, #0
   114a0:	ble	11794 <dcngettext@plt+0x7a4>
   114a4:	ldr	r3, [sp, #152]	; 0x98
   114a8:	ldrb	r2, [r3]
   114ac:	cmp	r2, #35	; 0x23
   114b0:	beq	11594 <dcngettext@plt+0x5a4>
   114b4:	add	r2, r3, r4
   114b8:	ldrb	r0, [r2, #-1]
   114bc:	cmp	r0, #10
   114c0:	subeq	r4, r4, #1
   114c4:	cmp	r4, #0
   114c8:	movle	r2, r4
   114cc:	subgt	r2, r4, #1
   114d0:	ldrb	r0, [r3, r2]
   114d4:	cmp	r0, #13
   114d8:	subeq	r4, r4, #1
   114dc:	cmp	r4, #0
   114e0:	beq	11594 <dcngettext@plt+0x5a4>
   114e4:	mov	r2, #0
   114e8:	strb	r2, [r3, r4]
   114ec:	ldr	r8, [sp, #152]	; 0x98
   114f0:	ldrb	r3, [r8]
   114f4:	cmp	r3, #32
   114f8:	cmpne	r3, #9
   114fc:	moveq	r6, #1
   11500:	movne	r6, #0
   11504:	bne	11524 <dcngettext@plt+0x534>
   11508:	mov	r2, r8
   1150c:	rsb	r1, r8, #1
   11510:	add	r6, r1, r2
   11514:	ldrb	r3, [r2, #1]!
   11518:	cmp	r3, #9
   1151c:	cmpne	r3, #32
   11520:	beq	11510 <dcngettext@plt+0x520>
   11524:	cmp	r3, #92	; 0x5c
   11528:	mov	r2, #3
   1152c:	ldr	r1, [sp, #40]	; 0x28
   11530:	addeq	r6, r6, #1
   11534:	movne	r3, #0
   11538:	ldreq	r3, [sp, #28]
   1153c:	add	r5, r8, r6
   11540:	mov	r0, r5
   11544:	str	r3, [sp, #44]	; 0x2c
   11548:	bl	10fcc <strncmp@plt>
   1154c:	cmp	r0, #0
   11550:	bne	115f0 <dcngettext@plt+0x600>
   11554:	add	r2, r6, #3
   11558:	ldrb	r3, [r8, r2]
   1155c:	cmp	r3, #32
   11560:	addeq	r2, r6, #4
   11564:	ldrbeq	r3, [r8, r2]
   11568:	cmp	r3, #40	; 0x28
   1156c:	beq	11bd0 <dcngettext@plt+0xbe0>
   11570:	ldr	r2, [sp, #16]
   11574:	ldrb	r3, [r7, #7]
   11578:	adds	r2, r2, #1
   1157c:	str	r2, [sp, #16]
   11580:	ldr	r2, [sp, #20]
   11584:	adc	r2, r2, #0
   11588:	cmp	r3, #0
   1158c:	str	r2, [sp, #20]
   11590:	bne	119d0 <dcngettext@plt+0x9e0>
   11594:	ldr	r3, [r9]
   11598:	ands	r3, r3, #48	; 0x30
   1159c:	bne	11794 <dcngettext@plt+0x7a4>
   115a0:	adds	sl, sl, #1
   115a4:	adc	fp, fp, #0
   115a8:	orrs	r2, sl, fp
   115ac:	bne	11488 <dcngettext@plt+0x498>
   115b0:	mov	r0, r3
   115b4:	mov	r2, #5
   115b8:	movw	r1, #32192	; 0x7dc0
   115bc:	movt	r1, #1
   115c0:	mov	r4, r3
   115c4:	bl	10e04 <dcgettext@plt>
   115c8:	mov	r5, r0
   115cc:	mov	r1, #3
   115d0:	ldr	r2, [sp, #36]	; 0x24
   115d4:	mov	r0, r4
   115d8:	bl	15f80 <dcngettext@plt+0x4f90>
   115dc:	mov	r3, r0
   115e0:	mov	r2, r5
   115e4:	mov	r1, r4
   115e8:	mov	r0, #1
   115ec:	bl	10e70 <error@plt>
   115f0:	ldrb	r1, [r8, r6]
   115f4:	sub	r2, r4, r6
   115f8:	ldr	r3, [r7, #12]
   115fc:	cmp	r1, #92	; 0x5c
   11600:	addeq	r3, r3, #1
   11604:	cmp	r2, r3
   11608:	bcc	11570 <dcngettext@plt+0x580>
   1160c:	ldr	r3, [r7]
   11610:	add	r6, r6, r3
   11614:	ldrb	r3, [r8, r6]
   11618:	cmp	r3, #32
   1161c:	cmpne	r3, #9
   11620:	movne	r3, #1
   11624:	moveq	r3, #0
   11628:	bne	11570 <dcngettext@plt+0x580>
   1162c:	mov	r0, r5
   11630:	strb	r3, [r8, r6]
   11634:	bl	1230c <dcngettext@plt+0x131c>
   11638:	cmp	r0, #0
   1163c:	beq	11570 <dcngettext@plt+0x580>
   11640:	ldr	r3, [sp, #88]	; 0x58
   11644:	add	r1, r6, #1
   11648:	ldr	r2, [r3, #4]
   1164c:	sub	r3, r4, r1
   11650:	cmp	r3, #1
   11654:	beq	11c28 <dcngettext@plt+0xc38>
   11658:	ldrb	r3, [r8, r1]
   1165c:	cmp	r3, #32
   11660:	cmpne	r3, #42	; 0x2a
   11664:	movne	r3, #1
   11668:	moveq	r3, #0
   1166c:	bne	11c28 <dcngettext@plt+0xc38>
   11670:	cmp	r2, #1
   11674:	beq	11684 <dcngettext@plt+0x694>
   11678:	ldr	r2, [sp, #88]	; 0x58
   1167c:	add	r1, r6, #2
   11680:	str	r3, [r2, #4]
   11684:	ldr	r3, [sp, #44]	; 0x2c
   11688:	add	r6, r8, r1
   1168c:	cmp	r3, #0
   11690:	bne	11f4c <dcngettext@plt+0xf5c>
   11694:	ldr	r3, [sp, #56]	; 0x38
   11698:	cmp	r3, #0
   1169c:	bne	116b8 <dcngettext@plt+0x6c8>
   116a0:	movw	r1, #29812	; 0x7474
   116a4:	movt	r1, #1
   116a8:	mov	r0, r6
   116ac:	bl	10d8c <strcmp@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	11570 <dcngettext@plt+0x580>
   116b8:	ldrb	r3, [r7, #6]
   116bc:	cmp	r3, #0
   116c0:	movne	r8, #0
   116c4:	bne	116dc <dcngettext@plt+0x6ec>
   116c8:	mov	r1, #10
   116cc:	mov	r0, r6
   116d0:	bl	10ee8 <strchr@plt>
   116d4:	adds	r8, r0, #0
   116d8:	movne	r8, #1
   116dc:	add	r2, sp, #151	; 0x97
   116e0:	add	r1, sp, #180	; 0xb4
   116e4:	mov	r0, r6
   116e8:	bl	12494 <dcngettext@plt+0x14a4>
   116ec:	subs	r3, r0, #0
   116f0:	str	r8, [sp, #44]	; 0x2c
   116f4:	str	r3, [sp, #72]	; 0x48
   116f8:	bne	11a1c <dcngettext@plt+0xa2c>
   116fc:	ldr	r2, [sp, #48]	; 0x30
   11700:	ldrb	r3, [r7, #6]
   11704:	adds	r2, r2, #1
   11708:	str	r2, [sp, #48]	; 0x30
   1170c:	ldr	r2, [sp, #52]	; 0x34
   11710:	adc	r2, r2, #0
   11714:	cmp	r3, #0
   11718:	str	r2, [sp, #52]	; 0x34
   1171c:	bne	11780 <dcngettext@plt+0x790>
   11720:	cmp	r8, #0
   11724:	beq	11750 <dcngettext@plt+0x760>
   11728:	ldr	r3, [sp, #60]	; 0x3c
   1172c:	ldr	r0, [r3]
   11730:	ldr	r3, [r0, #20]
   11734:	ldr	r2, [r0, #24]
   11738:	cmp	r3, r2
   1173c:	addcc	r1, r3, #1
   11740:	movcc	r2, #92	; 0x5c
   11744:	strcc	r1, [r0, #20]
   11748:	strbcc	r2, [r3]
   1174c:	bcs	120c4 <dcngettext@plt+0x10d4>
   11750:	mov	r0, r6
   11754:	ldr	r1, [sp, #44]	; 0x2c
   11758:	bl	12390 <dcngettext@plt+0x13a0>
   1175c:	movw	r1, #32268	; 0x7e0c
   11760:	movt	r1, #1
   11764:	mov	r2, #5
   11768:	mov	r0, #0
   1176c:	bl	10e04 <dcgettext@plt>
   11770:	mov	r2, r0
   11774:	mov	r0, #1
   11778:	ldr	r1, [sp, #96]	; 0x60
   1177c:	bl	10f24 <__printf_chk@plt>
   11780:	ldr	r3, [sp, #28]
   11784:	str	r3, [sp, #72]	; 0x48
   11788:	ldr	r3, [r9]
   1178c:	ands	r3, r3, #48	; 0x30
   11790:	beq	115a0 <dcngettext@plt+0x5b0>
   11794:	ldr	r0, [sp, #152]	; 0x98
   11798:	bl	13d38 <dcngettext@plt+0x2d48>
   1179c:	ldr	r3, [r9]
   117a0:	mov	r0, r9
   117a4:	ands	r5, r3, #32
   117a8:	ldr	r3, [sp, #56]	; 0x38
   117ac:	mvneq	r4, #0
   117b0:	movne	r4, #0
   117b4:	cmp	r3, #0
   117b8:	bne	11b74 <dcngettext@plt+0xb84>
   117bc:	bl	10f9c <clearerr_unlocked@plt>
   117c0:	cmp	r4, #0
   117c4:	bge	11d54 <dcngettext@plt+0xd64>
   117c8:	ldr	r3, [sp, #72]	; 0x48
   117cc:	cmp	r3, #0
   117d0:	beq	11d64 <dcngettext@plt+0xd74>
   117d4:	ldr	r3, [sp, #68]	; 0x44
   117d8:	ldrb	r3, [r3, #6]
   117dc:	cmp	r3, #0
   117e0:	bne	11d40 <dcngettext@plt+0xd50>
   117e4:	ldrd	r0, [sp, #16]
   117e8:	orrs	r3, r0, r1
   117ec:	beq	11840 <dcngettext@plt+0x850>
   117f0:	mov	r3, #0
   117f4:	mvn	r2, #0
   117f8:	cmp	r1, r3
   117fc:	cmpeq	r0, r2
   11800:	ldrls	r3, [sp, #16]
   11804:	bhi	12014 <dcngettext@plt+0x1024>
   11808:	mov	r0, #5
   1180c:	movw	r2, #32372	; 0x7e74
   11810:	movt	r2, #1
   11814:	movw	r1, #32420	; 0x7ea4
   11818:	movt	r1, #1
   1181c:	str	r0, [sp]
   11820:	mov	r0, #0
   11824:	bl	10ff0 <dcngettext@plt>
   11828:	ldrd	r4, [sp, #16]
   1182c:	mov	r1, #0
   11830:	mov	r2, r0
   11834:	mov	r0, r1
   11838:	strd	r4, [sp]
   1183c:	bl	10e70 <error@plt>
   11840:	ldrd	r0, [sp, #48]	; 0x30
   11844:	orrs	r3, r0, r1
   11848:	beq	1189c <dcngettext@plt+0x8ac>
   1184c:	mov	r3, #0
   11850:	mvn	r2, #0
   11854:	cmp	r1, r3
   11858:	cmpeq	r0, r2
   1185c:	ldrls	r3, [sp, #48]	; 0x30
   11860:	bhi	11ff8 <dcngettext@plt+0x1008>
   11864:	mov	r0, #5
   11868:	movw	r2, #32464	; 0x7ed0
   1186c:	movt	r2, #1
   11870:	movw	r1, #32512	; 0x7f00
   11874:	movt	r1, #1
   11878:	str	r0, [sp]
   1187c:	mov	r0, #0
   11880:	bl	10ff0 <dcngettext@plt>
   11884:	ldrd	r4, [sp, #48]	; 0x30
   11888:	mov	r1, #0
   1188c:	mov	r2, r0
   11890:	mov	r0, r1
   11894:	strd	r4, [sp]
   11898:	bl	10e70 <error@plt>
   1189c:	ldrd	r0, [sp, #80]	; 0x50
   118a0:	orrs	r3, r0, r1
   118a4:	beq	118f8 <dcngettext@plt+0x908>
   118a8:	mov	r3, #0
   118ac:	mvn	r2, #0
   118b0:	cmp	r1, r3
   118b4:	cmpeq	r0, r2
   118b8:	ldrls	r3, [sp, #80]	; 0x50
   118bc:	bhi	11fdc <dcngettext@plt+0xfec>
   118c0:	mov	r0, #5
   118c4:	movw	r2, #32556	; 0x7f2c
   118c8:	movt	r2, #1
   118cc:	movw	r1, #32604	; 0x7f5c
   118d0:	movt	r1, #1
   118d4:	str	r0, [sp]
   118d8:	mov	r0, #0
   118dc:	bl	10ff0 <dcngettext@plt>
   118e0:	ldrd	r4, [sp, #80]	; 0x50
   118e4:	mov	r1, #0
   118e8:	mov	r2, r0
   118ec:	mov	r0, r1
   118f0:	strd	r4, [sp]
   118f4:	bl	10e70 <error@plt>
   118f8:	ldr	r3, [sp, #68]	; 0x44
   118fc:	ldrb	r3, [r3, #5]
   11900:	cmp	r3, #0
   11904:	beq	11d40 <dcngettext@plt+0xd50>
   11908:	ldr	r3, [sp, #92]	; 0x5c
   1190c:	cmp	r3, #0
   11910:	beq	12030 <dcngettext@plt+0x1040>
   11914:	ldrd	r0, [sp, #48]	; 0x30
   11918:	ldrd	r2, [sp, #80]	; 0x50
   1191c:	orr	ip, r0, r2
   11920:	orr	r3, r1, r3
   11924:	mov	lr, r2
   11928:	str	ip, [sp, #104]	; 0x68
   1192c:	str	r3, [sp, #108]	; 0x6c
   11930:	ldrd	r2, [sp, #104]	; 0x68
   11934:	orrs	r3, r2, r3
   11938:	bne	11d4c <dcngettext@plt+0xd5c>
   1193c:	ldr	r3, [sp, #68]	; 0x44
   11940:	ldrb	r9, [r3, #9]
   11944:	ldrd	r2, [sp, #16]
   11948:	eor	r9, r9, #1
   1194c:	mov	r1, r2
   11950:	orrs	r3, r1, r3
   11954:	orreq	r9, r9, #1
   11958:	and	r9, r9, #1
   1195c:	ldr	r3, [sp, #64]	; 0x40
   11960:	and	r3, r3, r9
   11964:	str	r3, [sp, #64]	; 0x40
   11968:	b	11988 <dcngettext@plt+0x998>
   1196c:	add	r2, sp, #180	; 0xb4
   11970:	add	r1, sp, #160	; 0xa0
   11974:	ldr	r0, [sp, #36]	; 0x24
   11978:	bl	12494 <dcngettext@plt+0x14a4>
   1197c:	subs	r5, r0, #0
   11980:	bne	11c40 <dcngettext@plt+0xc50>
   11984:	str	r5, [sp, #64]	; 0x40
   11988:	ldr	r2, [sp, #32]
   1198c:	ldr	r3, [sp, #76]	; 0x4c
   11990:	cmp	r3, r2
   11994:	bhi	113dc <dcngettext@plt+0x3ec>
   11998:	ldr	sl, [sp, #68]	; 0x44
   1199c:	ldrb	r3, [sl, #4]
   119a0:	cmp	r3, #0
   119a4:	bne	11f78 <dcngettext@plt+0xf88>
   119a8:	ldr	r3, [sp, #64]	; 0x40
   119ac:	eor	r0, r3, #1
   119b0:	uxtb	r0, r0
   119b4:	add	sp, sp, #204	; 0xcc
   119b8:	ldrd	r4, [sp]
   119bc:	ldrd	r6, [sp, #8]
   119c0:	ldrd	r8, [sp, #16]
   119c4:	ldrd	sl, [sp, #24]
   119c8:	add	sp, sp, #32
   119cc:	pop	{pc}		; (ldr pc, [sp], #4)
   119d0:	mov	r2, #5
   119d4:	movw	r1, #32220	; 0x7ddc
   119d8:	movt	r1, #1
   119dc:	mov	r0, #0
   119e0:	bl	10e04 <dcgettext@plt>
   119e4:	mov	r4, r0
   119e8:	mov	r1, #3
   119ec:	ldr	r2, [sp, #36]	; 0x24
   119f0:	mov	r0, #0
   119f4:	bl	15f80 <dcngettext@plt+0x4f90>
   119f8:	ldr	ip, [sp, #40]	; 0x28
   119fc:	mov	r1, #0
   11a00:	mov	r3, r0
   11a04:	mov	r2, r4
   11a08:	mov	r0, r1
   11a0c:	strd	sl, [sp]
   11a10:	str	ip, [sp, #8]
   11a14:	bl	10e70 <error@plt>
   11a18:	b	11594 <dcngettext@plt+0x5a4>
   11a1c:	ldrb	r3, [r7, #5]
   11a20:	cmp	r3, #0
   11a24:	beq	11a34 <dcngettext@plt+0xa44>
   11a28:	ldrb	r3, [sp, #151]	; 0x97
   11a2c:	cmp	r3, #0
   11a30:	bne	11780 <dcngettext@plt+0x790>
   11a34:	ldr	r3, [r7]
   11a38:	lsrs	r3, r3, #1
   11a3c:	str	r3, [sp, #120]	; 0x78
   11a40:	beq	11e38 <dcngettext@plt+0xe48>
   11a44:	bl	10ea0 <__ctype_tolower_loc@plt>
   11a48:	add	ip, r5, #1
   11a4c:	movw	r1, #29520	; 0x7350
   11a50:	movt	r1, #1
   11a54:	add	r2, sp, #180	; 0xb4
   11a58:	strd	sl, [sp, #112]	; 0x70
   11a5c:	mov	r4, #0
   11a60:	mov	fp, r9
   11a64:	str	r7, [sp, #124]	; 0x7c
   11a68:	mov	r9, ip
   11a6c:	mov	r7, r6
   11a70:	ldr	r0, [r0]
   11a74:	ldr	r6, [sp, #120]	; 0x78
   11a78:	b	11aa4 <dcngettext@plt+0xab4>
   11a7c:	ldrb	ip, [r9, r4, lsl #1]
   11a80:	and	r3, r3, #15
   11a84:	add	r3, r1, r3
   11a88:	ldrb	r3, [r3, #264]	; 0x108
   11a8c:	ldr	ip, [r0, ip, lsl #2]
   11a90:	cmp	ip, r3
   11a94:	bne	11ac0 <dcngettext@plt+0xad0>
   11a98:	add	r4, r4, #1
   11a9c:	cmp	r6, r4
   11aa0:	beq	11e28 <dcngettext@plt+0xe38>
   11aa4:	ldrb	r3, [r2], #1
   11aa8:	ldrb	lr, [r5, r4, lsl #1]
   11aac:	add	ip, r1, r3, lsr #4
   11ab0:	ldrb	ip, [ip, #264]	; 0x108
   11ab4:	ldr	lr, [r0, lr, lsl #2]
   11ab8:	cmp	lr, ip
   11abc:	beq	11a7c <dcngettext@plt+0xa8c>
   11ac0:	ldr	r2, [sp, #80]	; 0x50
   11ac4:	mov	r6, r7
   11ac8:	mov	r9, fp
   11acc:	ldrd	sl, [sp, #112]	; 0x70
   11ad0:	ldr	r7, [sp, #124]	; 0x7c
   11ad4:	adds	r2, r2, #1
   11ad8:	str	r2, [sp, #80]	; 0x50
   11adc:	ldr	r2, [sp, #84]	; 0x54
   11ae0:	ldrb	r3, [r7, #6]
   11ae4:	adc	r2, r2, #0
   11ae8:	cmp	r3, #0
   11aec:	str	r2, [sp, #84]	; 0x54
   11af0:	bne	11780 <dcngettext@plt+0x790>
   11af4:	cmp	r8, #0
   11af8:	bne	11e6c <dcngettext@plt+0xe7c>
   11afc:	mov	r0, r6
   11b00:	ldr	r1, [sp, #44]	; 0x2c
   11b04:	bl	12390 <dcngettext@plt+0x13a0>
   11b08:	ldr	r3, [sp, #120]	; 0x78
   11b0c:	cmp	r3, r4
   11b10:	beq	1205c <dcngettext@plt+0x106c>
   11b14:	movw	r1, #32296	; 0x7e28
   11b18:	movt	r1, #1
   11b1c:	mov	r2, #5
   11b20:	mov	r0, #0
   11b24:	b	1176c <dcngettext@plt+0x77c>
   11b28:	movw	r1, #29816	; 0x7478
   11b2c:	movt	r1, #1
   11b30:	ldr	r0, [sp, #36]	; 0x24
   11b34:	bl	13c8c <dcngettext@plt+0x2c9c>
   11b38:	subs	r9, r0, #0
   11b3c:	bne	1143c <dcngettext@plt+0x44c>
   11b40:	bl	10ef4 <__errno_location@plt>
   11b44:	ldr	r4, [r0]
   11b48:	mov	r1, #3
   11b4c:	mov	r0, r9
   11b50:	ldr	r2, [sp, #36]	; 0x24
   11b54:	bl	15f80 <dcngettext@plt+0x4f90>
   11b58:	mov	r3, r0
   11b5c:	movw	r2, #32940	; 0x80ac
   11b60:	movt	r2, #1
   11b64:	mov	r0, r9
   11b68:	mov	r1, r4
   11b6c:	bl	10e70 <error@plt>
   11b70:	b	1195c <dcngettext@plt+0x96c>
   11b74:	bl	13b78 <dcngettext@plt+0x2b88>
   11b78:	cmp	r0, #0
   11b7c:	beq	117c0 <dcngettext@plt+0x7d0>
   11b80:	cmp	r5, #0
   11b84:	beq	11f6c <dcngettext@plt+0xf7c>
   11b88:	movw	r1, #32308	; 0x7e34
   11b8c:	movt	r1, #1
   11b90:	mov	r2, #5
   11b94:	mov	r0, #0
   11b98:	bl	10e04 <dcgettext@plt>
   11b9c:	mov	r5, r0
   11ba0:	mov	r4, #0
   11ba4:	mov	r1, #3
   11ba8:	mov	r0, #0
   11bac:	ldr	r2, [sp, #36]	; 0x24
   11bb0:	bl	15f80 <dcngettext@plt+0x4f90>
   11bb4:	mov	r3, r0
   11bb8:	mov	r2, r5
   11bbc:	mov	r1, r4
   11bc0:	mov	r0, #0
   11bc4:	mov	r9, #0
   11bc8:	bl	10e70 <error@plt>
   11bcc:	b	1195c <dcngettext@plt+0x96c>
   11bd0:	add	r2, r2, #1
   11bd4:	subs	r4, r4, r2
   11bd8:	beq	11570 <dcngettext@plt+0x580>
   11bdc:	subs	r4, r4, #1
   11be0:	add	r6, r8, r2
   11be4:	beq	11c10 <dcngettext@plt+0xc20>
   11be8:	ldrb	r1, [r6, r4]
   11bec:	add	r3, r6, r4
   11bf0:	cmp	r1, #41	; 0x29
   11bf4:	bne	11c08 <dcngettext@plt+0xc18>
   11bf8:	b	11dac <dcngettext@plt+0xdbc>
   11bfc:	ldrb	r1, [r3, #-1]!
   11c00:	cmp	r1, #41	; 0x29
   11c04:	beq	11da8 <dcngettext@plt+0xdb8>
   11c08:	subs	r4, r4, #1
   11c0c:	bne	11bfc <dcngettext@plt+0xc0c>
   11c10:	ldrb	r3, [r8, r2]
   11c14:	cmp	r3, #41	; 0x29
   11c18:	bne	11570 <dcngettext@plt+0x580>
   11c1c:	mov	r5, r6
   11c20:	mov	r4, #0
   11c24:	b	11db0 <dcngettext@plt+0xdc0>
   11c28:	cmp	r2, #0
   11c2c:	beq	11570 <dcngettext@plt+0x580>
   11c30:	ldr	r2, [sp, #88]	; 0x58
   11c34:	mov	r3, #1
   11c38:	str	r3, [r2, #4]
   11c3c:	b	11684 <dcngettext@plt+0x694>
   11c40:	ldr	r3, [sp, #88]	; 0x58
   11c44:	ldrb	r6, [r3]
   11c48:	cmp	r6, #10
   11c4c:	beq	11ea0 <dcngettext@plt+0xeb0>
   11c50:	ldr	r5, [sp, #28]
   11c54:	ldr	r3, [sp, #24]
   11c58:	cmp	r3, #0
   11c5c:	bne	11ee8 <dcngettext@plt+0xef8>
   11c60:	ldr	r3, [sp, #68]	; 0x44
   11c64:	ldr	r3, [r3]
   11c68:	lsrs	r3, r3, #1
   11c6c:	beq	11cac <dcngettext@plt+0xcbc>
   11c70:	ldr	r8, [sp, #68]	; 0x44
   11c74:	add	r7, sp, #160	; 0xa0
   11c78:	mov	r4, #0
   11c7c:	ldr	r9, [sp, #128]	; 0x80
   11c80:	mov	r1, r9
   11c84:	mov	r0, #1
   11c88:	ldrb	r2, [r7], #1
   11c8c:	add	r4, r4, #1
   11c90:	bl	10f24 <__printf_chk@plt>
   11c94:	ldr	r3, [r8]
   11c98:	cmp	r4, r3, lsr #1
   11c9c:	bcc	11c80 <dcngettext@plt+0xc90>
   11ca0:	ldr	r3, [sp, #24]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11d08 <dcngettext@plt+0xd18>
   11cac:	ldr	r3, [sp, #60]	; 0x3c
   11cb0:	ldr	r0, [r3]
   11cb4:	ldr	r3, [r0, #20]
   11cb8:	ldr	r2, [r0, #24]
   11cbc:	cmp	r3, r2
   11cc0:	addcc	r1, r3, #1
   11cc4:	movcc	r2, #32
   11cc8:	strcc	r1, [r0, #20]
   11ccc:	strbcc	r2, [r3]
   11cd0:	bcs	120dc <dcngettext@plt+0x10ec>
   11cd4:	ldr	r3, [sp, #60]	; 0x3c
   11cd8:	ldr	r0, [r3]
   11cdc:	ldr	r3, [r0, #20]
   11ce0:	ldr	r2, [r0, #24]
   11ce4:	cmp	r3, r2
   11ce8:	addcc	r2, r3, #1
   11cec:	strcc	r2, [r0, #20]
   11cf0:	ldrcc	r2, [sp, #132]	; 0x84
   11cf4:	strbcc	r2, [r3]
   11cf8:	bcs	120d0 <dcngettext@plt+0x10e0>
   11cfc:	mov	r1, r5
   11d00:	ldr	r0, [sp, #36]	; 0x24
   11d04:	bl	12390 <dcngettext@plt+0x13a0>
   11d08:	ldr	r3, [sp, #60]	; 0x3c
   11d0c:	ldr	r0, [r3]
   11d10:	ldr	r3, [r0, #20]
   11d14:	ldr	r2, [r0, #24]
   11d18:	cmp	r3, r2
   11d1c:	addcc	r2, r3, #1
   11d20:	ldrcc	r5, [sp, #64]	; 0x40
   11d24:	strcc	r2, [r0, #20]
   11d28:	strbcc	r6, [r3]
   11d2c:	bcc	11984 <dcngettext@plt+0x994>
   11d30:	mov	r1, r6
   11d34:	bl	10f6c <__overflow@plt>
   11d38:	ldr	r5, [sp, #64]	; 0x40
   11d3c:	b	11984 <dcngettext@plt+0x994>
   11d40:	ldr	r3, [sp, #92]	; 0x5c
   11d44:	cmp	r3, #0
   11d48:	bne	11914 <dcngettext@plt+0x924>
   11d4c:	mov	r9, #0
   11d50:	b	11958 <dcngettext@plt+0x968>
   11d54:	movwne	r5, #32940	; 0x80ac
   11d58:	movtne	r5, #1
   11d5c:	bne	11ba4 <dcngettext@plt+0xbb4>
   11d60:	b	11b88 <dcngettext@plt+0xb98>
   11d64:	movw	r1, #32324	; 0x7e44
   11d68:	movt	r1, #1
   11d6c:	mov	r2, #5
   11d70:	mov	r9, r3
   11d74:	mov	r0, r9
   11d78:	bl	10e04 <dcgettext@plt>
   11d7c:	mov	r4, r0
   11d80:	mov	r1, #3
   11d84:	ldr	r2, [sp, #36]	; 0x24
   11d88:	mov	r0, r9
   11d8c:	bl	15f80 <dcngettext@plt+0x4f90>
   11d90:	mov	r3, r0
   11d94:	mov	r2, r4
   11d98:	mov	r1, r9
   11d9c:	mov	r0, r9
   11da0:	bl	10e70 <error@plt>
   11da4:	b	11958 <dcngettext@plt+0x968>
   11da8:	add	r3, r6, r4
   11dac:	mov	r5, r3
   11db0:	ldr	r3, [sp, #44]	; 0x2c
   11db4:	cmp	r3, #0
   11db8:	bne	12074 <dcngettext@plt+0x1084>
   11dbc:	mov	r3, #0
   11dc0:	add	r4, r4, #1
   11dc4:	add	r2, r6, r4
   11dc8:	strb	r3, [r5]
   11dcc:	ldrb	r3, [r6, r4]
   11dd0:	cmp	r3, #9
   11dd4:	cmpne	r3, #32
   11dd8:	rsbeq	r1, r6, #1
   11ddc:	bne	11df4 <dcngettext@plt+0xe04>
   11de0:	add	r4, r1, r2
   11de4:	ldrb	r3, [r2, #1]!
   11de8:	cmp	r3, #9
   11dec:	cmpne	r3, #32
   11df0:	beq	11de0 <dcngettext@plt+0xdf0>
   11df4:	cmp	r3, #61	; 0x3d
   11df8:	bne	11570 <dcngettext@plt+0x580>
   11dfc:	add	r4, r4, #1
   11e00:	add	r3, r6, r4
   11e04:	ldrb	r2, [r3]
   11e08:	mov	r5, r3
   11e0c:	add	r3, r3, #1
   11e10:	cmp	r2, #9
   11e14:	cmpne	r2, #32
   11e18:	beq	11e04 <dcngettext@plt+0xe14>
   11e1c:	mov	r0, r5
   11e20:	bl	1230c <dcngettext@plt+0x131c>
   11e24:	b	11f60 <dcngettext@plt+0xf70>
   11e28:	mov	r9, fp
   11e2c:	mov	r6, r7
   11e30:	ldrd	sl, [sp, #112]	; 0x70
   11e34:	ldr	r7, [sp, #124]	; 0x7c
   11e38:	ldrb	r3, [r7, #6]
   11e3c:	cmp	r3, #0
   11e40:	str	r3, [sp, #92]	; 0x5c
   11e44:	bne	11780 <dcngettext@plt+0x790>
   11e48:	ldrb	r3, [r7, #8]
   11e4c:	cmp	r3, #0
   11e50:	str	r3, [sp, #92]	; 0x5c
   11e54:	bne	11780 <dcngettext@plt+0x790>
   11e58:	cmp	r8, #0
   11e5c:	beq	12048 <dcngettext@plt+0x1058>
   11e60:	ldr	r3, [sp, #72]	; 0x48
   11e64:	ldr	r4, [sp, #120]	; 0x78
   11e68:	str	r3, [sp, #92]	; 0x5c
   11e6c:	ldr	r3, [sp, #60]	; 0x3c
   11e70:	ldr	r0, [r3]
   11e74:	ldr	r3, [r0, #20]
   11e78:	ldr	r2, [r0, #24]
   11e7c:	cmp	r3, r2
   11e80:	addcc	r1, r3, #1
   11e84:	movcc	r2, #92	; 0x5c
   11e88:	strcc	r1, [r0, #20]
   11e8c:	strbcc	r2, [r3]
   11e90:	bcc	11afc <dcngettext@plt+0xb0c>
   11e94:	mov	r1, #92	; 0x5c
   11e98:	bl	10f6c <__overflow@plt>
   11e9c:	b	11afc <dcngettext@plt+0xb0c>
   11ea0:	mov	r1, #92	; 0x5c
   11ea4:	ldr	r0, [sp, #36]	; 0x24
   11ea8:	bl	10ee8 <strchr@plt>
   11eac:	cmp	r0, #0
   11eb0:	beq	12098 <dcngettext@plt+0x10a8>
   11eb4:	ldr	r3, [sp, #60]	; 0x3c
   11eb8:	ldr	r0, [r3]
   11ebc:	ldr	r3, [r0, #20]
   11ec0:	ldr	r2, [r0, #24]
   11ec4:	cmp	r3, r2
   11ec8:	addcc	r1, r3, #1
   11ecc:	movcc	r2, #92	; 0x5c
   11ed0:	strcc	r1, [r0, #20]
   11ed4:	strbcc	r2, [r3]
   11ed8:	bcc	11c54 <dcngettext@plt+0xc64>
   11edc:	mov	r1, #92	; 0x5c
   11ee0:	bl	10f6c <__overflow@plt>
   11ee4:	b	11c54 <dcngettext@plt+0xc64>
   11ee8:	mov	r2, #3
   11eec:	mov	r1, #1
   11ef0:	ldr	r0, [sp, #40]	; 0x28
   11ef4:	ldr	r4, [sp, #60]	; 0x3c
   11ef8:	ldr	r3, [r4]
   11efc:	bl	10de0 <fwrite_unlocked@plt>
   11f00:	mov	r2, #2
   11f04:	mov	r1, #1
   11f08:	ldr	r3, [r4]
   11f0c:	ldr	r0, [sp, #136]	; 0x88
   11f10:	bl	10de0 <fwrite_unlocked@plt>
   11f14:	mov	r1, r5
   11f18:	ldr	r0, [sp, #36]	; 0x24
   11f1c:	bl	12390 <dcngettext@plt+0x13a0>
   11f20:	movw	r0, #32684	; 0x7fac
   11f24:	movt	r0, #1
   11f28:	ldr	r3, [r4]
   11f2c:	mov	r2, #4
   11f30:	mov	r1, #1
   11f34:	bl	10de0 <fwrite_unlocked@plt>
   11f38:	ldr	r3, [sp, #68]	; 0x44
   11f3c:	ldr	r3, [r3]
   11f40:	lsrs	r3, r3, #1
   11f44:	bne	11c70 <dcngettext@plt+0xc80>
   11f48:	b	11d08 <dcngettext@plt+0xd18>
   11f4c:	sub	r1, r4, r1
   11f50:	mov	r0, r6
   11f54:	bl	12240 <dcngettext@plt+0x1250>
   11f58:	adds	r0, r0, #0
   11f5c:	movne	r0, #1
   11f60:	cmp	r0, #0
   11f64:	bne	11694 <dcngettext@plt+0x6a4>
   11f68:	b	11570 <dcngettext@plt+0x580>
   11f6c:	bl	10ef4 <__errno_location@plt>
   11f70:	ldr	r4, [r0]
   11f74:	b	117c0 <dcngettext@plt+0x7d0>
   11f78:	movw	r3, #37224	; 0x9168
   11f7c:	movt	r3, #2
   11f80:	ldr	r0, [r3]
   11f84:	bl	13b78 <dcngettext@plt+0x2b88>
   11f88:	cmn	r0, #1
   11f8c:	bne	119a8 <dcngettext@plt+0x9b8>
   11f90:	bl	10ef4 <__errno_location@plt>
   11f94:	ldr	r4, [r0]
   11f98:	mov	r2, #5
   11f9c:	movw	r1, #32176	; 0x7db0
   11fa0:	movt	r1, #1
   11fa4:	mov	r0, #0
   11fa8:	bl	10e04 <dcgettext@plt>
   11fac:	mov	r2, r0
   11fb0:	mov	r0, #1
   11fb4:	mov	r1, r4
   11fb8:	bl	10e70 <error@plt>
   11fbc:	ldr	r3, [sp, #28]
   11fc0:	cmp	r3, #0
   11fc4:	bne	11348 <dcngettext@plt+0x358>
   11fc8:	movw	r1, #31984	; 0x7cf0
   11fcc:	movt	r1, #1
   11fd0:	mov	r2, #5
   11fd4:	mov	r4, r3
   11fd8:	b	112bc <dcngettext@plt+0x2cc>
   11fdc:	movw	r2, #16960	; 0x4240
   11fe0:	movt	r2, #15
   11fe4:	mov	r3, #0
   11fe8:	bl	17154 <dcngettext@plt+0x6164>
   11fec:	add	r3, r2, #999424	; 0xf4000
   11ff0:	add	r3, r3, #576	; 0x240
   11ff4:	b	118c0 <dcngettext@plt+0x8d0>
   11ff8:	movw	r2, #16960	; 0x4240
   11ffc:	movt	r2, #15
   12000:	mov	r3, #0
   12004:	bl	17154 <dcngettext@plt+0x6164>
   12008:	add	r3, r2, #999424	; 0xf4000
   1200c:	add	r3, r3, #576	; 0x240
   12010:	b	11864 <dcngettext@plt+0x874>
   12014:	movw	r2, #16960	; 0x4240
   12018:	movt	r2, #15
   1201c:	mov	r3, #0
   12020:	bl	17154 <dcngettext@plt+0x6164>
   12024:	add	r3, r2, #999424	; 0xf4000
   12028:	add	r3, r3, #576	; 0x240
   1202c:	b	11808 <dcngettext@plt+0x818>
   12030:	movw	r1, #32652	; 0x7f8c
   12034:	movt	r1, #1
   12038:	ldr	r9, [sp, #92]	; 0x5c
   1203c:	mov	r2, #5
   12040:	b	11d74 <dcngettext@plt+0xd84>
   12044:	andeq	r7, r1, r8, lsl #7
   12048:	mov	r0, r6
   1204c:	ldr	r1, [sp, #92]	; 0x5c
   12050:	bl	12390 <dcngettext@plt+0x13a0>
   12054:	ldr	r3, [sp, #72]	; 0x48
   12058:	str	r3, [sp, #92]	; 0x5c
   1205c:	ldrb	r0, [r7, #8]
   12060:	cmp	r0, #0
   12064:	bne	11780 <dcngettext@plt+0x790>
   12068:	mov	r2, #5
   1206c:	ldr	r1, [sp, #100]	; 0x64
   12070:	b	1176c <dcngettext@plt+0x77c>
   12074:	mov	r1, r4
   12078:	mov	r0, r6
   1207c:	bl	12240 <dcngettext@plt+0x1250>
   12080:	cmp	r0, #0
   12084:	bne	11dbc <dcngettext@plt+0xdcc>
   12088:	b	11570 <dcngettext@plt+0x580>
   1208c:	mov	r3, #1
   12090:	str	r3, [sp, #64]	; 0x40
   12094:	b	1199c <dcngettext@plt+0x9ac>
   12098:	mov	r1, r6
   1209c:	ldr	r0, [sp, #36]	; 0x24
   120a0:	bl	10ee8 <strchr@plt>
   120a4:	cmp	r0, #0
   120a8:	bne	11eb4 <dcngettext@plt+0xec4>
   120ac:	mov	r1, #13
   120b0:	ldr	r0, [sp, #36]	; 0x24
   120b4:	bl	10ee8 <strchr@plt>
   120b8:	cmp	r0, #0
   120bc:	bne	11eb4 <dcngettext@plt+0xec4>
   120c0:	b	11c50 <dcngettext@plt+0xc60>
   120c4:	mov	r1, #92	; 0x5c
   120c8:	bl	10f6c <__overflow@plt>
   120cc:	b	11750 <dcngettext@plt+0x760>
   120d0:	ldr	r1, [sp, #140]	; 0x8c
   120d4:	bl	10f6c <__overflow@plt>
   120d8:	b	11cfc <dcngettext@plt+0xd0c>
   120dc:	mov	r1, #32
   120e0:	bl	10f6c <__overflow@plt>
   120e4:	b	11cd4 <dcngettext@plt+0xce4>
   120e8:	movw	r1, #32112	; 0x7d70
   120ec:	movt	r1, #1
   120f0:	mov	r2, #5
   120f4:	mov	r0, #0
   120f8:	bl	10e04 <dcgettext@plt>
   120fc:	mov	r1, #0
   12100:	mov	r2, r0
   12104:	mov	r0, r1
   12108:	bl	10e70 <error@plt>
   1210c:	mov	r0, #1
   12110:	bl	12620 <dcngettext@plt+0x1630>
   12114:	ldrb	r3, [sl, #6]
   12118:	cmp	r3, #0
   1211c:	beq	11290 <dcngettext@plt+0x2a0>
   12120:	ldr	r3, [sp, #28]
   12124:	cmp	r3, #0
   12128:	bne	11328 <dcngettext@plt+0x338>
   1212c:	movw	r1, #31920	; 0x7cb0
   12130:	movt	r1, #1
   12134:	b	120f0 <dcngettext@plt+0x1100>
   12138:	movw	r1, #31616	; 0x7b80
   1213c:	movt	r1, #1
   12140:	b	112b8 <dcngettext@plt+0x2c8>
   12144:	movw	r1, #31848	; 0x7c68
   12148:	movt	r1, #1
   1214c:	b	120f0 <dcngettext@plt+0x1100>
   12150:	mov	fp, #0
   12154:	mov	lr, #0
   12158:	pop	{r1}		; (ldr r1, [sp], #4)
   1215c:	mov	r2, sp
   12160:	push	{r2}		; (str r2, [sp, #-4]!)
   12164:	push	{r0}		; (str r0, [sp, #-4]!)
   12168:	ldr	ip, [pc, #16]	; 12180 <dcngettext@plt+0x1190>
   1216c:	push	{ip}		; (str ip, [sp, #-4]!)
   12170:	ldr	r0, [pc, #12]	; 12184 <dcngettext@plt+0x1194>
   12174:	ldr	r3, [pc, #12]	; 12188 <dcngettext@plt+0x1198>
   12178:	bl	10e88 <__libc_start_main@plt>
   1217c:	bl	10fd8 <abort@plt>
   12180:	andeq	r7, r1, r8, lsr #6
   12184:	strdeq	r0, [r1], -ip
   12188:	andeq	r7, r1, r8, asr #5
   1218c:	ldr	r3, [pc, #20]	; 121a8 <dcngettext@plt+0x11b8>
   12190:	ldr	r2, [pc, #20]	; 121ac <dcngettext@plt+0x11bc>
   12194:	add	r3, pc, r3
   12198:	ldr	r2, [r3, r2]
   1219c:	cmp	r2, #0
   121a0:	bxeq	lr
   121a4:	b	10eac <__gmon_start__@plt>
   121a8:	andeq	r6, r1, r4, ror #28
   121ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   121b0:	ldr	r0, [pc, #24]	; 121d0 <dcngettext@plt+0x11e0>
   121b4:	ldr	r3, [pc, #24]	; 121d4 <dcngettext@plt+0x11e4>
   121b8:	cmp	r3, r0
   121bc:	bxeq	lr
   121c0:	ldr	r3, [pc, #16]	; 121d8 <dcngettext@plt+0x11e8>
   121c4:	cmp	r3, #0
   121c8:	bxeq	lr
   121cc:	bx	r3
   121d0:	andeq	r9, r2, ip, asr #2
   121d4:	andeq	r9, r2, ip, asr #2
   121d8:	andeq	r0, r0, r0
   121dc:	ldr	r0, [pc, #36]	; 12208 <dcngettext@plt+0x1218>
   121e0:	ldr	r1, [pc, #36]	; 1220c <dcngettext@plt+0x121c>
   121e4:	sub	r1, r1, r0
   121e8:	asr	r1, r1, #2
   121ec:	add	r1, r1, r1, lsr #31
   121f0:	asrs	r1, r1, #1
   121f4:	bxeq	lr
   121f8:	ldr	r3, [pc, #16]	; 12210 <dcngettext@plt+0x1220>
   121fc:	cmp	r3, #0
   12200:	bxeq	lr
   12204:	bx	r3
   12208:	andeq	r9, r2, ip, asr #2
   1220c:	andeq	r9, r2, ip, asr #2
   12210:	andeq	r0, r0, r0
   12214:	push	{r4, lr}
   12218:	ldr	r4, [pc, #24]	; 12238 <dcngettext@plt+0x1248>
   1221c:	ldrb	r3, [r4]
   12220:	cmp	r3, #0
   12224:	popne	{r4, pc}
   12228:	bl	121b0 <dcngettext@plt+0x11c0>
   1222c:	mov	r3, #1
   12230:	strb	r3, [r4]
   12234:	pop	{r4, pc}
   12238:	andeq	r9, r2, r0, ror r1
   1223c:	b	121dc <dcngettext@plt+0x11ec>
   12240:	cmp	r1, #0
   12244:	bxeq	lr
   12248:	add	ip, r0, #1
   1224c:	mov	r2, #0
   12250:	strd	r4, [sp, #-16]!
   12254:	mov	r5, #13
   12258:	str	r6, [sp, #8]
   1225c:	mov	r6, #10
   12260:	str	lr, [sp, #12]
   12264:	sub	lr, r1, #1
   12268:	ldrb	r3, [r0, r2]
   1226c:	cmp	r3, #0
   12270:	beq	122a4 <dcngettext@plt+0x12b4>
   12274:	cmp	r3, #92	; 0x5c
   12278:	bne	122b8 <dcngettext@plt+0x12c8>
   1227c:	cmp	lr, r2
   12280:	beq	122a4 <dcngettext@plt+0x12b4>
   12284:	add	r2, r2, #1
   12288:	ldrb	r3, [r0, r2]
   1228c:	cmp	r3, #110	; 0x6e
   12290:	beq	12300 <dcngettext@plt+0x1310>
   12294:	cmp	r3, #114	; 0x72
   12298:	beq	122f4 <dcngettext@plt+0x1304>
   1229c:	cmp	r3, #92	; 0x5c
   122a0:	beq	122e8 <dcngettext@plt+0x12f8>
   122a4:	mov	r0, #0
   122a8:	ldrd	r4, [sp]
   122ac:	ldr	r6, [sp, #8]
   122b0:	add	sp, sp, #12
   122b4:	pop	{pc}		; (ldr pc, [sp], #4)
   122b8:	mov	r4, ip
   122bc:	strb	r3, [ip, #-1]
   122c0:	add	r2, r2, #1
   122c4:	add	ip, ip, #1
   122c8:	cmp	r1, r2
   122cc:	bhi	12268 <dcngettext@plt+0x1278>
   122d0:	add	r1, r0, r1
   122d4:	cmp	r4, r1
   122d8:	bcs	122a8 <dcngettext@plt+0x12b8>
   122dc:	mov	r3, #0
   122e0:	strb	r3, [r4]
   122e4:	b	122a8 <dcngettext@plt+0x12b8>
   122e8:	mov	r4, ip
   122ec:	strb	r3, [ip, #-1]
   122f0:	b	122c0 <dcngettext@plt+0x12d0>
   122f4:	mov	r4, ip
   122f8:	strb	r5, [ip, #-1]
   122fc:	b	122c0 <dcngettext@plt+0x12d0>
   12300:	mov	r4, ip
   12304:	strb	r6, [ip, #-1]
   12308:	b	122c0 <dcngettext@plt+0x12d0>
   1230c:	movw	r3, #37236	; 0x9174
   12310:	movt	r3, #2
   12314:	strd	r4, [sp, #-16]!
   12318:	ldr	r4, [r3]
   1231c:	mov	r5, r0
   12320:	str	r6, [sp, #8]
   12324:	str	lr, [sp, #12]
   12328:	cmp	r4, #0
   1232c:	beq	12374 <dcngettext@plt+0x1384>
   12330:	bl	10ec4 <__ctype_b_loc@plt>
   12334:	mov	r3, r5
   12338:	add	r1, r5, r4
   1233c:	ldr	ip, [r0]
   12340:	b	1234c <dcngettext@plt+0x135c>
   12344:	cmp	r1, r3
   12348:	beq	12374 <dcngettext@plt+0x1384>
   1234c:	ldrb	r2, [r3], #1
   12350:	lsl	r2, r2, #1
   12354:	mov	r5, r3
   12358:	ldrh	r0, [ip, r2]
   1235c:	ands	r0, r0, #4096	; 0x1000
   12360:	bne	12344 <dcngettext@plt+0x1354>
   12364:	ldrd	r4, [sp]
   12368:	ldr	r6, [sp, #8]
   1236c:	add	sp, sp, #12
   12370:	pop	{pc}		; (ldr pc, [sp], #4)
   12374:	ldrb	r0, [r5]
   12378:	ldrd	r4, [sp]
   1237c:	ldr	r6, [sp, #8]
   12380:	add	sp, sp, #12
   12384:	clz	r0, r0
   12388:	lsr	r0, r0, #5
   1238c:	pop	{pc}		; (ldr pc, [sp], #4)
   12390:	cmp	r1, #0
   12394:	beq	12478 <dcngettext@plt+0x1488>
   12398:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1239c:	mov	r4, r0
   123a0:	strd	r6, [sp, #8]
   123a4:	str	r8, [sp, #16]
   123a8:	str	lr, [sp, #20]
   123ac:	ldrb	r1, [r0]
   123b0:	cmp	r1, #0
   123b4:	beq	1243c <dcngettext@plt+0x144c>
   123b8:	movw	r5, #37228	; 0x916c
   123bc:	movt	r5, #2
   123c0:	movw	r8, #29804	; 0x746c
   123c4:	movt	r8, #1
   123c8:	movw	r7, #29808	; 0x7470
   123cc:	movt	r7, #1
   123d0:	movw	r6, #29800	; 0x7468
   123d4:	movt	r6, #1
   123d8:	b	1240c <dcngettext@plt+0x141c>
   123dc:	cmp	r1, #10
   123e0:	beq	12464 <dcngettext@plt+0x1474>
   123e4:	ldr	r2, [r3, #20]
   123e8:	ldr	r0, [r3, #24]
   123ec:	add	ip, r2, #1
   123f0:	cmp	r2, r0
   123f4:	strcc	ip, [r3, #20]
   123f8:	strbcc	r1, [r2]
   123fc:	bcs	12488 <dcngettext@plt+0x1498>
   12400:	ldrb	r1, [r4, #1]!
   12404:	cmp	r1, #0
   12408:	beq	1243c <dcngettext@plt+0x144c>
   1240c:	cmp	r1, #13
   12410:	ldr	r3, [r5]
   12414:	beq	12450 <dcngettext@plt+0x1460>
   12418:	cmp	r1, #92	; 0x5c
   1241c:	bne	123dc <dcngettext@plt+0x13ec>
   12420:	mov	r1, #1
   12424:	mov	r2, #2
   12428:	mov	r0, r7
   1242c:	bl	10de0 <fwrite_unlocked@plt>
   12430:	ldrb	r1, [r4, #1]!
   12434:	cmp	r1, #0
   12438:	bne	1240c <dcngettext@plt+0x141c>
   1243c:	ldrd	r4, [sp]
   12440:	ldrd	r6, [sp, #8]
   12444:	ldr	r8, [sp, #16]
   12448:	add	sp, sp, #20
   1244c:	pop	{pc}		; (ldr pc, [sp], #4)
   12450:	mov	r2, #2
   12454:	mov	r1, #1
   12458:	mov	r0, r8
   1245c:	bl	10de0 <fwrite_unlocked@plt>
   12460:	b	12400 <dcngettext@plt+0x1410>
   12464:	mov	r2, #2
   12468:	mov	r1, #1
   1246c:	mov	r0, r6
   12470:	bl	10de0 <fwrite_unlocked@plt>
   12474:	b	12400 <dcngettext@plt+0x1410>
   12478:	movw	r3, #37228	; 0x916c
   1247c:	movt	r3, #2
   12480:	ldr	r1, [r3]
   12484:	b	10d68 <fputs_unlocked@plt>
   12488:	mov	r0, r3
   1248c:	bl	10f6c <__overflow@plt>
   12490:	b	12400 <dcngettext@plt+0x1410>
   12494:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12498:	mov	r5, r2
   1249c:	strd	r6, [sp, #8]
   124a0:	mov	r7, r1
   124a4:	movw	r1, #29812	; 0x7474
   124a8:	movt	r1, #1
   124ac:	mov	r6, r0
   124b0:	str	r8, [sp, #16]
   124b4:	str	lr, [sp, #20]
   124b8:	bl	10d8c <strcmp@plt>
   124bc:	mov	r3, #0
   124c0:	cmp	r0, r3
   124c4:	strb	r3, [r5]
   124c8:	bne	12548 <dcngettext@plt+0x1558>
   124cc:	movw	r3, #37224	; 0x9168
   124d0:	movt	r3, #2
   124d4:	ldr	r5, [r3]
   124d8:	mov	r4, #1
   124dc:	movw	r3, #37236	; 0x9174
   124e0:	movt	r3, #2
   124e4:	mov	r1, #2
   124e8:	strb	r4, [r3, #4]
   124ec:	mov	r0, r5
   124f0:	bl	13b28 <dcngettext@plt+0x2b38>
   124f4:	mov	r1, r7
   124f8:	mov	r0, r5
   124fc:	bl	12b5c <dcngettext@plt+0x1b6c>
   12500:	cmp	r0, #0
   12504:	bne	12528 <dcngettext@plt+0x1538>
   12508:	mov	r0, r5
   1250c:	bl	10f9c <clearerr_unlocked@plt>
   12510:	mov	r0, r4
   12514:	ldrd	r4, [sp]
   12518:	ldrd	r6, [sp, #8]
   1251c:	ldr	r8, [sp, #16]
   12520:	add	sp, sp, #20
   12524:	pop	{pc}		; (ldr pc, [sp], #4)
   12528:	bl	10ef4 <__errno_location@plt>
   1252c:	ldr	r7, [r0]
   12530:	mov	r0, r5
   12534:	bl	10f9c <clearerr_unlocked@plt>
   12538:	cmp	r7, #0
   1253c:	bne	125a0 <dcngettext@plt+0x15b0>
   12540:	mov	r4, #1
   12544:	b	12510 <dcngettext@plt+0x1520>
   12548:	movw	r1, #29816	; 0x7478
   1254c:	movt	r1, #1
   12550:	mov	r0, r6
   12554:	bl	13c8c <dcngettext@plt+0x2c9c>
   12558:	subs	r4, r0, #0
   1255c:	beq	125f0 <dcngettext@plt+0x1600>
   12560:	mov	r1, #2
   12564:	bl	13b28 <dcngettext@plt+0x2b38>
   12568:	mov	r1, r7
   1256c:	mov	r0, r4
   12570:	bl	12b5c <dcngettext@plt+0x1b6c>
   12574:	cmp	r0, #0
   12578:	beq	125d0 <dcngettext@plt+0x15e0>
   1257c:	bl	10ef4 <__errno_location@plt>
   12580:	mov	r5, r0
   12584:	mov	r0, r4
   12588:	ldr	r7, [r5]
   1258c:	bl	13b78 <dcngettext@plt+0x2b88>
   12590:	cmp	r0, #0
   12594:	beq	12538 <dcngettext@plt+0x1548>
   12598:	cmp	r7, #0
   1259c:	beq	125e8 <dcngettext@plt+0x15f8>
   125a0:	mov	r2, r6
   125a4:	mov	r1, #3
   125a8:	mov	r0, #0
   125ac:	mov	r4, r0
   125b0:	bl	15f80 <dcngettext@plt+0x4f90>
   125b4:	mov	r3, r0
   125b8:	mov	r1, r7
   125bc:	movw	r2, #32940	; 0x80ac
   125c0:	movt	r2, #1
   125c4:	mov	r0, r4
   125c8:	bl	10e70 <error@plt>
   125cc:	b	12510 <dcngettext@plt+0x1520>
   125d0:	mov	r0, r4
   125d4:	bl	13b78 <dcngettext@plt+0x2b88>
   125d8:	cmp	r0, #0
   125dc:	beq	12540 <dcngettext@plt+0x1550>
   125e0:	bl	10ef4 <__errno_location@plt>
   125e4:	mov	r5, r0
   125e8:	ldr	r7, [r5]
   125ec:	b	12538 <dcngettext@plt+0x1548>
   125f0:	movw	r3, #37236	; 0x9174
   125f4:	movt	r3, #2
   125f8:	ldrb	r4, [r3, #5]
   125fc:	bl	10ef4 <__errno_location@plt>
   12600:	ldr	r7, [r0]
   12604:	cmp	r4, #0
   12608:	beq	125a0 <dcngettext@plt+0x15b0>
   1260c:	cmp	r7, #2
   12610:	moveq	r3, #1
   12614:	strbeq	r3, [r5]
   12618:	bne	125a0 <dcngettext@plt+0x15b0>
   1261c:	b	12510 <dcngettext@plt+0x1520>
   12620:	subs	r6, r0, #0
   12624:	str	r7, [sp, #-8]!
   12628:	str	lr, [sp, #4]
   1262c:	sub	sp, sp, #56	; 0x38
   12630:	beq	12678 <dcngettext@plt+0x1688>
   12634:	movw	r3, #37216	; 0x9160
   12638:	movt	r3, #2
   1263c:	ldr	r4, [r3]
   12640:	mov	r2, #5
   12644:	movw	r1, #29828	; 0x7484
   12648:	movt	r1, #1
   1264c:	mov	r0, #0
   12650:	bl	10e04 <dcgettext@plt>
   12654:	movw	r3, #37260	; 0x918c
   12658:	movt	r3, #2
   1265c:	mov	r2, r0
   12660:	mov	r1, #1
   12664:	ldr	r3, [r3]
   12668:	mov	r0, r4
   1266c:	bl	10f3c <__fprintf_chk@plt>
   12670:	mov	r0, r6
   12674:	bl	10ed0 <exit@plt>
   12678:	mov	r2, #5
   1267c:	movw	r1, #29868	; 0x74ac
   12680:	movt	r1, #1
   12684:	movw	r7, #37228	; 0x916c
   12688:	movt	r7, #2
   1268c:	bl	10e04 <dcgettext@plt>
   12690:	movw	r3, #37260	; 0x918c
   12694:	movt	r3, #2
   12698:	mov	r1, r0
   1269c:	mov	r0, #1
   126a0:	ldr	r2, [r3]
   126a4:	bl	10f24 <__printf_chk@plt>
   126a8:	mov	r2, #5
   126ac:	movw	r1, #29904	; 0x74d0
   126b0:	movt	r1, #1
   126b4:	mov	r0, r6
   126b8:	bl	10e04 <dcgettext@plt>
   126bc:	mov	r1, r0
   126c0:	mov	r3, #128	; 0x80
   126c4:	movw	r2, #29944	; 0x74f8
   126c8:	movt	r2, #1
   126cc:	mov	r0, #1
   126d0:	bl	10f24 <__printf_chk@plt>
   126d4:	mov	r2, #5
   126d8:	movw	r1, #29948	; 0x74fc
   126dc:	movt	r1, #1
   126e0:	mov	r0, r6
   126e4:	bl	10e04 <dcgettext@plt>
   126e8:	ldr	r1, [r7]
   126ec:	bl	10d68 <fputs_unlocked@plt>
   126f0:	mov	r2, #5
   126f4:	movw	r1, #30004	; 0x7534
   126f8:	movt	r1, #1
   126fc:	mov	r0, r6
   12700:	bl	10e04 <dcgettext@plt>
   12704:	ldr	r1, [r7]
   12708:	bl	10d68 <fputs_unlocked@plt>
   1270c:	mov	r2, #5
   12710:	movw	r1, #30052	; 0x7564
   12714:	movt	r1, #1
   12718:	mov	r0, r6
   1271c:	bl	10e04 <dcgettext@plt>
   12720:	ldr	r1, [r7]
   12724:	bl	10d68 <fputs_unlocked@plt>
   12728:	mov	r2, #5
   1272c:	movw	r1, #30124	; 0x75ac
   12730:	movt	r1, #1
   12734:	mov	r0, r6
   12738:	bl	10e04 <dcgettext@plt>
   1273c:	ldr	r1, [r7]
   12740:	bl	10d68 <fputs_unlocked@plt>
   12744:	mov	r2, #5
   12748:	movw	r1, #30180	; 0x75e4
   1274c:	movt	r1, #1
   12750:	mov	r0, r6
   12754:	bl	10e04 <dcgettext@plt>
   12758:	ldr	r1, [r7]
   1275c:	bl	10d68 <fputs_unlocked@plt>
   12760:	mov	r2, #5
   12764:	movw	r1, #30236	; 0x761c
   12768:	movt	r1, #1
   1276c:	mov	r0, r6
   12770:	bl	10e04 <dcgettext@plt>
   12774:	ldr	r1, [r7]
   12778:	bl	10d68 <fputs_unlocked@plt>
   1277c:	mov	r2, #5
   12780:	movw	r1, #30364	; 0x769c
   12784:	movt	r1, #1
   12788:	mov	r0, r6
   1278c:	bl	10e04 <dcgettext@plt>
   12790:	ldr	r1, [r7]
   12794:	bl	10d68 <fputs_unlocked@plt>
   12798:	mov	r2, #5
   1279c:	movw	r1, #30804	; 0x7854
   127a0:	movt	r1, #1
   127a4:	mov	r0, r6
   127a8:	bl	10e04 <dcgettext@plt>
   127ac:	ldr	r1, [r7]
   127b0:	bl	10d68 <fputs_unlocked@plt>
   127b4:	mov	r2, #5
   127b8:	movw	r1, #30852	; 0x7884
   127bc:	movt	r1, #1
   127c0:	mov	r0, r6
   127c4:	bl	10e04 <dcgettext@plt>
   127c8:	ldr	r1, [r7]
   127cc:	bl	10d68 <fputs_unlocked@plt>
   127d0:	mov	r2, #5
   127d4:	movw	r1, #30908	; 0x78bc
   127d8:	movt	r1, #1
   127dc:	mov	r0, r6
   127e0:	bl	10e04 <dcgettext@plt>
   127e4:	mov	r1, r0
   127e8:	movw	r2, #30952	; 0x78e8
   127ec:	movt	r2, #1
   127f0:	mov	r0, #1
   127f4:	bl	10f24 <__printf_chk@plt>
   127f8:	mov	r2, #5
   127fc:	movw	r1, #30964	; 0x78f4
   12800:	movt	r1, #1
   12804:	mov	r0, r6
   12808:	bl	10e04 <dcgettext@plt>
   1280c:	ldr	r1, [r7]
   12810:	bl	10d68 <fputs_unlocked@plt>
   12814:	movw	lr, #29520	; 0x7350
   12818:	movt	lr, #1
   1281c:	ldr	ip, [lr]
   12820:	ldr	r4, [lr, #4]
   12824:	ldrd	r8, [lr, #8]
   12828:	subs	r1, ip, #0
   1282c:	str	ip, [sp]
   12830:	ldrd	r2, [lr, #16]
   12834:	str	r4, [sp, #4]
   12838:	ldrd	r4, [lr, #24]
   1283c:	strd	r8, [sp, #8]
   12840:	ldrd	r8, [lr, #32]
   12844:	strd	r2, [sp, #16]
   12848:	ldrd	r2, [lr, #40]	; 0x28
   1284c:	strd	r4, [sp, #24]
   12850:	ldrd	r4, [lr, #48]	; 0x30
   12854:	strd	r8, [sp, #32]
   12858:	strd	r2, [sp, #40]	; 0x28
   1285c:	strd	r4, [sp, #48]	; 0x30
   12860:	movwne	r5, #29820	; 0x747c
   12864:	mov	r4, sp
   12868:	movtne	r5, #1
   1286c:	bne	12964 <dcngettext@plt+0x1974>
   12870:	ldr	r4, [r4, #4]
   12874:	movw	r1, #31300	; 0x7a44
   12878:	movt	r1, #1
   1287c:	mov	r2, #5
   12880:	cmp	r4, #0
   12884:	beq	12978 <dcngettext@plt+0x1988>
   12888:	mov	r0, #0
   1288c:	bl	10e04 <dcgettext@plt>
   12890:	mov	r1, r0
   12894:	movw	r3, #31324	; 0x7a5c
   12898:	movt	r3, #1
   1289c:	movw	r2, #31364	; 0x7a84
   128a0:	movt	r2, #1
   128a4:	mov	r0, #1
   128a8:	bl	10f24 <__printf_chk@plt>
   128ac:	mov	r1, #0
   128b0:	mov	r0, #5
   128b4:	bl	10f78 <setlocale@plt>
   128b8:	cmp	r0, #0
   128bc:	movweq	r5, #29820	; 0x747c
   128c0:	movteq	r5, #1
   128c4:	beq	128e8 <dcngettext@plt+0x18f8>
   128c8:	movw	r1, #31380	; 0x7a94
   128cc:	movt	r1, #1
   128d0:	mov	r2, #3
   128d4:	movw	r5, #29820	; 0x747c
   128d8:	movt	r5, #1
   128dc:	bl	10fcc <strncmp@plt>
   128e0:	cmp	r0, #0
   128e4:	bne	12a30 <dcngettext@plt+0x1a40>
   128e8:	mov	r2, #5
   128ec:	movw	r1, #31456	; 0x7ae0
   128f0:	movt	r1, #1
   128f4:	mov	r0, #0
   128f8:	bl	10e04 <dcgettext@plt>
   128fc:	mov	r1, r0
   12900:	movw	r3, #29820	; 0x747c
   12904:	movt	r3, #1
   12908:	movw	r2, #31324	; 0x7a5c
   1290c:	movt	r2, #1
   12910:	mov	r0, #1
   12914:	bl	10f24 <__printf_chk@plt>
   12918:	mov	r2, #5
   1291c:	movw	r1, #31484	; 0x7afc
   12920:	movt	r1, #1
   12924:	mov	r0, #0
   12928:	bl	10e04 <dcgettext@plt>
   1292c:	movw	r2, #32708	; 0x7fc4
   12930:	movt	r2, #1
   12934:	cmp	r4, r5
   12938:	movw	r3, #30232	; 0x7618
   1293c:	movt	r3, #1
   12940:	mov	r1, r0
   12944:	moveq	r3, r2
   12948:	mov	r2, r4
   1294c:	mov	r0, #1
   12950:	bl	10f24 <__printf_chk@plt>
   12954:	b	12670 <dcngettext@plt+0x1680>
   12958:	ldr	r1, [r4, #8]!
   1295c:	cmp	r1, #0
   12960:	beq	12870 <dcngettext@plt+0x1880>
   12964:	mov	r0, r5
   12968:	bl	10d8c <strcmp@plt>
   1296c:	cmp	r0, #0
   12970:	bne	12958 <dcngettext@plt+0x1968>
   12974:	b	12870 <dcngettext@plt+0x1880>
   12978:	mov	r0, r4
   1297c:	bl	10e04 <dcgettext@plt>
   12980:	mov	r1, r0
   12984:	movw	r3, #31324	; 0x7a5c
   12988:	movt	r3, #1
   1298c:	movw	r2, #31364	; 0x7a84
   12990:	movt	r2, #1
   12994:	mov	r0, #1
   12998:	bl	10f24 <__printf_chk@plt>
   1299c:	mov	r1, r4
   129a0:	mov	r0, #5
   129a4:	bl	10f78 <setlocale@plt>
   129a8:	cmp	r0, #0
   129ac:	beq	129c8 <dcngettext@plt+0x19d8>
   129b0:	movw	r1, #31380	; 0x7a94
   129b4:	movt	r1, #1
   129b8:	mov	r2, #3
   129bc:	bl	10fcc <strncmp@plt>
   129c0:	cmp	r0, #0
   129c4:	bne	12a24 <dcngettext@plt+0x1a34>
   129c8:	mov	r2, #5
   129cc:	movw	r1, #31456	; 0x7ae0
   129d0:	movt	r1, #1
   129d4:	mov	r0, #0
   129d8:	bl	10e04 <dcgettext@plt>
   129dc:	mov	r1, r0
   129e0:	movw	r3, #29820	; 0x747c
   129e4:	movt	r3, #1
   129e8:	movw	r2, #31324	; 0x7a5c
   129ec:	movt	r2, #1
   129f0:	mov	r0, #1
   129f4:	bl	10f24 <__printf_chk@plt>
   129f8:	movw	r1, #31484	; 0x7afc
   129fc:	movt	r1, #1
   12a00:	mov	r2, #5
   12a04:	mov	r0, #0
   12a08:	bl	10e04 <dcgettext@plt>
   12a0c:	movw	r4, #29820	; 0x747c
   12a10:	movt	r4, #1
   12a14:	movw	r3, #32708	; 0x7fc4
   12a18:	movt	r3, #1
   12a1c:	mov	r1, r0
   12a20:	b	12948 <dcngettext@plt+0x1958>
   12a24:	movw	r5, #29820	; 0x747c
   12a28:	movt	r5, #1
   12a2c:	mov	r4, r5
   12a30:	mov	r2, #5
   12a34:	movw	r1, #31384	; 0x7a98
   12a38:	movt	r1, #1
   12a3c:	mov	r0, #0
   12a40:	bl	10e04 <dcgettext@plt>
   12a44:	ldr	r1, [r7]
   12a48:	bl	10d68 <fputs_unlocked@plt>
   12a4c:	b	128e8 <dcngettext@plt+0x18f8>
   12a50:	movw	r3, #37252	; 0x9184
   12a54:	movt	r3, #2
   12a58:	str	r0, [r3]
   12a5c:	bx	lr
   12a60:	movw	r3, #37252	; 0x9184
   12a64:	movt	r3, #2
   12a68:	strb	r0, [r3, #4]
   12a6c:	bx	lr
   12a70:	movw	r3, #37228	; 0x916c
   12a74:	movt	r3, #2
   12a78:	strd	r4, [sp, #-16]!
   12a7c:	ldr	r0, [r3]
   12a80:	str	r6, [sp, #8]
   12a84:	str	lr, [sp, #12]
   12a88:	sub	sp, sp, #8
   12a8c:	bl	16cd4 <dcngettext@plt+0x5ce4>
   12a90:	cmp	r0, #0
   12a94:	beq	12ac0 <dcngettext@plt+0x1ad0>
   12a98:	movw	r4, #37252	; 0x9184
   12a9c:	movt	r4, #2
   12aa0:	ldrb	r6, [r4, #4]
   12aa4:	bl	10ef4 <__errno_location@plt>
   12aa8:	mov	r5, r0
   12aac:	cmp	r6, #0
   12ab0:	beq	12aec <dcngettext@plt+0x1afc>
   12ab4:	ldr	r3, [r0]
   12ab8:	cmp	r3, #32
   12abc:	bne	12aec <dcngettext@plt+0x1afc>
   12ac0:	movw	r3, #37216	; 0x9160
   12ac4:	movt	r3, #2
   12ac8:	ldr	r0, [r3]
   12acc:	bl	16cd4 <dcngettext@plt+0x5ce4>
   12ad0:	cmp	r0, #0
   12ad4:	bne	12b34 <dcngettext@plt+0x1b44>
   12ad8:	add	sp, sp, #8
   12adc:	ldrd	r4, [sp]
   12ae0:	ldr	r6, [sp, #8]
   12ae4:	add	sp, sp, #12
   12ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   12aec:	movw	r1, #32924	; 0x809c
   12af0:	movt	r1, #1
   12af4:	mov	r2, #5
   12af8:	mov	r0, #0
   12afc:	bl	10e04 <dcgettext@plt>
   12b00:	mov	r6, r0
   12b04:	ldr	r0, [r4]
   12b08:	cmp	r0, #0
   12b0c:	beq	12b44 <dcngettext@plt+0x1b54>
   12b10:	ldr	r4, [r5]
   12b14:	bl	15f6c <dcngettext@plt+0x4f7c>
   12b18:	mov	r3, r0
   12b1c:	movw	r2, #32936	; 0x80a8
   12b20:	movt	r2, #1
   12b24:	mov	r0, #0
   12b28:	str	r6, [sp]
   12b2c:	mov	r1, r4
   12b30:	bl	10e70 <error@plt>
   12b34:	movw	r3, #37128	; 0x9108
   12b38:	movt	r3, #2
   12b3c:	ldr	r0, [r3]
   12b40:	bl	10dbc <_exit@plt>
   12b44:	mov	r3, r6
   12b48:	movw	r2, #32940	; 0x80ac
   12b4c:	movt	r2, #1
   12b50:	ldr	r1, [r5]
   12b54:	bl	10e70 <error@plt>
   12b58:	b	12b34 <dcngettext@plt+0x1b44>
   12b5c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12b60:	mov	r5, r0
   12b64:	movw	r0, #32840	; 0x8048
   12b68:	strd	r6, [sp, #8]
   12b6c:	mov	r7, r1
   12b70:	str	lr, [sp, #16]
   12b74:	sub	sp, sp, #164	; 0xa4
   12b78:	bl	16c40 <dcngettext@plt+0x5c50>
   12b7c:	subs	r6, r0, #0
   12b80:	moveq	r0, #1
   12b84:	beq	12bec <dcngettext@plt+0x1bfc>
   12b88:	add	r0, sp, #4
   12b8c:	bl	12c44 <dcngettext@plt+0x1c54>
   12b90:	mov	r4, #0
   12b94:	b	12bb0 <dcngettext@plt+0x1bc0>
   12b98:	bl	10fc0 <fread_unlocked@plt>
   12b9c:	add	r4, r4, r0
   12ba0:	cmp	r4, #32768	; 0x8000
   12ba4:	beq	12c00 <dcngettext@plt+0x1c10>
   12ba8:	cmp	r0, #0
   12bac:	beq	12c14 <dcngettext@plt+0x1c24>
   12bb0:	ldr	ip, [r5]
   12bb4:	rsb	r2, r4, #32768	; 0x8000
   12bb8:	add	r0, r6, r4
   12bbc:	mov	r3, r5
   12bc0:	mov	r1, #1
   12bc4:	tst	ip, #16
   12bc8:	beq	12b98 <dcngettext@plt+0x1ba8>
   12bcc:	cmp	r4, #0
   12bd0:	bne	12c30 <dcngettext@plt+0x1c40>
   12bd4:	mov	r1, r7
   12bd8:	add	r0, sp, #4
   12bdc:	bl	1382c <dcngettext@plt+0x283c>
   12be0:	mov	r0, r6
   12be4:	bl	13d38 <dcngettext@plt+0x2d48>
   12be8:	mov	r0, #0
   12bec:	add	sp, sp, #164	; 0xa4
   12bf0:	ldrd	r4, [sp]
   12bf4:	ldrd	r6, [sp, #8]
   12bf8:	add	sp, sp, #16
   12bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   12c00:	mov	r1, r4
   12c04:	add	r2, sp, #4
   12c08:	mov	r0, r6
   12c0c:	bl	12cb4 <dcngettext@plt+0x1cc4>
   12c10:	b	12b90 <dcngettext@plt+0x1ba0>
   12c14:	ldr	r3, [r5]
   12c18:	tst	r3, #32
   12c1c:	beq	12bcc <dcngettext@plt+0x1bdc>
   12c20:	mov	r0, r6
   12c24:	bl	13d38 <dcngettext@plt+0x2d48>
   12c28:	mov	r0, #1
   12c2c:	b	12bec <dcngettext@plt+0x1bfc>
   12c30:	mov	r1, r4
   12c34:	add	r2, sp, #4
   12c38:	mov	r0, r6
   12c3c:	bl	138e8 <dcngettext@plt+0x28f8>
   12c40:	b	12bd4 <dcngettext@plt+0x1be4>
   12c44:	mov	r3, #0
   12c48:	movw	ip, #43913	; 0xab89
   12c4c:	movt	ip, #61389	; 0xefcd
   12c50:	movw	r1, #56574	; 0xdcfe
   12c54:	movt	r1, #39098	; 0x98ba
   12c58:	movw	r2, #21622	; 0x5476
   12c5c:	movt	r2, #4146	; 0x1032
   12c60:	push	{lr}		; (str lr, [sp, #-4]!)
   12c64:	movw	lr, #8961	; 0x2301
   12c68:	movt	lr, #26437	; 0x6745
   12c6c:	str	r3, [r0, #20]
   12c70:	str	lr, [r0]
   12c74:	str	ip, [r0, #4]
   12c78:	str	r1, [r0, #8]
   12c7c:	strd	r2, [r0, #12]
   12c80:	str	r3, [r0, #24]
   12c84:	pop	{pc}		; (ldr pc, [sp], #4)
   12c88:	mov	r3, r0
   12c8c:	mov	r0, r1
   12c90:	ldr	r2, [r3]
   12c94:	str	r2, [r1]
   12c98:	ldr	r2, [r3, #4]
   12c9c:	str	r2, [r1, #4]
   12ca0:	ldr	r2, [r3, #8]
   12ca4:	str	r2, [r1, #8]
   12ca8:	ldr	r3, [r3, #12]
   12cac:	str	r3, [r1, #12]
   12cb0:	bx	lr
   12cb4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12cb8:	mov	r4, r2
   12cbc:	bic	r3, r1, #3
   12cc0:	ldr	r5, [r2]
   12cc4:	ldr	ip, [r2, #20]
   12cc8:	strd	r6, [sp, #8]
   12ccc:	strd	r8, [sp, #16]
   12cd0:	strd	sl, [sp, #24]
   12cd4:	str	lr, [sp, #32]
   12cd8:	sub	sp, sp, #124	; 0x7c
   12cdc:	add	lr, r0, r3
   12ce0:	str	r5, [sp, #68]	; 0x44
   12ce4:	str	r2, [sp, #116]	; 0x74
   12ce8:	ldr	r2, [r2, #16]
   12cec:	adds	r2, r2, r1
   12cf0:	movcs	r1, #1
   12cf4:	movcc	r1, #0
   12cf8:	cmp	r0, lr
   12cfc:	mov	lr, r4
   12d00:	ldr	r4, [r4, #4]
   12d04:	add	ip, ip, r1
   12d08:	str	r2, [lr, #16]
   12d0c:	ldr	r2, [lr, #8]
   12d10:	str	ip, [lr, #20]
   12d14:	str	r4, [sp, #24]
   12d18:	str	r2, [sp, #28]
   12d1c:	ldr	r2, [lr, #12]
   12d20:	str	r2, [sp, #32]
   12d24:	bcs	137ec <dcngettext@plt+0x27fc>
   12d28:	sub	r3, r3, #1
   12d2c:	add	r2, r0, #128	; 0x80
   12d30:	bic	r3, r3, #63	; 0x3f
   12d34:	add	r8, r0, #64	; 0x40
   12d38:	add	r3, r3, r2
   12d3c:	str	r8, [sp, #4]
   12d40:	str	r3, [sp, #76]	; 0x4c
   12d44:	movw	r3, #42104	; 0xa478
   12d48:	movt	r3, #55146	; 0xd76a
   12d4c:	str	r3, [sp, #80]	; 0x50
   12d50:	movw	r3, #46934	; 0xb756
   12d54:	movt	r3, #59591	; 0xe8c7
   12d58:	str	r3, [sp, #84]	; 0x54
   12d5c:	movw	r3, #28891	; 0x70db
   12d60:	movt	r3, #9248	; 0x2420
   12d64:	str	r3, [sp, #88]	; 0x58
   12d68:	movw	r3, #52974	; 0xceee
   12d6c:	movt	r3, #49597	; 0xc1bd
   12d70:	str	r3, [sp, #92]	; 0x5c
   12d74:	movw	r3, #50730	; 0xc62a
   12d78:	movt	r3, #18311	; 0x4787
   12d7c:	str	r3, [sp, #96]	; 0x60
   12d80:	movw	r3, #17939	; 0x4613
   12d84:	movt	r3, #43056	; 0xa830
   12d88:	str	r3, [sp, #100]	; 0x64
   12d8c:	movw	r3, #38145	; 0x9501
   12d90:	movt	r3, #64838	; 0xfd46
   12d94:	str	r3, [sp, #104]	; 0x68
   12d98:	movw	r3, #39128	; 0x98d8
   12d9c:	movt	r3, #27008	; 0x6980
   12da0:	str	r3, [sp, #108]	; 0x6c
   12da4:	movw	r3, #55230	; 0xd7be
   12da8:	movt	r3, #35164	; 0x895c
   12dac:	str	r3, [sp, #112]	; 0x70
   12db0:	ldr	r0, [sp, #4]
   12db4:	ldr	r1, [sp, #68]	; 0x44
   12db8:	ldr	lr, [sp, #80]	; 0x50
   12dbc:	ldr	r2, [sp, #32]
   12dc0:	ldr	r7, [sp, #24]
   12dc4:	add	sl, r1, lr
   12dc8:	ldr	r6, [sp, #28]
   12dcc:	ldr	lr, [sp, #84]	; 0x54
   12dd0:	ldr	r4, [r0, #-64]	; 0xffffffc0
   12dd4:	eor	ip, r6, r2
   12dd8:	eor	r9, r7, r6
   12ddc:	and	ip, ip, r7
   12de0:	ldr	r8, [r0, #-60]	; 0xffffffc4
   12de4:	add	r3, r2, lr
   12de8:	eor	ip, ip, r2
   12dec:	ldr	lr, [sp, #88]	; 0x58
   12df0:	add	sl, sl, r4
   12df4:	add	sl, ip, sl
   12df8:	add	sl, r7, sl, ror #25
   12dfc:	add	r3, r3, r8
   12e00:	str	r8, [sp, #36]	; 0x24
   12e04:	str	r4, [sp, #72]	; 0x48
   12e08:	movw	r4, #63407	; 0xf7af
   12e0c:	movt	r4, #35652	; 0x8b44
   12e10:	add	r1, r6, lr
   12e14:	ldr	lr, [sp, #92]	; 0x5c
   12e18:	and	r9, r9, sl
   12e1c:	eor	r9, r9, r6
   12e20:	eor	r6, sl, r7
   12e24:	str	r4, [sp, #60]	; 0x3c
   12e28:	add	r9, r9, r3
   12e2c:	movw	r4, #4386	; 0x1122
   12e30:	movt	r4, #27536	; 0x6b90
   12e34:	add	r9, sl, r9, ror #20
   12e38:	add	r2, r7, lr
   12e3c:	mov	lr, r0
   12e40:	mov	ip, lr
   12e44:	ldr	fp, [lr, #-56]	; 0xffffffc8
   12e48:	and	r6, r6, r9
   12e4c:	eor	r6, r6, r7
   12e50:	movw	r0, #4015	; 0xfaf
   12e54:	movt	r0, #62844	; 0xf57c
   12e58:	ldr	r5, [lr, #-44]	; 0xffffffd4
   12e5c:	ldr	lr, [lr, #-52]	; 0xffffffcc
   12e60:	add	r1, r1, fp
   12e64:	add	r6, r6, r1
   12e68:	ldr	r7, [sp, #100]	; 0x64
   12e6c:	add	r6, r9, r6, ror #15
   12e70:	str	lr, [sp, #8]
   12e74:	ldr	r3, [sp, #8]
   12e78:	str	fp, [sp, #40]	; 0x28
   12e7c:	ldr	lr, [ip, #-48]	; 0xffffffd0
   12e80:	str	r5, [sp, #48]	; 0x30
   12e84:	add	r2, r2, r3
   12e88:	mov	r3, ip
   12e8c:	ldr	ip, [ip, #-40]	; 0xffffffd8
   12e90:	ldr	r1, [r3, #-32]	; 0xffffffe0
   12e94:	mov	r8, lr
   12e98:	movw	lr, #29075	; 0x7193
   12e9c:	movt	lr, #64920	; 0xfd98
   12ea0:	add	r0, r8, r0
   12ea4:	add	r0, r0, sl
   12ea8:	mov	fp, ip
   12eac:	ldr	ip, [r3, #-36]	; 0xffffffdc
   12eb0:	str	r1, [sp, #16]
   12eb4:	ldr	r1, [sp, #96]	; 0x60
   12eb8:	str	ip, [sp, #12]
   12ebc:	eor	ip, sl, r9
   12ec0:	and	ip, ip, r6
   12ec4:	str	r8, [sp, #44]	; 0x2c
   12ec8:	movw	r8, #17294	; 0x438e
   12ecc:	movt	r8, #42617	; 0xa679
   12ed0:	eor	sl, sl, ip
   12ed4:	str	fp, [sp, #52]	; 0x34
   12ed8:	add	sl, sl, r2
   12edc:	add	fp, fp, r7
   12ee0:	add	r1, r5, r1
   12ee4:	ldr	r5, [r3, #-28]	; 0xffffffe4
   12ee8:	add	fp, fp, r6
   12eec:	add	r1, r1, r9
   12ef0:	movw	r7, #2081	; 0x821
   12ef4:	movt	r7, #18868	; 0x49b4
   12ef8:	ldr	ip, [r3, #-24]	; 0xffffffe8
   12efc:	eor	r3, r9, r6
   12f00:	ldr	r2, [sp, #60]	; 0x3c
   12f04:	str	ip, [sp, #20]
   12f08:	add	ip, r6, sl, ror #10
   12f0c:	ldr	sl, [sp, #12]
   12f10:	and	r3, r3, ip
   12f14:	str	r5, [sp, #56]	; 0x38
   12f18:	add	r5, r5, r2
   12f1c:	eor	r9, r9, r3
   12f20:	eor	r3, r6, ip
   12f24:	ldr	r2, [sp, #108]	; 0x6c
   12f28:	add	r0, r9, r0
   12f2c:	ldr	r9, [sp, #104]	; 0x68
   12f30:	add	r0, ip, r0, ror #25
   12f34:	and	r3, r3, r0
   12f38:	eor	r6, r6, r3
   12f3c:	add	r1, r6, r1
   12f40:	ldr	r6, [sp, #20]
   12f44:	add	sl, sl, r9
   12f48:	add	r1, r0, r1, ror #20
   12f4c:	ldr	r9, [sp, #16]
   12f50:	add	sl, sl, ip
   12f54:	eor	r3, r0, r1
   12f58:	add	r5, r5, r1
   12f5c:	sub	r6, r6, #41984	; 0xa400
   12f60:	sub	r6, r6, #79	; 0x4f
   12f64:	add	r9, r9, r2
   12f68:	eor	r2, ip, r0
   12f6c:	and	r2, r2, r1
   12f70:	add	r9, r9, r0
   12f74:	eor	r2, r2, ip
   12f78:	add	fp, r2, fp
   12f7c:	ldr	r2, [sp, #4]
   12f80:	add	fp, r1, fp, ror #15
   12f84:	and	r3, r3, fp
   12f88:	add	r6, r6, fp
   12f8c:	eor	r3, r3, r0
   12f90:	movw	r0, #9570	; 0x2562
   12f94:	movt	r0, #63006	; 0xf61e
   12f98:	add	sl, r3, sl
   12f9c:	ldr	ip, [r2, #-20]	; 0xffffffec
   12fa0:	add	sl, fp, sl, ror #10
   12fa4:	eor	r2, r1, fp
   12fa8:	ldr	r3, [sp, #112]	; 0x70
   12fac:	and	r2, r2, sl
   12fb0:	eor	r1, r1, r2
   12fb4:	add	r9, r1, r9
   12fb8:	str	ip, [sp, #60]	; 0x3c
   12fbc:	add	r9, sl, r9, ror #25
   12fc0:	ldr	r1, [sp, #4]
   12fc4:	add	ip, ip, r3
   12fc8:	eor	r3, fp, sl
   12fcc:	and	r3, r3, r9
   12fd0:	add	ip, ip, sl
   12fd4:	eor	fp, fp, r3
   12fd8:	eor	r3, sl, r9
   12fdc:	add	r5, fp, r5
   12fe0:	add	r5, r9, r5, ror #20
   12fe4:	ldr	r2, [r1, #-16]
   12fe8:	and	r3, r3, r5
   12fec:	eor	sl, sl, r3
   12ff0:	eor	r3, r9, r5
   12ff4:	add	r6, sl, r6
   12ff8:	mov	sl, r1
   12ffc:	add	r6, r5, r6, ror #15
   13000:	add	r4, r2, r4
   13004:	ldr	sl, [sl, #-8]
   13008:	add	r4, r4, r9
   1300c:	and	r3, r3, r6
   13010:	eor	r3, r3, r9
   13014:	ldr	r9, [sp, #52]	; 0x34
   13018:	add	r3, r3, ip
   1301c:	mov	ip, r1
   13020:	ldr	r1, [r1, #-12]
   13024:	add	r3, r6, r3, ror #10
   13028:	add	r8, sl, r8
   1302c:	mov	fp, r1
   13030:	add	lr, r1, lr
   13034:	ldr	r1, [sp, #36]	; 0x24
   13038:	add	lr, lr, r5
   1303c:	str	fp, [sp, #64]	; 0x40
   13040:	movw	fp, #4189	; 0x105d
   13044:	movt	fp, #54831	; 0xd62f
   13048:	add	r0, r1, r0
   1304c:	eor	r1, r5, r6
   13050:	and	r1, r1, r3
   13054:	eor	r5, r5, r1
   13058:	eor	r1, r6, r3
   1305c:	add	r4, r5, r4
   13060:	movw	r5, #45888	; 0xb340
   13064:	movt	r5, #49216	; 0xc040
   13068:	add	r4, r3, r4, ror #25
   1306c:	add	r5, r9, r5
   13070:	ldr	r9, [sp, #76]	; 0x4c
   13074:	and	r1, r1, r4
   13078:	add	r0, r0, r4
   1307c:	eor	r1, r1, r6
   13080:	add	r6, r8, r6
   13084:	add	lr, r1, lr
   13088:	eor	r1, r3, r4
   1308c:	add	lr, r4, lr, ror #20
   13090:	mov	r8, ip
   13094:	ldr	ip, [ip, #-4]
   13098:	add	r8, r8, #64	; 0x40
   1309c:	and	r1, r1, lr
   130a0:	cmp	r9, r8
   130a4:	eor	r1, r1, r3
   130a8:	movw	r9, #23121	; 0x5a51
   130ac:	movt	r9, #9822	; 0x265e
   130b0:	add	r6, r1, r6
   130b4:	str	r8, [sp, #4]
   130b8:	add	r6, lr, r6, ror #15
   130bc:	eor	r1, r4, lr
   130c0:	add	r7, ip, r7
   130c4:	add	r7, r7, r3
   130c8:	add	r5, r5, lr
   130cc:	and	r1, r1, r6
   130d0:	movw	r8, #5203	; 0x1453
   130d4:	movt	r8, #580	; 0x244
   130d8:	eor	r4, r4, r1
   130dc:	ldr	r1, [sp, #60]	; 0x3c
   130e0:	add	r7, r4, r7
   130e4:	add	r7, r6, r7, ror #10
   130e8:	ldr	r4, [sp, #72]	; 0x48
   130ec:	eor	r3, r6, r7
   130f0:	and	r3, r3, lr
   130f4:	add	r9, r1, r9
   130f8:	eor	r3, r3, r6
   130fc:	add	r9, r9, r6
   13100:	add	r0, r3, r0
   13104:	movw	lr, #51114	; 0xc7aa
   13108:	movt	lr, #59830	; 0xe9b6
   1310c:	add	r0, r7, r0, ror #27
   13110:	add	lr, r4, lr
   13114:	ldr	r4, [sp, #48]	; 0x30
   13118:	eor	r1, r7, r0
   1311c:	add	lr, lr, r7
   13120:	and	r6, r6, r1
   13124:	ldr	r1, [sp, #20]
   13128:	eor	r6, r6, r7
   1312c:	add	r5, r6, r5
   13130:	movw	r6, #59009	; 0xe681
   13134:	movt	r6, #55457	; 0xd8a1
   13138:	add	r5, r0, r5, ror #23
   1313c:	add	fp, r4, fp
   13140:	add	fp, fp, r0
   13144:	add	r6, ip, r6
   13148:	eor	r3, r0, r5
   1314c:	add	r8, r1, r8
   13150:	and	r3, r3, r7
   13154:	add	r8, r8, r5
   13158:	eor	r3, r3, r0
   1315c:	movw	r7, #64456	; 0xfbc8
   13160:	movt	r7, #59347	; 0xe7d3
   13164:	add	r4, r3, r9
   13168:	add	r4, r5, r4, ror #18
   1316c:	movw	r9, #2006	; 0x7d6
   13170:	movt	r9, #49975	; 0xc337
   13174:	add	r9, sl, r9
   13178:	eor	r3, r5, r4
   1317c:	add	r6, r6, r4
   13180:	and	r0, r0, r3
   13184:	eor	r0, r0, r5
   13188:	add	lr, r0, lr
   1318c:	ldr	r0, [sp, #44]	; 0x2c
   13190:	add	lr, r4, lr, ror #12
   13194:	eor	r3, r4, lr
   13198:	and	r3, r3, r5
   1319c:	movw	r5, #52710	; 0xcde6
   131a0:	movt	r5, #8673	; 0x21e1
   131a4:	eor	r3, r3, r4
   131a8:	add	r3, r3, fp
   131ac:	add	r7, r0, r7
   131b0:	ldr	r0, [sp, #56]	; 0x38
   131b4:	add	r3, lr, r3, ror #27
   131b8:	add	r7, r7, lr
   131bc:	eor	r1, lr, r3
   131c0:	and	r1, r1, r4
   131c4:	movw	r4, #3463	; 0xd87
   131c8:	movt	r4, #62677	; 0xf4d5
   131cc:	eor	r1, r1, lr
   131d0:	add	r8, r1, r8
   131d4:	add	r5, r0, r5
   131d8:	ldr	r0, [sp, #16]
   131dc:	add	r8, r3, r8, ror #23
   131e0:	add	r5, r5, r3
   131e4:	eor	r1, r3, r8
   131e8:	add	r9, r9, r8
   131ec:	and	r1, r1, lr
   131f0:	ldr	lr, [sp, #8]
   131f4:	eor	r1, r1, r3
   131f8:	add	r1, r1, r6
   131fc:	movw	r6, #5357	; 0x14ed
   13200:	movt	r6, #17754	; 0x455a
   13204:	add	r1, r8, r1, ror #18
   13208:	add	r6, r0, r6
   1320c:	add	r4, lr, r4
   13210:	eor	lr, r8, r1
   13214:	and	lr, lr, r3
   13218:	add	r4, r4, r1
   1321c:	eor	lr, lr, r8
   13220:	add	r7, lr, r7
   13224:	add	r7, r1, r7, ror #12
   13228:	eor	r3, r1, r7
   1322c:	add	r6, r6, r7
   13230:	and	r8, r8, r3
   13234:	ldr	r3, [sp, #64]	; 0x40
   13238:	eor	r8, r8, r1
   1323c:	add	lr, r8, r5
   13240:	movw	r5, #59653	; 0xe905
   13244:	movt	r5, #43491	; 0xa9e3
   13248:	add	lr, r7, lr, ror #27
   1324c:	ldr	fp, [sp, #40]	; 0x28
   13250:	movw	r8, #41976	; 0xa3f8
   13254:	movt	r8, #64751	; 0xfcef
   13258:	eor	r0, r7, lr
   1325c:	add	r5, r3, r5
   13260:	and	r0, r0, r1
   13264:	ldr	r1, [sp, #12]
   13268:	add	r5, r5, lr
   1326c:	eor	r0, r0, r7
   13270:	add	r9, r0, r9
   13274:	add	r8, fp, r8
   13278:	add	r9, lr, r9, ror #23
   1327c:	movw	fp, #59972	; 0xea44
   13280:	movt	fp, #42174	; 0xa4be
   13284:	eor	r3, lr, r9
   13288:	add	r8, r8, r9
   1328c:	and	r7, r7, r3
   13290:	eor	r7, r7, lr
   13294:	add	r0, r7, r4
   13298:	movw	r4, #729	; 0x2d9
   1329c:	movt	r4, #26479	; 0x676f
   132a0:	add	r0, r9, r0, ror #18
   132a4:	movw	r7, #19594	; 0x4c8a
   132a8:	movt	r7, #36138	; 0x8d2a
   132ac:	add	r4, r1, r4
   132b0:	eor	r3, r9, r0
   132b4:	add	r4, r4, r0
   132b8:	and	r3, r3, lr
   132bc:	movw	lr, #14658	; 0x3942
   132c0:	movt	lr, #65530	; 0xfffa
   132c4:	eor	r3, r3, r9
   132c8:	add	r6, r3, r6
   132cc:	add	r7, r2, r7
   132d0:	add	r6, r0, r6, ror #12
   132d4:	eor	r3, r0, r6
   132d8:	add	r7, r7, r6
   132dc:	and	r3, r3, r9
   132e0:	ldr	r9, [sp, #60]	; 0x3c
   132e4:	eor	r3, r3, r0
   132e8:	add	r3, r3, r5
   132ec:	ldr	r5, [sp, #48]	; 0x30
   132f0:	add	r3, r6, r3, ror #27
   132f4:	eor	r1, r6, r3
   132f8:	and	r1, r1, r0
   132fc:	movw	r0, #63105	; 0xf681
   13300:	movt	r0, #34673	; 0x8771
   13304:	eor	r1, r1, r6
   13308:	add	r8, r1, r8
   1330c:	add	lr, r5, lr
   13310:	ldr	r5, [sp, #16]
   13314:	add	r8, r3, r8, ror #23
   13318:	add	lr, lr, r3
   1331c:	eor	r1, r3, r8
   13320:	and	r1, r1, r6
   13324:	movw	r6, #14348	; 0x380c
   13328:	movt	r6, #64997	; 0xfde5
   1332c:	eor	r1, r1, r3
   13330:	add	r1, r1, r4
   13334:	add	r0, r5, r0
   13338:	add	r1, r8, r1, ror #18
   1333c:	movw	r5, #24866	; 0x6122
   13340:	movt	r5, #28061	; 0x6d9d
   13344:	add	r5, r9, r5
   13348:	add	r0, r0, r8
   1334c:	eor	r4, r8, r1
   13350:	add	r5, r5, r1
   13354:	and	r3, r3, r4
   13358:	add	r6, sl, r6
   1335c:	eor	r3, r3, r8
   13360:	ldr	r8, [sp, #36]	; 0x24
   13364:	movw	r9, #53161	; 0xcfa9
   13368:	movt	r9, #19422	; 0x4bde
   1336c:	add	r7, r3, r7
   13370:	add	r7, r1, r7, ror #12
   13374:	eor	r4, r4, r7
   13378:	eor	r1, r1, r7
   1337c:	add	lr, r4, lr
   13380:	add	r6, r6, r7
   13384:	add	lr, r7, lr, ror #28
   13388:	add	fp, r8, fp
   1338c:	movw	r8, #19296	; 0x4b60
   13390:	movt	r8, #63163	; 0xf6bb
   13394:	movw	r4, #48240	; 0xbc70
   13398:	movt	r4, #48831	; 0xbebf
   1339c:	eor	r1, r1, lr
   133a0:	add	r0, r1, r0
   133a4:	ldr	r1, [sp, #44]	; 0x2c
   133a8:	eor	r7, r7, lr
   133ac:	add	r0, lr, r0, ror #21
   133b0:	add	fp, fp, lr
   133b4:	eor	r7, r7, r0
   133b8:	eor	lr, lr, r0
   133bc:	add	r3, r7, r5
   133c0:	ldr	r5, [sp, #64]	; 0x40
   133c4:	add	r9, r1, r9
   133c8:	add	r3, r0, r3, ror #16
   133cc:	ldr	r1, [sp, #12]
   133d0:	add	r9, r9, r0
   133d4:	eor	r0, r0, r3
   133d8:	add	r8, r1, r8
   133dc:	eor	r1, lr, r3
   133e0:	ldr	lr, [sp, #20]
   133e4:	add	r1, r1, r6
   133e8:	add	r8, r8, r3
   133ec:	add	r1, r3, r1, ror #9
   133f0:	eor	r0, r0, r1
   133f4:	eor	r3, r3, r1
   133f8:	add	r4, lr, r4
   133fc:	add	lr, r0, fp
   13400:	ldr	fp, [sp, #40]	; 0x28
   13404:	add	lr, r1, lr, ror #28
   13408:	add	r4, r4, r1
   1340c:	movw	r0, #32454	; 0x7ec6
   13410:	movt	r0, #10395	; 0x289b
   13414:	eor	r3, r3, lr
   13418:	eor	r1, r1, lr
   1341c:	add	r3, r3, r9
   13420:	ldr	r9, [sp, #72]	; 0x48
   13424:	add	r0, r5, r0
   13428:	add	r3, lr, r3, ror #21
   1342c:	movw	r5, #10234	; 0x27fa
   13430:	movt	r5, #60065	; 0xeaa1
   13434:	add	r0, r0, lr
   13438:	eor	r1, r1, r3
   1343c:	eor	lr, lr, r3
   13440:	add	r6, r1, r8
   13444:	ldr	r1, [sp, #8]
   13448:	movw	r8, #12421	; 0x3085
   1344c:	movt	r8, #54511	; 0xd4ef
   13450:	add	r6, r3, r6, ror #16
   13454:	add	r5, r9, r5
   13458:	add	r5, r5, r3
   1345c:	eor	lr, lr, r6
   13460:	add	lr, lr, r4
   13464:	movw	r4, #7429	; 0x1d05
   13468:	movt	r4, #1160	; 0x488
   1346c:	add	r8, r1, r8
   13470:	add	lr, r6, lr, ror #9
   13474:	eor	r1, r3, r6
   13478:	ldr	r3, [sp, #52]	; 0x34
   1347c:	add	r8, r8, r6
   13480:	eor	r1, r1, lr
   13484:	eor	r6, r6, lr
   13488:	add	r1, r1, r0
   1348c:	movw	r0, #53305	; 0xd039
   13490:	movt	r0, #55764	; 0xd9d4
   13494:	add	r1, lr, r1, ror #28
   13498:	add	r4, r3, r4
   1349c:	ldr	r3, [sp, #56]	; 0x38
   134a0:	add	r4, r4, lr
   134a4:	eor	lr, lr, r1
   134a8:	add	r0, r3, r0
   134ac:	eor	r3, r6, r1
   134b0:	add	r6, r3, r5
   134b4:	movw	r5, #39397	; 0x99e5
   134b8:	movt	r5, #59099	; 0xe6db
   134bc:	add	r6, r1, r6, ror #21
   134c0:	add	r0, r0, r1
   134c4:	add	r5, r2, r5
   134c8:	eor	lr, lr, r6
   134cc:	eor	r3, r1, r6
   134d0:	add	r7, lr, r8
   134d4:	add	r5, r5, r6
   134d8:	add	r7, r6, r7, ror #16
   134dc:	movw	lr, #31992	; 0x7cf8
   134e0:	movt	lr, #8098	; 0x1fa2
   134e4:	add	lr, ip, lr
   134e8:	eor	r3, r3, r7
   134ec:	eor	r6, r6, r7
   134f0:	add	r3, r3, r4
   134f4:	add	lr, lr, r7
   134f8:	add	r3, r7, r3, ror #9
   134fc:	movw	r4, #22117	; 0x5665
   13500:	movt	r4, #50348	; 0xc4ac
   13504:	add	r4, fp, r4
   13508:	movw	fp, #65431	; 0xff97
   1350c:	movt	fp, #17194	; 0x432a
   13510:	eor	r6, r6, r3
   13514:	add	r6, r6, r0
   13518:	eor	r7, r7, r3
   1351c:	add	r6, r3, r6, ror #28
   13520:	add	r4, r4, r3
   13524:	movw	r0, #8772	; 0x2244
   13528:	movt	r0, #62505	; 0xf429
   1352c:	eor	r7, r7, r6
   13530:	eor	r3, r3, r6
   13534:	add	r7, r7, r5
   13538:	add	r0, r9, r0
   1353c:	ldr	r9, [sp, #12]
   13540:	add	r7, r6, r7, ror #21
   13544:	add	r0, r0, r6
   13548:	movw	r5, #9127	; 0x23a7
   1354c:	movt	r5, #43924	; 0xab94
   13550:	eor	r3, r3, r7
   13554:	eor	r6, r6, r7
   13558:	add	r1, r3, lr
   1355c:	add	r5, sl, r5
   13560:	add	r1, r7, r1, ror #16
   13564:	add	fp, r9, fp
   13568:	mvn	r9, r7
   1356c:	movw	lr, #41017	; 0xa039
   13570:	movt	lr, #64659	; 0xfc93
   13574:	eor	sl, r6, r1
   13578:	mvn	r3, r1
   1357c:	add	sl, sl, r4
   13580:	ldr	r4, [sp, #48]	; 0x30
   13584:	add	fp, fp, r7
   13588:	add	sl, r1, sl, ror #9
   1358c:	add	r5, r5, r1
   13590:	movw	r6, #22979	; 0x59c3
   13594:	movt	r6, #25947	; 0x655b
   13598:	orr	r8, r9, sl
   1359c:	mvn	r9, sl
   135a0:	eor	r8, r8, r1
   135a4:	ldr	r1, [sp, #8]
   135a8:	add	r6, r2, r6
   135ac:	add	r8, r8, r0
   135b0:	add	lr, r4, lr
   135b4:	add	r8, sl, r8, ror #26
   135b8:	add	lr, lr, sl
   135bc:	movw	r4, #52370	; 0xcc92
   135c0:	movt	r4, #36620	; 0x8f0c
   135c4:	movw	r0, #62589	; 0xf47d
   135c8:	movt	r0, #65519	; 0xffef
   135cc:	orr	r3, r3, r8
   135d0:	eor	sl, sl, r3
   135d4:	add	r6, r6, r8
   135d8:	add	sl, sl, fp
   135dc:	ldr	fp, [sp, #20]
   135e0:	add	r4, r1, r4
   135e4:	add	r7, r8, sl, ror #22
   135e8:	mvn	r1, r8
   135ec:	ldr	sl, [sp, #36]	; 0x24
   135f0:	orr	r9, r9, r7
   135f4:	mvn	r2, r7
   135f8:	eor	r8, r8, r9
   135fc:	movw	r9, #59104	; 0xe6e0
   13600:	movt	r9, #65068	; 0xfe2c
   13604:	add	r5, r8, r5
   13608:	ldr	r8, [sp, #16]
   1360c:	add	r9, ip, r9
   13610:	add	r0, fp, r0
   13614:	add	r5, r7, r5, ror #17
   13618:	ldr	ip, [sp, #52]	; 0x34
   1361c:	movw	fp, #24017	; 0x5dd1
   13620:	movt	fp, #34180	; 0x8584
   13624:	add	fp, sl, fp
   13628:	movw	sl, #32335	; 0x7e4f
   1362c:	movt	sl, #28584	; 0x6fa8
   13630:	orr	r1, r1, r5
   13634:	add	sl, r8, sl
   13638:	movw	r8, #17172	; 0x4314
   1363c:	movt	r8, #41729	; 0xa301
   13640:	add	r4, r4, r7
   13644:	add	r8, ip, r8
   13648:	ldr	ip, [sp, #64]	; 0x40
   1364c:	eor	r7, r7, r1
   13650:	add	lr, r7, lr
   13654:	movw	r7, #4513	; 0x11a1
   13658:	movt	r7, #19976	; 0x4e08
   1365c:	add	lr, r5, lr, ror #11
   13660:	mvn	r1, r5
   13664:	add	r0, r0, r5
   13668:	orr	r3, r2, lr
   1366c:	mvn	r2, lr
   13670:	add	r7, ip, r7
   13674:	ldr	ip, [sp, #44]	; 0x2c
   13678:	eor	r5, r5, r3
   1367c:	add	r5, r5, r6
   13680:	movw	r6, #32386	; 0x7e82
   13684:	movt	r6, #63315	; 0xf753
   13688:	add	r3, lr, r5, ror #26
   1368c:	add	fp, fp, lr
   13690:	movw	r5, #62005	; 0xf235
   13694:	movt	r5, #48442	; 0xbd3a
   13698:	add	sl, sl, r3
   1369c:	add	r6, ip, r6
   136a0:	orr	ip, r1, r3
   136a4:	eor	ip, ip, lr
   136a8:	mvn	r1, r3
   136ac:	ldr	lr, [sp, #60]	; 0x3c
   136b0:	add	ip, ip, r4
   136b4:	movw	r4, #53947	; 0xd2bb
   136b8:	movt	r4, #10967	; 0x2ad7
   136bc:	add	ip, r3, ip, ror #22
   136c0:	orr	r2, r2, ip
   136c4:	add	r9, r9, ip
   136c8:	eor	r3, r3, r2
   136cc:	mvn	r2, ip
   136d0:	add	r0, r3, r0
   136d4:	ldr	r3, [sp, #40]	; 0x28
   136d8:	add	r5, lr, r5
   136dc:	add	r0, ip, r0, ror #17
   136e0:	movw	lr, #54161	; 0xd391
   136e4:	movt	lr, #60294	; 0xeb86
   136e8:	orr	r1, r1, r0
   136ec:	add	r8, r8, r0
   136f0:	eor	r1, r1, ip
   136f4:	add	r1, r1, fp
   136f8:	add	r4, r3, r4
   136fc:	ldr	r3, [sp, #56]	; 0x38
   13700:	add	r1, r0, r1, ror #11
   13704:	orr	r2, r2, r1
   13708:	mvn	ip, r1
   1370c:	eor	r2, r2, r0
   13710:	add	r7, r7, r1
   13714:	add	r2, r2, sl
   13718:	add	lr, r3, lr
   1371c:	add	r2, r1, r2, ror #26
   13720:	mvn	r3, r0
   13724:	orr	r3, r3, r2
   13728:	mvn	r0, r2
   1372c:	eor	r3, r3, r1
   13730:	add	r6, r6, r2
   13734:	add	r3, r3, r9
   13738:	add	r3, r2, r3, ror #22
   1373c:	orr	ip, ip, r3
   13740:	mvn	fp, r3
   13744:	eor	ip, ip, r2
   13748:	add	r5, r5, r3
   1374c:	add	ip, ip, r8
   13750:	add	ip, r3, ip, ror #17
   13754:	orr	r0, r0, ip
   13758:	mvn	sl, ip
   1375c:	eor	r0, r0, r3
   13760:	ldr	r3, [sp, #32]
   13764:	add	r4, r4, ip
   13768:	add	r0, r0, r7
   1376c:	add	r0, ip, r0, ror #11
   13770:	orr	fp, fp, r0
   13774:	mvn	r1, r0
   13778:	eor	fp, fp, ip
   1377c:	add	lr, lr, r0
   13780:	add	fp, fp, r6
   13784:	ldr	r6, [sp, #28]
   13788:	add	fp, r0, fp, ror #26
   1378c:	orr	sl, sl, fp
   13790:	mvn	r2, fp
   13794:	eor	sl, sl, r0
   13798:	ldr	r0, [sp, #68]	; 0x44
   1379c:	add	sl, sl, r5
   137a0:	add	sl, fp, sl, ror #22
   137a4:	orr	r1, r1, sl
   137a8:	add	r3, r3, sl
   137ac:	eor	r1, r1, fp
   137b0:	add	r0, r0, fp
   137b4:	add	r1, r1, r4
   137b8:	str	r3, [sp, #32]
   137bc:	add	r1, sl, r1, ror #17
   137c0:	str	r0, [sp, #68]	; 0x44
   137c4:	add	r3, r6, r1
   137c8:	orr	r2, r2, r1
   137cc:	eor	r2, r2, sl
   137d0:	str	r3, [sp, #28]
   137d4:	add	r2, r2, lr
   137d8:	ldr	r7, [sp, #24]
   137dc:	add	r2, r1, r2, ror #11
   137e0:	add	r3, r7, r2
   137e4:	str	r3, [sp, #24]
   137e8:	bne	12db0 <dcngettext@plt+0x1dc0>
   137ec:	ldr	r2, [sp, #68]	; 0x44
   137f0:	ldr	r3, [sp, #116]	; 0x74
   137f4:	str	r2, [r3]
   137f8:	ldr	r2, [sp, #24]
   137fc:	str	r2, [r3, #4]
   13800:	ldr	r2, [sp, #28]
   13804:	str	r2, [r3, #8]
   13808:	ldr	r2, [sp, #32]
   1380c:	str	r2, [r3, #12]
   13810:	add	sp, sp, #124	; 0x7c
   13814:	ldrd	r4, [sp]
   13818:	ldrd	r6, [sp, #8]
   1381c:	ldrd	r8, [sp, #16]
   13820:	ldrd	sl, [sp, #24]
   13824:	add	sp, sp, #32
   13828:	pop	{pc}		; (ldr pc, [sp], #4)
   1382c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13830:	mov	r4, r0
   13834:	mov	r5, r1
   13838:	ldr	r0, [r0, #24]
   1383c:	ldr	r3, [r4, #16]
   13840:	ldr	r1, [r4, #20]
   13844:	cmp	r0, #56	; 0x38
   13848:	strd	r6, [sp, #8]
   1384c:	add	r7, r4, #28
   13850:	movcc	r6, #64	; 0x40
   13854:	movcs	r6, #128	; 0x80
   13858:	str	r8, [sp, #16]
   1385c:	movcc	r2, #56	; 0x38
   13860:	movcs	r2, #120	; 0x78
   13864:	str	lr, [sp, #20]
   13868:	movcc	ip, #15
   1386c:	movcs	ip, #31
   13870:	movcc	r8, #14
   13874:	movcs	r8, #30
   13878:	add	ip, r4, ip, lsl #2
   1387c:	adds	r3, r3, r0
   13880:	add	r8, r4, r8, lsl #2
   13884:	sub	r2, r2, r0
   13888:	lsr	lr, r3, #29
   1388c:	addcs	r1, r1, #1
   13890:	add	r0, r7, r0
   13894:	str	r3, [r4, #16]
   13898:	lsl	r3, r3, #3
   1389c:	orr	lr, lr, r1, lsl #3
   138a0:	strcs	r1, [r4, #20]
   138a4:	movw	r1, #32944	; 0x80b0
   138a8:	movt	r1, #1
   138ac:	str	r3, [r8, #28]
   138b0:	str	lr, [ip, #28]
   138b4:	bl	10dc8 <memcpy@plt>
   138b8:	mov	r1, r6
   138bc:	mov	r0, r7
   138c0:	mov	r2, r4
   138c4:	bl	12cb4 <dcngettext@plt+0x1cc4>
   138c8:	mov	r1, r5
   138cc:	mov	r0, r4
   138d0:	ldrd	r4, [sp]
   138d4:	ldrd	r6, [sp, #8]
   138d8:	ldr	r8, [sp, #16]
   138dc:	ldr	lr, [sp, #20]
   138e0:	add	sp, sp, #24
   138e4:	b	12c88 <dcngettext@plt+0x1c98>
   138e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   138ec:	mov	r5, r2
   138f0:	mov	r4, r0
   138f4:	strd	r6, [sp, #8]
   138f8:	mov	r6, r1
   138fc:	strd	r8, [sp, #16]
   13900:	ldr	r8, [r2, #24]
   13904:	str	sl, [sp, #24]
   13908:	str	lr, [sp, #28]
   1390c:	cmp	r8, #0
   13910:	bne	13a08 <dcngettext@plt+0x2a18>
   13914:	cmp	r6, #63	; 0x3f
   13918:	bls	139e0 <dcngettext@plt+0x29f0>
   1391c:	tst	r4, #3
   13920:	beq	139c8 <dcngettext@plt+0x29d8>
   13924:	cmp	r6, #64	; 0x40
   13928:	add	r7, r5, #28
   1392c:	beq	13aa8 <dcngettext@plt+0x2ab8>
   13930:	sub	r9, r6, #65	; 0x41
   13934:	lsr	r9, r9, #6
   13938:	add	r8, r9, #1
   1393c:	add	r8, r4, r8, lsl #6
   13940:	mov	r3, r4
   13944:	mov	r2, r7
   13948:	add	r4, r4, #64	; 0x40
   1394c:	ldr	lr, [r3]
   13950:	add	r3, r3, #16
   13954:	add	r2, r2, #16
   13958:	ldr	ip, [r3, #-12]
   1395c:	ldr	r0, [r3, #-8]
   13960:	ldr	r1, [r3, #-4]
   13964:	cmp	r3, r4
   13968:	str	lr, [r2, #-16]
   1396c:	str	ip, [r2, #-12]
   13970:	str	r0, [r2, #-8]
   13974:	str	r1, [r2, #-4]
   13978:	bne	1394c <dcngettext@plt+0x295c>
   1397c:	mov	r4, r3
   13980:	mov	r2, r5
   13984:	mov	r1, #64	; 0x40
   13988:	mov	r0, r7
   1398c:	bl	12cb4 <dcngettext@plt+0x1cc4>
   13990:	cmp	r4, r8
   13994:	bne	13940 <dcngettext@plt+0x2950>
   13998:	sub	r6, r6, #64	; 0x40
   1399c:	sub	r6, r6, r9, lsl #6
   139a0:	ldr	r4, [r5, #24]
   139a4:	mov	r1, r8
   139a8:	mov	r2, r6
   139ac:	add	r0, r7, r4
   139b0:	add	r4, r4, r6
   139b4:	bl	10dc8 <memcpy@plt>
   139b8:	cmp	r4, #63	; 0x3f
   139bc:	bhi	13a48 <dcngettext@plt+0x2a58>
   139c0:	str	r4, [r5, #24]
   139c4:	b	139f0 <dcngettext@plt+0x2a00>
   139c8:	bic	r1, r6, #63	; 0x3f
   139cc:	mov	r0, r4
   139d0:	mov	r2, r5
   139d4:	and	r6, r6, #63	; 0x3f
   139d8:	add	r4, r4, r1
   139dc:	bl	12cb4 <dcngettext@plt+0x1cc4>
   139e0:	cmp	r6, #0
   139e4:	movne	r8, r4
   139e8:	addne	r7, r5, #28
   139ec:	bne	139a0 <dcngettext@plt+0x29b0>
   139f0:	ldrd	r4, [sp]
   139f4:	ldrd	r6, [sp, #8]
   139f8:	ldrd	r8, [sp, #16]
   139fc:	ldr	sl, [sp, #24]
   13a00:	add	sp, sp, #28
   13a04:	pop	{pc}		; (ldr pc, [sp], #4)
   13a08:	rsb	r7, r8, #128	; 0x80
   13a0c:	add	r9, r2, #28
   13a10:	cmp	r7, r1
   13a14:	add	r0, r9, r8
   13a18:	movcs	r7, r1
   13a1c:	mov	r1, r4
   13a20:	mov	r2, r7
   13a24:	bl	10dc8 <memcpy@plt>
   13a28:	ldr	r1, [r5, #24]
   13a2c:	add	r1, r7, r1
   13a30:	cmp	r1, #64	; 0x40
   13a34:	str	r1, [r5, #24]
   13a38:	bhi	13a70 <dcngettext@plt+0x2a80>
   13a3c:	add	r4, r4, r7
   13a40:	sub	r6, r6, r7
   13a44:	b	13914 <dcngettext@plt+0x2924>
   13a48:	mov	r2, r5
   13a4c:	mov	r0, r7
   13a50:	sub	r4, r4, #64	; 0x40
   13a54:	mov	r1, #64	; 0x40
   13a58:	bl	12cb4 <dcngettext@plt+0x1cc4>
   13a5c:	mov	r0, r7
   13a60:	mov	r2, r4
   13a64:	add	r1, r5, #92	; 0x5c
   13a68:	bl	10dc8 <memcpy@plt>
   13a6c:	b	139c0 <dcngettext@plt+0x29d0>
   13a70:	mov	r2, r5
   13a74:	mov	r0, r9
   13a78:	bic	r1, r1, #63	; 0x3f
   13a7c:	bl	12cb4 <dcngettext@plt+0x1cc4>
   13a80:	ldr	r3, [r5, #24]
   13a84:	add	r1, r8, r7
   13a88:	mov	r0, r9
   13a8c:	bic	r1, r1, #63	; 0x3f
   13a90:	add	r1, r9, r1
   13a94:	and	r3, r3, #63	; 0x3f
   13a98:	mov	r2, r3
   13a9c:	str	r3, [r5, #24]
   13aa0:	bl	10dc8 <memcpy@plt>
   13aa4:	b	13a3c <dcngettext@plt+0x2a4c>
   13aa8:	mov	r8, r4
   13aac:	b	139a0 <dcngettext@plt+0x29b0>
   13ab0:	movw	ip, #8961	; 0x2301
   13ab4:	movt	ip, #26437	; 0x6745
   13ab8:	str	r4, [sp, #-8]!
   13abc:	movw	r3, #43913	; 0xab89
   13ac0:	movt	r3, #61389	; 0xefcd
   13ac4:	str	lr, [sp, #4]
   13ac8:	sub	sp, sp, #160	; 0xa0
   13acc:	movw	lr, #56574	; 0xdcfe
   13ad0:	movt	lr, #39098	; 0x98ba
   13ad4:	mov	r4, r2
   13ad8:	str	ip, [sp, #4]
   13adc:	movw	ip, #21622	; 0x5476
   13ae0:	movt	ip, #4146	; 0x1032
   13ae4:	str	r3, [sp, #8]
   13ae8:	mov	r3, #0
   13aec:	add	r2, sp, #4
   13af0:	str	lr, [sp, #12]
   13af4:	str	ip, [sp, #16]
   13af8:	str	r3, [sp, #20]
   13afc:	str	r3, [sp, #24]
   13b00:	str	r3, [sp, #28]
   13b04:	bl	138e8 <dcngettext@plt+0x28f8>
   13b08:	mov	r1, r4
   13b0c:	add	r0, sp, #4
   13b10:	bl	1382c <dcngettext@plt+0x283c>
   13b14:	add	sp, sp, #160	; 0xa0
   13b18:	ldr	r4, [sp]
   13b1c:	add	sp, sp, #4
   13b20:	pop	{pc}		; (ldr pc, [sp], #4)
   13b24:	b	10d98 <posix_fadvise64@plt>
   13b28:	cmp	r0, #0
   13b2c:	bxeq	lr
   13b30:	str	r4, [sp, #-16]!
   13b34:	mov	r4, r1
   13b38:	strd	r6, [sp, #4]
   13b3c:	mov	r6, #0
   13b40:	mov	r7, #0
   13b44:	str	lr, [sp, #12]
   13b48:	sub	sp, sp, #16
   13b4c:	bl	10f30 <fileno@plt>
   13b50:	mov	r2, r6
   13b54:	mov	r3, r7
   13b58:	strd	r6, [sp]
   13b5c:	str	r4, [sp, #8]
   13b60:	bl	10d98 <posix_fadvise64@plt>
   13b64:	add	sp, sp, #16
   13b68:	ldr	r4, [sp]
   13b6c:	ldrd	r6, [sp, #4]
   13b70:	add	sp, sp, #12
   13b74:	pop	{pc}		; (ldr pc, [sp], #4)
   13b78:	strd	r4, [sp, #-12]!
   13b7c:	mov	r4, r0
   13b80:	str	lr, [sp, #8]
   13b84:	sub	sp, sp, #12
   13b88:	bl	10f30 <fileno@plt>
   13b8c:	cmp	r0, #0
   13b90:	mov	r0, r4
   13b94:	blt	13c18 <dcngettext@plt+0x2c28>
   13b98:	bl	10e94 <__freading@plt>
   13b9c:	cmp	r0, #0
   13ba0:	bne	13be4 <dcngettext@plt+0x2bf4>
   13ba4:	mov	r0, r4
   13ba8:	bl	13c2c <dcngettext@plt+0x2c3c>
   13bac:	cmp	r0, #0
   13bb0:	beq	13c14 <dcngettext@plt+0x2c24>
   13bb4:	bl	10ef4 <__errno_location@plt>
   13bb8:	mov	r5, r0
   13bbc:	mov	r0, r4
   13bc0:	ldr	r4, [r5]
   13bc4:	bl	10f48 <fclose@plt>
   13bc8:	cmp	r4, #0
   13bcc:	mvnne	r0, #0
   13bd0:	strne	r4, [r5]
   13bd4:	add	sp, sp, #12
   13bd8:	ldrd	r4, [sp]
   13bdc:	add	sp, sp, #8
   13be0:	pop	{pc}		; (ldr pc, [sp], #4)
   13be4:	mov	r0, r4
   13be8:	bl	10f30 <fileno@plt>
   13bec:	mov	r1, #1
   13bf0:	mov	r2, #0
   13bf4:	mov	r3, #0
   13bf8:	str	r1, [sp]
   13bfc:	bl	10e40 <lseek64@plt>
   13c00:	mvn	r3, #0
   13c04:	mvn	r2, #0
   13c08:	cmp	r1, r3
   13c0c:	cmpeq	r0, r2
   13c10:	bne	13ba4 <dcngettext@plt+0x2bb4>
   13c14:	mov	r0, r4
   13c18:	add	sp, sp, #12
   13c1c:	ldrd	r4, [sp]
   13c20:	ldr	lr, [sp, #8]
   13c24:	add	sp, sp, #12
   13c28:	b	10f48 <fclose@plt>
   13c2c:	str	r4, [sp, #-8]!
   13c30:	subs	r4, r0, #0
   13c34:	str	lr, [sp, #4]
   13c38:	sub	sp, sp, #8
   13c3c:	beq	13c58 <dcngettext@plt+0x2c68>
   13c40:	bl	10e94 <__freading@plt>
   13c44:	cmp	r0, #0
   13c48:	beq	13c58 <dcngettext@plt+0x2c68>
   13c4c:	ldr	r3, [r4]
   13c50:	tst	r3, #256	; 0x100
   13c54:	bne	13c70 <dcngettext@plt+0x2c80>
   13c58:	mov	r0, r4
   13c5c:	add	sp, sp, #8
   13c60:	ldr	r4, [sp]
   13c64:	ldr	lr, [sp, #4]
   13c68:	add	sp, sp, #8
   13c6c:	b	10da4 <fflush@plt>
   13c70:	mov	r1, #1
   13c74:	mov	r2, #0
   13c78:	mov	r3, #0
   13c7c:	mov	r0, r4
   13c80:	str	r1, [sp]
   13c84:	bl	13d98 <dcngettext@plt+0x2da8>
   13c88:	b	13c58 <dcngettext@plt+0x2c68>
   13c8c:	strd	r4, [sp, #-16]!
   13c90:	mov	r5, r1
   13c94:	str	r6, [sp, #8]
   13c98:	str	lr, [sp, #12]
   13c9c:	bl	10fa8 <fopen64@plt>
   13ca0:	subs	r4, r0, #0
   13ca4:	beq	13cb4 <dcngettext@plt+0x2cc4>
   13ca8:	bl	10f30 <fileno@plt>
   13cac:	cmp	r0, #2
   13cb0:	bls	13cc8 <dcngettext@plt+0x2cd8>
   13cb4:	mov	r0, r4
   13cb8:	ldrd	r4, [sp]
   13cbc:	ldr	r6, [sp, #8]
   13cc0:	add	sp, sp, #12
   13cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   13cc8:	bl	16170 <dcngettext@plt+0x5180>
   13ccc:	subs	r6, r0, #0
   13cd0:	blt	13d18 <dcngettext@plt+0x2d28>
   13cd4:	mov	r0, r4
   13cd8:	bl	13b78 <dcngettext@plt+0x2b88>
   13cdc:	cmp	r0, #0
   13ce0:	bne	13cf8 <dcngettext@plt+0x2d08>
   13ce4:	mov	r1, r5
   13ce8:	mov	r0, r6
   13cec:	bl	10d50 <fdopen@plt>
   13cf0:	subs	r4, r0, #0
   13cf4:	bne	13cb4 <dcngettext@plt+0x2cc4>
   13cf8:	bl	10ef4 <__errno_location@plt>
   13cfc:	mov	r5, r0
   13d00:	mov	r0, r6
   13d04:	ldr	r6, [r5]
   13d08:	mov	r4, #0
   13d0c:	bl	10fe4 <close@plt>
   13d10:	str	r6, [r5]
   13d14:	b	13cb4 <dcngettext@plt+0x2cc4>
   13d18:	bl	10ef4 <__errno_location@plt>
   13d1c:	mov	r5, r0
   13d20:	mov	r0, r4
   13d24:	ldr	r6, [r5]
   13d28:	mov	r4, #0
   13d2c:	bl	13b78 <dcngettext@plt+0x2b88>
   13d30:	str	r6, [r5]
   13d34:	b	13cb4 <dcngettext@plt+0x2cc4>
   13d38:	strd	r4, [sp, #-12]!
   13d3c:	mov	r5, r0
   13d40:	str	lr, [sp, #8]
   13d44:	sub	sp, sp, #12
   13d48:	bl	10ef4 <__errno_location@plt>
   13d4c:	mov	r4, r0
   13d50:	mov	r2, #0
   13d54:	ldr	r3, [r4]
   13d58:	mov	r0, r5
   13d5c:	str	r2, [r4]
   13d60:	str	r3, [sp]
   13d64:	str	r3, [sp, #4]
   13d68:	bl	10db0 <free@plt>
   13d6c:	ldr	r3, [r4]
   13d70:	add	r2, sp, #8
   13d74:	clz	r3, r3
   13d78:	lsr	r3, r3, #5
   13d7c:	add	r3, r2, r3, lsl #2
   13d80:	ldr	r3, [r3, #-8]
   13d84:	str	r3, [r4]
   13d88:	add	sp, sp, #12
   13d8c:	ldrd	r4, [sp]
   13d90:	add	sp, sp, #8
   13d94:	pop	{pc}		; (ldr pc, [sp], #4)
   13d98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d9c:	mov	r4, r0
   13da0:	ldr	ip, [r0, #4]
   13da4:	strd	r6, [sp, #8]
   13da8:	str	lr, [sp, #20]
   13dac:	ldr	lr, [r0, #8]
   13db0:	str	r8, [sp, #16]
   13db4:	sub	sp, sp, #8
   13db8:	ldr	r5, [sp, #32]
   13dbc:	cmp	lr, ip
   13dc0:	beq	13de8 <dcngettext@plt+0x2df8>
   13dc4:	mov	r0, r4
   13dc8:	str	r5, [sp, #32]
   13dcc:	add	sp, sp, #8
   13dd0:	ldrd	r4, [sp]
   13dd4:	ldrd	r6, [sp, #8]
   13dd8:	ldr	r8, [sp, #16]
   13ddc:	ldr	lr, [sp, #20]
   13de0:	add	sp, sp, #24
   13de4:	b	10f54 <fseeko64@plt>
   13de8:	ldr	ip, [r0, #16]
   13dec:	ldr	lr, [r0, #20]
   13df0:	cmp	lr, ip
   13df4:	bne	13dc4 <dcngettext@plt+0x2dd4>
   13df8:	ldr	r8, [r0, #36]	; 0x24
   13dfc:	cmp	r8, #0
   13e00:	bne	13dc4 <dcngettext@plt+0x2dd4>
   13e04:	mov	r6, r2
   13e08:	mov	r7, r3
   13e0c:	bl	10f30 <fileno@plt>
   13e10:	mov	r2, r6
   13e14:	mov	r3, r7
   13e18:	str	r5, [sp]
   13e1c:	bl	10e40 <lseek64@plt>
   13e20:	mvn	r3, #0
   13e24:	mvn	r2, #0
   13e28:	cmp	r1, r3
   13e2c:	cmpeq	r0, r2
   13e30:	beq	13e60 <dcngettext@plt+0x2e70>
   13e34:	ldr	r3, [r4]
   13e38:	strd	r0, [r4, #80]	; 0x50
   13e3c:	bic	r3, r3, #16
   13e40:	str	r3, [r4]
   13e44:	mov	r0, r8
   13e48:	add	sp, sp, #8
   13e4c:	ldrd	r4, [sp]
   13e50:	ldrd	r6, [sp, #8]
   13e54:	ldr	r8, [sp, #16]
   13e58:	add	sp, sp, #20
   13e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e60:	mvn	r8, #0
   13e64:	b	13e44 <dcngettext@plt+0x2e54>
   13e68:	strd	r4, [sp, #-16]!
   13e6c:	subs	r4, r0, #0
   13e70:	str	r6, [sp, #8]
   13e74:	str	lr, [sp, #12]
   13e78:	beq	13f10 <dcngettext@plt+0x2f20>
   13e7c:	mov	r1, #47	; 0x2f
   13e80:	bl	10f84 <strrchr@plt>
   13e84:	subs	r5, r0, #0
   13e88:	beq	13ee8 <dcngettext@plt+0x2ef8>
   13e8c:	add	r6, r5, #1
   13e90:	sub	r3, r6, r4
   13e94:	cmp	r3, #6
   13e98:	ble	13ee8 <dcngettext@plt+0x2ef8>
   13e9c:	movw	r1, #33064	; 0x8128
   13ea0:	movt	r1, #1
   13ea4:	mov	r2, #7
   13ea8:	sub	r0, r5, #6
   13eac:	bl	10fcc <strncmp@plt>
   13eb0:	cmp	r0, #0
   13eb4:	bne	13ee8 <dcngettext@plt+0x2ef8>
   13eb8:	movw	r1, #33072	; 0x8130
   13ebc:	movt	r1, #1
   13ec0:	mov	r2, #3
   13ec4:	mov	r0, r6
   13ec8:	bl	10fcc <strncmp@plt>
   13ecc:	cmp	r0, #0
   13ed0:	movne	r4, r6
   13ed4:	bne	13ee8 <dcngettext@plt+0x2ef8>
   13ed8:	add	r4, r5, #4
   13edc:	movw	r3, #37200	; 0x9150
   13ee0:	movt	r3, #2
   13ee4:	str	r4, [r3]
   13ee8:	movw	r2, #37260	; 0x918c
   13eec:	movt	r2, #2
   13ef0:	ldr	r6, [sp, #8]
   13ef4:	movw	r3, #37204	; 0x9154
   13ef8:	movt	r3, #2
   13efc:	str	r4, [r2]
   13f00:	str	r4, [r3]
   13f04:	ldrd	r4, [sp]
   13f08:	add	sp, sp, #12
   13f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f10:	movw	r3, #37216	; 0x9160
   13f14:	movt	r3, #2
   13f18:	movw	r0, #33008	; 0x80f0
   13f1c:	movt	r0, #1
   13f20:	ldr	r3, [r3]
   13f24:	mov	r2, #55	; 0x37
   13f28:	mov	r1, #1
   13f2c:	bl	10e34 <fwrite@plt>
   13f30:	bl	10fd8 <abort@plt>
   13f34:	strd	r4, [sp, #-16]!
   13f38:	mov	r4, #0
   13f3c:	mov	r5, #0
   13f40:	cmp	r1, #10
   13f44:	str	r6, [sp, #8]
   13f48:	strd	r4, [r0]
   13f4c:	strd	r4, [r0, #8]
   13f50:	str	lr, [sp, #12]
   13f54:	strd	r4, [r0, #16]
   13f58:	strd	r4, [r0, #24]
   13f5c:	strd	r4, [r0, #32]
   13f60:	strd	r4, [r0, #40]	; 0x28
   13f64:	beq	13f7c <dcngettext@plt+0x2f8c>
   13f68:	ldrd	r4, [sp]
   13f6c:	str	r1, [r0]
   13f70:	ldr	r6, [sp, #8]
   13f74:	add	sp, sp, #12
   13f78:	pop	{pc}		; (ldr pc, [sp], #4)
   13f7c:	bl	10fd8 <abort@plt>
   13f80:	mov	r2, #5
   13f84:	strd	r4, [sp, #-16]!
   13f88:	mov	r5, r0
   13f8c:	str	r6, [sp, #8]
   13f90:	mov	r6, r1
   13f94:	mov	r1, r0
   13f98:	mov	r0, #0
   13f9c:	str	lr, [sp, #12]
   13fa0:	bl	10e04 <dcgettext@plt>
   13fa4:	cmp	r5, r0
   13fa8:	mov	r4, r0
   13fac:	beq	13fc4 <dcngettext@plt+0x2fd4>
   13fb0:	mov	r0, r4
   13fb4:	ldrd	r4, [sp]
   13fb8:	ldr	r6, [sp, #8]
   13fbc:	add	sp, sp, #12
   13fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13fc4:	bl	16f44 <dcngettext@plt+0x5f54>
   13fc8:	ldrb	r3, [r0]
   13fcc:	bic	r3, r3, #32
   13fd0:	cmp	r3, #85	; 0x55
   13fd4:	bne	1403c <dcngettext@plt+0x304c>
   13fd8:	ldrb	r3, [r0, #1]
   13fdc:	bic	r3, r3, #32
   13fe0:	cmp	r3, #84	; 0x54
   13fe4:	bne	140bc <dcngettext@plt+0x30cc>
   13fe8:	ldrb	r3, [r0, #2]
   13fec:	bic	r3, r3, #32
   13ff0:	cmp	r3, #70	; 0x46
   13ff4:	bne	140bc <dcngettext@plt+0x30cc>
   13ff8:	ldrb	r3, [r0, #3]
   13ffc:	cmp	r3, #45	; 0x2d
   14000:	bne	140bc <dcngettext@plt+0x30cc>
   14004:	ldrb	r3, [r0, #4]
   14008:	cmp	r3, #56	; 0x38
   1400c:	bne	140bc <dcngettext@plt+0x30cc>
   14010:	ldrb	r3, [r0, #5]
   14014:	cmp	r3, #0
   14018:	bne	140bc <dcngettext@plt+0x30cc>
   1401c:	ldrb	r2, [r4]
   14020:	movw	r3, #33164	; 0x818c
   14024:	movt	r3, #1
   14028:	movw	r4, #33176	; 0x8198
   1402c:	movt	r4, #1
   14030:	cmp	r2, #96	; 0x60
   14034:	movne	r4, r3
   14038:	b	13fb0 <dcngettext@plt+0x2fc0>
   1403c:	cmp	r3, #71	; 0x47
   14040:	bne	140bc <dcngettext@plt+0x30cc>
   14044:	ldrb	r3, [r0, #1]
   14048:	bic	r3, r3, #32
   1404c:	cmp	r3, #66	; 0x42
   14050:	bne	140bc <dcngettext@plt+0x30cc>
   14054:	ldrb	r3, [r0, #2]
   14058:	cmp	r3, #49	; 0x31
   1405c:	bne	140bc <dcngettext@plt+0x30cc>
   14060:	ldrb	r3, [r0, #3]
   14064:	cmp	r3, #56	; 0x38
   14068:	bne	140bc <dcngettext@plt+0x30cc>
   1406c:	ldrb	r3, [r0, #4]
   14070:	cmp	r3, #48	; 0x30
   14074:	bne	140bc <dcngettext@plt+0x30cc>
   14078:	ldrb	r3, [r0, #5]
   1407c:	cmp	r3, #51	; 0x33
   14080:	bne	140bc <dcngettext@plt+0x30cc>
   14084:	ldrb	r3, [r0, #6]
   14088:	cmp	r3, #48	; 0x30
   1408c:	bne	140bc <dcngettext@plt+0x30cc>
   14090:	ldrb	r3, [r0, #7]
   14094:	cmp	r3, #0
   14098:	bne	140bc <dcngettext@plt+0x30cc>
   1409c:	ldrb	r2, [r4]
   140a0:	movw	r3, #33168	; 0x8190
   140a4:	movt	r3, #1
   140a8:	movw	r4, #33172	; 0x8194
   140ac:	movt	r4, #1
   140b0:	cmp	r2, #96	; 0x60
   140b4:	movne	r4, r3
   140b8:	b	13fb0 <dcngettext@plt+0x2fc0>
   140bc:	movw	r3, #33180	; 0x819c
   140c0:	movt	r3, #1
   140c4:	cmp	r6, #9
   140c8:	movw	r4, #33160	; 0x8188
   140cc:	movt	r4, #1
   140d0:	movne	r4, r3
   140d4:	b	13fb0 <dcngettext@plt+0x2fc0>
   140d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   140dc:	strd	r6, [sp, #8]
   140e0:	strd	r8, [sp, #16]
   140e4:	strd	sl, [sp, #24]
   140e8:	mov	fp, r0
   140ec:	mov	sl, r1
   140f0:	str	lr, [sp, #32]
   140f4:	sub	sp, sp, #116	; 0x74
   140f8:	ldr	r8, [sp, #152]	; 0x98
   140fc:	str	r3, [sp, #28]
   14100:	ldr	r3, [sp, #156]	; 0x9c
   14104:	str	r2, [sp, #32]
   14108:	and	r4, r3, #2
   1410c:	ubfx	r3, r3, #1, #1
   14110:	str	r3, [sp, #44]	; 0x2c
   14114:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   14118:	str	r0, [sp, #64]	; 0x40
   1411c:	cmp	r8, #10
   14120:	ldrls	pc, [pc, r8, lsl #2]
   14124:	b	15894 <dcngettext@plt+0x48a4>
   14128:	andeq	r4, r1, ip, lsr #10
   1412c:	andeq	r4, r1, r8, asr #11
   14130:	andeq	r4, r1, r4, lsr #23
   14134:	andeq	r4, r1, r8, ror #11
   14138:	muleq	r1, r0, r4
   1413c:	ldrdeq	r4, [r1], -ip
   14140:	andeq	r4, r1, ip, asr r5
   14144:	muleq	r1, r8, r5
   14148:	andeq	r4, r1, r4, asr r1
   1414c:	andeq	r4, r1, r4, asr r1
   14150:	andeq	r4, r1, r4, asr r1
   14154:	cmp	r8, #10
   14158:	beq	14184 <dcngettext@plt+0x3194>
   1415c:	mov	r1, r8
   14160:	movw	r0, #33184	; 0x81a0
   14164:	movt	r0, #1
   14168:	bl	13f80 <dcngettext@plt+0x2f90>
   1416c:	mov	r1, r8
   14170:	str	r0, [sp, #164]	; 0xa4
   14174:	movw	r0, #33180	; 0x819c
   14178:	movt	r0, #1
   1417c:	bl	13f80 <dcngettext@plt+0x2f90>
   14180:	str	r0, [sp, #168]	; 0xa8
   14184:	cmp	r4, #0
   14188:	movne	r4, #0
   1418c:	beq	15570 <dcngettext@plt+0x4580>
   14190:	mov	r3, #1
   14194:	mov	r5, #0
   14198:	ldr	r0, [sp, #168]	; 0xa8
   1419c:	str	r3, [sp, #36]	; 0x24
   141a0:	str	r3, [sp, #40]	; 0x28
   141a4:	str	r5, [sp, #68]	; 0x44
   141a8:	bl	10edc <strlen@plt>
   141ac:	ldr	r3, [sp, #168]	; 0xa8
   141b0:	str	r5, [sp, #48]	; 0x30
   141b4:	str	r0, [sp, #56]	; 0x38
   141b8:	str	r3, [sp, #60]	; 0x3c
   141bc:	str	r5, [sp, #72]	; 0x48
   141c0:	str	r8, [sp, #152]	; 0x98
   141c4:	mov	r8, fp
   141c8:	mov	r9, #0
   141cc:	ldr	fp, [sp, #152]	; 0x98
   141d0:	ldr	r3, [sp, #28]
   141d4:	cmn	r3, #1
   141d8:	beq	14738 <dcngettext@plt+0x3748>
   141dc:	ldr	r3, [sp, #28]
   141e0:	subs	r6, r3, r9
   141e4:	movne	r6, #1
   141e8:	cmp	r6, #0
   141ec:	beq	14750 <dcngettext@plt+0x3760>
   141f0:	ldr	r0, [sp, #32]
   141f4:	ldr	r7, [sp, #40]	; 0x28
   141f8:	add	r3, r0, r9
   141fc:	cmp	fp, #2
   14200:	moveq	r7, #0
   14204:	andne	r7, r7, #1
   14208:	str	r3, [sp, #52]	; 0x34
   1420c:	cmp	r7, #0
   14210:	beq	14bec <dcngettext@plt+0x3bfc>
   14214:	ldr	r2, [sp, #56]	; 0x38
   14218:	cmp	r2, #0
   1421c:	beq	14e88 <dcngettext@plt+0x3e98>
   14220:	ldr	r1, [sp, #28]
   14224:	cmp	r2, #1
   14228:	mov	r3, r2
   1422c:	movls	r3, #0
   14230:	movhi	r3, #1
   14234:	add	r5, r9, r2
   14238:	cmn	r1, #1
   1423c:	movne	r3, #0
   14240:	cmp	r3, #0
   14244:	beq	14250 <dcngettext@plt+0x3260>
   14248:	bl	10edc <strlen@plt>
   1424c:	str	r0, [sp, #28]
   14250:	ldr	r3, [sp, #28]
   14254:	cmp	r5, r3
   14258:	bhi	14e88 <dcngettext@plt+0x3e98>
   1425c:	ldr	r0, [sp, #52]	; 0x34
   14260:	ldr	r2, [sp, #56]	; 0x38
   14264:	ldr	r1, [sp, #60]	; 0x3c
   14268:	bl	10dec <memcmp@plt>
   1426c:	cmp	r0, #0
   14270:	bne	14e88 <dcngettext@plt+0x3e98>
   14274:	ldr	r3, [sp, #44]	; 0x2c
   14278:	cmp	r3, #0
   1427c:	bne	157b8 <dcngettext@plt+0x47c8>
   14280:	ldr	r3, [sp, #52]	; 0x34
   14284:	ldrb	r5, [r3]
   14288:	cmp	r5, #126	; 0x7e
   1428c:	ldrls	pc, [pc, r5, lsl #2]
   14290:	b	14b48 <dcngettext@plt+0x3b58>
   14294:	andeq	r4, r1, ip, asr #20
   14298:	andeq	r4, r1, r8, asr #22
   1429c:	andeq	r4, r1, r8, asr #22
   142a0:	andeq	r4, r1, r8, asr #22
   142a4:	andeq	r4, r1, r8, asr #22
   142a8:	andeq	r4, r1, r8, asr #22
   142ac:	andeq	r4, r1, r8, asr #22
   142b0:	andeq	r4, r1, r0, lsr #20
   142b4:	andeq	r4, r1, r8, lsl sl
   142b8:	andeq	r4, r1, r0, ror #18
   142bc:	andeq	r4, r1, ip, lsl #20
   142c0:	andeq	r4, r1, r8, asr r9
   142c4:	andeq	r4, r1, r8, ror #19
   142c8:	andeq	r4, r1, r4, lsr sl
   142cc:	andeq	r4, r1, r8, asr #22
   142d0:	andeq	r4, r1, r8, asr #22
   142d4:	andeq	r4, r1, r8, asr #22
   142d8:	andeq	r4, r1, r8, asr #22
   142dc:	andeq	r4, r1, r8, asr #22
   142e0:	andeq	r4, r1, r8, asr #22
   142e4:	andeq	r4, r1, r8, asr #22
   142e8:	andeq	r4, r1, r8, asr #22
   142ec:	andeq	r4, r1, r8, asr #22
   142f0:	andeq	r4, r1, r8, asr #22
   142f4:	andeq	r4, r1, r8, asr #22
   142f8:	andeq	r4, r1, r8, asr #22
   142fc:	andeq	r4, r1, r8, asr #22
   14300:	andeq	r4, r1, r8, asr #22
   14304:	andeq	r4, r1, r8, asr #22
   14308:	andeq	r4, r1, r8, asr #22
   1430c:	andeq	r4, r1, r8, asr #22
   14310:	andeq	r4, r1, r8, asr #22
   14314:	andeq	r4, r1, r4, lsr #22
   14318:	andeq	r4, r1, ip, lsr #20
   1431c:	andeq	r4, r1, ip, lsr #20
   14320:	andeq	r4, r1, r8, lsl #22
   14324:	andeq	r4, r1, ip, lsr #20
   14328:	andeq	r4, r1, ip, lsr fp
   1432c:	andeq	r4, r1, ip, lsr #20
   14330:	andeq	r4, r1, r8, lsl #17
   14334:	andeq	r4, r1, ip, lsr #20
   14338:	andeq	r4, r1, ip, lsr #20
   1433c:	andeq	r4, r1, ip, lsr #20
   14340:	andeq	r4, r1, ip, lsr fp
   14344:	andeq	r4, r1, ip, lsr fp
   14348:	andeq	r4, r1, ip, lsr fp
   1434c:	andeq	r4, r1, ip, lsr fp
   14350:	andeq	r4, r1, ip, lsr fp
   14354:	andeq	r4, r1, ip, lsr fp
   14358:	andeq	r4, r1, ip, lsr fp
   1435c:	andeq	r4, r1, ip, lsr fp
   14360:	andeq	r4, r1, ip, lsr fp
   14364:	andeq	r4, r1, ip, lsr fp
   14368:	andeq	r4, r1, ip, lsr fp
   1436c:	andeq	r4, r1, ip, lsr fp
   14370:	andeq	r4, r1, ip, lsr fp
   14374:	andeq	r4, r1, ip, lsr fp
   14378:	andeq	r4, r1, ip, lsr fp
   1437c:	andeq	r4, r1, ip, lsr fp
   14380:	andeq	r4, r1, ip, lsr #20
   14384:	andeq	r4, r1, ip, lsr #20
   14388:	andeq	r4, r1, ip, lsr #20
   1438c:	andeq	r4, r1, ip, lsr #20
   14390:	andeq	r4, r1, ip, asr r8
   14394:	andeq	r4, r1, r8, asr #22
   14398:	andeq	r4, r1, ip, lsr fp
   1439c:	andeq	r4, r1, ip, lsr fp
   143a0:	andeq	r4, r1, ip, lsr fp
   143a4:	andeq	r4, r1, ip, lsr fp
   143a8:	andeq	r4, r1, ip, lsr fp
   143ac:	andeq	r4, r1, ip, lsr fp
   143b0:	andeq	r4, r1, ip, lsr fp
   143b4:	andeq	r4, r1, ip, lsr fp
   143b8:	andeq	r4, r1, ip, lsr fp
   143bc:	andeq	r4, r1, ip, lsr fp
   143c0:	andeq	r4, r1, ip, lsr fp
   143c4:	andeq	r4, r1, ip, lsr fp
   143c8:	andeq	r4, r1, ip, lsr fp
   143cc:	andeq	r4, r1, ip, lsr fp
   143d0:	andeq	r4, r1, ip, lsr fp
   143d4:	andeq	r4, r1, ip, lsr fp
   143d8:	andeq	r4, r1, ip, lsr fp
   143dc:	andeq	r4, r1, ip, lsr fp
   143e0:	andeq	r4, r1, ip, lsr fp
   143e4:	andeq	r4, r1, ip, lsr fp
   143e8:	andeq	r4, r1, ip, lsr fp
   143ec:	andeq	r4, r1, ip, lsr fp
   143f0:	andeq	r4, r1, ip, lsr fp
   143f4:	andeq	r4, r1, ip, lsr fp
   143f8:	andeq	r4, r1, ip, lsr fp
   143fc:	andeq	r4, r1, ip, lsr fp
   14400:	andeq	r4, r1, ip, lsr #20
   14404:	andeq	r4, r1, r4, lsl #16
   14408:	andeq	r4, r1, ip, lsr fp
   1440c:	andeq	r4, r1, ip, lsr #20
   14410:	andeq	r4, r1, ip, lsr fp
   14414:	andeq	r4, r1, ip, lsr #20
   14418:	andeq	r4, r1, ip, lsr fp
   1441c:	andeq	r4, r1, ip, lsr fp
   14420:	andeq	r4, r1, ip, lsr fp
   14424:	andeq	r4, r1, ip, lsr fp
   14428:	andeq	r4, r1, ip, lsr fp
   1442c:	andeq	r4, r1, ip, lsr fp
   14430:	andeq	r4, r1, ip, lsr fp
   14434:	andeq	r4, r1, ip, lsr fp
   14438:	andeq	r4, r1, ip, lsr fp
   1443c:	andeq	r4, r1, ip, lsr fp
   14440:	andeq	r4, r1, ip, lsr fp
   14444:	andeq	r4, r1, ip, lsr fp
   14448:	andeq	r4, r1, ip, lsr fp
   1444c:	andeq	r4, r1, ip, lsr fp
   14450:	andeq	r4, r1, ip, lsr fp
   14454:	andeq	r4, r1, ip, lsr fp
   14458:	andeq	r4, r1, ip, lsr fp
   1445c:	andeq	r4, r1, ip, lsr fp
   14460:	andeq	r4, r1, ip, lsr fp
   14464:	andeq	r4, r1, ip, lsr fp
   14468:	andeq	r4, r1, ip, lsr fp
   1446c:	andeq	r4, r1, ip, lsr fp
   14470:	andeq	r4, r1, ip, lsr fp
   14474:	andeq	r4, r1, ip, lsr fp
   14478:	andeq	r4, r1, ip, lsr fp
   1447c:	andeq	r4, r1, ip, lsr fp
   14480:	andeq	r4, r1, r8, lsr #12
   14484:	andeq	r4, r1, ip, lsr #20
   14488:	andeq	r4, r1, r8, lsr #12
   1448c:	andeq	r4, r1, r8, lsl #22
   14490:	cmp	r4, #0
   14494:	moveq	r3, #1
   14498:	streq	r3, [sp, #40]	; 0x28
   1449c:	beq	14bb0 <dcngettext@plt+0x3bc0>
   144a0:	mov	r3, #0
   144a4:	mov	r2, #1
   144a8:	mov	r4, r3
   144ac:	str	r2, [sp, #36]	; 0x24
   144b0:	str	r2, [sp, #44]	; 0x2c
   144b4:	str	r2, [sp, #56]	; 0x38
   144b8:	str	r3, [sp, #68]	; 0x44
   144bc:	movw	r3, #33180	; 0x819c
   144c0:	movt	r3, #1
   144c4:	str	r4, [sp, #40]	; 0x28
   144c8:	mov	r8, #2
   144cc:	str	r4, [sp, #48]	; 0x30
   144d0:	str	r3, [sp, #60]	; 0x3c
   144d4:	str	r4, [sp, #72]	; 0x48
   144d8:	b	141c0 <dcngettext@plt+0x31d0>
   144dc:	cmp	r4, #0
   144e0:	bne	1572c <dcngettext@plt+0x473c>
   144e4:	cmp	sl, #0
   144e8:	beq	154ec <dcngettext@plt+0x44fc>
   144ec:	mov	r3, #34	; 0x22
   144f0:	mov	r1, r4
   144f4:	mov	r2, #1
   144f8:	strb	r3, [fp]
   144fc:	movw	r3, #33160	; 0x8188
   14500:	movt	r3, #1
   14504:	mov	r4, r2
   14508:	str	r2, [sp, #36]	; 0x24
   1450c:	str	r2, [sp, #40]	; 0x28
   14510:	str	r1, [sp, #44]	; 0x2c
   14514:	str	r1, [sp, #48]	; 0x30
   14518:	str	r2, [sp, #56]	; 0x38
   1451c:	str	r3, [sp, #60]	; 0x3c
   14520:	str	r1, [sp, #68]	; 0x44
   14524:	str	r1, [sp, #72]	; 0x48
   14528:	b	141c0 <dcngettext@plt+0x31d0>
   1452c:	mov	r3, #0
   14530:	mov	r4, r8
   14534:	str	r3, [sp, #40]	; 0x28
   14538:	str	r3, [sp, #44]	; 0x2c
   1453c:	str	r3, [sp, #48]	; 0x30
   14540:	str	r8, [sp, #56]	; 0x38
   14544:	str	r3, [sp, #60]	; 0x3c
   14548:	str	r3, [sp, #68]	; 0x44
   1454c:	mov	r3, #1
   14550:	str	r3, [sp, #36]	; 0x24
   14554:	str	r8, [sp, #72]	; 0x48
   14558:	b	141c0 <dcngettext@plt+0x31d0>
   1455c:	mov	r3, #1
   14560:	mov	r2, #0
   14564:	mov	r4, r2
   14568:	mov	r8, #5
   1456c:	str	r3, [sp, #36]	; 0x24
   14570:	str	r3, [sp, #40]	; 0x28
   14574:	str	r3, [sp, #44]	; 0x2c
   14578:	str	r2, [sp, #48]	; 0x30
   1457c:	str	r3, [sp, #56]	; 0x38
   14580:	movw	r3, #33160	; 0x8188
   14584:	movt	r3, #1
   14588:	str	r3, [sp, #60]	; 0x3c
   1458c:	str	r2, [sp, #68]	; 0x44
   14590:	str	r2, [sp, #72]	; 0x48
   14594:	b	141c0 <dcngettext@plt+0x31d0>
   14598:	mov	r3, #0
   1459c:	mov	r2, #1
   145a0:	mov	r4, r3
   145a4:	str	r2, [sp, #36]	; 0x24
   145a8:	str	r2, [sp, #40]	; 0x28
   145ac:	str	r3, [sp, #44]	; 0x2c
   145b0:	str	r3, [sp, #48]	; 0x30
   145b4:	str	r3, [sp, #56]	; 0x38
   145b8:	str	r3, [sp, #60]	; 0x3c
   145bc:	str	r3, [sp, #68]	; 0x44
   145c0:	str	r3, [sp, #72]	; 0x48
   145c4:	b	141c0 <dcngettext@plt+0x31d0>
   145c8:	mov	r2, #1
   145cc:	mov	r3, #0
   145d0:	mov	r4, r3
   145d4:	str	r2, [sp, #36]	; 0x24
   145d8:	str	r2, [sp, #44]	; 0x2c
   145dc:	str	r8, [sp, #56]	; 0x38
   145e0:	str	r3, [sp, #68]	; 0x44
   145e4:	b	144bc <dcngettext@plt+0x34cc>
   145e8:	mov	r3, #1
   145ec:	mov	r2, #0
   145f0:	mov	r4, r2
   145f4:	mov	r8, #2
   145f8:	str	r3, [sp, #36]	; 0x24
   145fc:	str	r3, [sp, #40]	; 0x28
   14600:	str	r3, [sp, #44]	; 0x2c
   14604:	str	r2, [sp, #48]	; 0x30
   14608:	str	r3, [sp, #56]	; 0x38
   1460c:	movw	r3, #33180	; 0x819c
   14610:	movt	r3, #1
   14614:	str	r3, [sp, #60]	; 0x3c
   14618:	str	r2, [sp, #68]	; 0x44
   1461c:	str	r2, [sp, #72]	; 0x48
   14620:	b	141c0 <dcngettext@plt+0x31d0>
   14624:	mov	r7, #0
   14628:	ldr	r3, [sp, #28]
   1462c:	cmn	r3, #1
   14630:	beq	15108 <dcngettext@plt+0x4118>
   14634:	ldr	r3, [sp, #28]
   14638:	subs	r2, r3, #1
   1463c:	movne	r2, #1
   14640:	sub	r3, fp, #2
   14644:	cmp	r2, #0
   14648:	clz	r3, r3
   1464c:	lsr	r3, r3, #5
   14650:	bne	1465c <dcngettext@plt+0x366c>
   14654:	cmp	r9, #0
   14658:	beq	14e68 <dcngettext@plt+0x3e78>
   1465c:	mov	r6, #0
   14660:	ldr	r2, [sp, #40]	; 0x28
   14664:	eor	r2, r2, #1
   14668:	orrs	r3, r3, r2
   1466c:	bne	14844 <dcngettext@plt+0x3854>
   14670:	ldr	r2, [sp, #160]	; 0xa0
   14674:	cmp	r2, #0
   14678:	beq	14698 <dcngettext@plt+0x36a8>
   1467c:	ldr	r0, [sp, #160]	; 0xa0
   14680:	ubfx	r1, r5, #5, #8
   14684:	and	r2, r5, #31
   14688:	ldr	r1, [r0, r1, lsl #2]
   1468c:	lsr	r2, r1, r2
   14690:	tst	r2, #1
   14694:	bne	146a0 <dcngettext@plt+0x36b0>
   14698:	cmp	r7, #0
   1469c:	beq	14910 <dcngettext@plt+0x3920>
   146a0:	ldr	r2, [sp, #44]	; 0x2c
   146a4:	sub	r3, fp, #2
   146a8:	clz	r3, r3
   146ac:	lsr	r3, r3, #5
   146b0:	cmp	r2, #0
   146b4:	bne	1545c <dcngettext@plt+0x446c>
   146b8:	ldr	r2, [sp, #48]	; 0x30
   146bc:	eor	r2, r2, #1
   146c0:	ands	r3, r3, r2
   146c4:	beq	146fc <dcngettext@plt+0x370c>
   146c8:	cmp	sl, r4
   146cc:	str	r3, [sp, #48]	; 0x30
   146d0:	movhi	r2, #39	; 0x27
   146d4:	strbhi	r2, [r8, r4]
   146d8:	add	r2, r4, #1
   146dc:	cmp	sl, r2
   146e0:	movhi	r1, #36	; 0x24
   146e4:	strbhi	r1, [r8, r2]
   146e8:	add	r2, r4, #2
   146ec:	add	r4, r4, #3
   146f0:	cmp	sl, r2
   146f4:	movhi	r1, #39	; 0x27
   146f8:	strbhi	r1, [r8, r2]
   146fc:	cmp	r4, sl
   14700:	add	r9, r9, #1
   14704:	movcc	r3, #92	; 0x5c
   14708:	strbcc	r3, [r8, r4]
   1470c:	add	r4, r4, #1
   14710:	cmp	r4, sl
   14714:	ldr	r3, [sp, #36]	; 0x24
   14718:	strbcc	r5, [r8, r4]
   1471c:	cmp	r6, #0
   14720:	add	r4, r4, #1
   14724:	moveq	r3, #0
   14728:	str	r3, [sp, #36]	; 0x24
   1472c:	ldr	r3, [sp, #28]
   14730:	cmn	r3, #1
   14734:	bne	141dc <dcngettext@plt+0x31ec>
   14738:	ldr	r3, [sp, #32]
   1473c:	ldrb	r6, [r3, r9]
   14740:	adds	r6, r6, #0
   14744:	movne	r6, #1
   14748:	cmp	r6, #0
   1474c:	bne	141f0 <dcngettext@plt+0x3200>
   14750:	str	fp, [sp, #152]	; 0x98
   14754:	mov	fp, r8
   14758:	cmp	r4, #0
   1475c:	ldr	r1, [sp, #44]	; 0x2c
   14760:	movne	r3, #0
   14764:	ldr	r8, [sp, #152]	; 0x98
   14768:	sub	r2, r8, #2
   1476c:	clz	r2, r2
   14770:	lsr	r2, r2, #5
   14774:	andeq	r3, r2, r1
   14778:	cmp	r3, #0
   1477c:	bne	15838 <dcngettext@plt+0x4848>
   14780:	eor	r3, r1, #1
   14784:	ands	r2, r2, r3
   14788:	beq	15764 <dcngettext@plt+0x4774>
   1478c:	ldr	r3, [sp, #68]	; 0x44
   14790:	cmp	r3, #0
   14794:	beq	15768 <dcngettext@plt+0x4778>
   14798:	ldr	r3, [sp, #36]	; 0x24
   1479c:	cmp	r3, #0
   147a0:	bne	157f4 <dcngettext@plt+0x4804>
   147a4:	ldr	r3, [sp, #72]	; 0x48
   147a8:	adds	r3, r3, #0
   147ac:	movne	r3, #1
   147b0:	cmp	sl, #0
   147b4:	movne	r3, #0
   147b8:	cmp	r3, #0
   147bc:	ldreq	r2, [sp, #68]	; 0x44
   147c0:	beq	15768 <dcngettext@plt+0x4778>
   147c4:	ldr	r2, [sp, #72]	; 0x48
   147c8:	str	r3, [sp, #68]	; 0x44
   147cc:	movw	r3, #33180	; 0x819c
   147d0:	movt	r3, #1
   147d4:	mov	r1, #39	; 0x27
   147d8:	mov	r4, #1
   147dc:	ldr	sl, [sp, #72]	; 0x48
   147e0:	mov	r8, #2
   147e4:	str	r3, [sp, #60]	; 0x3c
   147e8:	mov	r3, #0
   147ec:	strb	r1, [fp]
   147f0:	str	r3, [sp, #44]	; 0x2c
   147f4:	str	r4, [sp, #56]	; 0x38
   147f8:	str	r2, [sp, #72]	; 0x48
   147fc:	b	141c0 <dcngettext@plt+0x31d0>
   14800:	mov	r7, #0
   14804:	cmp	fp, #2
   14808:	beq	150e8 <dcngettext@plt+0x40f8>
   1480c:	ldr	r2, [sp, #40]	; 0x28
   14810:	ldr	r3, [sp, #56]	; 0x38
   14814:	ldr	r1, [sp, #44]	; 0x2c
   14818:	cmp	r3, #0
   1481c:	moveq	r3, #0
   14820:	andne	r3, r2, r1
   14824:	cmp	r3, #0
   14828:	moveq	r5, #92	; 0x5c
   1482c:	moveq	r3, r5
   14830:	bne	150f4 <dcngettext@plt+0x4104>
   14834:	ldr	r2, [sp, #40]	; 0x28
   14838:	cmp	r2, #0
   1483c:	bne	15530 <dcngettext@plt+0x4540>
   14840:	mov	r6, #0
   14844:	ldr	r3, [sp, #44]	; 0x2c
   14848:	cmp	r3, #0
   1484c:	beq	150e0 <dcngettext@plt+0x40f0>
   14850:	mov	r3, #0
   14854:	b	14670 <dcngettext@plt+0x3680>
   14858:	mov	r7, #0
   1485c:	cmp	fp, #2
   14860:	beq	15158 <dcngettext@plt+0x4168>
   14864:	cmp	fp, #5
   14868:	beq	1511c <dcngettext@plt+0x412c>
   1486c:	sub	r3, fp, #2
   14870:	mov	r6, #0
   14874:	clz	r3, r3
   14878:	mov	r5, #63	; 0x3f
   1487c:	lsr	r3, r3, #5
   14880:	b	14660 <dcngettext@plt+0x3670>
   14884:	mov	r7, #0
   14888:	cmp	fp, #2
   1488c:	movne	r3, #0
   14890:	movne	r5, #39	; 0x27
   14894:	strne	r6, [sp, #68]	; 0x44
   14898:	bne	14660 <dcngettext@plt+0x3670>
   1489c:	ldr	r3, [sp, #44]	; 0x2c
   148a0:	cmp	r3, #0
   148a4:	bne	15560 <dcngettext@plt+0x4570>
   148a8:	ldr	r3, [sp, #72]	; 0x48
   148ac:	cmp	sl, #0
   148b0:	clz	r3, r3
   148b4:	lsr	r3, r3, #5
   148b8:	moveq	r3, #0
   148bc:	cmp	r3, #0
   148c0:	bne	1548c <dcngettext@plt+0x449c>
   148c4:	cmp	sl, r4
   148c8:	movhi	r3, #39	; 0x27
   148cc:	strbhi	r3, [r8, r4]
   148d0:	add	r3, r4, #1
   148d4:	cmp	sl, r3
   148d8:	movhi	r2, #92	; 0x5c
   148dc:	strbhi	r2, [r8, r3]
   148e0:	add	r3, r4, #2
   148e4:	cmp	sl, r3
   148e8:	bls	148f4 <dcngettext@plt+0x3904>
   148ec:	mov	r2, #39	; 0x27
   148f0:	strb	r2, [r8, r3]
   148f4:	mov	r3, #0
   148f8:	cmp	r7, #0
   148fc:	add	r4, r4, #3
   14900:	mov	r5, #39	; 0x27
   14904:	str	r3, [sp, #48]	; 0x30
   14908:	str	r6, [sp, #68]	; 0x44
   1490c:	bne	146a0 <dcngettext@plt+0x36b0>
   14910:	ldr	r2, [sp, #48]	; 0x30
   14914:	eor	r3, r3, #1
   14918:	add	r9, r9, #1
   1491c:	and	r3, r3, r2
   14920:	uxtb	r3, r3
   14924:	cmp	r3, #0
   14928:	beq	14710 <dcngettext@plt+0x3720>
   1492c:	cmp	sl, r4
   14930:	movhi	r3, #39	; 0x27
   14934:	strbhi	r3, [r8, r4]
   14938:	add	r3, r4, #1
   1493c:	add	r4, r4, #2
   14940:	cmp	sl, r3
   14944:	movhi	r2, #39	; 0x27
   14948:	strbhi	r2, [r8, r3]
   1494c:	mov	r3, #0
   14950:	str	r3, [sp, #48]	; 0x30
   14954:	b	14710 <dcngettext@plt+0x3720>
   14958:	mov	r3, #118	; 0x76
   1495c:	b	14834 <dcngettext@plt+0x3844>
   14960:	mov	r3, #116	; 0x74
   14964:	ldr	r2, [sp, #44]	; 0x2c
   14968:	cmp	fp, #2
   1496c:	movne	r2, #0
   14970:	andeq	r2, r2, #1
   14974:	cmp	r2, #0
   14978:	beq	14834 <dcngettext@plt+0x3844>
   1497c:	mov	fp, r8
   14980:	mov	r8, #2
   14984:	ldr	r3, [sp, #40]	; 0x28
   14988:	cmp	r3, #0
   1498c:	movne	r8, #4
   14990:	mov	lr, #0
   14994:	mov	r0, fp
   14998:	ldr	r2, [sp, #32]
   1499c:	ldr	r3, [sp, #156]	; 0x9c
   149a0:	ldr	r1, [sp, #164]	; 0xa4
   149a4:	bic	ip, r3, #2
   149a8:	ldr	r3, [sp, #28]
   149ac:	stm	sp, {r8, ip, lr}
   149b0:	ldr	ip, [sp, #168]	; 0xa8
   149b4:	str	r1, [sp, #12]
   149b8:	mov	r1, sl
   149bc:	str	ip, [sp, #16]
   149c0:	bl	140d8 <dcngettext@plt+0x30e8>
   149c4:	mov	r4, r0
   149c8:	mov	r0, r4
   149cc:	add	sp, sp, #116	; 0x74
   149d0:	ldrd	r4, [sp]
   149d4:	ldrd	r6, [sp, #8]
   149d8:	ldrd	r8, [sp, #16]
   149dc:	ldrd	sl, [sp, #24]
   149e0:	add	sp, sp, #32
   149e4:	pop	{pc}		; (ldr pc, [sp], #4)
   149e8:	mov	r5, #102	; 0x66
   149ec:	ldr	r2, [sp, #44]	; 0x2c
   149f0:	sub	r3, fp, #2
   149f4:	clz	r3, r3
   149f8:	lsr	r3, r3, #5
   149fc:	cmp	r2, #0
   14a00:	bne	1545c <dcngettext@plt+0x446c>
   14a04:	mov	r6, r2
   14a08:	b	146fc <dcngettext@plt+0x370c>
   14a0c:	mov	r5, #110	; 0x6e
   14a10:	mov	r6, #0
   14a14:	b	146a0 <dcngettext@plt+0x36b0>
   14a18:	mov	r5, #98	; 0x62
   14a1c:	b	149ec <dcngettext@plt+0x39fc>
   14a20:	mov	r5, #97	; 0x61
   14a24:	b	149ec <dcngettext@plt+0x39fc>
   14a28:	mov	r7, #0
   14a2c:	mov	r6, #0
   14a30:	b	14850 <dcngettext@plt+0x3860>
   14a34:	mov	r5, #114	; 0x72
   14a38:	b	14a10 <dcngettext@plt+0x3a20>
   14a3c:	ldr	r3, [sp, #44]	; 0x2c
   14a40:	cmp	r3, #0
   14a44:	bne	157d4 <dcngettext@plt+0x47e4>
   14a48:	mov	r7, r3
   14a4c:	ldr	r3, [sp, #48]	; 0x30
   14a50:	sub	r2, fp, #2
   14a54:	clz	r2, r2
   14a58:	lsr	r2, r2, #5
   14a5c:	eor	r3, r3, #1
   14a60:	ands	r3, r2, r3
   14a64:	beq	15478 <dcngettext@plt+0x4488>
   14a68:	cmp	sl, r4
   14a6c:	movhi	r1, #39	; 0x27
   14a70:	strbhi	r1, [r8, r4]
   14a74:	add	r1, r4, #1
   14a78:	cmp	sl, r1
   14a7c:	movhi	r0, #36	; 0x24
   14a80:	strbhi	r0, [r8, r1]
   14a84:	add	r1, r4, #2
   14a88:	cmp	sl, r1
   14a8c:	movhi	r0, #39	; 0x27
   14a90:	strbhi	r0, [r8, r1]
   14a94:	add	r1, r4, #3
   14a98:	cmp	sl, r1
   14a9c:	bls	154d0 <dcngettext@plt+0x44e0>
   14aa0:	mov	r4, r1
   14aa4:	mov	r1, #92	; 0x5c
   14aa8:	mov	r0, r4
   14aac:	str	r3, [sp, #48]	; 0x30
   14ab0:	strb	r1, [r8, r4]
   14ab4:	cmp	fp, #2
   14ab8:	add	r4, r4, #1
   14abc:	beq	15520 <dcngettext@plt+0x4530>
   14ac0:	ldr	r1, [sp, #28]
   14ac4:	add	r3, r9, #1
   14ac8:	cmp	r3, r1
   14acc:	bcs	14ae4 <dcngettext@plt+0x3af4>
   14ad0:	ldr	r1, [sp, #32]
   14ad4:	ldrb	r3, [r1, r3]
   14ad8:	sub	r3, r3, #48	; 0x30
   14adc:	cmp	r3, #9
   14ae0:	bls	15538 <dcngettext@plt+0x4548>
   14ae4:	mov	r5, #48	; 0x30
   14ae8:	ldr	r3, [sp, #40]	; 0x28
   14aec:	eor	r3, r3, #1
   14af0:	orrs	r2, r2, r3
   14af4:	mov	r3, r6
   14af8:	moveq	r6, r2
   14afc:	beq	14670 <dcngettext@plt+0x3680>
   14b00:	mov	r6, #0
   14b04:	b	14698 <dcngettext@plt+0x36a8>
   14b08:	cmp	r9, #0
   14b0c:	mov	r2, r7
   14b10:	bne	150b0 <dcngettext@plt+0x40c0>
   14b14:	mov	r6, r7
   14b18:	mov	r3, r9
   14b1c:	mov	r7, r2
   14b20:	b	14660 <dcngettext@plt+0x3670>
   14b24:	mov	r2, r7
   14b28:	mov	r6, r7
   14b2c:	mov	r3, #0
   14b30:	mov	r7, r2
   14b34:	mov	r5, #32
   14b38:	b	14660 <dcngettext@plt+0x3670>
   14b3c:	mov	r6, r7
   14b40:	b	14850 <dcngettext@plt+0x3860>
   14b44:	mov	r7, #0
   14b48:	ldr	r3, [sp, #64]	; 0x40
   14b4c:	cmp	r3, #1
   14b50:	bne	15170 <dcngettext@plt+0x4180>
   14b54:	bl	10ec4 <__ctype_b_loc@plt>
   14b58:	ldr	r2, [r0]
   14b5c:	sxth	r3, r5
   14b60:	lsl	r3, r3, #1
   14b64:	ldr	r1, [sp, #64]	; 0x40
   14b68:	ldrh	r3, [r2, r3]
   14b6c:	mov	ip, r1
   14b70:	and	r3, r3, #16384	; 0x4000
   14b74:	cmp	r3, #0
   14b78:	ldr	r3, [sp, #40]	; 0x28
   14b7c:	movne	r6, #1
   14b80:	moveq	r6, #0
   14b84:	movne	r2, #0
   14b88:	andeq	r2, r3, #1
   14b8c:	cmp	r2, #0
   14b90:	bne	154b8 <dcngettext@plt+0x44c8>
   14b94:	sub	r3, fp, #2
   14b98:	clz	r3, r3
   14b9c:	lsr	r3, r3, #5
   14ba0:	b	14660 <dcngettext@plt+0x3670>
   14ba4:	cmp	r4, #0
   14ba8:	bne	15848 <dcngettext@plt+0x4858>
   14bac:	str	r4, [sp, #40]	; 0x28
   14bb0:	cmp	sl, #0
   14bb4:	bne	15878 <dcngettext@plt+0x4888>
   14bb8:	mov	r3, #1
   14bbc:	movw	r2, #33180	; 0x819c
   14bc0:	movt	r2, #1
   14bc4:	mov	r4, r3
   14bc8:	mov	r8, #2
   14bcc:	str	r3, [sp, #36]	; 0x24
   14bd0:	str	sl, [sp, #44]	; 0x2c
   14bd4:	str	sl, [sp, #48]	; 0x30
   14bd8:	str	r3, [sp, #56]	; 0x38
   14bdc:	str	r2, [sp, #60]	; 0x3c
   14be0:	str	sl, [sp, #68]	; 0x44
   14be4:	str	sl, [sp, #72]	; 0x48
   14be8:	b	141c0 <dcngettext@plt+0x31d0>
   14bec:	ldr	r3, [sp, #32]
   14bf0:	ldrb	r5, [r3, r9]
   14bf4:	cmp	r5, #126	; 0x7e
   14bf8:	ldrls	pc, [pc, r5, lsl #2]
   14bfc:	b	14b48 <dcngettext@plt+0x3b58>
   14c00:	andeq	r4, r1, r4, lsr #28
   14c04:	andeq	r4, r1, r8, asr #22
   14c08:	andeq	r4, r1, r8, asr #22
   14c0c:	andeq	r4, r1, r8, asr #22
   14c10:	andeq	r4, r1, r8, asr #22
   14c14:	andeq	r4, r1, r8, asr #22
   14c18:	andeq	r4, r1, r8, asr #22
   14c1c:	andeq	r4, r1, ip, lsl lr
   14c20:	andeq	r4, r1, r4, lsl lr
   14c24:	andeq	r4, r1, r0, ror #18
   14c28:	andeq	r4, r1, ip, lsl #28
   14c2c:	andeq	r4, r1, r8, asr r9
   14c30:	andeq	r4, r1, r4, lsl #28
   14c34:	strdeq	r4, [r1], -ip
   14c38:	andeq	r4, r1, r8, asr #22
   14c3c:	andeq	r4, r1, r8, asr #22
   14c40:	andeq	r4, r1, r8, asr #22
   14c44:	andeq	r4, r1, r8, asr #22
   14c48:	andeq	r4, r1, r8, asr #22
   14c4c:	andeq	r4, r1, r8, asr #22
   14c50:	andeq	r4, r1, r8, asr #22
   14c54:	andeq	r4, r1, r8, asr #22
   14c58:	andeq	r4, r1, r8, asr #22
   14c5c:	andeq	r4, r1, r8, asr #22
   14c60:	andeq	r4, r1, r8, asr #22
   14c64:	andeq	r4, r1, r8, asr #22
   14c68:	andeq	r4, r1, r8, asr #22
   14c6c:	andeq	r4, r1, r8, asr #22
   14c70:	andeq	r4, r1, r8, asr #22
   14c74:	andeq	r4, r1, r8, asr #22
   14c78:	andeq	r4, r1, r8, asr #22
   14c7c:	andeq	r4, r1, r8, asr #22
   14c80:	andeq	r4, r1, r8, ror lr
   14c84:	andeq	r4, r1, r8, asr lr
   14c88:	andeq	r4, r1, r8, asr lr
   14c8c:	andeq	r4, r1, r8, asr #28
   14c90:	andeq	r4, r1, r8, asr lr
   14c94:	muleq	r1, r4, fp
   14c98:	andeq	r4, r1, r8, asr lr
   14c9c:	andeq	r4, r1, r8, lsl #17
   14ca0:	andeq	r4, r1, r8, asr lr
   14ca4:	andeq	r4, r1, r8, asr lr
   14ca8:	andeq	r4, r1, r8, asr lr
   14cac:	muleq	r1, r4, fp
   14cb0:	muleq	r1, r4, fp
   14cb4:	muleq	r1, r4, fp
   14cb8:	muleq	r1, r4, fp
   14cbc:	muleq	r1, r4, fp
   14cc0:	muleq	r1, r4, fp
   14cc4:	muleq	r1, r4, fp
   14cc8:	muleq	r1, r4, fp
   14ccc:	muleq	r1, r4, fp
   14cd0:	muleq	r1, r4, fp
   14cd4:	muleq	r1, r4, fp
   14cd8:	muleq	r1, r4, fp
   14cdc:	muleq	r1, r4, fp
   14ce0:	muleq	r1, r4, fp
   14ce4:	muleq	r1, r4, fp
   14ce8:	muleq	r1, r4, fp
   14cec:	andeq	r4, r1, r8, asr lr
   14cf0:	andeq	r4, r1, r8, asr lr
   14cf4:	andeq	r4, r1, r8, asr lr
   14cf8:	andeq	r4, r1, r8, asr lr
   14cfc:	andeq	r4, r1, ip, asr r8
   14d00:	andeq	r4, r1, r8, asr #22
   14d04:	muleq	r1, r4, fp
   14d08:	muleq	r1, r4, fp
   14d0c:	muleq	r1, r4, fp
   14d10:	muleq	r1, r4, fp
   14d14:	muleq	r1, r4, fp
   14d18:	muleq	r1, r4, fp
   14d1c:	muleq	r1, r4, fp
   14d20:	muleq	r1, r4, fp
   14d24:	muleq	r1, r4, fp
   14d28:	muleq	r1, r4, fp
   14d2c:	muleq	r1, r4, fp
   14d30:	muleq	r1, r4, fp
   14d34:	muleq	r1, r4, fp
   14d38:	muleq	r1, r4, fp
   14d3c:	muleq	r1, r4, fp
   14d40:	muleq	r1, r4, fp
   14d44:	muleq	r1, r4, fp
   14d48:	muleq	r1, r4, fp
   14d4c:	muleq	r1, r4, fp
   14d50:	muleq	r1, r4, fp
   14d54:	muleq	r1, r4, fp
   14d58:	muleq	r1, r4, fp
   14d5c:	muleq	r1, r4, fp
   14d60:	muleq	r1, r4, fp
   14d64:	muleq	r1, r4, fp
   14d68:	muleq	r1, r4, fp
   14d6c:	andeq	r4, r1, r8, asr lr
   14d70:	andeq	r4, r1, r4, lsl #16
   14d74:	muleq	r1, r4, fp
   14d78:	andeq	r4, r1, r8, asr lr
   14d7c:	muleq	r1, r4, fp
   14d80:	andeq	r4, r1, r8, asr lr
   14d84:	muleq	r1, r4, fp
   14d88:	muleq	r1, r4, fp
   14d8c:	muleq	r1, r4, fp
   14d90:	muleq	r1, r4, fp
   14d94:	muleq	r1, r4, fp
   14d98:	muleq	r1, r4, fp
   14d9c:	muleq	r1, r4, fp
   14da0:	muleq	r1, r4, fp
   14da4:	muleq	r1, r4, fp
   14da8:	muleq	r1, r4, fp
   14dac:	muleq	r1, r4, fp
   14db0:	muleq	r1, r4, fp
   14db4:	muleq	r1, r4, fp
   14db8:	muleq	r1, r4, fp
   14dbc:	muleq	r1, r4, fp
   14dc0:	muleq	r1, r4, fp
   14dc4:	muleq	r1, r4, fp
   14dc8:	muleq	r1, r4, fp
   14dcc:	muleq	r1, r4, fp
   14dd0:	muleq	r1, r4, fp
   14dd4:	muleq	r1, r4, fp
   14dd8:	muleq	r1, r4, fp
   14ddc:	muleq	r1, r4, fp
   14de0:	muleq	r1, r4, fp
   14de4:	muleq	r1, r4, fp
   14de8:	muleq	r1, r4, fp
   14dec:	andeq	r4, r1, r8, lsr #12
   14df0:	andeq	r4, r1, r8, asr lr
   14df4:	andeq	r4, r1, r8, lsr #12
   14df8:	andeq	r4, r1, r8, asr #28
   14dfc:	mov	r3, #114	; 0x72
   14e00:	b	14964 <dcngettext@plt+0x3974>
   14e04:	mov	r3, #102	; 0x66
   14e08:	b	14834 <dcngettext@plt+0x3844>
   14e0c:	mov	r3, #110	; 0x6e
   14e10:	b	14964 <dcngettext@plt+0x3974>
   14e14:	mov	r3, #98	; 0x62
   14e18:	b	14834 <dcngettext@plt+0x3844>
   14e1c:	mov	r3, #97	; 0x61
   14e20:	b	14834 <dcngettext@plt+0x3844>
   14e24:	ldr	r3, [sp, #40]	; 0x28
   14e28:	cmp	r3, #0
   14e2c:	bne	14a3c <dcngettext@plt+0x3a4c>
   14e30:	ldr	r3, [sp, #156]	; 0x9c
   14e34:	tst	r3, #1
   14e38:	addne	r9, r9, #1
   14e3c:	bne	141d0 <dcngettext@plt+0x31e0>
   14e40:	ldr	r7, [sp, #40]	; 0x28
   14e44:	b	14840 <dcngettext@plt+0x3850>
   14e48:	sub	r3, fp, #2
   14e4c:	clz	r3, r3
   14e50:	lsr	r3, r3, #5
   14e54:	b	14654 <dcngettext@plt+0x3664>
   14e58:	sub	r3, fp, #2
   14e5c:	mov	r6, #0
   14e60:	clz	r3, r3
   14e64:	lsr	r3, r3, #5
   14e68:	ldr	r2, [sp, #44]	; 0x2c
   14e6c:	tst	r2, r3
   14e70:	beq	14660 <dcngettext@plt+0x3670>
   14e74:	b	1497c <dcngettext@plt+0x398c>
   14e78:	sub	r3, fp, #2
   14e7c:	clz	r3, r3
   14e80:	lsr	r3, r3, #5
   14e84:	b	14e68 <dcngettext@plt+0x3e78>
   14e88:	ldr	r3, [sp, #52]	; 0x34
   14e8c:	ldrb	r5, [r3]
   14e90:	cmp	r5, #126	; 0x7e
   14e94:	ldrls	pc, [pc, r5, lsl #2]
   14e98:	b	14b44 <dcngettext@plt+0x3b54>
   14e9c:	andeq	r4, r1, ip, lsr sl
   14ea0:	andeq	r4, r1, r4, asr #22
   14ea4:	andeq	r4, r1, r4, asr #22
   14ea8:	andeq	r4, r1, r4, asr #22
   14eac:	andeq	r4, r1, r4, asr #22
   14eb0:	andeq	r4, r1, r4, asr #22
   14eb4:	andeq	r4, r1, r4, asr #22
   14eb8:	andeq	r4, r1, r0, lsr #20
   14ebc:	andeq	r4, r1, r8, lsl sl
   14ec0:	ldrdeq	r5, [r1], -r4
   14ec4:	andeq	r4, r1, ip, lsl #20
   14ec8:	andeq	r5, r1, r8, asr #1
   14ecc:	andeq	r4, r1, r8, ror #19
   14ed0:	andeq	r4, r1, r4, lsr sl
   14ed4:	andeq	r4, r1, r4, asr #22
   14ed8:	andeq	r4, r1, r4, asr #22
   14edc:	andeq	r4, r1, r4, asr #22
   14ee0:	andeq	r4, r1, r4, asr #22
   14ee4:	andeq	r4, r1, r4, asr #22
   14ee8:	andeq	r4, r1, r4, asr #22
   14eec:	andeq	r4, r1, r4, asr #22
   14ef0:	andeq	r4, r1, r4, asr #22
   14ef4:	andeq	r4, r1, r4, asr #22
   14ef8:	andeq	r4, r1, r4, asr #22
   14efc:	andeq	r4, r1, r4, asr #22
   14f00:	andeq	r4, r1, r4, asr #22
   14f04:	andeq	r4, r1, r4, asr #22
   14f08:	andeq	r4, r1, r4, asr #22
   14f0c:	andeq	r4, r1, r4, asr #22
   14f10:	andeq	r4, r1, r4, asr #22
   14f14:	andeq	r4, r1, r4, asr #22
   14f18:	andeq	r4, r1, r4, asr #22
   14f1c:	andeq	r5, r1, r0, asr #1
   14f20:	andeq	r4, r1, r8, lsr #20
   14f24:	andeq	r4, r1, r8, lsr #20
   14f28:	andeq	r5, r1, r4, lsr #1
   14f2c:	andeq	r4, r1, r8, lsr #20
   14f30:	muleq	r1, r8, r0
   14f34:	andeq	r4, r1, r8, lsr #20
   14f38:	andeq	r4, r1, r4, lsl #17
   14f3c:	andeq	r4, r1, r8, lsr #20
   14f40:	andeq	r4, r1, r8, lsr #20
   14f44:	andeq	r4, r1, r8, lsr #20
   14f48:	muleq	r1, r8, r0
   14f4c:	muleq	r1, r8, r0
   14f50:	muleq	r1, r8, r0
   14f54:	muleq	r1, r8, r0
   14f58:	muleq	r1, r8, r0
   14f5c:	muleq	r1, r8, r0
   14f60:	muleq	r1, r8, r0
   14f64:	muleq	r1, r8, r0
   14f68:	muleq	r1, r8, r0
   14f6c:	muleq	r1, r8, r0
   14f70:	muleq	r1, r8, r0
   14f74:	muleq	r1, r8, r0
   14f78:	muleq	r1, r8, r0
   14f7c:	muleq	r1, r8, r0
   14f80:	muleq	r1, r8, r0
   14f84:	muleq	r1, r8, r0
   14f88:	andeq	r4, r1, r8, lsr #20
   14f8c:	andeq	r4, r1, r8, lsr #20
   14f90:	andeq	r4, r1, r8, lsr #20
   14f94:	andeq	r4, r1, r8, lsr #20
   14f98:	andeq	r4, r1, r8, asr r8
   14f9c:	andeq	r4, r1, r4, asr #22
   14fa0:	muleq	r1, r8, r0
   14fa4:	muleq	r1, r8, r0
   14fa8:	muleq	r1, r8, r0
   14fac:	muleq	r1, r8, r0
   14fb0:	muleq	r1, r8, r0
   14fb4:	muleq	r1, r8, r0
   14fb8:	muleq	r1, r8, r0
   14fbc:	muleq	r1, r8, r0
   14fc0:	muleq	r1, r8, r0
   14fc4:	muleq	r1, r8, r0
   14fc8:	muleq	r1, r8, r0
   14fcc:	muleq	r1, r8, r0
   14fd0:	muleq	r1, r8, r0
   14fd4:	muleq	r1, r8, r0
   14fd8:	muleq	r1, r8, r0
   14fdc:	muleq	r1, r8, r0
   14fe0:	muleq	r1, r8, r0
   14fe4:	muleq	r1, r8, r0
   14fe8:	muleq	r1, r8, r0
   14fec:	muleq	r1, r8, r0
   14ff0:	muleq	r1, r8, r0
   14ff4:	muleq	r1, r8, r0
   14ff8:	muleq	r1, r8, r0
   14ffc:	muleq	r1, r8, r0
   15000:	muleq	r1, r8, r0
   15004:	muleq	r1, r8, r0
   15008:	andeq	r4, r1, r8, lsr #20
   1500c:	andeq	r4, r1, r0, lsl #16
   15010:	muleq	r1, r8, r0
   15014:	andeq	r4, r1, r8, lsr #20
   15018:	muleq	r1, r8, r0
   1501c:	andeq	r4, r1, r8, lsr #20
   15020:	muleq	r1, r8, r0
   15024:	muleq	r1, r8, r0
   15028:	muleq	r1, r8, r0
   1502c:	muleq	r1, r8, r0
   15030:	muleq	r1, r8, r0
   15034:	muleq	r1, r8, r0
   15038:	muleq	r1, r8, r0
   1503c:	muleq	r1, r8, r0
   15040:	muleq	r1, r8, r0
   15044:	muleq	r1, r8, r0
   15048:	muleq	r1, r8, r0
   1504c:	muleq	r1, r8, r0
   15050:	muleq	r1, r8, r0
   15054:	muleq	r1, r8, r0
   15058:	muleq	r1, r8, r0
   1505c:	muleq	r1, r8, r0
   15060:	muleq	r1, r8, r0
   15064:	muleq	r1, r8, r0
   15068:	muleq	r1, r8, r0
   1506c:	muleq	r1, r8, r0
   15070:	muleq	r1, r8, r0
   15074:	muleq	r1, r8, r0
   15078:	muleq	r1, r8, r0
   1507c:	muleq	r1, r8, r0
   15080:	muleq	r1, r8, r0
   15084:	muleq	r1, r8, r0
   15088:	andeq	r4, r1, r4, lsr #12
   1508c:	andeq	r4, r1, r8, lsr #20
   15090:	andeq	r4, r1, r4, lsr #12
   15094:	andeq	r5, r1, r4, lsr #1
   15098:	mov	r6, r7
   1509c:	mov	r7, #0
   150a0:	b	14850 <dcngettext@plt+0x3860>
   150a4:	cmp	r9, #0
   150a8:	mov	r2, #0
   150ac:	beq	14b14 <dcngettext@plt+0x3b24>
   150b0:	mov	r6, #0
   150b4:	mov	r7, r2
   150b8:	mov	r3, r6
   150bc:	b	14670 <dcngettext@plt+0x3680>
   150c0:	mov	r2, #0
   150c4:	b	14b28 <dcngettext@plt+0x3b38>
   150c8:	mov	r7, #0
   150cc:	mov	r3, #118	; 0x76
   150d0:	b	14834 <dcngettext@plt+0x3844>
   150d4:	mov	r7, #0
   150d8:	mov	r3, #116	; 0x74
   150dc:	b	14964 <dcngettext@plt+0x3974>
   150e0:	ldr	r3, [sp, #44]	; 0x2c
   150e4:	b	14698 <dcngettext@plt+0x36a8>
   150e8:	ldr	r3, [sp, #44]	; 0x2c
   150ec:	cmp	r3, #0
   150f0:	bne	15560 <dcngettext@plt+0x4570>
   150f4:	add	r9, r9, #1
   150f8:	mov	r6, #0
   150fc:	ldr	r3, [sp, #48]	; 0x30
   15100:	mov	r5, #92	; 0x5c
   15104:	b	14924 <dcngettext@plt+0x3934>
   15108:	ldr	r3, [sp, #32]
   1510c:	ldrb	r2, [r3, #1]
   15110:	adds	r2, r2, #0
   15114:	movne	r2, #1
   15118:	b	14640 <dcngettext@plt+0x3650>
   1511c:	ldr	r3, [sp, #156]	; 0x9c
   15120:	ands	r3, r3, #4
   15124:	beq	1514c <dcngettext@plt+0x415c>
   15128:	ldr	r2, [sp, #28]
   1512c:	add	r3, r9, #2
   15130:	cmp	r3, r2
   15134:	bcs	15148 <dcngettext@plt+0x4158>
   15138:	ldr	r2, [sp, #52]	; 0x34
   1513c:	ldrb	r5, [r2, #1]
   15140:	cmp	r5, #63	; 0x3f
   15144:	beq	155c4 <dcngettext@plt+0x45d4>
   15148:	mov	r3, #0
   1514c:	mov	r5, #63	; 0x3f
   15150:	mov	r6, r3
   15154:	b	14660 <dcngettext@plt+0x3670>
   15158:	ldr	r3, [sp, #44]	; 0x2c
   1515c:	cmp	r3, #0
   15160:	bne	15560 <dcngettext@plt+0x4570>
   15164:	mov	r6, r3
   15168:	mov	r5, #63	; 0x3f
   1516c:	b	14698 <dcngettext@plt+0x36a8>
   15170:	ldr	r1, [sp, #28]
   15174:	mov	r2, #0
   15178:	mov	r3, #0
   1517c:	strd	r2, [sp, #104]	; 0x68
   15180:	cmn	r1, #1
   15184:	bne	15194 <dcngettext@plt+0x41a4>
   15188:	ldr	r0, [sp, #32]
   1518c:	bl	10edc <strlen@plt>
   15190:	str	r0, [sp, #28]
   15194:	str	r8, [sp, #76]	; 0x4c
   15198:	mov	r3, #0
   1519c:	str	sl, [sp, #80]	; 0x50
   151a0:	ldr	sl, [sp, #32]
   151a4:	str	r5, [sp, #84]	; 0x54
   151a8:	mov	r5, r3
   151ac:	ldr	r8, [sp, #44]	; 0x2c
   151b0:	str	r7, [sp, #88]	; 0x58
   151b4:	str	r4, [sp, #92]	; 0x5c
   151b8:	ldr	r2, [sp, #28]
   151bc:	add	r4, r9, r5
   151c0:	add	r3, sp, #104	; 0x68
   151c4:	add	r7, sl, r4
   151c8:	add	r0, sp, #100	; 0x64
   151cc:	mov	r1, r7
   151d0:	sub	r2, r2, r4
   151d4:	bl	16f90 <dcngettext@plt+0x5fa0>
   151d8:	subs	r1, r0, #0
   151dc:	beq	15228 <dcngettext@plt+0x4238>
   151e0:	cmn	r1, #1
   151e4:	beq	155a0 <dcngettext@plt+0x45b0>
   151e8:	cmn	r1, #2
   151ec:	beq	156c0 <dcngettext@plt+0x46d0>
   151f0:	cmp	fp, #2
   151f4:	movne	r3, #0
   151f8:	andeq	r3, r8, #1
   151fc:	cmp	r3, #0
   15200:	bne	1538c <dcngettext@plt+0x439c>
   15204:	ldr	r0, [sp, #100]	; 0x64
   15208:	add	r5, r5, r1
   1520c:	bl	10e28 <iswprint@plt>
   15210:	cmp	r0, #0
   15214:	add	r0, sp, #104	; 0x68
   15218:	moveq	r6, #0
   1521c:	bl	10dd4 <mbsinit@plt>
   15220:	cmp	r0, #0
   15224:	beq	151b8 <dcngettext@plt+0x41c8>
   15228:	ldr	r3, [sp, #40]	; 0x28
   1522c:	mov	ip, r5
   15230:	eor	r2, r6, #1
   15234:	ldr	r8, [sp, #76]	; 0x4c
   15238:	ldr	sl, [sp, #80]	; 0x50
   1523c:	and	r2, r2, r3
   15240:	ldr	r5, [sp, #84]	; 0x54
   15244:	ldr	r7, [sp, #88]	; 0x58
   15248:	ldr	r4, [sp, #92]	; 0x5c
   1524c:	cmp	ip, #1
   15250:	bls	14b8c <dcngettext@plt+0x3b9c>
   15254:	add	r1, ip, r9
   15258:	mov	r0, #39	; 0x27
   1525c:	ldr	lr, [sp, #52]	; 0x34
   15260:	mov	ip, #0
   15264:	str	r6, [sp, #52]	; 0x34
   15268:	ldr	r6, [sp, #48]	; 0x30
   1526c:	b	15328 <dcngettext@plt+0x4338>
   15270:	ldr	ip, [sp, #44]	; 0x2c
   15274:	sub	r3, fp, #2
   15278:	clz	r3, r3
   1527c:	lsr	r3, r3, #5
   15280:	cmp	ip, #0
   15284:	bne	15498 <dcngettext@plt+0x44a8>
   15288:	eor	ip, r6, #1
   1528c:	ands	r3, r3, ip
   15290:	beq	152c0 <dcngettext@plt+0x42d0>
   15294:	cmp	sl, r4
   15298:	add	ip, r4, #1
   1529c:	strbhi	r0, [r8, r4]
   152a0:	cmp	sl, ip
   152a4:	movhi	r6, #36	; 0x24
   152a8:	strbhi	r6, [r8, ip]
   152ac:	add	ip, r4, #2
   152b0:	mov	r6, r3
   152b4:	cmp	sl, ip
   152b8:	add	r4, r4, #3
   152bc:	strbhi	r0, [r8, ip]
   152c0:	cmp	sl, r4
   152c4:	movhi	r3, #92	; 0x5c
   152c8:	strbhi	r3, [r8, r4]
   152cc:	add	r3, r4, #1
   152d0:	cmp	sl, r3
   152d4:	bls	152e4 <dcngettext@plt+0x42f4>
   152d8:	lsr	ip, r5, #6
   152dc:	add	ip, ip, #48	; 0x30
   152e0:	strb	ip, [r8, r3]
   152e4:	add	r3, r4, #2
   152e8:	cmp	sl, r3
   152ec:	bls	152fc <dcngettext@plt+0x430c>
   152f0:	ubfx	ip, r5, #3, #3
   152f4:	add	ip, ip, #48	; 0x30
   152f8:	strb	ip, [r8, r3]
   152fc:	add	r9, r9, #1
   15300:	and	r5, r5, #7
   15304:	cmp	r9, r1
   15308:	add	r5, r5, #48	; 0x30
   1530c:	add	r4, r4, #3
   15310:	bcs	154c4 <dcngettext@plt+0x44d4>
   15314:	mov	ip, r2
   15318:	cmp	sl, r4
   1531c:	strbhi	r5, [r8, r4]
   15320:	add	r4, r4, #1
   15324:	ldrb	r5, [lr, #1]!
   15328:	cmp	r2, #0
   1532c:	bne	15270 <dcngettext@plt+0x4280>
   15330:	eor	r3, ip, #1
   15334:	cmp	r7, #0
   15338:	and	r3, r3, r6
   1533c:	uxtb	r3, r3
   15340:	beq	15354 <dcngettext@plt+0x4364>
   15344:	cmp	sl, r4
   15348:	movhi	r7, #92	; 0x5c
   1534c:	strbhi	r7, [r8, r4]
   15350:	add	r4, r4, #1
   15354:	add	r9, r9, #1
   15358:	cmp	r9, r1
   1535c:	bcs	154ac <dcngettext@plt+0x44bc>
   15360:	cmp	r3, #0
   15364:	beq	154e4 <dcngettext@plt+0x44f4>
   15368:	cmp	sl, r4
   1536c:	add	r3, r4, #1
   15370:	mov	r7, #0
   15374:	strbhi	r0, [r8, r4]
   15378:	cmp	sl, r3
   1537c:	add	r4, r4, #2
   15380:	mov	r6, r7
   15384:	strbhi	r0, [r8, r3]
   15388:	b	15318 <dcngettext@plt+0x4328>
   1538c:	cmp	r1, #1
   15390:	beq	15204 <dcngettext@plt+0x4214>
   15394:	add	r2, r4, #1
   15398:	add	r3, sl, r1
   1539c:	add	r2, sl, r2
   153a0:	add	r4, r3, r4
   153a4:	ldrb	r3, [r2], #1
   153a8:	sub	r3, r3, #91	; 0x5b
   153ac:	cmp	r3, #33	; 0x21
   153b0:	ldrls	pc, [pc, r3, lsl #2]
   153b4:	b	15440 <dcngettext@plt+0x4450>
   153b8:	andeq	r5, r1, ip, asr #8
   153bc:	andeq	r5, r1, ip, asr #8
   153c0:	andeq	r5, r1, r0, asr #8
   153c4:	andeq	r5, r1, ip, asr #8
   153c8:	andeq	r5, r1, r0, asr #8
   153cc:	andeq	r5, r1, ip, asr #8
   153d0:	andeq	r5, r1, r0, asr #8
   153d4:	andeq	r5, r1, r0, asr #8
   153d8:	andeq	r5, r1, r0, asr #8
   153dc:	andeq	r5, r1, r0, asr #8
   153e0:	andeq	r5, r1, r0, asr #8
   153e4:	andeq	r5, r1, r0, asr #8
   153e8:	andeq	r5, r1, r0, asr #8
   153ec:	andeq	r5, r1, r0, asr #8
   153f0:	andeq	r5, r1, r0, asr #8
   153f4:	andeq	r5, r1, r0, asr #8
   153f8:	andeq	r5, r1, r0, asr #8
   153fc:	andeq	r5, r1, r0, asr #8
   15400:	andeq	r5, r1, r0, asr #8
   15404:	andeq	r5, r1, r0, asr #8
   15408:	andeq	r5, r1, r0, asr #8
   1540c:	andeq	r5, r1, r0, asr #8
   15410:	andeq	r5, r1, r0, asr #8
   15414:	andeq	r5, r1, r0, asr #8
   15418:	andeq	r5, r1, r0, asr #8
   1541c:	andeq	r5, r1, r0, asr #8
   15420:	andeq	r5, r1, r0, asr #8
   15424:	andeq	r5, r1, r0, asr #8
   15428:	andeq	r5, r1, r0, asr #8
   1542c:	andeq	r5, r1, r0, asr #8
   15430:	andeq	r5, r1, r0, asr #8
   15434:	andeq	r5, r1, r0, asr #8
   15438:	andeq	r5, r1, r0, asr #8
   1543c:	andeq	r5, r1, ip, asr #8
   15440:	cmp	r4, r2
   15444:	bne	153a4 <dcngettext@plt+0x43b4>
   15448:	b	15204 <dcngettext@plt+0x4214>
   1544c:	mov	r8, #2
   15450:	ldr	fp, [sp, #76]	; 0x4c
   15454:	ldr	sl, [sp, #80]	; 0x50
   15458:	b	14984 <dcngettext@plt+0x3994>
   1545c:	ldr	r2, [sp, #40]	; 0x28
   15460:	str	fp, [sp, #152]	; 0x98
   15464:	mov	fp, r8
   15468:	ldr	r8, [sp, #152]	; 0x98
   1546c:	and	r2, r2, r3
   15470:	str	r2, [sp, #40]	; 0x28
   15474:	b	14984 <dcngettext@plt+0x3994>
   15478:	cmp	sl, r4
   1547c:	movls	r0, r4
   15480:	bls	14ab4 <dcngettext@plt+0x3ac4>
   15484:	ldr	r3, [sp, #48]	; 0x30
   15488:	b	14aa4 <dcngettext@plt+0x3ab4>
   1548c:	str	sl, [sp, #72]	; 0x48
   15490:	ldr	sl, [sp, #44]	; 0x2c
   15494:	b	148f4 <dcngettext@plt+0x3904>
   15498:	str	r3, [sp, #40]	; 0x28
   1549c:	str	fp, [sp, #152]	; 0x98
   154a0:	mov	fp, r8
   154a4:	ldr	r8, [sp, #152]	; 0x98
   154a8:	b	14984 <dcngettext@plt+0x3994>
   154ac:	str	r6, [sp, #48]	; 0x30
   154b0:	ldr	r6, [sp, #52]	; 0x34
   154b4:	b	14924 <dcngettext@plt+0x3934>
   154b8:	mov	r6, #0
   154bc:	ldr	r2, [sp, #40]	; 0x28
   154c0:	b	15254 <dcngettext@plt+0x4264>
   154c4:	str	r6, [sp, #48]	; 0x30
   154c8:	ldr	r6, [sp, #52]	; 0x34
   154cc:	b	14710 <dcngettext@plt+0x3720>
   154d0:	add	r4, r4, #4
   154d4:	mov	r6, #0
   154d8:	str	r3, [sp, #48]	; 0x30
   154dc:	mov	r5, #48	; 0x30
   154e0:	b	14698 <dcngettext@plt+0x36a8>
   154e4:	mov	r7, r3
   154e8:	b	15318 <dcngettext@plt+0x4328>
   154ec:	mov	r3, #1
   154f0:	movw	r2, #33160	; 0x8188
   154f4:	movt	r2, #1
   154f8:	mov	r4, r3
   154fc:	str	r3, [sp, #36]	; 0x24
   15500:	str	r3, [sp, #40]	; 0x28
   15504:	str	sl, [sp, #44]	; 0x2c
   15508:	str	sl, [sp, #48]	; 0x30
   1550c:	str	r3, [sp, #56]	; 0x38
   15510:	str	r2, [sp, #60]	; 0x3c
   15514:	str	sl, [sp, #68]	; 0x44
   15518:	str	sl, [sp, #72]	; 0x48
   1551c:	b	141c0 <dcngettext@plt+0x31d0>
   15520:	mov	r3, r6
   15524:	mov	r5, #48	; 0x30
   15528:	mov	r6, #0
   1552c:	b	14698 <dcngettext@plt+0x36a8>
   15530:	mov	r5, r3
   15534:	b	14a10 <dcngettext@plt+0x3a20>
   15538:	cmp	sl, r4
   1553c:	mov	r5, #48	; 0x30
   15540:	movhi	r3, #48	; 0x30
   15544:	strbhi	r3, [r8, r4]
   15548:	add	r3, r0, #2
   1554c:	add	r4, r0, #3
   15550:	cmp	sl, r3
   15554:	movhi	r1, #48	; 0x30
   15558:	strbhi	r1, [r8, r3]
   1555c:	b	14ae8 <dcngettext@plt+0x3af8>
   15560:	str	fp, [sp, #152]	; 0x98
   15564:	mov	fp, r8
   15568:	ldr	r8, [sp, #152]	; 0x98
   1556c:	b	14984 <dcngettext@plt+0x3994>
   15570:	ldr	r3, [sp, #164]	; 0xa4
   15574:	ldrb	r3, [r3]
   15578:	cmp	r3, #0
   1557c:	beq	14190 <dcngettext@plt+0x31a0>
   15580:	ldr	r2, [sp, #164]	; 0xa4
   15584:	cmp	sl, r4
   15588:	strbhi	r3, [fp, r4]
   1558c:	add	r4, r4, #1
   15590:	ldrb	r3, [r2, #1]!
   15594:	cmp	r3, #0
   15598:	bne	15584 <dcngettext@plt+0x4594>
   1559c:	b	14190 <dcngettext@plt+0x31a0>
   155a0:	mov	ip, r5
   155a4:	mov	r6, #0
   155a8:	ldr	r2, [sp, #40]	; 0x28
   155ac:	ldr	r8, [sp, #76]	; 0x4c
   155b0:	ldr	sl, [sp, #80]	; 0x50
   155b4:	ldr	r5, [sp, #84]	; 0x54
   155b8:	ldr	r7, [sp, #88]	; 0x58
   155bc:	ldr	r4, [sp, #92]	; 0x5c
   155c0:	b	1524c <dcngettext@plt+0x425c>
   155c4:	ldr	r2, [sp, #32]
   155c8:	ldrb	r1, [r2, r3]
   155cc:	sub	r2, r1, #33	; 0x21
   155d0:	cmp	r2, #29
   155d4:	ldrls	pc, [pc, r2, lsl #2]
   155d8:	b	156b4 <dcngettext@plt+0x46c4>
   155dc:	andeq	r5, r1, r4, asr r6
   155e0:			; <UNDEFINED> instruction: 0x000156b4
   155e4:			; <UNDEFINED> instruction: 0x000156b4
   155e8:			; <UNDEFINED> instruction: 0x000156b4
   155ec:			; <UNDEFINED> instruction: 0x000156b4
   155f0:			; <UNDEFINED> instruction: 0x000156b4
   155f4:	andeq	r5, r1, r4, asr r6
   155f8:	andeq	r5, r1, r4, asr r6
   155fc:	andeq	r5, r1, r4, asr r6
   15600:			; <UNDEFINED> instruction: 0x000156b4
   15604:			; <UNDEFINED> instruction: 0x000156b4
   15608:			; <UNDEFINED> instruction: 0x000156b4
   1560c:	andeq	r5, r1, r4, asr r6
   15610:			; <UNDEFINED> instruction: 0x000156b4
   15614:	andeq	r5, r1, r4, asr r6
   15618:			; <UNDEFINED> instruction: 0x000156b4
   1561c:			; <UNDEFINED> instruction: 0x000156b4
   15620:			; <UNDEFINED> instruction: 0x000156b4
   15624:			; <UNDEFINED> instruction: 0x000156b4
   15628:			; <UNDEFINED> instruction: 0x000156b4
   1562c:			; <UNDEFINED> instruction: 0x000156b4
   15630:			; <UNDEFINED> instruction: 0x000156b4
   15634:			; <UNDEFINED> instruction: 0x000156b4
   15638:			; <UNDEFINED> instruction: 0x000156b4
   1563c:			; <UNDEFINED> instruction: 0x000156b4
   15640:			; <UNDEFINED> instruction: 0x000156b4
   15644:			; <UNDEFINED> instruction: 0x000156b4
   15648:	andeq	r5, r1, r4, asr r6
   1564c:	andeq	r5, r1, r4, asr r6
   15650:	andeq	r5, r1, r4, asr r6
   15654:	ldr	r2, [sp, #44]	; 0x2c
   15658:	cmp	r2, #0
   1565c:	bne	157b8 <dcngettext@plt+0x47c8>
   15660:	cmp	sl, r4
   15664:	mov	r5, r1
   15668:	movhi	r2, #63	; 0x3f
   1566c:	mov	r9, r3
   15670:	strbhi	r2, [r8, r4]
   15674:	add	r2, r4, #1
   15678:	cmp	sl, r2
   1567c:	movhi	r0, #34	; 0x22
   15680:	strbhi	r0, [r8, r2]
   15684:	add	r2, r4, #2
   15688:	cmp	sl, r2
   1568c:	movhi	r0, #34	; 0x22
   15690:	strbhi	r0, [r8, r2]
   15694:	add	r2, r4, #3
   15698:	add	r4, r4, #4
   1569c:	cmp	sl, r2
   156a0:	movhi	r0, #63	; 0x3f
   156a4:	strbhi	r0, [r8, r2]
   156a8:	mov	r2, #0
   156ac:	mov	r6, r2
   156b0:	b	14ae8 <dcngettext@plt+0x3af8>
   156b4:	mov	r3, #0
   156b8:	mov	r6, r3
   156bc:	b	14660 <dcngettext@plt+0x3670>
   156c0:	ldr	r0, [sp, #28]
   156c4:	mov	r1, r4
   156c8:	mov	r2, r7
   156cc:	mov	r3, r5
   156d0:	mov	ip, r5
   156d4:	ldr	r8, [sp, #76]	; 0x4c
   156d8:	ldr	sl, [sp, #80]	; 0x50
   156dc:	cmp	r1, r0
   156e0:	ldr	r5, [sp, #84]	; 0x54
   156e4:	ldr	r7, [sp, #88]	; 0x58
   156e8:	ldr	r4, [sp, #92]	; 0x5c
   156ec:	bcs	15720 <dcngettext@plt+0x4730>
   156f0:	ldrb	r6, [r2]
   156f4:	cmp	r6, #0
   156f8:	bne	1570c <dcngettext@plt+0x471c>
   156fc:	b	15840 <dcngettext@plt+0x4850>
   15700:	ldrb	r6, [r2, #1]!
   15704:	cmp	r6, #0
   15708:	beq	157c8 <dcngettext@plt+0x47d8>
   1570c:	add	r3, r3, #1
   15710:	add	r1, r9, r3
   15714:	cmp	r1, r0
   15718:	bcc	15700 <dcngettext@plt+0x4710>
   1571c:	mov	ip, r3
   15720:	mov	r6, #0
   15724:	ldr	r2, [sp, #40]	; 0x28
   15728:	b	1524c <dcngettext@plt+0x425c>
   1572c:	mov	r3, #1
   15730:	mov	r2, #0
   15734:	mov	r4, r2
   15738:	str	r3, [sp, #36]	; 0x24
   1573c:	str	r3, [sp, #40]	; 0x28
   15740:	str	r3, [sp, #44]	; 0x2c
   15744:	str	r2, [sp, #48]	; 0x30
   15748:	str	r3, [sp, #56]	; 0x38
   1574c:	movw	r3, #33160	; 0x8188
   15750:	movt	r3, #1
   15754:	str	r3, [sp, #60]	; 0x3c
   15758:	str	r2, [sp, #68]	; 0x44
   1575c:	str	r2, [sp, #72]	; 0x48
   15760:	b	141c0 <dcngettext@plt+0x31d0>
   15764:	mov	r2, r3
   15768:	ldr	r3, [sp, #60]	; 0x3c
   1576c:	cmp	r3, #0
   15770:	moveq	r2, #0
   15774:	andne	r2, r2, #1
   15778:	cmp	r2, #0
   1577c:	beq	157a8 <dcngettext@plt+0x47b8>
   15780:	mov	r2, r3
   15784:	ldrb	r3, [r3]
   15788:	cmp	r3, #0
   1578c:	beq	157a8 <dcngettext@plt+0x47b8>
   15790:	cmp	sl, r4
   15794:	strbhi	r3, [fp, r4]
   15798:	add	r4, r4, #1
   1579c:	ldrb	r3, [r2, #1]!
   157a0:	cmp	r3, #0
   157a4:	bne	15790 <dcngettext@plt+0x47a0>
   157a8:	cmp	sl, r4
   157ac:	movhi	r3, #0
   157b0:	strbhi	r3, [fp, r4]
   157b4:	b	149c8 <dcngettext@plt+0x39d8>
   157b8:	str	fp, [sp, #152]	; 0x98
   157bc:	mov	fp, r8
   157c0:	ldr	r8, [sp, #152]	; 0x98
   157c4:	b	14990 <dcngettext@plt+0x39a0>
   157c8:	mov	ip, r3
   157cc:	ldr	r2, [sp, #40]	; 0x28
   157d0:	b	1524c <dcngettext@plt+0x425c>
   157d4:	str	fp, [sp, #152]	; 0x98
   157d8:	mov	fp, r8
   157dc:	ldr	r8, [sp, #152]	; 0x98
   157e0:	sub	r3, r8, #2
   157e4:	clz	r3, r3
   157e8:	lsr	r3, r3, #5
   157ec:	str	r3, [sp, #40]	; 0x28
   157f0:	b	14984 <dcngettext@plt+0x3994>
   157f4:	mov	ip, #5
   157f8:	ldr	r3, [sp, #28]
   157fc:	str	ip, [sp]
   15800:	ldr	r2, [sp, #156]	; 0x9c
   15804:	ldr	ip, [sp, #164]	; 0xa4
   15808:	ldr	r0, [sp, #160]	; 0xa0
   1580c:	str	r2, [sp, #4]
   15810:	ldr	r2, [sp, #32]
   15814:	ldr	r1, [sp, #72]	; 0x48
   15818:	str	ip, [sp, #12]
   1581c:	ldr	ip, [sp, #168]	; 0xa8
   15820:	str	r0, [sp, #8]
   15824:	mov	r0, fp
   15828:	str	ip, [sp, #16]
   1582c:	bl	140d8 <dcngettext@plt+0x30e8>
   15830:	mov	r4, r0
   15834:	b	149c8 <dcngettext@plt+0x39d8>
   15838:	mov	r8, #2
   1583c:	b	14984 <dcngettext@plt+0x3994>
   15840:	ldr	r2, [sp, #40]	; 0x28
   15844:	b	1524c <dcngettext@plt+0x425c>
   15848:	mov	r3, #0
   1584c:	mov	r2, #1
   15850:	mov	r4, r3
   15854:	strd	r2, [sp, #36]	; 0x24
   15858:	strd	r2, [sp, #44]	; 0x2c
   1585c:	str	r2, [sp, #56]	; 0x38
   15860:	str	r3, [sp, #68]	; 0x44
   15864:	str	r3, [sp, #72]	; 0x48
   15868:	movw	r3, #33180	; 0x819c
   1586c:	movt	r3, #1
   15870:	str	r3, [sp, #60]	; 0x3c
   15874:	b	141c0 <dcngettext@plt+0x31d0>
   15878:	mov	r3, #0
   1587c:	mov	r1, #1
   15880:	mov	r2, r3
   15884:	str	r1, [sp, #36]	; 0x24
   15888:	str	r3, [sp, #48]	; 0x30
   1588c:	str	sl, [sp, #72]	; 0x48
   15890:	b	147c8 <dcngettext@plt+0x37d8>
   15894:	bl	10fd8 <abort@plt>
   15898:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1589c:	mov	r4, r0
   158a0:	mov	r5, r3
   158a4:	strd	r6, [sp, #8]
   158a8:	movw	r7, #37132	; 0x910c
   158ac:	movt	r7, #2
   158b0:	strd	r8, [sp, #16]
   158b4:	strd	sl, [sp, #24]
   158b8:	mov	sl, r1
   158bc:	mov	fp, r2
   158c0:	str	lr, [sp, #32]
   158c4:	sub	sp, sp, #60	; 0x3c
   158c8:	bl	10ef4 <__errno_location@plt>
   158cc:	mov	r8, r0
   158d0:	cmn	r4, #-2147483647	; 0x80000001
   158d4:	ldr	r6, [r7]
   158d8:	movne	r0, #0
   158dc:	moveq	r0, #1
   158e0:	ldr	r3, [r8]
   158e4:	orrs	r0, r0, r4, lsr #31
   158e8:	str	r3, [sp, #28]
   158ec:	bne	15a7c <dcngettext@plt+0x4a8c>
   158f0:	ldr	r3, [r7, #4]
   158f4:	cmp	r3, r4
   158f8:	bgt	15958 <dcngettext@plt+0x4968>
   158fc:	add	r1, r7, #8
   15900:	sub	r2, r4, r3
   15904:	str	r3, [sp, #52]	; 0x34
   15908:	cmp	r6, r1
   1590c:	add	r2, r2, #1
   15910:	beq	15a54 <dcngettext@plt+0x4a64>
   15914:	mov	r1, #8
   15918:	mov	r0, r6
   1591c:	mvn	r3, #-2147483648	; 0x80000000
   15920:	str	r1, [sp]
   15924:	add	r1, sp, #52	; 0x34
   15928:	bl	16908 <dcngettext@plt+0x5918>
   1592c:	mov	r6, r0
   15930:	str	r0, [r7]
   15934:	ldr	r0, [r7, #4]
   15938:	mov	r1, #0
   1593c:	ldr	r2, [sp, #52]	; 0x34
   15940:	sub	r2, r2, r0
   15944:	add	r0, r6, r0, lsl #3
   15948:	lsl	r2, r2, #3
   1594c:	bl	10f18 <memset@plt>
   15950:	ldr	r3, [sp, #52]	; 0x34
   15954:	str	r3, [r7, #4]
   15958:	ldr	r1, [r5, #4]
   1595c:	add	r0, r6, r4, lsl #3
   15960:	add	ip, r5, #8
   15964:	mov	r3, fp
   15968:	mov	r2, sl
   1596c:	ldr	r7, [r0, #4]
   15970:	str	r0, [sp, #36]	; 0x24
   15974:	str	ip, [sp, #40]	; 0x28
   15978:	orr	r0, r1, #1
   1597c:	ldr	r9, [r6, r4, lsl #3]
   15980:	str	ip, [sp, #8]
   15984:	ldr	lr, [r5, #44]	; 0x2c
   15988:	str	r0, [sp, #4]
   1598c:	ldr	ip, [r5]
   15990:	mov	r1, r9
   15994:	str	ip, [sp, #32]
   15998:	ldr	ip, [r5, #40]	; 0x28
   1599c:	str	ip, [sp, #12]
   159a0:	ldr	ip, [sp, #32]
   159a4:	str	lr, [sp, #16]
   159a8:	str	r0, [sp, #44]	; 0x2c
   159ac:	mov	r0, r7
   159b0:	str	ip, [sp]
   159b4:	bl	140d8 <dcngettext@plt+0x30e8>
   159b8:	cmp	r9, r0
   159bc:	bhi	15a2c <dcngettext@plt+0x4a3c>
   159c0:	add	r9, r0, #1
   159c4:	movw	r3, #37264	; 0x9190
   159c8:	movt	r3, #2
   159cc:	cmp	r7, r3
   159d0:	str	r9, [r6, r4, lsl #3]
   159d4:	beq	159e0 <dcngettext@plt+0x49f0>
   159d8:	mov	r0, r7
   159dc:	bl	13d38 <dcngettext@plt+0x2d48>
   159e0:	mov	r0, r9
   159e4:	bl	16758 <dcngettext@plt+0x5768>
   159e8:	ldr	ip, [r5]
   159ec:	mov	r3, fp
   159f0:	mov	r2, sl
   159f4:	mov	r1, r9
   159f8:	mov	r7, r0
   159fc:	ldr	lr, [sp, #36]	; 0x24
   15a00:	ldr	r4, [r5, #40]	; 0x28
   15a04:	str	r0, [lr, #4]
   15a08:	ldr	lr, [r5, #44]	; 0x2c
   15a0c:	str	ip, [sp]
   15a10:	ldr	ip, [sp, #44]	; 0x2c
   15a14:	str	ip, [sp, #4]
   15a18:	ldr	ip, [sp, #40]	; 0x28
   15a1c:	str	r4, [sp, #12]
   15a20:	str	lr, [sp, #16]
   15a24:	str	ip, [sp, #8]
   15a28:	bl	140d8 <dcngettext@plt+0x30e8>
   15a2c:	ldr	r3, [sp, #28]
   15a30:	mov	r0, r7
   15a34:	str	r3, [r8]
   15a38:	add	sp, sp, #60	; 0x3c
   15a3c:	ldrd	r4, [sp]
   15a40:	ldrd	r6, [sp, #8]
   15a44:	ldrd	r8, [sp, #16]
   15a48:	ldrd	sl, [sp, #24]
   15a4c:	add	sp, sp, #32
   15a50:	pop	{pc}		; (ldr pc, [sp], #4)
   15a54:	mov	r1, #8
   15a58:	mvn	r3, #-2147483648	; 0x80000000
   15a5c:	str	r1, [sp]
   15a60:	add	r1, sp, #52	; 0x34
   15a64:	bl	16908 <dcngettext@plt+0x5918>
   15a68:	ldrd	r2, [r7, #8]
   15a6c:	mov	r6, r0
   15a70:	str	r0, [r7]
   15a74:	strd	r2, [r0]
   15a78:	b	15934 <dcngettext@plt+0x4944>
   15a7c:	bl	10fd8 <abort@plt>
   15a80:	strd	r4, [sp, #-16]!
   15a84:	mov	r5, r0
   15a88:	str	r6, [sp, #8]
   15a8c:	str	lr, [sp, #12]
   15a90:	bl	10ef4 <__errno_location@plt>
   15a94:	mov	r4, r0
   15a98:	cmp	r5, #0
   15a9c:	ldr	r0, [pc, #32]	; 15ac4 <dcngettext@plt+0x4ad4>
   15aa0:	mov	r1, #48	; 0x30
   15aa4:	movne	r0, r5
   15aa8:	ldr	r6, [r4]
   15aac:	bl	16a80 <dcngettext@plt+0x5a90>
   15ab0:	str	r6, [r4]
   15ab4:	ldrd	r4, [sp]
   15ab8:	ldr	r6, [sp, #8]
   15abc:	add	sp, sp, #12
   15ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ac4:	muleq	r2, r0, r2
   15ac8:	ldr	r3, [pc, #12]	; 15adc <dcngettext@plt+0x4aec>
   15acc:	cmp	r0, #0
   15ad0:	moveq	r0, r3
   15ad4:	ldr	r0, [r0]
   15ad8:	bx	lr
   15adc:	muleq	r2, r0, r2
   15ae0:	ldr	r3, [pc, #12]	; 15af4 <dcngettext@plt+0x4b04>
   15ae4:	cmp	r0, #0
   15ae8:	moveq	r0, r3
   15aec:	str	r1, [r0]
   15af0:	bx	lr
   15af4:	muleq	r2, r0, r2
   15af8:	ldr	r3, [pc, #52]	; 15b34 <dcngettext@plt+0x4b44>
   15afc:	cmp	r0, #0
   15b00:	push	{lr}		; (str lr, [sp, #-4]!)
   15b04:	lsr	lr, r1, #5
   15b08:	and	r1, r1, #31
   15b0c:	moveq	r0, r3
   15b10:	add	r3, r0, #8
   15b14:	ldr	ip, [r3, lr, lsl #2]
   15b18:	lsr	r0, ip, r1
   15b1c:	eor	r2, r2, r0
   15b20:	and	r0, r0, #1
   15b24:	and	r2, r2, #1
   15b28:	eor	r1, ip, r2, lsl r1
   15b2c:	str	r1, [r3, lr, lsl #2]
   15b30:	pop	{pc}		; (ldr pc, [sp], #4)
   15b34:	muleq	r2, r0, r2
   15b38:	ldr	r3, [pc, #16]	; 15b50 <dcngettext@plt+0x4b60>
   15b3c:	cmp	r0, #0
   15b40:	movne	r3, r0
   15b44:	ldr	r0, [r3, #4]
   15b48:	str	r1, [r3, #4]
   15b4c:	bx	lr
   15b50:	muleq	r2, r0, r2
   15b54:	ldr	r3, [pc, #48]	; 15b8c <dcngettext@plt+0x4b9c>
   15b58:	cmp	r0, #0
   15b5c:	mov	ip, #10
   15b60:	moveq	r0, r3
   15b64:	cmp	r2, #0
   15b68:	cmpne	r1, #0
   15b6c:	str	ip, [r0]
   15b70:	beq	15b80 <dcngettext@plt+0x4b90>
   15b74:	str	r1, [r0, #40]	; 0x28
   15b78:	str	r2, [r0, #44]	; 0x2c
   15b7c:	bx	lr
   15b80:	str	r4, [sp, #-8]!
   15b84:	str	lr, [sp, #4]
   15b88:	bl	10fd8 <abort@plt>
   15b8c:	muleq	r2, r0, r2
   15b90:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15b94:	strd	r6, [sp, #8]
   15b98:	mov	r7, r0
   15b9c:	mov	r6, r1
   15ba0:	strd	r8, [sp, #16]
   15ba4:	mov	r8, r2
   15ba8:	mov	r9, r3
   15bac:	str	lr, [sp, #24]
   15bb0:	sub	sp, sp, #28
   15bb4:	ldr	r4, [sp, #56]	; 0x38
   15bb8:	ldr	ip, [pc, #104]	; 15c28 <dcngettext@plt+0x4c38>
   15bbc:	cmp	r4, #0
   15bc0:	moveq	r4, ip
   15bc4:	bl	10ef4 <__errno_location@plt>
   15bc8:	ldr	ip, [r4, #44]	; 0x2c
   15bcc:	mov	r5, r0
   15bd0:	mov	r1, r6
   15bd4:	add	lr, r4, #8
   15bd8:	mov	r3, r9
   15bdc:	ldr	r6, [r5]
   15be0:	mov	r2, r8
   15be4:	mov	r0, r7
   15be8:	str	ip, [sp, #16]
   15bec:	ldr	ip, [r4, #40]	; 0x28
   15bf0:	str	lr, [sp, #8]
   15bf4:	str	ip, [sp, #12]
   15bf8:	ldr	ip, [r4, #4]
   15bfc:	str	ip, [sp, #4]
   15c00:	ldr	ip, [r4]
   15c04:	str	ip, [sp]
   15c08:	bl	140d8 <dcngettext@plt+0x30e8>
   15c0c:	str	r6, [r5]
   15c10:	add	sp, sp, #28
   15c14:	ldrd	r4, [sp]
   15c18:	ldrd	r6, [sp, #8]
   15c1c:	ldrd	r8, [sp, #16]
   15c20:	add	sp, sp, #24
   15c24:	pop	{pc}		; (ldr pc, [sp], #4)
   15c28:	muleq	r2, r0, r2
   15c2c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15c30:	cmp	r3, #0
   15c34:	ldr	r4, [pc, #220]	; 15d18 <dcngettext@plt+0x4d28>
   15c38:	movne	r4, r3
   15c3c:	strd	r6, [sp, #8]
   15c40:	mov	r6, r2
   15c44:	strd	r8, [sp, #16]
   15c48:	mov	r9, r0
   15c4c:	strd	sl, [sp, #24]
   15c50:	mov	sl, r1
   15c54:	str	lr, [sp, #32]
   15c58:	sub	sp, sp, #44	; 0x2c
   15c5c:	bl	10ef4 <__errno_location@plt>
   15c60:	ldr	r5, [r4, #4]
   15c64:	mov	r7, r0
   15c68:	mov	r1, #0
   15c6c:	add	r8, r4, #8
   15c70:	mov	r3, sl
   15c74:	ldr	ip, [r4, #44]	; 0x2c
   15c78:	mov	r2, r9
   15c7c:	mov	r0, r1
   15c80:	ldr	lr, [r7]
   15c84:	cmp	r6, r1
   15c88:	orreq	r5, r5, #1
   15c8c:	str	ip, [sp, #16]
   15c90:	ldr	ip, [r4, #40]	; 0x28
   15c94:	stmib	sp, {r5, r8, ip}
   15c98:	ldr	ip, [r4]
   15c9c:	str	lr, [sp, #28]
   15ca0:	str	ip, [sp]
   15ca4:	bl	140d8 <dcngettext@plt+0x30e8>
   15ca8:	add	r1, r0, #1
   15cac:	mov	fp, r0
   15cb0:	mov	r0, r1
   15cb4:	str	r1, [sp, #36]	; 0x24
   15cb8:	bl	16758 <dcngettext@plt+0x5768>
   15cbc:	ldr	ip, [r4, #44]	; 0x2c
   15cc0:	mov	r3, sl
   15cc4:	mov	r2, r9
   15cc8:	ldr	r1, [sp, #36]	; 0x24
   15ccc:	str	ip, [sp, #16]
   15cd0:	ldr	ip, [r4, #40]	; 0x28
   15cd4:	str	r0, [sp, #32]
   15cd8:	stmib	sp, {r5, r8, ip}
   15cdc:	ldr	ip, [r4]
   15ce0:	str	ip, [sp]
   15ce4:	bl	140d8 <dcngettext@plt+0x30e8>
   15ce8:	ldr	lr, [sp, #28]
   15cec:	cmp	r6, #0
   15cf0:	ldr	r0, [sp, #32]
   15cf4:	str	lr, [r7]
   15cf8:	strne	fp, [r6]
   15cfc:	add	sp, sp, #44	; 0x2c
   15d00:	ldrd	r4, [sp]
   15d04:	ldrd	r6, [sp, #8]
   15d08:	ldrd	r8, [sp, #16]
   15d0c:	ldrd	sl, [sp, #24]
   15d10:	add	sp, sp, #32
   15d14:	pop	{pc}		; (ldr pc, [sp], #4)
   15d18:	muleq	r2, r0, r2
   15d1c:	mov	r3, r2
   15d20:	mov	r2, #0
   15d24:	b	15c2c <dcngettext@plt+0x4c3c>
   15d28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15d2c:	movw	r5, #37132	; 0x910c
   15d30:	movt	r5, #2
   15d34:	ldr	r3, [r5, #4]
   15d38:	strd	r6, [sp, #8]
   15d3c:	str	r8, [sp, #16]
   15d40:	str	lr, [sp, #20]
   15d44:	ldr	r7, [r5]
   15d48:	cmp	r3, #1
   15d4c:	ble	15d70 <dcngettext@plt+0x4d80>
   15d50:	mov	r4, #1
   15d54:	add	r6, r7, #4
   15d58:	ldr	r0, [r6, r4, lsl #3]
   15d5c:	add	r4, r4, #1
   15d60:	bl	13d38 <dcngettext@plt+0x2d48>
   15d64:	ldr	r3, [r5, #4]
   15d68:	cmp	r3, r4
   15d6c:	bgt	15d58 <dcngettext@plt+0x4d68>
   15d70:	ldr	r0, [r7, #4]
   15d74:	movw	r4, #37264	; 0x9190
   15d78:	movt	r4, #2
   15d7c:	cmp	r0, r4
   15d80:	beq	15d94 <dcngettext@plt+0x4da4>
   15d84:	bl	13d38 <dcngettext@plt+0x2d48>
   15d88:	mov	r3, #256	; 0x100
   15d8c:	str	r3, [r5, #8]
   15d90:	str	r4, [r5, #12]
   15d94:	ldr	r4, [pc, #44]	; 15dc8 <dcngettext@plt+0x4dd8>
   15d98:	cmp	r7, r4
   15d9c:	beq	15dac <dcngettext@plt+0x4dbc>
   15da0:	mov	r0, r7
   15da4:	bl	13d38 <dcngettext@plt+0x2d48>
   15da8:	str	r4, [r5]
   15dac:	mov	r3, #1
   15db0:	ldrd	r6, [sp, #8]
   15db4:	str	r3, [r5, #4]
   15db8:	ldrd	r4, [sp]
   15dbc:	ldr	r8, [sp, #16]
   15dc0:	add	sp, sp, #20
   15dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   15dc8:	andeq	r9, r2, r4, lsl r1
   15dcc:	ldr	r3, [pc, #4]	; 15dd8 <dcngettext@plt+0x4de8>
   15dd0:	mvn	r2, #0
   15dd4:	b	15898 <dcngettext@plt+0x48a8>
   15dd8:	muleq	r2, r0, r2
   15ddc:	ldr	r3, [pc]	; 15de4 <dcngettext@plt+0x4df4>
   15de0:	b	15898 <dcngettext@plt+0x48a8>
   15de4:	muleq	r2, r0, r2
   15de8:	mov	r1, r0
   15dec:	ldr	r3, [pc, #8]	; 15dfc <dcngettext@plt+0x4e0c>
   15df0:	mvn	r2, #0
   15df4:	mov	r0, #0
   15df8:	b	15898 <dcngettext@plt+0x48a8>
   15dfc:	muleq	r2, r0, r2
   15e00:	mov	r2, r1
   15e04:	ldr	r3, [pc, #8]	; 15e14 <dcngettext@plt+0x4e24>
   15e08:	mov	r1, r0
   15e0c:	mov	r0, #0
   15e10:	b	15898 <dcngettext@plt+0x48a8>
   15e14:	muleq	r2, r0, r2
   15e18:	strd	r4, [sp, #-12]!
   15e1c:	mov	r5, r2
   15e20:	mov	r4, r0
   15e24:	str	lr, [sp, #8]
   15e28:	sub	sp, sp, #52	; 0x34
   15e2c:	mov	r0, sp
   15e30:	bl	13f34 <dcngettext@plt+0x2f44>
   15e34:	mov	r3, sp
   15e38:	mov	r1, r5
   15e3c:	mov	r0, r4
   15e40:	mvn	r2, #0
   15e44:	bl	15898 <dcngettext@plt+0x48a8>
   15e48:	add	sp, sp, #52	; 0x34
   15e4c:	ldrd	r4, [sp]
   15e50:	add	sp, sp, #8
   15e54:	pop	{pc}		; (ldr pc, [sp], #4)
   15e58:	strd	r4, [sp, #-16]!
   15e5c:	mov	r5, r2
   15e60:	mov	r4, r0
   15e64:	str	r6, [sp, #8]
   15e68:	mov	r6, r3
   15e6c:	str	lr, [sp, #12]
   15e70:	sub	sp, sp, #48	; 0x30
   15e74:	mov	r0, sp
   15e78:	bl	13f34 <dcngettext@plt+0x2f44>
   15e7c:	mov	r3, sp
   15e80:	mov	r2, r6
   15e84:	mov	r1, r5
   15e88:	mov	r0, r4
   15e8c:	bl	15898 <dcngettext@plt+0x48a8>
   15e90:	add	sp, sp, #48	; 0x30
   15e94:	ldrd	r4, [sp]
   15e98:	ldr	r6, [sp, #8]
   15e9c:	add	sp, sp, #12
   15ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ea4:	mov	r2, r1
   15ea8:	mov	r1, r0
   15eac:	mov	r0, #0
   15eb0:	b	15e18 <dcngettext@plt+0x4e28>
   15eb4:	mov	r3, r2
   15eb8:	mov	r2, r1
   15ebc:	mov	r1, r0
   15ec0:	mov	r0, #0
   15ec4:	b	15e58 <dcngettext@plt+0x4e68>
   15ec8:	ldr	ip, [pc, #140]	; 15f5c <dcngettext@plt+0x4f6c>
   15ecc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15ed0:	ldrd	r4, [ip]
   15ed4:	strd	r6, [sp, #8]
   15ed8:	ldrd	r6, [ip, #8]
   15edc:	strd	r8, [sp, #16]
   15ee0:	lsr	r9, r2, #5
   15ee4:	str	lr, [sp, #24]
   15ee8:	sub	sp, sp, #52	; 0x34
   15eec:	and	lr, r2, #31
   15ef0:	add	r8, sp, #8
   15ef4:	mov	r2, r1
   15ef8:	strd	r4, [sp]
   15efc:	mov	r1, r0
   15f00:	mov	r3, sp
   15f04:	strd	r6, [sp, #8]
   15f08:	mov	r0, #0
   15f0c:	ldrd	r4, [ip, #16]
   15f10:	ldrd	r6, [ip, #24]
   15f14:	strd	r4, [sp, #16]
   15f18:	ldrd	r4, [ip, #32]
   15f1c:	strd	r6, [sp, #24]
   15f20:	ldrd	r6, [ip, #40]	; 0x28
   15f24:	strd	r4, [sp, #32]
   15f28:	strd	r6, [sp, #40]	; 0x28
   15f2c:	ldr	ip, [r8, r9, lsl #2]
   15f30:	mvn	r4, ip, lsr lr
   15f34:	and	r4, r4, #1
   15f38:	eor	lr, ip, r4, lsl lr
   15f3c:	str	lr, [r8, r9, lsl #2]
   15f40:	bl	15898 <dcngettext@plt+0x48a8>
   15f44:	add	sp, sp, #52	; 0x34
   15f48:	ldrd	r4, [sp]
   15f4c:	ldrd	r6, [sp, #8]
   15f50:	ldrd	r8, [sp, #16]
   15f54:	add	sp, sp, #24
   15f58:	pop	{pc}		; (ldr pc, [sp], #4)
   15f5c:	muleq	r2, r0, r2
   15f60:	mov	r2, r1
   15f64:	mvn	r1, #0
   15f68:	b	15ec8 <dcngettext@plt+0x4ed8>
   15f6c:	mov	r2, #58	; 0x3a
   15f70:	mvn	r1, #0
   15f74:	b	15ec8 <dcngettext@plt+0x4ed8>
   15f78:	mov	r2, #58	; 0x3a
   15f7c:	b	15ec8 <dcngettext@plt+0x4ed8>
   15f80:	strd	r4, [sp, #-20]!	; 0xffffffec
   15f84:	strd	r6, [sp, #8]
   15f88:	mov	r6, r0
   15f8c:	mov	r7, r2
   15f90:	str	lr, [sp, #16]
   15f94:	sub	sp, sp, #100	; 0x64
   15f98:	mov	r0, sp
   15f9c:	bl	13f34 <dcngettext@plt+0x2f44>
   15fa0:	ldrd	r4, [sp, #8]
   15fa4:	mov	r1, r7
   15fa8:	mov	r0, r6
   15fac:	add	r3, sp, #48	; 0x30
   15fb0:	mvn	r2, #0
   15fb4:	ldrd	r6, [sp]
   15fb8:	strd	r4, [sp, #56]	; 0x38
   15fbc:	ldrd	r4, [sp, #16]
   15fc0:	strd	r6, [sp, #48]	; 0x30
   15fc4:	ldrd	r6, [sp, #32]
   15fc8:	ldr	lr, [sp, #60]	; 0x3c
   15fcc:	strd	r4, [sp, #64]	; 0x40
   15fd0:	ldrd	r4, [sp, #24]
   15fd4:	mvn	ip, lr
   15fd8:	and	ip, ip, #67108864	; 0x4000000
   15fdc:	strd	r4, [sp, #72]	; 0x48
   15fe0:	eor	ip, ip, lr
   15fe4:	ldrd	r4, [sp, #40]	; 0x28
   15fe8:	str	ip, [sp, #60]	; 0x3c
   15fec:	strd	r6, [sp, #80]	; 0x50
   15ff0:	strd	r4, [sp, #88]	; 0x58
   15ff4:	bl	15898 <dcngettext@plt+0x48a8>
   15ff8:	add	sp, sp, #100	; 0x64
   15ffc:	ldrd	r4, [sp]
   16000:	ldrd	r6, [sp, #8]
   16004:	add	sp, sp, #16
   16008:	pop	{pc}		; (ldr pc, [sp], #4)
   1600c:	ldr	ip, [pc, #156]	; 160b0 <dcngettext@plt+0x50c0>
   16010:	cmp	r2, #0
   16014:	cmpne	r1, #0
   16018:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1601c:	strd	r6, [sp, #8]
   16020:	mov	r6, r2
   16024:	str	r8, [sp, #16]
   16028:	mov	r8, r3
   1602c:	strd	sl, [sp, #20]
   16030:	ldrd	r4, [ip]
   16034:	str	lr, [sp, #28]
   16038:	sub	sp, sp, #48	; 0x30
   1603c:	mov	lr, #10
   16040:	ldrd	r2, [ip, #8]
   16044:	ldrd	sl, [ip, #16]
   16048:	strd	r4, [sp]
   1604c:	ldrd	r4, [ip, #32]
   16050:	str	lr, [sp]
   16054:	strd	r2, [sp, #8]
   16058:	strd	sl, [sp, #16]
   1605c:	ldrd	r2, [ip, #24]
   16060:	ldrd	sl, [ip, #40]	; 0x28
   16064:	strd	r2, [sp, #24]
   16068:	strd	r4, [sp, #32]
   1606c:	strd	sl, [sp, #40]	; 0x28
   16070:	beq	160ac <dcngettext@plt+0x50bc>
   16074:	ldr	r2, [sp, #80]	; 0x50
   16078:	mov	r7, r1
   1607c:	mov	r3, sp
   16080:	mov	r1, r8
   16084:	str	r7, [sp, #40]	; 0x28
   16088:	str	r6, [sp, #44]	; 0x2c
   1608c:	bl	15898 <dcngettext@plt+0x48a8>
   16090:	add	sp, sp, #48	; 0x30
   16094:	ldrd	r4, [sp]
   16098:	ldrd	r6, [sp, #8]
   1609c:	ldr	r8, [sp, #16]
   160a0:	ldrd	sl, [sp, #20]
   160a4:	add	sp, sp, #28
   160a8:	pop	{pc}		; (ldr pc, [sp], #4)
   160ac:	bl	10fd8 <abort@plt>
   160b0:	muleq	r2, r0, r2
   160b4:	mvn	ip, #0
   160b8:	push	{lr}		; (str lr, [sp, #-4]!)
   160bc:	sub	sp, sp, #12
   160c0:	str	ip, [sp]
   160c4:	bl	1600c <dcngettext@plt+0x501c>
   160c8:	add	sp, sp, #12
   160cc:	pop	{pc}		; (ldr pc, [sp], #4)
   160d0:	mvn	ip, #0
   160d4:	push	{lr}		; (str lr, [sp, #-4]!)
   160d8:	sub	sp, sp, #12
   160dc:	mov	r3, r2
   160e0:	mov	r2, r1
   160e4:	mov	r1, r0
   160e8:	mov	r0, #0
   160ec:	str	ip, [sp]
   160f0:	bl	1600c <dcngettext@plt+0x501c>
   160f4:	add	sp, sp, #12
   160f8:	pop	{pc}		; (ldr pc, [sp], #4)
   160fc:	push	{lr}		; (str lr, [sp, #-4]!)
   16100:	sub	sp, sp, #12
   16104:	str	r3, [sp]
   16108:	mov	r3, r2
   1610c:	mov	r2, r1
   16110:	mov	r1, r0
   16114:	mov	r0, #0
   16118:	bl	1600c <dcngettext@plt+0x501c>
   1611c:	add	sp, sp, #12
   16120:	pop	{pc}		; (ldr pc, [sp], #4)
   16124:	ldr	r3, [pc]	; 1612c <dcngettext@plt+0x513c>
   16128:	b	15898 <dcngettext@plt+0x48a8>
   1612c:	andeq	r9, r2, ip, lsl r1
   16130:	mov	r2, r1
   16134:	ldr	r3, [pc, #8]	; 16144 <dcngettext@plt+0x5154>
   16138:	mov	r1, r0
   1613c:	mov	r0, #0
   16140:	b	15898 <dcngettext@plt+0x48a8>
   16144:	andeq	r9, r2, ip, lsl r1
   16148:	ldr	r3, [pc, #4]	; 16154 <dcngettext@plt+0x5164>
   1614c:	mvn	r2, #0
   16150:	b	15898 <dcngettext@plt+0x48a8>
   16154:	andeq	r9, r2, ip, lsl r1
   16158:	mov	r1, r0
   1615c:	ldr	r3, [pc, #8]	; 1616c <dcngettext@plt+0x517c>
   16160:	mvn	r2, #0
   16164:	mov	r0, #0
   16168:	b	15898 <dcngettext@plt+0x48a8>
   1616c:	andeq	r9, r2, ip, lsl r1
   16170:	mov	r2, #3
   16174:	mov	r1, #0
   16178:	b	16d5c <dcngettext@plt+0x5d6c>
   1617c:	cmp	r1, #0
   16180:	strd	r4, [sp, #-16]!
   16184:	mov	ip, r3
   16188:	str	r6, [sp, #8]
   1618c:	mov	r4, r0
   16190:	str	lr, [sp, #12]
   16194:	sub	sp, sp, #32
   16198:	ldr	r5, [sp, #48]	; 0x30
   1619c:	ldr	r6, [sp, #52]	; 0x34
   161a0:	beq	162e4 <dcngettext@plt+0x52f4>
   161a4:	mov	r3, r1
   161a8:	mov	r1, #1
   161ac:	stm	sp, {r2, ip}
   161b0:	movw	r2, #33292	; 0x820c
   161b4:	movt	r2, #1
   161b8:	bl	10f3c <__fprintf_chk@plt>
   161bc:	mov	r2, #5
   161c0:	movw	r1, #33312	; 0x8220
   161c4:	movt	r1, #1
   161c8:	mov	r0, #0
   161cc:	bl	10e04 <dcgettext@plt>
   161d0:	movw	ip, #2022	; 0x7e6
   161d4:	mov	r3, r0
   161d8:	mov	r1, #1
   161dc:	movw	r2, #34040	; 0x84f8
   161e0:	movt	r2, #1
   161e4:	mov	r0, r4
   161e8:	str	ip, [sp]
   161ec:	bl	10f3c <__fprintf_chk@plt>
   161f0:	mov	r1, r4
   161f4:	mov	r0, #10
   161f8:	bl	10df8 <fputc_unlocked@plt>
   161fc:	mov	r2, #5
   16200:	movw	r1, #33316	; 0x8224
   16204:	movt	r1, #1
   16208:	mov	r0, #0
   1620c:	bl	10e04 <dcgettext@plt>
   16210:	mov	r2, r0
   16214:	mov	r1, #1
   16218:	movw	r3, #33488	; 0x82d0
   1621c:	movt	r3, #1
   16220:	mov	r0, r4
   16224:	bl	10f3c <__fprintf_chk@plt>
   16228:	mov	r1, r4
   1622c:	mov	r0, #10
   16230:	bl	10df8 <fputc_unlocked@plt>
   16234:	cmp	r6, #9
   16238:	ldrls	pc, [pc, r6, lsl #2]
   1623c:	b	16550 <dcngettext@plt+0x5560>
   16240:	ldrdeq	r6, [r1], -r0
   16244:	andeq	r6, r1, r0, lsl #6
   16248:	andeq	r6, r1, ip, lsr r3
   1624c:	andeq	r6, r1, ip, ror r3
   16250:	andeq	r6, r1, r4, asr #7
   16254:	strdeq	r6, [r1], -ip
   16258:	andeq	r6, r1, r4, asr #8
   1625c:	muleq	r1, r8, r4
   16260:	strdeq	r6, [r1], -r0
   16264:	andeq	r6, r1, r8, ror #4
   16268:	movw	r1, #33792	; 0x8400
   1626c:	movt	r1, #1
   16270:	mov	r2, #5
   16274:	mov	r0, #0
   16278:	bl	10e04 <dcgettext@plt>
   1627c:	ldr	lr, [r5, #4]
   16280:	mov	r2, r0
   16284:	mov	r1, #1
   16288:	mov	r0, r4
   1628c:	ldr	r3, [r5, #8]
   16290:	ldr	ip, [r5, #32]
   16294:	str	lr, [sp]
   16298:	ldr	lr, [r5, #12]
   1629c:	str	ip, [sp, #28]
   162a0:	ldr	ip, [r5, #28]
   162a4:	str	r3, [sp, #4]
   162a8:	ldr	r3, [r5, #16]
   162ac:	str	lr, [sp, #8]
   162b0:	ldr	lr, [r5, #20]
   162b4:	str	ip, [sp, #24]
   162b8:	ldr	ip, [r5, #24]
   162bc:	str	r3, [sp, #12]
   162c0:	ldr	r3, [r5]
   162c4:	str	lr, [sp, #16]
   162c8:	str	ip, [sp, #20]
   162cc:	bl	10f3c <__fprintf_chk@plt>
   162d0:	add	sp, sp, #32
   162d4:	ldrd	r4, [sp]
   162d8:	ldr	r6, [sp, #8]
   162dc:	add	sp, sp, #12
   162e0:	pop	{pc}		; (ldr pc, [sp], #4)
   162e4:	mov	r3, r2
   162e8:	mov	r1, #1
   162ec:	str	ip, [sp]
   162f0:	movw	r2, #33304	; 0x8218
   162f4:	movt	r2, #1
   162f8:	bl	10f3c <__fprintf_chk@plt>
   162fc:	b	161bc <dcngettext@plt+0x51cc>
   16300:	mov	r2, #5
   16304:	movw	r1, #33524	; 0x82f4
   16308:	movt	r1, #1
   1630c:	mov	r0, #0
   16310:	bl	10e04 <dcgettext@plt>
   16314:	ldr	r3, [r5]
   16318:	mov	r2, r0
   1631c:	mov	r1, #1
   16320:	mov	r0, r4
   16324:	add	sp, sp, #32
   16328:	ldrd	r4, [sp]
   1632c:	ldr	r6, [sp, #8]
   16330:	ldr	lr, [sp, #12]
   16334:	add	sp, sp, #16
   16338:	b	10f3c <__fprintf_chk@plt>
   1633c:	mov	r2, #5
   16340:	movw	r1, #33540	; 0x8304
   16344:	movt	r1, #1
   16348:	mov	r0, #0
   1634c:	bl	10e04 <dcgettext@plt>
   16350:	ldm	r5, {r3, ip}
   16354:	mov	r2, r0
   16358:	mov	r1, #1
   1635c:	mov	r0, r4
   16360:	str	ip, [sp, #48]	; 0x30
   16364:	add	sp, sp, #32
   16368:	ldrd	r4, [sp]
   1636c:	ldr	r6, [sp, #8]
   16370:	ldr	lr, [sp, #12]
   16374:	add	sp, sp, #16
   16378:	b	10f3c <__fprintf_chk@plt>
   1637c:	mov	r2, #5
   16380:	movw	r1, #33564	; 0x831c
   16384:	movt	r1, #1
   16388:	mov	r0, #0
   1638c:	bl	10e04 <dcgettext@plt>
   16390:	ldm	r5, {r3, lr}
   16394:	mov	r2, r0
   16398:	mov	r1, #1
   1639c:	mov	r0, r4
   163a0:	ldr	ip, [r5, #8]
   163a4:	str	lr, [sp, #48]	; 0x30
   163a8:	str	ip, [sp, #52]	; 0x34
   163ac:	add	sp, sp, #32
   163b0:	ldrd	r4, [sp]
   163b4:	ldr	r6, [sp, #8]
   163b8:	ldr	lr, [sp, #12]
   163bc:	add	sp, sp, #16
   163c0:	b	10f3c <__fprintf_chk@plt>
   163c4:	mov	r2, #5
   163c8:	movw	r1, #33592	; 0x8338
   163cc:	movt	r1, #1
   163d0:	mov	r0, #0
   163d4:	bl	10e04 <dcgettext@plt>
   163d8:	ldmib	r5, {r3, ip, lr}
   163dc:	mov	r2, r0
   163e0:	mov	r1, #1
   163e4:	mov	r0, r4
   163e8:	str	r3, [sp]
   163ec:	ldr	r3, [r5]
   163f0:	stmib	sp, {ip, lr}
   163f4:	bl	10f3c <__fprintf_chk@plt>
   163f8:	b	162d0 <dcngettext@plt+0x52e0>
   163fc:	mov	r2, #5
   16400:	movw	r1, #33624	; 0x8358
   16404:	movt	r1, #1
   16408:	mov	r0, #0
   1640c:	bl	10e04 <dcgettext@plt>
   16410:	ldmib	r5, {ip, lr}
   16414:	mov	r2, r0
   16418:	mov	r1, #1
   1641c:	mov	r0, r4
   16420:	ldr	r3, [r5, #16]
   16424:	str	ip, [sp]
   16428:	ldr	ip, [r5, #12]
   1642c:	str	r3, [sp, #12]
   16430:	ldr	r3, [r5]
   16434:	str	lr, [sp, #4]
   16438:	str	ip, [sp, #8]
   1643c:	bl	10f3c <__fprintf_chk@plt>
   16440:	b	162d0 <dcngettext@plt+0x52e0>
   16444:	mov	r2, #5
   16448:	movw	r1, #33660	; 0x837c
   1644c:	movt	r1, #1
   16450:	mov	r0, #0
   16454:	bl	10e04 <dcgettext@plt>
   16458:	ldr	lr, [r5, #4]
   1645c:	mov	r2, r0
   16460:	mov	r1, #1
   16464:	mov	r0, r4
   16468:	ldr	r3, [r5, #8]
   1646c:	ldr	ip, [r5, #20]
   16470:	str	lr, [sp]
   16474:	ldr	lr, [r5, #12]
   16478:	str	ip, [sp, #16]
   1647c:	ldr	ip, [r5, #16]
   16480:	str	r3, [sp, #4]
   16484:	ldr	r3, [r5]
   16488:	str	lr, [sp, #8]
   1648c:	str	ip, [sp, #12]
   16490:	bl	10f3c <__fprintf_chk@plt>
   16494:	b	162d0 <dcngettext@plt+0x52e0>
   16498:	mov	r2, #5
   1649c:	movw	r1, #33700	; 0x83a4
   164a0:	movt	r1, #1
   164a4:	mov	r0, #0
   164a8:	bl	10e04 <dcgettext@plt>
   164ac:	ldmib	r5, {r3, ip}
   164b0:	mov	r2, r0
   164b4:	mov	r1, #1
   164b8:	mov	r0, r4
   164bc:	ldr	lr, [r5, #24]
   164c0:	str	r3, [sp]
   164c4:	ldr	r3, [r5, #12]
   164c8:	str	lr, [sp, #20]
   164cc:	ldr	lr, [r5, #20]
   164d0:	str	ip, [sp, #4]
   164d4:	ldr	ip, [r5, #16]
   164d8:	str	r3, [sp, #8]
   164dc:	ldr	r3, [r5]
   164e0:	str	ip, [sp, #12]
   164e4:	str	lr, [sp, #16]
   164e8:	bl	10f3c <__fprintf_chk@plt>
   164ec:	b	162d0 <dcngettext@plt+0x52e0>
   164f0:	mov	r2, #5
   164f4:	movw	r1, #33744	; 0x83d0
   164f8:	movt	r1, #1
   164fc:	mov	r0, #0
   16500:	bl	10e04 <dcgettext@plt>
   16504:	ldmib	r5, {ip, lr}
   16508:	mov	r2, r0
   1650c:	mov	r1, #1
   16510:	mov	r0, r4
   16514:	ldr	r3, [r5, #28]
   16518:	str	ip, [sp]
   1651c:	ldr	ip, [r5, #12]
   16520:	str	r3, [sp, #24]
   16524:	ldr	r3, [r5, #24]
   16528:	str	lr, [sp, #4]
   1652c:	ldr	lr, [r5, #16]
   16530:	str	ip, [sp, #8]
   16534:	ldr	ip, [r5, #20]
   16538:	str	r3, [sp, #20]
   1653c:	ldr	r3, [r5]
   16540:	str	lr, [sp, #12]
   16544:	str	ip, [sp, #16]
   16548:	bl	10f3c <__fprintf_chk@plt>
   1654c:	b	162d0 <dcngettext@plt+0x52e0>
   16550:	movw	r1, #33844	; 0x8434
   16554:	movt	r1, #1
   16558:	b	16270 <dcngettext@plt+0x5280>
   1655c:	strd	r4, [sp, #-12]!
   16560:	str	lr, [sp, #8]
   16564:	sub	sp, sp, #12
   16568:	ldr	r5, [sp, #24]
   1656c:	ldr	ip, [r5]
   16570:	cmp	ip, #0
   16574:	beq	16590 <dcngettext@plt+0x55a0>
   16578:	mov	lr, r5
   1657c:	mov	ip, #0
   16580:	ldr	r4, [lr, #4]!
   16584:	add	ip, ip, #1
   16588:	cmp	r4, #0
   1658c:	bne	16580 <dcngettext@plt+0x5590>
   16590:	stm	sp, {r5, ip}
   16594:	bl	1617c <dcngettext@plt+0x518c>
   16598:	add	sp, sp, #12
   1659c:	ldrd	r4, [sp]
   165a0:	add	sp, sp, #8
   165a4:	pop	{pc}		; (ldr pc, [sp], #4)
   165a8:	strd	r4, [sp, #-16]!
   165ac:	mov	ip, #0
   165b0:	str	r6, [sp, #8]
   165b4:	str	lr, [sp, #12]
   165b8:	sub	sp, sp, #48	; 0x30
   165bc:	ldr	r5, [sp, #64]	; 0x40
   165c0:	add	r6, sp, #8
   165c4:	mov	r4, r6
   165c8:	ldr	lr, [r5], #4
   165cc:	cmp	lr, #0
   165d0:	str	lr, [r4], #4
   165d4:	beq	165e4 <dcngettext@plt+0x55f4>
   165d8:	add	ip, ip, #1
   165dc:	cmp	ip, #10
   165e0:	bne	165c8 <dcngettext@plt+0x55d8>
   165e4:	stm	sp, {r6, ip}
   165e8:	bl	1617c <dcngettext@plt+0x518c>
   165ec:	add	sp, sp, #48	; 0x30
   165f0:	ldrd	r4, [sp]
   165f4:	ldr	r6, [sp, #8]
   165f8:	add	sp, sp, #12
   165fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16600:	push	{r3}		; (str r3, [sp, #-4]!)
   16604:	mov	ip, #0
   16608:	strd	r4, [sp, #-12]!
   1660c:	str	lr, [sp, #8]
   16610:	sub	sp, sp, #56	; 0x38
   16614:	add	r3, sp, #72	; 0x48
   16618:	add	r5, sp, #16
   1661c:	mov	r4, r3
   16620:	mov	lr, r5
   16624:	str	r3, [sp, #12]
   16628:	ldr	r3, [r4], #4
   1662c:	cmp	r3, #0
   16630:	str	r3, [lr], #4
   16634:	beq	16644 <dcngettext@plt+0x5654>
   16638:	add	ip, ip, #1
   1663c:	cmp	ip, #10
   16640:	bne	16628 <dcngettext@plt+0x5638>
   16644:	ldr	r3, [sp, #68]	; 0x44
   16648:	stm	sp, {r5, ip}
   1664c:	bl	1617c <dcngettext@plt+0x518c>
   16650:	add	sp, sp, #56	; 0x38
   16654:	ldrd	r4, [sp]
   16658:	ldr	lr, [sp, #8]
   1665c:	add	sp, sp, #12
   16660:	add	sp, sp, #4
   16664:	bx	lr
   16668:	movw	r3, #37228	; 0x916c
   1666c:	movt	r3, #2
   16670:	str	r4, [sp, #-8]!
   16674:	mov	r0, #10
   16678:	ldr	r1, [r3]
   1667c:	str	lr, [sp, #4]
   16680:	bl	10df8 <fputc_unlocked@plt>
   16684:	mov	r2, #5
   16688:	movw	r1, #33904	; 0x8470
   1668c:	movt	r1, #1
   16690:	mov	r0, #0
   16694:	bl	10e04 <dcgettext@plt>
   16698:	mov	r1, r0
   1669c:	movw	r2, #33924	; 0x8484
   166a0:	movt	r2, #1
   166a4:	mov	r0, #1
   166a8:	bl	10f24 <__printf_chk@plt>
   166ac:	mov	r2, #5
   166b0:	movw	r1, #33948	; 0x849c
   166b4:	movt	r1, #1
   166b8:	mov	r0, #0
   166bc:	bl	10e04 <dcgettext@plt>
   166c0:	mov	r1, r0
   166c4:	movw	r3, #31324	; 0x7a5c
   166c8:	movt	r3, #1
   166cc:	movw	r2, #31364	; 0x7a84
   166d0:	movt	r2, #1
   166d4:	mov	r0, #1
   166d8:	bl	10f24 <__printf_chk@plt>
   166dc:	mov	r2, #5
   166e0:	movw	r1, #33968	; 0x84b0
   166e4:	movt	r1, #1
   166e8:	mov	r0, #0
   166ec:	bl	10e04 <dcgettext@plt>
   166f0:	mov	r1, r0
   166f4:	movw	r2, #34008	; 0x84d8
   166f8:	movt	r2, #1
   166fc:	mov	r0, #1
   16700:	ldr	r4, [sp]
   16704:	ldr	lr, [sp, #4]
   16708:	add	sp, sp, #8
   1670c:	b	10f24 <__printf_chk@plt>
   16710:	str	r4, [sp, #-8]!
   16714:	str	lr, [sp, #4]
   16718:	bl	16c40 <dcngettext@plt+0x5c50>
   1671c:	cmp	r0, #0
   16720:	beq	16730 <dcngettext@plt+0x5740>
   16724:	ldr	r4, [sp]
   16728:	add	sp, sp, #4
   1672c:	pop	{pc}		; (ldr pc, [sp], #4)
   16730:	bl	16b88 <dcngettext@plt+0x5b98>
   16734:	str	r4, [sp, #-8]!
   16738:	str	lr, [sp, #4]
   1673c:	bl	16c40 <dcngettext@plt+0x5c50>
   16740:	cmp	r0, #0
   16744:	beq	16754 <dcngettext@plt+0x5764>
   16748:	ldr	r4, [sp]
   1674c:	add	sp, sp, #4
   16750:	pop	{pc}		; (ldr pc, [sp], #4)
   16754:	bl	16b88 <dcngettext@plt+0x5b98>
   16758:	str	r4, [sp, #-8]!
   1675c:	str	lr, [sp, #4]
   16760:	bl	16c40 <dcngettext@plt+0x5c50>
   16764:	cmp	r0, #0
   16768:	beq	16778 <dcngettext@plt+0x5788>
   1676c:	ldr	r4, [sp]
   16770:	add	sp, sp, #4
   16774:	pop	{pc}		; (ldr pc, [sp], #4)
   16778:	bl	16b88 <dcngettext@plt+0x5b98>
   1677c:	strd	r4, [sp, #-16]!
   16780:	mov	r5, r0
   16784:	mov	r4, r1
   16788:	str	r6, [sp, #8]
   1678c:	str	lr, [sp, #12]
   16790:	bl	16c7c <dcngettext@plt+0x5c8c>
   16794:	cmp	r0, #0
   16798:	beq	167ac <dcngettext@plt+0x57bc>
   1679c:	ldrd	r4, [sp]
   167a0:	ldr	r6, [sp, #8]
   167a4:	add	sp, sp, #12
   167a8:	pop	{pc}		; (ldr pc, [sp], #4)
   167ac:	adds	r4, r4, #0
   167b0:	movne	r4, #1
   167b4:	cmp	r5, #0
   167b8:	moveq	r4, #1
   167bc:	cmp	r4, #0
   167c0:	beq	1679c <dcngettext@plt+0x57ac>
   167c4:	bl	16b88 <dcngettext@plt+0x5b98>
   167c8:	cmp	r1, #0
   167cc:	orreq	r1, r1, #1
   167d0:	str	r4, [sp, #-8]!
   167d4:	str	lr, [sp, #4]
   167d8:	bl	16c7c <dcngettext@plt+0x5c8c>
   167dc:	cmp	r0, #0
   167e0:	beq	167f0 <dcngettext@plt+0x5800>
   167e4:	ldr	r4, [sp]
   167e8:	add	sp, sp, #4
   167ec:	pop	{pc}		; (ldr pc, [sp], #4)
   167f0:	bl	16b88 <dcngettext@plt+0x5b98>
   167f4:	strd	r4, [sp, #-16]!
   167f8:	mov	r4, r0
   167fc:	mov	r5, r2
   16800:	str	r6, [sp, #8]
   16804:	mov	r6, r1
   16808:	str	lr, [sp, #12]
   1680c:	bl	17000 <dcngettext@plt+0x6010>
   16810:	cmp	r0, #0
   16814:	beq	16828 <dcngettext@plt+0x5838>
   16818:	ldrd	r4, [sp]
   1681c:	ldr	r6, [sp, #8]
   16820:	add	sp, sp, #12
   16824:	pop	{pc}		; (ldr pc, [sp], #4)
   16828:	cmp	r4, #0
   1682c:	beq	1683c <dcngettext@plt+0x584c>
   16830:	cmp	r6, #0
   16834:	cmpne	r5, #0
   16838:	beq	16818 <dcngettext@plt+0x5828>
   1683c:	bl	16b88 <dcngettext@plt+0x5b98>
   16840:	b	167f4 <dcngettext@plt+0x5804>
   16844:	cmp	r2, #0
   16848:	cmpne	r1, #0
   1684c:	str	r4, [sp, #-8]!
   16850:	moveq	r2, #1
   16854:	str	lr, [sp, #4]
   16858:	moveq	r1, r2
   1685c:	bl	17000 <dcngettext@plt+0x6010>
   16860:	cmp	r0, #0
   16864:	beq	16874 <dcngettext@plt+0x5884>
   16868:	ldr	r4, [sp]
   1686c:	add	sp, sp, #4
   16870:	pop	{pc}		; (ldr pc, [sp], #4)
   16874:	bl	16b88 <dcngettext@plt+0x5b98>
   16878:	mov	r2, r1
   1687c:	mov	r1, r0
   16880:	mov	r0, #0
   16884:	b	167f4 <dcngettext@plt+0x5804>
   16888:	mov	r2, r1
   1688c:	mov	r1, r0
   16890:	mov	r0, #0
   16894:	b	16844 <dcngettext@plt+0x5854>
   16898:	cmp	r0, #0
   1689c:	strd	r4, [sp, #-16]!
   168a0:	mov	r5, r1
   168a4:	ldr	r4, [r1]
   168a8:	str	r6, [sp, #8]
   168ac:	str	lr, [sp, #12]
   168b0:	beq	168e0 <dcngettext@plt+0x58f0>
   168b4:	lsr	r3, r4, #1
   168b8:	add	r3, r3, #1
   168bc:	adds	r4, r4, r3
   168c0:	bcs	168fc <dcngettext@plt+0x590c>
   168c4:	mov	r1, r4
   168c8:	bl	167f4 <dcngettext@plt+0x5804>
   168cc:	ldr	r6, [sp, #8]
   168d0:	str	r4, [r5]
   168d4:	ldrd	r4, [sp]
   168d8:	add	sp, sp, #12
   168dc:	pop	{pc}		; (ldr pc, [sp], #4)
   168e0:	cmp	r4, #0
   168e4:	bne	168c4 <dcngettext@plt+0x58d4>
   168e8:	mov	r4, #64	; 0x40
   168ec:	udiv	r4, r4, r2
   168f0:	cmp	r2, #64	; 0x40
   168f4:	addhi	r4, r4, #1
   168f8:	b	168c4 <dcngettext@plt+0x58d4>
   168fc:	bl	16b88 <dcngettext@plt+0x5b98>
   16900:	mov	r2, #1
   16904:	b	16898 <dcngettext@plt+0x58a8>
   16908:	ldr	ip, [r1]
   1690c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16910:	mov	r5, r1
   16914:	strd	r6, [sp, #8]
   16918:	str	lr, [sp, #28]
   1691c:	strd	r8, [sp, #16]
   16920:	asr	lr, ip, #1
   16924:	ldr	r8, [sp, #32]
   16928:	str	sl, [sp, #24]
   1692c:	adds	r4, ip, lr
   16930:	mvn	lr, r3
   16934:	lsr	lr, lr, #31
   16938:	mvnvs	r4, #-2147483648	; 0x80000000
   1693c:	cmp	r3, r4
   16940:	movge	r1, #0
   16944:	andlt	r1, lr, #1
   16948:	cmp	r1, #0
   1694c:	movne	r4, r3
   16950:	smull	r6, r7, r4, r8
   16954:	cmp	r7, r6, asr #31
   16958:	bne	169e0 <dcngettext@plt+0x59f0>
   1695c:	cmp	r6, #63	; 0x3f
   16960:	mov	r1, r6
   16964:	ble	169c8 <dcngettext@plt+0x59d8>
   16968:	cmp	r0, #0
   1696c:	sub	r6, r4, ip
   16970:	streq	r0, [r5]
   16974:	cmp	r6, r2
   16978:	bge	169a8 <dcngettext@plt+0x59b8>
   1697c:	adds	r4, ip, r2
   16980:	bvs	169dc <dcngettext@plt+0x59ec>
   16984:	cmp	r4, r3
   16988:	movle	r3, #0
   1698c:	andgt	r3, lr, #1
   16990:	cmp	r3, #0
   16994:	bne	169dc <dcngettext@plt+0x59ec>
   16998:	smull	r8, r9, r4, r8
   1699c:	cmp	r9, r8, asr #31
   169a0:	mov	r1, r8
   169a4:	bne	169dc <dcngettext@plt+0x59ec>
   169a8:	bl	1677c <dcngettext@plt+0x578c>
   169ac:	ldrd	r6, [sp, #8]
   169b0:	ldrd	r8, [sp, #16]
   169b4:	ldr	sl, [sp, #24]
   169b8:	str	r4, [r5]
   169bc:	ldrd	r4, [sp]
   169c0:	add	sp, sp, #28
   169c4:	pop	{pc}		; (ldr pc, [sp], #4)
   169c8:	mov	r6, #64	; 0x40
   169cc:	sdiv	r4, r6, r8
   169d0:	mls	r1, r8, r4, r6
   169d4:	sub	r1, r6, r1
   169d8:	b	16968 <dcngettext@plt+0x5978>
   169dc:	bl	16b88 <dcngettext@plt+0x5b98>
   169e0:	mvn	r6, #-2147483648	; 0x80000000
   169e4:	b	169cc <dcngettext@plt+0x59dc>
   169e8:	mov	r1, #1
   169ec:	str	r4, [sp, #-8]!
   169f0:	str	lr, [sp, #4]
   169f4:	bl	16bcc <dcngettext@plt+0x5bdc>
   169f8:	cmp	r0, #0
   169fc:	beq	16a0c <dcngettext@plt+0x5a1c>
   16a00:	ldr	r4, [sp]
   16a04:	add	sp, sp, #4
   16a08:	pop	{pc}		; (ldr pc, [sp], #4)
   16a0c:	bl	16b88 <dcngettext@plt+0x5b98>
   16a10:	mov	r1, #1
   16a14:	str	r4, [sp, #-8]!
   16a18:	str	lr, [sp, #4]
   16a1c:	bl	16bcc <dcngettext@plt+0x5bdc>
   16a20:	cmp	r0, #0
   16a24:	beq	16a34 <dcngettext@plt+0x5a44>
   16a28:	ldr	r4, [sp]
   16a2c:	add	sp, sp, #4
   16a30:	pop	{pc}		; (ldr pc, [sp], #4)
   16a34:	bl	16b88 <dcngettext@plt+0x5b98>
   16a38:	str	r4, [sp, #-8]!
   16a3c:	str	lr, [sp, #4]
   16a40:	bl	16bcc <dcngettext@plt+0x5bdc>
   16a44:	cmp	r0, #0
   16a48:	beq	16a58 <dcngettext@plt+0x5a68>
   16a4c:	ldr	r4, [sp]
   16a50:	add	sp, sp, #4
   16a54:	pop	{pc}		; (ldr pc, [sp], #4)
   16a58:	bl	16b88 <dcngettext@plt+0x5b98>
   16a5c:	str	r4, [sp, #-8]!
   16a60:	str	lr, [sp, #4]
   16a64:	bl	16bcc <dcngettext@plt+0x5bdc>
   16a68:	cmp	r0, #0
   16a6c:	beq	16a7c <dcngettext@plt+0x5a8c>
   16a70:	ldr	r4, [sp]
   16a74:	add	sp, sp, #4
   16a78:	pop	{pc}		; (ldr pc, [sp], #4)
   16a7c:	bl	16b88 <dcngettext@plt+0x5b98>
   16a80:	strd	r4, [sp, #-16]!
   16a84:	mov	r4, r1
   16a88:	str	r6, [sp, #8]
   16a8c:	mov	r6, r0
   16a90:	mov	r0, r1
   16a94:	str	lr, [sp, #12]
   16a98:	bl	16c40 <dcngettext@plt+0x5c50>
   16a9c:	subs	r5, r0, #0
   16aa0:	beq	16ac4 <dcngettext@plt+0x5ad4>
   16aa4:	mov	r2, r4
   16aa8:	mov	r1, r6
   16aac:	bl	10dc8 <memcpy@plt>
   16ab0:	mov	r0, r5
   16ab4:	ldrd	r4, [sp]
   16ab8:	ldr	r6, [sp, #8]
   16abc:	add	sp, sp, #12
   16ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ac4:	bl	16b88 <dcngettext@plt+0x5b98>
   16ac8:	strd	r4, [sp, #-16]!
   16acc:	mov	r4, r1
   16ad0:	str	r6, [sp, #8]
   16ad4:	mov	r6, r0
   16ad8:	mov	r0, r1
   16adc:	str	lr, [sp, #12]
   16ae0:	bl	16c40 <dcngettext@plt+0x5c50>
   16ae4:	subs	r5, r0, #0
   16ae8:	beq	16b0c <dcngettext@plt+0x5b1c>
   16aec:	mov	r2, r4
   16af0:	mov	r1, r6
   16af4:	bl	10dc8 <memcpy@plt>
   16af8:	mov	r0, r5
   16afc:	ldrd	r4, [sp]
   16b00:	ldr	r6, [sp, #8]
   16b04:	add	sp, sp, #12
   16b08:	pop	{pc}		; (ldr pc, [sp], #4)
   16b0c:	bl	16b88 <dcngettext@plt+0x5b98>
   16b10:	strd	r4, [sp, #-16]!
   16b14:	mov	r4, r1
   16b18:	str	r6, [sp, #8]
   16b1c:	mov	r6, r0
   16b20:	add	r0, r1, #1
   16b24:	str	lr, [sp, #12]
   16b28:	bl	16c40 <dcngettext@plt+0x5c50>
   16b2c:	subs	r5, r0, #0
   16b30:	beq	16b5c <dcngettext@plt+0x5b6c>
   16b34:	mov	r3, #0
   16b38:	mov	r1, r6
   16b3c:	mov	r2, r4
   16b40:	strb	r3, [r5, r4]
   16b44:	bl	10dc8 <memcpy@plt>
   16b48:	mov	r0, r5
   16b4c:	ldrd	r4, [sp]
   16b50:	ldr	r6, [sp, #8]
   16b54:	add	sp, sp, #12
   16b58:	pop	{pc}		; (ldr pc, [sp], #4)
   16b5c:	bl	16b88 <dcngettext@plt+0x5b98>
   16b60:	str	r4, [sp, #-8]!
   16b64:	mov	r4, r0
   16b68:	str	lr, [sp, #4]
   16b6c:	bl	10edc <strlen@plt>
   16b70:	add	r1, r0, #1
   16b74:	mov	r0, r4
   16b78:	ldr	r4, [sp]
   16b7c:	ldr	lr, [sp, #4]
   16b80:	add	sp, sp, #8
   16b84:	b	16a80 <dcngettext@plt+0x5a90>
   16b88:	movw	r3, #37128	; 0x9108
   16b8c:	movt	r3, #2
   16b90:	str	r4, [sp, #-8]!
   16b94:	ldr	r4, [r3]
   16b98:	mov	r2, #5
   16b9c:	movw	r1, #34088	; 0x8528
   16ba0:	movt	r1, #1
   16ba4:	mov	r0, #0
   16ba8:	str	lr, [sp, #4]
   16bac:	bl	10e04 <dcgettext@plt>
   16bb0:	mov	r3, r0
   16bb4:	movw	r2, #32940	; 0x80ac
   16bb8:	movt	r2, #1
   16bbc:	mov	r1, #0
   16bc0:	mov	r0, r4
   16bc4:	bl	10e70 <error@plt>
   16bc8:	bl	10fd8 <abort@plt>
   16bcc:	cmp	r1, #0
   16bd0:	cmpne	r0, #0
   16bd4:	beq	16c20 <dcngettext@plt+0x5c30>
   16bd8:	strd	r4, [sp, #-16]!
   16bdc:	umull	r4, r5, r0, r1
   16be0:	str	r6, [sp, #8]
   16be4:	str	lr, [sp, #12]
   16be8:	adds	r3, r5, #0
   16bec:	movne	r3, #1
   16bf0:	cmp	r4, #0
   16bf4:	blt	16c00 <dcngettext@plt+0x5c10>
   16bf8:	cmp	r3, #0
   16bfc:	beq	16c2c <dcngettext@plt+0x5c3c>
   16c00:	bl	10ef4 <__errno_location@plt>
   16c04:	mov	r3, #12
   16c08:	ldrd	r4, [sp]
   16c0c:	ldr	r6, [sp, #8]
   16c10:	add	sp, sp, #12
   16c14:	str	r3, [r0]
   16c18:	mov	r0, #0
   16c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c20:	mov	r1, #1
   16c24:	mov	r0, r1
   16c28:	b	10d5c <calloc@plt>
   16c2c:	ldrd	r4, [sp]
   16c30:	ldr	r6, [sp, #8]
   16c34:	ldr	lr, [sp, #12]
   16c38:	add	sp, sp, #16
   16c3c:	b	10d5c <calloc@plt>
   16c40:	cmp	r0, #0
   16c44:	beq	16c50 <dcngettext@plt+0x5c60>
   16c48:	blt	16c58 <dcngettext@plt+0x5c68>
   16c4c:	b	10e7c <malloc@plt>
   16c50:	mov	r0, #1
   16c54:	b	10e7c <malloc@plt>
   16c58:	str	r4, [sp, #-8]!
   16c5c:	str	lr, [sp, #4]
   16c60:	bl	10ef4 <__errno_location@plt>
   16c64:	mov	r3, #12
   16c68:	ldr	r4, [sp]
   16c6c:	add	sp, sp, #4
   16c70:	str	r3, [r0]
   16c74:	mov	r0, #0
   16c78:	pop	{pc}		; (ldr pc, [sp], #4)
   16c7c:	cmp	r0, #0
   16c80:	beq	16ca8 <dcngettext@plt+0x5cb8>
   16c84:	cmp	r1, #0
   16c88:	str	r4, [sp, #-8]!
   16c8c:	str	lr, [sp, #4]
   16c90:	beq	16cb0 <dcngettext@plt+0x5cc0>
   16c94:	blt	16cc4 <dcngettext@plt+0x5cd4>
   16c98:	ldr	r4, [sp]
   16c9c:	ldr	lr, [sp, #4]
   16ca0:	add	sp, sp, #8
   16ca4:	b	10e10 <realloc@plt>
   16ca8:	mov	r0, r1
   16cac:	b	16c40 <dcngettext@plt+0x5c50>
   16cb0:	bl	13d38 <dcngettext@plt+0x2d48>
   16cb4:	ldr	r4, [sp]
   16cb8:	add	sp, sp, #4
   16cbc:	mov	r0, #0
   16cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   16cc4:	bl	10ef4 <__errno_location@plt>
   16cc8:	mov	r3, #12
   16ccc:	str	r3, [r0]
   16cd0:	b	16cb4 <dcngettext@plt+0x5cc4>
   16cd4:	strd	r4, [sp, #-16]!
   16cd8:	mov	r4, r0
   16cdc:	str	r6, [sp, #8]
   16ce0:	str	lr, [sp, #12]
   16ce4:	bl	10e58 <__fpending@plt>
   16ce8:	ldr	r5, [r4]
   16cec:	mov	r6, r0
   16cf0:	mov	r0, r4
   16cf4:	bl	13b78 <dcngettext@plt+0x2b88>
   16cf8:	mov	r4, r0
   16cfc:	and	r5, r5, #32
   16d00:	cmp	r5, #0
   16d04:	bne	16d3c <dcngettext@plt+0x5d4c>
   16d08:	cmp	r0, #0
   16d0c:	beq	16d28 <dcngettext@plt+0x5d38>
   16d10:	cmp	r6, #0
   16d14:	bne	16d54 <dcngettext@plt+0x5d64>
   16d18:	bl	10ef4 <__errno_location@plt>
   16d1c:	ldr	r4, [r0]
   16d20:	subs	r4, r4, #9
   16d24:	mvnne	r4, #0
   16d28:	mov	r0, r4
   16d2c:	ldrd	r4, [sp]
   16d30:	ldr	r6, [sp, #8]
   16d34:	add	sp, sp, #12
   16d38:	pop	{pc}		; (ldr pc, [sp], #4)
   16d3c:	cmp	r0, #0
   16d40:	bne	16d54 <dcngettext@plt+0x5d64>
   16d44:	bl	10ef4 <__errno_location@plt>
   16d48:	str	r4, [r0]
   16d4c:	mvn	r4, #0
   16d50:	b	16d28 <dcngettext@plt+0x5d38>
   16d54:	mvn	r4, #0
   16d58:	b	16d28 <dcngettext@plt+0x5d38>
   16d5c:	push	{r1, r2, r3}
   16d60:	strd	r4, [sp, #-20]!	; 0xffffffec
   16d64:	strd	r6, [sp, #8]
   16d68:	str	lr, [sp, #16]
   16d6c:	sub	sp, sp, #8
   16d70:	ldr	r1, [sp, #28]
   16d74:	add	r2, sp, #32
   16d78:	str	r2, [sp, #4]
   16d7c:	cmp	r1, #0
   16d80:	beq	16e5c <dcngettext@plt+0x5e6c>
   16d84:	movw	r3, #1030	; 0x406
   16d88:	mov	r6, r0
   16d8c:	cmp	r1, r3
   16d90:	beq	16e6c <dcngettext@plt+0x5e7c>
   16d94:	cmp	r1, #11
   16d98:	beq	16e14 <dcngettext@plt+0x5e24>
   16d9c:	ble	16df4 <dcngettext@plt+0x5e04>
   16da0:	movw	r2, #1031	; 0x407
   16da4:	cmp	r1, r2
   16da8:	bgt	16e30 <dcngettext@plt+0x5e40>
   16dac:	cmp	r1, r3
   16db0:	bge	16dc0 <dcngettext@plt+0x5dd0>
   16db4:	movw	r3, #1025	; 0x401
   16db8:	cmp	r1, r3
   16dbc:	beq	16e14 <dcngettext@plt+0x5e24>
   16dc0:	ldr	r3, [sp, #4]
   16dc4:	mov	r0, r6
   16dc8:	ldr	r2, [r3]
   16dcc:	bl	10f60 <fcntl64@plt>
   16dd0:	mov	r4, r0
   16dd4:	mov	r0, r4
   16dd8:	add	sp, sp, #8
   16ddc:	ldrd	r4, [sp]
   16de0:	ldrd	r6, [sp, #8]
   16de4:	ldr	lr, [sp, #16]
   16de8:	add	sp, sp, #20
   16dec:	add	sp, sp, #12
   16df0:	bx	lr
   16df4:	cmp	r1, #4
   16df8:	beq	16dc0 <dcngettext@plt+0x5dd0>
   16dfc:	bgt	16e24 <dcngettext@plt+0x5e34>
   16e00:	cmp	r1, #2
   16e04:	beq	16dc0 <dcngettext@plt+0x5dd0>
   16e08:	bgt	16e14 <dcngettext@plt+0x5e24>
   16e0c:	cmp	r1, #1
   16e10:	bne	16dc0 <dcngettext@plt+0x5dd0>
   16e14:	mov	r0, r6
   16e18:	bl	10f60 <fcntl64@plt>
   16e1c:	mov	r4, r0
   16e20:	b	16dd4 <dcngettext@plt+0x5de4>
   16e24:	cmp	r1, #9
   16e28:	bne	16dc0 <dcngettext@plt+0x5dd0>
   16e2c:	b	16e14 <dcngettext@plt+0x5e24>
   16e30:	movw	r3, #1033	; 0x409
   16e34:	cmp	r1, r3
   16e38:	beq	16dc0 <dcngettext@plt+0x5dd0>
   16e3c:	blt	16e14 <dcngettext@plt+0x5e24>
   16e40:	movw	r3, #1034	; 0x40a
   16e44:	cmp	r1, r3
   16e48:	bne	16dc0 <dcngettext@plt+0x5dd0>
   16e4c:	mov	r0, r6
   16e50:	bl	10f60 <fcntl64@plt>
   16e54:	mov	r4, r0
   16e58:	b	16dd4 <dcngettext@plt+0x5de4>
   16e5c:	ldr	r2, [sp, #32]
   16e60:	bl	10f60 <fcntl64@plt>
   16e64:	mov	r4, r0
   16e68:	b	16dd4 <dcngettext@plt+0x5de4>
   16e6c:	movw	r5, #37568	; 0x92c0
   16e70:	movt	r5, #2
   16e74:	ldr	r7, [r2]
   16e78:	add	r2, sp, #36	; 0x24
   16e7c:	ldr	r3, [r5]
   16e80:	str	r2, [sp, #4]
   16e84:	mov	r2, r7
   16e88:	cmp	r3, #0
   16e8c:	blt	16ea8 <dcngettext@plt+0x5eb8>
   16e90:	bl	10f60 <fcntl64@plt>
   16e94:	subs	r4, r0, #0
   16e98:	blt	16f10 <dcngettext@plt+0x5f20>
   16e9c:	mov	r3, #1
   16ea0:	str	r3, [r5]
   16ea4:	b	16dd4 <dcngettext@plt+0x5de4>
   16ea8:	mov	r1, #0
   16eac:	bl	10f60 <fcntl64@plt>
   16eb0:	subs	r4, r0, #0
   16eb4:	blt	16dd4 <dcngettext@plt+0x5de4>
   16eb8:	ldr	r3, [r5]
   16ebc:	cmn	r3, #1
   16ec0:	bne	16dd4 <dcngettext@plt+0x5de4>
   16ec4:	mov	r1, #1
   16ec8:	mov	r0, r4
   16ecc:	bl	10f60 <fcntl64@plt>
   16ed0:	subs	r2, r0, #0
   16ed4:	blt	16ef0 <dcngettext@plt+0x5f00>
   16ed8:	orr	r2, r2, #1
   16edc:	mov	r1, #2
   16ee0:	mov	r0, r4
   16ee4:	bl	10f60 <fcntl64@plt>
   16ee8:	cmn	r0, #1
   16eec:	bne	16dd4 <dcngettext@plt+0x5de4>
   16ef0:	bl	10ef4 <__errno_location@plt>
   16ef4:	mov	r5, r0
   16ef8:	mov	r0, r4
   16efc:	ldr	r6, [r5]
   16f00:	mvn	r4, #0
   16f04:	bl	10fe4 <close@plt>
   16f08:	str	r6, [r5]
   16f0c:	b	16dd4 <dcngettext@plt+0x5de4>
   16f10:	bl	10ef4 <__errno_location@plt>
   16f14:	ldr	r3, [r0]
   16f18:	cmp	r3, #22
   16f1c:	bne	16e9c <dcngettext@plt+0x5eac>
   16f20:	mov	r2, r7
   16f24:	mov	r0, r6
   16f28:	mov	r1, #0
   16f2c:	bl	10f60 <fcntl64@plt>
   16f30:	subs	r4, r0, #0
   16f34:	mvnge	r3, #0
   16f38:	strge	r3, [r5]
   16f3c:	bge	16ec4 <dcngettext@plt+0x5ed4>
   16f40:	b	16dd4 <dcngettext@plt+0x5de4>
   16f44:	mov	r0, #14
   16f48:	str	r4, [sp, #-8]!
   16f4c:	str	lr, [sp, #4]
   16f50:	bl	10f90 <nl_langinfo@plt>
   16f54:	cmp	r0, #0
   16f58:	beq	16f7c <dcngettext@plt+0x5f8c>
   16f5c:	ldrb	r2, [r0]
   16f60:	movw	r3, #34108	; 0x853c
   16f64:	movt	r3, #1
   16f68:	ldr	r4, [sp]
   16f6c:	add	sp, sp, #4
   16f70:	cmp	r2, #0
   16f74:	moveq	r0, r3
   16f78:	pop	{pc}		; (ldr pc, [sp], #4)
   16f7c:	ldr	r4, [sp]
   16f80:	add	sp, sp, #4
   16f84:	movw	r0, #34108	; 0x853c
   16f88:	movt	r0, #1
   16f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f90:	strd	r4, [sp, #-20]!	; 0xffffffec
   16f94:	mov	r5, r2
   16f98:	strd	r6, [sp, #8]
   16f9c:	subs	r6, r0, #0
   16fa0:	mov	r7, r1
   16fa4:	str	lr, [sp, #16]
   16fa8:	sub	sp, sp, #12
   16fac:	addeq	r6, sp, #4
   16fb0:	mov	r0, r6
   16fb4:	bl	10e64 <mbrtowc@plt>
   16fb8:	cmp	r5, #0
   16fbc:	cmnne	r0, #3
   16fc0:	mov	r4, r0
   16fc4:	bhi	16fe0 <dcngettext@plt+0x5ff0>
   16fc8:	mov	r0, r4
   16fcc:	add	sp, sp, #12
   16fd0:	ldrd	r4, [sp]
   16fd4:	ldrd	r6, [sp, #8]
   16fd8:	add	sp, sp, #16
   16fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fe0:	mov	r0, #0
   16fe4:	bl	17038 <dcngettext@plt+0x6048>
   16fe8:	cmp	r0, #0
   16fec:	bne	16fc8 <dcngettext@plt+0x5fd8>
   16ff0:	ldrb	r3, [r7]
   16ff4:	mov	r4, #1
   16ff8:	str	r3, [r6]
   16ffc:	b	16fc8 <dcngettext@plt+0x5fd8>
   17000:	umull	r2, r3, r1, r2
   17004:	cmp	r3, #0
   17008:	bne	17014 <dcngettext@plt+0x6024>
   1700c:	mov	r1, r2
   17010:	b	16c7c <dcngettext@plt+0x5c8c>
   17014:	str	r4, [sp, #-8]!
   17018:	str	lr, [sp, #4]
   1701c:	bl	10ef4 <__errno_location@plt>
   17020:	mov	r3, #12
   17024:	ldr	r4, [sp]
   17028:	add	sp, sp, #4
   1702c:	str	r3, [r0]
   17030:	mov	r0, #0
   17034:	pop	{pc}		; (ldr pc, [sp], #4)
   17038:	push	{lr}		; (str lr, [sp, #-4]!)
   1703c:	sub	sp, sp, #268	; 0x10c
   17040:	movw	r2, #257	; 0x101
   17044:	add	r1, sp, #4
   17048:	bl	17090 <dcngettext@plt+0x60a0>
   1704c:	cmp	r0, #0
   17050:	movne	r0, #0
   17054:	bne	17088 <dcngettext@plt+0x6098>
   17058:	movw	r1, #34116	; 0x8544
   1705c:	movt	r1, #1
   17060:	add	r0, sp, #4
   17064:	bl	10d8c <strcmp@plt>
   17068:	cmp	r0, #0
   1706c:	beq	17088 <dcngettext@plt+0x6098>
   17070:	add	r0, sp, #4
   17074:	movw	r1, #34120	; 0x8548
   17078:	movt	r1, #1
   1707c:	bl	10d8c <strcmp@plt>
   17080:	adds	r0, r0, #0
   17084:	movne	r0, #1
   17088:	add	sp, sp, #268	; 0x10c
   1708c:	pop	{pc}		; (ldr pc, [sp], #4)
   17090:	strd	r4, [sp, #-16]!
   17094:	mov	r5, r1
   17098:	mov	r1, #0
   1709c:	mov	r4, r2
   170a0:	str	r6, [sp, #8]
   170a4:	str	lr, [sp, #12]
   170a8:	bl	10f78 <setlocale@plt>
   170ac:	subs	r6, r0, #0
   170b0:	beq	17130 <dcngettext@plt+0x6140>
   170b4:	bl	10edc <strlen@plt>
   170b8:	cmp	r4, r0
   170bc:	bhi	170dc <dcngettext@plt+0x60ec>
   170c0:	cmp	r4, #0
   170c4:	moveq	r0, #34	; 0x22
   170c8:	bne	17100 <dcngettext@plt+0x6110>
   170cc:	ldrd	r4, [sp]
   170d0:	ldr	r6, [sp, #8]
   170d4:	add	sp, sp, #12
   170d8:	pop	{pc}		; (ldr pc, [sp], #4)
   170dc:	add	r2, r0, #1
   170e0:	mov	r1, r6
   170e4:	mov	r0, r5
   170e8:	bl	10dc8 <memcpy@plt>
   170ec:	ldrd	r4, [sp]
   170f0:	mov	r0, #0
   170f4:	ldr	r6, [sp, #8]
   170f8:	add	sp, sp, #12
   170fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17100:	sub	r4, r4, #1
   17104:	mov	r1, r6
   17108:	mov	r2, r4
   1710c:	mov	r0, r5
   17110:	bl	10dc8 <memcpy@plt>
   17114:	mov	r3, #0
   17118:	mov	r0, #34	; 0x22
   1711c:	strb	r3, [r5, r4]
   17120:	ldrd	r4, [sp]
   17124:	ldr	r6, [sp, #8]
   17128:	add	sp, sp, #12
   1712c:	pop	{pc}		; (ldr pc, [sp], #4)
   17130:	cmp	r4, #0
   17134:	mov	r0, #22
   17138:	strbne	r6, [r5]
   1713c:	ldrd	r4, [sp]
   17140:	ldr	r6, [sp, #8]
   17144:	add	sp, sp, #12
   17148:	pop	{pc}		; (ldr pc, [sp], #4)
   1714c:	mov	r1, #0
   17150:	b	10f78 <setlocale@plt>
   17154:	cmp	r3, #0
   17158:	cmpeq	r2, #0
   1715c:	bne	17174 <dcngettext@plt+0x6184>
   17160:	cmp	r1, #0
   17164:	cmpeq	r0, #0
   17168:	mvnne	r1, #0
   1716c:	mvnne	r0, #0
   17170:	b	17190 <dcngettext@plt+0x61a0>
   17174:	sub	sp, sp, #8
   17178:	push	{sp, lr}
   1717c:	bl	171a0 <dcngettext@plt+0x61b0>
   17180:	ldr	lr, [sp, #4]
   17184:	add	sp, sp, #8
   17188:	pop	{r2, r3}
   1718c:	bx	lr
   17190:	push	{r1, lr}
   17194:	mov	r0, #8
   17198:	bl	10d74 <raise@plt>
   1719c:	pop	{r1, pc}
   171a0:	cmp	r1, r3
   171a4:	cmpeq	r0, r2
   171a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171ac:	mov	r4, r0
   171b0:	movcc	r0, #0
   171b4:	mov	r5, r1
   171b8:	ldr	lr, [sp, #36]	; 0x24
   171bc:	movcc	r1, r0
   171c0:	bcc	172bc <dcngettext@plt+0x62cc>
   171c4:	cmp	r3, #0
   171c8:	clzeq	ip, r2
   171cc:	clzne	ip, r3
   171d0:	addeq	ip, ip, #32
   171d4:	cmp	r5, #0
   171d8:	clzeq	r1, r4
   171dc:	addeq	r1, r1, #32
   171e0:	clzne	r1, r5
   171e4:	sub	ip, ip, r1
   171e8:	sub	sl, ip, #32
   171ec:	lsl	r9, r3, ip
   171f0:	rsb	fp, ip, #32
   171f4:	orr	r9, r9, r2, lsl sl
   171f8:	orr	r9, r9, r2, lsr fp
   171fc:	lsl	r8, r2, ip
   17200:	cmp	r5, r9
   17204:	cmpeq	r4, r8
   17208:	movcc	r0, #0
   1720c:	movcc	r1, r0
   17210:	bcc	1722c <dcngettext@plt+0x623c>
   17214:	mov	r0, #1
   17218:	subs	r4, r4, r8
   1721c:	lsl	r1, r0, sl
   17220:	orr	r1, r1, r0, lsr fp
   17224:	lsl	r0, r0, ip
   17228:	sbc	r5, r5, r9
   1722c:	cmp	ip, #0
   17230:	beq	172bc <dcngettext@plt+0x62cc>
   17234:	lsr	r6, r8, #1
   17238:	orr	r6, r6, r9, lsl #31
   1723c:	lsr	r7, r9, #1
   17240:	mov	r2, ip
   17244:	b	17268 <dcngettext@plt+0x6278>
   17248:	subs	r3, r4, r6
   1724c:	sbc	r8, r5, r7
   17250:	adds	r3, r3, r3
   17254:	adc	r8, r8, r8
   17258:	adds	r4, r3, #1
   1725c:	adc	r5, r8, #0
   17260:	subs	r2, r2, #1
   17264:	beq	17284 <dcngettext@plt+0x6294>
   17268:	cmp	r5, r7
   1726c:	cmpeq	r4, r6
   17270:	bcs	17248 <dcngettext@plt+0x6258>
   17274:	adds	r4, r4, r4
   17278:	adc	r5, r5, r5
   1727c:	subs	r2, r2, #1
   17280:	bne	17268 <dcngettext@plt+0x6278>
   17284:	lsr	r3, r4, ip
   17288:	orr	r3, r3, r5, lsl fp
   1728c:	lsr	r2, r5, ip
   17290:	orr	r3, r3, r5, lsr sl
   17294:	adds	r0, r0, r4
   17298:	mov	r4, r3
   1729c:	lsl	r3, r2, ip
   172a0:	orr	r3, r3, r4, lsl sl
   172a4:	lsl	ip, r4, ip
   172a8:	orr	r3, r3, r4, lsr fp
   172ac:	adc	r1, r1, r5
   172b0:	subs	r0, r0, ip
   172b4:	mov	r5, r2
   172b8:	sbc	r1, r1, r3
   172bc:	cmp	lr, #0
   172c0:	strdne	r4, [lr]
   172c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172cc:	mov	r7, r0
   172d0:	ldr	r6, [pc, #72]	; 17320 <dcngettext@plt+0x6330>
   172d4:	ldr	r5, [pc, #72]	; 17324 <dcngettext@plt+0x6334>
   172d8:	add	r6, pc, r6
   172dc:	add	r5, pc, r5
   172e0:	sub	r6, r6, r5
   172e4:	mov	r8, r1
   172e8:	mov	r9, r2
   172ec:	bl	10d30 <fdopen@plt-0x20>
   172f0:	asrs	r6, r6, #2
   172f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   172f8:	mov	r4, #0
   172fc:	add	r4, r4, #1
   17300:	ldr	r3, [r5], #4
   17304:	mov	r2, r9
   17308:	mov	r1, r8
   1730c:	mov	r0, r7
   17310:	blx	r3
   17314:	cmp	r6, r4
   17318:	bne	172fc <dcngettext@plt+0x630c>
   1731c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17320:	andeq	r1, r1, r4, lsr ip
   17324:	andeq	r1, r1, ip, lsr #24
   17328:	bx	lr
   1732c:	ldr	r3, [pc, #12]	; 17340 <dcngettext@plt+0x6350>
   17330:	mov	r1, #0
   17334:	add	r3, pc, r3
   17338:	ldr	r2, [r3]
   1733c:	b	10f00 <__cxa_atexit@plt>
   17340:			; <UNDEFINED> instruction: 0x00011dbc

Disassembly of section .fini:

00017344 <.fini>:
   17344:	push	{r3, lr}
   17348:	pop	{r3, pc}
