
../repos/charybdis/extensions/.libs/chm_operpeace.so:     file format elf32-littlearm


Disassembly of section .init:

00000438 <_init>:
 438:	push	{r3, lr}
 43c:	bl	4ac <call_weak_fn>
 440:	pop	{r3, pc}

Disassembly of section .plt:

00000444 <.plt>:
 444:	push	{lr}		; (str lr, [sp, #-4]!)
 448:	ldr	lr, [pc, #4]	; 454 <.plt+0x10>
 44c:	add	lr, pc, lr
 450:	ldr	pc, [lr, #8]!
 454:	.word	0x00010bac

00000458 <cflag_add@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2988]!	; 0xbac

00000464 <__cxa_finalize@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2980]!	; 0xba4

00000470 <sendto_realops_snomask@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2972]!	; 0xb9c

0000047c <__gmon_start__@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2964]!	; 0xb94

00000488 <sendto_one_numeric@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2956]!	; 0xb8c

00000494 <privilegeset_in_set@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2948]!	; 0xb84

000004a0 <cflag_orphan@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2940]!	; 0xb7c

Disassembly of section .text:

000004ac <call_weak_fn>:
 4ac:	ldr	r3, [pc, #20]	; 4c8 <call_weak_fn+0x1c>
 4b0:	ldr	r2, [pc, #20]	; 4cc <call_weak_fn+0x20>
 4b4:	add	r3, pc, r3
 4b8:	ldr	r2, [r3, r2]
 4bc:	cmp	r2, #0
 4c0:	bxeq	lr
 4c4:	b	47c <__gmon_start__@plt>
 4c8:	.word	0x00010b44
 4cc:	.word	0x00000034

000004d0 <deregister_tm_clones>:
 4d0:	ldr	r0, [pc, #44]	; 504 <deregister_tm_clones+0x34>
 4d4:	ldr	r3, [pc, #44]	; 508 <deregister_tm_clones+0x38>
 4d8:	add	r0, pc, r0
 4dc:	add	r3, pc, r3
 4e0:	cmp	r3, r0
 4e4:	ldr	r3, [pc, #32]	; 50c <deregister_tm_clones+0x3c>
 4e8:	add	r3, pc, r3
 4ec:	bxeq	lr
 4f0:	ldr	r2, [pc, #24]	; 510 <deregister_tm_clones+0x40>
 4f4:	ldr	r3, [r3, r2]
 4f8:	cmp	r3, #0
 4fc:	bxeq	lr
 500:	bx	r3
 504:	.word	0x00010ba0
 508:	.word	0x00010b9c
 50c:	.word	0x00010b10
 510:	.word	0x0000002c

00000514 <register_tm_clones>:
 514:	ldr	r0, [pc, #56]	; 554 <register_tm_clones+0x40>
 518:	ldr	r3, [pc, #56]	; 558 <register_tm_clones+0x44>
 51c:	add	r0, pc, r0
 520:	add	r3, pc, r3
 524:	sub	r1, r3, r0
 528:	ldr	r3, [pc, #44]	; 55c <register_tm_clones+0x48>
 52c:	asr	r1, r1, #2
 530:	add	r3, pc, r3
 534:	add	r1, r1, r1, lsr #31
 538:	asrs	r1, r1, #1
 53c:	bxeq	lr
 540:	ldr	r2, [pc, #24]	; 560 <register_tm_clones+0x4c>
 544:	ldr	r3, [r3, r2]
 548:	cmp	r3, #0
 54c:	bxeq	lr
 550:	bx	r3
 554:	.word	0x00010b5c
 558:	.word	0x00010b58
 55c:	.word	0x00010ac8
 560:	.word	0x00000038

00000564 <__do_global_dtors_aux>:
 564:	ldr	r3, [pc, #76]	; 5b8 <__do_global_dtors_aux+0x54>
 568:	ldr	r2, [pc, #76]	; 5bc <__do_global_dtors_aux+0x58>
 56c:	add	r3, pc, r3
 570:	add	r2, pc, r2
 574:	ldrb	r3, [r3]
 578:	cmp	r3, #0
 57c:	bxne	lr
 580:	ldr	r3, [pc, #56]	; 5c0 <__do_global_dtors_aux+0x5c>
 584:	push	{r4, lr}
 588:	ldr	r3, [r2, r3]
 58c:	cmp	r3, #0
 590:	beq	5a0 <__do_global_dtors_aux+0x3c>
 594:	ldr	r3, [pc, #40]	; 5c4 <__do_global_dtors_aux+0x60>
 598:	ldr	r0, [pc, r3]
 59c:	bl	464 <__cxa_finalize@plt>
 5a0:	bl	4d0 <deregister_tm_clones>
 5a4:	ldr	r3, [pc, #28]	; 5c8 <__do_global_dtors_aux+0x64>
 5a8:	mov	r2, #1
 5ac:	add	r3, pc, r3
 5b0:	strb	r2, [r3]
 5b4:	pop	{r4, pc}
 5b8:	.word	0x00010b0c
 5bc:	.word	0x00010a88
 5c0:	.word	0x00000028
 5c4:	.word	0x00010a9c
 5c8:	.word	0x00010acc

000005cc <frame_dummy>:
 5cc:	b	514 <register_tm_clones>

000005d0 <hdl_can_kick>:
 5d0:	strd	r4, [sp, #-20]!	; 0xffffffec
 5d4:	strd	r6, [sp, #8]
 5d8:	str	lr, [sp, #16]
 5dc:	sub	sp, sp, #12
 5e0:	ldr	r5, [r0]
 5e4:	ldr	r3, [r5, #56]	; 0x38
 5e8:	tst	r3, #4096	; 0x1000
 5ec:	bne	644 <hdl_can_kick+0x74>
 5f0:	ldr	r6, [r0, #4]
 5f4:	ldr	r2, [r6, #12]
 5f8:	ldr	r3, [pc, #172]	; 6ac <hdl_can_kick+0xdc>
 5fc:	add	r3, pc, r3
 600:	ldr	r3, [r3]
 604:	tst	r2, r3
 608:	beq	644 <hdl_can_kick+0x74>
 60c:	ldr	r7, [r0, #12]
 610:	ldr	r2, [r7, #24]
 614:	cmp	r2, #0
 618:	beq	644 <hdl_can_kick+0x74>
 61c:	ldr	r3, [r2, #36]	; 0x24
 620:	cmp	r3, #0
 624:	beq	644 <hdl_can_kick+0x74>
 628:	mov	r4, r0
 62c:	ldr	r1, [pc, #124]	; 6b0 <hdl_can_kick+0xe0>
 630:	add	r1, pc, r1
 634:	mov	r0, r3
 638:	bl	494 <privilegeset_in_set@plt>
 63c:	cmp	r0, #0
 640:	bne	658 <hdl_can_kick+0x88>
 644:	add	sp, sp, #12
 648:	ldrd	r4, [sp]
 64c:	ldrd	r6, [sp, #8]
 650:	add	sp, sp, #16
 654:	pop	{pc}		; (ldr pc, [sp], #4)
 658:	add	r7, r7, #88	; 0x58
 65c:	ldr	r3, [r6, #236]	; 0xec
 660:	str	r3, [sp, #4]
 664:	str	r7, [sp]
 668:	add	r3, r5, #88	; 0x58
 66c:	ldr	r2, [pc, #64]	; 6b4 <hdl_can_kick+0xe4>
 670:	add	r2, pc, r2
 674:	mov	r1, #256	; 0x100
 678:	mov	r0, r1
 67c:	bl	470 <sendto_realops_snomask@plt>
 680:	ldr	r3, [r6, #236]	; 0xec
 684:	str	r3, [sp]
 688:	mov	r3, r7
 68c:	ldr	r2, [pc, #36]	; 6b8 <hdl_can_kick+0xe8>
 690:	add	r2, pc, r2
 694:	mov	r1, #484	; 0x1e4
 698:	mov	r0, r5
 69c:	bl	488 <sendto_one_numeric@plt>
 6a0:	mov	r3, #0
 6a4:	str	r3, [r4, #16]
 6a8:	b	644 <hdl_can_kick+0x74>
 6ac:	.word	0x00010a80
 6b0:	.word	0x00000140
 6b4:	.word	0x00000118
 6b8:	.word	0x00000128

000006bc <_moddeinit>:
 6bc:	str	r4, [sp, #-8]!
 6c0:	str	lr, [sp, #4]
 6c4:	mov	r0, #77	; 0x4d
 6c8:	bl	4a0 <cflag_orphan@plt>
 6cc:	ldr	r4, [sp]
 6d0:	add	sp, sp, #4
 6d4:	pop	{pc}		; (ldr pc, [sp], #4)

000006d8 <_modinit>:
 6d8:	push	{lr}		; (str lr, [sp, #-4]!)
 6dc:	sub	sp, sp, #12
 6e0:	ldr	r3, [pc, #56]	; 720 <_modinit+0x48>
 6e4:	add	r3, pc, r3
 6e8:	ldr	r2, [pc, #52]	; 724 <_modinit+0x4c>
 6ec:	ldr	r3, [r3, r2]
 6f0:	str	r3, [sp, #4]
 6f4:	mov	r1, r3
 6f8:	mov	r0, #77	; 0x4d
 6fc:	bl	458 <cflag_add@plt>
 700:	ldr	r3, [pc, #32]	; 728 <_modinit+0x50>
 704:	add	r3, pc, r3
 708:	str	r0, [r3]
 70c:	clz	r0, r0
 710:	lsr	r0, r0, #5
 714:	rsb	r0, r0, #0
 718:	add	sp, sp, #12
 71c:	pop	{pc}		; (ldr pc, [sp], #4)
 720:	.word	0x00010914
 724:	.word	0x00000030
 728:	.word	0x00010978

Disassembly of section .fini:

0000072c <_fini>:
 72c:	push	{r3, lr}
 730:	pop	{r3, pc}
