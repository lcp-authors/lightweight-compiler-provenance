
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b0c <.init>:
   10b0c:	push	{r3, lr}
   10b10:	bl	10c10 <_start@@Base+0x3c>
   10b14:	pop	{r3, pc}

Disassembly of section .plt:

00010b18 <calloc@plt-0x14>:
   10b18:	push	{lr}		; (str lr, [sp, #-4]!)
   10b1c:	ldr	lr, [pc, #4]	; 10b28 <calloc@plt-0x4>
   10b20:	add	lr, pc, lr
   10b24:	ldr	pc, [lr, #8]!
   10b28:	ldrdeq	r1, [r1], -r8

00010b2c <calloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b38 <strcmp@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b44 <free@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b50 <realloc@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b5c <fwrite@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b68 <strcpy@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b74 <puts@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b80 <malloc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b8c <__libc_start_main@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1176]!	; 0x498

00010b98 <__gmon_start__@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1168]!	; 0x490

00010ba4 <strlen@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1160]!	; 0x488

00010bb0 <fprintf@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1152]!	; 0x480

00010bbc <sprintf@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1144]!	; 0x478

00010bc8 <abort@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1136]!	; 0x470

Disassembly of section .text:

00010bd4 <_start@@Base>:
   10bd4:	mov	fp, #0
   10bd8:	mov	lr, #0
   10bdc:	pop	{r1}		; (ldr r1, [sp], #4)
   10be0:	mov	r2, sp
   10be4:	push	{r2}		; (str r2, [sp, #-4]!)
   10be8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bec:	ldr	ip, [pc, #16]	; 10c04 <_start@@Base+0x30>
   10bf0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf4:	ldr	r0, [pc, #12]	; 10c08 <_start@@Base+0x34>
   10bf8:	ldr	r3, [pc, #12]	; 10c0c <_start@@Base+0x38>
   10bfc:	bl	10b8c <__libc_start_main@plt>
   10c00:	bl	10bc8 <abort@plt>
   10c04:	strdeq	r1, [r1], -r0
   10c08:	andeq	r0, r1, r8, ror #29
   10c0c:	muleq	r1, r0, r9
   10c10:	ldr	r3, [pc, #20]	; 10c2c <_start@@Base+0x58>
   10c14:	ldr	r2, [pc, #20]	; 10c30 <_start@@Base+0x5c>
   10c18:	add	r3, pc, r3
   10c1c:	ldr	r2, [r3, r2]
   10c20:	cmp	r2, #0
   10c24:	bxeq	lr
   10c28:	b	10b98 <__gmon_start__@plt>
   10c2c:	andeq	r1, r1, r0, ror #7
   10c30:	andeq	r0, r0, r4, asr #32
   10c34:	ldr	r3, [pc, #28]	; 10c58 <_start@@Base+0x84>
   10c38:	ldr	r0, [pc, #28]	; 10c5c <_start@@Base+0x88>
   10c3c:	sub	r3, r3, r0
   10c40:	cmp	r3, #6
   10c44:	bxls	lr
   10c48:	ldr	r3, [pc, #16]	; 10c60 <_start@@Base+0x8c>
   10c4c:	cmp	r3, #0
   10c50:	bxeq	lr
   10c54:	bx	r3
   10c58:	muleq	r2, fp, r1
   10c5c:	muleq	r2, r8, r1
   10c60:	andeq	r0, r0, r0
   10c64:	ldr	r1, [pc, #36]	; 10c90 <_start@@Base+0xbc>
   10c68:	ldr	r0, [pc, #36]	; 10c94 <_start@@Base+0xc0>
   10c6c:	sub	r1, r1, r0
   10c70:	asr	r1, r1, #2
   10c74:	add	r1, r1, r1, lsr #31
   10c78:	asrs	r1, r1, #1
   10c7c:	bxeq	lr
   10c80:	ldr	r3, [pc, #16]	; 10c98 <_start@@Base+0xc4>
   10c84:	cmp	r3, #0
   10c88:	bxeq	lr
   10c8c:	bx	r3
   10c90:	muleq	r2, r8, r1
   10c94:	muleq	r2, r8, r1
   10c98:	andeq	r0, r0, r0
   10c9c:	push	{r4, lr}
   10ca0:	ldr	r4, [pc, #24]	; 10cc0 <_start@@Base+0xec>
   10ca4:	ldrb	r3, [r4]
   10ca8:	cmp	r3, #0
   10cac:	popne	{r4, pc}
   10cb0:	bl	10c34 <_start@@Base+0x60>
   10cb4:	mov	r3, #1
   10cb8:	strb	r3, [r4]
   10cbc:	pop	{r4, pc}
   10cc0:	muleq	r2, ip, r1
   10cc4:	ldr	r0, [pc, #40]	; 10cf4 <_start@@Base+0x120>
   10cc8:	ldr	r3, [r0]
   10ccc:	cmp	r3, #0
   10cd0:	bne	10cd8 <_start@@Base+0x104>
   10cd4:	b	10c64 <_start@@Base+0x90>
   10cd8:	ldr	r3, [pc, #24]	; 10cf8 <_start@@Base+0x124>
   10cdc:	cmp	r3, #0
   10ce0:	beq	10cd4 <_start@@Base+0x100>
   10ce4:	push	{r4, lr}
   10ce8:	blx	r3
   10cec:	pop	{r4, lr}
   10cf0:	b	10c64 <_start@@Base+0x90>
   10cf4:	andeq	r1, r2, r4, lsl pc
   10cf8:	andeq	r0, r0, r0

00010cfc <tira_carta@@Base>:
   10cfc:	push	{r4, r5, r6, r7, r8, lr}
   10d00:	mov	r7, r0
   10d04:	ldr	r3, [r1]
   10d08:	ldr	r0, [r3]
   10d0c:	ldr	r4, [r3, #4]
   10d10:	ldr	r8, [r7]
   10d14:	ldr	r6, [r8]
   10d18:	mov	r5, #0
   10d1c:	b	10d2c <tira_carta@@Base+0x30>
   10d20:	ldr	r0, [r4]
   10d24:	ldr	r4, [r4, #4]
   10d28:	add	r5, r5, #1
   10d2c:	mov	r1, r6
   10d30:	bl	10b38 <strcmp@plt>
   10d34:	cmp	r0, #0
   10d38:	bne	10d20 <tira_carta@@Base+0x24>
   10d3c:	mov	r1, r8
   10d40:	mov	r0, r7
   10d44:	bl	11748 <lista_remove@@Base>
   10d48:	mov	r0, r5
   10d4c:	pop	{r4, r5, r6, r7, r8, pc}

00010d50 <faz_jogada@@Base>:
   10d50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d54:	mov	r6, r0
   10d58:	mov	r9, r1
   10d5c:	mov	sl, r2
   10d60:	ldr	r4, [r0]
   10d64:	lsl	r0, r4, #2
   10d68:	bl	10b80 <malloc@plt>
   10d6c:	mov	r7, r0
   10d70:	cmp	r4, #0
   10d74:	ble	10df0 <faz_jogada@@Base+0xa0>
   10d78:	sub	r5, r0, #4
   10d7c:	mov	r8, r5
   10d80:	mov	r4, #0
   10d84:	mov	r1, sl
   10d88:	mov	r0, r9
   10d8c:	bl	10cfc <tira_carta@@Base>
   10d90:	str	r0, [r8, #4]!
   10d94:	add	r4, r4, #1
   10d98:	ldr	r0, [r6]
   10d9c:	cmp	r0, r4
   10da0:	bgt	10d84 <faz_jogada@@Base+0x34>
   10da4:	cmp	r0, #0
   10da8:	mvnle	r4, #0
   10dac:	ble	10ddc <faz_jogada@@Base+0x8c>
   10db0:	mvn	r4, #0
   10db4:	mov	r2, r4
   10db8:	mov	r3, #0
   10dbc:	ldr	r1, [r5, #4]!
   10dc0:	cmp	r1, r2
   10dc4:	movgt	r4, r3
   10dc8:	cmp	r1, r2
   10dcc:	movge	r2, r1
   10dd0:	add	r3, r3, #1
   10dd4:	cmp	r0, r3
   10dd8:	bne	10dbc <faz_jogada@@Base+0x6c>
   10ddc:	mov	r0, r7
   10de0:	bl	10b44 <free@plt>
   10de4:	ldr	r3, [r6, #8]
   10de8:	ldr	r0, [r3, r4, lsl #2]
   10dec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10df0:	mvn	r4, #0
   10df4:	b	10ddc <faz_jogada@@Base+0x8c>

00010df8 <numero_vitorias@@Base>:
   10df8:	push	{r4, r5, r6, r7, r8, lr}
   10dfc:	ldr	r5, [r0]
   10e00:	cmp	r5, #0
   10e04:	ble	10e3c <numero_vitorias@@Base+0x44>
   10e08:	mov	r6, r1
   10e0c:	ldr	r4, [r0, #8]
   10e10:	add	r5, r4, r5, lsl #2
   10e14:	mov	r7, #0
   10e18:	ldr	r1, [r4], #4
   10e1c:	mov	r0, r6
   10e20:	bl	10b38 <strcmp@plt>
   10e24:	cmp	r0, #0
   10e28:	addeq	r7, r7, #1
   10e2c:	cmp	r4, r5
   10e30:	bne	10e18 <numero_vitorias@@Base+0x20>
   10e34:	mov	r0, r7
   10e38:	pop	{r4, r5, r6, r7, r8, pc}
   10e3c:	mov	r7, #0
   10e40:	b	10e34 <numero_vitorias@@Base+0x3c>

00010e44 <insere_carta@@Base>:
   10e44:	push	{r4, lr}
   10e48:	sub	sp, sp, #8
   10e4c:	mov	r4, r0
   10e50:	cmp	r1, #7
   10e54:	ble	10eb4 <insere_carta@@Base+0x70>
   10e58:	cmp	r1, #8
   10e5c:	beq	10ec8 <insere_carta@@Base+0x84>
   10e60:	cmp	r1, #9
   10e64:	moveq	r3, #74	; 0x4a
   10e68:	strheq	r3, [sp, #4]
   10e6c:	beq	10e9c <insere_carta@@Base+0x58>
   10e70:	cmp	r1, #10
   10e74:	moveq	r3, #81	; 0x51
   10e78:	strheq	r3, [sp, #4]
   10e7c:	beq	10e9c <insere_carta@@Base+0x58>
   10e80:	cmp	r1, #11
   10e84:	moveq	r3, #75	; 0x4b
   10e88:	strheq	r3, [sp, #4]
   10e8c:	beq	10e9c <insere_carta@@Base+0x58>
   10e90:	cmp	r1, #12
   10e94:	moveq	r3, #65	; 0x41
   10e98:	strheq	r3, [sp, #4]
   10e9c:	ldr	r2, [r4]
   10ea0:	add	r1, sp, #4
   10ea4:	mov	r0, r4
   10ea8:	bl	116a8 <lista_insere@@Base>
   10eac:	add	sp, sp, #8
   10eb0:	pop	{r4, pc}
   10eb4:	add	r2, r1, #50	; 0x32
   10eb8:	ldr	r1, [pc, #32]	; 10ee0 <insere_carta@@Base+0x9c>
   10ebc:	add	r0, sp, #4
   10ec0:	bl	10bbc <sprintf@plt>
   10ec4:	b	10e9c <insere_carta@@Base+0x58>
   10ec8:	ldr	r3, [pc, #20]	; 10ee4 <insere_carta@@Base+0xa0>
   10ecc:	ldr	r3, [r3]
   10ed0:	strh	r3, [sp, #4]
   10ed4:	lsr	r3, r3, #16
   10ed8:	strb	r3, [sp, #6]
   10edc:	b	10e9c <insere_carta@@Base+0x58>
   10ee0:	andeq	r1, r1, r0, lsl #20
   10ee4:	andeq	r1, r1, r4, lsl #20

00010ee8 <main@@Base>:
   10ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10eec:	sub	sp, sp, #12
   10ef0:	bl	111b4 <vetor_novo@@Base>
   10ef4:	mov	r5, r0
   10ef8:	mov	r4, #0
   10efc:	ldr	r6, [pc, #644]	; 11188 <main@@Base+0x2a0>
   10f00:	mov	r2, r4
   10f04:	ldr	r1, [r6, r4, lsl #2]
   10f08:	mov	r0, r5
   10f0c:	bl	11310 <vetor_insere@@Base>
   10f10:	add	r4, r4, #1
   10f14:	cmp	r4, #4
   10f18:	bne	10f00 <main@@Base+0x18>
   10f1c:	bl	1160c <lista_nova@@Base>
   10f20:	mov	r4, r0
   10f24:	ldr	r7, [pc, #604]	; 11188 <main@@Base+0x2a0>
   10f28:	add	r6, r7, #12
   10f2c:	add	r7, r7, #220	; 0xdc
   10f30:	ldr	r1, [r6, #4]!
   10f34:	mov	r0, r4
   10f38:	bl	10e44 <insere_carta@@Base>
   10f3c:	cmp	r6, r7
   10f40:	bne	10f30 <main@@Base+0x48>
   10f44:	bl	1160c <lista_nova@@Base>
   10f48:	str	r0, [sp, #4]
   10f4c:	ldr	r7, [pc, #564]	; 11188 <main@@Base+0x2a0>
   10f50:	add	r6, r7, #220	; 0xdc
   10f54:	add	r7, r7, #272	; 0x110
   10f58:	mov	r8, #0
   10f5c:	mov	r2, r8
   10f60:	ldr	r1, [r6, #4]!
   10f64:	ldr	r0, [sp, #4]
   10f68:	bl	116a8 <lista_insere@@Base>
   10f6c:	cmp	r7, r6
   10f70:	bne	10f5c <main@@Base+0x74>
   10f74:	ldr	r6, [pc, #528]	; 1118c <main@@Base+0x2a4>
   10f78:	ldr	r7, [r6]
   10f7c:	ldr	r8, [sp, #4]
   10f80:	mov	r1, r8
   10f84:	mov	r0, r4
   10f88:	bl	10cfc <tira_carta@@Base>
   10f8c:	mov	r2, r0
   10f90:	ldr	r1, [pc, #504]	; 11190 <main@@Base+0x2a8>
   10f94:	mov	r0, r7
   10f98:	bl	10bb0 <fprintf@plt>
   10f9c:	ldr	r7, [r6]
   10fa0:	mov	r1, r8
   10fa4:	mov	r0, r4
   10fa8:	bl	10cfc <tira_carta@@Base>
   10fac:	mov	r2, r0
   10fb0:	ldr	r1, [pc, #476]	; 11194 <main@@Base+0x2ac>
   10fb4:	mov	r0, r7
   10fb8:	bl	10bb0 <fprintf@plt>
   10fbc:	ldr	r6, [r6]
   10fc0:	mov	r1, r8
   10fc4:	mov	r0, r4
   10fc8:	bl	10cfc <tira_carta@@Base>
   10fcc:	mov	r2, r0
   10fd0:	ldr	r1, [pc, #448]	; 11198 <main@@Base+0x2b0>
   10fd4:	mov	r0, r6
   10fd8:	bl	10bb0 <fprintf@plt>
   10fdc:	ldr	r6, [pc, #420]	; 11188 <main@@Base+0x2a0>
   10fe0:	ldr	r1, [r6, #212]	; 0xd4
   10fe4:	mov	r0, r4
   10fe8:	bl	10e44 <insere_carta@@Base>
   10fec:	ldr	r1, [r6, #216]	; 0xd8
   10ff0:	mov	r0, r4
   10ff4:	bl	10e44 <insere_carta@@Base>
   10ff8:	ldr	r1, [r6, #220]	; 0xdc
   10ffc:	mov	r0, r4
   11000:	bl	10e44 <insere_carta@@Base>
   11004:	bl	111b4 <vetor_novo@@Base>
   11008:	mov	r7, r0
   1100c:	mov	r6, #0
   11010:	ldr	sl, [pc, #372]	; 1118c <main@@Base+0x2a4>
   11014:	ldr	r9, [pc, #384]	; 1119c <main@@Base+0x2b4>
   11018:	mov	r8, #44	; 0x2c
   1101c:	mov	fp, #1
   11020:	b	11030 <main@@Base+0x148>
   11024:	add	r6, r6, #1
   11028:	cmp	r6, #13
   1102c:	beq	1107c <main@@Base+0x194>
   11030:	ldr	r2, [sp, #4]
   11034:	mov	r1, r4
   11038:	mov	r0, r5
   1103c:	bl	10d50 <faz_jogada@@Base>
   11040:	subs	r1, r0, #0
   11044:	beq	11054 <main@@Base+0x16c>
   11048:	mov	r2, r6
   1104c:	mov	r0, r7
   11050:	bl	11310 <vetor_insere@@Base>
   11054:	mov	r0, r5
   11058:	bl	112c4 <vetor_tamanho@@Base>
   1105c:	cmp	r0, #4
   11060:	beq	11024 <main@@Base+0x13c>
   11064:	ldr	r3, [sl]
   11068:	mov	r2, r8
   1106c:	mov	r1, fp
   11070:	mov	r0, r9
   11074:	bl	10b5c <fwrite@plt>
   11078:	b	11024 <main@@Base+0x13c>
   1107c:	ldr	r0, [pc, #284]	; 111a0 <main@@Base+0x2b8>
   11080:	bl	10b74 <puts@plt>
   11084:	ldr	r3, [r7]
   11088:	cmp	r3, #0
   1108c:	ble	110e4 <main@@Base+0x1fc>
   11090:	mov	r1, #0
   11094:	ldr	r9, [pc, #240]	; 1118c <main@@Base+0x2a4>
   11098:	ldr	r8, [pc, #260]	; 111a4 <main@@Base+0x2bc>
   1109c:	ldr	sl, [r9]
   110a0:	add	r6, r1, #1
   110a4:	mov	r0, r7
   110a8:	bl	112d4 <vetor_elemento@@Base>
   110ac:	mov	r3, r0
   110b0:	mov	r2, r6
   110b4:	mov	r1, r8
   110b8:	mov	r0, sl
   110bc:	bl	10bb0 <fprintf@plt>
   110c0:	mov	r1, r6
   110c4:	ldr	r3, [r7]
   110c8:	cmp	r3, r6
   110cc:	movle	r3, #0
   110d0:	movgt	r3, #1
   110d4:	cmp	r6, #2
   110d8:	movgt	r3, #0
   110dc:	cmp	r3, #0
   110e0:	bne	1109c <main@@Base+0x1b4>
   110e4:	mov	r0, r7
   110e8:	bl	111d8 <vetor_apaga@@Base>
   110ec:	bl	111b4 <vetor_novo@@Base>
   110f0:	mov	r6, r0
   110f4:	ldr	r8, [pc, #172]	; 111a8 <main@@Base+0x2c0>
   110f8:	mov	r7, #0
   110fc:	mov	r2, r7
   11100:	ldr	r1, [r8, #4]!
   11104:	mov	r0, r6
   11108:	bl	11310 <vetor_insere@@Base>
   1110c:	add	r7, r7, #1
   11110:	cmp	r7, #13
   11114:	bne	110fc <main@@Base+0x214>
   11118:	ldr	r0, [pc, #140]	; 111ac <main@@Base+0x2c4>
   1111c:	bl	10b74 <puts@plt>
   11120:	ldr	r7, [pc, #96]	; 11188 <main@@Base+0x2a0>
   11124:	add	fp, r7, #16
   11128:	ldr	sl, [pc, #92]	; 1118c <main@@Base+0x2a4>
   1112c:	ldr	r9, [sl]
   11130:	ldr	r8, [r7], #4
   11134:	mov	r1, r8
   11138:	mov	r0, r6
   1113c:	bl	10df8 <numero_vitorias@@Base>
   11140:	mov	r3, r0
   11144:	mov	r2, r8
   11148:	ldr	r1, [pc, #96]	; 111b0 <main@@Base+0x2c8>
   1114c:	mov	r0, r9
   11150:	bl	10bb0 <fprintf@plt>
   11154:	cmp	fp, r7
   11158:	bne	1112c <main@@Base+0x244>
   1115c:	mov	r0, r5
   11160:	bl	111d8 <vetor_apaga@@Base>
   11164:	mov	r0, r4
   11168:	bl	11630 <lista_apaga@@Base>
   1116c:	ldr	r0, [sp, #4]
   11170:	bl	11630 <lista_apaga@@Base>
   11174:	mov	r0, r6
   11178:	bl	111d8 <vetor_apaga@@Base>
   1117c:	mov	r0, #0
   11180:	add	sp, sp, #12
   11184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11188:	andeq	r2, r2, r0, asr r0
   1118c:	muleq	r2, r8, r1
   11190:	andeq	r1, r1, r8, lsl #20
   11194:	andeq	r1, r1, r8, lsr #20
   11198:	andeq	r1, r1, r4, asr #20
   1119c:	andeq	r1, r1, r4, ror #20
   111a0:	muleq	r1, r4, sl
   111a4:			; <UNDEFINED> instruction: 0x00011abc
   111a8:	andeq	r2, r2, r0, ror #2
   111ac:	muleq	r1, r0, sl
   111b0:	andeq	r1, r1, ip, asr #21

000111b4 <vetor_novo@@Base>:
   111b4:	push	{r4, lr}
   111b8:	mov	r0, #12
   111bc:	bl	10b80 <malloc@plt>
   111c0:	cmp	r0, #0
   111c4:	movne	r3, #0
   111c8:	strne	r3, [r0]
   111cc:	strne	r3, [r0, #4]
   111d0:	strne	r3, [r0, #8]
   111d4:	pop	{r4, pc}

000111d8 <vetor_apaga@@Base>:
   111d8:	push	{r4, r5, r6, lr}
   111dc:	subs	r5, r0, #0
   111e0:	popeq	{r4, r5, r6, pc}
   111e4:	ldr	r3, [r5]
   111e8:	cmp	r3, #0
   111ec:	ble	11210 <vetor_apaga@@Base+0x38>
   111f0:	mov	r4, #0
   111f4:	ldr	r3, [r5, #8]
   111f8:	ldr	r0, [r3, r4, lsl #2]
   111fc:	bl	10b44 <free@plt>
   11200:	add	r4, r4, #1
   11204:	ldr	r3, [r5]
   11208:	cmp	r3, r4
   1120c:	bgt	111f4 <vetor_apaga@@Base+0x1c>
   11210:	ldr	r0, [r5, #8]
   11214:	bl	10b44 <free@plt>
   11218:	mov	r0, r5
   1121c:	bl	10b44 <free@plt>
   11220:	pop	{r4, r5, r6, pc}

00011224 <vetor_atribui@@Base>:
   11224:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11228:	mov	r5, r0
   1122c:	clz	r0, r0
   11230:	lsr	r0, r0, #5
   11234:	orrs	r3, r0, r1, lsr #31
   11238:	bne	112ac <vetor_atribui@@Base+0x88>
   1123c:	ldr	r3, [r5]
   11240:	cmp	r1, r3
   11244:	bge	112b4 <vetor_atribui@@Base+0x90>
   11248:	mov	r6, r2
   1124c:	mov	r4, r1
   11250:	mov	r0, r2
   11254:	bl	10ba4 <strlen@plt>
   11258:	mov	r9, r0
   1125c:	ldr	r7, [r5, #8]
   11260:	ldr	r8, [r7, r4, lsl #2]
   11264:	mov	r0, r8
   11268:	bl	10ba4 <strlen@plt>
   1126c:	cmp	r9, r0
   11270:	bls	11294 <vetor_atribui@@Base+0x70>
   11274:	add	r1, r9, #1
   11278:	mov	r0, r8
   1127c:	bl	10b50 <realloc@plt>
   11280:	str	r0, [r7, r4, lsl #2]
   11284:	ldr	r3, [r5, #8]
   11288:	ldr	r3, [r3, r4, lsl #2]
   1128c:	cmp	r3, #0
   11290:	beq	112bc <vetor_atribui@@Base+0x98>
   11294:	ldr	r3, [r5, #8]
   11298:	mov	r1, r6
   1129c:	ldr	r0, [r3, r4, lsl #2]
   112a0:	bl	10b68 <strcpy@plt>
   112a4:	mov	r0, r4
   112a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112ac:	mvn	r0, #0
   112b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112b4:	mvn	r0, #0
   112b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112bc:	mvn	r0, #0
   112c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000112c4 <vetor_tamanho@@Base>:
   112c4:	cmp	r0, #0
   112c8:	ldrne	r0, [r0]
   112cc:	mvneq	r0, #0
   112d0:	bx	lr

000112d4 <vetor_elemento@@Base>:
   112d4:	mov	r3, r0
   112d8:	clz	r0, r0
   112dc:	lsr	r0, r0, #5
   112e0:	orrs	r2, r0, r1, lsr #31
   112e4:	bne	11300 <vetor_elemento@@Base+0x2c>
   112e8:	ldr	r2, [r3]
   112ec:	cmp	r1, r2
   112f0:	bge	11308 <vetor_elemento@@Base+0x34>
   112f4:	ldr	r3, [r3, #8]
   112f8:	ldr	r0, [r3, r1, lsl #2]
   112fc:	bx	lr
   11300:	mov	r0, #0
   11304:	bx	lr
   11308:	mov	r0, #0
   1130c:	bx	lr

00011310 <vetor_insere@@Base>:
   11310:	push	{r4, r5, r6, r7, r8, lr}
   11314:	mov	r5, r0
   11318:	clz	r0, r0
   1131c:	lsr	r0, r0, #5
   11320:	orrs	r3, r0, r2, lsr #31
   11324:	bne	113f8 <vetor_insere@@Base+0xe8>
   11328:	ldr	r3, [r5]
   1132c:	cmp	r2, r3
   11330:	bgt	11400 <vetor_insere@@Base+0xf0>
   11334:	mov	r4, r2
   11338:	mov	r6, r1
   1133c:	ldr	r2, [r5, #4]
   11340:	cmp	r3, r2
   11344:	beq	113c4 <vetor_insere@@Base+0xb4>
   11348:	ldr	r3, [r5]
   1134c:	sub	ip, r3, #1
   11350:	cmp	r4, ip
   11354:	bgt	1137c <vetor_insere@@Base+0x6c>
   11358:	lsl	r3, r3, #2
   1135c:	ldr	lr, [r5, #8]
   11360:	add	r2, lr, r3
   11364:	ldr	r2, [r2, #-4]
   11368:	str	r2, [lr, r3]
   1136c:	sub	ip, ip, #1
   11370:	sub	r3, r3, #4
   11374:	cmp	r4, ip
   11378:	ble	1135c <vetor_insere@@Base+0x4c>
   1137c:	ldr	r7, [r5, #8]
   11380:	mov	r0, r6
   11384:	bl	10ba4 <strlen@plt>
   11388:	mov	r1, #1
   1138c:	add	r0, r0, r1
   11390:	bl	10b2c <calloc@plt>
   11394:	str	r0, [r7, r4, lsl #2]
   11398:	ldr	r3, [r5, #8]
   1139c:	ldr	r0, [r3, r4, lsl #2]
   113a0:	cmp	r0, #0
   113a4:	beq	11408 <vetor_insere@@Base+0xf8>
   113a8:	mov	r1, r6
   113ac:	bl	10b68 <strcpy@plt>
   113b0:	ldr	r3, [r5]
   113b4:	add	r3, r3, #1
   113b8:	str	r3, [r5]
   113bc:	mov	r0, r4
   113c0:	pop	{r4, r5, r6, r7, r8, pc}
   113c4:	cmp	r3, #0
   113c8:	moveq	r3, #1
   113cc:	lslne	r3, r3, #1
   113d0:	str	r3, [r5, #4]
   113d4:	ldr	r1, [r5, #4]
   113d8:	lsl	r1, r1, #2
   113dc:	ldr	r0, [r5, #8]
   113e0:	bl	10b50 <realloc@plt>
   113e4:	str	r0, [r5, #8]
   113e8:	cmp	r0, #0
   113ec:	bne	11348 <vetor_insere@@Base+0x38>
   113f0:	mvn	r0, #0
   113f4:	pop	{r4, r5, r6, r7, r8, pc}
   113f8:	mvn	r0, #0
   113fc:	pop	{r4, r5, r6, r7, r8, pc}
   11400:	mvn	r0, #0
   11404:	pop	{r4, r5, r6, r7, r8, pc}
   11408:	mvn	r0, #0
   1140c:	pop	{r4, r5, r6, r7, r8, pc}

00011410 <vetor_remove@@Base>:
   11410:	push	{r4, r5, r6, lr}
   11414:	mov	r6, r0
   11418:	clz	r0, r0
   1141c:	lsr	r0, r0, #5
   11420:	orrs	r3, r0, r1, lsr #31
   11424:	bne	11490 <vetor_remove@@Base+0x80>
   11428:	ldr	r3, [r6]
   1142c:	cmp	r1, r3
   11430:	bge	11498 <vetor_remove@@Base+0x88>
   11434:	mov	r4, r1
   11438:	lsl	r5, r1, #2
   1143c:	ldr	r3, [r6, #8]
   11440:	ldr	r0, [r3, r1, lsl #2]
   11444:	bl	10b44 <free@plt>
   11448:	add	r1, r4, #1
   1144c:	ldr	r0, [r6]
   11450:	cmp	r1, r0
   11454:	bge	11480 <vetor_remove@@Base+0x70>
   11458:	mov	r3, r5
   1145c:	ldr	ip, [r6, #8]
   11460:	add	r2, r3, #4
   11464:	ldr	r0, [ip, r2]
   11468:	str	r0, [ip, r3]
   1146c:	add	r1, r1, #1
   11470:	ldr	r0, [r6]
   11474:	mov	r3, r2
   11478:	cmp	r0, r1
   1147c:	bgt	1145c <vetor_remove@@Base+0x4c>
   11480:	sub	r0, r0, #1
   11484:	str	r0, [r6]
   11488:	mov	r0, #0
   1148c:	pop	{r4, r5, r6, pc}
   11490:	mvn	r0, #0
   11494:	pop	{r4, r5, r6, pc}
   11498:	mvn	r0, #0
   1149c:	pop	{r4, r5, r6, pc}

000114a0 <vetor_pesquisa@@Base>:
   114a0:	push	{r4, r5, r6, r7, r8, lr}
   114a4:	cmp	r0, #0
   114a8:	beq	114f4 <vetor_pesquisa@@Base+0x54>
   114ac:	ldr	r7, [r0]
   114b0:	cmp	r7, #0
   114b4:	ble	114fc <vetor_pesquisa@@Base+0x5c>
   114b8:	mov	r6, r1
   114bc:	ldr	r5, [r0, #8]
   114c0:	sub	r5, r5, #4
   114c4:	mov	r4, #0
   114c8:	mov	r1, r6
   114cc:	ldr	r0, [r5, #4]!
   114d0:	bl	10b38 <strcmp@plt>
   114d4:	cmp	r0, #0
   114d8:	beq	114ec <vetor_pesquisa@@Base+0x4c>
   114dc:	add	r4, r4, #1
   114e0:	cmp	r4, r7
   114e4:	bne	114c8 <vetor_pesquisa@@Base+0x28>
   114e8:	mvn	r4, #0
   114ec:	mov	r0, r4
   114f0:	pop	{r4, r5, r6, r7, r8, pc}
   114f4:	mvn	r4, #0
   114f8:	b	114ec <vetor_pesquisa@@Base+0x4c>
   114fc:	mvn	r4, #0
   11500:	b	114ec <vetor_pesquisa@@Base+0x4c>

00011504 <vetor_ordena@@Base>:
   11504:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11508:	subs	r8, r0, #0
   1150c:	beq	1159c <vetor_ordena@@Base+0x98>
   11510:	ldr	r3, [r8]
   11514:	cmp	r3, #1
   11518:	ble	115a4 <vetor_ordena@@Base+0xa0>
   1151c:	mov	fp, #4
   11520:	mov	sl, #1
   11524:	b	11548 <vetor_ordena@@Base+0x44>
   11528:	mov	r6, sl
   1152c:	ldr	r3, [r8, #8]
   11530:	str	r9, [r3, r6, lsl #2]
   11534:	add	sl, sl, #1
   11538:	add	fp, fp, #4
   1153c:	ldr	r3, [r8]
   11540:	cmp	r3, sl
   11544:	ble	11594 <vetor_ordena@@Base+0x90>
   11548:	ldr	r3, [r8, #8]
   1154c:	ldr	r9, [r3, fp]
   11550:	cmp	sl, #0
   11554:	ble	11528 <vetor_ordena@@Base+0x24>
   11558:	mov	r4, fp
   1155c:	mov	r6, sl
   11560:	ldr	r5, [r8, #8]
   11564:	sub	r7, r4, #4
   11568:	ldr	r1, [r5, r7]
   1156c:	mov	r0, r9
   11570:	bl	10b38 <strcmp@plt>
   11574:	cmp	r0, #0
   11578:	bge	1152c <vetor_ordena@@Base+0x28>
   1157c:	ldr	r3, [r5, r7]
   11580:	str	r3, [r5, r4]
   11584:	sub	r4, r4, #4
   11588:	subs	r6, r6, #1
   1158c:	bne	11560 <vetor_ordena@@Base+0x5c>
   11590:	b	1152c <vetor_ordena@@Base+0x28>
   11594:	mov	r0, #0
   11598:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1159c:	mvn	r0, #0
   115a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115a4:	mov	r0, #0
   115a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000115ac <novo_str@@Base>:
   115ac:	push	{r4, r5, r6, lr}
   115b0:	mov	r5, r0
   115b4:	mov	r0, #12
   115b8:	bl	10b80 <malloc@plt>
   115bc:	subs	r4, r0, #0
   115c0:	beq	115f4 <novo_str@@Base+0x48>
   115c4:	mov	r0, r5
   115c8:	bl	10ba4 <strlen@plt>
   115cc:	add	r0, r0, #1
   115d0:	bl	10b80 <malloc@plt>
   115d4:	str	r0, [r4]
   115d8:	cmp	r0, #0
   115dc:	beq	115fc <novo_str@@Base+0x50>
   115e0:	mov	r1, r5
   115e4:	bl	10b68 <strcpy@plt>
   115e8:	mov	r3, #0
   115ec:	str	r3, [r4, #4]
   115f0:	str	r3, [r4, #8]
   115f4:	mov	r0, r4
   115f8:	pop	{r4, r5, r6, pc}
   115fc:	mov	r0, r4
   11600:	bl	10b44 <free@plt>
   11604:	mov	r4, #0
   11608:	b	115f4 <novo_str@@Base+0x48>

0001160c <lista_nova@@Base>:
   1160c:	push	{r4, lr}
   11610:	mov	r0, #12
   11614:	bl	10b80 <malloc@plt>
   11618:	cmp	r0, #0
   1161c:	movne	r3, #0
   11620:	strne	r3, [r0]
   11624:	strne	r3, [r0, #4]
   11628:	strne	r3, [r0, #8]
   1162c:	pop	{r4, pc}

00011630 <lista_apaga@@Base>:
   11630:	push	{r4, r5, r6, lr}
   11634:	subs	r5, r0, #0
   11638:	popeq	{r4, r5, r6, pc}
   1163c:	ldr	r4, [r5]
   11640:	cmp	r4, #0
   11644:	beq	1166c <lista_apaga@@Base+0x3c>
   11648:	ldr	r3, [r4, #4]
   1164c:	str	r3, [r5]
   11650:	ldr	r0, [r4]
   11654:	bl	10b44 <free@plt>
   11658:	mov	r0, r4
   1165c:	bl	10b44 <free@plt>
   11660:	ldr	r4, [r5]
   11664:	cmp	r4, #0
   11668:	bne	11648 <lista_apaga@@Base+0x18>
   1166c:	mov	r0, r5
   11670:	bl	10b44 <free@plt>
   11674:	pop	{r4, r5, r6, pc}

00011678 <lista_tamanho@@Base>:
   11678:	cmp	r0, #0
   1167c:	ldrne	r0, [r0, #8]
   11680:	mvneq	r0, #0
   11684:	bx	lr

00011688 <lista_inicio@@Base>:
   11688:	cmp	r0, #0
   1168c:	ldrne	r0, [r0]
   11690:	moveq	r0, #0
   11694:	bx	lr

00011698 <lista_fim@@Base>:
   11698:	cmp	r0, #0
   1169c:	ldrne	r0, [r0, #4]
   116a0:	moveq	r0, #0
   116a4:	bx	lr

000116a8 <lista_insere@@Base>:
   116a8:	cmp	r1, #0
   116ac:	cmpne	r0, #0
   116b0:	beq	11740 <lista_insere@@Base+0x98>
   116b4:	push	{r4, r5, r6, lr}
   116b8:	mov	r5, r0
   116bc:	mov	r0, r1
   116c0:	mov	r4, r2
   116c4:	bl	115ac <novo_str@@Base>
   116c8:	cmp	r0, #0
   116cc:	popeq	{r4, r5, r6, pc}
   116d0:	ldr	r3, [r5, #8]
   116d4:	add	r3, r3, #1
   116d8:	str	r3, [r5, #8]
   116dc:	cmp	r4, #0
   116e0:	beq	11718 <lista_insere@@Base+0x70>
   116e4:	ldr	r3, [r5]
   116e8:	cmp	r4, r3
   116ec:	streq	r4, [r0, #4]
   116f0:	ldreq	r3, [r5]
   116f4:	streq	r0, [r3, #8]
   116f8:	streq	r0, [r5]
   116fc:	ldrne	r3, [r4, #8]
   11700:	strne	r3, [r0, #8]
   11704:	strne	r4, [r0, #4]
   11708:	ldrne	r3, [r4, #8]
   1170c:	strne	r0, [r3, #4]
   11710:	strne	r0, [r4, #8]
   11714:	pop	{r4, r5, r6, pc}
   11718:	ldr	r3, [r5]
   1171c:	cmp	r3, #0
   11720:	streq	r0, [r5, #4]
   11724:	streq	r0, [r5]
   11728:	ldrne	r3, [r5, #4]
   1172c:	strne	r3, [r0, #8]
   11730:	ldrne	r3, [r5, #4]
   11734:	strne	r0, [r3, #4]
   11738:	strne	r0, [r5, #4]
   1173c:	pop	{r4, r5, r6, pc}
   11740:	mov	r0, #0
   11744:	bx	lr

00011748 <lista_remove@@Base>:
   11748:	push	{r4, r5, r6, lr}
   1174c:	cmp	r1, #0
   11750:	cmpne	r0, #0
   11754:	beq	117b4 <lista_remove@@Base+0x6c>
   11758:	mov	r4, r1
   1175c:	ldr	r2, [r0, #8]
   11760:	sub	r2, r2, #1
   11764:	str	r2, [r0, #8]
   11768:	ldr	r2, [r1, #8]
   1176c:	cmp	r2, #0
   11770:	ldrne	r1, [r1, #4]
   11774:	strne	r1, [r2, #4]
   11778:	ldreq	r2, [r4, #4]
   1177c:	streq	r2, [r0]
   11780:	ldr	r2, [r4, #4]
   11784:	cmp	r2, #0
   11788:	ldrne	r1, [r4, #8]
   1178c:	strne	r1, [r2, #8]
   11790:	ldreq	r2, [r4, #8]
   11794:	streq	r2, [r0, #4]
   11798:	ldr	r5, [r4, #4]
   1179c:	ldr	r0, [r4]
   117a0:	bl	10b44 <free@plt>
   117a4:	mov	r0, r4
   117a8:	bl	10b44 <free@plt>
   117ac:	mov	r0, r5
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	mov	r5, #0
   117b8:	b	117ac <lista_remove@@Base+0x64>

000117bc <lista_pesquisa@@Base>:
   117bc:	push	{r4, r5, r6, lr}
   117c0:	cmp	r1, #0
   117c4:	cmpne	r0, #0
   117c8:	beq	11848 <lista_pesquisa@@Base+0x8c>
   117cc:	mov	r5, r1
   117d0:	cmp	r2, #1
   117d4:	movhi	r4, #0
   117d8:	bhi	11810 <lista_pesquisa@@Base+0x54>
   117dc:	cmp	r2, #0
   117e0:	bne	11818 <lista_pesquisa@@Base+0x5c>
   117e4:	ldr	r4, [r0]
   117e8:	cmp	r4, #0
   117ec:	beq	11810 <lista_pesquisa@@Base+0x54>
   117f0:	mov	r1, r5
   117f4:	ldr	r0, [r4]
   117f8:	bl	10b38 <strcmp@plt>
   117fc:	cmp	r0, #0
   11800:	beq	11810 <lista_pesquisa@@Base+0x54>
   11804:	ldr	r4, [r4, #4]
   11808:	cmp	r4, #0
   1180c:	bne	117f0 <lista_pesquisa@@Base+0x34>
   11810:	mov	r0, r4
   11814:	pop	{r4, r5, r6, pc}
   11818:	ldr	r4, [r0, #4]
   1181c:	cmp	r4, #0
   11820:	beq	11810 <lista_pesquisa@@Base+0x54>
   11824:	mov	r1, r5
   11828:	ldr	r0, [r4]
   1182c:	bl	10b38 <strcmp@plt>
   11830:	cmp	r0, #0
   11834:	beq	11810 <lista_pesquisa@@Base+0x54>
   11838:	ldr	r4, [r4, #8]
   1183c:	cmp	r4, #0
   11840:	bne	11824 <lista_pesquisa@@Base+0x68>
   11844:	b	11810 <lista_pesquisa@@Base+0x54>
   11848:	mov	r4, #0
   1184c:	b	11810 <lista_pesquisa@@Base+0x54>

00011850 <lista_ordena@@Base>:
   11850:	cmp	r0, #0
   11854:	beq	118cc <lista_ordena@@Base+0x7c>
   11858:	push	{r4, r5, r6, lr}
   1185c:	ldr	r5, [r0]
   11860:	ldr	r4, [r5, #4]
   11864:	cmp	r4, #0
   11868:	movne	r6, r5
   1186c:	bne	118c0 <lista_ordena@@Base+0x70>
   11870:	mov	r0, #0
   11874:	pop	{r4, r5, r6, pc}
   11878:	ldr	r1, [r5]
   1187c:	ldr	r0, [r4]
   11880:	bl	10b38 <strcmp@plt>
   11884:	cmp	r0, #0
   11888:	movlt	r5, r4
   1188c:	ldr	r4, [r4, #4]
   11890:	cmp	r4, #0
   11894:	bne	11878 <lista_ordena@@Base+0x28>
   11898:	cmp	r5, r6
   1189c:	ldrne	r3, [r6]
   118a0:	ldrne	r2, [r5]
   118a4:	strne	r2, [r6]
   118a8:	strne	r3, [r5]
   118ac:	ldr	r6, [r6, #4]
   118b0:	ldr	r4, [r6, #4]
   118b4:	mov	r5, r6
   118b8:	cmp	r4, #0
   118bc:	beq	118d4 <lista_ordena@@Base+0x84>
   118c0:	cmp	r4, #0
   118c4:	bne	11878 <lista_ordena@@Base+0x28>
   118c8:	b	118ac <lista_ordena@@Base+0x5c>
   118cc:	mvn	r0, #0
   118d0:	bx	lr
   118d4:	mov	r0, #0
   118d8:	pop	{r4, r5, r6, pc}

000118dc <lista_inverte@@Base>:
   118dc:	subs	r2, r0, #0
   118e0:	beq	11980 <lista_inverte@@Base+0xa4>
   118e4:	ldr	r1, [r2, #8]
   118e8:	cmp	r1, #1
   118ec:	ble	11988 <lista_inverte@@Base+0xac>
   118f0:	ldr	r3, [r2]
   118f4:	ldr	r3, [r3, #4]
   118f8:	sub	r1, r1, #2
   118fc:	cmp	r1, #0
   11900:	ble	11950 <lista_inverte@@Base+0x74>
   11904:	mov	r0, #0
   11908:	ldr	r1, [r3, #8]
   1190c:	ldr	ip, [r3, #4]
   11910:	str	ip, [r1, #4]
   11914:	ldr	r1, [r3, #4]
   11918:	ldr	ip, [r3, #8]
   1191c:	str	ip, [r1, #8]
   11920:	ldr	r1, [r3, #4]
   11924:	ldr	ip, [r2]
   11928:	str	ip, [r3, #4]
   1192c:	ldr	ip, [r2]
   11930:	str	r3, [ip, #8]
   11934:	str	r3, [r2]
   11938:	add	r0, r0, #1
   1193c:	mov	r3, r1
   11940:	ldr	r1, [r2, #8]
   11944:	sub	r1, r1, #2
   11948:	cmp	r1, r0
   1194c:	bgt	11908 <lista_inverte@@Base+0x2c>
   11950:	ldr	r3, [r2, #4]
   11954:	ldr	r1, [r3, #8]
   11958:	str	r1, [r2, #4]
   1195c:	mov	r0, #0
   11960:	str	r0, [r1, #4]
   11964:	str	r0, [r3, #8]
   11968:	ldr	r1, [r2]
   1196c:	str	r1, [r3, #4]
   11970:	ldr	r1, [r2]
   11974:	str	r3, [r1, #8]
   11978:	str	r3, [r2]
   1197c:	bx	lr
   11980:	mvn	r0, #0
   11984:	bx	lr
   11988:	mov	r0, #0
   1198c:	bx	lr

00011990 <__libc_csu_init@@Base>:
   11990:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11994:	mov	r7, r0
   11998:	ldr	r6, [pc, #72]	; 119e8 <__libc_csu_init@@Base+0x58>
   1199c:	ldr	r5, [pc, #72]	; 119ec <__libc_csu_init@@Base+0x5c>
   119a0:	add	r6, pc, r6
   119a4:	add	r5, pc, r5
   119a8:	sub	r6, r6, r5
   119ac:	mov	r8, r1
   119b0:	mov	r9, r2
   119b4:	bl	10b0c <calloc@plt-0x20>
   119b8:	asrs	r6, r6, #2
   119bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119c0:	mov	r4, #0
   119c4:	add	r4, r4, #1
   119c8:	ldr	r3, [r5], #4
   119cc:	mov	r2, r9
   119d0:	mov	r1, r8
   119d4:	mov	r0, r7
   119d8:	blx	r3
   119dc:	cmp	r6, r4
   119e0:	bne	119c4 <__libc_csu_init@@Base+0x34>
   119e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119e8:	andeq	r0, r1, r8, ror #10
   119ec:	andeq	r0, r1, r0, ror #10

000119f0 <__libc_csu_fini@@Base>:
   119f0:	bx	lr

Disassembly of section .fini:

000119f4 <.fini>:
   119f4:	push	{r3, lr}
   119f8:	pop	{r3, pc}
