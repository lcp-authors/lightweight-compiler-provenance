
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	10dec <_start@@Base+0x3c>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <calloc@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <calloc@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r1, r1, r8, lsr r3

00010ccc <calloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <strcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <strtol@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <printf@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <fopen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <free@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fgets@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <strcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <puts@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <__gmon_start__@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <feof@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <strchr@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <fclose@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <fgets_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <abort@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010db0 <_start@@Base>:
   10db0:	mov	fp, #0
   10db4:	mov	lr, #0
   10db8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dbc:	mov	r2, sp
   10dc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc8:	ldr	ip, [pc, #16]	; 10de0 <_start@@Base+0x30>
   10dcc:	push	{ip}		; (str ip, [sp, #-4]!)
   10dd0:	ldr	r0, [pc, #12]	; 10de4 <_start@@Base+0x34>
   10dd4:	ldr	r3, [pc, #12]	; 10de8 <_start@@Base+0x38>
   10dd8:	bl	10d50 <__libc_start_main@plt>
   10ddc:	bl	10da4 <abort@plt>
   10de0:	andeq	r1, r1, ip, ror #27
   10de4:			; <UNDEFINED> instruction: 0x000111b4
   10de8:	andeq	r1, r1, ip, lsl #27
   10dec:	ldr	r3, [pc, #20]	; 10e08 <_start@@Base+0x58>
   10df0:	ldr	r2, [pc, #20]	; 10e0c <_start@@Base+0x5c>
   10df4:	add	r3, pc, r3
   10df8:	ldr	r2, [r3, r2]
   10dfc:	cmp	r2, #0
   10e00:	bxeq	lr
   10e04:	b	10d5c <__gmon_start__@plt>
   10e08:	andeq	r1, r1, r4, lsl #4
   10e0c:	andeq	r0, r0, r8, asr r0
   10e10:	ldr	r0, [pc, #24]	; 10e30 <_start@@Base+0x80>
   10e14:	ldr	r3, [pc, #24]	; 10e34 <_start@@Base+0x84>
   10e18:	cmp	r3, r0
   10e1c:	bxeq	lr
   10e20:	ldr	r3, [pc, #16]	; 10e38 <_start@@Base+0x88>
   10e24:	cmp	r3, #0
   10e28:	bxeq	lr
   10e2c:	bx	r3
   10e30:	andeq	r2, r2, r4, rrx
   10e34:	andeq	r2, r2, r4, rrx
   10e38:	andeq	r0, r0, r0
   10e3c:	ldr	r0, [pc, #36]	; 10e68 <_start@@Base+0xb8>
   10e40:	ldr	r1, [pc, #36]	; 10e6c <_start@@Base+0xbc>
   10e44:	sub	r1, r1, r0
   10e48:	asr	r1, r1, #2
   10e4c:	add	r1, r1, r1, lsr #31
   10e50:	asrs	r1, r1, #1
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0xc0>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r2, r2, r4, rrx
   10e6c:	andeq	r2, r2, r4, rrx
   10e70:	andeq	r0, r0, r0
   10e74:	push	{r4, lr}
   10e78:	ldr	r4, [pc, #24]	; 10e98 <_start@@Base+0xe8>
   10e7c:	ldrb	r3, [r4]
   10e80:	cmp	r3, #0
   10e84:	popne	{r4, pc}
   10e88:	bl	10e10 <_start@@Base+0x60>
   10e8c:	mov	r3, #1
   10e90:	strb	r3, [r4]
   10e94:	pop	{r4, pc}
   10e98:	andeq	r2, r2, r4, rrx
   10e9c:	b	10e3c <_start@@Base+0x8c>

00010ea0 <retira_duplicados@@Base>:
   10ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ea4:	add	fp, sp, #24
   10ea8:	mov	r4, r0
   10eac:	bl	115c0 <vetor_tamanho@@Base>
   10eb0:	cmp	r0, #2
   10eb4:	blt	10f4c <retira_duplicados@@Base+0xac>
   10eb8:	mov	r8, #0
   10ebc:	b	10ed4 <retira_duplicados@@Base+0x34>
   10ec0:	mov	r0, r4
   10ec4:	bl	115c0 <vetor_tamanho@@Base>
   10ec8:	sub	r0, r0, #1
   10ecc:	cmp	r8, r0
   10ed0:	bge	10f4c <retira_duplicados@@Base+0xac>
   10ed4:	mov	r0, r4
   10ed8:	mov	r5, r8
   10edc:	add	r8, r8, #1
   10ee0:	bl	115c0 <vetor_tamanho@@Base>
   10ee4:	cmp	r8, r0
   10ee8:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10eec:	mov	r6, r8
   10ef0:	b	10f08 <retira_duplicados@@Base+0x68>
   10ef4:	mov	r0, r4
   10ef8:	add	r6, r6, #1
   10efc:	bl	115c0 <vetor_tamanho@@Base>
   10f00:	cmp	r6, r0
   10f04:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10f08:	mov	r0, r4
   10f0c:	mov	r1, r5
   10f10:	bl	115d0 <vetor_elemento@@Base>
   10f14:	mov	r7, r0
   10f18:	mov	r0, r4
   10f1c:	mov	r1, r6
   10f20:	bl	115d0 <vetor_elemento@@Base>
   10f24:	mov	r1, r0
   10f28:	mov	r0, r7
   10f2c:	bl	10cd8 <strcmp@plt>
   10f30:	cmp	r0, #0
   10f34:	bne	10ef4 <retira_duplicados@@Base+0x54>
   10f38:	mov	r0, r4
   10f3c:	mov	r1, r6
   10f40:	bl	11720 <vetor_remove@@Base>
   10f44:	sub	r6, r6, #1
   10f48:	b	10ef4 <retira_duplicados@@Base+0x54>
   10f4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f50 <interseta@@Base>:
   10f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f54:	add	fp, sp, #28
   10f58:	sub	sp, sp, #4
   10f5c:	mov	r4, r1
   10f60:	mov	sl, r0
   10f64:	bl	114b0 <vetor_novo@@Base>
   10f68:	ldr	r7, [sl]
   10f6c:	mov	r8, r0
   10f70:	cmp	r7, #0
   10f74:	bne	10f84 <interseta@@Base+0x34>
   10f78:	ldr	r0, [sl, #8]
   10f7c:	cmp	r0, #1
   10f80:	blt	11000 <interseta@@Base+0xb0>
   10f84:	mov	r9, #0
   10f88:	mov	r0, #1
   10f8c:	ldr	r1, [r7]
   10f90:	mov	r5, r0
   10f94:	mov	r0, r4
   10f98:	mov	r2, #0
   10f9c:	bl	11bb0 <lista_pesquisa@@Base>
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fe4 <interseta@@Base+0x94>
   10fa8:	ldr	r6, [r7]
   10fac:	mov	r0, r4
   10fb0:	mov	r2, #0
   10fb4:	mov	r1, r6
   10fb8:	bl	11bb0 <lista_pesquisa@@Base>
   10fbc:	ldr	r1, [r0]
   10fc0:	mov	r0, r6
   10fc4:	bl	10cd8 <strcmp@plt>
   10fc8:	cmp	r0, #0
   10fcc:	bne	10fe4 <interseta@@Base+0x94>
   10fd0:	ldr	r1, [r7]
   10fd4:	mov	r0, r8
   10fd8:	mov	r2, r9
   10fdc:	bl	11600 <vetor_insere@@Base>
   10fe0:	add	r9, r9, #1
   10fe4:	ldr	r7, [r7, #4]
   10fe8:	ldr	r1, [sl, #8]
   10fec:	add	r0, r5, #1
   10ff0:	cmp	r7, #0
   10ff4:	bne	10f8c <interseta@@Base+0x3c>
   10ff8:	cmp	r5, r1
   10ffc:	blt	10f8c <interseta@@Base+0x3c>
   11000:	mov	r0, r8
   11004:	sub	sp, fp, #28
   11008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001100c <anteriores@@Base>:
   1100c:	push	{r4, r5, r6, r7, fp, lr}
   11010:	add	fp, sp, #16
   11014:	mov	r4, r1
   11018:	mov	r6, r0
   1101c:	bl	114b0 <vetor_novo@@Base>
   11020:	ldr	r7, [r6]
   11024:	mov	r5, r0
   11028:	cmp	r7, #0
   1102c:	bne	11040 <anteriores@@Base+0x34>
   11030:	b	1107c <anteriores@@Base+0x70>
   11034:	ldr	r7, [r7, #4]
   11038:	cmp	r7, #0
   1103c:	beq	1107c <anteriores@@Base+0x70>
   11040:	ldr	r6, [r7]
   11044:	mov	r0, r6
   11048:	bl	10d74 <strlen@plt>
   1104c:	add	r0, r6, r0
   11050:	mov	r1, #0
   11054:	mov	r2, #10
   11058:	sub	r0, r0, #5
   1105c:	bl	10ce4 <strtol@plt>
   11060:	cmp	r0, r4
   11064:	bge	11034 <anteriores@@Base+0x28>
   11068:	ldr	r2, [r5]
   1106c:	mov	r0, r5
   11070:	mov	r1, r6
   11074:	bl	11600 <vetor_insere@@Base>
   11078:	b	11034 <anteriores@@Base+0x28>
   1107c:	mov	r0, r5
   11080:	pop	{r4, r5, r6, r7, fp, pc}

00011084 <lerAtores@@Base>:
   11084:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11088:	add	fp, sp, #24
   1108c:	sub	sp, sp, #256	; 0x100
   11090:	cmp	r0, #0
   11094:	beq	1110c <lerAtores@@Base+0x88>
   11098:	mov	r5, r0
   1109c:	bl	114b0 <vetor_novo@@Base>
   110a0:	mov	r4, r0
   110a4:	mov	r0, r5
   110a8:	bl	10d68 <feof@plt>
   110ac:	cmp	r0, #0
   110b0:	bne	11100 <lerAtores@@Base+0x7c>
   110b4:	mov	r6, sp
   110b8:	mov	r7, #0
   110bc:	mov	r0, r6
   110c0:	mov	r1, #255	; 0xff
   110c4:	mov	r2, r5
   110c8:	bl	10d14 <fgets@plt>
   110cc:	mov	r0, r6
   110d0:	mov	r1, #10
   110d4:	bl	10d80 <strchr@plt>
   110d8:	cmp	r0, #0
   110dc:	mov	r1, r6
   110e0:	strbne	r7, [r0]
   110e4:	mov	r0, r4
   110e8:	ldr	r2, [r4]
   110ec:	bl	11600 <vetor_insere@@Base>
   110f0:	mov	r0, r5
   110f4:	bl	10d68 <feof@plt>
   110f8:	cmp	r0, #0
   110fc:	beq	110bc <lerAtores@@Base+0x38>
   11100:	mov	r0, r4
   11104:	sub	sp, fp, #24
   11108:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1110c:	mov	r4, #0
   11110:	mov	r0, r4
   11114:	sub	sp, fp, #24
   11118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001111c <lerFilmes@@Base>:
   1111c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11120:	add	fp, sp, #24
   11124:	sub	sp, sp, #256	; 0x100
   11128:	cmp	r0, #0
   1112c:	beq	111a4 <lerFilmes@@Base+0x88>
   11130:	mov	r5, r0
   11134:	bl	1197c <lista_nova@@Base>
   11138:	mov	r4, r0
   1113c:	mov	r0, r5
   11140:	bl	10d68 <feof@plt>
   11144:	cmp	r0, #0
   11148:	bne	11198 <lerFilmes@@Base+0x7c>
   1114c:	mov	r6, sp
   11150:	mov	r7, #0
   11154:	mov	r0, r6
   11158:	mov	r1, #255	; 0xff
   1115c:	mov	r2, r5
   11160:	bl	10d14 <fgets@plt>
   11164:	mov	r0, r6
   11168:	mov	r1, #10
   1116c:	bl	10d80 <strchr@plt>
   11170:	cmp	r0, #0
   11174:	mov	r1, r6
   11178:	mov	r2, #0
   1117c:	strbne	r7, [r0]
   11180:	mov	r0, r4
   11184:	bl	11a28 <lista_insere@@Base>
   11188:	mov	r0, r5
   1118c:	bl	10d68 <feof@plt>
   11190:	cmp	r0, #0
   11194:	beq	11154 <lerFilmes@@Base+0x38>
   11198:	mov	r0, r4
   1119c:	sub	sp, fp, #24
   111a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   111a4:	mov	r4, #0
   111a8:	mov	r0, r4
   111ac:	sub	sp, fp, #24
   111b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000111b4 <main@@Base>:
   111b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b8:	add	fp, sp, #28
   111bc:	sub	sp, sp, #276	; 0x114
   111c0:	movw	r4, #7688	; 0x1e08
   111c4:	movw	r0, #7676	; 0x1dfc
   111c8:	movt	r4, #1
   111cc:	movt	r0, #1
   111d0:	mov	r1, r4
   111d4:	bl	10cfc <fopen@plt>
   111d8:	mov	r8, r0
   111dc:	movw	r0, #7690	; 0x1e0a
   111e0:	mov	r1, r4
   111e4:	movt	r0, #1
   111e8:	bl	10cfc <fopen@plt>
   111ec:	mov	r5, r0
   111f0:	movw	r0, #7701	; 0x1e15
   111f4:	mov	r1, r4
   111f8:	movt	r0, #1
   111fc:	bl	10cfc <fopen@plt>
   11200:	mov	r6, r0
   11204:	mov	sl, #0
   11208:	cmp	r8, #0
   1120c:	mov	r7, #0
   11210:	beq	11278 <main@@Base+0xc4>
   11214:	bl	114b0 <vetor_novo@@Base>
   11218:	mov	r7, r0
   1121c:	mov	r0, r8
   11220:	bl	10d68 <feof@plt>
   11224:	cmp	r0, #0
   11228:	bne	11278 <main@@Base+0xc4>
   1122c:	add	r4, sp, #16
   11230:	mov	r9, #0
   11234:	mov	r0, r4
   11238:	mov	r1, #255	; 0xff
   1123c:	mov	r2, r8
   11240:	bl	10d98 <fgets_unlocked@plt>
   11244:	mov	r0, r4
   11248:	mov	r1, #10
   1124c:	bl	10d80 <strchr@plt>
   11250:	cmp	r0, #0
   11254:	mov	r1, r4
   11258:	strbne	r9, [r0]
   1125c:	mov	r0, r7
   11260:	ldr	r2, [r7]
   11264:	bl	11600 <vetor_insere@@Base>
   11268:	mov	r0, r8
   1126c:	bl	10d68 <feof@plt>
   11270:	cmp	r0, #0
   11274:	beq	11234 <main@@Base+0x80>
   11278:	cmp	r5, #0
   1127c:	beq	112e4 <main@@Base+0x130>
   11280:	bl	1197c <lista_nova@@Base>
   11284:	mov	sl, r0
   11288:	mov	r0, r5
   1128c:	bl	10d68 <feof@plt>
   11290:	cmp	r0, #0
   11294:	bne	112e4 <main@@Base+0x130>
   11298:	add	r4, sp, #16
   1129c:	mov	r9, #0
   112a0:	mov	r0, r4
   112a4:	mov	r1, #255	; 0xff
   112a8:	mov	r2, r5
   112ac:	bl	10d98 <fgets_unlocked@plt>
   112b0:	mov	r0, r4
   112b4:	mov	r1, #10
   112b8:	bl	10d80 <strchr@plt>
   112bc:	cmp	r0, #0
   112c0:	mov	r1, r4
   112c4:	mov	r2, #0
   112c8:	strbne	r9, [r0]
   112cc:	mov	r0, sl
   112d0:	bl	11a28 <lista_insere@@Base>
   112d4:	mov	r0, r5
   112d8:	bl	10d68 <feof@plt>
   112dc:	cmp	r0, #0
   112e0:	beq	112a0 <main@@Base+0xec>
   112e4:	cmp	r6, #0
   112e8:	beq	11354 <main@@Base+0x1a0>
   112ec:	bl	1197c <lista_nova@@Base>
   112f0:	mov	r9, r0
   112f4:	mov	r0, r6
   112f8:	bl	10d68 <feof@plt>
   112fc:	cmp	r0, #0
   11300:	bne	11358 <main@@Base+0x1a4>
   11304:	add	r4, sp, #16
   11308:	mov	r0, r4
   1130c:	mov	r1, #255	; 0xff
   11310:	mov	r2, r6
   11314:	bl	10d98 <fgets_unlocked@plt>
   11318:	mov	r0, r4
   1131c:	mov	r1, #10
   11320:	bl	10d80 <strchr@plt>
   11324:	cmp	r0, #0
   11328:	mov	r2, #0
   1132c:	movne	r1, #0
   11330:	strbne	r1, [r0]
   11334:	mov	r0, r9
   11338:	mov	r1, r4
   1133c:	bl	11a28 <lista_insere@@Base>
   11340:	mov	r0, r6
   11344:	bl	10d68 <feof@plt>
   11348:	cmp	r0, #0
   1134c:	beq	11308 <main@@Base+0x154>
   11350:	b	11358 <main@@Base+0x1a4>
   11354:	mov	r9, #0
   11358:	mov	r0, r7
   1135c:	bl	115c0 <vetor_tamanho@@Base>
   11360:	mov	r1, r0
   11364:	movw	r0, #7713	; 0x1e21
   11368:	movt	r0, #1
   1136c:	bl	10cf0 <printf@plt>
   11370:	mov	r0, r7
   11374:	bl	10ea0 <retira_duplicados@@Base>
   11378:	mov	r0, r7
   1137c:	bl	115c0 <vetor_tamanho@@Base>
   11380:	mov	r1, r0
   11384:	movw	r0, #7732	; 0x1e34
   11388:	movt	r0, #1
   1138c:	bl	10cf0 <printf@plt>
   11390:	mov	r0, sl
   11394:	mov	r1, r9
   11398:	bl	10f50 <interseta@@Base>
   1139c:	cmp	r0, #0
   113a0:	stmib	sp, {r0, r9, sl}
   113a4:	beq	113c0 <main@@Base+0x20c>
   113a8:	bl	115c0 <vetor_tamanho@@Base>
   113ac:	mov	r1, r0
   113b0:	movw	r0, #7760	; 0x1e50
   113b4:	movt	r0, #1
   113b8:	bl	10cf0 <printf@plt>
   113bc:	b	113cc <main@@Base+0x218>
   113c0:	movw	r0, #7824	; 0x1e90
   113c4:	movt	r0, #1
   113c8:	bl	10d38 <puts@plt>
   113cc:	bl	114b0 <vetor_novo@@Base>
   113d0:	mov	sl, r0
   113d4:	ldr	r0, [sp, #12]
   113d8:	ldr	r9, [r0]
   113dc:	cmp	r9, #0
   113e0:	bne	113f4 <main@@Base+0x240>
   113e4:	b	11430 <main@@Base+0x27c>
   113e8:	ldr	r9, [r9, #4]
   113ec:	cmp	r9, #0
   113f0:	beq	11430 <main@@Base+0x27c>
   113f4:	ldr	r4, [r9]
   113f8:	mov	r0, r4
   113fc:	bl	10d74 <strlen@plt>
   11400:	add	r0, r4, r0
   11404:	mov	r1, #0
   11408:	mov	r2, #10
   1140c:	sub	r0, r0, #5
   11410:	bl	10ce4 <strtol@plt>
   11414:	cmp	r0, #2000	; 0x7d0
   11418:	bge	113e8 <main@@Base+0x234>
   1141c:	ldr	r2, [sl]
   11420:	mov	r0, sl
   11424:	mov	r1, r4
   11428:	bl	11600 <vetor_insere@@Base>
   1142c:	b	113e8 <main@@Base+0x234>
   11430:	cmp	sl, #0
   11434:	beq	11454 <main@@Base+0x2a0>
   11438:	mov	r0, sl
   1143c:	bl	115c0 <vetor_tamanho@@Base>
   11440:	mov	r1, r0
   11444:	movw	r0, #7791	; 0x1e6f
   11448:	movt	r0, #1
   1144c:	bl	10cf0 <printf@plt>
   11450:	b	11460 <main@@Base+0x2ac>
   11454:	movw	r0, #7847	; 0x1ea7
   11458:	movt	r0, #1
   1145c:	bl	10d38 <puts@plt>
   11460:	ldmib	sp, {r4, r9}
   11464:	mov	r0, r7
   11468:	bl	114dc <vetor_apaga@@Base>
   1146c:	mov	r0, r4
   11470:	bl	114dc <vetor_apaga@@Base>
   11474:	mov	r0, sl
   11478:	bl	114dc <vetor_apaga@@Base>
   1147c:	ldr	r0, [sp, #12]
   11480:	bl	119a8 <lista_apaga@@Base>
   11484:	mov	r0, r9
   11488:	bl	119a8 <lista_apaga@@Base>
   1148c:	mov	r0, r8
   11490:	bl	10d8c <fclose@plt>
   11494:	mov	r0, r5
   11498:	bl	10d8c <fclose@plt>
   1149c:	mov	r0, r6
   114a0:	bl	10d8c <fclose@plt>
   114a4:	mov	r0, #0
   114a8:	sub	sp, fp, #28
   114ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114b0 <vetor_novo@@Base>:
   114b0:	push	{fp, lr}
   114b4:	mov	fp, sp
   114b8:	mov	r0, #12
   114bc:	bl	10d44 <malloc@plt>
   114c0:	cmp	r0, #0
   114c4:	moveq	r0, #0
   114c8:	movne	r1, #0
   114cc:	strne	r1, [r0]
   114d0:	strne	r1, [r0, #4]
   114d4:	strne	r1, [r0, #8]
   114d8:	pop	{fp, pc}

000114dc <vetor_apaga@@Base>:
   114dc:	cmp	r0, #0
   114e0:	bxeq	lr
   114e4:	push	{r4, r5, fp, lr}
   114e8:	add	fp, sp, #8
   114ec:	ldr	r1, [r0]
   114f0:	mov	r4, r0
   114f4:	ldr	r0, [r0, #8]
   114f8:	cmp	r1, #1
   114fc:	blt	11520 <vetor_apaga@@Base+0x44>
   11500:	mov	r5, #0
   11504:	ldr	r0, [r0, r5, lsl #2]
   11508:	bl	10d08 <free@plt>
   1150c:	ldr	r1, [r4]
   11510:	ldr	r0, [r4, #8]
   11514:	add	r5, r5, #1
   11518:	cmp	r5, r1
   1151c:	blt	11504 <vetor_apaga@@Base+0x28>
   11520:	bl	10d08 <free@plt>
   11524:	mov	r0, r4
   11528:	pop	{r4, r5, fp, lr}
   1152c:	b	10d08 <free@plt>

00011530 <vetor_atribui@@Base>:
   11530:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11534:	add	fp, sp, #24
   11538:	mvn	r5, #0
   1153c:	cmp	r0, #0
   11540:	beq	115b8 <vetor_atribui@@Base+0x88>
   11544:	mov	r4, r1
   11548:	cmp	r1, #0
   1154c:	bmi	115b8 <vetor_atribui@@Base+0x88>
   11550:	mov	r7, r0
   11554:	ldr	r0, [r0]
   11558:	cmp	r0, r4
   1155c:	ble	115b8 <vetor_atribui@@Base+0x88>
   11560:	mov	r0, r2
   11564:	mov	r8, r2
   11568:	bl	10d74 <strlen@plt>
   1156c:	mov	r9, r0
   11570:	ldr	r0, [r7, #8]
   11574:	ldr	r6, [r0, r4, lsl #2]
   11578:	mov	r0, r6
   1157c:	bl	10d74 <strlen@plt>
   11580:	cmp	r9, r0
   11584:	bls	115a8 <vetor_atribui@@Base+0x78>
   11588:	add	r1, r9, #1
   1158c:	mov	r0, r6
   11590:	bl	10d20 <realloc@plt>
   11594:	mov	r6, r0
   11598:	ldr	r0, [r7, #8]
   1159c:	cmp	r6, #0
   115a0:	str	r6, [r0, r4, lsl #2]
   115a4:	beq	115b8 <vetor_atribui@@Base+0x88>
   115a8:	mov	r0, r6
   115ac:	mov	r1, r8
   115b0:	bl	10d2c <strcpy@plt>
   115b4:	mov	r5, r4
   115b8:	mov	r0, r5
   115bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000115c0 <vetor_tamanho@@Base>:
   115c0:	cmp	r0, #0
   115c4:	ldrne	r0, [r0]
   115c8:	mvneq	r0, #0
   115cc:	bx	lr

000115d0 <vetor_elemento@@Base>:
   115d0:	mov	r2, r0
   115d4:	mov	r0, #0
   115d8:	cmp	r2, #0
   115dc:	beq	115fc <vetor_elemento@@Base+0x2c>
   115e0:	cmp	r1, #0
   115e4:	bmi	115fc <vetor_elemento@@Base+0x2c>
   115e8:	ldr	r3, [r2]
   115ec:	cmp	r3, r1
   115f0:	bxle	lr
   115f4:	ldr	r0, [r2, #8]
   115f8:	ldr	r0, [r0, r1, lsl #2]
   115fc:	bx	lr

00011600 <vetor_insere@@Base>:
   11600:	push	{r4, r5, r6, r7, fp, lr}
   11604:	add	fp, sp, #16
   11608:	mvn	r4, #0
   1160c:	cmp	r0, #0
   11610:	beq	11718 <vetor_insere@@Base+0x118>
   11614:	mov	r5, r2
   11618:	cmp	r2, #0
   1161c:	bmi	11718 <vetor_insere@@Base+0x118>
   11620:	mov	r6, r0
   11624:	ldr	r0, [r0]
   11628:	cmp	r0, r5
   1162c:	blt	11718 <vetor_insere@@Base+0x118>
   11630:	mov	r7, r1
   11634:	ldr	r1, [r6, #4]
   11638:	cmp	r0, r1
   1163c:	bne	1166c <vetor_insere@@Base+0x6c>
   11640:	cmp	r0, #0
   11644:	lsl	r1, r0, #1
   11648:	movweq	r1, #1
   1164c:	str	r1, [r6, #4]
   11650:	lsl	r1, r1, #2
   11654:	ldr	r0, [r6, #8]
   11658:	bl	10d20 <realloc@plt>
   1165c:	cmp	r0, #0
   11660:	str	r0, [r6, #8]
   11664:	beq	11718 <vetor_insere@@Base+0x118>
   11668:	ldr	r0, [r6]
   1166c:	cmp	r0, r5
   11670:	ble	116dc <vetor_insere@@Base+0xdc>
   11674:	sub	r1, r0, r5
   11678:	tst	r1, #1
   1167c:	mov	r1, r0
   11680:	beq	11694 <vetor_insere@@Base+0x94>
   11684:	ldr	r2, [r6, #8]
   11688:	sub	r1, r0, #1
   1168c:	ldr	r3, [r2, r1, lsl #2]
   11690:	str	r3, [r2, r0, lsl #2]
   11694:	add	r2, r5, #1
   11698:	cmp	r0, r2
   1169c:	beq	116dc <vetor_insere@@Base+0xdc>
   116a0:	lsl	r0, r1, #2
   116a4:	sub	r1, r1, #1
   116a8:	ldr	r2, [r6, #8]
   116ac:	ldr	r3, [r2, r1, lsl #2]
   116b0:	str	r3, [r2, r0]
   116b4:	ldr	r2, [r6, #8]
   116b8:	add	r3, r2, r0
   116bc:	sub	r0, r0, #8
   116c0:	ldr	r3, [r3, #-8]
   116c4:	str	r3, [r2, r1, lsl #2]
   116c8:	sub	r2, r1, #2
   116cc:	sub	r1, r1, #1
   116d0:	cmp	r1, r5
   116d4:	mov	r1, r2
   116d8:	bgt	116a8 <vetor_insere@@Base+0xa8>
   116dc:	mov	r0, r7
   116e0:	bl	10d74 <strlen@plt>
   116e4:	add	r0, r0, #1
   116e8:	mov	r1, #1
   116ec:	bl	10ccc <calloc@plt>
   116f0:	ldr	r1, [r6, #8]
   116f4:	cmp	r0, #0
   116f8:	str	r0, [r1, r5, lsl #2]
   116fc:	beq	11718 <vetor_insere@@Base+0x118>
   11700:	mov	r1, r7
   11704:	bl	10d2c <strcpy@plt>
   11708:	ldr	r0, [r6]
   1170c:	mov	r4, r5
   11710:	add	r0, r0, #1
   11714:	str	r0, [r6]
   11718:	mov	r0, r4
   1171c:	pop	{r4, r5, r6, r7, fp, pc}

00011720 <vetor_remove@@Base>:
   11720:	push	{r4, r5, fp, lr}
   11724:	add	fp, sp, #8
   11728:	mov	r4, r0
   1172c:	mvn	r0, #0
   11730:	cmp	r4, #0
   11734:	beq	117e8 <vetor_remove@@Base+0xc8>
   11738:	mov	r5, r1
   1173c:	cmp	r1, #0
   11740:	bmi	117e8 <vetor_remove@@Base+0xc8>
   11744:	ldr	r1, [r4]
   11748:	cmp	r1, r5
   1174c:	pople	{r4, r5, fp, pc}
   11750:	ldr	r0, [r4, #8]
   11754:	ldr	r0, [r0, r5, lsl #2]
   11758:	bl	10d08 <free@plt>
   1175c:	ldr	r0, [r4]
   11760:	add	r1, r5, #1
   11764:	cmp	r1, r0
   11768:	bge	117dc <vetor_remove@@Base+0xbc>
   1176c:	mvn	r2, r5
   11770:	sub	ip, r0, #2
   11774:	add	r2, r0, r2
   11778:	tst	r2, #1
   1177c:	bne	11794 <vetor_remove@@Base+0x74>
   11780:	mov	r2, r1
   11784:	mov	r1, r5
   11788:	cmp	ip, r5
   1178c:	bne	117ac <vetor_remove@@Base+0x8c>
   11790:	b	117dc <vetor_remove@@Base+0xbc>
   11794:	ldr	r2, [r4, #8]
   11798:	ldr	r3, [r2, r1, lsl #2]
   1179c:	str	r3, [r2, r5, lsl #2]
   117a0:	add	r2, r5, #2
   117a4:	cmp	ip, r5
   117a8:	beq	117dc <vetor_remove@@Base+0xbc>
   117ac:	ldr	r3, [r4, #8]
   117b0:	ldr	r5, [r3, r2, lsl #2]
   117b4:	str	r5, [r3, r1, lsl #2]
   117b8:	ldr	r1, [r4, #8]
   117bc:	add	r3, r1, r2, lsl #2
   117c0:	ldr	r3, [r3, #4]
   117c4:	str	r3, [r1, r2, lsl #2]
   117c8:	add	r3, r2, #2
   117cc:	add	r1, r2, #1
   117d0:	cmp	r3, r0
   117d4:	mov	r2, r3
   117d8:	blt	117ac <vetor_remove@@Base+0x8c>
   117dc:	sub	r0, r0, #1
   117e0:	str	r0, [r4]
   117e4:	mov	r0, #0
   117e8:	pop	{r4, r5, fp, pc}

000117ec <vetor_pesquisa@@Base>:
   117ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   117f0:	add	fp, sp, #24
   117f4:	mvn	r8, #0
   117f8:	cmp	r0, #0
   117fc:	beq	11838 <vetor_pesquisa@@Base+0x4c>
   11800:	ldr	r6, [r0]
   11804:	cmp	r6, #1
   11808:	blt	11838 <vetor_pesquisa@@Base+0x4c>
   1180c:	ldr	r4, [r0, #8]
   11810:	mov	r5, r1
   11814:	mov	r7, #0
   11818:	ldr	r0, [r4, r7, lsl #2]
   1181c:	mov	r1, r5
   11820:	bl	10cd8 <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	beq	11840 <vetor_pesquisa@@Base+0x54>
   1182c:	add	r7, r7, #1
   11830:	cmp	r7, r6
   11834:	blt	11818 <vetor_pesquisa@@Base+0x2c>
   11838:	mov	r0, r8
   1183c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11840:	mov	r0, r7
   11844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011848 <vetor_ordena@@Base>:
   11848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1184c:	add	fp, sp, #28
   11850:	sub	sp, sp, #4
   11854:	cmp	r0, #0
   11858:	beq	118f4 <vetor_ordena@@Base+0xac>
   1185c:	ldr	r1, [r0]
   11860:	mov	sl, r0
   11864:	mov	r0, #0
   11868:	cmp	r1, #2
   1186c:	str	r1, [sp]
   11870:	blt	11904 <vetor_ordena@@Base+0xbc>
   11874:	ldr	r5, [sl, #8]
   11878:	mov	r8, #1
   1187c:	b	11898 <vetor_ordena@@Base+0x50>
   11880:	mov	r4, r8
   11884:	ldr	r0, [sp]
   11888:	add	r8, r8, #1
   1188c:	str	r6, [r5, r4, lsl #2]
   11890:	cmp	r8, r0
   11894:	bge	11900 <vetor_ordena@@Base+0xb8>
   11898:	sub	r9, r8, #1
   1189c:	ldr	r6, [r5, r8, lsl #2]
   118a0:	ldr	r7, [r5, r9, lsl #2]
   118a4:	mov	r0, r6
   118a8:	mov	r1, r7
   118ac:	bl	10cd8 <strcmp@plt>
   118b0:	cmn	r0, #1
   118b4:	bgt	11880 <vetor_ordena@@Base+0x38>
   118b8:	add	r0, r5, r9, lsl #2
   118bc:	mov	r4, r9
   118c0:	cmp	r9, #1
   118c4:	str	r7, [r0, #4]
   118c8:	ldr	r5, [sl, #8]
   118cc:	blt	11884 <vetor_ordena@@Base+0x3c>
   118d0:	add	r0, r5, r4, lsl #2
   118d4:	ldr	r7, [r0, #-4]
   118d8:	mov	r0, r6
   118dc:	mov	r1, r7
   118e0:	bl	10cd8 <strcmp@plt>
   118e4:	sub	r9, r4, #1
   118e8:	cmp	r0, #0
   118ec:	bmi	118b8 <vetor_ordena@@Base+0x70>
   118f0:	b	11884 <vetor_ordena@@Base+0x3c>
   118f4:	mvn	r0, #0
   118f8:	sub	sp, fp, #28
   118fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11900:	mov	r0, #0
   11904:	sub	sp, fp, #28
   11908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001190c <novo_str@@Base>:
   1190c:	push	{r4, r5, r6, sl, fp, lr}
   11910:	add	fp, sp, #16
   11914:	mov	r6, r0
   11918:	mov	r0, #12
   1191c:	bl	10d44 <malloc@plt>
   11920:	mov	r5, #0
   11924:	cmp	r0, #0
   11928:	beq	11964 <novo_str@@Base+0x58>
   1192c:	mov	r4, r0
   11930:	mov	r0, r6
   11934:	bl	10d74 <strlen@plt>
   11938:	add	r0, r0, #1
   1193c:	bl	10d44 <malloc@plt>
   11940:	cmp	r0, #0
   11944:	str	r0, [r4]
   11948:	beq	1196c <novo_str@@Base+0x60>
   1194c:	mov	r1, r6
   11950:	bl	10d2c <strcpy@plt>
   11954:	mov	r0, #0
   11958:	mov	r5, r4
   1195c:	str	r0, [r4, #4]
   11960:	str	r0, [r4, #8]
   11964:	mov	r0, r5
   11968:	pop	{r4, r5, r6, sl, fp, pc}
   1196c:	mov	r0, r4
   11970:	bl	10d08 <free@plt>
   11974:	mov	r0, r5
   11978:	pop	{r4, r5, r6, sl, fp, pc}

0001197c <lista_nova@@Base>:
   1197c:	push	{fp, lr}
   11980:	mov	fp, sp
   11984:	mov	r0, #12
   11988:	bl	10d44 <malloc@plt>
   1198c:	cmp	r0, #0
   11990:	moveq	r0, #0
   11994:	movne	r1, #0
   11998:	strne	r1, [r0]
   1199c:	strne	r1, [r0, #4]
   119a0:	strne	r1, [r0, #8]
   119a4:	pop	{fp, pc}

000119a8 <lista_apaga@@Base>:
   119a8:	cmp	r0, #0
   119ac:	bxeq	lr
   119b0:	push	{r4, r5, fp, lr}
   119b4:	add	fp, sp, #8
   119b8:	mov	r4, r0
   119bc:	ldr	r5, [r4]
   119c0:	cmp	r5, #0
   119c4:	beq	119ec <lista_apaga@@Base+0x44>
   119c8:	ldr	r0, [r5, #4]
   119cc:	str	r0, [r4]
   119d0:	ldr	r0, [r5]
   119d4:	bl	10d08 <free@plt>
   119d8:	mov	r0, r5
   119dc:	bl	10d08 <free@plt>
   119e0:	ldr	r5, [r4]
   119e4:	cmp	r5, #0
   119e8:	bne	119c8 <lista_apaga@@Base+0x20>
   119ec:	mov	r0, r4
   119f0:	pop	{r4, r5, fp, lr}
   119f4:	b	10d08 <free@plt>

000119f8 <lista_tamanho@@Base>:
   119f8:	cmp	r0, #0
   119fc:	ldrne	r0, [r0, #8]
   11a00:	mvneq	r0, #0
   11a04:	bx	lr

00011a08 <lista_inicio@@Base>:
   11a08:	cmp	r0, #0
   11a0c:	ldrne	r0, [r0]
   11a10:	moveq	r0, #0
   11a14:	bx	lr

00011a18 <lista_fim@@Base>:
   11a18:	cmp	r0, #0
   11a1c:	ldrne	r0, [r0, #4]
   11a20:	moveq	r0, #0
   11a24:	bx	lr

00011a28 <lista_insere@@Base>:
   11a28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a2c:	add	fp, sp, #24
   11a30:	cmp	r0, #0
   11a34:	mov	r7, #0
   11a38:	movne	r6, r1
   11a3c:	cmpne	r1, #0
   11a40:	bne	11a4c <lista_insere@@Base+0x24>
   11a44:	mov	r0, r7
   11a48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a4c:	mov	r5, r0
   11a50:	mov	r0, #12
   11a54:	mov	r8, r2
   11a58:	bl	10d44 <malloc@plt>
   11a5c:	cmp	r0, #0
   11a60:	beq	11a44 <lista_insere@@Base+0x1c>
   11a64:	mov	r4, r0
   11a68:	mov	r0, r6
   11a6c:	bl	10d74 <strlen@plt>
   11a70:	add	r0, r0, #1
   11a74:	bl	10d44 <malloc@plt>
   11a78:	cmp	r0, #0
   11a7c:	str	r0, [r4]
   11a80:	beq	11ad8 <lista_insere@@Base+0xb0>
   11a84:	mov	r1, r6
   11a88:	bl	10d2c <strcpy@plt>
   11a8c:	mov	r0, #0
   11a90:	cmp	r8, #0
   11a94:	str	r0, [r4, #4]
   11a98:	str	r0, [r4, #8]
   11a9c:	ldr	r1, [r5, #8]
   11aa0:	ldr	r0, [r5]
   11aa4:	add	r1, r1, #1
   11aa8:	str	r1, [r5, #8]
   11aac:	beq	11ae8 <lista_insere@@Base+0xc0>
   11ab0:	cmp	r0, r8
   11ab4:	beq	11b0c <lista_insere@@Base+0xe4>
   11ab8:	ldr	r0, [r8, #8]
   11abc:	str	r8, [r4, #4]
   11ac0:	str	r0, [r4, #8]
   11ac4:	str	r4, [r0, #4]
   11ac8:	str	r4, [r8, #8]
   11acc:	mov	r7, r4
   11ad0:	mov	r0, r7
   11ad4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ad8:	mov	r0, r4
   11adc:	bl	10d08 <free@plt>
   11ae0:	mov	r0, r7
   11ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ae8:	cmp	r0, #0
   11aec:	beq	11b24 <lista_insere@@Base+0xfc>
   11af0:	ldr	r0, [r5, #4]
   11af4:	str	r0, [r4, #8]
   11af8:	str	r4, [r0, #4]
   11afc:	str	r4, [r5, #4]
   11b00:	mov	r7, r4
   11b04:	mov	r0, r7
   11b08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b0c:	str	r8, [r4, #4]
   11b10:	str	r4, [r8, #8]
   11b14:	str	r4, [r5]
   11b18:	mov	r7, r4
   11b1c:	mov	r0, r7
   11b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b24:	str	r4, [r5]
   11b28:	str	r4, [r5, #4]
   11b2c:	mov	r7, r4
   11b30:	mov	r0, r7
   11b34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011b38 <lista_remove@@Base>:
   11b38:	push	{r4, r5, fp, lr}
   11b3c:	add	fp, sp, #8
   11b40:	cmp	r0, #0
   11b44:	mov	r4, #0
   11b48:	movne	r5, r1
   11b4c:	cmpne	r1, #0
   11b50:	bne	11b5c <lista_remove@@Base+0x24>
   11b54:	mov	r0, r4
   11b58:	pop	{r4, r5, fp, pc}
   11b5c:	ldr	r1, [r0, #8]
   11b60:	sub	r1, r1, #1
   11b64:	str	r1, [r0, #8]
   11b68:	ldr	r1, [r5, #8]
   11b6c:	ldr	r4, [r5, #4]
   11b70:	cmp	r1, #0
   11b74:	beq	11b84 <lista_remove@@Base+0x4c>
   11b78:	str	r4, [r1, #4]
   11b7c:	ldr	r4, [r5, #4]
   11b80:	b	11b88 <lista_remove@@Base+0x50>
   11b84:	str	r4, [r0]
   11b88:	cmp	r4, #0
   11b8c:	add	r2, r4, #8
   11b90:	addeq	r2, r0, #4
   11b94:	str	r1, [r2]
   11b98:	ldr	r0, [r5]
   11b9c:	bl	10d08 <free@plt>
   11ba0:	mov	r0, r5
   11ba4:	bl	10d08 <free@plt>
   11ba8:	mov	r0, r4
   11bac:	pop	{r4, r5, fp, pc}

00011bb0 <lista_pesquisa@@Base>:
   11bb0:	push	{r4, r5, r6, sl, fp, lr}
   11bb4:	add	fp, sp, #16
   11bb8:	cmp	r0, #0
   11bbc:	mov	r4, #0
   11bc0:	movne	r5, r1
   11bc4:	cmpne	r1, #0
   11bc8:	bne	11bd4 <lista_pesquisa@@Base+0x24>
   11bcc:	mov	r0, r4
   11bd0:	pop	{r4, r5, r6, sl, fp, pc}
   11bd4:	cmp	r2, #1
   11bd8:	bhi	11bcc <lista_pesquisa@@Base+0x1c>
   11bdc:	cmp	r2, #0
   11be0:	beq	11c14 <lista_pesquisa@@Base+0x64>
   11be4:	ldr	r6, [r0, #4]
   11be8:	cmp	r6, #0
   11bec:	beq	11bcc <lista_pesquisa@@Base+0x1c>
   11bf0:	ldr	r0, [r6]
   11bf4:	mov	r1, r5
   11bf8:	bl	10cd8 <strcmp@plt>
   11bfc:	cmp	r0, #0
   11c00:	beq	11c44 <lista_pesquisa@@Base+0x94>
   11c04:	ldr	r6, [r6, #8]
   11c08:	cmp	r6, #0
   11c0c:	bne	11bf0 <lista_pesquisa@@Base+0x40>
   11c10:	b	11bcc <lista_pesquisa@@Base+0x1c>
   11c14:	ldr	r6, [r0]
   11c18:	cmp	r6, #0
   11c1c:	beq	11bcc <lista_pesquisa@@Base+0x1c>
   11c20:	ldr	r0, [r6]
   11c24:	mov	r1, r5
   11c28:	bl	10cd8 <strcmp@plt>
   11c2c:	cmp	r0, #0
   11c30:	beq	11c44 <lista_pesquisa@@Base+0x94>
   11c34:	ldr	r6, [r6, #4]
   11c38:	cmp	r6, #0
   11c3c:	bne	11c20 <lista_pesquisa@@Base+0x70>
   11c40:	b	11bcc <lista_pesquisa@@Base+0x1c>
   11c44:	mov	r4, r6
   11c48:	mov	r0, r4
   11c4c:	pop	{r4, r5, r6, sl, fp, pc}

00011c50 <lista_ordena@@Base>:
   11c50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c54:	add	fp, sp, #24
   11c58:	cmp	r0, #0
   11c5c:	beq	11cdc <lista_ordena@@Base+0x8c>
   11c60:	ldr	r0, [r0]
   11c64:	mov	r8, #0
   11c68:	mov	r5, r0
   11c6c:	ldr	r4, [r5, #4]!
   11c70:	cmp	r4, #0
   11c74:	bne	11c8c <lista_ordena@@Base+0x3c>
   11c78:	b	11ce0 <lista_ordena@@Base+0x90>
   11c7c:	mov	r5, r0
   11c80:	ldr	r4, [r5, #4]!
   11c84:	cmp	r4, #0
   11c88:	beq	11ce0 <lista_ordena@@Base+0x90>
   11c8c:	mov	r9, r0
   11c90:	mov	r7, r0
   11c94:	mov	r6, r4
   11c98:	ldr	r1, [r7]
   11c9c:	ldr	r0, [r6]
   11ca0:	bl	10cd8 <strcmp@plt>
   11ca4:	cmp	r0, #0
   11ca8:	movmi	r7, r6
   11cac:	ldr	r6, [r6, #4]
   11cb0:	cmp	r6, #0
   11cb4:	bne	11c98 <lista_ordena@@Base+0x48>
   11cb8:	cmp	r7, r9
   11cbc:	mov	r0, r4
   11cc0:	beq	11c7c <lista_ordena@@Base+0x2c>
   11cc4:	ldr	r0, [r9]
   11cc8:	ldr	r1, [r7]
   11ccc:	str	r1, [r9]
   11cd0:	str	r0, [r7]
   11cd4:	ldr	r0, [r5]
   11cd8:	b	11c7c <lista_ordena@@Base+0x2c>
   11cdc:	mvn	r8, #0
   11ce0:	mov	r0, r8
   11ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011ce8 <lista_inverte@@Base>:
   11ce8:	push	{fp, lr}
   11cec:	mov	fp, sp
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d50 <lista_inverte@@Base+0x68>
   11cf8:	ldr	r2, [r0, #8]
   11cfc:	mov	r1, #0
   11d00:	cmp	r2, #2
   11d04:	blt	11d84 <lista_inverte@@Base+0x9c>
   11d08:	sub	r1, r2, #2
   11d0c:	cmp	r1, #0
   11d10:	ble	11d5c <lista_inverte@@Base+0x74>
   11d14:	ldr	ip, [r0]
   11d18:	ldr	r3, [ip, #4]
   11d1c:	mov	r2, r3
   11d20:	ldr	r3, [r3, #4]
   11d24:	subs	r1, r1, #1
   11d28:	ldr	lr, [r2, #8]
   11d2c:	str	r3, [lr, #4]
   11d30:	ldr	r3, [r2, #4]
   11d34:	str	lr, [r3, #8]
   11d38:	str	ip, [r2, #4]
   11d3c:	str	r2, [ip, #8]
   11d40:	mov	ip, r2
   11d44:	bne	11d1c <lista_inverte@@Base+0x34>
   11d48:	str	r2, [r0]
   11d4c:	b	11d60 <lista_inverte@@Base+0x78>
   11d50:	mvn	r1, #0
   11d54:	mov	r0, r1
   11d58:	pop	{fp, pc}
   11d5c:	ldr	r2, [r0]
   11d60:	ldr	r3, [r0, #4]
   11d64:	mov	r1, #0
   11d68:	ldr	ip, [r3, #8]
   11d6c:	str	ip, [r0, #4]
   11d70:	str	r1, [ip, #4]
   11d74:	str	r2, [r3, #4]
   11d78:	str	r1, [r3, #8]
   11d7c:	str	r3, [r2, #8]
   11d80:	str	r3, [r0]
   11d84:	mov	r0, r1
   11d88:	pop	{fp, pc}

00011d8c <__libc_csu_init@@Base>:
   11d8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d90:	mov	r7, r0
   11d94:	ldr	r6, [pc, #72]	; 11de4 <__libc_csu_init@@Base+0x58>
   11d98:	ldr	r5, [pc, #72]	; 11de8 <__libc_csu_init@@Base+0x5c>
   11d9c:	add	r6, pc, r6
   11da0:	add	r5, pc, r5
   11da4:	sub	r6, r6, r5
   11da8:	mov	r8, r1
   11dac:	mov	r9, r2
   11db0:	bl	10cac <calloc@plt-0x20>
   11db4:	asrs	r6, r6, #2
   11db8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dbc:	mov	r4, #0
   11dc0:	add	r4, r4, #1
   11dc4:	ldr	r3, [r5], #4
   11dc8:	mov	r2, r9
   11dcc:	mov	r1, r8
   11dd0:	mov	r0, r7
   11dd4:	blx	r3
   11dd8:	cmp	r6, r4
   11ddc:	bne	11dc0 <__libc_csu_init@@Base+0x34>
   11de0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11de4:	andeq	r0, r1, r8, ror #2
   11de8:	andeq	r0, r1, r0, ror #2

00011dec <__libc_csu_fini@@Base>:
   11dec:	bx	lr

Disassembly of section .fini:

00011df0 <.fini>:
   11df0:	push	{r3, lr}
   11df4:	pop	{r3, pc}
