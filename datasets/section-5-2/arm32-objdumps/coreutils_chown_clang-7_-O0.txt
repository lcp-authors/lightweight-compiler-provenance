
../repos/coreutils/src/chown:     file format elf32-littlearm


Disassembly of section .init:

000111e0 <.init>:
   111e0:	push	{r3, lr}
   111e4:	bl	11594 <__assert_fail@plt+0x4c>
   111e8:	pop	{r3, pc}

Disassembly of section .plt:

000111ec <fstatfs64@plt-0x14>:
   111ec:	push	{lr}		; (str lr, [sp, #-4]!)
   111f0:	ldr	lr, [pc, #4]	; 111fc <fstatfs64@plt-0x4>
   111f4:	add	lr, pc, lr
   111f8:	ldr	pc, [lr, #8]!
   111fc:	andeq	r5, r2, r4, lsl #28

00011200 <fstatfs64@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #151552	; 0x25000
   11208:	ldr	pc, [ip, #3588]!	; 0xe04

0001120c <calloc@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #151552	; 0x25000
   11214:	ldr	pc, [ip, #3580]!	; 0xdfc

00011218 <endgrent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #151552	; 0x25000
   11220:	ldr	pc, [ip, #3572]!	; 0xdf4

00011224 <fputs_unlocked@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #151552	; 0x25000
   1122c:	ldr	pc, [ip, #3564]!	; 0xdec

00011230 <raise@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #151552	; 0x25000
   11238:	ldr	pc, [ip, #3556]!	; 0xde4

0001123c <getpwnam@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #151552	; 0x25000
   11244:	ldr	pc, [ip, #3548]!	; 0xddc

00011248 <strcmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #151552	; 0x25000
   11250:	ldr	pc, [ip, #3540]!	; 0xdd4

00011254 <getpwuid@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #151552	; 0x25000
   1125c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011260 <printf@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #151552	; 0x25000
   11268:	ldr	pc, [ip, #3524]!	; 0xdc4

0001126c <fflush@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #151552	; 0x25000
   11274:	ldr	pc, [ip, #3516]!	; 0xdbc

00011278 <memmove@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #151552	; 0x25000
   11280:	ldr	pc, [ip, #3508]!	; 0xdb4

00011284 <free@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #151552	; 0x25000
   1128c:	ldr	pc, [ip, #3500]!	; 0xdac

00011290 <_exit@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #151552	; 0x25000
   11298:	ldr	pc, [ip, #3492]!	; 0xda4

0001129c <memcpy@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #151552	; 0x25000
   112a4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112a8 <mbsinit@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #151552	; 0x25000
   112b0:	ldr	pc, [ip, #3476]!	; 0xd94

000112b4 <memcmp@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #151552	; 0x25000
   112bc:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c0 <stpcpy@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #151552	; 0x25000
   112c8:	ldr	pc, [ip, #3460]!	; 0xd84

000112cc <realloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #151552	; 0x25000
   112d4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112d8 <textdomain@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #151552	; 0x25000
   112e0:	ldr	pc, [ip, #3444]!	; 0xd74

000112e4 <__fxstatat64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #151552	; 0x25000
   112ec:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f0 <iswprint@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #151552	; 0x25000
   112f8:	ldr	pc, [ip, #3428]!	; 0xd64

000112fc <__fxstat64@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #151552	; 0x25000
   11304:	ldr	pc, [ip, #3420]!	; 0xd5c

00011308 <lseek64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #151552	; 0x25000
   11310:	ldr	pc, [ip, #3412]!	; 0xd54

00011314 <__ctype_get_mb_cur_max@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #151552	; 0x25000
   1131c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011320 <__fpending@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #151552	; 0x25000
   11328:	ldr	pc, [ip, #3396]!	; 0xd44

0001132c <ferror_unlocked@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #151552	; 0x25000
   11334:	ldr	pc, [ip, #3388]!	; 0xd3c

00011338 <mbrtowc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #151552	; 0x25000
   11340:	ldr	pc, [ip, #3380]!	; 0xd34

00011344 <error@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #151552	; 0x25000
   1134c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011350 <open64@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #151552	; 0x25000
   11358:	ldr	pc, [ip, #3364]!	; 0xd24

0001135c <malloc@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #151552	; 0x25000
   11364:	ldr	pc, [ip, #3356]!	; 0xd1c

00011368 <__libc_start_main@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #151552	; 0x25000
   11370:	ldr	pc, [ip, #3348]!	; 0xd14

00011374 <__freading@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #151552	; 0x25000
   1137c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011380 <__gmon_start__@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #151552	; 0x25000
   11388:	ldr	pc, [ip, #3332]!	; 0xd04

0001138c <getopt_long@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #151552	; 0x25000
   11394:	ldr	pc, [ip, #3324]!	; 0xcfc

00011398 <__ctype_b_loc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #151552	; 0x25000
   113a0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a4 <exit@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #151552	; 0x25000
   113ac:	ldr	pc, [ip, #3308]!	; 0xcec

000113b0 <gettext@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #151552	; 0x25000
   113b8:	ldr	pc, [ip, #3300]!	; 0xce4

000113bc <strtoul@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #151552	; 0x25000
   113c4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113c8 <strlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #151552	; 0x25000
   113d0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d4 <strchr@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #151552	; 0x25000
   113dc:	ldr	pc, [ip, #3276]!	; 0xccc

000113e0 <openat64@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #151552	; 0x25000
   113e8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113ec <fchown@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #151552	; 0x25000
   113f4:	ldr	pc, [ip, #3260]!	; 0xcbc

000113f8 <fprintf@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #151552	; 0x25000
   11400:	ldr	pc, [ip, #3252]!	; 0xcb4

00011404 <__errno_location@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #151552	; 0x25000
   1140c:	ldr	pc, [ip, #3244]!	; 0xcac

00011410 <__cxa_atexit@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #151552	; 0x25000
   11418:	ldr	pc, [ip, #3236]!	; 0xca4

0001141c <memset@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #151552	; 0x25000
   11424:	ldr	pc, [ip, #3228]!	; 0xc9c

00011428 <fileno@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #151552	; 0x25000
   11430:	ldr	pc, [ip, #3220]!	; 0xc94

00011434 <fclose@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #151552	; 0x25000
   1143c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011440 <fseeko64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #151552	; 0x25000
   11448:	ldr	pc, [ip, #3204]!	; 0xc84

0001144c <fcntl64@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #151552	; 0x25000
   11454:	ldr	pc, [ip, #3196]!	; 0xc7c

00011458 <setlocale@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #151552	; 0x25000
   11460:	ldr	pc, [ip, #3188]!	; 0xc74

00011464 <endpwent@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #151552	; 0x25000
   1146c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011470 <strrchr@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #151552	; 0x25000
   11478:	ldr	pc, [ip, #3172]!	; 0xc64

0001147c <nl_langinfo@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #151552	; 0x25000
   11484:	ldr	pc, [ip, #3164]!	; 0xc5c

00011488 <readdir64@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #151552	; 0x25000
   11490:	ldr	pc, [ip, #3156]!	; 0xc54

00011494 <fdopendir@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #151552	; 0x25000
   1149c:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a0 <dirfd@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #151552	; 0x25000
   114a8:	ldr	pc, [ip, #3140]!	; 0xc44

000114ac <fchdir@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #151552	; 0x25000
   114b4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114b8 <qsort@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #151552	; 0x25000
   114c0:	ldr	pc, [ip, #3124]!	; 0xc34

000114c4 <fchownat@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #151552	; 0x25000
   114cc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d0 <bindtextdomain@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #151552	; 0x25000
   114d8:	ldr	pc, [ip, #3108]!	; 0xc24

000114dc <__xstat64@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #151552	; 0x25000
   114e4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114e8 <fputs@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #151552	; 0x25000
   114f0:	ldr	pc, [ip, #3092]!	; 0xc14

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #151552	; 0x25000
   114fc:	ldr	pc, [ip, #3084]!	; 0xc0c

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #151552	; 0x25000
   11508:	ldr	pc, [ip, #3076]!	; 0xc04

0001150c <close@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #151552	; 0x25000
   11514:	ldr	pc, [ip, #3068]!	; 0xbfc

00011518 <__lxstat64@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #151552	; 0x25000
   11520:	ldr	pc, [ip, #3060]!	; 0xbf4

00011524 <closedir@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #151552	; 0x25000
   1152c:	ldr	pc, [ip, #3052]!	; 0xbec

00011530 <getgrgid@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #151552	; 0x25000
   11538:	ldr	pc, [ip, #3044]!	; 0xbe4

0001153c <getgrnam@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #151552	; 0x25000
   11544:	ldr	pc, [ip, #3036]!	; 0xbdc

00011548 <__assert_fail@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #151552	; 0x25000
   11550:	ldr	pc, [ip, #3028]!	; 0xbd4

Disassembly of section .text:

00011558 <.text>:
   11558:	mov	fp, #0
   1155c:	mov	lr, #0
   11560:	pop	{r1}		; (ldr r1, [sp], #4)
   11564:	mov	r2, sp
   11568:	push	{r2}		; (str r2, [sp, #-4]!)
   1156c:	push	{r0}		; (str r0, [sp, #-4]!)
   11570:	ldr	ip, [pc, #16]	; 11588 <__assert_fail@plt+0x40>
   11574:	push	{ip}		; (str ip, [sp, #-4]!)
   11578:	ldr	r0, [pc, #12]	; 1158c <__assert_fail@plt+0x44>
   1157c:	ldr	r3, [pc, #12]	; 11590 <__assert_fail@plt+0x48>
   11580:	bl	11368 <__libc_start_main@plt>
   11584:	bl	11500 <abort@plt>
   11588:	muleq	r2, r8, r9
   1158c:	andeq	r1, r1, r4, lsl #21
   11590:	andeq	r4, r2, r8, lsr r9
   11594:	ldr	r3, [pc, #20]	; 115b0 <__assert_fail@plt+0x68>
   11598:	ldr	r2, [pc, #20]	; 115b4 <__assert_fail@plt+0x6c>
   1159c:	add	r3, pc, r3
   115a0:	ldr	r2, [r3, r2]
   115a4:	cmp	r2, #0
   115a8:	bxeq	lr
   115ac:	b	11380 <__gmon_start__@plt>
   115b0:	andeq	r5, r2, ip, asr sl
   115b4:	andeq	r0, r0, r8, lsr #2
   115b8:	ldr	r0, [pc, #24]	; 115d8 <__assert_fail@plt+0x90>
   115bc:	ldr	r3, [pc, #24]	; 115dc <__assert_fail@plt+0x94>
   115c0:	cmp	r3, r0
   115c4:	bxeq	lr
   115c8:	ldr	r3, [pc, #16]	; 115e0 <__assert_fail@plt+0x98>
   115cc:	cmp	r3, #0
   115d0:	bxeq	lr
   115d4:	bx	r3
   115d8:	andeq	r7, r3, r8, lsl #3
   115dc:	andeq	r7, r3, r8, lsl #3
   115e0:	andeq	r0, r0, r0
   115e4:	ldr	r0, [pc, #36]	; 11610 <__assert_fail@plt+0xc8>
   115e8:	ldr	r1, [pc, #36]	; 11614 <__assert_fail@plt+0xcc>
   115ec:	sub	r1, r1, r0
   115f0:	asr	r1, r1, #2
   115f4:	add	r1, r1, r1, lsr #31
   115f8:	asrs	r1, r1, #1
   115fc:	bxeq	lr
   11600:	ldr	r3, [pc, #16]	; 11618 <__assert_fail@plt+0xd0>
   11604:	cmp	r3, #0
   11608:	bxeq	lr
   1160c:	bx	r3
   11610:	andeq	r7, r3, r8, lsl #3
   11614:	andeq	r7, r3, r8, lsl #3
   11618:	andeq	r0, r0, r0
   1161c:	push	{r4, lr}
   11620:	ldr	r4, [pc, #24]	; 11640 <__assert_fail@plt+0xf8>
   11624:	ldrb	r3, [r4]
   11628:	cmp	r3, #0
   1162c:	popne	{r4, pc}
   11630:	bl	115b8 <__assert_fail@plt+0x70>
   11634:	mov	r3, #1
   11638:	strb	r3, [r4]
   1163c:	pop	{r4, pc}
   11640:	andeq	r7, r3, r4, lsr #3
   11644:	b	115e4 <__assert_fail@plt+0x9c>
   11648:	push	{fp, lr}
   1164c:	mov	fp, sp
   11650:	sub	sp, sp, #72	; 0x48
   11654:	str	r0, [fp, #-4]
   11658:	ldr	r0, [fp, #-4]
   1165c:	cmp	r0, #0
   11660:	beq	116b0 <__assert_fail@plt+0x168>
   11664:	b	11668 <__assert_fail@plt+0x120>
   11668:	movw	r0, #29080	; 0x7198
   1166c:	movt	r0, #3
   11670:	ldr	r0, [r0]
   11674:	movw	r1, #18968	; 0x4a18
   11678:	movt	r1, #2
   1167c:	str	r0, [fp, #-8]
   11680:	mov	r0, r1
   11684:	bl	113b0 <gettext@plt>
   11688:	movw	r1, #29128	; 0x71c8
   1168c:	movt	r1, #3
   11690:	ldr	r2, [r1]
   11694:	ldr	r1, [fp, #-8]
   11698:	str	r0, [fp, #-12]
   1169c:	mov	r0, r1
   116a0:	ldr	r1, [fp, #-12]
   116a4:	bl	113f8 <fprintf@plt>
   116a8:	str	r0, [fp, #-16]
   116ac:	b	118c8 <__assert_fail@plt+0x380>
   116b0:	movw	r0, #19007	; 0x4a3f
   116b4:	movt	r0, #2
   116b8:	bl	113b0 <gettext@plt>
   116bc:	movw	lr, #29128	; 0x71c8
   116c0:	movt	lr, #3
   116c4:	ldr	r1, [lr]
   116c8:	ldr	r2, [lr]
   116cc:	bl	11260 <printf@plt>
   116d0:	movw	r1, #19104	; 0x4aa0
   116d4:	movt	r1, #2
   116d8:	str	r0, [fp, #-20]	; 0xffffffec
   116dc:	mov	r0, r1
   116e0:	bl	113b0 <gettext@plt>
   116e4:	movw	r1, #29084	; 0x719c
   116e8:	movt	r1, #3
   116ec:	ldr	r1, [r1]
   116f0:	bl	11224 <fputs_unlocked@plt>
   116f4:	movw	r1, #19249	; 0x4b31
   116f8:	movt	r1, #2
   116fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11700:	mov	r0, r1
   11704:	bl	113b0 <gettext@plt>
   11708:	movw	r1, #29084	; 0x719c
   1170c:	movt	r1, #3
   11710:	ldr	r1, [r1]
   11714:	bl	11224 <fputs_unlocked@plt>
   11718:	movw	r1, #19450	; 0x4bfa
   1171c:	movt	r1, #2
   11720:	str	r0, [fp, #-28]	; 0xffffffe4
   11724:	mov	r0, r1
   11728:	bl	113b0 <gettext@plt>
   1172c:	movw	r1, #29084	; 0x719c
   11730:	movt	r1, #3
   11734:	ldr	r1, [r1]
   11738:	bl	11224 <fputs_unlocked@plt>
   1173c:	movw	r1, #19681	; 0x4ce1
   11740:	movt	r1, #2
   11744:	str	r0, [fp, #-32]	; 0xffffffe0
   11748:	mov	r0, r1
   1174c:	bl	113b0 <gettext@plt>
   11750:	movw	r1, #29084	; 0x719c
   11754:	movt	r1, #3
   11758:	ldr	r1, [r1]
   1175c:	bl	11224 <fputs_unlocked@plt>
   11760:	movw	r1, #19800	; 0x4d58
   11764:	movt	r1, #2
   11768:	str	r0, [sp, #36]	; 0x24
   1176c:	mov	r0, r1
   11770:	bl	113b0 <gettext@plt>
   11774:	movw	r1, #29084	; 0x719c
   11778:	movt	r1, #3
   1177c:	ldr	r1, [r1]
   11780:	bl	11224 <fputs_unlocked@plt>
   11784:	movw	r1, #20140	; 0x4eac
   11788:	movt	r1, #2
   1178c:	str	r0, [sp, #32]
   11790:	mov	r0, r1
   11794:	bl	113b0 <gettext@plt>
   11798:	movw	r1, #29084	; 0x719c
   1179c:	movt	r1, #3
   117a0:	ldr	r1, [r1]
   117a4:	bl	11224 <fputs_unlocked@plt>
   117a8:	movw	r1, #20268	; 0x4f2c
   117ac:	movt	r1, #2
   117b0:	str	r0, [sp, #28]
   117b4:	mov	r0, r1
   117b8:	bl	113b0 <gettext@plt>
   117bc:	movw	r1, #29084	; 0x719c
   117c0:	movt	r1, #3
   117c4:	ldr	r1, [r1]
   117c8:	bl	11224 <fputs_unlocked@plt>
   117cc:	movw	r1, #20389	; 0x4fa5
   117d0:	movt	r1, #2
   117d4:	str	r0, [sp, #24]
   117d8:	mov	r0, r1
   117dc:	bl	113b0 <gettext@plt>
   117e0:	movw	r1, #29084	; 0x719c
   117e4:	movt	r1, #3
   117e8:	ldr	r1, [r1]
   117ec:	bl	11224 <fputs_unlocked@plt>
   117f0:	movw	r1, #20460	; 0x4fec
   117f4:	movt	r1, #2
   117f8:	str	r0, [sp, #20]
   117fc:	mov	r0, r1
   11800:	bl	113b0 <gettext@plt>
   11804:	movw	r1, #29084	; 0x719c
   11808:	movt	r1, #3
   1180c:	ldr	r1, [r1]
   11810:	bl	11224 <fputs_unlocked@plt>
   11814:	movw	r1, #20925	; 0x51bd
   11818:	movt	r1, #2
   1181c:	str	r0, [sp, #16]
   11820:	mov	r0, r1
   11824:	bl	113b0 <gettext@plt>
   11828:	movw	r1, #29084	; 0x719c
   1182c:	movt	r1, #3
   11830:	ldr	r1, [r1]
   11834:	bl	11224 <fputs_unlocked@plt>
   11838:	movw	r1, #20970	; 0x51ea
   1183c:	movt	r1, #2
   11840:	str	r0, [sp, #12]
   11844:	mov	r0, r1
   11848:	bl	113b0 <gettext@plt>
   1184c:	movw	r1, #29084	; 0x719c
   11850:	movt	r1, #3
   11854:	ldr	r1, [r1]
   11858:	bl	11224 <fputs_unlocked@plt>
   1185c:	movw	r1, #21024	; 0x5220
   11860:	movt	r1, #2
   11864:	str	r0, [sp, #8]
   11868:	mov	r0, r1
   1186c:	bl	113b0 <gettext@plt>
   11870:	movw	r1, #29084	; 0x719c
   11874:	movt	r1, #3
   11878:	ldr	r1, [r1]
   1187c:	bl	11224 <fputs_unlocked@plt>
   11880:	movw	r1, #21216	; 0x52e0
   11884:	movt	r1, #2
   11888:	str	r0, [sp, #4]
   1188c:	mov	r0, r1
   11890:	bl	113b0 <gettext@plt>
   11894:	movw	r1, #29128	; 0x71c8
   11898:	movt	r1, #3
   1189c:	ldr	r2, [r1]
   118a0:	ldr	lr, [r1]
   118a4:	ldr	r3, [r1]
   118a8:	mov	r1, r2
   118ac:	mov	r2, lr
   118b0:	bl	11260 <printf@plt>
   118b4:	movw	r1, #21417	; 0x53a9
   118b8:	movt	r1, #2
   118bc:	str	r0, [sp]
   118c0:	mov	r0, r1
   118c4:	bl	118d0 <__assert_fail@plt+0x388>
   118c8:	ldr	r0, [fp, #-4]
   118cc:	bl	113a4 <exit@plt>
   118d0:	push	{fp, lr}
   118d4:	mov	fp, sp
   118d8:	sub	sp, sp, #96	; 0x60
   118dc:	add	r1, sp, #36	; 0x24
   118e0:	movw	r2, #22244	; 0x56e4
   118e4:	movt	r2, #2
   118e8:	str	r0, [fp, #-4]
   118ec:	mov	r0, r1
   118f0:	str	r1, [sp, #20]
   118f4:	mov	r1, r2
   118f8:	movw	r2, #56	; 0x38
   118fc:	bl	1129c <memcpy@plt>
   11900:	ldr	r0, [fp, #-4]
   11904:	str	r0, [sp, #32]
   11908:	ldr	r0, [sp, #20]
   1190c:	str	r0, [sp, #28]
   11910:	ldr	r0, [sp, #28]
   11914:	ldr	r0, [r0]
   11918:	movw	r1, #0
   1191c:	cmp	r0, r1
   11920:	movw	r0, #0
   11924:	str	r0, [sp, #16]
   11928:	beq	11954 <__assert_fail@plt+0x40c>
   1192c:	ldr	r0, [fp, #-4]
   11930:	ldr	r1, [sp, #28]
   11934:	ldr	r1, [r1]
   11938:	bl	11248 <strcmp@plt>
   1193c:	cmp	r0, #0
   11940:	movw	r0, #0
   11944:	moveq	r0, #1
   11948:	mvn	r1, #0
   1194c:	eor	r0, r0, r1
   11950:	str	r0, [sp, #16]
   11954:	ldr	r0, [sp, #16]
   11958:	tst	r0, #1
   1195c:	beq	11970 <__assert_fail@plt+0x428>
   11960:	ldr	r0, [sp, #28]
   11964:	add	r0, r0, #8
   11968:	str	r0, [sp, #28]
   1196c:	b	11910 <__assert_fail@plt+0x3c8>
   11970:	ldr	r0, [sp, #28]
   11974:	ldr	r0, [r0, #4]
   11978:	movw	r1, #0
   1197c:	cmp	r0, r1
   11980:	beq	11990 <__assert_fail@plt+0x448>
   11984:	ldr	r0, [sp, #28]
   11988:	ldr	r0, [r0, #4]
   1198c:	str	r0, [sp, #32]
   11990:	movw	r0, #21715	; 0x54d3
   11994:	movt	r0, #2
   11998:	bl	113b0 <gettext@plt>
   1199c:	movw	r1, #21463	; 0x53d7
   119a0:	movt	r1, #2
   119a4:	movw	r2, #21738	; 0x54ea
   119a8:	movt	r2, #2
   119ac:	bl	11260 <printf@plt>
   119b0:	movw	r1, #5
   119b4:	str	r0, [sp, #12]
   119b8:	mov	r0, r1
   119bc:	movw	r1, #0
   119c0:	bl	11458 <setlocale@plt>
   119c4:	str	r0, [sp, #24]
   119c8:	ldr	r0, [sp, #24]
   119cc:	movw	r1, #0
   119d0:	cmp	r0, r1
   119d4:	beq	11a14 <__assert_fail@plt+0x4cc>
   119d8:	ldr	r0, [sp, #24]
   119dc:	movw	r1, #21778	; 0x5512
   119e0:	movt	r1, #2
   119e4:	movw	r2, #3
   119e8:	bl	114f4 <strncmp@plt>
   119ec:	cmp	r0, #0
   119f0:	beq	11a14 <__assert_fail@plt+0x4cc>
   119f4:	movw	r0, #21782	; 0x5516
   119f8:	movt	r0, #2
   119fc:	bl	113b0 <gettext@plt>
   11a00:	movw	lr, #29084	; 0x719c
   11a04:	movt	lr, #3
   11a08:	ldr	r1, [lr]
   11a0c:	bl	11224 <fputs_unlocked@plt>
   11a10:	str	r0, [sp, #8]
   11a14:	movw	r0, #21853	; 0x555d
   11a18:	movt	r0, #2
   11a1c:	bl	113b0 <gettext@plt>
   11a20:	ldr	r2, [fp, #-4]
   11a24:	movw	r1, #21738	; 0x54ea
   11a28:	movt	r1, #2
   11a2c:	bl	11260 <printf@plt>
   11a30:	movw	r1, #21880	; 0x5578
   11a34:	movt	r1, #2
   11a38:	str	r0, [sp, #4]
   11a3c:	mov	r0, r1
   11a40:	bl	113b0 <gettext@plt>
   11a44:	ldr	r1, [sp, #32]
   11a48:	ldr	r2, [sp, #32]
   11a4c:	ldr	lr, [fp, #-4]
   11a50:	cmp	r2, lr
   11a54:	movw	r2, #0
   11a58:	moveq	r2, #1
   11a5c:	tst	r2, #1
   11a60:	movw	r2, #20924	; 0x51bc
   11a64:	movt	r2, #2
   11a68:	movw	lr, #21648	; 0x5490
   11a6c:	movt	lr, #2
   11a70:	movne	r2, lr
   11a74:	bl	11260 <printf@plt>
   11a78:	str	r0, [sp]
   11a7c:	mov	sp, fp
   11a80:	pop	{fp, pc}
   11a84:	push	{r4, r5, fp, lr}
   11a88:	add	fp, sp, #8
   11a8c:	sub	sp, sp, #288	; 0x120
   11a90:	movw	r2, #0
   11a94:	str	r2, [fp, #-12]
   11a98:	str	r0, [fp, #-16]
   11a9c:	str	r1, [fp, #-20]	; 0xffffffec
   11aa0:	movw	r0, #0
   11aa4:	strb	r0, [fp, #-21]	; 0xffffffeb
   11aa8:	mvn	r0, #0
   11aac:	str	r0, [fp, #-28]	; 0xffffffe4
   11ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ab4:	str	r0, [fp, #-36]	; 0xffffffdc
   11ab8:	str	r0, [fp, #-40]	; 0xffffffd8
   11abc:	movw	r1, #16
   11ac0:	str	r1, [fp, #-44]	; 0xffffffd4
   11ac4:	str	r0, [fp, #-48]	; 0xffffffd0
   11ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11acc:	ldr	r0, [r0]
   11ad0:	bl	19550 <__assert_fail@plt+0x8008>
   11ad4:	movw	r0, #6
   11ad8:	movw	r1, #20924	; 0x51bc
   11adc:	movt	r1, #2
   11ae0:	bl	11458 <setlocale@plt>
   11ae4:	movw	r1, #21467	; 0x53db
   11ae8:	movt	r1, #2
   11aec:	str	r0, [sp, #96]	; 0x60
   11af0:	mov	r0, r1
   11af4:	movw	r1, #21423	; 0x53af
   11af8:	movt	r1, #2
   11afc:	bl	114d0 <bindtextdomain@plt>
   11b00:	movw	r1, #21467	; 0x53db
   11b04:	movt	r1, #2
   11b08:	str	r0, [sp, #92]	; 0x5c
   11b0c:	mov	r0, r1
   11b10:	bl	112d8 <textdomain@plt>
   11b14:	movw	r1, #14444	; 0x386c
   11b18:	movt	r1, #1
   11b1c:	str	r0, [sp, #88]	; 0x58
   11b20:	mov	r0, r1
   11b24:	bl	2499c <__assert_fail@plt+0x13454>
   11b28:	sub	r1, fp, #72	; 0x48
   11b2c:	str	r0, [sp, #84]	; 0x54
   11b30:	mov	r0, r1
   11b34:	bl	121b8 <__assert_fail@plt+0xc70>
   11b38:	ldr	r0, [fp, #-16]
   11b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b40:	movw	r2, #21447	; 0x53c7
   11b44:	movt	r2, #2
   11b48:	movw	r3, #22020	; 0x5604
   11b4c:	movt	r3, #2
   11b50:	movw	ip, #0
   11b54:	str	ip, [sp]
   11b58:	bl	1138c <getopt_long@plt>
   11b5c:	str	r0, [fp, #-80]	; 0xffffffb0
   11b60:	cmn	r0, #1
   11b64:	beq	11df0 <__assert_fail@plt+0x8a8>
   11b68:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11b6c:	cmn	r0, #3
   11b70:	str	r0, [sp, #80]	; 0x50
   11b74:	beq	11d90 <__assert_fail@plt+0x848>
   11b78:	b	11b7c <__assert_fail@plt+0x634>
   11b7c:	ldr	r0, [sp, #80]	; 0x50
   11b80:	cmn	r0, #2
   11b84:	beq	11d88 <__assert_fail@plt+0x840>
   11b88:	b	11b8c <__assert_fail@plt+0x644>
   11b8c:	ldr	r0, [sp, #80]	; 0x50
   11b90:	cmp	r0, #72	; 0x48
   11b94:	beq	11c68 <__assert_fail@plt+0x720>
   11b98:	b	11b9c <__assert_fail@plt+0x654>
   11b9c:	ldr	r0, [sp, #80]	; 0x50
   11ba0:	cmp	r0, #76	; 0x4c
   11ba4:	beq	11c74 <__assert_fail@plt+0x72c>
   11ba8:	b	11bac <__assert_fail@plt+0x664>
   11bac:	ldr	r0, [sp, #80]	; 0x50
   11bb0:	cmp	r0, #80	; 0x50
   11bb4:	beq	11c80 <__assert_fail@plt+0x738>
   11bb8:	b	11bbc <__assert_fail@plt+0x674>
   11bbc:	ldr	r0, [sp, #80]	; 0x50
   11bc0:	cmp	r0, #82	; 0x52
   11bc4:	beq	11d58 <__assert_fail@plt+0x810>
   11bc8:	b	11bcc <__assert_fail@plt+0x684>
   11bcc:	ldr	r0, [sp, #80]	; 0x50
   11bd0:	cmp	r0, #99	; 0x63
   11bd4:	beq	11d64 <__assert_fail@plt+0x81c>
   11bd8:	b	11bdc <__assert_fail@plt+0x694>
   11bdc:	ldr	r0, [sp, #80]	; 0x50
   11be0:	cmp	r0, #102	; 0x66
   11be4:	beq	11d70 <__assert_fail@plt+0x828>
   11be8:	b	11bec <__assert_fail@plt+0x6a4>
   11bec:	ldr	r0, [sp, #80]	; 0x50
   11bf0:	cmp	r0, #104	; 0x68
   11bf4:	beq	11c8c <__assert_fail@plt+0x744>
   11bf8:	b	11bfc <__assert_fail@plt+0x6b4>
   11bfc:	ldr	r0, [sp, #80]	; 0x50
   11c00:	cmp	r0, #118	; 0x76
   11c04:	beq	11d7c <__assert_fail@plt+0x834>
   11c08:	b	11c0c <__assert_fail@plt+0x6c4>
   11c0c:	ldr	r0, [sp, #80]	; 0x50
   11c10:	cmp	r0, #256	; 0x100
   11c14:	beq	11c98 <__assert_fail@plt+0x750>
   11c18:	b	11c1c <__assert_fail@plt+0x6d4>
   11c1c:	movw	r0, #257	; 0x101
   11c20:	ldr	r1, [sp, #80]	; 0x50
   11c24:	cmp	r1, r0
   11c28:	beq	11cd8 <__assert_fail@plt+0x790>
   11c2c:	b	11c30 <__assert_fail@plt+0x6e8>
   11c30:	movw	r0, #258	; 0x102
   11c34:	ldr	r1, [sp, #80]	; 0x50
   11c38:	cmp	r1, r0
   11c3c:	beq	11ca4 <__assert_fail@plt+0x75c>
   11c40:	b	11c44 <__assert_fail@plt+0x6fc>
   11c44:	movw	r0, #259	; 0x103
   11c48:	ldr	r1, [sp, #80]	; 0x50
   11c4c:	cmp	r1, r0
   11c50:	beq	11cb0 <__assert_fail@plt+0x768>
   11c54:	b	11c58 <__assert_fail@plt+0x710>
   11c58:	ldr	r0, [sp, #80]	; 0x50
   11c5c:	cmp	r0, #260	; 0x104
   11c60:	beq	11cbc <__assert_fail@plt+0x774>
   11c64:	b	11de4 <__assert_fail@plt+0x89c>
   11c68:	movw	r0, #17
   11c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   11c70:	b	11dec <__assert_fail@plt+0x8a4>
   11c74:	movw	r0, #2
   11c78:	str	r0, [fp, #-44]	; 0xffffffd4
   11c7c:	b	11dec <__assert_fail@plt+0x8a4>
   11c80:	movw	r0, #16
   11c84:	str	r0, [fp, #-44]	; 0xffffffd4
   11c88:	b	11dec <__assert_fail@plt+0x8a4>
   11c8c:	movw	r0, #0
   11c90:	str	r0, [fp, #-48]	; 0xffffffd0
   11c94:	b	11dec <__assert_fail@plt+0x8a4>
   11c98:	movw	r0, #1
   11c9c:	str	r0, [fp, #-48]	; 0xffffffd0
   11ca0:	b	11dec <__assert_fail@plt+0x8a4>
   11ca4:	movw	r0, #0
   11ca8:	strb	r0, [fp, #-21]	; 0xffffffeb
   11cac:	b	11dec <__assert_fail@plt+0x8a4>
   11cb0:	movw	r0, #1
   11cb4:	strb	r0, [fp, #-21]	; 0xffffffeb
   11cb8:	b	11dec <__assert_fail@plt+0x8a4>
   11cbc:	movw	r0, #29088	; 0x71a0
   11cc0:	movt	r0, #3
   11cc4:	ldr	r0, [r0]
   11cc8:	movw	r1, #29096	; 0x71a8
   11ccc:	movt	r1, #3
   11cd0:	str	r0, [r1]
   11cd4:	b	11dec <__assert_fail@plt+0x8a4>
   11cd8:	movw	r0, #29088	; 0x71a0
   11cdc:	movt	r0, #3
   11ce0:	ldr	r0, [r0]
   11ce4:	sub	r1, fp, #36	; 0x24
   11ce8:	sub	r2, fp, #40	; 0x28
   11cec:	movw	r3, #0
   11cf0:	str	r3, [sp, #76]	; 0x4c
   11cf4:	ldr	ip, [sp, #76]	; 0x4c
   11cf8:	str	ip, [sp]
   11cfc:	bl	1bdcc <__assert_fail@plt+0xa884>
   11d00:	str	r0, [fp, #-84]	; 0xffffffac
   11d04:	ldr	r0, [fp, #-84]	; 0xffffffac
   11d08:	movw	r1, #0
   11d0c:	cmp	r0, r1
   11d10:	beq	11d54 <__assert_fail@plt+0x80c>
   11d14:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d18:	movw	r0, #29088	; 0x71a0
   11d1c:	movt	r0, #3
   11d20:	ldr	r0, [r0]
   11d24:	str	r3, [sp, #72]	; 0x48
   11d28:	bl	1bbac <__assert_fail@plt+0xa664>
   11d2c:	movw	r3, #1
   11d30:	str	r0, [sp, #68]	; 0x44
   11d34:	mov	r0, r3
   11d38:	movw	r1, #0
   11d3c:	movw	r2, #21456	; 0x53d0
   11d40:	movt	r2, #2
   11d44:	ldr	r3, [sp, #72]	; 0x48
   11d48:	ldr	lr, [sp, #68]	; 0x44
   11d4c:	str	lr, [sp]
   11d50:	bl	11344 <error@plt>
   11d54:	b	11dec <__assert_fail@plt+0x8a4>
   11d58:	movw	r0, #1
   11d5c:	strb	r0, [fp, #-68]	; 0xffffffbc
   11d60:	b	11dec <__assert_fail@plt+0x8a4>
   11d64:	movw	r0, #1
   11d68:	str	r0, [fp, #-72]	; 0xffffffb8
   11d6c:	b	11dec <__assert_fail@plt+0x8a4>
   11d70:	movw	r0, #1
   11d74:	strb	r0, [fp, #-59]	; 0xffffffc5
   11d78:	b	11dec <__assert_fail@plt+0x8a4>
   11d7c:	movw	r0, #0
   11d80:	str	r0, [fp, #-72]	; 0xffffffb8
   11d84:	b	11dec <__assert_fail@plt+0x8a4>
   11d88:	movw	r0, #0
   11d8c:	bl	11648 <__assert_fail@plt+0x100>
   11d90:	movw	r0, #29084	; 0x719c
   11d94:	movt	r0, #3
   11d98:	ldr	r0, [r0]
   11d9c:	movw	r1, #28980	; 0x7134
   11da0:	movt	r1, #3
   11da4:	ldr	r3, [r1]
   11da8:	movw	r1, #21417	; 0x53a9
   11dac:	movt	r1, #2
   11db0:	movw	r2, #21463	; 0x53d7
   11db4:	movt	r2, #2
   11db8:	movw	ip, #21477	; 0x53e5
   11dbc:	movt	ip, #2
   11dc0:	str	ip, [sp]
   11dc4:	movw	ip, #21493	; 0x53f5
   11dc8:	movt	ip, #2
   11dcc:	str	ip, [sp, #4]
   11dd0:	movw	ip, #0
   11dd4:	str	ip, [sp, #8]
   11dd8:	bl	1cb1c <__assert_fail@plt+0xb5d4>
   11ddc:	movw	r0, #0
   11de0:	bl	113a4 <exit@plt>
   11de4:	movw	r0, #1
   11de8:	bl	11648 <__assert_fail@plt+0x100>
   11dec:	b	11b38 <__assert_fail@plt+0x5f0>
   11df0:	ldrb	r0, [fp, #-68]	; 0xffffffbc
   11df4:	tst	r0, #1
   11df8:	beq	11e44 <__assert_fail@plt+0x8fc>
   11dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e00:	cmp	r0, #16
   11e04:	bne	11e40 <__assert_fail@plt+0x8f8>
   11e08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e0c:	cmp	r0, #1
   11e10:	bne	11e38 <__assert_fail@plt+0x8f0>
   11e14:	movw	r0, #21506	; 0x5402
   11e18:	movt	r0, #2
   11e1c:	bl	113b0 <gettext@plt>
   11e20:	movw	lr, #1
   11e24:	str	r0, [sp, #64]	; 0x40
   11e28:	mov	r0, lr
   11e2c:	movw	r1, #0
   11e30:	ldr	r2, [sp, #64]	; 0x40
   11e34:	bl	11344 <error@plt>
   11e38:	movw	r0, #0
   11e3c:	str	r0, [fp, #-48]	; 0xffffffd0
   11e40:	b	11e4c <__assert_fail@plt+0x904>
   11e44:	movw	r0, #16
   11e48:	str	r0, [fp, #-44]	; 0xffffffd4
   11e4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e50:	cmp	r0, #0
   11e54:	movw	r0, #0
   11e58:	movne	r0, #1
   11e5c:	and	r0, r0, #1
   11e60:	strb	r0, [fp, #-60]	; 0xffffffc4
   11e64:	ldr	r0, [fp, #-16]
   11e68:	movw	r1, #29072	; 0x7190
   11e6c:	movt	r1, #3
   11e70:	ldr	r1, [r1]
   11e74:	sub	r0, r0, r1
   11e78:	movw	r1, #29096	; 0x71a8
   11e7c:	movt	r1, #3
   11e80:	ldr	r1, [r1]
   11e84:	movw	r2, #0
   11e88:	cmp	r1, r2
   11e8c:	movw	r1, #0
   11e90:	movne	r1, #1
   11e94:	tst	r1, #1
   11e98:	movw	r1, #1
   11e9c:	moveq	r1, #2
   11ea0:	cmp	r0, r1
   11ea4:	bge	11f34 <__assert_fail@plt+0x9ec>
   11ea8:	ldr	r0, [fp, #-16]
   11eac:	movw	r1, #29072	; 0x7190
   11eb0:	movt	r1, #3
   11eb4:	ldr	r1, [r1]
   11eb8:	cmp	r0, r1
   11ebc:	bgt	11ee8 <__assert_fail@plt+0x9a0>
   11ec0:	movw	r0, #21548	; 0x542c
   11ec4:	movt	r0, #2
   11ec8:	bl	113b0 <gettext@plt>
   11ecc:	movw	lr, #0
   11ed0:	str	r0, [sp, #60]	; 0x3c
   11ed4:	mov	r0, lr
   11ed8:	mov	r1, lr
   11edc:	ldr	r2, [sp, #60]	; 0x3c
   11ee0:	bl	11344 <error@plt>
   11ee4:	b	11f2c <__assert_fail@plt+0x9e4>
   11ee8:	movw	r0, #21564	; 0x543c
   11eec:	movt	r0, #2
   11ef0:	bl	113b0 <gettext@plt>
   11ef4:	ldr	lr, [fp, #-20]	; 0xffffffec
   11ef8:	ldr	r1, [fp, #-16]
   11efc:	sub	r1, r1, #1
   11f00:	add	r1, lr, r1, lsl #2
   11f04:	ldr	r1, [r1]
   11f08:	str	r0, [sp, #56]	; 0x38
   11f0c:	mov	r0, r1
   11f10:	bl	1bbac <__assert_fail@plt+0xa664>
   11f14:	movw	r1, #0
   11f18:	str	r0, [sp, #52]	; 0x34
   11f1c:	mov	r0, r1
   11f20:	ldr	r2, [sp, #56]	; 0x38
   11f24:	ldr	r3, [sp, #52]	; 0x34
   11f28:	bl	11344 <error@plt>
   11f2c:	movw	r0, #1
   11f30:	bl	11648 <__assert_fail@plt+0x100>
   11f34:	movw	r0, #29096	; 0x71a8
   11f38:	movt	r0, #3
   11f3c:	ldr	r0, [r0]
   11f40:	movw	r1, #0
   11f44:	cmp	r0, r1
   11f48:	beq	11fe4 <__assert_fail@plt+0xa9c>
   11f4c:	movw	r0, #29096	; 0x71a8
   11f50:	movt	r0, #3
   11f54:	ldr	r0, [r0]
   11f58:	add	r1, sp, #104	; 0x68
   11f5c:	bl	249b4 <__assert_fail@plt+0x1346c>
   11f60:	cmp	r0, #0
   11f64:	beq	11fb8 <__assert_fail@plt+0xa70>
   11f68:	bl	11404 <__errno_location@plt>
   11f6c:	ldr	r1, [r0]
   11f70:	movw	r0, #21589	; 0x5455
   11f74:	movt	r0, #2
   11f78:	str	r1, [sp, #48]	; 0x30
   11f7c:	bl	113b0 <gettext@plt>
   11f80:	movw	r1, #29096	; 0x71a8
   11f84:	movt	r1, #3
   11f88:	ldr	r1, [r1]
   11f8c:	movw	lr, #4
   11f90:	str	r0, [sp, #44]	; 0x2c
   11f94:	mov	r0, lr
   11f98:	bl	1b814 <__assert_fail@plt+0xa2cc>
   11f9c:	movw	r1, #1
   11fa0:	str	r0, [sp, #40]	; 0x28
   11fa4:	mov	r0, r1
   11fa8:	ldr	r1, [sp, #48]	; 0x30
   11fac:	ldr	r2, [sp, #44]	; 0x2c
   11fb0:	ldr	r3, [sp, #40]	; 0x28
   11fb4:	bl	11344 <error@plt>
   11fb8:	ldr	r0, [sp, #128]	; 0x80
   11fbc:	str	r0, [fp, #-28]	; 0xffffffe4
   11fc0:	ldr	r0, [sp, #132]	; 0x84
   11fc4:	str	r0, [fp, #-32]	; 0xffffffe0
   11fc8:	ldr	r0, [sp, #128]	; 0x80
   11fcc:	bl	122a0 <__assert_fail@plt+0xd58>
   11fd0:	str	r0, [fp, #-56]	; 0xffffffc8
   11fd4:	ldr	r0, [sp, #132]	; 0x84
   11fd8:	bl	12240 <__assert_fail@plt+0xcf8>
   11fdc:	str	r0, [fp, #-52]	; 0xffffffcc
   11fe0:	b	120c8 <__assert_fail@plt+0xb80>
   11fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fe8:	movw	r1, #29072	; 0x7190
   11fec:	movt	r1, #3
   11ff0:	ldr	r1, [r1]
   11ff4:	add	r0, r0, r1, lsl #2
   11ff8:	ldr	r0, [r0]
   11ffc:	sub	r1, fp, #72	; 0x48
   12000:	add	r3, r1, #16
   12004:	add	r1, r1, #20
   12008:	sub	r2, fp, #28
   1200c:	str	r1, [sp, #36]	; 0x24
   12010:	mov	r1, r2
   12014:	sub	r2, fp, #32
   12018:	ldr	ip, [sp, #36]	; 0x24
   1201c:	str	ip, [sp]
   12020:	bl	1bdcc <__assert_fail@plt+0xa884>
   12024:	str	r0, [sp, #100]	; 0x64
   12028:	ldr	r0, [sp, #100]	; 0x64
   1202c:	movw	r1, #0
   12030:	cmp	r0, r1
   12034:	beq	12084 <__assert_fail@plt+0xb3c>
   12038:	ldr	r3, [sp, #100]	; 0x64
   1203c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12040:	movw	r1, #29072	; 0x7190
   12044:	movt	r1, #3
   12048:	ldr	r1, [r1]
   1204c:	add	r0, r0, r1, lsl #2
   12050:	ldr	r0, [r0]
   12054:	str	r3, [sp, #32]
   12058:	bl	1bbac <__assert_fail@plt+0xa664>
   1205c:	movw	r1, #1
   12060:	str	r0, [sp, #28]
   12064:	mov	r0, r1
   12068:	movw	r1, #0
   1206c:	movw	r2, #21456	; 0x53d0
   12070:	movt	r2, #2
   12074:	ldr	r3, [sp, #32]
   12078:	ldr	lr, [sp, #28]
   1207c:	str	lr, [sp]
   12080:	bl	11344 <error@plt>
   12084:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12088:	movw	r1, #0
   1208c:	cmp	r0, r1
   12090:	bne	120b4 <__assert_fail@plt+0xb6c>
   12094:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12098:	movw	r1, #0
   1209c:	cmp	r0, r1
   120a0:	beq	120b4 <__assert_fail@plt+0xb6c>
   120a4:	movw	r0, #20924	; 0x51bc
   120a8:	movt	r0, #2
   120ac:	bl	1fa50 <__assert_fail@plt+0xe508>
   120b0:	str	r0, [fp, #-56]	; 0xffffffc8
   120b4:	movw	r0, #29072	; 0x7190
   120b8:	movt	r0, #3
   120bc:	ldr	r1, [r0]
   120c0:	add	r1, r1, #1
   120c4:	str	r1, [r0]
   120c8:	ldrb	r0, [fp, #-68]	; 0xffffffbc
   120cc:	tst	r0, #1
   120d0:	beq	12150 <__assert_fail@plt+0xc08>
   120d4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   120d8:	tst	r0, #1
   120dc:	beq	12150 <__assert_fail@plt+0xc08>
   120e0:	movw	r0, #29104	; 0x71b0
   120e4:	movt	r0, #3
   120e8:	bl	1bce4 <__assert_fail@plt+0xa79c>
   120ec:	str	r0, [fp, #-64]	; 0xffffffc0
   120f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120f4:	movw	lr, #0
   120f8:	cmp	r0, lr
   120fc:	bne	1214c <__assert_fail@plt+0xc04>
   12100:	bl	11404 <__errno_location@plt>
   12104:	ldr	r1, [r0]
   12108:	movw	r0, #21589	; 0x5455
   1210c:	movt	r0, #2
   12110:	str	r1, [sp, #24]
   12114:	bl	113b0 <gettext@plt>
   12118:	movw	r1, #4
   1211c:	str	r0, [sp, #20]
   12120:	mov	r0, r1
   12124:	movw	r1, #24427	; 0x5f6b
   12128:	movt	r1, #2
   1212c:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12130:	movw	r1, #1
   12134:	str	r0, [sp, #16]
   12138:	mov	r0, r1
   1213c:	ldr	r1, [sp, #24]
   12140:	ldr	r2, [sp, #20]
   12144:	ldr	r3, [sp, #16]
   12148:	bl	11344 <error@plt>
   1214c:	b	12150 <__assert_fail@plt+0xc08>
   12150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12154:	orr	r0, r0, #1024	; 0x400
   12158:	str	r0, [fp, #-44]	; 0xffffffd4
   1215c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12160:	movw	r1, #29072	; 0x7190
   12164:	movt	r1, #3
   12168:	ldr	r1, [r1]
   1216c:	add	r0, r0, r1, lsl #2
   12170:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12174:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12178:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1217c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12180:	ldr	lr, [fp, #-40]	; 0xffffffd8
   12184:	str	ip, [sp]
   12188:	str	lr, [sp, #4]
   1218c:	sub	ip, fp, #72	; 0x48
   12190:	str	ip, [sp, #8]
   12194:	bl	12300 <__assert_fail@plt+0xdb8>
   12198:	and	r0, r0, #1
   1219c:	strb	r0, [fp, #-73]	; 0xffffffb7
   121a0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   121a4:	tst	r0, #1
   121a8:	movw	r0, #0
   121ac:	moveq	r0, #1
   121b0:	sub	sp, fp, #8
   121b4:	pop	{r4, r5, fp, pc}
   121b8:	sub	sp, sp, #4
   121bc:	str	r0, [sp]
   121c0:	ldr	r0, [sp]
   121c4:	movw	r1, #2
   121c8:	str	r1, [r0]
   121cc:	ldr	r0, [sp]
   121d0:	movw	r1, #0
   121d4:	str	r1, [r0, #8]
   121d8:	ldr	r0, [sp]
   121dc:	movw	r2, #1
   121e0:	strb	r2, [r0, #12]
   121e4:	ldr	r0, [sp]
   121e8:	movw	r2, #0
   121ec:	strb	r2, [r0, #4]
   121f0:	ldr	r0, [sp]
   121f4:	strb	r2, [r0, #13]
   121f8:	ldr	r0, [sp]
   121fc:	str	r1, [r0, #16]
   12200:	ldr	r0, [sp]
   12204:	str	r1, [r0, #20]
   12208:	add	sp, sp, #4
   1220c:	bx	lr
   12210:	push	{fp, lr}
   12214:	mov	fp, sp
   12218:	sub	sp, sp, #8
   1221c:	str	r0, [sp, #4]
   12220:	ldr	r0, [sp, #4]
   12224:	ldr	r0, [r0, #16]
   12228:	bl	1398c <__assert_fail@plt+0x2444>
   1222c:	ldr	r0, [sp, #4]
   12230:	ldr	r0, [r0, #20]
   12234:	bl	1398c <__assert_fail@plt+0x2444>
   12238:	mov	sp, fp
   1223c:	pop	{fp, pc}
   12240:	push	{fp, lr}
   12244:	mov	fp, sp
   12248:	sub	sp, sp, #40	; 0x28
   1224c:	str	r0, [fp, #-4]
   12250:	ldr	r0, [fp, #-4]
   12254:	bl	11530 <getgrgid@plt>
   12258:	str	r0, [sp, #8]
   1225c:	ldr	r0, [sp, #8]
   12260:	movw	lr, #0
   12264:	cmp	r0, lr
   12268:	beq	1227c <__assert_fail@plt+0xd34>
   1226c:	ldr	r0, [sp, #8]
   12270:	ldr	r0, [r0]
   12274:	str	r0, [sp, #4]
   12278:	b	12290 <__assert_fail@plt+0xd48>
   1227c:	add	r2, sp, #15
   12280:	ldr	r0, [fp, #-4]
   12284:	mov	r1, #0
   12288:	bl	192c0 <__assert_fail@plt+0x7d78>
   1228c:	str	r0, [sp, #4]
   12290:	ldr	r0, [sp, #4]
   12294:	bl	1fa50 <__assert_fail@plt+0xe508>
   12298:	mov	sp, fp
   1229c:	pop	{fp, pc}
   122a0:	push	{fp, lr}
   122a4:	mov	fp, sp
   122a8:	sub	sp, sp, #40	; 0x28
   122ac:	str	r0, [fp, #-4]
   122b0:	ldr	r0, [fp, #-4]
   122b4:	bl	11254 <getpwuid@plt>
   122b8:	str	r0, [sp, #8]
   122bc:	ldr	r0, [sp, #8]
   122c0:	movw	lr, #0
   122c4:	cmp	r0, lr
   122c8:	beq	122dc <__assert_fail@plt+0xd94>
   122cc:	ldr	r0, [sp, #8]
   122d0:	ldr	r0, [r0]
   122d4:	str	r0, [sp, #4]
   122d8:	b	122f0 <__assert_fail@plt+0xda8>
   122dc:	add	r2, sp, #15
   122e0:	ldr	r0, [fp, #-4]
   122e4:	mov	r1, #0
   122e8:	bl	192c0 <__assert_fail@plt+0x7d78>
   122ec:	str	r0, [sp, #4]
   122f0:	ldr	r0, [sp, #4]
   122f4:	bl	1fa50 <__assert_fail@plt+0xe508>
   122f8:	mov	sp, fp
   122fc:	pop	{fp, pc}
   12300:	push	{r4, sl, fp, lr}
   12304:	add	fp, sp, #8
   12308:	sub	sp, sp, #80	; 0x50
   1230c:	ldr	ip, [fp, #16]
   12310:	ldr	lr, [fp, #12]
   12314:	ldr	r4, [fp, #8]
   12318:	str	r0, [fp, #-12]
   1231c:	str	r1, [fp, #-16]
   12320:	str	r2, [fp, #-20]	; 0xffffffec
   12324:	str	r3, [fp, #-24]	; 0xffffffe8
   12328:	movw	r0, #1
   1232c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12330:	ldr	r0, [fp, #8]
   12334:	cmn	r0, #1
   12338:	movw	r0, #1
   1233c:	str	r4, [sp, #44]	; 0x2c
   12340:	str	lr, [sp, #40]	; 0x28
   12344:	str	ip, [sp, #36]	; 0x24
   12348:	str	r0, [sp, #32]
   1234c:	bne	12394 <__assert_fail@plt+0xe4c>
   12350:	ldr	r0, [fp, #12]
   12354:	cmn	r0, #1
   12358:	movw	r0, #1
   1235c:	str	r0, [sp, #32]
   12360:	bne	12394 <__assert_fail@plt+0xe4c>
   12364:	ldr	r0, [fp, #16]
   12368:	ldrb	r0, [r0, #12]
   1236c:	tst	r0, #1
   12370:	movw	r0, #1
   12374:	str	r0, [sp, #32]
   12378:	bne	12394 <__assert_fail@plt+0xe4c>
   1237c:	ldr	r0, [fp, #16]
   12380:	ldr	r0, [r0]
   12384:	cmp	r0, #2
   12388:	movw	r0, #0
   1238c:	movne	r0, #1
   12390:	str	r0, [sp, #32]
   12394:	ldr	r0, [sp, #32]
   12398:	tst	r0, #1
   1239c:	movw	r0, #0
   123a0:	mov	r1, r0
   123a4:	moveq	r1, #8
   123a8:	str	r1, [fp, #-32]	; 0xffffffe0
   123ac:	ldr	r1, [fp, #-12]
   123b0:	ldr	r2, [fp, #-16]
   123b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123b8:	orr	r2, r2, r3
   123bc:	str	r0, [sp, #28]
   123c0:	mov	r0, r1
   123c4:	mov	r1, r2
   123c8:	ldr	r2, [sp, #28]
   123cc:	bl	1fad8 <__assert_fail@plt+0xe590>
   123d0:	str	r0, [fp, #-36]	; 0xffffffdc
   123d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123d8:	bl	14ad8 <__assert_fail@plt+0x3590>
   123dc:	str	r0, [fp, #-40]	; 0xffffffd8
   123e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123e4:	movw	lr, #0
   123e8:	cmp	r0, lr
   123ec:	bne	1244c <__assert_fail@plt+0xf04>
   123f0:	bl	11404 <__errno_location@plt>
   123f4:	ldr	r0, [r0]
   123f8:	cmp	r0, #0
   123fc:	beq	12448 <__assert_fail@plt+0xf00>
   12400:	ldr	r0, [fp, #16]
   12404:	ldrb	r0, [r0, #13]
   12408:	tst	r0, #1
   1240c:	bne	12440 <__assert_fail@plt+0xef8>
   12410:	bl	11404 <__errno_location@plt>
   12414:	ldr	r1, [r0]
   12418:	movw	r0, #22300	; 0x571c
   1241c:	movt	r0, #2
   12420:	str	r1, [sp, #24]
   12424:	bl	113b0 <gettext@plt>
   12428:	movw	r1, #0
   1242c:	str	r0, [sp, #20]
   12430:	mov	r0, r1
   12434:	ldr	r1, [sp, #24]
   12438:	ldr	r2, [sp, #20]
   1243c:	bl	11344 <error@plt>
   12440:	movw	r0, #0
   12444:	strb	r0, [fp, #-25]	; 0xffffffe7
   12448:	b	124a0 <__assert_fail@plt+0xf58>
   1244c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12450:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12454:	ldr	r2, [fp, #-20]	; 0xffffffec
   12458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1245c:	ldr	ip, [fp, #8]
   12460:	ldr	lr, [fp, #12]
   12464:	ldr	r4, [fp, #16]
   12468:	str	ip, [sp]
   1246c:	str	lr, [sp, #4]
   12470:	str	r4, [sp, #8]
   12474:	bl	124f8 <__assert_fail@plt+0xfb0>
   12478:	and	r0, r0, #1
   1247c:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12480:	and	r1, r1, #1
   12484:	and	r0, r1, r0
   12488:	cmp	r0, #0
   1248c:	movw	r0, #0
   12490:	movne	r0, #1
   12494:	and	r0, r0, #1
   12498:	strb	r0, [fp, #-25]	; 0xffffffe7
   1249c:	b	123d4 <__assert_fail@plt+0xe8c>
   124a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   124a4:	bl	14814 <__assert_fail@plt+0x32cc>
   124a8:	cmp	r0, #0
   124ac:	beq	124e8 <__assert_fail@plt+0xfa0>
   124b0:	bl	11404 <__errno_location@plt>
   124b4:	ldr	r1, [r0]
   124b8:	movw	r0, #22316	; 0x572c
   124bc:	movt	r0, #2
   124c0:	str	r1, [sp, #16]
   124c4:	bl	113b0 <gettext@plt>
   124c8:	movw	r1, #0
   124cc:	str	r0, [sp, #12]
   124d0:	mov	r0, r1
   124d4:	ldr	r1, [sp, #16]
   124d8:	ldr	r2, [sp, #12]
   124dc:	bl	11344 <error@plt>
   124e0:	movw	r0, #0
   124e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   124e8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   124ec:	and	r0, r0, #1
   124f0:	sub	sp, fp, #8
   124f4:	pop	{r4, sl, fp, pc}
   124f8:	push	{r4, r5, r6, r7, fp, lr}
   124fc:	add	fp, sp, #16
   12500:	sub	sp, sp, #368	; 0x170
   12504:	ldr	ip, [fp, #16]
   12508:	ldr	lr, [fp, #12]
   1250c:	ldr	r4, [fp, #8]
   12510:	str	r0, [fp, #-24]	; 0xffffffe8
   12514:	str	r1, [fp, #-28]	; 0xffffffe4
   12518:	str	r2, [fp, #-32]	; 0xffffffe0
   1251c:	str	r3, [fp, #-36]	; 0xffffffdc
   12520:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12524:	ldr	r0, [r0, #28]
   12528:	str	r0, [fp, #-40]	; 0xffffffd8
   1252c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12530:	ldr	r0, [r0, #24]
   12534:	str	r0, [fp, #-44]	; 0xffffffd4
   12538:	mov	r0, #1
   1253c:	strb	r0, [fp, #-153]	; 0xffffff67
   12540:	strb	r0, [fp, #-155]	; 0xffffff65
   12544:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12548:	ldrh	r0, [r0, #56]	; 0x38
   1254c:	sub	r0, r0, #1
   12550:	cmp	r0, #9
   12554:	str	r4, [fp, #-180]	; 0xffffff4c
   12558:	str	lr, [fp, #-184]	; 0xffffff48
   1255c:	str	ip, [fp, #-188]	; 0xffffff44
   12560:	str	r0, [sp, #192]	; 0xc0
   12564:	bhi	12958 <__assert_fail@plt+0x1410>
   12568:	add	r0, pc, #8
   1256c:	ldr	r1, [sp, #192]	; 0xc0
   12570:	ldr	r0, [r0, r1, lsl #2]
   12574:	mov	pc, r0
   12578:	andeq	r2, r1, r0, lsr #11
   1257c:	strdeq	r2, [r1], -r0
   12580:	andeq	r2, r1, r8, asr r9
   12584:	andeq	r2, r1, ip, lsl #17
   12588:	andeq	r2, r1, r8, asr r9
   1258c:	andeq	r2, r1, r0, asr r7
   12590:	andeq	r2, r1, r0, lsr r8
   12594:	andeq	r2, r1, r8, asr r9
   12598:	andeq	r2, r1, r8, asr r9
   1259c:	andeq	r2, r1, r4, ror r7
   125a0:	ldr	r0, [fp, #16]
   125a4:	ldrb	r0, [r0, #4]
   125a8:	tst	r0, #1
   125ac:	beq	1274c <__assert_fail@plt+0x1204>
   125b0:	ldr	r0, [fp, #16]
   125b4:	ldr	r0, [r0, #8]
   125b8:	movw	r1, #0
   125bc:	cmp	r0, r1
   125c0:	beq	1273c <__assert_fail@plt+0x11f4>
   125c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125c8:	ldr	r1, [r0, #160]	; 0xa0
   125cc:	ldr	r0, [r0, #164]	; 0xa4
   125d0:	ldr	r2, [fp, #16]
   125d4:	ldr	r2, [r2, #8]
   125d8:	ldr	r3, [r2]
   125dc:	ldr	r2, [r2, #4]
   125e0:	eor	r0, r0, r2
   125e4:	eor	r1, r1, r3
   125e8:	orr	r0, r1, r0
   125ec:	cmp	r0, #0
   125f0:	bne	1273c <__assert_fail@plt+0x11f4>
   125f4:	b	125f8 <__assert_fail@plt+0x10b0>
   125f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125fc:	ldr	r1, [r0, #64]	; 0x40
   12600:	ldr	r0, [r0, #68]	; 0x44
   12604:	ldr	r2, [fp, #16]
   12608:	ldr	r2, [r2, #8]
   1260c:	ldr	r3, [r2, #8]
   12610:	ldr	r2, [r2, #12]
   12614:	eor	r0, r0, r2
   12618:	eor	r1, r1, r3
   1261c:	orr	r0, r1, r0
   12620:	cmp	r0, #0
   12624:	bne	1273c <__assert_fail@plt+0x11f4>
   12628:	b	1262c <__assert_fail@plt+0x10e4>
   1262c:	b	12630 <__assert_fail@plt+0x10e8>
   12630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12634:	movw	r1, #24427	; 0x5f6b
   12638:	movt	r1, #2
   1263c:	bl	11248 <strcmp@plt>
   12640:	cmp	r0, #0
   12644:	bne	12684 <__assert_fail@plt+0x113c>
   12648:	movw	r0, #22333	; 0x573d
   1264c:	movt	r0, #2
   12650:	bl	113b0 <gettext@plt>
   12654:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12658:	movw	lr, #4
   1265c:	str	r0, [sp, #188]	; 0xbc
   12660:	mov	r0, lr
   12664:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12668:	movw	r1, #0
   1266c:	str	r0, [sp, #184]	; 0xb8
   12670:	mov	r0, r1
   12674:	ldr	r2, [sp, #188]	; 0xbc
   12678:	ldr	r3, [sp, #184]	; 0xb8
   1267c:	bl	11344 <error@plt>
   12680:	b	126e4 <__assert_fail@plt+0x119c>
   12684:	movw	r0, #22378	; 0x576a
   12688:	movt	r0, #2
   1268c:	bl	113b0 <gettext@plt>
   12690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12694:	movw	lr, #0
   12698:	str	r0, [sp, #180]	; 0xb4
   1269c:	mov	r0, lr
   126a0:	movw	r1, #4
   126a4:	bl	1b740 <__assert_fail@plt+0xa1f8>
   126a8:	movw	r1, #1
   126ac:	str	r0, [sp, #176]	; 0xb0
   126b0:	mov	r0, r1
   126b4:	movw	r1, #4
   126b8:	movw	r2, #24427	; 0x5f6b
   126bc:	movt	r2, #2
   126c0:	bl	1b740 <__assert_fail@plt+0xa1f8>
   126c4:	movw	r1, #0
   126c8:	str	r0, [sp, #172]	; 0xac
   126cc:	mov	r0, r1
   126d0:	ldr	r2, [sp, #180]	; 0xb4
   126d4:	ldr	r3, [sp, #176]	; 0xb0
   126d8:	ldr	lr, [sp, #172]	; 0xac
   126dc:	str	lr, [sp]
   126e0:	bl	11344 <error@plt>
   126e4:	movw	r0, #22436	; 0x57a4
   126e8:	movt	r0, #2
   126ec:	bl	113b0 <gettext@plt>
   126f0:	movw	lr, #0
   126f4:	str	r0, [sp, #168]	; 0xa8
   126f8:	mov	r0, lr
   126fc:	mov	r1, lr
   12700:	ldr	r2, [sp, #168]	; 0xa8
   12704:	bl	11344 <error@plt>
   12708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1270c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12710:	movw	r2, #4
   12714:	bl	16a2c <__assert_fail@plt+0x54e4>
   12718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1271c:	str	r0, [sp, #164]	; 0xa4
   12720:	mov	r0, r1
   12724:	bl	14ad8 <__assert_fail@plt+0x3590>
   12728:	movw	r1, #0
   1272c:	and	r1, r1, #1
   12730:	strb	r1, [fp, #-17]	; 0xffffffef
   12734:	str	r0, [sp, #160]	; 0xa0
   12738:	b	130cc <__assert_fail@plt+0x1b84>
   1273c:	movw	r0, #1
   12740:	and	r0, r0, #1
   12744:	strb	r0, [fp, #-17]	; 0xffffffef
   12748:	b	130cc <__assert_fail@plt+0x1b84>
   1274c:	b	1295c <__assert_fail@plt+0x1414>
   12750:	ldr	r0, [fp, #16]
   12754:	ldrb	r0, [r0, #4]
   12758:	tst	r0, #1
   1275c:	bne	12770 <__assert_fail@plt+0x1228>
   12760:	movw	r0, #1
   12764:	and	r0, r0, #1
   12768:	strb	r0, [fp, #-17]	; 0xffffffef
   1276c:	b	130cc <__assert_fail@plt+0x1b84>
   12770:	b	1295c <__assert_fail@plt+0x1414>
   12774:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12778:	ldr	r0, [r0, #48]	; 0x30
   1277c:	cmp	r0, #0
   12780:	bne	127cc <__assert_fail@plt+0x1284>
   12784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12788:	ldr	r0, [r0, #16]
   1278c:	cmp	r0, #0
   12790:	bne	127cc <__assert_fail@plt+0x1284>
   12794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12798:	movw	r1, #1
   1279c:	str	r1, [r0, #16]
   127a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   127a8:	str	r1, [sp, #156]	; 0x9c
   127ac:	mov	r1, r2
   127b0:	ldr	r2, [sp, #156]	; 0x9c
   127b4:	bl	16a2c <__assert_fail@plt+0x54e4>
   127b8:	movw	r1, #1
   127bc:	and	r1, r1, #1
   127c0:	strb	r1, [fp, #-17]	; 0xffffffef
   127c4:	str	r0, [sp, #152]	; 0x98
   127c8:	b	130cc <__assert_fail@plt+0x1b84>
   127cc:	ldr	r0, [fp, #16]
   127d0:	ldrb	r0, [r0, #13]
   127d4:	tst	r0, #1
   127d8:	bne	12824 <__assert_fail@plt+0x12dc>
   127dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127e0:	ldr	r1, [r0, #32]
   127e4:	movw	r0, #22485	; 0x57d5
   127e8:	movt	r0, #2
   127ec:	str	r1, [sp, #148]	; 0x94
   127f0:	bl	113b0 <gettext@plt>
   127f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127f8:	movw	lr, #4
   127fc:	str	r0, [sp, #144]	; 0x90
   12800:	mov	r0, lr
   12804:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12808:	movw	r1, #0
   1280c:	str	r0, [sp, #140]	; 0x8c
   12810:	mov	r0, r1
   12814:	ldr	r1, [sp, #148]	; 0x94
   12818:	ldr	r2, [sp, #144]	; 0x90
   1281c:	ldr	r3, [sp, #140]	; 0x8c
   12820:	bl	11344 <error@plt>
   12824:	movw	r0, #0
   12828:	strb	r0, [fp, #-153]	; 0xffffff67
   1282c:	b	1295c <__assert_fail@plt+0x1414>
   12830:	ldr	r0, [fp, #16]
   12834:	ldrb	r0, [r0, #13]
   12838:	tst	r0, #1
   1283c:	bne	12880 <__assert_fail@plt+0x1338>
   12840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12844:	ldr	r1, [r0, #32]
   12848:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1284c:	movw	r0, #0
   12850:	movw	r3, #3
   12854:	str	r1, [sp, #136]	; 0x88
   12858:	mov	r1, r3
   1285c:	bl	1b968 <__assert_fail@plt+0xa420>
   12860:	movw	r1, #0
   12864:	str	r0, [sp, #132]	; 0x84
   12868:	mov	r0, r1
   1286c:	ldr	r1, [sp, #136]	; 0x88
   12870:	movw	r2, #21460	; 0x53d4
   12874:	movt	r2, #2
   12878:	ldr	r3, [sp, #132]	; 0x84
   1287c:	bl	11344 <error@plt>
   12880:	movw	r0, #0
   12884:	strb	r0, [fp, #-153]	; 0xffffff67
   12888:	b	1295c <__assert_fail@plt+0x1414>
   1288c:	ldr	r0, [fp, #16]
   12890:	ldrb	r0, [r0, #13]
   12894:	tst	r0, #1
   12898:	bne	128e4 <__assert_fail@plt+0x139c>
   1289c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128a0:	ldr	r1, [r0, #32]
   128a4:	movw	r0, #22502	; 0x57e6
   128a8:	movt	r0, #2
   128ac:	str	r1, [sp, #128]	; 0x80
   128b0:	bl	113b0 <gettext@plt>
   128b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128b8:	movw	lr, #4
   128bc:	str	r0, [sp, #124]	; 0x7c
   128c0:	mov	r0, lr
   128c4:	bl	1b814 <__assert_fail@plt+0xa2cc>
   128c8:	movw	r1, #0
   128cc:	str	r0, [sp, #120]	; 0x78
   128d0:	mov	r0, r1
   128d4:	ldr	r1, [sp, #128]	; 0x80
   128d8:	ldr	r2, [sp, #124]	; 0x7c
   128dc:	ldr	r3, [sp, #120]	; 0x78
   128e0:	bl	11344 <error@plt>
   128e4:	movw	r0, #0
   128e8:	strb	r0, [fp, #-153]	; 0xffffff67
   128ec:	b	1295c <__assert_fail@plt+0x1414>
   128f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128f8:	bl	1fb5c <__assert_fail@plt+0xe614>
   128fc:	tst	r0, #1
   12900:	beq	12954 <__assert_fail@plt+0x140c>
   12904:	b	12908 <__assert_fail@plt+0x13c0>
   12908:	movw	r0, #22527	; 0x57ff
   1290c:	movt	r0, #2
   12910:	bl	113b0 <gettext@plt>
   12914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12918:	movw	lr, #0
   1291c:	str	r0, [sp, #116]	; 0x74
   12920:	mov	r0, lr
   12924:	movw	r1, #3
   12928:	bl	1b968 <__assert_fail@plt+0xa420>
   1292c:	movw	r1, #0
   12930:	str	r0, [sp, #112]	; 0x70
   12934:	mov	r0, r1
   12938:	ldr	r2, [sp, #116]	; 0x74
   1293c:	ldr	r3, [sp, #112]	; 0x70
   12940:	bl	11344 <error@plt>
   12944:	movw	r0, #0
   12948:	and	r0, r0, #1
   1294c:	strb	r0, [fp, #-17]	; 0xffffffef
   12950:	b	130cc <__assert_fail@plt+0x1b84>
   12954:	b	1295c <__assert_fail@plt+0x1414>
   12958:	b	1295c <__assert_fail@plt+0x1414>
   1295c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12960:	tst	r0, #1
   12964:	bne	1297c <__assert_fail@plt+0x1434>
   12968:	movw	r0, #0
   1296c:	strb	r0, [fp, #-154]	; 0xffffff66
   12970:	movw	r0, #0
   12974:	str	r0, [fp, #-48]	; 0xffffffd0
   12978:	b	12b1c <__assert_fail@plt+0x15d4>
   1297c:	ldr	r0, [fp, #8]
   12980:	cmn	r0, #1
   12984:	bne	129e0 <__assert_fail@plt+0x1498>
   12988:	ldr	r0, [fp, #12]
   1298c:	cmn	r0, #1
   12990:	bne	129e0 <__assert_fail@plt+0x1498>
   12994:	ldr	r0, [fp, #16]
   12998:	ldr	r0, [r0]
   1299c:	cmp	r0, #2
   129a0:	bne	129e0 <__assert_fail@plt+0x1498>
   129a4:	ldr	r0, [fp, #16]
   129a8:	ldr	r0, [r0, #8]
   129ac:	movw	r1, #0
   129b0:	cmp	r0, r1
   129b4:	bne	129e0 <__assert_fail@plt+0x1498>
   129b8:	ldr	r0, [fp, #16]
   129bc:	ldrb	r0, [r0, #12]
   129c0:	tst	r0, #1
   129c4:	bne	129e0 <__assert_fail@plt+0x1498>
   129c8:	movw	r0, #1
   129cc:	strb	r0, [fp, #-154]	; 0xffffff66
   129d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129d4:	add	r0, r0, #64	; 0x40
   129d8:	str	r0, [fp, #-48]	; 0xffffffd0
   129dc:	b	12b18 <__assert_fail@plt+0x15d0>
   129e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129e4:	add	r0, r0, #64	; 0x40
   129e8:	str	r0, [fp, #-48]	; 0xffffffd0
   129ec:	ldr	r0, [fp, #16]
   129f0:	ldrb	r0, [r0, #12]
   129f4:	tst	r0, #1
   129f8:	beq	12a98 <__assert_fail@plt+0x1550>
   129fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a00:	ldr	r0, [r0, #16]
   12a04:	and	r0, r0, #61440	; 0xf000
   12a08:	cmp	r0, #40960	; 0xa000
   12a0c:	bne	12a98 <__assert_fail@plt+0x1550>
   12a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a14:	ldr	r0, [r0, #32]
   12a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a1c:	sub	r2, fp, #152	; 0x98
   12a20:	movw	r3, #0
   12a24:	bl	249e4 <__assert_fail@plt+0x1349c>
   12a28:	cmp	r0, #0
   12a2c:	beq	12a90 <__assert_fail@plt+0x1548>
   12a30:	ldr	r0, [fp, #16]
   12a34:	ldrb	r0, [r0, #13]
   12a38:	tst	r0, #1
   12a3c:	bne	12a88 <__assert_fail@plt+0x1540>
   12a40:	bl	11404 <__errno_location@plt>
   12a44:	ldr	r1, [r0]
   12a48:	movw	r0, #22713	; 0x58b9
   12a4c:	movt	r0, #2
   12a50:	str	r1, [sp, #108]	; 0x6c
   12a54:	bl	113b0 <gettext@plt>
   12a58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12a5c:	movw	lr, #4
   12a60:	str	r0, [sp, #104]	; 0x68
   12a64:	mov	r0, lr
   12a68:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12a6c:	movw	r1, #0
   12a70:	str	r0, [sp, #100]	; 0x64
   12a74:	mov	r0, r1
   12a78:	ldr	r1, [sp, #108]	; 0x6c
   12a7c:	ldr	r2, [sp, #104]	; 0x68
   12a80:	ldr	r3, [sp, #100]	; 0x64
   12a84:	bl	11344 <error@plt>
   12a88:	movw	r0, #0
   12a8c:	strb	r0, [fp, #-153]	; 0xffffff67
   12a90:	sub	r0, fp, #152	; 0x98
   12a94:	str	r0, [fp, #-48]	; 0xffffffd0
   12a98:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12a9c:	tst	r0, #1
   12aa0:	movw	r0, #0
   12aa4:	str	r0, [sp, #96]	; 0x60
   12aa8:	beq	12b0c <__assert_fail@plt+0x15c4>
   12aac:	ldr	r0, [fp, #8]
   12ab0:	cmn	r0, #1
   12ab4:	beq	12ad4 <__assert_fail@plt+0x158c>
   12ab8:	ldr	r0, [fp, #8]
   12abc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12ac0:	ldr	r1, [r1, #24]
   12ac4:	cmp	r0, r1
   12ac8:	movw	r0, #0
   12acc:	str	r0, [sp, #96]	; 0x60
   12ad0:	bne	12b0c <__assert_fail@plt+0x15c4>
   12ad4:	ldr	r0, [fp, #12]
   12ad8:	cmn	r0, #1
   12adc:	movw	r0, #1
   12ae0:	str	r0, [sp, #92]	; 0x5c
   12ae4:	beq	12b04 <__assert_fail@plt+0x15bc>
   12ae8:	ldr	r0, [fp, #12]
   12aec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12af0:	ldr	r1, [r1, #28]
   12af4:	cmp	r0, r1
   12af8:	movw	r0, #0
   12afc:	moveq	r0, #1
   12b00:	str	r0, [sp, #92]	; 0x5c
   12b04:	ldr	r0, [sp, #92]	; 0x5c
   12b08:	str	r0, [sp, #96]	; 0x60
   12b0c:	ldr	r0, [sp, #96]	; 0x60
   12b10:	and	r0, r0, #1
   12b14:	strb	r0, [fp, #-154]	; 0xffffff66
   12b18:	b	12b1c <__assert_fail@plt+0x15d4>
   12b1c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12b20:	tst	r0, #1
   12b24:	beq	12cd0 <__assert_fail@plt+0x1788>
   12b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b2c:	ldrh	r0, [r0, #56]	; 0x38
   12b30:	cmp	r0, #1
   12b34:	beq	12b68 <__assert_fail@plt+0x1620>
   12b38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b3c:	ldrh	r0, [r0, #56]	; 0x38
   12b40:	cmp	r0, #2
   12b44:	beq	12b68 <__assert_fail@plt+0x1620>
   12b48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b4c:	ldrh	r0, [r0, #56]	; 0x38
   12b50:	cmp	r0, #6
   12b54:	beq	12b68 <__assert_fail@plt+0x1620>
   12b58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b5c:	ldrh	r0, [r0, #56]	; 0x38
   12b60:	cmp	r0, #4
   12b64:	bne	12cd0 <__assert_fail@plt+0x1788>
   12b68:	ldr	r0, [fp, #16]
   12b6c:	ldr	r0, [r0, #8]
   12b70:	movw	r1, #0
   12b74:	cmp	r0, r1
   12b78:	beq	12cd0 <__assert_fail@plt+0x1788>
   12b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12b80:	ldr	r1, [r0, #96]	; 0x60
   12b84:	ldr	r0, [r0, #100]	; 0x64
   12b88:	ldr	r2, [fp, #16]
   12b8c:	ldr	r2, [r2, #8]
   12b90:	ldr	r3, [r2]
   12b94:	ldr	r2, [r2, #4]
   12b98:	eor	r0, r0, r2
   12b9c:	eor	r1, r1, r3
   12ba0:	orr	r0, r1, r0
   12ba4:	cmp	r0, #0
   12ba8:	bne	12cd0 <__assert_fail@plt+0x1788>
   12bac:	b	12bb0 <__assert_fail@plt+0x1668>
   12bb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12bb4:	ldr	r1, [r0]
   12bb8:	ldr	r0, [r0, #4]
   12bbc:	ldr	r2, [fp, #16]
   12bc0:	ldr	r2, [r2, #8]
   12bc4:	ldr	r3, [r2, #8]
   12bc8:	ldr	r2, [r2, #12]
   12bcc:	eor	r0, r0, r2
   12bd0:	eor	r1, r1, r3
   12bd4:	orr	r0, r1, r0
   12bd8:	cmp	r0, #0
   12bdc:	bne	12cd0 <__assert_fail@plt+0x1788>
   12be0:	b	12be4 <__assert_fail@plt+0x169c>
   12be4:	b	12be8 <__assert_fail@plt+0x16a0>
   12be8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12bec:	movw	r1, #24427	; 0x5f6b
   12bf0:	movt	r1, #2
   12bf4:	bl	11248 <strcmp@plt>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c3c <__assert_fail@plt+0x16f4>
   12c00:	movw	r0, #22333	; 0x573d
   12c04:	movt	r0, #2
   12c08:	bl	113b0 <gettext@plt>
   12c0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c10:	movw	lr, #4
   12c14:	str	r0, [sp, #88]	; 0x58
   12c18:	mov	r0, lr
   12c1c:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12c20:	movw	r1, #0
   12c24:	str	r0, [sp, #84]	; 0x54
   12c28:	mov	r0, r1
   12c2c:	ldr	r2, [sp, #88]	; 0x58
   12c30:	ldr	r3, [sp, #84]	; 0x54
   12c34:	bl	11344 <error@plt>
   12c38:	b	12c9c <__assert_fail@plt+0x1754>
   12c3c:	movw	r0, #22378	; 0x576a
   12c40:	movt	r0, #2
   12c44:	bl	113b0 <gettext@plt>
   12c48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c4c:	movw	lr, #0
   12c50:	str	r0, [sp, #80]	; 0x50
   12c54:	mov	r0, lr
   12c58:	movw	r1, #4
   12c5c:	bl	1b740 <__assert_fail@plt+0xa1f8>
   12c60:	movw	r1, #1
   12c64:	str	r0, [sp, #76]	; 0x4c
   12c68:	mov	r0, r1
   12c6c:	movw	r1, #4
   12c70:	movw	r2, #24427	; 0x5f6b
   12c74:	movt	r2, #2
   12c78:	bl	1b740 <__assert_fail@plt+0xa1f8>
   12c7c:	movw	r1, #0
   12c80:	str	r0, [sp, #72]	; 0x48
   12c84:	mov	r0, r1
   12c88:	ldr	r2, [sp, #80]	; 0x50
   12c8c:	ldr	r3, [sp, #76]	; 0x4c
   12c90:	ldr	lr, [sp, #72]	; 0x48
   12c94:	str	lr, [sp]
   12c98:	bl	11344 <error@plt>
   12c9c:	movw	r0, #22436	; 0x57a4
   12ca0:	movt	r0, #2
   12ca4:	bl	113b0 <gettext@plt>
   12ca8:	movw	lr, #0
   12cac:	str	r0, [sp, #68]	; 0x44
   12cb0:	mov	r0, lr
   12cb4:	mov	r1, lr
   12cb8:	ldr	r2, [sp, #68]	; 0x44
   12cbc:	bl	11344 <error@plt>
   12cc0:	movw	r0, #0
   12cc4:	and	r0, r0, #1
   12cc8:	strb	r0, [fp, #-17]	; 0xffffffef
   12ccc:	b	130cc <__assert_fail@plt+0x1b84>
   12cd0:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12cd4:	tst	r0, #1
   12cd8:	beq	12eac <__assert_fail@plt+0x1964>
   12cdc:	ldr	r0, [fp, #16]
   12ce0:	ldrb	r0, [r0, #12]
   12ce4:	tst	r0, #1
   12ce8:	bne	12d48 <__assert_fail@plt+0x1800>
   12cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cf0:	ldr	r0, [r0, #32]
   12cf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12cf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12d00:	bl	137e4 <__assert_fail@plt+0x229c>
   12d04:	cmp	r0, #0
   12d08:	movw	r0, #0
   12d0c:	moveq	r0, #1
   12d10:	and	r0, r0, #1
   12d14:	strb	r0, [fp, #-153]	; 0xffffff67
   12d18:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12d1c:	tst	r0, #1
   12d20:	bne	12d44 <__assert_fail@plt+0x17fc>
   12d24:	bl	11404 <__errno_location@plt>
   12d28:	ldr	r0, [r0]
   12d2c:	cmp	r0, #95	; 0x5f
   12d30:	bne	12d44 <__assert_fail@plt+0x17fc>
   12d34:	movw	r0, #1
   12d38:	strb	r0, [fp, #-153]	; 0xffffff67
   12d3c:	movw	r0, #0
   12d40:	strb	r0, [fp, #-155]	; 0xffffff65
   12d44:	b	12e10 <__assert_fail@plt+0x18c8>
   12d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d4c:	ldr	r0, [r0, #32]
   12d50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d5c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12d60:	ldr	lr, [fp, #8]
   12d64:	ldr	r4, [fp, #12]
   12d68:	mov	r5, sp
   12d6c:	str	r4, [r5, #8]
   12d70:	str	lr, [r5, #4]
   12d74:	str	ip, [r5]
   12d78:	bl	130dc <__assert_fail@plt+0x1b94>
   12d7c:	str	r0, [fp, #-160]	; 0xffffff60
   12d80:	ldr	r0, [fp, #-160]	; 0xffffff60
   12d84:	sub	r0, r0, #2
   12d88:	cmp	r0, #4
   12d8c:	str	r0, [sp, #64]	; 0x40
   12d90:	bhi	12e08 <__assert_fail@plt+0x18c0>
   12d94:	add	r0, pc, #8
   12d98:	ldr	r1, [sp, #64]	; 0x40
   12d9c:	ldr	r0, [r0, r1, lsl #2]
   12da0:	mov	pc, r0
   12da4:			; <UNDEFINED> instruction: 0x00012db8
   12da8:	strdeq	r2, [r1], -r8
   12dac:	strdeq	r2, [r1], -r8
   12db0:			; <UNDEFINED> instruction: 0x00012dbc
   12db4:	andeq	r2, r1, ip, ror #27
   12db8:	b	12e0c <__assert_fail@plt+0x18c4>
   12dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dc0:	ldr	r0, [r0, #32]
   12dc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12dc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12dd0:	bl	137a4 <__assert_fail@plt+0x225c>
   12dd4:	cmp	r0, #0
   12dd8:	movw	r0, #0
   12ddc:	moveq	r0, #1
   12de0:	and	r0, r0, #1
   12de4:	strb	r0, [fp, #-153]	; 0xffffff67
   12de8:	b	12e0c <__assert_fail@plt+0x18c4>
   12dec:	movw	r0, #0
   12df0:	strb	r0, [fp, #-153]	; 0xffffff67
   12df4:	b	12e0c <__assert_fail@plt+0x18c4>
   12df8:	movw	r0, #0
   12dfc:	strb	r0, [fp, #-154]	; 0xffffff66
   12e00:	strb	r0, [fp, #-153]	; 0xffffff67
   12e04:	b	12e0c <__assert_fail@plt+0x18c4>
   12e08:	bl	11500 <abort@plt>
   12e0c:	b	12e10 <__assert_fail@plt+0x18c8>
   12e10:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12e14:	tst	r0, #1
   12e18:	beq	12ea8 <__assert_fail@plt+0x1960>
   12e1c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12e20:	tst	r0, #1
   12e24:	bne	12ea8 <__assert_fail@plt+0x1960>
   12e28:	ldr	r0, [fp, #16]
   12e2c:	ldrb	r0, [r0, #13]
   12e30:	tst	r0, #1
   12e34:	bne	12ea8 <__assert_fail@plt+0x1960>
   12e38:	bl	11404 <__errno_location@plt>
   12e3c:	ldr	r1, [r0]
   12e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e44:	cmn	r0, #1
   12e48:	str	r1, [sp, #60]	; 0x3c
   12e4c:	beq	12e64 <__assert_fail@plt+0x191c>
   12e50:	movw	r0, #22735	; 0x58cf
   12e54:	movt	r0, #2
   12e58:	bl	113b0 <gettext@plt>
   12e5c:	str	r0, [sp, #56]	; 0x38
   12e60:	b	12e74 <__assert_fail@plt+0x192c>
   12e64:	movw	r0, #22760	; 0x58e8
   12e68:	movt	r0, #2
   12e6c:	bl	113b0 <gettext@plt>
   12e70:	str	r0, [sp, #56]	; 0x38
   12e74:	ldr	r0, [sp, #56]	; 0x38
   12e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e7c:	movw	r2, #4
   12e80:	str	r0, [sp, #52]	; 0x34
   12e84:	mov	r0, r2
   12e88:	bl	1b814 <__assert_fail@plt+0xa2cc>
   12e8c:	movw	r1, #0
   12e90:	str	r0, [sp, #48]	; 0x30
   12e94:	mov	r0, r1
   12e98:	ldr	r1, [sp, #60]	; 0x3c
   12e9c:	ldr	r2, [sp, #52]	; 0x34
   12ea0:	ldr	r3, [sp, #48]	; 0x30
   12ea4:	bl	11344 <error@plt>
   12ea8:	b	12eac <__assert_fail@plt+0x1964>
   12eac:	ldr	r0, [fp, #16]
   12eb0:	ldr	r0, [r0]
   12eb4:	cmp	r0, #2
   12eb8:	beq	1309c <__assert_fail@plt+0x1b54>
   12ebc:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12ec0:	tst	r0, #1
   12ec4:	movw	r0, #0
   12ec8:	str	r0, [sp, #44]	; 0x2c
   12ecc:	beq	12f68 <__assert_fail@plt+0x1a20>
   12ed0:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12ed4:	tst	r0, #1
   12ed8:	movw	r0, #0
   12edc:	str	r0, [sp, #44]	; 0x2c
   12ee0:	beq	12f68 <__assert_fail@plt+0x1a20>
   12ee4:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12ee8:	tst	r0, #1
   12eec:	movw	r0, #0
   12ef0:	str	r0, [sp, #44]	; 0x2c
   12ef4:	beq	12f68 <__assert_fail@plt+0x1a20>
   12ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12efc:	cmn	r0, #1
   12f00:	beq	12f20 <__assert_fail@plt+0x19d8>
   12f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12f0c:	ldr	r1, [r1, #24]
   12f10:	cmp	r0, r1
   12f14:	movw	r0, #0
   12f18:	str	r0, [sp, #40]	; 0x28
   12f1c:	bne	12f58 <__assert_fail@plt+0x1a10>
   12f20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f24:	cmn	r0, #1
   12f28:	movw	r0, #1
   12f2c:	str	r0, [sp, #36]	; 0x24
   12f30:	beq	12f50 <__assert_fail@plt+0x1a08>
   12f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f38:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12f3c:	ldr	r1, [r1, #28]
   12f40:	cmp	r0, r1
   12f44:	movw	r0, #0
   12f48:	moveq	r0, #1
   12f4c:	str	r0, [sp, #36]	; 0x24
   12f50:	ldr	r0, [sp, #36]	; 0x24
   12f54:	str	r0, [sp, #40]	; 0x28
   12f58:	ldr	r0, [sp, #40]	; 0x28
   12f5c:	mvn	r1, #0
   12f60:	eor	r0, r0, r1
   12f64:	str	r0, [sp, #44]	; 0x2c
   12f68:	ldr	r0, [sp, #44]	; 0x2c
   12f6c:	and	r0, r0, #1
   12f70:	strb	r0, [fp, #-161]	; 0xffffff5f
   12f74:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12f78:	tst	r0, #1
   12f7c:	bne	12f90 <__assert_fail@plt+0x1a48>
   12f80:	ldr	r0, [fp, #16]
   12f84:	ldr	r0, [r0]
   12f88:	cmp	r0, #0
   12f8c:	bne	13098 <__assert_fail@plt+0x1b50>
   12f90:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12f94:	tst	r0, #1
   12f98:	bne	12fa8 <__assert_fail@plt+0x1a60>
   12f9c:	movw	r0, #3
   12fa0:	str	r0, [sp, #32]
   12fa4:	b	12fe4 <__assert_fail@plt+0x1a9c>
   12fa8:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12fac:	tst	r0, #1
   12fb0:	bne	12fc0 <__assert_fail@plt+0x1a78>
   12fb4:	movw	r0, #1
   12fb8:	str	r0, [sp, #28]
   12fbc:	b	12fdc <__assert_fail@plt+0x1a94>
   12fc0:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12fc4:	mvn	r1, #0
   12fc8:	eor	r0, r0, r1
   12fcc:	tst	r0, #1
   12fd0:	movw	r0, #4
   12fd4:	moveq	r0, #2
   12fd8:	str	r0, [sp, #28]
   12fdc:	ldr	r0, [sp, #28]
   12fe0:	str	r0, [sp, #32]
   12fe4:	ldr	r0, [sp, #32]
   12fe8:	str	r0, [fp, #-168]	; 0xffffff58
   12fec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ff0:	movw	r1, #0
   12ff4:	cmp	r0, r1
   12ff8:	beq	13010 <__assert_fail@plt+0x1ac8>
   12ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13000:	ldr	r0, [r0, #24]
   13004:	bl	122a0 <__assert_fail@plt+0xd58>
   13008:	str	r0, [sp, #24]
   1300c:	b	1301c <__assert_fail@plt+0x1ad4>
   13010:	movw	r0, #0
   13014:	str	r0, [sp, #24]
   13018:	b	1301c <__assert_fail@plt+0x1ad4>
   1301c:	ldr	r0, [sp, #24]
   13020:	str	r0, [fp, #-172]	; 0xffffff54
   13024:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13028:	movw	r1, #0
   1302c:	cmp	r0, r1
   13030:	beq	13048 <__assert_fail@plt+0x1b00>
   13034:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13038:	ldr	r0, [r0, #28]
   1303c:	bl	12240 <__assert_fail@plt+0xcf8>
   13040:	str	r0, [sp, #20]
   13044:	b	13054 <__assert_fail@plt+0x1b0c>
   13048:	movw	r0, #0
   1304c:	str	r0, [sp, #20]
   13050:	b	13054 <__assert_fail@plt+0x1b0c>
   13054:	ldr	r0, [sp, #20]
   13058:	str	r0, [fp, #-176]	; 0xffffff50
   1305c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13060:	ldr	r1, [fp, #-168]	; 0xffffff58
   13064:	ldr	r2, [fp, #-172]	; 0xffffff54
   13068:	ldr	r3, [fp, #-176]	; 0xffffff50
   1306c:	ldr	ip, [fp, #16]
   13070:	ldr	ip, [ip, #16]
   13074:	ldr	lr, [fp, #16]
   13078:	ldr	lr, [lr, #20]
   1307c:	str	ip, [sp]
   13080:	str	lr, [sp, #4]
   13084:	bl	1337c <__assert_fail@plt+0x1e34>
   13088:	ldr	r0, [fp, #-172]	; 0xffffff54
   1308c:	bl	1398c <__assert_fail@plt+0x2444>
   13090:	ldr	r0, [fp, #-176]	; 0xffffff50
   13094:	bl	1398c <__assert_fail@plt+0x2444>
   13098:	b	1309c <__assert_fail@plt+0x1b54>
   1309c:	ldr	r0, [fp, #16]
   130a0:	ldrb	r0, [r0, #4]
   130a4:	tst	r0, #1
   130a8:	bne	130c0 <__assert_fail@plt+0x1b78>
   130ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130b4:	movw	r2, #4
   130b8:	bl	16a2c <__assert_fail@plt+0x54e4>
   130bc:	str	r0, [sp, #16]
   130c0:	ldrb	r0, [fp, #-153]	; 0xffffff67
   130c4:	and	r0, r0, #1
   130c8:	strb	r0, [fp, #-17]	; 0xffffffef
   130cc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   130d0:	and	r0, r0, #1
   130d4:	sub	sp, fp, #16
   130d8:	pop	{r4, r5, r6, r7, fp, pc}
   130dc:	push	{r4, sl, fp, lr}
   130e0:	add	fp, sp, #8
   130e4:	sub	sp, sp, #160	; 0xa0
   130e8:	ldr	ip, [fp, #16]
   130ec:	ldr	lr, [fp, #12]
   130f0:	ldr	r4, [fp, #8]
   130f4:	str	r0, [fp, #-16]
   130f8:	str	r1, [fp, #-20]	; 0xffffffec
   130fc:	str	r2, [fp, #-24]	; 0xffffffe8
   13100:	str	r3, [fp, #-28]	; 0xffffffe4
   13104:	movw	r0, #2
   13108:	str	r0, [fp, #-32]	; 0xffffffe0
   1310c:	movw	r0, #2304	; 0x900
   13110:	str	r0, [sp, #28]
   13114:	ldr	r0, [fp, #12]
   13118:	cmn	r0, #1
   1311c:	str	r4, [sp, #16]
   13120:	str	lr, [sp, #12]
   13124:	str	ip, [sp, #8]
   13128:	bne	13144 <__assert_fail@plt+0x1bfc>
   1312c:	ldr	r0, [fp, #16]
   13130:	cmn	r0, #1
   13134:	bne	13144 <__assert_fail@plt+0x1bfc>
   13138:	movw	r0, #5
   1313c:	str	r0, [fp, #-12]
   13140:	b	13370 <__assert_fail@plt+0x1e28>
   13144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13148:	ldr	r0, [r0, #16]
   1314c:	and	r0, r0, #61440	; 0xf000
   13150:	cmp	r0, #32768	; 0x8000
   13154:	beq	1318c <__assert_fail@plt+0x1c44>
   13158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1315c:	ldr	r0, [r0, #16]
   13160:	and	r0, r0, #61440	; 0xf000
   13164:	cmp	r0, #16384	; 0x4000
   13168:	bne	1317c <__assert_fail@plt+0x1c34>
   1316c:	ldr	r0, [sp, #28]
   13170:	orr	r0, r0, #16384	; 0x4000
   13174:	str	r0, [sp, #28]
   13178:	b	13188 <__assert_fail@plt+0x1c40>
   1317c:	movw	r0, #5
   13180:	str	r0, [fp, #-12]
   13184:	b	13370 <__assert_fail@plt+0x1e28>
   13188:	b	1318c <__assert_fail@plt+0x1c44>
   1318c:	ldr	r0, [fp, #-16]
   13190:	ldr	r1, [fp, #-20]	; 0xffffffec
   13194:	ldr	r2, [sp, #28]
   13198:	orr	r2, r2, #0
   1319c:	bl	113e0 <openat64@plt>
   131a0:	str	r0, [sp, #24]
   131a4:	ldr	r0, [sp, #24]
   131a8:	movw	r1, #0
   131ac:	cmp	r1, r0
   131b0:	ble	13224 <__assert_fail@plt+0x1cdc>
   131b4:	bl	11404 <__errno_location@plt>
   131b8:	ldr	r0, [r0]
   131bc:	cmp	r0, #13
   131c0:	bne	131fc <__assert_fail@plt+0x1cb4>
   131c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131c8:	ldr	r0, [r0, #16]
   131cc:	and	r0, r0, #61440	; 0xf000
   131d0:	cmp	r0, #32768	; 0x8000
   131d4:	bne	131fc <__assert_fail@plt+0x1cb4>
   131d8:	ldr	r0, [fp, #-16]
   131dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   131e0:	ldr	r2, [sp, #28]
   131e4:	orr	r2, r2, #1
   131e8:	bl	113e0 <openat64@plt>
   131ec:	str	r0, [sp, #24]
   131f0:	movw	r1, #0
   131f4:	cmp	r1, r0
   131f8:	ble	13224 <__assert_fail@plt+0x1cdc>
   131fc:	bl	11404 <__errno_location@plt>
   13200:	ldr	r0, [r0]
   13204:	cmp	r0, #13
   13208:	movw	r0, #0
   1320c:	moveq	r0, #1
   13210:	tst	r0, #1
   13214:	movw	r0, #5
   13218:	moveq	r0, #6
   1321c:	str	r0, [fp, #-12]
   13220:	b	13370 <__assert_fail@plt+0x1e28>
   13224:	ldr	r0, [sp, #24]
   13228:	add	r1, sp, #32
   1322c:	bl	249c4 <__assert_fail@plt+0x1347c>
   13230:	cmp	r0, #0
   13234:	beq	13244 <__assert_fail@plt+0x1cfc>
   13238:	movw	r0, #6
   1323c:	str	r0, [fp, #-32]	; 0xffffffe0
   13240:	b	1333c <__assert_fail@plt+0x1df4>
   13244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13248:	ldr	r1, [r0, #96]	; 0x60
   1324c:	ldr	r0, [r0, #100]	; 0x64
   13250:	ldr	r2, [sp, #128]	; 0x80
   13254:	ldr	r3, [sp, #132]	; 0x84
   13258:	eor	r0, r0, r3
   1325c:	eor	r1, r1, r2
   13260:	orr	r0, r1, r0
   13264:	cmp	r0, #0
   13268:	bne	1329c <__assert_fail@plt+0x1d54>
   1326c:	b	13270 <__assert_fail@plt+0x1d28>
   13270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13274:	ldr	r1, [r0]
   13278:	ldr	r0, [r0, #4]
   1327c:	ldr	r2, [sp, #32]
   13280:	ldr	r3, [sp, #36]	; 0x24
   13284:	eor	r0, r0, r3
   13288:	eor	r1, r1, r2
   1328c:	orr	r0, r1, r0
   13290:	cmp	r0, #0
   13294:	beq	132a8 <__assert_fail@plt+0x1d60>
   13298:	b	1329c <__assert_fail@plt+0x1d54>
   1329c:	movw	r0, #4
   132a0:	str	r0, [fp, #-32]	; 0xffffffe0
   132a4:	b	13338 <__assert_fail@plt+0x1df0>
   132a8:	ldr	r0, [fp, #12]
   132ac:	cmn	r0, #1
   132b0:	beq	132c4 <__assert_fail@plt+0x1d7c>
   132b4:	ldr	r0, [fp, #12]
   132b8:	ldr	r1, [sp, #56]	; 0x38
   132bc:	cmp	r0, r1
   132c0:	bne	13334 <__assert_fail@plt+0x1dec>
   132c4:	ldr	r0, [fp, #16]
   132c8:	cmn	r0, #1
   132cc:	beq	132e0 <__assert_fail@plt+0x1d98>
   132d0:	ldr	r0, [fp, #16]
   132d4:	ldr	r1, [sp, #60]	; 0x3c
   132d8:	cmp	r0, r1
   132dc:	bne	13334 <__assert_fail@plt+0x1dec>
   132e0:	ldr	r0, [sp, #24]
   132e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132e8:	ldr	r2, [fp, #8]
   132ec:	bl	113ec <fchown@plt>
   132f0:	cmp	r0, #0
   132f4:	bne	13328 <__assert_fail@plt+0x1de0>
   132f8:	ldr	r0, [sp, #24]
   132fc:	bl	1150c <close@plt>
   13300:	cmp	r0, #0
   13304:	movw	r0, #0
   13308:	moveq	r0, #1
   1330c:	tst	r0, #1
   13310:	movw	r0, #2
   13314:	moveq	r0, #6
   13318:	str	r0, [fp, #-32]	; 0xffffffe0
   1331c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13320:	str	r0, [fp, #-12]
   13324:	b	13370 <__assert_fail@plt+0x1e28>
   13328:	movw	r0, #6
   1332c:	str	r0, [fp, #-32]	; 0xffffffe0
   13330:	b	13334 <__assert_fail@plt+0x1dec>
   13334:	b	13338 <__assert_fail@plt+0x1df0>
   13338:	b	1333c <__assert_fail@plt+0x1df4>
   1333c:	bl	11404 <__errno_location@plt>
   13340:	ldr	r0, [r0]
   13344:	str	r0, [sp, #20]
   13348:	ldr	r0, [sp, #24]
   1334c:	bl	1150c <close@plt>
   13350:	ldr	lr, [sp, #20]
   13354:	str	r0, [sp, #4]
   13358:	str	lr, [sp]
   1335c:	bl	11404 <__errno_location@plt>
   13360:	ldr	lr, [sp]
   13364:	str	lr, [r0]
   13368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1336c:	str	r0, [fp, #-12]
   13370:	ldr	r0, [fp, #-12]
   13374:	sub	sp, fp, #8
   13378:	pop	{r4, sl, fp, pc}
   1337c:	push	{fp, lr}
   13380:	mov	fp, sp
   13384:	sub	sp, sp, #112	; 0x70
   13388:	ldr	ip, [fp, #12]
   1338c:	ldr	lr, [fp, #8]
   13390:	str	r0, [fp, #-4]
   13394:	str	r1, [fp, #-8]
   13398:	str	r2, [fp, #-12]
   1339c:	str	r3, [fp, #-16]
   133a0:	ldr	r0, [fp, #-8]
   133a4:	cmp	r0, #1
   133a8:	str	lr, [fp, #-32]	; 0xffffffe0
   133ac:	str	ip, [fp, #-36]	; 0xffffffdc
   133b0:	bne	133f0 <__assert_fail@plt+0x1ea8>
   133b4:	movw	r0, #22781	; 0x58fd
   133b8:	movt	r0, #2
   133bc:	bl	113b0 <gettext@plt>
   133c0:	ldr	r1, [fp, #-4]
   133c4:	movw	lr, #4
   133c8:	str	r0, [fp, #-40]	; 0xffffffd8
   133cc:	mov	r0, lr
   133d0:	bl	1b814 <__assert_fail@plt+0xa2cc>
   133d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133d8:	str	r0, [fp, #-44]	; 0xffffffd4
   133dc:	mov	r0, r1
   133e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133e4:	bl	11260 <printf@plt>
   133e8:	str	r0, [fp, #-48]	; 0xffffffd0
   133ec:	b	136d0 <__assert_fail@plt+0x2188>
   133f0:	ldr	r0, [fp, #8]
   133f4:	ldr	r1, [fp, #12]
   133f8:	bl	136d8 <__assert_fail@plt+0x2190>
   133fc:	str	r0, [fp, #-28]	; 0xffffffe4
   13400:	ldr	r0, [fp, #8]
   13404:	movw	r1, #0
   13408:	cmp	r0, r1
   1340c:	beq	1341c <__assert_fail@plt+0x1ed4>
   13410:	ldr	r0, [fp, #-12]
   13414:	str	r0, [fp, #-52]	; 0xffffffcc
   13418:	b	13428 <__assert_fail@plt+0x1ee0>
   1341c:	movw	r0, #0
   13420:	str	r0, [fp, #-52]	; 0xffffffcc
   13424:	b	13428 <__assert_fail@plt+0x1ee0>
   13428:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1342c:	ldr	r1, [fp, #12]
   13430:	movw	r2, #0
   13434:	cmp	r1, r2
   13438:	str	r0, [sp, #56]	; 0x38
   1343c:	beq	1344c <__assert_fail@plt+0x1f04>
   13440:	ldr	r0, [fp, #-16]
   13444:	str	r0, [sp, #52]	; 0x34
   13448:	b	13458 <__assert_fail@plt+0x1f10>
   1344c:	movw	r0, #0
   13450:	str	r0, [sp, #52]	; 0x34
   13454:	b	13458 <__assert_fail@plt+0x1f10>
   13458:	ldr	r0, [sp, #52]	; 0x34
   1345c:	ldr	r1, [sp, #56]	; 0x38
   13460:	str	r0, [sp, #48]	; 0x30
   13464:	mov	r0, r1
   13468:	ldr	r1, [sp, #48]	; 0x30
   1346c:	bl	136d8 <__assert_fail@plt+0x2190>
   13470:	str	r0, [fp, #-24]	; 0xffffffe8
   13474:	ldr	r0, [fp, #-8]
   13478:	cmp	r0, #2
   1347c:	str	r0, [sp, #44]	; 0x2c
   13480:	beq	134a8 <__assert_fail@plt+0x1f60>
   13484:	b	13488 <__assert_fail@plt+0x1f40>
   13488:	ldr	r0, [sp, #44]	; 0x2c
   1348c:	cmp	r0, #3
   13490:	beq	13514 <__assert_fail@plt+0x1fcc>
   13494:	b	13498 <__assert_fail@plt+0x1f50>
   13498:	ldr	r0, [sp, #44]	; 0x2c
   1349c:	cmp	r0, #4
   134a0:	beq	13614 <__assert_fail@plt+0x20cc>
   134a4:	b	13680 <__assert_fail@plt+0x2138>
   134a8:	ldr	r0, [fp, #8]
   134ac:	movw	r1, #0
   134b0:	cmp	r0, r1
   134b4:	beq	134cc <__assert_fail@plt+0x1f84>
   134b8:	movw	r0, #22837	; 0x5935
   134bc:	movt	r0, #2
   134c0:	bl	113b0 <gettext@plt>
   134c4:	str	r0, [sp, #40]	; 0x28
   134c8:	b	13508 <__assert_fail@plt+0x1fc0>
   134cc:	ldr	r0, [fp, #12]
   134d0:	movw	r1, #0
   134d4:	cmp	r0, r1
   134d8:	beq	134f0 <__assert_fail@plt+0x1fa8>
   134dc:	movw	r0, #22876	; 0x595c
   134e0:	movt	r0, #2
   134e4:	bl	113b0 <gettext@plt>
   134e8:	str	r0, [sp, #36]	; 0x24
   134ec:	b	13500 <__assert_fail@plt+0x1fb8>
   134f0:	movw	r0, #22911	; 0x597f
   134f4:	movt	r0, #2
   134f8:	bl	113b0 <gettext@plt>
   134fc:	str	r0, [sp, #36]	; 0x24
   13500:	ldr	r0, [sp, #36]	; 0x24
   13504:	str	r0, [sp, #40]	; 0x28
   13508:	ldr	r0, [sp, #40]	; 0x28
   1350c:	str	r0, [fp, #-20]	; 0xffffffec
   13510:	b	13684 <__assert_fail@plt+0x213c>
   13514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13518:	movw	r1, #0
   1351c:	cmp	r0, r1
   13520:	beq	13590 <__assert_fail@plt+0x2048>
   13524:	ldr	r0, [fp, #8]
   13528:	movw	r1, #0
   1352c:	cmp	r0, r1
   13530:	beq	13548 <__assert_fail@plt+0x2000>
   13534:	movw	r0, #22941	; 0x599d
   13538:	movt	r0, #2
   1353c:	bl	113b0 <gettext@plt>
   13540:	str	r0, [sp, #32]
   13544:	b	13584 <__assert_fail@plt+0x203c>
   13548:	ldr	r0, [fp, #12]
   1354c:	movw	r1, #0
   13550:	cmp	r0, r1
   13554:	beq	1356c <__assert_fail@plt+0x2024>
   13558:	movw	r0, #22989	; 0x59cd
   1355c:	movt	r0, #2
   13560:	bl	113b0 <gettext@plt>
   13564:	str	r0, [sp, #28]
   13568:	b	1357c <__assert_fail@plt+0x2034>
   1356c:	movw	r0, #23033	; 0x59f9
   13570:	movt	r0, #2
   13574:	bl	113b0 <gettext@plt>
   13578:	str	r0, [sp, #28]
   1357c:	ldr	r0, [sp, #28]
   13580:	str	r0, [sp, #32]
   13584:	ldr	r0, [sp, #32]
   13588:	str	r0, [fp, #-20]	; 0xffffffec
   1358c:	b	13610 <__assert_fail@plt+0x20c8>
   13590:	ldr	r0, [fp, #8]
   13594:	movw	r1, #0
   13598:	cmp	r0, r1
   1359c:	beq	135b4 <__assert_fail@plt+0x206c>
   135a0:	movw	r0, #23067	; 0x5a1b
   135a4:	movt	r0, #2
   135a8:	bl	113b0 <gettext@plt>
   135ac:	str	r0, [sp, #24]
   135b0:	b	135f0 <__assert_fail@plt+0x20a8>
   135b4:	ldr	r0, [fp, #12]
   135b8:	movw	r1, #0
   135bc:	cmp	r0, r1
   135c0:	beq	135d8 <__assert_fail@plt+0x2090>
   135c4:	movw	r0, #23107	; 0x5a43
   135c8:	movt	r0, #2
   135cc:	bl	113b0 <gettext@plt>
   135d0:	str	r0, [sp, #20]
   135d4:	b	135e8 <__assert_fail@plt+0x20a0>
   135d8:	movw	r0, #23033	; 0x59f9
   135dc:	movt	r0, #2
   135e0:	bl	113b0 <gettext@plt>
   135e4:	str	r0, [sp, #20]
   135e8:	ldr	r0, [sp, #20]
   135ec:	str	r0, [sp, #24]
   135f0:	ldr	r0, [sp, #24]
   135f4:	str	r0, [fp, #-20]	; 0xffffffec
   135f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135fc:	bl	1398c <__assert_fail@plt+0x2444>
   13600:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13604:	str	r0, [fp, #-24]	; 0xffffffe8
   13608:	movw	r0, #0
   1360c:	str	r0, [fp, #-28]	; 0xffffffe4
   13610:	b	13684 <__assert_fail@plt+0x213c>
   13614:	ldr	r0, [fp, #8]
   13618:	movw	r1, #0
   1361c:	cmp	r0, r1
   13620:	beq	13638 <__assert_fail@plt+0x20f0>
   13624:	movw	r0, #23143	; 0x5a67
   13628:	movt	r0, #2
   1362c:	bl	113b0 <gettext@plt>
   13630:	str	r0, [sp, #16]
   13634:	b	13674 <__assert_fail@plt+0x212c>
   13638:	ldr	r0, [fp, #12]
   1363c:	movw	r1, #0
   13640:	cmp	r0, r1
   13644:	beq	1365c <__assert_fail@plt+0x2114>
   13648:	movw	r0, #23175	; 0x5a87
   1364c:	movt	r0, #2
   13650:	bl	113b0 <gettext@plt>
   13654:	str	r0, [sp, #12]
   13658:	b	1366c <__assert_fail@plt+0x2124>
   1365c:	movw	r0, #23203	; 0x5aa3
   13660:	movt	r0, #2
   13664:	bl	113b0 <gettext@plt>
   13668:	str	r0, [sp, #12]
   1366c:	ldr	r0, [sp, #12]
   13670:	str	r0, [sp, #16]
   13674:	ldr	r0, [sp, #16]
   13678:	str	r0, [fp, #-20]	; 0xffffffec
   1367c:	b	13684 <__assert_fail@plt+0x213c>
   13680:	bl	11500 <abort@plt>
   13684:	ldr	r0, [fp, #-20]	; 0xffffffec
   13688:	ldr	r1, [fp, #-4]
   1368c:	movw	r2, #4
   13690:	str	r0, [sp, #8]
   13694:	mov	r0, r2
   13698:	bl	1b814 <__assert_fail@plt+0xa2cc>
   1369c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   136a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   136a4:	ldr	r1, [sp, #8]
   136a8:	str	r0, [sp, #4]
   136ac:	mov	r0, r1
   136b0:	ldr	r1, [sp, #4]
   136b4:	bl	11260 <printf@plt>
   136b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   136bc:	str	r0, [sp]
   136c0:	mov	r0, r1
   136c4:	bl	1398c <__assert_fail@plt+0x2444>
   136c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   136cc:	bl	1398c <__assert_fail@plt+0x2444>
   136d0:	mov	sp, fp
   136d4:	pop	{fp, pc}
   136d8:	push	{fp, lr}
   136dc:	mov	fp, sp
   136e0:	sub	sp, sp, #24
   136e4:	str	r0, [fp, #-4]
   136e8:	str	r1, [fp, #-8]
   136ec:	movw	r0, #0
   136f0:	str	r0, [sp, #12]
   136f4:	ldr	r1, [fp, #-4]
   136f8:	cmp	r1, r0
   136fc:	beq	13778 <__assert_fail@plt+0x2230>
   13700:	ldr	r0, [fp, #-8]
   13704:	movw	r1, #0
   13708:	cmp	r0, r1
   1370c:	beq	13768 <__assert_fail@plt+0x2220>
   13710:	ldr	r0, [fp, #-4]
   13714:	bl	113c8 <strlen@plt>
   13718:	add	r0, r0, #1
   1371c:	ldr	lr, [fp, #-8]
   13720:	str	r0, [sp, #8]
   13724:	mov	r0, lr
   13728:	bl	113c8 <strlen@plt>
   1372c:	ldr	lr, [sp, #8]
   13730:	add	r0, lr, r0
   13734:	add	r0, r0, #1
   13738:	bl	1ccac <__assert_fail@plt+0xb764>
   1373c:	str	r0, [sp, #12]
   13740:	ldr	r0, [sp, #12]
   13744:	ldr	r1, [fp, #-4]
   13748:	bl	112c0 <stpcpy@plt>
   1374c:	movw	r1, #23229	; 0x5abd
   13750:	movt	r1, #2
   13754:	bl	112c0 <stpcpy@plt>
   13758:	ldr	r1, [fp, #-8]
   1375c:	bl	112c0 <stpcpy@plt>
   13760:	str	r0, [sp, #4]
   13764:	b	13774 <__assert_fail@plt+0x222c>
   13768:	ldr	r0, [fp, #-4]
   1376c:	bl	1fa50 <__assert_fail@plt+0xe508>
   13770:	str	r0, [sp, #12]
   13774:	b	13798 <__assert_fail@plt+0x2250>
   13778:	ldr	r0, [fp, #-8]
   1377c:	movw	r1, #0
   13780:	cmp	r0, r1
   13784:	beq	13794 <__assert_fail@plt+0x224c>
   13788:	ldr	r0, [fp, #-8]
   1378c:	bl	1fa50 <__assert_fail@plt+0xe508>
   13790:	str	r0, [sp, #12]
   13794:	b	13798 <__assert_fail@plt+0x2250>
   13798:	ldr	r0, [sp, #12]
   1379c:	mov	sp, fp
   137a0:	pop	{fp, pc}
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	sub	sp, sp, #24
   137b0:	str	r0, [fp, #-4]
   137b4:	str	r1, [fp, #-8]
   137b8:	str	r2, [sp, #12]
   137bc:	str	r3, [sp, #8]
   137c0:	ldr	r0, [fp, #-4]
   137c4:	ldr	r1, [fp, #-8]
   137c8:	ldr	r2, [sp, #12]
   137cc:	ldr	r3, [sp, #8]
   137d0:	movw	ip, #0
   137d4:	str	ip, [sp]
   137d8:	bl	114c4 <fchownat@plt>
   137dc:	mov	sp, fp
   137e0:	pop	{fp, pc}
   137e4:	push	{fp, lr}
   137e8:	mov	fp, sp
   137ec:	sub	sp, sp, #24
   137f0:	str	r0, [fp, #-4]
   137f4:	str	r1, [fp, #-8]
   137f8:	str	r2, [sp, #12]
   137fc:	str	r3, [sp, #8]
   13800:	ldr	r0, [fp, #-4]
   13804:	ldr	r1, [fp, #-8]
   13808:	ldr	r2, [sp, #12]
   1380c:	ldr	r3, [sp, #8]
   13810:	movw	ip, #256	; 0x100
   13814:	str	ip, [sp]
   13818:	bl	114c4 <fchownat@plt>
   1381c:	mov	sp, fp
   13820:	pop	{fp, pc}
   13824:	sub	sp, sp, #4
   13828:	str	r0, [sp]
   1382c:	ldr	r0, [sp]
   13830:	movw	r1, #29120	; 0x71c0
   13834:	movt	r1, #3
   13838:	str	r0, [r1]
   1383c:	add	sp, sp, #4
   13840:	bx	lr
   13844:	sub	sp, sp, #4
   13848:	and	r0, r0, #1
   1384c:	strb	r0, [sp, #3]
   13850:	ldrb	r0, [sp, #3]
   13854:	and	r0, r0, #1
   13858:	movw	r1, #29124	; 0x71c4
   1385c:	movt	r1, #3
   13860:	strb	r0, [r1]
   13864:	add	sp, sp, #4
   13868:	bx	lr
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	sub	sp, sp, #24
   13878:	movw	r0, #29084	; 0x719c
   1387c:	movt	r0, #3
   13880:	ldr	r0, [r0]
   13884:	bl	21e54 <__assert_fail@plt+0x1090c>
   13888:	cmp	r0, #0
   1388c:	beq	1395c <__assert_fail@plt+0x2414>
   13890:	movw	r0, #29124	; 0x71c4
   13894:	movt	r0, #3
   13898:	ldrb	r0, [r0]
   1389c:	tst	r0, #1
   138a0:	beq	138b4 <__assert_fail@plt+0x236c>
   138a4:	bl	11404 <__errno_location@plt>
   138a8:	ldr	r0, [r0]
   138ac:	cmp	r0, #32
   138b0:	beq	1395c <__assert_fail@plt+0x2414>
   138b4:	movw	r0, #23246	; 0x5ace
   138b8:	movt	r0, #2
   138bc:	bl	113b0 <gettext@plt>
   138c0:	str	r0, [fp, #-4]
   138c4:	movw	r0, #29120	; 0x71c0
   138c8:	movt	r0, #3
   138cc:	ldr	r0, [r0]
   138d0:	movw	lr, #0
   138d4:	cmp	r0, lr
   138d8:	beq	13930 <__assert_fail@plt+0x23e8>
   138dc:	bl	11404 <__errno_location@plt>
   138e0:	ldr	r1, [r0]
   138e4:	movw	r0, #29120	; 0x71c0
   138e8:	movt	r0, #3
   138ec:	ldr	r0, [r0]
   138f0:	str	r1, [fp, #-8]
   138f4:	bl	1b910 <__assert_fail@plt+0xa3c8>
   138f8:	ldr	r1, [fp, #-4]
   138fc:	movw	lr, #0
   13900:	str	r0, [sp, #12]
   13904:	mov	r0, lr
   13908:	ldr	lr, [fp, #-8]
   1390c:	str	r1, [sp, #8]
   13910:	mov	r1, lr
   13914:	movw	r2, #21456	; 0x53d0
   13918:	movt	r2, #2
   1391c:	ldr	r3, [sp, #12]
   13920:	ldr	ip, [sp, #8]
   13924:	str	ip, [sp]
   13928:	bl	11344 <error@plt>
   1392c:	b	1394c <__assert_fail@plt+0x2404>
   13930:	bl	11404 <__errno_location@plt>
   13934:	ldr	r1, [r0]
   13938:	ldr	r3, [fp, #-4]
   1393c:	movw	r0, #0
   13940:	movw	r2, #21460	; 0x53d4
   13944:	movt	r2, #2
   13948:	bl	11344 <error@plt>
   1394c:	movw	r0, #28984	; 0x7138
   13950:	movt	r0, #3
   13954:	ldr	r0, [r0]
   13958:	bl	11290 <_exit@plt>
   1395c:	movw	r0, #29080	; 0x7198
   13960:	movt	r0, #3
   13964:	ldr	r0, [r0]
   13968:	bl	21e54 <__assert_fail@plt+0x1090c>
   1396c:	cmp	r0, #0
   13970:	beq	13984 <__assert_fail@plt+0x243c>
   13974:	movw	r0, #28984	; 0x7138
   13978:	movt	r0, #3
   1397c:	ldr	r0, [r0]
   13980:	bl	11290 <_exit@plt>
   13984:	mov	sp, fp
   13988:	pop	{fp, pc}
   1398c:	push	{fp, lr}
   13990:	mov	fp, sp
   13994:	sub	sp, sp, #16
   13998:	str	r0, [fp, #-4]
   1399c:	bl	11404 <__errno_location@plt>
   139a0:	ldr	r0, [r0]
   139a4:	str	r0, [sp, #8]
   139a8:	ldr	r0, [fp, #-4]
   139ac:	bl	11284 <free@plt>
   139b0:	ldr	r0, [sp, #8]
   139b4:	str	r0, [sp, #4]
   139b8:	bl	11404 <__errno_location@plt>
   139bc:	ldr	lr, [sp, #4]
   139c0:	str	lr, [r0]
   139c4:	mov	sp, fp
   139c8:	pop	{fp, pc}
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	sub	sp, sp, #88	; 0x58
   139d8:	ldr	r3, [pc, #1456]	; 13f90 <__assert_fail@plt+0x2a48>
   139dc:	str	r0, [fp, #-8]
   139e0:	str	r1, [fp, #-12]
   139e4:	str	r2, [fp, #-16]
   139e8:	movw	r0, #0
   139ec:	str	r0, [fp, #-36]	; 0xffffffdc
   139f0:	str	r0, [fp, #-40]	; 0xffffffd8
   139f4:	ldr	r0, [fp, #-12]
   139f8:	and	r0, r0, r3
   139fc:	cmp	r0, #0
   13a00:	beq	13a1c <__assert_fail@plt+0x24d4>
   13a04:	bl	11404 <__errno_location@plt>
   13a08:	movw	lr, #22
   13a0c:	str	lr, [r0]
   13a10:	movw	r0, #0
   13a14:	str	r0, [fp, #-4]
   13a18:	b	13f84 <__assert_fail@plt+0x2a3c>
   13a1c:	ldr	r0, [fp, #-12]
   13a20:	and	r0, r0, #4
   13a24:	cmp	r0, #0
   13a28:	beq	13a54 <__assert_fail@plt+0x250c>
   13a2c:	ldr	r0, [fp, #-12]
   13a30:	and	r0, r0, #512	; 0x200
   13a34:	cmp	r0, #0
   13a38:	beq	13a54 <__assert_fail@plt+0x250c>
   13a3c:	bl	11404 <__errno_location@plt>
   13a40:	movw	lr, #22
   13a44:	str	lr, [r0]
   13a48:	movw	r0, #0
   13a4c:	str	r0, [fp, #-4]
   13a50:	b	13f84 <__assert_fail@plt+0x2a3c>
   13a54:	ldr	r0, [fp, #-12]
   13a58:	and	r0, r0, #18
   13a5c:	cmp	r0, #0
   13a60:	bne	13a7c <__assert_fail@plt+0x2534>
   13a64:	bl	11404 <__errno_location@plt>
   13a68:	movw	lr, #22
   13a6c:	str	lr, [r0]
   13a70:	movw	r0, #0
   13a74:	str	r0, [fp, #-4]
   13a78:	b	13f84 <__assert_fail@plt+0x2a3c>
   13a7c:	movw	r0, #1
   13a80:	movw	r1, #96	; 0x60
   13a84:	bl	2190c <__assert_fail@plt+0x103c4>
   13a88:	str	r0, [fp, #-20]	; 0xffffffec
   13a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a90:	movw	r1, #0
   13a94:	cmp	r0, r1
   13a98:	bne	13aa8 <__assert_fail@plt+0x2560>
   13a9c:	movw	r0, #0
   13aa0:	str	r0, [fp, #-4]
   13aa4:	b	13f84 <__assert_fail@plt+0x2a3c>
   13aa8:	ldr	r0, [fp, #-16]
   13aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ab0:	str	r0, [r1, #44]	; 0x2c
   13ab4:	ldr	r0, [fp, #-12]
   13ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13abc:	str	r0, [r1, #48]	; 0x30
   13ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ac4:	ldr	r0, [r0, #48]	; 0x30
   13ac8:	and	r0, r0, #2
   13acc:	cmp	r0, #0
   13ad0:	beq	13af8 <__assert_fail@plt+0x25b0>
   13ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ad8:	ldr	r1, [r0, #48]	; 0x30
   13adc:	orr	r1, r1, #4
   13ae0:	str	r1, [r0, #48]	; 0x30
   13ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ae8:	ldr	r1, [r0, #48]	; 0x30
   13aec:	mvn	r2, #512	; 0x200
   13af0:	and	r1, r1, r2
   13af4:	str	r1, [r0, #48]	; 0x30
   13af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13afc:	mvn	r1, #99	; 0x63
   13b00:	str	r1, [r0, #32]
   13b04:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b08:	ldr	r0, [r0, #48]	; 0x30
   13b0c:	and	r0, r0, #512	; 0x200
   13b10:	cmp	r0, #0
   13b14:	beq	13b50 <__assert_fail@plt+0x2608>
   13b18:	b	13b50 <__assert_fail@plt+0x2608>
   13b1c:	ldr	r1, [pc, #1136]	; 13f94 <__assert_fail@plt+0x2a4c>
   13b20:	movw	r0, #23259	; 0x5adb
   13b24:	movt	r0, #2
   13b28:	bl	225e0 <__assert_fail@plt+0x11098>
   13b2c:	str	r0, [sp, #40]	; 0x28
   13b30:	ldr	r0, [sp, #40]	; 0x28
   13b34:	cmp	r0, #0
   13b38:	bge	13b40 <__assert_fail@plt+0x25f8>
   13b3c:	b	13b4c <__assert_fail@plt+0x2604>
   13b40:	ldr	r0, [sp, #40]	; 0x28
   13b44:	bl	1150c <close@plt>
   13b48:	str	r0, [sp, #24]
   13b4c:	b	13b50 <__assert_fail@plt+0x2608>
   13b50:	ldr	r0, [fp, #-8]
   13b54:	bl	13f98 <__assert_fail@plt+0x2a50>
   13b58:	str	r0, [sp, #36]	; 0x24
   13b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b60:	ldr	lr, [sp, #36]	; 0x24
   13b64:	cmp	lr, #4096	; 0x1000
   13b68:	str	r0, [sp, #20]
   13b6c:	bls	13b7c <__assert_fail@plt+0x2634>
   13b70:	ldr	r0, [sp, #36]	; 0x24
   13b74:	str	r0, [sp, #16]
   13b78:	b	13b88 <__assert_fail@plt+0x2640>
   13b7c:	movw	r0, #4096	; 0x1000
   13b80:	str	r0, [sp, #16]
   13b84:	b	13b88 <__assert_fail@plt+0x2640>
   13b88:	ldr	r0, [sp, #16]
   13b8c:	ldr	r1, [sp, #20]
   13b90:	str	r0, [sp, #12]
   13b94:	mov	r0, r1
   13b98:	ldr	r1, [sp, #12]
   13b9c:	bl	1400c <__assert_fail@plt+0x2ac4>
   13ba0:	tst	r0, #1
   13ba4:	bne	13bac <__assert_fail@plt+0x2664>
   13ba8:	b	13f74 <__assert_fail@plt+0x2a2c>
   13bac:	ldr	r0, [fp, #-8]
   13bb0:	ldr	r0, [r0]
   13bb4:	movw	r1, #0
   13bb8:	cmp	r0, r1
   13bbc:	beq	13bf4 <__assert_fail@plt+0x26ac>
   13bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bc4:	movw	r1, #20924	; 0x51bc
   13bc8:	movt	r1, #2
   13bcc:	movw	r2, #0
   13bd0:	bl	14104 <__assert_fail@plt+0x2bbc>
   13bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   13bd8:	movw	r1, #0
   13bdc:	cmp	r0, r1
   13be0:	bne	13be8 <__assert_fail@plt+0x26a0>
   13be4:	b	13f68 <__assert_fail@plt+0x2a20>
   13be8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bec:	mvn	r1, #0
   13bf0:	str	r1, [r0, #48]	; 0x30
   13bf4:	ldr	r0, [fp, #-16]
   13bf8:	movw	r1, #0
   13bfc:	cmp	r0, r1
   13c00:	movw	r0, #1
   13c04:	str	r0, [sp, #8]
   13c08:	beq	13c28 <__assert_fail@plt+0x26e0>
   13c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c10:	ldr	r0, [r0, #48]	; 0x30
   13c14:	and	r0, r0, #1024	; 0x400
   13c18:	cmp	r0, #0
   13c1c:	movw	r0, #0
   13c20:	movne	r0, #1
   13c24:	str	r0, [sp, #8]
   13c28:	ldr	r0, [sp, #8]
   13c2c:	and	r0, r0, #1
   13c30:	strb	r0, [fp, #-41]	; 0xffffffd7
   13c34:	movw	r0, #0
   13c38:	str	r0, [fp, #-28]	; 0xffffffe4
   13c3c:	str	r0, [fp, #-32]	; 0xffffffe0
   13c40:	ldr	r0, [fp, #-8]
   13c44:	ldr	r0, [r0]
   13c48:	movw	r1, #0
   13c4c:	cmp	r0, r1
   13c50:	beq	13e44 <__assert_fail@plt+0x28fc>
   13c54:	ldr	r0, [fp, #-8]
   13c58:	ldr	r0, [r0]
   13c5c:	bl	113c8 <strlen@plt>
   13c60:	str	r0, [sp, #32]
   13c64:	ldr	r0, [fp, #-12]
   13c68:	and	r0, r0, #2048	; 0x800
   13c6c:	cmp	r0, #0
   13c70:	bne	13d14 <__assert_fail@plt+0x27cc>
   13c74:	ldr	r0, [fp, #-8]
   13c78:	ldr	r0, [r0]
   13c7c:	str	r0, [sp, #28]
   13c80:	ldr	r0, [sp, #32]
   13c84:	movw	r1, #2
   13c88:	cmp	r1, r0
   13c8c:	bcs	13d10 <__assert_fail@plt+0x27c8>
   13c90:	ldr	r0, [sp, #28]
   13c94:	ldr	r1, [sp, #32]
   13c98:	sub	r1, r1, #1
   13c9c:	add	r0, r0, r1
   13ca0:	ldrb	r0, [r0]
   13ca4:	cmp	r0, #47	; 0x2f
   13ca8:	bne	13d10 <__assert_fail@plt+0x27c8>
   13cac:	b	13cb0 <__assert_fail@plt+0x2768>
   13cb0:	ldr	r0, [sp, #32]
   13cb4:	movw	r1, #1
   13cb8:	cmp	r1, r0
   13cbc:	movw	r0, #0
   13cc0:	str	r0, [sp, #4]
   13cc4:	bcs	13cec <__assert_fail@plt+0x27a4>
   13cc8:	ldr	r0, [sp, #28]
   13ccc:	ldr	r1, [sp, #32]
   13cd0:	sub	r1, r1, #2
   13cd4:	add	r0, r0, r1
   13cd8:	ldrb	r0, [r0]
   13cdc:	cmp	r0, #47	; 0x2f
   13ce0:	movw	r0, #0
   13ce4:	moveq	r0, #1
   13ce8:	str	r0, [sp, #4]
   13cec:	ldr	r0, [sp, #4]
   13cf0:	tst	r0, #1
   13cf4:	beq	13d0c <__assert_fail@plt+0x27c4>
   13cf8:	ldr	r0, [sp, #32]
   13cfc:	mvn	r1, #0
   13d00:	add	r0, r0, r1
   13d04:	str	r0, [sp, #32]
   13d08:	b	13cb0 <__assert_fail@plt+0x2768>
   13d0c:	b	13d10 <__assert_fail@plt+0x27c8>
   13d10:	b	13d14 <__assert_fail@plt+0x27cc>
   13d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d18:	ldr	r1, [fp, #-8]
   13d1c:	ldr	r1, [r1]
   13d20:	ldr	r2, [sp, #32]
   13d24:	bl	14104 <__assert_fail@plt+0x2bbc>
   13d28:	str	r0, [fp, #-24]	; 0xffffffe8
   13d2c:	movw	r1, #0
   13d30:	cmp	r0, r1
   13d34:	bne	13d3c <__assert_fail@plt+0x27f4>
   13d38:	b	13f58 <__assert_fail@plt+0x2a10>
   13d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d40:	movw	r1, #0
   13d44:	str	r1, [r0, #48]	; 0x30
   13d48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d50:	str	r0, [r1, #4]
   13d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d58:	add	r0, r0, #168	; 0xa8
   13d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d60:	str	r0, [r1, #24]
   13d64:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   13d68:	tst	r0, #1
   13d6c:	beq	13da0 <__assert_fail@plt+0x2858>
   13d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d74:	movw	r1, #0
   13d78:	cmp	r0, r1
   13d7c:	beq	13da0 <__assert_fail@plt+0x2858>
   13d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d84:	movw	r1, #11
   13d88:	strh	r1, [r0, #56]	; 0x38
   13d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d90:	movw	r1, #1
   13d94:	and	r1, r1, #1
   13d98:	bl	141fc <__assert_fail@plt+0x2cb4>
   13d9c:	b	13dbc <__assert_fail@plt+0x2874>
   13da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13da8:	movw	r2, #0
   13dac:	and	r2, r2, #1
   13db0:	bl	14254 <__assert_fail@plt+0x2d0c>
   13db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13db8:	strh	r0, [r1, #56]	; 0x38
   13dbc:	ldr	r0, [fp, #-16]
   13dc0:	movw	r1, #0
   13dc4:	cmp	r0, r1
   13dc8:	beq	13de4 <__assert_fail@plt+0x289c>
   13dcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13dd4:	str	r0, [r1, #8]
   13dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ddc:	str	r0, [fp, #-28]	; 0xffffffe4
   13de0:	b	13e24 <__assert_fail@plt+0x28dc>
   13de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13de8:	movw	r1, #0
   13dec:	str	r1, [r0, #8]
   13df0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13df4:	cmp	r0, r1
   13df8:	bne	13e0c <__assert_fail@plt+0x28c4>
   13dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e00:	str	r0, [fp, #-28]	; 0xffffffe4
   13e04:	str	r0, [fp, #-40]	; 0xffffffd8
   13e08:	b	13e20 <__assert_fail@plt+0x28d8>
   13e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e14:	str	r0, [r1, #8]
   13e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e1c:	str	r0, [fp, #-40]	; 0xffffffd8
   13e20:	b	13e24 <__assert_fail@plt+0x28dc>
   13e24:	b	13e28 <__assert_fail@plt+0x28e0>
   13e28:	ldr	r0, [fp, #-8]
   13e2c:	add	r0, r0, #4
   13e30:	str	r0, [fp, #-8]
   13e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e38:	add	r0, r0, #1
   13e3c:	str	r0, [fp, #-32]	; 0xffffffe0
   13e40:	b	13c40 <__assert_fail@plt+0x26f8>
   13e44:	ldr	r0, [fp, #-16]
   13e48:	movw	r1, #0
   13e4c:	cmp	r0, r1
   13e50:	beq	13e74 <__assert_fail@plt+0x292c>
   13e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e58:	cmp	r0, #1
   13e5c:	bls	13e74 <__assert_fail@plt+0x292c>
   13e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e6c:	bl	1446c <__assert_fail@plt+0x2f24>
   13e70:	str	r0, [fp, #-28]	; 0xffffffe4
   13e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e78:	movw	r1, #20924	; 0x51bc
   13e7c:	movt	r1, #2
   13e80:	movw	r2, #0
   13e84:	bl	14104 <__assert_fail@plt+0x2bbc>
   13e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e8c:	str	r0, [r1]
   13e90:	movw	r1, #0
   13e94:	cmp	r0, r1
   13e98:	bne	13ea0 <__assert_fail@plt+0x2958>
   13e9c:	b	13f58 <__assert_fail@plt+0x2a10>
   13ea0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ea8:	ldr	r1, [r1]
   13eac:	str	r0, [r1, #8]
   13eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13eb4:	ldr	r0, [r0]
   13eb8:	movw	r1, #9
   13ebc:	strh	r1, [r0, #56]	; 0x38
   13ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ec4:	ldr	r0, [r0]
   13ec8:	movw	r1, #1
   13ecc:	str	r1, [r0, #48]	; 0x30
   13ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ed4:	bl	14634 <__assert_fail@plt+0x30ec>
   13ed8:	tst	r0, #1
   13edc:	bne	13ee4 <__assert_fail@plt+0x299c>
   13ee0:	b	13f58 <__assert_fail@plt+0x2a10>
   13ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ee8:	ldr	r0, [r0, #48]	; 0x30
   13eec:	and	r0, r0, #4
   13ef0:	cmp	r0, #0
   13ef4:	bne	13f3c <__assert_fail@plt+0x29f4>
   13ef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13efc:	ldr	r0, [r0, #48]	; 0x30
   13f00:	and	r0, r0, #512	; 0x200
   13f04:	cmp	r0, #0
   13f08:	bne	13f3c <__assert_fail@plt+0x29f4>
   13f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f10:	movw	r1, #23259	; 0x5adb
   13f14:	movt	r1, #2
   13f18:	bl	14710 <__assert_fail@plt+0x31c8>
   13f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f20:	str	r0, [r1, #28]
   13f24:	cmp	r0, #0
   13f28:	bge	13f3c <__assert_fail@plt+0x29f4>
   13f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f30:	ldr	r1, [r0, #48]	; 0x30
   13f34:	orr	r1, r1, #4
   13f38:	str	r1, [r0, #48]	; 0x30
   13f3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f40:	add	r0, r0, #60	; 0x3c
   13f44:	mvn	r1, #0
   13f48:	bl	190e4 <__assert_fail@plt+0x7b9c>
   13f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f50:	str	r0, [fp, #-4]
   13f54:	b	13f84 <__assert_fail@plt+0x2a3c>
   13f58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f5c:	bl	147ac <__assert_fail@plt+0x3264>
   13f60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f64:	bl	1398c <__assert_fail@plt+0x2444>
   13f68:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f6c:	ldr	r0, [r0, #24]
   13f70:	bl	1398c <__assert_fail@plt+0x2444>
   13f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f78:	bl	1398c <__assert_fail@plt+0x2444>
   13f7c:	movw	r0, #0
   13f80:	str	r0, [fp, #-4]
   13f84:	ldr	r0, [fp, #-4]
   13f88:	mov	sp, fp
   13f8c:	pop	{fp, pc}
   13f90:			; <UNDEFINED> instruction: 0xfffff000
   13f94:	andeq	r0, r8, r0
   13f98:	push	{fp, lr}
   13f9c:	mov	fp, sp
   13fa0:	sub	sp, sp, #16
   13fa4:	str	r0, [fp, #-4]
   13fa8:	movw	r0, #0
   13fac:	str	r0, [sp, #4]
   13fb0:	ldr	r0, [fp, #-4]
   13fb4:	ldr	r0, [r0]
   13fb8:	movw	r1, #0
   13fbc:	cmp	r0, r1
   13fc0:	beq	13ffc <__assert_fail@plt+0x2ab4>
   13fc4:	ldr	r0, [fp, #-4]
   13fc8:	ldr	r0, [r0]
   13fcc:	bl	113c8 <strlen@plt>
   13fd0:	str	r0, [sp, #8]
   13fd4:	ldr	lr, [sp, #4]
   13fd8:	cmp	r0, lr
   13fdc:	bls	13fe8 <__assert_fail@plt+0x2aa0>
   13fe0:	ldr	r0, [sp, #8]
   13fe4:	str	r0, [sp, #4]
   13fe8:	b	13fec <__assert_fail@plt+0x2aa4>
   13fec:	ldr	r0, [fp, #-4]
   13ff0:	add	r0, r0, #4
   13ff4:	str	r0, [fp, #-4]
   13ff8:	b	13fb0 <__assert_fail@plt+0x2a68>
   13ffc:	ldr	r0, [sp, #4]
   14000:	add	r0, r0, #1
   14004:	mov	sp, fp
   14008:	pop	{fp, pc}
   1400c:	push	{fp, lr}
   14010:	mov	fp, sp
   14014:	sub	sp, sp, #24
   14018:	str	r0, [fp, #-8]
   1401c:	str	r1, [sp, #12]
   14020:	ldr	r0, [fp, #-8]
   14024:	ldr	r0, [r0, #36]	; 0x24
   14028:	ldr	r1, [sp, #12]
   1402c:	add	r0, r0, r1
   14030:	add	r0, r0, #256	; 0x100
   14034:	str	r0, [sp, #4]
   14038:	ldr	r0, [sp, #4]
   1403c:	ldr	r1, [fp, #-8]
   14040:	ldr	r1, [r1, #36]	; 0x24
   14044:	cmp	r0, r1
   14048:	bcs	14080 <__assert_fail@plt+0x2b38>
   1404c:	ldr	r0, [fp, #-8]
   14050:	ldr	r0, [r0, #24]
   14054:	bl	1398c <__assert_fail@plt+0x2444>
   14058:	ldr	r0, [fp, #-8]
   1405c:	movw	lr, #0
   14060:	str	lr, [r0, #24]
   14064:	bl	11404 <__errno_location@plt>
   14068:	movw	lr, #36	; 0x24
   1406c:	str	lr, [r0]
   14070:	movw	r0, #0
   14074:	and	r0, r0, #1
   14078:	strb	r0, [fp, #-1]
   1407c:	b	140f4 <__assert_fail@plt+0x2bac>
   14080:	ldr	r0, [sp, #4]
   14084:	ldr	r1, [fp, #-8]
   14088:	str	r0, [r1, #36]	; 0x24
   1408c:	ldr	r0, [fp, #-8]
   14090:	ldr	r0, [r0, #24]
   14094:	ldr	r1, [fp, #-8]
   14098:	ldr	r1, [r1, #36]	; 0x24
   1409c:	bl	21a18 <__assert_fail@plt+0x104d0>
   140a0:	str	r0, [sp, #8]
   140a4:	ldr	r0, [sp, #8]
   140a8:	movw	r1, #0
   140ac:	cmp	r0, r1
   140b0:	bne	140dc <__assert_fail@plt+0x2b94>
   140b4:	ldr	r0, [fp, #-8]
   140b8:	ldr	r0, [r0, #24]
   140bc:	bl	1398c <__assert_fail@plt+0x2444>
   140c0:	ldr	r0, [fp, #-8]
   140c4:	movw	lr, #0
   140c8:	str	lr, [r0, #24]
   140cc:	movw	r0, #0
   140d0:	and	r0, r0, #1
   140d4:	strb	r0, [fp, #-1]
   140d8:	b	140f4 <__assert_fail@plt+0x2bac>
   140dc:	ldr	r0, [sp, #8]
   140e0:	ldr	r1, [fp, #-8]
   140e4:	str	r0, [r1, #24]
   140e8:	movw	r0, #1
   140ec:	and	r0, r0, #1
   140f0:	strb	r0, [fp, #-1]
   140f4:	ldrb	r0, [fp, #-1]
   140f8:	and	r0, r0, #1
   140fc:	mov	sp, fp
   14100:	pop	{fp, pc}
   14104:	push	{fp, lr}
   14108:	mov	fp, sp
   1410c:	sub	sp, sp, #24
   14110:	str	r0, [fp, #-8]
   14114:	str	r1, [sp, #12]
   14118:	str	r2, [sp, #8]
   1411c:	ldr	r0, [sp, #8]
   14120:	add	r0, r0, #1
   14124:	add	r0, r0, #175	; 0xaf
   14128:	mvn	r1, #7
   1412c:	and	r0, r0, r1
   14130:	str	r0, [sp]
   14134:	ldr	r0, [sp]
   14138:	bl	219a8 <__assert_fail@plt+0x10460>
   1413c:	str	r0, [sp, #4]
   14140:	movw	r1, #0
   14144:	cmp	r0, r1
   14148:	bne	14158 <__assert_fail@plt+0x2c10>
   1414c:	movw	r0, #0
   14150:	str	r0, [fp, #-4]
   14154:	b	141f0 <__assert_fail@plt+0x2ca8>
   14158:	ldr	r0, [sp, #4]
   1415c:	add	r0, r0, #168	; 0xa8
   14160:	ldr	r1, [sp, #12]
   14164:	ldr	r2, [sp, #8]
   14168:	bl	1129c <memcpy@plt>
   1416c:	ldr	r0, [sp, #4]
   14170:	add	r0, r0, #168	; 0xa8
   14174:	ldr	r1, [sp, #8]
   14178:	add	r0, r0, r1
   1417c:	movw	r1, #0
   14180:	strb	r1, [r0]
   14184:	ldr	r0, [sp, #8]
   14188:	ldr	r1, [sp, #4]
   1418c:	str	r0, [r1, #52]	; 0x34
   14190:	ldr	r0, [fp, #-8]
   14194:	ldr	r1, [sp, #4]
   14198:	str	r0, [r1, #44]	; 0x2c
   1419c:	ldr	r0, [fp, #-8]
   141a0:	ldr	r0, [r0, #24]
   141a4:	ldr	r1, [sp, #4]
   141a8:	str	r0, [r1, #28]
   141ac:	ldr	r0, [sp, #4]
   141b0:	movw	r1, #0
   141b4:	str	r1, [r0, #32]
   141b8:	ldr	r0, [sp, #4]
   141bc:	str	r1, [r0, #12]
   141c0:	ldr	r0, [sp, #4]
   141c4:	movw	r2, #0
   141c8:	strh	r2, [r0, #58]	; 0x3a
   141cc:	ldr	r0, [sp, #4]
   141d0:	movw	r2, #3
   141d4:	strh	r2, [r0, #60]	; 0x3c
   141d8:	ldr	r0, [sp, #4]
   141dc:	str	r1, [r0, #16]
   141e0:	ldr	r0, [sp, #4]
   141e4:	str	r1, [r0, #20]
   141e8:	ldr	r0, [sp, #4]
   141ec:	str	r0, [fp, #-4]
   141f0:	ldr	r0, [fp, #-4]
   141f4:	mov	sp, fp
   141f8:	pop	{fp, pc}
   141fc:	push	{fp, lr}
   14200:	mov	fp, sp
   14204:	sub	sp, sp, #8
   14208:	str	r0, [sp, #4]
   1420c:	and	r0, r1, #1
   14210:	strb	r0, [sp, #3]
   14214:	ldr	r0, [sp, #4]
   14218:	ldrh	r0, [r0, #56]	; 0x38
   1421c:	cmp	r0, #11
   14220:	beq	14228 <__assert_fail@plt+0x2ce0>
   14224:	bl	11500 <abort@plt>
   14228:	b	1422c <__assert_fail@plt+0x2ce4>
   1422c:	ldrb	r0, [sp, #3]
   14230:	mov	r1, #1
   14234:	tst	r0, #1
   14238:	movwne	r1, #2
   1423c:	ldr	r0, [sp, #4]
   14240:	mov	r2, #0
   14244:	str	r2, [r0, #116]	; 0x74
   14248:	str	r1, [r0, #112]	; 0x70
   1424c:	mov	sp, fp
   14250:	pop	{fp, pc}
   14254:	push	{fp, lr}
   14258:	mov	fp, sp
   1425c:	sub	sp, sp, #24
   14260:	str	r0, [fp, #-8]
   14264:	str	r1, [sp, #12]
   14268:	and	r0, r2, #1
   1426c:	strb	r0, [sp, #11]
   14270:	ldr	r0, [sp, #12]
   14274:	add	r0, r0, #64	; 0x40
   14278:	str	r0, [sp, #4]
   1427c:	ldr	r0, [sp, #12]
   14280:	ldr	r0, [r0, #48]	; 0x30
   14284:	cmp	r0, #0
   14288:	bne	142a8 <__assert_fail@plt+0x2d60>
   1428c:	ldr	r0, [fp, #-8]
   14290:	ldr	r0, [r0, #48]	; 0x30
   14294:	and	r0, r0, #1
   14298:	cmp	r0, #0
   1429c:	beq	142a8 <__assert_fail@plt+0x2d60>
   142a0:	movw	r0, #1
   142a4:	strb	r0, [sp, #11]
   142a8:	ldr	r0, [fp, #-8]
   142ac:	ldr	r0, [r0, #48]	; 0x30
   142b0:	and	r0, r0, #2
   142b4:	cmp	r0, #0
   142b8:	bne	142c8 <__assert_fail@plt+0x2d80>
   142bc:	ldrb	r0, [sp, #11]
   142c0:	tst	r0, #1
   142c4:	beq	14338 <__assert_fail@plt+0x2df0>
   142c8:	ldr	r0, [sp, #12]
   142cc:	ldr	r0, [r0, #24]
   142d0:	ldr	r1, [sp, #4]
   142d4:	bl	249b4 <__assert_fail@plt+0x1346c>
   142d8:	cmp	r0, #0
   142dc:	beq	14334 <__assert_fail@plt+0x2dec>
   142e0:	bl	11404 <__errno_location@plt>
   142e4:	ldr	r0, [r0]
   142e8:	cmp	r0, #2
   142ec:	bne	14320 <__assert_fail@plt+0x2dd8>
   142f0:	ldr	r0, [sp, #12]
   142f4:	ldr	r0, [r0, #24]
   142f8:	ldr	r1, [sp, #4]
   142fc:	bl	249d4 <__assert_fail@plt+0x1348c>
   14300:	cmp	r0, #0
   14304:	bne	14320 <__assert_fail@plt+0x2dd8>
   14308:	bl	11404 <__errno_location@plt>
   1430c:	movw	lr, #0
   14310:	str	lr, [r0]
   14314:	movw	r0, #13
   14318:	strh	r0, [fp, #-2]
   1431c:	b	14460 <__assert_fail@plt+0x2f18>
   14320:	bl	11404 <__errno_location@plt>
   14324:	ldr	r0, [r0]
   14328:	ldr	lr, [sp, #12]
   1432c:	str	r0, [lr, #32]
   14330:	b	1436c <__assert_fail@plt+0x2e24>
   14334:	b	14390 <__assert_fail@plt+0x2e48>
   14338:	ldr	r0, [fp, #-8]
   1433c:	ldr	r0, [r0, #32]
   14340:	ldr	r1, [sp, #12]
   14344:	ldr	r1, [r1, #24]
   14348:	ldr	r2, [sp, #4]
   1434c:	movw	r3, #256	; 0x100
   14350:	bl	249e4 <__assert_fail@plt+0x1349c>
   14354:	cmp	r0, #0
   14358:	beq	1438c <__assert_fail@plt+0x2e44>
   1435c:	bl	11404 <__errno_location@plt>
   14360:	ldr	r0, [r0]
   14364:	ldr	lr, [sp, #12]
   14368:	str	r0, [lr, #32]
   1436c:	ldr	r0, [sp, #4]
   14370:	movw	r1, #0
   14374:	and	r1, r1, #255	; 0xff
   14378:	movw	r2, #104	; 0x68
   1437c:	bl	1141c <memset@plt>
   14380:	movw	r0, #10
   14384:	strh	r0, [fp, #-2]
   14388:	b	14460 <__assert_fail@plt+0x2f18>
   1438c:	b	14390 <__assert_fail@plt+0x2e48>
   14390:	ldr	r0, [sp, #4]
   14394:	ldr	r0, [r0, #16]
   14398:	and	r0, r0, #61440	; 0xf000
   1439c:	cmp	r0, #16384	; 0x4000
   143a0:	bne	14418 <__assert_fail@plt+0x2ed0>
   143a4:	ldr	r0, [sp, #12]
   143a8:	ldrb	r0, [r0, #168]	; 0xa8
   143ac:	cmp	r0, #46	; 0x2e
   143b0:	bne	1440c <__assert_fail@plt+0x2ec4>
   143b4:	ldr	r0, [sp, #12]
   143b8:	ldrsb	r0, [r0, #169]	; 0xa9
   143bc:	cmp	r0, #0
   143c0:	beq	143e4 <__assert_fail@plt+0x2e9c>
   143c4:	ldr	r0, [sp, #12]
   143c8:	ldrb	r0, [r0, #169]	; 0xa9
   143cc:	cmp	r0, #46	; 0x2e
   143d0:	bne	1440c <__assert_fail@plt+0x2ec4>
   143d4:	ldr	r0, [sp, #12]
   143d8:	ldrsb	r0, [r0, #170]	; 0xaa
   143dc:	cmp	r0, #0
   143e0:	bne	1440c <__assert_fail@plt+0x2ec4>
   143e4:	ldr	r0, [sp, #12]
   143e8:	ldr	r0, [r0, #48]	; 0x30
   143ec:	cmp	r0, #0
   143f0:	movw	r0, #0
   143f4:	moveq	r0, #1
   143f8:	tst	r0, #1
   143fc:	movw	r0, #1
   14400:	moveq	r0, #5
   14404:	strh	r0, [fp, #-2]
   14408:	b	14460 <__assert_fail@plt+0x2f18>
   1440c:	movw	r0, #1
   14410:	strh	r0, [fp, #-2]
   14414:	b	14460 <__assert_fail@plt+0x2f18>
   14418:	ldr	r0, [sp, #4]
   1441c:	ldr	r0, [r0, #16]
   14420:	and	r0, r0, #61440	; 0xf000
   14424:	cmp	r0, #40960	; 0xa000
   14428:	bne	14438 <__assert_fail@plt+0x2ef0>
   1442c:	movw	r0, #12
   14430:	strh	r0, [fp, #-2]
   14434:	b	14460 <__assert_fail@plt+0x2f18>
   14438:	ldr	r0, [sp, #4]
   1443c:	ldr	r0, [r0, #16]
   14440:	and	r0, r0, #61440	; 0xf000
   14444:	cmp	r0, #32768	; 0x8000
   14448:	bne	14458 <__assert_fail@plt+0x2f10>
   1444c:	movw	r0, #8
   14450:	strh	r0, [fp, #-2]
   14454:	b	14460 <__assert_fail@plt+0x2f18>
   14458:	movw	r0, #3
   1445c:	strh	r0, [fp, #-2]
   14460:	ldrh	r0, [fp, #-2]
   14464:	mov	sp, fp
   14468:	pop	{fp, pc}
   1446c:	push	{fp, lr}
   14470:	mov	fp, sp
   14474:	sub	sp, sp, #48	; 0x30
   14478:	add	r3, sp, #20
   1447c:	str	r0, [fp, #-8]
   14480:	str	r1, [fp, #-12]
   14484:	str	r2, [fp, #-16]
   14488:	mov	r0, r3
   1448c:	cmp	r3, r0
   14490:	bne	144a4 <__assert_fail@plt+0x2f5c>
   14494:	ldr	r0, [fp, #-8]
   14498:	ldr	r0, [r0, #44]	; 0x2c
   1449c:	str	r0, [sp, #8]
   144a0:	b	144b4 <__assert_fail@plt+0x2f6c>
   144a4:	movw	r0, #29728	; 0x7420
   144a8:	movt	r0, #1
   144ac:	str	r0, [sp, #8]
   144b0:	b	144b4 <__assert_fail@plt+0x2f6c>
   144b4:	ldr	r0, [sp, #8]
   144b8:	str	r0, [sp, #16]
   144bc:	ldr	r0, [fp, #-16]
   144c0:	ldr	r1, [fp, #-8]
   144c4:	ldr	r1, [r1, #40]	; 0x28
   144c8:	cmp	r0, r1
   144cc:	bls	1455c <__assert_fail@plt+0x3014>
   144d0:	ldr	r0, [pc, #344]	; 14630 <__assert_fail@plt+0x30e8>
   144d4:	ldr	r1, [fp, #-16]
   144d8:	add	r1, r1, #40	; 0x28
   144dc:	ldr	r2, [fp, #-8]
   144e0:	str	r1, [r2, #40]	; 0x28
   144e4:	ldr	r1, [fp, #-8]
   144e8:	ldr	r1, [r1, #40]	; 0x28
   144ec:	cmp	r0, r1
   144f0:	bcc	14524 <__assert_fail@plt+0x2fdc>
   144f4:	ldr	r0, [fp, #-8]
   144f8:	ldr	r1, [r0, #8]
   144fc:	ldr	r0, [r0, #40]	; 0x28
   14500:	lsl	r0, r0, #2
   14504:	str	r0, [sp, #4]
   14508:	mov	r0, r1
   1450c:	ldr	r1, [sp, #4]
   14510:	bl	21a18 <__assert_fail@plt+0x104d0>
   14514:	str	r0, [sp, #12]
   14518:	movw	r1, #0
   1451c:	cmp	r0, r1
   14520:	bne	14550 <__assert_fail@plt+0x3008>
   14524:	ldr	r0, [fp, #-8]
   14528:	ldr	r0, [r0, #8]
   1452c:	bl	1398c <__assert_fail@plt+0x2444>
   14530:	ldr	r0, [fp, #-8]
   14534:	movw	lr, #0
   14538:	str	lr, [r0, #8]
   1453c:	ldr	r0, [fp, #-8]
   14540:	str	lr, [r0, #40]	; 0x28
   14544:	ldr	r0, [fp, #-12]
   14548:	str	r0, [fp, #-4]
   1454c:	b	14624 <__assert_fail@plt+0x30dc>
   14550:	ldr	r0, [sp, #12]
   14554:	ldr	r1, [fp, #-8]
   14558:	str	r0, [r1, #8]
   1455c:	ldr	r0, [fp, #-8]
   14560:	ldr	r0, [r0, #8]
   14564:	str	r0, [fp, #-20]	; 0xffffffec
   14568:	ldr	r0, [fp, #-12]
   1456c:	str	r0, [sp, #24]
   14570:	ldr	r0, [sp, #24]
   14574:	movw	r1, #0
   14578:	cmp	r0, r1
   1457c:	beq	145a4 <__assert_fail@plt+0x305c>
   14580:	ldr	r0, [sp, #24]
   14584:	ldr	r1, [fp, #-20]	; 0xffffffec
   14588:	add	r2, r1, #4
   1458c:	str	r2, [fp, #-20]	; 0xffffffec
   14590:	str	r0, [r1]
   14594:	ldr	r0, [sp, #24]
   14598:	ldr	r0, [r0, #8]
   1459c:	str	r0, [sp, #24]
   145a0:	b	14570 <__assert_fail@plt+0x3028>
   145a4:	ldr	r0, [fp, #-8]
   145a8:	ldr	r0, [r0, #8]
   145ac:	ldr	r1, [fp, #-16]
   145b0:	ldr	r3, [sp, #16]
   145b4:	movw	r2, #4
   145b8:	bl	114b8 <qsort@plt>
   145bc:	ldr	r0, [fp, #-8]
   145c0:	ldr	r0, [r0, #8]
   145c4:	str	r0, [fp, #-20]	; 0xffffffec
   145c8:	ldr	r0, [r0]
   145cc:	str	r0, [fp, #-12]
   145d0:	ldr	r0, [fp, #-16]
   145d4:	mvn	r1, #0
   145d8:	add	r0, r0, r1
   145dc:	str	r0, [fp, #-16]
   145e0:	cmp	r0, #0
   145e4:	beq	1460c <__assert_fail@plt+0x30c4>
   145e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   145ec:	ldr	r0, [r0, #4]
   145f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   145f4:	ldr	r1, [r1]
   145f8:	str	r0, [r1, #8]
   145fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14600:	add	r0, r0, #4
   14604:	str	r0, [fp, #-20]	; 0xffffffec
   14608:	b	145d0 <__assert_fail@plt+0x3088>
   1460c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14610:	ldr	r0, [r0]
   14614:	movw	r1, #0
   14618:	str	r1, [r0, #8]
   1461c:	ldr	r0, [fp, #-12]
   14620:	str	r0, [fp, #-4]
   14624:	ldr	r0, [fp, #-4]
   14628:	mov	sp, fp
   1462c:	pop	{fp, pc}
   14630:	svccc	0x00ffffff
   14634:	push	{fp, lr}
   14638:	mov	fp, sp
   1463c:	sub	sp, sp, #16
   14640:	str	r0, [sp, #8]
   14644:	ldr	r0, [sp, #8]
   14648:	ldr	r0, [r0, #48]	; 0x30
   1464c:	movw	r1, #258	; 0x102
   14650:	and	r0, r0, r1
   14654:	cmp	r0, #0
   14658:	beq	146b4 <__assert_fail@plt+0x316c>
   1465c:	movw	r0, #31
   14660:	movw	r1, #0
   14664:	movw	r2, #27888	; 0x6cf0
   14668:	movt	r2, #1
   1466c:	movw	r3, #27972	; 0x6d44
   14670:	movt	r3, #1
   14674:	movw	ip, #14732	; 0x398c
   14678:	movt	ip, #1
   1467c:	str	ip, [sp]
   14680:	bl	17c84 <__assert_fail@plt+0x673c>
   14684:	ldr	r1, [sp, #8]
   14688:	str	r0, [r1, #56]	; 0x38
   1468c:	ldr	r0, [sp, #8]
   14690:	ldr	r0, [r0, #56]	; 0x38
   14694:	movw	r1, #0
   14698:	cmp	r0, r1
   1469c:	bne	146b0 <__assert_fail@plt+0x3168>
   146a0:	movw	r0, #0
   146a4:	and	r0, r0, #1
   146a8:	strb	r0, [fp, #-1]
   146ac:	b	14700 <__assert_fail@plt+0x31b8>
   146b0:	b	146f4 <__assert_fail@plt+0x31ac>
   146b4:	movw	r0, #32
   146b8:	bl	219a8 <__assert_fail@plt+0x10460>
   146bc:	ldr	lr, [sp, #8]
   146c0:	str	r0, [lr, #56]	; 0x38
   146c4:	ldr	r0, [sp, #8]
   146c8:	ldr	r0, [r0, #56]	; 0x38
   146cc:	movw	lr, #0
   146d0:	cmp	r0, lr
   146d4:	bne	146e8 <__assert_fail@plt+0x31a0>
   146d8:	movw	r0, #0
   146dc:	and	r0, r0, #1
   146e0:	strb	r0, [fp, #-1]
   146e4:	b	14700 <__assert_fail@plt+0x31b8>
   146e8:	ldr	r0, [sp, #8]
   146ec:	ldr	r0, [r0, #56]	; 0x38
   146f0:	bl	21f24 <__assert_fail@plt+0x109dc>
   146f4:	movw	r0, #1
   146f8:	and	r0, r0, #1
   146fc:	strb	r0, [fp, #-1]
   14700:	ldrb	r0, [fp, #-1]
   14704:	and	r0, r0, #1
   14708:	mov	sp, fp
   1470c:	pop	{fp, pc}
   14710:	push	{fp, lr}
   14714:	mov	fp, sp
   14718:	sub	sp, sp, #24
   1471c:	ldr	r2, [pc, #132]	; 147a8 <__assert_fail@plt+0x3260>
   14720:	str	r0, [fp, #-4]
   14724:	str	r1, [fp, #-8]
   14728:	ldr	r0, [fp, #-4]
   1472c:	ldr	r0, [r0, #48]	; 0x30
   14730:	and	r0, r0, #16
   14734:	cmp	r0, #0
   14738:	movw	r0, #0
   1473c:	movne	r0, #1
   14740:	tst	r0, #1
   14744:	movw	r0, #32768	; 0x8000
   14748:	moveq	r0, #0
   1474c:	orr	r0, r0, r2
   14750:	str	r0, [sp, #12]
   14754:	ldr	r0, [fp, #-4]
   14758:	ldr	r0, [r0, #48]	; 0x30
   1475c:	and	r0, r0, #512	; 0x200
   14760:	cmp	r0, #0
   14764:	beq	14784 <__assert_fail@plt+0x323c>
   14768:	ldr	r0, [fp, #-4]
   1476c:	ldr	r0, [r0, #32]
   14770:	ldr	r1, [fp, #-8]
   14774:	ldr	r2, [sp, #12]
   14778:	bl	19400 <__assert_fail@plt+0x7eb8>
   1477c:	str	r0, [sp, #4]
   14780:	b	14794 <__assert_fail@plt+0x324c>
   14784:	ldr	r0, [fp, #-8]
   14788:	ldr	r1, [sp, #12]
   1478c:	bl	225e0 <__assert_fail@plt+0x11098>
   14790:	str	r0, [sp, #4]
   14794:	ldr	r0, [sp, #4]
   14798:	str	r0, [sp, #8]
   1479c:	ldr	r0, [sp, #8]
   147a0:	mov	sp, fp
   147a4:	pop	{fp, pc}
   147a8:	andeq	r4, r8, r0, lsl #18
   147ac:	push	{fp, lr}
   147b0:	mov	fp, sp
   147b4:	sub	sp, sp, #16
   147b8:	str	r0, [fp, #-4]
   147bc:	ldr	r0, [fp, #-4]
   147c0:	str	r0, [sp, #8]
   147c4:	movw	r1, #0
   147c8:	cmp	r0, r1
   147cc:	beq	1480c <__assert_fail@plt+0x32c4>
   147d0:	ldr	r0, [fp, #-4]
   147d4:	ldr	r0, [r0, #8]
   147d8:	str	r0, [fp, #-4]
   147dc:	ldr	r0, [sp, #8]
   147e0:	ldr	r0, [r0, #12]
   147e4:	movw	r1, #0
   147e8:	cmp	r0, r1
   147ec:	beq	14800 <__assert_fail@plt+0x32b8>
   147f0:	ldr	r0, [sp, #8]
   147f4:	ldr	r0, [r0, #12]
   147f8:	bl	11524 <closedir@plt>
   147fc:	str	r0, [sp, #4]
   14800:	ldr	r0, [sp, #8]
   14804:	bl	1398c <__assert_fail@plt+0x2444>
   14808:	b	147bc <__assert_fail@plt+0x3274>
   1480c:	mov	sp, fp
   14810:	pop	{fp, pc}
   14814:	push	{fp, lr}
   14818:	mov	fp, sp
   1481c:	sub	sp, sp, #32
   14820:	str	r0, [fp, #-8]
   14824:	movw	r0, #0
   14828:	str	r0, [sp, #12]
   1482c:	ldr	r1, [fp, #-8]
   14830:	ldr	r1, [r1]
   14834:	cmp	r1, r0
   14838:	beq	148ac <__assert_fail@plt+0x3364>
   1483c:	ldr	r0, [fp, #-8]
   14840:	ldr	r0, [r0]
   14844:	str	r0, [sp, #16]
   14848:	ldr	r0, [sp, #16]
   1484c:	ldr	r0, [r0, #48]	; 0x30
   14850:	cmp	r0, #0
   14854:	blt	148a4 <__assert_fail@plt+0x335c>
   14858:	ldr	r0, [sp, #16]
   1485c:	str	r0, [fp, #-12]
   14860:	ldr	r0, [sp, #16]
   14864:	ldr	r0, [r0, #8]
   14868:	movw	r1, #0
   1486c:	cmp	r0, r1
   14870:	beq	14884 <__assert_fail@plt+0x333c>
   14874:	ldr	r0, [sp, #16]
   14878:	ldr	r0, [r0, #8]
   1487c:	str	r0, [sp, #8]
   14880:	b	14890 <__assert_fail@plt+0x3348>
   14884:	ldr	r0, [sp, #16]
   14888:	ldr	r0, [r0, #4]
   1488c:	str	r0, [sp, #8]
   14890:	ldr	r0, [sp, #8]
   14894:	str	r0, [sp, #16]
   14898:	ldr	r0, [fp, #-12]
   1489c:	bl	1398c <__assert_fail@plt+0x2444>
   148a0:	b	14848 <__assert_fail@plt+0x3300>
   148a4:	ldr	r0, [sp, #16]
   148a8:	bl	1398c <__assert_fail@plt+0x2444>
   148ac:	ldr	r0, [fp, #-8]
   148b0:	ldr	r0, [r0, #4]
   148b4:	movw	r1, #0
   148b8:	cmp	r0, r1
   148bc:	beq	148cc <__assert_fail@plt+0x3384>
   148c0:	ldr	r0, [fp, #-8]
   148c4:	ldr	r0, [r0, #4]
   148c8:	bl	147ac <__assert_fail@plt+0x3264>
   148cc:	ldr	r0, [fp, #-8]
   148d0:	ldr	r0, [r0, #8]
   148d4:	bl	1398c <__assert_fail@plt+0x2444>
   148d8:	ldr	r0, [fp, #-8]
   148dc:	ldr	r0, [r0, #24]
   148e0:	bl	1398c <__assert_fail@plt+0x2444>
   148e4:	ldr	r0, [fp, #-8]
   148e8:	ldr	r0, [r0, #48]	; 0x30
   148ec:	and	r0, r0, #512	; 0x200
   148f0:	cmp	r0, #0
   148f4:	beq	14934 <__assert_fail@plt+0x33ec>
   148f8:	ldr	r0, [fp, #-8]
   148fc:	ldr	r0, [r0, #32]
   14900:	movw	r1, #0
   14904:	cmp	r1, r0
   14908:	bgt	14930 <__assert_fail@plt+0x33e8>
   1490c:	ldr	r0, [fp, #-8]
   14910:	ldr	r0, [r0, #32]
   14914:	bl	1150c <close@plt>
   14918:	cmp	r0, #0
   1491c:	beq	1492c <__assert_fail@plt+0x33e4>
   14920:	bl	11404 <__errno_location@plt>
   14924:	ldr	r0, [r0]
   14928:	str	r0, [sp, #12]
   1492c:	b	14930 <__assert_fail@plt+0x33e8>
   14930:	b	149a0 <__assert_fail@plt+0x3458>
   14934:	ldr	r0, [fp, #-8]
   14938:	ldr	r0, [r0, #48]	; 0x30
   1493c:	and	r0, r0, #4
   14940:	cmp	r0, #0
   14944:	bne	1499c <__assert_fail@plt+0x3454>
   14948:	ldr	r0, [fp, #-8]
   1494c:	ldr	r0, [r0, #28]
   14950:	bl	114ac <fchdir@plt>
   14954:	cmp	r0, #0
   14958:	beq	14968 <__assert_fail@plt+0x3420>
   1495c:	bl	11404 <__errno_location@plt>
   14960:	ldr	r0, [r0]
   14964:	str	r0, [sp, #12]
   14968:	ldr	r0, [fp, #-8]
   1496c:	ldr	r0, [r0, #28]
   14970:	bl	1150c <close@plt>
   14974:	cmp	r0, #0
   14978:	beq	14998 <__assert_fail@plt+0x3450>
   1497c:	ldr	r0, [sp, #12]
   14980:	cmp	r0, #0
   14984:	bne	14994 <__assert_fail@plt+0x344c>
   14988:	bl	11404 <__errno_location@plt>
   1498c:	ldr	r0, [r0]
   14990:	str	r0, [sp, #12]
   14994:	b	14998 <__assert_fail@plt+0x3450>
   14998:	b	1499c <__assert_fail@plt+0x3454>
   1499c:	b	149a0 <__assert_fail@plt+0x3458>
   149a0:	ldr	r0, [fp, #-8]
   149a4:	add	r0, r0, #60	; 0x3c
   149a8:	bl	14a1c <__assert_fail@plt+0x34d4>
   149ac:	ldr	r0, [fp, #-8]
   149b0:	ldr	r0, [r0, #52]	; 0x34
   149b4:	movw	lr, #0
   149b8:	cmp	r0, lr
   149bc:	beq	149cc <__assert_fail@plt+0x3484>
   149c0:	ldr	r0, [fp, #-8]
   149c4:	ldr	r0, [r0, #52]	; 0x34
   149c8:	bl	181d8 <__assert_fail@plt+0x6c90>
   149cc:	ldr	r0, [fp, #-8]
   149d0:	bl	14a78 <__assert_fail@plt+0x3530>
   149d4:	ldr	r0, [fp, #-8]
   149d8:	bl	1398c <__assert_fail@plt+0x2444>
   149dc:	ldr	r0, [sp, #12]
   149e0:	cmp	r0, #0
   149e4:	beq	14a08 <__assert_fail@plt+0x34c0>
   149e8:	ldr	r0, [sp, #12]
   149ec:	str	r0, [sp, #4]
   149f0:	bl	11404 <__errno_location@plt>
   149f4:	ldr	lr, [sp, #4]
   149f8:	str	lr, [r0]
   149fc:	mvn	r0, #0
   14a00:	str	r0, [fp, #-4]
   14a04:	b	14a10 <__assert_fail@plt+0x34c8>
   14a08:	movw	r0, #0
   14a0c:	str	r0, [fp, #-4]
   14a10:	ldr	r0, [fp, #-4]
   14a14:	mov	sp, fp
   14a18:	pop	{fp, pc}
   14a1c:	push	{fp, lr}
   14a20:	mov	fp, sp
   14a24:	sub	sp, sp, #16
   14a28:	str	r0, [fp, #-4]
   14a2c:	ldr	r0, [fp, #-4]
   14a30:	bl	19158 <__assert_fail@plt+0x7c10>
   14a34:	mvn	lr, #0
   14a38:	eor	r0, r0, lr
   14a3c:	tst	r0, #1
   14a40:	beq	14a70 <__assert_fail@plt+0x3528>
   14a44:	ldr	r0, [fp, #-4]
   14a48:	bl	19228 <__assert_fail@plt+0x7ce0>
   14a4c:	str	r0, [sp, #8]
   14a50:	ldr	r0, [sp, #8]
   14a54:	movw	lr, #0
   14a58:	cmp	lr, r0
   14a5c:	bgt	14a6c <__assert_fail@plt+0x3524>
   14a60:	ldr	r0, [sp, #8]
   14a64:	bl	1150c <close@plt>
   14a68:	str	r0, [sp, #4]
   14a6c:	b	14a2c <__assert_fail@plt+0x34e4>
   14a70:	mov	sp, fp
   14a74:	pop	{fp, pc}
   14a78:	push	{fp, lr}
   14a7c:	mov	fp, sp
   14a80:	sub	sp, sp, #8
   14a84:	str	r0, [sp, #4]
   14a88:	ldr	r0, [sp, #4]
   14a8c:	ldr	r0, [r0, #48]	; 0x30
   14a90:	movw	r1, #258	; 0x102
   14a94:	and	r0, r0, r1
   14a98:	cmp	r0, #0
   14a9c:	beq	14ac4 <__assert_fail@plt+0x357c>
   14aa0:	ldr	r0, [sp, #4]
   14aa4:	ldr	r0, [r0, #56]	; 0x38
   14aa8:	movw	r1, #0
   14aac:	cmp	r0, r1
   14ab0:	beq	14ac0 <__assert_fail@plt+0x3578>
   14ab4:	ldr	r0, [sp, #4]
   14ab8:	ldr	r0, [r0, #56]	; 0x38
   14abc:	bl	181d8 <__assert_fail@plt+0x6c90>
   14ac0:	b	14ad0 <__assert_fail@plt+0x3588>
   14ac4:	ldr	r0, [sp, #4]
   14ac8:	ldr	r0, [r0, #56]	; 0x38
   14acc:	bl	1398c <__assert_fail@plt+0x2444>
   14ad0:	mov	sp, fp
   14ad4:	pop	{fp, pc}
   14ad8:	push	{fp, lr}
   14adc:	mov	fp, sp
   14ae0:	sub	sp, sp, #48	; 0x30
   14ae4:	str	r0, [fp, #-8]
   14ae8:	ldr	r0, [fp, #-8]
   14aec:	ldr	r0, [r0]
   14af0:	movw	r1, #0
   14af4:	cmp	r0, r1
   14af8:	beq	14b10 <__assert_fail@plt+0x35c8>
   14afc:	ldr	r0, [fp, #-8]
   14b00:	ldr	r0, [r0, #48]	; 0x30
   14b04:	and	r0, r0, #8192	; 0x2000
   14b08:	cmp	r0, #0
   14b0c:	beq	14b1c <__assert_fail@plt+0x35d4>
   14b10:	movw	r0, #0
   14b14:	str	r0, [fp, #-4]
   14b18:	b	154b8 <__assert_fail@plt+0x3f70>
   14b1c:	ldr	r0, [fp, #-8]
   14b20:	ldr	r0, [r0]
   14b24:	str	r0, [fp, #-12]
   14b28:	ldr	r0, [fp, #-12]
   14b2c:	ldrh	r0, [r0, #60]	; 0x3c
   14b30:	strh	r0, [fp, #-18]	; 0xffffffee
   14b34:	ldr	r0, [fp, #-12]
   14b38:	movw	r1, #3
   14b3c:	strh	r1, [r0, #60]	; 0x3c
   14b40:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14b44:	cmp	r0, #1
   14b48:	bne	14b74 <__assert_fail@plt+0x362c>
   14b4c:	ldr	r0, [fp, #-8]
   14b50:	ldr	r1, [fp, #-12]
   14b54:	movw	r2, #0
   14b58:	and	r2, r2, #1
   14b5c:	bl	14254 <__assert_fail@plt+0x2d0c>
   14b60:	ldr	r1, [fp, #-12]
   14b64:	strh	r0, [r1, #56]	; 0x38
   14b68:	ldr	r0, [fp, #-12]
   14b6c:	str	r0, [fp, #-4]
   14b70:	b	154b8 <__assert_fail@plt+0x3f70>
   14b74:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14b78:	cmp	r0, #2
   14b7c:	bne	14c38 <__assert_fail@plt+0x36f0>
   14b80:	ldr	r0, [fp, #-12]
   14b84:	ldrh	r0, [r0, #56]	; 0x38
   14b88:	cmp	r0, #12
   14b8c:	beq	14ba0 <__assert_fail@plt+0x3658>
   14b90:	ldr	r0, [fp, #-12]
   14b94:	ldrh	r0, [r0, #56]	; 0x38
   14b98:	cmp	r0, #13
   14b9c:	bne	14c38 <__assert_fail@plt+0x36f0>
   14ba0:	ldr	r0, [fp, #-8]
   14ba4:	ldr	r1, [fp, #-12]
   14ba8:	movw	r2, #1
   14bac:	and	r2, r2, #1
   14bb0:	bl	14254 <__assert_fail@plt+0x2d0c>
   14bb4:	ldr	r1, [fp, #-12]
   14bb8:	strh	r0, [r1, #56]	; 0x38
   14bbc:	ldr	r0, [fp, #-12]
   14bc0:	ldrh	r0, [r0, #56]	; 0x38
   14bc4:	cmp	r0, #1
   14bc8:	bne	14c34 <__assert_fail@plt+0x36ec>
   14bcc:	ldr	r0, [fp, #-8]
   14bd0:	ldr	r0, [r0, #48]	; 0x30
   14bd4:	and	r0, r0, #4
   14bd8:	cmp	r0, #0
   14bdc:	bne	14c34 <__assert_fail@plt+0x36ec>
   14be0:	ldr	r0, [fp, #-8]
   14be4:	movw	r1, #23259	; 0x5adb
   14be8:	movt	r1, #2
   14bec:	bl	14710 <__assert_fail@plt+0x31c8>
   14bf0:	ldr	r1, [fp, #-12]
   14bf4:	str	r0, [r1, #36]	; 0x24
   14bf8:	cmp	r0, #0
   14bfc:	bge	14c20 <__assert_fail@plt+0x36d8>
   14c00:	bl	11404 <__errno_location@plt>
   14c04:	ldr	r0, [r0]
   14c08:	ldr	lr, [fp, #-12]
   14c0c:	str	r0, [lr, #32]
   14c10:	ldr	r0, [fp, #-12]
   14c14:	movw	lr, #7
   14c18:	strh	lr, [r0, #56]	; 0x38
   14c1c:	b	14c30 <__assert_fail@plt+0x36e8>
   14c20:	ldr	r0, [fp, #-12]
   14c24:	ldrh	r1, [r0, #58]	; 0x3a
   14c28:	orr	r1, r1, #2
   14c2c:	strh	r1, [r0, #58]	; 0x3a
   14c30:	b	14c34 <__assert_fail@plt+0x36ec>
   14c34:	b	15150 <__assert_fail@plt+0x3c08>
   14c38:	ldr	r0, [fp, #-12]
   14c3c:	ldrh	r0, [r0, #56]	; 0x38
   14c40:	cmp	r0, #1
   14c44:	bne	14ea4 <__assert_fail@plt+0x395c>
   14c48:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14c4c:	cmp	r0, #4
   14c50:	beq	14c98 <__assert_fail@plt+0x3750>
   14c54:	ldr	r0, [fp, #-8]
   14c58:	ldr	r0, [r0, #48]	; 0x30
   14c5c:	and	r0, r0, #64	; 0x40
   14c60:	cmp	r0, #0
   14c64:	beq	14d0c <__assert_fail@plt+0x37c4>
   14c68:	ldr	r0, [fp, #-12]
   14c6c:	ldr	r1, [r0, #64]	; 0x40
   14c70:	ldr	r0, [r0, #68]	; 0x44
   14c74:	ldr	r2, [fp, #-8]
   14c78:	ldr	r3, [r2, #16]
   14c7c:	ldr	r2, [r2, #20]
   14c80:	eor	r0, r0, r2
   14c84:	eor	r1, r1, r3
   14c88:	orr	r0, r1, r0
   14c8c:	cmp	r0, #0
   14c90:	beq	14d0c <__assert_fail@plt+0x37c4>
   14c94:	b	14c98 <__assert_fail@plt+0x3750>
   14c98:	ldr	r0, [fp, #-12]
   14c9c:	ldrh	r0, [r0, #58]	; 0x3a
   14ca0:	and	r0, r0, #2
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cbc <__assert_fail@plt+0x3774>
   14cac:	ldr	r0, [fp, #-12]
   14cb0:	ldr	r0, [r0, #36]	; 0x24
   14cb4:	bl	1150c <close@plt>
   14cb8:	str	r0, [sp, #20]
   14cbc:	ldr	r0, [fp, #-8]
   14cc0:	ldr	r0, [r0, #4]
   14cc4:	movw	r1, #0
   14cc8:	cmp	r0, r1
   14ccc:	beq	14ce8 <__assert_fail@plt+0x37a0>
   14cd0:	ldr	r0, [fp, #-8]
   14cd4:	ldr	r0, [r0, #4]
   14cd8:	bl	147ac <__assert_fail@plt+0x3264>
   14cdc:	ldr	r0, [fp, #-8]
   14ce0:	movw	lr, #0
   14ce4:	str	lr, [r0, #4]
   14ce8:	ldr	r0, [fp, #-12]
   14cec:	movw	r1, #6
   14cf0:	strh	r1, [r0, #56]	; 0x38
   14cf4:	ldr	r0, [fp, #-8]
   14cf8:	ldr	r1, [fp, #-12]
   14cfc:	bl	154c4 <__assert_fail@plt+0x3f7c>
   14d00:	ldr	r0, [fp, #-12]
   14d04:	str	r0, [fp, #-4]
   14d08:	b	154b8 <__assert_fail@plt+0x3f70>
   14d0c:	ldr	r0, [fp, #-8]
   14d10:	ldr	r0, [r0, #4]
   14d14:	movw	r1, #0
   14d18:	cmp	r0, r1
   14d1c:	beq	14d60 <__assert_fail@plt+0x3818>
   14d20:	ldr	r0, [fp, #-8]
   14d24:	ldr	r0, [r0, #48]	; 0x30
   14d28:	and	r0, r0, #4096	; 0x1000
   14d2c:	cmp	r0, #0
   14d30:	beq	14d60 <__assert_fail@plt+0x3818>
   14d34:	ldr	r0, [fp, #-8]
   14d38:	ldr	r1, [r0, #48]	; 0x30
   14d3c:	mvn	r2, #4096	; 0x1000
   14d40:	and	r1, r1, r2
   14d44:	str	r1, [r0, #48]	; 0x30
   14d48:	ldr	r0, [fp, #-8]
   14d4c:	ldr	r0, [r0, #4]
   14d50:	bl	147ac <__assert_fail@plt+0x3264>
   14d54:	ldr	r0, [fp, #-8]
   14d58:	movw	r1, #0
   14d5c:	str	r1, [r0, #4]
   14d60:	ldr	r0, [fp, #-8]
   14d64:	ldr	r0, [r0, #4]
   14d68:	movw	r1, #0
   14d6c:	cmp	r0, r1
   14d70:	beq	14dfc <__assert_fail@plt+0x38b4>
   14d74:	ldr	r0, [fp, #-8]
   14d78:	ldr	r1, [fp, #-12]
   14d7c:	ldr	r2, [fp, #-12]
   14d80:	ldr	r3, [r2, #24]
   14d84:	mvn	r2, #0
   14d88:	bl	15664 <__assert_fail@plt+0x411c>
   14d8c:	cmp	r0, #0
   14d90:	beq	14df8 <__assert_fail@plt+0x38b0>
   14d94:	bl	11404 <__errno_location@plt>
   14d98:	ldr	r0, [r0]
   14d9c:	ldr	lr, [fp, #-12]
   14da0:	str	r0, [lr, #32]
   14da4:	ldr	r0, [fp, #-12]
   14da8:	ldrh	lr, [r0, #58]	; 0x3a
   14dac:	orr	lr, lr, #1
   14db0:	strh	lr, [r0, #58]	; 0x3a
   14db4:	ldr	r0, [fp, #-8]
   14db8:	ldr	r0, [r0, #4]
   14dbc:	str	r0, [fp, #-12]
   14dc0:	ldr	r0, [fp, #-12]
   14dc4:	movw	r1, #0
   14dc8:	cmp	r0, r1
   14dcc:	beq	14df4 <__assert_fail@plt+0x38ac>
   14dd0:	ldr	r0, [fp, #-12]
   14dd4:	ldr	r0, [r0, #4]
   14dd8:	ldr	r0, [r0, #24]
   14ddc:	ldr	r1, [fp, #-12]
   14de0:	str	r0, [r1, #24]
   14de4:	ldr	r0, [fp, #-12]
   14de8:	ldr	r0, [r0, #8]
   14dec:	str	r0, [fp, #-12]
   14df0:	b	14dc0 <__assert_fail@plt+0x3878>
   14df4:	b	14df8 <__assert_fail@plt+0x38b0>
   14df8:	b	14e88 <__assert_fail@plt+0x3940>
   14dfc:	ldr	r0, [fp, #-8]
   14e00:	movw	r1, #3
   14e04:	bl	15928 <__assert_fail@plt+0x43e0>
   14e08:	ldr	r1, [fp, #-8]
   14e0c:	str	r0, [r1, #4]
   14e10:	movw	r1, #0
   14e14:	cmp	r0, r1
   14e18:	bne	14e84 <__assert_fail@plt+0x393c>
   14e1c:	ldr	r0, [fp, #-8]
   14e20:	ldr	r0, [r0, #48]	; 0x30
   14e24:	and	r0, r0, #8192	; 0x2000
   14e28:	cmp	r0, #0
   14e2c:	beq	14e3c <__assert_fail@plt+0x38f4>
   14e30:	movw	r0, #0
   14e34:	str	r0, [fp, #-4]
   14e38:	b	154b8 <__assert_fail@plt+0x3f70>
   14e3c:	ldr	r0, [fp, #-12]
   14e40:	ldr	r0, [r0, #32]
   14e44:	cmp	r0, #0
   14e48:	beq	14e68 <__assert_fail@plt+0x3920>
   14e4c:	ldr	r0, [fp, #-12]
   14e50:	ldrh	r0, [r0, #56]	; 0x38
   14e54:	cmp	r0, #4
   14e58:	beq	14e68 <__assert_fail@plt+0x3920>
   14e5c:	ldr	r0, [fp, #-12]
   14e60:	movw	r1, #7
   14e64:	strh	r1, [r0, #56]	; 0x38
   14e68:	b	14e6c <__assert_fail@plt+0x3924>
   14e6c:	ldr	r0, [fp, #-8]
   14e70:	ldr	r1, [fp, #-12]
   14e74:	bl	154c4 <__assert_fail@plt+0x3f7c>
   14e78:	ldr	r0, [fp, #-12]
   14e7c:	str	r0, [fp, #-4]
   14e80:	b	154b8 <__assert_fail@plt+0x3f70>
   14e84:	b	14e88 <__assert_fail@plt+0x3940>
   14e88:	ldr	r0, [fp, #-8]
   14e8c:	ldr	r0, [r0, #4]
   14e90:	str	r0, [fp, #-12]
   14e94:	ldr	r0, [fp, #-8]
   14e98:	movw	r1, #0
   14e9c:	str	r1, [r0, #4]
   14ea0:	b	150b0 <__assert_fail@plt+0x3b68>
   14ea4:	b	14ea8 <__assert_fail@plt+0x3960>
   14ea8:	ldr	r0, [fp, #-12]
   14eac:	str	r0, [fp, #-16]
   14eb0:	ldr	r0, [fp, #-12]
   14eb4:	ldr	r0, [r0, #8]
   14eb8:	movw	r1, #0
   14ebc:	cmp	r0, r1
   14ec0:	bne	14f5c <__assert_fail@plt+0x3a14>
   14ec4:	ldr	r0, [fp, #-12]
   14ec8:	ldr	r0, [r0, #4]
   14ecc:	ldr	r0, [r0, #12]
   14ed0:	movw	r1, #0
   14ed4:	cmp	r0, r1
   14ed8:	beq	14f5c <__assert_fail@plt+0x3a14>
   14edc:	ldr	r0, [fp, #-16]
   14ee0:	ldr	r0, [r0, #4]
   14ee4:	str	r0, [fp, #-12]
   14ee8:	ldr	r0, [fp, #-12]
   14eec:	ldr	r1, [fp, #-8]
   14ef0:	str	r0, [r1]
   14ef4:	ldr	r0, [fp, #-8]
   14ef8:	ldr	r0, [r0, #24]
   14efc:	ldr	r1, [fp, #-12]
   14f00:	ldr	r1, [r1, #40]	; 0x28
   14f04:	add	r0, r0, r1
   14f08:	movw	r1, #0
   14f0c:	strb	r1, [r0]
   14f10:	ldr	r0, [fp, #-8]
   14f14:	movw	r1, #3
   14f18:	bl	15928 <__assert_fail@plt+0x43e0>
   14f1c:	str	r0, [fp, #-12]
   14f20:	movw	r1, #0
   14f24:	cmp	r0, r1
   14f28:	bne	14f50 <__assert_fail@plt+0x3a08>
   14f2c:	ldr	r0, [fp, #-8]
   14f30:	ldr	r0, [r0, #48]	; 0x30
   14f34:	and	r0, r0, #8192	; 0x2000
   14f38:	cmp	r0, #0
   14f3c:	beq	14f4c <__assert_fail@plt+0x3a04>
   14f40:	movw	r0, #0
   14f44:	str	r0, [fp, #-4]
   14f48:	b	154b8 <__assert_fail@plt+0x3f70>
   14f4c:	b	15258 <__assert_fail@plt+0x3d10>
   14f50:	ldr	r0, [fp, #-16]
   14f54:	bl	1398c <__assert_fail@plt+0x2444>
   14f58:	b	150b0 <__assert_fail@plt+0x3b68>
   14f5c:	ldr	r0, [fp, #-12]
   14f60:	ldr	r0, [r0, #8]
   14f64:	str	r0, [fp, #-12]
   14f68:	movw	r1, #0
   14f6c:	cmp	r0, r1
   14f70:	beq	15254 <__assert_fail@plt+0x3d0c>
   14f74:	ldr	r0, [fp, #-12]
   14f78:	ldr	r1, [fp, #-8]
   14f7c:	str	r0, [r1]
   14f80:	ldr	r0, [fp, #-16]
   14f84:	bl	1398c <__assert_fail@plt+0x2444>
   14f88:	ldr	r0, [fp, #-12]
   14f8c:	ldr	r0, [r0, #48]	; 0x30
   14f90:	cmp	r0, #0
   14f94:	bne	14fe8 <__assert_fail@plt+0x3aa0>
   14f98:	ldr	r0, [fp, #-8]
   14f9c:	bl	16604 <__assert_fail@plt+0x50bc>
   14fa0:	cmp	r0, #0
   14fa4:	beq	14fc4 <__assert_fail@plt+0x3a7c>
   14fa8:	ldr	r0, [fp, #-8]
   14fac:	ldr	r1, [r0, #48]	; 0x30
   14fb0:	orr	r1, r1, #8192	; 0x2000
   14fb4:	str	r1, [r0, #48]	; 0x30
   14fb8:	movw	r0, #0
   14fbc:	str	r0, [fp, #-4]
   14fc0:	b	154b8 <__assert_fail@plt+0x3f70>
   14fc4:	ldr	r0, [fp, #-8]
   14fc8:	bl	14a78 <__assert_fail@plt+0x3530>
   14fcc:	ldr	r0, [fp, #-8]
   14fd0:	ldr	r1, [fp, #-12]
   14fd4:	bl	16714 <__assert_fail@plt+0x51cc>
   14fd8:	ldr	r0, [fp, #-8]
   14fdc:	bl	14634 <__assert_fail@plt+0x30ec>
   14fe0:	str	r0, [sp, #16]
   14fe4:	b	15150 <__assert_fail@plt+0x3c08>
   14fe8:	ldr	r0, [fp, #-12]
   14fec:	ldrh	r0, [r0, #60]	; 0x3c
   14ff0:	cmp	r0, #4
   14ff4:	bne	14ffc <__assert_fail@plt+0x3ab4>
   14ff8:	b	14ea8 <__assert_fail@plt+0x3960>
   14ffc:	ldr	r0, [fp, #-12]
   15000:	ldrh	r0, [r0, #60]	; 0x3c
   15004:	cmp	r0, #2
   15008:	bne	150ac <__assert_fail@plt+0x3b64>
   1500c:	ldr	r0, [fp, #-8]
   15010:	ldr	r1, [fp, #-12]
   15014:	movw	r2, #1
   15018:	and	r2, r2, #1
   1501c:	bl	14254 <__assert_fail@plt+0x2d0c>
   15020:	ldr	r1, [fp, #-12]
   15024:	strh	r0, [r1, #56]	; 0x38
   15028:	ldr	r0, [fp, #-12]
   1502c:	ldrh	r0, [r0, #56]	; 0x38
   15030:	cmp	r0, #1
   15034:	bne	150a0 <__assert_fail@plt+0x3b58>
   15038:	ldr	r0, [fp, #-8]
   1503c:	ldr	r0, [r0, #48]	; 0x30
   15040:	and	r0, r0, #4
   15044:	cmp	r0, #0
   15048:	bne	150a0 <__assert_fail@plt+0x3b58>
   1504c:	ldr	r0, [fp, #-8]
   15050:	movw	r1, #23259	; 0x5adb
   15054:	movt	r1, #2
   15058:	bl	14710 <__assert_fail@plt+0x31c8>
   1505c:	ldr	r1, [fp, #-12]
   15060:	str	r0, [r1, #36]	; 0x24
   15064:	cmp	r0, #0
   15068:	bge	1508c <__assert_fail@plt+0x3b44>
   1506c:	bl	11404 <__errno_location@plt>
   15070:	ldr	r0, [r0]
   15074:	ldr	lr, [fp, #-12]
   15078:	str	r0, [lr, #32]
   1507c:	ldr	r0, [fp, #-12]
   15080:	movw	lr, #7
   15084:	strh	lr, [r0, #56]	; 0x38
   15088:	b	1509c <__assert_fail@plt+0x3b54>
   1508c:	ldr	r0, [fp, #-12]
   15090:	ldrh	r1, [r0, #58]	; 0x3a
   15094:	orr	r1, r1, #2
   15098:	strh	r1, [r0, #58]	; 0x3a
   1509c:	b	150a0 <__assert_fail@plt+0x3b58>
   150a0:	ldr	r0, [fp, #-12]
   150a4:	movw	r1, #3
   150a8:	strh	r1, [r0, #60]	; 0x3c
   150ac:	b	150b0 <__assert_fail@plt+0x3b68>
   150b0:	ldr	r0, [fp, #-8]
   150b4:	ldr	r0, [r0, #24]
   150b8:	ldr	r1, [fp, #-12]
   150bc:	ldr	r1, [r1, #4]
   150c0:	ldr	r1, [r1, #28]
   150c4:	ldr	r2, [fp, #-12]
   150c8:	ldr	r2, [r2, #4]
   150cc:	ldr	r2, [r2, #40]	; 0x28
   150d0:	sub	r2, r2, #1
   150d4:	add	r1, r1, r2
   150d8:	ldrb	r1, [r1]
   150dc:	cmp	r1, #47	; 0x2f
   150e0:	str	r0, [sp, #12]
   150e4:	bne	15100 <__assert_fail@plt+0x3bb8>
   150e8:	ldr	r0, [fp, #-12]
   150ec:	ldr	r0, [r0, #4]
   150f0:	ldr	r0, [r0, #40]	; 0x28
   150f4:	sub	r0, r0, #1
   150f8:	str	r0, [sp, #8]
   150fc:	b	15110 <__assert_fail@plt+0x3bc8>
   15100:	ldr	r0, [fp, #-12]
   15104:	ldr	r0, [r0, #4]
   15108:	ldr	r0, [r0, #40]	; 0x28
   1510c:	str	r0, [sp, #8]
   15110:	ldr	r0, [sp, #8]
   15114:	ldr	r1, [sp, #12]
   15118:	add	r0, r1, r0
   1511c:	str	r0, [sp, #24]
   15120:	ldr	r0, [sp, #24]
   15124:	add	r2, r0, #1
   15128:	str	r2, [sp, #24]
   1512c:	movw	r2, #47	; 0x2f
   15130:	strb	r2, [r0]
   15134:	ldr	r0, [sp, #24]
   15138:	ldr	r2, [fp, #-12]
   1513c:	add	r1, r2, #168	; 0xa8
   15140:	ldr	r2, [fp, #-12]
   15144:	ldr	r2, [r2, #52]	; 0x34
   15148:	add	r2, r2, #1
   1514c:	bl	11278 <memmove@plt>
   15150:	ldr	r0, [fp, #-12]
   15154:	ldr	r1, [fp, #-8]
   15158:	str	r0, [r1]
   1515c:	ldr	r0, [fp, #-12]
   15160:	ldrh	r0, [r0, #56]	; 0x38
   15164:	cmp	r0, #11
   15168:	bne	151e0 <__assert_fail@plt+0x3c98>
   1516c:	ldr	r0, [fp, #-12]
   15170:	ldr	r1, [r0, #112]	; 0x70
   15174:	ldr	r0, [r0, #116]	; 0x74
   15178:	eor	r1, r1, #2
   1517c:	orr	r0, r1, r0
   15180:	cmp	r0, #0
   15184:	bne	151ac <__assert_fail@plt+0x3c64>
   15188:	b	1518c <__assert_fail@plt+0x3c44>
   1518c:	ldr	r0, [fp, #-8]
   15190:	ldr	r1, [fp, #-12]
   15194:	movw	r2, #0
   15198:	and	r2, r2, #1
   1519c:	bl	14254 <__assert_fail@plt+0x2d0c>
   151a0:	ldr	r1, [fp, #-12]
   151a4:	strh	r0, [r1, #56]	; 0x38
   151a8:	b	151dc <__assert_fail@plt+0x3c94>
   151ac:	b	151b0 <__assert_fail@plt+0x3c68>
   151b0:	ldr	r0, [fp, #-12]
   151b4:	ldr	r1, [r0, #112]	; 0x70
   151b8:	ldr	r0, [r0, #116]	; 0x74
   151bc:	eor	r1, r1, #1
   151c0:	orr	r0, r1, r0
   151c4:	cmp	r0, #0
   151c8:	beq	151d4 <__assert_fail@plt+0x3c8c>
   151cc:	b	151d0 <__assert_fail@plt+0x3c88>
   151d0:	bl	11500 <abort@plt>
   151d4:	b	151d8 <__assert_fail@plt+0x3c90>
   151d8:	b	151dc <__assert_fail@plt+0x3c94>
   151dc:	b	151e0 <__assert_fail@plt+0x3c98>
   151e0:	ldr	r0, [fp, #-12]
   151e4:	ldrh	r0, [r0, #56]	; 0x38
   151e8:	cmp	r0, #1
   151ec:	bne	15248 <__assert_fail@plt+0x3d00>
   151f0:	ldr	r0, [fp, #-12]
   151f4:	ldr	r0, [r0, #48]	; 0x30
   151f8:	cmp	r0, #0
   151fc:	bne	15218 <__assert_fail@plt+0x3cd0>
   15200:	ldr	r0, [fp, #-12]
   15204:	ldr	r1, [r0, #64]	; 0x40
   15208:	ldr	r0, [r0, #68]	; 0x44
   1520c:	ldr	r2, [fp, #-8]
   15210:	str	r0, [r2, #20]
   15214:	str	r1, [r2, #16]
   15218:	ldr	r0, [fp, #-8]
   1521c:	ldr	r1, [fp, #-12]
   15220:	bl	167f4 <__assert_fail@plt+0x52ac>
   15224:	tst	r0, #1
   15228:	bne	15244 <__assert_fail@plt+0x3cfc>
   1522c:	bl	11404 <__errno_location@plt>
   15230:	movw	lr, #12
   15234:	str	lr, [r0]
   15238:	movw	r0, #0
   1523c:	str	r0, [fp, #-4]
   15240:	b	154b8 <__assert_fail@plt+0x3f70>
   15244:	b	15248 <__assert_fail@plt+0x3d00>
   15248:	ldr	r0, [fp, #-12]
   1524c:	str	r0, [fp, #-4]
   15250:	b	154b8 <__assert_fail@plt+0x3f70>
   15254:	b	15258 <__assert_fail@plt+0x3d10>
   15258:	ldr	r0, [fp, #-16]
   1525c:	ldr	r0, [r0, #4]
   15260:	str	r0, [fp, #-12]
   15264:	ldr	r0, [fp, #-12]
   15268:	ldr	r1, [fp, #-8]
   1526c:	str	r0, [r1]
   15270:	ldr	r0, [fp, #-16]
   15274:	bl	1398c <__assert_fail@plt+0x2444>
   15278:	ldr	r0, [fp, #-12]
   1527c:	ldr	r0, [r0, #48]	; 0x30
   15280:	cmn	r0, #1
   15284:	bne	152ac <__assert_fail@plt+0x3d64>
   15288:	ldr	r0, [fp, #-12]
   1528c:	bl	1398c <__assert_fail@plt+0x2444>
   15290:	bl	11404 <__errno_location@plt>
   15294:	movw	lr, #0
   15298:	str	lr, [r0]
   1529c:	ldr	r0, [fp, #-8]
   152a0:	str	lr, [r0]
   152a4:	str	lr, [fp, #-4]
   152a8:	b	154b8 <__assert_fail@plt+0x3f70>
   152ac:	b	152b0 <__assert_fail@plt+0x3d68>
   152b0:	ldr	r0, [fp, #-12]
   152b4:	ldrh	r0, [r0, #56]	; 0x38
   152b8:	cmp	r0, #11
   152bc:	bne	152c4 <__assert_fail@plt+0x3d7c>
   152c0:	bl	11500 <abort@plt>
   152c4:	b	152c8 <__assert_fail@plt+0x3d80>
   152c8:	ldr	r0, [fp, #-8]
   152cc:	ldr	r0, [r0, #24]
   152d0:	ldr	r1, [fp, #-12]
   152d4:	ldr	r1, [r1, #40]	; 0x28
   152d8:	add	r0, r0, r1
   152dc:	movw	r1, #0
   152e0:	strb	r1, [r0]
   152e4:	ldr	r0, [fp, #-12]
   152e8:	ldr	r0, [r0, #48]	; 0x30
   152ec:	cmp	r0, #0
   152f0:	bne	15328 <__assert_fail@plt+0x3de0>
   152f4:	ldr	r0, [fp, #-8]
   152f8:	bl	16604 <__assert_fail@plt+0x50bc>
   152fc:	cmp	r0, #0
   15300:	beq	15324 <__assert_fail@plt+0x3ddc>
   15304:	bl	11404 <__errno_location@plt>
   15308:	ldr	r0, [r0]
   1530c:	ldr	lr, [fp, #-12]
   15310:	str	r0, [lr, #32]
   15314:	ldr	r0, [fp, #-8]
   15318:	ldr	lr, [r0, #48]	; 0x30
   1531c:	orr	lr, lr, #8192	; 0x2000
   15320:	str	lr, [r0, #48]	; 0x30
   15324:	b	15428 <__assert_fail@plt+0x3ee0>
   15328:	ldr	r0, [fp, #-12]
   1532c:	ldrh	r0, [r0, #58]	; 0x3a
   15330:	and	r0, r0, #2
   15334:	cmp	r0, #0
   15338:	beq	153c8 <__assert_fail@plt+0x3e80>
   1533c:	ldr	r0, [fp, #-8]
   15340:	ldr	r0, [r0, #48]	; 0x30
   15344:	and	r0, r0, #4
   15348:	cmp	r0, #0
   1534c:	bne	153b4 <__assert_fail@plt+0x3e6c>
   15350:	ldr	r0, [fp, #-8]
   15354:	ldr	r0, [r0, #48]	; 0x30
   15358:	and	r0, r0, #512	; 0x200
   1535c:	cmp	r0, #0
   15360:	beq	15380 <__assert_fail@plt+0x3e38>
   15364:	ldr	r0, [fp, #-8]
   15368:	ldr	r1, [fp, #-12]
   1536c:	ldr	r1, [r1, #36]	; 0x24
   15370:	movw	r2, #1
   15374:	and	r2, r2, #1
   15378:	bl	16954 <__assert_fail@plt+0x540c>
   1537c:	b	153b4 <__assert_fail@plt+0x3e6c>
   15380:	ldr	r0, [fp, #-12]
   15384:	ldr	r0, [r0, #36]	; 0x24
   15388:	bl	114ac <fchdir@plt>
   1538c:	cmp	r0, #0
   15390:	beq	153b4 <__assert_fail@plt+0x3e6c>
   15394:	bl	11404 <__errno_location@plt>
   15398:	ldr	r0, [r0]
   1539c:	ldr	lr, [fp, #-12]
   153a0:	str	r0, [lr, #32]
   153a4:	ldr	r0, [fp, #-8]
   153a8:	ldr	lr, [r0, #48]	; 0x30
   153ac:	orr	lr, lr, #8192	; 0x2000
   153b0:	str	lr, [r0, #48]	; 0x30
   153b4:	ldr	r0, [fp, #-12]
   153b8:	ldr	r0, [r0, #36]	; 0x24
   153bc:	bl	1150c <close@plt>
   153c0:	str	r0, [sp, #4]
   153c4:	b	15424 <__assert_fail@plt+0x3edc>
   153c8:	ldr	r0, [fp, #-12]
   153cc:	ldrh	r0, [r0, #58]	; 0x3a
   153d0:	and	r0, r0, #1
   153d4:	cmp	r0, #0
   153d8:	bne	15420 <__assert_fail@plt+0x3ed8>
   153dc:	ldr	r0, [fp, #-8]
   153e0:	ldr	r1, [fp, #-12]
   153e4:	ldr	r1, [r1, #4]
   153e8:	mvn	r2, #0
   153ec:	movw	r3, #23258	; 0x5ada
   153f0:	movt	r3, #2
   153f4:	bl	15664 <__assert_fail@plt+0x411c>
   153f8:	cmp	r0, #0
   153fc:	beq	15420 <__assert_fail@plt+0x3ed8>
   15400:	bl	11404 <__errno_location@plt>
   15404:	ldr	r0, [r0]
   15408:	ldr	lr, [fp, #-12]
   1540c:	str	r0, [lr, #32]
   15410:	ldr	r0, [fp, #-8]
   15414:	ldr	lr, [r0, #48]	; 0x30
   15418:	orr	lr, lr, #8192	; 0x2000
   1541c:	str	lr, [r0, #48]	; 0x30
   15420:	b	15424 <__assert_fail@plt+0x3edc>
   15424:	b	15428 <__assert_fail@plt+0x3ee0>
   15428:	ldr	r0, [fp, #-12]
   1542c:	ldrh	r0, [r0, #56]	; 0x38
   15430:	cmp	r0, #2
   15434:	beq	15488 <__assert_fail@plt+0x3f40>
   15438:	ldr	r0, [fp, #-12]
   1543c:	ldr	r0, [r0, #32]
   15440:	cmp	r0, #0
   15444:	movw	r0, #0
   15448:	movne	r0, #1
   1544c:	tst	r0, #1
   15450:	movw	r0, #7
   15454:	moveq	r0, #6
   15458:	ldr	r1, [fp, #-12]
   1545c:	strh	r0, [r1, #56]	; 0x38
   15460:	ldr	r0, [fp, #-12]
   15464:	ldr	r0, [r0, #32]
   15468:	cmp	r0, #0
   1546c:	bne	15484 <__assert_fail@plt+0x3f3c>
   15470:	b	15474 <__assert_fail@plt+0x3f2c>
   15474:	ldr	r0, [fp, #-8]
   15478:	ldr	r1, [fp, #-12]
   1547c:	bl	154c4 <__assert_fail@plt+0x3f7c>
   15480:	b	15484 <__assert_fail@plt+0x3f3c>
   15484:	b	15488 <__assert_fail@plt+0x3f40>
   15488:	ldr	r0, [fp, #-8]
   1548c:	ldr	r0, [r0, #48]	; 0x30
   15490:	and	r0, r0, #8192	; 0x2000
   15494:	cmp	r0, #0
   15498:	beq	154a8 <__assert_fail@plt+0x3f60>
   1549c:	movw	r0, #0
   154a0:	str	r0, [sp]
   154a4:	b	154b0 <__assert_fail@plt+0x3f68>
   154a8:	ldr	r0, [fp, #-12]
   154ac:	str	r0, [sp]
   154b0:	ldr	r0, [sp]
   154b4:	str	r0, [fp, #-4]
   154b8:	ldr	r0, [fp, #-4]
   154bc:	mov	sp, fp
   154c0:	pop	{fp, pc}
   154c4:	push	{fp, lr}
   154c8:	mov	fp, sp
   154cc:	sub	sp, sp, #48	; 0x30
   154d0:	str	r0, [fp, #-4]
   154d4:	str	r1, [fp, #-8]
   154d8:	ldr	r0, [fp, #-8]
   154dc:	add	r0, r0, #64	; 0x40
   154e0:	str	r0, [fp, #-12]
   154e4:	ldr	r0, [fp, #-4]
   154e8:	ldr	r0, [r0, #48]	; 0x30
   154ec:	movw	r1, #258	; 0x102
   154f0:	and	r0, r0, r1
   154f4:	cmp	r0, #0
   154f8:	beq	15558 <__assert_fail@plt+0x4010>
   154fc:	ldr	r0, [fp, #-12]
   15500:	ldr	r1, [r0]
   15504:	ldr	r0, [r0, #4]
   15508:	str	r0, [sp, #12]
   1550c:	str	r1, [sp, #8]
   15510:	ldr	r0, [fp, #-12]
   15514:	ldr	r1, [r0, #96]	; 0x60
   15518:	ldr	r0, [r0, #100]	; 0x64
   1551c:	str	r0, [sp, #20]
   15520:	str	r1, [sp, #16]
   15524:	ldr	r0, [fp, #-4]
   15528:	ldr	r0, [r0, #56]	; 0x38
   1552c:	add	r1, sp, #8
   15530:	bl	18d24 <__assert_fail@plt+0x77dc>
   15534:	str	r0, [sp, #4]
   15538:	ldr	r0, [sp, #4]
   1553c:	movw	r1, #0
   15540:	cmp	r0, r1
   15544:	bne	1554c <__assert_fail@plt+0x4004>
   15548:	bl	11500 <abort@plt>
   1554c:	ldr	r0, [sp, #4]
   15550:	bl	1398c <__assert_fail@plt+0x2444>
   15554:	b	1565c <__assert_fail@plt+0x4114>
   15558:	ldr	r0, [fp, #-8]
   1555c:	ldr	r0, [r0, #4]
   15560:	str	r0, [sp]
   15564:	ldr	r0, [sp]
   15568:	movw	r1, #0
   1556c:	cmp	r0, r1
   15570:	beq	15658 <__assert_fail@plt+0x4110>
   15574:	ldr	r0, [sp]
   15578:	ldr	r0, [r0, #48]	; 0x30
   1557c:	movw	r1, #0
   15580:	cmp	r1, r0
   15584:	bgt	15658 <__assert_fail@plt+0x4110>
   15588:	b	1558c <__assert_fail@plt+0x4044>
   1558c:	ldr	r0, [fp, #-4]
   15590:	ldr	r0, [r0, #56]	; 0x38
   15594:	ldr	r1, [r0, #16]
   15598:	ldr	r0, [r0, #20]
   1559c:	orr	r0, r1, r0
   155a0:	cmp	r0, #0
   155a4:	bne	155b0 <__assert_fail@plt+0x4068>
   155a8:	b	155ac <__assert_fail@plt+0x4064>
   155ac:	bl	11500 <abort@plt>
   155b0:	ldr	r0, [fp, #-4]
   155b4:	ldr	r0, [r0, #56]	; 0x38
   155b8:	ldr	r1, [r0]
   155bc:	ldr	r0, [r0, #4]
   155c0:	ldr	r2, [fp, #-12]
   155c4:	ldr	r3, [r2, #96]	; 0x60
   155c8:	ldr	r2, [r2, #100]	; 0x64
   155cc:	eor	r0, r0, r2
   155d0:	eor	r1, r1, r3
   155d4:	orr	r0, r1, r0
   155d8:	cmp	r0, #0
   155dc:	bne	15650 <__assert_fail@plt+0x4108>
   155e0:	b	155e4 <__assert_fail@plt+0x409c>
   155e4:	ldr	r0, [fp, #-4]
   155e8:	ldr	r0, [r0, #56]	; 0x38
   155ec:	ldr	r1, [r0, #8]
   155f0:	ldr	r0, [r0, #12]
   155f4:	ldr	r2, [fp, #-12]
   155f8:	ldr	r3, [r2]
   155fc:	ldr	r2, [r2, #4]
   15600:	eor	r0, r0, r2
   15604:	eor	r1, r1, r3
   15608:	orr	r0, r1, r0
   1560c:	cmp	r0, #0
   15610:	bne	15650 <__assert_fail@plt+0x4108>
   15614:	b	15618 <__assert_fail@plt+0x40d0>
   15618:	ldr	r0, [sp]
   1561c:	ldr	r1, [r0, #64]	; 0x40
   15620:	ldr	r0, [r0, #68]	; 0x44
   15624:	ldr	r2, [fp, #-4]
   15628:	ldr	r2, [r2, #56]	; 0x38
   1562c:	str	r0, [r2, #12]
   15630:	str	r1, [r2, #8]
   15634:	ldr	r0, [sp]
   15638:	ldr	r1, [r0, #160]	; 0xa0
   1563c:	ldr	r0, [r0, #164]	; 0xa4
   15640:	ldr	r2, [fp, #-4]
   15644:	ldr	r2, [r2, #56]	; 0x38
   15648:	str	r0, [r2, #4]
   1564c:	str	r1, [r2]
   15650:	b	15654 <__assert_fail@plt+0x410c>
   15654:	b	15658 <__assert_fail@plt+0x4110>
   15658:	b	1565c <__assert_fail@plt+0x4114>
   1565c:	mov	sp, fp
   15660:	pop	{fp, pc}
   15664:	push	{fp, lr}
   15668:	mov	fp, sp
   1566c:	sub	sp, sp, #168	; 0xa8
   15670:	str	r0, [fp, #-8]
   15674:	str	r1, [fp, #-12]
   15678:	str	r2, [fp, #-16]
   1567c:	str	r3, [fp, #-20]	; 0xffffffec
   15680:	ldr	r0, [fp, #-20]	; 0xffffffec
   15684:	movw	r1, #0
   15688:	cmp	r0, r1
   1568c:	movw	r0, #0
   15690:	str	r0, [sp, #16]
   15694:	beq	156b8 <__assert_fail@plt+0x4170>
   15698:	ldr	r0, [fp, #-20]	; 0xffffffec
   1569c:	movw	r1, #23258	; 0x5ada
   156a0:	movt	r1, #2
   156a4:	bl	11248 <strcmp@plt>
   156a8:	cmp	r0, #0
   156ac:	movw	r0, #0
   156b0:	moveq	r0, #1
   156b4:	str	r0, [sp, #16]
   156b8:	ldr	r0, [sp, #16]
   156bc:	and	r0, r0, #1
   156c0:	strb	r0, [fp, #-25]	; 0xffffffe7
   156c4:	ldr	r0, [fp, #-8]
   156c8:	ldr	r0, [r0, #48]	; 0x30
   156cc:	and	r0, r0, #4
   156d0:	cmp	r0, #0
   156d4:	beq	15714 <__assert_fail@plt+0x41cc>
   156d8:	ldr	r0, [fp, #-8]
   156dc:	ldr	r0, [r0, #48]	; 0x30
   156e0:	and	r0, r0, #512	; 0x200
   156e4:	cmp	r0, #0
   156e8:	beq	15708 <__assert_fail@plt+0x41c0>
   156ec:	ldr	r0, [fp, #-16]
   156f0:	movw	r1, #0
   156f4:	cmp	r1, r0
   156f8:	bgt	15708 <__assert_fail@plt+0x41c0>
   156fc:	ldr	r0, [fp, #-16]
   15700:	bl	1150c <close@plt>
   15704:	str	r0, [sp, #12]
   15708:	movw	r0, #0
   1570c:	str	r0, [fp, #-4]
   15710:	b	1591c <__assert_fail@plt+0x43d4>
   15714:	ldr	r0, [fp, #-16]
   15718:	cmp	r0, #0
   1571c:	bge	1578c <__assert_fail@plt+0x4244>
   15720:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15724:	tst	r0, #1
   15728:	beq	1578c <__assert_fail@plt+0x4244>
   1572c:	ldr	r0, [fp, #-8]
   15730:	ldr	r0, [r0, #48]	; 0x30
   15734:	and	r0, r0, #512	; 0x200
   15738:	cmp	r0, #0
   1573c:	beq	1578c <__assert_fail@plt+0x4244>
   15740:	ldr	r0, [fp, #-8]
   15744:	add	r0, r0, #60	; 0x3c
   15748:	bl	19158 <__assert_fail@plt+0x7c10>
   1574c:	tst	r0, #1
   15750:	bne	15788 <__assert_fail@plt+0x4240>
   15754:	ldr	r0, [fp, #-8]
   15758:	add	r0, r0, #60	; 0x3c
   1575c:	bl	19228 <__assert_fail@plt+0x7ce0>
   15760:	str	r0, [fp, #-36]	; 0xffffffdc
   15764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15768:	movw	lr, #0
   1576c:	cmp	lr, r0
   15770:	bgt	15784 <__assert_fail@plt+0x423c>
   15774:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15778:	str	r0, [fp, #-16]
   1577c:	movw	r0, #0
   15780:	str	r0, [fp, #-20]	; 0xffffffec
   15784:	b	15788 <__assert_fail@plt+0x4240>
   15788:	b	1578c <__assert_fail@plt+0x4244>
   1578c:	ldr	r0, [fp, #-16]
   15790:	str	r0, [fp, #-32]	; 0xffffffe0
   15794:	ldr	r0, [fp, #-16]
   15798:	cmp	r0, #0
   1579c:	bge	157c4 <__assert_fail@plt+0x427c>
   157a0:	ldr	r0, [fp, #-8]
   157a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   157a8:	bl	14710 <__assert_fail@plt+0x31c8>
   157ac:	str	r0, [fp, #-32]	; 0xffffffe0
   157b0:	cmp	r0, #0
   157b4:	bge	157c4 <__assert_fail@plt+0x427c>
   157b8:	mvn	r0, #0
   157bc:	str	r0, [fp, #-4]
   157c0:	b	1591c <__assert_fail@plt+0x43d4>
   157c4:	ldr	r0, [fp, #-8]
   157c8:	ldr	r0, [r0, #48]	; 0x30
   157cc:	and	r0, r0, #2
   157d0:	cmp	r0, #0
   157d4:	bne	15800 <__assert_fail@plt+0x42b8>
   157d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   157dc:	movw	r1, #0
   157e0:	cmp	r0, r1
   157e4:	beq	15894 <__assert_fail@plt+0x434c>
   157e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   157ec:	movw	r1, #23258	; 0x5ada
   157f0:	movt	r1, #2
   157f4:	bl	11248 <strcmp@plt>
   157f8:	cmp	r0, #0
   157fc:	bne	15894 <__assert_fail@plt+0x434c>
   15800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15804:	add	r1, sp, #24
   15808:	bl	249c4 <__assert_fail@plt+0x1347c>
   1580c:	cmp	r0, #0
   15810:	beq	15820 <__assert_fail@plt+0x42d8>
   15814:	mvn	r0, #0
   15818:	str	r0, [fp, #-24]	; 0xffffffe8
   1581c:	b	158dc <__assert_fail@plt+0x4394>
   15820:	ldr	r0, [fp, #-12]
   15824:	ldr	r1, [r0, #64]	; 0x40
   15828:	ldr	r0, [r0, #68]	; 0x44
   1582c:	ldr	r2, [sp, #24]
   15830:	ldr	r3, [sp, #28]
   15834:	eor	r0, r0, r3
   15838:	eor	r1, r1, r2
   1583c:	orr	r0, r1, r0
   15840:	cmp	r0, #0
   15844:	bne	15878 <__assert_fail@plt+0x4330>
   15848:	b	1584c <__assert_fail@plt+0x4304>
   1584c:	ldr	r0, [fp, #-12]
   15850:	ldr	r1, [r0, #160]	; 0xa0
   15854:	ldr	r0, [r0, #164]	; 0xa4
   15858:	ldr	r2, [sp, #120]	; 0x78
   1585c:	ldr	r3, [sp, #124]	; 0x7c
   15860:	eor	r0, r0, r3
   15864:	eor	r1, r1, r2
   15868:	orr	r0, r1, r0
   1586c:	cmp	r0, #0
   15870:	beq	15890 <__assert_fail@plt+0x4348>
   15874:	b	15878 <__assert_fail@plt+0x4330>
   15878:	bl	11404 <__errno_location@plt>
   1587c:	movw	lr, #2
   15880:	str	lr, [r0]
   15884:	mvn	r0, #0
   15888:	str	r0, [fp, #-24]	; 0xffffffe8
   1588c:	b	158dc <__assert_fail@plt+0x4394>
   15890:	b	15894 <__assert_fail@plt+0x434c>
   15894:	ldr	r0, [fp, #-8]
   15898:	ldr	r0, [r0, #48]	; 0x30
   1589c:	and	r0, r0, #512	; 0x200
   158a0:	cmp	r0, #0
   158a4:	beq	158d0 <__assert_fail@plt+0x4388>
   158a8:	ldr	r0, [fp, #-8]
   158ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   158b0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   158b4:	mvn	r3, #0
   158b8:	eor	r2, r2, r3
   158bc:	and	r2, r2, #1
   158c0:	bl	16954 <__assert_fail@plt+0x540c>
   158c4:	movw	r0, #0
   158c8:	str	r0, [fp, #-4]
   158cc:	b	1591c <__assert_fail@plt+0x43d4>
   158d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158d4:	bl	114ac <fchdir@plt>
   158d8:	str	r0, [fp, #-24]	; 0xffffffe8
   158dc:	ldr	r0, [fp, #-16]
   158e0:	cmp	r0, #0
   158e4:	bge	15914 <__assert_fail@plt+0x43cc>
   158e8:	bl	11404 <__errno_location@plt>
   158ec:	ldr	r0, [r0]
   158f0:	str	r0, [sp, #20]
   158f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158f8:	bl	1150c <close@plt>
   158fc:	ldr	lr, [sp, #20]
   15900:	str	r0, [sp, #8]
   15904:	str	lr, [sp, #4]
   15908:	bl	11404 <__errno_location@plt>
   1590c:	ldr	lr, [sp, #4]
   15910:	str	lr, [r0]
   15914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15918:	str	r0, [fp, #-4]
   1591c:	ldr	r0, [fp, #-4]
   15920:	mov	sp, fp
   15924:	pop	{fp, pc}
   15928:	push	{fp, lr}
   1592c:	mov	fp, sp
   15930:	sub	sp, sp, #176	; 0xb0
   15934:	str	r0, [fp, #-8]
   15938:	str	r1, [fp, #-12]
   1593c:	ldr	r0, [fp, #-8]
   15940:	ldr	r0, [r0]
   15944:	str	r0, [fp, #-68]	; 0xffffffbc
   15948:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1594c:	ldr	r0, [r0, #12]
   15950:	movw	r1, #0
   15954:	cmp	r0, r1
   15958:	movw	r0, #0
   1595c:	movne	r0, #1
   15960:	mvn	r1, #0
   15964:	eor	r0, r0, r1
   15968:	eor	r0, r0, r1
   1596c:	and	r0, r0, #1
   15970:	strb	r0, [fp, #-69]	; 0xffffffbb
   15974:	movw	r0, #0
   15978:	strb	r0, [fp, #-70]	; 0xffffffba
   1597c:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15980:	tst	r0, #1
   15984:	beq	15a04 <__assert_fail@plt+0x44bc>
   15988:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1598c:	ldr	r0, [r0, #12]
   15990:	str	r0, [fp, #-80]	; 0xffffffb0
   15994:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15998:	bl	114a0 <dirfd@plt>
   1599c:	str	r0, [fp, #-64]	; 0xffffffc0
   159a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   159a4:	cmp	r0, #0
   159a8:	bge	15a00 <__assert_fail@plt+0x44b8>
   159ac:	b	159b0 <__assert_fail@plt+0x4468>
   159b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159b4:	ldr	r0, [r0, #12]
   159b8:	bl	11524 <closedir@plt>
   159bc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   159c0:	movw	r1, #0
   159c4:	str	r1, [lr, #12]
   159c8:	str	r0, [sp, #80]	; 0x50
   159cc:	ldr	r0, [fp, #-12]
   159d0:	cmp	r0, #3
   159d4:	bne	159f4 <__assert_fail@plt+0x44ac>
   159d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159dc:	movw	r1, #4
   159e0:	strh	r1, [r0, #56]	; 0x38
   159e4:	bl	11404 <__errno_location@plt>
   159e8:	ldr	r0, [r0]
   159ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159f0:	str	r0, [r1, #32]
   159f4:	movw	r0, #0
   159f8:	str	r0, [fp, #-4]
   159fc:	b	165f4 <__assert_fail@plt+0x50ac>
   15a00:	b	15bdc <__assert_fail@plt+0x4694>
   15a04:	ldr	r0, [fp, #-8]
   15a08:	ldr	r0, [r0, #48]	; 0x30
   15a0c:	and	r0, r0, #4
   15a10:	cmp	r0, #0
   15a14:	bne	15a3c <__assert_fail@plt+0x44f4>
   15a18:	ldr	r0, [fp, #-8]
   15a1c:	ldr	r0, [r0, #48]	; 0x30
   15a20:	and	r0, r0, #512	; 0x200
   15a24:	cmp	r0, #0
   15a28:	beq	15a3c <__assert_fail@plt+0x44f4>
   15a2c:	ldr	r0, [fp, #-8]
   15a30:	ldr	r0, [r0, #32]
   15a34:	str	r0, [sp, #76]	; 0x4c
   15a38:	b	15a48 <__assert_fail@plt+0x4500>
   15a3c:	mvn	r0, #99	; 0x63
   15a40:	str	r0, [sp, #76]	; 0x4c
   15a44:	b	15a48 <__assert_fail@plt+0x4500>
   15a48:	ldr	r0, [sp, #76]	; 0x4c
   15a4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a50:	ldr	r1, [r1, #24]
   15a54:	ldr	r2, [fp, #-8]
   15a58:	ldr	r2, [r2, #48]	; 0x30
   15a5c:	and	r2, r2, #16
   15a60:	cmp	r2, #0
   15a64:	movw	r2, #0
   15a68:	str	r0, [sp, #72]	; 0x48
   15a6c:	str	r1, [sp, #68]	; 0x44
   15a70:	str	r2, [sp, #64]	; 0x40
   15a74:	beq	15abc <__assert_fail@plt+0x4574>
   15a78:	ldr	r0, [fp, #-8]
   15a7c:	ldr	r0, [r0, #48]	; 0x30
   15a80:	and	r0, r0, #1
   15a84:	cmp	r0, #0
   15a88:	movw	r0, #0
   15a8c:	str	r0, [sp, #60]	; 0x3c
   15a90:	beq	15aac <__assert_fail@plt+0x4564>
   15a94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a98:	ldr	r0, [r0, #48]	; 0x30
   15a9c:	cmp	r0, #0
   15aa0:	movw	r0, #0
   15aa4:	moveq	r0, #1
   15aa8:	str	r0, [sp, #60]	; 0x3c
   15aac:	ldr	r0, [sp, #60]	; 0x3c
   15ab0:	mvn	r1, #0
   15ab4:	eor	r0, r0, r1
   15ab8:	str	r0, [sp, #64]	; 0x40
   15abc:	ldr	r0, [sp, #64]	; 0x40
   15ac0:	tst	r0, #1
   15ac4:	movw	r0, #32768	; 0x8000
   15ac8:	moveq	r0, #0
   15acc:	ldr	r1, [sp, #72]	; 0x48
   15ad0:	str	r0, [sp, #56]	; 0x38
   15ad4:	mov	r0, r1
   15ad8:	ldr	r1, [sp, #68]	; 0x44
   15adc:	ldr	r2, [sp, #56]	; 0x38
   15ae0:	sub	r3, fp, #64	; 0x40
   15ae4:	bl	19488 <__assert_fail@plt+0x7f40>
   15ae8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15aec:	str	r0, [r1, #12]
   15af0:	movw	r1, #0
   15af4:	cmp	r0, r1
   15af8:	bne	15b30 <__assert_fail@plt+0x45e8>
   15afc:	ldr	r0, [fp, #-12]
   15b00:	cmp	r0, #3
   15b04:	bne	15b24 <__assert_fail@plt+0x45dc>
   15b08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b0c:	movw	r1, #4
   15b10:	strh	r1, [r0, #56]	; 0x38
   15b14:	bl	11404 <__errno_location@plt>
   15b18:	ldr	r0, [r0]
   15b1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b20:	str	r0, [r1, #32]
   15b24:	movw	r0, #0
   15b28:	str	r0, [fp, #-4]
   15b2c:	b	165f4 <__assert_fail@plt+0x50ac>
   15b30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b34:	ldrh	r0, [r0, #56]	; 0x38
   15b38:	cmp	r0, #11
   15b3c:	bne	15b60 <__assert_fail@plt+0x4618>
   15b40:	ldr	r0, [fp, #-8]
   15b44:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b48:	movw	r2, #0
   15b4c:	and	r2, r2, #1
   15b50:	bl	14254 <__assert_fail@plt+0x2d0c>
   15b54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b58:	strh	r0, [r1, #56]	; 0x38
   15b5c:	b	15bd8 <__assert_fail@plt+0x4690>
   15b60:	ldr	r0, [fp, #-8]
   15b64:	ldr	r0, [r0, #48]	; 0x30
   15b68:	and	r0, r0, #256	; 0x100
   15b6c:	cmp	r0, #0
   15b70:	beq	15bd4 <__assert_fail@plt+0x468c>
   15b74:	b	15b78 <__assert_fail@plt+0x4630>
   15b78:	ldr	r0, [fp, #-8]
   15b7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b80:	bl	154c4 <__assert_fail@plt+0x3f7c>
   15b84:	ldr	r0, [fp, #-8]
   15b88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b8c:	movw	r2, #0
   15b90:	and	r2, r2, #1
   15b94:	bl	14254 <__assert_fail@plt+0x2d0c>
   15b98:	ldr	r1, [fp, #-8]
   15b9c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15ba0:	str	r0, [sp, #52]	; 0x34
   15ba4:	mov	r0, r1
   15ba8:	mov	r1, r2
   15bac:	bl	167f4 <__assert_fail@plt+0x52ac>
   15bb0:	tst	r0, #1
   15bb4:	bne	15bd0 <__assert_fail@plt+0x4688>
   15bb8:	bl	11404 <__errno_location@plt>
   15bbc:	movw	lr, #12
   15bc0:	str	lr, [r0]
   15bc4:	movw	r0, #0
   15bc8:	str	r0, [fp, #-4]
   15bcc:	b	165f4 <__assert_fail@plt+0x50ac>
   15bd0:	b	15bd4 <__assert_fail@plt+0x468c>
   15bd4:	b	15bd8 <__assert_fail@plt+0x4690>
   15bd8:	b	15bdc <__assert_fail@plt+0x4694>
   15bdc:	ldr	r0, [pc, #2588]	; 16600 <__assert_fail@plt+0x50b8>
   15be0:	ldr	r1, [fp, #-8]
   15be4:	ldr	r1, [r1, #44]	; 0x2c
   15be8:	movw	r2, #0
   15bec:	cmp	r1, r2
   15bf0:	movw	r1, #0
   15bf4:	movne	r1, #1
   15bf8:	tst	r1, #1
   15bfc:	mvn	r1, #0
   15c00:	movne	r0, r1
   15c04:	str	r0, [fp, #-76]	; 0xffffffb4
   15c08:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15c0c:	tst	r0, #1
   15c10:	beq	15c20 <__assert_fail@plt+0x46d8>
   15c14:	movw	r0, #1
   15c18:	strb	r0, [fp, #-37]	; 0xffffffdb
   15c1c:	b	15dec <__assert_fail@plt+0x48a4>
   15c20:	ldr	r0, [fp, #-12]
   15c24:	cmp	r0, #2
   15c28:	movw	r0, #0
   15c2c:	str	r0, [sp, #48]	; 0x30
   15c30:	beq	15ccc <__assert_fail@plt+0x4784>
   15c34:	ldr	r0, [fp, #-8]
   15c38:	ldr	r0, [r0, #48]	; 0x30
   15c3c:	and	r0, r0, #8
   15c40:	cmp	r0, #0
   15c44:	movw	r0, #0
   15c48:	str	r0, [sp, #44]	; 0x2c
   15c4c:	beq	15cbc <__assert_fail@plt+0x4774>
   15c50:	ldr	r0, [fp, #-8]
   15c54:	ldr	r0, [r0, #48]	; 0x30
   15c58:	and	r0, r0, #16
   15c5c:	cmp	r0, #0
   15c60:	movw	r0, #0
   15c64:	str	r0, [sp, #44]	; 0x2c
   15c68:	beq	15cbc <__assert_fail@plt+0x4774>
   15c6c:	ldr	r0, [fp, #-8]
   15c70:	ldr	r0, [r0, #48]	; 0x30
   15c74:	and	r0, r0, #32
   15c78:	cmp	r0, #0
   15c7c:	movw	r0, #0
   15c80:	str	r0, [sp, #44]	; 0x2c
   15c84:	bne	15cbc <__assert_fail@plt+0x4774>
   15c88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c8c:	ldr	r0, [r0, #84]	; 0x54
   15c90:	cmp	r0, #2
   15c94:	movw	r0, #0
   15c98:	str	r0, [sp, #44]	; 0x2c
   15c9c:	bne	15cbc <__assert_fail@plt+0x4774>
   15ca0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ca4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15ca8:	bl	16dd8 <__assert_fail@plt+0x5890>
   15cac:	cmp	r0, #0
   15cb0:	movw	r0, #0
   15cb4:	movne	r0, #1
   15cb8:	str	r0, [sp, #44]	; 0x2c
   15cbc:	ldr	r0, [sp, #44]	; 0x2c
   15cc0:	mvn	r1, #0
   15cc4:	eor	r0, r0, r1
   15cc8:	str	r0, [sp, #48]	; 0x30
   15ccc:	ldr	r0, [sp, #48]	; 0x30
   15cd0:	and	r0, r0, #1
   15cd4:	strb	r0, [fp, #-37]	; 0xffffffdb
   15cd8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15cdc:	tst	r0, #1
   15ce0:	bne	15cf0 <__assert_fail@plt+0x47a8>
   15ce4:	ldr	r0, [fp, #-12]
   15ce8:	cmp	r0, #3
   15cec:	bne	15de8 <__assert_fail@plt+0x48a0>
   15cf0:	ldr	r0, [fp, #-8]
   15cf4:	ldr	r0, [r0, #48]	; 0x30
   15cf8:	and	r0, r0, #512	; 0x200
   15cfc:	cmp	r0, #0
   15d00:	beq	15d18 <__assert_fail@plt+0x47d0>
   15d04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d08:	movw	r1, #1030	; 0x406
   15d0c:	movw	r2, #3
   15d10:	bl	22200 <__assert_fail@plt+0x10cb8>
   15d14:	str	r0, [fp, #-64]	; 0xffffffc0
   15d18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d1c:	cmp	r0, #0
   15d20:	blt	15d40 <__assert_fail@plt+0x47f8>
   15d24:	ldr	r0, [fp, #-8]
   15d28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d2c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15d30:	movw	r3, #0
   15d34:	bl	15664 <__assert_fail@plt+0x411c>
   15d38:	cmp	r0, #0
   15d3c:	beq	15ddc <__assert_fail@plt+0x4894>
   15d40:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15d44:	tst	r0, #1
   15d48:	beq	15d68 <__assert_fail@plt+0x4820>
   15d4c:	ldr	r0, [fp, #-12]
   15d50:	cmp	r0, #3
   15d54:	bne	15d68 <__assert_fail@plt+0x4820>
   15d58:	bl	11404 <__errno_location@plt>
   15d5c:	ldr	r0, [r0]
   15d60:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15d64:	str	r0, [lr, #32]
   15d68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d6c:	ldrh	r1, [r0, #58]	; 0x3a
   15d70:	orr	r1, r1, #1
   15d74:	strh	r1, [r0, #58]	; 0x3a
   15d78:	movw	r0, #0
   15d7c:	strb	r0, [fp, #-37]	; 0xffffffdb
   15d80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d84:	ldr	r0, [r0, #12]
   15d88:	bl	11524 <closedir@plt>
   15d8c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15d90:	movw	r1, #0
   15d94:	str	r1, [lr, #12]
   15d98:	str	r0, [sp, #40]	; 0x28
   15d9c:	ldr	r0, [fp, #-8]
   15da0:	ldr	r0, [r0, #48]	; 0x30
   15da4:	and	r0, r0, #512	; 0x200
   15da8:	cmp	r0, #0
   15dac:	beq	15dcc <__assert_fail@plt+0x4884>
   15db0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15db4:	movw	r1, #0
   15db8:	cmp	r1, r0
   15dbc:	bgt	15dcc <__assert_fail@plt+0x4884>
   15dc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15dc4:	bl	1150c <close@plt>
   15dc8:	str	r0, [sp, #36]	; 0x24
   15dcc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15dd0:	movw	r1, #0
   15dd4:	str	r1, [r0, #12]
   15dd8:	b	15de4 <__assert_fail@plt+0x489c>
   15ddc:	movw	r0, #1
   15de0:	strb	r0, [fp, #-37]	; 0xffffffdb
   15de4:	b	15de8 <__assert_fail@plt+0x48a0>
   15de8:	b	15dec <__assert_fail@plt+0x48a4>
   15dec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15df0:	ldr	r0, [r0, #28]
   15df4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15df8:	ldr	r1, [r1, #40]	; 0x28
   15dfc:	sub	r1, r1, #1
   15e00:	add	r0, r0, r1
   15e04:	ldrb	r0, [r0]
   15e08:	cmp	r0, #47	; 0x2f
   15e0c:	bne	15e24 <__assert_fail@plt+0x48dc>
   15e10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e14:	ldr	r0, [r0, #40]	; 0x28
   15e18:	sub	r0, r0, #1
   15e1c:	str	r0, [sp, #32]
   15e20:	b	15e30 <__assert_fail@plt+0x48e8>
   15e24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e28:	ldr	r0, [r0, #40]	; 0x28
   15e2c:	str	r0, [sp, #32]
   15e30:	ldr	r0, [sp, #32]
   15e34:	str	r0, [fp, #-48]	; 0xffffffd0
   15e38:	ldr	r0, [fp, #-8]
   15e3c:	ldr	r0, [r0, #48]	; 0x30
   15e40:	and	r0, r0, #4
   15e44:	cmp	r0, #0
   15e48:	beq	15e78 <__assert_fail@plt+0x4930>
   15e4c:	ldr	r0, [fp, #-8]
   15e50:	ldr	r0, [r0, #24]
   15e54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e58:	add	r0, r0, r1
   15e5c:	str	r0, [fp, #-60]	; 0xffffffc4
   15e60:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e64:	add	r1, r0, #1
   15e68:	str	r1, [fp, #-60]	; 0xffffffc4
   15e6c:	movw	r1, #47	; 0x2f
   15e70:	strb	r1, [r0]
   15e74:	b	15e80 <__assert_fail@plt+0x4938>
   15e78:	movw	r0, #0
   15e7c:	str	r0, [fp, #-60]	; 0xffffffc4
   15e80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e84:	add	r0, r0, #1
   15e88:	str	r0, [fp, #-48]	; 0xffffffd0
   15e8c:	ldr	r0, [fp, #-8]
   15e90:	ldr	r0, [r0, #36]	; 0x24
   15e94:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e98:	sub	r0, r0, r1
   15e9c:	str	r0, [fp, #-52]	; 0xffffffcc
   15ea0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ea4:	ldr	r0, [r0, #48]	; 0x30
   15ea8:	add	r0, r0, #1
   15eac:	str	r0, [fp, #-44]	; 0xffffffd4
   15eb0:	movw	r0, #0
   15eb4:	strb	r0, [fp, #-38]	; 0xffffffda
   15eb8:	movw	r0, #0
   15ebc:	str	r0, [fp, #-20]	; 0xffffffec
   15ec0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ec4:	str	r0, [fp, #-24]	; 0xffffffe8
   15ec8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ecc:	ldr	r0, [r0, #12]
   15ed0:	movw	r1, #0
   15ed4:	cmp	r0, r1
   15ed8:	beq	163d8 <__assert_fail@plt+0x4e90>
   15edc:	bl	11404 <__errno_location@plt>
   15ee0:	movw	lr, #0
   15ee4:	str	lr, [r0]
   15ee8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15eec:	ldr	r0, [r0, #12]
   15ef0:	bl	11488 <readdir64@plt>
   15ef4:	str	r0, [sp, #88]	; 0x58
   15ef8:	ldr	r0, [sp, #88]	; 0x58
   15efc:	movw	lr, #0
   15f00:	cmp	r0, lr
   15f04:	bne	15f6c <__assert_fail@plt+0x4a24>
   15f08:	bl	11404 <__errno_location@plt>
   15f0c:	ldr	r0, [r0]
   15f10:	cmp	r0, #0
   15f14:	beq	15f68 <__assert_fail@plt+0x4a20>
   15f18:	bl	11404 <__errno_location@plt>
   15f1c:	ldr	r0, [r0]
   15f20:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15f24:	str	r0, [lr, #32]
   15f28:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15f2c:	tst	r0, #1
   15f30:	movw	r0, #1
   15f34:	str	r0, [sp, #28]
   15f38:	bne	15f50 <__assert_fail@plt+0x4a08>
   15f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f40:	cmp	r0, #0
   15f44:	movw	r0, #0
   15f48:	movne	r0, #1
   15f4c:	str	r0, [sp, #28]
   15f50:	ldr	r0, [sp, #28]
   15f54:	tst	r0, #1
   15f58:	movw	r0, #7
   15f5c:	moveq	r0, #4
   15f60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15f64:	strh	r0, [r1, #56]	; 0x38
   15f68:	b	163d8 <__assert_fail@plt+0x4e90>
   15f6c:	ldr	r0, [fp, #-8]
   15f70:	ldr	r0, [r0, #48]	; 0x30
   15f74:	and	r0, r0, #32
   15f78:	cmp	r0, #0
   15f7c:	bne	15fc4 <__assert_fail@plt+0x4a7c>
   15f80:	ldr	r0, [sp, #88]	; 0x58
   15f84:	ldrb	r0, [r0, #19]
   15f88:	cmp	r0, #46	; 0x2e
   15f8c:	bne	15fc4 <__assert_fail@plt+0x4a7c>
   15f90:	ldr	r0, [sp, #88]	; 0x58
   15f94:	ldrsb	r0, [r0, #20]
   15f98:	cmp	r0, #0
   15f9c:	beq	15fc0 <__assert_fail@plt+0x4a78>
   15fa0:	ldr	r0, [sp, #88]	; 0x58
   15fa4:	ldrb	r0, [r0, #20]
   15fa8:	cmp	r0, #46	; 0x2e
   15fac:	bne	15fc4 <__assert_fail@plt+0x4a7c>
   15fb0:	ldr	r0, [sp, #88]	; 0x58
   15fb4:	ldrsb	r0, [r0, #21]
   15fb8:	cmp	r0, #0
   15fbc:	bne	15fc4 <__assert_fail@plt+0x4a7c>
   15fc0:	b	15ec8 <__assert_fail@plt+0x4980>
   15fc4:	ldr	r0, [sp, #88]	; 0x58
   15fc8:	add	r0, r0, #19
   15fcc:	bl	113c8 <strlen@plt>
   15fd0:	str	r0, [fp, #-84]	; 0xffffffac
   15fd4:	ldr	r0, [fp, #-8]
   15fd8:	ldr	lr, [sp, #88]	; 0x58
   15fdc:	add	r1, lr, #19
   15fe0:	ldr	r2, [fp, #-84]	; 0xffffffac
   15fe4:	bl	14104 <__assert_fail@plt+0x2bbc>
   15fe8:	str	r0, [fp, #-16]
   15fec:	ldr	r0, [fp, #-16]
   15ff0:	movw	r1, #0
   15ff4:	cmp	r0, r1
   15ff8:	bne	16000 <__assert_fail@plt+0x4ab8>
   15ffc:	b	16040 <__assert_fail@plt+0x4af8>
   16000:	ldr	r0, [fp, #-84]	; 0xffffffac
   16004:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16008:	cmp	r0, r1
   1600c:	bcc	16110 <__assert_fail@plt+0x4bc8>
   16010:	ldr	r0, [fp, #-8]
   16014:	ldr	r0, [r0, #24]
   16018:	str	r0, [fp, #-32]	; 0xffffffe0
   1601c:	ldr	r0, [fp, #-8]
   16020:	ldr	r1, [fp, #-84]	; 0xffffffac
   16024:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16028:	add	r1, r1, r2
   1602c:	add	r1, r1, #1
   16030:	bl	1400c <__assert_fail@plt+0x2ac4>
   16034:	tst	r0, #1
   16038:	bne	160b4 <__assert_fail@plt+0x4b6c>
   1603c:	b	16040 <__assert_fail@plt+0x4af8>
   16040:	bl	11404 <__errno_location@plt>
   16044:	ldr	r0, [r0]
   16048:	str	r0, [fp, #-36]	; 0xffffffdc
   1604c:	ldr	r0, [fp, #-16]
   16050:	bl	1398c <__assert_fail@plt+0x2444>
   16054:	ldr	r0, [fp, #-20]	; 0xffffffec
   16058:	bl	147ac <__assert_fail@plt+0x3264>
   1605c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16060:	ldr	r0, [r0, #12]
   16064:	bl	11524 <closedir@plt>
   16068:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1606c:	movw	r1, #0
   16070:	str	r1, [lr, #12]
   16074:	str	r0, [sp, #24]
   16078:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1607c:	movw	r1, #7
   16080:	strh	r1, [r0, #56]	; 0x38
   16084:	ldr	r0, [fp, #-8]
   16088:	ldr	r1, [r0, #48]	; 0x30
   1608c:	orr	r1, r1, #8192	; 0x2000
   16090:	str	r1, [r0, #48]	; 0x30
   16094:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16098:	str	r0, [sp, #20]
   1609c:	bl	11404 <__errno_location@plt>
   160a0:	ldr	r1, [sp, #20]
   160a4:	str	r1, [r0]
   160a8:	movw	r0, #0
   160ac:	str	r0, [fp, #-4]
   160b0:	b	165f4 <__assert_fail@plt+0x50ac>
   160b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160b8:	ldr	r1, [fp, #-8]
   160bc:	ldr	r1, [r1, #24]
   160c0:	cmp	r0, r1
   160c4:	beq	160fc <__assert_fail@plt+0x4bb4>
   160c8:	movw	r0, #1
   160cc:	strb	r0, [fp, #-38]	; 0xffffffda
   160d0:	ldr	r0, [fp, #-8]
   160d4:	ldr	r0, [r0, #48]	; 0x30
   160d8:	and	r0, r0, #4
   160dc:	cmp	r0, #0
   160e0:	beq	160f8 <__assert_fail@plt+0x4bb0>
   160e4:	ldr	r0, [fp, #-8]
   160e8:	ldr	r0, [r0, #24]
   160ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   160f0:	add	r0, r0, r1
   160f4:	str	r0, [fp, #-60]	; 0xffffffc4
   160f8:	b	160fc <__assert_fail@plt+0x4bb4>
   160fc:	ldr	r0, [fp, #-8]
   16100:	ldr	r0, [r0, #36]	; 0x24
   16104:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16108:	sub	r0, r0, r1
   1610c:	str	r0, [fp, #-52]	; 0xffffffcc
   16110:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16114:	ldr	r1, [fp, #-84]	; 0xffffffac
   16118:	add	r0, r0, r1
   1611c:	str	r0, [fp, #-56]	; 0xffffffc8
   16120:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16124:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16128:	cmp	r0, r1
   1612c:	bcs	16190 <__assert_fail@plt+0x4c48>
   16130:	ldr	r0, [fp, #-16]
   16134:	bl	1398c <__assert_fail@plt+0x2444>
   16138:	ldr	r0, [fp, #-20]	; 0xffffffec
   1613c:	bl	147ac <__assert_fail@plt+0x3264>
   16140:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16144:	ldr	r0, [r0, #12]
   16148:	bl	11524 <closedir@plt>
   1614c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16150:	movw	r1, #0
   16154:	str	r1, [lr, #12]
   16158:	str	r0, [sp, #16]
   1615c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16160:	movw	r1, #7
   16164:	strh	r1, [r0, #56]	; 0x38
   16168:	ldr	r0, [fp, #-8]
   1616c:	ldr	r1, [r0, #48]	; 0x30
   16170:	orr	r1, r1, #8192	; 0x2000
   16174:	str	r1, [r0, #48]	; 0x30
   16178:	bl	11404 <__errno_location@plt>
   1617c:	movw	r1, #36	; 0x24
   16180:	str	r1, [r0]
   16184:	movw	r0, #0
   16188:	str	r0, [fp, #-4]
   1618c:	b	165f4 <__assert_fail@plt+0x50ac>
   16190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16194:	ldr	r1, [fp, #-16]
   16198:	str	r0, [r1, #48]	; 0x30
   1619c:	ldr	r0, [fp, #-8]
   161a0:	ldr	r0, [r0]
   161a4:	ldr	r1, [fp, #-16]
   161a8:	str	r0, [r1, #4]
   161ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   161b0:	ldr	r1, [fp, #-16]
   161b4:	str	r0, [r1, #40]	; 0x28
   161b8:	ldr	r0, [sp, #88]	; 0x58
   161bc:	ldr	r1, [r0]
   161c0:	ldr	r0, [r0, #4]
   161c4:	ldr	r2, [fp, #-16]
   161c8:	str	r0, [r2, #164]	; 0xa4
   161cc:	str	r1, [r2, #160]	; 0xa0
   161d0:	ldr	r0, [fp, #-8]
   161d4:	ldr	r0, [r0, #48]	; 0x30
   161d8:	and	r0, r0, #4
   161dc:	cmp	r0, #0
   161e0:	beq	16214 <__assert_fail@plt+0x4ccc>
   161e4:	ldr	r0, [fp, #-16]
   161e8:	ldr	r0, [r0, #28]
   161ec:	ldr	r1, [fp, #-16]
   161f0:	str	r0, [r1, #24]
   161f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   161f8:	ldr	r1, [fp, #-16]
   161fc:	add	r1, r1, #168	; 0xa8
   16200:	ldr	r2, [fp, #-16]
   16204:	ldr	r2, [r2, #52]	; 0x34
   16208:	add	r2, r2, #1
   1620c:	bl	11278 <memmove@plt>
   16210:	b	16224 <__assert_fail@plt+0x4cdc>
   16214:	ldr	r0, [fp, #-16]
   16218:	add	r0, r0, #168	; 0xa8
   1621c:	ldr	r1, [fp, #-16]
   16220:	str	r0, [r1, #24]
   16224:	ldr	r0, [fp, #-8]
   16228:	ldr	r0, [r0, #44]	; 0x2c
   1622c:	movw	r1, #0
   16230:	cmp	r0, r1
   16234:	beq	1624c <__assert_fail@plt+0x4d04>
   16238:	ldr	r0, [fp, #-8]
   1623c:	ldr	r0, [r0, #48]	; 0x30
   16240:	and	r0, r0, #1024	; 0x400
   16244:	cmp	r0, #0
   16248:	beq	16324 <__assert_fail@plt+0x4ddc>
   1624c:	ldr	r0, [fp, #-8]
   16250:	ldr	r0, [r0, #48]	; 0x30
   16254:	and	r0, r0, #8
   16258:	cmp	r0, #0
   1625c:	movw	r0, #0
   16260:	str	r0, [sp, #12]
   16264:	beq	162dc <__assert_fail@plt+0x4d94>
   16268:	ldr	r0, [sp, #88]	; 0x58
   1626c:	ldrb	r0, [r0, #18]
   16270:	cmp	r0, #0
   16274:	movw	r0, #0
   16278:	str	r0, [sp, #12]
   1627c:	beq	162dc <__assert_fail@plt+0x4d94>
   16280:	ldr	r0, [sp, #88]	; 0x58
   16284:	ldrb	r0, [r0, #18]
   16288:	cmp	r0, #4
   1628c:	movw	r0, #0
   16290:	str	r0, [sp, #12]
   16294:	beq	162dc <__assert_fail@plt+0x4d94>
   16298:	ldr	r0, [fp, #-8]
   1629c:	ldr	r0, [r0, #48]	; 0x30
   162a0:	and	r0, r0, #16
   162a4:	cmp	r0, #0
   162a8:	movw	r0, #1
   162ac:	str	r0, [sp, #8]
   162b0:	bne	162d4 <__assert_fail@plt+0x4d8c>
   162b4:	ldr	r0, [sp, #88]	; 0x58
   162b8:	ldrb	r0, [r0, #18]
   162bc:	cmp	r0, #10
   162c0:	movw	r0, #0
   162c4:	moveq	r0, #1
   162c8:	mvn	r1, #0
   162cc:	eor	r0, r0, r1
   162d0:	str	r0, [sp, #8]
   162d4:	ldr	r0, [sp, #8]
   162d8:	str	r0, [sp, #12]
   162dc:	ldr	r0, [sp, #12]
   162e0:	and	r0, r0, #1
   162e4:	strb	r0, [sp, #87]	; 0x57
   162e8:	ldr	r0, [fp, #-16]
   162ec:	movw	r1, #11
   162f0:	strh	r1, [r0, #56]	; 0x38
   162f4:	ldr	r0, [fp, #-16]
   162f8:	add	r0, r0, #64	; 0x40
   162fc:	ldr	r1, [sp, #88]	; 0x58
   16300:	ldrb	r1, [r1, #18]
   16304:	bl	16e94 <__assert_fail@plt+0x594c>
   16308:	ldr	r0, [fp, #-16]
   1630c:	ldrb	r1, [sp, #87]	; 0x57
   16310:	mvn	lr, #0
   16314:	eor	r1, r1, lr
   16318:	and	r1, r1, #1
   1631c:	bl	141fc <__assert_fail@plt+0x2cb4>
   16320:	b	16340 <__assert_fail@plt+0x4df8>
   16324:	ldr	r0, [fp, #-8]
   16328:	ldr	r1, [fp, #-16]
   1632c:	movw	r2, #0
   16330:	and	r2, r2, #1
   16334:	bl	14254 <__assert_fail@plt+0x2d0c>
   16338:	ldr	r1, [fp, #-16]
   1633c:	strh	r0, [r1, #56]	; 0x38
   16340:	ldr	r0, [fp, #-16]
   16344:	movw	r1, #0
   16348:	str	r1, [r0, #8]
   1634c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16350:	cmp	r0, r1
   16354:	bne	16368 <__assert_fail@plt+0x4e20>
   16358:	ldr	r0, [fp, #-16]
   1635c:	str	r0, [fp, #-28]	; 0xffffffe4
   16360:	str	r0, [fp, #-20]	; 0xffffffec
   16364:	b	1637c <__assert_fail@plt+0x4e34>
   16368:	ldr	r0, [fp, #-16]
   1636c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16370:	str	r0, [r1, #8]
   16374:	ldr	r0, [fp, #-16]
   16378:	str	r0, [fp, #-28]	; 0xffffffe4
   1637c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16380:	movw	r1, #10000	; 0x2710
   16384:	cmp	r0, r1
   16388:	bne	163b4 <__assert_fail@plt+0x4e6c>
   1638c:	ldr	r0, [fp, #-8]
   16390:	ldr	r0, [r0, #44]	; 0x2c
   16394:	movw	r1, #0
   16398:	cmp	r0, r1
   1639c:	bne	163b4 <__assert_fail@plt+0x4e6c>
   163a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163a4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   163a8:	bl	16f64 <__assert_fail@plt+0x5a1c>
   163ac:	and	r0, r0, #1
   163b0:	strb	r0, [fp, #-70]	; 0xffffffba
   163b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b8:	add	r0, r0, #1
   163bc:	str	r0, [fp, #-24]	; 0xffffffe8
   163c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   163c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163c8:	cmp	r0, r1
   163cc:	bhi	163d4 <__assert_fail@plt+0x4e8c>
   163d0:	b	16414 <__assert_fail@plt+0x4ecc>
   163d4:	b	15ec8 <__assert_fail@plt+0x4980>
   163d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163dc:	ldr	r0, [r0, #12]
   163e0:	movw	r1, #0
   163e4:	cmp	r0, r1
   163e8:	beq	16410 <__assert_fail@plt+0x4ec8>
   163ec:	b	163f0 <__assert_fail@plt+0x4ea8>
   163f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163f4:	ldr	r0, [r0, #12]
   163f8:	bl	11524 <closedir@plt>
   163fc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16400:	movw	r1, #0
   16404:	str	r1, [lr, #12]
   16408:	str	r0, [sp, #4]
   1640c:	b	16410 <__assert_fail@plt+0x4ec8>
   16410:	b	16414 <__assert_fail@plt+0x4ecc>
   16414:	ldrb	r0, [fp, #-38]	; 0xffffffda
   16418:	tst	r0, #1
   1641c:	beq	1642c <__assert_fail@plt+0x4ee4>
   16420:	ldr	r0, [fp, #-8]
   16424:	ldr	r1, [fp, #-20]	; 0xffffffec
   16428:	bl	16ff8 <__assert_fail@plt+0x5ab0>
   1642c:	ldr	r0, [fp, #-8]
   16430:	ldr	r0, [r0, #48]	; 0x30
   16434:	and	r0, r0, #4
   16438:	cmp	r0, #0
   1643c:	beq	1647c <__assert_fail@plt+0x4f34>
   16440:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16444:	ldr	r1, [fp, #-8]
   16448:	ldr	r1, [r1, #36]	; 0x24
   1644c:	cmp	r0, r1
   16450:	beq	16460 <__assert_fail@plt+0x4f18>
   16454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16458:	cmp	r0, #0
   1645c:	bne	16470 <__assert_fail@plt+0x4f28>
   16460:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16464:	mvn	r1, #0
   16468:	add	r0, r0, r1
   1646c:	str	r0, [fp, #-60]	; 0xffffffc4
   16470:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16474:	movw	r1, #0
   16478:	strb	r1, [r0]
   1647c:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   16480:	tst	r0, #1
   16484:	bne	16524 <__assert_fail@plt+0x4fdc>
   16488:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1648c:	tst	r0, #1
   16490:	beq	16524 <__assert_fail@plt+0x4fdc>
   16494:	ldr	r0, [fp, #-12]
   16498:	cmp	r0, #1
   1649c:	beq	164ac <__assert_fail@plt+0x4f64>
   164a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164a4:	cmp	r0, #0
   164a8:	bne	16524 <__assert_fail@plt+0x4fdc>
   164ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164b0:	ldr	r0, [r0, #48]	; 0x30
   164b4:	cmp	r0, #0
   164b8:	bne	164d0 <__assert_fail@plt+0x4f88>
   164bc:	ldr	r0, [fp, #-8]
   164c0:	bl	16604 <__assert_fail@plt+0x50bc>
   164c4:	cmp	r0, #0
   164c8:	bne	164f4 <__assert_fail@plt+0x4fac>
   164cc:	b	16524 <__assert_fail@plt+0x4fdc>
   164d0:	ldr	r0, [fp, #-8]
   164d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   164d8:	ldr	r1, [r1, #4]
   164dc:	mvn	r2, #0
   164e0:	movw	r3, #23258	; 0x5ada
   164e4:	movt	r3, #2
   164e8:	bl	15664 <__assert_fail@plt+0x411c>
   164ec:	cmp	r0, #0
   164f0:	beq	16524 <__assert_fail@plt+0x4fdc>
   164f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164f8:	movw	r1, #7
   164fc:	strh	r1, [r0, #56]	; 0x38
   16500:	ldr	r0, [fp, #-8]
   16504:	ldr	r1, [r0, #48]	; 0x30
   16508:	orr	r1, r1, #8192	; 0x2000
   1650c:	str	r1, [r0, #48]	; 0x30
   16510:	ldr	r0, [fp, #-20]	; 0xffffffec
   16514:	bl	147ac <__assert_fail@plt+0x3264>
   16518:	movw	r0, #0
   1651c:	str	r0, [fp, #-4]
   16520:	b	165f4 <__assert_fail@plt+0x50ac>
   16524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16528:	cmp	r0, #0
   1652c:	bne	1657c <__assert_fail@plt+0x5034>
   16530:	ldr	r0, [fp, #-12]
   16534:	cmp	r0, #3
   16538:	bne	16568 <__assert_fail@plt+0x5020>
   1653c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16540:	ldrh	r0, [r0, #56]	; 0x38
   16544:	cmp	r0, #4
   16548:	beq	16568 <__assert_fail@plt+0x5020>
   1654c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16550:	ldrh	r0, [r0, #56]	; 0x38
   16554:	cmp	r0, #7
   16558:	beq	16568 <__assert_fail@plt+0x5020>
   1655c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16560:	movw	r1, #6
   16564:	strh	r1, [r0, #56]	; 0x38
   16568:	ldr	r0, [fp, #-20]	; 0xffffffec
   1656c:	bl	147ac <__assert_fail@plt+0x3264>
   16570:	movw	r0, #0
   16574:	str	r0, [fp, #-4]
   16578:	b	165f4 <__assert_fail@plt+0x50ac>
   1657c:	ldrb	r0, [fp, #-70]	; 0xffffffba
   16580:	tst	r0, #1
   16584:	beq	165b8 <__assert_fail@plt+0x5070>
   16588:	ldr	r0, [fp, #-8]
   1658c:	movw	r1, #28980	; 0x7134
   16590:	movt	r1, #1
   16594:	str	r1, [r0, #44]	; 0x2c
   16598:	ldr	r0, [fp, #-8]
   1659c:	ldr	r1, [fp, #-20]	; 0xffffffec
   165a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165a4:	bl	1446c <__assert_fail@plt+0x2f24>
   165a8:	str	r0, [fp, #-20]	; 0xffffffec
   165ac:	ldr	r0, [fp, #-8]
   165b0:	movw	r1, #0
   165b4:	str	r1, [r0, #44]	; 0x2c
   165b8:	ldr	r0, [fp, #-8]
   165bc:	ldr	r0, [r0, #44]	; 0x2c
   165c0:	movw	r1, #0
   165c4:	cmp	r0, r1
   165c8:	beq	165ec <__assert_fail@plt+0x50a4>
   165cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d0:	cmp	r0, #1
   165d4:	bls	165ec <__assert_fail@plt+0x50a4>
   165d8:	ldr	r0, [fp, #-8]
   165dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   165e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165e4:	bl	1446c <__assert_fail@plt+0x2f24>
   165e8:	str	r0, [fp, #-20]	; 0xffffffec
   165ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   165f0:	str	r0, [fp, #-4]
   165f4:	ldr	r0, [fp, #-4]
   165f8:	mov	sp, fp
   165fc:	pop	{fp, pc}
   16600:	andeq	r8, r1, r0, lsr #13
   16604:	push	{fp, lr}
   16608:	mov	fp, sp
   1660c:	sub	sp, sp, #32
   16610:	str	r0, [fp, #-4]
   16614:	ldr	r0, [fp, #-4]
   16618:	ldr	r0, [r0, #48]	; 0x30
   1661c:	and	r0, r0, #4
   16620:	cmp	r0, #0
   16624:	movw	r0, #0
   16628:	str	r0, [fp, #-12]
   1662c:	bne	166f0 <__assert_fail@plt+0x51a8>
   16630:	ldr	r0, [fp, #-4]
   16634:	ldr	r0, [r0, #48]	; 0x30
   16638:	and	r0, r0, #512	; 0x200
   1663c:	cmp	r0, #0
   16640:	beq	166a4 <__assert_fail@plt+0x515c>
   16644:	ldr	r0, [fp, #-4]
   16648:	ldr	r1, [fp, #-4]
   1664c:	ldr	r1, [r1, #48]	; 0x30
   16650:	and	r1, r1, #512	; 0x200
   16654:	cmp	r1, #0
   16658:	str	r0, [sp, #16]
   1665c:	beq	1666c <__assert_fail@plt+0x5124>
   16660:	mvn	r0, #99	; 0x63
   16664:	str	r0, [sp, #12]
   16668:	b	16678 <__assert_fail@plt+0x5130>
   1666c:	ldr	r0, [fp, #-4]
   16670:	ldr	r0, [r0, #28]
   16674:	str	r0, [sp, #12]
   16678:	ldr	r0, [sp, #12]
   1667c:	ldr	r1, [sp, #16]
   16680:	str	r0, [sp, #8]
   16684:	mov	r0, r1
   16688:	ldr	r1, [sp, #8]
   1668c:	movw	r2, #1
   16690:	and	r2, r2, #1
   16694:	bl	16954 <__assert_fail@plt+0x540c>
   16698:	movw	r0, #0
   1669c:	str	r0, [sp, #4]
   166a0:	b	166dc <__assert_fail@plt+0x5194>
   166a4:	ldr	r0, [fp, #-4]
   166a8:	ldr	r0, [r0, #48]	; 0x30
   166ac:	and	r0, r0, #512	; 0x200
   166b0:	cmp	r0, #0
   166b4:	beq	166c4 <__assert_fail@plt+0x517c>
   166b8:	mvn	r0, #99	; 0x63
   166bc:	str	r0, [sp]
   166c0:	b	166d0 <__assert_fail@plt+0x5188>
   166c4:	ldr	r0, [fp, #-4]
   166c8:	ldr	r0, [r0, #28]
   166cc:	str	r0, [sp]
   166d0:	ldr	r0, [sp]
   166d4:	bl	114ac <fchdir@plt>
   166d8:	str	r0, [sp, #4]
   166dc:	ldr	r0, [sp, #4]
   166e0:	cmp	r0, #0
   166e4:	movw	r0, #0
   166e8:	movne	r0, #1
   166ec:	str	r0, [fp, #-12]
   166f0:	ldr	r0, [fp, #-12]
   166f4:	and	r0, r0, #1
   166f8:	str	r0, [fp, #-8]
   166fc:	ldr	r0, [fp, #-4]
   16700:	add	r0, r0, #60	; 0x3c
   16704:	bl	14a1c <__assert_fail@plt+0x34d4>
   16708:	ldr	r0, [fp, #-8]
   1670c:	mov	sp, fp
   16710:	pop	{fp, pc}
   16714:	push	{fp, lr}
   16718:	mov	fp, sp
   1671c:	sub	sp, sp, #16
   16720:	str	r0, [fp, #-4]
   16724:	str	r1, [sp, #8]
   16728:	ldr	r0, [sp, #8]
   1672c:	ldr	r0, [r0, #52]	; 0x34
   16730:	ldr	r1, [sp, #8]
   16734:	str	r0, [r1, #40]	; 0x28
   16738:	str	r0, [sp, #4]
   1673c:	ldr	r0, [fp, #-4]
   16740:	ldr	r0, [r0, #24]
   16744:	ldr	r1, [sp, #8]
   16748:	add	r1, r1, #168	; 0xa8
   1674c:	ldr	r2, [sp, #4]
   16750:	add	r2, r2, #1
   16754:	bl	11278 <memmove@plt>
   16758:	ldr	r0, [sp, #8]
   1675c:	add	r0, r0, #168	; 0xa8
   16760:	movw	r1, #47	; 0x2f
   16764:	bl	11470 <strrchr@plt>
   16768:	str	r0, [sp]
   1676c:	movw	r1, #0
   16770:	cmp	r0, r1
   16774:	beq	167d4 <__assert_fail@plt+0x528c>
   16778:	ldr	r0, [sp]
   1677c:	ldr	r1, [sp, #8]
   16780:	add	r1, r1, #168	; 0xa8
   16784:	cmp	r0, r1
   16788:	bne	1679c <__assert_fail@plt+0x5254>
   1678c:	ldr	r0, [sp]
   16790:	ldrb	r0, [r0, #1]
   16794:	cmp	r0, #0
   16798:	beq	167d4 <__assert_fail@plt+0x528c>
   1679c:	ldr	r0, [sp]
   167a0:	add	r0, r0, #1
   167a4:	str	r0, [sp]
   167a8:	bl	113c8 <strlen@plt>
   167ac:	str	r0, [sp, #4]
   167b0:	ldr	r0, [sp, #8]
   167b4:	add	r0, r0, #168	; 0xa8
   167b8:	ldr	r1, [sp]
   167bc:	ldr	lr, [sp, #4]
   167c0:	add	r2, lr, #1
   167c4:	bl	11278 <memmove@plt>
   167c8:	ldr	r0, [sp, #4]
   167cc:	ldr	r1, [sp, #8]
   167d0:	str	r0, [r1, #52]	; 0x34
   167d4:	ldr	r0, [fp, #-4]
   167d8:	ldr	r0, [r0, #24]
   167dc:	ldr	r1, [sp, #8]
   167e0:	str	r0, [r1, #28]
   167e4:	ldr	r1, [sp, #8]
   167e8:	str	r0, [r1, #24]
   167ec:	mov	sp, fp
   167f0:	pop	{fp, pc}
   167f4:	push	{fp, lr}
   167f8:	mov	fp, sp
   167fc:	sub	sp, sp, #24
   16800:	str	r0, [fp, #-8]
   16804:	str	r1, [sp, #12]
   16808:	ldr	r0, [fp, #-8]
   1680c:	ldr	r0, [r0, #48]	; 0x30
   16810:	movw	r1, #258	; 0x102
   16814:	and	r0, r0, r1
   16818:	cmp	r0, #0
   1681c:	beq	16900 <__assert_fail@plt+0x53b8>
   16820:	ldr	r0, [sp, #12]
   16824:	add	r0, r0, #64	; 0x40
   16828:	str	r0, [sp, #8]
   1682c:	movw	r0, #24
   16830:	bl	219a8 <__assert_fail@plt+0x10460>
   16834:	str	r0, [sp, #4]
   16838:	ldr	r0, [sp, #4]
   1683c:	movw	lr, #0
   16840:	cmp	r0, lr
   16844:	bne	16858 <__assert_fail@plt+0x5310>
   16848:	movw	r0, #0
   1684c:	and	r0, r0, #1
   16850:	strb	r0, [fp, #-1]
   16854:	b	16944 <__assert_fail@plt+0x53fc>
   16858:	ldr	r0, [sp, #8]
   1685c:	ldr	r1, [r0]
   16860:	ldr	r0, [r0, #4]
   16864:	ldr	r2, [sp, #4]
   16868:	str	r0, [r2, #4]
   1686c:	str	r1, [r2]
   16870:	ldr	r0, [sp, #8]
   16874:	ldr	r1, [r0, #96]	; 0x60
   16878:	ldr	r0, [r0, #100]	; 0x64
   1687c:	ldr	r2, [sp, #4]
   16880:	str	r0, [r2, #12]
   16884:	str	r1, [r2, #8]
   16888:	ldr	r0, [sp, #12]
   1688c:	ldr	r1, [sp, #4]
   16890:	str	r0, [r1, #16]
   16894:	ldr	r0, [fp, #-8]
   16898:	ldr	r0, [r0, #56]	; 0x38
   1689c:	ldr	r1, [sp, #4]
   168a0:	bl	18cb0 <__assert_fail@plt+0x7768>
   168a4:	str	r0, [sp]
   168a8:	ldr	r0, [sp]
   168ac:	ldr	r1, [sp, #4]
   168b0:	cmp	r0, r1
   168b4:	beq	168fc <__assert_fail@plt+0x53b4>
   168b8:	ldr	r0, [sp, #4]
   168bc:	bl	1398c <__assert_fail@plt+0x2444>
   168c0:	ldr	r0, [sp]
   168c4:	movw	lr, #0
   168c8:	cmp	r0, lr
   168cc:	bne	168e0 <__assert_fail@plt+0x5398>
   168d0:	movw	r0, #0
   168d4:	and	r0, r0, #1
   168d8:	strb	r0, [fp, #-1]
   168dc:	b	16944 <__assert_fail@plt+0x53fc>
   168e0:	ldr	r0, [sp]
   168e4:	ldr	r0, [r0, #16]
   168e8:	ldr	r1, [sp, #12]
   168ec:	str	r0, [r1]
   168f0:	ldr	r0, [sp, #12]
   168f4:	movw	r1, #2
   168f8:	strh	r1, [r0, #56]	; 0x38
   168fc:	b	16938 <__assert_fail@plt+0x53f0>
   16900:	ldr	r0, [fp, #-8]
   16904:	ldr	r0, [r0, #56]	; 0x38
   16908:	ldr	r1, [sp, #12]
   1690c:	add	r1, r1, #64	; 0x40
   16910:	bl	21f54 <__assert_fail@plt+0x10a0c>
   16914:	tst	r0, #1
   16918:	beq	16934 <__assert_fail@plt+0x53ec>
   1691c:	ldr	r0, [sp, #12]
   16920:	ldr	r1, [sp, #12]
   16924:	str	r0, [r1]
   16928:	ldr	r0, [sp, #12]
   1692c:	movw	r1, #2
   16930:	strh	r1, [r0, #56]	; 0x38
   16934:	b	16938 <__assert_fail@plt+0x53f0>
   16938:	movw	r0, #1
   1693c:	and	r0, r0, #1
   16940:	strb	r0, [fp, #-1]
   16944:	ldrb	r0, [fp, #-1]
   16948:	and	r0, r0, #1
   1694c:	mov	sp, fp
   16950:	pop	{fp, pc}
   16954:	push	{fp, lr}
   16958:	mov	fp, sp
   1695c:	sub	sp, sp, #32
   16960:	str	r0, [fp, #-4]
   16964:	str	r1, [fp, #-8]
   16968:	and	r0, r2, #1
   1696c:	strb	r0, [fp, #-9]
   16970:	ldr	r0, [fp, #-4]
   16974:	ldr	r0, [r0, #32]
   16978:	str	r0, [sp, #16]
   1697c:	ldr	r0, [sp, #16]
   16980:	ldr	r1, [fp, #-8]
   16984:	cmp	r0, r1
   16988:	bne	1699c <__assert_fail@plt+0x5454>
   1698c:	ldr	r0, [sp, #16]
   16990:	cmn	r0, #100	; 0x64
   16994:	beq	1699c <__assert_fail@plt+0x5454>
   16998:	bl	11500 <abort@plt>
   1699c:	b	169a0 <__assert_fail@plt+0x5458>
   169a0:	ldrb	r0, [fp, #-9]
   169a4:	tst	r0, #1
   169a8:	beq	169e0 <__assert_fail@plt+0x5498>
   169ac:	ldr	r0, [fp, #-4]
   169b0:	add	r0, r0, #60	; 0x3c
   169b4:	ldr	r1, [sp, #16]
   169b8:	bl	19174 <__assert_fail@plt+0x7c2c>
   169bc:	str	r0, [sp, #12]
   169c0:	ldr	r0, [sp, #12]
   169c4:	movw	r1, #0
   169c8:	cmp	r1, r0
   169cc:	bgt	169dc <__assert_fail@plt+0x5494>
   169d0:	ldr	r0, [sp, #12]
   169d4:	bl	1150c <close@plt>
   169d8:	str	r0, [sp, #8]
   169dc:	b	16a18 <__assert_fail@plt+0x54d0>
   169e0:	ldr	r0, [fp, #-4]
   169e4:	ldr	r0, [r0, #48]	; 0x30
   169e8:	and	r0, r0, #4
   169ec:	cmp	r0, #0
   169f0:	bne	16a14 <__assert_fail@plt+0x54cc>
   169f4:	ldr	r0, [sp, #16]
   169f8:	movw	r1, #0
   169fc:	cmp	r1, r0
   16a00:	bgt	16a10 <__assert_fail@plt+0x54c8>
   16a04:	ldr	r0, [sp, #16]
   16a08:	bl	1150c <close@plt>
   16a0c:	str	r0, [sp, #4]
   16a10:	b	16a14 <__assert_fail@plt+0x54cc>
   16a14:	b	16a18 <__assert_fail@plt+0x54d0>
   16a18:	ldr	r0, [fp, #-8]
   16a1c:	ldr	r1, [fp, #-4]
   16a20:	str	r0, [r1, #32]
   16a24:	mov	sp, fp
   16a28:	pop	{fp, pc}
   16a2c:	push	{fp, lr}
   16a30:	mov	fp, sp
   16a34:	sub	sp, sp, #16
   16a38:	str	r0, [sp, #8]
   16a3c:	str	r1, [sp, #4]
   16a40:	str	r2, [sp]
   16a44:	ldr	r0, [sp]
   16a48:	cmp	r0, #0
   16a4c:	beq	16a98 <__assert_fail@plt+0x5550>
   16a50:	ldr	r0, [sp]
   16a54:	cmp	r0, #1
   16a58:	beq	16a98 <__assert_fail@plt+0x5550>
   16a5c:	ldr	r0, [sp]
   16a60:	cmp	r0, #2
   16a64:	beq	16a98 <__assert_fail@plt+0x5550>
   16a68:	ldr	r0, [sp]
   16a6c:	cmp	r0, #3
   16a70:	beq	16a98 <__assert_fail@plt+0x5550>
   16a74:	ldr	r0, [sp]
   16a78:	cmp	r0, #4
   16a7c:	beq	16a98 <__assert_fail@plt+0x5550>
   16a80:	bl	11404 <__errno_location@plt>
   16a84:	movw	lr, #22
   16a88:	str	lr, [r0]
   16a8c:	movw	r0, #1
   16a90:	str	r0, [fp, #-4]
   16a94:	b	16aac <__assert_fail@plt+0x5564>
   16a98:	ldr	r0, [sp]
   16a9c:	ldr	r1, [sp, #4]
   16aa0:	strh	r0, [r1, #60]	; 0x3c
   16aa4:	movw	r0, #0
   16aa8:	str	r0, [fp, #-4]
   16aac:	ldr	r0, [fp, #-4]
   16ab0:	mov	sp, fp
   16ab4:	pop	{fp, pc}
   16ab8:	push	{fp, lr}
   16abc:	mov	fp, sp
   16ac0:	sub	sp, sp, #40	; 0x28
   16ac4:	str	r0, [fp, #-8]
   16ac8:	str	r1, [fp, #-12]
   16acc:	ldr	r0, [fp, #-12]
   16ad0:	cmp	r0, #0
   16ad4:	beq	16afc <__assert_fail@plt+0x55b4>
   16ad8:	ldr	r0, [fp, #-12]
   16adc:	cmp	r0, #4096	; 0x1000
   16ae0:	beq	16afc <__assert_fail@plt+0x55b4>
   16ae4:	bl	11404 <__errno_location@plt>
   16ae8:	movw	lr, #22
   16aec:	str	lr, [r0]
   16af0:	movw	r0, #0
   16af4:	str	r0, [fp, #-4]
   16af8:	b	16ce4 <__assert_fail@plt+0x579c>
   16afc:	ldr	r0, [fp, #-8]
   16b00:	ldr	r0, [r0]
   16b04:	str	r0, [fp, #-16]
   16b08:	bl	11404 <__errno_location@plt>
   16b0c:	movw	lr, #0
   16b10:	str	lr, [r0]
   16b14:	ldr	r0, [fp, #-8]
   16b18:	ldr	r0, [r0, #48]	; 0x30
   16b1c:	and	r0, r0, #8192	; 0x2000
   16b20:	cmp	r0, #0
   16b24:	beq	16b34 <__assert_fail@plt+0x55ec>
   16b28:	movw	r0, #0
   16b2c:	str	r0, [fp, #-4]
   16b30:	b	16ce4 <__assert_fail@plt+0x579c>
   16b34:	ldr	r0, [fp, #-16]
   16b38:	ldrh	r0, [r0, #56]	; 0x38
   16b3c:	cmp	r0, #9
   16b40:	bne	16b54 <__assert_fail@plt+0x560c>
   16b44:	ldr	r0, [fp, #-16]
   16b48:	ldr	r0, [r0, #8]
   16b4c:	str	r0, [fp, #-4]
   16b50:	b	16ce4 <__assert_fail@plt+0x579c>
   16b54:	ldr	r0, [fp, #-16]
   16b58:	ldrh	r0, [r0, #56]	; 0x38
   16b5c:	cmp	r0, #1
   16b60:	beq	16b70 <__assert_fail@plt+0x5628>
   16b64:	movw	r0, #0
   16b68:	str	r0, [fp, #-4]
   16b6c:	b	16ce4 <__assert_fail@plt+0x579c>
   16b70:	ldr	r0, [fp, #-8]
   16b74:	ldr	r0, [r0, #4]
   16b78:	movw	r1, #0
   16b7c:	cmp	r0, r1
   16b80:	beq	16b90 <__assert_fail@plt+0x5648>
   16b84:	ldr	r0, [fp, #-8]
   16b88:	ldr	r0, [r0, #4]
   16b8c:	bl	147ac <__assert_fail@plt+0x3264>
   16b90:	ldr	r0, [fp, #-12]
   16b94:	cmp	r0, #4096	; 0x1000
   16b98:	bne	16bb8 <__assert_fail@plt+0x5670>
   16b9c:	ldr	r0, [fp, #-8]
   16ba0:	ldr	r1, [r0, #48]	; 0x30
   16ba4:	orr	r1, r1, #4096	; 0x1000
   16ba8:	str	r1, [r0, #48]	; 0x30
   16bac:	movw	r0, #2
   16bb0:	str	r0, [fp, #-12]
   16bb4:	b	16bc0 <__assert_fail@plt+0x5678>
   16bb8:	movw	r0, #1
   16bbc:	str	r0, [fp, #-12]
   16bc0:	ldr	r0, [fp, #-16]
   16bc4:	ldr	r0, [r0, #48]	; 0x30
   16bc8:	cmp	r0, #0
   16bcc:	bne	16bf8 <__assert_fail@plt+0x56b0>
   16bd0:	ldr	r0, [fp, #-16]
   16bd4:	ldr	r0, [r0, #24]
   16bd8:	ldrb	r0, [r0]
   16bdc:	cmp	r0, #47	; 0x2f
   16be0:	beq	16bf8 <__assert_fail@plt+0x56b0>
   16be4:	ldr	r0, [fp, #-8]
   16be8:	ldr	r0, [r0, #48]	; 0x30
   16bec:	and	r0, r0, #4
   16bf0:	cmp	r0, #0
   16bf4:	beq	16c14 <__assert_fail@plt+0x56cc>
   16bf8:	ldr	r0, [fp, #-8]
   16bfc:	ldr	r1, [fp, #-12]
   16c00:	bl	15928 <__assert_fail@plt+0x43e0>
   16c04:	ldr	r1, [fp, #-8]
   16c08:	str	r0, [r1, #4]
   16c0c:	str	r0, [fp, #-4]
   16c10:	b	16ce4 <__assert_fail@plt+0x579c>
   16c14:	ldr	r0, [fp, #-8]
   16c18:	movw	r1, #23259	; 0x5adb
   16c1c:	movt	r1, #2
   16c20:	bl	14710 <__assert_fail@plt+0x31c8>
   16c24:	str	r0, [sp, #20]
   16c28:	cmp	r0, #0
   16c2c:	bge	16c44 <__assert_fail@plt+0x56fc>
   16c30:	ldr	r0, [fp, #-8]
   16c34:	movw	r1, #0
   16c38:	str	r1, [r0, #4]
   16c3c:	str	r1, [fp, #-4]
   16c40:	b	16ce4 <__assert_fail@plt+0x579c>
   16c44:	ldr	r0, [fp, #-8]
   16c48:	ldr	r1, [fp, #-12]
   16c4c:	bl	15928 <__assert_fail@plt+0x43e0>
   16c50:	ldr	r1, [fp, #-8]
   16c54:	str	r0, [r1, #4]
   16c58:	ldr	r0, [fp, #-8]
   16c5c:	ldr	r0, [r0, #48]	; 0x30
   16c60:	and	r0, r0, #512	; 0x200
   16c64:	cmp	r0, #0
   16c68:	beq	16c84 <__assert_fail@plt+0x573c>
   16c6c:	ldr	r0, [fp, #-8]
   16c70:	ldr	r1, [sp, #20]
   16c74:	movw	r2, #1
   16c78:	and	r2, r2, #1
   16c7c:	bl	16954 <__assert_fail@plt+0x540c>
   16c80:	b	16cd8 <__assert_fail@plt+0x5790>
   16c84:	ldr	r0, [sp, #20]
   16c88:	bl	114ac <fchdir@plt>
   16c8c:	cmp	r0, #0
   16c90:	beq	16ccc <__assert_fail@plt+0x5784>
   16c94:	bl	11404 <__errno_location@plt>
   16c98:	ldr	r0, [r0]
   16c9c:	str	r0, [sp, #16]
   16ca0:	ldr	r0, [sp, #20]
   16ca4:	bl	1150c <close@plt>
   16ca8:	ldr	lr, [sp, #16]
   16cac:	str	r0, [sp, #12]
   16cb0:	str	lr, [sp, #8]
   16cb4:	bl	11404 <__errno_location@plt>
   16cb8:	ldr	lr, [sp, #8]
   16cbc:	str	lr, [r0]
   16cc0:	movw	r0, #0
   16cc4:	str	r0, [fp, #-4]
   16cc8:	b	16ce4 <__assert_fail@plt+0x579c>
   16ccc:	ldr	r0, [sp, #20]
   16cd0:	bl	1150c <close@plt>
   16cd4:	str	r0, [sp, #4]
   16cd8:	ldr	r0, [fp, #-8]
   16cdc:	ldr	r0, [r0, #4]
   16ce0:	str	r0, [fp, #-4]
   16ce4:	ldr	r0, [fp, #-4]
   16ce8:	mov	sp, fp
   16cec:	pop	{fp, pc}
   16cf0:	push	{fp, lr}
   16cf4:	mov	fp, sp
   16cf8:	sub	sp, sp, #24
   16cfc:	str	r0, [fp, #-4]
   16d00:	str	r1, [fp, #-8]
   16d04:	ldr	r0, [fp, #-4]
   16d08:	str	r0, [sp, #12]
   16d0c:	ldr	r0, [sp, #12]
   16d10:	ldr	r1, [r0, #8]
   16d14:	ldr	r0, [r0, #12]
   16d18:	ldr	r2, [fp, #-8]
   16d1c:	mov	r3, #0
   16d20:	str	r0, [sp, #8]
   16d24:	mov	r0, r1
   16d28:	ldr	r1, [sp, #8]
   16d2c:	bl	247c4 <__assert_fail@plt+0x1327c>
   16d30:	str	r0, [sp, #4]
   16d34:	mov	r0, r2
   16d38:	str	r1, [sp]
   16d3c:	mov	sp, fp
   16d40:	pop	{fp, pc}
   16d44:	sub	sp, sp, #20
   16d48:	str	r0, [sp, #16]
   16d4c:	str	r1, [sp, #12]
   16d50:	ldr	r0, [sp, #16]
   16d54:	str	r0, [sp, #8]
   16d58:	ldr	r0, [sp, #12]
   16d5c:	str	r0, [sp, #4]
   16d60:	ldr	r0, [sp, #8]
   16d64:	ldr	r1, [r0, #8]
   16d68:	ldr	r0, [r0, #12]
   16d6c:	ldr	r2, [sp, #4]
   16d70:	ldr	r3, [r2, #8]
   16d74:	ldr	r2, [r2, #12]
   16d78:	eor	r0, r0, r2
   16d7c:	eor	r1, r1, r3
   16d80:	orr	r0, r1, r0
   16d84:	mov	r1, #0
   16d88:	cmp	r0, #0
   16d8c:	str	r1, [sp]
   16d90:	bne	16dc8 <__assert_fail@plt+0x5880>
   16d94:	b	16d98 <__assert_fail@plt+0x5850>
   16d98:	ldr	r0, [sp, #8]
   16d9c:	ldr	r1, [r0]
   16da0:	ldr	r0, [r0, #4]
   16da4:	ldr	r2, [sp, #4]
   16da8:	ldr	r3, [r2]
   16dac:	ldr	r2, [r2, #4]
   16db0:	eor	r0, r0, r2
   16db4:	eor	r1, r1, r3
   16db8:	orr	r0, r1, r0
   16dbc:	clz	r0, r0
   16dc0:	lsr	r0, r0, #5
   16dc4:	str	r0, [sp]
   16dc8:	ldr	r0, [sp]
   16dcc:	and	r0, r0, #1
   16dd0:	add	sp, sp, #20
   16dd4:	bx	lr
   16dd8:	push	{fp, lr}
   16ddc:	mov	fp, sp
   16de0:	sub	sp, sp, #16
   16de4:	str	r0, [sp, #8]
   16de8:	str	r1, [sp, #4]
   16dec:	ldr	r0, [sp, #8]
   16df0:	ldr	r1, [sp, #4]
   16df4:	bl	171ac <__assert_fail@plt+0x5c64>
   16df8:	mov	r1, r0
   16dfc:	movw	lr, #19778	; 0x4d42
   16e00:	movt	lr, #65363	; 0xff53
   16e04:	cmp	r0, lr
   16e08:	str	r1, [sp]
   16e0c:	beq	16e6c <__assert_fail@plt+0x5924>
   16e10:	b	16e14 <__assert_fail@plt+0x58cc>
   16e14:	ldr	r0, [sp]
   16e18:	cmp	r0, #0
   16e1c:	beq	16e64 <__assert_fail@plt+0x591c>
   16e20:	b	16e24 <__assert_fail@plt+0x58dc>
   16e24:	movw	r0, #26985	; 0x6969
   16e28:	ldr	r1, [sp]
   16e2c:	cmp	r1, r0
   16e30:	beq	16e70 <__assert_fail@plt+0x5928>
   16e34:	b	16e38 <__assert_fail@plt+0x58f0>
   16e38:	movw	r0, #40864	; 0x9fa0
   16e3c:	ldr	r1, [sp]
   16e40:	cmp	r1, r0
   16e44:	beq	16e74 <__assert_fail@plt+0x592c>
   16e48:	b	16e4c <__assert_fail@plt+0x5904>
   16e4c:	movw	r0, #16719	; 0x414f
   16e50:	movt	r0, #21318	; 0x5346
   16e54:	ldr	r1, [sp]
   16e58:	cmp	r1, r0
   16e5c:	beq	16e68 <__assert_fail@plt+0x5920>
   16e60:	b	16e80 <__assert_fail@plt+0x5938>
   16e64:	b	16e68 <__assert_fail@plt+0x5920>
   16e68:	b	16e6c <__assert_fail@plt+0x5924>
   16e6c:	b	16e70 <__assert_fail@plt+0x5928>
   16e70:	b	16e74 <__assert_fail@plt+0x592c>
   16e74:	movw	r0, #0
   16e78:	str	r0, [fp, #-4]
   16e7c:	b	16e88 <__assert_fail@plt+0x5940>
   16e80:	movw	r0, #1
   16e84:	str	r0, [fp, #-4]
   16e88:	ldr	r0, [fp, #-4]
   16e8c:	mov	sp, fp
   16e90:	pop	{fp, pc}
   16e94:	sub	sp, sp, #16
   16e98:	str	r0, [sp, #12]
   16e9c:	str	r1, [sp, #8]
   16ea0:	ldr	r0, [sp, #8]
   16ea4:	sub	r0, r0, #1
   16ea8:	cmp	r0, #11
   16eac:	str	r0, [sp]
   16eb0:	bhi	16f48 <__assert_fail@plt+0x5a00>
   16eb4:	add	r0, pc, #8
   16eb8:	ldr	r1, [sp]
   16ebc:	ldr	r0, [r0, r1, lsl #2]
   16ec0:	mov	pc, r0
   16ec4:	andeq	r6, r1, r8, lsl pc
   16ec8:	andeq	r6, r1, r0, lsl #30
   16ecc:	andeq	r6, r1, r8, asr #30
   16ed0:	andeq	r6, r1, ip, lsl #30
   16ed4:	andeq	r6, r1, r8, asr #30
   16ed8:	strdeq	r6, [r1], -r4
   16edc:	andeq	r6, r1, r8, asr #30
   16ee0:	andeq	r6, r1, r0, lsr pc
   16ee4:	andeq	r6, r1, r8, asr #30
   16ee8:	andeq	r6, r1, r4, lsr #30
   16eec:	andeq	r6, r1, r8, asr #30
   16ef0:	andeq	r6, r1, ip, lsr pc
   16ef4:	movw	r0, #24576	; 0x6000
   16ef8:	str	r0, [sp, #4]
   16efc:	b	16f50 <__assert_fail@plt+0x5a08>
   16f00:	movw	r0, #8192	; 0x2000
   16f04:	str	r0, [sp, #4]
   16f08:	b	16f50 <__assert_fail@plt+0x5a08>
   16f0c:	movw	r0, #16384	; 0x4000
   16f10:	str	r0, [sp, #4]
   16f14:	b	16f50 <__assert_fail@plt+0x5a08>
   16f18:	movw	r0, #4096	; 0x1000
   16f1c:	str	r0, [sp, #4]
   16f20:	b	16f50 <__assert_fail@plt+0x5a08>
   16f24:	movw	r0, #40960	; 0xa000
   16f28:	str	r0, [sp, #4]
   16f2c:	b	16f50 <__assert_fail@plt+0x5a08>
   16f30:	movw	r0, #32768	; 0x8000
   16f34:	str	r0, [sp, #4]
   16f38:	b	16f50 <__assert_fail@plt+0x5a08>
   16f3c:	movw	r0, #49152	; 0xc000
   16f40:	str	r0, [sp, #4]
   16f44:	b	16f50 <__assert_fail@plt+0x5a08>
   16f48:	movw	r0, #0
   16f4c:	str	r0, [sp, #4]
   16f50:	ldr	r0, [sp, #4]
   16f54:	ldr	r1, [sp, #12]
   16f58:	str	r0, [r1, #16]
   16f5c:	add	sp, sp, #16
   16f60:	bx	lr
   16f64:	push	{fp, lr}
   16f68:	mov	fp, sp
   16f6c:	sub	sp, sp, #16
   16f70:	str	r0, [sp, #8]
   16f74:	str	r1, [sp, #4]
   16f78:	ldr	r0, [sp, #8]
   16f7c:	ldr	r1, [sp, #4]
   16f80:	bl	171ac <__assert_fail@plt+0x5c64>
   16f84:	mov	r1, r0
   16f88:	movw	lr, #19778	; 0x4d42
   16f8c:	movt	lr, #65363	; 0xff53
   16f90:	cmp	r0, lr
   16f94:	str	r1, [sp]
   16f98:	beq	16fcc <__assert_fail@plt+0x5a84>
   16f9c:	b	16fa0 <__assert_fail@plt+0x5a58>
   16fa0:	movw	r0, #26985	; 0x6969
   16fa4:	ldr	r1, [sp]
   16fa8:	cmp	r1, r0
   16fac:	beq	16fcc <__assert_fail@plt+0x5a84>
   16fb0:	b	16fb4 <__assert_fail@plt+0x5a6c>
   16fb4:	movw	r0, #6548	; 0x1994
   16fb8:	movt	r0, #258	; 0x102
   16fbc:	ldr	r1, [sp]
   16fc0:	cmp	r1, r0
   16fc4:	bne	16fdc <__assert_fail@plt+0x5a94>
   16fc8:	b	16fcc <__assert_fail@plt+0x5a84>
   16fcc:	movw	r0, #0
   16fd0:	and	r0, r0, #1
   16fd4:	strb	r0, [fp, #-1]
   16fd8:	b	16fe8 <__assert_fail@plt+0x5aa0>
   16fdc:	movw	r0, #1
   16fe0:	and	r0, r0, #1
   16fe4:	strb	r0, [fp, #-1]
   16fe8:	ldrb	r0, [fp, #-1]
   16fec:	and	r0, r0, #1
   16ff0:	mov	sp, fp
   16ff4:	pop	{fp, pc}
   16ff8:	sub	sp, sp, #20
   16ffc:	str	r0, [sp, #16]
   17000:	str	r1, [sp, #12]
   17004:	ldr	r0, [sp, #16]
   17008:	ldr	r0, [r0, #24]
   1700c:	str	r0, [sp, #4]
   17010:	ldr	r0, [sp, #16]
   17014:	ldr	r0, [r0, #4]
   17018:	str	r0, [sp, #8]
   1701c:	ldr	r0, [sp, #8]
   17020:	movw	r1, #0
   17024:	cmp	r0, r1
   17028:	beq	1708c <__assert_fail@plt+0x5b44>
   1702c:	b	17030 <__assert_fail@plt+0x5ae8>
   17030:	ldr	r0, [sp, #8]
   17034:	ldr	r0, [r0, #24]
   17038:	ldr	r1, [sp, #8]
   1703c:	add	r1, r1, #168	; 0xa8
   17040:	cmp	r0, r1
   17044:	beq	1706c <__assert_fail@plt+0x5b24>
   17048:	ldr	r0, [sp, #4]
   1704c:	ldr	r1, [sp, #8]
   17050:	ldr	r1, [r1, #24]
   17054:	ldr	r2, [sp, #8]
   17058:	ldr	r2, [r2, #28]
   1705c:	sub	r1, r1, r2
   17060:	add	r0, r0, r1
   17064:	ldr	r1, [sp, #8]
   17068:	str	r0, [r1, #24]
   1706c:	ldr	r0, [sp, #4]
   17070:	ldr	r1, [sp, #8]
   17074:	str	r0, [r1, #28]
   17078:	b	1707c <__assert_fail@plt+0x5b34>
   1707c:	ldr	r0, [sp, #8]
   17080:	ldr	r0, [r0, #8]
   17084:	str	r0, [sp, #8]
   17088:	b	1701c <__assert_fail@plt+0x5ad4>
   1708c:	ldr	r0, [sp, #12]
   17090:	str	r0, [sp, #8]
   17094:	ldr	r0, [sp, #8]
   17098:	ldr	r0, [r0, #48]	; 0x30
   1709c:	cmp	r0, #0
   170a0:	blt	1712c <__assert_fail@plt+0x5be4>
   170a4:	b	170a8 <__assert_fail@plt+0x5b60>
   170a8:	ldr	r0, [sp, #8]
   170ac:	ldr	r0, [r0, #24]
   170b0:	ldr	r1, [sp, #8]
   170b4:	add	r1, r1, #168	; 0xa8
   170b8:	cmp	r0, r1
   170bc:	beq	170e4 <__assert_fail@plt+0x5b9c>
   170c0:	ldr	r0, [sp, #4]
   170c4:	ldr	r1, [sp, #8]
   170c8:	ldr	r1, [r1, #24]
   170cc:	ldr	r2, [sp, #8]
   170d0:	ldr	r2, [r2, #28]
   170d4:	sub	r1, r1, r2
   170d8:	add	r0, r0, r1
   170dc:	ldr	r1, [sp, #8]
   170e0:	str	r0, [r1, #24]
   170e4:	ldr	r0, [sp, #4]
   170e8:	ldr	r1, [sp, #8]
   170ec:	str	r0, [r1, #28]
   170f0:	ldr	r0, [sp, #8]
   170f4:	ldr	r0, [r0, #8]
   170f8:	movw	r1, #0
   170fc:	cmp	r0, r1
   17100:	beq	17114 <__assert_fail@plt+0x5bcc>
   17104:	ldr	r0, [sp, #8]
   17108:	ldr	r0, [r0, #8]
   1710c:	str	r0, [sp]
   17110:	b	17120 <__assert_fail@plt+0x5bd8>
   17114:	ldr	r0, [sp, #8]
   17118:	ldr	r0, [r0, #4]
   1711c:	str	r0, [sp]
   17120:	ldr	r0, [sp]
   17124:	str	r0, [sp, #8]
   17128:	b	17094 <__assert_fail@plt+0x5b4c>
   1712c:	add	sp, sp, #20
   17130:	bx	lr
   17134:	push	{r4, r5, fp, lr}
   17138:	add	fp, sp, #8
   1713c:	sub	sp, sp, #24
   17140:	str	r0, [fp, #-12]
   17144:	str	r1, [sp, #16]
   17148:	ldr	r0, [fp, #-12]
   1714c:	ldr	r0, [r0]
   17150:	ldr	r1, [r0, #160]	; 0xa0
   17154:	ldr	r0, [r0, #164]	; 0xa4
   17158:	ldr	r2, [sp, #16]
   1715c:	ldr	r2, [r2]
   17160:	ldr	r3, [r2, #160]	; 0xa0
   17164:	ldr	r2, [r2, #164]	; 0xa4
   17168:	subs	ip, r3, r1
   1716c:	sbcs	lr, r2, r0
   17170:	mov	r4, #0
   17174:	mov	r5, r4
   17178:	movwcc	r5, #1
   1717c:	subs	r1, r1, r3
   17180:	sbcs	r0, r0, r2
   17184:	movwcc	r4, #1
   17188:	and	r2, r4, #1
   1718c:	sub	r2, r5, r2
   17190:	str	r0, [sp, #12]
   17194:	mov	r0, r2
   17198:	str	ip, [sp, #8]
   1719c:	str	r1, [sp, #4]
   171a0:	str	lr, [sp]
   171a4:	sub	sp, fp, #8
   171a8:	pop	{r4, r5, fp, pc}
   171ac:	push	{fp, lr}
   171b0:	mov	fp, sp
   171b4:	sub	sp, sp, #136	; 0x88
   171b8:	str	r0, [fp, #-8]
   171bc:	str	r1, [fp, #-12]
   171c0:	ldr	r0, [fp, #-8]
   171c4:	ldr	r0, [r0, #44]	; 0x2c
   171c8:	str	r0, [fp, #-16]
   171cc:	ldr	r0, [fp, #-16]
   171d0:	ldr	r0, [r0, #52]	; 0x34
   171d4:	str	r0, [fp, #-20]	; 0xffffffec
   171d8:	ldr	r0, [fp, #-16]
   171dc:	ldr	r0, [r0, #48]	; 0x30
   171e0:	and	r0, r0, #512	; 0x200
   171e4:	cmp	r0, #0
   171e8:	bne	171f8 <__assert_fail@plt+0x5cb0>
   171ec:	movw	r0, #0
   171f0:	str	r0, [fp, #-4]
   171f4:	b	17368 <__assert_fail@plt+0x5e20>
   171f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   171fc:	movw	r1, #0
   17200:	cmp	r0, r1
   17204:	bne	1723c <__assert_fail@plt+0x5cf4>
   17208:	movw	r0, #13
   1720c:	movw	r1, #0
   17210:	movw	r2, #29556	; 0x7374
   17214:	movt	r2, #1
   17218:	movw	r3, #29644	; 0x73cc
   1721c:	movt	r3, #1
   17220:	movw	ip, #14732	; 0x398c
   17224:	movt	ip, #1
   17228:	str	ip, [sp]
   1722c:	bl	17c84 <__assert_fail@plt+0x673c>
   17230:	ldr	r1, [fp, #-16]
   17234:	str	r0, [r1, #52]	; 0x34
   17238:	str	r0, [fp, #-20]	; 0xffffffec
   1723c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17240:	movw	r1, #0
   17244:	cmp	r0, r1
   17248:	beq	17294 <__assert_fail@plt+0x5d4c>
   1724c:	ldr	r0, [fp, #-8]
   17250:	ldr	r1, [r0, #64]	; 0x40
   17254:	ldr	r0, [r0, #68]	; 0x44
   17258:	str	r0, [sp, #12]
   1725c:	str	r1, [sp, #8]
   17260:	ldr	r0, [fp, #-20]	; 0xffffffec
   17264:	add	r1, sp, #8
   17268:	bl	17768 <__assert_fail@plt+0x6220>
   1726c:	str	r0, [fp, #-24]	; 0xffffffe8
   17270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17274:	movw	r1, #0
   17278:	cmp	r0, r1
   1727c:	beq	17290 <__assert_fail@plt+0x5d48>
   17280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17284:	ldr	r0, [r0, #8]
   17288:	str	r0, [fp, #-4]
   1728c:	b	17368 <__assert_fail@plt+0x5e20>
   17290:	b	17294 <__assert_fail@plt+0x5d4c>
   17294:	ldr	r0, [fp, #-12]
   17298:	cmp	r0, #0
   1729c:	blt	172b4 <__assert_fail@plt+0x5d6c>
   172a0:	ldr	r0, [fp, #-12]
   172a4:	add	r1, sp, #24
   172a8:	bl	11200 <fstatfs64@plt>
   172ac:	cmp	r0, #0
   172b0:	beq	172c0 <__assert_fail@plt+0x5d78>
   172b4:	movw	r0, #0
   172b8:	str	r0, [fp, #-4]
   172bc:	b	17368 <__assert_fail@plt+0x5e20>
   172c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   172c4:	movw	r1, #0
   172c8:	cmp	r0, r1
   172cc:	beq	17360 <__assert_fail@plt+0x5e18>
   172d0:	movw	r0, #16
   172d4:	bl	219a8 <__assert_fail@plt+0x10460>
   172d8:	str	r0, [sp, #4]
   172dc:	ldr	r0, [sp, #4]
   172e0:	movw	lr, #0
   172e4:	cmp	r0, lr
   172e8:	beq	1735c <__assert_fail@plt+0x5e14>
   172ec:	ldr	r0, [fp, #-8]
   172f0:	ldr	r1, [r0, #64]	; 0x40
   172f4:	ldr	r0, [r0, #68]	; 0x44
   172f8:	ldr	r2, [sp, #4]
   172fc:	str	r0, [r2, #4]
   17300:	str	r1, [r2]
   17304:	ldr	r0, [sp, #24]
   17308:	ldr	r1, [sp, #4]
   1730c:	str	r0, [r1, #8]
   17310:	ldr	r0, [fp, #-20]	; 0xffffffec
   17314:	ldr	r1, [sp, #4]
   17318:	bl	18cb0 <__assert_fail@plt+0x7768>
   1731c:	str	r0, [fp, #-24]	; 0xffffffe8
   17320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17324:	movw	r1, #0
   17328:	cmp	r0, r1
   1732c:	beq	17350 <__assert_fail@plt+0x5e08>
   17330:	b	17334 <__assert_fail@plt+0x5dec>
   17334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r1, [sp, #4]
   1733c:	cmp	r0, r1
   17340:	beq	17348 <__assert_fail@plt+0x5e00>
   17344:	bl	11500 <abort@plt>
   17348:	b	1734c <__assert_fail@plt+0x5e04>
   1734c:	b	17358 <__assert_fail@plt+0x5e10>
   17350:	ldr	r0, [sp, #4]
   17354:	bl	1398c <__assert_fail@plt+0x2444>
   17358:	b	1735c <__assert_fail@plt+0x5e14>
   1735c:	b	17360 <__assert_fail@plt+0x5e18>
   17360:	ldr	r0, [sp, #24]
   17364:	str	r0, [fp, #-4]
   17368:	ldr	r0, [fp, #-4]
   1736c:	mov	sp, fp
   17370:	pop	{fp, pc}
   17374:	push	{fp, lr}
   17378:	mov	fp, sp
   1737c:	sub	sp, sp, #32
   17380:	str	r0, [fp, #-4]
   17384:	str	r1, [fp, #-8]
   17388:	ldr	r0, [fp, #-4]
   1738c:	str	r0, [fp, #-12]
   17390:	ldr	r0, [fp, #-12]
   17394:	ldr	r1, [r0]
   17398:	ldr	r0, [r0, #4]
   1739c:	str	r0, [sp, #12]
   173a0:	str	r1, [sp, #8]
   173a4:	ldr	r0, [sp, #8]
   173a8:	ldr	r1, [sp, #12]
   173ac:	ldr	r2, [fp, #-8]
   173b0:	mov	r3, #0
   173b4:	bl	247c4 <__assert_fail@plt+0x1327c>
   173b8:	str	r0, [sp, #4]
   173bc:	mov	r0, r2
   173c0:	str	r1, [sp]
   173c4:	mov	sp, fp
   173c8:	pop	{fp, pc}
   173cc:	sub	sp, sp, #16
   173d0:	str	r0, [sp, #12]
   173d4:	str	r1, [sp, #8]
   173d8:	ldr	r0, [sp, #12]
   173dc:	str	r0, [sp, #4]
   173e0:	ldr	r0, [sp, #8]
   173e4:	str	r0, [sp]
   173e8:	ldr	r0, [sp, #4]
   173ec:	ldr	r1, [r0]
   173f0:	ldr	r0, [r0, #4]
   173f4:	ldr	r2, [sp]
   173f8:	ldr	r3, [r2]
   173fc:	ldr	r2, [r2, #4]
   17400:	eor	r0, r0, r2
   17404:	eor	r1, r1, r3
   17408:	orr	r0, r1, r0
   1740c:	clz	r0, r0
   17410:	lsr	r0, r0, #5
   17414:	and	r0, r0, #1
   17418:	add	sp, sp, #16
   1741c:	bx	lr
   17420:	push	{fp, lr}
   17424:	mov	fp, sp
   17428:	sub	sp, sp, #24
   1742c:	str	r0, [fp, #-4]
   17430:	str	r1, [fp, #-8]
   17434:	ldr	r0, [fp, #-4]
   17438:	str	r0, [sp, #12]
   1743c:	ldr	r0, [fp, #-8]
   17440:	str	r0, [sp, #8]
   17444:	ldr	r0, [sp, #12]
   17448:	ldr	r0, [r0]
   1744c:	ldr	r0, [r0, #44]	; 0x2c
   17450:	ldr	r0, [r0, #44]	; 0x2c
   17454:	ldr	r1, [sp, #12]
   17458:	ldr	r2, [sp, #8]
   1745c:	str	r0, [sp, #4]
   17460:	mov	r0, r1
   17464:	mov	r1, r2
   17468:	ldr	r2, [sp, #4]
   1746c:	blx	r2
   17470:	mov	sp, fp
   17474:	pop	{fp, pc}
   17478:	sub	sp, sp, #4
   1747c:	str	r0, [sp]
   17480:	ldr	r0, [sp]
   17484:	ldr	r0, [r0, #8]
   17488:	add	sp, sp, #4
   1748c:	bx	lr
   17490:	sub	sp, sp, #4
   17494:	str	r0, [sp]
   17498:	ldr	r0, [sp]
   1749c:	ldr	r0, [r0, #12]
   174a0:	add	sp, sp, #4
   174a4:	bx	lr
   174a8:	sub	sp, sp, #4
   174ac:	str	r0, [sp]
   174b0:	ldr	r0, [sp]
   174b4:	ldr	r0, [r0, #16]
   174b8:	add	sp, sp, #4
   174bc:	bx	lr
   174c0:	sub	sp, sp, #20
   174c4:	str	r0, [sp, #16]
   174c8:	movw	r0, #0
   174cc:	str	r0, [sp, #8]
   174d0:	ldr	r0, [sp, #16]
   174d4:	ldr	r0, [r0]
   174d8:	str	r0, [sp, #12]
   174dc:	ldr	r0, [sp, #12]
   174e0:	ldr	r1, [sp, #16]
   174e4:	ldr	r1, [r1, #4]
   174e8:	cmp	r0, r1
   174ec:	bcs	17570 <__assert_fail@plt+0x6028>
   174f0:	ldr	r0, [sp, #12]
   174f4:	ldr	r0, [r0]
   174f8:	movw	r1, #0
   174fc:	cmp	r0, r1
   17500:	beq	1755c <__assert_fail@plt+0x6014>
   17504:	ldr	r0, [sp, #12]
   17508:	str	r0, [sp, #4]
   1750c:	movw	r0, #1
   17510:	str	r0, [sp]
   17514:	ldr	r0, [sp, #4]
   17518:	ldr	r0, [r0, #4]
   1751c:	str	r0, [sp, #4]
   17520:	ldr	r0, [sp, #4]
   17524:	movw	r1, #0
   17528:	cmp	r0, r1
   1752c:	beq	17540 <__assert_fail@plt+0x5ff8>
   17530:	ldr	r0, [sp]
   17534:	add	r0, r0, #1
   17538:	str	r0, [sp]
   1753c:	b	17514 <__assert_fail@plt+0x5fcc>
   17540:	ldr	r0, [sp]
   17544:	ldr	r1, [sp, #8]
   17548:	cmp	r0, r1
   1754c:	bls	17558 <__assert_fail@plt+0x6010>
   17550:	ldr	r0, [sp]
   17554:	str	r0, [sp, #8]
   17558:	b	1755c <__assert_fail@plt+0x6014>
   1755c:	b	17560 <__assert_fail@plt+0x6018>
   17560:	ldr	r0, [sp, #12]
   17564:	add	r0, r0, #8
   17568:	str	r0, [sp, #12]
   1756c:	b	174dc <__assert_fail@plt+0x5f94>
   17570:	ldr	r0, [sp, #8]
   17574:	add	sp, sp, #20
   17578:	bx	lr
   1757c:	sub	sp, sp, #24
   17580:	str	r0, [sp, #16]
   17584:	movw	r0, #0
   17588:	str	r0, [sp, #8]
   1758c:	str	r0, [sp, #4]
   17590:	ldr	r0, [sp, #16]
   17594:	ldr	r0, [r0]
   17598:	str	r0, [sp, #12]
   1759c:	ldr	r0, [sp, #12]
   175a0:	ldr	r1, [sp, #16]
   175a4:	ldr	r1, [r1, #4]
   175a8:	cmp	r0, r1
   175ac:	bcs	17628 <__assert_fail@plt+0x60e0>
   175b0:	ldr	r0, [sp, #12]
   175b4:	ldr	r0, [r0]
   175b8:	movw	r1, #0
   175bc:	cmp	r0, r1
   175c0:	beq	17614 <__assert_fail@plt+0x60cc>
   175c4:	ldr	r0, [sp, #12]
   175c8:	str	r0, [sp]
   175cc:	ldr	r0, [sp, #8]
   175d0:	add	r0, r0, #1
   175d4:	str	r0, [sp, #8]
   175d8:	ldr	r0, [sp, #4]
   175dc:	add	r0, r0, #1
   175e0:	str	r0, [sp, #4]
   175e4:	ldr	r0, [sp]
   175e8:	ldr	r0, [r0, #4]
   175ec:	str	r0, [sp]
   175f0:	ldr	r0, [sp]
   175f4:	movw	r1, #0
   175f8:	cmp	r0, r1
   175fc:	beq	17610 <__assert_fail@plt+0x60c8>
   17600:	ldr	r0, [sp, #4]
   17604:	add	r0, r0, #1
   17608:	str	r0, [sp, #4]
   1760c:	b	175e4 <__assert_fail@plt+0x609c>
   17610:	b	17614 <__assert_fail@plt+0x60cc>
   17614:	b	17618 <__assert_fail@plt+0x60d0>
   17618:	ldr	r0, [sp, #12]
   1761c:	add	r0, r0, #8
   17620:	str	r0, [sp, #12]
   17624:	b	1759c <__assert_fail@plt+0x6054>
   17628:	ldr	r0, [sp, #8]
   1762c:	ldr	r1, [sp, #16]
   17630:	ldr	r1, [r1, #12]
   17634:	cmp	r0, r1
   17638:	bne	17660 <__assert_fail@plt+0x6118>
   1763c:	ldr	r0, [sp, #4]
   17640:	ldr	r1, [sp, #16]
   17644:	ldr	r1, [r1, #16]
   17648:	cmp	r0, r1
   1764c:	bne	17660 <__assert_fail@plt+0x6118>
   17650:	movw	r0, #1
   17654:	and	r0, r0, #1
   17658:	strb	r0, [sp, #23]
   1765c:	b	1766c <__assert_fail@plt+0x6124>
   17660:	movw	r0, #0
   17664:	and	r0, r0, #1
   17668:	strb	r0, [sp, #23]
   1766c:	ldrb	r0, [sp, #23]
   17670:	and	r0, r0, #1
   17674:	add	sp, sp, #24
   17678:	bx	lr
   1767c:	nop	{0}
   17680:	push	{fp, lr}
   17684:	mov	fp, sp
   17688:	sub	sp, sp, #48	; 0x30
   1768c:	str	r0, [fp, #-4]
   17690:	str	r1, [fp, #-8]
   17694:	ldr	r0, [fp, #-4]
   17698:	bl	174a8 <__assert_fail@plt+0x5f60>
   1769c:	str	r0, [fp, #-12]
   176a0:	ldr	r0, [fp, #-4]
   176a4:	bl	17478 <__assert_fail@plt+0x5f30>
   176a8:	str	r0, [fp, #-16]
   176ac:	ldr	r0, [fp, #-4]
   176b0:	bl	17490 <__assert_fail@plt+0x5f48>
   176b4:	str	r0, [fp, #-20]	; 0xffffffec
   176b8:	ldr	r0, [fp, #-4]
   176bc:	bl	174c0 <__assert_fail@plt+0x5f78>
   176c0:	str	r0, [sp, #24]
   176c4:	ldr	r0, [fp, #-8]
   176c8:	ldr	r2, [fp, #-12]
   176cc:	movw	r1, #23261	; 0x5add
   176d0:	movt	r1, #2
   176d4:	bl	113f8 <fprintf@plt>
   176d8:	ldr	r1, [fp, #-8]
   176dc:	ldr	r2, [fp, #-16]
   176e0:	str	r0, [sp, #20]
   176e4:	mov	r0, r1
   176e8:	movw	r1, #23285	; 0x5af5
   176ec:	movt	r1, #2
   176f0:	bl	113f8 <fprintf@plt>
   176f4:	vldr	d16, [pc, #100]	; 17760 <__assert_fail@plt+0x6218>
   176f8:	ldr	r1, [fp, #-8]
   176fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17700:	ldr	lr, [fp, #-20]	; 0xffffffec
   17704:	vmov	s0, lr
   17708:	vcvt.f64.u32	d17, s0
   1770c:	vmul.f64	d16, d16, d17
   17710:	ldr	lr, [fp, #-16]
   17714:	vmov	s0, lr
   17718:	vcvt.f64.u32	d17, s0
   1771c:	vdiv.f64	d16, d16, d17
   17720:	str	r0, [sp, #16]
   17724:	mov	r0, r1
   17728:	movw	r1, #23309	; 0x5b0d
   1772c:	movt	r1, #2
   17730:	vstr	d16, [sp]
   17734:	bl	113f8 <fprintf@plt>
   17738:	ldr	r1, [fp, #-8]
   1773c:	ldr	r2, [sp, #24]
   17740:	str	r0, [sp, #12]
   17744:	mov	r0, r1
   17748:	movw	r1, #23342	; 0x5b2e
   1774c:	movt	r1, #2
   17750:	bl	113f8 <fprintf@plt>
   17754:	str	r0, [sp, #8]
   17758:	mov	sp, fp
   1775c:	pop	{fp, pc}
   17760:	andeq	r0, r0, r0
   17764:	subsmi	r0, r9, r0
   17768:	push	{fp, lr}
   1776c:	mov	fp, sp
   17770:	sub	sp, sp, #24
   17774:	str	r0, [fp, #-8]
   17778:	str	r1, [sp, #12]
   1777c:	ldr	r0, [fp, #-8]
   17780:	ldr	r1, [sp, #12]
   17784:	bl	17840 <__assert_fail@plt+0x62f8>
   17788:	str	r0, [sp, #8]
   1778c:	ldr	r0, [sp, #8]
   17790:	ldr	r0, [r0]
   17794:	movw	r1, #0
   17798:	cmp	r0, r1
   1779c:	bne	177ac <__assert_fail@plt+0x6264>
   177a0:	movw	r0, #0
   177a4:	str	r0, [fp, #-4]
   177a8:	b	17834 <__assert_fail@plt+0x62ec>
   177ac:	ldr	r0, [sp, #8]
   177b0:	str	r0, [sp, #4]
   177b4:	ldr	r0, [sp, #4]
   177b8:	movw	r1, #0
   177bc:	cmp	r0, r1
   177c0:	beq	1782c <__assert_fail@plt+0x62e4>
   177c4:	ldr	r0, [sp, #12]
   177c8:	ldr	r1, [sp, #4]
   177cc:	ldr	r1, [r1]
   177d0:	cmp	r0, r1
   177d4:	beq	17808 <__assert_fail@plt+0x62c0>
   177d8:	ldr	r0, [fp, #-8]
   177dc:	ldr	r0, [r0, #28]
   177e0:	ldr	r1, [sp, #12]
   177e4:	ldr	r2, [sp, #4]
   177e8:	ldr	r2, [r2]
   177ec:	str	r0, [sp]
   177f0:	mov	r0, r1
   177f4:	mov	r1, r2
   177f8:	ldr	r2, [sp]
   177fc:	blx	r2
   17800:	tst	r0, #1
   17804:	beq	17818 <__assert_fail@plt+0x62d0>
   17808:	ldr	r0, [sp, #4]
   1780c:	ldr	r0, [r0]
   17810:	str	r0, [fp, #-4]
   17814:	b	17834 <__assert_fail@plt+0x62ec>
   17818:	b	1781c <__assert_fail@plt+0x62d4>
   1781c:	ldr	r0, [sp, #4]
   17820:	ldr	r0, [r0, #4]
   17824:	str	r0, [sp, #4]
   17828:	b	177b4 <__assert_fail@plt+0x626c>
   1782c:	movw	r0, #0
   17830:	str	r0, [fp, #-4]
   17834:	ldr	r0, [fp, #-4]
   17838:	mov	sp, fp
   1783c:	pop	{fp, pc}
   17840:	push	{fp, lr}
   17844:	mov	fp, sp
   17848:	sub	sp, sp, #16
   1784c:	str	r0, [fp, #-4]
   17850:	str	r1, [sp, #8]
   17854:	ldr	r0, [fp, #-4]
   17858:	ldr	r0, [r0, #24]
   1785c:	ldr	r1, [sp, #8]
   17860:	ldr	r2, [fp, #-4]
   17864:	ldr	r2, [r2, #8]
   17868:	str	r0, [sp]
   1786c:	mov	r0, r1
   17870:	mov	r1, r2
   17874:	ldr	r2, [sp]
   17878:	blx	r2
   1787c:	str	r0, [sp, #4]
   17880:	ldr	r0, [sp, #4]
   17884:	ldr	r1, [fp, #-4]
   17888:	ldr	r1, [r1, #8]
   1788c:	cmp	r0, r1
   17890:	bcc	17898 <__assert_fail@plt+0x6350>
   17894:	bl	11500 <abort@plt>
   17898:	ldr	r0, [fp, #-4]
   1789c:	ldr	r0, [r0]
   178a0:	ldr	r1, [sp, #4]
   178a4:	add	r0, r0, r1, lsl #3
   178a8:	mov	sp, fp
   178ac:	pop	{fp, pc}
   178b0:	push	{fp, lr}
   178b4:	mov	fp, sp
   178b8:	sub	sp, sp, #16
   178bc:	str	r0, [sp, #8]
   178c0:	ldr	r0, [sp, #8]
   178c4:	ldr	r0, [r0, #16]
   178c8:	cmp	r0, #0
   178cc:	bne	178dc <__assert_fail@plt+0x6394>
   178d0:	movw	r0, #0
   178d4:	str	r0, [fp, #-4]
   178d8:	b	1793c <__assert_fail@plt+0x63f4>
   178dc:	ldr	r0, [sp, #8]
   178e0:	ldr	r0, [r0]
   178e4:	str	r0, [sp, #4]
   178e8:	ldr	r0, [sp, #4]
   178ec:	ldr	r1, [sp, #8]
   178f0:	ldr	r1, [r1, #4]
   178f4:	cmp	r0, r1
   178f8:	bcc	17900 <__assert_fail@plt+0x63b8>
   178fc:	bl	11500 <abort@plt>
   17900:	ldr	r0, [sp, #4]
   17904:	ldr	r0, [r0]
   17908:	movw	r1, #0
   1790c:	cmp	r0, r1
   17910:	beq	17924 <__assert_fail@plt+0x63dc>
   17914:	ldr	r0, [sp, #4]
   17918:	ldr	r0, [r0]
   1791c:	str	r0, [fp, #-4]
   17920:	b	1793c <__assert_fail@plt+0x63f4>
   17924:	b	17928 <__assert_fail@plt+0x63e0>
   17928:	b	1792c <__assert_fail@plt+0x63e4>
   1792c:	ldr	r0, [sp, #4]
   17930:	add	r0, r0, #8
   17934:	str	r0, [sp, #4]
   17938:	b	178e8 <__assert_fail@plt+0x63a0>
   1793c:	ldr	r0, [fp, #-4]
   17940:	mov	sp, fp
   17944:	pop	{fp, pc}
   17948:	push	{fp, lr}
   1794c:	mov	fp, sp
   17950:	sub	sp, sp, #24
   17954:	str	r0, [fp, #-8]
   17958:	str	r1, [sp, #12]
   1795c:	ldr	r0, [fp, #-8]
   17960:	ldr	r1, [sp, #12]
   17964:	bl	17840 <__assert_fail@plt+0x62f8>
   17968:	str	r0, [sp, #8]
   1796c:	ldr	r0, [sp, #8]
   17970:	str	r0, [sp, #4]
   17974:	ldr	r0, [sp, #4]
   17978:	ldr	r0, [r0]
   1797c:	ldr	r1, [sp, #12]
   17980:	cmp	r0, r1
   17984:	bne	179b0 <__assert_fail@plt+0x6468>
   17988:	ldr	r0, [sp, #4]
   1798c:	ldr	r0, [r0, #4]
   17990:	movw	r1, #0
   17994:	cmp	r0, r1
   17998:	beq	179b0 <__assert_fail@plt+0x6468>
   1799c:	ldr	r0, [sp, #4]
   179a0:	ldr	r0, [r0, #4]
   179a4:	ldr	r0, [r0]
   179a8:	str	r0, [fp, #-4]
   179ac:	b	17a1c <__assert_fail@plt+0x64d4>
   179b0:	ldr	r0, [sp, #4]
   179b4:	ldr	r0, [r0, #4]
   179b8:	str	r0, [sp, #4]
   179bc:	ldr	r0, [sp, #4]
   179c0:	movw	r1, #0
   179c4:	cmp	r0, r1
   179c8:	bne	17974 <__assert_fail@plt+0x642c>
   179cc:	b	179d0 <__assert_fail@plt+0x6488>
   179d0:	ldr	r0, [sp, #8]
   179d4:	add	r0, r0, #8
   179d8:	str	r0, [sp, #8]
   179dc:	ldr	r1, [fp, #-8]
   179e0:	ldr	r1, [r1, #4]
   179e4:	cmp	r0, r1
   179e8:	bcs	17a14 <__assert_fail@plt+0x64cc>
   179ec:	ldr	r0, [sp, #8]
   179f0:	ldr	r0, [r0]
   179f4:	movw	r1, #0
   179f8:	cmp	r0, r1
   179fc:	beq	17a10 <__assert_fail@plt+0x64c8>
   17a00:	ldr	r0, [sp, #8]
   17a04:	ldr	r0, [r0]
   17a08:	str	r0, [fp, #-4]
   17a0c:	b	17a1c <__assert_fail@plt+0x64d4>
   17a10:	b	179d0 <__assert_fail@plt+0x6488>
   17a14:	movw	r0, #0
   17a18:	str	r0, [fp, #-4]
   17a1c:	ldr	r0, [fp, #-4]
   17a20:	mov	sp, fp
   17a24:	pop	{fp, pc}
   17a28:	sub	sp, sp, #28
   17a2c:	str	r0, [sp, #20]
   17a30:	str	r1, [sp, #16]
   17a34:	str	r2, [sp, #12]
   17a38:	movw	r0, #0
   17a3c:	str	r0, [sp, #8]
   17a40:	ldr	r0, [sp, #20]
   17a44:	ldr	r0, [r0]
   17a48:	str	r0, [sp, #4]
   17a4c:	ldr	r0, [sp, #4]
   17a50:	ldr	r1, [sp, #20]
   17a54:	ldr	r1, [r1, #4]
   17a58:	cmp	r0, r1
   17a5c:	bcs	17af0 <__assert_fail@plt+0x65a8>
   17a60:	ldr	r0, [sp, #4]
   17a64:	ldr	r0, [r0]
   17a68:	movw	r1, #0
   17a6c:	cmp	r0, r1
   17a70:	beq	17adc <__assert_fail@plt+0x6594>
   17a74:	ldr	r0, [sp, #4]
   17a78:	str	r0, [sp]
   17a7c:	ldr	r0, [sp]
   17a80:	movw	r1, #0
   17a84:	cmp	r0, r1
   17a88:	beq	17ad8 <__assert_fail@plt+0x6590>
   17a8c:	ldr	r0, [sp, #8]
   17a90:	ldr	r1, [sp, #12]
   17a94:	cmp	r0, r1
   17a98:	bcc	17aa8 <__assert_fail@plt+0x6560>
   17a9c:	ldr	r0, [sp, #8]
   17aa0:	str	r0, [sp, #24]
   17aa4:	b	17af8 <__assert_fail@plt+0x65b0>
   17aa8:	ldr	r0, [sp]
   17aac:	ldr	r0, [r0]
   17ab0:	ldr	r1, [sp, #16]
   17ab4:	ldr	r2, [sp, #8]
   17ab8:	add	r3, r2, #1
   17abc:	str	r3, [sp, #8]
   17ac0:	add	r1, r1, r2, lsl #2
   17ac4:	str	r0, [r1]
   17ac8:	ldr	r0, [sp]
   17acc:	ldr	r0, [r0, #4]
   17ad0:	str	r0, [sp]
   17ad4:	b	17a7c <__assert_fail@plt+0x6534>
   17ad8:	b	17adc <__assert_fail@plt+0x6594>
   17adc:	b	17ae0 <__assert_fail@plt+0x6598>
   17ae0:	ldr	r0, [sp, #4]
   17ae4:	add	r0, r0, #8
   17ae8:	str	r0, [sp, #4]
   17aec:	b	17a4c <__assert_fail@plt+0x6504>
   17af0:	ldr	r0, [sp, #8]
   17af4:	str	r0, [sp, #24]
   17af8:	ldr	r0, [sp, #24]
   17afc:	add	sp, sp, #28
   17b00:	bx	lr
   17b04:	push	{fp, lr}
   17b08:	mov	fp, sp
   17b0c:	sub	sp, sp, #32
   17b10:	str	r0, [fp, #-8]
   17b14:	str	r1, [fp, #-12]
   17b18:	str	r2, [sp, #16]
   17b1c:	movw	r0, #0
   17b20:	str	r0, [sp, #12]
   17b24:	ldr	r0, [fp, #-8]
   17b28:	ldr	r0, [r0]
   17b2c:	str	r0, [sp, #8]
   17b30:	ldr	r0, [sp, #8]
   17b34:	ldr	r1, [fp, #-8]
   17b38:	ldr	r1, [r1, #4]
   17b3c:	cmp	r0, r1
   17b40:	bcs	17bdc <__assert_fail@plt+0x6694>
   17b44:	ldr	r0, [sp, #8]
   17b48:	ldr	r0, [r0]
   17b4c:	movw	r1, #0
   17b50:	cmp	r0, r1
   17b54:	beq	17bc8 <__assert_fail@plt+0x6680>
   17b58:	ldr	r0, [sp, #8]
   17b5c:	str	r0, [sp, #4]
   17b60:	ldr	r0, [sp, #4]
   17b64:	movw	r1, #0
   17b68:	cmp	r0, r1
   17b6c:	beq	17bc4 <__assert_fail@plt+0x667c>
   17b70:	ldr	r0, [fp, #-12]
   17b74:	ldr	r1, [sp, #4]
   17b78:	ldr	r1, [r1]
   17b7c:	ldr	r2, [sp, #16]
   17b80:	str	r0, [sp]
   17b84:	mov	r0, r1
   17b88:	mov	r1, r2
   17b8c:	ldr	r2, [sp]
   17b90:	blx	r2
   17b94:	tst	r0, #1
   17b98:	bne	17ba8 <__assert_fail@plt+0x6660>
   17b9c:	ldr	r0, [sp, #12]
   17ba0:	str	r0, [fp, #-4]
   17ba4:	b	17be4 <__assert_fail@plt+0x669c>
   17ba8:	ldr	r0, [sp, #12]
   17bac:	add	r0, r0, #1
   17bb0:	str	r0, [sp, #12]
   17bb4:	ldr	r0, [sp, #4]
   17bb8:	ldr	r0, [r0, #4]
   17bbc:	str	r0, [sp, #4]
   17bc0:	b	17b60 <__assert_fail@plt+0x6618>
   17bc4:	b	17bc8 <__assert_fail@plt+0x6680>
   17bc8:	b	17bcc <__assert_fail@plt+0x6684>
   17bcc:	ldr	r0, [sp, #8]
   17bd0:	add	r0, r0, #8
   17bd4:	str	r0, [sp, #8]
   17bd8:	b	17b30 <__assert_fail@plt+0x65e8>
   17bdc:	ldr	r0, [sp, #12]
   17be0:	str	r0, [fp, #-4]
   17be4:	ldr	r0, [fp, #-4]
   17be8:	mov	sp, fp
   17bec:	pop	{fp, pc}
   17bf0:	sub	sp, sp, #16
   17bf4:	str	r0, [sp, #12]
   17bf8:	str	r1, [sp, #8]
   17bfc:	movw	r0, #0
   17c00:	str	r0, [sp, #4]
   17c04:	ldr	r0, [sp, #12]
   17c08:	ldrb	r0, [r0]
   17c0c:	strb	r0, [sp, #3]
   17c10:	sxtb	r0, r0
   17c14:	cmp	r0, #0
   17c18:	beq	17c4c <__assert_fail@plt+0x6704>
   17c1c:	ldr	r0, [sp, #4]
   17c20:	rsb	r0, r0, r0, lsl #5
   17c24:	ldrb	r1, [sp, #3]
   17c28:	add	r0, r0, r1
   17c2c:	ldr	r1, [sp, #8]
   17c30:	udiv	r2, r0, r1
   17c34:	mls	r0, r2, r1, r0
   17c38:	str	r0, [sp, #4]
   17c3c:	ldr	r0, [sp, #12]
   17c40:	add	r0, r0, #1
   17c44:	str	r0, [sp, #12]
   17c48:	b	17c04 <__assert_fail@plt+0x66bc>
   17c4c:	ldr	r0, [sp, #4]
   17c50:	add	sp, sp, #16
   17c54:	bx	lr
   17c58:	push	{fp, lr}
   17c5c:	mov	fp, sp
   17c60:	sub	sp, sp, #8
   17c64:	movw	r1, #23368	; 0x5b48
   17c68:	movt	r1, #2
   17c6c:	str	r0, [sp, #4]
   17c70:	ldr	r0, [sp, #4]
   17c74:	movw	r2, #20
   17c78:	bl	1129c <memcpy@plt>
   17c7c:	mov	sp, fp
   17c80:	pop	{fp, pc}
   17c84:	push	{fp, lr}
   17c88:	mov	fp, sp
   17c8c:	sub	sp, sp, #32
   17c90:	ldr	ip, [fp, #8]
   17c94:	str	r0, [fp, #-8]
   17c98:	str	r1, [fp, #-12]
   17c9c:	str	r2, [sp, #16]
   17ca0:	str	r3, [sp, #12]
   17ca4:	ldr	r0, [sp, #16]
   17ca8:	movw	r1, #0
   17cac:	cmp	r0, r1
   17cb0:	str	ip, [sp, #4]
   17cb4:	bne	17cc4 <__assert_fail@plt+0x677c>
   17cb8:	movw	r0, #32284	; 0x7e1c
   17cbc:	movt	r0, #1
   17cc0:	str	r0, [sp, #16]
   17cc4:	ldr	r0, [sp, #12]
   17cc8:	movw	r1, #0
   17ccc:	cmp	r0, r1
   17cd0:	bne	17ce0 <__assert_fail@plt+0x6798>
   17cd4:	movw	r0, #32344	; 0x7e58
   17cd8:	movt	r0, #1
   17cdc:	str	r0, [sp, #12]
   17ce0:	movw	r0, #40	; 0x28
   17ce4:	bl	219a8 <__assert_fail@plt+0x10460>
   17ce8:	str	r0, [sp, #8]
   17cec:	ldr	r0, [sp, #8]
   17cf0:	movw	lr, #0
   17cf4:	cmp	r0, lr
   17cf8:	bne	17d08 <__assert_fail@plt+0x67c0>
   17cfc:	movw	r0, #0
   17d00:	str	r0, [fp, #-4]
   17d04:	b	17e10 <__assert_fail@plt+0x68c8>
   17d08:	ldr	r0, [fp, #-12]
   17d0c:	movw	r1, #0
   17d10:	cmp	r0, r1
   17d14:	bne	17d24 <__assert_fail@plt+0x67dc>
   17d18:	movw	r0, #23368	; 0x5b48
   17d1c:	movt	r0, #2
   17d20:	str	r0, [fp, #-12]
   17d24:	ldr	r0, [fp, #-12]
   17d28:	ldr	r1, [sp, #8]
   17d2c:	str	r0, [r1, #20]
   17d30:	ldr	r0, [sp, #8]
   17d34:	bl	17e84 <__assert_fail@plt+0x693c>
   17d38:	tst	r0, #1
   17d3c:	bne	17d44 <__assert_fail@plt+0x67fc>
   17d40:	b	17e00 <__assert_fail@plt+0x68b8>
   17d44:	ldr	r0, [fp, #-8]
   17d48:	ldr	r1, [fp, #-12]
   17d4c:	bl	17fd8 <__assert_fail@plt+0x6a90>
   17d50:	ldr	r1, [sp, #8]
   17d54:	str	r0, [r1, #8]
   17d58:	ldr	r0, [sp, #8]
   17d5c:	ldr	r0, [r0, #8]
   17d60:	cmp	r0, #0
   17d64:	bne	17d6c <__assert_fail@plt+0x6824>
   17d68:	b	17e00 <__assert_fail@plt+0x68b8>
   17d6c:	ldr	r0, [sp, #8]
   17d70:	ldr	r0, [r0, #8]
   17d74:	movw	r1, #8
   17d78:	bl	2190c <__assert_fail@plt+0x103c4>
   17d7c:	ldr	r1, [sp, #8]
   17d80:	str	r0, [r1]
   17d84:	ldr	r0, [sp, #8]
   17d88:	ldr	r0, [r0]
   17d8c:	movw	r1, #0
   17d90:	cmp	r0, r1
   17d94:	bne	17d9c <__assert_fail@plt+0x6854>
   17d98:	b	17e00 <__assert_fail@plt+0x68b8>
   17d9c:	ldr	r0, [sp, #8]
   17da0:	ldr	r1, [r0]
   17da4:	ldr	r0, [r0, #8]
   17da8:	add	r0, r1, r0, lsl #3
   17dac:	ldr	r1, [sp, #8]
   17db0:	str	r0, [r1, #4]
   17db4:	ldr	r0, [sp, #8]
   17db8:	movw	r1, #0
   17dbc:	str	r1, [r0, #12]
   17dc0:	ldr	r0, [sp, #8]
   17dc4:	str	r1, [r0, #16]
   17dc8:	ldr	r0, [sp, #16]
   17dcc:	ldr	r2, [sp, #8]
   17dd0:	str	r0, [r2, #24]
   17dd4:	ldr	r0, [sp, #12]
   17dd8:	ldr	r2, [sp, #8]
   17ddc:	str	r0, [r2, #28]
   17de0:	ldr	r0, [fp, #8]
   17de4:	ldr	r2, [sp, #8]
   17de8:	str	r0, [r2, #32]
   17dec:	ldr	r0, [sp, #8]
   17df0:	str	r1, [r0, #36]	; 0x24
   17df4:	ldr	r0, [sp, #8]
   17df8:	str	r0, [fp, #-4]
   17dfc:	b	17e10 <__assert_fail@plt+0x68c8>
   17e00:	ldr	r0, [sp, #8]
   17e04:	bl	1398c <__assert_fail@plt+0x2444>
   17e08:	movw	r0, #0
   17e0c:	str	r0, [fp, #-4]
   17e10:	ldr	r0, [fp, #-4]
   17e14:	mov	sp, fp
   17e18:	pop	{fp, pc}
   17e1c:	push	{fp, lr}
   17e20:	mov	fp, sp
   17e24:	sub	sp, sp, #16
   17e28:	str	r0, [fp, #-4]
   17e2c:	str	r1, [sp, #8]
   17e30:	ldr	r0, [fp, #-4]
   17e34:	mov	r1, #3
   17e38:	bl	21c5c <__assert_fail@plt+0x10714>
   17e3c:	str	r0, [sp, #4]
   17e40:	ldr	r0, [sp, #4]
   17e44:	ldr	r1, [sp, #8]
   17e48:	udiv	lr, r0, r1
   17e4c:	mls	r0, lr, r1, r0
   17e50:	mov	sp, fp
   17e54:	pop	{fp, pc}
   17e58:	sub	sp, sp, #8
   17e5c:	str	r0, [sp, #4]
   17e60:	str	r1, [sp]
   17e64:	ldr	r0, [sp, #4]
   17e68:	ldr	r1, [sp]
   17e6c:	cmp	r0, r1
   17e70:	movw	r0, #0
   17e74:	moveq	r0, #1
   17e78:	and	r0, r0, #1
   17e7c:	add	sp, sp, #8
   17e80:	bx	lr
   17e84:	sub	sp, sp, #16
   17e88:	str	r0, [sp, #8]
   17e8c:	ldr	r0, [sp, #8]
   17e90:	ldr	r0, [r0, #20]
   17e94:	str	r0, [sp, #4]
   17e98:	ldr	r0, [sp, #4]
   17e9c:	movw	r1, #23368	; 0x5b48
   17ea0:	movt	r1, #2
   17ea4:	cmp	r0, r1
   17ea8:	bne	17ebc <__assert_fail@plt+0x6974>
   17eac:	movw	r0, #1
   17eb0:	and	r0, r0, #1
   17eb4:	strb	r0, [sp, #15]
   17eb8:	b	17fc0 <__assert_fail@plt+0x6a78>
   17ebc:	vldr	s0, [pc, #268]	; 17fd0 <__assert_fail@plt+0x6a88>
   17ec0:	vstr	s0, [sp]
   17ec4:	vldr	s0, [sp]
   17ec8:	ldr	r0, [sp, #4]
   17ecc:	vldr	s2, [r0, #8]
   17ed0:	vcmpe.f32	s0, s2
   17ed4:	vmrs	APSR_nzcv, fpscr
   17ed8:	bpl	17fa4 <__assert_fail@plt+0x6a5c>
   17edc:	ldr	r0, [sp, #4]
   17ee0:	vldr	s0, [r0, #8]
   17ee4:	vldr	s2, [sp]
   17ee8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17eec:	vsub.f32	s2, s4, s2
   17ef0:	vcmpe.f32	s0, s2
   17ef4:	vmrs	APSR_nzcv, fpscr
   17ef8:	bpl	17fa4 <__assert_fail@plt+0x6a5c>
   17efc:	vldr	s0, [sp]
   17f00:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17f04:	vadd.f32	s0, s2, s0
   17f08:	ldr	r0, [sp, #4]
   17f0c:	vldr	s2, [r0, #12]
   17f10:	vcmpe.f32	s0, s2
   17f14:	vmrs	APSR_nzcv, fpscr
   17f18:	bpl	17fa4 <__assert_fail@plt+0x6a5c>
   17f1c:	vldr	s0, [pc, #176]	; 17fd4 <__assert_fail@plt+0x6a8c>
   17f20:	ldr	r0, [sp, #4]
   17f24:	vldr	s2, [r0]
   17f28:	vcmpe.f32	s0, s2
   17f2c:	vmrs	APSR_nzcv, fpscr
   17f30:	bhi	17fa4 <__assert_fail@plt+0x6a5c>
   17f34:	ldr	r0, [sp, #4]
   17f38:	vldr	s0, [r0]
   17f3c:	vldr	s2, [sp]
   17f40:	vadd.f32	s0, s0, s2
   17f44:	ldr	r0, [sp, #4]
   17f48:	vldr	s2, [r0, #4]
   17f4c:	vcmpe.f32	s0, s2
   17f50:	vmrs	APSR_nzcv, fpscr
   17f54:	bpl	17fa4 <__assert_fail@plt+0x6a5c>
   17f58:	ldr	r0, [sp, #4]
   17f5c:	vldr	s0, [r0, #4]
   17f60:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17f64:	vcmpe.f32	s0, s2
   17f68:	vmrs	APSR_nzcv, fpscr
   17f6c:	bhi	17fa4 <__assert_fail@plt+0x6a5c>
   17f70:	ldr	r0, [sp, #4]
   17f74:	vldr	s0, [r0]
   17f78:	vldr	s2, [sp]
   17f7c:	vadd.f32	s0, s0, s2
   17f80:	ldr	r0, [sp, #4]
   17f84:	vldr	s2, [r0, #8]
   17f88:	vcmpe.f32	s0, s2
   17f8c:	vmrs	APSR_nzcv, fpscr
   17f90:	bpl	17fa4 <__assert_fail@plt+0x6a5c>
   17f94:	movw	r0, #1
   17f98:	and	r0, r0, #1
   17f9c:	strb	r0, [sp, #15]
   17fa0:	b	17fc0 <__assert_fail@plt+0x6a78>
   17fa4:	ldr	r0, [sp, #8]
   17fa8:	movw	r1, #23368	; 0x5b48
   17fac:	movt	r1, #2
   17fb0:	str	r1, [r0, #20]
   17fb4:	movw	r0, #0
   17fb8:	and	r0, r0, #1
   17fbc:	strb	r0, [sp, #15]
   17fc0:	ldrb	r0, [sp, #15]
   17fc4:	and	r0, r0, #1
   17fc8:	add	sp, sp, #16
   17fcc:	bx	lr
   17fd0:	stclcc	12, cr12, [ip, #820]	; 0x334
   17fd4:	andeq	r0, r0, r0
   17fd8:	push	{fp, lr}
   17fdc:	mov	fp, sp
   17fe0:	sub	sp, sp, #16
   17fe4:	str	r0, [sp, #8]
   17fe8:	str	r1, [sp, #4]
   17fec:	ldr	r0, [sp, #4]
   17ff0:	ldrb	r0, [r0, #16]
   17ff4:	tst	r0, #1
   17ff8:	bne	18048 <__assert_fail@plt+0x6b00>
   17ffc:	vldr	s0, [pc, #128]	; 18084 <__assert_fail@plt+0x6b3c>
   18000:	ldr	r0, [sp, #8]
   18004:	vmov	s2, r0
   18008:	vcvt.f32.u32	s2, s2
   1800c:	ldr	r0, [sp, #4]
   18010:	vldr	s4, [r0, #8]
   18014:	vdiv.f32	s2, s2, s4
   18018:	vstr	s2, [sp]
   1801c:	vldr	s2, [sp]
   18020:	vcmpe.f32	s0, s2
   18024:	vmrs	APSR_nzcv, fpscr
   18028:	bhi	18038 <__assert_fail@plt+0x6af0>
   1802c:	movw	r0, #0
   18030:	str	r0, [fp, #-4]
   18034:	b	18078 <__assert_fail@plt+0x6b30>
   18038:	vldr	s0, [sp]
   1803c:	vcvt.u32.f32	s0, s0
   18040:	vmov	r0, s0
   18044:	str	r0, [sp, #8]
   18048:	ldr	r0, [sp, #8]
   1804c:	bl	18f50 <__assert_fail@plt+0x7a08>
   18050:	ldr	lr, [pc, #48]	; 18088 <__assert_fail@plt+0x6b40>
   18054:	str	r0, [sp, #8]
   18058:	ldr	r0, [sp, #8]
   1805c:	cmp	lr, r0
   18060:	bcs	18070 <__assert_fail@plt+0x6b28>
   18064:	movw	r0, #0
   18068:	str	r0, [fp, #-4]
   1806c:	b	18078 <__assert_fail@plt+0x6b30>
   18070:	ldr	r0, [sp, #8]
   18074:	str	r0, [fp, #-4]
   18078:	ldr	r0, [fp, #-4]
   1807c:	mov	sp, fp
   18080:	pop	{fp, pc}
   18084:	svcmi	0x00800000
   18088:	svcne	0x00ffffff
   1808c:	push	{fp, lr}
   18090:	mov	fp, sp
   18094:	sub	sp, sp, #24
   18098:	str	r0, [fp, #-4]
   1809c:	ldr	r0, [fp, #-4]
   180a0:	ldr	r0, [r0]
   180a4:	str	r0, [fp, #-8]
   180a8:	ldr	r0, [fp, #-8]
   180ac:	ldr	r1, [fp, #-4]
   180b0:	ldr	r1, [r1, #4]
   180b4:	cmp	r0, r1
   180b8:	bcs	181bc <__assert_fail@plt+0x6c74>
   180bc:	ldr	r0, [fp, #-8]
   180c0:	ldr	r0, [r0]
   180c4:	movw	r1, #0
   180c8:	cmp	r0, r1
   180cc:	beq	181a8 <__assert_fail@plt+0x6c60>
   180d0:	ldr	r0, [fp, #-8]
   180d4:	ldr	r0, [r0, #4]
   180d8:	str	r0, [sp, #12]
   180dc:	ldr	r0, [sp, #12]
   180e0:	movw	r1, #0
   180e4:	cmp	r0, r1
   180e8:	beq	18160 <__assert_fail@plt+0x6c18>
   180ec:	ldr	r0, [fp, #-4]
   180f0:	ldr	r0, [r0, #32]
   180f4:	movw	r1, #0
   180f8:	cmp	r0, r1
   180fc:	beq	18120 <__assert_fail@plt+0x6bd8>
   18100:	ldr	r0, [fp, #-4]
   18104:	ldr	r0, [r0, #32]
   18108:	ldr	r1, [sp, #12]
   1810c:	ldr	r1, [r1]
   18110:	str	r0, [sp, #4]
   18114:	mov	r0, r1
   18118:	ldr	r1, [sp, #4]
   1811c:	blx	r1
   18120:	ldr	r0, [sp, #12]
   18124:	movw	r1, #0
   18128:	str	r1, [r0]
   1812c:	ldr	r0, [sp, #12]
   18130:	ldr	r0, [r0, #4]
   18134:	str	r0, [sp, #8]
   18138:	ldr	r0, [fp, #-4]
   1813c:	ldr	r0, [r0, #36]	; 0x24
   18140:	ldr	r1, [sp, #12]
   18144:	str	r0, [r1, #4]
   18148:	ldr	r0, [sp, #12]
   1814c:	ldr	r1, [fp, #-4]
   18150:	str	r0, [r1, #36]	; 0x24
   18154:	ldr	r0, [sp, #8]
   18158:	str	r0, [sp, #12]
   1815c:	b	180dc <__assert_fail@plt+0x6b94>
   18160:	ldr	r0, [fp, #-4]
   18164:	ldr	r0, [r0, #32]
   18168:	movw	r1, #0
   1816c:	cmp	r0, r1
   18170:	beq	18194 <__assert_fail@plt+0x6c4c>
   18174:	ldr	r0, [fp, #-4]
   18178:	ldr	r0, [r0, #32]
   1817c:	ldr	r1, [fp, #-8]
   18180:	ldr	r1, [r1]
   18184:	str	r0, [sp]
   18188:	mov	r0, r1
   1818c:	ldr	r1, [sp]
   18190:	blx	r1
   18194:	ldr	r0, [fp, #-8]
   18198:	movw	r1, #0
   1819c:	str	r1, [r0]
   181a0:	ldr	r0, [fp, #-8]
   181a4:	str	r1, [r0, #4]
   181a8:	b	181ac <__assert_fail@plt+0x6c64>
   181ac:	ldr	r0, [fp, #-8]
   181b0:	add	r0, r0, #8
   181b4:	str	r0, [fp, #-8]
   181b8:	b	180a8 <__assert_fail@plt+0x6b60>
   181bc:	ldr	r0, [fp, #-4]
   181c0:	movw	r1, #0
   181c4:	str	r1, [r0, #12]
   181c8:	ldr	r0, [fp, #-4]
   181cc:	str	r1, [r0, #16]
   181d0:	mov	sp, fp
   181d4:	pop	{fp, pc}
   181d8:	push	{fp, lr}
   181dc:	mov	fp, sp
   181e0:	sub	sp, sp, #24
   181e4:	str	r0, [fp, #-4]
   181e8:	ldr	r0, [fp, #-4]
   181ec:	ldr	r0, [r0, #32]
   181f0:	movw	r1, #0
   181f4:	cmp	r0, r1
   181f8:	beq	182a4 <__assert_fail@plt+0x6d5c>
   181fc:	ldr	r0, [fp, #-4]
   18200:	ldr	r0, [r0, #16]
   18204:	cmp	r0, #0
   18208:	beq	182a4 <__assert_fail@plt+0x6d5c>
   1820c:	ldr	r0, [fp, #-4]
   18210:	ldr	r0, [r0]
   18214:	str	r0, [fp, #-8]
   18218:	ldr	r0, [fp, #-8]
   1821c:	ldr	r1, [fp, #-4]
   18220:	ldr	r1, [r1, #4]
   18224:	cmp	r0, r1
   18228:	bcs	182a0 <__assert_fail@plt+0x6d58>
   1822c:	ldr	r0, [fp, #-8]
   18230:	ldr	r0, [r0]
   18234:	movw	r1, #0
   18238:	cmp	r0, r1
   1823c:	beq	1828c <__assert_fail@plt+0x6d44>
   18240:	ldr	r0, [fp, #-8]
   18244:	str	r0, [sp, #12]
   18248:	ldr	r0, [sp, #12]
   1824c:	movw	r1, #0
   18250:	cmp	r0, r1
   18254:	beq	18288 <__assert_fail@plt+0x6d40>
   18258:	ldr	r0, [fp, #-4]
   1825c:	ldr	r0, [r0, #32]
   18260:	ldr	r1, [sp, #12]
   18264:	ldr	r1, [r1]
   18268:	str	r0, [sp, #4]
   1826c:	mov	r0, r1
   18270:	ldr	r1, [sp, #4]
   18274:	blx	r1
   18278:	ldr	r0, [sp, #12]
   1827c:	ldr	r0, [r0, #4]
   18280:	str	r0, [sp, #12]
   18284:	b	18248 <__assert_fail@plt+0x6d00>
   18288:	b	1828c <__assert_fail@plt+0x6d44>
   1828c:	b	18290 <__assert_fail@plt+0x6d48>
   18290:	ldr	r0, [fp, #-8]
   18294:	add	r0, r0, #8
   18298:	str	r0, [fp, #-8]
   1829c:	b	18218 <__assert_fail@plt+0x6cd0>
   182a0:	b	182a4 <__assert_fail@plt+0x6d5c>
   182a4:	ldr	r0, [fp, #-4]
   182a8:	ldr	r0, [r0]
   182ac:	str	r0, [fp, #-8]
   182b0:	ldr	r0, [fp, #-8]
   182b4:	ldr	r1, [fp, #-4]
   182b8:	ldr	r1, [r1, #4]
   182bc:	cmp	r0, r1
   182c0:	bcs	18314 <__assert_fail@plt+0x6dcc>
   182c4:	ldr	r0, [fp, #-8]
   182c8:	ldr	r0, [r0, #4]
   182cc:	str	r0, [sp, #12]
   182d0:	ldr	r0, [sp, #12]
   182d4:	movw	r1, #0
   182d8:	cmp	r0, r1
   182dc:	beq	18300 <__assert_fail@plt+0x6db8>
   182e0:	ldr	r0, [sp, #12]
   182e4:	ldr	r0, [r0, #4]
   182e8:	str	r0, [sp, #8]
   182ec:	ldr	r0, [sp, #12]
   182f0:	bl	1398c <__assert_fail@plt+0x2444>
   182f4:	ldr	r0, [sp, #8]
   182f8:	str	r0, [sp, #12]
   182fc:	b	182d0 <__assert_fail@plt+0x6d88>
   18300:	b	18304 <__assert_fail@plt+0x6dbc>
   18304:	ldr	r0, [fp, #-8]
   18308:	add	r0, r0, #8
   1830c:	str	r0, [fp, #-8]
   18310:	b	182b0 <__assert_fail@plt+0x6d68>
   18314:	ldr	r0, [fp, #-4]
   18318:	ldr	r0, [r0, #36]	; 0x24
   1831c:	str	r0, [sp, #12]
   18320:	ldr	r0, [sp, #12]
   18324:	movw	r1, #0
   18328:	cmp	r0, r1
   1832c:	beq	18350 <__assert_fail@plt+0x6e08>
   18330:	ldr	r0, [sp, #12]
   18334:	ldr	r0, [r0, #4]
   18338:	str	r0, [sp, #8]
   1833c:	ldr	r0, [sp, #12]
   18340:	bl	1398c <__assert_fail@plt+0x2444>
   18344:	ldr	r0, [sp, #8]
   18348:	str	r0, [sp, #12]
   1834c:	b	18320 <__assert_fail@plt+0x6dd8>
   18350:	ldr	r0, [fp, #-4]
   18354:	ldr	r0, [r0]
   18358:	bl	1398c <__assert_fail@plt+0x2444>
   1835c:	ldr	r0, [fp, #-4]
   18360:	bl	1398c <__assert_fail@plt+0x2444>
   18364:	mov	sp, fp
   18368:	pop	{fp, pc}
   1836c:	push	{fp, lr}
   18370:	mov	fp, sp
   18374:	sub	sp, sp, #64	; 0x40
   18378:	str	r0, [fp, #-8]
   1837c:	str	r1, [fp, #-12]
   18380:	ldr	r0, [fp, #-12]
   18384:	ldr	r1, [fp, #-8]
   18388:	ldr	r1, [r1, #20]
   1838c:	bl	17fd8 <__assert_fail@plt+0x6a90>
   18390:	str	r0, [sp, #4]
   18394:	ldr	r0, [sp, #4]
   18398:	cmp	r0, #0
   1839c:	bne	183b0 <__assert_fail@plt+0x6e68>
   183a0:	movw	r0, #0
   183a4:	and	r0, r0, #1
   183a8:	strb	r0, [fp, #-1]
   183ac:	b	18588 <__assert_fail@plt+0x7040>
   183b0:	ldr	r0, [sp, #4]
   183b4:	ldr	r1, [fp, #-8]
   183b8:	ldr	r1, [r1, #8]
   183bc:	cmp	r0, r1
   183c0:	bne	183d4 <__assert_fail@plt+0x6e8c>
   183c4:	movw	r0, #1
   183c8:	and	r0, r0, #1
   183cc:	strb	r0, [fp, #-1]
   183d0:	b	18588 <__assert_fail@plt+0x7040>
   183d4:	add	r0, sp, #12
   183d8:	str	r0, [sp, #8]
   183dc:	ldr	r0, [sp, #4]
   183e0:	movw	r1, #8
   183e4:	bl	2190c <__assert_fail@plt+0x103c4>
   183e8:	ldr	r1, [sp, #8]
   183ec:	str	r0, [r1]
   183f0:	ldr	r0, [sp, #8]
   183f4:	ldr	r0, [r0]
   183f8:	movw	r1, #0
   183fc:	cmp	r0, r1
   18400:	bne	18414 <__assert_fail@plt+0x6ecc>
   18404:	movw	r0, #0
   18408:	and	r0, r0, #1
   1840c:	strb	r0, [fp, #-1]
   18410:	b	18588 <__assert_fail@plt+0x7040>
   18414:	ldr	r0, [sp, #4]
   18418:	ldr	r1, [sp, #8]
   1841c:	str	r0, [r1, #8]
   18420:	ldr	r0, [sp, #8]
   18424:	ldr	r0, [r0]
   18428:	ldr	r1, [sp, #4]
   1842c:	add	r0, r0, r1, lsl #3
   18430:	ldr	r1, [sp, #8]
   18434:	str	r0, [r1, #4]
   18438:	ldr	r0, [sp, #8]
   1843c:	movw	r1, #0
   18440:	str	r1, [r0, #12]
   18444:	ldr	r0, [sp, #8]
   18448:	str	r1, [r0, #16]
   1844c:	ldr	r0, [fp, #-8]
   18450:	ldr	r0, [r0, #20]
   18454:	ldr	r1, [sp, #8]
   18458:	str	r0, [r1, #20]
   1845c:	ldr	r0, [fp, #-8]
   18460:	ldr	r0, [r0, #24]
   18464:	ldr	r1, [sp, #8]
   18468:	str	r0, [r1, #24]
   1846c:	ldr	r0, [fp, #-8]
   18470:	ldr	r0, [r0, #28]
   18474:	ldr	r1, [sp, #8]
   18478:	str	r0, [r1, #28]
   1847c:	ldr	r0, [fp, #-8]
   18480:	ldr	r0, [r0, #32]
   18484:	ldr	r1, [sp, #8]
   18488:	str	r0, [r1, #32]
   1848c:	ldr	r0, [fp, #-8]
   18490:	ldr	r0, [r0, #36]	; 0x24
   18494:	ldr	r1, [sp, #8]
   18498:	str	r0, [r1, #36]	; 0x24
   1849c:	ldr	r0, [sp, #8]
   184a0:	ldr	r1, [fp, #-8]
   184a4:	movw	r2, #0
   184a8:	and	r2, r2, #1
   184ac:	bl	18598 <__assert_fail@plt+0x7050>
   184b0:	tst	r0, #1
   184b4:	beq	18524 <__assert_fail@plt+0x6fdc>
   184b8:	ldr	r0, [fp, #-8]
   184bc:	ldr	r0, [r0]
   184c0:	bl	1398c <__assert_fail@plt+0x2444>
   184c4:	ldr	r0, [sp, #8]
   184c8:	ldr	r0, [r0]
   184cc:	ldr	lr, [fp, #-8]
   184d0:	str	r0, [lr]
   184d4:	ldr	r0, [sp, #8]
   184d8:	ldr	r0, [r0, #4]
   184dc:	ldr	lr, [fp, #-8]
   184e0:	str	r0, [lr, #4]
   184e4:	ldr	r0, [sp, #8]
   184e8:	ldr	r0, [r0, #8]
   184ec:	ldr	lr, [fp, #-8]
   184f0:	str	r0, [lr, #8]
   184f4:	ldr	r0, [sp, #8]
   184f8:	ldr	r0, [r0, #12]
   184fc:	ldr	lr, [fp, #-8]
   18500:	str	r0, [lr, #12]
   18504:	ldr	r0, [sp, #8]
   18508:	ldr	r0, [r0, #36]	; 0x24
   1850c:	ldr	lr, [fp, #-8]
   18510:	str	r0, [lr, #36]	; 0x24
   18514:	movw	r0, #1
   18518:	and	r0, r0, #1
   1851c:	strb	r0, [fp, #-1]
   18520:	b	18588 <__assert_fail@plt+0x7040>
   18524:	ldr	r0, [sp, #8]
   18528:	ldr	r0, [r0, #36]	; 0x24
   1852c:	ldr	r1, [fp, #-8]
   18530:	str	r0, [r1, #36]	; 0x24
   18534:	ldr	r0, [fp, #-8]
   18538:	ldr	r1, [sp, #8]
   1853c:	movw	r2, #1
   18540:	and	r2, r2, #1
   18544:	bl	18598 <__assert_fail@plt+0x7050>
   18548:	tst	r0, #1
   1854c:	beq	1856c <__assert_fail@plt+0x7024>
   18550:	ldr	r0, [fp, #-8]
   18554:	ldr	r1, [sp, #8]
   18558:	movw	r2, #0
   1855c:	and	r2, r2, #1
   18560:	bl	18598 <__assert_fail@plt+0x7050>
   18564:	tst	r0, #1
   18568:	bne	18570 <__assert_fail@plt+0x7028>
   1856c:	bl	11500 <abort@plt>
   18570:	ldr	r0, [sp, #8]
   18574:	ldr	r0, [r0]
   18578:	bl	1398c <__assert_fail@plt+0x2444>
   1857c:	movw	r0, #0
   18580:	and	r0, r0, #1
   18584:	strb	r0, [fp, #-1]
   18588:	ldrb	r0, [fp, #-1]
   1858c:	and	r0, r0, #1
   18590:	mov	sp, fp
   18594:	pop	{fp, pc}
   18598:	push	{fp, lr}
   1859c:	mov	fp, sp
   185a0:	sub	sp, sp, #40	; 0x28
   185a4:	str	r0, [fp, #-8]
   185a8:	str	r1, [fp, #-12]
   185ac:	and	r0, r2, #1
   185b0:	strb	r0, [fp, #-13]
   185b4:	ldr	r0, [fp, #-12]
   185b8:	ldr	r0, [r0]
   185bc:	str	r0, [sp, #20]
   185c0:	ldr	r0, [sp, #20]
   185c4:	ldr	r1, [fp, #-12]
   185c8:	ldr	r1, [r1, #4]
   185cc:	cmp	r0, r1
   185d0:	bcs	1878c <__assert_fail@plt+0x7244>
   185d4:	ldr	r0, [sp, #20]
   185d8:	ldr	r0, [r0]
   185dc:	movw	r1, #0
   185e0:	cmp	r0, r1
   185e4:	beq	18778 <__assert_fail@plt+0x7230>
   185e8:	ldr	r0, [sp, #20]
   185ec:	ldr	r0, [r0, #4]
   185f0:	str	r0, [sp, #16]
   185f4:	ldr	r0, [sp, #16]
   185f8:	movw	r1, #0
   185fc:	cmp	r0, r1
   18600:	beq	18698 <__assert_fail@plt+0x7150>
   18604:	ldr	r0, [sp, #16]
   18608:	ldr	r0, [r0]
   1860c:	str	r0, [sp, #8]
   18610:	ldr	r0, [fp, #-8]
   18614:	ldr	r1, [sp, #8]
   18618:	bl	17840 <__assert_fail@plt+0x62f8>
   1861c:	str	r0, [sp, #4]
   18620:	ldr	r0, [sp, #16]
   18624:	ldr	r0, [r0, #4]
   18628:	str	r0, [sp, #12]
   1862c:	ldr	r0, [sp, #4]
   18630:	ldr	r0, [r0]
   18634:	movw	r1, #0
   18638:	cmp	r0, r1
   1863c:	beq	18660 <__assert_fail@plt+0x7118>
   18640:	ldr	r0, [sp, #4]
   18644:	ldr	r0, [r0, #4]
   18648:	ldr	r1, [sp, #16]
   1864c:	str	r0, [r1, #4]
   18650:	ldr	r0, [sp, #16]
   18654:	ldr	r1, [sp, #4]
   18658:	str	r0, [r1, #4]
   1865c:	b	18688 <__assert_fail@plt+0x7140>
   18660:	ldr	r0, [sp, #8]
   18664:	ldr	r1, [sp, #4]
   18668:	str	r0, [r1]
   1866c:	ldr	r0, [fp, #-8]
   18670:	ldr	r1, [r0, #12]
   18674:	add	r1, r1, #1
   18678:	str	r1, [r0, #12]
   1867c:	ldr	r0, [fp, #-8]
   18680:	ldr	r1, [sp, #16]
   18684:	bl	190a8 <__assert_fail@plt+0x7b60>
   18688:	b	1868c <__assert_fail@plt+0x7144>
   1868c:	ldr	r0, [sp, #12]
   18690:	str	r0, [sp, #16]
   18694:	b	185f4 <__assert_fail@plt+0x70ac>
   18698:	ldr	r0, [sp, #20]
   1869c:	ldr	r0, [r0]
   186a0:	str	r0, [sp, #8]
   186a4:	ldr	r0, [sp, #20]
   186a8:	movw	r1, #0
   186ac:	str	r1, [r0, #4]
   186b0:	ldrb	r0, [fp, #-13]
   186b4:	tst	r0, #1
   186b8:	beq	186c0 <__assert_fail@plt+0x7178>
   186bc:	b	1877c <__assert_fail@plt+0x7234>
   186c0:	ldr	r0, [fp, #-8]
   186c4:	ldr	r1, [sp, #8]
   186c8:	bl	17840 <__assert_fail@plt+0x62f8>
   186cc:	str	r0, [sp, #4]
   186d0:	ldr	r0, [sp, #4]
   186d4:	ldr	r0, [r0]
   186d8:	movw	r1, #0
   186dc:	cmp	r0, r1
   186e0:	beq	1873c <__assert_fail@plt+0x71f4>
   186e4:	ldr	r0, [fp, #-8]
   186e8:	bl	18c54 <__assert_fail@plt+0x770c>
   186ec:	str	r0, [sp]
   186f0:	ldr	r0, [sp]
   186f4:	movw	lr, #0
   186f8:	cmp	r0, lr
   186fc:	bne	18710 <__assert_fail@plt+0x71c8>
   18700:	movw	r0, #0
   18704:	and	r0, r0, #1
   18708:	strb	r0, [fp, #-1]
   1870c:	b	18798 <__assert_fail@plt+0x7250>
   18710:	ldr	r0, [sp, #8]
   18714:	ldr	r1, [sp]
   18718:	str	r0, [r1]
   1871c:	ldr	r0, [sp, #4]
   18720:	ldr	r0, [r0, #4]
   18724:	ldr	r1, [sp]
   18728:	str	r0, [r1, #4]
   1872c:	ldr	r0, [sp]
   18730:	ldr	r1, [sp, #4]
   18734:	str	r0, [r1, #4]
   18738:	b	18758 <__assert_fail@plt+0x7210>
   1873c:	ldr	r0, [sp, #8]
   18740:	ldr	r1, [sp, #4]
   18744:	str	r0, [r1]
   18748:	ldr	r0, [fp, #-8]
   1874c:	ldr	r1, [r0, #12]
   18750:	add	r1, r1, #1
   18754:	str	r1, [r0, #12]
   18758:	ldr	r0, [sp, #20]
   1875c:	movw	r1, #0
   18760:	str	r1, [r0]
   18764:	ldr	r0, [fp, #-12]
   18768:	ldr	r1, [r0, #12]
   1876c:	mvn	r2, #0
   18770:	add	r1, r1, r2
   18774:	str	r1, [r0, #12]
   18778:	b	1877c <__assert_fail@plt+0x7234>
   1877c:	ldr	r0, [sp, #20]
   18780:	add	r0, r0, #8
   18784:	str	r0, [sp, #20]
   18788:	b	185c0 <__assert_fail@plt+0x7078>
   1878c:	movw	r0, #1
   18790:	and	r0, r0, #1
   18794:	strb	r0, [fp, #-1]
   18798:	ldrb	r0, [fp, #-1]
   1879c:	and	r0, r0, #1
   187a0:	mov	sp, fp
   187a4:	pop	{fp, pc}
   187a8:	push	{fp, lr}
   187ac:	mov	fp, sp
   187b0:	sub	sp, sp, #48	; 0x30
   187b4:	str	r0, [fp, #-8]
   187b8:	str	r1, [fp, #-12]
   187bc:	str	r2, [fp, #-16]
   187c0:	ldr	r0, [fp, #-12]
   187c4:	movw	r1, #0
   187c8:	cmp	r0, r1
   187cc:	bne	187d4 <__assert_fail@plt+0x728c>
   187d0:	bl	11500 <abort@plt>
   187d4:	ldr	r0, [fp, #-8]
   187d8:	ldr	r1, [fp, #-12]
   187dc:	add	r2, sp, #24
   187e0:	movw	r3, #0
   187e4:	and	r3, r3, #1
   187e8:	bl	18a58 <__assert_fail@plt+0x7510>
   187ec:	str	r0, [fp, #-20]	; 0xffffffec
   187f0:	movw	r1, #0
   187f4:	cmp	r0, r1
   187f8:	beq	18824 <__assert_fail@plt+0x72dc>
   187fc:	ldr	r0, [fp, #-16]
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	beq	18818 <__assert_fail@plt+0x72d0>
   1880c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18810:	ldr	r1, [fp, #-16]
   18814:	str	r0, [r1]
   18818:	movw	r0, #0
   1881c:	str	r0, [fp, #-4]
   18820:	b	18a48 <__assert_fail@plt+0x7500>
   18824:	ldr	r0, [fp, #-8]
   18828:	ldr	r0, [r0, #12]
   1882c:	vmov	s0, r0
   18830:	vcvt.f32.u32	s0, s0
   18834:	ldr	r0, [fp, #-8]
   18838:	ldr	r0, [r0, #20]
   1883c:	vldr	s2, [r0, #8]
   18840:	ldr	r0, [fp, #-8]
   18844:	ldr	r0, [r0, #8]
   18848:	vmov	s4, r0
   1884c:	vcvt.f32.u32	s4, s4
   18850:	vmul.f32	s2, s2, s4
   18854:	vcmpe.f32	s0, s2
   18858:	vmrs	APSR_nzcv, fpscr
   1885c:	ble	18994 <__assert_fail@plt+0x744c>
   18860:	ldr	r0, [fp, #-8]
   18864:	bl	17e84 <__assert_fail@plt+0x693c>
   18868:	ldr	lr, [fp, #-8]
   1886c:	ldr	lr, [lr, #12]
   18870:	vmov	s0, lr
   18874:	vcvt.f32.u32	s0, s0
   18878:	ldr	lr, [fp, #-8]
   1887c:	ldr	lr, [lr, #20]
   18880:	vldr	s2, [lr, #8]
   18884:	ldr	lr, [fp, #-8]
   18888:	ldr	lr, [lr, #8]
   1888c:	vmov	s4, lr
   18890:	vcvt.f32.u32	s4, s4
   18894:	vmul.f32	s2, s2, s4
   18898:	vcmpe.f32	s0, s2
   1889c:	vmrs	APSR_nzcv, fpscr
   188a0:	str	r0, [sp, #8]
   188a4:	ble	18990 <__assert_fail@plt+0x7448>
   188a8:	ldr	r0, [fp, #-8]
   188ac:	ldr	r0, [r0, #20]
   188b0:	str	r0, [sp, #20]
   188b4:	ldr	r0, [sp, #20]
   188b8:	ldrb	r0, [r0, #16]
   188bc:	tst	r0, #1
   188c0:	beq	188e8 <__assert_fail@plt+0x73a0>
   188c4:	ldr	r0, [fp, #-8]
   188c8:	ldr	r0, [r0, #8]
   188cc:	vmov	s0, r0
   188d0:	vcvt.f32.u32	s0, s0
   188d4:	ldr	r0, [sp, #20]
   188d8:	vldr	s2, [r0, #12]
   188dc:	vmul.f32	s0, s0, s2
   188e0:	vstr	s0, [sp, #4]
   188e4:	b	18914 <__assert_fail@plt+0x73cc>
   188e8:	ldr	r0, [fp, #-8]
   188ec:	ldr	r0, [r0, #8]
   188f0:	vmov	s0, r0
   188f4:	vcvt.f32.u32	s0, s0
   188f8:	ldr	r0, [sp, #20]
   188fc:	vldr	s2, [r0, #12]
   18900:	vmul.f32	s0, s0, s2
   18904:	ldr	r0, [sp, #20]
   18908:	vldr	s2, [r0, #8]
   1890c:	vmul.f32	s0, s0, s2
   18910:	vstr	s0, [sp, #4]
   18914:	vldr	s0, [sp, #4]
   18918:	vldr	s2, [pc, #308]	; 18a54 <__assert_fail@plt+0x750c>
   1891c:	vstr	s0, [sp, #16]
   18920:	vldr	s0, [sp, #16]
   18924:	vcmpe.f32	s2, s0
   18928:	vmrs	APSR_nzcv, fpscr
   1892c:	bhi	1893c <__assert_fail@plt+0x73f4>
   18930:	mvn	r0, #0
   18934:	str	r0, [fp, #-4]
   18938:	b	18a48 <__assert_fail@plt+0x7500>
   1893c:	ldr	r0, [fp, #-8]
   18940:	vldr	s0, [sp, #16]
   18944:	vcvt.u32.f32	s0, s0
   18948:	vmov	r1, s0
   1894c:	bl	1836c <__assert_fail@plt+0x6e24>
   18950:	tst	r0, #1
   18954:	bne	18964 <__assert_fail@plt+0x741c>
   18958:	mvn	r0, #0
   1895c:	str	r0, [fp, #-4]
   18960:	b	18a48 <__assert_fail@plt+0x7500>
   18964:	ldr	r0, [fp, #-8]
   18968:	ldr	r1, [fp, #-12]
   1896c:	add	r2, sp, #24
   18970:	movw	r3, #0
   18974:	and	r3, r3, #1
   18978:	bl	18a58 <__assert_fail@plt+0x7510>
   1897c:	movw	r1, #0
   18980:	cmp	r0, r1
   18984:	beq	1898c <__assert_fail@plt+0x7444>
   18988:	bl	11500 <abort@plt>
   1898c:	b	18990 <__assert_fail@plt+0x7448>
   18990:	b	18994 <__assert_fail@plt+0x744c>
   18994:	ldr	r0, [sp, #24]
   18998:	ldr	r0, [r0]
   1899c:	movw	r1, #0
   189a0:	cmp	r0, r1
   189a4:	beq	18a14 <__assert_fail@plt+0x74cc>
   189a8:	ldr	r0, [fp, #-8]
   189ac:	bl	18c54 <__assert_fail@plt+0x770c>
   189b0:	str	r0, [sp, #12]
   189b4:	ldr	r0, [sp, #12]
   189b8:	movw	lr, #0
   189bc:	cmp	r0, lr
   189c0:	bne	189d0 <__assert_fail@plt+0x7488>
   189c4:	mvn	r0, #0
   189c8:	str	r0, [fp, #-4]
   189cc:	b	18a48 <__assert_fail@plt+0x7500>
   189d0:	ldr	r0, [fp, #-12]
   189d4:	ldr	r1, [sp, #12]
   189d8:	str	r0, [r1]
   189dc:	ldr	r0, [sp, #24]
   189e0:	ldr	r0, [r0, #4]
   189e4:	ldr	r1, [sp, #12]
   189e8:	str	r0, [r1, #4]
   189ec:	ldr	r0, [sp, #12]
   189f0:	ldr	r1, [sp, #24]
   189f4:	str	r0, [r1, #4]
   189f8:	ldr	r0, [fp, #-8]
   189fc:	ldr	r1, [r0, #16]
   18a00:	add	r1, r1, #1
   18a04:	str	r1, [r0, #16]
   18a08:	movw	r0, #1
   18a0c:	str	r0, [fp, #-4]
   18a10:	b	18a48 <__assert_fail@plt+0x7500>
   18a14:	ldr	r0, [fp, #-12]
   18a18:	ldr	r1, [sp, #24]
   18a1c:	str	r0, [r1]
   18a20:	ldr	r0, [fp, #-8]
   18a24:	ldr	r1, [r0, #16]
   18a28:	add	r1, r1, #1
   18a2c:	str	r1, [r0, #16]
   18a30:	ldr	r0, [fp, #-8]
   18a34:	ldr	r1, [r0, #12]
   18a38:	add	r1, r1, #1
   18a3c:	str	r1, [r0, #12]
   18a40:	movw	r0, #1
   18a44:	str	r0, [fp, #-4]
   18a48:	ldr	r0, [fp, #-4]
   18a4c:	mov	sp, fp
   18a50:	pop	{fp, pc}
   18a54:	svcmi	0x00800000
   18a58:	push	{fp, lr}
   18a5c:	mov	fp, sp
   18a60:	sub	sp, sp, #56	; 0x38
   18a64:	str	r0, [fp, #-8]
   18a68:	str	r1, [fp, #-12]
   18a6c:	str	r2, [fp, #-16]
   18a70:	and	r0, r3, #1
   18a74:	strb	r0, [fp, #-17]	; 0xffffffef
   18a78:	ldr	r0, [fp, #-8]
   18a7c:	ldr	r1, [fp, #-12]
   18a80:	bl	17840 <__assert_fail@plt+0x62f8>
   18a84:	str	r0, [fp, #-24]	; 0xffffffe8
   18a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a8c:	ldr	r1, [fp, #-16]
   18a90:	str	r0, [r1]
   18a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a98:	ldr	r0, [r0]
   18a9c:	movw	r1, #0
   18aa0:	cmp	r0, r1
   18aa4:	bne	18ab4 <__assert_fail@plt+0x756c>
   18aa8:	movw	r0, #0
   18aac:	str	r0, [fp, #-4]
   18ab0:	b	18c48 <__assert_fail@plt+0x7700>
   18ab4:	ldr	r0, [fp, #-12]
   18ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18abc:	ldr	r1, [r1]
   18ac0:	cmp	r0, r1
   18ac4:	beq	18af8 <__assert_fail@plt+0x75b0>
   18ac8:	ldr	r0, [fp, #-8]
   18acc:	ldr	r0, [r0, #28]
   18ad0:	ldr	r1, [fp, #-12]
   18ad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ad8:	ldr	r2, [r2]
   18adc:	str	r0, [sp, #8]
   18ae0:	mov	r0, r1
   18ae4:	mov	r1, r2
   18ae8:	ldr	r2, [sp, #8]
   18aec:	blx	r2
   18af0:	tst	r0, #1
   18af4:	beq	18b74 <__assert_fail@plt+0x762c>
   18af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18afc:	ldr	r0, [r0]
   18b00:	str	r0, [sp, #24]
   18b04:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18b08:	tst	r0, #1
   18b0c:	beq	18b68 <__assert_fail@plt+0x7620>
   18b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b14:	ldr	r0, [r0, #4]
   18b18:	movw	r1, #0
   18b1c:	cmp	r0, r1
   18b20:	beq	18b58 <__assert_fail@plt+0x7610>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	ldr	r0, [r0, #4]
   18b2c:	str	r0, [sp, #20]
   18b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b34:	ldr	r1, [sp, #20]
   18b38:	ldr	r2, [r1]
   18b3c:	str	r2, [r0]
   18b40:	ldr	r1, [r1, #4]
   18b44:	str	r1, [r0, #4]
   18b48:	ldr	r0, [fp, #-8]
   18b4c:	ldr	r1, [sp, #20]
   18b50:	bl	190a8 <__assert_fail@plt+0x7b60>
   18b54:	b	18b64 <__assert_fail@plt+0x761c>
   18b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b5c:	movw	r1, #0
   18b60:	str	r1, [r0]
   18b64:	b	18b68 <__assert_fail@plt+0x7620>
   18b68:	ldr	r0, [sp, #24]
   18b6c:	str	r0, [fp, #-4]
   18b70:	b	18c48 <__assert_fail@plt+0x7700>
   18b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b78:	str	r0, [sp, #28]
   18b7c:	ldr	r0, [sp, #28]
   18b80:	ldr	r0, [r0, #4]
   18b84:	movw	r1, #0
   18b88:	cmp	r0, r1
   18b8c:	beq	18c40 <__assert_fail@plt+0x76f8>
   18b90:	ldr	r0, [fp, #-12]
   18b94:	ldr	r1, [sp, #28]
   18b98:	ldr	r1, [r1, #4]
   18b9c:	ldr	r1, [r1]
   18ba0:	cmp	r0, r1
   18ba4:	beq	18bdc <__assert_fail@plt+0x7694>
   18ba8:	ldr	r0, [fp, #-8]
   18bac:	ldr	r0, [r0, #28]
   18bb0:	ldr	r1, [fp, #-12]
   18bb4:	ldr	r2, [sp, #28]
   18bb8:	ldr	r2, [r2, #4]
   18bbc:	ldr	r2, [r2]
   18bc0:	str	r0, [sp, #4]
   18bc4:	mov	r0, r1
   18bc8:	mov	r1, r2
   18bcc:	ldr	r2, [sp, #4]
   18bd0:	blx	r2
   18bd4:	tst	r0, #1
   18bd8:	beq	18c2c <__assert_fail@plt+0x76e4>
   18bdc:	ldr	r0, [sp, #28]
   18be0:	ldr	r0, [r0, #4]
   18be4:	ldr	r0, [r0]
   18be8:	str	r0, [sp, #16]
   18bec:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18bf0:	tst	r0, #1
   18bf4:	beq	18c20 <__assert_fail@plt+0x76d8>
   18bf8:	ldr	r0, [sp, #28]
   18bfc:	ldr	r0, [r0, #4]
   18c00:	str	r0, [sp, #12]
   18c04:	ldr	r0, [sp, #12]
   18c08:	ldr	r0, [r0, #4]
   18c0c:	ldr	r1, [sp, #28]
   18c10:	str	r0, [r1, #4]
   18c14:	ldr	r0, [fp, #-8]
   18c18:	ldr	r1, [sp, #12]
   18c1c:	bl	190a8 <__assert_fail@plt+0x7b60>
   18c20:	ldr	r0, [sp, #16]
   18c24:	str	r0, [fp, #-4]
   18c28:	b	18c48 <__assert_fail@plt+0x7700>
   18c2c:	b	18c30 <__assert_fail@plt+0x76e8>
   18c30:	ldr	r0, [sp, #28]
   18c34:	ldr	r0, [r0, #4]
   18c38:	str	r0, [sp, #28]
   18c3c:	b	18b7c <__assert_fail@plt+0x7634>
   18c40:	movw	r0, #0
   18c44:	str	r0, [fp, #-4]
   18c48:	ldr	r0, [fp, #-4]
   18c4c:	mov	sp, fp
   18c50:	pop	{fp, pc}
   18c54:	push	{fp, lr}
   18c58:	mov	fp, sp
   18c5c:	sub	sp, sp, #8
   18c60:	str	r0, [sp, #4]
   18c64:	ldr	r0, [sp, #4]
   18c68:	ldr	r0, [r0, #36]	; 0x24
   18c6c:	movw	r1, #0
   18c70:	cmp	r0, r1
   18c74:	beq	18c98 <__assert_fail@plt+0x7750>
   18c78:	ldr	r0, [sp, #4]
   18c7c:	ldr	r0, [r0, #36]	; 0x24
   18c80:	str	r0, [sp]
   18c84:	ldr	r0, [sp]
   18c88:	ldr	r0, [r0, #4]
   18c8c:	ldr	r1, [sp, #4]
   18c90:	str	r0, [r1, #36]	; 0x24
   18c94:	b	18ca4 <__assert_fail@plt+0x775c>
   18c98:	movw	r0, #8
   18c9c:	bl	219a8 <__assert_fail@plt+0x10460>
   18ca0:	str	r0, [sp]
   18ca4:	ldr	r0, [sp]
   18ca8:	mov	sp, fp
   18cac:	pop	{fp, pc}
   18cb0:	push	{fp, lr}
   18cb4:	mov	fp, sp
   18cb8:	sub	sp, sp, #24
   18cbc:	str	r0, [fp, #-4]
   18cc0:	str	r1, [fp, #-8]
   18cc4:	ldr	r0, [fp, #-4]
   18cc8:	ldr	r1, [fp, #-8]
   18ccc:	add	r2, sp, #12
   18cd0:	bl	187a8 <__assert_fail@plt+0x7260>
   18cd4:	str	r0, [sp, #8]
   18cd8:	ldr	r0, [sp, #8]
   18cdc:	cmn	r0, #1
   18ce0:	bne	18cf0 <__assert_fail@plt+0x77a8>
   18ce4:	movw	r0, #0
   18ce8:	str	r0, [sp, #4]
   18cec:	b	18d18 <__assert_fail@plt+0x77d0>
   18cf0:	ldr	r0, [sp, #8]
   18cf4:	cmp	r0, #0
   18cf8:	bne	18d08 <__assert_fail@plt+0x77c0>
   18cfc:	ldr	r0, [sp, #12]
   18d00:	str	r0, [sp]
   18d04:	b	18d10 <__assert_fail@plt+0x77c8>
   18d08:	ldr	r0, [fp, #-8]
   18d0c:	str	r0, [sp]
   18d10:	ldr	r0, [sp]
   18d14:	str	r0, [sp, #4]
   18d18:	ldr	r0, [sp, #4]
   18d1c:	mov	sp, fp
   18d20:	pop	{fp, pc}
   18d24:	push	{fp, lr}
   18d28:	mov	fp, sp
   18d2c:	sub	sp, sp, #48	; 0x30
   18d30:	str	r0, [fp, #-8]
   18d34:	str	r1, [fp, #-12]
   18d38:	ldr	r0, [fp, #-8]
   18d3c:	ldr	r1, [fp, #-12]
   18d40:	sub	r2, fp, #20
   18d44:	movw	r3, #1
   18d48:	and	r3, r3, #1
   18d4c:	bl	18a58 <__assert_fail@plt+0x7510>
   18d50:	str	r0, [fp, #-16]
   18d54:	ldr	r0, [fp, #-16]
   18d58:	movw	r1, #0
   18d5c:	cmp	r0, r1
   18d60:	bne	18d70 <__assert_fail@plt+0x7828>
   18d64:	movw	r0, #0
   18d68:	str	r0, [fp, #-4]
   18d6c:	b	18f1c <__assert_fail@plt+0x79d4>
   18d70:	ldr	r0, [fp, #-8]
   18d74:	ldr	r1, [r0, #16]
   18d78:	mvn	r2, #0
   18d7c:	add	r1, r1, r2
   18d80:	str	r1, [r0, #16]
   18d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d88:	ldr	r0, [r0]
   18d8c:	movw	r1, #0
   18d90:	cmp	r0, r1
   18d94:	bne	18f14 <__assert_fail@plt+0x79cc>
   18d98:	ldr	r0, [fp, #-8]
   18d9c:	ldr	r1, [r0, #12]
   18da0:	mvn	r2, #0
   18da4:	add	r1, r1, r2
   18da8:	str	r1, [r0, #12]
   18dac:	ldr	r0, [fp, #-8]
   18db0:	ldr	r0, [r0, #12]
   18db4:	vmov	s0, r0
   18db8:	vcvt.f32.u32	s0, s0
   18dbc:	ldr	r0, [fp, #-8]
   18dc0:	ldr	r0, [r0, #20]
   18dc4:	vldr	s2, [r0]
   18dc8:	ldr	r0, [fp, #-8]
   18dcc:	ldr	r0, [r0, #8]
   18dd0:	vmov	s4, r0
   18dd4:	vcvt.f32.u32	s4, s4
   18dd8:	vmul.f32	s2, s2, s4
   18ddc:	vcmpe.f32	s0, s2
   18de0:	vmrs	APSR_nzcv, fpscr
   18de4:	bpl	18f10 <__assert_fail@plt+0x79c8>
   18de8:	ldr	r0, [fp, #-8]
   18dec:	bl	17e84 <__assert_fail@plt+0x693c>
   18df0:	ldr	lr, [fp, #-8]
   18df4:	ldr	lr, [lr, #12]
   18df8:	vmov	s0, lr
   18dfc:	vcvt.f32.u32	s0, s0
   18e00:	ldr	lr, [fp, #-8]
   18e04:	ldr	lr, [lr, #20]
   18e08:	vldr	s2, [lr]
   18e0c:	ldr	lr, [fp, #-8]
   18e10:	ldr	lr, [lr, #8]
   18e14:	vmov	s4, lr
   18e18:	vcvt.f32.u32	s4, s4
   18e1c:	vmul.f32	s2, s2, s4
   18e20:	vcmpe.f32	s0, s2
   18e24:	vmrs	APSR_nzcv, fpscr
   18e28:	str	r0, [sp, #8]
   18e2c:	bpl	18f0c <__assert_fail@plt+0x79c4>
   18e30:	ldr	r0, [fp, #-8]
   18e34:	ldr	r0, [r0, #20]
   18e38:	str	r0, [sp, #24]
   18e3c:	ldr	r0, [sp, #24]
   18e40:	ldrb	r0, [r0, #16]
   18e44:	tst	r0, #1
   18e48:	beq	18e70 <__assert_fail@plt+0x7928>
   18e4c:	ldr	r0, [fp, #-8]
   18e50:	ldr	r0, [r0, #8]
   18e54:	vmov	s0, r0
   18e58:	vcvt.f32.u32	s0, s0
   18e5c:	ldr	r0, [sp, #24]
   18e60:	vldr	s2, [r0, #4]
   18e64:	vmul.f32	s0, s0, s2
   18e68:	vstr	s0, [sp, #4]
   18e6c:	b	18e9c <__assert_fail@plt+0x7954>
   18e70:	ldr	r0, [fp, #-8]
   18e74:	ldr	r0, [r0, #8]
   18e78:	vmov	s0, r0
   18e7c:	vcvt.f32.u32	s0, s0
   18e80:	ldr	r0, [sp, #24]
   18e84:	vldr	s2, [r0, #4]
   18e88:	vmul.f32	s0, s0, s2
   18e8c:	ldr	r0, [sp, #24]
   18e90:	vldr	s2, [r0, #8]
   18e94:	vmul.f32	s0, s0, s2
   18e98:	vstr	s0, [sp, #4]
   18e9c:	vldr	s0, [sp, #4]
   18ea0:	vcvt.u32.f32	s0, s0
   18ea4:	vmov	r0, s0
   18ea8:	str	r0, [sp, #20]
   18eac:	ldr	r0, [fp, #-8]
   18eb0:	ldr	r1, [sp, #20]
   18eb4:	bl	1836c <__assert_fail@plt+0x6e24>
   18eb8:	tst	r0, #1
   18ebc:	bne	18f08 <__assert_fail@plt+0x79c0>
   18ec0:	ldr	r0, [fp, #-8]
   18ec4:	ldr	r0, [r0, #36]	; 0x24
   18ec8:	str	r0, [sp, #16]
   18ecc:	ldr	r0, [sp, #16]
   18ed0:	movw	r1, #0
   18ed4:	cmp	r0, r1
   18ed8:	beq	18efc <__assert_fail@plt+0x79b4>
   18edc:	ldr	r0, [sp, #16]
   18ee0:	ldr	r0, [r0, #4]
   18ee4:	str	r0, [sp, #12]
   18ee8:	ldr	r0, [sp, #16]
   18eec:	bl	1398c <__assert_fail@plt+0x2444>
   18ef0:	ldr	r0, [sp, #12]
   18ef4:	str	r0, [sp, #16]
   18ef8:	b	18ecc <__assert_fail@plt+0x7984>
   18efc:	ldr	r0, [fp, #-8]
   18f00:	movw	r1, #0
   18f04:	str	r1, [r0, #36]	; 0x24
   18f08:	b	18f0c <__assert_fail@plt+0x79c4>
   18f0c:	b	18f10 <__assert_fail@plt+0x79c8>
   18f10:	b	18f14 <__assert_fail@plt+0x79cc>
   18f14:	ldr	r0, [fp, #-16]
   18f18:	str	r0, [fp, #-4]
   18f1c:	ldr	r0, [fp, #-4]
   18f20:	mov	sp, fp
   18f24:	pop	{fp, pc}
   18f28:	push	{fp, lr}
   18f2c:	mov	fp, sp
   18f30:	sub	sp, sp, #8
   18f34:	str	r0, [sp, #4]
   18f38:	str	r1, [sp]
   18f3c:	ldr	r0, [sp, #4]
   18f40:	ldr	r1, [sp]
   18f44:	bl	18d24 <__assert_fail@plt+0x77dc>
   18f48:	mov	sp, fp
   18f4c:	pop	{fp, pc}
   18f50:	push	{fp, lr}
   18f54:	mov	fp, sp
   18f58:	sub	sp, sp, #8
   18f5c:	str	r0, [sp, #4]
   18f60:	ldr	r0, [sp, #4]
   18f64:	cmp	r0, #10
   18f68:	bcs	18f74 <__assert_fail@plt+0x7a2c>
   18f6c:	movw	r0, #10
   18f70:	str	r0, [sp, #4]
   18f74:	ldr	r0, [sp, #4]
   18f78:	orr	r0, r0, #1
   18f7c:	str	r0, [sp, #4]
   18f80:	ldr	r0, [sp, #4]
   18f84:	mvn	r1, #0
   18f88:	cmp	r1, r0
   18f8c:	movw	r0, #0
   18f90:	str	r0, [sp]
   18f94:	beq	18fac <__assert_fail@plt+0x7a64>
   18f98:	ldr	r0, [sp, #4]
   18f9c:	bl	18fd4 <__assert_fail@plt+0x7a8c>
   18fa0:	mvn	lr, #0
   18fa4:	eor	r0, r0, lr
   18fa8:	str	r0, [sp]
   18fac:	ldr	r0, [sp]
   18fb0:	tst	r0, #1
   18fb4:	beq	18fc8 <__assert_fail@plt+0x7a80>
   18fb8:	ldr	r0, [sp, #4]
   18fbc:	add	r0, r0, #2
   18fc0:	str	r0, [sp, #4]
   18fc4:	b	18f80 <__assert_fail@plt+0x7a38>
   18fc8:	ldr	r0, [sp, #4]
   18fcc:	mov	sp, fp
   18fd0:	pop	{fp, pc}
   18fd4:	sub	sp, sp, #16
   18fd8:	str	r0, [sp, #12]
   18fdc:	movw	r0, #3
   18fe0:	str	r0, [sp, #8]
   18fe4:	ldr	r0, [sp, #8]
   18fe8:	ldr	r1, [sp, #8]
   18fec:	mul	r0, r0, r1
   18ff0:	str	r0, [sp, #4]
   18ff4:	ldr	r0, [sp, #4]
   18ff8:	ldr	r1, [sp, #12]
   18ffc:	cmp	r0, r1
   19000:	movw	r0, #0
   19004:	str	r0, [sp]
   19008:	bcs	1902c <__assert_fail@plt+0x7ae4>
   1900c:	ldr	r0, [sp, #12]
   19010:	ldr	r1, [sp, #8]
   19014:	udiv	r2, r0, r1
   19018:	mls	r0, r2, r1, r0
   1901c:	cmp	r0, #0
   19020:	movw	r0, #0
   19024:	movne	r0, #1
   19028:	str	r0, [sp]
   1902c:	ldr	r0, [sp]
   19030:	tst	r0, #1
   19034:	beq	19068 <__assert_fail@plt+0x7b20>
   19038:	ldr	r0, [sp, #8]
   1903c:	add	r0, r0, #1
   19040:	str	r0, [sp, #8]
   19044:	ldr	r0, [sp, #8]
   19048:	lsl	r0, r0, #2
   1904c:	ldr	r1, [sp, #4]
   19050:	add	r0, r1, r0
   19054:	str	r0, [sp, #4]
   19058:	ldr	r0, [sp, #8]
   1905c:	add	r0, r0, #1
   19060:	str	r0, [sp, #8]
   19064:	b	18ff4 <__assert_fail@plt+0x7aac>
   19068:	ldr	r0, [sp, #12]
   1906c:	ldr	r1, [sp, #8]
   19070:	udiv	r2, r0, r1
   19074:	mls	r0, r2, r1, r0
   19078:	cmp	r0, #0
   1907c:	movw	r0, #0
   19080:	movne	r0, #1
   19084:	tst	r0, #1
   19088:	movw	r0, #1
   1908c:	moveq	r0, #0
   19090:	cmp	r0, #0
   19094:	movw	r0, #0
   19098:	movne	r0, #1
   1909c:	and	r0, r0, #1
   190a0:	add	sp, sp, #16
   190a4:	bx	lr
   190a8:	sub	sp, sp, #8
   190ac:	str	r0, [sp, #4]
   190b0:	str	r1, [sp]
   190b4:	ldr	r0, [sp]
   190b8:	movw	r1, #0
   190bc:	str	r1, [r0]
   190c0:	ldr	r0, [sp, #4]
   190c4:	ldr	r0, [r0, #36]	; 0x24
   190c8:	ldr	r1, [sp]
   190cc:	str	r0, [r1, #4]
   190d0:	ldr	r0, [sp]
   190d4:	ldr	r1, [sp, #4]
   190d8:	str	r0, [r1, #36]	; 0x24
   190dc:	add	sp, sp, #8
   190e0:	bx	lr
   190e4:	sub	sp, sp, #12
   190e8:	str	r0, [sp, #8]
   190ec:	str	r1, [sp, #4]
   190f0:	ldr	r0, [sp, #8]
   190f4:	movw	r1, #1
   190f8:	strb	r1, [r0, #28]
   190fc:	ldr	r0, [sp, #8]
   19100:	movw	r1, #0
   19104:	str	r1, [r0, #20]
   19108:	ldr	r0, [sp, #8]
   1910c:	str	r1, [r0, #24]
   19110:	str	r1, [sp]
   19114:	ldr	r0, [sp]
   19118:	cmp	r0, #4
   1911c:	bge	19144 <__assert_fail@plt+0x7bfc>
   19120:	ldr	r0, [sp, #4]
   19124:	ldr	r1, [sp, #8]
   19128:	ldr	r2, [sp]
   1912c:	add	r1, r1, r2, lsl #2
   19130:	str	r0, [r1]
   19134:	ldr	r0, [sp]
   19138:	add	r0, r0, #1
   1913c:	str	r0, [sp]
   19140:	b	19114 <__assert_fail@plt+0x7bcc>
   19144:	ldr	r0, [sp, #4]
   19148:	ldr	r1, [sp, #8]
   1914c:	str	r0, [r1, #16]
   19150:	add	sp, sp, #12
   19154:	bx	lr
   19158:	sub	sp, sp, #4
   1915c:	str	r0, [sp]
   19160:	ldr	r0, [sp]
   19164:	ldrb	r0, [r0, #28]
   19168:	and	r0, r0, #1
   1916c:	add	sp, sp, #4
   19170:	bx	lr
   19174:	sub	sp, sp, #16
   19178:	str	r0, [sp, #12]
   1917c:	str	r1, [sp, #8]
   19180:	ldr	r0, [sp, #12]
   19184:	ldr	r1, [r0, #20]
   19188:	ldrb	r0, [r0, #28]
   1918c:	mov	r2, #1
   19190:	bic	r0, r2, r0
   19194:	add	r0, r1, r0
   19198:	and	r0, r0, #3
   1919c:	str	r0, [sp, #4]
   191a0:	ldr	r0, [sp, #12]
   191a4:	ldr	r1, [sp, #4]
   191a8:	ldr	r0, [r0, r1, lsl #2]
   191ac:	str	r0, [sp]
   191b0:	ldr	r0, [sp, #8]
   191b4:	ldr	r1, [sp, #12]
   191b8:	ldr	r2, [sp, #4]
   191bc:	add	r1, r1, r2, lsl #2
   191c0:	str	r0, [r1]
   191c4:	ldr	r0, [sp, #4]
   191c8:	ldr	r1, [sp, #12]
   191cc:	str	r0, [r1, #20]
   191d0:	ldr	r0, [sp, #4]
   191d4:	ldr	r1, [sp, #12]
   191d8:	ldr	r1, [r1, #24]
   191dc:	cmp	r0, r1
   191e0:	bne	19210 <__assert_fail@plt+0x7cc8>
   191e4:	ldr	r0, [sp, #12]
   191e8:	ldr	r0, [r0, #24]
   191ec:	ldr	r1, [sp, #12]
   191f0:	ldrb	r1, [r1, #28]
   191f4:	mvn	r2, #0
   191f8:	eor	r1, r1, r2
   191fc:	and	r1, r1, #1
   19200:	add	r0, r0, r1
   19204:	and	r0, r0, #3
   19208:	ldr	r1, [sp, #12]
   1920c:	str	r0, [r1, #24]
   19210:	ldr	r0, [sp, #12]
   19214:	movw	r1, #0
   19218:	strb	r1, [r0, #28]
   1921c:	ldr	r0, [sp]
   19220:	add	sp, sp, #16
   19224:	bx	lr
   19228:	push	{fp, lr}
   1922c:	mov	fp, sp
   19230:	sub	sp, sp, #8
   19234:	str	r0, [sp, #4]
   19238:	ldr	r0, [sp, #4]
   1923c:	bl	19158 <__assert_fail@plt+0x7c10>
   19240:	tst	r0, #1
   19244:	beq	1924c <__assert_fail@plt+0x7d04>
   19248:	bl	11500 <abort@plt>
   1924c:	ldr	r0, [sp, #4]
   19250:	ldr	r1, [r0, #20]
   19254:	ldr	r0, [r0, r1, lsl #2]
   19258:	str	r0, [sp]
   1925c:	ldr	r0, [sp, #4]
   19260:	ldr	r1, [r0, #16]
   19264:	ldr	r2, [r0, #20]
   19268:	add	r0, r0, r2, lsl #2
   1926c:	str	r1, [r0]
   19270:	ldr	r0, [sp, #4]
   19274:	ldr	r0, [r0, #20]
   19278:	ldr	r1, [sp, #4]
   1927c:	ldr	r1, [r1, #24]
   19280:	cmp	r0, r1
   19284:	bne	19298 <__assert_fail@plt+0x7d50>
   19288:	ldr	r0, [sp, #4]
   1928c:	movw	r1, #1
   19290:	strb	r1, [r0, #28]
   19294:	b	192b4 <__assert_fail@plt+0x7d6c>
   19298:	ldr	r0, [sp, #4]
   1929c:	ldr	r0, [r0, #20]
   192a0:	add	r0, r0, #4
   192a4:	sub	r0, r0, #1
   192a8:	and	r0, r0, #3
   192ac:	ldr	r1, [sp, #4]
   192b0:	str	r0, [r1, #20]
   192b4:	ldr	r0, [sp]
   192b8:	mov	sp, fp
   192bc:	pop	{fp, pc}
   192c0:	push	{fp, lr}
   192c4:	mov	fp, sp
   192c8:	sub	sp, sp, #32
   192cc:	str	r0, [fp, #-8]
   192d0:	str	r1, [fp, #-4]
   192d4:	str	r2, [fp, #-12]
   192d8:	ldr	r0, [fp, #-12]
   192dc:	add	r0, r0, #20
   192e0:	str	r0, [sp, #16]
   192e4:	ldr	r0, [sp, #16]
   192e8:	mov	r1, #0
   192ec:	strb	r1, [r0]
   192f0:	mov	r0, #1
   192f4:	cmp	r0, #0
   192f8:	bne	19388 <__assert_fail@plt+0x7e40>
   192fc:	b	19300 <__assert_fail@plt+0x7db8>
   19300:	b	19304 <__assert_fail@plt+0x7dbc>
   19304:	ldr	r0, [fp, #-8]
   19308:	ldr	r1, [fp, #-4]
   1930c:	mov	r2, #10
   19310:	mov	r3, #0
   19314:	bl	247c4 <__assert_fail@plt+0x1327c>
   19318:	rsb	r2, r2, #48	; 0x30
   1931c:	ldr	r3, [sp, #16]
   19320:	mvn	lr, #0
   19324:	add	ip, r3, lr
   19328:	str	ip, [sp, #16]
   1932c:	add	r3, r3, lr
   19330:	strb	r2, [r3]
   19334:	str	r0, [sp, #12]
   19338:	str	r1, [sp, #8]
   1933c:	ldr	r0, [fp, #-8]
   19340:	ldr	r1, [fp, #-4]
   19344:	mov	r2, #10
   19348:	mov	r3, #0
   1934c:	bl	247c4 <__assert_fail@plt+0x1327c>
   19350:	str	r1, [fp, #-4]
   19354:	str	r0, [fp, #-8]
   19358:	orr	r0, r0, r1
   1935c:	cmp	r0, #0
   19360:	bne	19304 <__assert_fail@plt+0x7dbc>
   19364:	b	19368 <__assert_fail@plt+0x7e20>
   19368:	ldr	r0, [sp, #16]
   1936c:	mvn	r1, #0
   19370:	add	r2, r0, r1
   19374:	str	r2, [sp, #16]
   19378:	add	r0, r0, r1
   1937c:	movw	r1, #45	; 0x2d
   19380:	strb	r1, [r0]
   19384:	b	193f4 <__assert_fail@plt+0x7eac>
   19388:	b	1938c <__assert_fail@plt+0x7e44>
   1938c:	ldr	r0, [fp, #-8]
   19390:	ldr	r1, [fp, #-4]
   19394:	mov	r2, #10
   19398:	mov	r3, #0
   1939c:	bl	247c4 <__assert_fail@plt+0x1327c>
   193a0:	orr	r2, r2, #48	; 0x30
   193a4:	ldr	r3, [sp, #16]
   193a8:	mvn	lr, #0
   193ac:	add	ip, r3, lr
   193b0:	str	ip, [sp, #16]
   193b4:	add	r3, r3, lr
   193b8:	strb	r2, [r3]
   193bc:	str	r0, [sp, #4]
   193c0:	str	r1, [sp]
   193c4:	ldr	r0, [fp, #-8]
   193c8:	ldr	r1, [fp, #-4]
   193cc:	mov	r2, #10
   193d0:	mov	r3, #0
   193d4:	bl	247c4 <__assert_fail@plt+0x1327c>
   193d8:	str	r1, [fp, #-4]
   193dc:	str	r0, [fp, #-8]
   193e0:	orr	r0, r0, r1
   193e4:	cmp	r0, #0
   193e8:	bne	1938c <__assert_fail@plt+0x7e44>
   193ec:	b	193f0 <__assert_fail@plt+0x7ea8>
   193f0:	b	193f4 <__assert_fail@plt+0x7eac>
   193f4:	ldr	r0, [sp, #16]
   193f8:	mov	sp, fp
   193fc:	pop	{fp, pc}
   19400:	sub	sp, sp, #4
   19404:	push	{fp, lr}
   19408:	mov	fp, sp
   1940c:	sub	sp, sp, #28
   19410:	str	r3, [fp, #8]
   19414:	str	r0, [fp, #-4]
   19418:	str	r1, [fp, #-8]
   1941c:	str	r2, [fp, #-12]
   19420:	movw	r0, #0
   19424:	str	r0, [sp, #12]
   19428:	ldr	r0, [fp, #-12]
   1942c:	and	r0, r0, #64	; 0x40
   19430:	cmp	r0, #0
   19434:	beq	19460 <__assert_fail@plt+0x7f18>
   19438:	add	r0, sp, #8
   1943c:	mov	r1, r0
   19440:	add	r2, fp, #8
   19444:	str	r2, [r1]
   19448:	ldr	r1, [sp, #8]
   1944c:	add	r2, r1, #4
   19450:	str	r2, [sp, #8]
   19454:	ldr	r1, [r1]
   19458:	str	r1, [sp, #12]
   1945c:	str	r0, [sp, #4]
   19460:	ldr	r0, [fp, #-4]
   19464:	ldr	r1, [fp, #-8]
   19468:	ldr	r2, [fp, #-12]
   1946c:	ldr	r3, [sp, #12]
   19470:	bl	113e0 <openat64@plt>
   19474:	bl	1bd54 <__assert_fail@plt+0xa80c>
   19478:	mov	sp, fp
   1947c:	pop	{fp, lr}
   19480:	add	sp, sp, #4
   19484:	bx	lr
   19488:	push	{fp, lr}
   1948c:	mov	fp, sp
   19490:	sub	sp, sp, #48	; 0x30
   19494:	ldr	ip, [pc, #176]	; 1954c <__assert_fail@plt+0x8004>
   19498:	str	r0, [fp, #-8]
   1949c:	str	r1, [fp, #-12]
   194a0:	str	r2, [fp, #-16]
   194a4:	str	r3, [fp, #-20]	; 0xffffffec
   194a8:	ldr	r0, [fp, #-16]
   194ac:	orr	r0, r0, ip
   194b0:	str	r0, [sp, #24]
   194b4:	ldr	r0, [fp, #-8]
   194b8:	ldr	r1, [fp, #-12]
   194bc:	ldr	r2, [sp, #24]
   194c0:	bl	19400 <__assert_fail@plt+0x7eb8>
   194c4:	str	r0, [sp, #20]
   194c8:	ldr	r0, [sp, #20]
   194cc:	cmp	r0, #0
   194d0:	bge	194e0 <__assert_fail@plt+0x7f98>
   194d4:	movw	r0, #0
   194d8:	str	r0, [fp, #-4]
   194dc:	b	19540 <__assert_fail@plt+0x7ff8>
   194e0:	ldr	r0, [sp, #20]
   194e4:	bl	11494 <fdopendir@plt>
   194e8:	str	r0, [sp, #16]
   194ec:	ldr	r0, [sp, #16]
   194f0:	movw	lr, #0
   194f4:	cmp	r0, lr
   194f8:	beq	1950c <__assert_fail@plt+0x7fc4>
   194fc:	ldr	r0, [sp, #20]
   19500:	ldr	r1, [fp, #-20]	; 0xffffffec
   19504:	str	r0, [r1]
   19508:	b	19538 <__assert_fail@plt+0x7ff0>
   1950c:	bl	11404 <__errno_location@plt>
   19510:	ldr	r0, [r0]
   19514:	str	r0, [sp, #12]
   19518:	ldr	r0, [sp, #20]
   1951c:	bl	1150c <close@plt>
   19520:	ldr	lr, [sp, #12]
   19524:	str	r0, [sp, #8]
   19528:	str	lr, [sp, #4]
   1952c:	bl	11404 <__errno_location@plt>
   19530:	ldr	lr, [sp, #4]
   19534:	str	lr, [r0]
   19538:	ldr	r0, [sp, #16]
   1953c:	str	r0, [fp, #-4]
   19540:	ldr	r0, [fp, #-4]
   19544:	mov	sp, fp
   19548:	pop	{fp, pc}
   1954c:	andeq	r4, r8, r0, lsl #18
   19550:	push	{fp, lr}
   19554:	mov	fp, sp
   19558:	sub	sp, sp, #24
   1955c:	str	r0, [fp, #-4]
   19560:	ldr	r0, [fp, #-4]
   19564:	movw	r1, #0
   19568:	cmp	r0, r1
   1956c:	bne	19590 <__assert_fail@plt+0x8048>
   19570:	movw	r0, #29080	; 0x7198
   19574:	movt	r0, #3
   19578:	ldr	r1, [r0]
   1957c:	movw	r0, #23388	; 0x5b5c
   19580:	movt	r0, #2
   19584:	bl	114e8 <fputs@plt>
   19588:	str	r0, [sp, #8]
   1958c:	bl	11500 <abort@plt>
   19590:	ldr	r0, [fp, #-4]
   19594:	movw	r1, #47	; 0x2f
   19598:	bl	11470 <strrchr@plt>
   1959c:	str	r0, [fp, #-8]
   195a0:	ldr	r0, [fp, #-8]
   195a4:	movw	r1, #0
   195a8:	cmp	r0, r1
   195ac:	beq	195c0 <__assert_fail@plt+0x8078>
   195b0:	ldr	r0, [fp, #-8]
   195b4:	add	r0, r0, #1
   195b8:	str	r0, [sp, #4]
   195bc:	b	195c8 <__assert_fail@plt+0x8080>
   195c0:	ldr	r0, [fp, #-4]
   195c4:	str	r0, [sp, #4]
   195c8:	ldr	r0, [sp, #4]
   195cc:	str	r0, [sp, #12]
   195d0:	ldr	r0, [sp, #12]
   195d4:	ldr	r1, [fp, #-4]
   195d8:	sub	r0, r0, r1
   195dc:	cmp	r0, #7
   195e0:	blt	1964c <__assert_fail@plt+0x8104>
   195e4:	ldr	r0, [sp, #12]
   195e8:	mvn	r1, #6
   195ec:	add	r0, r0, r1
   195f0:	movw	r1, #23444	; 0x5b94
   195f4:	movt	r1, #2
   195f8:	movw	r2, #7
   195fc:	bl	114f4 <strncmp@plt>
   19600:	cmp	r0, #0
   19604:	bne	1964c <__assert_fail@plt+0x8104>
   19608:	ldr	r0, [sp, #12]
   1960c:	str	r0, [fp, #-4]
   19610:	ldr	r0, [sp, #12]
   19614:	movw	r1, #23452	; 0x5b9c
   19618:	movt	r1, #2
   1961c:	movw	r2, #3
   19620:	bl	114f4 <strncmp@plt>
   19624:	cmp	r0, #0
   19628:	bne	19648 <__assert_fail@plt+0x8100>
   1962c:	ldr	r0, [sp, #12]
   19630:	add	r0, r0, #3
   19634:	str	r0, [fp, #-4]
   19638:	ldr	r0, [fp, #-4]
   1963c:	movw	r1, #29064	; 0x7188
   19640:	movt	r1, #3
   19644:	str	r0, [r1]
   19648:	b	1964c <__assert_fail@plt+0x8104>
   1964c:	ldr	r0, [fp, #-4]
   19650:	movw	r1, #29128	; 0x71c8
   19654:	movt	r1, #3
   19658:	str	r0, [r1]
   1965c:	ldr	r0, [fp, #-4]
   19660:	movw	r1, #29068	; 0x718c
   19664:	movt	r1, #3
   19668:	str	r0, [r1]
   1966c:	mov	sp, fp
   19670:	pop	{fp, pc}
   19674:	push	{fp, lr}
   19678:	mov	fp, sp
   1967c:	sub	sp, sp, #24
   19680:	str	r0, [fp, #-4]
   19684:	bl	11404 <__errno_location@plt>
   19688:	ldr	r0, [r0]
   1968c:	str	r0, [fp, #-8]
   19690:	ldr	r0, [fp, #-4]
   19694:	movw	lr, #0
   19698:	cmp	r0, lr
   1969c:	beq	196ac <__assert_fail@plt+0x8164>
   196a0:	ldr	r0, [fp, #-4]
   196a4:	str	r0, [sp, #8]
   196a8:	b	196bc <__assert_fail@plt+0x8174>
   196ac:	movw	r0, #29132	; 0x71cc
   196b0:	movt	r0, #3
   196b4:	str	r0, [sp, #8]
   196b8:	b	196bc <__assert_fail@plt+0x8174>
   196bc:	ldr	r0, [sp, #8]
   196c0:	movw	r1, #48	; 0x30
   196c4:	bl	1f988 <__assert_fail@plt+0xe440>
   196c8:	str	r0, [sp, #12]
   196cc:	ldr	r0, [fp, #-8]
   196d0:	str	r0, [sp, #4]
   196d4:	bl	11404 <__errno_location@plt>
   196d8:	ldr	r1, [sp, #4]
   196dc:	str	r1, [r0]
   196e0:	ldr	r0, [sp, #12]
   196e4:	mov	sp, fp
   196e8:	pop	{fp, pc}
   196ec:	sub	sp, sp, #8
   196f0:	str	r0, [sp, #4]
   196f4:	ldr	r0, [sp, #4]
   196f8:	movw	r1, #0
   196fc:	cmp	r0, r1
   19700:	beq	19710 <__assert_fail@plt+0x81c8>
   19704:	ldr	r0, [sp, #4]
   19708:	str	r0, [sp]
   1970c:	b	19720 <__assert_fail@plt+0x81d8>
   19710:	movw	r0, #29132	; 0x71cc
   19714:	movt	r0, #3
   19718:	str	r0, [sp]
   1971c:	b	19720 <__assert_fail@plt+0x81d8>
   19720:	ldr	r0, [sp]
   19724:	ldr	r0, [r0]
   19728:	add	sp, sp, #8
   1972c:	bx	lr
   19730:	sub	sp, sp, #16
   19734:	str	r0, [sp, #12]
   19738:	str	r1, [sp, #8]
   1973c:	ldr	r0, [sp, #8]
   19740:	ldr	r1, [sp, #12]
   19744:	movw	r2, #0
   19748:	cmp	r1, r2
   1974c:	str	r0, [sp, #4]
   19750:	beq	19760 <__assert_fail@plt+0x8218>
   19754:	ldr	r0, [sp, #12]
   19758:	str	r0, [sp]
   1975c:	b	19770 <__assert_fail@plt+0x8228>
   19760:	movw	r0, #29132	; 0x71cc
   19764:	movt	r0, #3
   19768:	str	r0, [sp]
   1976c:	b	19770 <__assert_fail@plt+0x8228>
   19770:	ldr	r0, [sp]
   19774:	ldr	r1, [sp, #4]
   19778:	str	r1, [r0]
   1977c:	add	sp, sp, #16
   19780:	bx	lr
   19784:	sub	sp, sp, #32
   19788:	str	r0, [sp, #28]
   1978c:	strb	r1, [sp, #27]
   19790:	str	r2, [sp, #20]
   19794:	ldrb	r0, [sp, #27]
   19798:	strb	r0, [sp, #19]
   1979c:	ldr	r0, [sp, #28]
   197a0:	movw	r1, #0
   197a4:	cmp	r0, r1
   197a8:	beq	197b8 <__assert_fail@plt+0x8270>
   197ac:	ldr	r0, [sp, #28]
   197b0:	str	r0, [sp]
   197b4:	b	197c8 <__assert_fail@plt+0x8280>
   197b8:	movw	r0, #29132	; 0x71cc
   197bc:	movt	r0, #3
   197c0:	str	r0, [sp]
   197c4:	b	197c8 <__assert_fail@plt+0x8280>
   197c8:	ldr	r0, [sp]
   197cc:	add	r0, r0, #8
   197d0:	ldrb	r1, [sp, #19]
   197d4:	lsr	r1, r1, #5
   197d8:	add	r0, r0, r1, lsl #2
   197dc:	str	r0, [sp, #12]
   197e0:	ldrb	r0, [sp, #19]
   197e4:	and	r0, r0, #31
   197e8:	str	r0, [sp, #8]
   197ec:	ldr	r0, [sp, #12]
   197f0:	ldr	r0, [r0]
   197f4:	ldr	r1, [sp, #8]
   197f8:	lsr	r0, r0, r1
   197fc:	and	r0, r0, #1
   19800:	str	r0, [sp, #4]
   19804:	ldr	r0, [sp, #20]
   19808:	and	r0, r0, #1
   1980c:	ldr	r1, [sp, #4]
   19810:	eor	r0, r0, r1
   19814:	ldr	r1, [sp, #8]
   19818:	lsl	r0, r0, r1
   1981c:	ldr	r1, [sp, #12]
   19820:	ldr	r2, [r1]
   19824:	eor	r0, r2, r0
   19828:	str	r0, [r1]
   1982c:	ldr	r0, [sp, #4]
   19830:	add	sp, sp, #32
   19834:	bx	lr
   19838:	sub	sp, sp, #12
   1983c:	str	r0, [sp, #8]
   19840:	str	r1, [sp, #4]
   19844:	ldr	r0, [sp, #8]
   19848:	movw	r1, #0
   1984c:	cmp	r0, r1
   19850:	bne	19860 <__assert_fail@plt+0x8318>
   19854:	movw	r0, #29132	; 0x71cc
   19858:	movt	r0, #3
   1985c:	str	r0, [sp, #8]
   19860:	ldr	r0, [sp, #8]
   19864:	ldr	r0, [r0, #4]
   19868:	str	r0, [sp]
   1986c:	ldr	r0, [sp, #4]
   19870:	ldr	r1, [sp, #8]
   19874:	str	r0, [r1, #4]
   19878:	ldr	r0, [sp]
   1987c:	add	sp, sp, #12
   19880:	bx	lr
   19884:	push	{fp, lr}
   19888:	mov	fp, sp
   1988c:	sub	sp, sp, #16
   19890:	str	r0, [fp, #-4]
   19894:	str	r1, [sp, #8]
   19898:	str	r2, [sp, #4]
   1989c:	ldr	r0, [fp, #-4]
   198a0:	movw	r1, #0
   198a4:	cmp	r0, r1
   198a8:	bne	198b8 <__assert_fail@plt+0x8370>
   198ac:	movw	r0, #29132	; 0x71cc
   198b0:	movt	r0, #3
   198b4:	str	r0, [fp, #-4]
   198b8:	ldr	r0, [fp, #-4]
   198bc:	movw	r1, #10
   198c0:	str	r1, [r0]
   198c4:	ldr	r0, [sp, #8]
   198c8:	movw	r1, #0
   198cc:	cmp	r0, r1
   198d0:	beq	198e4 <__assert_fail@plt+0x839c>
   198d4:	ldr	r0, [sp, #4]
   198d8:	movw	r1, #0
   198dc:	cmp	r0, r1
   198e0:	bne	198e8 <__assert_fail@plt+0x83a0>
   198e4:	bl	11500 <abort@plt>
   198e8:	ldr	r0, [sp, #8]
   198ec:	ldr	r1, [fp, #-4]
   198f0:	str	r0, [r1, #40]	; 0x28
   198f4:	ldr	r0, [sp, #4]
   198f8:	ldr	r1, [fp, #-4]
   198fc:	str	r0, [r1, #44]	; 0x2c
   19900:	mov	sp, fp
   19904:	pop	{fp, pc}
   19908:	push	{r4, r5, r6, sl, fp, lr}
   1990c:	add	fp, sp, #16
   19910:	sub	sp, sp, #64	; 0x40
   19914:	ldr	ip, [fp, #8]
   19918:	str	r0, [fp, #-20]	; 0xffffffec
   1991c:	str	r1, [fp, #-24]	; 0xffffffe8
   19920:	str	r2, [fp, #-28]	; 0xffffffe4
   19924:	str	r3, [fp, #-32]	; 0xffffffe0
   19928:	ldr	r0, [fp, #8]
   1992c:	movw	r1, #0
   19930:	cmp	r0, r1
   19934:	str	ip, [sp, #32]
   19938:	beq	19948 <__assert_fail@plt+0x8400>
   1993c:	ldr	r0, [fp, #8]
   19940:	str	r0, [sp, #28]
   19944:	b	19958 <__assert_fail@plt+0x8410>
   19948:	movw	r0, #29132	; 0x71cc
   1994c:	movt	r0, #3
   19950:	str	r0, [sp, #28]
   19954:	b	19958 <__assert_fail@plt+0x8410>
   19958:	ldr	r0, [sp, #28]
   1995c:	str	r0, [fp, #-36]	; 0xffffffdc
   19960:	bl	11404 <__errno_location@plt>
   19964:	ldr	r0, [r0]
   19968:	str	r0, [sp, #40]	; 0x28
   1996c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1997c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19980:	ldr	lr, [lr]
   19984:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19988:	ldr	ip, [ip, #4]
   1998c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19990:	add	r4, r4, #8
   19994:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19998:	ldr	r5, [r5, #40]	; 0x28
   1999c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   199a0:	ldr	r6, [r6, #44]	; 0x2c
   199a4:	str	lr, [sp]
   199a8:	str	ip, [sp, #4]
   199ac:	str	r4, [sp, #8]
   199b0:	str	r5, [sp, #12]
   199b4:	str	r6, [sp, #16]
   199b8:	bl	199e0 <__assert_fail@plt+0x8498>
   199bc:	str	r0, [sp, #36]	; 0x24
   199c0:	ldr	r0, [sp, #40]	; 0x28
   199c4:	str	r0, [sp, #24]
   199c8:	bl	11404 <__errno_location@plt>
   199cc:	ldr	r1, [sp, #24]
   199d0:	str	r1, [r0]
   199d4:	ldr	r0, [sp, #36]	; 0x24
   199d8:	sub	sp, fp, #16
   199dc:	pop	{r4, r5, r6, sl, fp, pc}
   199e0:	push	{r4, r5, r6, sl, fp, lr}
   199e4:	add	fp, sp, #16
   199e8:	sub	sp, sp, #168	; 0xa8
   199ec:	ldr	ip, [fp, #24]
   199f0:	ldr	lr, [fp, #20]
   199f4:	ldr	r4, [fp, #16]
   199f8:	ldr	r5, [fp, #12]
   199fc:	ldr	r6, [fp, #8]
   19a00:	str	r0, [fp, #-24]	; 0xffffffe8
   19a04:	str	r1, [fp, #-28]	; 0xffffffe4
   19a08:	str	r2, [fp, #-32]	; 0xffffffe0
   19a0c:	str	r3, [fp, #-36]	; 0xffffffdc
   19a10:	movw	r0, #0
   19a14:	str	r0, [fp, #-44]	; 0xffffffd4
   19a18:	str	r0, [fp, #-48]	; 0xffffffd0
   19a1c:	str	r0, [fp, #-52]	; 0xffffffcc
   19a20:	str	r0, [fp, #-56]	; 0xffffffc8
   19a24:	movw	r0, #0
   19a28:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a2c:	str	r6, [sp, #80]	; 0x50
   19a30:	str	lr, [sp, #76]	; 0x4c
   19a34:	str	r4, [sp, #72]	; 0x48
   19a38:	str	r5, [sp, #68]	; 0x44
   19a3c:	str	ip, [sp, #64]	; 0x40
   19a40:	bl	11314 <__ctype_get_mb_cur_max@plt>
   19a44:	cmp	r0, #1
   19a48:	movw	r0, #0
   19a4c:	moveq	r0, #1
   19a50:	and	r0, r0, #1
   19a54:	strb	r0, [fp, #-58]	; 0xffffffc6
   19a58:	ldr	r0, [fp, #12]
   19a5c:	and	r0, r0, #2
   19a60:	cmp	r0, #0
   19a64:	movw	r0, #0
   19a68:	movne	r0, #1
   19a6c:	and	r0, r0, #1
   19a70:	strb	r0, [fp, #-59]	; 0xffffffc5
   19a74:	movw	r0, #0
   19a78:	strb	r0, [fp, #-60]	; 0xffffffc4
   19a7c:	strb	r0, [fp, #-61]	; 0xffffffc3
   19a80:	movw	r0, #1
   19a84:	strb	r0, [fp, #-62]	; 0xffffffc2
   19a88:	ldr	r0, [fp, #8]
   19a8c:	cmp	r0, #10
   19a90:	str	r0, [sp, #60]	; 0x3c
   19a94:	bhi	19cbc <__assert_fail@plt+0x8774>
   19a98:	add	r0, pc, #8
   19a9c:	ldr	r1, [sp, #60]	; 0x3c
   19aa0:	ldr	r0, [r0, r1, lsl #2]
   19aa4:	mov	pc, r0
   19aa8:			; <UNDEFINED> instruction: 0x00019cb0
   19aac:	andeq	r9, r1, ip, lsr #24
   19ab0:	andeq	r9, r1, ip, asr #24
   19ab4:	andeq	r9, r1, r4, lsr #24
   19ab8:	andeq	r9, r1, r4, lsr ip
   19abc:	andeq	r9, r1, r4, ror #21
   19ac0:	ldrdeq	r9, [r1], -r4
   19ac4:	andeq	r9, r1, r8, asr #22
   19ac8:	andeq	r9, r1, ip, asr fp
   19acc:	andeq	r9, r1, ip, asr fp
   19ad0:	andeq	r9, r1, ip, asr fp
   19ad4:	movw	r0, #5
   19ad8:	str	r0, [fp, #8]
   19adc:	movw	r0, #1
   19ae0:	strb	r0, [fp, #-59]	; 0xffffffc5
   19ae4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19ae8:	tst	r0, #1
   19aec:	bne	19b28 <__assert_fail@plt+0x85e0>
   19af0:	b	19af4 <__assert_fail@plt+0x85ac>
   19af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19afc:	cmp	r0, r1
   19b00:	bcs	19b18 <__assert_fail@plt+0x85d0>
   19b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b0c:	add	r0, r0, r1
   19b10:	movw	r1, #34	; 0x22
   19b14:	strb	r1, [r0]
   19b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b1c:	add	r0, r0, #1
   19b20:	str	r0, [fp, #-44]	; 0xffffffd4
   19b24:	b	19b28 <__assert_fail@plt+0x85e0>
   19b28:	movw	r0, #1
   19b2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b30:	movw	r0, #23532	; 0x5bec
   19b34:	movt	r0, #2
   19b38:	str	r0, [fp, #-52]	; 0xffffffcc
   19b3c:	movw	r0, #1
   19b40:	str	r0, [fp, #-56]	; 0xffffffc8
   19b44:	b	19cc0 <__assert_fail@plt+0x8778>
   19b48:	movw	r0, #1
   19b4c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b50:	movw	r0, #0
   19b54:	strb	r0, [fp, #-59]	; 0xffffffc5
   19b58:	b	19cc0 <__assert_fail@plt+0x8778>
   19b5c:	ldr	r0, [fp, #8]
   19b60:	cmp	r0, #10
   19b64:	beq	19b90 <__assert_fail@plt+0x8648>
   19b68:	ldr	r1, [fp, #8]
   19b6c:	movw	r0, #23534	; 0x5bee
   19b70:	movt	r0, #2
   19b74:	bl	1bbd0 <__assert_fail@plt+0xa688>
   19b78:	str	r0, [fp, #20]
   19b7c:	ldr	r1, [fp, #8]
   19b80:	movw	r0, #23536	; 0x5bf0
   19b84:	movt	r0, #2
   19b88:	bl	1bbd0 <__assert_fail@plt+0xa688>
   19b8c:	str	r0, [fp, #24]
   19b90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b94:	tst	r0, #1
   19b98:	bne	19c04 <__assert_fail@plt+0x86bc>
   19b9c:	ldr	r0, [fp, #20]
   19ba0:	str	r0, [fp, #-52]	; 0xffffffcc
   19ba4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19ba8:	ldrsb	r0, [r0]
   19bac:	cmp	r0, #0
   19bb0:	beq	19c00 <__assert_fail@plt+0x86b8>
   19bb4:	b	19bb8 <__assert_fail@plt+0x8670>
   19bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bc0:	cmp	r0, r1
   19bc4:	bcs	19be0 <__assert_fail@plt+0x8698>
   19bc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19bcc:	ldrb	r0, [r0]
   19bd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19bd8:	add	r1, r1, r2
   19bdc:	strb	r0, [r1]
   19be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19be4:	add	r0, r0, #1
   19be8:	str	r0, [fp, #-44]	; 0xffffffd4
   19bec:	b	19bf0 <__assert_fail@plt+0x86a8>
   19bf0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19bf4:	add	r0, r0, #1
   19bf8:	str	r0, [fp, #-52]	; 0xffffffcc
   19bfc:	b	19ba4 <__assert_fail@plt+0x865c>
   19c00:	b	19c04 <__assert_fail@plt+0x86bc>
   19c04:	movw	r0, #1
   19c08:	strb	r0, [fp, #-57]	; 0xffffffc7
   19c0c:	ldr	r0, [fp, #24]
   19c10:	str	r0, [fp, #-52]	; 0xffffffcc
   19c14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19c18:	bl	113c8 <strlen@plt>
   19c1c:	str	r0, [fp, #-56]	; 0xffffffc8
   19c20:	b	19cc0 <__assert_fail@plt+0x8778>
   19c24:	movw	r0, #1
   19c28:	strb	r0, [fp, #-57]	; 0xffffffc7
   19c2c:	movw	r0, #1
   19c30:	strb	r0, [fp, #-59]	; 0xffffffc5
   19c34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c38:	tst	r0, #1
   19c3c:	bne	19c48 <__assert_fail@plt+0x8700>
   19c40:	movw	r0, #1
   19c44:	strb	r0, [fp, #-57]	; 0xffffffc7
   19c48:	b	19c4c <__assert_fail@plt+0x8704>
   19c4c:	movw	r0, #2
   19c50:	str	r0, [fp, #8]
   19c54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c58:	tst	r0, #1
   19c5c:	bne	19c98 <__assert_fail@plt+0x8750>
   19c60:	b	19c64 <__assert_fail@plt+0x871c>
   19c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c6c:	cmp	r0, r1
   19c70:	bcs	19c88 <__assert_fail@plt+0x8740>
   19c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c7c:	add	r0, r0, r1
   19c80:	movw	r1, #39	; 0x27
   19c84:	strb	r1, [r0]
   19c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c8c:	add	r0, r0, #1
   19c90:	str	r0, [fp, #-44]	; 0xffffffd4
   19c94:	b	19c98 <__assert_fail@plt+0x8750>
   19c98:	movw	r0, #23536	; 0x5bf0
   19c9c:	movt	r0, #2
   19ca0:	str	r0, [fp, #-52]	; 0xffffffcc
   19ca4:	movw	r0, #1
   19ca8:	str	r0, [fp, #-56]	; 0xffffffc8
   19cac:	b	19cc0 <__assert_fail@plt+0x8778>
   19cb0:	movw	r0, #0
   19cb4:	strb	r0, [fp, #-59]	; 0xffffffc5
   19cb8:	b	19cc0 <__assert_fail@plt+0x8778>
   19cbc:	bl	11500 <abort@plt>
   19cc0:	movw	r0, #0
   19cc4:	str	r0, [fp, #-40]	; 0xffffffd8
   19cc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ccc:	cmn	r0, #1
   19cd0:	bne	19cfc <__assert_fail@plt+0x87b4>
   19cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19cdc:	add	r0, r0, r1
   19ce0:	ldrb	r0, [r0]
   19ce4:	cmp	r0, #0
   19ce8:	movw	r0, #0
   19cec:	moveq	r0, #1
   19cf0:	and	r0, r0, #1
   19cf4:	str	r0, [sp, #56]	; 0x38
   19cf8:	b	19d18 <__assert_fail@plt+0x87d0>
   19cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d04:	cmp	r0, r1
   19d08:	movw	r0, #0
   19d0c:	moveq	r0, #1
   19d10:	and	r0, r0, #1
   19d14:	str	r0, [sp, #56]	; 0x38
   19d18:	ldr	r0, [sp, #56]	; 0x38
   19d1c:	cmp	r0, #0
   19d20:	movw	r0, #0
   19d24:	movne	r0, #1
   19d28:	mvn	r1, #0
   19d2c:	eor	r0, r0, r1
   19d30:	tst	r0, #1
   19d34:	beq	1af24 <__assert_fail@plt+0x99dc>
   19d38:	movw	r0, #0
   19d3c:	strb	r0, [fp, #-65]	; 0xffffffbf
   19d40:	strb	r0, [fp, #-66]	; 0xffffffbe
   19d44:	strb	r0, [fp, #-67]	; 0xffffffbd
   19d48:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d4c:	tst	r0, #1
   19d50:	beq	19dfc <__assert_fail@plt+0x88b4>
   19d54:	ldr	r0, [fp, #8]
   19d58:	cmp	r0, #2
   19d5c:	beq	19dfc <__assert_fail@plt+0x88b4>
   19d60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d64:	cmp	r0, #0
   19d68:	beq	19dfc <__assert_fail@plt+0x88b4>
   19d6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d70:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19d74:	add	r0, r0, r1
   19d78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d7c:	cmn	r1, #1
   19d80:	str	r0, [sp, #52]	; 0x34
   19d84:	bne	19dac <__assert_fail@plt+0x8864>
   19d88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d8c:	movw	r1, #1
   19d90:	cmp	r1, r0
   19d94:	bcs	19dac <__assert_fail@plt+0x8864>
   19d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d9c:	bl	113c8 <strlen@plt>
   19da0:	str	r0, [fp, #-36]	; 0xffffffdc
   19da4:	str	r0, [sp, #48]	; 0x30
   19da8:	b	19db4 <__assert_fail@plt+0x886c>
   19dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19db0:	str	r0, [sp, #48]	; 0x30
   19db4:	ldr	r0, [sp, #48]	; 0x30
   19db8:	ldr	r1, [sp, #52]	; 0x34
   19dbc:	cmp	r1, r0
   19dc0:	bhi	19dfc <__assert_fail@plt+0x88b4>
   19dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dc8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19dcc:	add	r0, r0, r1
   19dd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19dd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19dd8:	bl	112b4 <memcmp@plt>
   19ddc:	cmp	r0, #0
   19de0:	bne	19dfc <__assert_fail@plt+0x88b4>
   19de4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19de8:	tst	r0, #1
   19dec:	beq	19df4 <__assert_fail@plt+0x88ac>
   19df0:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   19df4:	movw	r0, #1
   19df8:	strb	r0, [fp, #-65]	; 0xffffffbf
   19dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19e04:	ldrb	r0, [r0, r1]
   19e08:	strb	r0, [fp, #-63]	; 0xffffffc1
   19e0c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19e10:	mov	r1, r0
   19e14:	cmp	r0, #126	; 0x7e
   19e18:	str	r1, [sp, #44]	; 0x2c
   19e1c:	bhi	1a68c <__assert_fail@plt+0x9144>
   19e20:	add	r0, pc, #8
   19e24:	ldr	r1, [sp, #44]	; 0x2c
   19e28:	ldr	r0, [r0, r1, lsl #2]
   19e2c:	mov	pc, r0
   19e30:	andeq	sl, r1, ip, lsr #32
   19e34:	andeq	sl, r1, ip, lsl #13
   19e38:	andeq	sl, r1, ip, lsl #13
   19e3c:	andeq	sl, r1, ip, lsl #13
   19e40:	andeq	sl, r1, ip, lsl #13
   19e44:	andeq	sl, r1, ip, lsl #13
   19e48:	andeq	sl, r1, ip, lsl #13
   19e4c:	andeq	sl, r1, r4, lsr r4
   19e50:	andeq	sl, r1, r0, asr #8
   19e54:	andeq	sl, r1, r0, ror r4
   19e58:	andeq	sl, r1, r8, asr r4
   19e5c:	andeq	sl, r1, ip, ror r4
   19e60:	andeq	sl, r1, ip, asr #8
   19e64:	andeq	sl, r1, r4, ror #8
   19e68:	andeq	sl, r1, ip, lsl #13
   19e6c:	andeq	sl, r1, ip, lsl #13
   19e70:	andeq	sl, r1, ip, lsl #13
   19e74:	andeq	sl, r1, ip, lsl #13
   19e78:	andeq	sl, r1, ip, lsl #13
   19e7c:	andeq	sl, r1, ip, lsl #13
   19e80:	andeq	sl, r1, ip, lsl #13
   19e84:	andeq	sl, r1, ip, lsl #13
   19e88:	andeq	sl, r1, ip, lsl #13
   19e8c:	andeq	sl, r1, ip, lsl #13
   19e90:	andeq	sl, r1, ip, lsl #13
   19e94:	andeq	sl, r1, ip, lsl #13
   19e98:	andeq	sl, r1, ip, lsl #13
   19e9c:	andeq	sl, r1, ip, lsl #13
   19ea0:	andeq	sl, r1, ip, lsl #13
   19ea4:	andeq	sl, r1, ip, lsl #13
   19ea8:	andeq	sl, r1, ip, lsl #13
   19eac:	andeq	sl, r1, ip, lsl #13
   19eb0:	andeq	sl, r1, r0, ror #10
   19eb4:	andeq	sl, r1, r8, ror #10
   19eb8:	andeq	sl, r1, r8, ror #10
   19ebc:	andeq	sl, r1, ip, asr #10
   19ec0:	andeq	sl, r1, r8, ror #10
   19ec4:	andeq	sl, r1, r0, lsl #13
   19ec8:	andeq	sl, r1, r8, ror #10
   19ecc:	andeq	sl, r1, r8, lsl #11
   19ed0:	andeq	sl, r1, r8, ror #10
   19ed4:	andeq	sl, r1, r8, ror #10
   19ed8:	andeq	sl, r1, r8, ror #10
   19edc:	andeq	sl, r1, r0, lsl #13
   19ee0:	andeq	sl, r1, r0, lsl #13
   19ee4:	andeq	sl, r1, r0, lsl #13
   19ee8:	andeq	sl, r1, r0, lsl #13
   19eec:	andeq	sl, r1, r0, lsl #13
   19ef0:	andeq	sl, r1, r0, lsl #13
   19ef4:	andeq	sl, r1, r0, lsl #13
   19ef8:	andeq	sl, r1, r0, lsl #13
   19efc:	andeq	sl, r1, r0, lsl #13
   19f00:	andeq	sl, r1, r0, lsl #13
   19f04:	andeq	sl, r1, r0, lsl #13
   19f08:	andeq	sl, r1, r0, lsl #13
   19f0c:	andeq	sl, r1, r0, lsl #13
   19f10:	andeq	sl, r1, r0, lsl #13
   19f14:	andeq	sl, r1, r0, lsl #13
   19f18:	andeq	sl, r1, r0, lsl #13
   19f1c:	andeq	sl, r1, r8, ror #10
   19f20:	andeq	sl, r1, r8, ror #10
   19f24:	andeq	sl, r1, r8, ror #10
   19f28:	andeq	sl, r1, r8, ror #10
   19f2c:	andeq	sl, r1, r8, lsr r2
   19f30:	andeq	sl, r1, ip, lsl #13
   19f34:	andeq	sl, r1, r0, lsl #13
   19f38:	andeq	sl, r1, r0, lsl #13
   19f3c:	andeq	sl, r1, r0, lsl #13
   19f40:	andeq	sl, r1, r0, lsl #13
   19f44:	andeq	sl, r1, r0, lsl #13
   19f48:	andeq	sl, r1, r0, lsl #13
   19f4c:	andeq	sl, r1, r0, lsl #13
   19f50:	andeq	sl, r1, r0, lsl #13
   19f54:	andeq	sl, r1, r0, lsl #13
   19f58:	andeq	sl, r1, r0, lsl #13
   19f5c:	andeq	sl, r1, r0, lsl #13
   19f60:	andeq	sl, r1, r0, lsl #13
   19f64:	andeq	sl, r1, r0, lsl #13
   19f68:	andeq	sl, r1, r0, lsl #13
   19f6c:	andeq	sl, r1, r0, lsl #13
   19f70:	andeq	sl, r1, r0, lsl #13
   19f74:	andeq	sl, r1, r0, lsl #13
   19f78:	andeq	sl, r1, r0, lsl #13
   19f7c:	andeq	sl, r1, r0, lsl #13
   19f80:	andeq	sl, r1, r0, lsl #13
   19f84:	andeq	sl, r1, r0, lsl #13
   19f88:	andeq	sl, r1, r0, lsl #13
   19f8c:	andeq	sl, r1, r0, lsl #13
   19f90:	andeq	sl, r1, r0, lsl #13
   19f94:	andeq	sl, r1, r0, lsl #13
   19f98:	andeq	sl, r1, r0, lsl #13
   19f9c:	andeq	sl, r1, r8, ror #10
   19fa0:	andeq	sl, r1, r8, lsl #9
   19fa4:	andeq	sl, r1, r0, lsl #13
   19fa8:	andeq	sl, r1, r8, ror #10
   19fac:	andeq	sl, r1, r0, lsl #13
   19fb0:	andeq	sl, r1, r8, ror #10
   19fb4:	andeq	sl, r1, r0, lsl #13
   19fb8:	andeq	sl, r1, r0, lsl #13
   19fbc:	andeq	sl, r1, r0, lsl #13
   19fc0:	andeq	sl, r1, r0, lsl #13
   19fc4:	andeq	sl, r1, r0, lsl #13
   19fc8:	andeq	sl, r1, r0, lsl #13
   19fcc:	andeq	sl, r1, r0, lsl #13
   19fd0:	andeq	sl, r1, r0, lsl #13
   19fd4:	andeq	sl, r1, r0, lsl #13
   19fd8:	andeq	sl, r1, r0, lsl #13
   19fdc:	andeq	sl, r1, r0, lsl #13
   19fe0:	andeq	sl, r1, r0, lsl #13
   19fe4:	andeq	sl, r1, r0, lsl #13
   19fe8:	andeq	sl, r1, r0, lsl #13
   19fec:	andeq	sl, r1, r0, lsl #13
   19ff0:	andeq	sl, r1, r0, lsl #13
   19ff4:	andeq	sl, r1, r0, lsl #13
   19ff8:	andeq	sl, r1, r0, lsl #13
   19ffc:	andeq	sl, r1, r0, lsl #13
   1a000:	andeq	sl, r1, r0, lsl #13
   1a004:	andeq	sl, r1, r0, lsl #13
   1a008:	andeq	sl, r1, r0, lsl #13
   1a00c:	andeq	sl, r1, r0, lsl #13
   1a010:	andeq	sl, r1, r0, lsl #13
   1a014:	andeq	sl, r1, r0, lsl #13
   1a018:	andeq	sl, r1, r0, lsl #13
   1a01c:	andeq	sl, r1, r8, lsl r5
   1a020:	andeq	sl, r1, r8, ror #10
   1a024:	andeq	sl, r1, r8, lsl r5
   1a028:	andeq	sl, r1, ip, asr #10
   1a02c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a030:	tst	r0, #1
   1a034:	beq	1a21c <__assert_fail@plt+0x8cd4>
   1a038:	b	1a03c <__assert_fail@plt+0x8af4>
   1a03c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a040:	tst	r0, #1
   1a044:	beq	1a04c <__assert_fail@plt+0x8b04>
   1a048:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a04c:	movw	r0, #1
   1a050:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a054:	ldr	r0, [fp, #8]
   1a058:	cmp	r0, #2
   1a05c:	bne	1a110 <__assert_fail@plt+0x8bc8>
   1a060:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a064:	tst	r0, #1
   1a068:	bne	1a110 <__assert_fail@plt+0x8bc8>
   1a06c:	b	1a070 <__assert_fail@plt+0x8b28>
   1a070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a074:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a078:	cmp	r0, r1
   1a07c:	bcs	1a094 <__assert_fail@plt+0x8b4c>
   1a080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a088:	add	r0, r0, r1
   1a08c:	movw	r1, #39	; 0x27
   1a090:	strb	r1, [r0]
   1a094:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a098:	add	r0, r0, #1
   1a09c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0a0:	b	1a0a4 <__assert_fail@plt+0x8b5c>
   1a0a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0ac:	cmp	r0, r1
   1a0b0:	bcs	1a0c8 <__assert_fail@plt+0x8b80>
   1a0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0bc:	add	r0, r0, r1
   1a0c0:	movw	r1, #36	; 0x24
   1a0c4:	strb	r1, [r0]
   1a0c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0cc:	add	r0, r0, #1
   1a0d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0d4:	b	1a0d8 <__assert_fail@plt+0x8b90>
   1a0d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0e0:	cmp	r0, r1
   1a0e4:	bcs	1a0fc <__assert_fail@plt+0x8bb4>
   1a0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0f0:	add	r0, r0, r1
   1a0f4:	movw	r1, #39	; 0x27
   1a0f8:	strb	r1, [r0]
   1a0fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a100:	add	r0, r0, #1
   1a104:	str	r0, [fp, #-44]	; 0xffffffd4
   1a108:	movw	r0, #1
   1a10c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a110:	b	1a114 <__assert_fail@plt+0x8bcc>
   1a114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a11c:	cmp	r0, r1
   1a120:	bcs	1a138 <__assert_fail@plt+0x8bf0>
   1a124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a12c:	add	r0, r0, r1
   1a130:	movw	r1, #92	; 0x5c
   1a134:	strb	r1, [r0]
   1a138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a13c:	add	r0, r0, #1
   1a140:	str	r0, [fp, #-44]	; 0xffffffd4
   1a144:	b	1a148 <__assert_fail@plt+0x8c00>
   1a148:	ldr	r0, [fp, #8]
   1a14c:	cmp	r0, #2
   1a150:	beq	1a210 <__assert_fail@plt+0x8cc8>
   1a154:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a158:	add	r0, r0, #1
   1a15c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a160:	cmp	r0, r1
   1a164:	bcs	1a210 <__assert_fail@plt+0x8cc8>
   1a168:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a16c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a170:	add	r1, r1, #1
   1a174:	add	r0, r0, r1
   1a178:	ldrb	r0, [r0]
   1a17c:	movw	r1, #48	; 0x30
   1a180:	cmp	r1, r0
   1a184:	bgt	1a210 <__assert_fail@plt+0x8cc8>
   1a188:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a18c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a190:	add	r1, r1, #1
   1a194:	add	r0, r0, r1
   1a198:	ldrb	r0, [r0]
   1a19c:	cmp	r0, #57	; 0x39
   1a1a0:	bgt	1a210 <__assert_fail@plt+0x8cc8>
   1a1a4:	b	1a1a8 <__assert_fail@plt+0x8c60>
   1a1a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a1b0:	cmp	r0, r1
   1a1b4:	bcs	1a1cc <__assert_fail@plt+0x8c84>
   1a1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a1c0:	add	r0, r0, r1
   1a1c4:	movw	r1, #48	; 0x30
   1a1c8:	strb	r1, [r0]
   1a1cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1d0:	add	r0, r0, #1
   1a1d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a1d8:	b	1a1dc <__assert_fail@plt+0x8c94>
   1a1dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a1e4:	cmp	r0, r1
   1a1e8:	bcs	1a200 <__assert_fail@plt+0x8cb8>
   1a1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a1f4:	add	r0, r0, r1
   1a1f8:	movw	r1, #48	; 0x30
   1a1fc:	strb	r1, [r0]
   1a200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a204:	add	r0, r0, #1
   1a208:	str	r0, [fp, #-44]	; 0xffffffd4
   1a20c:	b	1a210 <__assert_fail@plt+0x8cc8>
   1a210:	movw	r0, #48	; 0x30
   1a214:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a218:	b	1a234 <__assert_fail@plt+0x8cec>
   1a21c:	ldr	r0, [fp, #12]
   1a220:	and	r0, r0, #1
   1a224:	cmp	r0, #0
   1a228:	beq	1a230 <__assert_fail@plt+0x8ce8>
   1a22c:	b	1af14 <__assert_fail@plt+0x99cc>
   1a230:	b	1a234 <__assert_fail@plt+0x8cec>
   1a234:	b	1acb0 <__assert_fail@plt+0x9768>
   1a238:	ldr	r0, [fp, #8]
   1a23c:	cmp	r0, #2
   1a240:	str	r0, [sp, #40]	; 0x28
   1a244:	beq	1a25c <__assert_fail@plt+0x8d14>
   1a248:	b	1a24c <__assert_fail@plt+0x8d04>
   1a24c:	ldr	r0, [sp, #40]	; 0x28
   1a250:	cmp	r0, #5
   1a254:	beq	1a270 <__assert_fail@plt+0x8d28>
   1a258:	b	1a42c <__assert_fail@plt+0x8ee4>
   1a25c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a260:	tst	r0, #1
   1a264:	beq	1a26c <__assert_fail@plt+0x8d24>
   1a268:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a26c:	b	1a430 <__assert_fail@plt+0x8ee8>
   1a270:	ldr	r0, [fp, #12]
   1a274:	and	r0, r0, #4
   1a278:	cmp	r0, #0
   1a27c:	beq	1a428 <__assert_fail@plt+0x8ee0>
   1a280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a284:	add	r0, r0, #2
   1a288:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a28c:	cmp	r0, r1
   1a290:	bcs	1a428 <__assert_fail@plt+0x8ee0>
   1a294:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a298:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a29c:	add	r1, r1, #1
   1a2a0:	add	r0, r0, r1
   1a2a4:	ldrb	r0, [r0]
   1a2a8:	cmp	r0, #63	; 0x3f
   1a2ac:	bne	1a428 <__assert_fail@plt+0x8ee0>
   1a2b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a2b8:	add	r0, r0, r1
   1a2bc:	ldrb	r0, [r0, #2]
   1a2c0:	mov	r1, r0
   1a2c4:	cmp	r0, #33	; 0x21
   1a2c8:	str	r1, [sp, #36]	; 0x24
   1a2cc:	beq	1a31c <__assert_fail@plt+0x8dd4>
   1a2d0:	b	1a2d4 <__assert_fail@plt+0x8d8c>
   1a2d4:	ldr	r0, [sp, #36]	; 0x24
   1a2d8:	sub	r1, r0, #39	; 0x27
   1a2dc:	cmp	r1, #3
   1a2e0:	bcc	1a31c <__assert_fail@plt+0x8dd4>
   1a2e4:	b	1a2e8 <__assert_fail@plt+0x8da0>
   1a2e8:	ldr	r0, [sp, #36]	; 0x24
   1a2ec:	cmp	r0, #45	; 0x2d
   1a2f0:	beq	1a31c <__assert_fail@plt+0x8dd4>
   1a2f4:	b	1a2f8 <__assert_fail@plt+0x8db0>
   1a2f8:	ldr	r0, [sp, #36]	; 0x24
   1a2fc:	cmp	r0, #47	; 0x2f
   1a300:	beq	1a31c <__assert_fail@plt+0x8dd4>
   1a304:	b	1a308 <__assert_fail@plt+0x8dc0>
   1a308:	ldr	r0, [sp, #36]	; 0x24
   1a30c:	sub	r1, r0, #60	; 0x3c
   1a310:	cmp	r1, #2
   1a314:	bhi	1a420 <__assert_fail@plt+0x8ed8>
   1a318:	b	1a31c <__assert_fail@plt+0x8dd4>
   1a31c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a320:	tst	r0, #1
   1a324:	beq	1a32c <__assert_fail@plt+0x8de4>
   1a328:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a32c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a330:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a334:	add	r1, r1, #2
   1a338:	add	r0, r0, r1
   1a33c:	ldrb	r0, [r0]
   1a340:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a348:	add	r0, r0, #2
   1a34c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a354:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a358:	cmp	r0, r1
   1a35c:	bcs	1a374 <__assert_fail@plt+0x8e2c>
   1a360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a364:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a368:	add	r0, r0, r1
   1a36c:	movw	r1, #63	; 0x3f
   1a370:	strb	r1, [r0]
   1a374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a378:	add	r0, r0, #1
   1a37c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a380:	b	1a384 <__assert_fail@plt+0x8e3c>
   1a384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a38c:	cmp	r0, r1
   1a390:	bcs	1a3a8 <__assert_fail@plt+0x8e60>
   1a394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a398:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a39c:	add	r0, r0, r1
   1a3a0:	movw	r1, #34	; 0x22
   1a3a4:	strb	r1, [r0]
   1a3a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3ac:	add	r0, r0, #1
   1a3b0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3b4:	b	1a3b8 <__assert_fail@plt+0x8e70>
   1a3b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3c0:	cmp	r0, r1
   1a3c4:	bcs	1a3dc <__assert_fail@plt+0x8e94>
   1a3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a3d0:	add	r0, r0, r1
   1a3d4:	movw	r1, #34	; 0x22
   1a3d8:	strb	r1, [r0]
   1a3dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3e0:	add	r0, r0, #1
   1a3e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3e8:	b	1a3ec <__assert_fail@plt+0x8ea4>
   1a3ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3f4:	cmp	r0, r1
   1a3f8:	bcs	1a410 <__assert_fail@plt+0x8ec8>
   1a3fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a404:	add	r0, r0, r1
   1a408:	movw	r1, #63	; 0x3f
   1a40c:	strb	r1, [r0]
   1a410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a414:	add	r0, r0, #1
   1a418:	str	r0, [fp, #-44]	; 0xffffffd4
   1a41c:	b	1a424 <__assert_fail@plt+0x8edc>
   1a420:	b	1a424 <__assert_fail@plt+0x8edc>
   1a424:	b	1a428 <__assert_fail@plt+0x8ee0>
   1a428:	b	1a430 <__assert_fail@plt+0x8ee8>
   1a42c:	b	1a430 <__assert_fail@plt+0x8ee8>
   1a430:	b	1acb0 <__assert_fail@plt+0x9768>
   1a434:	movw	r0, #97	; 0x61
   1a438:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a43c:	b	1a4fc <__assert_fail@plt+0x8fb4>
   1a440:	movw	r0, #98	; 0x62
   1a444:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a448:	b	1a4fc <__assert_fail@plt+0x8fb4>
   1a44c:	movw	r0, #102	; 0x66
   1a450:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a454:	b	1a4fc <__assert_fail@plt+0x8fb4>
   1a458:	movw	r0, #110	; 0x6e
   1a45c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a460:	b	1a4dc <__assert_fail@plt+0x8f94>
   1a464:	movw	r0, #114	; 0x72
   1a468:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a46c:	b	1a4dc <__assert_fail@plt+0x8f94>
   1a470:	movw	r0, #116	; 0x74
   1a474:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a478:	b	1a4dc <__assert_fail@plt+0x8f94>
   1a47c:	movw	r0, #118	; 0x76
   1a480:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a484:	b	1a4fc <__assert_fail@plt+0x8fb4>
   1a488:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a48c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a490:	ldr	r0, [fp, #8]
   1a494:	cmp	r0, #2
   1a498:	bne	1a4b0 <__assert_fail@plt+0x8f68>
   1a49c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a4a0:	tst	r0, #1
   1a4a4:	beq	1a4ac <__assert_fail@plt+0x8f64>
   1a4a8:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a4ac:	b	1ae38 <__assert_fail@plt+0x98f0>
   1a4b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a4b4:	tst	r0, #1
   1a4b8:	beq	1a4d8 <__assert_fail@plt+0x8f90>
   1a4bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a4c0:	tst	r0, #1
   1a4c4:	beq	1a4d8 <__assert_fail@plt+0x8f90>
   1a4c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a4cc:	cmp	r0, #0
   1a4d0:	beq	1a4d8 <__assert_fail@plt+0x8f90>
   1a4d4:	b	1ae38 <__assert_fail@plt+0x98f0>
   1a4d8:	b	1a4dc <__assert_fail@plt+0x8f94>
   1a4dc:	ldr	r0, [fp, #8]
   1a4e0:	cmp	r0, #2
   1a4e4:	bne	1a4f8 <__assert_fail@plt+0x8fb0>
   1a4e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a4ec:	tst	r0, #1
   1a4f0:	beq	1a4f8 <__assert_fail@plt+0x8fb0>
   1a4f4:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a4f8:	b	1a4fc <__assert_fail@plt+0x8fb4>
   1a4fc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a500:	tst	r0, #1
   1a504:	beq	1a514 <__assert_fail@plt+0x8fcc>
   1a508:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1a50c:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a510:	b	1ad24 <__assert_fail@plt+0x97dc>
   1a514:	b	1acb0 <__assert_fail@plt+0x9768>
   1a518:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a51c:	cmn	r0, #1
   1a520:	bne	1a538 <__assert_fail@plt+0x8ff0>
   1a524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a528:	ldrb	r0, [r0, #1]
   1a52c:	cmp	r0, #0
   1a530:	beq	1a548 <__assert_fail@plt+0x9000>
   1a534:	b	1a544 <__assert_fail@plt+0x8ffc>
   1a538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a53c:	cmp	r0, #1
   1a540:	beq	1a548 <__assert_fail@plt+0x9000>
   1a544:	b	1acb0 <__assert_fail@plt+0x9768>
   1a548:	b	1a54c <__assert_fail@plt+0x9004>
   1a54c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a550:	cmp	r0, #0
   1a554:	beq	1a55c <__assert_fail@plt+0x9014>
   1a558:	b	1acb0 <__assert_fail@plt+0x9768>
   1a55c:	b	1a560 <__assert_fail@plt+0x9018>
   1a560:	movw	r0, #1
   1a564:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a568:	ldr	r0, [fp, #8]
   1a56c:	cmp	r0, #2
   1a570:	bne	1a584 <__assert_fail@plt+0x903c>
   1a574:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a578:	tst	r0, #1
   1a57c:	beq	1a584 <__assert_fail@plt+0x903c>
   1a580:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a584:	b	1acb0 <__assert_fail@plt+0x9768>
   1a588:	movw	r0, #1
   1a58c:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a590:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a594:	ldr	r0, [fp, #8]
   1a598:	cmp	r0, #2
   1a59c:	bne	1a67c <__assert_fail@plt+0x9134>
   1a5a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5a4:	tst	r0, #1
   1a5a8:	beq	1a5b0 <__assert_fail@plt+0x9068>
   1a5ac:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a5b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5b4:	cmp	r0, #0
   1a5b8:	beq	1a5d8 <__assert_fail@plt+0x9090>
   1a5bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a5c0:	cmp	r0, #0
   1a5c4:	bne	1a5d8 <__assert_fail@plt+0x9090>
   1a5c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1a5d0:	movw	r0, #0
   1a5d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5d8:	b	1a5dc <__assert_fail@plt+0x9094>
   1a5dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a5e4:	cmp	r0, r1
   1a5e8:	bcs	1a600 <__assert_fail@plt+0x90b8>
   1a5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5f4:	add	r0, r0, r1
   1a5f8:	movw	r1, #39	; 0x27
   1a5fc:	strb	r1, [r0]
   1a600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a604:	add	r0, r0, #1
   1a608:	str	r0, [fp, #-44]	; 0xffffffd4
   1a60c:	b	1a610 <__assert_fail@plt+0x90c8>
   1a610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a618:	cmp	r0, r1
   1a61c:	bcs	1a634 <__assert_fail@plt+0x90ec>
   1a620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a624:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a628:	add	r0, r0, r1
   1a62c:	movw	r1, #92	; 0x5c
   1a630:	strb	r1, [r0]
   1a634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a638:	add	r0, r0, #1
   1a63c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a640:	b	1a644 <__assert_fail@plt+0x90fc>
   1a644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a64c:	cmp	r0, r1
   1a650:	bcs	1a668 <__assert_fail@plt+0x9120>
   1a654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a658:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a65c:	add	r0, r0, r1
   1a660:	movw	r1, #39	; 0x27
   1a664:	strb	r1, [r0]
   1a668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a66c:	add	r0, r0, #1
   1a670:	str	r0, [fp, #-44]	; 0xffffffd4
   1a674:	movw	r0, #0
   1a678:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a67c:	b	1acb0 <__assert_fail@plt+0x9768>
   1a680:	movw	r0, #1
   1a684:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a688:	b	1acb0 <__assert_fail@plt+0x9768>
   1a68c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1a690:	tst	r0, #1
   1a694:	beq	1a6d8 <__assert_fail@plt+0x9190>
   1a698:	mov	r0, #1
   1a69c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a6a0:	bl	11398 <__ctype_b_loc@plt>
   1a6a4:	ldr	r0, [r0]
   1a6a8:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   1a6ac:	mov	r1, lr
   1a6b0:	add	r0, r0, lr, lsl #1
   1a6b4:	ldrh	r0, [r0]
   1a6b8:	and	r0, r0, #16384	; 0x4000
   1a6bc:	cmp	r0, #0
   1a6c0:	movw	r0, #0
   1a6c4:	movne	r0, #1
   1a6c8:	and	r0, r0, #1
   1a6cc:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a6d0:	str	r1, [sp, #32]
   1a6d4:	b	1a964 <__assert_fail@plt+0x941c>
   1a6d8:	sub	r0, fp, #84	; 0x54
   1a6dc:	movw	r1, #0
   1a6e0:	and	r1, r1, #255	; 0xff
   1a6e4:	movw	r2, #8
   1a6e8:	bl	1141c <memset@plt>
   1a6ec:	movw	r0, #0
   1a6f0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a6f4:	movw	r0, #1
   1a6f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a6fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a700:	cmn	r0, #1
   1a704:	bne	1a714 <__assert_fail@plt+0x91cc>
   1a708:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a70c:	bl	113c8 <strlen@plt>
   1a710:	str	r0, [fp, #-36]	; 0xffffffdc
   1a714:	b	1a718 <__assert_fail@plt+0x91d0>
   1a718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a71c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a720:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a724:	add	r1, r1, r2
   1a728:	add	r1, r0, r1
   1a72c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a730:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a734:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a738:	add	r2, r2, r3
   1a73c:	sub	r2, r0, r2
   1a740:	sub	r0, fp, #88	; 0x58
   1a744:	sub	r3, fp, #84	; 0x54
   1a748:	bl	22a50 <__assert_fail@plt+0x11508>
   1a74c:	str	r0, [sp, #92]	; 0x5c
   1a750:	ldr	r0, [sp, #92]	; 0x5c
   1a754:	cmp	r0, #0
   1a758:	bne	1a760 <__assert_fail@plt+0x9218>
   1a75c:	b	1a960 <__assert_fail@plt+0x9418>
   1a760:	ldr	r0, [sp, #92]	; 0x5c
   1a764:	cmn	r0, #1
   1a768:	bne	1a778 <__assert_fail@plt+0x9230>
   1a76c:	movw	r0, #0
   1a770:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a774:	b	1a960 <__assert_fail@plt+0x9418>
   1a778:	ldr	r0, [sp, #92]	; 0x5c
   1a77c:	cmn	r0, #2
   1a780:	bne	1a7f4 <__assert_fail@plt+0x92ac>
   1a784:	movw	r0, #0
   1a788:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a78c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a790:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a794:	add	r0, r0, r1
   1a798:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a79c:	cmp	r0, r1
   1a7a0:	movw	r0, #0
   1a7a4:	str	r0, [sp, #28]
   1a7a8:	bcs	1a7d4 <__assert_fail@plt+0x928c>
   1a7ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a7b8:	add	r1, r1, r2
   1a7bc:	add	r0, r0, r1
   1a7c0:	ldrb	r0, [r0]
   1a7c4:	cmp	r0, #0
   1a7c8:	movw	r0, #0
   1a7cc:	movne	r0, #1
   1a7d0:	str	r0, [sp, #28]
   1a7d4:	ldr	r0, [sp, #28]
   1a7d8:	tst	r0, #1
   1a7dc:	beq	1a7f0 <__assert_fail@plt+0x92a8>
   1a7e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a7e4:	add	r0, r0, #1
   1a7e8:	str	r0, [fp, #-72]	; 0xffffffb8
   1a7ec:	b	1a78c <__assert_fail@plt+0x9244>
   1a7f0:	b	1a960 <__assert_fail@plt+0x9418>
   1a7f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7f8:	tst	r0, #1
   1a7fc:	beq	1a908 <__assert_fail@plt+0x93c0>
   1a800:	ldr	r0, [fp, #8]
   1a804:	cmp	r0, #2
   1a808:	bne	1a908 <__assert_fail@plt+0x93c0>
   1a80c:	movw	r0, #1
   1a810:	str	r0, [sp, #88]	; 0x58
   1a814:	ldr	r0, [sp, #88]	; 0x58
   1a818:	ldr	r1, [sp, #92]	; 0x5c
   1a81c:	cmp	r0, r1
   1a820:	bcs	1a904 <__assert_fail@plt+0x93bc>
   1a824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a828:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a82c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a830:	add	r1, r1, r2
   1a834:	ldr	r2, [sp, #88]	; 0x58
   1a838:	add	r1, r1, r2
   1a83c:	ldrb	r0, [r0, r1]
   1a840:	sub	r0, r0, #91	; 0x5b
   1a844:	cmp	r0, #33	; 0x21
   1a848:	str	r0, [sp, #24]
   1a84c:	bhi	1a8ec <__assert_fail@plt+0x93a4>
   1a850:	add	r0, pc, #8
   1a854:	ldr	r1, [sp, #24]
   1a858:	ldr	r0, [r0, r1, lsl #2]
   1a85c:	mov	pc, r0
   1a860:	andeq	sl, r1, r8, ror #17
   1a864:	andeq	sl, r1, r8, ror #17
   1a868:	andeq	sl, r1, ip, ror #17
   1a86c:	andeq	sl, r1, r8, ror #17
   1a870:	andeq	sl, r1, ip, ror #17
   1a874:	andeq	sl, r1, r8, ror #17
   1a878:	andeq	sl, r1, ip, ror #17
   1a87c:	andeq	sl, r1, ip, ror #17
   1a880:	andeq	sl, r1, ip, ror #17
   1a884:	andeq	sl, r1, ip, ror #17
   1a888:	andeq	sl, r1, ip, ror #17
   1a88c:	andeq	sl, r1, ip, ror #17
   1a890:	andeq	sl, r1, ip, ror #17
   1a894:	andeq	sl, r1, ip, ror #17
   1a898:	andeq	sl, r1, ip, ror #17
   1a89c:	andeq	sl, r1, ip, ror #17
   1a8a0:	andeq	sl, r1, ip, ror #17
   1a8a4:	andeq	sl, r1, ip, ror #17
   1a8a8:	andeq	sl, r1, ip, ror #17
   1a8ac:	andeq	sl, r1, ip, ror #17
   1a8b0:	andeq	sl, r1, ip, ror #17
   1a8b4:	andeq	sl, r1, ip, ror #17
   1a8b8:	andeq	sl, r1, ip, ror #17
   1a8bc:	andeq	sl, r1, ip, ror #17
   1a8c0:	andeq	sl, r1, ip, ror #17
   1a8c4:	andeq	sl, r1, ip, ror #17
   1a8c8:	andeq	sl, r1, ip, ror #17
   1a8cc:	andeq	sl, r1, ip, ror #17
   1a8d0:	andeq	sl, r1, ip, ror #17
   1a8d4:	andeq	sl, r1, ip, ror #17
   1a8d8:	andeq	sl, r1, ip, ror #17
   1a8dc:	andeq	sl, r1, ip, ror #17
   1a8e0:	andeq	sl, r1, ip, ror #17
   1a8e4:	andeq	sl, r1, r8, ror #17
   1a8e8:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a8ec:	b	1a8f0 <__assert_fail@plt+0x93a8>
   1a8f0:	b	1a8f4 <__assert_fail@plt+0x93ac>
   1a8f4:	ldr	r0, [sp, #88]	; 0x58
   1a8f8:	add	r0, r0, #1
   1a8fc:	str	r0, [sp, #88]	; 0x58
   1a900:	b	1a814 <__assert_fail@plt+0x92cc>
   1a904:	b	1a908 <__assert_fail@plt+0x93c0>
   1a908:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a90c:	bl	112f0 <iswprint@plt>
   1a910:	cmp	r0, #0
   1a914:	bne	1a920 <__assert_fail@plt+0x93d8>
   1a918:	movw	r0, #0
   1a91c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a920:	ldr	r0, [sp, #92]	; 0x5c
   1a924:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a928:	add	r0, r1, r0
   1a92c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a930:	b	1a934 <__assert_fail@plt+0x93ec>
   1a934:	b	1a938 <__assert_fail@plt+0x93f0>
   1a938:	b	1a93c <__assert_fail@plt+0x93f4>
   1a93c:	sub	r0, fp, #84	; 0x54
   1a940:	bl	112a8 <mbsinit@plt>
   1a944:	cmp	r0, #0
   1a948:	movw	r0, #0
   1a94c:	movne	r0, #1
   1a950:	mvn	lr, #0
   1a954:	eor	r0, r0, lr
   1a958:	tst	r0, #1
   1a95c:	bne	1a718 <__assert_fail@plt+0x91d0>
   1a960:	b	1a964 <__assert_fail@plt+0x941c>
   1a964:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a968:	and	r0, r0, #1
   1a96c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a970:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a974:	movw	r1, #1
   1a978:	cmp	r1, r0
   1a97c:	bcc	1a998 <__assert_fail@plt+0x9450>
   1a980:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a984:	tst	r0, #1
   1a988:	beq	1acac <__assert_fail@plt+0x9764>
   1a98c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a990:	tst	r0, #1
   1a994:	bne	1acac <__assert_fail@plt+0x9764>
   1a998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a99c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a9a0:	add	r0, r0, r1
   1a9a4:	str	r0, [sp, #84]	; 0x54
   1a9a8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a9ac:	tst	r0, #1
   1a9b0:	beq	1ab60 <__assert_fail@plt+0x9618>
   1a9b4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a9b8:	tst	r0, #1
   1a9bc:	bne	1ab60 <__assert_fail@plt+0x9618>
   1a9c0:	b	1a9c4 <__assert_fail@plt+0x947c>
   1a9c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a9c8:	tst	r0, #1
   1a9cc:	beq	1a9d4 <__assert_fail@plt+0x948c>
   1a9d0:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1a9d4:	movw	r0, #1
   1a9d8:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a9dc:	ldr	r0, [fp, #8]
   1a9e0:	cmp	r0, #2
   1a9e4:	bne	1aa98 <__assert_fail@plt+0x9550>
   1a9e8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a9ec:	tst	r0, #1
   1a9f0:	bne	1aa98 <__assert_fail@plt+0x9550>
   1a9f4:	b	1a9f8 <__assert_fail@plt+0x94b0>
   1a9f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa00:	cmp	r0, r1
   1aa04:	bcs	1aa1c <__assert_fail@plt+0x94d4>
   1aa08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa10:	add	r0, r0, r1
   1aa14:	movw	r1, #39	; 0x27
   1aa18:	strb	r1, [r0]
   1aa1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa20:	add	r0, r0, #1
   1aa24:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa28:	b	1aa2c <__assert_fail@plt+0x94e4>
   1aa2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa34:	cmp	r0, r1
   1aa38:	bcs	1aa50 <__assert_fail@plt+0x9508>
   1aa3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa44:	add	r0, r0, r1
   1aa48:	movw	r1, #36	; 0x24
   1aa4c:	strb	r1, [r0]
   1aa50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa54:	add	r0, r0, #1
   1aa58:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa5c:	b	1aa60 <__assert_fail@plt+0x9518>
   1aa60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa68:	cmp	r0, r1
   1aa6c:	bcs	1aa84 <__assert_fail@plt+0x953c>
   1aa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa78:	add	r0, r0, r1
   1aa7c:	movw	r1, #39	; 0x27
   1aa80:	strb	r1, [r0]
   1aa84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa88:	add	r0, r0, #1
   1aa8c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa90:	movw	r0, #1
   1aa94:	strb	r0, [fp, #-60]	; 0xffffffc4
   1aa98:	b	1aa9c <__assert_fail@plt+0x9554>
   1aa9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aaa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aaa4:	cmp	r0, r1
   1aaa8:	bcs	1aac0 <__assert_fail@plt+0x9578>
   1aaac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aab0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aab4:	add	r0, r0, r1
   1aab8:	movw	r1, #92	; 0x5c
   1aabc:	strb	r1, [r0]
   1aac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aac4:	add	r0, r0, #1
   1aac8:	str	r0, [fp, #-44]	; 0xffffffd4
   1aacc:	b	1aad0 <__assert_fail@plt+0x9588>
   1aad0:	b	1aad4 <__assert_fail@plt+0x958c>
   1aad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aad8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aadc:	cmp	r0, r1
   1aae0:	bcs	1ab00 <__assert_fail@plt+0x95b8>
   1aae4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aae8:	asr	r0, r0, #6
   1aaec:	add	r0, r0, #48	; 0x30
   1aaf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aaf4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aaf8:	add	r1, r1, r2
   1aafc:	strb	r0, [r1]
   1ab00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab04:	add	r0, r0, #1
   1ab08:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab0c:	b	1ab10 <__assert_fail@plt+0x95c8>
   1ab10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab18:	cmp	r0, r1
   1ab1c:	bcs	1ab40 <__assert_fail@plt+0x95f8>
   1ab20:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ab24:	asr	r0, r0, #3
   1ab28:	and	r0, r0, #7
   1ab2c:	add	r0, r0, #48	; 0x30
   1ab30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ab38:	add	r1, r1, r2
   1ab3c:	strb	r0, [r1]
   1ab40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab44:	add	r0, r0, #1
   1ab48:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab4c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ab50:	and	r0, r0, #7
   1ab54:	add	r0, r0, #48	; 0x30
   1ab58:	strb	r0, [fp, #-63]	; 0xffffffc1
   1ab5c:	b	1abac <__assert_fail@plt+0x9664>
   1ab60:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1ab64:	tst	r0, #1
   1ab68:	beq	1aba8 <__assert_fail@plt+0x9660>
   1ab6c:	b	1ab70 <__assert_fail@plt+0x9628>
   1ab70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab78:	cmp	r0, r1
   1ab7c:	bcs	1ab94 <__assert_fail@plt+0x964c>
   1ab80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab88:	add	r0, r0, r1
   1ab8c:	movw	r1, #92	; 0x5c
   1ab90:	strb	r1, [r0]
   1ab94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab98:	add	r0, r0, #1
   1ab9c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aba0:	movw	r0, #0
   1aba4:	strb	r0, [fp, #-65]	; 0xffffffbf
   1aba8:	b	1abac <__assert_fail@plt+0x9664>
   1abac:	ldr	r0, [sp, #84]	; 0x54
   1abb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1abb4:	add	r1, r1, #1
   1abb8:	cmp	r0, r1
   1abbc:	bhi	1abc4 <__assert_fail@plt+0x967c>
   1abc0:	b	1aca8 <__assert_fail@plt+0x9760>
   1abc4:	b	1abc8 <__assert_fail@plt+0x9680>
   1abc8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1abcc:	tst	r0, #1
   1abd0:	beq	1ac50 <__assert_fail@plt+0x9708>
   1abd4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1abd8:	tst	r0, #1
   1abdc:	bne	1ac50 <__assert_fail@plt+0x9708>
   1abe0:	b	1abe4 <__assert_fail@plt+0x969c>
   1abe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abe8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abec:	cmp	r0, r1
   1abf0:	bcs	1ac08 <__assert_fail@plt+0x96c0>
   1abf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1abfc:	add	r0, r0, r1
   1ac00:	movw	r1, #39	; 0x27
   1ac04:	strb	r1, [r0]
   1ac08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac0c:	add	r0, r0, #1
   1ac10:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac14:	b	1ac18 <__assert_fail@plt+0x96d0>
   1ac18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac20:	cmp	r0, r1
   1ac24:	bcs	1ac3c <__assert_fail@plt+0x96f4>
   1ac28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac30:	add	r0, r0, r1
   1ac34:	movw	r1, #39	; 0x27
   1ac38:	strb	r1, [r0]
   1ac3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac40:	add	r0, r0, #1
   1ac44:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac48:	movw	r0, #0
   1ac4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ac50:	b	1ac54 <__assert_fail@plt+0x970c>
   1ac54:	b	1ac58 <__assert_fail@plt+0x9710>
   1ac58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac60:	cmp	r0, r1
   1ac64:	bcs	1ac7c <__assert_fail@plt+0x9734>
   1ac68:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ac6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ac74:	add	r1, r1, r2
   1ac78:	strb	r0, [r1]
   1ac7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac80:	add	r0, r0, #1
   1ac84:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ac8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ac90:	add	r1, r1, #1
   1ac94:	str	r1, [fp, #-40]	; 0xffffffd8
   1ac98:	add	r0, r0, r1
   1ac9c:	ldrb	r0, [r0]
   1aca0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1aca4:	b	1a9a8 <__assert_fail@plt+0x9460>
   1aca8:	b	1ae38 <__assert_fail@plt+0x98f0>
   1acac:	b	1acb0 <__assert_fail@plt+0x9768>
   1acb0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1acb4:	tst	r0, #1
   1acb8:	beq	1acc8 <__assert_fail@plt+0x9780>
   1acbc:	ldr	r0, [fp, #8]
   1acc0:	cmp	r0, #2
   1acc4:	bne	1acd4 <__assert_fail@plt+0x978c>
   1acc8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1accc:	tst	r0, #1
   1acd0:	beq	1ad10 <__assert_fail@plt+0x97c8>
   1acd4:	ldr	r0, [fp, #16]
   1acd8:	movw	r1, #0
   1acdc:	cmp	r0, r1
   1ace0:	beq	1ad10 <__assert_fail@plt+0x97c8>
   1ace4:	ldr	r0, [fp, #16]
   1ace8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1acec:	lsr	r1, r1, #5
   1acf0:	add	r0, r0, r1, lsl #2
   1acf4:	ldr	r0, [r0]
   1acf8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1acfc:	and	r1, r1, #31
   1ad00:	lsr	r0, r0, r1
   1ad04:	and	r0, r0, #1
   1ad08:	cmp	r0, #0
   1ad0c:	bne	1ad20 <__assert_fail@plt+0x97d8>
   1ad10:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1ad14:	tst	r0, #1
   1ad18:	bne	1ad20 <__assert_fail@plt+0x97d8>
   1ad1c:	b	1ae38 <__assert_fail@plt+0x98f0>
   1ad20:	b	1ad24 <__assert_fail@plt+0x97dc>
   1ad24:	b	1ad28 <__assert_fail@plt+0x97e0>
   1ad28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ad2c:	tst	r0, #1
   1ad30:	beq	1ad38 <__assert_fail@plt+0x97f0>
   1ad34:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1ad38:	movw	r0, #1
   1ad3c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1ad40:	ldr	r0, [fp, #8]
   1ad44:	cmp	r0, #2
   1ad48:	bne	1adfc <__assert_fail@plt+0x98b4>
   1ad4c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ad50:	tst	r0, #1
   1ad54:	bne	1adfc <__assert_fail@plt+0x98b4>
   1ad58:	b	1ad5c <__assert_fail@plt+0x9814>
   1ad5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad64:	cmp	r0, r1
   1ad68:	bcs	1ad80 <__assert_fail@plt+0x9838>
   1ad6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad74:	add	r0, r0, r1
   1ad78:	movw	r1, #39	; 0x27
   1ad7c:	strb	r1, [r0]
   1ad80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad84:	add	r0, r0, #1
   1ad88:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad8c:	b	1ad90 <__assert_fail@plt+0x9848>
   1ad90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad98:	cmp	r0, r1
   1ad9c:	bcs	1adb4 <__assert_fail@plt+0x986c>
   1ada0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ada8:	add	r0, r0, r1
   1adac:	movw	r1, #36	; 0x24
   1adb0:	strb	r1, [r0]
   1adb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adb8:	add	r0, r0, #1
   1adbc:	str	r0, [fp, #-44]	; 0xffffffd4
   1adc0:	b	1adc4 <__assert_fail@plt+0x987c>
   1adc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1adcc:	cmp	r0, r1
   1add0:	bcs	1ade8 <__assert_fail@plt+0x98a0>
   1add4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1add8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1addc:	add	r0, r0, r1
   1ade0:	movw	r1, #39	; 0x27
   1ade4:	strb	r1, [r0]
   1ade8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adec:	add	r0, r0, #1
   1adf0:	str	r0, [fp, #-44]	; 0xffffffd4
   1adf4:	movw	r0, #1
   1adf8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1adfc:	b	1ae00 <__assert_fail@plt+0x98b8>
   1ae00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae08:	cmp	r0, r1
   1ae0c:	bcs	1ae24 <__assert_fail@plt+0x98dc>
   1ae10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ae18:	add	r0, r0, r1
   1ae1c:	movw	r1, #92	; 0x5c
   1ae20:	strb	r1, [r0]
   1ae24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae28:	add	r0, r0, #1
   1ae2c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae30:	b	1ae34 <__assert_fail@plt+0x98ec>
   1ae34:	b	1ae38 <__assert_fail@plt+0x98f0>
   1ae38:	b	1ae3c <__assert_fail@plt+0x98f4>
   1ae3c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ae40:	tst	r0, #1
   1ae44:	beq	1aec4 <__assert_fail@plt+0x997c>
   1ae48:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1ae4c:	tst	r0, #1
   1ae50:	bne	1aec4 <__assert_fail@plt+0x997c>
   1ae54:	b	1ae58 <__assert_fail@plt+0x9910>
   1ae58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae60:	cmp	r0, r1
   1ae64:	bcs	1ae7c <__assert_fail@plt+0x9934>
   1ae68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ae70:	add	r0, r0, r1
   1ae74:	movw	r1, #39	; 0x27
   1ae78:	strb	r1, [r0]
   1ae7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae80:	add	r0, r0, #1
   1ae84:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae88:	b	1ae8c <__assert_fail@plt+0x9944>
   1ae8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae94:	cmp	r0, r1
   1ae98:	bcs	1aeb0 <__assert_fail@plt+0x9968>
   1ae9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aea4:	add	r0, r0, r1
   1aea8:	movw	r1, #39	; 0x27
   1aeac:	strb	r1, [r0]
   1aeb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aeb4:	add	r0, r0, #1
   1aeb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1aebc:	movw	r0, #0
   1aec0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1aec4:	b	1aec8 <__assert_fail@plt+0x9980>
   1aec8:	b	1aecc <__assert_fail@plt+0x9984>
   1aecc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aed0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aed4:	cmp	r0, r1
   1aed8:	bcs	1aef0 <__assert_fail@plt+0x99a8>
   1aedc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aee4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aee8:	add	r1, r1, r2
   1aeec:	strb	r0, [r1]
   1aef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aef4:	add	r0, r0, #1
   1aef8:	str	r0, [fp, #-44]	; 0xffffffd4
   1aefc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1af00:	tst	r0, #1
   1af04:	bne	1af10 <__assert_fail@plt+0x99c8>
   1af08:	movw	r0, #0
   1af0c:	strb	r0, [fp, #-62]	; 0xffffffc2
   1af10:	b	1af14 <__assert_fail@plt+0x99cc>
   1af14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1af18:	add	r0, r0, #1
   1af1c:	str	r0, [fp, #-40]	; 0xffffffd8
   1af20:	b	19cc8 <__assert_fail@plt+0x8780>
   1af24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af28:	cmp	r0, #0
   1af2c:	bne	1af4c <__assert_fail@plt+0x9a04>
   1af30:	ldr	r0, [fp, #8]
   1af34:	cmp	r0, #2
   1af38:	bne	1af4c <__assert_fail@plt+0x9a04>
   1af3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1af40:	tst	r0, #1
   1af44:	beq	1af4c <__assert_fail@plt+0x9a04>
   1af48:	b	1b0a4 <__assert_fail@plt+0x9b5c>
   1af4c:	ldr	r0, [fp, #8]
   1af50:	cmp	r0, #2
   1af54:	bne	1aff4 <__assert_fail@plt+0x9aac>
   1af58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1af5c:	tst	r0, #1
   1af60:	bne	1aff4 <__assert_fail@plt+0x9aac>
   1af64:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1af68:	tst	r0, #1
   1af6c:	beq	1aff4 <__assert_fail@plt+0x9aac>
   1af70:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1af74:	tst	r0, #1
   1af78:	beq	1afc0 <__assert_fail@plt+0x9a78>
   1af7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1af84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1af88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1af8c:	ldr	ip, [fp, #12]
   1af90:	ldr	lr, [fp, #16]
   1af94:	ldr	r4, [fp, #20]
   1af98:	ldr	r5, [fp, #24]
   1af9c:	movw	r6, #5
   1afa0:	str	r6, [sp]
   1afa4:	str	ip, [sp, #4]
   1afa8:	str	lr, [sp, #8]
   1afac:	str	r4, [sp, #12]
   1afb0:	str	r5, [sp, #16]
   1afb4:	bl	199e0 <__assert_fail@plt+0x8498>
   1afb8:	str	r0, [fp, #-20]	; 0xffffffec
   1afbc:	b	1b10c <__assert_fail@plt+0x9bc4>
   1afc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1afc4:	cmp	r0, #0
   1afc8:	bne	1afec <__assert_fail@plt+0x9aa4>
   1afcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1afd0:	cmp	r0, #0
   1afd4:	beq	1afec <__assert_fail@plt+0x9aa4>
   1afd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1afdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1afe0:	movw	r0, #0
   1afe4:	str	r0, [fp, #-44]	; 0xffffffd4
   1afe8:	b	19a88 <__assert_fail@plt+0x8540>
   1afec:	b	1aff0 <__assert_fail@plt+0x9aa8>
   1aff0:	b	1aff4 <__assert_fail@plt+0x9aac>
   1aff4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1aff8:	movw	r1, #0
   1affc:	cmp	r0, r1
   1b000:	beq	1b074 <__assert_fail@plt+0x9b2c>
   1b004:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b008:	tst	r0, #1
   1b00c:	bne	1b074 <__assert_fail@plt+0x9b2c>
   1b010:	b	1b014 <__assert_fail@plt+0x9acc>
   1b014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b018:	ldrsb	r0, [r0]
   1b01c:	cmp	r0, #0
   1b020:	beq	1b070 <__assert_fail@plt+0x9b28>
   1b024:	b	1b028 <__assert_fail@plt+0x9ae0>
   1b028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b02c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b030:	cmp	r0, r1
   1b034:	bcs	1b050 <__assert_fail@plt+0x9b08>
   1b038:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b03c:	ldrb	r0, [r0]
   1b040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b044:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b048:	add	r1, r1, r2
   1b04c:	strb	r0, [r1]
   1b050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b054:	add	r0, r0, #1
   1b058:	str	r0, [fp, #-44]	; 0xffffffd4
   1b05c:	b	1b060 <__assert_fail@plt+0x9b18>
   1b060:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b064:	add	r0, r0, #1
   1b068:	str	r0, [fp, #-52]	; 0xffffffcc
   1b06c:	b	1b014 <__assert_fail@plt+0x9acc>
   1b070:	b	1b074 <__assert_fail@plt+0x9b2c>
   1b074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b078:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b07c:	cmp	r0, r1
   1b080:	bcs	1b098 <__assert_fail@plt+0x9b50>
   1b084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b088:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b08c:	add	r0, r0, r1
   1b090:	movw	r1, #0
   1b094:	strb	r1, [r0]
   1b098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b09c:	str	r0, [fp, #-20]	; 0xffffffec
   1b0a0:	b	1b10c <__assert_fail@plt+0x9bc4>
   1b0a4:	ldr	r0, [fp, #8]
   1b0a8:	cmp	r0, #2
   1b0ac:	bne	1b0c4 <__assert_fail@plt+0x9b7c>
   1b0b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1b0b4:	tst	r0, #1
   1b0b8:	beq	1b0c4 <__assert_fail@plt+0x9b7c>
   1b0bc:	movw	r0, #4
   1b0c0:	str	r0, [fp, #8]
   1b0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b0d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b0d4:	ldr	ip, [fp, #8]
   1b0d8:	ldr	lr, [fp, #12]
   1b0dc:	mvn	r4, #2
   1b0e0:	and	lr, lr, r4
   1b0e4:	ldr	r4, [fp, #20]
   1b0e8:	ldr	r5, [fp, #24]
   1b0ec:	str	ip, [sp]
   1b0f0:	str	lr, [sp, #4]
   1b0f4:	movw	ip, #0
   1b0f8:	str	ip, [sp, #8]
   1b0fc:	str	r4, [sp, #12]
   1b100:	str	r5, [sp, #16]
   1b104:	bl	199e0 <__assert_fail@plt+0x8498>
   1b108:	str	r0, [fp, #-20]	; 0xffffffec
   1b10c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b110:	sub	sp, fp, #16
   1b114:	pop	{r4, r5, r6, sl, fp, pc}
   1b118:	push	{fp, lr}
   1b11c:	mov	fp, sp
   1b120:	sub	sp, sp, #16
   1b124:	str	r0, [fp, #-4]
   1b128:	str	r1, [sp, #8]
   1b12c:	str	r2, [sp, #4]
   1b130:	ldr	r0, [fp, #-4]
   1b134:	ldr	r1, [sp, #8]
   1b138:	ldr	r3, [sp, #4]
   1b13c:	movw	r2, #0
   1b140:	bl	1b14c <__assert_fail@plt+0x9c04>
   1b144:	mov	sp, fp
   1b148:	pop	{fp, pc}
   1b14c:	push	{r4, r5, r6, sl, fp, lr}
   1b150:	add	fp, sp, #16
   1b154:	sub	sp, sp, #72	; 0x48
   1b158:	str	r0, [fp, #-20]	; 0xffffffec
   1b15c:	str	r1, [fp, #-24]	; 0xffffffe8
   1b160:	str	r2, [fp, #-28]	; 0xffffffe4
   1b164:	str	r3, [fp, #-32]	; 0xffffffe0
   1b168:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b16c:	movw	r1, #0
   1b170:	cmp	r0, r1
   1b174:	beq	1b184 <__assert_fail@plt+0x9c3c>
   1b178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b17c:	str	r0, [sp, #32]
   1b180:	b	1b194 <__assert_fail@plt+0x9c4c>
   1b184:	movw	r0, #29132	; 0x71cc
   1b188:	movt	r0, #3
   1b18c:	str	r0, [sp, #32]
   1b190:	b	1b194 <__assert_fail@plt+0x9c4c>
   1b194:	ldr	r0, [sp, #32]
   1b198:	str	r0, [fp, #-36]	; 0xffffffdc
   1b19c:	bl	11404 <__errno_location@plt>
   1b1a0:	ldr	r0, [r0]
   1b1a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b1a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b1ac:	ldr	r0, [r0, #4]
   1b1b0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1b1b4:	movw	r1, #0
   1b1b8:	cmp	lr, r1
   1b1bc:	movw	lr, #0
   1b1c0:	movne	lr, #1
   1b1c4:	tst	lr, #1
   1b1c8:	mov	lr, r1
   1b1cc:	moveq	lr, #1
   1b1d0:	orr	r0, r0, lr
   1b1d4:	str	r0, [sp, #44]	; 0x2c
   1b1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b1e4:	ldr	r0, [r0]
   1b1e8:	ldr	lr, [sp, #44]	; 0x2c
   1b1ec:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b1f0:	add	ip, ip, #8
   1b1f4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b1f8:	ldr	r4, [r4, #40]	; 0x28
   1b1fc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b200:	ldr	r5, [r5, #44]	; 0x2c
   1b204:	str	r0, [sp, #28]
   1b208:	mov	r0, r1
   1b20c:	ldr	r6, [sp, #28]
   1b210:	str	r6, [sp]
   1b214:	str	lr, [sp, #4]
   1b218:	str	ip, [sp, #8]
   1b21c:	str	r4, [sp, #12]
   1b220:	str	r5, [sp, #16]
   1b224:	bl	199e0 <__assert_fail@plt+0x8498>
   1b228:	add	r0, r0, #1
   1b22c:	str	r0, [sp, #40]	; 0x28
   1b230:	ldr	r0, [sp, #40]	; 0x28
   1b234:	bl	1cd24 <__assert_fail@plt+0xb7dc>
   1b238:	str	r0, [sp, #36]	; 0x24
   1b23c:	ldr	r0, [sp, #36]	; 0x24
   1b240:	ldr	r1, [sp, #40]	; 0x28
   1b244:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b24c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b250:	ldr	ip, [ip]
   1b254:	ldr	lr, [sp, #44]	; 0x2c
   1b258:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b25c:	add	r4, r4, #8
   1b260:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b264:	ldr	r5, [r5, #40]	; 0x28
   1b268:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b26c:	ldr	r6, [r6, #44]	; 0x2c
   1b270:	str	ip, [sp]
   1b274:	str	lr, [sp, #4]
   1b278:	str	r4, [sp, #8]
   1b27c:	str	r5, [sp, #12]
   1b280:	str	r6, [sp, #16]
   1b284:	bl	199e0 <__assert_fail@plt+0x8498>
   1b288:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b28c:	str	r0, [sp, #24]
   1b290:	str	r1, [sp, #20]
   1b294:	bl	11404 <__errno_location@plt>
   1b298:	ldr	r1, [sp, #20]
   1b29c:	str	r1, [r0]
   1b2a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b2a4:	movw	r2, #0
   1b2a8:	cmp	r0, r2
   1b2ac:	beq	1b2c0 <__assert_fail@plt+0x9d78>
   1b2b0:	ldr	r0, [sp, #40]	; 0x28
   1b2b4:	sub	r0, r0, #1
   1b2b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b2bc:	str	r0, [r1]
   1b2c0:	ldr	r0, [sp, #36]	; 0x24
   1b2c4:	sub	sp, fp, #16
   1b2c8:	pop	{r4, r5, r6, sl, fp, pc}
   1b2cc:	push	{fp, lr}
   1b2d0:	mov	fp, sp
   1b2d4:	sub	sp, sp, #8
   1b2d8:	movw	r0, #28988	; 0x713c
   1b2dc:	movt	r0, #3
   1b2e0:	ldr	r0, [r0]
   1b2e4:	str	r0, [sp, #4]
   1b2e8:	movw	r0, #1
   1b2ec:	str	r0, [sp]
   1b2f0:	ldr	r0, [sp]
   1b2f4:	movw	r1, #28992	; 0x7140
   1b2f8:	movt	r1, #3
   1b2fc:	ldr	r1, [r1]
   1b300:	cmp	r0, r1
   1b304:	bge	1b32c <__assert_fail@plt+0x9de4>
   1b308:	ldr	r0, [sp, #4]
   1b30c:	ldr	r1, [sp]
   1b310:	add	r0, r0, r1, lsl #3
   1b314:	ldr	r0, [r0, #4]
   1b318:	bl	1398c <__assert_fail@plt+0x2444>
   1b31c:	ldr	r0, [sp]
   1b320:	add	r0, r0, #1
   1b324:	str	r0, [sp]
   1b328:	b	1b2f0 <__assert_fail@plt+0x9da8>
   1b32c:	ldr	r0, [sp, #4]
   1b330:	ldr	r0, [r0, #4]
   1b334:	movw	r1, #29180	; 0x71fc
   1b338:	movt	r1, #3
   1b33c:	cmp	r0, r1
   1b340:	beq	1b36c <__assert_fail@plt+0x9e24>
   1b344:	ldr	r0, [sp, #4]
   1b348:	ldr	r0, [r0, #4]
   1b34c:	bl	1398c <__assert_fail@plt+0x2444>
   1b350:	movw	r0, #256	; 0x100
   1b354:	movw	lr, #28996	; 0x7144
   1b358:	movt	lr, #3
   1b35c:	str	r0, [lr]
   1b360:	movw	r0, #29180	; 0x71fc
   1b364:	movt	r0, #3
   1b368:	str	r0, [lr, #4]
   1b36c:	ldr	r0, [sp, #4]
   1b370:	movw	r1, #28996	; 0x7144
   1b374:	movt	r1, #3
   1b378:	cmp	r0, r1
   1b37c:	beq	1b39c <__assert_fail@plt+0x9e54>
   1b380:	ldr	r0, [sp, #4]
   1b384:	bl	1398c <__assert_fail@plt+0x2444>
   1b388:	movw	r0, #28988	; 0x713c
   1b38c:	movt	r0, #3
   1b390:	movw	lr, #28996	; 0x7144
   1b394:	movt	lr, #3
   1b398:	str	lr, [r0]
   1b39c:	movw	r0, #28992	; 0x7140
   1b3a0:	movt	r0, #3
   1b3a4:	movw	r1, #1
   1b3a8:	str	r1, [r0]
   1b3ac:	mov	sp, fp
   1b3b0:	pop	{fp, pc}
   1b3b4:	push	{fp, lr}
   1b3b8:	mov	fp, sp
   1b3bc:	sub	sp, sp, #8
   1b3c0:	str	r0, [sp, #4]
   1b3c4:	str	r1, [sp]
   1b3c8:	ldr	r0, [sp, #4]
   1b3cc:	ldr	r1, [sp]
   1b3d0:	mvn	r2, #0
   1b3d4:	movw	r3, #29132	; 0x71cc
   1b3d8:	movt	r3, #3
   1b3dc:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b3e0:	mov	sp, fp
   1b3e4:	pop	{fp, pc}
   1b3e8:	push	{r4, r5, r6, sl, fp, lr}
   1b3ec:	add	fp, sp, #16
   1b3f0:	sub	sp, sp, #88	; 0x58
   1b3f4:	str	r0, [fp, #-20]	; 0xffffffec
   1b3f8:	str	r1, [fp, #-24]	; 0xffffffe8
   1b3fc:	str	r2, [fp, #-28]	; 0xffffffe4
   1b400:	str	r3, [fp, #-32]	; 0xffffffe0
   1b404:	bl	11404 <__errno_location@plt>
   1b408:	ldr	r1, [pc, #676]	; 1b6b4 <__assert_fail@plt+0xa16c>
   1b40c:	ldr	r0, [r0]
   1b410:	str	r0, [fp, #-36]	; 0xffffffdc
   1b414:	movw	r0, #28988	; 0x713c
   1b418:	movt	r0, #3
   1b41c:	ldr	r0, [r0]
   1b420:	str	r0, [fp, #-40]	; 0xffffffd8
   1b424:	str	r1, [fp, #-44]	; 0xffffffd4
   1b428:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b42c:	movw	r1, #0
   1b430:	cmp	r1, r0
   1b434:	bgt	1b448 <__assert_fail@plt+0x9f00>
   1b438:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b43c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b440:	cmp	r0, r1
   1b444:	blt	1b44c <__assert_fail@plt+0x9f04>
   1b448:	bl	11500 <abort@plt>
   1b44c:	movw	r0, #28992	; 0x7140
   1b450:	movt	r0, #3
   1b454:	ldr	r0, [r0]
   1b458:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b45c:	cmp	r0, r1
   1b460:	bgt	1b558 <__assert_fail@plt+0xa010>
   1b464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b468:	movw	r1, #28996	; 0x7144
   1b46c:	movt	r1, #3
   1b470:	cmp	r0, r1
   1b474:	movw	r0, #0
   1b478:	moveq	r0, #1
   1b47c:	and	r0, r0, #1
   1b480:	strb	r0, [fp, #-45]	; 0xffffffd3
   1b484:	movw	r0, #28992	; 0x7140
   1b488:	movt	r0, #3
   1b48c:	ldr	r0, [r0]
   1b490:	str	r0, [sp, #52]	; 0x34
   1b494:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b498:	tst	r0, #1
   1b49c:	beq	1b4ac <__assert_fail@plt+0x9f64>
   1b4a0:	movw	r0, #0
   1b4a4:	str	r0, [sp, #32]
   1b4a8:	b	1b4b4 <__assert_fail@plt+0x9f6c>
   1b4ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b4b0:	str	r0, [sp, #32]
   1b4b4:	ldr	r0, [sp, #32]
   1b4b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b4bc:	movw	r2, #28992	; 0x7140
   1b4c0:	movt	r2, #3
   1b4c4:	ldr	r2, [r2]
   1b4c8:	sub	r1, r1, r2
   1b4cc:	add	r2, r1, #1
   1b4d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b4d4:	add	r1, sp, #52	; 0x34
   1b4d8:	movw	ip, #8
   1b4dc:	str	ip, [sp]
   1b4e0:	bl	1cf60 <__assert_fail@plt+0xba18>
   1b4e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b4e8:	movw	r1, #28988	; 0x713c
   1b4ec:	movt	r1, #3
   1b4f0:	str	r0, [r1]
   1b4f4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b4f8:	tst	r0, #1
   1b4fc:	beq	1b51c <__assert_fail@plt+0x9fd4>
   1b500:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b504:	movw	r1, #28996	; 0x7144
   1b508:	movt	r1, #3
   1b50c:	ldr	r2, [r1]
   1b510:	str	r2, [r0]
   1b514:	ldr	r1, [r1, #4]
   1b518:	str	r1, [r0, #4]
   1b51c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b520:	movw	r1, #28992	; 0x7140
   1b524:	movt	r1, #3
   1b528:	ldr	r1, [r1]
   1b52c:	add	r0, r0, r1, lsl #3
   1b530:	ldr	r2, [sp, #52]	; 0x34
   1b534:	sub	r1, r2, r1
   1b538:	lsl	r2, r1, #3
   1b53c:	movw	r1, #0
   1b540:	and	r1, r1, #255	; 0xff
   1b544:	bl	1141c <memset@plt>
   1b548:	ldr	r0, [sp, #52]	; 0x34
   1b54c:	movw	r1, #28992	; 0x7140
   1b550:	movt	r1, #3
   1b554:	str	r0, [r1]
   1b558:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b55c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b560:	ldr	r0, [r0, r1, lsl #3]
   1b564:	str	r0, [sp, #48]	; 0x30
   1b568:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b56c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b570:	add	r0, r0, r1, lsl #3
   1b574:	ldr	r0, [r0, #4]
   1b578:	str	r0, [sp, #44]	; 0x2c
   1b57c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b580:	ldr	r0, [r0, #4]
   1b584:	orr	r0, r0, #1
   1b588:	str	r0, [sp, #40]	; 0x28
   1b58c:	ldr	r0, [sp, #44]	; 0x2c
   1b590:	ldr	r1, [sp, #48]	; 0x30
   1b594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b59c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b5a0:	ldr	ip, [ip]
   1b5a4:	ldr	lr, [sp, #40]	; 0x28
   1b5a8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b5ac:	add	r4, r4, #8
   1b5b0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b5b4:	ldr	r5, [r5, #40]	; 0x28
   1b5b8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b5bc:	ldr	r6, [r6, #44]	; 0x2c
   1b5c0:	str	ip, [sp]
   1b5c4:	str	lr, [sp, #4]
   1b5c8:	str	r4, [sp, #8]
   1b5cc:	str	r5, [sp, #12]
   1b5d0:	str	r6, [sp, #16]
   1b5d4:	bl	199e0 <__assert_fail@plt+0x8498>
   1b5d8:	str	r0, [sp, #36]	; 0x24
   1b5dc:	ldr	r0, [sp, #48]	; 0x30
   1b5e0:	ldr	r1, [sp, #36]	; 0x24
   1b5e4:	cmp	r0, r1
   1b5e8:	bhi	1b694 <__assert_fail@plt+0xa14c>
   1b5ec:	ldr	r0, [sp, #36]	; 0x24
   1b5f0:	add	r0, r0, #1
   1b5f4:	str	r0, [sp, #48]	; 0x30
   1b5f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b5fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b600:	add	r1, r1, r2, lsl #3
   1b604:	str	r0, [r1]
   1b608:	ldr	r0, [sp, #44]	; 0x2c
   1b60c:	movw	r1, #29180	; 0x71fc
   1b610:	movt	r1, #3
   1b614:	cmp	r0, r1
   1b618:	beq	1b624 <__assert_fail@plt+0xa0dc>
   1b61c:	ldr	r0, [sp, #44]	; 0x2c
   1b620:	bl	1398c <__assert_fail@plt+0x2444>
   1b624:	ldr	r0, [sp, #48]	; 0x30
   1b628:	bl	1cd24 <__assert_fail@plt+0xb7dc>
   1b62c:	mov	lr, r0
   1b630:	str	r0, [sp, #44]	; 0x2c
   1b634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b638:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b63c:	add	r0, r0, r1, lsl #3
   1b640:	str	lr, [r0, #4]
   1b644:	ldr	r0, [sp, #44]	; 0x2c
   1b648:	ldr	r1, [sp, #48]	; 0x30
   1b64c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b650:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b654:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1b658:	ldr	lr, [lr]
   1b65c:	ldr	ip, [sp, #40]	; 0x28
   1b660:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b664:	add	r4, r4, #8
   1b668:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b66c:	ldr	r5, [r5, #40]	; 0x28
   1b670:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b674:	ldr	r6, [r6, #44]	; 0x2c
   1b678:	str	lr, [sp]
   1b67c:	str	ip, [sp, #4]
   1b680:	str	r4, [sp, #8]
   1b684:	str	r5, [sp, #12]
   1b688:	str	r6, [sp, #16]
   1b68c:	bl	199e0 <__assert_fail@plt+0x8498>
   1b690:	str	r0, [sp, #28]
   1b694:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b698:	str	r0, [sp, #24]
   1b69c:	bl	11404 <__errno_location@plt>
   1b6a0:	ldr	lr, [sp, #24]
   1b6a4:	str	lr, [r0]
   1b6a8:	ldr	r0, [sp, #44]	; 0x2c
   1b6ac:	sub	sp, fp, #16
   1b6b0:	pop	{r4, r5, r6, sl, fp, pc}
   1b6b4:	svcvc	0x00ffffff
   1b6b8:	push	{fp, lr}
   1b6bc:	mov	fp, sp
   1b6c0:	sub	sp, sp, #16
   1b6c4:	str	r0, [fp, #-4]
   1b6c8:	str	r1, [sp, #8]
   1b6cc:	str	r2, [sp, #4]
   1b6d0:	ldr	r0, [fp, #-4]
   1b6d4:	ldr	r1, [sp, #8]
   1b6d8:	ldr	r2, [sp, #4]
   1b6dc:	movw	r3, #29132	; 0x71cc
   1b6e0:	movt	r3, #3
   1b6e4:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b6e8:	mov	sp, fp
   1b6ec:	pop	{fp, pc}
   1b6f0:	push	{fp, lr}
   1b6f4:	mov	fp, sp
   1b6f8:	sub	sp, sp, #8
   1b6fc:	str	r0, [sp, #4]
   1b700:	ldr	r1, [sp, #4]
   1b704:	movw	r0, #0
   1b708:	bl	1b3b4 <__assert_fail@plt+0x9e6c>
   1b70c:	mov	sp, fp
   1b710:	pop	{fp, pc}
   1b714:	push	{fp, lr}
   1b718:	mov	fp, sp
   1b71c:	sub	sp, sp, #8
   1b720:	str	r0, [sp, #4]
   1b724:	str	r1, [sp]
   1b728:	ldr	r1, [sp, #4]
   1b72c:	ldr	r2, [sp]
   1b730:	movw	r0, #0
   1b734:	bl	1b6b8 <__assert_fail@plt+0xa170>
   1b738:	mov	sp, fp
   1b73c:	pop	{fp, pc}
   1b740:	push	{fp, lr}
   1b744:	mov	fp, sp
   1b748:	sub	sp, sp, #64	; 0x40
   1b74c:	str	r0, [fp, #-4]
   1b750:	str	r1, [fp, #-8]
   1b754:	str	r2, [fp, #-12]
   1b758:	ldr	r1, [fp, #-8]
   1b75c:	add	r0, sp, #4
   1b760:	bl	1b780 <__assert_fail@plt+0xa238>
   1b764:	ldr	r0, [fp, #-4]
   1b768:	ldr	r1, [fp, #-12]
   1b76c:	mvn	r2, #0
   1b770:	add	r3, sp, #4
   1b774:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b778:	mov	sp, fp
   1b77c:	pop	{fp, pc}
   1b780:	push	{fp, lr}
   1b784:	mov	fp, sp
   1b788:	sub	sp, sp, #8
   1b78c:	str	r1, [sp, #4]
   1b790:	mov	r1, r0
   1b794:	str	r0, [sp]
   1b798:	mov	r0, r1
   1b79c:	movw	r1, #0
   1b7a0:	and	r1, r1, #255	; 0xff
   1b7a4:	movw	r2, #48	; 0x30
   1b7a8:	bl	1141c <memset@plt>
   1b7ac:	ldr	r0, [sp, #4]
   1b7b0:	cmp	r0, #10
   1b7b4:	bne	1b7bc <__assert_fail@plt+0xa274>
   1b7b8:	bl	11500 <abort@plt>
   1b7bc:	ldr	r0, [sp, #4]
   1b7c0:	ldr	r1, [sp]
   1b7c4:	str	r0, [r1]
   1b7c8:	mov	sp, fp
   1b7cc:	pop	{fp, pc}
   1b7d0:	push	{fp, lr}
   1b7d4:	mov	fp, sp
   1b7d8:	sub	sp, sp, #64	; 0x40
   1b7dc:	str	r0, [fp, #-4]
   1b7e0:	str	r1, [fp, #-8]
   1b7e4:	str	r2, [fp, #-12]
   1b7e8:	str	r3, [fp, #-16]
   1b7ec:	ldr	r1, [fp, #-8]
   1b7f0:	mov	r0, sp
   1b7f4:	bl	1b780 <__assert_fail@plt+0xa238>
   1b7f8:	ldr	r0, [fp, #-4]
   1b7fc:	ldr	r1, [fp, #-12]
   1b800:	ldr	r2, [fp, #-16]
   1b804:	mov	r3, sp
   1b808:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b80c:	mov	sp, fp
   1b810:	pop	{fp, pc}
   1b814:	push	{fp, lr}
   1b818:	mov	fp, sp
   1b81c:	sub	sp, sp, #8
   1b820:	str	r0, [sp, #4]
   1b824:	str	r1, [sp]
   1b828:	ldr	r1, [sp, #4]
   1b82c:	ldr	r2, [sp]
   1b830:	movw	r0, #0
   1b834:	bl	1b740 <__assert_fail@plt+0xa1f8>
   1b838:	mov	sp, fp
   1b83c:	pop	{fp, pc}
   1b840:	push	{fp, lr}
   1b844:	mov	fp, sp
   1b848:	sub	sp, sp, #16
   1b84c:	str	r0, [fp, #-4]
   1b850:	str	r1, [sp, #8]
   1b854:	str	r2, [sp, #4]
   1b858:	ldr	r1, [fp, #-4]
   1b85c:	ldr	r2, [sp, #8]
   1b860:	ldr	r3, [sp, #4]
   1b864:	movw	r0, #0
   1b868:	bl	1b7d0 <__assert_fail@plt+0xa288>
   1b86c:	mov	sp, fp
   1b870:	pop	{fp, pc}
   1b874:	push	{fp, lr}
   1b878:	mov	fp, sp
   1b87c:	sub	sp, sp, #72	; 0x48
   1b880:	movw	r3, #29132	; 0x71cc
   1b884:	movt	r3, #3
   1b888:	str	r0, [fp, #-4]
   1b88c:	str	r1, [fp, #-8]
   1b890:	strb	r2, [fp, #-9]
   1b894:	add	r0, sp, #12
   1b898:	mov	r1, r0
   1b89c:	str	r0, [sp, #8]
   1b8a0:	mov	r0, r1
   1b8a4:	mov	r1, r3
   1b8a8:	movw	r2, #48	; 0x30
   1b8ac:	bl	1129c <memcpy@plt>
   1b8b0:	ldr	r0, [sp, #8]
   1b8b4:	ldrb	r1, [fp, #-9]
   1b8b8:	movw	r2, #1
   1b8bc:	bl	19784 <__assert_fail@plt+0x823c>
   1b8c0:	ldr	r1, [fp, #-4]
   1b8c4:	ldr	r2, [fp, #-8]
   1b8c8:	movw	r3, #0
   1b8cc:	str	r0, [sp, #4]
   1b8d0:	mov	r0, r3
   1b8d4:	add	r3, sp, #12
   1b8d8:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b8dc:	mov	sp, fp
   1b8e0:	pop	{fp, pc}
   1b8e4:	push	{fp, lr}
   1b8e8:	mov	fp, sp
   1b8ec:	sub	sp, sp, #8
   1b8f0:	str	r0, [sp, #4]
   1b8f4:	strb	r1, [sp, #3]
   1b8f8:	ldr	r0, [sp, #4]
   1b8fc:	mvn	r1, #0
   1b900:	ldrb	r2, [sp, #3]
   1b904:	bl	1b874 <__assert_fail@plt+0xa32c>
   1b908:	mov	sp, fp
   1b90c:	pop	{fp, pc}
   1b910:	push	{fp, lr}
   1b914:	mov	fp, sp
   1b918:	sub	sp, sp, #8
   1b91c:	str	r0, [sp, #4]
   1b920:	ldr	r0, [sp, #4]
   1b924:	movw	r1, #58	; 0x3a
   1b928:	and	r1, r1, #255	; 0xff
   1b92c:	bl	1b8e4 <__assert_fail@plt+0xa39c>
   1b930:	mov	sp, fp
   1b934:	pop	{fp, pc}
   1b938:	push	{fp, lr}
   1b93c:	mov	fp, sp
   1b940:	sub	sp, sp, #8
   1b944:	str	r0, [sp, #4]
   1b948:	str	r1, [sp]
   1b94c:	ldr	r0, [sp, #4]
   1b950:	ldr	r1, [sp]
   1b954:	movw	r2, #58	; 0x3a
   1b958:	and	r2, r2, #255	; 0xff
   1b95c:	bl	1b874 <__assert_fail@plt+0xa32c>
   1b960:	mov	sp, fp
   1b964:	pop	{fp, pc}
   1b968:	push	{fp, lr}
   1b96c:	mov	fp, sp
   1b970:	sub	sp, sp, #120	; 0x78
   1b974:	str	r0, [fp, #-4]
   1b978:	str	r1, [fp, #-8]
   1b97c:	str	r2, [fp, #-12]
   1b980:	ldr	r1, [fp, #-8]
   1b984:	add	r0, sp, #12
   1b988:	bl	1b780 <__assert_fail@plt+0xa238>
   1b98c:	add	r0, sp, #60	; 0x3c
   1b990:	mov	r1, r0
   1b994:	add	r2, sp, #12
   1b998:	str	r0, [sp, #8]
   1b99c:	mov	r0, r1
   1b9a0:	mov	r1, r2
   1b9a4:	movw	r2, #48	; 0x30
   1b9a8:	bl	1129c <memcpy@plt>
   1b9ac:	ldr	r0, [sp, #8]
   1b9b0:	movw	r1, #58	; 0x3a
   1b9b4:	and	r1, r1, #255	; 0xff
   1b9b8:	movw	r2, #1
   1b9bc:	bl	19784 <__assert_fail@plt+0x823c>
   1b9c0:	ldr	r1, [fp, #-4]
   1b9c4:	ldr	r2, [fp, #-12]
   1b9c8:	str	r0, [sp, #4]
   1b9cc:	mov	r0, r1
   1b9d0:	mov	r1, r2
   1b9d4:	mvn	r2, #0
   1b9d8:	add	r3, sp, #60	; 0x3c
   1b9dc:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1b9e0:	mov	sp, fp
   1b9e4:	pop	{fp, pc}
   1b9e8:	push	{fp, lr}
   1b9ec:	mov	fp, sp
   1b9f0:	sub	sp, sp, #24
   1b9f4:	str	r0, [fp, #-4]
   1b9f8:	str	r1, [fp, #-8]
   1b9fc:	str	r2, [sp, #12]
   1ba00:	str	r3, [sp, #8]
   1ba04:	ldr	r0, [fp, #-4]
   1ba08:	ldr	r1, [fp, #-8]
   1ba0c:	ldr	r2, [sp, #12]
   1ba10:	ldr	r3, [sp, #8]
   1ba14:	mvn	ip, #0
   1ba18:	str	ip, [sp]
   1ba1c:	bl	1ba28 <__assert_fail@plt+0xa4e0>
   1ba20:	mov	sp, fp
   1ba24:	pop	{fp, pc}
   1ba28:	push	{fp, lr}
   1ba2c:	mov	fp, sp
   1ba30:	sub	sp, sp, #72	; 0x48
   1ba34:	ldr	ip, [fp, #8]
   1ba38:	movw	lr, #29132	; 0x71cc
   1ba3c:	movt	lr, #3
   1ba40:	str	r0, [fp, #-4]
   1ba44:	str	r1, [fp, #-8]
   1ba48:	str	r2, [fp, #-12]
   1ba4c:	str	r3, [fp, #-16]
   1ba50:	add	r0, sp, #8
   1ba54:	mov	r1, r0
   1ba58:	str	r0, [sp, #4]
   1ba5c:	mov	r0, r1
   1ba60:	mov	r1, lr
   1ba64:	movw	r2, #48	; 0x30
   1ba68:	str	ip, [sp]
   1ba6c:	bl	1129c <memcpy@plt>
   1ba70:	ldr	r1, [fp, #-8]
   1ba74:	ldr	r2, [fp, #-12]
   1ba78:	ldr	r0, [sp, #4]
   1ba7c:	bl	19884 <__assert_fail@plt+0x833c>
   1ba80:	ldr	r0, [fp, #-4]
   1ba84:	ldr	r1, [fp, #-16]
   1ba88:	ldr	r2, [fp, #8]
   1ba8c:	add	r3, sp, #8
   1ba90:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1ba94:	mov	sp, fp
   1ba98:	pop	{fp, pc}
   1ba9c:	push	{fp, lr}
   1baa0:	mov	fp, sp
   1baa4:	sub	sp, sp, #16
   1baa8:	str	r0, [fp, #-4]
   1baac:	str	r1, [sp, #8]
   1bab0:	str	r2, [sp, #4]
   1bab4:	ldr	r1, [fp, #-4]
   1bab8:	ldr	r2, [sp, #8]
   1babc:	ldr	r3, [sp, #4]
   1bac0:	movw	r0, #0
   1bac4:	bl	1b9e8 <__assert_fail@plt+0xa4a0>
   1bac8:	mov	sp, fp
   1bacc:	pop	{fp, pc}
   1bad0:	push	{fp, lr}
   1bad4:	mov	fp, sp
   1bad8:	sub	sp, sp, #24
   1badc:	str	r0, [fp, #-4]
   1bae0:	str	r1, [fp, #-8]
   1bae4:	str	r2, [sp, #12]
   1bae8:	str	r3, [sp, #8]
   1baec:	ldr	r1, [fp, #-4]
   1baf0:	ldr	r2, [fp, #-8]
   1baf4:	ldr	r3, [sp, #12]
   1baf8:	ldr	r0, [sp, #8]
   1bafc:	movw	ip, #0
   1bb00:	str	r0, [sp, #4]
   1bb04:	mov	r0, ip
   1bb08:	ldr	ip, [sp, #4]
   1bb0c:	str	ip, [sp]
   1bb10:	bl	1ba28 <__assert_fail@plt+0xa4e0>
   1bb14:	mov	sp, fp
   1bb18:	pop	{fp, pc}
   1bb1c:	push	{fp, lr}
   1bb20:	mov	fp, sp
   1bb24:	sub	sp, sp, #16
   1bb28:	str	r0, [fp, #-4]
   1bb2c:	str	r1, [sp, #8]
   1bb30:	str	r2, [sp, #4]
   1bb34:	ldr	r0, [fp, #-4]
   1bb38:	ldr	r1, [sp, #8]
   1bb3c:	ldr	r2, [sp, #4]
   1bb40:	movw	r3, #29004	; 0x714c
   1bb44:	movt	r3, #3
   1bb48:	bl	1b3e8 <__assert_fail@plt+0x9ea0>
   1bb4c:	mov	sp, fp
   1bb50:	pop	{fp, pc}
   1bb54:	push	{fp, lr}
   1bb58:	mov	fp, sp
   1bb5c:	sub	sp, sp, #8
   1bb60:	str	r0, [sp, #4]
   1bb64:	str	r1, [sp]
   1bb68:	ldr	r1, [sp, #4]
   1bb6c:	ldr	r2, [sp]
   1bb70:	movw	r0, #0
   1bb74:	bl	1bb1c <__assert_fail@plt+0xa5d4>
   1bb78:	mov	sp, fp
   1bb7c:	pop	{fp, pc}
   1bb80:	push	{fp, lr}
   1bb84:	mov	fp, sp
   1bb88:	sub	sp, sp, #8
   1bb8c:	str	r0, [sp, #4]
   1bb90:	str	r1, [sp]
   1bb94:	ldr	r0, [sp, #4]
   1bb98:	ldr	r1, [sp]
   1bb9c:	mvn	r2, #0
   1bba0:	bl	1bb1c <__assert_fail@plt+0xa5d4>
   1bba4:	mov	sp, fp
   1bba8:	pop	{fp, pc}
   1bbac:	push	{fp, lr}
   1bbb0:	mov	fp, sp
   1bbb4:	sub	sp, sp, #8
   1bbb8:	str	r0, [sp, #4]
   1bbbc:	ldr	r1, [sp, #4]
   1bbc0:	movw	r0, #0
   1bbc4:	bl	1bb80 <__assert_fail@plt+0xa638>
   1bbc8:	mov	sp, fp
   1bbcc:	pop	{fp, pc}
   1bbd0:	push	{fp, lr}
   1bbd4:	mov	fp, sp
   1bbd8:	sub	sp, sp, #24
   1bbdc:	str	r0, [fp, #-8]
   1bbe0:	str	r1, [sp, #12]
   1bbe4:	ldr	r0, [fp, #-8]
   1bbe8:	bl	113b0 <gettext@plt>
   1bbec:	str	r0, [sp, #8]
   1bbf0:	ldr	r0, [sp, #8]
   1bbf4:	ldr	r1, [fp, #-8]
   1bbf8:	cmp	r0, r1
   1bbfc:	beq	1bc0c <__assert_fail@plt+0xa6c4>
   1bc00:	ldr	r0, [sp, #8]
   1bc04:	str	r0, [fp, #-4]
   1bc08:	b	1bcd8 <__assert_fail@plt+0xa790>
   1bc0c:	bl	229f4 <__assert_fail@plt+0x114ac>
   1bc10:	str	r0, [sp, #4]
   1bc14:	ldr	r0, [sp, #4]
   1bc18:	movw	r1, #23538	; 0x5bf2
   1bc1c:	movt	r1, #2
   1bc20:	bl	21d9c <__assert_fail@plt+0x10854>
   1bc24:	cmp	r0, #0
   1bc28:	bne	1bc60 <__assert_fail@plt+0xa718>
   1bc2c:	ldr	r0, [fp, #-8]
   1bc30:	ldrb	r0, [r0]
   1bc34:	cmp	r0, #96	; 0x60
   1bc38:	movw	r0, #0
   1bc3c:	moveq	r0, #1
   1bc40:	tst	r0, #1
   1bc44:	movw	r0, #23548	; 0x5bfc
   1bc48:	movt	r0, #2
   1bc4c:	movw	r1, #23544	; 0x5bf8
   1bc50:	movt	r1, #2
   1bc54:	movne	r0, r1
   1bc58:	str	r0, [fp, #-4]
   1bc5c:	b	1bcd8 <__assert_fail@plt+0xa790>
   1bc60:	ldr	r0, [sp, #4]
   1bc64:	movw	r1, #23552	; 0x5c00
   1bc68:	movt	r1, #2
   1bc6c:	bl	21d9c <__assert_fail@plt+0x10854>
   1bc70:	cmp	r0, #0
   1bc74:	bne	1bcac <__assert_fail@plt+0xa764>
   1bc78:	ldr	r0, [fp, #-8]
   1bc7c:	ldrb	r0, [r0]
   1bc80:	cmp	r0, #96	; 0x60
   1bc84:	movw	r0, #0
   1bc88:	moveq	r0, #1
   1bc8c:	tst	r0, #1
   1bc90:	movw	r0, #23564	; 0x5c0c
   1bc94:	movt	r0, #2
   1bc98:	movw	r1, #23560	; 0x5c08
   1bc9c:	movt	r1, #2
   1bca0:	movne	r0, r1
   1bca4:	str	r0, [fp, #-4]
   1bca8:	b	1bcd8 <__assert_fail@plt+0xa790>
   1bcac:	ldr	r0, [sp, #12]
   1bcb0:	cmp	r0, #9
   1bcb4:	movw	r0, #0
   1bcb8:	moveq	r0, #1
   1bcbc:	tst	r0, #1
   1bcc0:	movw	r0, #23536	; 0x5bf0
   1bcc4:	movt	r0, #2
   1bcc8:	movw	r1, #23532	; 0x5bec
   1bccc:	movt	r1, #2
   1bcd0:	movne	r0, r1
   1bcd4:	str	r0, [fp, #-4]
   1bcd8:	ldr	r0, [fp, #-4]
   1bcdc:	mov	sp, fp
   1bce0:	pop	{fp, pc}
   1bce4:	push	{fp, lr}
   1bce8:	mov	fp, sp
   1bcec:	sub	sp, sp, #112	; 0x70
   1bcf0:	str	r0, [fp, #-8]
   1bcf4:	movw	r0, #24427	; 0x5f6b
   1bcf8:	movt	r0, #2
   1bcfc:	mov	r1, sp
   1bd00:	bl	249d4 <__assert_fail@plt+0x1348c>
   1bd04:	cmp	r0, #0
   1bd08:	beq	1bd18 <__assert_fail@plt+0xa7d0>
   1bd0c:	movw	r0, #0
   1bd10:	str	r0, [fp, #-4]
   1bd14:	b	1bd48 <__assert_fail@plt+0xa800>
   1bd18:	ldr	r0, [sp, #96]	; 0x60
   1bd1c:	ldr	r1, [sp, #100]	; 0x64
   1bd20:	ldr	r2, [fp, #-8]
   1bd24:	str	r1, [r2, #4]
   1bd28:	str	r0, [r2]
   1bd2c:	ldr	r0, [sp]
   1bd30:	ldr	r1, [sp, #4]
   1bd34:	ldr	r2, [fp, #-8]
   1bd38:	str	r1, [r2, #12]
   1bd3c:	str	r0, [r2, #8]
   1bd40:	ldr	r0, [fp, #-8]
   1bd44:	str	r0, [fp, #-4]
   1bd48:	ldr	r0, [fp, #-4]
   1bd4c:	mov	sp, fp
   1bd50:	pop	{fp, pc}
   1bd54:	push	{fp, lr}
   1bd58:	mov	fp, sp
   1bd5c:	sub	sp, sp, #24
   1bd60:	str	r0, [fp, #-4]
   1bd64:	ldr	r0, [fp, #-4]
   1bd68:	movw	r1, #0
   1bd6c:	cmp	r1, r0
   1bd70:	bgt	1bdc0 <__assert_fail@plt+0xa878>
   1bd74:	ldr	r0, [fp, #-4]
   1bd78:	cmp	r0, #2
   1bd7c:	bgt	1bdc0 <__assert_fail@plt+0xa878>
   1bd80:	ldr	r0, [fp, #-4]
   1bd84:	bl	23e90 <__assert_fail@plt+0x12948>
   1bd88:	str	r0, [fp, #-8]
   1bd8c:	bl	11404 <__errno_location@plt>
   1bd90:	ldr	r0, [r0]
   1bd94:	str	r0, [sp, #12]
   1bd98:	ldr	r0, [fp, #-4]
   1bd9c:	bl	1150c <close@plt>
   1bda0:	ldr	lr, [sp, #12]
   1bda4:	str	r0, [sp, #8]
   1bda8:	str	lr, [sp, #4]
   1bdac:	bl	11404 <__errno_location@plt>
   1bdb0:	ldr	lr, [sp, #4]
   1bdb4:	str	lr, [r0]
   1bdb8:	ldr	r0, [fp, #-8]
   1bdbc:	str	r0, [fp, #-4]
   1bdc0:	ldr	r0, [fp, #-4]
   1bdc4:	mov	sp, fp
   1bdc8:	pop	{fp, pc}
   1bdcc:	push	{fp, lr}
   1bdd0:	mov	fp, sp
   1bdd4:	sub	sp, sp, #48	; 0x30
   1bdd8:	ldr	ip, [fp, #8]
   1bddc:	str	r0, [fp, #-4]
   1bde0:	str	r1, [fp, #-8]
   1bde4:	str	r2, [fp, #-12]
   1bde8:	str	r3, [fp, #-16]
   1bdec:	ldr	r0, [fp, #-12]
   1bdf0:	movw	r1, #0
   1bdf4:	cmp	r0, r1
   1bdf8:	str	ip, [sp, #16]
   1bdfc:	beq	1be14 <__assert_fail@plt+0xa8cc>
   1be00:	ldr	r0, [fp, #-4]
   1be04:	movw	r1, #58	; 0x3a
   1be08:	bl	113d4 <strchr@plt>
   1be0c:	str	r0, [sp, #12]
   1be10:	b	1be20 <__assert_fail@plt+0xa8d8>
   1be14:	movw	r0, #0
   1be18:	str	r0, [sp, #12]
   1be1c:	b	1be20 <__assert_fail@plt+0xa8d8>
   1be20:	ldr	r0, [sp, #12]
   1be24:	str	r0, [fp, #-20]	; 0xffffffec
   1be28:	ldr	r0, [fp, #-4]
   1be2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1be30:	ldr	r2, [fp, #-8]
   1be34:	ldr	r3, [fp, #-12]
   1be38:	ldr	ip, [fp, #-16]
   1be3c:	ldr	lr, [fp, #8]
   1be40:	str	ip, [sp]
   1be44:	str	lr, [sp, #4]
   1be48:	bl	1bee8 <__assert_fail@plt+0xa9a0>
   1be4c:	str	r0, [sp, #24]
   1be50:	ldr	r0, [fp, #-12]
   1be54:	movw	r1, #0
   1be58:	cmp	r0, r1
   1be5c:	beq	1bedc <__assert_fail@plt+0xa994>
   1be60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be64:	movw	r1, #0
   1be68:	cmp	r0, r1
   1be6c:	bne	1bedc <__assert_fail@plt+0xa994>
   1be70:	ldr	r0, [sp, #24]
   1be74:	movw	r1, #0
   1be78:	cmp	r0, r1
   1be7c:	beq	1bedc <__assert_fail@plt+0xa994>
   1be80:	ldr	r0, [fp, #-4]
   1be84:	movw	r1, #46	; 0x2e
   1be88:	bl	113d4 <strchr@plt>
   1be8c:	str	r0, [sp, #20]
   1be90:	ldr	r0, [sp, #20]
   1be94:	movw	r1, #0
   1be98:	cmp	r0, r1
   1be9c:	beq	1bed8 <__assert_fail@plt+0xa990>
   1bea0:	ldr	r0, [fp, #-4]
   1bea4:	ldr	r1, [sp, #20]
   1bea8:	ldr	r2, [fp, #-8]
   1beac:	ldr	r3, [fp, #-12]
   1beb0:	ldr	ip, [fp, #-16]
   1beb4:	ldr	lr, [fp, #8]
   1beb8:	str	ip, [sp]
   1bebc:	str	lr, [sp, #4]
   1bec0:	bl	1bee8 <__assert_fail@plt+0xa9a0>
   1bec4:	movw	r1, #0
   1bec8:	cmp	r0, r1
   1becc:	bne	1bed8 <__assert_fail@plt+0xa990>
   1bed0:	movw	r0, #0
   1bed4:	str	r0, [sp, #24]
   1bed8:	b	1bedc <__assert_fail@plt+0xa994>
   1bedc:	ldr	r0, [sp, #24]
   1bee0:	mov	sp, fp
   1bee4:	pop	{fp, pc}
   1bee8:	push	{fp, lr}
   1beec:	mov	fp, sp
   1bef0:	sub	sp, sp, #128	; 0x80
   1bef4:	ldr	ip, [fp, #12]
   1bef8:	ldr	lr, [fp, #8]
   1befc:	str	r0, [fp, #-4]
   1bf00:	str	r1, [fp, #-8]
   1bf04:	str	r2, [fp, #-12]
   1bf08:	str	r3, [fp, #-16]
   1bf0c:	movw	r0, #0
   1bf10:	str	r0, [fp, #-40]	; 0xffffffd8
   1bf14:	ldr	r1, [fp, #-12]
   1bf18:	ldr	r1, [r1]
   1bf1c:	str	r1, [fp, #-44]	; 0xffffffd4
   1bf20:	ldr	r1, [fp, #-16]
   1bf24:	cmp	r1, r0
   1bf28:	str	lr, [sp, #36]	; 0x24
   1bf2c:	str	ip, [sp, #32]
   1bf30:	beq	1bf44 <__assert_fail@plt+0xa9fc>
   1bf34:	ldr	r0, [fp, #-16]
   1bf38:	ldr	r0, [r0]
   1bf3c:	str	r0, [sp, #28]
   1bf40:	b	1bf50 <__assert_fail@plt+0xaa08>
   1bf44:	mvn	r0, #0
   1bf48:	str	r0, [sp, #28]
   1bf4c:	b	1bf50 <__assert_fail@plt+0xaa08>
   1bf50:	ldr	r0, [sp, #28]
   1bf54:	str	r0, [fp, #-48]	; 0xffffffd0
   1bf58:	movw	r0, #0
   1bf5c:	str	r0, [fp, #-20]	; 0xffffffec
   1bf60:	ldr	r1, [fp, #8]
   1bf64:	cmp	r1, r0
   1bf68:	beq	1bf78 <__assert_fail@plt+0xaa30>
   1bf6c:	ldr	r0, [fp, #8]
   1bf70:	movw	r1, #0
   1bf74:	str	r1, [r0]
   1bf78:	ldr	r0, [fp, #12]
   1bf7c:	movw	r1, #0
   1bf80:	cmp	r0, r1
   1bf84:	beq	1bf94 <__assert_fail@plt+0xaa4c>
   1bf88:	ldr	r0, [fp, #12]
   1bf8c:	movw	r1, #0
   1bf90:	str	r1, [r0]
   1bf94:	movw	r0, #0
   1bf98:	str	r0, [fp, #-32]	; 0xffffffe0
   1bf9c:	ldr	r1, [fp, #-8]
   1bfa0:	cmp	r1, r0
   1bfa4:	bne	1bfc8 <__assert_fail@plt+0xaa80>
   1bfa8:	ldr	r0, [fp, #-4]
   1bfac:	ldrsb	r0, [r0]
   1bfb0:	cmp	r0, #0
   1bfb4:	beq	1bfc4 <__assert_fail@plt+0xaa7c>
   1bfb8:	ldr	r0, [fp, #-4]
   1bfbc:	bl	1fa50 <__assert_fail@plt+0xe508>
   1bfc0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bfc4:	b	1c010 <__assert_fail@plt+0xaac8>
   1bfc8:	ldr	r0, [fp, #-8]
   1bfcc:	ldr	r1, [fp, #-4]
   1bfd0:	sub	r0, r0, r1
   1bfd4:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bfdc:	cmp	r0, #0
   1bfe0:	beq	1c00c <__assert_fail@plt+0xaac4>
   1bfe4:	ldr	r0, [fp, #-4]
   1bfe8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bfec:	add	r1, r1, #1
   1bff0:	bl	1f9c0 <__assert_fail@plt+0xe478>
   1bff4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bffc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c000:	add	r0, r0, r1
   1c004:	movw	r1, #0
   1c008:	strb	r1, [r0]
   1c00c:	b	1c010 <__assert_fail@plt+0xaac8>
   1c010:	ldr	r0, [fp, #-8]
   1c014:	movw	r1, #0
   1c018:	cmp	r0, r1
   1c01c:	beq	1c030 <__assert_fail@plt+0xaae8>
   1c020:	ldr	r0, [fp, #-8]
   1c024:	ldrb	r0, [r0, #1]
   1c028:	cmp	r0, #0
   1c02c:	bne	1c03c <__assert_fail@plt+0xaaf4>
   1c030:	movw	r0, #0
   1c034:	str	r0, [sp, #24]
   1c038:	b	1c048 <__assert_fail@plt+0xab00>
   1c03c:	ldr	r0, [fp, #-8]
   1c040:	add	r0, r0, #1
   1c044:	str	r0, [sp, #24]
   1c048:	ldr	r0, [sp, #24]
   1c04c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c050:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c054:	movw	r1, #0
   1c058:	cmp	r0, r1
   1c05c:	beq	1c1f0 <__assert_fail@plt+0xaca8>
   1c060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c064:	ldrb	r0, [r0]
   1c068:	cmp	r0, #43	; 0x2b
   1c06c:	bne	1c07c <__assert_fail@plt+0xab34>
   1c070:	movw	r0, #0
   1c074:	str	r0, [sp, #20]
   1c078:	b	1c088 <__assert_fail@plt+0xab40>
   1c07c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c080:	bl	1123c <getpwnam@plt>
   1c084:	str	r0, [sp, #20]
   1c088:	ldr	r0, [sp, #20]
   1c08c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c094:	movw	r1, #0
   1c098:	cmp	r0, r1
   1c09c:	bne	1c160 <__assert_fail@plt+0xac18>
   1c0a0:	ldr	r0, [fp, #-8]
   1c0a4:	movw	r1, #0
   1c0a8:	cmp	r0, r1
   1c0ac:	movw	r0, #0
   1c0b0:	str	r0, [sp, #16]
   1c0b4:	beq	1c0d0 <__assert_fail@plt+0xab88>
   1c0b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c0bc:	movw	r1, #0
   1c0c0:	cmp	r0, r1
   1c0c4:	movw	r0, #0
   1c0c8:	moveq	r0, #1
   1c0cc:	str	r0, [sp, #16]
   1c0d0:	ldr	r0, [sp, #16]
   1c0d4:	and	r0, r0, #1
   1c0d8:	strb	r0, [fp, #-53]	; 0xffffffcb
   1c0dc:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   1c0e0:	tst	r0, #1
   1c0e4:	beq	1c0fc <__assert_fail@plt+0xabb4>
   1c0e8:	movw	r0, #29060	; 0x7184
   1c0ec:	movt	r0, #3
   1c0f0:	ldr	r0, [r0]
   1c0f4:	str	r0, [fp, #-20]	; 0xffffffec
   1c0f8:	b	1c15c <__assert_fail@plt+0xac14>
   1c0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c100:	movw	r1, #0
   1c104:	movw	r2, #10
   1c108:	sub	r3, fp, #60	; 0x3c
   1c10c:	movw	ip, #20924	; 0x51bc
   1c110:	movt	ip, #2
   1c114:	str	ip, [sp]
   1c118:	bl	1fc00 <__assert_fail@plt+0xe6b8>
   1c11c:	cmp	r0, #0
   1c120:	bne	1c148 <__assert_fail@plt+0xac00>
   1c124:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c128:	cmn	r0, #1
   1c12c:	bhi	1c148 <__assert_fail@plt+0xac00>
   1c130:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c134:	cmn	r0, #1
   1c138:	beq	1c148 <__assert_fail@plt+0xac00>
   1c13c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c140:	str	r0, [fp, #-44]	; 0xffffffd4
   1c144:	b	1c158 <__assert_fail@plt+0xac10>
   1c148:	movw	r0, #29052	; 0x717c
   1c14c:	movt	r0, #3
   1c150:	ldr	r0, [r0]
   1c154:	str	r0, [fp, #-20]	; 0xffffffec
   1c158:	b	1c15c <__assert_fail@plt+0xac14>
   1c15c:	b	1c1ec <__assert_fail@plt+0xaca4>
   1c160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c164:	ldr	r0, [r0, #8]
   1c168:	str	r0, [fp, #-44]	; 0xffffffd4
   1c16c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c170:	movw	r1, #0
   1c174:	cmp	r0, r1
   1c178:	bne	1c1e8 <__assert_fail@plt+0xaca0>
   1c17c:	ldr	r0, [fp, #-8]
   1c180:	movw	r1, #0
   1c184:	cmp	r0, r1
   1c188:	beq	1c1e8 <__assert_fail@plt+0xaca0>
   1c18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c190:	ldr	r0, [r0, #12]
   1c194:	str	r0, [fp, #-48]	; 0xffffffd0
   1c198:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c19c:	bl	11530 <getgrgid@plt>
   1c1a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1c1a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1a8:	movw	lr, #0
   1c1ac:	cmp	r0, lr
   1c1b0:	beq	1c1c4 <__assert_fail@plt+0xac7c>
   1c1b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1b8:	ldr	r0, [r0]
   1c1bc:	str	r0, [sp, #12]
   1c1c0:	b	1c1d8 <__assert_fail@plt+0xac90>
   1c1c4:	add	r2, sp, #47	; 0x2f
   1c1c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c1cc:	mov	r1, #0
   1c1d0:	bl	192c0 <__assert_fail@plt+0x7d78>
   1c1d4:	str	r0, [sp, #12]
   1c1d8:	ldr	r0, [sp, #12]
   1c1dc:	bl	1fa50 <__assert_fail@plt+0xe508>
   1c1e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c1e4:	bl	11218 <endgrent@plt>
   1c1e8:	b	1c1ec <__assert_fail@plt+0xaca4>
   1c1ec:	bl	11464 <endpwent@plt>
   1c1f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c1f4:	movw	r1, #0
   1c1f8:	cmp	r0, r1
   1c1fc:	beq	1c2cc <__assert_fail@plt+0xad84>
   1c200:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c204:	movw	r1, #0
   1c208:	cmp	r0, r1
   1c20c:	bne	1c2cc <__assert_fail@plt+0xad84>
   1c210:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c214:	ldrb	r0, [r0]
   1c218:	cmp	r0, #43	; 0x2b
   1c21c:	bne	1c22c <__assert_fail@plt+0xace4>
   1c220:	movw	r0, #0
   1c224:	str	r0, [sp, #8]
   1c228:	b	1c238 <__assert_fail@plt+0xacf0>
   1c22c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c230:	bl	1153c <getgrnam@plt>
   1c234:	str	r0, [sp, #8]
   1c238:	ldr	r0, [sp, #8]
   1c23c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c244:	movw	r1, #0
   1c248:	cmp	r0, r1
   1c24c:	bne	1c2b0 <__assert_fail@plt+0xad68>
   1c250:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c254:	movw	r1, #0
   1c258:	movw	r2, #10
   1c25c:	add	r3, sp, #40	; 0x28
   1c260:	movw	ip, #20924	; 0x51bc
   1c264:	movt	ip, #2
   1c268:	str	ip, [sp]
   1c26c:	bl	1fc00 <__assert_fail@plt+0xe6b8>
   1c270:	cmp	r0, #0
   1c274:	bne	1c29c <__assert_fail@plt+0xad54>
   1c278:	ldr	r0, [sp, #40]	; 0x28
   1c27c:	cmn	r0, #1
   1c280:	bhi	1c29c <__assert_fail@plt+0xad54>
   1c284:	ldr	r0, [sp, #40]	; 0x28
   1c288:	cmn	r0, #1
   1c28c:	beq	1c29c <__assert_fail@plt+0xad54>
   1c290:	ldr	r0, [sp, #40]	; 0x28
   1c294:	str	r0, [fp, #-48]	; 0xffffffd0
   1c298:	b	1c2ac <__assert_fail@plt+0xad64>
   1c29c:	movw	r0, #29056	; 0x7180
   1c2a0:	movt	r0, #3
   1c2a4:	ldr	r0, [r0]
   1c2a8:	str	r0, [fp, #-20]	; 0xffffffec
   1c2ac:	b	1c2bc <__assert_fail@plt+0xad74>
   1c2b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2b4:	ldr	r0, [r0, #8]
   1c2b8:	str	r0, [fp, #-48]	; 0xffffffd0
   1c2bc:	bl	11218 <endgrent@plt>
   1c2c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c2c4:	bl	1fa50 <__assert_fail@plt+0xe508>
   1c2c8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2d0:	movw	r1, #0
   1c2d4:	cmp	r0, r1
   1c2d8:	bne	1c350 <__assert_fail@plt+0xae08>
   1c2dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c2e0:	ldr	r1, [fp, #-12]
   1c2e4:	str	r0, [r1]
   1c2e8:	ldr	r0, [fp, #-16]
   1c2ec:	movw	r1, #0
   1c2f0:	cmp	r0, r1
   1c2f4:	beq	1c304 <__assert_fail@plt+0xadbc>
   1c2f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c2fc:	ldr	r1, [fp, #-16]
   1c300:	str	r0, [r1]
   1c304:	ldr	r0, [fp, #8]
   1c308:	movw	r1, #0
   1c30c:	cmp	r0, r1
   1c310:	beq	1c328 <__assert_fail@plt+0xade0>
   1c314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c318:	ldr	r1, [fp, #8]
   1c31c:	str	r0, [r1]
   1c320:	movw	r0, #0
   1c324:	str	r0, [fp, #-32]	; 0xffffffe0
   1c328:	ldr	r0, [fp, #12]
   1c32c:	movw	r1, #0
   1c330:	cmp	r0, r1
   1c334:	beq	1c34c <__assert_fail@plt+0xae04>
   1c338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c33c:	ldr	r1, [fp, #12]
   1c340:	str	r0, [r1]
   1c344:	movw	r0, #0
   1c348:	str	r0, [fp, #-40]	; 0xffffffd8
   1c34c:	b	1c350 <__assert_fail@plt+0xae08>
   1c350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c354:	bl	1398c <__assert_fail@plt+0x2444>
   1c358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c35c:	bl	1398c <__assert_fail@plt+0x2444>
   1c360:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c364:	movw	lr, #0
   1c368:	cmp	r0, lr
   1c36c:	beq	1c380 <__assert_fail@plt+0xae38>
   1c370:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c374:	bl	113b0 <gettext@plt>
   1c378:	str	r0, [sp, #4]
   1c37c:	b	1c38c <__assert_fail@plt+0xae44>
   1c380:	movw	r0, #0
   1c384:	str	r0, [sp, #4]
   1c388:	b	1c38c <__assert_fail@plt+0xae44>
   1c38c:	ldr	r0, [sp, #4]
   1c390:	mov	sp, fp
   1c394:	pop	{fp, pc}
   1c398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c39c:	add	fp, sp, #28
   1c3a0:	sub	sp, sp, #260	; 0x104
   1c3a4:	ldr	ip, [fp, #12]
   1c3a8:	ldr	lr, [fp, #8]
   1c3ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1c3b0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c3b4:	str	r2, [fp, #-40]	; 0xffffffd8
   1c3b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1c3bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c3c0:	movw	r1, #0
   1c3c4:	cmp	r0, r1
   1c3c8:	str	lr, [fp, #-48]	; 0xffffffd0
   1c3cc:	str	ip, [fp, #-52]	; 0xffffffcc
   1c3d0:	beq	1c408 <__assert_fail@plt+0xaec0>
   1c3d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c3dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c3e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3e4:	movw	ip, #23692	; 0x5c8c
   1c3e8:	movt	ip, #2
   1c3ec:	str	r1, [fp, #-56]	; 0xffffffc8
   1c3f0:	mov	r1, ip
   1c3f4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1c3f8:	str	ip, [sp]
   1c3fc:	bl	113f8 <fprintf@plt>
   1c400:	str	r0, [fp, #-60]	; 0xffffffc4
   1c404:	b	1c424 <__assert_fail@plt+0xaedc>
   1c408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c40c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c410:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c414:	movw	r1, #23704	; 0x5c98
   1c418:	movt	r1, #2
   1c41c:	bl	113f8 <fprintf@plt>
   1c420:	str	r0, [fp, #-64]	; 0xffffffc0
   1c424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c428:	movw	r1, #23711	; 0x5c9f
   1c42c:	movt	r1, #2
   1c430:	str	r0, [fp, #-68]	; 0xffffffbc
   1c434:	mov	r0, r1
   1c438:	bl	113b0 <gettext@plt>
   1c43c:	movw	r1, #24429	; 0x5f6d
   1c440:	movt	r1, #2
   1c444:	movw	r3, #2022	; 0x7e6
   1c448:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1c44c:	str	r0, [fp, #-72]	; 0xffffffb8
   1c450:	mov	r0, lr
   1c454:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c458:	bl	113f8 <fprintf@plt>
   1c45c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c460:	movw	r2, #20923	; 0x51bb
   1c464:	movt	r2, #2
   1c468:	str	r0, [fp, #-76]	; 0xffffffb4
   1c46c:	mov	r0, r2
   1c470:	str	r2, [fp, #-80]	; 0xffffffb0
   1c474:	bl	11224 <fputs_unlocked@plt>
   1c478:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c47c:	movw	r2, #23715	; 0x5ca3
   1c480:	movt	r2, #2
   1c484:	str	r0, [fp, #-84]	; 0xffffffac
   1c488:	mov	r0, r2
   1c48c:	str	r1, [fp, #-88]	; 0xffffffa8
   1c490:	bl	113b0 <gettext@plt>
   1c494:	movw	r2, #23886	; 0x5d4e
   1c498:	movt	r2, #2
   1c49c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c4a0:	str	r0, [fp, #-92]	; 0xffffffa4
   1c4a4:	mov	r0, r1
   1c4a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c4ac:	bl	113f8 <fprintf@plt>
   1c4b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c4b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c4b8:	str	r0, [fp, #-96]	; 0xffffffa0
   1c4bc:	mov	r0, r2
   1c4c0:	bl	11224 <fputs_unlocked@plt>
   1c4c4:	ldr	r1, [fp, #12]
   1c4c8:	cmp	r1, #9
   1c4cc:	str	r0, [fp, #-100]	; 0xffffff9c
   1c4d0:	str	r1, [fp, #-104]	; 0xffffff98
   1c4d4:	bhi	1c914 <__assert_fail@plt+0xb3cc>
   1c4d8:	add	r0, pc, #8
   1c4dc:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c4e0:	ldr	r0, [r0, r1, lsl #2]
   1c4e4:	mov	pc, r0
   1c4e8:	andeq	ip, r1, r0, lsl r5
   1c4ec:	andeq	ip, r1, r4, lsl r5
   1c4f0:	andeq	ip, r1, r0, asr r5
   1c4f4:	muleq	r1, r4, r5
   1c4f8:	strdeq	ip, [r1], -r0
   1c4fc:	andeq	ip, r1, r8, asr r6
   1c500:	andeq	ip, r1, ip, asr #13
   1c504:	andeq	ip, r1, ip, asr #14
   1c508:	ldrdeq	ip, [r1], -r8
   1c50c:	andeq	ip, r1, r0, ror r8
   1c510:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c514:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c518:	movw	r1, #23920	; 0x5d70
   1c51c:	movt	r1, #2
   1c520:	str	r0, [fp, #-108]	; 0xffffff94
   1c524:	mov	r0, r1
   1c528:	bl	113b0 <gettext@plt>
   1c52c:	ldr	r1, [fp, #8]
   1c530:	ldr	r2, [r1]
   1c534:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c538:	str	r0, [fp, #-112]	; 0xffffff90
   1c53c:	mov	r0, r1
   1c540:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c544:	bl	113f8 <fprintf@plt>
   1c548:	str	r0, [fp, #-116]	; 0xffffff8c
   1c54c:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c554:	movw	r1, #23936	; 0x5d80
   1c558:	movt	r1, #2
   1c55c:	str	r0, [fp, #-120]	; 0xffffff88
   1c560:	mov	r0, r1
   1c564:	bl	113b0 <gettext@plt>
   1c568:	ldr	r1, [fp, #8]
   1c56c:	ldr	r2, [r1]
   1c570:	ldr	r1, [fp, #8]
   1c574:	ldr	r3, [r1, #4]
   1c578:	ldr	r1, [fp, #-120]	; 0xffffff88
   1c57c:	str	r0, [fp, #-124]	; 0xffffff84
   1c580:	mov	r0, r1
   1c584:	ldr	r1, [fp, #-124]	; 0xffffff84
   1c588:	bl	113f8 <fprintf@plt>
   1c58c:	str	r0, [fp, #-128]	; 0xffffff80
   1c590:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c598:	movw	r1, #23959	; 0x5d97
   1c59c:	movt	r1, #2
   1c5a0:	str	r0, [fp, #-132]	; 0xffffff7c
   1c5a4:	mov	r0, r1
   1c5a8:	bl	113b0 <gettext@plt>
   1c5ac:	ldr	r1, [fp, #8]
   1c5b0:	ldr	r2, [r1]
   1c5b4:	ldr	r1, [fp, #8]
   1c5b8:	ldr	r3, [r1, #4]
   1c5bc:	ldr	r1, [fp, #8]
   1c5c0:	ldr	r1, [r1, #8]
   1c5c4:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1c5c8:	str	r0, [fp, #-136]	; 0xffffff78
   1c5cc:	mov	r0, lr
   1c5d0:	ldr	ip, [fp, #-136]	; 0xffffff78
   1c5d4:	str	r1, [fp, #-140]	; 0xffffff74
   1c5d8:	mov	r1, ip
   1c5dc:	ldr	r4, [fp, #-140]	; 0xffffff74
   1c5e0:	str	r4, [sp]
   1c5e4:	bl	113f8 <fprintf@plt>
   1c5e8:	str	r0, [sp, #144]	; 0x90
   1c5ec:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c5f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5f4:	movw	r1, #23987	; 0x5db3
   1c5f8:	movt	r1, #2
   1c5fc:	str	r0, [sp, #140]	; 0x8c
   1c600:	mov	r0, r1
   1c604:	bl	113b0 <gettext@plt>
   1c608:	ldr	r1, [fp, #8]
   1c60c:	ldr	r2, [r1]
   1c610:	ldr	r1, [fp, #8]
   1c614:	ldr	r3, [r1, #4]
   1c618:	ldr	r1, [fp, #8]
   1c61c:	ldr	r1, [r1, #8]
   1c620:	ldr	lr, [fp, #8]
   1c624:	ldr	lr, [lr, #12]
   1c628:	ldr	ip, [sp, #140]	; 0x8c
   1c62c:	str	r0, [sp, #136]	; 0x88
   1c630:	mov	r0, ip
   1c634:	ldr	r4, [sp, #136]	; 0x88
   1c638:	str	r1, [sp, #132]	; 0x84
   1c63c:	mov	r1, r4
   1c640:	ldr	r5, [sp, #132]	; 0x84
   1c644:	str	r5, [sp]
   1c648:	str	lr, [sp, #4]
   1c64c:	bl	113f8 <fprintf@plt>
   1c650:	str	r0, [sp, #128]	; 0x80
   1c654:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c65c:	movw	r1, #24019	; 0x5dd3
   1c660:	movt	r1, #2
   1c664:	str	r0, [sp, #124]	; 0x7c
   1c668:	mov	r0, r1
   1c66c:	bl	113b0 <gettext@plt>
   1c670:	ldr	r1, [fp, #8]
   1c674:	ldr	r2, [r1]
   1c678:	ldr	r1, [fp, #8]
   1c67c:	ldr	r3, [r1, #4]
   1c680:	ldr	r1, [fp, #8]
   1c684:	ldr	r1, [r1, #8]
   1c688:	ldr	lr, [fp, #8]
   1c68c:	ldr	lr, [lr, #12]
   1c690:	ldr	ip, [fp, #8]
   1c694:	ldr	ip, [ip, #16]
   1c698:	ldr	r4, [sp, #124]	; 0x7c
   1c69c:	str	r0, [sp, #120]	; 0x78
   1c6a0:	mov	r0, r4
   1c6a4:	ldr	r5, [sp, #120]	; 0x78
   1c6a8:	str	r1, [sp, #116]	; 0x74
   1c6ac:	mov	r1, r5
   1c6b0:	ldr	r6, [sp, #116]	; 0x74
   1c6b4:	str	r6, [sp]
   1c6b8:	str	lr, [sp, #4]
   1c6bc:	str	ip, [sp, #8]
   1c6c0:	bl	113f8 <fprintf@plt>
   1c6c4:	str	r0, [sp, #112]	; 0x70
   1c6c8:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c6cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c6d0:	movw	r1, #24055	; 0x5df7
   1c6d4:	movt	r1, #2
   1c6d8:	str	r0, [sp, #108]	; 0x6c
   1c6dc:	mov	r0, r1
   1c6e0:	bl	113b0 <gettext@plt>
   1c6e4:	ldr	r1, [fp, #8]
   1c6e8:	ldr	r2, [r1]
   1c6ec:	ldr	r1, [fp, #8]
   1c6f0:	ldr	r3, [r1, #4]
   1c6f4:	ldr	r1, [fp, #8]
   1c6f8:	ldr	r1, [r1, #8]
   1c6fc:	ldr	lr, [fp, #8]
   1c700:	ldr	lr, [lr, #12]
   1c704:	ldr	ip, [fp, #8]
   1c708:	ldr	ip, [ip, #16]
   1c70c:	ldr	r4, [fp, #8]
   1c710:	ldr	r4, [r4, #20]
   1c714:	ldr	r5, [sp, #108]	; 0x6c
   1c718:	str	r0, [sp, #104]	; 0x68
   1c71c:	mov	r0, r5
   1c720:	ldr	r6, [sp, #104]	; 0x68
   1c724:	str	r1, [sp, #100]	; 0x64
   1c728:	mov	r1, r6
   1c72c:	ldr	r7, [sp, #100]	; 0x64
   1c730:	str	r7, [sp]
   1c734:	str	lr, [sp, #4]
   1c738:	str	ip, [sp, #8]
   1c73c:	str	r4, [sp, #12]
   1c740:	bl	113f8 <fprintf@plt>
   1c744:	str	r0, [sp, #96]	; 0x60
   1c748:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c74c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c750:	movw	r1, #24095	; 0x5e1f
   1c754:	movt	r1, #2
   1c758:	str	r0, [sp, #92]	; 0x5c
   1c75c:	mov	r0, r1
   1c760:	bl	113b0 <gettext@plt>
   1c764:	ldr	r1, [fp, #8]
   1c768:	ldr	r2, [r1]
   1c76c:	ldr	r1, [fp, #8]
   1c770:	ldr	r3, [r1, #4]
   1c774:	ldr	r1, [fp, #8]
   1c778:	ldr	r1, [r1, #8]
   1c77c:	ldr	lr, [fp, #8]
   1c780:	ldr	lr, [lr, #12]
   1c784:	ldr	ip, [fp, #8]
   1c788:	ldr	ip, [ip, #16]
   1c78c:	ldr	r4, [fp, #8]
   1c790:	ldr	r4, [r4, #20]
   1c794:	ldr	r5, [fp, #8]
   1c798:	ldr	r5, [r5, #24]
   1c79c:	ldr	r6, [sp, #92]	; 0x5c
   1c7a0:	str	r0, [sp, #88]	; 0x58
   1c7a4:	mov	r0, r6
   1c7a8:	ldr	r7, [sp, #88]	; 0x58
   1c7ac:	str	r1, [sp, #84]	; 0x54
   1c7b0:	mov	r1, r7
   1c7b4:	ldr	r8, [sp, #84]	; 0x54
   1c7b8:	str	r8, [sp]
   1c7bc:	str	lr, [sp, #4]
   1c7c0:	str	ip, [sp, #8]
   1c7c4:	str	r4, [sp, #12]
   1c7c8:	str	r5, [sp, #16]
   1c7cc:	bl	113f8 <fprintf@plt>
   1c7d0:	str	r0, [sp, #80]	; 0x50
   1c7d4:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c7d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c7dc:	movw	r1, #24139	; 0x5e4b
   1c7e0:	movt	r1, #2
   1c7e4:	str	r0, [sp, #76]	; 0x4c
   1c7e8:	mov	r0, r1
   1c7ec:	bl	113b0 <gettext@plt>
   1c7f0:	ldr	r1, [fp, #8]
   1c7f4:	ldr	r2, [r1]
   1c7f8:	ldr	r1, [fp, #8]
   1c7fc:	ldr	r3, [r1, #4]
   1c800:	ldr	r1, [fp, #8]
   1c804:	ldr	r1, [r1, #8]
   1c808:	ldr	lr, [fp, #8]
   1c80c:	ldr	lr, [lr, #12]
   1c810:	ldr	ip, [fp, #8]
   1c814:	ldr	ip, [ip, #16]
   1c818:	ldr	r4, [fp, #8]
   1c81c:	ldr	r4, [r4, #20]
   1c820:	ldr	r5, [fp, #8]
   1c824:	ldr	r5, [r5, #24]
   1c828:	ldr	r6, [fp, #8]
   1c82c:	ldr	r6, [r6, #28]
   1c830:	ldr	r7, [sp, #76]	; 0x4c
   1c834:	str	r0, [sp, #72]	; 0x48
   1c838:	mov	r0, r7
   1c83c:	ldr	r8, [sp, #72]	; 0x48
   1c840:	str	r1, [sp, #68]	; 0x44
   1c844:	mov	r1, r8
   1c848:	ldr	r9, [sp, #68]	; 0x44
   1c84c:	str	r9, [sp]
   1c850:	str	lr, [sp, #4]
   1c854:	str	ip, [sp, #8]
   1c858:	str	r4, [sp, #12]
   1c85c:	str	r5, [sp, #16]
   1c860:	str	r6, [sp, #20]
   1c864:	bl	113f8 <fprintf@plt>
   1c868:	str	r0, [sp, #64]	; 0x40
   1c86c:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c874:	movw	r1, #24187	; 0x5e7b
   1c878:	movt	r1, #2
   1c87c:	str	r0, [sp, #60]	; 0x3c
   1c880:	mov	r0, r1
   1c884:	bl	113b0 <gettext@plt>
   1c888:	ldr	r1, [fp, #8]
   1c88c:	ldr	r2, [r1]
   1c890:	ldr	r1, [fp, #8]
   1c894:	ldr	r3, [r1, #4]
   1c898:	ldr	r1, [fp, #8]
   1c89c:	ldr	r1, [r1, #8]
   1c8a0:	ldr	lr, [fp, #8]
   1c8a4:	ldr	lr, [lr, #12]
   1c8a8:	ldr	ip, [fp, #8]
   1c8ac:	ldr	ip, [ip, #16]
   1c8b0:	ldr	r4, [fp, #8]
   1c8b4:	ldr	r4, [r4, #20]
   1c8b8:	ldr	r5, [fp, #8]
   1c8bc:	ldr	r5, [r5, #24]
   1c8c0:	ldr	r6, [fp, #8]
   1c8c4:	ldr	r6, [r6, #28]
   1c8c8:	ldr	r7, [fp, #8]
   1c8cc:	ldr	r7, [r7, #32]
   1c8d0:	ldr	r8, [sp, #60]	; 0x3c
   1c8d4:	str	r0, [sp, #56]	; 0x38
   1c8d8:	mov	r0, r8
   1c8dc:	ldr	r9, [sp, #56]	; 0x38
   1c8e0:	str	r1, [sp, #52]	; 0x34
   1c8e4:	mov	r1, r9
   1c8e8:	ldr	sl, [sp, #52]	; 0x34
   1c8ec:	str	sl, [sp]
   1c8f0:	str	lr, [sp, #4]
   1c8f4:	str	ip, [sp, #8]
   1c8f8:	str	r4, [sp, #12]
   1c8fc:	str	r5, [sp, #16]
   1c900:	str	r6, [sp, #20]
   1c904:	str	r7, [sp, #24]
   1c908:	bl	113f8 <fprintf@plt>
   1c90c:	str	r0, [sp, #48]	; 0x30
   1c910:	b	1c9b4 <__assert_fail@plt+0xb46c>
   1c914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c918:	movw	r1, #24239	; 0x5eaf
   1c91c:	movt	r1, #2
   1c920:	str	r0, [sp, #44]	; 0x2c
   1c924:	mov	r0, r1
   1c928:	bl	113b0 <gettext@plt>
   1c92c:	ldr	r1, [fp, #8]
   1c930:	ldr	r2, [r1]
   1c934:	ldr	r1, [fp, #8]
   1c938:	ldr	r3, [r1, #4]
   1c93c:	ldr	r1, [fp, #8]
   1c940:	ldr	r1, [r1, #8]
   1c944:	ldr	lr, [fp, #8]
   1c948:	ldr	lr, [lr, #12]
   1c94c:	ldr	ip, [fp, #8]
   1c950:	ldr	ip, [ip, #16]
   1c954:	ldr	r4, [fp, #8]
   1c958:	ldr	r4, [r4, #20]
   1c95c:	ldr	r5, [fp, #8]
   1c960:	ldr	r5, [r5, #24]
   1c964:	ldr	r6, [fp, #8]
   1c968:	ldr	r6, [r6, #28]
   1c96c:	ldr	r7, [fp, #8]
   1c970:	ldr	r7, [r7, #32]
   1c974:	ldr	r8, [sp, #44]	; 0x2c
   1c978:	str	r0, [sp, #40]	; 0x28
   1c97c:	mov	r0, r8
   1c980:	ldr	r9, [sp, #40]	; 0x28
   1c984:	str	r1, [sp, #36]	; 0x24
   1c988:	mov	r1, r9
   1c98c:	ldr	sl, [sp, #36]	; 0x24
   1c990:	str	sl, [sp]
   1c994:	str	lr, [sp, #4]
   1c998:	str	ip, [sp, #8]
   1c99c:	str	r4, [sp, #12]
   1c9a0:	str	r5, [sp, #16]
   1c9a4:	str	r6, [sp, #20]
   1c9a8:	str	r7, [sp, #24]
   1c9ac:	bl	113f8 <fprintf@plt>
   1c9b0:	str	r0, [sp, #32]
   1c9b4:	sub	sp, fp, #28
   1c9b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9bc:	push	{fp, lr}
   1c9c0:	mov	fp, sp
   1c9c4:	sub	sp, sp, #32
   1c9c8:	ldr	ip, [fp, #8]
   1c9cc:	str	r0, [fp, #-4]
   1c9d0:	str	r1, [fp, #-8]
   1c9d4:	str	r2, [fp, #-12]
   1c9d8:	str	r3, [sp, #16]
   1c9dc:	movw	r0, #0
   1c9e0:	str	r0, [sp, #12]
   1c9e4:	str	ip, [sp, #8]
   1c9e8:	ldr	r0, [fp, #8]
   1c9ec:	ldr	r1, [sp, #12]
   1c9f0:	add	r0, r0, r1, lsl #2
   1c9f4:	ldr	r0, [r0]
   1c9f8:	movw	r1, #0
   1c9fc:	cmp	r0, r1
   1ca00:	beq	1ca18 <__assert_fail@plt+0xb4d0>
   1ca04:	b	1ca08 <__assert_fail@plt+0xb4c0>
   1ca08:	ldr	r0, [sp, #12]
   1ca0c:	add	r0, r0, #1
   1ca10:	str	r0, [sp, #12]
   1ca14:	b	1c9e8 <__assert_fail@plt+0xb4a0>
   1ca18:	ldr	r0, [fp, #-4]
   1ca1c:	ldr	r1, [fp, #-8]
   1ca20:	ldr	r2, [fp, #-12]
   1ca24:	ldr	r3, [sp, #16]
   1ca28:	ldr	ip, [fp, #8]
   1ca2c:	ldr	lr, [sp, #12]
   1ca30:	str	ip, [sp]
   1ca34:	str	lr, [sp, #4]
   1ca38:	bl	1c398 <__assert_fail@plt+0xae50>
   1ca3c:	mov	sp, fp
   1ca40:	pop	{fp, pc}
   1ca44:	push	{fp, lr}
   1ca48:	mov	fp, sp
   1ca4c:	sub	sp, sp, #80	; 0x50
   1ca50:	ldr	ip, [fp, #8]
   1ca54:	str	ip, [fp, #-4]
   1ca58:	str	r0, [fp, #-8]
   1ca5c:	str	r1, [fp, #-12]
   1ca60:	str	r2, [fp, #-16]
   1ca64:	str	r3, [fp, #-20]	; 0xffffffec
   1ca68:	movw	r0, #0
   1ca6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca74:	cmp	r0, #10
   1ca78:	movw	r0, #0
   1ca7c:	str	r0, [sp, #12]
   1ca80:	bcs	1cab8 <__assert_fail@plt+0xb570>
   1ca84:	ldr	r0, [fp, #-4]
   1ca88:	add	r1, r0, #4
   1ca8c:	str	r1, [fp, #-4]
   1ca90:	ldr	r0, [r0]
   1ca94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca98:	add	r2, sp, #16
   1ca9c:	add	r1, r2, r1, lsl #2
   1caa0:	str	r0, [r1]
   1caa4:	movw	r1, #0
   1caa8:	cmp	r0, r1
   1caac:	movw	r0, #0
   1cab0:	movne	r0, #1
   1cab4:	str	r0, [sp, #12]
   1cab8:	ldr	r0, [sp, #12]
   1cabc:	tst	r0, #1
   1cac0:	beq	1cad8 <__assert_fail@plt+0xb590>
   1cac4:	b	1cac8 <__assert_fail@plt+0xb580>
   1cac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cacc:	add	r0, r0, #1
   1cad0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cad4:	b	1ca70 <__assert_fail@plt+0xb528>
   1cad8:	add	r0, sp, #16
   1cadc:	ldr	r1, [fp, #-8]
   1cae0:	ldr	r2, [fp, #-12]
   1cae4:	ldr	r3, [fp, #-16]
   1cae8:	ldr	ip, [fp, #-20]	; 0xffffffec
   1caec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1caf0:	str	r0, [sp, #8]
   1caf4:	mov	r0, r1
   1caf8:	mov	r1, r2
   1cafc:	mov	r2, r3
   1cb00:	mov	r3, ip
   1cb04:	ldr	ip, [sp, #8]
   1cb08:	str	ip, [sp]
   1cb0c:	str	lr, [sp, #4]
   1cb10:	bl	1c398 <__assert_fail@plt+0xae50>
   1cb14:	mov	sp, fp
   1cb18:	pop	{fp, pc}
   1cb1c:	push	{fp, lr}
   1cb20:	mov	fp, sp
   1cb24:	sub	sp, sp, #32
   1cb28:	str	r0, [fp, #-4]
   1cb2c:	str	r1, [fp, #-8]
   1cb30:	str	r2, [fp, #-12]
   1cb34:	str	r3, [sp, #16]
   1cb38:	add	r0, fp, #8
   1cb3c:	str	r0, [sp, #12]
   1cb40:	ldr	r0, [fp, #-4]
   1cb44:	ldr	r1, [fp, #-8]
   1cb48:	ldr	r2, [fp, #-12]
   1cb4c:	ldr	r3, [sp, #16]
   1cb50:	ldr	ip, [sp, #12]
   1cb54:	mov	lr, sp
   1cb58:	str	ip, [lr]
   1cb5c:	bl	1ca44 <__assert_fail@plt+0xb4fc>
   1cb60:	add	r0, sp, #12
   1cb64:	str	r0, [sp, #8]
   1cb68:	mov	sp, fp
   1cb6c:	pop	{fp, pc}
   1cb70:	push	{fp, lr}
   1cb74:	mov	fp, sp
   1cb78:	sub	sp, sp, #16
   1cb7c:	movw	r0, #29084	; 0x719c
   1cb80:	movt	r0, #3
   1cb84:	ldr	r1, [r0]
   1cb88:	movw	r0, #20923	; 0x51bb
   1cb8c:	movt	r0, #2
   1cb90:	bl	11224 <fputs_unlocked@plt>
   1cb94:	movw	r1, #24299	; 0x5eeb
   1cb98:	movt	r1, #2
   1cb9c:	str	r0, [fp, #-4]
   1cba0:	mov	r0, r1
   1cba4:	bl	113b0 <gettext@plt>
   1cba8:	movw	r1, #24319	; 0x5eff
   1cbac:	movt	r1, #2
   1cbb0:	bl	11260 <printf@plt>
   1cbb4:	movw	r1, #24341	; 0x5f15
   1cbb8:	movt	r1, #2
   1cbbc:	str	r0, [sp, #8]
   1cbc0:	mov	r0, r1
   1cbc4:	bl	113b0 <gettext@plt>
   1cbc8:	movw	r1, #21463	; 0x53d7
   1cbcc:	movt	r1, #2
   1cbd0:	movw	r2, #21738	; 0x54ea
   1cbd4:	movt	r2, #2
   1cbd8:	bl	11260 <printf@plt>
   1cbdc:	movw	r1, #24361	; 0x5f29
   1cbe0:	movt	r1, #2
   1cbe4:	str	r0, [sp, #4]
   1cbe8:	mov	r0, r1
   1cbec:	bl	113b0 <gettext@plt>
   1cbf0:	movw	r1, #24400	; 0x5f50
   1cbf4:	movt	r1, #2
   1cbf8:	bl	11260 <printf@plt>
   1cbfc:	str	r0, [sp]
   1cc00:	mov	sp, fp
   1cc04:	pop	{fp, pc}
   1cc08:	push	{fp, lr}
   1cc0c:	mov	fp, sp
   1cc10:	sub	sp, sp, #16
   1cc14:	str	r0, [fp, #-4]
   1cc18:	str	r1, [sp, #8]
   1cc1c:	str	r2, [sp, #4]
   1cc20:	ldr	r0, [fp, #-4]
   1cc24:	ldr	r1, [sp, #8]
   1cc28:	ldr	r2, [sp, #4]
   1cc2c:	bl	1cc38 <__assert_fail@plt+0xb6f0>
   1cc30:	mov	sp, fp
   1cc34:	pop	{fp, pc}
   1cc38:	push	{fp, lr}
   1cc3c:	mov	fp, sp
   1cc40:	sub	sp, sp, #16
   1cc44:	str	r0, [fp, #-4]
   1cc48:	str	r1, [sp, #8]
   1cc4c:	str	r2, [sp, #4]
   1cc50:	ldr	r0, [fp, #-4]
   1cc54:	ldr	r1, [sp, #8]
   1cc58:	ldr	r2, [sp, #4]
   1cc5c:	bl	22b00 <__assert_fail@plt+0x115b8>
   1cc60:	str	r0, [sp]
   1cc64:	ldr	r0, [sp]
   1cc68:	movw	r1, #0
   1cc6c:	cmp	r0, r1
   1cc70:	bne	1cca0 <__assert_fail@plt+0xb758>
   1cc74:	ldr	r0, [fp, #-4]
   1cc78:	movw	r1, #0
   1cc7c:	cmp	r0, r1
   1cc80:	beq	1cc9c <__assert_fail@plt+0xb754>
   1cc84:	ldr	r0, [sp, #8]
   1cc88:	cmp	r0, #0
   1cc8c:	beq	1cca0 <__assert_fail@plt+0xb758>
   1cc90:	ldr	r0, [sp, #4]
   1cc94:	cmp	r0, #0
   1cc98:	beq	1cca0 <__assert_fail@plt+0xb758>
   1cc9c:	bl	1fa88 <__assert_fail@plt+0xe540>
   1cca0:	ldr	r0, [sp]
   1cca4:	mov	sp, fp
   1cca8:	pop	{fp, pc}
   1ccac:	push	{fp, lr}
   1ccb0:	mov	fp, sp
   1ccb4:	sub	sp, sp, #8
   1ccb8:	str	r0, [sp, #4]
   1ccbc:	ldr	r0, [sp, #4]
   1ccc0:	bl	219a8 <__assert_fail@plt+0x10460>
   1ccc4:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1ccc8:	mov	sp, fp
   1cccc:	pop	{fp, pc}
   1ccd0:	push	{fp, lr}
   1ccd4:	mov	fp, sp
   1ccd8:	sub	sp, sp, #8
   1ccdc:	str	r0, [sp, #4]
   1cce0:	ldr	r0, [sp, #4]
   1cce4:	movw	r1, #0
   1cce8:	cmp	r0, r1
   1ccec:	bne	1ccf4 <__assert_fail@plt+0xb7ac>
   1ccf0:	bl	1fa88 <__assert_fail@plt+0xe540>
   1ccf4:	ldr	r0, [sp, #4]
   1ccf8:	mov	sp, fp
   1ccfc:	pop	{fp, pc}
   1cd00:	push	{fp, lr}
   1cd04:	mov	fp, sp
   1cd08:	sub	sp, sp, #8
   1cd0c:	str	r0, [sp, #4]
   1cd10:	ldr	r0, [sp, #4]
   1cd14:	bl	2283c <__assert_fail@plt+0x112f4>
   1cd18:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1cd1c:	mov	sp, fp
   1cd20:	pop	{fp, pc}
   1cd24:	push	{fp, lr}
   1cd28:	mov	fp, sp
   1cd2c:	sub	sp, sp, #8
   1cd30:	str	r0, [sp, #4]
   1cd34:	ldr	r0, [sp, #4]
   1cd38:	bl	1ccac <__assert_fail@plt+0xb764>
   1cd3c:	mov	sp, fp
   1cd40:	pop	{fp, pc}
   1cd44:	push	{fp, lr}
   1cd48:	mov	fp, sp
   1cd4c:	sub	sp, sp, #16
   1cd50:	str	r0, [fp, #-4]
   1cd54:	str	r1, [sp, #8]
   1cd58:	ldr	r0, [fp, #-4]
   1cd5c:	ldr	r1, [sp, #8]
   1cd60:	bl	21a18 <__assert_fail@plt+0x104d0>
   1cd64:	str	r0, [sp, #4]
   1cd68:	ldr	r0, [sp, #4]
   1cd6c:	movw	r1, #0
   1cd70:	cmp	r0, r1
   1cd74:	bne	1cd98 <__assert_fail@plt+0xb850>
   1cd78:	ldr	r0, [fp, #-4]
   1cd7c:	movw	r1, #0
   1cd80:	cmp	r0, r1
   1cd84:	beq	1cd94 <__assert_fail@plt+0xb84c>
   1cd88:	ldr	r0, [sp, #8]
   1cd8c:	cmp	r0, #0
   1cd90:	beq	1cd98 <__assert_fail@plt+0xb850>
   1cd94:	bl	1fa88 <__assert_fail@plt+0xe540>
   1cd98:	ldr	r0, [sp, #4]
   1cd9c:	mov	sp, fp
   1cda0:	pop	{fp, pc}
   1cda4:	push	{fp, lr}
   1cda8:	mov	fp, sp
   1cdac:	sub	sp, sp, #8
   1cdb0:	str	r0, [sp, #4]
   1cdb4:	str	r1, [sp]
   1cdb8:	ldr	r0, [sp, #4]
   1cdbc:	ldr	r1, [sp]
   1cdc0:	bl	2287c <__assert_fail@plt+0x11334>
   1cdc4:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1cdc8:	mov	sp, fp
   1cdcc:	pop	{fp, pc}
   1cdd0:	push	{fp, lr}
   1cdd4:	mov	fp, sp
   1cdd8:	sub	sp, sp, #16
   1cddc:	str	r0, [fp, #-4]
   1cde0:	str	r1, [sp, #8]
   1cde4:	str	r2, [sp, #4]
   1cde8:	ldr	r0, [fp, #-4]
   1cdec:	ldr	r1, [sp, #8]
   1cdf0:	ldr	r2, [sp, #4]
   1cdf4:	bl	22974 <__assert_fail@plt+0x1142c>
   1cdf8:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1cdfc:	mov	sp, fp
   1ce00:	pop	{fp, pc}
   1ce04:	push	{fp, lr}
   1ce08:	mov	fp, sp
   1ce0c:	sub	sp, sp, #8
   1ce10:	str	r0, [sp, #4]
   1ce14:	str	r1, [sp]
   1ce18:	ldr	r1, [sp, #4]
   1ce1c:	ldr	r2, [sp]
   1ce20:	movw	r0, #0
   1ce24:	bl	1cc38 <__assert_fail@plt+0xb6f0>
   1ce28:	mov	sp, fp
   1ce2c:	pop	{fp, pc}
   1ce30:	push	{fp, lr}
   1ce34:	mov	fp, sp
   1ce38:	sub	sp, sp, #8
   1ce3c:	str	r0, [sp, #4]
   1ce40:	str	r1, [sp]
   1ce44:	ldr	r1, [sp, #4]
   1ce48:	ldr	r2, [sp]
   1ce4c:	movw	r0, #0
   1ce50:	bl	1cdd0 <__assert_fail@plt+0xb888>
   1ce54:	mov	sp, fp
   1ce58:	pop	{fp, pc}
   1ce5c:	push	{fp, lr}
   1ce60:	mov	fp, sp
   1ce64:	sub	sp, sp, #8
   1ce68:	str	r0, [sp, #4]
   1ce6c:	str	r1, [sp]
   1ce70:	ldr	r0, [sp, #4]
   1ce74:	ldr	r1, [sp]
   1ce78:	movw	r2, #1
   1ce7c:	bl	1ce88 <__assert_fail@plt+0xb940>
   1ce80:	mov	sp, fp
   1ce84:	pop	{fp, pc}
   1ce88:	push	{fp, lr}
   1ce8c:	mov	fp, sp
   1ce90:	sub	sp, sp, #16
   1ce94:	str	r0, [fp, #-4]
   1ce98:	str	r1, [sp, #8]
   1ce9c:	str	r2, [sp, #4]
   1cea0:	ldr	r0, [sp, #8]
   1cea4:	ldr	r0, [r0]
   1cea8:	str	r0, [sp]
   1ceac:	ldr	r0, [fp, #-4]
   1ceb0:	movw	r1, #0
   1ceb4:	cmp	r0, r1
   1ceb8:	bne	1cf04 <__assert_fail@plt+0xb9bc>
   1cebc:	ldr	r0, [sp]
   1cec0:	cmp	r0, #0
   1cec4:	bne	1cf00 <__assert_fail@plt+0xb9b8>
   1cec8:	ldr	r0, [sp, #4]
   1cecc:	movw	r1, #64	; 0x40
   1ced0:	udiv	r0, r1, r0
   1ced4:	str	r0, [sp]
   1ced8:	ldr	r0, [sp]
   1cedc:	cmp	r0, #0
   1cee0:	movw	r0, #0
   1cee4:	movne	r0, #1
   1cee8:	mvn	r1, #0
   1ceec:	eor	r0, r0, r1
   1cef0:	and	r0, r0, #1
   1cef4:	ldr	r1, [sp]
   1cef8:	add	r0, r1, r0
   1cefc:	str	r0, [sp]
   1cf00:	b	1cf34 <__assert_fail@plt+0xb9ec>
   1cf04:	ldr	r0, [sp]
   1cf08:	ldr	r1, [sp]
   1cf0c:	lsr	r1, r1, #1
   1cf10:	add	r1, r1, #1
   1cf14:	adds	r0, r0, r1
   1cf18:	mov	r1, #0
   1cf1c:	adc	r1, r1, #0
   1cf20:	str	r0, [sp]
   1cf24:	tst	r1, #1
   1cf28:	beq	1cf30 <__assert_fail@plt+0xb9e8>
   1cf2c:	bl	1fa88 <__assert_fail@plt+0xe540>
   1cf30:	b	1cf34 <__assert_fail@plt+0xb9ec>
   1cf34:	ldr	r0, [fp, #-4]
   1cf38:	ldr	r1, [sp]
   1cf3c:	ldr	r2, [sp, #4]
   1cf40:	bl	1cc38 <__assert_fail@plt+0xb6f0>
   1cf44:	str	r0, [fp, #-4]
   1cf48:	ldr	r0, [sp]
   1cf4c:	ldr	r1, [sp, #8]
   1cf50:	str	r0, [r1]
   1cf54:	ldr	r0, [fp, #-4]
   1cf58:	mov	sp, fp
   1cf5c:	pop	{fp, pc}
   1cf60:	push	{fp, lr}
   1cf64:	mov	fp, sp
   1cf68:	sub	sp, sp, #376	; 0x178
   1cf6c:	ldr	ip, [fp, #8]
   1cf70:	str	r0, [fp, #-4]
   1cf74:	str	r1, [fp, #-8]
   1cf78:	str	r2, [fp, #-12]
   1cf7c:	str	r3, [fp, #-16]
   1cf80:	ldr	r0, [fp, #-8]
   1cf84:	ldr	r0, [r0]
   1cf88:	str	r0, [fp, #-20]	; 0xffffffec
   1cf8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf94:	asr	r1, r1, #1
   1cf98:	add	r1, r0, r1
   1cf9c:	mov	r2, #1
   1cfa0:	cmp	r1, r0
   1cfa4:	movwvc	r2, #0
   1cfa8:	str	r1, [fp, #-24]	; 0xffffffe8
   1cfac:	tst	r2, #1
   1cfb0:	str	ip, [fp, #-36]	; 0xffffffdc
   1cfb4:	beq	1cfc0 <__assert_fail@plt+0xba78>
   1cfb8:	ldr	r0, [pc, #4044]	; 1df8c <__assert_fail@plt+0xca44>
   1cfbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1cfc0:	ldr	r0, [fp, #-16]
   1cfc4:	movw	r1, #0
   1cfc8:	cmp	r1, r0
   1cfcc:	bgt	1cfe8 <__assert_fail@plt+0xbaa0>
   1cfd0:	ldr	r0, [fp, #-16]
   1cfd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfd8:	cmp	r0, r1
   1cfdc:	bge	1cfe8 <__assert_fail@plt+0xbaa0>
   1cfe0:	ldr	r0, [fp, #-16]
   1cfe4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cfe8:	b	1d3c0 <__assert_fail@plt+0xbe78>
   1cfec:	b	1cff0 <__assert_fail@plt+0xbaa8>
   1cff0:	ldr	r0, [fp, #8]
   1cff4:	cmp	r0, #0
   1cff8:	bge	1d10c <__assert_fail@plt+0xbbc4>
   1cffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d000:	cmp	r0, #0
   1d004:	bge	1d090 <__assert_fail@plt+0xbb48>
   1d008:	b	1d00c <__assert_fail@plt+0xbac4>
   1d00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d010:	ldr	r1, [fp, #8]
   1d014:	movw	r2, #127	; 0x7f
   1d018:	sdiv	r1, r2, r1
   1d01c:	cmp	r0, r1
   1d020:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d024:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d028:	b	1d02c <__assert_fail@plt+0xbae4>
   1d02c:	ldr	r0, [pc, #4076]	; 1e020 <__assert_fail@plt+0xcad8>
   1d030:	ldr	r1, [fp, #8]
   1d034:	cmp	r1, r0
   1d038:	blt	1d050 <__assert_fail@plt+0xbb08>
   1d03c:	b	1d05c <__assert_fail@plt+0xbb14>
   1d040:	ldr	r0, [fp, #8]
   1d044:	movw	r1, #0
   1d048:	cmp	r1, r0
   1d04c:	bge	1d05c <__assert_fail@plt+0xbb14>
   1d050:	movw	r0, #0
   1d054:	str	r0, [fp, #-40]	; 0xffffffd8
   1d058:	b	1d074 <__assert_fail@plt+0xbb2c>
   1d05c:	ldr	r0, [fp, #8]
   1d060:	movw	r1, #0
   1d064:	sub	r0, r1, r0
   1d068:	movw	r1, #127	; 0x7f
   1d06c:	sdiv	r0, r1, r0
   1d070:	str	r0, [fp, #-40]	; 0xffffffd8
   1d074:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d07c:	mvn	r2, #0
   1d080:	sub	r1, r2, r1
   1d084:	cmp	r0, r1
   1d088:	ble	1d1ac <__assert_fail@plt+0xbc64>
   1d08c:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d090:	b	1d094 <__assert_fail@plt+0xbb4c>
   1d094:	b	1d0f0 <__assert_fail@plt+0xbba8>
   1d098:	b	1d0f0 <__assert_fail@plt+0xbba8>
   1d09c:	ldr	r0, [fp, #8]
   1d0a0:	cmn	r0, #1
   1d0a4:	bne	1d0f0 <__assert_fail@plt+0xbba8>
   1d0a8:	b	1d0ac <__assert_fail@plt+0xbb64>
   1d0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0b0:	mvn	r1, #127	; 0x7f
   1d0b4:	add	r0, r0, r1
   1d0b8:	movw	r1, #0
   1d0bc:	cmp	r1, r0
   1d0c0:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d0c4:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0cc:	movw	r1, #0
   1d0d0:	cmp	r1, r0
   1d0d4:	bge	1d1c4 <__assert_fail@plt+0xbc7c>
   1d0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0dc:	sub	r0, r0, #1
   1d0e0:	movw	r1, #127	; 0x7f
   1d0e4:	cmp	r1, r0
   1d0e8:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d0ec:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d0f0:	ldr	r0, [fp, #8]
   1d0f4:	mvn	r1, #127	; 0x7f
   1d0f8:	sdiv	r0, r1, r0
   1d0fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d100:	cmp	r0, r1
   1d104:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d108:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d10c:	ldr	r0, [fp, #8]
   1d110:	cmp	r0, #0
   1d114:	bne	1d11c <__assert_fail@plt+0xbbd4>
   1d118:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d11c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d120:	cmp	r0, #0
   1d124:	bge	1d194 <__assert_fail@plt+0xbc4c>
   1d128:	b	1d12c <__assert_fail@plt+0xbbe4>
   1d12c:	b	1d178 <__assert_fail@plt+0xbc30>
   1d130:	b	1d178 <__assert_fail@plt+0xbc30>
   1d134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d138:	cmn	r0, #1
   1d13c:	bne	1d178 <__assert_fail@plt+0xbc30>
   1d140:	b	1d144 <__assert_fail@plt+0xbbfc>
   1d144:	ldr	r0, [fp, #8]
   1d148:	mvn	r1, #127	; 0x7f
   1d14c:	add	r0, r0, r1
   1d150:	movw	r1, #0
   1d154:	cmp	r1, r0
   1d158:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d15c:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d160:	ldr	r0, [fp, #8]
   1d164:	sub	r0, r0, #1
   1d168:	movw	r1, #127	; 0x7f
   1d16c:	cmp	r1, r0
   1d170:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d174:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d17c:	mvn	r1, #127	; 0x7f
   1d180:	sdiv	r0, r1, r0
   1d184:	ldr	r1, [fp, #8]
   1d188:	cmp	r0, r1
   1d18c:	blt	1d1ac <__assert_fail@plt+0xbc64>
   1d190:	b	1d1c4 <__assert_fail@plt+0xbc7c>
   1d194:	ldr	r0, [fp, #8]
   1d198:	movw	r1, #127	; 0x7f
   1d19c:	sdiv	r0, r1, r0
   1d1a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1a4:	cmp	r0, r1
   1d1a8:	bge	1d1c4 <__assert_fail@plt+0xbc7c>
   1d1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1b0:	ldr	r1, [fp, #8]
   1d1b4:	mul	r0, r0, r1
   1d1b8:	sxtb	r0, r0
   1d1bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1c0:	b	1e3d8 <__assert_fail@plt+0xce90>
   1d1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1c8:	ldr	r1, [fp, #8]
   1d1cc:	mul	r0, r0, r1
   1d1d0:	sxtb	r0, r0
   1d1d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1d8:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1d1dc:	ldr	r0, [fp, #8]
   1d1e0:	cmp	r0, #0
   1d1e4:	bge	1d2f4 <__assert_fail@plt+0xbdac>
   1d1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1ec:	cmp	r0, #0
   1d1f0:	bge	1d27c <__assert_fail@plt+0xbd34>
   1d1f4:	b	1d1f8 <__assert_fail@plt+0xbcb0>
   1d1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1fc:	ldr	r1, [fp, #8]
   1d200:	movw	r2, #255	; 0xff
   1d204:	sdiv	r1, r2, r1
   1d208:	cmp	r0, r1
   1d20c:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d210:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d214:	b	1d218 <__assert_fail@plt+0xbcd0>
   1d218:	ldr	r0, [pc, #3584]	; 1e020 <__assert_fail@plt+0xcad8>
   1d21c:	ldr	r1, [fp, #8]
   1d220:	cmp	r1, r0
   1d224:	blt	1d23c <__assert_fail@plt+0xbcf4>
   1d228:	b	1d248 <__assert_fail@plt+0xbd00>
   1d22c:	ldr	r0, [fp, #8]
   1d230:	movw	r1, #0
   1d234:	cmp	r1, r0
   1d238:	bge	1d248 <__assert_fail@plt+0xbd00>
   1d23c:	movw	r0, #0
   1d240:	str	r0, [fp, #-44]	; 0xffffffd4
   1d244:	b	1d260 <__assert_fail@plt+0xbd18>
   1d248:	ldr	r0, [fp, #8]
   1d24c:	movw	r1, #0
   1d250:	sub	r0, r1, r0
   1d254:	movw	r1, #255	; 0xff
   1d258:	sdiv	r0, r1, r0
   1d25c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d260:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d268:	mvn	r2, #0
   1d26c:	sub	r1, r2, r1
   1d270:	cmp	r0, r1
   1d274:	ble	1d390 <__assert_fail@plt+0xbe48>
   1d278:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d27c:	b	1d280 <__assert_fail@plt+0xbd38>
   1d280:	b	1d2d8 <__assert_fail@plt+0xbd90>
   1d284:	b	1d2d8 <__assert_fail@plt+0xbd90>
   1d288:	ldr	r0, [fp, #8]
   1d28c:	cmn	r0, #1
   1d290:	bne	1d2d8 <__assert_fail@plt+0xbd90>
   1d294:	b	1d298 <__assert_fail@plt+0xbd50>
   1d298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d29c:	add	r0, r0, #0
   1d2a0:	movw	r1, #0
   1d2a4:	cmp	r1, r0
   1d2a8:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d2ac:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b4:	movw	r1, #0
   1d2b8:	cmp	r1, r0
   1d2bc:	bge	1d3a8 <__assert_fail@plt+0xbe60>
   1d2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c4:	sub	r0, r0, #1
   1d2c8:	mvn	r1, #0
   1d2cc:	cmp	r1, r0
   1d2d0:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d2d4:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d2d8:	ldr	r0, [fp, #8]
   1d2dc:	movw	r1, #0
   1d2e0:	sdiv	r0, r1, r0
   1d2e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2e8:	cmp	r0, r1
   1d2ec:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d2f0:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d2f4:	ldr	r0, [fp, #8]
   1d2f8:	cmp	r0, #0
   1d2fc:	bne	1d304 <__assert_fail@plt+0xbdbc>
   1d300:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d308:	cmp	r0, #0
   1d30c:	bge	1d378 <__assert_fail@plt+0xbe30>
   1d310:	b	1d314 <__assert_fail@plt+0xbdcc>
   1d314:	b	1d35c <__assert_fail@plt+0xbe14>
   1d318:	b	1d35c <__assert_fail@plt+0xbe14>
   1d31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d320:	cmn	r0, #1
   1d324:	bne	1d35c <__assert_fail@plt+0xbe14>
   1d328:	b	1d32c <__assert_fail@plt+0xbde4>
   1d32c:	ldr	r0, [fp, #8]
   1d330:	add	r0, r0, #0
   1d334:	movw	r1, #0
   1d338:	cmp	r1, r0
   1d33c:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d340:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d344:	ldr	r0, [fp, #8]
   1d348:	sub	r0, r0, #1
   1d34c:	mvn	r1, #0
   1d350:	cmp	r1, r0
   1d354:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d358:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d360:	movw	r1, #0
   1d364:	sdiv	r0, r1, r0
   1d368:	ldr	r1, [fp, #8]
   1d36c:	cmp	r0, r1
   1d370:	blt	1d390 <__assert_fail@plt+0xbe48>
   1d374:	b	1d3a8 <__assert_fail@plt+0xbe60>
   1d378:	ldr	r0, [fp, #8]
   1d37c:	movw	r1, #255	; 0xff
   1d380:	sdiv	r0, r1, r0
   1d384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d388:	cmp	r0, r1
   1d38c:	bge	1d3a8 <__assert_fail@plt+0xbe60>
   1d390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d394:	ldr	r1, [fp, #8]
   1d398:	mul	r0, r0, r1
   1d39c:	and	r0, r0, #255	; 0xff
   1d3a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3a4:	b	1e3d8 <__assert_fail@plt+0xce90>
   1d3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3ac:	ldr	r1, [fp, #8]
   1d3b0:	mul	r0, r0, r1
   1d3b4:	and	r0, r0, #255	; 0xff
   1d3b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3bc:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1d3c0:	b	1d798 <__assert_fail@plt+0xc250>
   1d3c4:	b	1d3c8 <__assert_fail@plt+0xbe80>
   1d3c8:	ldr	r0, [fp, #8]
   1d3cc:	cmp	r0, #0
   1d3d0:	bge	1d4e4 <__assert_fail@plt+0xbf9c>
   1d3d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3d8:	cmp	r0, #0
   1d3dc:	bge	1d468 <__assert_fail@plt+0xbf20>
   1d3e0:	b	1d3e4 <__assert_fail@plt+0xbe9c>
   1d3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3e8:	ldr	r1, [fp, #8]
   1d3ec:	movw	r2, #32767	; 0x7fff
   1d3f0:	sdiv	r1, r2, r1
   1d3f4:	cmp	r0, r1
   1d3f8:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d3fc:	b	1d59c <__assert_fail@plt+0xc054>
   1d400:	b	1d404 <__assert_fail@plt+0xbebc>
   1d404:	ldr	r0, [pc, #3092]	; 1e020 <__assert_fail@plt+0xcad8>
   1d408:	ldr	r1, [fp, #8]
   1d40c:	cmp	r1, r0
   1d410:	blt	1d428 <__assert_fail@plt+0xbee0>
   1d414:	b	1d434 <__assert_fail@plt+0xbeec>
   1d418:	ldr	r0, [fp, #8]
   1d41c:	movw	r1, #0
   1d420:	cmp	r1, r0
   1d424:	bge	1d434 <__assert_fail@plt+0xbeec>
   1d428:	movw	r0, #0
   1d42c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d430:	b	1d44c <__assert_fail@plt+0xbf04>
   1d434:	ldr	r0, [fp, #8]
   1d438:	movw	r1, #0
   1d43c:	sub	r0, r1, r0
   1d440:	movw	r1, #32767	; 0x7fff
   1d444:	sdiv	r0, r1, r0
   1d448:	str	r0, [fp, #-48]	; 0xffffffd0
   1d44c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d454:	mvn	r2, #0
   1d458:	sub	r1, r2, r1
   1d45c:	cmp	r0, r1
   1d460:	ble	1d584 <__assert_fail@plt+0xc03c>
   1d464:	b	1d59c <__assert_fail@plt+0xc054>
   1d468:	b	1d46c <__assert_fail@plt+0xbf24>
   1d46c:	b	1d4c8 <__assert_fail@plt+0xbf80>
   1d470:	b	1d4c8 <__assert_fail@plt+0xbf80>
   1d474:	ldr	r0, [fp, #8]
   1d478:	cmn	r0, #1
   1d47c:	bne	1d4c8 <__assert_fail@plt+0xbf80>
   1d480:	b	1d484 <__assert_fail@plt+0xbf3c>
   1d484:	ldr	r0, [pc, #3928]	; 1e3e4 <__assert_fail@plt+0xce9c>
   1d488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d48c:	add	r0, r1, r0
   1d490:	movw	r1, #0
   1d494:	cmp	r1, r0
   1d498:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d49c:	b	1d59c <__assert_fail@plt+0xc054>
   1d4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a4:	movw	r1, #0
   1d4a8:	cmp	r1, r0
   1d4ac:	bge	1d59c <__assert_fail@plt+0xc054>
   1d4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4b4:	sub	r0, r0, #1
   1d4b8:	movw	r1, #32767	; 0x7fff
   1d4bc:	cmp	r1, r0
   1d4c0:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d4c4:	b	1d59c <__assert_fail@plt+0xc054>
   1d4c8:	ldr	r0, [pc, #3860]	; 1e3e4 <__assert_fail@plt+0xce9c>
   1d4cc:	ldr	r1, [fp, #8]
   1d4d0:	sdiv	r0, r0, r1
   1d4d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4d8:	cmp	r0, r1
   1d4dc:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d4e0:	b	1d59c <__assert_fail@plt+0xc054>
   1d4e4:	ldr	r0, [fp, #8]
   1d4e8:	cmp	r0, #0
   1d4ec:	bne	1d4f4 <__assert_fail@plt+0xbfac>
   1d4f0:	b	1d59c <__assert_fail@plt+0xc054>
   1d4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4f8:	cmp	r0, #0
   1d4fc:	bge	1d56c <__assert_fail@plt+0xc024>
   1d500:	b	1d504 <__assert_fail@plt+0xbfbc>
   1d504:	b	1d550 <__assert_fail@plt+0xc008>
   1d508:	b	1d550 <__assert_fail@plt+0xc008>
   1d50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d510:	cmn	r0, #1
   1d514:	bne	1d550 <__assert_fail@plt+0xc008>
   1d518:	b	1d51c <__assert_fail@plt+0xbfd4>
   1d51c:	ldr	r0, [pc, #3776]	; 1e3e4 <__assert_fail@plt+0xce9c>
   1d520:	ldr	r1, [fp, #8]
   1d524:	add	r0, r1, r0
   1d528:	movw	r1, #0
   1d52c:	cmp	r1, r0
   1d530:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d534:	b	1d59c <__assert_fail@plt+0xc054>
   1d538:	ldr	r0, [fp, #8]
   1d53c:	sub	r0, r0, #1
   1d540:	movw	r1, #32767	; 0x7fff
   1d544:	cmp	r1, r0
   1d548:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d54c:	b	1d59c <__assert_fail@plt+0xc054>
   1d550:	ldr	r0, [pc, #3724]	; 1e3e4 <__assert_fail@plt+0xce9c>
   1d554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d558:	sdiv	r0, r0, r1
   1d55c:	ldr	r1, [fp, #8]
   1d560:	cmp	r0, r1
   1d564:	blt	1d584 <__assert_fail@plt+0xc03c>
   1d568:	b	1d59c <__assert_fail@plt+0xc054>
   1d56c:	ldr	r0, [fp, #8]
   1d570:	movw	r1, #32767	; 0x7fff
   1d574:	sdiv	r0, r1, r0
   1d578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d57c:	cmp	r0, r1
   1d580:	bge	1d59c <__assert_fail@plt+0xc054>
   1d584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d588:	ldr	r1, [fp, #8]
   1d58c:	mul	r0, r0, r1
   1d590:	sxth	r0, r0
   1d594:	str	r0, [fp, #-28]	; 0xffffffe4
   1d598:	b	1e3d8 <__assert_fail@plt+0xce90>
   1d59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5a0:	ldr	r1, [fp, #8]
   1d5a4:	mul	r0, r0, r1
   1d5a8:	sxth	r0, r0
   1d5ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5b0:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1d5b4:	ldr	r0, [fp, #8]
   1d5b8:	cmp	r0, #0
   1d5bc:	bge	1d6cc <__assert_fail@plt+0xc184>
   1d5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5c4:	cmp	r0, #0
   1d5c8:	bge	1d654 <__assert_fail@plt+0xc10c>
   1d5cc:	b	1d5d0 <__assert_fail@plt+0xc088>
   1d5d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5d4:	ldr	r1, [fp, #8]
   1d5d8:	movw	r2, #65535	; 0xffff
   1d5dc:	sdiv	r1, r2, r1
   1d5e0:	cmp	r0, r1
   1d5e4:	blt	1d768 <__assert_fail@plt+0xc220>
   1d5e8:	b	1d780 <__assert_fail@plt+0xc238>
   1d5ec:	b	1d5f0 <__assert_fail@plt+0xc0a8>
   1d5f0:	ldr	r0, [pc, #2600]	; 1e020 <__assert_fail@plt+0xcad8>
   1d5f4:	ldr	r1, [fp, #8]
   1d5f8:	cmp	r1, r0
   1d5fc:	blt	1d614 <__assert_fail@plt+0xc0cc>
   1d600:	b	1d620 <__assert_fail@plt+0xc0d8>
   1d604:	ldr	r0, [fp, #8]
   1d608:	movw	r1, #0
   1d60c:	cmp	r1, r0
   1d610:	bge	1d620 <__assert_fail@plt+0xc0d8>
   1d614:	movw	r0, #0
   1d618:	str	r0, [fp, #-52]	; 0xffffffcc
   1d61c:	b	1d638 <__assert_fail@plt+0xc0f0>
   1d620:	ldr	r0, [fp, #8]
   1d624:	movw	r1, #0
   1d628:	sub	r0, r1, r0
   1d62c:	movw	r1, #65535	; 0xffff
   1d630:	sdiv	r0, r1, r0
   1d634:	str	r0, [fp, #-52]	; 0xffffffcc
   1d638:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d63c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d640:	mvn	r2, #0
   1d644:	sub	r1, r2, r1
   1d648:	cmp	r0, r1
   1d64c:	ble	1d768 <__assert_fail@plt+0xc220>
   1d650:	b	1d780 <__assert_fail@plt+0xc238>
   1d654:	b	1d658 <__assert_fail@plt+0xc110>
   1d658:	b	1d6b0 <__assert_fail@plt+0xc168>
   1d65c:	b	1d6b0 <__assert_fail@plt+0xc168>
   1d660:	ldr	r0, [fp, #8]
   1d664:	cmn	r0, #1
   1d668:	bne	1d6b0 <__assert_fail@plt+0xc168>
   1d66c:	b	1d670 <__assert_fail@plt+0xc128>
   1d670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d674:	add	r0, r0, #0
   1d678:	movw	r1, #0
   1d67c:	cmp	r1, r0
   1d680:	blt	1d768 <__assert_fail@plt+0xc220>
   1d684:	b	1d780 <__assert_fail@plt+0xc238>
   1d688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d68c:	movw	r1, #0
   1d690:	cmp	r1, r0
   1d694:	bge	1d780 <__assert_fail@plt+0xc238>
   1d698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d69c:	sub	r0, r0, #1
   1d6a0:	mvn	r1, #0
   1d6a4:	cmp	r1, r0
   1d6a8:	blt	1d768 <__assert_fail@plt+0xc220>
   1d6ac:	b	1d780 <__assert_fail@plt+0xc238>
   1d6b0:	ldr	r0, [fp, #8]
   1d6b4:	movw	r1, #0
   1d6b8:	sdiv	r0, r1, r0
   1d6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6c0:	cmp	r0, r1
   1d6c4:	blt	1d768 <__assert_fail@plt+0xc220>
   1d6c8:	b	1d780 <__assert_fail@plt+0xc238>
   1d6cc:	ldr	r0, [fp, #8]
   1d6d0:	cmp	r0, #0
   1d6d4:	bne	1d6dc <__assert_fail@plt+0xc194>
   1d6d8:	b	1d780 <__assert_fail@plt+0xc238>
   1d6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6e0:	cmp	r0, #0
   1d6e4:	bge	1d750 <__assert_fail@plt+0xc208>
   1d6e8:	b	1d6ec <__assert_fail@plt+0xc1a4>
   1d6ec:	b	1d734 <__assert_fail@plt+0xc1ec>
   1d6f0:	b	1d734 <__assert_fail@plt+0xc1ec>
   1d6f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6f8:	cmn	r0, #1
   1d6fc:	bne	1d734 <__assert_fail@plt+0xc1ec>
   1d700:	b	1d704 <__assert_fail@plt+0xc1bc>
   1d704:	ldr	r0, [fp, #8]
   1d708:	add	r0, r0, #0
   1d70c:	movw	r1, #0
   1d710:	cmp	r1, r0
   1d714:	blt	1d768 <__assert_fail@plt+0xc220>
   1d718:	b	1d780 <__assert_fail@plt+0xc238>
   1d71c:	ldr	r0, [fp, #8]
   1d720:	sub	r0, r0, #1
   1d724:	mvn	r1, #0
   1d728:	cmp	r1, r0
   1d72c:	blt	1d768 <__assert_fail@plt+0xc220>
   1d730:	b	1d780 <__assert_fail@plt+0xc238>
   1d734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d738:	movw	r1, #0
   1d73c:	sdiv	r0, r1, r0
   1d740:	ldr	r1, [fp, #8]
   1d744:	cmp	r0, r1
   1d748:	blt	1d768 <__assert_fail@plt+0xc220>
   1d74c:	b	1d780 <__assert_fail@plt+0xc238>
   1d750:	ldr	r0, [fp, #8]
   1d754:	movw	r1, #65535	; 0xffff
   1d758:	sdiv	r0, r1, r0
   1d75c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d760:	cmp	r0, r1
   1d764:	bge	1d780 <__assert_fail@plt+0xc238>
   1d768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d76c:	ldr	r1, [fp, #8]
   1d770:	mul	r0, r0, r1
   1d774:	uxth	r0, r0
   1d778:	str	r0, [fp, #-28]	; 0xffffffe4
   1d77c:	b	1e3d8 <__assert_fail@plt+0xce90>
   1d780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d784:	ldr	r1, [fp, #8]
   1d788:	mul	r0, r0, r1
   1d78c:	uxth	r0, r0
   1d790:	str	r0, [fp, #-28]	; 0xffffffe4
   1d794:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1d798:	b	1d79c <__assert_fail@plt+0xc254>
   1d79c:	b	1d7a0 <__assert_fail@plt+0xc258>
   1d7a0:	ldr	r0, [fp, #8]
   1d7a4:	cmp	r0, #0
   1d7a8:	bge	1d8ac <__assert_fail@plt+0xc364>
   1d7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7b0:	cmp	r0, #0
   1d7b4:	bge	1d840 <__assert_fail@plt+0xc2f8>
   1d7b8:	b	1d7bc <__assert_fail@plt+0xc274>
   1d7bc:	ldr	r0, [pc, #1992]	; 1df8c <__assert_fail@plt+0xca44>
   1d7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7c4:	ldr	r2, [fp, #8]
   1d7c8:	sdiv	r0, r0, r2
   1d7cc:	cmp	r1, r0
   1d7d0:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d7d4:	b	1d950 <__assert_fail@plt+0xc408>
   1d7d8:	b	1d7dc <__assert_fail@plt+0xc294>
   1d7dc:	ldr	r0, [pc, #2108]	; 1e020 <__assert_fail@plt+0xcad8>
   1d7e0:	ldr	r1, [fp, #8]
   1d7e4:	cmp	r1, r0
   1d7e8:	blt	1d800 <__assert_fail@plt+0xc2b8>
   1d7ec:	b	1d80c <__assert_fail@plt+0xc2c4>
   1d7f0:	ldr	r0, [fp, #8]
   1d7f4:	movw	r1, #0
   1d7f8:	cmp	r1, r0
   1d7fc:	bge	1d80c <__assert_fail@plt+0xc2c4>
   1d800:	movw	r0, #0
   1d804:	str	r0, [fp, #-56]	; 0xffffffc8
   1d808:	b	1d824 <__assert_fail@plt+0xc2dc>
   1d80c:	ldr	r0, [pc, #1912]	; 1df8c <__assert_fail@plt+0xca44>
   1d810:	ldr	r1, [fp, #8]
   1d814:	movw	r2, #0
   1d818:	sub	r1, r2, r1
   1d81c:	sdiv	r0, r0, r1
   1d820:	str	r0, [fp, #-56]	; 0xffffffc8
   1d824:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d82c:	mvn	r2, #0
   1d830:	sub	r1, r2, r1
   1d834:	cmp	r0, r1
   1d838:	ble	1d93c <__assert_fail@plt+0xc3f4>
   1d83c:	b	1d950 <__assert_fail@plt+0xc408>
   1d840:	ldr	r0, [fp, #8]
   1d844:	cmn	r0, #1
   1d848:	bne	1d890 <__assert_fail@plt+0xc348>
   1d84c:	b	1d850 <__assert_fail@plt+0xc308>
   1d850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d854:	add	r0, r0, #-2147483648	; 0x80000000
   1d858:	movw	r1, #0
   1d85c:	cmp	r1, r0
   1d860:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d864:	b	1d950 <__assert_fail@plt+0xc408>
   1d868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d86c:	movw	r1, #0
   1d870:	cmp	r1, r0
   1d874:	bge	1d950 <__assert_fail@plt+0xc408>
   1d878:	ldr	r0, [pc, #1804]	; 1df8c <__assert_fail@plt+0xca44>
   1d87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d880:	sub	r1, r1, #1
   1d884:	cmp	r0, r1
   1d888:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d88c:	b	1d950 <__assert_fail@plt+0xc408>
   1d890:	ldr	r0, [pc, #4072]	; 1e880 <__assert_fail@plt+0xd338>
   1d894:	ldr	r1, [fp, #8]
   1d898:	sdiv	r0, r0, r1
   1d89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8a0:	cmp	r0, r1
   1d8a4:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d8a8:	b	1d950 <__assert_fail@plt+0xc408>
   1d8ac:	ldr	r0, [fp, #8]
   1d8b0:	cmp	r0, #0
   1d8b4:	bne	1d8bc <__assert_fail@plt+0xc374>
   1d8b8:	b	1d950 <__assert_fail@plt+0xc408>
   1d8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8c0:	cmp	r0, #0
   1d8c4:	bge	1d924 <__assert_fail@plt+0xc3dc>
   1d8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8cc:	cmn	r0, #1
   1d8d0:	bne	1d908 <__assert_fail@plt+0xc3c0>
   1d8d4:	b	1d8d8 <__assert_fail@plt+0xc390>
   1d8d8:	ldr	r0, [fp, #8]
   1d8dc:	add	r0, r0, #-2147483648	; 0x80000000
   1d8e0:	movw	r1, #0
   1d8e4:	cmp	r1, r0
   1d8e8:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d8ec:	b	1d950 <__assert_fail@plt+0xc408>
   1d8f0:	ldr	r0, [pc, #1684]	; 1df8c <__assert_fail@plt+0xca44>
   1d8f4:	ldr	r1, [fp, #8]
   1d8f8:	sub	r1, r1, #1
   1d8fc:	cmp	r0, r1
   1d900:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d904:	b	1d950 <__assert_fail@plt+0xc408>
   1d908:	ldr	r0, [pc, #3952]	; 1e880 <__assert_fail@plt+0xd338>
   1d90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d910:	sdiv	r0, r0, r1
   1d914:	ldr	r1, [fp, #8]
   1d918:	cmp	r0, r1
   1d91c:	blt	1d93c <__assert_fail@plt+0xc3f4>
   1d920:	b	1d950 <__assert_fail@plt+0xc408>
   1d924:	ldr	r0, [pc, #1632]	; 1df8c <__assert_fail@plt+0xca44>
   1d928:	ldr	r1, [fp, #8]
   1d92c:	sdiv	r0, r0, r1
   1d930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d934:	cmp	r0, r1
   1d938:	bge	1d950 <__assert_fail@plt+0xc408>
   1d93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d940:	ldr	r1, [fp, #8]
   1d944:	mul	r0, r0, r1
   1d948:	str	r0, [fp, #-28]	; 0xffffffe4
   1d94c:	b	1e3d8 <__assert_fail@plt+0xce90>
   1d950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d954:	ldr	r1, [fp, #8]
   1d958:	mul	r0, r0, r1
   1d95c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d960:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1d964:	ldr	r0, [fp, #8]
   1d968:	cmp	r0, #0
   1d96c:	bge	1da7c <__assert_fail@plt+0xc534>
   1d970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d974:	cmp	r0, #0
   1d978:	bge	1da04 <__assert_fail@plt+0xc4bc>
   1d97c:	b	1d99c <__assert_fail@plt+0xc454>
   1d980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d984:	ldr	r1, [fp, #8]
   1d988:	mvn	r2, #0
   1d98c:	udiv	r1, r2, r1
   1d990:	cmp	r0, r1
   1d994:	bcc	1db18 <__assert_fail@plt+0xc5d0>
   1d998:	b	1db2c <__assert_fail@plt+0xc5e4>
   1d99c:	b	1d9a0 <__assert_fail@plt+0xc458>
   1d9a0:	ldr	r0, [pc, #1656]	; 1e020 <__assert_fail@plt+0xcad8>
   1d9a4:	ldr	r1, [fp, #8]
   1d9a8:	cmp	r1, r0
   1d9ac:	blt	1d9c4 <__assert_fail@plt+0xc47c>
   1d9b0:	b	1d9d0 <__assert_fail@plt+0xc488>
   1d9b4:	ldr	r0, [fp, #8]
   1d9b8:	movw	r1, #0
   1d9bc:	cmp	r1, r0
   1d9c0:	bge	1d9d0 <__assert_fail@plt+0xc488>
   1d9c4:	movw	r0, #1
   1d9c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d9cc:	b	1d9e8 <__assert_fail@plt+0xc4a0>
   1d9d0:	ldr	r0, [fp, #8]
   1d9d4:	movw	r1, #0
   1d9d8:	sub	r0, r1, r0
   1d9dc:	mvn	r1, #0
   1d9e0:	udiv	r0, r1, r0
   1d9e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d9e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d9ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9f0:	mvn	r2, #0
   1d9f4:	sub	r1, r2, r1
   1d9f8:	cmp	r0, r1
   1d9fc:	bls	1db18 <__assert_fail@plt+0xc5d0>
   1da00:	b	1db2c <__assert_fail@plt+0xc5e4>
   1da04:	b	1da08 <__assert_fail@plt+0xc4c0>
   1da08:	b	1da60 <__assert_fail@plt+0xc518>
   1da0c:	b	1da60 <__assert_fail@plt+0xc518>
   1da10:	ldr	r0, [fp, #8]
   1da14:	cmn	r0, #1
   1da18:	bne	1da60 <__assert_fail@plt+0xc518>
   1da1c:	b	1da20 <__assert_fail@plt+0xc4d8>
   1da20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da24:	add	r0, r0, #0
   1da28:	movw	r1, #0
   1da2c:	cmp	r1, r0
   1da30:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1da34:	b	1db2c <__assert_fail@plt+0xc5e4>
   1da38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da3c:	movw	r1, #0
   1da40:	cmp	r1, r0
   1da44:	bge	1db2c <__assert_fail@plt+0xc5e4>
   1da48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da4c:	sub	r0, r0, #1
   1da50:	mvn	r1, #0
   1da54:	cmp	r1, r0
   1da58:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1da5c:	b	1db2c <__assert_fail@plt+0xc5e4>
   1da60:	ldr	r0, [fp, #8]
   1da64:	movw	r1, #0
   1da68:	sdiv	r0, r1, r0
   1da6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da70:	cmp	r0, r1
   1da74:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1da78:	b	1db2c <__assert_fail@plt+0xc5e4>
   1da7c:	ldr	r0, [fp, #8]
   1da80:	cmp	r0, #0
   1da84:	bne	1da8c <__assert_fail@plt+0xc544>
   1da88:	b	1db2c <__assert_fail@plt+0xc5e4>
   1da8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da90:	cmp	r0, #0
   1da94:	bge	1db00 <__assert_fail@plt+0xc5b8>
   1da98:	b	1da9c <__assert_fail@plt+0xc554>
   1da9c:	b	1dae4 <__assert_fail@plt+0xc59c>
   1daa0:	b	1dae4 <__assert_fail@plt+0xc59c>
   1daa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daa8:	cmn	r0, #1
   1daac:	bne	1dae4 <__assert_fail@plt+0xc59c>
   1dab0:	b	1dab4 <__assert_fail@plt+0xc56c>
   1dab4:	ldr	r0, [fp, #8]
   1dab8:	add	r0, r0, #0
   1dabc:	movw	r1, #0
   1dac0:	cmp	r1, r0
   1dac4:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1dac8:	b	1db2c <__assert_fail@plt+0xc5e4>
   1dacc:	ldr	r0, [fp, #8]
   1dad0:	sub	r0, r0, #1
   1dad4:	mvn	r1, #0
   1dad8:	cmp	r1, r0
   1dadc:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1dae0:	b	1db2c <__assert_fail@plt+0xc5e4>
   1dae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dae8:	movw	r1, #0
   1daec:	sdiv	r0, r1, r0
   1daf0:	ldr	r1, [fp, #8]
   1daf4:	cmp	r0, r1
   1daf8:	blt	1db18 <__assert_fail@plt+0xc5d0>
   1dafc:	b	1db2c <__assert_fail@plt+0xc5e4>
   1db00:	ldr	r0, [fp, #8]
   1db04:	mvn	r1, #0
   1db08:	udiv	r0, r1, r0
   1db0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db10:	cmp	r0, r1
   1db14:	bcs	1db2c <__assert_fail@plt+0xc5e4>
   1db18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db1c:	ldr	r1, [fp, #8]
   1db20:	mul	r0, r0, r1
   1db24:	str	r0, [fp, #-28]	; 0xffffffe4
   1db28:	b	1e3d8 <__assert_fail@plt+0xce90>
   1db2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db30:	ldr	r1, [fp, #8]
   1db34:	mul	r0, r0, r1
   1db38:	str	r0, [fp, #-28]	; 0xffffffe4
   1db3c:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1db40:	b	1db44 <__assert_fail@plt+0xc5fc>
   1db44:	b	1db48 <__assert_fail@plt+0xc600>
   1db48:	ldr	r0, [fp, #8]
   1db4c:	cmp	r0, #0
   1db50:	bge	1dc54 <__assert_fail@plt+0xc70c>
   1db54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db58:	cmp	r0, #0
   1db5c:	bge	1dbe8 <__assert_fail@plt+0xc6a0>
   1db60:	b	1db64 <__assert_fail@plt+0xc61c>
   1db64:	ldr	r0, [pc, #1056]	; 1df8c <__assert_fail@plt+0xca44>
   1db68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db6c:	ldr	r2, [fp, #8]
   1db70:	sdiv	r0, r0, r2
   1db74:	cmp	r1, r0
   1db78:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1db7c:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1db80:	b	1db84 <__assert_fail@plt+0xc63c>
   1db84:	ldr	r0, [pc, #1172]	; 1e020 <__assert_fail@plt+0xcad8>
   1db88:	ldr	r1, [fp, #8]
   1db8c:	cmp	r1, r0
   1db90:	blt	1dba8 <__assert_fail@plt+0xc660>
   1db94:	b	1dbb4 <__assert_fail@plt+0xc66c>
   1db98:	ldr	r0, [fp, #8]
   1db9c:	movw	r1, #0
   1dba0:	cmp	r1, r0
   1dba4:	bge	1dbb4 <__assert_fail@plt+0xc66c>
   1dba8:	movw	r0, #0
   1dbac:	str	r0, [fp, #-64]	; 0xffffffc0
   1dbb0:	b	1dbcc <__assert_fail@plt+0xc684>
   1dbb4:	ldr	r0, [pc, #976]	; 1df8c <__assert_fail@plt+0xca44>
   1dbb8:	ldr	r1, [fp, #8]
   1dbbc:	movw	r2, #0
   1dbc0:	sub	r1, r2, r1
   1dbc4:	sdiv	r0, r0, r1
   1dbc8:	str	r0, [fp, #-64]	; 0xffffffc0
   1dbcc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1dbd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbd4:	mvn	r2, #0
   1dbd8:	sub	r1, r2, r1
   1dbdc:	cmp	r0, r1
   1dbe0:	ble	1dce4 <__assert_fail@plt+0xc79c>
   1dbe4:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dbe8:	ldr	r0, [fp, #8]
   1dbec:	cmn	r0, #1
   1dbf0:	bne	1dc38 <__assert_fail@plt+0xc6f0>
   1dbf4:	b	1dbf8 <__assert_fail@plt+0xc6b0>
   1dbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbfc:	add	r0, r0, #-2147483648	; 0x80000000
   1dc00:	movw	r1, #0
   1dc04:	cmp	r1, r0
   1dc08:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dc0c:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc14:	movw	r1, #0
   1dc18:	cmp	r1, r0
   1dc1c:	bge	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc20:	ldr	r0, [pc, #868]	; 1df8c <__assert_fail@plt+0xca44>
   1dc24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc28:	sub	r1, r1, #1
   1dc2c:	cmp	r0, r1
   1dc30:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dc34:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc38:	ldr	r0, [pc, #3136]	; 1e880 <__assert_fail@plt+0xd338>
   1dc3c:	ldr	r1, [fp, #8]
   1dc40:	sdiv	r0, r0, r1
   1dc44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc48:	cmp	r0, r1
   1dc4c:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dc50:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc54:	ldr	r0, [fp, #8]
   1dc58:	cmp	r0, #0
   1dc5c:	bne	1dc64 <__assert_fail@plt+0xc71c>
   1dc60:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc68:	cmp	r0, #0
   1dc6c:	bge	1dccc <__assert_fail@plt+0xc784>
   1dc70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc74:	cmn	r0, #1
   1dc78:	bne	1dcb0 <__assert_fail@plt+0xc768>
   1dc7c:	b	1dc80 <__assert_fail@plt+0xc738>
   1dc80:	ldr	r0, [fp, #8]
   1dc84:	add	r0, r0, #-2147483648	; 0x80000000
   1dc88:	movw	r1, #0
   1dc8c:	cmp	r1, r0
   1dc90:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dc94:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dc98:	ldr	r0, [pc, #748]	; 1df8c <__assert_fail@plt+0xca44>
   1dc9c:	ldr	r1, [fp, #8]
   1dca0:	sub	r1, r1, #1
   1dca4:	cmp	r0, r1
   1dca8:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dcac:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dcb0:	ldr	r0, [pc, #3016]	; 1e880 <__assert_fail@plt+0xd338>
   1dcb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcb8:	sdiv	r0, r0, r1
   1dcbc:	ldr	r1, [fp, #8]
   1dcc0:	cmp	r0, r1
   1dcc4:	blt	1dce4 <__assert_fail@plt+0xc79c>
   1dcc8:	b	1dcf8 <__assert_fail@plt+0xc7b0>
   1dccc:	ldr	r0, [pc, #696]	; 1df8c <__assert_fail@plt+0xca44>
   1dcd0:	ldr	r1, [fp, #8]
   1dcd4:	sdiv	r0, r0, r1
   1dcd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcdc:	cmp	r0, r1
   1dce0:	bge	1dcf8 <__assert_fail@plt+0xc7b0>
   1dce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dce8:	ldr	r1, [fp, #8]
   1dcec:	mul	r0, r0, r1
   1dcf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dcf4:	b	1e3d8 <__assert_fail@plt+0xce90>
   1dcf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcfc:	ldr	r1, [fp, #8]
   1dd00:	mul	r0, r0, r1
   1dd04:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd08:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1dd0c:	ldr	r0, [fp, #8]
   1dd10:	cmp	r0, #0
   1dd14:	bge	1de24 <__assert_fail@plt+0xc8dc>
   1dd18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd1c:	cmp	r0, #0
   1dd20:	bge	1ddac <__assert_fail@plt+0xc864>
   1dd24:	b	1dd44 <__assert_fail@plt+0xc7fc>
   1dd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd2c:	ldr	r1, [fp, #8]
   1dd30:	mvn	r2, #0
   1dd34:	udiv	r1, r2, r1
   1dd38:	cmp	r0, r1
   1dd3c:	bcc	1dec0 <__assert_fail@plt+0xc978>
   1dd40:	b	1ded4 <__assert_fail@plt+0xc98c>
   1dd44:	b	1dd48 <__assert_fail@plt+0xc800>
   1dd48:	ldr	r0, [pc, #720]	; 1e020 <__assert_fail@plt+0xcad8>
   1dd4c:	ldr	r1, [fp, #8]
   1dd50:	cmp	r1, r0
   1dd54:	blt	1dd6c <__assert_fail@plt+0xc824>
   1dd58:	b	1dd78 <__assert_fail@plt+0xc830>
   1dd5c:	ldr	r0, [fp, #8]
   1dd60:	movw	r1, #0
   1dd64:	cmp	r1, r0
   1dd68:	bge	1dd78 <__assert_fail@plt+0xc830>
   1dd6c:	movw	r0, #1
   1dd70:	str	r0, [fp, #-68]	; 0xffffffbc
   1dd74:	b	1dd90 <__assert_fail@plt+0xc848>
   1dd78:	ldr	r0, [fp, #8]
   1dd7c:	movw	r1, #0
   1dd80:	sub	r0, r1, r0
   1dd84:	mvn	r1, #0
   1dd88:	udiv	r0, r1, r0
   1dd8c:	str	r0, [fp, #-68]	; 0xffffffbc
   1dd90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1dd94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd98:	mvn	r2, #0
   1dd9c:	sub	r1, r2, r1
   1dda0:	cmp	r0, r1
   1dda4:	bls	1dec0 <__assert_fail@plt+0xc978>
   1dda8:	b	1ded4 <__assert_fail@plt+0xc98c>
   1ddac:	b	1ddb0 <__assert_fail@plt+0xc868>
   1ddb0:	b	1de08 <__assert_fail@plt+0xc8c0>
   1ddb4:	b	1de08 <__assert_fail@plt+0xc8c0>
   1ddb8:	ldr	r0, [fp, #8]
   1ddbc:	cmn	r0, #1
   1ddc0:	bne	1de08 <__assert_fail@plt+0xc8c0>
   1ddc4:	b	1ddc8 <__assert_fail@plt+0xc880>
   1ddc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddcc:	add	r0, r0, #0
   1ddd0:	movw	r1, #0
   1ddd4:	cmp	r1, r0
   1ddd8:	blt	1dec0 <__assert_fail@plt+0xc978>
   1dddc:	b	1ded4 <__assert_fail@plt+0xc98c>
   1dde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dde4:	movw	r1, #0
   1dde8:	cmp	r1, r0
   1ddec:	bge	1ded4 <__assert_fail@plt+0xc98c>
   1ddf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddf4:	sub	r0, r0, #1
   1ddf8:	mvn	r1, #0
   1ddfc:	cmp	r1, r0
   1de00:	blt	1dec0 <__assert_fail@plt+0xc978>
   1de04:	b	1ded4 <__assert_fail@plt+0xc98c>
   1de08:	ldr	r0, [fp, #8]
   1de0c:	movw	r1, #0
   1de10:	sdiv	r0, r1, r0
   1de14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de18:	cmp	r0, r1
   1de1c:	blt	1dec0 <__assert_fail@plt+0xc978>
   1de20:	b	1ded4 <__assert_fail@plt+0xc98c>
   1de24:	ldr	r0, [fp, #8]
   1de28:	cmp	r0, #0
   1de2c:	bne	1de34 <__assert_fail@plt+0xc8ec>
   1de30:	b	1ded4 <__assert_fail@plt+0xc98c>
   1de34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de38:	cmp	r0, #0
   1de3c:	bge	1dea8 <__assert_fail@plt+0xc960>
   1de40:	b	1de44 <__assert_fail@plt+0xc8fc>
   1de44:	b	1de8c <__assert_fail@plt+0xc944>
   1de48:	b	1de8c <__assert_fail@plt+0xc944>
   1de4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de50:	cmn	r0, #1
   1de54:	bne	1de8c <__assert_fail@plt+0xc944>
   1de58:	b	1de5c <__assert_fail@plt+0xc914>
   1de5c:	ldr	r0, [fp, #8]
   1de60:	add	r0, r0, #0
   1de64:	movw	r1, #0
   1de68:	cmp	r1, r0
   1de6c:	blt	1dec0 <__assert_fail@plt+0xc978>
   1de70:	b	1ded4 <__assert_fail@plt+0xc98c>
   1de74:	ldr	r0, [fp, #8]
   1de78:	sub	r0, r0, #1
   1de7c:	mvn	r1, #0
   1de80:	cmp	r1, r0
   1de84:	blt	1dec0 <__assert_fail@plt+0xc978>
   1de88:	b	1ded4 <__assert_fail@plt+0xc98c>
   1de8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de90:	movw	r1, #0
   1de94:	sdiv	r0, r1, r0
   1de98:	ldr	r1, [fp, #8]
   1de9c:	cmp	r0, r1
   1dea0:	blt	1dec0 <__assert_fail@plt+0xc978>
   1dea4:	b	1ded4 <__assert_fail@plt+0xc98c>
   1dea8:	ldr	r0, [fp, #8]
   1deac:	mvn	r1, #0
   1deb0:	udiv	r0, r1, r0
   1deb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1deb8:	cmp	r0, r1
   1debc:	bcs	1ded4 <__assert_fail@plt+0xc98c>
   1dec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dec4:	ldr	r1, [fp, #8]
   1dec8:	mul	r0, r0, r1
   1decc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ded0:	b	1e3d8 <__assert_fail@plt+0xce90>
   1ded4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ded8:	ldr	r1, [fp, #8]
   1dedc:	mul	r0, r0, r1
   1dee0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dee4:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1dee8:	b	1deec <__assert_fail@plt+0xc9a4>
   1deec:	ldr	r0, [fp, #8]
   1def0:	cmp	r0, #0
   1def4:	bge	1e084 <__assert_fail@plt+0xcb3c>
   1def8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1defc:	cmp	r0, #0
   1df00:	bge	1dfec <__assert_fail@plt+0xcaa4>
   1df04:	b	1df08 <__assert_fail@plt+0xc9c0>
   1df08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df0c:	ldr	r1, [fp, #8]
   1df10:	asr	r3, r1, #31
   1df14:	mvn	r2, #0
   1df18:	mvn	ip, #-2147483648	; 0x80000000
   1df1c:	str	r0, [fp, #-72]	; 0xffffffb8
   1df20:	mov	r0, r2
   1df24:	str	r1, [fp, #-76]	; 0xffffffb4
   1df28:	mov	r1, ip
   1df2c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1df30:	bl	246f0 <__assert_fail@plt+0x131a8>
   1df34:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1df38:	subs	r0, r2, r0
   1df3c:	rscs	r1, r1, r2, asr #31
   1df40:	str	r0, [fp, #-80]	; 0xffffffb0
   1df44:	str	r1, [fp, #-84]	; 0xffffffac
   1df48:	blt	1e164 <__assert_fail@plt+0xcc1c>
   1df4c:	b	1e178 <__assert_fail@plt+0xcc30>
   1df50:	b	1df54 <__assert_fail@plt+0xca0c>
   1df54:	ldr	r0, [pc, #196]	; 1e020 <__assert_fail@plt+0xcad8>
   1df58:	ldr	r1, [fp, #8]
   1df5c:	cmp	r1, r0
   1df60:	blt	1df78 <__assert_fail@plt+0xca30>
   1df64:	b	1df90 <__assert_fail@plt+0xca48>
   1df68:	ldr	r0, [fp, #8]
   1df6c:	movw	r1, #0
   1df70:	cmp	r1, r0
   1df74:	bge	1df90 <__assert_fail@plt+0xca48>
   1df78:	mov	r0, #0
   1df7c:	mvn	r1, #0
   1df80:	str	r1, [fp, #-88]	; 0xffffffa8
   1df84:	str	r0, [fp, #-92]	; 0xffffffa4
   1df88:	b	1dfc4 <__assert_fail@plt+0xca7c>
   1df8c:	svcvc	0x00ffffff
   1df90:	ldr	r0, [fp, #8]
   1df94:	rsb	r0, r0, #0
   1df98:	asr	r3, r0, #31
   1df9c:	mvn	r1, #0
   1dfa0:	mvn	r2, #-2147483648	; 0x80000000
   1dfa4:	str	r0, [fp, #-96]	; 0xffffffa0
   1dfa8:	mov	r0, r1
   1dfac:	mov	r1, r2
   1dfb0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1dfb4:	bl	246f0 <__assert_fail@plt+0x131a8>
   1dfb8:	str	r0, [fp, #-88]	; 0xffffffa8
   1dfbc:	str	r1, [fp, #-92]	; 0xffffffa4
   1dfc0:	b	1dfc4 <__assert_fail@plt+0xca7c>
   1dfc4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1dfc8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1dfcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dfd0:	mvn	r2, r2
   1dfd4:	subs	r1, r2, r1
   1dfd8:	rscs	r0, r0, r2, asr #31
   1dfdc:	str	r1, [fp, #-100]	; 0xffffff9c
   1dfe0:	str	r0, [fp, #-104]	; 0xffffff98
   1dfe4:	bge	1e164 <__assert_fail@plt+0xcc1c>
   1dfe8:	b	1e178 <__assert_fail@plt+0xcc30>
   1dfec:	ldr	r0, [fp, #8]
   1dff0:	cmn	r0, #1
   1dff4:	bne	1e044 <__assert_fail@plt+0xcafc>
   1dff8:	b	1dffc <__assert_fail@plt+0xcab4>
   1dffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e000:	mov	r1, #-2147483648	; 0x80000000
   1e004:	add	r1, r1, r0, asr #31
   1e008:	rsbs	r0, r0, #0
   1e00c:	rscs	r1, r1, #0
   1e010:	str	r0, [fp, #-108]	; 0xffffff94
   1e014:	str	r1, [fp, #-112]	; 0xffffff90
   1e018:	blt	1e164 <__assert_fail@plt+0xcc1c>
   1e01c:	b	1e178 <__assert_fail@plt+0xcc30>
   1e020:	andhi	r0, r0, r1
   1e024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e028:	movw	r1, #0
   1e02c:	cmp	r1, r0
   1e030:	bge	1e178 <__assert_fail@plt+0xcc30>
   1e034:	mov	r0, #0
   1e038:	cmp	r0, #0
   1e03c:	bne	1e164 <__assert_fail@plt+0xcc1c>
   1e040:	b	1e178 <__assert_fail@plt+0xcc30>
   1e044:	ldr	r0, [fp, #8]
   1e048:	asr	r3, r0, #31
   1e04c:	mov	r1, #0
   1e050:	mov	r2, #-2147483648	; 0x80000000
   1e054:	str	r0, [fp, #-116]	; 0xffffff8c
   1e058:	mov	r0, r1
   1e05c:	mov	r1, r2
   1e060:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1e064:	bl	246f0 <__assert_fail@plt+0x131a8>
   1e068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e06c:	subs	r0, r0, r2
   1e070:	sbcs	r1, r1, r2, asr #31
   1e074:	str	r0, [fp, #-120]	; 0xffffff88
   1e078:	str	r1, [fp, #-124]	; 0xffffff84
   1e07c:	blt	1e164 <__assert_fail@plt+0xcc1c>
   1e080:	b	1e178 <__assert_fail@plt+0xcc30>
   1e084:	ldr	r0, [fp, #8]
   1e088:	cmp	r0, #0
   1e08c:	bne	1e094 <__assert_fail@plt+0xcb4c>
   1e090:	b	1e178 <__assert_fail@plt+0xcc30>
   1e094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e098:	cmp	r0, #0
   1e09c:	bge	1e124 <__assert_fail@plt+0xcbdc>
   1e0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0a4:	cmn	r0, #1
   1e0a8:	bne	1e0e4 <__assert_fail@plt+0xcb9c>
   1e0ac:	b	1e0b0 <__assert_fail@plt+0xcb68>
   1e0b0:	ldr	r0, [fp, #8]
   1e0b4:	mov	r1, #-2147483648	; 0x80000000
   1e0b8:	add	r1, r1, r0, asr #31
   1e0bc:	rsbs	r0, r0, #0
   1e0c0:	rscs	r1, r1, #0
   1e0c4:	str	r0, [fp, #-128]	; 0xffffff80
   1e0c8:	str	r1, [fp, #-132]	; 0xffffff7c
   1e0cc:	blt	1e164 <__assert_fail@plt+0xcc1c>
   1e0d0:	b	1e178 <__assert_fail@plt+0xcc30>
   1e0d4:	mov	r0, #0
   1e0d8:	cmp	r0, #0
   1e0dc:	bne	1e164 <__assert_fail@plt+0xcc1c>
   1e0e0:	b	1e178 <__assert_fail@plt+0xcc30>
   1e0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0e8:	asr	r3, r0, #31
   1e0ec:	mov	r1, #0
   1e0f0:	mov	r2, #-2147483648	; 0x80000000
   1e0f4:	str	r0, [fp, #-136]	; 0xffffff78
   1e0f8:	mov	r0, r1
   1e0fc:	mov	r1, r2
   1e100:	ldr	r2, [fp, #-136]	; 0xffffff78
   1e104:	bl	246f0 <__assert_fail@plt+0x131a8>
   1e108:	ldr	r2, [fp, #8]
   1e10c:	subs	r0, r0, r2
   1e110:	sbcs	r1, r1, r2, asr #31
   1e114:	str	r0, [fp, #-140]	; 0xffffff74
   1e118:	str	r1, [fp, #-144]	; 0xffffff70
   1e11c:	blt	1e164 <__assert_fail@plt+0xcc1c>
   1e120:	b	1e178 <__assert_fail@plt+0xcc30>
   1e124:	ldr	r0, [fp, #8]
   1e128:	asr	r3, r0, #31
   1e12c:	mvn	r1, #0
   1e130:	mvn	r2, #-2147483648	; 0x80000000
   1e134:	str	r0, [fp, #-148]	; 0xffffff6c
   1e138:	mov	r0, r1
   1e13c:	mov	r1, r2
   1e140:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1e144:	bl	246f0 <__assert_fail@plt+0x131a8>
   1e148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e14c:	subs	r0, r0, r2
   1e150:	sbcs	r1, r1, r2, asr #31
   1e154:	str	r0, [fp, #-152]	; 0xffffff68
   1e158:	str	r1, [fp, #-156]	; 0xffffff64
   1e15c:	bge	1e178 <__assert_fail@plt+0xcc30>
   1e160:	b	1e164 <__assert_fail@plt+0xcc1c>
   1e164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e168:	ldr	r1, [fp, #8]
   1e16c:	mul	r0, r0, r1
   1e170:	str	r0, [fp, #-28]	; 0xffffffe4
   1e174:	b	1e3d8 <__assert_fail@plt+0xce90>
   1e178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e17c:	ldr	r1, [fp, #8]
   1e180:	mul	r0, r0, r1
   1e184:	str	r0, [fp, #-28]	; 0xffffffe4
   1e188:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1e18c:	ldr	r0, [fp, #8]
   1e190:	cmp	r0, #0
   1e194:	bge	1e2f4 <__assert_fail@plt+0xcdac>
   1e198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e19c:	cmp	r0, #0
   1e1a0:	bge	1e27c <__assert_fail@plt+0xcd34>
   1e1a4:	b	1e1ec <__assert_fail@plt+0xcca4>
   1e1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1ac:	ldr	r1, [fp, #8]
   1e1b0:	asr	r3, r1, #31
   1e1b4:	mvn	r2, #0
   1e1b8:	str	r0, [fp, #-160]	; 0xffffff60
   1e1bc:	mov	r0, r2
   1e1c0:	str	r1, [fp, #-164]	; 0xffffff5c
   1e1c4:	mov	r1, r2
   1e1c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e1cc:	bl	247c4 <__assert_fail@plt+0x1327c>
   1e1d0:	ldr	r2, [fp, #-160]	; 0xffffff60
   1e1d4:	subs	r0, r2, r0
   1e1d8:	rscs	r1, r1, r2, asr #31
   1e1dc:	str	r0, [fp, #-168]	; 0xffffff58
   1e1e0:	str	r1, [fp, #-172]	; 0xffffff54
   1e1e4:	bcc	1e3b0 <__assert_fail@plt+0xce68>
   1e1e8:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e1ec:	b	1e1f0 <__assert_fail@plt+0xcca8>
   1e1f0:	ldr	r0, [pc, #-472]	; 1e020 <__assert_fail@plt+0xcad8>
   1e1f4:	ldr	r1, [fp, #8]
   1e1f8:	cmp	r1, r0
   1e1fc:	blt	1e214 <__assert_fail@plt+0xcccc>
   1e200:	b	1e228 <__assert_fail@plt+0xcce0>
   1e204:	ldr	r0, [fp, #8]
   1e208:	movw	r1, #0
   1e20c:	cmp	r1, r0
   1e210:	bge	1e228 <__assert_fail@plt+0xcce0>
   1e214:	mov	r0, #1
   1e218:	mvn	r1, #0
   1e21c:	str	r1, [fp, #-176]	; 0xffffff50
   1e220:	str	r0, [fp, #-180]	; 0xffffff4c
   1e224:	b	1e254 <__assert_fail@plt+0xcd0c>
   1e228:	ldr	r0, [fp, #8]
   1e22c:	rsb	r0, r0, #0
   1e230:	asr	r3, r0, #31
   1e234:	mvn	r1, #0
   1e238:	str	r0, [fp, #-184]	; 0xffffff48
   1e23c:	mov	r0, r1
   1e240:	ldr	r2, [fp, #-184]	; 0xffffff48
   1e244:	bl	247c4 <__assert_fail@plt+0x1327c>
   1e248:	str	r0, [fp, #-176]	; 0xffffff50
   1e24c:	str	r1, [fp, #-180]	; 0xffffff4c
   1e250:	b	1e254 <__assert_fail@plt+0xcd0c>
   1e254:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1e258:	ldr	r1, [fp, #-176]	; 0xffffff50
   1e25c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e260:	mvn	r2, r2
   1e264:	subs	r1, r2, r1
   1e268:	rscs	r0, r0, r2, asr #31
   1e26c:	str	r1, [sp, #188]	; 0xbc
   1e270:	str	r0, [sp, #184]	; 0xb8
   1e274:	bcs	1e3b0 <__assert_fail@plt+0xce68>
   1e278:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e27c:	b	1e280 <__assert_fail@plt+0xcd38>
   1e280:	b	1e2d8 <__assert_fail@plt+0xcd90>
   1e284:	b	1e2d8 <__assert_fail@plt+0xcd90>
   1e288:	ldr	r0, [fp, #8]
   1e28c:	cmn	r0, #1
   1e290:	bne	1e2d8 <__assert_fail@plt+0xcd90>
   1e294:	b	1e298 <__assert_fail@plt+0xcd50>
   1e298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e29c:	add	r0, r0, #0
   1e2a0:	movw	r1, #0
   1e2a4:	cmp	r1, r0
   1e2a8:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e2ac:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2b4:	movw	r1, #0
   1e2b8:	cmp	r1, r0
   1e2bc:	bge	1e3c4 <__assert_fail@plt+0xce7c>
   1e2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2c4:	sub	r0, r0, #1
   1e2c8:	mvn	r1, #0
   1e2cc:	cmp	r1, r0
   1e2d0:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e2d4:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e2d8:	ldr	r0, [fp, #8]
   1e2dc:	movw	r1, #0
   1e2e0:	sdiv	r0, r1, r0
   1e2e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2e8:	cmp	r0, r1
   1e2ec:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e2f0:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e2f4:	ldr	r0, [fp, #8]
   1e2f8:	cmp	r0, #0
   1e2fc:	bne	1e304 <__assert_fail@plt+0xcdbc>
   1e300:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e308:	cmp	r0, #0
   1e30c:	bge	1e378 <__assert_fail@plt+0xce30>
   1e310:	b	1e314 <__assert_fail@plt+0xcdcc>
   1e314:	b	1e35c <__assert_fail@plt+0xce14>
   1e318:	b	1e35c <__assert_fail@plt+0xce14>
   1e31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e320:	cmn	r0, #1
   1e324:	bne	1e35c <__assert_fail@plt+0xce14>
   1e328:	b	1e32c <__assert_fail@plt+0xcde4>
   1e32c:	ldr	r0, [fp, #8]
   1e330:	add	r0, r0, #0
   1e334:	movw	r1, #0
   1e338:	cmp	r1, r0
   1e33c:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e340:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e344:	ldr	r0, [fp, #8]
   1e348:	sub	r0, r0, #1
   1e34c:	mvn	r1, #0
   1e350:	cmp	r1, r0
   1e354:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e358:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e360:	movw	r1, #0
   1e364:	sdiv	r0, r1, r0
   1e368:	ldr	r1, [fp, #8]
   1e36c:	cmp	r0, r1
   1e370:	blt	1e3b0 <__assert_fail@plt+0xce68>
   1e374:	b	1e3c4 <__assert_fail@plt+0xce7c>
   1e378:	ldr	r0, [fp, #8]
   1e37c:	asr	r3, r0, #31
   1e380:	mvn	r1, #0
   1e384:	str	r0, [sp, #180]	; 0xb4
   1e388:	mov	r0, r1
   1e38c:	ldr	r2, [sp, #180]	; 0xb4
   1e390:	bl	247c4 <__assert_fail@plt+0x1327c>
   1e394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e398:	subs	r0, r0, r2
   1e39c:	sbcs	r1, r1, r2, asr #31
   1e3a0:	str	r0, [sp, #176]	; 0xb0
   1e3a4:	str	r1, [sp, #172]	; 0xac
   1e3a8:	bcs	1e3c4 <__assert_fail@plt+0xce7c>
   1e3ac:	b	1e3b0 <__assert_fail@plt+0xce68>
   1e3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3b4:	ldr	r1, [fp, #8]
   1e3b8:	mul	r0, r0, r1
   1e3bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3c0:	b	1e3d8 <__assert_fail@plt+0xce90>
   1e3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c8:	ldr	r1, [fp, #8]
   1e3cc:	mul	r0, r0, r1
   1e3d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3d4:	b	1e3e8 <__assert_fail@plt+0xcea0>
   1e3d8:	ldr	r0, [pc, #-1108]	; 1df8c <__assert_fail@plt+0xca44>
   1e3dc:	str	r0, [sp, #168]	; 0xa8
   1e3e0:	b	1e408 <__assert_fail@plt+0xcec0>
   1e3e4:			; <UNDEFINED> instruction: 0xffff8000
   1e3e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3ec:	cmp	r0, #64	; 0x40
   1e3f0:	movw	r0, #0
   1e3f4:	movlt	r0, #1
   1e3f8:	tst	r0, #1
   1e3fc:	movw	r0, #64	; 0x40
   1e400:	moveq	r0, #0
   1e404:	str	r0, [sp, #168]	; 0xa8
   1e408:	ldr	r0, [sp, #168]	; 0xa8
   1e40c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e414:	cmp	r0, #0
   1e418:	beq	1e448 <__assert_fail@plt+0xcf00>
   1e41c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e420:	ldr	r1, [fp, #8]
   1e424:	sdiv	r0, r0, r1
   1e428:	str	r0, [fp, #-24]	; 0xffffffe8
   1e42c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e430:	mov	r1, r0
   1e434:	ldr	r2, [fp, #8]
   1e438:	sdiv	r3, r0, r2
   1e43c:	mls	r0, r3, r2, r0
   1e440:	sub	r0, r1, r0
   1e444:	str	r0, [fp, #-28]	; 0xffffffe4
   1e448:	ldr	r0, [fp, #-4]
   1e44c:	movw	r1, #0
   1e450:	cmp	r0, r1
   1e454:	bne	1e464 <__assert_fail@plt+0xcf1c>
   1e458:	ldr	r0, [fp, #-8]
   1e45c:	movw	r1, #0
   1e460:	str	r1, [r0]
   1e464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e468:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e46c:	sub	r0, r0, r1
   1e470:	ldr	r1, [fp, #-12]
   1e474:	cmp	r0, r1
   1e478:	bge	1f8b0 <__assert_fail@plt+0xe368>
   1e47c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e480:	ldr	r1, [fp, #-12]
   1e484:	add	r1, r0, r1
   1e488:	mov	r2, #1
   1e48c:	cmp	r1, r0
   1e490:	movwvc	r2, #0
   1e494:	str	r1, [fp, #-24]	; 0xffffffe8
   1e498:	tst	r2, #1
   1e49c:	bne	1f8ac <__assert_fail@plt+0xe364>
   1e4a0:	ldr	r0, [fp, #-16]
   1e4a4:	movw	r1, #0
   1e4a8:	cmp	r1, r0
   1e4ac:	bgt	1e4c0 <__assert_fail@plt+0xcf78>
   1e4b0:	ldr	r0, [fp, #-16]
   1e4b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4b8:	cmp	r0, r1
   1e4bc:	blt	1f8ac <__assert_fail@plt+0xe364>
   1e4c0:	b	1e89c <__assert_fail@plt+0xd354>
   1e4c4:	b	1e4c8 <__assert_fail@plt+0xcf80>
   1e4c8:	ldr	r0, [fp, #8]
   1e4cc:	cmp	r0, #0
   1e4d0:	bge	1e5e4 <__assert_fail@plt+0xd09c>
   1e4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4d8:	cmp	r0, #0
   1e4dc:	bge	1e568 <__assert_fail@plt+0xd020>
   1e4e0:	b	1e4e4 <__assert_fail@plt+0xcf9c>
   1e4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e8:	ldr	r1, [fp, #8]
   1e4ec:	movw	r2, #127	; 0x7f
   1e4f0:	sdiv	r1, r2, r1
   1e4f4:	cmp	r0, r1
   1e4f8:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e4fc:	b	1e69c <__assert_fail@plt+0xd154>
   1e500:	b	1e504 <__assert_fail@plt+0xcfbc>
   1e504:	ldr	r0, [pc, #-1260]	; 1e020 <__assert_fail@plt+0xcad8>
   1e508:	ldr	r1, [fp, #8]
   1e50c:	cmp	r1, r0
   1e510:	blt	1e528 <__assert_fail@plt+0xcfe0>
   1e514:	b	1e534 <__assert_fail@plt+0xcfec>
   1e518:	ldr	r0, [fp, #8]
   1e51c:	movw	r1, #0
   1e520:	cmp	r1, r0
   1e524:	bge	1e534 <__assert_fail@plt+0xcfec>
   1e528:	movw	r0, #0
   1e52c:	str	r0, [sp, #164]	; 0xa4
   1e530:	b	1e54c <__assert_fail@plt+0xd004>
   1e534:	ldr	r0, [fp, #8]
   1e538:	movw	r1, #0
   1e53c:	sub	r0, r1, r0
   1e540:	movw	r1, #127	; 0x7f
   1e544:	sdiv	r0, r1, r0
   1e548:	str	r0, [sp, #164]	; 0xa4
   1e54c:	ldr	r0, [sp, #164]	; 0xa4
   1e550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e554:	mvn	r2, #0
   1e558:	sub	r1, r2, r1
   1e55c:	cmp	r0, r1
   1e560:	ble	1e684 <__assert_fail@plt+0xd13c>
   1e564:	b	1e69c <__assert_fail@plt+0xd154>
   1e568:	b	1e56c <__assert_fail@plt+0xd024>
   1e56c:	b	1e5c8 <__assert_fail@plt+0xd080>
   1e570:	b	1e5c8 <__assert_fail@plt+0xd080>
   1e574:	ldr	r0, [fp, #8]
   1e578:	cmn	r0, #1
   1e57c:	bne	1e5c8 <__assert_fail@plt+0xd080>
   1e580:	b	1e584 <__assert_fail@plt+0xd03c>
   1e584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e588:	mvn	r1, #127	; 0x7f
   1e58c:	add	r0, r0, r1
   1e590:	movw	r1, #0
   1e594:	cmp	r1, r0
   1e598:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e59c:	b	1e69c <__assert_fail@plt+0xd154>
   1e5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5a4:	movw	r1, #0
   1e5a8:	cmp	r1, r0
   1e5ac:	bge	1e69c <__assert_fail@plt+0xd154>
   1e5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5b4:	sub	r0, r0, #1
   1e5b8:	movw	r1, #127	; 0x7f
   1e5bc:	cmp	r1, r0
   1e5c0:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e5c4:	b	1e69c <__assert_fail@plt+0xd154>
   1e5c8:	ldr	r0, [fp, #8]
   1e5cc:	mvn	r1, #127	; 0x7f
   1e5d0:	sdiv	r0, r1, r0
   1e5d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5d8:	cmp	r0, r1
   1e5dc:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e5e0:	b	1e69c <__assert_fail@plt+0xd154>
   1e5e4:	ldr	r0, [fp, #8]
   1e5e8:	cmp	r0, #0
   1e5ec:	bne	1e5f4 <__assert_fail@plt+0xd0ac>
   1e5f0:	b	1e69c <__assert_fail@plt+0xd154>
   1e5f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5f8:	cmp	r0, #0
   1e5fc:	bge	1e66c <__assert_fail@plt+0xd124>
   1e600:	b	1e604 <__assert_fail@plt+0xd0bc>
   1e604:	b	1e650 <__assert_fail@plt+0xd108>
   1e608:	b	1e650 <__assert_fail@plt+0xd108>
   1e60c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e610:	cmn	r0, #1
   1e614:	bne	1e650 <__assert_fail@plt+0xd108>
   1e618:	b	1e61c <__assert_fail@plt+0xd0d4>
   1e61c:	ldr	r0, [fp, #8]
   1e620:	mvn	r1, #127	; 0x7f
   1e624:	add	r0, r0, r1
   1e628:	movw	r1, #0
   1e62c:	cmp	r1, r0
   1e630:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e634:	b	1e69c <__assert_fail@plt+0xd154>
   1e638:	ldr	r0, [fp, #8]
   1e63c:	sub	r0, r0, #1
   1e640:	movw	r1, #127	; 0x7f
   1e644:	cmp	r1, r0
   1e648:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e64c:	b	1e69c <__assert_fail@plt+0xd154>
   1e650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e654:	mvn	r1, #127	; 0x7f
   1e658:	sdiv	r0, r1, r0
   1e65c:	ldr	r1, [fp, #8]
   1e660:	cmp	r0, r1
   1e664:	blt	1e684 <__assert_fail@plt+0xd13c>
   1e668:	b	1e69c <__assert_fail@plt+0xd154>
   1e66c:	ldr	r0, [fp, #8]
   1e670:	movw	r1, #127	; 0x7f
   1e674:	sdiv	r0, r1, r0
   1e678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e67c:	cmp	r0, r1
   1e680:	bge	1e69c <__assert_fail@plt+0xd154>
   1e684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e688:	ldr	r1, [fp, #8]
   1e68c:	mul	r0, r0, r1
   1e690:	sxtb	r0, r0
   1e694:	str	r0, [fp, #-28]	; 0xffffffe4
   1e698:	b	1f8ac <__assert_fail@plt+0xe364>
   1e69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6a0:	ldr	r1, [fp, #8]
   1e6a4:	mul	r0, r0, r1
   1e6a8:	sxtb	r0, r0
   1e6ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1e6b0:	b	1f8b0 <__assert_fail@plt+0xe368>
   1e6b4:	ldr	r0, [fp, #8]
   1e6b8:	cmp	r0, #0
   1e6bc:	bge	1e7cc <__assert_fail@plt+0xd284>
   1e6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6c4:	cmp	r0, #0
   1e6c8:	bge	1e754 <__assert_fail@plt+0xd20c>
   1e6cc:	b	1e6d0 <__assert_fail@plt+0xd188>
   1e6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d4:	ldr	r1, [fp, #8]
   1e6d8:	movw	r2, #255	; 0xff
   1e6dc:	sdiv	r1, r2, r1
   1e6e0:	cmp	r0, r1
   1e6e4:	blt	1e868 <__assert_fail@plt+0xd320>
   1e6e8:	b	1e884 <__assert_fail@plt+0xd33c>
   1e6ec:	b	1e6f0 <__assert_fail@plt+0xd1a8>
   1e6f0:	ldr	r0, [pc, #-1752]	; 1e020 <__assert_fail@plt+0xcad8>
   1e6f4:	ldr	r1, [fp, #8]
   1e6f8:	cmp	r1, r0
   1e6fc:	blt	1e714 <__assert_fail@plt+0xd1cc>
   1e700:	b	1e720 <__assert_fail@plt+0xd1d8>
   1e704:	ldr	r0, [fp, #8]
   1e708:	movw	r1, #0
   1e70c:	cmp	r1, r0
   1e710:	bge	1e720 <__assert_fail@plt+0xd1d8>
   1e714:	movw	r0, #0
   1e718:	str	r0, [sp, #160]	; 0xa0
   1e71c:	b	1e738 <__assert_fail@plt+0xd1f0>
   1e720:	ldr	r0, [fp, #8]
   1e724:	movw	r1, #0
   1e728:	sub	r0, r1, r0
   1e72c:	movw	r1, #255	; 0xff
   1e730:	sdiv	r0, r1, r0
   1e734:	str	r0, [sp, #160]	; 0xa0
   1e738:	ldr	r0, [sp, #160]	; 0xa0
   1e73c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e740:	mvn	r2, #0
   1e744:	sub	r1, r2, r1
   1e748:	cmp	r0, r1
   1e74c:	ble	1e868 <__assert_fail@plt+0xd320>
   1e750:	b	1e884 <__assert_fail@plt+0xd33c>
   1e754:	b	1e758 <__assert_fail@plt+0xd210>
   1e758:	b	1e7b0 <__assert_fail@plt+0xd268>
   1e75c:	b	1e7b0 <__assert_fail@plt+0xd268>
   1e760:	ldr	r0, [fp, #8]
   1e764:	cmn	r0, #1
   1e768:	bne	1e7b0 <__assert_fail@plt+0xd268>
   1e76c:	b	1e770 <__assert_fail@plt+0xd228>
   1e770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e774:	add	r0, r0, #0
   1e778:	movw	r1, #0
   1e77c:	cmp	r1, r0
   1e780:	blt	1e868 <__assert_fail@plt+0xd320>
   1e784:	b	1e884 <__assert_fail@plt+0xd33c>
   1e788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e78c:	movw	r1, #0
   1e790:	cmp	r1, r0
   1e794:	bge	1e884 <__assert_fail@plt+0xd33c>
   1e798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e79c:	sub	r0, r0, #1
   1e7a0:	mvn	r1, #0
   1e7a4:	cmp	r1, r0
   1e7a8:	blt	1e868 <__assert_fail@plt+0xd320>
   1e7ac:	b	1e884 <__assert_fail@plt+0xd33c>
   1e7b0:	ldr	r0, [fp, #8]
   1e7b4:	movw	r1, #0
   1e7b8:	sdiv	r0, r1, r0
   1e7bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7c0:	cmp	r0, r1
   1e7c4:	blt	1e868 <__assert_fail@plt+0xd320>
   1e7c8:	b	1e884 <__assert_fail@plt+0xd33c>
   1e7cc:	ldr	r0, [fp, #8]
   1e7d0:	cmp	r0, #0
   1e7d4:	bne	1e7dc <__assert_fail@plt+0xd294>
   1e7d8:	b	1e884 <__assert_fail@plt+0xd33c>
   1e7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7e0:	cmp	r0, #0
   1e7e4:	bge	1e850 <__assert_fail@plt+0xd308>
   1e7e8:	b	1e7ec <__assert_fail@plt+0xd2a4>
   1e7ec:	b	1e834 <__assert_fail@plt+0xd2ec>
   1e7f0:	b	1e834 <__assert_fail@plt+0xd2ec>
   1e7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7f8:	cmn	r0, #1
   1e7fc:	bne	1e834 <__assert_fail@plt+0xd2ec>
   1e800:	b	1e804 <__assert_fail@plt+0xd2bc>
   1e804:	ldr	r0, [fp, #8]
   1e808:	add	r0, r0, #0
   1e80c:	movw	r1, #0
   1e810:	cmp	r1, r0
   1e814:	blt	1e868 <__assert_fail@plt+0xd320>
   1e818:	b	1e884 <__assert_fail@plt+0xd33c>
   1e81c:	ldr	r0, [fp, #8]
   1e820:	sub	r0, r0, #1
   1e824:	mvn	r1, #0
   1e828:	cmp	r1, r0
   1e82c:	blt	1e868 <__assert_fail@plt+0xd320>
   1e830:	b	1e884 <__assert_fail@plt+0xd33c>
   1e834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e838:	movw	r1, #0
   1e83c:	sdiv	r0, r1, r0
   1e840:	ldr	r1, [fp, #8]
   1e844:	cmp	r0, r1
   1e848:	blt	1e868 <__assert_fail@plt+0xd320>
   1e84c:	b	1e884 <__assert_fail@plt+0xd33c>
   1e850:	ldr	r0, [fp, #8]
   1e854:	movw	r1, #255	; 0xff
   1e858:	sdiv	r0, r1, r0
   1e85c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e860:	cmp	r0, r1
   1e864:	bge	1e884 <__assert_fail@plt+0xd33c>
   1e868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e86c:	ldr	r1, [fp, #8]
   1e870:	mul	r0, r0, r1
   1e874:	and	r0, r0, #255	; 0xff
   1e878:	str	r0, [fp, #-28]	; 0xffffffe4
   1e87c:	b	1f8ac <__assert_fail@plt+0xe364>
   1e880:	andhi	r0, r0, r0
   1e884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e888:	ldr	r1, [fp, #8]
   1e88c:	mul	r0, r0, r1
   1e890:	and	r0, r0, #255	; 0xff
   1e894:	str	r0, [fp, #-28]	; 0xffffffe4
   1e898:	b	1f8b0 <__assert_fail@plt+0xe368>
   1e89c:	b	1ec74 <__assert_fail@plt+0xd72c>
   1e8a0:	b	1e8a4 <__assert_fail@plt+0xd35c>
   1e8a4:	ldr	r0, [fp, #8]
   1e8a8:	cmp	r0, #0
   1e8ac:	bge	1e9c0 <__assert_fail@plt+0xd478>
   1e8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b4:	cmp	r0, #0
   1e8b8:	bge	1e944 <__assert_fail@plt+0xd3fc>
   1e8bc:	b	1e8c0 <__assert_fail@plt+0xd378>
   1e8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8c4:	ldr	r1, [fp, #8]
   1e8c8:	movw	r2, #32767	; 0x7fff
   1e8cc:	sdiv	r1, r2, r1
   1e8d0:	cmp	r0, r1
   1e8d4:	blt	1ea60 <__assert_fail@plt+0xd518>
   1e8d8:	b	1ea78 <__assert_fail@plt+0xd530>
   1e8dc:	b	1e8e0 <__assert_fail@plt+0xd398>
   1e8e0:	ldr	r0, [pc, #4084]	; 1f8dc <__assert_fail@plt+0xe394>
   1e8e4:	ldr	r1, [fp, #8]
   1e8e8:	cmp	r1, r0
   1e8ec:	blt	1e904 <__assert_fail@plt+0xd3bc>
   1e8f0:	b	1e910 <__assert_fail@plt+0xd3c8>
   1e8f4:	ldr	r0, [fp, #8]
   1e8f8:	movw	r1, #0
   1e8fc:	cmp	r1, r0
   1e900:	bge	1e910 <__assert_fail@plt+0xd3c8>
   1e904:	movw	r0, #0
   1e908:	str	r0, [sp, #156]	; 0x9c
   1e90c:	b	1e928 <__assert_fail@plt+0xd3e0>
   1e910:	ldr	r0, [fp, #8]
   1e914:	movw	r1, #0
   1e918:	sub	r0, r1, r0
   1e91c:	movw	r1, #32767	; 0x7fff
   1e920:	sdiv	r0, r1, r0
   1e924:	str	r0, [sp, #156]	; 0x9c
   1e928:	ldr	r0, [sp, #156]	; 0x9c
   1e92c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e930:	mvn	r2, #0
   1e934:	sub	r1, r2, r1
   1e938:	cmp	r0, r1
   1e93c:	ble	1ea60 <__assert_fail@plt+0xd518>
   1e940:	b	1ea78 <__assert_fail@plt+0xd530>
   1e944:	b	1e948 <__assert_fail@plt+0xd400>
   1e948:	b	1e9a4 <__assert_fail@plt+0xd45c>
   1e94c:	b	1e9a4 <__assert_fail@plt+0xd45c>
   1e950:	ldr	r0, [fp, #8]
   1e954:	cmn	r0, #1
   1e958:	bne	1e9a4 <__assert_fail@plt+0xd45c>
   1e95c:	b	1e960 <__assert_fail@plt+0xd418>
   1e960:	ldr	r0, [pc, #3964]	; 1f8e4 <__assert_fail@plt+0xe39c>
   1e964:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e968:	add	r0, r1, r0
   1e96c:	movw	r1, #0
   1e970:	cmp	r1, r0
   1e974:	blt	1ea60 <__assert_fail@plt+0xd518>
   1e978:	b	1ea78 <__assert_fail@plt+0xd530>
   1e97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e980:	movw	r1, #0
   1e984:	cmp	r1, r0
   1e988:	bge	1ea78 <__assert_fail@plt+0xd530>
   1e98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e990:	sub	r0, r0, #1
   1e994:	movw	r1, #32767	; 0x7fff
   1e998:	cmp	r1, r0
   1e99c:	blt	1ea60 <__assert_fail@plt+0xd518>
   1e9a0:	b	1ea78 <__assert_fail@plt+0xd530>
   1e9a4:	ldr	r0, [pc, #3896]	; 1f8e4 <__assert_fail@plt+0xe39c>
   1e9a8:	ldr	r1, [fp, #8]
   1e9ac:	sdiv	r0, r0, r1
   1e9b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9b4:	cmp	r0, r1
   1e9b8:	blt	1ea60 <__assert_fail@plt+0xd518>
   1e9bc:	b	1ea78 <__assert_fail@plt+0xd530>
   1e9c0:	ldr	r0, [fp, #8]
   1e9c4:	cmp	r0, #0
   1e9c8:	bne	1e9d0 <__assert_fail@plt+0xd488>
   1e9cc:	b	1ea78 <__assert_fail@plt+0xd530>
   1e9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9d4:	cmp	r0, #0
   1e9d8:	bge	1ea48 <__assert_fail@plt+0xd500>
   1e9dc:	b	1e9e0 <__assert_fail@plt+0xd498>
   1e9e0:	b	1ea2c <__assert_fail@plt+0xd4e4>
   1e9e4:	b	1ea2c <__assert_fail@plt+0xd4e4>
   1e9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9ec:	cmn	r0, #1
   1e9f0:	bne	1ea2c <__assert_fail@plt+0xd4e4>
   1e9f4:	b	1e9f8 <__assert_fail@plt+0xd4b0>
   1e9f8:	ldr	r0, [pc, #3812]	; 1f8e4 <__assert_fail@plt+0xe39c>
   1e9fc:	ldr	r1, [fp, #8]
   1ea00:	add	r0, r1, r0
   1ea04:	movw	r1, #0
   1ea08:	cmp	r1, r0
   1ea0c:	blt	1ea60 <__assert_fail@plt+0xd518>
   1ea10:	b	1ea78 <__assert_fail@plt+0xd530>
   1ea14:	ldr	r0, [fp, #8]
   1ea18:	sub	r0, r0, #1
   1ea1c:	movw	r1, #32767	; 0x7fff
   1ea20:	cmp	r1, r0
   1ea24:	blt	1ea60 <__assert_fail@plt+0xd518>
   1ea28:	b	1ea78 <__assert_fail@plt+0xd530>
   1ea2c:	ldr	r0, [pc, #3760]	; 1f8e4 <__assert_fail@plt+0xe39c>
   1ea30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea34:	sdiv	r0, r0, r1
   1ea38:	ldr	r1, [fp, #8]
   1ea3c:	cmp	r0, r1
   1ea40:	blt	1ea60 <__assert_fail@plt+0xd518>
   1ea44:	b	1ea78 <__assert_fail@plt+0xd530>
   1ea48:	ldr	r0, [fp, #8]
   1ea4c:	movw	r1, #32767	; 0x7fff
   1ea50:	sdiv	r0, r1, r0
   1ea54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea58:	cmp	r0, r1
   1ea5c:	bge	1ea78 <__assert_fail@plt+0xd530>
   1ea60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea64:	ldr	r1, [fp, #8]
   1ea68:	mul	r0, r0, r1
   1ea6c:	sxth	r0, r0
   1ea70:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea74:	b	1f8ac <__assert_fail@plt+0xe364>
   1ea78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea7c:	ldr	r1, [fp, #8]
   1ea80:	mul	r0, r0, r1
   1ea84:	sxth	r0, r0
   1ea88:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea8c:	b	1f8b0 <__assert_fail@plt+0xe368>
   1ea90:	ldr	r0, [fp, #8]
   1ea94:	cmp	r0, #0
   1ea98:	bge	1eba8 <__assert_fail@plt+0xd660>
   1ea9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaa0:	cmp	r0, #0
   1eaa4:	bge	1eb30 <__assert_fail@plt+0xd5e8>
   1eaa8:	b	1eaac <__assert_fail@plt+0xd564>
   1eaac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eab0:	ldr	r1, [fp, #8]
   1eab4:	movw	r2, #65535	; 0xffff
   1eab8:	sdiv	r1, r2, r1
   1eabc:	cmp	r0, r1
   1eac0:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1eac4:	b	1ec5c <__assert_fail@plt+0xd714>
   1eac8:	b	1eacc <__assert_fail@plt+0xd584>
   1eacc:	ldr	r0, [pc, #3592]	; 1f8dc <__assert_fail@plt+0xe394>
   1ead0:	ldr	r1, [fp, #8]
   1ead4:	cmp	r1, r0
   1ead8:	blt	1eaf0 <__assert_fail@plt+0xd5a8>
   1eadc:	b	1eafc <__assert_fail@plt+0xd5b4>
   1eae0:	ldr	r0, [fp, #8]
   1eae4:	movw	r1, #0
   1eae8:	cmp	r1, r0
   1eaec:	bge	1eafc <__assert_fail@plt+0xd5b4>
   1eaf0:	movw	r0, #0
   1eaf4:	str	r0, [sp, #152]	; 0x98
   1eaf8:	b	1eb14 <__assert_fail@plt+0xd5cc>
   1eafc:	ldr	r0, [fp, #8]
   1eb00:	movw	r1, #0
   1eb04:	sub	r0, r1, r0
   1eb08:	movw	r1, #65535	; 0xffff
   1eb0c:	sdiv	r0, r1, r0
   1eb10:	str	r0, [sp, #152]	; 0x98
   1eb14:	ldr	r0, [sp, #152]	; 0x98
   1eb18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb1c:	mvn	r2, #0
   1eb20:	sub	r1, r2, r1
   1eb24:	cmp	r0, r1
   1eb28:	ble	1ec44 <__assert_fail@plt+0xd6fc>
   1eb2c:	b	1ec5c <__assert_fail@plt+0xd714>
   1eb30:	b	1eb34 <__assert_fail@plt+0xd5ec>
   1eb34:	b	1eb8c <__assert_fail@plt+0xd644>
   1eb38:	b	1eb8c <__assert_fail@plt+0xd644>
   1eb3c:	ldr	r0, [fp, #8]
   1eb40:	cmn	r0, #1
   1eb44:	bne	1eb8c <__assert_fail@plt+0xd644>
   1eb48:	b	1eb4c <__assert_fail@plt+0xd604>
   1eb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb50:	add	r0, r0, #0
   1eb54:	movw	r1, #0
   1eb58:	cmp	r1, r0
   1eb5c:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1eb60:	b	1ec5c <__assert_fail@plt+0xd714>
   1eb64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb68:	movw	r1, #0
   1eb6c:	cmp	r1, r0
   1eb70:	bge	1ec5c <__assert_fail@plt+0xd714>
   1eb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb78:	sub	r0, r0, #1
   1eb7c:	mvn	r1, #0
   1eb80:	cmp	r1, r0
   1eb84:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1eb88:	b	1ec5c <__assert_fail@plt+0xd714>
   1eb8c:	ldr	r0, [fp, #8]
   1eb90:	movw	r1, #0
   1eb94:	sdiv	r0, r1, r0
   1eb98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb9c:	cmp	r0, r1
   1eba0:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1eba4:	b	1ec5c <__assert_fail@plt+0xd714>
   1eba8:	ldr	r0, [fp, #8]
   1ebac:	cmp	r0, #0
   1ebb0:	bne	1ebb8 <__assert_fail@plt+0xd670>
   1ebb4:	b	1ec5c <__assert_fail@plt+0xd714>
   1ebb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebbc:	cmp	r0, #0
   1ebc0:	bge	1ec2c <__assert_fail@plt+0xd6e4>
   1ebc4:	b	1ebc8 <__assert_fail@plt+0xd680>
   1ebc8:	b	1ec10 <__assert_fail@plt+0xd6c8>
   1ebcc:	b	1ec10 <__assert_fail@plt+0xd6c8>
   1ebd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebd4:	cmn	r0, #1
   1ebd8:	bne	1ec10 <__assert_fail@plt+0xd6c8>
   1ebdc:	b	1ebe0 <__assert_fail@plt+0xd698>
   1ebe0:	ldr	r0, [fp, #8]
   1ebe4:	add	r0, r0, #0
   1ebe8:	movw	r1, #0
   1ebec:	cmp	r1, r0
   1ebf0:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1ebf4:	b	1ec5c <__assert_fail@plt+0xd714>
   1ebf8:	ldr	r0, [fp, #8]
   1ebfc:	sub	r0, r0, #1
   1ec00:	mvn	r1, #0
   1ec04:	cmp	r1, r0
   1ec08:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1ec0c:	b	1ec5c <__assert_fail@plt+0xd714>
   1ec10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec14:	movw	r1, #0
   1ec18:	sdiv	r0, r1, r0
   1ec1c:	ldr	r1, [fp, #8]
   1ec20:	cmp	r0, r1
   1ec24:	blt	1ec44 <__assert_fail@plt+0xd6fc>
   1ec28:	b	1ec5c <__assert_fail@plt+0xd714>
   1ec2c:	ldr	r0, [fp, #8]
   1ec30:	movw	r1, #65535	; 0xffff
   1ec34:	sdiv	r0, r1, r0
   1ec38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec3c:	cmp	r0, r1
   1ec40:	bge	1ec5c <__assert_fail@plt+0xd714>
   1ec44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec48:	ldr	r1, [fp, #8]
   1ec4c:	mul	r0, r0, r1
   1ec50:	uxth	r0, r0
   1ec54:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec58:	b	1f8ac <__assert_fail@plt+0xe364>
   1ec5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec60:	ldr	r1, [fp, #8]
   1ec64:	mul	r0, r0, r1
   1ec68:	uxth	r0, r0
   1ec6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec70:	b	1f8b0 <__assert_fail@plt+0xe368>
   1ec74:	b	1ec78 <__assert_fail@plt+0xd730>
   1ec78:	b	1ec7c <__assert_fail@plt+0xd734>
   1ec7c:	ldr	r0, [fp, #8]
   1ec80:	cmp	r0, #0
   1ec84:	bge	1ed88 <__assert_fail@plt+0xd840>
   1ec88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec8c:	cmp	r0, #0
   1ec90:	bge	1ed1c <__assert_fail@plt+0xd7d4>
   1ec94:	b	1ec98 <__assert_fail@plt+0xd750>
   1ec98:	ldr	r0, [pc, #3128]	; 1f8d8 <__assert_fail@plt+0xe390>
   1ec9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eca0:	ldr	r2, [fp, #8]
   1eca4:	sdiv	r0, r0, r2
   1eca8:	cmp	r1, r0
   1ecac:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1ecb0:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ecb4:	b	1ecb8 <__assert_fail@plt+0xd770>
   1ecb8:	ldr	r0, [pc, #3100]	; 1f8dc <__assert_fail@plt+0xe394>
   1ecbc:	ldr	r1, [fp, #8]
   1ecc0:	cmp	r1, r0
   1ecc4:	blt	1ecdc <__assert_fail@plt+0xd794>
   1ecc8:	b	1ece8 <__assert_fail@plt+0xd7a0>
   1eccc:	ldr	r0, [fp, #8]
   1ecd0:	movw	r1, #0
   1ecd4:	cmp	r1, r0
   1ecd8:	bge	1ece8 <__assert_fail@plt+0xd7a0>
   1ecdc:	movw	r0, #0
   1ece0:	str	r0, [sp, #148]	; 0x94
   1ece4:	b	1ed00 <__assert_fail@plt+0xd7b8>
   1ece8:	ldr	r0, [pc, #3048]	; 1f8d8 <__assert_fail@plt+0xe390>
   1ecec:	ldr	r1, [fp, #8]
   1ecf0:	movw	r2, #0
   1ecf4:	sub	r1, r2, r1
   1ecf8:	sdiv	r0, r0, r1
   1ecfc:	str	r0, [sp, #148]	; 0x94
   1ed00:	ldr	r0, [sp, #148]	; 0x94
   1ed04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed08:	mvn	r2, #0
   1ed0c:	sub	r1, r2, r1
   1ed10:	cmp	r0, r1
   1ed14:	ble	1ee18 <__assert_fail@plt+0xd8d0>
   1ed18:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ed1c:	ldr	r0, [fp, #8]
   1ed20:	cmn	r0, #1
   1ed24:	bne	1ed6c <__assert_fail@plt+0xd824>
   1ed28:	b	1ed2c <__assert_fail@plt+0xd7e4>
   1ed2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed30:	add	r0, r0, #-2147483648	; 0x80000000
   1ed34:	movw	r1, #0
   1ed38:	cmp	r1, r0
   1ed3c:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1ed40:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ed44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed48:	movw	r1, #0
   1ed4c:	cmp	r1, r0
   1ed50:	bge	1ee2c <__assert_fail@plt+0xd8e4>
   1ed54:	ldr	r0, [pc, #2940]	; 1f8d8 <__assert_fail@plt+0xe390>
   1ed58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed5c:	sub	r1, r1, #1
   1ed60:	cmp	r0, r1
   1ed64:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1ed68:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ed6c:	ldr	r0, [pc, #2924]	; 1f8e0 <__assert_fail@plt+0xe398>
   1ed70:	ldr	r1, [fp, #8]
   1ed74:	sdiv	r0, r0, r1
   1ed78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed7c:	cmp	r0, r1
   1ed80:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1ed84:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ed88:	ldr	r0, [fp, #8]
   1ed8c:	cmp	r0, #0
   1ed90:	bne	1ed98 <__assert_fail@plt+0xd850>
   1ed94:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ed98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed9c:	cmp	r0, #0
   1eda0:	bge	1ee00 <__assert_fail@plt+0xd8b8>
   1eda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eda8:	cmn	r0, #1
   1edac:	bne	1ede4 <__assert_fail@plt+0xd89c>
   1edb0:	b	1edb4 <__assert_fail@plt+0xd86c>
   1edb4:	ldr	r0, [fp, #8]
   1edb8:	add	r0, r0, #-2147483648	; 0x80000000
   1edbc:	movw	r1, #0
   1edc0:	cmp	r1, r0
   1edc4:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1edc8:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1edcc:	ldr	r0, [pc, #2820]	; 1f8d8 <__assert_fail@plt+0xe390>
   1edd0:	ldr	r1, [fp, #8]
   1edd4:	sub	r1, r1, #1
   1edd8:	cmp	r0, r1
   1eddc:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1ede0:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ede4:	ldr	r0, [pc, #2804]	; 1f8e0 <__assert_fail@plt+0xe398>
   1ede8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edec:	sdiv	r0, r0, r1
   1edf0:	ldr	r1, [fp, #8]
   1edf4:	cmp	r0, r1
   1edf8:	blt	1ee18 <__assert_fail@plt+0xd8d0>
   1edfc:	b	1ee2c <__assert_fail@plt+0xd8e4>
   1ee00:	ldr	r0, [pc, #2768]	; 1f8d8 <__assert_fail@plt+0xe390>
   1ee04:	ldr	r1, [fp, #8]
   1ee08:	sdiv	r0, r0, r1
   1ee0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee10:	cmp	r0, r1
   1ee14:	bge	1ee2c <__assert_fail@plt+0xd8e4>
   1ee18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee1c:	ldr	r1, [fp, #8]
   1ee20:	mul	r0, r0, r1
   1ee24:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee28:	b	1f8ac <__assert_fail@plt+0xe364>
   1ee2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee30:	ldr	r1, [fp, #8]
   1ee34:	mul	r0, r0, r1
   1ee38:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee3c:	b	1f8b0 <__assert_fail@plt+0xe368>
   1ee40:	ldr	r0, [fp, #8]
   1ee44:	cmp	r0, #0
   1ee48:	bge	1ef58 <__assert_fail@plt+0xda10>
   1ee4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee50:	cmp	r0, #0
   1ee54:	bge	1eee0 <__assert_fail@plt+0xd998>
   1ee58:	b	1ee78 <__assert_fail@plt+0xd930>
   1ee5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee60:	ldr	r1, [fp, #8]
   1ee64:	mvn	r2, #0
   1ee68:	udiv	r1, r2, r1
   1ee6c:	cmp	r0, r1
   1ee70:	bcc	1eff4 <__assert_fail@plt+0xdaac>
   1ee74:	b	1f008 <__assert_fail@plt+0xdac0>
   1ee78:	b	1ee7c <__assert_fail@plt+0xd934>
   1ee7c:	ldr	r0, [pc, #2648]	; 1f8dc <__assert_fail@plt+0xe394>
   1ee80:	ldr	r1, [fp, #8]
   1ee84:	cmp	r1, r0
   1ee88:	blt	1eea0 <__assert_fail@plt+0xd958>
   1ee8c:	b	1eeac <__assert_fail@plt+0xd964>
   1ee90:	ldr	r0, [fp, #8]
   1ee94:	movw	r1, #0
   1ee98:	cmp	r1, r0
   1ee9c:	bge	1eeac <__assert_fail@plt+0xd964>
   1eea0:	movw	r0, #1
   1eea4:	str	r0, [sp, #144]	; 0x90
   1eea8:	b	1eec4 <__assert_fail@plt+0xd97c>
   1eeac:	ldr	r0, [fp, #8]
   1eeb0:	movw	r1, #0
   1eeb4:	sub	r0, r1, r0
   1eeb8:	mvn	r1, #0
   1eebc:	udiv	r0, r1, r0
   1eec0:	str	r0, [sp, #144]	; 0x90
   1eec4:	ldr	r0, [sp, #144]	; 0x90
   1eec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eecc:	mvn	r2, #0
   1eed0:	sub	r1, r2, r1
   1eed4:	cmp	r0, r1
   1eed8:	bls	1eff4 <__assert_fail@plt+0xdaac>
   1eedc:	b	1f008 <__assert_fail@plt+0xdac0>
   1eee0:	b	1eee4 <__assert_fail@plt+0xd99c>
   1eee4:	b	1ef3c <__assert_fail@plt+0xd9f4>
   1eee8:	b	1ef3c <__assert_fail@plt+0xd9f4>
   1eeec:	ldr	r0, [fp, #8]
   1eef0:	cmn	r0, #1
   1eef4:	bne	1ef3c <__assert_fail@plt+0xd9f4>
   1eef8:	b	1eefc <__assert_fail@plt+0xd9b4>
   1eefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef00:	add	r0, r0, #0
   1ef04:	movw	r1, #0
   1ef08:	cmp	r1, r0
   1ef0c:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1ef10:	b	1f008 <__assert_fail@plt+0xdac0>
   1ef14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef18:	movw	r1, #0
   1ef1c:	cmp	r1, r0
   1ef20:	bge	1f008 <__assert_fail@plt+0xdac0>
   1ef24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef28:	sub	r0, r0, #1
   1ef2c:	mvn	r1, #0
   1ef30:	cmp	r1, r0
   1ef34:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1ef38:	b	1f008 <__assert_fail@plt+0xdac0>
   1ef3c:	ldr	r0, [fp, #8]
   1ef40:	movw	r1, #0
   1ef44:	sdiv	r0, r1, r0
   1ef48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef4c:	cmp	r0, r1
   1ef50:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1ef54:	b	1f008 <__assert_fail@plt+0xdac0>
   1ef58:	ldr	r0, [fp, #8]
   1ef5c:	cmp	r0, #0
   1ef60:	bne	1ef68 <__assert_fail@plt+0xda20>
   1ef64:	b	1f008 <__assert_fail@plt+0xdac0>
   1ef68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef6c:	cmp	r0, #0
   1ef70:	bge	1efdc <__assert_fail@plt+0xda94>
   1ef74:	b	1ef78 <__assert_fail@plt+0xda30>
   1ef78:	b	1efc0 <__assert_fail@plt+0xda78>
   1ef7c:	b	1efc0 <__assert_fail@plt+0xda78>
   1ef80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef84:	cmn	r0, #1
   1ef88:	bne	1efc0 <__assert_fail@plt+0xda78>
   1ef8c:	b	1ef90 <__assert_fail@plt+0xda48>
   1ef90:	ldr	r0, [fp, #8]
   1ef94:	add	r0, r0, #0
   1ef98:	movw	r1, #0
   1ef9c:	cmp	r1, r0
   1efa0:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1efa4:	b	1f008 <__assert_fail@plt+0xdac0>
   1efa8:	ldr	r0, [fp, #8]
   1efac:	sub	r0, r0, #1
   1efb0:	mvn	r1, #0
   1efb4:	cmp	r1, r0
   1efb8:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1efbc:	b	1f008 <__assert_fail@plt+0xdac0>
   1efc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efc4:	movw	r1, #0
   1efc8:	sdiv	r0, r1, r0
   1efcc:	ldr	r1, [fp, #8]
   1efd0:	cmp	r0, r1
   1efd4:	blt	1eff4 <__assert_fail@plt+0xdaac>
   1efd8:	b	1f008 <__assert_fail@plt+0xdac0>
   1efdc:	ldr	r0, [fp, #8]
   1efe0:	mvn	r1, #0
   1efe4:	udiv	r0, r1, r0
   1efe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efec:	cmp	r0, r1
   1eff0:	bcs	1f008 <__assert_fail@plt+0xdac0>
   1eff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eff8:	ldr	r1, [fp, #8]
   1effc:	mul	r0, r0, r1
   1f000:	str	r0, [fp, #-28]	; 0xffffffe4
   1f004:	b	1f8ac <__assert_fail@plt+0xe364>
   1f008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f00c:	ldr	r1, [fp, #8]
   1f010:	mul	r0, r0, r1
   1f014:	str	r0, [fp, #-28]	; 0xffffffe4
   1f018:	b	1f8b0 <__assert_fail@plt+0xe368>
   1f01c:	b	1f020 <__assert_fail@plt+0xdad8>
   1f020:	b	1f024 <__assert_fail@plt+0xdadc>
   1f024:	ldr	r0, [fp, #8]
   1f028:	cmp	r0, #0
   1f02c:	bge	1f130 <__assert_fail@plt+0xdbe8>
   1f030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f034:	cmp	r0, #0
   1f038:	bge	1f0c4 <__assert_fail@plt+0xdb7c>
   1f03c:	b	1f040 <__assert_fail@plt+0xdaf8>
   1f040:	ldr	r0, [pc, #2192]	; 1f8d8 <__assert_fail@plt+0xe390>
   1f044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f048:	ldr	r2, [fp, #8]
   1f04c:	sdiv	r0, r0, r2
   1f050:	cmp	r1, r0
   1f054:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f058:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f05c:	b	1f060 <__assert_fail@plt+0xdb18>
   1f060:	ldr	r0, [pc, #2164]	; 1f8dc <__assert_fail@plt+0xe394>
   1f064:	ldr	r1, [fp, #8]
   1f068:	cmp	r1, r0
   1f06c:	blt	1f084 <__assert_fail@plt+0xdb3c>
   1f070:	b	1f090 <__assert_fail@plt+0xdb48>
   1f074:	ldr	r0, [fp, #8]
   1f078:	movw	r1, #0
   1f07c:	cmp	r1, r0
   1f080:	bge	1f090 <__assert_fail@plt+0xdb48>
   1f084:	movw	r0, #0
   1f088:	str	r0, [sp, #140]	; 0x8c
   1f08c:	b	1f0a8 <__assert_fail@plt+0xdb60>
   1f090:	ldr	r0, [pc, #2112]	; 1f8d8 <__assert_fail@plt+0xe390>
   1f094:	ldr	r1, [fp, #8]
   1f098:	movw	r2, #0
   1f09c:	sub	r1, r2, r1
   1f0a0:	sdiv	r0, r0, r1
   1f0a4:	str	r0, [sp, #140]	; 0x8c
   1f0a8:	ldr	r0, [sp, #140]	; 0x8c
   1f0ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0b0:	mvn	r2, #0
   1f0b4:	sub	r1, r2, r1
   1f0b8:	cmp	r0, r1
   1f0bc:	ble	1f1c0 <__assert_fail@plt+0xdc78>
   1f0c0:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f0c4:	ldr	r0, [fp, #8]
   1f0c8:	cmn	r0, #1
   1f0cc:	bne	1f114 <__assert_fail@plt+0xdbcc>
   1f0d0:	b	1f0d4 <__assert_fail@plt+0xdb8c>
   1f0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0d8:	add	r0, r0, #-2147483648	; 0x80000000
   1f0dc:	movw	r1, #0
   1f0e0:	cmp	r1, r0
   1f0e4:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f0e8:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0f0:	movw	r1, #0
   1f0f4:	cmp	r1, r0
   1f0f8:	bge	1f1d4 <__assert_fail@plt+0xdc8c>
   1f0fc:	ldr	r0, [pc, #2004]	; 1f8d8 <__assert_fail@plt+0xe390>
   1f100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f104:	sub	r1, r1, #1
   1f108:	cmp	r0, r1
   1f10c:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f110:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f114:	ldr	r0, [pc, #1988]	; 1f8e0 <__assert_fail@plt+0xe398>
   1f118:	ldr	r1, [fp, #8]
   1f11c:	sdiv	r0, r0, r1
   1f120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f124:	cmp	r0, r1
   1f128:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f12c:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f130:	ldr	r0, [fp, #8]
   1f134:	cmp	r0, #0
   1f138:	bne	1f140 <__assert_fail@plt+0xdbf8>
   1f13c:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f144:	cmp	r0, #0
   1f148:	bge	1f1a8 <__assert_fail@plt+0xdc60>
   1f14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f150:	cmn	r0, #1
   1f154:	bne	1f18c <__assert_fail@plt+0xdc44>
   1f158:	b	1f15c <__assert_fail@plt+0xdc14>
   1f15c:	ldr	r0, [fp, #8]
   1f160:	add	r0, r0, #-2147483648	; 0x80000000
   1f164:	movw	r1, #0
   1f168:	cmp	r1, r0
   1f16c:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f170:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f174:	ldr	r0, [pc, #1884]	; 1f8d8 <__assert_fail@plt+0xe390>
   1f178:	ldr	r1, [fp, #8]
   1f17c:	sub	r1, r1, #1
   1f180:	cmp	r0, r1
   1f184:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f188:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f18c:	ldr	r0, [pc, #1868]	; 1f8e0 <__assert_fail@plt+0xe398>
   1f190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f194:	sdiv	r0, r0, r1
   1f198:	ldr	r1, [fp, #8]
   1f19c:	cmp	r0, r1
   1f1a0:	blt	1f1c0 <__assert_fail@plt+0xdc78>
   1f1a4:	b	1f1d4 <__assert_fail@plt+0xdc8c>
   1f1a8:	ldr	r0, [pc, #1832]	; 1f8d8 <__assert_fail@plt+0xe390>
   1f1ac:	ldr	r1, [fp, #8]
   1f1b0:	sdiv	r0, r0, r1
   1f1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1b8:	cmp	r0, r1
   1f1bc:	bge	1f1d4 <__assert_fail@plt+0xdc8c>
   1f1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1c4:	ldr	r1, [fp, #8]
   1f1c8:	mul	r0, r0, r1
   1f1cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1d0:	b	1f8ac <__assert_fail@plt+0xe364>
   1f1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1d8:	ldr	r1, [fp, #8]
   1f1dc:	mul	r0, r0, r1
   1f1e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1e4:	b	1f8b0 <__assert_fail@plt+0xe368>
   1f1e8:	ldr	r0, [fp, #8]
   1f1ec:	cmp	r0, #0
   1f1f0:	bge	1f300 <__assert_fail@plt+0xddb8>
   1f1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1f8:	cmp	r0, #0
   1f1fc:	bge	1f288 <__assert_fail@plt+0xdd40>
   1f200:	b	1f220 <__assert_fail@plt+0xdcd8>
   1f204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f208:	ldr	r1, [fp, #8]
   1f20c:	mvn	r2, #0
   1f210:	udiv	r1, r2, r1
   1f214:	cmp	r0, r1
   1f218:	bcc	1f39c <__assert_fail@plt+0xde54>
   1f21c:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f220:	b	1f224 <__assert_fail@plt+0xdcdc>
   1f224:	ldr	r0, [pc, #1712]	; 1f8dc <__assert_fail@plt+0xe394>
   1f228:	ldr	r1, [fp, #8]
   1f22c:	cmp	r1, r0
   1f230:	blt	1f248 <__assert_fail@plt+0xdd00>
   1f234:	b	1f254 <__assert_fail@plt+0xdd0c>
   1f238:	ldr	r0, [fp, #8]
   1f23c:	movw	r1, #0
   1f240:	cmp	r1, r0
   1f244:	bge	1f254 <__assert_fail@plt+0xdd0c>
   1f248:	movw	r0, #1
   1f24c:	str	r0, [sp, #136]	; 0x88
   1f250:	b	1f26c <__assert_fail@plt+0xdd24>
   1f254:	ldr	r0, [fp, #8]
   1f258:	movw	r1, #0
   1f25c:	sub	r0, r1, r0
   1f260:	mvn	r1, #0
   1f264:	udiv	r0, r1, r0
   1f268:	str	r0, [sp, #136]	; 0x88
   1f26c:	ldr	r0, [sp, #136]	; 0x88
   1f270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f274:	mvn	r2, #0
   1f278:	sub	r1, r2, r1
   1f27c:	cmp	r0, r1
   1f280:	bls	1f39c <__assert_fail@plt+0xde54>
   1f284:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f288:	b	1f28c <__assert_fail@plt+0xdd44>
   1f28c:	b	1f2e4 <__assert_fail@plt+0xdd9c>
   1f290:	b	1f2e4 <__assert_fail@plt+0xdd9c>
   1f294:	ldr	r0, [fp, #8]
   1f298:	cmn	r0, #1
   1f29c:	bne	1f2e4 <__assert_fail@plt+0xdd9c>
   1f2a0:	b	1f2a4 <__assert_fail@plt+0xdd5c>
   1f2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2a8:	add	r0, r0, #0
   1f2ac:	movw	r1, #0
   1f2b0:	cmp	r1, r0
   1f2b4:	blt	1f39c <__assert_fail@plt+0xde54>
   1f2b8:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2c0:	movw	r1, #0
   1f2c4:	cmp	r1, r0
   1f2c8:	bge	1f3b0 <__assert_fail@plt+0xde68>
   1f2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2d0:	sub	r0, r0, #1
   1f2d4:	mvn	r1, #0
   1f2d8:	cmp	r1, r0
   1f2dc:	blt	1f39c <__assert_fail@plt+0xde54>
   1f2e0:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f2e4:	ldr	r0, [fp, #8]
   1f2e8:	movw	r1, #0
   1f2ec:	sdiv	r0, r1, r0
   1f2f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f2f4:	cmp	r0, r1
   1f2f8:	blt	1f39c <__assert_fail@plt+0xde54>
   1f2fc:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f300:	ldr	r0, [fp, #8]
   1f304:	cmp	r0, #0
   1f308:	bne	1f310 <__assert_fail@plt+0xddc8>
   1f30c:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f314:	cmp	r0, #0
   1f318:	bge	1f384 <__assert_fail@plt+0xde3c>
   1f31c:	b	1f320 <__assert_fail@plt+0xddd8>
   1f320:	b	1f368 <__assert_fail@plt+0xde20>
   1f324:	b	1f368 <__assert_fail@plt+0xde20>
   1f328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f32c:	cmn	r0, #1
   1f330:	bne	1f368 <__assert_fail@plt+0xde20>
   1f334:	b	1f338 <__assert_fail@plt+0xddf0>
   1f338:	ldr	r0, [fp, #8]
   1f33c:	add	r0, r0, #0
   1f340:	movw	r1, #0
   1f344:	cmp	r1, r0
   1f348:	blt	1f39c <__assert_fail@plt+0xde54>
   1f34c:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f350:	ldr	r0, [fp, #8]
   1f354:	sub	r0, r0, #1
   1f358:	mvn	r1, #0
   1f35c:	cmp	r1, r0
   1f360:	blt	1f39c <__assert_fail@plt+0xde54>
   1f364:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f36c:	movw	r1, #0
   1f370:	sdiv	r0, r1, r0
   1f374:	ldr	r1, [fp, #8]
   1f378:	cmp	r0, r1
   1f37c:	blt	1f39c <__assert_fail@plt+0xde54>
   1f380:	b	1f3b0 <__assert_fail@plt+0xde68>
   1f384:	ldr	r0, [fp, #8]
   1f388:	mvn	r1, #0
   1f38c:	udiv	r0, r1, r0
   1f390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f394:	cmp	r0, r1
   1f398:	bcs	1f3b0 <__assert_fail@plt+0xde68>
   1f39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3a0:	ldr	r1, [fp, #8]
   1f3a4:	mul	r0, r0, r1
   1f3a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f3ac:	b	1f8ac <__assert_fail@plt+0xe364>
   1f3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3b4:	ldr	r1, [fp, #8]
   1f3b8:	mul	r0, r0, r1
   1f3bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1f3c0:	b	1f8b0 <__assert_fail@plt+0xe368>
   1f3c4:	b	1f3c8 <__assert_fail@plt+0xde80>
   1f3c8:	ldr	r0, [fp, #8]
   1f3cc:	cmp	r0, #0
   1f3d0:	bge	1f558 <__assert_fail@plt+0xe010>
   1f3d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3d8:	cmp	r0, #0
   1f3dc:	bge	1f4c4 <__assert_fail@plt+0xdf7c>
   1f3e0:	b	1f3e4 <__assert_fail@plt+0xde9c>
   1f3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3e8:	ldr	r1, [fp, #8]
   1f3ec:	asr	r3, r1, #31
   1f3f0:	mvn	r2, #0
   1f3f4:	mvn	ip, #-2147483648	; 0x80000000
   1f3f8:	str	r0, [sp, #132]	; 0x84
   1f3fc:	mov	r0, r2
   1f400:	str	r1, [sp, #128]	; 0x80
   1f404:	mov	r1, ip
   1f408:	ldr	r2, [sp, #128]	; 0x80
   1f40c:	bl	246f0 <__assert_fail@plt+0x131a8>
   1f410:	ldr	r2, [sp, #132]	; 0x84
   1f414:	subs	r0, r2, r0
   1f418:	rscs	r1, r1, r2, asr #31
   1f41c:	str	r0, [sp, #124]	; 0x7c
   1f420:	str	r1, [sp, #120]	; 0x78
   1f424:	blt	1f638 <__assert_fail@plt+0xe0f0>
   1f428:	b	1f64c <__assert_fail@plt+0xe104>
   1f42c:	b	1f430 <__assert_fail@plt+0xdee8>
   1f430:	ldr	r0, [pc, #1188]	; 1f8dc <__assert_fail@plt+0xe394>
   1f434:	ldr	r1, [fp, #8]
   1f438:	cmp	r1, r0
   1f43c:	blt	1f454 <__assert_fail@plt+0xdf0c>
   1f440:	b	1f468 <__assert_fail@plt+0xdf20>
   1f444:	ldr	r0, [fp, #8]
   1f448:	movw	r1, #0
   1f44c:	cmp	r1, r0
   1f450:	bge	1f468 <__assert_fail@plt+0xdf20>
   1f454:	mov	r0, #0
   1f458:	mvn	r1, #0
   1f45c:	str	r1, [sp, #116]	; 0x74
   1f460:	str	r0, [sp, #112]	; 0x70
   1f464:	b	1f49c <__assert_fail@plt+0xdf54>
   1f468:	ldr	r0, [fp, #8]
   1f46c:	rsb	r0, r0, #0
   1f470:	asr	r3, r0, #31
   1f474:	mvn	r1, #0
   1f478:	mvn	r2, #-2147483648	; 0x80000000
   1f47c:	str	r0, [sp, #108]	; 0x6c
   1f480:	mov	r0, r1
   1f484:	mov	r1, r2
   1f488:	ldr	r2, [sp, #108]	; 0x6c
   1f48c:	bl	246f0 <__assert_fail@plt+0x131a8>
   1f490:	str	r0, [sp, #116]	; 0x74
   1f494:	str	r1, [sp, #112]	; 0x70
   1f498:	b	1f49c <__assert_fail@plt+0xdf54>
   1f49c:	ldr	r0, [sp, #112]	; 0x70
   1f4a0:	ldr	r1, [sp, #116]	; 0x74
   1f4a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f4a8:	mvn	r2, r2
   1f4ac:	subs	r1, r2, r1
   1f4b0:	rscs	r0, r0, r2, asr #31
   1f4b4:	str	r1, [sp, #104]	; 0x68
   1f4b8:	str	r0, [sp, #100]	; 0x64
   1f4bc:	bge	1f638 <__assert_fail@plt+0xe0f0>
   1f4c0:	b	1f64c <__assert_fail@plt+0xe104>
   1f4c4:	ldr	r0, [fp, #8]
   1f4c8:	cmn	r0, #1
   1f4cc:	bne	1f518 <__assert_fail@plt+0xdfd0>
   1f4d0:	b	1f4d4 <__assert_fail@plt+0xdf8c>
   1f4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4d8:	mov	r1, #-2147483648	; 0x80000000
   1f4dc:	add	r1, r1, r0, asr #31
   1f4e0:	rsbs	r0, r0, #0
   1f4e4:	rscs	r1, r1, #0
   1f4e8:	str	r0, [sp, #96]	; 0x60
   1f4ec:	str	r1, [sp, #92]	; 0x5c
   1f4f0:	blt	1f638 <__assert_fail@plt+0xe0f0>
   1f4f4:	b	1f64c <__assert_fail@plt+0xe104>
   1f4f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4fc:	movw	r1, #0
   1f500:	cmp	r1, r0
   1f504:	bge	1f64c <__assert_fail@plt+0xe104>
   1f508:	mov	r0, #0
   1f50c:	cmp	r0, #0
   1f510:	bne	1f638 <__assert_fail@plt+0xe0f0>
   1f514:	b	1f64c <__assert_fail@plt+0xe104>
   1f518:	ldr	r0, [fp, #8]
   1f51c:	asr	r3, r0, #31
   1f520:	mov	r1, #0
   1f524:	mov	r2, #-2147483648	; 0x80000000
   1f528:	str	r0, [sp, #88]	; 0x58
   1f52c:	mov	r0, r1
   1f530:	mov	r1, r2
   1f534:	ldr	r2, [sp, #88]	; 0x58
   1f538:	bl	246f0 <__assert_fail@plt+0x131a8>
   1f53c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f540:	subs	r0, r0, r2
   1f544:	sbcs	r1, r1, r2, asr #31
   1f548:	str	r0, [sp, #84]	; 0x54
   1f54c:	str	r1, [sp, #80]	; 0x50
   1f550:	blt	1f638 <__assert_fail@plt+0xe0f0>
   1f554:	b	1f64c <__assert_fail@plt+0xe104>
   1f558:	ldr	r0, [fp, #8]
   1f55c:	cmp	r0, #0
   1f560:	bne	1f568 <__assert_fail@plt+0xe020>
   1f564:	b	1f64c <__assert_fail@plt+0xe104>
   1f568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f56c:	cmp	r0, #0
   1f570:	bge	1f5f8 <__assert_fail@plt+0xe0b0>
   1f574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f578:	cmn	r0, #1
   1f57c:	bne	1f5b8 <__assert_fail@plt+0xe070>
   1f580:	b	1f584 <__assert_fail@plt+0xe03c>
   1f584:	ldr	r0, [fp, #8]
   1f588:	mov	r1, #-2147483648	; 0x80000000
   1f58c:	add	r1, r1, r0, asr #31
   1f590:	rsbs	r0, r0, #0
   1f594:	rscs	r1, r1, #0
   1f598:	str	r0, [sp, #76]	; 0x4c
   1f59c:	str	r1, [sp, #72]	; 0x48
   1f5a0:	blt	1f638 <__assert_fail@plt+0xe0f0>
   1f5a4:	b	1f64c <__assert_fail@plt+0xe104>
   1f5a8:	mov	r0, #0
   1f5ac:	cmp	r0, #0
   1f5b0:	bne	1f638 <__assert_fail@plt+0xe0f0>
   1f5b4:	b	1f64c <__assert_fail@plt+0xe104>
   1f5b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5bc:	asr	r3, r0, #31
   1f5c0:	mov	r1, #0
   1f5c4:	mov	r2, #-2147483648	; 0x80000000
   1f5c8:	str	r0, [sp, #68]	; 0x44
   1f5cc:	mov	r0, r1
   1f5d0:	mov	r1, r2
   1f5d4:	ldr	r2, [sp, #68]	; 0x44
   1f5d8:	bl	246f0 <__assert_fail@plt+0x131a8>
   1f5dc:	ldr	r2, [fp, #8]
   1f5e0:	subs	r0, r0, r2
   1f5e4:	sbcs	r1, r1, r2, asr #31
   1f5e8:	str	r0, [sp, #64]	; 0x40
   1f5ec:	str	r1, [sp, #60]	; 0x3c
   1f5f0:	blt	1f638 <__assert_fail@plt+0xe0f0>
   1f5f4:	b	1f64c <__assert_fail@plt+0xe104>
   1f5f8:	ldr	r0, [fp, #8]
   1f5fc:	asr	r3, r0, #31
   1f600:	mvn	r1, #0
   1f604:	mvn	r2, #-2147483648	; 0x80000000
   1f608:	str	r0, [sp, #56]	; 0x38
   1f60c:	mov	r0, r1
   1f610:	mov	r1, r2
   1f614:	ldr	r2, [sp, #56]	; 0x38
   1f618:	bl	246f0 <__assert_fail@plt+0x131a8>
   1f61c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f620:	subs	r0, r0, r2
   1f624:	sbcs	r1, r1, r2, asr #31
   1f628:	str	r0, [sp, #52]	; 0x34
   1f62c:	str	r1, [sp, #48]	; 0x30
   1f630:	bge	1f64c <__assert_fail@plt+0xe104>
   1f634:	b	1f638 <__assert_fail@plt+0xe0f0>
   1f638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f63c:	ldr	r1, [fp, #8]
   1f640:	mul	r0, r0, r1
   1f644:	str	r0, [fp, #-28]	; 0xffffffe4
   1f648:	b	1f8ac <__assert_fail@plt+0xe364>
   1f64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f650:	ldr	r1, [fp, #8]
   1f654:	mul	r0, r0, r1
   1f658:	str	r0, [fp, #-28]	; 0xffffffe4
   1f65c:	b	1f8b0 <__assert_fail@plt+0xe368>
   1f660:	ldr	r0, [fp, #8]
   1f664:	cmp	r0, #0
   1f668:	bge	1f7c8 <__assert_fail@plt+0xe280>
   1f66c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f670:	cmp	r0, #0
   1f674:	bge	1f750 <__assert_fail@plt+0xe208>
   1f678:	b	1f6c0 <__assert_fail@plt+0xe178>
   1f67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f680:	ldr	r1, [fp, #8]
   1f684:	asr	r3, r1, #31
   1f688:	mvn	r2, #0
   1f68c:	str	r0, [sp, #44]	; 0x2c
   1f690:	mov	r0, r2
   1f694:	str	r1, [sp, #40]	; 0x28
   1f698:	mov	r1, r2
   1f69c:	ldr	r2, [sp, #40]	; 0x28
   1f6a0:	bl	247c4 <__assert_fail@plt+0x1327c>
   1f6a4:	ldr	r2, [sp, #44]	; 0x2c
   1f6a8:	subs	r0, r2, r0
   1f6ac:	rscs	r1, r1, r2, asr #31
   1f6b0:	str	r0, [sp, #36]	; 0x24
   1f6b4:	str	r1, [sp, #32]
   1f6b8:	bcc	1f884 <__assert_fail@plt+0xe33c>
   1f6bc:	b	1f898 <__assert_fail@plt+0xe350>
   1f6c0:	b	1f6c4 <__assert_fail@plt+0xe17c>
   1f6c4:	ldr	r0, [pc, #528]	; 1f8dc <__assert_fail@plt+0xe394>
   1f6c8:	ldr	r1, [fp, #8]
   1f6cc:	cmp	r1, r0
   1f6d0:	blt	1f6e8 <__assert_fail@plt+0xe1a0>
   1f6d4:	b	1f6fc <__assert_fail@plt+0xe1b4>
   1f6d8:	ldr	r0, [fp, #8]
   1f6dc:	movw	r1, #0
   1f6e0:	cmp	r1, r0
   1f6e4:	bge	1f6fc <__assert_fail@plt+0xe1b4>
   1f6e8:	mov	r0, #1
   1f6ec:	mvn	r1, #0
   1f6f0:	str	r1, [sp, #28]
   1f6f4:	str	r0, [sp, #24]
   1f6f8:	b	1f728 <__assert_fail@plt+0xe1e0>
   1f6fc:	ldr	r0, [fp, #8]
   1f700:	rsb	r0, r0, #0
   1f704:	asr	r3, r0, #31
   1f708:	mvn	r1, #0
   1f70c:	str	r0, [sp, #20]
   1f710:	mov	r0, r1
   1f714:	ldr	r2, [sp, #20]
   1f718:	bl	247c4 <__assert_fail@plt+0x1327c>
   1f71c:	str	r0, [sp, #28]
   1f720:	str	r1, [sp, #24]
   1f724:	b	1f728 <__assert_fail@plt+0xe1e0>
   1f728:	ldr	r0, [sp, #24]
   1f72c:	ldr	r1, [sp, #28]
   1f730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f734:	mvn	r2, r2
   1f738:	subs	r1, r2, r1
   1f73c:	rscs	r0, r0, r2, asr #31
   1f740:	str	r1, [sp, #16]
   1f744:	str	r0, [sp, #12]
   1f748:	bcs	1f884 <__assert_fail@plt+0xe33c>
   1f74c:	b	1f898 <__assert_fail@plt+0xe350>
   1f750:	b	1f754 <__assert_fail@plt+0xe20c>
   1f754:	b	1f7ac <__assert_fail@plt+0xe264>
   1f758:	b	1f7ac <__assert_fail@plt+0xe264>
   1f75c:	ldr	r0, [fp, #8]
   1f760:	cmn	r0, #1
   1f764:	bne	1f7ac <__assert_fail@plt+0xe264>
   1f768:	b	1f76c <__assert_fail@plt+0xe224>
   1f76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f770:	add	r0, r0, #0
   1f774:	movw	r1, #0
   1f778:	cmp	r1, r0
   1f77c:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f780:	b	1f898 <__assert_fail@plt+0xe350>
   1f784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f788:	movw	r1, #0
   1f78c:	cmp	r1, r0
   1f790:	bge	1f898 <__assert_fail@plt+0xe350>
   1f794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f798:	sub	r0, r0, #1
   1f79c:	mvn	r1, #0
   1f7a0:	cmp	r1, r0
   1f7a4:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f7a8:	b	1f898 <__assert_fail@plt+0xe350>
   1f7ac:	ldr	r0, [fp, #8]
   1f7b0:	movw	r1, #0
   1f7b4:	sdiv	r0, r1, r0
   1f7b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f7bc:	cmp	r0, r1
   1f7c0:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f7c4:	b	1f898 <__assert_fail@plt+0xe350>
   1f7c8:	ldr	r0, [fp, #8]
   1f7cc:	cmp	r0, #0
   1f7d0:	bne	1f7d8 <__assert_fail@plt+0xe290>
   1f7d4:	b	1f898 <__assert_fail@plt+0xe350>
   1f7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7dc:	cmp	r0, #0
   1f7e0:	bge	1f84c <__assert_fail@plt+0xe304>
   1f7e4:	b	1f7e8 <__assert_fail@plt+0xe2a0>
   1f7e8:	b	1f830 <__assert_fail@plt+0xe2e8>
   1f7ec:	b	1f830 <__assert_fail@plt+0xe2e8>
   1f7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7f4:	cmn	r0, #1
   1f7f8:	bne	1f830 <__assert_fail@plt+0xe2e8>
   1f7fc:	b	1f800 <__assert_fail@plt+0xe2b8>
   1f800:	ldr	r0, [fp, #8]
   1f804:	add	r0, r0, #0
   1f808:	movw	r1, #0
   1f80c:	cmp	r1, r0
   1f810:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f814:	b	1f898 <__assert_fail@plt+0xe350>
   1f818:	ldr	r0, [fp, #8]
   1f81c:	sub	r0, r0, #1
   1f820:	mvn	r1, #0
   1f824:	cmp	r1, r0
   1f828:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f82c:	b	1f898 <__assert_fail@plt+0xe350>
   1f830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f834:	movw	r1, #0
   1f838:	sdiv	r0, r1, r0
   1f83c:	ldr	r1, [fp, #8]
   1f840:	cmp	r0, r1
   1f844:	blt	1f884 <__assert_fail@plt+0xe33c>
   1f848:	b	1f898 <__assert_fail@plt+0xe350>
   1f84c:	ldr	r0, [fp, #8]
   1f850:	asr	r3, r0, #31
   1f854:	mvn	r1, #0
   1f858:	str	r0, [sp, #8]
   1f85c:	mov	r0, r1
   1f860:	ldr	r2, [sp, #8]
   1f864:	bl	247c4 <__assert_fail@plt+0x1327c>
   1f868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f86c:	subs	r0, r0, r2
   1f870:	sbcs	r1, r1, r2, asr #31
   1f874:	str	r0, [sp, #4]
   1f878:	str	r1, [sp]
   1f87c:	bcs	1f898 <__assert_fail@plt+0xe350>
   1f880:	b	1f884 <__assert_fail@plt+0xe33c>
   1f884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f888:	ldr	r1, [fp, #8]
   1f88c:	mul	r0, r0, r1
   1f890:	str	r0, [fp, #-28]	; 0xffffffe4
   1f894:	b	1f8ac <__assert_fail@plt+0xe364>
   1f898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f89c:	ldr	r1, [fp, #8]
   1f8a0:	mul	r0, r0, r1
   1f8a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f8a8:	b	1f8b0 <__assert_fail@plt+0xe368>
   1f8ac:	bl	1fa88 <__assert_fail@plt+0xe540>
   1f8b0:	ldr	r0, [fp, #-4]
   1f8b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8b8:	bl	1cd44 <__assert_fail@plt+0xb7fc>
   1f8bc:	str	r0, [fp, #-4]
   1f8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f8c4:	ldr	r1, [fp, #-8]
   1f8c8:	str	r0, [r1]
   1f8cc:	ldr	r0, [fp, #-4]
   1f8d0:	mov	sp, fp
   1f8d4:	pop	{fp, pc}
   1f8d8:	svcvc	0x00ffffff
   1f8dc:	andhi	r0, r0, r1
   1f8e0:	andhi	r0, r0, r0
   1f8e4:			; <UNDEFINED> instruction: 0xffff8000
   1f8e8:	push	{fp, lr}
   1f8ec:	mov	fp, sp
   1f8f0:	sub	sp, sp, #8
   1f8f4:	str	r0, [sp, #4]
   1f8f8:	ldr	r0, [sp, #4]
   1f8fc:	movw	r1, #1
   1f900:	bl	1f90c <__assert_fail@plt+0xe3c4>
   1f904:	mov	sp, fp
   1f908:	pop	{fp, pc}
   1f90c:	push	{fp, lr}
   1f910:	mov	fp, sp
   1f914:	sub	sp, sp, #8
   1f918:	str	r0, [sp, #4]
   1f91c:	str	r1, [sp]
   1f920:	ldr	r0, [sp, #4]
   1f924:	ldr	r1, [sp]
   1f928:	bl	2190c <__assert_fail@plt+0x103c4>
   1f92c:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1f930:	mov	sp, fp
   1f934:	pop	{fp, pc}
   1f938:	push	{fp, lr}
   1f93c:	mov	fp, sp
   1f940:	sub	sp, sp, #8
   1f944:	str	r0, [sp, #4]
   1f948:	ldr	r0, [sp, #4]
   1f94c:	movw	r1, #1
   1f950:	bl	1f95c <__assert_fail@plt+0xe414>
   1f954:	mov	sp, fp
   1f958:	pop	{fp, pc}
   1f95c:	push	{fp, lr}
   1f960:	mov	fp, sp
   1f964:	sub	sp, sp, #8
   1f968:	str	r0, [sp, #4]
   1f96c:	str	r1, [sp]
   1f970:	ldr	r0, [sp, #4]
   1f974:	ldr	r1, [sp]
   1f978:	bl	228e4 <__assert_fail@plt+0x1139c>
   1f97c:	bl	1ccd0 <__assert_fail@plt+0xb788>
   1f980:	mov	sp, fp
   1f984:	pop	{fp, pc}
   1f988:	push	{fp, lr}
   1f98c:	mov	fp, sp
   1f990:	sub	sp, sp, #16
   1f994:	str	r0, [fp, #-4]
   1f998:	str	r1, [sp, #8]
   1f99c:	ldr	r0, [sp, #8]
   1f9a0:	bl	1ccac <__assert_fail@plt+0xb764>
   1f9a4:	ldr	r1, [fp, #-4]
   1f9a8:	ldr	r2, [sp, #8]
   1f9ac:	str	r0, [sp, #4]
   1f9b0:	bl	1129c <memcpy@plt>
   1f9b4:	ldr	r0, [sp, #4]
   1f9b8:	mov	sp, fp
   1f9bc:	pop	{fp, pc}
   1f9c0:	push	{fp, lr}
   1f9c4:	mov	fp, sp
   1f9c8:	sub	sp, sp, #16
   1f9cc:	str	r0, [fp, #-4]
   1f9d0:	str	r1, [sp, #8]
   1f9d4:	ldr	r0, [sp, #8]
   1f9d8:	bl	1cd00 <__assert_fail@plt+0xb7b8>
   1f9dc:	ldr	r1, [fp, #-4]
   1f9e0:	ldr	r2, [sp, #8]
   1f9e4:	str	r0, [sp, #4]
   1f9e8:	bl	1129c <memcpy@plt>
   1f9ec:	ldr	r0, [sp, #4]
   1f9f0:	mov	sp, fp
   1f9f4:	pop	{fp, pc}
   1f9f8:	push	{fp, lr}
   1f9fc:	mov	fp, sp
   1fa00:	sub	sp, sp, #16
   1fa04:	str	r0, [fp, #-4]
   1fa08:	str	r1, [sp, #8]
   1fa0c:	ldr	r0, [sp, #8]
   1fa10:	add	r0, r0, #1
   1fa14:	bl	1cd00 <__assert_fail@plt+0xb7b8>
   1fa18:	str	r0, [sp, #4]
   1fa1c:	ldr	r0, [sp, #4]
   1fa20:	ldr	r1, [sp, #8]
   1fa24:	add	r0, r0, r1
   1fa28:	movw	r1, #0
   1fa2c:	strb	r1, [r0]
   1fa30:	ldr	r0, [sp, #4]
   1fa34:	ldr	r1, [fp, #-4]
   1fa38:	ldr	r2, [sp, #8]
   1fa3c:	str	r0, [sp]
   1fa40:	bl	1129c <memcpy@plt>
   1fa44:	ldr	r0, [sp]
   1fa48:	mov	sp, fp
   1fa4c:	pop	{fp, pc}
   1fa50:	push	{fp, lr}
   1fa54:	mov	fp, sp
   1fa58:	sub	sp, sp, #8
   1fa5c:	str	r0, [sp, #4]
   1fa60:	ldr	r0, [sp, #4]
   1fa64:	ldr	r1, [sp, #4]
   1fa68:	str	r0, [sp]
   1fa6c:	mov	r0, r1
   1fa70:	bl	113c8 <strlen@plt>
   1fa74:	add	r1, r0, #1
   1fa78:	ldr	r0, [sp]
   1fa7c:	bl	1f988 <__assert_fail@plt+0xe440>
   1fa80:	mov	sp, fp
   1fa84:	pop	{fp, pc}
   1fa88:	push	{fp, lr}
   1fa8c:	mov	fp, sp
   1fa90:	sub	sp, sp, #8
   1fa94:	movw	r0, #28984	; 0x7138
   1fa98:	movt	r0, #3
   1fa9c:	ldr	r0, [r0]
   1faa0:	movw	r1, #24476	; 0x5f9c
   1faa4:	movt	r1, #2
   1faa8:	str	r0, [sp, #4]
   1faac:	mov	r0, r1
   1fab0:	bl	113b0 <gettext@plt>
   1fab4:	ldr	r1, [sp, #4]
   1fab8:	str	r0, [sp]
   1fabc:	mov	r0, r1
   1fac0:	movw	r1, #0
   1fac4:	movw	r2, #21460	; 0x53d4
   1fac8:	movt	r2, #2
   1facc:	ldr	r3, [sp]
   1fad0:	bl	11344 <error@plt>
   1fad4:	bl	11500 <abort@plt>
   1fad8:	push	{fp, lr}
   1fadc:	mov	fp, sp
   1fae0:	sub	sp, sp, #16
   1fae4:	str	r0, [fp, #-4]
   1fae8:	str	r1, [sp, #8]
   1faec:	str	r2, [sp, #4]
   1faf0:	ldr	r0, [fp, #-4]
   1faf4:	ldr	r1, [sp, #8]
   1faf8:	orr	r1, r1, #512	; 0x200
   1fafc:	ldr	r2, [sp, #4]
   1fb00:	bl	139cc <__assert_fail@plt+0x2484>
   1fb04:	str	r0, [sp]
   1fb08:	ldr	r0, [sp]
   1fb0c:	movw	r1, #0
   1fb10:	cmp	r0, r1
   1fb14:	bne	1fb50 <__assert_fail@plt+0xe608>
   1fb18:	bl	11404 <__errno_location@plt>
   1fb1c:	ldr	r0, [r0]
   1fb20:	cmp	r0, #22
   1fb24:	beq	1fb2c <__assert_fail@plt+0xe5e4>
   1fb28:	b	1fb4c <__assert_fail@plt+0xe604>
   1fb2c:	movw	r0, #24493	; 0x5fad
   1fb30:	movt	r0, #2
   1fb34:	movw	r1, #24509	; 0x5fbd
   1fb38:	movt	r1, #2
   1fb3c:	movw	r2, #41	; 0x29
   1fb40:	movw	r3, #24520	; 0x5fc8
   1fb44:	movt	r3, #2
   1fb48:	bl	11548 <__assert_fail@plt>
   1fb4c:	bl	1fa88 <__assert_fail@plt+0xe540>
   1fb50:	ldr	r0, [sp]
   1fb54:	mov	sp, fp
   1fb58:	pop	{fp, pc}
   1fb5c:	sub	sp, sp, #16
   1fb60:	str	r0, [sp, #12]
   1fb64:	str	r1, [sp, #8]
   1fb68:	ldr	r0, [sp, #12]
   1fb6c:	ldr	r0, [r0, #48]	; 0x30
   1fb70:	and	r0, r0, #16
   1fb74:	cmp	r0, #0
   1fb78:	beq	1fb98 <__assert_fail@plt+0xe650>
   1fb7c:	ldr	r0, [sp, #12]
   1fb80:	ldr	r0, [r0, #48]	; 0x30
   1fb84:	and	r0, r0, #1
   1fb88:	cmp	r0, #0
   1fb8c:	movw	r0, #1
   1fb90:	str	r0, [sp, #4]
   1fb94:	beq	1fbf0 <__assert_fail@plt+0xe6a8>
   1fb98:	ldr	r0, [sp, #12]
   1fb9c:	ldr	r0, [r0, #48]	; 0x30
   1fba0:	and	r0, r0, #16
   1fba4:	cmp	r0, #0
   1fba8:	movw	r0, #0
   1fbac:	str	r0, [sp]
   1fbb0:	beq	1fbe8 <__assert_fail@plt+0xe6a0>
   1fbb4:	ldr	r0, [sp, #12]
   1fbb8:	ldr	r0, [r0, #48]	; 0x30
   1fbbc:	and	r0, r0, #1
   1fbc0:	cmp	r0, #0
   1fbc4:	movw	r0, #0
   1fbc8:	str	r0, [sp]
   1fbcc:	beq	1fbe8 <__assert_fail@plt+0xe6a0>
   1fbd0:	ldr	r0, [sp, #8]
   1fbd4:	ldr	r0, [r0, #48]	; 0x30
   1fbd8:	cmp	r0, #0
   1fbdc:	movw	r0, #0
   1fbe0:	movne	r0, #1
   1fbe4:	str	r0, [sp]
   1fbe8:	ldr	r0, [sp]
   1fbec:	str	r0, [sp, #4]
   1fbf0:	ldr	r0, [sp, #4]
   1fbf4:	and	r0, r0, #1
   1fbf8:	add	sp, sp, #16
   1fbfc:	bx	lr
   1fc00:	push	{fp, lr}
   1fc04:	mov	fp, sp
   1fc08:	sub	sp, sp, #80	; 0x50
   1fc0c:	ldr	ip, [fp, #8]
   1fc10:	str	r0, [fp, #-8]
   1fc14:	str	r1, [fp, #-12]
   1fc18:	str	r2, [fp, #-16]
   1fc1c:	str	r3, [fp, #-20]	; 0xffffffec
   1fc20:	movw	r0, #0
   1fc24:	str	r0, [fp, #-36]	; 0xffffffdc
   1fc28:	ldr	r1, [fp, #-16]
   1fc2c:	cmp	r0, r1
   1fc30:	str	ip, [sp, #20]
   1fc34:	bgt	1fc48 <__assert_fail@plt+0xe700>
   1fc38:	ldr	r0, [fp, #-16]
   1fc3c:	cmp	r0, #36	; 0x24
   1fc40:	bgt	1fc48 <__assert_fail@plt+0xe700>
   1fc44:	b	1fc68 <__assert_fail@plt+0xe720>
   1fc48:	movw	r0, #24598	; 0x6016
   1fc4c:	movt	r0, #2
   1fc50:	movw	r1, #24636	; 0x603c
   1fc54:	movt	r1, #2
   1fc58:	movw	r2, #85	; 0x55
   1fc5c:	movw	r3, #24652	; 0x604c
   1fc60:	movt	r3, #2
   1fc64:	bl	11548 <__assert_fail@plt>
   1fc68:	ldr	r0, [fp, #-12]
   1fc6c:	movw	r1, #0
   1fc70:	cmp	r0, r1
   1fc74:	beq	1fc84 <__assert_fail@plt+0xe73c>
   1fc78:	ldr	r0, [fp, #-12]
   1fc7c:	str	r0, [sp, #16]
   1fc80:	b	1fc90 <__assert_fail@plt+0xe748>
   1fc84:	sub	r0, fp, #24
   1fc88:	str	r0, [sp, #16]
   1fc8c:	b	1fc90 <__assert_fail@plt+0xe748>
   1fc90:	ldr	r0, [sp, #16]
   1fc94:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc98:	bl	11404 <__errno_location@plt>
   1fc9c:	movw	lr, #0
   1fca0:	str	lr, [r0]
   1fca4:	ldr	r0, [fp, #-8]
   1fca8:	str	r0, [sp, #40]	; 0x28
   1fcac:	ldr	r0, [sp, #40]	; 0x28
   1fcb0:	ldrb	r0, [r0]
   1fcb4:	strb	r0, [sp, #39]	; 0x27
   1fcb8:	bl	11398 <__ctype_b_loc@plt>
   1fcbc:	ldr	r0, [r0]
   1fcc0:	ldrb	lr, [sp, #39]	; 0x27
   1fcc4:	mov	r1, lr
   1fcc8:	add	r0, r0, lr, lsl #1
   1fccc:	ldrh	r0, [r0]
   1fcd0:	and	r0, r0, #8192	; 0x2000
   1fcd4:	cmp	r0, #0
   1fcd8:	str	r1, [sp, #12]
   1fcdc:	beq	1fcf8 <__assert_fail@plt+0xe7b0>
   1fce0:	ldr	r0, [sp, #40]	; 0x28
   1fce4:	add	r1, r0, #1
   1fce8:	str	r1, [sp, #40]	; 0x28
   1fcec:	ldrb	r0, [r0, #1]
   1fcf0:	strb	r0, [sp, #39]	; 0x27
   1fcf4:	b	1fcb8 <__assert_fail@plt+0xe770>
   1fcf8:	ldrb	r0, [sp, #39]	; 0x27
   1fcfc:	cmp	r0, #45	; 0x2d
   1fd00:	bne	1fd10 <__assert_fail@plt+0xe7c8>
   1fd04:	movw	r0, #4
   1fd08:	str	r0, [fp, #-4]
   1fd0c:	b	20260 <__assert_fail@plt+0xed18>
   1fd10:	ldr	r0, [fp, #-8]
   1fd14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd18:	ldr	r2, [fp, #-16]
   1fd1c:	bl	113bc <strtoul@plt>
   1fd20:	str	r0, [fp, #-32]	; 0xffffffe0
   1fd24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd28:	ldr	r0, [r0]
   1fd2c:	ldr	r1, [fp, #-8]
   1fd30:	cmp	r0, r1
   1fd34:	bne	1fd98 <__assert_fail@plt+0xe850>
   1fd38:	ldr	r0, [fp, #8]
   1fd3c:	movw	r1, #0
   1fd40:	cmp	r0, r1
   1fd44:	beq	1fd88 <__assert_fail@plt+0xe840>
   1fd48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd4c:	ldr	r0, [r0]
   1fd50:	ldrb	r0, [r0]
   1fd54:	cmp	r0, #0
   1fd58:	beq	1fd88 <__assert_fail@plt+0xe840>
   1fd5c:	ldr	r0, [fp, #8]
   1fd60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd64:	ldr	r1, [r1]
   1fd68:	ldrb	r1, [r1]
   1fd6c:	bl	113d4 <strchr@plt>
   1fd70:	movw	r1, #0
   1fd74:	cmp	r0, r1
   1fd78:	beq	1fd88 <__assert_fail@plt+0xe840>
   1fd7c:	movw	r0, #1
   1fd80:	str	r0, [fp, #-32]	; 0xffffffe0
   1fd84:	b	1fd94 <__assert_fail@plt+0xe84c>
   1fd88:	movw	r0, #4
   1fd8c:	str	r0, [fp, #-4]
   1fd90:	b	20260 <__assert_fail@plt+0xed18>
   1fd94:	b	1fdd0 <__assert_fail@plt+0xe888>
   1fd98:	bl	11404 <__errno_location@plt>
   1fd9c:	ldr	r0, [r0]
   1fda0:	cmp	r0, #0
   1fda4:	beq	1fdcc <__assert_fail@plt+0xe884>
   1fda8:	bl	11404 <__errno_location@plt>
   1fdac:	ldr	r0, [r0]
   1fdb0:	cmp	r0, #34	; 0x22
   1fdb4:	beq	1fdc4 <__assert_fail@plt+0xe87c>
   1fdb8:	movw	r0, #4
   1fdbc:	str	r0, [fp, #-4]
   1fdc0:	b	20260 <__assert_fail@plt+0xed18>
   1fdc4:	movw	r0, #1
   1fdc8:	str	r0, [fp, #-36]	; 0xffffffdc
   1fdcc:	b	1fdd0 <__assert_fail@plt+0xe888>
   1fdd0:	ldr	r0, [fp, #8]
   1fdd4:	movw	r1, #0
   1fdd8:	cmp	r0, r1
   1fddc:	bne	1fdf8 <__assert_fail@plt+0xe8b0>
   1fde0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fde4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fde8:	str	r0, [r1]
   1fdec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fdf0:	str	r0, [fp, #-4]
   1fdf4:	b	20260 <__assert_fail@plt+0xed18>
   1fdf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fdfc:	ldr	r0, [r0]
   1fe00:	ldrb	r0, [r0]
   1fe04:	cmp	r0, #0
   1fe08:	beq	2024c <__assert_fail@plt+0xed04>
   1fe0c:	movw	r0, #1024	; 0x400
   1fe10:	str	r0, [sp, #32]
   1fe14:	movw	r0, #1
   1fe18:	str	r0, [sp, #28]
   1fe1c:	ldr	r0, [fp, #8]
   1fe20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe24:	ldr	r1, [r1]
   1fe28:	ldrb	r1, [r1]
   1fe2c:	bl	113d4 <strchr@plt>
   1fe30:	movw	r1, #0
   1fe34:	cmp	r0, r1
   1fe38:	bne	1fe58 <__assert_fail@plt+0xe910>
   1fe3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fe40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe44:	str	r0, [r1]
   1fe48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fe4c:	orr	r0, r0, #2
   1fe50:	str	r0, [fp, #-4]
   1fe54:	b	20260 <__assert_fail@plt+0xed18>
   1fe58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe5c:	ldr	r0, [r0]
   1fe60:	ldrb	r0, [r0]
   1fe64:	sub	r0, r0, #69	; 0x45
   1fe68:	cmp	r0, #47	; 0x2f
   1fe6c:	str	r0, [sp, #8]
   1fe70:	bhi	1ffdc <__assert_fail@plt+0xea94>
   1fe74:	add	r0, pc, #8
   1fe78:	ldr	r1, [sp, #8]
   1fe7c:	ldr	r0, [r0, r1, lsl #2]
   1fe80:	mov	pc, r0
   1fe84:	andeq	pc, r1, r4, asr #30
   1fe88:	ldrdeq	pc, [r1], -ip
   1fe8c:	andeq	pc, r1, r4, asr #30
   1fe90:	ldrdeq	pc, [r1], -ip
   1fe94:	ldrdeq	pc, [r1], -ip
   1fe98:	ldrdeq	pc, [r1], -ip
   1fe9c:	andeq	pc, r1, r4, asr #30
   1fea0:	ldrdeq	pc, [r1], -ip
   1fea4:	andeq	pc, r1, r4, asr #30
   1fea8:	ldrdeq	pc, [r1], -ip
   1feac:	ldrdeq	pc, [r1], -ip
   1feb0:	andeq	pc, r1, r4, asr #30
   1feb4:	ldrdeq	pc, [r1], -ip
   1feb8:	ldrdeq	pc, [r1], -ip
   1febc:	ldrdeq	pc, [r1], -ip
   1fec0:	andeq	pc, r1, r4, asr #30
   1fec4:	ldrdeq	pc, [r1], -ip
   1fec8:	ldrdeq	pc, [r1], -ip
   1fecc:	ldrdeq	pc, [r1], -ip
   1fed0:	ldrdeq	pc, [r1], -ip
   1fed4:	andeq	pc, r1, r4, asr #30
   1fed8:	andeq	pc, r1, r4, asr #30
   1fedc:	ldrdeq	pc, [r1], -ip
   1fee0:	ldrdeq	pc, [r1], -ip
   1fee4:	ldrdeq	pc, [r1], -ip
   1fee8:	ldrdeq	pc, [r1], -ip
   1feec:	ldrdeq	pc, [r1], -ip
   1fef0:	ldrdeq	pc, [r1], -ip
   1fef4:	ldrdeq	pc, [r1], -ip
   1fef8:	ldrdeq	pc, [r1], -ip
   1fefc:	ldrdeq	pc, [r1], -ip
   1ff00:	ldrdeq	pc, [r1], -ip
   1ff04:	ldrdeq	pc, [r1], -ip
   1ff08:	ldrdeq	pc, [r1], -ip
   1ff0c:	andeq	pc, r1, r4, asr #30
   1ff10:	ldrdeq	pc, [r1], -ip
   1ff14:	ldrdeq	pc, [r1], -ip
   1ff18:	ldrdeq	pc, [r1], -ip
   1ff1c:	andeq	pc, r1, r4, asr #30
   1ff20:	ldrdeq	pc, [r1], -ip
   1ff24:	andeq	pc, r1, r4, asr #30
   1ff28:	ldrdeq	pc, [r1], -ip
   1ff2c:	ldrdeq	pc, [r1], -ip
   1ff30:	ldrdeq	pc, [r1], -ip
   1ff34:	ldrdeq	pc, [r1], -ip
   1ff38:	ldrdeq	pc, [r1], -ip
   1ff3c:	ldrdeq	pc, [r1], -ip
   1ff40:	andeq	pc, r1, r4, asr #30
   1ff44:	ldr	r0, [fp, #8]
   1ff48:	movw	r1, #48	; 0x30
   1ff4c:	bl	113d4 <strchr@plt>
   1ff50:	movw	r1, #0
   1ff54:	cmp	r0, r1
   1ff58:	beq	1ffd8 <__assert_fail@plt+0xea90>
   1ff5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff60:	ldr	r0, [r0]
   1ff64:	ldrb	r0, [r0, #1]
   1ff68:	mov	r1, r0
   1ff6c:	cmp	r0, #66	; 0x42
   1ff70:	str	r1, [sp, #4]
   1ff74:	beq	1ffc0 <__assert_fail@plt+0xea78>
   1ff78:	b	1ff7c <__assert_fail@plt+0xea34>
   1ff7c:	ldr	r0, [sp, #4]
   1ff80:	cmp	r0, #68	; 0x44
   1ff84:	beq	1ffc0 <__assert_fail@plt+0xea78>
   1ff88:	b	1ff8c <__assert_fail@plt+0xea44>
   1ff8c:	ldr	r0, [sp, #4]
   1ff90:	cmp	r0, #105	; 0x69
   1ff94:	bne	1ffd4 <__assert_fail@plt+0xea8c>
   1ff98:	b	1ff9c <__assert_fail@plt+0xea54>
   1ff9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffa0:	ldr	r0, [r0]
   1ffa4:	ldrb	r0, [r0, #2]
   1ffa8:	cmp	r0, #66	; 0x42
   1ffac:	bne	1ffbc <__assert_fail@plt+0xea74>
   1ffb0:	ldr	r0, [sp, #28]
   1ffb4:	add	r0, r0, #2
   1ffb8:	str	r0, [sp, #28]
   1ffbc:	b	1ffd4 <__assert_fail@plt+0xea8c>
   1ffc0:	movw	r0, #1000	; 0x3e8
   1ffc4:	str	r0, [sp, #32]
   1ffc8:	ldr	r0, [sp, #28]
   1ffcc:	add	r0, r0, #1
   1ffd0:	str	r0, [sp, #28]
   1ffd4:	b	1ffd8 <__assert_fail@plt+0xea90>
   1ffd8:	b	1ffdc <__assert_fail@plt+0xea94>
   1ffdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffe0:	ldr	r0, [r0]
   1ffe4:	ldrb	r0, [r0]
   1ffe8:	sub	r0, r0, #66	; 0x42
   1ffec:	cmp	r0, #53	; 0x35
   1fff0:	str	r0, [sp]
   1fff4:	bhi	201e8 <__assert_fail@plt+0xeca0>
   1fff8:	add	r0, pc, #8
   1fffc:	ldr	r1, [sp]
   20000:	ldr	r0, [r0, r1, lsl #2]
   20004:	mov	pc, r0
   20008:	strdeq	r0, [r2], -r4
   2000c:	andeq	r0, r2, r8, ror #3
   20010:	andeq	r0, r2, r8, ror #3
   20014:	andeq	r0, r2, r4, lsl r1
   20018:	andeq	r0, r2, r8, ror #3
   2001c:	andeq	r0, r2, ip, lsr #2
   20020:	andeq	r0, r2, r8, ror #3
   20024:	andeq	r0, r2, r8, ror #3
   20028:	andeq	r0, r2, r8, ror #3
   2002c:	andeq	r0, r2, r4, asr #2
   20030:	andeq	r0, r2, r8, ror #3
   20034:	andeq	r0, r2, ip, asr r1
   20038:	andeq	r0, r2, r8, ror #3
   2003c:	andeq	r0, r2, r8, ror #3
   20040:	andeq	r0, r2, r4, ror r1
   20044:	andeq	r0, r2, r8, ror #3
   20048:	andeq	r0, r2, r8, ror #3
   2004c:	andeq	r0, r2, r8, ror #3
   20050:	andeq	r0, r2, ip, lsl #3
   20054:	andeq	r0, r2, r8, ror #3
   20058:	andeq	r0, r2, r8, ror #3
   2005c:	andeq	r0, r2, r8, ror #3
   20060:	andeq	r0, r2, r8, ror #3
   20064:			; <UNDEFINED> instruction: 0x000201b8
   20068:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   2006c:	andeq	r0, r2, r8, ror #3
   20070:	andeq	r0, r2, r8, ror #3
   20074:	andeq	r0, r2, r8, ror #3
   20078:	andeq	r0, r2, r8, ror #3
   2007c:	andeq	r0, r2, r8, ror #3
   20080:	andeq	r0, r2, r8, ror #3
   20084:	andeq	r0, r2, r8, ror #3
   20088:	andeq	r0, r2, r0, ror #1
   2008c:	andeq	r0, r2, r8, lsl #2
   20090:	andeq	r0, r2, r8, ror #3
   20094:	andeq	r0, r2, r8, ror #3
   20098:	andeq	r0, r2, r8, ror #3
   2009c:	andeq	r0, r2, ip, lsr #2
   200a0:	andeq	r0, r2, r8, ror #3
   200a4:	andeq	r0, r2, r8, ror #3
   200a8:	andeq	r0, r2, r8, ror #3
   200ac:	andeq	r0, r2, r4, asr #2
   200b0:	andeq	r0, r2, r8, ror #3
   200b4:	andeq	r0, r2, ip, asr r1
   200b8:	andeq	r0, r2, r8, ror #3
   200bc:	andeq	r0, r2, r8, ror #3
   200c0:	andeq	r0, r2, r8, ror #3
   200c4:	andeq	r0, r2, r8, ror #3
   200c8:	andeq	r0, r2, r8, ror #3
   200cc:	andeq	r0, r2, r8, ror #3
   200d0:	andeq	r0, r2, ip, lsl #3
   200d4:	andeq	r0, r2, r8, ror #3
   200d8:	andeq	r0, r2, r8, ror #3
   200dc:	andeq	r0, r2, r4, lsr #3
   200e0:	sub	r0, fp, #32
   200e4:	movw	r1, #512	; 0x200
   200e8:	bl	2026c <__assert_fail@plt+0xed24>
   200ec:	str	r0, [sp, #24]
   200f0:	b	20204 <__assert_fail@plt+0xecbc>
   200f4:	sub	r0, fp, #32
   200f8:	movw	r1, #1024	; 0x400
   200fc:	bl	2026c <__assert_fail@plt+0xed24>
   20100:	str	r0, [sp, #24]
   20104:	b	20204 <__assert_fail@plt+0xecbc>
   20108:	movw	r0, #0
   2010c:	str	r0, [sp, #24]
   20110:	b	20204 <__assert_fail@plt+0xecbc>
   20114:	ldr	r1, [sp, #32]
   20118:	sub	r0, fp, #32
   2011c:	movw	r2, #6
   20120:	bl	218ac <__assert_fail@plt+0x10364>
   20124:	str	r0, [sp, #24]
   20128:	b	20204 <__assert_fail@plt+0xecbc>
   2012c:	ldr	r1, [sp, #32]
   20130:	sub	r0, fp, #32
   20134:	movw	r2, #3
   20138:	bl	218ac <__assert_fail@plt+0x10364>
   2013c:	str	r0, [sp, #24]
   20140:	b	20204 <__assert_fail@plt+0xecbc>
   20144:	ldr	r1, [sp, #32]
   20148:	sub	r0, fp, #32
   2014c:	movw	r2, #1
   20150:	bl	218ac <__assert_fail@plt+0x10364>
   20154:	str	r0, [sp, #24]
   20158:	b	20204 <__assert_fail@plt+0xecbc>
   2015c:	ldr	r1, [sp, #32]
   20160:	sub	r0, fp, #32
   20164:	movw	r2, #2
   20168:	bl	218ac <__assert_fail@plt+0x10364>
   2016c:	str	r0, [sp, #24]
   20170:	b	20204 <__assert_fail@plt+0xecbc>
   20174:	ldr	r1, [sp, #32]
   20178:	sub	r0, fp, #32
   2017c:	movw	r2, #5
   20180:	bl	218ac <__assert_fail@plt+0x10364>
   20184:	str	r0, [sp, #24]
   20188:	b	20204 <__assert_fail@plt+0xecbc>
   2018c:	ldr	r1, [sp, #32]
   20190:	sub	r0, fp, #32
   20194:	movw	r2, #4
   20198:	bl	218ac <__assert_fail@plt+0x10364>
   2019c:	str	r0, [sp, #24]
   201a0:	b	20204 <__assert_fail@plt+0xecbc>
   201a4:	sub	r0, fp, #32
   201a8:	movw	r1, #2
   201ac:	bl	2026c <__assert_fail@plt+0xed24>
   201b0:	str	r0, [sp, #24]
   201b4:	b	20204 <__assert_fail@plt+0xecbc>
   201b8:	ldr	r1, [sp, #32]
   201bc:	sub	r0, fp, #32
   201c0:	movw	r2, #8
   201c4:	bl	218ac <__assert_fail@plt+0x10364>
   201c8:	str	r0, [sp, #24]
   201cc:	b	20204 <__assert_fail@plt+0xecbc>
   201d0:	ldr	r1, [sp, #32]
   201d4:	sub	r0, fp, #32
   201d8:	movw	r2, #7
   201dc:	bl	218ac <__assert_fail@plt+0x10364>
   201e0:	str	r0, [sp, #24]
   201e4:	b	20204 <__assert_fail@plt+0xecbc>
   201e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   201ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   201f0:	str	r0, [r1]
   201f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   201f8:	orr	r0, r0, #2
   201fc:	str	r0, [fp, #-4]
   20200:	b	20260 <__assert_fail@plt+0xed18>
   20204:	ldr	r0, [sp, #24]
   20208:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2020c:	orr	r0, r1, r0
   20210:	str	r0, [fp, #-36]	; 0xffffffdc
   20214:	ldr	r0, [sp, #28]
   20218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2021c:	ldr	r2, [r1]
   20220:	add	r0, r2, r0
   20224:	str	r0, [r1]
   20228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2022c:	ldr	r0, [r0]
   20230:	ldrsb	r0, [r0]
   20234:	cmp	r0, #0
   20238:	beq	20248 <__assert_fail@plt+0xed00>
   2023c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20240:	orr	r0, r0, #2
   20244:	str	r0, [fp, #-36]	; 0xffffffdc
   20248:	b	2024c <__assert_fail@plt+0xed04>
   2024c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20250:	ldr	r1, [fp, #-20]	; 0xffffffec
   20254:	str	r0, [r1]
   20258:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2025c:	str	r0, [fp, #-4]
   20260:	ldr	r0, [fp, #-4]
   20264:	mov	sp, fp
   20268:	pop	{fp, pc}
   2026c:	push	{fp, lr}
   20270:	mov	fp, sp
   20274:	sub	sp, sp, #184	; 0xb8
   20278:	str	r0, [fp, #-8]
   2027c:	str	r1, [fp, #-12]
   20280:	b	206b4 <__assert_fail@plt+0xf16c>
   20284:	b	2049c <__assert_fail@plt+0xef54>
   20288:	ldr	r0, [fp, #-12]
   2028c:	cmp	r0, #0
   20290:	bge	203c0 <__assert_fail@plt+0xee78>
   20294:	ldr	r0, [fp, #-8]
   20298:	ldr	r0, [r0]
   2029c:	cmp	r0, #0
   202a0:	bcs	20334 <__assert_fail@plt+0xedec>
   202a4:	b	202a8 <__assert_fail@plt+0xed60>
   202a8:	ldr	r0, [fp, #-8]
   202ac:	ldr	r0, [r0]
   202b0:	ldr	r1, [fp, #-12]
   202b4:	movw	r2, #127	; 0x7f
   202b8:	sdiv	r1, r2, r1
   202bc:	cmp	r0, r1
   202c0:	bcc	20464 <__assert_fail@plt+0xef1c>
   202c4:	b	20480 <__assert_fail@plt+0xef38>
   202c8:	b	202cc <__assert_fail@plt+0xed84>
   202cc:	ldr	r0, [pc, #4072]	; 212bc <__assert_fail@plt+0xfd74>
   202d0:	ldr	r1, [fp, #-12]
   202d4:	cmp	r1, r0
   202d8:	blt	202f0 <__assert_fail@plt+0xeda8>
   202dc:	b	202fc <__assert_fail@plt+0xedb4>
   202e0:	ldr	r0, [fp, #-12]
   202e4:	movw	r1, #0
   202e8:	cmp	r1, r0
   202ec:	bge	202fc <__assert_fail@plt+0xedb4>
   202f0:	movw	r0, #0
   202f4:	str	r0, [fp, #-20]	; 0xffffffec
   202f8:	b	20314 <__assert_fail@plt+0xedcc>
   202fc:	ldr	r0, [fp, #-12]
   20300:	movw	r1, #0
   20304:	sub	r0, r1, r0
   20308:	movw	r1, #127	; 0x7f
   2030c:	sdiv	r0, r1, r0
   20310:	str	r0, [fp, #-20]	; 0xffffffec
   20314:	ldr	r0, [fp, #-20]	; 0xffffffec
   20318:	ldr	r1, [fp, #-8]
   2031c:	ldr	r1, [r1]
   20320:	mvn	r2, #0
   20324:	sub	r1, r2, r1
   20328:	cmp	r0, r1
   2032c:	bls	20464 <__assert_fail@plt+0xef1c>
   20330:	b	20480 <__assert_fail@plt+0xef38>
   20334:	b	20338 <__assert_fail@plt+0xedf0>
   20338:	b	203a0 <__assert_fail@plt+0xee58>
   2033c:	b	203a0 <__assert_fail@plt+0xee58>
   20340:	ldr	r0, [fp, #-12]
   20344:	cmn	r0, #1
   20348:	bne	203a0 <__assert_fail@plt+0xee58>
   2034c:	b	20370 <__assert_fail@plt+0xee28>
   20350:	ldr	r0, [fp, #-8]
   20354:	ldr	r0, [r0]
   20358:	mvn	r1, #127	; 0x7f
   2035c:	add	r0, r0, r1
   20360:	movw	r1, #0
   20364:	cmp	r1, r0
   20368:	bcc	20464 <__assert_fail@plt+0xef1c>
   2036c:	b	20480 <__assert_fail@plt+0xef38>
   20370:	ldr	r0, [fp, #-8]
   20374:	ldr	r0, [r0]
   20378:	movw	r1, #0
   2037c:	cmp	r1, r0
   20380:	bcs	20480 <__assert_fail@plt+0xef38>
   20384:	ldr	r0, [fp, #-8]
   20388:	ldr	r0, [r0]
   2038c:	sub	r0, r0, #1
   20390:	movw	r1, #127	; 0x7f
   20394:	cmp	r1, r0
   20398:	bcc	20464 <__assert_fail@plt+0xef1c>
   2039c:	b	20480 <__assert_fail@plt+0xef38>
   203a0:	ldr	r0, [fp, #-12]
   203a4:	mvn	r1, #127	; 0x7f
   203a8:	sdiv	r0, r1, r0
   203ac:	ldr	r1, [fp, #-8]
   203b0:	ldr	r1, [r1]
   203b4:	cmp	r0, r1
   203b8:	bcc	20464 <__assert_fail@plt+0xef1c>
   203bc:	b	20480 <__assert_fail@plt+0xef38>
   203c0:	ldr	r0, [fp, #-12]
   203c4:	cmp	r0, #0
   203c8:	bne	203d0 <__assert_fail@plt+0xee88>
   203cc:	b	20480 <__assert_fail@plt+0xef38>
   203d0:	ldr	r0, [fp, #-8]
   203d4:	ldr	r0, [r0]
   203d8:	cmp	r0, #0
   203dc:	bcs	20448 <__assert_fail@plt+0xef00>
   203e0:	ldr	r0, [fp, #-8]
   203e4:	ldr	r0, [r0]
   203e8:	cmn	r0, #1
   203ec:	bne	20428 <__assert_fail@plt+0xeee0>
   203f0:	b	203f4 <__assert_fail@plt+0xeeac>
   203f4:	ldr	r0, [fp, #-12]
   203f8:	mvn	r1, #127	; 0x7f
   203fc:	add	r0, r0, r1
   20400:	movw	r1, #0
   20404:	cmp	r1, r0
   20408:	blt	20464 <__assert_fail@plt+0xef1c>
   2040c:	b	20480 <__assert_fail@plt+0xef38>
   20410:	ldr	r0, [fp, #-12]
   20414:	sub	r0, r0, #1
   20418:	movw	r1, #127	; 0x7f
   2041c:	cmp	r1, r0
   20420:	blt	20464 <__assert_fail@plt+0xef1c>
   20424:	b	20480 <__assert_fail@plt+0xef38>
   20428:	ldr	r0, [fp, #-8]
   2042c:	ldr	r0, [r0]
   20430:	mvn	r1, #127	; 0x7f
   20434:	udiv	r0, r1, r0
   20438:	ldr	r1, [fp, #-12]
   2043c:	cmp	r0, r1
   20440:	bcc	20464 <__assert_fail@plt+0xef1c>
   20444:	b	20480 <__assert_fail@plt+0xef38>
   20448:	ldr	r0, [fp, #-12]
   2044c:	movw	r1, #127	; 0x7f
   20450:	sdiv	r0, r1, r0
   20454:	ldr	r1, [fp, #-8]
   20458:	ldr	r1, [r1]
   2045c:	cmp	r0, r1
   20460:	bcs	20480 <__assert_fail@plt+0xef38>
   20464:	ldr	r0, [fp, #-8]
   20468:	ldr	r0, [r0]
   2046c:	ldr	r1, [fp, #-12]
   20470:	mul	r0, r0, r1
   20474:	sxtb	r0, r0
   20478:	str	r0, [fp, #-16]
   2047c:	b	2184c <__assert_fail@plt+0x10304>
   20480:	ldr	r0, [fp, #-8]
   20484:	ldr	r0, [r0]
   20488:	ldr	r1, [fp, #-12]
   2048c:	mul	r0, r0, r1
   20490:	sxtb	r0, r0
   20494:	str	r0, [fp, #-16]
   20498:	b	21880 <__assert_fail@plt+0x10338>
   2049c:	ldr	r0, [fp, #-12]
   204a0:	cmp	r0, #0
   204a4:	bge	205d0 <__assert_fail@plt+0xf088>
   204a8:	ldr	r0, [fp, #-8]
   204ac:	ldr	r0, [r0]
   204b0:	cmp	r0, #0
   204b4:	bcs	20548 <__assert_fail@plt+0xf000>
   204b8:	b	204bc <__assert_fail@plt+0xef74>
   204bc:	ldr	r0, [fp, #-8]
   204c0:	ldr	r0, [r0]
   204c4:	ldr	r1, [fp, #-12]
   204c8:	movw	r2, #255	; 0xff
   204cc:	sdiv	r1, r2, r1
   204d0:	cmp	r0, r1
   204d4:	bcc	2067c <__assert_fail@plt+0xf134>
   204d8:	b	20698 <__assert_fail@plt+0xf150>
   204dc:	b	204e0 <__assert_fail@plt+0xef98>
   204e0:	ldr	r0, [pc, #3540]	; 212bc <__assert_fail@plt+0xfd74>
   204e4:	ldr	r1, [fp, #-12]
   204e8:	cmp	r1, r0
   204ec:	blt	20504 <__assert_fail@plt+0xefbc>
   204f0:	b	20510 <__assert_fail@plt+0xefc8>
   204f4:	ldr	r0, [fp, #-12]
   204f8:	movw	r1, #0
   204fc:	cmp	r1, r0
   20500:	bge	20510 <__assert_fail@plt+0xefc8>
   20504:	movw	r0, #0
   20508:	str	r0, [fp, #-24]	; 0xffffffe8
   2050c:	b	20528 <__assert_fail@plt+0xefe0>
   20510:	ldr	r0, [fp, #-12]
   20514:	movw	r1, #0
   20518:	sub	r0, r1, r0
   2051c:	movw	r1, #255	; 0xff
   20520:	sdiv	r0, r1, r0
   20524:	str	r0, [fp, #-24]	; 0xffffffe8
   20528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2052c:	ldr	r1, [fp, #-8]
   20530:	ldr	r1, [r1]
   20534:	mvn	r2, #0
   20538:	sub	r1, r2, r1
   2053c:	cmp	r0, r1
   20540:	bls	2067c <__assert_fail@plt+0xf134>
   20544:	b	20698 <__assert_fail@plt+0xf150>
   20548:	b	2054c <__assert_fail@plt+0xf004>
   2054c:	b	205b0 <__assert_fail@plt+0xf068>
   20550:	b	205b0 <__assert_fail@plt+0xf068>
   20554:	ldr	r0, [fp, #-12]
   20558:	cmn	r0, #1
   2055c:	bne	205b0 <__assert_fail@plt+0xf068>
   20560:	b	20580 <__assert_fail@plt+0xf038>
   20564:	ldr	r0, [fp, #-8]
   20568:	ldr	r0, [r0]
   2056c:	add	r0, r0, #0
   20570:	movw	r1, #0
   20574:	cmp	r1, r0
   20578:	bcc	2067c <__assert_fail@plt+0xf134>
   2057c:	b	20698 <__assert_fail@plt+0xf150>
   20580:	ldr	r0, [fp, #-8]
   20584:	ldr	r0, [r0]
   20588:	movw	r1, #0
   2058c:	cmp	r1, r0
   20590:	bcs	20698 <__assert_fail@plt+0xf150>
   20594:	ldr	r0, [fp, #-8]
   20598:	ldr	r0, [r0]
   2059c:	sub	r0, r0, #1
   205a0:	mvn	r1, #0
   205a4:	cmp	r1, r0
   205a8:	bcc	2067c <__assert_fail@plt+0xf134>
   205ac:	b	20698 <__assert_fail@plt+0xf150>
   205b0:	ldr	r0, [fp, #-12]
   205b4:	movw	r1, #0
   205b8:	sdiv	r0, r1, r0
   205bc:	ldr	r1, [fp, #-8]
   205c0:	ldr	r1, [r1]
   205c4:	cmp	r0, r1
   205c8:	bcc	2067c <__assert_fail@plt+0xf134>
   205cc:	b	20698 <__assert_fail@plt+0xf150>
   205d0:	ldr	r0, [fp, #-12]
   205d4:	cmp	r0, #0
   205d8:	bne	205e0 <__assert_fail@plt+0xf098>
   205dc:	b	20698 <__assert_fail@plt+0xf150>
   205e0:	ldr	r0, [fp, #-8]
   205e4:	ldr	r0, [r0]
   205e8:	cmp	r0, #0
   205ec:	bcs	20660 <__assert_fail@plt+0xf118>
   205f0:	b	205f8 <__assert_fail@plt+0xf0b0>
   205f4:	b	205fc <__assert_fail@plt+0xf0b4>
   205f8:	b	20640 <__assert_fail@plt+0xf0f8>
   205fc:	ldr	r0, [fp, #-8]
   20600:	ldr	r0, [r0]
   20604:	cmn	r0, #1
   20608:	bne	20640 <__assert_fail@plt+0xf0f8>
   2060c:	b	20610 <__assert_fail@plt+0xf0c8>
   20610:	ldr	r0, [fp, #-12]
   20614:	add	r0, r0, #0
   20618:	movw	r1, #0
   2061c:	cmp	r1, r0
   20620:	blt	2067c <__assert_fail@plt+0xf134>
   20624:	b	20698 <__assert_fail@plt+0xf150>
   20628:	ldr	r0, [fp, #-12]
   2062c:	sub	r0, r0, #1
   20630:	mvn	r1, #0
   20634:	cmp	r1, r0
   20638:	blt	2067c <__assert_fail@plt+0xf134>
   2063c:	b	20698 <__assert_fail@plt+0xf150>
   20640:	ldr	r0, [fp, #-8]
   20644:	ldr	r0, [r0]
   20648:	movw	r1, #0
   2064c:	udiv	r0, r1, r0
   20650:	ldr	r1, [fp, #-12]
   20654:	cmp	r0, r1
   20658:	bcc	2067c <__assert_fail@plt+0xf134>
   2065c:	b	20698 <__assert_fail@plt+0xf150>
   20660:	ldr	r0, [fp, #-12]
   20664:	movw	r1, #255	; 0xff
   20668:	sdiv	r0, r1, r0
   2066c:	ldr	r1, [fp, #-8]
   20670:	ldr	r1, [r1]
   20674:	cmp	r0, r1
   20678:	bcs	20698 <__assert_fail@plt+0xf150>
   2067c:	ldr	r0, [fp, #-8]
   20680:	ldr	r0, [r0]
   20684:	ldr	r1, [fp, #-12]
   20688:	mul	r0, r0, r1
   2068c:	and	r0, r0, #255	; 0xff
   20690:	str	r0, [fp, #-16]
   20694:	b	2184c <__assert_fail@plt+0x10304>
   20698:	ldr	r0, [fp, #-8]
   2069c:	ldr	r0, [r0]
   206a0:	ldr	r1, [fp, #-12]
   206a4:	mul	r0, r0, r1
   206a8:	and	r0, r0, #255	; 0xff
   206ac:	str	r0, [fp, #-16]
   206b0:	b	21880 <__assert_fail@plt+0x10338>
   206b4:	b	20ae8 <__assert_fail@plt+0xf5a0>
   206b8:	b	208d0 <__assert_fail@plt+0xf388>
   206bc:	ldr	r0, [fp, #-12]
   206c0:	cmp	r0, #0
   206c4:	bge	207f4 <__assert_fail@plt+0xf2ac>
   206c8:	ldr	r0, [fp, #-8]
   206cc:	ldr	r0, [r0]
   206d0:	cmp	r0, #0
   206d4:	bcs	20768 <__assert_fail@plt+0xf220>
   206d8:	b	206dc <__assert_fail@plt+0xf194>
   206dc:	ldr	r0, [fp, #-8]
   206e0:	ldr	r0, [r0]
   206e4:	ldr	r1, [fp, #-12]
   206e8:	movw	r2, #32767	; 0x7fff
   206ec:	sdiv	r1, r2, r1
   206f0:	cmp	r0, r1
   206f4:	bcc	20898 <__assert_fail@plt+0xf350>
   206f8:	b	208b4 <__assert_fail@plt+0xf36c>
   206fc:	b	20700 <__assert_fail@plt+0xf1b8>
   20700:	ldr	r0, [pc, #2996]	; 212bc <__assert_fail@plt+0xfd74>
   20704:	ldr	r1, [fp, #-12]
   20708:	cmp	r1, r0
   2070c:	blt	20724 <__assert_fail@plt+0xf1dc>
   20710:	b	20730 <__assert_fail@plt+0xf1e8>
   20714:	ldr	r0, [fp, #-12]
   20718:	movw	r1, #0
   2071c:	cmp	r1, r0
   20720:	bge	20730 <__assert_fail@plt+0xf1e8>
   20724:	movw	r0, #0
   20728:	str	r0, [fp, #-28]	; 0xffffffe4
   2072c:	b	20748 <__assert_fail@plt+0xf200>
   20730:	ldr	r0, [fp, #-12]
   20734:	movw	r1, #0
   20738:	sub	r0, r1, r0
   2073c:	movw	r1, #32767	; 0x7fff
   20740:	sdiv	r0, r1, r0
   20744:	str	r0, [fp, #-28]	; 0xffffffe4
   20748:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2074c:	ldr	r1, [fp, #-8]
   20750:	ldr	r1, [r1]
   20754:	mvn	r2, #0
   20758:	sub	r1, r2, r1
   2075c:	cmp	r0, r1
   20760:	bls	20898 <__assert_fail@plt+0xf350>
   20764:	b	208b4 <__assert_fail@plt+0xf36c>
   20768:	b	2076c <__assert_fail@plt+0xf224>
   2076c:	b	207d4 <__assert_fail@plt+0xf28c>
   20770:	b	207d4 <__assert_fail@plt+0xf28c>
   20774:	ldr	r0, [fp, #-12]
   20778:	cmn	r0, #1
   2077c:	bne	207d4 <__assert_fail@plt+0xf28c>
   20780:	b	207a4 <__assert_fail@plt+0xf25c>
   20784:	ldr	r0, [pc, #4076]	; 21778 <__assert_fail@plt+0x10230>
   20788:	ldr	r1, [fp, #-8]
   2078c:	ldr	r1, [r1]
   20790:	add	r0, r1, r0
   20794:	movw	r1, #0
   20798:	cmp	r1, r0
   2079c:	bcc	20898 <__assert_fail@plt+0xf350>
   207a0:	b	208b4 <__assert_fail@plt+0xf36c>
   207a4:	ldr	r0, [fp, #-8]
   207a8:	ldr	r0, [r0]
   207ac:	movw	r1, #0
   207b0:	cmp	r1, r0
   207b4:	bcs	208b4 <__assert_fail@plt+0xf36c>
   207b8:	ldr	r0, [fp, #-8]
   207bc:	ldr	r0, [r0]
   207c0:	sub	r0, r0, #1
   207c4:	movw	r1, #32767	; 0x7fff
   207c8:	cmp	r1, r0
   207cc:	bcc	20898 <__assert_fail@plt+0xf350>
   207d0:	b	208b4 <__assert_fail@plt+0xf36c>
   207d4:	ldr	r0, [pc, #3996]	; 21778 <__assert_fail@plt+0x10230>
   207d8:	ldr	r1, [fp, #-12]
   207dc:	sdiv	r0, r0, r1
   207e0:	ldr	r1, [fp, #-8]
   207e4:	ldr	r1, [r1]
   207e8:	cmp	r0, r1
   207ec:	bcc	20898 <__assert_fail@plt+0xf350>
   207f0:	b	208b4 <__assert_fail@plt+0xf36c>
   207f4:	ldr	r0, [fp, #-12]
   207f8:	cmp	r0, #0
   207fc:	bne	20804 <__assert_fail@plt+0xf2bc>
   20800:	b	208b4 <__assert_fail@plt+0xf36c>
   20804:	ldr	r0, [fp, #-8]
   20808:	ldr	r0, [r0]
   2080c:	cmp	r0, #0
   20810:	bcs	2087c <__assert_fail@plt+0xf334>
   20814:	ldr	r0, [fp, #-8]
   20818:	ldr	r0, [r0]
   2081c:	cmn	r0, #1
   20820:	bne	2085c <__assert_fail@plt+0xf314>
   20824:	b	20828 <__assert_fail@plt+0xf2e0>
   20828:	ldr	r0, [pc, #3912]	; 21778 <__assert_fail@plt+0x10230>
   2082c:	ldr	r1, [fp, #-12]
   20830:	add	r0, r1, r0
   20834:	movw	r1, #0
   20838:	cmp	r1, r0
   2083c:	blt	20898 <__assert_fail@plt+0xf350>
   20840:	b	208b4 <__assert_fail@plt+0xf36c>
   20844:	ldr	r0, [fp, #-12]
   20848:	sub	r0, r0, #1
   2084c:	movw	r1, #32767	; 0x7fff
   20850:	cmp	r1, r0
   20854:	blt	20898 <__assert_fail@plt+0xf350>
   20858:	b	208b4 <__assert_fail@plt+0xf36c>
   2085c:	ldr	r0, [pc, #3860]	; 21778 <__assert_fail@plt+0x10230>
   20860:	ldr	r1, [fp, #-8]
   20864:	ldr	r1, [r1]
   20868:	udiv	r0, r0, r1
   2086c:	ldr	r1, [fp, #-12]
   20870:	cmp	r0, r1
   20874:	bcc	20898 <__assert_fail@plt+0xf350>
   20878:	b	208b4 <__assert_fail@plt+0xf36c>
   2087c:	ldr	r0, [fp, #-12]
   20880:	movw	r1, #32767	; 0x7fff
   20884:	sdiv	r0, r1, r0
   20888:	ldr	r1, [fp, #-8]
   2088c:	ldr	r1, [r1]
   20890:	cmp	r0, r1
   20894:	bcs	208b4 <__assert_fail@plt+0xf36c>
   20898:	ldr	r0, [fp, #-8]
   2089c:	ldr	r0, [r0]
   208a0:	ldr	r1, [fp, #-12]
   208a4:	mul	r0, r0, r1
   208a8:	sxth	r0, r0
   208ac:	str	r0, [fp, #-16]
   208b0:	b	2184c <__assert_fail@plt+0x10304>
   208b4:	ldr	r0, [fp, #-8]
   208b8:	ldr	r0, [r0]
   208bc:	ldr	r1, [fp, #-12]
   208c0:	mul	r0, r0, r1
   208c4:	sxth	r0, r0
   208c8:	str	r0, [fp, #-16]
   208cc:	b	21880 <__assert_fail@plt+0x10338>
   208d0:	ldr	r0, [fp, #-12]
   208d4:	cmp	r0, #0
   208d8:	bge	20a04 <__assert_fail@plt+0xf4bc>
   208dc:	ldr	r0, [fp, #-8]
   208e0:	ldr	r0, [r0]
   208e4:	cmp	r0, #0
   208e8:	bcs	2097c <__assert_fail@plt+0xf434>
   208ec:	b	208f0 <__assert_fail@plt+0xf3a8>
   208f0:	ldr	r0, [fp, #-8]
   208f4:	ldr	r0, [r0]
   208f8:	ldr	r1, [fp, #-12]
   208fc:	movw	r2, #65535	; 0xffff
   20900:	sdiv	r1, r2, r1
   20904:	cmp	r0, r1
   20908:	bcc	20ab0 <__assert_fail@plt+0xf568>
   2090c:	b	20acc <__assert_fail@plt+0xf584>
   20910:	b	20914 <__assert_fail@plt+0xf3cc>
   20914:	ldr	r0, [pc, #3972]	; 218a0 <__assert_fail@plt+0x10358>
   20918:	ldr	r1, [fp, #-12]
   2091c:	cmp	r1, r0
   20920:	blt	20938 <__assert_fail@plt+0xf3f0>
   20924:	b	20944 <__assert_fail@plt+0xf3fc>
   20928:	ldr	r0, [fp, #-12]
   2092c:	movw	r1, #0
   20930:	cmp	r1, r0
   20934:	bge	20944 <__assert_fail@plt+0xf3fc>
   20938:	movw	r0, #0
   2093c:	str	r0, [fp, #-32]	; 0xffffffe0
   20940:	b	2095c <__assert_fail@plt+0xf414>
   20944:	ldr	r0, [fp, #-12]
   20948:	movw	r1, #0
   2094c:	sub	r0, r1, r0
   20950:	movw	r1, #65535	; 0xffff
   20954:	sdiv	r0, r1, r0
   20958:	str	r0, [fp, #-32]	; 0xffffffe0
   2095c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20960:	ldr	r1, [fp, #-8]
   20964:	ldr	r1, [r1]
   20968:	mvn	r2, #0
   2096c:	sub	r1, r2, r1
   20970:	cmp	r0, r1
   20974:	bls	20ab0 <__assert_fail@plt+0xf568>
   20978:	b	20acc <__assert_fail@plt+0xf584>
   2097c:	b	20980 <__assert_fail@plt+0xf438>
   20980:	b	209e4 <__assert_fail@plt+0xf49c>
   20984:	b	209e4 <__assert_fail@plt+0xf49c>
   20988:	ldr	r0, [fp, #-12]
   2098c:	cmn	r0, #1
   20990:	bne	209e4 <__assert_fail@plt+0xf49c>
   20994:	b	209b4 <__assert_fail@plt+0xf46c>
   20998:	ldr	r0, [fp, #-8]
   2099c:	ldr	r0, [r0]
   209a0:	add	r0, r0, #0
   209a4:	movw	r1, #0
   209a8:	cmp	r1, r0
   209ac:	bcc	20ab0 <__assert_fail@plt+0xf568>
   209b0:	b	20acc <__assert_fail@plt+0xf584>
   209b4:	ldr	r0, [fp, #-8]
   209b8:	ldr	r0, [r0]
   209bc:	movw	r1, #0
   209c0:	cmp	r1, r0
   209c4:	bcs	20acc <__assert_fail@plt+0xf584>
   209c8:	ldr	r0, [fp, #-8]
   209cc:	ldr	r0, [r0]
   209d0:	sub	r0, r0, #1
   209d4:	mvn	r1, #0
   209d8:	cmp	r1, r0
   209dc:	bcc	20ab0 <__assert_fail@plt+0xf568>
   209e0:	b	20acc <__assert_fail@plt+0xf584>
   209e4:	ldr	r0, [fp, #-12]
   209e8:	movw	r1, #0
   209ec:	sdiv	r0, r1, r0
   209f0:	ldr	r1, [fp, #-8]
   209f4:	ldr	r1, [r1]
   209f8:	cmp	r0, r1
   209fc:	bcc	20ab0 <__assert_fail@plt+0xf568>
   20a00:	b	20acc <__assert_fail@plt+0xf584>
   20a04:	ldr	r0, [fp, #-12]
   20a08:	cmp	r0, #0
   20a0c:	bne	20a14 <__assert_fail@plt+0xf4cc>
   20a10:	b	20acc <__assert_fail@plt+0xf584>
   20a14:	ldr	r0, [fp, #-8]
   20a18:	ldr	r0, [r0]
   20a1c:	cmp	r0, #0
   20a20:	bcs	20a94 <__assert_fail@plt+0xf54c>
   20a24:	b	20a2c <__assert_fail@plt+0xf4e4>
   20a28:	b	20a30 <__assert_fail@plt+0xf4e8>
   20a2c:	b	20a74 <__assert_fail@plt+0xf52c>
   20a30:	ldr	r0, [fp, #-8]
   20a34:	ldr	r0, [r0]
   20a38:	cmn	r0, #1
   20a3c:	bne	20a74 <__assert_fail@plt+0xf52c>
   20a40:	b	20a44 <__assert_fail@plt+0xf4fc>
   20a44:	ldr	r0, [fp, #-12]
   20a48:	add	r0, r0, #0
   20a4c:	movw	r1, #0
   20a50:	cmp	r1, r0
   20a54:	blt	20ab0 <__assert_fail@plt+0xf568>
   20a58:	b	20acc <__assert_fail@plt+0xf584>
   20a5c:	ldr	r0, [fp, #-12]
   20a60:	sub	r0, r0, #1
   20a64:	mvn	r1, #0
   20a68:	cmp	r1, r0
   20a6c:	blt	20ab0 <__assert_fail@plt+0xf568>
   20a70:	b	20acc <__assert_fail@plt+0xf584>
   20a74:	ldr	r0, [fp, #-8]
   20a78:	ldr	r0, [r0]
   20a7c:	movw	r1, #0
   20a80:	udiv	r0, r1, r0
   20a84:	ldr	r1, [fp, #-12]
   20a88:	cmp	r0, r1
   20a8c:	bcc	20ab0 <__assert_fail@plt+0xf568>
   20a90:	b	20acc <__assert_fail@plt+0xf584>
   20a94:	ldr	r0, [fp, #-12]
   20a98:	movw	r1, #65535	; 0xffff
   20a9c:	sdiv	r0, r1, r0
   20aa0:	ldr	r1, [fp, #-8]
   20aa4:	ldr	r1, [r1]
   20aa8:	cmp	r0, r1
   20aac:	bcs	20acc <__assert_fail@plt+0xf584>
   20ab0:	ldr	r0, [fp, #-8]
   20ab4:	ldr	r0, [r0]
   20ab8:	ldr	r1, [fp, #-12]
   20abc:	mul	r0, r0, r1
   20ac0:	uxth	r0, r0
   20ac4:	str	r0, [fp, #-16]
   20ac8:	b	2184c <__assert_fail@plt+0x10304>
   20acc:	ldr	r0, [fp, #-8]
   20ad0:	ldr	r0, [r0]
   20ad4:	ldr	r1, [fp, #-12]
   20ad8:	mul	r0, r0, r1
   20adc:	uxth	r0, r0
   20ae0:	str	r0, [fp, #-16]
   20ae4:	b	21880 <__assert_fail@plt+0x10338>
   20ae8:	b	20aec <__assert_fail@plt+0xf5a4>
   20aec:	b	20ce8 <__assert_fail@plt+0xf7a0>
   20af0:	ldr	r0, [fp, #-12]
   20af4:	cmp	r0, #0
   20af8:	bge	20c18 <__assert_fail@plt+0xf6d0>
   20afc:	ldr	r0, [fp, #-8]
   20b00:	ldr	r0, [r0]
   20b04:	cmp	r0, #0
   20b08:	bcs	20b9c <__assert_fail@plt+0xf654>
   20b0c:	b	20b10 <__assert_fail@plt+0xf5c8>
   20b10:	ldr	r0, [pc, #3468]	; 218a4 <__assert_fail@plt+0x1035c>
   20b14:	ldr	r1, [fp, #-8]
   20b18:	ldr	r1, [r1]
   20b1c:	ldr	r2, [fp, #-12]
   20b20:	sdiv	r0, r0, r2
   20b24:	cmp	r1, r0
   20b28:	bcc	20cb8 <__assert_fail@plt+0xf770>
   20b2c:	b	20cd0 <__assert_fail@plt+0xf788>
   20b30:	b	20b34 <__assert_fail@plt+0xf5ec>
   20b34:	ldr	r0, [pc, #3428]	; 218a0 <__assert_fail@plt+0x10358>
   20b38:	ldr	r1, [fp, #-12]
   20b3c:	cmp	r1, r0
   20b40:	blt	20b58 <__assert_fail@plt+0xf610>
   20b44:	b	20b64 <__assert_fail@plt+0xf61c>
   20b48:	ldr	r0, [fp, #-12]
   20b4c:	movw	r1, #0
   20b50:	cmp	r1, r0
   20b54:	bge	20b64 <__assert_fail@plt+0xf61c>
   20b58:	movw	r0, #0
   20b5c:	str	r0, [fp, #-36]	; 0xffffffdc
   20b60:	b	20b7c <__assert_fail@plt+0xf634>
   20b64:	ldr	r0, [pc, #3384]	; 218a4 <__assert_fail@plt+0x1035c>
   20b68:	ldr	r1, [fp, #-12]
   20b6c:	movw	r2, #0
   20b70:	sub	r1, r2, r1
   20b74:	sdiv	r0, r0, r1
   20b78:	str	r0, [fp, #-36]	; 0xffffffdc
   20b7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20b80:	ldr	r1, [fp, #-8]
   20b84:	ldr	r1, [r1]
   20b88:	mvn	r2, #0
   20b8c:	sub	r1, r2, r1
   20b90:	cmp	r0, r1
   20b94:	bls	20cb8 <__assert_fail@plt+0xf770>
   20b98:	b	20cd0 <__assert_fail@plt+0xf788>
   20b9c:	ldr	r0, [fp, #-12]
   20ba0:	cmn	r0, #1
   20ba4:	bne	20bf8 <__assert_fail@plt+0xf6b0>
   20ba8:	b	20bc8 <__assert_fail@plt+0xf680>
   20bac:	ldr	r0, [fp, #-8]
   20bb0:	ldr	r0, [r0]
   20bb4:	add	r0, r0, #-2147483648	; 0x80000000
   20bb8:	movw	r1, #0
   20bbc:	cmp	r1, r0
   20bc0:	bcc	20cb8 <__assert_fail@plt+0xf770>
   20bc4:	b	20cd0 <__assert_fail@plt+0xf788>
   20bc8:	ldr	r0, [fp, #-8]
   20bcc:	ldr	r0, [r0]
   20bd0:	movw	r1, #0
   20bd4:	cmp	r1, r0
   20bd8:	bcs	20cd0 <__assert_fail@plt+0xf788>
   20bdc:	ldr	r0, [pc, #3264]	; 218a4 <__assert_fail@plt+0x1035c>
   20be0:	ldr	r1, [fp, #-8]
   20be4:	ldr	r1, [r1]
   20be8:	sub	r1, r1, #1
   20bec:	cmp	r0, r1
   20bf0:	bcc	20cb8 <__assert_fail@plt+0xf770>
   20bf4:	b	20cd0 <__assert_fail@plt+0xf788>
   20bf8:	ldr	r0, [pc, #3240]	; 218a8 <__assert_fail@plt+0x10360>
   20bfc:	ldr	r1, [fp, #-12]
   20c00:	sdiv	r0, r0, r1
   20c04:	ldr	r1, [fp, #-8]
   20c08:	ldr	r1, [r1]
   20c0c:	cmp	r0, r1
   20c10:	bcc	20cb8 <__assert_fail@plt+0xf770>
   20c14:	b	20cd0 <__assert_fail@plt+0xf788>
   20c18:	ldr	r0, [fp, #-12]
   20c1c:	cmp	r0, #0
   20c20:	bne	20c28 <__assert_fail@plt+0xf6e0>
   20c24:	b	20cd0 <__assert_fail@plt+0xf788>
   20c28:	ldr	r0, [fp, #-8]
   20c2c:	ldr	r0, [r0]
   20c30:	cmp	r0, #0
   20c34:	bcs	20c9c <__assert_fail@plt+0xf754>
   20c38:	ldr	r0, [fp, #-8]
   20c3c:	ldr	r0, [r0]
   20c40:	cmn	r0, #1
   20c44:	bne	20c7c <__assert_fail@plt+0xf734>
   20c48:	b	20c4c <__assert_fail@plt+0xf704>
   20c4c:	ldr	r0, [fp, #-12]
   20c50:	add	r0, r0, #-2147483648	; 0x80000000
   20c54:	movw	r1, #0
   20c58:	cmp	r1, r0
   20c5c:	blt	20cb8 <__assert_fail@plt+0xf770>
   20c60:	b	20cd0 <__assert_fail@plt+0xf788>
   20c64:	ldr	r0, [pc, #3128]	; 218a4 <__assert_fail@plt+0x1035c>
   20c68:	ldr	r1, [fp, #-12]
   20c6c:	sub	r1, r1, #1
   20c70:	cmp	r0, r1
   20c74:	blt	20cb8 <__assert_fail@plt+0xf770>
   20c78:	b	20cd0 <__assert_fail@plt+0xf788>
   20c7c:	ldr	r0, [pc, #3108]	; 218a8 <__assert_fail@plt+0x10360>
   20c80:	ldr	r1, [fp, #-8]
   20c84:	ldr	r1, [r1]
   20c88:	udiv	r0, r0, r1
   20c8c:	ldr	r1, [fp, #-12]
   20c90:	cmp	r0, r1
   20c94:	bcc	20cb8 <__assert_fail@plt+0xf770>
   20c98:	b	20cd0 <__assert_fail@plt+0xf788>
   20c9c:	ldr	r0, [pc, #3072]	; 218a4 <__assert_fail@plt+0x1035c>
   20ca0:	ldr	r1, [fp, #-12]
   20ca4:	sdiv	r0, r0, r1
   20ca8:	ldr	r1, [fp, #-8]
   20cac:	ldr	r1, [r1]
   20cb0:	cmp	r0, r1
   20cb4:	bcs	20cd0 <__assert_fail@plt+0xf788>
   20cb8:	ldr	r0, [fp, #-8]
   20cbc:	ldr	r0, [r0]
   20cc0:	ldr	r1, [fp, #-12]
   20cc4:	mul	r0, r0, r1
   20cc8:	str	r0, [fp, #-16]
   20ccc:	b	2184c <__assert_fail@plt+0x10304>
   20cd0:	ldr	r0, [fp, #-8]
   20cd4:	ldr	r0, [r0]
   20cd8:	ldr	r1, [fp, #-12]
   20cdc:	mul	r0, r0, r1
   20ce0:	str	r0, [fp, #-16]
   20ce4:	b	21880 <__assert_fail@plt+0x10338>
   20ce8:	ldr	r0, [fp, #-12]
   20cec:	cmp	r0, #0
   20cf0:	bge	20e1c <__assert_fail@plt+0xf8d4>
   20cf4:	ldr	r0, [fp, #-8]
   20cf8:	ldr	r0, [r0]
   20cfc:	cmp	r0, #0
   20d00:	bcs	20d94 <__assert_fail@plt+0xf84c>
   20d04:	b	20d28 <__assert_fail@plt+0xf7e0>
   20d08:	ldr	r0, [fp, #-8]
   20d0c:	ldr	r0, [r0]
   20d10:	ldr	r1, [fp, #-12]
   20d14:	mvn	r2, #0
   20d18:	udiv	r1, r2, r1
   20d1c:	cmp	r0, r1
   20d20:	bcc	20ec8 <__assert_fail@plt+0xf980>
   20d24:	b	20ee0 <__assert_fail@plt+0xf998>
   20d28:	b	20d2c <__assert_fail@plt+0xf7e4>
   20d2c:	ldr	r0, [pc, #2924]	; 218a0 <__assert_fail@plt+0x10358>
   20d30:	ldr	r1, [fp, #-12]
   20d34:	cmp	r1, r0
   20d38:	blt	20d50 <__assert_fail@plt+0xf808>
   20d3c:	b	20d5c <__assert_fail@plt+0xf814>
   20d40:	ldr	r0, [fp, #-12]
   20d44:	movw	r1, #0
   20d48:	cmp	r1, r0
   20d4c:	bge	20d5c <__assert_fail@plt+0xf814>
   20d50:	movw	r0, #1
   20d54:	str	r0, [fp, #-40]	; 0xffffffd8
   20d58:	b	20d74 <__assert_fail@plt+0xf82c>
   20d5c:	ldr	r0, [fp, #-12]
   20d60:	movw	r1, #0
   20d64:	sub	r0, r1, r0
   20d68:	mvn	r1, #0
   20d6c:	udiv	r0, r1, r0
   20d70:	str	r0, [fp, #-40]	; 0xffffffd8
   20d74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d78:	ldr	r1, [fp, #-8]
   20d7c:	ldr	r1, [r1]
   20d80:	mvn	r2, #0
   20d84:	sub	r1, r2, r1
   20d88:	cmp	r0, r1
   20d8c:	bls	20ec8 <__assert_fail@plt+0xf980>
   20d90:	b	20ee0 <__assert_fail@plt+0xf998>
   20d94:	b	20d98 <__assert_fail@plt+0xf850>
   20d98:	b	20dfc <__assert_fail@plt+0xf8b4>
   20d9c:	b	20dfc <__assert_fail@plt+0xf8b4>
   20da0:	ldr	r0, [fp, #-12]
   20da4:	cmn	r0, #1
   20da8:	bne	20dfc <__assert_fail@plt+0xf8b4>
   20dac:	b	20dcc <__assert_fail@plt+0xf884>
   20db0:	ldr	r0, [fp, #-8]
   20db4:	ldr	r0, [r0]
   20db8:	add	r0, r0, #0
   20dbc:	movw	r1, #0
   20dc0:	cmp	r1, r0
   20dc4:	bcc	20ec8 <__assert_fail@plt+0xf980>
   20dc8:	b	20ee0 <__assert_fail@plt+0xf998>
   20dcc:	ldr	r0, [fp, #-8]
   20dd0:	ldr	r0, [r0]
   20dd4:	movw	r1, #0
   20dd8:	cmp	r1, r0
   20ddc:	bcs	20ee0 <__assert_fail@plt+0xf998>
   20de0:	ldr	r0, [fp, #-8]
   20de4:	ldr	r0, [r0]
   20de8:	sub	r0, r0, #1
   20dec:	mvn	r1, #0
   20df0:	cmp	r1, r0
   20df4:	bcc	20ec8 <__assert_fail@plt+0xf980>
   20df8:	b	20ee0 <__assert_fail@plt+0xf998>
   20dfc:	ldr	r0, [fp, #-12]
   20e00:	movw	r1, #0
   20e04:	sdiv	r0, r1, r0
   20e08:	ldr	r1, [fp, #-8]
   20e0c:	ldr	r1, [r1]
   20e10:	cmp	r0, r1
   20e14:	bcc	20ec8 <__assert_fail@plt+0xf980>
   20e18:	b	20ee0 <__assert_fail@plt+0xf998>
   20e1c:	ldr	r0, [fp, #-12]
   20e20:	cmp	r0, #0
   20e24:	bne	20e2c <__assert_fail@plt+0xf8e4>
   20e28:	b	20ee0 <__assert_fail@plt+0xf998>
   20e2c:	ldr	r0, [fp, #-8]
   20e30:	ldr	r0, [r0]
   20e34:	cmp	r0, #0
   20e38:	bcs	20eac <__assert_fail@plt+0xf964>
   20e3c:	b	20e44 <__assert_fail@plt+0xf8fc>
   20e40:	b	20e48 <__assert_fail@plt+0xf900>
   20e44:	b	20e8c <__assert_fail@plt+0xf944>
   20e48:	ldr	r0, [fp, #-8]
   20e4c:	ldr	r0, [r0]
   20e50:	cmn	r0, #1
   20e54:	bne	20e8c <__assert_fail@plt+0xf944>
   20e58:	b	20e5c <__assert_fail@plt+0xf914>
   20e5c:	ldr	r0, [fp, #-12]
   20e60:	add	r0, r0, #0
   20e64:	movw	r1, #0
   20e68:	cmp	r1, r0
   20e6c:	blt	20ec8 <__assert_fail@plt+0xf980>
   20e70:	b	20ee0 <__assert_fail@plt+0xf998>
   20e74:	ldr	r0, [fp, #-12]
   20e78:	sub	r0, r0, #1
   20e7c:	mvn	r1, #0
   20e80:	cmp	r1, r0
   20e84:	blt	20ec8 <__assert_fail@plt+0xf980>
   20e88:	b	20ee0 <__assert_fail@plt+0xf998>
   20e8c:	ldr	r0, [fp, #-8]
   20e90:	ldr	r0, [r0]
   20e94:	movw	r1, #0
   20e98:	udiv	r0, r1, r0
   20e9c:	ldr	r1, [fp, #-12]
   20ea0:	cmp	r0, r1
   20ea4:	bcc	20ec8 <__assert_fail@plt+0xf980>
   20ea8:	b	20ee0 <__assert_fail@plt+0xf998>
   20eac:	ldr	r0, [fp, #-12]
   20eb0:	mvn	r1, #0
   20eb4:	udiv	r0, r1, r0
   20eb8:	ldr	r1, [fp, #-8]
   20ebc:	ldr	r1, [r1]
   20ec0:	cmp	r0, r1
   20ec4:	bcs	20ee0 <__assert_fail@plt+0xf998>
   20ec8:	ldr	r0, [fp, #-8]
   20ecc:	ldr	r0, [r0]
   20ed0:	ldr	r1, [fp, #-12]
   20ed4:	mul	r0, r0, r1
   20ed8:	str	r0, [fp, #-16]
   20edc:	b	2184c <__assert_fail@plt+0x10304>
   20ee0:	ldr	r0, [fp, #-8]
   20ee4:	ldr	r0, [r0]
   20ee8:	ldr	r1, [fp, #-12]
   20eec:	mul	r0, r0, r1
   20ef0:	str	r0, [fp, #-16]
   20ef4:	b	21880 <__assert_fail@plt+0x10338>
   20ef8:	b	20efc <__assert_fail@plt+0xf9b4>
   20efc:	b	210f8 <__assert_fail@plt+0xfbb0>
   20f00:	ldr	r0, [fp, #-12]
   20f04:	cmp	r0, #0
   20f08:	bge	21028 <__assert_fail@plt+0xfae0>
   20f0c:	ldr	r0, [fp, #-8]
   20f10:	ldr	r0, [r0]
   20f14:	cmp	r0, #0
   20f18:	bcs	20fac <__assert_fail@plt+0xfa64>
   20f1c:	b	20f20 <__assert_fail@plt+0xf9d8>
   20f20:	ldr	r0, [pc, #2428]	; 218a4 <__assert_fail@plt+0x1035c>
   20f24:	ldr	r1, [fp, #-8]
   20f28:	ldr	r1, [r1]
   20f2c:	ldr	r2, [fp, #-12]
   20f30:	sdiv	r0, r0, r2
   20f34:	cmp	r1, r0
   20f38:	bcc	210c8 <__assert_fail@plt+0xfb80>
   20f3c:	b	210e0 <__assert_fail@plt+0xfb98>
   20f40:	b	20f44 <__assert_fail@plt+0xf9fc>
   20f44:	ldr	r0, [pc, #2388]	; 218a0 <__assert_fail@plt+0x10358>
   20f48:	ldr	r1, [fp, #-12]
   20f4c:	cmp	r1, r0
   20f50:	blt	20f68 <__assert_fail@plt+0xfa20>
   20f54:	b	20f74 <__assert_fail@plt+0xfa2c>
   20f58:	ldr	r0, [fp, #-12]
   20f5c:	movw	r1, #0
   20f60:	cmp	r1, r0
   20f64:	bge	20f74 <__assert_fail@plt+0xfa2c>
   20f68:	movw	r0, #0
   20f6c:	str	r0, [fp, #-44]	; 0xffffffd4
   20f70:	b	20f8c <__assert_fail@plt+0xfa44>
   20f74:	ldr	r0, [pc, #2344]	; 218a4 <__assert_fail@plt+0x1035c>
   20f78:	ldr	r1, [fp, #-12]
   20f7c:	movw	r2, #0
   20f80:	sub	r1, r2, r1
   20f84:	sdiv	r0, r0, r1
   20f88:	str	r0, [fp, #-44]	; 0xffffffd4
   20f8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20f90:	ldr	r1, [fp, #-8]
   20f94:	ldr	r1, [r1]
   20f98:	mvn	r2, #0
   20f9c:	sub	r1, r2, r1
   20fa0:	cmp	r0, r1
   20fa4:	bls	210c8 <__assert_fail@plt+0xfb80>
   20fa8:	b	210e0 <__assert_fail@plt+0xfb98>
   20fac:	ldr	r0, [fp, #-12]
   20fb0:	cmn	r0, #1
   20fb4:	bne	21008 <__assert_fail@plt+0xfac0>
   20fb8:	b	20fd8 <__assert_fail@plt+0xfa90>
   20fbc:	ldr	r0, [fp, #-8]
   20fc0:	ldr	r0, [r0]
   20fc4:	add	r0, r0, #-2147483648	; 0x80000000
   20fc8:	movw	r1, #0
   20fcc:	cmp	r1, r0
   20fd0:	bcc	210c8 <__assert_fail@plt+0xfb80>
   20fd4:	b	210e0 <__assert_fail@plt+0xfb98>
   20fd8:	ldr	r0, [fp, #-8]
   20fdc:	ldr	r0, [r0]
   20fe0:	movw	r1, #0
   20fe4:	cmp	r1, r0
   20fe8:	bcs	210e0 <__assert_fail@plt+0xfb98>
   20fec:	ldr	r0, [pc, #2224]	; 218a4 <__assert_fail@plt+0x1035c>
   20ff0:	ldr	r1, [fp, #-8]
   20ff4:	ldr	r1, [r1]
   20ff8:	sub	r1, r1, #1
   20ffc:	cmp	r0, r1
   21000:	bcc	210c8 <__assert_fail@plt+0xfb80>
   21004:	b	210e0 <__assert_fail@plt+0xfb98>
   21008:	ldr	r0, [pc, #2200]	; 218a8 <__assert_fail@plt+0x10360>
   2100c:	ldr	r1, [fp, #-12]
   21010:	sdiv	r0, r0, r1
   21014:	ldr	r1, [fp, #-8]
   21018:	ldr	r1, [r1]
   2101c:	cmp	r0, r1
   21020:	bcc	210c8 <__assert_fail@plt+0xfb80>
   21024:	b	210e0 <__assert_fail@plt+0xfb98>
   21028:	ldr	r0, [fp, #-12]
   2102c:	cmp	r0, #0
   21030:	bne	21038 <__assert_fail@plt+0xfaf0>
   21034:	b	210e0 <__assert_fail@plt+0xfb98>
   21038:	ldr	r0, [fp, #-8]
   2103c:	ldr	r0, [r0]
   21040:	cmp	r0, #0
   21044:	bcs	210ac <__assert_fail@plt+0xfb64>
   21048:	ldr	r0, [fp, #-8]
   2104c:	ldr	r0, [r0]
   21050:	cmn	r0, #1
   21054:	bne	2108c <__assert_fail@plt+0xfb44>
   21058:	b	2105c <__assert_fail@plt+0xfb14>
   2105c:	ldr	r0, [fp, #-12]
   21060:	add	r0, r0, #-2147483648	; 0x80000000
   21064:	movw	r1, #0
   21068:	cmp	r1, r0
   2106c:	blt	210c8 <__assert_fail@plt+0xfb80>
   21070:	b	210e0 <__assert_fail@plt+0xfb98>
   21074:	ldr	r0, [pc, #2088]	; 218a4 <__assert_fail@plt+0x1035c>
   21078:	ldr	r1, [fp, #-12]
   2107c:	sub	r1, r1, #1
   21080:	cmp	r0, r1
   21084:	blt	210c8 <__assert_fail@plt+0xfb80>
   21088:	b	210e0 <__assert_fail@plt+0xfb98>
   2108c:	ldr	r0, [pc, #2068]	; 218a8 <__assert_fail@plt+0x10360>
   21090:	ldr	r1, [fp, #-8]
   21094:	ldr	r1, [r1]
   21098:	udiv	r0, r0, r1
   2109c:	ldr	r1, [fp, #-12]
   210a0:	cmp	r0, r1
   210a4:	bcc	210c8 <__assert_fail@plt+0xfb80>
   210a8:	b	210e0 <__assert_fail@plt+0xfb98>
   210ac:	ldr	r0, [pc, #2032]	; 218a4 <__assert_fail@plt+0x1035c>
   210b0:	ldr	r1, [fp, #-12]
   210b4:	sdiv	r0, r0, r1
   210b8:	ldr	r1, [fp, #-8]
   210bc:	ldr	r1, [r1]
   210c0:	cmp	r0, r1
   210c4:	bcs	210e0 <__assert_fail@plt+0xfb98>
   210c8:	ldr	r0, [fp, #-8]
   210cc:	ldr	r0, [r0]
   210d0:	ldr	r1, [fp, #-12]
   210d4:	mul	r0, r0, r1
   210d8:	str	r0, [fp, #-16]
   210dc:	b	2184c <__assert_fail@plt+0x10304>
   210e0:	ldr	r0, [fp, #-8]
   210e4:	ldr	r0, [r0]
   210e8:	ldr	r1, [fp, #-12]
   210ec:	mul	r0, r0, r1
   210f0:	str	r0, [fp, #-16]
   210f4:	b	21880 <__assert_fail@plt+0x10338>
   210f8:	ldr	r0, [fp, #-12]
   210fc:	cmp	r0, #0
   21100:	bge	2122c <__assert_fail@plt+0xfce4>
   21104:	ldr	r0, [fp, #-8]
   21108:	ldr	r0, [r0]
   2110c:	cmp	r0, #0
   21110:	bcs	211a4 <__assert_fail@plt+0xfc5c>
   21114:	b	21138 <__assert_fail@plt+0xfbf0>
   21118:	ldr	r0, [fp, #-8]
   2111c:	ldr	r0, [r0]
   21120:	ldr	r1, [fp, #-12]
   21124:	mvn	r2, #0
   21128:	udiv	r1, r2, r1
   2112c:	cmp	r0, r1
   21130:	bcc	212dc <__assert_fail@plt+0xfd94>
   21134:	b	212f4 <__assert_fail@plt+0xfdac>
   21138:	b	2113c <__assert_fail@plt+0xfbf4>
   2113c:	ldr	r0, [pc, #1884]	; 218a0 <__assert_fail@plt+0x10358>
   21140:	ldr	r1, [fp, #-12]
   21144:	cmp	r1, r0
   21148:	blt	21160 <__assert_fail@plt+0xfc18>
   2114c:	b	2116c <__assert_fail@plt+0xfc24>
   21150:	ldr	r0, [fp, #-12]
   21154:	movw	r1, #0
   21158:	cmp	r1, r0
   2115c:	bge	2116c <__assert_fail@plt+0xfc24>
   21160:	movw	r0, #1
   21164:	str	r0, [fp, #-48]	; 0xffffffd0
   21168:	b	21184 <__assert_fail@plt+0xfc3c>
   2116c:	ldr	r0, [fp, #-12]
   21170:	movw	r1, #0
   21174:	sub	r0, r1, r0
   21178:	mvn	r1, #0
   2117c:	udiv	r0, r1, r0
   21180:	str	r0, [fp, #-48]	; 0xffffffd0
   21184:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21188:	ldr	r1, [fp, #-8]
   2118c:	ldr	r1, [r1]
   21190:	mvn	r2, #0
   21194:	sub	r1, r2, r1
   21198:	cmp	r0, r1
   2119c:	bls	212dc <__assert_fail@plt+0xfd94>
   211a0:	b	212f4 <__assert_fail@plt+0xfdac>
   211a4:	b	211a8 <__assert_fail@plt+0xfc60>
   211a8:	b	2120c <__assert_fail@plt+0xfcc4>
   211ac:	b	2120c <__assert_fail@plt+0xfcc4>
   211b0:	ldr	r0, [fp, #-12]
   211b4:	cmn	r0, #1
   211b8:	bne	2120c <__assert_fail@plt+0xfcc4>
   211bc:	b	211dc <__assert_fail@plt+0xfc94>
   211c0:	ldr	r0, [fp, #-8]
   211c4:	ldr	r0, [r0]
   211c8:	add	r0, r0, #0
   211cc:	movw	r1, #0
   211d0:	cmp	r1, r0
   211d4:	bcc	212dc <__assert_fail@plt+0xfd94>
   211d8:	b	212f4 <__assert_fail@plt+0xfdac>
   211dc:	ldr	r0, [fp, #-8]
   211e0:	ldr	r0, [r0]
   211e4:	movw	r1, #0
   211e8:	cmp	r1, r0
   211ec:	bcs	212f4 <__assert_fail@plt+0xfdac>
   211f0:	ldr	r0, [fp, #-8]
   211f4:	ldr	r0, [r0]
   211f8:	sub	r0, r0, #1
   211fc:	mvn	r1, #0
   21200:	cmp	r1, r0
   21204:	bcc	212dc <__assert_fail@plt+0xfd94>
   21208:	b	212f4 <__assert_fail@plt+0xfdac>
   2120c:	ldr	r0, [fp, #-12]
   21210:	movw	r1, #0
   21214:	sdiv	r0, r1, r0
   21218:	ldr	r1, [fp, #-8]
   2121c:	ldr	r1, [r1]
   21220:	cmp	r0, r1
   21224:	bcc	212dc <__assert_fail@plt+0xfd94>
   21228:	b	212f4 <__assert_fail@plt+0xfdac>
   2122c:	ldr	r0, [fp, #-12]
   21230:	cmp	r0, #0
   21234:	bne	2123c <__assert_fail@plt+0xfcf4>
   21238:	b	212f4 <__assert_fail@plt+0xfdac>
   2123c:	ldr	r0, [fp, #-8]
   21240:	ldr	r0, [r0]
   21244:	cmp	r0, #0
   21248:	bcs	212c0 <__assert_fail@plt+0xfd78>
   2124c:	b	21254 <__assert_fail@plt+0xfd0c>
   21250:	b	21258 <__assert_fail@plt+0xfd10>
   21254:	b	2129c <__assert_fail@plt+0xfd54>
   21258:	ldr	r0, [fp, #-8]
   2125c:	ldr	r0, [r0]
   21260:	cmn	r0, #1
   21264:	bne	2129c <__assert_fail@plt+0xfd54>
   21268:	b	2126c <__assert_fail@plt+0xfd24>
   2126c:	ldr	r0, [fp, #-12]
   21270:	add	r0, r0, #0
   21274:	movw	r1, #0
   21278:	cmp	r1, r0
   2127c:	blt	212dc <__assert_fail@plt+0xfd94>
   21280:	b	212f4 <__assert_fail@plt+0xfdac>
   21284:	ldr	r0, [fp, #-12]
   21288:	sub	r0, r0, #1
   2128c:	mvn	r1, #0
   21290:	cmp	r1, r0
   21294:	blt	212dc <__assert_fail@plt+0xfd94>
   21298:	b	212f4 <__assert_fail@plt+0xfdac>
   2129c:	ldr	r0, [fp, #-8]
   212a0:	ldr	r0, [r0]
   212a4:	movw	r1, #0
   212a8:	udiv	r0, r1, r0
   212ac:	ldr	r1, [fp, #-12]
   212b0:	cmp	r0, r1
   212b4:	bcc	212dc <__assert_fail@plt+0xfd94>
   212b8:	b	212f4 <__assert_fail@plt+0xfdac>
   212bc:	andhi	r0, r0, r1
   212c0:	ldr	r0, [fp, #-12]
   212c4:	mvn	r1, #0
   212c8:	udiv	r0, r1, r0
   212cc:	ldr	r1, [fp, #-8]
   212d0:	ldr	r1, [r1]
   212d4:	cmp	r0, r1
   212d8:	bcs	212f4 <__assert_fail@plt+0xfdac>
   212dc:	ldr	r0, [fp, #-8]
   212e0:	ldr	r0, [r0]
   212e4:	ldr	r1, [fp, #-12]
   212e8:	mul	r0, r0, r1
   212ec:	str	r0, [fp, #-16]
   212f0:	b	2184c <__assert_fail@plt+0x10304>
   212f4:	ldr	r0, [fp, #-8]
   212f8:	ldr	r0, [r0]
   212fc:	ldr	r1, [fp, #-12]
   21300:	mul	r0, r0, r1
   21304:	str	r0, [fp, #-16]
   21308:	b	21880 <__assert_fail@plt+0x10338>
   2130c:	b	215c8 <__assert_fail@plt+0x10080>
   21310:	ldr	r0, [fp, #-12]
   21314:	cmp	r0, #0
   21318:	bge	214b4 <__assert_fail@plt+0xff6c>
   2131c:	ldr	r0, [fp, #-8]
   21320:	ldr	r0, [r0]
   21324:	cmp	r0, #0
   21328:	bcs	21418 <__assert_fail@plt+0xfed0>
   2132c:	b	21330 <__assert_fail@plt+0xfde8>
   21330:	ldr	r0, [fp, #-8]
   21334:	ldr	r0, [r0]
   21338:	ldr	r1, [fp, #-12]
   2133c:	asr	r3, r1, #31
   21340:	mvn	r2, #0
   21344:	mvn	ip, #-2147483648	; 0x80000000
   21348:	str	r0, [fp, #-52]	; 0xffffffcc
   2134c:	mov	r0, r2
   21350:	str	r1, [fp, #-56]	; 0xffffffc8
   21354:	mov	r1, ip
   21358:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2135c:	bl	246f0 <__assert_fail@plt+0x131a8>
   21360:	ldr	r2, [fp, #-52]	; 0xffffffcc
   21364:	subs	r0, r2, r0
   21368:	rscs	r1, r1, #0
   2136c:	str	r0, [fp, #-60]	; 0xffffffc4
   21370:	str	r1, [fp, #-64]	; 0xffffffc0
   21374:	blt	21598 <__assert_fail@plt+0x10050>
   21378:	b	215b0 <__assert_fail@plt+0x10068>
   2137c:	b	21380 <__assert_fail@plt+0xfe38>
   21380:	ldr	r0, [pc, #1304]	; 218a0 <__assert_fail@plt+0x10358>
   21384:	ldr	r1, [fp, #-12]
   21388:	cmp	r1, r0
   2138c:	blt	213a4 <__assert_fail@plt+0xfe5c>
   21390:	b	213b8 <__assert_fail@plt+0xfe70>
   21394:	ldr	r0, [fp, #-12]
   21398:	movw	r1, #0
   2139c:	cmp	r1, r0
   213a0:	bge	213b8 <__assert_fail@plt+0xfe70>
   213a4:	mov	r0, #0
   213a8:	mvn	r1, #0
   213ac:	str	r1, [fp, #-68]	; 0xffffffbc
   213b0:	str	r0, [fp, #-72]	; 0xffffffb8
   213b4:	b	213ec <__assert_fail@plt+0xfea4>
   213b8:	ldr	r0, [fp, #-12]
   213bc:	rsb	r0, r0, #0
   213c0:	asr	r3, r0, #31
   213c4:	mvn	r1, #0
   213c8:	mvn	r2, #-2147483648	; 0x80000000
   213cc:	str	r0, [fp, #-76]	; 0xffffffb4
   213d0:	mov	r0, r1
   213d4:	mov	r1, r2
   213d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   213dc:	bl	246f0 <__assert_fail@plt+0x131a8>
   213e0:	str	r0, [fp, #-68]	; 0xffffffbc
   213e4:	str	r1, [fp, #-72]	; 0xffffffb8
   213e8:	b	213ec <__assert_fail@plt+0xfea4>
   213ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   213f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   213f4:	ldr	r2, [fp, #-8]
   213f8:	ldr	r2, [r2]
   213fc:	mvn	r2, r2
   21400:	subs	r1, r2, r1
   21404:	rscs	r0, r0, #0
   21408:	str	r1, [fp, #-80]	; 0xffffffb0
   2140c:	str	r0, [fp, #-84]	; 0xffffffac
   21410:	bge	21598 <__assert_fail@plt+0x10050>
   21414:	b	215b0 <__assert_fail@plt+0x10068>
   21418:	ldr	r0, [fp, #-12]
   2141c:	cmn	r0, #1
   21420:	bne	21470 <__assert_fail@plt+0xff28>
   21424:	b	2144c <__assert_fail@plt+0xff04>
   21428:	ldr	r0, [fp, #-8]
   2142c:	ldr	r0, [r0]
   21430:	rsbs	r0, r0, #0
   21434:	mov	r1, #0
   21438:	sbcs	r1, r1, #-2147483648	; 0x80000000
   2143c:	str	r0, [fp, #-88]	; 0xffffffa8
   21440:	str	r1, [sp, #92]	; 0x5c
   21444:	blt	21598 <__assert_fail@plt+0x10050>
   21448:	b	215b0 <__assert_fail@plt+0x10068>
   2144c:	ldr	r0, [fp, #-8]
   21450:	ldr	r0, [r0]
   21454:	movw	r1, #0
   21458:	cmp	r1, r0
   2145c:	bcs	215b0 <__assert_fail@plt+0x10068>
   21460:	mov	r0, #0
   21464:	cmp	r0, #0
   21468:	bne	21598 <__assert_fail@plt+0x10050>
   2146c:	b	215b0 <__assert_fail@plt+0x10068>
   21470:	ldr	r0, [fp, #-12]
   21474:	asr	r3, r0, #31
   21478:	mov	r1, #0
   2147c:	mov	r2, #-2147483648	; 0x80000000
   21480:	str	r0, [sp, #88]	; 0x58
   21484:	mov	r0, r1
   21488:	mov	r1, r2
   2148c:	ldr	r2, [sp, #88]	; 0x58
   21490:	bl	246f0 <__assert_fail@plt+0x131a8>
   21494:	ldr	r2, [fp, #-8]
   21498:	ldr	r2, [r2]
   2149c:	subs	r0, r0, r2
   214a0:	sbcs	r1, r1, #0
   214a4:	str	r0, [sp, #84]	; 0x54
   214a8:	str	r1, [sp, #80]	; 0x50
   214ac:	blt	21598 <__assert_fail@plt+0x10050>
   214b0:	b	215b0 <__assert_fail@plt+0x10068>
   214b4:	ldr	r0, [fp, #-12]
   214b8:	cmp	r0, #0
   214bc:	bne	214c4 <__assert_fail@plt+0xff7c>
   214c0:	b	215b0 <__assert_fail@plt+0x10068>
   214c4:	ldr	r0, [fp, #-8]
   214c8:	ldr	r0, [r0]
   214cc:	cmp	r0, #0
   214d0:	bcs	21554 <__assert_fail@plt+0x1000c>
   214d4:	ldr	r0, [fp, #-8]
   214d8:	ldr	r0, [r0]
   214dc:	cmn	r0, #1
   214e0:	bne	2151c <__assert_fail@plt+0xffd4>
   214e4:	b	214e8 <__assert_fail@plt+0xffa0>
   214e8:	ldr	r0, [fp, #-12]
   214ec:	mov	r1, #-2147483648	; 0x80000000
   214f0:	add	r1, r1, r0, asr #31
   214f4:	rsbs	r0, r0, #0
   214f8:	rscs	r1, r1, #0
   214fc:	str	r0, [sp, #76]	; 0x4c
   21500:	str	r1, [sp, #72]	; 0x48
   21504:	blt	21598 <__assert_fail@plt+0x10050>
   21508:	b	215b0 <__assert_fail@plt+0x10068>
   2150c:	mov	r0, #0
   21510:	cmp	r0, #0
   21514:	bne	21598 <__assert_fail@plt+0x10050>
   21518:	b	215b0 <__assert_fail@plt+0x10068>
   2151c:	ldr	r0, [fp, #-8]
   21520:	ldr	r2, [r0]
   21524:	mov	r1, #-2147483648	; 0x80000000
   21528:	mov	r0, #0
   2152c:	str	r0, [sp, #68]	; 0x44
   21530:	ldr	r3, [sp, #68]	; 0x44
   21534:	bl	246f0 <__assert_fail@plt+0x131a8>
   21538:	ldr	r2, [fp, #-12]
   2153c:	subs	r0, r0, r2
   21540:	sbcs	r1, r1, r2, asr #31
   21544:	str	r0, [sp, #64]	; 0x40
   21548:	str	r1, [sp, #60]	; 0x3c
   2154c:	blt	21598 <__assert_fail@plt+0x10050>
   21550:	b	215b0 <__assert_fail@plt+0x10068>
   21554:	ldr	r0, [fp, #-12]
   21558:	asr	r3, r0, #31
   2155c:	mvn	r1, #0
   21560:	mvn	r2, #-2147483648	; 0x80000000
   21564:	str	r0, [sp, #56]	; 0x38
   21568:	mov	r0, r1
   2156c:	mov	r1, r2
   21570:	ldr	r2, [sp, #56]	; 0x38
   21574:	bl	246f0 <__assert_fail@plt+0x131a8>
   21578:	ldr	r2, [fp, #-8]
   2157c:	ldr	r2, [r2]
   21580:	subs	r0, r0, r2
   21584:	sbcs	r1, r1, #0
   21588:	str	r0, [sp, #52]	; 0x34
   2158c:	str	r1, [sp, #48]	; 0x30
   21590:	bge	215b0 <__assert_fail@plt+0x10068>
   21594:	b	21598 <__assert_fail@plt+0x10050>
   21598:	ldr	r0, [fp, #-8]
   2159c:	ldr	r0, [r0]
   215a0:	ldr	r1, [fp, #-12]
   215a4:	mul	r0, r0, r1
   215a8:	str	r0, [fp, #-16]
   215ac:	b	2184c <__assert_fail@plt+0x10304>
   215b0:	ldr	r0, [fp, #-8]
   215b4:	ldr	r0, [r0]
   215b8:	ldr	r1, [fp, #-12]
   215bc:	mul	r0, r0, r1
   215c0:	str	r0, [fp, #-16]
   215c4:	b	21880 <__assert_fail@plt+0x10338>
   215c8:	ldr	r0, [fp, #-12]
   215cc:	cmp	r0, #0
   215d0:	bge	2174c <__assert_fail@plt+0x10204>
   215d4:	ldr	r0, [fp, #-8]
   215d8:	ldr	r0, [r0]
   215dc:	cmp	r0, #0
   215e0:	bcs	216c4 <__assert_fail@plt+0x1017c>
   215e4:	b	21630 <__assert_fail@plt+0x100e8>
   215e8:	ldr	r0, [fp, #-8]
   215ec:	ldr	r0, [r0]
   215f0:	ldr	r1, [fp, #-12]
   215f4:	asr	r3, r1, #31
   215f8:	mvn	r2, #0
   215fc:	str	r0, [sp, #44]	; 0x2c
   21600:	mov	r0, r2
   21604:	str	r1, [sp, #40]	; 0x28
   21608:	mov	r1, r2
   2160c:	ldr	r2, [sp, #40]	; 0x28
   21610:	bl	247c4 <__assert_fail@plt+0x1327c>
   21614:	ldr	r2, [sp, #44]	; 0x2c
   21618:	subs	r0, r2, r0
   2161c:	rscs	r1, r1, #0
   21620:	str	r0, [sp, #36]	; 0x24
   21624:	str	r1, [sp, #32]
   21628:	bcc	2181c <__assert_fail@plt+0x102d4>
   2162c:	b	21834 <__assert_fail@plt+0x102ec>
   21630:	b	21634 <__assert_fail@plt+0x100ec>
   21634:	ldr	r0, [pc, #612]	; 218a0 <__assert_fail@plt+0x10358>
   21638:	ldr	r1, [fp, #-12]
   2163c:	cmp	r1, r0
   21640:	blt	21658 <__assert_fail@plt+0x10110>
   21644:	b	2166c <__assert_fail@plt+0x10124>
   21648:	ldr	r0, [fp, #-12]
   2164c:	movw	r1, #0
   21650:	cmp	r1, r0
   21654:	bge	2166c <__assert_fail@plt+0x10124>
   21658:	mov	r0, #1
   2165c:	mvn	r1, #0
   21660:	str	r1, [sp, #28]
   21664:	str	r0, [sp, #24]
   21668:	b	21698 <__assert_fail@plt+0x10150>
   2166c:	ldr	r0, [fp, #-12]
   21670:	rsb	r0, r0, #0
   21674:	asr	r3, r0, #31
   21678:	mvn	r1, #0
   2167c:	str	r0, [sp, #20]
   21680:	mov	r0, r1
   21684:	ldr	r2, [sp, #20]
   21688:	bl	247c4 <__assert_fail@plt+0x1327c>
   2168c:	str	r0, [sp, #28]
   21690:	str	r1, [sp, #24]
   21694:	b	21698 <__assert_fail@plt+0x10150>
   21698:	ldr	r0, [sp, #24]
   2169c:	ldr	r1, [sp, #28]
   216a0:	ldr	r2, [fp, #-8]
   216a4:	ldr	r2, [r2]
   216a8:	mvn	r2, r2
   216ac:	subs	r1, r2, r1
   216b0:	rscs	r0, r0, #0
   216b4:	str	r1, [sp, #16]
   216b8:	str	r0, [sp, #12]
   216bc:	bcs	2181c <__assert_fail@plt+0x102d4>
   216c0:	b	21834 <__assert_fail@plt+0x102ec>
   216c4:	b	216c8 <__assert_fail@plt+0x10180>
   216c8:	b	2172c <__assert_fail@plt+0x101e4>
   216cc:	b	2172c <__assert_fail@plt+0x101e4>
   216d0:	ldr	r0, [fp, #-12]
   216d4:	cmn	r0, #1
   216d8:	bne	2172c <__assert_fail@plt+0x101e4>
   216dc:	b	216fc <__assert_fail@plt+0x101b4>
   216e0:	ldr	r0, [fp, #-8]
   216e4:	ldr	r0, [r0]
   216e8:	add	r0, r0, #0
   216ec:	movw	r1, #0
   216f0:	cmp	r1, r0
   216f4:	bcc	2181c <__assert_fail@plt+0x102d4>
   216f8:	b	21834 <__assert_fail@plt+0x102ec>
   216fc:	ldr	r0, [fp, #-8]
   21700:	ldr	r0, [r0]
   21704:	movw	r1, #0
   21708:	cmp	r1, r0
   2170c:	bcs	21834 <__assert_fail@plt+0x102ec>
   21710:	ldr	r0, [fp, #-8]
   21714:	ldr	r0, [r0]
   21718:	sub	r0, r0, #1
   2171c:	mvn	r1, #0
   21720:	cmp	r1, r0
   21724:	bcc	2181c <__assert_fail@plt+0x102d4>
   21728:	b	21834 <__assert_fail@plt+0x102ec>
   2172c:	ldr	r0, [fp, #-12]
   21730:	movw	r1, #0
   21734:	sdiv	r0, r1, r0
   21738:	ldr	r1, [fp, #-8]
   2173c:	ldr	r1, [r1]
   21740:	cmp	r0, r1
   21744:	bcc	2181c <__assert_fail@plt+0x102d4>
   21748:	b	21834 <__assert_fail@plt+0x102ec>
   2174c:	ldr	r0, [fp, #-12]
   21750:	cmp	r0, #0
   21754:	bne	2175c <__assert_fail@plt+0x10214>
   21758:	b	21834 <__assert_fail@plt+0x102ec>
   2175c:	ldr	r0, [fp, #-8]
   21760:	ldr	r0, [r0]
   21764:	cmp	r0, #0
   21768:	bcs	217e0 <__assert_fail@plt+0x10298>
   2176c:	b	21774 <__assert_fail@plt+0x1022c>
   21770:	b	2177c <__assert_fail@plt+0x10234>
   21774:	b	217c0 <__assert_fail@plt+0x10278>
   21778:			; <UNDEFINED> instruction: 0xffff8000
   2177c:	ldr	r0, [fp, #-8]
   21780:	ldr	r0, [r0]
   21784:	cmn	r0, #1
   21788:	bne	217c0 <__assert_fail@plt+0x10278>
   2178c:	b	21790 <__assert_fail@plt+0x10248>
   21790:	ldr	r0, [fp, #-12]
   21794:	add	r0, r0, #0
   21798:	movw	r1, #0
   2179c:	cmp	r1, r0
   217a0:	blt	2181c <__assert_fail@plt+0x102d4>
   217a4:	b	21834 <__assert_fail@plt+0x102ec>
   217a8:	ldr	r0, [fp, #-12]
   217ac:	sub	r0, r0, #1
   217b0:	mvn	r1, #0
   217b4:	cmp	r1, r0
   217b8:	blt	2181c <__assert_fail@plt+0x102d4>
   217bc:	b	21834 <__assert_fail@plt+0x102ec>
   217c0:	ldr	r0, [fp, #-8]
   217c4:	ldr	r0, [r0]
   217c8:	movw	r1, #0
   217cc:	udiv	r0, r1, r0
   217d0:	ldr	r1, [fp, #-12]
   217d4:	cmp	r0, r1
   217d8:	bcc	2181c <__assert_fail@plt+0x102d4>
   217dc:	b	21834 <__assert_fail@plt+0x102ec>
   217e0:	ldr	r0, [fp, #-12]
   217e4:	asr	r3, r0, #31
   217e8:	mvn	r1, #0
   217ec:	str	r0, [sp, #8]
   217f0:	mov	r0, r1
   217f4:	ldr	r2, [sp, #8]
   217f8:	bl	247c4 <__assert_fail@plt+0x1327c>
   217fc:	ldr	r2, [fp, #-8]
   21800:	ldr	r2, [r2]
   21804:	subs	r0, r0, r2
   21808:	sbcs	r1, r1, #0
   2180c:	str	r0, [sp, #4]
   21810:	str	r1, [sp]
   21814:	bcs	21834 <__assert_fail@plt+0x102ec>
   21818:	b	2181c <__assert_fail@plt+0x102d4>
   2181c:	ldr	r0, [fp, #-8]
   21820:	ldr	r0, [r0]
   21824:	ldr	r1, [fp, #-12]
   21828:	mul	r0, r0, r1
   2182c:	str	r0, [fp, #-16]
   21830:	b	2184c <__assert_fail@plt+0x10304>
   21834:	ldr	r0, [fp, #-8]
   21838:	ldr	r0, [r0]
   2183c:	ldr	r1, [fp, #-12]
   21840:	mul	r0, r0, r1
   21844:	str	r0, [fp, #-16]
   21848:	b	21880 <__assert_fail@plt+0x10338>
   2184c:	ldr	r0, [fp, #-8]
   21850:	ldr	r0, [r0]
   21854:	cmp	r0, #0
   21858:	movw	r0, #0
   2185c:	movcc	r0, #1
   21860:	tst	r0, #1
   21864:	movw	r0, #0
   21868:	mvneq	r0, #0
   2186c:	ldr	r1, [fp, #-8]
   21870:	str	r0, [r1]
   21874:	movw	r0, #1
   21878:	str	r0, [fp, #-4]
   2187c:	b	21894 <__assert_fail@plt+0x1034c>
   21880:	ldr	r0, [fp, #-16]
   21884:	ldr	r1, [fp, #-8]
   21888:	str	r0, [r1]
   2188c:	movw	r0, #0
   21890:	str	r0, [fp, #-4]
   21894:	ldr	r0, [fp, #-4]
   21898:	mov	sp, fp
   2189c:	pop	{fp, pc}
   218a0:	andhi	r0, r0, r1
   218a4:	svcvc	0x00ffffff
   218a8:	andhi	r0, r0, r0
   218ac:	push	{fp, lr}
   218b0:	mov	fp, sp
   218b4:	sub	sp, sp, #16
   218b8:	str	r0, [fp, #-4]
   218bc:	str	r1, [sp, #8]
   218c0:	str	r2, [sp, #4]
   218c4:	movw	r0, #0
   218c8:	str	r0, [sp]
   218cc:	ldr	r0, [sp, #4]
   218d0:	mvn	r1, #0
   218d4:	add	r1, r0, r1
   218d8:	str	r1, [sp, #4]
   218dc:	cmp	r0, #0
   218e0:	beq	21900 <__assert_fail@plt+0x103b8>
   218e4:	ldr	r0, [fp, #-4]
   218e8:	ldr	r1, [sp, #8]
   218ec:	bl	2026c <__assert_fail@plt+0xed24>
   218f0:	ldr	r1, [sp]
   218f4:	orr	r0, r1, r0
   218f8:	str	r0, [sp]
   218fc:	b	218cc <__assert_fail@plt+0x10384>
   21900:	ldr	r0, [sp]
   21904:	mov	sp, fp
   21908:	pop	{fp, pc}
   2190c:	push	{fp, lr}
   21910:	mov	fp, sp
   21914:	sub	sp, sp, #16
   21918:	str	r0, [sp, #8]
   2191c:	str	r1, [sp, #4]
   21920:	ldr	r0, [sp, #8]
   21924:	cmp	r0, #0
   21928:	beq	21938 <__assert_fail@plt+0x103f0>
   2192c:	ldr	r0, [sp, #4]
   21930:	cmp	r0, #0
   21934:	bne	21944 <__assert_fail@plt+0x103fc>
   21938:	movw	r0, #1
   2193c:	str	r0, [sp, #4]
   21940:	str	r0, [sp, #8]
   21944:	ldr	r0, [sp, #4]
   21948:	cmp	r0, #0
   2194c:	beq	21980 <__assert_fail@plt+0x10438>
   21950:	ldr	r0, [pc, #76]	; 219a4 <__assert_fail@plt+0x1045c>
   21954:	ldr	r1, [sp, #4]
   21958:	udiv	r0, r0, r1
   2195c:	ldr	r1, [sp, #8]
   21960:	cmp	r0, r1
   21964:	bcs	21980 <__assert_fail@plt+0x10438>
   21968:	bl	11404 <__errno_location@plt>
   2196c:	movw	lr, #12
   21970:	str	lr, [r0]
   21974:	movw	r0, #0
   21978:	str	r0, [fp, #-4]
   2197c:	b	21998 <__assert_fail@plt+0x10450>
   21980:	ldr	r0, [sp, #8]
   21984:	ldr	r1, [sp, #4]
   21988:	bl	1120c <calloc@plt>
   2198c:	str	r0, [sp]
   21990:	ldr	r0, [sp]
   21994:	str	r0, [fp, #-4]
   21998:	ldr	r0, [fp, #-4]
   2199c:	mov	sp, fp
   219a0:	pop	{fp, pc}
   219a4:	svcvc	0x00ffffff
   219a8:	push	{fp, lr}
   219ac:	mov	fp, sp
   219b0:	sub	sp, sp, #16
   219b4:	str	r0, [sp, #8]
   219b8:	ldr	r0, [sp, #8]
   219bc:	cmp	r0, #0
   219c0:	bne	219cc <__assert_fail@plt+0x10484>
   219c4:	movw	r0, #1
   219c8:	str	r0, [sp, #8]
   219cc:	ldr	r0, [pc, #64]	; 21a14 <__assert_fail@plt+0x104cc>
   219d0:	ldr	r1, [sp, #8]
   219d4:	cmp	r0, r1
   219d8:	bcs	219f4 <__assert_fail@plt+0x104ac>
   219dc:	bl	11404 <__errno_location@plt>
   219e0:	movw	lr, #12
   219e4:	str	lr, [r0]
   219e8:	movw	r0, #0
   219ec:	str	r0, [fp, #-4]
   219f0:	b	21a08 <__assert_fail@plt+0x104c0>
   219f4:	ldr	r0, [sp, #8]
   219f8:	bl	1135c <malloc@plt>
   219fc:	str	r0, [sp, #4]
   21a00:	ldr	r0, [sp, #4]
   21a04:	str	r0, [fp, #-4]
   21a08:	ldr	r0, [fp, #-4]
   21a0c:	mov	sp, fp
   21a10:	pop	{fp, pc}
   21a14:	svcvc	0x00ffffff
   21a18:	push	{fp, lr}
   21a1c:	mov	fp, sp
   21a20:	sub	sp, sp, #16
   21a24:	str	r0, [sp, #8]
   21a28:	str	r1, [sp, #4]
   21a2c:	ldr	r0, [sp, #8]
   21a30:	movw	r1, #0
   21a34:	cmp	r0, r1
   21a38:	bne	21a4c <__assert_fail@plt+0x10504>
   21a3c:	ldr	r0, [sp, #4]
   21a40:	bl	219a8 <__assert_fail@plt+0x10460>
   21a44:	str	r0, [fp, #-4]
   21a48:	b	21aac <__assert_fail@plt+0x10564>
   21a4c:	ldr	r0, [sp, #4]
   21a50:	cmp	r0, #0
   21a54:	bne	21a6c <__assert_fail@plt+0x10524>
   21a58:	ldr	r0, [sp, #8]
   21a5c:	bl	1398c <__assert_fail@plt+0x2444>
   21a60:	movw	r0, #0
   21a64:	str	r0, [fp, #-4]
   21a68:	b	21aac <__assert_fail@plt+0x10564>
   21a6c:	ldr	r0, [pc, #68]	; 21ab8 <__assert_fail@plt+0x10570>
   21a70:	ldr	r1, [sp, #4]
   21a74:	cmp	r0, r1
   21a78:	bcs	21a94 <__assert_fail@plt+0x1054c>
   21a7c:	bl	11404 <__errno_location@plt>
   21a80:	movw	lr, #12
   21a84:	str	lr, [r0]
   21a88:	movw	r0, #0
   21a8c:	str	r0, [fp, #-4]
   21a90:	b	21aac <__assert_fail@plt+0x10564>
   21a94:	ldr	r0, [sp, #8]
   21a98:	ldr	r1, [sp, #4]
   21a9c:	bl	112cc <realloc@plt>
   21aa0:	str	r0, [sp]
   21aa4:	ldr	r0, [sp]
   21aa8:	str	r0, [fp, #-4]
   21aac:	ldr	r0, [fp, #-4]
   21ab0:	mov	sp, fp
   21ab4:	pop	{fp, pc}
   21ab8:	svcvc	0x00ffffff
   21abc:	push	{r4, sl, fp, lr}
   21ac0:	add	fp, sp, #8
   21ac4:	sub	sp, sp, #16
   21ac8:	str	r0, [sp, #8]
   21acc:	str	r1, [sp, #12]
   21ad0:	str	r2, [sp, #4]
   21ad4:	ldr	r0, [sp, #8]
   21ad8:	ldr	r1, [sp, #12]
   21adc:	ldr	r2, [sp, #4]
   21ae0:	rsb	r3, r2, #32
   21ae4:	lsr	ip, r0, r3
   21ae8:	orr	ip, ip, r1, lsl r2
   21aec:	sub	lr, r2, #32
   21af0:	cmp	lr, #0
   21af4:	lslge	ip, r0, lr
   21af8:	lsl	r4, r0, r2
   21afc:	cmp	lr, #0
   21b00:	movwge	r4, #0
   21b04:	rsb	r2, r2, #64	; 0x40
   21b08:	lsr	lr, r1, r2
   21b0c:	cmp	r3, #0
   21b10:	movwge	lr, #0
   21b14:	lsr	r0, r0, r2
   21b18:	rsb	r2, r2, #32
   21b1c:	orr	r0, r0, r1, lsl r2
   21b20:	cmp	r3, #0
   21b24:	lsrge	r0, r1, r3
   21b28:	orr	r0, r4, r0
   21b2c:	orr	r1, ip, lr
   21b30:	sub	sp, fp, #8
   21b34:	pop	{r4, sl, fp, pc}
   21b38:	push	{r4, sl, fp, lr}
   21b3c:	add	fp, sp, #8
   21b40:	sub	sp, sp, #16
   21b44:	str	r0, [sp, #8]
   21b48:	str	r1, [sp, #12]
   21b4c:	str	r2, [sp, #4]
   21b50:	ldr	r0, [sp, #8]
   21b54:	ldr	r1, [sp, #12]
   21b58:	ldr	r2, [sp, #4]
   21b5c:	lsr	r3, r1, r2
   21b60:	sub	ip, r2, #32
   21b64:	cmp	ip, #0
   21b68:	movwge	r3, #0
   21b6c:	lsr	lr, r0, r2
   21b70:	rsb	r4, r2, #32
   21b74:	orr	lr, lr, r1, lsl r4
   21b78:	cmp	ip, #0
   21b7c:	lsrge	lr, r1, ip
   21b80:	rsb	r2, r2, #64	; 0x40
   21b84:	rsb	ip, r2, #32
   21b88:	lsr	ip, r0, ip
   21b8c:	orr	r1, ip, r1, lsl r2
   21b90:	cmp	r4, #0
   21b94:	lslge	r1, r0, r4
   21b98:	lsl	r0, r0, r2
   21b9c:	cmp	r4, #0
   21ba0:	movwge	r0, #0
   21ba4:	orr	r0, lr, r0
   21ba8:	orr	r1, r3, r1
   21bac:	sub	sp, fp, #8
   21bb0:	pop	{r4, sl, fp, pc}
   21bb4:	sub	sp, sp, #8
   21bb8:	str	r0, [sp, #4]
   21bbc:	str	r1, [sp]
   21bc0:	ldr	r0, [sp, #4]
   21bc4:	ldr	r1, [sp]
   21bc8:	lsl	r0, r0, r1
   21bcc:	ldr	r1, [sp, #4]
   21bd0:	ldr	r2, [sp]
   21bd4:	movw	r3, #32
   21bd8:	sub	r2, r3, r2
   21bdc:	lsr	r1, r1, r2
   21be0:	orr	r0, r0, r1
   21be4:	add	sp, sp, #8
   21be8:	bx	lr
   21bec:	sub	sp, sp, #8
   21bf0:	str	r0, [sp, #4]
   21bf4:	str	r1, [sp]
   21bf8:	ldr	r0, [sp, #4]
   21bfc:	ldr	r1, [sp]
   21c00:	lsr	r0, r0, r1
   21c04:	ldr	r1, [sp, #4]
   21c08:	ldr	r2, [sp]
   21c0c:	movw	r3, #32
   21c10:	sub	r2, r3, r2
   21c14:	lsl	r1, r1, r2
   21c18:	orr	r0, r0, r1
   21c1c:	add	sp, sp, #8
   21c20:	bx	lr
   21c24:	sub	sp, sp, #8
   21c28:	str	r0, [sp, #4]
   21c2c:	str	r1, [sp]
   21c30:	ldr	r0, [sp, #4]
   21c34:	ldr	r1, [sp]
   21c38:	lsl	r0, r0, r1
   21c3c:	ldr	r1, [sp, #4]
   21c40:	ldr	r2, [sp]
   21c44:	movw	r3, #32
   21c48:	sub	r2, r3, r2
   21c4c:	lsr	r1, r1, r2
   21c50:	orr	r0, r0, r1
   21c54:	add	sp, sp, #8
   21c58:	bx	lr
   21c5c:	sub	sp, sp, #8
   21c60:	str	r0, [sp, #4]
   21c64:	str	r1, [sp]
   21c68:	ldr	r0, [sp, #4]
   21c6c:	ldr	r1, [sp]
   21c70:	lsr	r0, r0, r1
   21c74:	ldr	r1, [sp, #4]
   21c78:	ldr	r2, [sp]
   21c7c:	movw	r3, #32
   21c80:	sub	r2, r3, r2
   21c84:	lsl	r1, r1, r2
   21c88:	orr	r0, r0, r1
   21c8c:	add	sp, sp, #8
   21c90:	bx	lr
   21c94:	sub	sp, sp, #8
   21c98:	strh	r0, [sp, #6]
   21c9c:	str	r1, [sp]
   21ca0:	ldrh	r0, [sp, #6]
   21ca4:	ldr	r1, [sp]
   21ca8:	lsl	r0, r0, r1
   21cac:	ldrh	r1, [sp, #6]
   21cb0:	ldr	r2, [sp]
   21cb4:	movw	r3, #16
   21cb8:	sub	r2, r3, r2
   21cbc:	lsr	r1, r1, r2
   21cc0:	orr	r0, r0, r1
   21cc4:	movw	r1, #65535	; 0xffff
   21cc8:	and	r0, r0, r1
   21ccc:	uxth	r0, r0
   21cd0:	add	sp, sp, #8
   21cd4:	bx	lr
   21cd8:	sub	sp, sp, #8
   21cdc:	strh	r0, [sp, #6]
   21ce0:	str	r1, [sp]
   21ce4:	ldrh	r0, [sp, #6]
   21ce8:	ldr	r1, [sp]
   21cec:	lsr	r0, r0, r1
   21cf0:	ldrh	r1, [sp, #6]
   21cf4:	ldr	r2, [sp]
   21cf8:	movw	r3, #16
   21cfc:	sub	r2, r3, r2
   21d00:	lsl	r1, r1, r2
   21d04:	orr	r0, r0, r1
   21d08:	movw	r1, #65535	; 0xffff
   21d0c:	and	r0, r0, r1
   21d10:	uxth	r0, r0
   21d14:	add	sp, sp, #8
   21d18:	bx	lr
   21d1c:	sub	sp, sp, #8
   21d20:	strb	r0, [sp, #7]
   21d24:	str	r1, [sp]
   21d28:	ldrb	r0, [sp, #7]
   21d2c:	ldr	r1, [sp]
   21d30:	lsl	r0, r0, r1
   21d34:	ldrb	r1, [sp, #7]
   21d38:	ldr	r2, [sp]
   21d3c:	movw	r3, #8
   21d40:	sub	r2, r3, r2
   21d44:	lsr	r1, r1, r2
   21d48:	orr	r0, r0, r1
   21d4c:	and	r0, r0, #255	; 0xff
   21d50:	and	r0, r0, #255	; 0xff
   21d54:	add	sp, sp, #8
   21d58:	bx	lr
   21d5c:	sub	sp, sp, #8
   21d60:	strb	r0, [sp, #7]
   21d64:	str	r1, [sp]
   21d68:	ldrb	r0, [sp, #7]
   21d6c:	ldr	r1, [sp]
   21d70:	lsr	r0, r0, r1
   21d74:	ldrb	r1, [sp, #7]
   21d78:	ldr	r2, [sp]
   21d7c:	movw	r3, #8
   21d80:	sub	r2, r3, r2
   21d84:	lsl	r1, r1, r2
   21d88:	orr	r0, r0, r1
   21d8c:	and	r0, r0, #255	; 0xff
   21d90:	and	r0, r0, #255	; 0xff
   21d94:	add	sp, sp, #8
   21d98:	bx	lr
   21d9c:	push	{fp, lr}
   21da0:	mov	fp, sp
   21da4:	sub	sp, sp, #24
   21da8:	str	r0, [fp, #-8]
   21dac:	str	r1, [sp, #12]
   21db0:	ldr	r0, [fp, #-8]
   21db4:	str	r0, [sp, #8]
   21db8:	ldr	r0, [sp, #12]
   21dbc:	str	r0, [sp, #4]
   21dc0:	ldr	r0, [sp, #8]
   21dc4:	ldr	r1, [sp, #4]
   21dc8:	cmp	r0, r1
   21dcc:	bne	21ddc <__assert_fail@plt+0x10894>
   21dd0:	movw	r0, #0
   21dd4:	str	r0, [fp, #-4]
   21dd8:	b	21e48 <__assert_fail@plt+0x10900>
   21ddc:	b	21de0 <__assert_fail@plt+0x10898>
   21de0:	ldr	r0, [sp, #8]
   21de4:	ldrb	r0, [r0]
   21de8:	bl	24470 <__assert_fail@plt+0x12f28>
   21dec:	strb	r0, [sp, #3]
   21df0:	ldr	r0, [sp, #4]
   21df4:	ldrb	r0, [r0]
   21df8:	bl	24470 <__assert_fail@plt+0x12f28>
   21dfc:	strb	r0, [sp, #2]
   21e00:	ldrb	r0, [sp, #3]
   21e04:	cmp	r0, #0
   21e08:	bne	21e10 <__assert_fail@plt+0x108c8>
   21e0c:	b	21e38 <__assert_fail@plt+0x108f0>
   21e10:	ldr	r0, [sp, #8]
   21e14:	add	r0, r0, #1
   21e18:	str	r0, [sp, #8]
   21e1c:	ldr	r0, [sp, #4]
   21e20:	add	r0, r0, #1
   21e24:	str	r0, [sp, #4]
   21e28:	ldrb	r0, [sp, #3]
   21e2c:	ldrb	r1, [sp, #2]
   21e30:	cmp	r0, r1
   21e34:	beq	21de0 <__assert_fail@plt+0x10898>
   21e38:	ldrb	r0, [sp, #3]
   21e3c:	ldrb	r1, [sp, #2]
   21e40:	sub	r0, r0, r1
   21e44:	str	r0, [fp, #-4]
   21e48:	ldr	r0, [fp, #-4]
   21e4c:	mov	sp, fp
   21e50:	pop	{fp, pc}
   21e54:	push	{fp, lr}
   21e58:	mov	fp, sp
   21e5c:	sub	sp, sp, #16
   21e60:	str	r0, [sp, #8]
   21e64:	ldr	r0, [sp, #8]
   21e68:	bl	11320 <__fpending@plt>
   21e6c:	cmp	r0, #0
   21e70:	movw	r0, #0
   21e74:	movne	r0, #1
   21e78:	and	r0, r0, #1
   21e7c:	strb	r0, [sp, #7]
   21e80:	ldr	r0, [sp, #8]
   21e84:	bl	1132c <ferror_unlocked@plt>
   21e88:	cmp	r0, #0
   21e8c:	movw	r0, #0
   21e90:	movne	r0, #1
   21e94:	and	r0, r0, #1
   21e98:	strb	r0, [sp, #6]
   21e9c:	ldr	r0, [sp, #8]
   21ea0:	bl	22114 <__assert_fail@plt+0x10bcc>
   21ea4:	cmp	r0, #0
   21ea8:	movw	r0, #0
   21eac:	movne	r0, #1
   21eb0:	and	r0, r0, #1
   21eb4:	strb	r0, [sp, #5]
   21eb8:	ldrb	r0, [sp, #6]
   21ebc:	tst	r0, #1
   21ec0:	bne	21eec <__assert_fail@plt+0x109a4>
   21ec4:	ldrb	r0, [sp, #5]
   21ec8:	tst	r0, #1
   21ecc:	beq	21f10 <__assert_fail@plt+0x109c8>
   21ed0:	ldrb	r0, [sp, #7]
   21ed4:	tst	r0, #1
   21ed8:	bne	21eec <__assert_fail@plt+0x109a4>
   21edc:	bl	11404 <__errno_location@plt>
   21ee0:	ldr	r0, [r0]
   21ee4:	cmp	r0, #9
   21ee8:	beq	21f10 <__assert_fail@plt+0x109c8>
   21eec:	ldrb	r0, [sp, #5]
   21ef0:	tst	r0, #1
   21ef4:	bne	21f04 <__assert_fail@plt+0x109bc>
   21ef8:	bl	11404 <__errno_location@plt>
   21efc:	movw	lr, #0
   21f00:	str	lr, [r0]
   21f04:	mvn	r0, #0
   21f08:	str	r0, [fp, #-4]
   21f0c:	b	21f18 <__assert_fail@plt+0x109d0>
   21f10:	movw	r0, #0
   21f14:	str	r0, [fp, #-4]
   21f18:	ldr	r0, [fp, #-4]
   21f1c:	mov	sp, fp
   21f20:	pop	{fp, pc}
   21f24:	sub	sp, sp, #4
   21f28:	ldr	r1, [pc, #32]	; 21f50 <__assert_fail@plt+0x10a08>
   21f2c:	str	r0, [sp]
   21f30:	ldr	r0, [sp]
   21f34:	mov	r2, #0
   21f38:	str	r2, [r0, #20]
   21f3c:	str	r2, [r0, #16]
   21f40:	ldr	r0, [sp]
   21f44:	str	r1, [r0, #24]
   21f48:	add	sp, sp, #4
   21f4c:	bx	lr
   21f50:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21f54:	push	{fp, lr}
   21f58:	mov	fp, sp
   21f5c:	sub	sp, sp, #16
   21f60:	ldr	r2, [pc, #364]	; 220d4 <__assert_fail@plt+0x10b8c>
   21f64:	str	r0, [sp, #8]
   21f68:	str	r1, [sp, #4]
   21f6c:	ldr	r0, [sp, #8]
   21f70:	ldr	r0, [r0, #24]
   21f74:	cmp	r0, r2
   21f78:	bne	21f80 <__assert_fail@plt+0x10a38>
   21f7c:	b	21fa0 <__assert_fail@plt+0x10a58>
   21f80:	movw	r0, #24733	; 0x609d
   21f84:	movt	r0, #2
   21f88:	movw	r1, #24757	; 0x60b5
   21f8c:	movt	r1, #2
   21f90:	movw	r2, #60	; 0x3c
   21f94:	movw	r3, #24775	; 0x60c7
   21f98:	movt	r3, #2
   21f9c:	bl	11548 <__assert_fail@plt>
   21fa0:	ldr	r0, [sp, #8]
   21fa4:	ldr	r1, [r0, #16]
   21fa8:	ldr	r0, [r0, #20]
   21fac:	orr	r0, r1, r0
   21fb0:	cmp	r0, #0
   21fb4:	beq	2202c <__assert_fail@plt+0x10ae4>
   21fb8:	b	21fbc <__assert_fail@plt+0x10a74>
   21fbc:	ldr	r0, [sp, #4]
   21fc0:	ldr	r1, [r0, #96]	; 0x60
   21fc4:	ldr	r0, [r0, #100]	; 0x64
   21fc8:	ldr	r2, [sp, #8]
   21fcc:	ldr	r3, [r2]
   21fd0:	ldr	r2, [r2, #4]
   21fd4:	eor	r0, r0, r2
   21fd8:	eor	r1, r1, r3
   21fdc:	orr	r0, r1, r0
   21fe0:	cmp	r0, #0
   21fe4:	bne	2202c <__assert_fail@plt+0x10ae4>
   21fe8:	b	21fec <__assert_fail@plt+0x10aa4>
   21fec:	ldr	r0, [sp, #4]
   21ff0:	ldr	r1, [r0]
   21ff4:	ldr	r0, [r0, #4]
   21ff8:	ldr	r2, [sp, #8]
   21ffc:	ldr	r3, [r2, #8]
   22000:	ldr	r2, [r2, #12]
   22004:	eor	r0, r0, r2
   22008:	eor	r1, r1, r3
   2200c:	orr	r0, r1, r0
   22010:	cmp	r0, #0
   22014:	bne	2202c <__assert_fail@plt+0x10ae4>
   22018:	b	2201c <__assert_fail@plt+0x10ad4>
   2201c:	movw	r0, #1
   22020:	and	r0, r0, #1
   22024:	strb	r0, [fp, #-1]
   22028:	b	220c4 <__assert_fail@plt+0x10b7c>
   2202c:	ldr	r0, [sp, #8]
   22030:	ldr	r1, [r0, #16]
   22034:	ldr	r2, [r0, #20]
   22038:	adds	r1, r1, #1
   2203c:	adc	r2, r2, #0
   22040:	str	r1, [r0, #16]
   22044:	str	r2, [r0, #20]
   22048:	mov	r0, r1
   2204c:	mov	r1, r2
   22050:	bl	220d8 <__assert_fail@plt+0x10b90>
   22054:	tst	r0, #1
   22058:	beq	220b8 <__assert_fail@plt+0x10b70>
   2205c:	ldr	r0, [sp, #8]
   22060:	ldr	r1, [r0, #16]
   22064:	ldr	r0, [r0, #20]
   22068:	orr	r0, r1, r0
   2206c:	cmp	r0, #0
   22070:	bne	22088 <__assert_fail@plt+0x10b40>
   22074:	b	22078 <__assert_fail@plt+0x10b30>
   22078:	movw	r0, #1
   2207c:	and	r0, r0, #1
   22080:	strb	r0, [fp, #-1]
   22084:	b	220c4 <__assert_fail@plt+0x10b7c>
   22088:	ldr	r0, [sp, #4]
   2208c:	ldr	r1, [r0]
   22090:	ldr	r0, [r0, #4]
   22094:	ldr	r2, [sp, #8]
   22098:	str	r0, [r2, #12]
   2209c:	str	r1, [r2, #8]
   220a0:	ldr	r0, [sp, #4]
   220a4:	ldr	r1, [r0, #96]	; 0x60
   220a8:	ldr	r0, [r0, #100]	; 0x64
   220ac:	ldr	r2, [sp, #8]
   220b0:	str	r0, [r2, #4]
   220b4:	str	r1, [r2]
   220b8:	movw	r0, #0
   220bc:	and	r0, r0, #1
   220c0:	strb	r0, [fp, #-1]
   220c4:	ldrb	r0, [fp, #-1]
   220c8:	and	r0, r0, #1
   220cc:	mov	sp, fp
   220d0:	pop	{fp, pc}
   220d4:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   220d8:	sub	sp, sp, #8
   220dc:	str	r0, [sp]
   220e0:	str	r1, [sp, #4]
   220e4:	ldr	r0, [sp]
   220e8:	ldr	r1, [sp, #4]
   220ec:	subs	r2, r0, #1
   220f0:	sbc	r3, r1, #0
   220f4:	and	r0, r0, r2
   220f8:	and	r1, r1, r3
   220fc:	orr	r0, r0, r1
   22100:	clz	r0, r0
   22104:	lsr	r0, r0, #5
   22108:	and	r0, r0, #1
   2210c:	add	sp, sp, #8
   22110:	bx	lr
   22114:	push	{fp, lr}
   22118:	mov	fp, sp
   2211c:	sub	sp, sp, #32
   22120:	str	r0, [fp, #-8]
   22124:	movw	r0, #0
   22128:	str	r0, [fp, #-12]
   2212c:	str	r0, [sp, #12]
   22130:	ldr	r0, [fp, #-8]
   22134:	bl	11428 <fileno@plt>
   22138:	str	r0, [sp, #16]
   2213c:	ldr	r0, [sp, #16]
   22140:	cmp	r0, #0
   22144:	bge	22158 <__assert_fail@plt+0x10c10>
   22148:	ldr	r0, [fp, #-8]
   2214c:	bl	11434 <fclose@plt>
   22150:	str	r0, [fp, #-4]
   22154:	b	221f4 <__assert_fail@plt+0x10cac>
   22158:	ldr	r0, [fp, #-8]
   2215c:	bl	11374 <__freading@plt>
   22160:	cmp	r0, #0
   22164:	beq	2219c <__assert_fail@plt+0x10c54>
   22168:	ldr	r0, [fp, #-8]
   2216c:	bl	11428 <fileno@plt>
   22170:	mov	lr, sp
   22174:	mov	r1, #1
   22178:	str	r1, [lr]
   2217c:	mov	r1, #0
   22180:	mov	r2, r1
   22184:	mov	r3, r1
   22188:	bl	11308 <lseek64@plt>
   2218c:	and	r0, r0, r1
   22190:	cmn	r0, #1
   22194:	beq	221b8 <__assert_fail@plt+0x10c70>
   22198:	b	2219c <__assert_fail@plt+0x10c54>
   2219c:	ldr	r0, [fp, #-8]
   221a0:	bl	22664 <__assert_fail@plt+0x1111c>
   221a4:	cmp	r0, #0
   221a8:	beq	221b8 <__assert_fail@plt+0x10c70>
   221ac:	bl	11404 <__errno_location@plt>
   221b0:	ldr	r0, [r0]
   221b4:	str	r0, [fp, #-12]
   221b8:	ldr	r0, [fp, #-8]
   221bc:	bl	11434 <fclose@plt>
   221c0:	str	r0, [sp, #12]
   221c4:	ldr	r0, [fp, #-12]
   221c8:	cmp	r0, #0
   221cc:	beq	221ec <__assert_fail@plt+0x10ca4>
   221d0:	ldr	r0, [fp, #-12]
   221d4:	str	r0, [sp, #8]
   221d8:	bl	11404 <__errno_location@plt>
   221dc:	ldr	lr, [sp, #8]
   221e0:	str	lr, [r0]
   221e4:	mvn	r0, #0
   221e8:	str	r0, [sp, #12]
   221ec:	ldr	r0, [sp, #12]
   221f0:	str	r0, [fp, #-4]
   221f4:	ldr	r0, [fp, #-4]
   221f8:	mov	sp, fp
   221fc:	pop	{fp, pc}
   22200:	sub	sp, sp, #8
   22204:	push	{fp, lr}
   22208:	mov	fp, sp
   2220c:	sub	sp, sp, #48	; 0x30
   22210:	str	r3, [fp, #12]
   22214:	str	r2, [fp, #8]
   22218:	str	r0, [fp, #-4]
   2221c:	str	r1, [fp, #-8]
   22220:	mvn	r0, #0
   22224:	str	r0, [fp, #-16]
   22228:	add	r0, fp, #8
   2222c:	str	r0, [fp, #-12]
   22230:	ldr	r0, [fp, #-8]
   22234:	cmp	r0, #0
   22238:	str	r0, [sp, #12]
   2223c:	beq	22258 <__assert_fail@plt+0x10d10>
   22240:	b	22244 <__assert_fail@plt+0x10cfc>
   22244:	movw	r0, #1030	; 0x406
   22248:	ldr	r1, [sp, #12]
   2224c:	cmp	r1, r0
   22250:	beq	22280 <__assert_fail@plt+0x10d38>
   22254:	b	222a8 <__assert_fail@plt+0x10d60>
   22258:	ldr	r0, [fp, #-12]
   2225c:	add	r1, r0, #4
   22260:	str	r1, [fp, #-12]
   22264:	ldr	r0, [r0]
   22268:	str	r0, [fp, #-20]	; 0xffffffec
   2226c:	ldr	r0, [fp, #-4]
   22270:	ldr	r1, [fp, #-20]	; 0xffffffec
   22274:	bl	22454 <__assert_fail@plt+0x10f0c>
   22278:	str	r0, [fp, #-16]
   2227c:	b	22434 <__assert_fail@plt+0x10eec>
   22280:	ldr	r0, [fp, #-12]
   22284:	add	r1, r0, #4
   22288:	str	r1, [fp, #-12]
   2228c:	ldr	r0, [r0]
   22290:	str	r0, [sp, #24]
   22294:	ldr	r0, [fp, #-4]
   22298:	ldr	r1, [sp, #24]
   2229c:	bl	22488 <__assert_fail@plt+0x10f40>
   222a0:	str	r0, [fp, #-16]
   222a4:	b	22434 <__assert_fail@plt+0x10eec>
   222a8:	ldr	r0, [fp, #-8]
   222ac:	cmp	r0, #0
   222b0:	str	r0, [sp, #8]
   222b4:	beq	223dc <__assert_fail@plt+0x10e94>
   222b8:	b	222bc <__assert_fail@plt+0x10d74>
   222bc:	ldr	r0, [sp, #8]
   222c0:	cmp	r0, #1
   222c4:	beq	223c8 <__assert_fail@plt+0x10e80>
   222c8:	b	222cc <__assert_fail@plt+0x10d84>
   222cc:	ldr	r0, [sp, #8]
   222d0:	cmp	r0, #2
   222d4:	beq	223dc <__assert_fail@plt+0x10e94>
   222d8:	b	222dc <__assert_fail@plt+0x10d94>
   222dc:	ldr	r0, [sp, #8]
   222e0:	cmp	r0, #3
   222e4:	beq	223c8 <__assert_fail@plt+0x10e80>
   222e8:	b	222ec <__assert_fail@plt+0x10da4>
   222ec:	ldr	r0, [sp, #8]
   222f0:	cmp	r0, #4
   222f4:	beq	223dc <__assert_fail@plt+0x10e94>
   222f8:	b	222fc <__assert_fail@plt+0x10db4>
   222fc:	ldr	r0, [sp, #8]
   22300:	cmp	r0, #8
   22304:	beq	223dc <__assert_fail@plt+0x10e94>
   22308:	b	2230c <__assert_fail@plt+0x10dc4>
   2230c:	ldr	r0, [sp, #8]
   22310:	cmp	r0, #9
   22314:	beq	223c8 <__assert_fail@plt+0x10e80>
   22318:	b	2231c <__assert_fail@plt+0x10dd4>
   2231c:	ldr	r0, [sp, #8]
   22320:	cmp	r0, #10
   22324:	beq	223dc <__assert_fail@plt+0x10e94>
   22328:	b	2232c <__assert_fail@plt+0x10de4>
   2232c:	ldr	r0, [sp, #8]
   22330:	cmp	r0, #11
   22334:	beq	223c8 <__assert_fail@plt+0x10e80>
   22338:	b	2233c <__assert_fail@plt+0x10df4>
   2233c:	ldr	r0, [sp, #8]
   22340:	cmp	r0, #1024	; 0x400
   22344:	beq	223dc <__assert_fail@plt+0x10e94>
   22348:	b	2234c <__assert_fail@plt+0x10e04>
   2234c:	movw	r0, #1025	; 0x401
   22350:	ldr	r1, [sp, #8]
   22354:	cmp	r1, r0
   22358:	beq	223c8 <__assert_fail@plt+0x10e80>
   2235c:	b	22360 <__assert_fail@plt+0x10e18>
   22360:	movw	r0, #1026	; 0x402
   22364:	ldr	r1, [sp, #8]
   22368:	cmp	r1, r0
   2236c:	beq	223dc <__assert_fail@plt+0x10e94>
   22370:	b	22374 <__assert_fail@plt+0x10e2c>
   22374:	movw	r0, #1030	; 0x406
   22378:	ldr	r1, [sp, #8]
   2237c:	sub	r0, r1, r0
   22380:	cmp	r0, #2
   22384:	bcc	223dc <__assert_fail@plt+0x10e94>
   22388:	b	2238c <__assert_fail@plt+0x10e44>
   2238c:	movw	r0, #1032	; 0x408
   22390:	ldr	r1, [sp, #8]
   22394:	cmp	r1, r0
   22398:	beq	223c8 <__assert_fail@plt+0x10e80>
   2239c:	b	223a0 <__assert_fail@plt+0x10e58>
   223a0:	movw	r0, #1033	; 0x409
   223a4:	ldr	r1, [sp, #8]
   223a8:	cmp	r1, r0
   223ac:	beq	223dc <__assert_fail@plt+0x10e94>
   223b0:	b	223b4 <__assert_fail@plt+0x10e6c>
   223b4:	movw	r0, #1034	; 0x40a
   223b8:	ldr	r1, [sp, #8]
   223bc:	cmp	r1, r0
   223c0:	bne	22408 <__assert_fail@plt+0x10ec0>
   223c4:	b	223c8 <__assert_fail@plt+0x10e80>
   223c8:	ldr	r0, [fp, #-4]
   223cc:	ldr	r1, [fp, #-8]
   223d0:	bl	1144c <fcntl64@plt>
   223d4:	str	r0, [fp, #-16]
   223d8:	b	22430 <__assert_fail@plt+0x10ee8>
   223dc:	ldr	r0, [fp, #-12]
   223e0:	add	r1, r0, #4
   223e4:	str	r1, [fp, #-12]
   223e8:	ldr	r0, [r0]
   223ec:	str	r0, [sp, #20]
   223f0:	ldr	r0, [fp, #-4]
   223f4:	ldr	r1, [fp, #-8]
   223f8:	ldr	r2, [sp, #20]
   223fc:	bl	1144c <fcntl64@plt>
   22400:	str	r0, [fp, #-16]
   22404:	b	22430 <__assert_fail@plt+0x10ee8>
   22408:	ldr	r0, [fp, #-12]
   2240c:	add	r1, r0, #4
   22410:	str	r1, [fp, #-12]
   22414:	ldr	r0, [r0]
   22418:	str	r0, [sp, #16]
   2241c:	ldr	r0, [fp, #-4]
   22420:	ldr	r1, [fp, #-8]
   22424:	ldr	r2, [sp, #16]
   22428:	bl	1144c <fcntl64@plt>
   2242c:	str	r0, [fp, #-16]
   22430:	b	22434 <__assert_fail@plt+0x10eec>
   22434:	sub	r0, fp, #12
   22438:	ldr	r1, [fp, #-16]
   2243c:	str	r0, [sp, #4]
   22440:	mov	r0, r1
   22444:	mov	sp, fp
   22448:	pop	{fp, lr}
   2244c:	add	sp, sp, #8
   22450:	bx	lr
   22454:	push	{fp, lr}
   22458:	mov	fp, sp
   2245c:	sub	sp, sp, #16
   22460:	str	r0, [fp, #-4]
   22464:	str	r1, [sp, #8]
   22468:	ldr	r0, [fp, #-4]
   2246c:	ldr	r2, [sp, #8]
   22470:	movw	r1, #0
   22474:	bl	1144c <fcntl64@plt>
   22478:	str	r0, [sp, #4]
   2247c:	ldr	r0, [sp, #4]
   22480:	mov	sp, fp
   22484:	pop	{fp, pc}
   22488:	push	{fp, lr}
   2248c:	mov	fp, sp
   22490:	sub	sp, sp, #32
   22494:	str	r0, [fp, #-4]
   22498:	str	r1, [fp, #-8]
   2249c:	movw	r0, #29436	; 0x72fc
   224a0:	movt	r0, #3
   224a4:	ldr	r0, [r0]
   224a8:	movw	r1, #0
   224ac:	cmp	r1, r0
   224b0:	bgt	22530 <__assert_fail@plt+0x10fe8>
   224b4:	ldr	r0, [fp, #-4]
   224b8:	ldr	r2, [fp, #-8]
   224bc:	movw	r1, #1030	; 0x406
   224c0:	bl	1144c <fcntl64@plt>
   224c4:	str	r0, [fp, #-12]
   224c8:	ldr	r0, [fp, #-12]
   224cc:	movw	r1, #0
   224d0:	cmp	r1, r0
   224d4:	ble	224e8 <__assert_fail@plt+0x10fa0>
   224d8:	bl	11404 <__errno_location@plt>
   224dc:	ldr	r0, [r0]
   224e0:	cmp	r0, #22
   224e4:	beq	224fc <__assert_fail@plt+0x10fb4>
   224e8:	movw	r0, #29436	; 0x72fc
   224ec:	movt	r0, #3
   224f0:	movw	r1, #1
   224f4:	str	r1, [r0]
   224f8:	b	2252c <__assert_fail@plt+0x10fe4>
   224fc:	ldr	r0, [fp, #-4]
   22500:	ldr	r1, [fp, #-8]
   22504:	bl	22454 <__assert_fail@plt+0x10f0c>
   22508:	str	r0, [fp, #-12]
   2250c:	ldr	r0, [fp, #-12]
   22510:	cmp	r0, #0
   22514:	blt	22528 <__assert_fail@plt+0x10fe0>
   22518:	movw	r0, #29436	; 0x72fc
   2251c:	movt	r0, #3
   22520:	mvn	r1, #0
   22524:	str	r1, [r0]
   22528:	b	2252c <__assert_fail@plt+0x10fe4>
   2252c:	b	22540 <__assert_fail@plt+0x10ff8>
   22530:	ldr	r0, [fp, #-4]
   22534:	ldr	r1, [fp, #-8]
   22538:	bl	22454 <__assert_fail@plt+0x10f0c>
   2253c:	str	r0, [fp, #-12]
   22540:	ldr	r0, [fp, #-12]
   22544:	movw	r1, #0
   22548:	cmp	r1, r0
   2254c:	bgt	225d4 <__assert_fail@plt+0x1108c>
   22550:	movw	r0, #29436	; 0x72fc
   22554:	movt	r0, #3
   22558:	ldr	r0, [r0]
   2255c:	cmn	r0, #1
   22560:	bne	225d4 <__assert_fail@plt+0x1108c>
   22564:	ldr	r0, [fp, #-12]
   22568:	movw	r1, #1
   2256c:	bl	1144c <fcntl64@plt>
   22570:	str	r0, [sp, #16]
   22574:	ldr	r0, [sp, #16]
   22578:	cmp	r0, #0
   2257c:	blt	2259c <__assert_fail@plt+0x11054>
   22580:	ldr	r0, [fp, #-12]
   22584:	ldr	r1, [sp, #16]
   22588:	orr	r2, r1, #1
   2258c:	movw	r1, #2
   22590:	bl	1144c <fcntl64@plt>
   22594:	cmn	r0, #1
   22598:	bne	225d0 <__assert_fail@plt+0x11088>
   2259c:	bl	11404 <__errno_location@plt>
   225a0:	ldr	r0, [r0]
   225a4:	str	r0, [sp, #12]
   225a8:	ldr	r0, [fp, #-12]
   225ac:	bl	1150c <close@plt>
   225b0:	ldr	lr, [sp, #12]
   225b4:	str	r0, [sp, #8]
   225b8:	str	lr, [sp, #4]
   225bc:	bl	11404 <__errno_location@plt>
   225c0:	ldr	lr, [sp, #4]
   225c4:	str	lr, [r0]
   225c8:	mvn	r0, #0
   225cc:	str	r0, [fp, #-12]
   225d0:	b	225d4 <__assert_fail@plt+0x1108c>
   225d4:	ldr	r0, [fp, #-12]
   225d8:	mov	sp, fp
   225dc:	pop	{fp, pc}
   225e0:	sub	sp, sp, #8
   225e4:	push	{fp, lr}
   225e8:	mov	fp, sp
   225ec:	sub	sp, sp, #24
   225f0:	str	r3, [fp, #12]
   225f4:	str	r2, [fp, #8]
   225f8:	str	r0, [fp, #-4]
   225fc:	str	r1, [fp, #-8]
   22600:	movw	r0, #0
   22604:	str	r0, [sp, #12]
   22608:	ldr	r0, [fp, #-8]
   2260c:	and	r0, r0, #64	; 0x40
   22610:	cmp	r0, #0
   22614:	beq	22640 <__assert_fail@plt+0x110f8>
   22618:	add	r0, sp, #8
   2261c:	mov	r1, r0
   22620:	add	r2, fp, #8
   22624:	str	r2, [r1]
   22628:	ldr	r1, [sp, #8]
   2262c:	add	r2, r1, #4
   22630:	str	r2, [sp, #8]
   22634:	ldr	r1, [r1]
   22638:	str	r1, [sp, #12]
   2263c:	str	r0, [sp, #4]
   22640:	ldr	r0, [fp, #-4]
   22644:	ldr	r1, [fp, #-8]
   22648:	ldr	r2, [sp, #12]
   2264c:	bl	11350 <open64@plt>
   22650:	bl	1bd54 <__assert_fail@plt+0xa80c>
   22654:	mov	sp, fp
   22658:	pop	{fp, lr}
   2265c:	add	sp, sp, #8
   22660:	bx	lr
   22664:	push	{fp, lr}
   22668:	mov	fp, sp
   2266c:	sub	sp, sp, #8
   22670:	str	r0, [sp]
   22674:	ldr	r0, [sp]
   22678:	movw	r1, #0
   2267c:	cmp	r0, r1
   22680:	beq	22694 <__assert_fail@plt+0x1114c>
   22684:	ldr	r0, [sp]
   22688:	bl	11374 <__freading@plt>
   2268c:	cmp	r0, #0
   22690:	bne	226a4 <__assert_fail@plt+0x1115c>
   22694:	ldr	r0, [sp]
   22698:	bl	1126c <fflush@plt>
   2269c:	str	r0, [sp, #4]
   226a0:	b	226b8 <__assert_fail@plt+0x11170>
   226a4:	ldr	r0, [sp]
   226a8:	bl	226c4 <__assert_fail@plt+0x1117c>
   226ac:	ldr	r0, [sp]
   226b0:	bl	1126c <fflush@plt>
   226b4:	str	r0, [sp, #4]
   226b8:	ldr	r0, [sp, #4]
   226bc:	mov	sp, fp
   226c0:	pop	{fp, pc}
   226c4:	push	{fp, lr}
   226c8:	mov	fp, sp
   226cc:	sub	sp, sp, #16
   226d0:	str	r0, [fp, #-4]
   226d4:	ldr	r0, [fp, #-4]
   226d8:	ldr	r0, [r0]
   226dc:	and	r0, r0, #256	; 0x100
   226e0:	cmp	r0, #0
   226e4:	beq	2270c <__assert_fail@plt+0x111c4>
   226e8:	ldr	r0, [fp, #-4]
   226ec:	mov	r1, sp
   226f0:	mov	r2, #1
   226f4:	str	r2, [r1]
   226f8:	mov	r1, #0
   226fc:	mov	r2, r1
   22700:	mov	r3, r1
   22704:	bl	22714 <__assert_fail@plt+0x111cc>
   22708:	str	r0, [sp, #8]
   2270c:	mov	sp, fp
   22710:	pop	{fp, pc}
   22714:	push	{fp, lr}
   22718:	mov	fp, sp
   2271c:	sub	sp, sp, #32
   22720:	ldr	r1, [fp, #8]
   22724:	str	r0, [fp, #-8]
   22728:	str	r3, [sp, #20]
   2272c:	str	r2, [sp, #16]
   22730:	ldr	r0, [fp, #-8]
   22734:	ldr	r0, [r0, #8]
   22738:	ldr	r2, [fp, #-8]
   2273c:	ldr	r2, [r2, #4]
   22740:	cmp	r0, r2
   22744:	str	r1, [sp, #4]
   22748:	bne	227f4 <__assert_fail@plt+0x112ac>
   2274c:	ldr	r0, [fp, #-8]
   22750:	ldr	r0, [r0, #20]
   22754:	ldr	r1, [fp, #-8]
   22758:	ldr	r1, [r1, #16]
   2275c:	cmp	r0, r1
   22760:	bne	227f4 <__assert_fail@plt+0x112ac>
   22764:	ldr	r0, [fp, #-8]
   22768:	ldr	r0, [r0, #36]	; 0x24
   2276c:	movw	r1, #0
   22770:	cmp	r0, r1
   22774:	bne	227f4 <__assert_fail@plt+0x112ac>
   22778:	ldr	r0, [fp, #-8]
   2277c:	bl	11428 <fileno@plt>
   22780:	ldr	r2, [sp, #16]
   22784:	ldr	r3, [sp, #20]
   22788:	ldr	lr, [fp, #8]
   2278c:	mov	r1, sp
   22790:	str	lr, [r1]
   22794:	bl	11308 <lseek64@plt>
   22798:	str	r1, [sp, #12]
   2279c:	str	r0, [sp, #8]
   227a0:	ldr	r0, [sp, #8]
   227a4:	ldr	r1, [sp, #12]
   227a8:	and	r0, r0, r1
   227ac:	cmn	r0, #1
   227b0:	bne	227c4 <__assert_fail@plt+0x1127c>
   227b4:	b	227b8 <__assert_fail@plt+0x11270>
   227b8:	mvn	r0, #0
   227bc:	str	r0, [fp, #-4]
   227c0:	b	22814 <__assert_fail@plt+0x112cc>
   227c4:	ldr	r0, [fp, #-8]
   227c8:	ldr	r1, [r0]
   227cc:	bic	r1, r1, #16
   227d0:	str	r1, [r0]
   227d4:	ldr	r0, [sp, #8]
   227d8:	ldr	r1, [sp, #12]
   227dc:	ldr	r2, [fp, #-8]
   227e0:	str	r1, [r2, #84]	; 0x54
   227e4:	str	r0, [r2, #80]	; 0x50
   227e8:	movw	r0, #0
   227ec:	str	r0, [fp, #-4]
   227f0:	b	22814 <__assert_fail@plt+0x112cc>
   227f4:	ldr	r0, [fp, #-8]
   227f8:	ldr	r2, [sp, #16]
   227fc:	ldr	r3, [sp, #20]
   22800:	ldr	r1, [fp, #8]
   22804:	mov	ip, sp
   22808:	str	r1, [ip]
   2280c:	bl	11440 <fseeko64@plt>
   22810:	str	r0, [fp, #-4]
   22814:	ldr	r0, [fp, #-4]
   22818:	mov	sp, fp
   2281c:	pop	{fp, pc}
   22820:	push	{fp, lr}
   22824:	mov	fp, sp
   22828:	bl	11404 <__errno_location@plt>
   2282c:	movw	lr, #12
   22830:	str	lr, [r0]
   22834:	movw	r0, #0
   22838:	pop	{fp, pc}
   2283c:	push	{fp, lr}
   22840:	mov	fp, sp
   22844:	sub	sp, sp, #8
   22848:	str	r0, [sp, #4]
   2284c:	ldr	r0, [sp, #4]
   22850:	cmn	r0, #1
   22854:	bhi	22868 <__assert_fail@plt+0x11320>
   22858:	ldr	r0, [sp, #4]
   2285c:	bl	219a8 <__assert_fail@plt+0x10460>
   22860:	str	r0, [sp]
   22864:	b	22870 <__assert_fail@plt+0x11328>
   22868:	bl	22820 <__assert_fail@plt+0x112d8>
   2286c:	str	r0, [sp]
   22870:	ldr	r0, [sp]
   22874:	mov	sp, fp
   22878:	pop	{fp, pc}
   2287c:	push	{fp, lr}
   22880:	mov	fp, sp
   22884:	sub	sp, sp, #16
   22888:	str	r0, [fp, #-4]
   2288c:	str	r1, [sp, #8]
   22890:	ldr	r0, [sp, #8]
   22894:	cmn	r0, #1
   22898:	bhi	228d0 <__assert_fail@plt+0x11388>
   2289c:	ldr	r0, [fp, #-4]
   228a0:	ldr	r1, [sp, #8]
   228a4:	ldr	r2, [sp, #8]
   228a8:	cmp	r2, #0
   228ac:	movw	r2, #0
   228b0:	movne	r2, #1
   228b4:	mvn	r3, #0
   228b8:	eor	r2, r2, r3
   228bc:	and	r2, r2, #1
   228c0:	orr	r1, r1, r2
   228c4:	bl	21a18 <__assert_fail@plt+0x104d0>
   228c8:	str	r0, [sp, #4]
   228cc:	b	228d8 <__assert_fail@plt+0x11390>
   228d0:	bl	22820 <__assert_fail@plt+0x112d8>
   228d4:	str	r0, [sp, #4]
   228d8:	ldr	r0, [sp, #4]
   228dc:	mov	sp, fp
   228e0:	pop	{fp, pc}
   228e4:	push	{fp, lr}
   228e8:	mov	fp, sp
   228ec:	sub	sp, sp, #16
   228f0:	str	r0, [sp, #8]
   228f4:	str	r1, [sp, #4]
   228f8:	ldr	r0, [sp, #8]
   228fc:	mvn	r1, #0
   22900:	cmp	r1, r0
   22904:	bcs	22928 <__assert_fail@plt+0x113e0>
   22908:	ldr	r0, [sp, #4]
   2290c:	cmp	r0, #0
   22910:	beq	22920 <__assert_fail@plt+0x113d8>
   22914:	bl	22820 <__assert_fail@plt+0x112d8>
   22918:	str	r0, [fp, #-4]
   2291c:	b	22968 <__assert_fail@plt+0x11420>
   22920:	movw	r0, #0
   22924:	str	r0, [sp, #8]
   22928:	ldr	r0, [sp, #4]
   2292c:	mvn	r1, #0
   22930:	cmp	r1, r0
   22934:	bcs	22958 <__assert_fail@plt+0x11410>
   22938:	ldr	r0, [sp, #8]
   2293c:	cmp	r0, #0
   22940:	beq	22950 <__assert_fail@plt+0x11408>
   22944:	bl	22820 <__assert_fail@plt+0x112d8>
   22948:	str	r0, [fp, #-4]
   2294c:	b	22968 <__assert_fail@plt+0x11420>
   22950:	movw	r0, #0
   22954:	str	r0, [sp, #4]
   22958:	ldr	r0, [sp, #8]
   2295c:	ldr	r1, [sp, #4]
   22960:	bl	2190c <__assert_fail@plt+0x103c4>
   22964:	str	r0, [fp, #-4]
   22968:	ldr	r0, [fp, #-4]
   2296c:	mov	sp, fp
   22970:	pop	{fp, pc}
   22974:	push	{fp, lr}
   22978:	mov	fp, sp
   2297c:	sub	sp, sp, #16
   22980:	str	r0, [fp, #-4]
   22984:	str	r1, [sp, #8]
   22988:	str	r2, [sp, #4]
   2298c:	ldr	r0, [sp, #8]
   22990:	cmp	r0, #0
   22994:	beq	229a4 <__assert_fail@plt+0x1145c>
   22998:	ldr	r0, [sp, #4]
   2299c:	cmp	r0, #0
   229a0:	bne	229b0 <__assert_fail@plt+0x11468>
   229a4:	movw	r0, #1
   229a8:	str	r0, [sp, #4]
   229ac:	str	r0, [sp, #8]
   229b0:	ldr	r0, [sp, #8]
   229b4:	cmn	r0, #1
   229b8:	bhi	229e0 <__assert_fail@plt+0x11498>
   229bc:	ldr	r0, [sp, #4]
   229c0:	cmn	r0, #1
   229c4:	bhi	229e0 <__assert_fail@plt+0x11498>
   229c8:	ldr	r0, [fp, #-4]
   229cc:	ldr	r1, [sp, #8]
   229d0:	ldr	r2, [sp, #4]
   229d4:	bl	22b00 <__assert_fail@plt+0x115b8>
   229d8:	str	r0, [sp]
   229dc:	b	229e8 <__assert_fail@plt+0x114a0>
   229e0:	bl	22820 <__assert_fail@plt+0x112d8>
   229e4:	str	r0, [sp]
   229e8:	ldr	r0, [sp]
   229ec:	mov	sp, fp
   229f0:	pop	{fp, pc}
   229f4:	push	{fp, lr}
   229f8:	mov	fp, sp
   229fc:	sub	sp, sp, #8
   22a00:	movw	r0, #14
   22a04:	bl	1147c <nl_langinfo@plt>
   22a08:	str	r0, [sp, #4]
   22a0c:	ldr	r0, [sp, #4]
   22a10:	movw	lr, #0
   22a14:	cmp	r0, lr
   22a18:	bne	22a28 <__assert_fail@plt+0x114e0>
   22a1c:	movw	r0, #20924	; 0x51bc
   22a20:	movt	r0, #2
   22a24:	str	r0, [sp, #4]
   22a28:	ldr	r0, [sp, #4]
   22a2c:	ldrb	r0, [r0]
   22a30:	cmp	r0, #0
   22a34:	bne	22a44 <__assert_fail@plt+0x114fc>
   22a38:	movw	r0, #24842	; 0x610a
   22a3c:	movt	r0, #2
   22a40:	str	r0, [sp, #4]
   22a44:	ldr	r0, [sp, #4]
   22a48:	mov	sp, fp
   22a4c:	pop	{fp, pc}
   22a50:	push	{fp, lr}
   22a54:	mov	fp, sp
   22a58:	sub	sp, sp, #32
   22a5c:	str	r0, [fp, #-8]
   22a60:	str	r1, [fp, #-12]
   22a64:	str	r2, [sp, #16]
   22a68:	str	r3, [sp, #12]
   22a6c:	ldr	r0, [fp, #-8]
   22a70:	movw	r1, #0
   22a74:	cmp	r0, r1
   22a78:	bne	22a84 <__assert_fail@plt+0x1153c>
   22a7c:	add	r0, sp, #4
   22a80:	str	r0, [fp, #-8]
   22a84:	ldr	r0, [fp, #-8]
   22a88:	ldr	r1, [fp, #-12]
   22a8c:	ldr	r2, [sp, #16]
   22a90:	ldr	r3, [sp, #12]
   22a94:	bl	11338 <mbrtowc@plt>
   22a98:	str	r0, [sp, #8]
   22a9c:	ldr	r0, [sp, #8]
   22aa0:	mvn	r1, #1
   22aa4:	cmp	r1, r0
   22aa8:	bhi	22aec <__assert_fail@plt+0x115a4>
   22aac:	ldr	r0, [sp, #16]
   22ab0:	cmp	r0, #0
   22ab4:	beq	22aec <__assert_fail@plt+0x115a4>
   22ab8:	movw	r0, #0
   22abc:	bl	244f8 <__assert_fail@plt+0x12fb0>
   22ac0:	tst	r0, #1
   22ac4:	bne	22aec <__assert_fail@plt+0x115a4>
   22ac8:	ldr	r0, [fp, #-12]
   22acc:	ldrb	r0, [r0]
   22ad0:	strb	r0, [sp, #3]
   22ad4:	ldrb	r0, [sp, #3]
   22ad8:	ldr	r1, [fp, #-8]
   22adc:	str	r0, [r1]
   22ae0:	movw	r0, #1
   22ae4:	str	r0, [fp, #-4]
   22ae8:	b	22af4 <__assert_fail@plt+0x115ac>
   22aec:	ldr	r0, [sp, #8]
   22af0:	str	r0, [fp, #-4]
   22af4:	ldr	r0, [fp, #-4]
   22af8:	mov	sp, fp
   22afc:	pop	{fp, pc}
   22b00:	push	{fp, lr}
   22b04:	mov	fp, sp
   22b08:	sub	sp, sp, #176	; 0xb0
   22b0c:	str	r0, [fp, #-8]
   22b10:	str	r1, [fp, #-12]
   22b14:	str	r2, [fp, #-16]
   22b18:	b	22ed0 <__assert_fail@plt+0x11988>
   22b1c:	b	22cf0 <__assert_fail@plt+0x117a8>
   22b20:	ldr	r0, [fp, #-16]
   22b24:	cmp	r0, #0
   22b28:	bcs	22c2c <__assert_fail@plt+0x116e4>
   22b2c:	ldr	r0, [fp, #-12]
   22b30:	cmp	r0, #0
   22b34:	bcs	22bbc <__assert_fail@plt+0x11674>
   22b38:	b	22b58 <__assert_fail@plt+0x11610>
   22b3c:	ldr	r0, [fp, #-12]
   22b40:	ldr	r1, [fp, #-16]
   22b44:	movw	r2, #127	; 0x7f
   22b48:	udiv	r1, r2, r1
   22b4c:	cmp	r0, r1
   22b50:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22b54:	b	22cd8 <__assert_fail@plt+0x11790>
   22b58:	b	22b6c <__assert_fail@plt+0x11624>
   22b5c:	ldr	r0, [fp, #-16]
   22b60:	cmp	r0, #1
   22b64:	bcc	22b7c <__assert_fail@plt+0x11634>
   22b68:	b	22b88 <__assert_fail@plt+0x11640>
   22b6c:	ldr	r0, [fp, #-16]
   22b70:	movw	r1, #0
   22b74:	cmp	r1, r0
   22b78:	bcs	22b88 <__assert_fail@plt+0x11640>
   22b7c:	movw	r0, #0
   22b80:	str	r0, [fp, #-24]	; 0xffffffe8
   22b84:	b	22ba0 <__assert_fail@plt+0x11658>
   22b88:	ldr	r0, [fp, #-16]
   22b8c:	movw	r1, #0
   22b90:	sub	r0, r1, r0
   22b94:	movw	r1, #127	; 0x7f
   22b98:	udiv	r0, r1, r0
   22b9c:	str	r0, [fp, #-24]	; 0xffffffe8
   22ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22ba4:	ldr	r1, [fp, #-12]
   22ba8:	mvn	r2, #0
   22bac:	sub	r1, r2, r1
   22bb0:	cmp	r0, r1
   22bb4:	bls	22cc0 <__assert_fail@plt+0x11778>
   22bb8:	b	22cd8 <__assert_fail@plt+0x11790>
   22bbc:	ldr	r0, [fp, #-16]
   22bc0:	cmn	r0, #1
   22bc4:	bne	22c10 <__assert_fail@plt+0x116c8>
   22bc8:	b	22be8 <__assert_fail@plt+0x116a0>
   22bcc:	ldr	r0, [fp, #-12]
   22bd0:	mvn	r1, #127	; 0x7f
   22bd4:	add	r0, r0, r1
   22bd8:	movw	r1, #0
   22bdc:	cmp	r1, r0
   22be0:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22be4:	b	22cd8 <__assert_fail@plt+0x11790>
   22be8:	ldr	r0, [fp, #-12]
   22bec:	movw	r1, #0
   22bf0:	cmp	r1, r0
   22bf4:	bcs	22cd8 <__assert_fail@plt+0x11790>
   22bf8:	ldr	r0, [fp, #-12]
   22bfc:	sub	r0, r0, #1
   22c00:	movw	r1, #127	; 0x7f
   22c04:	cmp	r1, r0
   22c08:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22c0c:	b	22cd8 <__assert_fail@plt+0x11790>
   22c10:	ldr	r0, [fp, #-16]
   22c14:	mvn	r1, #127	; 0x7f
   22c18:	udiv	r0, r1, r0
   22c1c:	ldr	r1, [fp, #-12]
   22c20:	cmp	r0, r1
   22c24:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22c28:	b	22cd8 <__assert_fail@plt+0x11790>
   22c2c:	ldr	r0, [fp, #-16]
   22c30:	cmp	r0, #0
   22c34:	bne	22c3c <__assert_fail@plt+0x116f4>
   22c38:	b	22cd8 <__assert_fail@plt+0x11790>
   22c3c:	ldr	r0, [fp, #-12]
   22c40:	cmp	r0, #0
   22c44:	bcs	22ca8 <__assert_fail@plt+0x11760>
   22c48:	ldr	r0, [fp, #-12]
   22c4c:	cmn	r0, #1
   22c50:	bne	22c8c <__assert_fail@plt+0x11744>
   22c54:	b	22c74 <__assert_fail@plt+0x1172c>
   22c58:	ldr	r0, [fp, #-16]
   22c5c:	mvn	r1, #127	; 0x7f
   22c60:	add	r0, r0, r1
   22c64:	movw	r1, #0
   22c68:	cmp	r1, r0
   22c6c:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22c70:	b	22cd8 <__assert_fail@plt+0x11790>
   22c74:	ldr	r0, [fp, #-16]
   22c78:	sub	r0, r0, #1
   22c7c:	movw	r1, #127	; 0x7f
   22c80:	cmp	r1, r0
   22c84:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22c88:	b	22cd8 <__assert_fail@plt+0x11790>
   22c8c:	ldr	r0, [fp, #-12]
   22c90:	mvn	r1, #127	; 0x7f
   22c94:	udiv	r0, r1, r0
   22c98:	ldr	r1, [fp, #-16]
   22c9c:	cmp	r0, r1
   22ca0:	bcc	22cc0 <__assert_fail@plt+0x11778>
   22ca4:	b	22cd8 <__assert_fail@plt+0x11790>
   22ca8:	ldr	r0, [fp, #-16]
   22cac:	movw	r1, #127	; 0x7f
   22cb0:	udiv	r0, r1, r0
   22cb4:	ldr	r1, [fp, #-12]
   22cb8:	cmp	r0, r1
   22cbc:	bcs	22cd8 <__assert_fail@plt+0x11790>
   22cc0:	ldr	r0, [fp, #-12]
   22cc4:	ldr	r1, [fp, #-16]
   22cc8:	mul	r0, r0, r1
   22ccc:	sxtb	r0, r0
   22cd0:	str	r0, [fp, #-20]	; 0xffffffec
   22cd4:	b	23e50 <__assert_fail@plt+0x12908>
   22cd8:	ldr	r0, [fp, #-12]
   22cdc:	ldr	r1, [fp, #-16]
   22ce0:	mul	r0, r0, r1
   22ce4:	sxtb	r0, r0
   22ce8:	str	r0, [fp, #-20]	; 0xffffffec
   22cec:	b	23e68 <__assert_fail@plt+0x12920>
   22cf0:	ldr	r0, [fp, #-16]
   22cf4:	cmp	r0, #0
   22cf8:	bcs	22e04 <__assert_fail@plt+0x118bc>
   22cfc:	ldr	r0, [fp, #-12]
   22d00:	cmp	r0, #0
   22d04:	bcs	22d8c <__assert_fail@plt+0x11844>
   22d08:	b	22d28 <__assert_fail@plt+0x117e0>
   22d0c:	ldr	r0, [fp, #-12]
   22d10:	ldr	r1, [fp, #-16]
   22d14:	movw	r2, #255	; 0xff
   22d18:	udiv	r1, r2, r1
   22d1c:	cmp	r0, r1
   22d20:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22d24:	b	22eb8 <__assert_fail@plt+0x11970>
   22d28:	b	22d3c <__assert_fail@plt+0x117f4>
   22d2c:	ldr	r0, [fp, #-16]
   22d30:	cmp	r0, #1
   22d34:	bcc	22d4c <__assert_fail@plt+0x11804>
   22d38:	b	22d58 <__assert_fail@plt+0x11810>
   22d3c:	ldr	r0, [fp, #-16]
   22d40:	movw	r1, #0
   22d44:	cmp	r1, r0
   22d48:	bcs	22d58 <__assert_fail@plt+0x11810>
   22d4c:	movw	r0, #0
   22d50:	str	r0, [fp, #-28]	; 0xffffffe4
   22d54:	b	22d70 <__assert_fail@plt+0x11828>
   22d58:	ldr	r0, [fp, #-16]
   22d5c:	movw	r1, #0
   22d60:	sub	r0, r1, r0
   22d64:	movw	r1, #255	; 0xff
   22d68:	udiv	r0, r1, r0
   22d6c:	str	r0, [fp, #-28]	; 0xffffffe4
   22d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22d74:	ldr	r1, [fp, #-12]
   22d78:	mvn	r2, #0
   22d7c:	sub	r1, r2, r1
   22d80:	cmp	r0, r1
   22d84:	bls	22ea0 <__assert_fail@plt+0x11958>
   22d88:	b	22eb8 <__assert_fail@plt+0x11970>
   22d8c:	b	22d94 <__assert_fail@plt+0x1184c>
   22d90:	b	22d98 <__assert_fail@plt+0x11850>
   22d94:	b	22de8 <__assert_fail@plt+0x118a0>
   22d98:	ldr	r0, [fp, #-16]
   22d9c:	cmn	r0, #1
   22da0:	bne	22de8 <__assert_fail@plt+0x118a0>
   22da4:	b	22dc0 <__assert_fail@plt+0x11878>
   22da8:	ldr	r0, [fp, #-12]
   22dac:	add	r0, r0, #0
   22db0:	movw	r1, #0
   22db4:	cmp	r1, r0
   22db8:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22dbc:	b	22eb8 <__assert_fail@plt+0x11970>
   22dc0:	ldr	r0, [fp, #-12]
   22dc4:	movw	r1, #0
   22dc8:	cmp	r1, r0
   22dcc:	bcs	22eb8 <__assert_fail@plt+0x11970>
   22dd0:	ldr	r0, [fp, #-12]
   22dd4:	sub	r0, r0, #1
   22dd8:	mvn	r1, #0
   22ddc:	cmp	r1, r0
   22de0:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22de4:	b	22eb8 <__assert_fail@plt+0x11970>
   22de8:	ldr	r0, [fp, #-16]
   22dec:	movw	r1, #0
   22df0:	udiv	r0, r1, r0
   22df4:	ldr	r1, [fp, #-12]
   22df8:	cmp	r0, r1
   22dfc:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22e00:	b	22eb8 <__assert_fail@plt+0x11970>
   22e04:	ldr	r0, [fp, #-16]
   22e08:	cmp	r0, #0
   22e0c:	bne	22e14 <__assert_fail@plt+0x118cc>
   22e10:	b	22eb8 <__assert_fail@plt+0x11970>
   22e14:	ldr	r0, [fp, #-12]
   22e18:	cmp	r0, #0
   22e1c:	bcs	22e88 <__assert_fail@plt+0x11940>
   22e20:	b	22e28 <__assert_fail@plt+0x118e0>
   22e24:	b	22e2c <__assert_fail@plt+0x118e4>
   22e28:	b	22e6c <__assert_fail@plt+0x11924>
   22e2c:	ldr	r0, [fp, #-12]
   22e30:	cmn	r0, #1
   22e34:	bne	22e6c <__assert_fail@plt+0x11924>
   22e38:	b	22e54 <__assert_fail@plt+0x1190c>
   22e3c:	ldr	r0, [fp, #-16]
   22e40:	add	r0, r0, #0
   22e44:	movw	r1, #0
   22e48:	cmp	r1, r0
   22e4c:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22e50:	b	22eb8 <__assert_fail@plt+0x11970>
   22e54:	ldr	r0, [fp, #-16]
   22e58:	sub	r0, r0, #1
   22e5c:	mvn	r1, #0
   22e60:	cmp	r1, r0
   22e64:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22e68:	b	22eb8 <__assert_fail@plt+0x11970>
   22e6c:	ldr	r0, [fp, #-12]
   22e70:	movw	r1, #0
   22e74:	udiv	r0, r1, r0
   22e78:	ldr	r1, [fp, #-16]
   22e7c:	cmp	r0, r1
   22e80:	bcc	22ea0 <__assert_fail@plt+0x11958>
   22e84:	b	22eb8 <__assert_fail@plt+0x11970>
   22e88:	ldr	r0, [fp, #-16]
   22e8c:	movw	r1, #255	; 0xff
   22e90:	udiv	r0, r1, r0
   22e94:	ldr	r1, [fp, #-12]
   22e98:	cmp	r0, r1
   22e9c:	bcs	22eb8 <__assert_fail@plt+0x11970>
   22ea0:	ldr	r0, [fp, #-12]
   22ea4:	ldr	r1, [fp, #-16]
   22ea8:	mul	r0, r0, r1
   22eac:	and	r0, r0, #255	; 0xff
   22eb0:	str	r0, [fp, #-20]	; 0xffffffec
   22eb4:	b	23e50 <__assert_fail@plt+0x12908>
   22eb8:	ldr	r0, [fp, #-12]
   22ebc:	ldr	r1, [fp, #-16]
   22ec0:	mul	r0, r0, r1
   22ec4:	and	r0, r0, #255	; 0xff
   22ec8:	str	r0, [fp, #-20]	; 0xffffffec
   22ecc:	b	23e68 <__assert_fail@plt+0x12920>
   22ed0:	b	23288 <__assert_fail@plt+0x11d40>
   22ed4:	b	230a8 <__assert_fail@plt+0x11b60>
   22ed8:	ldr	r0, [fp, #-16]
   22edc:	cmp	r0, #0
   22ee0:	bcs	22fe4 <__assert_fail@plt+0x11a9c>
   22ee4:	ldr	r0, [fp, #-12]
   22ee8:	cmp	r0, #0
   22eec:	bcs	22f74 <__assert_fail@plt+0x11a2c>
   22ef0:	b	22f10 <__assert_fail@plt+0x119c8>
   22ef4:	ldr	r0, [fp, #-12]
   22ef8:	ldr	r1, [fp, #-16]
   22efc:	movw	r2, #32767	; 0x7fff
   22f00:	udiv	r1, r2, r1
   22f04:	cmp	r0, r1
   22f08:	bcc	23078 <__assert_fail@plt+0x11b30>
   22f0c:	b	23090 <__assert_fail@plt+0x11b48>
   22f10:	b	22f24 <__assert_fail@plt+0x119dc>
   22f14:	ldr	r0, [fp, #-16]
   22f18:	cmp	r0, #1
   22f1c:	bcc	22f34 <__assert_fail@plt+0x119ec>
   22f20:	b	22f40 <__assert_fail@plt+0x119f8>
   22f24:	ldr	r0, [fp, #-16]
   22f28:	movw	r1, #0
   22f2c:	cmp	r1, r0
   22f30:	bcs	22f40 <__assert_fail@plt+0x119f8>
   22f34:	movw	r0, #0
   22f38:	str	r0, [fp, #-32]	; 0xffffffe0
   22f3c:	b	22f58 <__assert_fail@plt+0x11a10>
   22f40:	ldr	r0, [fp, #-16]
   22f44:	movw	r1, #0
   22f48:	sub	r0, r1, r0
   22f4c:	movw	r1, #32767	; 0x7fff
   22f50:	udiv	r0, r1, r0
   22f54:	str	r0, [fp, #-32]	; 0xffffffe0
   22f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22f5c:	ldr	r1, [fp, #-12]
   22f60:	mvn	r2, #0
   22f64:	sub	r1, r2, r1
   22f68:	cmp	r0, r1
   22f6c:	bls	23078 <__assert_fail@plt+0x11b30>
   22f70:	b	23090 <__assert_fail@plt+0x11b48>
   22f74:	ldr	r0, [fp, #-16]
   22f78:	cmn	r0, #1
   22f7c:	bne	22fc8 <__assert_fail@plt+0x11a80>
   22f80:	b	22fa0 <__assert_fail@plt+0x11a58>
   22f84:	ldr	r0, [pc, #3840]	; 23e8c <__assert_fail@plt+0x12944>
   22f88:	ldr	r1, [fp, #-12]
   22f8c:	add	r0, r1, r0
   22f90:	movw	r1, #0
   22f94:	cmp	r1, r0
   22f98:	bcc	23078 <__assert_fail@plt+0x11b30>
   22f9c:	b	23090 <__assert_fail@plt+0x11b48>
   22fa0:	ldr	r0, [fp, #-12]
   22fa4:	movw	r1, #0
   22fa8:	cmp	r1, r0
   22fac:	bcs	23090 <__assert_fail@plt+0x11b48>
   22fb0:	ldr	r0, [fp, #-12]
   22fb4:	sub	r0, r0, #1
   22fb8:	movw	r1, #32767	; 0x7fff
   22fbc:	cmp	r1, r0
   22fc0:	bcc	23078 <__assert_fail@plt+0x11b30>
   22fc4:	b	23090 <__assert_fail@plt+0x11b48>
   22fc8:	ldr	r0, [pc, #3772]	; 23e8c <__assert_fail@plt+0x12944>
   22fcc:	ldr	r1, [fp, #-16]
   22fd0:	udiv	r0, r0, r1
   22fd4:	ldr	r1, [fp, #-12]
   22fd8:	cmp	r0, r1
   22fdc:	bcc	23078 <__assert_fail@plt+0x11b30>
   22fe0:	b	23090 <__assert_fail@plt+0x11b48>
   22fe4:	ldr	r0, [fp, #-16]
   22fe8:	cmp	r0, #0
   22fec:	bne	22ff4 <__assert_fail@plt+0x11aac>
   22ff0:	b	23090 <__assert_fail@plt+0x11b48>
   22ff4:	ldr	r0, [fp, #-12]
   22ff8:	cmp	r0, #0
   22ffc:	bcs	23060 <__assert_fail@plt+0x11b18>
   23000:	ldr	r0, [fp, #-12]
   23004:	cmn	r0, #1
   23008:	bne	23044 <__assert_fail@plt+0x11afc>
   2300c:	b	2302c <__assert_fail@plt+0x11ae4>
   23010:	ldr	r0, [pc, #3700]	; 23e8c <__assert_fail@plt+0x12944>
   23014:	ldr	r1, [fp, #-16]
   23018:	add	r0, r1, r0
   2301c:	movw	r1, #0
   23020:	cmp	r1, r0
   23024:	bcc	23078 <__assert_fail@plt+0x11b30>
   23028:	b	23090 <__assert_fail@plt+0x11b48>
   2302c:	ldr	r0, [fp, #-16]
   23030:	sub	r0, r0, #1
   23034:	movw	r1, #32767	; 0x7fff
   23038:	cmp	r1, r0
   2303c:	bcc	23078 <__assert_fail@plt+0x11b30>
   23040:	b	23090 <__assert_fail@plt+0x11b48>
   23044:	ldr	r0, [pc, #3648]	; 23e8c <__assert_fail@plt+0x12944>
   23048:	ldr	r1, [fp, #-12]
   2304c:	udiv	r0, r0, r1
   23050:	ldr	r1, [fp, #-16]
   23054:	cmp	r0, r1
   23058:	bcc	23078 <__assert_fail@plt+0x11b30>
   2305c:	b	23090 <__assert_fail@plt+0x11b48>
   23060:	ldr	r0, [fp, #-16]
   23064:	movw	r1, #32767	; 0x7fff
   23068:	udiv	r0, r1, r0
   2306c:	ldr	r1, [fp, #-12]
   23070:	cmp	r0, r1
   23074:	bcs	23090 <__assert_fail@plt+0x11b48>
   23078:	ldr	r0, [fp, #-12]
   2307c:	ldr	r1, [fp, #-16]
   23080:	mul	r0, r0, r1
   23084:	sxth	r0, r0
   23088:	str	r0, [fp, #-20]	; 0xffffffec
   2308c:	b	23e50 <__assert_fail@plt+0x12908>
   23090:	ldr	r0, [fp, #-12]
   23094:	ldr	r1, [fp, #-16]
   23098:	mul	r0, r0, r1
   2309c:	sxth	r0, r0
   230a0:	str	r0, [fp, #-20]	; 0xffffffec
   230a4:	b	23e68 <__assert_fail@plt+0x12920>
   230a8:	ldr	r0, [fp, #-16]
   230ac:	cmp	r0, #0
   230b0:	bcs	231bc <__assert_fail@plt+0x11c74>
   230b4:	ldr	r0, [fp, #-12]
   230b8:	cmp	r0, #0
   230bc:	bcs	23144 <__assert_fail@plt+0x11bfc>
   230c0:	b	230e0 <__assert_fail@plt+0x11b98>
   230c4:	ldr	r0, [fp, #-12]
   230c8:	ldr	r1, [fp, #-16]
   230cc:	movw	r2, #65535	; 0xffff
   230d0:	udiv	r1, r2, r1
   230d4:	cmp	r0, r1
   230d8:	bcc	23258 <__assert_fail@plt+0x11d10>
   230dc:	b	23270 <__assert_fail@plt+0x11d28>
   230e0:	b	230f4 <__assert_fail@plt+0x11bac>
   230e4:	ldr	r0, [fp, #-16]
   230e8:	cmp	r0, #1
   230ec:	bcc	23104 <__assert_fail@plt+0x11bbc>
   230f0:	b	23110 <__assert_fail@plt+0x11bc8>
   230f4:	ldr	r0, [fp, #-16]
   230f8:	movw	r1, #0
   230fc:	cmp	r1, r0
   23100:	bcs	23110 <__assert_fail@plt+0x11bc8>
   23104:	movw	r0, #0
   23108:	str	r0, [fp, #-36]	; 0xffffffdc
   2310c:	b	23128 <__assert_fail@plt+0x11be0>
   23110:	ldr	r0, [fp, #-16]
   23114:	movw	r1, #0
   23118:	sub	r0, r1, r0
   2311c:	movw	r1, #65535	; 0xffff
   23120:	udiv	r0, r1, r0
   23124:	str	r0, [fp, #-36]	; 0xffffffdc
   23128:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2312c:	ldr	r1, [fp, #-12]
   23130:	mvn	r2, #0
   23134:	sub	r1, r2, r1
   23138:	cmp	r0, r1
   2313c:	bls	23258 <__assert_fail@plt+0x11d10>
   23140:	b	23270 <__assert_fail@plt+0x11d28>
   23144:	b	2314c <__assert_fail@plt+0x11c04>
   23148:	b	23150 <__assert_fail@plt+0x11c08>
   2314c:	b	231a0 <__assert_fail@plt+0x11c58>
   23150:	ldr	r0, [fp, #-16]
   23154:	cmn	r0, #1
   23158:	bne	231a0 <__assert_fail@plt+0x11c58>
   2315c:	b	23178 <__assert_fail@plt+0x11c30>
   23160:	ldr	r0, [fp, #-12]
   23164:	add	r0, r0, #0
   23168:	movw	r1, #0
   2316c:	cmp	r1, r0
   23170:	bcc	23258 <__assert_fail@plt+0x11d10>
   23174:	b	23270 <__assert_fail@plt+0x11d28>
   23178:	ldr	r0, [fp, #-12]
   2317c:	movw	r1, #0
   23180:	cmp	r1, r0
   23184:	bcs	23270 <__assert_fail@plt+0x11d28>
   23188:	ldr	r0, [fp, #-12]
   2318c:	sub	r0, r0, #1
   23190:	mvn	r1, #0
   23194:	cmp	r1, r0
   23198:	bcc	23258 <__assert_fail@plt+0x11d10>
   2319c:	b	23270 <__assert_fail@plt+0x11d28>
   231a0:	ldr	r0, [fp, #-16]
   231a4:	movw	r1, #0
   231a8:	udiv	r0, r1, r0
   231ac:	ldr	r1, [fp, #-12]
   231b0:	cmp	r0, r1
   231b4:	bcc	23258 <__assert_fail@plt+0x11d10>
   231b8:	b	23270 <__assert_fail@plt+0x11d28>
   231bc:	ldr	r0, [fp, #-16]
   231c0:	cmp	r0, #0
   231c4:	bne	231cc <__assert_fail@plt+0x11c84>
   231c8:	b	23270 <__assert_fail@plt+0x11d28>
   231cc:	ldr	r0, [fp, #-12]
   231d0:	cmp	r0, #0
   231d4:	bcs	23240 <__assert_fail@plt+0x11cf8>
   231d8:	b	231e0 <__assert_fail@plt+0x11c98>
   231dc:	b	231e4 <__assert_fail@plt+0x11c9c>
   231e0:	b	23224 <__assert_fail@plt+0x11cdc>
   231e4:	ldr	r0, [fp, #-12]
   231e8:	cmn	r0, #1
   231ec:	bne	23224 <__assert_fail@plt+0x11cdc>
   231f0:	b	2320c <__assert_fail@plt+0x11cc4>
   231f4:	ldr	r0, [fp, #-16]
   231f8:	add	r0, r0, #0
   231fc:	movw	r1, #0
   23200:	cmp	r1, r0
   23204:	bcc	23258 <__assert_fail@plt+0x11d10>
   23208:	b	23270 <__assert_fail@plt+0x11d28>
   2320c:	ldr	r0, [fp, #-16]
   23210:	sub	r0, r0, #1
   23214:	mvn	r1, #0
   23218:	cmp	r1, r0
   2321c:	bcc	23258 <__assert_fail@plt+0x11d10>
   23220:	b	23270 <__assert_fail@plt+0x11d28>
   23224:	ldr	r0, [fp, #-12]
   23228:	movw	r1, #0
   2322c:	udiv	r0, r1, r0
   23230:	ldr	r1, [fp, #-16]
   23234:	cmp	r0, r1
   23238:	bcc	23258 <__assert_fail@plt+0x11d10>
   2323c:	b	23270 <__assert_fail@plt+0x11d28>
   23240:	ldr	r0, [fp, #-16]
   23244:	movw	r1, #65535	; 0xffff
   23248:	udiv	r0, r1, r0
   2324c:	ldr	r1, [fp, #-12]
   23250:	cmp	r0, r1
   23254:	bcs	23270 <__assert_fail@plt+0x11d28>
   23258:	ldr	r0, [fp, #-12]
   2325c:	ldr	r1, [fp, #-16]
   23260:	mul	r0, r0, r1
   23264:	uxth	r0, r0
   23268:	str	r0, [fp, #-20]	; 0xffffffec
   2326c:	b	23e50 <__assert_fail@plt+0x12908>
   23270:	ldr	r0, [fp, #-12]
   23274:	ldr	r1, [fp, #-16]
   23278:	mul	r0, r0, r1
   2327c:	uxth	r0, r0
   23280:	str	r0, [fp, #-20]	; 0xffffffec
   23284:	b	23e68 <__assert_fail@plt+0x12920>
   23288:	b	2328c <__assert_fail@plt+0x11d44>
   2328c:	b	23450 <__assert_fail@plt+0x11f08>
   23290:	ldr	r0, [fp, #-16]
   23294:	cmp	r0, #0
   23298:	bcs	23398 <__assert_fail@plt+0x11e50>
   2329c:	ldr	r0, [fp, #-12]
   232a0:	cmp	r0, #0
   232a4:	bcs	2332c <__assert_fail@plt+0x11de4>
   232a8:	b	232c8 <__assert_fail@plt+0x11d80>
   232ac:	ldr	r0, [pc, #3024]	; 23e84 <__assert_fail@plt+0x1293c>
   232b0:	ldr	r1, [fp, #-12]
   232b4:	ldr	r2, [fp, #-16]
   232b8:	udiv	r0, r0, r2
   232bc:	cmp	r1, r0
   232c0:	bcc	23428 <__assert_fail@plt+0x11ee0>
   232c4:	b	2343c <__assert_fail@plt+0x11ef4>
   232c8:	b	232dc <__assert_fail@plt+0x11d94>
   232cc:	ldr	r0, [fp, #-16]
   232d0:	cmp	r0, #1
   232d4:	bcc	232ec <__assert_fail@plt+0x11da4>
   232d8:	b	232f8 <__assert_fail@plt+0x11db0>
   232dc:	ldr	r0, [fp, #-16]
   232e0:	movw	r1, #0
   232e4:	cmp	r1, r0
   232e8:	bcs	232f8 <__assert_fail@plt+0x11db0>
   232ec:	movw	r0, #0
   232f0:	str	r0, [fp, #-40]	; 0xffffffd8
   232f4:	b	23310 <__assert_fail@plt+0x11dc8>
   232f8:	ldr	r0, [pc, #2948]	; 23e84 <__assert_fail@plt+0x1293c>
   232fc:	ldr	r1, [fp, #-16]
   23300:	movw	r2, #0
   23304:	sub	r1, r2, r1
   23308:	udiv	r0, r0, r1
   2330c:	str	r0, [fp, #-40]	; 0xffffffd8
   23310:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23314:	ldr	r1, [fp, #-12]
   23318:	mvn	r2, #0
   2331c:	sub	r1, r2, r1
   23320:	cmp	r0, r1
   23324:	bls	23428 <__assert_fail@plt+0x11ee0>
   23328:	b	2343c <__assert_fail@plt+0x11ef4>
   2332c:	ldr	r0, [fp, #-16]
   23330:	cmn	r0, #1
   23334:	bne	2337c <__assert_fail@plt+0x11e34>
   23338:	b	23354 <__assert_fail@plt+0x11e0c>
   2333c:	ldr	r0, [fp, #-12]
   23340:	add	r0, r0, #-2147483648	; 0x80000000
   23344:	movw	r1, #0
   23348:	cmp	r1, r0
   2334c:	bcc	23428 <__assert_fail@plt+0x11ee0>
   23350:	b	2343c <__assert_fail@plt+0x11ef4>
   23354:	ldr	r0, [fp, #-12]
   23358:	movw	r1, #0
   2335c:	cmp	r1, r0
   23360:	bcs	2343c <__assert_fail@plt+0x11ef4>
   23364:	ldr	r0, [pc, #2840]	; 23e84 <__assert_fail@plt+0x1293c>
   23368:	ldr	r1, [fp, #-12]
   2336c:	sub	r1, r1, #1
   23370:	cmp	r0, r1
   23374:	bcc	23428 <__assert_fail@plt+0x11ee0>
   23378:	b	2343c <__assert_fail@plt+0x11ef4>
   2337c:	ldr	r0, [pc, #2820]	; 23e88 <__assert_fail@plt+0x12940>
   23380:	ldr	r1, [fp, #-16]
   23384:	udiv	r0, r0, r1
   23388:	ldr	r1, [fp, #-12]
   2338c:	cmp	r0, r1
   23390:	bcc	23428 <__assert_fail@plt+0x11ee0>
   23394:	b	2343c <__assert_fail@plt+0x11ef4>
   23398:	ldr	r0, [fp, #-16]
   2339c:	cmp	r0, #0
   233a0:	bne	233a8 <__assert_fail@plt+0x11e60>
   233a4:	b	2343c <__assert_fail@plt+0x11ef4>
   233a8:	ldr	r0, [fp, #-12]
   233ac:	cmp	r0, #0
   233b0:	bcs	23410 <__assert_fail@plt+0x11ec8>
   233b4:	ldr	r0, [fp, #-12]
   233b8:	cmn	r0, #1
   233bc:	bne	233f4 <__assert_fail@plt+0x11eac>
   233c0:	b	233dc <__assert_fail@plt+0x11e94>
   233c4:	ldr	r0, [fp, #-16]
   233c8:	add	r0, r0, #-2147483648	; 0x80000000
   233cc:	movw	r1, #0
   233d0:	cmp	r1, r0
   233d4:	bcc	23428 <__assert_fail@plt+0x11ee0>
   233d8:	b	2343c <__assert_fail@plt+0x11ef4>
   233dc:	ldr	r0, [pc, #2720]	; 23e84 <__assert_fail@plt+0x1293c>
   233e0:	ldr	r1, [fp, #-16]
   233e4:	sub	r1, r1, #1
   233e8:	cmp	r0, r1
   233ec:	bcc	23428 <__assert_fail@plt+0x11ee0>
   233f0:	b	2343c <__assert_fail@plt+0x11ef4>
   233f4:	ldr	r0, [pc, #2700]	; 23e88 <__assert_fail@plt+0x12940>
   233f8:	ldr	r1, [fp, #-12]
   233fc:	udiv	r0, r0, r1
   23400:	ldr	r1, [fp, #-16]
   23404:	cmp	r0, r1
   23408:	bcc	23428 <__assert_fail@plt+0x11ee0>
   2340c:	b	2343c <__assert_fail@plt+0x11ef4>
   23410:	ldr	r0, [pc, #2668]	; 23e84 <__assert_fail@plt+0x1293c>
   23414:	ldr	r1, [fp, #-16]
   23418:	udiv	r0, r0, r1
   2341c:	ldr	r1, [fp, #-12]
   23420:	cmp	r0, r1
   23424:	bcs	2343c <__assert_fail@plt+0x11ef4>
   23428:	ldr	r0, [fp, #-12]
   2342c:	ldr	r1, [fp, #-16]
   23430:	mul	r0, r0, r1
   23434:	str	r0, [fp, #-20]	; 0xffffffec
   23438:	b	23e50 <__assert_fail@plt+0x12908>
   2343c:	ldr	r0, [fp, #-12]
   23440:	ldr	r1, [fp, #-16]
   23444:	mul	r0, r0, r1
   23448:	str	r0, [fp, #-20]	; 0xffffffec
   2344c:	b	23e68 <__assert_fail@plt+0x12920>
   23450:	ldr	r0, [fp, #-16]
   23454:	cmp	r0, #0
   23458:	bcs	23564 <__assert_fail@plt+0x1201c>
   2345c:	ldr	r0, [fp, #-12]
   23460:	cmp	r0, #0
   23464:	bcs	234ec <__assert_fail@plt+0x11fa4>
   23468:	b	23488 <__assert_fail@plt+0x11f40>
   2346c:	ldr	r0, [fp, #-12]
   23470:	ldr	r1, [fp, #-16]
   23474:	mvn	r2, #0
   23478:	udiv	r1, r2, r1
   2347c:	cmp	r0, r1
   23480:	bcc	23600 <__assert_fail@plt+0x120b8>
   23484:	b	23614 <__assert_fail@plt+0x120cc>
   23488:	b	2349c <__assert_fail@plt+0x11f54>
   2348c:	ldr	r0, [fp, #-16]
   23490:	cmp	r0, #1
   23494:	bcc	234ac <__assert_fail@plt+0x11f64>
   23498:	b	234b8 <__assert_fail@plt+0x11f70>
   2349c:	ldr	r0, [fp, #-16]
   234a0:	movw	r1, #0
   234a4:	cmp	r1, r0
   234a8:	bcs	234b8 <__assert_fail@plt+0x11f70>
   234ac:	movw	r0, #1
   234b0:	str	r0, [fp, #-44]	; 0xffffffd4
   234b4:	b	234d0 <__assert_fail@plt+0x11f88>
   234b8:	ldr	r0, [fp, #-16]
   234bc:	movw	r1, #0
   234c0:	sub	r0, r1, r0
   234c4:	mvn	r1, #0
   234c8:	udiv	r0, r1, r0
   234cc:	str	r0, [fp, #-44]	; 0xffffffd4
   234d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   234d4:	ldr	r1, [fp, #-12]
   234d8:	mvn	r2, #0
   234dc:	sub	r1, r2, r1
   234e0:	cmp	r0, r1
   234e4:	bls	23600 <__assert_fail@plt+0x120b8>
   234e8:	b	23614 <__assert_fail@plt+0x120cc>
   234ec:	b	234f4 <__assert_fail@plt+0x11fac>
   234f0:	b	234f8 <__assert_fail@plt+0x11fb0>
   234f4:	b	23548 <__assert_fail@plt+0x12000>
   234f8:	ldr	r0, [fp, #-16]
   234fc:	cmn	r0, #1
   23500:	bne	23548 <__assert_fail@plt+0x12000>
   23504:	b	23520 <__assert_fail@plt+0x11fd8>
   23508:	ldr	r0, [fp, #-12]
   2350c:	add	r0, r0, #0
   23510:	movw	r1, #0
   23514:	cmp	r1, r0
   23518:	bcc	23600 <__assert_fail@plt+0x120b8>
   2351c:	b	23614 <__assert_fail@plt+0x120cc>
   23520:	ldr	r0, [fp, #-12]
   23524:	movw	r1, #0
   23528:	cmp	r1, r0
   2352c:	bcs	23614 <__assert_fail@plt+0x120cc>
   23530:	ldr	r0, [fp, #-12]
   23534:	sub	r0, r0, #1
   23538:	mvn	r1, #0
   2353c:	cmp	r1, r0
   23540:	bcc	23600 <__assert_fail@plt+0x120b8>
   23544:	b	23614 <__assert_fail@plt+0x120cc>
   23548:	ldr	r0, [fp, #-16]
   2354c:	movw	r1, #0
   23550:	udiv	r0, r1, r0
   23554:	ldr	r1, [fp, #-12]
   23558:	cmp	r0, r1
   2355c:	bcc	23600 <__assert_fail@plt+0x120b8>
   23560:	b	23614 <__assert_fail@plt+0x120cc>
   23564:	ldr	r0, [fp, #-16]
   23568:	cmp	r0, #0
   2356c:	bne	23574 <__assert_fail@plt+0x1202c>
   23570:	b	23614 <__assert_fail@plt+0x120cc>
   23574:	ldr	r0, [fp, #-12]
   23578:	cmp	r0, #0
   2357c:	bcs	235e8 <__assert_fail@plt+0x120a0>
   23580:	b	23588 <__assert_fail@plt+0x12040>
   23584:	b	2358c <__assert_fail@plt+0x12044>
   23588:	b	235cc <__assert_fail@plt+0x12084>
   2358c:	ldr	r0, [fp, #-12]
   23590:	cmn	r0, #1
   23594:	bne	235cc <__assert_fail@plt+0x12084>
   23598:	b	235b4 <__assert_fail@plt+0x1206c>
   2359c:	ldr	r0, [fp, #-16]
   235a0:	add	r0, r0, #0
   235a4:	movw	r1, #0
   235a8:	cmp	r1, r0
   235ac:	bcc	23600 <__assert_fail@plt+0x120b8>
   235b0:	b	23614 <__assert_fail@plt+0x120cc>
   235b4:	ldr	r0, [fp, #-16]
   235b8:	sub	r0, r0, #1
   235bc:	mvn	r1, #0
   235c0:	cmp	r1, r0
   235c4:	bcc	23600 <__assert_fail@plt+0x120b8>
   235c8:	b	23614 <__assert_fail@plt+0x120cc>
   235cc:	ldr	r0, [fp, #-12]
   235d0:	movw	r1, #0
   235d4:	udiv	r0, r1, r0
   235d8:	ldr	r1, [fp, #-16]
   235dc:	cmp	r0, r1
   235e0:	bcc	23600 <__assert_fail@plt+0x120b8>
   235e4:	b	23614 <__assert_fail@plt+0x120cc>
   235e8:	ldr	r0, [fp, #-16]
   235ec:	mvn	r1, #0
   235f0:	udiv	r0, r1, r0
   235f4:	ldr	r1, [fp, #-12]
   235f8:	cmp	r0, r1
   235fc:	bcs	23614 <__assert_fail@plt+0x120cc>
   23600:	ldr	r0, [fp, #-12]
   23604:	ldr	r1, [fp, #-16]
   23608:	mul	r0, r0, r1
   2360c:	str	r0, [fp, #-20]	; 0xffffffec
   23610:	b	23e50 <__assert_fail@plt+0x12908>
   23614:	ldr	r0, [fp, #-12]
   23618:	ldr	r1, [fp, #-16]
   2361c:	mul	r0, r0, r1
   23620:	str	r0, [fp, #-20]	; 0xffffffec
   23624:	b	23e68 <__assert_fail@plt+0x12920>
   23628:	b	2362c <__assert_fail@plt+0x120e4>
   2362c:	b	237f0 <__assert_fail@plt+0x122a8>
   23630:	ldr	r0, [fp, #-16]
   23634:	cmp	r0, #0
   23638:	bcs	23738 <__assert_fail@plt+0x121f0>
   2363c:	ldr	r0, [fp, #-12]
   23640:	cmp	r0, #0
   23644:	bcs	236cc <__assert_fail@plt+0x12184>
   23648:	b	23668 <__assert_fail@plt+0x12120>
   2364c:	ldr	r0, [pc, #2096]	; 23e84 <__assert_fail@plt+0x1293c>
   23650:	ldr	r1, [fp, #-12]
   23654:	ldr	r2, [fp, #-16]
   23658:	udiv	r0, r0, r2
   2365c:	cmp	r1, r0
   23660:	bcc	237c8 <__assert_fail@plt+0x12280>
   23664:	b	237dc <__assert_fail@plt+0x12294>
   23668:	b	2367c <__assert_fail@plt+0x12134>
   2366c:	ldr	r0, [fp, #-16]
   23670:	cmp	r0, #1
   23674:	bcc	2368c <__assert_fail@plt+0x12144>
   23678:	b	23698 <__assert_fail@plt+0x12150>
   2367c:	ldr	r0, [fp, #-16]
   23680:	movw	r1, #0
   23684:	cmp	r1, r0
   23688:	bcs	23698 <__assert_fail@plt+0x12150>
   2368c:	movw	r0, #0
   23690:	str	r0, [fp, #-48]	; 0xffffffd0
   23694:	b	236b0 <__assert_fail@plt+0x12168>
   23698:	ldr	r0, [pc, #2020]	; 23e84 <__assert_fail@plt+0x1293c>
   2369c:	ldr	r1, [fp, #-16]
   236a0:	movw	r2, #0
   236a4:	sub	r1, r2, r1
   236a8:	udiv	r0, r0, r1
   236ac:	str	r0, [fp, #-48]	; 0xffffffd0
   236b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   236b4:	ldr	r1, [fp, #-12]
   236b8:	mvn	r2, #0
   236bc:	sub	r1, r2, r1
   236c0:	cmp	r0, r1
   236c4:	bls	237c8 <__assert_fail@plt+0x12280>
   236c8:	b	237dc <__assert_fail@plt+0x12294>
   236cc:	ldr	r0, [fp, #-16]
   236d0:	cmn	r0, #1
   236d4:	bne	2371c <__assert_fail@plt+0x121d4>
   236d8:	b	236f4 <__assert_fail@plt+0x121ac>
   236dc:	ldr	r0, [fp, #-12]
   236e0:	add	r0, r0, #-2147483648	; 0x80000000
   236e4:	movw	r1, #0
   236e8:	cmp	r1, r0
   236ec:	bcc	237c8 <__assert_fail@plt+0x12280>
   236f0:	b	237dc <__assert_fail@plt+0x12294>
   236f4:	ldr	r0, [fp, #-12]
   236f8:	movw	r1, #0
   236fc:	cmp	r1, r0
   23700:	bcs	237dc <__assert_fail@plt+0x12294>
   23704:	ldr	r0, [pc, #1912]	; 23e84 <__assert_fail@plt+0x1293c>
   23708:	ldr	r1, [fp, #-12]
   2370c:	sub	r1, r1, #1
   23710:	cmp	r0, r1
   23714:	bcc	237c8 <__assert_fail@plt+0x12280>
   23718:	b	237dc <__assert_fail@plt+0x12294>
   2371c:	ldr	r0, [pc, #1892]	; 23e88 <__assert_fail@plt+0x12940>
   23720:	ldr	r1, [fp, #-16]
   23724:	udiv	r0, r0, r1
   23728:	ldr	r1, [fp, #-12]
   2372c:	cmp	r0, r1
   23730:	bcc	237c8 <__assert_fail@plt+0x12280>
   23734:	b	237dc <__assert_fail@plt+0x12294>
   23738:	ldr	r0, [fp, #-16]
   2373c:	cmp	r0, #0
   23740:	bne	23748 <__assert_fail@plt+0x12200>
   23744:	b	237dc <__assert_fail@plt+0x12294>
   23748:	ldr	r0, [fp, #-12]
   2374c:	cmp	r0, #0
   23750:	bcs	237b0 <__assert_fail@plt+0x12268>
   23754:	ldr	r0, [fp, #-12]
   23758:	cmn	r0, #1
   2375c:	bne	23794 <__assert_fail@plt+0x1224c>
   23760:	b	2377c <__assert_fail@plt+0x12234>
   23764:	ldr	r0, [fp, #-16]
   23768:	add	r0, r0, #-2147483648	; 0x80000000
   2376c:	movw	r1, #0
   23770:	cmp	r1, r0
   23774:	bcc	237c8 <__assert_fail@plt+0x12280>
   23778:	b	237dc <__assert_fail@plt+0x12294>
   2377c:	ldr	r0, [pc, #1792]	; 23e84 <__assert_fail@plt+0x1293c>
   23780:	ldr	r1, [fp, #-16]
   23784:	sub	r1, r1, #1
   23788:	cmp	r0, r1
   2378c:	bcc	237c8 <__assert_fail@plt+0x12280>
   23790:	b	237dc <__assert_fail@plt+0x12294>
   23794:	ldr	r0, [pc, #1772]	; 23e88 <__assert_fail@plt+0x12940>
   23798:	ldr	r1, [fp, #-12]
   2379c:	udiv	r0, r0, r1
   237a0:	ldr	r1, [fp, #-16]
   237a4:	cmp	r0, r1
   237a8:	bcc	237c8 <__assert_fail@plt+0x12280>
   237ac:	b	237dc <__assert_fail@plt+0x12294>
   237b0:	ldr	r0, [pc, #1740]	; 23e84 <__assert_fail@plt+0x1293c>
   237b4:	ldr	r1, [fp, #-16]
   237b8:	udiv	r0, r0, r1
   237bc:	ldr	r1, [fp, #-12]
   237c0:	cmp	r0, r1
   237c4:	bcs	237dc <__assert_fail@plt+0x12294>
   237c8:	ldr	r0, [fp, #-12]
   237cc:	ldr	r1, [fp, #-16]
   237d0:	mul	r0, r0, r1
   237d4:	str	r0, [fp, #-20]	; 0xffffffec
   237d8:	b	23e50 <__assert_fail@plt+0x12908>
   237dc:	ldr	r0, [fp, #-12]
   237e0:	ldr	r1, [fp, #-16]
   237e4:	mul	r0, r0, r1
   237e8:	str	r0, [fp, #-20]	; 0xffffffec
   237ec:	b	23e68 <__assert_fail@plt+0x12920>
   237f0:	ldr	r0, [fp, #-16]
   237f4:	cmp	r0, #0
   237f8:	bcs	23904 <__assert_fail@plt+0x123bc>
   237fc:	ldr	r0, [fp, #-12]
   23800:	cmp	r0, #0
   23804:	bcs	2388c <__assert_fail@plt+0x12344>
   23808:	b	23828 <__assert_fail@plt+0x122e0>
   2380c:	ldr	r0, [fp, #-12]
   23810:	ldr	r1, [fp, #-16]
   23814:	mvn	r2, #0
   23818:	udiv	r1, r2, r1
   2381c:	cmp	r0, r1
   23820:	bcc	239a0 <__assert_fail@plt+0x12458>
   23824:	b	239b4 <__assert_fail@plt+0x1246c>
   23828:	b	2383c <__assert_fail@plt+0x122f4>
   2382c:	ldr	r0, [fp, #-16]
   23830:	cmp	r0, #1
   23834:	bcc	2384c <__assert_fail@plt+0x12304>
   23838:	b	23858 <__assert_fail@plt+0x12310>
   2383c:	ldr	r0, [fp, #-16]
   23840:	movw	r1, #0
   23844:	cmp	r1, r0
   23848:	bcs	23858 <__assert_fail@plt+0x12310>
   2384c:	movw	r0, #1
   23850:	str	r0, [fp, #-52]	; 0xffffffcc
   23854:	b	23870 <__assert_fail@plt+0x12328>
   23858:	ldr	r0, [fp, #-16]
   2385c:	movw	r1, #0
   23860:	sub	r0, r1, r0
   23864:	mvn	r1, #0
   23868:	udiv	r0, r1, r0
   2386c:	str	r0, [fp, #-52]	; 0xffffffcc
   23870:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23874:	ldr	r1, [fp, #-12]
   23878:	mvn	r2, #0
   2387c:	sub	r1, r2, r1
   23880:	cmp	r0, r1
   23884:	bls	239a0 <__assert_fail@plt+0x12458>
   23888:	b	239b4 <__assert_fail@plt+0x1246c>
   2388c:	b	23894 <__assert_fail@plt+0x1234c>
   23890:	b	23898 <__assert_fail@plt+0x12350>
   23894:	b	238e8 <__assert_fail@plt+0x123a0>
   23898:	ldr	r0, [fp, #-16]
   2389c:	cmn	r0, #1
   238a0:	bne	238e8 <__assert_fail@plt+0x123a0>
   238a4:	b	238c0 <__assert_fail@plt+0x12378>
   238a8:	ldr	r0, [fp, #-12]
   238ac:	add	r0, r0, #0
   238b0:	movw	r1, #0
   238b4:	cmp	r1, r0
   238b8:	bcc	239a0 <__assert_fail@plt+0x12458>
   238bc:	b	239b4 <__assert_fail@plt+0x1246c>
   238c0:	ldr	r0, [fp, #-12]
   238c4:	movw	r1, #0
   238c8:	cmp	r1, r0
   238cc:	bcs	239b4 <__assert_fail@plt+0x1246c>
   238d0:	ldr	r0, [fp, #-12]
   238d4:	sub	r0, r0, #1
   238d8:	mvn	r1, #0
   238dc:	cmp	r1, r0
   238e0:	bcc	239a0 <__assert_fail@plt+0x12458>
   238e4:	b	239b4 <__assert_fail@plt+0x1246c>
   238e8:	ldr	r0, [fp, #-16]
   238ec:	movw	r1, #0
   238f0:	udiv	r0, r1, r0
   238f4:	ldr	r1, [fp, #-12]
   238f8:	cmp	r0, r1
   238fc:	bcc	239a0 <__assert_fail@plt+0x12458>
   23900:	b	239b4 <__assert_fail@plt+0x1246c>
   23904:	ldr	r0, [fp, #-16]
   23908:	cmp	r0, #0
   2390c:	bne	23914 <__assert_fail@plt+0x123cc>
   23910:	b	239b4 <__assert_fail@plt+0x1246c>
   23914:	ldr	r0, [fp, #-12]
   23918:	cmp	r0, #0
   2391c:	bcs	23988 <__assert_fail@plt+0x12440>
   23920:	b	23928 <__assert_fail@plt+0x123e0>
   23924:	b	2392c <__assert_fail@plt+0x123e4>
   23928:	b	2396c <__assert_fail@plt+0x12424>
   2392c:	ldr	r0, [fp, #-12]
   23930:	cmn	r0, #1
   23934:	bne	2396c <__assert_fail@plt+0x12424>
   23938:	b	23954 <__assert_fail@plt+0x1240c>
   2393c:	ldr	r0, [fp, #-16]
   23940:	add	r0, r0, #0
   23944:	movw	r1, #0
   23948:	cmp	r1, r0
   2394c:	bcc	239a0 <__assert_fail@plt+0x12458>
   23950:	b	239b4 <__assert_fail@plt+0x1246c>
   23954:	ldr	r0, [fp, #-16]
   23958:	sub	r0, r0, #1
   2395c:	mvn	r1, #0
   23960:	cmp	r1, r0
   23964:	bcc	239a0 <__assert_fail@plt+0x12458>
   23968:	b	239b4 <__assert_fail@plt+0x1246c>
   2396c:	ldr	r0, [fp, #-12]
   23970:	movw	r1, #0
   23974:	udiv	r0, r1, r0
   23978:	ldr	r1, [fp, #-16]
   2397c:	cmp	r0, r1
   23980:	bcc	239a0 <__assert_fail@plt+0x12458>
   23984:	b	239b4 <__assert_fail@plt+0x1246c>
   23988:	ldr	r0, [fp, #-16]
   2398c:	mvn	r1, #0
   23990:	udiv	r0, r1, r0
   23994:	ldr	r1, [fp, #-12]
   23998:	cmp	r0, r1
   2399c:	bcs	239b4 <__assert_fail@plt+0x1246c>
   239a0:	ldr	r0, [fp, #-12]
   239a4:	ldr	r1, [fp, #-16]
   239a8:	mul	r0, r0, r1
   239ac:	str	r0, [fp, #-20]	; 0xffffffec
   239b0:	b	23e50 <__assert_fail@plt+0x12908>
   239b4:	ldr	r0, [fp, #-12]
   239b8:	ldr	r1, [fp, #-16]
   239bc:	mul	r0, r0, r1
   239c0:	str	r0, [fp, #-20]	; 0xffffffec
   239c4:	b	23e68 <__assert_fail@plt+0x12920>
   239c8:	b	23c1c <__assert_fail@plt+0x126d4>
   239cc:	ldr	r0, [fp, #-16]
   239d0:	cmp	r0, #0
   239d4:	bcs	23b34 <__assert_fail@plt+0x125ec>
   239d8:	ldr	r0, [fp, #-12]
   239dc:	cmp	r0, #0
   239e0:	bcs	23ab0 <__assert_fail@plt+0x12568>
   239e4:	b	239e8 <__assert_fail@plt+0x124a0>
   239e8:	ldr	r0, [fp, #-12]
   239ec:	ldr	r2, [fp, #-16]
   239f0:	mvn	r1, #0
   239f4:	mvn	r3, #-2147483648	; 0x80000000
   239f8:	mov	ip, #0
   239fc:	str	r0, [fp, #-56]	; 0xffffffc8
   23a00:	mov	r0, r1
   23a04:	mov	r1, r3
   23a08:	mov	r3, ip
   23a0c:	bl	247c4 <__assert_fail@plt+0x1327c>
   23a10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23a14:	subs	r0, r2, r0
   23a18:	rscs	r1, r1, #0
   23a1c:	str	r0, [fp, #-60]	; 0xffffffc4
   23a20:	str	r1, [fp, #-64]	; 0xffffffc0
   23a24:	blt	23bf4 <__assert_fail@plt+0x126ac>
   23a28:	b	23c08 <__assert_fail@plt+0x126c0>
   23a2c:	b	23a40 <__assert_fail@plt+0x124f8>
   23a30:	ldr	r0, [fp, #-16]
   23a34:	cmp	r0, #1
   23a38:	bcc	23a50 <__assert_fail@plt+0x12508>
   23a3c:	b	23a64 <__assert_fail@plt+0x1251c>
   23a40:	ldr	r0, [fp, #-16]
   23a44:	movw	r1, #0
   23a48:	cmp	r1, r0
   23a4c:	bcs	23a64 <__assert_fail@plt+0x1251c>
   23a50:	mov	r0, #0
   23a54:	mvn	r1, #0
   23a58:	str	r1, [fp, #-68]	; 0xffffffbc
   23a5c:	str	r0, [fp, #-72]	; 0xffffffb8
   23a60:	b	23a88 <__assert_fail@plt+0x12540>
   23a64:	ldr	r0, [fp, #-16]
   23a68:	rsb	r2, r0, #0
   23a6c:	mvn	r0, #0
   23a70:	mvn	r1, #-2147483648	; 0x80000000
   23a74:	mov	r3, #0
   23a78:	bl	247c4 <__assert_fail@plt+0x1327c>
   23a7c:	str	r0, [fp, #-68]	; 0xffffffbc
   23a80:	str	r1, [fp, #-72]	; 0xffffffb8
   23a84:	b	23a88 <__assert_fail@plt+0x12540>
   23a88:	ldr	r0, [fp, #-72]	; 0xffffffb8
   23a8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   23a90:	ldr	r2, [fp, #-12]
   23a94:	mvn	r2, r2
   23a98:	subs	r1, r2, r1
   23a9c:	rscs	r0, r0, #0
   23aa0:	str	r1, [fp, #-76]	; 0xffffffb4
   23aa4:	str	r0, [fp, #-80]	; 0xffffffb0
   23aa8:	bge	23bf4 <__assert_fail@plt+0x126ac>
   23aac:	b	23c08 <__assert_fail@plt+0x126c0>
   23ab0:	ldr	r0, [fp, #-16]
   23ab4:	cmn	r0, #1
   23ab8:	bne	23b00 <__assert_fail@plt+0x125b8>
   23abc:	b	23ae0 <__assert_fail@plt+0x12598>
   23ac0:	ldr	r0, [fp, #-12]
   23ac4:	rsbs	r0, r0, #0
   23ac8:	mov	r1, #0
   23acc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23ad0:	str	r0, [fp, #-84]	; 0xffffffac
   23ad4:	str	r1, [sp, #88]	; 0x58
   23ad8:	blt	23bf4 <__assert_fail@plt+0x126ac>
   23adc:	b	23c08 <__assert_fail@plt+0x126c0>
   23ae0:	ldr	r0, [fp, #-12]
   23ae4:	movw	r1, #0
   23ae8:	cmp	r1, r0
   23aec:	bcs	23c08 <__assert_fail@plt+0x126c0>
   23af0:	mov	r0, #0
   23af4:	cmp	r0, #0
   23af8:	bne	23bf4 <__assert_fail@plt+0x126ac>
   23afc:	b	23c08 <__assert_fail@plt+0x126c0>
   23b00:	ldr	r2, [fp, #-16]
   23b04:	mov	r1, #-2147483648	; 0x80000000
   23b08:	mov	r0, #0
   23b0c:	str	r0, [sp, #84]	; 0x54
   23b10:	ldr	r3, [sp, #84]	; 0x54
   23b14:	bl	246f0 <__assert_fail@plt+0x131a8>
   23b18:	ldr	r2, [fp, #-12]
   23b1c:	subs	r0, r0, r2
   23b20:	sbcs	r1, r1, #0
   23b24:	str	r0, [sp, #80]	; 0x50
   23b28:	str	r1, [sp, #76]	; 0x4c
   23b2c:	blt	23bf4 <__assert_fail@plt+0x126ac>
   23b30:	b	23c08 <__assert_fail@plt+0x126c0>
   23b34:	ldr	r0, [fp, #-16]
   23b38:	cmp	r0, #0
   23b3c:	bne	23b44 <__assert_fail@plt+0x125fc>
   23b40:	b	23c08 <__assert_fail@plt+0x126c0>
   23b44:	ldr	r0, [fp, #-12]
   23b48:	cmp	r0, #0
   23b4c:	bcs	23bc4 <__assert_fail@plt+0x1267c>
   23b50:	ldr	r0, [fp, #-12]
   23b54:	cmn	r0, #1
   23b58:	bne	23b90 <__assert_fail@plt+0x12648>
   23b5c:	b	23b80 <__assert_fail@plt+0x12638>
   23b60:	ldr	r0, [fp, #-16]
   23b64:	rsbs	r0, r0, #0
   23b68:	mov	r1, #0
   23b6c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23b70:	str	r0, [sp, #72]	; 0x48
   23b74:	str	r1, [sp, #68]	; 0x44
   23b78:	blt	23bf4 <__assert_fail@plt+0x126ac>
   23b7c:	b	23c08 <__assert_fail@plt+0x126c0>
   23b80:	mov	r0, #0
   23b84:	cmp	r0, #0
   23b88:	bne	23bf4 <__assert_fail@plt+0x126ac>
   23b8c:	b	23c08 <__assert_fail@plt+0x126c0>
   23b90:	ldr	r2, [fp, #-12]
   23b94:	mov	r1, #-2147483648	; 0x80000000
   23b98:	mov	r0, #0
   23b9c:	str	r0, [sp, #64]	; 0x40
   23ba0:	ldr	r3, [sp, #64]	; 0x40
   23ba4:	bl	246f0 <__assert_fail@plt+0x131a8>
   23ba8:	ldr	r2, [fp, #-16]
   23bac:	subs	r0, r0, r2
   23bb0:	sbcs	r1, r1, #0
   23bb4:	str	r0, [sp, #60]	; 0x3c
   23bb8:	str	r1, [sp, #56]	; 0x38
   23bbc:	blt	23bf4 <__assert_fail@plt+0x126ac>
   23bc0:	b	23c08 <__assert_fail@plt+0x126c0>
   23bc4:	ldr	r2, [fp, #-16]
   23bc8:	mvn	r0, #0
   23bcc:	mvn	r1, #-2147483648	; 0x80000000
   23bd0:	mov	r3, #0
   23bd4:	bl	247c4 <__assert_fail@plt+0x1327c>
   23bd8:	ldr	r2, [fp, #-12]
   23bdc:	subs	r0, r0, r2
   23be0:	sbcs	r1, r1, #0
   23be4:	str	r0, [sp, #52]	; 0x34
   23be8:	str	r1, [sp, #48]	; 0x30
   23bec:	bge	23c08 <__assert_fail@plt+0x126c0>
   23bf0:	b	23bf4 <__assert_fail@plt+0x126ac>
   23bf4:	ldr	r0, [fp, #-12]
   23bf8:	ldr	r1, [fp, #-16]
   23bfc:	mul	r0, r0, r1
   23c00:	str	r0, [fp, #-20]	; 0xffffffec
   23c04:	b	23e50 <__assert_fail@plt+0x12908>
   23c08:	ldr	r0, [fp, #-12]
   23c0c:	ldr	r1, [fp, #-16]
   23c10:	mul	r0, r0, r1
   23c14:	str	r0, [fp, #-20]	; 0xffffffec
   23c18:	b	23e68 <__assert_fail@plt+0x12920>
   23c1c:	ldr	r0, [fp, #-16]
   23c20:	cmp	r0, #0
   23c24:	bcs	23d70 <__assert_fail@plt+0x12828>
   23c28:	ldr	r0, [fp, #-12]
   23c2c:	cmp	r0, #0
   23c30:	bcs	23cf8 <__assert_fail@plt+0x127b0>
   23c34:	b	23c70 <__assert_fail@plt+0x12728>
   23c38:	ldr	r0, [fp, #-12]
   23c3c:	ldr	r2, [fp, #-16]
   23c40:	mvn	r1, #0
   23c44:	mov	r3, #0
   23c48:	str	r0, [sp, #44]	; 0x2c
   23c4c:	mov	r0, r1
   23c50:	bl	247c4 <__assert_fail@plt+0x1327c>
   23c54:	ldr	r2, [sp, #44]	; 0x2c
   23c58:	subs	r0, r2, r0
   23c5c:	rscs	r1, r1, #0
   23c60:	str	r0, [sp, #40]	; 0x28
   23c64:	str	r1, [sp, #36]	; 0x24
   23c68:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23c6c:	b	23e3c <__assert_fail@plt+0x128f4>
   23c70:	b	23c84 <__assert_fail@plt+0x1273c>
   23c74:	ldr	r0, [fp, #-16]
   23c78:	cmp	r0, #1
   23c7c:	bcc	23c94 <__assert_fail@plt+0x1274c>
   23c80:	b	23ca8 <__assert_fail@plt+0x12760>
   23c84:	ldr	r0, [fp, #-16]
   23c88:	movw	r1, #0
   23c8c:	cmp	r1, r0
   23c90:	bcs	23ca8 <__assert_fail@plt+0x12760>
   23c94:	mov	r0, #1
   23c98:	mvn	r1, #0
   23c9c:	str	r1, [sp, #32]
   23ca0:	str	r0, [sp, #28]
   23ca4:	b	23cd0 <__assert_fail@plt+0x12788>
   23ca8:	ldr	r0, [fp, #-16]
   23cac:	rsb	r2, r0, #0
   23cb0:	mvn	r0, #0
   23cb4:	mov	r3, #0
   23cb8:	str	r0, [sp, #24]
   23cbc:	ldr	r1, [sp, #24]
   23cc0:	bl	247c4 <__assert_fail@plt+0x1327c>
   23cc4:	str	r0, [sp, #32]
   23cc8:	str	r1, [sp, #28]
   23ccc:	b	23cd0 <__assert_fail@plt+0x12788>
   23cd0:	ldr	r0, [sp, #28]
   23cd4:	ldr	r1, [sp, #32]
   23cd8:	ldr	r2, [fp, #-12]
   23cdc:	mvn	r2, r2
   23ce0:	subs	r1, r2, r1
   23ce4:	rscs	r0, r0, #0
   23ce8:	str	r1, [sp, #20]
   23cec:	str	r0, [sp, #16]
   23cf0:	bcs	23e28 <__assert_fail@plt+0x128e0>
   23cf4:	b	23e3c <__assert_fail@plt+0x128f4>
   23cf8:	b	23d00 <__assert_fail@plt+0x127b8>
   23cfc:	b	23d04 <__assert_fail@plt+0x127bc>
   23d00:	b	23d54 <__assert_fail@plt+0x1280c>
   23d04:	ldr	r0, [fp, #-16]
   23d08:	cmn	r0, #1
   23d0c:	bne	23d54 <__assert_fail@plt+0x1280c>
   23d10:	b	23d2c <__assert_fail@plt+0x127e4>
   23d14:	ldr	r0, [fp, #-12]
   23d18:	add	r0, r0, #0
   23d1c:	movw	r1, #0
   23d20:	cmp	r1, r0
   23d24:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23d28:	b	23e3c <__assert_fail@plt+0x128f4>
   23d2c:	ldr	r0, [fp, #-12]
   23d30:	movw	r1, #0
   23d34:	cmp	r1, r0
   23d38:	bcs	23e3c <__assert_fail@plt+0x128f4>
   23d3c:	ldr	r0, [fp, #-12]
   23d40:	sub	r0, r0, #1
   23d44:	mvn	r1, #0
   23d48:	cmp	r1, r0
   23d4c:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23d50:	b	23e3c <__assert_fail@plt+0x128f4>
   23d54:	ldr	r0, [fp, #-16]
   23d58:	movw	r1, #0
   23d5c:	udiv	r0, r1, r0
   23d60:	ldr	r1, [fp, #-12]
   23d64:	cmp	r0, r1
   23d68:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23d6c:	b	23e3c <__assert_fail@plt+0x128f4>
   23d70:	ldr	r0, [fp, #-16]
   23d74:	cmp	r0, #0
   23d78:	bne	23d80 <__assert_fail@plt+0x12838>
   23d7c:	b	23e3c <__assert_fail@plt+0x128f4>
   23d80:	ldr	r0, [fp, #-12]
   23d84:	cmp	r0, #0
   23d88:	bcs	23df4 <__assert_fail@plt+0x128ac>
   23d8c:	b	23d94 <__assert_fail@plt+0x1284c>
   23d90:	b	23d98 <__assert_fail@plt+0x12850>
   23d94:	b	23dd8 <__assert_fail@plt+0x12890>
   23d98:	ldr	r0, [fp, #-12]
   23d9c:	cmn	r0, #1
   23da0:	bne	23dd8 <__assert_fail@plt+0x12890>
   23da4:	b	23dc0 <__assert_fail@plt+0x12878>
   23da8:	ldr	r0, [fp, #-16]
   23dac:	add	r0, r0, #0
   23db0:	movw	r1, #0
   23db4:	cmp	r1, r0
   23db8:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23dbc:	b	23e3c <__assert_fail@plt+0x128f4>
   23dc0:	ldr	r0, [fp, #-16]
   23dc4:	sub	r0, r0, #1
   23dc8:	mvn	r1, #0
   23dcc:	cmp	r1, r0
   23dd0:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23dd4:	b	23e3c <__assert_fail@plt+0x128f4>
   23dd8:	ldr	r0, [fp, #-12]
   23ddc:	movw	r1, #0
   23de0:	udiv	r0, r1, r0
   23de4:	ldr	r1, [fp, #-16]
   23de8:	cmp	r0, r1
   23dec:	bcc	23e28 <__assert_fail@plt+0x128e0>
   23df0:	b	23e3c <__assert_fail@plt+0x128f4>
   23df4:	ldr	r2, [fp, #-16]
   23df8:	mvn	r0, #0
   23dfc:	mov	r3, #0
   23e00:	str	r0, [sp, #12]
   23e04:	ldr	r1, [sp, #12]
   23e08:	bl	247c4 <__assert_fail@plt+0x1327c>
   23e0c:	ldr	r2, [fp, #-12]
   23e10:	subs	r0, r0, r2
   23e14:	sbcs	r1, r1, #0
   23e18:	str	r0, [sp, #8]
   23e1c:	str	r1, [sp, #4]
   23e20:	bcs	23e3c <__assert_fail@plt+0x128f4>
   23e24:	b	23e28 <__assert_fail@plt+0x128e0>
   23e28:	ldr	r0, [fp, #-12]
   23e2c:	ldr	r1, [fp, #-16]
   23e30:	mul	r0, r0, r1
   23e34:	str	r0, [fp, #-20]	; 0xffffffec
   23e38:	b	23e50 <__assert_fail@plt+0x12908>
   23e3c:	ldr	r0, [fp, #-12]
   23e40:	ldr	r1, [fp, #-16]
   23e44:	mul	r0, r0, r1
   23e48:	str	r0, [fp, #-20]	; 0xffffffec
   23e4c:	b	23e68 <__assert_fail@plt+0x12920>
   23e50:	bl	11404 <__errno_location@plt>
   23e54:	movw	lr, #12
   23e58:	str	lr, [r0]
   23e5c:	movw	r0, #0
   23e60:	str	r0, [fp, #-4]
   23e64:	b	23e78 <__assert_fail@plt+0x12930>
   23e68:	ldr	r0, [fp, #-8]
   23e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e70:	bl	21a18 <__assert_fail@plt+0x104d0>
   23e74:	str	r0, [fp, #-4]
   23e78:	ldr	r0, [fp, #-4]
   23e7c:	mov	sp, fp
   23e80:	pop	{fp, pc}
   23e84:	svcvc	0x00ffffff
   23e88:	andhi	r0, r0, r0
   23e8c:			; <UNDEFINED> instruction: 0xffff8000
   23e90:	push	{fp, lr}
   23e94:	mov	fp, sp
   23e98:	sub	sp, sp, #8
   23e9c:	str	r0, [sp, #4]
   23ea0:	ldr	r0, [sp, #4]
   23ea4:	movw	r1, #0
   23ea8:	movw	r2, #3
   23eac:	bl	22200 <__assert_fail@plt+0x10cb8>
   23eb0:	mov	sp, fp
   23eb4:	pop	{fp, pc}
   23eb8:	sub	sp, sp, #12
   23ebc:	str	r0, [sp, #4]
   23ec0:	ldr	r0, [sp, #4]
   23ec4:	sub	r1, r0, #48	; 0x30
   23ec8:	cmp	r1, #10
   23ecc:	str	r0, [sp]
   23ed0:	bcc	23f00 <__assert_fail@plt+0x129b8>
   23ed4:	b	23ed8 <__assert_fail@plt+0x12990>
   23ed8:	ldr	r0, [sp]
   23edc:	sub	r1, r0, #65	; 0x41
   23ee0:	cmp	r1, #26
   23ee4:	bcc	23f00 <__assert_fail@plt+0x129b8>
   23ee8:	b	23eec <__assert_fail@plt+0x129a4>
   23eec:	ldr	r0, [sp]
   23ef0:	sub	r1, r0, #97	; 0x61
   23ef4:	cmp	r1, #25
   23ef8:	bhi	23f10 <__assert_fail@plt+0x129c8>
   23efc:	b	23f00 <__assert_fail@plt+0x129b8>
   23f00:	movw	r0, #1
   23f04:	and	r0, r0, #1
   23f08:	strb	r0, [sp, #11]
   23f0c:	b	23f1c <__assert_fail@plt+0x129d4>
   23f10:	movw	r0, #0
   23f14:	and	r0, r0, #1
   23f18:	strb	r0, [sp, #11]
   23f1c:	ldrb	r0, [sp, #11]
   23f20:	and	r0, r0, #1
   23f24:	add	sp, sp, #12
   23f28:	bx	lr
   23f2c:	sub	sp, sp, #12
   23f30:	str	r0, [sp, #4]
   23f34:	ldr	r0, [sp, #4]
   23f38:	sub	r1, r0, #65	; 0x41
   23f3c:	cmp	r1, #26
   23f40:	str	r0, [sp]
   23f44:	bcc	23f60 <__assert_fail@plt+0x12a18>
   23f48:	b	23f4c <__assert_fail@plt+0x12a04>
   23f4c:	ldr	r0, [sp]
   23f50:	sub	r1, r0, #97	; 0x61
   23f54:	cmp	r1, #25
   23f58:	bhi	23f70 <__assert_fail@plt+0x12a28>
   23f5c:	b	23f60 <__assert_fail@plt+0x12a18>
   23f60:	movw	r0, #1
   23f64:	and	r0, r0, #1
   23f68:	strb	r0, [sp, #11]
   23f6c:	b	23f7c <__assert_fail@plt+0x12a34>
   23f70:	movw	r0, #0
   23f74:	and	r0, r0, #1
   23f78:	strb	r0, [sp, #11]
   23f7c:	ldrb	r0, [sp, #11]
   23f80:	and	r0, r0, #1
   23f84:	add	sp, sp, #12
   23f88:	bx	lr
   23f8c:	sub	sp, sp, #8
   23f90:	str	r0, [sp]
   23f94:	ldr	r0, [sp]
   23f98:	cmp	r0, #127	; 0x7f
   23f9c:	bhi	23fb4 <__assert_fail@plt+0x12a6c>
   23fa0:	b	23fa4 <__assert_fail@plt+0x12a5c>
   23fa4:	movw	r0, #1
   23fa8:	and	r0, r0, #1
   23fac:	strb	r0, [sp, #7]
   23fb0:	b	23fc0 <__assert_fail@plt+0x12a78>
   23fb4:	movw	r0, #0
   23fb8:	and	r0, r0, #1
   23fbc:	strb	r0, [sp, #7]
   23fc0:	ldrb	r0, [sp, #7]
   23fc4:	and	r0, r0, #1
   23fc8:	add	sp, sp, #8
   23fcc:	bx	lr
   23fd0:	sub	sp, sp, #8
   23fd4:	str	r0, [sp, #4]
   23fd8:	ldr	r0, [sp, #4]
   23fdc:	cmp	r0, #32
   23fe0:	movw	r0, #1
   23fe4:	str	r0, [sp]
   23fe8:	beq	24000 <__assert_fail@plt+0x12ab8>
   23fec:	ldr	r0, [sp, #4]
   23ff0:	cmp	r0, #9
   23ff4:	movw	r0, #0
   23ff8:	moveq	r0, #1
   23ffc:	str	r0, [sp]
   24000:	ldr	r0, [sp]
   24004:	and	r0, r0, #1
   24008:	add	sp, sp, #8
   2400c:	bx	lr
   24010:	sub	sp, sp, #12
   24014:	str	r0, [sp, #4]
   24018:	ldr	r0, [sp, #4]
   2401c:	cmp	r0, #32
   24020:	str	r0, [sp]
   24024:	bcc	2403c <__assert_fail@plt+0x12af4>
   24028:	b	2402c <__assert_fail@plt+0x12ae4>
   2402c:	ldr	r0, [sp]
   24030:	cmp	r0, #127	; 0x7f
   24034:	bne	2404c <__assert_fail@plt+0x12b04>
   24038:	b	2403c <__assert_fail@plt+0x12af4>
   2403c:	movw	r0, #1
   24040:	and	r0, r0, #1
   24044:	strb	r0, [sp, #11]
   24048:	b	24058 <__assert_fail@plt+0x12b10>
   2404c:	movw	r0, #0
   24050:	and	r0, r0, #1
   24054:	strb	r0, [sp, #11]
   24058:	ldrb	r0, [sp, #11]
   2405c:	and	r0, r0, #1
   24060:	add	sp, sp, #12
   24064:	bx	lr
   24068:	sub	sp, sp, #8
   2406c:	str	r0, [sp]
   24070:	ldr	r0, [sp]
   24074:	sub	r0, r0, #48	; 0x30
   24078:	cmp	r0, #9
   2407c:	bhi	24094 <__assert_fail@plt+0x12b4c>
   24080:	b	24084 <__assert_fail@plt+0x12b3c>
   24084:	movw	r0, #1
   24088:	and	r0, r0, #1
   2408c:	strb	r0, [sp, #7]
   24090:	b	240a0 <__assert_fail@plt+0x12b58>
   24094:	movw	r0, #0
   24098:	and	r0, r0, #1
   2409c:	strb	r0, [sp, #7]
   240a0:	ldrb	r0, [sp, #7]
   240a4:	and	r0, r0, #1
   240a8:	add	sp, sp, #8
   240ac:	bx	lr
   240b0:	sub	sp, sp, #8
   240b4:	str	r0, [sp]
   240b8:	ldr	r0, [sp]
   240bc:	sub	r0, r0, #33	; 0x21
   240c0:	cmp	r0, #93	; 0x5d
   240c4:	bhi	240dc <__assert_fail@plt+0x12b94>
   240c8:	b	240cc <__assert_fail@plt+0x12b84>
   240cc:	movw	r0, #1
   240d0:	and	r0, r0, #1
   240d4:	strb	r0, [sp, #7]
   240d8:	b	240e8 <__assert_fail@plt+0x12ba0>
   240dc:	movw	r0, #0
   240e0:	and	r0, r0, #1
   240e4:	strb	r0, [sp, #7]
   240e8:	ldrb	r0, [sp, #7]
   240ec:	and	r0, r0, #1
   240f0:	add	sp, sp, #8
   240f4:	bx	lr
   240f8:	sub	sp, sp, #8
   240fc:	str	r0, [sp]
   24100:	ldr	r0, [sp]
   24104:	sub	r0, r0, #97	; 0x61
   24108:	cmp	r0, #25
   2410c:	bhi	24124 <__assert_fail@plt+0x12bdc>
   24110:	b	24114 <__assert_fail@plt+0x12bcc>
   24114:	movw	r0, #1
   24118:	and	r0, r0, #1
   2411c:	strb	r0, [sp, #7]
   24120:	b	24130 <__assert_fail@plt+0x12be8>
   24124:	movw	r0, #0
   24128:	and	r0, r0, #1
   2412c:	strb	r0, [sp, #7]
   24130:	ldrb	r0, [sp, #7]
   24134:	and	r0, r0, #1
   24138:	add	sp, sp, #8
   2413c:	bx	lr
   24140:	sub	sp, sp, #8
   24144:	str	r0, [sp]
   24148:	ldr	r0, [sp]
   2414c:	sub	r0, r0, #32
   24150:	cmp	r0, #94	; 0x5e
   24154:	bhi	2416c <__assert_fail@plt+0x12c24>
   24158:	b	2415c <__assert_fail@plt+0x12c14>
   2415c:	movw	r0, #1
   24160:	and	r0, r0, #1
   24164:	strb	r0, [sp, #7]
   24168:	b	24178 <__assert_fail@plt+0x12c30>
   2416c:	movw	r0, #0
   24170:	and	r0, r0, #1
   24174:	strb	r0, [sp, #7]
   24178:	ldrb	r0, [sp, #7]
   2417c:	and	r0, r0, #1
   24180:	add	sp, sp, #8
   24184:	bx	lr
   24188:	sub	sp, sp, #12
   2418c:	str	r0, [sp, #4]
   24190:	ldr	r0, [sp, #4]
   24194:	sub	r0, r0, #33	; 0x21
   24198:	cmp	r0, #93	; 0x5d
   2419c:	str	r0, [sp]
   241a0:	bhi	2433c <__assert_fail@plt+0x12df4>
   241a4:	add	r0, pc, #8
   241a8:	ldr	r1, [sp]
   241ac:	ldr	r0, [r0, r1, lsl #2]
   241b0:	mov	pc, r0
   241b4:	andeq	r4, r2, ip, lsr #6
   241b8:	andeq	r4, r2, ip, lsr #6
   241bc:	andeq	r4, r2, ip, lsr #6
   241c0:	andeq	r4, r2, ip, lsr #6
   241c4:	andeq	r4, r2, ip, lsr #6
   241c8:	andeq	r4, r2, ip, lsr #6
   241cc:	andeq	r4, r2, ip, lsr #6
   241d0:	andeq	r4, r2, ip, lsr #6
   241d4:	andeq	r4, r2, ip, lsr #6
   241d8:	andeq	r4, r2, ip, lsr #6
   241dc:	andeq	r4, r2, ip, lsr #6
   241e0:	andeq	r4, r2, ip, lsr #6
   241e4:	andeq	r4, r2, ip, lsr #6
   241e8:	andeq	r4, r2, ip, lsr #6
   241ec:	andeq	r4, r2, ip, lsr #6
   241f0:	andeq	r4, r2, ip, lsr r3
   241f4:	andeq	r4, r2, ip, lsr r3
   241f8:	andeq	r4, r2, ip, lsr r3
   241fc:	andeq	r4, r2, ip, lsr r3
   24200:	andeq	r4, r2, ip, lsr r3
   24204:	andeq	r4, r2, ip, lsr r3
   24208:	andeq	r4, r2, ip, lsr r3
   2420c:	andeq	r4, r2, ip, lsr r3
   24210:	andeq	r4, r2, ip, lsr r3
   24214:	andeq	r4, r2, ip, lsr r3
   24218:	andeq	r4, r2, ip, lsr #6
   2421c:	andeq	r4, r2, ip, lsr #6
   24220:	andeq	r4, r2, ip, lsr #6
   24224:	andeq	r4, r2, ip, lsr #6
   24228:	andeq	r4, r2, ip, lsr #6
   2422c:	andeq	r4, r2, ip, lsr #6
   24230:	andeq	r4, r2, ip, lsr #6
   24234:	andeq	r4, r2, ip, lsr r3
   24238:	andeq	r4, r2, ip, lsr r3
   2423c:	andeq	r4, r2, ip, lsr r3
   24240:	andeq	r4, r2, ip, lsr r3
   24244:	andeq	r4, r2, ip, lsr r3
   24248:	andeq	r4, r2, ip, lsr r3
   2424c:	andeq	r4, r2, ip, lsr r3
   24250:	andeq	r4, r2, ip, lsr r3
   24254:	andeq	r4, r2, ip, lsr r3
   24258:	andeq	r4, r2, ip, lsr r3
   2425c:	andeq	r4, r2, ip, lsr r3
   24260:	andeq	r4, r2, ip, lsr r3
   24264:	andeq	r4, r2, ip, lsr r3
   24268:	andeq	r4, r2, ip, lsr r3
   2426c:	andeq	r4, r2, ip, lsr r3
   24270:	andeq	r4, r2, ip, lsr r3
   24274:	andeq	r4, r2, ip, lsr r3
   24278:	andeq	r4, r2, ip, lsr r3
   2427c:	andeq	r4, r2, ip, lsr r3
   24280:	andeq	r4, r2, ip, lsr r3
   24284:	andeq	r4, r2, ip, lsr r3
   24288:	andeq	r4, r2, ip, lsr r3
   2428c:	andeq	r4, r2, ip, lsr r3
   24290:	andeq	r4, r2, ip, lsr r3
   24294:	andeq	r4, r2, ip, lsr r3
   24298:	andeq	r4, r2, ip, lsr r3
   2429c:	andeq	r4, r2, ip, lsr #6
   242a0:	andeq	r4, r2, ip, lsr #6
   242a4:	andeq	r4, r2, ip, lsr #6
   242a8:	andeq	r4, r2, ip, lsr #6
   242ac:	andeq	r4, r2, ip, lsr #6
   242b0:	andeq	r4, r2, ip, lsr #6
   242b4:	andeq	r4, r2, ip, lsr r3
   242b8:	andeq	r4, r2, ip, lsr r3
   242bc:	andeq	r4, r2, ip, lsr r3
   242c0:	andeq	r4, r2, ip, lsr r3
   242c4:	andeq	r4, r2, ip, lsr r3
   242c8:	andeq	r4, r2, ip, lsr r3
   242cc:	andeq	r4, r2, ip, lsr r3
   242d0:	andeq	r4, r2, ip, lsr r3
   242d4:	andeq	r4, r2, ip, lsr r3
   242d8:	andeq	r4, r2, ip, lsr r3
   242dc:	andeq	r4, r2, ip, lsr r3
   242e0:	andeq	r4, r2, ip, lsr r3
   242e4:	andeq	r4, r2, ip, lsr r3
   242e8:	andeq	r4, r2, ip, lsr r3
   242ec:	andeq	r4, r2, ip, lsr r3
   242f0:	andeq	r4, r2, ip, lsr r3
   242f4:	andeq	r4, r2, ip, lsr r3
   242f8:	andeq	r4, r2, ip, lsr r3
   242fc:	andeq	r4, r2, ip, lsr r3
   24300:	andeq	r4, r2, ip, lsr r3
   24304:	andeq	r4, r2, ip, lsr r3
   24308:	andeq	r4, r2, ip, lsr r3
   2430c:	andeq	r4, r2, ip, lsr r3
   24310:	andeq	r4, r2, ip, lsr r3
   24314:	andeq	r4, r2, ip, lsr r3
   24318:	andeq	r4, r2, ip, lsr r3
   2431c:	andeq	r4, r2, ip, lsr #6
   24320:	andeq	r4, r2, ip, lsr #6
   24324:	andeq	r4, r2, ip, lsr #6
   24328:	andeq	r4, r2, ip, lsr #6
   2432c:	movw	r0, #1
   24330:	and	r0, r0, #1
   24334:	strb	r0, [sp, #11]
   24338:	b	24348 <__assert_fail@plt+0x12e00>
   2433c:	movw	r0, #0
   24340:	and	r0, r0, #1
   24344:	strb	r0, [sp, #11]
   24348:	ldrb	r0, [sp, #11]
   2434c:	and	r0, r0, #1
   24350:	add	sp, sp, #12
   24354:	bx	lr
   24358:	sub	sp, sp, #12
   2435c:	str	r0, [sp, #4]
   24360:	ldr	r0, [sp, #4]
   24364:	sub	r1, r0, #9
   24368:	cmp	r1, #5
   2436c:	str	r0, [sp]
   24370:	bcc	24388 <__assert_fail@plt+0x12e40>
   24374:	b	24378 <__assert_fail@plt+0x12e30>
   24378:	ldr	r0, [sp]
   2437c:	cmp	r0, #32
   24380:	bne	24398 <__assert_fail@plt+0x12e50>
   24384:	b	24388 <__assert_fail@plt+0x12e40>
   24388:	movw	r0, #1
   2438c:	and	r0, r0, #1
   24390:	strb	r0, [sp, #11]
   24394:	b	243a4 <__assert_fail@plt+0x12e5c>
   24398:	movw	r0, #0
   2439c:	and	r0, r0, #1
   243a0:	strb	r0, [sp, #11]
   243a4:	ldrb	r0, [sp, #11]
   243a8:	and	r0, r0, #1
   243ac:	add	sp, sp, #12
   243b0:	bx	lr
   243b4:	sub	sp, sp, #8
   243b8:	str	r0, [sp]
   243bc:	ldr	r0, [sp]
   243c0:	sub	r0, r0, #65	; 0x41
   243c4:	cmp	r0, #25
   243c8:	bhi	243e0 <__assert_fail@plt+0x12e98>
   243cc:	b	243d0 <__assert_fail@plt+0x12e88>
   243d0:	movw	r0, #1
   243d4:	and	r0, r0, #1
   243d8:	strb	r0, [sp, #7]
   243dc:	b	243ec <__assert_fail@plt+0x12ea4>
   243e0:	movw	r0, #0
   243e4:	and	r0, r0, #1
   243e8:	strb	r0, [sp, #7]
   243ec:	ldrb	r0, [sp, #7]
   243f0:	and	r0, r0, #1
   243f4:	add	sp, sp, #8
   243f8:	bx	lr
   243fc:	sub	sp, sp, #12
   24400:	str	r0, [sp, #4]
   24404:	ldr	r0, [sp, #4]
   24408:	sub	r1, r0, #48	; 0x30
   2440c:	cmp	r1, #10
   24410:	str	r0, [sp]
   24414:	bcc	24444 <__assert_fail@plt+0x12efc>
   24418:	b	2441c <__assert_fail@plt+0x12ed4>
   2441c:	ldr	r0, [sp]
   24420:	sub	r1, r0, #65	; 0x41
   24424:	cmp	r1, #6
   24428:	bcc	24444 <__assert_fail@plt+0x12efc>
   2442c:	b	24430 <__assert_fail@plt+0x12ee8>
   24430:	ldr	r0, [sp]
   24434:	sub	r1, r0, #97	; 0x61
   24438:	cmp	r1, #5
   2443c:	bhi	24454 <__assert_fail@plt+0x12f0c>
   24440:	b	24444 <__assert_fail@plt+0x12efc>
   24444:	movw	r0, #1
   24448:	and	r0, r0, #1
   2444c:	strb	r0, [sp, #11]
   24450:	b	24460 <__assert_fail@plt+0x12f18>
   24454:	movw	r0, #0
   24458:	and	r0, r0, #1
   2445c:	strb	r0, [sp, #11]
   24460:	ldrb	r0, [sp, #11]
   24464:	and	r0, r0, #1
   24468:	add	sp, sp, #12
   2446c:	bx	lr
   24470:	sub	sp, sp, #8
   24474:	str	r0, [sp]
   24478:	ldr	r0, [sp]
   2447c:	sub	r0, r0, #65	; 0x41
   24480:	cmp	r0, #25
   24484:	bhi	244a0 <__assert_fail@plt+0x12f58>
   24488:	b	2448c <__assert_fail@plt+0x12f44>
   2448c:	ldr	r0, [sp]
   24490:	sub	r0, r0, #65	; 0x41
   24494:	add	r0, r0, #97	; 0x61
   24498:	str	r0, [sp, #4]
   2449c:	b	244a8 <__assert_fail@plt+0x12f60>
   244a0:	ldr	r0, [sp]
   244a4:	str	r0, [sp, #4]
   244a8:	ldr	r0, [sp, #4]
   244ac:	add	sp, sp, #8
   244b0:	bx	lr
   244b4:	sub	sp, sp, #8
   244b8:	str	r0, [sp]
   244bc:	ldr	r0, [sp]
   244c0:	sub	r0, r0, #97	; 0x61
   244c4:	cmp	r0, #25
   244c8:	bhi	244e4 <__assert_fail@plt+0x12f9c>
   244cc:	b	244d0 <__assert_fail@plt+0x12f88>
   244d0:	ldr	r0, [sp]
   244d4:	sub	r0, r0, #97	; 0x61
   244d8:	add	r0, r0, #65	; 0x41
   244dc:	str	r0, [sp, #4]
   244e0:	b	244ec <__assert_fail@plt+0x12fa4>
   244e4:	ldr	r0, [sp]
   244e8:	str	r0, [sp, #4]
   244ec:	ldr	r0, [sp, #4]
   244f0:	add	sp, sp, #8
   244f4:	bx	lr
   244f8:	push	{r4, r5, fp, lr}
   244fc:	add	fp, sp, #8
   24500:	sub	sp, sp, #272	; 0x110
   24504:	add	r1, sp, #7
   24508:	str	r0, [fp, #-16]
   2450c:	ldr	r0, [fp, #-16]
   24510:	movw	r2, #257	; 0x101
   24514:	bl	24594 <__assert_fail@plt+0x1304c>
   24518:	cmp	r0, #0
   2451c:	beq	24530 <__assert_fail@plt+0x12fe8>
   24520:	movw	r0, #0
   24524:	and	r0, r0, #1
   24528:	strb	r0, [fp, #-9]
   2452c:	b	24584 <__assert_fail@plt+0x1303c>
   24530:	add	r0, sp, #7
   24534:	movw	r1, #24848	; 0x6110
   24538:	movt	r1, #2
   2453c:	bl	11248 <strcmp@plt>
   24540:	cmp	r0, #0
   24544:	movw	r0, #1
   24548:	str	r0, [sp]
   2454c:	beq	24570 <__assert_fail@plt+0x13028>
   24550:	add	r0, sp, #7
   24554:	movw	r1, #24850	; 0x6112
   24558:	movt	r1, #2
   2455c:	bl	11248 <strcmp@plt>
   24560:	cmp	r0, #0
   24564:	movw	r0, #0
   24568:	moveq	r0, #1
   2456c:	str	r0, [sp]
   24570:	ldr	r0, [sp]
   24574:	mvn	r1, #0
   24578:	eor	r0, r0, r1
   2457c:	and	r0, r0, #1
   24580:	strb	r0, [fp, #-9]
   24584:	ldrb	r0, [fp, #-9]
   24588:	and	r0, r0, #1
   2458c:	sub	sp, fp, #8
   24590:	pop	{r4, r5, fp, pc}
   24594:	push	{fp, lr}
   24598:	mov	fp, sp
   2459c:	sub	sp, sp, #16
   245a0:	str	r0, [fp, #-4]
   245a4:	str	r1, [sp, #8]
   245a8:	str	r2, [sp, #4]
   245ac:	ldr	r0, [fp, #-4]
   245b0:	ldr	r1, [sp, #8]
   245b4:	ldr	r2, [sp, #4]
   245b8:	bl	245c4 <__assert_fail@plt+0x1307c>
   245bc:	mov	sp, fp
   245c0:	pop	{fp, pc}
   245c4:	push	{fp, lr}
   245c8:	mov	fp, sp
   245cc:	sub	sp, sp, #24
   245d0:	str	r0, [fp, #-8]
   245d4:	str	r1, [sp, #12]
   245d8:	str	r2, [sp, #8]
   245dc:	ldr	r0, [fp, #-8]
   245e0:	bl	246c4 <__assert_fail@plt+0x1317c>
   245e4:	str	r0, [sp, #4]
   245e8:	ldr	r0, [sp, #4]
   245ec:	movw	r1, #0
   245f0:	cmp	r0, r1
   245f4:	bne	2461c <__assert_fail@plt+0x130d4>
   245f8:	ldr	r0, [sp, #8]
   245fc:	cmp	r0, #0
   24600:	bls	24610 <__assert_fail@plt+0x130c8>
   24604:	ldr	r0, [sp, #12]
   24608:	movw	r1, #0
   2460c:	strb	r1, [r0]
   24610:	movw	r0, #22
   24614:	str	r0, [fp, #-4]
   24618:	b	24698 <__assert_fail@plt+0x13150>
   2461c:	ldr	r0, [sp, #4]
   24620:	bl	113c8 <strlen@plt>
   24624:	str	r0, [sp]
   24628:	ldr	r0, [sp]
   2462c:	ldr	lr, [sp, #8]
   24630:	cmp	r0, lr
   24634:	bcs	24658 <__assert_fail@plt+0x13110>
   24638:	ldr	r0, [sp, #12]
   2463c:	ldr	r1, [sp, #4]
   24640:	ldr	r2, [sp]
   24644:	add	r2, r2, #1
   24648:	bl	1129c <memcpy@plt>
   2464c:	movw	r0, #0
   24650:	str	r0, [fp, #-4]
   24654:	b	24698 <__assert_fail@plt+0x13150>
   24658:	ldr	r0, [sp, #8]
   2465c:	cmp	r0, #0
   24660:	bls	24690 <__assert_fail@plt+0x13148>
   24664:	ldr	r0, [sp, #12]
   24668:	ldr	r1, [sp, #4]
   2466c:	ldr	r2, [sp, #8]
   24670:	sub	r2, r2, #1
   24674:	bl	1129c <memcpy@plt>
   24678:	ldr	r0, [sp, #12]
   2467c:	ldr	r1, [sp, #8]
   24680:	sub	r1, r1, #1
   24684:	add	r0, r0, r1
   24688:	movw	r1, #0
   2468c:	strb	r1, [r0]
   24690:	movw	r0, #34	; 0x22
   24694:	str	r0, [fp, #-4]
   24698:	ldr	r0, [fp, #-4]
   2469c:	mov	sp, fp
   246a0:	pop	{fp, pc}
   246a4:	push	{fp, lr}
   246a8:	mov	fp, sp
   246ac:	sub	sp, sp, #8
   246b0:	str	r0, [sp, #4]
   246b4:	ldr	r0, [sp, #4]
   246b8:	bl	246c4 <__assert_fail@plt+0x1317c>
   246bc:	mov	sp, fp
   246c0:	pop	{fp, pc}
   246c4:	push	{fp, lr}
   246c8:	mov	fp, sp
   246cc:	sub	sp, sp, #8
   246d0:	str	r0, [sp, #4]
   246d4:	ldr	r0, [sp, #4]
   246d8:	movw	r1, #0
   246dc:	bl	11458 <setlocale@plt>
   246e0:	str	r0, [sp]
   246e4:	ldr	r0, [sp]
   246e8:	mov	sp, fp
   246ec:	pop	{fp, pc}
   246f0:	cmp	r3, #0
   246f4:	cmpeq	r2, #0
   246f8:	bne	2471c <__assert_fail@plt+0x131d4>
   246fc:	cmp	r1, #0
   24700:	movlt	r1, #-2147483648	; 0x80000000
   24704:	movlt	r0, #0
   24708:	blt	24718 <__assert_fail@plt+0x131d0>
   2470c:	cmpeq	r0, #0
   24710:	mvnne	r1, #-2147483648	; 0x80000000
   24714:	mvnne	r0, #0
   24718:	b	24800 <__assert_fail@plt+0x132b8>
   2471c:	sub	sp, sp, #8
   24720:	push	{sp, lr}
   24724:	cmp	r1, #0
   24728:	blt	24748 <__assert_fail@plt+0x13200>
   2472c:	cmp	r3, #0
   24730:	blt	2477c <__assert_fail@plt+0x13234>
   24734:	bl	24810 <__assert_fail@plt+0x132c8>
   24738:	ldr	lr, [sp, #4]
   2473c:	add	sp, sp, #8
   24740:	pop	{r2, r3}
   24744:	bx	lr
   24748:	rsbs	r0, r0, #0
   2474c:	sbc	r1, r1, r1, lsl #1
   24750:	cmp	r3, #0
   24754:	blt	247a0 <__assert_fail@plt+0x13258>
   24758:	bl	24810 <__assert_fail@plt+0x132c8>
   2475c:	ldr	lr, [sp, #4]
   24760:	add	sp, sp, #8
   24764:	pop	{r2, r3}
   24768:	rsbs	r0, r0, #0
   2476c:	sbc	r1, r1, r1, lsl #1
   24770:	rsbs	r2, r2, #0
   24774:	sbc	r3, r3, r3, lsl #1
   24778:	bx	lr
   2477c:	rsbs	r2, r2, #0
   24780:	sbc	r3, r3, r3, lsl #1
   24784:	bl	24810 <__assert_fail@plt+0x132c8>
   24788:	ldr	lr, [sp, #4]
   2478c:	add	sp, sp, #8
   24790:	pop	{r2, r3}
   24794:	rsbs	r0, r0, #0
   24798:	sbc	r1, r1, r1, lsl #1
   2479c:	bx	lr
   247a0:	rsbs	r2, r2, #0
   247a4:	sbc	r3, r3, r3, lsl #1
   247a8:	bl	24810 <__assert_fail@plt+0x132c8>
   247ac:	ldr	lr, [sp, #4]
   247b0:	add	sp, sp, #8
   247b4:	pop	{r2, r3}
   247b8:	rsbs	r2, r2, #0
   247bc:	sbc	r3, r3, r3, lsl #1
   247c0:	bx	lr
   247c4:	cmp	r3, #0
   247c8:	cmpeq	r2, #0
   247cc:	bne	247e4 <__assert_fail@plt+0x1329c>
   247d0:	cmp	r1, #0
   247d4:	cmpeq	r0, #0
   247d8:	mvnne	r1, #0
   247dc:	mvnne	r0, #0
   247e0:	b	24800 <__assert_fail@plt+0x132b8>
   247e4:	sub	sp, sp, #8
   247e8:	push	{sp, lr}
   247ec:	bl	24810 <__assert_fail@plt+0x132c8>
   247f0:	ldr	lr, [sp, #4]
   247f4:	add	sp, sp, #8
   247f8:	pop	{r2, r3}
   247fc:	bx	lr
   24800:	push	{r1, lr}
   24804:	mov	r0, #8
   24808:	bl	11230 <raise@plt>
   2480c:	pop	{r1, pc}
   24810:	cmp	r1, r3
   24814:	cmpeq	r0, r2
   24818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2481c:	mov	r4, r0
   24820:	movcc	r0, #0
   24824:	mov	r5, r1
   24828:	ldr	lr, [sp, #36]	; 0x24
   2482c:	movcc	r1, r0
   24830:	bcc	2492c <__assert_fail@plt+0x133e4>
   24834:	cmp	r3, #0
   24838:	clzeq	ip, r2
   2483c:	clzne	ip, r3
   24840:	addeq	ip, ip, #32
   24844:	cmp	r5, #0
   24848:	clzeq	r1, r4
   2484c:	addeq	r1, r1, #32
   24850:	clzne	r1, r5
   24854:	sub	ip, ip, r1
   24858:	sub	sl, ip, #32
   2485c:	lsl	r9, r3, ip
   24860:	rsb	fp, ip, #32
   24864:	orr	r9, r9, r2, lsl sl
   24868:	orr	r9, r9, r2, lsr fp
   2486c:	lsl	r8, r2, ip
   24870:	cmp	r5, r9
   24874:	cmpeq	r4, r8
   24878:	movcc	r0, #0
   2487c:	movcc	r1, r0
   24880:	bcc	2489c <__assert_fail@plt+0x13354>
   24884:	mov	r0, #1
   24888:	subs	r4, r4, r8
   2488c:	lsl	r1, r0, sl
   24890:	orr	r1, r1, r0, lsr fp
   24894:	lsl	r0, r0, ip
   24898:	sbc	r5, r5, r9
   2489c:	cmp	ip, #0
   248a0:	beq	2492c <__assert_fail@plt+0x133e4>
   248a4:	lsr	r6, r8, #1
   248a8:	orr	r6, r6, r9, lsl #31
   248ac:	lsr	r7, r9, #1
   248b0:	mov	r2, ip
   248b4:	b	248d8 <__assert_fail@plt+0x13390>
   248b8:	subs	r3, r4, r6
   248bc:	sbc	r8, r5, r7
   248c0:	adds	r3, r3, r3
   248c4:	adc	r8, r8, r8
   248c8:	adds	r4, r3, #1
   248cc:	adc	r5, r8, #0
   248d0:	subs	r2, r2, #1
   248d4:	beq	248f4 <__assert_fail@plt+0x133ac>
   248d8:	cmp	r5, r7
   248dc:	cmpeq	r4, r6
   248e0:	bcs	248b8 <__assert_fail@plt+0x13370>
   248e4:	adds	r4, r4, r4
   248e8:	adc	r5, r5, r5
   248ec:	subs	r2, r2, #1
   248f0:	bne	248d8 <__assert_fail@plt+0x13390>
   248f4:	lsr	r3, r4, ip
   248f8:	orr	r3, r3, r5, lsl fp
   248fc:	lsr	r2, r5, ip
   24900:	orr	r3, r3, r5, lsr sl
   24904:	adds	r0, r0, r4
   24908:	mov	r4, r3
   2490c:	lsl	r3, r2, ip
   24910:	orr	r3, r3, r4, lsl sl
   24914:	lsl	ip, r4, ip
   24918:	orr	r3, r3, r4, lsr fp
   2491c:	adc	r1, r1, r5
   24920:	subs	r0, r0, ip
   24924:	mov	r5, r2
   24928:	sbc	r1, r1, r3
   2492c:	cmp	lr, #0
   24930:	strdne	r4, [lr]
   24934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24938:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2493c:	mov	r7, r0
   24940:	ldr	r6, [pc, #72]	; 24990 <__assert_fail@plt+0x13448>
   24944:	ldr	r5, [pc, #72]	; 24994 <__assert_fail@plt+0x1344c>
   24948:	add	r6, pc, r6
   2494c:	add	r5, pc, r5
   24950:	sub	r6, r6, r5
   24954:	mov	r8, r1
   24958:	mov	r9, r2
   2495c:	bl	111e0 <fstatfs64@plt-0x20>
   24960:	asrs	r6, r6, #2
   24964:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24968:	mov	r4, #0
   2496c:	add	r4, r4, #1
   24970:	ldr	r3, [r5], #4
   24974:	mov	r2, r9
   24978:	mov	r1, r8
   2497c:	mov	r0, r7
   24980:	blx	r3
   24984:	cmp	r6, r4
   24988:	bne	2496c <__assert_fail@plt+0x13424>
   2498c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24990:			; <UNDEFINED> instruction: 0x000125bc
   24994:			; <UNDEFINED> instruction: 0x000125b4
   24998:	bx	lr
   2499c:	ldr	r3, [pc, #12]	; 249b0 <__assert_fail@plt+0x13468>
   249a0:	mov	r1, #0
   249a4:	add	r3, pc, r3
   249a8:	ldr	r2, [r3]
   249ac:	b	11410 <__cxa_atexit@plt>
   249b0:	andeq	r2, r1, r4, lsl #15
   249b4:	mov	r2, r1
   249b8:	mov	r1, r0
   249bc:	mov	r0, #3
   249c0:	b	114dc <__xstat64@plt>
   249c4:	mov	r2, r1
   249c8:	mov	r1, r0
   249cc:	mov	r0, #3
   249d0:	b	112fc <__fxstat64@plt>
   249d4:	mov	r2, r1
   249d8:	mov	r1, r0
   249dc:	mov	r0, #3
   249e0:	b	11518 <__lxstat64@plt>
   249e4:	push	{lr}		; (str lr, [sp, #-4]!)
   249e8:	sub	sp, sp, #12
   249ec:	str	r3, [sp]
   249f0:	mov	r3, r2
   249f4:	mov	r2, r1
   249f8:	mov	r1, r0
   249fc:	mov	r0, #3
   24a00:	bl	112e4 <__fxstatat64@plt>
   24a04:	add	sp, sp, #12
   24a08:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00024a0c <.fini>:
   24a0c:	push	{r3, lr}
   24a10:	pop	{r3, pc}
