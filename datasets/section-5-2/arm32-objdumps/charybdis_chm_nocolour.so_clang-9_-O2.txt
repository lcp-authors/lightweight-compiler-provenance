
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

0000045c <_init>:
 45c:	push	{r3, lr}
 460:	bl	4b8 <call_weak_fn>
 464:	pop	{r3, pc}

Disassembly of section .plt:

00000468 <.plt>:
 468:	push	{lr}		; (str lr, [sp, #-4]!)
 46c:	ldr	lr, [pc, #4]	; 478 <.plt+0x10>
 470:	add	lr, pc, lr
 474:	ldr	pc, [lr, #8]!
 478:	.word	0x00010b88

0000047c <cflag_add@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2952]!	; 0xb88

00000488 <__cxa_finalize@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2944]!	; 0xb80

00000494 <__gmon_start__@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2936]!	; 0xb78

000004a0 <rb_strlcpy@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2928]!	; 0xb70

000004ac <cflag_orphan@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2920]!	; 0xb68

Disassembly of section .text:

000004b8 <call_weak_fn>:
 4b8:	ldr	r3, [pc, #20]	; 4d4 <call_weak_fn+0x1c>
 4bc:	ldr	r2, [pc, #20]	; 4d8 <call_weak_fn+0x20>
 4c0:	add	r3, pc, r3
 4c4:	ldr	r2, [r3, r2]
 4c8:	cmp	r2, #0
 4cc:	bxeq	lr
 4d0:	b	494 <__gmon_start__@plt>
 4d4:	.word	0x00010b38
 4d8:	.word	0x0000002c

000004dc <deregister_tm_clones>:
 4dc:	ldr	r0, [pc, #44]	; 510 <deregister_tm_clones+0x34>
 4e0:	ldr	r3, [pc, #44]	; 514 <deregister_tm_clones+0x38>
 4e4:	add	r0, pc, r0
 4e8:	add	r3, pc, r3
 4ec:	cmp	r3, r0
 4f0:	ldr	r3, [pc, #32]	; 518 <deregister_tm_clones+0x3c>
 4f4:	add	r3, pc, r3
 4f8:	bxeq	lr
 4fc:	ldr	r2, [pc, #24]	; 51c <deregister_tm_clones+0x40>
 500:	ldr	r3, [r3, r2]
 504:	cmp	r3, #0
 508:	bxeq	lr
 50c:	bx	r3
 510:	.word	0x00010b90
 514:	.word	0x00010b8c
 518:	.word	0x00010b04
 51c:	.word	0x00000024

00000520 <register_tm_clones>:
 520:	ldr	r0, [pc, #56]	; 560 <register_tm_clones+0x40>
 524:	ldr	r3, [pc, #56]	; 564 <register_tm_clones+0x44>
 528:	add	r0, pc, r0
 52c:	add	r3, pc, r3
 530:	sub	r1, r3, r0
 534:	ldr	r3, [pc, #44]	; 568 <register_tm_clones+0x48>
 538:	asr	r1, r1, #2
 53c:	add	r3, pc, r3
 540:	add	r1, r1, r1, lsr #31
 544:	asrs	r1, r1, #1
 548:	bxeq	lr
 54c:	ldr	r2, [pc, #24]	; 56c <register_tm_clones+0x4c>
 550:	ldr	r3, [r3, r2]
 554:	cmp	r3, #0
 558:	bxeq	lr
 55c:	bx	r3
 560:	.word	0x00010b4c
 564:	.word	0x00010b48
 568:	.word	0x00010abc
 56c:	.word	0x00000034

00000570 <__do_global_dtors_aux>:
 570:	ldr	r3, [pc, #76]	; 5c4 <__do_global_dtors_aux+0x54>
 574:	ldr	r2, [pc, #76]	; 5c8 <__do_global_dtors_aux+0x58>
 578:	add	r3, pc, r3
 57c:	add	r2, pc, r2
 580:	ldrb	r3, [r3]
 584:	cmp	r3, #0
 588:	bxne	lr
 58c:	ldr	r3, [pc, #56]	; 5cc <__do_global_dtors_aux+0x5c>
 590:	push	{r4, lr}
 594:	ldr	r3, [r2, r3]
 598:	cmp	r3, #0
 59c:	beq	5ac <__do_global_dtors_aux+0x3c>
 5a0:	ldr	r3, [pc, #40]	; 5d0 <__do_global_dtors_aux+0x60>
 5a4:	ldr	r0, [pc, r3]
 5a8:	bl	488 <__cxa_finalize@plt>
 5ac:	bl	4dc <deregister_tm_clones>
 5b0:	ldr	r3, [pc, #28]	; 5d4 <__do_global_dtors_aux+0x64>
 5b4:	mov	r2, #1
 5b8:	add	r3, pc, r3
 5bc:	strb	r2, [r3]
 5c0:	pop	{r4, pc}
 5c4:	.word	0x00010afc
 5c8:	.word	0x00010a7c
 5cc:	.word	0x00000020
 5d0:	.word	0x00010a8c
 5d4:	.word	0x00010abc

000005d8 <frame_dummy>:
 5d8:	b	520 <register_tm_clones>

000005dc <chm_nocolour_process>:
 5dc:	push	{r4, r5, r6, sl, fp, lr}
 5e0:	add	fp, sp, #16
 5e4:	mov	r4, r0
 5e8:	ldr	r0, [r0, #16]
 5ec:	cmp	r0, #0
 5f0:	popne	{r4, r5, r6, sl, fp, pc}
 5f4:	ldr	r0, [r4, #8]
 5f8:	ldr	r0, [r0, #12]
 5fc:	ldr	r1, [pc, #360]	; 76c <chm_nocolour_process+0x190>
 600:	ldr	r1, [pc, r1]
 604:	tst	r1, r0
 608:	beq	768 <chm_nocolour_process+0x18c>
 60c:	ldr	r1, [r4, #12]
 610:	ldr	r5, [pc, #344]	; 770 <chm_nocolour_process+0x194>
 614:	mov	r2, #512	; 0x200
 618:	add	r5, pc, r5
 61c:	mov	r0, r5
 620:	bl	4a0 <rb_strlcpy@plt>
 624:	ldr	lr, [pc, #328]	; 774 <chm_nocolour_process+0x198>
 628:	mov	r0, #0
 62c:	mov	ip, #32
 630:	mov	r2, r5
 634:	ldr	lr, [pc, lr]
 638:	b	648 <chm_nocolour_process+0x6c>
 63c:	strb	r3, [r2], #1
 640:	mov	r0, r2
 644:	add	r5, r5, #1
 648:	ldrb	r3, [r5]
 64c:	cmp	r3, #32
 650:	bhi	63c <chm_nocolour_process+0x60>
 654:	add	r1, pc, #4
 658:	ldr	r6, [r1, r3, lsl #2]
 65c:	add	pc, r1, r6
 660:	.word	0x000000ec
 664:	.word	0xffffffdc
 668:	.word	0xffffffe4
 66c:	.word	0x00000084
 670:	.word	0xffffffe4
 674:	.word	0xffffffdc
 678:	.word	0xffffffe4
 67c:	.word	0xffffffe4
 680:	.word	0xffffffdc
 684:	.word	0xffffffdc
 688:	.word	0xffffffdc
 68c:	.word	0xffffffdc
 690:	.word	0xffffffdc
 694:	.word	0xffffffdc
 698:	.word	0xffffffdc
 69c:	.word	0xffffffe4
 6a0:	.word	0xffffffdc
 6a4:	.word	0xffffffdc
 6a8:	.word	0xffffffdc
 6ac:	.word	0xffffffdc
 6b0:	.word	0xffffffdc
 6b4:	.word	0xffffffdc
 6b8:	.word	0xffffffe4
 6bc:	.word	0xffffffe4
 6c0:	.word	0xffffffdc
 6c4:	.word	0xffffffdc
 6c8:	.word	0xffffffdc
 6cc:	.word	0xffffffe4
 6d0:	.word	0xffffffdc
 6d4:	.word	0xffffffe4
 6d8:	.word	0xffffffdc
 6dc:	.word	0xffffffe4
 6e0:	.word	0x000000e0
 6e4:	mov	r3, r5
 6e8:	ldrb	r1, [r3, #1]!
 6ec:	ldrb	r1, [lr, r1, lsl #2]
 6f0:	tst	r1, #16
 6f4:	beq	644 <chm_nocolour_process+0x68>
 6f8:	ldrb	r1, [r5, #2]!
 6fc:	ldrb	r1, [lr, r1, lsl #2]
 700:	tst	r1, #16
 704:	moveq	r5, r3
 708:	ldrb	r1, [r5, #1]
 70c:	cmp	r1, #44	; 0x2c
 710:	bne	644 <chm_nocolour_process+0x68>
 714:	mov	r3, r5
 718:	ldrb	r1, [r3, #2]!
 71c:	ldrb	r1, [lr, r1, lsl #2]
 720:	tst	r1, #16
 724:	beq	644 <chm_nocolour_process+0x68>
 728:	ldrb	r1, [r5, #3]!
 72c:	ldrb	r1, [lr, r1, lsl #2]
 730:	tst	r1, #16
 734:	moveq	r5, r3
 738:	add	r5, r5, #1
 73c:	b	648 <chm_nocolour_process+0x6c>
 740:	strb	ip, [r2], #1
 744:	add	r5, r5, #1
 748:	b	648 <chm_nocolour_process+0x6c>
 74c:	mov	r1, #0
 750:	cmp	r0, #0
 754:	strb	r1, [r2]
 758:	strbne	r1, [r0]
 75c:	ldr	r0, [pc, #20]	; 778 <chm_nocolour_process+0x19c>
 760:	add	r0, pc, r0
 764:	str	r0, [r4, #12]
 768:	pop	{r4, r5, r6, sl, fp, pc}
 76c:	.word	0x00010a78
 770:	.word	0x00010a64
 774:	.word	0x000109f4
 778:	.word	0x0001091c

0000077c <_modinit>:
 77c:	push	{fp, lr}
 780:	mov	fp, sp
 784:	ldr	r1, [pc, #40]	; 7b4 <_modinit+0x38>
 788:	mov	r0, #99	; 0x63
 78c:	ldr	r1, [pc, r1]
 790:	bl	47c <cflag_add@plt>
 794:	ldr	r1, [pc, #28]	; 7b8 <_modinit+0x3c>
 798:	cmp	r0, #0
 79c:	add	r1, pc, r1
 7a0:	str	r0, [r1]
 7a4:	mov	r1, #0
 7a8:	mvneq	r1, #0
 7ac:	mov	r0, r1
 7b0:	pop	{fp, pc}
 7b4:	.word	0x00010894
 7b8:	.word	0x000108dc

000007bc <_moddeinit>:
 7bc:	mov	r0, #99	; 0x63
 7c0:	b	4ac <cflag_orphan@plt>

Disassembly of section .fini:

000007c4 <_fini>:
 7c4:	push	{r3, lr}
 7c8:	pop	{r3, pc}
