
../repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010c8c <.init>:
   10c8c:	push	{r3, lr}
   10c90:	bl	114b4 <_start@@Base+0x3c>
   10c94:	pop	{r3, pc}

Disassembly of section .plt:

00010c98 <coda_match_filefilter@plt-0x14>:
   10c98:	push	{lr}		; (str lr, [sp, #-4]!)
   10c9c:	ldr	lr, [pc, #4]	; 10ca8 <coda_match_filefilter@plt-0x4>
   10ca0:	add	lr, pc, lr
   10ca4:	ldr	pc, [lr, #8]!
   10ca8:	andeq	r2, r1, r8, asr r3

00010cac <coda_match_filefilter@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #856]!	; 0x358

00010cb8 <coda_expression_eval_integer@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #848]!	; 0x350

00010cc4 <strcmp@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #840]!	; 0x348

00010cd0 <printf@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #832]!	; 0x340

00010cdc <coda_set_error@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #824]!	; 0x338

00010ce8 <coda_open@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #816]!	; 0x330

00010cf4 <free@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #808]!	; 0x328

00010d00 <coda_set_definition_path_conditional@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #800]!	; 0x320

00010d0c <coda_set_definition_path@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #792]!	; 0x318

00010d18 <fwrite@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #784]!	; 0x310

00010d24 <coda_expression_eval_bool@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #776]!	; 0x308

00010d30 <coda_cursor_set_product@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #73728	; 0x12000
   10d38:	ldr	pc, [ip, #768]!	; 0x300

00010d3c <coda_done@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #73728	; 0x12000
   10d44:	ldr	pc, [ip, #760]!	; 0x2f8

00010d48 <puts@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #73728	; 0x12000
   10d50:	ldr	pc, [ip, #752]!	; 0x2f0

00010d54 <__libc_start_main@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #73728	; 0x12000
   10d5c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d60 <coda_expression_delete@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #73728	; 0x12000
   10d68:	ldr	pc, [ip, #736]!	; 0x2e0

00010d6c <__gmon_start__@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #73728	; 0x12000
   10d74:	ldr	pc, [ip, #728]!	; 0x2d8

00010d78 <__ctype_b_loc@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #73728	; 0x12000
   10d80:	ldr	pc, [ip, #720]!	; 0x2d0

00010d84 <exit@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #73728	; 0x12000
   10d8c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d90 <strlen@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #73728	; 0x12000
   10d98:	ldr	pc, [ip, #704]!	; 0x2c0

00010d9c <fprintf@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #73728	; 0x12000
   10da4:	ldr	pc, [ip, #696]!	; 0x2b8

00010da8 <coda_init@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #73728	; 0x12000
   10db0:	ldr	pc, [ip, #688]!	; 0x2b0

00010db4 <coda_set_option_perform_conversions@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #73728	; 0x12000
   10dbc:	ldr	pc, [ip, #680]!	; 0x2a8

00010dc0 <coda_expression_eval_string@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #73728	; 0x12000
   10dc8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dcc <putchar@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #664]!	; 0x298

00010dd8 <coda_expression_get_type@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #656]!	; 0x290

00010de4 <coda_close@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #648]!	; 0x288

00010df0 <coda_expression_is_constant@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #640]!	; 0x280

00010dfc <coda_expression_eval_float@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #632]!	; 0x278

00010e08 <coda_expression_eval_node@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #624]!	; 0x270

00010e14 <coda_errno_to_string@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #616]!	; 0x268

00010e20 <coda_expression_get_type_name@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #608]!	; 0x260

00010e2c <coda_expression_from_string@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #600]!	; 0x258

00010e38 <coda_get_libcoda_version@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #592]!	; 0x250

00010e44 <coda_get_errno@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #584]!	; 0x248

00010e50 <abort@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #576]!	; 0x240

00010e5c <coda_str64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #568]!	; 0x238

00010e68 <__assert_fail@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #560]!	; 0x230

Disassembly of section .text:

00010e74 <main@@Base>:
   10e74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e78:	cmp	r0, #1
   10e7c:	strd	r6, [sp, #8]
   10e80:	strd	r8, [sp, #16]
   10e84:	ldr	r9, [pc, #1388]	; 113f8 <main@@Base+0x584>
   10e88:	strd	sl, [sp, #24]
   10e8c:	str	lr, [sp, #32]
   10e90:	sub	sp, sp, #28
   10e94:	add	r9, pc, r9
   10e98:	beq	10ec0 <main@@Base+0x4c>
   10e9c:	mov	r6, r1
   10ea0:	ldr	r1, [pc, #1364]	; 113fc <main@@Base+0x588>
   10ea4:	mov	r5, r0
   10ea8:	ldr	r4, [r6, #4]
   10eac:	add	r1, pc, r1
   10eb0:	mov	r0, r4
   10eb4:	bl	10cc4 <strcmp@plt>
   10eb8:	cmp	r0, #0
   10ebc:	bne	10ecc <main@@Base+0x58>
   10ec0:	bl	11568 <_start@@Base+0xf0>
   10ec4:	mov	r0, #0
   10ec8:	bl	10d84 <exit@plt>
   10ecc:	ldr	r1, [pc, #1324]	; 11400 <main@@Base+0x58c>
   10ed0:	mov	r0, r4
   10ed4:	add	r1, pc, r1
   10ed8:	bl	10cc4 <strcmp@plt>
   10edc:	cmp	r0, #0
   10ee0:	beq	10ec0 <main@@Base+0x4c>
   10ee4:	ldr	r1, [pc, #1304]	; 11404 <main@@Base+0x590>
   10ee8:	mov	r0, r4
   10eec:	add	r1, pc, r1
   10ef0:	bl	10cc4 <strcmp@plt>
   10ef4:	cmp	r0, #0
   10ef8:	beq	11048 <main@@Base+0x1d4>
   10efc:	ldr	r1, [pc, #1284]	; 11408 <main@@Base+0x594>
   10f00:	mov	r0, r4
   10f04:	add	r1, pc, r1
   10f08:	bl	10cc4 <strcmp@plt>
   10f0c:	cmp	r0, #0
   10f10:	beq	11048 <main@@Base+0x1d4>
   10f14:	cmp	r5, #2
   10f18:	ble	11078 <main@@Base+0x204>
   10f1c:	ldr	r1, [pc, #1256]	; 1140c <main@@Base+0x598>
   10f20:	mov	r0, r4
   10f24:	add	r1, pc, r1
   10f28:	bl	10cc4 <strcmp@plt>
   10f2c:	cmp	r0, #0
   10f30:	beq	110d4 <main@@Base+0x260>
   10f34:	ldr	r2, [pc, #1236]	; 11410 <main@@Base+0x59c>
   10f38:	mov	r1, #0
   10f3c:	ldr	r0, [r6]
   10f40:	add	r2, pc, r2
   10f44:	bl	10d00 <coda_set_definition_path_conditional@plt>
   10f48:	cmp	r0, #0
   10f4c:	bne	112c8 <main@@Base+0x454>
   10f50:	mov	fp, #1
   10f54:	ldr	r2, [pc, #1208]	; 11414 <main@@Base+0x5a0>
   10f58:	mov	r3, #1
   10f5c:	mov	sl, #0
   10f60:	ldr	r8, [pc, #1200]	; 11418 <main@@Base+0x5a4>
   10f64:	str	r3, [sp, #12]
   10f68:	add	r2, pc, r2
   10f6c:	add	r3, r2, #8
   10f70:	add	r8, pc, r8
   10f74:	str	r3, [sp, #20]
   10f78:	b	11024 <main@@Base+0x1b0>
   10f7c:	ldr	r1, [pc, #1176]	; 1141c <main@@Base+0x5a8>
   10f80:	mov	r0, r4
   10f84:	add	r1, pc, r1
   10f88:	bl	10cc4 <strcmp@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	11040 <main@@Base+0x1cc>
   10f94:	ldr	r1, [pc, #1156]	; 11420 <main@@Base+0x5ac>
   10f98:	mov	r0, r4
   10f9c:	add	r1, pc, r1
   10fa0:	bl	10cc4 <strcmp@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	110cc <main@@Base+0x258>
   10fac:	ldr	r1, [pc, #1136]	; 11424 <main@@Base+0x5b0>
   10fb0:	mov	r0, r4
   10fb4:	add	r1, pc, r1
   10fb8:	bl	10cc4 <strcmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	beq	110cc <main@@Base+0x258>
   10fc4:	ldr	r1, [pc, #1116]	; 11428 <main@@Base+0x5b4>
   10fc8:	mov	r0, r4
   10fcc:	add	r1, pc, r1
   10fd0:	bl	10cc4 <strcmp@plt>
   10fd4:	cmp	r0, #0
   10fd8:	bne	110e4 <main@@Base+0x270>
   10fdc:	add	r2, fp, #1
   10fe0:	cmp	r2, r5
   10fe4:	str	r2, [sp, #16]
   10fe8:	bge	110e4 <main@@Base+0x270>
   10fec:	add	r7, r6, r7
   10ff0:	ldr	r0, [r7, #4]
   10ff4:	ldrb	r1, [r0]
   10ff8:	cmp	r1, #45	; 0x2d
   10ffc:	beq	110e4 <main@@Base+0x270>
   11000:	ldr	r1, [sp, #20]
   11004:	bl	10e2c <coda_expression_from_string@plt>
   11008:	cmp	r0, #0
   1100c:	ldr	r2, [sp, #16]
   11010:	bne	112fc <main@@Base+0x488>
   11014:	mov	fp, r2
   11018:	add	fp, fp, #1
   1101c:	cmp	r5, fp
   11020:	ble	110a0 <main@@Base+0x22c>
   11024:	ldr	r4, [r6, fp, lsl #2]
   11028:	mov	r1, r8
   1102c:	lsl	r7, fp, #2
   11030:	mov	r0, r4
   11034:	bl	10cc4 <strcmp@plt>
   11038:	cmp	r0, #0
   1103c:	bne	10f7c <main@@Base+0x108>
   11040:	mov	sl, #1
   11044:	b	11018 <main@@Base+0x1a4>
   11048:	bl	10e38 <coda_get_libcoda_version@plt>
   1104c:	mov	r1, r0
   11050:	ldr	r0, [pc, #980]	; 1142c <main@@Base+0x5b8>
   11054:	add	r0, pc, r0
   11058:	bl	10cd0 <printf@plt>
   1105c:	ldr	r0, [pc, #972]	; 11430 <main@@Base+0x5bc>
   11060:	add	r0, pc, r0
   11064:	bl	10d48 <puts@plt>
   11068:	mov	r0, #10
   1106c:	bl	10dcc <putchar@plt>
   11070:	mov	r0, #0
   11074:	bl	10d84 <exit@plt>
   11078:	ldr	r2, [pc, #948]	; 11434 <main@@Base+0x5c0>
   1107c:	mov	r1, #0
   11080:	ldr	r0, [r6]
   11084:	add	r2, pc, r2
   11088:	bl	10d00 <coda_set_definition_path_conditional@plt>
   1108c:	cmp	r0, #0
   11090:	moveq	fp, #1
   11094:	bne	112c8 <main@@Base+0x454>
   11098:	cmp	fp, r5
   1109c:	blt	10f54 <main@@Base+0xe0>
   110a0:	ldr	r0, [pc, #912]	; 11438 <main@@Base+0x5c4>
   110a4:	mov	r2, #25
   110a8:	mov	r1, #1
   110ac:	ldr	r3, [pc, #904]	; 1143c <main@@Base+0x5c8>
   110b0:	add	r0, pc, r0
   110b4:	ldr	r3, [r9, r3]
   110b8:	ldr	r3, [r3]
   110bc:	bl	10d18 <fwrite@plt>
   110c0:	bl	11568 <_start@@Base+0xf0>
   110c4:	mov	r0, #1
   110c8:	bl	10d84 <exit@plt>
   110cc:	str	r0, [sp, #12]
   110d0:	b	11018 <main@@Base+0x1a4>
   110d4:	ldr	r0, [r6, #8]
   110d8:	mov	fp, #3
   110dc:	bl	10d0c <coda_set_definition_path@plt>
   110e0:	b	11098 <main@@Base+0x224>
   110e4:	ldrb	r2, [r4]
   110e8:	cmp	r2, #45	; 0x2d
   110ec:	beq	112b0 <main@@Base+0x43c>
   110f0:	ldr	r7, [pc, #840]	; 11440 <main@@Base+0x5cc>
   110f4:	mov	r0, r4
   110f8:	add	r7, pc, r7
   110fc:	add	r1, r7, #4
   11100:	bl	10e2c <coda_expression_from_string@plt>
   11104:	cmp	r0, #0
   11108:	bne	1127c <main@@Base+0x408>
   1110c:	mov	r1, r7
   11110:	ldr	r0, [r7, #4]
   11114:	add	fp, fp, #1
   11118:	bl	10dd8 <coda_expression_get_type@plt>
   1111c:	cmp	r0, #0
   11120:	bne	1135c <main@@Base+0x4e8>
   11124:	ldr	r0, [r7]
   11128:	sub	r3, r0, #4
   1112c:	cmp	r3, #1
   11130:	bls	11330 <main@@Base+0x4bc>
   11134:	cmp	sl, #0
   11138:	bne	111f0 <main@@Base+0x37c>
   1113c:	cmp	r5, fp
   11140:	bgt	111b0 <main@@Base+0x33c>
   11144:	ldr	r3, [r7, #8]
   11148:	cmp	r3, #0
   1114c:	bne	11264 <main@@Base+0x3f0>
   11150:	ldr	r0, [r7, #4]
   11154:	bl	10df0 <coda_expression_is_constant@plt>
   11158:	cmp	r0, #0
   1115c:	beq	1123c <main@@Base+0x3c8>
   11160:	mov	r0, sl
   11164:	bl	117ac <_start@@Base+0x334>
   11168:	cmp	r0, #0
   1116c:	bne	11208 <main@@Base+0x394>
   11170:	ldr	r4, [pc, #716]	; 11444 <main@@Base+0x5d0>
   11174:	add	r4, pc, r4
   11178:	ldr	r0, [r4, #4]
   1117c:	bl	10d60 <coda_expression_delete@plt>
   11180:	ldr	r0, [r4, #8]
   11184:	cmp	r0, #0
   11188:	beq	11190 <main@@Base+0x31c>
   1118c:	bl	10d60 <coda_expression_delete@plt>
   11190:	mov	r0, #0
   11194:	add	sp, sp, #28
   11198:	ldrd	r4, [sp]
   1119c:	ldrd	r6, [sp, #8]
   111a0:	ldrd	r8, [sp, #16]
   111a4:	ldrd	sl, [sp, #24]
   111a8:	add	sp, sp, #32
   111ac:	pop	{pc}		; (ldr pc, [sp], #4)
   111b0:	bl	10da8 <coda_init@plt>
   111b4:	cmp	r0, #0
   111b8:	bne	113c4 <main@@Base+0x550>
   111bc:	ldr	r0, [sp, #12]
   111c0:	bl	10db4 <coda_set_option_perform_conversions@plt>
   111c4:	ldr	r3, [pc, #636]	; 11448 <main@@Base+0x5d4>
   111c8:	add	r2, r6, fp, lsl #2
   111cc:	sub	r1, r5, fp
   111d0:	mov	r0, sl
   111d4:	ldr	r3, [r9, r3]
   111d8:	str	sl, [sp]
   111dc:	bl	10cac <coda_match_filefilter@plt>
   111e0:	cmp	r0, #0
   111e4:	bne	11390 <main@@Base+0x51c>
   111e8:	bl	10d3c <coda_done@plt>
   111ec:	b	11170 <main@@Base+0x2fc>
   111f0:	ldr	r0, [r7, #4]
   111f4:	bl	10d60 <coda_expression_delete@plt>
   111f8:	ldr	r0, [r7, #8]
   111fc:	cmp	r0, #0
   11200:	bne	1118c <main@@Base+0x318>
   11204:	b	11190 <main@@Base+0x31c>
   11208:	ldr	r3, [pc, #556]	; 1143c <main@@Base+0x5c8>
   1120c:	ldr	r3, [r9, r3]
   11210:	ldr	r4, [r3]
   11214:	bl	10e44 <coda_get_errno@plt>
   11218:	ldr	r0, [r0]
   1121c:	bl	10e14 <coda_errno_to_string@plt>
   11220:	ldr	r1, [pc, #548]	; 1144c <main@@Base+0x5d8>
   11224:	mov	r2, r0
   11228:	mov	r0, r4
   1122c:	add	r1, pc, r1
   11230:	bl	10d9c <fprintf@plt>
   11234:	mov	r0, #1
   11238:	bl	10d84 <exit@plt>
   1123c:	ldr	r0, [pc, #524]	; 11450 <main@@Base+0x5dc>
   11240:	mov	r2, #111	; 0x6f
   11244:	mov	r1, #1
   11248:	ldr	r3, [pc, #492]	; 1143c <main@@Base+0x5c8>
   1124c:	add	r0, pc, r0
   11250:	ldr	r3, [r9, r3]
   11254:	ldr	r3, [r3]
   11258:	bl	10d18 <fwrite@plt>
   1125c:	mov	r0, #1
   11260:	bl	10d84 <exit@plt>
   11264:	ldr	r0, [pc, #488]	; 11454 <main@@Base+0x5e0>
   11268:	mov	r2, #96	; 0x60
   1126c:	mov	r1, #1
   11270:	ldr	r3, [pc, #452]	; 1143c <main@@Base+0x5c8>
   11274:	add	r0, pc, r0
   11278:	b	11250 <main@@Base+0x3dc>
   1127c:	ldr	r3, [pc, #440]	; 1143c <main@@Base+0x5c8>
   11280:	ldr	r3, [r9, r3]
   11284:	ldr	r4, [r3]
   11288:	bl	10e44 <coda_get_errno@plt>
   1128c:	ldr	r0, [r0]
   11290:	bl	10e14 <coda_errno_to_string@plt>
   11294:	ldr	r1, [pc, #444]	; 11458 <main@@Base+0x5e4>
   11298:	mov	r2, r0
   1129c:	mov	r0, r4
   112a0:	add	r1, pc, r1
   112a4:	bl	10d9c <fprintf@plt>
   112a8:	mov	r0, #1
   112ac:	bl	10d84 <exit@plt>
   112b0:	ldr	r0, [pc, #420]	; 1145c <main@@Base+0x5e8>
   112b4:	mov	r2, #25
   112b8:	mov	r1, #1
   112bc:	ldr	r3, [pc, #376]	; 1143c <main@@Base+0x5c8>
   112c0:	add	r0, pc, r0
   112c4:	b	110b4 <main@@Base+0x240>
   112c8:	ldr	r3, [pc, #364]	; 1143c <main@@Base+0x5c8>
   112cc:	ldr	r3, [r9, r3]
   112d0:	ldr	r4, [r3]
   112d4:	bl	10e44 <coda_get_errno@plt>
   112d8:	ldr	r0, [r0]
   112dc:	bl	10e14 <coda_errno_to_string@plt>
   112e0:	ldr	r1, [pc, #376]	; 11460 <main@@Base+0x5ec>
   112e4:	mov	r2, r0
   112e8:	mov	r0, r4
   112ec:	add	r1, pc, r1
   112f0:	bl	10d9c <fprintf@plt>
   112f4:	mov	r0, #1
   112f8:	bl	10d84 <exit@plt>
   112fc:	ldr	r3, [pc, #312]	; 1143c <main@@Base+0x5c8>
   11300:	ldr	r3, [r9, r3]
   11304:	ldr	r4, [r3]
   11308:	bl	10e44 <coda_get_errno@plt>
   1130c:	ldr	r0, [r0]
   11310:	bl	10e14 <coda_errno_to_string@plt>
   11314:	ldr	r1, [pc, #328]	; 11464 <main@@Base+0x5f0>
   11318:	mov	r2, r0
   1131c:	mov	r0, r4
   11320:	add	r1, pc, r1
   11324:	bl	10d9c <fprintf@plt>
   11328:	mov	r0, #1
   1132c:	bl	10d84 <exit@plt>
   11330:	ldr	r3, [pc, #260]	; 1143c <main@@Base+0x5c8>
   11334:	ldr	r3, [r9, r3]
   11338:	ldr	r4, [r3]
   1133c:	bl	10e20 <coda_expression_get_type_name@plt>
   11340:	ldr	r1, [pc, #288]	; 11468 <main@@Base+0x5f4>
   11344:	mov	r2, r0
   11348:	mov	r0, r4
   1134c:	add	r1, pc, r1
   11350:	bl	10d9c <fprintf@plt>
   11354:	mov	r0, #1
   11358:	bl	10d84 <exit@plt>
   1135c:	ldr	r3, [pc, #216]	; 1143c <main@@Base+0x5c8>
   11360:	ldr	r3, [r9, r3]
   11364:	ldr	r4, [r3]
   11368:	bl	10e44 <coda_get_errno@plt>
   1136c:	ldr	r0, [r0]
   11370:	bl	10e14 <coda_errno_to_string@plt>
   11374:	ldr	r1, [pc, #240]	; 1146c <main@@Base+0x5f8>
   11378:	mov	r2, r0
   1137c:	mov	r0, r4
   11380:	add	r1, pc, r1
   11384:	bl	10d9c <fprintf@plt>
   11388:	mov	r0, #1
   1138c:	bl	10d84 <exit@plt>
   11390:	ldr	r3, [pc, #164]	; 1143c <main@@Base+0x5c8>
   11394:	ldr	r3, [r9, r3]
   11398:	ldr	r4, [r3]
   1139c:	bl	10e44 <coda_get_errno@plt>
   113a0:	ldr	r0, [r0]
   113a4:	bl	10e14 <coda_errno_to_string@plt>
   113a8:	ldr	r1, [pc, #192]	; 11470 <main@@Base+0x5fc>
   113ac:	mov	r2, r0
   113b0:	mov	r0, r4
   113b4:	add	r1, pc, r1
   113b8:	bl	10d9c <fprintf@plt>
   113bc:	mov	r0, #1
   113c0:	bl	10d84 <exit@plt>
   113c4:	ldr	r3, [pc, #112]	; 1143c <main@@Base+0x5c8>
   113c8:	ldr	r3, [r9, r3]
   113cc:	ldr	r4, [r3]
   113d0:	bl	10e44 <coda_get_errno@plt>
   113d4:	ldr	r0, [r0]
   113d8:	bl	10e14 <coda_errno_to_string@plt>
   113dc:	ldr	r1, [pc, #144]	; 11474 <main@@Base+0x600>
   113e0:	mov	r2, r0
   113e4:	mov	r0, r4
   113e8:	add	r1, pc, r1
   113ec:	bl	10d9c <fprintf@plt>
   113f0:	mov	r0, #1
   113f4:	bl	10d84 <exit@plt>
   113f8:	andeq	r2, r1, r4, ror #2
   113fc:	andeq	r1, r0, r4, lsl #19
   11400:	andeq	r1, r0, r4, lsr #10
   11404:	andeq	r1, r0, r8, asr #18
   11408:	andeq	r1, r0, r4, lsr r9
   1140c:	andeq	r1, r0, r0, ror #18
   11410:	andeq	r1, r0, r8, asr #18
   11414:	andeq	r2, r1, ip, asr #2
   11418:	andeq	r1, r0, r0, asr #18
   1141c:	andeq	r1, r0, r4, lsr #3
   11420:	andeq	r1, r0, r8, lsl r9
   11424:	andeq	r1, r0, ip, lsr #4
   11428:	andeq	r1, r0, ip, ror #17
   1142c:	strdeq	r1, [r0], -r0
   11430:	strdeq	r1, [r0], -r4
   11434:	andeq	r1, r0, r4, lsl #16
   11438:	andeq	r1, r0, r4, lsr r8
   1143c:	andeq	r0, r0, r4, lsr #1
   11440:			; <UNDEFINED> instruction: 0x00011fbc
   11444:	andeq	r1, r1, r0, asr #30
   11448:	andeq	r0, r0, ip, lsr #1
   1144c:	andeq	r1, r0, r8, ror r6
   11450:	andeq	r1, r0, r8, ror #14
   11454:	ldrdeq	r1, [r0], -ip
   11458:	andeq	r1, r0, r0, ror #12
   1145c:	andeq	r1, r0, r4, lsr #12
   11460:			; <UNDEFINED> instruction: 0x000015b8
   11464:	muleq	r0, ip, r5
   11468:	ldrdeq	r1, [r0], -r4
   1146c:	andeq	r1, r0, r4, lsr #10
   11470:	strdeq	r1, [r0], -r0
   11474:			; <UNDEFINED> instruction: 0x000014bc

00011478 <_start@@Base>:
   11478:	mov	fp, #0
   1147c:	mov	lr, #0
   11480:	pop	{r1}		; (ldr r1, [sp], #4)
   11484:	mov	r2, sp
   11488:	push	{r2}		; (str r2, [sp, #-4]!)
   1148c:	push	{r0}		; (str r0, [sp, #-4]!)
   11490:	ldr	ip, [pc, #16]	; 114a8 <_start@@Base+0x30>
   11494:	push	{ip}		; (str ip, [sp, #-4]!)
   11498:	ldr	r0, [pc, #12]	; 114ac <_start@@Base+0x34>
   1149c:	ldr	r3, [pc, #12]	; 114b0 <_start@@Base+0x38>
   114a0:	bl	10d54 <__libc_start_main@plt>
   114a4:	bl	10e50 <abort@plt>
   114a8:	andeq	r1, r1, r8, asr pc
   114ac:	andeq	r0, r1, r4, ror lr
   114b0:	strdeq	r1, [r1], -r8
   114b4:	ldr	r3, [pc, #20]	; 114d0 <_start@@Base+0x58>
   114b8:	ldr	r2, [pc, #20]	; 114d4 <_start@@Base+0x5c>
   114bc:	add	r3, pc, r3
   114c0:	ldr	r2, [r3, r2]
   114c4:	cmp	r2, #0
   114c8:	bxeq	lr
   114cc:	b	10d6c <__gmon_start__@plt>
   114d0:	andeq	r1, r1, ip, lsr fp
   114d4:	andeq	r0, r0, r8, lsr #1
   114d8:	ldr	r0, [pc, #24]	; 114f8 <_start@@Base+0x80>
   114dc:	ldr	r3, [pc, #24]	; 114fc <_start@@Base+0x84>
   114e0:	cmp	r3, r0
   114e4:	bxeq	lr
   114e8:	ldr	r3, [pc, #16]	; 11500 <_start@@Base+0x88>
   114ec:	cmp	r3, #0
   114f0:	bxeq	lr
   114f4:	bx	r3
   114f8:	strheq	r3, [r2], -r8
   114fc:	strheq	r3, [r2], -r8
   11500:	andeq	r0, r0, r0
   11504:	ldr	r0, [pc, #36]	; 11530 <_start@@Base+0xb8>
   11508:	ldr	r1, [pc, #36]	; 11534 <_start@@Base+0xbc>
   1150c:	sub	r1, r1, r0
   11510:	asr	r1, r1, #2
   11514:	add	r1, r1, r1, lsr #31
   11518:	asrs	r1, r1, #1
   1151c:	bxeq	lr
   11520:	ldr	r3, [pc, #16]	; 11538 <_start@@Base+0xc0>
   11524:	cmp	r3, #0
   11528:	bxeq	lr
   1152c:	bx	r3
   11530:	strheq	r3, [r2], -r8
   11534:	strheq	r3, [r2], -r8
   11538:	andeq	r0, r0, r0
   1153c:	push	{r4, lr}
   11540:	ldr	r4, [pc, #24]	; 11560 <_start@@Base+0xe8>
   11544:	ldrb	r3, [r4]
   11548:	cmp	r3, #0
   1154c:	popne	{r4, pc}
   11550:	bl	114d8 <_start@@Base+0x60>
   11554:	mov	r3, #1
   11558:	strb	r3, [r4]
   1155c:	pop	{r4, pc}
   11560:	strheq	r3, [r2], -r8
   11564:	b	11504 <_start@@Base+0x8c>
   11568:	ldr	r0, [pc, #444]	; 1172c <_start@@Base+0x2b4>
   1156c:	str	r4, [sp, #-8]!
   11570:	str	lr, [sp, #4]
   11574:	add	r0, pc, r0
   11578:	bl	10d48 <puts@plt>
   1157c:	ldr	r0, [pc, #428]	; 11730 <_start@@Base+0x2b8>
   11580:	add	r0, pc, r0
   11584:	bl	10d48 <puts@plt>
   11588:	ldr	r0, [pc, #420]	; 11734 <_start@@Base+0x2bc>
   1158c:	add	r0, pc, r0
   11590:	bl	10d48 <puts@plt>
   11594:	ldr	r0, [pc, #412]	; 11738 <_start@@Base+0x2c0>
   11598:	add	r0, pc, r0
   1159c:	bl	10d48 <puts@plt>
   115a0:	ldr	r0, [pc, #404]	; 1173c <_start@@Base+0x2c4>
   115a4:	add	r0, pc, r0
   115a8:	bl	10d48 <puts@plt>
   115ac:	ldr	r0, [pc, #396]	; 11740 <_start@@Base+0x2c8>
   115b0:	add	r0, pc, r0
   115b4:	bl	10d48 <puts@plt>
   115b8:	ldr	r0, [pc, #388]	; 11744 <_start@@Base+0x2cc>
   115bc:	add	r0, pc, r0
   115c0:	bl	10d48 <puts@plt>
   115c4:	mov	r0, #10
   115c8:	bl	10dcc <putchar@plt>
   115cc:	ldr	r0, [pc, #372]	; 11748 <_start@@Base+0x2d0>
   115d0:	add	r0, pc, r0
   115d4:	bl	10d48 <puts@plt>
   115d8:	ldr	r0, [pc, #364]	; 1174c <_start@@Base+0x2d4>
   115dc:	add	r0, pc, r0
   115e0:	bl	10d48 <puts@plt>
   115e4:	ldr	r0, [pc, #356]	; 11750 <_start@@Base+0x2d8>
   115e8:	add	r0, pc, r0
   115ec:	bl	10d48 <puts@plt>
   115f0:	ldr	r0, [pc, #348]	; 11754 <_start@@Base+0x2dc>
   115f4:	add	r0, pc, r0
   115f8:	bl	10d48 <puts@plt>
   115fc:	ldr	r0, [pc, #340]	; 11758 <_start@@Base+0x2e0>
   11600:	add	r0, pc, r0
   11604:	bl	10d48 <puts@plt>
   11608:	ldr	r0, [pc, #332]	; 1175c <_start@@Base+0x2e4>
   1160c:	add	r0, pc, r0
   11610:	bl	10d48 <puts@plt>
   11614:	ldr	r0, [pc, #324]	; 11760 <_start@@Base+0x2e8>
   11618:	add	r0, pc, r0
   1161c:	bl	10d48 <puts@plt>
   11620:	ldr	r0, [pc, #316]	; 11764 <_start@@Base+0x2ec>
   11624:	add	r0, pc, r0
   11628:	bl	10d48 <puts@plt>
   1162c:	ldr	r0, [pc, #308]	; 11768 <_start@@Base+0x2f0>
   11630:	add	r0, pc, r0
   11634:	bl	10d48 <puts@plt>
   11638:	ldr	r0, [pc, #300]	; 1176c <_start@@Base+0x2f4>
   1163c:	add	r0, pc, r0
   11640:	bl	10d48 <puts@plt>
   11644:	ldr	r0, [pc, #292]	; 11770 <_start@@Base+0x2f8>
   11648:	add	r0, pc, r0
   1164c:	bl	10d48 <puts@plt>
   11650:	ldr	r0, [pc, #284]	; 11774 <_start@@Base+0x2fc>
   11654:	add	r0, pc, r0
   11658:	bl	10d48 <puts@plt>
   1165c:	mov	r0, #10
   11660:	bl	10dcc <putchar@plt>
   11664:	ldr	r0, [pc, #268]	; 11778 <_start@@Base+0x300>
   11668:	add	r0, pc, r0
   1166c:	bl	10d48 <puts@plt>
   11670:	ldr	r0, [pc, #260]	; 1177c <_start@@Base+0x304>
   11674:	add	r0, pc, r0
   11678:	bl	10d48 <puts@plt>
   1167c:	mov	r0, #10
   11680:	bl	10dcc <putchar@plt>
   11684:	ldr	r0, [pc, #244]	; 11780 <_start@@Base+0x308>
   11688:	add	r0, pc, r0
   1168c:	bl	10d48 <puts@plt>
   11690:	ldr	r0, [pc, #236]	; 11784 <_start@@Base+0x30c>
   11694:	add	r0, pc, r0
   11698:	bl	10d48 <puts@plt>
   1169c:	mov	r0, #10
   116a0:	bl	10dcc <putchar@plt>
   116a4:	ldr	r0, [pc, #220]	; 11788 <_start@@Base+0x310>
   116a8:	add	r0, pc, r0
   116ac:	bl	10d48 <puts@plt>
   116b0:	ldr	r0, [pc, #212]	; 1178c <_start@@Base+0x314>
   116b4:	add	r0, pc, r0
   116b8:	bl	10d48 <puts@plt>
   116bc:	mov	r0, #10
   116c0:	bl	10dcc <putchar@plt>
   116c4:	ldr	r0, [pc, #196]	; 11790 <_start@@Base+0x318>
   116c8:	add	r0, pc, r0
   116cc:	bl	10d48 <puts@plt>
   116d0:	ldr	r0, [pc, #188]	; 11794 <_start@@Base+0x31c>
   116d4:	add	r0, pc, r0
   116d8:	bl	10d48 <puts@plt>
   116dc:	ldr	r0, [pc, #180]	; 11798 <_start@@Base+0x320>
   116e0:	add	r0, pc, r0
   116e4:	bl	10d48 <puts@plt>
   116e8:	ldr	r0, [pc, #172]	; 1179c <_start@@Base+0x324>
   116ec:	add	r0, pc, r0
   116f0:	bl	10d48 <puts@plt>
   116f4:	ldr	r0, [pc, #164]	; 117a0 <_start@@Base+0x328>
   116f8:	add	r0, pc, r0
   116fc:	bl	10d48 <puts@plt>
   11700:	ldr	r0, [pc, #156]	; 117a4 <_start@@Base+0x32c>
   11704:	add	r0, pc, r0
   11708:	bl	10d48 <puts@plt>
   1170c:	ldr	r0, [pc, #148]	; 117a8 <_start@@Base+0x330>
   11710:	add	r0, pc, r0
   11714:	bl	10d48 <puts@plt>
   11718:	mov	r0, #10
   1171c:	ldr	r4, [sp]
   11720:	ldr	lr, [sp, #4]
   11724:	add	sp, sp, #8
   11728:	b	10dcc <putchar@plt>
   1172c:	strdeq	r0, [r0], -ip
   11730:	strdeq	r0, [r0], -r8
   11734:	andeq	r0, r0, ip, lsr sl
   11738:	andeq	r0, r0, r0, lsl #21
   1173c:	muleq	r0, r8, sl
   11740:	ldrdeq	r0, [r0], -r8
   11744:	andeq	r0, r0, r8, lsl fp
   11748:	andeq	r0, r0, r4, lsr fp
   1174c:	andeq	r0, r0, ip, lsr fp
   11750:	andeq	r0, r0, r8, asr #22
   11754:	andeq	r0, r0, ip, lsl #23
   11758:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1175c:	andeq	r0, r0, ip, ror #23
   11760:	andeq	r0, r0, ip, lsl ip
   11764:	andeq	r0, r0, r8, lsr #24
   11768:	andeq	r0, r0, r8, ror #24
   1176c:	andeq	r0, r0, r8, lsr #25
   11770:			; <UNDEFINED> instruction: 0x00000cbc
   11774:	strdeq	r0, [r0], -ip
   11778:	andeq	r0, r0, r8, lsl sp
   1177c:	andeq	r0, r0, ip, asr sp
   11780:	andeq	r0, r0, r0, ror #26
   11784:	andeq	r0, r0, ip, ror #26
   11788:	andeq	r0, r0, r8, ror sp
   1178c:	andeq	r0, r0, r8, lsl #27
   11790:	andeq	r0, r0, r8, lsr #27
   11794:	andeq	r0, r0, r8, ror #27
   11798:	andeq	r0, r0, r8, lsr #28
   1179c:	andeq	r0, r0, ip, asr #28
   117a0:	andeq	r0, r0, ip, lsl #29
   117a4:	andeq	r0, r0, ip, asr #29
   117a8:	andeq	r0, r0, r0, lsl #30
   117ac:	ldr	r3, [pc, #1196]	; 11c60 <_start@@Base+0x7e8>
   117b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   117b4:	add	r3, pc, r3
   117b8:	ldr	r3, [r3]
   117bc:	strd	r6, [sp, #8]
   117c0:	strd	r8, [sp, #16]
   117c4:	str	sl, [sp, #24]
   117c8:	str	lr, [sp, #28]
   117cc:	sub	sp, sp, #32
   117d0:	cmp	r3, #5
   117d4:	addls	pc, pc, r3, lsl #2
   117d8:	b	11c58 <_start@@Base+0x7e0>
   117dc:	b	119c8 <_start@@Base+0x550>
   117e0:	b	11a20 <_start@@Base+0x5a8>
   117e4:	b	11a58 <_start@@Base+0x5e0>
   117e8:	b	117f4 <_start@@Base+0x37c>
   117ec:	b	11b98 <_start@@Base+0x720>
   117f0:	b	11b98 <_start@@Base+0x720>
   117f4:	ldr	ip, [pc, #1128]	; 11c64 <_start@@Base+0x7ec>
   117f8:	mov	lr, #0
   117fc:	mov	r1, r0
   11800:	add	r3, sp, #8
   11804:	mov	r2, sp
   11808:	str	lr, [sp]
   1180c:	add	ip, pc, ip
   11810:	ldr	r0, [ip, #4]
   11814:	bl	10dc0 <coda_expression_eval_string@plt>
   11818:	subs	r7, r0, #0
   1181c:	bne	11c08 <_start@@Base+0x790>
   11820:	ldr	r4, [sp]
   11824:	ldr	r6, [sp, #8]
   11828:	cmp	r4, #0
   1182c:	cmpne	r6, #0
   11830:	beq	11a9c <_start@@Base+0x624>
   11834:	cmp	r6, #0
   11838:	blt	11b78 <_start@@Base+0x700>
   1183c:	ldr	r8, [pc, #1060]	; 11c68 <_start@@Base+0x7f0>
   11840:	sub	r4, r4, #1
   11844:	add	r6, r4, r6
   11848:	ldr	sl, [pc, #1052]	; 11c6c <_start@@Base+0x7f4>
   1184c:	ldr	r9, [pc, #1052]	; 11c70 <_start@@Base+0x7f8>
   11850:	add	r8, pc, r8
   11854:	add	sl, pc, sl
   11858:	add	r9, pc, r9
   1185c:	ldrb	r5, [r4, #1]!
   11860:	sub	r3, r5, #7
   11864:	cmp	r3, #85	; 0x55
   11868:	addls	pc, pc, r3, lsl #2
   1186c:	b	11b44 <_start@@Base+0x6cc>
   11870:	b	11ad8 <_start@@Base+0x660>
   11874:	b	11af8 <_start@@Base+0x680>
   11878:	b	11ae8 <_start@@Base+0x670>
   1187c:	b	11ac8 <_start@@Base+0x650>
   11880:	b	11ab8 <_start@@Base+0x640>
   11884:	b	11b34 <_start@@Base+0x6bc>
   11888:	b	11b24 <_start@@Base+0x6ac>
   1188c:	b	11b44 <_start@@Base+0x6cc>
   11890:	b	11b44 <_start@@Base+0x6cc>
   11894:	b	11b44 <_start@@Base+0x6cc>
   11898:	b	11b44 <_start@@Base+0x6cc>
   1189c:	b	11b44 <_start@@Base+0x6cc>
   118a0:	b	11b44 <_start@@Base+0x6cc>
   118a4:	b	11b44 <_start@@Base+0x6cc>
   118a8:	b	11b44 <_start@@Base+0x6cc>
   118ac:	b	11b44 <_start@@Base+0x6cc>
   118b0:	b	11b44 <_start@@Base+0x6cc>
   118b4:	b	11b44 <_start@@Base+0x6cc>
   118b8:	b	11b44 <_start@@Base+0x6cc>
   118bc:	b	11b44 <_start@@Base+0x6cc>
   118c0:	b	11b14 <_start@@Base+0x69c>
   118c4:	b	11b44 <_start@@Base+0x6cc>
   118c8:	b	11b44 <_start@@Base+0x6cc>
   118cc:	b	11b44 <_start@@Base+0x6cc>
   118d0:	b	11b44 <_start@@Base+0x6cc>
   118d4:	b	11b44 <_start@@Base+0x6cc>
   118d8:	b	11b44 <_start@@Base+0x6cc>
   118dc:	b	11b08 <_start@@Base+0x690>
   118e0:	b	11b44 <_start@@Base+0x6cc>
   118e4:	b	11b44 <_start@@Base+0x6cc>
   118e8:	b	11b44 <_start@@Base+0x6cc>
   118ec:	b	11b44 <_start@@Base+0x6cc>
   118f0:	b	11b44 <_start@@Base+0x6cc>
   118f4:	b	11b44 <_start@@Base+0x6cc>
   118f8:	b	11b44 <_start@@Base+0x6cc>
   118fc:	b	11b44 <_start@@Base+0x6cc>
   11900:	b	11b44 <_start@@Base+0x6cc>
   11904:	b	11b44 <_start@@Base+0x6cc>
   11908:	b	11b44 <_start@@Base+0x6cc>
   1190c:	b	11b44 <_start@@Base+0x6cc>
   11910:	b	11b44 <_start@@Base+0x6cc>
   11914:	b	11b44 <_start@@Base+0x6cc>
   11918:	b	11b44 <_start@@Base+0x6cc>
   1191c:	b	11b44 <_start@@Base+0x6cc>
   11920:	b	11b44 <_start@@Base+0x6cc>
   11924:	b	11b44 <_start@@Base+0x6cc>
   11928:	b	11b44 <_start@@Base+0x6cc>
   1192c:	b	11b44 <_start@@Base+0x6cc>
   11930:	b	11b44 <_start@@Base+0x6cc>
   11934:	b	11b44 <_start@@Base+0x6cc>
   11938:	b	11b44 <_start@@Base+0x6cc>
   1193c:	b	11b44 <_start@@Base+0x6cc>
   11940:	b	11b44 <_start@@Base+0x6cc>
   11944:	b	11b44 <_start@@Base+0x6cc>
   11948:	b	11b44 <_start@@Base+0x6cc>
   1194c:	b	11b44 <_start@@Base+0x6cc>
   11950:	b	11b44 <_start@@Base+0x6cc>
   11954:	b	11b44 <_start@@Base+0x6cc>
   11958:	b	11b44 <_start@@Base+0x6cc>
   1195c:	b	11b44 <_start@@Base+0x6cc>
   11960:	b	11b44 <_start@@Base+0x6cc>
   11964:	b	11b44 <_start@@Base+0x6cc>
   11968:	b	11b44 <_start@@Base+0x6cc>
   1196c:	b	11b44 <_start@@Base+0x6cc>
   11970:	b	11b44 <_start@@Base+0x6cc>
   11974:	b	11b44 <_start@@Base+0x6cc>
   11978:	b	11b44 <_start@@Base+0x6cc>
   1197c:	b	11b44 <_start@@Base+0x6cc>
   11980:	b	11b44 <_start@@Base+0x6cc>
   11984:	b	11b44 <_start@@Base+0x6cc>
   11988:	b	11b44 <_start@@Base+0x6cc>
   1198c:	b	11b44 <_start@@Base+0x6cc>
   11990:	b	11b44 <_start@@Base+0x6cc>
   11994:	b	11b44 <_start@@Base+0x6cc>
   11998:	b	11b44 <_start@@Base+0x6cc>
   1199c:	b	11b44 <_start@@Base+0x6cc>
   119a0:	b	11b44 <_start@@Base+0x6cc>
   119a4:	b	11b44 <_start@@Base+0x6cc>
   119a8:	b	11b44 <_start@@Base+0x6cc>
   119ac:	b	11b44 <_start@@Base+0x6cc>
   119b0:	b	11b44 <_start@@Base+0x6cc>
   119b4:	b	11b44 <_start@@Base+0x6cc>
   119b8:	b	11b44 <_start@@Base+0x6cc>
   119bc:	b	11b44 <_start@@Base+0x6cc>
   119c0:	b	11b44 <_start@@Base+0x6cc>
   119c4:	b	11a8c <_start@@Base+0x614>
   119c8:	ldr	r3, [pc, #676]	; 11c74 <_start@@Base+0x7fc>
   119cc:	mov	r1, r0
   119d0:	add	r2, sp, #8
   119d4:	add	r3, pc, r3
   119d8:	ldr	r0, [r3, #4]
   119dc:	bl	10d24 <coda_expression_eval_bool@plt>
   119e0:	subs	r7, r0, #0
   119e4:	bne	11c30 <_start@@Base+0x7b8>
   119e8:	ldr	r3, [sp, #8]
   119ec:	cmp	r3, #0
   119f0:	bne	11b6c <_start@@Base+0x6f4>
   119f4:	ldr	r0, [pc, #636]	; 11c78 <_start@@Base+0x800>
   119f8:	add	r0, pc, r0
   119fc:	bl	10d48 <puts@plt>
   11a00:	mov	r0, r7
   11a04:	add	sp, sp, #32
   11a08:	ldrd	r4, [sp]
   11a0c:	ldrd	r6, [sp, #8]
   11a10:	ldrd	r8, [sp, #16]
   11a14:	ldr	sl, [sp, #24]
   11a18:	add	sp, sp, #28
   11a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a20:	ldr	r3, [pc, #596]	; 11c7c <_start@@Base+0x804>
   11a24:	mov	r1, r0
   11a28:	mov	r2, sp
   11a2c:	add	r3, pc, r3
   11a30:	ldr	r0, [r3, #4]
   11a34:	bl	10cb8 <coda_expression_eval_integer@plt>
   11a38:	subs	r7, r0, #0
   11a3c:	bne	11be0 <_start@@Base+0x768>
   11a40:	add	r4, sp, #8
   11a44:	ldrd	r0, [sp]
   11a48:	mov	r2, r4
   11a4c:	bl	10e5c <coda_str64@plt>
   11a50:	mov	r0, r4
   11a54:	b	119fc <_start@@Base+0x584>
   11a58:	ldr	r3, [pc, #544]	; 11c80 <_start@@Base+0x808>
   11a5c:	mov	r1, r0
   11a60:	add	r2, sp, #8
   11a64:	add	r3, pc, r3
   11a68:	ldr	r0, [r3, #4]
   11a6c:	bl	10dfc <coda_expression_eval_float@plt>
   11a70:	subs	r7, r0, #0
   11a74:	bne	11bb8 <_start@@Base+0x740>
   11a78:	ldr	r0, [pc, #516]	; 11c84 <_start@@Base+0x80c>
   11a7c:	ldrd	r2, [sp, #8]
   11a80:	add	r0, pc, r0
   11a84:	bl	10cd0 <printf@plt>
   11a88:	b	11a00 <_start@@Base+0x588>
   11a8c:	mov	r0, r9
   11a90:	bl	10cd0 <printf@plt>
   11a94:	cmp	r4, r6
   11a98:	bne	1185c <_start@@Base+0x3e4>
   11a9c:	mov	r0, #10
   11aa0:	bl	10dcc <putchar@plt>
   11aa4:	ldr	r0, [sp]
   11aa8:	cmp	r0, #0
   11aac:	beq	11a00 <_start@@Base+0x588>
   11ab0:	bl	10cf4 <free@plt>
   11ab4:	b	11a00 <_start@@Base+0x588>
   11ab8:	ldr	r0, [pc, #456]	; 11c88 <_start@@Base+0x810>
   11abc:	add	r0, pc, r0
   11ac0:	bl	10cd0 <printf@plt>
   11ac4:	b	11a94 <_start@@Base+0x61c>
   11ac8:	ldr	r0, [pc, #444]	; 11c8c <_start@@Base+0x814>
   11acc:	add	r0, pc, r0
   11ad0:	bl	10cd0 <printf@plt>
   11ad4:	b	11a94 <_start@@Base+0x61c>
   11ad8:	ldr	r0, [pc, #432]	; 11c90 <_start@@Base+0x818>
   11adc:	add	r0, pc, r0
   11ae0:	bl	10cd0 <printf@plt>
   11ae4:	b	11a94 <_start@@Base+0x61c>
   11ae8:	ldr	r0, [pc, #420]	; 11c94 <_start@@Base+0x81c>
   11aec:	add	r0, pc, r0
   11af0:	bl	10cd0 <printf@plt>
   11af4:	b	11a94 <_start@@Base+0x61c>
   11af8:	ldr	r0, [pc, #408]	; 11c98 <_start@@Base+0x820>
   11afc:	add	r0, pc, r0
   11b00:	bl	10cd0 <printf@plt>
   11b04:	b	11a94 <_start@@Base+0x61c>
   11b08:	mov	r0, sl
   11b0c:	bl	10cd0 <printf@plt>
   11b10:	b	11a94 <_start@@Base+0x61c>
   11b14:	ldr	r0, [pc, #384]	; 11c9c <_start@@Base+0x824>
   11b18:	add	r0, pc, r0
   11b1c:	bl	10cd0 <printf@plt>
   11b20:	b	11a94 <_start@@Base+0x61c>
   11b24:	ldr	r0, [pc, #372]	; 11ca0 <_start@@Base+0x828>
   11b28:	add	r0, pc, r0
   11b2c:	bl	10cd0 <printf@plt>
   11b30:	b	11a94 <_start@@Base+0x61c>
   11b34:	ldr	r0, [pc, #360]	; 11ca4 <_start@@Base+0x82c>
   11b38:	add	r0, pc, r0
   11b3c:	bl	10cd0 <printf@plt>
   11b40:	b	11a94 <_start@@Base+0x61c>
   11b44:	bl	10d78 <__ctype_b_loc@plt>
   11b48:	ldr	r2, [r0]
   11b4c:	lsl	r3, r5, #1
   11b50:	ldrh	r3, [r2, r3]
   11b54:	tst	r3, #16384	; 0x4000
   11b58:	bne	11b8c <_start@@Base+0x714>
   11b5c:	mov	r1, r5
   11b60:	mov	r0, r8
   11b64:	bl	10cd0 <printf@plt>
   11b68:	b	11a94 <_start@@Base+0x61c>
   11b6c:	ldr	r0, [pc, #308]	; 11ca8 <_start@@Base+0x830>
   11b70:	add	r0, pc, r0
   11b74:	b	119fc <_start@@Base+0x584>
   11b78:	mov	r0, r4
   11b7c:	bl	10d90 <strlen@plt>
   11b80:	subs	r6, r0, #0
   11b84:	bne	1183c <_start@@Base+0x3c4>
   11b88:	b	11a9c <_start@@Base+0x624>
   11b8c:	mov	r0, r5
   11b90:	bl	10dcc <putchar@plt>
   11b94:	b	11a94 <_start@@Base+0x61c>
   11b98:	ldr	r3, [pc, #268]	; 11cac <_start@@Base+0x834>
   11b9c:	mov	r2, #230	; 0xe6
   11ba0:	ldr	r1, [pc, #264]	; 11cb0 <_start@@Base+0x838>
   11ba4:	ldr	r0, [pc, #264]	; 11cb4 <_start@@Base+0x83c>
   11ba8:	add	r3, pc, r3
   11bac:	add	r1, pc, r1
   11bb0:	add	r0, pc, r0
   11bb4:	bl	10e68 <__assert_fail@plt>
   11bb8:	bl	10e44 <coda_get_errno@plt>
   11bbc:	ldr	r0, [r0]
   11bc0:	mvn	r7, #0
   11bc4:	bl	10e14 <coda_errno_to_string@plt>
   11bc8:	ldr	r1, [pc, #232]	; 11cb8 <_start@@Base+0x840>
   11bcc:	mov	r2, r0
   11bd0:	mvn	r0, #400	; 0x190
   11bd4:	add	r1, pc, r1
   11bd8:	bl	10cdc <coda_set_error@plt>
   11bdc:	b	11a00 <_start@@Base+0x588>
   11be0:	bl	10e44 <coda_get_errno@plt>
   11be4:	ldr	r0, [r0]
   11be8:	mvn	r7, #0
   11bec:	bl	10e14 <coda_errno_to_string@plt>
   11bf0:	ldr	r1, [pc, #196]	; 11cbc <_start@@Base+0x844>
   11bf4:	mov	r2, r0
   11bf8:	mvn	r0, #400	; 0x190
   11bfc:	add	r1, pc, r1
   11c00:	bl	10cdc <coda_set_error@plt>
   11c04:	b	11a00 <_start@@Base+0x588>
   11c08:	bl	10e44 <coda_get_errno@plt>
   11c0c:	ldr	r0, [r0]
   11c10:	mvn	r7, #0
   11c14:	bl	10e14 <coda_errno_to_string@plt>
   11c18:	ldr	r1, [pc, #160]	; 11cc0 <_start@@Base+0x848>
   11c1c:	mov	r2, r0
   11c20:	mvn	r0, #400	; 0x190
   11c24:	add	r1, pc, r1
   11c28:	bl	10cdc <coda_set_error@plt>
   11c2c:	b	11a00 <_start@@Base+0x588>
   11c30:	bl	10e44 <coda_get_errno@plt>
   11c34:	ldr	r0, [r0]
   11c38:	mvn	r7, #0
   11c3c:	bl	10e14 <coda_errno_to_string@plt>
   11c40:	ldr	r1, [pc, #124]	; 11cc4 <_start@@Base+0x84c>
   11c44:	mov	r2, r0
   11c48:	mvn	r0, #400	; 0x190
   11c4c:	add	r1, pc, r1
   11c50:	bl	10cdc <coda_set_error@plt>
   11c54:	b	11a00 <_start@@Base+0x588>
   11c58:	mov	r7, #0
   11c5c:	b	11a00 <_start@@Base+0x588>
   11c60:	andeq	r1, r1, r0, lsl #18
   11c64:	andeq	r1, r1, r8, lsr #17
   11c68:	andeq	r0, r0, r8, ror #29
   11c6c:	andeq	r0, r0, r0, ror #29
   11c70:	ldrdeq	r0, [r0], -r8
   11c74:	andeq	r1, r1, r0, ror #13
   11c78:	andeq	r0, r0, r0, ror #24
   11c7c:	andeq	r1, r1, r8, lsl #13
   11c80:	andeq	r1, r1, r0, asr r6
   11c84:	andeq	r0, r0, r0, ror #24
   11c88:	andeq	r0, r0, r0, ror ip
   11c8c:	andeq	r0, r0, r4, asr ip
   11c90:	andeq	r0, r0, r8, lsr ip
   11c94:	andeq	r0, r0, ip, lsr ip
   11c98:	andeq	r0, r0, ip, lsl ip
   11c9c:	strdeq	r0, [r0], -r8
   11ca0:	strdeq	r0, [r0], -ip
   11ca4:	andeq	r0, r0, r4, ror #23
   11ca8:	andeq	r0, r0, r0, ror #21
   11cac:			; <UNDEFINED> instruction: 0x000003b8
   11cb0:	muleq	r0, r4, fp
   11cb4:	andeq	r0, r0, ip, ror #23
   11cb8:	ldrdeq	r0, [r0], -ip
   11cbc:	andeq	r0, r0, ip, lsl #21
   11cc0:	andeq	r0, r0, r4, asr #21
   11cc4:	andeq	r0, r0, r4, lsl sl
   11cc8:	strd	r4, [sp, #-20]!	; 0xffffffec
   11ccc:	mov	r3, #0
   11cd0:	ldr	r5, [pc, #284]	; 11df4 <_start@@Base+0x97c>
   11cd4:	strd	r6, [sp, #8]
   11cd8:	mov	r7, r0
   11cdc:	str	lr, [sp, #16]
   11ce0:	sub	sp, sp, #532	; 0x214
   11ce4:	add	r1, sp, #4
   11ce8:	str	r3, [sp, #4]
   11cec:	bl	10ce8 <coda_open@plt>
   11cf0:	cmp	r0, #0
   11cf4:	add	r5, pc, r5
   11cf8:	movne	r4, #1
   11cfc:	beq	11d18 <_start@@Base+0x8a0>
   11d00:	mov	r0, r4
   11d04:	add	sp, sp, #532	; 0x214
   11d08:	ldrd	r4, [sp]
   11d0c:	ldrd	r6, [sp, #8]
   11d10:	add	sp, sp, #16
   11d14:	pop	{pc}		; (ldr pc, [sp], #4)
   11d18:	add	r6, sp, #8
   11d1c:	ldr	r1, [sp, #4]
   11d20:	mov	r0, r6
   11d24:	bl	10d30 <coda_cursor_set_product@plt>
   11d28:	subs	r4, r0, #0
   11d2c:	bne	11dac <_start@@Base+0x934>
   11d30:	ldr	r3, [pc, #192]	; 11df8 <_start@@Base+0x980>
   11d34:	add	r3, pc, r3
   11d38:	ldr	r0, [r3, #8]
   11d3c:	cmp	r0, #0
   11d40:	beq	11d54 <_start@@Base+0x8dc>
   11d44:	mov	r1, r6
   11d48:	bl	10e08 <coda_expression_eval_node@plt>
   11d4c:	cmp	r0, #0
   11d50:	bne	11dbc <_start@@Base+0x944>
   11d54:	mov	r0, r6
   11d58:	bl	117ac <_start@@Base+0x334>
   11d5c:	cmp	r0, #0
   11d60:	bne	11d78 <_start@@Base+0x900>
   11d64:	ldr	r0, [sp, #4]
   11d68:	bl	10de4 <coda_close@plt>
   11d6c:	adds	r4, r0, #0
   11d70:	movne	r4, #1
   11d74:	b	11d00 <_start@@Base+0x888>
   11d78:	ldr	r3, [pc, #124]	; 11dfc <_start@@Base+0x984>
   11d7c:	ldr	r3, [r5, r3]
   11d80:	ldr	r4, [r3]
   11d84:	bl	10e44 <coda_get_errno@plt>
   11d88:	ldr	r0, [r0]
   11d8c:	bl	10e14 <coda_errno_to_string@plt>
   11d90:	ldr	r1, [pc, #104]	; 11e00 <_start@@Base+0x988>
   11d94:	mov	r2, r0
   11d98:	mov	r3, r7
   11d9c:	mov	r0, r4
   11da0:	add	r1, pc, r1
   11da4:	bl	10d9c <fprintf@plt>
   11da8:	b	11d64 <_start@@Base+0x8ec>
   11dac:	ldr	r0, [sp, #4]
   11db0:	mov	r4, #1
   11db4:	bl	10de4 <coda_close@plt>
   11db8:	b	11d00 <_start@@Base+0x888>
   11dbc:	ldr	r3, [pc, #56]	; 11dfc <_start@@Base+0x984>
   11dc0:	ldr	r3, [r5, r3]
   11dc4:	ldr	r5, [r3]
   11dc8:	bl	10e44 <coda_get_errno@plt>
   11dcc:	ldr	r0, [r0]
   11dd0:	bl	10e14 <coda_errno_to_string@plt>
   11dd4:	ldr	r1, [pc, #40]	; 11e04 <_start@@Base+0x98c>
   11dd8:	mov	r2, r0
   11ddc:	mov	r0, r5
   11de0:	add	r1, pc, r1
   11de4:	bl	10d9c <fprintf@plt>
   11de8:	ldr	r0, [sp, #4]
   11dec:	bl	10de4 <coda_close@plt>
   11df0:	b	11d00 <_start@@Base+0x888>
   11df4:	andeq	r1, r1, r4, lsl #6
   11df8:	andeq	r1, r1, r0, lsl #7
   11dfc:	andeq	r0, r0, r4, lsr #1
   11e00:	andeq	r0, r0, r0, lsr sl
   11e04:	andeq	r0, r0, r0, asr #19

00011e08 <callback@@Base>:
   11e08:	ldr	ip, [pc, #212]	; 11ee4 <callback@@Base+0xdc>
   11e0c:	cmp	r1, #0
   11e10:	str	r4, [sp, #-8]!
   11e14:	str	lr, [sp, #4]
   11e18:	mov	lr, r0
   11e1c:	add	ip, pc, ip
   11e20:	beq	11e4c <callback@@Base+0x44>
   11e24:	cmp	r1, #2
   11e28:	beq	11ea8 <callback@@Base+0xa0>
   11e2c:	cmp	r1, #1
   11e30:	beq	11e78 <callback@@Base+0x70>
   11e34:	cmp	r1, #4
   11e38:	beq	11ed4 <callback@@Base+0xcc>
   11e3c:	ldr	r4, [sp]
   11e40:	add	sp, sp, #4
   11e44:	mov	r0, #0
   11e48:	pop	{pc}		; (ldr pc, [sp], #4)
   11e4c:	ldr	r0, [pc, #148]	; 11ee8 <callback@@Base+0xe0>
   11e50:	mov	r3, lr
   11e54:	ldr	r1, [pc, #144]	; 11eec <callback@@Base+0xe4>
   11e58:	ldr	r0, [ip, r0]
   11e5c:	add	r1, pc, r1
   11e60:	ldr	r0, [r0]
   11e64:	bl	10d9c <fprintf@plt>
   11e68:	ldr	r4, [sp]
   11e6c:	add	sp, sp, #4
   11e70:	mov	r0, #0
   11e74:	pop	{pc}		; (ldr pc, [sp], #4)
   11e78:	ldr	r0, [pc, #104]	; 11ee8 <callback@@Base+0xe0>
   11e7c:	mov	r3, r2
   11e80:	mov	r2, lr
   11e84:	ldr	r1, [pc, #100]	; 11ef0 <callback@@Base+0xe8>
   11e88:	ldr	r0, [ip, r0]
   11e8c:	add	r1, pc, r1
   11e90:	ldr	r0, [r0]
   11e94:	bl	10d9c <fprintf@plt>
   11e98:	ldr	r4, [sp]
   11e9c:	add	sp, sp, #4
   11ea0:	mov	r0, #0
   11ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ea8:	ldr	r3, [pc, #56]	; 11ee8 <callback@@Base+0xe0>
   11eac:	mov	r2, r0
   11eb0:	ldr	r1, [pc, #60]	; 11ef4 <callback@@Base+0xec>
   11eb4:	ldr	r3, [ip, r3]
   11eb8:	add	r1, pc, r1
   11ebc:	ldr	r0, [r3]
   11ec0:	bl	10d9c <fprintf@plt>
   11ec4:	ldr	r4, [sp]
   11ec8:	add	sp, sp, #4
   11ecc:	mov	r0, #0
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed4:	ldr	r4, [sp]
   11ed8:	ldr	lr, [sp, #4]
   11edc:	add	sp, sp, #8
   11ee0:	b	11cc8 <_start@@Base+0x850>
   11ee4:	ldrdeq	r1, [r1], -ip
   11ee8:	andeq	r0, r0, r4, lsr #1
   11eec:	andeq	r0, r0, r4, ror r9
   11ef0:	andeq	r0, r0, r0, lsl #19
   11ef4:	andeq	r0, r0, ip, lsr #18

00011ef8 <__libc_csu_init@@Base>:
   11ef8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11efc:	mov	r7, r0
   11f00:	ldr	r6, [pc, #72]	; 11f50 <__libc_csu_init@@Base+0x58>
   11f04:	ldr	r5, [pc, #72]	; 11f54 <__libc_csu_init@@Base+0x5c>
   11f08:	add	r6, pc, r6
   11f0c:	add	r5, pc, r5
   11f10:	sub	r6, r6, r5
   11f14:	mov	r8, r1
   11f18:	mov	r9, r2
   11f1c:	bl	10c8c <coda_match_filefilter@plt-0x20>
   11f20:	asrs	r6, r6, #2
   11f24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f28:	mov	r4, #0
   11f2c:	add	r4, r4, #1
   11f30:	ldr	r3, [r5], #4
   11f34:	mov	r2, r9
   11f38:	mov	r1, r8
   11f3c:	mov	r0, r7
   11f40:	blx	r3
   11f44:	cmp	r6, r4
   11f48:	bne	11f2c <__libc_csu_init@@Base+0x34>
   11f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f50:	andeq	r0, r1, ip, ror #31
   11f54:	andeq	r0, r1, r4, ror #31

00011f58 <__libc_csu_fini@@Base>:
   11f58:	bx	lr

Disassembly of section .fini:

00011f5c <.fini>:
   11f5c:	push	{r3, lr}
   11f60:	pop	{r3, pc}
