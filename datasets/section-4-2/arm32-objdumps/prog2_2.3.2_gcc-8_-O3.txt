
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010978 <.init>:
   10978:	push	{r3, lr}
   1097c:	bl	10be4 <_start@@Base+0x3c>
   10980:	pop	{r3, pc}

Disassembly of section .plt:

00010984 <calloc@plt-0x14>:
   10984:	push	{lr}		; (str lr, [sp, #-4]!)
   10988:	ldr	lr, [pc, #4]	; 10994 <calloc@plt-0x4>
   1098c:	add	lr, pc, lr
   10990:	ldr	pc, [lr, #8]!
   10994:	andeq	r1, r1, ip, ror #12

00010998 <calloc@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1644]!	; 0x66c

000109a4 <strcmp@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1636]!	; 0x664

000109b0 <printf@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1628]!	; 0x65c

000109bc <free@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1620]!	; 0x654

000109c8 <fgets@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1612]!	; 0x64c

000109d4 <time@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1604]!	; 0x644

000109e0 <realloc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1596]!	; 0x63c

000109ec <strcat@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1588]!	; 0x634

000109f8 <strcpy@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1580]!	; 0x62c

00010a04 <puts@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1572]!	; 0x624

00010a10 <malloc@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1564]!	; 0x61c

00010a1c <__libc_start_main@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1556]!	; 0x614

00010a28 <__gmon_start__@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1548]!	; 0x60c

00010a34 <strlen@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1540]!	; 0x604

00010a40 <srand@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a4c <rand@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a58 <__isoc99_scanf@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1508]!	; 0x5e4

Disassembly of section .text:

00010a70 <main@@Base>:
   10a70:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10a74:	mov	r4, #0
   10a78:	strd	r6, [sp, #8]
   10a7c:	movw	r7, #5020	; 0x139c
   10a80:	movt	r7, #1
   10a84:	strd	r8, [sp, #16]
   10a88:	movw	r8, #8288	; 0x2060
   10a8c:	movt	r8, #2
   10a90:	str	lr, [sp, #24]
   10a94:	sub	sp, sp, #108	; 0x6c
   10a98:	mov	r9, r4
   10a9c:	bl	10cec <vetor_novo@@Base>
   10aa0:	mov	r6, r0
   10aa4:	add	r5, r4, #1
   10aa8:	mov	r0, r7
   10aac:	mov	r1, r5
   10ab0:	bl	109b0 <printf@plt>
   10ab4:	mov	r1, #100	; 0x64
   10ab8:	add	r0, sp, #4
   10abc:	ldr	r2, [r8]
   10ac0:	bl	109c8 <fgets@plt>
   10ac4:	add	r0, sp, #4
   10ac8:	bl	10a34 <strlen@plt>
   10acc:	add	r3, sp, #104	; 0x68
   10ad0:	mov	r2, r4
   10ad4:	add	r3, r3, r0
   10ad8:	add	r1, sp, #4
   10adc:	mov	r0, r6
   10ae0:	mov	r4, r5
   10ae4:	strb	r9, [r3, #-101]	; 0xffffff9b
   10ae8:	bl	10e9c <vetor_insere@@Base>
   10aec:	cmp	r5, #5
   10af0:	bne	10aa4 <main@@Base+0x34>
   10af4:	mov	r0, r6
   10af8:	bl	10c98 <imprime@@Base>
   10afc:	movw	r0, #5040	; 0x13b0
   10b00:	movt	r0, #1
   10b04:	bl	109b0 <printf@plt>
   10b08:	add	r1, sp, #4
   10b0c:	movw	r0, #5072	; 0x13d0
   10b10:	movt	r0, #1
   10b14:	bl	10a58 <__isoc99_scanf@plt>
   10b18:	add	r1, sp, #4
   10b1c:	mov	r0, r6
   10b20:	bl	1102c <vetor_pesquisa@@Base>
   10b24:	mov	r1, r0
   10b28:	mov	r0, r6
   10b2c:	bl	10f94 <vetor_remove@@Base>
   10b30:	cmp	r0, #0
   10b34:	bne	10b88 <main@@Base+0x118>
   10b38:	mov	r0, r6
   10b3c:	bl	10c98 <imprime@@Base>
   10b40:	mov	r0, r6
   10b44:	bl	110a4 <vetor_ordena@@Base>
   10b48:	cmp	r0, #0
   10b4c:	bne	10b98 <main@@Base+0x128>
   10b50:	movw	r0, #5136	; 0x1410
   10b54:	movt	r0, #1
   10b58:	bl	10a04 <puts@plt>
   10b5c:	mov	r0, r6
   10b60:	bl	10c98 <imprime@@Base>
   10b64:	mov	r0, r6
   10b68:	bl	10d2c <vetor_apaga@@Base>
   10b6c:	mov	r0, #0
   10b70:	add	sp, sp, #108	; 0x6c
   10b74:	ldrd	r4, [sp]
   10b78:	ldrd	r6, [sp, #8]
   10b7c:	ldrd	r8, [sp, #16]
   10b80:	add	sp, sp, #24
   10b84:	pop	{pc}		; (ldr pc, [sp], #4)
   10b88:	movw	r0, #5076	; 0x13d4
   10b8c:	movt	r0, #1
   10b90:	bl	10a04 <puts@plt>
   10b94:	b	10b40 <main@@Base+0xd0>
   10b98:	movw	r0, #5100	; 0x13ec
   10b9c:	movt	r0, #1
   10ba0:	bl	109b0 <printf@plt>
   10ba4:	b	10b50 <main@@Base+0xe0>

00010ba8 <_start@@Base>:
   10ba8:	mov	fp, #0
   10bac:	mov	lr, #0
   10bb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10bb4:	mov	r2, sp
   10bb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10bc0:	ldr	ip, [pc, #16]	; 10bd8 <_start@@Base+0x30>
   10bc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bc8:	ldr	r0, [pc, #12]	; 10bdc <_start@@Base+0x34>
   10bcc:	ldr	r3, [pc, #12]	; 10be0 <_start@@Base+0x38>
   10bd0:	bl	10a1c <__libc_start_main@plt>
   10bd4:	bl	10a64 <abort@plt>
   10bd8:	andeq	r1, r1, ip, ror #6
   10bdc:	andeq	r0, r1, r0, ror sl
   10be0:	andeq	r1, r1, ip, lsl #6
   10be4:	ldr	r3, [pc, #20]	; 10c00 <_start@@Base+0x58>
   10be8:	ldr	r2, [pc, #20]	; 10c04 <_start@@Base+0x5c>
   10bec:	add	r3, pc, r3
   10bf0:	ldr	r2, [r3, r2]
   10bf4:	cmp	r2, #0
   10bf8:	bxeq	lr
   10bfc:	b	10a28 <__gmon_start__@plt>
   10c00:	andeq	r1, r1, ip, lsl #8
   10c04:	andeq	r0, r0, r4, asr r0
   10c08:	ldr	r0, [pc, #24]	; 10c28 <_start@@Base+0x80>
   10c0c:	ldr	r3, [pc, #24]	; 10c2c <_start@@Base+0x84>
   10c10:	cmp	r3, r0
   10c14:	bxeq	lr
   10c18:	ldr	r3, [pc, #16]	; 10c30 <_start@@Base+0x88>
   10c1c:	cmp	r3, #0
   10c20:	bxeq	lr
   10c24:	bx	r3
   10c28:	andeq	r2, r2, r0, rrx
   10c2c:	andeq	r2, r2, r0, rrx
   10c30:	andeq	r0, r0, r0
   10c34:	ldr	r0, [pc, #36]	; 10c60 <_start@@Base+0xb8>
   10c38:	ldr	r1, [pc, #36]	; 10c64 <_start@@Base+0xbc>
   10c3c:	sub	r1, r1, r0
   10c40:	asr	r1, r1, #2
   10c44:	add	r1, r1, r1, lsr #31
   10c48:	asrs	r1, r1, #1
   10c4c:	bxeq	lr
   10c50:	ldr	r3, [pc, #16]	; 10c68 <_start@@Base+0xc0>
   10c54:	cmp	r3, #0
   10c58:	bxeq	lr
   10c5c:	bx	r3
   10c60:	andeq	r2, r2, r0, rrx
   10c64:	andeq	r2, r2, r0, rrx
   10c68:	andeq	r0, r0, r0
   10c6c:	push	{r4, lr}
   10c70:	ldr	r4, [pc, #24]	; 10c90 <_start@@Base+0xe8>
   10c74:	ldrb	r3, [r4]
   10c78:	cmp	r3, #0
   10c7c:	popne	{r4, pc}
   10c80:	bl	10c08 <_start@@Base+0x60>
   10c84:	mov	r3, #1
   10c88:	strb	r3, [r4]
   10c8c:	pop	{r4, pc}
   10c90:	andeq	r2, r2, r4, rrx
   10c94:	b	10c34 <_start@@Base+0x8c>

00010c98 <imprime@@Base>:
   10c98:	mov	r1, #0
   10c9c:	strd	r4, [sp, #-16]!
   10ca0:	movw	r5, #4988	; 0x137c
   10ca4:	movt	r5, #1
   10ca8:	str	r6, [sp, #8]
   10cac:	mov	r6, r0
   10cb0:	str	lr, [sp, #12]
   10cb4:	mov	r0, r6
   10cb8:	add	r4, r1, #1
   10cbc:	bl	10e68 <vetor_elemento@@Base>
   10cc0:	mov	r2, r0
   10cc4:	mov	r1, r4
   10cc8:	mov	r0, r5
   10ccc:	bl	109b0 <printf@plt>
   10cd0:	cmp	r4, #5
   10cd4:	mov	r1, r4
   10cd8:	bne	10cb4 <imprime@@Base+0x1c>
   10cdc:	ldrd	r4, [sp]
   10ce0:	ldr	r6, [sp, #8]
   10ce4:	add	sp, sp, #12
   10ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00010cec <vetor_novo@@Base>:
   10cec:	mov	r0, #12
   10cf0:	strd	r4, [sp, #-16]!
   10cf4:	str	r6, [sp, #8]
   10cf8:	str	lr, [sp, #12]
   10cfc:	bl	10a10 <malloc@plt>
   10d00:	cmp	r0, #0
   10d04:	beq	10d1c <vetor_novo@@Base+0x30>
   10d08:	mov	r4, #0
   10d0c:	mov	r5, #0
   10d10:	mov	r3, #0
   10d14:	strd	r4, [r0]
   10d18:	str	r3, [r0, #8]
   10d1c:	ldrd	r4, [sp]
   10d20:	ldr	r6, [sp, #8]
   10d24:	add	sp, sp, #12
   10d28:	pop	{pc}		; (ldr pc, [sp], #4)

00010d2c <vetor_apaga@@Base>:
   10d2c:	strd	r4, [sp, #-16]!
   10d30:	subs	r5, r0, #0
   10d34:	str	r6, [sp, #8]
   10d38:	str	lr, [sp, #12]
   10d3c:	beq	10d8c <vetor_apaga@@Base+0x60>
   10d40:	ldr	r3, [r5]
   10d44:	cmp	r3, #0
   10d48:	ble	10d6c <vetor_apaga@@Base+0x40>
   10d4c:	mov	r4, #0
   10d50:	ldr	r3, [r5, #8]
   10d54:	ldr	r0, [r3, r4, lsl #2]
   10d58:	add	r4, r4, #1
   10d5c:	bl	109bc <free@plt>
   10d60:	ldr	r3, [r5]
   10d64:	cmp	r3, r4
   10d68:	bgt	10d50 <vetor_apaga@@Base+0x24>
   10d6c:	ldr	r0, [r5, #8]
   10d70:	bl	109bc <free@plt>
   10d74:	mov	r0, r5
   10d78:	ldrd	r4, [sp]
   10d7c:	ldr	r6, [sp, #8]
   10d80:	ldr	lr, [sp, #12]
   10d84:	add	sp, sp, #16
   10d88:	b	109bc <free@plt>
   10d8c:	ldrd	r4, [sp]
   10d90:	ldr	r6, [sp, #8]
   10d94:	add	sp, sp, #12
   10d98:	pop	{pc}		; (ldr pc, [sp], #4)

00010d9c <vetor_atribui@@Base>:
   10d9c:	cmp	r0, #0
   10da0:	lsrne	r3, r1, #31
   10da4:	moveq	r3, #1
   10da8:	cmp	r3, #0
   10dac:	bne	10e50 <vetor_atribui@@Base+0xb4>
   10db0:	ldr	r3, [r0]
   10db4:	cmp	r3, r1
   10db8:	ble	10e50 <vetor_atribui@@Base+0xb4>
   10dbc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10dc0:	mov	r5, r0
   10dc4:	mov	r0, r2
   10dc8:	mov	r4, r1
   10dcc:	strd	r6, [sp, #8]
   10dd0:	mov	r6, r2
   10dd4:	strd	r8, [sp, #16]
   10dd8:	str	sl, [sp, #24]
   10ddc:	str	lr, [sp, #28]
   10de0:	bl	10a34 <strlen@plt>
   10de4:	ldr	r8, [r5, #8]
   10de8:	mov	r9, r0
   10dec:	ldr	r7, [r8, r4, lsl #2]
   10df0:	mov	r0, r7
   10df4:	bl	10a34 <strlen@plt>
   10df8:	cmp	r0, r9
   10dfc:	bcc	10e28 <vetor_atribui@@Base+0x8c>
   10e00:	mov	r1, r6
   10e04:	mov	r0, r7
   10e08:	bl	109f8 <strcpy@plt>
   10e0c:	mov	r0, r4
   10e10:	ldrd	r4, [sp]
   10e14:	ldrd	r6, [sp, #8]
   10e18:	ldrd	r8, [sp, #16]
   10e1c:	ldr	sl, [sp, #24]
   10e20:	add	sp, sp, #28
   10e24:	pop	{pc}		; (ldr pc, [sp], #4)
   10e28:	mov	r0, r7
   10e2c:	add	r1, r9, #1
   10e30:	bl	109e0 <realloc@plt>
   10e34:	ldr	r3, [r5, #8]
   10e38:	str	r0, [r8, r4, lsl #2]
   10e3c:	ldr	r7, [r3, r4, lsl #2]
   10e40:	cmp	r7, #0
   10e44:	bne	10e00 <vetor_atribui@@Base+0x64>
   10e48:	mvn	r0, #0
   10e4c:	b	10e10 <vetor_atribui@@Base+0x74>
   10e50:	mvn	r0, #0
   10e54:	bx	lr

00010e58 <vetor_tamanho@@Base>:
   10e58:	cmp	r0, #0
   10e5c:	ldrne	r0, [r0]
   10e60:	mvneq	r0, #0
   10e64:	bx	lr

00010e68 <vetor_elemento@@Base>:
   10e68:	cmp	r0, #0
   10e6c:	lsrne	r3, r1, #31
   10e70:	moveq	r3, #1
   10e74:	cmp	r3, #0
   10e78:	bne	10e94 <vetor_elemento@@Base+0x2c>
   10e7c:	ldr	r2, [r0]
   10e80:	cmp	r2, r1
   10e84:	ble	10e94 <vetor_elemento@@Base+0x2c>
   10e88:	ldr	r3, [r0, #8]
   10e8c:	ldr	r0, [r3, r1, lsl #2]
   10e90:	bx	lr
   10e94:	mov	r0, #0
   10e98:	bx	lr

00010e9c <vetor_insere@@Base>:
   10e9c:	cmp	r0, #0
   10ea0:	lsrne	r3, r2, #31
   10ea4:	moveq	r3, #1
   10ea8:	cmp	r3, #0
   10eac:	bne	10f8c <vetor_insere@@Base+0xf0>
   10eb0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10eb4:	strd	r6, [sp, #8]
   10eb8:	ldr	r6, [r0]
   10ebc:	str	r8, [sp, #16]
   10ec0:	str	lr, [sp, #20]
   10ec4:	cmp	r6, r2
   10ec8:	blt	10f84 <vetor_insere@@Base+0xe8>
   10ecc:	ldmib	r0, {r3, r5}
   10ed0:	mov	r7, r0
   10ed4:	mov	r8, r1
   10ed8:	mov	r4, r2
   10edc:	cmp	r6, r3
   10ee0:	beq	10f4c <vetor_insere@@Base+0xb0>
   10ee4:	cmp	r4, r6
   10ee8:	addlt	r3, r5, r6, lsl #2
   10eec:	addlt	r2, r5, r4, lsl #2
   10ef0:	bge	10f04 <vetor_insere@@Base+0x68>
   10ef4:	ldr	ip, [r3, #-4]
   10ef8:	str	ip, [r3], #-4
   10efc:	cmp	r2, r3
   10f00:	bne	10ef4 <vetor_insere@@Base+0x58>
   10f04:	mov	r0, r8
   10f08:	bl	10a34 <strlen@plt>
   10f0c:	add	r0, r0, #1
   10f10:	mov	r1, #1
   10f14:	bl	10998 <calloc@plt>
   10f18:	cmp	r0, #0
   10f1c:	str	r0, [r5, r4, lsl #2]
   10f20:	beq	10f84 <vetor_insere@@Base+0xe8>
   10f24:	mov	r1, r8
   10f28:	bl	109f8 <strcpy@plt>
   10f2c:	add	r1, r6, #1
   10f30:	mov	r0, r4
   10f34:	str	r1, [r7]
   10f38:	ldrd	r4, [sp]
   10f3c:	ldrd	r6, [sp, #8]
   10f40:	ldr	r8, [sp, #16]
   10f44:	add	sp, sp, #20
   10f48:	pop	{pc}		; (ldr pc, [sp], #4)
   10f4c:	cmp	r6, #0
   10f50:	mov	r0, r5
   10f54:	lslne	r3, r6, #1
   10f58:	moveq	r3, #1
   10f5c:	moveq	r1, #4
   10f60:	lslne	r1, r6, #3
   10f64:	str	r3, [r7, #4]
   10f68:	bl	109e0 <realloc@plt>
   10f6c:	cmp	r0, #0
   10f70:	mov	r5, r0
   10f74:	str	r0, [r7, #8]
   10f78:	beq	10f84 <vetor_insere@@Base+0xe8>
   10f7c:	ldr	r6, [r7]
   10f80:	b	10ee4 <vetor_insere@@Base+0x48>
   10f84:	mvn	r0, #0
   10f88:	b	10f38 <vetor_insere@@Base+0x9c>
   10f8c:	mvn	r0, #0
   10f90:	bx	lr

00010f94 <vetor_remove@@Base>:
   10f94:	cmp	r0, #0
   10f98:	lsrne	r3, r1, #31
   10f9c:	moveq	r3, #1
   10fa0:	cmp	r3, #0
   10fa4:	bne	11024 <vetor_remove@@Base+0x90>
   10fa8:	ldr	r3, [r0]
   10fac:	cmp	r3, r1
   10fb0:	ble	11024 <vetor_remove@@Base+0x90>
   10fb4:	ldr	r3, [r0, #8]
   10fb8:	strd	r4, [sp, #-16]!
   10fbc:	mov	r5, r0
   10fc0:	mov	r4, r1
   10fc4:	ldr	r0, [r3, r1, lsl #2]
   10fc8:	str	r6, [sp, #8]
   10fcc:	lsl	r6, r1, #2
   10fd0:	str	lr, [sp, #12]
   10fd4:	bl	109bc <free@plt>
   10fd8:	ldr	r0, [r5]
   10fdc:	add	r1, r4, #1
   10fe0:	cmp	r1, r0
   10fe4:	bge	11008 <vetor_remove@@Base+0x74>
   10fe8:	ldr	r3, [r5, #8]
   10fec:	sub	r1, r3, #4
   10ff0:	add	r3, r3, r6
   10ff4:	add	r1, r1, r0, lsl #2
   10ff8:	ldr	r2, [r3, #4]
   10ffc:	str	r2, [r3], #4
   11000:	cmp	r1, r3
   11004:	bne	10ff8 <vetor_remove@@Base+0x64>
   11008:	sub	r3, r0, #1
   1100c:	ldr	r6, [sp, #8]
   11010:	mov	r0, #0
   11014:	str	r3, [r5]
   11018:	ldrd	r4, [sp]
   1101c:	add	sp, sp, #12
   11020:	pop	{pc}		; (ldr pc, [sp], #4)
   11024:	mvn	r0, #0
   11028:	bx	lr

0001102c <vetor_pesquisa@@Base>:
   1102c:	cmp	r0, #0
   11030:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11034:	strd	r6, [sp, #8]
   11038:	str	r8, [sp, #16]
   1103c:	str	lr, [sp, #20]
   11040:	beq	1109c <vetor_pesquisa@@Base+0x70>
   11044:	ldr	r7, [r0]
   11048:	cmp	r7, #0
   1104c:	ble	1109c <vetor_pesquisa@@Base+0x70>
   11050:	ldr	r5, [r0, #8]
   11054:	mov	r6, r1
   11058:	mov	r4, #0
   1105c:	sub	r5, r5, #4
   11060:	b	11070 <vetor_pesquisa@@Base+0x44>
   11064:	add	r4, r4, #1
   11068:	cmp	r7, r4
   1106c:	beq	1109c <vetor_pesquisa@@Base+0x70>
   11070:	mov	r1, r6
   11074:	ldr	r0, [r5, #4]!
   11078:	bl	109a4 <strcmp@plt>
   1107c:	cmp	r0, #0
   11080:	bne	11064 <vetor_pesquisa@@Base+0x38>
   11084:	mov	r0, r4
   11088:	ldrd	r4, [sp]
   1108c:	ldrd	r6, [sp, #8]
   11090:	ldr	r8, [sp, #16]
   11094:	add	sp, sp, #20
   11098:	pop	{pc}		; (ldr pc, [sp], #4)
   1109c:	mvn	r4, #0
   110a0:	b	11084 <vetor_pesquisa@@Base+0x58>

000110a4 <vetor_ordena@@Base>:
   110a4:	cmp	r0, #0
   110a8:	beq	1114c <vetor_ordena@@Base+0xa8>
   110ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   110b0:	strd	r6, [sp, #8]
   110b4:	strd	sl, [sp, #24]
   110b8:	ldr	sl, [r0]
   110bc:	strd	r8, [sp, #16]
   110c0:	str	lr, [sp, #32]
   110c4:	sub	sp, sp, #12
   110c8:	cmp	sl, #1
   110cc:	ble	1112c <vetor_ordena@@Base+0x88>
   110d0:	ldr	r3, [r0, #8]
   110d4:	mov	r8, #1
   110d8:	mov	r9, r3
   110dc:	str	r3, [sp, #4]
   110e0:	ldr	r7, [r9, #4]!
   110e4:	mov	r5, r8
   110e8:	mov	r4, r9
   110ec:	ldr	r6, [r4, #-4]
   110f0:	mov	r0, r7
   110f4:	mov	fp, r4
   110f8:	mov	r1, r6
   110fc:	bl	109a4 <strcmp@plt>
   11100:	cmp	r0, #0
   11104:	bge	1111c <vetor_ordena@@Base+0x78>
   11108:	subs	r5, r5, #1
   1110c:	str	r6, [r4]
   11110:	sub	r4, fp, #4
   11114:	bne	110ec <vetor_ordena@@Base+0x48>
   11118:	ldr	fp, [sp, #4]
   1111c:	add	r8, r8, #1
   11120:	str	r7, [fp]
   11124:	cmp	r8, sl
   11128:	bne	110e0 <vetor_ordena@@Base+0x3c>
   1112c:	mov	r0, #0
   11130:	add	sp, sp, #12
   11134:	ldrd	r4, [sp]
   11138:	ldrd	r6, [sp, #8]
   1113c:	ldrd	r8, [sp, #16]
   11140:	ldrd	sl, [sp, #24]
   11144:	add	sp, sp, #32
   11148:	pop	{pc}		; (ldr pc, [sp], #4)
   1114c:	mvn	r0, #0
   11150:	bx	lr

00011154 <vetor_concatena@@Base>:
   11154:	clz	r3, r1
   11158:	cmp	r0, #0
   1115c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11160:	lsr	r3, r3, #5
   11164:	moveq	r4, #1
   11168:	strd	r6, [sp, #8]
   1116c:	str	r8, [sp, #16]
   11170:	movne	r4, r3
   11174:	str	lr, [sp, #20]
   11178:	cmp	r4, #0
   1117c:	bne	111f4 <vetor_concatena@@Base+0xa0>
   11180:	mov	r7, r1
   11184:	mov	r5, r0
   11188:	mov	r0, #12
   1118c:	bl	10a10 <malloc@plt>
   11190:	ldr	r2, [r5]
   11194:	subs	r6, r0, #0
   11198:	ldr	r1, [r7]
   1119c:	add	r0, r2, r1, lsl #2
   111a0:	beq	111fc <vetor_concatena@@Base+0xa8>
   111a4:	ldmib	r5, {r3, ip}
   111a8:	str	r4, [r6]
   111ac:	ldr	lr, [r7, #4]
   111b0:	str	r0, [r6, #8]
   111b4:	ldr	r0, [r2, r1, lsl #2]
   111b8:	ldr	r1, [ip]
   111bc:	add	r3, r3, lr
   111c0:	str	r3, [r6, #4]
   111c4:	bl	109f8 <strcpy@plt>
   111c8:	ldr	r3, [r6, #8]
   111cc:	ldr	r2, [r7, #8]
   111d0:	ldr	r0, [r3]
   111d4:	ldr	r1, [r2]
   111d8:	bl	109ec <strcat@plt>
   111dc:	mov	r0, r6
   111e0:	ldrd	r4, [sp]
   111e4:	ldrd	r6, [sp, #8]
   111e8:	ldr	r8, [sp, #16]
   111ec:	add	sp, sp, #20
   111f0:	pop	{pc}		; (ldr pc, [sp], #4)
   111f4:	mov	r6, #0
   111f8:	b	111dc <vetor_concatena@@Base+0x88>
   111fc:	str	r0, [r6, #8]
   11200:	udf	#0

00011204 <vetor_inverte@@Base>:
   11204:	cmp	r0, #0
   11208:	beq	1126c <vetor_inverte@@Base+0x68>
   1120c:	ldr	r2, [r0]
   11210:	cmp	r2, #0
   11214:	ble	1126c <vetor_inverte@@Base+0x68>
   11218:	ldr	r1, [r0, #8]
   1121c:	mov	r3, r2
   11220:	strd	r4, [sp, #-12]!
   11224:	str	lr, [sp, #8]
   11228:	add	r0, r1, r2, lsl #2
   1122c:	sub	r1, r1, #4
   11230:	ldr	ip, [r1, #4]!
   11234:	sub	r3, r3, #1
   11238:	cmp	r2, r3
   1123c:	sub	r4, r2, r3
   11240:	ldr	lr, [r0]
   11244:	movlt	r5, r2
   11248:	movge	r5, r3
   1124c:	cmp	r5, r4
   11250:	str	lr, [r1]
   11254:	str	ip, [r0], #-4
   11258:	bgt	11230 <vetor_inverte@@Base+0x2c>
   1125c:	ldrd	r4, [sp]
   11260:	add	sp, sp, #8
   11264:	mov	r0, #0
   11268:	pop	{pc}		; (ldr pc, [sp], #4)
   1126c:	mov	r0, #0
   11270:	bx	lr

00011274 <vetor_baralha@@Base>:
   11274:	strd	r4, [sp, #-20]!	; 0xffffffec
   11278:	strd	r6, [sp, #8]
   1127c:	str	lr, [sp, #16]
   11280:	sub	sp, sp, #12
   11284:	ldr	r7, [r0]
   11288:	mov	r0, #12
   1128c:	bl	10a10 <malloc@plt>
   11290:	subs	r6, r0, #0
   11294:	beq	112ac <vetor_baralha@@Base+0x38>
   11298:	mov	r0, #0
   1129c:	mov	r1, #0
   112a0:	mov	r3, #0
   112a4:	strd	r0, [r6]
   112a8:	str	r3, [r6, #8]
   112ac:	add	r0, sp, #4
   112b0:	bl	109d4 <time@plt>
   112b4:	bl	10a40 <srand@plt>
   112b8:	cmp	r7, #0
   112bc:	ble	112f4 <vetor_baralha@@Base+0x80>
   112c0:	add	r5, r7, #1
   112c4:	mov	r4, #0
   112c8:	bl	10a4c <rand@plt>
   112cc:	sdiv	r2, r0, r5
   112d0:	ldr	r3, [r6, #8]
   112d4:	ldr	r1, [r3, r4, lsl #2]
   112d8:	mls	r0, r2, r5, r0
   112dc:	ldr	r2, [r3, r0, lsl #2]
   112e0:	str	r2, [r3, r4, lsl #2]
   112e4:	add	r4, r4, #1
   112e8:	cmp	r7, r4
   112ec:	str	r1, [r3, r0, lsl #2]
   112f0:	bne	112c8 <vetor_baralha@@Base+0x54>
   112f4:	mov	r0, r6
   112f8:	add	sp, sp, #12
   112fc:	ldrd	r4, [sp]
   11300:	ldrd	r6, [sp, #8]
   11304:	add	sp, sp, #16
   11308:	pop	{pc}		; (ldr pc, [sp], #4)

0001130c <__libc_csu_init@@Base>:
   1130c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11310:	mov	r7, r0
   11314:	ldr	r6, [pc, #72]	; 11364 <__libc_csu_init@@Base+0x58>
   11318:	ldr	r5, [pc, #72]	; 11368 <__libc_csu_init@@Base+0x5c>
   1131c:	add	r6, pc, r6
   11320:	add	r5, pc, r5
   11324:	sub	r6, r6, r5
   11328:	mov	r8, r1
   1132c:	mov	r9, r2
   11330:	bl	10978 <calloc@plt-0x20>
   11334:	asrs	r6, r6, #2
   11338:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1133c:	mov	r4, #0
   11340:	add	r4, r4, #1
   11344:	ldr	r3, [r5], #4
   11348:	mov	r2, r9
   1134c:	mov	r1, r8
   11350:	mov	r0, r7
   11354:	blx	r3
   11358:	cmp	r6, r4
   1135c:	bne	11340 <__libc_csu_init@@Base+0x34>
   11360:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11364:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11368:	andeq	r0, r1, r8, ror #23

0001136c <__libc_csu_fini@@Base>:
   1136c:	bx	lr

Disassembly of section .fini:

00011370 <.fini>:
   11370:	push	{r3, lr}
   11374:	pop	{r3, pc}
