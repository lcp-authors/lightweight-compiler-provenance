
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010dcc <.init>:
   10dcc:	push	{r3, lr}
   10dd0:	bl	110a4 <close@plt+0x48>
   10dd4:	pop	{r3, pc}

Disassembly of section .plt:

00010dd8 <calloc@plt-0x14>:
   10dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10ddc:	ldr	lr, [pc, #4]	; 10de8 <calloc@plt-0x4>
   10de0:	add	lr, pc, lr
   10de4:	ldr	pc, [lr, #8]!
   10de8:	andeq	sl, r1, r8, lsl r2

00010dec <calloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #106496	; 0x1a000
   10df4:	ldr	pc, [ip, #536]!	; 0x218

00010df8 <fputs_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #106496	; 0x1a000
   10e00:	ldr	pc, [ip, #528]!	; 0x210

00010e04 <raise@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #106496	; 0x1a000
   10e0c:	ldr	pc, [ip, #520]!	; 0x208

00010e10 <strcmp@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #106496	; 0x1a000
   10e18:	ldr	pc, [ip, #512]!	; 0x200

00010e1c <printf@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #106496	; 0x1a000
   10e24:	ldr	pc, [ip, #504]!	; 0x1f8

00010e28 <fflush@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #106496	; 0x1a000
   10e30:	ldr	pc, [ip, #496]!	; 0x1f0

00010e34 <free@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #106496	; 0x1a000
   10e3c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e40 <_exit@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #106496	; 0x1a000
   10e48:	ldr	pc, [ip, #480]!	; 0x1e0

00010e4c <memcpy@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #106496	; 0x1a000
   10e54:	ldr	pc, [ip, #472]!	; 0x1d8

00010e58 <mbsinit@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #106496	; 0x1a000
   10e60:	ldr	pc, [ip, #464]!	; 0x1d0

00010e64 <fwrite_unlocked@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #106496	; 0x1a000
   10e6c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e70 <memcmp@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #106496	; 0x1a000
   10e78:	ldr	pc, [ip, #448]!	; 0x1c0

00010e7c <fputc_unlocked@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #106496	; 0x1a000
   10e84:	ldr	pc, [ip, #440]!	; 0x1b8

00010e88 <dup2@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #106496	; 0x1a000
   10e90:	ldr	pc, [ip, #432]!	; 0x1b0

00010e94 <realloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #106496	; 0x1a000
   10e9c:	ldr	pc, [ip, #424]!	; 0x1a8

00010ea0 <textdomain@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #106496	; 0x1a000
   10ea8:	ldr	pc, [ip, #416]!	; 0x1a0

00010eac <iswprint@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #106496	; 0x1a000
   10eb4:	ldr	pc, [ip, #408]!	; 0x198

00010eb8 <fwrite@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #106496	; 0x1a000
   10ec0:	ldr	pc, [ip, #400]!	; 0x190

00010ec4 <lseek64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #106496	; 0x1a000
   10ecc:	ldr	pc, [ip, #392]!	; 0x188

00010ed0 <__ctype_get_mb_cur_max@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #106496	; 0x1a000
   10ed8:	ldr	pc, [ip, #384]!	; 0x180

00010edc <__fpending@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #106496	; 0x1a000
   10ee4:	ldr	pc, [ip, #376]!	; 0x178

00010ee8 <ferror_unlocked@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #106496	; 0x1a000
   10ef0:	ldr	pc, [ip, #368]!	; 0x170

00010ef4 <mbrtowc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #106496	; 0x1a000
   10efc:	ldr	pc, [ip, #360]!	; 0x168

00010f00 <error@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #106496	; 0x1a000
   10f08:	ldr	pc, [ip, #352]!	; 0x160

00010f0c <fnmatch@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #106496	; 0x1a000
   10f14:	ldr	pc, [ip, #344]!	; 0x158

00010f18 <open64@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #106496	; 0x1a000
   10f20:	ldr	pc, [ip, #336]!	; 0x150

00010f24 <getenv@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #106496	; 0x1a000
   10f2c:	ldr	pc, [ip, #328]!	; 0x148

00010f30 <puts@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #106496	; 0x1a000
   10f38:	ldr	pc, [ip, #320]!	; 0x140

00010f3c <malloc@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #106496	; 0x1a000
   10f44:	ldr	pc, [ip, #312]!	; 0x138

00010f48 <__libc_start_main@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #106496	; 0x1a000
   10f50:	ldr	pc, [ip, #304]!	; 0x130

00010f54 <__freading@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #106496	; 0x1a000
   10f5c:	ldr	pc, [ip, #296]!	; 0x128

00010f60 <__gmon_start__@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #106496	; 0x1a000
   10f68:	ldr	pc, [ip, #288]!	; 0x120

00010f6c <freopen64@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #106496	; 0x1a000
   10f74:	ldr	pc, [ip, #280]!	; 0x118

00010f78 <getopt_long@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #106496	; 0x1a000
   10f80:	ldr	pc, [ip, #272]!	; 0x110

00010f84 <__ctype_b_loc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #106496	; 0x1a000
   10f8c:	ldr	pc, [ip, #264]!	; 0x108

00010f90 <exit@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #106496	; 0x1a000
   10f98:	ldr	pc, [ip, #256]!	; 0x100

00010f9c <gettext@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #106496	; 0x1a000
   10fa4:	ldr	pc, [ip, #248]!	; 0xf8

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #106496	; 0x1a000
   10fb0:	ldr	pc, [ip, #240]!	; 0xf0

00010fb4 <fprintf@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #106496	; 0x1a000
   10fbc:	ldr	pc, [ip, #232]!	; 0xe8

00010fc0 <__errno_location@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #106496	; 0x1a000
   10fc8:	ldr	pc, [ip, #224]!	; 0xe0

00010fcc <__cxa_atexit@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #106496	; 0x1a000
   10fd4:	ldr	pc, [ip, #216]!	; 0xd8

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #106496	; 0x1a000
   10fe0:	ldr	pc, [ip, #208]!	; 0xd0

00010fe4 <fileno@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #106496	; 0x1a000
   10fec:	ldr	pc, [ip, #200]!	; 0xc8

00010ff0 <fclose@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #106496	; 0x1a000
   10ff8:	ldr	pc, [ip, #192]!	; 0xc0

00010ffc <fseeko64@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #106496	; 0x1a000
   11004:	ldr	pc, [ip, #184]!	; 0xb8

00011008 <setlocale@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #106496	; 0x1a000
   11010:	ldr	pc, [ip, #176]!	; 0xb0

00011014 <strrchr@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #106496	; 0x1a000
   1101c:	ldr	pc, [ip, #168]!	; 0xa8

00011020 <nl_langinfo@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #106496	; 0x1a000
   11028:	ldr	pc, [ip, #160]!	; 0xa0

0001102c <bindtextdomain@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #106496	; 0x1a000
   11034:	ldr	pc, [ip, #152]!	; 0x98

00011038 <getline@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #106496	; 0x1a000
   11040:	ldr	pc, [ip, #144]!	; 0x90

00011044 <strncmp@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #106496	; 0x1a000
   1104c:	ldr	pc, [ip, #136]!	; 0x88

00011050 <abort@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #106496	; 0x1a000
   11058:	ldr	pc, [ip, #128]!	; 0x80

0001105c <close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #106496	; 0x1a000
   11064:	ldr	pc, [ip, #120]!	; 0x78

Disassembly of section .text:

00011068 <_obstack_begin@@Base-0x224c>:
   11068:	mov	fp, #0
   1106c:	mov	lr, #0
   11070:	pop	{r1}		; (ldr r1, [sp], #4)
   11074:	mov	r2, sp
   11078:	push	{r2}		; (str r2, [sp, #-4]!)
   1107c:	push	{r0}		; (str r0, [sp, #-4]!)
   11080:	ldr	ip, [pc, #16]	; 11098 <close@plt+0x3c>
   11084:	push	{ip}		; (str ip, [sp, #-4]!)
   11088:	ldr	r0, [pc, #12]	; 1109c <close@plt+0x40>
   1108c:	ldr	r3, [pc, #12]	; 110a0 <close@plt+0x44>
   11090:	bl	10f48 <__libc_start_main@plt>
   11094:	bl	11050 <abort@plt>
   11098:	andeq	r8, r1, ip, asr #8
   1109c:	andeq	r2, r1, r8, lsr #5
   110a0:	andeq	r8, r1, ip, ror #7
   110a4:	ldr	r3, [pc, #20]	; 110c0 <close@plt+0x64>
   110a8:	ldr	r2, [pc, #20]	; 110c4 <close@plt+0x68>
   110ac:	add	r3, pc, r3
   110b0:	ldr	r2, [r3, r2]
   110b4:	cmp	r2, #0
   110b8:	bxeq	lr
   110bc:	b	10f60 <__gmon_start__@plt>
   110c0:	andeq	r9, r1, ip, asr #30
   110c4:	andeq	r0, r0, r0, ror #1
   110c8:	ldr	r3, [pc, #28]	; 110ec <close@plt+0x90>
   110cc:	ldr	r0, [pc, #28]	; 110f0 <close@plt+0x94>
   110d0:	sub	r3, r3, r0
   110d4:	cmp	r3, #6
   110d8:	bxls	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <close@plt+0x98>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	fp, r2, fp, lsr r1
   110f0:	andeq	fp, r2, r8, lsr r1
   110f4:	andeq	r0, r0, r0
   110f8:	ldr	r1, [pc, #36]	; 11124 <close@plt+0xc8>
   110fc:	ldr	r0, [pc, #36]	; 11128 <close@plt+0xcc>
   11100:	sub	r1, r1, r0
   11104:	asr	r1, r1, #2
   11108:	add	r1, r1, r1, lsr #31
   1110c:	asrs	r1, r1, #1
   11110:	bxeq	lr
   11114:	ldr	r3, [pc, #16]	; 1112c <close@plt+0xd0>
   11118:	cmp	r3, #0
   1111c:	bxeq	lr
   11120:	bx	r3
   11124:	andeq	fp, r2, r8, lsr r1
   11128:	andeq	fp, r2, r8, lsr r1
   1112c:	andeq	r0, r0, r0
   11130:	push	{r4, lr}
   11134:	ldr	r4, [pc, #24]	; 11154 <close@plt+0xf8>
   11138:	ldrb	r3, [r4]
   1113c:	cmp	r3, #0
   11140:	popne	{r4, pc}
   11144:	bl	110c8 <close@plt+0x6c>
   11148:	mov	r3, #1
   1114c:	strb	r3, [r4]
   11150:	pop	{r4, pc}
   11154:	andeq	fp, r2, r8, asr r1
   11158:	ldr	r0, [pc, #40]	; 11188 <close@plt+0x12c>
   1115c:	ldr	r3, [r0]
   11160:	cmp	r3, #0
   11164:	bne	1116c <close@plt+0x110>
   11168:	b	110f8 <close@plt+0x9c>
   1116c:	ldr	r3, [pc, #24]	; 1118c <close@plt+0x130>
   11170:	cmp	r3, #0
   11174:	beq	11168 <close@plt+0x10c>
   11178:	push	{r4, lr}
   1117c:	blx	r3
   11180:	pop	{r4, lr}
   11184:	b	110f8 <close@plt+0x9c>
   11188:	andeq	sl, r2, r4, lsl pc
   1118c:	andeq	r0, r0, r0
   11190:	push	{fp}		; (str fp, [sp, #-4]!)
   11194:	add	fp, sp, #0
   11198:	sub	sp, sp, #12
   1119c:	mov	r3, r0
   111a0:	strb	r3, [fp, #-5]
   111a4:	ldrb	r3, [fp, #-5]
   111a8:	mov	r0, r3
   111ac:	add	sp, fp, #0
   111b0:	pop	{fp}		; (ldr fp, [sp], #4)
   111b4:	bx	lr
   111b8:	push	{fp, lr}
   111bc:	add	fp, sp, #4
   111c0:	sub	sp, sp, #80	; 0x50
   111c4:	str	r0, [fp, #-80]	; 0xffffffb0
   111c8:	ldr	r3, [pc, #348]	; 1132c <close@plt+0x2d0>
   111cc:	sub	ip, fp, #72	; 0x48
   111d0:	mov	lr, r3
   111d4:	ldm	lr!, {r0, r1, r2, r3}
   111d8:	stmia	ip!, {r0, r1, r2, r3}
   111dc:	ldm	lr!, {r0, r1, r2, r3}
   111e0:	stmia	ip!, {r0, r1, r2, r3}
   111e4:	ldm	lr!, {r0, r1, r2, r3}
   111e8:	stmia	ip!, {r0, r1, r2, r3}
   111ec:	ldm	lr, {r0, r1}
   111f0:	stm	ip, {r0, r1}
   111f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   111f8:	str	r3, [fp, #-8]
   111fc:	sub	r3, fp, #72	; 0x48
   11200:	str	r3, [fp, #-12]
   11204:	b	11214 <close@plt+0x1b8>
   11208:	ldr	r3, [fp, #-12]
   1120c:	add	r3, r3, #8
   11210:	str	r3, [fp, #-12]
   11214:	ldr	r3, [fp, #-12]
   11218:	ldr	r3, [r3]
   1121c:	cmp	r3, #0
   11220:	beq	11244 <close@plt+0x1e8>
   11224:	ldr	r3, [fp, #-12]
   11228:	ldr	r3, [r3]
   1122c:	mov	r1, r3
   11230:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11234:	bl	10e10 <strcmp@plt>
   11238:	mov	r3, r0
   1123c:	cmp	r3, #0
   11240:	bne	11208 <close@plt+0x1ac>
   11244:	ldr	r3, [fp, #-12]
   11248:	ldr	r3, [r3, #4]
   1124c:	cmp	r3, #0
   11250:	beq	11260 <close@plt+0x204>
   11254:	ldr	r3, [fp, #-12]
   11258:	ldr	r3, [r3, #4]
   1125c:	str	r3, [fp, #-8]
   11260:	ldr	r0, [pc, #200]	; 11330 <close@plt+0x2d4>
   11264:	bl	10f9c <gettext@plt>
   11268:	mov	r3, r0
   1126c:	ldr	r2, [pc, #192]	; 11334 <close@plt+0x2d8>
   11270:	ldr	r1, [pc, #192]	; 11338 <close@plt+0x2dc>
   11274:	mov	r0, r3
   11278:	bl	10e1c <printf@plt>
   1127c:	mov	r1, #0
   11280:	mov	r0, #5
   11284:	bl	11008 <setlocale@plt>
   11288:	str	r0, [fp, #-16]
   1128c:	ldr	r3, [fp, #-16]
   11290:	cmp	r3, #0
   11294:	beq	112d4 <close@plt+0x278>
   11298:	mov	r2, #3
   1129c:	ldr	r1, [pc, #152]	; 1133c <close@plt+0x2e0>
   112a0:	ldr	r0, [fp, #-16]
   112a4:	bl	11044 <strncmp@plt>
   112a8:	mov	r3, r0
   112ac:	cmp	r3, #0
   112b0:	beq	112d4 <close@plt+0x278>
   112b4:	ldr	r0, [pc, #132]	; 11340 <close@plt+0x2e4>
   112b8:	bl	10f9c <gettext@plt>
   112bc:	mov	r2, r0
   112c0:	ldr	r3, [pc, #124]	; 11344 <close@plt+0x2e8>
   112c4:	ldr	r3, [r3]
   112c8:	mov	r1, r3
   112cc:	mov	r0, r2
   112d0:	bl	10df8 <fputs_unlocked@plt>
   112d4:	ldr	r0, [pc, #108]	; 11348 <close@plt+0x2ec>
   112d8:	bl	10f9c <gettext@plt>
   112dc:	mov	r3, r0
   112e0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   112e4:	ldr	r1, [pc, #72]	; 11334 <close@plt+0x2d8>
   112e8:	mov	r0, r3
   112ec:	bl	10e1c <printf@plt>
   112f0:	ldr	r0, [pc, #84]	; 1134c <close@plt+0x2f0>
   112f4:	bl	10f9c <gettext@plt>
   112f8:	ldr	r2, [fp, #-8]
   112fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11300:	cmp	r2, r3
   11304:	bne	11310 <close@plt+0x2b4>
   11308:	ldr	r3, [pc, #64]	; 11350 <close@plt+0x2f4>
   1130c:	b	11314 <close@plt+0x2b8>
   11310:	ldr	r3, [pc, #60]	; 11354 <close@plt+0x2f8>
   11314:	mov	r2, r3
   11318:	ldr	r1, [fp, #-8]
   1131c:	bl	10e1c <printf@plt>
   11320:	nop			; (mov r0, r0)
   11324:	sub	sp, fp, #4
   11328:	pop	{fp, pc}
   1132c:	andeq	r8, r1, r8, ror #11
   11330:	andeq	r8, r1, r4, ror r4
   11334:	andeq	r8, r1, ip, lsl #9
   11338:			; <UNDEFINED> instruction: 0x000184b4
   1133c:	andeq	r8, r1, r4, asr #9
   11340:	andeq	r8, r1, r8, asr #9
   11344:	andeq	fp, r2, r4, asr r1
   11348:	andeq	r8, r1, r0, lsl r5
   1134c:	andeq	r8, r1, ip, lsr #10
   11350:	andeq	r8, r1, r0, ror #10
   11354:	andeq	r8, r1, ip, ror #10
   11358:	push	{r4, fp, lr}
   1135c:	add	fp, sp, #8
   11360:	sub	sp, sp, #12
   11364:	str	r0, [fp, #-16]
   11368:	ldr	r3, [fp, #-16]
   1136c:	cmp	r3, #0
   11370:	beq	113a0 <close@plt+0x344>
   11374:	ldr	r3, [pc, #212]	; 11450 <close@plt+0x3f4>
   11378:	ldr	r4, [r3]
   1137c:	ldr	r0, [pc, #208]	; 11454 <close@plt+0x3f8>
   11380:	bl	10f9c <gettext@plt>
   11384:	mov	r1, r0
   11388:	ldr	r3, [pc, #200]	; 11458 <close@plt+0x3fc>
   1138c:	ldr	r3, [r3]
   11390:	mov	r2, r3
   11394:	mov	r0, r4
   11398:	bl	10fb4 <fprintf@plt>
   1139c:	b	11448 <close@plt+0x3ec>
   113a0:	ldr	r0, [pc, #180]	; 1145c <close@plt+0x400>
   113a4:	bl	10f9c <gettext@plt>
   113a8:	mov	r2, r0
   113ac:	ldr	r3, [pc, #164]	; 11458 <close@plt+0x3fc>
   113b0:	ldr	r3, [r3]
   113b4:	mov	r1, r3
   113b8:	mov	r0, r2
   113bc:	bl	10e1c <printf@plt>
   113c0:	ldr	r0, [pc, #152]	; 11460 <close@plt+0x404>
   113c4:	bl	10f9c <gettext@plt>
   113c8:	mov	r2, r0
   113cc:	ldr	r3, [pc, #144]	; 11464 <close@plt+0x408>
   113d0:	ldr	r3, [r3]
   113d4:	mov	r1, r3
   113d8:	mov	r0, r2
   113dc:	bl	10df8 <fputs_unlocked@plt>
   113e0:	ldr	r0, [pc, #128]	; 11468 <close@plt+0x40c>
   113e4:	bl	10f9c <gettext@plt>
   113e8:	mov	r2, r0
   113ec:	ldr	r3, [pc, #112]	; 11464 <close@plt+0x408>
   113f0:	ldr	r3, [r3]
   113f4:	mov	r1, r3
   113f8:	mov	r0, r2
   113fc:	bl	10df8 <fputs_unlocked@plt>
   11400:	ldr	r0, [pc, #100]	; 1146c <close@plt+0x410>
   11404:	bl	10f9c <gettext@plt>
   11408:	mov	r2, r0
   1140c:	ldr	r3, [pc, #80]	; 11464 <close@plt+0x408>
   11410:	ldr	r3, [r3]
   11414:	mov	r1, r3
   11418:	mov	r0, r2
   1141c:	bl	10df8 <fputs_unlocked@plt>
   11420:	ldr	r0, [pc, #72]	; 11470 <close@plt+0x414>
   11424:	bl	10f9c <gettext@plt>
   11428:	mov	r2, r0
   1142c:	ldr	r3, [pc, #48]	; 11464 <close@plt+0x408>
   11430:	ldr	r3, [r3]
   11434:	mov	r1, r3
   11438:	mov	r0, r2
   1143c:	bl	10df8 <fputs_unlocked@plt>
   11440:	ldr	r0, [pc, #44]	; 11474 <close@plt+0x418>
   11444:	bl	111b8 <close@plt+0x15c>
   11448:	ldr	r0, [fp, #-16]
   1144c:	bl	10f90 <exit@plt>
   11450:	andeq	fp, r2, r8, asr #2
   11454:	andeq	r9, r1, r4, lsl #21
   11458:	muleq	r2, r0, r1
   1145c:	andeq	r9, r1, ip, lsr #21
   11460:	andeq	r9, r1, ip, asr #21
   11464:	andeq	fp, r2, r4, asr r1
   11468:	andeq	r9, r1, r0, ror #23
   1146c:	andeq	r9, r1, r0, lsl ip
   11470:	andeq	r9, r1, r8, asr #24
   11474:	andeq	r9, r1, r8, lsr #26
   11478:	push	{fp, lr}
   1147c:	add	fp, sp, #4
   11480:	sub	sp, sp, #8
   11484:	ldr	r0, [pc, #124]	; 11508 <close@plt+0x4ac>
   11488:	bl	10f24 <getenv@plt>
   1148c:	str	r0, [fp, #-8]
   11490:	ldr	r3, [fp, #-8]
   11494:	cmp	r3, #0
   11498:	beq	114ac <close@plt+0x450>
   1149c:	ldr	r3, [fp, #-8]
   114a0:	ldrb	r3, [r3]
   114a4:	cmp	r3, #0
   114a8:	bne	114b4 <close@plt+0x458>
   114ac:	mov	r3, #2
   114b0:	b	114fc <close@plt+0x4a0>
   114b4:	ldr	r0, [fp, #-8]
   114b8:	bl	127d8 <close@plt+0x177c>
   114bc:	str	r0, [fp, #-8]
   114c0:	ldr	r1, [pc, #68]	; 1150c <close@plt+0x4b0>
   114c4:	ldr	r0, [fp, #-8]
   114c8:	bl	10e10 <strcmp@plt>
   114cc:	mov	r3, r0
   114d0:	cmp	r3, #0
   114d4:	beq	114f0 <close@plt+0x494>
   114d8:	ldr	r1, [pc, #48]	; 11510 <close@plt+0x4b4>
   114dc:	ldr	r0, [fp, #-8]
   114e0:	bl	10e10 <strcmp@plt>
   114e4:	mov	r3, r0
   114e8:	cmp	r3, #0
   114ec:	bne	114f8 <close@plt+0x49c>
   114f0:	mov	r3, #1
   114f4:	b	114fc <close@plt+0x4a0>
   114f8:	mov	r3, #0
   114fc:	mov	r0, r3
   11500:	sub	sp, fp, #4
   11504:	pop	{fp, pc}
   11508:	andeq	r9, r1, r4, lsr sp
   1150c:	ldrdeq	r9, [r1], -r8
   11510:	andeq	r9, r1, ip, lsr sp
   11514:	push	{r4, fp, lr}
   11518:	add	fp, sp, #8
   1151c:	sub	sp, sp, #36	; 0x24
   11520:	str	r0, [fp, #-32]	; 0xffffffe0
   11524:	str	r1, [fp, #-36]	; 0xffffffdc
   11528:	str	r2, [fp, #-40]	; 0xffffffd8
   1152c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11530:	mov	r2, #0
   11534:	str	r2, [r3]
   11538:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1153c:	mov	r2, #0
   11540:	str	r2, [r3]
   11544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11548:	str	r3, [fp, #-16]
   1154c:	b	1155c <close@plt+0x500>
   11550:	ldr	r3, [fp, #-16]
   11554:	add	r3, r3, #1
   11558:	str	r3, [fp, #-16]
   1155c:	bl	10f84 <__ctype_b_loc@plt>
   11560:	mov	r3, r0
   11564:	ldr	r4, [r3]
   11568:	ldr	r3, [fp, #-16]
   1156c:	ldrb	r3, [r3]
   11570:	mov	r0, r3
   11574:	bl	11190 <close@plt+0x134>
   11578:	mov	r3, r0
   1157c:	lsl	r3, r3, #1
   11580:	add	r3, r4, r3
   11584:	ldrh	r3, [r3]
   11588:	and	r3, r3, #8192	; 0x2000
   1158c:	cmp	r3, #0
   11590:	bne	11550 <close@plt+0x4f4>
   11594:	ldr	r3, [fp, #-16]
   11598:	ldrb	r3, [r3]
   1159c:	cmp	r3, #0
   115a0:	beq	11774 <close@plt+0x718>
   115a4:	ldr	r3, [fp, #-16]
   115a8:	ldrb	r3, [r3]
   115ac:	cmp	r3, #35	; 0x23
   115b0:	beq	11774 <close@plt+0x718>
   115b4:	ldr	r3, [fp, #-16]
   115b8:	str	r3, [fp, #-20]	; 0xffffffec
   115bc:	b	115cc <close@plt+0x570>
   115c0:	ldr	r3, [fp, #-16]
   115c4:	add	r3, r3, #1
   115c8:	str	r3, [fp, #-16]
   115cc:	bl	10f84 <__ctype_b_loc@plt>
   115d0:	mov	r3, r0
   115d4:	ldr	r4, [r3]
   115d8:	ldr	r3, [fp, #-16]
   115dc:	ldrb	r3, [r3]
   115e0:	mov	r0, r3
   115e4:	bl	11190 <close@plt+0x134>
   115e8:	mov	r3, r0
   115ec:	lsl	r3, r3, #1
   115f0:	add	r3, r4, r3
   115f4:	ldrh	r3, [r3]
   115f8:	and	r3, r3, #8192	; 0x2000
   115fc:	cmp	r3, #0
   11600:	bne	11614 <close@plt+0x5b8>
   11604:	ldr	r3, [fp, #-16]
   11608:	ldrb	r3, [r3]
   1160c:	cmp	r3, #0
   11610:	bne	115c0 <close@plt+0x564>
   11614:	ldr	r2, [fp, #-16]
   11618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1161c:	sub	r3, r2, r3
   11620:	mov	r1, r3
   11624:	ldr	r0, [fp, #-20]	; 0xffffffec
   11628:	bl	171b4 <_obstack_memory_used@@Base+0x3a88>
   1162c:	mov	r3, r0
   11630:	mov	r2, r3
   11634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11638:	str	r2, [r3]
   1163c:	ldr	r3, [fp, #-16]
   11640:	ldrb	r3, [r3]
   11644:	cmp	r3, #0
   11648:	beq	1177c <close@plt+0x720>
   1164c:	ldr	r3, [fp, #-16]
   11650:	add	r3, r3, #1
   11654:	str	r3, [fp, #-16]
   11658:	bl	10f84 <__ctype_b_loc@plt>
   1165c:	mov	r3, r0
   11660:	ldr	r4, [r3]
   11664:	ldr	r3, [fp, #-16]
   11668:	ldrb	r3, [r3]
   1166c:	mov	r0, r3
   11670:	bl	11190 <close@plt+0x134>
   11674:	mov	r3, r0
   11678:	lsl	r3, r3, #1
   1167c:	add	r3, r4, r3
   11680:	ldrh	r3, [r3]
   11684:	and	r3, r3, #8192	; 0x2000
   11688:	cmp	r3, #0
   1168c:	bne	1164c <close@plt+0x5f0>
   11690:	ldr	r3, [fp, #-16]
   11694:	ldrb	r3, [r3]
   11698:	cmp	r3, #0
   1169c:	beq	11784 <close@plt+0x728>
   116a0:	ldr	r3, [fp, #-16]
   116a4:	ldrb	r3, [r3]
   116a8:	cmp	r3, #35	; 0x23
   116ac:	beq	11784 <close@plt+0x728>
   116b0:	ldr	r3, [fp, #-16]
   116b4:	str	r3, [fp, #-24]	; 0xffffffe8
   116b8:	b	116c8 <close@plt+0x66c>
   116bc:	ldr	r3, [fp, #-16]
   116c0:	add	r3, r3, #1
   116c4:	str	r3, [fp, #-16]
   116c8:	ldr	r3, [fp, #-16]
   116cc:	ldrb	r3, [r3]
   116d0:	cmp	r3, #0
   116d4:	beq	116e8 <close@plt+0x68c>
   116d8:	ldr	r3, [fp, #-16]
   116dc:	ldrb	r3, [r3]
   116e0:	cmp	r3, #35	; 0x23
   116e4:	bne	116bc <close@plt+0x660>
   116e8:	ldr	r3, [fp, #-16]
   116ec:	sub	r3, r3, #1
   116f0:	str	r3, [fp, #-16]
   116f4:	b	11704 <close@plt+0x6a8>
   116f8:	ldr	r3, [fp, #-16]
   116fc:	sub	r3, r3, #1
   11700:	str	r3, [fp, #-16]
   11704:	bl	10f84 <__ctype_b_loc@plt>
   11708:	mov	r3, r0
   1170c:	ldr	r4, [r3]
   11710:	ldr	r3, [fp, #-16]
   11714:	ldrb	r3, [r3]
   11718:	mov	r0, r3
   1171c:	bl	11190 <close@plt+0x134>
   11720:	mov	r3, r0
   11724:	lsl	r3, r3, #1
   11728:	add	r3, r4, r3
   1172c:	ldrh	r3, [r3]
   11730:	and	r3, r3, #8192	; 0x2000
   11734:	cmp	r3, #0
   11738:	bne	116f8 <close@plt+0x69c>
   1173c:	ldr	r3, [fp, #-16]
   11740:	add	r3, r3, #1
   11744:	str	r3, [fp, #-16]
   11748:	ldr	r2, [fp, #-16]
   1174c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11750:	sub	r3, r2, r3
   11754:	mov	r1, r3
   11758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1175c:	bl	171b4 <_obstack_memory_used@@Base+0x3a88>
   11760:	mov	r3, r0
   11764:	mov	r2, r3
   11768:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1176c:	str	r2, [r3]
   11770:	b	11788 <close@plt+0x72c>
   11774:	nop			; (mov r0, r0)
   11778:	b	11788 <close@plt+0x72c>
   1177c:	nop			; (mov r0, r0)
   11780:	b	11788 <close@plt+0x72c>
   11784:	nop			; (mov r0, r0)
   11788:	sub	sp, fp, #8
   1178c:	pop	{r4, fp, pc}
   11790:	push	{fp, lr}
   11794:	add	fp, sp, #4
   11798:	sub	sp, sp, #56	; 0x38
   1179c:	str	r0, [fp, #-56]	; 0xffffffc8
   117a0:	mov	r3, #1
   117a4:	strb	r3, [fp, #-5]
   117a8:	b	11a08 <close@plt+0x9ac>
   117ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117b0:	ldrb	r3, [r3]
   117b4:	cmp	r3, #61	; 0x3d
   117b8:	beq	11930 <close@plt+0x8d4>
   117bc:	cmp	r3, #61	; 0x3d
   117c0:	bgt	117d8 <close@plt+0x77c>
   117c4:	cmp	r3, #39	; 0x27
   117c8:	beq	117ec <close@plt+0x790>
   117cc:	cmp	r3, #58	; 0x3a
   117d0:	beq	11930 <close@plt+0x8d4>
   117d4:	b	11994 <close@plt+0x938>
   117d8:	cmp	r3, #92	; 0x5c
   117dc:	beq	11900 <close@plt+0x8a4>
   117e0:	cmp	r3, #94	; 0x5e
   117e4:	beq	11900 <close@plt+0x8a4>
   117e8:	b	11994 <close@plt+0x938>
   117ec:	ldr	r3, [pc, #560]	; 11a24 <close@plt+0x9c8>
   117f0:	str	r3, [fp, #-12]
   117f4:	ldr	r3, [fp, #-12]
   117f8:	str	r3, [fp, #-16]
   117fc:	ldr	r3, [fp, #-16]
   11800:	ldr	r3, [r3, #16]
   11804:	mov	r2, r3
   11808:	ldr	r3, [fp, #-16]
   1180c:	ldr	r3, [r3, #12]
   11810:	sub	r3, r2, r3
   11814:	cmp	r3, #0
   11818:	bne	11828 <close@plt+0x7cc>
   1181c:	mov	r1, #1
   11820:	ldr	r0, [fp, #-12]
   11824:	bl	13388 <_obstack_newchunk@@Base>
   11828:	ldr	r3, [fp, #-12]
   1182c:	ldr	r3, [r3, #12]
   11830:	add	r1, r3, #1
   11834:	ldr	r2, [fp, #-12]
   11838:	str	r1, [r2, #12]
   1183c:	mov	r2, #39	; 0x27
   11840:	strb	r2, [r3]
   11844:	ldr	r3, [pc, #472]	; 11a24 <close@plt+0x9c8>
   11848:	str	r3, [fp, #-20]	; 0xffffffec
   1184c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11850:	str	r3, [fp, #-24]	; 0xffffffe8
   11854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11858:	ldr	r3, [r3, #16]
   1185c:	mov	r2, r3
   11860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11864:	ldr	r3, [r3, #12]
   11868:	sub	r3, r2, r3
   1186c:	cmp	r3, #0
   11870:	bne	11880 <close@plt+0x824>
   11874:	mov	r1, #1
   11878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1187c:	bl	13388 <_obstack_newchunk@@Base>
   11880:	ldr	r3, [fp, #-20]	; 0xffffffec
   11884:	ldr	r3, [r3, #12]
   11888:	add	r1, r3, #1
   1188c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11890:	str	r1, [r2, #12]
   11894:	mov	r2, #92	; 0x5c
   11898:	strb	r2, [r3]
   1189c:	ldr	r3, [pc, #384]	; 11a24 <close@plt+0x9c8>
   118a0:	str	r3, [fp, #-28]	; 0xffffffe4
   118a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118a8:	str	r3, [fp, #-32]	; 0xffffffe0
   118ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   118b0:	ldr	r3, [r3, #16]
   118b4:	mov	r2, r3
   118b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   118bc:	ldr	r3, [r3, #12]
   118c0:	sub	r3, r2, r3
   118c4:	cmp	r3, #0
   118c8:	bne	118d8 <close@plt+0x87c>
   118cc:	mov	r1, #1
   118d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118d4:	bl	13388 <_obstack_newchunk@@Base>
   118d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118dc:	ldr	r3, [r3, #12]
   118e0:	add	r1, r3, #1
   118e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   118e8:	str	r1, [r2, #12]
   118ec:	mov	r2, #39	; 0x27
   118f0:	strb	r2, [r3]
   118f4:	mov	r3, #1
   118f8:	strb	r3, [fp, #-5]
   118fc:	b	119a0 <close@plt+0x944>
   11900:	ldrb	r3, [fp, #-5]
   11904:	cmp	r3, #0
   11908:	movne	r3, #1
   1190c:	moveq	r3, #0
   11910:	uxtb	r3, r3
   11914:	eor	r3, r3, #1
   11918:	uxtb	r3, r3
   1191c:	strb	r3, [fp, #-5]
   11920:	ldrb	r3, [fp, #-5]
   11924:	and	r3, r3, #1
   11928:	strb	r3, [fp, #-5]
   1192c:	b	119a0 <close@plt+0x944>
   11930:	ldrb	r3, [fp, #-5]
   11934:	cmp	r3, #0
   11938:	beq	11994 <close@plt+0x938>
   1193c:	ldr	r3, [pc, #224]	; 11a24 <close@plt+0x9c8>
   11940:	str	r3, [fp, #-36]	; 0xffffffdc
   11944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11948:	str	r3, [fp, #-40]	; 0xffffffd8
   1194c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11950:	ldr	r3, [r3, #16]
   11954:	mov	r2, r3
   11958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1195c:	ldr	r3, [r3, #12]
   11960:	sub	r3, r2, r3
   11964:	cmp	r3, #0
   11968:	bne	11978 <close@plt+0x91c>
   1196c:	mov	r1, #1
   11970:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11974:	bl	13388 <_obstack_newchunk@@Base>
   11978:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1197c:	ldr	r3, [r3, #12]
   11980:	add	r1, r3, #1
   11984:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11988:	str	r1, [r2, #12]
   1198c:	mov	r2, #92	; 0x5c
   11990:	strb	r2, [r3]
   11994:	mov	r3, #1
   11998:	strb	r3, [fp, #-5]
   1199c:	nop			; (mov r0, r0)
   119a0:	ldr	r3, [pc, #124]	; 11a24 <close@plt+0x9c8>
   119a4:	str	r3, [fp, #-44]	; 0xffffffd4
   119a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   119ac:	str	r3, [fp, #-48]	; 0xffffffd0
   119b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   119b4:	ldr	r3, [r3, #16]
   119b8:	mov	r2, r3
   119bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   119c0:	ldr	r3, [r3, #12]
   119c4:	sub	r3, r2, r3
   119c8:	cmp	r3, #0
   119cc:	bne	119dc <close@plt+0x980>
   119d0:	mov	r1, #1
   119d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   119d8:	bl	13388 <_obstack_newchunk@@Base>
   119dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   119e0:	ldr	r3, [r3, #12]
   119e4:	add	r1, r3, #1
   119e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   119ec:	str	r1, [r2, #12]
   119f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   119f4:	ldrb	r2, [r2]
   119f8:	strb	r2, [r3]
   119fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11a00:	add	r3, r3, #1
   11a04:	str	r3, [fp, #-56]	; 0xffffffc8
   11a08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11a0c:	ldrb	r3, [r3]
   11a10:	cmp	r3, #0
   11a14:	bne	117ac <close@plt+0x750>
   11a18:	nop			; (mov r0, r0)
   11a1c:	sub	sp, fp, #4
   11a20:	pop	{fp, pc}
   11a24:	andeq	fp, r2, ip, asr r1
   11a28:	push	{r4, fp, lr}
   11a2c:	add	fp, sp, #8
   11a30:	sub	sp, sp, #140	; 0x8c
   11a34:	str	r0, [fp, #-136]	; 0xffffff78
   11a38:	str	r1, [fp, #-140]	; 0xffffff74
   11a3c:	mov	r3, #0
   11a40:	str	r3, [fp, #-16]
   11a44:	ldr	r3, [pc, #1812]	; 12160 <close@plt+0x1104>
   11a48:	str	r3, [fp, #-20]	; 0xffffffec
   11a4c:	mov	r3, #0
   11a50:	str	r3, [fp, #-120]	; 0xffffff88
   11a54:	mov	r3, #0
   11a58:	str	r3, [fp, #-124]	; 0xffffff84
   11a5c:	mov	r3, #1
   11a60:	strb	r3, [fp, #-29]	; 0xffffffe3
   11a64:	mov	r3, #3
   11a68:	str	r3, [fp, #-36]	; 0xffffffdc
   11a6c:	ldr	r0, [pc, #1776]	; 12164 <close@plt+0x1108>
   11a70:	bl	10f24 <getenv@plt>
   11a74:	str	r0, [fp, #-28]	; 0xffffffe4
   11a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a7c:	cmp	r3, #0
   11a80:	beq	11a94 <close@plt+0xa38>
   11a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a88:	ldrb	r3, [r3]
   11a8c:	cmp	r3, #0
   11a90:	bne	11a9c <close@plt+0xa40>
   11a94:	ldr	r3, [pc, #1740]	; 12168 <close@plt+0x110c>
   11a98:	str	r3, [fp, #-28]	; 0xffffffe4
   11a9c:	ldr	r3, [fp, #-16]
   11aa0:	add	r3, r3, #1
   11aa4:	str	r3, [fp, #-16]
   11aa8:	ldr	r3, [fp, #-136]	; 0xffffff78
   11aac:	cmp	r3, #0
   11ab0:	beq	11af0 <close@plt+0xa94>
   11ab4:	sub	r1, fp, #124	; 0x7c
   11ab8:	sub	r3, fp, #120	; 0x78
   11abc:	ldr	r2, [fp, #-136]	; 0xffffff78
   11ac0:	mov	r0, r3
   11ac4:	bl	11038 <getline@plt>
   11ac8:	mov	r3, r0
   11acc:	cmp	r3, #0
   11ad0:	bgt	11ae4 <close@plt+0xa88>
   11ad4:	ldr	r3, [fp, #-120]	; 0xffffff88
   11ad8:	mov	r0, r3
   11adc:	bl	12cc8 <close@plt+0x1c6c>
   11ae0:	b	12144 <close@plt+0x10e8>
   11ae4:	ldr	r3, [fp, #-120]	; 0xffffff88
   11ae8:	str	r3, [fp, #-24]	; 0xffffffe8
   11aec:	b	11b24 <close@plt+0xac8>
   11af0:	ldr	r2, [pc, #1652]	; 1216c <close@plt+0x1110>
   11af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11af8:	cmp	r3, r2
   11afc:	beq	12140 <close@plt+0x10e4>
   11b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b04:	str	r3, [fp, #-24]	; 0xffffffe8
   11b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b0c:	bl	10fa8 <strlen@plt>
   11b10:	mov	r3, r0
   11b14:	add	r3, r3, #1
   11b18:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b1c:	add	r3, r2, r3
   11b20:	str	r3, [fp, #-20]	; 0xffffffec
   11b24:	sub	r2, fp, #132	; 0x84
   11b28:	sub	r3, fp, #128	; 0x80
   11b2c:	mov	r1, r3
   11b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b34:	bl	11514 <close@plt+0x4b8>
   11b38:	ldr	r3, [fp, #-128]	; 0xffffff80
   11b3c:	cmp	r3, #0
   11b40:	beq	1214c <close@plt+0x10f0>
   11b44:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11b48:	cmp	r3, #0
   11b4c:	bne	11ba4 <close@plt+0xb48>
   11b50:	ldr	r0, [pc, #1560]	; 12170 <close@plt+0x1114>
   11b54:	bl	10f9c <gettext@plt>
   11b58:	mov	r4, r0
   11b5c:	ldr	r2, [fp, #-140]	; 0xffffff74
   11b60:	mov	r1, #3
   11b64:	mov	r0, #0
   11b68:	bl	15cb0 <_obstack_memory_used@@Base+0x2584>
   11b6c:	mov	r2, r0
   11b70:	ldr	r3, [fp, #-16]
   11b74:	str	r3, [sp]
   11b78:	mov	r3, r2
   11b7c:	mov	r2, r4
   11b80:	mov	r1, #0
   11b84:	mov	r0, #0
   11b88:	bl	10f00 <error@plt>
   11b8c:	mov	r3, #0
   11b90:	strb	r3, [fp, #-29]	; 0xffffffe3
   11b94:	ldr	r3, [fp, #-128]	; 0xffffff80
   11b98:	mov	r0, r3
   11b9c:	bl	12cc8 <close@plt+0x1c6c>
   11ba0:	b	12150 <close@plt+0x10f4>
   11ba4:	mov	r3, #0
   11ba8:	strb	r3, [fp, #-37]	; 0xffffffdb
   11bac:	ldr	r3, [fp, #-128]	; 0xffffff80
   11bb0:	ldr	r1, [pc, #1452]	; 12164 <close@plt+0x1108>
   11bb4:	mov	r0, r3
   11bb8:	bl	128f8 <close@plt+0x189c>
   11bbc:	mov	r3, r0
   11bc0:	cmp	r3, #0
   11bc4:	bne	11c0c <close@plt+0xbb0>
   11bc8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11bcc:	mov	r2, #0
   11bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11bd4:	mov	r0, r3
   11bd8:	bl	10f0c <fnmatch@plt>
   11bdc:	mov	r3, r0
   11be0:	cmp	r3, #0
   11be4:	bne	11bf4 <close@plt+0xb98>
   11be8:	mov	r3, #2
   11bec:	str	r3, [fp, #-36]	; 0xffffffdc
   11bf0:	b	12098 <close@plt+0x103c>
   11bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bf8:	cmp	r3, #2
   11bfc:	beq	12098 <close@plt+0x103c>
   11c00:	mov	r3, #0
   11c04:	str	r3, [fp, #-36]	; 0xffffffdc
   11c08:	b	12098 <close@plt+0x103c>
   11c0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c10:	cmp	r3, #2
   11c14:	bne	11c20 <close@plt+0xbc4>
   11c18:	mov	r3, #1
   11c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   11c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c24:	cmp	r3, #0
   11c28:	beq	12090 <close@plt+0x1034>
   11c2c:	ldr	r3, [fp, #-128]	; 0xffffff80
   11c30:	ldrb	r3, [r3]
   11c34:	cmp	r3, #46	; 0x2e
   11c38:	bne	11d60 <close@plt+0xd04>
   11c3c:	ldr	r3, [pc, #1328]	; 12174 <close@plt+0x1118>
   11c40:	str	r3, [fp, #-48]	; 0xffffffd0
   11c44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c48:	str	r3, [fp, #-52]	; 0xffffffcc
   11c4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11c50:	ldr	r3, [r3, #16]
   11c54:	mov	r2, r3
   11c58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11c5c:	ldr	r3, [r3, #12]
   11c60:	sub	r3, r2, r3
   11c64:	cmp	r3, #0
   11c68:	bne	11c78 <close@plt+0xc1c>
   11c6c:	mov	r1, #1
   11c70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c74:	bl	13388 <_obstack_newchunk@@Base>
   11c78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c7c:	ldr	r3, [r3, #12]
   11c80:	add	r1, r3, #1
   11c84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11c88:	str	r1, [r2, #12]
   11c8c:	mov	r2, #42	; 0x2a
   11c90:	strb	r2, [r3]
   11c94:	ldr	r3, [fp, #-128]	; 0xffffff80
   11c98:	mov	r0, r3
   11c9c:	bl	11790 <close@plt+0x734>
   11ca0:	ldr	r3, [pc, #1228]	; 12174 <close@plt+0x1118>
   11ca4:	str	r3, [fp, #-56]	; 0xffffffc8
   11ca8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11cac:	str	r3, [fp, #-60]	; 0xffffffc4
   11cb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11cb4:	ldr	r3, [r3, #16]
   11cb8:	mov	r2, r3
   11cbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11cc0:	ldr	r3, [r3, #12]
   11cc4:	sub	r3, r2, r3
   11cc8:	cmp	r3, #0
   11ccc:	bne	11cdc <close@plt+0xc80>
   11cd0:	mov	r1, #1
   11cd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11cd8:	bl	13388 <_obstack_newchunk@@Base>
   11cdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11ce0:	ldr	r3, [r3, #12]
   11ce4:	add	r1, r3, #1
   11ce8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11cec:	str	r1, [r2, #12]
   11cf0:	mov	r2, #61	; 0x3d
   11cf4:	strb	r2, [r3]
   11cf8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11cfc:	mov	r0, r3
   11d00:	bl	11790 <close@plt+0x734>
   11d04:	ldr	r3, [pc, #1128]	; 12174 <close@plt+0x1118>
   11d08:	str	r3, [fp, #-64]	; 0xffffffc0
   11d0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11d10:	str	r3, [fp, #-68]	; 0xffffffbc
   11d14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11d18:	ldr	r3, [r3, #16]
   11d1c:	mov	r2, r3
   11d20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11d24:	ldr	r3, [r3, #12]
   11d28:	sub	r3, r2, r3
   11d2c:	cmp	r3, #0
   11d30:	bne	11d40 <close@plt+0xce4>
   11d34:	mov	r1, #1
   11d38:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11d3c:	bl	13388 <_obstack_newchunk@@Base>
   11d40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11d44:	ldr	r3, [r3, #12]
   11d48:	add	r1, r3, #1
   11d4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11d50:	str	r1, [r2, #12]
   11d54:	mov	r2, #58	; 0x3a
   11d58:	strb	r2, [r3]
   11d5c:	b	12098 <close@plt+0x103c>
   11d60:	ldr	r3, [fp, #-128]	; 0xffffff80
   11d64:	ldrb	r3, [r3]
   11d68:	cmp	r3, #42	; 0x2a
   11d6c:	bne	11e3c <close@plt+0xde0>
   11d70:	ldr	r3, [fp, #-128]	; 0xffffff80
   11d74:	mov	r0, r3
   11d78:	bl	11790 <close@plt+0x734>
   11d7c:	ldr	r3, [pc, #1008]	; 12174 <close@plt+0x1118>
   11d80:	str	r3, [fp, #-72]	; 0xffffffb8
   11d84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11d88:	str	r3, [fp, #-76]	; 0xffffffb4
   11d8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11d90:	ldr	r3, [r3, #16]
   11d94:	mov	r2, r3
   11d98:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11d9c:	ldr	r3, [r3, #12]
   11da0:	sub	r3, r2, r3
   11da4:	cmp	r3, #0
   11da8:	bne	11db8 <close@plt+0xd5c>
   11dac:	mov	r1, #1
   11db0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11db4:	bl	13388 <_obstack_newchunk@@Base>
   11db8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11dbc:	ldr	r3, [r3, #12]
   11dc0:	add	r1, r3, #1
   11dc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11dc8:	str	r1, [r2, #12]
   11dcc:	mov	r2, #61	; 0x3d
   11dd0:	strb	r2, [r3]
   11dd4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11dd8:	mov	r0, r3
   11ddc:	bl	11790 <close@plt+0x734>
   11de0:	ldr	r3, [pc, #908]	; 12174 <close@plt+0x1118>
   11de4:	str	r3, [fp, #-80]	; 0xffffffb0
   11de8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11dec:	str	r3, [fp, #-84]	; 0xffffffac
   11df0:	ldr	r3, [fp, #-84]	; 0xffffffac
   11df4:	ldr	r3, [r3, #16]
   11df8:	mov	r2, r3
   11dfc:	ldr	r3, [fp, #-84]	; 0xffffffac
   11e00:	ldr	r3, [r3, #12]
   11e04:	sub	r3, r2, r3
   11e08:	cmp	r3, #0
   11e0c:	bne	11e1c <close@plt+0xdc0>
   11e10:	mov	r1, #1
   11e14:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11e18:	bl	13388 <_obstack_newchunk@@Base>
   11e1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11e20:	ldr	r3, [r3, #12]
   11e24:	add	r1, r3, #1
   11e28:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11e2c:	str	r1, [r2, #12]
   11e30:	mov	r2, #58	; 0x3a
   11e34:	strb	r2, [r3]
   11e38:	b	12098 <close@plt+0x103c>
   11e3c:	ldr	r3, [fp, #-128]	; 0xffffff80
   11e40:	ldr	r1, [pc, #816]	; 12178 <close@plt+0x111c>
   11e44:	mov	r0, r3
   11e48:	bl	128f8 <close@plt+0x189c>
   11e4c:	mov	r3, r0
   11e50:	cmp	r3, #0
   11e54:	beq	12098 <close@plt+0x103c>
   11e58:	ldr	r3, [fp, #-128]	; 0xffffff80
   11e5c:	ldr	r1, [pc, #792]	; 1217c <close@plt+0x1120>
   11e60:	mov	r0, r3
   11e64:	bl	128f8 <close@plt+0x189c>
   11e68:	mov	r3, r0
   11e6c:	cmp	r3, #0
   11e70:	beq	12098 <close@plt+0x103c>
   11e74:	ldr	r3, [fp, #-128]	; 0xffffff80
   11e78:	ldr	r1, [pc, #768]	; 12180 <close@plt+0x1124>
   11e7c:	mov	r0, r3
   11e80:	bl	128f8 <close@plt+0x189c>
   11e84:	mov	r3, r0
   11e88:	cmp	r3, #0
   11e8c:	beq	12098 <close@plt+0x103c>
   11e90:	mov	r3, #0
   11e94:	str	r3, [fp, #-44]	; 0xffffffd4
   11e98:	b	11ecc <close@plt+0xe70>
   11e9c:	ldr	r0, [fp, #-128]	; 0xffffff80
   11ea0:	ldr	r2, [pc, #732]	; 12184 <close@plt+0x1128>
   11ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ea8:	ldr	r3, [r2, r3, lsl #2]
   11eac:	mov	r1, r3
   11eb0:	bl	128f8 <close@plt+0x189c>
   11eb4:	mov	r3, r0
   11eb8:	cmp	r3, #0
   11ebc:	beq	11ee4 <close@plt+0xe88>
   11ec0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ec4:	add	r3, r3, #1
   11ec8:	str	r3, [fp, #-44]	; 0xffffffd4
   11ecc:	ldr	r2, [pc, #688]	; 12184 <close@plt+0x1128>
   11ed0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ed4:	ldr	r3, [r2, r3, lsl #2]
   11ed8:	cmp	r3, #0
   11edc:	bne	11e9c <close@plt+0xe40>
   11ee0:	b	11ee8 <close@plt+0xe8c>
   11ee4:	nop			; (mov r0, r0)
   11ee8:	ldr	r2, [pc, #660]	; 12184 <close@plt+0x1128>
   11eec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ef0:	ldr	r3, [r2, r3, lsl #2]
   11ef4:	cmp	r3, #0
   11ef8:	beq	12084 <close@plt+0x1028>
   11efc:	ldr	r3, [pc, #624]	; 12174 <close@plt+0x1118>
   11f00:	str	r3, [fp, #-88]	; 0xffffffa8
   11f04:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11f08:	str	r3, [fp, #-92]	; 0xffffffa4
   11f0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11f10:	ldr	r3, [r3, #16]
   11f14:	mov	r2, r3
   11f18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11f1c:	ldr	r3, [r3, #12]
   11f20:	sub	r3, r2, r3
   11f24:	cmp	r3, #0
   11f28:	bne	11f38 <close@plt+0xedc>
   11f2c:	mov	r1, #1
   11f30:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11f34:	bl	13388 <_obstack_newchunk@@Base>
   11f38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11f3c:	ldr	r3, [r3, #12]
   11f40:	add	r1, r3, #1
   11f44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11f48:	str	r1, [r2, #12]
   11f4c:	ldr	r1, [pc, #564]	; 12188 <close@plt+0x112c>
   11f50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11f54:	ldr	r2, [r1, r2, lsl #2]
   11f58:	ldrb	r2, [r2]
   11f5c:	strb	r2, [r3]
   11f60:	ldr	r3, [pc, #524]	; 12174 <close@plt+0x1118>
   11f64:	str	r3, [fp, #-96]	; 0xffffffa0
   11f68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11f6c:	str	r3, [fp, #-100]	; 0xffffff9c
   11f70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11f74:	ldr	r3, [r3, #16]
   11f78:	mov	r2, r3
   11f7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11f80:	ldr	r3, [r3, #12]
   11f84:	sub	r3, r2, r3
   11f88:	cmp	r3, #0
   11f8c:	bne	11f9c <close@plt+0xf40>
   11f90:	mov	r1, #1
   11f94:	ldr	r0, [fp, #-96]	; 0xffffffa0
   11f98:	bl	13388 <_obstack_newchunk@@Base>
   11f9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11fa0:	ldr	r3, [r3, #12]
   11fa4:	add	r1, r3, #1
   11fa8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11fac:	str	r1, [r2, #12]
   11fb0:	ldr	r1, [pc, #464]	; 12188 <close@plt+0x112c>
   11fb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11fb8:	ldr	r2, [r1, r2, lsl #2]
   11fbc:	ldrb	r2, [r2, #1]
   11fc0:	strb	r2, [r3]
   11fc4:	ldr	r3, [pc, #424]	; 12174 <close@plt+0x1118>
   11fc8:	str	r3, [fp, #-104]	; 0xffffff98
   11fcc:	ldr	r3, [fp, #-104]	; 0xffffff98
   11fd0:	str	r3, [fp, #-108]	; 0xffffff94
   11fd4:	ldr	r3, [fp, #-108]	; 0xffffff94
   11fd8:	ldr	r3, [r3, #16]
   11fdc:	mov	r2, r3
   11fe0:	ldr	r3, [fp, #-108]	; 0xffffff94
   11fe4:	ldr	r3, [r3, #12]
   11fe8:	sub	r3, r2, r3
   11fec:	cmp	r3, #0
   11ff0:	bne	12000 <close@plt+0xfa4>
   11ff4:	mov	r1, #1
   11ff8:	ldr	r0, [fp, #-104]	; 0xffffff98
   11ffc:	bl	13388 <_obstack_newchunk@@Base>
   12000:	ldr	r3, [fp, #-104]	; 0xffffff98
   12004:	ldr	r3, [r3, #12]
   12008:	add	r1, r3, #1
   1200c:	ldr	r2, [fp, #-104]	; 0xffffff98
   12010:	str	r1, [r2, #12]
   12014:	mov	r2, #61	; 0x3d
   12018:	strb	r2, [r3]
   1201c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12020:	mov	r0, r3
   12024:	bl	11790 <close@plt+0x734>
   12028:	ldr	r3, [pc, #324]	; 12174 <close@plt+0x1118>
   1202c:	str	r3, [fp, #-112]	; 0xffffff90
   12030:	ldr	r3, [fp, #-112]	; 0xffffff90
   12034:	str	r3, [fp, #-116]	; 0xffffff8c
   12038:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1203c:	ldr	r3, [r3, #16]
   12040:	mov	r2, r3
   12044:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12048:	ldr	r3, [r3, #12]
   1204c:	sub	r3, r2, r3
   12050:	cmp	r3, #0
   12054:	bne	12064 <close@plt+0x1008>
   12058:	mov	r1, #1
   1205c:	ldr	r0, [fp, #-112]	; 0xffffff90
   12060:	bl	13388 <_obstack_newchunk@@Base>
   12064:	ldr	r3, [fp, #-112]	; 0xffffff90
   12068:	ldr	r3, [r3, #12]
   1206c:	add	r1, r3, #1
   12070:	ldr	r2, [fp, #-112]	; 0xffffff90
   12074:	str	r1, [r2, #12]
   12078:	mov	r2, #58	; 0x3a
   1207c:	strb	r2, [r3]
   12080:	b	12098 <close@plt+0x103c>
   12084:	mov	r3, #1
   12088:	strb	r3, [fp, #-37]	; 0xffffffdb
   1208c:	b	12098 <close@plt+0x103c>
   12090:	mov	r3, #1
   12094:	strb	r3, [fp, #-37]	; 0xffffffdb
   12098:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1209c:	cmp	r3, #0
   120a0:	beq	12124 <close@plt+0x10c8>
   120a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   120a8:	cmp	r3, #2
   120ac:	beq	120bc <close@plt+0x1060>
   120b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   120b4:	cmp	r3, #1
   120b8:	bne	12124 <close@plt+0x10c8>
   120bc:	ldr	r0, [pc, #200]	; 1218c <close@plt+0x1130>
   120c0:	bl	10f9c <gettext@plt>
   120c4:	mov	r4, r0
   120c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   120cc:	cmp	r3, #0
   120d0:	beq	120ec <close@plt+0x1090>
   120d4:	ldr	r2, [fp, #-140]	; 0xffffff74
   120d8:	mov	r1, #3
   120dc:	mov	r0, #0
   120e0:	bl	15cb0 <_obstack_memory_used@@Base+0x2584>
   120e4:	mov	r2, r0
   120e8:	b	120f8 <close@plt+0x109c>
   120ec:	ldr	r0, [pc, #156]	; 12190 <close@plt+0x1134>
   120f0:	bl	10f9c <gettext@plt>
   120f4:	mov	r2, r0
   120f8:	ldr	r3, [fp, #-128]	; 0xffffff80
   120fc:	str	r3, [sp, #4]
   12100:	ldr	r3, [fp, #-16]
   12104:	str	r3, [sp]
   12108:	mov	r3, r2
   1210c:	mov	r2, r4
   12110:	mov	r1, #0
   12114:	mov	r0, #0
   12118:	bl	10f00 <error@plt>
   1211c:	mov	r3, #0
   12120:	strb	r3, [fp, #-29]	; 0xffffffe3
   12124:	ldr	r3, [fp, #-128]	; 0xffffff80
   12128:	mov	r0, r3
   1212c:	bl	12cc8 <close@plt+0x1c6c>
   12130:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12134:	mov	r0, r3
   12138:	bl	12cc8 <close@plt+0x1c6c>
   1213c:	b	11a9c <close@plt+0xa40>
   12140:	nop			; (mov r0, r0)
   12144:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   12148:	b	12154 <close@plt+0x10f8>
   1214c:	nop			; (mov r0, r0)
   12150:	b	11a9c <close@plt+0xa40>
   12154:	mov	r0, r3
   12158:	sub	sp, fp, #8
   1215c:	pop	{r4, fp, pc}
   12160:	andeq	r8, r1, r0, lsr #12
   12164:	andeq	r9, r1, r4, asr #26
   12168:	andeq	r9, r1, ip, asr #26
   1216c:	strdeq	r9, [r1], -r6
   12170:	andeq	r9, r1, r4, asr sp
   12174:	andeq	fp, r2, ip, asr r1
   12178:	andeq	r9, r1, r0, lsl #27
   1217c:	andeq	r9, r1, r8, lsl #27
   12180:	muleq	r1, r0, sp
   12184:	andeq	r9, r1, r4, lsr r8
   12188:	andeq	r9, r1, ip, lsr #18
   1218c:	muleq	r1, ip, sp
   12190:			; <UNDEFINED> instruction: 0x00019dbc
   12194:	push	{r4, fp, lr}
   12198:	add	fp, sp, #8
   1219c:	sub	sp, sp, #20
   121a0:	str	r0, [fp, #-24]	; 0xffffffe8
   121a4:	ldr	r1, [pc, #236]	; 12298 <close@plt+0x123c>
   121a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121ac:	bl	10e10 <strcmp@plt>
   121b0:	mov	r3, r0
   121b4:	cmp	r3, #0
   121b8:	beq	12218 <close@plt+0x11bc>
   121bc:	ldr	r3, [pc, #216]	; 1229c <close@plt+0x1240>
   121c0:	ldr	r3, [r3]
   121c4:	mov	r2, r3
   121c8:	ldr	r1, [pc, #208]	; 122a0 <close@plt+0x1244>
   121cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121d0:	bl	12dc4 <close@plt+0x1d68>
   121d4:	mov	r3, r0
   121d8:	cmp	r3, #0
   121dc:	bne	12218 <close@plt+0x11bc>
   121e0:	bl	10fc0 <__errno_location@plt>
   121e4:	mov	r3, r0
   121e8:	ldr	r4, [r3]
   121ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121f0:	mov	r1, #3
   121f4:	mov	r0, #0
   121f8:	bl	15cb0 <_obstack_memory_used@@Base+0x2584>
   121fc:	mov	r3, r0
   12200:	ldr	r2, [pc, #156]	; 122a4 <close@plt+0x1248>
   12204:	mov	r1, r4
   12208:	mov	r0, #0
   1220c:	bl	10f00 <error@plt>
   12210:	mov	r3, #0
   12214:	b	1228c <close@plt+0x1230>
   12218:	ldr	r3, [pc, #124]	; 1229c <close@plt+0x1240>
   1221c:	ldr	r3, [r3]
   12220:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12224:	mov	r0, r3
   12228:	bl	11a28 <close@plt+0x9cc>
   1222c:	mov	r3, r0
   12230:	strb	r3, [fp, #-13]
   12234:	ldr	r3, [pc, #96]	; 1229c <close@plt+0x1240>
   12238:	ldr	r3, [r3]
   1223c:	mov	r0, r3
   12240:	bl	12b28 <close@plt+0x1acc>
   12244:	mov	r3, r0
   12248:	cmp	r3, #0
   1224c:	beq	12288 <close@plt+0x122c>
   12250:	bl	10fc0 <__errno_location@plt>
   12254:	mov	r3, r0
   12258:	ldr	r4, [r3]
   1225c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12260:	mov	r1, #3
   12264:	mov	r0, #0
   12268:	bl	15cb0 <_obstack_memory_used@@Base+0x2584>
   1226c:	mov	r3, r0
   12270:	ldr	r2, [pc, #44]	; 122a4 <close@plt+0x1248>
   12274:	mov	r1, r4
   12278:	mov	r0, #0
   1227c:	bl	10f00 <error@plt>
   12280:	mov	r3, #0
   12284:	b	1228c <close@plt+0x1230>
   12288:	ldrb	r3, [fp, #-13]
   1228c:	mov	r0, r3
   12290:	sub	sp, fp, #8
   12294:	pop	{r4, fp, pc}
   12298:	andeq	r9, r1, r8, asr #27
   1229c:	andeq	fp, r2, r0, asr r1
   122a0:	andeq	r9, r1, ip, asr #27
   122a4:	ldrdeq	r9, [r1], -r0
   122a8:	push	{r4, fp, lr}
   122ac:	add	fp, sp, #8
   122b0:	sub	sp, sp, #68	; 0x44
   122b4:	str	r0, [fp, #-64]	; 0xffffffc0
   122b8:	str	r1, [fp, #-68]	; 0xffffffbc
   122bc:	mov	r3, #1
   122c0:	strb	r3, [fp, #-13]
   122c4:	mov	r3, #2
   122c8:	str	r3, [fp, #-20]	; 0xffffffec
   122cc:	mov	r3, #0
   122d0:	strb	r3, [fp, #-21]	; 0xffffffeb
   122d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   122d8:	ldr	r3, [r3]
   122dc:	mov	r0, r3
   122e0:	bl	137f0 <_obstack_memory_used@@Base+0xc4>
   122e4:	ldr	r1, [pc, #1152]	; 1276c <close@plt+0x1710>
   122e8:	mov	r0, #6
   122ec:	bl	11008 <setlocale@plt>
   122f0:	ldr	r1, [pc, #1144]	; 12770 <close@plt+0x1714>
   122f4:	ldr	r0, [pc, #1144]	; 12774 <close@plt+0x1718>
   122f8:	bl	1102c <bindtextdomain@plt>
   122fc:	ldr	r0, [pc, #1136]	; 12774 <close@plt+0x1718>
   12300:	bl	10ea0 <textdomain@plt>
   12304:	ldr	r0, [pc, #1132]	; 12778 <close@plt+0x171c>
   12308:	bl	18450 <_obstack_memory_used@@Base+0x4d24>
   1230c:	b	123b8 <close@plt+0x135c>
   12310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12314:	cmp	r3, #98	; 0x62
   12318:	beq	1234c <close@plt+0x12f0>
   1231c:	cmp	r3, #98	; 0x62
   12320:	bgt	12338 <close@plt+0x12dc>
   12324:	cmn	r3, #3
   12328:	beq	12378 <close@plt+0x131c>
   1232c:	cmn	r3, #2
   12330:	beq	12370 <close@plt+0x1314>
   12334:	b	123b0 <close@plt+0x1354>
   12338:	cmp	r3, #99	; 0x63
   1233c:	beq	12358 <close@plt+0x12fc>
   12340:	cmp	r3, #112	; 0x70
   12344:	beq	12364 <close@plt+0x1308>
   12348:	b	123b0 <close@plt+0x1354>
   1234c:	mov	r3, #0
   12350:	str	r3, [fp, #-20]	; 0xffffffec
   12354:	b	123b8 <close@plt+0x135c>
   12358:	mov	r3, #1
   1235c:	str	r3, [fp, #-20]	; 0xffffffec
   12360:	b	123b8 <close@plt+0x135c>
   12364:	mov	r3, #1
   12368:	strb	r3, [fp, #-21]	; 0xffffffeb
   1236c:	b	123b8 <close@plt+0x135c>
   12370:	mov	r0, #0
   12374:	bl	11358 <close@plt+0x2fc>
   12378:	ldr	r3, [pc, #1020]	; 1277c <close@plt+0x1720>
   1237c:	ldr	r0, [r3]
   12380:	ldr	r3, [pc, #1016]	; 12780 <close@plt+0x1724>
   12384:	ldr	r2, [r3]
   12388:	mov	r3, #0
   1238c:	str	r3, [sp, #4]
   12390:	ldr	r3, [pc, #1004]	; 12784 <close@plt+0x1728>
   12394:	str	r3, [sp]
   12398:	mov	r3, r2
   1239c:	ldr	r2, [pc, #996]	; 12788 <close@plt+0x172c>
   123a0:	ldr	r1, [pc, #996]	; 1278c <close@plt+0x1730>
   123a4:	bl	165ec <_obstack_memory_used@@Base+0x2ec0>
   123a8:	mov	r0, #0
   123ac:	bl	10f90 <exit@plt>
   123b0:	mov	r0, #1
   123b4:	bl	11358 <close@plt+0x2fc>
   123b8:	mov	r3, #0
   123bc:	str	r3, [sp]
   123c0:	ldr	r3, [pc, #968]	; 12790 <close@plt+0x1734>
   123c4:	ldr	r2, [pc, #968]	; 12794 <close@plt+0x1738>
   123c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   123cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   123d0:	bl	10f78 <getopt_long@plt>
   123d4:	str	r0, [fp, #-40]	; 0xffffffd8
   123d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   123dc:	cmn	r3, #1
   123e0:	bne	12310 <close@plt+0x12b4>
   123e4:	ldr	r3, [pc, #940]	; 12798 <close@plt+0x173c>
   123e8:	ldr	r3, [r3]
   123ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   123f0:	sub	r3, r2, r3
   123f4:	str	r3, [fp, #-64]	; 0xffffffc0
   123f8:	ldr	r3, [pc, #920]	; 12798 <close@plt+0x173c>
   123fc:	ldr	r3, [r3]
   12400:	lsl	r3, r3, #2
   12404:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12408:	add	r3, r2, r3
   1240c:	str	r3, [fp, #-68]	; 0xffffffbc
   12410:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12414:	cmp	r3, #0
   12418:	beq	1244c <close@plt+0x13f0>
   1241c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12420:	cmp	r3, #2
   12424:	beq	1244c <close@plt+0x13f0>
   12428:	ldr	r0, [pc, #876]	; 1279c <close@plt+0x1740>
   1242c:	bl	10f9c <gettext@plt>
   12430:	mov	r3, r0
   12434:	mov	r2, r3
   12438:	mov	r1, #0
   1243c:	mov	r0, #0
   12440:	bl	10f00 <error@plt>
   12444:	mov	r0, #1
   12448:	bl	11358 <close@plt+0x2fc>
   1244c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12450:	eor	r3, r3, #1
   12454:	uxtb	r3, r3
   12458:	mov	r2, r3
   1245c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12460:	cmp	r2, r3
   12464:	bge	124f4 <close@plt+0x1498>
   12468:	ldr	r0, [pc, #816]	; 127a0 <close@plt+0x1744>
   1246c:	bl	10f9c <gettext@plt>
   12470:	mov	r4, r0
   12474:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12478:	eor	r3, r3, #1
   1247c:	uxtb	r3, r3
   12480:	cmp	r3, #0
   12484:	beq	12490 <close@plt+0x1434>
   12488:	mov	r3, #4
   1248c:	b	12494 <close@plt+0x1438>
   12490:	mov	r3, #0
   12494:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12498:	add	r3, r2, r3
   1249c:	ldr	r3, [r3]
   124a0:	mov	r0, r3
   124a4:	bl	15f20 <_obstack_memory_used@@Base+0x27f4>
   124a8:	mov	r3, r0
   124ac:	mov	r2, r4
   124b0:	mov	r1, #0
   124b4:	mov	r0, #0
   124b8:	bl	10f00 <error@plt>
   124bc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   124c0:	cmp	r3, #0
   124c4:	beq	124ec <close@plt+0x1490>
   124c8:	ldr	r3, [pc, #724]	; 127a4 <close@plt+0x1748>
   124cc:	ldr	r4, [r3]
   124d0:	ldr	r0, [pc, #720]	; 127a8 <close@plt+0x174c>
   124d4:	bl	10f9c <gettext@plt>
   124d8:	mov	r3, r0
   124dc:	mov	r2, r3
   124e0:	ldr	r1, [pc, #708]	; 127ac <close@plt+0x1750>
   124e4:	mov	r0, r4
   124e8:	bl	10fb4 <fprintf@plt>
   124ec:	mov	r0, #1
   124f0:	bl	11358 <close@plt+0x2fc>
   124f4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   124f8:	cmp	r3, #0
   124fc:	beq	12550 <close@plt+0x14f4>
   12500:	ldr	r3, [pc, #680]	; 127b0 <close@plt+0x1754>
   12504:	str	r3, [fp, #-28]	; 0xffffffe4
   12508:	b	12530 <close@plt+0x14d4>
   1250c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12510:	bl	10f30 <puts@plt>
   12514:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12518:	bl	10fa8 <strlen@plt>
   1251c:	mov	r3, r0
   12520:	add	r3, r3, #1
   12524:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12528:	add	r3, r2, r3
   1252c:	str	r3, [fp, #-28]	; 0xffffffe4
   12530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12534:	ldr	r2, [pc, #628]	; 127b0 <close@plt+0x1754>
   12538:	sub	r3, r3, r2
   1253c:	mov	r2, r3
   12540:	ldr	r3, [pc, #620]	; 127b4 <close@plt+0x1758>
   12544:	cmp	r2, r3
   12548:	bls	1250c <close@plt+0x14b0>
   1254c:	b	12754 <close@plt+0x16f8>
   12550:	ldr	r3, [fp, #-20]	; 0xffffffec
   12554:	cmp	r3, #2
   12558:	bne	1258c <close@plt+0x1530>
   1255c:	bl	11478 <close@plt+0x41c>
   12560:	str	r0, [fp, #-20]	; 0xffffffec
   12564:	ldr	r3, [fp, #-20]	; 0xffffffec
   12568:	cmp	r3, #2
   1256c:	bne	1258c <close@plt+0x1530>
   12570:	ldr	r0, [pc, #576]	; 127b8 <close@plt+0x175c>
   12574:	bl	10f9c <gettext@plt>
   12578:	mov	r3, r0
   1257c:	mov	r2, r3
   12580:	mov	r1, #0
   12584:	mov	r0, #1
   12588:	bl	10f00 <error@plt>
   1258c:	ldr	r3, [pc, #552]	; 127bc <close@plt+0x1760>
   12590:	str	r3, [sp]
   12594:	ldr	r3, [pc, #548]	; 127c0 <close@plt+0x1764>
   12598:	mov	r2, #0
   1259c:	mov	r1, #0
   125a0:	ldr	r0, [pc, #540]	; 127c4 <close@plt+0x1768>
   125a4:	bl	132b4 <_obstack_begin@@Base>
   125a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   125ac:	cmp	r3, #0
   125b0:	bne	125cc <close@plt+0x1570>
   125b4:	mov	r1, #0
   125b8:	mov	r0, #0
   125bc:	bl	11a28 <close@plt+0x9cc>
   125c0:	mov	r3, r0
   125c4:	strb	r3, [fp, #-13]
   125c8:	b	125e4 <close@plt+0x1588>
   125cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   125d0:	ldr	r3, [r3]
   125d4:	mov	r0, r3
   125d8:	bl	12194 <close@plt+0x1138>
   125dc:	mov	r3, r0
   125e0:	strb	r3, [fp, #-13]
   125e4:	ldrb	r3, [fp, #-13]
   125e8:	cmp	r3, #0
   125ec:	beq	12754 <close@plt+0x16f8>
   125f0:	ldr	r3, [pc, #460]	; 127c4 <close@plt+0x1768>
   125f4:	str	r3, [fp, #-44]	; 0xffffffd4
   125f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   125fc:	ldr	r3, [r3, #12]
   12600:	mov	r2, r3
   12604:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12608:	ldr	r3, [r3, #8]
   1260c:	sub	r3, r2, r3
   12610:	str	r3, [fp, #-48]	; 0xffffffd0
   12614:	ldr	r3, [pc, #424]	; 127c4 <close@plt+0x1768>
   12618:	str	r3, [fp, #-52]	; 0xffffffcc
   1261c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12620:	ldr	r3, [r3, #8]
   12624:	str	r3, [fp, #-56]	; 0xffffffc8
   12628:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1262c:	ldr	r2, [r3, #12]
   12630:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12634:	cmp	r2, r3
   12638:	bne	1264c <close@plt+0x15f0>
   1263c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12640:	ldrb	r3, [r2, #40]	; 0x28
   12644:	orr	r3, r3, #2
   12648:	strb	r3, [r2, #40]	; 0x28
   1264c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12650:	ldr	r3, [r3, #12]
   12654:	mov	r2, r3
   12658:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1265c:	ldr	r3, [r3, #24]
   12660:	add	r2, r2, r3
   12664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12668:	ldr	r3, [r3, #24]
   1266c:	mvn	r3, r3
   12670:	and	r3, r3, r2
   12674:	mov	r2, r3
   12678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1267c:	str	r2, [r3, #12]
   12680:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12684:	ldr	r3, [r3, #12]
   12688:	mov	r2, r3
   1268c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12690:	ldr	r3, [r3, #4]
   12694:	sub	r3, r2, r3
   12698:	mov	r2, r3
   1269c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126a0:	ldr	r3, [r3, #16]
   126a4:	mov	r1, r3
   126a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126ac:	ldr	r3, [r3, #4]
   126b0:	sub	r3, r1, r3
   126b4:	cmp	r2, r3
   126b8:	bls	126cc <close@plt+0x1670>
   126bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126c0:	ldr	r2, [r3, #16]
   126c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126c8:	str	r2, [r3, #12]
   126cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126d0:	ldr	r2, [r3, #12]
   126d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126d8:	str	r2, [r3, #8]
   126dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   126e0:	str	r3, [fp, #-60]	; 0xffffffc4
   126e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   126e8:	cmp	r3, #0
   126ec:	bne	12704 <close@plt+0x16a8>
   126f0:	ldr	r3, [pc, #208]	; 127c8 <close@plt+0x176c>
   126f4:	str	r3, [fp, #-32]	; 0xffffffe0
   126f8:	ldr	r3, [pc, #204]	; 127cc <close@plt+0x1770>
   126fc:	str	r3, [fp, #-36]	; 0xffffffdc
   12700:	b	12714 <close@plt+0x16b8>
   12704:	ldr	r3, [pc, #196]	; 127d0 <close@plt+0x1774>
   12708:	str	r3, [fp, #-32]	; 0xffffffe0
   1270c:	ldr	r3, [pc, #192]	; 127d4 <close@plt+0x1778>
   12710:	str	r3, [fp, #-36]	; 0xffffffdc
   12714:	ldr	r3, [pc, #96]	; 1277c <close@plt+0x1720>
   12718:	ldr	r3, [r3]
   1271c:	mov	r1, r3
   12720:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12724:	bl	10df8 <fputs_unlocked@plt>
   12728:	ldr	r3, [pc, #76]	; 1277c <close@plt+0x1720>
   1272c:	ldr	r3, [r3]
   12730:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12734:	mov	r1, #1
   12738:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1273c:	bl	10e64 <fwrite_unlocked@plt>
   12740:	ldr	r3, [pc, #52]	; 1277c <close@plt+0x1720>
   12744:	ldr	r3, [r3]
   12748:	mov	r1, r3
   1274c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12750:	bl	10df8 <fputs_unlocked@plt>
   12754:	ldrb	r3, [fp, #-13]
   12758:	eor	r3, r3, #1
   1275c:	uxtb	r3, r3
   12760:	mov	r0, r3
   12764:	sub	sp, fp, #8
   12768:	pop	{r4, fp, pc}
   1276c:	andeq	r8, r1, ip, ror #10
   12770:	ldrdeq	r9, [r1], -r4
   12774:	andeq	r8, r1, r4, lsl #11
   12778:	strdeq	r2, [r1], -r4
   1277c:	andeq	fp, r2, r4, asr r1
   12780:	andeq	fp, r2, ip, ror #1
   12784:	andeq	r9, r1, ip, ror #27
   12788:			; <UNDEFINED> instruction: 0x000184b4
   1278c:	andeq	r9, r1, r8, lsr #26
   12790:	andeq	r9, r1, r4, lsl #20
   12794:	strdeq	r9, [r1], -ip
   12798:	andeq	fp, r2, r0, asr #2
   1279c:	andeq	r9, r1, r0, lsl #28
   127a0:	andeq	r9, r1, r8, ror #28
   127a4:	andeq	fp, r2, r8, asr #2
   127a8:	andeq	r9, r1, ip, ror lr
   127ac:			; <UNDEFINED> instruction: 0x00019eb8
   127b0:	andeq	r8, r1, r0, lsr #12
   127b4:	ldrdeq	r1, [r0], -r5
   127b8:			; <UNDEFINED> instruction: 0x00019ebc
   127bc:	andeq	r2, r1, r8, asr #25
   127c0:	andeq	r7, r1, r4, asr r3
   127c4:	andeq	fp, r2, ip, asr r1
   127c8:	strdeq	r9, [r1], -ip
   127cc:	andeq	r9, r1, r8, lsl #30
   127d0:	andeq	r9, r1, r0, lsr #30
   127d4:	andeq	r9, r1, r4, lsr pc
   127d8:	push	{fp}		; (str fp, [sp, #-4]!)
   127dc:	add	fp, sp, #0
   127e0:	sub	sp, sp, #28
   127e4:	str	r0, [fp, #-24]	; 0xffffffe8
   127e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127ec:	str	r3, [fp, #-8]
   127f0:	mov	r3, #0
   127f4:	strb	r3, [fp, #-13]
   127f8:	b	12808 <close@plt+0x17ac>
   127fc:	ldr	r3, [fp, #-8]
   12800:	add	r3, r3, #1
   12804:	str	r3, [fp, #-8]
   12808:	ldr	r3, [fp, #-8]
   1280c:	ldrb	r3, [r3]
   12810:	cmp	r3, #47	; 0x2f
   12814:	beq	127fc <close@plt+0x17a0>
   12818:	ldr	r3, [fp, #-8]
   1281c:	str	r3, [fp, #-12]
   12820:	b	12868 <close@plt+0x180c>
   12824:	ldr	r3, [fp, #-12]
   12828:	ldrb	r3, [r3]
   1282c:	cmp	r3, #47	; 0x2f
   12830:	bne	12840 <close@plt+0x17e4>
   12834:	mov	r3, #1
   12838:	strb	r3, [fp, #-13]
   1283c:	b	1285c <close@plt+0x1800>
   12840:	ldrb	r3, [fp, #-13]
   12844:	cmp	r3, #0
   12848:	beq	1285c <close@plt+0x1800>
   1284c:	ldr	r3, [fp, #-12]
   12850:	str	r3, [fp, #-8]
   12854:	mov	r3, #0
   12858:	strb	r3, [fp, #-13]
   1285c:	ldr	r3, [fp, #-12]
   12860:	add	r3, r3, #1
   12864:	str	r3, [fp, #-12]
   12868:	ldr	r3, [fp, #-12]
   1286c:	ldrb	r3, [r3]
   12870:	cmp	r3, #0
   12874:	bne	12824 <close@plt+0x17c8>
   12878:	ldr	r3, [fp, #-8]
   1287c:	mov	r0, r3
   12880:	add	sp, fp, #0
   12884:	pop	{fp}		; (ldr fp, [sp], #4)
   12888:	bx	lr
   1288c:	push	{fp, lr}
   12890:	add	fp, sp, #4
   12894:	sub	sp, sp, #16
   12898:	str	r0, [fp, #-16]
   1289c:	mov	r3, #0
   128a0:	str	r3, [fp, #-12]
   128a4:	ldr	r0, [fp, #-16]
   128a8:	bl	10fa8 <strlen@plt>
   128ac:	str	r0, [fp, #-8]
   128b0:	b	128c0 <close@plt+0x1864>
   128b4:	ldr	r3, [fp, #-8]
   128b8:	sub	r3, r3, #1
   128bc:	str	r3, [fp, #-8]
   128c0:	ldr	r3, [fp, #-8]
   128c4:	cmp	r3, #1
   128c8:	bls	128e8 <close@plt+0x188c>
   128cc:	ldr	r3, [fp, #-8]
   128d0:	sub	r3, r3, #1
   128d4:	ldr	r2, [fp, #-16]
   128d8:	add	r3, r2, r3
   128dc:	ldrb	r3, [r3]
   128e0:	cmp	r3, #47	; 0x2f
   128e4:	beq	128b4 <close@plt+0x1858>
   128e8:	ldr	r3, [fp, #-8]
   128ec:	mov	r0, r3
   128f0:	sub	sp, fp, #4
   128f4:	pop	{fp, pc}
   128f8:	push	{r4, r5, fp, lr}
   128fc:	add	fp, sp, #12
   12900:	sub	sp, sp, #16
   12904:	str	r0, [fp, #-24]	; 0xffffffe8
   12908:	str	r1, [fp, #-28]	; 0xffffffe4
   1290c:	ldr	r5, [fp, #-24]	; 0xffffffe8
   12910:	ldr	r4, [fp, #-28]	; 0xffffffe4
   12914:	cmp	r5, r4
   12918:	bne	12924 <close@plt+0x18c8>
   1291c:	mov	r3, #0
   12920:	b	12984 <close@plt+0x1928>
   12924:	ldrb	r3, [r5]
   12928:	mov	r0, r3
   1292c:	bl	17940 <_obstack_memory_used@@Base+0x4214>
   12930:	mov	r3, r0
   12934:	strb	r3, [fp, #-13]
   12938:	ldrb	r3, [r4]
   1293c:	mov	r0, r3
   12940:	bl	17940 <_obstack_memory_used@@Base+0x4214>
   12944:	mov	r3, r0
   12948:	strb	r3, [fp, #-14]
   1294c:	ldrb	r3, [fp, #-13]
   12950:	cmp	r3, #0
   12954:	beq	12974 <close@plt+0x1918>
   12958:	add	r5, r5, #1
   1295c:	add	r4, r4, #1
   12960:	ldrb	r2, [fp, #-13]
   12964:	ldrb	r3, [fp, #-14]
   12968:	cmp	r2, r3
   1296c:	beq	12924 <close@plt+0x18c8>
   12970:	b	12978 <close@plt+0x191c>
   12974:	nop			; (mov r0, r0)
   12978:	ldrb	r2, [fp, #-13]
   1297c:	ldrb	r3, [fp, #-14]
   12980:	sub	r3, r2, r3
   12984:	mov	r0, r3
   12988:	sub	sp, fp, #12
   1298c:	pop	{r4, r5, fp, pc}
   12990:	push	{fp}		; (str fp, [sp, #-4]!)
   12994:	add	fp, sp, #0
   12998:	sub	sp, sp, #12
   1299c:	str	r0, [fp, #-8]
   129a0:	ldr	r2, [pc, #20]	; 129bc <close@plt+0x1960>
   129a4:	ldr	r3, [fp, #-8]
   129a8:	str	r3, [r2]
   129ac:	nop			; (mov r0, r0)
   129b0:	add	sp, fp, #0
   129b4:	pop	{fp}		; (ldr fp, [sp], #4)
   129b8:	bx	lr
   129bc:	andeq	fp, r2, r8, lsl #3
   129c0:	push	{fp}		; (str fp, [sp, #-4]!)
   129c4:	add	fp, sp, #0
   129c8:	sub	sp, sp, #12
   129cc:	mov	r3, r0
   129d0:	strb	r3, [fp, #-5]
   129d4:	ldr	r2, [pc, #20]	; 129f0 <close@plt+0x1994>
   129d8:	ldrb	r3, [fp, #-5]
   129dc:	strb	r3, [r2]
   129e0:	nop			; (mov r0, r0)
   129e4:	add	sp, fp, #0
   129e8:	pop	{fp}		; (ldr fp, [sp], #4)
   129ec:	bx	lr
   129f0:	andeq	fp, r2, ip, lsl #3
   129f4:	push	{r4, fp, lr}
   129f8:	add	fp, sp, #8
   129fc:	sub	sp, sp, #20
   12a00:	ldr	r3, [pc, #256]	; 12b08 <close@plt+0x1aac>
   12a04:	ldr	r3, [r3]
   12a08:	mov	r0, r3
   12a0c:	bl	179c0 <_obstack_memory_used@@Base+0x4294>
   12a10:	mov	r3, r0
   12a14:	cmp	r3, #0
   12a18:	beq	12ad0 <close@plt+0x1a74>
   12a1c:	ldr	r3, [pc, #232]	; 12b0c <close@plt+0x1ab0>
   12a20:	ldrb	r3, [r3]
   12a24:	eor	r3, r3, #1
   12a28:	uxtb	r3, r3
   12a2c:	cmp	r3, #0
   12a30:	bne	12a48 <close@plt+0x19ec>
   12a34:	bl	10fc0 <__errno_location@plt>
   12a38:	mov	r3, r0
   12a3c:	ldr	r3, [r3]
   12a40:	cmp	r3, #32
   12a44:	beq	12ad0 <close@plt+0x1a74>
   12a48:	ldr	r0, [pc, #192]	; 12b10 <close@plt+0x1ab4>
   12a4c:	bl	10f9c <gettext@plt>
   12a50:	str	r0, [fp, #-16]
   12a54:	ldr	r3, [pc, #184]	; 12b14 <close@plt+0x1ab8>
   12a58:	ldr	r3, [r3]
   12a5c:	cmp	r3, #0
   12a60:	beq	12aa4 <close@plt+0x1a48>
   12a64:	bl	10fc0 <__errno_location@plt>
   12a68:	mov	r3, r0
   12a6c:	ldr	r4, [r3]
   12a70:	ldr	r3, [pc, #156]	; 12b14 <close@plt+0x1ab8>
   12a74:	ldr	r3, [r3]
   12a78:	mov	r0, r3
   12a7c:	bl	15c50 <_obstack_memory_used@@Base+0x2524>
   12a80:	mov	r2, r0
   12a84:	ldr	r3, [fp, #-16]
   12a88:	str	r3, [sp]
   12a8c:	mov	r3, r2
   12a90:	ldr	r2, [pc, #128]	; 12b18 <close@plt+0x1abc>
   12a94:	mov	r1, r4
   12a98:	mov	r0, #0
   12a9c:	bl	10f00 <error@plt>
   12aa0:	b	12ac0 <close@plt+0x1a64>
   12aa4:	bl	10fc0 <__errno_location@plt>
   12aa8:	mov	r3, r0
   12aac:	ldr	r1, [r3]
   12ab0:	ldr	r3, [fp, #-16]
   12ab4:	ldr	r2, [pc, #96]	; 12b1c <close@plt+0x1ac0>
   12ab8:	mov	r0, #0
   12abc:	bl	10f00 <error@plt>
   12ac0:	ldr	r3, [pc, #88]	; 12b20 <close@plt+0x1ac4>
   12ac4:	ldr	r3, [r3]
   12ac8:	mov	r0, r3
   12acc:	bl	10e40 <_exit@plt>
   12ad0:	ldr	r3, [pc, #76]	; 12b24 <close@plt+0x1ac8>
   12ad4:	ldr	r3, [r3]
   12ad8:	mov	r0, r3
   12adc:	bl	179c0 <_obstack_memory_used@@Base+0x4294>
   12ae0:	mov	r3, r0
   12ae4:	cmp	r3, #0
   12ae8:	beq	12afc <close@plt+0x1aa0>
   12aec:	ldr	r3, [pc, #44]	; 12b20 <close@plt+0x1ac4>
   12af0:	ldr	r3, [r3]
   12af4:	mov	r0, r3
   12af8:	bl	10e40 <_exit@plt>
   12afc:	nop			; (mov r0, r0)
   12b00:	sub	sp, fp, #8
   12b04:	pop	{r4, fp, pc}
   12b08:	andeq	fp, r2, r4, asr r1
   12b0c:	andeq	fp, r2, ip, lsl #3
   12b10:	andeq	r9, r1, r8, asr #30
   12b14:	andeq	fp, r2, r8, lsl #3
   12b18:	andeq	r9, r1, r4, asr pc
   12b1c:	andeq	r9, r1, ip, asr pc
   12b20:	strdeq	fp, [r2], -r0
   12b24:	andeq	fp, r2, r8, asr #2
   12b28:	push	{fp, lr}
   12b2c:	add	fp, sp, #4
   12b30:	sub	sp, sp, #32
   12b34:	str	r0, [fp, #-24]	; 0xffffffe8
   12b38:	mov	r3, #0
   12b3c:	str	r3, [fp, #-8]
   12b40:	mov	r3, #0
   12b44:	str	r3, [fp, #-12]
   12b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b4c:	bl	10fe4 <fileno@plt>
   12b50:	str	r0, [fp, #-16]
   12b54:	ldr	r3, [fp, #-16]
   12b58:	cmp	r3, #0
   12b5c:	bge	12b70 <close@plt+0x1b14>
   12b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b64:	bl	10ff0 <fclose@plt>
   12b68:	mov	r3, r0
   12b6c:	b	12c14 <close@plt+0x1bb8>
   12b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b74:	bl	10f54 <__freading@plt>
   12b78:	mov	r3, r0
   12b7c:	cmp	r3, #0
   12b80:	beq	12bbc <close@plt+0x1b60>
   12b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b88:	bl	10fe4 <fileno@plt>
   12b8c:	mov	r1, r0
   12b90:	mov	r3, #1
   12b94:	str	r3, [sp]
   12b98:	mov	r2, #0
   12b9c:	mov	r3, #0
   12ba0:	mov	r0, r1
   12ba4:	bl	10ec4 <lseek64@plt>
   12ba8:	mvn	r2, #0
   12bac:	mvn	r3, #0
   12bb0:	cmp	r1, r3
   12bb4:	cmpeq	r0, r2
   12bb8:	beq	12be0 <close@plt+0x1b84>
   12bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bc0:	bl	12c68 <close@plt+0x1c0c>
   12bc4:	mov	r3, r0
   12bc8:	cmp	r3, #0
   12bcc:	beq	12be0 <close@plt+0x1b84>
   12bd0:	bl	10fc0 <__errno_location@plt>
   12bd4:	mov	r3, r0
   12bd8:	ldr	r3, [r3]
   12bdc:	str	r3, [fp, #-8]
   12be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12be4:	bl	10ff0 <fclose@plt>
   12be8:	str	r0, [fp, #-12]
   12bec:	ldr	r3, [fp, #-8]
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c10 <close@plt+0x1bb4>
   12bf8:	bl	10fc0 <__errno_location@plt>
   12bfc:	mov	r2, r0
   12c00:	ldr	r3, [fp, #-8]
   12c04:	str	r3, [r2]
   12c08:	mvn	r3, #0
   12c0c:	str	r3, [fp, #-12]
   12c10:	ldr	r3, [fp, #-12]
   12c14:	mov	r0, r3
   12c18:	sub	sp, fp, #4
   12c1c:	pop	{fp, pc}
   12c20:	push	{fp, lr}
   12c24:	add	fp, sp, #4
   12c28:	sub	sp, sp, #16
   12c2c:	str	r0, [fp, #-8]
   12c30:	ldr	r3, [fp, #-8]
   12c34:	ldr	r3, [r3]
   12c38:	and	r3, r3, #256	; 0x100
   12c3c:	cmp	r3, #0
   12c40:	beq	12c5c <close@plt+0x1c00>
   12c44:	mov	r3, #1
   12c48:	str	r3, [sp]
   12c4c:	mov	r2, #0
   12c50:	mov	r3, #0
   12c54:	ldr	r0, [fp, #-8]
   12c58:	bl	12fa4 <close@plt+0x1f48>
   12c5c:	nop			; (mov r0, r0)
   12c60:	sub	sp, fp, #4
   12c64:	pop	{fp, pc}
   12c68:	push	{fp, lr}
   12c6c:	add	fp, sp, #4
   12c70:	sub	sp, sp, #8
   12c74:	str	r0, [fp, #-8]
   12c78:	ldr	r3, [fp, #-8]
   12c7c:	cmp	r3, #0
   12c80:	beq	12c98 <close@plt+0x1c3c>
   12c84:	ldr	r0, [fp, #-8]
   12c88:	bl	10f54 <__freading@plt>
   12c8c:	mov	r3, r0
   12c90:	cmp	r3, #0
   12c94:	bne	12ca8 <close@plt+0x1c4c>
   12c98:	ldr	r0, [fp, #-8]
   12c9c:	bl	10e28 <fflush@plt>
   12ca0:	mov	r3, r0
   12ca4:	b	12cbc <close@plt+0x1c60>
   12ca8:	ldr	r0, [fp, #-8]
   12cac:	bl	12c20 <close@plt+0x1bc4>
   12cb0:	ldr	r0, [fp, #-8]
   12cb4:	bl	10e28 <fflush@plt>
   12cb8:	mov	r3, r0
   12cbc:	mov	r0, r3
   12cc0:	sub	sp, fp, #4
   12cc4:	pop	{fp, pc}
   12cc8:	push	{r4, fp, lr}
   12ccc:	add	fp, sp, #8
   12cd0:	sub	sp, sp, #20
   12cd4:	str	r0, [fp, #-24]	; 0xffffffe8
   12cd8:	bl	10fc0 <__errno_location@plt>
   12cdc:	mov	r3, r0
   12ce0:	ldr	r3, [r3]
   12ce4:	str	r3, [fp, #-20]	; 0xffffffec
   12ce8:	bl	10fc0 <__errno_location@plt>
   12cec:	mov	r3, r0
   12cf0:	ldr	r3, [r3]
   12cf4:	str	r3, [fp, #-16]
   12cf8:	bl	10fc0 <__errno_location@plt>
   12cfc:	mov	r2, r0
   12d00:	mov	r3, #0
   12d04:	str	r3, [r2]
   12d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d0c:	bl	10e34 <free@plt>
   12d10:	bl	10fc0 <__errno_location@plt>
   12d14:	mov	r4, r0
   12d18:	bl	10fc0 <__errno_location@plt>
   12d1c:	mov	r3, r0
   12d20:	ldr	r3, [r3]
   12d24:	cmp	r3, #0
   12d28:	moveq	r3, #1
   12d2c:	movne	r3, #0
   12d30:	uxtb	r3, r3
   12d34:	lsl	r3, r3, #2
   12d38:	sub	r2, fp, #12
   12d3c:	add	r3, r2, r3
   12d40:	ldr	r3, [r3, #-8]
   12d44:	str	r3, [r4]
   12d48:	nop			; (mov r0, r0)
   12d4c:	sub	sp, fp, #8
   12d50:	pop	{r4, fp, pc}
   12d54:	push	{fp, lr}
   12d58:	add	fp, sp, #4
   12d5c:	sub	sp, sp, #16
   12d60:	str	r0, [fp, #-16]
   12d64:	mov	r1, #0
   12d68:	ldr	r0, [pc, #80]	; 12dc0 <close@plt+0x1d64>
   12d6c:	bl	10f18 <open64@plt>
   12d70:	str	r0, [fp, #-8]
   12d74:	ldr	r2, [fp, #-8]
   12d78:	ldr	r3, [fp, #-16]
   12d7c:	cmp	r2, r3
   12d80:	beq	12db0 <close@plt+0x1d54>
   12d84:	ldr	r3, [fp, #-8]
   12d88:	cmp	r3, #0
   12d8c:	blt	12da8 <close@plt+0x1d4c>
   12d90:	ldr	r0, [fp, #-8]
   12d94:	bl	1105c <close@plt>
   12d98:	bl	10fc0 <__errno_location@plt>
   12d9c:	mov	r2, r0
   12da0:	mov	r3, #9
   12da4:	str	r3, [r2]
   12da8:	mov	r3, #0
   12dac:	b	12db4 <close@plt+0x1d58>
   12db0:	mov	r3, #1
   12db4:	mov	r0, r3
   12db8:	sub	sp, fp, #4
   12dbc:	pop	{fp, pc}
   12dc0:	andeq	r9, r1, r0, ror #30
   12dc4:	push	{fp, lr}
   12dc8:	add	fp, sp, #4
   12dcc:	sub	sp, sp, #24
   12dd0:	str	r0, [fp, #-16]
   12dd4:	str	r1, [fp, #-20]	; 0xffffffec
   12dd8:	str	r2, [fp, #-24]	; 0xffffffe8
   12ddc:	mov	r3, #0
   12de0:	strb	r3, [fp, #-5]
   12de4:	mov	r3, #0
   12de8:	strb	r3, [fp, #-6]
   12dec:	mov	r3, #0
   12df0:	strb	r3, [fp, #-7]
   12df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12df8:	bl	10fe4 <fileno@plt>
   12dfc:	mov	r3, r0
   12e00:	cmp	r3, #1
   12e04:	beq	12e58 <close@plt+0x1dfc>
   12e08:	cmp	r3, #2
   12e0c:	beq	12e38 <close@plt+0x1ddc>
   12e10:	cmp	r3, #0
   12e14:	beq	12e78 <close@plt+0x1e1c>
   12e18:	mov	r1, #2
   12e1c:	mov	r0, #2
   12e20:	bl	10e88 <dup2@plt>
   12e24:	mov	r3, r0
   12e28:	cmp	r3, #2
   12e2c:	beq	12e38 <close@plt+0x1ddc>
   12e30:	mov	r3, #1
   12e34:	strb	r3, [fp, #-7]
   12e38:	mov	r1, #1
   12e3c:	mov	r0, #1
   12e40:	bl	10e88 <dup2@plt>
   12e44:	mov	r3, r0
   12e48:	cmp	r3, #1
   12e4c:	beq	12e58 <close@plt+0x1dfc>
   12e50:	mov	r3, #1
   12e54:	strb	r3, [fp, #-6]
   12e58:	mov	r1, #0
   12e5c:	mov	r0, #0
   12e60:	bl	10e88 <dup2@plt>
   12e64:	mov	r3, r0
   12e68:	cmp	r3, #0
   12e6c:	beq	12e78 <close@plt+0x1e1c>
   12e70:	mov	r3, #1
   12e74:	strb	r3, [fp, #-5]
   12e78:	nop			; (mov r0, r0)
   12e7c:	ldrb	r3, [fp, #-5]
   12e80:	cmp	r3, #0
   12e84:	beq	12eb0 <close@plt+0x1e54>
   12e88:	mov	r0, #0
   12e8c:	bl	12d54 <close@plt+0x1cf8>
   12e90:	mov	r3, r0
   12e94:	eor	r3, r3, #1
   12e98:	uxtb	r3, r3
   12e9c:	cmp	r3, #0
   12ea0:	beq	12eb0 <close@plt+0x1e54>
   12ea4:	mov	r3, #0
   12ea8:	str	r3, [fp, #-24]	; 0xffffffe8
   12eac:	b	12f2c <close@plt+0x1ed0>
   12eb0:	ldrb	r3, [fp, #-6]
   12eb4:	cmp	r3, #0
   12eb8:	beq	12ee4 <close@plt+0x1e88>
   12ebc:	mov	r0, #1
   12ec0:	bl	12d54 <close@plt+0x1cf8>
   12ec4:	mov	r3, r0
   12ec8:	eor	r3, r3, #1
   12ecc:	uxtb	r3, r3
   12ed0:	cmp	r3, #0
   12ed4:	beq	12ee4 <close@plt+0x1e88>
   12ed8:	mov	r3, #0
   12edc:	str	r3, [fp, #-24]	; 0xffffffe8
   12ee0:	b	12f2c <close@plt+0x1ed0>
   12ee4:	ldrb	r3, [fp, #-7]
   12ee8:	cmp	r3, #0
   12eec:	beq	12f18 <close@plt+0x1ebc>
   12ef0:	mov	r0, #2
   12ef4:	bl	12d54 <close@plt+0x1cf8>
   12ef8:	mov	r3, r0
   12efc:	eor	r3, r3, #1
   12f00:	uxtb	r3, r3
   12f04:	cmp	r3, #0
   12f08:	beq	12f18 <close@plt+0x1ebc>
   12f0c:	mov	r3, #0
   12f10:	str	r3, [fp, #-24]	; 0xffffffe8
   12f14:	b	12f2c <close@plt+0x1ed0>
   12f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f20:	ldr	r0, [fp, #-16]
   12f24:	bl	10f6c <freopen64@plt>
   12f28:	str	r0, [fp, #-24]	; 0xffffffe8
   12f2c:	bl	10fc0 <__errno_location@plt>
   12f30:	mov	r3, r0
   12f34:	ldr	r3, [r3]
   12f38:	str	r3, [fp, #-12]
   12f3c:	ldrb	r3, [fp, #-7]
   12f40:	cmp	r3, #0
   12f44:	beq	12f50 <close@plt+0x1ef4>
   12f48:	mov	r0, #2
   12f4c:	bl	1105c <close@plt>
   12f50:	ldrb	r3, [fp, #-6]
   12f54:	cmp	r3, #0
   12f58:	beq	12f64 <close@plt+0x1f08>
   12f5c:	mov	r0, #1
   12f60:	bl	1105c <close@plt>
   12f64:	ldrb	r3, [fp, #-5]
   12f68:	cmp	r3, #0
   12f6c:	beq	12f78 <close@plt+0x1f1c>
   12f70:	mov	r0, #0
   12f74:	bl	1105c <close@plt>
   12f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f7c:	cmp	r3, #0
   12f80:	bne	12f94 <close@plt+0x1f38>
   12f84:	bl	10fc0 <__errno_location@plt>
   12f88:	mov	r2, r0
   12f8c:	ldr	r3, [fp, #-12]
   12f90:	str	r3, [r2]
   12f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f98:	mov	r0, r3
   12f9c:	sub	sp, fp, #4
   12fa0:	pop	{fp, pc}
   12fa4:	push	{fp, lr}
   12fa8:	add	fp, sp, #4
   12fac:	sub	sp, sp, #32
   12fb0:	str	r0, [fp, #-16]
   12fb4:	strd	r2, [fp, #-28]	; 0xffffffe4
   12fb8:	ldr	r3, [fp, #-16]
   12fbc:	ldr	r2, [r3, #8]
   12fc0:	ldr	r3, [fp, #-16]
   12fc4:	ldr	r3, [r3, #4]
   12fc8:	cmp	r2, r3
   12fcc:	bne	13064 <close@plt+0x2008>
   12fd0:	ldr	r3, [fp, #-16]
   12fd4:	ldr	r2, [r3, #20]
   12fd8:	ldr	r3, [fp, #-16]
   12fdc:	ldr	r3, [r3, #16]
   12fe0:	cmp	r2, r3
   12fe4:	bne	13064 <close@plt+0x2008>
   12fe8:	ldr	r3, [fp, #-16]
   12fec:	ldr	r3, [r3, #36]	; 0x24
   12ff0:	cmp	r3, #0
   12ff4:	bne	13064 <close@plt+0x2008>
   12ff8:	ldr	r0, [fp, #-16]
   12ffc:	bl	10fe4 <fileno@plt>
   13000:	mov	r1, r0
   13004:	ldr	r3, [fp, #4]
   13008:	str	r3, [sp]
   1300c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13010:	mov	r0, r1
   13014:	bl	10ec4 <lseek64@plt>
   13018:	strd	r0, [fp, #-12]
   1301c:	ldrd	r2, [fp, #-12]
   13020:	mvn	r0, #0
   13024:	mvn	r1, #0
   13028:	cmp	r3, r1
   1302c:	cmpeq	r2, r0
   13030:	bne	1303c <close@plt+0x1fe0>
   13034:	mvn	r3, #0
   13038:	b	1307c <close@plt+0x2020>
   1303c:	ldr	r3, [fp, #-16]
   13040:	ldr	r3, [r3]
   13044:	bic	r2, r3, #16
   13048:	ldr	r3, [fp, #-16]
   1304c:	str	r2, [r3]
   13050:	ldr	r1, [fp, #-16]
   13054:	ldrd	r2, [fp, #-12]
   13058:	strd	r2, [r1, #80]	; 0x50
   1305c:	mov	r3, #0
   13060:	b	1307c <close@plt+0x2020>
   13064:	ldr	r3, [fp, #4]
   13068:	str	r3, [sp]
   1306c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13070:	ldr	r0, [fp, #-16]
   13074:	bl	10ffc <fseeko64@plt>
   13078:	mov	r3, r0
   1307c:	mov	r0, r3
   13080:	sub	sp, fp, #4
   13084:	pop	{fp, pc}
   13088:	push	{fp, lr}
   1308c:	add	fp, sp, #4
   13090:	sub	sp, sp, #8
   13094:	str	r0, [fp, #-8]
   13098:	str	r1, [fp, #-12]
   1309c:	ldr	r3, [fp, #-8]
   130a0:	ldrb	r3, [r3, #40]	; 0x28
   130a4:	and	r3, r3, #1
   130a8:	uxtb	r3, r3
   130ac:	cmp	r3, #0
   130b0:	beq	130d8 <close@plt+0x207c>
   130b4:	ldr	r3, [fp, #-8]
   130b8:	ldr	r3, [r3, #28]
   130bc:	ldr	r2, [fp, #-8]
   130c0:	ldr	r2, [r2, #36]	; 0x24
   130c4:	ldr	r1, [fp, #-12]
   130c8:	mov	r0, r2
   130cc:	blx	r3
   130d0:	mov	r3, r0
   130d4:	b	130ec <close@plt+0x2090>
   130d8:	ldr	r3, [fp, #-8]
   130dc:	ldr	r3, [r3, #28]
   130e0:	ldr	r0, [fp, #-12]
   130e4:	blx	r3
   130e8:	mov	r3, r0
   130ec:	mov	r0, r3
   130f0:	sub	sp, fp, #4
   130f4:	pop	{fp, pc}
   130f8:	push	{fp, lr}
   130fc:	add	fp, sp, #4
   13100:	sub	sp, sp, #8
   13104:	str	r0, [fp, #-8]
   13108:	str	r1, [fp, #-12]
   1310c:	ldr	r3, [fp, #-8]
   13110:	ldrb	r3, [r3, #40]	; 0x28
   13114:	and	r3, r3, #1
   13118:	uxtb	r3, r3
   1311c:	cmp	r3, #0
   13120:	beq	13144 <close@plt+0x20e8>
   13124:	ldr	r3, [fp, #-8]
   13128:	ldr	r3, [r3, #32]
   1312c:	ldr	r2, [fp, #-8]
   13130:	ldr	r2, [r2, #36]	; 0x24
   13134:	ldr	r1, [fp, #-12]
   13138:	mov	r0, r2
   1313c:	blx	r3
   13140:	b	13154 <close@plt+0x20f8>
   13144:	ldr	r3, [fp, #-8]
   13148:	ldr	r3, [r3, #32]
   1314c:	ldr	r0, [fp, #-12]
   13150:	blx	r3
   13154:	nop			; (mov r0, r0)
   13158:	sub	sp, fp, #4
   1315c:	pop	{fp, pc}
   13160:	push	{fp, lr}
   13164:	add	fp, sp, #4
   13168:	sub	sp, sp, #24
   1316c:	str	r0, [fp, #-16]
   13170:	str	r1, [fp, #-20]	; 0xffffffec
   13174:	str	r2, [fp, #-24]	; 0xffffffe8
   13178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1317c:	cmp	r3, #0
   13180:	bne	1318c <close@plt+0x2130>
   13184:	mov	r3, #8
   13188:	str	r3, [fp, #-24]	; 0xffffffe8
   1318c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13190:	cmp	r3, #0
   13194:	bne	131ac <close@plt+0x2150>
   13198:	mov	r3, #24
   1319c:	str	r3, [fp, #-8]
   131a0:	ldr	r3, [fp, #-8]
   131a4:	rsb	r3, r3, #4096	; 0x1000
   131a8:	str	r3, [fp, #-20]	; 0xffffffec
   131ac:	ldr	r3, [fp, #-16]
   131b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   131b4:	str	r2, [r3]
   131b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131bc:	sub	r2, r3, #1
   131c0:	ldr	r3, [fp, #-16]
   131c4:	str	r2, [r3, #24]
   131c8:	ldr	r3, [fp, #-16]
   131cc:	ldr	r3, [r3]
   131d0:	mov	r1, r3
   131d4:	ldr	r0, [fp, #-16]
   131d8:	bl	13088 <close@plt+0x202c>
   131dc:	mov	r2, r0
   131e0:	ldr	r3, [fp, #-16]
   131e4:	str	r2, [r3, #4]
   131e8:	ldr	r3, [fp, #-16]
   131ec:	ldr	r3, [r3, #4]
   131f0:	str	r3, [fp, #-12]
   131f4:	ldr	r3, [fp, #-12]
   131f8:	cmp	r3, #0
   131fc:	bne	1320c <close@plt+0x21b0>
   13200:	ldr	r3, [pc, #168]	; 132b0 <close@plt+0x2254>
   13204:	ldr	r3, [r3]
   13208:	blx	r3
   1320c:	ldr	r3, [fp, #-12]
   13210:	add	r3, r3, #8
   13214:	mov	r2, r3
   13218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1321c:	add	r3, r2, r3
   13220:	sub	r2, r3, #1
   13224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13228:	rsb	r3, r3, #0
   1322c:	and	r3, r3, r2
   13230:	mov	r2, r3
   13234:	ldr	r3, [fp, #-16]
   13238:	str	r2, [r3, #8]
   1323c:	ldr	r3, [fp, #-16]
   13240:	ldr	r2, [r3, #8]
   13244:	ldr	r3, [fp, #-16]
   13248:	str	r2, [r3, #12]
   1324c:	ldr	r3, [fp, #-16]
   13250:	ldr	r3, [r3]
   13254:	ldr	r2, [fp, #-12]
   13258:	add	r2, r2, r3
   1325c:	ldr	r3, [fp, #-12]
   13260:	str	r2, [r3]
   13264:	ldr	r3, [fp, #-12]
   13268:	ldr	r2, [r3]
   1326c:	ldr	r3, [fp, #-16]
   13270:	str	r2, [r3, #16]
   13274:	ldr	r3, [fp, #-12]
   13278:	mov	r2, #0
   1327c:	str	r2, [r3, #4]
   13280:	ldr	r2, [fp, #-16]
   13284:	ldrb	r3, [r2, #40]	; 0x28
   13288:	bic	r3, r3, #2
   1328c:	strb	r3, [r2, #40]	; 0x28
   13290:	ldr	r2, [fp, #-16]
   13294:	ldrb	r3, [r2, #40]	; 0x28
   13298:	bic	r3, r3, #4
   1329c:	strb	r3, [r2, #40]	; 0x28
   132a0:	mov	r3, #1
   132a4:	mov	r0, r3
   132a8:	sub	sp, fp, #4
   132ac:	pop	{fp, pc}
   132b0:	strdeq	fp, [r2], -r4

000132b4 <_obstack_begin@@Base>:
   132b4:	push	{fp, lr}
   132b8:	add	fp, sp, #4
   132bc:	sub	sp, sp, #16
   132c0:	str	r0, [fp, #-8]
   132c4:	str	r1, [fp, #-12]
   132c8:	str	r2, [fp, #-16]
   132cc:	str	r3, [fp, #-20]	; 0xffffffec
   132d0:	ldr	r3, [fp, #-8]
   132d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   132d8:	str	r2, [r3, #28]
   132dc:	ldr	r3, [fp, #-8]
   132e0:	ldr	r2, [fp, #4]
   132e4:	str	r2, [r3, #32]
   132e8:	ldr	r2, [fp, #-8]
   132ec:	ldrb	r3, [r2, #40]	; 0x28
   132f0:	bic	r3, r3, #1
   132f4:	strb	r3, [r2, #40]	; 0x28
   132f8:	ldr	r2, [fp, #-16]
   132fc:	ldr	r1, [fp, #-12]
   13300:	ldr	r0, [fp, #-8]
   13304:	bl	13160 <close@plt+0x2104>
   13308:	mov	r3, r0
   1330c:	mov	r0, r3
   13310:	sub	sp, fp, #4
   13314:	pop	{fp, pc}

00013318 <_obstack_begin_1@@Base>:
   13318:	push	{fp, lr}
   1331c:	add	fp, sp, #4
   13320:	sub	sp, sp, #16
   13324:	str	r0, [fp, #-8]
   13328:	str	r1, [fp, #-12]
   1332c:	str	r2, [fp, #-16]
   13330:	str	r3, [fp, #-20]	; 0xffffffec
   13334:	ldr	r3, [fp, #-8]
   13338:	ldr	r2, [fp, #-20]	; 0xffffffec
   1333c:	str	r2, [r3, #28]
   13340:	ldr	r3, [fp, #-8]
   13344:	ldr	r2, [fp, #4]
   13348:	str	r2, [r3, #32]
   1334c:	ldr	r3, [fp, #-8]
   13350:	ldr	r2, [fp, #8]
   13354:	str	r2, [r3, #36]	; 0x24
   13358:	ldr	r2, [fp, #-8]
   1335c:	ldrb	r3, [r2, #40]	; 0x28
   13360:	orr	r3, r3, #1
   13364:	strb	r3, [r2, #40]	; 0x28
   13368:	ldr	r2, [fp, #-16]
   1336c:	ldr	r1, [fp, #-12]
   13370:	ldr	r0, [fp, #-8]
   13374:	bl	13160 <close@plt+0x2104>
   13378:	mov	r3, r0
   1337c:	mov	r0, r3
   13380:	sub	sp, fp, #4
   13384:	pop	{fp, pc}

00013388 <_obstack_newchunk@@Base>:
   13388:	push	{fp, lr}
   1338c:	add	fp, sp, #4
   13390:	sub	sp, sp, #40	; 0x28
   13394:	str	r0, [fp, #-40]	; 0xffffffd8
   13398:	str	r1, [fp, #-44]	; 0xffffffd4
   1339c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133a0:	ldr	r3, [r3, #4]
   133a4:	str	r3, [fp, #-16]
   133a8:	mov	r3, #0
   133ac:	str	r3, [fp, #-8]
   133b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133b4:	ldr	r3, [r3, #12]
   133b8:	mov	r2, r3
   133bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133c0:	ldr	r3, [r3, #8]
   133c4:	sub	r3, r2, r3
   133c8:	str	r3, [fp, #-20]	; 0xffffffec
   133cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   133d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   133d4:	add	r3, r2, r3
   133d8:	str	r3, [fp, #-24]	; 0xffffffe8
   133dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133e0:	ldr	r2, [r3, #24]
   133e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133e8:	add	r3, r2, r3
   133ec:	str	r3, [fp, #-28]	; 0xffffffe4
   133f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133f4:	lsr	r2, r3, #3
   133f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133fc:	add	r3, r2, r3
   13400:	add	r3, r3, #100	; 0x64
   13404:	str	r3, [fp, #-12]
   13408:	ldr	r2, [fp, #-12]
   1340c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13410:	cmp	r2, r3
   13414:	bcs	13420 <_obstack_newchunk@@Base+0x98>
   13418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1341c:	str	r3, [fp, #-12]
   13420:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13424:	ldr	r2, [r3]
   13428:	ldr	r3, [fp, #-12]
   1342c:	cmp	r2, r3
   13430:	bls	13440 <_obstack_newchunk@@Base+0xb8>
   13434:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13438:	ldr	r3, [r3]
   1343c:	str	r3, [fp, #-12]
   13440:	ldr	r2, [fp, #-20]	; 0xffffffec
   13444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13448:	cmp	r2, r3
   1344c:	bhi	13470 <_obstack_newchunk@@Base+0xe8>
   13450:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13458:	cmp	r2, r3
   1345c:	bhi	13470 <_obstack_newchunk@@Base+0xe8>
   13460:	ldr	r1, [fp, #-12]
   13464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13468:	bl	13088 <close@plt+0x202c>
   1346c:	str	r0, [fp, #-8]
   13470:	ldr	r3, [fp, #-8]
   13474:	cmp	r3, #0
   13478:	bne	13488 <_obstack_newchunk@@Base+0x100>
   1347c:	ldr	r3, [pc, #304]	; 135b4 <_obstack_newchunk@@Base+0x22c>
   13480:	ldr	r3, [r3]
   13484:	blx	r3
   13488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1348c:	ldr	r2, [fp, #-8]
   13490:	str	r2, [r3, #4]
   13494:	ldr	r3, [fp, #-8]
   13498:	ldr	r2, [fp, #-16]
   1349c:	str	r2, [r3, #4]
   134a0:	ldr	r2, [fp, #-8]
   134a4:	ldr	r3, [fp, #-12]
   134a8:	add	r2, r2, r3
   134ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134b0:	str	r2, [r3, #16]
   134b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134b8:	ldr	r2, [r3, #16]
   134bc:	ldr	r3, [fp, #-8]
   134c0:	str	r2, [r3]
   134c4:	ldr	r3, [fp, #-8]
   134c8:	add	r3, r3, #8
   134cc:	mov	r2, r3
   134d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134d4:	ldr	r3, [r3, #24]
   134d8:	add	r2, r2, r3
   134dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134e0:	ldr	r3, [r3, #24]
   134e4:	mvn	r3, r3
   134e8:	and	r3, r3, r2
   134ec:	str	r3, [fp, #-32]	; 0xffffffe0
   134f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134f4:	ldr	r3, [r3, #8]
   134f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   134fc:	mov	r1, r3
   13500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13504:	bl	10e4c <memcpy@plt>
   13508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1350c:	ldrb	r3, [r3, #40]	; 0x28
   13510:	and	r3, r3, #2
   13514:	uxtb	r3, r3
   13518:	cmp	r3, #0
   1351c:	bne	13574 <_obstack_newchunk@@Base+0x1ec>
   13520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13524:	ldr	r3, [r3, #8]
   13528:	ldr	r2, [fp, #-16]
   1352c:	add	r2, r2, #8
   13530:	mov	r1, r2
   13534:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13538:	ldr	r2, [r2, #24]
   1353c:	add	r1, r1, r2
   13540:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13544:	ldr	r2, [r2, #24]
   13548:	mvn	r2, r2
   1354c:	and	r2, r2, r1
   13550:	cmp	r3, r2
   13554:	bne	13574 <_obstack_newchunk@@Base+0x1ec>
   13558:	ldr	r3, [fp, #-16]
   1355c:	ldr	r2, [r3, #4]
   13560:	ldr	r3, [fp, #-8]
   13564:	str	r2, [r3, #4]
   13568:	ldr	r1, [fp, #-16]
   1356c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13570:	bl	130f8 <close@plt+0x209c>
   13574:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13578:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1357c:	str	r2, [r3, #8]
   13580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13584:	ldr	r2, [r3, #8]
   13588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1358c:	add	r2, r2, r3
   13590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13594:	str	r2, [r3, #12]
   13598:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1359c:	ldrb	r3, [r2, #40]	; 0x28
   135a0:	bic	r3, r3, #2
   135a4:	strb	r3, [r2, #40]	; 0x28
   135a8:	nop			; (mov r0, r0)
   135ac:	sub	sp, fp, #4
   135b0:	pop	{fp, pc}
   135b4:	strdeq	fp, [r2], -r4

000135b8 <_obstack_allocated_p@@Base>:
   135b8:	push	{fp}		; (str fp, [sp, #-4]!)
   135bc:	add	fp, sp, #0
   135c0:	sub	sp, sp, #20
   135c4:	str	r0, [fp, #-16]
   135c8:	str	r1, [fp, #-20]	; 0xffffffec
   135cc:	ldr	r3, [fp, #-16]
   135d0:	ldr	r3, [r3, #4]
   135d4:	str	r3, [fp, #-8]
   135d8:	b	135f0 <_obstack_allocated_p@@Base+0x38>
   135dc:	ldr	r3, [fp, #-8]
   135e0:	ldr	r3, [r3, #4]
   135e4:	str	r3, [fp, #-12]
   135e8:	ldr	r3, [fp, #-12]
   135ec:	str	r3, [fp, #-8]
   135f0:	ldr	r3, [fp, #-8]
   135f4:	cmp	r3, #0
   135f8:	beq	13620 <_obstack_allocated_p@@Base+0x68>
   135fc:	ldr	r2, [fp, #-8]
   13600:	ldr	r3, [fp, #-20]	; 0xffffffec
   13604:	cmp	r2, r3
   13608:	bcs	135dc <_obstack_allocated_p@@Base+0x24>
   1360c:	ldr	r3, [fp, #-8]
   13610:	ldr	r2, [r3]
   13614:	ldr	r3, [fp, #-20]	; 0xffffffec
   13618:	cmp	r2, r3
   1361c:	bcc	135dc <_obstack_allocated_p@@Base+0x24>
   13620:	ldr	r3, [fp, #-8]
   13624:	cmp	r3, #0
   13628:	movne	r3, #1
   1362c:	moveq	r3, #0
   13630:	uxtb	r3, r3
   13634:	mov	r0, r3
   13638:	add	sp, fp, #0
   1363c:	pop	{fp}		; (ldr fp, [sp], #4)
   13640:	bx	lr

00013644 <_obstack_free@@Base>:
   13644:	push	{fp, lr}
   13648:	add	fp, sp, #4
   1364c:	sub	sp, sp, #16
   13650:	str	r0, [fp, #-16]
   13654:	str	r1, [fp, #-20]	; 0xffffffec
   13658:	ldr	r3, [fp, #-16]
   1365c:	ldr	r3, [r3, #4]
   13660:	str	r3, [fp, #-8]
   13664:	b	13698 <_obstack_free@@Base+0x54>
   13668:	ldr	r3, [fp, #-8]
   1366c:	ldr	r3, [r3, #4]
   13670:	str	r3, [fp, #-12]
   13674:	ldr	r1, [fp, #-8]
   13678:	ldr	r0, [fp, #-16]
   1367c:	bl	130f8 <close@plt+0x209c>
   13680:	ldr	r3, [fp, #-12]
   13684:	str	r3, [fp, #-8]
   13688:	ldr	r2, [fp, #-16]
   1368c:	ldrb	r3, [r2, #40]	; 0x28
   13690:	orr	r3, r3, #2
   13694:	strb	r3, [r2, #40]	; 0x28
   13698:	ldr	r3, [fp, #-8]
   1369c:	cmp	r3, #0
   136a0:	beq	136c8 <_obstack_free@@Base+0x84>
   136a4:	ldr	r2, [fp, #-8]
   136a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136ac:	cmp	r2, r3
   136b0:	bcs	13668 <_obstack_free@@Base+0x24>
   136b4:	ldr	r3, [fp, #-8]
   136b8:	ldr	r2, [r3]
   136bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   136c0:	cmp	r2, r3
   136c4:	bcc	13668 <_obstack_free@@Base+0x24>
   136c8:	ldr	r3, [fp, #-8]
   136cc:	cmp	r3, #0
   136d0:	beq	13710 <_obstack_free@@Base+0xcc>
   136d4:	ldr	r3, [fp, #-16]
   136d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   136dc:	str	r2, [r3, #12]
   136e0:	ldr	r3, [fp, #-16]
   136e4:	ldr	r2, [r3, #12]
   136e8:	ldr	r3, [fp, #-16]
   136ec:	str	r2, [r3, #8]
   136f0:	ldr	r3, [fp, #-8]
   136f4:	ldr	r2, [r3]
   136f8:	ldr	r3, [fp, #-16]
   136fc:	str	r2, [r3, #16]
   13700:	ldr	r3, [fp, #-16]
   13704:	ldr	r2, [fp, #-8]
   13708:	str	r2, [r3, #4]
   1370c:	b	13720 <_obstack_free@@Base+0xdc>
   13710:	ldr	r3, [fp, #-20]	; 0xffffffec
   13714:	cmp	r3, #0
   13718:	beq	13720 <_obstack_free@@Base+0xdc>
   1371c:	bl	11050 <abort@plt>
   13720:	nop			; (mov r0, r0)
   13724:	sub	sp, fp, #4
   13728:	pop	{fp, pc}

0001372c <_obstack_memory_used@@Base>:
   1372c:	push	{fp}		; (str fp, [sp, #-4]!)
   13730:	add	fp, sp, #0
   13734:	sub	sp, sp, #20
   13738:	str	r0, [fp, #-16]
   1373c:	mov	r3, #0
   13740:	str	r3, [fp, #-12]
   13744:	ldr	r3, [fp, #-16]
   13748:	ldr	r3, [r3, #4]
   1374c:	str	r3, [fp, #-8]
   13750:	b	13784 <_obstack_memory_used@@Base+0x58>
   13754:	ldr	r3, [fp, #-8]
   13758:	ldr	r3, [r3]
   1375c:	mov	r2, r3
   13760:	ldr	r3, [fp, #-8]
   13764:	sub	r3, r2, r3
   13768:	mov	r2, r3
   1376c:	ldr	r3, [fp, #-12]
   13770:	add	r3, r3, r2
   13774:	str	r3, [fp, #-12]
   13778:	ldr	r3, [fp, #-8]
   1377c:	ldr	r3, [r3, #4]
   13780:	str	r3, [fp, #-8]
   13784:	ldr	r3, [fp, #-8]
   13788:	cmp	r3, #0
   1378c:	bne	13754 <_obstack_memory_used@@Base+0x28>
   13790:	ldr	r3, [fp, #-12]
   13794:	mov	r0, r3
   13798:	add	sp, fp, #0
   1379c:	pop	{fp}		; (ldr fp, [sp], #4)
   137a0:	bx	lr
   137a4:	push	{r4, r5, fp, lr}
   137a8:	add	fp, sp, #12
   137ac:	ldr	r3, [pc, #44]	; 137e0 <_obstack_memory_used@@Base+0xb4>
   137b0:	ldr	r4, [r3]
   137b4:	ldr	r0, [pc, #40]	; 137e4 <_obstack_memory_used@@Base+0xb8>
   137b8:	bl	10f9c <gettext@plt>
   137bc:	mov	r3, r0
   137c0:	mov	r2, r3
   137c4:	ldr	r1, [pc, #28]	; 137e8 <_obstack_memory_used@@Base+0xbc>
   137c8:	mov	r0, r4
   137cc:	bl	10fb4 <fprintf@plt>
   137d0:	ldr	r3, [pc, #20]	; 137ec <_obstack_memory_used@@Base+0xc0>
   137d4:	ldr	r3, [r3]
   137d8:	mov	r0, r3
   137dc:	bl	10f90 <exit@plt>
   137e0:	andeq	fp, r2, r8, asr #2
   137e4:	andeq	r9, r1, ip, ror #30
   137e8:	andeq	r9, r1, r0, lsl #31
   137ec:	strdeq	fp, [r2], -r0
   137f0:	push	{fp, lr}
   137f4:	add	fp, sp, #4
   137f8:	sub	sp, sp, #16
   137fc:	str	r0, [fp, #-16]
   13800:	ldr	r3, [fp, #-16]
   13804:	cmp	r3, #0
   13808:	bne	13828 <_obstack_memory_used@@Base+0xfc>
   1380c:	ldr	r3, [pc, #220]	; 138f0 <_obstack_memory_used@@Base+0x1c4>
   13810:	ldr	r3, [r3]
   13814:	mov	r2, #55	; 0x37
   13818:	mov	r1, #1
   1381c:	ldr	r0, [pc, #208]	; 138f4 <_obstack_memory_used@@Base+0x1c8>
   13820:	bl	10eb8 <fwrite@plt>
   13824:	bl	11050 <abort@plt>
   13828:	mov	r1, #47	; 0x2f
   1382c:	ldr	r0, [fp, #-16]
   13830:	bl	11014 <strrchr@plt>
   13834:	str	r0, [fp, #-8]
   13838:	ldr	r3, [fp, #-8]
   1383c:	cmp	r3, #0
   13840:	beq	13850 <_obstack_memory_used@@Base+0x124>
   13844:	ldr	r3, [fp, #-8]
   13848:	add	r3, r3, #1
   1384c:	b	13854 <_obstack_memory_used@@Base+0x128>
   13850:	ldr	r3, [fp, #-16]
   13854:	str	r3, [fp, #-12]
   13858:	ldr	r2, [fp, #-12]
   1385c:	ldr	r3, [fp, #-16]
   13860:	sub	r3, r2, r3
   13864:	cmp	r3, #6
   13868:	ble	138cc <_obstack_memory_used@@Base+0x1a0>
   1386c:	ldr	r3, [fp, #-12]
   13870:	sub	r3, r3, #7
   13874:	mov	r2, #7
   13878:	ldr	r1, [pc, #120]	; 138f8 <_obstack_memory_used@@Base+0x1cc>
   1387c:	mov	r0, r3
   13880:	bl	11044 <strncmp@plt>
   13884:	mov	r3, r0
   13888:	cmp	r3, #0
   1388c:	bne	138cc <_obstack_memory_used@@Base+0x1a0>
   13890:	ldr	r3, [fp, #-12]
   13894:	str	r3, [fp, #-16]
   13898:	mov	r2, #3
   1389c:	ldr	r1, [pc, #88]	; 138fc <_obstack_memory_used@@Base+0x1d0>
   138a0:	ldr	r0, [fp, #-12]
   138a4:	bl	11044 <strncmp@plt>
   138a8:	mov	r3, r0
   138ac:	cmp	r3, #0
   138b0:	bne	138cc <_obstack_memory_used@@Base+0x1a0>
   138b4:	ldr	r3, [fp, #-12]
   138b8:	add	r3, r3, #3
   138bc:	str	r3, [fp, #-16]
   138c0:	ldr	r2, [pc, #56]	; 13900 <_obstack_memory_used@@Base+0x1d4>
   138c4:	ldr	r3, [fp, #-16]
   138c8:	str	r3, [r2]
   138cc:	ldr	r2, [pc, #48]	; 13904 <_obstack_memory_used@@Base+0x1d8>
   138d0:	ldr	r3, [fp, #-16]
   138d4:	str	r3, [r2]
   138d8:	ldr	r2, [pc, #40]	; 13908 <_obstack_memory_used@@Base+0x1dc>
   138dc:	ldr	r3, [fp, #-16]
   138e0:	str	r3, [r2]
   138e4:	nop			; (mov r0, r0)
   138e8:	sub	sp, fp, #4
   138ec:	pop	{fp, pc}
   138f0:	andeq	fp, r2, r8, asr #2
   138f4:	andeq	r9, r1, r4, lsl #31
   138f8:			; <UNDEFINED> instruction: 0x00019fbc
   138fc:	andeq	r9, r1, r4, asr #31
   13900:	andeq	fp, r2, r8, lsr r1
   13904:	muleq	r2, r0, r1
   13908:	andeq	fp, r2, ip, lsr r1
   1390c:	push	{fp, lr}
   13910:	add	fp, sp, #4
   13914:	sub	sp, sp, #16
   13918:	str	r0, [fp, #-16]
   1391c:	bl	10fc0 <__errno_location@plt>
   13920:	mov	r3, r0
   13924:	ldr	r3, [r3]
   13928:	str	r3, [fp, #-8]
   1392c:	ldr	r3, [fp, #-16]
   13930:	cmp	r3, #0
   13934:	beq	13940 <_obstack_memory_used@@Base+0x214>
   13938:	ldr	r3, [fp, #-16]
   1393c:	b	13944 <_obstack_memory_used@@Base+0x218>
   13940:	ldr	r3, [pc, #48]	; 13978 <_obstack_memory_used@@Base+0x24c>
   13944:	mov	r1, #48	; 0x30
   13948:	mov	r0, r3
   1394c:	bl	17130 <_obstack_memory_used@@Base+0x3a04>
   13950:	mov	r3, r0
   13954:	str	r3, [fp, #-12]
   13958:	bl	10fc0 <__errno_location@plt>
   1395c:	mov	r2, r0
   13960:	ldr	r3, [fp, #-8]
   13964:	str	r3, [r2]
   13968:	ldr	r3, [fp, #-12]
   1396c:	mov	r0, r3
   13970:	sub	sp, fp, #4
   13974:	pop	{fp, pc}
   13978:	muleq	r2, r4, r1
   1397c:	push	{fp}		; (str fp, [sp, #-4]!)
   13980:	add	fp, sp, #0
   13984:	sub	sp, sp, #12
   13988:	str	r0, [fp, #-8]
   1398c:	ldr	r3, [fp, #-8]
   13990:	cmp	r3, #0
   13994:	beq	139a0 <_obstack_memory_used@@Base+0x274>
   13998:	ldr	r3, [fp, #-8]
   1399c:	b	139a4 <_obstack_memory_used@@Base+0x278>
   139a0:	ldr	r3, [pc, #16]	; 139b8 <_obstack_memory_used@@Base+0x28c>
   139a4:	ldr	r3, [r3]
   139a8:	mov	r0, r3
   139ac:	add	sp, fp, #0
   139b0:	pop	{fp}		; (ldr fp, [sp], #4)
   139b4:	bx	lr
   139b8:	muleq	r2, r4, r1
   139bc:	push	{fp}		; (str fp, [sp, #-4]!)
   139c0:	add	fp, sp, #0
   139c4:	sub	sp, sp, #12
   139c8:	str	r0, [fp, #-8]
   139cc:	str	r1, [fp, #-12]
   139d0:	ldr	r3, [fp, #-8]
   139d4:	cmp	r3, #0
   139d8:	beq	139e4 <_obstack_memory_used@@Base+0x2b8>
   139dc:	ldr	r3, [fp, #-8]
   139e0:	b	139e8 <_obstack_memory_used@@Base+0x2bc>
   139e4:	ldr	r3, [pc, #20]	; 13a00 <_obstack_memory_used@@Base+0x2d4>
   139e8:	ldr	r2, [fp, #-12]
   139ec:	str	r2, [r3]
   139f0:	nop			; (mov r0, r0)
   139f4:	add	sp, fp, #0
   139f8:	pop	{fp}		; (ldr fp, [sp], #4)
   139fc:	bx	lr
   13a00:	muleq	r2, r4, r1
   13a04:	push	{fp}		; (str fp, [sp, #-4]!)
   13a08:	add	fp, sp, #0
   13a0c:	sub	sp, sp, #36	; 0x24
   13a10:	str	r0, [fp, #-24]	; 0xffffffe8
   13a14:	mov	r3, r1
   13a18:	str	r2, [fp, #-32]	; 0xffffffe0
   13a1c:	strb	r3, [fp, #-25]	; 0xffffffe7
   13a20:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13a24:	strb	r3, [fp, #-5]
   13a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a2c:	cmp	r3, #0
   13a30:	beq	13a3c <_obstack_memory_used@@Base+0x310>
   13a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a38:	b	13a40 <_obstack_memory_used@@Base+0x314>
   13a3c:	ldr	r3, [pc, #124]	; 13ac0 <_obstack_memory_used@@Base+0x394>
   13a40:	add	r2, r3, #8
   13a44:	ldrb	r3, [fp, #-5]
   13a48:	lsr	r3, r3, #5
   13a4c:	uxtb	r3, r3
   13a50:	lsl	r3, r3, #2
   13a54:	add	r3, r2, r3
   13a58:	str	r3, [fp, #-12]
   13a5c:	ldrb	r3, [fp, #-5]
   13a60:	and	r3, r3, #31
   13a64:	str	r3, [fp, #-16]
   13a68:	ldr	r3, [fp, #-12]
   13a6c:	ldr	r2, [r3]
   13a70:	ldr	r3, [fp, #-16]
   13a74:	lsr	r3, r2, r3
   13a78:	and	r3, r3, #1
   13a7c:	str	r3, [fp, #-20]	; 0xffffffec
   13a80:	ldr	r3, [fp, #-12]
   13a84:	ldr	r3, [r3]
   13a88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a8c:	and	r1, r2, #1
   13a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a94:	eor	r1, r1, r2
   13a98:	ldr	r2, [fp, #-16]
   13a9c:	lsl	r2, r1, r2
   13aa0:	eor	r2, r2, r3
   13aa4:	ldr	r3, [fp, #-12]
   13aa8:	str	r2, [r3]
   13aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ab0:	mov	r0, r3
   13ab4:	add	sp, fp, #0
   13ab8:	pop	{fp}		; (ldr fp, [sp], #4)
   13abc:	bx	lr
   13ac0:	muleq	r2, r4, r1
   13ac4:	push	{fp}		; (str fp, [sp, #-4]!)
   13ac8:	add	fp, sp, #0
   13acc:	sub	sp, sp, #20
   13ad0:	str	r0, [fp, #-16]
   13ad4:	str	r1, [fp, #-20]	; 0xffffffec
   13ad8:	ldr	r3, [fp, #-16]
   13adc:	cmp	r3, #0
   13ae0:	bne	13aec <_obstack_memory_used@@Base+0x3c0>
   13ae4:	ldr	r3, [pc, #44]	; 13b18 <_obstack_memory_used@@Base+0x3ec>
   13ae8:	str	r3, [fp, #-16]
   13aec:	ldr	r3, [fp, #-16]
   13af0:	ldr	r3, [r3, #4]
   13af4:	str	r3, [fp, #-8]
   13af8:	ldr	r3, [fp, #-16]
   13afc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b00:	str	r2, [r3, #4]
   13b04:	ldr	r3, [fp, #-8]
   13b08:	mov	r0, r3
   13b0c:	add	sp, fp, #0
   13b10:	pop	{fp}		; (ldr fp, [sp], #4)
   13b14:	bx	lr
   13b18:	muleq	r2, r4, r1
   13b1c:	push	{fp, lr}
   13b20:	add	fp, sp, #4
   13b24:	sub	sp, sp, #16
   13b28:	str	r0, [fp, #-8]
   13b2c:	str	r1, [fp, #-12]
   13b30:	str	r2, [fp, #-16]
   13b34:	ldr	r3, [fp, #-8]
   13b38:	cmp	r3, #0
   13b3c:	bne	13b48 <_obstack_memory_used@@Base+0x41c>
   13b40:	ldr	r3, [pc, #76]	; 13b94 <_obstack_memory_used@@Base+0x468>
   13b44:	str	r3, [fp, #-8]
   13b48:	ldr	r3, [fp, #-8]
   13b4c:	mov	r2, #10
   13b50:	str	r2, [r3]
   13b54:	ldr	r3, [fp, #-12]
   13b58:	cmp	r3, #0
   13b5c:	beq	13b6c <_obstack_memory_used@@Base+0x440>
   13b60:	ldr	r3, [fp, #-16]
   13b64:	cmp	r3, #0
   13b68:	bne	13b70 <_obstack_memory_used@@Base+0x444>
   13b6c:	bl	11050 <abort@plt>
   13b70:	ldr	r3, [fp, #-8]
   13b74:	ldr	r2, [fp, #-12]
   13b78:	str	r2, [r3, #40]	; 0x28
   13b7c:	ldr	r3, [fp, #-8]
   13b80:	ldr	r2, [fp, #-16]
   13b84:	str	r2, [r3, #44]	; 0x2c
   13b88:	nop			; (mov r0, r0)
   13b8c:	sub	sp, fp, #4
   13b90:	pop	{fp, pc}
   13b94:	muleq	r2, r4, r1
   13b98:	push	{fp, lr}
   13b9c:	add	fp, sp, #4
   13ba0:	sub	sp, sp, #56	; 0x38
   13ba4:	str	r0, [fp, #-56]	; 0xffffffc8
   13ba8:	str	r1, [fp, #-60]	; 0xffffffc4
   13bac:	sub	r3, fp, #52	; 0x34
   13bb0:	mov	r2, #48	; 0x30
   13bb4:	mov	r1, #0
   13bb8:	mov	r0, r3
   13bbc:	bl	10fd8 <memset@plt>
   13bc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bc4:	cmp	r3, #10
   13bc8:	bne	13bd0 <_obstack_memory_used@@Base+0x4a4>
   13bcc:	bl	11050 <abort@plt>
   13bd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bd4:	str	r3, [fp, #-52]	; 0xffffffcc
   13bd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13bdc:	mov	lr, r3
   13be0:	sub	ip, fp, #52	; 0x34
   13be4:	ldm	ip!, {r0, r1, r2, r3}
   13be8:	stmia	lr!, {r0, r1, r2, r3}
   13bec:	ldm	ip!, {r0, r1, r2, r3}
   13bf0:	stmia	lr!, {r0, r1, r2, r3}
   13bf4:	ldm	ip, {r0, r1, r2, r3}
   13bf8:	stm	lr, {r0, r1, r2, r3}
   13bfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c00:	sub	sp, fp, #4
   13c04:	pop	{fp, pc}
   13c08:	push	{fp, lr}
   13c0c:	add	fp, sp, #4
   13c10:	sub	sp, sp, #16
   13c14:	str	r0, [fp, #-16]
   13c18:	str	r1, [fp, #-20]	; 0xffffffec
   13c1c:	ldr	r0, [fp, #-16]
   13c20:	bl	10f9c <gettext@plt>
   13c24:	str	r0, [fp, #-8]
   13c28:	ldr	r2, [fp, #-8]
   13c2c:	ldr	r3, [fp, #-16]
   13c30:	cmp	r2, r3
   13c34:	beq	13c40 <_obstack_memory_used@@Base+0x514>
   13c38:	ldr	r3, [fp, #-8]
   13c3c:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13c40:	bl	17bd4 <_obstack_memory_used@@Base+0x44a8>
   13c44:	str	r0, [fp, #-12]
   13c48:	ldr	r1, [pc, #140]	; 13cdc <_obstack_memory_used@@Base+0x5b0>
   13c4c:	ldr	r0, [fp, #-12]
   13c50:	bl	128f8 <close@plt+0x189c>
   13c54:	mov	r3, r0
   13c58:	cmp	r3, #0
   13c5c:	bne	13c80 <_obstack_memory_used@@Base+0x554>
   13c60:	ldr	r3, [fp, #-16]
   13c64:	ldrb	r3, [r3]
   13c68:	cmp	r3, #96	; 0x60
   13c6c:	bne	13c78 <_obstack_memory_used@@Base+0x54c>
   13c70:	ldr	r3, [pc, #104]	; 13ce0 <_obstack_memory_used@@Base+0x5b4>
   13c74:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13c78:	ldr	r3, [pc, #100]	; 13ce4 <_obstack_memory_used@@Base+0x5b8>
   13c7c:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13c80:	ldr	r1, [pc, #96]	; 13ce8 <_obstack_memory_used@@Base+0x5bc>
   13c84:	ldr	r0, [fp, #-12]
   13c88:	bl	128f8 <close@plt+0x189c>
   13c8c:	mov	r3, r0
   13c90:	cmp	r3, #0
   13c94:	bne	13cb8 <_obstack_memory_used@@Base+0x58c>
   13c98:	ldr	r3, [fp, #-16]
   13c9c:	ldrb	r3, [r3]
   13ca0:	cmp	r3, #96	; 0x60
   13ca4:	bne	13cb0 <_obstack_memory_used@@Base+0x584>
   13ca8:	ldr	r3, [pc, #60]	; 13cec <_obstack_memory_used@@Base+0x5c0>
   13cac:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13cb0:	ldr	r3, [pc, #56]	; 13cf0 <_obstack_memory_used@@Base+0x5c4>
   13cb4:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cbc:	cmp	r3, #9
   13cc0:	bne	13ccc <_obstack_memory_used@@Base+0x5a0>
   13cc4:	ldr	r3, [pc, #40]	; 13cf4 <_obstack_memory_used@@Base+0x5c8>
   13cc8:	b	13cd0 <_obstack_memory_used@@Base+0x5a4>
   13ccc:	ldr	r3, [pc, #36]	; 13cf8 <_obstack_memory_used@@Base+0x5cc>
   13cd0:	mov	r0, r3
   13cd4:	sub	sp, fp, #4
   13cd8:	pop	{fp, pc}
   13cdc:	andeq	sl, r1, r4, lsl #1
   13ce0:	andeq	sl, r1, ip, lsl #1
   13ce4:	muleq	r1, r0, r0
   13ce8:	muleq	r1, r4, r0
   13cec:	muleq	r1, ip, r0
   13cf0:	andeq	sl, r1, r0, lsr #1
   13cf4:	andeq	sl, r1, r4, lsr #1
   13cf8:	andeq	sl, r1, r8, lsr #1
   13cfc:	push	{r4, fp, lr}
   13d00:	add	fp, sp, #8
   13d04:	sub	sp, sp, #116	; 0x74
   13d08:	str	r0, [fp, #-88]	; 0xffffffa8
   13d0c:	str	r1, [fp, #-92]	; 0xffffffa4
   13d10:	str	r2, [fp, #-96]	; 0xffffffa0
   13d14:	str	r3, [fp, #-100]	; 0xffffff9c
   13d18:	mov	r3, #0
   13d1c:	str	r3, [fp, #-20]	; 0xffffffec
   13d20:	mov	r3, #0
   13d24:	str	r3, [fp, #-24]	; 0xffffffe8
   13d28:	mov	r3, #0
   13d2c:	str	r3, [fp, #-28]	; 0xffffffe4
   13d30:	mov	r3, #0
   13d34:	str	r3, [fp, #-32]	; 0xffffffe0
   13d38:	mov	r3, #0
   13d3c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13d40:	bl	10ed0 <__ctype_get_mb_cur_max@plt>
   13d44:	mov	r3, r0
   13d48:	cmp	r3, #1
   13d4c:	moveq	r3, #1
   13d50:	movne	r3, #0
   13d54:	strb	r3, [fp, #-57]	; 0xffffffc7
   13d58:	ldr	r3, [fp, #8]
   13d5c:	and	r3, r3, #2
   13d60:	cmp	r3, #0
   13d64:	movne	r3, #1
   13d68:	moveq	r3, #0
   13d6c:	strb	r3, [fp, #-34]	; 0xffffffde
   13d70:	mov	r3, #0
   13d74:	strb	r3, [fp, #-35]	; 0xffffffdd
   13d78:	mov	r3, #0
   13d7c:	strb	r3, [fp, #-36]	; 0xffffffdc
   13d80:	mov	r3, #1
   13d84:	strb	r3, [fp, #-37]	; 0xffffffdb
   13d88:	ldr	r3, [fp, #4]
   13d8c:	cmp	r3, #10
   13d90:	ldrls	pc, [pc, r3, lsl #2]
   13d94:	b	13f9c <_obstack_memory_used@@Base+0x870>
   13d98:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13d9c:	andeq	r3, r1, ip, lsl #30
   13da0:	andeq	r3, r1, r0, lsr pc
   13da4:	andeq	r3, r1, r4, lsl #30
   13da8:	andeq	r3, r1, r4, lsl pc
   13dac:	ldrdeq	r3, [r1], -r4
   13db0:	andeq	r3, r1, r4, asr #27
   13db4:	andeq	r3, r1, r4, lsr lr
   13db8:	andeq	r3, r1, r8, asr #28
   13dbc:	andeq	r3, r1, r8, asr #28
   13dc0:	andeq	r3, r1, r8, asr #28
   13dc4:	mov	r3, #5
   13dc8:	str	r3, [fp, #4]
   13dcc:	mov	r3, #1
   13dd0:	strb	r3, [fp, #-34]	; 0xffffffde
   13dd4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13dd8:	eor	r3, r3, #1
   13ddc:	uxtb	r3, r3
   13de0:	cmp	r3, #0
   13de4:	beq	13e18 <_obstack_memory_used@@Base+0x6ec>
   13de8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13dec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13df0:	cmp	r2, r3
   13df4:	bcs	13e0c <_obstack_memory_used@@Base+0x6e0>
   13df8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e00:	add	r3, r2, r3
   13e04:	mov	r2, #34	; 0x22
   13e08:	strb	r2, [r3]
   13e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e10:	add	r3, r3, #1
   13e14:	str	r3, [fp, #-20]	; 0xffffffec
   13e18:	mov	r3, #1
   13e1c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13e20:	ldr	r3, [pc, #3872]	; 14d48 <_obstack_memory_used@@Base+0x161c>
   13e24:	str	r3, [fp, #-28]	; 0xffffffe4
   13e28:	mov	r3, #1
   13e2c:	str	r3, [fp, #-32]	; 0xffffffe0
   13e30:	b	13fa0 <_obstack_memory_used@@Base+0x874>
   13e34:	mov	r3, #1
   13e38:	strb	r3, [fp, #-33]	; 0xffffffdf
   13e3c:	mov	r3, #0
   13e40:	strb	r3, [fp, #-34]	; 0xffffffde
   13e44:	b	13fa0 <_obstack_memory_used@@Base+0x874>
   13e48:	ldr	r3, [fp, #4]
   13e4c:	cmp	r3, #10
   13e50:	beq	13e74 <_obstack_memory_used@@Base+0x748>
   13e54:	ldr	r1, [fp, #4]
   13e58:	ldr	r0, [pc, #3820]	; 14d4c <_obstack_memory_used@@Base+0x1620>
   13e5c:	bl	13c08 <_obstack_memory_used@@Base+0x4dc>
   13e60:	str	r0, [fp, #16]
   13e64:	ldr	r1, [fp, #4]
   13e68:	ldr	r0, [pc, #3808]	; 14d50 <_obstack_memory_used@@Base+0x1624>
   13e6c:	bl	13c08 <_obstack_memory_used@@Base+0x4dc>
   13e70:	str	r0, [fp, #20]
   13e74:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13e78:	eor	r3, r3, #1
   13e7c:	uxtb	r3, r3
   13e80:	cmp	r3, #0
   13e84:	beq	13ee4 <_obstack_memory_used@@Base+0x7b8>
   13e88:	ldr	r3, [fp, #16]
   13e8c:	str	r3, [fp, #-28]	; 0xffffffe4
   13e90:	b	13ed4 <_obstack_memory_used@@Base+0x7a8>
   13e94:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13e9c:	cmp	r2, r3
   13ea0:	bcs	13ebc <_obstack_memory_used@@Base+0x790>
   13ea4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13eac:	add	r3, r2, r3
   13eb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13eb4:	ldrb	r2, [r2]
   13eb8:	strb	r2, [r3]
   13ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ec0:	add	r3, r3, #1
   13ec4:	str	r3, [fp, #-20]	; 0xffffffec
   13ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ecc:	add	r3, r3, #1
   13ed0:	str	r3, [fp, #-28]	; 0xffffffe4
   13ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ed8:	ldrb	r3, [r3]
   13edc:	cmp	r3, #0
   13ee0:	bne	13e94 <_obstack_memory_used@@Base+0x768>
   13ee4:	mov	r3, #1
   13ee8:	strb	r3, [fp, #-33]	; 0xffffffdf
   13eec:	ldr	r3, [fp, #20]
   13ef0:	str	r3, [fp, #-28]	; 0xffffffe4
   13ef4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ef8:	bl	10fa8 <strlen@plt>
   13efc:	str	r0, [fp, #-32]	; 0xffffffe0
   13f00:	b	13fa0 <_obstack_memory_used@@Base+0x874>
   13f04:	mov	r3, #1
   13f08:	strb	r3, [fp, #-33]	; 0xffffffdf
   13f0c:	mov	r3, #1
   13f10:	strb	r3, [fp, #-34]	; 0xffffffde
   13f14:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13f18:	eor	r3, r3, #1
   13f1c:	uxtb	r3, r3
   13f20:	cmp	r3, #0
   13f24:	beq	13f30 <_obstack_memory_used@@Base+0x804>
   13f28:	mov	r3, #1
   13f2c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13f30:	mov	r3, #2
   13f34:	str	r3, [fp, #4]
   13f38:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13f3c:	eor	r3, r3, #1
   13f40:	uxtb	r3, r3
   13f44:	cmp	r3, #0
   13f48:	beq	13f7c <_obstack_memory_used@@Base+0x850>
   13f4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f54:	cmp	r2, r3
   13f58:	bcs	13f70 <_obstack_memory_used@@Base+0x844>
   13f5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f64:	add	r3, r2, r3
   13f68:	mov	r2, #39	; 0x27
   13f6c:	strb	r2, [r3]
   13f70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f74:	add	r3, r3, #1
   13f78:	str	r3, [fp, #-20]	; 0xffffffec
   13f7c:	ldr	r3, [pc, #3532]	; 14d50 <_obstack_memory_used@@Base+0x1624>
   13f80:	str	r3, [fp, #-28]	; 0xffffffe4
   13f84:	mov	r3, #1
   13f88:	str	r3, [fp, #-32]	; 0xffffffe0
   13f8c:	b	13fa0 <_obstack_memory_used@@Base+0x874>
   13f90:	mov	r3, #0
   13f94:	strb	r3, [fp, #-34]	; 0xffffffde
   13f98:	b	13fa0 <_obstack_memory_used@@Base+0x874>
   13f9c:	bl	11050 <abort@plt>
   13fa0:	mov	r3, #0
   13fa4:	str	r3, [fp, #-16]
   13fa8:	b	15138 <_obstack_memory_used@@Base+0x1a0c>
   13fac:	mov	r3, #0
   13fb0:	strb	r3, [fp, #-40]	; 0xffffffd8
   13fb4:	mov	r3, #0
   13fb8:	strb	r3, [fp, #-41]	; 0xffffffd7
   13fbc:	mov	r3, #0
   13fc0:	strb	r3, [fp, #-42]	; 0xffffffd6
   13fc4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13fc8:	cmp	r3, #0
   13fcc:	beq	14068 <_obstack_memory_used@@Base+0x93c>
   13fd0:	ldr	r3, [fp, #4]
   13fd4:	cmp	r3, #2
   13fd8:	beq	14068 <_obstack_memory_used@@Base+0x93c>
   13fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13fe0:	cmp	r3, #0
   13fe4:	beq	14068 <_obstack_memory_used@@Base+0x93c>
   13fe8:	ldr	r2, [fp, #-16]
   13fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ff0:	add	r4, r2, r3
   13ff4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13ff8:	cmn	r3, #1
   13ffc:	bne	14020 <_obstack_memory_used@@Base+0x8f4>
   14000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14004:	cmp	r3, #1
   14008:	bls	14020 <_obstack_memory_used@@Base+0x8f4>
   1400c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14010:	bl	10fa8 <strlen@plt>
   14014:	str	r0, [fp, #-100]	; 0xffffff9c
   14018:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1401c:	b	14024 <_obstack_memory_used@@Base+0x8f8>
   14020:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14024:	cmp	r4, r3
   14028:	bhi	14068 <_obstack_memory_used@@Base+0x93c>
   1402c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14030:	ldr	r3, [fp, #-16]
   14034:	add	r3, r2, r3
   14038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1403c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14040:	mov	r0, r3
   14044:	bl	10e70 <memcmp@plt>
   14048:	mov	r3, r0
   1404c:	cmp	r3, #0
   14050:	bne	14068 <_obstack_memory_used@@Base+0x93c>
   14054:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14058:	cmp	r3, #0
   1405c:	bne	152f4 <_obstack_memory_used@@Base+0x1bc8>
   14060:	mov	r3, #1
   14064:	strb	r3, [fp, #-40]	; 0xffffffd8
   14068:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1406c:	ldr	r3, [fp, #-16]
   14070:	add	r3, r2, r3
   14074:	ldrb	r3, [r3]
   14078:	strb	r3, [fp, #-38]	; 0xffffffda
   1407c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14080:	cmp	r3, #126	; 0x7e
   14084:	ldrls	pc, [pc, r3, lsl #2]
   14088:	b	148b4 <_obstack_memory_used@@Base+0x1188>
   1408c:	andeq	r4, r1, r8, lsl #5
   14090:			; <UNDEFINED> instruction: 0x000148b4
   14094:			; <UNDEFINED> instruction: 0x000148b4
   14098:			; <UNDEFINED> instruction: 0x000148b4
   1409c:			; <UNDEFINED> instruction: 0x000148b4
   140a0:			; <UNDEFINED> instruction: 0x000148b4
   140a4:			; <UNDEFINED> instruction: 0x000148b4
   140a8:	andeq	r4, r1, r8, ror r6
   140ac:	andeq	r4, r1, r4, lsl #13
   140b0:			; <UNDEFINED> instruction: 0x000146b4
   140b4:	muleq	r1, ip, r6
   140b8:	andeq	r4, r1, r0, asr #13
   140bc:	muleq	r1, r0, r6
   140c0:	andeq	r4, r1, r8, lsr #13
   140c4:			; <UNDEFINED> instruction: 0x000148b4
   140c8:			; <UNDEFINED> instruction: 0x000148b4
   140cc:			; <UNDEFINED> instruction: 0x000148b4
   140d0:			; <UNDEFINED> instruction: 0x000148b4
   140d4:			; <UNDEFINED> instruction: 0x000148b4
   140d8:			; <UNDEFINED> instruction: 0x000148b4
   140dc:			; <UNDEFINED> instruction: 0x000148b4
   140e0:			; <UNDEFINED> instruction: 0x000148b4
   140e4:			; <UNDEFINED> instruction: 0x000148b4
   140e8:			; <UNDEFINED> instruction: 0x000148b4
   140ec:			; <UNDEFINED> instruction: 0x000148b4
   140f0:			; <UNDEFINED> instruction: 0x000148b4
   140f4:			; <UNDEFINED> instruction: 0x000148b4
   140f8:			; <UNDEFINED> instruction: 0x000148b4
   140fc:			; <UNDEFINED> instruction: 0x000148b4
   14100:			; <UNDEFINED> instruction: 0x000148b4
   14104:			; <UNDEFINED> instruction: 0x000148b4
   14108:			; <UNDEFINED> instruction: 0x000148b4
   1410c:	muleq	r1, r8, r7
   14110:	andeq	r4, r1, r0, lsr #15
   14114:	andeq	r4, r1, r0, lsr #15
   14118:	andeq	r4, r1, ip, lsl #15
   1411c:	andeq	r4, r1, r0, lsr #15
   14120:	andeq	r4, r1, r8, lsr #17
   14124:	andeq	r4, r1, r0, lsr #15
   14128:			; <UNDEFINED> instruction: 0x000147bc
   1412c:	andeq	r4, r1, r0, lsr #15
   14130:	andeq	r4, r1, r0, lsr #15
   14134:	andeq	r4, r1, r0, lsr #15
   14138:	andeq	r4, r1, r8, lsr #17
   1413c:	andeq	r4, r1, r8, lsr #17
   14140:	andeq	r4, r1, r8, lsr #17
   14144:	andeq	r4, r1, r8, lsr #17
   14148:	andeq	r4, r1, r8, lsr #17
   1414c:	andeq	r4, r1, r8, lsr #17
   14150:	andeq	r4, r1, r8, lsr #17
   14154:	andeq	r4, r1, r8, lsr #17
   14158:	andeq	r4, r1, r8, lsr #17
   1415c:	andeq	r4, r1, r8, lsr #17
   14160:	andeq	r4, r1, r8, lsr #17
   14164:	andeq	r4, r1, r8, lsr #17
   14168:	andeq	r4, r1, r8, lsr #17
   1416c:	andeq	r4, r1, r8, lsr #17
   14170:	andeq	r4, r1, r8, lsr #17
   14174:	andeq	r4, r1, r8, lsr #17
   14178:	andeq	r4, r1, r0, lsr #15
   1417c:	andeq	r4, r1, r0, lsr #15
   14180:	andeq	r4, r1, r0, lsr #15
   14184:	andeq	r4, r1, r0, lsr #15
   14188:	andeq	r4, r1, r8, ror #8
   1418c:			; <UNDEFINED> instruction: 0x000148b4
   14190:	andeq	r4, r1, r8, lsr #17
   14194:	andeq	r4, r1, r8, lsr #17
   14198:	andeq	r4, r1, r8, lsr #17
   1419c:	andeq	r4, r1, r8, lsr #17
   141a0:	andeq	r4, r1, r8, lsr #17
   141a4:	andeq	r4, r1, r8, lsr #17
   141a8:	andeq	r4, r1, r8, lsr #17
   141ac:	andeq	r4, r1, r8, lsr #17
   141b0:	andeq	r4, r1, r8, lsr #17
   141b4:	andeq	r4, r1, r8, lsr #17
   141b8:	andeq	r4, r1, r8, lsr #17
   141bc:	andeq	r4, r1, r8, lsr #17
   141c0:	andeq	r4, r1, r8, lsr #17
   141c4:	andeq	r4, r1, r8, lsr #17
   141c8:	andeq	r4, r1, r8, lsr #17
   141cc:	andeq	r4, r1, r8, lsr #17
   141d0:	andeq	r4, r1, r8, lsr #17
   141d4:	andeq	r4, r1, r8, lsr #17
   141d8:	andeq	r4, r1, r8, lsr #17
   141dc:	andeq	r4, r1, r8, lsr #17
   141e0:	andeq	r4, r1, r8, lsr #17
   141e4:	andeq	r4, r1, r8, lsr #17
   141e8:	andeq	r4, r1, r8, lsr #17
   141ec:	andeq	r4, r1, r8, lsr #17
   141f0:	andeq	r4, r1, r8, lsr #17
   141f4:	andeq	r4, r1, r8, lsr #17
   141f8:	andeq	r4, r1, r0, lsr #15
   141fc:	andeq	r4, r1, ip, asr #13
   14200:	andeq	r4, r1, r8, lsr #17
   14204:	andeq	r4, r1, r0, lsr #15
   14208:	andeq	r4, r1, r8, lsr #17
   1420c:	andeq	r4, r1, r0, lsr #15
   14210:	andeq	r4, r1, r8, lsr #17
   14214:	andeq	r4, r1, r8, lsr #17
   14218:	andeq	r4, r1, r8, lsr #17
   1421c:	andeq	r4, r1, r8, lsr #17
   14220:	andeq	r4, r1, r8, lsr #17
   14224:	andeq	r4, r1, r8, lsr #17
   14228:	andeq	r4, r1, r8, lsr #17
   1422c:	andeq	r4, r1, r8, lsr #17
   14230:	andeq	r4, r1, r8, lsr #17
   14234:	andeq	r4, r1, r8, lsr #17
   14238:	andeq	r4, r1, r8, lsr #17
   1423c:	andeq	r4, r1, r8, lsr #17
   14240:	andeq	r4, r1, r8, lsr #17
   14244:	andeq	r4, r1, r8, lsr #17
   14248:	andeq	r4, r1, r8, lsr #17
   1424c:	andeq	r4, r1, r8, lsr #17
   14250:	andeq	r4, r1, r8, lsr #17
   14254:	andeq	r4, r1, r8, lsr #17
   14258:	andeq	r4, r1, r8, lsr #17
   1425c:	andeq	r4, r1, r8, lsr #17
   14260:	andeq	r4, r1, r8, lsr #17
   14264:	andeq	r4, r1, r8, lsr #17
   14268:	andeq	r4, r1, r8, lsr #17
   1426c:	andeq	r4, r1, r8, lsr #17
   14270:	andeq	r4, r1, r8, lsr #17
   14274:	andeq	r4, r1, r8, lsr #17
   14278:	andeq	r4, r1, r4, asr #14
   1427c:	andeq	r4, r1, r0, lsr #15
   14280:	andeq	r4, r1, r4, asr #14
   14284:	andeq	r4, r1, ip, lsl #15
   14288:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1428c:	cmp	r3, #0
   14290:	beq	14454 <_obstack_memory_used@@Base+0xd28>
   14294:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14298:	cmp	r3, #0
   1429c:	bne	152fc <_obstack_memory_used@@Base+0x1bd0>
   142a0:	mov	r3, #1
   142a4:	strb	r3, [fp, #-41]	; 0xffffffd7
   142a8:	ldr	r3, [fp, #4]
   142ac:	cmp	r3, #2
   142b0:	bne	14360 <_obstack_memory_used@@Base+0xc34>
   142b4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   142b8:	eor	r3, r3, #1
   142bc:	uxtb	r3, r3
   142c0:	cmp	r3, #0
   142c4:	beq	14360 <_obstack_memory_used@@Base+0xc34>
   142c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   142cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   142d0:	cmp	r2, r3
   142d4:	bcs	142ec <_obstack_memory_used@@Base+0xbc0>
   142d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   142dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   142e0:	add	r3, r2, r3
   142e4:	mov	r2, #39	; 0x27
   142e8:	strb	r2, [r3]
   142ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   142f0:	add	r3, r3, #1
   142f4:	str	r3, [fp, #-20]	; 0xffffffec
   142f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   142fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14300:	cmp	r2, r3
   14304:	bcs	1431c <_obstack_memory_used@@Base+0xbf0>
   14308:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1430c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14310:	add	r3, r2, r3
   14314:	mov	r2, #36	; 0x24
   14318:	strb	r2, [r3]
   1431c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14320:	add	r3, r3, #1
   14324:	str	r3, [fp, #-20]	; 0xffffffec
   14328:	ldr	r2, [fp, #-20]	; 0xffffffec
   1432c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14330:	cmp	r2, r3
   14334:	bcs	1434c <_obstack_memory_used@@Base+0xc20>
   14338:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1433c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14340:	add	r3, r2, r3
   14344:	mov	r2, #39	; 0x27
   14348:	strb	r2, [r3]
   1434c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14350:	add	r3, r3, #1
   14354:	str	r3, [fp, #-20]	; 0xffffffec
   14358:	mov	r3, #1
   1435c:	strb	r3, [fp, #-35]	; 0xffffffdd
   14360:	ldr	r2, [fp, #-20]	; 0xffffffec
   14364:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14368:	cmp	r2, r3
   1436c:	bcs	14384 <_obstack_memory_used@@Base+0xc58>
   14370:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14374:	ldr	r3, [fp, #-20]	; 0xffffffec
   14378:	add	r3, r2, r3
   1437c:	mov	r2, #92	; 0x5c
   14380:	strb	r2, [r3]
   14384:	ldr	r3, [fp, #-20]	; 0xffffffec
   14388:	add	r3, r3, #1
   1438c:	str	r3, [fp, #-20]	; 0xffffffec
   14390:	ldr	r3, [fp, #4]
   14394:	cmp	r3, #2
   14398:	beq	14448 <_obstack_memory_used@@Base+0xd1c>
   1439c:	ldr	r3, [fp, #-16]
   143a0:	add	r2, r3, #1
   143a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   143a8:	cmp	r2, r3
   143ac:	bcs	14448 <_obstack_memory_used@@Base+0xd1c>
   143b0:	ldr	r3, [fp, #-16]
   143b4:	add	r3, r3, #1
   143b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   143bc:	add	r3, r2, r3
   143c0:	ldrb	r3, [r3]
   143c4:	cmp	r3, #47	; 0x2f
   143c8:	bls	14448 <_obstack_memory_used@@Base+0xd1c>
   143cc:	ldr	r3, [fp, #-16]
   143d0:	add	r3, r3, #1
   143d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   143d8:	add	r3, r2, r3
   143dc:	ldrb	r3, [r3]
   143e0:	cmp	r3, #57	; 0x39
   143e4:	bhi	14448 <_obstack_memory_used@@Base+0xd1c>
   143e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   143ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   143f0:	cmp	r2, r3
   143f4:	bcs	1440c <_obstack_memory_used@@Base+0xce0>
   143f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   143fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14400:	add	r3, r2, r3
   14404:	mov	r2, #48	; 0x30
   14408:	strb	r2, [r3]
   1440c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14410:	add	r3, r3, #1
   14414:	str	r3, [fp, #-20]	; 0xffffffec
   14418:	ldr	r2, [fp, #-20]	; 0xffffffec
   1441c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14420:	cmp	r2, r3
   14424:	bcs	1443c <_obstack_memory_used@@Base+0xd10>
   14428:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1442c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14430:	add	r3, r2, r3
   14434:	mov	r2, #48	; 0x30
   14438:	strb	r2, [r3]
   1443c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14440:	add	r3, r3, #1
   14444:	str	r3, [fp, #-20]	; 0xffffffec
   14448:	mov	r3, #48	; 0x30
   1444c:	strb	r3, [fp, #-38]	; 0xffffffda
   14450:	b	14e90 <_obstack_memory_used@@Base+0x1764>
   14454:	ldr	r3, [fp, #8]
   14458:	and	r3, r3, #1
   1445c:	cmp	r3, #0
   14460:	beq	14e90 <_obstack_memory_used@@Base+0x1764>
   14464:	b	1512c <_obstack_memory_used@@Base+0x1a00>
   14468:	ldr	r3, [fp, #4]
   1446c:	cmp	r3, #2
   14470:	beq	14480 <_obstack_memory_used@@Base+0xd54>
   14474:	cmp	r3, #5
   14478:	beq	14490 <_obstack_memory_used@@Base+0xd64>
   1447c:	b	14674 <_obstack_memory_used@@Base+0xf48>
   14480:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14484:	cmp	r3, #0
   14488:	beq	14668 <_obstack_memory_used@@Base+0xf3c>
   1448c:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   14490:	ldr	r3, [fp, #8]
   14494:	and	r3, r3, #4
   14498:	cmp	r3, #0
   1449c:	beq	14670 <_obstack_memory_used@@Base+0xf44>
   144a0:	ldr	r3, [fp, #-16]
   144a4:	add	r2, r3, #2
   144a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   144ac:	cmp	r2, r3
   144b0:	bcs	14670 <_obstack_memory_used@@Base+0xf44>
   144b4:	ldr	r3, [fp, #-16]
   144b8:	add	r3, r3, #1
   144bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   144c0:	add	r3, r2, r3
   144c4:	ldrb	r3, [r3]
   144c8:	cmp	r3, #63	; 0x3f
   144cc:	bne	14670 <_obstack_memory_used@@Base+0xf44>
   144d0:	ldr	r3, [fp, #-16]
   144d4:	add	r3, r3, #2
   144d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   144dc:	add	r3, r2, r3
   144e0:	ldrb	r3, [r3]
   144e4:	sub	r3, r3, #33	; 0x21
   144e8:	cmp	r3, #29
   144ec:	ldrls	pc, [pc, r3, lsl #2]
   144f0:	b	14660 <_obstack_memory_used@@Base+0xf34>
   144f4:	andeq	r4, r1, ip, ror #10
   144f8:	andeq	r4, r1, r0, ror #12
   144fc:	andeq	r4, r1, r0, ror #12
   14500:	andeq	r4, r1, r0, ror #12
   14504:	andeq	r4, r1, r0, ror #12
   14508:	andeq	r4, r1, r0, ror #12
   1450c:	andeq	r4, r1, ip, ror #10
   14510:	andeq	r4, r1, ip, ror #10
   14514:	andeq	r4, r1, ip, ror #10
   14518:	andeq	r4, r1, r0, ror #12
   1451c:	andeq	r4, r1, r0, ror #12
   14520:	andeq	r4, r1, r0, ror #12
   14524:	andeq	r4, r1, ip, ror #10
   14528:	andeq	r4, r1, r0, ror #12
   1452c:	andeq	r4, r1, ip, ror #10
   14530:	andeq	r4, r1, r0, ror #12
   14534:	andeq	r4, r1, r0, ror #12
   14538:	andeq	r4, r1, r0, ror #12
   1453c:	andeq	r4, r1, r0, ror #12
   14540:	andeq	r4, r1, r0, ror #12
   14544:	andeq	r4, r1, r0, ror #12
   14548:	andeq	r4, r1, r0, ror #12
   1454c:	andeq	r4, r1, r0, ror #12
   14550:	andeq	r4, r1, r0, ror #12
   14554:	andeq	r4, r1, r0, ror #12
   14558:	andeq	r4, r1, r0, ror #12
   1455c:	andeq	r4, r1, r0, ror #12
   14560:	andeq	r4, r1, ip, ror #10
   14564:	andeq	r4, r1, ip, ror #10
   14568:	andeq	r4, r1, ip, ror #10
   1456c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14570:	cmp	r3, #0
   14574:	bne	15304 <_obstack_memory_used@@Base+0x1bd8>
   14578:	ldr	r3, [fp, #-16]
   1457c:	add	r3, r3, #2
   14580:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14584:	add	r3, r2, r3
   14588:	ldrb	r3, [r3]
   1458c:	strb	r3, [fp, #-38]	; 0xffffffda
   14590:	ldr	r3, [fp, #-16]
   14594:	add	r3, r3, #2
   14598:	str	r3, [fp, #-16]
   1459c:	ldr	r2, [fp, #-20]	; 0xffffffec
   145a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   145a4:	cmp	r2, r3
   145a8:	bcs	145c0 <_obstack_memory_used@@Base+0xe94>
   145ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   145b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145b4:	add	r3, r2, r3
   145b8:	mov	r2, #63	; 0x3f
   145bc:	strb	r2, [r3]
   145c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145c4:	add	r3, r3, #1
   145c8:	str	r3, [fp, #-20]	; 0xffffffec
   145cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   145d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   145d4:	cmp	r2, r3
   145d8:	bcs	145f0 <_obstack_memory_used@@Base+0xec4>
   145dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   145e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145e4:	add	r3, r2, r3
   145e8:	mov	r2, #34	; 0x22
   145ec:	strb	r2, [r3]
   145f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145f4:	add	r3, r3, #1
   145f8:	str	r3, [fp, #-20]	; 0xffffffec
   145fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14600:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14604:	cmp	r2, r3
   14608:	bcs	14620 <_obstack_memory_used@@Base+0xef4>
   1460c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14610:	ldr	r3, [fp, #-20]	; 0xffffffec
   14614:	add	r3, r2, r3
   14618:	mov	r2, #34	; 0x22
   1461c:	strb	r2, [r3]
   14620:	ldr	r3, [fp, #-20]	; 0xffffffec
   14624:	add	r3, r3, #1
   14628:	str	r3, [fp, #-20]	; 0xffffffec
   1462c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14630:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14634:	cmp	r2, r3
   14638:	bcs	14650 <_obstack_memory_used@@Base+0xf24>
   1463c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14640:	ldr	r3, [fp, #-20]	; 0xffffffec
   14644:	add	r3, r2, r3
   14648:	mov	r2, #63	; 0x3f
   1464c:	strb	r2, [r3]
   14650:	ldr	r3, [fp, #-20]	; 0xffffffec
   14654:	add	r3, r3, #1
   14658:	str	r3, [fp, #-20]	; 0xffffffec
   1465c:	b	14664 <_obstack_memory_used@@Base+0xf38>
   14660:	nop			; (mov r0, r0)
   14664:	b	14670 <_obstack_memory_used@@Base+0xf44>
   14668:	nop			; (mov r0, r0)
   1466c:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14670:	nop			; (mov r0, r0)
   14674:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14678:	mov	r3, #97	; 0x61
   1467c:	strb	r3, [fp, #-39]	; 0xffffffd9
   14680:	b	1472c <_obstack_memory_used@@Base+0x1000>
   14684:	mov	r3, #98	; 0x62
   14688:	strb	r3, [fp, #-39]	; 0xffffffd9
   1468c:	b	1472c <_obstack_memory_used@@Base+0x1000>
   14690:	mov	r3, #102	; 0x66
   14694:	strb	r3, [fp, #-39]	; 0xffffffd9
   14698:	b	1472c <_obstack_memory_used@@Base+0x1000>
   1469c:	mov	r3, #110	; 0x6e
   146a0:	strb	r3, [fp, #-39]	; 0xffffffd9
   146a4:	b	14714 <_obstack_memory_used@@Base+0xfe8>
   146a8:	mov	r3, #114	; 0x72
   146ac:	strb	r3, [fp, #-39]	; 0xffffffd9
   146b0:	b	14714 <_obstack_memory_used@@Base+0xfe8>
   146b4:	mov	r3, #116	; 0x74
   146b8:	strb	r3, [fp, #-39]	; 0xffffffd9
   146bc:	b	14714 <_obstack_memory_used@@Base+0xfe8>
   146c0:	mov	r3, #118	; 0x76
   146c4:	strb	r3, [fp, #-39]	; 0xffffffd9
   146c8:	b	1472c <_obstack_memory_used@@Base+0x1000>
   146cc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   146d0:	strb	r3, [fp, #-39]	; 0xffffffd9
   146d4:	ldr	r3, [fp, #4]
   146d8:	cmp	r3, #2
   146dc:	bne	146f0 <_obstack_memory_used@@Base+0xfc4>
   146e0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   146e4:	cmp	r3, #0
   146e8:	beq	15044 <_obstack_memory_used@@Base+0x1918>
   146ec:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   146f0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   146f4:	cmp	r3, #0
   146f8:	beq	14714 <_obstack_memory_used@@Base+0xfe8>
   146fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14700:	cmp	r3, #0
   14704:	beq	14714 <_obstack_memory_used@@Base+0xfe8>
   14708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1470c:	cmp	r3, #0
   14710:	bne	1504c <_obstack_memory_used@@Base+0x1920>
   14714:	ldr	r3, [fp, #4]
   14718:	cmp	r3, #2
   1471c:	bne	1472c <_obstack_memory_used@@Base+0x1000>
   14720:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14724:	cmp	r3, #0
   14728:	bne	1530c <_obstack_memory_used@@Base+0x1be0>
   1472c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14730:	cmp	r3, #0
   14734:	beq	14e98 <_obstack_memory_used@@Base+0x176c>
   14738:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   1473c:	strb	r3, [fp, #-38]	; 0xffffffda
   14740:	b	14f44 <_obstack_memory_used@@Base+0x1818>
   14744:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14748:	cmn	r3, #1
   1474c:	bne	14770 <_obstack_memory_used@@Base+0x1044>
   14750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14754:	add	r3, r3, #1
   14758:	ldrb	r3, [r3]
   1475c:	cmp	r3, #0
   14760:	movne	r3, #1
   14764:	moveq	r3, #0
   14768:	uxtb	r3, r3
   1476c:	b	14784 <_obstack_memory_used@@Base+0x1058>
   14770:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14774:	cmp	r3, #1
   14778:	movne	r3, #1
   1477c:	moveq	r3, #0
   14780:	uxtb	r3, r3
   14784:	cmp	r3, #0
   14788:	bne	14ea0 <_obstack_memory_used@@Base+0x1774>
   1478c:	ldr	r3, [fp, #-16]
   14790:	cmp	r3, #0
   14794:	bne	14ea8 <_obstack_memory_used@@Base+0x177c>
   14798:	mov	r3, #1
   1479c:	strb	r3, [fp, #-42]	; 0xffffffd6
   147a0:	ldr	r3, [fp, #4]
   147a4:	cmp	r3, #2
   147a8:	bne	14eb0 <_obstack_memory_used@@Base+0x1784>
   147ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   147b0:	cmp	r3, #0
   147b4:	beq	14eb0 <_obstack_memory_used@@Base+0x1784>
   147b8:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   147bc:	mov	r3, #1
   147c0:	strb	r3, [fp, #-36]	; 0xffffffdc
   147c4:	mov	r3, #1
   147c8:	strb	r3, [fp, #-42]	; 0xffffffd6
   147cc:	ldr	r3, [fp, #4]
   147d0:	cmp	r3, #2
   147d4:	bne	14eb8 <_obstack_memory_used@@Base+0x178c>
   147d8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   147dc:	cmp	r3, #0
   147e0:	bne	15314 <_obstack_memory_used@@Base+0x1be8>
   147e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   147e8:	cmp	r3, #0
   147ec:	beq	1480c <_obstack_memory_used@@Base+0x10e0>
   147f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147f4:	cmp	r3, #0
   147f8:	bne	1480c <_obstack_memory_used@@Base+0x10e0>
   147fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14800:	str	r3, [fp, #-24]	; 0xffffffe8
   14804:	mov	r3, #0
   14808:	str	r3, [fp, #-92]	; 0xffffffa4
   1480c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14814:	cmp	r2, r3
   14818:	bcs	14830 <_obstack_memory_used@@Base+0x1104>
   1481c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14820:	ldr	r3, [fp, #-20]	; 0xffffffec
   14824:	add	r3, r2, r3
   14828:	mov	r2, #39	; 0x27
   1482c:	strb	r2, [r3]
   14830:	ldr	r3, [fp, #-20]	; 0xffffffec
   14834:	add	r3, r3, #1
   14838:	str	r3, [fp, #-20]	; 0xffffffec
   1483c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14840:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14844:	cmp	r2, r3
   14848:	bcs	14860 <_obstack_memory_used@@Base+0x1134>
   1484c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14850:	ldr	r3, [fp, #-20]	; 0xffffffec
   14854:	add	r3, r2, r3
   14858:	mov	r2, #92	; 0x5c
   1485c:	strb	r2, [r3]
   14860:	ldr	r3, [fp, #-20]	; 0xffffffec
   14864:	add	r3, r3, #1
   14868:	str	r3, [fp, #-20]	; 0xffffffec
   1486c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14870:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14874:	cmp	r2, r3
   14878:	bcs	14890 <_obstack_memory_used@@Base+0x1164>
   1487c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14880:	ldr	r3, [fp, #-20]	; 0xffffffec
   14884:	add	r3, r2, r3
   14888:	mov	r2, #39	; 0x27
   1488c:	strb	r2, [r3]
   14890:	ldr	r3, [fp, #-20]	; 0xffffffec
   14894:	add	r3, r3, #1
   14898:	str	r3, [fp, #-20]	; 0xffffffec
   1489c:	mov	r3, #0
   148a0:	strb	r3, [fp, #-35]	; 0xffffffdd
   148a4:	b	14eb8 <_obstack_memory_used@@Base+0x178c>
   148a8:	mov	r3, #1
   148ac:	strb	r3, [fp, #-42]	; 0xffffffd6
   148b0:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   148b4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   148b8:	cmp	r3, #0
   148bc:	beq	148fc <_obstack_memory_used@@Base+0x11d0>
   148c0:	mov	r3, #1
   148c4:	str	r3, [fp, #-48]	; 0xffffffd0
   148c8:	bl	10f84 <__ctype_b_loc@plt>
   148cc:	mov	r3, r0
   148d0:	ldr	r2, [r3]
   148d4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   148d8:	lsl	r3, r3, #1
   148dc:	add	r3, r2, r3
   148e0:	ldrh	r3, [r3]
   148e4:	and	r3, r3, #16384	; 0x4000
   148e8:	cmp	r3, #0
   148ec:	movne	r3, #1
   148f0:	moveq	r3, #0
   148f4:	strb	r3, [fp, #-49]	; 0xffffffcf
   148f8:	b	14b48 <_obstack_memory_used@@Base+0x141c>
   148fc:	sub	r3, fp, #76	; 0x4c
   14900:	mov	r2, #8
   14904:	mov	r1, #0
   14908:	mov	r0, r3
   1490c:	bl	10fd8 <memset@plt>
   14910:	mov	r3, #0
   14914:	str	r3, [fp, #-48]	; 0xffffffd0
   14918:	mov	r3, #1
   1491c:	strb	r3, [fp, #-49]	; 0xffffffcf
   14920:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14924:	cmn	r3, #1
   14928:	bne	14938 <_obstack_memory_used@@Base+0x120c>
   1492c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14930:	bl	10fa8 <strlen@plt>
   14934:	str	r0, [fp, #-100]	; 0xffffff9c
   14938:	ldr	r2, [fp, #-16]
   1493c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14940:	add	r3, r2, r3
   14944:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14948:	add	r1, r2, r3
   1494c:	ldr	r2, [fp, #-16]
   14950:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14954:	add	r3, r2, r3
   14958:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1495c:	sub	r2, r2, r3
   14960:	sub	r3, fp, #76	; 0x4c
   14964:	sub	r0, fp, #80	; 0x50
   14968:	bl	17c30 <_obstack_memory_used@@Base+0x4504>
   1496c:	str	r0, [fp, #-64]	; 0xffffffc0
   14970:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14974:	cmp	r3, #0
   14978:	beq	14b3c <_obstack_memory_used@@Base+0x1410>
   1497c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14980:	cmn	r3, #1
   14984:	bne	14994 <_obstack_memory_used@@Base+0x1268>
   14988:	mov	r3, #0
   1498c:	strb	r3, [fp, #-49]	; 0xffffffcf
   14990:	b	14b48 <_obstack_memory_used@@Base+0x141c>
   14994:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14998:	cmn	r3, #2
   1499c:	bne	149f4 <_obstack_memory_used@@Base+0x12c8>
   149a0:	mov	r3, #0
   149a4:	strb	r3, [fp, #-49]	; 0xffffffcf
   149a8:	b	149b8 <_obstack_memory_used@@Base+0x128c>
   149ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   149b0:	add	r3, r3, #1
   149b4:	str	r3, [fp, #-48]	; 0xffffffd0
   149b8:	ldr	r2, [fp, #-16]
   149bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   149c0:	add	r2, r2, r3
   149c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   149c8:	cmp	r2, r3
   149cc:	bcs	14b44 <_obstack_memory_used@@Base+0x1418>
   149d0:	ldr	r2, [fp, #-16]
   149d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   149d8:	add	r3, r2, r3
   149dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   149e0:	add	r3, r2, r3
   149e4:	ldrb	r3, [r3]
   149e8:	cmp	r3, #0
   149ec:	bne	149ac <_obstack_memory_used@@Base+0x1280>
   149f0:	b	14b44 <_obstack_memory_used@@Base+0x1418>
   149f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   149f8:	cmp	r3, #0
   149fc:	beq	14af0 <_obstack_memory_used@@Base+0x13c4>
   14a00:	ldr	r3, [fp, #4]
   14a04:	cmp	r3, #2
   14a08:	bne	14af0 <_obstack_memory_used@@Base+0x13c4>
   14a0c:	mov	r3, #1
   14a10:	str	r3, [fp, #-56]	; 0xffffffc8
   14a14:	b	14ae0 <_obstack_memory_used@@Base+0x13b4>
   14a18:	ldr	r2, [fp, #-16]
   14a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14a20:	add	r2, r2, r3
   14a24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14a28:	add	r3, r2, r3
   14a2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14a30:	add	r3, r2, r3
   14a34:	ldrb	r3, [r3]
   14a38:	sub	r3, r3, #91	; 0x5b
   14a3c:	cmp	r3, #33	; 0x21
   14a40:	ldrls	pc, [pc, r3, lsl #2]
   14a44:	b	14ad0 <_obstack_memory_used@@Base+0x13a4>
   14a48:	andeq	r5, r1, ip, lsl r3
   14a4c:	andeq	r5, r1, ip, lsl r3
   14a50:	ldrdeq	r4, [r1], -r0
   14a54:	andeq	r5, r1, ip, lsl r3
   14a58:	ldrdeq	r4, [r1], -r0
   14a5c:	andeq	r5, r1, ip, lsl r3
   14a60:	ldrdeq	r4, [r1], -r0
   14a64:	ldrdeq	r4, [r1], -r0
   14a68:	ldrdeq	r4, [r1], -r0
   14a6c:	ldrdeq	r4, [r1], -r0
   14a70:	ldrdeq	r4, [r1], -r0
   14a74:	ldrdeq	r4, [r1], -r0
   14a78:	ldrdeq	r4, [r1], -r0
   14a7c:	ldrdeq	r4, [r1], -r0
   14a80:	ldrdeq	r4, [r1], -r0
   14a84:	ldrdeq	r4, [r1], -r0
   14a88:	ldrdeq	r4, [r1], -r0
   14a8c:	ldrdeq	r4, [r1], -r0
   14a90:	ldrdeq	r4, [r1], -r0
   14a94:	ldrdeq	r4, [r1], -r0
   14a98:	ldrdeq	r4, [r1], -r0
   14a9c:	ldrdeq	r4, [r1], -r0
   14aa0:	ldrdeq	r4, [r1], -r0
   14aa4:	ldrdeq	r4, [r1], -r0
   14aa8:	ldrdeq	r4, [r1], -r0
   14aac:	ldrdeq	r4, [r1], -r0
   14ab0:	ldrdeq	r4, [r1], -r0
   14ab4:	ldrdeq	r4, [r1], -r0
   14ab8:	ldrdeq	r4, [r1], -r0
   14abc:	ldrdeq	r4, [r1], -r0
   14ac0:	ldrdeq	r4, [r1], -r0
   14ac4:	ldrdeq	r4, [r1], -r0
   14ac8:	ldrdeq	r4, [r1], -r0
   14acc:	andeq	r5, r1, ip, lsl r3
   14ad0:	nop			; (mov r0, r0)
   14ad4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14ad8:	add	r3, r3, #1
   14adc:	str	r3, [fp, #-56]	; 0xffffffc8
   14ae0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14ae4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14ae8:	cmp	r2, r3
   14aec:	bcc	14a18 <_obstack_memory_used@@Base+0x12ec>
   14af0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14af4:	mov	r0, r3
   14af8:	bl	10eac <iswprint@plt>
   14afc:	mov	r3, r0
   14b00:	cmp	r3, #0
   14b04:	bne	14b10 <_obstack_memory_used@@Base+0x13e4>
   14b08:	mov	r3, #0
   14b0c:	strb	r3, [fp, #-49]	; 0xffffffcf
   14b10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14b14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14b18:	add	r3, r2, r3
   14b1c:	str	r3, [fp, #-48]	; 0xffffffd0
   14b20:	sub	r3, fp, #76	; 0x4c
   14b24:	mov	r0, r3
   14b28:	bl	10e58 <mbsinit@plt>
   14b2c:	mov	r3, r0
   14b30:	cmp	r3, #0
   14b34:	beq	14938 <_obstack_memory_used@@Base+0x120c>
   14b38:	b	14b48 <_obstack_memory_used@@Base+0x141c>
   14b3c:	nop			; (mov r0, r0)
   14b40:	b	14b48 <_obstack_memory_used@@Base+0x141c>
   14b44:	nop			; (mov r0, r0)
   14b48:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14b4c:	strb	r3, [fp, #-42]	; 0xffffffd6
   14b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b54:	cmp	r3, #1
   14b58:	bhi	14b7c <_obstack_memory_used@@Base+0x1450>
   14b5c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14b60:	cmp	r3, #0
   14b64:	beq	14ebc <_obstack_memory_used@@Base+0x1790>
   14b68:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14b6c:	eor	r3, r3, #1
   14b70:	uxtb	r3, r3
   14b74:	cmp	r3, #0
   14b78:	beq	14ebc <_obstack_memory_used@@Base+0x1790>
   14b7c:	ldr	r2, [fp, #-16]
   14b80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b84:	add	r3, r2, r3
   14b88:	str	r3, [fp, #-68]	; 0xffffffbc
   14b8c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14b90:	cmp	r3, #0
   14b94:	beq	14d54 <_obstack_memory_used@@Base+0x1628>
   14b98:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14b9c:	eor	r3, r3, #1
   14ba0:	uxtb	r3, r3
   14ba4:	cmp	r3, #0
   14ba8:	beq	14d54 <_obstack_memory_used@@Base+0x1628>
   14bac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14bb0:	cmp	r3, #0
   14bb4:	bne	15324 <_obstack_memory_used@@Base+0x1bf8>
   14bb8:	mov	r3, #1
   14bbc:	strb	r3, [fp, #-41]	; 0xffffffd7
   14bc0:	ldr	r3, [fp, #4]
   14bc4:	cmp	r3, #2
   14bc8:	bne	14c78 <_obstack_memory_used@@Base+0x154c>
   14bcc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14bd0:	eor	r3, r3, #1
   14bd4:	uxtb	r3, r3
   14bd8:	cmp	r3, #0
   14bdc:	beq	14c78 <_obstack_memory_used@@Base+0x154c>
   14be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14be4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14be8:	cmp	r2, r3
   14bec:	bcs	14c04 <_obstack_memory_used@@Base+0x14d8>
   14bf0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bf8:	add	r3, r2, r3
   14bfc:	mov	r2, #39	; 0x27
   14c00:	strb	r2, [r3]
   14c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c08:	add	r3, r3, #1
   14c0c:	str	r3, [fp, #-20]	; 0xffffffec
   14c10:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c18:	cmp	r2, r3
   14c1c:	bcs	14c34 <_obstack_memory_used@@Base+0x1508>
   14c20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c28:	add	r3, r2, r3
   14c2c:	mov	r2, #36	; 0x24
   14c30:	strb	r2, [r3]
   14c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c38:	add	r3, r3, #1
   14c3c:	str	r3, [fp, #-20]	; 0xffffffec
   14c40:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c48:	cmp	r2, r3
   14c4c:	bcs	14c64 <_obstack_memory_used@@Base+0x1538>
   14c50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c58:	add	r3, r2, r3
   14c5c:	mov	r2, #39	; 0x27
   14c60:	strb	r2, [r3]
   14c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c68:	add	r3, r3, #1
   14c6c:	str	r3, [fp, #-20]	; 0xffffffec
   14c70:	mov	r3, #1
   14c74:	strb	r3, [fp, #-35]	; 0xffffffdd
   14c78:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c80:	cmp	r2, r3
   14c84:	bcs	14c9c <_obstack_memory_used@@Base+0x1570>
   14c88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c90:	add	r3, r2, r3
   14c94:	mov	r2, #92	; 0x5c
   14c98:	strb	r2, [r3]
   14c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ca0:	add	r3, r3, #1
   14ca4:	str	r3, [fp, #-20]	; 0xffffffec
   14ca8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14cac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14cb0:	cmp	r2, r3
   14cb4:	bcs	14cdc <_obstack_memory_used@@Base+0x15b0>
   14cb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14cbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cc0:	add	r3, r2, r3
   14cc4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14cc8:	lsr	r2, r2, #6
   14ccc:	uxtb	r2, r2
   14cd0:	add	r2, r2, #48	; 0x30
   14cd4:	uxtb	r2, r2
   14cd8:	strb	r2, [r3]
   14cdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ce0:	add	r3, r3, #1
   14ce4:	str	r3, [fp, #-20]	; 0xffffffec
   14ce8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14cec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14cf0:	cmp	r2, r3
   14cf4:	bcs	14d24 <_obstack_memory_used@@Base+0x15f8>
   14cf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d00:	add	r3, r2, r3
   14d04:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14d08:	lsr	r2, r2, #3
   14d0c:	uxtb	r2, r2
   14d10:	and	r2, r2, #7
   14d14:	uxtb	r2, r2
   14d18:	add	r2, r2, #48	; 0x30
   14d1c:	uxtb	r2, r2
   14d20:	strb	r2, [r3]
   14d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d28:	add	r3, r3, #1
   14d2c:	str	r3, [fp, #-20]	; 0xffffffec
   14d30:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14d34:	and	r3, r3, #7
   14d38:	uxtb	r3, r3
   14d3c:	add	r3, r3, #48	; 0x30
   14d40:	strb	r3, [fp, #-38]	; 0xffffffda
   14d44:	b	14d98 <_obstack_memory_used@@Base+0x166c>
   14d48:	andeq	sl, r1, r4, lsr #1
   14d4c:	andeq	sl, r1, ip, lsr #1
   14d50:	andeq	sl, r1, r8, lsr #1
   14d54:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14d58:	cmp	r3, #0
   14d5c:	beq	14d98 <_obstack_memory_used@@Base+0x166c>
   14d60:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14d68:	cmp	r2, r3
   14d6c:	bcs	14d84 <_obstack_memory_used@@Base+0x1658>
   14d70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14d74:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d78:	add	r3, r2, r3
   14d7c:	mov	r2, #92	; 0x5c
   14d80:	strb	r2, [r3]
   14d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d88:	add	r3, r3, #1
   14d8c:	str	r3, [fp, #-20]	; 0xffffffec
   14d90:	mov	r3, #0
   14d94:	strb	r3, [fp, #-40]	; 0xffffffd8
   14d98:	ldr	r3, [fp, #-16]
   14d9c:	add	r2, r3, #1
   14da0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14da4:	cmp	r2, r3
   14da8:	bcs	14e88 <_obstack_memory_used@@Base+0x175c>
   14dac:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14db0:	cmp	r3, #0
   14db4:	beq	14e34 <_obstack_memory_used@@Base+0x1708>
   14db8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14dbc:	eor	r3, r3, #1
   14dc0:	uxtb	r3, r3
   14dc4:	cmp	r3, #0
   14dc8:	beq	14e34 <_obstack_memory_used@@Base+0x1708>
   14dcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14dd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14dd4:	cmp	r2, r3
   14dd8:	bcs	14df0 <_obstack_memory_used@@Base+0x16c4>
   14ddc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14de4:	add	r3, r2, r3
   14de8:	mov	r2, #39	; 0x27
   14dec:	strb	r2, [r3]
   14df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14df4:	add	r3, r3, #1
   14df8:	str	r3, [fp, #-20]	; 0xffffffec
   14dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e04:	cmp	r2, r3
   14e08:	bcs	14e20 <_obstack_memory_used@@Base+0x16f4>
   14e0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e14:	add	r3, r2, r3
   14e18:	mov	r2, #39	; 0x27
   14e1c:	strb	r2, [r3]
   14e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e24:	add	r3, r3, #1
   14e28:	str	r3, [fp, #-20]	; 0xffffffec
   14e2c:	mov	r3, #0
   14e30:	strb	r3, [fp, #-35]	; 0xffffffdd
   14e34:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e3c:	cmp	r2, r3
   14e40:	bcs	14e58 <_obstack_memory_used@@Base+0x172c>
   14e44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e4c:	add	r3, r2, r3
   14e50:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14e54:	strb	r2, [r3]
   14e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e5c:	add	r3, r3, #1
   14e60:	str	r3, [fp, #-20]	; 0xffffffec
   14e64:	ldr	r3, [fp, #-16]
   14e68:	add	r3, r3, #1
   14e6c:	str	r3, [fp, #-16]
   14e70:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14e74:	ldr	r3, [fp, #-16]
   14e78:	add	r3, r2, r3
   14e7c:	ldrb	r3, [r3]
   14e80:	strb	r3, [fp, #-38]	; 0xffffffda
   14e84:	b	14b8c <_obstack_memory_used@@Base+0x1460>
   14e88:	nop			; (mov r0, r0)
   14e8c:	b	15058 <_obstack_memory_used@@Base+0x192c>
   14e90:	nop			; (mov r0, r0)
   14e94:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14e98:	nop			; (mov r0, r0)
   14e9c:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14ea0:	nop			; (mov r0, r0)
   14ea4:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14ea8:	nop			; (mov r0, r0)
   14eac:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14eb0:	nop			; (mov r0, r0)
   14eb4:	b	14ebc <_obstack_memory_used@@Base+0x1790>
   14eb8:	nop			; (mov r0, r0)
   14ebc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14ec0:	eor	r3, r3, #1
   14ec4:	uxtb	r3, r3
   14ec8:	cmp	r3, #0
   14ecc:	bne	14edc <_obstack_memory_used@@Base+0x17b0>
   14ed0:	ldr	r3, [fp, #4]
   14ed4:	cmp	r3, #2
   14ed8:	bne	14ef0 <_obstack_memory_used@@Base+0x17c4>
   14edc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14ee0:	eor	r3, r3, #1
   14ee4:	uxtb	r3, r3
   14ee8:	cmp	r3, #0
   14eec:	bne	14f30 <_obstack_memory_used@@Base+0x1804>
   14ef0:	ldr	r3, [fp, #12]
   14ef4:	cmp	r3, #0
   14ef8:	beq	14f30 <_obstack_memory_used@@Base+0x1804>
   14efc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14f00:	lsr	r3, r3, #5
   14f04:	uxtb	r3, r3
   14f08:	lsl	r3, r3, #2
   14f0c:	ldr	r2, [fp, #12]
   14f10:	add	r3, r2, r3
   14f14:	ldr	r2, [r3]
   14f18:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14f1c:	and	r3, r3, #31
   14f20:	lsr	r3, r2, r3
   14f24:	and	r3, r3, #1
   14f28:	cmp	r3, #0
   14f2c:	bne	14f44 <_obstack_memory_used@@Base+0x1818>
   14f30:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14f34:	eor	r3, r3, #1
   14f38:	uxtb	r3, r3
   14f3c:	cmp	r3, #0
   14f40:	bne	15054 <_obstack_memory_used@@Base+0x1928>
   14f44:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14f48:	cmp	r3, #0
   14f4c:	bne	1532c <_obstack_memory_used@@Base+0x1c00>
   14f50:	mov	r3, #1
   14f54:	strb	r3, [fp, #-41]	; 0xffffffd7
   14f58:	ldr	r3, [fp, #4]
   14f5c:	cmp	r3, #2
   14f60:	bne	15010 <_obstack_memory_used@@Base+0x18e4>
   14f64:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14f68:	eor	r3, r3, #1
   14f6c:	uxtb	r3, r3
   14f70:	cmp	r3, #0
   14f74:	beq	15010 <_obstack_memory_used@@Base+0x18e4>
   14f78:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f80:	cmp	r2, r3
   14f84:	bcs	14f9c <_obstack_memory_used@@Base+0x1870>
   14f88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f90:	add	r3, r2, r3
   14f94:	mov	r2, #39	; 0x27
   14f98:	strb	r2, [r3]
   14f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fa0:	add	r3, r3, #1
   14fa4:	str	r3, [fp, #-20]	; 0xffffffec
   14fa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14fb0:	cmp	r2, r3
   14fb4:	bcs	14fcc <_obstack_memory_used@@Base+0x18a0>
   14fb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fc0:	add	r3, r2, r3
   14fc4:	mov	r2, #36	; 0x24
   14fc8:	strb	r2, [r3]
   14fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fd0:	add	r3, r3, #1
   14fd4:	str	r3, [fp, #-20]	; 0xffffffec
   14fd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14fe0:	cmp	r2, r3
   14fe4:	bcs	14ffc <_obstack_memory_used@@Base+0x18d0>
   14fe8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ff0:	add	r3, r2, r3
   14ff4:	mov	r2, #39	; 0x27
   14ff8:	strb	r2, [r3]
   14ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15000:	add	r3, r3, #1
   15004:	str	r3, [fp, #-20]	; 0xffffffec
   15008:	mov	r3, #1
   1500c:	strb	r3, [fp, #-35]	; 0xffffffdd
   15010:	ldr	r2, [fp, #-20]	; 0xffffffec
   15014:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15018:	cmp	r2, r3
   1501c:	bcs	15034 <_obstack_memory_used@@Base+0x1908>
   15020:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15024:	ldr	r3, [fp, #-20]	; 0xffffffec
   15028:	add	r3, r2, r3
   1502c:	mov	r2, #92	; 0x5c
   15030:	strb	r2, [r3]
   15034:	ldr	r3, [fp, #-20]	; 0xffffffec
   15038:	add	r3, r3, #1
   1503c:	str	r3, [fp, #-20]	; 0xffffffec
   15040:	b	15058 <_obstack_memory_used@@Base+0x192c>
   15044:	nop			; (mov r0, r0)
   15048:	b	15058 <_obstack_memory_used@@Base+0x192c>
   1504c:	nop			; (mov r0, r0)
   15050:	b	15058 <_obstack_memory_used@@Base+0x192c>
   15054:	nop			; (mov r0, r0)
   15058:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1505c:	cmp	r3, #0
   15060:	beq	150e0 <_obstack_memory_used@@Base+0x19b4>
   15064:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   15068:	eor	r3, r3, #1
   1506c:	uxtb	r3, r3
   15070:	cmp	r3, #0
   15074:	beq	150e0 <_obstack_memory_used@@Base+0x19b4>
   15078:	ldr	r2, [fp, #-20]	; 0xffffffec
   1507c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15080:	cmp	r2, r3
   15084:	bcs	1509c <_obstack_memory_used@@Base+0x1970>
   15088:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1508c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15090:	add	r3, r2, r3
   15094:	mov	r2, #39	; 0x27
   15098:	strb	r2, [r3]
   1509c:	ldr	r3, [fp, #-20]	; 0xffffffec
   150a0:	add	r3, r3, #1
   150a4:	str	r3, [fp, #-20]	; 0xffffffec
   150a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   150ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150b0:	cmp	r2, r3
   150b4:	bcs	150cc <_obstack_memory_used@@Base+0x19a0>
   150b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   150c0:	add	r3, r2, r3
   150c4:	mov	r2, #39	; 0x27
   150c8:	strb	r2, [r3]
   150cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   150d0:	add	r3, r3, #1
   150d4:	str	r3, [fp, #-20]	; 0xffffffec
   150d8:	mov	r3, #0
   150dc:	strb	r3, [fp, #-35]	; 0xffffffdd
   150e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   150e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150e8:	cmp	r2, r3
   150ec:	bcs	15104 <_obstack_memory_used@@Base+0x19d8>
   150f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150f8:	add	r3, r2, r3
   150fc:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15100:	strb	r2, [r3]
   15104:	ldr	r3, [fp, #-20]	; 0xffffffec
   15108:	add	r3, r3, #1
   1510c:	str	r3, [fp, #-20]	; 0xffffffec
   15110:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   15114:	eor	r3, r3, #1
   15118:	uxtb	r3, r3
   1511c:	cmp	r3, #0
   15120:	beq	1512c <_obstack_memory_used@@Base+0x1a00>
   15124:	mov	r3, #0
   15128:	strb	r3, [fp, #-37]	; 0xffffffdb
   1512c:	ldr	r3, [fp, #-16]
   15130:	add	r3, r3, #1
   15134:	str	r3, [fp, #-16]
   15138:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1513c:	cmn	r3, #1
   15140:	bne	15168 <_obstack_memory_used@@Base+0x1a3c>
   15144:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15148:	ldr	r3, [fp, #-16]
   1514c:	add	r3, r2, r3
   15150:	ldrb	r3, [r3]
   15154:	cmp	r3, #0
   15158:	movne	r3, #1
   1515c:	moveq	r3, #0
   15160:	uxtb	r3, r3
   15164:	b	15180 <_obstack_memory_used@@Base+0x1a54>
   15168:	ldr	r2, [fp, #-16]
   1516c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15170:	cmp	r2, r3
   15174:	movne	r3, #1
   15178:	moveq	r3, #0
   1517c:	uxtb	r3, r3
   15180:	cmp	r3, #0
   15184:	bne	13fac <_obstack_memory_used@@Base+0x880>
   15188:	ldr	r3, [fp, #-20]	; 0xffffffec
   1518c:	cmp	r3, #0
   15190:	bne	151ac <_obstack_memory_used@@Base+0x1a80>
   15194:	ldr	r3, [fp, #4]
   15198:	cmp	r3, #2
   1519c:	bne	151ac <_obstack_memory_used@@Base+0x1a80>
   151a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   151a4:	cmp	r3, #0
   151a8:	bne	15334 <_obstack_memory_used@@Base+0x1c08>
   151ac:	ldr	r3, [fp, #4]
   151b0:	cmp	r3, #2
   151b4:	bne	15254 <_obstack_memory_used@@Base+0x1b28>
   151b8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   151bc:	eor	r3, r3, #1
   151c0:	uxtb	r3, r3
   151c4:	cmp	r3, #0
   151c8:	beq	15254 <_obstack_memory_used@@Base+0x1b28>
   151cc:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   151d0:	cmp	r3, #0
   151d4:	beq	15254 <_obstack_memory_used@@Base+0x1b28>
   151d8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   151dc:	cmp	r3, #0
   151e0:	beq	15228 <_obstack_memory_used@@Base+0x1afc>
   151e4:	ldr	r3, [fp, #20]
   151e8:	str	r3, [sp, #16]
   151ec:	ldr	r3, [fp, #16]
   151f0:	str	r3, [sp, #12]
   151f4:	ldr	r3, [fp, #12]
   151f8:	str	r3, [sp, #8]
   151fc:	ldr	r3, [fp, #8]
   15200:	str	r3, [sp, #4]
   15204:	mov	r3, #5
   15208:	str	r3, [sp]
   1520c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15210:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15218:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1521c:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   15220:	mov	r3, r0
   15224:	b	1539c <_obstack_memory_used@@Base+0x1c70>
   15228:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1522c:	cmp	r3, #0
   15230:	bne	15254 <_obstack_memory_used@@Base+0x1b28>
   15234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15238:	cmp	r3, #0
   1523c:	beq	15254 <_obstack_memory_used@@Base+0x1b28>
   15240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15244:	str	r3, [fp, #-92]	; 0xffffffa4
   15248:	mov	r3, #0
   1524c:	str	r3, [fp, #-20]	; 0xffffffec
   15250:	b	13d88 <_obstack_memory_used@@Base+0x65c>
   15254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15258:	cmp	r3, #0
   1525c:	beq	152c8 <_obstack_memory_used@@Base+0x1b9c>
   15260:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15264:	eor	r3, r3, #1
   15268:	uxtb	r3, r3
   1526c:	cmp	r3, #0
   15270:	beq	152c8 <_obstack_memory_used@@Base+0x1b9c>
   15274:	b	152b8 <_obstack_memory_used@@Base+0x1b8c>
   15278:	ldr	r2, [fp, #-20]	; 0xffffffec
   1527c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15280:	cmp	r2, r3
   15284:	bcs	152a0 <_obstack_memory_used@@Base+0x1b74>
   15288:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1528c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15290:	add	r3, r2, r3
   15294:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15298:	ldrb	r2, [r2]
   1529c:	strb	r2, [r3]
   152a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152a4:	add	r3, r3, #1
   152a8:	str	r3, [fp, #-20]	; 0xffffffec
   152ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152b0:	add	r3, r3, #1
   152b4:	str	r3, [fp, #-28]	; 0xffffffe4
   152b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152bc:	ldrb	r3, [r3]
   152c0:	cmp	r3, #0
   152c4:	bne	15278 <_obstack_memory_used@@Base+0x1b4c>
   152c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   152cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   152d0:	cmp	r2, r3
   152d4:	bcs	152ec <_obstack_memory_used@@Base+0x1bc0>
   152d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   152dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   152e0:	add	r3, r2, r3
   152e4:	mov	r2, #0
   152e8:	strb	r2, [r3]
   152ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   152f0:	b	1539c <_obstack_memory_used@@Base+0x1c70>
   152f4:	nop			; (mov r0, r0)
   152f8:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   152fc:	nop			; (mov r0, r0)
   15300:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   15304:	nop			; (mov r0, r0)
   15308:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   1530c:	nop			; (mov r0, r0)
   15310:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   15314:	nop			; (mov r0, r0)
   15318:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   1531c:	nop			; (mov r0, r0)
   15320:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   15324:	nop			; (mov r0, r0)
   15328:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   1532c:	nop			; (mov r0, r0)
   15330:	b	15338 <_obstack_memory_used@@Base+0x1c0c>
   15334:	nop			; (mov r0, r0)
   15338:	ldr	r3, [fp, #4]
   1533c:	cmp	r3, #2
   15340:	bne	15358 <_obstack_memory_used@@Base+0x1c2c>
   15344:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15348:	cmp	r3, #0
   1534c:	beq	15358 <_obstack_memory_used@@Base+0x1c2c>
   15350:	mov	r3, #4
   15354:	str	r3, [fp, #4]
   15358:	ldr	r3, [fp, #8]
   1535c:	bic	r3, r3, #2
   15360:	ldr	r2, [fp, #20]
   15364:	str	r2, [sp, #16]
   15368:	ldr	r2, [fp, #16]
   1536c:	str	r2, [sp, #12]
   15370:	mov	r2, #0
   15374:	str	r2, [sp, #8]
   15378:	str	r3, [sp, #4]
   1537c:	ldr	r3, [fp, #4]
   15380:	str	r3, [sp]
   15384:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15388:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1538c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15390:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15394:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   15398:	mov	r3, r0
   1539c:	mov	r0, r3
   153a0:	sub	sp, fp, #8
   153a4:	pop	{r4, fp, pc}
   153a8:	push	{fp, lr}
   153ac:	add	fp, sp, #4
   153b0:	sub	sp, sp, #56	; 0x38
   153b4:	str	r0, [fp, #-24]	; 0xffffffe8
   153b8:	str	r1, [fp, #-28]	; 0xffffffe4
   153bc:	str	r2, [fp, #-32]	; 0xffffffe0
   153c0:	str	r3, [fp, #-36]	; 0xffffffdc
   153c4:	ldr	r3, [fp, #4]
   153c8:	cmp	r3, #0
   153cc:	beq	153d8 <_obstack_memory_used@@Base+0x1cac>
   153d0:	ldr	r3, [fp, #4]
   153d4:	b	153dc <_obstack_memory_used@@Base+0x1cb0>
   153d8:	ldr	r3, [pc, #132]	; 15464 <_obstack_memory_used@@Base+0x1d38>
   153dc:	str	r3, [fp, #-8]
   153e0:	bl	10fc0 <__errno_location@plt>
   153e4:	mov	r3, r0
   153e8:	ldr	r3, [r3]
   153ec:	str	r3, [fp, #-12]
   153f0:	ldr	r3, [fp, #-8]
   153f4:	ldr	r3, [r3]
   153f8:	ldr	r2, [fp, #-8]
   153fc:	ldr	r2, [r2, #4]
   15400:	ldr	r1, [fp, #-8]
   15404:	add	r1, r1, #8
   15408:	ldr	r0, [fp, #-8]
   1540c:	ldr	r0, [r0, #40]	; 0x28
   15410:	ldr	ip, [fp, #-8]
   15414:	ldr	ip, [ip, #44]	; 0x2c
   15418:	str	ip, [sp, #16]
   1541c:	str	r0, [sp, #12]
   15420:	str	r1, [sp, #8]
   15424:	str	r2, [sp, #4]
   15428:	str	r3, [sp]
   1542c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15430:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1543c:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   15440:	str	r0, [fp, #-16]
   15444:	bl	10fc0 <__errno_location@plt>
   15448:	mov	r2, r0
   1544c:	ldr	r3, [fp, #-12]
   15450:	str	r3, [r2]
   15454:	ldr	r3, [fp, #-16]
   15458:	mov	r0, r3
   1545c:	sub	sp, fp, #4
   15460:	pop	{fp, pc}
   15464:	muleq	r2, r4, r1
   15468:	push	{fp, lr}
   1546c:	add	fp, sp, #4
   15470:	sub	sp, sp, #16
   15474:	str	r0, [fp, #-8]
   15478:	str	r1, [fp, #-12]
   1547c:	str	r2, [fp, #-16]
   15480:	ldr	r3, [fp, #-16]
   15484:	mov	r2, #0
   15488:	ldr	r1, [fp, #-12]
   1548c:	ldr	r0, [fp, #-8]
   15490:	bl	154a4 <_obstack_memory_used@@Base+0x1d78>
   15494:	mov	r3, r0
   15498:	mov	r0, r3
   1549c:	sub	sp, fp, #4
   154a0:	pop	{fp, pc}
   154a4:	push	{fp, lr}
   154a8:	add	fp, sp, #4
   154ac:	sub	sp, sp, #64	; 0x40
   154b0:	str	r0, [fp, #-32]	; 0xffffffe0
   154b4:	str	r1, [fp, #-36]	; 0xffffffdc
   154b8:	str	r2, [fp, #-40]	; 0xffffffd8
   154bc:	str	r3, [fp, #-44]	; 0xffffffd4
   154c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154c4:	cmp	r3, #0
   154c8:	beq	154d4 <_obstack_memory_used@@Base+0x1da8>
   154cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154d0:	b	154d8 <_obstack_memory_used@@Base+0x1dac>
   154d4:	ldr	r3, [pc, #292]	; 15600 <_obstack_memory_used@@Base+0x1ed4>
   154d8:	str	r3, [fp, #-8]
   154dc:	bl	10fc0 <__errno_location@plt>
   154e0:	mov	r3, r0
   154e4:	ldr	r3, [r3]
   154e8:	str	r3, [fp, #-12]
   154ec:	ldr	r3, [fp, #-8]
   154f0:	ldr	r3, [r3, #4]
   154f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   154f8:	cmp	r2, #0
   154fc:	moveq	r2, #1
   15500:	movne	r2, #0
   15504:	uxtb	r2, r2
   15508:	orr	r3, r3, r2
   1550c:	str	r3, [fp, #-16]
   15510:	ldr	r3, [fp, #-8]
   15514:	ldr	r3, [r3]
   15518:	ldr	r2, [fp, #-8]
   1551c:	add	r2, r2, #8
   15520:	ldr	r1, [fp, #-8]
   15524:	ldr	r1, [r1, #40]	; 0x28
   15528:	ldr	r0, [fp, #-8]
   1552c:	ldr	r0, [r0, #44]	; 0x2c
   15530:	str	r0, [sp, #16]
   15534:	str	r1, [sp, #12]
   15538:	str	r2, [sp, #8]
   1553c:	ldr	r2, [fp, #-16]
   15540:	str	r2, [sp, #4]
   15544:	str	r3, [sp]
   15548:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1554c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15550:	mov	r1, #0
   15554:	mov	r0, #0
   15558:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   1555c:	mov	r3, r0
   15560:	add	r3, r3, #1
   15564:	str	r3, [fp, #-20]	; 0xffffffec
   15568:	ldr	r0, [fp, #-20]	; 0xffffffec
   1556c:	bl	167a0 <_obstack_memory_used@@Base+0x3074>
   15570:	mov	r3, r0
   15574:	str	r3, [fp, #-24]	; 0xffffffe8
   15578:	ldr	r3, [fp, #-8]
   1557c:	ldr	r3, [r3]
   15580:	ldr	r2, [fp, #-8]
   15584:	add	r2, r2, #8
   15588:	ldr	r1, [fp, #-8]
   1558c:	ldr	r1, [r1, #40]	; 0x28
   15590:	ldr	r0, [fp, #-8]
   15594:	ldr	r0, [r0, #44]	; 0x2c
   15598:	str	r0, [sp, #16]
   1559c:	str	r1, [sp, #12]
   155a0:	str	r2, [sp, #8]
   155a4:	ldr	r2, [fp, #-16]
   155a8:	str	r2, [sp, #4]
   155ac:	str	r3, [sp]
   155b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   155bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155c0:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   155c4:	bl	10fc0 <__errno_location@plt>
   155c8:	mov	r2, r0
   155cc:	ldr	r3, [fp, #-12]
   155d0:	str	r3, [r2]
   155d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   155d8:	cmp	r3, #0
   155dc:	beq	155f0 <_obstack_memory_used@@Base+0x1ec4>
   155e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e4:	sub	r2, r3, #1
   155e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   155ec:	str	r2, [r3]
   155f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155f4:	mov	r0, r3
   155f8:	sub	sp, fp, #4
   155fc:	pop	{fp, pc}
   15600:	muleq	r2, r4, r1
   15604:	push	{fp, lr}
   15608:	add	fp, sp, #4
   1560c:	sub	sp, sp, #8
   15610:	ldr	r3, [pc, #196]	; 156dc <_obstack_memory_used@@Base+0x1fb0>
   15614:	ldr	r3, [r3]
   15618:	str	r3, [fp, #-12]
   1561c:	mov	r3, #1
   15620:	str	r3, [fp, #-8]
   15624:	b	15650 <_obstack_memory_used@@Base+0x1f24>
   15628:	ldr	r3, [fp, #-8]
   1562c:	lsl	r3, r3, #3
   15630:	ldr	r2, [fp, #-12]
   15634:	add	r3, r2, r3
   15638:	ldr	r3, [r3, #4]
   1563c:	mov	r0, r3
   15640:	bl	12cc8 <close@plt+0x1c6c>
   15644:	ldr	r3, [fp, #-8]
   15648:	add	r3, r3, #1
   1564c:	str	r3, [fp, #-8]
   15650:	ldr	r3, [pc, #136]	; 156e0 <_obstack_memory_used@@Base+0x1fb4>
   15654:	ldr	r3, [r3]
   15658:	ldr	r2, [fp, #-8]
   1565c:	cmp	r2, r3
   15660:	blt	15628 <_obstack_memory_used@@Base+0x1efc>
   15664:	ldr	r3, [fp, #-12]
   15668:	ldr	r3, [r3, #4]
   1566c:	ldr	r2, [pc, #112]	; 156e4 <_obstack_memory_used@@Base+0x1fb8>
   15670:	cmp	r3, r2
   15674:	beq	156a0 <_obstack_memory_used@@Base+0x1f74>
   15678:	ldr	r3, [fp, #-12]
   1567c:	ldr	r3, [r3, #4]
   15680:	mov	r0, r3
   15684:	bl	12cc8 <close@plt+0x1c6c>
   15688:	ldr	r3, [pc, #88]	; 156e8 <_obstack_memory_used@@Base+0x1fbc>
   1568c:	mov	r2, #256	; 0x100
   15690:	str	r2, [r3]
   15694:	ldr	r3, [pc, #76]	; 156e8 <_obstack_memory_used@@Base+0x1fbc>
   15698:	ldr	r2, [pc, #68]	; 156e4 <_obstack_memory_used@@Base+0x1fb8>
   1569c:	str	r2, [r3, #4]
   156a0:	ldr	r3, [fp, #-12]
   156a4:	ldr	r2, [pc, #60]	; 156e8 <_obstack_memory_used@@Base+0x1fbc>
   156a8:	cmp	r3, r2
   156ac:	beq	156c4 <_obstack_memory_used@@Base+0x1f98>
   156b0:	ldr	r0, [fp, #-12]
   156b4:	bl	12cc8 <close@plt+0x1c6c>
   156b8:	ldr	r3, [pc, #28]	; 156dc <_obstack_memory_used@@Base+0x1fb0>
   156bc:	ldr	r2, [pc, #36]	; 156e8 <_obstack_memory_used@@Base+0x1fbc>
   156c0:	str	r2, [r3]
   156c4:	ldr	r3, [pc, #20]	; 156e0 <_obstack_memory_used@@Base+0x1fb4>
   156c8:	mov	r2, #1
   156cc:	str	r2, [r3]
   156d0:	nop			; (mov r0, r0)
   156d4:	sub	sp, fp, #4
   156d8:	pop	{fp, pc}
   156dc:	andeq	fp, r2, r4, lsl #2
   156e0:	strdeq	fp, [r2], -r8
   156e4:	andeq	fp, r2, r4, asr #3
   156e8:	strdeq	fp, [r2], -ip
   156ec:	push	{r4, fp, lr}
   156f0:	add	fp, sp, #8
   156f4:	sub	sp, sp, #84	; 0x54
   156f8:	str	r0, [fp, #-56]	; 0xffffffc8
   156fc:	str	r1, [fp, #-60]	; 0xffffffc4
   15700:	str	r2, [fp, #-64]	; 0xffffffc0
   15704:	str	r3, [fp, #-68]	; 0xffffffbc
   15708:	bl	10fc0 <__errno_location@plt>
   1570c:	mov	r3, r0
   15710:	ldr	r3, [r3]
   15714:	str	r3, [fp, #-24]	; 0xffffffe8
   15718:	ldr	r3, [pc, #640]	; 159a0 <_obstack_memory_used@@Base+0x2274>
   1571c:	ldr	r3, [r3]
   15720:	str	r3, [fp, #-16]
   15724:	mvn	r3, #-2147483648	; 0x80000000
   15728:	str	r3, [fp, #-28]	; 0xffffffe4
   1572c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15730:	cmp	r3, #0
   15734:	blt	15748 <_obstack_memory_used@@Base+0x201c>
   15738:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1573c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15740:	cmp	r2, r3
   15744:	blt	1574c <_obstack_memory_used@@Base+0x2020>
   15748:	bl	11050 <abort@plt>
   1574c:	ldr	r3, [pc, #592]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   15750:	ldr	r2, [r3]
   15754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15758:	cmp	r2, r3
   1575c:	bgt	15830 <_obstack_memory_used@@Base+0x2104>
   15760:	ldr	r3, [fp, #-16]
   15764:	ldr	r2, [pc, #572]	; 159a8 <_obstack_memory_used@@Base+0x227c>
   15768:	cmp	r3, r2
   1576c:	moveq	r3, #1
   15770:	movne	r3, #0
   15774:	strb	r3, [fp, #-29]	; 0xffffffe3
   15778:	ldr	r3, [pc, #548]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   1577c:	ldr	r3, [r3]
   15780:	str	r3, [fp, #-48]	; 0xffffffd0
   15784:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   15788:	cmp	r3, #0
   1578c:	beq	15798 <_obstack_memory_used@@Base+0x206c>
   15790:	mov	r0, #0
   15794:	b	1579c <_obstack_memory_used@@Base+0x2070>
   15798:	ldr	r0, [fp, #-16]
   1579c:	ldr	r3, [pc, #512]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   157a0:	ldr	r3, [r3]
   157a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   157a8:	sub	r3, r2, r3
   157ac:	add	r2, r3, #1
   157b0:	sub	r1, fp, #48	; 0x30
   157b4:	mov	r3, #8
   157b8:	str	r3, [sp]
   157bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157c0:	bl	16ac0 <_obstack_memory_used@@Base+0x3394>
   157c4:	str	r0, [fp, #-16]
   157c8:	ldr	r2, [pc, #464]	; 159a0 <_obstack_memory_used@@Base+0x2274>
   157cc:	ldr	r3, [fp, #-16]
   157d0:	str	r3, [r2]
   157d4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   157d8:	cmp	r3, #0
   157dc:	beq	157f0 <_obstack_memory_used@@Base+0x20c4>
   157e0:	ldr	r3, [fp, #-16]
   157e4:	ldr	r2, [pc, #444]	; 159a8 <_obstack_memory_used@@Base+0x227c>
   157e8:	ldm	r2, {r0, r1}
   157ec:	stm	r3, {r0, r1}
   157f0:	ldr	r3, [pc, #428]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   157f4:	ldr	r3, [r3]
   157f8:	lsl	r3, r3, #3
   157fc:	ldr	r2, [fp, #-16]
   15800:	add	r0, r2, r3
   15804:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15808:	ldr	r3, [pc, #404]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   1580c:	ldr	r3, [r3]
   15810:	sub	r3, r2, r3
   15814:	lsl	r3, r3, #3
   15818:	mov	r2, r3
   1581c:	mov	r1, #0
   15820:	bl	10fd8 <memset@plt>
   15824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15828:	ldr	r2, [pc, #372]	; 159a4 <_obstack_memory_used@@Base+0x2278>
   1582c:	str	r3, [r2]
   15830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15834:	lsl	r3, r3, #3
   15838:	ldr	r2, [fp, #-16]
   1583c:	add	r3, r2, r3
   15840:	ldr	r3, [r3]
   15844:	str	r3, [fp, #-36]	; 0xffffffdc
   15848:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1584c:	lsl	r3, r3, #3
   15850:	ldr	r2, [fp, #-16]
   15854:	add	r3, r2, r3
   15858:	ldr	r3, [r3, #4]
   1585c:	str	r3, [fp, #-20]	; 0xffffffec
   15860:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15864:	ldr	r3, [r3, #4]
   15868:	orr	r3, r3, #1
   1586c:	str	r3, [fp, #-40]	; 0xffffffd8
   15870:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15874:	ldr	r3, [r3]
   15878:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1587c:	add	r2, r2, #8
   15880:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15884:	ldr	r1, [r1, #40]	; 0x28
   15888:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1588c:	ldr	r0, [r0, #44]	; 0x2c
   15890:	str	r0, [sp, #16]
   15894:	str	r1, [sp, #12]
   15898:	str	r2, [sp, #8]
   1589c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   158a0:	str	r2, [sp, #4]
   158a4:	str	r3, [sp]
   158a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   158ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   158b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   158b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   158b8:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   158bc:	str	r0, [fp, #-44]	; 0xffffffd4
   158c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   158c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158c8:	cmp	r2, r3
   158cc:	bhi	15980 <_obstack_memory_used@@Base+0x2254>
   158d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   158d4:	lsl	r3, r3, #3
   158d8:	ldr	r2, [fp, #-16]
   158dc:	add	r3, r2, r3
   158e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   158e4:	add	r2, r2, #1
   158e8:	str	r2, [fp, #-36]	; 0xffffffdc
   158ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   158f0:	str	r2, [r3]
   158f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f8:	ldr	r2, [pc, #172]	; 159ac <_obstack_memory_used@@Base+0x2280>
   158fc:	cmp	r3, r2
   15900:	beq	1590c <_obstack_memory_used@@Base+0x21e0>
   15904:	ldr	r0, [fp, #-20]	; 0xffffffec
   15908:	bl	12cc8 <close@plt+0x1c6c>
   1590c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15910:	lsl	r3, r3, #3
   15914:	ldr	r2, [fp, #-16]
   15918:	add	r4, r2, r3
   1591c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15920:	bl	167a0 <_obstack_memory_used@@Base+0x3074>
   15924:	mov	r3, r0
   15928:	str	r3, [fp, #-20]	; 0xffffffec
   1592c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15930:	str	r3, [r4, #4]
   15934:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15938:	ldr	r3, [r3]
   1593c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15940:	add	r2, r2, #8
   15944:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15948:	ldr	r1, [r1, #40]	; 0x28
   1594c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15950:	ldr	r0, [r0, #44]	; 0x2c
   15954:	str	r0, [sp, #16]
   15958:	str	r1, [sp, #12]
   1595c:	str	r2, [sp, #8]
   15960:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15964:	str	r2, [sp, #4]
   15968:	str	r3, [sp]
   1596c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15970:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15974:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15978:	ldr	r0, [fp, #-20]	; 0xffffffec
   1597c:	bl	13cfc <_obstack_memory_used@@Base+0x5d0>
   15980:	bl	10fc0 <__errno_location@plt>
   15984:	mov	r2, r0
   15988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1598c:	str	r3, [r2]
   15990:	ldr	r3, [fp, #-20]	; 0xffffffec
   15994:	mov	r0, r3
   15998:	sub	sp, fp, #8
   1599c:	pop	{r4, fp, pc}
   159a0:	andeq	fp, r2, r4, lsl #2
   159a4:	strdeq	fp, [r2], -r8
   159a8:	strdeq	fp, [r2], -ip
   159ac:	andeq	fp, r2, r4, asr #3
   159b0:	push	{fp, lr}
   159b4:	add	fp, sp, #4
   159b8:	sub	sp, sp, #8
   159bc:	str	r0, [fp, #-8]
   159c0:	str	r1, [fp, #-12]
   159c4:	ldr	r3, [pc, #28]	; 159e8 <_obstack_memory_used@@Base+0x22bc>
   159c8:	mvn	r2, #0
   159cc:	ldr	r1, [fp, #-12]
   159d0:	ldr	r0, [fp, #-8]
   159d4:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   159d8:	mov	r3, r0
   159dc:	mov	r0, r3
   159e0:	sub	sp, fp, #4
   159e4:	pop	{fp, pc}
   159e8:	muleq	r2, r4, r1
   159ec:	push	{fp, lr}
   159f0:	add	fp, sp, #4
   159f4:	sub	sp, sp, #16
   159f8:	str	r0, [fp, #-8]
   159fc:	str	r1, [fp, #-12]
   15a00:	str	r2, [fp, #-16]
   15a04:	ldr	r3, [pc, #28]	; 15a28 <_obstack_memory_used@@Base+0x22fc>
   15a08:	ldr	r2, [fp, #-16]
   15a0c:	ldr	r1, [fp, #-12]
   15a10:	ldr	r0, [fp, #-8]
   15a14:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15a18:	mov	r3, r0
   15a1c:	mov	r0, r3
   15a20:	sub	sp, fp, #4
   15a24:	pop	{fp, pc}
   15a28:	muleq	r2, r4, r1
   15a2c:	push	{fp, lr}
   15a30:	add	fp, sp, #4
   15a34:	sub	sp, sp, #8
   15a38:	str	r0, [fp, #-8]
   15a3c:	ldr	r1, [fp, #-8]
   15a40:	mov	r0, #0
   15a44:	bl	159b0 <_obstack_memory_used@@Base+0x2284>
   15a48:	mov	r3, r0
   15a4c:	mov	r0, r3
   15a50:	sub	sp, fp, #4
   15a54:	pop	{fp, pc}
   15a58:	push	{fp, lr}
   15a5c:	add	fp, sp, #4
   15a60:	sub	sp, sp, #8
   15a64:	str	r0, [fp, #-8]
   15a68:	str	r1, [fp, #-12]
   15a6c:	ldr	r2, [fp, #-12]
   15a70:	ldr	r1, [fp, #-8]
   15a74:	mov	r0, #0
   15a78:	bl	159ec <_obstack_memory_used@@Base+0x22c0>
   15a7c:	mov	r3, r0
   15a80:	mov	r0, r3
   15a84:	sub	sp, fp, #4
   15a88:	pop	{fp, pc}
   15a8c:	push	{fp, lr}
   15a90:	add	fp, sp, #4
   15a94:	sub	sp, sp, #64	; 0x40
   15a98:	str	r0, [fp, #-56]	; 0xffffffc8
   15a9c:	str	r1, [fp, #-60]	; 0xffffffc4
   15aa0:	str	r2, [fp, #-64]	; 0xffffffc0
   15aa4:	sub	r3, fp, #52	; 0x34
   15aa8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15aac:	mov	r0, r3
   15ab0:	bl	13b98 <_obstack_memory_used@@Base+0x46c>
   15ab4:	sub	r3, fp, #52	; 0x34
   15ab8:	mvn	r2, #0
   15abc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15ac0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ac4:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15ac8:	mov	r3, r0
   15acc:	mov	r0, r3
   15ad0:	sub	sp, fp, #4
   15ad4:	pop	{fp, pc}
   15ad8:	push	{fp, lr}
   15adc:	add	fp, sp, #4
   15ae0:	sub	sp, sp, #64	; 0x40
   15ae4:	str	r0, [fp, #-56]	; 0xffffffc8
   15ae8:	str	r1, [fp, #-60]	; 0xffffffc4
   15aec:	str	r2, [fp, #-64]	; 0xffffffc0
   15af0:	str	r3, [fp, #-68]	; 0xffffffbc
   15af4:	sub	r3, fp, #52	; 0x34
   15af8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15afc:	mov	r0, r3
   15b00:	bl	13b98 <_obstack_memory_used@@Base+0x46c>
   15b04:	sub	r3, fp, #52	; 0x34
   15b08:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15b0c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b14:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15b18:	mov	r3, r0
   15b1c:	mov	r0, r3
   15b20:	sub	sp, fp, #4
   15b24:	pop	{fp, pc}
   15b28:	push	{fp, lr}
   15b2c:	add	fp, sp, #4
   15b30:	sub	sp, sp, #8
   15b34:	str	r0, [fp, #-8]
   15b38:	str	r1, [fp, #-12]
   15b3c:	ldr	r2, [fp, #-12]
   15b40:	ldr	r1, [fp, #-8]
   15b44:	mov	r0, #0
   15b48:	bl	15a8c <_obstack_memory_used@@Base+0x2360>
   15b4c:	mov	r3, r0
   15b50:	mov	r0, r3
   15b54:	sub	sp, fp, #4
   15b58:	pop	{fp, pc}
   15b5c:	push	{fp, lr}
   15b60:	add	fp, sp, #4
   15b64:	sub	sp, sp, #16
   15b68:	str	r0, [fp, #-8]
   15b6c:	str	r1, [fp, #-12]
   15b70:	str	r2, [fp, #-16]
   15b74:	ldr	r3, [fp, #-16]
   15b78:	ldr	r2, [fp, #-12]
   15b7c:	ldr	r1, [fp, #-8]
   15b80:	mov	r0, #0
   15b84:	bl	15ad8 <_obstack_memory_used@@Base+0x23ac>
   15b88:	mov	r3, r0
   15b8c:	mov	r0, r3
   15b90:	sub	sp, fp, #4
   15b94:	pop	{fp, pc}
   15b98:	push	{fp, lr}
   15b9c:	add	fp, sp, #4
   15ba0:	sub	sp, sp, #64	; 0x40
   15ba4:	str	r0, [fp, #-56]	; 0xffffffc8
   15ba8:	str	r1, [fp, #-60]	; 0xffffffc4
   15bac:	mov	r3, r2
   15bb0:	strb	r3, [fp, #-61]	; 0xffffffc3
   15bb4:	ldr	r3, [pc, #84]	; 15c10 <_obstack_memory_used@@Base+0x24e4>
   15bb8:	sub	ip, fp, #52	; 0x34
   15bbc:	mov	lr, r3
   15bc0:	ldm	lr!, {r0, r1, r2, r3}
   15bc4:	stmia	ip!, {r0, r1, r2, r3}
   15bc8:	ldm	lr!, {r0, r1, r2, r3}
   15bcc:	stmia	ip!, {r0, r1, r2, r3}
   15bd0:	ldm	lr, {r0, r1, r2, r3}
   15bd4:	stm	ip, {r0, r1, r2, r3}
   15bd8:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   15bdc:	sub	r3, fp, #52	; 0x34
   15be0:	mov	r2, #1
   15be4:	mov	r0, r3
   15be8:	bl	13a04 <_obstack_memory_used@@Base+0x2d8>
   15bec:	sub	r3, fp, #52	; 0x34
   15bf0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15bf4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15bf8:	mov	r0, #0
   15bfc:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15c00:	mov	r3, r0
   15c04:	mov	r0, r3
   15c08:	sub	sp, fp, #4
   15c0c:	pop	{fp, pc}
   15c10:	muleq	r2, r4, r1
   15c14:	push	{fp, lr}
   15c18:	add	fp, sp, #4
   15c1c:	sub	sp, sp, #8
   15c20:	str	r0, [fp, #-8]
   15c24:	mov	r3, r1
   15c28:	strb	r3, [fp, #-9]
   15c2c:	ldrb	r3, [fp, #-9]
   15c30:	mov	r2, r3
   15c34:	mvn	r1, #0
   15c38:	ldr	r0, [fp, #-8]
   15c3c:	bl	15b98 <_obstack_memory_used@@Base+0x246c>
   15c40:	mov	r3, r0
   15c44:	mov	r0, r3
   15c48:	sub	sp, fp, #4
   15c4c:	pop	{fp, pc}
   15c50:	push	{fp, lr}
   15c54:	add	fp, sp, #4
   15c58:	sub	sp, sp, #8
   15c5c:	str	r0, [fp, #-8]
   15c60:	mov	r1, #58	; 0x3a
   15c64:	ldr	r0, [fp, #-8]
   15c68:	bl	15c14 <_obstack_memory_used@@Base+0x24e8>
   15c6c:	mov	r3, r0
   15c70:	mov	r0, r3
   15c74:	sub	sp, fp, #4
   15c78:	pop	{fp, pc}
   15c7c:	push	{fp, lr}
   15c80:	add	fp, sp, #4
   15c84:	sub	sp, sp, #8
   15c88:	str	r0, [fp, #-8]
   15c8c:	str	r1, [fp, #-12]
   15c90:	mov	r2, #58	; 0x3a
   15c94:	ldr	r1, [fp, #-12]
   15c98:	ldr	r0, [fp, #-8]
   15c9c:	bl	15b98 <_obstack_memory_used@@Base+0x246c>
   15ca0:	mov	r3, r0
   15ca4:	mov	r0, r3
   15ca8:	sub	sp, fp, #4
   15cac:	pop	{fp, pc}
   15cb0:	push	{fp, lr}
   15cb4:	add	fp, sp, #4
   15cb8:	sub	sp, sp, #112	; 0x70
   15cbc:	str	r0, [fp, #-56]	; 0xffffffc8
   15cc0:	str	r1, [fp, #-60]	; 0xffffffc4
   15cc4:	str	r2, [fp, #-64]	; 0xffffffc0
   15cc8:	sub	r3, fp, #116	; 0x74
   15ccc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15cd0:	mov	r0, r3
   15cd4:	bl	13b98 <_obstack_memory_used@@Base+0x46c>
   15cd8:	sub	ip, fp, #52	; 0x34
   15cdc:	sub	lr, fp, #116	; 0x74
   15ce0:	ldm	lr!, {r0, r1, r2, r3}
   15ce4:	stmia	ip!, {r0, r1, r2, r3}
   15ce8:	ldm	lr!, {r0, r1, r2, r3}
   15cec:	stmia	ip!, {r0, r1, r2, r3}
   15cf0:	ldm	lr, {r0, r1, r2, r3}
   15cf4:	stm	ip, {r0, r1, r2, r3}
   15cf8:	sub	r3, fp, #52	; 0x34
   15cfc:	mov	r2, #1
   15d00:	mov	r1, #58	; 0x3a
   15d04:	mov	r0, r3
   15d08:	bl	13a04 <_obstack_memory_used@@Base+0x2d8>
   15d0c:	sub	r3, fp, #52	; 0x34
   15d10:	mvn	r2, #0
   15d14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15d18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d1c:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15d20:	mov	r3, r0
   15d24:	mov	r0, r3
   15d28:	sub	sp, fp, #4
   15d2c:	pop	{fp, pc}
   15d30:	push	{fp, lr}
   15d34:	add	fp, sp, #4
   15d38:	sub	sp, sp, #24
   15d3c:	str	r0, [fp, #-8]
   15d40:	str	r1, [fp, #-12]
   15d44:	str	r2, [fp, #-16]
   15d48:	str	r3, [fp, #-20]	; 0xffffffec
   15d4c:	mvn	r3, #0
   15d50:	str	r3, [sp]
   15d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d58:	ldr	r2, [fp, #-16]
   15d5c:	ldr	r1, [fp, #-12]
   15d60:	ldr	r0, [fp, #-8]
   15d64:	bl	15d78 <_obstack_memory_used@@Base+0x264c>
   15d68:	mov	r3, r0
   15d6c:	mov	r0, r3
   15d70:	sub	sp, fp, #4
   15d74:	pop	{fp, pc}
   15d78:	push	{fp, lr}
   15d7c:	add	fp, sp, #4
   15d80:	sub	sp, sp, #64	; 0x40
   15d84:	str	r0, [fp, #-56]	; 0xffffffc8
   15d88:	str	r1, [fp, #-60]	; 0xffffffc4
   15d8c:	str	r2, [fp, #-64]	; 0xffffffc0
   15d90:	str	r3, [fp, #-68]	; 0xffffffbc
   15d94:	ldr	r3, [pc, #84]	; 15df0 <_obstack_memory_used@@Base+0x26c4>
   15d98:	sub	ip, fp, #52	; 0x34
   15d9c:	mov	lr, r3
   15da0:	ldm	lr!, {r0, r1, r2, r3}
   15da4:	stmia	ip!, {r0, r1, r2, r3}
   15da8:	ldm	lr!, {r0, r1, r2, r3}
   15dac:	stmia	ip!, {r0, r1, r2, r3}
   15db0:	ldm	lr, {r0, r1, r2, r3}
   15db4:	stm	ip, {r0, r1, r2, r3}
   15db8:	sub	r3, fp, #52	; 0x34
   15dbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15dc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15dc4:	mov	r0, r3
   15dc8:	bl	13b1c <_obstack_memory_used@@Base+0x3f0>
   15dcc:	sub	r3, fp, #52	; 0x34
   15dd0:	ldr	r2, [fp, #4]
   15dd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15dd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ddc:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15de0:	mov	r3, r0
   15de4:	mov	r0, r3
   15de8:	sub	sp, fp, #4
   15dec:	pop	{fp, pc}
   15df0:	muleq	r2, r4, r1
   15df4:	push	{fp, lr}
   15df8:	add	fp, sp, #4
   15dfc:	sub	sp, sp, #16
   15e00:	str	r0, [fp, #-8]
   15e04:	str	r1, [fp, #-12]
   15e08:	str	r2, [fp, #-16]
   15e0c:	ldr	r3, [fp, #-16]
   15e10:	ldr	r2, [fp, #-12]
   15e14:	ldr	r1, [fp, #-8]
   15e18:	mov	r0, #0
   15e1c:	bl	15d30 <_obstack_memory_used@@Base+0x2604>
   15e20:	mov	r3, r0
   15e24:	mov	r0, r3
   15e28:	sub	sp, fp, #4
   15e2c:	pop	{fp, pc}
   15e30:	push	{fp, lr}
   15e34:	add	fp, sp, #4
   15e38:	sub	sp, sp, #24
   15e3c:	str	r0, [fp, #-8]
   15e40:	str	r1, [fp, #-12]
   15e44:	str	r2, [fp, #-16]
   15e48:	str	r3, [fp, #-20]	; 0xffffffec
   15e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e50:	str	r3, [sp]
   15e54:	ldr	r3, [fp, #-16]
   15e58:	ldr	r2, [fp, #-12]
   15e5c:	ldr	r1, [fp, #-8]
   15e60:	mov	r0, #0
   15e64:	bl	15d78 <_obstack_memory_used@@Base+0x264c>
   15e68:	mov	r3, r0
   15e6c:	mov	r0, r3
   15e70:	sub	sp, fp, #4
   15e74:	pop	{fp, pc}
   15e78:	push	{fp, lr}
   15e7c:	add	fp, sp, #4
   15e80:	sub	sp, sp, #16
   15e84:	str	r0, [fp, #-8]
   15e88:	str	r1, [fp, #-12]
   15e8c:	str	r2, [fp, #-16]
   15e90:	ldr	r3, [pc, #28]	; 15eb4 <_obstack_memory_used@@Base+0x2788>
   15e94:	ldr	r2, [fp, #-16]
   15e98:	ldr	r1, [fp, #-12]
   15e9c:	ldr	r0, [fp, #-8]
   15ea0:	bl	156ec <_obstack_memory_used@@Base+0x1fc0>
   15ea4:	mov	r3, r0
   15ea8:	mov	r0, r3
   15eac:	sub	sp, fp, #4
   15eb0:	pop	{fp, pc}
   15eb4:	andeq	fp, r2, r8, lsl #2
   15eb8:	push	{fp, lr}
   15ebc:	add	fp, sp, #4
   15ec0:	sub	sp, sp, #8
   15ec4:	str	r0, [fp, #-8]
   15ec8:	str	r1, [fp, #-12]
   15ecc:	ldr	r2, [fp, #-12]
   15ed0:	ldr	r1, [fp, #-8]
   15ed4:	mov	r0, #0
   15ed8:	bl	15e78 <_obstack_memory_used@@Base+0x274c>
   15edc:	mov	r3, r0
   15ee0:	mov	r0, r3
   15ee4:	sub	sp, fp, #4
   15ee8:	pop	{fp, pc}
   15eec:	push	{fp, lr}
   15ef0:	add	fp, sp, #4
   15ef4:	sub	sp, sp, #8
   15ef8:	str	r0, [fp, #-8]
   15efc:	str	r1, [fp, #-12]
   15f00:	mvn	r2, #0
   15f04:	ldr	r1, [fp, #-12]
   15f08:	ldr	r0, [fp, #-8]
   15f0c:	bl	15e78 <_obstack_memory_used@@Base+0x274c>
   15f10:	mov	r3, r0
   15f14:	mov	r0, r3
   15f18:	sub	sp, fp, #4
   15f1c:	pop	{fp, pc}
   15f20:	push	{fp, lr}
   15f24:	add	fp, sp, #4
   15f28:	sub	sp, sp, #8
   15f2c:	str	r0, [fp, #-8]
   15f30:	ldr	r1, [fp, #-8]
   15f34:	mov	r0, #0
   15f38:	bl	15eec <_obstack_memory_used@@Base+0x27c0>
   15f3c:	mov	r3, r0
   15f40:	mov	r0, r3
   15f44:	sub	sp, fp, #4
   15f48:	pop	{fp, pc}
   15f4c:	push	{r4, r5, r6, r7, fp, lr}
   15f50:	add	fp, sp, #20
   15f54:	sub	sp, sp, #48	; 0x30
   15f58:	str	r0, [fp, #-24]	; 0xffffffe8
   15f5c:	str	r1, [fp, #-28]	; 0xffffffe4
   15f60:	str	r2, [fp, #-32]	; 0xffffffe0
   15f64:	str	r3, [fp, #-36]	; 0xffffffdc
   15f68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f6c:	cmp	r3, #0
   15f70:	beq	15f94 <_obstack_memory_used@@Base+0x2868>
   15f74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f78:	str	r3, [sp]
   15f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15f84:	ldr	r1, [pc, #1260]	; 16478 <_obstack_memory_used@@Base+0x2d4c>
   15f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f8c:	bl	10fb4 <fprintf@plt>
   15f90:	b	15fa8 <_obstack_memory_used@@Base+0x287c>
   15f94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f9c:	ldr	r1, [pc, #1240]	; 1647c <_obstack_memory_used@@Base+0x2d50>
   15fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa4:	bl	10fb4 <fprintf@plt>
   15fa8:	ldr	r0, [pc, #1232]	; 16480 <_obstack_memory_used@@Base+0x2d54>
   15fac:	bl	10f9c <gettext@plt>
   15fb0:	mov	r2, r0
   15fb4:	ldr	r3, [pc, #1224]	; 16484 <_obstack_memory_used@@Base+0x2d58>
   15fb8:	ldr	r1, [pc, #1224]	; 16488 <_obstack_memory_used@@Base+0x2d5c>
   15fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fc0:	bl	10fb4 <fprintf@plt>
   15fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fc8:	mov	r0, #10
   15fcc:	bl	10e7c <fputc_unlocked@plt>
   15fd0:	ldr	r0, [pc, #1204]	; 1648c <_obstack_memory_used@@Base+0x2d60>
   15fd4:	bl	10f9c <gettext@plt>
   15fd8:	mov	r3, r0
   15fdc:	ldr	r2, [pc, #1196]	; 16490 <_obstack_memory_used@@Base+0x2d64>
   15fe0:	mov	r1, r3
   15fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fe8:	bl	10fb4 <fprintf@plt>
   15fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ff0:	mov	r0, #10
   15ff4:	bl	10e7c <fputc_unlocked@plt>
   15ff8:	ldr	r3, [fp, #8]
   15ffc:	cmp	r3, #9
   16000:	ldrls	pc, [pc, r3, lsl #2]
   16004:	b	163c0 <_obstack_memory_used@@Base+0x2c94>
   16008:	andeq	r6, r1, r8, ror #8
   1600c:	andeq	r6, r1, r0, lsr r0
   16010:	andeq	r6, r1, r4, asr r0
   16014:	andeq	r6, r1, r0, lsl #1
   16018:	andeq	r6, r1, r0, asr #1
   1601c:	andeq	r6, r1, r8, lsl r1
   16020:	andeq	r6, r1, r0, lsl #3
   16024:	strdeq	r6, [r1], -r8
   16028:	andeq	r6, r1, r0, lsl #5
   1602c:	andeq	r6, r1, r8, lsl r3
   16030:	ldr	r0, [pc, #1116]	; 16494 <_obstack_memory_used@@Base+0x2d68>
   16034:	bl	10f9c <gettext@plt>
   16038:	mov	r1, r0
   1603c:	ldr	r3, [fp, #4]
   16040:	ldr	r3, [r3]
   16044:	mov	r2, r3
   16048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1604c:	bl	10fb4 <fprintf@plt>
   16050:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16054:	ldr	r0, [pc, #1084]	; 16498 <_obstack_memory_used@@Base+0x2d6c>
   16058:	bl	10f9c <gettext@plt>
   1605c:	mov	r1, r0
   16060:	ldr	r3, [fp, #4]
   16064:	ldr	r2, [r3]
   16068:	ldr	r3, [fp, #4]
   1606c:	add	r3, r3, #4
   16070:	ldr	r3, [r3]
   16074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16078:	bl	10fb4 <fprintf@plt>
   1607c:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16080:	ldr	r0, [pc, #1044]	; 1649c <_obstack_memory_used@@Base+0x2d70>
   16084:	bl	10f9c <gettext@plt>
   16088:	ldr	r3, [fp, #4]
   1608c:	ldr	r2, [r3]
   16090:	ldr	r3, [fp, #4]
   16094:	add	r3, r3, #4
   16098:	ldr	r1, [r3]
   1609c:	ldr	r3, [fp, #4]
   160a0:	add	r3, r3, #8
   160a4:	ldr	r3, [r3]
   160a8:	str	r3, [sp]
   160ac:	mov	r3, r1
   160b0:	mov	r1, r0
   160b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160b8:	bl	10fb4 <fprintf@plt>
   160bc:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   160c0:	ldr	r0, [pc, #984]	; 164a0 <_obstack_memory_used@@Base+0x2d74>
   160c4:	bl	10f9c <gettext@plt>
   160c8:	mov	ip, r0
   160cc:	ldr	r3, [fp, #4]
   160d0:	ldr	r1, [r3]
   160d4:	ldr	r3, [fp, #4]
   160d8:	add	r3, r3, #4
   160dc:	ldr	r0, [r3]
   160e0:	ldr	r3, [fp, #4]
   160e4:	add	r3, r3, #8
   160e8:	ldr	r3, [r3]
   160ec:	ldr	r2, [fp, #4]
   160f0:	add	r2, r2, #12
   160f4:	ldr	r2, [r2]
   160f8:	str	r2, [sp, #4]
   160fc:	str	r3, [sp]
   16100:	mov	r3, r0
   16104:	mov	r2, r1
   16108:	mov	r1, ip
   1610c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16110:	bl	10fb4 <fprintf@plt>
   16114:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16118:	ldr	r0, [pc, #900]	; 164a4 <_obstack_memory_used@@Base+0x2d78>
   1611c:	bl	10f9c <gettext@plt>
   16120:	mov	lr, r0
   16124:	ldr	r3, [fp, #4]
   16128:	ldr	r0, [r3]
   1612c:	ldr	r3, [fp, #4]
   16130:	add	r3, r3, #4
   16134:	ldr	ip, [r3]
   16138:	ldr	r3, [fp, #4]
   1613c:	add	r3, r3, #8
   16140:	ldr	r3, [r3]
   16144:	ldr	r2, [fp, #4]
   16148:	add	r2, r2, #12
   1614c:	ldr	r2, [r2]
   16150:	ldr	r1, [fp, #4]
   16154:	add	r1, r1, #16
   16158:	ldr	r1, [r1]
   1615c:	str	r1, [sp, #8]
   16160:	str	r2, [sp, #4]
   16164:	str	r3, [sp]
   16168:	mov	r3, ip
   1616c:	mov	r2, r0
   16170:	mov	r1, lr
   16174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16178:	bl	10fb4 <fprintf@plt>
   1617c:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16180:	ldr	r0, [pc, #800]	; 164a8 <_obstack_memory_used@@Base+0x2d7c>
   16184:	bl	10f9c <gettext@plt>
   16188:	mov	r4, r0
   1618c:	ldr	r3, [fp, #4]
   16190:	ldr	ip, [r3]
   16194:	ldr	r3, [fp, #4]
   16198:	add	r3, r3, #4
   1619c:	ldr	lr, [r3]
   161a0:	ldr	r3, [fp, #4]
   161a4:	add	r3, r3, #8
   161a8:	ldr	r3, [r3]
   161ac:	ldr	r2, [fp, #4]
   161b0:	add	r2, r2, #12
   161b4:	ldr	r2, [r2]
   161b8:	ldr	r1, [fp, #4]
   161bc:	add	r1, r1, #16
   161c0:	ldr	r1, [r1]
   161c4:	ldr	r0, [fp, #4]
   161c8:	add	r0, r0, #20
   161cc:	ldr	r0, [r0]
   161d0:	str	r0, [sp, #12]
   161d4:	str	r1, [sp, #8]
   161d8:	str	r2, [sp, #4]
   161dc:	str	r3, [sp]
   161e0:	mov	r3, lr
   161e4:	mov	r2, ip
   161e8:	mov	r1, r4
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	bl	10fb4 <fprintf@plt>
   161f4:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   161f8:	ldr	r0, [pc, #684]	; 164ac <_obstack_memory_used@@Base+0x2d80>
   161fc:	bl	10f9c <gettext@plt>
   16200:	mov	r5, r0
   16204:	ldr	r3, [fp, #4]
   16208:	ldr	lr, [r3]
   1620c:	ldr	r3, [fp, #4]
   16210:	add	r3, r3, #4
   16214:	ldr	r4, [r3]
   16218:	ldr	r3, [fp, #4]
   1621c:	add	r3, r3, #8
   16220:	ldr	r3, [r3]
   16224:	ldr	r2, [fp, #4]
   16228:	add	r2, r2, #12
   1622c:	ldr	r2, [r2]
   16230:	ldr	r1, [fp, #4]
   16234:	add	r1, r1, #16
   16238:	ldr	r1, [r1]
   1623c:	ldr	r0, [fp, #4]
   16240:	add	r0, r0, #20
   16244:	ldr	r0, [r0]
   16248:	ldr	ip, [fp, #4]
   1624c:	add	ip, ip, #24
   16250:	ldr	ip, [ip]
   16254:	str	ip, [sp, #16]
   16258:	str	r0, [sp, #12]
   1625c:	str	r1, [sp, #8]
   16260:	str	r2, [sp, #4]
   16264:	str	r3, [sp]
   16268:	mov	r3, r4
   1626c:	mov	r2, lr
   16270:	mov	r1, r5
   16274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16278:	bl	10fb4 <fprintf@plt>
   1627c:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16280:	ldr	r0, [pc, #552]	; 164b0 <_obstack_memory_used@@Base+0x2d84>
   16284:	bl	10f9c <gettext@plt>
   16288:	mov	r6, r0
   1628c:	ldr	r3, [fp, #4]
   16290:	ldr	r4, [r3]
   16294:	ldr	r3, [fp, #4]
   16298:	add	r3, r3, #4
   1629c:	ldr	r5, [r3]
   162a0:	ldr	r3, [fp, #4]
   162a4:	add	r3, r3, #8
   162a8:	ldr	r3, [r3]
   162ac:	ldr	r2, [fp, #4]
   162b0:	add	r2, r2, #12
   162b4:	ldr	r2, [r2]
   162b8:	ldr	r1, [fp, #4]
   162bc:	add	r1, r1, #16
   162c0:	ldr	r1, [r1]
   162c4:	ldr	r0, [fp, #4]
   162c8:	add	r0, r0, #20
   162cc:	ldr	r0, [r0]
   162d0:	ldr	ip, [fp, #4]
   162d4:	add	ip, ip, #24
   162d8:	ldr	ip, [ip]
   162dc:	ldr	lr, [fp, #4]
   162e0:	add	lr, lr, #28
   162e4:	ldr	lr, [lr]
   162e8:	str	lr, [sp, #20]
   162ec:	str	ip, [sp, #16]
   162f0:	str	r0, [sp, #12]
   162f4:	str	r1, [sp, #8]
   162f8:	str	r2, [sp, #4]
   162fc:	str	r3, [sp]
   16300:	mov	r3, r5
   16304:	mov	r2, r4
   16308:	mov	r1, r6
   1630c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16310:	bl	10fb4 <fprintf@plt>
   16314:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16318:	ldr	r0, [pc, #404]	; 164b4 <_obstack_memory_used@@Base+0x2d88>
   1631c:	bl	10f9c <gettext@plt>
   16320:	mov	r7, r0
   16324:	ldr	r3, [fp, #4]
   16328:	ldr	r5, [r3]
   1632c:	ldr	r3, [fp, #4]
   16330:	add	r3, r3, #4
   16334:	ldr	r6, [r3]
   16338:	ldr	r3, [fp, #4]
   1633c:	add	r3, r3, #8
   16340:	ldr	r3, [r3]
   16344:	ldr	r2, [fp, #4]
   16348:	add	r2, r2, #12
   1634c:	ldr	r2, [r2]
   16350:	ldr	r1, [fp, #4]
   16354:	add	r1, r1, #16
   16358:	ldr	r1, [r1]
   1635c:	ldr	r0, [fp, #4]
   16360:	add	r0, r0, #20
   16364:	ldr	r0, [r0]
   16368:	ldr	ip, [fp, #4]
   1636c:	add	ip, ip, #24
   16370:	ldr	ip, [ip]
   16374:	ldr	lr, [fp, #4]
   16378:	add	lr, lr, #28
   1637c:	ldr	lr, [lr]
   16380:	ldr	r4, [fp, #4]
   16384:	add	r4, r4, #32
   16388:	ldr	r4, [r4]
   1638c:	str	r4, [sp, #24]
   16390:	str	lr, [sp, #20]
   16394:	str	ip, [sp, #16]
   16398:	str	r0, [sp, #12]
   1639c:	str	r1, [sp, #8]
   163a0:	str	r2, [sp, #4]
   163a4:	str	r3, [sp]
   163a8:	mov	r3, r6
   163ac:	mov	r2, r5
   163b0:	mov	r1, r7
   163b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b8:	bl	10fb4 <fprintf@plt>
   163bc:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   163c0:	ldr	r0, [pc, #240]	; 164b8 <_obstack_memory_used@@Base+0x2d8c>
   163c4:	bl	10f9c <gettext@plt>
   163c8:	mov	r7, r0
   163cc:	ldr	r3, [fp, #4]
   163d0:	ldr	r5, [r3]
   163d4:	ldr	r3, [fp, #4]
   163d8:	add	r3, r3, #4
   163dc:	ldr	r6, [r3]
   163e0:	ldr	r3, [fp, #4]
   163e4:	add	r3, r3, #8
   163e8:	ldr	r3, [r3]
   163ec:	ldr	r2, [fp, #4]
   163f0:	add	r2, r2, #12
   163f4:	ldr	r2, [r2]
   163f8:	ldr	r1, [fp, #4]
   163fc:	add	r1, r1, #16
   16400:	ldr	r1, [r1]
   16404:	ldr	r0, [fp, #4]
   16408:	add	r0, r0, #20
   1640c:	ldr	r0, [r0]
   16410:	ldr	ip, [fp, #4]
   16414:	add	ip, ip, #24
   16418:	ldr	ip, [ip]
   1641c:	ldr	lr, [fp, #4]
   16420:	add	lr, lr, #28
   16424:	ldr	lr, [lr]
   16428:	ldr	r4, [fp, #4]
   1642c:	add	r4, r4, #32
   16430:	ldr	r4, [r4]
   16434:	str	r4, [sp, #24]
   16438:	str	lr, [sp, #20]
   1643c:	str	ip, [sp, #16]
   16440:	str	r0, [sp, #12]
   16444:	str	r1, [sp, #8]
   16448:	str	r2, [sp, #4]
   1644c:	str	r3, [sp]
   16450:	mov	r3, r6
   16454:	mov	r2, r5
   16458:	mov	r1, r7
   1645c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16460:	bl	10fb4 <fprintf@plt>
   16464:	b	1646c <_obstack_memory_used@@Base+0x2d40>
   16468:	nop			; (mov r0, r0)
   1646c:	nop			; (mov r0, r0)
   16470:	sub	sp, fp, #20
   16474:	pop	{r4, r5, r6, r7, fp, pc}
   16478:	strheq	sl, [r1], -r0
   1647c:	strheq	sl, [r1], -ip
   16480:	andeq	sl, r1, r4, asr #1
   16484:	andeq	r0, r0, r6, ror #15
   16488:	ldrdeq	sl, [r1], -r4
   1648c:	andeq	sl, r1, r8, asr #1
   16490:	andeq	sl, r1, r4, ror r1
   16494:	muleq	r1, r8, r1
   16498:	andeq	sl, r1, r8, lsr #3
   1649c:	andeq	sl, r1, r0, asr #3
   164a0:	ldrdeq	sl, [r1], -ip
   164a4:	strdeq	sl, [r1], -ip
   164a8:	andeq	sl, r1, r0, lsr #4
   164ac:	andeq	sl, r1, r8, asr #4
   164b0:	andeq	sl, r1, r4, ror r2
   164b4:	andeq	sl, r1, r4, lsr #5
   164b8:	ldrdeq	sl, [r1], -r8
   164bc:	push	{fp, lr}
   164c0:	add	fp, sp, #4
   164c4:	sub	sp, sp, #32
   164c8:	str	r0, [fp, #-16]
   164cc:	str	r1, [fp, #-20]	; 0xffffffec
   164d0:	str	r2, [fp, #-24]	; 0xffffffe8
   164d4:	str	r3, [fp, #-28]	; 0xffffffe4
   164d8:	mov	r3, #0
   164dc:	str	r3, [fp, #-8]
   164e0:	b	164f0 <_obstack_memory_used@@Base+0x2dc4>
   164e4:	ldr	r3, [fp, #-8]
   164e8:	add	r3, r3, #1
   164ec:	str	r3, [fp, #-8]
   164f0:	ldr	r3, [fp, #-8]
   164f4:	lsl	r3, r3, #2
   164f8:	ldr	r2, [fp, #4]
   164fc:	add	r3, r2, r3
   16500:	ldr	r3, [r3]
   16504:	cmp	r3, #0
   16508:	bne	164e4 <_obstack_memory_used@@Base+0x2db8>
   1650c:	ldr	r3, [fp, #-8]
   16510:	str	r3, [sp, #4]
   16514:	ldr	r3, [fp, #4]
   16518:	str	r3, [sp]
   1651c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16524:	ldr	r1, [fp, #-20]	; 0xffffffec
   16528:	ldr	r0, [fp, #-16]
   1652c:	bl	15f4c <_obstack_memory_used@@Base+0x2820>
   16530:	nop			; (mov r0, r0)
   16534:	sub	sp, fp, #4
   16538:	pop	{fp, pc}
   1653c:	push	{fp, lr}
   16540:	add	fp, sp, #4
   16544:	sub	sp, sp, #72	; 0x48
   16548:	str	r0, [fp, #-56]	; 0xffffffc8
   1654c:	str	r1, [fp, #-60]	; 0xffffffc4
   16550:	str	r2, [fp, #-64]	; 0xffffffc0
   16554:	str	r3, [fp, #-68]	; 0xffffffbc
   16558:	mov	r3, #0
   1655c:	str	r3, [fp, #-8]
   16560:	b	16570 <_obstack_memory_used@@Base+0x2e44>
   16564:	ldr	r3, [fp, #-8]
   16568:	add	r3, r3, #1
   1656c:	str	r3, [fp, #-8]
   16570:	ldr	r3, [fp, #-8]
   16574:	cmp	r3, #9
   16578:	bhi	165bc <_obstack_memory_used@@Base+0x2e90>
   1657c:	ldr	r3, [fp, #4]
   16580:	add	r2, r3, #4
   16584:	str	r2, [fp, #4]
   16588:	ldr	r2, [r3]
   1658c:	ldr	r3, [fp, #-8]
   16590:	lsl	r3, r3, #2
   16594:	sub	r1, fp, #4
   16598:	add	r3, r1, r3
   1659c:	str	r2, [r3, #-44]	; 0xffffffd4
   165a0:	ldr	r3, [fp, #-8]
   165a4:	lsl	r3, r3, #2
   165a8:	sub	r2, fp, #4
   165ac:	add	r3, r2, r3
   165b0:	ldr	r3, [r3, #-44]	; 0xffffffd4
   165b4:	cmp	r3, #0
   165b8:	bne	16564 <_obstack_memory_used@@Base+0x2e38>
   165bc:	ldr	r3, [fp, #-8]
   165c0:	str	r3, [sp, #4]
   165c4:	sub	r3, fp, #48	; 0x30
   165c8:	str	r3, [sp]
   165cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   165d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   165d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   165d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165dc:	bl	15f4c <_obstack_memory_used@@Base+0x2820>
   165e0:	nop			; (mov r0, r0)
   165e4:	sub	sp, fp, #4
   165e8:	pop	{fp, pc}
   165ec:	push	{r3}		; (str r3, [sp, #-4]!)
   165f0:	push	{fp, lr}
   165f4:	add	fp, sp, #4
   165f8:	sub	sp, sp, #36	; 0x24
   165fc:	str	r0, [fp, #-20]	; 0xffffffec
   16600:	str	r1, [fp, #-24]	; 0xffffffe8
   16604:	str	r2, [fp, #-28]	; 0xffffffe4
   16608:	add	r3, fp, #8
   1660c:	str	r3, [fp, #-12]
   16610:	ldr	r3, [fp, #-12]
   16614:	str	r3, [sp]
   16618:	ldr	r3, [fp, #4]
   1661c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16624:	ldr	r0, [fp, #-20]	; 0xffffffec
   16628:	bl	1653c <_obstack_memory_used@@Base+0x2e10>
   1662c:	nop			; (mov r0, r0)
   16630:	sub	sp, fp, #4
   16634:	pop	{fp, lr}
   16638:	add	sp, sp, #4
   1663c:	bx	lr
   16640:	push	{fp, lr}
   16644:	add	fp, sp, #4
   16648:	ldr	r3, [pc, #96]	; 166b0 <_obstack_memory_used@@Base+0x2f84>
   1664c:	ldr	r3, [r3]
   16650:	mov	r1, r3
   16654:	mov	r0, #10
   16658:	bl	10e7c <fputc_unlocked@plt>
   1665c:	ldr	r0, [pc, #80]	; 166b4 <_obstack_memory_used@@Base+0x2f88>
   16660:	bl	10f9c <gettext@plt>
   16664:	mov	r3, r0
   16668:	ldr	r1, [pc, #72]	; 166b8 <_obstack_memory_used@@Base+0x2f8c>
   1666c:	mov	r0, r3
   16670:	bl	10e1c <printf@plt>
   16674:	ldr	r0, [pc, #64]	; 166bc <_obstack_memory_used@@Base+0x2f90>
   16678:	bl	10f9c <gettext@plt>
   1667c:	mov	r3, r0
   16680:	ldr	r2, [pc, #56]	; 166c0 <_obstack_memory_used@@Base+0x2f94>
   16684:	ldr	r1, [pc, #56]	; 166c4 <_obstack_memory_used@@Base+0x2f98>
   16688:	mov	r0, r3
   1668c:	bl	10e1c <printf@plt>
   16690:	ldr	r0, [pc, #48]	; 166c8 <_obstack_memory_used@@Base+0x2f9c>
   16694:	bl	10f9c <gettext@plt>
   16698:	mov	r3, r0
   1669c:	ldr	r1, [pc, #40]	; 166cc <_obstack_memory_used@@Base+0x2fa0>
   166a0:	mov	r0, r3
   166a4:	bl	10e1c <printf@plt>
   166a8:	nop			; (mov r0, r0)
   166ac:	pop	{fp, pc}
   166b0:	andeq	fp, r2, r4, asr r1
   166b4:	andeq	sl, r1, r4, lsl r3
   166b8:	andeq	sl, r1, r8, lsr #6
   166bc:	andeq	sl, r1, r0, asr #6
   166c0:	andeq	sl, r1, r4, asr r3
   166c4:	andeq	sl, r1, ip, ror r3
   166c8:	andeq	sl, r1, ip, lsl #7
   166cc:			; <UNDEFINED> instruction: 0x0001a3b4
   166d0:	push	{fp, lr}
   166d4:	add	fp, sp, #4
   166d8:	sub	sp, sp, #16
   166dc:	str	r0, [fp, #-8]
   166e0:	str	r1, [fp, #-12]
   166e4:	str	r2, [fp, #-16]
   166e8:	ldr	r2, [fp, #-16]
   166ec:	ldr	r1, [fp, #-12]
   166f0:	ldr	r0, [fp, #-8]
   166f4:	bl	16860 <_obstack_memory_used@@Base+0x3134>
   166f8:	mov	r3, r0
   166fc:	mov	r0, r3
   16700:	sub	sp, fp, #4
   16704:	pop	{fp, pc}
   16708:	push	{fp, lr}
   1670c:	add	fp, sp, #4
   16710:	sub	sp, sp, #8
   16714:	str	r0, [fp, #-8]
   16718:	ldr	r3, [fp, #-8]
   1671c:	cmp	r3, #0
   16720:	bne	16728 <_obstack_memory_used@@Base+0x2ffc>
   16724:	bl	17254 <_obstack_memory_used@@Base+0x3b28>
   16728:	ldr	r3, [fp, #-8]
   1672c:	mov	r0, r3
   16730:	sub	sp, fp, #4
   16734:	pop	{fp, pc}
   16738:	push	{fp, lr}
   1673c:	add	fp, sp, #4
   16740:	sub	sp, sp, #8
   16744:	str	r0, [fp, #-8]
   16748:	ldr	r0, [fp, #-8]
   1674c:	bl	17354 <_obstack_memory_used@@Base+0x3c28>
   16750:	mov	r3, r0
   16754:	mov	r0, r3
   16758:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   1675c:	mov	r3, r0
   16760:	mov	r0, r3
   16764:	sub	sp, fp, #4
   16768:	pop	{fp, pc}
   1676c:	push	{fp, lr}
   16770:	add	fp, sp, #4
   16774:	sub	sp, sp, #8
   16778:	str	r0, [fp, #-8]
   1677c:	ldr	r0, [fp, #-8]
   16780:	bl	17abc <_obstack_memory_used@@Base+0x4390>
   16784:	mov	r3, r0
   16788:	mov	r0, r3
   1678c:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   16790:	mov	r3, r0
   16794:	mov	r0, r3
   16798:	sub	sp, fp, #4
   1679c:	pop	{fp, pc}
   167a0:	push	{fp, lr}
   167a4:	add	fp, sp, #4
   167a8:	sub	sp, sp, #8
   167ac:	str	r0, [fp, #-8]
   167b0:	ldr	r0, [fp, #-8]
   167b4:	bl	16738 <_obstack_memory_used@@Base+0x300c>
   167b8:	mov	r3, r0
   167bc:	mov	r0, r3
   167c0:	sub	sp, fp, #4
   167c4:	pop	{fp, pc}
   167c8:	push	{fp, lr}
   167cc:	add	fp, sp, #4
   167d0:	sub	sp, sp, #16
   167d4:	str	r0, [fp, #-16]
   167d8:	str	r1, [fp, #-20]	; 0xffffffec
   167dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   167e0:	ldr	r0, [fp, #-16]
   167e4:	bl	173fc <_obstack_memory_used@@Base+0x3cd0>
   167e8:	str	r0, [fp, #-8]
   167ec:	ldr	r3, [fp, #-8]
   167f0:	cmp	r3, #0
   167f4:	bne	16814 <_obstack_memory_used@@Base+0x30e8>
   167f8:	ldr	r3, [fp, #-16]
   167fc:	cmp	r3, #0
   16800:	beq	16810 <_obstack_memory_used@@Base+0x30e4>
   16804:	ldr	r3, [fp, #-20]	; 0xffffffec
   16808:	cmp	r3, #0
   1680c:	beq	16814 <_obstack_memory_used@@Base+0x30e8>
   16810:	bl	17254 <_obstack_memory_used@@Base+0x3b28>
   16814:	ldr	r3, [fp, #-8]
   16818:	mov	r0, r3
   1681c:	sub	sp, fp, #4
   16820:	pop	{fp, pc}
   16824:	push	{fp, lr}
   16828:	add	fp, sp, #4
   1682c:	sub	sp, sp, #8
   16830:	str	r0, [fp, #-8]
   16834:	str	r1, [fp, #-12]
   16838:	ldr	r1, [fp, #-12]
   1683c:	ldr	r0, [fp, #-8]
   16840:	bl	17ae8 <_obstack_memory_used@@Base+0x43bc>
   16844:	mov	r3, r0
   16848:	mov	r0, r3
   1684c:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   16850:	mov	r3, r0
   16854:	mov	r0, r3
   16858:	sub	sp, fp, #4
   1685c:	pop	{fp, pc}
   16860:	push	{fp, lr}
   16864:	add	fp, sp, #4
   16868:	sub	sp, sp, #24
   1686c:	str	r0, [fp, #-16]
   16870:	str	r1, [fp, #-20]	; 0xffffffec
   16874:	str	r2, [fp, #-24]	; 0xffffffe8
   16878:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1687c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16880:	ldr	r0, [fp, #-16]
   16884:	bl	17cdc <_obstack_memory_used@@Base+0x45b0>
   16888:	str	r0, [fp, #-8]
   1688c:	ldr	r3, [fp, #-8]
   16890:	cmp	r3, #0
   16894:	bne	168c0 <_obstack_memory_used@@Base+0x3194>
   16898:	ldr	r3, [fp, #-16]
   1689c:	cmp	r3, #0
   168a0:	beq	168bc <_obstack_memory_used@@Base+0x3190>
   168a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   168a8:	cmp	r3, #0
   168ac:	beq	168c0 <_obstack_memory_used@@Base+0x3194>
   168b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168b4:	cmp	r3, #0
   168b8:	beq	168c0 <_obstack_memory_used@@Base+0x3194>
   168bc:	bl	17254 <_obstack_memory_used@@Base+0x3b28>
   168c0:	ldr	r3, [fp, #-8]
   168c4:	mov	r0, r3
   168c8:	sub	sp, fp, #4
   168cc:	pop	{fp, pc}
   168d0:	push	{fp, lr}
   168d4:	add	fp, sp, #4
   168d8:	sub	sp, sp, #16
   168dc:	str	r0, [fp, #-8]
   168e0:	str	r1, [fp, #-12]
   168e4:	str	r2, [fp, #-16]
   168e8:	ldr	r2, [fp, #-16]
   168ec:	ldr	r1, [fp, #-12]
   168f0:	ldr	r0, [fp, #-8]
   168f4:	bl	17b70 <_obstack_memory_used@@Base+0x4444>
   168f8:	mov	r3, r0
   168fc:	mov	r0, r3
   16900:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   16904:	mov	r3, r0
   16908:	mov	r0, r3
   1690c:	sub	sp, fp, #4
   16910:	pop	{fp, pc}
   16914:	push	{fp, lr}
   16918:	add	fp, sp, #4
   1691c:	sub	sp, sp, #8
   16920:	str	r0, [fp, #-8]
   16924:	str	r1, [fp, #-12]
   16928:	ldr	r2, [fp, #-12]
   1692c:	ldr	r1, [fp, #-8]
   16930:	mov	r0, #0
   16934:	bl	16860 <_obstack_memory_used@@Base+0x3134>
   16938:	mov	r3, r0
   1693c:	mov	r0, r3
   16940:	sub	sp, fp, #4
   16944:	pop	{fp, pc}
   16948:	push	{fp, lr}
   1694c:	add	fp, sp, #4
   16950:	sub	sp, sp, #8
   16954:	str	r0, [fp, #-8]
   16958:	str	r1, [fp, #-12]
   1695c:	ldr	r2, [fp, #-12]
   16960:	ldr	r1, [fp, #-8]
   16964:	mov	r0, #0
   16968:	bl	168d0 <_obstack_memory_used@@Base+0x31a4>
   1696c:	mov	r3, r0
   16970:	mov	r0, r3
   16974:	sub	sp, fp, #4
   16978:	pop	{fp, pc}
   1697c:	push	{fp, lr}
   16980:	add	fp, sp, #4
   16984:	sub	sp, sp, #8
   16988:	str	r0, [fp, #-8]
   1698c:	str	r1, [fp, #-12]
   16990:	mov	r2, #1
   16994:	ldr	r1, [fp, #-12]
   16998:	ldr	r0, [fp, #-8]
   1699c:	bl	169b0 <_obstack_memory_used@@Base+0x3284>
   169a0:	mov	r3, r0
   169a4:	mov	r0, r3
   169a8:	sub	sp, fp, #4
   169ac:	pop	{fp, pc}
   169b0:	push	{fp, lr}
   169b4:	add	fp, sp, #4
   169b8:	sub	sp, sp, #24
   169bc:	str	r0, [fp, #-16]
   169c0:	str	r1, [fp, #-20]	; 0xffffffec
   169c4:	str	r2, [fp, #-24]	; 0xffffffe8
   169c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   169cc:	ldr	r3, [r3]
   169d0:	str	r3, [fp, #-8]
   169d4:	ldr	r3, [fp, #-16]
   169d8:	cmp	r3, #0
   169dc:	bne	16a28 <_obstack_memory_used@@Base+0x32fc>
   169e0:	ldr	r3, [fp, #-8]
   169e4:	cmp	r3, #0
   169e8:	bne	16a8c <_obstack_memory_used@@Base+0x3360>
   169ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169f0:	mov	r0, #64	; 0x40
   169f4:	bl	17f90 <_obstack_memory_used@@Base+0x4864>
   169f8:	mov	r3, r0
   169fc:	str	r3, [fp, #-8]
   16a00:	ldr	r3, [fp, #-8]
   16a04:	cmp	r3, #0
   16a08:	moveq	r3, #1
   16a0c:	movne	r3, #0
   16a10:	uxtb	r3, r3
   16a14:	mov	r2, r3
   16a18:	ldr	r3, [fp, #-8]
   16a1c:	add	r3, r2, r3
   16a20:	str	r3, [fp, #-8]
   16a24:	b	16a8c <_obstack_memory_used@@Base+0x3360>
   16a28:	ldr	r3, [fp, #-8]
   16a2c:	lsr	r3, r3, #1
   16a30:	add	r3, r3, #1
   16a34:	mvn	r2, r3
   16a38:	ldr	r3, [fp, #-8]
   16a3c:	cmp	r2, r3
   16a40:	bcs	16a64 <_obstack_memory_used@@Base+0x3338>
   16a44:	ldr	r3, [fp, #-8]
   16a48:	lsr	r2, r3, #1
   16a4c:	ldr	r3, [fp, #-8]
   16a50:	add	r3, r2, r3
   16a54:	add	r3, r3, #1
   16a58:	str	r3, [fp, #-8]
   16a5c:	mov	r3, #1
   16a60:	b	16a80 <_obstack_memory_used@@Base+0x3354>
   16a64:	ldr	r3, [fp, #-8]
   16a68:	lsr	r2, r3, #1
   16a6c:	ldr	r3, [fp, #-8]
   16a70:	add	r3, r2, r3
   16a74:	add	r3, r3, #1
   16a78:	str	r3, [fp, #-8]
   16a7c:	mov	r3, #0
   16a80:	cmp	r3, #0
   16a84:	beq	16a8c <_obstack_memory_used@@Base+0x3360>
   16a88:	bl	17254 <_obstack_memory_used@@Base+0x3b28>
   16a8c:	ldr	r3, [fp, #-8]
   16a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16a94:	mov	r1, r3
   16a98:	ldr	r0, [fp, #-16]
   16a9c:	bl	16860 <_obstack_memory_used@@Base+0x3134>
   16aa0:	str	r0, [fp, #-16]
   16aa4:	ldr	r2, [fp, #-8]
   16aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16aac:	str	r2, [r3]
   16ab0:	ldr	r3, [fp, #-16]
   16ab4:	mov	r0, r3
   16ab8:	sub	sp, fp, #4
   16abc:	pop	{fp, pc}
   16ac0:	push	{fp, lr}
   16ac4:	add	fp, sp, #4
   16ac8:	sub	sp, sp, #32
   16acc:	str	r0, [fp, #-24]	; 0xffffffe8
   16ad0:	str	r1, [fp, #-28]	; 0xffffffe4
   16ad4:	str	r2, [fp, #-32]	; 0xffffffe0
   16ad8:	str	r3, [fp, #-36]	; 0xffffffdc
   16adc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ae0:	ldr	r3, [r3]
   16ae4:	str	r3, [fp, #-8]
   16ae8:	ldr	r3, [fp, #-8]
   16aec:	asr	r3, r3, #1
   16af0:	cmp	r3, #0
   16af4:	bge	16b1c <_obstack_memory_used@@Base+0x33f0>
   16af8:	ldr	r3, [fp, #-8]
   16afc:	asr	r3, r3, #1
   16b00:	rsb	r2, r3, #-2147483648	; 0x80000000
   16b04:	ldr	r3, [fp, #-8]
   16b08:	cmp	r2, r3
   16b0c:	movgt	r3, #1
   16b10:	movle	r3, #0
   16b14:	uxtb	r3, r3
   16b18:	b	16b70 <_obstack_memory_used@@Base+0x3444>
   16b1c:	ldr	r3, [fp, #-8]
   16b20:	cmp	r3, #0
   16b24:	bge	16b4c <_obstack_memory_used@@Base+0x3420>
   16b28:	ldr	r3, [fp, #-8]
   16b2c:	asr	r2, r3, #1
   16b30:	ldr	r3, [fp, #-8]
   16b34:	rsb	r3, r3, #-2147483648	; 0x80000000
   16b38:	cmp	r2, r3
   16b3c:	movlt	r3, #1
   16b40:	movge	r3, #0
   16b44:	uxtb	r3, r3
   16b48:	b	16b70 <_obstack_memory_used@@Base+0x3444>
   16b4c:	ldr	r3, [fp, #-8]
   16b50:	asr	r2, r3, #1
   16b54:	mvn	r3, #-2147483648	; 0x80000000
   16b58:	sub	r3, r3, r2
   16b5c:	ldr	r2, [fp, #-8]
   16b60:	cmp	r3, r2
   16b64:	movlt	r3, #1
   16b68:	movge	r3, #0
   16b6c:	uxtb	r3, r3
   16b70:	cmp	r3, #0
   16b74:	beq	16b98 <_obstack_memory_used@@Base+0x346c>
   16b78:	ldr	r3, [fp, #-8]
   16b7c:	asr	r3, r3, #1
   16b80:	mov	r2, r3
   16b84:	ldr	r3, [fp, #-8]
   16b88:	add	r3, r2, r3
   16b8c:	str	r3, [fp, #-16]
   16b90:	mov	r3, #1
   16b94:	b	16bb4 <_obstack_memory_used@@Base+0x3488>
   16b98:	ldr	r3, [fp, #-8]
   16b9c:	asr	r3, r3, #1
   16ba0:	mov	r2, r3
   16ba4:	ldr	r3, [fp, #-8]
   16ba8:	add	r3, r2, r3
   16bac:	str	r3, [fp, #-16]
   16bb0:	mov	r3, #0
   16bb4:	cmp	r3, #0
   16bb8:	beq	16bc4 <_obstack_memory_used@@Base+0x3498>
   16bbc:	mvn	r3, #-2147483648	; 0x80000000
   16bc0:	str	r3, [fp, #-16]
   16bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16bc8:	cmp	r3, #0
   16bcc:	blt	16be8 <_obstack_memory_used@@Base+0x34bc>
   16bd0:	ldr	r3, [fp, #-16]
   16bd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16bd8:	cmp	r2, r3
   16bdc:	bge	16be8 <_obstack_memory_used@@Base+0x34bc>
   16be0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16be4:	str	r3, [fp, #-16]
   16be8:	ldr	r3, [fp, #4]
   16bec:	cmp	r3, #0
   16bf0:	bge	16c80 <_obstack_memory_used@@Base+0x3554>
   16bf4:	ldr	r3, [fp, #-16]
   16bf8:	cmp	r3, #0
   16bfc:	bge	16c2c <_obstack_memory_used@@Base+0x3500>
   16c00:	ldr	r1, [fp, #4]
   16c04:	mvn	r0, #-2147483648	; 0x80000000
   16c08:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16c0c:	mov	r3, r0
   16c10:	mov	r2, r3
   16c14:	ldr	r3, [fp, #-16]
   16c18:	cmp	r2, r3
   16c1c:	movgt	r3, #1
   16c20:	movle	r3, #0
   16c24:	uxtb	r3, r3
   16c28:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16c2c:	ldr	r3, [fp, #4]
   16c30:	cmn	r3, #1
   16c34:	bne	16c54 <_obstack_memory_used@@Base+0x3528>
   16c38:	ldr	r3, [fp, #-16]
   16c3c:	add	r3, r3, #-2147483648	; 0x80000000
   16c40:	cmp	r3, #0
   16c44:	movgt	r3, #1
   16c48:	movle	r3, #0
   16c4c:	uxtb	r3, r3
   16c50:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16c54:	ldr	r1, [fp, #4]
   16c58:	mov	r0, #-2147483648	; 0x80000000
   16c5c:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16c60:	mov	r3, r0
   16c64:	mov	r2, r3
   16c68:	ldr	r3, [fp, #-16]
   16c6c:	cmp	r2, r3
   16c70:	movlt	r3, #1
   16c74:	movge	r3, #0
   16c78:	uxtb	r3, r3
   16c7c:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16c80:	ldr	r3, [fp, #4]
   16c84:	cmp	r3, #0
   16c88:	beq	16d1c <_obstack_memory_used@@Base+0x35f0>
   16c8c:	ldr	r3, [fp, #-16]
   16c90:	cmp	r3, #0
   16c94:	bge	16cf0 <_obstack_memory_used@@Base+0x35c4>
   16c98:	ldr	r3, [fp, #-16]
   16c9c:	cmn	r3, #1
   16ca0:	bne	16cc0 <_obstack_memory_used@@Base+0x3594>
   16ca4:	ldr	r3, [fp, #4]
   16ca8:	add	r3, r3, #-2147483648	; 0x80000000
   16cac:	cmp	r3, #0
   16cb0:	movgt	r3, #1
   16cb4:	movle	r3, #0
   16cb8:	uxtb	r3, r3
   16cbc:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16cc0:	ldr	r3, [fp, #-16]
   16cc4:	mov	r1, r3
   16cc8:	mov	r0, #-2147483648	; 0x80000000
   16ccc:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16cd0:	mov	r3, r0
   16cd4:	mov	r2, r3
   16cd8:	ldr	r3, [fp, #4]
   16cdc:	cmp	r2, r3
   16ce0:	movlt	r3, #1
   16ce4:	movge	r3, #0
   16ce8:	uxtb	r3, r3
   16cec:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16cf0:	ldr	r1, [fp, #4]
   16cf4:	mvn	r0, #-2147483648	; 0x80000000
   16cf8:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16cfc:	mov	r3, r0
   16d00:	mov	r2, r3
   16d04:	ldr	r3, [fp, #-16]
   16d08:	cmp	r2, r3
   16d0c:	movlt	r3, #1
   16d10:	movge	r3, #0
   16d14:	uxtb	r3, r3
   16d18:	b	16d20 <_obstack_memory_used@@Base+0x35f4>
   16d1c:	mov	r3, #0
   16d20:	cmp	r3, #0
   16d24:	beq	16d44 <_obstack_memory_used@@Base+0x3618>
   16d28:	ldr	r3, [fp, #-16]
   16d2c:	mov	r2, r3
   16d30:	ldr	r3, [fp, #4]
   16d34:	mul	r3, r3, r2
   16d38:	str	r3, [fp, #-20]	; 0xffffffec
   16d3c:	mov	r3, #1
   16d40:	b	16d5c <_obstack_memory_used@@Base+0x3630>
   16d44:	ldr	r3, [fp, #-16]
   16d48:	mov	r2, r3
   16d4c:	ldr	r3, [fp, #4]
   16d50:	mul	r3, r3, r2
   16d54:	str	r3, [fp, #-20]	; 0xffffffec
   16d58:	mov	r3, #0
   16d5c:	cmp	r3, #0
   16d60:	beq	16d6c <_obstack_memory_used@@Base+0x3640>
   16d64:	mvn	r3, #-2147483648	; 0x80000000
   16d68:	b	16d84 <_obstack_memory_used@@Base+0x3658>
   16d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d70:	cmp	r3, #63	; 0x3f
   16d74:	bgt	16d80 <_obstack_memory_used@@Base+0x3654>
   16d78:	mov	r3, #64	; 0x40
   16d7c:	b	16d84 <_obstack_memory_used@@Base+0x3658>
   16d80:	mov	r3, #0
   16d84:	str	r3, [fp, #-12]
   16d88:	ldr	r3, [fp, #-12]
   16d8c:	cmp	r3, #0
   16d90:	beq	16dcc <_obstack_memory_used@@Base+0x36a0>
   16d94:	ldr	r1, [fp, #4]
   16d98:	ldr	r0, [fp, #-12]
   16d9c:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16da0:	mov	r3, r0
   16da4:	str	r3, [fp, #-16]
   16da8:	ldr	r3, [fp, #-12]
   16dac:	ldr	r1, [fp, #4]
   16db0:	mov	r0, r3
   16db4:	bl	183bc <_obstack_memory_used@@Base+0x4c90>
   16db8:	mov	r3, r1
   16dbc:	mov	r2, r3
   16dc0:	ldr	r3, [fp, #-12]
   16dc4:	sub	r3, r3, r2
   16dc8:	str	r3, [fp, #-20]	; 0xffffffec
   16dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16dd0:	cmp	r3, #0
   16dd4:	bne	16de4 <_obstack_memory_used@@Base+0x36b8>
   16dd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ddc:	mov	r2, #0
   16de0:	str	r2, [r3]
   16de4:	ldr	r2, [fp, #-16]
   16de8:	ldr	r3, [fp, #-8]
   16dec:	sub	r2, r2, r3
   16df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16df4:	cmp	r2, r3
   16df8:	bge	17030 <_obstack_memory_used@@Base+0x3904>
   16dfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e00:	cmp	r3, #0
   16e04:	bge	16e28 <_obstack_memory_used@@Base+0x36fc>
   16e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e0c:	rsb	r2, r3, #-2147483648	; 0x80000000
   16e10:	ldr	r3, [fp, #-8]
   16e14:	cmp	r2, r3
   16e18:	movgt	r3, #1
   16e1c:	movle	r3, #0
   16e20:	uxtb	r3, r3
   16e24:	b	16e74 <_obstack_memory_used@@Base+0x3748>
   16e28:	ldr	r3, [fp, #-8]
   16e2c:	cmp	r3, #0
   16e30:	bge	16e54 <_obstack_memory_used@@Base+0x3728>
   16e34:	ldr	r3, [fp, #-8]
   16e38:	rsb	r2, r3, #-2147483648	; 0x80000000
   16e3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e40:	cmp	r2, r3
   16e44:	movgt	r3, #1
   16e48:	movle	r3, #0
   16e4c:	uxtb	r3, r3
   16e50:	b	16e74 <_obstack_memory_used@@Base+0x3748>
   16e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e58:	mvn	r3, #-2147483648	; 0x80000000
   16e5c:	sub	r3, r3, r2
   16e60:	ldr	r2, [fp, #-8]
   16e64:	cmp	r3, r2
   16e68:	movlt	r3, #1
   16e6c:	movge	r3, #0
   16e70:	uxtb	r3, r3
   16e74:	cmp	r3, #0
   16e78:	beq	16e90 <_obstack_memory_used@@Base+0x3764>
   16e7c:	ldr	r2, [fp, #-8]
   16e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e84:	add	r3, r2, r3
   16e88:	str	r3, [fp, #-16]
   16e8c:	b	1702c <_obstack_memory_used@@Base+0x3900>
   16e90:	ldr	r2, [fp, #-8]
   16e94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e98:	add	r3, r2, r3
   16e9c:	str	r3, [fp, #-16]
   16ea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ea4:	cmp	r3, #0
   16ea8:	blt	16ebc <_obstack_memory_used@@Base+0x3790>
   16eac:	ldr	r3, [fp, #-16]
   16eb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16eb4:	cmp	r2, r3
   16eb8:	blt	1702c <_obstack_memory_used@@Base+0x3900>
   16ebc:	ldr	r3, [fp, #4]
   16ec0:	cmp	r3, #0
   16ec4:	bge	16f54 <_obstack_memory_used@@Base+0x3828>
   16ec8:	ldr	r3, [fp, #-16]
   16ecc:	cmp	r3, #0
   16ed0:	bge	16f00 <_obstack_memory_used@@Base+0x37d4>
   16ed4:	ldr	r1, [fp, #4]
   16ed8:	mvn	r0, #-2147483648	; 0x80000000
   16edc:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16ee0:	mov	r3, r0
   16ee4:	mov	r2, r3
   16ee8:	ldr	r3, [fp, #-16]
   16eec:	cmp	r2, r3
   16ef0:	movgt	r3, #1
   16ef4:	movle	r3, #0
   16ef8:	uxtb	r3, r3
   16efc:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16f00:	ldr	r3, [fp, #4]
   16f04:	cmn	r3, #1
   16f08:	bne	16f28 <_obstack_memory_used@@Base+0x37fc>
   16f0c:	ldr	r3, [fp, #-16]
   16f10:	add	r3, r3, #-2147483648	; 0x80000000
   16f14:	cmp	r3, #0
   16f18:	movgt	r3, #1
   16f1c:	movle	r3, #0
   16f20:	uxtb	r3, r3
   16f24:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16f28:	ldr	r1, [fp, #4]
   16f2c:	mov	r0, #-2147483648	; 0x80000000
   16f30:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16f34:	mov	r3, r0
   16f38:	mov	r2, r3
   16f3c:	ldr	r3, [fp, #-16]
   16f40:	cmp	r2, r3
   16f44:	movlt	r3, #1
   16f48:	movge	r3, #0
   16f4c:	uxtb	r3, r3
   16f50:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16f54:	ldr	r3, [fp, #4]
   16f58:	cmp	r3, #0
   16f5c:	beq	16ff0 <_obstack_memory_used@@Base+0x38c4>
   16f60:	ldr	r3, [fp, #-16]
   16f64:	cmp	r3, #0
   16f68:	bge	16fc4 <_obstack_memory_used@@Base+0x3898>
   16f6c:	ldr	r3, [fp, #-16]
   16f70:	cmn	r3, #1
   16f74:	bne	16f94 <_obstack_memory_used@@Base+0x3868>
   16f78:	ldr	r3, [fp, #4]
   16f7c:	add	r3, r3, #-2147483648	; 0x80000000
   16f80:	cmp	r3, #0
   16f84:	movgt	r3, #1
   16f88:	movle	r3, #0
   16f8c:	uxtb	r3, r3
   16f90:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16f94:	ldr	r3, [fp, #-16]
   16f98:	mov	r1, r3
   16f9c:	mov	r0, #-2147483648	; 0x80000000
   16fa0:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16fa4:	mov	r3, r0
   16fa8:	mov	r2, r3
   16fac:	ldr	r3, [fp, #4]
   16fb0:	cmp	r2, r3
   16fb4:	movlt	r3, #1
   16fb8:	movge	r3, #0
   16fbc:	uxtb	r3, r3
   16fc0:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16fc4:	ldr	r1, [fp, #4]
   16fc8:	mvn	r0, #-2147483648	; 0x80000000
   16fcc:	bl	1819c <_obstack_memory_used@@Base+0x4a70>
   16fd0:	mov	r3, r0
   16fd4:	mov	r2, r3
   16fd8:	ldr	r3, [fp, #-16]
   16fdc:	cmp	r2, r3
   16fe0:	movlt	r3, #1
   16fe4:	movge	r3, #0
   16fe8:	uxtb	r3, r3
   16fec:	b	16ff4 <_obstack_memory_used@@Base+0x38c8>
   16ff0:	mov	r3, #0
   16ff4:	cmp	r3, #0
   16ff8:	beq	17014 <_obstack_memory_used@@Base+0x38e8>
   16ffc:	ldr	r3, [fp, #-16]
   17000:	mov	r2, r3
   17004:	ldr	r3, [fp, #4]
   17008:	mul	r3, r3, r2
   1700c:	str	r3, [fp, #-20]	; 0xffffffec
   17010:	b	1702c <_obstack_memory_used@@Base+0x3900>
   17014:	ldr	r3, [fp, #-16]
   17018:	mov	r2, r3
   1701c:	ldr	r3, [fp, #4]
   17020:	mul	r3, r3, r2
   17024:	str	r3, [fp, #-20]	; 0xffffffec
   17028:	b	17030 <_obstack_memory_used@@Base+0x3904>
   1702c:	bl	17254 <_obstack_memory_used@@Base+0x3b28>
   17030:	ldr	r3, [fp, #-20]	; 0xffffffec
   17034:	mov	r1, r3
   17038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1703c:	bl	167c8 <_obstack_memory_used@@Base+0x309c>
   17040:	str	r0, [fp, #-24]	; 0xffffffe8
   17044:	ldr	r2, [fp, #-16]
   17048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1704c:	str	r2, [r3]
   17050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17054:	mov	r0, r3
   17058:	sub	sp, fp, #4
   1705c:	pop	{fp, pc}
   17060:	push	{fp, lr}
   17064:	add	fp, sp, #4
   17068:	sub	sp, sp, #8
   1706c:	str	r0, [fp, #-8]
   17070:	mov	r1, #1
   17074:	ldr	r0, [fp, #-8]
   17078:	bl	170b8 <_obstack_memory_used@@Base+0x398c>
   1707c:	mov	r3, r0
   17080:	mov	r0, r3
   17084:	sub	sp, fp, #4
   17088:	pop	{fp, pc}
   1708c:	push	{fp, lr}
   17090:	add	fp, sp, #4
   17094:	sub	sp, sp, #8
   17098:	str	r0, [fp, #-8]
   1709c:	mov	r1, #1
   170a0:	ldr	r0, [fp, #-8]
   170a4:	bl	170f4 <_obstack_memory_used@@Base+0x39c8>
   170a8:	mov	r3, r0
   170ac:	mov	r0, r3
   170b0:	sub	sp, fp, #4
   170b4:	pop	{fp, pc}
   170b8:	push	{fp, lr}
   170bc:	add	fp, sp, #4
   170c0:	sub	sp, sp, #8
   170c4:	str	r0, [fp, #-8]
   170c8:	str	r1, [fp, #-12]
   170cc:	ldr	r1, [fp, #-12]
   170d0:	ldr	r0, [fp, #-8]
   170d4:	bl	17290 <_obstack_memory_used@@Base+0x3b64>
   170d8:	mov	r3, r0
   170dc:	mov	r0, r3
   170e0:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   170e4:	mov	r3, r0
   170e8:	mov	r0, r3
   170ec:	sub	sp, fp, #4
   170f0:	pop	{fp, pc}
   170f4:	push	{fp, lr}
   170f8:	add	fp, sp, #4
   170fc:	sub	sp, sp, #8
   17100:	str	r0, [fp, #-8]
   17104:	str	r1, [fp, #-12]
   17108:	ldr	r1, [fp, #-12]
   1710c:	ldr	r0, [fp, #-8]
   17110:	bl	17b38 <_obstack_memory_used@@Base+0x440c>
   17114:	mov	r3, r0
   17118:	mov	r0, r3
   1711c:	bl	16708 <_obstack_memory_used@@Base+0x2fdc>
   17120:	mov	r3, r0
   17124:	mov	r0, r3
   17128:	sub	sp, fp, #4
   1712c:	pop	{fp, pc}
   17130:	push	{fp, lr}
   17134:	add	fp, sp, #4
   17138:	sub	sp, sp, #8
   1713c:	str	r0, [fp, #-8]
   17140:	str	r1, [fp, #-12]
   17144:	ldr	r0, [fp, #-12]
   17148:	bl	16738 <_obstack_memory_used@@Base+0x300c>
   1714c:	mov	r3, r0
   17150:	ldr	r2, [fp, #-12]
   17154:	ldr	r1, [fp, #-8]
   17158:	mov	r0, r3
   1715c:	bl	10e4c <memcpy@plt>
   17160:	mov	r3, r0
   17164:	mov	r0, r3
   17168:	sub	sp, fp, #4
   1716c:	pop	{fp, pc}
   17170:	push	{fp, lr}
   17174:	add	fp, sp, #4
   17178:	sub	sp, sp, #8
   1717c:	str	r0, [fp, #-8]
   17180:	str	r1, [fp, #-12]
   17184:	ldr	r0, [fp, #-12]
   17188:	bl	1676c <_obstack_memory_used@@Base+0x3040>
   1718c:	mov	r3, r0
   17190:	mov	r0, r3
   17194:	ldr	r3, [fp, #-12]
   17198:	mov	r2, r3
   1719c:	ldr	r1, [fp, #-8]
   171a0:	bl	10e4c <memcpy@plt>
   171a4:	mov	r3, r0
   171a8:	mov	r0, r3
   171ac:	sub	sp, fp, #4
   171b0:	pop	{fp, pc}
   171b4:	push	{fp, lr}
   171b8:	add	fp, sp, #4
   171bc:	sub	sp, sp, #16
   171c0:	str	r0, [fp, #-16]
   171c4:	str	r1, [fp, #-20]	; 0xffffffec
   171c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   171cc:	add	r3, r3, #1
   171d0:	mov	r0, r3
   171d4:	bl	1676c <_obstack_memory_used@@Base+0x3040>
   171d8:	mov	r3, r0
   171dc:	str	r3, [fp, #-8]
   171e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171e4:	ldr	r2, [fp, #-8]
   171e8:	add	r3, r2, r3
   171ec:	mov	r2, #0
   171f0:	strb	r2, [r3]
   171f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   171f8:	mov	r2, r3
   171fc:	ldr	r1, [fp, #-16]
   17200:	ldr	r0, [fp, #-8]
   17204:	bl	10e4c <memcpy@plt>
   17208:	mov	r3, r0
   1720c:	mov	r0, r3
   17210:	sub	sp, fp, #4
   17214:	pop	{fp, pc}
   17218:	push	{fp, lr}
   1721c:	add	fp, sp, #4
   17220:	sub	sp, sp, #8
   17224:	str	r0, [fp, #-8]
   17228:	ldr	r0, [fp, #-8]
   1722c:	bl	10fa8 <strlen@plt>
   17230:	mov	r3, r0
   17234:	add	r3, r3, #1
   17238:	mov	r1, r3
   1723c:	ldr	r0, [fp, #-8]
   17240:	bl	17130 <_obstack_memory_used@@Base+0x3a04>
   17244:	mov	r3, r0
   17248:	mov	r0, r3
   1724c:	sub	sp, fp, #4
   17250:	pop	{fp, pc}
   17254:	push	{r4, r5, fp, lr}
   17258:	add	fp, sp, #12
   1725c:	ldr	r3, [pc, #32]	; 17284 <_obstack_memory_used@@Base+0x3b58>
   17260:	ldr	r4, [r3]
   17264:	ldr	r0, [pc, #28]	; 17288 <_obstack_memory_used@@Base+0x3b5c>
   17268:	bl	10f9c <gettext@plt>
   1726c:	mov	r3, r0
   17270:	ldr	r2, [pc, #20]	; 1728c <_obstack_memory_used@@Base+0x3b60>
   17274:	mov	r1, #0
   17278:	mov	r0, r4
   1727c:	bl	10f00 <error@plt>
   17280:	bl	11050 <abort@plt>
   17284:	strdeq	fp, [r2], -r0
   17288:	andeq	sl, r1, r4, lsl #8
   1728c:	andeq	sl, r1, r8, lsl r4
   17290:	push	{r4, r5, fp, lr}
   17294:	add	fp, sp, #12
   17298:	sub	sp, sp, #16
   1729c:	str	r0, [fp, #-24]	; 0xffffffe8
   172a0:	str	r1, [fp, #-28]	; 0xffffffe4
   172a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   172a8:	cmp	r3, #0
   172ac:	beq	172bc <_obstack_memory_used@@Base+0x3b90>
   172b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172b4:	cmp	r3, #0
   172b8:	bne	172cc <_obstack_memory_used@@Base+0x3ba0>
   172bc:	mov	r3, #1
   172c0:	str	r3, [fp, #-28]	; 0xffffffe4
   172c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172c8:	str	r3, [fp, #-24]	; 0xffffffe8
   172cc:	mov	r1, #0
   172d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172d8:	umull	r2, r3, r2, r3
   172dc:	mov	r4, r3
   172e0:	mov	r5, #0
   172e4:	cmp	r4, #0
   172e8:	beq	172f0 <_obstack_memory_used@@Base+0x3bc4>
   172ec:	mov	r1, #1
   172f0:	cmp	r2, #0
   172f4:	bge	172fc <_obstack_memory_used@@Base+0x3bd0>
   172f8:	mov	r1, #1
   172fc:	mov	r3, r2
   17300:	str	r3, [fp, #-20]	; 0xffffffec
   17304:	mov	r3, r1
   17308:	and	r3, r3, #1
   1730c:	uxtb	r3, r3
   17310:	cmp	r3, #0
   17314:	beq	17330 <_obstack_memory_used@@Base+0x3c04>
   17318:	bl	10fc0 <__errno_location@plt>
   1731c:	mov	r2, r0
   17320:	mov	r3, #12
   17324:	str	r3, [r2]
   17328:	mov	r3, #0
   1732c:	b	17348 <_obstack_memory_used@@Base+0x3c1c>
   17330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17338:	bl	10dec <calloc@plt>
   1733c:	mov	r3, r0
   17340:	str	r3, [fp, #-16]
   17344:	ldr	r3, [fp, #-16]
   17348:	mov	r0, r3
   1734c:	sub	sp, fp, #12
   17350:	pop	{r4, r5, fp, pc}
   17354:	push	{r4, r5, fp, lr}
   17358:	add	fp, sp, #12
   1735c:	sub	sp, sp, #16
   17360:	str	r0, [fp, #-24]	; 0xffffffe8
   17364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17368:	cmp	r3, #0
   1736c:	bne	17378 <_obstack_memory_used@@Base+0x3c4c>
   17370:	mov	r3, #1
   17374:	str	r3, [fp, #-24]	; 0xffffffe8
   17378:	mov	r1, #0
   1737c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17380:	mov	r2, r3
   17384:	mov	r3, #0
   17388:	mov	r4, r3
   1738c:	mov	r5, #0
   17390:	cmp	r4, #0
   17394:	beq	1739c <_obstack_memory_used@@Base+0x3c70>
   17398:	mov	r1, #1
   1739c:	cmp	r2, #0
   173a0:	bge	173a8 <_obstack_memory_used@@Base+0x3c7c>
   173a4:	mov	r1, #1
   173a8:	mov	r3, r2
   173ac:	str	r3, [fp, #-20]	; 0xffffffec
   173b0:	mov	r3, r1
   173b4:	and	r3, r3, #1
   173b8:	uxtb	r3, r3
   173bc:	cmp	r3, #0
   173c0:	beq	173dc <_obstack_memory_used@@Base+0x3cb0>
   173c4:	bl	10fc0 <__errno_location@plt>
   173c8:	mov	r2, r0
   173cc:	mov	r3, #12
   173d0:	str	r3, [r2]
   173d4:	mov	r3, #0
   173d8:	b	173f0 <_obstack_memory_used@@Base+0x3cc4>
   173dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e0:	bl	10f3c <malloc@plt>
   173e4:	mov	r3, r0
   173e8:	str	r3, [fp, #-16]
   173ec:	ldr	r3, [fp, #-16]
   173f0:	mov	r0, r3
   173f4:	sub	sp, fp, #12
   173f8:	pop	{r4, r5, fp, pc}
   173fc:	push	{r4, r5, fp, lr}
   17400:	add	fp, sp, #12
   17404:	sub	sp, sp, #16
   17408:	str	r0, [fp, #-24]	; 0xffffffe8
   1740c:	str	r1, [fp, #-28]	; 0xffffffe4
   17410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17414:	cmp	r3, #0
   17418:	bne	1742c <_obstack_memory_used@@Base+0x3d00>
   1741c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17420:	bl	17354 <_obstack_memory_used@@Base+0x3c28>
   17424:	mov	r3, r0
   17428:	b	174c0 <_obstack_memory_used@@Base+0x3d94>
   1742c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17430:	cmp	r3, #0
   17434:	bne	17448 <_obstack_memory_used@@Base+0x3d1c>
   17438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1743c:	bl	12cc8 <close@plt+0x1c6c>
   17440:	mov	r3, #0
   17444:	b	174c0 <_obstack_memory_used@@Base+0x3d94>
   17448:	mov	r1, #0
   1744c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17450:	mov	r2, r3
   17454:	mov	r3, #0
   17458:	mov	r4, r3
   1745c:	mov	r5, #0
   17460:	cmp	r4, #0
   17464:	beq	1746c <_obstack_memory_used@@Base+0x3d40>
   17468:	mov	r1, #1
   1746c:	cmp	r2, #0
   17470:	bge	17478 <_obstack_memory_used@@Base+0x3d4c>
   17474:	mov	r1, #1
   17478:	mov	r3, r2
   1747c:	str	r3, [fp, #-20]	; 0xffffffec
   17480:	mov	r3, r1
   17484:	and	r3, r3, #1
   17488:	uxtb	r3, r3
   1748c:	cmp	r3, #0
   17490:	beq	174ac <_obstack_memory_used@@Base+0x3d80>
   17494:	bl	10fc0 <__errno_location@plt>
   17498:	mov	r2, r0
   1749c:	mov	r3, #12
   174a0:	str	r3, [r2]
   174a4:	mov	r3, #0
   174a8:	b	174c0 <_obstack_memory_used@@Base+0x3d94>
   174ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   174b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174b4:	bl	10e94 <realloc@plt>
   174b8:	str	r0, [fp, #-16]
   174bc:	ldr	r3, [fp, #-16]
   174c0:	mov	r0, r3
   174c4:	sub	sp, fp, #12
   174c8:	pop	{r4, r5, fp, pc}
   174cc:	push	{fp}		; (str fp, [sp, #-4]!)
   174d0:	add	fp, sp, #0
   174d4:	sub	sp, sp, #12
   174d8:	str	r0, [fp, #-8]
   174dc:	ldr	r3, [fp, #-8]
   174e0:	cmp	r3, #90	; 0x5a
   174e4:	bgt	17500 <_obstack_memory_used@@Base+0x3dd4>
   174e8:	cmp	r3, #65	; 0x41
   174ec:	bge	1750c <_obstack_memory_used@@Base+0x3de0>
   174f0:	sub	r3, r3, #48	; 0x30
   174f4:	cmp	r3, #9
   174f8:	bhi	17514 <_obstack_memory_used@@Base+0x3de8>
   174fc:	b	1750c <_obstack_memory_used@@Base+0x3de0>
   17500:	sub	r3, r3, #97	; 0x61
   17504:	cmp	r3, #25
   17508:	bhi	17514 <_obstack_memory_used@@Base+0x3de8>
   1750c:	mov	r3, #1
   17510:	b	17518 <_obstack_memory_used@@Base+0x3dec>
   17514:	mov	r3, #0
   17518:	mov	r0, r3
   1751c:	add	sp, fp, #0
   17520:	pop	{fp}		; (ldr fp, [sp], #4)
   17524:	bx	lr
   17528:	push	{fp}		; (str fp, [sp, #-4]!)
   1752c:	add	fp, sp, #0
   17530:	sub	sp, sp, #12
   17534:	str	r0, [fp, #-8]
   17538:	ldr	r3, [fp, #-8]
   1753c:	cmp	r3, #65	; 0x41
   17540:	blt	17560 <_obstack_memory_used@@Base+0x3e34>
   17544:	cmp	r3, #90	; 0x5a
   17548:	ble	17558 <_obstack_memory_used@@Base+0x3e2c>
   1754c:	sub	r3, r3, #97	; 0x61
   17550:	cmp	r3, #25
   17554:	bhi	17560 <_obstack_memory_used@@Base+0x3e34>
   17558:	mov	r3, #1
   1755c:	b	17564 <_obstack_memory_used@@Base+0x3e38>
   17560:	mov	r3, #0
   17564:	mov	r0, r3
   17568:	add	sp, fp, #0
   1756c:	pop	{fp}		; (ldr fp, [sp], #4)
   17570:	bx	lr
   17574:	push	{fp}		; (str fp, [sp, #-4]!)
   17578:	add	fp, sp, #0
   1757c:	sub	sp, sp, #12
   17580:	str	r0, [fp, #-8]
   17584:	ldr	r3, [fp, #-8]
   17588:	add	r3, r3, #0
   1758c:	cmp	r3, #127	; 0x7f
   17590:	bhi	1759c <_obstack_memory_used@@Base+0x3e70>
   17594:	mov	r3, #1
   17598:	b	175a0 <_obstack_memory_used@@Base+0x3e74>
   1759c:	mov	r3, #0
   175a0:	mov	r0, r3
   175a4:	add	sp, fp, #0
   175a8:	pop	{fp}		; (ldr fp, [sp], #4)
   175ac:	bx	lr
   175b0:	push	{fp}		; (str fp, [sp, #-4]!)
   175b4:	add	fp, sp, #0
   175b8:	sub	sp, sp, #12
   175bc:	str	r0, [fp, #-8]
   175c0:	ldr	r3, [fp, #-8]
   175c4:	cmp	r3, #32
   175c8:	beq	175d8 <_obstack_memory_used@@Base+0x3eac>
   175cc:	ldr	r3, [fp, #-8]
   175d0:	cmp	r3, #9
   175d4:	bne	175e0 <_obstack_memory_used@@Base+0x3eb4>
   175d8:	mov	r3, #1
   175dc:	b	175e4 <_obstack_memory_used@@Base+0x3eb8>
   175e0:	mov	r3, #0
   175e4:	and	r3, r3, #1
   175e8:	uxtb	r3, r3
   175ec:	mov	r0, r3
   175f0:	add	sp, fp, #0
   175f4:	pop	{fp}		; (ldr fp, [sp], #4)
   175f8:	bx	lr
   175fc:	push	{fp}		; (str fp, [sp, #-4]!)
   17600:	add	fp, sp, #0
   17604:	sub	sp, sp, #12
   17608:	str	r0, [fp, #-8]
   1760c:	ldr	r3, [fp, #-8]
   17610:	cmp	r3, #0
   17614:	blt	17630 <_obstack_memory_used@@Base+0x3f04>
   17618:	cmp	r3, #31
   1761c:	ble	17628 <_obstack_memory_used@@Base+0x3efc>
   17620:	cmp	r3, #127	; 0x7f
   17624:	bne	17630 <_obstack_memory_used@@Base+0x3f04>
   17628:	mov	r3, #1
   1762c:	b	17634 <_obstack_memory_used@@Base+0x3f08>
   17630:	mov	r3, #0
   17634:	mov	r0, r3
   17638:	add	sp, fp, #0
   1763c:	pop	{fp}		; (ldr fp, [sp], #4)
   17640:	bx	lr
   17644:	push	{fp}		; (str fp, [sp, #-4]!)
   17648:	add	fp, sp, #0
   1764c:	sub	sp, sp, #12
   17650:	str	r0, [fp, #-8]
   17654:	ldr	r3, [fp, #-8]
   17658:	sub	r3, r3, #48	; 0x30
   1765c:	cmp	r3, #9
   17660:	bhi	1766c <_obstack_memory_used@@Base+0x3f40>
   17664:	mov	r3, #1
   17668:	b	17670 <_obstack_memory_used@@Base+0x3f44>
   1766c:	mov	r3, #0
   17670:	mov	r0, r3
   17674:	add	sp, fp, #0
   17678:	pop	{fp}		; (ldr fp, [sp], #4)
   1767c:	bx	lr
   17680:	push	{fp}		; (str fp, [sp, #-4]!)
   17684:	add	fp, sp, #0
   17688:	sub	sp, sp, #12
   1768c:	str	r0, [fp, #-8]
   17690:	ldr	r3, [fp, #-8]
   17694:	sub	r3, r3, #33	; 0x21
   17698:	cmp	r3, #93	; 0x5d
   1769c:	bhi	176a8 <_obstack_memory_used@@Base+0x3f7c>
   176a0:	mov	r3, #1
   176a4:	b	176ac <_obstack_memory_used@@Base+0x3f80>
   176a8:	mov	r3, #0
   176ac:	mov	r0, r3
   176b0:	add	sp, fp, #0
   176b4:	pop	{fp}		; (ldr fp, [sp], #4)
   176b8:	bx	lr
   176bc:	push	{fp}		; (str fp, [sp, #-4]!)
   176c0:	add	fp, sp, #0
   176c4:	sub	sp, sp, #12
   176c8:	str	r0, [fp, #-8]
   176cc:	ldr	r3, [fp, #-8]
   176d0:	sub	r3, r3, #97	; 0x61
   176d4:	cmp	r3, #25
   176d8:	bhi	176e4 <_obstack_memory_used@@Base+0x3fb8>
   176dc:	mov	r3, #1
   176e0:	b	176e8 <_obstack_memory_used@@Base+0x3fbc>
   176e4:	mov	r3, #0
   176e8:	mov	r0, r3
   176ec:	add	sp, fp, #0
   176f0:	pop	{fp}		; (ldr fp, [sp], #4)
   176f4:	bx	lr
   176f8:	push	{fp}		; (str fp, [sp, #-4]!)
   176fc:	add	fp, sp, #0
   17700:	sub	sp, sp, #12
   17704:	str	r0, [fp, #-8]
   17708:	ldr	r3, [fp, #-8]
   1770c:	sub	r3, r3, #32
   17710:	cmp	r3, #94	; 0x5e
   17714:	bhi	17720 <_obstack_memory_used@@Base+0x3ff4>
   17718:	mov	r3, #1
   1771c:	b	17724 <_obstack_memory_used@@Base+0x3ff8>
   17720:	mov	r3, #0
   17724:	mov	r0, r3
   17728:	add	sp, fp, #0
   1772c:	pop	{fp}		; (ldr fp, [sp], #4)
   17730:	bx	lr
   17734:	push	{fp}		; (str fp, [sp, #-4]!)
   17738:	add	fp, sp, #0
   1773c:	sub	sp, sp, #12
   17740:	str	r0, [fp, #-8]
   17744:	ldr	r3, [fp, #-8]
   17748:	cmp	r3, #64	; 0x40
   1774c:	bgt	17768 <_obstack_memory_used@@Base+0x403c>
   17750:	cmp	r3, #58	; 0x3a
   17754:	bge	17784 <_obstack_memory_used@@Base+0x4058>
   17758:	sub	r3, r3, #33	; 0x21
   1775c:	cmp	r3, #14
   17760:	bhi	1778c <_obstack_memory_used@@Base+0x4060>
   17764:	b	17784 <_obstack_memory_used@@Base+0x4058>
   17768:	cmp	r3, #91	; 0x5b
   1776c:	blt	1778c <_obstack_memory_used@@Base+0x4060>
   17770:	cmp	r3, #96	; 0x60
   17774:	ble	17784 <_obstack_memory_used@@Base+0x4058>
   17778:	sub	r3, r3, #123	; 0x7b
   1777c:	cmp	r3, #3
   17780:	bhi	1778c <_obstack_memory_used@@Base+0x4060>
   17784:	mov	r3, #1
   17788:	b	17790 <_obstack_memory_used@@Base+0x4064>
   1778c:	mov	r3, #0
   17790:	mov	r0, r3
   17794:	add	sp, fp, #0
   17798:	pop	{fp}		; (ldr fp, [sp], #4)
   1779c:	bx	lr
   177a0:	push	{fp}		; (str fp, [sp, #-4]!)
   177a4:	add	fp, sp, #0
   177a8:	sub	sp, sp, #12
   177ac:	str	r0, [fp, #-8]
   177b0:	ldr	r3, [fp, #-8]
   177b4:	cmp	r3, #9
   177b8:	blt	177d4 <_obstack_memory_used@@Base+0x40a8>
   177bc:	cmp	r3, #13
   177c0:	ble	177cc <_obstack_memory_used@@Base+0x40a0>
   177c4:	cmp	r3, #32
   177c8:	bne	177d4 <_obstack_memory_used@@Base+0x40a8>
   177cc:	mov	r3, #1
   177d0:	b	177d8 <_obstack_memory_used@@Base+0x40ac>
   177d4:	mov	r3, #0
   177d8:	mov	r0, r3
   177dc:	add	sp, fp, #0
   177e0:	pop	{fp}		; (ldr fp, [sp], #4)
   177e4:	bx	lr
   177e8:	push	{fp}		; (str fp, [sp, #-4]!)
   177ec:	add	fp, sp, #0
   177f0:	sub	sp, sp, #12
   177f4:	str	r0, [fp, #-8]
   177f8:	ldr	r3, [fp, #-8]
   177fc:	sub	r3, r3, #65	; 0x41
   17800:	cmp	r3, #25
   17804:	bhi	17810 <_obstack_memory_used@@Base+0x40e4>
   17808:	mov	r3, #1
   1780c:	b	17814 <_obstack_memory_used@@Base+0x40e8>
   17810:	mov	r3, #0
   17814:	mov	r0, r3
   17818:	add	sp, fp, #0
   1781c:	pop	{fp}		; (ldr fp, [sp], #4)
   17820:	bx	lr
   17824:	push	{fp}		; (str fp, [sp, #-4]!)
   17828:	add	fp, sp, #0
   1782c:	sub	sp, sp, #12
   17830:	str	r0, [fp, #-8]
   17834:	ldr	r3, [fp, #-8]
   17838:	sub	r3, r3, #48	; 0x30
   1783c:	cmp	r3, #54	; 0x36
   17840:	addls	pc, pc, r3, lsl #2
   17844:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17848:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   1784c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17850:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17854:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17858:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   1785c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17860:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17864:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17868:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   1786c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17870:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17874:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17878:	b	1792c <_obstack_memory_used@@Base+0x4200>
   1787c:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17880:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17884:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17888:	b	1792c <_obstack_memory_used@@Base+0x4200>
   1788c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17890:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17894:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17898:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   1789c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   178a0:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   178a4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178a8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178ac:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178b0:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178b4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178b8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178bc:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178c0:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178c4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178c8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178cc:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178d0:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178d4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178d8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178dc:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178e0:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178e4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178e8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178ec:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178f0:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178f4:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178f8:	b	1792c <_obstack_memory_used@@Base+0x4200>
   178fc:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17900:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17904:	b	1792c <_obstack_memory_used@@Base+0x4200>
   17908:	b	1792c <_obstack_memory_used@@Base+0x4200>
   1790c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17910:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17914:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17918:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   1791c:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17920:	b	17924 <_obstack_memory_used@@Base+0x41f8>
   17924:	mov	r3, #1
   17928:	b	17930 <_obstack_memory_used@@Base+0x4204>
   1792c:	mov	r3, #0
   17930:	mov	r0, r3
   17934:	add	sp, fp, #0
   17938:	pop	{fp}		; (ldr fp, [sp], #4)
   1793c:	bx	lr
   17940:	push	{fp}		; (str fp, [sp, #-4]!)
   17944:	add	fp, sp, #0
   17948:	sub	sp, sp, #12
   1794c:	str	r0, [fp, #-8]
   17950:	ldr	r3, [fp, #-8]
   17954:	sub	r3, r3, #65	; 0x41
   17958:	cmp	r3, #25
   1795c:	bhi	1796c <_obstack_memory_used@@Base+0x4240>
   17960:	ldr	r3, [fp, #-8]
   17964:	add	r3, r3, #32
   17968:	b	17970 <_obstack_memory_used@@Base+0x4244>
   1796c:	ldr	r3, [fp, #-8]
   17970:	mov	r0, r3
   17974:	add	sp, fp, #0
   17978:	pop	{fp}		; (ldr fp, [sp], #4)
   1797c:	bx	lr
   17980:	push	{fp}		; (str fp, [sp, #-4]!)
   17984:	add	fp, sp, #0
   17988:	sub	sp, sp, #12
   1798c:	str	r0, [fp, #-8]
   17990:	ldr	r3, [fp, #-8]
   17994:	sub	r3, r3, #97	; 0x61
   17998:	cmp	r3, #25
   1799c:	bhi	179ac <_obstack_memory_used@@Base+0x4280>
   179a0:	ldr	r3, [fp, #-8]
   179a4:	sub	r3, r3, #32
   179a8:	b	179b0 <_obstack_memory_used@@Base+0x4284>
   179ac:	ldr	r3, [fp, #-8]
   179b0:	mov	r0, r3
   179b4:	add	sp, fp, #0
   179b8:	pop	{fp}		; (ldr fp, [sp], #4)
   179bc:	bx	lr
   179c0:	push	{fp, lr}
   179c4:	add	fp, sp, #4
   179c8:	sub	sp, sp, #16
   179cc:	str	r0, [fp, #-16]
   179d0:	ldr	r0, [fp, #-16]
   179d4:	bl	10edc <__fpending@plt>
   179d8:	mov	r3, r0
   179dc:	cmp	r3, #0
   179e0:	movne	r3, #1
   179e4:	moveq	r3, #0
   179e8:	strb	r3, [fp, #-5]
   179ec:	ldr	r0, [fp, #-16]
   179f0:	bl	10ee8 <ferror_unlocked@plt>
   179f4:	mov	r3, r0
   179f8:	cmp	r3, #0
   179fc:	movne	r3, #1
   17a00:	moveq	r3, #0
   17a04:	strb	r3, [fp, #-6]
   17a08:	ldr	r0, [fp, #-16]
   17a0c:	bl	12b28 <close@plt+0x1acc>
   17a10:	mov	r3, r0
   17a14:	cmp	r3, #0
   17a18:	movne	r3, #1
   17a1c:	moveq	r3, #0
   17a20:	strb	r3, [fp, #-7]
   17a24:	ldrb	r3, [fp, #-6]
   17a28:	cmp	r3, #0
   17a2c:	bne	17a5c <_obstack_memory_used@@Base+0x4330>
   17a30:	ldrb	r3, [fp, #-7]
   17a34:	cmp	r3, #0
   17a38:	beq	17a88 <_obstack_memory_used@@Base+0x435c>
   17a3c:	ldrb	r3, [fp, #-5]
   17a40:	cmp	r3, #0
   17a44:	bne	17a5c <_obstack_memory_used@@Base+0x4330>
   17a48:	bl	10fc0 <__errno_location@plt>
   17a4c:	mov	r3, r0
   17a50:	ldr	r3, [r3]
   17a54:	cmp	r3, #9
   17a58:	beq	17a88 <_obstack_memory_used@@Base+0x435c>
   17a5c:	ldrb	r3, [fp, #-7]
   17a60:	eor	r3, r3, #1
   17a64:	uxtb	r3, r3
   17a68:	cmp	r3, #0
   17a6c:	beq	17a80 <_obstack_memory_used@@Base+0x4354>
   17a70:	bl	10fc0 <__errno_location@plt>
   17a74:	mov	r2, r0
   17a78:	mov	r3, #0
   17a7c:	str	r3, [r2]
   17a80:	mvn	r3, #0
   17a84:	b	17a8c <_obstack_memory_used@@Base+0x4360>
   17a88:	mov	r3, #0
   17a8c:	mov	r0, r3
   17a90:	sub	sp, fp, #4
   17a94:	pop	{fp, pc}
   17a98:	push	{fp, lr}
   17a9c:	add	fp, sp, #4
   17aa0:	bl	10fc0 <__errno_location@plt>
   17aa4:	mov	r2, r0
   17aa8:	mov	r3, #12
   17aac:	str	r3, [r2]
   17ab0:	mov	r3, #0
   17ab4:	mov	r0, r3
   17ab8:	pop	{fp, pc}
   17abc:	push	{fp, lr}
   17ac0:	add	fp, sp, #4
   17ac4:	sub	sp, sp, #8
   17ac8:	str	r0, [fp, #-8]
   17acc:	ldr	r3, [fp, #-8]
   17ad0:	mov	r0, r3
   17ad4:	bl	17354 <_obstack_memory_used@@Base+0x3c28>
   17ad8:	mov	r3, r0
   17adc:	mov	r0, r3
   17ae0:	sub	sp, fp, #4
   17ae4:	pop	{fp, pc}
   17ae8:	push	{fp, lr}
   17aec:	add	fp, sp, #4
   17af0:	sub	sp, sp, #8
   17af4:	str	r0, [fp, #-8]
   17af8:	str	r1, [fp, #-12]
   17afc:	ldr	r3, [fp, #-12]
   17b00:	cmp	r3, #0
   17b04:	moveq	r3, #1
   17b08:	movne	r3, #0
   17b0c:	uxtb	r3, r3
   17b10:	mov	r2, r3
   17b14:	ldr	r3, [fp, #-12]
   17b18:	orr	r3, r2, r3
   17b1c:	mov	r1, r3
   17b20:	ldr	r0, [fp, #-8]
   17b24:	bl	173fc <_obstack_memory_used@@Base+0x3cd0>
   17b28:	mov	r3, r0
   17b2c:	mov	r0, r3
   17b30:	sub	sp, fp, #4
   17b34:	pop	{fp, pc}
   17b38:	push	{fp, lr}
   17b3c:	add	fp, sp, #4
   17b40:	sub	sp, sp, #8
   17b44:	str	r0, [fp, #-8]
   17b48:	str	r1, [fp, #-12]
   17b4c:	ldr	r3, [fp, #-8]
   17b50:	ldr	r2, [fp, #-12]
   17b54:	mov	r1, r2
   17b58:	mov	r0, r3
   17b5c:	bl	17290 <_obstack_memory_used@@Base+0x3b64>
   17b60:	mov	r3, r0
   17b64:	mov	r0, r3
   17b68:	sub	sp, fp, #4
   17b6c:	pop	{fp, pc}
   17b70:	push	{fp, lr}
   17b74:	add	fp, sp, #4
   17b78:	sub	sp, sp, #16
   17b7c:	str	r0, [fp, #-8]
   17b80:	str	r1, [fp, #-12]
   17b84:	str	r2, [fp, #-16]
   17b88:	ldr	r3, [fp, #-12]
   17b8c:	cmp	r3, #0
   17b90:	beq	17ba0 <_obstack_memory_used@@Base+0x4474>
   17b94:	ldr	r3, [fp, #-16]
   17b98:	cmp	r3, #0
   17b9c:	bne	17bb0 <_obstack_memory_used@@Base+0x4484>
   17ba0:	mov	r3, #1
   17ba4:	str	r3, [fp, #-16]
   17ba8:	ldr	r3, [fp, #-16]
   17bac:	str	r3, [fp, #-12]
   17bb0:	ldr	r3, [fp, #-12]
   17bb4:	ldr	r2, [fp, #-16]
   17bb8:	mov	r1, r3
   17bbc:	ldr	r0, [fp, #-8]
   17bc0:	bl	17cdc <_obstack_memory_used@@Base+0x45b0>
   17bc4:	mov	r3, r0
   17bc8:	mov	r0, r3
   17bcc:	sub	sp, fp, #4
   17bd0:	pop	{fp, pc}
   17bd4:	push	{fp, lr}
   17bd8:	add	fp, sp, #4
   17bdc:	sub	sp, sp, #8
   17be0:	mov	r0, #14
   17be4:	bl	11020 <nl_langinfo@plt>
   17be8:	str	r0, [fp, #-8]
   17bec:	ldr	r3, [fp, #-8]
   17bf0:	cmp	r3, #0
   17bf4:	bne	17c00 <_obstack_memory_used@@Base+0x44d4>
   17bf8:	ldr	r3, [pc, #40]	; 17c28 <_obstack_memory_used@@Base+0x44fc>
   17bfc:	str	r3, [fp, #-8]
   17c00:	ldr	r3, [fp, #-8]
   17c04:	ldrb	r3, [r3]
   17c08:	cmp	r3, #0
   17c0c:	bne	17c18 <_obstack_memory_used@@Base+0x44ec>
   17c10:	ldr	r3, [pc, #20]	; 17c2c <_obstack_memory_used@@Base+0x4500>
   17c14:	str	r3, [fp, #-8]
   17c18:	ldr	r3, [fp, #-8]
   17c1c:	mov	r0, r3
   17c20:	sub	sp, fp, #4
   17c24:	pop	{fp, pc}
   17c28:	andeq	sl, r1, ip, lsl r4
   17c2c:	andeq	sl, r1, r0, lsr #8
   17c30:	push	{fp, lr}
   17c34:	add	fp, sp, #4
   17c38:	sub	sp, sp, #32
   17c3c:	str	r0, [fp, #-24]	; 0xffffffe8
   17c40:	str	r1, [fp, #-28]	; 0xffffffe4
   17c44:	str	r2, [fp, #-32]	; 0xffffffe0
   17c48:	str	r3, [fp, #-36]	; 0xffffffdc
   17c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c50:	cmp	r3, #0
   17c54:	bne	17c60 <_obstack_memory_used@@Base+0x4534>
   17c58:	sub	r3, fp, #16
   17c5c:	str	r3, [fp, #-24]	; 0xffffffe8
   17c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c70:	bl	10ef4 <mbrtowc@plt>
   17c74:	str	r0, [fp, #-8]
   17c78:	ldr	r3, [fp, #-8]
   17c7c:	cmn	r3, #3
   17c80:	bls	17ccc <_obstack_memory_used@@Base+0x45a0>
   17c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c88:	cmp	r3, #0
   17c8c:	beq	17ccc <_obstack_memory_used@@Base+0x45a0>
   17c90:	mov	r0, #0
   17c94:	bl	17d8c <_obstack_memory_used@@Base+0x4660>
   17c98:	mov	r3, r0
   17c9c:	eor	r3, r3, #1
   17ca0:	uxtb	r3, r3
   17ca4:	cmp	r3, #0
   17ca8:	beq	17ccc <_obstack_memory_used@@Base+0x45a0>
   17cac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17cb0:	ldrb	r3, [r3]
   17cb4:	strb	r3, [fp, #-9]
   17cb8:	ldrb	r2, [fp, #-9]
   17cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cc0:	str	r2, [r3]
   17cc4:	mov	r3, #1
   17cc8:	b	17cd0 <_obstack_memory_used@@Base+0x45a4>
   17ccc:	ldr	r3, [fp, #-8]
   17cd0:	mov	r0, r3
   17cd4:	sub	sp, fp, #4
   17cd8:	pop	{fp, pc}
   17cdc:	push	{fp, lr}
   17ce0:	add	fp, sp, #4
   17ce4:	sub	sp, sp, #24
   17ce8:	str	r0, [fp, #-16]
   17cec:	str	r1, [fp, #-20]	; 0xffffffec
   17cf0:	str	r2, [fp, #-24]	; 0xffffffe8
   17cf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cf8:	cmp	r3, #0
   17cfc:	beq	17d38 <_obstack_memory_used@@Base+0x460c>
   17d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d04:	mvn	r0, #0
   17d08:	bl	17f90 <_obstack_memory_used@@Base+0x4864>
   17d0c:	mov	r3, r0
   17d10:	mov	r2, r3
   17d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d18:	cmp	r2, r3
   17d1c:	bcs	17d38 <_obstack_memory_used@@Base+0x460c>
   17d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d28:	mul	r3, r2, r3
   17d2c:	str	r3, [fp, #-8]
   17d30:	mov	r3, #1
   17d34:	b	17d4c <_obstack_memory_used@@Base+0x4620>
   17d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d40:	mul	r3, r2, r3
   17d44:	str	r3, [fp, #-8]
   17d48:	mov	r3, #0
   17d4c:	cmp	r3, #0
   17d50:	beq	17d6c <_obstack_memory_used@@Base+0x4640>
   17d54:	bl	10fc0 <__errno_location@plt>
   17d58:	mov	r2, r0
   17d5c:	mov	r3, #12
   17d60:	str	r3, [r2]
   17d64:	mov	r3, #0
   17d68:	b	17d80 <_obstack_memory_used@@Base+0x4654>
   17d6c:	ldr	r3, [fp, #-8]
   17d70:	mov	r1, r3
   17d74:	ldr	r0, [fp, #-16]
   17d78:	bl	173fc <_obstack_memory_used@@Base+0x3cd0>
   17d7c:	mov	r3, r0
   17d80:	mov	r0, r3
   17d84:	sub	sp, fp, #4
   17d88:	pop	{fp, pc}
   17d8c:	push	{fp, lr}
   17d90:	add	fp, sp, #4
   17d94:	sub	sp, sp, #272	; 0x110
   17d98:	str	r0, [fp, #-272]	; 0xfffffef0
   17d9c:	sub	r3, fp, #264	; 0x108
   17da0:	ldr	r2, [pc, #116]	; 17e1c <_obstack_memory_used@@Base+0x46f0>
   17da4:	mov	r1, r3
   17da8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   17dac:	bl	17f30 <_obstack_memory_used@@Base+0x4804>
   17db0:	mov	r3, r0
   17db4:	cmp	r3, #0
   17db8:	beq	17dc4 <_obstack_memory_used@@Base+0x4698>
   17dbc:	mov	r3, #0
   17dc0:	b	17e10 <_obstack_memory_used@@Base+0x46e4>
   17dc4:	sub	r3, fp, #264	; 0x108
   17dc8:	ldr	r1, [pc, #80]	; 17e20 <_obstack_memory_used@@Base+0x46f4>
   17dcc:	mov	r0, r3
   17dd0:	bl	10e10 <strcmp@plt>
   17dd4:	mov	r3, r0
   17dd8:	cmp	r3, #0
   17ddc:	beq	17e04 <_obstack_memory_used@@Base+0x46d8>
   17de0:	sub	r3, fp, #264	; 0x108
   17de4:	ldr	r1, [pc, #56]	; 17e24 <_obstack_memory_used@@Base+0x46f8>
   17de8:	mov	r0, r3
   17dec:	bl	10e10 <strcmp@plt>
   17df0:	mov	r3, r0
   17df4:	cmp	r3, #0
   17df8:	beq	17e04 <_obstack_memory_used@@Base+0x46d8>
   17dfc:	mov	r3, #1
   17e00:	b	17e08 <_obstack_memory_used@@Base+0x46dc>
   17e04:	mov	r3, #0
   17e08:	and	r3, r3, #1
   17e0c:	uxtb	r3, r3
   17e10:	mov	r0, r3
   17e14:	sub	sp, fp, #4
   17e18:	pop	{fp, pc}
   17e1c:	andeq	r0, r0, r1, lsl #2
   17e20:	andeq	sl, r1, r8, lsr #8
   17e24:	andeq	sl, r1, ip, lsr #8
   17e28:	push	{fp, lr}
   17e2c:	add	fp, sp, #4
   17e30:	sub	sp, sp, #16
   17e34:	str	r0, [fp, #-16]
   17e38:	mov	r1, #0
   17e3c:	ldr	r0, [fp, #-16]
   17e40:	bl	11008 <setlocale@plt>
   17e44:	str	r0, [fp, #-8]
   17e48:	ldr	r3, [fp, #-8]
   17e4c:	mov	r0, r3
   17e50:	sub	sp, fp, #4
   17e54:	pop	{fp, pc}
   17e58:	push	{fp, lr}
   17e5c:	add	fp, sp, #4
   17e60:	sub	sp, sp, #24
   17e64:	str	r0, [fp, #-16]
   17e68:	str	r1, [fp, #-20]	; 0xffffffec
   17e6c:	str	r2, [fp, #-24]	; 0xffffffe8
   17e70:	ldr	r0, [fp, #-16]
   17e74:	bl	17e28 <_obstack_memory_used@@Base+0x46fc>
   17e78:	str	r0, [fp, #-8]
   17e7c:	ldr	r3, [fp, #-8]
   17e80:	cmp	r3, #0
   17e84:	bne	17ea8 <_obstack_memory_used@@Base+0x477c>
   17e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e8c:	cmp	r3, #0
   17e90:	beq	17ea0 <_obstack_memory_used@@Base+0x4774>
   17e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e98:	mov	r2, #0
   17e9c:	strb	r2, [r3]
   17ea0:	mov	r3, #22
   17ea4:	b	17f24 <_obstack_memory_used@@Base+0x47f8>
   17ea8:	ldr	r0, [fp, #-8]
   17eac:	bl	10fa8 <strlen@plt>
   17eb0:	str	r0, [fp, #-12]
   17eb4:	ldr	r2, [fp, #-12]
   17eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ebc:	cmp	r2, r3
   17ec0:	bcs	17ee4 <_obstack_memory_used@@Base+0x47b8>
   17ec4:	ldr	r3, [fp, #-12]
   17ec8:	add	r3, r3, #1
   17ecc:	mov	r2, r3
   17ed0:	ldr	r1, [fp, #-8]
   17ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ed8:	bl	10e4c <memcpy@plt>
   17edc:	mov	r3, #0
   17ee0:	b	17f24 <_obstack_memory_used@@Base+0x47f8>
   17ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ee8:	cmp	r3, #0
   17eec:	beq	17f20 <_obstack_memory_used@@Base+0x47f4>
   17ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ef4:	sub	r3, r3, #1
   17ef8:	mov	r2, r3
   17efc:	ldr	r1, [fp, #-8]
   17f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f04:	bl	10e4c <memcpy@plt>
   17f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f0c:	sub	r3, r3, #1
   17f10:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f14:	add	r3, r2, r3
   17f18:	mov	r2, #0
   17f1c:	strb	r2, [r3]
   17f20:	mov	r3, #34	; 0x22
   17f24:	mov	r0, r3
   17f28:	sub	sp, fp, #4
   17f2c:	pop	{fp, pc}
   17f30:	push	{fp, lr}
   17f34:	add	fp, sp, #4
   17f38:	sub	sp, sp, #16
   17f3c:	str	r0, [fp, #-8]
   17f40:	str	r1, [fp, #-12]
   17f44:	str	r2, [fp, #-16]
   17f48:	ldr	r2, [fp, #-16]
   17f4c:	ldr	r1, [fp, #-12]
   17f50:	ldr	r0, [fp, #-8]
   17f54:	bl	17e58 <_obstack_memory_used@@Base+0x472c>
   17f58:	mov	r3, r0
   17f5c:	mov	r0, r3
   17f60:	sub	sp, fp, #4
   17f64:	pop	{fp, pc}
   17f68:	push	{fp, lr}
   17f6c:	add	fp, sp, #4
   17f70:	sub	sp, sp, #8
   17f74:	str	r0, [fp, #-8]
   17f78:	ldr	r0, [fp, #-8]
   17f7c:	bl	17e28 <_obstack_memory_used@@Base+0x46fc>
   17f80:	mov	r3, r0
   17f84:	mov	r0, r3
   17f88:	sub	sp, fp, #4
   17f8c:	pop	{fp, pc}
   17f90:	subs	r2, r1, #1
   17f94:	bxeq	lr
   17f98:	bcc	18170 <_obstack_memory_used@@Base+0x4a44>
   17f9c:	cmp	r0, r1
   17fa0:	bls	18154 <_obstack_memory_used@@Base+0x4a28>
   17fa4:	tst	r1, r2
   17fa8:	beq	18160 <_obstack_memory_used@@Base+0x4a34>
   17fac:	clz	r3, r0
   17fb0:	clz	r2, r1
   17fb4:	sub	r3, r2, r3
   17fb8:	rsbs	r3, r3, #31
   17fbc:	addne	r3, r3, r3, lsl #1
   17fc0:	mov	r2, #0
   17fc4:	addne	pc, pc, r3, lsl #2
   17fc8:	nop			; (mov r0, r0)
   17fcc:	cmp	r0, r1, lsl #31
   17fd0:	adc	r2, r2, r2
   17fd4:	subcs	r0, r0, r1, lsl #31
   17fd8:	cmp	r0, r1, lsl #30
   17fdc:	adc	r2, r2, r2
   17fe0:	subcs	r0, r0, r1, lsl #30
   17fe4:	cmp	r0, r1, lsl #29
   17fe8:	adc	r2, r2, r2
   17fec:	subcs	r0, r0, r1, lsl #29
   17ff0:	cmp	r0, r1, lsl #28
   17ff4:	adc	r2, r2, r2
   17ff8:	subcs	r0, r0, r1, lsl #28
   17ffc:	cmp	r0, r1, lsl #27
   18000:	adc	r2, r2, r2
   18004:	subcs	r0, r0, r1, lsl #27
   18008:	cmp	r0, r1, lsl #26
   1800c:	adc	r2, r2, r2
   18010:	subcs	r0, r0, r1, lsl #26
   18014:	cmp	r0, r1, lsl #25
   18018:	adc	r2, r2, r2
   1801c:	subcs	r0, r0, r1, lsl #25
   18020:	cmp	r0, r1, lsl #24
   18024:	adc	r2, r2, r2
   18028:	subcs	r0, r0, r1, lsl #24
   1802c:	cmp	r0, r1, lsl #23
   18030:	adc	r2, r2, r2
   18034:	subcs	r0, r0, r1, lsl #23
   18038:	cmp	r0, r1, lsl #22
   1803c:	adc	r2, r2, r2
   18040:	subcs	r0, r0, r1, lsl #22
   18044:	cmp	r0, r1, lsl #21
   18048:	adc	r2, r2, r2
   1804c:	subcs	r0, r0, r1, lsl #21
   18050:	cmp	r0, r1, lsl #20
   18054:	adc	r2, r2, r2
   18058:	subcs	r0, r0, r1, lsl #20
   1805c:	cmp	r0, r1, lsl #19
   18060:	adc	r2, r2, r2
   18064:	subcs	r0, r0, r1, lsl #19
   18068:	cmp	r0, r1, lsl #18
   1806c:	adc	r2, r2, r2
   18070:	subcs	r0, r0, r1, lsl #18
   18074:	cmp	r0, r1, lsl #17
   18078:	adc	r2, r2, r2
   1807c:	subcs	r0, r0, r1, lsl #17
   18080:	cmp	r0, r1, lsl #16
   18084:	adc	r2, r2, r2
   18088:	subcs	r0, r0, r1, lsl #16
   1808c:	cmp	r0, r1, lsl #15
   18090:	adc	r2, r2, r2
   18094:	subcs	r0, r0, r1, lsl #15
   18098:	cmp	r0, r1, lsl #14
   1809c:	adc	r2, r2, r2
   180a0:	subcs	r0, r0, r1, lsl #14
   180a4:	cmp	r0, r1, lsl #13
   180a8:	adc	r2, r2, r2
   180ac:	subcs	r0, r0, r1, lsl #13
   180b0:	cmp	r0, r1, lsl #12
   180b4:	adc	r2, r2, r2
   180b8:	subcs	r0, r0, r1, lsl #12
   180bc:	cmp	r0, r1, lsl #11
   180c0:	adc	r2, r2, r2
   180c4:	subcs	r0, r0, r1, lsl #11
   180c8:	cmp	r0, r1, lsl #10
   180cc:	adc	r2, r2, r2
   180d0:	subcs	r0, r0, r1, lsl #10
   180d4:	cmp	r0, r1, lsl #9
   180d8:	adc	r2, r2, r2
   180dc:	subcs	r0, r0, r1, lsl #9
   180e0:	cmp	r0, r1, lsl #8
   180e4:	adc	r2, r2, r2
   180e8:	subcs	r0, r0, r1, lsl #8
   180ec:	cmp	r0, r1, lsl #7
   180f0:	adc	r2, r2, r2
   180f4:	subcs	r0, r0, r1, lsl #7
   180f8:	cmp	r0, r1, lsl #6
   180fc:	adc	r2, r2, r2
   18100:	subcs	r0, r0, r1, lsl #6
   18104:	cmp	r0, r1, lsl #5
   18108:	adc	r2, r2, r2
   1810c:	subcs	r0, r0, r1, lsl #5
   18110:	cmp	r0, r1, lsl #4
   18114:	adc	r2, r2, r2
   18118:	subcs	r0, r0, r1, lsl #4
   1811c:	cmp	r0, r1, lsl #3
   18120:	adc	r2, r2, r2
   18124:	subcs	r0, r0, r1, lsl #3
   18128:	cmp	r0, r1, lsl #2
   1812c:	adc	r2, r2, r2
   18130:	subcs	r0, r0, r1, lsl #2
   18134:	cmp	r0, r1, lsl #1
   18138:	adc	r2, r2, r2
   1813c:	subcs	r0, r0, r1, lsl #1
   18140:	cmp	r0, r1
   18144:	adc	r2, r2, r2
   18148:	subcs	r0, r0, r1
   1814c:	mov	r0, r2
   18150:	bx	lr
   18154:	moveq	r0, #1
   18158:	movne	r0, #0
   1815c:	bx	lr
   18160:	clz	r2, r1
   18164:	rsb	r2, r2, #31
   18168:	lsr	r0, r0, r2
   1816c:	bx	lr
   18170:	cmp	r0, #0
   18174:	mvnne	r0, #0
   18178:	b	183dc <_obstack_memory_used@@Base+0x4cb0>
   1817c:	cmp	r1, #0
   18180:	beq	18170 <_obstack_memory_used@@Base+0x4a44>
   18184:	push	{r0, r1, lr}
   18188:	bl	17f90 <_obstack_memory_used@@Base+0x4864>
   1818c:	pop	{r1, r2, lr}
   18190:	mul	r3, r2, r0
   18194:	sub	r1, r1, r3
   18198:	bx	lr
   1819c:	cmp	r1, #0
   181a0:	beq	183ac <_obstack_memory_used@@Base+0x4c80>
   181a4:	eor	ip, r0, r1
   181a8:	rsbmi	r1, r1, #0
   181ac:	subs	r2, r1, #1
   181b0:	beq	18378 <_obstack_memory_used@@Base+0x4c4c>
   181b4:	movs	r3, r0
   181b8:	rsbmi	r3, r0, #0
   181bc:	cmp	r3, r1
   181c0:	bls	18384 <_obstack_memory_used@@Base+0x4c58>
   181c4:	tst	r1, r2
   181c8:	beq	18394 <_obstack_memory_used@@Base+0x4c68>
   181cc:	clz	r2, r3
   181d0:	clz	r0, r1
   181d4:	sub	r2, r0, r2
   181d8:	rsbs	r2, r2, #31
   181dc:	addne	r2, r2, r2, lsl #1
   181e0:	mov	r0, #0
   181e4:	addne	pc, pc, r2, lsl #2
   181e8:	nop			; (mov r0, r0)
   181ec:	cmp	r3, r1, lsl #31
   181f0:	adc	r0, r0, r0
   181f4:	subcs	r3, r3, r1, lsl #31
   181f8:	cmp	r3, r1, lsl #30
   181fc:	adc	r0, r0, r0
   18200:	subcs	r3, r3, r1, lsl #30
   18204:	cmp	r3, r1, lsl #29
   18208:	adc	r0, r0, r0
   1820c:	subcs	r3, r3, r1, lsl #29
   18210:	cmp	r3, r1, lsl #28
   18214:	adc	r0, r0, r0
   18218:	subcs	r3, r3, r1, lsl #28
   1821c:	cmp	r3, r1, lsl #27
   18220:	adc	r0, r0, r0
   18224:	subcs	r3, r3, r1, lsl #27
   18228:	cmp	r3, r1, lsl #26
   1822c:	adc	r0, r0, r0
   18230:	subcs	r3, r3, r1, lsl #26
   18234:	cmp	r3, r1, lsl #25
   18238:	adc	r0, r0, r0
   1823c:	subcs	r3, r3, r1, lsl #25
   18240:	cmp	r3, r1, lsl #24
   18244:	adc	r0, r0, r0
   18248:	subcs	r3, r3, r1, lsl #24
   1824c:	cmp	r3, r1, lsl #23
   18250:	adc	r0, r0, r0
   18254:	subcs	r3, r3, r1, lsl #23
   18258:	cmp	r3, r1, lsl #22
   1825c:	adc	r0, r0, r0
   18260:	subcs	r3, r3, r1, lsl #22
   18264:	cmp	r3, r1, lsl #21
   18268:	adc	r0, r0, r0
   1826c:	subcs	r3, r3, r1, lsl #21
   18270:	cmp	r3, r1, lsl #20
   18274:	adc	r0, r0, r0
   18278:	subcs	r3, r3, r1, lsl #20
   1827c:	cmp	r3, r1, lsl #19
   18280:	adc	r0, r0, r0
   18284:	subcs	r3, r3, r1, lsl #19
   18288:	cmp	r3, r1, lsl #18
   1828c:	adc	r0, r0, r0
   18290:	subcs	r3, r3, r1, lsl #18
   18294:	cmp	r3, r1, lsl #17
   18298:	adc	r0, r0, r0
   1829c:	subcs	r3, r3, r1, lsl #17
   182a0:	cmp	r3, r1, lsl #16
   182a4:	adc	r0, r0, r0
   182a8:	subcs	r3, r3, r1, lsl #16
   182ac:	cmp	r3, r1, lsl #15
   182b0:	adc	r0, r0, r0
   182b4:	subcs	r3, r3, r1, lsl #15
   182b8:	cmp	r3, r1, lsl #14
   182bc:	adc	r0, r0, r0
   182c0:	subcs	r3, r3, r1, lsl #14
   182c4:	cmp	r3, r1, lsl #13
   182c8:	adc	r0, r0, r0
   182cc:	subcs	r3, r3, r1, lsl #13
   182d0:	cmp	r3, r1, lsl #12
   182d4:	adc	r0, r0, r0
   182d8:	subcs	r3, r3, r1, lsl #12
   182dc:	cmp	r3, r1, lsl #11
   182e0:	adc	r0, r0, r0
   182e4:	subcs	r3, r3, r1, lsl #11
   182e8:	cmp	r3, r1, lsl #10
   182ec:	adc	r0, r0, r0
   182f0:	subcs	r3, r3, r1, lsl #10
   182f4:	cmp	r3, r1, lsl #9
   182f8:	adc	r0, r0, r0
   182fc:	subcs	r3, r3, r1, lsl #9
   18300:	cmp	r3, r1, lsl #8
   18304:	adc	r0, r0, r0
   18308:	subcs	r3, r3, r1, lsl #8
   1830c:	cmp	r3, r1, lsl #7
   18310:	adc	r0, r0, r0
   18314:	subcs	r3, r3, r1, lsl #7
   18318:	cmp	r3, r1, lsl #6
   1831c:	adc	r0, r0, r0
   18320:	subcs	r3, r3, r1, lsl #6
   18324:	cmp	r3, r1, lsl #5
   18328:	adc	r0, r0, r0
   1832c:	subcs	r3, r3, r1, lsl #5
   18330:	cmp	r3, r1, lsl #4
   18334:	adc	r0, r0, r0
   18338:	subcs	r3, r3, r1, lsl #4
   1833c:	cmp	r3, r1, lsl #3
   18340:	adc	r0, r0, r0
   18344:	subcs	r3, r3, r1, lsl #3
   18348:	cmp	r3, r1, lsl #2
   1834c:	adc	r0, r0, r0
   18350:	subcs	r3, r3, r1, lsl #2
   18354:	cmp	r3, r1, lsl #1
   18358:	adc	r0, r0, r0
   1835c:	subcs	r3, r3, r1, lsl #1
   18360:	cmp	r3, r1
   18364:	adc	r0, r0, r0
   18368:	subcs	r3, r3, r1
   1836c:	cmp	ip, #0
   18370:	rsbmi	r0, r0, #0
   18374:	bx	lr
   18378:	teq	ip, r0
   1837c:	rsbmi	r0, r0, #0
   18380:	bx	lr
   18384:	movcc	r0, #0
   18388:	asreq	r0, ip, #31
   1838c:	orreq	r0, r0, #1
   18390:	bx	lr
   18394:	clz	r2, r1
   18398:	rsb	r2, r2, #31
   1839c:	cmp	ip, #0
   183a0:	lsr	r0, r3, r2
   183a4:	rsbmi	r0, r0, #0
   183a8:	bx	lr
   183ac:	cmp	r0, #0
   183b0:	mvngt	r0, #-2147483648	; 0x80000000
   183b4:	movlt	r0, #-2147483648	; 0x80000000
   183b8:	b	183dc <_obstack_memory_used@@Base+0x4cb0>
   183bc:	cmp	r1, #0
   183c0:	beq	183ac <_obstack_memory_used@@Base+0x4c80>
   183c4:	push	{r0, r1, lr}
   183c8:	bl	181a4 <_obstack_memory_used@@Base+0x4a78>
   183cc:	pop	{r1, r2, lr}
   183d0:	mul	r3, r2, r0
   183d4:	sub	r1, r1, r3
   183d8:	bx	lr
   183dc:	push	{r1, lr}
   183e0:	mov	r0, #8
   183e4:	bl	10e04 <raise@plt>
   183e8:	pop	{r1, pc}
   183ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   183f0:	mov	r7, r0
   183f4:	ldr	r6, [pc, #72]	; 18444 <_obstack_memory_used@@Base+0x4d18>
   183f8:	ldr	r5, [pc, #72]	; 18448 <_obstack_memory_used@@Base+0x4d1c>
   183fc:	add	r6, pc, r6
   18400:	add	r5, pc, r5
   18404:	sub	r6, r6, r5
   18408:	mov	r8, r1
   1840c:	mov	r9, r2
   18410:	bl	10dcc <calloc@plt-0x20>
   18414:	asrs	r6, r6, #2
   18418:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1841c:	mov	r4, #0
   18420:	add	r4, r4, #1
   18424:	ldr	r3, [r5], #4
   18428:	mov	r2, r9
   1842c:	mov	r1, r8
   18430:	mov	r0, r7
   18434:	blx	r3
   18438:	cmp	r6, r4
   1843c:	bne	18420 <_obstack_memory_used@@Base+0x4cf4>
   18440:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18444:	andeq	r2, r1, ip, lsl #22
   18448:	andeq	r2, r1, r4, lsl #22
   1844c:	bx	lr
   18450:	ldr	r3, [pc, #12]	; 18464 <_obstack_memory_used@@Base+0x4d38>
   18454:	mov	r1, #0
   18458:	add	r3, pc, r3
   1845c:	ldr	r2, [r3]
   18460:	b	10fcc <__cxa_atexit@plt>
   18464:	andeq	r2, r1, r8, lsl #25

Disassembly of section .fini:

00018468 <.fini>:
   18468:	push	{r3, lr}
   1846c:	pop	{r3, pc}
