
../repos/coreutils/src/nl:     file format elf32-littlearm


Disassembly of section .init:

000111c0 <.init>:
   111c0:	push	{r3, lr}
   111c4:	bl	1154c <__assert_fail@plt+0x48>
   111c8:	pop	{r3, pc}

Disassembly of section .plt:

000111cc <pthread_mutex_unlock@plt-0x14>:
   111cc:	push	{lr}		; (str lr, [sp, #-4]!)
   111d0:	ldr	lr, [pc, #4]	; 111dc <pthread_mutex_unlock@plt-0x4>
   111d4:	add	lr, pc, lr
   111d8:	ldr	pc, [lr, #8]!
   111dc:	andeq	r7, r3, r4, lsr #28

000111e0 <pthread_mutex_unlock@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #225280	; 0x37000
   111e8:	ldr	pc, [ip, #3620]!	; 0xe24

000111ec <calloc@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #225280	; 0x37000
   111f4:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f8 <fputs_unlocked@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #225280	; 0x37000
   11200:	ldr	pc, [ip, #3604]!	; 0xe14

00011204 <wctype@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #225280	; 0x37000
   1120c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011210 <raise@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #225280	; 0x37000
   11218:	ldr	pc, [ip, #3588]!	; 0xe04

0001121c <wcrtomb@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #225280	; 0x37000
   11224:	ldr	pc, [ip, #3580]!	; 0xdfc

00011228 <iswctype@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #225280	; 0x37000
   11230:	ldr	pc, [ip, #3572]!	; 0xdf4

00011234 <strcmp@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #225280	; 0x37000
   1123c:	ldr	pc, [ip, #3564]!	; 0xdec

00011240 <posix_fadvise64@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #225280	; 0x37000
   11248:	ldr	pc, [ip, #3556]!	; 0xde4

0001124c <printf@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #225280	; 0x37000
   11254:	ldr	pc, [ip, #3548]!	; 0xddc

00011258 <pthread_mutex_destroy@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #225280	; 0x37000
   11260:	ldr	pc, [ip, #3540]!	; 0xdd4

00011264 <fflush@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #225280	; 0x37000
   1126c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011270 <memmove@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #225280	; 0x37000
   11278:	ldr	pc, [ip, #3524]!	; 0xdc4

0001127c <free@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #225280	; 0x37000
   11284:	ldr	pc, [ip, #3516]!	; 0xdbc

00011288 <pthread_mutex_lock@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #225280	; 0x37000
   11290:	ldr	pc, [ip, #3508]!	; 0xdb4

00011294 <_exit@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #225280	; 0x37000
   1129c:	ldr	pc, [ip, #3500]!	; 0xdac

000112a0 <memcpy@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #225280	; 0x37000
   112a8:	ldr	pc, [ip, #3492]!	; 0xda4

000112ac <tolower@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #225280	; 0x37000
   112b4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b8 <pthread_mutex_init@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #225280	; 0x37000
   112c0:	ldr	pc, [ip, #3476]!	; 0xd94

000112c4 <towlower@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #225280	; 0x37000
   112cc:	ldr	pc, [ip, #3468]!	; 0xd8c

000112d0 <mbsinit@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #225280	; 0x37000
   112d8:	ldr	pc, [ip, #3460]!	; 0xd84

000112dc <fwrite_unlocked@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #225280	; 0x37000
   112e4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e8 <memcmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #225280	; 0x37000
   112f0:	ldr	pc, [ip, #3444]!	; 0xd74

000112f4 <stpcpy@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #225280	; 0x37000
   112fc:	ldr	pc, [ip, #3436]!	; 0xd6c

00011300 <getc_unlocked@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #225280	; 0x37000
   11308:	ldr	pc, [ip, #3428]!	; 0xd64

0001130c <realloc@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #225280	; 0x37000
   11314:	ldr	pc, [ip, #3420]!	; 0xd5c

00011318 <textdomain@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #225280	; 0x37000
   11320:	ldr	pc, [ip, #3412]!	; 0xd54

00011324 <iswprint@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #225280	; 0x37000
   1132c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011330 <lseek64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #225280	; 0x37000
   11338:	ldr	pc, [ip, #3396]!	; 0xd44

0001133c <__ctype_get_mb_cur_max@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #225280	; 0x37000
   11344:	ldr	pc, [ip, #3388]!	; 0xd3c

00011348 <__fpending@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #225280	; 0x37000
   11350:	ldr	pc, [ip, #3380]!	; 0xd34

00011354 <ferror_unlocked@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #225280	; 0x37000
   1135c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011360 <mbrtowc@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #225280	; 0x37000
   11368:	ldr	pc, [ip, #3364]!	; 0xd24

0001136c <error@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #225280	; 0x37000
   11374:	ldr	pc, [ip, #3356]!	; 0xd1c

00011378 <malloc@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #225280	; 0x37000
   11380:	ldr	pc, [ip, #3348]!	; 0xd14

00011384 <__libc_start_main@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #225280	; 0x37000
   1138c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011390 <__freading@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #225280	; 0x37000
   11398:	ldr	pc, [ip, #3332]!	; 0xd04

0001139c <__gmon_start__@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #225280	; 0x37000
   113a4:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a8 <getopt_long@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #225280	; 0x37000
   113b0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b4 <__ctype_b_loc@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #225280	; 0x37000
   113bc:	ldr	pc, [ip, #3308]!	; 0xcec

000113c0 <exit@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #225280	; 0x37000
   113c8:	ldr	pc, [ip, #3300]!	; 0xce4

000113cc <gettext@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #225280	; 0x37000
   113d4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d8 <strlen@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #225280	; 0x37000
   113e0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e4 <strchr@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #225280	; 0x37000
   113ec:	ldr	pc, [ip, #3276]!	; 0xccc

000113f0 <fprintf@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #225280	; 0x37000
   113f8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113fc <__errno_location@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #225280	; 0x37000
   11404:	ldr	pc, [ip, #3260]!	; 0xcbc

00011408 <iswalnum@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #225280	; 0x37000
   11410:	ldr	pc, [ip, #3252]!	; 0xcb4

00011414 <__cxa_atexit@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #225280	; 0x37000
   1141c:	ldr	pc, [ip, #3244]!	; 0xcac

00011420 <memset@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #225280	; 0x37000
   11428:	ldr	pc, [ip, #3236]!	; 0xca4

0001142c <btowc@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #225280	; 0x37000
   11434:	ldr	pc, [ip, #3228]!	; 0xc9c

00011438 <fileno@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #225280	; 0x37000
   11440:	ldr	pc, [ip, #3220]!	; 0xc94

00011444 <strtoimax@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #225280	; 0x37000
   1144c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011450 <fclose@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #225280	; 0x37000
   11458:	ldr	pc, [ip, #3204]!	; 0xc84

0001145c <fseeko64@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #225280	; 0x37000
   11464:	ldr	pc, [ip, #3196]!	; 0xc7c

00011468 <setlocale@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #225280	; 0x37000
   11470:	ldr	pc, [ip, #3188]!	; 0xc74

00011474 <toupper@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #225280	; 0x37000
   1147c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011480 <strrchr@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #225280	; 0x37000
   11488:	ldr	pc, [ip, #3172]!	; 0xc64

0001148c <nl_langinfo@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #225280	; 0x37000
   11494:	ldr	pc, [ip, #3164]!	; 0xc5c

00011498 <clearerr_unlocked@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #225280	; 0x37000
   114a0:	ldr	pc, [ip, #3156]!	; 0xc54

000114a4 <fopen64@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #225280	; 0x37000
   114ac:	ldr	pc, [ip, #3148]!	; 0xc4c

000114b0 <bindtextdomain@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #225280	; 0x37000
   114b8:	ldr	pc, [ip, #3140]!	; 0xc44

000114bc <towupper@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #225280	; 0x37000
   114c4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c8 <fputs@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #225280	; 0x37000
   114d0:	ldr	pc, [ip, #3124]!	; 0xc34

000114d4 <strncmp@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #225280	; 0x37000
   114dc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114e0 <abort@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #225280	; 0x37000
   114e8:	ldr	pc, [ip, #3108]!	; 0xc24

000114ec <feof_unlocked@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #225280	; 0x37000
   114f4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f8 <putchar_unlocked@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #225280	; 0x37000
   11500:	ldr	pc, [ip, #3092]!	; 0xc14

00011504 <__assert_fail@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #225280	; 0x37000
   1150c:	ldr	pc, [ip, #3084]!	; 0xc0c

Disassembly of section .text:

00011510 <.text>:
   11510:	mov	fp, #0
   11514:	mov	lr, #0
   11518:	pop	{r1}		; (ldr r1, [sp], #4)
   1151c:	mov	r2, sp
   11520:	push	{r2}		; (str r2, [sp, #-4]!)
   11524:	push	{r0}		; (str r0, [sp, #-4]!)
   11528:	ldr	ip, [pc, #16]	; 11540 <__assert_fail@plt+0x3c>
   1152c:	push	{ip}		; (str ip, [sp, #-4]!)
   11530:	ldr	r0, [pc, #12]	; 11544 <__assert_fail@plt+0x40>
   11534:	ldr	r3, [pc, #12]	; 11548 <__assert_fail@plt+0x44>
   11538:	bl	11384 <__libc_start_main@plt>
   1153c:	bl	114e0 <abort@plt>
   11540:	strdeq	r7, [r3], -r8
   11544:	andeq	r1, r1, r4, lsl #20
   11548:	muleq	r3, r8, r3
   1154c:	ldr	r3, [pc, #20]	; 11568 <__assert_fail@plt+0x64>
   11550:	ldr	r2, [pc, #20]	; 1156c <__assert_fail@plt+0x68>
   11554:	add	r3, pc, r3
   11558:	ldr	r2, [r3, r2]
   1155c:	cmp	r2, #0
   11560:	bxeq	lr
   11564:	b	1139c <__gmon_start__@plt>
   11568:	andeq	r7, r3, r4, lsr #21
   1156c:	andeq	r0, r0, ip, lsl r1
   11570:	ldr	r0, [pc, #24]	; 11590 <__assert_fail@plt+0x8c>
   11574:	ldr	r3, [pc, #24]	; 11594 <__assert_fail@plt+0x90>
   11578:	cmp	r3, r0
   1157c:	bxeq	lr
   11580:	ldr	r3, [pc, #16]	; 11598 <__assert_fail@plt+0x94>
   11584:	cmp	r3, #0
   11588:	bxeq	lr
   1158c:	bx	r3
   11590:			; <UNDEFINED> instruction: 0x000491b4
   11594:			; <UNDEFINED> instruction: 0x000491b4
   11598:	andeq	r0, r0, r0
   1159c:	ldr	r0, [pc, #36]	; 115c8 <__assert_fail@plt+0xc4>
   115a0:	ldr	r1, [pc, #36]	; 115cc <__assert_fail@plt+0xc8>
   115a4:	sub	r1, r1, r0
   115a8:	asr	r1, r1, #2
   115ac:	add	r1, r1, r1, lsr #31
   115b0:	asrs	r1, r1, #1
   115b4:	bxeq	lr
   115b8:	ldr	r3, [pc, #16]	; 115d0 <__assert_fail@plt+0xcc>
   115bc:	cmp	r3, #0
   115c0:	bxeq	lr
   115c4:	bx	r3
   115c8:			; <UNDEFINED> instruction: 0x000491b4
   115cc:			; <UNDEFINED> instruction: 0x000491b4
   115d0:	andeq	r0, r0, r0
   115d4:	push	{r4, lr}
   115d8:	ldr	r4, [pc, #24]	; 115f8 <__assert_fail@plt+0xf4>
   115dc:	ldrb	r3, [r4]
   115e0:	cmp	r3, #0
   115e4:	popne	{r4, pc}
   115e8:	bl	11570 <__assert_fail@plt+0x6c>
   115ec:	mov	r3, #1
   115f0:	strb	r3, [r4]
   115f4:	pop	{r4, pc}
   115f8:	ldrdeq	r9, [r4], -ip
   115fc:	b	1159c <__assert_fail@plt+0x98>
   11600:	push	{fp, lr}
   11604:	mov	fp, sp
   11608:	sub	sp, sp, #56	; 0x38
   1160c:	str	r0, [fp, #-4]
   11610:	ldr	r0, [fp, #-4]
   11614:	cmp	r0, #0
   11618:	beq	11668 <__assert_fail@plt+0x164>
   1161c:	b	11620 <__assert_fail@plt+0x11c>
   11620:	movw	r0, #37320	; 0x91c8
   11624:	movt	r0, #4
   11628:	ldr	r0, [r0]
   1162c:	movw	r1, #29728	; 0x7420
   11630:	movt	r1, #3
   11634:	str	r0, [fp, #-8]
   11638:	mov	r0, r1
   1163c:	bl	113cc <gettext@plt>
   11640:	movw	r1, #38296	; 0x9598
   11644:	movt	r1, #4
   11648:	ldr	r2, [r1]
   1164c:	ldr	r1, [fp, #-8]
   11650:	str	r0, [fp, #-12]
   11654:	mov	r0, r1
   11658:	ldr	r1, [fp, #-12]
   1165c:	bl	113f0 <fprintf@plt>
   11660:	str	r0, [fp, #-16]
   11664:	b	117e0 <__assert_fail@plt+0x2dc>
   11668:	movw	r0, #29767	; 0x7447
   1166c:	movt	r0, #3
   11670:	bl	113cc <gettext@plt>
   11674:	movw	lr, #38296	; 0x9598
   11678:	movt	lr, #4
   1167c:	ldr	r1, [lr]
   11680:	bl	1124c <printf@plt>
   11684:	movw	r1, #29800	; 0x7468
   11688:	movt	r1, #3
   1168c:	str	r0, [fp, #-20]	; 0xffffffec
   11690:	mov	r0, r1
   11694:	bl	113cc <gettext@plt>
   11698:	movw	r1, #37332	; 0x91d4
   1169c:	movt	r1, #4
   116a0:	ldr	r1, [r1]
   116a4:	bl	111f8 <fputs_unlocked@plt>
   116a8:	str	r0, [fp, #-24]	; 0xffffffe8
   116ac:	bl	117e8 <__assert_fail@plt+0x2e4>
   116b0:	bl	1181c <__assert_fail@plt+0x318>
   116b4:	movw	r0, #29862	; 0x74a6
   116b8:	movt	r0, #3
   116bc:	bl	113cc <gettext@plt>
   116c0:	movw	r1, #37332	; 0x91d4
   116c4:	movt	r1, #4
   116c8:	ldr	r1, [r1]
   116cc:	bl	111f8 <fputs_unlocked@plt>
   116d0:	movw	r1, #30072	; 0x7578
   116d4:	movt	r1, #3
   116d8:	str	r0, [sp, #28]
   116dc:	mov	r0, r1
   116e0:	bl	113cc <gettext@plt>
   116e4:	movw	r1, #37332	; 0x91d4
   116e8:	movt	r1, #4
   116ec:	ldr	r1, [r1]
   116f0:	bl	111f8 <fputs_unlocked@plt>
   116f4:	movw	r1, #30515	; 0x7733
   116f8:	movt	r1, #3
   116fc:	str	r0, [sp, #24]
   11700:	mov	r0, r1
   11704:	bl	113cc <gettext@plt>
   11708:	movw	r1, #37332	; 0x91d4
   1170c:	movt	r1, #4
   11710:	ldr	r1, [r1]
   11714:	bl	111f8 <fputs_unlocked@plt>
   11718:	movw	r1, #30658	; 0x77c2
   1171c:	movt	r1, #3
   11720:	str	r0, [sp, #20]
   11724:	mov	r0, r1
   11728:	bl	113cc <gettext@plt>
   1172c:	movw	r1, #37332	; 0x91d4
   11730:	movt	r1, #4
   11734:	ldr	r1, [r1]
   11738:	bl	111f8 <fputs_unlocked@plt>
   1173c:	movw	r1, #30703	; 0x77ef
   11740:	movt	r1, #3
   11744:	str	r0, [sp, #16]
   11748:	mov	r0, r1
   1174c:	bl	113cc <gettext@plt>
   11750:	movw	r1, #37332	; 0x91d4
   11754:	movt	r1, #4
   11758:	ldr	r1, [r1]
   1175c:	bl	111f8 <fputs_unlocked@plt>
   11760:	movw	r1, #30757	; 0x7825
   11764:	movt	r1, #3
   11768:	str	r0, [sp, #12]
   1176c:	mov	r0, r1
   11770:	bl	113cc <gettext@plt>
   11774:	movw	r1, #37332	; 0x91d4
   11778:	movt	r1, #4
   1177c:	ldr	r1, [r1]
   11780:	bl	111f8 <fputs_unlocked@plt>
   11784:	movw	r1, #31080	; 0x7968
   11788:	movt	r1, #3
   1178c:	str	r0, [sp, #8]
   11790:	mov	r0, r1
   11794:	bl	113cc <gettext@plt>
   11798:	movw	r1, #37332	; 0x91d4
   1179c:	movt	r1, #4
   117a0:	ldr	r1, [r1]
   117a4:	bl	111f8 <fputs_unlocked@plt>
   117a8:	movw	r1, #31282	; 0x7a32
   117ac:	movt	r1, #3
   117b0:	str	r0, [sp, #4]
   117b4:	mov	r0, r1
   117b8:	bl	113cc <gettext@plt>
   117bc:	movw	r1, #37332	; 0x91d4
   117c0:	movt	r1, #4
   117c4:	ldr	r1, [r1]
   117c8:	bl	111f8 <fputs_unlocked@plt>
   117cc:	movw	r1, #31429	; 0x7ac5
   117d0:	movt	r1, #3
   117d4:	str	r0, [sp]
   117d8:	mov	r0, r1
   117dc:	bl	11850 <__assert_fail@plt+0x34c>
   117e0:	ldr	r0, [fp, #-4]
   117e4:	bl	113c0 <exit@plt>
   117e8:	push	{fp, lr}
   117ec:	mov	fp, sp
   117f0:	sub	sp, sp, #8
   117f4:	movw	r0, #31794	; 0x7c32
   117f8:	movt	r0, #3
   117fc:	bl	113cc <gettext@plt>
   11800:	movw	lr, #37332	; 0x91d4
   11804:	movt	lr, #4
   11808:	ldr	r1, [lr]
   1180c:	bl	111f8 <fputs_unlocked@plt>
   11810:	str	r0, [sp, #4]
   11814:	mov	sp, fp
   11818:	pop	{fp, pc}
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	sub	sp, sp, #8
   11828:	movw	r0, #31850	; 0x7c6a
   1182c:	movt	r0, #3
   11830:	bl	113cc <gettext@plt>
   11834:	movw	lr, #37332	; 0x91d4
   11838:	movt	lr, #4
   1183c:	ldr	r1, [lr]
   11840:	bl	111f8 <fputs_unlocked@plt>
   11844:	str	r0, [sp, #4]
   11848:	mov	sp, fp
   1184c:	pop	{fp, pc}
   11850:	push	{fp, lr}
   11854:	mov	fp, sp
   11858:	sub	sp, sp, #96	; 0x60
   1185c:	add	r1, sp, #36	; 0x24
   11860:	movw	r2, #32736	; 0x7fe0
   11864:	movt	r2, #3
   11868:	str	r0, [fp, #-4]
   1186c:	mov	r0, r1
   11870:	str	r1, [sp, #20]
   11874:	mov	r1, r2
   11878:	movw	r2, #56	; 0x38
   1187c:	bl	112a0 <memcpy@plt>
   11880:	ldr	r0, [fp, #-4]
   11884:	str	r0, [sp, #32]
   11888:	ldr	r0, [sp, #20]
   1188c:	str	r0, [sp, #28]
   11890:	ldr	r0, [sp, #28]
   11894:	ldr	r0, [r0]
   11898:	movw	r1, #0
   1189c:	cmp	r0, r1
   118a0:	movw	r0, #0
   118a4:	str	r0, [sp, #16]
   118a8:	beq	118d4 <__assert_fail@plt+0x3d0>
   118ac:	ldr	r0, [fp, #-4]
   118b0:	ldr	r1, [sp, #28]
   118b4:	ldr	r1, [r1]
   118b8:	bl	11234 <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	movw	r0, #0
   118c4:	moveq	r0, #1
   118c8:	mvn	r1, #0
   118cc:	eor	r0, r0, r1
   118d0:	str	r0, [sp, #16]
   118d4:	ldr	r0, [sp, #16]
   118d8:	tst	r0, #1
   118dc:	beq	118f0 <__assert_fail@plt+0x3ec>
   118e0:	ldr	r0, [sp, #28]
   118e4:	add	r0, r0, #8
   118e8:	str	r0, [sp, #28]
   118ec:	b	11890 <__assert_fail@plt+0x38c>
   118f0:	ldr	r0, [sp, #28]
   118f4:	ldr	r0, [r0, #4]
   118f8:	movw	r1, #0
   118fc:	cmp	r0, r1
   11900:	beq	11910 <__assert_fail@plt+0x40c>
   11904:	ldr	r0, [sp, #28]
   11908:	ldr	r0, [r0, #4]
   1190c:	str	r0, [sp, #32]
   11910:	movw	r0, #32020	; 0x7d14
   11914:	movt	r0, #3
   11918:	bl	113cc <gettext@plt>
   1191c:	movw	r1, #31750	; 0x7c06
   11920:	movt	r1, #3
   11924:	movw	r2, #32043	; 0x7d2b
   11928:	movt	r2, #3
   1192c:	bl	1124c <printf@plt>
   11930:	movw	r1, #5
   11934:	str	r0, [sp, #12]
   11938:	mov	r0, r1
   1193c:	movw	r1, #0
   11940:	bl	11468 <setlocale@plt>
   11944:	str	r0, [sp, #24]
   11948:	ldr	r0, [sp, #24]
   1194c:	movw	r1, #0
   11950:	cmp	r0, r1
   11954:	beq	11994 <__assert_fail@plt+0x490>
   11958:	ldr	r0, [sp, #24]
   1195c:	movw	r1, #32083	; 0x7d53
   11960:	movt	r1, #3
   11964:	movw	r2, #3
   11968:	bl	114d4 <strncmp@plt>
   1196c:	cmp	r0, #0
   11970:	beq	11994 <__assert_fail@plt+0x490>
   11974:	movw	r0, #32087	; 0x7d57
   11978:	movt	r0, #3
   1197c:	bl	113cc <gettext@plt>
   11980:	movw	lr, #37332	; 0x91d4
   11984:	movt	lr, #4
   11988:	ldr	r1, [lr]
   1198c:	bl	111f8 <fputs_unlocked@plt>
   11990:	str	r0, [sp, #8]
   11994:	movw	r0, #32158	; 0x7d9e
   11998:	movt	r0, #3
   1199c:	bl	113cc <gettext@plt>
   119a0:	ldr	r2, [fp, #-4]
   119a4:	movw	r1, #32043	; 0x7d2b
   119a8:	movt	r1, #3
   119ac:	bl	1124c <printf@plt>
   119b0:	movw	r1, #32185	; 0x7db9
   119b4:	movt	r1, #3
   119b8:	str	r0, [sp, #4]
   119bc:	mov	r0, r1
   119c0:	bl	113cc <gettext@plt>
   119c4:	ldr	r1, [sp, #32]
   119c8:	ldr	r2, [sp, #32]
   119cc:	ldr	lr, [fp, #-4]
   119d0:	cmp	r2, lr
   119d4:	movw	r2, #0
   119d8:	moveq	r2, #1
   119dc:	tst	r2, #1
   119e0:	movw	r2, #32426	; 0x7eaa
   119e4:	movt	r2, #3
   119e8:	movw	lr, #31953	; 0x7cd1
   119ec:	movt	lr, #3
   119f0:	movne	r2, lr
   119f4:	bl	1124c <printf@plt>
   119f8:	str	r0, [sp]
   119fc:	mov	sp, fp
   11a00:	pop	{fp, pc}
   11a04:	push	{fp, lr}
   11a08:	mov	fp, sp
   11a0c:	sub	sp, sp, #144	; 0x90
   11a10:	movw	r2, #0
   11a14:	str	r2, [fp, #-4]
   11a18:	str	r0, [fp, #-8]
   11a1c:	str	r1, [fp, #-12]
   11a20:	movw	r0, #1
   11a24:	strb	r0, [fp, #-21]	; 0xffffffeb
   11a28:	ldr	r0, [fp, #-12]
   11a2c:	ldr	r0, [r0]
   11a30:	bl	13628 <__assert_fail@plt+0x2124>
   11a34:	movw	r0, #6
   11a38:	movw	r1, #32426	; 0x7eaa
   11a3c:	movt	r1, #3
   11a40:	bl	11468 <setlocale@plt>
   11a44:	movw	r1, #31754	; 0x7c0a
   11a48:	movt	r1, #3
   11a4c:	str	r0, [fp, #-32]	; 0xffffffe0
   11a50:	mov	r0, r1
   11a54:	movw	r1, #31432	; 0x7ac8
   11a58:	movt	r1, #3
   11a5c:	bl	114b0 <bindtextdomain@plt>
   11a60:	movw	r1, #31754	; 0x7c0a
   11a64:	movt	r1, #3
   11a68:	str	r0, [fp, #-36]	; 0xffffffdc
   11a6c:	mov	r0, r1
   11a70:	bl	11318 <textdomain@plt>
   11a74:	movw	r1, #12180	; 0x2f94
   11a78:	movt	r1, #1
   11a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   11a80:	mov	r0, r1
   11a84:	bl	373fc <__assert_fail@plt+0x25ef8>
   11a88:	movw	r1, #37344	; 0x91e0
   11a8c:	movt	r1, #4
   11a90:	movw	r2, #0
   11a94:	strb	r2, [r1]
   11a98:	str	r0, [fp, #-44]	; 0xffffffd4
   11a9c:	ldr	r0, [fp, #-8]
   11aa0:	ldr	r1, [fp, #-12]
   11aa4:	movw	r2, #31456	; 0x7ae0
   11aa8:	movt	r2, #3
   11aac:	movw	r3, #32484	; 0x7ee4
   11ab0:	movt	r3, #3
   11ab4:	movw	ip, #0
   11ab8:	str	ip, [sp]
   11abc:	bl	113a8 <getopt_long@plt>
   11ac0:	str	r0, [fp, #-16]
   11ac4:	cmn	r0, #1
   11ac8:	beq	1221c <__assert_fail@plt+0xd18>
   11acc:	ldr	r0, [fp, #-16]
   11ad0:	add	r0, r0, #3
   11ad4:	cmp	r0, #122	; 0x7a
   11ad8:	str	r0, [fp, #-48]	; 0xffffffd0
   11adc:	bhi	12210 <__assert_fail@plt+0xd0c>
   11ae0:	add	r0, pc, #8
   11ae4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ae8:	ldr	r0, [r0, r1, lsl #2]
   11aec:	mov	pc, r0
   11af0:			; <UNDEFINED> instruction: 0x000121bc
   11af4:			; <UNDEFINED> instruction: 0x000121b4
   11af8:	andeq	r2, r1, r0, lsl r2
   11afc:	andeq	r2, r1, r0, lsl r2
   11b00:	andeq	r2, r1, r0, lsl r2
   11b04:	andeq	r2, r1, r0, lsl r2
   11b08:	andeq	r2, r1, r0, lsl r2
   11b0c:	andeq	r2, r1, r0, lsl r2
   11b10:	andeq	r2, r1, r0, lsl r2
   11b14:	andeq	r2, r1, r0, lsl r2
   11b18:	andeq	r2, r1, r0, lsl r2
   11b1c:	andeq	r2, r1, r0, lsl r2
   11b20:	andeq	r2, r1, r0, lsl r2
   11b24:	andeq	r2, r1, r0, lsl r2
   11b28:	andeq	r2, r1, r0, lsl r2
   11b2c:	andeq	r2, r1, r0, lsl r2
   11b30:	andeq	r2, r1, r0, lsl r2
   11b34:	andeq	r2, r1, r0, lsl r2
   11b38:	andeq	r2, r1, r0, lsl r2
   11b3c:	andeq	r2, r1, r0, lsl r2
   11b40:	andeq	r2, r1, r0, lsl r2
   11b44:	andeq	r2, r1, r0, lsl r2
   11b48:	andeq	r2, r1, r0, lsl r2
   11b4c:	andeq	r2, r1, r0, lsl r2
   11b50:	andeq	r2, r1, r0, lsl r2
   11b54:	andeq	r2, r1, r0, lsl r2
   11b58:	andeq	r2, r1, r0, lsl r2
   11b5c:	andeq	r2, r1, r0, lsl r2
   11b60:	andeq	r2, r1, r0, lsl r2
   11b64:	andeq	r2, r1, r0, lsl r2
   11b68:	andeq	r2, r1, r0, lsl r2
   11b6c:	andeq	r2, r1, r0, lsl r2
   11b70:	andeq	r2, r1, r0, lsl r2
   11b74:	andeq	r2, r1, r0, lsl r2
   11b78:	andeq	r2, r1, r0, lsl r2
   11b7c:	andeq	r2, r1, r0, lsl r2
   11b80:	andeq	r2, r1, r0, lsl r2
   11b84:	andeq	r2, r1, r0, lsl r2
   11b88:	andeq	r2, r1, r0, lsl r2
   11b8c:	andeq	r2, r1, r0, lsl r2
   11b90:	andeq	r2, r1, r0, lsl r2
   11b94:	andeq	r2, r1, r0, lsl r2
   11b98:	andeq	r2, r1, r0, lsl r2
   11b9c:	andeq	r2, r1, r0, lsl r2
   11ba0:	andeq	r2, r1, r0, lsl r2
   11ba4:	andeq	r2, r1, r0, lsl r2
   11ba8:	andeq	r2, r1, r0, lsl r2
   11bac:	andeq	r2, r1, r0, lsl r2
   11bb0:	andeq	r2, r1, r0, lsl r2
   11bb4:	andeq	r2, r1, r0, lsl r2
   11bb8:	andeq	r2, r1, r0, lsl r2
   11bbc:	andeq	r2, r1, r0, lsl r2
   11bc0:	andeq	r2, r1, r0, lsl r2
   11bc4:	andeq	r2, r1, r0, lsl r2
   11bc8:	andeq	r2, r1, r0, lsl r2
   11bcc:	andeq	r2, r1, r0, lsl r2
   11bd0:	andeq	r2, r1, r0, lsl r2
   11bd4:	andeq	r2, r1, r0, lsl r2
   11bd8:	andeq	r2, r1, r0, lsl r2
   11bdc:	andeq	r2, r1, r0, lsl r2
   11be0:	andeq	r2, r1, r0, lsl r2
   11be4:	andeq	r2, r1, r0, lsl r2
   11be8:	andeq	r2, r1, r0, lsl r2
   11bec:	andeq	r2, r1, r0, lsl r2
   11bf0:	andeq	r2, r1, r0, lsl r2
   11bf4:	andeq	r2, r1, r0, lsl r2
   11bf8:	andeq	r2, r1, r0, lsl r2
   11bfc:	andeq	r2, r1, r0, lsl r2
   11c00:	andeq	r2, r1, r0, lsl r2
   11c04:	andeq	r2, r1, r0, lsl r2
   11c08:	andeq	r2, r1, r0, lsl r2
   11c0c:	andeq	r2, r1, r0, lsl r2
   11c10:	andeq	r2, r1, r0, lsl r2
   11c14:	andeq	r2, r1, r0, lsl r2
   11c18:	andeq	r2, r1, r0, lsl r2
   11c1c:	andeq	r2, r1, r0, lsl r2
   11c20:	andeq	r2, r1, r0, lsl r2
   11c24:	andeq	r2, r1, r0, lsl r2
   11c28:	andeq	r2, r1, r0, lsl r2
   11c2c:	andeq	r2, r1, r0, lsl r2
   11c30:	andeq	r2, r1, r0, lsl r2
   11c34:	andeq	r2, r1, r0, lsl r2
   11c38:	andeq	r2, r1, r0, lsl r2
   11c3c:	andeq	r2, r1, r0, lsl r2
   11c40:	andeq	r2, r1, r0, lsl r2
   11c44:	andeq	r2, r1, r0, lsl r2
   11c48:	andeq	r2, r1, r0, lsl r2
   11c4c:	andeq	r2, r1, r0, lsl r2
   11c50:	andeq	r2, r1, r0, lsl r2
   11c54:	andeq	r2, r1, r0, lsl r2
   11c58:	andeq	r2, r1, r0, lsl r2
   11c5c:	andeq	r2, r1, r0, lsl r2
   11c60:	andeq	r2, r1, r0, lsl r2
   11c64:	andeq	r2, r1, r0, lsl r2
   11c68:	andeq	r2, r1, r0, lsl r2
   11c6c:	andeq	r2, r1, r0, lsl r2
   11c70:	andeq	r2, r1, r0, lsl r2
   11c74:	andeq	r2, r1, r0, lsl r2
   11c78:	andeq	r2, r1, r0, lsl r2
   11c7c:	andeq	r2, r1, r0, lsl r2
   11c80:	andeq	r2, r1, r0, lsl r2
   11c84:	andeq	r1, r1, ip, asr #26
   11c88:	andeq	r2, r1, r0, lsl r2
   11c8c:	andeq	r2, r1, r4, lsl r1
   11c90:	andeq	r2, r1, r0, lsl r2
   11c94:			; <UNDEFINED> instruction: 0x00011dbc
   11c98:	andeq	r2, r1, r0, lsl r2
   11c9c:	ldrdeq	r1, [r1], -ip
   11ca0:	muleq	r1, ip, lr
   11ca4:	andeq	r2, r1, r0, lsl r2
   11ca8:	andeq	r2, r1, r0, lsl r2
   11cac:	andeq	r1, r1, r0, lsr #30
   11cb0:	andeq	r2, r1, r0, lsl r2
   11cb4:	andeq	r2, r1, r8, lsl r0
   11cb8:	andeq	r2, r1, r0, lsl r2
   11cbc:	andeq	r1, r1, ip, lsl #30
   11cc0:	andeq	r2, r1, r0, lsl r2
   11cc4:	andeq	r2, r1, r0, lsl r2
   11cc8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11ccc:	andeq	r2, r1, r0, lsl r2
   11cd0:	andeq	r2, r1, r0, lsl r2
   11cd4:	andeq	r1, r1, ip, lsr #28
   11cd8:	andeq	r1, r1, ip, lsr #31
   11cdc:	movw	r0, #37160	; 0x9128
   11ce0:	movt	r0, #4
   11ce4:	movw	r1, #37348	; 0x91e4
   11ce8:	movt	r1, #4
   11cec:	movw	r2, #37380	; 0x9204
   11cf0:	movt	r2, #4
   11cf4:	bl	124f0 <__assert_fail@plt+0xfec>
   11cf8:	tst	r0, #1
   11cfc:	bne	11d48 <__assert_fail@plt+0x844>
   11d00:	movw	r0, #31478	; 0x7af6
   11d04:	movt	r0, #3
   11d08:	bl	113cc <gettext@plt>
   11d0c:	movw	lr, #37336	; 0x91d8
   11d10:	movt	lr, #4
   11d14:	ldr	lr, [lr]
   11d18:	str	r0, [fp, #-52]	; 0xffffffcc
   11d1c:	mov	r0, lr
   11d20:	bl	15c84 <__assert_fail@plt+0x4780>
   11d24:	movw	lr, #0
   11d28:	str	r0, [fp, #-56]	; 0xffffffc8
   11d2c:	mov	r0, lr
   11d30:	mov	r1, lr
   11d34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11d38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11d3c:	bl	1136c <error@plt>
   11d40:	movw	r0, #0
   11d44:	strb	r0, [fp, #-21]	; 0xffffffeb
   11d48:	b	12218 <__assert_fail@plt+0xd14>
   11d4c:	movw	r0, #37164	; 0x912c
   11d50:	movt	r0, #4
   11d54:	movw	r1, #37636	; 0x9304
   11d58:	movt	r1, #4
   11d5c:	movw	r2, #37668	; 0x9324
   11d60:	movt	r2, #4
   11d64:	bl	124f0 <__assert_fail@plt+0xfec>
   11d68:	tst	r0, #1
   11d6c:	bne	11db8 <__assert_fail@plt+0x8b4>
   11d70:	movw	r0, #31513	; 0x7b19
   11d74:	movt	r0, #3
   11d78:	bl	113cc <gettext@plt>
   11d7c:	movw	lr, #37336	; 0x91d8
   11d80:	movt	lr, #4
   11d84:	ldr	lr, [lr]
   11d88:	str	r0, [fp, #-60]	; 0xffffffc4
   11d8c:	mov	r0, lr
   11d90:	bl	15c84 <__assert_fail@plt+0x4780>
   11d94:	movw	lr, #0
   11d98:	str	r0, [fp, #-64]	; 0xffffffc0
   11d9c:	mov	r0, lr
   11da0:	mov	r1, lr
   11da4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11da8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11dac:	bl	1136c <error@plt>
   11db0:	movw	r0, #0
   11db4:	strb	r0, [fp, #-21]	; 0xffffffeb
   11db8:	b	12218 <__assert_fail@plt+0xd14>
   11dbc:	movw	r0, #37168	; 0x9130
   11dc0:	movt	r0, #4
   11dc4:	movw	r1, #37924	; 0x9424
   11dc8:	movt	r1, #4
   11dcc:	movw	r2, #37956	; 0x9444
   11dd0:	movt	r2, #4
   11dd4:	bl	124f0 <__assert_fail@plt+0xfec>
   11dd8:	tst	r0, #1
   11ddc:	bne	11e28 <__assert_fail@plt+0x924>
   11de0:	movw	r0, #31546	; 0x7b3a
   11de4:	movt	r0, #3
   11de8:	bl	113cc <gettext@plt>
   11dec:	movw	lr, #37336	; 0x91d8
   11df0:	movt	lr, #4
   11df4:	ldr	lr, [lr]
   11df8:	str	r0, [fp, #-68]	; 0xffffffbc
   11dfc:	mov	r0, lr
   11e00:	bl	15c84 <__assert_fail@plt+0x4780>
   11e04:	movw	lr, #0
   11e08:	str	r0, [sp, #72]	; 0x48
   11e0c:	mov	r0, lr
   11e10:	mov	r1, lr
   11e14:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11e18:	ldr	r3, [sp, #72]	; 0x48
   11e1c:	bl	1136c <error@plt>
   11e20:	movw	r0, #0
   11e24:	strb	r0, [fp, #-21]	; 0xffffffeb
   11e28:	b	12218 <__assert_fail@plt+0xd14>
   11e2c:	movw	r0, #37336	; 0x91d8
   11e30:	movt	r0, #4
   11e34:	ldr	r0, [r0]
   11e38:	movw	r1, #31581	; 0x7b5d
   11e3c:	movt	r1, #3
   11e40:	str	r0, [sp, #68]	; 0x44
   11e44:	mov	r0, r1
   11e48:	bl	113cc <gettext@plt>
   11e4c:	mov	r1, sp
   11e50:	mov	lr, #0
   11e54:	str	lr, [r1, #16]
   11e58:	str	r0, [r1, #12]
   11e5c:	movw	r0, #32426	; 0x7eaa
   11e60:	movt	r0, #3
   11e64:	str	r0, [r1, #8]
   11e68:	mvn	r0, #-2147483648	; 0x80000000
   11e6c:	str	r0, [r1, #4]
   11e70:	mvn	r0, #0
   11e74:	str	r0, [r1]
   11e78:	mov	r3, #-2147483648	; 0x80000000
   11e7c:	ldr	r0, [sp, #68]	; 0x44
   11e80:	mov	r2, lr
   11e84:	bl	316ec <__assert_fail@plt+0x201e8>
   11e88:	movw	r2, #37176	; 0x9138
   11e8c:	movt	r2, #4
   11e90:	str	r1, [r2, #4]
   11e94:	str	r0, [r2]
   11e98:	b	12218 <__assert_fail@plt+0xd14>
   11e9c:	movw	r0, #37336	; 0x91d8
   11ea0:	movt	r0, #4
   11ea4:	ldr	r0, [r0]
   11ea8:	movw	r1, #31610	; 0x7b7a
   11eac:	movt	r1, #3
   11eb0:	str	r0, [sp, #64]	; 0x40
   11eb4:	mov	r0, r1
   11eb8:	bl	113cc <gettext@plt>
   11ebc:	mov	r1, sp
   11ec0:	mov	lr, #0
   11ec4:	str	lr, [r1, #16]
   11ec8:	str	r0, [r1, #12]
   11ecc:	movw	r0, #32426	; 0x7eaa
   11ed0:	movt	r0, #3
   11ed4:	str	r0, [r1, #8]
   11ed8:	mvn	r0, #-2147483648	; 0x80000000
   11edc:	str	r0, [r1, #4]
   11ee0:	mvn	r0, #0
   11ee4:	str	r0, [r1]
   11ee8:	mov	r3, #-2147483648	; 0x80000000
   11eec:	ldr	r0, [sp, #64]	; 0x40
   11ef0:	mov	r2, lr
   11ef4:	bl	316ec <__assert_fail@plt+0x201e8>
   11ef8:	movw	r2, #37184	; 0x9140
   11efc:	movt	r2, #4
   11f00:	str	r1, [r2, #4]
   11f04:	str	r0, [r2]
   11f08:	b	12218 <__assert_fail@plt+0xd14>
   11f0c:	movw	r0, #37192	; 0x9148
   11f10:	movt	r0, #4
   11f14:	movw	r1, #0
   11f18:	strb	r1, [r0]
   11f1c:	b	12218 <__assert_fail@plt+0xd14>
   11f20:	movw	r0, #37336	; 0x91d8
   11f24:	movt	r0, #4
   11f28:	ldr	r0, [r0]
   11f2c:	movw	r1, #31640	; 0x7b98
   11f30:	movt	r1, #3
   11f34:	str	r0, [sp, #60]	; 0x3c
   11f38:	mov	r0, r1
   11f3c:	bl	113cc <gettext@plt>
   11f40:	mov	r1, sp
   11f44:	mov	lr, #0
   11f48:	str	lr, [r1, #16]
   11f4c:	str	r0, [r1, #12]
   11f50:	movw	r0, #32426	; 0x7eaa
   11f54:	movt	r0, #3
   11f58:	str	r0, [r1, #8]
   11f5c:	mvn	r0, #-2147483648	; 0x80000000
   11f60:	str	r0, [r1, #4]
   11f64:	mvn	r0, #0
   11f68:	str	r0, [r1]
   11f6c:	mov	r2, #1
   11f70:	ldr	r0, [sp, #60]	; 0x3c
   11f74:	mov	r3, lr
   11f78:	bl	316ec <__assert_fail@plt+0x201e8>
   11f7c:	movw	r2, #37200	; 0x9150
   11f80:	movt	r2, #4
   11f84:	str	r1, [r2, #4]
   11f88:	str	r0, [r2]
   11f8c:	b	12218 <__assert_fail@plt+0xd14>
   11f90:	movw	r0, #37336	; 0x91d8
   11f94:	movt	r0, #4
   11f98:	ldr	r0, [r0]
   11f9c:	movw	r1, #37208	; 0x9158
   11fa0:	movt	r1, #4
   11fa4:	str	r0, [r1]
   11fa8:	b	12218 <__assert_fail@plt+0xd14>
   11fac:	movw	r0, #37336	; 0x91d8
   11fb0:	movt	r0, #4
   11fb4:	ldr	r0, [r0]
   11fb8:	movw	r1, #31675	; 0x7bbb
   11fbc:	movt	r1, #3
   11fc0:	str	r0, [sp, #56]	; 0x38
   11fc4:	mov	r0, r1
   11fc8:	bl	113cc <gettext@plt>
   11fcc:	mov	r1, sp
   11fd0:	mov	lr, #0
   11fd4:	str	lr, [r1, #16]
   11fd8:	str	r0, [r1, #12]
   11fdc:	movw	r0, #32426	; 0x7eaa
   11fe0:	movt	r0, #3
   11fe4:	str	r0, [r1, #8]
   11fe8:	str	lr, [r1, #4]
   11fec:	mvn	r0, #-2147483648	; 0x80000000
   11ff0:	str	r0, [r1]
   11ff4:	mov	r2, #1
   11ff8:	ldr	r0, [sp, #56]	; 0x38
   11ffc:	mov	r3, lr
   12000:	bl	316ec <__assert_fail@plt+0x201e8>
   12004:	movw	r2, #37212	; 0x915c
   12008:	movt	r2, #4
   1200c:	str	r0, [r2]
   12010:	str	r1, [sp, #52]	; 0x34
   12014:	b	12218 <__assert_fail@plt+0xd14>
   12018:	movw	r0, #37336	; 0x91d8
   1201c:	movt	r0, #4
   12020:	ldr	r0, [r0]
   12024:	movw	r1, #31707	; 0x7bdb
   12028:	movt	r1, #3
   1202c:	bl	11234 <strcmp@plt>
   12030:	cmp	r0, #0
   12034:	bne	12050 <__assert_fail@plt+0xb4c>
   12038:	movw	r0, #37216	; 0x9160
   1203c:	movt	r0, #4
   12040:	movw	r1, #32708	; 0x7fc4
   12044:	movt	r1, #3
   12048:	str	r1, [r0]
   1204c:	b	12110 <__assert_fail@plt+0xc0c>
   12050:	movw	r0, #37336	; 0x91d8
   12054:	movt	r0, #4
   12058:	ldr	r0, [r0]
   1205c:	movw	r1, #31710	; 0x7bde
   12060:	movt	r1, #3
   12064:	bl	11234 <strcmp@plt>
   12068:	cmp	r0, #0
   1206c:	bne	12088 <__assert_fail@plt+0xb84>
   12070:	movw	r0, #37216	; 0x9160
   12074:	movt	r0, #4
   12078:	movw	r1, #32717	; 0x7fcd
   1207c:	movt	r1, #3
   12080:	str	r1, [r0]
   12084:	b	1210c <__assert_fail@plt+0xc08>
   12088:	movw	r0, #37336	; 0x91d8
   1208c:	movt	r0, #4
   12090:	ldr	r0, [r0]
   12094:	movw	r1, #31713	; 0x7be1
   12098:	movt	r1, #3
   1209c:	bl	11234 <strcmp@plt>
   120a0:	cmp	r0, #0
   120a4:	bne	120c0 <__assert_fail@plt+0xbbc>
   120a8:	movw	r0, #37216	; 0x9160
   120ac:	movt	r0, #4
   120b0:	movw	r1, #32725	; 0x7fd5
   120b4:	movt	r1, #3
   120b8:	str	r1, [r0]
   120bc:	b	12108 <__assert_fail@plt+0xc04>
   120c0:	movw	r0, #31716	; 0x7be4
   120c4:	movt	r0, #3
   120c8:	bl	113cc <gettext@plt>
   120cc:	movw	lr, #37336	; 0x91d8
   120d0:	movt	lr, #4
   120d4:	ldr	lr, [lr]
   120d8:	str	r0, [sp, #48]	; 0x30
   120dc:	mov	r0, lr
   120e0:	bl	15c84 <__assert_fail@plt+0x4780>
   120e4:	movw	lr, #0
   120e8:	str	r0, [sp, #44]	; 0x2c
   120ec:	mov	r0, lr
   120f0:	mov	r1, lr
   120f4:	ldr	r2, [sp, #48]	; 0x30
   120f8:	ldr	r3, [sp, #44]	; 0x2c
   120fc:	bl	1136c <error@plt>
   12100:	movw	r0, #0
   12104:	strb	r0, [fp, #-21]	; 0xffffffeb
   12108:	b	1210c <__assert_fail@plt+0xc08>
   1210c:	b	12110 <__assert_fail@plt+0xc0c>
   12110:	b	12218 <__assert_fail@plt+0xd14>
   12114:	movw	r0, #37336	; 0x91d8
   12118:	movt	r0, #4
   1211c:	ldr	r0, [r0]
   12120:	bl	113d8 <strlen@plt>
   12124:	str	r0, [fp, #-20]	; 0xffffffec
   12128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1212c:	cmp	r0, #1
   12130:	beq	12140 <__assert_fail@plt+0xc3c>
   12134:	ldr	r0, [fp, #-20]	; 0xffffffec
   12138:	cmp	r0, #2
   1213c:	bne	12198 <__assert_fail@plt+0xc94>
   12140:	movw	r0, #37220	; 0x9164
   12144:	movt	r0, #4
   12148:	ldr	r0, [r0]
   1214c:	str	r0, [fp, #-28]	; 0xffffffe4
   12150:	movw	r0, #37336	; 0x91d8
   12154:	movt	r0, #4
   12158:	ldr	r0, [r0]
   1215c:	ldrsb	r0, [r0]
   12160:	cmp	r0, #0
   12164:	beq	12194 <__assert_fail@plt+0xc90>
   12168:	movw	r0, #37336	; 0x91d8
   1216c:	movt	r0, #4
   12170:	ldr	r1, [r0]
   12174:	add	r2, r1, #1
   12178:	str	r2, [r0]
   1217c:	ldrb	r0, [r1]
   12180:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12184:	add	r2, r1, #1
   12188:	str	r2, [fp, #-28]	; 0xffffffe4
   1218c:	strb	r0, [r1]
   12190:	b	12150 <__assert_fail@plt+0xc4c>
   12194:	b	121b0 <__assert_fail@plt+0xcac>
   12198:	movw	r0, #37336	; 0x91d8
   1219c:	movt	r0, #4
   121a0:	ldr	r0, [r0]
   121a4:	movw	r1, #37220	; 0x9164
   121a8:	movt	r1, #4
   121ac:	str	r0, [r1]
   121b0:	b	12218 <__assert_fail@plt+0xd14>
   121b4:	movw	r0, #0
   121b8:	bl	11600 <__assert_fail@plt+0xfc>
   121bc:	movw	r0, #37332	; 0x91d4
   121c0:	movt	r0, #4
   121c4:	ldr	r0, [r0]
   121c8:	movw	r1, #37228	; 0x916c
   121cc:	movt	r1, #4
   121d0:	ldr	r3, [r1]
   121d4:	movw	r1, #31429	; 0x7ac5
   121d8:	movt	r1, #3
   121dc:	movw	r2, #31750	; 0x7c06
   121e0:	movt	r2, #3
   121e4:	movw	ip, #31764	; 0x7c14
   121e8:	movt	ip, #3
   121ec:	str	ip, [sp]
   121f0:	movw	ip, #31778	; 0x7c22
   121f4:	movt	ip, #3
   121f8:	str	ip, [sp, #4]
   121fc:	movw	ip, #0
   12200:	str	ip, [sp, #8]
   12204:	bl	2e4ec <__assert_fail@plt+0x1cfe8>
   12208:	movw	r0, #0
   1220c:	bl	113c0 <exit@plt>
   12210:	movw	r0, #0
   12214:	strb	r0, [fp, #-21]	; 0xffffffeb
   12218:	b	11a9c <__assert_fail@plt+0x598>
   1221c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12220:	tst	r0, #1
   12224:	bne	12230 <__assert_fail@plt+0xd2c>
   12228:	movw	r0, #1
   1222c:	bl	11600 <__assert_fail@plt+0xfc>
   12230:	movw	r0, #37220	; 0x9164
   12234:	movt	r0, #4
   12238:	ldr	r1, [r0]
   1223c:	str	r0, [sp, #40]	; 0x28
   12240:	mov	r0, r1
   12244:	bl	113d8 <strlen@plt>
   12248:	str	r0, [fp, #-20]	; 0xffffffec
   1224c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12250:	add	r0, r0, r0, lsl #1
   12254:	movw	r1, #38212	; 0x9544
   12258:	movt	r1, #4
   1225c:	str	r0, [r1]
   12260:	ldr	r0, [r1]
   12264:	add	r0, r0, #1
   12268:	bl	2e67c <__assert_fail@plt+0x1d178>
   1226c:	movw	r1, #38216	; 0x9548
   12270:	movt	r1, #4
   12274:	str	r0, [r1]
   12278:	ldr	r0, [r1]
   1227c:	ldr	lr, [sp, #40]	; 0x28
   12280:	ldr	r2, [lr]
   12284:	str	r1, [sp, #36]	; 0x24
   12288:	mov	r1, r2
   1228c:	bl	112f4 <stpcpy@plt>
   12290:	ldr	r1, [sp, #40]	; 0x28
   12294:	ldr	r1, [r1]
   12298:	bl	112f4 <stpcpy@plt>
   1229c:	ldr	r1, [sp, #40]	; 0x28
   122a0:	ldr	r1, [r1]
   122a4:	bl	112f4 <stpcpy@plt>
   122a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   122ac:	lsl	r1, r1, #1
   122b0:	movw	r2, #38220	; 0x954c
   122b4:	movt	r2, #4
   122b8:	str	r1, [r2]
   122bc:	ldr	r1, [sp, #36]	; 0x24
   122c0:	ldr	r2, [r1]
   122c4:	ldr	lr, [fp, #-20]	; 0xffffffec
   122c8:	add	r2, r2, lr
   122cc:	movw	lr, #38224	; 0x9550
   122d0:	movt	lr, #4
   122d4:	str	r2, [lr]
   122d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   122dc:	movw	r3, #38228	; 0x9554
   122e0:	movt	r3, #4
   122e4:	str	r2, [r3]
   122e8:	ldr	r2, [lr]
   122ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   122f0:	add	r2, r2, r3
   122f4:	movw	r3, #38232	; 0x9558
   122f8:	movt	r3, #4
   122fc:	str	r2, [r3]
   12300:	movw	r2, #38236	; 0x955c
   12304:	movt	r2, #4
   12308:	str	r0, [sp, #32]
   1230c:	mov	r0, r2
   12310:	bl	1341c <__assert_fail@plt+0x1f18>
   12314:	movw	r0, #37208	; 0x9158
   12318:	movt	r0, #4
   1231c:	ldr	r0, [r0]
   12320:	bl	113d8 <strlen@plt>
   12324:	str	r0, [fp, #-20]	; 0xffffffec
   12328:	movw	r0, #37212	; 0x915c
   1232c:	movt	r0, #4
   12330:	ldr	r1, [r0]
   12334:	ldr	r2, [fp, #-20]	; 0xffffffec
   12338:	add	r1, r1, r2
   1233c:	add	r1, r1, #1
   12340:	str	r0, [sp, #28]
   12344:	mov	r0, r1
   12348:	bl	2e67c <__assert_fail@plt+0x1d178>
   1234c:	movw	r1, #38248	; 0x9568
   12350:	movt	r1, #4
   12354:	str	r0, [r1]
   12358:	ldr	r0, [r1]
   1235c:	ldr	r2, [sp, #28]
   12360:	ldr	r3, [r2]
   12364:	ldr	lr, [fp, #-20]	; 0xffffffec
   12368:	add	r2, r3, lr
   1236c:	mov	r3, #32
   12370:	str	r1, [sp, #24]
   12374:	mov	r1, r3
   12378:	bl	11420 <memset@plt>
   1237c:	ldr	r1, [sp, #24]
   12380:	ldr	r2, [r1]
   12384:	ldr	r3, [sp, #28]
   12388:	ldr	lr, [r3]
   1238c:	ldr	ip, [fp, #-20]	; 0xffffffec
   12390:	add	ip, lr, ip
   12394:	mov	lr, #0
   12398:	strb	lr, [r2, ip]
   1239c:	movw	r2, #37176	; 0x9138
   123a0:	movt	r2, #4
   123a4:	ldr	ip, [r2]
   123a8:	ldr	r2, [r2, #4]
   123ac:	movw	lr, #38256	; 0x9570
   123b0:	movt	lr, #4
   123b4:	str	r2, [lr, #4]
   123b8:	str	ip, [lr]
   123bc:	movw	r2, #37164	; 0x912c
   123c0:	movt	r2, #4
   123c4:	ldr	r2, [r2]
   123c8:	movw	ip, #38264	; 0x9578
   123cc:	movt	ip, #4
   123d0:	str	r2, [ip]
   123d4:	movw	r2, #38268	; 0x957c
   123d8:	movt	r2, #4
   123dc:	movw	ip, #37636	; 0x9304
   123e0:	movt	ip, #4
   123e4:	str	ip, [r2]
   123e8:	movw	r2, #37312	; 0x91c0
   123ec:	movt	r2, #4
   123f0:	ldr	r2, [r2]
   123f4:	ldr	ip, [fp, #-8]
   123f8:	cmp	r2, ip
   123fc:	str	r0, [sp, #20]
   12400:	bne	1241c <__assert_fail@plt+0xf18>
   12404:	movw	r0, #32892	; 0x807c
   12408:	movt	r0, #3
   1240c:	bl	1266c <__assert_fail@plt+0x1168>
   12410:	and	r0, r0, #1
   12414:	strb	r0, [fp, #-21]	; 0xffffffeb
   12418:	b	12494 <__assert_fail@plt+0xf90>
   1241c:	b	12420 <__assert_fail@plt+0xf1c>
   12420:	movw	r0, #37312	; 0x91c0
   12424:	movt	r0, #4
   12428:	ldr	r0, [r0]
   1242c:	ldr	r1, [fp, #-8]
   12430:	cmp	r0, r1
   12434:	bge	12490 <__assert_fail@plt+0xf8c>
   12438:	ldr	r0, [fp, #-12]
   1243c:	movw	r1, #37312	; 0x91c0
   12440:	movt	r1, #4
   12444:	ldr	r1, [r1]
   12448:	add	r0, r0, r1, lsl #2
   1244c:	ldr	r0, [r0]
   12450:	bl	1266c <__assert_fail@plt+0x1168>
   12454:	and	r0, r0, #1
   12458:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   1245c:	and	r1, r1, #1
   12460:	and	r0, r1, r0
   12464:	cmp	r0, #0
   12468:	movw	r0, #0
   1246c:	movne	r0, #1
   12470:	and	r0, r0, #1
   12474:	strb	r0, [fp, #-21]	; 0xffffffeb
   12478:	movw	r0, #37312	; 0x91c0
   1247c:	movt	r0, #4
   12480:	ldr	r1, [r0]
   12484:	add	r1, r1, #1
   12488:	str	r1, [r0]
   1248c:	b	12420 <__assert_fail@plt+0xf1c>
   12490:	b	12494 <__assert_fail@plt+0xf90>
   12494:	movw	r0, #37344	; 0x91e0
   12498:	movt	r0, #4
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	beq	124d8 <__assert_fail@plt+0xfd4>
   124a8:	movw	r0, #37328	; 0x91d0
   124ac:	movt	r0, #4
   124b0:	ldr	r0, [r0]
   124b4:	bl	13174 <__assert_fail@plt+0x1c70>
   124b8:	cmn	r0, #1
   124bc:	bne	124d8 <__assert_fail@plt+0xfd4>
   124c0:	bl	113fc <__errno_location@plt>
   124c4:	ldr	r1, [r0]
   124c8:	movw	r0, #1
   124cc:	movw	r2, #32892	; 0x807c
   124d0:	movt	r2, #3
   124d4:	bl	1136c <error@plt>
   124d8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   124dc:	tst	r0, #1
   124e0:	movw	r0, #0
   124e4:	moveq	r0, #1
   124e8:	mov	sp, fp
   124ec:	pop	{fp, pc}
   124f0:	push	{fp, lr}
   124f4:	mov	fp, sp
   124f8:	sub	sp, sp, #32
   124fc:	str	r0, [fp, #-4]
   12500:	str	r1, [fp, #-8]
   12504:	str	r2, [fp, #-12]
   12508:	mov	r0, #1
   1250c:	strb	r0, [sp, #15]
   12510:	movw	r0, #37336	; 0x91d8
   12514:	movt	r0, #4
   12518:	ldr	r0, [r0]
   1251c:	ldrb	r0, [r0]
   12520:	sub	r0, r0, #97	; 0x61
   12524:	cmp	r0, #19
   12528:	str	r0, [sp, #8]
   1252c:	bhi	12654 <__assert_fail@plt+0x1150>
   12530:	add	r0, pc, #8
   12534:	ldr	r1, [sp, #8]
   12538:	ldr	r0, [r0, r1, lsl #2]
   1253c:	mov	pc, r0
   12540:	muleq	r1, r0, r5
   12544:	andeq	r2, r1, r4, asr r6
   12548:	andeq	r2, r1, r4, asr r6
   1254c:	andeq	r2, r1, r4, asr r6
   12550:	andeq	r2, r1, r4, asr r6
   12554:	andeq	r2, r1, r4, asr r6
   12558:	andeq	r2, r1, r4, asr r6
   1255c:	andeq	r2, r1, r4, asr r6
   12560:	andeq	r2, r1, r4, asr r6
   12564:	andeq	r2, r1, r4, asr r6
   12568:	andeq	r2, r1, r4, asr r6
   1256c:	andeq	r2, r1, r4, asr r6
   12570:	andeq	r2, r1, r4, asr r6
   12574:	muleq	r1, r0, r5
   12578:	andeq	r2, r1, r4, asr r6
   1257c:	andeq	r2, r1, r8, lsr #11
   12580:	andeq	r2, r1, r4, asr r6
   12584:	andeq	r2, r1, r4, asr r6
   12588:	andeq	r2, r1, r4, asr r6
   1258c:	muleq	r1, r0, r5
   12590:	movw	r0, #37336	; 0x91d8
   12594:	movt	r0, #4
   12598:	ldr	r0, [r0]
   1259c:	ldr	r1, [fp, #-4]
   125a0:	str	r0, [r1]
   125a4:	b	1265c <__assert_fail@plt+0x1158>
   125a8:	movw	r0, #37336	; 0x91d8
   125ac:	movt	r0, #4
   125b0:	ldr	r1, [r0]
   125b4:	add	r2, r1, #1
   125b8:	str	r2, [r0]
   125bc:	ldr	r2, [fp, #-4]
   125c0:	str	r1, [r2]
   125c4:	ldr	r1, [fp, #-8]
   125c8:	movw	r2, #0
   125cc:	str	r2, [r1]
   125d0:	ldr	r1, [fp, #-8]
   125d4:	str	r2, [r1, #4]
   125d8:	ldr	r1, [fp, #-12]
   125dc:	ldr	r3, [fp, #-8]
   125e0:	str	r1, [r3, #16]
   125e4:	ldr	r1, [fp, #-8]
   125e8:	str	r2, [r1, #20]
   125ec:	movw	r1, #38604	; 0x96cc
   125f0:	movt	r1, #4
   125f4:	movw	r2, #710	; 0x2c6
   125f8:	str	r2, [r1]
   125fc:	ldr	r1, [r0]
   12600:	ldr	r0, [r0]
   12604:	str	r1, [sp, #4]
   12608:	bl	113d8 <strlen@plt>
   1260c:	ldr	r2, [fp, #-8]
   12610:	ldr	r1, [sp, #4]
   12614:	str	r0, [sp]
   12618:	mov	r0, r1
   1261c:	ldr	r1, [sp]
   12620:	bl	15dbc <__assert_fail@plt+0x48b8>
   12624:	str	r0, [sp, #16]
   12628:	ldr	r0, [sp, #16]
   1262c:	movw	r1, #0
   12630:	cmp	r0, r1
   12634:	beq	12650 <__assert_fail@plt+0x114c>
   12638:	ldr	r3, [sp, #16]
   1263c:	movw	r0, #1
   12640:	movw	r1, #0
   12644:	movw	r2, #31510	; 0x7b16
   12648:	movt	r2, #3
   1264c:	bl	1136c <error@plt>
   12650:	b	1265c <__assert_fail@plt+0x1158>
   12654:	movw	r0, #0
   12658:	strb	r0, [sp, #15]
   1265c:	ldrb	r0, [sp, #15]
   12660:	and	r0, r0, #1
   12664:	mov	sp, fp
   12668:	pop	{fp, pc}
   1266c:	push	{fp, lr}
   12670:	mov	fp, sp
   12674:	sub	sp, sp, #32
   12678:	str	r0, [fp, #-8]
   1267c:	ldr	r0, [fp, #-8]
   12680:	movw	r1, #32892	; 0x807c
   12684:	movt	r1, #3
   12688:	bl	11234 <strcmp@plt>
   1268c:	cmp	r0, #0
   12690:	bne	126b8 <__assert_fail@plt+0x11b4>
   12694:	movw	r0, #37344	; 0x91e0
   12698:	movt	r0, #4
   1269c:	movw	r1, #1
   126a0:	strb	r1, [r0]
   126a4:	movw	r0, #37328	; 0x91d0
   126a8:	movt	r0, #4
   126ac:	ldr	r0, [r0]
   126b0:	str	r0, [fp, #-12]
   126b4:	b	12730 <__assert_fail@plt+0x122c>
   126b8:	ldr	r0, [fp, #-8]
   126bc:	movw	r1, #31608	; 0x7b78
   126c0:	movt	r1, #3
   126c4:	bl	114a4 <fopen64@plt>
   126c8:	str	r0, [fp, #-12]
   126cc:	ldr	r0, [fp, #-12]
   126d0:	movw	r1, #0
   126d4:	cmp	r0, r1
   126d8:	bne	1272c <__assert_fail@plt+0x1228>
   126dc:	bl	113fc <__errno_location@plt>
   126e0:	ldr	r1, [r0]
   126e4:	ldr	r2, [fp, #-8]
   126e8:	movw	r0, #0
   126ec:	movw	lr, #3
   126f0:	str	r1, [sp, #12]
   126f4:	mov	r1, lr
   126f8:	bl	15a40 <__assert_fail@plt+0x453c>
   126fc:	movw	r1, #0
   12700:	str	r0, [sp, #8]
   12704:	mov	r0, r1
   12708:	ldr	r1, [sp, #12]
   1270c:	movw	r2, #31510	; 0x7b16
   12710:	movt	r2, #3
   12714:	ldr	r3, [sp, #8]
   12718:	bl	1136c <error@plt>
   1271c:	movw	r0, #0
   12720:	and	r0, r0, #1
   12724:	strb	r0, [fp, #-1]
   12728:	b	1281c <__assert_fail@plt+0x1318>
   1272c:	b	12730 <__assert_fail@plt+0x122c>
   12730:	ldr	r0, [fp, #-12]
   12734:	movw	r1, #2
   12738:	bl	1311c <__assert_fail@plt+0x1c18>
   1273c:	ldr	r0, [fp, #-12]
   12740:	bl	1282c <__assert_fail@plt+0x1328>
   12744:	bl	113fc <__errno_location@plt>
   12748:	ldr	r0, [r0]
   1274c:	str	r0, [sp, #16]
   12750:	ldr	r0, [fp, #-12]
   12754:	bl	11354 <ferror_unlocked@plt>
   12758:	cmp	r0, #0
   1275c:	bne	12768 <__assert_fail@plt+0x1264>
   12760:	movw	r0, #0
   12764:	str	r0, [sp, #16]
   12768:	ldr	r0, [fp, #-8]
   1276c:	movw	r1, #32892	; 0x807c
   12770:	movt	r1, #3
   12774:	bl	11234 <strcmp@plt>
   12778:	cmp	r0, #0
   1277c:	bne	1278c <__assert_fail@plt+0x1288>
   12780:	ldr	r0, [fp, #-12]
   12784:	bl	11498 <clearerr_unlocked@plt>
   12788:	b	127b8 <__assert_fail@plt+0x12b4>
   1278c:	ldr	r0, [fp, #-12]
   12790:	bl	13174 <__assert_fail@plt+0x1c70>
   12794:	cmp	r0, #0
   12798:	beq	127b4 <__assert_fail@plt+0x12b0>
   1279c:	ldr	r0, [sp, #16]
   127a0:	cmp	r0, #0
   127a4:	bne	127b4 <__assert_fail@plt+0x12b0>
   127a8:	bl	113fc <__errno_location@plt>
   127ac:	ldr	r0, [r0]
   127b0:	str	r0, [sp, #16]
   127b4:	b	127b8 <__assert_fail@plt+0x12b4>
   127b8:	ldr	r0, [sp, #16]
   127bc:	cmp	r0, #0
   127c0:	beq	12810 <__assert_fail@plt+0x130c>
   127c4:	ldr	r1, [sp, #16]
   127c8:	ldr	r2, [fp, #-8]
   127cc:	movw	r0, #0
   127d0:	movw	r3, #3
   127d4:	str	r1, [sp, #4]
   127d8:	mov	r1, r3
   127dc:	bl	15a40 <__assert_fail@plt+0x453c>
   127e0:	movw	r1, #0
   127e4:	str	r0, [sp]
   127e8:	mov	r0, r1
   127ec:	ldr	r1, [sp, #4]
   127f0:	movw	r2, #31510	; 0x7b16
   127f4:	movt	r2, #3
   127f8:	ldr	r3, [sp]
   127fc:	bl	1136c <error@plt>
   12800:	movw	r0, #0
   12804:	and	r0, r0, #1
   12808:	strb	r0, [fp, #-1]
   1280c:	b	1281c <__assert_fail@plt+0x1318>
   12810:	movw	r0, #1
   12814:	and	r0, r0, #1
   12818:	strb	r0, [fp, #-1]
   1281c:	ldrb	r0, [fp, #-1]
   12820:	and	r0, r0, #1
   12824:	mov	sp, fp
   12828:	pop	{fp, pc}
   1282c:	push	{fp, lr}
   12830:	mov	fp, sp
   12834:	sub	sp, sp, #8
   12838:	str	r0, [sp, #4]
   1283c:	ldr	r1, [sp, #4]
   12840:	movw	r0, #38236	; 0x955c
   12844:	movt	r0, #4
   12848:	bl	13448 <__assert_fail@plt+0x1f44>
   1284c:	movw	r1, #0
   12850:	cmp	r0, r1
   12854:	beq	128ac <__assert_fail@plt+0x13a8>
   12858:	bl	128b4 <__assert_fail@plt+0x13b0>
   1285c:	mov	lr, r0
   12860:	cmp	r0, #3
   12864:	str	lr, [sp]
   12868:	bhi	128a8 <__assert_fail@plt+0x13a4>
   1286c:	add	r0, pc, #8
   12870:	ldr	r1, [sp]
   12874:	ldr	r0, [r0, r1, lsl #2]
   12878:	mov	pc, r0
   1287c:	andeq	r2, r1, ip, lsl #17
   12880:	muleq	r1, r4, r8
   12884:	muleq	r1, ip, r8
   12888:	andeq	r2, r1, r4, lsr #17
   1288c:	bl	12a44 <__assert_fail@plt+0x1540>
   12890:	b	128a8 <__assert_fail@plt+0x13a4>
   12894:	bl	12a94 <__assert_fail@plt+0x1590>
   12898:	b	128a8 <__assert_fail@plt+0x13a4>
   1289c:	bl	12ae4 <__assert_fail@plt+0x15e0>
   128a0:	b	128a8 <__assert_fail@plt+0x13a4>
   128a4:	bl	12b34 <__assert_fail@plt+0x1630>
   128a8:	b	1283c <__assert_fail@plt+0x1338>
   128ac:	mov	sp, fp
   128b0:	pop	{fp, pc}
   128b4:	push	{fp, lr}
   128b8:	mov	fp, sp
   128bc:	sub	sp, sp, #8
   128c0:	movw	r0, #38236	; 0x955c
   128c4:	movt	r0, #4
   128c8:	ldr	r0, [r0, #4]
   128cc:	sub	r0, r0, #1
   128d0:	str	r0, [sp]
   128d4:	ldr	r0, [sp]
   128d8:	cmp	r0, #2
   128dc:	bcc	12928 <__assert_fail@plt+0x1424>
   128e0:	movw	r0, #38228	; 0x9554
   128e4:	movt	r0, #4
   128e8:	ldr	r0, [r0]
   128ec:	cmp	r0, #2
   128f0:	bcc	12928 <__assert_fail@plt+0x1424>
   128f4:	movw	r0, #38236	; 0x955c
   128f8:	movt	r0, #4
   128fc:	ldr	r0, [r0, #8]
   12900:	movw	r1, #37220	; 0x9164
   12904:	movt	r1, #4
   12908:	ldr	r1, [r1]
   1290c:	ldrh	r1, [r1]
   12910:	ldrh	r0, [r0]
   12914:	sub	r2, r0, r1
   12918:	cmp	r0, r1
   1291c:	movwne	r2, #1
   12920:	cmp	r2, #0
   12924:	beq	12934 <__assert_fail@plt+0x1430>
   12928:	movw	r0, #3
   1292c:	str	r0, [sp, #4]
   12930:	b	12a38 <__assert_fail@plt+0x1534>
   12934:	ldr	r0, [sp]
   12938:	movw	r1, #38212	; 0x9544
   1293c:	movt	r1, #4
   12940:	ldr	r1, [r1]
   12944:	cmp	r0, r1
   12948:	bne	12988 <__assert_fail@plt+0x1484>
   1294c:	movw	r0, #38236	; 0x955c
   12950:	movt	r0, #4
   12954:	ldr	r0, [r0, #8]
   12958:	movw	r1, #38216	; 0x9548
   1295c:	movt	r1, #4
   12960:	ldr	r1, [r1]
   12964:	movw	r2, #38212	; 0x9544
   12968:	movt	r2, #4
   1296c:	ldr	r2, [r2]
   12970:	bl	112e8 <memcmp@plt>
   12974:	cmp	r0, #0
   12978:	bne	12988 <__assert_fail@plt+0x1484>
   1297c:	movw	r0, #0
   12980:	str	r0, [sp, #4]
   12984:	b	12a38 <__assert_fail@plt+0x1534>
   12988:	ldr	r0, [sp]
   1298c:	movw	r1, #38220	; 0x954c
   12990:	movt	r1, #4
   12994:	ldr	r1, [r1]
   12998:	cmp	r0, r1
   1299c:	bne	129dc <__assert_fail@plt+0x14d8>
   129a0:	movw	r0, #38236	; 0x955c
   129a4:	movt	r0, #4
   129a8:	ldr	r0, [r0, #8]
   129ac:	movw	r1, #38224	; 0x9550
   129b0:	movt	r1, #4
   129b4:	ldr	r1, [r1]
   129b8:	movw	r2, #38220	; 0x954c
   129bc:	movt	r2, #4
   129c0:	ldr	r2, [r2]
   129c4:	bl	112e8 <memcmp@plt>
   129c8:	cmp	r0, #0
   129cc:	bne	129dc <__assert_fail@plt+0x14d8>
   129d0:	movw	r0, #1
   129d4:	str	r0, [sp, #4]
   129d8:	b	12a38 <__assert_fail@plt+0x1534>
   129dc:	ldr	r0, [sp]
   129e0:	movw	r1, #38228	; 0x9554
   129e4:	movt	r1, #4
   129e8:	ldr	r1, [r1]
   129ec:	cmp	r0, r1
   129f0:	bne	12a30 <__assert_fail@plt+0x152c>
   129f4:	movw	r0, #38236	; 0x955c
   129f8:	movt	r0, #4
   129fc:	ldr	r0, [r0, #8]
   12a00:	movw	r1, #38232	; 0x9558
   12a04:	movt	r1, #4
   12a08:	ldr	r1, [r1]
   12a0c:	movw	r2, #38228	; 0x9554
   12a10:	movt	r2, #4
   12a14:	ldr	r2, [r2]
   12a18:	bl	112e8 <memcmp@plt>
   12a1c:	cmp	r0, #0
   12a20:	bne	12a30 <__assert_fail@plt+0x152c>
   12a24:	movw	r0, #2
   12a28:	str	r0, [sp, #4]
   12a2c:	b	12a38 <__assert_fail@plt+0x1534>
   12a30:	movw	r0, #3
   12a34:	str	r0, [sp, #4]
   12a38:	ldr	r0, [sp, #4]
   12a3c:	mov	sp, fp
   12a40:	pop	{fp, pc}
   12a44:	push	{fp, lr}
   12a48:	mov	fp, sp
   12a4c:	sub	sp, sp, #8
   12a50:	movw	r0, #37160	; 0x9128
   12a54:	movt	r0, #4
   12a58:	ldr	r0, [r0]
   12a5c:	movw	r1, #38264	; 0x9578
   12a60:	movt	r1, #4
   12a64:	str	r0, [r1]
   12a68:	movw	r0, #38268	; 0x957c
   12a6c:	movt	r0, #4
   12a70:	movw	r1, #37348	; 0x91e4
   12a74:	movt	r1, #4
   12a78:	str	r1, [r0]
   12a7c:	bl	12de4 <__assert_fail@plt+0x18e0>
   12a80:	movw	r0, #10
   12a84:	bl	114f8 <putchar_unlocked@plt>
   12a88:	str	r0, [sp, #4]
   12a8c:	mov	sp, fp
   12a90:	pop	{fp, pc}
   12a94:	push	{fp, lr}
   12a98:	mov	fp, sp
   12a9c:	sub	sp, sp, #8
   12aa0:	movw	r0, #37164	; 0x912c
   12aa4:	movt	r0, #4
   12aa8:	ldr	r0, [r0]
   12aac:	movw	r1, #38264	; 0x9578
   12ab0:	movt	r1, #4
   12ab4:	str	r0, [r1]
   12ab8:	movw	r0, #38268	; 0x957c
   12abc:	movt	r0, #4
   12ac0:	movw	r1, #37636	; 0x9304
   12ac4:	movt	r1, #4
   12ac8:	str	r1, [r0]
   12acc:	bl	12de4 <__assert_fail@plt+0x18e0>
   12ad0:	movw	r0, #10
   12ad4:	bl	114f8 <putchar_unlocked@plt>
   12ad8:	str	r0, [sp, #4]
   12adc:	mov	sp, fp
   12ae0:	pop	{fp, pc}
   12ae4:	push	{fp, lr}
   12ae8:	mov	fp, sp
   12aec:	sub	sp, sp, #8
   12af0:	movw	r0, #37168	; 0x9130
   12af4:	movt	r0, #4
   12af8:	ldr	r0, [r0]
   12afc:	movw	r1, #38264	; 0x9578
   12b00:	movt	r1, #4
   12b04:	str	r0, [r1]
   12b08:	movw	r0, #38268	; 0x957c
   12b0c:	movt	r0, #4
   12b10:	movw	r1, #37924	; 0x9424
   12b14:	movt	r1, #4
   12b18:	str	r1, [r0]
   12b1c:	bl	12de4 <__assert_fail@plt+0x18e0>
   12b20:	movw	r0, #10
   12b24:	bl	114f8 <putchar_unlocked@plt>
   12b28:	str	r0, [sp, #4]
   12b2c:	mov	sp, fp
   12b30:	pop	{fp, pc}
   12b34:	push	{fp, lr}
   12b38:	mov	fp, sp
   12b3c:	sub	sp, sp, #56	; 0x38
   12b40:	movw	r0, #38264	; 0x9578
   12b44:	movt	r0, #4
   12b48:	ldr	r0, [r0]
   12b4c:	ldrb	r0, [r0]
   12b50:	sub	r0, r0, #97	; 0x61
   12b54:	cmp	r0, #19
   12b58:	str	r0, [fp, #-4]
   12b5c:	bhi	12db0 <__assert_fail@plt+0x18ac>
   12b60:	add	r0, pc, #8
   12b64:	ldr	r1, [fp, #-4]
   12b68:	ldr	r0, [r0, r1, lsl #2]
   12b6c:	mov	pc, r0
   12b70:	andeq	r2, r1, r0, asr #23
   12b74:			; <UNDEFINED> instruction: 0x00012db0
   12b78:			; <UNDEFINED> instruction: 0x00012db0
   12b7c:			; <UNDEFINED> instruction: 0x00012db0
   12b80:			; <UNDEFINED> instruction: 0x00012db0
   12b84:			; <UNDEFINED> instruction: 0x00012db0
   12b88:			; <UNDEFINED> instruction: 0x00012db0
   12b8c:			; <UNDEFINED> instruction: 0x00012db0
   12b90:			; <UNDEFINED> instruction: 0x00012db0
   12b94:			; <UNDEFINED> instruction: 0x00012db0
   12b98:			; <UNDEFINED> instruction: 0x00012db0
   12b9c:			; <UNDEFINED> instruction: 0x00012db0
   12ba0:			; <UNDEFINED> instruction: 0x00012db0
   12ba4:	ldrdeq	r2, [r1], -r4
   12ba8:			; <UNDEFINED> instruction: 0x00012db0
   12bac:	strdeq	r2, [r1], -r8
   12bb0:			; <UNDEFINED> instruction: 0x00012db0
   12bb4:			; <UNDEFINED> instruction: 0x00012db0
   12bb8:			; <UNDEFINED> instruction: 0x00012db0
   12bbc:	muleq	r1, r0, ip
   12bc0:	movw	r0, #37200	; 0x9150
   12bc4:	movt	r0, #4
   12bc8:	ldr	r1, [r0]
   12bcc:	ldr	r0, [r0, #4]
   12bd0:	subs	r1, r1, #2
   12bd4:	sbcs	r0, r0, #0
   12bd8:	str	r1, [fp, #-8]
   12bdc:	str	r0, [fp, #-12]
   12be0:	blt	12c88 <__assert_fail@plt+0x1784>
   12be4:	b	12be8 <__assert_fail@plt+0x16e4>
   12be8:	movw	r0, #38236	; 0x955c
   12bec:	movt	r0, #4
   12bf0:	ldr	r0, [r0, #4]
   12bf4:	movw	r1, #1
   12bf8:	cmp	r1, r0
   12bfc:	blt	12c48 <__assert_fail@plt+0x1744>
   12c00:	movw	r0, #38280	; 0x9588
   12c04:	movt	r0, #4
   12c08:	ldr	r1, [r0]
   12c0c:	ldr	r2, [r0, #4]
   12c10:	adds	r1, r1, #1
   12c14:	adc	r2, r2, #0
   12c18:	str	r1, [r0]
   12c1c:	str	r2, [r0, #4]
   12c20:	movw	r0, #37200	; 0x9150
   12c24:	movt	r0, #4
   12c28:	ldr	r3, [r0]
   12c2c:	ldr	r0, [r0, #4]
   12c30:	eor	r0, r2, r0
   12c34:	eor	r1, r1, r3
   12c38:	orr	r0, r1, r0
   12c3c:	cmp	r0, #0
   12c40:	bne	12c64 <__assert_fail@plt+0x1760>
   12c44:	b	12c48 <__assert_fail@plt+0x1744>
   12c48:	bl	12e2c <__assert_fail@plt+0x1928>
   12c4c:	movw	lr, #38280	; 0x9588
   12c50:	movt	lr, #4
   12c54:	mov	r0, #0
   12c58:	str	r0, [lr, #4]
   12c5c:	str	r0, [lr]
   12c60:	b	12c84 <__assert_fail@plt+0x1780>
   12c64:	movw	r0, #38248	; 0x9568
   12c68:	movt	r0, #4
   12c6c:	ldr	r0, [r0]
   12c70:	movw	r1, #37332	; 0x91d4
   12c74:	movt	r1, #4
   12c78:	ldr	r1, [r1]
   12c7c:	bl	111f8 <fputs_unlocked@plt>
   12c80:	str	r0, [fp, #-16]
   12c84:	b	12c8c <__assert_fail@plt+0x1788>
   12c88:	bl	12e2c <__assert_fail@plt+0x1928>
   12c8c:	b	12db0 <__assert_fail@plt+0x18ac>
   12c90:	movw	r0, #38236	; 0x955c
   12c94:	movt	r0, #4
   12c98:	ldr	r0, [r0, #4]
   12c9c:	movw	r1, #1
   12ca0:	cmp	r1, r0
   12ca4:	bge	12cb0 <__assert_fail@plt+0x17ac>
   12ca8:	bl	12e2c <__assert_fail@plt+0x1928>
   12cac:	b	12cd0 <__assert_fail@plt+0x17cc>
   12cb0:	movw	r0, #38248	; 0x9568
   12cb4:	movt	r0, #4
   12cb8:	ldr	r0, [r0]
   12cbc:	movw	r1, #37332	; 0x91d4
   12cc0:	movt	r1, #4
   12cc4:	ldr	r1, [r1]
   12cc8:	bl	111f8 <fputs_unlocked@plt>
   12ccc:	str	r0, [fp, #-20]	; 0xffffffec
   12cd0:	b	12db0 <__assert_fail@plt+0x18ac>
   12cd4:	movw	r0, #38248	; 0x9568
   12cd8:	movt	r0, #4
   12cdc:	ldr	r0, [r0]
   12ce0:	movw	r1, #37332	; 0x91d4
   12ce4:	movt	r1, #4
   12ce8:	ldr	r1, [r1]
   12cec:	bl	111f8 <fputs_unlocked@plt>
   12cf0:	str	r0, [fp, #-24]	; 0xffffffe8
   12cf4:	b	12db0 <__assert_fail@plt+0x18ac>
   12cf8:	movw	r0, #38268	; 0x957c
   12cfc:	movt	r0, #4
   12d00:	ldr	r0, [r0]
   12d04:	movw	r1, #38236	; 0x955c
   12d08:	movt	r1, #4
   12d0c:	ldr	r2, [r1, #4]
   12d10:	ldr	r1, [r1, #8]
   12d14:	sub	r2, r2, #1
   12d18:	mov	r3, sp
   12d1c:	mov	ip, #0
   12d20:	str	ip, [r3, #4]
   12d24:	str	r2, [r3]
   12d28:	mov	r3, ip
   12d2c:	bl	18724 <__assert_fail@plt+0x7220>
   12d30:	mov	r1, r0
   12d34:	cmn	r0, #2
   12d38:	str	r1, [sp, #28]
   12d3c:	beq	12d54 <__assert_fail@plt+0x1850>
   12d40:	b	12d44 <__assert_fail@plt+0x1840>
   12d44:	ldr	r0, [sp, #28]
   12d48:	cmn	r0, #1
   12d4c:	beq	12d84 <__assert_fail@plt+0x1880>
   12d50:	b	12da8 <__assert_fail@plt+0x18a4>
   12d54:	bl	113fc <__errno_location@plt>
   12d58:	ldr	r1, [r0]
   12d5c:	movw	r0, #32427	; 0x7eab
   12d60:	movt	r0, #3
   12d64:	str	r1, [sp, #24]
   12d68:	bl	113cc <gettext@plt>
   12d6c:	movw	r1, #1
   12d70:	str	r0, [sp, #20]
   12d74:	mov	r0, r1
   12d78:	ldr	r1, [sp, #24]
   12d7c:	ldr	r2, [sp, #20]
   12d80:	bl	1136c <error@plt>
   12d84:	movw	r0, #38248	; 0x9568
   12d88:	movt	r0, #4
   12d8c:	ldr	r0, [r0]
   12d90:	movw	r1, #37332	; 0x91d4
   12d94:	movt	r1, #4
   12d98:	ldr	r1, [r1]
   12d9c:	bl	111f8 <fputs_unlocked@plt>
   12da0:	str	r0, [sp, #16]
   12da4:	b	12dac <__assert_fail@plt+0x18a8>
   12da8:	bl	12e2c <__assert_fail@plt+0x1928>
   12dac:	b	12db0 <__assert_fail@plt+0x18ac>
   12db0:	movw	r0, #38236	; 0x955c
   12db4:	movt	r0, #4
   12db8:	ldr	r1, [r0, #8]
   12dbc:	ldr	r2, [r0, #4]
   12dc0:	movw	r0, #37332	; 0x91d4
   12dc4:	movt	r0, #4
   12dc8:	ldr	r3, [r0]
   12dcc:	mov	r0, r1
   12dd0:	movw	r1, #1
   12dd4:	bl	112dc <fwrite_unlocked@plt>
   12dd8:	str	r0, [sp, #12]
   12ddc:	mov	sp, fp
   12de0:	pop	{fp, pc}
   12de4:	movw	r0, #37192	; 0x9148
   12de8:	movt	r0, #4
   12dec:	ldrb	r0, [r0]
   12df0:	tst	r0, #1
   12df4:	beq	12e28 <__assert_fail@plt+0x1924>
   12df8:	movw	r0, #37176	; 0x9138
   12dfc:	movt	r0, #4
   12e00:	ldr	r1, [r0]
   12e04:	ldr	r0, [r0, #4]
   12e08:	movw	r2, #38256	; 0x9570
   12e0c:	movt	r2, #4
   12e10:	str	r0, [r2, #4]
   12e14:	str	r1, [r2]
   12e18:	movw	r0, #38272	; 0x9580
   12e1c:	movt	r0, #4
   12e20:	movw	r1, #0
   12e24:	strb	r1, [r0]
   12e28:	bx	lr
   12e2c:	push	{r4, r5, r6, sl, fp, lr}
   12e30:	add	fp, sp, #16
   12e34:	sub	sp, sp, #16
   12e38:	movw	r0, #38272	; 0x9580
   12e3c:	movt	r0, #4
   12e40:	ldrb	r0, [r0]
   12e44:	tst	r0, #1
   12e48:	beq	12e70 <__assert_fail@plt+0x196c>
   12e4c:	movw	r0, #32462	; 0x7ece
   12e50:	movt	r0, #3
   12e54:	bl	113cc <gettext@plt>
   12e58:	movw	lr, #1
   12e5c:	str	r0, [sp, #12]
   12e60:	mov	r0, lr
   12e64:	movw	r1, #0
   12e68:	ldr	r2, [sp, #12]
   12e6c:	bl	1136c <error@plt>
   12e70:	movw	r0, #37216	; 0x9160
   12e74:	movt	r0, #4
   12e78:	ldr	r0, [r0]
   12e7c:	movw	r1, #37212	; 0x915c
   12e80:	movt	r1, #4
   12e84:	ldr	r1, [r1]
   12e88:	movw	r2, #38256	; 0x9570
   12e8c:	movt	r2, #4
   12e90:	ldr	r3, [r2]
   12e94:	ldr	ip, [r2, #4]
   12e98:	movw	lr, #37208	; 0x9158
   12e9c:	movt	lr, #4
   12ea0:	ldr	lr, [lr]
   12ea4:	mov	r4, sp
   12ea8:	str	lr, [r4]
   12eac:	str	r2, [sp, #8]
   12eb0:	mov	r2, r3
   12eb4:	mov	r3, ip
   12eb8:	bl	1124c <printf@plt>
   12ebc:	ldr	r1, [sp, #8]
   12ec0:	ldr	r2, [r1]
   12ec4:	ldr	r3, [r1, #4]
   12ec8:	movw	ip, #37184	; 0x9140
   12ecc:	movt	ip, #4
   12ed0:	ldr	lr, [ip]
   12ed4:	ldr	ip, [ip, #4]
   12ed8:	mov	r4, #0
   12edc:	cmn	r3, #1
   12ee0:	mov	r5, r4
   12ee4:	movwgt	r5, #1
   12ee8:	adds	r2, r2, lr
   12eec:	adc	r3, r3, ip
   12ef0:	cmn	r3, #1
   12ef4:	mov	lr, r4
   12ef8:	movwgt	lr, #1
   12efc:	sub	r6, r5, lr
   12f00:	cmp	r5, lr
   12f04:	movwne	r6, #1
   12f08:	cmn	ip, #1
   12f0c:	movwgt	r4, #1
   12f10:	sub	ip, r5, r4
   12f14:	clz	ip, ip
   12f18:	lsr	ip, ip, #5
   12f1c:	and	ip, ip, r6
   12f20:	str	r2, [r1]
   12f24:	str	r3, [r1, #4]
   12f28:	tst	ip, #1
   12f2c:	str	r0, [sp, #4]
   12f30:	beq	12f44 <__assert_fail@plt+0x1a40>
   12f34:	movw	r0, #38272	; 0x9580
   12f38:	movt	r0, #4
   12f3c:	movw	r1, #1
   12f40:	strb	r1, [r0]
   12f44:	sub	sp, fp, #16
   12f48:	pop	{r4, r5, r6, sl, fp, pc}
   12f4c:	sub	sp, sp, #4
   12f50:	str	r0, [sp]
   12f54:	ldr	r0, [sp]
   12f58:	movw	r1, #38288	; 0x9590
   12f5c:	movt	r1, #4
   12f60:	str	r0, [r1]
   12f64:	add	sp, sp, #4
   12f68:	bx	lr
   12f6c:	sub	sp, sp, #4
   12f70:	and	r0, r0, #1
   12f74:	strb	r0, [sp, #3]
   12f78:	ldrb	r0, [sp, #3]
   12f7c:	and	r0, r0, #1
   12f80:	movw	r1, #38292	; 0x9594
   12f84:	movt	r1, #4
   12f88:	strb	r0, [r1]
   12f8c:	add	sp, sp, #4
   12f90:	bx	lr
   12f94:	push	{fp, lr}
   12f98:	mov	fp, sp
   12f9c:	sub	sp, sp, #24
   12fa0:	movw	r0, #37332	; 0x91d4
   12fa4:	movt	r0, #4
   12fa8:	ldr	r0, [r0]
   12fac:	bl	33d10 <__assert_fail@plt+0x2280c>
   12fb0:	cmp	r0, #0
   12fb4:	beq	13084 <__assert_fail@plt+0x1b80>
   12fb8:	movw	r0, #38292	; 0x9594
   12fbc:	movt	r0, #4
   12fc0:	ldrb	r0, [r0]
   12fc4:	tst	r0, #1
   12fc8:	beq	12fdc <__assert_fail@plt+0x1ad8>
   12fcc:	bl	113fc <__errno_location@plt>
   12fd0:	ldr	r0, [r0]
   12fd4:	cmp	r0, #32
   12fd8:	beq	13084 <__assert_fail@plt+0x1b80>
   12fdc:	movw	r0, #32807	; 0x8027
   12fe0:	movt	r0, #3
   12fe4:	bl	113cc <gettext@plt>
   12fe8:	str	r0, [fp, #-4]
   12fec:	movw	r0, #38288	; 0x9590
   12ff0:	movt	r0, #4
   12ff4:	ldr	r0, [r0]
   12ff8:	movw	lr, #0
   12ffc:	cmp	r0, lr
   13000:	beq	13058 <__assert_fail@plt+0x1b54>
   13004:	bl	113fc <__errno_location@plt>
   13008:	ldr	r1, [r0]
   1300c:	movw	r0, #38288	; 0x9590
   13010:	movt	r0, #4
   13014:	ldr	r0, [r0]
   13018:	str	r1, [fp, #-8]
   1301c:	bl	159e8 <__assert_fail@plt+0x44e4>
   13020:	ldr	r1, [fp, #-4]
   13024:	movw	lr, #0
   13028:	str	r0, [sp, #12]
   1302c:	mov	r0, lr
   13030:	ldr	lr, [fp, #-8]
   13034:	str	r1, [sp, #8]
   13038:	mov	r1, lr
   1303c:	movw	r2, #32819	; 0x8033
   13040:	movt	r2, #3
   13044:	ldr	r3, [sp, #12]
   13048:	ldr	ip, [sp, #8]
   1304c:	str	ip, [sp]
   13050:	bl	1136c <error@plt>
   13054:	b	13074 <__assert_fail@plt+0x1b70>
   13058:	bl	113fc <__errno_location@plt>
   1305c:	ldr	r1, [r0]
   13060:	ldr	r3, [fp, #-4]
   13064:	movw	r0, #0
   13068:	movw	r2, #31510	; 0x7b16
   1306c:	movt	r2, #3
   13070:	bl	1136c <error@plt>
   13074:	movw	r0, #37232	; 0x9170
   13078:	movt	r0, #4
   1307c:	ldr	r0, [r0]
   13080:	bl	11294 <_exit@plt>
   13084:	movw	r0, #37320	; 0x91c8
   13088:	movt	r0, #4
   1308c:	ldr	r0, [r0]
   13090:	bl	33d10 <__assert_fail@plt+0x2280c>
   13094:	cmp	r0, #0
   13098:	beq	130ac <__assert_fail@plt+0x1ba8>
   1309c:	movw	r0, #37232	; 0x9170
   130a0:	movt	r0, #4
   130a4:	ldr	r0, [r0]
   130a8:	bl	11294 <_exit@plt>
   130ac:	mov	sp, fp
   130b0:	pop	{fp, pc}
   130b4:	push	{r4, r5, fp, lr}
   130b8:	add	fp, sp, #8
   130bc:	sub	sp, sp, #48	; 0x30
   130c0:	ldr	r1, [fp, #12]
   130c4:	ldr	ip, [fp, #8]
   130c8:	ldr	lr, [fp, #16]
   130cc:	str	r0, [fp, #-12]
   130d0:	str	r3, [fp, #-20]	; 0xffffffec
   130d4:	str	r2, [fp, #-24]	; 0xffffffe8
   130d8:	str	r1, [sp, #28]
   130dc:	str	ip, [sp, #24]
   130e0:	ldr	r0, [fp, #-12]
   130e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   130e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   130ec:	ldr	r1, [sp, #24]
   130f0:	ldr	ip, [sp, #28]
   130f4:	ldr	r4, [fp, #16]
   130f8:	mov	r5, sp
   130fc:	str	r4, [r5, #8]
   13100:	str	ip, [r5, #4]
   13104:	str	r1, [r5]
   13108:	str	lr, [sp, #20]
   1310c:	bl	11240 <posix_fadvise64@plt>
   13110:	str	r0, [sp, #16]
   13114:	sub	sp, fp, #8
   13118:	pop	{r4, r5, fp, pc}
   1311c:	push	{fp, lr}
   13120:	mov	fp, sp
   13124:	sub	sp, sp, #24
   13128:	str	r0, [fp, #-4]
   1312c:	str	r1, [fp, #-8]
   13130:	ldr	r0, [fp, #-4]
   13134:	movw	r1, #0
   13138:	cmp	r0, r1
   1313c:	beq	1316c <__assert_fail@plt+0x1c68>
   13140:	ldr	r0, [fp, #-4]
   13144:	bl	11438 <fileno@plt>
   13148:	ldr	lr, [fp, #-8]
   1314c:	mov	r1, sp
   13150:	str	lr, [r1, #8]
   13154:	mov	lr, #0
   13158:	str	lr, [r1, #4]
   1315c:	str	lr, [r1]
   13160:	mov	r2, lr
   13164:	mov	r3, lr
   13168:	bl	130b4 <__assert_fail@plt+0x1bb0>
   1316c:	mov	sp, fp
   13170:	pop	{fp, pc}
   13174:	push	{fp, lr}
   13178:	mov	fp, sp
   1317c:	sub	sp, sp, #32
   13180:	str	r0, [fp, #-8]
   13184:	movw	r0, #0
   13188:	str	r0, [fp, #-12]
   1318c:	str	r0, [sp, #12]
   13190:	ldr	r0, [fp, #-8]
   13194:	bl	11438 <fileno@plt>
   13198:	str	r0, [sp, #16]
   1319c:	ldr	r0, [sp, #16]
   131a0:	cmp	r0, #0
   131a4:	bge	131b8 <__assert_fail@plt+0x1cb4>
   131a8:	ldr	r0, [fp, #-8]
   131ac:	bl	11450 <fclose@plt>
   131b0:	str	r0, [fp, #-4]
   131b4:	b	13254 <__assert_fail@plt+0x1d50>
   131b8:	ldr	r0, [fp, #-8]
   131bc:	bl	11390 <__freading@plt>
   131c0:	cmp	r0, #0
   131c4:	beq	131fc <__assert_fail@plt+0x1cf8>
   131c8:	ldr	r0, [fp, #-8]
   131cc:	bl	11438 <fileno@plt>
   131d0:	mov	lr, sp
   131d4:	mov	r1, #1
   131d8:	str	r1, [lr]
   131dc:	mov	r1, #0
   131e0:	mov	r2, r1
   131e4:	mov	r3, r1
   131e8:	bl	11330 <lseek64@plt>
   131ec:	and	r0, r0, r1
   131f0:	cmn	r0, #1
   131f4:	beq	13218 <__assert_fail@plt+0x1d14>
   131f8:	b	131fc <__assert_fail@plt+0x1cf8>
   131fc:	ldr	r0, [fp, #-8]
   13200:	bl	13260 <__assert_fail@plt+0x1d5c>
   13204:	cmp	r0, #0
   13208:	beq	13218 <__assert_fail@plt+0x1d14>
   1320c:	bl	113fc <__errno_location@plt>
   13210:	ldr	r0, [r0]
   13214:	str	r0, [fp, #-12]
   13218:	ldr	r0, [fp, #-8]
   1321c:	bl	11450 <fclose@plt>
   13220:	str	r0, [sp, #12]
   13224:	ldr	r0, [fp, #-12]
   13228:	cmp	r0, #0
   1322c:	beq	1324c <__assert_fail@plt+0x1d48>
   13230:	ldr	r0, [fp, #-12]
   13234:	str	r0, [sp, #8]
   13238:	bl	113fc <__errno_location@plt>
   1323c:	ldr	lr, [sp, #8]
   13240:	str	lr, [r0]
   13244:	mvn	r0, #0
   13248:	str	r0, [sp, #12]
   1324c:	ldr	r0, [sp, #12]
   13250:	str	r0, [fp, #-4]
   13254:	ldr	r0, [fp, #-4]
   13258:	mov	sp, fp
   1325c:	pop	{fp, pc}
   13260:	push	{fp, lr}
   13264:	mov	fp, sp
   13268:	sub	sp, sp, #8
   1326c:	str	r0, [sp]
   13270:	ldr	r0, [sp]
   13274:	movw	r1, #0
   13278:	cmp	r0, r1
   1327c:	beq	13290 <__assert_fail@plt+0x1d8c>
   13280:	ldr	r0, [sp]
   13284:	bl	11390 <__freading@plt>
   13288:	cmp	r0, #0
   1328c:	bne	132a0 <__assert_fail@plt+0x1d9c>
   13290:	ldr	r0, [sp]
   13294:	bl	11264 <fflush@plt>
   13298:	str	r0, [sp, #4]
   1329c:	b	132b4 <__assert_fail@plt+0x1db0>
   132a0:	ldr	r0, [sp]
   132a4:	bl	132c0 <__assert_fail@plt+0x1dbc>
   132a8:	ldr	r0, [sp]
   132ac:	bl	11264 <fflush@plt>
   132b0:	str	r0, [sp, #4]
   132b4:	ldr	r0, [sp, #4]
   132b8:	mov	sp, fp
   132bc:	pop	{fp, pc}
   132c0:	push	{fp, lr}
   132c4:	mov	fp, sp
   132c8:	sub	sp, sp, #16
   132cc:	str	r0, [fp, #-4]
   132d0:	ldr	r0, [fp, #-4]
   132d4:	ldr	r0, [r0]
   132d8:	and	r0, r0, #256	; 0x100
   132dc:	cmp	r0, #0
   132e0:	beq	13308 <__assert_fail@plt+0x1e04>
   132e4:	ldr	r0, [fp, #-4]
   132e8:	mov	r1, sp
   132ec:	mov	r2, #1
   132f0:	str	r2, [r1]
   132f4:	mov	r1, #0
   132f8:	mov	r2, r1
   132fc:	mov	r3, r1
   13300:	bl	13310 <__assert_fail@plt+0x1e0c>
   13304:	str	r0, [sp, #8]
   13308:	mov	sp, fp
   1330c:	pop	{fp, pc}
   13310:	push	{fp, lr}
   13314:	mov	fp, sp
   13318:	sub	sp, sp, #32
   1331c:	ldr	r1, [fp, #8]
   13320:	str	r0, [fp, #-8]
   13324:	str	r3, [sp, #20]
   13328:	str	r2, [sp, #16]
   1332c:	ldr	r0, [fp, #-8]
   13330:	ldr	r0, [r0, #8]
   13334:	ldr	r2, [fp, #-8]
   13338:	ldr	r2, [r2, #4]
   1333c:	cmp	r0, r2
   13340:	str	r1, [sp, #4]
   13344:	bne	133f0 <__assert_fail@plt+0x1eec>
   13348:	ldr	r0, [fp, #-8]
   1334c:	ldr	r0, [r0, #20]
   13350:	ldr	r1, [fp, #-8]
   13354:	ldr	r1, [r1, #16]
   13358:	cmp	r0, r1
   1335c:	bne	133f0 <__assert_fail@plt+0x1eec>
   13360:	ldr	r0, [fp, #-8]
   13364:	ldr	r0, [r0, #36]	; 0x24
   13368:	movw	r1, #0
   1336c:	cmp	r0, r1
   13370:	bne	133f0 <__assert_fail@plt+0x1eec>
   13374:	ldr	r0, [fp, #-8]
   13378:	bl	11438 <fileno@plt>
   1337c:	ldr	r2, [sp, #16]
   13380:	ldr	r3, [sp, #20]
   13384:	ldr	lr, [fp, #8]
   13388:	mov	r1, sp
   1338c:	str	lr, [r1]
   13390:	bl	11330 <lseek64@plt>
   13394:	str	r1, [sp, #12]
   13398:	str	r0, [sp, #8]
   1339c:	ldr	r0, [sp, #8]
   133a0:	ldr	r1, [sp, #12]
   133a4:	and	r0, r0, r1
   133a8:	cmn	r0, #1
   133ac:	bne	133c0 <__assert_fail@plt+0x1ebc>
   133b0:	b	133b4 <__assert_fail@plt+0x1eb0>
   133b4:	mvn	r0, #0
   133b8:	str	r0, [fp, #-4]
   133bc:	b	13410 <__assert_fail@plt+0x1f0c>
   133c0:	ldr	r0, [fp, #-8]
   133c4:	ldr	r1, [r0]
   133c8:	bic	r1, r1, #16
   133cc:	str	r1, [r0]
   133d0:	ldr	r0, [sp, #8]
   133d4:	ldr	r1, [sp, #12]
   133d8:	ldr	r2, [fp, #-8]
   133dc:	str	r1, [r2, #84]	; 0x54
   133e0:	str	r0, [r2, #80]	; 0x50
   133e4:	movw	r0, #0
   133e8:	str	r0, [fp, #-4]
   133ec:	b	13410 <__assert_fail@plt+0x1f0c>
   133f0:	ldr	r0, [fp, #-8]
   133f4:	ldr	r2, [sp, #16]
   133f8:	ldr	r3, [sp, #20]
   133fc:	ldr	r1, [fp, #8]
   13400:	mov	ip, sp
   13404:	str	r1, [ip]
   13408:	bl	1145c <fseeko64@plt>
   1340c:	str	r0, [fp, #-4]
   13410:	ldr	r0, [fp, #-4]
   13414:	mov	sp, fp
   13418:	pop	{fp, pc}
   1341c:	push	{fp, lr}
   13420:	mov	fp, sp
   13424:	sub	sp, sp, #8
   13428:	str	r0, [sp, #4]
   1342c:	ldr	r0, [sp, #4]
   13430:	movw	r1, #0
   13434:	and	r1, r1, #255	; 0xff
   13438:	movw	r2, #12
   1343c:	bl	11420 <memset@plt>
   13440:	mov	sp, fp
   13444:	pop	{fp, pc}
   13448:	push	{fp, lr}
   1344c:	mov	fp, sp
   13450:	sub	sp, sp, #8
   13454:	str	r0, [sp, #4]
   13458:	str	r1, [sp]
   1345c:	ldr	r0, [sp, #4]
   13460:	ldr	r1, [sp]
   13464:	movw	r2, #10
   13468:	and	r2, r2, #255	; 0xff
   1346c:	bl	13478 <__assert_fail@plt+0x1f74>
   13470:	mov	sp, fp
   13474:	pop	{fp, pc}
   13478:	push	{fp, lr}
   1347c:	mov	fp, sp
   13480:	sub	sp, sp, #48	; 0x30
   13484:	str	r0, [fp, #-8]
   13488:	str	r1, [fp, #-12]
   1348c:	strb	r2, [fp, #-13]
   13490:	ldr	r0, [fp, #-8]
   13494:	ldr	r0, [r0, #8]
   13498:	str	r0, [sp, #24]
   1349c:	ldr	r0, [fp, #-8]
   134a0:	ldr	r0, [r0, #8]
   134a4:	str	r0, [sp, #20]
   134a8:	ldr	r0, [sp, #24]
   134ac:	ldr	r1, [fp, #-8]
   134b0:	ldr	r1, [r1]
   134b4:	add	r0, r0, r1
   134b8:	str	r0, [sp, #16]
   134bc:	ldr	r0, [fp, #-12]
   134c0:	bl	114ec <feof_unlocked@plt>
   134c4:	cmp	r0, #0
   134c8:	beq	134d8 <__assert_fail@plt+0x1fd4>
   134cc:	movw	r0, #0
   134d0:	str	r0, [fp, #-4]
   134d4:	b	135f8 <__assert_fail@plt+0x20f4>
   134d8:	b	134dc <__assert_fail@plt+0x1fd8>
   134dc:	ldr	r0, [fp, #-12]
   134e0:	bl	11300 <getc_unlocked@plt>
   134e4:	str	r0, [fp, #-20]	; 0xffffffec
   134e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134ec:	cmn	r0, #1
   134f0:	bne	13548 <__assert_fail@plt+0x2044>
   134f4:	ldr	r0, [sp, #20]
   134f8:	ldr	r1, [sp, #24]
   134fc:	cmp	r0, r1
   13500:	beq	13514 <__assert_fail@plt+0x2010>
   13504:	ldr	r0, [fp, #-12]
   13508:	bl	11354 <ferror_unlocked@plt>
   1350c:	cmp	r0, #0
   13510:	beq	13520 <__assert_fail@plt+0x201c>
   13514:	movw	r0, #0
   13518:	str	r0, [fp, #-4]
   1351c:	b	135f8 <__assert_fail@plt+0x20f4>
   13520:	ldr	r0, [sp, #20]
   13524:	mvn	r1, #0
   13528:	add	r0, r0, r1
   1352c:	ldrb	r0, [r0]
   13530:	ldrb	r1, [fp, #-13]
   13534:	cmp	r0, r1
   13538:	bne	13540 <__assert_fail@plt+0x203c>
   1353c:	b	135dc <__assert_fail@plt+0x20d8>
   13540:	ldrb	r0, [fp, #-13]
   13544:	str	r0, [fp, #-20]	; 0xffffffec
   13548:	ldr	r0, [sp, #20]
   1354c:	ldr	r1, [sp, #16]
   13550:	cmp	r0, r1
   13554:	bne	135b8 <__assert_fail@plt+0x20b4>
   13558:	ldr	r0, [fp, #-8]
   1355c:	ldr	r0, [r0]
   13560:	str	r0, [sp, #12]
   13564:	ldr	r0, [sp, #24]
   13568:	ldr	r1, [fp, #-8]
   1356c:	movw	r2, #1
   13570:	str	r2, [sp, #8]
   13574:	mvn	r3, #0
   13578:	ldr	ip, [sp, #8]
   1357c:	str	ip, [sp]
   13580:	bl	2e930 <__assert_fail@plt+0x1d42c>
   13584:	str	r0, [sp, #24]
   13588:	ldr	r0, [sp, #24]
   1358c:	ldr	r1, [sp, #12]
   13590:	add	r0, r0, r1
   13594:	str	r0, [sp, #20]
   13598:	ldr	r0, [sp, #24]
   1359c:	ldr	r1, [fp, #-8]
   135a0:	str	r0, [r1, #8]
   135a4:	ldr	r0, [sp, #24]
   135a8:	ldr	r1, [fp, #-8]
   135ac:	ldr	r1, [r1]
   135b0:	add	r0, r0, r1
   135b4:	str	r0, [sp, #16]
   135b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   135bc:	ldr	r1, [sp, #20]
   135c0:	add	r2, r1, #1
   135c4:	str	r2, [sp, #20]
   135c8:	strb	r0, [r1]
   135cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   135d0:	ldrb	r1, [fp, #-13]
   135d4:	cmp	r0, r1
   135d8:	bne	134dc <__assert_fail@plt+0x1fd8>
   135dc:	ldr	r0, [sp, #20]
   135e0:	ldr	r1, [sp, #24]
   135e4:	sub	r0, r0, r1
   135e8:	ldr	r1, [fp, #-8]
   135ec:	str	r0, [r1, #4]
   135f0:	ldr	r0, [fp, #-8]
   135f4:	str	r0, [fp, #-4]
   135f8:	ldr	r0, [fp, #-4]
   135fc:	mov	sp, fp
   13600:	pop	{fp, pc}
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	sub	sp, sp, #8
   13610:	str	r0, [sp, #4]
   13614:	ldr	r0, [sp, #4]
   13618:	ldr	r0, [r0, #8]
   1361c:	bl	35268 <__assert_fail@plt+0x23d64>
   13620:	mov	sp, fp
   13624:	pop	{fp, pc}
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	sub	sp, sp, #24
   13634:	str	r0, [fp, #-4]
   13638:	ldr	r0, [fp, #-4]
   1363c:	movw	r1, #0
   13640:	cmp	r0, r1
   13644:	bne	13668 <__assert_fail@plt+0x2164>
   13648:	movw	r0, #37320	; 0x91c8
   1364c:	movt	r0, #4
   13650:	ldr	r1, [r0]
   13654:	movw	r0, #32826	; 0x803a
   13658:	movt	r0, #3
   1365c:	bl	114c8 <fputs@plt>
   13660:	str	r0, [sp, #8]
   13664:	bl	114e0 <abort@plt>
   13668:	ldr	r0, [fp, #-4]
   1366c:	movw	r1, #47	; 0x2f
   13670:	bl	11480 <strrchr@plt>
   13674:	str	r0, [fp, #-8]
   13678:	ldr	r0, [fp, #-8]
   1367c:	movw	r1, #0
   13680:	cmp	r0, r1
   13684:	beq	13698 <__assert_fail@plt+0x2194>
   13688:	ldr	r0, [fp, #-8]
   1368c:	add	r0, r0, #1
   13690:	str	r0, [sp, #4]
   13694:	b	136a0 <__assert_fail@plt+0x219c>
   13698:	ldr	r0, [fp, #-4]
   1369c:	str	r0, [sp, #4]
   136a0:	ldr	r0, [sp, #4]
   136a4:	str	r0, [sp, #12]
   136a8:	ldr	r0, [sp, #12]
   136ac:	ldr	r1, [fp, #-4]
   136b0:	sub	r0, r0, r1
   136b4:	cmp	r0, #7
   136b8:	blt	13724 <__assert_fail@plt+0x2220>
   136bc:	ldr	r0, [sp, #12]
   136c0:	mvn	r1, #6
   136c4:	add	r0, r0, r1
   136c8:	movw	r1, #32882	; 0x8072
   136cc:	movt	r1, #3
   136d0:	movw	r2, #7
   136d4:	bl	114d4 <strncmp@plt>
   136d8:	cmp	r0, #0
   136dc:	bne	13724 <__assert_fail@plt+0x2220>
   136e0:	ldr	r0, [sp, #12]
   136e4:	str	r0, [fp, #-4]
   136e8:	ldr	r0, [sp, #12]
   136ec:	movw	r1, #32890	; 0x807a
   136f0:	movt	r1, #3
   136f4:	movw	r2, #3
   136f8:	bl	114d4 <strncmp@plt>
   136fc:	cmp	r0, #0
   13700:	bne	13720 <__assert_fail@plt+0x221c>
   13704:	ldr	r0, [sp, #12]
   13708:	add	r0, r0, #3
   1370c:	str	r0, [fp, #-4]
   13710:	ldr	r0, [fp, #-4]
   13714:	movw	r1, #37304	; 0x91b8
   13718:	movt	r1, #4
   1371c:	str	r0, [r1]
   13720:	b	13724 <__assert_fail@plt+0x2220>
   13724:	ldr	r0, [fp, #-4]
   13728:	movw	r1, #38296	; 0x9598
   1372c:	movt	r1, #4
   13730:	str	r0, [r1]
   13734:	ldr	r0, [fp, #-4]
   13738:	movw	r1, #37308	; 0x91bc
   1373c:	movt	r1, #4
   13740:	str	r0, [r1]
   13744:	mov	sp, fp
   13748:	pop	{fp, pc}
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	sub	sp, sp, #24
   13758:	str	r0, [fp, #-4]
   1375c:	bl	113fc <__errno_location@plt>
   13760:	ldr	r0, [r0]
   13764:	str	r0, [fp, #-8]
   13768:	ldr	r0, [fp, #-4]
   1376c:	movw	lr, #0
   13770:	cmp	r0, lr
   13774:	beq	13784 <__assert_fail@plt+0x2280>
   13778:	ldr	r0, [fp, #-4]
   1377c:	str	r0, [sp, #8]
   13780:	b	13794 <__assert_fail@plt+0x2290>
   13784:	movw	r0, #38300	; 0x959c
   13788:	movt	r0, #4
   1378c:	str	r0, [sp, #8]
   13790:	b	13794 <__assert_fail@plt+0x2290>
   13794:	ldr	r0, [sp, #8]
   13798:	movw	r1, #48	; 0x30
   1379c:	bl	31358 <__assert_fail@plt+0x1fe54>
   137a0:	str	r0, [sp, #12]
   137a4:	ldr	r0, [fp, #-8]
   137a8:	str	r0, [sp, #4]
   137ac:	bl	113fc <__errno_location@plt>
   137b0:	ldr	r1, [sp, #4]
   137b4:	str	r1, [r0]
   137b8:	ldr	r0, [sp, #12]
   137bc:	mov	sp, fp
   137c0:	pop	{fp, pc}
   137c4:	sub	sp, sp, #8
   137c8:	str	r0, [sp, #4]
   137cc:	ldr	r0, [sp, #4]
   137d0:	movw	r1, #0
   137d4:	cmp	r0, r1
   137d8:	beq	137e8 <__assert_fail@plt+0x22e4>
   137dc:	ldr	r0, [sp, #4]
   137e0:	str	r0, [sp]
   137e4:	b	137f8 <__assert_fail@plt+0x22f4>
   137e8:	movw	r0, #38300	; 0x959c
   137ec:	movt	r0, #4
   137f0:	str	r0, [sp]
   137f4:	b	137f8 <__assert_fail@plt+0x22f4>
   137f8:	ldr	r0, [sp]
   137fc:	ldr	r0, [r0]
   13800:	add	sp, sp, #8
   13804:	bx	lr
   13808:	sub	sp, sp, #16
   1380c:	str	r0, [sp, #12]
   13810:	str	r1, [sp, #8]
   13814:	ldr	r0, [sp, #8]
   13818:	ldr	r1, [sp, #12]
   1381c:	movw	r2, #0
   13820:	cmp	r1, r2
   13824:	str	r0, [sp, #4]
   13828:	beq	13838 <__assert_fail@plt+0x2334>
   1382c:	ldr	r0, [sp, #12]
   13830:	str	r0, [sp]
   13834:	b	13848 <__assert_fail@plt+0x2344>
   13838:	movw	r0, #38300	; 0x959c
   1383c:	movt	r0, #4
   13840:	str	r0, [sp]
   13844:	b	13848 <__assert_fail@plt+0x2344>
   13848:	ldr	r0, [sp]
   1384c:	ldr	r1, [sp, #4]
   13850:	str	r1, [r0]
   13854:	add	sp, sp, #16
   13858:	bx	lr
   1385c:	sub	sp, sp, #32
   13860:	str	r0, [sp, #28]
   13864:	strb	r1, [sp, #27]
   13868:	str	r2, [sp, #20]
   1386c:	ldrb	r0, [sp, #27]
   13870:	strb	r0, [sp, #19]
   13874:	ldr	r0, [sp, #28]
   13878:	movw	r1, #0
   1387c:	cmp	r0, r1
   13880:	beq	13890 <__assert_fail@plt+0x238c>
   13884:	ldr	r0, [sp, #28]
   13888:	str	r0, [sp]
   1388c:	b	138a0 <__assert_fail@plt+0x239c>
   13890:	movw	r0, #38300	; 0x959c
   13894:	movt	r0, #4
   13898:	str	r0, [sp]
   1389c:	b	138a0 <__assert_fail@plt+0x239c>
   138a0:	ldr	r0, [sp]
   138a4:	add	r0, r0, #8
   138a8:	ldrb	r1, [sp, #19]
   138ac:	lsr	r1, r1, #5
   138b0:	add	r0, r0, r1, lsl #2
   138b4:	str	r0, [sp, #12]
   138b8:	ldrb	r0, [sp, #19]
   138bc:	and	r0, r0, #31
   138c0:	str	r0, [sp, #8]
   138c4:	ldr	r0, [sp, #12]
   138c8:	ldr	r0, [r0]
   138cc:	ldr	r1, [sp, #8]
   138d0:	lsr	r0, r0, r1
   138d4:	and	r0, r0, #1
   138d8:	str	r0, [sp, #4]
   138dc:	ldr	r0, [sp, #20]
   138e0:	and	r0, r0, #1
   138e4:	ldr	r1, [sp, #4]
   138e8:	eor	r0, r0, r1
   138ec:	ldr	r1, [sp, #8]
   138f0:	lsl	r0, r0, r1
   138f4:	ldr	r1, [sp, #12]
   138f8:	ldr	r2, [r1]
   138fc:	eor	r0, r2, r0
   13900:	str	r0, [r1]
   13904:	ldr	r0, [sp, #4]
   13908:	add	sp, sp, #32
   1390c:	bx	lr
   13910:	sub	sp, sp, #12
   13914:	str	r0, [sp, #8]
   13918:	str	r1, [sp, #4]
   1391c:	ldr	r0, [sp, #8]
   13920:	movw	r1, #0
   13924:	cmp	r0, r1
   13928:	bne	13938 <__assert_fail@plt+0x2434>
   1392c:	movw	r0, #38300	; 0x959c
   13930:	movt	r0, #4
   13934:	str	r0, [sp, #8]
   13938:	ldr	r0, [sp, #8]
   1393c:	ldr	r0, [r0, #4]
   13940:	str	r0, [sp]
   13944:	ldr	r0, [sp, #4]
   13948:	ldr	r1, [sp, #8]
   1394c:	str	r0, [r1, #4]
   13950:	ldr	r0, [sp]
   13954:	add	sp, sp, #12
   13958:	bx	lr
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	sub	sp, sp, #16
   13968:	str	r0, [fp, #-4]
   1396c:	str	r1, [sp, #8]
   13970:	str	r2, [sp, #4]
   13974:	ldr	r0, [fp, #-4]
   13978:	movw	r1, #0
   1397c:	cmp	r0, r1
   13980:	bne	13990 <__assert_fail@plt+0x248c>
   13984:	movw	r0, #38300	; 0x959c
   13988:	movt	r0, #4
   1398c:	str	r0, [fp, #-4]
   13990:	ldr	r0, [fp, #-4]
   13994:	movw	r1, #10
   13998:	str	r1, [r0]
   1399c:	ldr	r0, [sp, #8]
   139a0:	movw	r1, #0
   139a4:	cmp	r0, r1
   139a8:	beq	139bc <__assert_fail@plt+0x24b8>
   139ac:	ldr	r0, [sp, #4]
   139b0:	movw	r1, #0
   139b4:	cmp	r0, r1
   139b8:	bne	139c0 <__assert_fail@plt+0x24bc>
   139bc:	bl	114e0 <abort@plt>
   139c0:	ldr	r0, [sp, #8]
   139c4:	ldr	r1, [fp, #-4]
   139c8:	str	r0, [r1, #40]	; 0x28
   139cc:	ldr	r0, [sp, #4]
   139d0:	ldr	r1, [fp, #-4]
   139d4:	str	r0, [r1, #44]	; 0x2c
   139d8:	mov	sp, fp
   139dc:	pop	{fp, pc}
   139e0:	push	{r4, r5, r6, sl, fp, lr}
   139e4:	add	fp, sp, #16
   139e8:	sub	sp, sp, #64	; 0x40
   139ec:	ldr	ip, [fp, #8]
   139f0:	str	r0, [fp, #-20]	; 0xffffffec
   139f4:	str	r1, [fp, #-24]	; 0xffffffe8
   139f8:	str	r2, [fp, #-28]	; 0xffffffe4
   139fc:	str	r3, [fp, #-32]	; 0xffffffe0
   13a00:	ldr	r0, [fp, #8]
   13a04:	movw	r1, #0
   13a08:	cmp	r0, r1
   13a0c:	str	ip, [sp, #32]
   13a10:	beq	13a20 <__assert_fail@plt+0x251c>
   13a14:	ldr	r0, [fp, #8]
   13a18:	str	r0, [sp, #28]
   13a1c:	b	13a30 <__assert_fail@plt+0x252c>
   13a20:	movw	r0, #38300	; 0x959c
   13a24:	movt	r0, #4
   13a28:	str	r0, [sp, #28]
   13a2c:	b	13a30 <__assert_fail@plt+0x252c>
   13a30:	ldr	r0, [sp, #28]
   13a34:	str	r0, [fp, #-36]	; 0xffffffdc
   13a38:	bl	113fc <__errno_location@plt>
   13a3c:	ldr	r0, [r0]
   13a40:	str	r0, [sp, #40]	; 0x28
   13a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a54:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13a58:	ldr	lr, [lr]
   13a5c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13a60:	ldr	ip, [ip, #4]
   13a64:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13a68:	add	r4, r4, #8
   13a6c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13a70:	ldr	r5, [r5, #40]	; 0x28
   13a74:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13a78:	ldr	r6, [r6, #44]	; 0x2c
   13a7c:	str	lr, [sp]
   13a80:	str	ip, [sp, #4]
   13a84:	str	r4, [sp, #8]
   13a88:	str	r5, [sp, #12]
   13a8c:	str	r6, [sp, #16]
   13a90:	bl	13ab8 <__assert_fail@plt+0x25b4>
   13a94:	str	r0, [sp, #36]	; 0x24
   13a98:	ldr	r0, [sp, #40]	; 0x28
   13a9c:	str	r0, [sp, #24]
   13aa0:	bl	113fc <__errno_location@plt>
   13aa4:	ldr	r1, [sp, #24]
   13aa8:	str	r1, [r0]
   13aac:	ldr	r0, [sp, #36]	; 0x24
   13ab0:	sub	sp, fp, #16
   13ab4:	pop	{r4, r5, r6, sl, fp, pc}
   13ab8:	push	{r4, r5, r6, sl, fp, lr}
   13abc:	add	fp, sp, #16
   13ac0:	sub	sp, sp, #168	; 0xa8
   13ac4:	ldr	ip, [fp, #24]
   13ac8:	ldr	lr, [fp, #20]
   13acc:	ldr	r4, [fp, #16]
   13ad0:	ldr	r5, [fp, #12]
   13ad4:	ldr	r6, [fp, #8]
   13ad8:	str	r0, [fp, #-24]	; 0xffffffe8
   13adc:	str	r1, [fp, #-28]	; 0xffffffe4
   13ae0:	str	r2, [fp, #-32]	; 0xffffffe0
   13ae4:	str	r3, [fp, #-36]	; 0xffffffdc
   13ae8:	movw	r0, #0
   13aec:	str	r0, [fp, #-44]	; 0xffffffd4
   13af0:	str	r0, [fp, #-48]	; 0xffffffd0
   13af4:	str	r0, [fp, #-52]	; 0xffffffcc
   13af8:	str	r0, [fp, #-56]	; 0xffffffc8
   13afc:	movw	r0, #0
   13b00:	strb	r0, [fp, #-57]	; 0xffffffc7
   13b04:	str	r6, [sp, #80]	; 0x50
   13b08:	str	lr, [sp, #76]	; 0x4c
   13b0c:	str	r4, [sp, #72]	; 0x48
   13b10:	str	r5, [sp, #68]	; 0x44
   13b14:	str	ip, [sp, #64]	; 0x40
   13b18:	bl	1133c <__ctype_get_mb_cur_max@plt>
   13b1c:	cmp	r0, #1
   13b20:	movw	r0, #0
   13b24:	moveq	r0, #1
   13b28:	and	r0, r0, #1
   13b2c:	strb	r0, [fp, #-58]	; 0xffffffc6
   13b30:	ldr	r0, [fp, #12]
   13b34:	and	r0, r0, #2
   13b38:	cmp	r0, #0
   13b3c:	movw	r0, #0
   13b40:	movne	r0, #1
   13b44:	and	r0, r0, #1
   13b48:	strb	r0, [fp, #-59]	; 0xffffffc5
   13b4c:	movw	r0, #0
   13b50:	strb	r0, [fp, #-60]	; 0xffffffc4
   13b54:	strb	r0, [fp, #-61]	; 0xffffffc3
   13b58:	movw	r0, #1
   13b5c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13b60:	ldr	r0, [fp, #8]
   13b64:	cmp	r0, #10
   13b68:	str	r0, [sp, #60]	; 0x3c
   13b6c:	bhi	13d94 <__assert_fail@plt+0x2890>
   13b70:	add	r0, pc, #8
   13b74:	ldr	r1, [sp, #60]	; 0x3c
   13b78:	ldr	r0, [r0, r1, lsl #2]
   13b7c:	mov	pc, r0
   13b80:	andeq	r3, r1, r8, lsl #27
   13b84:	andeq	r3, r1, r4, lsl #26
   13b88:	andeq	r3, r1, r4, lsr #26
   13b8c:	strdeq	r3, [r1], -ip
   13b90:	andeq	r3, r1, ip, lsl #26
   13b94:			; <UNDEFINED> instruction: 0x00013bbc
   13b98:	andeq	r3, r1, ip, lsr #23
   13b9c:	andeq	r3, r1, r0, lsr #24
   13ba0:	andeq	r3, r1, r4, lsr ip
   13ba4:	andeq	r3, r1, r4, lsr ip
   13ba8:	andeq	r3, r1, r4, lsr ip
   13bac:	movw	r0, #5
   13bb0:	str	r0, [fp, #8]
   13bb4:	movw	r0, #1
   13bb8:	strb	r0, [fp, #-59]	; 0xffffffc5
   13bbc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bc0:	tst	r0, #1
   13bc4:	bne	13c00 <__assert_fail@plt+0x26fc>
   13bc8:	b	13bcc <__assert_fail@plt+0x26c8>
   13bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bd4:	cmp	r0, r1
   13bd8:	bcs	13bf0 <__assert_fail@plt+0x26ec>
   13bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13be4:	add	r0, r0, r1
   13be8:	movw	r1, #34	; 0x22
   13bec:	strb	r1, [r0]
   13bf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bf4:	add	r0, r0, #1
   13bf8:	str	r0, [fp, #-44]	; 0xffffffd4
   13bfc:	b	13c00 <__assert_fail@plt+0x26fc>
   13c00:	movw	r0, #1
   13c04:	strb	r0, [fp, #-57]	; 0xffffffc7
   13c08:	movw	r0, #32970	; 0x80ca
   13c0c:	movt	r0, #3
   13c10:	str	r0, [fp, #-52]	; 0xffffffcc
   13c14:	movw	r0, #1
   13c18:	str	r0, [fp, #-56]	; 0xffffffc8
   13c1c:	b	13d98 <__assert_fail@plt+0x2894>
   13c20:	movw	r0, #1
   13c24:	strb	r0, [fp, #-57]	; 0xffffffc7
   13c28:	movw	r0, #0
   13c2c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13c30:	b	13d98 <__assert_fail@plt+0x2894>
   13c34:	ldr	r0, [fp, #8]
   13c38:	cmp	r0, #10
   13c3c:	beq	13c68 <__assert_fail@plt+0x2764>
   13c40:	ldr	r1, [fp, #8]
   13c44:	movw	r0, #32972	; 0x80cc
   13c48:	movt	r0, #3
   13c4c:	bl	15ca8 <__assert_fail@plt+0x47a4>
   13c50:	str	r0, [fp, #20]
   13c54:	ldr	r1, [fp, #8]
   13c58:	movw	r0, #32974	; 0x80ce
   13c5c:	movt	r0, #3
   13c60:	bl	15ca8 <__assert_fail@plt+0x47a4>
   13c64:	str	r0, [fp, #24]
   13c68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c6c:	tst	r0, #1
   13c70:	bne	13cdc <__assert_fail@plt+0x27d8>
   13c74:	ldr	r0, [fp, #20]
   13c78:	str	r0, [fp, #-52]	; 0xffffffcc
   13c7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13c80:	ldrsb	r0, [r0]
   13c84:	cmp	r0, #0
   13c88:	beq	13cd8 <__assert_fail@plt+0x27d4>
   13c8c:	b	13c90 <__assert_fail@plt+0x278c>
   13c90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c98:	cmp	r0, r1
   13c9c:	bcs	13cb8 <__assert_fail@plt+0x27b4>
   13ca0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ca4:	ldrb	r0, [r0]
   13ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13cb0:	add	r1, r1, r2
   13cb4:	strb	r0, [r1]
   13cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cbc:	add	r0, r0, #1
   13cc0:	str	r0, [fp, #-44]	; 0xffffffd4
   13cc4:	b	13cc8 <__assert_fail@plt+0x27c4>
   13cc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ccc:	add	r0, r0, #1
   13cd0:	str	r0, [fp, #-52]	; 0xffffffcc
   13cd4:	b	13c7c <__assert_fail@plt+0x2778>
   13cd8:	b	13cdc <__assert_fail@plt+0x27d8>
   13cdc:	movw	r0, #1
   13ce0:	strb	r0, [fp, #-57]	; 0xffffffc7
   13ce4:	ldr	r0, [fp, #24]
   13ce8:	str	r0, [fp, #-52]	; 0xffffffcc
   13cec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13cf0:	bl	113d8 <strlen@plt>
   13cf4:	str	r0, [fp, #-56]	; 0xffffffc8
   13cf8:	b	13d98 <__assert_fail@plt+0x2894>
   13cfc:	movw	r0, #1
   13d00:	strb	r0, [fp, #-57]	; 0xffffffc7
   13d04:	movw	r0, #1
   13d08:	strb	r0, [fp, #-59]	; 0xffffffc5
   13d0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d10:	tst	r0, #1
   13d14:	bne	13d20 <__assert_fail@plt+0x281c>
   13d18:	movw	r0, #1
   13d1c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13d20:	b	13d24 <__assert_fail@plt+0x2820>
   13d24:	movw	r0, #2
   13d28:	str	r0, [fp, #8]
   13d2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d30:	tst	r0, #1
   13d34:	bne	13d70 <__assert_fail@plt+0x286c>
   13d38:	b	13d3c <__assert_fail@plt+0x2838>
   13d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d44:	cmp	r0, r1
   13d48:	bcs	13d60 <__assert_fail@plt+0x285c>
   13d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d54:	add	r0, r0, r1
   13d58:	movw	r1, #39	; 0x27
   13d5c:	strb	r1, [r0]
   13d60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d64:	add	r0, r0, #1
   13d68:	str	r0, [fp, #-44]	; 0xffffffd4
   13d6c:	b	13d70 <__assert_fail@plt+0x286c>
   13d70:	movw	r0, #32974	; 0x80ce
   13d74:	movt	r0, #3
   13d78:	str	r0, [fp, #-52]	; 0xffffffcc
   13d7c:	movw	r0, #1
   13d80:	str	r0, [fp, #-56]	; 0xffffffc8
   13d84:	b	13d98 <__assert_fail@plt+0x2894>
   13d88:	movw	r0, #0
   13d8c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13d90:	b	13d98 <__assert_fail@plt+0x2894>
   13d94:	bl	114e0 <abort@plt>
   13d98:	movw	r0, #0
   13d9c:	str	r0, [fp, #-40]	; 0xffffffd8
   13da0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13da4:	cmn	r0, #1
   13da8:	bne	13dd4 <__assert_fail@plt+0x28d0>
   13dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13db0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13db4:	add	r0, r0, r1
   13db8:	ldrb	r0, [r0]
   13dbc:	cmp	r0, #0
   13dc0:	movw	r0, #0
   13dc4:	moveq	r0, #1
   13dc8:	and	r0, r0, #1
   13dcc:	str	r0, [sp, #56]	; 0x38
   13dd0:	b	13df0 <__assert_fail@plt+0x28ec>
   13dd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ddc:	cmp	r0, r1
   13de0:	movw	r0, #0
   13de4:	moveq	r0, #1
   13de8:	and	r0, r0, #1
   13dec:	str	r0, [sp, #56]	; 0x38
   13df0:	ldr	r0, [sp, #56]	; 0x38
   13df4:	cmp	r0, #0
   13df8:	movw	r0, #0
   13dfc:	movne	r0, #1
   13e00:	mvn	r1, #0
   13e04:	eor	r0, r0, r1
   13e08:	tst	r0, #1
   13e0c:	beq	14ffc <__assert_fail@plt+0x3af8>
   13e10:	movw	r0, #0
   13e14:	strb	r0, [fp, #-65]	; 0xffffffbf
   13e18:	strb	r0, [fp, #-66]	; 0xffffffbe
   13e1c:	strb	r0, [fp, #-67]	; 0xffffffbd
   13e20:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13e24:	tst	r0, #1
   13e28:	beq	13ed4 <__assert_fail@plt+0x29d0>
   13e2c:	ldr	r0, [fp, #8]
   13e30:	cmp	r0, #2
   13e34:	beq	13ed4 <__assert_fail@plt+0x29d0>
   13e38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13e3c:	cmp	r0, #0
   13e40:	beq	13ed4 <__assert_fail@plt+0x29d0>
   13e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13e4c:	add	r0, r0, r1
   13e50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e54:	cmn	r1, #1
   13e58:	str	r0, [sp, #52]	; 0x34
   13e5c:	bne	13e84 <__assert_fail@plt+0x2980>
   13e60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13e64:	movw	r1, #1
   13e68:	cmp	r1, r0
   13e6c:	bcs	13e84 <__assert_fail@plt+0x2980>
   13e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e74:	bl	113d8 <strlen@plt>
   13e78:	str	r0, [fp, #-36]	; 0xffffffdc
   13e7c:	str	r0, [sp, #48]	; 0x30
   13e80:	b	13e8c <__assert_fail@plt+0x2988>
   13e84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e88:	str	r0, [sp, #48]	; 0x30
   13e8c:	ldr	r0, [sp, #48]	; 0x30
   13e90:	ldr	r1, [sp, #52]	; 0x34
   13e94:	cmp	r1, r0
   13e98:	bhi	13ed4 <__assert_fail@plt+0x29d0>
   13e9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ea0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ea4:	add	r0, r0, r1
   13ea8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13eac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13eb0:	bl	112e8 <memcmp@plt>
   13eb4:	cmp	r0, #0
   13eb8:	bne	13ed4 <__assert_fail@plt+0x29d0>
   13ebc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ec0:	tst	r0, #1
   13ec4:	beq	13ecc <__assert_fail@plt+0x29c8>
   13ec8:	b	1517c <__assert_fail@plt+0x3c78>
   13ecc:	movw	r0, #1
   13ed0:	strb	r0, [fp, #-65]	; 0xffffffbf
   13ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ed8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13edc:	ldrb	r0, [r0, r1]
   13ee0:	strb	r0, [fp, #-63]	; 0xffffffc1
   13ee4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ee8:	mov	r1, r0
   13eec:	cmp	r0, #126	; 0x7e
   13ef0:	str	r1, [sp, #44]	; 0x2c
   13ef4:	bhi	14764 <__assert_fail@plt+0x3260>
   13ef8:	add	r0, pc, #8
   13efc:	ldr	r1, [sp, #44]	; 0x2c
   13f00:	ldr	r0, [r0, r1, lsl #2]
   13f04:	mov	pc, r0
   13f08:	andeq	r4, r1, r4, lsl #2
   13f0c:	andeq	r4, r1, r4, ror #14
   13f10:	andeq	r4, r1, r4, ror #14
   13f14:	andeq	r4, r1, r4, ror #14
   13f18:	andeq	r4, r1, r4, ror #14
   13f1c:	andeq	r4, r1, r4, ror #14
   13f20:	andeq	r4, r1, r4, ror #14
   13f24:	andeq	r4, r1, ip, lsl #10
   13f28:	andeq	r4, r1, r8, lsl r5
   13f2c:	andeq	r4, r1, r8, asr #10
   13f30:	andeq	r4, r1, r0, lsr r5
   13f34:	andeq	r4, r1, r4, asr r5
   13f38:	andeq	r4, r1, r4, lsr #10
   13f3c:	andeq	r4, r1, ip, lsr r5
   13f40:	andeq	r4, r1, r4, ror #14
   13f44:	andeq	r4, r1, r4, ror #14
   13f48:	andeq	r4, r1, r4, ror #14
   13f4c:	andeq	r4, r1, r4, ror #14
   13f50:	andeq	r4, r1, r4, ror #14
   13f54:	andeq	r4, r1, r4, ror #14
   13f58:	andeq	r4, r1, r4, ror #14
   13f5c:	andeq	r4, r1, r4, ror #14
   13f60:	andeq	r4, r1, r4, ror #14
   13f64:	andeq	r4, r1, r4, ror #14
   13f68:	andeq	r4, r1, r4, ror #14
   13f6c:	andeq	r4, r1, r4, ror #14
   13f70:	andeq	r4, r1, r4, ror #14
   13f74:	andeq	r4, r1, r4, ror #14
   13f78:	andeq	r4, r1, r4, ror #14
   13f7c:	andeq	r4, r1, r4, ror #14
   13f80:	andeq	r4, r1, r4, ror #14
   13f84:	andeq	r4, r1, r4, ror #14
   13f88:	andeq	r4, r1, r8, lsr r6
   13f8c:	andeq	r4, r1, r0, asr #12
   13f90:	andeq	r4, r1, r0, asr #12
   13f94:	andeq	r4, r1, r4, lsr #12
   13f98:	andeq	r4, r1, r0, asr #12
   13f9c:	andeq	r4, r1, r8, asr r7
   13fa0:	andeq	r4, r1, r0, asr #12
   13fa4:	andeq	r4, r1, r0, ror #12
   13fa8:	andeq	r4, r1, r0, asr #12
   13fac:	andeq	r4, r1, r0, asr #12
   13fb0:	andeq	r4, r1, r0, asr #12
   13fb4:	andeq	r4, r1, r8, asr r7
   13fb8:	andeq	r4, r1, r8, asr r7
   13fbc:	andeq	r4, r1, r8, asr r7
   13fc0:	andeq	r4, r1, r8, asr r7
   13fc4:	andeq	r4, r1, r8, asr r7
   13fc8:	andeq	r4, r1, r8, asr r7
   13fcc:	andeq	r4, r1, r8, asr r7
   13fd0:	andeq	r4, r1, r8, asr r7
   13fd4:	andeq	r4, r1, r8, asr r7
   13fd8:	andeq	r4, r1, r8, asr r7
   13fdc:	andeq	r4, r1, r8, asr r7
   13fe0:	andeq	r4, r1, r8, asr r7
   13fe4:	andeq	r4, r1, r8, asr r7
   13fe8:	andeq	r4, r1, r8, asr r7
   13fec:	andeq	r4, r1, r8, asr r7
   13ff0:	andeq	r4, r1, r8, asr r7
   13ff4:	andeq	r4, r1, r0, asr #12
   13ff8:	andeq	r4, r1, r0, asr #12
   13ffc:	andeq	r4, r1, r0, asr #12
   14000:	andeq	r4, r1, r0, asr #12
   14004:	andeq	r4, r1, r0, lsl r3
   14008:	andeq	r4, r1, r4, ror #14
   1400c:	andeq	r4, r1, r8, asr r7
   14010:	andeq	r4, r1, r8, asr r7
   14014:	andeq	r4, r1, r8, asr r7
   14018:	andeq	r4, r1, r8, asr r7
   1401c:	andeq	r4, r1, r8, asr r7
   14020:	andeq	r4, r1, r8, asr r7
   14024:	andeq	r4, r1, r8, asr r7
   14028:	andeq	r4, r1, r8, asr r7
   1402c:	andeq	r4, r1, r8, asr r7
   14030:	andeq	r4, r1, r8, asr r7
   14034:	andeq	r4, r1, r8, asr r7
   14038:	andeq	r4, r1, r8, asr r7
   1403c:	andeq	r4, r1, r8, asr r7
   14040:	andeq	r4, r1, r8, asr r7
   14044:	andeq	r4, r1, r8, asr r7
   14048:	andeq	r4, r1, r8, asr r7
   1404c:	andeq	r4, r1, r8, asr r7
   14050:	andeq	r4, r1, r8, asr r7
   14054:	andeq	r4, r1, r8, asr r7
   14058:	andeq	r4, r1, r8, asr r7
   1405c:	andeq	r4, r1, r8, asr r7
   14060:	andeq	r4, r1, r8, asr r7
   14064:	andeq	r4, r1, r8, asr r7
   14068:	andeq	r4, r1, r8, asr r7
   1406c:	andeq	r4, r1, r8, asr r7
   14070:	andeq	r4, r1, r8, asr r7
   14074:	andeq	r4, r1, r0, asr #12
   14078:	andeq	r4, r1, r0, ror #10
   1407c:	andeq	r4, r1, r8, asr r7
   14080:	andeq	r4, r1, r0, asr #12
   14084:	andeq	r4, r1, r8, asr r7
   14088:	andeq	r4, r1, r0, asr #12
   1408c:	andeq	r4, r1, r8, asr r7
   14090:	andeq	r4, r1, r8, asr r7
   14094:	andeq	r4, r1, r8, asr r7
   14098:	andeq	r4, r1, r8, asr r7
   1409c:	andeq	r4, r1, r8, asr r7
   140a0:	andeq	r4, r1, r8, asr r7
   140a4:	andeq	r4, r1, r8, asr r7
   140a8:	andeq	r4, r1, r8, asr r7
   140ac:	andeq	r4, r1, r8, asr r7
   140b0:	andeq	r4, r1, r8, asr r7
   140b4:	andeq	r4, r1, r8, asr r7
   140b8:	andeq	r4, r1, r8, asr r7
   140bc:	andeq	r4, r1, r8, asr r7
   140c0:	andeq	r4, r1, r8, asr r7
   140c4:	andeq	r4, r1, r8, asr r7
   140c8:	andeq	r4, r1, r8, asr r7
   140cc:	andeq	r4, r1, r8, asr r7
   140d0:	andeq	r4, r1, r8, asr r7
   140d4:	andeq	r4, r1, r8, asr r7
   140d8:	andeq	r4, r1, r8, asr r7
   140dc:	andeq	r4, r1, r8, asr r7
   140e0:	andeq	r4, r1, r8, asr r7
   140e4:	andeq	r4, r1, r8, asr r7
   140e8:	andeq	r4, r1, r8, asr r7
   140ec:	andeq	r4, r1, r8, asr r7
   140f0:	andeq	r4, r1, r8, asr r7
   140f4:	strdeq	r4, [r1], -r0
   140f8:	andeq	r4, r1, r0, asr #12
   140fc:	strdeq	r4, [r1], -r0
   14100:	andeq	r4, r1, r4, lsr #12
   14104:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14108:	tst	r0, #1
   1410c:	beq	142f4 <__assert_fail@plt+0x2df0>
   14110:	b	14114 <__assert_fail@plt+0x2c10>
   14114:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14118:	tst	r0, #1
   1411c:	beq	14124 <__assert_fail@plt+0x2c20>
   14120:	b	1517c <__assert_fail@plt+0x3c78>
   14124:	movw	r0, #1
   14128:	strb	r0, [fp, #-66]	; 0xffffffbe
   1412c:	ldr	r0, [fp, #8]
   14130:	cmp	r0, #2
   14134:	bne	141e8 <__assert_fail@plt+0x2ce4>
   14138:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1413c:	tst	r0, #1
   14140:	bne	141e8 <__assert_fail@plt+0x2ce4>
   14144:	b	14148 <__assert_fail@plt+0x2c44>
   14148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1414c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14150:	cmp	r0, r1
   14154:	bcs	1416c <__assert_fail@plt+0x2c68>
   14158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1415c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14160:	add	r0, r0, r1
   14164:	movw	r1, #39	; 0x27
   14168:	strb	r1, [r0]
   1416c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14170:	add	r0, r0, #1
   14174:	str	r0, [fp, #-44]	; 0xffffffd4
   14178:	b	1417c <__assert_fail@plt+0x2c78>
   1417c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14180:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14184:	cmp	r0, r1
   14188:	bcs	141a0 <__assert_fail@plt+0x2c9c>
   1418c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14190:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14194:	add	r0, r0, r1
   14198:	movw	r1, #36	; 0x24
   1419c:	strb	r1, [r0]
   141a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141a4:	add	r0, r0, #1
   141a8:	str	r0, [fp, #-44]	; 0xffffffd4
   141ac:	b	141b0 <__assert_fail@plt+0x2cac>
   141b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141b8:	cmp	r0, r1
   141bc:	bcs	141d4 <__assert_fail@plt+0x2cd0>
   141c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141c8:	add	r0, r0, r1
   141cc:	movw	r1, #39	; 0x27
   141d0:	strb	r1, [r0]
   141d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141d8:	add	r0, r0, #1
   141dc:	str	r0, [fp, #-44]	; 0xffffffd4
   141e0:	movw	r0, #1
   141e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   141e8:	b	141ec <__assert_fail@plt+0x2ce8>
   141ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141f4:	cmp	r0, r1
   141f8:	bcs	14210 <__assert_fail@plt+0x2d0c>
   141fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14200:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14204:	add	r0, r0, r1
   14208:	movw	r1, #92	; 0x5c
   1420c:	strb	r1, [r0]
   14210:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14214:	add	r0, r0, #1
   14218:	str	r0, [fp, #-44]	; 0xffffffd4
   1421c:	b	14220 <__assert_fail@plt+0x2d1c>
   14220:	ldr	r0, [fp, #8]
   14224:	cmp	r0, #2
   14228:	beq	142e8 <__assert_fail@plt+0x2de4>
   1422c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14230:	add	r0, r0, #1
   14234:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14238:	cmp	r0, r1
   1423c:	bcs	142e8 <__assert_fail@plt+0x2de4>
   14240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14244:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14248:	add	r1, r1, #1
   1424c:	add	r0, r0, r1
   14250:	ldrb	r0, [r0]
   14254:	movw	r1, #48	; 0x30
   14258:	cmp	r1, r0
   1425c:	bgt	142e8 <__assert_fail@plt+0x2de4>
   14260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14264:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14268:	add	r1, r1, #1
   1426c:	add	r0, r0, r1
   14270:	ldrb	r0, [r0]
   14274:	cmp	r0, #57	; 0x39
   14278:	bgt	142e8 <__assert_fail@plt+0x2de4>
   1427c:	b	14280 <__assert_fail@plt+0x2d7c>
   14280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14288:	cmp	r0, r1
   1428c:	bcs	142a4 <__assert_fail@plt+0x2da0>
   14290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14294:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14298:	add	r0, r0, r1
   1429c:	movw	r1, #48	; 0x30
   142a0:	strb	r1, [r0]
   142a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142a8:	add	r0, r0, #1
   142ac:	str	r0, [fp, #-44]	; 0xffffffd4
   142b0:	b	142b4 <__assert_fail@plt+0x2db0>
   142b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142bc:	cmp	r0, r1
   142c0:	bcs	142d8 <__assert_fail@plt+0x2dd4>
   142c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142cc:	add	r0, r0, r1
   142d0:	movw	r1, #48	; 0x30
   142d4:	strb	r1, [r0]
   142d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142dc:	add	r0, r0, #1
   142e0:	str	r0, [fp, #-44]	; 0xffffffd4
   142e4:	b	142e8 <__assert_fail@plt+0x2de4>
   142e8:	movw	r0, #48	; 0x30
   142ec:	strb	r0, [fp, #-63]	; 0xffffffc1
   142f0:	b	1430c <__assert_fail@plt+0x2e08>
   142f4:	ldr	r0, [fp, #12]
   142f8:	and	r0, r0, #1
   142fc:	cmp	r0, #0
   14300:	beq	14308 <__assert_fail@plt+0x2e04>
   14304:	b	14fec <__assert_fail@plt+0x3ae8>
   14308:	b	1430c <__assert_fail@plt+0x2e08>
   1430c:	b	14d88 <__assert_fail@plt+0x3884>
   14310:	ldr	r0, [fp, #8]
   14314:	cmp	r0, #2
   14318:	str	r0, [sp, #40]	; 0x28
   1431c:	beq	14334 <__assert_fail@plt+0x2e30>
   14320:	b	14324 <__assert_fail@plt+0x2e20>
   14324:	ldr	r0, [sp, #40]	; 0x28
   14328:	cmp	r0, #5
   1432c:	beq	14348 <__assert_fail@plt+0x2e44>
   14330:	b	14504 <__assert_fail@plt+0x3000>
   14334:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14338:	tst	r0, #1
   1433c:	beq	14344 <__assert_fail@plt+0x2e40>
   14340:	b	1517c <__assert_fail@plt+0x3c78>
   14344:	b	14508 <__assert_fail@plt+0x3004>
   14348:	ldr	r0, [fp, #12]
   1434c:	and	r0, r0, #4
   14350:	cmp	r0, #0
   14354:	beq	14500 <__assert_fail@plt+0x2ffc>
   14358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1435c:	add	r0, r0, #2
   14360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14364:	cmp	r0, r1
   14368:	bcs	14500 <__assert_fail@plt+0x2ffc>
   1436c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14374:	add	r1, r1, #1
   14378:	add	r0, r0, r1
   1437c:	ldrb	r0, [r0]
   14380:	cmp	r0, #63	; 0x3f
   14384:	bne	14500 <__assert_fail@plt+0x2ffc>
   14388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1438c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14390:	add	r0, r0, r1
   14394:	ldrb	r0, [r0, #2]
   14398:	mov	r1, r0
   1439c:	cmp	r0, #33	; 0x21
   143a0:	str	r1, [sp, #36]	; 0x24
   143a4:	beq	143f4 <__assert_fail@plt+0x2ef0>
   143a8:	b	143ac <__assert_fail@plt+0x2ea8>
   143ac:	ldr	r0, [sp, #36]	; 0x24
   143b0:	sub	r1, r0, #39	; 0x27
   143b4:	cmp	r1, #3
   143b8:	bcc	143f4 <__assert_fail@plt+0x2ef0>
   143bc:	b	143c0 <__assert_fail@plt+0x2ebc>
   143c0:	ldr	r0, [sp, #36]	; 0x24
   143c4:	cmp	r0, #45	; 0x2d
   143c8:	beq	143f4 <__assert_fail@plt+0x2ef0>
   143cc:	b	143d0 <__assert_fail@plt+0x2ecc>
   143d0:	ldr	r0, [sp, #36]	; 0x24
   143d4:	cmp	r0, #47	; 0x2f
   143d8:	beq	143f4 <__assert_fail@plt+0x2ef0>
   143dc:	b	143e0 <__assert_fail@plt+0x2edc>
   143e0:	ldr	r0, [sp, #36]	; 0x24
   143e4:	sub	r1, r0, #60	; 0x3c
   143e8:	cmp	r1, #2
   143ec:	bhi	144f8 <__assert_fail@plt+0x2ff4>
   143f0:	b	143f4 <__assert_fail@plt+0x2ef0>
   143f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   143f8:	tst	r0, #1
   143fc:	beq	14404 <__assert_fail@plt+0x2f00>
   14400:	b	1517c <__assert_fail@plt+0x3c78>
   14404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1440c:	add	r1, r1, #2
   14410:	add	r0, r0, r1
   14414:	ldrb	r0, [r0]
   14418:	strb	r0, [fp, #-63]	; 0xffffffc1
   1441c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14420:	add	r0, r0, #2
   14424:	str	r0, [fp, #-40]	; 0xffffffd8
   14428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1442c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14430:	cmp	r0, r1
   14434:	bcs	1444c <__assert_fail@plt+0x2f48>
   14438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1443c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14440:	add	r0, r0, r1
   14444:	movw	r1, #63	; 0x3f
   14448:	strb	r1, [r0]
   1444c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14450:	add	r0, r0, #1
   14454:	str	r0, [fp, #-44]	; 0xffffffd4
   14458:	b	1445c <__assert_fail@plt+0x2f58>
   1445c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14464:	cmp	r0, r1
   14468:	bcs	14480 <__assert_fail@plt+0x2f7c>
   1446c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14474:	add	r0, r0, r1
   14478:	movw	r1, #34	; 0x22
   1447c:	strb	r1, [r0]
   14480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14484:	add	r0, r0, #1
   14488:	str	r0, [fp, #-44]	; 0xffffffd4
   1448c:	b	14490 <__assert_fail@plt+0x2f8c>
   14490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14494:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14498:	cmp	r0, r1
   1449c:	bcs	144b4 <__assert_fail@plt+0x2fb0>
   144a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144a8:	add	r0, r0, r1
   144ac:	movw	r1, #34	; 0x22
   144b0:	strb	r1, [r0]
   144b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144b8:	add	r0, r0, #1
   144bc:	str	r0, [fp, #-44]	; 0xffffffd4
   144c0:	b	144c4 <__assert_fail@plt+0x2fc0>
   144c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144cc:	cmp	r0, r1
   144d0:	bcs	144e8 <__assert_fail@plt+0x2fe4>
   144d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144dc:	add	r0, r0, r1
   144e0:	movw	r1, #63	; 0x3f
   144e4:	strb	r1, [r0]
   144e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144ec:	add	r0, r0, #1
   144f0:	str	r0, [fp, #-44]	; 0xffffffd4
   144f4:	b	144fc <__assert_fail@plt+0x2ff8>
   144f8:	b	144fc <__assert_fail@plt+0x2ff8>
   144fc:	b	14500 <__assert_fail@plt+0x2ffc>
   14500:	b	14508 <__assert_fail@plt+0x3004>
   14504:	b	14508 <__assert_fail@plt+0x3004>
   14508:	b	14d88 <__assert_fail@plt+0x3884>
   1450c:	movw	r0, #97	; 0x61
   14510:	strb	r0, [fp, #-64]	; 0xffffffc0
   14514:	b	145d4 <__assert_fail@plt+0x30d0>
   14518:	movw	r0, #98	; 0x62
   1451c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14520:	b	145d4 <__assert_fail@plt+0x30d0>
   14524:	movw	r0, #102	; 0x66
   14528:	strb	r0, [fp, #-64]	; 0xffffffc0
   1452c:	b	145d4 <__assert_fail@plt+0x30d0>
   14530:	movw	r0, #110	; 0x6e
   14534:	strb	r0, [fp, #-64]	; 0xffffffc0
   14538:	b	145b4 <__assert_fail@plt+0x30b0>
   1453c:	movw	r0, #114	; 0x72
   14540:	strb	r0, [fp, #-64]	; 0xffffffc0
   14544:	b	145b4 <__assert_fail@plt+0x30b0>
   14548:	movw	r0, #116	; 0x74
   1454c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14550:	b	145b4 <__assert_fail@plt+0x30b0>
   14554:	movw	r0, #118	; 0x76
   14558:	strb	r0, [fp, #-64]	; 0xffffffc0
   1455c:	b	145d4 <__assert_fail@plt+0x30d0>
   14560:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14564:	strb	r0, [fp, #-64]	; 0xffffffc0
   14568:	ldr	r0, [fp, #8]
   1456c:	cmp	r0, #2
   14570:	bne	14588 <__assert_fail@plt+0x3084>
   14574:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14578:	tst	r0, #1
   1457c:	beq	14584 <__assert_fail@plt+0x3080>
   14580:	b	1517c <__assert_fail@plt+0x3c78>
   14584:	b	14f10 <__assert_fail@plt+0x3a0c>
   14588:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1458c:	tst	r0, #1
   14590:	beq	145b0 <__assert_fail@plt+0x30ac>
   14594:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14598:	tst	r0, #1
   1459c:	beq	145b0 <__assert_fail@plt+0x30ac>
   145a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   145a4:	cmp	r0, #0
   145a8:	beq	145b0 <__assert_fail@plt+0x30ac>
   145ac:	b	14f10 <__assert_fail@plt+0x3a0c>
   145b0:	b	145b4 <__assert_fail@plt+0x30b0>
   145b4:	ldr	r0, [fp, #8]
   145b8:	cmp	r0, #2
   145bc:	bne	145d0 <__assert_fail@plt+0x30cc>
   145c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145c4:	tst	r0, #1
   145c8:	beq	145d0 <__assert_fail@plt+0x30cc>
   145cc:	b	1517c <__assert_fail@plt+0x3c78>
   145d0:	b	145d4 <__assert_fail@plt+0x30d0>
   145d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   145d8:	tst	r0, #1
   145dc:	beq	145ec <__assert_fail@plt+0x30e8>
   145e0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   145e4:	strb	r0, [fp, #-63]	; 0xffffffc1
   145e8:	b	14dfc <__assert_fail@plt+0x38f8>
   145ec:	b	14d88 <__assert_fail@plt+0x3884>
   145f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   145f4:	cmn	r0, #1
   145f8:	bne	14610 <__assert_fail@plt+0x310c>
   145fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14600:	ldrb	r0, [r0, #1]
   14604:	cmp	r0, #0
   14608:	beq	14620 <__assert_fail@plt+0x311c>
   1460c:	b	1461c <__assert_fail@plt+0x3118>
   14610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14614:	cmp	r0, #1
   14618:	beq	14620 <__assert_fail@plt+0x311c>
   1461c:	b	14d88 <__assert_fail@plt+0x3884>
   14620:	b	14624 <__assert_fail@plt+0x3120>
   14624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14628:	cmp	r0, #0
   1462c:	beq	14634 <__assert_fail@plt+0x3130>
   14630:	b	14d88 <__assert_fail@plt+0x3884>
   14634:	b	14638 <__assert_fail@plt+0x3134>
   14638:	movw	r0, #1
   1463c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14640:	ldr	r0, [fp, #8]
   14644:	cmp	r0, #2
   14648:	bne	1465c <__assert_fail@plt+0x3158>
   1464c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14650:	tst	r0, #1
   14654:	beq	1465c <__assert_fail@plt+0x3158>
   14658:	b	1517c <__assert_fail@plt+0x3c78>
   1465c:	b	14d88 <__assert_fail@plt+0x3884>
   14660:	movw	r0, #1
   14664:	strb	r0, [fp, #-61]	; 0xffffffc3
   14668:	strb	r0, [fp, #-67]	; 0xffffffbd
   1466c:	ldr	r0, [fp, #8]
   14670:	cmp	r0, #2
   14674:	bne	14754 <__assert_fail@plt+0x3250>
   14678:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1467c:	tst	r0, #1
   14680:	beq	14688 <__assert_fail@plt+0x3184>
   14684:	b	1517c <__assert_fail@plt+0x3c78>
   14688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1468c:	cmp	r0, #0
   14690:	beq	146b0 <__assert_fail@plt+0x31ac>
   14694:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14698:	cmp	r0, #0
   1469c:	bne	146b0 <__assert_fail@plt+0x31ac>
   146a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   146a4:	str	r0, [fp, #-48]	; 0xffffffd0
   146a8:	movw	r0, #0
   146ac:	str	r0, [fp, #-28]	; 0xffffffe4
   146b0:	b	146b4 <__assert_fail@plt+0x31b0>
   146b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146bc:	cmp	r0, r1
   146c0:	bcs	146d8 <__assert_fail@plt+0x31d4>
   146c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146cc:	add	r0, r0, r1
   146d0:	movw	r1, #39	; 0x27
   146d4:	strb	r1, [r0]
   146d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146dc:	add	r0, r0, #1
   146e0:	str	r0, [fp, #-44]	; 0xffffffd4
   146e4:	b	146e8 <__assert_fail@plt+0x31e4>
   146e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f0:	cmp	r0, r1
   146f4:	bcs	1470c <__assert_fail@plt+0x3208>
   146f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14700:	add	r0, r0, r1
   14704:	movw	r1, #92	; 0x5c
   14708:	strb	r1, [r0]
   1470c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14710:	add	r0, r0, #1
   14714:	str	r0, [fp, #-44]	; 0xffffffd4
   14718:	b	1471c <__assert_fail@plt+0x3218>
   1471c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14720:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14724:	cmp	r0, r1
   14728:	bcs	14740 <__assert_fail@plt+0x323c>
   1472c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14730:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14734:	add	r0, r0, r1
   14738:	movw	r1, #39	; 0x27
   1473c:	strb	r1, [r0]
   14740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14744:	add	r0, r0, #1
   14748:	str	r0, [fp, #-44]	; 0xffffffd4
   1474c:	movw	r0, #0
   14750:	strb	r0, [fp, #-60]	; 0xffffffc4
   14754:	b	14d88 <__assert_fail@plt+0x3884>
   14758:	movw	r0, #1
   1475c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14760:	b	14d88 <__assert_fail@plt+0x3884>
   14764:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14768:	tst	r0, #1
   1476c:	beq	147b0 <__assert_fail@plt+0x32ac>
   14770:	mov	r0, #1
   14774:	str	r0, [fp, #-72]	; 0xffffffb8
   14778:	bl	113b4 <__ctype_b_loc@plt>
   1477c:	ldr	r0, [r0]
   14780:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   14784:	mov	r1, lr
   14788:	add	r0, r0, lr, lsl #1
   1478c:	ldrh	r0, [r0]
   14790:	and	r0, r0, #16384	; 0x4000
   14794:	cmp	r0, #0
   14798:	movw	r0, #0
   1479c:	movne	r0, #1
   147a0:	and	r0, r0, #1
   147a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   147a8:	str	r1, [sp, #32]
   147ac:	b	14a3c <__assert_fail@plt+0x3538>
   147b0:	sub	r0, fp, #84	; 0x54
   147b4:	movw	r1, #0
   147b8:	and	r1, r1, #255	; 0xff
   147bc:	movw	r2, #8
   147c0:	bl	11420 <memset@plt>
   147c4:	movw	r0, #0
   147c8:	str	r0, [fp, #-72]	; 0xffffffb8
   147cc:	movw	r0, #1
   147d0:	strb	r0, [fp, #-73]	; 0xffffffb7
   147d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   147d8:	cmn	r0, #1
   147dc:	bne	147ec <__assert_fail@plt+0x32e8>
   147e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147e4:	bl	113d8 <strlen@plt>
   147e8:	str	r0, [fp, #-36]	; 0xffffffdc
   147ec:	b	147f0 <__assert_fail@plt+0x32ec>
   147f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   147f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   147fc:	add	r1, r1, r2
   14800:	add	r1, r0, r1
   14804:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14808:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1480c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14810:	add	r2, r2, r3
   14814:	sub	r2, r0, r2
   14818:	sub	r0, fp, #88	; 0x58
   1481c:	sub	r3, fp, #84	; 0x54
   14820:	bl	354d8 <__assert_fail@plt+0x23fd4>
   14824:	str	r0, [sp, #92]	; 0x5c
   14828:	ldr	r0, [sp, #92]	; 0x5c
   1482c:	cmp	r0, #0
   14830:	bne	14838 <__assert_fail@plt+0x3334>
   14834:	b	14a38 <__assert_fail@plt+0x3534>
   14838:	ldr	r0, [sp, #92]	; 0x5c
   1483c:	cmn	r0, #1
   14840:	bne	14850 <__assert_fail@plt+0x334c>
   14844:	movw	r0, #0
   14848:	strb	r0, [fp, #-73]	; 0xffffffb7
   1484c:	b	14a38 <__assert_fail@plt+0x3534>
   14850:	ldr	r0, [sp, #92]	; 0x5c
   14854:	cmn	r0, #2
   14858:	bne	148cc <__assert_fail@plt+0x33c8>
   1485c:	movw	r0, #0
   14860:	strb	r0, [fp, #-73]	; 0xffffffb7
   14864:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14868:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1486c:	add	r0, r0, r1
   14870:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14874:	cmp	r0, r1
   14878:	movw	r0, #0
   1487c:	str	r0, [sp, #28]
   14880:	bcs	148ac <__assert_fail@plt+0x33a8>
   14884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14888:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1488c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14890:	add	r1, r1, r2
   14894:	add	r0, r0, r1
   14898:	ldrb	r0, [r0]
   1489c:	cmp	r0, #0
   148a0:	movw	r0, #0
   148a4:	movne	r0, #1
   148a8:	str	r0, [sp, #28]
   148ac:	ldr	r0, [sp, #28]
   148b0:	tst	r0, #1
   148b4:	beq	148c8 <__assert_fail@plt+0x33c4>
   148b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   148bc:	add	r0, r0, #1
   148c0:	str	r0, [fp, #-72]	; 0xffffffb8
   148c4:	b	14864 <__assert_fail@plt+0x3360>
   148c8:	b	14a38 <__assert_fail@plt+0x3534>
   148cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148d0:	tst	r0, #1
   148d4:	beq	149e0 <__assert_fail@plt+0x34dc>
   148d8:	ldr	r0, [fp, #8]
   148dc:	cmp	r0, #2
   148e0:	bne	149e0 <__assert_fail@plt+0x34dc>
   148e4:	movw	r0, #1
   148e8:	str	r0, [sp, #88]	; 0x58
   148ec:	ldr	r0, [sp, #88]	; 0x58
   148f0:	ldr	r1, [sp, #92]	; 0x5c
   148f4:	cmp	r0, r1
   148f8:	bcs	149dc <__assert_fail@plt+0x34d8>
   148fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14900:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14904:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14908:	add	r1, r1, r2
   1490c:	ldr	r2, [sp, #88]	; 0x58
   14910:	add	r1, r1, r2
   14914:	ldrb	r0, [r0, r1]
   14918:	sub	r0, r0, #91	; 0x5b
   1491c:	cmp	r0, #33	; 0x21
   14920:	str	r0, [sp, #24]
   14924:	bhi	149c4 <__assert_fail@plt+0x34c0>
   14928:	add	r0, pc, #8
   1492c:	ldr	r1, [sp, #24]
   14930:	ldr	r0, [r0, r1, lsl #2]
   14934:	mov	pc, r0
   14938:	andeq	r4, r1, r0, asr #19
   1493c:	andeq	r4, r1, r0, asr #19
   14940:	andeq	r4, r1, r4, asr #19
   14944:	andeq	r4, r1, r0, asr #19
   14948:	andeq	r4, r1, r4, asr #19
   1494c:	andeq	r4, r1, r0, asr #19
   14950:	andeq	r4, r1, r4, asr #19
   14954:	andeq	r4, r1, r4, asr #19
   14958:	andeq	r4, r1, r4, asr #19
   1495c:	andeq	r4, r1, r4, asr #19
   14960:	andeq	r4, r1, r4, asr #19
   14964:	andeq	r4, r1, r4, asr #19
   14968:	andeq	r4, r1, r4, asr #19
   1496c:	andeq	r4, r1, r4, asr #19
   14970:	andeq	r4, r1, r4, asr #19
   14974:	andeq	r4, r1, r4, asr #19
   14978:	andeq	r4, r1, r4, asr #19
   1497c:	andeq	r4, r1, r4, asr #19
   14980:	andeq	r4, r1, r4, asr #19
   14984:	andeq	r4, r1, r4, asr #19
   14988:	andeq	r4, r1, r4, asr #19
   1498c:	andeq	r4, r1, r4, asr #19
   14990:	andeq	r4, r1, r4, asr #19
   14994:	andeq	r4, r1, r4, asr #19
   14998:	andeq	r4, r1, r4, asr #19
   1499c:	andeq	r4, r1, r4, asr #19
   149a0:	andeq	r4, r1, r4, asr #19
   149a4:	andeq	r4, r1, r4, asr #19
   149a8:	andeq	r4, r1, r4, asr #19
   149ac:	andeq	r4, r1, r4, asr #19
   149b0:	andeq	r4, r1, r4, asr #19
   149b4:	andeq	r4, r1, r4, asr #19
   149b8:	andeq	r4, r1, r4, asr #19
   149bc:	andeq	r4, r1, r0, asr #19
   149c0:	b	1517c <__assert_fail@plt+0x3c78>
   149c4:	b	149c8 <__assert_fail@plt+0x34c4>
   149c8:	b	149cc <__assert_fail@plt+0x34c8>
   149cc:	ldr	r0, [sp, #88]	; 0x58
   149d0:	add	r0, r0, #1
   149d4:	str	r0, [sp, #88]	; 0x58
   149d8:	b	148ec <__assert_fail@plt+0x33e8>
   149dc:	b	149e0 <__assert_fail@plt+0x34dc>
   149e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   149e4:	bl	11324 <iswprint@plt>
   149e8:	cmp	r0, #0
   149ec:	bne	149f8 <__assert_fail@plt+0x34f4>
   149f0:	movw	r0, #0
   149f4:	strb	r0, [fp, #-73]	; 0xffffffb7
   149f8:	ldr	r0, [sp, #92]	; 0x5c
   149fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14a00:	add	r0, r1, r0
   14a04:	str	r0, [fp, #-72]	; 0xffffffb8
   14a08:	b	14a0c <__assert_fail@plt+0x3508>
   14a0c:	b	14a10 <__assert_fail@plt+0x350c>
   14a10:	b	14a14 <__assert_fail@plt+0x3510>
   14a14:	sub	r0, fp, #84	; 0x54
   14a18:	bl	112d0 <mbsinit@plt>
   14a1c:	cmp	r0, #0
   14a20:	movw	r0, #0
   14a24:	movne	r0, #1
   14a28:	mvn	lr, #0
   14a2c:	eor	r0, r0, lr
   14a30:	tst	r0, #1
   14a34:	bne	147f0 <__assert_fail@plt+0x32ec>
   14a38:	b	14a3c <__assert_fail@plt+0x3538>
   14a3c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14a40:	and	r0, r0, #1
   14a44:	strb	r0, [fp, #-67]	; 0xffffffbd
   14a48:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14a4c:	movw	r1, #1
   14a50:	cmp	r1, r0
   14a54:	bcc	14a70 <__assert_fail@plt+0x356c>
   14a58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14a5c:	tst	r0, #1
   14a60:	beq	14d84 <__assert_fail@plt+0x3880>
   14a64:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14a68:	tst	r0, #1
   14a6c:	bne	14d84 <__assert_fail@plt+0x3880>
   14a70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a74:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14a78:	add	r0, r0, r1
   14a7c:	str	r0, [sp, #84]	; 0x54
   14a80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14a84:	tst	r0, #1
   14a88:	beq	14c38 <__assert_fail@plt+0x3734>
   14a8c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14a90:	tst	r0, #1
   14a94:	bne	14c38 <__assert_fail@plt+0x3734>
   14a98:	b	14a9c <__assert_fail@plt+0x3598>
   14a9c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14aa0:	tst	r0, #1
   14aa4:	beq	14aac <__assert_fail@plt+0x35a8>
   14aa8:	b	1517c <__assert_fail@plt+0x3c78>
   14aac:	movw	r0, #1
   14ab0:	strb	r0, [fp, #-66]	; 0xffffffbe
   14ab4:	ldr	r0, [fp, #8]
   14ab8:	cmp	r0, #2
   14abc:	bne	14b70 <__assert_fail@plt+0x366c>
   14ac0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14ac4:	tst	r0, #1
   14ac8:	bne	14b70 <__assert_fail@plt+0x366c>
   14acc:	b	14ad0 <__assert_fail@plt+0x35cc>
   14ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ad4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ad8:	cmp	r0, r1
   14adc:	bcs	14af4 <__assert_fail@plt+0x35f0>
   14ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ae8:	add	r0, r0, r1
   14aec:	movw	r1, #39	; 0x27
   14af0:	strb	r1, [r0]
   14af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14af8:	add	r0, r0, #1
   14afc:	str	r0, [fp, #-44]	; 0xffffffd4
   14b00:	b	14b04 <__assert_fail@plt+0x3600>
   14b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b0c:	cmp	r0, r1
   14b10:	bcs	14b28 <__assert_fail@plt+0x3624>
   14b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b1c:	add	r0, r0, r1
   14b20:	movw	r1, #36	; 0x24
   14b24:	strb	r1, [r0]
   14b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b2c:	add	r0, r0, #1
   14b30:	str	r0, [fp, #-44]	; 0xffffffd4
   14b34:	b	14b38 <__assert_fail@plt+0x3634>
   14b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b40:	cmp	r0, r1
   14b44:	bcs	14b5c <__assert_fail@plt+0x3658>
   14b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b50:	add	r0, r0, r1
   14b54:	movw	r1, #39	; 0x27
   14b58:	strb	r1, [r0]
   14b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b60:	add	r0, r0, #1
   14b64:	str	r0, [fp, #-44]	; 0xffffffd4
   14b68:	movw	r0, #1
   14b6c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b70:	b	14b74 <__assert_fail@plt+0x3670>
   14b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b7c:	cmp	r0, r1
   14b80:	bcs	14b98 <__assert_fail@plt+0x3694>
   14b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b8c:	add	r0, r0, r1
   14b90:	movw	r1, #92	; 0x5c
   14b94:	strb	r1, [r0]
   14b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b9c:	add	r0, r0, #1
   14ba0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ba4:	b	14ba8 <__assert_fail@plt+0x36a4>
   14ba8:	b	14bac <__assert_fail@plt+0x36a8>
   14bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bb4:	cmp	r0, r1
   14bb8:	bcs	14bd8 <__assert_fail@plt+0x36d4>
   14bbc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14bc0:	asr	r0, r0, #6
   14bc4:	add	r0, r0, #48	; 0x30
   14bc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14bd0:	add	r1, r1, r2
   14bd4:	strb	r0, [r1]
   14bd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bdc:	add	r0, r0, #1
   14be0:	str	r0, [fp, #-44]	; 0xffffffd4
   14be4:	b	14be8 <__assert_fail@plt+0x36e4>
   14be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bf0:	cmp	r0, r1
   14bf4:	bcs	14c18 <__assert_fail@plt+0x3714>
   14bf8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14bfc:	asr	r0, r0, #3
   14c00:	and	r0, r0, #7
   14c04:	add	r0, r0, #48	; 0x30
   14c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14c10:	add	r1, r1, r2
   14c14:	strb	r0, [r1]
   14c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c1c:	add	r0, r0, #1
   14c20:	str	r0, [fp, #-44]	; 0xffffffd4
   14c24:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14c28:	and	r0, r0, #7
   14c2c:	add	r0, r0, #48	; 0x30
   14c30:	strb	r0, [fp, #-63]	; 0xffffffc1
   14c34:	b	14c84 <__assert_fail@plt+0x3780>
   14c38:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14c3c:	tst	r0, #1
   14c40:	beq	14c80 <__assert_fail@plt+0x377c>
   14c44:	b	14c48 <__assert_fail@plt+0x3744>
   14c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c50:	cmp	r0, r1
   14c54:	bcs	14c6c <__assert_fail@plt+0x3768>
   14c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c60:	add	r0, r0, r1
   14c64:	movw	r1, #92	; 0x5c
   14c68:	strb	r1, [r0]
   14c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c70:	add	r0, r0, #1
   14c74:	str	r0, [fp, #-44]	; 0xffffffd4
   14c78:	movw	r0, #0
   14c7c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14c80:	b	14c84 <__assert_fail@plt+0x3780>
   14c84:	ldr	r0, [sp, #84]	; 0x54
   14c88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c8c:	add	r1, r1, #1
   14c90:	cmp	r0, r1
   14c94:	bhi	14c9c <__assert_fail@plt+0x3798>
   14c98:	b	14d80 <__assert_fail@plt+0x387c>
   14c9c:	b	14ca0 <__assert_fail@plt+0x379c>
   14ca0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14ca4:	tst	r0, #1
   14ca8:	beq	14d28 <__assert_fail@plt+0x3824>
   14cac:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14cb0:	tst	r0, #1
   14cb4:	bne	14d28 <__assert_fail@plt+0x3824>
   14cb8:	b	14cbc <__assert_fail@plt+0x37b8>
   14cbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cc4:	cmp	r0, r1
   14cc8:	bcs	14ce0 <__assert_fail@plt+0x37dc>
   14ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cd4:	add	r0, r0, r1
   14cd8:	movw	r1, #39	; 0x27
   14cdc:	strb	r1, [r0]
   14ce0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ce4:	add	r0, r0, #1
   14ce8:	str	r0, [fp, #-44]	; 0xffffffd4
   14cec:	b	14cf0 <__assert_fail@plt+0x37ec>
   14cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cf8:	cmp	r0, r1
   14cfc:	bcs	14d14 <__assert_fail@plt+0x3810>
   14d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d08:	add	r0, r0, r1
   14d0c:	movw	r1, #39	; 0x27
   14d10:	strb	r1, [r0]
   14d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d18:	add	r0, r0, #1
   14d1c:	str	r0, [fp, #-44]	; 0xffffffd4
   14d20:	movw	r0, #0
   14d24:	strb	r0, [fp, #-60]	; 0xffffffc4
   14d28:	b	14d2c <__assert_fail@plt+0x3828>
   14d2c:	b	14d30 <__assert_fail@plt+0x382c>
   14d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d38:	cmp	r0, r1
   14d3c:	bcs	14d54 <__assert_fail@plt+0x3850>
   14d40:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14d4c:	add	r1, r1, r2
   14d50:	strb	r0, [r1]
   14d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d58:	add	r0, r0, #1
   14d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   14d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d68:	add	r1, r1, #1
   14d6c:	str	r1, [fp, #-40]	; 0xffffffd8
   14d70:	add	r0, r0, r1
   14d74:	ldrb	r0, [r0]
   14d78:	strb	r0, [fp, #-63]	; 0xffffffc1
   14d7c:	b	14a80 <__assert_fail@plt+0x357c>
   14d80:	b	14f10 <__assert_fail@plt+0x3a0c>
   14d84:	b	14d88 <__assert_fail@plt+0x3884>
   14d88:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14d8c:	tst	r0, #1
   14d90:	beq	14da0 <__assert_fail@plt+0x389c>
   14d94:	ldr	r0, [fp, #8]
   14d98:	cmp	r0, #2
   14d9c:	bne	14dac <__assert_fail@plt+0x38a8>
   14da0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14da4:	tst	r0, #1
   14da8:	beq	14de8 <__assert_fail@plt+0x38e4>
   14dac:	ldr	r0, [fp, #16]
   14db0:	movw	r1, #0
   14db4:	cmp	r0, r1
   14db8:	beq	14de8 <__assert_fail@plt+0x38e4>
   14dbc:	ldr	r0, [fp, #16]
   14dc0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14dc4:	lsr	r1, r1, #5
   14dc8:	add	r0, r0, r1, lsl #2
   14dcc:	ldr	r0, [r0]
   14dd0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14dd4:	and	r1, r1, #31
   14dd8:	lsr	r0, r0, r1
   14ddc:	and	r0, r0, #1
   14de0:	cmp	r0, #0
   14de4:	bne	14df8 <__assert_fail@plt+0x38f4>
   14de8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14dec:	tst	r0, #1
   14df0:	bne	14df8 <__assert_fail@plt+0x38f4>
   14df4:	b	14f10 <__assert_fail@plt+0x3a0c>
   14df8:	b	14dfc <__assert_fail@plt+0x38f8>
   14dfc:	b	14e00 <__assert_fail@plt+0x38fc>
   14e00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e04:	tst	r0, #1
   14e08:	beq	14e10 <__assert_fail@plt+0x390c>
   14e0c:	b	1517c <__assert_fail@plt+0x3c78>
   14e10:	movw	r0, #1
   14e14:	strb	r0, [fp, #-66]	; 0xffffffbe
   14e18:	ldr	r0, [fp, #8]
   14e1c:	cmp	r0, #2
   14e20:	bne	14ed4 <__assert_fail@plt+0x39d0>
   14e24:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14e28:	tst	r0, #1
   14e2c:	bne	14ed4 <__assert_fail@plt+0x39d0>
   14e30:	b	14e34 <__assert_fail@plt+0x3930>
   14e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e3c:	cmp	r0, r1
   14e40:	bcs	14e58 <__assert_fail@plt+0x3954>
   14e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e4c:	add	r0, r0, r1
   14e50:	movw	r1, #39	; 0x27
   14e54:	strb	r1, [r0]
   14e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e5c:	add	r0, r0, #1
   14e60:	str	r0, [fp, #-44]	; 0xffffffd4
   14e64:	b	14e68 <__assert_fail@plt+0x3964>
   14e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e70:	cmp	r0, r1
   14e74:	bcs	14e8c <__assert_fail@plt+0x3988>
   14e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e80:	add	r0, r0, r1
   14e84:	movw	r1, #36	; 0x24
   14e88:	strb	r1, [r0]
   14e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e90:	add	r0, r0, #1
   14e94:	str	r0, [fp, #-44]	; 0xffffffd4
   14e98:	b	14e9c <__assert_fail@plt+0x3998>
   14e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ea4:	cmp	r0, r1
   14ea8:	bcs	14ec0 <__assert_fail@plt+0x39bc>
   14eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14eb4:	add	r0, r0, r1
   14eb8:	movw	r1, #39	; 0x27
   14ebc:	strb	r1, [r0]
   14ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ec4:	add	r0, r0, #1
   14ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   14ecc:	movw	r0, #1
   14ed0:	strb	r0, [fp, #-60]	; 0xffffffc4
   14ed4:	b	14ed8 <__assert_fail@plt+0x39d4>
   14ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ee0:	cmp	r0, r1
   14ee4:	bcs	14efc <__assert_fail@plt+0x39f8>
   14ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14eec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ef0:	add	r0, r0, r1
   14ef4:	movw	r1, #92	; 0x5c
   14ef8:	strb	r1, [r0]
   14efc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f00:	add	r0, r0, #1
   14f04:	str	r0, [fp, #-44]	; 0xffffffd4
   14f08:	b	14f0c <__assert_fail@plt+0x3a08>
   14f0c:	b	14f10 <__assert_fail@plt+0x3a0c>
   14f10:	b	14f14 <__assert_fail@plt+0x3a10>
   14f14:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14f18:	tst	r0, #1
   14f1c:	beq	14f9c <__assert_fail@plt+0x3a98>
   14f20:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14f24:	tst	r0, #1
   14f28:	bne	14f9c <__assert_fail@plt+0x3a98>
   14f2c:	b	14f30 <__assert_fail@plt+0x3a2c>
   14f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f38:	cmp	r0, r1
   14f3c:	bcs	14f54 <__assert_fail@plt+0x3a50>
   14f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f48:	add	r0, r0, r1
   14f4c:	movw	r1, #39	; 0x27
   14f50:	strb	r1, [r0]
   14f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f58:	add	r0, r0, #1
   14f5c:	str	r0, [fp, #-44]	; 0xffffffd4
   14f60:	b	14f64 <__assert_fail@plt+0x3a60>
   14f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f6c:	cmp	r0, r1
   14f70:	bcs	14f88 <__assert_fail@plt+0x3a84>
   14f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f7c:	add	r0, r0, r1
   14f80:	movw	r1, #39	; 0x27
   14f84:	strb	r1, [r0]
   14f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f8c:	add	r0, r0, #1
   14f90:	str	r0, [fp, #-44]	; 0xffffffd4
   14f94:	movw	r0, #0
   14f98:	strb	r0, [fp, #-60]	; 0xffffffc4
   14f9c:	b	14fa0 <__assert_fail@plt+0x3a9c>
   14fa0:	b	14fa4 <__assert_fail@plt+0x3aa0>
   14fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fac:	cmp	r0, r1
   14fb0:	bcs	14fc8 <__assert_fail@plt+0x3ac4>
   14fb4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14fc0:	add	r1, r1, r2
   14fc4:	strb	r0, [r1]
   14fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fcc:	add	r0, r0, #1
   14fd0:	str	r0, [fp, #-44]	; 0xffffffd4
   14fd4:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14fd8:	tst	r0, #1
   14fdc:	bne	14fe8 <__assert_fail@plt+0x3ae4>
   14fe0:	movw	r0, #0
   14fe4:	strb	r0, [fp, #-62]	; 0xffffffc2
   14fe8:	b	14fec <__assert_fail@plt+0x3ae8>
   14fec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ff0:	add	r0, r0, #1
   14ff4:	str	r0, [fp, #-40]	; 0xffffffd8
   14ff8:	b	13da0 <__assert_fail@plt+0x289c>
   14ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15000:	cmp	r0, #0
   15004:	bne	15024 <__assert_fail@plt+0x3b20>
   15008:	ldr	r0, [fp, #8]
   1500c:	cmp	r0, #2
   15010:	bne	15024 <__assert_fail@plt+0x3b20>
   15014:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15018:	tst	r0, #1
   1501c:	beq	15024 <__assert_fail@plt+0x3b20>
   15020:	b	1517c <__assert_fail@plt+0x3c78>
   15024:	ldr	r0, [fp, #8]
   15028:	cmp	r0, #2
   1502c:	bne	150cc <__assert_fail@plt+0x3bc8>
   15030:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15034:	tst	r0, #1
   15038:	bne	150cc <__assert_fail@plt+0x3bc8>
   1503c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15040:	tst	r0, #1
   15044:	beq	150cc <__assert_fail@plt+0x3bc8>
   15048:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1504c:	tst	r0, #1
   15050:	beq	15098 <__assert_fail@plt+0x3b94>
   15054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15058:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1505c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15064:	ldr	ip, [fp, #12]
   15068:	ldr	lr, [fp, #16]
   1506c:	ldr	r4, [fp, #20]
   15070:	ldr	r5, [fp, #24]
   15074:	movw	r6, #5
   15078:	str	r6, [sp]
   1507c:	str	ip, [sp, #4]
   15080:	str	lr, [sp, #8]
   15084:	str	r4, [sp, #12]
   15088:	str	r5, [sp, #16]
   1508c:	bl	13ab8 <__assert_fail@plt+0x25b4>
   15090:	str	r0, [fp, #-20]	; 0xffffffec
   15094:	b	151e4 <__assert_fail@plt+0x3ce0>
   15098:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1509c:	cmp	r0, #0
   150a0:	bne	150c4 <__assert_fail@plt+0x3bc0>
   150a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150a8:	cmp	r0, #0
   150ac:	beq	150c4 <__assert_fail@plt+0x3bc0>
   150b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150b4:	str	r0, [fp, #-28]	; 0xffffffe4
   150b8:	movw	r0, #0
   150bc:	str	r0, [fp, #-44]	; 0xffffffd4
   150c0:	b	13b60 <__assert_fail@plt+0x265c>
   150c4:	b	150c8 <__assert_fail@plt+0x3bc4>
   150c8:	b	150cc <__assert_fail@plt+0x3bc8>
   150cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   150d0:	movw	r1, #0
   150d4:	cmp	r0, r1
   150d8:	beq	1514c <__assert_fail@plt+0x3c48>
   150dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150e0:	tst	r0, #1
   150e4:	bne	1514c <__assert_fail@plt+0x3c48>
   150e8:	b	150ec <__assert_fail@plt+0x3be8>
   150ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   150f0:	ldrsb	r0, [r0]
   150f4:	cmp	r0, #0
   150f8:	beq	15148 <__assert_fail@plt+0x3c44>
   150fc:	b	15100 <__assert_fail@plt+0x3bfc>
   15100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15108:	cmp	r0, r1
   1510c:	bcs	15128 <__assert_fail@plt+0x3c24>
   15110:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15114:	ldrb	r0, [r0]
   15118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1511c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15120:	add	r1, r1, r2
   15124:	strb	r0, [r1]
   15128:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1512c:	add	r0, r0, #1
   15130:	str	r0, [fp, #-44]	; 0xffffffd4
   15134:	b	15138 <__assert_fail@plt+0x3c34>
   15138:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1513c:	add	r0, r0, #1
   15140:	str	r0, [fp, #-52]	; 0xffffffcc
   15144:	b	150ec <__assert_fail@plt+0x3be8>
   15148:	b	1514c <__assert_fail@plt+0x3c48>
   1514c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15150:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15154:	cmp	r0, r1
   15158:	bcs	15170 <__assert_fail@plt+0x3c6c>
   1515c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15160:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15164:	add	r0, r0, r1
   15168:	movw	r1, #0
   1516c:	strb	r1, [r0]
   15170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15174:	str	r0, [fp, #-20]	; 0xffffffec
   15178:	b	151e4 <__assert_fail@plt+0x3ce0>
   1517c:	ldr	r0, [fp, #8]
   15180:	cmp	r0, #2
   15184:	bne	1519c <__assert_fail@plt+0x3c98>
   15188:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1518c:	tst	r0, #1
   15190:	beq	1519c <__assert_fail@plt+0x3c98>
   15194:	movw	r0, #4
   15198:	str	r0, [fp, #8]
   1519c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151ac:	ldr	ip, [fp, #8]
   151b0:	ldr	lr, [fp, #12]
   151b4:	mvn	r4, #2
   151b8:	and	lr, lr, r4
   151bc:	ldr	r4, [fp, #20]
   151c0:	ldr	r5, [fp, #24]
   151c4:	str	ip, [sp]
   151c8:	str	lr, [sp, #4]
   151cc:	movw	ip, #0
   151d0:	str	ip, [sp, #8]
   151d4:	str	r4, [sp, #12]
   151d8:	str	r5, [sp, #16]
   151dc:	bl	13ab8 <__assert_fail@plt+0x25b4>
   151e0:	str	r0, [fp, #-20]	; 0xffffffec
   151e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   151e8:	sub	sp, fp, #16
   151ec:	pop	{r4, r5, r6, sl, fp, pc}
   151f0:	push	{fp, lr}
   151f4:	mov	fp, sp
   151f8:	sub	sp, sp, #16
   151fc:	str	r0, [fp, #-4]
   15200:	str	r1, [sp, #8]
   15204:	str	r2, [sp, #4]
   15208:	ldr	r0, [fp, #-4]
   1520c:	ldr	r1, [sp, #8]
   15210:	ldr	r3, [sp, #4]
   15214:	movw	r2, #0
   15218:	bl	15224 <__assert_fail@plt+0x3d20>
   1521c:	mov	sp, fp
   15220:	pop	{fp, pc}
   15224:	push	{r4, r5, r6, sl, fp, lr}
   15228:	add	fp, sp, #16
   1522c:	sub	sp, sp, #72	; 0x48
   15230:	str	r0, [fp, #-20]	; 0xffffffec
   15234:	str	r1, [fp, #-24]	; 0xffffffe8
   15238:	str	r2, [fp, #-28]	; 0xffffffe4
   1523c:	str	r3, [fp, #-32]	; 0xffffffe0
   15240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15244:	movw	r1, #0
   15248:	cmp	r0, r1
   1524c:	beq	1525c <__assert_fail@plt+0x3d58>
   15250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15254:	str	r0, [sp, #32]
   15258:	b	1526c <__assert_fail@plt+0x3d68>
   1525c:	movw	r0, #38300	; 0x959c
   15260:	movt	r0, #4
   15264:	str	r0, [sp, #32]
   15268:	b	1526c <__assert_fail@plt+0x3d68>
   1526c:	ldr	r0, [sp, #32]
   15270:	str	r0, [fp, #-36]	; 0xffffffdc
   15274:	bl	113fc <__errno_location@plt>
   15278:	ldr	r0, [r0]
   1527c:	str	r0, [fp, #-40]	; 0xffffffd8
   15280:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15284:	ldr	r0, [r0, #4]
   15288:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1528c:	movw	r1, #0
   15290:	cmp	lr, r1
   15294:	movw	lr, #0
   15298:	movne	lr, #1
   1529c:	tst	lr, #1
   152a0:	mov	lr, r1
   152a4:	moveq	lr, #1
   152a8:	orr	r0, r0, lr
   152ac:	str	r0, [sp, #44]	; 0x2c
   152b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   152b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152bc:	ldr	r0, [r0]
   152c0:	ldr	lr, [sp, #44]	; 0x2c
   152c4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   152c8:	add	ip, ip, #8
   152cc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   152d0:	ldr	r4, [r4, #40]	; 0x28
   152d4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   152d8:	ldr	r5, [r5, #44]	; 0x2c
   152dc:	str	r0, [sp, #28]
   152e0:	mov	r0, r1
   152e4:	ldr	r6, [sp, #28]
   152e8:	str	r6, [sp]
   152ec:	str	lr, [sp, #4]
   152f0:	str	ip, [sp, #8]
   152f4:	str	r4, [sp, #12]
   152f8:	str	r5, [sp, #16]
   152fc:	bl	13ab8 <__assert_fail@plt+0x25b4>
   15300:	add	r0, r0, #1
   15304:	str	r0, [sp, #40]	; 0x28
   15308:	ldr	r0, [sp, #40]	; 0x28
   1530c:	bl	2e6f4 <__assert_fail@plt+0x1d1f0>
   15310:	str	r0, [sp, #36]	; 0x24
   15314:	ldr	r0, [sp, #36]	; 0x24
   15318:	ldr	r1, [sp, #40]	; 0x28
   1531c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15324:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15328:	ldr	ip, [ip]
   1532c:	ldr	lr, [sp, #44]	; 0x2c
   15330:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15334:	add	r4, r4, #8
   15338:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1533c:	ldr	r5, [r5, #40]	; 0x28
   15340:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15344:	ldr	r6, [r6, #44]	; 0x2c
   15348:	str	ip, [sp]
   1534c:	str	lr, [sp, #4]
   15350:	str	r4, [sp, #8]
   15354:	str	r5, [sp, #12]
   15358:	str	r6, [sp, #16]
   1535c:	bl	13ab8 <__assert_fail@plt+0x25b4>
   15360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15364:	str	r0, [sp, #24]
   15368:	str	r1, [sp, #20]
   1536c:	bl	113fc <__errno_location@plt>
   15370:	ldr	r1, [sp, #20]
   15374:	str	r1, [r0]
   15378:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1537c:	movw	r2, #0
   15380:	cmp	r0, r2
   15384:	beq	15398 <__assert_fail@plt+0x3e94>
   15388:	ldr	r0, [sp, #40]	; 0x28
   1538c:	sub	r0, r0, #1
   15390:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15394:	str	r0, [r1]
   15398:	ldr	r0, [sp, #36]	; 0x24
   1539c:	sub	sp, fp, #16
   153a0:	pop	{r4, r5, r6, sl, fp, pc}
   153a4:	push	{fp, lr}
   153a8:	mov	fp, sp
   153ac:	sub	sp, sp, #8
   153b0:	movw	r0, #37236	; 0x9174
   153b4:	movt	r0, #4
   153b8:	ldr	r0, [r0]
   153bc:	str	r0, [sp, #4]
   153c0:	movw	r0, #1
   153c4:	str	r0, [sp]
   153c8:	ldr	r0, [sp]
   153cc:	movw	r1, #37240	; 0x9178
   153d0:	movt	r1, #4
   153d4:	ldr	r1, [r1]
   153d8:	cmp	r0, r1
   153dc:	bge	15404 <__assert_fail@plt+0x3f00>
   153e0:	ldr	r0, [sp, #4]
   153e4:	ldr	r1, [sp]
   153e8:	add	r0, r0, r1, lsl #3
   153ec:	ldr	r0, [r0, #4]
   153f0:	bl	35268 <__assert_fail@plt+0x23d64>
   153f4:	ldr	r0, [sp]
   153f8:	add	r0, r0, #1
   153fc:	str	r0, [sp]
   15400:	b	153c8 <__assert_fail@plt+0x3ec4>
   15404:	ldr	r0, [sp, #4]
   15408:	ldr	r0, [r0, #4]
   1540c:	movw	r1, #38348	; 0x95cc
   15410:	movt	r1, #4
   15414:	cmp	r0, r1
   15418:	beq	15444 <__assert_fail@plt+0x3f40>
   1541c:	ldr	r0, [sp, #4]
   15420:	ldr	r0, [r0, #4]
   15424:	bl	35268 <__assert_fail@plt+0x23d64>
   15428:	movw	r0, #256	; 0x100
   1542c:	movw	lr, #37244	; 0x917c
   15430:	movt	lr, #4
   15434:	str	r0, [lr]
   15438:	movw	r0, #38348	; 0x95cc
   1543c:	movt	r0, #4
   15440:	str	r0, [lr, #4]
   15444:	ldr	r0, [sp, #4]
   15448:	movw	r1, #37244	; 0x917c
   1544c:	movt	r1, #4
   15450:	cmp	r0, r1
   15454:	beq	15474 <__assert_fail@plt+0x3f70>
   15458:	ldr	r0, [sp, #4]
   1545c:	bl	35268 <__assert_fail@plt+0x23d64>
   15460:	movw	r0, #37236	; 0x9174
   15464:	movt	r0, #4
   15468:	movw	lr, #37244	; 0x917c
   1546c:	movt	lr, #4
   15470:	str	lr, [r0]
   15474:	movw	r0, #37240	; 0x9178
   15478:	movt	r0, #4
   1547c:	movw	r1, #1
   15480:	str	r1, [r0]
   15484:	mov	sp, fp
   15488:	pop	{fp, pc}
   1548c:	push	{fp, lr}
   15490:	mov	fp, sp
   15494:	sub	sp, sp, #8
   15498:	str	r0, [sp, #4]
   1549c:	str	r1, [sp]
   154a0:	ldr	r0, [sp, #4]
   154a4:	ldr	r1, [sp]
   154a8:	mvn	r2, #0
   154ac:	movw	r3, #38300	; 0x959c
   154b0:	movt	r3, #4
   154b4:	bl	154c0 <__assert_fail@plt+0x3fbc>
   154b8:	mov	sp, fp
   154bc:	pop	{fp, pc}
   154c0:	push	{r4, r5, r6, sl, fp, lr}
   154c4:	add	fp, sp, #16
   154c8:	sub	sp, sp, #88	; 0x58
   154cc:	str	r0, [fp, #-20]	; 0xffffffec
   154d0:	str	r1, [fp, #-24]	; 0xffffffe8
   154d4:	str	r2, [fp, #-28]	; 0xffffffe4
   154d8:	str	r3, [fp, #-32]	; 0xffffffe0
   154dc:	bl	113fc <__errno_location@plt>
   154e0:	ldr	r1, [pc, #676]	; 1578c <__assert_fail@plt+0x4288>
   154e4:	ldr	r0, [r0]
   154e8:	str	r0, [fp, #-36]	; 0xffffffdc
   154ec:	movw	r0, #37236	; 0x9174
   154f0:	movt	r0, #4
   154f4:	ldr	r0, [r0]
   154f8:	str	r0, [fp, #-40]	; 0xffffffd8
   154fc:	str	r1, [fp, #-44]	; 0xffffffd4
   15500:	ldr	r0, [fp, #-20]	; 0xffffffec
   15504:	movw	r1, #0
   15508:	cmp	r1, r0
   1550c:	bgt	15520 <__assert_fail@plt+0x401c>
   15510:	ldr	r0, [fp, #-20]	; 0xffffffec
   15514:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15518:	cmp	r0, r1
   1551c:	blt	15524 <__assert_fail@plt+0x4020>
   15520:	bl	114e0 <abort@plt>
   15524:	movw	r0, #37240	; 0x9178
   15528:	movt	r0, #4
   1552c:	ldr	r0, [r0]
   15530:	ldr	r1, [fp, #-20]	; 0xffffffec
   15534:	cmp	r0, r1
   15538:	bgt	15630 <__assert_fail@plt+0x412c>
   1553c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15540:	movw	r1, #37244	; 0x917c
   15544:	movt	r1, #4
   15548:	cmp	r0, r1
   1554c:	movw	r0, #0
   15550:	moveq	r0, #1
   15554:	and	r0, r0, #1
   15558:	strb	r0, [fp, #-45]	; 0xffffffd3
   1555c:	movw	r0, #37240	; 0x9178
   15560:	movt	r0, #4
   15564:	ldr	r0, [r0]
   15568:	str	r0, [sp, #52]	; 0x34
   1556c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15570:	tst	r0, #1
   15574:	beq	15584 <__assert_fail@plt+0x4080>
   15578:	movw	r0, #0
   1557c:	str	r0, [sp, #32]
   15580:	b	1558c <__assert_fail@plt+0x4088>
   15584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15588:	str	r0, [sp, #32]
   1558c:	ldr	r0, [sp, #32]
   15590:	ldr	r1, [fp, #-20]	; 0xffffffec
   15594:	movw	r2, #37240	; 0x9178
   15598:	movt	r2, #4
   1559c:	ldr	r2, [r2]
   155a0:	sub	r1, r1, r2
   155a4:	add	r2, r1, #1
   155a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155ac:	add	r1, sp, #52	; 0x34
   155b0:	movw	ip, #8
   155b4:	str	ip, [sp]
   155b8:	bl	2e930 <__assert_fail@plt+0x1d42c>
   155bc:	str	r0, [fp, #-40]	; 0xffffffd8
   155c0:	movw	r1, #37236	; 0x9174
   155c4:	movt	r1, #4
   155c8:	str	r0, [r1]
   155cc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   155d0:	tst	r0, #1
   155d4:	beq	155f4 <__assert_fail@plt+0x40f0>
   155d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155dc:	movw	r1, #37244	; 0x917c
   155e0:	movt	r1, #4
   155e4:	ldr	r2, [r1]
   155e8:	str	r2, [r0]
   155ec:	ldr	r1, [r1, #4]
   155f0:	str	r1, [r0, #4]
   155f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155f8:	movw	r1, #37240	; 0x9178
   155fc:	movt	r1, #4
   15600:	ldr	r1, [r1]
   15604:	add	r0, r0, r1, lsl #3
   15608:	ldr	r2, [sp, #52]	; 0x34
   1560c:	sub	r1, r2, r1
   15610:	lsl	r2, r1, #3
   15614:	movw	r1, #0
   15618:	and	r1, r1, #255	; 0xff
   1561c:	bl	11420 <memset@plt>
   15620:	ldr	r0, [sp, #52]	; 0x34
   15624:	movw	r1, #37240	; 0x9178
   15628:	movt	r1, #4
   1562c:	str	r0, [r1]
   15630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15634:	ldr	r1, [fp, #-20]	; 0xffffffec
   15638:	ldr	r0, [r0, r1, lsl #3]
   1563c:	str	r0, [sp, #48]	; 0x30
   15640:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15644:	ldr	r1, [fp, #-20]	; 0xffffffec
   15648:	add	r0, r0, r1, lsl #3
   1564c:	ldr	r0, [r0, #4]
   15650:	str	r0, [sp, #44]	; 0x2c
   15654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15658:	ldr	r0, [r0, #4]
   1565c:	orr	r0, r0, #1
   15660:	str	r0, [sp, #40]	; 0x28
   15664:	ldr	r0, [sp, #44]	; 0x2c
   15668:	ldr	r1, [sp, #48]	; 0x30
   1566c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15674:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15678:	ldr	ip, [ip]
   1567c:	ldr	lr, [sp, #40]	; 0x28
   15680:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15684:	add	r4, r4, #8
   15688:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1568c:	ldr	r5, [r5, #40]	; 0x28
   15690:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15694:	ldr	r6, [r6, #44]	; 0x2c
   15698:	str	ip, [sp]
   1569c:	str	lr, [sp, #4]
   156a0:	str	r4, [sp, #8]
   156a4:	str	r5, [sp, #12]
   156a8:	str	r6, [sp, #16]
   156ac:	bl	13ab8 <__assert_fail@plt+0x25b4>
   156b0:	str	r0, [sp, #36]	; 0x24
   156b4:	ldr	r0, [sp, #48]	; 0x30
   156b8:	ldr	r1, [sp, #36]	; 0x24
   156bc:	cmp	r0, r1
   156c0:	bhi	1576c <__assert_fail@plt+0x4268>
   156c4:	ldr	r0, [sp, #36]	; 0x24
   156c8:	add	r0, r0, #1
   156cc:	str	r0, [sp, #48]	; 0x30
   156d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   156d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   156d8:	add	r1, r1, r2, lsl #3
   156dc:	str	r0, [r1]
   156e0:	ldr	r0, [sp, #44]	; 0x2c
   156e4:	movw	r1, #38348	; 0x95cc
   156e8:	movt	r1, #4
   156ec:	cmp	r0, r1
   156f0:	beq	156fc <__assert_fail@plt+0x41f8>
   156f4:	ldr	r0, [sp, #44]	; 0x2c
   156f8:	bl	35268 <__assert_fail@plt+0x23d64>
   156fc:	ldr	r0, [sp, #48]	; 0x30
   15700:	bl	2e6f4 <__assert_fail@plt+0x1d1f0>
   15704:	mov	lr, r0
   15708:	str	r0, [sp, #44]	; 0x2c
   1570c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15710:	ldr	r1, [fp, #-20]	; 0xffffffec
   15714:	add	r0, r0, r1, lsl #3
   15718:	str	lr, [r0, #4]
   1571c:	ldr	r0, [sp, #44]	; 0x2c
   15720:	ldr	r1, [sp, #48]	; 0x30
   15724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1572c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15730:	ldr	lr, [lr]
   15734:	ldr	ip, [sp, #40]	; 0x28
   15738:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1573c:	add	r4, r4, #8
   15740:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15744:	ldr	r5, [r5, #40]	; 0x28
   15748:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1574c:	ldr	r6, [r6, #44]	; 0x2c
   15750:	str	lr, [sp]
   15754:	str	ip, [sp, #4]
   15758:	str	r4, [sp, #8]
   1575c:	str	r5, [sp, #12]
   15760:	str	r6, [sp, #16]
   15764:	bl	13ab8 <__assert_fail@plt+0x25b4>
   15768:	str	r0, [sp, #28]
   1576c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15770:	str	r0, [sp, #24]
   15774:	bl	113fc <__errno_location@plt>
   15778:	ldr	lr, [sp, #24]
   1577c:	str	lr, [r0]
   15780:	ldr	r0, [sp, #44]	; 0x2c
   15784:	sub	sp, fp, #16
   15788:	pop	{r4, r5, r6, sl, fp, pc}
   1578c:	svcvc	0x00ffffff
   15790:	push	{fp, lr}
   15794:	mov	fp, sp
   15798:	sub	sp, sp, #16
   1579c:	str	r0, [fp, #-4]
   157a0:	str	r1, [sp, #8]
   157a4:	str	r2, [sp, #4]
   157a8:	ldr	r0, [fp, #-4]
   157ac:	ldr	r1, [sp, #8]
   157b0:	ldr	r2, [sp, #4]
   157b4:	movw	r3, #38300	; 0x959c
   157b8:	movt	r3, #4
   157bc:	bl	154c0 <__assert_fail@plt+0x3fbc>
   157c0:	mov	sp, fp
   157c4:	pop	{fp, pc}
   157c8:	push	{fp, lr}
   157cc:	mov	fp, sp
   157d0:	sub	sp, sp, #8
   157d4:	str	r0, [sp, #4]
   157d8:	ldr	r1, [sp, #4]
   157dc:	movw	r0, #0
   157e0:	bl	1548c <__assert_fail@plt+0x3f88>
   157e4:	mov	sp, fp
   157e8:	pop	{fp, pc}
   157ec:	push	{fp, lr}
   157f0:	mov	fp, sp
   157f4:	sub	sp, sp, #8
   157f8:	str	r0, [sp, #4]
   157fc:	str	r1, [sp]
   15800:	ldr	r1, [sp, #4]
   15804:	ldr	r2, [sp]
   15808:	movw	r0, #0
   1580c:	bl	15790 <__assert_fail@plt+0x428c>
   15810:	mov	sp, fp
   15814:	pop	{fp, pc}
   15818:	push	{fp, lr}
   1581c:	mov	fp, sp
   15820:	sub	sp, sp, #64	; 0x40
   15824:	str	r0, [fp, #-4]
   15828:	str	r1, [fp, #-8]
   1582c:	str	r2, [fp, #-12]
   15830:	ldr	r1, [fp, #-8]
   15834:	add	r0, sp, #4
   15838:	bl	15858 <__assert_fail@plt+0x4354>
   1583c:	ldr	r0, [fp, #-4]
   15840:	ldr	r1, [fp, #-12]
   15844:	mvn	r2, #0
   15848:	add	r3, sp, #4
   1584c:	bl	154c0 <__assert_fail@plt+0x3fbc>
   15850:	mov	sp, fp
   15854:	pop	{fp, pc}
   15858:	push	{fp, lr}
   1585c:	mov	fp, sp
   15860:	sub	sp, sp, #8
   15864:	str	r1, [sp, #4]
   15868:	mov	r1, r0
   1586c:	str	r0, [sp]
   15870:	mov	r0, r1
   15874:	movw	r1, #0
   15878:	and	r1, r1, #255	; 0xff
   1587c:	movw	r2, #48	; 0x30
   15880:	bl	11420 <memset@plt>
   15884:	ldr	r0, [sp, #4]
   15888:	cmp	r0, #10
   1588c:	bne	15894 <__assert_fail@plt+0x4390>
   15890:	bl	114e0 <abort@plt>
   15894:	ldr	r0, [sp, #4]
   15898:	ldr	r1, [sp]
   1589c:	str	r0, [r1]
   158a0:	mov	sp, fp
   158a4:	pop	{fp, pc}
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	sub	sp, sp, #64	; 0x40
   158b4:	str	r0, [fp, #-4]
   158b8:	str	r1, [fp, #-8]
   158bc:	str	r2, [fp, #-12]
   158c0:	str	r3, [fp, #-16]
   158c4:	ldr	r1, [fp, #-8]
   158c8:	mov	r0, sp
   158cc:	bl	15858 <__assert_fail@plt+0x4354>
   158d0:	ldr	r0, [fp, #-4]
   158d4:	ldr	r1, [fp, #-12]
   158d8:	ldr	r2, [fp, #-16]
   158dc:	mov	r3, sp
   158e0:	bl	154c0 <__assert_fail@plt+0x3fbc>
   158e4:	mov	sp, fp
   158e8:	pop	{fp, pc}
   158ec:	push	{fp, lr}
   158f0:	mov	fp, sp
   158f4:	sub	sp, sp, #8
   158f8:	str	r0, [sp, #4]
   158fc:	str	r1, [sp]
   15900:	ldr	r1, [sp, #4]
   15904:	ldr	r2, [sp]
   15908:	movw	r0, #0
   1590c:	bl	15818 <__assert_fail@plt+0x4314>
   15910:	mov	sp, fp
   15914:	pop	{fp, pc}
   15918:	push	{fp, lr}
   1591c:	mov	fp, sp
   15920:	sub	sp, sp, #16
   15924:	str	r0, [fp, #-4]
   15928:	str	r1, [sp, #8]
   1592c:	str	r2, [sp, #4]
   15930:	ldr	r1, [fp, #-4]
   15934:	ldr	r2, [sp, #8]
   15938:	ldr	r3, [sp, #4]
   1593c:	movw	r0, #0
   15940:	bl	158a8 <__assert_fail@plt+0x43a4>
   15944:	mov	sp, fp
   15948:	pop	{fp, pc}
   1594c:	push	{fp, lr}
   15950:	mov	fp, sp
   15954:	sub	sp, sp, #72	; 0x48
   15958:	movw	r3, #38300	; 0x959c
   1595c:	movt	r3, #4
   15960:	str	r0, [fp, #-4]
   15964:	str	r1, [fp, #-8]
   15968:	strb	r2, [fp, #-9]
   1596c:	add	r0, sp, #12
   15970:	mov	r1, r0
   15974:	str	r0, [sp, #8]
   15978:	mov	r0, r1
   1597c:	mov	r1, r3
   15980:	movw	r2, #48	; 0x30
   15984:	bl	112a0 <memcpy@plt>
   15988:	ldr	r0, [sp, #8]
   1598c:	ldrb	r1, [fp, #-9]
   15990:	movw	r2, #1
   15994:	bl	1385c <__assert_fail@plt+0x2358>
   15998:	ldr	r1, [fp, #-4]
   1599c:	ldr	r2, [fp, #-8]
   159a0:	movw	r3, #0
   159a4:	str	r0, [sp, #4]
   159a8:	mov	r0, r3
   159ac:	add	r3, sp, #12
   159b0:	bl	154c0 <__assert_fail@plt+0x3fbc>
   159b4:	mov	sp, fp
   159b8:	pop	{fp, pc}
   159bc:	push	{fp, lr}
   159c0:	mov	fp, sp
   159c4:	sub	sp, sp, #8
   159c8:	str	r0, [sp, #4]
   159cc:	strb	r1, [sp, #3]
   159d0:	ldr	r0, [sp, #4]
   159d4:	mvn	r1, #0
   159d8:	ldrb	r2, [sp, #3]
   159dc:	bl	1594c <__assert_fail@plt+0x4448>
   159e0:	mov	sp, fp
   159e4:	pop	{fp, pc}
   159e8:	push	{fp, lr}
   159ec:	mov	fp, sp
   159f0:	sub	sp, sp, #8
   159f4:	str	r0, [sp, #4]
   159f8:	ldr	r0, [sp, #4]
   159fc:	movw	r1, #58	; 0x3a
   15a00:	and	r1, r1, #255	; 0xff
   15a04:	bl	159bc <__assert_fail@plt+0x44b8>
   15a08:	mov	sp, fp
   15a0c:	pop	{fp, pc}
   15a10:	push	{fp, lr}
   15a14:	mov	fp, sp
   15a18:	sub	sp, sp, #8
   15a1c:	str	r0, [sp, #4]
   15a20:	str	r1, [sp]
   15a24:	ldr	r0, [sp, #4]
   15a28:	ldr	r1, [sp]
   15a2c:	movw	r2, #58	; 0x3a
   15a30:	and	r2, r2, #255	; 0xff
   15a34:	bl	1594c <__assert_fail@plt+0x4448>
   15a38:	mov	sp, fp
   15a3c:	pop	{fp, pc}
   15a40:	push	{fp, lr}
   15a44:	mov	fp, sp
   15a48:	sub	sp, sp, #120	; 0x78
   15a4c:	str	r0, [fp, #-4]
   15a50:	str	r1, [fp, #-8]
   15a54:	str	r2, [fp, #-12]
   15a58:	ldr	r1, [fp, #-8]
   15a5c:	add	r0, sp, #12
   15a60:	bl	15858 <__assert_fail@plt+0x4354>
   15a64:	add	r0, sp, #60	; 0x3c
   15a68:	mov	r1, r0
   15a6c:	add	r2, sp, #12
   15a70:	str	r0, [sp, #8]
   15a74:	mov	r0, r1
   15a78:	mov	r1, r2
   15a7c:	movw	r2, #48	; 0x30
   15a80:	bl	112a0 <memcpy@plt>
   15a84:	ldr	r0, [sp, #8]
   15a88:	movw	r1, #58	; 0x3a
   15a8c:	and	r1, r1, #255	; 0xff
   15a90:	movw	r2, #1
   15a94:	bl	1385c <__assert_fail@plt+0x2358>
   15a98:	ldr	r1, [fp, #-4]
   15a9c:	ldr	r2, [fp, #-12]
   15aa0:	str	r0, [sp, #4]
   15aa4:	mov	r0, r1
   15aa8:	mov	r1, r2
   15aac:	mvn	r2, #0
   15ab0:	add	r3, sp, #60	; 0x3c
   15ab4:	bl	154c0 <__assert_fail@plt+0x3fbc>
   15ab8:	mov	sp, fp
   15abc:	pop	{fp, pc}
   15ac0:	push	{fp, lr}
   15ac4:	mov	fp, sp
   15ac8:	sub	sp, sp, #24
   15acc:	str	r0, [fp, #-4]
   15ad0:	str	r1, [fp, #-8]
   15ad4:	str	r2, [sp, #12]
   15ad8:	str	r3, [sp, #8]
   15adc:	ldr	r0, [fp, #-4]
   15ae0:	ldr	r1, [fp, #-8]
   15ae4:	ldr	r2, [sp, #12]
   15ae8:	ldr	r3, [sp, #8]
   15aec:	mvn	ip, #0
   15af0:	str	ip, [sp]
   15af4:	bl	15b00 <__assert_fail@plt+0x45fc>
   15af8:	mov	sp, fp
   15afc:	pop	{fp, pc}
   15b00:	push	{fp, lr}
   15b04:	mov	fp, sp
   15b08:	sub	sp, sp, #72	; 0x48
   15b0c:	ldr	ip, [fp, #8]
   15b10:	movw	lr, #38300	; 0x959c
   15b14:	movt	lr, #4
   15b18:	str	r0, [fp, #-4]
   15b1c:	str	r1, [fp, #-8]
   15b20:	str	r2, [fp, #-12]
   15b24:	str	r3, [fp, #-16]
   15b28:	add	r0, sp, #8
   15b2c:	mov	r1, r0
   15b30:	str	r0, [sp, #4]
   15b34:	mov	r0, r1
   15b38:	mov	r1, lr
   15b3c:	movw	r2, #48	; 0x30
   15b40:	str	ip, [sp]
   15b44:	bl	112a0 <memcpy@plt>
   15b48:	ldr	r1, [fp, #-8]
   15b4c:	ldr	r2, [fp, #-12]
   15b50:	ldr	r0, [sp, #4]
   15b54:	bl	1395c <__assert_fail@plt+0x2458>
   15b58:	ldr	r0, [fp, #-4]
   15b5c:	ldr	r1, [fp, #-16]
   15b60:	ldr	r2, [fp, #8]
   15b64:	add	r3, sp, #8
   15b68:	bl	154c0 <__assert_fail@plt+0x3fbc>
   15b6c:	mov	sp, fp
   15b70:	pop	{fp, pc}
   15b74:	push	{fp, lr}
   15b78:	mov	fp, sp
   15b7c:	sub	sp, sp, #16
   15b80:	str	r0, [fp, #-4]
   15b84:	str	r1, [sp, #8]
   15b88:	str	r2, [sp, #4]
   15b8c:	ldr	r1, [fp, #-4]
   15b90:	ldr	r2, [sp, #8]
   15b94:	ldr	r3, [sp, #4]
   15b98:	movw	r0, #0
   15b9c:	bl	15ac0 <__assert_fail@plt+0x45bc>
   15ba0:	mov	sp, fp
   15ba4:	pop	{fp, pc}
   15ba8:	push	{fp, lr}
   15bac:	mov	fp, sp
   15bb0:	sub	sp, sp, #24
   15bb4:	str	r0, [fp, #-4]
   15bb8:	str	r1, [fp, #-8]
   15bbc:	str	r2, [sp, #12]
   15bc0:	str	r3, [sp, #8]
   15bc4:	ldr	r1, [fp, #-4]
   15bc8:	ldr	r2, [fp, #-8]
   15bcc:	ldr	r3, [sp, #12]
   15bd0:	ldr	r0, [sp, #8]
   15bd4:	movw	ip, #0
   15bd8:	str	r0, [sp, #4]
   15bdc:	mov	r0, ip
   15be0:	ldr	ip, [sp, #4]
   15be4:	str	ip, [sp]
   15be8:	bl	15b00 <__assert_fail@plt+0x45fc>
   15bec:	mov	sp, fp
   15bf0:	pop	{fp, pc}
   15bf4:	push	{fp, lr}
   15bf8:	mov	fp, sp
   15bfc:	sub	sp, sp, #16
   15c00:	str	r0, [fp, #-4]
   15c04:	str	r1, [sp, #8]
   15c08:	str	r2, [sp, #4]
   15c0c:	ldr	r0, [fp, #-4]
   15c10:	ldr	r1, [sp, #8]
   15c14:	ldr	r2, [sp, #4]
   15c18:	movw	r3, #37252	; 0x9184
   15c1c:	movt	r3, #4
   15c20:	bl	154c0 <__assert_fail@plt+0x3fbc>
   15c24:	mov	sp, fp
   15c28:	pop	{fp, pc}
   15c2c:	push	{fp, lr}
   15c30:	mov	fp, sp
   15c34:	sub	sp, sp, #8
   15c38:	str	r0, [sp, #4]
   15c3c:	str	r1, [sp]
   15c40:	ldr	r1, [sp, #4]
   15c44:	ldr	r2, [sp]
   15c48:	movw	r0, #0
   15c4c:	bl	15bf4 <__assert_fail@plt+0x46f0>
   15c50:	mov	sp, fp
   15c54:	pop	{fp, pc}
   15c58:	push	{fp, lr}
   15c5c:	mov	fp, sp
   15c60:	sub	sp, sp, #8
   15c64:	str	r0, [sp, #4]
   15c68:	str	r1, [sp]
   15c6c:	ldr	r0, [sp, #4]
   15c70:	ldr	r1, [sp]
   15c74:	mvn	r2, #0
   15c78:	bl	15bf4 <__assert_fail@plt+0x46f0>
   15c7c:	mov	sp, fp
   15c80:	pop	{fp, pc}
   15c84:	push	{fp, lr}
   15c88:	mov	fp, sp
   15c8c:	sub	sp, sp, #8
   15c90:	str	r0, [sp, #4]
   15c94:	ldr	r1, [sp, #4]
   15c98:	movw	r0, #0
   15c9c:	bl	15c58 <__assert_fail@plt+0x4754>
   15ca0:	mov	sp, fp
   15ca4:	pop	{fp, pc}
   15ca8:	push	{fp, lr}
   15cac:	mov	fp, sp
   15cb0:	sub	sp, sp, #24
   15cb4:	str	r0, [fp, #-8]
   15cb8:	str	r1, [sp, #12]
   15cbc:	ldr	r0, [fp, #-8]
   15cc0:	bl	113cc <gettext@plt>
   15cc4:	str	r0, [sp, #8]
   15cc8:	ldr	r0, [sp, #8]
   15ccc:	ldr	r1, [fp, #-8]
   15cd0:	cmp	r0, r1
   15cd4:	beq	15ce4 <__assert_fail@plt+0x47e0>
   15cd8:	ldr	r0, [sp, #8]
   15cdc:	str	r0, [fp, #-4]
   15ce0:	b	15db0 <__assert_fail@plt+0x48ac>
   15ce4:	bl	3547c <__assert_fail@plt+0x23f78>
   15ce8:	str	r0, [sp, #4]
   15cec:	ldr	r0, [sp, #4]
   15cf0:	movw	r1, #32976	; 0x80d0
   15cf4:	movt	r1, #3
   15cf8:	bl	33c58 <__assert_fail@plt+0x22754>
   15cfc:	cmp	r0, #0
   15d00:	bne	15d38 <__assert_fail@plt+0x4834>
   15d04:	ldr	r0, [fp, #-8]
   15d08:	ldrb	r0, [r0]
   15d0c:	cmp	r0, #96	; 0x60
   15d10:	movw	r0, #0
   15d14:	moveq	r0, #1
   15d18:	tst	r0, #1
   15d1c:	movw	r0, #32986	; 0x80da
   15d20:	movt	r0, #3
   15d24:	movw	r1, #32982	; 0x80d6
   15d28:	movt	r1, #3
   15d2c:	movne	r0, r1
   15d30:	str	r0, [fp, #-4]
   15d34:	b	15db0 <__assert_fail@plt+0x48ac>
   15d38:	ldr	r0, [sp, #4]
   15d3c:	movw	r1, #32990	; 0x80de
   15d40:	movt	r1, #3
   15d44:	bl	33c58 <__assert_fail@plt+0x22754>
   15d48:	cmp	r0, #0
   15d4c:	bne	15d84 <__assert_fail@plt+0x4880>
   15d50:	ldr	r0, [fp, #-8]
   15d54:	ldrb	r0, [r0]
   15d58:	cmp	r0, #96	; 0x60
   15d5c:	movw	r0, #0
   15d60:	moveq	r0, #1
   15d64:	tst	r0, #1
   15d68:	movw	r0, #33002	; 0x80ea
   15d6c:	movt	r0, #3
   15d70:	movw	r1, #32998	; 0x80e6
   15d74:	movt	r1, #3
   15d78:	movne	r0, r1
   15d7c:	str	r0, [fp, #-4]
   15d80:	b	15db0 <__assert_fail@plt+0x48ac>
   15d84:	ldr	r0, [sp, #12]
   15d88:	cmp	r0, #9
   15d8c:	movw	r0, #0
   15d90:	moveq	r0, #1
   15d94:	tst	r0, #1
   15d98:	movw	r0, #32974	; 0x80ce
   15d9c:	movt	r0, #3
   15da0:	movw	r1, #32970	; 0x80ca
   15da4:	movt	r1, #3
   15da8:	movne	r0, r1
   15dac:	str	r0, [fp, #-4]
   15db0:	ldr	r0, [fp, #-4]
   15db4:	mov	sp, fp
   15db8:	pop	{fp, pc}
   15dbc:	push	{fp, lr}
   15dc0:	mov	fp, sp
   15dc4:	sub	sp, sp, #24
   15dc8:	str	r0, [fp, #-8]
   15dcc:	str	r1, [sp, #12]
   15dd0:	str	r2, [sp, #8]
   15dd4:	movw	r0, #38604	; 0x96cc
   15dd8:	movt	r0, #4
   15ddc:	ldr	r0, [r0]
   15de0:	and	r0, r0, #33554432	; 0x2000000
   15de4:	ldr	r1, [sp, #8]
   15de8:	ldrb	r2, [r1, #28]
   15dec:	and	r2, r2, #239	; 0xef
   15df0:	orr	r0, r2, r0, lsr #21
   15df4:	strb	r0, [r1, #28]
   15df8:	ldr	r0, [sp, #8]
   15dfc:	ldrb	r1, [r0, #28]
   15e00:	and	r1, r1, #127	; 0x7f
   15e04:	movw	r2, #128	; 0x80
   15e08:	orr	r1, r1, r2
   15e0c:	strb	r1, [r0, #28]
   15e10:	ldr	r0, [sp, #8]
   15e14:	ldr	r1, [fp, #-8]
   15e18:	ldr	r2, [sp, #12]
   15e1c:	movw	r3, #38604	; 0x96cc
   15e20:	movt	r3, #4
   15e24:	ldr	r3, [r3]
   15e28:	bl	15e7c <__assert_fail@plt+0x4978>
   15e2c:	str	r0, [sp, #4]
   15e30:	ldr	r0, [sp, #4]
   15e34:	cmp	r0, #0
   15e38:	bne	15e48 <__assert_fail@plt+0x4944>
   15e3c:	movw	r0, #0
   15e40:	str	r0, [fp, #-4]
   15e44:	b	15e70 <__assert_fail@plt+0x496c>
   15e48:	ldr	r0, [sp, #4]
   15e4c:	movw	r1, #33476	; 0x82c4
   15e50:	movt	r1, #3
   15e54:	add	r0, r1, r0, lsl #2
   15e58:	ldr	r0, [r0]
   15e5c:	movw	r1, #33092	; 0x8144
   15e60:	movt	r1, #3
   15e64:	add	r0, r1, r0
   15e68:	bl	113cc <gettext@plt>
   15e6c:	str	r0, [fp, #-4]
   15e70:	ldr	r0, [fp, #-4]
   15e74:	mov	sp, fp
   15e78:	pop	{fp, pc}
   15e7c:	push	{r4, sl, fp, lr}
   15e80:	add	fp, sp, #8
   15e84:	sub	sp, sp, #144	; 0x90
   15e88:	str	r0, [fp, #-16]
   15e8c:	str	r1, [fp, #-20]	; 0xffffffec
   15e90:	str	r2, [fp, #-24]	; 0xffffffe8
   15e94:	str	r3, [fp, #-28]	; 0xffffffe4
   15e98:	mov	r0, #0
   15e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   15ea0:	ldr	r1, [fp, #-16]
   15ea4:	ldrb	r2, [r1, #28]
   15ea8:	and	r2, r2, #247	; 0xf7
   15eac:	strb	r2, [r1, #28]
   15eb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15eb4:	ldr	r2, [fp, #-16]
   15eb8:	str	r1, [r2, #12]
   15ebc:	ldr	r1, [fp, #-16]
   15ec0:	ldrb	r2, [r1, #28]
   15ec4:	and	r2, r2, #191	; 0xbf
   15ec8:	strb	r2, [r1, #28]
   15ecc:	ldr	r1, [fp, #-16]
   15ed0:	ldrb	r2, [r1, #28]
   15ed4:	and	r2, r2, #223	; 0xdf
   15ed8:	strb	r2, [r1, #28]
   15edc:	ldr	r1, [fp, #-16]
   15ee0:	str	r0, [r1, #8]
   15ee4:	ldr	r1, [fp, #-16]
   15ee8:	str	r0, [r1, #24]
   15eec:	ldr	r0, [fp, #-16]
   15ef0:	ldrb	r1, [r0, #28]
   15ef4:	and	r1, r1, #254	; 0xfe
   15ef8:	strb	r1, [r0, #28]
   15efc:	ldr	r0, [fp, #-16]
   15f00:	ldrb	r1, [r0, #28]
   15f04:	bic	r1, r1, #6
   15f08:	strb	r1, [r0, #28]
   15f0c:	ldr	r0, [fp, #-16]
   15f10:	ldr	r0, [r0]
   15f14:	str	r0, [fp, #-36]	; 0xffffffdc
   15f18:	ldr	r0, [fp, #-16]
   15f1c:	ldr	r0, [r0, #4]
   15f20:	cmp	r0, #160	; 0xa0
   15f24:	bcs	15f70 <__assert_fail@plt+0x4a6c>
   15f28:	ldr	r0, [fp, #-16]
   15f2c:	ldr	r0, [r0]
   15f30:	movw	r1, #160	; 0xa0
   15f34:	bl	33bb4 <__assert_fail@plt+0x226b0>
   15f38:	str	r0, [fp, #-36]	; 0xffffffdc
   15f3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f40:	movw	r1, #0
   15f44:	cmp	r0, r1
   15f48:	bne	15f58 <__assert_fail@plt+0x4a54>
   15f4c:	movw	r0, #12
   15f50:	str	r0, [fp, #-12]
   15f54:	b	16248 <__assert_fail@plt+0x4d44>
   15f58:	ldr	r0, [fp, #-16]
   15f5c:	movw	r1, #160	; 0xa0
   15f60:	str	r1, [r0, #4]
   15f64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f68:	ldr	r1, [fp, #-16]
   15f6c:	str	r0, [r1]
   15f70:	ldr	r0, [fp, #-16]
   15f74:	movw	r1, #160	; 0xa0
   15f78:	str	r1, [r0, #8]
   15f7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f84:	bl	18c80 <__assert_fail@plt+0x777c>
   15f88:	str	r0, [fp, #-32]	; 0xffffffe0
   15f8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f90:	cmp	r0, #0
   15f94:	movw	r0, #0
   15f98:	str	r0, [sp, #28]
   15f9c:	bne	16000 <__assert_fail@plt+0x4afc>
   15fa0:	movw	r0, #0
   15fa4:	movt	r0, #0
   15fa8:	cmp	r0, #0
   15fac:	bne	15fc8 <__assert_fail@plt+0x4ac4>
   15fb0:	b	15fb4 <__assert_fail@plt+0x4ab0>
   15fb4:	movw	r0, #0
   15fb8:	movt	r0, #0
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fe0 <__assert_fail@plt+0x4adc>
   15fc4:	b	15fc8 <__assert_fail@plt+0x4ac4>
   15fc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15fcc:	add	r0, r0, #136	; 0x88
   15fd0:	movw	r1, #0
   15fd4:	bl	112b8 <pthread_mutex_init@plt>
   15fd8:	str	r0, [sp, #24]
   15fdc:	b	15fec <__assert_fail@plt+0x4ae8>
   15fe0:	movw	r0, #0
   15fe4:	str	r0, [sp, #24]
   15fe8:	b	15fec <__assert_fail@plt+0x4ae8>
   15fec:	ldr	r0, [sp, #24]
   15ff0:	cmp	r0, #0
   15ff4:	movw	r0, #0
   15ff8:	movne	r0, #1
   15ffc:	str	r0, [sp, #28]
   16000:	ldr	r0, [sp, #28]
   16004:	tst	r0, #1
   16008:	beq	16014 <__assert_fail@plt+0x4b10>
   1600c:	movw	r0, #12
   16010:	str	r0, [fp, #-32]	; 0xffffffe0
   16014:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16018:	cmp	r0, #0
   1601c:	beq	16048 <__assert_fail@plt+0x4b44>
   16020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16024:	bl	16e90 <__assert_fail@plt+0x598c>
   16028:	ldr	r0, [fp, #-16]
   1602c:	movw	lr, #0
   16030:	str	lr, [r0]
   16034:	ldr	r0, [fp, #-16]
   16038:	str	lr, [r0, #4]
   1603c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16040:	str	r0, [fp, #-12]
   16044:	b	16248 <__assert_fail@plt+0x4d44>
   16048:	ldr	r1, [fp, #-20]	; 0xffffffec
   1604c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16050:	ldr	r0, [fp, #-16]
   16054:	ldr	r3, [r0, #20]
   16058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1605c:	and	r0, r0, #4194304	; 0x400000
   16060:	cmp	r0, #0
   16064:	movw	r0, #0
   16068:	movne	r0, #1
   1606c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16070:	add	lr, sp, #32
   16074:	str	r0, [sp, #20]
   16078:	mov	r0, lr
   1607c:	ldr	lr, [sp, #20]
   16080:	and	r4, lr, #1
   16084:	str	r4, [sp]
   16088:	str	ip, [sp, #4]
   1608c:	bl	1928c <__assert_fail@plt+0x7d88>
   16090:	str	r0, [fp, #-32]	; 0xffffffe0
   16094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16098:	cmp	r0, #0
   1609c:	beq	1611c <__assert_fail@plt+0x4c18>
   160a0:	b	160a4 <__assert_fail@plt+0x4ba0>
   160a4:	ldr	r0, [fp, #-16]
   160a8:	bl	194a0 <__assert_fail@plt+0x7f9c>
   160ac:	add	r0, sp, #32
   160b0:	bl	19538 <__assert_fail@plt+0x8034>
   160b4:	movw	r0, #0
   160b8:	movt	r0, #0
   160bc:	cmp	r0, #0
   160c0:	bne	160dc <__assert_fail@plt+0x4bd8>
   160c4:	b	160c8 <__assert_fail@plt+0x4bc4>
   160c8:	movw	r0, #0
   160cc:	movt	r0, #0
   160d0:	cmp	r0, #0
   160d4:	beq	160f0 <__assert_fail@plt+0x4bec>
   160d8:	b	160dc <__assert_fail@plt+0x4bd8>
   160dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   160e0:	add	r0, r0, #136	; 0x88
   160e4:	bl	11258 <pthread_mutex_destroy@plt>
   160e8:	str	r0, [sp, #16]
   160ec:	b	160f4 <__assert_fail@plt+0x4bf0>
   160f0:	b	160f4 <__assert_fail@plt+0x4bf0>
   160f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   160f8:	bl	16e90 <__assert_fail@plt+0x598c>
   160fc:	ldr	r0, [fp, #-16]
   16100:	movw	lr, #0
   16104:	str	lr, [r0]
   16108:	ldr	r0, [fp, #-16]
   1610c:	str	lr, [r0, #4]
   16110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16114:	str	r0, [fp, #-12]
   16118:	b	16248 <__assert_fail@plt+0x4d44>
   1611c:	ldr	r0, [fp, #-16]
   16120:	movw	r1, #0
   16124:	str	r1, [r0, #24]
   16128:	ldr	r1, [fp, #-16]
   1612c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16130:	add	r0, sp, #32
   16134:	sub	r3, fp, #32
   16138:	bl	19584 <__assert_fail@plt+0x8080>
   1613c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16140:	str	r0, [r1, #52]	; 0x34
   16144:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16148:	ldr	r0, [r0, #52]	; 0x34
   1614c:	movw	r1, #0
   16150:	cmp	r0, r1
   16154:	bne	1615c <__assert_fail@plt+0x4c58>
   16158:	b	160a4 <__assert_fail@plt+0x4ba0>
   1615c:	ldr	r0, [fp, #-16]
   16160:	bl	19700 <__assert_fail@plt+0x81fc>
   16164:	str	r0, [fp, #-32]	; 0xffffffe0
   16168:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1616c:	cmp	r0, #0
   16170:	beq	16178 <__assert_fail@plt+0x4c74>
   16174:	b	160a4 <__assert_fail@plt+0x4ba0>
   16178:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1617c:	ldrb	r0, [r0, #88]	; 0x58
   16180:	ubfx	r0, r0, #2, #1
   16184:	and	r0, r0, #255	; 0xff
   16188:	cmp	r0, #0
   1618c:	beq	161bc <__assert_fail@plt+0x4cb8>
   16190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16194:	and	r0, r0, #4194304	; 0x400000
   16198:	cmp	r0, #0
   1619c:	bne	161bc <__assert_fail@plt+0x4cb8>
   161a0:	ldr	r0, [fp, #-16]
   161a4:	ldr	r0, [r0, #20]
   161a8:	movw	r1, #0
   161ac:	cmp	r0, r1
   161b0:	bne	161bc <__assert_fail@plt+0x4cb8>
   161b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161b8:	bl	19ad8 <__assert_fail@plt+0x85d4>
   161bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161c0:	bl	19de4 <__assert_fail@plt+0x88e0>
   161c4:	str	r0, [fp, #-32]	; 0xffffffe0
   161c8:	ldr	r0, [fp, #-16]
   161cc:	bl	194a0 <__assert_fail@plt+0x7f9c>
   161d0:	add	r0, sp, #32
   161d4:	bl	19538 <__assert_fail@plt+0x8034>
   161d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161dc:	cmp	r0, #0
   161e0:	beq	16240 <__assert_fail@plt+0x4d3c>
   161e4:	movw	r0, #0
   161e8:	movt	r0, #0
   161ec:	cmp	r0, #0
   161f0:	bne	1620c <__assert_fail@plt+0x4d08>
   161f4:	b	161f8 <__assert_fail@plt+0x4cf4>
   161f8:	movw	r0, #0
   161fc:	movt	r0, #0
   16200:	cmp	r0, #0
   16204:	beq	16220 <__assert_fail@plt+0x4d1c>
   16208:	b	1620c <__assert_fail@plt+0x4d08>
   1620c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16210:	add	r0, r0, #136	; 0x88
   16214:	bl	11258 <pthread_mutex_destroy@plt>
   16218:	str	r0, [sp, #12]
   1621c:	b	16224 <__assert_fail@plt+0x4d20>
   16220:	b	16224 <__assert_fail@plt+0x4d20>
   16224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16228:	bl	16e90 <__assert_fail@plt+0x598c>
   1622c:	ldr	r0, [fp, #-16]
   16230:	movw	lr, #0
   16234:	str	lr, [r0]
   16238:	ldr	r0, [fp, #-16]
   1623c:	str	lr, [r0, #4]
   16240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16244:	str	r0, [fp, #-12]
   16248:	ldr	r0, [fp, #-12]
   1624c:	sub	sp, fp, #8
   16250:	pop	{r4, sl, fp, pc}
   16254:	sub	sp, sp, #8
   16258:	str	r0, [sp, #4]
   1625c:	movw	r0, #38604	; 0x96cc
   16260:	movt	r0, #4
   16264:	ldr	r1, [r0]
   16268:	str	r1, [sp]
   1626c:	ldr	r1, [sp, #4]
   16270:	str	r1, [r0]
   16274:	ldr	r0, [sp]
   16278:	add	sp, sp, #8
   1627c:	bx	lr
   16280:	push	{fp, lr}
   16284:	mov	fp, sp
   16288:	sub	sp, sp, #16
   1628c:	str	r0, [fp, #-4]
   16290:	ldr	r0, [fp, #-4]
   16294:	ldr	r0, [r0]
   16298:	str	r0, [sp, #8]
   1629c:	ldr	r0, [fp, #-4]
   162a0:	ldr	r0, [r0, #16]
   162a4:	str	r0, [sp, #4]
   162a8:	ldr	r0, [sp, #4]
   162ac:	movw	r1, #0
   162b0:	and	r1, r1, #255	; 0xff
   162b4:	movw	r2, #256	; 0x100
   162b8:	bl	11420 <memset@plt>
   162bc:	ldr	r0, [fp, #-4]
   162c0:	ldr	r1, [sp, #8]
   162c4:	ldr	r1, [r1, #36]	; 0x24
   162c8:	ldr	r2, [sp, #4]
   162cc:	bl	16378 <__assert_fail@plt+0x4e74>
   162d0:	ldr	r0, [sp, #8]
   162d4:	ldr	r0, [r0, #36]	; 0x24
   162d8:	ldr	r1, [sp, #8]
   162dc:	ldr	r1, [r1, #40]	; 0x28
   162e0:	cmp	r0, r1
   162e4:	beq	162fc <__assert_fail@plt+0x4df8>
   162e8:	ldr	r0, [fp, #-4]
   162ec:	ldr	r1, [sp, #8]
   162f0:	ldr	r1, [r1, #40]	; 0x28
   162f4:	ldr	r2, [sp, #4]
   162f8:	bl	16378 <__assert_fail@plt+0x4e74>
   162fc:	ldr	r0, [sp, #8]
   16300:	ldr	r0, [r0, #36]	; 0x24
   16304:	ldr	r1, [sp, #8]
   16308:	ldr	r1, [r1, #44]	; 0x2c
   1630c:	cmp	r0, r1
   16310:	beq	16328 <__assert_fail@plt+0x4e24>
   16314:	ldr	r0, [fp, #-4]
   16318:	ldr	r1, [sp, #8]
   1631c:	ldr	r1, [r1, #44]	; 0x2c
   16320:	ldr	r2, [sp, #4]
   16324:	bl	16378 <__assert_fail@plt+0x4e74>
   16328:	ldr	r0, [sp, #8]
   1632c:	ldr	r0, [r0, #36]	; 0x24
   16330:	ldr	r1, [sp, #8]
   16334:	ldr	r1, [r1, #48]	; 0x30
   16338:	cmp	r0, r1
   1633c:	beq	16354 <__assert_fail@plt+0x4e50>
   16340:	ldr	r0, [fp, #-4]
   16344:	ldr	r1, [sp, #8]
   16348:	ldr	r1, [r1, #48]	; 0x30
   1634c:	ldr	r2, [sp, #4]
   16350:	bl	16378 <__assert_fail@plt+0x4e74>
   16354:	ldr	r0, [fp, #-4]
   16358:	ldrb	r1, [r0, #28]
   1635c:	bic	r1, r1, #8
   16360:	movw	r2, #8
   16364:	orr	r1, r1, r2
   16368:	strb	r1, [r0, #28]
   1636c:	movw	r0, #0
   16370:	mov	sp, fp
   16374:	pop	{fp, pc}
   16378:	push	{r4, r5, fp, lr}
   1637c:	add	fp, sp, #8
   16380:	sub	sp, sp, #504	; 0x1f8
   16384:	str	r0, [fp, #-84]	; 0xffffffac
   16388:	str	r1, [fp, #-88]	; 0xffffffa8
   1638c:	str	r2, [fp, #-92]	; 0xffffffa4
   16390:	ldr	r0, [fp, #-84]	; 0xffffffac
   16394:	ldr	r0, [r0]
   16398:	str	r0, [fp, #-96]	; 0xffffffa0
   1639c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   163a0:	ldr	r0, [r0, #92]	; 0x5c
   163a4:	cmp	r0, #1
   163a8:	movw	r0, #0
   163ac:	str	r0, [sp, #60]	; 0x3c
   163b0:	bne	163d0 <__assert_fail@plt+0x4ecc>
   163b4:	ldr	r0, [fp, #-84]	; 0xffffffac
   163b8:	ldr	r0, [r0, #12]
   163bc:	and	r0, r0, #4194304	; 0x400000
   163c0:	cmp	r0, #0
   163c4:	movw	r0, #0
   163c8:	movne	r0, #1
   163cc:	str	r0, [sp, #60]	; 0x3c
   163d0:	ldr	r0, [sp, #60]	; 0x3c
   163d4:	and	r0, r0, #1
   163d8:	strb	r0, [fp, #-101]	; 0xffffff9b
   163dc:	movw	r0, #0
   163e0:	str	r0, [fp, #-100]	; 0xffffff9c
   163e4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   163e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   163ec:	ldr	r1, [r1, #8]
   163f0:	cmp	r0, r1
   163f4:	bge	16af4 <__assert_fail@plt+0x55f0>
   163f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   163fc:	ldr	r0, [r0, #12]
   16400:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16404:	ldr	r0, [r0, r1, lsl #2]
   16408:	str	r0, [fp, #-108]	; 0xffffff94
   1640c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16410:	ldr	r0, [r0]
   16414:	ldr	r1, [fp, #-108]	; 0xffffff94
   16418:	add	r0, r0, r1, lsl #3
   1641c:	ldr	r0, [r0, #4]
   16420:	and	r0, r0, #255	; 0xff
   16424:	str	r0, [fp, #-112]	; 0xffffff90
   16428:	ldr	r0, [fp, #-112]	; 0xffffff90
   1642c:	cmp	r0, #1
   16430:	bne	16694 <__assert_fail@plt+0x5190>
   16434:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16438:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   1643c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16440:	ldr	r2, [r2]
   16444:	ldr	r3, [fp, #-108]	; 0xffffff94
   16448:	add	r2, r2, r3, lsl #3
   1644c:	ldrb	r2, [r2]
   16450:	str	r0, [fp, #-72]	; 0xffffffb8
   16454:	and	r0, r1, #1
   16458:	strb	r0, [fp, #-73]	; 0xffffffb7
   1645c:	str	r2, [fp, #-80]	; 0xffffffb0
   16460:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16464:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16468:	add	r0, r0, r1
   1646c:	movw	r1, #1
   16470:	strb	r1, [r0]
   16474:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16478:	tst	r0, #1
   1647c:	beq	164a4 <__assert_fail@plt+0x4fa0>
   16480:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16484:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16488:	str	r0, [sp, #56]	; 0x38
   1648c:	mov	r0, r1
   16490:	bl	112ac <tolower@plt>
   16494:	ldr	r1, [sp, #56]	; 0x38
   16498:	add	r0, r1, r0
   1649c:	movw	r1, #1
   164a0:	strb	r1, [r0]
   164a4:	ldr	r0, [fp, #-84]	; 0xffffffac
   164a8:	ldr	r0, [r0, #12]
   164ac:	and	r0, r0, #4194304	; 0x400000
   164b0:	cmp	r0, #0
   164b4:	beq	16690 <__assert_fail@plt+0x518c>
   164b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164bc:	ldr	r0, [r0, #92]	; 0x5c
   164c0:	cmp	r0, #1
   164c4:	ble	16690 <__assert_fail@plt+0x518c>
   164c8:	sub	r0, fp, #128	; 0x80
   164cc:	str	r0, [fp, #-132]	; 0xffffff7c
   164d0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164d4:	ldr	r0, [r0]
   164d8:	ldr	r1, [fp, #-108]	; 0xffffff94
   164dc:	add	r0, r0, r1, lsl #3
   164e0:	ldrb	r0, [r0]
   164e4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   164e8:	add	r2, r1, #1
   164ec:	str	r2, [fp, #-132]	; 0xffffff7c
   164f0:	strb	r0, [r1]
   164f4:	ldr	r0, [fp, #-108]	; 0xffffff94
   164f8:	add	r0, r0, #1
   164fc:	str	r0, [fp, #-108]	; 0xffffff94
   16500:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16504:	ldr	r1, [r1, #8]
   16508:	cmp	r0, r1
   1650c:	movw	r0, #0
   16510:	str	r0, [sp, #52]	; 0x34
   16514:	bcs	1656c <__assert_fail@plt+0x5068>
   16518:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1651c:	ldr	r0, [r0]
   16520:	ldr	r1, [fp, #-108]	; 0xffffff94
   16524:	add	r0, r0, r1, lsl #3
   16528:	ldr	r0, [r0, #4]
   1652c:	and	r0, r0, #255	; 0xff
   16530:	cmp	r0, #1
   16534:	movw	r0, #0
   16538:	str	r0, [sp, #52]	; 0x34
   1653c:	bne	1656c <__assert_fail@plt+0x5068>
   16540:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16544:	ldr	r0, [r0]
   16548:	ldr	r1, [fp, #-108]	; 0xffffff94
   1654c:	add	r0, r0, r1, lsl #3
   16550:	ldr	r0, [r0, #4]
   16554:	lsr	r0, r0, #21
   16558:	and	r0, r0, #1
   1655c:	cmp	r0, #0
   16560:	movw	r0, #0
   16564:	movne	r0, #1
   16568:	str	r0, [sp, #52]	; 0x34
   1656c:	ldr	r0, [sp, #52]	; 0x34
   16570:	tst	r0, #1
   16574:	beq	165a0 <__assert_fail@plt+0x509c>
   16578:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1657c:	ldr	r0, [r0]
   16580:	ldr	r1, [fp, #-108]	; 0xffffff94
   16584:	add	r0, r0, r1, lsl #3
   16588:	ldrb	r0, [r0]
   1658c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   16590:	add	r2, r1, #1
   16594:	str	r2, [fp, #-132]	; 0xffffff7c
   16598:	strb	r0, [r1]
   1659c:	b	164f4 <__assert_fail@plt+0x4ff0>
   165a0:	sub	r0, fp, #128	; 0x80
   165a4:	sub	r1, fp, #144	; 0x90
   165a8:	mov	r2, r1
   165ac:	str	r0, [sp, #48]	; 0x30
   165b0:	mov	r0, r2
   165b4:	movw	r2, #0
   165b8:	and	r2, r2, #255	; 0xff
   165bc:	str	r1, [sp, #44]	; 0x2c
   165c0:	mov	r1, r2
   165c4:	movw	r2, #8
   165c8:	bl	11420 <memset@plt>
   165cc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   165d0:	ldr	r1, [sp, #48]	; 0x30
   165d4:	sub	r2, r0, r1
   165d8:	sub	r0, fp, #136	; 0x88
   165dc:	ldr	r3, [sp, #44]	; 0x2c
   165e0:	bl	354d8 <__assert_fail@plt+0x23fd4>
   165e4:	sub	r1, fp, #128	; 0x80
   165e8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   165ec:	sub	r1, r2, r1
   165f0:	cmp	r0, r1
   165f4:	bne	1668c <__assert_fail@plt+0x5188>
   165f8:	sub	r0, fp, #128	; 0x80
   165fc:	ldr	r1, [fp, #-136]	; 0xffffff78
   16600:	str	r0, [sp, #40]	; 0x28
   16604:	mov	r0, r1
   16608:	bl	112c4 <towlower@plt>
   1660c:	ldr	r1, [sp, #40]	; 0x28
   16610:	str	r0, [sp, #36]	; 0x24
   16614:	mov	r0, r1
   16618:	ldr	r1, [sp, #36]	; 0x24
   1661c:	sub	r2, fp, #144	; 0x90
   16620:	bl	1121c <wcrtomb@plt>
   16624:	cmn	r0, #1
   16628:	beq	1668c <__assert_fail@plt+0x5188>
   1662c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16630:	ldrb	r1, [fp, #-128]	; 0xffffff80
   16634:	str	r0, [fp, #-60]	; 0xffffffc4
   16638:	movw	r0, #0
   1663c:	strb	r0, [fp, #-61]	; 0xffffffc3
   16640:	str	r1, [fp, #-68]	; 0xffffffbc
   16644:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16648:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1664c:	add	r0, r0, r1
   16650:	movw	r1, #1
   16654:	strb	r1, [r0]
   16658:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1665c:	tst	r0, #1
   16660:	beq	16688 <__assert_fail@plt+0x5184>
   16664:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16668:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1666c:	str	r0, [sp, #32]
   16670:	mov	r0, r1
   16674:	bl	112ac <tolower@plt>
   16678:	ldr	r1, [sp, #32]
   1667c:	add	r0, r1, r0
   16680:	movw	r1, #1
   16684:	strb	r1, [r0]
   16688:	b	1668c <__assert_fail@plt+0x5188>
   1668c:	b	16690 <__assert_fail@plt+0x518c>
   16690:	b	16ae0 <__assert_fail@plt+0x55dc>
   16694:	ldr	r0, [fp, #-112]	; 0xffffff90
   16698:	cmp	r0, #3
   1669c:	bne	167a4 <__assert_fail@plt+0x52a0>
   166a0:	movw	r0, #0
   166a4:	str	r0, [fp, #-148]	; 0xffffff6c
   166a8:	str	r0, [fp, #-152]	; 0xffffff68
   166ac:	ldr	r0, [fp, #-148]	; 0xffffff6c
   166b0:	cmp	r0, #8
   166b4:	bge	167a0 <__assert_fail@plt+0x529c>
   166b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   166bc:	ldr	r0, [r0]
   166c0:	ldr	r1, [fp, #-108]	; 0xffffff94
   166c4:	ldr	r0, [r0, r1, lsl #3]
   166c8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   166cc:	add	r0, r0, r1, lsl #2
   166d0:	ldr	r0, [r0]
   166d4:	str	r0, [fp, #-160]	; 0xffffff60
   166d8:	movw	r0, #0
   166dc:	str	r0, [fp, #-156]	; 0xffffff64
   166e0:	ldr	r0, [fp, #-156]	; 0xffffff64
   166e4:	cmp	r0, #32
   166e8:	bge	1678c <__assert_fail@plt+0x5288>
   166ec:	ldr	r0, [fp, #-160]	; 0xffffff60
   166f0:	ldr	r1, [fp, #-156]	; 0xffffff64
   166f4:	movw	r2, #1
   166f8:	lsl	r1, r2, r1
   166fc:	and	r0, r0, r1
   16700:	cmp	r0, #0
   16704:	beq	1676c <__assert_fail@plt+0x5268>
   16708:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1670c:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   16710:	ldr	r2, [fp, #-152]	; 0xffffff68
   16714:	str	r0, [fp, #-48]	; 0xffffffd0
   16718:	and	r0, r1, #1
   1671c:	strb	r0, [fp, #-49]	; 0xffffffcf
   16720:	str	r2, [fp, #-56]	; 0xffffffc8
   16724:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16728:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1672c:	add	r0, r0, r1
   16730:	movw	r1, #1
   16734:	strb	r1, [r0]
   16738:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   1673c:	tst	r0, #1
   16740:	beq	16768 <__assert_fail@plt+0x5264>
   16744:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16748:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1674c:	str	r0, [sp, #28]
   16750:	mov	r0, r1
   16754:	bl	112ac <tolower@plt>
   16758:	ldr	r1, [sp, #28]
   1675c:	add	r0, r1, r0
   16760:	movw	r1, #1
   16764:	strb	r1, [r0]
   16768:	b	1676c <__assert_fail@plt+0x5268>
   1676c:	b	16770 <__assert_fail@plt+0x526c>
   16770:	ldr	r0, [fp, #-156]	; 0xffffff64
   16774:	add	r0, r0, #1
   16778:	str	r0, [fp, #-156]	; 0xffffff64
   1677c:	ldr	r0, [fp, #-152]	; 0xffffff68
   16780:	add	r0, r0, #1
   16784:	str	r0, [fp, #-152]	; 0xffffff68
   16788:	b	166e0 <__assert_fail@plt+0x51dc>
   1678c:	b	16790 <__assert_fail@plt+0x528c>
   16790:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16794:	add	r0, r0, #1
   16798:	str	r0, [fp, #-148]	; 0xffffff6c
   1679c:	b	166ac <__assert_fail@plt+0x51a8>
   167a0:	b	16adc <__assert_fail@plt+0x55d8>
   167a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   167a8:	cmp	r0, #6
   167ac:	bne	16a74 <__assert_fail@plt+0x5570>
   167b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   167b4:	ldr	r0, [r0]
   167b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   167bc:	add	r0, r0, r1, lsl #3
   167c0:	ldr	r0, [r0]
   167c4:	str	r0, [fp, #-164]	; 0xffffff5c
   167c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   167cc:	ldr	r0, [r0, #92]	; 0x5c
   167d0:	cmp	r0, #1
   167d4:	ble	168d8 <__assert_fail@plt+0x53d4>
   167d8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   167dc:	ldr	r0, [r0, #36]	; 0x24
   167e0:	cmp	r0, #0
   167e4:	bne	16810 <__assert_fail@plt+0x530c>
   167e8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   167ec:	ldrb	r0, [r0, #16]
   167f0:	and	r0, r0, #1
   167f4:	and	r0, r0, #255	; 0xff
   167f8:	cmp	r0, #0
   167fc:	bne	16810 <__assert_fail@plt+0x530c>
   16800:	ldr	r0, [fp, #-164]	; 0xffffff5c
   16804:	ldr	r0, [r0, #32]
   16808:	cmp	r0, #0
   1680c:	beq	168d8 <__assert_fail@plt+0x53d4>
   16810:	movw	r0, #0
   16814:	strb	r0, [fp, #-169]	; 0xffffff57
   16818:	sub	r0, fp, #180	; 0xb4
   1681c:	mov	r1, r0
   16820:	str	r0, [sp, #24]
   16824:	mov	r0, r1
   16828:	movw	r1, #0
   1682c:	and	r1, r1, #255	; 0xff
   16830:	movw	r2, #8
   16834:	bl	11420 <memset@plt>
   16838:	movw	r0, #0
   1683c:	sub	r1, fp, #169	; 0xa9
   16840:	movw	r2, #1
   16844:	ldr	r3, [sp, #24]
   16848:	bl	354d8 <__assert_fail@plt+0x23fd4>
   1684c:	cmn	r0, #2
   16850:	bne	168b4 <__assert_fail@plt+0x53b0>
   16854:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16858:	ldrb	r1, [fp, #-169]	; 0xffffff57
   1685c:	str	r0, [fp, #-36]	; 0xffffffdc
   16860:	movw	r0, #0
   16864:	strb	r0, [fp, #-37]	; 0xffffffdb
   16868:	str	r1, [fp, #-44]	; 0xffffffd4
   1686c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16874:	add	r0, r0, r1
   16878:	movw	r1, #1
   1687c:	strb	r1, [r0]
   16880:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16884:	tst	r0, #1
   16888:	beq	168b0 <__assert_fail@plt+0x53ac>
   1688c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16890:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16894:	str	r0, [sp, #20]
   16898:	mov	r0, r1
   1689c:	bl	112ac <tolower@plt>
   168a0:	ldr	r1, [sp, #20]
   168a4:	add	r0, r1, r0
   168a8:	movw	r1, #1
   168ac:	strb	r1, [r0]
   168b0:	b	168b4 <__assert_fail@plt+0x53b0>
   168b4:	b	168b8 <__assert_fail@plt+0x53b4>
   168b8:	ldrb	r0, [fp, #-169]	; 0xffffff57
   168bc:	movw	r1, #1
   168c0:	add	r0, r0, r1
   168c4:	strb	r0, [fp, #-169]	; 0xffffff57
   168c8:	and	r0, r0, #255	; 0xff
   168cc:	cmp	r0, #0
   168d0:	bne	16818 <__assert_fail@plt+0x5314>
   168d4:	b	16a70 <__assert_fail@plt+0x556c>
   168d8:	movw	r0, #0
   168dc:	str	r0, [fp, #-168]	; 0xffffff58
   168e0:	ldr	r0, [fp, #-168]	; 0xffffff58
   168e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   168e8:	ldr	r1, [r1, #20]
   168ec:	cmp	r0, r1
   168f0:	bge	16a6c <__assert_fail@plt+0x5568>
   168f4:	mov	r0, #0
   168f8:	str	r0, [sp, #68]	; 0x44
   168fc:	str	r0, [sp, #64]	; 0x40
   16900:	add	r0, sp, #76	; 0x4c
   16904:	ldr	r1, [fp, #-164]	; 0xffffff5c
   16908:	ldr	r1, [r1]
   1690c:	ldr	r2, [fp, #-168]	; 0xffffff58
   16910:	add	r1, r1, r2, lsl #2
   16914:	ldr	r1, [r1]
   16918:	add	r2, sp, #64	; 0x40
   1691c:	bl	1121c <wcrtomb@plt>
   16920:	cmn	r0, #1
   16924:	beq	1698c <__assert_fail@plt+0x5488>
   16928:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1692c:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   16930:	ldrb	r2, [sp, #76]	; 0x4c
   16934:	str	r0, [fp, #-24]	; 0xffffffe8
   16938:	and	r0, r1, #1
   1693c:	strb	r0, [fp, #-25]	; 0xffffffe7
   16940:	str	r2, [fp, #-32]	; 0xffffffe0
   16944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16948:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1694c:	add	r0, r0, r1
   16950:	movw	r1, #1
   16954:	strb	r1, [r0]
   16958:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1695c:	tst	r0, #1
   16960:	beq	16988 <__assert_fail@plt+0x5484>
   16964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16968:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1696c:	str	r0, [sp, #16]
   16970:	mov	r0, r1
   16974:	bl	112ac <tolower@plt>
   16978:	ldr	r1, [sp, #16]
   1697c:	add	r0, r1, r0
   16980:	movw	r1, #1
   16984:	strb	r1, [r0]
   16988:	b	1698c <__assert_fail@plt+0x5488>
   1698c:	ldr	r0, [fp, #-84]	; 0xffffffac
   16990:	ldr	r0, [r0, #12]
   16994:	and	r0, r0, #4194304	; 0x400000
   16998:	cmp	r0, #0
   1699c:	beq	16a58 <__assert_fail@plt+0x5554>
   169a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   169a4:	ldr	r0, [r0, #92]	; 0x5c
   169a8:	cmp	r0, #1
   169ac:	ble	16a58 <__assert_fail@plt+0x5554>
   169b0:	add	r0, sp, #76	; 0x4c
   169b4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   169b8:	ldr	r1, [r1]
   169bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   169c0:	add	r1, r1, r2, lsl #2
   169c4:	ldr	r1, [r1]
   169c8:	str	r0, [sp, #12]
   169cc:	mov	r0, r1
   169d0:	bl	112c4 <towlower@plt>
   169d4:	ldr	r1, [sp, #12]
   169d8:	str	r0, [sp, #8]
   169dc:	mov	r0, r1
   169e0:	ldr	r1, [sp, #8]
   169e4:	add	r2, sp, #64	; 0x40
   169e8:	bl	1121c <wcrtomb@plt>
   169ec:	cmn	r0, #1
   169f0:	beq	16a54 <__assert_fail@plt+0x5550>
   169f4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   169f8:	ldrb	r1, [sp, #76]	; 0x4c
   169fc:	str	r0, [fp, #-12]
   16a00:	movw	r0, #0
   16a04:	strb	r0, [fp, #-13]
   16a08:	str	r1, [fp, #-20]	; 0xffffffec
   16a0c:	ldr	r0, [fp, #-12]
   16a10:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a14:	add	r0, r0, r1
   16a18:	movw	r1, #1
   16a1c:	strb	r1, [r0]
   16a20:	ldrb	r0, [fp, #-13]
   16a24:	tst	r0, #1
   16a28:	beq	16a50 <__assert_fail@plt+0x554c>
   16a2c:	ldr	r0, [fp, #-12]
   16a30:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a34:	str	r0, [sp, #4]
   16a38:	mov	r0, r1
   16a3c:	bl	112ac <tolower@plt>
   16a40:	ldr	r1, [sp, #4]
   16a44:	add	r0, r1, r0
   16a48:	movw	r1, #1
   16a4c:	strb	r1, [r0]
   16a50:	b	16a54 <__assert_fail@plt+0x5550>
   16a54:	b	16a58 <__assert_fail@plt+0x5554>
   16a58:	b	16a5c <__assert_fail@plt+0x5558>
   16a5c:	ldr	r0, [fp, #-168]	; 0xffffff58
   16a60:	add	r0, r0, #1
   16a64:	str	r0, [fp, #-168]	; 0xffffff58
   16a68:	b	168e0 <__assert_fail@plt+0x53dc>
   16a6c:	b	16a70 <__assert_fail@plt+0x556c>
   16a70:	b	16ad8 <__assert_fail@plt+0x55d4>
   16a74:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a78:	cmp	r0, #5
   16a7c:	beq	16a98 <__assert_fail@plt+0x5594>
   16a80:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a84:	cmp	r0, #7
   16a88:	beq	16a98 <__assert_fail@plt+0x5594>
   16a8c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a90:	cmp	r0, #2
   16a94:	bne	16ad4 <__assert_fail@plt+0x55d0>
   16a98:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16a9c:	movw	r1, #1
   16aa0:	and	r1, r1, #255	; 0xff
   16aa4:	movw	r2, #256	; 0x100
   16aa8:	bl	11420 <memset@plt>
   16aac:	ldr	r0, [fp, #-112]	; 0xffffff90
   16ab0:	cmp	r0, #2
   16ab4:	bne	16ad0 <__assert_fail@plt+0x55cc>
   16ab8:	ldr	r0, [fp, #-84]	; 0xffffffac
   16abc:	ldrb	r1, [r0, #28]
   16ac0:	bic	r1, r1, #1
   16ac4:	movw	r2, #1
   16ac8:	orr	r1, r1, r2
   16acc:	strb	r1, [r0, #28]
   16ad0:	b	16af4 <__assert_fail@plt+0x55f0>
   16ad4:	b	16ad8 <__assert_fail@plt+0x55d4>
   16ad8:	b	16adc <__assert_fail@plt+0x55d8>
   16adc:	b	16ae0 <__assert_fail@plt+0x55dc>
   16ae0:	b	16ae4 <__assert_fail@plt+0x55e0>
   16ae4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16ae8:	add	r0, r0, #1
   16aec:	str	r0, [fp, #-100]	; 0xffffff9c
   16af0:	b	163e4 <__assert_fail@plt+0x4ee0>
   16af4:	sub	sp, fp, #8
   16af8:	pop	{r4, r5, fp, pc}
   16afc:	push	{fp, lr}
   16b00:	mov	fp, sp
   16b04:	sub	sp, sp, #40	; 0x28
   16b08:	ldr	r3, [pc, #444]	; 16ccc <__assert_fail@plt+0x57c8>
   16b0c:	ldr	ip, [pc, #444]	; 16cd0 <__assert_fail@plt+0x57cc>
   16b10:	str	r0, [fp, #-8]
   16b14:	str	r1, [fp, #-12]
   16b18:	str	r2, [fp, #-16]
   16b1c:	ldr	r0, [fp, #-16]
   16b20:	and	r0, r0, #1
   16b24:	cmp	r0, #0
   16b28:	movw	r0, #0
   16b2c:	movne	r0, #1
   16b30:	tst	r0, #1
   16b34:	movne	ip, r3
   16b38:	str	ip, [sp, #16]
   16b3c:	ldr	r0, [fp, #-8]
   16b40:	movw	r1, #0
   16b44:	str	r1, [r0]
   16b48:	ldr	r0, [fp, #-8]
   16b4c:	str	r1, [r0, #4]
   16b50:	ldr	r0, [fp, #-8]
   16b54:	str	r1, [r0, #8]
   16b58:	movw	r0, #256	; 0x100
   16b5c:	bl	33b44 <__assert_fail@plt+0x22640>
   16b60:	ldr	r1, [fp, #-8]
   16b64:	str	r0, [r1, #16]
   16b68:	ldr	r0, [fp, #-8]
   16b6c:	ldr	r0, [r0, #16]
   16b70:	movw	r1, #0
   16b74:	cmp	r0, r1
   16b78:	bne	16b88 <__assert_fail@plt+0x5684>
   16b7c:	movw	r0, #12
   16b80:	str	r0, [fp, #-4]
   16b84:	b	16cc0 <__assert_fail@plt+0x57bc>
   16b88:	ldr	r0, [pc, #324]	; 16cd4 <__assert_fail@plt+0x57d0>
   16b8c:	ldr	r1, [fp, #-16]
   16b90:	and	r1, r1, #2
   16b94:	cmp	r1, #0
   16b98:	movw	r1, #0
   16b9c:	movne	r1, #1
   16ba0:	tst	r1, #1
   16ba4:	moveq	r0, #0
   16ba8:	ldr	r1, [sp, #16]
   16bac:	orr	r0, r1, r0
   16bb0:	str	r0, [sp, #16]
   16bb4:	ldr	r0, [fp, #-16]
   16bb8:	and	r0, r0, #4
   16bbc:	cmp	r0, #0
   16bc0:	beq	16bf8 <__assert_fail@plt+0x56f4>
   16bc4:	ldr	r0, [sp, #16]
   16bc8:	bic	r0, r0, #64	; 0x40
   16bcc:	str	r0, [sp, #16]
   16bd0:	ldr	r0, [sp, #16]
   16bd4:	orr	r0, r0, #256	; 0x100
   16bd8:	str	r0, [sp, #16]
   16bdc:	ldr	r0, [fp, #-8]
   16be0:	ldrb	r1, [r0, #28]
   16be4:	and	r1, r1, #127	; 0x7f
   16be8:	movw	r2, #128	; 0x80
   16bec:	orr	r1, r1, r2
   16bf0:	strb	r1, [r0, #28]
   16bf4:	b	16c08 <__assert_fail@plt+0x5704>
   16bf8:	ldr	r0, [fp, #-8]
   16bfc:	ldrb	r1, [r0, #28]
   16c00:	and	r1, r1, #127	; 0x7f
   16c04:	strb	r1, [r0, #28]
   16c08:	ldrb	r0, [fp, #-16]
   16c0c:	and	r0, r0, #8
   16c10:	ldr	r1, [fp, #-8]
   16c14:	ldrb	r2, [r1, #28]
   16c18:	lsl	r0, r0, #1
   16c1c:	bic	r2, r2, #16
   16c20:	orr	r0, r2, r0
   16c24:	strb	r0, [r1, #28]
   16c28:	ldr	r0, [fp, #-8]
   16c2c:	movw	r1, #0
   16c30:	str	r1, [r0, #20]
   16c34:	ldr	r0, [fp, #-8]
   16c38:	ldr	r1, [fp, #-12]
   16c3c:	ldr	r2, [fp, #-12]
   16c40:	str	r0, [sp, #12]
   16c44:	mov	r0, r2
   16c48:	str	r1, [sp, #8]
   16c4c:	bl	113d8 <strlen@plt>
   16c50:	ldr	r3, [sp, #16]
   16c54:	ldr	r1, [sp, #12]
   16c58:	str	r0, [sp, #4]
   16c5c:	mov	r0, r1
   16c60:	ldr	r1, [sp, #8]
   16c64:	ldr	r2, [sp, #4]
   16c68:	bl	15e7c <__assert_fail@plt+0x4978>
   16c6c:	str	r0, [sp, #20]
   16c70:	ldr	r0, [sp, #20]
   16c74:	cmp	r0, #16
   16c78:	bne	16c84 <__assert_fail@plt+0x5780>
   16c7c:	movw	r0, #8
   16c80:	str	r0, [sp, #20]
   16c84:	ldr	r0, [sp, #20]
   16c88:	cmp	r0, #0
   16c8c:	bne	16ca0 <__assert_fail@plt+0x579c>
   16c90:	ldr	r0, [fp, #-8]
   16c94:	bl	16280 <__assert_fail@plt+0x4d7c>
   16c98:	str	r0, [sp]
   16c9c:	b	16cb8 <__assert_fail@plt+0x57b4>
   16ca0:	ldr	r0, [fp, #-8]
   16ca4:	ldr	r0, [r0, #16]
   16ca8:	bl	35268 <__assert_fail@plt+0x23d64>
   16cac:	ldr	r0, [fp, #-8]
   16cb0:	movw	lr, #0
   16cb4:	str	lr, [r0, #16]
   16cb8:	ldr	r0, [sp, #20]
   16cbc:	str	r0, [fp, #-4]
   16cc0:	ldr	r0, [fp, #-4]
   16cc4:	mov	sp, fp
   16cc8:	pop	{fp, pc}
   16ccc:	strdeq	fp, [r3], -ip
   16cd0:	smlabteq	r1, r6, r2, r0
   16cd4:	subeq	r0, r0, r0
   16cd8:	push	{fp, lr}
   16cdc:	mov	fp, sp
   16ce0:	sub	sp, sp, #40	; 0x28
   16ce4:	str	r0, [fp, #-4]
   16ce8:	str	r1, [fp, #-8]
   16cec:	str	r2, [fp, #-12]
   16cf0:	str	r3, [fp, #-16]
   16cf4:	movw	r0, #17
   16cf8:	str	r0, [sp, #12]
   16cfc:	ldr	r0, [fp, #-4]
   16d00:	cmp	r0, #0
   16d04:	movw	r0, #1
   16d08:	str	r0, [sp, #4]
   16d0c:	blt	16d28 <__assert_fail@plt+0x5824>
   16d10:	ldr	r0, [fp, #-4]
   16d14:	ldr	r1, [sp, #12]
   16d18:	cmp	r0, r1
   16d1c:	movw	r0, #0
   16d20:	movge	r0, #1
   16d24:	str	r0, [sp, #4]
   16d28:	ldr	r0, [sp, #4]
   16d2c:	tst	r0, #1
   16d30:	beq	16d38 <__assert_fail@plt+0x5834>
   16d34:	bl	114e0 <abort@plt>
   16d38:	ldr	r0, [fp, #-4]
   16d3c:	movw	r1, #33476	; 0x82c4
   16d40:	movt	r1, #3
   16d44:	add	r0, r1, r0, lsl #2
   16d48:	ldr	r0, [r0]
   16d4c:	movw	r1, #33092	; 0x8144
   16d50:	movt	r1, #3
   16d54:	add	r0, r1, r0
   16d58:	bl	113cc <gettext@plt>
   16d5c:	str	r0, [sp, #20]
   16d60:	ldr	r0, [sp, #20]
   16d64:	bl	113d8 <strlen@plt>
   16d68:	add	r0, r0, #1
   16d6c:	str	r0, [sp, #16]
   16d70:	ldr	r0, [fp, #-16]
   16d74:	cmp	r0, #0
   16d78:	beq	16dc4 <__assert_fail@plt+0x58c0>
   16d7c:	ldr	r0, [sp, #16]
   16d80:	str	r0, [sp, #8]
   16d84:	ldr	r0, [sp, #16]
   16d88:	ldr	r1, [fp, #-16]
   16d8c:	cmp	r0, r1
   16d90:	bls	16db4 <__assert_fail@plt+0x58b0>
   16d94:	ldr	r0, [fp, #-16]
   16d98:	sub	r0, r0, #1
   16d9c:	str	r0, [sp, #8]
   16da0:	ldr	r0, [fp, #-12]
   16da4:	ldr	r1, [sp, #8]
   16da8:	add	r0, r0, r1
   16dac:	movw	r1, #0
   16db0:	strb	r1, [r0]
   16db4:	ldr	r0, [fp, #-12]
   16db8:	ldr	r1, [sp, #20]
   16dbc:	ldr	r2, [sp, #8]
   16dc0:	bl	112a0 <memcpy@plt>
   16dc4:	ldr	r0, [sp, #16]
   16dc8:	mov	sp, fp
   16dcc:	pop	{fp, pc}
   16dd0:	push	{fp, lr}
   16dd4:	mov	fp, sp
   16dd8:	sub	sp, sp, #16
   16ddc:	str	r0, [fp, #-4]
   16de0:	ldr	r0, [fp, #-4]
   16de4:	ldr	r0, [r0]
   16de8:	str	r0, [sp, #8]
   16dec:	ldr	r0, [sp, #8]
   16df0:	movw	r1, #0
   16df4:	cmp	r0, r1
   16df8:	beq	16e44 <__assert_fail@plt+0x5940>
   16dfc:	movw	r0, #0
   16e00:	movt	r0, #0
   16e04:	cmp	r0, #0
   16e08:	bne	16e24 <__assert_fail@plt+0x5920>
   16e0c:	b	16e10 <__assert_fail@plt+0x590c>
   16e10:	movw	r0, #0
   16e14:	movt	r0, #0
   16e18:	cmp	r0, #0
   16e1c:	beq	16e38 <__assert_fail@plt+0x5934>
   16e20:	b	16e24 <__assert_fail@plt+0x5920>
   16e24:	ldr	r0, [sp, #8]
   16e28:	add	r0, r0, #136	; 0x88
   16e2c:	bl	11258 <pthread_mutex_destroy@plt>
   16e30:	str	r0, [sp, #4]
   16e34:	b	16e3c <__assert_fail@plt+0x5938>
   16e38:	b	16e3c <__assert_fail@plt+0x5938>
   16e3c:	ldr	r0, [sp, #8]
   16e40:	bl	16e90 <__assert_fail@plt+0x598c>
   16e44:	ldr	r0, [fp, #-4]
   16e48:	movw	r1, #0
   16e4c:	str	r1, [r0]
   16e50:	ldr	r0, [fp, #-4]
   16e54:	str	r1, [r0, #4]
   16e58:	ldr	r0, [fp, #-4]
   16e5c:	ldr	r0, [r0, #16]
   16e60:	bl	35268 <__assert_fail@plt+0x23d64>
   16e64:	ldr	r0, [fp, #-4]
   16e68:	movw	r1, #0
   16e6c:	str	r1, [r0, #16]
   16e70:	ldr	r0, [fp, #-4]
   16e74:	ldr	r0, [r0, #20]
   16e78:	bl	35268 <__assert_fail@plt+0x23d64>
   16e7c:	ldr	r0, [fp, #-4]
   16e80:	movw	r1, #0
   16e84:	str	r1, [r0, #20]
   16e88:	mov	sp, fp
   16e8c:	pop	{fp, pc}
   16e90:	push	{fp, lr}
   16e94:	mov	fp, sp
   16e98:	sub	sp, sp, #24
   16e9c:	str	r0, [fp, #-4]
   16ea0:	ldr	r0, [fp, #-4]
   16ea4:	ldr	r0, [r0]
   16ea8:	movw	r1, #0
   16eac:	cmp	r0, r1
   16eb0:	beq	16ef8 <__assert_fail@plt+0x59f4>
   16eb4:	movw	r0, #0
   16eb8:	str	r0, [fp, #-8]
   16ebc:	ldr	r0, [fp, #-8]
   16ec0:	ldr	r1, [fp, #-4]
   16ec4:	ldr	r1, [r1, #8]
   16ec8:	cmp	r0, r1
   16ecc:	bcs	16ef4 <__assert_fail@plt+0x59f0>
   16ed0:	ldr	r0, [fp, #-4]
   16ed4:	ldr	r0, [r0]
   16ed8:	ldr	r1, [fp, #-8]
   16edc:	add	r0, r0, r1, lsl #3
   16ee0:	bl	18b10 <__assert_fail@plt+0x760c>
   16ee4:	ldr	r0, [fp, #-8]
   16ee8:	add	r0, r0, #1
   16eec:	str	r0, [fp, #-8]
   16ef0:	b	16ebc <__assert_fail@plt+0x59b8>
   16ef4:	b	16ef8 <__assert_fail@plt+0x59f4>
   16ef8:	ldr	r0, [fp, #-4]
   16efc:	ldr	r0, [r0, #12]
   16f00:	bl	35268 <__assert_fail@plt+0x23d64>
   16f04:	movw	r0, #0
   16f08:	str	r0, [fp, #-8]
   16f0c:	ldr	r0, [fp, #-8]
   16f10:	ldr	r1, [fp, #-4]
   16f14:	ldr	r1, [r1, #8]
   16f18:	cmp	r0, r1
   16f1c:	bcs	16fd0 <__assert_fail@plt+0x5acc>
   16f20:	ldr	r0, [fp, #-4]
   16f24:	ldr	r0, [r0, #24]
   16f28:	movw	r1, #0
   16f2c:	cmp	r0, r1
   16f30:	beq	16f54 <__assert_fail@plt+0x5a50>
   16f34:	ldr	r0, [fp, #-4]
   16f38:	ldr	r0, [r0, #24]
   16f3c:	ldr	r1, [fp, #-8]
   16f40:	movw	r2, #12
   16f44:	mul	r1, r1, r2
   16f48:	add	r0, r0, r1
   16f4c:	ldr	r0, [r0, #8]
   16f50:	bl	35268 <__assert_fail@plt+0x23d64>
   16f54:	ldr	r0, [fp, #-4]
   16f58:	ldr	r0, [r0, #28]
   16f5c:	movw	r1, #0
   16f60:	cmp	r0, r1
   16f64:	beq	16f88 <__assert_fail@plt+0x5a84>
   16f68:	ldr	r0, [fp, #-4]
   16f6c:	ldr	r0, [r0, #28]
   16f70:	ldr	r1, [fp, #-8]
   16f74:	movw	r2, #12
   16f78:	mul	r1, r1, r2
   16f7c:	add	r0, r0, r1
   16f80:	ldr	r0, [r0, #8]
   16f84:	bl	35268 <__assert_fail@plt+0x23d64>
   16f88:	ldr	r0, [fp, #-4]
   16f8c:	ldr	r0, [r0, #20]
   16f90:	movw	r1, #0
   16f94:	cmp	r0, r1
   16f98:	beq	16fbc <__assert_fail@plt+0x5ab8>
   16f9c:	ldr	r0, [fp, #-4]
   16fa0:	ldr	r0, [r0, #20]
   16fa4:	ldr	r1, [fp, #-8]
   16fa8:	movw	r2, #12
   16fac:	mul	r1, r1, r2
   16fb0:	add	r0, r0, r1
   16fb4:	ldr	r0, [r0, #8]
   16fb8:	bl	35268 <__assert_fail@plt+0x23d64>
   16fbc:	b	16fc0 <__assert_fail@plt+0x5abc>
   16fc0:	ldr	r0, [fp, #-8]
   16fc4:	add	r0, r0, #1
   16fc8:	str	r0, [fp, #-8]
   16fcc:	b	16f0c <__assert_fail@plt+0x5a08>
   16fd0:	ldr	r0, [fp, #-4]
   16fd4:	ldr	r0, [r0, #20]
   16fd8:	bl	35268 <__assert_fail@plt+0x23d64>
   16fdc:	ldr	r0, [fp, #-4]
   16fe0:	ldr	r0, [r0, #24]
   16fe4:	bl	35268 <__assert_fail@plt+0x23d64>
   16fe8:	ldr	r0, [fp, #-4]
   16fec:	ldr	r0, [r0, #28]
   16ff0:	bl	35268 <__assert_fail@plt+0x23d64>
   16ff4:	ldr	r0, [fp, #-4]
   16ff8:	ldr	r0, [r0]
   16ffc:	bl	35268 <__assert_fail@plt+0x23d64>
   17000:	ldr	r0, [fp, #-4]
   17004:	ldr	r0, [r0, #32]
   17008:	movw	lr, #0
   1700c:	cmp	r0, lr
   17010:	beq	170b8 <__assert_fail@plt+0x5bb4>
   17014:	movw	r0, #0
   17018:	str	r0, [fp, #-8]
   1701c:	ldr	r0, [fp, #-8]
   17020:	ldr	r1, [fp, #-4]
   17024:	ldr	r1, [r1, #68]	; 0x44
   17028:	cmp	r0, r1
   1702c:	bhi	170b4 <__assert_fail@plt+0x5bb0>
   17030:	ldr	r0, [fp, #-4]
   17034:	ldr	r0, [r0, #32]
   17038:	ldr	r1, [fp, #-8]
   1703c:	movw	r2, #12
   17040:	mul	r1, r1, r2
   17044:	add	r0, r0, r1
   17048:	str	r0, [sp, #8]
   1704c:	movw	r0, #0
   17050:	str	r0, [sp, #12]
   17054:	ldr	r0, [sp, #12]
   17058:	ldr	r1, [sp, #8]
   1705c:	ldr	r1, [r1]
   17060:	cmp	r0, r1
   17064:	bge	17098 <__assert_fail@plt+0x5b94>
   17068:	ldr	r0, [sp, #8]
   1706c:	ldr	r0, [r0, #8]
   17070:	ldr	r1, [sp, #12]
   17074:	add	r0, r0, r1, lsl #2
   17078:	ldr	r0, [r0]
   1707c:	str	r0, [sp, #4]
   17080:	ldr	r0, [sp, #4]
   17084:	bl	18ba0 <__assert_fail@plt+0x769c>
   17088:	ldr	r0, [sp, #12]
   1708c:	add	r0, r0, #1
   17090:	str	r0, [sp, #12]
   17094:	b	17054 <__assert_fail@plt+0x5b50>
   17098:	ldr	r0, [sp, #8]
   1709c:	ldr	r0, [r0, #8]
   170a0:	bl	35268 <__assert_fail@plt+0x23d64>
   170a4:	ldr	r0, [fp, #-8]
   170a8:	add	r0, r0, #1
   170ac:	str	r0, [fp, #-8]
   170b0:	b	1701c <__assert_fail@plt+0x5b18>
   170b4:	b	170b8 <__assert_fail@plt+0x5bb4>
   170b8:	ldr	r0, [fp, #-4]
   170bc:	ldr	r0, [r0, #32]
   170c0:	bl	35268 <__assert_fail@plt+0x23d64>
   170c4:	ldr	r0, [fp, #-4]
   170c8:	ldr	r0, [r0, #60]	; 0x3c
   170cc:	movw	lr, #33544	; 0x8308
   170d0:	movt	lr, #3
   170d4:	cmp	r0, lr
   170d8:	beq	170e8 <__assert_fail@plt+0x5be4>
   170dc:	ldr	r0, [fp, #-4]
   170e0:	ldr	r0, [r0, #60]	; 0x3c
   170e4:	bl	35268 <__assert_fail@plt+0x23d64>
   170e8:	ldr	r0, [fp, #-4]
   170ec:	ldr	r0, [r0, #132]	; 0x84
   170f0:	bl	35268 <__assert_fail@plt+0x23d64>
   170f4:	ldr	r0, [fp, #-4]
   170f8:	bl	35268 <__assert_fail@plt+0x23d64>
   170fc:	mov	sp, fp
   17100:	pop	{fp, pc}
   17104:	push	{r4, r5, r6, sl, fp, lr}
   17108:	add	fp, sp, #16
   1710c:	sub	sp, sp, #72	; 0x48
   17110:	ldr	ip, [fp, #8]
   17114:	str	r0, [fp, #-24]	; 0xffffffe8
   17118:	str	r1, [fp, #-28]	; 0xffffffe4
   1711c:	str	r2, [fp, #-32]	; 0xffffffe0
   17120:	str	r3, [fp, #-36]	; 0xffffffdc
   17124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17128:	ldr	r0, [r0]
   1712c:	str	r0, [sp, #36]	; 0x24
   17130:	ldr	r0, [fp, #8]
   17134:	mvn	r1, #7
   17138:	and	r0, r0, r1
   1713c:	cmp	r0, #0
   17140:	str	ip, [sp, #32]
   17144:	beq	17154 <__assert_fail@plt+0x5c50>
   17148:	movw	r0, #2
   1714c:	str	r0, [fp, #-20]	; 0xffffffec
   17150:	b	172c4 <__assert_fail@plt+0x5dc0>
   17154:	ldr	r0, [fp, #8]
   17158:	and	r0, r0, #4
   1715c:	cmp	r0, #0
   17160:	beq	17180 <__assert_fail@plt+0x5c7c>
   17164:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17168:	ldr	r0, [r0]
   1716c:	str	r0, [sp, #44]	; 0x2c
   17170:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17174:	ldr	r0, [r0, #4]
   17178:	str	r0, [sp, #40]	; 0x28
   1717c:	b	17194 <__assert_fail@plt+0x5c90>
   17180:	movw	r0, #0
   17184:	str	r0, [sp, #44]	; 0x2c
   17188:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1718c:	bl	113d8 <strlen@plt>
   17190:	str	r0, [sp, #40]	; 0x28
   17194:	movw	r0, #0
   17198:	movt	r0, #0
   1719c:	cmp	r0, #0
   171a0:	bne	171bc <__assert_fail@plt+0x5cb8>
   171a4:	b	171a8 <__assert_fail@plt+0x5ca4>
   171a8:	movw	r0, #0
   171ac:	movt	r0, #0
   171b0:	cmp	r0, #0
   171b4:	beq	171d0 <__assert_fail@plt+0x5ccc>
   171b8:	b	171bc <__assert_fail@plt+0x5cb8>
   171bc:	ldr	r0, [sp, #36]	; 0x24
   171c0:	add	r0, r0, #136	; 0x88
   171c4:	bl	11288 <pthread_mutex_lock@plt>
   171c8:	str	r0, [sp, #28]
   171cc:	b	171d4 <__assert_fail@plt+0x5cd0>
   171d0:	b	171d4 <__assert_fail@plt+0x5cd0>
   171d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d8:	ldrb	r0, [r0, #28]
   171dc:	ubfx	r0, r0, #4, #1
   171e0:	and	r0, r0, #255	; 0xff
   171e4:	cmp	r0, #0
   171e8:	beq	1722c <__assert_fail@plt+0x5d28>
   171ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   171f4:	ldr	r2, [sp, #40]	; 0x28
   171f8:	ldr	r3, [sp, #44]	; 0x2c
   171fc:	ldr	ip, [sp, #40]	; 0x28
   17200:	ldr	lr, [sp, #40]	; 0x28
   17204:	ldr	r4, [fp, #8]
   17208:	str	ip, [sp]
   1720c:	str	lr, [sp, #4]
   17210:	movw	ip, #0
   17214:	str	ip, [sp, #8]
   17218:	str	ip, [sp, #12]
   1721c:	str	r4, [sp, #16]
   17220:	bl	172d0 <__assert_fail@plt+0x5dcc>
   17224:	str	r0, [fp, #-40]	; 0xffffffd8
   17228:	b	1726c <__assert_fail@plt+0x5d68>
   1722c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17234:	ldr	r2, [sp, #40]	; 0x28
   17238:	ldr	r3, [sp, #44]	; 0x2c
   1723c:	ldr	ip, [sp, #40]	; 0x28
   17240:	ldr	lr, [sp, #40]	; 0x28
   17244:	ldr	r4, [fp, #-32]	; 0xffffffe0
   17248:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1724c:	ldr	r6, [fp, #8]
   17250:	str	ip, [sp]
   17254:	str	lr, [sp, #4]
   17258:	str	r4, [sp, #8]
   1725c:	str	r5, [sp, #12]
   17260:	str	r6, [sp, #16]
   17264:	bl	172d0 <__assert_fail@plt+0x5dcc>
   17268:	str	r0, [fp, #-40]	; 0xffffffd8
   1726c:	movw	r0, #0
   17270:	movt	r0, #0
   17274:	cmp	r0, #0
   17278:	bne	17294 <__assert_fail@plt+0x5d90>
   1727c:	b	17280 <__assert_fail@plt+0x5d7c>
   17280:	movw	r0, #0
   17284:	movt	r0, #0
   17288:	cmp	r0, #0
   1728c:	beq	172a8 <__assert_fail@plt+0x5da4>
   17290:	b	17294 <__assert_fail@plt+0x5d90>
   17294:	ldr	r0, [sp, #36]	; 0x24
   17298:	add	r0, r0, #136	; 0x88
   1729c:	bl	111e0 <pthread_mutex_unlock@plt>
   172a0:	str	r0, [sp, #24]
   172a4:	b	172ac <__assert_fail@plt+0x5da8>
   172a8:	b	172ac <__assert_fail@plt+0x5da8>
   172ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172b0:	cmp	r0, #0
   172b4:	movw	r0, #0
   172b8:	movne	r0, #1
   172bc:	and	r0, r0, #1
   172c0:	str	r0, [fp, #-20]	; 0xffffffec
   172c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   172c8:	sub	sp, fp, #16
   172cc:	pop	{r4, r5, r6, sl, fp, pc}
   172d0:	push	{r4, r5, r6, sl, fp, lr}
   172d4:	add	fp, sp, #16
   172d8:	sub	sp, sp, #384	; 0x180
   172dc:	ldr	ip, [fp, #24]
   172e0:	ldr	lr, [fp, #20]
   172e4:	ldr	r4, [fp, #16]
   172e8:	ldr	r5, [fp, #12]
   172ec:	ldr	r6, [fp, #8]
   172f0:	str	r0, [fp, #-24]	; 0xffffffe8
   172f4:	str	r1, [fp, #-28]	; 0xffffffe4
   172f8:	str	r2, [fp, #-32]	; 0xffffffe0
   172fc:	str	r3, [fp, #-36]	; 0xffffffdc
   17300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17304:	ldr	r0, [r0]
   17308:	str	r0, [fp, #-44]	; 0xffffffd4
   1730c:	mvn	r0, #0
   17310:	str	r0, [fp, #-72]	; 0xffffffb8
   17314:	add	r0, sp, #180	; 0xb4
   17318:	mov	r1, #0
   1731c:	mov	r2, #136	; 0x88
   17320:	str	r6, [sp, #156]	; 0x9c
   17324:	str	lr, [sp, #152]	; 0x98
   17328:	str	r4, [sp, #148]	; 0x94
   1732c:	str	r5, [sp, #144]	; 0x90
   17330:	str	ip, [sp, #140]	; 0x8c
   17334:	bl	11420 <memset@plt>
   17338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1733c:	str	r1, [sp, #264]	; 0x108
   17340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17344:	ldr	r1, [r1, #16]
   17348:	movw	r2, #0
   1734c:	cmp	r1, r2
   17350:	str	r0, [sp, #136]	; 0x88
   17354:	beq	173a8 <__assert_fail@plt+0x5ea4>
   17358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1735c:	ldrb	r0, [r0, #28]
   17360:	ubfx	r0, r0, #3, #1
   17364:	and	r0, r0, #255	; 0xff
   17368:	cmp	r0, #0
   1736c:	beq	173a8 <__assert_fail@plt+0x5ea4>
   17370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17374:	ldr	r1, [fp, #8]
   17378:	cmp	r0, r1
   1737c:	beq	173a8 <__assert_fail@plt+0x5ea4>
   17380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17384:	ldrb	r0, [r0, #28]
   17388:	and	r0, r0, #1
   1738c:	and	r0, r0, #255	; 0xff
   17390:	cmp	r0, #0
   17394:	bne	173a8 <__assert_fail@plt+0x5ea4>
   17398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1739c:	ldr	r0, [r0, #16]
   173a0:	str	r0, [sp, #132]	; 0x84
   173a4:	b	173b4 <__assert_fail@plt+0x5eb0>
   173a8:	movw	r0, #0
   173ac:	str	r0, [sp, #132]	; 0x84
   173b0:	b	173b4 <__assert_fail@plt+0x5eb0>
   173b4:	ldr	r0, [sp, #132]	; 0x84
   173b8:	str	r0, [sp, #176]	; 0xb0
   173bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c0:	ldr	r0, [r0, #20]
   173c4:	str	r0, [sp, #172]	; 0xac
   173c8:	ldr	r0, [fp, #16]
   173cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173d0:	ldr	r1, [r1, #24]
   173d4:	cmp	r0, r1
   173d8:	bls	173f8 <__assert_fail@plt+0x5ef4>
   173dc:	ldr	r0, [fp, #16]
   173e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173e4:	ldr	r1, [r1, #24]
   173e8:	add	r1, r1, #1
   173ec:	sub	r0, r0, r1
   173f0:	str	r0, [sp, #128]	; 0x80
   173f4:	b	17404 <__assert_fail@plt+0x5f00>
   173f8:	movw	r0, #0
   173fc:	str	r0, [sp, #128]	; 0x80
   17400:	b	17404 <__assert_fail@plt+0x5f00>
   17404:	ldr	r0, [sp, #128]	; 0x80
   17408:	str	r0, [fp, #-76]	; 0xffffffb4
   1740c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17410:	ldr	r1, [fp, #16]
   17414:	sub	r0, r1, r0
   17418:	str	r0, [fp, #16]
   1741c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17420:	ldr	r0, [r0, #8]
   17424:	cmp	r0, #0
   17428:	movw	r0, #1
   1742c:	str	r0, [sp, #124]	; 0x7c
   17430:	beq	174a4 <__assert_fail@plt+0x5fa0>
   17434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17438:	ldr	r0, [r0, #36]	; 0x24
   1743c:	movw	r1, #0
   17440:	cmp	r0, r1
   17444:	movw	r0, #1
   17448:	str	r0, [sp, #124]	; 0x7c
   1744c:	beq	174a4 <__assert_fail@plt+0x5fa0>
   17450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17454:	ldr	r0, [r0, #40]	; 0x28
   17458:	movw	r1, #0
   1745c:	cmp	r0, r1
   17460:	movw	r0, #1
   17464:	str	r0, [sp, #124]	; 0x7c
   17468:	beq	174a4 <__assert_fail@plt+0x5fa0>
   1746c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17470:	ldr	r0, [r0, #44]	; 0x2c
   17474:	movw	r1, #0
   17478:	cmp	r0, r1
   1747c:	movw	r0, #1
   17480:	str	r0, [sp, #124]	; 0x7c
   17484:	beq	174a4 <__assert_fail@plt+0x5fa0>
   17488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1748c:	ldr	r0, [r0, #48]	; 0x30
   17490:	movw	r1, #0
   17494:	cmp	r0, r1
   17498:	movw	r0, #0
   1749c:	moveq	r0, #1
   174a0:	str	r0, [sp, #124]	; 0x7c
   174a4:	ldr	r0, [sp, #124]	; 0x7c
   174a8:	tst	r0, #1
   174ac:	beq	174bc <__assert_fail@plt+0x5fb8>
   174b0:	movw	r0, #1
   174b4:	str	r0, [fp, #-20]	; 0xffffffec
   174b8:	b	181d8 <__assert_fail@plt+0x6cd4>
   174bc:	ldr	r0, [fp, #8]
   174c0:	movw	r1, #0
   174c4:	cmp	r1, r0
   174c8:	bgt	174e0 <__assert_fail@plt+0x5fdc>
   174cc:	ldr	r0, [fp, #8]
   174d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   174d4:	cmp	r0, r1
   174d8:	bgt	174e0 <__assert_fail@plt+0x5fdc>
   174dc:	b	174e0 <__assert_fail@plt+0x5fdc>
   174e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174e4:	ldr	r0, [r0, #36]	; 0x24
   174e8:	ldr	r0, [r0, #8]
   174ec:	cmp	r0, #0
   174f0:	bne	17564 <__assert_fail@plt+0x6060>
   174f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174f8:	ldr	r0, [r0, #40]	; 0x28
   174fc:	ldr	r0, [r0, #8]
   17500:	cmp	r0, #0
   17504:	bne	17564 <__assert_fail@plt+0x6060>
   17508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1750c:	ldr	r0, [r0, #44]	; 0x2c
   17510:	ldr	r0, [r0, #8]
   17514:	cmp	r0, #0
   17518:	beq	17534 <__assert_fail@plt+0x6030>
   1751c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17520:	ldrb	r0, [r0, #28]
   17524:	lsr	r0, r0, #7
   17528:	and	r0, r0, #255	; 0xff
   1752c:	cmp	r0, #0
   17530:	bne	17564 <__assert_fail@plt+0x6060>
   17534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17538:	cmp	r0, #0
   1753c:	beq	17558 <__assert_fail@plt+0x6054>
   17540:	ldr	r0, [fp, #8]
   17544:	cmp	r0, #0
   17548:	beq	17558 <__assert_fail@plt+0x6054>
   1754c:	movw	r0, #1
   17550:	str	r0, [fp, #-20]	; 0xffffffec
   17554:	b	181d8 <__assert_fail@plt+0x6cd4>
   17558:	movw	r0, #0
   1755c:	str	r0, [fp, #8]
   17560:	str	r0, [fp, #-36]	; 0xffffffdc
   17564:	ldr	r0, [fp, #16]
   17568:	cmp	r0, #0
   1756c:	movw	r0, #1
   17570:	str	r0, [sp, #120]	; 0x78
   17574:	bne	17590 <__assert_fail@plt+0x608c>
   17578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1757c:	ldr	r0, [r0, #76]	; 0x4c
   17580:	cmp	r0, #0
   17584:	movw	r0, #0
   17588:	movne	r0, #1
   1758c:	str	r0, [sp, #120]	; 0x78
   17590:	ldr	r0, [sp, #120]	; 0x78
   17594:	add	r1, sp, #180	; 0xb4
   17598:	and	r0, r0, #1
   1759c:	strb	r0, [fp, #-57]	; 0xffffffc7
   175a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   175a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   175a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   175ac:	ldr	r3, [r3, #8]
   175b0:	add	r3, r3, #1
   175b4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   175b8:	ldr	ip, [ip, #20]
   175bc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   175c0:	ldr	lr, [lr, #12]
   175c4:	and	lr, lr, #4194304	; 0x400000
   175c8:	cmp	lr, #0
   175cc:	movw	lr, #0
   175d0:	movne	lr, #1
   175d4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   175d8:	str	r0, [sp, #116]	; 0x74
   175dc:	mov	r0, r1
   175e0:	ldr	r1, [sp, #116]	; 0x74
   175e4:	str	ip, [sp]
   175e8:	and	ip, lr, #1
   175ec:	str	ip, [sp, #4]
   175f0:	str	r4, [sp, #8]
   175f4:	bl	23df4 <__assert_fail@plt+0x128f0>
   175f8:	str	r0, [fp, #-40]	; 0xffffffd8
   175fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17600:	cmp	r0, #0
   17604:	beq	1760c <__assert_fail@plt+0x6108>
   17608:	b	181a8 <__assert_fail@plt+0x6ca4>
   1760c:	ldr	r0, [fp, #12]
   17610:	str	r0, [sp, #236]	; 0xec
   17614:	ldr	r0, [fp, #12]
   17618:	str	r0, [sp, #232]	; 0xe8
   1761c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17620:	ldrb	r0, [r0, #28]
   17624:	lsr	r0, r0, #7
   17628:	strb	r0, [sp, #257]	; 0x101
   1762c:	ldr	r1, [fp, #24]
   17630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17634:	ldr	r0, [r0, #76]	; 0x4c
   17638:	lsl	r2, r0, #1
   1763c:	add	r0, sp, #180	; 0xb4
   17640:	bl	23f90 <__assert_fail@plt+0x12a8c>
   17644:	str	r0, [fp, #-40]	; 0xffffffd8
   17648:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1764c:	cmp	r0, #0
   17650:	beq	17658 <__assert_fail@plt+0x6154>
   17654:	b	181a8 <__assert_fail@plt+0x6ca4>
   17658:	ldr	r0, [fp, #16]
   1765c:	cmp	r0, #1
   17660:	bhi	1767c <__assert_fail@plt+0x6178>
   17664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17668:	ldrb	r0, [r0, #88]	; 0x58
   1766c:	ubfx	r0, r0, #1, #1
   17670:	and	r0, r0, #255	; 0xff
   17674:	cmp	r0, #0
   17678:	beq	176cc <__assert_fail@plt+0x61c8>
   1767c:	ldr	r0, [pc, #2912]	; 181e4 <__assert_fail@plt+0x6ce0>
   17680:	ldr	r1, [sp, #216]	; 0xd8
   17684:	cmp	r0, r1
   17688:	bhi	17698 <__assert_fail@plt+0x6194>
   1768c:	movw	r0, #12
   17690:	str	r0, [fp, #-40]	; 0xffffffd8
   17694:	b	181a8 <__assert_fail@plt+0x6ca4>
   17698:	ldr	r0, [sp, #216]	; 0xd8
   1769c:	add	r0, r0, #1
   176a0:	lsl	r0, r0, #2
   176a4:	bl	33b44 <__assert_fail@plt+0x22640>
   176a8:	str	r0, [sp, #280]	; 0x118
   176ac:	ldr	r0, [sp, #280]	; 0x118
   176b0:	movw	lr, #0
   176b4:	cmp	r0, lr
   176b8:	bne	176c8 <__assert_fail@plt+0x61c4>
   176bc:	movw	r0, #12
   176c0:	str	r0, [fp, #-40]	; 0xffffffd8
   176c4:	b	181a8 <__assert_fail@plt+0x6ca4>
   176c8:	b	176cc <__assert_fail@plt+0x61c8>
   176cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176d0:	str	r0, [fp, #-68]	; 0xffffffbc
   176d4:	ldr	r0, [fp, #24]
   176d8:	and	r0, r0, #1
   176dc:	cmp	r0, #0
   176e0:	movw	r0, #0
   176e4:	movne	r0, #1
   176e8:	tst	r0, #1
   176ec:	movw	r0, #4
   176f0:	moveq	r0, #6
   176f4:	str	r0, [sp, #240]	; 0xf0
   176f8:	ldr	r0, [fp, #8]
   176fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17700:	cmp	r0, r1
   17704:	movw	r0, #0
   17708:	movlt	r0, #1
   1770c:	tst	r0, #1
   17710:	mvn	r0, #0
   17714:	moveq	r0, #1
   17718:	str	r0, [fp, #-56]	; 0xffffffc8
   1771c:	ldr	r0, [fp, #8]
   17720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17724:	cmp	r0, r1
   17728:	bge	17738 <__assert_fail@plt+0x6234>
   1772c:	ldr	r0, [fp, #8]
   17730:	str	r0, [sp, #112]	; 0x70
   17734:	b	17740 <__assert_fail@plt+0x623c>
   17738:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1773c:	str	r0, [sp, #112]	; 0x70
   17740:	ldr	r0, [sp, #112]	; 0x70
   17744:	str	r0, [fp, #-48]	; 0xffffffd0
   17748:	ldr	r0, [fp, #8]
   1774c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17750:	cmp	r0, r1
   17754:	bge	17764 <__assert_fail@plt+0x6260>
   17758:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1775c:	str	r0, [sp, #108]	; 0x6c
   17760:	b	1776c <__assert_fail@plt+0x6268>
   17764:	ldr	r0, [fp, #8]
   17768:	str	r0, [sp, #108]	; 0x6c
   1776c:	ldr	r0, [sp, #108]	; 0x6c
   17770:	str	r0, [fp, #-52]	; 0xffffffcc
   17774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17778:	ldr	r0, [r0, #92]	; 0x5c
   1777c:	cmp	r0, #1
   17780:	movw	r0, #0
   17784:	moveq	r0, #1
   17788:	and	r0, r0, #1
   1778c:	strb	r0, [fp, #-77]	; 0xffffffb3
   17790:	ldr	r0, [sp, #176]	; 0xb0
   17794:	movw	r1, #0
   17798:	cmp	r0, r1
   1779c:	beq	17858 <__assert_fail@plt+0x6354>
   177a0:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   177a4:	tst	r0, #1
   177a8:	movw	r0, #1
   177ac:	str	r0, [sp, #104]	; 0x68
   177b0:	bne	177f8 <__assert_fail@plt+0x62f4>
   177b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177b8:	ldr	r0, [r0, #12]
   177bc:	and	r0, r0, #4194304	; 0x400000
   177c0:	cmp	r0, #0
   177c4:	movw	r0, #1
   177c8:	str	r0, [sp, #100]	; 0x64
   177cc:	bne	177e8 <__assert_fail@plt+0x62e4>
   177d0:	ldr	r0, [sp, #172]	; 0xac
   177d4:	movw	r1, #0
   177d8:	cmp	r0, r1
   177dc:	movw	r0, #0
   177e0:	movne	r0, #1
   177e4:	str	r0, [sp, #100]	; 0x64
   177e8:	ldr	r0, [sp, #100]	; 0x64
   177ec:	mvn	r1, #0
   177f0:	eor	r0, r0, r1
   177f4:	str	r0, [sp, #104]	; 0x68
   177f8:	ldr	r0, [sp, #104]	; 0x68
   177fc:	tst	r0, #1
   17800:	movw	r0, #4
   17804:	moveq	r0, #0
   17808:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1780c:	ldr	r2, [fp, #8]
   17810:	cmp	r1, r2
   17814:	movw	r1, #0
   17818:	movle	r1, #1
   1781c:	tst	r1, #1
   17820:	movw	r1, #2
   17824:	moveq	r1, #0
   17828:	orr	r0, r0, r1
   1782c:	ldr	r1, [sp, #172]	; 0xac
   17830:	movw	r2, #0
   17834:	cmp	r1, r2
   17838:	movw	r1, #0
   1783c:	movne	r1, #1
   17840:	tst	r1, #1
   17844:	movw	r1, #1
   17848:	moveq	r1, #0
   1784c:	orr	r0, r0, r1
   17850:	str	r0, [sp, #96]	; 0x60
   17854:	b	17864 <__assert_fail@plt+0x6360>
   17858:	movw	r0, #8
   1785c:	str	r0, [sp, #96]	; 0x60
   17860:	b	17864 <__assert_fail@plt+0x6360>
   17864:	ldr	r0, [sp, #96]	; 0x60
   17868:	str	r0, [fp, #-64]	; 0xffffffc0
   1786c:	movw	r0, #1
   17870:	str	r0, [fp, #-40]	; 0xffffffd8
   17874:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17878:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1787c:	cmp	r0, r1
   17880:	blt	17894 <__assert_fail@plt+0x6390>
   17884:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17888:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1788c:	cmp	r0, r1
   17890:	bge	17898 <__assert_fail@plt+0x6394>
   17894:	b	181a8 <__assert_fail@plt+0x6ca4>
   17898:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1789c:	sub	r0, r0, #4
   178a0:	cmp	r0, #4
   178a4:	str	r0, [sp, #92]	; 0x5c
   178a8:	bhi	17b30 <__assert_fail@plt+0x662c>
   178ac:	add	r0, pc, #8
   178b0:	ldr	r1, [sp, #92]	; 0x5c
   178b4:	ldr	r0, [r0, r1, lsl #2]
   178b8:	mov	pc, r0
   178bc:	andeq	r7, r1, r4, ror #20
   178c0:	andeq	r7, r1, r4, ror #20
   178c4:	andeq	r7, r1, r0, asr r9
   178c8:	ldrdeq	r7, [r1], -r4
   178cc:	ldrdeq	r7, [r1], -r0
   178d0:	b	17c24 <__assert_fail@plt+0x6720>
   178d4:	b	178d8 <__assert_fail@plt+0x63d4>
   178d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   178dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   178e0:	cmp	r0, r1
   178e4:	movw	r0, #0
   178e8:	str	r0, [sp, #88]	; 0x58
   178ec:	bge	17930 <__assert_fail@plt+0x642c>
   178f0:	ldr	r0, [sp, #176]	; 0xb0
   178f4:	ldr	r1, [sp, #172]	; 0xac
   178f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   178fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17900:	add	r2, r2, r3
   17904:	ldrb	r2, [r2]
   17908:	add	r1, r1, r2
   1790c:	ldrb	r1, [r1]
   17910:	add	r0, r0, r1
   17914:	ldrsb	r0, [r0]
   17918:	cmp	r0, #0
   1791c:	movw	r0, #0
   17920:	movne	r0, #1
   17924:	mvn	r1, #0
   17928:	eor	r0, r0, r1
   1792c:	str	r0, [sp, #88]	; 0x58
   17930:	ldr	r0, [sp, #88]	; 0x58
   17934:	tst	r0, #1
   17938:	beq	1794c <__assert_fail@plt+0x6448>
   1793c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17940:	add	r0, r0, #1
   17944:	str	r0, [fp, #-68]	; 0xffffffbc
   17948:	b	178d8 <__assert_fail@plt+0x63d4>
   1794c:	b	179c0 <__assert_fail@plt+0x64bc>
   17950:	b	17954 <__assert_fail@plt+0x6450>
   17954:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17958:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1795c:	cmp	r0, r1
   17960:	movw	r0, #0
   17964:	str	r0, [sp, #84]	; 0x54
   17968:	bge	179a0 <__assert_fail@plt+0x649c>
   1796c:	ldr	r0, [sp, #176]	; 0xb0
   17970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17974:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17978:	add	r1, r1, r2
   1797c:	ldrb	r1, [r1]
   17980:	add	r0, r0, r1
   17984:	ldrsb	r0, [r0]
   17988:	cmp	r0, #0
   1798c:	movw	r0, #0
   17990:	movne	r0, #1
   17994:	mvn	r1, #0
   17998:	eor	r0, r0, r1
   1799c:	str	r0, [sp, #84]	; 0x54
   179a0:	ldr	r0, [sp, #84]	; 0x54
   179a4:	tst	r0, #1
   179a8:	beq	179bc <__assert_fail@plt+0x64b8>
   179ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   179b0:	add	r0, r0, #1
   179b4:	str	r0, [fp, #-68]	; 0xffffffbc
   179b8:	b	17954 <__assert_fail@plt+0x6450>
   179bc:	b	179c0 <__assert_fail@plt+0x64bc>
   179c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   179c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   179c8:	cmp	r0, r1
   179cc:	bne	17a60 <__assert_fail@plt+0x655c>
   179d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   179d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   179d8:	cmp	r0, r1
   179dc:	blt	179ec <__assert_fail@plt+0x64e8>
   179e0:	movw	r0, #0
   179e4:	str	r0, [sp, #80]	; 0x50
   179e8:	b	17a00 <__assert_fail@plt+0x64fc>
   179ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   179f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   179f4:	add	r0, r0, r1
   179f8:	ldrb	r0, [r0]
   179fc:	str	r0, [sp, #80]	; 0x50
   17a00:	ldr	r0, [sp, #80]	; 0x50
   17a04:	str	r0, [fp, #-84]	; 0xffffffac
   17a08:	ldr	r0, [sp, #176]	; 0xb0
   17a0c:	ldr	r1, [sp, #172]	; 0xac
   17a10:	movw	r2, #0
   17a14:	cmp	r1, r2
   17a18:	str	r0, [sp, #76]	; 0x4c
   17a1c:	beq	17a38 <__assert_fail@plt+0x6534>
   17a20:	ldr	r0, [sp, #172]	; 0xac
   17a24:	ldr	r1, [fp, #-84]	; 0xffffffac
   17a28:	add	r0, r0, r1
   17a2c:	ldrb	r0, [r0]
   17a30:	str	r0, [sp, #72]	; 0x48
   17a34:	b	17a40 <__assert_fail@plt+0x653c>
   17a38:	ldr	r0, [fp, #-84]	; 0xffffffac
   17a3c:	str	r0, [sp, #72]	; 0x48
   17a40:	ldr	r0, [sp, #72]	; 0x48
   17a44:	ldr	r1, [sp, #76]	; 0x4c
   17a48:	add	r0, r1, r0
   17a4c:	ldrsb	r0, [r0]
   17a50:	cmp	r0, #0
   17a54:	bne	17a5c <__assert_fail@plt+0x6558>
   17a58:	b	181a8 <__assert_fail@plt+0x6ca4>
   17a5c:	b	17a60 <__assert_fail@plt+0x655c>
   17a60:	b	17c24 <__assert_fail@plt+0x6720>
   17a64:	b	17a68 <__assert_fail@plt+0x6564>
   17a68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17a6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17a70:	cmp	r0, r1
   17a74:	blt	17b18 <__assert_fail@plt+0x6614>
   17a78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17a7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17a80:	cmp	r0, r1
   17a84:	blt	17a94 <__assert_fail@plt+0x6590>
   17a88:	movw	r0, #0
   17a8c:	str	r0, [sp, #68]	; 0x44
   17a90:	b	17aa8 <__assert_fail@plt+0x65a4>
   17a94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a98:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17a9c:	add	r0, r0, r1
   17aa0:	ldrb	r0, [r0]
   17aa4:	str	r0, [sp, #68]	; 0x44
   17aa8:	ldr	r0, [sp, #68]	; 0x44
   17aac:	str	r0, [fp, #-84]	; 0xffffffac
   17ab0:	ldr	r0, [sp, #176]	; 0xb0
   17ab4:	ldr	r1, [sp, #172]	; 0xac
   17ab8:	movw	r2, #0
   17abc:	cmp	r1, r2
   17ac0:	str	r0, [sp, #64]	; 0x40
   17ac4:	beq	17ae0 <__assert_fail@plt+0x65dc>
   17ac8:	ldr	r0, [sp, #172]	; 0xac
   17acc:	ldr	r1, [fp, #-84]	; 0xffffffac
   17ad0:	add	r0, r0, r1
   17ad4:	ldrb	r0, [r0]
   17ad8:	str	r0, [sp, #60]	; 0x3c
   17adc:	b	17ae8 <__assert_fail@plt+0x65e4>
   17ae0:	ldr	r0, [fp, #-84]	; 0xffffffac
   17ae4:	str	r0, [sp, #60]	; 0x3c
   17ae8:	ldr	r0, [sp, #60]	; 0x3c
   17aec:	ldr	r1, [sp, #64]	; 0x40
   17af0:	add	r0, r1, r0
   17af4:	ldrsb	r0, [r0]
   17af8:	cmp	r0, #0
   17afc:	beq	17b04 <__assert_fail@plt+0x6600>
   17b00:	b	17b18 <__assert_fail@plt+0x6614>
   17b04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b08:	mvn	r1, #0
   17b0c:	add	r0, r0, r1
   17b10:	str	r0, [fp, #-68]	; 0xffffffbc
   17b14:	b	17a68 <__assert_fail@plt+0x6564>
   17b18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17b20:	cmp	r0, r1
   17b24:	bge	17b2c <__assert_fail@plt+0x6628>
   17b28:	b	181a8 <__assert_fail@plt+0x6ca4>
   17b2c:	b	17c24 <__assert_fail@plt+0x6720>
   17b30:	b	17b34 <__assert_fail@plt+0x6630>
   17b34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b38:	ldr	r1, [sp, #204]	; 0xcc
   17b3c:	sub	r0, r0, r1
   17b40:	str	r0, [sp, #168]	; 0xa8
   17b44:	ldr	r0, [sp, #168]	; 0xa8
   17b48:	ldr	r1, [sp, #212]	; 0xd4
   17b4c:	cmp	r0, r1
   17b50:	bcc	17b88 <__assert_fail@plt+0x6684>
   17b54:	add	r0, sp, #180	; 0xb4
   17b58:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17b5c:	ldr	r2, [fp, #24]
   17b60:	bl	240e0 <__assert_fail@plt+0x12bdc>
   17b64:	str	r0, [fp, #-40]	; 0xffffffd8
   17b68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b6c:	cmp	r0, #0
   17b70:	beq	17b78 <__assert_fail@plt+0x6674>
   17b74:	b	181a8 <__assert_fail@plt+0x6ca4>
   17b78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b7c:	ldr	r1, [sp, #204]	; 0xcc
   17b80:	sub	r0, r0, r1
   17b84:	str	r0, [sp, #168]	; 0xa8
   17b88:	ldr	r0, [sp, #168]	; 0xa8
   17b8c:	ldr	r1, [sp, #208]	; 0xd0
   17b90:	cmp	r0, r1
   17b94:	bcs	17bb0 <__assert_fail@plt+0x66ac>
   17b98:	ldr	r0, [sp, #184]	; 0xb8
   17b9c:	ldr	r1, [sp, #168]	; 0xa8
   17ba0:	add	r0, r0, r1
   17ba4:	ldrb	r0, [r0]
   17ba8:	str	r0, [sp, #56]	; 0x38
   17bac:	b	17bbc <__assert_fail@plt+0x66b8>
   17bb0:	movw	r0, #0
   17bb4:	str	r0, [sp, #56]	; 0x38
   17bb8:	b	17bbc <__assert_fail@plt+0x66b8>
   17bbc:	ldr	r0, [sp, #56]	; 0x38
   17bc0:	str	r0, [fp, #-84]	; 0xffffffac
   17bc4:	ldr	r0, [sp, #176]	; 0xb0
   17bc8:	ldr	r1, [fp, #-84]	; 0xffffffac
   17bcc:	add	r0, r0, r1
   17bd0:	ldrsb	r0, [r0]
   17bd4:	cmp	r0, #0
   17bd8:	beq	17be0 <__assert_fail@plt+0x66dc>
   17bdc:	b	17c20 <__assert_fail@plt+0x671c>
   17be0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17be4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17be8:	add	r0, r1, r0
   17bec:	str	r0, [fp, #-68]	; 0xffffffbc
   17bf0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17bf8:	cmp	r0, r1
   17bfc:	blt	17c10 <__assert_fail@plt+0x670c>
   17c00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17c04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17c08:	cmp	r0, r1
   17c0c:	ble	17c1c <__assert_fail@plt+0x6718>
   17c10:	movw	r0, #1
   17c14:	str	r0, [fp, #-40]	; 0xffffffd8
   17c18:	b	181a8 <__assert_fail@plt+0x6ca4>
   17c1c:	b	17b34 <__assert_fail@plt+0x6630>
   17c20:	b	17c24 <__assert_fail@plt+0x6720>
   17c24:	add	r0, sp, #180	; 0xb4
   17c28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17c2c:	ldr	r2, [fp, #24]
   17c30:	bl	240e0 <__assert_fail@plt+0x12bdc>
   17c34:	str	r0, [fp, #-40]	; 0xffffffd8
   17c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17c3c:	cmp	r0, #0
   17c40:	beq	17c48 <__assert_fail@plt+0x6744>
   17c44:	b	181a8 <__assert_fail@plt+0x6ca4>
   17c48:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   17c4c:	tst	r0, #1
   17c50:	bne	17c78 <__assert_fail@plt+0x6774>
   17c54:	ldr	r0, [sp, #208]	; 0xd0
   17c58:	movw	r1, #0
   17c5c:	cmp	r1, r0
   17c60:	beq	17c78 <__assert_fail@plt+0x6774>
   17c64:	ldr	r0, [sp, #188]	; 0xbc
   17c68:	ldr	r0, [r0]
   17c6c:	cmn	r0, #1
   17c70:	bne	17c78 <__assert_fail@plt+0x6774>
   17c74:	b	17dfc <__assert_fail@plt+0x68f8>
   17c78:	movw	r0, #0
   17c7c:	str	r0, [sp, #300]	; 0x12c
   17c80:	str	r0, [sp, #288]	; 0x120
   17c84:	str	r0, [sp, #284]	; 0x11c
   17c88:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17c8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c90:	ldr	r2, [fp, #8]
   17c94:	cmp	r1, r2
   17c98:	str	r0, [sp, #52]	; 0x34
   17c9c:	bgt	17cac <__assert_fail@plt+0x67a8>
   17ca0:	sub	r0, fp, #68	; 0x44
   17ca4:	str	r0, [sp, #48]	; 0x30
   17ca8:	b	17cb8 <__assert_fail@plt+0x67b4>
   17cac:	movw	r0, #0
   17cb0:	str	r0, [sp, #48]	; 0x30
   17cb4:	b	17cb8 <__assert_fail@plt+0x67b4>
   17cb8:	ldr	r0, [sp, #48]	; 0x30
   17cbc:	add	r1, sp, #180	; 0xb4
   17cc0:	str	r0, [sp, #44]	; 0x2c
   17cc4:	mov	r0, r1
   17cc8:	ldr	r1, [sp, #52]	; 0x34
   17ccc:	and	r1, r1, #1
   17cd0:	ldr	r2, [sp, #44]	; 0x2c
   17cd4:	bl	24ccc <__assert_fail@plt+0x137c8>
   17cd8:	str	r0, [fp, #-72]	; 0xffffffb8
   17cdc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17ce0:	cmn	r0, #1
   17ce4:	beq	17df4 <__assert_fail@plt+0x68f0>
   17ce8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17cec:	cmn	r0, #2
   17cf0:	bne	17d00 <__assert_fail@plt+0x67fc>
   17cf4:	movw	r0, #12
   17cf8:	str	r0, [fp, #-40]	; 0xffffffd8
   17cfc:	b	181a8 <__assert_fail@plt+0x6ca4>
   17d00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17d04:	str	r0, [sp, #272]	; 0x110
   17d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	ldrb	r0, [r0, #28]
   17d10:	ubfx	r0, r0, #4, #1
   17d14:	and	r0, r0, #255	; 0xff
   17d18:	cmp	r0, #0
   17d1c:	bne	17d2c <__assert_fail@plt+0x6828>
   17d20:	ldr	r0, [fp, #16]
   17d24:	cmp	r0, #1
   17d28:	bhi	17d3c <__assert_fail@plt+0x6838>
   17d2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d30:	ldr	r0, [r0, #76]	; 0x4c
   17d34:	cmp	r0, #0
   17d38:	beq	17d64 <__assert_fail@plt+0x6860>
   17d3c:	ldr	r0, [sp, #280]	; 0x118
   17d40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17d44:	add	r0, r0, r1, lsl #2
   17d48:	ldr	r0, [r0]
   17d4c:	str	r0, [sp, #164]	; 0xa4
   17d50:	ldr	r1, [sp, #164]	; 0xa4
   17d54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17d58:	add	r0, sp, #180	; 0xb4
   17d5c:	bl	25258 <__assert_fail@plt+0x13d54>
   17d60:	str	r0, [sp, #276]	; 0x114
   17d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d68:	ldrb	r0, [r0, #28]
   17d6c:	ubfx	r0, r0, #4, #1
   17d70:	and	r0, r0, #255	; 0xff
   17d74:	cmp	r0, #0
   17d78:	bne	17da0 <__assert_fail@plt+0x689c>
   17d7c:	ldr	r0, [fp, #16]
   17d80:	cmp	r0, #1
   17d84:	bls	17da0 <__assert_fail@plt+0x689c>
   17d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d8c:	ldrb	r0, [r0, #88]	; 0x58
   17d90:	and	r0, r0, #1
   17d94:	and	r0, r0, #255	; 0xff
   17d98:	cmp	r0, #0
   17d9c:	bne	17db0 <__assert_fail@plt+0x68ac>
   17da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17da4:	ldr	r0, [r0, #76]	; 0x4c
   17da8:	cmp	r0, #0
   17dac:	beq	17de8 <__assert_fail@plt+0x68e4>
   17db0:	add	r0, sp, #180	; 0xb4
   17db4:	bl	25330 <__assert_fail@plt+0x13e2c>
   17db8:	str	r0, [fp, #-40]	; 0xffffffd8
   17dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17dc0:	cmp	r0, #0
   17dc4:	bne	17dcc <__assert_fail@plt+0x68c8>
   17dc8:	b	17e10 <__assert_fail@plt+0x690c>
   17dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17dd0:	cmp	r0, #1
   17dd4:	beq	17ddc <__assert_fail@plt+0x68d8>
   17dd8:	b	181a8 <__assert_fail@plt+0x6ca4>
   17ddc:	mvn	r0, #0
   17de0:	str	r0, [fp, #-72]	; 0xffffffb8
   17de4:	b	17dec <__assert_fail@plt+0x68e8>
   17de8:	b	17e10 <__assert_fail@plt+0x690c>
   17dec:	b	17df0 <__assert_fail@plt+0x68ec>
   17df0:	b	17df4 <__assert_fail@plt+0x68f0>
   17df4:	add	r0, sp, #180	; 0xb4
   17df8:	bl	2567c <__assert_fail@plt+0x14178>
   17dfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e00:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17e04:	add	r0, r1, r0
   17e08:	str	r0, [fp, #-68]	; 0xffffffbc
   17e0c:	b	1786c <__assert_fail@plt+0x6368>
   17e10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17e14:	cmn	r0, #1
   17e18:	beq	17e20 <__assert_fail@plt+0x691c>
   17e1c:	b	17e20 <__assert_fail@plt+0x691c>
   17e20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e24:	cmp	r0, #0
   17e28:	bne	17e30 <__assert_fail@plt+0x692c>
   17e2c:	b	17e30 <__assert_fail@plt+0x692c>
   17e30:	ldr	r0, [fp, #16]
   17e34:	cmp	r0, #0
   17e38:	bls	181a4 <__assert_fail@plt+0x6ca0>
   17e3c:	movw	r0, #1
   17e40:	str	r0, [sp, #160]	; 0xa0
   17e44:	ldr	r0, [sp, #160]	; 0xa0
   17e48:	ldr	r1, [fp, #16]
   17e4c:	cmp	r0, r1
   17e50:	bcs	17e8c <__assert_fail@plt+0x6988>
   17e54:	ldr	r0, [fp, #20]
   17e58:	ldr	r1, [sp, #160]	; 0xa0
   17e5c:	add	r0, r0, r1, lsl #3
   17e60:	mvn	r1, #0
   17e64:	str	r1, [r0, #4]
   17e68:	ldr	r0, [fp, #20]
   17e6c:	ldr	r1, [sp, #160]	; 0xa0
   17e70:	add	r0, r0, r1, lsl #3
   17e74:	mvn	r1, #0
   17e78:	str	r1, [r0]
   17e7c:	ldr	r0, [sp, #160]	; 0xa0
   17e80:	add	r0, r0, #1
   17e84:	str	r0, [sp, #160]	; 0xa0
   17e88:	b	17e44 <__assert_fail@plt+0x6940>
   17e8c:	ldr	r0, [fp, #20]
   17e90:	mov	r1, #0
   17e94:	str	r1, [r0]
   17e98:	ldr	r0, [sp, #272]	; 0x110
   17e9c:	ldr	r1, [fp, #20]
   17ea0:	str	r0, [r1, #4]
   17ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ea8:	ldrb	r0, [r0, #28]
   17eac:	ubfx	r0, r0, #4, #1
   17eb0:	and	r0, r0, #255	; 0xff
   17eb4:	cmp	r0, #0
   17eb8:	bne	17f5c <__assert_fail@plt+0x6a58>
   17ebc:	ldr	r0, [fp, #16]
   17ec0:	cmp	r0, #1
   17ec4:	bls	17f5c <__assert_fail@plt+0x6a58>
   17ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ecc:	ldr	r2, [fp, #16]
   17ed0:	ldr	r3, [fp, #20]
   17ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17ed8:	ldrb	r1, [r1, #88]	; 0x58
   17edc:	and	r1, r1, #1
   17ee0:	and	r1, r1, #255	; 0xff
   17ee4:	cmp	r1, #0
   17ee8:	movw	r1, #0
   17eec:	str	r0, [sp, #40]	; 0x28
   17ef0:	str	r2, [sp, #36]	; 0x24
   17ef4:	str	r3, [sp, #32]
   17ef8:	str	r1, [sp, #28]
   17efc:	beq	17f18 <__assert_fail@plt+0x6a14>
   17f00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f04:	ldr	r0, [r0, #76]	; 0x4c
   17f08:	cmp	r0, #0
   17f0c:	movw	r0, #0
   17f10:	movgt	r0, #1
   17f14:	str	r0, [sp, #28]
   17f18:	ldr	r0, [sp, #28]
   17f1c:	ldr	r1, [sp, #40]	; 0x28
   17f20:	str	r0, [sp, #24]
   17f24:	mov	r0, r1
   17f28:	add	r1, sp, #180	; 0xb4
   17f2c:	ldr	r2, [sp, #36]	; 0x24
   17f30:	ldr	r3, [sp, #32]
   17f34:	ldr	ip, [sp, #24]
   17f38:	and	lr, ip, #1
   17f3c:	str	lr, [sp]
   17f40:	bl	25788 <__assert_fail@plt+0x14284>
   17f44:	str	r0, [fp, #-40]	; 0xffffffd8
   17f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f4c:	cmp	r0, #0
   17f50:	beq	17f58 <__assert_fail@plt+0x6a54>
   17f54:	b	181a8 <__assert_fail@plt+0x6ca4>
   17f58:	b	17f5c <__assert_fail@plt+0x6a58>
   17f5c:	movw	r0, #0
   17f60:	str	r0, [sp, #160]	; 0xa0
   17f64:	ldr	r0, [sp, #160]	; 0xa0
   17f68:	ldr	r1, [fp, #16]
   17f6c:	cmp	r0, r1
   17f70:	bcs	18090 <__assert_fail@plt+0x6b8c>
   17f74:	ldr	r0, [fp, #20]
   17f78:	ldr	r1, [sp, #160]	; 0xa0
   17f7c:	add	r0, r0, r1, lsl #3
   17f80:	ldr	r0, [r0]
   17f84:	cmn	r0, #1
   17f88:	beq	1807c <__assert_fail@plt+0x6b78>
   17f8c:	ldrb	r0, [sp, #256]	; 0x100
   17f90:	cmp	r0, #0
   17f94:	beq	18048 <__assert_fail@plt+0x6b44>
   17f98:	ldr	r0, [fp, #20]
   17f9c:	ldr	r1, [sp, #160]	; 0xa0
   17fa0:	add	r0, r0, r1, lsl #3
   17fa4:	ldr	r0, [r0]
   17fa8:	ldr	r1, [sp, #208]	; 0xd0
   17fac:	cmp	r0, r1
   17fb0:	bne	17fc0 <__assert_fail@plt+0x6abc>
   17fb4:	ldr	r0, [sp, #212]	; 0xd4
   17fb8:	str	r0, [sp, #20]
   17fbc:	b	17fdc <__assert_fail@plt+0x6ad8>
   17fc0:	ldr	r0, [sp, #192]	; 0xc0
   17fc4:	ldr	r1, [fp, #20]
   17fc8:	ldr	r2, [sp, #160]	; 0xa0
   17fcc:	ldr	r1, [r1, r2, lsl #3]
   17fd0:	add	r0, r0, r1, lsl #2
   17fd4:	ldr	r0, [r0]
   17fd8:	str	r0, [sp, #20]
   17fdc:	ldr	r0, [sp, #20]
   17fe0:	ldr	r1, [fp, #20]
   17fe4:	ldr	r2, [sp, #160]	; 0xa0
   17fe8:	str	r0, [r1, r2, lsl #3]
   17fec:	ldr	r0, [fp, #20]
   17ff0:	ldr	r1, [sp, #160]	; 0xa0
   17ff4:	add	r0, r0, r1, lsl #3
   17ff8:	ldr	r0, [r0, #4]
   17ffc:	ldr	r1, [sp, #208]	; 0xd0
   18000:	cmp	r0, r1
   18004:	bne	18014 <__assert_fail@plt+0x6b10>
   18008:	ldr	r0, [sp, #212]	; 0xd4
   1800c:	str	r0, [sp, #16]
   18010:	b	18034 <__assert_fail@plt+0x6b30>
   18014:	ldr	r0, [sp, #192]	; 0xc0
   18018:	ldr	r1, [fp, #20]
   1801c:	ldr	r2, [sp, #160]	; 0xa0
   18020:	add	r1, r1, r2, lsl #3
   18024:	ldr	r1, [r1, #4]
   18028:	add	r0, r0, r1, lsl #2
   1802c:	ldr	r0, [r0]
   18030:	str	r0, [sp, #16]
   18034:	ldr	r0, [sp, #16]
   18038:	ldr	r1, [fp, #20]
   1803c:	ldr	r2, [sp, #160]	; 0xa0
   18040:	add	r1, r1, r2, lsl #3
   18044:	str	r0, [r1, #4]
   18048:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1804c:	ldr	r1, [fp, #20]
   18050:	ldr	r2, [sp, #160]	; 0xa0
   18054:	ldr	r3, [r1, r2, lsl #3]
   18058:	add	r0, r3, r0
   1805c:	str	r0, [r1, r2, lsl #3]
   18060:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18064:	ldr	r1, [fp, #20]
   18068:	ldr	r2, [sp, #160]	; 0xa0
   1806c:	add	r1, r1, r2, lsl #3
   18070:	ldr	r2, [r1, #4]
   18074:	add	r0, r2, r0
   18078:	str	r0, [r1, #4]
   1807c:	b	18080 <__assert_fail@plt+0x6b7c>
   18080:	ldr	r0, [sp, #160]	; 0xa0
   18084:	add	r0, r0, #1
   18088:	str	r0, [sp, #160]	; 0xa0
   1808c:	b	17f64 <__assert_fail@plt+0x6a60>
   18090:	movw	r0, #0
   18094:	str	r0, [sp, #160]	; 0xa0
   18098:	ldr	r0, [sp, #160]	; 0xa0
   1809c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   180a0:	cmp	r0, r1
   180a4:	bge	180ec <__assert_fail@plt+0x6be8>
   180a8:	ldr	r0, [fp, #20]
   180ac:	ldr	r1, [fp, #16]
   180b0:	ldr	r2, [sp, #160]	; 0xa0
   180b4:	add	r1, r1, r2
   180b8:	mvn	r2, #0
   180bc:	str	r2, [r0, r1, lsl #3]
   180c0:	ldr	r0, [fp, #20]
   180c4:	ldr	r1, [fp, #16]
   180c8:	ldr	r2, [sp, #160]	; 0xa0
   180cc:	add	r1, r1, r2
   180d0:	add	r0, r0, r1, lsl #3
   180d4:	mvn	r1, #0
   180d8:	str	r1, [r0, #4]
   180dc:	ldr	r0, [sp, #160]	; 0xa0
   180e0:	add	r0, r0, #1
   180e4:	str	r0, [sp, #160]	; 0xa0
   180e8:	b	18098 <__assert_fail@plt+0x6b94>
   180ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   180f0:	ldr	r0, [r0, #132]	; 0x84
   180f4:	movw	r1, #0
   180f8:	cmp	r0, r1
   180fc:	beq	181a0 <__assert_fail@plt+0x6c9c>
   18100:	movw	r0, #0
   18104:	str	r0, [sp, #160]	; 0xa0
   18108:	ldr	r0, [sp, #160]	; 0xa0
   1810c:	add	r0, r0, #1
   18110:	ldr	r1, [fp, #16]
   18114:	cmp	r0, r1
   18118:	bcs	1819c <__assert_fail@plt+0x6c98>
   1811c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18120:	ldr	r0, [r0, #132]	; 0x84
   18124:	ldr	r1, [sp, #160]	; 0xa0
   18128:	add	r0, r0, r1, lsl #2
   1812c:	ldr	r0, [r0]
   18130:	ldr	r1, [sp, #160]	; 0xa0
   18134:	cmp	r0, r1
   18138:	beq	18188 <__assert_fail@plt+0x6c84>
   1813c:	ldr	r0, [fp, #20]
   18140:	ldr	r1, [sp, #160]	; 0xa0
   18144:	add	r2, r0, r1, lsl #3
   18148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1814c:	ldr	r3, [r3, #132]	; 0x84
   18150:	ldr	r1, [r3, r1, lsl #2]
   18154:	add	r0, r0, r1, lsl #3
   18158:	ldr	r0, [r0, #8]
   1815c:	str	r0, [r2, #8]
   18160:	ldr	r0, [fp, #20]
   18164:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18168:	ldr	r1, [r1, #132]	; 0x84
   1816c:	ldr	r2, [sp, #160]	; 0xa0
   18170:	ldr	r1, [r1, r2, lsl #2]
   18174:	add	r1, r0, r1, lsl #3
   18178:	ldr	r1, [r1, #12]
   1817c:	add	r2, r2, #1
   18180:	add	r0, r0, r2, lsl #3
   18184:	str	r1, [r0, #4]
   18188:	b	1818c <__assert_fail@plt+0x6c88>
   1818c:	ldr	r0, [sp, #160]	; 0xa0
   18190:	add	r0, r0, #1
   18194:	str	r0, [sp, #160]	; 0xa0
   18198:	b	18108 <__assert_fail@plt+0x6c04>
   1819c:	b	181a0 <__assert_fail@plt+0x6c9c>
   181a0:	b	181a4 <__assert_fail@plt+0x6ca0>
   181a4:	b	181a8 <__assert_fail@plt+0x6ca4>
   181a8:	ldr	r0, [sp, #280]	; 0x118
   181ac:	bl	35268 <__assert_fail@plt+0x23d64>
   181b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   181b4:	ldr	r0, [r0, #76]	; 0x4c
   181b8:	cmp	r0, #0
   181bc:	beq	181c8 <__assert_fail@plt+0x6cc4>
   181c0:	add	r0, sp, #180	; 0xb4
   181c4:	bl	25b5c <__assert_fail@plt+0x14658>
   181c8:	add	r0, sp, #180	; 0xb4
   181cc:	bl	19538 <__assert_fail@plt+0x8034>
   181d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181d4:	str	r0, [fp, #-20]	; 0xffffffec
   181d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   181dc:	sub	sp, fp, #16
   181e0:	pop	{r4, r5, r6, sl, fp, pc}
   181e4:	svccc	0x00ffffff
   181e8:	push	{r4, r5, fp, lr}
   181ec:	add	fp, sp, #8
   181f0:	sub	sp, sp, #40	; 0x28
   181f4:	ldr	ip, [fp, #8]
   181f8:	str	r0, [fp, #-12]
   181fc:	str	r1, [fp, #-16]
   18200:	str	r2, [fp, #-20]	; 0xffffffec
   18204:	str	r3, [sp, #24]
   18208:	ldr	r0, [fp, #-12]
   1820c:	ldr	r1, [fp, #-16]
   18210:	ldr	r2, [fp, #-20]	; 0xffffffec
   18214:	ldr	r3, [sp, #24]
   18218:	ldr	lr, [fp, #-20]	; 0xffffffec
   1821c:	ldr	r4, [fp, #8]
   18220:	movw	r5, #0
   18224:	str	r5, [sp]
   18228:	str	lr, [sp, #4]
   1822c:	str	r4, [sp, #8]
   18230:	movw	lr, #1
   18234:	and	lr, lr, #1
   18238:	str	lr, [sp, #12]
   1823c:	str	ip, [sp, #20]
   18240:	bl	1824c <__assert_fail@plt+0x6d48>
   18244:	sub	sp, fp, #8
   18248:	pop	{r4, r5, fp, pc}
   1824c:	push	{r4, r5, r6, sl, fp, lr}
   18250:	add	fp, sp, #16
   18254:	sub	sp, sp, #120	; 0x78
   18258:	ldr	ip, [fp, #20]
   1825c:	ldr	lr, [fp, #16]
   18260:	ldr	r4, [fp, #12]
   18264:	ldr	r5, [fp, #8]
   18268:	str	r0, [fp, #-24]	; 0xffffffe8
   1826c:	str	r1, [fp, #-28]	; 0xffffffe4
   18270:	str	r2, [fp, #-32]	; 0xffffffe0
   18274:	str	r3, [fp, #-36]	; 0xffffffdc
   18278:	and	r0, ip, #1
   1827c:	strb	r0, [fp, #-37]	; 0xffffffdb
   18280:	movw	r0, #0
   18284:	str	r0, [fp, #-60]	; 0xffffffc4
   18288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1828c:	ldr	r0, [r0]
   18290:	str	r0, [fp, #-64]	; 0xffffffc0
   18294:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18298:	ldr	r1, [fp, #8]
   1829c:	add	r0, r0, r1
   182a0:	str	r0, [sp, #68]	; 0x44
   182a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   182a8:	cmp	r0, #0
   182ac:	movw	r0, #1
   182b0:	str	r5, [sp, #64]	; 0x40
   182b4:	str	r4, [sp, #60]	; 0x3c
   182b8:	str	lr, [sp, #56]	; 0x38
   182bc:	str	r0, [sp, #52]	; 0x34
   182c0:	blt	182dc <__assert_fail@plt+0x6dd8>
   182c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   182c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182cc:	cmp	r0, r1
   182d0:	movw	r0, #0
   182d4:	movgt	r0, #1
   182d8:	str	r0, [sp, #52]	; 0x34
   182dc:	ldr	r0, [sp, #52]	; 0x34
   182e0:	tst	r0, #1
   182e4:	beq	182f4 <__assert_fail@plt+0x6df0>
   182e8:	mvn	r0, #0
   182ec:	str	r0, [fp, #-20]	; 0xffffffec
   182f0:	b	18718 <__assert_fail@plt+0x7214>
   182f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182f8:	ldr	r1, [sp, #68]	; 0x44
   182fc:	cmp	r0, r1
   18300:	movw	r0, #1
   18304:	str	r0, [sp, #48]	; 0x30
   18308:	blt	18344 <__assert_fail@plt+0x6e40>
   1830c:	ldr	r0, [fp, #8]
   18310:	movw	r1, #0
   18314:	cmp	r1, r0
   18318:	movw	r0, #0
   1831c:	str	r0, [sp, #44]	; 0x2c
   18320:	bgt	1833c <__assert_fail@plt+0x6e38>
   18324:	ldr	r0, [sp, #68]	; 0x44
   18328:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1832c:	cmp	r0, r1
   18330:	movw	r0, #0
   18334:	movlt	r0, #1
   18338:	str	r0, [sp, #44]	; 0x2c
   1833c:	ldr	r0, [sp, #44]	; 0x2c
   18340:	str	r0, [sp, #48]	; 0x30
   18344:	ldr	r0, [sp, #48]	; 0x30
   18348:	tst	r0, #1
   1834c:	beq	1835c <__assert_fail@plt+0x6e58>
   18350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18354:	str	r0, [sp, #68]	; 0x44
   18358:	b	183bc <__assert_fail@plt+0x6eb8>
   1835c:	ldr	r0, [sp, #68]	; 0x44
   18360:	cmp	r0, #0
   18364:	movw	r0, #1
   18368:	str	r0, [sp, #40]	; 0x28
   1836c:	blt	183a4 <__assert_fail@plt+0x6ea0>
   18370:	ldr	r0, [fp, #8]
   18374:	cmp	r0, #0
   18378:	movw	r0, #0
   1837c:	str	r0, [sp, #36]	; 0x24
   18380:	bge	1839c <__assert_fail@plt+0x6e98>
   18384:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18388:	ldr	r1, [sp, #68]	; 0x44
   1838c:	cmp	r0, r1
   18390:	movw	r0, #0
   18394:	movle	r0, #1
   18398:	str	r0, [sp, #36]	; 0x24
   1839c:	ldr	r0, [sp, #36]	; 0x24
   183a0:	str	r0, [sp, #40]	; 0x28
   183a4:	ldr	r0, [sp, #40]	; 0x28
   183a8:	tst	r0, #1
   183ac:	beq	183b8 <__assert_fail@plt+0x6eb4>
   183b0:	movw	r0, #0
   183b4:	str	r0, [sp, #68]	; 0x44
   183b8:	b	183bc <__assert_fail@plt+0x6eb8>
   183bc:	movw	r0, #0
   183c0:	movt	r0, #0
   183c4:	cmp	r0, #0
   183c8:	bne	183e4 <__assert_fail@plt+0x6ee0>
   183cc:	b	183d0 <__assert_fail@plt+0x6ecc>
   183d0:	movw	r0, #0
   183d4:	movt	r0, #0
   183d8:	cmp	r0, #0
   183dc:	beq	183f8 <__assert_fail@plt+0x6ef4>
   183e0:	b	183e4 <__assert_fail@plt+0x6ee0>
   183e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   183e8:	add	r0, r0, #136	; 0x88
   183ec:	bl	11288 <pthread_mutex_lock@plt>
   183f0:	str	r0, [sp, #32]
   183f4:	b	183fc <__assert_fail@plt+0x6ef8>
   183f8:	b	183fc <__assert_fail@plt+0x6ef8>
   183fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18400:	ldrb	r0, [r0, #28]
   18404:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18408:	orr	r2, r1, #1
   1840c:	mov	r3, #1
   18410:	tst	r3, r0, lsr #5
   18414:	movne	r1, r2
   18418:	str	r1, [fp, #-60]	; 0xffffffc4
   1841c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18420:	ldrb	r0, [r0, #28]
   18424:	ubfx	r0, r0, #6, #1
   18428:	and	r0, r0, #255	; 0xff
   1842c:	cmp	r0, #0
   18430:	movw	r0, #0
   18434:	movne	r0, #1
   18438:	tst	r0, #1
   1843c:	movw	r0, #2
   18440:	moveq	r0, #0
   18444:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18448:	orr	r0, r1, r0
   1844c:	str	r0, [fp, #-60]	; 0xffffffc4
   18450:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18454:	ldr	r1, [sp, #68]	; 0x44
   18458:	cmp	r0, r1
   1845c:	bge	18498 <__assert_fail@plt+0x6f94>
   18460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18464:	ldr	r0, [r0, #16]
   18468:	movw	r1, #0
   1846c:	cmp	r0, r1
   18470:	beq	18498 <__assert_fail@plt+0x6f94>
   18474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18478:	ldrb	r0, [r0, #28]
   1847c:	ubfx	r0, r0, #3, #1
   18480:	and	r0, r0, #255	; 0xff
   18484:	cmp	r0, #0
   18488:	bne	18498 <__assert_fail@plt+0x6f94>
   1848c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18490:	bl	16280 <__assert_fail@plt+0x4d7c>
   18494:	str	r0, [sp, #28]
   18498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1849c:	ldrb	r0, [r0, #28]
   184a0:	ubfx	r0, r0, #4, #1
   184a4:	and	r0, r0, #255	; 0xff
   184a8:	cmp	r0, #0
   184ac:	beq	184b8 <__assert_fail@plt+0x6fb4>
   184b0:	movw	r0, #0
   184b4:	str	r0, [fp, #16]
   184b8:	ldr	r0, [fp, #16]
   184bc:	movw	r1, #0
   184c0:	cmp	r0, r1
   184c4:	bne	184d4 <__assert_fail@plt+0x6fd0>
   184c8:	movw	r0, #1
   184cc:	str	r0, [fp, #-52]	; 0xffffffcc
   184d0:	b	18560 <__assert_fail@plt+0x705c>
   184d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d8:	ldrb	r0, [r0, #28]
   184dc:	ubfx	r0, r0, #1, #2
   184e0:	and	r0, r0, #255	; 0xff
   184e4:	cmp	r0, #2
   184e8:	movw	r0, #0
   184ec:	str	r0, [sp, #24]
   184f0:	bne	18514 <__assert_fail@plt+0x7010>
   184f4:	ldr	r0, [fp, #16]
   184f8:	ldr	r0, [r0]
   184fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18500:	ldr	r1, [r1, #24]
   18504:	cmp	r0, r1
   18508:	movw	r0, #0
   1850c:	movls	r0, #1
   18510:	str	r0, [sp, #24]
   18514:	ldr	r0, [sp, #24]
   18518:	tst	r0, #1
   1851c:	beq	1854c <__assert_fail@plt+0x7048>
   18520:	ldr	r0, [fp, #16]
   18524:	ldr	r0, [r0]
   18528:	str	r0, [fp, #-52]	; 0xffffffcc
   1852c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18530:	cmp	r0, #1
   18534:	bge	18548 <__assert_fail@plt+0x7044>
   18538:	movw	r0, #0
   1853c:	str	r0, [fp, #16]
   18540:	movw	r0, #1
   18544:	str	r0, [fp, #-52]	; 0xffffffcc
   18548:	b	1855c <__assert_fail@plt+0x7058>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	ldr	r0, [r0, #24]
   18554:	add	r0, r0, #1
   18558:	str	r0, [fp, #-52]	; 0xffffffcc
   1855c:	b	18560 <__assert_fail@plt+0x705c>
   18560:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18564:	lsl	r0, r0, #3
   18568:	bl	33b44 <__assert_fail@plt+0x22640>
   1856c:	str	r0, [fp, #-48]	; 0xffffffd0
   18570:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18574:	movw	lr, #0
   18578:	cmp	r0, lr
   1857c:	bne	1858c <__assert_fail@plt+0x7088>
   18580:	mvn	r0, #1
   18584:	str	r0, [fp, #-56]	; 0xffffffc8
   18588:	b	186d0 <__assert_fail@plt+0x71cc>
   1858c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18590:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18594:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1859c:	ldr	ip, [sp, #68]	; 0x44
   185a0:	ldr	lr, [fp, #12]
   185a4:	ldr	r4, [fp, #-52]	; 0xffffffcc
   185a8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   185ac:	ldr	r6, [fp, #-60]	; 0xffffffc4
   185b0:	str	ip, [sp]
   185b4:	str	lr, [sp, #4]
   185b8:	str	r4, [sp, #8]
   185bc:	str	r5, [sp, #12]
   185c0:	str	r6, [sp, #16]
   185c4:	bl	172d0 <__assert_fail@plt+0x5dcc>
   185c8:	str	r0, [fp, #-44]	; 0xffffffd4
   185cc:	movw	r0, #0
   185d0:	str	r0, [fp, #-56]	; 0xffffffc8
   185d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   185d8:	cmp	r0, #0
   185dc:	beq	18604 <__assert_fail@plt+0x7100>
   185e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   185e4:	cmp	r0, #1
   185e8:	movw	r0, #0
   185ec:	moveq	r0, #1
   185f0:	tst	r0, #1
   185f4:	mvn	r0, #0
   185f8:	mvneq	r0, #1
   185fc:	str	r0, [fp, #-56]	; 0xffffffc8
   18600:	b	18670 <__assert_fail@plt+0x716c>
   18604:	ldr	r0, [fp, #16]
   18608:	movw	r1, #0
   1860c:	cmp	r0, r1
   18610:	beq	1866c <__assert_fail@plt+0x7168>
   18614:	ldr	r0, [fp, #16]
   18618:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1861c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18624:	ldrb	r3, [r3, #28]
   18628:	ubfx	r3, r3, #1, #2
   1862c:	bl	23b80 <__assert_fail@plt+0x1267c>
   18630:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18634:	ldrb	r2, [r1, #28]
   18638:	and	r0, r0, #3
   1863c:	and	r2, r2, #249	; 0xf9
   18640:	orr	r0, r2, r0, lsl #1
   18644:	strb	r0, [r1, #28]
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	ldrb	r0, [r0, #28]
   18650:	ubfx	r0, r0, #1, #2
   18654:	and	r0, r0, #255	; 0xff
   18658:	cmp	r0, #0
   1865c:	bne	18668 <__assert_fail@plt+0x7164>
   18660:	mvn	r0, #1
   18664:	str	r0, [fp, #-56]	; 0xffffffc8
   18668:	b	1866c <__assert_fail@plt+0x7168>
   1866c:	b	18670 <__assert_fail@plt+0x716c>
   18670:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18674:	cmp	r0, #0
   18678:	bne	186c8 <__assert_fail@plt+0x71c4>
   1867c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   18680:	tst	r0, #1
   18684:	beq	186b8 <__assert_fail@plt+0x71b4>
   18688:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1868c:	ldr	r0, [r0]
   18690:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18694:	cmp	r0, r1
   18698:	bne	186a0 <__assert_fail@plt+0x719c>
   1869c:	b	186a0 <__assert_fail@plt+0x719c>
   186a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   186a4:	ldr	r0, [r0, #4]
   186a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186ac:	sub	r0, r0, r1
   186b0:	str	r0, [fp, #-56]	; 0xffffffc8
   186b4:	b	186c4 <__assert_fail@plt+0x71c0>
   186b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   186bc:	ldr	r0, [r0]
   186c0:	str	r0, [fp, #-56]	; 0xffffffc8
   186c4:	b	186c8 <__assert_fail@plt+0x71c4>
   186c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   186cc:	bl	35268 <__assert_fail@plt+0x23d64>
   186d0:	movw	r0, #0
   186d4:	movt	r0, #0
   186d8:	cmp	r0, #0
   186dc:	bne	186f8 <__assert_fail@plt+0x71f4>
   186e0:	b	186e4 <__assert_fail@plt+0x71e0>
   186e4:	movw	r0, #0
   186e8:	movt	r0, #0
   186ec:	cmp	r0, #0
   186f0:	beq	1870c <__assert_fail@plt+0x7208>
   186f4:	b	186f8 <__assert_fail@plt+0x71f4>
   186f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   186fc:	add	r0, r0, #136	; 0x88
   18700:	bl	111e0 <pthread_mutex_unlock@plt>
   18704:	str	r0, [sp, #20]
   18708:	b	18710 <__assert_fail@plt+0x720c>
   1870c:	b	18710 <__assert_fail@plt+0x720c>
   18710:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18714:	str	r0, [fp, #-20]	; 0xffffffec
   18718:	ldr	r0, [fp, #-20]	; 0xffffffec
   1871c:	sub	sp, fp, #16
   18720:	pop	{r4, r5, r6, sl, fp, pc}
   18724:	push	{r4, r5, r6, sl, fp, lr}
   18728:	add	fp, sp, #16
   1872c:	sub	sp, sp, #40	; 0x28
   18730:	ldr	ip, [fp, #12]
   18734:	ldr	lr, [fp, #8]
   18738:	str	r0, [fp, #-20]	; 0xffffffec
   1873c:	str	r1, [fp, #-24]	; 0xffffffe8
   18740:	str	r2, [sp, #28]
   18744:	str	r3, [sp, #24]
   18748:	ldr	r0, [fp, #-20]	; 0xffffffec
   1874c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18750:	ldr	r2, [sp, #28]
   18754:	ldr	r3, [sp, #24]
   18758:	ldr	r4, [fp, #8]
   1875c:	ldr	r5, [sp, #28]
   18760:	ldr	r6, [fp, #12]
   18764:	str	r4, [sp]
   18768:	str	r5, [sp, #4]
   1876c:	str	r6, [sp, #8]
   18770:	movw	r4, #0
   18774:	and	r4, r4, #1
   18778:	str	r4, [sp, #12]
   1877c:	str	lr, [sp, #20]
   18780:	str	ip, [sp, #16]
   18784:	bl	1824c <__assert_fail@plt+0x6d48>
   18788:	sub	sp, fp, #16
   1878c:	pop	{r4, r5, r6, sl, fp, pc}
   18790:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18794:	add	fp, sp, #24
   18798:	sub	sp, sp, #56	; 0x38
   1879c:	ldr	ip, [fp, #20]
   187a0:	ldr	lr, [fp, #16]
   187a4:	ldr	r4, [fp, #12]
   187a8:	ldr	r5, [fp, #8]
   187ac:	str	r0, [fp, #-28]	; 0xffffffe4
   187b0:	str	r1, [fp, #-32]	; 0xffffffe0
   187b4:	str	r2, [fp, #-36]	; 0xffffffdc
   187b8:	str	r3, [sp, #40]	; 0x28
   187bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   187c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   187c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   187c8:	ldr	r3, [sp, #40]	; 0x28
   187cc:	ldr	r6, [fp, #8]
   187d0:	ldr	r7, [fp, #12]
   187d4:	ldr	r8, [fp, #16]
   187d8:	ldr	r9, [fp, #20]
   187dc:	str	r6, [sp]
   187e0:	str	r7, [sp, #4]
   187e4:	movw	r6, #0
   187e8:	str	r6, [sp, #8]
   187ec:	str	r8, [sp, #12]
   187f0:	str	r9, [sp, #16]
   187f4:	movw	r6, #1
   187f8:	and	r6, r6, #1
   187fc:	str	r6, [sp, #20]
   18800:	str	r5, [sp, #36]	; 0x24
   18804:	str	ip, [sp, #32]
   18808:	str	lr, [sp, #28]
   1880c:	str	r4, [sp, #24]
   18810:	bl	1881c <__assert_fail@plt+0x7318>
   18814:	sub	sp, fp, #24
   18818:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1881c:	push	{r4, r5, r6, r7, fp, lr}
   18820:	add	fp, sp, #16
   18824:	sub	sp, sp, #88	; 0x58
   18828:	ldr	ip, [fp, #28]
   1882c:	ldr	lr, [fp, #24]
   18830:	ldr	r4, [fp, #20]
   18834:	ldr	r5, [fp, #16]
   18838:	ldr	r6, [fp, #12]
   1883c:	ldr	r7, [fp, #8]
   18840:	str	r0, [fp, #-24]	; 0xffffffe8
   18844:	str	r1, [fp, #-28]	; 0xffffffe4
   18848:	str	r2, [fp, #-32]	; 0xffffffe0
   1884c:	str	r3, [fp, #-36]	; 0xffffffdc
   18850:	and	r0, ip, #1
   18854:	strb	r0, [fp, #-37]	; 0xffffffdb
   18858:	movw	r0, #0
   1885c:	str	r0, [sp, #48]	; 0x30
   18860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18864:	cmp	r0, #0
   18868:	movw	r0, #1
   1886c:	str	r7, [sp, #44]	; 0x2c
   18870:	str	r4, [sp, #40]	; 0x28
   18874:	str	r5, [sp, #36]	; 0x24
   18878:	str	r6, [sp, #32]
   1887c:	str	lr, [sp, #28]
   18880:	str	r0, [sp, #24]
   18884:	blt	188d0 <__assert_fail@plt+0x73cc>
   18888:	ldr	r0, [fp, #8]
   1888c:	cmp	r0, #0
   18890:	movw	r0, #1
   18894:	str	r0, [sp, #24]
   18898:	blt	188d0 <__assert_fail@plt+0x73cc>
   1889c:	ldr	r0, [fp, #24]
   188a0:	cmp	r0, #0
   188a4:	movw	r0, #1
   188a8:	str	r0, [sp, #24]
   188ac:	blt	188d0 <__assert_fail@plt+0x73cc>
   188b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188b4:	ldr	r1, [fp, #8]
   188b8:	add	r1, r0, r1
   188bc:	mov	r2, #1
   188c0:	cmp	r1, r0
   188c4:	movwvc	r2, #0
   188c8:	str	r1, [sp, #52]	; 0x34
   188cc:	str	r2, [sp, #24]
   188d0:	ldr	r0, [sp, #24]
   188d4:	tst	r0, #1
   188d8:	beq	188e8 <__assert_fail@plt+0x73e4>
   188dc:	mvn	r0, #1
   188e0:	str	r0, [fp, #-20]	; 0xffffffec
   188e4:	b	189c4 <__assert_fail@plt+0x74c0>
   188e8:	ldr	r0, [fp, #8]
   188ec:	cmp	r0, #0
   188f0:	ble	18970 <__assert_fail@plt+0x746c>
   188f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188f8:	cmp	r0, #0
   188fc:	ble	18964 <__assert_fail@plt+0x7460>
   18900:	ldr	r0, [sp, #52]	; 0x34
   18904:	mov	r1, r0
   18908:	str	r1, [sp, #20]
   1890c:	bl	33b44 <__assert_fail@plt+0x22640>
   18910:	str	r0, [sp, #48]	; 0x30
   18914:	ldr	r0, [sp, #48]	; 0x30
   18918:	movw	r1, #0
   1891c:	cmp	r0, r1
   18920:	bne	18930 <__assert_fail@plt+0x742c>
   18924:	mvn	r0, #1
   18928:	str	r0, [fp, #-20]	; 0xffffffec
   1892c:	b	189c4 <__assert_fail@plt+0x74c0>
   18930:	ldr	r0, [sp, #48]	; 0x30
   18934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18938:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1893c:	bl	112a0 <memcpy@plt>
   18940:	ldr	r0, [sp, #48]	; 0x30
   18944:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18948:	add	r0, r0, r1
   1894c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18950:	ldr	r2, [fp, #8]
   18954:	bl	112a0 <memcpy@plt>
   18958:	ldr	r0, [sp, #48]	; 0x30
   1895c:	str	r0, [fp, #-44]	; 0xffffffd4
   18960:	b	1896c <__assert_fail@plt+0x7468>
   18964:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18968:	str	r0, [fp, #-44]	; 0xffffffd4
   1896c:	b	18978 <__assert_fail@plt+0x7474>
   18970:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18974:	str	r0, [fp, #-44]	; 0xffffffd4
   18978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1897c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18980:	ldr	r2, [sp, #52]	; 0x34
   18984:	ldr	r3, [fp, #12]
   18988:	ldr	ip, [fp, #16]
   1898c:	ldr	lr, [fp, #24]
   18990:	ldr	r4, [fp, #20]
   18994:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   18998:	str	ip, [sp]
   1899c:	str	lr, [sp, #4]
   189a0:	str	r4, [sp, #8]
   189a4:	and	ip, r5, #1
   189a8:	str	ip, [sp, #12]
   189ac:	bl	1824c <__assert_fail@plt+0x6d48>
   189b0:	str	r0, [fp, #-48]	; 0xffffffd0
   189b4:	ldr	r0, [sp, #48]	; 0x30
   189b8:	bl	35268 <__assert_fail@plt+0x23d64>
   189bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189c0:	str	r0, [fp, #-20]	; 0xffffffec
   189c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   189c8:	sub	sp, fp, #16
   189cc:	pop	{r4, r5, r6, r7, fp, pc}
   189d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189d4:	add	fp, sp, #28
   189d8:	sub	sp, sp, #68	; 0x44
   189dc:	ldr	ip, [fp, #24]
   189e0:	ldr	lr, [fp, #20]
   189e4:	ldr	r4, [fp, #16]
   189e8:	ldr	r5, [fp, #12]
   189ec:	ldr	r6, [fp, #8]
   189f0:	str	r0, [fp, #-32]	; 0xffffffe0
   189f4:	str	r1, [fp, #-36]	; 0xffffffdc
   189f8:	str	r2, [fp, #-40]	; 0xffffffd8
   189fc:	str	r3, [fp, #-44]	; 0xffffffd4
   18a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a10:	ldr	r7, [fp, #8]
   18a14:	ldr	r8, [fp, #12]
   18a18:	ldr	r9, [fp, #16]
   18a1c:	ldr	sl, [fp, #20]
   18a20:	str	r0, [sp, #48]	; 0x30
   18a24:	ldr	r0, [fp, #24]
   18a28:	str	r0, [sp, #44]	; 0x2c
   18a2c:	ldr	r0, [sp, #48]	; 0x30
   18a30:	str	r7, [sp]
   18a34:	str	r8, [sp, #4]
   18a38:	str	r9, [sp, #8]
   18a3c:	str	sl, [sp, #12]
   18a40:	ldr	r7, [sp, #44]	; 0x2c
   18a44:	str	r7, [sp, #16]
   18a48:	movw	r8, #0
   18a4c:	and	r8, r8, #1
   18a50:	str	r8, [sp, #20]
   18a54:	str	r6, [sp, #40]	; 0x28
   18a58:	str	lr, [sp, #36]	; 0x24
   18a5c:	str	r4, [sp, #32]
   18a60:	str	r5, [sp, #28]
   18a64:	str	ip, [sp, #24]
   18a68:	bl	1881c <__assert_fail@plt+0x7318>
   18a6c:	sub	sp, fp, #28
   18a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a74:	sub	sp, sp, #20
   18a78:	ldr	ip, [sp, #20]
   18a7c:	str	r0, [sp, #16]
   18a80:	str	r1, [sp, #12]
   18a84:	str	r2, [sp, #8]
   18a88:	str	r3, [sp, #4]
   18a8c:	ldr	r0, [sp, #8]
   18a90:	cmp	r0, #0
   18a94:	str	ip, [sp]
   18a98:	beq	18adc <__assert_fail@plt+0x75d8>
   18a9c:	ldr	r0, [sp, #16]
   18aa0:	ldrb	r1, [r0, #28]
   18aa4:	bic	r1, r1, #6
   18aa8:	movw	r2, #2
   18aac:	orr	r1, r1, r2
   18ab0:	strb	r1, [r0, #28]
   18ab4:	ldr	r0, [sp, #8]
   18ab8:	ldr	r1, [sp, #12]
   18abc:	str	r0, [r1]
   18ac0:	ldr	r0, [sp, #4]
   18ac4:	ldr	r1, [sp, #12]
   18ac8:	str	r0, [r1, #4]
   18acc:	ldr	r0, [sp, #20]
   18ad0:	ldr	r1, [sp, #12]
   18ad4:	str	r0, [r1, #8]
   18ad8:	b	18b08 <__assert_fail@plt+0x7604>
   18adc:	ldr	r0, [sp, #16]
   18ae0:	ldrb	r1, [r0, #28]
   18ae4:	bic	r1, r1, #6
   18ae8:	strb	r1, [r0, #28]
   18aec:	ldr	r0, [sp, #12]
   18af0:	movw	r1, #0
   18af4:	str	r1, [r0]
   18af8:	ldr	r0, [sp, #12]
   18afc:	str	r1, [r0, #8]
   18b00:	ldr	r0, [sp, #12]
   18b04:	str	r1, [r0, #4]
   18b08:	add	sp, sp, #20
   18b0c:	bx	lr
   18b10:	push	{fp, lr}
   18b14:	mov	fp, sp
   18b18:	sub	sp, sp, #8
   18b1c:	str	r0, [sp, #4]
   18b20:	ldr	r0, [sp, #4]
   18b24:	ldr	r0, [r0, #4]
   18b28:	and	r0, r0, #255	; 0xff
   18b2c:	cmp	r0, #6
   18b30:	bne	18b5c <__assert_fail@plt+0x7658>
   18b34:	ldr	r0, [sp, #4]
   18b38:	ldr	r0, [r0, #4]
   18b3c:	lsr	r0, r0, #18
   18b40:	and	r0, r0, #1
   18b44:	cmp	r0, #0
   18b48:	bne	18b5c <__assert_fail@plt+0x7658>
   18b4c:	ldr	r0, [sp, #4]
   18b50:	ldr	r0, [r0]
   18b54:	bl	18c30 <__assert_fail@plt+0x772c>
   18b58:	b	18b98 <__assert_fail@plt+0x7694>
   18b5c:	ldr	r0, [sp, #4]
   18b60:	ldr	r0, [r0, #4]
   18b64:	and	r0, r0, #255	; 0xff
   18b68:	cmp	r0, #3
   18b6c:	bne	18b94 <__assert_fail@plt+0x7690>
   18b70:	ldr	r0, [sp, #4]
   18b74:	ldr	r0, [r0, #4]
   18b78:	lsr	r0, r0, #18
   18b7c:	and	r0, r0, #1
   18b80:	cmp	r0, #0
   18b84:	bne	18b94 <__assert_fail@plt+0x7690>
   18b88:	ldr	r0, [sp, #4]
   18b8c:	ldr	r0, [r0]
   18b90:	bl	35268 <__assert_fail@plt+0x23d64>
   18b94:	b	18b98 <__assert_fail@plt+0x7694>
   18b98:	mov	sp, fp
   18b9c:	pop	{fp, pc}
   18ba0:	push	{fp, lr}
   18ba4:	mov	fp, sp
   18ba8:	sub	sp, sp, #8
   18bac:	str	r0, [sp, #4]
   18bb0:	ldr	r0, [sp, #4]
   18bb4:	ldr	r0, [r0, #24]
   18bb8:	bl	35268 <__assert_fail@plt+0x23d64>
   18bbc:	ldr	r0, [sp, #4]
   18bc0:	ldr	r0, [r0, #36]	; 0x24
   18bc4:	bl	35268 <__assert_fail@plt+0x23d64>
   18bc8:	ldr	r0, [sp, #4]
   18bcc:	ldr	r0, [r0, #40]	; 0x28
   18bd0:	ldr	lr, [sp, #4]
   18bd4:	add	lr, lr, #4
   18bd8:	cmp	r0, lr
   18bdc:	beq	18bfc <__assert_fail@plt+0x76f8>
   18be0:	ldr	r0, [sp, #4]
   18be4:	ldr	r0, [r0, #40]	; 0x28
   18be8:	ldr	r0, [r0, #8]
   18bec:	bl	35268 <__assert_fail@plt+0x23d64>
   18bf0:	ldr	r0, [sp, #4]
   18bf4:	ldr	r0, [r0, #40]	; 0x28
   18bf8:	bl	35268 <__assert_fail@plt+0x23d64>
   18bfc:	ldr	r0, [sp, #4]
   18c00:	ldr	r0, [r0, #12]
   18c04:	bl	35268 <__assert_fail@plt+0x23d64>
   18c08:	ldr	r0, [sp, #4]
   18c0c:	ldr	r0, [r0, #48]	; 0x30
   18c10:	bl	35268 <__assert_fail@plt+0x23d64>
   18c14:	ldr	r0, [sp, #4]
   18c18:	ldr	r0, [r0, #44]	; 0x2c
   18c1c:	bl	35268 <__assert_fail@plt+0x23d64>
   18c20:	ldr	r0, [sp, #4]
   18c24:	bl	35268 <__assert_fail@plt+0x23d64>
   18c28:	mov	sp, fp
   18c2c:	pop	{fp, pc}
   18c30:	push	{fp, lr}
   18c34:	mov	fp, sp
   18c38:	sub	sp, sp, #8
   18c3c:	str	r0, [sp, #4]
   18c40:	ldr	r0, [sp, #4]
   18c44:	ldr	r0, [r0]
   18c48:	bl	35268 <__assert_fail@plt+0x23d64>
   18c4c:	ldr	r0, [sp, #4]
   18c50:	ldr	r0, [r0, #4]
   18c54:	bl	35268 <__assert_fail@plt+0x23d64>
   18c58:	ldr	r0, [sp, #4]
   18c5c:	ldr	r0, [r0, #8]
   18c60:	bl	35268 <__assert_fail@plt+0x23d64>
   18c64:	ldr	r0, [sp, #4]
   18c68:	ldr	r0, [r0, #12]
   18c6c:	bl	35268 <__assert_fail@plt+0x23d64>
   18c70:	ldr	r0, [sp, #4]
   18c74:	bl	35268 <__assert_fail@plt+0x23d64>
   18c78:	mov	sp, fp
   18c7c:	pop	{fp, pc}
   18c80:	push	{fp, lr}
   18c84:	mov	fp, sp
   18c88:	sub	sp, sp, #120	; 0x78
   18c8c:	str	r0, [fp, #-8]
   18c90:	str	r1, [fp, #-12]
   18c94:	movw	r0, #4
   18c98:	str	r0, [fp, #-24]	; 0xffffffe8
   18c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca0:	movw	r1, #8
   18ca4:	cmp	r1, r0
   18ca8:	bcs	18cb8 <__assert_fail@plt+0x77b4>
   18cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb0:	str	r0, [fp, #-48]	; 0xffffffd0
   18cb4:	b	18cc4 <__assert_fail@plt+0x77c0>
   18cb8:	movw	r0, #8
   18cbc:	str	r0, [fp, #-48]	; 0xffffffd0
   18cc0:	b	18cc4 <__assert_fail@plt+0x77c0>
   18cc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18cc8:	movw	r1, #12
   18ccc:	cmp	r1, r0
   18cd0:	bcs	18d08 <__assert_fail@plt+0x7804>
   18cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd8:	movw	r1, #8
   18cdc:	cmp	r1, r0
   18ce0:	bcs	18cf0 <__assert_fail@plt+0x77ec>
   18ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce8:	str	r0, [fp, #-52]	; 0xffffffcc
   18cec:	b	18cfc <__assert_fail@plt+0x77f8>
   18cf0:	movw	r0, #8
   18cf4:	str	r0, [fp, #-52]	; 0xffffffcc
   18cf8:	b	18cfc <__assert_fail@plt+0x77f8>
   18cfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18d00:	str	r0, [fp, #-56]	; 0xffffffc8
   18d04:	b	18d14 <__assert_fail@plt+0x7810>
   18d08:	movw	r0, #12
   18d0c:	str	r0, [fp, #-56]	; 0xffffffc8
   18d10:	b	18d14 <__assert_fail@plt+0x7810>
   18d14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d18:	movw	r1, #8
   18d1c:	cmp	r1, r0
   18d20:	bcs	18da8 <__assert_fail@plt+0x78a4>
   18d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d28:	movw	r1, #8
   18d2c:	cmp	r1, r0
   18d30:	bcs	18d40 <__assert_fail@plt+0x783c>
   18d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d38:	str	r0, [sp, #60]	; 0x3c
   18d3c:	b	18d4c <__assert_fail@plt+0x7848>
   18d40:	movw	r0, #8
   18d44:	str	r0, [sp, #60]	; 0x3c
   18d48:	b	18d4c <__assert_fail@plt+0x7848>
   18d4c:	ldr	r0, [sp, #60]	; 0x3c
   18d50:	movw	r1, #12
   18d54:	cmp	r1, r0
   18d58:	bcs	18d90 <__assert_fail@plt+0x788c>
   18d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d60:	movw	r1, #8
   18d64:	cmp	r1, r0
   18d68:	bcs	18d78 <__assert_fail@plt+0x7874>
   18d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d70:	str	r0, [sp, #56]	; 0x38
   18d74:	b	18d84 <__assert_fail@plt+0x7880>
   18d78:	movw	r0, #8
   18d7c:	str	r0, [sp, #56]	; 0x38
   18d80:	b	18d84 <__assert_fail@plt+0x7880>
   18d84:	ldr	r0, [sp, #56]	; 0x38
   18d88:	str	r0, [sp, #52]	; 0x34
   18d8c:	b	18d9c <__assert_fail@plt+0x7898>
   18d90:	movw	r0, #12
   18d94:	str	r0, [sp, #52]	; 0x34
   18d98:	b	18d9c <__assert_fail@plt+0x7898>
   18d9c:	ldr	r0, [sp, #52]	; 0x34
   18da0:	str	r0, [sp, #48]	; 0x30
   18da4:	b	18db4 <__assert_fail@plt+0x78b0>
   18da8:	movw	r0, #8
   18dac:	str	r0, [sp, #48]	; 0x30
   18db0:	b	18db4 <__assert_fail@plt+0x78b0>
   18db4:	ldr	r0, [sp, #48]	; 0x30
   18db8:	movw	r1, #12
   18dbc:	cmp	r1, r0
   18dc0:	bcs	18ee8 <__assert_fail@plt+0x79e4>
   18dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc8:	movw	r1, #8
   18dcc:	cmp	r1, r0
   18dd0:	bcs	18de0 <__assert_fail@plt+0x78dc>
   18dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd8:	str	r0, [sp, #44]	; 0x2c
   18ddc:	b	18dec <__assert_fail@plt+0x78e8>
   18de0:	movw	r0, #8
   18de4:	str	r0, [sp, #44]	; 0x2c
   18de8:	b	18dec <__assert_fail@plt+0x78e8>
   18dec:	ldr	r0, [sp, #44]	; 0x2c
   18df0:	movw	r1, #12
   18df4:	cmp	r1, r0
   18df8:	bcs	18e30 <__assert_fail@plt+0x792c>
   18dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e00:	movw	r1, #8
   18e04:	cmp	r1, r0
   18e08:	bcs	18e18 <__assert_fail@plt+0x7914>
   18e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e10:	str	r0, [sp, #40]	; 0x28
   18e14:	b	18e24 <__assert_fail@plt+0x7920>
   18e18:	movw	r0, #8
   18e1c:	str	r0, [sp, #40]	; 0x28
   18e20:	b	18e24 <__assert_fail@plt+0x7920>
   18e24:	ldr	r0, [sp, #40]	; 0x28
   18e28:	str	r0, [sp, #36]	; 0x24
   18e2c:	b	18e3c <__assert_fail@plt+0x7938>
   18e30:	movw	r0, #12
   18e34:	str	r0, [sp, #36]	; 0x24
   18e38:	b	18e3c <__assert_fail@plt+0x7938>
   18e3c:	ldr	r0, [sp, #36]	; 0x24
   18e40:	movw	r1, #8
   18e44:	cmp	r1, r0
   18e48:	bcs	18ed0 <__assert_fail@plt+0x79cc>
   18e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e50:	movw	r1, #8
   18e54:	cmp	r1, r0
   18e58:	bcs	18e68 <__assert_fail@plt+0x7964>
   18e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e60:	str	r0, [sp, #32]
   18e64:	b	18e74 <__assert_fail@plt+0x7970>
   18e68:	movw	r0, #8
   18e6c:	str	r0, [sp, #32]
   18e70:	b	18e74 <__assert_fail@plt+0x7970>
   18e74:	ldr	r0, [sp, #32]
   18e78:	movw	r1, #12
   18e7c:	cmp	r1, r0
   18e80:	bcs	18eb8 <__assert_fail@plt+0x79b4>
   18e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e88:	movw	r1, #8
   18e8c:	cmp	r1, r0
   18e90:	bcs	18ea0 <__assert_fail@plt+0x799c>
   18e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e98:	str	r0, [sp, #28]
   18e9c:	b	18eac <__assert_fail@plt+0x79a8>
   18ea0:	movw	r0, #8
   18ea4:	str	r0, [sp, #28]
   18ea8:	b	18eac <__assert_fail@plt+0x79a8>
   18eac:	ldr	r0, [sp, #28]
   18eb0:	str	r0, [sp, #24]
   18eb4:	b	18ec4 <__assert_fail@plt+0x79c0>
   18eb8:	movw	r0, #12
   18ebc:	str	r0, [sp, #24]
   18ec0:	b	18ec4 <__assert_fail@plt+0x79c0>
   18ec4:	ldr	r0, [sp, #24]
   18ec8:	str	r0, [sp, #20]
   18ecc:	b	18edc <__assert_fail@plt+0x79d8>
   18ed0:	movw	r0, #8
   18ed4:	str	r0, [sp, #20]
   18ed8:	b	18edc <__assert_fail@plt+0x79d8>
   18edc:	ldr	r0, [sp, #20]
   18ee0:	str	r0, [sp, #16]
   18ee4:	b	18ef4 <__assert_fail@plt+0x79f0>
   18ee8:	movw	r0, #12
   18eec:	str	r0, [sp, #16]
   18ef0:	b	18ef4 <__assert_fail@plt+0x79f0>
   18ef4:	ldr	r0, [sp, #16]
   18ef8:	ldr	r1, [pc, #904]	; 19288 <__assert_fail@plt+0x7d84>
   18efc:	str	r0, [fp, #-28]	; 0xffffffe4
   18f00:	ldr	r0, [fp, #-8]
   18f04:	movw	r2, #0
   18f08:	and	r2, r2, #255	; 0xff
   18f0c:	str	r1, [sp, #12]
   18f10:	mov	r1, r2
   18f14:	movw	r2, #160	; 0xa0
   18f18:	bl	11420 <memset@plt>
   18f1c:	ldr	r0, [fp, #-8]
   18f20:	movw	r1, #31
   18f24:	str	r1, [r0, #64]	; 0x40
   18f28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f2c:	mvn	r1, #0
   18f30:	udiv	r0, r1, r0
   18f34:	ldr	r1, [sp, #12]
   18f38:	cmp	r1, r0
   18f3c:	bcs	18f4c <__assert_fail@plt+0x7a48>
   18f40:	ldr	r0, [pc, #832]	; 19288 <__assert_fail@plt+0x7d84>
   18f44:	str	r0, [sp, #8]
   18f48:	b	18f5c <__assert_fail@plt+0x7a58>
   18f4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f50:	mvn	r1, #0
   18f54:	udiv	r0, r1, r0
   18f58:	str	r0, [sp, #8]
   18f5c:	ldr	r0, [sp, #8]
   18f60:	lsr	r0, r0, #1
   18f64:	ldr	r1, [fp, #-12]
   18f68:	cmp	r0, r1
   18f6c:	bhi	18f7c <__assert_fail@plt+0x7a78>
   18f70:	movw	r0, #12
   18f74:	str	r0, [fp, #-4]
   18f78:	b	1927c <__assert_fail@plt+0x7d78>
   18f7c:	ldr	r0, [fp, #-12]
   18f80:	add	r0, r0, #1
   18f84:	ldr	r1, [fp, #-8]
   18f88:	str	r0, [r1, #4]
   18f8c:	ldr	r0, [fp, #-8]
   18f90:	ldr	r0, [r0, #4]
   18f94:	lsl	r0, r0, #3
   18f98:	bl	33b44 <__assert_fail@plt+0x22640>
   18f9c:	ldr	r1, [fp, #-8]
   18fa0:	str	r0, [r1]
   18fa4:	movw	r0, #1
   18fa8:	str	r0, [fp, #-16]
   18fac:	ldr	r0, [fp, #-16]
   18fb0:	ldr	r1, [fp, #-12]
   18fb4:	cmp	r0, r1
   18fb8:	bls	18fc0 <__assert_fail@plt+0x7abc>
   18fbc:	b	18fd4 <__assert_fail@plt+0x7ad0>
   18fc0:	b	18fc4 <__assert_fail@plt+0x7ac0>
   18fc4:	ldr	r0, [fp, #-16]
   18fc8:	lsl	r0, r0, #1
   18fcc:	str	r0, [fp, #-16]
   18fd0:	b	18fac <__assert_fail@plt+0x7aa8>
   18fd4:	ldr	r1, [fp, #-16]
   18fd8:	movw	r0, #12
   18fdc:	bl	33aa8 <__assert_fail@plt+0x225a4>
   18fe0:	ldr	r1, [fp, #-8]
   18fe4:	str	r0, [r1, #32]
   18fe8:	ldr	r0, [fp, #-16]
   18fec:	sub	r0, r0, #1
   18ff0:	ldr	r1, [fp, #-8]
   18ff4:	str	r0, [r1, #68]	; 0x44
   18ff8:	bl	1133c <__ctype_get_mb_cur_max@plt>
   18ffc:	ldr	r1, [fp, #-8]
   19000:	str	r0, [r1, #92]	; 0x5c
   19004:	movw	r0, #14
   19008:	bl	1148c <nl_langinfo@plt>
   1900c:	str	r0, [fp, #-20]	; 0xffffffec
   19010:	ldr	r0, [fp, #-20]	; 0xffffffec
   19014:	ldrb	r0, [r0]
   19018:	cmp	r0, #85	; 0x55
   1901c:	beq	19030 <__assert_fail@plt+0x7b2c>
   19020:	ldr	r0, [fp, #-20]	; 0xffffffec
   19024:	ldrb	r0, [r0]
   19028:	cmp	r0, #117	; 0x75
   1902c:	bne	190c0 <__assert_fail@plt+0x7bbc>
   19030:	ldr	r0, [fp, #-20]	; 0xffffffec
   19034:	ldrb	r0, [r0, #1]
   19038:	cmp	r0, #84	; 0x54
   1903c:	beq	19050 <__assert_fail@plt+0x7b4c>
   19040:	ldr	r0, [fp, #-20]	; 0xffffffec
   19044:	ldrb	r0, [r0, #1]
   19048:	cmp	r0, #116	; 0x74
   1904c:	bne	190c0 <__assert_fail@plt+0x7bbc>
   19050:	ldr	r0, [fp, #-20]	; 0xffffffec
   19054:	ldrb	r0, [r0, #2]
   19058:	cmp	r0, #70	; 0x46
   1905c:	beq	19070 <__assert_fail@plt+0x7b6c>
   19060:	ldr	r0, [fp, #-20]	; 0xffffffec
   19064:	ldrb	r0, [r0, #2]
   19068:	cmp	r0, #102	; 0x66
   1906c:	bne	190c0 <__assert_fail@plt+0x7bbc>
   19070:	ldr	r0, [fp, #-20]	; 0xffffffec
   19074:	add	r0, r0, #3
   19078:	ldr	r1, [fp, #-20]	; 0xffffffec
   1907c:	ldrb	r1, [r1, #3]
   19080:	cmp	r1, #45	; 0x2d
   19084:	movw	r1, #0
   19088:	moveq	r1, #1
   1908c:	and	r1, r1, #1
   19090:	add	r0, r0, r1
   19094:	movw	r1, #32980	; 0x80d4
   19098:	movt	r1, #3
   1909c:	bl	11234 <strcmp@plt>
   190a0:	cmp	r0, #0
   190a4:	bne	190c0 <__assert_fail@plt+0x7bbc>
   190a8:	ldr	r0, [fp, #-8]
   190ac:	ldrb	r1, [r0, #88]	; 0x58
   190b0:	bic	r1, r1, #4
   190b4:	movw	r2, #4
   190b8:	orr	r1, r1, r2
   190bc:	strb	r1, [r0, #88]	; 0x58
   190c0:	ldr	r0, [fp, #-8]
   190c4:	ldrb	r1, [r0, #88]	; 0x58
   190c8:	bic	r1, r1, #8
   190cc:	strb	r1, [r0, #88]	; 0x58
   190d0:	ldr	r0, [fp, #-8]
   190d4:	ldr	r0, [r0, #92]	; 0x5c
   190d8:	cmp	r0, #1
   190dc:	ble	19224 <__assert_fail@plt+0x7d20>
   190e0:	ldr	r0, [fp, #-8]
   190e4:	ldrb	r0, [r0, #88]	; 0x58
   190e8:	ubfx	r0, r0, #2, #1
   190ec:	and	r0, r0, #255	; 0xff
   190f0:	cmp	r0, #0
   190f4:	beq	1910c <__assert_fail@plt+0x7c08>
   190f8:	ldr	r0, [fp, #-8]
   190fc:	movw	r1, #33544	; 0x8308
   19100:	movt	r1, #3
   19104:	str	r1, [r0, #60]	; 0x3c
   19108:	b	19220 <__assert_fail@plt+0x7d1c>
   1910c:	movw	r0, #32
   19110:	movw	r1, #1
   19114:	bl	33aa8 <__assert_fail@plt+0x225a4>
   19118:	ldr	r1, [fp, #-8]
   1911c:	str	r0, [r1, #60]	; 0x3c
   19120:	ldr	r0, [fp, #-8]
   19124:	ldr	r0, [r0, #60]	; 0x3c
   19128:	movw	r1, #0
   1912c:	cmp	r0, r1
   19130:	bne	19140 <__assert_fail@plt+0x7c3c>
   19134:	movw	r0, #12
   19138:	str	r0, [fp, #-4]
   1913c:	b	1927c <__assert_fail@plt+0x7d78>
   19140:	movw	r0, #0
   19144:	str	r0, [fp, #-32]	; 0xffffffe0
   19148:	str	r0, [fp, #-40]	; 0xffffffd8
   1914c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19150:	cmp	r0, #8
   19154:	bge	1921c <__assert_fail@plt+0x7d18>
   19158:	movw	r0, #0
   1915c:	str	r0, [fp, #-36]	; 0xffffffdc
   19160:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19164:	cmp	r0, #32
   19168:	bge	19208 <__assert_fail@plt+0x7d04>
   1916c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19170:	bl	1142c <btowc@plt>
   19174:	str	r0, [fp, #-44]	; 0xffffffd4
   19178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1917c:	cmn	r0, #1
   19180:	beq	191ac <__assert_fail@plt+0x7ca8>
   19184:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19188:	mov	r1, #1
   1918c:	lsl	r0, r1, r0
   19190:	ldr	r1, [fp, #-8]
   19194:	ldr	r1, [r1, #60]	; 0x3c
   19198:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1919c:	add	r1, r1, r2, lsl #2
   191a0:	ldr	r2, [r1]
   191a4:	orr	r0, r2, r0
   191a8:	str	r0, [r1]
   191ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191b0:	mvn	r1, #127	; 0x7f
   191b4:	and	r0, r0, r1
   191b8:	cmp	r0, #0
   191bc:	bne	191e8 <__assert_fail@plt+0x7ce4>
   191c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   191c8:	cmp	r0, r1
   191cc:	beq	191e8 <__assert_fail@plt+0x7ce4>
   191d0:	ldr	r0, [fp, #-8]
   191d4:	ldrb	r1, [r0, #88]	; 0x58
   191d8:	bic	r1, r1, #8
   191dc:	movw	r2, #8
   191e0:	orr	r1, r1, r2
   191e4:	strb	r1, [r0, #88]	; 0x58
   191e8:	b	191ec <__assert_fail@plt+0x7ce8>
   191ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   191f0:	add	r0, r0, #1
   191f4:	str	r0, [fp, #-36]	; 0xffffffdc
   191f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191fc:	add	r0, r0, #1
   19200:	str	r0, [fp, #-40]	; 0xffffffd8
   19204:	b	19160 <__assert_fail@plt+0x7c5c>
   19208:	b	1920c <__assert_fail@plt+0x7d08>
   1920c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19210:	add	r0, r0, #1
   19214:	str	r0, [fp, #-32]	; 0xffffffe0
   19218:	b	1914c <__assert_fail@plt+0x7c48>
   1921c:	b	19220 <__assert_fail@plt+0x7d1c>
   19220:	b	19224 <__assert_fail@plt+0x7d20>
   19224:	ldr	r0, [fp, #-8]
   19228:	ldr	r0, [r0]
   1922c:	movw	r1, #0
   19230:	cmp	r0, r1
   19234:	movw	r0, #1
   19238:	str	r0, [sp, #4]
   1923c:	beq	1925c <__assert_fail@plt+0x7d58>
   19240:	ldr	r0, [fp, #-8]
   19244:	ldr	r0, [r0, #32]
   19248:	movw	r1, #0
   1924c:	cmp	r0, r1
   19250:	movw	r0, #0
   19254:	moveq	r0, #1
   19258:	str	r0, [sp, #4]
   1925c:	ldr	r0, [sp, #4]
   19260:	tst	r0, #1
   19264:	beq	19274 <__assert_fail@plt+0x7d70>
   19268:	movw	r0, #12
   1926c:	str	r0, [fp, #-4]
   19270:	b	1927c <__assert_fail@plt+0x7d78>
   19274:	movw	r0, #0
   19278:	str	r0, [fp, #-4]
   1927c:	ldr	r0, [fp, #-4]
   19280:	mov	sp, fp
   19284:	pop	{fp, pc}
   19288:	svcvc	0x00ffffff
   1928c:	push	{fp, lr}
   19290:	mov	fp, sp
   19294:	sub	sp, sp, #48	; 0x30
   19298:	ldr	ip, [fp, #12]
   1929c:	ldr	lr, [fp, #8]
   192a0:	str	r0, [fp, #-8]
   192a4:	str	r1, [fp, #-12]
   192a8:	str	r2, [fp, #-16]
   192ac:	str	r3, [fp, #-20]	; 0xffffffec
   192b0:	and	r0, lr, #1
   192b4:	strb	r0, [fp, #-21]	; 0xffffffeb
   192b8:	ldr	r0, [fp, #-8]
   192bc:	movw	r1, #0
   192c0:	and	r1, r1, #255	; 0xff
   192c4:	movw	r2, #84	; 0x54
   192c8:	str	ip, [sp, #16]
   192cc:	bl	11420 <memset@plt>
   192d0:	ldr	r0, [fp, #-12]
   192d4:	ldr	r1, [fp, #-16]
   192d8:	ldr	r2, [fp, #-8]
   192dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   192e0:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   192e4:	ldr	lr, [fp, #12]
   192e8:	and	ip, ip, #1
   192ec:	str	ip, [sp]
   192f0:	str	lr, [sp, #4]
   192f4:	bl	1a148 <__assert_fail@plt+0x8c44>
   192f8:	ldr	r0, [fp, #-16]
   192fc:	cmp	r0, #0
   19300:	ble	19334 <__assert_fail@plt+0x7e30>
   19304:	ldr	r0, [fp, #-8]
   19308:	ldr	r1, [fp, #-16]
   1930c:	add	r1, r1, #1
   19310:	bl	1a24c <__assert_fail@plt+0x8d48>
   19314:	str	r0, [sp, #20]
   19318:	ldr	r0, [sp, #20]
   1931c:	cmp	r0, #0
   19320:	beq	19330 <__assert_fail@plt+0x7e2c>
   19324:	ldr	r0, [sp, #20]
   19328:	str	r0, [fp, #-4]
   1932c:	b	19494 <__assert_fail@plt+0x7f90>
   19330:	b	19334 <__assert_fail@plt+0x7e30>
   19334:	ldr	r0, [fp, #-8]
   19338:	ldrb	r0, [r0, #75]	; 0x4b
   1933c:	cmp	r0, #0
   19340:	beq	19354 <__assert_fail@plt+0x7e50>
   19344:	ldr	r0, [fp, #-8]
   19348:	ldr	r0, [r0, #4]
   1934c:	str	r0, [sp, #12]
   19350:	b	1935c <__assert_fail@plt+0x7e58>
   19354:	ldr	r0, [fp, #-12]
   19358:	str	r0, [sp, #12]
   1935c:	ldr	r0, [sp, #12]
   19360:	ldr	r1, [fp, #-8]
   19364:	str	r0, [r1, #4]
   19368:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1936c:	tst	r0, #1
   19370:	beq	1942c <__assert_fail@plt+0x7f28>
   19374:	ldr	r0, [fp, #12]
   19378:	ldr	r0, [r0, #92]	; 0x5c
   1937c:	cmp	r0, #1
   19380:	ble	19420 <__assert_fail@plt+0x7f1c>
   19384:	b	19388 <__assert_fail@plt+0x7e84>
   19388:	ldr	r0, [fp, #-8]
   1938c:	bl	1a3a4 <__assert_fail@plt+0x8ea0>
   19390:	str	r0, [sp, #20]
   19394:	ldr	r0, [sp, #20]
   19398:	cmp	r0, #0
   1939c:	beq	193ac <__assert_fail@plt+0x7ea8>
   193a0:	ldr	r0, [sp, #20]
   193a4:	str	r0, [fp, #-4]
   193a8:	b	19494 <__assert_fail@plt+0x7f90>
   193ac:	ldr	r0, [fp, #-8]
   193b0:	ldr	r0, [r0, #32]
   193b4:	ldr	r1, [fp, #-16]
   193b8:	cmp	r0, r1
   193bc:	blt	193c4 <__assert_fail@plt+0x7ec0>
   193c0:	b	1941c <__assert_fail@plt+0x7f18>
   193c4:	ldr	r0, [fp, #-8]
   193c8:	ldr	r0, [r0, #36]	; 0x24
   193cc:	ldr	r1, [fp, #-8]
   193d0:	ldr	r1, [r1, #28]
   193d4:	ldr	r2, [fp, #12]
   193d8:	ldr	r2, [r2, #92]	; 0x5c
   193dc:	add	r1, r1, r2
   193e0:	cmp	r0, r1
   193e4:	ble	193ec <__assert_fail@plt+0x7ee8>
   193e8:	b	1941c <__assert_fail@plt+0x7f18>
   193ec:	ldr	r0, [fp, #-8]
   193f0:	ldr	r1, [r0, #36]	; 0x24
   193f4:	lsl	r1, r1, #1
   193f8:	bl	1a24c <__assert_fail@plt+0x8d48>
   193fc:	str	r0, [sp, #20]
   19400:	ldr	r0, [sp, #20]
   19404:	cmp	r0, #0
   19408:	beq	19418 <__assert_fail@plt+0x7f14>
   1940c:	ldr	r0, [sp, #20]
   19410:	str	r0, [fp, #-4]
   19414:	b	19494 <__assert_fail@plt+0x7f90>
   19418:	b	19388 <__assert_fail@plt+0x7e84>
   1941c:	b	19428 <__assert_fail@plt+0x7f24>
   19420:	ldr	r0, [fp, #-8]
   19424:	bl	1ae50 <__assert_fail@plt+0x994c>
   19428:	b	1948c <__assert_fail@plt+0x7f88>
   1942c:	ldr	r0, [fp, #12]
   19430:	ldr	r0, [r0, #92]	; 0x5c
   19434:	cmp	r0, #1
   19438:	ble	19448 <__assert_fail@plt+0x7f44>
   1943c:	ldr	r0, [fp, #-8]
   19440:	bl	1af54 <__assert_fail@plt+0x9a50>
   19444:	b	19488 <__assert_fail@plt+0x7f84>
   19448:	ldr	r0, [fp, #-20]	; 0xffffffec
   1944c:	movw	r1, #0
   19450:	cmp	r0, r1
   19454:	beq	19464 <__assert_fail@plt+0x7f60>
   19458:	ldr	r0, [fp, #-8]
   1945c:	bl	1b294 <__assert_fail@plt+0x9d90>
   19460:	b	19484 <__assert_fail@plt+0x7f80>
   19464:	ldr	r0, [fp, #-8]
   19468:	ldr	r0, [r0, #36]	; 0x24
   1946c:	ldr	r1, [fp, #-8]
   19470:	str	r0, [r1, #28]
   19474:	ldr	r0, [fp, #-8]
   19478:	ldr	r0, [r0, #36]	; 0x24
   1947c:	ldr	r1, [fp, #-8]
   19480:	str	r0, [r1, #32]
   19484:	b	19488 <__assert_fail@plt+0x7f84>
   19488:	b	1948c <__assert_fail@plt+0x7f88>
   1948c:	movw	r0, #0
   19490:	str	r0, [fp, #-4]
   19494:	ldr	r0, [fp, #-4]
   19498:	mov	sp, fp
   1949c:	pop	{fp, pc}
   194a0:	push	{fp, lr}
   194a4:	mov	fp, sp
   194a8:	sub	sp, sp, #16
   194ac:	str	r0, [fp, #-4]
   194b0:	ldr	r0, [fp, #-4]
   194b4:	ldr	r0, [r0]
   194b8:	str	r0, [sp, #8]
   194bc:	ldr	r0, [sp, #8]
   194c0:	ldr	r0, [r0, #56]	; 0x38
   194c4:	str	r0, [sp, #4]
   194c8:	ldr	r0, [sp, #4]
   194cc:	movw	r1, #0
   194d0:	cmp	r0, r1
   194d4:	beq	194f8 <__assert_fail@plt+0x7ff4>
   194d8:	ldr	r0, [sp, #4]
   194dc:	ldr	r0, [r0]
   194e0:	str	r0, [sp]
   194e4:	ldr	r0, [sp, #4]
   194e8:	bl	35268 <__assert_fail@plt+0x23d64>
   194ec:	ldr	r0, [sp]
   194f0:	str	r0, [sp, #4]
   194f4:	b	194c8 <__assert_fail@plt+0x7fc4>
   194f8:	ldr	r0, [sp, #8]
   194fc:	movw	r1, #0
   19500:	str	r1, [r0, #56]	; 0x38
   19504:	ldr	r0, [sp, #8]
   19508:	movw	r2, #31
   1950c:	str	r2, [r0, #64]	; 0x40
   19510:	ldr	r0, [sp, #8]
   19514:	str	r1, [r0, #52]	; 0x34
   19518:	ldr	r0, [sp, #8]
   1951c:	ldr	r0, [r0, #16]
   19520:	bl	35268 <__assert_fail@plt+0x23d64>
   19524:	ldr	r0, [sp, #8]
   19528:	movw	r1, #0
   1952c:	str	r1, [r0, #16]
   19530:	mov	sp, fp
   19534:	pop	{fp, pc}
   19538:	push	{fp, lr}
   1953c:	mov	fp, sp
   19540:	sub	sp, sp, #8
   19544:	str	r0, [sp, #4]
   19548:	ldr	r0, [sp, #4]
   1954c:	ldr	r0, [r0, #8]
   19550:	bl	35268 <__assert_fail@plt+0x23d64>
   19554:	ldr	r0, [sp, #4]
   19558:	ldr	r0, [r0, #12]
   1955c:	bl	35268 <__assert_fail@plt+0x23d64>
   19560:	ldr	r0, [sp, #4]
   19564:	ldrsb	r0, [r0, #75]	; 0x4b
   19568:	cmp	r0, #0
   1956c:	beq	1957c <__assert_fail@plt+0x8078>
   19570:	ldr	r0, [sp, #4]
   19574:	ldr	r0, [r0, #4]
   19578:	bl	35268 <__assert_fail@plt+0x23d64>
   1957c:	mov	sp, fp
   19580:	pop	{fp, pc}
   19584:	push	{fp, lr}
   19588:	mov	fp, sp
   1958c:	sub	sp, sp, #72	; 0x48
   19590:	str	r0, [fp, #-8]
   19594:	str	r1, [fp, #-12]
   19598:	str	r2, [fp, #-16]
   1959c:	str	r3, [fp, #-20]	; 0xffffffec
   195a0:	ldr	r0, [fp, #-12]
   195a4:	ldr	r0, [r0]
   195a8:	str	r0, [fp, #-24]	; 0xffffffe8
   195ac:	ldr	r0, [fp, #-16]
   195b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195b4:	str	r0, [r1, #128]	; 0x80
   195b8:	ldr	r1, [fp, #-8]
   195bc:	ldr	r0, [fp, #-16]
   195c0:	orr	r2, r0, #8388608	; 0x800000
   195c4:	add	r0, sp, #28
   195c8:	bl	1b370 <__assert_fail@plt+0x9e6c>
   195cc:	ldr	r0, [fp, #-8]
   195d0:	ldr	r1, [fp, #-12]
   195d4:	ldr	r3, [fp, #-16]
   195d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   195dc:	add	lr, sp, #28
   195e0:	str	r2, [sp, #24]
   195e4:	mov	r2, lr
   195e8:	movw	lr, #0
   195ec:	str	lr, [sp]
   195f0:	ldr	lr, [sp, #24]
   195f4:	str	lr, [sp, #4]
   195f8:	bl	1b3b0 <__assert_fail@plt+0x9eac>
   195fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19600:	ldr	r0, [fp, #-20]	; 0xffffffec
   19604:	ldr	r0, [r0]
   19608:	cmp	r0, #0
   1960c:	movw	r0, #0
   19610:	str	r0, [sp, #20]
   19614:	beq	19630 <__assert_fail@plt+0x812c>
   19618:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1961c:	movw	r1, #0
   19620:	cmp	r0, r1
   19624:	movw	r0, #0
   19628:	moveq	r0, #1
   1962c:	str	r0, [sp, #20]
   19630:	ldr	r0, [sp, #20]
   19634:	tst	r0, #1
   19638:	beq	19648 <__assert_fail@plt+0x8144>
   1963c:	movw	r0, #0
   19640:	str	r0, [fp, #-4]
   19644:	b	196f4 <__assert_fail@plt+0x81f0>
   19648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1964c:	movw	r1, #0
   19650:	str	r1, [sp, #16]
   19654:	ldr	r2, [sp, #16]
   19658:	movw	r3, #2
   1965c:	bl	1b608 <__assert_fail@plt+0xa104>
   19660:	str	r0, [fp, #-32]	; 0xffffffe0
   19664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19668:	movw	r1, #0
   1966c:	cmp	r0, r1
   19670:	beq	19690 <__assert_fail@plt+0x818c>
   19674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1967c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19680:	movw	r3, #16
   19684:	bl	1b608 <__assert_fail@plt+0xa104>
   19688:	str	r0, [sp, #36]	; 0x24
   1968c:	b	19698 <__assert_fail@plt+0x8194>
   19690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19694:	str	r0, [sp, #36]	; 0x24
   19698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1969c:	movw	r1, #0
   196a0:	cmp	r0, r1
   196a4:	movw	r0, #1
   196a8:	str	r0, [sp, #12]
   196ac:	beq	196c8 <__assert_fail@plt+0x81c4>
   196b0:	ldr	r0, [sp, #36]	; 0x24
   196b4:	movw	r1, #0
   196b8:	cmp	r0, r1
   196bc:	movw	r0, #0
   196c0:	moveq	r0, #1
   196c4:	str	r0, [sp, #12]
   196c8:	ldr	r0, [sp, #12]
   196cc:	tst	r0, #1
   196d0:	beq	196ec <__assert_fail@plt+0x81e8>
   196d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   196d8:	movw	r1, #12
   196dc:	str	r1, [r0]
   196e0:	movw	r0, #0
   196e4:	str	r0, [fp, #-4]
   196e8:	b	196f4 <__assert_fail@plt+0x81f0>
   196ec:	ldr	r0, [sp, #36]	; 0x24
   196f0:	str	r0, [fp, #-4]
   196f4:	ldr	r0, [fp, #-4]
   196f8:	mov	sp, fp
   196fc:	pop	{fp, pc}
   19700:	push	{fp, lr}
   19704:	mov	fp, sp
   19708:	sub	sp, sp, #48	; 0x30
   1970c:	str	r0, [fp, #-8]
   19710:	ldr	r0, [fp, #-8]
   19714:	ldr	r0, [r0]
   19718:	str	r0, [fp, #-12]
   1971c:	ldr	r0, [fp, #-12]
   19720:	ldr	r0, [r0, #4]
   19724:	lsl	r0, r0, #2
   19728:	bl	33b44 <__assert_fail@plt+0x22640>
   1972c:	ldr	lr, [fp, #-12]
   19730:	str	r0, [lr, #12]
   19734:	ldr	r0, [fp, #-12]
   19738:	ldr	r0, [r0, #4]
   1973c:	lsl	r0, r0, #2
   19740:	bl	33b44 <__assert_fail@plt+0x22640>
   19744:	ldr	lr, [fp, #-12]
   19748:	str	r0, [lr, #16]
   1974c:	ldr	r0, [fp, #-12]
   19750:	ldr	r0, [r0, #4]
   19754:	movw	lr, #12
   19758:	mul	r0, r0, lr
   1975c:	bl	33b44 <__assert_fail@plt+0x22640>
   19760:	ldr	lr, [fp, #-12]
   19764:	str	r0, [lr, #20]
   19768:	ldr	r0, [fp, #-12]
   1976c:	ldr	r0, [r0, #4]
   19770:	movw	lr, #12
   19774:	mul	r0, r0, lr
   19778:	bl	33b44 <__assert_fail@plt+0x22640>
   1977c:	ldr	lr, [fp, #-12]
   19780:	str	r0, [lr, #24]
   19784:	ldr	r0, [fp, #-12]
   19788:	ldr	r0, [r0, #12]
   1978c:	movw	lr, #0
   19790:	cmp	r0, lr
   19794:	movw	r0, #1
   19798:	str	r0, [sp, #24]
   1979c:	beq	197f4 <__assert_fail@plt+0x82f0>
   197a0:	ldr	r0, [fp, #-12]
   197a4:	ldr	r0, [r0, #16]
   197a8:	movw	r1, #0
   197ac:	cmp	r0, r1
   197b0:	movw	r0, #1
   197b4:	str	r0, [sp, #24]
   197b8:	beq	197f4 <__assert_fail@plt+0x82f0>
   197bc:	ldr	r0, [fp, #-12]
   197c0:	ldr	r0, [r0, #20]
   197c4:	movw	r1, #0
   197c8:	cmp	r0, r1
   197cc:	movw	r0, #1
   197d0:	str	r0, [sp, #24]
   197d4:	beq	197f4 <__assert_fail@plt+0x82f0>
   197d8:	ldr	r0, [fp, #-12]
   197dc:	ldr	r0, [r0, #24]
   197e0:	movw	r1, #0
   197e4:	cmp	r0, r1
   197e8:	movw	r0, #0
   197ec:	moveq	r0, #1
   197f0:	str	r0, [sp, #24]
   197f4:	ldr	r0, [sp, #24]
   197f8:	tst	r0, #1
   197fc:	beq	1980c <__assert_fail@plt+0x8308>
   19800:	movw	r0, #12
   19804:	str	r0, [fp, #-4]
   19808:	b	19acc <__assert_fail@plt+0x85c8>
   1980c:	ldr	r0, [fp, #-8]
   19810:	ldr	r0, [r0, #24]
   19814:	lsl	r0, r0, #2
   19818:	bl	33b44 <__assert_fail@plt+0x22640>
   1981c:	ldr	lr, [fp, #-12]
   19820:	str	r0, [lr, #132]	; 0x84
   19824:	ldr	r0, [fp, #-12]
   19828:	ldr	r0, [r0, #132]	; 0x84
   1982c:	movw	lr, #0
   19830:	cmp	r0, lr
   19834:	beq	19928 <__assert_fail@plt+0x8424>
   19838:	movw	r0, #0
   1983c:	str	r0, [fp, #-20]	; 0xffffffec
   19840:	ldr	r0, [fp, #-20]	; 0xffffffec
   19844:	ldr	r1, [fp, #-8]
   19848:	ldr	r1, [r1, #24]
   1984c:	cmp	r0, r1
   19850:	bcs	1987c <__assert_fail@plt+0x8378>
   19854:	ldr	r0, [fp, #-20]	; 0xffffffec
   19858:	mov	r1, r0
   1985c:	ldr	r2, [fp, #-12]
   19860:	ldr	r2, [r2, #132]	; 0x84
   19864:	add	r0, r2, r0, lsl #2
   19868:	str	r1, [r0]
   1986c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19870:	add	r0, r0, #1
   19874:	str	r0, [fp, #-20]	; 0xffffffec
   19878:	b	19840 <__assert_fail@plt+0x833c>
   1987c:	ldr	r0, [fp, #-12]
   19880:	ldr	r0, [r0, #52]	; 0x34
   19884:	ldr	r1, [fp, #-12]
   19888:	movw	r2, #3860	; 0xf14
   1988c:	movt	r2, #2
   19890:	str	r1, [sp, #20]
   19894:	mov	r1, r2
   19898:	ldr	r2, [sp, #20]
   1989c:	bl	20df8 <__assert_fail@plt+0xf8f4>
   198a0:	movw	r1, #0
   198a4:	str	r1, [fp, #-20]	; 0xffffffec
   198a8:	str	r0, [sp, #16]
   198ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   198b0:	ldr	r1, [fp, #-8]
   198b4:	ldr	r1, [r1, #24]
   198b8:	cmp	r0, r1
   198bc:	bcs	198f8 <__assert_fail@plt+0x83f4>
   198c0:	ldr	r0, [fp, #-12]
   198c4:	ldr	r0, [r0, #132]	; 0x84
   198c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   198cc:	add	r0, r0, r1, lsl #2
   198d0:	ldr	r0, [r0]
   198d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   198d8:	cmp	r0, r1
   198dc:	beq	198e4 <__assert_fail@plt+0x83e0>
   198e0:	b	198f8 <__assert_fail@plt+0x83f4>
   198e4:	b	198e8 <__assert_fail@plt+0x83e4>
   198e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   198ec:	add	r0, r0, #1
   198f0:	str	r0, [fp, #-20]	; 0xffffffec
   198f4:	b	198ac <__assert_fail@plt+0x83a8>
   198f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   198fc:	ldr	r1, [fp, #-8]
   19900:	ldr	r1, [r1, #24]
   19904:	cmp	r0, r1
   19908:	bne	19924 <__assert_fail@plt+0x8420>
   1990c:	ldr	r0, [fp, #-12]
   19910:	ldr	r0, [r0, #132]	; 0x84
   19914:	bl	35268 <__assert_fail@plt+0x23d64>
   19918:	ldr	r0, [fp, #-12]
   1991c:	movw	lr, #0
   19920:	str	lr, [r0, #132]	; 0x84
   19924:	b	19928 <__assert_fail@plt+0x8424>
   19928:	ldr	r0, [fp, #-12]
   1992c:	ldr	r0, [r0, #52]	; 0x34
   19930:	ldr	r1, [fp, #-8]
   19934:	movw	r2, #4232	; 0x1088
   19938:	movt	r2, #2
   1993c:	str	r1, [sp, #12]
   19940:	mov	r1, r2
   19944:	ldr	r2, [sp, #12]
   19948:	bl	1ca0c <__assert_fail@plt+0xb508>
   1994c:	str	r0, [fp, #-16]
   19950:	ldr	r0, [fp, #-16]
   19954:	cmp	r0, #0
   19958:	beq	19968 <__assert_fail@plt+0x8464>
   1995c:	ldr	r0, [fp, #-16]
   19960:	str	r0, [fp, #-4]
   19964:	b	19acc <__assert_fail@plt+0x85c8>
   19968:	ldr	r0, [fp, #-12]
   1996c:	ldr	r0, [r0, #52]	; 0x34
   19970:	ldr	r1, [fp, #-12]
   19974:	movw	r2, #4500	; 0x1194
   19978:	movt	r2, #2
   1997c:	str	r1, [sp, #8]
   19980:	mov	r1, r2
   19984:	ldr	r2, [sp, #8]
   19988:	bl	1ca0c <__assert_fail@plt+0xb508>
   1998c:	str	r0, [fp, #-16]
   19990:	ldr	r0, [fp, #-16]
   19994:	cmp	r0, #0
   19998:	beq	199a8 <__assert_fail@plt+0x84a4>
   1999c:	ldr	r0, [fp, #-16]
   199a0:	str	r0, [fp, #-4]
   199a4:	b	19acc <__assert_fail@plt+0x85c8>
   199a8:	ldr	r0, [fp, #-12]
   199ac:	ldr	r0, [r0, #52]	; 0x34
   199b0:	ldr	r1, [fp, #-12]
   199b4:	movw	r2, #4772	; 0x12a4
   199b8:	movt	r2, #2
   199bc:	str	r1, [sp, #4]
   199c0:	mov	r1, r2
   199c4:	ldr	r2, [sp, #4]
   199c8:	bl	20df8 <__assert_fail@plt+0xf8f4>
   199cc:	ldr	r1, [fp, #-12]
   199d0:	ldr	r1, [r1, #52]	; 0x34
   199d4:	ldr	r2, [fp, #-12]
   199d8:	str	r0, [sp]
   199dc:	mov	r0, r1
   199e0:	movw	r1, #4992	; 0x1380
   199e4:	movt	r1, #2
   199e8:	bl	20df8 <__assert_fail@plt+0xf8f4>
   199ec:	str	r0, [fp, #-16]
   199f0:	ldr	r0, [fp, #-16]
   199f4:	cmp	r0, #0
   199f8:	beq	19a08 <__assert_fail@plt+0x8504>
   199fc:	ldr	r0, [fp, #-16]
   19a00:	str	r0, [fp, #-4]
   19a04:	b	19acc <__assert_fail@plt+0x85c8>
   19a08:	ldr	r0, [fp, #-12]
   19a0c:	bl	215e8 <__assert_fail@plt+0x100e4>
   19a10:	str	r0, [fp, #-16]
   19a14:	ldr	r0, [fp, #-16]
   19a18:	cmp	r0, #0
   19a1c:	beq	19a2c <__assert_fail@plt+0x8528>
   19a20:	ldr	r0, [fp, #-16]
   19a24:	str	r0, [fp, #-4]
   19a28:	b	19acc <__assert_fail@plt+0x85c8>
   19a2c:	ldr	r0, [fp, #-8]
   19a30:	ldrb	r0, [r0, #28]
   19a34:	ubfx	r0, r0, #4, #1
   19a38:	and	r0, r0, #255	; 0xff
   19a3c:	cmp	r0, #0
   19a40:	bne	19a6c <__assert_fail@plt+0x8568>
   19a44:	ldr	r0, [fp, #-8]
   19a48:	ldr	r0, [r0, #24]
   19a4c:	cmp	r0, #0
   19a50:	bls	19a6c <__assert_fail@plt+0x8568>
   19a54:	ldr	r0, [fp, #-12]
   19a58:	ldrb	r0, [r0, #88]	; 0x58
   19a5c:	and	r0, r0, #1
   19a60:	and	r0, r0, #255	; 0xff
   19a64:	cmp	r0, #0
   19a68:	bne	19a7c <__assert_fail@plt+0x8578>
   19a6c:	ldr	r0, [fp, #-12]
   19a70:	ldr	r0, [r0, #76]	; 0x4c
   19a74:	cmp	r0, #0
   19a78:	beq	19ac4 <__assert_fail@plt+0x85c0>
   19a7c:	ldr	r0, [fp, #-12]
   19a80:	ldr	r0, [r0, #8]
   19a84:	movw	r1, #12
   19a88:	mul	r0, r0, r1
   19a8c:	bl	33b44 <__assert_fail@plt+0x22640>
   19a90:	ldr	r1, [fp, #-12]
   19a94:	str	r0, [r1, #28]
   19a98:	ldr	r0, [fp, #-12]
   19a9c:	ldr	r0, [r0, #28]
   19aa0:	movw	r1, #0
   19aa4:	cmp	r0, r1
   19aa8:	bne	19ab8 <__assert_fail@plt+0x85b4>
   19aac:	movw	r0, #12
   19ab0:	str	r0, [fp, #-4]
   19ab4:	b	19acc <__assert_fail@plt+0x85c8>
   19ab8:	ldr	r0, [fp, #-12]
   19abc:	bl	21730 <__assert_fail@plt+0x1022c>
   19ac0:	str	r0, [fp, #-16]
   19ac4:	ldr	r0, [fp, #-16]
   19ac8:	str	r0, [fp, #-4]
   19acc:	ldr	r0, [fp, #-4]
   19ad0:	mov	sp, fp
   19ad4:	pop	{fp, pc}
   19ad8:	push	{fp, lr}
   19adc:	mov	fp, sp
   19ae0:	sub	sp, sp, #32
   19ae4:	str	r0, [fp, #-4]
   19ae8:	movw	r0, #0
   19aec:	strb	r0, [fp, #-13]
   19af0:	strb	r0, [fp, #-14]
   19af4:	movw	r0, #0
   19af8:	str	r0, [fp, #-8]
   19afc:	ldr	r0, [fp, #-8]
   19b00:	ldr	r1, [fp, #-4]
   19b04:	ldr	r1, [r1, #8]
   19b08:	cmp	r0, r1
   19b0c:	bcs	19c8c <__assert_fail@plt+0x8788>
   19b10:	ldr	r0, [fp, #-4]
   19b14:	ldr	r0, [r0]
   19b18:	ldr	r1, [fp, #-8]
   19b1c:	add	r0, r0, r1, lsl #3
   19b20:	ldrb	r0, [r0, #4]
   19b24:	sub	r0, r0, #1
   19b28:	cmp	r0, #11
   19b2c:	str	r0, [sp, #8]
   19b30:	bhi	19c74 <__assert_fail@plt+0x8770>
   19b34:	add	r0, pc, #8
   19b38:	ldr	r1, [sp, #8]
   19b3c:	ldr	r0, [r0, r1, lsl #2]
   19b40:	mov	pc, r0
   19b44:	andeq	r9, r1, r4, ror fp
   19b48:	andeq	r9, r1, r4, lsl #24
   19b4c:	andeq	r9, r1, ip, lsl #24
   19b50:	andeq	r9, r1, r4, lsl #24
   19b54:	strdeq	r9, [r1], -r8
   19b58:	andeq	r9, r1, r8, lsl #24
   19b5c:	andeq	r9, r1, r4, ror ip
   19b60:	andeq	r9, r1, r4, lsl #24
   19b64:	andeq	r9, r1, r4, lsl #24
   19b68:	andeq	r9, r1, r4, lsl #24
   19b6c:	andeq	r9, r1, r4, lsl #24
   19b70:	muleq	r1, ip, fp
   19b74:	ldr	r0, [fp, #-4]
   19b78:	ldr	r0, [r0]
   19b7c:	ldr	r1, [fp, #-8]
   19b80:	add	r0, r0, r1, lsl #3
   19b84:	ldrb	r0, [r0]
   19b88:	cmp	r0, #128	; 0x80
   19b8c:	blt	19b98 <__assert_fail@plt+0x8694>
   19b90:	movw	r0, #1
   19b94:	strb	r0, [fp, #-13]
   19b98:	b	19c78 <__assert_fail@plt+0x8774>
   19b9c:	ldr	r0, [fp, #-4]
   19ba0:	ldr	r0, [r0]
   19ba4:	ldr	r1, [fp, #-8]
   19ba8:	ldr	r0, [r0, r1, lsl #3]
   19bac:	cmp	r0, #16
   19bb0:	str	r0, [sp, #4]
   19bb4:	beq	19bec <__assert_fail@plt+0x86e8>
   19bb8:	b	19bbc <__assert_fail@plt+0x86b8>
   19bbc:	ldr	r0, [sp, #4]
   19bc0:	cmp	r0, #32
   19bc4:	beq	19bec <__assert_fail@plt+0x86e8>
   19bc8:	b	19bcc <__assert_fail@plt+0x86c8>
   19bcc:	ldr	r0, [sp, #4]
   19bd0:	cmp	r0, #64	; 0x40
   19bd4:	beq	19bec <__assert_fail@plt+0x86e8>
   19bd8:	b	19bdc <__assert_fail@plt+0x86d8>
   19bdc:	ldr	r0, [sp, #4]
   19be0:	cmp	r0, #128	; 0x80
   19be4:	bne	19bf0 <__assert_fail@plt+0x86ec>
   19be8:	b	19bec <__assert_fail@plt+0x86e8>
   19bec:	b	19bf4 <__assert_fail@plt+0x86f0>
   19bf0:	b	19ddc <__assert_fail@plt+0x88d8>
   19bf4:	b	19c78 <__assert_fail@plt+0x8774>
   19bf8:	movw	r0, #1
   19bfc:	strb	r0, [fp, #-14]
   19c00:	b	19c78 <__assert_fail@plt+0x8774>
   19c04:	b	19c78 <__assert_fail@plt+0x8774>
   19c08:	b	19ddc <__assert_fail@plt+0x88d8>
   19c0c:	movw	r0, #0
   19c10:	str	r0, [sp, #12]
   19c14:	movw	r0, #4
   19c18:	str	r0, [fp, #-12]
   19c1c:	ldr	r0, [fp, #-12]
   19c20:	cmp	r0, #8
   19c24:	bge	19c70 <__assert_fail@plt+0x876c>
   19c28:	ldr	r0, [fp, #-4]
   19c2c:	ldr	r0, [r0]
   19c30:	ldr	r1, [fp, #-8]
   19c34:	ldr	r0, [r0, r1, lsl #3]
   19c38:	ldr	r1, [fp, #-12]
   19c3c:	add	r0, r0, r1, lsl #2
   19c40:	ldr	r0, [r0]
   19c44:	ldr	r1, [sp, #12]
   19c48:	lsr	r0, r0, r1
   19c4c:	cmp	r0, #0
   19c50:	beq	19c58 <__assert_fail@plt+0x8754>
   19c54:	b	19ddc <__assert_fail@plt+0x88d8>
   19c58:	movw	r0, #0
   19c5c:	str	r0, [sp, #12]
   19c60:	ldr	r0, [fp, #-12]
   19c64:	add	r0, r0, #1
   19c68:	str	r0, [fp, #-12]
   19c6c:	b	19c1c <__assert_fail@plt+0x8718>
   19c70:	b	19c78 <__assert_fail@plt+0x8774>
   19c74:	bl	114e0 <abort@plt>
   19c78:	b	19c7c <__assert_fail@plt+0x8778>
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	add	r0, r0, #1
   19c84:	str	r0, [fp, #-8]
   19c88:	b	19afc <__assert_fail@plt+0x85f8>
   19c8c:	ldrb	r0, [fp, #-13]
   19c90:	tst	r0, #1
   19c94:	bne	19ca4 <__assert_fail@plt+0x87a0>
   19c98:	ldrb	r0, [fp, #-14]
   19c9c:	tst	r0, #1
   19ca0:	beq	19d80 <__assert_fail@plt+0x887c>
   19ca4:	movw	r0, #0
   19ca8:	str	r0, [fp, #-8]
   19cac:	ldr	r0, [fp, #-8]
   19cb0:	ldr	r1, [fp, #-4]
   19cb4:	ldr	r1, [r1, #8]
   19cb8:	cmp	r0, r1
   19cbc:	bcs	19d7c <__assert_fail@plt+0x8878>
   19cc0:	ldr	r0, [fp, #-4]
   19cc4:	ldr	r0, [r0]
   19cc8:	ldr	r1, [fp, #-8]
   19ccc:	add	r0, r0, r1, lsl #3
   19cd0:	ldr	r0, [r0, #4]
   19cd4:	and	r0, r0, #255	; 0xff
   19cd8:	cmp	r0, #1
   19cdc:	bne	19d20 <__assert_fail@plt+0x881c>
   19ce0:	ldr	r0, [fp, #-4]
   19ce4:	ldr	r0, [r0]
   19ce8:	ldr	r1, [fp, #-8]
   19cec:	add	r0, r0, r1, lsl #3
   19cf0:	ldrb	r0, [r0]
   19cf4:	cmp	r0, #128	; 0x80
   19cf8:	blt	19d20 <__assert_fail@plt+0x881c>
   19cfc:	ldr	r0, [fp, #-4]
   19d00:	ldr	r0, [r0]
   19d04:	ldr	r1, [fp, #-8]
   19d08:	add	r0, r0, r1, lsl #3
   19d0c:	ldr	r1, [r0, #4]
   19d10:	mvn	r2, #2097152	; 0x200000
   19d14:	and	r1, r1, r2
   19d18:	str	r1, [r0, #4]
   19d1c:	b	19d68 <__assert_fail@plt+0x8864>
   19d20:	ldr	r0, [fp, #-4]
   19d24:	ldr	r0, [r0]
   19d28:	ldr	r1, [fp, #-8]
   19d2c:	add	r0, r0, r1, lsl #3
   19d30:	ldr	r0, [r0, #4]
   19d34:	and	r0, r0, #255	; 0xff
   19d38:	cmp	r0, #5
   19d3c:	bne	19d64 <__assert_fail@plt+0x8860>
   19d40:	ldr	r0, [fp, #-4]
   19d44:	ldr	r0, [r0]
   19d48:	ldr	r1, [fp, #-8]
   19d4c:	add	r0, r0, r1, lsl #3
   19d50:	ldr	r1, [r0, #4]
   19d54:	mvn	r2, #255	; 0xff
   19d58:	and	r1, r1, r2
   19d5c:	orr	r1, r1, #7
   19d60:	str	r1, [r0, #4]
   19d64:	b	19d68 <__assert_fail@plt+0x8864>
   19d68:	b	19d6c <__assert_fail@plt+0x8868>
   19d6c:	ldr	r0, [fp, #-8]
   19d70:	add	r0, r0, #1
   19d74:	str	r0, [fp, #-8]
   19d78:	b	19cac <__assert_fail@plt+0x87a8>
   19d7c:	b	19d80 <__assert_fail@plt+0x887c>
   19d80:	ldr	r0, [fp, #-4]
   19d84:	mov	r1, #1
   19d88:	str	r1, [r0, #92]	; 0x5c
   19d8c:	ldr	r0, [fp, #-4]
   19d90:	ldrb	r1, [r0, #88]	; 0x58
   19d94:	bic	r1, r1, #4
   19d98:	strb	r1, [r0, #88]	; 0x58
   19d9c:	ldr	r0, [fp, #-4]
   19da0:	ldr	r0, [r0, #76]	; 0x4c
   19da4:	cmp	r0, #0
   19da8:	movw	r0, #1
   19dac:	str	r0, [sp]
   19db0:	bgt	19dbc <__assert_fail@plt+0x88b8>
   19db4:	ldrb	r0, [fp, #-14]
   19db8:	str	r0, [sp]
   19dbc:	ldr	r0, [sp]
   19dc0:	ldr	r1, [fp, #-4]
   19dc4:	and	r0, r0, #1
   19dc8:	ldrb	r2, [r1, #88]	; 0x58
   19dcc:	lsl	r0, r0, #1
   19dd0:	bic	r2, r2, #2
   19dd4:	orr	r0, r2, r0
   19dd8:	strb	r0, [r1, #88]	; 0x58
   19ddc:	mov	sp, fp
   19de0:	pop	{fp, pc}
   19de4:	push	{fp, lr}
   19de8:	mov	fp, sp
   19dec:	sub	sp, sp, #64	; 0x40
   19df0:	str	r0, [fp, #-8]
   19df4:	ldr	r0, [fp, #-8]
   19df8:	ldr	r0, [r0, #52]	; 0x34
   19dfc:	ldr	r0, [r0, #12]
   19e00:	ldr	r0, [r0, #28]
   19e04:	str	r0, [fp, #-12]
   19e08:	ldr	r0, [fp, #-12]
   19e0c:	ldr	r1, [fp, #-8]
   19e10:	str	r0, [r1, #72]	; 0x48
   19e14:	ldr	r0, [fp, #-8]
   19e18:	ldr	r0, [r0, #24]
   19e1c:	ldr	r1, [fp, #-12]
   19e20:	movw	r2, #12
   19e24:	mul	r1, r1, r2
   19e28:	add	r1, r0, r1
   19e2c:	add	r0, sp, #32
   19e30:	bl	23180 <__assert_fail@plt+0x11c7c>
   19e34:	str	r0, [fp, #-20]	; 0xffffffec
   19e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e3c:	cmp	r0, #0
   19e40:	beq	19e50 <__assert_fail@plt+0x894c>
   19e44:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e48:	str	r0, [fp, #-4]
   19e4c:	b	1a13c <__assert_fail@plt+0x8c38>
   19e50:	ldr	r0, [fp, #-8]
   19e54:	ldr	r0, [r0, #76]	; 0x4c
   19e58:	cmp	r0, #0
   19e5c:	ble	19ff0 <__assert_fail@plt+0x8aec>
   19e60:	movw	r0, #0
   19e64:	str	r0, [fp, #-16]
   19e68:	ldr	r0, [fp, #-16]
   19e6c:	ldr	r1, [sp, #36]	; 0x24
   19e70:	cmp	r0, r1
   19e74:	bge	19fec <__assert_fail@plt+0x8ae8>
   19e78:	ldr	r0, [sp, #40]	; 0x28
   19e7c:	ldr	r1, [fp, #-16]
   19e80:	ldr	r0, [r0, r1, lsl #2]
   19e84:	str	r0, [sp, #28]
   19e88:	ldr	r0, [fp, #-8]
   19e8c:	ldr	r0, [r0]
   19e90:	ldr	r1, [sp, #28]
   19e94:	add	r0, r0, r1, lsl #3
   19e98:	ldr	r0, [r0, #4]
   19e9c:	and	r0, r0, #255	; 0xff
   19ea0:	str	r0, [sp, #24]
   19ea4:	ldr	r0, [sp, #24]
   19ea8:	cmp	r0, #4
   19eac:	beq	19eb4 <__assert_fail@plt+0x89b0>
   19eb0:	b	19fdc <__assert_fail@plt+0x8ad8>
   19eb4:	movw	r0, #0
   19eb8:	str	r0, [sp, #20]
   19ebc:	ldr	r0, [sp, #20]
   19ec0:	ldr	r1, [sp, #36]	; 0x24
   19ec4:	cmp	r0, r1
   19ec8:	bge	19f38 <__assert_fail@plt+0x8a34>
   19ecc:	ldr	r0, [fp, #-8]
   19ed0:	ldr	r0, [r0]
   19ed4:	ldr	r1, [sp, #40]	; 0x28
   19ed8:	ldr	r2, [sp, #20]
   19edc:	ldr	r1, [r1, r2, lsl #2]
   19ee0:	add	r0, r0, r1, lsl #3
   19ee4:	str	r0, [sp, #16]
   19ee8:	ldr	r0, [sp, #16]
   19eec:	ldr	r0, [r0, #4]
   19ef0:	and	r0, r0, #255	; 0xff
   19ef4:	cmp	r0, #9
   19ef8:	bne	19f24 <__assert_fail@plt+0x8a20>
   19efc:	ldr	r0, [sp, #16]
   19f00:	ldr	r0, [r0]
   19f04:	ldr	r1, [fp, #-8]
   19f08:	ldr	r1, [r1]
   19f0c:	ldr	r2, [sp, #28]
   19f10:	add	r1, r1, r2, lsl #3
   19f14:	ldr	r1, [r1]
   19f18:	cmp	r0, r1
   19f1c:	bne	19f24 <__assert_fail@plt+0x8a20>
   19f20:	b	19f38 <__assert_fail@plt+0x8a34>
   19f24:	b	19f28 <__assert_fail@plt+0x8a24>
   19f28:	ldr	r0, [sp, #20]
   19f2c:	add	r0, r0, #1
   19f30:	str	r0, [sp, #20]
   19f34:	b	19ebc <__assert_fail@plt+0x89b8>
   19f38:	ldr	r0, [sp, #20]
   19f3c:	ldr	r1, [sp, #36]	; 0x24
   19f40:	cmp	r0, r1
   19f44:	bne	19f4c <__assert_fail@plt+0x8a48>
   19f48:	b	19fdc <__assert_fail@plt+0x8ad8>
   19f4c:	ldr	r0, [sp, #24]
   19f50:	cmp	r0, #4
   19f54:	bne	19fd8 <__assert_fail@plt+0x8ad4>
   19f58:	ldr	r0, [fp, #-8]
   19f5c:	ldr	r0, [r0, #20]
   19f60:	ldr	r1, [sp, #28]
   19f64:	movw	r2, #12
   19f68:	mul	r1, r1, r2
   19f6c:	add	r0, r0, r1
   19f70:	ldr	r0, [r0, #8]
   19f74:	ldr	r0, [r0]
   19f78:	str	r0, [sp, #12]
   19f7c:	ldr	r1, [sp, #12]
   19f80:	add	r0, sp, #32
   19f84:	bl	23254 <__assert_fail@plt+0x11d50>
   19f88:	cmp	r0, #0
   19f8c:	bne	19fd4 <__assert_fail@plt+0x8ad0>
   19f90:	ldr	r0, [fp, #-8]
   19f94:	ldr	r0, [r0, #24]
   19f98:	ldr	r1, [sp, #12]
   19f9c:	movw	r2, #12
   19fa0:	mul	r1, r1, r2
   19fa4:	add	r1, r0, r1
   19fa8:	add	r0, sp, #32
   19fac:	bl	228ac <__assert_fail@plt+0x113a8>
   19fb0:	str	r0, [sp, #8]
   19fb4:	ldr	r0, [sp, #8]
   19fb8:	cmp	r0, #0
   19fbc:	beq	19fcc <__assert_fail@plt+0x8ac8>
   19fc0:	ldr	r0, [sp, #8]
   19fc4:	str	r0, [fp, #-4]
   19fc8:	b	1a13c <__assert_fail@plt+0x8c38>
   19fcc:	movw	r0, #0
   19fd0:	str	r0, [fp, #-16]
   19fd4:	b	19fd8 <__assert_fail@plt+0x8ad4>
   19fd8:	b	19fdc <__assert_fail@plt+0x8ad8>
   19fdc:	ldr	r0, [fp, #-16]
   19fe0:	add	r0, r0, #1
   19fe4:	str	r0, [fp, #-16]
   19fe8:	b	19e68 <__assert_fail@plt+0x8964>
   19fec:	b	19ff0 <__assert_fail@plt+0x8aec>
   19ff0:	ldr	r1, [fp, #-8]
   19ff4:	sub	r0, fp, #20
   19ff8:	add	r2, sp, #32
   19ffc:	movw	r3, #0
   1a000:	bl	23344 <__assert_fail@plt+0x11e40>
   1a004:	ldr	r1, [fp, #-8]
   1a008:	str	r0, [r1, #36]	; 0x24
   1a00c:	ldr	r0, [fp, #-8]
   1a010:	ldr	r0, [r0, #36]	; 0x24
   1a014:	movw	r1, #0
   1a018:	cmp	r0, r1
   1a01c:	bne	1a02c <__assert_fail@plt+0x8b28>
   1a020:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a024:	str	r0, [fp, #-4]
   1a028:	b	1a13c <__assert_fail@plt+0x8c38>
   1a02c:	ldr	r0, [fp, #-8]
   1a030:	ldr	r0, [r0, #36]	; 0x24
   1a034:	ldrb	r0, [r0, #52]	; 0x34
   1a038:	lsr	r0, r0, #7
   1a03c:	and	r0, r0, #255	; 0xff
   1a040:	cmp	r0, #0
   1a044:	beq	1a10c <__assert_fail@plt+0x8c08>
   1a048:	ldr	r1, [fp, #-8]
   1a04c:	sub	r0, fp, #20
   1a050:	add	r2, sp, #32
   1a054:	movw	r3, #1
   1a058:	bl	23344 <__assert_fail@plt+0x11e40>
   1a05c:	ldr	r1, [fp, #-8]
   1a060:	str	r0, [r1, #40]	; 0x28
   1a064:	ldr	r1, [fp, #-8]
   1a068:	sub	r0, fp, #20
   1a06c:	add	r2, sp, #32
   1a070:	movw	r3, #2
   1a074:	bl	23344 <__assert_fail@plt+0x11e40>
   1a078:	ldr	r1, [fp, #-8]
   1a07c:	str	r0, [r1, #44]	; 0x2c
   1a080:	ldr	r1, [fp, #-8]
   1a084:	sub	r0, fp, #20
   1a088:	add	r2, sp, #32
   1a08c:	movw	r3, #6
   1a090:	bl	23344 <__assert_fail@plt+0x11e40>
   1a094:	ldr	r1, [fp, #-8]
   1a098:	str	r0, [r1, #48]	; 0x30
   1a09c:	ldr	r0, [fp, #-8]
   1a0a0:	ldr	r0, [r0, #40]	; 0x28
   1a0a4:	movw	r1, #0
   1a0a8:	cmp	r0, r1
   1a0ac:	movw	r0, #1
   1a0b0:	str	r0, [sp, #4]
   1a0b4:	beq	1a0f0 <__assert_fail@plt+0x8bec>
   1a0b8:	ldr	r0, [fp, #-8]
   1a0bc:	ldr	r0, [r0, #44]	; 0x2c
   1a0c0:	movw	r1, #0
   1a0c4:	cmp	r0, r1
   1a0c8:	movw	r0, #1
   1a0cc:	str	r0, [sp, #4]
   1a0d0:	beq	1a0f0 <__assert_fail@plt+0x8bec>
   1a0d4:	ldr	r0, [fp, #-8]
   1a0d8:	ldr	r0, [r0, #48]	; 0x30
   1a0dc:	movw	r1, #0
   1a0e0:	cmp	r0, r1
   1a0e4:	movw	r0, #0
   1a0e8:	moveq	r0, #1
   1a0ec:	str	r0, [sp, #4]
   1a0f0:	ldr	r0, [sp, #4]
   1a0f4:	tst	r0, #1
   1a0f8:	beq	1a108 <__assert_fail@plt+0x8c04>
   1a0fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a100:	str	r0, [fp, #-4]
   1a104:	b	1a13c <__assert_fail@plt+0x8c38>
   1a108:	b	1a12c <__assert_fail@plt+0x8c28>
   1a10c:	ldr	r0, [fp, #-8]
   1a110:	ldr	r0, [r0, #36]	; 0x24
   1a114:	ldr	r1, [fp, #-8]
   1a118:	str	r0, [r1, #48]	; 0x30
   1a11c:	ldr	r1, [fp, #-8]
   1a120:	str	r0, [r1, #44]	; 0x2c
   1a124:	ldr	r1, [fp, #-8]
   1a128:	str	r0, [r1, #40]	; 0x28
   1a12c:	ldr	r0, [sp, #40]	; 0x28
   1a130:	bl	35268 <__assert_fail@plt+0x23d64>
   1a134:	movw	r0, #0
   1a138:	str	r0, [fp, #-4]
   1a13c:	ldr	r0, [fp, #-4]
   1a140:	mov	sp, fp
   1a144:	pop	{fp, pc}
   1a148:	push	{fp, lr}
   1a14c:	mov	fp, sp
   1a150:	sub	sp, sp, #28
   1a154:	ldr	ip, [fp, #12]
   1a158:	ldr	lr, [fp, #8]
   1a15c:	str	r0, [fp, #-4]
   1a160:	str	r1, [fp, #-8]
   1a164:	str	r2, [fp, #-12]
   1a168:	str	r3, [sp, #12]
   1a16c:	and	r0, lr, #1
   1a170:	strb	r0, [sp, #11]
   1a174:	ldr	r0, [fp, #-4]
   1a178:	ldr	r1, [fp, #-12]
   1a17c:	str	r0, [r1]
   1a180:	ldr	r0, [fp, #-8]
   1a184:	ldr	r1, [fp, #-12]
   1a188:	str	r0, [r1, #48]	; 0x30
   1a18c:	ldr	r0, [fp, #-8]
   1a190:	ldr	r1, [fp, #-12]
   1a194:	str	r0, [r1, #44]	; 0x2c
   1a198:	ldr	r0, [sp, #12]
   1a19c:	ldr	r1, [fp, #-12]
   1a1a0:	str	r0, [r1, #64]	; 0x40
   1a1a4:	ldrb	r0, [sp, #11]
   1a1a8:	and	r0, r0, #1
   1a1ac:	ldr	r1, [fp, #-12]
   1a1b0:	strb	r0, [r1, #72]	; 0x48
   1a1b4:	ldr	r0, [sp, #12]
   1a1b8:	movw	r1, #0
   1a1bc:	cmp	r0, r1
   1a1c0:	movw	r0, #1
   1a1c4:	str	ip, [sp, #4]
   1a1c8:	str	r0, [sp]
   1a1cc:	bne	1a1d8 <__assert_fail@plt+0x8cd4>
   1a1d0:	ldrb	r0, [sp, #11]
   1a1d4:	str	r0, [sp]
   1a1d8:	ldr	r0, [sp]
   1a1dc:	and	r0, r0, #1
   1a1e0:	ldr	r1, [fp, #-12]
   1a1e4:	strb	r0, [r1, #75]	; 0x4b
   1a1e8:	ldr	r0, [fp, #12]
   1a1ec:	ldr	r0, [r0, #92]	; 0x5c
   1a1f0:	ldr	r1, [fp, #-12]
   1a1f4:	str	r0, [r1, #80]	; 0x50
   1a1f8:	ldr	r0, [fp, #12]
   1a1fc:	ldrb	r0, [r0, #88]	; 0x58
   1a200:	ubfx	r0, r0, #2, #1
   1a204:	ldr	r1, [fp, #-12]
   1a208:	strb	r0, [r1, #73]	; 0x49
   1a20c:	ldr	r0, [fp, #12]
   1a210:	ldrb	r0, [r0, #88]	; 0x58
   1a214:	ubfx	r0, r0, #3, #1
   1a218:	and	r0, r0, #255	; 0xff
   1a21c:	ldr	r1, [fp, #-12]
   1a220:	strb	r0, [r1, #74]	; 0x4a
   1a224:	ldr	r0, [fp, #-12]
   1a228:	ldr	r0, [r0, #48]	; 0x30
   1a22c:	ldr	r1, [fp, #-12]
   1a230:	str	r0, [r1, #56]	; 0x38
   1a234:	ldr	r0, [fp, #-12]
   1a238:	ldr	r0, [r0, #56]	; 0x38
   1a23c:	ldr	r1, [fp, #-12]
   1a240:	str	r0, [r1, #52]	; 0x34
   1a244:	mov	sp, fp
   1a248:	pop	{fp, pc}
   1a24c:	push	{fp, lr}
   1a250:	mov	fp, sp
   1a254:	sub	sp, sp, #32
   1a258:	str	r0, [fp, #-8]
   1a25c:	str	r1, [fp, #-12]
   1a260:	ldr	r0, [fp, #-8]
   1a264:	ldr	r0, [r0, #80]	; 0x50
   1a268:	cmp	r0, #1
   1a26c:	ble	1a32c <__assert_fail@plt+0x8e28>
   1a270:	ldr	r0, [pc, #296]	; 1a3a0 <__assert_fail@plt+0x8e9c>
   1a274:	movw	r1, #4
   1a278:	str	r1, [sp, #12]
   1a27c:	ldr	r1, [fp, #-12]
   1a280:	cmp	r0, r1
   1a284:	bcs	1a294 <__assert_fail@plt+0x8d90>
   1a288:	movw	r0, #12
   1a28c:	str	r0, [fp, #-4]
   1a290:	b	1a394 <__assert_fail@plt+0x8e90>
   1a294:	ldr	r0, [fp, #-8]
   1a298:	ldr	r0, [r0, #8]
   1a29c:	ldr	r1, [fp, #-12]
   1a2a0:	lsl	r1, r1, #2
   1a2a4:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1a2a8:	str	r0, [sp, #16]
   1a2ac:	ldr	r0, [sp, #16]
   1a2b0:	movw	r1, #0
   1a2b4:	cmp	r0, r1
   1a2b8:	bne	1a2c8 <__assert_fail@plt+0x8dc4>
   1a2bc:	movw	r0, #12
   1a2c0:	str	r0, [fp, #-4]
   1a2c4:	b	1a394 <__assert_fail@plt+0x8e90>
   1a2c8:	ldr	r0, [sp, #16]
   1a2cc:	ldr	r1, [fp, #-8]
   1a2d0:	str	r0, [r1, #8]
   1a2d4:	ldr	r0, [fp, #-8]
   1a2d8:	ldr	r0, [r0, #12]
   1a2dc:	movw	r1, #0
   1a2e0:	cmp	r0, r1
   1a2e4:	beq	1a328 <__assert_fail@plt+0x8e24>
   1a2e8:	ldr	r0, [fp, #-8]
   1a2ec:	ldr	r0, [r0, #12]
   1a2f0:	ldr	r1, [fp, #-12]
   1a2f4:	lsl	r1, r1, #2
   1a2f8:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1a2fc:	str	r0, [sp, #8]
   1a300:	ldr	r0, [sp, #8]
   1a304:	movw	r1, #0
   1a308:	cmp	r0, r1
   1a30c:	bne	1a31c <__assert_fail@plt+0x8e18>
   1a310:	movw	r0, #12
   1a314:	str	r0, [fp, #-4]
   1a318:	b	1a394 <__assert_fail@plt+0x8e90>
   1a31c:	ldr	r0, [sp, #8]
   1a320:	ldr	r1, [fp, #-8]
   1a324:	str	r0, [r1, #12]
   1a328:	b	1a32c <__assert_fail@plt+0x8e28>
   1a32c:	ldr	r0, [fp, #-8]
   1a330:	ldrsb	r0, [r0, #75]	; 0x4b
   1a334:	cmp	r0, #0
   1a338:	beq	1a380 <__assert_fail@plt+0x8e7c>
   1a33c:	ldr	r0, [fp, #-8]
   1a340:	ldr	r0, [r0, #4]
   1a344:	ldr	r1, [fp, #-12]
   1a348:	mov	r2, r1
   1a34c:	str	r2, [sp]
   1a350:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1a354:	str	r0, [sp, #4]
   1a358:	ldr	r0, [sp, #4]
   1a35c:	movw	r1, #0
   1a360:	cmp	r0, r1
   1a364:	bne	1a374 <__assert_fail@plt+0x8e70>
   1a368:	movw	r0, #12
   1a36c:	str	r0, [fp, #-4]
   1a370:	b	1a394 <__assert_fail@plt+0x8e90>
   1a374:	ldr	r0, [sp, #4]
   1a378:	ldr	r1, [fp, #-8]
   1a37c:	str	r0, [r1, #4]
   1a380:	ldr	r0, [fp, #-12]
   1a384:	ldr	r1, [fp, #-8]
   1a388:	str	r0, [r1, #36]	; 0x24
   1a38c:	movw	r0, #0
   1a390:	str	r0, [fp, #-4]
   1a394:	ldr	r0, [fp, #-4]
   1a398:	mov	sp, fp
   1a39c:	pop	{fp, pc}
   1a3a0:	svccc	0x00ffffff
   1a3a4:	push	{fp, lr}
   1a3a8:	mov	fp, sp
   1a3ac:	sub	sp, sp, #192	; 0xc0
   1a3b0:	str	r0, [fp, #-8]
   1a3b4:	ldr	r0, [fp, #-8]
   1a3b8:	ldr	r0, [r0, #28]
   1a3bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a3c0:	ldr	r0, [fp, #-8]
   1a3c4:	ldr	r0, [r0, #36]	; 0x24
   1a3c8:	ldr	r1, [fp, #-8]
   1a3cc:	ldr	r1, [r1, #48]	; 0x30
   1a3d0:	cmp	r0, r1
   1a3d4:	ble	1a3e8 <__assert_fail@plt+0x8ee4>
   1a3d8:	ldr	r0, [fp, #-8]
   1a3dc:	ldr	r0, [r0, #48]	; 0x30
   1a3e0:	str	r0, [sp, #32]
   1a3e4:	b	1a3f4 <__assert_fail@plt+0x8ef0>
   1a3e8:	ldr	r0, [fp, #-8]
   1a3ec:	ldr	r0, [r0, #36]	; 0x24
   1a3f0:	str	r0, [sp, #32]
   1a3f4:	ldr	r0, [sp, #32]
   1a3f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3fc:	ldr	r0, [fp, #-8]
   1a400:	ldrsb	r0, [r0, #74]	; 0x4a
   1a404:	cmp	r0, #0
   1a408:	bne	1a768 <__assert_fail@plt+0x9264>
   1a40c:	ldr	r0, [fp, #-8]
   1a410:	ldr	r0, [r0, #64]	; 0x40
   1a414:	movw	r1, #0
   1a418:	cmp	r0, r1
   1a41c:	bne	1a768 <__assert_fail@plt+0x9264>
   1a420:	ldr	r0, [fp, #-8]
   1a424:	ldrsb	r0, [r0, #76]	; 0x4c
   1a428:	cmp	r0, #0
   1a42c:	bne	1a768 <__assert_fail@plt+0x9264>
   1a430:	b	1a434 <__assert_fail@plt+0x8f30>
   1a434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a43c:	cmp	r0, r1
   1a440:	bge	1a744 <__assert_fail@plt+0x9240>
   1a444:	ldr	r0, [fp, #-8]
   1a448:	ldr	r0, [r0]
   1a44c:	ldr	r1, [fp, #-8]
   1a450:	ldr	r1, [r1, #24]
   1a454:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a458:	add	r1, r1, r2
   1a45c:	add	r0, r0, r1
   1a460:	ldrb	r0, [r0]
   1a464:	strb	r0, [sp, #87]	; 0x57
   1a468:	ldrb	r0, [sp, #87]	; 0x57
   1a46c:	mvn	r1, #127	; 0x7f
   1a470:	and	r0, r0, r1
   1a474:	cmp	r0, #0
   1a478:	bne	1a4f0 <__assert_fail@plt+0x8fec>
   1a47c:	ldr	r0, [fp, #-8]
   1a480:	add	r0, r0, #16
   1a484:	bl	112d0 <mbsinit@plt>
   1a488:	cmp	r0, #0
   1a48c:	beq	1a4f0 <__assert_fail@plt+0x8fec>
   1a490:	ldrb	r0, [sp, #87]	; 0x57
   1a494:	bl	114bc <towupper@plt>
   1a498:	str	r0, [sp, #80]	; 0x50
   1a49c:	ldr	r0, [sp, #80]	; 0x50
   1a4a0:	mvn	lr, #127	; 0x7f
   1a4a4:	and	r0, r0, lr
   1a4a8:	cmp	r0, #0
   1a4ac:	bne	1a4ec <__assert_fail@plt+0x8fe8>
   1a4b0:	ldr	r0, [sp, #80]	; 0x50
   1a4b4:	ldr	r1, [fp, #-8]
   1a4b8:	ldr	r1, [r1, #4]
   1a4bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4c0:	strb	r0, [r1, r2]
   1a4c4:	ldr	r0, [sp, #80]	; 0x50
   1a4c8:	ldr	r1, [fp, #-8]
   1a4cc:	ldr	r1, [r1, #8]
   1a4d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4d4:	add	r1, r1, r2, lsl #2
   1a4d8:	str	r0, [r1]
   1a4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4e0:	add	r0, r0, #1
   1a4e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4e8:	b	1a434 <__assert_fail@plt+0x8f30>
   1a4ec:	b	1a4f0 <__assert_fail@plt+0x8fec>
   1a4f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4f8:	sub	r0, r0, r1
   1a4fc:	str	r0, [fp, #-32]	; 0xffffffe0
   1a500:	ldr	r0, [fp, #-8]
   1a504:	ldr	r1, [r0, #16]
   1a508:	str	r1, [fp, #-16]
   1a50c:	ldr	r0, [r0, #20]
   1a510:	str	r0, [fp, #-12]
   1a514:	ldr	r0, [fp, #-8]
   1a518:	ldr	r0, [r0]
   1a51c:	ldr	r1, [fp, #-8]
   1a520:	ldr	r1, [r1, #24]
   1a524:	add	r0, r0, r1
   1a528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a52c:	add	r1, r0, r1
   1a530:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a534:	ldr	r0, [fp, #-8]
   1a538:	add	r3, r0, #16
   1a53c:	add	r0, sp, #88	; 0x58
   1a540:	bl	354d8 <__assert_fail@plt+0x23fd4>
   1a544:	str	r0, [fp, #-36]	; 0xffffffdc
   1a548:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a54c:	movw	r1, #0
   1a550:	cmp	r1, r0
   1a554:	movw	r0, #0
   1a558:	str	r0, [sp, #28]
   1a55c:	bcs	1a574 <__assert_fail@plt+0x9070>
   1a560:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a564:	cmn	r0, #2
   1a568:	movw	r0, #0
   1a56c:	movcc	r0, #1
   1a570:	str	r0, [sp, #28]
   1a574:	ldr	r0, [sp, #28]
   1a578:	tst	r0, #1
   1a57c:	beq	1a690 <__assert_fail@plt+0x918c>
   1a580:	ldr	r0, [sp, #88]	; 0x58
   1a584:	bl	114bc <towupper@plt>
   1a588:	str	r0, [sp, #76]	; 0x4c
   1a58c:	ldr	r0, [sp, #76]	; 0x4c
   1a590:	ldr	lr, [sp, #88]	; 0x58
   1a594:	cmp	r0, lr
   1a598:	beq	1a5f0 <__assert_fail@plt+0x90ec>
   1a59c:	add	r0, sp, #92	; 0x5c
   1a5a0:	ldr	r1, [sp, #76]	; 0x4c
   1a5a4:	sub	r2, fp, #16
   1a5a8:	bl	1121c <wcrtomb@plt>
   1a5ac:	str	r0, [sp, #72]	; 0x48
   1a5b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a5b4:	ldr	r1, [sp, #72]	; 0x48
   1a5b8:	cmp	r0, r1
   1a5bc:	bne	1a5e0 <__assert_fail@plt+0x90dc>
   1a5c0:	add	r1, sp, #92	; 0x5c
   1a5c4:	ldr	r0, [fp, #-8]
   1a5c8:	ldr	r0, [r0, #4]
   1a5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a5d0:	add	r0, r0, r2
   1a5d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a5d8:	bl	112a0 <memcpy@plt>
   1a5dc:	b	1a5ec <__assert_fail@plt+0x90e8>
   1a5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5e4:	str	r0, [fp, #-20]	; 0xffffffec
   1a5e8:	b	1a788 <__assert_fail@plt+0x9284>
   1a5ec:	b	1a624 <__assert_fail@plt+0x9120>
   1a5f0:	ldr	r0, [fp, #-8]
   1a5f4:	ldr	r0, [r0, #4]
   1a5f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5fc:	add	r0, r0, r1
   1a600:	ldr	r1, [fp, #-8]
   1a604:	ldr	r1, [r1]
   1a608:	ldr	r2, [fp, #-8]
   1a60c:	ldr	r2, [r2, #24]
   1a610:	add	r1, r1, r2
   1a614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a618:	add	r1, r1, r2
   1a61c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a620:	bl	112a0 <memcpy@plt>
   1a624:	ldr	r0, [sp, #76]	; 0x4c
   1a628:	ldr	r1, [fp, #-8]
   1a62c:	ldr	r1, [r1, #8]
   1a630:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a634:	add	r3, r2, #1
   1a638:	str	r3, [fp, #-24]	; 0xffffffe8
   1a63c:	add	r1, r1, r2, lsl #2
   1a640:	str	r0, [r1]
   1a644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a648:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a64c:	add	r0, r0, r1
   1a650:	sub	r0, r0, #1
   1a654:	str	r0, [fp, #-32]	; 0xffffffe0
   1a658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a65c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a660:	cmp	r0, r1
   1a664:	bge	1a68c <__assert_fail@plt+0x9188>
   1a668:	ldr	r0, [fp, #-8]
   1a66c:	ldr	r0, [r0, #8]
   1a670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a674:	add	r2, r1, #1
   1a678:	str	r2, [fp, #-24]	; 0xffffffe8
   1a67c:	add	r0, r0, r1, lsl #2
   1a680:	mvn	r1, #0
   1a684:	str	r1, [r0]
   1a688:	b	1a658 <__assert_fail@plt+0x9154>
   1a68c:	b	1a740 <__assert_fail@plt+0x923c>
   1a690:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a694:	cmn	r0, #1
   1a698:	beq	1a6cc <__assert_fail@plt+0x91c8>
   1a69c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a6a0:	cmp	r0, #0
   1a6a4:	beq	1a6cc <__assert_fail@plt+0x91c8>
   1a6a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a6ac:	cmn	r0, #2
   1a6b0:	bne	1a724 <__assert_fail@plt+0x9220>
   1a6b4:	ldr	r0, [fp, #-8]
   1a6b8:	ldr	r0, [r0, #36]	; 0x24
   1a6bc:	ldr	r1, [fp, #-8]
   1a6c0:	ldr	r1, [r1, #48]	; 0x30
   1a6c4:	cmp	r0, r1
   1a6c8:	blt	1a724 <__assert_fail@plt+0x9220>
   1a6cc:	ldrb	r0, [sp, #87]	; 0x57
   1a6d0:	ldr	r1, [fp, #-8]
   1a6d4:	ldr	r1, [r1, #4]
   1a6d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6dc:	strb	r0, [r1, r2]
   1a6e0:	ldrb	r0, [sp, #87]	; 0x57
   1a6e4:	ldr	r1, [fp, #-8]
   1a6e8:	ldr	r1, [r1, #8]
   1a6ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6f0:	add	r3, r2, #1
   1a6f4:	str	r3, [fp, #-24]	; 0xffffffe8
   1a6f8:	add	r1, r1, r2, lsl #2
   1a6fc:	str	r0, [r1]
   1a700:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a704:	cmn	r0, #1
   1a708:	bne	1a720 <__assert_fail@plt+0x921c>
   1a70c:	ldr	r0, [fp, #-8]
   1a710:	ldr	r1, [fp, #-16]
   1a714:	str	r1, [r0, #16]
   1a718:	ldr	r1, [fp, #-12]
   1a71c:	str	r1, [r0, #20]
   1a720:	b	1a73c <__assert_fail@plt+0x9238>
   1a724:	ldr	r0, [fp, #-8]
   1a728:	ldr	r1, [fp, #-16]
   1a72c:	str	r1, [r0, #16]
   1a730:	ldr	r1, [fp, #-12]
   1a734:	str	r1, [r0, #20]
   1a738:	b	1a744 <__assert_fail@plt+0x9240>
   1a73c:	b	1a740 <__assert_fail@plt+0x923c>
   1a740:	b	1a434 <__assert_fail@plt+0x8f30>
   1a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a748:	ldr	r1, [fp, #-8]
   1a74c:	str	r0, [r1, #28]
   1a750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a754:	ldr	r1, [fp, #-8]
   1a758:	str	r0, [r1, #32]
   1a75c:	movw	r0, #0
   1a760:	str	r0, [fp, #-4]
   1a764:	b	1ae44 <__assert_fail@plt+0x9940>
   1a768:	ldr	r0, [fp, #-8]
   1a76c:	ldr	r0, [r0, #32]
   1a770:	str	r0, [fp, #-20]	; 0xffffffec
   1a774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a77c:	cmp	r0, r1
   1a780:	bge	1ae20 <__assert_fail@plt+0x991c>
   1a784:	b	1a788 <__assert_fail@plt+0x9284>
   1a788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a78c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a790:	sub	r0, r0, r1
   1a794:	str	r0, [fp, #-32]	; 0xffffffe0
   1a798:	ldr	r0, [fp, #-8]
   1a79c:	ldr	r1, [r0, #16]
   1a7a0:	str	r1, [fp, #-16]
   1a7a4:	ldr	r0, [r0, #20]
   1a7a8:	str	r0, [fp, #-12]
   1a7ac:	ldr	r0, [fp, #-8]
   1a7b0:	ldr	r0, [r0, #64]	; 0x40
   1a7b4:	movw	r1, #0
   1a7b8:	cmp	r0, r1
   1a7bc:	beq	1a874 <__assert_fail@plt+0x9370>
   1a7c0:	movw	r0, #0
   1a7c4:	str	r0, [sp, #60]	; 0x3c
   1a7c8:	ldr	r0, [sp, #60]	; 0x3c
   1a7cc:	ldr	r1, [fp, #-8]
   1a7d0:	ldr	r1, [r1, #80]	; 0x50
   1a7d4:	cmp	r0, r1
   1a7d8:	movw	r0, #0
   1a7dc:	str	r0, [sp, #24]
   1a7e0:	bge	1a7fc <__assert_fail@plt+0x92f8>
   1a7e4:	ldr	r0, [sp, #60]	; 0x3c
   1a7e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a7ec:	cmp	r0, r1
   1a7f0:	movw	r0, #0
   1a7f4:	movlt	r0, #1
   1a7f8:	str	r0, [sp, #24]
   1a7fc:	ldr	r0, [sp, #24]
   1a800:	tst	r0, #1
   1a804:	beq	1a868 <__assert_fail@plt+0x9364>
   1a808:	ldr	r0, [fp, #-8]
   1a80c:	ldr	r0, [r0]
   1a810:	ldr	r1, [fp, #-8]
   1a814:	ldr	r1, [r1, #24]
   1a818:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a81c:	add	r1, r1, r2
   1a820:	ldr	r2, [sp, #60]	; 0x3c
   1a824:	add	r1, r1, r2
   1a828:	add	r0, r0, r1
   1a82c:	ldrb	r0, [r0]
   1a830:	str	r0, [sp, #56]	; 0x38
   1a834:	ldr	r0, [fp, #-8]
   1a838:	ldr	r0, [r0, #64]	; 0x40
   1a83c:	ldr	r1, [sp, #56]	; 0x38
   1a840:	add	r0, r0, r1
   1a844:	ldrb	r0, [r0]
   1a848:	ldr	r1, [sp, #60]	; 0x3c
   1a84c:	add	r2, sp, #92	; 0x5c
   1a850:	add	r1, r2, r1
   1a854:	strb	r0, [r1]
   1a858:	ldr	r0, [sp, #60]	; 0x3c
   1a85c:	add	r0, r0, #1
   1a860:	str	r0, [sp, #60]	; 0x3c
   1a864:	b	1a7c8 <__assert_fail@plt+0x92c4>
   1a868:	add	r0, sp, #92	; 0x5c
   1a86c:	str	r0, [sp, #64]	; 0x40
   1a870:	b	1a894 <__assert_fail@plt+0x9390>
   1a874:	ldr	r0, [fp, #-8]
   1a878:	ldr	r0, [r0]
   1a87c:	ldr	r1, [fp, #-8]
   1a880:	ldr	r1, [r1, #24]
   1a884:	add	r0, r0, r1
   1a888:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a88c:	add	r0, r0, r1
   1a890:	str	r0, [sp, #64]	; 0x40
   1a894:	ldr	r1, [sp, #64]	; 0x40
   1a898:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a89c:	ldr	r0, [fp, #-8]
   1a8a0:	add	r3, r0, #16
   1a8a4:	add	r0, sp, #68	; 0x44
   1a8a8:	bl	354d8 <__assert_fail@plt+0x23fd4>
   1a8ac:	str	r0, [fp, #-36]	; 0xffffffdc
   1a8b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a8b4:	movw	r1, #0
   1a8b8:	cmp	r1, r0
   1a8bc:	movw	r0, #0
   1a8c0:	str	r0, [sp, #20]
   1a8c4:	bcs	1a8dc <__assert_fail@plt+0x93d8>
   1a8c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a8cc:	cmn	r0, #2
   1a8d0:	movw	r0, #0
   1a8d4:	movcc	r0, #1
   1a8d8:	str	r0, [sp, #20]
   1a8dc:	ldr	r0, [sp, #20]
   1a8e0:	tst	r0, #1
   1a8e4:	beq	1ace4 <__assert_fail@plt+0x97e0>
   1a8e8:	ldr	r0, [sp, #68]	; 0x44
   1a8ec:	bl	114bc <towupper@plt>
   1a8f0:	str	r0, [sp, #52]	; 0x34
   1a8f4:	ldr	r0, [sp, #52]	; 0x34
   1a8f8:	ldr	lr, [sp, #68]	; 0x44
   1a8fc:	cmp	r0, lr
   1a900:	beq	1abec <__assert_fail@plt+0x96e8>
   1a904:	add	r0, sp, #92	; 0x5c
   1a908:	ldr	r1, [sp, #52]	; 0x34
   1a90c:	sub	r2, fp, #16
   1a910:	bl	1121c <wcrtomb@plt>
   1a914:	str	r0, [sp, #48]	; 0x30
   1a918:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a91c:	ldr	r1, [sp, #48]	; 0x30
   1a920:	cmp	r0, r1
   1a924:	bne	1a948 <__assert_fail@plt+0x9444>
   1a928:	add	r1, sp, #92	; 0x5c
   1a92c:	ldr	r0, [fp, #-8]
   1a930:	ldr	r0, [r0, #4]
   1a934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a938:	add	r0, r0, r2
   1a93c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a940:	bl	112a0 <memcpy@plt>
   1a944:	b	1abe8 <__assert_fail@plt+0x96e4>
   1a948:	ldr	r0, [sp, #48]	; 0x30
   1a94c:	cmn	r0, #1
   1a950:	beq	1abc8 <__assert_fail@plt+0x96c4>
   1a954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a958:	ldr	r1, [sp, #48]	; 0x30
   1a95c:	add	r0, r0, r1
   1a960:	ldr	r1, [fp, #-8]
   1a964:	ldr	r1, [r1, #36]	; 0x24
   1a968:	cmp	r0, r1
   1a96c:	bls	1a988 <__assert_fail@plt+0x9484>
   1a970:	ldr	r0, [fp, #-8]
   1a974:	ldr	r1, [fp, #-16]
   1a978:	str	r1, [r0, #16]
   1a97c:	ldr	r1, [fp, #-12]
   1a980:	str	r1, [r0, #20]
   1a984:	b	1ae20 <__assert_fail@plt+0x991c>
   1a988:	ldr	r0, [fp, #-8]
   1a98c:	ldr	r0, [r0, #12]
   1a990:	movw	r1, #0
   1a994:	cmp	r0, r1
   1a998:	bne	1a9d8 <__assert_fail@plt+0x94d4>
   1a99c:	ldr	r0, [fp, #-8]
   1a9a0:	ldr	r0, [r0, #36]	; 0x24
   1a9a4:	lsl	r0, r0, #2
   1a9a8:	bl	33b44 <__assert_fail@plt+0x22640>
   1a9ac:	ldr	lr, [fp, #-8]
   1a9b0:	str	r0, [lr, #12]
   1a9b4:	ldr	r0, [fp, #-8]
   1a9b8:	ldr	r0, [r0, #12]
   1a9bc:	movw	lr, #0
   1a9c0:	cmp	r0, lr
   1a9c4:	bne	1a9d4 <__assert_fail@plt+0x94d0>
   1a9c8:	movw	r0, #12
   1a9cc:	str	r0, [fp, #-4]
   1a9d0:	b	1ae44 <__assert_fail@plt+0x9940>
   1a9d4:	b	1a9d8 <__assert_fail@plt+0x94d4>
   1a9d8:	ldr	r0, [fp, #-8]
   1a9dc:	ldrsb	r0, [r0, #76]	; 0x4c
   1a9e0:	cmp	r0, #0
   1a9e4:	bne	1aa34 <__assert_fail@plt+0x9530>
   1a9e8:	movw	r0, #0
   1a9ec:	str	r0, [sp, #44]	; 0x2c
   1a9f0:	ldr	r0, [sp, #44]	; 0x2c
   1a9f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9f8:	cmp	r0, r1
   1a9fc:	bcs	1aa28 <__assert_fail@plt+0x9524>
   1aa00:	ldr	r0, [sp, #44]	; 0x2c
   1aa04:	mov	r1, r0
   1aa08:	ldr	r2, [fp, #-8]
   1aa0c:	ldr	r2, [r2, #12]
   1aa10:	add	r0, r2, r0, lsl #2
   1aa14:	str	r1, [r0]
   1aa18:	ldr	r0, [sp, #44]	; 0x2c
   1aa1c:	add	r0, r0, #1
   1aa20:	str	r0, [sp, #44]	; 0x2c
   1aa24:	b	1a9f0 <__assert_fail@plt+0x94ec>
   1aa28:	ldr	r0, [fp, #-8]
   1aa2c:	movw	r1, #1
   1aa30:	strb	r1, [r0, #76]	; 0x4c
   1aa34:	ldr	r0, [fp, #-8]
   1aa38:	ldr	r0, [r0, #4]
   1aa3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa40:	add	r0, r0, r1
   1aa44:	ldr	r2, [sp, #48]	; 0x30
   1aa48:	add	r1, sp, #92	; 0x5c
   1aa4c:	bl	112a0 <memcpy@plt>
   1aa50:	ldr	r1, [sp, #52]	; 0x34
   1aa54:	ldr	r2, [fp, #-8]
   1aa58:	ldr	r2, [r2, #8]
   1aa5c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1aa60:	str	r1, [r2, lr, lsl #2]
   1aa64:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa68:	ldr	r2, [fp, #-8]
   1aa6c:	ldr	r2, [r2, #12]
   1aa70:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1aa74:	add	r2, r2, lr, lsl #2
   1aa78:	str	r1, [r2]
   1aa7c:	movw	r1, #1
   1aa80:	str	r1, [sp, #44]	; 0x2c
   1aa84:	str	r0, [sp, #16]
   1aa88:	ldr	r0, [sp, #44]	; 0x2c
   1aa8c:	ldr	r1, [sp, #48]	; 0x30
   1aa90:	cmp	r0, r1
   1aa94:	bcs	1ab1c <__assert_fail@plt+0x9618>
   1aa98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa9c:	ldr	r1, [sp, #44]	; 0x2c
   1aaa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1aaa4:	cmp	r1, r2
   1aaa8:	str	r0, [sp, #12]
   1aaac:	bcs	1aabc <__assert_fail@plt+0x95b8>
   1aab0:	ldr	r0, [sp, #44]	; 0x2c
   1aab4:	str	r0, [sp, #8]
   1aab8:	b	1aac8 <__assert_fail@plt+0x95c4>
   1aabc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aac0:	sub	r0, r0, #1
   1aac4:	str	r0, [sp, #8]
   1aac8:	ldr	r0, [sp, #8]
   1aacc:	ldr	r1, [sp, #12]
   1aad0:	add	r0, r1, r0
   1aad4:	ldr	r2, [fp, #-8]
   1aad8:	ldr	r2, [r2, #12]
   1aadc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aae0:	ldr	ip, [sp, #44]	; 0x2c
   1aae4:	add	r3, r3, ip
   1aae8:	str	r0, [r2, r3, lsl #2]
   1aaec:	ldr	r0, [fp, #-8]
   1aaf0:	ldr	r0, [r0, #8]
   1aaf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aaf8:	ldr	r3, [sp, #44]	; 0x2c
   1aafc:	add	r2, r2, r3
   1ab00:	add	r0, r0, r2, lsl #2
   1ab04:	mvn	r2, #0
   1ab08:	str	r2, [r0]
   1ab0c:	ldr	r0, [sp, #44]	; 0x2c
   1ab10:	add	r0, r0, #1
   1ab14:	str	r0, [sp, #44]	; 0x2c
   1ab18:	b	1aa88 <__assert_fail@plt+0x9584>
   1ab1c:	ldr	r0, [sp, #48]	; 0x30
   1ab20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ab24:	sub	r0, r0, r1
   1ab28:	ldr	r1, [fp, #-8]
   1ab2c:	ldr	r2, [r1, #48]	; 0x30
   1ab30:	add	r0, r2, r0
   1ab34:	str	r0, [r1, #48]	; 0x30
   1ab38:	ldr	r0, [fp, #-8]
   1ab3c:	ldr	r0, [r0, #52]	; 0x34
   1ab40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab44:	cmp	r0, r1
   1ab48:	ble	1ab68 <__assert_fail@plt+0x9664>
   1ab4c:	ldr	r0, [sp, #48]	; 0x30
   1ab50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ab54:	sub	r0, r0, r1
   1ab58:	ldr	r1, [fp, #-8]
   1ab5c:	ldr	r2, [r1, #56]	; 0x38
   1ab60:	add	r0, r2, r0
   1ab64:	str	r0, [r1, #56]	; 0x38
   1ab68:	ldr	r0, [fp, #-8]
   1ab6c:	ldr	r0, [r0, #36]	; 0x24
   1ab70:	ldr	r1, [fp, #-8]
   1ab74:	ldr	r1, [r1, #48]	; 0x30
   1ab78:	cmp	r0, r1
   1ab7c:	ble	1ab90 <__assert_fail@plt+0x968c>
   1ab80:	ldr	r0, [fp, #-8]
   1ab84:	ldr	r0, [r0, #48]	; 0x30
   1ab88:	str	r0, [sp, #4]
   1ab8c:	b	1ab9c <__assert_fail@plt+0x9698>
   1ab90:	ldr	r0, [fp, #-8]
   1ab94:	ldr	r0, [r0, #36]	; 0x24
   1ab98:	str	r0, [sp, #4]
   1ab9c:	ldr	r0, [sp, #4]
   1aba0:	str	r0, [fp, #-28]	; 0xffffffe4
   1aba4:	ldr	r0, [sp, #48]	; 0x30
   1aba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abac:	add	r0, r1, r0
   1abb0:	str	r0, [fp, #-24]	; 0xffffffe8
   1abb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1abb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1abbc:	add	r0, r1, r0
   1abc0:	str	r0, [fp, #-20]	; 0xffffffec
   1abc4:	b	1a774 <__assert_fail@plt+0x9270>
   1abc8:	ldr	r0, [fp, #-8]
   1abcc:	ldr	r0, [r0, #4]
   1abd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abd4:	add	r0, r0, r1
   1abd8:	ldr	r1, [sp, #64]	; 0x40
   1abdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1abe0:	bl	112a0 <memcpy@plt>
   1abe4:	b	1abe8 <__assert_fail@plt+0x96e4>
   1abe8:	b	1ac08 <__assert_fail@plt+0x9704>
   1abec:	ldr	r0, [fp, #-8]
   1abf0:	ldr	r0, [r0, #4]
   1abf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abf8:	add	r0, r0, r1
   1abfc:	ldr	r1, [sp, #64]	; 0x40
   1ac00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ac04:	bl	112a0 <memcpy@plt>
   1ac08:	ldr	r0, [fp, #-8]
   1ac0c:	ldrb	r0, [r0, #76]	; 0x4c
   1ac10:	cmp	r0, #0
   1ac14:	beq	1ac68 <__assert_fail@plt+0x9764>
   1ac18:	movw	r0, #0
   1ac1c:	str	r0, [sp, #40]	; 0x28
   1ac20:	ldr	r0, [sp, #40]	; 0x28
   1ac24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ac28:	cmp	r0, r1
   1ac2c:	bcs	1ac64 <__assert_fail@plt+0x9760>
   1ac30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac34:	ldr	r1, [sp, #40]	; 0x28
   1ac38:	add	r0, r0, r1
   1ac3c:	ldr	r2, [fp, #-8]
   1ac40:	ldr	r2, [r2, #12]
   1ac44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac48:	add	r1, r3, r1
   1ac4c:	add	r1, r2, r1, lsl #2
   1ac50:	str	r0, [r1]
   1ac54:	ldr	r0, [sp, #40]	; 0x28
   1ac58:	add	r0, r0, #1
   1ac5c:	str	r0, [sp, #40]	; 0x28
   1ac60:	b	1ac20 <__assert_fail@plt+0x971c>
   1ac64:	b	1ac68 <__assert_fail@plt+0x9764>
   1ac68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ac6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ac70:	add	r0, r1, r0
   1ac74:	str	r0, [fp, #-20]	; 0xffffffec
   1ac78:	ldr	r0, [sp, #52]	; 0x34
   1ac7c:	ldr	r1, [fp, #-8]
   1ac80:	ldr	r1, [r1, #8]
   1ac84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ac88:	add	r3, r2, #1
   1ac8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ac90:	add	r1, r1, r2, lsl #2
   1ac94:	str	r0, [r1]
   1ac98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aca0:	add	r0, r0, r1
   1aca4:	sub	r0, r0, #1
   1aca8:	str	r0, [fp, #-32]	; 0xffffffe0
   1acac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1acb4:	cmp	r0, r1
   1acb8:	bge	1ace0 <__assert_fail@plt+0x97dc>
   1acbc:	ldr	r0, [fp, #-8]
   1acc0:	ldr	r0, [r0, #8]
   1acc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acc8:	add	r2, r1, #1
   1accc:	str	r2, [fp, #-24]	; 0xffffffe8
   1acd0:	add	r0, r0, r1, lsl #2
   1acd4:	mvn	r1, #0
   1acd8:	str	r1, [r0]
   1acdc:	b	1acac <__assert_fail@plt+0x97a8>
   1ace0:	b	1ae1c <__assert_fail@plt+0x9918>
   1ace4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ace8:	cmn	r0, #1
   1acec:	beq	1ad20 <__assert_fail@plt+0x981c>
   1acf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1acf4:	cmp	r0, #0
   1acf8:	beq	1ad20 <__assert_fail@plt+0x981c>
   1acfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ad00:	cmn	r0, #2
   1ad04:	bne	1ae00 <__assert_fail@plt+0x98fc>
   1ad08:	ldr	r0, [fp, #-8]
   1ad0c:	ldr	r0, [r0, #36]	; 0x24
   1ad10:	ldr	r1, [fp, #-8]
   1ad14:	ldr	r1, [r1, #48]	; 0x30
   1ad18:	cmp	r0, r1
   1ad1c:	blt	1ae00 <__assert_fail@plt+0x98fc>
   1ad20:	ldr	r0, [fp, #-8]
   1ad24:	ldr	r0, [r0]
   1ad28:	ldr	r1, [fp, #-8]
   1ad2c:	ldr	r1, [r1, #24]
   1ad30:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad34:	add	r1, r1, r2
   1ad38:	add	r0, r0, r1
   1ad3c:	ldrb	r0, [r0]
   1ad40:	str	r0, [sp, #36]	; 0x24
   1ad44:	ldr	r0, [fp, #-8]
   1ad48:	ldr	r0, [r0, #64]	; 0x40
   1ad4c:	movw	r1, #0
   1ad50:	cmp	r0, r1
   1ad54:	beq	1ad70 <__assert_fail@plt+0x986c>
   1ad58:	ldr	r0, [fp, #-8]
   1ad5c:	ldr	r0, [r0, #64]	; 0x40
   1ad60:	ldr	r1, [sp, #36]	; 0x24
   1ad64:	add	r0, r0, r1
   1ad68:	ldrb	r0, [r0]
   1ad6c:	str	r0, [sp, #36]	; 0x24
   1ad70:	ldr	r0, [sp, #36]	; 0x24
   1ad74:	ldr	r1, [fp, #-8]
   1ad78:	ldr	r1, [r1, #4]
   1ad7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad80:	add	r1, r1, r2
   1ad84:	strb	r0, [r1]
   1ad88:	ldr	r0, [fp, #-8]
   1ad8c:	ldrb	r0, [r0, #76]	; 0x4c
   1ad90:	cmp	r0, #0
   1ad94:	beq	1adb0 <__assert_fail@plt+0x98ac>
   1ad98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad9c:	ldr	r1, [fp, #-8]
   1ada0:	ldr	r1, [r1, #12]
   1ada4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ada8:	add	r1, r1, r2, lsl #2
   1adac:	str	r0, [r1]
   1adb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adb4:	add	r0, r0, #1
   1adb8:	str	r0, [fp, #-20]	; 0xffffffec
   1adbc:	ldr	r0, [sp, #36]	; 0x24
   1adc0:	ldr	r1, [fp, #-8]
   1adc4:	ldr	r1, [r1, #8]
   1adc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1adcc:	add	r3, r2, #1
   1add0:	str	r3, [fp, #-24]	; 0xffffffe8
   1add4:	add	r1, r1, r2, lsl #2
   1add8:	str	r0, [r1]
   1addc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ade0:	cmn	r0, #1
   1ade4:	bne	1adfc <__assert_fail@plt+0x98f8>
   1ade8:	ldr	r0, [fp, #-8]
   1adec:	ldr	r1, [fp, #-16]
   1adf0:	str	r1, [r0, #16]
   1adf4:	ldr	r1, [fp, #-12]
   1adf8:	str	r1, [r0, #20]
   1adfc:	b	1ae18 <__assert_fail@plt+0x9914>
   1ae00:	ldr	r0, [fp, #-8]
   1ae04:	ldr	r1, [fp, #-16]
   1ae08:	str	r1, [r0, #16]
   1ae0c:	ldr	r1, [fp, #-12]
   1ae10:	str	r1, [r0, #20]
   1ae14:	b	1ae20 <__assert_fail@plt+0x991c>
   1ae18:	b	1ae1c <__assert_fail@plt+0x9918>
   1ae1c:	b	1a774 <__assert_fail@plt+0x9270>
   1ae20:	b	1ae24 <__assert_fail@plt+0x9920>
   1ae24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae28:	ldr	r1, [fp, #-8]
   1ae2c:	str	r0, [r1, #28]
   1ae30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae34:	ldr	r1, [fp, #-8]
   1ae38:	str	r0, [r1, #32]
   1ae3c:	movw	r0, #0
   1ae40:	str	r0, [fp, #-4]
   1ae44:	ldr	r0, [fp, #-4]
   1ae48:	mov	sp, fp
   1ae4c:	pop	{fp, pc}
   1ae50:	push	{fp, lr}
   1ae54:	mov	fp, sp
   1ae58:	sub	sp, sp, #24
   1ae5c:	str	r0, [fp, #-4]
   1ae60:	ldr	r0, [fp, #-4]
   1ae64:	ldr	r0, [r0, #36]	; 0x24
   1ae68:	ldr	r1, [fp, #-4]
   1ae6c:	ldr	r1, [r1, #48]	; 0x30
   1ae70:	cmp	r0, r1
   1ae74:	ble	1ae88 <__assert_fail@plt+0x9984>
   1ae78:	ldr	r0, [fp, #-4]
   1ae7c:	ldr	r0, [r0, #48]	; 0x30
   1ae80:	str	r0, [sp, #4]
   1ae84:	b	1ae94 <__assert_fail@plt+0x9990>
   1ae88:	ldr	r0, [fp, #-4]
   1ae8c:	ldr	r0, [r0, #36]	; 0x24
   1ae90:	str	r0, [sp, #4]
   1ae94:	ldr	r0, [sp, #4]
   1ae98:	str	r0, [sp, #12]
   1ae9c:	ldr	r0, [fp, #-4]
   1aea0:	ldr	r0, [r0, #28]
   1aea4:	str	r0, [fp, #-8]
   1aea8:	ldr	r0, [fp, #-8]
   1aeac:	ldr	r1, [sp, #12]
   1aeb0:	cmp	r0, r1
   1aeb4:	bge	1af34 <__assert_fail@plt+0x9a30>
   1aeb8:	ldr	r0, [fp, #-4]
   1aebc:	ldr	r0, [r0]
   1aec0:	ldr	r1, [fp, #-4]
   1aec4:	ldr	r1, [r1, #24]
   1aec8:	ldr	r2, [fp, #-8]
   1aecc:	add	r1, r1, r2
   1aed0:	add	r0, r0, r1
   1aed4:	ldrb	r0, [r0]
   1aed8:	str	r0, [sp, #8]
   1aedc:	ldr	r0, [fp, #-4]
   1aee0:	ldr	r0, [r0, #64]	; 0x40
   1aee4:	movw	r1, #0
   1aee8:	cmp	r0, r1
   1aeec:	beq	1af08 <__assert_fail@plt+0x9a04>
   1aef0:	ldr	r0, [fp, #-4]
   1aef4:	ldr	r0, [r0, #64]	; 0x40
   1aef8:	ldr	r1, [sp, #8]
   1aefc:	add	r0, r0, r1
   1af00:	ldrb	r0, [r0]
   1af04:	str	r0, [sp, #8]
   1af08:	ldr	r0, [sp, #8]
   1af0c:	bl	11474 <toupper@plt>
   1af10:	ldr	lr, [fp, #-4]
   1af14:	ldr	lr, [lr, #4]
   1af18:	ldr	r1, [fp, #-8]
   1af1c:	add	r1, lr, r1
   1af20:	strb	r0, [r1]
   1af24:	ldr	r0, [fp, #-8]
   1af28:	add	r0, r0, #1
   1af2c:	str	r0, [fp, #-8]
   1af30:	b	1aea8 <__assert_fail@plt+0x99a4>
   1af34:	ldr	r0, [fp, #-8]
   1af38:	ldr	r1, [fp, #-4]
   1af3c:	str	r0, [r1, #28]
   1af40:	ldr	r0, [fp, #-8]
   1af44:	ldr	r1, [fp, #-4]
   1af48:	str	r0, [r1, #32]
   1af4c:	mov	sp, fp
   1af50:	pop	{fp, pc}
   1af54:	push	{fp, lr}
   1af58:	mov	fp, sp
   1af5c:	sub	sp, sp, #128	; 0x80
   1af60:	str	r0, [fp, #-4]
   1af64:	ldr	r0, [fp, #-4]
   1af68:	ldr	r0, [r0, #36]	; 0x24
   1af6c:	ldr	r1, [fp, #-4]
   1af70:	ldr	r1, [r1, #48]	; 0x30
   1af74:	cmp	r0, r1
   1af78:	ble	1af8c <__assert_fail@plt+0x9a88>
   1af7c:	ldr	r0, [fp, #-4]
   1af80:	ldr	r0, [r0, #48]	; 0x30
   1af84:	str	r0, [sp, #16]
   1af88:	b	1af98 <__assert_fail@plt+0x9a94>
   1af8c:	ldr	r0, [fp, #-4]
   1af90:	ldr	r0, [r0, #36]	; 0x24
   1af94:	str	r0, [sp, #16]
   1af98:	ldr	r0, [sp, #16]
   1af9c:	str	r0, [sp, #44]	; 0x2c
   1afa0:	ldr	r0, [fp, #-4]
   1afa4:	ldr	r0, [r0, #28]
   1afa8:	str	r0, [sp, #48]	; 0x30
   1afac:	ldr	r0, [sp, #48]	; 0x30
   1afb0:	ldr	r1, [sp, #44]	; 0x2c
   1afb4:	cmp	r0, r1
   1afb8:	bge	1b274 <__assert_fail@plt+0x9d70>
   1afbc:	ldr	r0, [sp, #44]	; 0x2c
   1afc0:	ldr	r1, [sp, #48]	; 0x30
   1afc4:	sub	r0, r0, r1
   1afc8:	str	r0, [sp, #40]	; 0x28
   1afcc:	ldr	r0, [fp, #-4]
   1afd0:	ldr	r1, [r0, #16]
   1afd4:	str	r1, [sp, #52]	; 0x34
   1afd8:	ldr	r0, [r0, #20]
   1afdc:	str	r0, [sp, #56]	; 0x38
   1afe0:	ldr	r0, [fp, #-4]
   1afe4:	ldr	r0, [r0, #64]	; 0x40
   1afe8:	movw	r1, #0
   1afec:	cmp	r0, r1
   1aff0:	beq	1b0c4 <__assert_fail@plt+0x9bc0>
   1aff4:	movw	r0, #0
   1aff8:	str	r0, [sp, #24]
   1affc:	ldr	r0, [sp, #24]
   1b000:	ldr	r1, [fp, #-4]
   1b004:	ldr	r1, [r1, #80]	; 0x50
   1b008:	cmp	r0, r1
   1b00c:	movw	r0, #0
   1b010:	str	r0, [sp, #12]
   1b014:	bge	1b030 <__assert_fail@plt+0x9b2c>
   1b018:	ldr	r0, [sp, #24]
   1b01c:	ldr	r1, [sp, #40]	; 0x28
   1b020:	cmp	r0, r1
   1b024:	movw	r0, #0
   1b028:	movlt	r0, #1
   1b02c:	str	r0, [sp, #12]
   1b030:	ldr	r0, [sp, #12]
   1b034:	tst	r0, #1
   1b038:	beq	1b0b8 <__assert_fail@plt+0x9bb4>
   1b03c:	ldr	r0, [fp, #-4]
   1b040:	ldr	r0, [r0]
   1b044:	ldr	r1, [fp, #-4]
   1b048:	ldr	r1, [r1, #24]
   1b04c:	ldr	r2, [sp, #48]	; 0x30
   1b050:	add	r1, r1, r2
   1b054:	ldr	r2, [sp, #24]
   1b058:	add	r1, r1, r2
   1b05c:	add	r0, r0, r1
   1b060:	ldrb	r0, [r0]
   1b064:	str	r0, [sp, #20]
   1b068:	ldr	r0, [fp, #-4]
   1b06c:	ldr	r0, [r0, #64]	; 0x40
   1b070:	ldr	r1, [sp, #20]
   1b074:	add	r0, r0, r1
   1b078:	ldrb	r0, [r0]
   1b07c:	ldr	r1, [fp, #-4]
   1b080:	ldr	r1, [r1, #4]
   1b084:	ldr	r2, [sp, #48]	; 0x30
   1b088:	ldr	r3, [sp, #24]
   1b08c:	add	r2, r2, r3
   1b090:	add	r1, r1, r2
   1b094:	strb	r0, [r1]
   1b098:	ldr	r1, [sp, #24]
   1b09c:	add	r2, sp, #60	; 0x3c
   1b0a0:	add	r1, r2, r1
   1b0a4:	strb	r0, [r1]
   1b0a8:	ldr	r0, [sp, #24]
   1b0ac:	add	r0, r0, #1
   1b0b0:	str	r0, [sp, #24]
   1b0b4:	b	1affc <__assert_fail@plt+0x9af8>
   1b0b8:	add	r0, sp, #60	; 0x3c
   1b0bc:	str	r0, [sp, #28]
   1b0c0:	b	1b0e4 <__assert_fail@plt+0x9be0>
   1b0c4:	ldr	r0, [fp, #-4]
   1b0c8:	ldr	r0, [r0]
   1b0cc:	ldr	r1, [fp, #-4]
   1b0d0:	ldr	r1, [r1, #24]
   1b0d4:	add	r0, r0, r1
   1b0d8:	ldr	r1, [sp, #48]	; 0x30
   1b0dc:	add	r0, r0, r1
   1b0e0:	str	r0, [sp, #28]
   1b0e4:	ldr	r1, [sp, #28]
   1b0e8:	ldr	r2, [sp, #40]	; 0x28
   1b0ec:	ldr	r0, [fp, #-4]
   1b0f0:	add	r3, r0, #16
   1b0f4:	add	r0, sp, #32
   1b0f8:	bl	354d8 <__assert_fail@plt+0x23fd4>
   1b0fc:	str	r0, [sp, #36]	; 0x24
   1b100:	ldr	r0, [sp, #36]	; 0x24
   1b104:	cmn	r0, #1
   1b108:	movw	r0, #1
   1b10c:	str	r0, [sp, #8]
   1b110:	beq	1b164 <__assert_fail@plt+0x9c60>
   1b114:	ldr	r0, [sp, #36]	; 0x24
   1b118:	cmp	r0, #0
   1b11c:	movw	r0, #1
   1b120:	str	r0, [sp, #8]
   1b124:	beq	1b164 <__assert_fail@plt+0x9c60>
   1b128:	ldr	r0, [sp, #36]	; 0x24
   1b12c:	cmn	r0, #2
   1b130:	movw	r0, #0
   1b134:	str	r0, [sp, #4]
   1b138:	bne	1b15c <__assert_fail@plt+0x9c58>
   1b13c:	ldr	r0, [fp, #-4]
   1b140:	ldr	r0, [r0, #36]	; 0x24
   1b144:	ldr	r1, [fp, #-4]
   1b148:	ldr	r1, [r1, #48]	; 0x30
   1b14c:	cmp	r0, r1
   1b150:	movw	r0, #0
   1b154:	movge	r0, #1
   1b158:	str	r0, [sp, #4]
   1b15c:	ldr	r0, [sp, #4]
   1b160:	str	r0, [sp, #8]
   1b164:	ldr	r0, [sp, #8]
   1b168:	tst	r0, #1
   1b16c:	beq	1b1e0 <__assert_fail@plt+0x9cdc>
   1b170:	movw	r0, #1
   1b174:	str	r0, [sp, #36]	; 0x24
   1b178:	ldr	r0, [fp, #-4]
   1b17c:	ldr	r0, [r0]
   1b180:	ldr	r1, [fp, #-4]
   1b184:	ldr	r1, [r1, #24]
   1b188:	ldr	r2, [sp, #48]	; 0x30
   1b18c:	add	r1, r1, r2
   1b190:	add	r0, r0, r1
   1b194:	ldrb	r0, [r0]
   1b198:	str	r0, [sp, #32]
   1b19c:	ldr	r0, [fp, #-4]
   1b1a0:	ldr	r0, [r0, #64]	; 0x40
   1b1a4:	movw	r1, #0
   1b1a8:	cmp	r0, r1
   1b1ac:	beq	1b1c8 <__assert_fail@plt+0x9cc4>
   1b1b0:	ldr	r0, [fp, #-4]
   1b1b4:	ldr	r0, [r0, #64]	; 0x40
   1b1b8:	ldr	r1, [sp, #32]
   1b1bc:	add	r0, r0, r1
   1b1c0:	ldrb	r0, [r0]
   1b1c4:	str	r0, [sp, #32]
   1b1c8:	ldr	r0, [fp, #-4]
   1b1cc:	ldr	r1, [sp, #52]	; 0x34
   1b1d0:	str	r1, [r0, #16]
   1b1d4:	ldr	r1, [sp, #56]	; 0x38
   1b1d8:	str	r1, [r0, #20]
   1b1dc:	b	1b208 <__assert_fail@plt+0x9d04>
   1b1e0:	ldr	r0, [sp, #36]	; 0x24
   1b1e4:	cmn	r0, #2
   1b1e8:	bne	1b204 <__assert_fail@plt+0x9d00>
   1b1ec:	ldr	r0, [fp, #-4]
   1b1f0:	ldr	r1, [sp, #52]	; 0x34
   1b1f4:	str	r1, [r0, #16]
   1b1f8:	ldr	r1, [sp, #56]	; 0x38
   1b1fc:	str	r1, [r0, #20]
   1b200:	b	1b274 <__assert_fail@plt+0x9d70>
   1b204:	b	1b208 <__assert_fail@plt+0x9d04>
   1b208:	ldr	r0, [sp, #32]
   1b20c:	ldr	r1, [fp, #-4]
   1b210:	ldr	r1, [r1, #8]
   1b214:	ldr	r2, [sp, #48]	; 0x30
   1b218:	add	r3, r2, #1
   1b21c:	str	r3, [sp, #48]	; 0x30
   1b220:	add	r1, r1, r2, lsl #2
   1b224:	str	r0, [r1]
   1b228:	ldr	r0, [sp, #48]	; 0x30
   1b22c:	ldr	r1, [sp, #36]	; 0x24
   1b230:	add	r0, r0, r1
   1b234:	sub	r0, r0, #1
   1b238:	str	r0, [sp, #40]	; 0x28
   1b23c:	ldr	r0, [sp, #48]	; 0x30
   1b240:	ldr	r1, [sp, #40]	; 0x28
   1b244:	cmp	r0, r1
   1b248:	bge	1b270 <__assert_fail@plt+0x9d6c>
   1b24c:	ldr	r0, [fp, #-4]
   1b250:	ldr	r0, [r0, #8]
   1b254:	ldr	r1, [sp, #48]	; 0x30
   1b258:	add	r2, r1, #1
   1b25c:	str	r2, [sp, #48]	; 0x30
   1b260:	add	r0, r0, r1, lsl #2
   1b264:	mvn	r1, #0
   1b268:	str	r1, [r0]
   1b26c:	b	1b23c <__assert_fail@plt+0x9d38>
   1b270:	b	1afac <__assert_fail@plt+0x9aa8>
   1b274:	ldr	r0, [sp, #48]	; 0x30
   1b278:	ldr	r1, [fp, #-4]
   1b27c:	str	r0, [r1, #28]
   1b280:	ldr	r0, [sp, #48]	; 0x30
   1b284:	ldr	r1, [fp, #-4]
   1b288:	str	r0, [r1, #32]
   1b28c:	mov	sp, fp
   1b290:	pop	{fp, pc}
   1b294:	sub	sp, sp, #20
   1b298:	str	r0, [sp, #16]
   1b29c:	ldr	r0, [sp, #16]
   1b2a0:	ldr	r0, [r0, #36]	; 0x24
   1b2a4:	ldr	r1, [sp, #16]
   1b2a8:	ldr	r1, [r1, #48]	; 0x30
   1b2ac:	cmp	r0, r1
   1b2b0:	ble	1b2c4 <__assert_fail@plt+0x9dc0>
   1b2b4:	ldr	r0, [sp, #16]
   1b2b8:	ldr	r0, [r0, #48]	; 0x30
   1b2bc:	str	r0, [sp]
   1b2c0:	b	1b2d0 <__assert_fail@plt+0x9dcc>
   1b2c4:	ldr	r0, [sp, #16]
   1b2c8:	ldr	r0, [r0, #36]	; 0x24
   1b2cc:	str	r0, [sp]
   1b2d0:	ldr	r0, [sp]
   1b2d4:	str	r0, [sp, #8]
   1b2d8:	ldr	r0, [sp, #16]
   1b2dc:	ldr	r0, [r0, #28]
   1b2e0:	str	r0, [sp, #12]
   1b2e4:	ldr	r0, [sp, #12]
   1b2e8:	ldr	r1, [sp, #8]
   1b2ec:	cmp	r0, r1
   1b2f0:	bge	1b350 <__assert_fail@plt+0x9e4c>
   1b2f4:	ldr	r0, [sp, #16]
   1b2f8:	ldr	r0, [r0]
   1b2fc:	ldr	r1, [sp, #16]
   1b300:	ldr	r1, [r1, #24]
   1b304:	ldr	r2, [sp, #12]
   1b308:	add	r1, r1, r2
   1b30c:	add	r0, r0, r1
   1b310:	ldrb	r0, [r0]
   1b314:	str	r0, [sp, #4]
   1b318:	ldr	r0, [sp, #16]
   1b31c:	ldr	r0, [r0, #64]	; 0x40
   1b320:	ldr	r1, [sp, #4]
   1b324:	add	r0, r0, r1
   1b328:	ldrb	r0, [r0]
   1b32c:	ldr	r1, [sp, #16]
   1b330:	ldr	r1, [r1, #4]
   1b334:	ldr	r2, [sp, #12]
   1b338:	add	r1, r1, r2
   1b33c:	strb	r0, [r1]
   1b340:	ldr	r0, [sp, #12]
   1b344:	add	r0, r0, #1
   1b348:	str	r0, [sp, #12]
   1b34c:	b	1b2e4 <__assert_fail@plt+0x9de0>
   1b350:	ldr	r0, [sp, #12]
   1b354:	ldr	r1, [sp, #16]
   1b358:	str	r0, [r1, #28]
   1b35c:	ldr	r0, [sp, #12]
   1b360:	ldr	r1, [sp, #16]
   1b364:	str	r0, [r1, #32]
   1b368:	add	sp, sp, #20
   1b36c:	bx	lr
   1b370:	push	{fp, lr}
   1b374:	mov	fp, sp
   1b378:	sub	sp, sp, #16
   1b37c:	str	r0, [fp, #-4]
   1b380:	str	r1, [sp, #8]
   1b384:	str	r2, [sp, #4]
   1b388:	ldr	r0, [fp, #-4]
   1b38c:	ldr	r1, [sp, #8]
   1b390:	ldr	r2, [sp, #4]
   1b394:	bl	1b6e4 <__assert_fail@plt+0xa1e0>
   1b398:	ldr	r1, [sp, #8]
   1b39c:	ldr	r2, [r1, #40]	; 0x28
   1b3a0:	add	r0, r2, r0
   1b3a4:	str	r0, [r1, #40]	; 0x28
   1b3a8:	mov	sp, fp
   1b3ac:	pop	{fp, pc}
   1b3b0:	push	{r4, r5, fp, lr}
   1b3b4:	add	fp, sp, #8
   1b3b8:	sub	sp, sp, #72	; 0x48
   1b3bc:	ldr	ip, [fp, #12]
   1b3c0:	ldr	lr, [fp, #8]
   1b3c4:	str	r0, [fp, #-16]
   1b3c8:	str	r1, [fp, #-20]	; 0xffffffec
   1b3cc:	str	r2, [fp, #-24]	; 0xffffffe8
   1b3d0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b3d8:	ldr	r0, [r0]
   1b3dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1b3e0:	movw	r0, #0
   1b3e4:	str	r0, [sp, #40]	; 0x28
   1b3e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3ec:	ldr	r0, [r0, #84]	; 0x54
   1b3f0:	str	r0, [sp, #36]	; 0x24
   1b3f4:	ldr	r0, [fp, #-16]
   1b3f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b404:	ldr	r4, [fp, #8]
   1b408:	ldr	r5, [fp, #12]
   1b40c:	str	r4, [sp]
   1b410:	str	r5, [sp, #4]
   1b414:	str	lr, [sp, #28]
   1b418:	str	ip, [sp, #24]
   1b41c:	bl	1c778 <__assert_fail@plt+0xb274>
   1b420:	str	r0, [fp, #-36]	; 0xffffffdc
   1b424:	ldr	r0, [fp, #12]
   1b428:	ldr	r0, [r0]
   1b42c:	cmp	r0, #0
   1b430:	movw	r0, #0
   1b434:	str	r0, [sp, #20]
   1b438:	beq	1b454 <__assert_fail@plt+0x9f50>
   1b43c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b440:	movw	r1, #0
   1b444:	cmp	r0, r1
   1b448:	movw	r0, #0
   1b44c:	moveq	r0, #1
   1b450:	str	r0, [sp, #20]
   1b454:	ldr	r0, [sp, #20]
   1b458:	tst	r0, #1
   1b45c:	beq	1b46c <__assert_fail@plt+0x9f68>
   1b460:	movw	r0, #0
   1b464:	str	r0, [fp, #-12]
   1b468:	b	1b5fc <__assert_fail@plt+0xa0f8>
   1b46c:	b	1b470 <__assert_fail@plt+0x9f6c>
   1b470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b474:	ldr	r0, [r0, #4]
   1b478:	and	r0, r0, #255	; 0xff
   1b47c:	cmp	r0, #10
   1b480:	bne	1b5f4 <__assert_fail@plt+0xa0f0>
   1b484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b488:	ldr	r1, [fp, #-16]
   1b48c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b490:	orr	r2, r2, #8388608	; 0x800000
   1b494:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1b498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b49c:	ldr	r0, [r0, #4]
   1b4a0:	and	r0, r0, #255	; 0xff
   1b4a4:	cmp	r0, #10
   1b4a8:	beq	1b5a8 <__assert_fail@plt+0xa0a4>
   1b4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4b0:	ldr	r0, [r0, #4]
   1b4b4:	and	r0, r0, #255	; 0xff
   1b4b8:	cmp	r0, #2
   1b4bc:	beq	1b5a8 <__assert_fail@plt+0xa0a4>
   1b4c0:	ldr	r0, [fp, #8]
   1b4c4:	cmp	r0, #0
   1b4c8:	beq	1b4e0 <__assert_fail@plt+0x9fdc>
   1b4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4d0:	ldr	r0, [r0, #4]
   1b4d4:	and	r0, r0, #255	; 0xff
   1b4d8:	cmp	r0, #9
   1b4dc:	beq	1b5a8 <__assert_fail@plt+0xa0a4>
   1b4e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4e4:	ldr	r0, [r0, #84]	; 0x54
   1b4e8:	str	r0, [sp, #32]
   1b4ec:	ldr	r0, [sp, #36]	; 0x24
   1b4f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b4f4:	str	r0, [r1, #84]	; 0x54
   1b4f8:	ldr	r0, [fp, #-16]
   1b4fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b508:	ldr	ip, [fp, #8]
   1b50c:	ldr	lr, [fp, #12]
   1b510:	str	ip, [sp]
   1b514:	str	lr, [sp, #4]
   1b518:	bl	1c778 <__assert_fail@plt+0xb274>
   1b51c:	str	r0, [sp, #40]	; 0x28
   1b520:	ldr	r0, [fp, #12]
   1b524:	ldr	r0, [r0]
   1b528:	cmp	r0, #0
   1b52c:	movw	r0, #0
   1b530:	str	r0, [sp, #16]
   1b534:	beq	1b550 <__assert_fail@plt+0xa04c>
   1b538:	ldr	r0, [sp, #40]	; 0x28
   1b53c:	movw	r1, #0
   1b540:	cmp	r0, r1
   1b544:	movw	r0, #0
   1b548:	moveq	r0, #1
   1b54c:	str	r0, [sp, #16]
   1b550:	ldr	r0, [sp, #16]
   1b554:	tst	r0, #1
   1b558:	beq	1b590 <__assert_fail@plt+0xa08c>
   1b55c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b560:	movw	r1, #0
   1b564:	cmp	r0, r1
   1b568:	beq	1b584 <__assert_fail@plt+0xa080>
   1b56c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b570:	movw	r1, #52092	; 0xcb7c
   1b574:	movt	r1, #1
   1b578:	movw	r2, #0
   1b57c:	bl	1ca0c <__assert_fail@plt+0xb508>
   1b580:	str	r0, [sp, #12]
   1b584:	movw	r0, #0
   1b588:	str	r0, [fp, #-12]
   1b58c:	b	1b5fc <__assert_fail@plt+0xa0f8>
   1b590:	ldr	r0, [sp, #32]
   1b594:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b598:	ldr	r2, [r1, #84]	; 0x54
   1b59c:	orr	r0, r2, r0
   1b5a0:	str	r0, [r1, #84]	; 0x54
   1b5a4:	b	1b5b0 <__assert_fail@plt+0xa0ac>
   1b5a8:	movw	r0, #0
   1b5ac:	str	r0, [sp, #40]	; 0x28
   1b5b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b5b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b5b8:	ldr	r2, [sp, #40]	; 0x28
   1b5bc:	movw	r3, #10
   1b5c0:	bl	1b608 <__assert_fail@plt+0xa104>
   1b5c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b5c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b5cc:	movw	r1, #0
   1b5d0:	cmp	r0, r1
   1b5d4:	bne	1b5f0 <__assert_fail@plt+0xa0ec>
   1b5d8:	ldr	r0, [fp, #12]
   1b5dc:	movw	r1, #12
   1b5e0:	str	r1, [r0]
   1b5e4:	movw	r0, #0
   1b5e8:	str	r0, [fp, #-12]
   1b5ec:	b	1b5fc <__assert_fail@plt+0xa0f8>
   1b5f0:	b	1b470 <__assert_fail@plt+0x9f6c>
   1b5f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b5f8:	str	r0, [fp, #-12]
   1b5fc:	ldr	r0, [fp, #-12]
   1b600:	sub	sp, fp, #8
   1b604:	pop	{r4, r5, fp, pc}
   1b608:	push	{fp, lr}
   1b60c:	mov	fp, sp
   1b610:	sub	sp, sp, #32
   1b614:	add	ip, sp, #8
   1b618:	ldr	lr, [pc, #192]	; 1b6e0 <__assert_fail@plt+0xa1dc>
   1b61c:	str	r0, [fp, #-4]
   1b620:	str	r1, [fp, #-8]
   1b624:	str	r2, [fp, #-12]
   1b628:	str	r3, [sp, #16]
   1b62c:	mov	r0, ip
   1b630:	movw	r1, #0
   1b634:	and	r1, r1, #255	; 0xff
   1b638:	movw	r2, #4
   1b63c:	str	lr, [sp, #4]
   1b640:	str	ip, [sp]
   1b644:	bl	11420 <memset@plt>
   1b648:	ldr	r0, [sp, #16]
   1b64c:	ldr	r1, [sp, #12]
   1b650:	and	r0, r0, #255	; 0xff
   1b654:	mvn	r2, #255	; 0xff
   1b658:	and	r1, r1, r2
   1b65c:	orr	r0, r1, r0
   1b660:	str	r0, [sp, #12]
   1b664:	ldr	r0, [sp, #12]
   1b668:	ldr	r1, [sp, #4]
   1b66c:	and	r0, r0, r1
   1b670:	str	r0, [sp, #12]
   1b674:	ldr	r0, [sp, #12]
   1b678:	mvn	r2, #262144	; 0x40000
   1b67c:	and	r0, r0, r2
   1b680:	str	r0, [sp, #12]
   1b684:	ldr	r0, [sp, #12]
   1b688:	mvn	r2, #524288	; 0x80000
   1b68c:	and	r0, r0, r2
   1b690:	str	r0, [sp, #12]
   1b694:	ldr	r0, [sp, #12]
   1b698:	mvn	r2, #1048576	; 0x100000
   1b69c:	and	r0, r0, r2
   1b6a0:	str	r0, [sp, #12]
   1b6a4:	ldr	r0, [sp, #12]
   1b6a8:	mvn	r2, #2097152	; 0x200000
   1b6ac:	and	r0, r0, r2
   1b6b0:	str	r0, [sp, #12]
   1b6b4:	ldr	r0, [sp, #12]
   1b6b8:	mvn	r2, #4194304	; 0x400000
   1b6bc:	and	r0, r0, r2
   1b6c0:	str	r0, [sp, #12]
   1b6c4:	ldr	r0, [fp, #-4]
   1b6c8:	ldr	r1, [fp, #-8]
   1b6cc:	ldr	r2, [fp, #-12]
   1b6d0:	ldr	r3, [sp]
   1b6d4:	bl	1d698 <__assert_fail@plt+0xc194>
   1b6d8:	mov	sp, fp
   1b6dc:	pop	{fp, pc}
   1b6e0:			; <UNDEFINED> instruction: 0xfffc00ff
   1b6e4:	push	{fp, lr}
   1b6e8:	mov	fp, sp
   1b6ec:	sub	sp, sp, #80	; 0x50
   1b6f0:	str	r0, [fp, #-8]
   1b6f4:	str	r1, [fp, #-12]
   1b6f8:	str	r2, [fp, #-16]
   1b6fc:	ldr	r0, [fp, #-12]
   1b700:	ldr	r0, [r0, #56]	; 0x38
   1b704:	ldr	r1, [fp, #-12]
   1b708:	ldr	r1, [r1, #40]	; 0x28
   1b70c:	cmp	r0, r1
   1b710:	bgt	1b738 <__assert_fail@plt+0xa234>
   1b714:	ldr	r0, [fp, #-8]
   1b718:	ldr	r1, [r0, #4]
   1b71c:	mvn	r2, #255	; 0xff
   1b720:	and	r1, r1, r2
   1b724:	orr	r1, r1, #2
   1b728:	str	r1, [r0, #4]
   1b72c:	movw	r0, #0
   1b730:	str	r0, [fp, #-4]
   1b734:	b	1c54c <__assert_fail@plt+0xb048>
   1b738:	ldr	r0, [fp, #-12]
   1b73c:	ldr	r0, [r0, #4]
   1b740:	ldr	r1, [fp, #-12]
   1b744:	ldr	r1, [r1, #40]	; 0x28
   1b748:	add	r1, r1, #0
   1b74c:	add	r0, r0, r1
   1b750:	ldrb	r0, [r0]
   1b754:	strb	r0, [fp, #-17]	; 0xffffffef
   1b758:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1b75c:	ldr	r1, [fp, #-8]
   1b760:	strb	r0, [r1]
   1b764:	ldr	r0, [fp, #-8]
   1b768:	ldr	r1, [r0, #4]
   1b76c:	mvn	r2, #4194304	; 0x400000
   1b770:	and	r1, r1, r2
   1b774:	str	r1, [r0, #4]
   1b778:	ldr	r0, [fp, #-8]
   1b77c:	ldr	r1, [r0, #4]
   1b780:	mvn	r2, #2097152	; 0x200000
   1b784:	and	r1, r1, r2
   1b788:	str	r1, [r0, #4]
   1b78c:	ldr	r0, [fp, #-12]
   1b790:	ldr	r0, [r0, #80]	; 0x50
   1b794:	cmp	r0, #1
   1b798:	ble	1b80c <__assert_fail@plt+0xa308>
   1b79c:	ldr	r0, [fp, #-12]
   1b7a0:	ldr	r0, [r0, #40]	; 0x28
   1b7a4:	ldr	r1, [fp, #-12]
   1b7a8:	ldr	r1, [r1, #28]
   1b7ac:	cmp	r0, r1
   1b7b0:	beq	1b80c <__assert_fail@plt+0xa308>
   1b7b4:	ldr	r0, [fp, #-12]
   1b7b8:	ldr	r1, [r0, #8]
   1b7bc:	ldr	r0, [r0, #40]	; 0x28
   1b7c0:	add	r0, r1, r0, lsl #2
   1b7c4:	ldr	r0, [r0]
   1b7c8:	cmn	r0, #1
   1b7cc:	bne	1b80c <__assert_fail@plt+0xa308>
   1b7d0:	ldr	r0, [fp, #-8]
   1b7d4:	ldr	r1, [r0, #4]
   1b7d8:	mvn	r2, #255	; 0xff
   1b7dc:	and	r1, r1, r2
   1b7e0:	orr	r1, r1, #1
   1b7e4:	str	r1, [r0, #4]
   1b7e8:	ldr	r0, [fp, #-8]
   1b7ec:	ldr	r1, [r0, #4]
   1b7f0:	mvn	r2, #2097152	; 0x200000
   1b7f4:	and	r1, r1, r2
   1b7f8:	orr	r1, r1, #2097152	; 0x200000
   1b7fc:	str	r1, [r0, #4]
   1b800:	movw	r0, #1
   1b804:	str	r0, [fp, #-4]
   1b808:	b	1c54c <__assert_fail@plt+0xb048>
   1b80c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1b810:	cmp	r0, #92	; 0x5c
   1b814:	bne	1bee8 <__assert_fail@plt+0xa9e4>
   1b818:	ldr	r0, [fp, #-12]
   1b81c:	ldr	r0, [r0, #40]	; 0x28
   1b820:	add	r0, r0, #1
   1b824:	ldr	r1, [fp, #-12]
   1b828:	ldr	r1, [r1, #48]	; 0x30
   1b82c:	cmp	r0, r1
   1b830:	blt	1b858 <__assert_fail@plt+0xa354>
   1b834:	ldr	r0, [fp, #-8]
   1b838:	ldr	r1, [r0, #4]
   1b83c:	mvn	r2, #255	; 0xff
   1b840:	and	r1, r1, r2
   1b844:	orr	r1, r1, #36	; 0x24
   1b848:	str	r1, [r0, #4]
   1b84c:	movw	r0, #1
   1b850:	str	r0, [fp, #-4]
   1b854:	b	1c54c <__assert_fail@plt+0xb048>
   1b858:	ldr	r0, [fp, #-12]
   1b85c:	movw	r1, #1
   1b860:	bl	1c55c <__assert_fail@plt+0xb058>
   1b864:	strb	r0, [fp, #-18]	; 0xffffffee
   1b868:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b86c:	ldr	r1, [fp, #-8]
   1b870:	strb	r0, [r1]
   1b874:	ldr	r0, [fp, #-8]
   1b878:	ldr	r1, [r0, #4]
   1b87c:	mvn	lr, #255	; 0xff
   1b880:	and	r1, r1, lr
   1b884:	orr	r1, r1, #1
   1b888:	str	r1, [r0, #4]
   1b88c:	ldr	r0, [fp, #-12]
   1b890:	ldr	r0, [r0, #80]	; 0x50
   1b894:	cmp	r0, #1
   1b898:	ble	1b91c <__assert_fail@plt+0xa418>
   1b89c:	ldr	r0, [fp, #-12]
   1b8a0:	ldr	r1, [fp, #-12]
   1b8a4:	ldr	r1, [r1, #40]	; 0x28
   1b8a8:	add	r1, r1, #1
   1b8ac:	bl	1c71c <__assert_fail@plt+0xb218>
   1b8b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8b8:	bl	11408 <iswalnum@plt>
   1b8bc:	cmp	r0, #0
   1b8c0:	movw	r0, #1
   1b8c4:	str	r0, [sp, #36]	; 0x24
   1b8c8:	bne	1b8e0 <__assert_fail@plt+0xa3dc>
   1b8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8d0:	cmp	r0, #95	; 0x5f
   1b8d4:	movw	r0, #0
   1b8d8:	moveq	r0, #1
   1b8dc:	str	r0, [sp, #36]	; 0x24
   1b8e0:	ldr	r0, [sp, #36]	; 0x24
   1b8e4:	and	r0, r0, #1
   1b8e8:	cmp	r0, #0
   1b8ec:	movw	r0, #0
   1b8f0:	movne	r0, #1
   1b8f4:	and	r0, r0, #1
   1b8f8:	ldr	r1, [fp, #-8]
   1b8fc:	ldr	r2, [r1, #4]
   1b900:	and	r0, r0, #1
   1b904:	lsl	r0, r0, #22
   1b908:	mvn	r3, #4194304	; 0x400000
   1b90c:	and	r2, r2, r3
   1b910:	orr	r0, r2, r0
   1b914:	str	r0, [r1, #4]
   1b918:	b	1b998 <__assert_fail@plt+0xa494>
   1b91c:	bl	113b4 <__ctype_b_loc@plt>
   1b920:	ldr	r0, [r0]
   1b924:	ldrb	lr, [fp, #-18]	; 0xffffffee
   1b928:	mov	r1, lr
   1b92c:	add	r0, r0, lr, lsl #1
   1b930:	ldrh	r0, [r0]
   1b934:	and	r0, r0, #8
   1b938:	cmp	r0, #0
   1b93c:	movw	r0, #1
   1b940:	str	r1, [sp, #32]
   1b944:	str	r0, [sp, #28]
   1b948:	bne	1b960 <__assert_fail@plt+0xa45c>
   1b94c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b950:	cmp	r0, #95	; 0x5f
   1b954:	movw	r0, #0
   1b958:	moveq	r0, #1
   1b95c:	str	r0, [sp, #28]
   1b960:	ldr	r0, [sp, #28]
   1b964:	and	r0, r0, #1
   1b968:	cmp	r0, #0
   1b96c:	movw	r0, #0
   1b970:	movne	r0, #1
   1b974:	and	r0, r0, #1
   1b978:	ldr	r1, [fp, #-8]
   1b97c:	ldr	r2, [r1, #4]
   1b980:	and	r0, r0, #1
   1b984:	lsl	r0, r0, #22
   1b988:	mvn	r3, #4194304	; 0x400000
   1b98c:	and	r2, r2, r3
   1b990:	orr	r0, r2, r0
   1b994:	str	r0, [r1, #4]
   1b998:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b99c:	sub	r0, r0, #39	; 0x27
   1b9a0:	cmp	r0, #86	; 0x56
   1b9a4:	str	r0, [sp, #24]
   1b9a8:	bhi	1bed8 <__assert_fail@plt+0xa9d4>
   1b9ac:	add	r0, pc, #8
   1b9b0:	ldr	r1, [sp, #24]
   1b9b4:	ldr	r0, [r0, r1, lsl #2]
   1b9b8:	mov	pc, r0
   1b9bc:	andeq	fp, r1, r8, asr sp
   1b9c0:	muleq	r1, r0, sp
   1b9c4:			; <UNDEFINED> instruction: 0x0001bdbc
   1b9c8:	ldrdeq	fp, [r1], -r8
   1b9cc:	andeq	fp, r1, r8, ror #27
   1b9d0:	ldrdeq	fp, [r1], -r8
   1b9d4:	ldrdeq	fp, [r1], -r8
   1b9d8:	ldrdeq	fp, [r1], -r8
   1b9dc:	ldrdeq	fp, [r1], -r8
   1b9e0:	ldrdeq	fp, [r1], -r8
   1b9e4:	andeq	fp, r1, r4, asr fp
   1b9e8:	andeq	fp, r1, r4, asr fp
   1b9ec:	andeq	fp, r1, r4, asr fp
   1b9f0:	andeq	fp, r1, r4, asr fp
   1b9f4:	andeq	fp, r1, r4, asr fp
   1b9f8:	andeq	fp, r1, r4, asr fp
   1b9fc:	andeq	fp, r1, r4, asr fp
   1ba00:	andeq	fp, r1, r4, asr fp
   1ba04:	andeq	fp, r1, r4, asr fp
   1ba08:	ldrdeq	fp, [r1], -r8
   1ba0c:	ldrdeq	fp, [r1], -r8
   1ba10:	muleq	r1, r0, fp
   1ba14:	ldrdeq	fp, [r1], -r8
   1ba18:	andeq	fp, r1, r8, asr #23
   1ba1c:	andeq	fp, r1, r4, lsr #28
   1ba20:	ldrdeq	fp, [r1], -r8
   1ba24:	ldrdeq	fp, [r1], -r8
   1ba28:	andeq	fp, r1, r8, lsr ip
   1ba2c:	ldrdeq	fp, [r1], -r8
   1ba30:	ldrdeq	fp, [r1], -r8
   1ba34:	ldrdeq	fp, [r1], -r8
   1ba38:	ldrdeq	fp, [r1], -r8
   1ba3c:	ldrdeq	fp, [r1], -r8
   1ba40:	ldrdeq	fp, [r1], -r8
   1ba44:	ldrdeq	fp, [r1], -r8
   1ba48:	ldrdeq	fp, [r1], -r8
   1ba4c:	ldrdeq	fp, [r1], -r8
   1ba50:	ldrdeq	fp, [r1], -r8
   1ba54:	ldrdeq	fp, [r1], -r8
   1ba58:	ldrdeq	fp, [r1], -r8
   1ba5c:	ldrdeq	fp, [r1], -r8
   1ba60:	ldrdeq	fp, [r1], -r8
   1ba64:	ldrdeq	fp, [r1], -r8
   1ba68:	ldrdeq	fp, [r1], -r8
   1ba6c:	strdeq	fp, [r1], -r4
   1ba70:	ldrdeq	fp, [r1], -r8
   1ba74:	ldrdeq	fp, [r1], -r8
   1ba78:	ldrdeq	fp, [r1], -r8
   1ba7c:	muleq	r1, ip, ip
   1ba80:	ldrdeq	fp, [r1], -r8
   1ba84:	ldrdeq	fp, [r1], -r8
   1ba88:	ldrdeq	fp, [r1], -r8
   1ba8c:	ldrdeq	fp, [r1], -r8
   1ba90:	ldrdeq	fp, [r1], -r8
   1ba94:	ldrdeq	fp, [r1], -r8
   1ba98:	ldrdeq	fp, [r1], -r8
   1ba9c:	ldrdeq	fp, [r1], -r8
   1baa0:	andeq	fp, r1, r0, lsr #26
   1baa4:	ldrdeq	fp, [r1], -r8
   1baa8:	andeq	fp, r1, r0, lsl #24
   1baac:	ldrdeq	fp, [r1], -r8
   1bab0:	ldrdeq	fp, [r1], -r8
   1bab4:	ldrdeq	fp, [r1], -r8
   1bab8:	ldrdeq	fp, [r1], -r8
   1babc:	ldrdeq	fp, [r1], -r8
   1bac0:	ldrdeq	fp, [r1], -r8
   1bac4:	ldrdeq	fp, [r1], -r8
   1bac8:	ldrdeq	fp, [r1], -r8
   1bacc:	ldrdeq	fp, [r1], -r8
   1bad0:	ldrdeq	fp, [r1], -r8
   1bad4:	ldrdeq	fp, [r1], -r8
   1bad8:	ldrdeq	fp, [r1], -r8
   1badc:	ldrdeq	fp, [r1], -r8
   1bae0:	ldrdeq	fp, [r1], -r8
   1bae4:	ldrdeq	fp, [r1], -r8
   1bae8:	ldrdeq	fp, [r1], -r8
   1baec:	andeq	fp, r1, r8, asr #25
   1baf0:	ldrdeq	fp, [r1], -r8
   1baf4:	ldrdeq	fp, [r1], -r8
   1baf8:	ldrdeq	fp, [r1], -r8
   1bafc:	andeq	fp, r1, r0, ror ip
   1bb00:	ldrdeq	fp, [r1], -r8
   1bb04:	ldrdeq	fp, [r1], -r8
   1bb08:	ldrdeq	fp, [r1], -r8
   1bb0c:	andeq	fp, r1, r0, ror #28
   1bb10:	andeq	fp, r1, r8, lsl fp
   1bb14:	muleq	r1, ip, lr
   1bb18:	ldr	r0, [fp, #-16]
   1bb1c:	and	r0, r0, #1024	; 0x400
   1bb20:	cmp	r0, #0
   1bb24:	bne	1bb50 <__assert_fail@plt+0xa64c>
   1bb28:	ldr	r0, [fp, #-16]
   1bb2c:	and	r0, r0, #32768	; 0x8000
   1bb30:	cmp	r0, #0
   1bb34:	bne	1bb50 <__assert_fail@plt+0xa64c>
   1bb38:	ldr	r0, [fp, #-8]
   1bb3c:	ldr	r1, [r0, #4]
   1bb40:	mvn	r2, #255	; 0xff
   1bb44:	and	r1, r1, r2
   1bb48:	orr	r1, r1, #10
   1bb4c:	str	r1, [r0, #4]
   1bb50:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bb54:	ldr	r0, [fp, #-16]
   1bb58:	and	r0, r0, #16384	; 0x4000
   1bb5c:	cmp	r0, #0
   1bb60:	bne	1bb8c <__assert_fail@plt+0xa688>
   1bb64:	ldr	r0, [fp, #-8]
   1bb68:	ldr	r1, [r0, #4]
   1bb6c:	mvn	r2, #255	; 0xff
   1bb70:	and	r1, r1, r2
   1bb74:	orr	r1, r1, #4
   1bb78:	str	r1, [r0, #4]
   1bb7c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1bb80:	sub	r0, r0, #49	; 0x31
   1bb84:	ldr	r1, [fp, #-8]
   1bb88:	str	r0, [r1]
   1bb8c:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bb90:	ldr	r0, [fp, #-16]
   1bb94:	and	r0, r0, #524288	; 0x80000
   1bb98:	cmp	r0, #0
   1bb9c:	bne	1bbc4 <__assert_fail@plt+0xa6c0>
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r1, [r0, #4]
   1bba8:	mvn	r2, #255	; 0xff
   1bbac:	and	r1, r1, r2
   1bbb0:	orr	r1, r1, #12
   1bbb4:	str	r1, [r0, #4]
   1bbb8:	ldr	r0, [fp, #-8]
   1bbbc:	movw	r1, #6
   1bbc0:	str	r1, [r0]
   1bbc4:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bbc8:	ldr	r0, [fp, #-16]
   1bbcc:	and	r0, r0, #524288	; 0x80000
   1bbd0:	cmp	r0, #0
   1bbd4:	bne	1bbfc <__assert_fail@plt+0xa6f8>
   1bbd8:	ldr	r0, [fp, #-8]
   1bbdc:	ldr	r1, [r0, #4]
   1bbe0:	mvn	r2, #255	; 0xff
   1bbe4:	and	r1, r1, r2
   1bbe8:	orr	r1, r1, #12
   1bbec:	str	r1, [r0, #4]
   1bbf0:	ldr	r0, [fp, #-8]
   1bbf4:	movw	r1, #9
   1bbf8:	str	r1, [r0]
   1bbfc:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bc00:	ldr	r0, [fp, #-16]
   1bc04:	and	r0, r0, #524288	; 0x80000
   1bc08:	cmp	r0, #0
   1bc0c:	bne	1bc34 <__assert_fail@plt+0xa730>
   1bc10:	ldr	r0, [fp, #-8]
   1bc14:	ldr	r1, [r0, #4]
   1bc18:	mvn	r2, #255	; 0xff
   1bc1c:	and	r1, r1, r2
   1bc20:	orr	r1, r1, #12
   1bc24:	str	r1, [r0, #4]
   1bc28:	ldr	r0, [fp, #-8]
   1bc2c:	movw	r1, #256	; 0x100
   1bc30:	str	r1, [r0]
   1bc34:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bc38:	ldr	r0, [fp, #-16]
   1bc3c:	and	r0, r0, #524288	; 0x80000
   1bc40:	cmp	r0, #0
   1bc44:	bne	1bc6c <__assert_fail@plt+0xa768>
   1bc48:	ldr	r0, [fp, #-8]
   1bc4c:	ldr	r1, [r0, #4]
   1bc50:	mvn	r2, #255	; 0xff
   1bc54:	and	r1, r1, r2
   1bc58:	orr	r1, r1, #12
   1bc5c:	str	r1, [r0, #4]
   1bc60:	ldr	r0, [fp, #-8]
   1bc64:	movw	r1, #512	; 0x200
   1bc68:	str	r1, [r0]
   1bc6c:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bc70:	ldr	r0, [fp, #-16]
   1bc74:	and	r0, r0, #524288	; 0x80000
   1bc78:	cmp	r0, #0
   1bc7c:	bne	1bc98 <__assert_fail@plt+0xa794>
   1bc80:	ldr	r0, [fp, #-8]
   1bc84:	ldr	r1, [r0, #4]
   1bc88:	mvn	r2, #255	; 0xff
   1bc8c:	and	r1, r1, r2
   1bc90:	orr	r1, r1, #32
   1bc94:	str	r1, [r0, #4]
   1bc98:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bc9c:	ldr	r0, [fp, #-16]
   1bca0:	and	r0, r0, #524288	; 0x80000
   1bca4:	cmp	r0, #0
   1bca8:	bne	1bcc4 <__assert_fail@plt+0xa7c0>
   1bcac:	ldr	r0, [fp, #-8]
   1bcb0:	ldr	r1, [r0, #4]
   1bcb4:	mvn	r2, #255	; 0xff
   1bcb8:	and	r1, r1, r2
   1bcbc:	orr	r1, r1, #33	; 0x21
   1bcc0:	str	r1, [r0, #4]
   1bcc4:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bcc8:	ldr	r0, [fp, #-16]
   1bccc:	and	r0, r0, #524288	; 0x80000
   1bcd0:	cmp	r0, #0
   1bcd4:	bne	1bcf0 <__assert_fail@plt+0xa7ec>
   1bcd8:	ldr	r0, [fp, #-8]
   1bcdc:	ldr	r1, [r0, #4]
   1bce0:	mvn	r2, #255	; 0xff
   1bce4:	and	r1, r1, r2
   1bce8:	orr	r1, r1, #34	; 0x22
   1bcec:	str	r1, [r0, #4]
   1bcf0:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bcf4:	ldr	r0, [fp, #-16]
   1bcf8:	and	r0, r0, #524288	; 0x80000
   1bcfc:	cmp	r0, #0
   1bd00:	bne	1bd1c <__assert_fail@plt+0xa818>
   1bd04:	ldr	r0, [fp, #-8]
   1bd08:	ldr	r1, [r0, #4]
   1bd0c:	mvn	r2, #255	; 0xff
   1bd10:	and	r1, r1, r2
   1bd14:	orr	r1, r1, #35	; 0x23
   1bd18:	str	r1, [r0, #4]
   1bd1c:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bd20:	ldr	r0, [fp, #-16]
   1bd24:	and	r0, r0, #524288	; 0x80000
   1bd28:	cmp	r0, #0
   1bd2c:	bne	1bd54 <__assert_fail@plt+0xa850>
   1bd30:	ldr	r0, [fp, #-8]
   1bd34:	ldr	r1, [r0, #4]
   1bd38:	mvn	r2, #255	; 0xff
   1bd3c:	and	r1, r1, r2
   1bd40:	orr	r1, r1, #12
   1bd44:	str	r1, [r0, #4]
   1bd48:	ldr	r0, [fp, #-8]
   1bd4c:	movw	r1, #64	; 0x40
   1bd50:	str	r1, [r0]
   1bd54:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bd58:	ldr	r0, [fp, #-16]
   1bd5c:	and	r0, r0, #524288	; 0x80000
   1bd60:	cmp	r0, #0
   1bd64:	bne	1bd8c <__assert_fail@plt+0xa888>
   1bd68:	ldr	r0, [fp, #-8]
   1bd6c:	ldr	r1, [r0, #4]
   1bd70:	mvn	r2, #255	; 0xff
   1bd74:	and	r1, r1, r2
   1bd78:	orr	r1, r1, #12
   1bd7c:	str	r1, [r0, #4]
   1bd80:	ldr	r0, [fp, #-8]
   1bd84:	movw	r1, #128	; 0x80
   1bd88:	str	r1, [r0]
   1bd8c:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bd90:	ldr	r0, [fp, #-16]
   1bd94:	and	r0, r0, #8192	; 0x2000
   1bd98:	cmp	r0, #0
   1bd9c:	bne	1bdb8 <__assert_fail@plt+0xa8b4>
   1bda0:	ldr	r0, [fp, #-8]
   1bda4:	ldr	r1, [r0, #4]
   1bda8:	mvn	r2, #255	; 0xff
   1bdac:	and	r1, r1, r2
   1bdb0:	orr	r1, r1, #8
   1bdb4:	str	r1, [r0, #4]
   1bdb8:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bdbc:	ldr	r0, [fp, #-16]
   1bdc0:	and	r0, r0, #8192	; 0x2000
   1bdc4:	cmp	r0, #0
   1bdc8:	bne	1bde4 <__assert_fail@plt+0xa8e0>
   1bdcc:	ldr	r0, [fp, #-8]
   1bdd0:	ldr	r1, [r0, #4]
   1bdd4:	mvn	r2, #255	; 0xff
   1bdd8:	and	r1, r1, r2
   1bddc:	orr	r1, r1, #9
   1bde0:	str	r1, [r0, #4]
   1bde4:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bde8:	ldr	r0, [fp, #-16]
   1bdec:	and	r0, r0, #1024	; 0x400
   1bdf0:	cmp	r0, #0
   1bdf4:	bne	1be20 <__assert_fail@plt+0xa91c>
   1bdf8:	ldr	r0, [fp, #-16]
   1bdfc:	and	r0, r0, #2
   1be00:	cmp	r0, #0
   1be04:	beq	1be20 <__assert_fail@plt+0xa91c>
   1be08:	ldr	r0, [fp, #-8]
   1be0c:	ldr	r1, [r0, #4]
   1be10:	mvn	r2, #255	; 0xff
   1be14:	and	r1, r1, r2
   1be18:	orr	r1, r1, #18
   1be1c:	str	r1, [r0, #4]
   1be20:	b	1bedc <__assert_fail@plt+0xa9d8>
   1be24:	ldr	r0, [fp, #-16]
   1be28:	and	r0, r0, #1024	; 0x400
   1be2c:	cmp	r0, #0
   1be30:	bne	1be5c <__assert_fail@plt+0xa958>
   1be34:	ldr	r0, [fp, #-16]
   1be38:	and	r0, r0, #2
   1be3c:	cmp	r0, #0
   1be40:	beq	1be5c <__assert_fail@plt+0xa958>
   1be44:	ldr	r0, [fp, #-8]
   1be48:	ldr	r1, [r0, #4]
   1be4c:	mvn	r2, #255	; 0xff
   1be50:	and	r1, r1, r2
   1be54:	orr	r1, r1, #19
   1be58:	str	r1, [r0, #4]
   1be5c:	b	1bedc <__assert_fail@plt+0xa9d8>
   1be60:	ldr	r0, [fp, #-16]
   1be64:	and	r0, r0, #512	; 0x200
   1be68:	cmp	r0, #0
   1be6c:	beq	1be98 <__assert_fail@plt+0xa994>
   1be70:	ldr	r0, [fp, #-16]
   1be74:	and	r0, r0, #4096	; 0x1000
   1be78:	cmp	r0, #0
   1be7c:	bne	1be98 <__assert_fail@plt+0xa994>
   1be80:	ldr	r0, [fp, #-8]
   1be84:	ldr	r1, [r0, #4]
   1be88:	mvn	r2, #255	; 0xff
   1be8c:	and	r1, r1, r2
   1be90:	orr	r1, r1, #23
   1be94:	str	r1, [r0, #4]
   1be98:	b	1bedc <__assert_fail@plt+0xa9d8>
   1be9c:	ldr	r0, [fp, #-16]
   1bea0:	and	r0, r0, #512	; 0x200
   1bea4:	cmp	r0, #0
   1bea8:	beq	1bed4 <__assert_fail@plt+0xa9d0>
   1beac:	ldr	r0, [fp, #-16]
   1beb0:	and	r0, r0, #4096	; 0x1000
   1beb4:	cmp	r0, #0
   1beb8:	bne	1bed4 <__assert_fail@plt+0xa9d0>
   1bebc:	ldr	r0, [fp, #-8]
   1bec0:	ldr	r1, [r0, #4]
   1bec4:	mvn	r2, #255	; 0xff
   1bec8:	and	r1, r1, r2
   1becc:	orr	r1, r1, #24
   1bed0:	str	r1, [r0, #4]
   1bed4:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bed8:	b	1bedc <__assert_fail@plt+0xa9d8>
   1bedc:	movw	r0, #2
   1bee0:	str	r0, [fp, #-4]
   1bee4:	b	1c54c <__assert_fail@plt+0xb048>
   1bee8:	ldr	r0, [fp, #-8]
   1beec:	ldr	r1, [r0, #4]
   1bef0:	mvn	r2, #255	; 0xff
   1bef4:	and	r1, r1, r2
   1bef8:	orr	r1, r1, #1
   1befc:	str	r1, [r0, #4]
   1bf00:	ldr	r0, [fp, #-12]
   1bf04:	ldr	r0, [r0, #80]	; 0x50
   1bf08:	cmp	r0, #1
   1bf0c:	ble	1bf8c <__assert_fail@plt+0xaa88>
   1bf10:	ldr	r0, [fp, #-12]
   1bf14:	ldr	r1, [fp, #-12]
   1bf18:	ldr	r1, [r1, #40]	; 0x28
   1bf1c:	bl	1c71c <__assert_fail@plt+0xb218>
   1bf20:	str	r0, [fp, #-28]	; 0xffffffe4
   1bf24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf28:	bl	11408 <iswalnum@plt>
   1bf2c:	cmp	r0, #0
   1bf30:	movw	r0, #1
   1bf34:	str	r0, [sp, #20]
   1bf38:	bne	1bf50 <__assert_fail@plt+0xaa4c>
   1bf3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf40:	cmp	r0, #95	; 0x5f
   1bf44:	movw	r0, #0
   1bf48:	moveq	r0, #1
   1bf4c:	str	r0, [sp, #20]
   1bf50:	ldr	r0, [sp, #20]
   1bf54:	and	r0, r0, #1
   1bf58:	cmp	r0, #0
   1bf5c:	movw	r0, #0
   1bf60:	movne	r0, #1
   1bf64:	and	r0, r0, #1
   1bf68:	ldr	r1, [fp, #-8]
   1bf6c:	ldr	r2, [r1, #4]
   1bf70:	and	r0, r0, #1
   1bf74:	lsl	r0, r0, #22
   1bf78:	mvn	r3, #4194304	; 0x400000
   1bf7c:	and	r2, r2, r3
   1bf80:	orr	r0, r2, r0
   1bf84:	str	r0, [r1, #4]
   1bf88:	b	1c000 <__assert_fail@plt+0xaafc>
   1bf8c:	bl	113b4 <__ctype_b_loc@plt>
   1bf90:	ldr	r0, [r0]
   1bf94:	ldr	lr, [fp, #-8]
   1bf98:	ldrb	lr, [lr]
   1bf9c:	mov	r1, lr
   1bfa0:	add	r0, r0, lr, lsl #1
   1bfa4:	ldrh	r0, [r0]
   1bfa8:	and	r0, r0, #8
   1bfac:	cmp	r0, #0
   1bfb0:	movw	r0, #1
   1bfb4:	str	r1, [sp, #16]
   1bfb8:	str	r0, [sp, #12]
   1bfbc:	bne	1bfd8 <__assert_fail@plt+0xaad4>
   1bfc0:	ldr	r0, [fp, #-8]
   1bfc4:	ldrb	r0, [r0]
   1bfc8:	cmp	r0, #95	; 0x5f
   1bfcc:	movw	r0, #0
   1bfd0:	moveq	r0, #1
   1bfd4:	str	r0, [sp, #12]
   1bfd8:	ldr	r0, [sp, #12]
   1bfdc:	and	r0, r0, #1
   1bfe0:	ldr	r1, [fp, #-8]
   1bfe4:	ldr	r2, [r1, #4]
   1bfe8:	and	r0, r0, #1
   1bfec:	lsl	r0, r0, #22
   1bff0:	mvn	r3, #4194304	; 0x400000
   1bff4:	and	r2, r2, r3
   1bff8:	orr	r0, r2, r0
   1bffc:	str	r0, [r1, #4]
   1c000:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1c004:	sub	r0, r0, #10
   1c008:	cmp	r0, #115	; 0x73
   1c00c:	str	r0, [sp, #8]
   1c010:	bhi	1c540 <__assert_fail@plt+0xb03c>
   1c014:	add	r0, pc, #8
   1c018:	ldr	r1, [sp, #8]
   1c01c:	ldr	r0, [r0, r1, lsl #2]
   1c020:	mov	pc, r0
   1c024:	strdeq	ip, [r1], -r4
   1c028:	andeq	ip, r1, r0, asr #10
   1c02c:	andeq	ip, r1, r0, asr #10
   1c030:	andeq	ip, r1, r0, asr #10
   1c034:	andeq	ip, r1, r0, asr #10
   1c038:	andeq	ip, r1, r0, asr #10
   1c03c:	andeq	ip, r1, r0, asr #10
   1c040:	andeq	ip, r1, r0, asr #10
   1c044:	andeq	ip, r1, r0, asr #10
   1c048:	andeq	ip, r1, r0, asr #10
   1c04c:	andeq	ip, r1, r0, asr #10
   1c050:	andeq	ip, r1, r0, asr #10
   1c054:	andeq	ip, r1, r0, asr #10
   1c058:	andeq	ip, r1, r0, asr #10
   1c05c:	andeq	ip, r1, r0, asr #10
   1c060:	andeq	ip, r1, r0, asr #10
   1c064:	andeq	ip, r1, r0, asr #10
   1c068:	andeq	ip, r1, r0, asr #10
   1c06c:	andeq	ip, r1, r0, asr #10
   1c070:	andeq	ip, r1, r0, asr #10
   1c074:	andeq	ip, r1, r0, asr #10
   1c078:	andeq	ip, r1, r0, asr #10
   1c07c:	andeq	ip, r1, r0, asr #10
   1c080:	andeq	ip, r1, r0, asr #10
   1c084:	andeq	ip, r1, r0, asr #10
   1c088:	andeq	ip, r1, r0, asr #10
   1c08c:	andeq	ip, r1, ip, lsl #9
   1c090:	andeq	ip, r1, r0, asr #10
   1c094:	andeq	ip, r1, r0, asr #10
   1c098:	andeq	ip, r1, r0, asr #10
   1c09c:	andeq	ip, r1, r8, ror #6
   1c0a0:	muleq	r1, r4, r3
   1c0a4:	andeq	ip, r1, ip, asr r2
   1c0a8:	andeq	ip, r1, r8, ror r2
   1c0ac:	andeq	ip, r1, r0, asr #10
   1c0b0:	andeq	ip, r1, r0, asr #10
   1c0b4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c0b8:	andeq	ip, r1, r0, asr #10
   1c0bc:	andeq	ip, r1, r0, asr #10
   1c0c0:	andeq	ip, r1, r0, asr #10
   1c0c4:	andeq	ip, r1, r0, asr #10
   1c0c8:	andeq	ip, r1, r0, asr #10
   1c0cc:	andeq	ip, r1, r0, asr #10
   1c0d0:	andeq	ip, r1, r0, asr #10
   1c0d4:	andeq	ip, r1, r0, asr #10
   1c0d8:	andeq	ip, r1, r0, asr #10
   1c0dc:	andeq	ip, r1, r0, asr #10
   1c0e0:	andeq	ip, r1, r0, asr #10
   1c0e4:	andeq	ip, r1, r0, asr #10
   1c0e8:	andeq	ip, r1, r0, asr #10
   1c0ec:	andeq	ip, r1, r0, asr #10
   1c0f0:	andeq	ip, r1, r0, asr #10
   1c0f4:	andeq	ip, r1, r0, asr #10
   1c0f8:			; <UNDEFINED> instruction: 0x0001c2b4
   1c0fc:	andeq	ip, r1, r0, asr #10
   1c100:	andeq	ip, r1, r0, asr #10
   1c104:	andeq	ip, r1, r0, asr #10
   1c108:	andeq	ip, r1, r0, asr #10
   1c10c:	andeq	ip, r1, r0, asr #10
   1c110:	andeq	ip, r1, r0, asr #10
   1c114:	andeq	ip, r1, r0, asr #10
   1c118:	andeq	ip, r1, r0, asr #10
   1c11c:	andeq	ip, r1, r0, asr #10
   1c120:	andeq	ip, r1, r0, asr #10
   1c124:	andeq	ip, r1, r0, asr #10
   1c128:	andeq	ip, r1, r0, asr #10
   1c12c:	andeq	ip, r1, r0, asr #10
   1c130:	andeq	ip, r1, r0, asr #10
   1c134:	andeq	ip, r1, r0, asr #10
   1c138:	andeq	ip, r1, r0, asr #10
   1c13c:	andeq	ip, r1, r0, asr #10
   1c140:	andeq	ip, r1, r0, asr #10
   1c144:	andeq	ip, r1, r0, asr #10
   1c148:	andeq	ip, r1, r0, asr #10
   1c14c:	andeq	ip, r1, r0, asr #10
   1c150:	andeq	ip, r1, r0, asr #10
   1c154:	andeq	ip, r1, r0, asr #10
   1c158:	andeq	ip, r1, r0, asr #10
   1c15c:	andeq	ip, r1, r0, asr #10
   1c160:	andeq	ip, r1, r0, asr #10
   1c164:	andeq	ip, r1, r0, asr #10
   1c168:	andeq	ip, r1, r0, asr #7
   1c16c:	andeq	ip, r1, r0, asr #10
   1c170:	andeq	ip, r1, r0, asr #10
   1c174:	strdeq	ip, [r1], -r8
   1c178:	andeq	ip, r1, r0, asr #10
   1c17c:	andeq	ip, r1, r0, asr #10
   1c180:	andeq	ip, r1, r0, asr #10
   1c184:	andeq	ip, r1, r0, asr #10
   1c188:	andeq	ip, r1, r0, asr #10
   1c18c:	andeq	ip, r1, r0, asr #10
   1c190:	andeq	ip, r1, r0, asr #10
   1c194:	andeq	ip, r1, r0, asr #10
   1c198:	andeq	ip, r1, r0, asr #10
   1c19c:	andeq	ip, r1, r0, asr #10
   1c1a0:	andeq	ip, r1, r0, asr #10
   1c1a4:	andeq	ip, r1, r0, asr #10
   1c1a8:	andeq	ip, r1, r0, asr #10
   1c1ac:	andeq	ip, r1, r0, asr #10
   1c1b0:	andeq	ip, r1, r0, asr #10
   1c1b4:	andeq	ip, r1, r0, asr #10
   1c1b8:	andeq	ip, r1, r0, asr #10
   1c1bc:	andeq	ip, r1, r0, asr #10
   1c1c0:	andeq	ip, r1, r0, asr #10
   1c1c4:	andeq	ip, r1, r0, asr #10
   1c1c8:	andeq	ip, r1, r0, asr #10
   1c1cc:	andeq	ip, r1, r0, asr #10
   1c1d0:	andeq	ip, r1, r0, asr #10
   1c1d4:	andeq	ip, r1, r0, asr #10
   1c1d8:	andeq	ip, r1, r0, asr #10
   1c1dc:	andeq	ip, r1, r0, asr #10
   1c1e0:	andeq	ip, r1, r0, asr #10
   1c1e4:	andeq	ip, r1, r0, asr #10
   1c1e8:	strdeq	ip, [r1], -r0
   1c1ec:	andeq	ip, r1, r0, lsr #4
   1c1f0:	andeq	ip, r1, ip, lsr #6
   1c1f4:	ldr	r0, [fp, #-16]
   1c1f8:	and	r0, r0, #2048	; 0x800
   1c1fc:	cmp	r0, #0
   1c200:	beq	1c21c <__assert_fail@plt+0xad18>
   1c204:	ldr	r0, [fp, #-8]
   1c208:	ldr	r1, [r0, #4]
   1c20c:	mvn	r2, #255	; 0xff
   1c210:	and	r1, r1, r2
   1c214:	orr	r1, r1, #10
   1c218:	str	r1, [r0, #4]
   1c21c:	b	1c544 <__assert_fail@plt+0xb040>
   1c220:	ldr	r0, [fp, #-16]
   1c224:	and	r0, r0, #1024	; 0x400
   1c228:	cmp	r0, #0
   1c22c:	bne	1c258 <__assert_fail@plt+0xad54>
   1c230:	ldr	r0, [fp, #-16]
   1c234:	and	r0, r0, #32768	; 0x8000
   1c238:	cmp	r0, #0
   1c23c:	beq	1c258 <__assert_fail@plt+0xad54>
   1c240:	ldr	r0, [fp, #-8]
   1c244:	ldr	r1, [r0, #4]
   1c248:	mvn	r2, #255	; 0xff
   1c24c:	and	r1, r1, r2
   1c250:	orr	r1, r1, #10
   1c254:	str	r1, [r0, #4]
   1c258:	b	1c544 <__assert_fail@plt+0xb040>
   1c25c:	ldr	r0, [fp, #-8]
   1c260:	ldr	r1, [r0, #4]
   1c264:	mvn	r2, #255	; 0xff
   1c268:	and	r1, r1, r2
   1c26c:	orr	r1, r1, #11
   1c270:	str	r1, [r0, #4]
   1c274:	b	1c544 <__assert_fail@plt+0xb040>
   1c278:	ldr	r0, [fp, #-16]
   1c27c:	and	r0, r0, #1024	; 0x400
   1c280:	cmp	r0, #0
   1c284:	bne	1c2b0 <__assert_fail@plt+0xadac>
   1c288:	ldr	r0, [fp, #-16]
   1c28c:	and	r0, r0, #2
   1c290:	cmp	r0, #0
   1c294:	bne	1c2b0 <__assert_fail@plt+0xadac>
   1c298:	ldr	r0, [fp, #-8]
   1c29c:	ldr	r1, [r0, #4]
   1c2a0:	mvn	r2, #255	; 0xff
   1c2a4:	and	r1, r1, r2
   1c2a8:	orr	r1, r1, #18
   1c2ac:	str	r1, [r0, #4]
   1c2b0:	b	1c544 <__assert_fail@plt+0xb040>
   1c2b4:	ldr	r0, [fp, #-16]
   1c2b8:	and	r0, r0, #1024	; 0x400
   1c2bc:	cmp	r0, #0
   1c2c0:	bne	1c2ec <__assert_fail@plt+0xade8>
   1c2c4:	ldr	r0, [fp, #-16]
   1c2c8:	and	r0, r0, #2
   1c2cc:	cmp	r0, #0
   1c2d0:	bne	1c2ec <__assert_fail@plt+0xade8>
   1c2d4:	ldr	r0, [fp, #-8]
   1c2d8:	ldr	r1, [r0, #4]
   1c2dc:	mvn	r2, #255	; 0xff
   1c2e0:	and	r1, r1, r2
   1c2e4:	orr	r1, r1, #19
   1c2e8:	str	r1, [r0, #4]
   1c2ec:	b	1c544 <__assert_fail@plt+0xb040>
   1c2f0:	ldr	r0, [fp, #-16]
   1c2f4:	and	r0, r0, #512	; 0x200
   1c2f8:	cmp	r0, #0
   1c2fc:	beq	1c328 <__assert_fail@plt+0xae24>
   1c300:	ldr	r0, [fp, #-16]
   1c304:	and	r0, r0, #4096	; 0x1000
   1c308:	cmp	r0, #0
   1c30c:	beq	1c328 <__assert_fail@plt+0xae24>
   1c310:	ldr	r0, [fp, #-8]
   1c314:	ldr	r1, [r0, #4]
   1c318:	mvn	r2, #255	; 0xff
   1c31c:	and	r1, r1, r2
   1c320:	orr	r1, r1, #23
   1c324:	str	r1, [r0, #4]
   1c328:	b	1c544 <__assert_fail@plt+0xb040>
   1c32c:	ldr	r0, [fp, #-16]
   1c330:	and	r0, r0, #512	; 0x200
   1c334:	cmp	r0, #0
   1c338:	beq	1c364 <__assert_fail@plt+0xae60>
   1c33c:	ldr	r0, [fp, #-16]
   1c340:	and	r0, r0, #4096	; 0x1000
   1c344:	cmp	r0, #0
   1c348:	beq	1c364 <__assert_fail@plt+0xae60>
   1c34c:	ldr	r0, [fp, #-8]
   1c350:	ldr	r1, [r0, #4]
   1c354:	mvn	r2, #255	; 0xff
   1c358:	and	r1, r1, r2
   1c35c:	orr	r1, r1, #24
   1c360:	str	r1, [r0, #4]
   1c364:	b	1c544 <__assert_fail@plt+0xb040>
   1c368:	ldr	r0, [fp, #-16]
   1c36c:	and	r0, r0, #8192	; 0x2000
   1c370:	cmp	r0, #0
   1c374:	beq	1c390 <__assert_fail@plt+0xae8c>
   1c378:	ldr	r0, [fp, #-8]
   1c37c:	ldr	r1, [r0, #4]
   1c380:	mvn	r2, #255	; 0xff
   1c384:	and	r1, r1, r2
   1c388:	orr	r1, r1, #8
   1c38c:	str	r1, [r0, #4]
   1c390:	b	1c544 <__assert_fail@plt+0xb040>
   1c394:	ldr	r0, [fp, #-16]
   1c398:	and	r0, r0, #8192	; 0x2000
   1c39c:	cmp	r0, #0
   1c3a0:	beq	1c3bc <__assert_fail@plt+0xaeb8>
   1c3a4:	ldr	r0, [fp, #-8]
   1c3a8:	ldr	r1, [r0, #4]
   1c3ac:	mvn	r2, #255	; 0xff
   1c3b0:	and	r1, r1, r2
   1c3b4:	orr	r1, r1, #9
   1c3b8:	str	r1, [r0, #4]
   1c3bc:	b	1c544 <__assert_fail@plt+0xb040>
   1c3c0:	ldr	r0, [fp, #-8]
   1c3c4:	ldr	r1, [r0, #4]
   1c3c8:	mvn	r2, #255	; 0xff
   1c3cc:	and	r1, r1, r2
   1c3d0:	orr	r1, r1, #20
   1c3d4:	str	r1, [r0, #4]
   1c3d8:	b	1c544 <__assert_fail@plt+0xb040>
   1c3dc:	ldr	r0, [fp, #-8]
   1c3e0:	ldr	r1, [r0, #4]
   1c3e4:	mvn	r2, #255	; 0xff
   1c3e8:	and	r1, r1, r2
   1c3ec:	orr	r1, r1, #5
   1c3f0:	str	r1, [r0, #4]
   1c3f4:	b	1c544 <__assert_fail@plt+0xb040>
   1c3f8:	ldr	r0, [pc, #344]	; 1c558 <__assert_fail@plt+0xb054>
   1c3fc:	ldr	r1, [fp, #-16]
   1c400:	and	r0, r1, r0
   1c404:	cmp	r0, #0
   1c408:	bne	1c464 <__assert_fail@plt+0xaf60>
   1c40c:	ldr	r0, [fp, #-12]
   1c410:	ldr	r0, [r0, #40]	; 0x28
   1c414:	cmp	r0, #0
   1c418:	beq	1c464 <__assert_fail@plt+0xaf60>
   1c41c:	ldr	r0, [fp, #-12]
   1c420:	ldr	r0, [r0, #4]
   1c424:	ldr	r1, [fp, #-12]
   1c428:	ldr	r1, [r1, #40]	; 0x28
   1c42c:	mvn	r2, #0
   1c430:	add	r1, r1, r2
   1c434:	add	r0, r0, r1
   1c438:	ldrb	r0, [r0]
   1c43c:	strb	r0, [fp, #-29]	; 0xffffffe3
   1c440:	ldr	r0, [fp, #-16]
   1c444:	and	r0, r0, #2048	; 0x800
   1c448:	cmp	r0, #0
   1c44c:	beq	1c45c <__assert_fail@plt+0xaf58>
   1c450:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1c454:	cmp	r0, #10
   1c458:	beq	1c460 <__assert_fail@plt+0xaf5c>
   1c45c:	b	1c544 <__assert_fail@plt+0xb040>
   1c460:	b	1c464 <__assert_fail@plt+0xaf60>
   1c464:	ldr	r0, [fp, #-8]
   1c468:	ldr	r1, [r0, #4]
   1c46c:	mvn	r2, #255	; 0xff
   1c470:	and	r1, r1, r2
   1c474:	orr	r1, r1, #12
   1c478:	str	r1, [r0, #4]
   1c47c:	ldr	r0, [fp, #-8]
   1c480:	movw	r1, #16
   1c484:	str	r1, [r0]
   1c488:	b	1c544 <__assert_fail@plt+0xb040>
   1c48c:	ldr	r0, [fp, #-16]
   1c490:	and	r0, r0, #8
   1c494:	cmp	r0, #0
   1c498:	bne	1c518 <__assert_fail@plt+0xb014>
   1c49c:	ldr	r0, [fp, #-12]
   1c4a0:	ldr	r0, [r0, #40]	; 0x28
   1c4a4:	add	r0, r0, #1
   1c4a8:	ldr	r1, [fp, #-12]
   1c4ac:	ldr	r1, [r1, #48]	; 0x30
   1c4b0:	cmp	r0, r1
   1c4b4:	beq	1c518 <__assert_fail@plt+0xb014>
   1c4b8:	ldr	r0, [fp, #-12]
   1c4bc:	ldr	r1, [r0, #40]	; 0x28
   1c4c0:	add	r1, r1, #1
   1c4c4:	str	r1, [r0, #40]	; 0x28
   1c4c8:	ldr	r1, [fp, #-12]
   1c4cc:	ldr	r2, [fp, #-16]
   1c4d0:	add	r0, sp, #40	; 0x28
   1c4d4:	bl	1b6e4 <__assert_fail@plt+0xa1e0>
   1c4d8:	ldr	r1, [fp, #-12]
   1c4dc:	ldr	r2, [r1, #40]	; 0x28
   1c4e0:	mvn	lr, #0
   1c4e4:	add	r2, r2, lr
   1c4e8:	str	r2, [r1, #40]	; 0x28
   1c4ec:	ldr	r1, [sp, #44]	; 0x2c
   1c4f0:	and	r1, r1, #255	; 0xff
   1c4f4:	cmp	r1, #10
   1c4f8:	str	r0, [sp, #4]
   1c4fc:	beq	1c514 <__assert_fail@plt+0xb010>
   1c500:	ldr	r0, [sp, #44]	; 0x2c
   1c504:	and	r0, r0, #255	; 0xff
   1c508:	cmp	r0, #9
   1c50c:	beq	1c514 <__assert_fail@plt+0xb010>
   1c510:	b	1c544 <__assert_fail@plt+0xb040>
   1c514:	b	1c518 <__assert_fail@plt+0xb014>
   1c518:	ldr	r0, [fp, #-8]
   1c51c:	ldr	r1, [r0, #4]
   1c520:	mvn	r2, #255	; 0xff
   1c524:	and	r1, r1, r2
   1c528:	orr	r1, r1, #12
   1c52c:	str	r1, [r0, #4]
   1c530:	ldr	r0, [fp, #-8]
   1c534:	movw	r1, #32
   1c538:	str	r1, [r0]
   1c53c:	b	1c544 <__assert_fail@plt+0xb040>
   1c540:	b	1c544 <__assert_fail@plt+0xb040>
   1c544:	movw	r0, #1
   1c548:	str	r0, [fp, #-4]
   1c54c:	ldr	r0, [fp, #-4]
   1c550:	mov	sp, fp
   1c554:	pop	{fp, pc}
   1c558:	addeq	r0, r0, r8
   1c55c:	sub	sp, sp, #20
   1c560:	str	r0, [sp, #12]
   1c564:	str	r1, [sp, #8]
   1c568:	ldr	r0, [sp, #12]
   1c56c:	ldrsb	r0, [r0, #75]	; 0x4b
   1c570:	cmp	r0, #0
   1c574:	movw	r0, #0
   1c578:	movne	r0, #1
   1c57c:	mvn	r1, #0
   1c580:	eor	r0, r0, r1
   1c584:	tst	r0, #1
   1c588:	beq	1c5b4 <__assert_fail@plt+0xb0b0>
   1c58c:	ldr	r0, [sp, #12]
   1c590:	ldr	r0, [r0, #4]
   1c594:	ldr	r1, [sp, #12]
   1c598:	ldr	r1, [r1, #40]	; 0x28
   1c59c:	ldr	r2, [sp, #8]
   1c5a0:	add	r1, r1, r2
   1c5a4:	add	r0, r0, r1
   1c5a8:	ldrb	r0, [r0]
   1c5ac:	strb	r0, [sp, #19]
   1c5b0:	b	1c710 <__assert_fail@plt+0xb20c>
   1c5b4:	ldr	r0, [sp, #12]
   1c5b8:	ldr	r0, [r0, #80]	; 0x50
   1c5bc:	cmp	r0, #1
   1c5c0:	ble	1c65c <__assert_fail@plt+0xb158>
   1c5c4:	ldr	r0, [sp, #12]
   1c5c8:	ldr	r1, [r0, #8]
   1c5cc:	ldr	r0, [r0, #40]	; 0x28
   1c5d0:	ldr	r2, [sp, #8]
   1c5d4:	add	r0, r0, r2
   1c5d8:	add	r0, r1, r0, lsl #2
   1c5dc:	ldr	r0, [r0]
   1c5e0:	cmn	r0, #1
   1c5e4:	beq	1c634 <__assert_fail@plt+0xb130>
   1c5e8:	ldr	r0, [sp, #12]
   1c5ec:	ldr	r0, [r0, #28]
   1c5f0:	ldr	r1, [sp, #12]
   1c5f4:	ldr	r1, [r1, #40]	; 0x28
   1c5f8:	ldr	r2, [sp, #8]
   1c5fc:	add	r1, r1, r2
   1c600:	add	r1, r1, #1
   1c604:	cmp	r0, r1
   1c608:	beq	1c65c <__assert_fail@plt+0xb158>
   1c60c:	ldr	r0, [sp, #12]
   1c610:	ldr	r1, [r0, #8]
   1c614:	ldr	r0, [r0, #40]	; 0x28
   1c618:	ldr	r2, [sp, #8]
   1c61c:	add	r0, r0, r2
   1c620:	add	r0, r0, #1
   1c624:	add	r0, r1, r0, lsl #2
   1c628:	ldr	r0, [r0]
   1c62c:	cmn	r0, #1
   1c630:	bne	1c65c <__assert_fail@plt+0xb158>
   1c634:	ldr	r0, [sp, #12]
   1c638:	ldr	r0, [r0, #4]
   1c63c:	ldr	r1, [sp, #12]
   1c640:	ldr	r1, [r1, #40]	; 0x28
   1c644:	ldr	r2, [sp, #8]
   1c648:	add	r1, r1, r2
   1c64c:	add	r0, r0, r1
   1c650:	ldrb	r0, [r0]
   1c654:	strb	r0, [sp, #19]
   1c658:	b	1c710 <__assert_fail@plt+0xb20c>
   1c65c:	ldr	r0, [sp, #12]
   1c660:	ldr	r0, [r0, #40]	; 0x28
   1c664:	ldr	r1, [sp, #8]
   1c668:	add	r0, r0, r1
   1c66c:	str	r0, [sp]
   1c670:	ldr	r0, [sp, #12]
   1c674:	ldrsb	r0, [r0, #76]	; 0x4c
   1c678:	cmp	r0, #0
   1c67c:	beq	1c698 <__assert_fail@plt+0xb194>
   1c680:	ldr	r0, [sp, #12]
   1c684:	ldr	r0, [r0, #12]
   1c688:	ldr	r1, [sp]
   1c68c:	add	r0, r0, r1, lsl #2
   1c690:	ldr	r0, [r0]
   1c694:	str	r0, [sp]
   1c698:	ldr	r0, [sp, #12]
   1c69c:	ldr	r0, [r0]
   1c6a0:	ldr	r1, [sp, #12]
   1c6a4:	ldr	r1, [r1, #24]
   1c6a8:	ldr	r2, [sp]
   1c6ac:	add	r1, r1, r2
   1c6b0:	add	r0, r0, r1
   1c6b4:	ldrb	r0, [r0]
   1c6b8:	str	r0, [sp, #4]
   1c6bc:	ldr	r0, [sp, #12]
   1c6c0:	ldrb	r0, [r0, #76]	; 0x4c
   1c6c4:	cmp	r0, #0
   1c6c8:	beq	1c708 <__assert_fail@plt+0xb204>
   1c6cc:	ldr	r0, [sp, #4]
   1c6d0:	mvn	r1, #127	; 0x7f
   1c6d4:	and	r0, r0, r1
   1c6d8:	cmp	r0, #0
   1c6dc:	beq	1c708 <__assert_fail@plt+0xb204>
   1c6e0:	ldr	r0, [sp, #12]
   1c6e4:	ldr	r0, [r0, #4]
   1c6e8:	ldr	r1, [sp, #12]
   1c6ec:	ldr	r1, [r1, #40]	; 0x28
   1c6f0:	ldr	r2, [sp, #8]
   1c6f4:	add	r1, r1, r2
   1c6f8:	add	r0, r0, r1
   1c6fc:	ldrb	r0, [r0]
   1c700:	strb	r0, [sp, #19]
   1c704:	b	1c710 <__assert_fail@plt+0xb20c>
   1c708:	ldr	r0, [sp, #4]
   1c70c:	strb	r0, [sp, #19]
   1c710:	ldrb	r0, [sp, #19]
   1c714:	add	sp, sp, #20
   1c718:	bx	lr
   1c71c:	sub	sp, sp, #12
   1c720:	str	r0, [sp, #4]
   1c724:	str	r1, [sp]
   1c728:	ldr	r0, [sp, #4]
   1c72c:	ldr	r0, [r0, #80]	; 0x50
   1c730:	cmp	r0, #1
   1c734:	bne	1c754 <__assert_fail@plt+0xb250>
   1c738:	ldr	r0, [sp, #4]
   1c73c:	ldr	r0, [r0, #4]
   1c740:	ldr	r1, [sp]
   1c744:	add	r0, r0, r1
   1c748:	ldrb	r0, [r0]
   1c74c:	str	r0, [sp, #8]
   1c750:	b	1c76c <__assert_fail@plt+0xb268>
   1c754:	ldr	r0, [sp, #4]
   1c758:	ldr	r0, [r0, #8]
   1c75c:	ldr	r1, [sp]
   1c760:	add	r0, r0, r1, lsl #2
   1c764:	ldr	r0, [r0]
   1c768:	str	r0, [sp, #8]
   1c76c:	ldr	r0, [sp, #8]
   1c770:	add	sp, sp, #12
   1c774:	bx	lr
   1c778:	push	{r4, r5, fp, lr}
   1c77c:	add	fp, sp, #8
   1c780:	sub	sp, sp, #80	; 0x50
   1c784:	ldr	ip, [fp, #12]
   1c788:	ldr	lr, [fp, #8]
   1c78c:	str	r0, [fp, #-16]
   1c790:	str	r1, [fp, #-20]	; 0xffffffec
   1c794:	str	r2, [fp, #-24]	; 0xffffffe8
   1c798:	str	r3, [fp, #-28]	; 0xffffffe4
   1c79c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7a0:	ldr	r0, [r0]
   1c7a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c7a8:	ldr	r0, [fp, #-16]
   1c7ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7b8:	ldr	r4, [fp, #8]
   1c7bc:	ldr	r5, [fp, #12]
   1c7c0:	str	r4, [sp]
   1c7c4:	str	r5, [sp, #4]
   1c7c8:	str	lr, [sp, #40]	; 0x28
   1c7cc:	str	ip, [sp, #36]	; 0x24
   1c7d0:	bl	1cba8 <__assert_fail@plt+0xb6a4>
   1c7d4:	str	r0, [fp, #-32]	; 0xffffffe0
   1c7d8:	ldr	r0, [fp, #12]
   1c7dc:	ldr	r0, [r0]
   1c7e0:	cmp	r0, #0
   1c7e4:	movw	r0, #0
   1c7e8:	str	r0, [sp, #32]
   1c7ec:	beq	1c808 <__assert_fail@plt+0xb304>
   1c7f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c7f4:	movw	r1, #0
   1c7f8:	cmp	r0, r1
   1c7fc:	movw	r0, #0
   1c800:	moveq	r0, #1
   1c804:	str	r0, [sp, #32]
   1c808:	ldr	r0, [sp, #32]
   1c80c:	tst	r0, #1
   1c810:	beq	1c820 <__assert_fail@plt+0xb31c>
   1c814:	movw	r0, #0
   1c818:	str	r0, [fp, #-12]
   1c81c:	b	1ca00 <__assert_fail@plt+0xb4fc>
   1c820:	b	1c824 <__assert_fail@plt+0xb320>
   1c824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c828:	ldr	r0, [r0, #4]
   1c82c:	and	r0, r0, #255	; 0xff
   1c830:	cmp	r0, #10
   1c834:	movw	r0, #0
   1c838:	str	r0, [sp, #28]
   1c83c:	beq	1c894 <__assert_fail@plt+0xb390>
   1c840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c844:	ldr	r0, [r0, #4]
   1c848:	and	r0, r0, #255	; 0xff
   1c84c:	cmp	r0, #2
   1c850:	movw	r0, #0
   1c854:	str	r0, [sp, #28]
   1c858:	beq	1c894 <__assert_fail@plt+0xb390>
   1c85c:	ldr	r0, [fp, #8]
   1c860:	cmp	r0, #0
   1c864:	movw	r0, #1
   1c868:	str	r0, [sp, #24]
   1c86c:	beq	1c88c <__assert_fail@plt+0xb388>
   1c870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c874:	ldr	r0, [r0, #4]
   1c878:	and	r0, r0, #255	; 0xff
   1c87c:	cmp	r0, #9
   1c880:	movw	r0, #0
   1c884:	movne	r0, #1
   1c888:	str	r0, [sp, #24]
   1c88c:	ldr	r0, [sp, #24]
   1c890:	str	r0, [sp, #28]
   1c894:	ldr	r0, [sp, #28]
   1c898:	tst	r0, #1
   1c89c:	beq	1c9f8 <__assert_fail@plt+0xb4f4>
   1c8a0:	ldr	r0, [fp, #-16]
   1c8a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c8a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c8ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c8b0:	ldr	ip, [fp, #8]
   1c8b4:	ldr	lr, [fp, #12]
   1c8b8:	str	ip, [sp]
   1c8bc:	str	lr, [sp, #4]
   1c8c0:	bl	1cba8 <__assert_fail@plt+0xb6a4>
   1c8c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1c8c8:	ldr	r0, [fp, #12]
   1c8cc:	ldr	r0, [r0]
   1c8d0:	cmp	r0, #0
   1c8d4:	movw	r0, #0
   1c8d8:	str	r0, [sp, #20]
   1c8dc:	beq	1c8f8 <__assert_fail@plt+0xb3f4>
   1c8e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c8e4:	movw	r1, #0
   1c8e8:	cmp	r0, r1
   1c8ec:	movw	r0, #0
   1c8f0:	moveq	r0, #1
   1c8f4:	str	r0, [sp, #20]
   1c8f8:	ldr	r0, [sp, #20]
   1c8fc:	tst	r0, #1
   1c900:	beq	1c938 <__assert_fail@plt+0xb434>
   1c904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c908:	movw	r1, #0
   1c90c:	cmp	r0, r1
   1c910:	beq	1c92c <__assert_fail@plt+0xb428>
   1c914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c918:	movw	r1, #52092	; 0xcb7c
   1c91c:	movt	r1, #1
   1c920:	movw	r2, #0
   1c924:	bl	1ca0c <__assert_fail@plt+0xb508>
   1c928:	str	r0, [sp, #16]
   1c92c:	movw	r0, #0
   1c930:	str	r0, [fp, #-12]
   1c934:	b	1ca00 <__assert_fail@plt+0xb4fc>
   1c938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c93c:	movw	r1, #0
   1c940:	cmp	r0, r1
   1c944:	beq	1c9d8 <__assert_fail@plt+0xb4d4>
   1c948:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c94c:	movw	r1, #0
   1c950:	cmp	r0, r1
   1c954:	beq	1c9d8 <__assert_fail@plt+0xb4d4>
   1c958:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c95c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c960:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c964:	movw	r3, #16
   1c968:	bl	1b608 <__assert_fail@plt+0xa104>
   1c96c:	str	r0, [sp, #44]	; 0x2c
   1c970:	ldr	r0, [sp, #44]	; 0x2c
   1c974:	movw	r1, #0
   1c978:	cmp	r0, r1
   1c97c:	bne	1c9cc <__assert_fail@plt+0xb4c8>
   1c980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c984:	movw	r1, #52092	; 0xcb7c
   1c988:	movt	r1, #1
   1c98c:	movw	r2, #0
   1c990:	bl	1ca0c <__assert_fail@plt+0xb508>
   1c994:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c998:	str	r0, [sp, #12]
   1c99c:	mov	r0, r1
   1c9a0:	movw	r1, #52092	; 0xcb7c
   1c9a4:	movt	r1, #1
   1c9a8:	movw	r2, #0
   1c9ac:	bl	1ca0c <__assert_fail@plt+0xb508>
   1c9b0:	ldr	r1, [fp, #12]
   1c9b4:	movw	r2, #12
   1c9b8:	str	r2, [r1]
   1c9bc:	movw	r1, #0
   1c9c0:	str	r1, [fp, #-12]
   1c9c4:	str	r0, [sp, #8]
   1c9c8:	b	1ca00 <__assert_fail@plt+0xb4fc>
   1c9cc:	ldr	r0, [sp, #44]	; 0x2c
   1c9d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c9d4:	b	1c9f4 <__assert_fail@plt+0xb4f0>
   1c9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9dc:	movw	r1, #0
   1c9e0:	cmp	r0, r1
   1c9e4:	bne	1c9f0 <__assert_fail@plt+0xb4ec>
   1c9e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c9ec:	str	r0, [fp, #-32]	; 0xffffffe0
   1c9f0:	b	1c9f4 <__assert_fail@plt+0xb4f0>
   1c9f4:	b	1c824 <__assert_fail@plt+0xb320>
   1c9f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9fc:	str	r0, [fp, #-12]
   1ca00:	ldr	r0, [fp, #-12]
   1ca04:	sub	sp, fp, #8
   1ca08:	pop	{r4, r5, fp, pc}
   1ca0c:	push	{fp, lr}
   1ca10:	mov	fp, sp
   1ca14:	sub	sp, sp, #40	; 0x28
   1ca18:	str	r0, [fp, #-8]
   1ca1c:	str	r1, [fp, #-12]
   1ca20:	str	r2, [fp, #-16]
   1ca24:	ldr	r0, [fp, #-8]
   1ca28:	str	r0, [sp, #20]
   1ca2c:	b	1ca30 <__assert_fail@plt+0xb52c>
   1ca30:	ldr	r0, [sp, #20]
   1ca34:	ldr	r0, [r0, #4]
   1ca38:	movw	r1, #0
   1ca3c:	cmp	r0, r1
   1ca40:	movw	r0, #1
   1ca44:	str	r0, [sp, #8]
   1ca48:	bne	1ca68 <__assert_fail@plt+0xb564>
   1ca4c:	ldr	r0, [sp, #20]
   1ca50:	ldr	r0, [r0, #8]
   1ca54:	movw	r1, #0
   1ca58:	cmp	r0, r1
   1ca5c:	movw	r0, #0
   1ca60:	movne	r0, #1
   1ca64:	str	r0, [sp, #8]
   1ca68:	ldr	r0, [sp, #8]
   1ca6c:	tst	r0, #1
   1ca70:	beq	1caa8 <__assert_fail@plt+0xb5a4>
   1ca74:	ldr	r0, [sp, #20]
   1ca78:	ldr	r0, [r0, #4]
   1ca7c:	movw	r1, #0
   1ca80:	cmp	r0, r1
   1ca84:	beq	1ca98 <__assert_fail@plt+0xb594>
   1ca88:	ldr	r0, [sp, #20]
   1ca8c:	ldr	r0, [r0, #4]
   1ca90:	str	r0, [sp, #20]
   1ca94:	b	1caa4 <__assert_fail@plt+0xb5a0>
   1ca98:	ldr	r0, [sp, #20]
   1ca9c:	ldr	r0, [r0, #8]
   1caa0:	str	r0, [sp, #20]
   1caa4:	b	1ca30 <__assert_fail@plt+0xb52c>
   1caa8:	b	1caac <__assert_fail@plt+0xb5a8>
   1caac:	ldr	r0, [fp, #-12]
   1cab0:	ldr	r1, [fp, #-16]
   1cab4:	ldr	r2, [sp, #20]
   1cab8:	str	r0, [sp, #4]
   1cabc:	mov	r0, r1
   1cac0:	mov	r1, r2
   1cac4:	ldr	r2, [sp, #4]
   1cac8:	blx	r2
   1cacc:	str	r0, [sp, #12]
   1cad0:	ldr	r0, [sp, #12]
   1cad4:	cmp	r0, #0
   1cad8:	beq	1cae8 <__assert_fail@plt+0xb5e4>
   1cadc:	ldr	r0, [sp, #12]
   1cae0:	str	r0, [fp, #-4]
   1cae4:	b	1cb70 <__assert_fail@plt+0xb66c>
   1cae8:	ldr	r0, [sp, #20]
   1caec:	ldr	r0, [r0]
   1caf0:	movw	r1, #0
   1caf4:	cmp	r0, r1
   1caf8:	bne	1cb08 <__assert_fail@plt+0xb604>
   1cafc:	movw	r0, #0
   1cb00:	str	r0, [fp, #-4]
   1cb04:	b	1cb70 <__assert_fail@plt+0xb66c>
   1cb08:	ldr	r0, [sp, #20]
   1cb0c:	str	r0, [sp, #16]
   1cb10:	ldr	r0, [sp, #20]
   1cb14:	ldr	r0, [r0]
   1cb18:	str	r0, [sp, #20]
   1cb1c:	ldr	r0, [sp, #20]
   1cb20:	ldr	r0, [r0, #8]
   1cb24:	ldr	r1, [sp, #16]
   1cb28:	cmp	r0, r1
   1cb2c:	movw	r0, #1
   1cb30:	str	r0, [sp]
   1cb34:	beq	1cb54 <__assert_fail@plt+0xb650>
   1cb38:	ldr	r0, [sp, #20]
   1cb3c:	ldr	r0, [r0, #8]
   1cb40:	movw	r1, #0
   1cb44:	cmp	r0, r1
   1cb48:	movw	r0, #0
   1cb4c:	moveq	r0, #1
   1cb50:	str	r0, [sp]
   1cb54:	ldr	r0, [sp]
   1cb58:	tst	r0, #1
   1cb5c:	bne	1caac <__assert_fail@plt+0xb5a8>
   1cb60:	ldr	r0, [sp, #20]
   1cb64:	ldr	r0, [r0, #8]
   1cb68:	str	r0, [sp, #20]
   1cb6c:	b	1ca2c <__assert_fail@plt+0xb528>
   1cb70:	ldr	r0, [fp, #-4]
   1cb74:	mov	sp, fp
   1cb78:	pop	{fp, pc}
   1cb7c:	push	{fp, lr}
   1cb80:	mov	fp, sp
   1cb84:	sub	sp, sp, #8
   1cb88:	str	r0, [sp, #4]
   1cb8c:	str	r1, [sp]
   1cb90:	ldr	r0, [sp]
   1cb94:	add	r0, r0, #20
   1cb98:	bl	18b10 <__assert_fail@plt+0x760c>
   1cb9c:	movw	r0, #0
   1cba0:	mov	sp, fp
   1cba4:	pop	{fp, pc}
   1cba8:	push	{fp, lr}
   1cbac:	mov	fp, sp
   1cbb0:	sub	sp, sp, #168	; 0xa8
   1cbb4:	ldr	ip, [fp, #12]
   1cbb8:	ldr	lr, [fp, #8]
   1cbbc:	str	r0, [fp, #-8]
   1cbc0:	str	r1, [fp, #-12]
   1cbc4:	str	r2, [fp, #-16]
   1cbc8:	str	r3, [fp, #-20]	; 0xffffffec
   1cbcc:	ldr	r0, [fp, #-12]
   1cbd0:	ldr	r0, [r0]
   1cbd4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cbd8:	ldr	r0, [fp, #-16]
   1cbdc:	ldrb	r0, [r0, #4]
   1cbe0:	sub	r0, r0, #1
   1cbe4:	cmp	r0, #35	; 0x23
   1cbe8:	str	lr, [fp, #-48]	; 0xffffffd0
   1cbec:	str	ip, [fp, #-52]	; 0xffffffcc
   1cbf0:	str	r0, [fp, #-56]	; 0xffffffc8
   1cbf4:	bhi	1d4dc <__assert_fail@plt+0xbfd8>
   1cbf8:	add	r0, pc, #8
   1cbfc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cc00:	ldr	r0, [r0, r1, lsl #2]
   1cc04:	mov	pc, r0
   1cc08:	muleq	r1, r8, ip
   1cc0c:			; <UNDEFINED> instruction: 0x0001d4b8
   1cc10:	ldrdeq	sp, [r1], -ip
   1cc14:	strdeq	ip, [r1], -r8
   1cc18:	andeq	sp, r1, r8, ror #5
   1cc1c:	ldrdeq	sp, [r1], -ip
   1cc20:	ldrdeq	sp, [r1], -ip
   1cc24:	andeq	ip, r1, r4, lsl lr
   1cc28:	andeq	sp, r1, ip, rrx
   1cc2c:			; <UNDEFINED> instruction: 0x0001d4b8
   1cc30:	strdeq	ip, [r1], -r0
   1cc34:	andeq	sp, r1, ip, lsl #2
   1cc38:	ldrdeq	sp, [r1], -ip
   1cc3c:	ldrdeq	sp, [r1], -ip
   1cc40:	ldrdeq	sp, [r1], -ip
   1cc44:	ldrdeq	sp, [r1], -ip
   1cc48:	ldrdeq	sp, [r1], -ip
   1cc4c:	strdeq	ip, [r1], -r0
   1cc50:	strdeq	ip, [r1], -r0
   1cc54:	andeq	ip, r1, ip, lsl #29
   1cc58:	ldrdeq	sp, [r1], -ip
   1cc5c:	ldrdeq	sp, [r1], -ip
   1cc60:	andeq	ip, r1, r4, asr #31
   1cc64:	andeq	sp, r1, ip, lsr #1
   1cc68:	ldrdeq	sp, [r1], -ip
   1cc6c:	ldrdeq	sp, [r1], -ip
   1cc70:	ldrdeq	sp, [r1], -ip
   1cc74:	ldrdeq	sp, [r1], -ip
   1cc78:	ldrdeq	sp, [r1], -ip
   1cc7c:	ldrdeq	sp, [r1], -ip
   1cc80:	ldrdeq	sp, [r1], -ip
   1cc84:	andeq	sp, r1, r8, asr r3
   1cc88:	andeq	sp, r1, r8, asr r3
   1cc8c:	andeq	sp, r1, r8, lsl #8
   1cc90:	andeq	sp, r1, r8, lsl #8
   1cc94:	andeq	sp, r1, r4, asr #9
   1cc98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc9c:	ldr	r3, [fp, #-16]
   1cca0:	movw	r1, #0
   1cca4:	str	r1, [fp, #-60]	; 0xffffffc4
   1cca8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ccac:	bl	1d698 <__assert_fail@plt+0xc194>
   1ccb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccb8:	movw	r1, #0
   1ccbc:	cmp	r0, r1
   1ccc0:	bne	1ccdc <__assert_fail@plt+0xb7d8>
   1ccc4:	ldr	r0, [fp, #12]
   1ccc8:	movw	r1, #12
   1cccc:	str	r1, [r0]
   1ccd0:	movw	r0, #0
   1ccd4:	str	r0, [fp, #-4]
   1ccd8:	b	1d68c <__assert_fail@plt+0xc188>
   1ccdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cce0:	ldr	r0, [r0, #92]	; 0x5c
   1cce4:	cmp	r0, #1
   1cce8:	ble	1ce10 <__assert_fail@plt+0xb90c>
   1ccec:	b	1ccf0 <__assert_fail@plt+0xb7ec>
   1ccf0:	ldr	r0, [fp, #-8]
   1ccf4:	ldr	r0, [r0, #56]	; 0x38
   1ccf8:	ldr	r1, [fp, #-8]
   1ccfc:	ldr	r1, [r1, #40]	; 0x28
   1cd00:	cmp	r0, r1
   1cd04:	movw	r0, #0
   1cd08:	str	r0, [fp, #-64]	; 0xffffffc0
   1cd0c:	ble	1cd64 <__assert_fail@plt+0xb860>
   1cd10:	ldr	r0, [fp, #-8]
   1cd14:	ldr	r0, [r0, #40]	; 0x28
   1cd18:	ldr	r1, [fp, #-8]
   1cd1c:	ldr	r1, [r1, #28]
   1cd20:	cmp	r0, r1
   1cd24:	movw	r0, #1
   1cd28:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd2c:	beq	1cd54 <__assert_fail@plt+0xb850>
   1cd30:	ldr	r0, [fp, #-8]
   1cd34:	ldr	r1, [r0, #8]
   1cd38:	ldr	r0, [r0, #40]	; 0x28
   1cd3c:	add	r0, r1, r0, lsl #2
   1cd40:	ldr	r0, [r0]
   1cd44:	cmn	r0, #1
   1cd48:	movw	r0, #0
   1cd4c:	movne	r0, #1
   1cd50:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1cd58:	mvn	r1, #0
   1cd5c:	eor	r0, r0, r1
   1cd60:	str	r0, [fp, #-64]	; 0xffffffc0
   1cd64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cd68:	tst	r0, #1
   1cd6c:	beq	1ce0c <__assert_fail@plt+0xb908>
   1cd70:	ldr	r0, [fp, #-16]
   1cd74:	ldr	r1, [fp, #-8]
   1cd78:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd7c:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1cd80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd84:	ldr	r3, [fp, #-16]
   1cd88:	movw	r1, #0
   1cd8c:	str	r1, [fp, #-72]	; 0xffffffb8
   1cd90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cd94:	bl	1d698 <__assert_fail@plt+0xc194>
   1cd98:	str	r0, [fp, #-32]	; 0xffffffe0
   1cd9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cda0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cda4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cda8:	movw	r3, #16
   1cdac:	bl	1b608 <__assert_fail@plt+0xa104>
   1cdb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdb8:	movw	r1, #0
   1cdbc:	cmp	r0, r1
   1cdc0:	movw	r0, #1
   1cdc4:	str	r0, [fp, #-76]	; 0xffffffb4
   1cdc8:	beq	1cde4 <__assert_fail@plt+0xb8e0>
   1cdcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdd0:	movw	r1, #0
   1cdd4:	cmp	r0, r1
   1cdd8:	movw	r0, #0
   1cddc:	moveq	r0, #1
   1cde0:	str	r0, [fp, #-76]	; 0xffffffb4
   1cde4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1cde8:	tst	r0, #1
   1cdec:	beq	1ce08 <__assert_fail@plt+0xb904>
   1cdf0:	ldr	r0, [fp, #12]
   1cdf4:	movw	r1, #12
   1cdf8:	str	r1, [r0]
   1cdfc:	movw	r0, #0
   1ce00:	str	r0, [fp, #-4]
   1ce04:	b	1d68c <__assert_fail@plt+0xc188>
   1ce08:	b	1ccf0 <__assert_fail@plt+0xb7ec>
   1ce0c:	b	1ce10 <__assert_fail@plt+0xb90c>
   1ce10:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1ce14:	ldr	r0, [fp, #-8]
   1ce18:	ldr	r1, [fp, #-12]
   1ce1c:	ldr	r2, [fp, #-16]
   1ce20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce24:	ldr	ip, [fp, #8]
   1ce28:	add	ip, ip, #1
   1ce2c:	ldr	lr, [fp, #12]
   1ce30:	str	ip, [sp]
   1ce34:	str	lr, [sp, #4]
   1ce38:	bl	1d7fc <__assert_fail@plt+0xc2f8>
   1ce3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce40:	ldr	r0, [fp, #12]
   1ce44:	ldr	r0, [r0]
   1ce48:	cmp	r0, #0
   1ce4c:	movw	r0, #0
   1ce50:	str	r0, [fp, #-80]	; 0xffffffb0
   1ce54:	beq	1ce70 <__assert_fail@plt+0xb96c>
   1ce58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce5c:	movw	r1, #0
   1ce60:	cmp	r0, r1
   1ce64:	movw	r0, #0
   1ce68:	moveq	r0, #1
   1ce6c:	str	r0, [fp, #-80]	; 0xffffffb0
   1ce70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce74:	tst	r0, #1
   1ce78:	beq	1ce88 <__assert_fail@plt+0xb984>
   1ce7c:	movw	r0, #0
   1ce80:	str	r0, [fp, #-4]
   1ce84:	b	1d68c <__assert_fail@plt+0xc188>
   1ce88:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1ce8c:	ldr	r0, [fp, #-8]
   1ce90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce94:	ldr	r2, [fp, #-16]
   1ce98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce9c:	ldr	ip, [fp, #12]
   1cea0:	str	ip, [sp]
   1cea4:	bl	1d9c0 <__assert_fail@plt+0xc4bc>
   1cea8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ceac:	ldr	r0, [fp, #12]
   1ceb0:	ldr	r0, [r0]
   1ceb4:	cmp	r0, #0
   1ceb8:	movw	r0, #0
   1cebc:	str	r0, [sp, #84]	; 0x54
   1cec0:	beq	1cedc <__assert_fail@plt+0xb9d8>
   1cec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cec8:	movw	r1, #0
   1cecc:	cmp	r0, r1
   1ced0:	movw	r0, #0
   1ced4:	moveq	r0, #1
   1ced8:	str	r0, [sp, #84]	; 0x54
   1cedc:	ldr	r0, [sp, #84]	; 0x54
   1cee0:	tst	r0, #1
   1cee4:	beq	1cef4 <__assert_fail@plt+0xb9f0>
   1cee8:	movw	r0, #0
   1ceec:	str	r0, [fp, #-4]
   1cef0:	b	1d68c <__assert_fail@plt+0xc188>
   1cef4:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1cef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cefc:	ldr	r0, [r0, #84]	; 0x54
   1cf00:	ldr	r1, [fp, #-16]
   1cf04:	ldr	r1, [r1]
   1cf08:	movw	r2, #1
   1cf0c:	lsl	r1, r2, r1
   1cf10:	and	r0, r0, r1
   1cf14:	cmp	r0, #0
   1cf18:	bne	1cf34 <__assert_fail@plt+0xba30>
   1cf1c:	ldr	r0, [fp, #12]
   1cf20:	movw	r1, #6
   1cf24:	str	r1, [r0]
   1cf28:	movw	r0, #0
   1cf2c:	str	r0, [fp, #-4]
   1cf30:	b	1d68c <__assert_fail@plt+0xc188>
   1cf34:	ldr	r0, [fp, #-16]
   1cf38:	ldr	r0, [r0]
   1cf3c:	movw	r1, #1
   1cf40:	lsl	r0, r1, r0
   1cf44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf48:	ldr	r2, [r1, #80]	; 0x50
   1cf4c:	orr	r0, r2, r0
   1cf50:	str	r0, [r1, #80]	; 0x50
   1cf54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf58:	ldr	r3, [fp, #-16]
   1cf5c:	movw	r1, #0
   1cf60:	str	r1, [sp, #80]	; 0x50
   1cf64:	ldr	r2, [sp, #80]	; 0x50
   1cf68:	bl	1d698 <__assert_fail@plt+0xc194>
   1cf6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cf74:	movw	r1, #0
   1cf78:	cmp	r0, r1
   1cf7c:	bne	1cf98 <__assert_fail@plt+0xba94>
   1cf80:	ldr	r0, [fp, #12]
   1cf84:	movw	r1, #12
   1cf88:	str	r1, [r0]
   1cf8c:	movw	r0, #0
   1cf90:	str	r0, [fp, #-4]
   1cf94:	b	1d68c <__assert_fail@plt+0xc188>
   1cf98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf9c:	ldr	r1, [r0, #76]	; 0x4c
   1cfa0:	add	r1, r1, #1
   1cfa4:	str	r1, [r0, #76]	; 0x4c
   1cfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfac:	ldrb	r1, [r0, #88]	; 0x58
   1cfb0:	bic	r1, r1, #2
   1cfb4:	movw	r2, #2
   1cfb8:	orr	r1, r1, r2
   1cfbc:	strb	r1, [r0, #88]	; 0x58
   1cfc0:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1cfc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cfc8:	and	r0, r0, #16777216	; 0x1000000
   1cfcc:	cmp	r0, #0
   1cfd0:	beq	1cfec <__assert_fail@plt+0xbae8>
   1cfd4:	ldr	r0, [fp, #12]
   1cfd8:	movw	r1, #13
   1cfdc:	str	r1, [r0]
   1cfe0:	movw	r0, #0
   1cfe4:	str	r0, [fp, #-4]
   1cfe8:	b	1d68c <__assert_fail@plt+0xc188>
   1cfec:	b	1cff0 <__assert_fail@plt+0xbaec>
   1cff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cff4:	and	r0, r0, #32
   1cff8:	cmp	r0, #0
   1cffc:	beq	1d018 <__assert_fail@plt+0xbb14>
   1d000:	ldr	r0, [fp, #12]
   1d004:	movw	r1, #13
   1d008:	str	r1, [r0]
   1d00c:	movw	r0, #0
   1d010:	str	r0, [fp, #-4]
   1d014:	b	1d68c <__assert_fail@plt+0xc188>
   1d018:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d01c:	and	r0, r0, #16
   1d020:	cmp	r0, #0
   1d024:	beq	1d064 <__assert_fail@plt+0xbb60>
   1d028:	ldr	r0, [fp, #-16]
   1d02c:	ldr	r1, [fp, #-8]
   1d030:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d034:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1d038:	ldr	r0, [fp, #-8]
   1d03c:	ldr	r1, [fp, #-12]
   1d040:	ldr	r2, [fp, #-16]
   1d044:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d048:	ldr	lr, [fp, #8]
   1d04c:	ldr	ip, [fp, #12]
   1d050:	str	lr, [sp]
   1d054:	str	ip, [sp, #4]
   1d058:	bl	1cba8 <__assert_fail@plt+0xb6a4>
   1d05c:	str	r0, [fp, #-4]
   1d060:	b	1d68c <__assert_fail@plt+0xc188>
   1d064:	b	1d068 <__assert_fail@plt+0xbb64>
   1d068:	b	1d06c <__assert_fail@plt+0xbb68>
   1d06c:	ldr	r0, [fp, #-16]
   1d070:	ldr	r0, [r0, #4]
   1d074:	and	r0, r0, #255	; 0xff
   1d078:	cmp	r0, #9
   1d07c:	bne	1d0a8 <__assert_fail@plt+0xbba4>
   1d080:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d084:	and	r0, r0, #131072	; 0x20000
   1d088:	cmp	r0, #0
   1d08c:	bne	1d0a8 <__assert_fail@plt+0xbba4>
   1d090:	ldr	r0, [fp, #12]
   1d094:	movw	r1, #16
   1d098:	str	r1, [r0]
   1d09c:	movw	r0, #0
   1d0a0:	str	r0, [fp, #-4]
   1d0a4:	b	1d68c <__assert_fail@plt+0xc188>
   1d0a8:	b	1d0ac <__assert_fail@plt+0xbba8>
   1d0ac:	ldr	r0, [fp, #-16]
   1d0b0:	ldr	r1, [r0, #4]
   1d0b4:	mvn	r2, #255	; 0xff
   1d0b8:	and	r1, r1, r2
   1d0bc:	orr	r1, r1, #1
   1d0c0:	str	r1, [r0, #4]
   1d0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0c8:	ldr	r3, [fp, #-16]
   1d0cc:	movw	r1, #0
   1d0d0:	str	r1, [sp, #76]	; 0x4c
   1d0d4:	ldr	r2, [sp, #76]	; 0x4c
   1d0d8:	bl	1d698 <__assert_fail@plt+0xc194>
   1d0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d0e4:	movw	r1, #0
   1d0e8:	cmp	r0, r1
   1d0ec:	bne	1d108 <__assert_fail@plt+0xbc04>
   1d0f0:	ldr	r0, [fp, #12]
   1d0f4:	movw	r1, #12
   1d0f8:	str	r1, [r0]
   1d0fc:	movw	r0, #0
   1d100:	str	r0, [fp, #-4]
   1d104:	b	1d68c <__assert_fail@plt+0xc188>
   1d108:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1d10c:	ldr	r0, [fp, #-16]
   1d110:	ldr	r0, [r0]
   1d114:	movw	r1, #783	; 0x30f
   1d118:	and	r0, r0, r1
   1d11c:	cmp	r0, #0
   1d120:	beq	1d144 <__assert_fail@plt+0xbc40>
   1d124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d128:	ldrb	r0, [r0, #88]	; 0x58
   1d12c:	ubfx	r0, r0, #4, #1
   1d130:	and	r0, r0, #255	; 0xff
   1d134:	cmp	r0, #0
   1d138:	bne	1d144 <__assert_fail@plt+0xbc40>
   1d13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d140:	bl	1e2f0 <__assert_fail@plt+0xcdec>
   1d144:	ldr	r0, [fp, #-16]
   1d148:	ldr	r0, [r0]
   1d14c:	cmp	r0, #256	; 0x100
   1d150:	beq	1d164 <__assert_fail@plt+0xbc60>
   1d154:	ldr	r0, [fp, #-16]
   1d158:	ldr	r0, [r0]
   1d15c:	cmp	r0, #512	; 0x200
   1d160:	bne	1d284 <__assert_fail@plt+0xbd80>
   1d164:	ldr	r0, [fp, #-16]
   1d168:	ldr	r0, [r0]
   1d16c:	cmp	r0, #256	; 0x100
   1d170:	bne	1d1ac <__assert_fail@plt+0xbca8>
   1d174:	ldr	r0, [fp, #-16]
   1d178:	movw	r1, #6
   1d17c:	str	r1, [r0]
   1d180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d184:	ldr	r3, [fp, #-16]
   1d188:	movw	r1, #0
   1d18c:	str	r1, [sp, #72]	; 0x48
   1d190:	ldr	r2, [sp, #72]	; 0x48
   1d194:	bl	1d698 <__assert_fail@plt+0xc194>
   1d198:	str	r0, [fp, #-36]	; 0xffffffdc
   1d19c:	ldr	r0, [fp, #-16]
   1d1a0:	movw	r1, #9
   1d1a4:	str	r1, [r0]
   1d1a8:	b	1d1e0 <__assert_fail@plt+0xbcdc>
   1d1ac:	ldr	r0, [fp, #-16]
   1d1b0:	movw	r1, #5
   1d1b4:	str	r1, [r0]
   1d1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1bc:	ldr	r3, [fp, #-16]
   1d1c0:	movw	r1, #0
   1d1c4:	str	r1, [sp, #68]	; 0x44
   1d1c8:	ldr	r2, [sp, #68]	; 0x44
   1d1cc:	bl	1d698 <__assert_fail@plt+0xc194>
   1d1d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d1d4:	ldr	r0, [fp, #-16]
   1d1d8:	movw	r1, #10
   1d1dc:	str	r1, [r0]
   1d1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e4:	ldr	r3, [fp, #-16]
   1d1e8:	movw	r1, #0
   1d1ec:	str	r1, [sp, #64]	; 0x40
   1d1f0:	ldr	r2, [sp, #64]	; 0x40
   1d1f4:	bl	1d698 <__assert_fail@plt+0xc194>
   1d1f8:	str	r0, [fp, #-40]	; 0xffffffd8
   1d1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d200:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d204:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d208:	movw	r3, #10
   1d20c:	bl	1b608 <__assert_fail@plt+0xa104>
   1d210:	str	r0, [fp, #-28]	; 0xffffffe4
   1d214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d218:	movw	r1, #0
   1d21c:	cmp	r0, r1
   1d220:	movw	r0, #1
   1d224:	str	r0, [sp, #60]	; 0x3c
   1d228:	beq	1d25c <__assert_fail@plt+0xbd58>
   1d22c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d230:	movw	r1, #0
   1d234:	cmp	r0, r1
   1d238:	movw	r0, #1
   1d23c:	str	r0, [sp, #60]	; 0x3c
   1d240:	beq	1d25c <__assert_fail@plt+0xbd58>
   1d244:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d248:	movw	r1, #0
   1d24c:	cmp	r0, r1
   1d250:	movw	r0, #0
   1d254:	moveq	r0, #1
   1d258:	str	r0, [sp, #60]	; 0x3c
   1d25c:	ldr	r0, [sp, #60]	; 0x3c
   1d260:	tst	r0, #1
   1d264:	beq	1d280 <__assert_fail@plt+0xbd7c>
   1d268:	ldr	r0, [fp, #12]
   1d26c:	movw	r1, #12
   1d270:	str	r1, [r0]
   1d274:	movw	r0, #0
   1d278:	str	r0, [fp, #-4]
   1d27c:	b	1d68c <__assert_fail@plt+0xc188>
   1d280:	b	1d2cc <__assert_fail@plt+0xbdc8>
   1d284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d288:	ldr	r3, [fp, #-16]
   1d28c:	movw	r1, #0
   1d290:	str	r1, [sp, #56]	; 0x38
   1d294:	ldr	r2, [sp, #56]	; 0x38
   1d298:	bl	1d698 <__assert_fail@plt+0xc194>
   1d29c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2a4:	movw	r1, #0
   1d2a8:	cmp	r0, r1
   1d2ac:	bne	1d2c8 <__assert_fail@plt+0xbdc4>
   1d2b0:	ldr	r0, [fp, #12]
   1d2b4:	movw	r1, #12
   1d2b8:	str	r1, [r0]
   1d2bc:	movw	r0, #0
   1d2c0:	str	r0, [fp, #-4]
   1d2c4:	b	1d68c <__assert_fail@plt+0xc188>
   1d2c8:	b	1d2cc <__assert_fail@plt+0xbdc8>
   1d2cc:	ldr	r0, [fp, #-16]
   1d2d0:	ldr	r1, [fp, #-8]
   1d2d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d2d8:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1d2dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2e0:	str	r0, [fp, #-4]
   1d2e4:	b	1d68c <__assert_fail@plt+0xc188>
   1d2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2ec:	ldr	r3, [fp, #-16]
   1d2f0:	movw	r1, #0
   1d2f4:	str	r1, [sp, #52]	; 0x34
   1d2f8:	ldr	r2, [sp, #52]	; 0x34
   1d2fc:	bl	1d698 <__assert_fail@plt+0xc194>
   1d300:	str	r0, [fp, #-28]	; 0xffffffe4
   1d304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d308:	movw	r1, #0
   1d30c:	cmp	r0, r1
   1d310:	bne	1d32c <__assert_fail@plt+0xbe28>
   1d314:	ldr	r0, [fp, #12]
   1d318:	movw	r1, #12
   1d31c:	str	r1, [r0]
   1d320:	movw	r0, #0
   1d324:	str	r0, [fp, #-4]
   1d328:	b	1d68c <__assert_fail@plt+0xc188>
   1d32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d330:	ldr	r0, [r0, #92]	; 0x5c
   1d334:	cmp	r0, #1
   1d338:	ble	1d354 <__assert_fail@plt+0xbe50>
   1d33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d340:	ldrb	r1, [r0, #88]	; 0x58
   1d344:	bic	r1, r1, #2
   1d348:	movw	r2, #2
   1d34c:	orr	r1, r1, r2
   1d350:	strb	r1, [r0, #88]	; 0x58
   1d354:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1d358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d35c:	ldr	r1, [fp, #-8]
   1d360:	ldr	r1, [r1, #64]	; 0x40
   1d364:	ldr	r2, [fp, #-16]
   1d368:	ldr	r2, [r2, #4]
   1d36c:	and	r2, r2, #255	; 0xff
   1d370:	cmp	r2, #33	; 0x21
   1d374:	movw	r2, #0
   1d378:	moveq	r2, #1
   1d37c:	ldr	r3, [fp, #12]
   1d380:	movw	ip, #33588	; 0x8334
   1d384:	movt	ip, #3
   1d388:	str	r2, [sp, #48]	; 0x30
   1d38c:	mov	r2, ip
   1d390:	movw	ip, #32085	; 0x7d55
   1d394:	movt	ip, #3
   1d398:	str	r3, [sp, #44]	; 0x2c
   1d39c:	mov	r3, ip
   1d3a0:	ldr	ip, [sp, #48]	; 0x30
   1d3a4:	and	lr, ip, #1
   1d3a8:	str	lr, [sp]
   1d3ac:	ldr	lr, [sp, #44]	; 0x2c
   1d3b0:	str	lr, [sp, #4]
   1d3b4:	bl	1e4a0 <__assert_fail@plt+0xcf9c>
   1d3b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3bc:	ldr	r0, [fp, #12]
   1d3c0:	ldr	r0, [r0]
   1d3c4:	cmp	r0, #0
   1d3c8:	movw	r0, #0
   1d3cc:	str	r0, [sp, #40]	; 0x28
   1d3d0:	beq	1d3ec <__assert_fail@plt+0xbee8>
   1d3d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d3d8:	movw	r1, #0
   1d3dc:	cmp	r0, r1
   1d3e0:	movw	r0, #0
   1d3e4:	moveq	r0, #1
   1d3e8:	str	r0, [sp, #40]	; 0x28
   1d3ec:	ldr	r0, [sp, #40]	; 0x28
   1d3f0:	tst	r0, #1
   1d3f4:	beq	1d404 <__assert_fail@plt+0xbf00>
   1d3f8:	movw	r0, #0
   1d3fc:	str	r0, [fp, #-4]
   1d400:	b	1d68c <__assert_fail@plt+0xc188>
   1d404:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1d408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d40c:	ldr	r1, [fp, #-8]
   1d410:	ldr	r1, [r1, #64]	; 0x40
   1d414:	ldr	r2, [fp, #-16]
   1d418:	ldr	r2, [r2, #4]
   1d41c:	and	r2, r2, #255	; 0xff
   1d420:	cmp	r2, #35	; 0x23
   1d424:	movw	r2, #0
   1d428:	moveq	r2, #1
   1d42c:	ldr	r3, [fp, #12]
   1d430:	movw	ip, #33594	; 0x833a
   1d434:	movt	ip, #3
   1d438:	str	r2, [sp, #36]	; 0x24
   1d43c:	mov	r2, ip
   1d440:	movw	ip, #32426	; 0x7eaa
   1d444:	movt	ip, #3
   1d448:	str	r3, [sp, #32]
   1d44c:	mov	r3, ip
   1d450:	ldr	ip, [sp, #36]	; 0x24
   1d454:	and	lr, ip, #1
   1d458:	str	lr, [sp]
   1d45c:	ldr	lr, [sp, #32]
   1d460:	str	lr, [sp, #4]
   1d464:	bl	1e4a0 <__assert_fail@plt+0xcf9c>
   1d468:	str	r0, [fp, #-28]	; 0xffffffe4
   1d46c:	ldr	r0, [fp, #12]
   1d470:	ldr	r0, [r0]
   1d474:	cmp	r0, #0
   1d478:	movw	r0, #0
   1d47c:	str	r0, [sp, #28]
   1d480:	beq	1d49c <__assert_fail@plt+0xbf98>
   1d484:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d488:	movw	r1, #0
   1d48c:	cmp	r0, r1
   1d490:	movw	r0, #0
   1d494:	moveq	r0, #1
   1d498:	str	r0, [sp, #28]
   1d49c:	ldr	r0, [sp, #28]
   1d4a0:	tst	r0, #1
   1d4a4:	beq	1d4b4 <__assert_fail@plt+0xbfb0>
   1d4a8:	movw	r0, #0
   1d4ac:	str	r0, [fp, #-4]
   1d4b0:	b	1d68c <__assert_fail@plt+0xc188>
   1d4b4:	b	1d4dc <__assert_fail@plt+0xbfd8>
   1d4b8:	movw	r0, #0
   1d4bc:	str	r0, [fp, #-4]
   1d4c0:	b	1d68c <__assert_fail@plt+0xc188>
   1d4c4:	ldr	r0, [fp, #12]
   1d4c8:	movw	r1, #5
   1d4cc:	str	r1, [r0]
   1d4d0:	movw	r0, #0
   1d4d4:	str	r0, [fp, #-4]
   1d4d8:	b	1d68c <__assert_fail@plt+0xc188>
   1d4dc:	ldr	r0, [fp, #-16]
   1d4e0:	ldr	r1, [fp, #-8]
   1d4e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d4e8:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1d4ec:	ldr	r0, [fp, #-16]
   1d4f0:	ldr	r0, [r0, #4]
   1d4f4:	and	r0, r0, #255	; 0xff
   1d4f8:	cmp	r0, #11
   1d4fc:	movw	r0, #1
   1d500:	str	r0, [sp, #24]
   1d504:	beq	1d55c <__assert_fail@plt+0xc058>
   1d508:	ldr	r0, [fp, #-16]
   1d50c:	ldr	r0, [r0, #4]
   1d510:	and	r0, r0, #255	; 0xff
   1d514:	cmp	r0, #18
   1d518:	movw	r0, #1
   1d51c:	str	r0, [sp, #24]
   1d520:	beq	1d55c <__assert_fail@plt+0xc058>
   1d524:	ldr	r0, [fp, #-16]
   1d528:	ldr	r0, [r0, #4]
   1d52c:	and	r0, r0, #255	; 0xff
   1d530:	cmp	r0, #19
   1d534:	movw	r0, #1
   1d538:	str	r0, [sp, #24]
   1d53c:	beq	1d55c <__assert_fail@plt+0xc058>
   1d540:	ldr	r0, [fp, #-16]
   1d544:	ldr	r0, [r0, #4]
   1d548:	and	r0, r0, #255	; 0xff
   1d54c:	cmp	r0, #23
   1d550:	movw	r0, #0
   1d554:	moveq	r0, #1
   1d558:	str	r0, [sp, #24]
   1d55c:	ldr	r0, [sp, #24]
   1d560:	tst	r0, #1
   1d564:	beq	1d684 <__assert_fail@plt+0xc180>
   1d568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d56c:	ldr	r1, [fp, #-8]
   1d570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d574:	ldr	r3, [fp, #-16]
   1d578:	ldr	ip, [fp, #-20]	; 0xffffffec
   1d57c:	ldr	lr, [fp, #12]
   1d580:	str	ip, [sp]
   1d584:	str	lr, [sp, #4]
   1d588:	bl	1e7d4 <__assert_fail@plt+0xd2d0>
   1d58c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d590:	ldr	r0, [fp, #12]
   1d594:	ldr	r0, [r0]
   1d598:	cmp	r0, #0
   1d59c:	movw	r0, #0
   1d5a0:	str	r0, [sp, #20]
   1d5a4:	beq	1d5c0 <__assert_fail@plt+0xc0bc>
   1d5a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d5ac:	movw	r1, #0
   1d5b0:	cmp	r0, r1
   1d5b4:	movw	r0, #0
   1d5b8:	moveq	r0, #1
   1d5bc:	str	r0, [sp, #20]
   1d5c0:	ldr	r0, [sp, #20]
   1d5c4:	tst	r0, #1
   1d5c8:	beq	1d600 <__assert_fail@plt+0xc0fc>
   1d5cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d5d0:	movw	r1, #0
   1d5d4:	cmp	r0, r1
   1d5d8:	beq	1d5f4 <__assert_fail@plt+0xc0f0>
   1d5dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d5e0:	movw	r1, #52092	; 0xcb7c
   1d5e4:	movt	r1, #1
   1d5e8:	movw	r2, #0
   1d5ec:	bl	1ca0c <__assert_fail@plt+0xb508>
   1d5f0:	str	r0, [sp, #16]
   1d5f4:	movw	r0, #0
   1d5f8:	str	r0, [fp, #-4]
   1d5fc:	b	1d68c <__assert_fail@plt+0xc188>
   1d600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d604:	str	r0, [fp, #-28]	; 0xffffffe4
   1d608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d60c:	and	r0, r0, #16777216	; 0x1000000
   1d610:	cmp	r0, #0
   1d614:	beq	1d680 <__assert_fail@plt+0xc17c>
   1d618:	ldr	r0, [fp, #-16]
   1d61c:	ldr	r0, [r0, #4]
   1d620:	and	r0, r0, #255	; 0xff
   1d624:	cmp	r0, #11
   1d628:	beq	1d640 <__assert_fail@plt+0xc13c>
   1d62c:	ldr	r0, [fp, #-16]
   1d630:	ldr	r0, [r0, #4]
   1d634:	and	r0, r0, #255	; 0xff
   1d638:	cmp	r0, #23
   1d63c:	bne	1d680 <__assert_fail@plt+0xc17c>
   1d640:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d644:	movw	r1, #0
   1d648:	cmp	r0, r1
   1d64c:	beq	1d668 <__assert_fail@plt+0xc164>
   1d650:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d654:	movw	r1, #52092	; 0xcb7c
   1d658:	movt	r1, #1
   1d65c:	movw	r2, #0
   1d660:	bl	1ca0c <__assert_fail@plt+0xb508>
   1d664:	str	r0, [sp, #12]
   1d668:	ldr	r0, [fp, #12]
   1d66c:	movw	r1, #13
   1d670:	str	r1, [r0]
   1d674:	movw	r0, #0
   1d678:	str	r0, [fp, #-4]
   1d67c:	b	1d68c <__assert_fail@plt+0xc188>
   1d680:	b	1d4ec <__assert_fail@plt+0xbfe8>
   1d684:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d688:	str	r0, [fp, #-4]
   1d68c:	ldr	r0, [fp, #-4]
   1d690:	mov	sp, fp
   1d694:	pop	{fp, pc}
   1d698:	push	{fp, lr}
   1d69c:	mov	fp, sp
   1d6a0:	sub	sp, sp, #32
   1d6a4:	str	r0, [fp, #-8]
   1d6a8:	str	r1, [fp, #-12]
   1d6ac:	str	r2, [sp, #16]
   1d6b0:	str	r3, [sp, #12]
   1d6b4:	ldr	r0, [fp, #-8]
   1d6b8:	ldr	r0, [r0, #64]	; 0x40
   1d6bc:	cmp	r0, #31
   1d6c0:	bne	1d714 <__assert_fail@plt+0xc210>
   1d6c4:	movw	r0, #996	; 0x3e4
   1d6c8:	bl	33b44 <__assert_fail@plt+0x22640>
   1d6cc:	str	r0, [sp, #4]
   1d6d0:	ldr	r0, [sp, #4]
   1d6d4:	movw	lr, #0
   1d6d8:	cmp	r0, lr
   1d6dc:	bne	1d6ec <__assert_fail@plt+0xc1e8>
   1d6e0:	movw	r0, #0
   1d6e4:	str	r0, [fp, #-4]
   1d6e8:	b	1d7f0 <__assert_fail@plt+0xc2ec>
   1d6ec:	ldr	r0, [fp, #-8]
   1d6f0:	ldr	r0, [r0, #56]	; 0x38
   1d6f4:	ldr	r1, [sp, #4]
   1d6f8:	str	r0, [r1]
   1d6fc:	ldr	r0, [sp, #4]
   1d700:	ldr	r1, [fp, #-8]
   1d704:	str	r0, [r1, #56]	; 0x38
   1d708:	ldr	r0, [fp, #-8]
   1d70c:	movw	r1, #0
   1d710:	str	r1, [r0, #64]	; 0x40
   1d714:	ldr	r0, [fp, #-8]
   1d718:	ldr	r1, [r0, #56]	; 0x38
   1d71c:	ldr	r2, [r0, #64]	; 0x40
   1d720:	add	r1, r1, #4
   1d724:	add	r3, r2, #1
   1d728:	str	r3, [r0, #64]	; 0x40
   1d72c:	add	r0, r1, r2, lsl #5
   1d730:	str	r0, [sp, #8]
   1d734:	ldr	r0, [sp, #8]
   1d738:	movw	r1, #0
   1d73c:	str	r1, [r0]
   1d740:	ldr	r0, [fp, #-12]
   1d744:	ldr	r2, [sp, #8]
   1d748:	str	r0, [r2, #4]
   1d74c:	ldr	r0, [sp, #16]
   1d750:	ldr	r2, [sp, #8]
   1d754:	str	r0, [r2, #8]
   1d758:	ldr	r0, [sp, #8]
   1d75c:	ldr	r2, [sp, #12]
   1d760:	ldr	r3, [r2]
   1d764:	str	r3, [r0, #20]
   1d768:	ldr	r2, [r2, #4]
   1d76c:	str	r2, [r0, #24]
   1d770:	ldr	r0, [sp, #8]
   1d774:	ldr	r2, [r0, #24]
   1d778:	mvn	r3, #262144	; 0x40000
   1d77c:	and	r2, r2, r3
   1d780:	str	r2, [r0, #24]
   1d784:	ldr	r0, [sp, #8]
   1d788:	ldr	r2, [r0, #24]
   1d78c:	mvn	r3, #524288	; 0x80000
   1d790:	and	r2, r2, r3
   1d794:	str	r2, [r0, #24]
   1d798:	ldr	r0, [sp, #8]
   1d79c:	str	r1, [r0, #12]
   1d7a0:	ldr	r0, [sp, #8]
   1d7a4:	str	r1, [r0, #16]
   1d7a8:	ldr	r0, [sp, #8]
   1d7ac:	mvn	r2, #0
   1d7b0:	str	r2, [r0, #28]
   1d7b4:	ldr	r0, [fp, #-12]
   1d7b8:	cmp	r0, r1
   1d7bc:	beq	1d7cc <__assert_fail@plt+0xc2c8>
   1d7c0:	ldr	r0, [sp, #8]
   1d7c4:	ldr	r1, [fp, #-12]
   1d7c8:	str	r0, [r1]
   1d7cc:	ldr	r0, [sp, #16]
   1d7d0:	movw	r1, #0
   1d7d4:	cmp	r0, r1
   1d7d8:	beq	1d7e8 <__assert_fail@plt+0xc2e4>
   1d7dc:	ldr	r0, [sp, #8]
   1d7e0:	ldr	r1, [sp, #16]
   1d7e4:	str	r0, [r1]
   1d7e8:	ldr	r0, [sp, #8]
   1d7ec:	str	r0, [fp, #-4]
   1d7f0:	ldr	r0, [fp, #-4]
   1d7f4:	mov	sp, fp
   1d7f8:	pop	{fp, pc}
   1d7fc:	push	{fp, lr}
   1d800:	mov	fp, sp
   1d804:	sub	sp, sp, #56	; 0x38
   1d808:	ldr	ip, [fp, #12]
   1d80c:	ldr	lr, [fp, #8]
   1d810:	str	r0, [fp, #-8]
   1d814:	str	r1, [fp, #-12]
   1d818:	str	r2, [fp, #-16]
   1d81c:	str	r3, [fp, #-20]	; 0xffffffec
   1d820:	ldr	r0, [fp, #-12]
   1d824:	ldr	r0, [r0]
   1d828:	str	r0, [fp, #-24]	; 0xffffffe8
   1d82c:	ldr	r0, [fp, #-12]
   1d830:	ldr	r1, [r0, #24]
   1d834:	add	r2, r1, #1
   1d838:	str	r2, [r0, #24]
   1d83c:	str	r1, [sp, #24]
   1d840:	ldr	r0, [fp, #-16]
   1d844:	ldr	r1, [fp, #-8]
   1d848:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d84c:	orr	r2, r2, #8388608	; 0x800000
   1d850:	str	lr, [sp, #20]
   1d854:	str	ip, [sp, #16]
   1d858:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1d85c:	ldr	r0, [fp, #-16]
   1d860:	ldr	r0, [r0, #4]
   1d864:	and	r0, r0, #255	; 0xff
   1d868:	cmp	r0, #9
   1d86c:	bne	1d87c <__assert_fail@plt+0xc378>
   1d870:	movw	r0, #0
   1d874:	str	r0, [sp, #28]
   1d878:	b	1d938 <__assert_fail@plt+0xc434>
   1d87c:	ldr	r0, [fp, #-8]
   1d880:	ldr	r1, [fp, #-12]
   1d884:	ldr	r2, [fp, #-16]
   1d888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d88c:	ldr	ip, [fp, #8]
   1d890:	ldr	lr, [fp, #12]
   1d894:	str	ip, [sp]
   1d898:	str	lr, [sp, #4]
   1d89c:	bl	1b3b0 <__assert_fail@plt+0x9eac>
   1d8a0:	str	r0, [sp, #28]
   1d8a4:	ldr	r0, [fp, #12]
   1d8a8:	ldr	r0, [r0]
   1d8ac:	cmp	r0, #0
   1d8b0:	movw	r0, #0
   1d8b4:	str	r0, [sp, #12]
   1d8b8:	bne	1d8d8 <__assert_fail@plt+0xc3d4>
   1d8bc:	ldr	r0, [fp, #-16]
   1d8c0:	ldr	r0, [r0, #4]
   1d8c4:	and	r0, r0, #255	; 0xff
   1d8c8:	cmp	r0, #9
   1d8cc:	movw	r0, #0
   1d8d0:	movne	r0, #1
   1d8d4:	str	r0, [sp, #12]
   1d8d8:	ldr	r0, [sp, #12]
   1d8dc:	tst	r0, #1
   1d8e0:	beq	1d918 <__assert_fail@plt+0xc414>
   1d8e4:	ldr	r0, [sp, #28]
   1d8e8:	movw	r1, #0
   1d8ec:	cmp	r0, r1
   1d8f0:	beq	1d90c <__assert_fail@plt+0xc408>
   1d8f4:	ldr	r0, [sp, #28]
   1d8f8:	movw	r1, #52092	; 0xcb7c
   1d8fc:	movt	r1, #1
   1d900:	movw	r2, #0
   1d904:	bl	1ca0c <__assert_fail@plt+0xb508>
   1d908:	str	r0, [sp, #8]
   1d90c:	ldr	r0, [fp, #12]
   1d910:	movw	r1, #8
   1d914:	str	r1, [r0]
   1d918:	ldr	r0, [fp, #12]
   1d91c:	ldr	r0, [r0]
   1d920:	cmp	r0, #0
   1d924:	beq	1d934 <__assert_fail@plt+0xc430>
   1d928:	movw	r0, #0
   1d92c:	str	r0, [fp, #-4]
   1d930:	b	1d9b4 <__assert_fail@plt+0xc4b0>
   1d934:	b	1d938 <__assert_fail@plt+0xc434>
   1d938:	ldr	r0, [sp, #24]
   1d93c:	cmp	r0, #8
   1d940:	bhi	1d960 <__assert_fail@plt+0xc45c>
   1d944:	ldr	r0, [sp, #24]
   1d948:	movw	r1, #1
   1d94c:	lsl	r0, r1, r0
   1d950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d954:	ldr	r2, [r1, #84]	; 0x54
   1d958:	orr	r0, r2, r0
   1d95c:	str	r0, [r1, #84]	; 0x54
   1d960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d964:	ldr	r1, [sp, #28]
   1d968:	movw	r2, #0
   1d96c:	movw	r3, #17
   1d970:	bl	1b608 <__assert_fail@plt+0xa104>
   1d974:	str	r0, [sp, #28]
   1d978:	ldr	r0, [sp, #28]
   1d97c:	movw	r1, #0
   1d980:	cmp	r0, r1
   1d984:	bne	1d9a0 <__assert_fail@plt+0xc49c>
   1d988:	ldr	r0, [fp, #12]
   1d98c:	movw	r1, #12
   1d990:	str	r1, [r0]
   1d994:	movw	r0, #0
   1d998:	str	r0, [fp, #-4]
   1d99c:	b	1d9b4 <__assert_fail@plt+0xc4b0>
   1d9a0:	ldr	r0, [sp, #24]
   1d9a4:	ldr	r1, [sp, #28]
   1d9a8:	str	r0, [r1, #20]
   1d9ac:	ldr	r0, [sp, #28]
   1d9b0:	str	r0, [fp, #-4]
   1d9b4:	ldr	r0, [fp, #-4]
   1d9b8:	mov	sp, fp
   1d9bc:	pop	{fp, pc}
   1d9c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d9c4:	add	fp, sp, #24
   1d9c8:	sub	sp, sp, #296	; 0x128
   1d9cc:	ldr	ip, [fp, #8]
   1d9d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d9d4:	str	r1, [fp, #-36]	; 0xffffffdc
   1d9d8:	str	r2, [fp, #-40]	; 0xffffffd8
   1d9dc:	str	r3, [fp, #-44]	; 0xffffffd4
   1d9e0:	movw	r0, #0
   1d9e4:	str	r0, [fp, #-48]	; 0xffffffd0
   1d9e8:	str	r0, [fp, #-52]	; 0xffffffcc
   1d9ec:	str	r0, [fp, #-56]	; 0xffffffc8
   1d9f0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d9f4:	str	r0, [fp, #-64]	; 0xffffffc0
   1d9f8:	str	r0, [fp, #-68]	; 0xffffffbc
   1d9fc:	str	r0, [fp, #-88]	; 0xffffffa8
   1da00:	str	r0, [fp, #-92]	; 0xffffffa4
   1da04:	str	r0, [fp, #-96]	; 0xffffffa0
   1da08:	str	r0, [fp, #-100]	; 0xffffff9c
   1da0c:	str	r0, [fp, #-104]	; 0xffffff98
   1da10:	movw	r0, #0
   1da14:	strb	r0, [fp, #-105]	; 0xffffff97
   1da18:	movw	r0, #1
   1da1c:	strb	r0, [fp, #-117]	; 0xffffff8b
   1da20:	movw	r0, #32
   1da24:	movw	r1, #1
   1da28:	str	ip, [sp, #84]	; 0x54
   1da2c:	bl	33aa8 <__assert_fail@plt+0x225a4>
   1da30:	str	r0, [fp, #-80]	; 0xffffffb0
   1da34:	movw	r0, #40	; 0x28
   1da38:	movw	r1, #1
   1da3c:	bl	33aa8 <__assert_fail@plt+0x225a4>
   1da40:	str	r0, [fp, #-84]	; 0xffffffac
   1da44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1da48:	movw	r1, #0
   1da4c:	cmp	r0, r1
   1da50:	movw	r0, #1
   1da54:	str	r0, [sp, #80]	; 0x50
   1da58:	beq	1da74 <__assert_fail@plt+0xc570>
   1da5c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1da60:	movw	r1, #0
   1da64:	cmp	r0, r1
   1da68:	movw	r0, #0
   1da6c:	moveq	r0, #1
   1da70:	str	r0, [sp, #80]	; 0x50
   1da74:	ldr	r0, [sp, #80]	; 0x50
   1da78:	tst	r0, #1
   1da7c:	beq	1daa8 <__assert_fail@plt+0xc5a4>
   1da80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1da84:	bl	35268 <__assert_fail@plt+0x23d64>
   1da88:	ldr	r0, [fp, #-84]	; 0xffffffac
   1da8c:	bl	35268 <__assert_fail@plt+0x23d64>
   1da90:	ldr	r0, [fp, #8]
   1da94:	movw	lr, #12
   1da98:	str	lr, [r0]
   1da9c:	movw	r0, #0
   1daa0:	str	r0, [fp, #-28]	; 0xffffffe4
   1daa4:	b	1e2e4 <__assert_fail@plt+0xcde0>
   1daa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1daac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dab4:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1dab8:	str	r0, [fp, #-116]	; 0xffffff8c
   1dabc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dac0:	ldr	r0, [r0, #4]
   1dac4:	and	r0, r0, #255	; 0xff
   1dac8:	cmp	r0, #2
   1dacc:	bne	1dae0 <__assert_fail@plt+0xc5dc>
   1dad0:	ldr	r0, [fp, #8]
   1dad4:	movw	r1, #2
   1dad8:	str	r1, [r0]
   1dadc:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1dae0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dae4:	ldr	r0, [r0, #4]
   1dae8:	and	r0, r0, #255	; 0xff
   1daec:	cmp	r0, #25
   1daf0:	bne	1db7c <__assert_fail@plt+0xc678>
   1daf4:	ldr	r0, [fp, #-84]	; 0xffffffac
   1daf8:	ldrb	r1, [r0, #16]
   1dafc:	bic	r1, r1, #1
   1db00:	movw	r2, #1
   1db04:	orr	r1, r1, r2
   1db08:	strb	r1, [r0, #16]
   1db0c:	strb	r2, [fp, #-105]	; 0xffffff97
   1db10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db14:	and	r0, r0, #256	; 0x100
   1db18:	cmp	r0, #0
   1db1c:	beq	1db2c <__assert_fail@plt+0xc628>
   1db20:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1db24:	movw	r1, #10
   1db28:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1db2c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1db30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1db34:	ldr	r2, [r1, #40]	; 0x28
   1db38:	add	r0, r2, r0
   1db3c:	str	r0, [r1, #40]	; 0x28
   1db40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1db44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1db48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db4c:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1db50:	str	r0, [fp, #-116]	; 0xffffff8c
   1db54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1db58:	ldr	r0, [r0, #4]
   1db5c:	and	r0, r0, #255	; 0xff
   1db60:	cmp	r0, #2
   1db64:	bne	1db78 <__assert_fail@plt+0xc674>
   1db68:	ldr	r0, [fp, #8]
   1db6c:	movw	r1, #2
   1db70:	str	r1, [r0]
   1db74:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1db78:	b	1db7c <__assert_fail@plt+0xc678>
   1db7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1db80:	ldr	r0, [r0, #4]
   1db84:	and	r0, r0, #255	; 0xff
   1db88:	cmp	r0, #21
   1db8c:	bne	1dba8 <__assert_fail@plt+0xc6a4>
   1db90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1db94:	ldr	r1, [r0, #4]
   1db98:	mvn	r2, #255	; 0xff
   1db9c:	and	r1, r1, r2
   1dba0:	orr	r1, r1, #1
   1dba4:	str	r1, [r0, #4]
   1dba8:	b	1dbac <__assert_fail@plt+0xc6a8>
   1dbac:	add	r0, sp, #152	; 0x98
   1dbb0:	movw	r1, #0
   1dbb4:	str	r1, [sp, #112]	; 0x70
   1dbb8:	movw	r1, #0
   1dbbc:	strb	r1, [sp, #111]	; 0x6f
   1dbc0:	str	r0, [fp, #-124]	; 0xffffff84
   1dbc4:	movw	r0, #3
   1dbc8:	str	r0, [fp, #-128]	; 0xffffff80
   1dbcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dbd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dbd4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1dbd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dbdc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1dbe0:	ldrb	lr, [fp, #-117]	; 0xffffff8b
   1dbe4:	sub	r4, fp, #128	; 0x80
   1dbe8:	str	r0, [sp, #76]	; 0x4c
   1dbec:	mov	r0, r4
   1dbf0:	ldr	r4, [sp, #76]	; 0x4c
   1dbf4:	str	r4, [sp]
   1dbf8:	str	ip, [sp, #4]
   1dbfc:	and	ip, lr, #1
   1dc00:	str	ip, [sp, #8]
   1dc04:	bl	1f1e8 <__assert_fail@plt+0xdce4>
   1dc08:	str	r0, [sp, #116]	; 0x74
   1dc0c:	ldr	r0, [sp, #116]	; 0x74
   1dc10:	cmp	r0, #0
   1dc14:	beq	1dc28 <__assert_fail@plt+0xc724>
   1dc18:	ldr	r0, [sp, #116]	; 0x74
   1dc1c:	ldr	r1, [fp, #8]
   1dc20:	str	r0, [r1]
   1dc24:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1dc28:	movw	r0, #0
   1dc2c:	strb	r0, [fp, #-117]	; 0xffffff8b
   1dc30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dc38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dc3c:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1dc40:	str	r0, [fp, #-116]	; 0xffffff8c
   1dc44:	ldr	r0, [fp, #-128]	; 0xffffff80
   1dc48:	cmp	r0, #4
   1dc4c:	beq	1dd34 <__assert_fail@plt+0xc830>
   1dc50:	ldr	r0, [fp, #-128]	; 0xffffff80
   1dc54:	cmp	r0, #2
   1dc58:	beq	1dd34 <__assert_fail@plt+0xc830>
   1dc5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc60:	ldr	r0, [r0, #4]
   1dc64:	and	r0, r0, #255	; 0xff
   1dc68:	cmp	r0, #2
   1dc6c:	bne	1dc80 <__assert_fail@plt+0xc77c>
   1dc70:	ldr	r0, [fp, #8]
   1dc74:	movw	r1, #7
   1dc78:	str	r1, [r0]
   1dc7c:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1dc80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc84:	ldr	r0, [r0, #4]
   1dc88:	and	r0, r0, #255	; 0xff
   1dc8c:	cmp	r0, #22
   1dc90:	bne	1dd30 <__assert_fail@plt+0xc82c>
   1dc94:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1dc98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dc9c:	ldr	r2, [r1, #40]	; 0x28
   1dca0:	add	r0, r2, r0
   1dca4:	str	r0, [r1, #40]	; 0x28
   1dca8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dcac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dcb0:	add	r0, sp, #100	; 0x64
   1dcb4:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1dcb8:	str	r0, [sp, #112]	; 0x70
   1dcbc:	ldr	r0, [sp, #104]	; 0x68
   1dcc0:	and	r0, r0, #255	; 0xff
   1dcc4:	cmp	r0, #2
   1dcc8:	bne	1dcdc <__assert_fail@plt+0xc7d8>
   1dccc:	ldr	r0, [fp, #8]
   1dcd0:	movw	r1, #7
   1dcd4:	str	r1, [r0]
   1dcd8:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1dcdc:	ldr	r0, [sp, #104]	; 0x68
   1dce0:	and	r0, r0, #255	; 0xff
   1dce4:	cmp	r0, #21
   1dce8:	bne	1dd24 <__assert_fail@plt+0xc820>
   1dcec:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1dcf0:	movw	r1, #0
   1dcf4:	sub	r0, r1, r0
   1dcf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dcfc:	ldr	r2, [r1, #40]	; 0x28
   1dd00:	add	r0, r2, r0
   1dd04:	str	r0, [r1, #40]	; 0x28
   1dd08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dd0c:	ldr	r1, [r0, #4]
   1dd10:	mvn	r2, #255	; 0xff
   1dd14:	and	r1, r1, r2
   1dd18:	orr	r1, r1, #1
   1dd1c:	str	r1, [r0, #4]
   1dd20:	b	1dd2c <__assert_fail@plt+0xc828>
   1dd24:	movw	r0, #1
   1dd28:	strb	r0, [sp, #111]	; 0x6f
   1dd2c:	b	1dd30 <__assert_fail@plt+0xc82c>
   1dd30:	b	1dd34 <__assert_fail@plt+0xc830>
   1dd34:	ldrb	r0, [sp, #111]	; 0x6f
   1dd38:	and	r0, r0, #1
   1dd3c:	cmp	r0, #1
   1dd40:	bne	1de64 <__assert_fail@plt+0xc960>
   1dd44:	add	r0, sp, #120	; 0x78
   1dd48:	str	r0, [fp, #-132]	; 0xffffff7c
   1dd4c:	movw	r0, #3
   1dd50:	str	r0, [fp, #-136]	; 0xffffff78
   1dd54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dd58:	ldr	r3, [sp, #112]	; 0x70
   1dd5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dd60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dd64:	sub	ip, fp, #136	; 0x88
   1dd68:	str	r0, [sp, #72]	; 0x48
   1dd6c:	mov	r0, ip
   1dd70:	add	ip, sp, #100	; 0x64
   1dd74:	str	r2, [sp, #68]	; 0x44
   1dd78:	mov	r2, ip
   1dd7c:	ldr	ip, [sp, #72]	; 0x48
   1dd80:	str	ip, [sp]
   1dd84:	ldr	lr, [sp, #68]	; 0x44
   1dd88:	str	lr, [sp, #4]
   1dd8c:	movw	r4, #1
   1dd90:	and	r4, r4, #1
   1dd94:	str	r4, [sp, #8]
   1dd98:	bl	1f1e8 <__assert_fail@plt+0xdce4>
   1dd9c:	str	r0, [sp, #116]	; 0x74
   1dda0:	ldr	r0, [sp, #116]	; 0x74
   1dda4:	cmp	r0, #0
   1dda8:	beq	1ddbc <__assert_fail@plt+0xc8b8>
   1ddac:	ldr	r0, [sp, #116]	; 0x74
   1ddb0:	ldr	r1, [fp, #8]
   1ddb4:	str	r0, [r1]
   1ddb8:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1ddbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ddc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ddc4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ddc8:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1ddcc:	str	r0, [fp, #-116]	; 0xffffff8c
   1ddd0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ddd4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ddd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1dddc:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1dde0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dde4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1dde8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1ddec:	ldr	r5, [fp, #-60]	; 0xffffffc4
   1ddf0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   1ddf4:	ldr	r7, [fp, #-68]	; 0xffffffbc
   1ddf8:	sub	r8, fp, #92	; 0x5c
   1ddfc:	str	r2, [sp, #64]	; 0x40
   1de00:	mov	r2, r8
   1de04:	sub	r8, fp, #128	; 0x80
   1de08:	str	r3, [sp, #60]	; 0x3c
   1de0c:	mov	r3, r8
   1de10:	sub	r8, fp, #136	; 0x88
   1de14:	str	r8, [sp]
   1de18:	ldr	r8, [sp, #64]	; 0x40
   1de1c:	str	r8, [sp, #4]
   1de20:	str	lr, [sp, #8]
   1de24:	ldr	lr, [sp, #60]	; 0x3c
   1de28:	str	lr, [sp, #12]
   1de2c:	str	ip, [sp, #16]
   1de30:	str	r4, [sp, #20]
   1de34:	str	r5, [sp, #24]
   1de38:	str	r6, [sp, #28]
   1de3c:	str	r7, [sp, #32]
   1de40:	bl	1f36c <__assert_fail@plt+0xde68>
   1de44:	ldr	r1, [fp, #8]
   1de48:	str	r0, [r1]
   1de4c:	ldr	r0, [fp, #8]
   1de50:	ldr	r0, [r0]
   1de54:	cmp	r0, #0
   1de58:	beq	1de60 <__assert_fail@plt+0xc95c>
   1de5c:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1de60:	b	1e018 <__assert_fail@plt+0xcb14>
   1de64:	ldr	r0, [fp, #-128]	; 0xffffff80
   1de68:	cmp	r0, #4
   1de6c:	str	r0, [sp, #56]	; 0x38
   1de70:	bhi	1e014 <__assert_fail@plt+0xcb10>
   1de74:	add	r0, pc, #8
   1de78:	ldr	r1, [sp, #56]	; 0x38
   1de7c:	ldr	r0, [r0, r1, lsl #2]
   1de80:	mov	pc, r0
   1de84:	muleq	r1, r8, lr
   1de88:	andeq	sp, r1, r8, lsr #29
   1de8c:	andeq	sp, r1, ip, lsr #30
   1de90:	andeq	sp, r1, r0, ror #30
   1de94:	andeq	sp, r1, r0, asr #31
   1de98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1de9c:	ldrb	r1, [fp, #-124]	; 0xffffff84
   1dea0:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1dea4:	b	1e014 <__assert_fail@plt+0xcb10>
   1dea8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1deac:	ldr	r1, [fp, #-84]	; 0xffffffac
   1deb0:	ldr	r1, [r1, #20]
   1deb4:	cmp	r0, r1
   1deb8:	bne	1df08 <__assert_fail@plt+0xca04>
   1debc:	ldr	r0, [fp, #-84]	; 0xffffffac
   1dec0:	ldr	r0, [r0, #20]
   1dec4:	mov	r1, #1
   1dec8:	orr	r0, r1, r0, lsl #1
   1decc:	str	r0, [fp, #-96]	; 0xffffffa0
   1ded0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1ded4:	ldr	r0, [r0]
   1ded8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1dedc:	lsl	r1, r1, #2
   1dee0:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1dee4:	str	r0, [sp, #96]	; 0x60
   1dee8:	ldr	r0, [sp, #96]	; 0x60
   1deec:	movw	r1, #0
   1def0:	cmp	r0, r1
   1def4:	bne	1defc <__assert_fail@plt+0xc9f8>
   1def8:	b	1e2c0 <__assert_fail@plt+0xcdbc>
   1defc:	ldr	r0, [sp, #96]	; 0x60
   1df00:	ldr	r1, [fp, #-84]	; 0xffffffac
   1df04:	str	r0, [r1]
   1df08:	ldr	r0, [fp, #-124]	; 0xffffff84
   1df0c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1df10:	ldr	r2, [r1]
   1df14:	ldr	r3, [r1, #20]
   1df18:	add	ip, r3, #1
   1df1c:	str	ip, [r1, #20]
   1df20:	add	r1, r2, r3, lsl #2
   1df24:	str	r0, [r1]
   1df28:	b	1e014 <__assert_fail@plt+0xcb10>
   1df2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1df30:	ldr	r1, [fp, #-84]	; 0xffffffac
   1df34:	ldr	r3, [fp, #-124]	; 0xffffff84
   1df38:	sub	r2, fp, #100	; 0x64
   1df3c:	bl	1f814 <__assert_fail@plt+0xe310>
   1df40:	ldr	r1, [fp, #8]
   1df44:	str	r0, [r1]
   1df48:	ldr	r0, [fp, #8]
   1df4c:	ldr	r0, [r0]
   1df50:	cmp	r0, #0
   1df54:	beq	1df5c <__assert_fail@plt+0xca58>
   1df58:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1df5c:	b	1e014 <__assert_fail@plt+0xcb10>
   1df60:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1df64:	ldr	r1, [fp, #-84]	; 0xffffffac
   1df68:	ldr	r3, [fp, #-124]	; 0xffffff84
   1df6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1df70:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1df74:	ldr	lr, [fp, #-64]	; 0xffffffc0
   1df78:	ldr	r4, [fp, #-68]	; 0xffffffbc
   1df7c:	sub	r5, fp, #88	; 0x58
   1df80:	str	r2, [sp, #52]	; 0x34
   1df84:	mov	r2, r5
   1df88:	ldr	r5, [sp, #52]	; 0x34
   1df8c:	str	r5, [sp]
   1df90:	str	ip, [sp, #4]
   1df94:	str	lr, [sp, #8]
   1df98:	str	r4, [sp, #12]
   1df9c:	bl	1f870 <__assert_fail@plt+0xe36c>
   1dfa0:	ldr	r1, [fp, #8]
   1dfa4:	str	r0, [r1]
   1dfa8:	ldr	r0, [fp, #8]
   1dfac:	ldr	r0, [r0]
   1dfb0:	cmp	r0, #0
   1dfb4:	beq	1dfbc <__assert_fail@plt+0xcab8>
   1dfb8:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1dfbc:	b	1e014 <__assert_fail@plt+0xcb10>
   1dfc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfc4:	ldr	r0, [r0, #64]	; 0x40
   1dfc8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1dfcc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1dfd0:	ldr	r3, [fp, #-124]	; 0xffffff84
   1dfd4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1dfd8:	sub	lr, fp, #104	; 0x68
   1dfdc:	str	r3, [sp, #48]	; 0x30
   1dfe0:	mov	r3, lr
   1dfe4:	ldr	lr, [sp, #48]	; 0x30
   1dfe8:	str	lr, [sp]
   1dfec:	str	ip, [sp, #4]
   1dff0:	bl	1f8f4 <__assert_fail@plt+0xe3f0>
   1dff4:	ldr	r1, [fp, #8]
   1dff8:	str	r0, [r1]
   1dffc:	ldr	r0, [fp, #8]
   1e000:	ldr	r0, [r0]
   1e004:	cmp	r0, #0
   1e008:	beq	1e010 <__assert_fail@plt+0xcb0c>
   1e00c:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1e010:	b	1e014 <__assert_fail@plt+0xcb10>
   1e014:	b	1e018 <__assert_fail@plt+0xcb14>
   1e018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e01c:	ldr	r0, [r0, #4]
   1e020:	and	r0, r0, #255	; 0xff
   1e024:	cmp	r0, #2
   1e028:	bne	1e03c <__assert_fail@plt+0xcb38>
   1e02c:	ldr	r0, [fp, #8]
   1e030:	movw	r1, #7
   1e034:	str	r1, [r0]
   1e038:	b	1e2cc <__assert_fail@plt+0xcdc8>
   1e03c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e040:	ldr	r0, [r0, #4]
   1e044:	and	r0, r0, #255	; 0xff
   1e048:	cmp	r0, #21
   1e04c:	bne	1e054 <__assert_fail@plt+0xcb50>
   1e050:	b	1e058 <__assert_fail@plt+0xcb54>
   1e054:	b	1dbac <__assert_fail@plt+0xc6a8>
   1e058:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1e05c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e060:	ldr	r2, [r1, #40]	; 0x28
   1e064:	add	r0, r2, r0
   1e068:	str	r0, [r1, #40]	; 0x28
   1e06c:	ldrb	r0, [fp, #-105]	; 0xffffff97
   1e070:	tst	r0, #1
   1e074:	beq	1e080 <__assert_fail@plt+0xcb7c>
   1e078:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e07c:	bl	2059c <__assert_fail@plt+0xf098>
   1e080:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e084:	ldr	r0, [r0, #92]	; 0x5c
   1e088:	cmp	r0, #1
   1e08c:	ble	1e0a0 <__assert_fail@plt+0xcb9c>
   1e090:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e094:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e098:	ldr	r1, [r1, #60]	; 0x3c
   1e09c:	bl	205e4 <__assert_fail@plt+0xf0e0>
   1e0a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0a4:	ldr	r0, [r0, #20]
   1e0a8:	cmp	r0, #0
   1e0ac:	bne	1e118 <__assert_fail@plt+0xcc14>
   1e0b0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0b4:	ldr	r0, [r0, #24]
   1e0b8:	cmp	r0, #0
   1e0bc:	bne	1e118 <__assert_fail@plt+0xcc14>
   1e0c0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0c4:	ldr	r0, [r0, #28]
   1e0c8:	cmp	r0, #0
   1e0cc:	bne	1e118 <__assert_fail@plt+0xcc14>
   1e0d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0d4:	ldr	r0, [r0, #32]
   1e0d8:	cmp	r0, #0
   1e0dc:	bne	1e118 <__assert_fail@plt+0xcc14>
   1e0e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e0e4:	ldr	r0, [r0, #92]	; 0x5c
   1e0e8:	cmp	r0, #1
   1e0ec:	ble	1e25c <__assert_fail@plt+0xcd58>
   1e0f0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0f4:	ldr	r0, [r0, #36]	; 0x24
   1e0f8:	cmp	r0, #0
   1e0fc:	bne	1e118 <__assert_fail@plt+0xcc14>
   1e100:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e104:	ldrb	r0, [r0, #16]
   1e108:	and	r0, r0, #1
   1e10c:	and	r0, r0, #255	; 0xff
   1e110:	cmp	r0, #0
   1e114:	beq	1e25c <__assert_fail@plt+0xcd58>
   1e118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e11c:	ldrb	r1, [r0, #88]	; 0x58
   1e120:	bic	r1, r1, #2
   1e124:	movw	r2, #2
   1e128:	orr	r1, r1, r2
   1e12c:	strb	r1, [r0, #88]	; 0x58
   1e130:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e134:	mvn	r1, #255	; 0xff
   1e138:	and	r0, r0, r1
   1e13c:	orr	r0, r0, #6
   1e140:	str	r0, [fp, #-72]	; 0xffffffb8
   1e144:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e148:	str	r0, [fp, #-76]	; 0xffffffb4
   1e14c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e150:	movw	r1, #0
   1e154:	str	r1, [sp, #44]	; 0x2c
   1e158:	ldr	r2, [sp, #44]	; 0x2c
   1e15c:	sub	r3, fp, #76	; 0x4c
   1e160:	bl	1d698 <__assert_fail@plt+0xc194>
   1e164:	str	r0, [sp, #92]	; 0x5c
   1e168:	ldr	r0, [sp, #92]	; 0x5c
   1e16c:	movw	r1, #0
   1e170:	cmp	r0, r1
   1e174:	bne	1e17c <__assert_fail@plt+0xcc78>
   1e178:	b	1e2c0 <__assert_fail@plt+0xcdbc>
   1e17c:	movw	r0, #0
   1e180:	str	r0, [sp, #88]	; 0x58
   1e184:	ldr	r0, [sp, #88]	; 0x58
   1e188:	cmp	r0, #8
   1e18c:	bge	1e1c0 <__assert_fail@plt+0xccbc>
   1e190:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e194:	ldr	r1, [sp, #88]	; 0x58
   1e198:	add	r0, r0, r1, lsl #2
   1e19c:	ldr	r0, [r0]
   1e1a0:	cmp	r0, #0
   1e1a4:	beq	1e1ac <__assert_fail@plt+0xcca8>
   1e1a8:	b	1e1c0 <__assert_fail@plt+0xccbc>
   1e1ac:	b	1e1b0 <__assert_fail@plt+0xccac>
   1e1b0:	ldr	r0, [sp, #88]	; 0x58
   1e1b4:	add	r0, r0, #1
   1e1b8:	str	r0, [sp, #88]	; 0x58
   1e1bc:	b	1e184 <__assert_fail@plt+0xcc80>
   1e1c0:	ldr	r0, [sp, #88]	; 0x58
   1e1c4:	cmp	r0, #8
   1e1c8:	bge	1e248 <__assert_fail@plt+0xcd44>
   1e1cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e1d0:	mvn	r1, #255	; 0xff
   1e1d4:	and	r0, r0, r1
   1e1d8:	orr	r0, r0, #3
   1e1dc:	str	r0, [fp, #-72]	; 0xffffffb8
   1e1e0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e1e4:	str	r0, [fp, #-76]	; 0xffffffb4
   1e1e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e1ec:	movw	r1, #0
   1e1f0:	str	r1, [sp, #40]	; 0x28
   1e1f4:	ldr	r2, [sp, #40]	; 0x28
   1e1f8:	sub	r3, fp, #76	; 0x4c
   1e1fc:	bl	1d698 <__assert_fail@plt+0xc194>
   1e200:	str	r0, [fp, #-112]	; 0xffffff90
   1e204:	ldr	r0, [fp, #-112]	; 0xffffff90
   1e208:	movw	r1, #0
   1e20c:	cmp	r0, r1
   1e210:	bne	1e218 <__assert_fail@plt+0xcd14>
   1e214:	b	1e2c0 <__assert_fail@plt+0xcdbc>
   1e218:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e21c:	ldr	r1, [fp, #-112]	; 0xffffff90
   1e220:	ldr	r2, [sp, #92]	; 0x5c
   1e224:	movw	r3, #10
   1e228:	bl	1b608 <__assert_fail@plt+0xa104>
   1e22c:	str	r0, [fp, #-112]	; 0xffffff90
   1e230:	ldr	r0, [fp, #-112]	; 0xffffff90
   1e234:	movw	r1, #0
   1e238:	cmp	r0, r1
   1e23c:	bne	1e244 <__assert_fail@plt+0xcd40>
   1e240:	b	1e2c0 <__assert_fail@plt+0xcdbc>
   1e244:	b	1e258 <__assert_fail@plt+0xcd54>
   1e248:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e24c:	bl	35268 <__assert_fail@plt+0x23d64>
   1e250:	ldr	r0, [sp, #92]	; 0x5c
   1e254:	str	r0, [fp, #-112]	; 0xffffff90
   1e258:	b	1e2b4 <__assert_fail@plt+0xcdb0>
   1e25c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e260:	bl	18c30 <__assert_fail@plt+0x772c>
   1e264:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e268:	mvn	lr, #255	; 0xff
   1e26c:	and	r0, r0, lr
   1e270:	orr	r0, r0, #3
   1e274:	str	r0, [fp, #-72]	; 0xffffffb8
   1e278:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e27c:	str	r0, [fp, #-76]	; 0xffffffb4
   1e280:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e284:	movw	lr, #0
   1e288:	mov	r1, lr
   1e28c:	mov	r2, lr
   1e290:	sub	r3, fp, #76	; 0x4c
   1e294:	bl	1d698 <__assert_fail@plt+0xc194>
   1e298:	str	r0, [fp, #-112]	; 0xffffff90
   1e29c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1e2a0:	movw	r1, #0
   1e2a4:	cmp	r0, r1
   1e2a8:	bne	1e2b0 <__assert_fail@plt+0xcdac>
   1e2ac:	b	1e2c0 <__assert_fail@plt+0xcdbc>
   1e2b0:	b	1e2b4 <__assert_fail@plt+0xcdb0>
   1e2b4:	ldr	r0, [fp, #-112]	; 0xffffff90
   1e2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2bc:	b	1e2e4 <__assert_fail@plt+0xcde0>
   1e2c0:	ldr	r0, [fp, #8]
   1e2c4:	movw	r1, #12
   1e2c8:	str	r1, [r0]
   1e2cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e2d0:	bl	35268 <__assert_fail@plt+0x23d64>
   1e2d4:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e2d8:	bl	18c30 <__assert_fail@plt+0x772c>
   1e2dc:	movw	r0, #0
   1e2e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2e8:	sub	sp, fp, #24
   1e2ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e2f0:	push	{fp, lr}
   1e2f4:	mov	fp, sp
   1e2f8:	sub	sp, sp, #32
   1e2fc:	str	r0, [fp, #-4]
   1e300:	mov	r0, #0
   1e304:	str	r0, [fp, #-8]
   1e308:	str	r0, [sp, #16]
   1e30c:	ldr	r0, [fp, #-4]
   1e310:	ldrb	r1, [r0, #88]	; 0x58
   1e314:	orr	r1, r1, #16
   1e318:	strb	r1, [r0, #88]	; 0x58
   1e31c:	ldr	r0, [fp, #-4]
   1e320:	ldrb	r0, [r0, #88]	; 0x58
   1e324:	ubfx	r0, r0, #3, #1
   1e328:	and	r0, r0, #255	; 0xff
   1e32c:	cmp	r0, #0
   1e330:	bne	1e3e8 <__assert_fail@plt+0xcee4>
   1e334:	mov	r0, #0
   1e338:	str	r0, [sp, #12]
   1e33c:	movw	r0, #0
   1e340:	movt	r0, #1023	; 0x3ff
   1e344:	str	r0, [sp, #8]
   1e348:	mvn	r0, #2013265921	; 0x78000001
   1e34c:	str	r0, [sp, #4]
   1e350:	mvn	r0, #-134217727	; 0xf8000001
   1e354:	str	r0, [sp]
   1e358:	ldr	r0, [sp, #12]
   1e35c:	ldr	r1, [fp, #-4]
   1e360:	str	r0, [r1, #96]	; 0x60
   1e364:	ldr	r0, [sp, #8]
   1e368:	ldr	r1, [fp, #-4]
   1e36c:	str	r0, [r1, #100]	; 0x64
   1e370:	ldr	r0, [sp, #4]
   1e374:	ldr	r1, [fp, #-4]
   1e378:	str	r0, [r1, #104]	; 0x68
   1e37c:	ldr	r0, [sp]
   1e380:	ldr	r1, [fp, #-4]
   1e384:	str	r0, [r1, #108]	; 0x6c
   1e388:	mov	r0, #4
   1e38c:	str	r0, [fp, #-8]
   1e390:	mov	r0, #128	; 0x80
   1e394:	str	r0, [sp, #16]
   1e398:	ldr	r0, [fp, #-4]
   1e39c:	ldrb	r0, [r0, #88]	; 0x58
   1e3a0:	ubfx	r0, r0, #2, #1
   1e3a4:	and	r0, r0, #255	; 0xff
   1e3a8:	cmp	r0, #0
   1e3ac:	beq	1e3e4 <__assert_fail@plt+0xcee0>
   1e3b0:	ldr	r0, [fp, #-4]
   1e3b4:	add	r0, r0, #96	; 0x60
   1e3b8:	ldr	r1, [fp, #-8]
   1e3bc:	add	r0, r0, r1, lsl #2
   1e3c0:	ldr	r1, [sp, #16]
   1e3c4:	movw	r2, #256	; 0x100
   1e3c8:	sub	r1, r2, r1
   1e3cc:	movw	r2, #8
   1e3d0:	sdiv	r2, r1, r2
   1e3d4:	movw	r1, #0
   1e3d8:	and	r1, r1, #255	; 0xff
   1e3dc:	bl	11420 <memset@plt>
   1e3e0:	b	1e498 <__assert_fail@plt+0xcf94>
   1e3e4:	b	1e3e8 <__assert_fail@plt+0xcee4>
   1e3e8:	b	1e3ec <__assert_fail@plt+0xcee8>
   1e3ec:	b	1e3f0 <__assert_fail@plt+0xceec>
   1e3f0:	ldr	r0, [fp, #-8]
   1e3f4:	cmp	r0, #8
   1e3f8:	bge	1e498 <__assert_fail@plt+0xcf94>
   1e3fc:	movw	r0, #0
   1e400:	str	r0, [fp, #-12]
   1e404:	ldr	r0, [fp, #-12]
   1e408:	cmp	r0, #32
   1e40c:	bge	1e484 <__assert_fail@plt+0xcf80>
   1e410:	bl	113b4 <__ctype_b_loc@plt>
   1e414:	ldr	r0, [r0]
   1e418:	ldr	lr, [sp, #16]
   1e41c:	add	r0, r0, lr, lsl #1
   1e420:	ldrh	r0, [r0]
   1e424:	and	r0, r0, #8
   1e428:	cmp	r0, #0
   1e42c:	bne	1e43c <__assert_fail@plt+0xcf38>
   1e430:	ldr	r0, [sp, #16]
   1e434:	cmp	r0, #95	; 0x5f
   1e438:	bne	1e464 <__assert_fail@plt+0xcf60>
   1e43c:	ldr	r0, [fp, #-12]
   1e440:	mov	r1, #1
   1e444:	lsl	r0, r1, r0
   1e448:	ldr	r1, [fp, #-4]
   1e44c:	add	r1, r1, #96	; 0x60
   1e450:	ldr	r2, [fp, #-8]
   1e454:	add	r1, r1, r2, lsl #2
   1e458:	ldr	r2, [r1]
   1e45c:	orr	r0, r2, r0
   1e460:	str	r0, [r1]
   1e464:	b	1e468 <__assert_fail@plt+0xcf64>
   1e468:	ldr	r0, [fp, #-12]
   1e46c:	add	r0, r0, #1
   1e470:	str	r0, [fp, #-12]
   1e474:	ldr	r0, [sp, #16]
   1e478:	add	r0, r0, #1
   1e47c:	str	r0, [sp, #16]
   1e480:	b	1e404 <__assert_fail@plt+0xcf00>
   1e484:	b	1e488 <__assert_fail@plt+0xcf84>
   1e488:	ldr	r0, [fp, #-8]
   1e48c:	add	r0, r0, #1
   1e490:	str	r0, [fp, #-8]
   1e494:	b	1e3f0 <__assert_fail@plt+0xceec>
   1e498:	mov	sp, fp
   1e49c:	pop	{fp, pc}
   1e4a0:	push	{fp, lr}
   1e4a4:	mov	fp, sp
   1e4a8:	sub	sp, sp, #80	; 0x50
   1e4ac:	ldr	ip, [fp, #12]
   1e4b0:	ldr	lr, [fp, #8]
   1e4b4:	str	r0, [fp, #-8]
   1e4b8:	str	r1, [fp, #-12]
   1e4bc:	str	r2, [fp, #-16]
   1e4c0:	str	r3, [fp, #-20]	; 0xffffffec
   1e4c4:	and	r0, lr, #1
   1e4c8:	strb	r0, [fp, #-21]	; 0xffffffeb
   1e4cc:	movw	r0, #0
   1e4d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e4d4:	movw	r0, #32
   1e4d8:	movw	r1, #1
   1e4dc:	str	ip, [sp, #20]
   1e4e0:	bl	33aa8 <__assert_fail@plt+0x225a4>
   1e4e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4ec:	movw	r1, #0
   1e4f0:	cmp	r0, r1
   1e4f4:	bne	1e510 <__assert_fail@plt+0xd00c>
   1e4f8:	ldr	r0, [fp, #12]
   1e4fc:	movw	r1, #12
   1e500:	str	r1, [r0]
   1e504:	movw	r0, #0
   1e508:	str	r0, [fp, #-4]
   1e50c:	b	1e7c4 <__assert_fail@plt+0xd2c0>
   1e510:	movw	r0, #40	; 0x28
   1e514:	movw	r1, #1
   1e518:	bl	33aa8 <__assert_fail@plt+0x225a4>
   1e51c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e524:	movw	r1, #0
   1e528:	cmp	r0, r1
   1e52c:	bne	1e550 <__assert_fail@plt+0xd04c>
   1e530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e534:	bl	35268 <__assert_fail@plt+0x23d64>
   1e538:	ldr	r0, [fp, #12]
   1e53c:	movw	lr, #12
   1e540:	str	lr, [r0]
   1e544:	movw	r0, #0
   1e548:	str	r0, [fp, #-4]
   1e54c:	b	1e7c4 <__assert_fail@plt+0xd2c0>
   1e550:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1e554:	and	r0, r0, #1
   1e558:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e55c:	ldrb	r2, [r1, #16]
   1e560:	bic	r2, r2, #1
   1e564:	orr	r0, r2, r0
   1e568:	strb	r0, [r1, #16]
   1e56c:	ldr	r0, [fp, #-12]
   1e570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e574:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e578:	ldr	r3, [fp, #-16]
   1e57c:	sub	ip, fp, #36	; 0x24
   1e580:	str	r3, [sp, #16]
   1e584:	mov	r3, ip
   1e588:	ldr	ip, [sp, #16]
   1e58c:	str	ip, [sp]
   1e590:	movw	lr, #0
   1e594:	str	lr, [sp, #4]
   1e598:	bl	1f8f4 <__assert_fail@plt+0xe3f0>
   1e59c:	str	r0, [sp, #40]	; 0x28
   1e5a0:	ldr	r0, [sp, #40]	; 0x28
   1e5a4:	cmp	r0, #0
   1e5a8:	beq	1e5d4 <__assert_fail@plt+0xd0d0>
   1e5ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e5b0:	bl	35268 <__assert_fail@plt+0x23d64>
   1e5b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e5b8:	bl	18c30 <__assert_fail@plt+0x772c>
   1e5bc:	ldr	r0, [sp, #40]	; 0x28
   1e5c0:	ldr	lr, [fp, #12]
   1e5c4:	str	r0, [lr]
   1e5c8:	movw	r0, #0
   1e5cc:	str	r0, [fp, #-4]
   1e5d0:	b	1e7c4 <__assert_fail@plt+0xd2c0>
   1e5d4:	b	1e5d8 <__assert_fail@plt+0xd0d4>
   1e5d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5dc:	ldrsb	r0, [r0]
   1e5e0:	cmp	r0, #0
   1e5e4:	beq	1e608 <__assert_fail@plt+0xd104>
   1e5e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e5ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5f0:	ldrb	r1, [r1]
   1e5f4:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1e5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5fc:	add	r0, r0, #1
   1e600:	str	r0, [fp, #-20]	; 0xffffffec
   1e604:	b	1e5d8 <__assert_fail@plt+0xd0d4>
   1e608:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1e60c:	tst	r0, #1
   1e610:	beq	1e61c <__assert_fail@plt+0xd118>
   1e614:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e618:	bl	2059c <__assert_fail@plt+0xf098>
   1e61c:	ldr	r0, [fp, #-8]
   1e620:	ldr	r0, [r0, #92]	; 0x5c
   1e624:	cmp	r0, #1
   1e628:	ble	1e63c <__assert_fail@plt+0xd138>
   1e62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e630:	ldr	r1, [fp, #-8]
   1e634:	ldr	r1, [r1, #60]	; 0x3c
   1e638:	bl	205e4 <__assert_fail@plt+0xf0e0>
   1e63c:	ldr	r0, [pc, #396]	; 1e7d0 <__assert_fail@plt+0xd2cc>
   1e640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e644:	str	r1, [sp, #28]
   1e648:	ldr	r1, [sp, #32]
   1e64c:	mvn	r2, #255	; 0xff
   1e650:	and	r1, r1, r2
   1e654:	orr	r1, r1, #3
   1e658:	str	r1, [sp, #32]
   1e65c:	ldr	r1, [sp, #32]
   1e660:	and	r0, r1, r0
   1e664:	str	r0, [sp, #32]
   1e668:	ldr	r0, [sp, #32]
   1e66c:	mvn	r1, #262144	; 0x40000
   1e670:	and	r0, r0, r1
   1e674:	str	r0, [sp, #32]
   1e678:	ldr	r0, [sp, #32]
   1e67c:	mvn	r1, #524288	; 0x80000
   1e680:	and	r0, r0, r1
   1e684:	str	r0, [sp, #32]
   1e688:	ldr	r0, [sp, #32]
   1e68c:	mvn	r1, #1048576	; 0x100000
   1e690:	and	r0, r0, r1
   1e694:	str	r0, [sp, #32]
   1e698:	ldr	r0, [sp, #32]
   1e69c:	mvn	r1, #2097152	; 0x200000
   1e6a0:	and	r0, r0, r1
   1e6a4:	str	r0, [sp, #32]
   1e6a8:	ldr	r0, [sp, #32]
   1e6ac:	mvn	r1, #4194304	; 0x400000
   1e6b0:	and	r0, r0, r1
   1e6b4:	str	r0, [sp, #32]
   1e6b8:	ldr	r0, [fp, #-8]
   1e6bc:	movw	r1, #0
   1e6c0:	str	r1, [sp, #12]
   1e6c4:	ldr	r2, [sp, #12]
   1e6c8:	add	r3, sp, #28
   1e6cc:	bl	1d698 <__assert_fail@plt+0xc194>
   1e6d0:	str	r0, [sp, #36]	; 0x24
   1e6d4:	ldr	r0, [sp, #36]	; 0x24
   1e6d8:	movw	r1, #0
   1e6dc:	cmp	r0, r1
   1e6e0:	bne	1e6e8 <__assert_fail@plt+0xd1e4>
   1e6e4:	b	1e7a0 <__assert_fail@plt+0xd29c>
   1e6e8:	ldr	r0, [fp, #-8]
   1e6ec:	ldr	r0, [r0, #92]	; 0x5c
   1e6f0:	cmp	r0, #1
   1e6f4:	ble	1e788 <__assert_fail@plt+0xd284>
   1e6f8:	mov	r0, #6
   1e6fc:	strb	r0, [sp, #32]
   1e700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e704:	str	r0, [sp, #28]
   1e708:	ldr	r0, [fp, #-8]
   1e70c:	ldrb	r1, [r0, #88]	; 0x58
   1e710:	bic	r1, r1, #2
   1e714:	movw	r2, #2
   1e718:	orr	r1, r1, r2
   1e71c:	strb	r1, [r0, #88]	; 0x58
   1e720:	ldr	r0, [fp, #-8]
   1e724:	movw	r1, #0
   1e728:	str	r1, [sp, #8]
   1e72c:	ldr	r2, [sp, #8]
   1e730:	add	r3, sp, #28
   1e734:	bl	1d698 <__assert_fail@plt+0xc194>
   1e738:	str	r0, [sp, #24]
   1e73c:	ldr	r0, [sp, #24]
   1e740:	movw	r1, #0
   1e744:	cmp	r0, r1
   1e748:	bne	1e750 <__assert_fail@plt+0xd24c>
   1e74c:	b	1e7a0 <__assert_fail@plt+0xd29c>
   1e750:	ldr	r0, [fp, #-8]
   1e754:	ldr	r1, [sp, #36]	; 0x24
   1e758:	ldr	r2, [sp, #24]
   1e75c:	movw	r3, #10
   1e760:	bl	1b608 <__assert_fail@plt+0xa104>
   1e764:	str	r0, [sp, #36]	; 0x24
   1e768:	ldr	r0, [sp, #24]
   1e76c:	movw	r1, #0
   1e770:	cmp	r0, r1
   1e774:	beq	1e784 <__assert_fail@plt+0xd280>
   1e778:	ldr	r0, [sp, #36]	; 0x24
   1e77c:	str	r0, [fp, #-4]
   1e780:	b	1e7c4 <__assert_fail@plt+0xd2c0>
   1e784:	b	1e79c <__assert_fail@plt+0xd298>
   1e788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e78c:	bl	18c30 <__assert_fail@plt+0x772c>
   1e790:	ldr	r0, [sp, #36]	; 0x24
   1e794:	str	r0, [fp, #-4]
   1e798:	b	1e7c4 <__assert_fail@plt+0xd2c0>
   1e79c:	b	1e7a0 <__assert_fail@plt+0xd29c>
   1e7a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7a4:	bl	35268 <__assert_fail@plt+0x23d64>
   1e7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7ac:	bl	18c30 <__assert_fail@plt+0x772c>
   1e7b0:	ldr	r0, [fp, #12]
   1e7b4:	movw	lr, #12
   1e7b8:	str	lr, [r0]
   1e7bc:	movw	r0, #0
   1e7c0:	str	r0, [fp, #-4]
   1e7c4:	ldr	r0, [fp, #-4]
   1e7c8:	mov	sp, fp
   1e7cc:	pop	{fp, pc}
   1e7d0:			; <UNDEFINED> instruction: 0xfffc00ff
   1e7d4:	push	{fp, lr}
   1e7d8:	mov	fp, sp
   1e7dc:	sub	sp, sp, #112	; 0x70
   1e7e0:	ldr	ip, [fp, #12]
   1e7e4:	ldr	lr, [fp, #8]
   1e7e8:	str	r0, [fp, #-8]
   1e7ec:	str	r1, [fp, #-12]
   1e7f0:	str	r2, [fp, #-16]
   1e7f4:	str	r3, [fp, #-20]	; 0xffffffec
   1e7f8:	movw	r0, #0
   1e7fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1e800:	str	r0, [fp, #-28]	; 0xffffffe4
   1e804:	ldr	r0, [fp, #-12]
   1e808:	ldr	r0, [r0, #40]	; 0x28
   1e80c:	str	r0, [fp, #-44]	; 0xffffffd4
   1e810:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e814:	ldr	r1, [r0]
   1e818:	str	r1, [fp, #-52]	; 0xffffffcc
   1e81c:	ldr	r0, [r0, #4]
   1e820:	str	r0, [fp, #-48]	; 0xffffffd0
   1e824:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e828:	ldr	r0, [r0, #4]
   1e82c:	and	r0, r0, #255	; 0xff
   1e830:	cmp	r0, #23
   1e834:	str	lr, [sp, #52]	; 0x34
   1e838:	str	ip, [sp, #48]	; 0x30
   1e83c:	bne	1eac0 <__assert_fail@plt+0xd5bc>
   1e840:	movw	r0, #0
   1e844:	str	r0, [fp, #-40]	; 0xffffffd8
   1e848:	ldr	r0, [fp, #-12]
   1e84c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e850:	ldr	r2, [fp, #8]
   1e854:	bl	20aa8 <__assert_fail@plt+0xf5a4>
   1e858:	str	r0, [fp, #-36]	; 0xffffffdc
   1e85c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e860:	cmn	r0, #1
   1e864:	bne	1e8b4 <__assert_fail@plt+0xd3b0>
   1e868:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e86c:	ldr	r0, [r0, #4]
   1e870:	and	r0, r0, #255	; 0xff
   1e874:	cmp	r0, #1
   1e878:	bne	1e898 <__assert_fail@plt+0xd394>
   1e87c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e880:	ldrb	r0, [r0]
   1e884:	cmp	r0, #44	; 0x2c
   1e888:	bne	1e898 <__assert_fail@plt+0xd394>
   1e88c:	movw	r0, #0
   1e890:	str	r0, [fp, #-36]	; 0xffffffdc
   1e894:	b	1e8b0 <__assert_fail@plt+0xd3ac>
   1e898:	ldr	r0, [fp, #12]
   1e89c:	movw	r1, #10
   1e8a0:	str	r1, [r0]
   1e8a4:	movw	r0, #0
   1e8a8:	str	r0, [fp, #-4]
   1e8ac:	b	1ee24 <__assert_fail@plt+0xd920>
   1e8b0:	b	1e8b4 <__assert_fail@plt+0xd3b0>
   1e8b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e8b8:	cmn	r0, #2
   1e8bc:	beq	1e938 <__assert_fail@plt+0xd434>
   1e8c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8c4:	ldr	r0, [r0, #4]
   1e8c8:	and	r0, r0, #255	; 0xff
   1e8cc:	cmp	r0, #24
   1e8d0:	bne	1e8e0 <__assert_fail@plt+0xd3dc>
   1e8d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e8d8:	str	r0, [sp, #44]	; 0x2c
   1e8dc:	b	1e930 <__assert_fail@plt+0xd42c>
   1e8e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8e4:	ldr	r0, [r0, #4]
   1e8e8:	and	r0, r0, #255	; 0xff
   1e8ec:	cmp	r0, #1
   1e8f0:	bne	1e91c <__assert_fail@plt+0xd418>
   1e8f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8f8:	ldrb	r0, [r0]
   1e8fc:	cmp	r0, #44	; 0x2c
   1e900:	bne	1e91c <__assert_fail@plt+0xd418>
   1e904:	ldr	r0, [fp, #-12]
   1e908:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e90c:	ldr	r2, [fp, #8]
   1e910:	bl	20aa8 <__assert_fail@plt+0xf5a4>
   1e914:	str	r0, [sp, #40]	; 0x28
   1e918:	b	1e928 <__assert_fail@plt+0xd424>
   1e91c:	mvn	r0, #1
   1e920:	str	r0, [sp, #40]	; 0x28
   1e924:	b	1e928 <__assert_fail@plt+0xd424>
   1e928:	ldr	r0, [sp, #40]	; 0x28
   1e92c:	str	r0, [sp, #44]	; 0x2c
   1e930:	ldr	r0, [sp, #44]	; 0x2c
   1e934:	str	r0, [fp, #-40]	; 0xffffffd8
   1e938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e93c:	cmn	r0, #2
   1e940:	movw	r0, #1
   1e944:	str	r0, [sp, #36]	; 0x24
   1e948:	beq	1e960 <__assert_fail@plt+0xd45c>
   1e94c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e950:	cmn	r0, #2
   1e954:	movw	r0, #0
   1e958:	moveq	r0, #1
   1e95c:	str	r0, [sp, #36]	; 0x24
   1e960:	ldr	r0, [sp, #36]	; 0x24
   1e964:	tst	r0, #1
   1e968:	beq	1ea10 <__assert_fail@plt+0xd50c>
   1e96c:	ldr	r0, [fp, #8]
   1e970:	and	r0, r0, #2097152	; 0x200000
   1e974:	cmp	r0, #0
   1e978:	movw	r0, #0
   1e97c:	movne	r0, #1
   1e980:	mvn	r1, #0
   1e984:	eor	r0, r0, r1
   1e988:	tst	r0, #1
   1e98c:	beq	1e9cc <__assert_fail@plt+0xd4c8>
   1e990:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e994:	ldr	r0, [r0, #4]
   1e998:	and	r0, r0, #255	; 0xff
   1e99c:	cmp	r0, #2
   1e9a0:	bne	1e9b4 <__assert_fail@plt+0xd4b0>
   1e9a4:	ldr	r0, [fp, #12]
   1e9a8:	movw	r1, #9
   1e9ac:	str	r1, [r0]
   1e9b0:	b	1e9c0 <__assert_fail@plt+0xd4bc>
   1e9b4:	ldr	r0, [fp, #12]
   1e9b8:	movw	r1, #10
   1e9bc:	str	r1, [r0]
   1e9c0:	movw	r0, #0
   1e9c4:	str	r0, [fp, #-4]
   1e9c8:	b	1ee24 <__assert_fail@plt+0xd920>
   1e9cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e9d0:	ldr	r1, [fp, #-12]
   1e9d4:	str	r0, [r1, #40]	; 0x28
   1e9d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1e9e0:	str	r1, [r0]
   1e9e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1e9e8:	str	r1, [r0, #4]
   1e9ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9f0:	ldr	r1, [r0, #4]
   1e9f4:	mvn	r2, #255	; 0xff
   1e9f8:	and	r1, r1, r2
   1e9fc:	orr	r1, r1, #1
   1ea00:	str	r1, [r0, #4]
   1ea04:	ldr	r0, [fp, #-8]
   1ea08:	str	r0, [fp, #-4]
   1ea0c:	b	1ee24 <__assert_fail@plt+0xd920>
   1ea10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ea14:	cmn	r0, #1
   1ea18:	beq	1ea34 <__assert_fail@plt+0xd530>
   1ea1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ea20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ea24:	cmp	r0, r1
   1ea28:	movw	r0, #1
   1ea2c:	str	r0, [sp, #32]
   1ea30:	bgt	1ea50 <__assert_fail@plt+0xd54c>
   1ea34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ea38:	ldr	r0, [r0, #4]
   1ea3c:	and	r0, r0, #255	; 0xff
   1ea40:	cmp	r0, #24
   1ea44:	movw	r0, #0
   1ea48:	movne	r0, #1
   1ea4c:	str	r0, [sp, #32]
   1ea50:	ldr	r0, [sp, #32]
   1ea54:	tst	r0, #1
   1ea58:	beq	1ea74 <__assert_fail@plt+0xd570>
   1ea5c:	ldr	r0, [fp, #12]
   1ea60:	movw	r1, #10
   1ea64:	str	r1, [r0]
   1ea68:	movw	r0, #0
   1ea6c:	str	r0, [fp, #-4]
   1ea70:	b	1ee24 <__assert_fail@plt+0xd920>
   1ea74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ea78:	cmn	r0, #1
   1ea7c:	bne	1ea8c <__assert_fail@plt+0xd588>
   1ea80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ea84:	str	r0, [sp, #28]
   1ea88:	b	1ea94 <__assert_fail@plt+0xd590>
   1ea8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ea90:	str	r0, [sp, #28]
   1ea94:	ldr	r0, [sp, #28]
   1ea98:	movw	r1, #32767	; 0x7fff
   1ea9c:	cmp	r1, r0
   1eaa0:	bge	1eabc <__assert_fail@plt+0xd5b8>
   1eaa4:	ldr	r0, [fp, #12]
   1eaa8:	movw	r1, #15
   1eaac:	str	r1, [r0]
   1eab0:	movw	r0, #0
   1eab4:	str	r0, [fp, #-4]
   1eab8:	b	1ee24 <__assert_fail@plt+0xd920>
   1eabc:	b	1eb10 <__assert_fail@plt+0xd60c>
   1eac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eac4:	ldr	r0, [r0, #4]
   1eac8:	and	r0, r0, #255	; 0xff
   1eacc:	cmp	r0, #18
   1ead0:	movw	r0, #0
   1ead4:	moveq	r0, #1
   1ead8:	tst	r0, #1
   1eadc:	movw	r0, #1
   1eae0:	mov	r1, r0
   1eae4:	moveq	r1, #0
   1eae8:	str	r1, [fp, #-36]	; 0xffffffdc
   1eaec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eaf0:	ldr	r1, [r1, #4]
   1eaf4:	and	r1, r1, #255	; 0xff
   1eaf8:	cmp	r1, #19
   1eafc:	movw	r1, #0
   1eb00:	moveq	r1, #1
   1eb04:	tst	r1, #1
   1eb08:	mvneq	r0, #0
   1eb0c:	str	r0, [fp, #-40]	; 0xffffffd8
   1eb10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb14:	ldr	r1, [fp, #-12]
   1eb18:	ldr	r2, [fp, #8]
   1eb1c:	bl	1b370 <__assert_fail@plt+0x9e6c>
   1eb20:	ldr	r0, [fp, #-8]
   1eb24:	movw	r1, #0
   1eb28:	cmp	r0, r1
   1eb2c:	bne	1eb3c <__assert_fail@plt+0xd638>
   1eb30:	movw	r0, #0
   1eb34:	str	r0, [fp, #-4]
   1eb38:	b	1ee24 <__assert_fail@plt+0xd920>
   1eb3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb40:	cmp	r0, #0
   1eb44:	movw	r0, #0
   1eb48:	str	r0, [sp, #24]
   1eb4c:	bne	1eb64 <__assert_fail@plt+0xd660>
   1eb50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eb54:	cmp	r0, #0
   1eb58:	movw	r0, #0
   1eb5c:	moveq	r0, #1
   1eb60:	str	r0, [sp, #24]
   1eb64:	ldr	r0, [sp, #24]
   1eb68:	tst	r0, #1
   1eb6c:	beq	1eb94 <__assert_fail@plt+0xd690>
   1eb70:	ldr	r0, [fp, #-8]
   1eb74:	movw	r1, #52092	; 0xcb7c
   1eb78:	movt	r1, #1
   1eb7c:	movw	r2, #0
   1eb80:	bl	1ca0c <__assert_fail@plt+0xb508>
   1eb84:	movw	r1, #0
   1eb88:	str	r1, [fp, #-4]
   1eb8c:	str	r0, [sp, #20]
   1eb90:	b	1ee24 <__assert_fail@plt+0xd920>
   1eb94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb98:	cmp	r0, #0
   1eb9c:	ble	1ec88 <__assert_fail@plt+0xd784>
   1eba0:	ldr	r0, [fp, #-8]
   1eba4:	str	r0, [fp, #-24]	; 0xffffffe8
   1eba8:	movw	r0, #2
   1ebac:	str	r0, [fp, #-32]	; 0xffffffe0
   1ebb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ebb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ebb8:	cmp	r0, r1
   1ebbc:	bgt	1ec3c <__assert_fail@plt+0xd738>
   1ebc0:	ldr	r0, [fp, #-8]
   1ebc4:	ldr	r1, [fp, #-16]
   1ebc8:	bl	20c08 <__assert_fail@plt+0xf704>
   1ebcc:	str	r0, [fp, #-8]
   1ebd0:	ldr	r0, [fp, #-16]
   1ebd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebd8:	ldr	r2, [fp, #-8]
   1ebdc:	movw	r3, #16
   1ebe0:	bl	1b608 <__assert_fail@plt+0xa104>
   1ebe4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ebe8:	ldr	r0, [fp, #-8]
   1ebec:	movw	r1, #0
   1ebf0:	cmp	r0, r1
   1ebf4:	movw	r0, #1
   1ebf8:	str	r0, [sp, #16]
   1ebfc:	beq	1ec18 <__assert_fail@plt+0xd714>
   1ec00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec04:	movw	r1, #0
   1ec08:	cmp	r0, r1
   1ec0c:	movw	r0, #0
   1ec10:	moveq	r0, #1
   1ec14:	str	r0, [sp, #16]
   1ec18:	ldr	r0, [sp, #16]
   1ec1c:	tst	r0, #1
   1ec20:	beq	1ec28 <__assert_fail@plt+0xd724>
   1ec24:	b	1ee10 <__assert_fail@plt+0xd90c>
   1ec28:	b	1ec2c <__assert_fail@plt+0xd728>
   1ec2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ec30:	add	r0, r0, #1
   1ec34:	str	r0, [fp, #-32]	; 0xffffffe0
   1ec38:	b	1ebb0 <__assert_fail@plt+0xd6ac>
   1ec3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ec40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ec44:	cmp	r0, r1
   1ec48:	bne	1ec58 <__assert_fail@plt+0xd754>
   1ec4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec50:	str	r0, [fp, #-4]
   1ec54:	b	1ee24 <__assert_fail@plt+0xd920>
   1ec58:	ldr	r0, [fp, #-8]
   1ec5c:	ldr	r1, [fp, #-16]
   1ec60:	bl	20c08 <__assert_fail@plt+0xf704>
   1ec64:	str	r0, [fp, #-8]
   1ec68:	ldr	r0, [fp, #-8]
   1ec6c:	movw	r1, #0
   1ec70:	cmp	r0, r1
   1ec74:	bne	1ec7c <__assert_fail@plt+0xd778>
   1ec78:	b	1ee10 <__assert_fail@plt+0xd90c>
   1ec7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec80:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec84:	b	1ec90 <__assert_fail@plt+0xd78c>
   1ec88:	movw	r0, #0
   1ec8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec90:	ldr	r0, [fp, #-8]
   1ec94:	ldr	r0, [r0, #24]
   1ec98:	and	r0, r0, #255	; 0xff
   1ec9c:	cmp	r0, #17
   1eca0:	bne	1ecc8 <__assert_fail@plt+0xd7c4>
   1eca4:	ldr	r0, [fp, #-8]
   1eca8:	ldr	r0, [r0, #20]
   1ecac:	str	r0, [sp, #56]	; 0x38
   1ecb0:	ldr	r0, [fp, #-8]
   1ecb4:	ldr	r2, [sp, #56]	; 0x38
   1ecb8:	movw	r1, #3480	; 0xd98
   1ecbc:	movt	r1, #2
   1ecc0:	bl	1ca0c <__assert_fail@plt+0xb508>
   1ecc4:	str	r0, [sp, #12]
   1ecc8:	ldr	r0, [fp, #-16]
   1eccc:	ldr	r1, [fp, #-8]
   1ecd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ecd4:	cmn	r2, #1
   1ecd8:	movw	r2, #0
   1ecdc:	moveq	r2, #1
   1ece0:	tst	r2, #1
   1ece4:	movw	r2, #11
   1ece8:	moveq	r2, #10
   1ecec:	movw	r3, #0
   1ecf0:	str	r2, [sp, #8]
   1ecf4:	mov	r2, r3
   1ecf8:	ldr	r3, [sp, #8]
   1ecfc:	bl	1b608 <__assert_fail@plt+0xa104>
   1ed00:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed08:	movw	r1, #0
   1ed0c:	cmp	r0, r1
   1ed10:	bne	1ed18 <__assert_fail@plt+0xd814>
   1ed14:	b	1ee10 <__assert_fail@plt+0xd90c>
   1ed18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ed1c:	add	r0, r0, #2
   1ed20:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ed2c:	cmp	r0, r1
   1ed30:	bgt	1eddc <__assert_fail@plt+0xd8d8>
   1ed34:	ldr	r0, [fp, #-8]
   1ed38:	ldr	r1, [fp, #-16]
   1ed3c:	bl	20c08 <__assert_fail@plt+0xf704>
   1ed40:	str	r0, [fp, #-8]
   1ed44:	ldr	r0, [fp, #-16]
   1ed48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed4c:	ldr	r2, [fp, #-8]
   1ed50:	movw	r3, #16
   1ed54:	bl	1b608 <__assert_fail@plt+0xa104>
   1ed58:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed5c:	ldr	r0, [fp, #-8]
   1ed60:	movw	r1, #0
   1ed64:	cmp	r0, r1
   1ed68:	movw	r0, #1
   1ed6c:	str	r0, [sp, #4]
   1ed70:	beq	1ed8c <__assert_fail@plt+0xd888>
   1ed74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed78:	movw	r1, #0
   1ed7c:	cmp	r0, r1
   1ed80:	movw	r0, #0
   1ed84:	moveq	r0, #1
   1ed88:	str	r0, [sp, #4]
   1ed8c:	ldr	r0, [sp, #4]
   1ed90:	tst	r0, #1
   1ed94:	beq	1ed9c <__assert_fail@plt+0xd898>
   1ed98:	b	1ee10 <__assert_fail@plt+0xd90c>
   1ed9c:	ldr	r0, [fp, #-16]
   1eda0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eda4:	movw	r2, #0
   1eda8:	movw	r3, #10
   1edac:	bl	1b608 <__assert_fail@plt+0xa104>
   1edb0:	str	r0, [fp, #-24]	; 0xffffffe8
   1edb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edb8:	movw	r1, #0
   1edbc:	cmp	r0, r1
   1edc0:	bne	1edc8 <__assert_fail@plt+0xd8c4>
   1edc4:	b	1ee10 <__assert_fail@plt+0xd90c>
   1edc8:	b	1edcc <__assert_fail@plt+0xd8c8>
   1edcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1edd0:	add	r0, r0, #1
   1edd4:	str	r0, [fp, #-32]	; 0xffffffe0
   1edd8:	b	1ed24 <__assert_fail@plt+0xd820>
   1eddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ede0:	movw	r1, #0
   1ede4:	cmp	r0, r1
   1ede8:	beq	1ee04 <__assert_fail@plt+0xd900>
   1edec:	ldr	r0, [fp, #-16]
   1edf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1edf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edf8:	movw	r3, #16
   1edfc:	bl	1b608 <__assert_fail@plt+0xa104>
   1ee00:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee08:	str	r0, [fp, #-4]
   1ee0c:	b	1ee24 <__assert_fail@plt+0xd920>
   1ee10:	ldr	r0, [fp, #12]
   1ee14:	movw	r1, #12
   1ee18:	str	r1, [r0]
   1ee1c:	movw	r0, #0
   1ee20:	str	r0, [fp, #-4]
   1ee24:	ldr	r0, [fp, #-4]
   1ee28:	mov	sp, fp
   1ee2c:	pop	{fp, pc}
   1ee30:	sub	sp, sp, #32
   1ee34:	str	r0, [sp, #24]
   1ee38:	str	r1, [sp, #20]
   1ee3c:	str	r2, [sp, #16]
   1ee40:	ldr	r0, [sp, #20]
   1ee44:	ldr	r0, [r0, #56]	; 0x38
   1ee48:	ldr	r1, [sp, #20]
   1ee4c:	ldr	r1, [r1, #40]	; 0x28
   1ee50:	cmp	r0, r1
   1ee54:	bgt	1ee7c <__assert_fail@plt+0xd978>
   1ee58:	ldr	r0, [sp, #24]
   1ee5c:	ldr	r1, [r0, #4]
   1ee60:	mvn	r2, #255	; 0xff
   1ee64:	and	r1, r1, r2
   1ee68:	orr	r1, r1, #2
   1ee6c:	str	r1, [r0, #4]
   1ee70:	movw	r0, #0
   1ee74:	str	r0, [sp, #28]
   1ee78:	b	1f194 <__assert_fail@plt+0xdc90>
   1ee7c:	ldr	r0, [sp, #20]
   1ee80:	ldr	r0, [r0, #4]
   1ee84:	ldr	r1, [sp, #20]
   1ee88:	ldr	r1, [r1, #40]	; 0x28
   1ee8c:	add	r1, r1, #0
   1ee90:	add	r0, r0, r1
   1ee94:	ldrb	r0, [r0]
   1ee98:	strb	r0, [sp, #15]
   1ee9c:	ldrb	r0, [sp, #15]
   1eea0:	ldr	r1, [sp, #24]
   1eea4:	strb	r0, [r1]
   1eea8:	ldr	r0, [sp, #20]
   1eeac:	ldr	r0, [r0, #80]	; 0x50
   1eeb0:	cmp	r0, #1
   1eeb4:	ble	1ef10 <__assert_fail@plt+0xda0c>
   1eeb8:	ldr	r0, [sp, #20]
   1eebc:	ldr	r0, [r0, #40]	; 0x28
   1eec0:	ldr	r1, [sp, #20]
   1eec4:	ldr	r1, [r1, #28]
   1eec8:	cmp	r0, r1
   1eecc:	beq	1ef10 <__assert_fail@plt+0xda0c>
   1eed0:	ldr	r0, [sp, #20]
   1eed4:	ldr	r1, [r0, #8]
   1eed8:	ldr	r0, [r0, #40]	; 0x28
   1eedc:	add	r0, r1, r0, lsl #2
   1eee0:	ldr	r0, [r0]
   1eee4:	cmn	r0, #1
   1eee8:	bne	1ef10 <__assert_fail@plt+0xda0c>
   1eeec:	ldr	r0, [sp, #24]
   1eef0:	ldr	r1, [r0, #4]
   1eef4:	mvn	r2, #255	; 0xff
   1eef8:	and	r1, r1, r2
   1eefc:	orr	r1, r1, #1
   1ef00:	str	r1, [r0, #4]
   1ef04:	movw	r0, #1
   1ef08:	str	r0, [sp, #28]
   1ef0c:	b	1f194 <__assert_fail@plt+0xdc90>
   1ef10:	ldrb	r0, [sp, #15]
   1ef14:	cmp	r0, #92	; 0x5c
   1ef18:	bne	1efa8 <__assert_fail@plt+0xdaa4>
   1ef1c:	ldr	r0, [sp, #16]
   1ef20:	and	r0, r0, #1
   1ef24:	cmp	r0, #0
   1ef28:	beq	1efa8 <__assert_fail@plt+0xdaa4>
   1ef2c:	ldr	r0, [sp, #20]
   1ef30:	ldr	r0, [r0, #40]	; 0x28
   1ef34:	add	r0, r0, #1
   1ef38:	ldr	r1, [sp, #20]
   1ef3c:	ldr	r1, [r1, #48]	; 0x30
   1ef40:	cmp	r0, r1
   1ef44:	bge	1efa8 <__assert_fail@plt+0xdaa4>
   1ef48:	ldr	r0, [sp, #20]
   1ef4c:	ldr	r1, [r0, #40]	; 0x28
   1ef50:	add	r1, r1, #1
   1ef54:	str	r1, [r0, #40]	; 0x28
   1ef58:	ldr	r0, [sp, #20]
   1ef5c:	ldr	r0, [r0, #4]
   1ef60:	ldr	r1, [sp, #20]
   1ef64:	ldr	r1, [r1, #40]	; 0x28
   1ef68:	add	r1, r1, #0
   1ef6c:	add	r0, r0, r1
   1ef70:	ldrb	r0, [r0]
   1ef74:	strb	r0, [sp, #14]
   1ef78:	ldrb	r0, [sp, #14]
   1ef7c:	ldr	r1, [sp, #24]
   1ef80:	strb	r0, [r1]
   1ef84:	ldr	r0, [sp, #24]
   1ef88:	ldr	r1, [r0, #4]
   1ef8c:	mvn	r2, #255	; 0xff
   1ef90:	and	r1, r1, r2
   1ef94:	orr	r1, r1, #1
   1ef98:	str	r1, [r0, #4]
   1ef9c:	movw	r0, #1
   1efa0:	str	r0, [sp, #28]
   1efa4:	b	1f194 <__assert_fail@plt+0xdc90>
   1efa8:	ldrb	r0, [sp, #15]
   1efac:	cmp	r0, #91	; 0x5b
   1efb0:	bne	1f0e8 <__assert_fail@plt+0xdbe4>
   1efb4:	ldr	r0, [sp, #20]
   1efb8:	ldr	r0, [r0, #40]	; 0x28
   1efbc:	add	r0, r0, #1
   1efc0:	ldr	r1, [sp, #20]
   1efc4:	ldr	r1, [r1, #48]	; 0x30
   1efc8:	cmp	r0, r1
   1efcc:	bge	1eff4 <__assert_fail@plt+0xdaf0>
   1efd0:	ldr	r0, [sp, #20]
   1efd4:	ldr	r0, [r0, #4]
   1efd8:	ldr	r1, [sp, #20]
   1efdc:	ldr	r1, [r1, #40]	; 0x28
   1efe0:	add	r1, r1, #1
   1efe4:	add	r0, r0, r1
   1efe8:	ldrb	r0, [r0]
   1efec:	strb	r0, [sp, #13]
   1eff0:	b	1effc <__assert_fail@plt+0xdaf8>
   1eff4:	movw	r0, #0
   1eff8:	strb	r0, [sp, #13]
   1effc:	ldrb	r0, [sp, #13]
   1f000:	ldr	r1, [sp, #24]
   1f004:	strb	r0, [r1]
   1f008:	mov	r0, #2
   1f00c:	str	r0, [sp, #8]
   1f010:	ldrb	r0, [sp, #13]
   1f014:	mov	r1, r0
   1f018:	cmp	r0, #46	; 0x2e
   1f01c:	str	r1, [sp, #4]
   1f020:	beq	1f048 <__assert_fail@plt+0xdb44>
   1f024:	b	1f028 <__assert_fail@plt+0xdb24>
   1f028:	ldr	r0, [sp, #4]
   1f02c:	cmp	r0, #58	; 0x3a
   1f030:	beq	1f080 <__assert_fail@plt+0xdb7c>
   1f034:	b	1f038 <__assert_fail@plt+0xdb34>
   1f038:	ldr	r0, [sp, #4]
   1f03c:	cmp	r0, #61	; 0x3d
   1f040:	beq	1f064 <__assert_fail@plt+0xdb60>
   1f044:	b	1f0b0 <__assert_fail@plt+0xdbac>
   1f048:	ldr	r0, [sp, #24]
   1f04c:	ldr	r1, [r0, #4]
   1f050:	mvn	r2, #255	; 0xff
   1f054:	and	r1, r1, r2
   1f058:	orr	r1, r1, #26
   1f05c:	str	r1, [r0, #4]
   1f060:	b	1f0dc <__assert_fail@plt+0xdbd8>
   1f064:	ldr	r0, [sp, #24]
   1f068:	ldr	r1, [r0, #4]
   1f06c:	mvn	r2, #255	; 0xff
   1f070:	and	r1, r1, r2
   1f074:	orr	r1, r1, #28
   1f078:	str	r1, [r0, #4]
   1f07c:	b	1f0dc <__assert_fail@plt+0xdbd8>
   1f080:	ldr	r0, [sp, #16]
   1f084:	and	r0, r0, #4
   1f088:	cmp	r0, #0
   1f08c:	beq	1f0ac <__assert_fail@plt+0xdba8>
   1f090:	ldr	r0, [sp, #24]
   1f094:	ldr	r1, [r0, #4]
   1f098:	mvn	r2, #255	; 0xff
   1f09c:	and	r1, r1, r2
   1f0a0:	orr	r1, r1, #30
   1f0a4:	str	r1, [r0, #4]
   1f0a8:	b	1f0dc <__assert_fail@plt+0xdbd8>
   1f0ac:	b	1f0b0 <__assert_fail@plt+0xdbac>
   1f0b0:	ldr	r0, [sp, #24]
   1f0b4:	ldr	r1, [r0, #4]
   1f0b8:	mvn	r2, #255	; 0xff
   1f0bc:	and	r1, r1, r2
   1f0c0:	orr	r1, r1, #1
   1f0c4:	str	r1, [r0, #4]
   1f0c8:	ldrb	r0, [sp, #15]
   1f0cc:	ldr	r1, [sp, #24]
   1f0d0:	strb	r0, [r1]
   1f0d4:	movw	r0, #1
   1f0d8:	str	r0, [sp, #8]
   1f0dc:	ldr	r0, [sp, #8]
   1f0e0:	str	r0, [sp, #28]
   1f0e4:	b	1f194 <__assert_fail@plt+0xdc90>
   1f0e8:	ldrb	r0, [sp, #15]
   1f0ec:	mov	r1, r0
   1f0f0:	cmp	r0, #45	; 0x2d
   1f0f4:	str	r1, [sp]
   1f0f8:	beq	1f120 <__assert_fail@plt+0xdc1c>
   1f0fc:	b	1f100 <__assert_fail@plt+0xdbfc>
   1f100:	ldr	r0, [sp]
   1f104:	cmp	r0, #93	; 0x5d
   1f108:	beq	1f13c <__assert_fail@plt+0xdc38>
   1f10c:	b	1f110 <__assert_fail@plt+0xdc0c>
   1f110:	ldr	r0, [sp]
   1f114:	cmp	r0, #94	; 0x5e
   1f118:	beq	1f158 <__assert_fail@plt+0xdc54>
   1f11c:	b	1f174 <__assert_fail@plt+0xdc70>
   1f120:	ldr	r0, [sp, #24]
   1f124:	ldr	r1, [r0, #4]
   1f128:	mvn	r2, #255	; 0xff
   1f12c:	and	r1, r1, r2
   1f130:	orr	r1, r1, #22
   1f134:	str	r1, [r0, #4]
   1f138:	b	1f18c <__assert_fail@plt+0xdc88>
   1f13c:	ldr	r0, [sp, #24]
   1f140:	ldr	r1, [r0, #4]
   1f144:	mvn	r2, #255	; 0xff
   1f148:	and	r1, r1, r2
   1f14c:	orr	r1, r1, #21
   1f150:	str	r1, [r0, #4]
   1f154:	b	1f18c <__assert_fail@plt+0xdc88>
   1f158:	ldr	r0, [sp, #24]
   1f15c:	ldr	r1, [r0, #4]
   1f160:	mvn	r2, #255	; 0xff
   1f164:	and	r1, r1, r2
   1f168:	orr	r1, r1, #25
   1f16c:	str	r1, [r0, #4]
   1f170:	b	1f18c <__assert_fail@plt+0xdc88>
   1f174:	ldr	r0, [sp, #24]
   1f178:	ldr	r1, [r0, #4]
   1f17c:	mvn	r2, #255	; 0xff
   1f180:	and	r1, r1, r2
   1f184:	orr	r1, r1, #1
   1f188:	str	r1, [r0, #4]
   1f18c:	movw	r0, #1
   1f190:	str	r0, [sp, #28]
   1f194:	ldr	r0, [sp, #28]
   1f198:	add	sp, sp, #32
   1f19c:	bx	lr
   1f1a0:	sub	sp, sp, #8
   1f1a4:	str	r0, [sp, #4]
   1f1a8:	str	r1, [sp]
   1f1ac:	ldr	r0, [sp]
   1f1b0:	asr	r1, r0, #31
   1f1b4:	add	r1, r0, r1, lsr #27
   1f1b8:	bic	r2, r1, #31
   1f1bc:	sub	r0, r0, r2
   1f1c0:	mov	r2, #1
   1f1c4:	lsl	r0, r2, r0
   1f1c8:	ldr	r2, [sp, #4]
   1f1cc:	asr	r1, r1, #5
   1f1d0:	add	r1, r2, r1, lsl #2
   1f1d4:	ldr	r2, [r1]
   1f1d8:	orr	r0, r2, r0
   1f1dc:	str	r0, [r1]
   1f1e0:	add	sp, sp, #8
   1f1e4:	bx	lr
   1f1e8:	push	{r4, sl, fp, lr}
   1f1ec:	add	fp, sp, #8
   1f1f0:	sub	sp, sp, #48	; 0x30
   1f1f4:	ldr	ip, [fp, #16]
   1f1f8:	ldr	lr, [fp, #12]
   1f1fc:	ldr	r4, [fp, #8]
   1f200:	str	r0, [fp, #-16]
   1f204:	str	r1, [fp, #-20]	; 0xffffffec
   1f208:	str	r2, [fp, #-24]	; 0xffffffe8
   1f20c:	str	r3, [sp, #28]
   1f210:	and	r0, ip, #1
   1f214:	strb	r0, [sp, #27]
   1f218:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f21c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f220:	ldr	r1, [r1, #40]	; 0x28
   1f224:	str	r4, [sp, #8]
   1f228:	str	lr, [sp, #4]
   1f22c:	bl	2063c <__assert_fail@plt+0xf138>
   1f230:	str	r0, [sp, #20]
   1f234:	ldr	r0, [sp, #20]
   1f238:	cmp	r0, #1
   1f23c:	ble	1f284 <__assert_fail@plt+0xdd80>
   1f240:	ldr	r0, [fp, #-16]
   1f244:	movw	r1, #1
   1f248:	str	r1, [r0]
   1f24c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f250:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f254:	ldr	r1, [r1, #40]	; 0x28
   1f258:	bl	1c71c <__assert_fail@plt+0xb218>
   1f25c:	ldr	r1, [fp, #-16]
   1f260:	str	r0, [r1, #4]
   1f264:	ldr	r0, [sp, #20]
   1f268:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f26c:	ldr	lr, [r1, #40]	; 0x28
   1f270:	add	r0, lr, r0
   1f274:	str	r0, [r1, #40]	; 0x28
   1f278:	movw	r0, #0
   1f27c:	str	r0, [fp, #-12]
   1f280:	b	1f360 <__assert_fail@plt+0xde5c>
   1f284:	ldr	r0, [sp, #28]
   1f288:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f28c:	ldr	r2, [r1, #40]	; 0x28
   1f290:	add	r0, r2, r0
   1f294:	str	r0, [r1, #40]	; 0x28
   1f298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f29c:	ldr	r0, [r0, #4]
   1f2a0:	and	r0, r0, #255	; 0xff
   1f2a4:	cmp	r0, #26
   1f2a8:	beq	1f2d4 <__assert_fail@plt+0xddd0>
   1f2ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2b0:	ldr	r0, [r0, #4]
   1f2b4:	and	r0, r0, #255	; 0xff
   1f2b8:	cmp	r0, #30
   1f2bc:	beq	1f2d4 <__assert_fail@plt+0xddd0>
   1f2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2c4:	ldr	r0, [r0, #4]
   1f2c8:	and	r0, r0, #255	; 0xff
   1f2cc:	cmp	r0, #28
   1f2d0:	bne	1f2ec <__assert_fail@plt+0xdde8>
   1f2d4:	ldr	r0, [fp, #-16]
   1f2d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f2dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f2e0:	bl	206d8 <__assert_fail@plt+0xf1d4>
   1f2e4:	str	r0, [fp, #-12]
   1f2e8:	b	1f360 <__assert_fail@plt+0xde5c>
   1f2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2f0:	ldr	r0, [r0, #4]
   1f2f4:	and	r0, r0, #255	; 0xff
   1f2f8:	cmp	r0, #22
   1f2fc:	bne	1f340 <__assert_fail@plt+0xde3c>
   1f300:	ldrb	r0, [sp, #27]
   1f304:	tst	r0, #1
   1f308:	bne	1f340 <__assert_fail@plt+0xde3c>
   1f30c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f310:	ldr	r2, [fp, #12]
   1f314:	add	r0, sp, #12
   1f318:	bl	1ee30 <__assert_fail@plt+0xd92c>
   1f31c:	ldr	r1, [sp, #16]
   1f320:	and	r1, r1, #255	; 0xff
   1f324:	cmp	r1, #21
   1f328:	str	r0, [sp]
   1f32c:	beq	1f33c <__assert_fail@plt+0xde38>
   1f330:	movw	r0, #11
   1f334:	str	r0, [fp, #-12]
   1f338:	b	1f360 <__assert_fail@plt+0xde5c>
   1f33c:	b	1f340 <__assert_fail@plt+0xde3c>
   1f340:	ldr	r0, [fp, #-16]
   1f344:	movw	r1, #0
   1f348:	str	r1, [r0]
   1f34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f350:	ldrb	r0, [r0]
   1f354:	ldr	r2, [fp, #-16]
   1f358:	strb	r0, [r2, #4]
   1f35c:	str	r1, [fp, #-12]
   1f360:	ldr	r0, [fp, #-12]
   1f364:	sub	sp, fp, #8
   1f368:	pop	{r4, sl, fp, pc}
   1f36c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f370:	add	fp, sp, #28
   1f374:	sub	sp, sp, #132	; 0x84
   1f378:	ldr	ip, [fp, #40]	; 0x28
   1f37c:	ldr	lr, [fp, #36]	; 0x24
   1f380:	ldr	r4, [fp, #32]
   1f384:	ldr	r5, [fp, #28]
   1f388:	ldr	r6, [fp, #24]
   1f38c:	ldr	r7, [fp, #20]
   1f390:	ldr	r8, [fp, #16]
   1f394:	ldr	r9, [fp, #12]
   1f398:	ldr	sl, [fp, #8]
   1f39c:	str	r0, [fp, #-36]	; 0xffffffdc
   1f3a0:	str	r1, [fp, #-40]	; 0xffffffd8
   1f3a4:	str	r2, [fp, #-44]	; 0xffffffd4
   1f3a8:	str	r3, [fp, #-48]	; 0xffffffd0
   1f3ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f3b0:	ldr	r0, [r0]
   1f3b4:	cmp	r0, #2
   1f3b8:	movw	r0, #1
   1f3bc:	str	sl, [sp, #76]	; 0x4c
   1f3c0:	str	r7, [sp, #72]	; 0x48
   1f3c4:	str	r8, [sp, #68]	; 0x44
   1f3c8:	str	r9, [sp, #64]	; 0x40
   1f3cc:	str	ip, [sp, #60]	; 0x3c
   1f3d0:	str	lr, [sp, #56]	; 0x38
   1f3d4:	str	r4, [sp, #52]	; 0x34
   1f3d8:	str	r5, [sp, #48]	; 0x30
   1f3dc:	str	r6, [sp, #44]	; 0x2c
   1f3e0:	str	r0, [sp, #40]	; 0x28
   1f3e4:	beq	1f430 <__assert_fail@plt+0xdf2c>
   1f3e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f3ec:	ldr	r0, [r0]
   1f3f0:	cmp	r0, #4
   1f3f4:	movw	r0, #1
   1f3f8:	str	r0, [sp, #40]	; 0x28
   1f3fc:	beq	1f430 <__assert_fail@plt+0xdf2c>
   1f400:	ldr	r0, [fp, #8]
   1f404:	ldr	r0, [r0]
   1f408:	cmp	r0, #2
   1f40c:	movw	r0, #1
   1f410:	str	r0, [sp, #40]	; 0x28
   1f414:	beq	1f430 <__assert_fail@plt+0xdf2c>
   1f418:	ldr	r0, [fp, #8]
   1f41c:	ldr	r0, [r0]
   1f420:	cmp	r0, #4
   1f424:	movw	r0, #0
   1f428:	moveq	r0, #1
   1f42c:	str	r0, [sp, #40]	; 0x28
   1f430:	ldr	r0, [sp, #40]	; 0x28
   1f434:	tst	r0, #1
   1f438:	beq	1f448 <__assert_fail@plt+0xdf44>
   1f43c:	movw	r0, #11
   1f440:	str	r0, [fp, #-32]	; 0xffffffe0
   1f444:	b	1f808 <__assert_fail@plt+0xe304>
   1f448:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f44c:	ldr	r0, [r0]
   1f450:	cmp	r0, #3
   1f454:	bne	1f474 <__assert_fail@plt+0xdf70>
   1f458:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f45c:	ldr	r0, [r0, #4]
   1f460:	bl	113d8 <strlen@plt>
   1f464:	cmp	r0, #1
   1f468:	movw	r0, #1
   1f46c:	str	r0, [sp, #36]	; 0x24
   1f470:	bhi	1f4b0 <__assert_fail@plt+0xdfac>
   1f474:	ldr	r0, [fp, #8]
   1f478:	ldr	r0, [r0]
   1f47c:	cmp	r0, #3
   1f480:	movw	r0, #0
   1f484:	str	r0, [sp, #32]
   1f488:	bne	1f4a8 <__assert_fail@plt+0xdfa4>
   1f48c:	ldr	r0, [fp, #8]
   1f490:	ldr	r0, [r0, #4]
   1f494:	bl	113d8 <strlen@plt>
   1f498:	cmp	r0, #1
   1f49c:	movw	r0, #0
   1f4a0:	movhi	r0, #1
   1f4a4:	str	r0, [sp, #32]
   1f4a8:	ldr	r0, [sp, #32]
   1f4ac:	str	r0, [sp, #36]	; 0x24
   1f4b0:	ldr	r0, [sp, #36]	; 0x24
   1f4b4:	tst	r0, #1
   1f4b8:	beq	1f4c8 <__assert_fail@plt+0xdfc4>
   1f4bc:	movw	r0, #3
   1f4c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1f4c4:	b	1f808 <__assert_fail@plt+0xe304>
   1f4c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f4cc:	ldr	r0, [r0]
   1f4d0:	cmp	r0, #0
   1f4d4:	bne	1f4e8 <__assert_fail@plt+0xdfe4>
   1f4d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f4dc:	ldrb	r0, [r0, #4]
   1f4e0:	str	r0, [sp, #28]
   1f4e4:	b	1f520 <__assert_fail@plt+0xe01c>
   1f4e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f4ec:	ldr	r0, [r0]
   1f4f0:	cmp	r0, #3
   1f4f4:	bne	1f50c <__assert_fail@plt+0xe008>
   1f4f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f4fc:	ldr	r0, [r0, #4]
   1f500:	ldrb	r0, [r0]
   1f504:	str	r0, [sp, #24]
   1f508:	b	1f518 <__assert_fail@plt+0xe014>
   1f50c:	movw	r0, #0
   1f510:	str	r0, [sp, #24]
   1f514:	b	1f518 <__assert_fail@plt+0xe014>
   1f518:	ldr	r0, [sp, #24]
   1f51c:	str	r0, [sp, #28]
   1f520:	ldr	r0, [sp, #28]
   1f524:	str	r0, [fp, #-52]	; 0xffffffcc
   1f528:	ldr	r0, [fp, #8]
   1f52c:	ldr	r0, [r0]
   1f530:	cmp	r0, #0
   1f534:	bne	1f548 <__assert_fail@plt+0xe044>
   1f538:	ldr	r0, [fp, #8]
   1f53c:	ldrb	r0, [r0, #4]
   1f540:	str	r0, [sp, #20]
   1f544:	b	1f580 <__assert_fail@plt+0xe07c>
   1f548:	ldr	r0, [fp, #8]
   1f54c:	ldr	r0, [r0]
   1f550:	cmp	r0, #3
   1f554:	bne	1f56c <__assert_fail@plt+0xe068>
   1f558:	ldr	r0, [fp, #8]
   1f55c:	ldr	r0, [r0, #4]
   1f560:	ldrb	r0, [r0]
   1f564:	str	r0, [sp, #16]
   1f568:	b	1f578 <__assert_fail@plt+0xe074>
   1f56c:	movw	r0, #0
   1f570:	str	r0, [sp, #16]
   1f574:	b	1f578 <__assert_fail@plt+0xe074>
   1f578:	ldr	r0, [sp, #16]
   1f57c:	str	r0, [sp, #20]
   1f580:	ldr	r0, [sp, #20]
   1f584:	str	r0, [fp, #-56]	; 0xffffffc8
   1f588:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f58c:	ldr	r0, [r0]
   1f590:	cmp	r0, #0
   1f594:	beq	1f5a8 <__assert_fail@plt+0xe0a4>
   1f598:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f59c:	ldr	r0, [r0]
   1f5a0:	cmp	r0, #3
   1f5a4:	bne	1f5c0 <__assert_fail@plt+0xe0bc>
   1f5a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f5ac:	ldr	r1, [fp, #12]
   1f5b0:	and	r0, r0, #255	; 0xff
   1f5b4:	bl	20a60 <__assert_fail@plt+0xf55c>
   1f5b8:	str	r0, [sp, #12]
   1f5bc:	b	1f5cc <__assert_fail@plt+0xe0c8>
   1f5c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f5c4:	ldr	r0, [r0, #4]
   1f5c8:	str	r0, [sp, #12]
   1f5cc:	ldr	r0, [sp, #12]
   1f5d0:	str	r0, [fp, #-60]	; 0xffffffc4
   1f5d4:	ldr	r0, [fp, #8]
   1f5d8:	ldr	r0, [r0]
   1f5dc:	cmp	r0, #0
   1f5e0:	beq	1f5f4 <__assert_fail@plt+0xe0f0>
   1f5e4:	ldr	r0, [fp, #8]
   1f5e8:	ldr	r0, [r0]
   1f5ec:	cmp	r0, #3
   1f5f0:	bne	1f60c <__assert_fail@plt+0xe108>
   1f5f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f5f8:	ldr	r1, [fp, #12]
   1f5fc:	and	r0, r0, #255	; 0xff
   1f600:	bl	20a60 <__assert_fail@plt+0xf55c>
   1f604:	str	r0, [sp, #8]
   1f608:	b	1f618 <__assert_fail@plt+0xe114>
   1f60c:	ldr	r0, [fp, #8]
   1f610:	ldr	r0, [r0, #4]
   1f614:	str	r0, [sp, #8]
   1f618:	ldr	r0, [sp, #8]
   1f61c:	str	r0, [fp, #-64]	; 0xffffffc0
   1f620:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f624:	cmn	r0, #1
   1f628:	beq	1f638 <__assert_fail@plt+0xe134>
   1f62c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1f630:	cmn	r0, #1
   1f634:	bne	1f644 <__assert_fail@plt+0xe140>
   1f638:	movw	r0, #3
   1f63c:	str	r0, [fp, #-32]	; 0xffffffe0
   1f640:	b	1f808 <__assert_fail@plt+0xe304>
   1f644:	ldr	r0, [fp, #16]
   1f648:	and	r0, r0, #65536	; 0x10000
   1f64c:	cmp	r0, #0
   1f650:	movw	r0, #0
   1f654:	str	r0, [sp, #4]
   1f658:	beq	1f674 <__assert_fail@plt+0xe170>
   1f65c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f660:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1f664:	cmp	r0, r1
   1f668:	movw	r0, #0
   1f66c:	movhi	r0, #1
   1f670:	str	r0, [sp, #4]
   1f674:	ldr	r0, [sp, #4]
   1f678:	tst	r0, #1
   1f67c:	beq	1f68c <__assert_fail@plt+0xe188>
   1f680:	movw	r0, #11
   1f684:	str	r0, [fp, #-32]	; 0xffffffe0
   1f688:	b	1f808 <__assert_fail@plt+0xe304>
   1f68c:	b	1f690 <__assert_fail@plt+0xe18c>
   1f690:	ldr	r0, [fp, #12]
   1f694:	ldr	r0, [r0, #92]	; 0x5c
   1f698:	cmp	r0, #1
   1f69c:	ble	1f7ac <__assert_fail@plt+0xe2a8>
   1f6a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f6a4:	ldr	r0, [r0]
   1f6a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f6ac:	ldr	r1, [r1, #32]
   1f6b0:	cmp	r0, r1
   1f6b4:	bne	1f778 <__assert_fail@plt+0xe274>
   1f6b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f6bc:	ldr	r0, [r0, #32]
   1f6c0:	mov	r1, #1
   1f6c4:	orr	r0, r1, r0, lsl #1
   1f6c8:	str	r0, [fp, #-76]	; 0xffffffb4
   1f6cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f6d0:	ldr	r0, [r0, #4]
   1f6d4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1f6d8:	lsl	r1, r1, #2
   1f6dc:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1f6e0:	str	r0, [fp, #-68]	; 0xffffffbc
   1f6e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f6e8:	ldr	r0, [r0, #8]
   1f6ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1f6f0:	lsl	r1, r1, #2
   1f6f4:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1f6f8:	str	r0, [fp, #-72]	; 0xffffffb8
   1f6fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1f700:	movw	r1, #0
   1f704:	cmp	r0, r1
   1f708:	movw	r0, #1
   1f70c:	str	r0, [sp]
   1f710:	beq	1f72c <__assert_fail@plt+0xe228>
   1f714:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1f718:	movw	r1, #0
   1f71c:	cmp	r0, r1
   1f720:	movw	r0, #0
   1f724:	moveq	r0, #1
   1f728:	str	r0, [sp]
   1f72c:	ldr	r0, [sp]
   1f730:	tst	r0, #1
   1f734:	beq	1f754 <__assert_fail@plt+0xe250>
   1f738:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1f73c:	bl	35268 <__assert_fail@plt+0x23d64>
   1f740:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1f744:	bl	35268 <__assert_fail@plt+0x23d64>
   1f748:	movw	r0, #12
   1f74c:	str	r0, [fp, #-32]	; 0xffffffe0
   1f750:	b	1f808 <__assert_fail@plt+0xe304>
   1f754:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1f758:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f75c:	str	r0, [r1, #4]
   1f760:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1f764:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f768:	str	r0, [r1, #8]
   1f76c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1f770:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f774:	str	r0, [r1]
   1f778:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f77c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f780:	ldr	r2, [r1, #4]
   1f784:	ldr	r1, [r1, #32]
   1f788:	str	r0, [r2, r1, lsl #2]
   1f78c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1f790:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f794:	ldr	r2, [r1, #8]
   1f798:	ldr	r3, [r1, #32]
   1f79c:	add	ip, r3, #1
   1f7a0:	str	ip, [r1, #32]
   1f7a4:	add	r1, r2, r3, lsl #2
   1f7a8:	str	r0, [r1]
   1f7ac:	movw	r0, #0
   1f7b0:	str	r0, [sp, #80]	; 0x50
   1f7b4:	ldr	r0, [sp, #80]	; 0x50
   1f7b8:	cmp	r0, #256	; 0x100
   1f7bc:	bcs	1f800 <__assert_fail@plt+0xe2fc>
   1f7c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f7c4:	ldr	r1, [sp, #80]	; 0x50
   1f7c8:	cmp	r0, r1
   1f7cc:	bhi	1f7ec <__assert_fail@plt+0xe2e8>
   1f7d0:	ldr	r0, [sp, #80]	; 0x50
   1f7d4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1f7d8:	cmp	r0, r1
   1f7dc:	bhi	1f7ec <__assert_fail@plt+0xe2e8>
   1f7e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f7e4:	ldr	r1, [sp, #80]	; 0x50
   1f7e8:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1f7ec:	b	1f7f0 <__assert_fail@plt+0xe2ec>
   1f7f0:	ldr	r0, [sp, #80]	; 0x50
   1f7f4:	add	r0, r0, #1
   1f7f8:	str	r0, [sp, #80]	; 0x50
   1f7fc:	b	1f7b4 <__assert_fail@plt+0xe2b0>
   1f800:	movw	r0, #0
   1f804:	str	r0, [fp, #-32]	; 0xffffffe0
   1f808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f80c:	sub	sp, fp, #28
   1f810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f814:	push	{fp, lr}
   1f818:	mov	fp, sp
   1f81c:	sub	sp, sp, #24
   1f820:	str	r0, [fp, #-8]
   1f824:	str	r1, [sp, #12]
   1f828:	str	r2, [sp, #8]
   1f82c:	str	r3, [sp, #4]
   1f830:	ldr	r0, [sp, #4]
   1f834:	bl	113d8 <strlen@plt>
   1f838:	cmp	r0, #1
   1f83c:	beq	1f84c <__assert_fail@plt+0xe348>
   1f840:	movw	r0, #3
   1f844:	str	r0, [fp, #-4]
   1f848:	b	1f864 <__assert_fail@plt+0xe360>
   1f84c:	ldr	r0, [fp, #-8]
   1f850:	ldr	r1, [sp, #4]
   1f854:	ldrb	r1, [r1]
   1f858:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1f85c:	movw	r0, #0
   1f860:	str	r0, [fp, #-4]
   1f864:	ldr	r0, [fp, #-4]
   1f868:	mov	sp, fp
   1f86c:	pop	{fp, pc}
   1f870:	push	{r4, r5, fp, lr}
   1f874:	add	fp, sp, #8
   1f878:	sub	sp, sp, #40	; 0x28
   1f87c:	ldr	ip, [fp, #20]
   1f880:	ldr	lr, [fp, #16]
   1f884:	ldr	r4, [fp, #12]
   1f888:	ldr	r5, [fp, #8]
   1f88c:	str	r0, [fp, #-16]
   1f890:	str	r1, [fp, #-20]	; 0xffffffec
   1f894:	str	r2, [sp, #24]
   1f898:	str	r3, [sp, #20]
   1f89c:	ldr	r0, [sp, #20]
   1f8a0:	str	r5, [sp, #12]
   1f8a4:	str	ip, [sp, #8]
   1f8a8:	str	lr, [sp, #4]
   1f8ac:	str	r4, [sp]
   1f8b0:	bl	113d8 <strlen@plt>
   1f8b4:	str	r0, [sp, #16]
   1f8b8:	ldr	r0, [sp, #16]
   1f8bc:	cmp	r0, #1
   1f8c0:	beq	1f8d0 <__assert_fail@plt+0xe3cc>
   1f8c4:	movw	r0, #3
   1f8c8:	str	r0, [fp, #-12]
   1f8cc:	b	1f8e8 <__assert_fail@plt+0xe3e4>
   1f8d0:	ldr	r0, [fp, #-16]
   1f8d4:	ldr	r1, [sp, #20]
   1f8d8:	ldrb	r1, [r1]
   1f8dc:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1f8e0:	movw	r0, #0
   1f8e4:	str	r0, [fp, #-12]
   1f8e8:	ldr	r0, [fp, #-12]
   1f8ec:	sub	sp, fp, #8
   1f8f0:	pop	{r4, r5, fp, pc}
   1f8f4:	push	{fp, lr}
   1f8f8:	mov	fp, sp
   1f8fc:	sub	sp, sp, #48	; 0x30
   1f900:	ldr	ip, [fp, #12]
   1f904:	ldr	lr, [fp, #8]
   1f908:	str	r0, [fp, #-8]
   1f90c:	str	r1, [fp, #-12]
   1f910:	str	r2, [fp, #-16]
   1f914:	str	r3, [fp, #-20]	; 0xffffffec
   1f918:	ldr	r0, [fp, #8]
   1f91c:	str	r0, [sp, #20]
   1f920:	ldr	r0, [fp, #12]
   1f924:	and	r0, r0, #4194304	; 0x400000
   1f928:	cmp	r0, #0
   1f92c:	str	lr, [sp, #8]
   1f930:	str	ip, [sp, #4]
   1f934:	beq	1f974 <__assert_fail@plt+0xe470>
   1f938:	ldr	r0, [sp, #20]
   1f93c:	movw	r1, #33600	; 0x8340
   1f940:	movt	r1, #3
   1f944:	bl	11234 <strcmp@plt>
   1f948:	cmp	r0, #0
   1f94c:	beq	1f968 <__assert_fail@plt+0xe464>
   1f950:	ldr	r0, [sp, #20]
   1f954:	movw	r1, #33606	; 0x8346
   1f958:	movt	r1, #3
   1f95c:	bl	11234 <strcmp@plt>
   1f960:	cmp	r0, #0
   1f964:	bne	1f974 <__assert_fail@plt+0xe470>
   1f968:	movw	r0, #33612	; 0x834c
   1f96c:	movt	r0, #3
   1f970:	str	r0, [sp, #20]
   1f974:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f978:	ldr	r0, [r0]
   1f97c:	ldr	r1, [fp, #-16]
   1f980:	ldr	r1, [r1, #36]	; 0x24
   1f984:	cmp	r0, r1
   1f988:	bne	1f9ec <__assert_fail@plt+0xe4e8>
   1f98c:	ldr	r0, [fp, #-16]
   1f990:	ldr	r0, [r0, #36]	; 0x24
   1f994:	mov	r1, #1
   1f998:	orr	r0, r1, r0, lsl #1
   1f99c:	str	r0, [sp, #16]
   1f9a0:	ldr	r0, [fp, #-16]
   1f9a4:	ldr	r0, [r0, #12]
   1f9a8:	ldr	r1, [sp, #16]
   1f9ac:	lsl	r1, r1, #2
   1f9b0:	bl	33bb4 <__assert_fail@plt+0x226b0>
   1f9b4:	str	r0, [sp, #12]
   1f9b8:	ldr	r0, [sp, #12]
   1f9bc:	movw	r1, #0
   1f9c0:	cmp	r0, r1
   1f9c4:	bne	1f9d4 <__assert_fail@plt+0xe4d0>
   1f9c8:	movw	r0, #12
   1f9cc:	str	r0, [fp, #-4]
   1f9d0:	b	20590 <__assert_fail@plt+0xf08c>
   1f9d4:	ldr	r0, [sp, #12]
   1f9d8:	ldr	r1, [fp, #-16]
   1f9dc:	str	r0, [r1, #12]
   1f9e0:	ldr	r0, [sp, #16]
   1f9e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f9e8:	str	r0, [r1]
   1f9ec:	ldr	r0, [sp, #20]
   1f9f0:	bl	11204 <wctype@plt>
   1f9f4:	ldr	lr, [fp, #-16]
   1f9f8:	ldr	r1, [lr, #12]
   1f9fc:	ldr	r2, [lr, #36]	; 0x24
   1fa00:	add	r3, r2, #1
   1fa04:	str	r3, [lr, #36]	; 0x24
   1fa08:	add	r1, r1, r2, lsl #2
   1fa0c:	str	r0, [r1]
   1fa10:	ldr	r0, [sp, #20]
   1fa14:	movw	r1, #33588	; 0x8334
   1fa18:	movt	r1, #3
   1fa1c:	bl	11234 <strcmp@plt>
   1fa20:	cmp	r0, #0
   1fa24:	bne	1fb00 <__assert_fail@plt+0xe5fc>
   1fa28:	b	1fa2c <__assert_fail@plt+0xe528>
   1fa2c:	ldr	r0, [fp, #-8]
   1fa30:	movw	r1, #0
   1fa34:	cmp	r0, r1
   1fa38:	beq	1faa0 <__assert_fail@plt+0xe59c>
   1fa3c:	movw	r0, #0
   1fa40:	str	r0, [sp, #24]
   1fa44:	ldr	r0, [sp, #24]
   1fa48:	cmp	r0, #256	; 0x100
   1fa4c:	bge	1fa9c <__assert_fail@plt+0xe598>
   1fa50:	bl	113b4 <__ctype_b_loc@plt>
   1fa54:	ldr	r0, [r0]
   1fa58:	ldr	lr, [sp, #24]
   1fa5c:	add	r0, r0, lr, lsl #1
   1fa60:	ldrh	r0, [r0]
   1fa64:	and	r0, r0, #8
   1fa68:	cmp	r0, #0
   1fa6c:	beq	1fa88 <__assert_fail@plt+0xe584>
   1fa70:	ldr	r0, [fp, #-12]
   1fa74:	ldr	r1, [fp, #-8]
   1fa78:	ldr	r2, [sp, #24]
   1fa7c:	add	r1, r1, r2
   1fa80:	ldrb	r1, [r1]
   1fa84:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fa88:	b	1fa8c <__assert_fail@plt+0xe588>
   1fa8c:	ldr	r0, [sp, #24]
   1fa90:	add	r0, r0, #1
   1fa94:	str	r0, [sp, #24]
   1fa98:	b	1fa44 <__assert_fail@plt+0xe540>
   1fa9c:	b	1faf8 <__assert_fail@plt+0xe5f4>
   1faa0:	movw	r0, #0
   1faa4:	str	r0, [sp, #24]
   1faa8:	ldr	r0, [sp, #24]
   1faac:	cmp	r0, #256	; 0x100
   1fab0:	bge	1faf4 <__assert_fail@plt+0xe5f0>
   1fab4:	bl	113b4 <__ctype_b_loc@plt>
   1fab8:	ldr	r0, [r0]
   1fabc:	ldr	lr, [sp, #24]
   1fac0:	add	r0, r0, lr, lsl #1
   1fac4:	ldrh	r0, [r0]
   1fac8:	and	r0, r0, #8
   1facc:	cmp	r0, #0
   1fad0:	beq	1fae0 <__assert_fail@plt+0xe5dc>
   1fad4:	ldr	r0, [fp, #-12]
   1fad8:	ldr	r1, [sp, #24]
   1fadc:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fae0:	b	1fae4 <__assert_fail@plt+0xe5e0>
   1fae4:	ldr	r0, [sp, #24]
   1fae8:	add	r0, r0, #1
   1faec:	str	r0, [sp, #24]
   1faf0:	b	1faa8 <__assert_fail@plt+0xe5a4>
   1faf4:	b	1faf8 <__assert_fail@plt+0xe5f4>
   1faf8:	b	1fafc <__assert_fail@plt+0xe5f8>
   1fafc:	b	20588 <__assert_fail@plt+0xf084>
   1fb00:	ldr	r0, [sp, #20]
   1fb04:	movw	r1, #33618	; 0x8352
   1fb08:	movt	r1, #3
   1fb0c:	bl	11234 <strcmp@plt>
   1fb10:	cmp	r0, #0
   1fb14:	bne	1fbf0 <__assert_fail@plt+0xe6ec>
   1fb18:	b	1fb1c <__assert_fail@plt+0xe618>
   1fb1c:	ldr	r0, [fp, #-8]
   1fb20:	movw	r1, #0
   1fb24:	cmp	r0, r1
   1fb28:	beq	1fb90 <__assert_fail@plt+0xe68c>
   1fb2c:	movw	r0, #0
   1fb30:	str	r0, [sp, #24]
   1fb34:	ldr	r0, [sp, #24]
   1fb38:	cmp	r0, #256	; 0x100
   1fb3c:	bge	1fb8c <__assert_fail@plt+0xe688>
   1fb40:	bl	113b4 <__ctype_b_loc@plt>
   1fb44:	ldr	r0, [r0]
   1fb48:	ldr	lr, [sp, #24]
   1fb4c:	add	r0, r0, lr, lsl #1
   1fb50:	ldrh	r0, [r0]
   1fb54:	and	r0, r0, #2
   1fb58:	cmp	r0, #0
   1fb5c:	beq	1fb78 <__assert_fail@plt+0xe674>
   1fb60:	ldr	r0, [fp, #-12]
   1fb64:	ldr	r1, [fp, #-8]
   1fb68:	ldr	r2, [sp, #24]
   1fb6c:	add	r1, r1, r2
   1fb70:	ldrb	r1, [r1]
   1fb74:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fb78:	b	1fb7c <__assert_fail@plt+0xe678>
   1fb7c:	ldr	r0, [sp, #24]
   1fb80:	add	r0, r0, #1
   1fb84:	str	r0, [sp, #24]
   1fb88:	b	1fb34 <__assert_fail@plt+0xe630>
   1fb8c:	b	1fbe8 <__assert_fail@plt+0xe6e4>
   1fb90:	movw	r0, #0
   1fb94:	str	r0, [sp, #24]
   1fb98:	ldr	r0, [sp, #24]
   1fb9c:	cmp	r0, #256	; 0x100
   1fba0:	bge	1fbe4 <__assert_fail@plt+0xe6e0>
   1fba4:	bl	113b4 <__ctype_b_loc@plt>
   1fba8:	ldr	r0, [r0]
   1fbac:	ldr	lr, [sp, #24]
   1fbb0:	add	r0, r0, lr, lsl #1
   1fbb4:	ldrh	r0, [r0]
   1fbb8:	and	r0, r0, #2
   1fbbc:	cmp	r0, #0
   1fbc0:	beq	1fbd0 <__assert_fail@plt+0xe6cc>
   1fbc4:	ldr	r0, [fp, #-12]
   1fbc8:	ldr	r1, [sp, #24]
   1fbcc:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fbd0:	b	1fbd4 <__assert_fail@plt+0xe6d0>
   1fbd4:	ldr	r0, [sp, #24]
   1fbd8:	add	r0, r0, #1
   1fbdc:	str	r0, [sp, #24]
   1fbe0:	b	1fb98 <__assert_fail@plt+0xe694>
   1fbe4:	b	1fbe8 <__assert_fail@plt+0xe6e4>
   1fbe8:	b	1fbec <__assert_fail@plt+0xe6e8>
   1fbec:	b	20584 <__assert_fail@plt+0xf080>
   1fbf0:	ldr	r0, [sp, #20]
   1fbf4:	movw	r1, #33606	; 0x8346
   1fbf8:	movt	r1, #3
   1fbfc:	bl	11234 <strcmp@plt>
   1fc00:	cmp	r0, #0
   1fc04:	bne	1fce0 <__assert_fail@plt+0xe7dc>
   1fc08:	b	1fc0c <__assert_fail@plt+0xe708>
   1fc0c:	ldr	r0, [fp, #-8]
   1fc10:	movw	r1, #0
   1fc14:	cmp	r0, r1
   1fc18:	beq	1fc80 <__assert_fail@plt+0xe77c>
   1fc1c:	movw	r0, #0
   1fc20:	str	r0, [sp, #24]
   1fc24:	ldr	r0, [sp, #24]
   1fc28:	cmp	r0, #256	; 0x100
   1fc2c:	bge	1fc7c <__assert_fail@plt+0xe778>
   1fc30:	bl	113b4 <__ctype_b_loc@plt>
   1fc34:	ldr	r0, [r0]
   1fc38:	ldr	lr, [sp, #24]
   1fc3c:	add	r0, r0, lr, lsl #1
   1fc40:	ldrh	r0, [r0]
   1fc44:	and	r0, r0, #512	; 0x200
   1fc48:	cmp	r0, #0
   1fc4c:	beq	1fc68 <__assert_fail@plt+0xe764>
   1fc50:	ldr	r0, [fp, #-12]
   1fc54:	ldr	r1, [fp, #-8]
   1fc58:	ldr	r2, [sp, #24]
   1fc5c:	add	r1, r1, r2
   1fc60:	ldrb	r1, [r1]
   1fc64:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fc68:	b	1fc6c <__assert_fail@plt+0xe768>
   1fc6c:	ldr	r0, [sp, #24]
   1fc70:	add	r0, r0, #1
   1fc74:	str	r0, [sp, #24]
   1fc78:	b	1fc24 <__assert_fail@plt+0xe720>
   1fc7c:	b	1fcd8 <__assert_fail@plt+0xe7d4>
   1fc80:	movw	r0, #0
   1fc84:	str	r0, [sp, #24]
   1fc88:	ldr	r0, [sp, #24]
   1fc8c:	cmp	r0, #256	; 0x100
   1fc90:	bge	1fcd4 <__assert_fail@plt+0xe7d0>
   1fc94:	bl	113b4 <__ctype_b_loc@plt>
   1fc98:	ldr	r0, [r0]
   1fc9c:	ldr	lr, [sp, #24]
   1fca0:	add	r0, r0, lr, lsl #1
   1fca4:	ldrh	r0, [r0]
   1fca8:	and	r0, r0, #512	; 0x200
   1fcac:	cmp	r0, #0
   1fcb0:	beq	1fcc0 <__assert_fail@plt+0xe7bc>
   1fcb4:	ldr	r0, [fp, #-12]
   1fcb8:	ldr	r1, [sp, #24]
   1fcbc:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fcc0:	b	1fcc4 <__assert_fail@plt+0xe7c0>
   1fcc4:	ldr	r0, [sp, #24]
   1fcc8:	add	r0, r0, #1
   1fccc:	str	r0, [sp, #24]
   1fcd0:	b	1fc88 <__assert_fail@plt+0xe784>
   1fcd4:	b	1fcd8 <__assert_fail@plt+0xe7d4>
   1fcd8:	b	1fcdc <__assert_fail@plt+0xe7d8>
   1fcdc:	b	20580 <__assert_fail@plt+0xf07c>
   1fce0:	ldr	r0, [sp, #20]
   1fce4:	movw	r1, #33594	; 0x833a
   1fce8:	movt	r1, #3
   1fcec:	bl	11234 <strcmp@plt>
   1fcf0:	cmp	r0, #0
   1fcf4:	bne	1fdd0 <__assert_fail@plt+0xe8cc>
   1fcf8:	b	1fcfc <__assert_fail@plt+0xe7f8>
   1fcfc:	ldr	r0, [fp, #-8]
   1fd00:	movw	r1, #0
   1fd04:	cmp	r0, r1
   1fd08:	beq	1fd70 <__assert_fail@plt+0xe86c>
   1fd0c:	movw	r0, #0
   1fd10:	str	r0, [sp, #24]
   1fd14:	ldr	r0, [sp, #24]
   1fd18:	cmp	r0, #256	; 0x100
   1fd1c:	bge	1fd6c <__assert_fail@plt+0xe868>
   1fd20:	bl	113b4 <__ctype_b_loc@plt>
   1fd24:	ldr	r0, [r0]
   1fd28:	ldr	lr, [sp, #24]
   1fd2c:	add	r0, r0, lr, lsl #1
   1fd30:	ldrh	r0, [r0]
   1fd34:	and	r0, r0, #8192	; 0x2000
   1fd38:	cmp	r0, #0
   1fd3c:	beq	1fd58 <__assert_fail@plt+0xe854>
   1fd40:	ldr	r0, [fp, #-12]
   1fd44:	ldr	r1, [fp, #-8]
   1fd48:	ldr	r2, [sp, #24]
   1fd4c:	add	r1, r1, r2
   1fd50:	ldrb	r1, [r1]
   1fd54:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fd58:	b	1fd5c <__assert_fail@plt+0xe858>
   1fd5c:	ldr	r0, [sp, #24]
   1fd60:	add	r0, r0, #1
   1fd64:	str	r0, [sp, #24]
   1fd68:	b	1fd14 <__assert_fail@plt+0xe810>
   1fd6c:	b	1fdc8 <__assert_fail@plt+0xe8c4>
   1fd70:	movw	r0, #0
   1fd74:	str	r0, [sp, #24]
   1fd78:	ldr	r0, [sp, #24]
   1fd7c:	cmp	r0, #256	; 0x100
   1fd80:	bge	1fdc4 <__assert_fail@plt+0xe8c0>
   1fd84:	bl	113b4 <__ctype_b_loc@plt>
   1fd88:	ldr	r0, [r0]
   1fd8c:	ldr	lr, [sp, #24]
   1fd90:	add	r0, r0, lr, lsl #1
   1fd94:	ldrh	r0, [r0]
   1fd98:	and	r0, r0, #8192	; 0x2000
   1fd9c:	cmp	r0, #0
   1fda0:	beq	1fdb0 <__assert_fail@plt+0xe8ac>
   1fda4:	ldr	r0, [fp, #-12]
   1fda8:	ldr	r1, [sp, #24]
   1fdac:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fdb0:	b	1fdb4 <__assert_fail@plt+0xe8b0>
   1fdb4:	ldr	r0, [sp, #24]
   1fdb8:	add	r0, r0, #1
   1fdbc:	str	r0, [sp, #24]
   1fdc0:	b	1fd78 <__assert_fail@plt+0xe874>
   1fdc4:	b	1fdc8 <__assert_fail@plt+0xe8c4>
   1fdc8:	b	1fdcc <__assert_fail@plt+0xe8c8>
   1fdcc:	b	2057c <__assert_fail@plt+0xf078>
   1fdd0:	ldr	r0, [sp, #20]
   1fdd4:	movw	r1, #33612	; 0x834c
   1fdd8:	movt	r1, #3
   1fddc:	bl	11234 <strcmp@plt>
   1fde0:	cmp	r0, #0
   1fde4:	bne	1fec0 <__assert_fail@plt+0xe9bc>
   1fde8:	b	1fdec <__assert_fail@plt+0xe8e8>
   1fdec:	ldr	r0, [fp, #-8]
   1fdf0:	movw	r1, #0
   1fdf4:	cmp	r0, r1
   1fdf8:	beq	1fe60 <__assert_fail@plt+0xe95c>
   1fdfc:	movw	r0, #0
   1fe00:	str	r0, [sp, #24]
   1fe04:	ldr	r0, [sp, #24]
   1fe08:	cmp	r0, #256	; 0x100
   1fe0c:	bge	1fe5c <__assert_fail@plt+0xe958>
   1fe10:	bl	113b4 <__ctype_b_loc@plt>
   1fe14:	ldr	r0, [r0]
   1fe18:	ldr	lr, [sp, #24]
   1fe1c:	add	r0, r0, lr, lsl #1
   1fe20:	ldrh	r0, [r0]
   1fe24:	and	r0, r0, #1024	; 0x400
   1fe28:	cmp	r0, #0
   1fe2c:	beq	1fe48 <__assert_fail@plt+0xe944>
   1fe30:	ldr	r0, [fp, #-12]
   1fe34:	ldr	r1, [fp, #-8]
   1fe38:	ldr	r2, [sp, #24]
   1fe3c:	add	r1, r1, r2
   1fe40:	ldrb	r1, [r1]
   1fe44:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fe48:	b	1fe4c <__assert_fail@plt+0xe948>
   1fe4c:	ldr	r0, [sp, #24]
   1fe50:	add	r0, r0, #1
   1fe54:	str	r0, [sp, #24]
   1fe58:	b	1fe04 <__assert_fail@plt+0xe900>
   1fe5c:	b	1feb8 <__assert_fail@plt+0xe9b4>
   1fe60:	movw	r0, #0
   1fe64:	str	r0, [sp, #24]
   1fe68:	ldr	r0, [sp, #24]
   1fe6c:	cmp	r0, #256	; 0x100
   1fe70:	bge	1feb4 <__assert_fail@plt+0xe9b0>
   1fe74:	bl	113b4 <__ctype_b_loc@plt>
   1fe78:	ldr	r0, [r0]
   1fe7c:	ldr	lr, [sp, #24]
   1fe80:	add	r0, r0, lr, lsl #1
   1fe84:	ldrh	r0, [r0]
   1fe88:	and	r0, r0, #1024	; 0x400
   1fe8c:	cmp	r0, #0
   1fe90:	beq	1fea0 <__assert_fail@plt+0xe99c>
   1fe94:	ldr	r0, [fp, #-12]
   1fe98:	ldr	r1, [sp, #24]
   1fe9c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1fea0:	b	1fea4 <__assert_fail@plt+0xe9a0>
   1fea4:	ldr	r0, [sp, #24]
   1fea8:	add	r0, r0, #1
   1feac:	str	r0, [sp, #24]
   1feb0:	b	1fe68 <__assert_fail@plt+0xe964>
   1feb4:	b	1feb8 <__assert_fail@plt+0xe9b4>
   1feb8:	b	1febc <__assert_fail@plt+0xe9b8>
   1febc:	b	20578 <__assert_fail@plt+0xf074>
   1fec0:	ldr	r0, [sp, #20]
   1fec4:	movw	r1, #33649	; 0x8371
   1fec8:	movt	r1, #3
   1fecc:	bl	11234 <strcmp@plt>
   1fed0:	cmp	r0, #0
   1fed4:	bne	1ffb0 <__assert_fail@plt+0xeaac>
   1fed8:	b	1fedc <__assert_fail@plt+0xe9d8>
   1fedc:	ldr	r0, [fp, #-8]
   1fee0:	movw	r1, #0
   1fee4:	cmp	r0, r1
   1fee8:	beq	1ff50 <__assert_fail@plt+0xea4c>
   1feec:	movw	r0, #0
   1fef0:	str	r0, [sp, #24]
   1fef4:	ldr	r0, [sp, #24]
   1fef8:	cmp	r0, #256	; 0x100
   1fefc:	bge	1ff4c <__assert_fail@plt+0xea48>
   1ff00:	bl	113b4 <__ctype_b_loc@plt>
   1ff04:	ldr	r0, [r0]
   1ff08:	ldr	lr, [sp, #24]
   1ff0c:	add	r0, r0, lr, lsl #1
   1ff10:	ldrh	r0, [r0]
   1ff14:	and	r0, r0, #2048	; 0x800
   1ff18:	cmp	r0, #0
   1ff1c:	beq	1ff38 <__assert_fail@plt+0xea34>
   1ff20:	ldr	r0, [fp, #-12]
   1ff24:	ldr	r1, [fp, #-8]
   1ff28:	ldr	r2, [sp, #24]
   1ff2c:	add	r1, r1, r2
   1ff30:	ldrb	r1, [r1]
   1ff34:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1ff38:	b	1ff3c <__assert_fail@plt+0xea38>
   1ff3c:	ldr	r0, [sp, #24]
   1ff40:	add	r0, r0, #1
   1ff44:	str	r0, [sp, #24]
   1ff48:	b	1fef4 <__assert_fail@plt+0xe9f0>
   1ff4c:	b	1ffa8 <__assert_fail@plt+0xeaa4>
   1ff50:	movw	r0, #0
   1ff54:	str	r0, [sp, #24]
   1ff58:	ldr	r0, [sp, #24]
   1ff5c:	cmp	r0, #256	; 0x100
   1ff60:	bge	1ffa4 <__assert_fail@plt+0xeaa0>
   1ff64:	bl	113b4 <__ctype_b_loc@plt>
   1ff68:	ldr	r0, [r0]
   1ff6c:	ldr	lr, [sp, #24]
   1ff70:	add	r0, r0, lr, lsl #1
   1ff74:	ldrh	r0, [r0]
   1ff78:	and	r0, r0, #2048	; 0x800
   1ff7c:	cmp	r0, #0
   1ff80:	beq	1ff90 <__assert_fail@plt+0xea8c>
   1ff84:	ldr	r0, [fp, #-12]
   1ff88:	ldr	r1, [sp, #24]
   1ff8c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   1ff90:	b	1ff94 <__assert_fail@plt+0xea90>
   1ff94:	ldr	r0, [sp, #24]
   1ff98:	add	r0, r0, #1
   1ff9c:	str	r0, [sp, #24]
   1ffa0:	b	1ff58 <__assert_fail@plt+0xea54>
   1ffa4:	b	1ffa8 <__assert_fail@plt+0xeaa4>
   1ffa8:	b	1ffac <__assert_fail@plt+0xeaa8>
   1ffac:	b	20574 <__assert_fail@plt+0xf070>
   1ffb0:	ldr	r0, [sp, #20]
   1ffb4:	movw	r1, #33624	; 0x8358
   1ffb8:	movt	r1, #3
   1ffbc:	bl	11234 <strcmp@plt>
   1ffc0:	cmp	r0, #0
   1ffc4:	bne	200a0 <__assert_fail@plt+0xeb9c>
   1ffc8:	b	1ffcc <__assert_fail@plt+0xeac8>
   1ffcc:	ldr	r0, [fp, #-8]
   1ffd0:	movw	r1, #0
   1ffd4:	cmp	r0, r1
   1ffd8:	beq	20040 <__assert_fail@plt+0xeb3c>
   1ffdc:	movw	r0, #0
   1ffe0:	str	r0, [sp, #24]
   1ffe4:	ldr	r0, [sp, #24]
   1ffe8:	cmp	r0, #256	; 0x100
   1ffec:	bge	2003c <__assert_fail@plt+0xeb38>
   1fff0:	bl	113b4 <__ctype_b_loc@plt>
   1fff4:	ldr	r0, [r0]
   1fff8:	ldr	lr, [sp, #24]
   1fffc:	add	r0, r0, lr, lsl #1
   20000:	ldrh	r0, [r0]
   20004:	and	r0, r0, #16384	; 0x4000
   20008:	cmp	r0, #0
   2000c:	beq	20028 <__assert_fail@plt+0xeb24>
   20010:	ldr	r0, [fp, #-12]
   20014:	ldr	r1, [fp, #-8]
   20018:	ldr	r2, [sp, #24]
   2001c:	add	r1, r1, r2
   20020:	ldrb	r1, [r1]
   20024:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20028:	b	2002c <__assert_fail@plt+0xeb28>
   2002c:	ldr	r0, [sp, #24]
   20030:	add	r0, r0, #1
   20034:	str	r0, [sp, #24]
   20038:	b	1ffe4 <__assert_fail@plt+0xeae0>
   2003c:	b	20098 <__assert_fail@plt+0xeb94>
   20040:	movw	r0, #0
   20044:	str	r0, [sp, #24]
   20048:	ldr	r0, [sp, #24]
   2004c:	cmp	r0, #256	; 0x100
   20050:	bge	20094 <__assert_fail@plt+0xeb90>
   20054:	bl	113b4 <__ctype_b_loc@plt>
   20058:	ldr	r0, [r0]
   2005c:	ldr	lr, [sp, #24]
   20060:	add	r0, r0, lr, lsl #1
   20064:	ldrh	r0, [r0]
   20068:	and	r0, r0, #16384	; 0x4000
   2006c:	cmp	r0, #0
   20070:	beq	20080 <__assert_fail@plt+0xeb7c>
   20074:	ldr	r0, [fp, #-12]
   20078:	ldr	r1, [sp, #24]
   2007c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20080:	b	20084 <__assert_fail@plt+0xeb80>
   20084:	ldr	r0, [sp, #24]
   20088:	add	r0, r0, #1
   2008c:	str	r0, [sp, #24]
   20090:	b	20048 <__assert_fail@plt+0xeb44>
   20094:	b	20098 <__assert_fail@plt+0xeb94>
   20098:	b	2009c <__assert_fail@plt+0xeb98>
   2009c:	b	20570 <__assert_fail@plt+0xf06c>
   200a0:	ldr	r0, [sp, #20]
   200a4:	movw	r1, #33600	; 0x8340
   200a8:	movt	r1, #3
   200ac:	bl	11234 <strcmp@plt>
   200b0:	cmp	r0, #0
   200b4:	bne	20190 <__assert_fail@plt+0xec8c>
   200b8:	b	200bc <__assert_fail@plt+0xebb8>
   200bc:	ldr	r0, [fp, #-8]
   200c0:	movw	r1, #0
   200c4:	cmp	r0, r1
   200c8:	beq	20130 <__assert_fail@plt+0xec2c>
   200cc:	movw	r0, #0
   200d0:	str	r0, [sp, #24]
   200d4:	ldr	r0, [sp, #24]
   200d8:	cmp	r0, #256	; 0x100
   200dc:	bge	2012c <__assert_fail@plt+0xec28>
   200e0:	bl	113b4 <__ctype_b_loc@plt>
   200e4:	ldr	r0, [r0]
   200e8:	ldr	lr, [sp, #24]
   200ec:	add	r0, r0, lr, lsl #1
   200f0:	ldrh	r0, [r0]
   200f4:	and	r0, r0, #256	; 0x100
   200f8:	cmp	r0, #0
   200fc:	beq	20118 <__assert_fail@plt+0xec14>
   20100:	ldr	r0, [fp, #-12]
   20104:	ldr	r1, [fp, #-8]
   20108:	ldr	r2, [sp, #24]
   2010c:	add	r1, r1, r2
   20110:	ldrb	r1, [r1]
   20114:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20118:	b	2011c <__assert_fail@plt+0xec18>
   2011c:	ldr	r0, [sp, #24]
   20120:	add	r0, r0, #1
   20124:	str	r0, [sp, #24]
   20128:	b	200d4 <__assert_fail@plt+0xebd0>
   2012c:	b	20188 <__assert_fail@plt+0xec84>
   20130:	movw	r0, #0
   20134:	str	r0, [sp, #24]
   20138:	ldr	r0, [sp, #24]
   2013c:	cmp	r0, #256	; 0x100
   20140:	bge	20184 <__assert_fail@plt+0xec80>
   20144:	bl	113b4 <__ctype_b_loc@plt>
   20148:	ldr	r0, [r0]
   2014c:	ldr	lr, [sp, #24]
   20150:	add	r0, r0, lr, lsl #1
   20154:	ldrh	r0, [r0]
   20158:	and	r0, r0, #256	; 0x100
   2015c:	cmp	r0, #0
   20160:	beq	20170 <__assert_fail@plt+0xec6c>
   20164:	ldr	r0, [fp, #-12]
   20168:	ldr	r1, [sp, #24]
   2016c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20170:	b	20174 <__assert_fail@plt+0xec70>
   20174:	ldr	r0, [sp, #24]
   20178:	add	r0, r0, #1
   2017c:	str	r0, [sp, #24]
   20180:	b	20138 <__assert_fail@plt+0xec34>
   20184:	b	20188 <__assert_fail@plt+0xec84>
   20188:	b	2018c <__assert_fail@plt+0xec88>
   2018c:	b	2056c <__assert_fail@plt+0xf068>
   20190:	ldr	r0, [sp, #20]
   20194:	movw	r1, #33630	; 0x835e
   20198:	movt	r1, #3
   2019c:	bl	11234 <strcmp@plt>
   201a0:	cmp	r0, #0
   201a4:	bne	20280 <__assert_fail@plt+0xed7c>
   201a8:	b	201ac <__assert_fail@plt+0xeca8>
   201ac:	ldr	r0, [fp, #-8]
   201b0:	movw	r1, #0
   201b4:	cmp	r0, r1
   201b8:	beq	20220 <__assert_fail@plt+0xed1c>
   201bc:	movw	r0, #0
   201c0:	str	r0, [sp, #24]
   201c4:	ldr	r0, [sp, #24]
   201c8:	cmp	r0, #256	; 0x100
   201cc:	bge	2021c <__assert_fail@plt+0xed18>
   201d0:	bl	113b4 <__ctype_b_loc@plt>
   201d4:	ldr	r0, [r0]
   201d8:	ldr	lr, [sp, #24]
   201dc:	add	r0, r0, lr, lsl #1
   201e0:	ldrh	r0, [r0]
   201e4:	and	r0, r0, #1
   201e8:	cmp	r0, #0
   201ec:	beq	20208 <__assert_fail@plt+0xed04>
   201f0:	ldr	r0, [fp, #-12]
   201f4:	ldr	r1, [fp, #-8]
   201f8:	ldr	r2, [sp, #24]
   201fc:	add	r1, r1, r2
   20200:	ldrb	r1, [r1]
   20204:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20208:	b	2020c <__assert_fail@plt+0xed08>
   2020c:	ldr	r0, [sp, #24]
   20210:	add	r0, r0, #1
   20214:	str	r0, [sp, #24]
   20218:	b	201c4 <__assert_fail@plt+0xecc0>
   2021c:	b	20278 <__assert_fail@plt+0xed74>
   20220:	movw	r0, #0
   20224:	str	r0, [sp, #24]
   20228:	ldr	r0, [sp, #24]
   2022c:	cmp	r0, #256	; 0x100
   20230:	bge	20274 <__assert_fail@plt+0xed70>
   20234:	bl	113b4 <__ctype_b_loc@plt>
   20238:	ldr	r0, [r0]
   2023c:	ldr	lr, [sp, #24]
   20240:	add	r0, r0, lr, lsl #1
   20244:	ldrh	r0, [r0]
   20248:	and	r0, r0, #1
   2024c:	cmp	r0, #0
   20250:	beq	20260 <__assert_fail@plt+0xed5c>
   20254:	ldr	r0, [fp, #-12]
   20258:	ldr	r1, [sp, #24]
   2025c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20260:	b	20264 <__assert_fail@plt+0xed60>
   20264:	ldr	r0, [sp, #24]
   20268:	add	r0, r0, #1
   2026c:	str	r0, [sp, #24]
   20270:	b	20228 <__assert_fail@plt+0xed24>
   20274:	b	20278 <__assert_fail@plt+0xed74>
   20278:	b	2027c <__assert_fail@plt+0xed78>
   2027c:	b	20568 <__assert_fail@plt+0xf064>
   20280:	ldr	r0, [sp, #20]
   20284:	movw	r1, #33636	; 0x8364
   20288:	movt	r1, #3
   2028c:	bl	11234 <strcmp@plt>
   20290:	cmp	r0, #0
   20294:	bne	20370 <__assert_fail@plt+0xee6c>
   20298:	b	2029c <__assert_fail@plt+0xed98>
   2029c:	ldr	r0, [fp, #-8]
   202a0:	movw	r1, #0
   202a4:	cmp	r0, r1
   202a8:	beq	20310 <__assert_fail@plt+0xee0c>
   202ac:	movw	r0, #0
   202b0:	str	r0, [sp, #24]
   202b4:	ldr	r0, [sp, #24]
   202b8:	cmp	r0, #256	; 0x100
   202bc:	bge	2030c <__assert_fail@plt+0xee08>
   202c0:	bl	113b4 <__ctype_b_loc@plt>
   202c4:	ldr	r0, [r0]
   202c8:	ldr	lr, [sp, #24]
   202cc:	add	r0, r0, lr, lsl #1
   202d0:	ldrh	r0, [r0]
   202d4:	and	r0, r0, #32768	; 0x8000
   202d8:	cmp	r0, #0
   202dc:	beq	202f8 <__assert_fail@plt+0xedf4>
   202e0:	ldr	r0, [fp, #-12]
   202e4:	ldr	r1, [fp, #-8]
   202e8:	ldr	r2, [sp, #24]
   202ec:	add	r1, r1, r2
   202f0:	ldrb	r1, [r1]
   202f4:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   202f8:	b	202fc <__assert_fail@plt+0xedf8>
   202fc:	ldr	r0, [sp, #24]
   20300:	add	r0, r0, #1
   20304:	str	r0, [sp, #24]
   20308:	b	202b4 <__assert_fail@plt+0xedb0>
   2030c:	b	20368 <__assert_fail@plt+0xee64>
   20310:	movw	r0, #0
   20314:	str	r0, [sp, #24]
   20318:	ldr	r0, [sp, #24]
   2031c:	cmp	r0, #256	; 0x100
   20320:	bge	20364 <__assert_fail@plt+0xee60>
   20324:	bl	113b4 <__ctype_b_loc@plt>
   20328:	ldr	r0, [r0]
   2032c:	ldr	lr, [sp, #24]
   20330:	add	r0, r0, lr, lsl #1
   20334:	ldrh	r0, [r0]
   20338:	and	r0, r0, #32768	; 0x8000
   2033c:	cmp	r0, #0
   20340:	beq	20350 <__assert_fail@plt+0xee4c>
   20344:	ldr	r0, [fp, #-12]
   20348:	ldr	r1, [sp, #24]
   2034c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20350:	b	20354 <__assert_fail@plt+0xee50>
   20354:	ldr	r0, [sp, #24]
   20358:	add	r0, r0, #1
   2035c:	str	r0, [sp, #24]
   20360:	b	20318 <__assert_fail@plt+0xee14>
   20364:	b	20368 <__assert_fail@plt+0xee64>
   20368:	b	2036c <__assert_fail@plt+0xee68>
   2036c:	b	20564 <__assert_fail@plt+0xf060>
   20370:	ldr	r0, [sp, #20]
   20374:	movw	r1, #33642	; 0x836a
   20378:	movt	r1, #3
   2037c:	bl	11234 <strcmp@plt>
   20380:	cmp	r0, #0
   20384:	bne	20460 <__assert_fail@plt+0xef5c>
   20388:	b	2038c <__assert_fail@plt+0xee88>
   2038c:	ldr	r0, [fp, #-8]
   20390:	movw	r1, #0
   20394:	cmp	r0, r1
   20398:	beq	20400 <__assert_fail@plt+0xeefc>
   2039c:	movw	r0, #0
   203a0:	str	r0, [sp, #24]
   203a4:	ldr	r0, [sp, #24]
   203a8:	cmp	r0, #256	; 0x100
   203ac:	bge	203fc <__assert_fail@plt+0xeef8>
   203b0:	bl	113b4 <__ctype_b_loc@plt>
   203b4:	ldr	r0, [r0]
   203b8:	ldr	lr, [sp, #24]
   203bc:	add	r0, r0, lr, lsl #1
   203c0:	ldrh	r0, [r0]
   203c4:	and	r0, r0, #4
   203c8:	cmp	r0, #0
   203cc:	beq	203e8 <__assert_fail@plt+0xeee4>
   203d0:	ldr	r0, [fp, #-12]
   203d4:	ldr	r1, [fp, #-8]
   203d8:	ldr	r2, [sp, #24]
   203dc:	add	r1, r1, r2
   203e0:	ldrb	r1, [r1]
   203e4:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   203e8:	b	203ec <__assert_fail@plt+0xeee8>
   203ec:	ldr	r0, [sp, #24]
   203f0:	add	r0, r0, #1
   203f4:	str	r0, [sp, #24]
   203f8:	b	203a4 <__assert_fail@plt+0xeea0>
   203fc:	b	20458 <__assert_fail@plt+0xef54>
   20400:	movw	r0, #0
   20404:	str	r0, [sp, #24]
   20408:	ldr	r0, [sp, #24]
   2040c:	cmp	r0, #256	; 0x100
   20410:	bge	20454 <__assert_fail@plt+0xef50>
   20414:	bl	113b4 <__ctype_b_loc@plt>
   20418:	ldr	r0, [r0]
   2041c:	ldr	lr, [sp, #24]
   20420:	add	r0, r0, lr, lsl #1
   20424:	ldrh	r0, [r0]
   20428:	and	r0, r0, #4
   2042c:	cmp	r0, #0
   20430:	beq	20440 <__assert_fail@plt+0xef3c>
   20434:	ldr	r0, [fp, #-12]
   20438:	ldr	r1, [sp, #24]
   2043c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20440:	b	20444 <__assert_fail@plt+0xef40>
   20444:	ldr	r0, [sp, #24]
   20448:	add	r0, r0, #1
   2044c:	str	r0, [sp, #24]
   20450:	b	20408 <__assert_fail@plt+0xef04>
   20454:	b	20458 <__assert_fail@plt+0xef54>
   20458:	b	2045c <__assert_fail@plt+0xef58>
   2045c:	b	20560 <__assert_fail@plt+0xf05c>
   20460:	ldr	r0, [sp, #20]
   20464:	movw	r1, #33648	; 0x8370
   20468:	movt	r1, #3
   2046c:	bl	11234 <strcmp@plt>
   20470:	cmp	r0, #0
   20474:	bne	20550 <__assert_fail@plt+0xf04c>
   20478:	b	2047c <__assert_fail@plt+0xef78>
   2047c:	ldr	r0, [fp, #-8]
   20480:	movw	r1, #0
   20484:	cmp	r0, r1
   20488:	beq	204f0 <__assert_fail@plt+0xefec>
   2048c:	movw	r0, #0
   20490:	str	r0, [sp, #24]
   20494:	ldr	r0, [sp, #24]
   20498:	cmp	r0, #256	; 0x100
   2049c:	bge	204ec <__assert_fail@plt+0xefe8>
   204a0:	bl	113b4 <__ctype_b_loc@plt>
   204a4:	ldr	r0, [r0]
   204a8:	ldr	lr, [sp, #24]
   204ac:	add	r0, r0, lr, lsl #1
   204b0:	ldrh	r0, [r0]
   204b4:	and	r0, r0, #4096	; 0x1000
   204b8:	cmp	r0, #0
   204bc:	beq	204d8 <__assert_fail@plt+0xefd4>
   204c0:	ldr	r0, [fp, #-12]
   204c4:	ldr	r1, [fp, #-8]
   204c8:	ldr	r2, [sp, #24]
   204cc:	add	r1, r1, r2
   204d0:	ldrb	r1, [r1]
   204d4:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   204d8:	b	204dc <__assert_fail@plt+0xefd8>
   204dc:	ldr	r0, [sp, #24]
   204e0:	add	r0, r0, #1
   204e4:	str	r0, [sp, #24]
   204e8:	b	20494 <__assert_fail@plt+0xef90>
   204ec:	b	20548 <__assert_fail@plt+0xf044>
   204f0:	movw	r0, #0
   204f4:	str	r0, [sp, #24]
   204f8:	ldr	r0, [sp, #24]
   204fc:	cmp	r0, #256	; 0x100
   20500:	bge	20544 <__assert_fail@plt+0xf040>
   20504:	bl	113b4 <__ctype_b_loc@plt>
   20508:	ldr	r0, [r0]
   2050c:	ldr	lr, [sp, #24]
   20510:	add	r0, r0, lr, lsl #1
   20514:	ldrh	r0, [r0]
   20518:	and	r0, r0, #4096	; 0x1000
   2051c:	cmp	r0, #0
   20520:	beq	20530 <__assert_fail@plt+0xf02c>
   20524:	ldr	r0, [fp, #-12]
   20528:	ldr	r1, [sp, #24]
   2052c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   20530:	b	20534 <__assert_fail@plt+0xf030>
   20534:	ldr	r0, [sp, #24]
   20538:	add	r0, r0, #1
   2053c:	str	r0, [sp, #24]
   20540:	b	204f8 <__assert_fail@plt+0xeff4>
   20544:	b	20548 <__assert_fail@plt+0xf044>
   20548:	b	2054c <__assert_fail@plt+0xf048>
   2054c:	b	2055c <__assert_fail@plt+0xf058>
   20550:	movw	r0, #4
   20554:	str	r0, [fp, #-4]
   20558:	b	20590 <__assert_fail@plt+0xf08c>
   2055c:	b	20560 <__assert_fail@plt+0xf05c>
   20560:	b	20564 <__assert_fail@plt+0xf060>
   20564:	b	20568 <__assert_fail@plt+0xf064>
   20568:	b	2056c <__assert_fail@plt+0xf068>
   2056c:	b	20570 <__assert_fail@plt+0xf06c>
   20570:	b	20574 <__assert_fail@plt+0xf070>
   20574:	b	20578 <__assert_fail@plt+0xf074>
   20578:	b	2057c <__assert_fail@plt+0xf078>
   2057c:	b	20580 <__assert_fail@plt+0xf07c>
   20580:	b	20584 <__assert_fail@plt+0xf080>
   20584:	b	20588 <__assert_fail@plt+0xf084>
   20588:	movw	r0, #0
   2058c:	str	r0, [fp, #-4]
   20590:	ldr	r0, [fp, #-4]
   20594:	mov	sp, fp
   20598:	pop	{fp, pc}
   2059c:	sub	sp, sp, #8
   205a0:	str	r0, [sp, #4]
   205a4:	movw	r0, #0
   205a8:	str	r0, [sp]
   205ac:	ldr	r0, [sp]
   205b0:	cmp	r0, #8
   205b4:	bge	205dc <__assert_fail@plt+0xf0d8>
   205b8:	ldr	r0, [sp, #4]
   205bc:	ldr	r1, [sp]
   205c0:	ldr	r1, [r0, r1, lsl #2]!
   205c4:	mvn	r1, r1
   205c8:	str	r1, [r0]
   205cc:	ldr	r0, [sp]
   205d0:	add	r0, r0, #1
   205d4:	str	r0, [sp]
   205d8:	b	205ac <__assert_fail@plt+0xf0a8>
   205dc:	add	sp, sp, #8
   205e0:	bx	lr
   205e4:	sub	sp, sp, #12
   205e8:	str	r0, [sp, #8]
   205ec:	str	r1, [sp, #4]
   205f0:	movw	r0, #0
   205f4:	str	r0, [sp]
   205f8:	ldr	r0, [sp]
   205fc:	cmp	r0, #8
   20600:	bge	20634 <__assert_fail@plt+0xf130>
   20604:	ldr	r0, [sp, #4]
   20608:	ldr	r1, [sp]
   2060c:	ldr	r0, [r0, r1, lsl #2]
   20610:	ldr	r2, [sp, #8]
   20614:	add	r1, r2, r1, lsl #2
   20618:	ldr	r2, [r1]
   2061c:	and	r0, r2, r0
   20620:	str	r0, [r1]
   20624:	ldr	r0, [sp]
   20628:	add	r0, r0, #1
   2062c:	str	r0, [sp]
   20630:	b	205f8 <__assert_fail@plt+0xf0f4>
   20634:	add	sp, sp, #12
   20638:	bx	lr
   2063c:	sub	sp, sp, #16
   20640:	str	r0, [sp, #8]
   20644:	str	r1, [sp, #4]
   20648:	ldr	r0, [sp, #8]
   2064c:	ldr	r0, [r0, #80]	; 0x50
   20650:	cmp	r0, #1
   20654:	bne	20664 <__assert_fail@plt+0xf160>
   20658:	movw	r0, #1
   2065c:	str	r0, [sp, #12]
   20660:	b	206cc <__assert_fail@plt+0xf1c8>
   20664:	movw	r0, #1
   20668:	str	r0, [sp]
   2066c:	ldr	r0, [sp, #4]
   20670:	ldr	r1, [sp]
   20674:	add	r0, r0, r1
   20678:	ldr	r1, [sp, #8]
   2067c:	ldr	r1, [r1, #28]
   20680:	cmp	r0, r1
   20684:	bge	206c4 <__assert_fail@plt+0xf1c0>
   20688:	ldr	r0, [sp, #8]
   2068c:	ldr	r0, [r0, #8]
   20690:	ldr	r1, [sp, #4]
   20694:	ldr	r2, [sp]
   20698:	add	r1, r1, r2
   2069c:	add	r0, r0, r1, lsl #2
   206a0:	ldr	r0, [r0]
   206a4:	cmn	r0, #1
   206a8:	beq	206b0 <__assert_fail@plt+0xf1ac>
   206ac:	b	206c4 <__assert_fail@plt+0xf1c0>
   206b0:	b	206b4 <__assert_fail@plt+0xf1b0>
   206b4:	ldr	r0, [sp]
   206b8:	add	r0, r0, #1
   206bc:	str	r0, [sp]
   206c0:	b	2066c <__assert_fail@plt+0xf168>
   206c4:	ldr	r0, [sp]
   206c8:	str	r0, [sp, #12]
   206cc:	ldr	r0, [sp, #12]
   206d0:	add	sp, sp, #16
   206d4:	bx	lr
   206d8:	push	{fp, lr}
   206dc:	mov	fp, sp
   206e0:	sub	sp, sp, #32
   206e4:	str	r0, [fp, #-8]
   206e8:	str	r1, [fp, #-12]
   206ec:	str	r2, [sp, #16]
   206f0:	ldr	r0, [sp, #16]
   206f4:	ldrb	r0, [r0]
   206f8:	strb	r0, [sp, #14]
   206fc:	movw	r0, #0
   20700:	str	r0, [sp, #8]
   20704:	ldr	r0, [fp, #-12]
   20708:	ldr	r0, [r0, #56]	; 0x38
   2070c:	ldr	r1, [fp, #-12]
   20710:	ldr	r1, [r1, #40]	; 0x28
   20714:	cmp	r0, r1
   20718:	bgt	20728 <__assert_fail@plt+0xf224>
   2071c:	movw	r0, #7
   20720:	str	r0, [fp, #-4]
   20724:	b	208ac <__assert_fail@plt+0xf3a8>
   20728:	b	2072c <__assert_fail@plt+0xf228>
   2072c:	ldr	r0, [sp, #8]
   20730:	cmp	r0, #32
   20734:	blt	20744 <__assert_fail@plt+0xf240>
   20738:	movw	r0, #7
   2073c:	str	r0, [fp, #-4]
   20740:	b	208ac <__assert_fail@plt+0xf3a8>
   20744:	ldr	r0, [sp, #16]
   20748:	ldr	r0, [r0, #4]
   2074c:	and	r0, r0, #255	; 0xff
   20750:	cmp	r0, #30
   20754:	bne	20768 <__assert_fail@plt+0xf264>
   20758:	ldr	r0, [fp, #-12]
   2075c:	bl	208b8 <__assert_fail@plt+0xf3b4>
   20760:	strb	r0, [sp, #15]
   20764:	b	2078c <__assert_fail@plt+0xf288>
   20768:	ldr	r0, [fp, #-12]
   2076c:	ldr	r0, [r0, #4]
   20770:	ldr	r1, [fp, #-12]
   20774:	ldr	r2, [r1, #40]	; 0x28
   20778:	add	r3, r2, #1
   2077c:	str	r3, [r1, #40]	; 0x28
   20780:	add	r0, r0, r2
   20784:	ldrb	r0, [r0]
   20788:	strb	r0, [sp, #15]
   2078c:	ldr	r0, [fp, #-12]
   20790:	ldr	r0, [r0, #56]	; 0x38
   20794:	ldr	r1, [fp, #-12]
   20798:	ldr	r1, [r1, #40]	; 0x28
   2079c:	cmp	r0, r1
   207a0:	bgt	207b0 <__assert_fail@plt+0xf2ac>
   207a4:	movw	r0, #7
   207a8:	str	r0, [fp, #-4]
   207ac:	b	208ac <__assert_fail@plt+0xf3a8>
   207b0:	ldrb	r0, [sp, #15]
   207b4:	ldrb	r1, [sp, #14]
   207b8:	cmp	r0, r1
   207bc:	bne	207e8 <__assert_fail@plt+0xf2e4>
   207c0:	ldr	r0, [fp, #-12]
   207c4:	ldr	r0, [r0, #4]
   207c8:	ldr	r1, [fp, #-12]
   207cc:	ldr	r1, [r1, #40]	; 0x28
   207d0:	add	r1, r1, #0
   207d4:	add	r0, r0, r1
   207d8:	ldrb	r0, [r0]
   207dc:	cmp	r0, #93	; 0x5d
   207e0:	bne	207e8 <__assert_fail@plt+0xf2e4>
   207e4:	b	20810 <__assert_fail@plt+0xf30c>
   207e8:	ldrb	r0, [sp, #15]
   207ec:	ldr	r1, [fp, #-8]
   207f0:	ldr	r1, [r1, #4]
   207f4:	ldr	r2, [sp, #8]
   207f8:	add	r1, r1, r2
   207fc:	strb	r0, [r1]
   20800:	ldr	r0, [sp, #8]
   20804:	add	r0, r0, #1
   20808:	str	r0, [sp, #8]
   2080c:	b	2072c <__assert_fail@plt+0xf228>
   20810:	ldr	r0, [fp, #-12]
   20814:	ldr	r1, [r0, #40]	; 0x28
   20818:	add	r1, r1, #1
   2081c:	str	r1, [r0, #40]	; 0x28
   20820:	ldr	r0, [fp, #-8]
   20824:	ldr	r0, [r0, #4]
   20828:	ldr	r1, [sp, #8]
   2082c:	mov	r2, #0
   20830:	strb	r2, [r0, r1]
   20834:	ldr	r0, [sp, #16]
   20838:	ldrb	r0, [r0, #4]
   2083c:	mov	r1, r0
   20840:	cmp	r0, #26
   20844:	str	r1, [sp, #4]
   20848:	beq	20870 <__assert_fail@plt+0xf36c>
   2084c:	b	20850 <__assert_fail@plt+0xf34c>
   20850:	ldr	r0, [sp, #4]
   20854:	cmp	r0, #28
   20858:	beq	20880 <__assert_fail@plt+0xf37c>
   2085c:	b	20860 <__assert_fail@plt+0xf35c>
   20860:	ldr	r0, [sp, #4]
   20864:	cmp	r0, #30
   20868:	beq	20890 <__assert_fail@plt+0xf38c>
   2086c:	b	208a0 <__assert_fail@plt+0xf39c>
   20870:	ldr	r0, [fp, #-8]
   20874:	movw	r1, #3
   20878:	str	r1, [r0]
   2087c:	b	208a4 <__assert_fail@plt+0xf3a0>
   20880:	ldr	r0, [fp, #-8]
   20884:	movw	r1, #2
   20888:	str	r1, [r0]
   2088c:	b	208a4 <__assert_fail@plt+0xf3a0>
   20890:	ldr	r0, [fp, #-8]
   20894:	movw	r1, #4
   20898:	str	r1, [r0]
   2089c:	b	208a4 <__assert_fail@plt+0xf3a0>
   208a0:	b	208a4 <__assert_fail@plt+0xf3a0>
   208a4:	movw	r0, #0
   208a8:	str	r0, [fp, #-4]
   208ac:	ldr	r0, [fp, #-4]
   208b0:	mov	sp, fp
   208b4:	pop	{fp, pc}
   208b8:	push	{fp, lr}
   208bc:	mov	fp, sp
   208c0:	sub	sp, sp, #16
   208c4:	str	r0, [sp, #8]
   208c8:	ldr	r0, [sp, #8]
   208cc:	ldrsb	r0, [r0, #75]	; 0x4b
   208d0:	cmp	r0, #0
   208d4:	movw	r0, #0
   208d8:	movne	r0, #1
   208dc:	mvn	r1, #0
   208e0:	eor	r0, r0, r1
   208e4:	tst	r0, #1
   208e8:	beq	20914 <__assert_fail@plt+0xf410>
   208ec:	ldr	r0, [sp, #8]
   208f0:	ldr	r0, [r0, #4]
   208f4:	ldr	r1, [sp, #8]
   208f8:	ldr	r2, [r1, #40]	; 0x28
   208fc:	add	r3, r2, #1
   20900:	str	r3, [r1, #40]	; 0x28
   20904:	add	r0, r0, r2
   20908:	ldrb	r0, [r0]
   2090c:	strb	r0, [fp, #-1]
   20910:	b	20a54 <__assert_fail@plt+0xf550>
   20914:	ldr	r0, [sp, #8]
   20918:	ldrsb	r0, [r0, #76]	; 0x4c
   2091c:	cmp	r0, #0
   20920:	beq	20a24 <__assert_fail@plt+0xf520>
   20924:	ldr	r0, [sp, #8]
   20928:	ldr	r0, [r0, #40]	; 0x28
   2092c:	ldr	r1, [sp, #8]
   20930:	ldr	r1, [r1, #28]
   20934:	cmp	r0, r1
   20938:	beq	20980 <__assert_fail@plt+0xf47c>
   2093c:	ldr	r0, [sp, #8]
   20940:	ldr	r1, [r0, #8]
   20944:	ldr	r0, [r0, #40]	; 0x28
   20948:	add	r0, r1, r0, lsl #2
   2094c:	ldr	r0, [r0]
   20950:	cmn	r0, #1
   20954:	bne	20980 <__assert_fail@plt+0xf47c>
   20958:	ldr	r0, [sp, #8]
   2095c:	ldr	r0, [r0, #4]
   20960:	ldr	r1, [sp, #8]
   20964:	ldr	r2, [r1, #40]	; 0x28
   20968:	add	r3, r2, #1
   2096c:	str	r3, [r1, #40]	; 0x28
   20970:	add	r0, r0, r2
   20974:	ldrb	r0, [r0]
   20978:	strb	r0, [fp, #-1]
   2097c:	b	20a54 <__assert_fail@plt+0xf550>
   20980:	ldr	r0, [sp, #8]
   20984:	ldr	r1, [r0, #12]
   20988:	ldr	r0, [r0, #40]	; 0x28
   2098c:	add	r0, r1, r0, lsl #2
   20990:	ldr	r0, [r0]
   20994:	str	r0, [sp, #4]
   20998:	ldr	r0, [sp, #8]
   2099c:	ldr	r0, [r0]
   209a0:	ldr	r1, [sp, #8]
   209a4:	ldr	r1, [r1, #24]
   209a8:	ldr	r2, [sp, #4]
   209ac:	add	r1, r1, r2
   209b0:	add	r0, r0, r1
   209b4:	ldrb	r0, [r0]
   209b8:	str	r0, [sp]
   209bc:	ldr	r0, [sp]
   209c0:	mvn	r1, #127	; 0x7f
   209c4:	and	r0, r0, r1
   209c8:	cmp	r0, #0
   209cc:	beq	209f8 <__assert_fail@plt+0xf4f4>
   209d0:	ldr	r0, [sp, #8]
   209d4:	ldr	r0, [r0, #4]
   209d8:	ldr	r1, [sp, #8]
   209dc:	ldr	r2, [r1, #40]	; 0x28
   209e0:	add	r3, r2, #1
   209e4:	str	r3, [r1, #40]	; 0x28
   209e8:	add	r0, r0, r2
   209ec:	ldrb	r0, [r0]
   209f0:	strb	r0, [fp, #-1]
   209f4:	b	20a54 <__assert_fail@plt+0xf550>
   209f8:	ldr	r0, [sp, #8]
   209fc:	ldr	r1, [sp, #8]
   20a00:	ldr	r1, [r1, #40]	; 0x28
   20a04:	bl	2063c <__assert_fail@plt+0xf138>
   20a08:	ldr	r1, [sp, #8]
   20a0c:	ldr	lr, [r1, #40]	; 0x28
   20a10:	add	r0, lr, r0
   20a14:	str	r0, [r1, #40]	; 0x28
   20a18:	ldr	r0, [sp]
   20a1c:	strb	r0, [fp, #-1]
   20a20:	b	20a54 <__assert_fail@plt+0xf550>
   20a24:	ldr	r0, [sp, #8]
   20a28:	ldr	r0, [r0]
   20a2c:	ldr	r1, [sp, #8]
   20a30:	ldr	r1, [r1, #24]
   20a34:	ldr	r2, [sp, #8]
   20a38:	ldr	r3, [r2, #40]	; 0x28
   20a3c:	add	ip, r3, #1
   20a40:	str	ip, [r2, #40]	; 0x28
   20a44:	add	r1, r1, r3
   20a48:	add	r0, r0, r1
   20a4c:	ldrb	r0, [r0]
   20a50:	strb	r0, [fp, #-1]
   20a54:	ldrb	r0, [fp, #-1]
   20a58:	mov	sp, fp
   20a5c:	pop	{fp, pc}
   20a60:	push	{fp, lr}
   20a64:	mov	fp, sp
   20a68:	sub	sp, sp, #16
   20a6c:	strb	r0, [fp, #-1]
   20a70:	str	r1, [sp, #8]
   20a74:	ldr	r0, [sp, #8]
   20a78:	ldr	r0, [r0, #92]	; 0x5c
   20a7c:	cmp	r0, #1
   20a80:	ble	20a94 <__assert_fail@plt+0xf590>
   20a84:	ldrb	r0, [fp, #-1]
   20a88:	bl	1142c <btowc@plt>
   20a8c:	str	r0, [sp, #4]
   20a90:	b	20a9c <__assert_fail@plt+0xf598>
   20a94:	ldrb	r0, [fp, #-1]
   20a98:	str	r0, [sp, #4]
   20a9c:	ldr	r0, [sp, #4]
   20aa0:	mov	sp, fp
   20aa4:	pop	{fp, pc}
   20aa8:	push	{fp, lr}
   20aac:	mov	fp, sp
   20ab0:	sub	sp, sp, #40	; 0x28
   20ab4:	str	r0, [fp, #-8]
   20ab8:	str	r1, [fp, #-12]
   20abc:	str	r2, [fp, #-16]
   20ac0:	mvn	r0, #0
   20ac4:	str	r0, [sp, #20]
   20ac8:	ldr	r0, [fp, #-12]
   20acc:	ldr	r1, [fp, #-8]
   20ad0:	ldr	r2, [fp, #-16]
   20ad4:	bl	1b370 <__assert_fail@plt+0x9e6c>
   20ad8:	ldr	r0, [fp, #-12]
   20adc:	ldrb	r0, [r0]
   20ae0:	strb	r0, [sp, #19]
   20ae4:	ldr	r0, [fp, #-12]
   20ae8:	ldr	r0, [r0, #4]
   20aec:	and	r0, r0, #255	; 0xff
   20af0:	cmp	r0, #2
   20af4:	bne	20b04 <__assert_fail@plt+0xf600>
   20af8:	mvn	r0, #1
   20afc:	str	r0, [fp, #-4]
   20b00:	b	20bfc <__assert_fail@plt+0xf6f8>
   20b04:	ldr	r0, [fp, #-12]
   20b08:	ldr	r0, [r0, #4]
   20b0c:	and	r0, r0, #255	; 0xff
   20b10:	cmp	r0, #24
   20b14:	beq	20b24 <__assert_fail@plt+0xf620>
   20b18:	ldrb	r0, [sp, #19]
   20b1c:	cmp	r0, #44	; 0x2c
   20b20:	bne	20b28 <__assert_fail@plt+0xf624>
   20b24:	b	20bf4 <__assert_fail@plt+0xf6f0>
   20b28:	ldr	r0, [fp, #-12]
   20b2c:	ldr	r0, [r0, #4]
   20b30:	and	r0, r0, #255	; 0xff
   20b34:	cmp	r0, #1
   20b38:	bne	20b64 <__assert_fail@plt+0xf660>
   20b3c:	ldrb	r0, [sp, #19]
   20b40:	cmp	r0, #48	; 0x30
   20b44:	blt	20b64 <__assert_fail@plt+0xf660>
   20b48:	ldrb	r0, [sp, #19]
   20b4c:	movw	r1, #57	; 0x39
   20b50:	cmp	r1, r0
   20b54:	blt	20b64 <__assert_fail@plt+0xf660>
   20b58:	ldr	r0, [sp, #20]
   20b5c:	cmn	r0, #2
   20b60:	bne	20b70 <__assert_fail@plt+0xf66c>
   20b64:	mvn	r0, #1
   20b68:	str	r0, [sp, #12]
   20b6c:	b	20be8 <__assert_fail@plt+0xf6e4>
   20b70:	ldr	r0, [sp, #20]
   20b74:	cmn	r0, #1
   20b78:	bne	20b8c <__assert_fail@plt+0xf688>
   20b7c:	ldrb	r0, [sp, #19]
   20b80:	sub	r0, r0, #48	; 0x30
   20b84:	str	r0, [sp, #8]
   20b88:	b	20be0 <__assert_fail@plt+0xf6dc>
   20b8c:	ldr	r0, [sp, #20]
   20b90:	movw	r1, #10
   20b94:	mul	r0, r0, r1
   20b98:	ldrb	r1, [sp, #19]
   20b9c:	add	r0, r0, r1
   20ba0:	sub	r0, r0, #48	; 0x30
   20ba4:	movw	r1, #32768	; 0x8000
   20ba8:	cmp	r1, r0
   20bac:	bge	20bbc <__assert_fail@plt+0xf6b8>
   20bb0:	movw	r0, #32768	; 0x8000
   20bb4:	str	r0, [sp, #4]
   20bb8:	b	20bd8 <__assert_fail@plt+0xf6d4>
   20bbc:	ldr	r0, [sp, #20]
   20bc0:	movw	r1, #10
   20bc4:	mul	r0, r0, r1
   20bc8:	ldrb	r1, [sp, #19]
   20bcc:	add	r0, r0, r1
   20bd0:	sub	r0, r0, #48	; 0x30
   20bd4:	str	r0, [sp, #4]
   20bd8:	ldr	r0, [sp, #4]
   20bdc:	str	r0, [sp, #8]
   20be0:	ldr	r0, [sp, #8]
   20be4:	str	r0, [sp, #12]
   20be8:	ldr	r0, [sp, #12]
   20bec:	str	r0, [sp, #20]
   20bf0:	b	20ac8 <__assert_fail@plt+0xf5c4>
   20bf4:	ldr	r0, [sp, #20]
   20bf8:	str	r0, [fp, #-4]
   20bfc:	ldr	r0, [fp, #-4]
   20c00:	mov	sp, fp
   20c04:	pop	{fp, pc}
   20c08:	push	{fp, lr}
   20c0c:	mov	fp, sp
   20c10:	sub	sp, sp, #40	; 0x28
   20c14:	str	r0, [fp, #-8]
   20c18:	str	r1, [fp, #-12]
   20c1c:	add	r0, sp, #20
   20c20:	str	r0, [sp, #16]
   20c24:	ldr	r0, [fp, #-8]
   20c28:	ldr	r0, [r0]
   20c2c:	str	r0, [sp, #12]
   20c30:	ldr	r0, [fp, #-8]
   20c34:	str	r0, [fp, #-16]
   20c38:	ldr	r0, [fp, #-12]
   20c3c:	ldr	r1, [fp, #-16]
   20c40:	add	r3, r1, #20
   20c44:	movw	r1, #0
   20c48:	str	r1, [sp, #4]
   20c4c:	ldr	r2, [sp, #4]
   20c50:	bl	1d698 <__assert_fail@plt+0xc194>
   20c54:	ldr	r1, [sp, #16]
   20c58:	str	r0, [r1]
   20c5c:	ldr	r0, [sp, #16]
   20c60:	ldr	r0, [r0]
   20c64:	movw	r1, #0
   20c68:	cmp	r0, r1
   20c6c:	bne	20c7c <__assert_fail@plt+0xf778>
   20c70:	movw	r0, #0
   20c74:	str	r0, [fp, #-4]
   20c78:	b	20d8c <__assert_fail@plt+0xf888>
   20c7c:	ldr	r0, [sp, #12]
   20c80:	ldr	r1, [sp, #16]
   20c84:	ldr	r1, [r1]
   20c88:	str	r0, [r1]
   20c8c:	ldr	r0, [sp, #16]
   20c90:	ldr	r0, [r0]
   20c94:	ldr	r1, [r0, #24]
   20c98:	mvn	r2, #262144	; 0x40000
   20c9c:	and	r1, r1, r2
   20ca0:	orr	r1, r1, #262144	; 0x40000
   20ca4:	str	r1, [r0, #24]
   20ca8:	ldr	r0, [sp, #16]
   20cac:	ldr	r0, [r0]
   20cb0:	str	r0, [sp, #12]
   20cb4:	ldr	r0, [fp, #-16]
   20cb8:	ldr	r0, [r0, #4]
   20cbc:	movw	r1, #0
   20cc0:	cmp	r0, r1
   20cc4:	beq	20ce4 <__assert_fail@plt+0xf7e0>
   20cc8:	ldr	r0, [fp, #-16]
   20ccc:	ldr	r0, [r0, #4]
   20cd0:	str	r0, [fp, #-16]
   20cd4:	ldr	r0, [sp, #12]
   20cd8:	add	r0, r0, #4
   20cdc:	str	r0, [sp, #16]
   20ce0:	b	20d88 <__assert_fail@plt+0xf884>
   20ce4:	movw	r0, #0
   20ce8:	str	r0, [sp, #8]
   20cec:	ldr	r0, [fp, #-16]
   20cf0:	ldr	r0, [r0, #8]
   20cf4:	ldr	r1, [sp, #8]
   20cf8:	cmp	r0, r1
   20cfc:	movw	r0, #1
   20d00:	str	r0, [sp]
   20d04:	beq	20d24 <__assert_fail@plt+0xf820>
   20d08:	ldr	r0, [fp, #-16]
   20d0c:	ldr	r0, [r0, #8]
   20d10:	movw	r1, #0
   20d14:	cmp	r0, r1
   20d18:	movw	r0, #0
   20d1c:	moveq	r0, #1
   20d20:	str	r0, [sp]
   20d24:	ldr	r0, [sp]
   20d28:	tst	r0, #1
   20d2c:	beq	20d70 <__assert_fail@plt+0xf86c>
   20d30:	ldr	r0, [fp, #-16]
   20d34:	str	r0, [sp, #8]
   20d38:	ldr	r0, [fp, #-16]
   20d3c:	ldr	r0, [r0]
   20d40:	str	r0, [fp, #-16]
   20d44:	ldr	r0, [sp, #12]
   20d48:	ldr	r0, [r0]
   20d4c:	str	r0, [sp, #12]
   20d50:	ldr	r0, [fp, #-16]
   20d54:	movw	r1, #0
   20d58:	cmp	r0, r1
   20d5c:	bne	20d6c <__assert_fail@plt+0xf868>
   20d60:	ldr	r0, [sp, #20]
   20d64:	str	r0, [fp, #-4]
   20d68:	b	20d8c <__assert_fail@plt+0xf888>
   20d6c:	b	20cec <__assert_fail@plt+0xf7e8>
   20d70:	ldr	r0, [fp, #-16]
   20d74:	ldr	r0, [r0, #8]
   20d78:	str	r0, [fp, #-16]
   20d7c:	ldr	r0, [sp, #12]
   20d80:	add	r0, r0, #8
   20d84:	str	r0, [sp, #16]
   20d88:	b	20c38 <__assert_fail@plt+0xf734>
   20d8c:	ldr	r0, [fp, #-4]
   20d90:	mov	sp, fp
   20d94:	pop	{fp, pc}
   20d98:	sub	sp, sp, #12
   20d9c:	str	r0, [sp, #8]
   20da0:	str	r1, [sp, #4]
   20da4:	ldr	r0, [sp, #8]
   20da8:	str	r0, [sp]
   20dac:	ldr	r0, [sp, #4]
   20db0:	ldr	r0, [r0, #24]
   20db4:	and	r0, r0, #255	; 0xff
   20db8:	cmp	r0, #17
   20dbc:	bne	20dec <__assert_fail@plt+0xf8e8>
   20dc0:	ldr	r0, [sp, #4]
   20dc4:	ldr	r0, [r0, #20]
   20dc8:	ldr	r1, [sp]
   20dcc:	cmp	r0, r1
   20dd0:	bne	20dec <__assert_fail@plt+0xf8e8>
   20dd4:	ldr	r0, [sp, #4]
   20dd8:	ldr	r1, [r0, #24]
   20ddc:	mvn	r2, #524288	; 0x80000
   20de0:	and	r1, r1, r2
   20de4:	orr	r1, r1, #524288	; 0x80000
   20de8:	str	r1, [r0, #24]
   20dec:	movw	r0, #0
   20df0:	add	sp, sp, #12
   20df4:	bx	lr
   20df8:	push	{fp, lr}
   20dfc:	mov	fp, sp
   20e00:	sub	sp, sp, #40	; 0x28
   20e04:	str	r0, [fp, #-8]
   20e08:	str	r1, [fp, #-12]
   20e0c:	str	r2, [fp, #-16]
   20e10:	ldr	r0, [fp, #-8]
   20e14:	str	r0, [sp, #20]
   20e18:	ldr	r0, [fp, #-12]
   20e1c:	ldr	r1, [fp, #-16]
   20e20:	ldr	r2, [sp, #20]
   20e24:	str	r0, [sp, #8]
   20e28:	mov	r0, r1
   20e2c:	mov	r1, r2
   20e30:	ldr	r2, [sp, #8]
   20e34:	blx	r2
   20e38:	str	r0, [sp, #16]
   20e3c:	ldr	r0, [sp, #16]
   20e40:	cmp	r0, #0
   20e44:	beq	20e54 <__assert_fail@plt+0xf950>
   20e48:	ldr	r0, [sp, #16]
   20e4c:	str	r0, [fp, #-4]
   20e50:	b	20f08 <__assert_fail@plt+0xfa04>
   20e54:	ldr	r0, [sp, #20]
   20e58:	ldr	r0, [r0, #4]
   20e5c:	movw	r1, #0
   20e60:	cmp	r0, r1
   20e64:	beq	20e78 <__assert_fail@plt+0xf974>
   20e68:	ldr	r0, [sp, #20]
   20e6c:	ldr	r0, [r0, #4]
   20e70:	str	r0, [sp, #20]
   20e74:	b	20f04 <__assert_fail@plt+0xfa00>
   20e78:	movw	r0, #0
   20e7c:	str	r0, [sp, #12]
   20e80:	ldr	r0, [sp, #20]
   20e84:	ldr	r0, [r0, #8]
   20e88:	ldr	r1, [sp, #12]
   20e8c:	cmp	r0, r1
   20e90:	movw	r0, #1
   20e94:	str	r0, [sp, #4]
   20e98:	beq	20eb8 <__assert_fail@plt+0xf9b4>
   20e9c:	ldr	r0, [sp, #20]
   20ea0:	ldr	r0, [r0, #8]
   20ea4:	movw	r1, #0
   20ea8:	cmp	r0, r1
   20eac:	movw	r0, #0
   20eb0:	moveq	r0, #1
   20eb4:	str	r0, [sp, #4]
   20eb8:	ldr	r0, [sp, #4]
   20ebc:	tst	r0, #1
   20ec0:	beq	20ef8 <__assert_fail@plt+0xf9f4>
   20ec4:	ldr	r0, [sp, #20]
   20ec8:	str	r0, [sp, #12]
   20ecc:	ldr	r0, [sp, #20]
   20ed0:	ldr	r0, [r0]
   20ed4:	str	r0, [sp, #20]
   20ed8:	ldr	r0, [sp, #20]
   20edc:	movw	r1, #0
   20ee0:	cmp	r0, r1
   20ee4:	bne	20ef4 <__assert_fail@plt+0xf9f0>
   20ee8:	movw	r0, #0
   20eec:	str	r0, [fp, #-4]
   20ef0:	b	20f08 <__assert_fail@plt+0xfa04>
   20ef4:	b	20e80 <__assert_fail@plt+0xf97c>
   20ef8:	ldr	r0, [sp, #20]
   20efc:	ldr	r0, [r0, #8]
   20f00:	str	r0, [sp, #20]
   20f04:	b	20e18 <__assert_fail@plt+0xf914>
   20f08:	ldr	r0, [fp, #-4]
   20f0c:	mov	sp, fp
   20f10:	pop	{fp, pc}
   20f14:	sub	sp, sp, #20
   20f18:	str	r0, [sp, #16]
   20f1c:	str	r1, [sp, #12]
   20f20:	ldr	r0, [sp, #16]
   20f24:	str	r0, [sp, #8]
   20f28:	ldr	r0, [sp, #12]
   20f2c:	ldr	r0, [r0, #24]
   20f30:	and	r0, r0, #255	; 0xff
   20f34:	cmp	r0, #4
   20f38:	bne	20f9c <__assert_fail@plt+0xfa98>
   20f3c:	ldr	r0, [sp, #8]
   20f40:	ldr	r0, [r0, #132]	; 0x84
   20f44:	movw	r1, #0
   20f48:	cmp	r0, r1
   20f4c:	beq	20f9c <__assert_fail@plt+0xfa98>
   20f50:	ldr	r0, [sp, #12]
   20f54:	ldr	r0, [r0, #20]
   20f58:	str	r0, [sp, #4]
   20f5c:	ldr	r0, [sp, #8]
   20f60:	ldr	r0, [r0, #132]	; 0x84
   20f64:	ldr	r1, [sp, #4]
   20f68:	add	r0, r0, r1, lsl #2
   20f6c:	ldr	r0, [r0]
   20f70:	ldr	r1, [sp, #12]
   20f74:	str	r0, [r1, #20]
   20f78:	ldr	r0, [sp, #12]
   20f7c:	ldr	r0, [r0, #20]
   20f80:	movw	r1, #1
   20f84:	lsl	r0, r1, r0
   20f88:	ldr	r1, [sp, #8]
   20f8c:	ldr	r2, [r1, #80]	; 0x50
   20f90:	orr	r0, r2, r0
   20f94:	str	r0, [r1, #80]	; 0x50
   20f98:	b	2107c <__assert_fail@plt+0xfb78>
   20f9c:	ldr	r0, [sp, #12]
   20fa0:	ldr	r0, [r0, #24]
   20fa4:	and	r0, r0, #255	; 0xff
   20fa8:	cmp	r0, #17
   20fac:	bne	21078 <__assert_fail@plt+0xfb74>
   20fb0:	ldr	r0, [sp, #12]
   20fb4:	ldr	r0, [r0, #4]
   20fb8:	movw	r1, #0
   20fbc:	cmp	r0, r1
   20fc0:	beq	21078 <__assert_fail@plt+0xfb74>
   20fc4:	ldr	r0, [sp, #12]
   20fc8:	ldr	r0, [r0, #4]
   20fcc:	ldr	r0, [r0, #24]
   20fd0:	and	r0, r0, #255	; 0xff
   20fd4:	cmp	r0, #17
   20fd8:	bne	21078 <__assert_fail@plt+0xfb74>
   20fdc:	ldr	r0, [sp, #12]
   20fe0:	ldr	r0, [r0, #4]
   20fe4:	ldr	r0, [r0, #20]
   20fe8:	str	r0, [sp]
   20fec:	ldr	r0, [sp, #12]
   20ff0:	ldr	r0, [r0, #4]
   20ff4:	ldr	r0, [r0, #4]
   20ff8:	ldr	r1, [sp, #12]
   20ffc:	str	r0, [r1, #4]
   21000:	ldr	r0, [sp, #12]
   21004:	ldr	r0, [r0, #4]
   21008:	movw	r1, #0
   2100c:	cmp	r0, r1
   21010:	beq	21024 <__assert_fail@plt+0xfb20>
   21014:	ldr	r0, [sp, #12]
   21018:	ldr	r1, [sp, #12]
   2101c:	ldr	r1, [r1, #4]
   21020:	str	r0, [r1]
   21024:	ldr	r0, [sp, #8]
   21028:	ldr	r0, [r0, #132]	; 0x84
   2102c:	ldr	r1, [sp, #12]
   21030:	ldr	r1, [r1, #20]
   21034:	ldr	r1, [r0, r1, lsl #2]
   21038:	ldr	r2, [sp]
   2103c:	add	r0, r0, r2, lsl #2
   21040:	str	r1, [r0]
   21044:	ldr	r0, [sp]
   21048:	cmp	r0, #32
   2104c:	bge	21074 <__assert_fail@plt+0xfb70>
   21050:	ldr	r0, [sp]
   21054:	movw	r1, #1
   21058:	lsl	r0, r1, r0
   2105c:	mvn	r1, #0
   21060:	eor	r0, r0, r1
   21064:	ldr	r1, [sp, #8]
   21068:	ldr	r2, [r1, #80]	; 0x50
   2106c:	and	r0, r2, r0
   21070:	str	r0, [r1, #80]	; 0x50
   21074:	b	21078 <__assert_fail@plt+0xfb74>
   21078:	b	2107c <__assert_fail@plt+0xfb78>
   2107c:	movw	r0, #0
   21080:	add	sp, sp, #20
   21084:	bx	lr
   21088:	push	{fp, lr}
   2108c:	mov	fp, sp
   21090:	sub	sp, sp, #16
   21094:	str	r0, [fp, #-4]
   21098:	str	r1, [sp, #8]
   2109c:	ldr	r0, [fp, #-4]
   210a0:	str	r0, [sp, #4]
   210a4:	movw	r0, #0
   210a8:	str	r0, [sp]
   210ac:	ldr	r1, [sp, #8]
   210b0:	ldr	r1, [r1, #4]
   210b4:	cmp	r1, r0
   210b8:	beq	21118 <__assert_fail@plt+0xfc14>
   210bc:	ldr	r0, [sp, #8]
   210c0:	ldr	r0, [r0, #4]
   210c4:	ldr	r0, [r0, #24]
   210c8:	and	r0, r0, #255	; 0xff
   210cc:	cmp	r0, #17
   210d0:	bne	21118 <__assert_fail@plt+0xfc14>
   210d4:	ldr	r1, [sp, #4]
   210d8:	ldr	r0, [sp, #8]
   210dc:	ldr	r2, [r0, #4]
   210e0:	mov	r0, sp
   210e4:	bl	2188c <__assert_fail@plt+0x10388>
   210e8:	ldr	r1, [sp, #8]
   210ec:	str	r0, [r1, #4]
   210f0:	ldr	r0, [sp, #8]
   210f4:	ldr	r0, [r0, #4]
   210f8:	movw	r1, #0
   210fc:	cmp	r0, r1
   21100:	beq	21114 <__assert_fail@plt+0xfc10>
   21104:	ldr	r0, [sp, #8]
   21108:	ldr	r1, [sp, #8]
   2110c:	ldr	r1, [r1, #4]
   21110:	str	r0, [r1]
   21114:	b	21118 <__assert_fail@plt+0xfc14>
   21118:	ldr	r0, [sp, #8]
   2111c:	ldr	r0, [r0, #8]
   21120:	movw	r1, #0
   21124:	cmp	r0, r1
   21128:	beq	21188 <__assert_fail@plt+0xfc84>
   2112c:	ldr	r0, [sp, #8]
   21130:	ldr	r0, [r0, #8]
   21134:	ldr	r0, [r0, #24]
   21138:	and	r0, r0, #255	; 0xff
   2113c:	cmp	r0, #17
   21140:	bne	21188 <__assert_fail@plt+0xfc84>
   21144:	ldr	r1, [sp, #4]
   21148:	ldr	r0, [sp, #8]
   2114c:	ldr	r2, [r0, #8]
   21150:	mov	r0, sp
   21154:	bl	2188c <__assert_fail@plt+0x10388>
   21158:	ldr	r1, [sp, #8]
   2115c:	str	r0, [r1, #8]
   21160:	ldr	r0, [sp, #8]
   21164:	ldr	r0, [r0, #8]
   21168:	movw	r1, #0
   2116c:	cmp	r0, r1
   21170:	beq	21184 <__assert_fail@plt+0xfc80>
   21174:	ldr	r0, [sp, #8]
   21178:	ldr	r1, [sp, #8]
   2117c:	ldr	r1, [r1, #8]
   21180:	str	r0, [r1]
   21184:	b	21188 <__assert_fail@plt+0xfc84>
   21188:	ldr	r0, [sp]
   2118c:	mov	sp, fp
   21190:	pop	{fp, pc}
   21194:	push	{fp, lr}
   21198:	mov	fp, sp
   2119c:	sub	sp, sp, #24
   211a0:	str	r0, [fp, #-8]
   211a4:	str	r1, [sp, #12]
   211a8:	ldr	r0, [fp, #-8]
   211ac:	str	r0, [sp, #8]
   211b0:	ldr	r0, [sp, #12]
   211b4:	ldr	r0, [r0, #24]
   211b8:	and	r0, r0, #255	; 0xff
   211bc:	cmp	r0, #16
   211c0:	bne	211f0 <__assert_fail@plt+0xfcec>
   211c4:	ldr	r0, [sp, #12]
   211c8:	ldr	r0, [r0, #4]
   211cc:	ldr	r0, [r0, #12]
   211d0:	ldr	r1, [sp, #12]
   211d4:	str	r0, [r1, #12]
   211d8:	ldr	r0, [sp, #12]
   211dc:	ldr	r0, [r0, #4]
   211e0:	ldr	r0, [r0, #28]
   211e4:	ldr	r1, [sp, #12]
   211e8:	str	r0, [r1, #28]
   211ec:	b	2128c <__assert_fail@plt+0xfd88>
   211f0:	ldr	r0, [sp, #12]
   211f4:	str	r0, [r0, #12]
   211f8:	ldr	r0, [sp, #8]
   211fc:	ldr	r1, [sp, #12]
   21200:	ldr	r2, [r1, #20]
   21204:	ldr	r1, [r1, #24]
   21208:	str	r1, [sp, #4]
   2120c:	mov	r1, r2
   21210:	ldr	r2, [sp, #4]
   21214:	bl	21ab4 <__assert_fail@plt+0x105b0>
   21218:	ldr	r1, [sp, #12]
   2121c:	str	r0, [r1, #28]
   21220:	ldr	r0, [sp, #12]
   21224:	ldr	r0, [r0, #28]
   21228:	cmn	r0, #1
   2122c:	bne	2123c <__assert_fail@plt+0xfd38>
   21230:	movw	r0, #12
   21234:	str	r0, [fp, #-4]
   21238:	b	21294 <__assert_fail@plt+0xfd90>
   2123c:	ldr	r0, [sp, #12]
   21240:	ldr	r0, [r0, #24]
   21244:	and	r0, r0, #255	; 0xff
   21248:	cmp	r0, #12
   2124c:	bne	21288 <__assert_fail@plt+0xfd84>
   21250:	ldr	r0, [pc, #72]	; 212a0 <__assert_fail@plt+0xfd9c>
   21254:	ldr	r1, [sp, #12]
   21258:	ldr	r2, [r1, #20]
   2125c:	ldr	r1, [r1, #28]
   21260:	ldr	r3, [sp, #8]
   21264:	ldr	r3, [r3]
   21268:	add	r1, r3, r1, lsl #3
   2126c:	ldr	r3, [r1, #4]
   21270:	movw	ip, #1023	; 0x3ff
   21274:	and	r2, r2, ip
   21278:	lsl	r2, r2, #8
   2127c:	and	r0, r3, r0
   21280:	orr	r0, r0, r2
   21284:	str	r0, [r1, #4]
   21288:	b	2128c <__assert_fail@plt+0xfd88>
   2128c:	movw	r0, #0
   21290:	str	r0, [fp, #-4]
   21294:	ldr	r0, [fp, #-4]
   21298:	mov	sp, fp
   2129c:	pop	{fp, pc}
   212a0:			; <UNDEFINED> instruction: 0xfffc00ff
   212a4:	sub	sp, sp, #12
   212a8:	str	r0, [sp, #8]
   212ac:	str	r1, [sp, #4]
   212b0:	ldr	r0, [sp, #4]
   212b4:	ldrb	r0, [r0, #24]
   212b8:	mov	r1, r0
   212bc:	cmp	r0, #11
   212c0:	str	r1, [sp]
   212c4:	beq	212dc <__assert_fail@plt+0xfdd8>
   212c8:	b	212cc <__assert_fail@plt+0xfdc8>
   212cc:	ldr	r0, [sp]
   212d0:	cmp	r0, #16
   212d4:	beq	212f0 <__assert_fail@plt+0xfdec>
   212d8:	b	21320 <__assert_fail@plt+0xfe1c>
   212dc:	ldr	r0, [sp, #4]
   212e0:	ldr	r1, [sp, #4]
   212e4:	ldr	r1, [r1, #4]
   212e8:	str	r0, [r1, #16]
   212ec:	b	21374 <__assert_fail@plt+0xfe70>
   212f0:	ldr	r0, [sp, #4]
   212f4:	ldr	r0, [r0, #8]
   212f8:	ldr	r0, [r0, #12]
   212fc:	ldr	r1, [sp, #4]
   21300:	ldr	r1, [r1, #4]
   21304:	str	r0, [r1, #16]
   21308:	ldr	r0, [sp, #4]
   2130c:	ldr	r0, [r0, #16]
   21310:	ldr	r1, [sp, #4]
   21314:	ldr	r1, [r1, #8]
   21318:	str	r0, [r1, #16]
   2131c:	b	21374 <__assert_fail@plt+0xfe70>
   21320:	ldr	r0, [sp, #4]
   21324:	ldr	r0, [r0, #4]
   21328:	movw	r1, #0
   2132c:	cmp	r0, r1
   21330:	beq	21348 <__assert_fail@plt+0xfe44>
   21334:	ldr	r0, [sp, #4]
   21338:	ldr	r0, [r0, #16]
   2133c:	ldr	r1, [sp, #4]
   21340:	ldr	r1, [r1, #4]
   21344:	str	r0, [r1, #16]
   21348:	ldr	r0, [sp, #4]
   2134c:	ldr	r0, [r0, #8]
   21350:	movw	r1, #0
   21354:	cmp	r0, r1
   21358:	beq	21370 <__assert_fail@plt+0xfe6c>
   2135c:	ldr	r0, [sp, #4]
   21360:	ldr	r0, [r0, #16]
   21364:	ldr	r1, [sp, #4]
   21368:	ldr	r1, [r1, #8]
   2136c:	str	r0, [r1, #16]
   21370:	b	21374 <__assert_fail@plt+0xfe70>
   21374:	movw	r0, #0
   21378:	add	sp, sp, #12
   2137c:	bx	lr
   21380:	push	{fp, lr}
   21384:	mov	fp, sp
   21388:	sub	sp, sp, #32
   2138c:	str	r0, [fp, #-4]
   21390:	str	r1, [fp, #-8]
   21394:	ldr	r0, [fp, #-4]
   21398:	str	r0, [fp, #-12]
   2139c:	ldr	r0, [fp, #-8]
   213a0:	ldr	r0, [r0, #28]
   213a4:	str	r0, [sp, #16]
   213a8:	mov	r0, #0
   213ac:	str	r0, [sp, #12]
   213b0:	ldr	r0, [fp, #-8]
   213b4:	ldrb	r0, [r0, #24]
   213b8:	sub	r0, r0, #2
   213bc:	cmp	r0, #14
   213c0:	str	r0, [sp]
   213c4:	bhi	215a0 <__assert_fail@plt+0x1009c>
   213c8:	add	r0, pc, #8
   213cc:	ldr	r1, [sp]
   213d0:	ldr	r0, [r0, r1, lsl #2]
   213d4:	mov	pc, r0
   213d8:	andeq	r1, r2, r8, lsl r4
   213dc:	andeq	r1, r2, r0, lsr #11
   213e0:	andeq	r1, r2, r0, asr #10
   213e4:	andeq	r1, r2, r0, lsr #11
   213e8:	andeq	r1, r2, r0, lsr #11
   213ec:	andeq	r1, r2, r0, lsr #11
   213f0:	andeq	r1, r2, r0, lsl r5
   213f4:	andeq	r1, r2, r0, lsl r5
   213f8:	andeq	r1, r2, r4, lsr r4
   213fc:	andeq	r1, r2, r4, lsr r4
   21400:	andeq	r1, r2, r0, lsl r5
   21404:	andeq	r1, r2, r0, lsr #11
   21408:	andeq	r1, r2, r0, lsr #11
   2140c:	andeq	r1, r2, r0, lsr #11
   21410:	andeq	r1, r2, r4, lsl r4
   21414:	b	215dc <__assert_fail@plt+0x100d8>
   21418:	ldr	r0, [fp, #-8]
   2141c:	ldr	r0, [r0, #16]
   21420:	movw	r1, #0
   21424:	cmp	r0, r1
   21428:	bne	21430 <__assert_fail@plt+0xff2c>
   2142c:	b	21430 <__assert_fail@plt+0xff2c>
   21430:	b	215dc <__assert_fail@plt+0x100d8>
   21434:	ldr	r0, [fp, #-12]
   21438:	ldrb	r1, [r0, #88]	; 0x58
   2143c:	bic	r1, r1, #1
   21440:	movw	r2, #1
   21444:	orr	r1, r1, r2
   21448:	strb	r1, [r0, #88]	; 0x58
   2144c:	ldr	r0, [fp, #-8]
   21450:	ldr	r0, [r0, #4]
   21454:	movw	r1, #0
   21458:	cmp	r0, r1
   2145c:	beq	21478 <__assert_fail@plt+0xff74>
   21460:	ldr	r0, [fp, #-8]
   21464:	ldr	r0, [r0, #4]
   21468:	ldr	r0, [r0, #12]
   2146c:	ldr	r0, [r0, #28]
   21470:	str	r0, [sp, #8]
   21474:	b	21488 <__assert_fail@plt+0xff84>
   21478:	ldr	r0, [fp, #-8]
   2147c:	ldr	r0, [r0, #16]
   21480:	ldr	r0, [r0, #28]
   21484:	str	r0, [sp, #8]
   21488:	ldr	r0, [fp, #-8]
   2148c:	ldr	r0, [r0, #8]
   21490:	movw	r1, #0
   21494:	cmp	r0, r1
   21498:	beq	214b4 <__assert_fail@plt+0xffb0>
   2149c:	ldr	r0, [fp, #-8]
   214a0:	ldr	r0, [r0, #8]
   214a4:	ldr	r0, [r0, #12]
   214a8:	ldr	r0, [r0, #28]
   214ac:	str	r0, [sp, #4]
   214b0:	b	214c4 <__assert_fail@plt+0xffc0>
   214b4:	ldr	r0, [fp, #-8]
   214b8:	ldr	r0, [r0, #16]
   214bc:	ldr	r0, [r0, #28]
   214c0:	str	r0, [sp, #4]
   214c4:	ldr	r0, [sp, #8]
   214c8:	cmn	r0, #1
   214cc:	ble	214d4 <__assert_fail@plt+0xffd0>
   214d0:	b	214d4 <__assert_fail@plt+0xffd0>
   214d4:	ldr	r0, [sp, #4]
   214d8:	cmn	r0, #1
   214dc:	ble	214e4 <__assert_fail@plt+0xffe0>
   214e0:	b	214e4 <__assert_fail@plt+0xffe0>
   214e4:	ldr	r0, [fp, #-12]
   214e8:	ldr	r0, [r0, #20]
   214ec:	ldr	r1, [sp, #16]
   214f0:	movw	r2, #12
   214f4:	mul	r1, r1, r2
   214f8:	add	r0, r0, r1
   214fc:	ldr	r1, [sp, #8]
   21500:	ldr	r2, [sp, #4]
   21504:	bl	21dd0 <__assert_fail@plt+0x108cc>
   21508:	str	r0, [sp, #12]
   2150c:	b	215dc <__assert_fail@plt+0x100d8>
   21510:	ldr	r0, [fp, #-12]
   21514:	ldr	r0, [r0, #20]
   21518:	ldr	r1, [sp, #16]
   2151c:	movw	r2, #12
   21520:	mul	r1, r1, r2
   21524:	add	r0, r0, r1
   21528:	ldr	r1, [fp, #-8]
   2152c:	ldr	r1, [r1, #16]
   21530:	ldr	r1, [r1, #28]
   21534:	bl	21ecc <__assert_fail@plt+0x109c8>
   21538:	str	r0, [sp, #12]
   2153c:	b	215dc <__assert_fail@plt+0x100d8>
   21540:	ldr	r0, [fp, #-8]
   21544:	ldr	r0, [r0, #16]
   21548:	ldr	r0, [r0, #28]
   2154c:	ldr	r1, [fp, #-12]
   21550:	ldr	r1, [r1, #12]
   21554:	ldr	r2, [sp, #16]
   21558:	add	r1, r1, r2, lsl #2
   2155c:	str	r0, [r1]
   21560:	ldr	r0, [fp, #-8]
   21564:	ldr	r0, [r0, #24]
   21568:	and	r0, r0, #255	; 0xff
   2156c:	cmp	r0, #4
   21570:	bne	2159c <__assert_fail@plt+0x10098>
   21574:	ldr	r0, [fp, #-12]
   21578:	ldr	r1, [r0, #12]
   2157c:	ldr	r0, [r0, #20]
   21580:	ldr	r2, [sp, #16]
   21584:	add	r3, r2, r2, lsl #1
   21588:	add	r0, r0, r3, lsl #2
   2158c:	add	r1, r1, r2, lsl #2
   21590:	ldr	r1, [r1]
   21594:	bl	21ecc <__assert_fail@plt+0x109c8>
   21598:	str	r0, [sp, #12]
   2159c:	b	215dc <__assert_fail@plt+0x100d8>
   215a0:	ldr	r0, [fp, #-8]
   215a4:	ldr	r0, [r0, #24]
   215a8:	and	r0, r0, #255	; 0xff
   215ac:	and	r0, r0, #8
   215b0:	cmp	r0, #0
   215b4:	bne	215bc <__assert_fail@plt+0x100b8>
   215b8:	b	215bc <__assert_fail@plt+0x100b8>
   215bc:	ldr	r0, [fp, #-8]
   215c0:	ldr	r0, [r0, #16]
   215c4:	ldr	r0, [r0, #28]
   215c8:	ldr	r1, [fp, #-12]
   215cc:	ldr	r1, [r1, #12]
   215d0:	ldr	r2, [sp, #16]
   215d4:	add	r1, r1, r2, lsl #2
   215d8:	str	r0, [r1]
   215dc:	ldr	r0, [sp, #12]
   215e0:	mov	sp, fp
   215e4:	pop	{fp, pc}
   215e8:	push	{fp, lr}
   215ec:	mov	fp, sp
   215f0:	sub	sp, sp, #32
   215f4:	str	r0, [fp, #-8]
   215f8:	ldr	r0, [fp, #-8]
   215fc:	ldr	r0, [r0, #8]
   21600:	cmp	r0, #0
   21604:	bls	2160c <__assert_fail@plt+0x10108>
   21608:	b	2160c <__assert_fail@plt+0x10108>
   2160c:	movw	r0, #0
   21610:	strb	r0, [fp, #-13]
   21614:	movw	r0, #0
   21618:	str	r0, [fp, #-12]
   2161c:	ldr	r0, [fp, #-12]
   21620:	ldr	r1, [fp, #-8]
   21624:	ldr	r1, [r1, #8]
   21628:	cmp	r0, r1
   2162c:	bne	21650 <__assert_fail@plt+0x1014c>
   21630:	ldrb	r0, [fp, #-13]
   21634:	tst	r0, #1
   21638:	bne	21640 <__assert_fail@plt+0x1013c>
   2163c:	b	2171c <__assert_fail@plt+0x10218>
   21640:	movw	r0, #0
   21644:	strb	r0, [fp, #-13]
   21648:	movw	r0, #0
   2164c:	str	r0, [fp, #-12]
   21650:	ldr	r0, [fp, #-8]
   21654:	ldr	r0, [r0, #24]
   21658:	ldr	r1, [fp, #-12]
   2165c:	movw	r2, #12
   21660:	mul	r1, r1, r2
   21664:	add	r0, r0, r1
   21668:	ldr	r0, [r0, #4]
   2166c:	cmn	r0, #1
   21670:	beq	21678 <__assert_fail@plt+0x10174>
   21674:	b	21678 <__assert_fail@plt+0x10174>
   21678:	ldr	r0, [fp, #-8]
   2167c:	ldr	r0, [r0, #24]
   21680:	ldr	r1, [fp, #-12]
   21684:	movw	r2, #12
   21688:	mul	r1, r1, r2
   2168c:	add	r0, r0, r1
   21690:	ldr	r0, [r0, #4]
   21694:	cmp	r0, #0
   21698:	beq	216a0 <__assert_fail@plt+0x1019c>
   2169c:	b	2170c <__assert_fail@plt+0x10208>
   216a0:	ldr	r1, [fp, #-8]
   216a4:	ldr	r2, [fp, #-12]
   216a8:	mov	r0, sp
   216ac:	movw	r3, #1
   216b0:	and	r3, r3, #1
   216b4:	bl	21f5c <__assert_fail@plt+0x10a58>
   216b8:	str	r0, [sp, #12]
   216bc:	ldr	r0, [sp, #12]
   216c0:	cmp	r0, #0
   216c4:	beq	216d4 <__assert_fail@plt+0x101d0>
   216c8:	ldr	r0, [sp, #12]
   216cc:	str	r0, [fp, #-4]
   216d0:	b	21724 <__assert_fail@plt+0x10220>
   216d4:	ldr	r0, [fp, #-8]
   216d8:	ldr	r0, [r0, #24]
   216dc:	ldr	r1, [fp, #-12]
   216e0:	movw	r2, #12
   216e4:	mul	r1, r1, r2
   216e8:	add	r0, r0, r1
   216ec:	ldr	r0, [r0, #4]
   216f0:	cmp	r0, #0
   216f4:	bne	21708 <__assert_fail@plt+0x10204>
   216f8:	movw	r0, #1
   216fc:	strb	r0, [fp, #-13]
   21700:	ldr	r0, [sp, #8]
   21704:	bl	35268 <__assert_fail@plt+0x23d64>
   21708:	b	2170c <__assert_fail@plt+0x10208>
   2170c:	ldr	r0, [fp, #-12]
   21710:	add	r0, r0, #1
   21714:	str	r0, [fp, #-12]
   21718:	b	2161c <__assert_fail@plt+0x10118>
   2171c:	movw	r0, #0
   21720:	str	r0, [fp, #-4]
   21724:	ldr	r0, [fp, #-4]
   21728:	mov	sp, fp
   2172c:	pop	{fp, pc}
   21730:	push	{fp, lr}
   21734:	mov	fp, sp
   21738:	sub	sp, sp, #24
   2173c:	str	r0, [fp, #-8]
   21740:	movw	r0, #0
   21744:	str	r0, [sp, #8]
   21748:	ldr	r0, [sp, #8]
   2174c:	ldr	r1, [fp, #-8]
   21750:	ldr	r1, [r1, #8]
   21754:	cmp	r0, r1
   21758:	bcs	21790 <__assert_fail@plt+0x1028c>
   2175c:	ldr	r0, [fp, #-8]
   21760:	ldr	r0, [r0, #28]
   21764:	ldr	r1, [sp, #8]
   21768:	movw	r2, #12
   2176c:	mul	r1, r1, r2
   21770:	add	r0, r0, r1
   21774:	movw	r1, #0
   21778:	and	r1, r1, #255	; 0xff
   2177c:	bl	11420 <memset@plt>
   21780:	ldr	r0, [sp, #8]
   21784:	add	r0, r0, #1
   21788:	str	r0, [sp, #8]
   2178c:	b	21748 <__assert_fail@plt+0x10244>
   21790:	movw	r0, #0
   21794:	str	r0, [sp, #12]
   21798:	ldr	r0, [sp, #12]
   2179c:	ldr	r1, [fp, #-8]
   217a0:	ldr	r1, [r1, #8]
   217a4:	cmp	r0, r1
   217a8:	bcs	21878 <__assert_fail@plt+0x10374>
   217ac:	ldr	r0, [fp, #-8]
   217b0:	ldr	r0, [r0, #24]
   217b4:	ldr	r1, [sp, #12]
   217b8:	movw	r2, #12
   217bc:	mul	r1, r1, r2
   217c0:	add	r0, r0, r1
   217c4:	ldr	r0, [r0, #8]
   217c8:	str	r0, [sp]
   217cc:	movw	r0, #0
   217d0:	str	r0, [sp, #8]
   217d4:	ldr	r0, [sp, #8]
   217d8:	ldr	r1, [fp, #-8]
   217dc:	ldr	r1, [r1, #24]
   217e0:	ldr	r2, [sp, #12]
   217e4:	movw	r3, #12
   217e8:	mul	r2, r2, r3
   217ec:	add	r1, r1, r2
   217f0:	ldr	r1, [r1, #4]
   217f4:	cmp	r0, r1
   217f8:	bge	21864 <__assert_fail@plt+0x10360>
   217fc:	ldr	r0, [fp, #-8]
   21800:	ldr	r0, [r0, #28]
   21804:	ldr	r1, [sp]
   21808:	ldr	r2, [sp, #8]
   2180c:	add	r1, r1, r2, lsl #2
   21810:	ldr	r1, [r1]
   21814:	movw	r2, #12
   21818:	mul	r1, r1, r2
   2181c:	add	r0, r0, r1
   21820:	ldr	r1, [sp, #12]
   21824:	bl	230c0 <__assert_fail@plt+0x11bbc>
   21828:	and	r0, r0, #1
   2182c:	strb	r0, [sp, #7]
   21830:	ldrb	r0, [sp, #7]
   21834:	mvn	r1, #0
   21838:	eor	r0, r0, r1
   2183c:	tst	r0, #1
   21840:	beq	21850 <__assert_fail@plt+0x1034c>
   21844:	movw	r0, #12
   21848:	str	r0, [fp, #-4]
   2184c:	b	21880 <__assert_fail@plt+0x1037c>
   21850:	b	21854 <__assert_fail@plt+0x10350>
   21854:	ldr	r0, [sp, #8]
   21858:	add	r0, r0, #1
   2185c:	str	r0, [sp, #8]
   21860:	b	217d4 <__assert_fail@plt+0x102d0>
   21864:	b	21868 <__assert_fail@plt+0x10364>
   21868:	ldr	r0, [sp, #12]
   2186c:	add	r0, r0, #1
   21870:	str	r0, [sp, #12]
   21874:	b	21798 <__assert_fail@plt+0x10294>
   21878:	movw	r0, #0
   2187c:	str	r0, [fp, #-4]
   21880:	ldr	r0, [fp, #-4]
   21884:	mov	sp, fp
   21888:	pop	{fp, pc}
   2188c:	push	{fp, lr}
   21890:	mov	fp, sp
   21894:	sub	sp, sp, #56	; 0x38
   21898:	str	r0, [fp, #-8]
   2189c:	str	r1, [fp, #-12]
   218a0:	str	r2, [fp, #-16]
   218a4:	ldr	r0, [fp, #-12]
   218a8:	ldr	r0, [r0]
   218ac:	str	r0, [fp, #-20]	; 0xffffffec
   218b0:	ldr	r0, [fp, #-16]
   218b4:	ldr	r0, [r0, #4]
   218b8:	str	r0, [fp, #-24]	; 0xffffffe8
   218bc:	ldr	r0, [fp, #-12]
   218c0:	ldrb	r0, [r0, #28]
   218c4:	ubfx	r0, r0, #4, #1
   218c8:	and	r0, r0, #255	; 0xff
   218cc:	cmp	r0, #0
   218d0:	beq	2192c <__assert_fail@plt+0x10428>
   218d4:	ldr	r0, [fp, #-16]
   218d8:	ldr	r0, [r0, #4]
   218dc:	movw	r1, #0
   218e0:	cmp	r0, r1
   218e4:	beq	2192c <__assert_fail@plt+0x10428>
   218e8:	ldr	r0, [fp, #-16]
   218ec:	ldr	r0, [r0, #20]
   218f0:	cmp	r0, #32
   218f4:	bge	2191c <__assert_fail@plt+0x10418>
   218f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   218fc:	ldr	r0, [r0, #80]	; 0x50
   21900:	ldr	r1, [fp, #-16]
   21904:	ldr	r1, [r1, #20]
   21908:	movw	r2, #1
   2190c:	lsl	r1, r2, r1
   21910:	and	r0, r0, r1
   21914:	cmp	r0, #0
   21918:	bne	2192c <__assert_fail@plt+0x10428>
   2191c:	ldr	r0, [fp, #-16]
   21920:	ldr	r0, [r0, #4]
   21924:	str	r0, [fp, #-4]
   21928:	b	21aa8 <__assert_fail@plt+0x105a4>
   2192c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21930:	movw	r1, #0
   21934:	str	r1, [sp, #12]
   21938:	ldr	r2, [sp, #12]
   2193c:	movw	r3, #8
   21940:	bl	1b608 <__assert_fail@plt+0xa104>
   21944:	str	r0, [sp, #28]
   21948:	ldr	r0, [fp, #-20]	; 0xffffffec
   2194c:	movw	r1, #0
   21950:	str	r1, [sp, #8]
   21954:	ldr	r2, [sp, #8]
   21958:	movw	r3, #9
   2195c:	bl	1b608 <__assert_fail@plt+0xa104>
   21960:	str	r0, [sp, #24]
   21964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21968:	movw	r1, #0
   2196c:	cmp	r0, r1
   21970:	beq	21990 <__assert_fail@plt+0x1048c>
   21974:	ldr	r0, [fp, #-20]	; 0xffffffec
   21978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2197c:	ldr	r2, [sp, #24]
   21980:	movw	r3, #16
   21984:	bl	1b608 <__assert_fail@plt+0xa104>
   21988:	str	r0, [sp, #4]
   2198c:	b	21998 <__assert_fail@plt+0x10494>
   21990:	ldr	r0, [sp, #24]
   21994:	str	r0, [sp, #4]
   21998:	ldr	r0, [sp, #4]
   2199c:	str	r0, [sp, #20]
   219a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   219a4:	ldr	r1, [sp, #28]
   219a8:	ldr	r2, [sp, #20]
   219ac:	movw	r3, #16
   219b0:	bl	1b608 <__assert_fail@plt+0xa104>
   219b4:	str	r0, [sp, #16]
   219b8:	ldr	r0, [sp, #16]
   219bc:	movw	r1, #0
   219c0:	cmp	r0, r1
   219c4:	movw	r0, #1
   219c8:	str	r0, [sp]
   219cc:	beq	21a18 <__assert_fail@plt+0x10514>
   219d0:	ldr	r0, [sp, #20]
   219d4:	movw	r1, #0
   219d8:	cmp	r0, r1
   219dc:	movw	r0, #1
   219e0:	str	r0, [sp]
   219e4:	beq	21a18 <__assert_fail@plt+0x10514>
   219e8:	ldr	r0, [sp, #28]
   219ec:	movw	r1, #0
   219f0:	cmp	r0, r1
   219f4:	movw	r0, #1
   219f8:	str	r0, [sp]
   219fc:	beq	21a18 <__assert_fail@plt+0x10514>
   21a00:	ldr	r0, [sp, #24]
   21a04:	movw	r1, #0
   21a08:	cmp	r0, r1
   21a0c:	movw	r0, #0
   21a10:	moveq	r0, #1
   21a14:	str	r0, [sp]
   21a18:	ldr	r0, [sp]
   21a1c:	tst	r0, #1
   21a20:	beq	21a3c <__assert_fail@plt+0x10538>
   21a24:	ldr	r0, [fp, #-8]
   21a28:	movw	r1, #12
   21a2c:	str	r1, [r0]
   21a30:	movw	r0, #0
   21a34:	str	r0, [fp, #-4]
   21a38:	b	21aa8 <__assert_fail@plt+0x105a4>
   21a3c:	ldr	r0, [fp, #-16]
   21a40:	ldr	r0, [r0, #20]
   21a44:	ldr	r1, [sp, #24]
   21a48:	str	r0, [r1, #20]
   21a4c:	ldr	r1, [sp, #28]
   21a50:	str	r0, [r1, #20]
   21a54:	ldr	r0, [fp, #-16]
   21a58:	ldr	r0, [r0, #24]
   21a5c:	lsr	r0, r0, #19
   21a60:	and	r0, r0, #1
   21a64:	ldr	r1, [sp, #24]
   21a68:	ldr	r2, [r1, #24]
   21a6c:	and	r0, r0, #1
   21a70:	lsl	r3, r0, #19
   21a74:	mvn	ip, #524288	; 0x80000
   21a78:	and	r2, r2, ip
   21a7c:	orr	r2, r2, r3
   21a80:	str	r2, [r1, #24]
   21a84:	ldr	r1, [sp, #28]
   21a88:	ldr	r2, [r1, #24]
   21a8c:	and	r0, r0, #1
   21a90:	lsl	r0, r0, #19
   21a94:	and	r2, r2, ip
   21a98:	orr	r0, r2, r0
   21a9c:	str	r0, [r1, #24]
   21aa0:	ldr	r0, [sp, #16]
   21aa4:	str	r0, [fp, #-4]
   21aa8:	ldr	r0, [fp, #-4]
   21aac:	mov	sp, fp
   21ab0:	pop	{fp, pc}
   21ab4:	push	{fp, lr}
   21ab8:	mov	fp, sp
   21abc:	sub	sp, sp, #64	; 0x40
   21ac0:	str	r1, [fp, #-12]
   21ac4:	str	r2, [fp, #-8]
   21ac8:	str	r0, [fp, #-16]
   21acc:	ldr	r0, [fp, #-16]
   21ad0:	ldr	r0, [r0, #8]
   21ad4:	ldr	r1, [fp, #-16]
   21ad8:	ldr	r1, [r1, #4]
   21adc:	cmp	r0, r1
   21ae0:	bcc	21c94 <__assert_fail@plt+0x10790>
   21ae4:	ldr	r0, [pc, #732]	; 21dc8 <__assert_fail@plt+0x108c4>
   21ae8:	ldr	r1, [fp, #-16]
   21aec:	ldr	r1, [r1, #4]
   21af0:	lsl	r1, r1, #1
   21af4:	str	r1, [fp, #-20]	; 0xffffffec
   21af8:	movw	r1, #12
   21afc:	str	r1, [sp, #20]
   21b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b04:	cmp	r0, r1
   21b08:	bcs	21b18 <__assert_fail@plt+0x10614>
   21b0c:	mvn	r0, #0
   21b10:	str	r0, [fp, #-4]
   21b14:	b	21dbc <__assert_fail@plt+0x108b8>
   21b18:	ldr	r0, [fp, #-16]
   21b1c:	ldr	r0, [r0]
   21b20:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b24:	lsl	r1, r1, #3
   21b28:	bl	33bb4 <__assert_fail@plt+0x226b0>
   21b2c:	str	r0, [sp, #24]
   21b30:	ldr	r0, [sp, #24]
   21b34:	movw	r1, #0
   21b38:	cmp	r0, r1
   21b3c:	bne	21b4c <__assert_fail@plt+0x10648>
   21b40:	mvn	r0, #0
   21b44:	str	r0, [fp, #-4]
   21b48:	b	21dbc <__assert_fail@plt+0x108b8>
   21b4c:	ldr	r0, [sp, #24]
   21b50:	ldr	r1, [fp, #-16]
   21b54:	str	r0, [r1]
   21b58:	ldr	r0, [fp, #-16]
   21b5c:	ldr	r0, [r0, #12]
   21b60:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b64:	lsl	r1, r1, #2
   21b68:	bl	33bb4 <__assert_fail@plt+0x226b0>
   21b6c:	str	r0, [fp, #-24]	; 0xffffffe8
   21b70:	ldr	r0, [fp, #-16]
   21b74:	ldr	r0, [r0, #16]
   21b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b7c:	lsl	r1, r1, #2
   21b80:	bl	33bb4 <__assert_fail@plt+0x226b0>
   21b84:	str	r0, [fp, #-28]	; 0xffffffe4
   21b88:	ldr	r0, [fp, #-16]
   21b8c:	ldr	r0, [r0, #20]
   21b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b94:	movw	lr, #12
   21b98:	mul	r1, r1, lr
   21b9c:	bl	33bb4 <__assert_fail@plt+0x226b0>
   21ba0:	str	r0, [sp, #32]
   21ba4:	ldr	r0, [fp, #-16]
   21ba8:	ldr	r0, [r0, #24]
   21bac:	ldr	r1, [fp, #-20]	; 0xffffffec
   21bb0:	movw	lr, #12
   21bb4:	mul	r1, r1, lr
   21bb8:	bl	33bb4 <__assert_fail@plt+0x226b0>
   21bbc:	str	r0, [sp, #28]
   21bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21bc4:	movw	r1, #0
   21bc8:	cmp	r0, r1
   21bcc:	movw	r0, #1
   21bd0:	str	r0, [sp, #16]
   21bd4:	beq	21c20 <__assert_fail@plt+0x1071c>
   21bd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21bdc:	movw	r1, #0
   21be0:	cmp	r0, r1
   21be4:	movw	r0, #1
   21be8:	str	r0, [sp, #16]
   21bec:	beq	21c20 <__assert_fail@plt+0x1071c>
   21bf0:	ldr	r0, [sp, #32]
   21bf4:	movw	r1, #0
   21bf8:	cmp	r0, r1
   21bfc:	movw	r0, #1
   21c00:	str	r0, [sp, #16]
   21c04:	beq	21c20 <__assert_fail@plt+0x1071c>
   21c08:	ldr	r0, [sp, #28]
   21c0c:	movw	r1, #0
   21c10:	cmp	r0, r1
   21c14:	movw	r0, #0
   21c18:	moveq	r0, #1
   21c1c:	str	r0, [sp, #16]
   21c20:	ldr	r0, [sp, #16]
   21c24:	tst	r0, #1
   21c28:	beq	21c58 <__assert_fail@plt+0x10754>
   21c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c30:	bl	35268 <__assert_fail@plt+0x23d64>
   21c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21c38:	bl	35268 <__assert_fail@plt+0x23d64>
   21c3c:	ldr	r0, [sp, #32]
   21c40:	bl	35268 <__assert_fail@plt+0x23d64>
   21c44:	ldr	r0, [sp, #28]
   21c48:	bl	35268 <__assert_fail@plt+0x23d64>
   21c4c:	mvn	r0, #0
   21c50:	str	r0, [fp, #-4]
   21c54:	b	21dbc <__assert_fail@plt+0x108b8>
   21c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c5c:	ldr	r1, [fp, #-16]
   21c60:	str	r0, [r1, #12]
   21c64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21c68:	ldr	r1, [fp, #-16]
   21c6c:	str	r0, [r1, #16]
   21c70:	ldr	r0, [sp, #32]
   21c74:	ldr	r1, [fp, #-16]
   21c78:	str	r0, [r1, #20]
   21c7c:	ldr	r0, [sp, #28]
   21c80:	ldr	r1, [fp, #-16]
   21c84:	str	r0, [r1, #24]
   21c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c8c:	ldr	r1, [fp, #-16]
   21c90:	str	r0, [r1, #4]
   21c94:	ldr	r0, [pc, #304]	; 21dcc <__assert_fail@plt+0x108c8>
   21c98:	ldr	r1, [fp, #-16]
   21c9c:	ldr	r2, [r1]
   21ca0:	ldr	r1, [r1, #8]
   21ca4:	add	r1, r2, r1, lsl #3
   21ca8:	vldr	d16, [fp, #-12]
   21cac:	vstr	d16, [r1]
   21cb0:	ldr	r1, [fp, #-16]
   21cb4:	ldr	r2, [r1]
   21cb8:	ldr	r1, [r1, #8]
   21cbc:	add	r1, r2, r1, lsl #3
   21cc0:	ldr	r2, [r1, #4]
   21cc4:	and	r0, r2, r0
   21cc8:	str	r0, [r1, #4]
   21ccc:	ldr	r0, [fp, #-8]
   21cd0:	and	r0, r0, #255	; 0xff
   21cd4:	cmp	r0, #5
   21cd8:	bne	21cf4 <__assert_fail@plt+0x107f0>
   21cdc:	ldr	r0, [fp, #-16]
   21ce0:	ldr	r0, [r0, #92]	; 0x5c
   21ce4:	cmp	r0, #1
   21ce8:	movw	r0, #1
   21cec:	str	r0, [sp, #12]
   21cf0:	bgt	21d0c <__assert_fail@plt+0x10808>
   21cf4:	ldr	r0, [fp, #-8]
   21cf8:	and	r0, r0, #255	; 0xff
   21cfc:	cmp	r0, #6
   21d00:	movw	r0, #0
   21d04:	moveq	r0, #1
   21d08:	str	r0, [sp, #12]
   21d0c:	ldr	r0, [sp, #12]
   21d10:	and	r0, r0, #1
   21d14:	ldr	r1, [fp, #-16]
   21d18:	ldr	r2, [r1]
   21d1c:	ldr	r1, [r1, #8]
   21d20:	add	r1, r2, r1, lsl #3
   21d24:	ldr	r2, [r1, #4]
   21d28:	bic	r2, r2, #1048576	; 0x100000
   21d2c:	orr	r0, r2, r0, lsl #20
   21d30:	str	r0, [r1, #4]
   21d34:	ldr	r0, [fp, #-16]
   21d38:	ldr	r1, [r0, #8]
   21d3c:	ldr	r0, [r0, #12]
   21d40:	add	r0, r0, r1, lsl #2
   21d44:	mvn	r1, #0
   21d48:	str	r1, [r0]
   21d4c:	ldr	r0, [fp, #-16]
   21d50:	ldr	r0, [r0, #20]
   21d54:	ldr	r1, [fp, #-16]
   21d58:	ldr	r1, [r1, #8]
   21d5c:	movw	r2, #12
   21d60:	mul	r1, r1, r2
   21d64:	add	r0, r0, r1
   21d68:	movw	r1, #0
   21d6c:	and	r3, r1, #255	; 0xff
   21d70:	str	r1, [sp, #8]
   21d74:	mov	r1, r3
   21d78:	str	r2, [sp, #4]
   21d7c:	bl	11420 <memset@plt>
   21d80:	ldr	r0, [fp, #-16]
   21d84:	ldr	r0, [r0, #24]
   21d88:	ldr	r1, [fp, #-16]
   21d8c:	ldr	r1, [r1, #8]
   21d90:	ldr	r2, [sp, #4]
   21d94:	mul	r1, r1, r2
   21d98:	add	r0, r0, r1
   21d9c:	ldr	r1, [sp, #8]
   21da0:	and	r1, r1, #255	; 0xff
   21da4:	bl	11420 <memset@plt>
   21da8:	ldr	r0, [fp, #-16]
   21dac:	ldr	r1, [r0, #8]
   21db0:	add	r2, r1, #1
   21db4:	str	r2, [r0, #8]
   21db8:	str	r1, [fp, #-4]
   21dbc:	ldr	r0, [fp, #-4]
   21dc0:	mov	sp, fp
   21dc4:	pop	{fp, pc}
   21dc8:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   21dcc:			; <UNDEFINED> instruction: 0xfffc00ff
   21dd0:	push	{fp, lr}
   21dd4:	mov	fp, sp
   21dd8:	sub	sp, sp, #16
   21ddc:	str	r0, [sp, #8]
   21de0:	str	r1, [sp, #4]
   21de4:	str	r2, [sp]
   21de8:	ldr	r0, [sp, #8]
   21dec:	movw	r1, #2
   21df0:	str	r1, [r0]
   21df4:	movw	r0, #8
   21df8:	bl	33b44 <__assert_fail@plt+0x22640>
   21dfc:	ldr	r1, [sp, #8]
   21e00:	str	r0, [r1, #8]
   21e04:	ldr	r0, [sp, #8]
   21e08:	ldr	r0, [r0, #8]
   21e0c:	movw	r1, #0
   21e10:	cmp	r0, r1
   21e14:	bne	21e24 <__assert_fail@plt+0x10920>
   21e18:	movw	r0, #12
   21e1c:	str	r0, [fp, #-4]
   21e20:	b	21ec0 <__assert_fail@plt+0x109bc>
   21e24:	ldr	r0, [sp, #4]
   21e28:	ldr	r1, [sp]
   21e2c:	cmp	r0, r1
   21e30:	bne	21e54 <__assert_fail@plt+0x10950>
   21e34:	ldr	r0, [sp, #8]
   21e38:	movw	r1, #1
   21e3c:	str	r1, [r0, #4]
   21e40:	ldr	r0, [sp, #4]
   21e44:	ldr	r1, [sp, #8]
   21e48:	ldr	r1, [r1, #8]
   21e4c:	str	r0, [r1]
   21e50:	b	21eb8 <__assert_fail@plt+0x109b4>
   21e54:	ldr	r0, [sp, #8]
   21e58:	movw	r1, #2
   21e5c:	str	r1, [r0, #4]
   21e60:	ldr	r0, [sp, #4]
   21e64:	ldr	r1, [sp]
   21e68:	cmp	r0, r1
   21e6c:	bge	21e94 <__assert_fail@plt+0x10990>
   21e70:	ldr	r0, [sp, #4]
   21e74:	ldr	r1, [sp, #8]
   21e78:	ldr	r1, [r1, #8]
   21e7c:	str	r0, [r1]
   21e80:	ldr	r0, [sp]
   21e84:	ldr	r1, [sp, #8]
   21e88:	ldr	r1, [r1, #8]
   21e8c:	str	r0, [r1, #4]
   21e90:	b	21eb4 <__assert_fail@plt+0x109b0>
   21e94:	ldr	r0, [sp]
   21e98:	ldr	r1, [sp, #8]
   21e9c:	ldr	r1, [r1, #8]
   21ea0:	str	r0, [r1]
   21ea4:	ldr	r0, [sp, #4]
   21ea8:	ldr	r1, [sp, #8]
   21eac:	ldr	r1, [r1, #8]
   21eb0:	str	r0, [r1, #4]
   21eb4:	b	21eb8 <__assert_fail@plt+0x109b4>
   21eb8:	movw	r0, #0
   21ebc:	str	r0, [fp, #-4]
   21ec0:	ldr	r0, [fp, #-4]
   21ec4:	mov	sp, fp
   21ec8:	pop	{fp, pc}
   21ecc:	push	{fp, lr}
   21ed0:	mov	fp, sp
   21ed4:	sub	sp, sp, #16
   21ed8:	str	r0, [sp, #8]
   21edc:	str	r1, [sp, #4]
   21ee0:	ldr	r0, [sp, #8]
   21ee4:	movw	r1, #1
   21ee8:	str	r1, [r0]
   21eec:	ldr	r0, [sp, #8]
   21ef0:	str	r1, [r0, #4]
   21ef4:	movw	r0, #4
   21ef8:	bl	33b44 <__assert_fail@plt+0x22640>
   21efc:	ldr	r1, [sp, #8]
   21f00:	str	r0, [r1, #8]
   21f04:	ldr	r0, [sp, #8]
   21f08:	ldr	r0, [r0, #8]
   21f0c:	movw	r1, #0
   21f10:	cmp	r0, r1
   21f14:	bne	21f38 <__assert_fail@plt+0x10a34>
   21f18:	ldr	r0, [sp, #8]
   21f1c:	movw	r1, #0
   21f20:	str	r1, [r0, #4]
   21f24:	ldr	r0, [sp, #8]
   21f28:	str	r1, [r0]
   21f2c:	movw	r0, #12
   21f30:	str	r0, [fp, #-4]
   21f34:	b	21f50 <__assert_fail@plt+0x10a4c>
   21f38:	ldr	r0, [sp, #4]
   21f3c:	ldr	r1, [sp, #8]
   21f40:	ldr	r1, [r1, #8]
   21f44:	str	r0, [r1]
   21f48:	movw	r0, #0
   21f4c:	str	r0, [fp, #-4]
   21f50:	ldr	r0, [fp, #-4]
   21f54:	mov	sp, fp
   21f58:	pop	{fp, pc}
   21f5c:	push	{fp, lr}
   21f60:	mov	fp, sp
   21f64:	sub	sp, sp, #72	; 0x48
   21f68:	str	r0, [fp, #-8]
   21f6c:	str	r1, [fp, #-12]
   21f70:	str	r2, [fp, #-16]
   21f74:	and	r0, r3, #1
   21f78:	strb	r0, [fp, #-17]	; 0xffffffef
   21f7c:	movw	r0, #0
   21f80:	strb	r0, [sp, #31]
   21f84:	ldr	r0, [fp, #-12]
   21f88:	ldr	r0, [r0, #20]
   21f8c:	ldr	r1, [fp, #-16]
   21f90:	movw	r2, #12
   21f94:	mul	r1, r1, r2
   21f98:	add	r0, r0, r1
   21f9c:	ldr	r0, [r0, #4]
   21fa0:	add	r1, r0, #1
   21fa4:	add	r0, sp, #32
   21fa8:	bl	22330 <__assert_fail@plt+0x10e2c>
   21fac:	str	r0, [fp, #-24]	; 0xffffffe8
   21fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fb4:	cmp	r0, #0
   21fb8:	beq	21fc8 <__assert_fail@plt+0x10ac4>
   21fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fc0:	str	r0, [fp, #-4]
   21fc4:	b	22324 <__assert_fail@plt+0x10e20>
   21fc8:	ldr	r0, [fp, #-16]
   21fcc:	ldr	r1, [sp, #36]	; 0x24
   21fd0:	ldr	r2, [sp, #40]	; 0x28
   21fd4:	add	r3, r1, #1
   21fd8:	str	r3, [sp, #36]	; 0x24
   21fdc:	str	r0, [r2, r1, lsl #2]
   21fe0:	ldr	r0, [fp, #-12]
   21fe4:	ldr	r0, [r0, #24]
   21fe8:	ldr	r1, [fp, #-16]
   21fec:	add	r1, r1, r1, lsl #1
   21ff0:	add	r0, r0, r1, lsl #2
   21ff4:	mvn	r1, #0
   21ff8:	str	r1, [r0, #4]
   21ffc:	ldr	r0, [fp, #-12]
   22000:	ldr	r0, [r0]
   22004:	ldr	r1, [fp, #-16]
   22008:	add	r0, r0, r1, lsl #3
   2200c:	ldr	r0, [r0, #4]
   22010:	lsr	r0, r0, #8
   22014:	movw	r1, #1023	; 0x3ff
   22018:	and	r0, r0, r1
   2201c:	cmp	r0, #0
   22020:	beq	220e8 <__assert_fail@plt+0x10be4>
   22024:	ldr	r0, [fp, #-12]
   22028:	ldr	r0, [r0, #20]
   2202c:	ldr	r1, [fp, #-16]
   22030:	movw	r2, #12
   22034:	mul	r1, r1, r2
   22038:	add	r0, r0, r1
   2203c:	ldr	r0, [r0, #4]
   22040:	cmp	r0, #0
   22044:	beq	220e8 <__assert_fail@plt+0x10be4>
   22048:	ldr	r0, [fp, #-12]
   2204c:	ldr	r1, [r0]
   22050:	ldr	r0, [r0, #20]
   22054:	ldr	r2, [fp, #-16]
   22058:	add	r2, r2, r2, lsl #1
   2205c:	add	r0, r0, r2, lsl #2
   22060:	ldr	r0, [r0, #8]
   22064:	ldr	r0, [r0]
   22068:	add	r0, r1, r0, lsl #3
   2206c:	ldr	r0, [r0, #4]
   22070:	lsr	r0, r0, #18
   22074:	and	r0, r0, #1
   22078:	cmp	r0, #0
   2207c:	bne	220e8 <__assert_fail@plt+0x10be4>
   22080:	ldr	r0, [fp, #-12]
   22084:	ldr	r1, [fp, #-16]
   22088:	mov	r2, r1
   2208c:	mov	r3, r1
   22090:	mov	ip, r1
   22094:	ldr	lr, [r0]
   22098:	add	r1, lr, r1, lsl #3
   2209c:	ldr	r1, [r1, #4]
   220a0:	lsr	r1, r1, #8
   220a4:	movw	lr, #1023	; 0x3ff
   220a8:	and	r1, r1, lr
   220ac:	str	r1, [sp, #8]
   220b0:	mov	r1, r2
   220b4:	mov	r2, r3
   220b8:	mov	r3, ip
   220bc:	ldr	ip, [sp, #8]
   220c0:	str	ip, [sp]
   220c4:	bl	223a4 <__assert_fail@plt+0x10ea0>
   220c8:	str	r0, [fp, #-24]	; 0xffffffe8
   220cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220d0:	cmp	r0, #0
   220d4:	beq	220e4 <__assert_fail@plt+0x10be0>
   220d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220dc:	str	r0, [fp, #-4]
   220e0:	b	22324 <__assert_fail@plt+0x10e20>
   220e4:	b	220e8 <__assert_fail@plt+0x10be4>
   220e8:	ldr	r0, [fp, #-12]
   220ec:	ldr	r0, [r0]
   220f0:	ldr	r1, [fp, #-16]
   220f4:	add	r0, r0, r1, lsl #3
   220f8:	ldr	r0, [r0, #4]
   220fc:	and	r0, r0, #255	; 0xff
   22100:	and	r0, r0, #8
   22104:	cmp	r0, #0
   22108:	beq	22294 <__assert_fail@plt+0x10d90>
   2210c:	movw	r0, #0
   22110:	str	r0, [fp, #-28]	; 0xffffffe4
   22114:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22118:	ldr	r1, [fp, #-12]
   2211c:	ldr	r1, [r1, #20]
   22120:	ldr	r2, [fp, #-16]
   22124:	movw	r3, #12
   22128:	mul	r2, r2, r3
   2212c:	add	r1, r1, r2
   22130:	ldr	r1, [r1, #4]
   22134:	cmp	r0, r1
   22138:	bge	22290 <__assert_fail@plt+0x10d8c>
   2213c:	ldr	r0, [fp, #-12]
   22140:	ldr	r0, [r0, #20]
   22144:	ldr	r1, [fp, #-16]
   22148:	add	r1, r1, r1, lsl #1
   2214c:	add	r0, r0, r1, lsl #2
   22150:	ldr	r0, [r0, #8]
   22154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22158:	add	r0, r0, r1, lsl #2
   2215c:	ldr	r0, [r0]
   22160:	str	r0, [sp, #12]
   22164:	ldr	r0, [fp, #-12]
   22168:	ldr	r0, [r0, #24]
   2216c:	ldr	r1, [sp, #12]
   22170:	movw	r2, #12
   22174:	mul	r1, r1, r2
   22178:	add	r0, r0, r1
   2217c:	ldr	r0, [r0, #4]
   22180:	cmn	r0, #1
   22184:	bne	22194 <__assert_fail@plt+0x10c90>
   22188:	movw	r0, #1
   2218c:	strb	r0, [sp, #31]
   22190:	b	22280 <__assert_fail@plt+0x10d7c>
   22194:	ldr	r0, [fp, #-12]
   22198:	ldr	r0, [r0, #24]
   2219c:	ldr	r1, [sp, #12]
   221a0:	movw	r2, #12
   221a4:	mul	r1, r1, r2
   221a8:	add	r0, r0, r1
   221ac:	ldr	r0, [r0, #4]
   221b0:	cmp	r0, #0
   221b4:	bne	221f0 <__assert_fail@plt+0x10cec>
   221b8:	ldr	r1, [fp, #-12]
   221bc:	ldr	r2, [sp, #12]
   221c0:	add	r0, sp, #16
   221c4:	movw	r3, #0
   221c8:	and	r3, r3, #1
   221cc:	bl	21f5c <__assert_fail@plt+0x10a58>
   221d0:	str	r0, [fp, #-24]	; 0xffffffe8
   221d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221d8:	cmp	r0, #0
   221dc:	beq	221ec <__assert_fail@plt+0x10ce8>
   221e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221e4:	str	r0, [fp, #-4]
   221e8:	b	22324 <__assert_fail@plt+0x10e20>
   221ec:	b	22220 <__assert_fail@plt+0x10d1c>
   221f0:	ldr	r0, [fp, #-12]
   221f4:	ldr	r0, [r0, #24]
   221f8:	ldr	r1, [sp, #12]
   221fc:	movw	r2, #12
   22200:	mul	r1, r1, r2
   22204:	add	r0, r0, r1
   22208:	ldr	r1, [r0]
   2220c:	str	r1, [sp, #16]
   22210:	ldr	r1, [r0, #4]
   22214:	str	r1, [sp, #20]
   22218:	ldr	r0, [r0, #8]
   2221c:	str	r0, [sp, #24]
   22220:	add	r0, sp, #32
   22224:	add	r1, sp, #16
   22228:	bl	228ac <__assert_fail@plt+0x113a8>
   2222c:	str	r0, [fp, #-24]	; 0xffffffe8
   22230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22234:	cmp	r0, #0
   22238:	beq	22248 <__assert_fail@plt+0x10d44>
   2223c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22240:	str	r0, [fp, #-4]
   22244:	b	22324 <__assert_fail@plt+0x10e20>
   22248:	ldr	r0, [fp, #-12]
   2224c:	ldr	r0, [r0, #24]
   22250:	ldr	r1, [sp, #12]
   22254:	movw	r2, #12
   22258:	mul	r1, r1, r2
   2225c:	add	r0, r0, r1
   22260:	ldr	r0, [r0, #4]
   22264:	cmp	r0, #0
   22268:	bne	2227c <__assert_fail@plt+0x10d78>
   2226c:	movw	r0, #1
   22270:	strb	r0, [sp, #31]
   22274:	ldr	r0, [sp, #24]
   22278:	bl	35268 <__assert_fail@plt+0x23d64>
   2227c:	b	22280 <__assert_fail@plt+0x10d7c>
   22280:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22284:	add	r0, r0, #1
   22288:	str	r0, [fp, #-28]	; 0xffffffe4
   2228c:	b	22114 <__assert_fail@plt+0x10c10>
   22290:	b	22294 <__assert_fail@plt+0x10d90>
   22294:	ldrb	r0, [sp, #31]
   22298:	tst	r0, #1
   2229c:	beq	222d0 <__assert_fail@plt+0x10dcc>
   222a0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   222a4:	tst	r0, #1
   222a8:	bne	222d0 <__assert_fail@plt+0x10dcc>
   222ac:	ldr	r0, [fp, #-12]
   222b0:	ldr	r0, [r0, #24]
   222b4:	ldr	r1, [fp, #-16]
   222b8:	movw	r2, #12
   222bc:	mul	r1, r1, r2
   222c0:	add	r0, r0, r1
   222c4:	movw	r1, #0
   222c8:	str	r1, [r0, #4]
   222cc:	b	22300 <__assert_fail@plt+0x10dfc>
   222d0:	ldr	r0, [fp, #-12]
   222d4:	ldr	r0, [r0, #24]
   222d8:	ldr	r1, [fp, #-16]
   222dc:	movw	r2, #12
   222e0:	mul	r1, r1, r2
   222e4:	add	r0, r0, r1
   222e8:	ldr	r1, [sp, #32]
   222ec:	str	r1, [r0]
   222f0:	ldr	r1, [sp, #36]	; 0x24
   222f4:	str	r1, [r0, #4]
   222f8:	ldr	r1, [sp, #40]	; 0x28
   222fc:	str	r1, [r0, #8]
   22300:	ldr	r0, [fp, #-8]
   22304:	ldr	r1, [sp, #32]
   22308:	str	r1, [r0]
   2230c:	ldr	r1, [sp, #36]	; 0x24
   22310:	str	r1, [r0, #4]
   22314:	ldr	r1, [sp, #40]	; 0x28
   22318:	str	r1, [r0, #8]
   2231c:	movw	r0, #0
   22320:	str	r0, [fp, #-4]
   22324:	ldr	r0, [fp, #-4]
   22328:	mov	sp, fp
   2232c:	pop	{fp, pc}
   22330:	push	{fp, lr}
   22334:	mov	fp, sp
   22338:	sub	sp, sp, #16
   2233c:	str	r0, [sp, #8]
   22340:	str	r1, [sp, #4]
   22344:	ldr	r0, [sp, #4]
   22348:	ldr	r1, [sp, #8]
   2234c:	str	r0, [r1]
   22350:	ldr	r0, [sp, #8]
   22354:	mov	r1, #0
   22358:	str	r1, [r0, #4]
   2235c:	ldr	r0, [sp, #4]
   22360:	lsl	r0, r0, #2
   22364:	bl	33b44 <__assert_fail@plt+0x22640>
   22368:	ldr	r1, [sp, #8]
   2236c:	str	r0, [r1, #8]
   22370:	ldr	r0, [sp, #8]
   22374:	ldr	r0, [r0, #8]
   22378:	movw	r1, #0
   2237c:	cmp	r0, r1
   22380:	bne	22390 <__assert_fail@plt+0x10e8c>
   22384:	movw	r0, #12
   22388:	str	r0, [fp, #-4]
   2238c:	b	22398 <__assert_fail@plt+0x10e94>
   22390:	movw	r0, #0
   22394:	str	r0, [fp, #-4]
   22398:	ldr	r0, [fp, #-4]
   2239c:	mov	sp, fp
   223a0:	pop	{fp, pc}
   223a4:	push	{fp, lr}
   223a8:	mov	fp, sp
   223ac:	sub	sp, sp, #56	; 0x38
   223b0:	ldr	ip, [fp, #8]
   223b4:	str	r0, [fp, #-8]
   223b8:	str	r1, [fp, #-12]
   223bc:	str	r2, [fp, #-16]
   223c0:	str	r3, [fp, #-20]	; 0xffffffec
   223c4:	ldr	r0, [fp, #8]
   223c8:	str	r0, [sp, #20]
   223cc:	ldr	r0, [fp, #-12]
   223d0:	str	r0, [fp, #-24]	; 0xffffffe8
   223d4:	ldr	r0, [fp, #-16]
   223d8:	str	r0, [sp, #28]
   223dc:	str	ip, [sp, #4]
   223e0:	ldr	r0, [fp, #-8]
   223e4:	ldr	r0, [r0]
   223e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   223ec:	add	r0, r0, r1, lsl #3
   223f0:	ldr	r0, [r0, #4]
   223f4:	and	r0, r0, #255	; 0xff
   223f8:	cmp	r0, #4
   223fc:	bne	224cc <__assert_fail@plt+0x10fc8>
   22400:	ldr	r0, [fp, #-8]
   22404:	ldr	r0, [r0, #12]
   22408:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2240c:	add	r0, r0, r1, lsl #2
   22410:	ldr	r0, [r0]
   22414:	str	r0, [sp, #16]
   22418:	ldr	r0, [fp, #-8]
   2241c:	ldr	r0, [r0, #20]
   22420:	ldr	r1, [sp, #28]
   22424:	movw	r2, #12
   22428:	mul	r1, r1, r2
   2242c:	add	r0, r0, r1
   22430:	movw	r1, #0
   22434:	str	r1, [r0, #4]
   22438:	ldr	r0, [fp, #-8]
   2243c:	ldr	r1, [sp, #16]
   22440:	ldr	r2, [sp, #20]
   22444:	bl	22cb4 <__assert_fail@plt+0x117b0>
   22448:	str	r0, [sp, #12]
   2244c:	ldr	r0, [sp, #12]
   22450:	cmn	r0, #1
   22454:	bne	22464 <__assert_fail@plt+0x10f60>
   22458:	movw	r0, #12
   2245c:	str	r0, [fp, #-4]
   22460:	b	228a0 <__assert_fail@plt+0x1139c>
   22464:	ldr	r0, [fp, #-8]
   22468:	ldr	r0, [r0, #12]
   2246c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22470:	ldr	r1, [r0, r1, lsl #2]
   22474:	ldr	r2, [sp, #28]
   22478:	add	r0, r0, r2, lsl #2
   2247c:	str	r1, [r0]
   22480:	ldr	r0, [fp, #-8]
   22484:	ldr	r0, [r0, #20]
   22488:	ldr	r1, [sp, #28]
   2248c:	movw	r2, #12
   22490:	mul	r1, r1, r2
   22494:	add	r0, r0, r1
   22498:	ldr	r1, [sp, #12]
   2249c:	bl	22d98 <__assert_fail@plt+0x11894>
   224a0:	and	r0, r0, #1
   224a4:	strb	r0, [sp, #27]
   224a8:	ldrb	r0, [sp, #27]
   224ac:	mvn	r1, #0
   224b0:	eor	r0, r0, r1
   224b4:	tst	r0, #1
   224b8:	beq	224c8 <__assert_fail@plt+0x10fc4>
   224bc:	movw	r0, #12
   224c0:	str	r0, [fp, #-4]
   224c4:	b	228a0 <__assert_fail@plt+0x1139c>
   224c8:	b	22884 <__assert_fail@plt+0x11380>
   224cc:	ldr	r0, [fp, #-8]
   224d0:	ldr	r0, [r0, #20]
   224d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   224d8:	movw	r2, #12
   224dc:	mul	r1, r1, r2
   224e0:	add	r0, r0, r1
   224e4:	ldr	r0, [r0, #4]
   224e8:	cmp	r0, #0
   224ec:	bne	22510 <__assert_fail@plt+0x1100c>
   224f0:	ldr	r0, [fp, #-8]
   224f4:	ldr	r0, [r0, #12]
   224f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   224fc:	ldr	r1, [r0, r1, lsl #2]
   22500:	ldr	r2, [sp, #28]
   22504:	add	r0, r0, r2, lsl #2
   22508:	str	r1, [r0]
   2250c:	b	22898 <__assert_fail@plt+0x11394>
   22510:	ldr	r0, [fp, #-8]
   22514:	ldr	r0, [r0, #20]
   22518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2251c:	movw	r2, #12
   22520:	mul	r1, r1, r2
   22524:	add	r0, r0, r1
   22528:	ldr	r0, [r0, #4]
   2252c:	cmp	r0, #1
   22530:	bne	22684 <__assert_fail@plt+0x11180>
   22534:	ldr	r0, [fp, #-8]
   22538:	ldr	r0, [r0, #20]
   2253c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22540:	movw	r2, #12
   22544:	mul	r1, r1, r2
   22548:	add	r0, r0, r1
   2254c:	ldr	r0, [r0, #8]
   22550:	ldr	r0, [r0]
   22554:	str	r0, [sp, #16]
   22558:	ldr	r0, [fp, #-8]
   2255c:	ldr	r0, [r0, #20]
   22560:	ldr	r1, [sp, #28]
   22564:	mul	r1, r1, r2
   22568:	add	r0, r0, r1
   2256c:	movw	r1, #0
   22570:	str	r1, [r0, #4]
   22574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22578:	ldr	r1, [fp, #-20]	; 0xffffffec
   2257c:	cmp	r0, r1
   22580:	bne	225e0 <__assert_fail@plt+0x110dc>
   22584:	ldr	r0, [sp, #28]
   22588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2258c:	cmp	r0, r1
   22590:	beq	225e0 <__assert_fail@plt+0x110dc>
   22594:	ldr	r0, [fp, #-8]
   22598:	ldr	r0, [r0, #20]
   2259c:	ldr	r1, [sp, #28]
   225a0:	movw	r2, #12
   225a4:	mul	r1, r1, r2
   225a8:	add	r0, r0, r1
   225ac:	ldr	r1, [sp, #16]
   225b0:	bl	22d98 <__assert_fail@plt+0x11894>
   225b4:	and	r0, r0, #1
   225b8:	strb	r0, [sp, #27]
   225bc:	ldrb	r0, [sp, #27]
   225c0:	mvn	r1, #0
   225c4:	eor	r0, r0, r1
   225c8:	tst	r0, #1
   225cc:	beq	225dc <__assert_fail@plt+0x110d8>
   225d0:	movw	r0, #12
   225d4:	str	r0, [fp, #-4]
   225d8:	b	228a0 <__assert_fail@plt+0x1139c>
   225dc:	b	22898 <__assert_fail@plt+0x11394>
   225e0:	ldr	r0, [fp, #-8]
   225e4:	ldr	r0, [r0]
   225e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   225ec:	add	r0, r0, r1, lsl #3
   225f0:	ldr	r0, [r0, #4]
   225f4:	lsr	r0, r0, #8
   225f8:	movw	r1, #1023	; 0x3ff
   225fc:	and	r0, r0, r1
   22600:	ldr	r1, [sp, #20]
   22604:	orr	r0, r1, r0
   22608:	str	r0, [sp, #20]
   2260c:	ldr	r0, [fp, #-8]
   22610:	ldr	r1, [sp, #16]
   22614:	ldr	r2, [sp, #20]
   22618:	bl	22cb4 <__assert_fail@plt+0x117b0>
   2261c:	str	r0, [sp, #12]
   22620:	ldr	r0, [sp, #12]
   22624:	cmn	r0, #1
   22628:	bne	22638 <__assert_fail@plt+0x11134>
   2262c:	movw	r0, #12
   22630:	str	r0, [fp, #-4]
   22634:	b	228a0 <__assert_fail@plt+0x1139c>
   22638:	ldr	r0, [fp, #-8]
   2263c:	ldr	r0, [r0, #20]
   22640:	ldr	r1, [sp, #28]
   22644:	movw	r2, #12
   22648:	mul	r1, r1, r2
   2264c:	add	r0, r0, r1
   22650:	ldr	r1, [sp, #12]
   22654:	bl	22d98 <__assert_fail@plt+0x11894>
   22658:	and	r0, r0, #1
   2265c:	strb	r0, [sp, #27]
   22660:	ldrb	r0, [sp, #27]
   22664:	mvn	r1, #0
   22668:	eor	r0, r0, r1
   2266c:	tst	r0, #1
   22670:	beq	22680 <__assert_fail@plt+0x1117c>
   22674:	movw	r0, #12
   22678:	str	r0, [fp, #-4]
   2267c:	b	228a0 <__assert_fail@plt+0x1139c>
   22680:	b	2287c <__assert_fail@plt+0x11378>
   22684:	ldr	r0, [fp, #-8]
   22688:	ldr	r0, [r0, #20]
   2268c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22690:	movw	r2, #12
   22694:	mul	r1, r1, r2
   22698:	add	r0, r0, r1
   2269c:	ldr	r0, [r0, #8]
   226a0:	ldr	r0, [r0]
   226a4:	str	r0, [sp, #16]
   226a8:	ldr	r0, [fp, #-8]
   226ac:	ldr	r0, [r0, #20]
   226b0:	ldr	r1, [sp, #28]
   226b4:	mul	r1, r1, r2
   226b8:	add	r0, r0, r1
   226bc:	movw	r1, #0
   226c0:	str	r1, [r0, #4]
   226c4:	ldr	r0, [fp, #-8]
   226c8:	ldr	r1, [sp, #16]
   226cc:	ldr	r2, [sp, #20]
   226d0:	bl	22fd0 <__assert_fail@plt+0x11acc>
   226d4:	str	r0, [sp, #12]
   226d8:	ldr	r0, [sp, #12]
   226dc:	cmn	r0, #1
   226e0:	bne	22794 <__assert_fail@plt+0x11290>
   226e4:	ldr	r0, [fp, #-8]
   226e8:	ldr	r1, [sp, #16]
   226ec:	ldr	r2, [sp, #20]
   226f0:	bl	22cb4 <__assert_fail@plt+0x117b0>
   226f4:	str	r0, [sp, #12]
   226f8:	ldr	r0, [sp, #12]
   226fc:	cmn	r0, #1
   22700:	bne	22710 <__assert_fail@plt+0x1120c>
   22704:	movw	r0, #12
   22708:	str	r0, [fp, #-4]
   2270c:	b	228a0 <__assert_fail@plt+0x1139c>
   22710:	ldr	r0, [fp, #-8]
   22714:	ldr	r0, [r0, #20]
   22718:	ldr	r1, [sp, #28]
   2271c:	movw	r2, #12
   22720:	mul	r1, r1, r2
   22724:	add	r0, r0, r1
   22728:	ldr	r1, [sp, #12]
   2272c:	bl	22d98 <__assert_fail@plt+0x11894>
   22730:	and	r0, r0, #1
   22734:	strb	r0, [sp, #27]
   22738:	ldrb	r0, [sp, #27]
   2273c:	mvn	r1, #0
   22740:	eor	r0, r0, r1
   22744:	tst	r0, #1
   22748:	beq	22758 <__assert_fail@plt+0x11254>
   2274c:	movw	r0, #12
   22750:	str	r0, [fp, #-4]
   22754:	b	228a0 <__assert_fail@plt+0x1139c>
   22758:	ldr	r0, [fp, #-8]
   2275c:	ldr	r1, [sp, #16]
   22760:	ldr	r2, [sp, #12]
   22764:	ldr	r3, [fp, #-20]	; 0xffffffec
   22768:	ldr	ip, [sp, #20]
   2276c:	str	ip, [sp]
   22770:	bl	223a4 <__assert_fail@plt+0x10ea0>
   22774:	str	r0, [sp, #8]
   22778:	ldr	r0, [sp, #8]
   2277c:	cmp	r0, #0
   22780:	beq	22790 <__assert_fail@plt+0x1128c>
   22784:	ldr	r0, [sp, #8]
   22788:	str	r0, [fp, #-4]
   2278c:	b	228a0 <__assert_fail@plt+0x1139c>
   22790:	b	227e0 <__assert_fail@plt+0x112dc>
   22794:	ldr	r0, [fp, #-8]
   22798:	ldr	r0, [r0, #20]
   2279c:	ldr	r1, [sp, #28]
   227a0:	movw	r2, #12
   227a4:	mul	r1, r1, r2
   227a8:	add	r0, r0, r1
   227ac:	ldr	r1, [sp, #12]
   227b0:	bl	22d98 <__assert_fail@plt+0x11894>
   227b4:	and	r0, r0, #1
   227b8:	strb	r0, [sp, #27]
   227bc:	ldrb	r0, [sp, #27]
   227c0:	mvn	r1, #0
   227c4:	eor	r0, r0, r1
   227c8:	tst	r0, #1
   227cc:	beq	227dc <__assert_fail@plt+0x112d8>
   227d0:	movw	r0, #12
   227d4:	str	r0, [fp, #-4]
   227d8:	b	228a0 <__assert_fail@plt+0x1139c>
   227dc:	b	227e0 <__assert_fail@plt+0x112dc>
   227e0:	ldr	r0, [fp, #-8]
   227e4:	ldr	r0, [r0, #20]
   227e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   227ec:	movw	r2, #12
   227f0:	mul	r1, r1, r2
   227f4:	add	r0, r0, r1
   227f8:	ldr	r0, [r0, #8]
   227fc:	ldr	r0, [r0, #4]
   22800:	str	r0, [sp, #16]
   22804:	ldr	r0, [fp, #-8]
   22808:	ldr	r1, [sp, #16]
   2280c:	ldr	r2, [sp, #20]
   22810:	bl	22cb4 <__assert_fail@plt+0x117b0>
   22814:	str	r0, [sp, #12]
   22818:	ldr	r0, [sp, #12]
   2281c:	cmn	r0, #1
   22820:	bne	22830 <__assert_fail@plt+0x1132c>
   22824:	movw	r0, #12
   22828:	str	r0, [fp, #-4]
   2282c:	b	228a0 <__assert_fail@plt+0x1139c>
   22830:	ldr	r0, [fp, #-8]
   22834:	ldr	r0, [r0, #20]
   22838:	ldr	r1, [sp, #28]
   2283c:	movw	r2, #12
   22840:	mul	r1, r1, r2
   22844:	add	r0, r0, r1
   22848:	ldr	r1, [sp, #12]
   2284c:	bl	22d98 <__assert_fail@plt+0x11894>
   22850:	and	r0, r0, #1
   22854:	strb	r0, [sp, #27]
   22858:	ldrb	r0, [sp, #27]
   2285c:	mvn	r1, #0
   22860:	eor	r0, r0, r1
   22864:	tst	r0, #1
   22868:	beq	22878 <__assert_fail@plt+0x11374>
   2286c:	movw	r0, #12
   22870:	str	r0, [fp, #-4]
   22874:	b	228a0 <__assert_fail@plt+0x1139c>
   22878:	b	2287c <__assert_fail@plt+0x11378>
   2287c:	b	22880 <__assert_fail@plt+0x1137c>
   22880:	b	22884 <__assert_fail@plt+0x11380>
   22884:	ldr	r0, [sp, #16]
   22888:	str	r0, [fp, #-24]	; 0xffffffe8
   2288c:	ldr	r0, [sp, #12]
   22890:	str	r0, [sp, #28]
   22894:	b	223e0 <__assert_fail@plt+0x10edc>
   22898:	movw	r0, #0
   2289c:	str	r0, [fp, #-4]
   228a0:	ldr	r0, [fp, #-4]
   228a4:	mov	sp, fp
   228a8:	pop	{fp, pc}
   228ac:	push	{fp, lr}
   228b0:	mov	fp, sp
   228b4:	sub	sp, sp, #40	; 0x28
   228b8:	str	r0, [fp, #-8]
   228bc:	str	r1, [fp, #-12]
   228c0:	ldr	r0, [fp, #-12]
   228c4:	movw	r1, #0
   228c8:	cmp	r0, r1
   228cc:	beq	228e0 <__assert_fail@plt+0x113dc>
   228d0:	ldr	r0, [fp, #-12]
   228d4:	ldr	r0, [r0, #4]
   228d8:	cmp	r0, #0
   228dc:	bne	228ec <__assert_fail@plt+0x113e8>
   228e0:	movw	r0, #0
   228e4:	str	r0, [fp, #-4]
   228e8:	b	22ca8 <__assert_fail@plt+0x117a4>
   228ec:	ldr	r0, [fp, #-8]
   228f0:	ldr	r0, [r0]
   228f4:	ldr	r1, [fp, #-12]
   228f8:	ldr	r1, [r1, #4]
   228fc:	lsl	r1, r1, #1
   22900:	ldr	r2, [fp, #-8]
   22904:	ldr	r2, [r2, #4]
   22908:	add	r1, r1, r2
   2290c:	cmp	r0, r1
   22910:	bge	2297c <__assert_fail@plt+0x11478>
   22914:	ldr	r0, [fp, #-12]
   22918:	ldr	r0, [r0, #4]
   2291c:	ldr	r1, [fp, #-8]
   22920:	ldr	r1, [r1]
   22924:	add	r0, r0, r1
   22928:	lsl	r0, r0, #1
   2292c:	str	r0, [sp, #8]
   22930:	ldr	r0, [fp, #-8]
   22934:	ldr	r0, [r0, #8]
   22938:	ldr	r1, [sp, #8]
   2293c:	lsl	r1, r1, #2
   22940:	bl	33bb4 <__assert_fail@plt+0x226b0>
   22944:	str	r0, [sp, #4]
   22948:	ldr	r0, [sp, #4]
   2294c:	movw	r1, #0
   22950:	cmp	r0, r1
   22954:	bne	22964 <__assert_fail@plt+0x11460>
   22958:	movw	r0, #12
   2295c:	str	r0, [fp, #-4]
   22960:	b	22ca8 <__assert_fail@plt+0x117a4>
   22964:	ldr	r0, [sp, #4]
   22968:	ldr	r1, [fp, #-8]
   2296c:	str	r0, [r1, #8]
   22970:	ldr	r0, [sp, #8]
   22974:	ldr	r1, [fp, #-8]
   22978:	str	r0, [r1]
   2297c:	ldr	r0, [fp, #-8]
   22980:	ldr	r0, [r0, #4]
   22984:	cmp	r0, #0
   22988:	bne	229dc <__assert_fail@plt+0x114d8>
   2298c:	ldr	r0, [fp, #-8]
   22990:	ldr	r0, [r0, #8]
   22994:	movw	r1, #0
   22998:	cmp	r0, r1
   2299c:	beq	229a4 <__assert_fail@plt+0x114a0>
   229a0:	b	229a4 <__assert_fail@plt+0x114a0>
   229a4:	ldr	r0, [fp, #-12]
   229a8:	ldr	r0, [r0, #4]
   229ac:	ldr	r1, [fp, #-8]
   229b0:	str	r0, [r1, #4]
   229b4:	ldr	r0, [fp, #-8]
   229b8:	ldr	r0, [r0, #8]
   229bc:	ldr	r1, [fp, #-12]
   229c0:	ldr	r2, [r1, #4]
   229c4:	ldr	r1, [r1, #8]
   229c8:	lsl	r2, r2, #2
   229cc:	bl	112a0 <memcpy@plt>
   229d0:	movw	r0, #0
   229d4:	str	r0, [fp, #-4]
   229d8:	b	22ca8 <__assert_fail@plt+0x117a4>
   229dc:	ldr	r0, [fp, #-8]
   229e0:	ldr	r0, [r0, #4]
   229e4:	ldr	r1, [fp, #-12]
   229e8:	ldr	r1, [r1, #4]
   229ec:	lsl	r1, r1, #1
   229f0:	add	r0, r0, r1
   229f4:	str	r0, [sp, #16]
   229f8:	ldr	r0, [fp, #-12]
   229fc:	ldr	r0, [r0, #4]
   22a00:	sub	r0, r0, #1
   22a04:	str	r0, [fp, #-16]
   22a08:	ldr	r0, [fp, #-8]
   22a0c:	ldr	r0, [r0, #4]
   22a10:	sub	r0, r0, #1
   22a14:	str	r0, [sp, #20]
   22a18:	ldr	r0, [fp, #-16]
   22a1c:	cmp	r0, #0
   22a20:	movw	r0, #0
   22a24:	str	r0, [sp]
   22a28:	blt	22a40 <__assert_fail@plt+0x1153c>
   22a2c:	ldr	r0, [sp, #20]
   22a30:	cmp	r0, #0
   22a34:	movw	r0, #0
   22a38:	movge	r0, #1
   22a3c:	str	r0, [sp]
   22a40:	ldr	r0, [sp]
   22a44:	tst	r0, #1
   22a48:	beq	22b14 <__assert_fail@plt+0x11610>
   22a4c:	ldr	r0, [fp, #-8]
   22a50:	ldr	r0, [r0, #8]
   22a54:	ldr	r1, [sp, #20]
   22a58:	ldr	r0, [r0, r1, lsl #2]
   22a5c:	ldr	r1, [fp, #-12]
   22a60:	ldr	r1, [r1, #8]
   22a64:	ldr	r2, [fp, #-16]
   22a68:	add	r1, r1, r2, lsl #2
   22a6c:	ldr	r1, [r1]
   22a70:	cmp	r0, r1
   22a74:	bne	22a98 <__assert_fail@plt+0x11594>
   22a78:	ldr	r0, [fp, #-16]
   22a7c:	mvn	r1, #0
   22a80:	add	r0, r0, r1
   22a84:	str	r0, [fp, #-16]
   22a88:	ldr	r0, [sp, #20]
   22a8c:	add	r0, r0, r1
   22a90:	str	r0, [sp, #20]
   22a94:	b	22b10 <__assert_fail@plt+0x1160c>
   22a98:	ldr	r0, [fp, #-8]
   22a9c:	ldr	r0, [r0, #8]
   22aa0:	ldr	r1, [sp, #20]
   22aa4:	ldr	r0, [r0, r1, lsl #2]
   22aa8:	ldr	r1, [fp, #-12]
   22aac:	ldr	r1, [r1, #8]
   22ab0:	ldr	r2, [fp, #-16]
   22ab4:	add	r1, r1, r2, lsl #2
   22ab8:	ldr	r1, [r1]
   22abc:	cmp	r0, r1
   22ac0:	bge	22afc <__assert_fail@plt+0x115f8>
   22ac4:	ldr	r0, [fp, #-12]
   22ac8:	ldr	r0, [r0, #8]
   22acc:	ldr	r1, [fp, #-16]
   22ad0:	sub	r2, r1, #1
   22ad4:	str	r2, [fp, #-16]
   22ad8:	ldr	r0, [r0, r1, lsl #2]
   22adc:	ldr	r1, [fp, #-8]
   22ae0:	ldr	r1, [r1, #8]
   22ae4:	ldr	r2, [sp, #16]
   22ae8:	sub	r2, r2, #1
   22aec:	str	r2, [sp, #16]
   22af0:	add	r1, r1, r2, lsl #2
   22af4:	str	r0, [r1]
   22af8:	b	22b0c <__assert_fail@plt+0x11608>
   22afc:	ldr	r0, [sp, #20]
   22b00:	mvn	r1, #0
   22b04:	add	r0, r0, r1
   22b08:	str	r0, [sp, #20]
   22b0c:	b	22b10 <__assert_fail@plt+0x1160c>
   22b10:	b	22a18 <__assert_fail@plt+0x11514>
   22b14:	ldr	r0, [fp, #-16]
   22b18:	cmp	r0, #0
   22b1c:	blt	22b5c <__assert_fail@plt+0x11658>
   22b20:	ldr	r0, [fp, #-16]
   22b24:	add	r0, r0, #1
   22b28:	ldr	r1, [sp, #16]
   22b2c:	sub	r0, r1, r0
   22b30:	str	r0, [sp, #16]
   22b34:	ldr	r0, [fp, #-8]
   22b38:	ldr	r0, [r0, #8]
   22b3c:	ldr	r1, [sp, #16]
   22b40:	add	r0, r0, r1, lsl #2
   22b44:	ldr	r1, [fp, #-12]
   22b48:	ldr	r1, [r1, #8]
   22b4c:	ldr	r2, [fp, #-16]
   22b50:	add	r2, r2, #1
   22b54:	lsl	r2, r2, #2
   22b58:	bl	112a0 <memcpy@plt>
   22b5c:	ldr	r0, [fp, #-8]
   22b60:	ldr	r0, [r0, #4]
   22b64:	sub	r0, r0, #1
   22b68:	str	r0, [sp, #20]
   22b6c:	ldr	r0, [fp, #-8]
   22b70:	ldr	r0, [r0, #4]
   22b74:	ldr	r1, [fp, #-12]
   22b78:	ldr	r1, [r1, #4]
   22b7c:	lsl	r1, r1, #1
   22b80:	add	r0, r0, r1
   22b84:	sub	r0, r0, #1
   22b88:	str	r0, [fp, #-16]
   22b8c:	ldr	r0, [fp, #-16]
   22b90:	ldr	r1, [sp, #16]
   22b94:	sub	r0, r0, r1
   22b98:	add	r0, r0, #1
   22b9c:	str	r0, [sp, #12]
   22ba0:	ldr	r0, [sp, #12]
   22ba4:	cmp	r0, #0
   22ba8:	bne	22bb8 <__assert_fail@plt+0x116b4>
   22bac:	movw	r0, #0
   22bb0:	str	r0, [fp, #-4]
   22bb4:	b	22ca8 <__assert_fail@plt+0x117a4>
   22bb8:	ldr	r0, [sp, #12]
   22bbc:	ldr	r1, [fp, #-8]
   22bc0:	ldr	r2, [r1, #4]
   22bc4:	add	r0, r2, r0
   22bc8:	str	r0, [r1, #4]
   22bcc:	ldr	r0, [fp, #-8]
   22bd0:	ldr	r0, [r0, #8]
   22bd4:	ldr	r1, [fp, #-16]
   22bd8:	ldr	r1, [r0, r1, lsl #2]
   22bdc:	ldr	r2, [sp, #20]
   22be0:	add	r0, r0, r2, lsl #2
   22be4:	ldr	r0, [r0]
   22be8:	cmp	r1, r0
   22bec:	ble	22c40 <__assert_fail@plt+0x1173c>
   22bf0:	ldr	r0, [fp, #-8]
   22bf4:	ldr	r0, [r0, #8]
   22bf8:	ldr	r1, [fp, #-16]
   22bfc:	sub	r2, r1, #1
   22c00:	str	r2, [fp, #-16]
   22c04:	ldr	r0, [r0, r1, lsl #2]
   22c08:	ldr	r1, [fp, #-8]
   22c0c:	ldr	r1, [r1, #8]
   22c10:	ldr	r2, [sp, #20]
   22c14:	ldr	r3, [sp, #12]
   22c18:	sub	ip, r3, #1
   22c1c:	str	ip, [sp, #12]
   22c20:	add	r2, r2, r3
   22c24:	add	r1, r1, r2, lsl #2
   22c28:	str	r0, [r1]
   22c2c:	ldr	r0, [sp, #12]
   22c30:	cmp	r0, #0
   22c34:	bne	22c3c <__assert_fail@plt+0x11738>
   22c38:	b	22ca0 <__assert_fail@plt+0x1179c>
   22c3c:	b	22c9c <__assert_fail@plt+0x11798>
   22c40:	ldr	r0, [fp, #-8]
   22c44:	ldr	r0, [r0, #8]
   22c48:	ldr	r1, [sp, #20]
   22c4c:	ldr	r2, [r0, r1, lsl #2]
   22c50:	ldr	r3, [sp, #12]
   22c54:	add	r1, r1, r3
   22c58:	add	r0, r0, r1, lsl #2
   22c5c:	str	r2, [r0]
   22c60:	ldr	r0, [sp, #20]
   22c64:	mvn	r1, #0
   22c68:	add	r0, r0, r1
   22c6c:	str	r0, [sp, #20]
   22c70:	cmp	r0, #0
   22c74:	bge	22c98 <__assert_fail@plt+0x11794>
   22c78:	ldr	r0, [fp, #-8]
   22c7c:	ldr	r0, [r0, #8]
   22c80:	ldr	r1, [sp, #16]
   22c84:	add	r1, r0, r1, lsl #2
   22c88:	ldr	r2, [sp, #12]
   22c8c:	lsl	r2, r2, #2
   22c90:	bl	112a0 <memcpy@plt>
   22c94:	b	22ca0 <__assert_fail@plt+0x1179c>
   22c98:	b	22c9c <__assert_fail@plt+0x11798>
   22c9c:	b	22bcc <__assert_fail@plt+0x116c8>
   22ca0:	movw	r0, #0
   22ca4:	str	r0, [fp, #-4]
   22ca8:	ldr	r0, [fp, #-4]
   22cac:	mov	sp, fp
   22cb0:	pop	{fp, pc}
   22cb4:	push	{fp, lr}
   22cb8:	mov	fp, sp
   22cbc:	sub	sp, sp, #24
   22cc0:	str	r0, [fp, #-4]
   22cc4:	str	r1, [fp, #-8]
   22cc8:	str	r2, [sp, #12]
   22ccc:	ldr	r0, [fp, #-4]
   22cd0:	ldr	r1, [r0]
   22cd4:	ldr	r2, [fp, #-8]
   22cd8:	ldr	r2, [r1, r2, lsl #3]!
   22cdc:	ldr	r1, [r1, #4]
   22ce0:	str	r1, [sp, #4]
   22ce4:	mov	r1, r2
   22ce8:	ldr	r2, [sp, #4]
   22cec:	bl	21ab4 <__assert_fail@plt+0x105b0>
   22cf0:	str	r0, [sp, #8]
   22cf4:	ldr	r0, [sp, #8]
   22cf8:	cmn	r0, #1
   22cfc:	beq	22d8c <__assert_fail@plt+0x11888>
   22d00:	ldr	r0, [sp, #12]
   22d04:	ldr	r1, [fp, #-4]
   22d08:	ldr	r1, [r1]
   22d0c:	ldr	r2, [sp, #8]
   22d10:	add	r1, r1, r2, lsl #3
   22d14:	ldr	r2, [r1, #4]
   22d18:	bfc	r0, #10, #22
   22d1c:	bfc	r2, #8, #10
   22d20:	orr	r0, r2, r0, lsl #8
   22d24:	str	r0, [r1, #4]
   22d28:	ldr	r0, [fp, #-4]
   22d2c:	ldr	r0, [r0]
   22d30:	ldr	r1, [fp, #-8]
   22d34:	add	r1, r0, r1, lsl #3
   22d38:	ldr	r1, [r1, #4]
   22d3c:	ldr	r2, [sp, #8]
   22d40:	add	r0, r0, r2, lsl #3
   22d44:	ldr	r2, [r0, #4]
   22d48:	orr	r1, r2, r1
   22d4c:	lsr	r1, r1, #8
   22d50:	bfi	r2, r1, #8, #10
   22d54:	str	r2, [r0, #4]
   22d58:	ldr	r0, [fp, #-4]
   22d5c:	ldr	r0, [r0]
   22d60:	ldr	r1, [sp, #8]
   22d64:	add	r0, r0, r1, lsl #3
   22d68:	ldr	r1, [r0, #4]
   22d6c:	orr	r1, r1, #262144	; 0x40000
   22d70:	str	r1, [r0, #4]
   22d74:	ldr	r0, [fp, #-8]
   22d78:	ldr	r1, [fp, #-4]
   22d7c:	ldr	r1, [r1, #16]
   22d80:	ldr	r2, [sp, #8]
   22d84:	add	r1, r1, r2, lsl #2
   22d88:	str	r0, [r1]
   22d8c:	ldr	r0, [sp, #8]
   22d90:	mov	sp, fp
   22d94:	pop	{fp, pc}
   22d98:	push	{fp, lr}
   22d9c:	mov	fp, sp
   22da0:	sub	sp, sp, #24
   22da4:	str	r0, [fp, #-8]
   22da8:	str	r1, [sp, #12]
   22dac:	ldr	r0, [fp, #-8]
   22db0:	ldr	r0, [r0]
   22db4:	cmp	r0, #0
   22db8:	bne	22de0 <__assert_fail@plt+0x118dc>
   22dbc:	ldr	r0, [fp, #-8]
   22dc0:	ldr	r1, [sp, #12]
   22dc4:	bl	21ecc <__assert_fail@plt+0x109c8>
   22dc8:	cmp	r0, #0
   22dcc:	movw	r0, #0
   22dd0:	moveq	r0, #1
   22dd4:	and	r0, r0, #1
   22dd8:	strb	r0, [fp, #-1]
   22ddc:	b	22fc0 <__assert_fail@plt+0x11abc>
   22de0:	ldr	r0, [fp, #-8]
   22de4:	ldr	r0, [r0, #4]
   22de8:	cmp	r0, #0
   22dec:	bne	22e38 <__assert_fail@plt+0x11934>
   22df0:	ldr	r0, [fp, #-8]
   22df4:	ldr	r0, [r0, #8]
   22df8:	movw	r1, #0
   22dfc:	cmp	r0, r1
   22e00:	beq	22e08 <__assert_fail@plt+0x11904>
   22e04:	b	22e08 <__assert_fail@plt+0x11904>
   22e08:	ldr	r0, [sp, #12]
   22e0c:	ldr	r1, [fp, #-8]
   22e10:	ldr	r1, [r1, #8]
   22e14:	str	r0, [r1]
   22e18:	ldr	r0, [fp, #-8]
   22e1c:	ldr	r1, [r0, #4]
   22e20:	add	r1, r1, #1
   22e24:	str	r1, [r0, #4]
   22e28:	movw	r0, #1
   22e2c:	and	r0, r0, #1
   22e30:	strb	r0, [fp, #-1]
   22e34:	b	22fc0 <__assert_fail@plt+0x11abc>
   22e38:	ldr	r0, [fp, #-8]
   22e3c:	ldr	r0, [r0]
   22e40:	ldr	r1, [fp, #-8]
   22e44:	ldr	r1, [r1, #4]
   22e48:	cmp	r0, r1
   22e4c:	bne	22ea4 <__assert_fail@plt+0x119a0>
   22e50:	ldr	r0, [fp, #-8]
   22e54:	ldr	r1, [r0]
   22e58:	lsl	r1, r1, #1
   22e5c:	str	r1, [r0]
   22e60:	ldr	r0, [fp, #-8]
   22e64:	ldr	r1, [r0]
   22e68:	ldr	r0, [r0, #8]
   22e6c:	lsl	r1, r1, #2
   22e70:	bl	33bb4 <__assert_fail@plt+0x226b0>
   22e74:	str	r0, [sp, #4]
   22e78:	ldr	r0, [sp, #4]
   22e7c:	movw	r1, #0
   22e80:	cmp	r0, r1
   22e84:	bne	22e98 <__assert_fail@plt+0x11994>
   22e88:	movw	r0, #0
   22e8c:	and	r0, r0, #1
   22e90:	strb	r0, [fp, #-1]
   22e94:	b	22fc0 <__assert_fail@plt+0x11abc>
   22e98:	ldr	r0, [sp, #4]
   22e9c:	ldr	r1, [fp, #-8]
   22ea0:	str	r0, [r1, #8]
   22ea4:	ldr	r0, [sp, #12]
   22ea8:	ldr	r1, [fp, #-8]
   22eac:	ldr	r1, [r1, #8]
   22eb0:	ldr	r1, [r1]
   22eb4:	cmp	r0, r1
   22eb8:	bge	22f04 <__assert_fail@plt+0x11a00>
   22ebc:	ldr	r0, [fp, #-8]
   22ec0:	ldr	r0, [r0, #4]
   22ec4:	str	r0, [sp, #8]
   22ec8:	ldr	r0, [sp, #8]
   22ecc:	cmp	r0, #0
   22ed0:	ble	22f00 <__assert_fail@plt+0x119fc>
   22ed4:	ldr	r0, [fp, #-8]
   22ed8:	ldr	r0, [r0, #8]
   22edc:	ldr	r1, [sp, #8]
   22ee0:	add	r0, r0, r1, lsl #2
   22ee4:	ldr	r1, [r0, #-4]
   22ee8:	str	r1, [r0]
   22eec:	ldr	r0, [sp, #8]
   22ef0:	mvn	r1, #0
   22ef4:	add	r0, r0, r1
   22ef8:	str	r0, [sp, #8]
   22efc:	b	22ec8 <__assert_fail@plt+0x119c4>
   22f00:	b	22f8c <__assert_fail@plt+0x11a88>
   22f04:	ldr	r0, [fp, #-8]
   22f08:	ldr	r0, [r0, #4]
   22f0c:	str	r0, [sp, #8]
   22f10:	ldr	r0, [fp, #-8]
   22f14:	ldr	r0, [r0, #8]
   22f18:	ldr	r1, [sp, #8]
   22f1c:	sub	r1, r1, #1
   22f20:	add	r0, r0, r1, lsl #2
   22f24:	ldr	r0, [r0]
   22f28:	ldr	r1, [sp, #12]
   22f2c:	cmp	r0, r1
   22f30:	ble	22f60 <__assert_fail@plt+0x11a5c>
   22f34:	ldr	r0, [fp, #-8]
   22f38:	ldr	r0, [r0, #8]
   22f3c:	ldr	r1, [sp, #8]
   22f40:	add	r0, r0, r1, lsl #2
   22f44:	ldr	r1, [r0, #-4]
   22f48:	str	r1, [r0]
   22f4c:	ldr	r0, [sp, #8]
   22f50:	mvn	r1, #0
   22f54:	add	r0, r0, r1
   22f58:	str	r0, [sp, #8]
   22f5c:	b	22f10 <__assert_fail@plt+0x11a0c>
   22f60:	ldr	r0, [fp, #-8]
   22f64:	ldr	r0, [r0, #8]
   22f68:	ldr	r1, [sp, #8]
   22f6c:	sub	r1, r1, #1
   22f70:	add	r0, r0, r1, lsl #2
   22f74:	ldr	r0, [r0]
   22f78:	ldr	r1, [sp, #12]
   22f7c:	cmp	r0, r1
   22f80:	bge	22f88 <__assert_fail@plt+0x11a84>
   22f84:	b	22f88 <__assert_fail@plt+0x11a84>
   22f88:	b	22f8c <__assert_fail@plt+0x11a88>
   22f8c:	ldr	r0, [sp, #12]
   22f90:	ldr	r1, [fp, #-8]
   22f94:	ldr	r1, [r1, #8]
   22f98:	ldr	r2, [sp, #8]
   22f9c:	add	r1, r1, r2, lsl #2
   22fa0:	str	r0, [r1]
   22fa4:	ldr	r0, [fp, #-8]
   22fa8:	ldr	r1, [r0, #4]
   22fac:	add	r1, r1, #1
   22fb0:	str	r1, [r0, #4]
   22fb4:	movw	r0, #1
   22fb8:	and	r0, r0, #1
   22fbc:	strb	r0, [fp, #-1]
   22fc0:	ldrb	r0, [fp, #-1]
   22fc4:	and	r0, r0, #1
   22fc8:	mov	sp, fp
   22fcc:	pop	{fp, pc}
   22fd0:	sub	sp, sp, #24
   22fd4:	str	r0, [sp, #16]
   22fd8:	str	r1, [sp, #12]
   22fdc:	str	r2, [sp, #8]
   22fe0:	ldr	r0, [sp, #16]
   22fe4:	ldr	r0, [r0, #8]
   22fe8:	sub	r0, r0, #1
   22fec:	str	r0, [sp, #4]
   22ff0:	ldr	r0, [sp, #16]
   22ff4:	ldr	r0, [r0]
   22ff8:	ldr	r1, [sp, #4]
   22ffc:	add	r0, r0, r1, lsl #3
   23000:	ldr	r0, [r0, #4]
   23004:	lsr	r0, r0, #18
   23008:	and	r0, r0, #1
   2300c:	cmp	r0, #0
   23010:	movw	r0, #0
   23014:	str	r0, [sp]
   23018:	beq	23030 <__assert_fail@plt+0x11b2c>
   2301c:	ldr	r0, [sp, #4]
   23020:	cmp	r0, #0
   23024:	movw	r0, #0
   23028:	movgt	r0, #1
   2302c:	str	r0, [sp]
   23030:	ldr	r0, [sp]
   23034:	tst	r0, #1
   23038:	beq	230ac <__assert_fail@plt+0x11ba8>
   2303c:	ldr	r0, [sp, #12]
   23040:	ldr	r1, [sp, #16]
   23044:	ldr	r1, [r1, #16]
   23048:	ldr	r2, [sp, #4]
   2304c:	add	r1, r1, r2, lsl #2
   23050:	ldr	r1, [r1]
   23054:	cmp	r0, r1
   23058:	bne	23094 <__assert_fail@plt+0x11b90>
   2305c:	ldr	r0, [sp, #8]
   23060:	ldr	r1, [sp, #16]
   23064:	ldr	r1, [r1]
   23068:	ldr	r2, [sp, #4]
   2306c:	add	r1, r1, r2, lsl #3
   23070:	ldr	r1, [r1, #4]
   23074:	lsr	r1, r1, #8
   23078:	movw	r2, #1023	; 0x3ff
   2307c:	and	r1, r1, r2
   23080:	cmp	r0, r1
   23084:	bne	23094 <__assert_fail@plt+0x11b90>
   23088:	ldr	r0, [sp, #4]
   2308c:	str	r0, [sp, #20]
   23090:	b	230b4 <__assert_fail@plt+0x11bb0>
   23094:	b	23098 <__assert_fail@plt+0x11b94>
   23098:	ldr	r0, [sp, #4]
   2309c:	mvn	r1, #0
   230a0:	add	r0, r0, r1
   230a4:	str	r0, [sp, #4]
   230a8:	b	22ff0 <__assert_fail@plt+0x11aec>
   230ac:	mvn	r0, #0
   230b0:	str	r0, [sp, #20]
   230b4:	ldr	r0, [sp, #20]
   230b8:	add	sp, sp, #24
   230bc:	bx	lr
   230c0:	push	{fp, lr}
   230c4:	mov	fp, sp
   230c8:	sub	sp, sp, #16
   230cc:	str	r0, [sp, #8]
   230d0:	str	r1, [sp, #4]
   230d4:	ldr	r0, [sp, #8]
   230d8:	ldr	r0, [r0]
   230dc:	ldr	r1, [sp, #8]
   230e0:	ldr	r1, [r1, #4]
   230e4:	cmp	r0, r1
   230e8:	bne	23144 <__assert_fail@plt+0x11c40>
   230ec:	ldr	r0, [sp, #8]
   230f0:	ldr	r1, [r0]
   230f4:	mov	r2, #2
   230f8:	add	r1, r2, r1, lsl #1
   230fc:	str	r1, [r0]
   23100:	ldr	r0, [sp, #8]
   23104:	ldr	r1, [r0]
   23108:	ldr	r0, [r0, #8]
   2310c:	lsl	r1, r1, #2
   23110:	bl	33bb4 <__assert_fail@plt+0x226b0>
   23114:	str	r0, [sp]
   23118:	ldr	r0, [sp]
   2311c:	movw	r1, #0
   23120:	cmp	r0, r1
   23124:	bne	23138 <__assert_fail@plt+0x11c34>
   23128:	movw	r0, #0
   2312c:	and	r0, r0, #1
   23130:	strb	r0, [fp, #-1]
   23134:	b	23170 <__assert_fail@plt+0x11c6c>
   23138:	ldr	r0, [sp]
   2313c:	ldr	r1, [sp, #8]
   23140:	str	r0, [r1, #8]
   23144:	ldr	r0, [sp, #4]
   23148:	ldr	r1, [sp, #8]
   2314c:	ldr	r2, [r1, #4]
   23150:	ldr	r3, [r1, #8]
   23154:	add	ip, r2, #1
   23158:	str	ip, [r1, #4]
   2315c:	add	r1, r3, r2, lsl #2
   23160:	str	r0, [r1]
   23164:	movw	r0, #1
   23168:	and	r0, r0, #1
   2316c:	strb	r0, [fp, #-1]
   23170:	ldrb	r0, [fp, #-1]
   23174:	and	r0, r0, #1
   23178:	mov	sp, fp
   2317c:	pop	{fp, pc}
   23180:	push	{fp, lr}
   23184:	mov	fp, sp
   23188:	sub	sp, sp, #16
   2318c:	str	r0, [sp, #8]
   23190:	str	r1, [sp, #4]
   23194:	ldr	r0, [sp, #4]
   23198:	ldr	r0, [r0, #4]
   2319c:	ldr	r1, [sp, #8]
   231a0:	str	r0, [r1, #4]
   231a4:	ldr	r0, [sp, #4]
   231a8:	ldr	r0, [r0, #4]
   231ac:	cmp	r0, #0
   231b0:	ble	2322c <__assert_fail@plt+0x11d28>
   231b4:	ldr	r0, [sp, #8]
   231b8:	ldr	r1, [r0, #4]
   231bc:	str	r1, [r0]
   231c0:	ldr	r0, [sp, #8]
   231c4:	ldr	r0, [r0]
   231c8:	lsl	r0, r0, #2
   231cc:	bl	33b44 <__assert_fail@plt+0x22640>
   231d0:	ldr	r1, [sp, #8]
   231d4:	str	r0, [r1, #8]
   231d8:	ldr	r0, [sp, #8]
   231dc:	ldr	r0, [r0, #8]
   231e0:	movw	r1, #0
   231e4:	cmp	r0, r1
   231e8:	bne	2320c <__assert_fail@plt+0x11d08>
   231ec:	ldr	r0, [sp, #8]
   231f0:	movw	r1, #0
   231f4:	str	r1, [r0, #4]
   231f8:	ldr	r0, [sp, #8]
   231fc:	str	r1, [r0]
   23200:	movw	r0, #12
   23204:	str	r0, [fp, #-4]
   23208:	b	23248 <__assert_fail@plt+0x11d44>
   2320c:	ldr	r0, [sp, #8]
   23210:	ldr	r0, [r0, #8]
   23214:	ldr	r1, [sp, #4]
   23218:	ldr	r2, [r1, #4]
   2321c:	ldr	r1, [r1, #8]
   23220:	lsl	r2, r2, #2
   23224:	bl	112a0 <memcpy@plt>
   23228:	b	23240 <__assert_fail@plt+0x11d3c>
   2322c:	ldr	r0, [sp, #8]
   23230:	movw	r1, #0
   23234:	and	r1, r1, #255	; 0xff
   23238:	movw	r2, #12
   2323c:	bl	11420 <memset@plt>
   23240:	movw	r0, #0
   23244:	str	r0, [fp, #-4]
   23248:	ldr	r0, [fp, #-4]
   2324c:	mov	sp, fp
   23250:	pop	{fp, pc}
   23254:	sub	sp, sp, #28
   23258:	str	r0, [sp, #20]
   2325c:	str	r1, [sp, #16]
   23260:	ldr	r0, [sp, #20]
   23264:	ldr	r0, [r0, #4]
   23268:	cmp	r0, #0
   2326c:	bgt	2327c <__assert_fail@plt+0x11d78>
   23270:	movw	r0, #0
   23274:	str	r0, [sp, #24]
   23278:	b	23338 <__assert_fail@plt+0x11e34>
   2327c:	movw	r0, #0
   23280:	str	r0, [sp, #12]
   23284:	ldr	r0, [sp, #20]
   23288:	ldr	r0, [r0, #4]
   2328c:	sub	r0, r0, #1
   23290:	str	r0, [sp, #8]
   23294:	ldr	r0, [sp, #12]
   23298:	ldr	r1, [sp, #8]
   2329c:	cmp	r0, r1
   232a0:	bcs	232f4 <__assert_fail@plt+0x11df0>
   232a4:	ldr	r0, [sp, #12]
   232a8:	ldr	r1, [sp, #8]
   232ac:	add	r0, r0, r1
   232b0:	lsr	r0, r0, #1
   232b4:	str	r0, [sp, #4]
   232b8:	ldr	r0, [sp, #20]
   232bc:	ldr	r0, [r0, #8]
   232c0:	ldr	r1, [sp, #4]
   232c4:	add	r0, r0, r1, lsl #2
   232c8:	ldr	r0, [r0]
   232cc:	ldr	r1, [sp, #16]
   232d0:	cmp	r0, r1
   232d4:	bge	232e8 <__assert_fail@plt+0x11de4>
   232d8:	ldr	r0, [sp, #4]
   232dc:	add	r0, r0, #1
   232e0:	str	r0, [sp, #12]
   232e4:	b	232f0 <__assert_fail@plt+0x11dec>
   232e8:	ldr	r0, [sp, #4]
   232ec:	str	r0, [sp, #8]
   232f0:	b	23294 <__assert_fail@plt+0x11d90>
   232f4:	ldr	r0, [sp, #20]
   232f8:	ldr	r0, [r0, #8]
   232fc:	ldr	r1, [sp, #12]
   23300:	add	r0, r0, r1, lsl #2
   23304:	ldr	r0, [r0]
   23308:	ldr	r1, [sp, #16]
   2330c:	cmp	r0, r1
   23310:	bne	23324 <__assert_fail@plt+0x11e20>
   23314:	ldr	r0, [sp, #12]
   23318:	add	r0, r0, #1
   2331c:	str	r0, [sp]
   23320:	b	23330 <__assert_fail@plt+0x11e2c>
   23324:	movw	r0, #0
   23328:	str	r0, [sp]
   2332c:	b	23330 <__assert_fail@plt+0x11e2c>
   23330:	ldr	r0, [sp]
   23334:	str	r0, [sp, #24]
   23338:	ldr	r0, [sp, #24]
   2333c:	add	sp, sp, #28
   23340:	bx	lr
   23344:	push	{fp, lr}
   23348:	mov	fp, sp
   2334c:	sub	sp, sp, #40	; 0x28
   23350:	str	r0, [fp, #-8]
   23354:	str	r1, [fp, #-12]
   23358:	str	r2, [fp, #-16]
   2335c:	str	r3, [sp, #20]
   23360:	ldr	r0, [fp, #-16]
   23364:	ldr	r0, [r0, #4]
   23368:	cmp	r0, #0
   2336c:	bne	23384 <__assert_fail@plt+0x11e80>
   23370:	ldr	r0, [fp, #-8]
   23374:	movw	r1, #0
   23378:	str	r1, [r0]
   2337c:	str	r1, [fp, #-4]
   23380:	b	23494 <__assert_fail@plt+0x11f90>
   23384:	ldr	r0, [fp, #-16]
   23388:	ldr	r1, [sp, #20]
   2338c:	bl	234a0 <__assert_fail@plt+0x11f9c>
   23390:	str	r0, [sp, #16]
   23394:	ldr	r0, [fp, #-12]
   23398:	ldr	r0, [r0, #32]
   2339c:	ldr	r1, [sp, #16]
   233a0:	ldr	lr, [fp, #-12]
   233a4:	ldr	lr, [lr, #68]	; 0x44
   233a8:	and	r1, r1, lr
   233ac:	movw	lr, #12
   233b0:	mul	r1, r1, lr
   233b4:	add	r0, r0, r1
   233b8:	str	r0, [sp, #8]
   233bc:	movw	r0, #0
   233c0:	str	r0, [sp, #4]
   233c4:	ldr	r0, [sp, #4]
   233c8:	ldr	r1, [sp, #8]
   233cc:	ldr	r1, [r1]
   233d0:	cmp	r0, r1
   233d4:	bge	23458 <__assert_fail@plt+0x11f54>
   233d8:	ldr	r0, [sp, #8]
   233dc:	ldr	r0, [r0, #8]
   233e0:	ldr	r1, [sp, #4]
   233e4:	add	r0, r0, r1, lsl #2
   233e8:	ldr	r0, [r0]
   233ec:	str	r0, [sp]
   233f0:	ldr	r0, [sp]
   233f4:	ldr	r0, [r0]
   233f8:	ldr	r1, [sp, #16]
   233fc:	cmp	r0, r1
   23400:	bne	23444 <__assert_fail@plt+0x11f40>
   23404:	ldr	r0, [sp]
   23408:	ldrb	r0, [r0, #52]	; 0x34
   2340c:	and	r0, r0, #15
   23410:	and	r0, r0, #255	; 0xff
   23414:	ldr	r1, [sp, #20]
   23418:	cmp	r0, r1
   2341c:	bne	23444 <__assert_fail@plt+0x11f40>
   23420:	ldr	r0, [sp]
   23424:	ldr	r0, [r0, #40]	; 0x28
   23428:	ldr	r1, [fp, #-16]
   2342c:	bl	23518 <__assert_fail@plt+0x12014>
   23430:	tst	r0, #1
   23434:	beq	23444 <__assert_fail@plt+0x11f40>
   23438:	ldr	r0, [sp]
   2343c:	str	r0, [fp, #-4]
   23440:	b	23494 <__assert_fail@plt+0x11f90>
   23444:	b	23448 <__assert_fail@plt+0x11f44>
   23448:	ldr	r0, [sp, #4]
   2344c:	add	r0, r0, #1
   23450:	str	r0, [sp, #4]
   23454:	b	233c4 <__assert_fail@plt+0x11ec0>
   23458:	ldr	r0, [fp, #-12]
   2345c:	ldr	r1, [fp, #-16]
   23460:	ldr	r2, [sp, #20]
   23464:	ldr	r3, [sp, #16]
   23468:	bl	235e8 <__assert_fail@plt+0x120e4>
   2346c:	str	r0, [sp, #12]
   23470:	ldr	r0, [sp, #12]
   23474:	movw	r1, #0
   23478:	cmp	r0, r1
   2347c:	bne	2348c <__assert_fail@plt+0x11f88>
   23480:	ldr	r0, [fp, #-8]
   23484:	movw	r1, #12
   23488:	str	r1, [r0]
   2348c:	ldr	r0, [sp, #12]
   23490:	str	r0, [fp, #-4]
   23494:	ldr	r0, [fp, #-4]
   23498:	mov	sp, fp
   2349c:	pop	{fp, pc}
   234a0:	sub	sp, sp, #16
   234a4:	str	r0, [sp, #12]
   234a8:	str	r1, [sp, #8]
   234ac:	ldr	r0, [sp, #12]
   234b0:	ldr	r0, [r0, #4]
   234b4:	ldr	r1, [sp, #8]
   234b8:	add	r0, r0, r1
   234bc:	str	r0, [sp, #4]
   234c0:	movw	r0, #0
   234c4:	str	r0, [sp]
   234c8:	ldr	r0, [sp]
   234cc:	ldr	r1, [sp, #12]
   234d0:	ldr	r1, [r1, #4]
   234d4:	cmp	r0, r1
   234d8:	bge	2350c <__assert_fail@plt+0x12008>
   234dc:	ldr	r0, [sp, #12]
   234e0:	ldr	r0, [r0, #8]
   234e4:	ldr	r1, [sp]
   234e8:	add	r0, r0, r1, lsl #2
   234ec:	ldr	r0, [r0]
   234f0:	ldr	r1, [sp, #4]
   234f4:	add	r0, r1, r0
   234f8:	str	r0, [sp, #4]
   234fc:	ldr	r0, [sp]
   23500:	add	r0, r0, #1
   23504:	str	r0, [sp]
   23508:	b	234c8 <__assert_fail@plt+0x11fc4>
   2350c:	ldr	r0, [sp, #4]
   23510:	add	sp, sp, #16
   23514:	bx	lr
   23518:	sub	sp, sp, #16
   2351c:	str	r0, [sp, #8]
   23520:	str	r1, [sp, #4]
   23524:	ldr	r0, [sp, #8]
   23528:	movw	r1, #0
   2352c:	cmp	r0, r1
   23530:	beq	2355c <__assert_fail@plt+0x12058>
   23534:	ldr	r0, [sp, #4]
   23538:	movw	r1, #0
   2353c:	cmp	r0, r1
   23540:	beq	2355c <__assert_fail@plt+0x12058>
   23544:	ldr	r0, [sp, #8]
   23548:	ldr	r0, [r0, #4]
   2354c:	ldr	r1, [sp, #4]
   23550:	ldr	r1, [r1, #4]
   23554:	cmp	r0, r1
   23558:	beq	2356c <__assert_fail@plt+0x12068>
   2355c:	movw	r0, #0
   23560:	and	r0, r0, #1
   23564:	strb	r0, [sp, #15]
   23568:	b	235d8 <__assert_fail@plt+0x120d4>
   2356c:	ldr	r0, [sp, #8]
   23570:	ldr	r0, [r0, #4]
   23574:	str	r0, [sp]
   23578:	ldr	r0, [sp]
   2357c:	mvn	r1, #0
   23580:	add	r0, r0, r1
   23584:	str	r0, [sp]
   23588:	cmp	r0, #0
   2358c:	blt	235cc <__assert_fail@plt+0x120c8>
   23590:	ldr	r0, [sp, #8]
   23594:	ldr	r0, [r0, #8]
   23598:	ldr	r1, [sp]
   2359c:	ldr	r0, [r0, r1, lsl #2]
   235a0:	ldr	r2, [sp, #4]
   235a4:	ldr	r2, [r2, #8]
   235a8:	add	r1, r2, r1, lsl #2
   235ac:	ldr	r1, [r1]
   235b0:	cmp	r0, r1
   235b4:	beq	235c8 <__assert_fail@plt+0x120c4>
   235b8:	movw	r0, #0
   235bc:	and	r0, r0, #1
   235c0:	strb	r0, [sp, #15]
   235c4:	b	235d8 <__assert_fail@plt+0x120d4>
   235c8:	b	23578 <__assert_fail@plt+0x12074>
   235cc:	movw	r0, #1
   235d0:	and	r0, r0, #1
   235d4:	strb	r0, [sp, #15]
   235d8:	ldrb	r0, [sp, #15]
   235dc:	and	r0, r0, #1
   235e0:	add	sp, sp, #16
   235e4:	bx	lr
   235e8:	push	{fp, lr}
   235ec:	mov	fp, sp
   235f0:	sub	sp, sp, #56	; 0x38
   235f4:	str	r0, [fp, #-8]
   235f8:	str	r1, [fp, #-12]
   235fc:	str	r2, [fp, #-16]
   23600:	str	r3, [fp, #-20]	; 0xffffffec
   23604:	movw	r0, #0
   23608:	str	r0, [sp, #28]
   2360c:	movw	r0, #56	; 0x38
   23610:	movw	r1, #1
   23614:	bl	33aa8 <__assert_fail@plt+0x225a4>
   23618:	str	r0, [sp, #20]
   2361c:	ldr	r0, [sp, #20]
   23620:	movw	r1, #0
   23624:	cmp	r0, r1
   23628:	bne	23638 <__assert_fail@plt+0x12134>
   2362c:	movw	r0, #0
   23630:	str	r0, [fp, #-4]
   23634:	b	23934 <__assert_fail@plt+0x12430>
   23638:	ldr	r0, [sp, #20]
   2363c:	add	r0, r0, #4
   23640:	ldr	r1, [fp, #-12]
   23644:	bl	23180 <__assert_fail@plt+0x11c7c>
   23648:	str	r0, [sp, #24]
   2364c:	ldr	r0, [sp, #24]
   23650:	cmp	r0, #0
   23654:	beq	2366c <__assert_fail@plt+0x12168>
   23658:	ldr	r0, [sp, #20]
   2365c:	bl	35268 <__assert_fail@plt+0x23d64>
   23660:	movw	r0, #0
   23664:	str	r0, [fp, #-4]
   23668:	b	23934 <__assert_fail@plt+0x12430>
   2366c:	ldr	r0, [fp, #-16]
   23670:	ldr	r1, [sp, #20]
   23674:	ldrb	r2, [r1, #52]	; 0x34
   23678:	and	r0, r0, #15
   2367c:	bic	r2, r2, #15
   23680:	orr	r0, r2, r0
   23684:	strb	r0, [r1, #52]	; 0x34
   23688:	ldr	r0, [sp, #20]
   2368c:	add	r0, r0, #4
   23690:	ldr	r1, [sp, #20]
   23694:	str	r0, [r1, #40]	; 0x28
   23698:	movw	r0, #0
   2369c:	str	r0, [fp, #-24]	; 0xffffffe8
   236a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   236a4:	ldr	r1, [fp, #-12]
   236a8:	ldr	r1, [r1, #4]
   236ac:	cmp	r0, r1
   236b0:	bge	238fc <__assert_fail@plt+0x123f8>
   236b4:	ldr	r0, [fp, #-8]
   236b8:	ldr	r0, [r0]
   236bc:	ldr	r1, [fp, #-12]
   236c0:	ldr	r1, [r1, #8]
   236c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   236c8:	ldr	r1, [r1, r2, lsl #2]
   236cc:	add	r0, r0, r1, lsl #3
   236d0:	str	r0, [sp, #16]
   236d4:	ldr	r0, [sp, #16]
   236d8:	ldr	r0, [r0, #4]
   236dc:	and	r0, r0, #255	; 0xff
   236e0:	str	r0, [sp, #12]
   236e4:	ldr	r0, [sp, #16]
   236e8:	ldr	r0, [r0, #4]
   236ec:	lsr	r0, r0, #8
   236f0:	movw	r1, #1023	; 0x3ff
   236f4:	and	r0, r0, r1
   236f8:	str	r0, [sp, #8]
   236fc:	ldr	r0, [sp, #12]
   23700:	cmp	r0, #1
   23704:	bne	23718 <__assert_fail@plt+0x12214>
   23708:	ldr	r0, [sp, #8]
   2370c:	cmp	r0, #0
   23710:	bne	23718 <__assert_fail@plt+0x12214>
   23714:	b	238ec <__assert_fail@plt+0x123e8>
   23718:	ldr	r0, [sp, #16]
   2371c:	ldr	r0, [r0, #4]
   23720:	ldr	r1, [sp, #20]
   23724:	ldrb	r2, [r1, #52]	; 0x34
   23728:	lsr	r3, r2, #5
   2372c:	orr	r0, r3, r0, lsr #20
   23730:	and	r0, r0, #1
   23734:	lsl	r0, r0, #5
   23738:	bic	r2, r2, #32
   2373c:	orr	r0, r2, r0
   23740:	strb	r0, [r1, #52]	; 0x34
   23744:	ldr	r0, [sp, #12]
   23748:	cmp	r0, #2
   2374c:	bne	2376c <__assert_fail@plt+0x12268>
   23750:	ldr	r0, [sp, #20]
   23754:	ldrb	r1, [r0, #52]	; 0x34
   23758:	bic	r1, r1, #16
   2375c:	movw	r2, #16
   23760:	orr	r1, r1, r2
   23764:	strb	r1, [r0, #52]	; 0x34
   23768:	b	23794 <__assert_fail@plt+0x12290>
   2376c:	ldr	r0, [sp, #12]
   23770:	cmp	r0, #4
   23774:	bne	23790 <__assert_fail@plt+0x1228c>
   23778:	ldr	r0, [sp, #20]
   2377c:	ldrb	r1, [r0, #52]	; 0x34
   23780:	bic	r1, r1, #64	; 0x40
   23784:	movw	r2, #64	; 0x40
   23788:	orr	r1, r1, r2
   2378c:	strb	r1, [r0, #52]	; 0x34
   23790:	b	23794 <__assert_fail@plt+0x12290>
   23794:	ldr	r0, [sp, #8]
   23798:	cmp	r0, #0
   2379c:	beq	238e8 <__assert_fail@plt+0x123e4>
   237a0:	ldr	r0, [sp, #20]
   237a4:	ldr	r0, [r0, #40]	; 0x28
   237a8:	ldr	r1, [sp, #20]
   237ac:	add	r1, r1, #4
   237b0:	cmp	r0, r1
   237b4:	bne	23840 <__assert_fail@plt+0x1233c>
   237b8:	movw	r0, #12
   237bc:	bl	33b44 <__assert_fail@plt+0x22640>
   237c0:	str	r0, [sp, #4]
   237c4:	ldr	r0, [sp, #4]
   237c8:	movw	lr, #0
   237cc:	cmp	r0, lr
   237d0:	bne	237e8 <__assert_fail@plt+0x122e4>
   237d4:	ldr	r0, [sp, #20]
   237d8:	bl	18ba0 <__assert_fail@plt+0x769c>
   237dc:	movw	r0, #0
   237e0:	str	r0, [fp, #-4]
   237e4:	b	23934 <__assert_fail@plt+0x12430>
   237e8:	ldr	r0, [sp, #4]
   237ec:	ldr	r1, [sp, #20]
   237f0:	str	r0, [r1, #40]	; 0x28
   237f4:	ldr	r0, [sp, #20]
   237f8:	ldr	r0, [r0, #40]	; 0x28
   237fc:	ldr	r1, [fp, #-12]
   23800:	bl	23180 <__assert_fail@plt+0x11c7c>
   23804:	cmp	r0, #0
   23808:	beq	23820 <__assert_fail@plt+0x1231c>
   2380c:	ldr	r0, [sp, #20]
   23810:	bl	18ba0 <__assert_fail@plt+0x769c>
   23814:	movw	r0, #0
   23818:	str	r0, [fp, #-4]
   2381c:	b	23934 <__assert_fail@plt+0x12430>
   23820:	mov	r0, #0
   23824:	str	r0, [sp, #28]
   23828:	ldr	r0, [sp, #20]
   2382c:	ldrb	r1, [r0, #52]	; 0x34
   23830:	and	r1, r1, #127	; 0x7f
   23834:	movw	r2, #128	; 0x80
   23838:	orr	r1, r1, r2
   2383c:	strb	r1, [r0, #52]	; 0x34
   23840:	ldr	r0, [sp, #8]
   23844:	and	r0, r0, #1
   23848:	cmp	r0, #0
   2384c:	beq	23860 <__assert_fail@plt+0x1235c>
   23850:	ldr	r0, [fp, #-16]
   23854:	and	r0, r0, #1
   23858:	cmp	r0, #0
   2385c:	beq	238c0 <__assert_fail@plt+0x123bc>
   23860:	ldr	r0, [sp, #8]
   23864:	and	r0, r0, #2
   23868:	cmp	r0, #0
   2386c:	beq	23880 <__assert_fail@plt+0x1237c>
   23870:	ldr	r0, [fp, #-16]
   23874:	and	r0, r0, #1
   23878:	cmp	r0, #0
   2387c:	bne	238c0 <__assert_fail@plt+0x123bc>
   23880:	ldr	r0, [sp, #8]
   23884:	and	r0, r0, #16
   23888:	cmp	r0, #0
   2388c:	beq	238a0 <__assert_fail@plt+0x1239c>
   23890:	ldr	r0, [fp, #-16]
   23894:	and	r0, r0, #2
   23898:	cmp	r0, #0
   2389c:	beq	238c0 <__assert_fail@plt+0x123bc>
   238a0:	ldr	r0, [sp, #8]
   238a4:	and	r0, r0, #64	; 0x40
   238a8:	cmp	r0, #0
   238ac:	beq	238e4 <__assert_fail@plt+0x123e0>
   238b0:	ldr	r0, [fp, #-16]
   238b4:	and	r0, r0, #4
   238b8:	cmp	r0, #0
   238bc:	bne	238e4 <__assert_fail@plt+0x123e0>
   238c0:	ldr	r0, [sp, #20]
   238c4:	add	r0, r0, #4
   238c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   238cc:	ldr	r2, [sp, #28]
   238d0:	sub	r1, r1, r2
   238d4:	bl	23940 <__assert_fail@plt+0x1243c>
   238d8:	ldr	r0, [sp, #28]
   238dc:	add	r0, r0, #1
   238e0:	str	r0, [sp, #28]
   238e4:	b	238e8 <__assert_fail@plt+0x123e4>
   238e8:	b	238ec <__assert_fail@plt+0x123e8>
   238ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   238f0:	add	r0, r0, #1
   238f4:	str	r0, [fp, #-24]	; 0xffffffe8
   238f8:	b	236a0 <__assert_fail@plt+0x1219c>
   238fc:	ldr	r0, [fp, #-8]
   23900:	ldr	r1, [sp, #20]
   23904:	ldr	r2, [fp, #-20]	; 0xffffffec
   23908:	bl	239c8 <__assert_fail@plt+0x124c4>
   2390c:	str	r0, [sp, #24]
   23910:	ldr	r0, [sp, #24]
   23914:	cmp	r0, #0
   23918:	beq	2392c <__assert_fail@plt+0x12428>
   2391c:	ldr	r0, [sp, #20]
   23920:	bl	18ba0 <__assert_fail@plt+0x769c>
   23924:	movw	r0, #0
   23928:	str	r0, [sp, #20]
   2392c:	ldr	r0, [sp, #20]
   23930:	str	r0, [fp, #-4]
   23934:	ldr	r0, [fp, #-4]
   23938:	mov	sp, fp
   2393c:	pop	{fp, pc}
   23940:	sub	sp, sp, #8
   23944:	str	r0, [sp, #4]
   23948:	str	r1, [sp]
   2394c:	ldr	r0, [sp]
   23950:	cmp	r0, #0
   23954:	blt	2396c <__assert_fail@plt+0x12468>
   23958:	ldr	r0, [sp]
   2395c:	ldr	r1, [sp, #4]
   23960:	ldr	r1, [r1, #4]
   23964:	cmp	r0, r1
   23968:	blt	23970 <__assert_fail@plt+0x1246c>
   2396c:	b	239c0 <__assert_fail@plt+0x124bc>
   23970:	ldr	r0, [sp, #4]
   23974:	ldr	r1, [r0, #4]
   23978:	mvn	r2, #0
   2397c:	add	r1, r1, r2
   23980:	str	r1, [r0, #4]
   23984:	ldr	r0, [sp]
   23988:	ldr	r1, [sp, #4]
   2398c:	ldr	r1, [r1, #4]
   23990:	cmp	r0, r1
   23994:	bge	239c0 <__assert_fail@plt+0x124bc>
   23998:	ldr	r0, [sp, #4]
   2399c:	ldr	r0, [r0, #8]
   239a0:	ldr	r1, [sp]
   239a4:	add	r0, r0, r1, lsl #2
   239a8:	ldr	r1, [r0, #4]
   239ac:	str	r1, [r0]
   239b0:	ldr	r0, [sp]
   239b4:	add	r0, r0, #1
   239b8:	str	r0, [sp]
   239bc:	b	23984 <__assert_fail@plt+0x12480>
   239c0:	add	sp, sp, #8
   239c4:	bx	lr
   239c8:	push	{fp, lr}
   239cc:	mov	fp, sp
   239d0:	sub	sp, sp, #40	; 0x28
   239d4:	str	r0, [fp, #-8]
   239d8:	str	r1, [fp, #-12]
   239dc:	str	r2, [fp, #-16]
   239e0:	ldr	r0, [fp, #-16]
   239e4:	ldr	r1, [fp, #-12]
   239e8:	str	r0, [r1]
   239ec:	ldr	r0, [fp, #-12]
   239f0:	add	r0, r0, #16
   239f4:	ldr	r1, [fp, #-12]
   239f8:	ldr	r1, [r1, #8]
   239fc:	bl	22330 <__assert_fail@plt+0x10e2c>
   23a00:	str	r0, [sp, #16]
   23a04:	ldr	r0, [sp, #16]
   23a08:	cmp	r0, #0
   23a0c:	beq	23a1c <__assert_fail@plt+0x12518>
   23a10:	movw	r0, #12
   23a14:	str	r0, [fp, #-4]
   23a18:	b	23b74 <__assert_fail@plt+0x12670>
   23a1c:	movw	r0, #0
   23a20:	str	r0, [sp, #12]
   23a24:	ldr	r0, [sp, #12]
   23a28:	ldr	r1, [fp, #-12]
   23a2c:	ldr	r1, [r1, #8]
   23a30:	cmp	r0, r1
   23a34:	bge	23aac <__assert_fail@plt+0x125a8>
   23a38:	ldr	r0, [fp, #-12]
   23a3c:	ldr	r0, [r0, #12]
   23a40:	ldr	r1, [sp, #12]
   23a44:	ldr	r0, [r0, r1, lsl #2]
   23a48:	str	r0, [sp, #8]
   23a4c:	ldr	r0, [fp, #-8]
   23a50:	ldr	r0, [r0]
   23a54:	ldr	r1, [sp, #8]
   23a58:	add	r0, r0, r1, lsl #3
   23a5c:	ldr	r0, [r0, #4]
   23a60:	and	r0, r0, #255	; 0xff
   23a64:	and	r0, r0, #8
   23a68:	cmp	r0, #0
   23a6c:	bne	23a98 <__assert_fail@plt+0x12594>
   23a70:	ldr	r0, [fp, #-12]
   23a74:	add	r0, r0, #16
   23a78:	ldr	r1, [sp, #8]
   23a7c:	bl	230c0 <__assert_fail@plt+0x11bbc>
   23a80:	tst	r0, #1
   23a84:	bne	23a94 <__assert_fail@plt+0x12590>
   23a88:	movw	r0, #12
   23a8c:	str	r0, [fp, #-4]
   23a90:	b	23b74 <__assert_fail@plt+0x12670>
   23a94:	b	23a98 <__assert_fail@plt+0x12594>
   23a98:	b	23a9c <__assert_fail@plt+0x12598>
   23a9c:	ldr	r0, [sp, #12]
   23aa0:	add	r0, r0, #1
   23aa4:	str	r0, [sp, #12]
   23aa8:	b	23a24 <__assert_fail@plt+0x12520>
   23aac:	ldr	r0, [fp, #-8]
   23ab0:	ldr	r0, [r0, #32]
   23ab4:	ldr	r1, [fp, #-16]
   23ab8:	ldr	r2, [fp, #-8]
   23abc:	ldr	r2, [r2, #68]	; 0x44
   23ac0:	and	r1, r1, r2
   23ac4:	movw	r2, #12
   23ac8:	mul	r1, r1, r2
   23acc:	add	r0, r0, r1
   23ad0:	str	r0, [sp, #20]
   23ad4:	ldr	r0, [sp, #20]
   23ad8:	ldr	r0, [r0, #4]
   23adc:	ldr	r1, [sp, #20]
   23ae0:	ldr	r1, [r1]
   23ae4:	cmp	r0, r1
   23ae8:	bgt	23b4c <__assert_fail@plt+0x12648>
   23aec:	ldr	r0, [sp, #20]
   23af0:	ldr	r0, [r0]
   23af4:	mov	r1, #2
   23af8:	add	r0, r1, r0, lsl #1
   23afc:	str	r0, [sp, #4]
   23b00:	ldr	r0, [sp, #20]
   23b04:	ldr	r0, [r0, #8]
   23b08:	ldr	r1, [sp, #4]
   23b0c:	lsl	r1, r1, #2
   23b10:	bl	33bb4 <__assert_fail@plt+0x226b0>
   23b14:	str	r0, [sp]
   23b18:	ldr	r0, [sp]
   23b1c:	movw	r1, #0
   23b20:	cmp	r0, r1
   23b24:	bne	23b34 <__assert_fail@plt+0x12630>
   23b28:	movw	r0, #12
   23b2c:	str	r0, [fp, #-4]
   23b30:	b	23b74 <__assert_fail@plt+0x12670>
   23b34:	ldr	r0, [sp]
   23b38:	ldr	r1, [sp, #20]
   23b3c:	str	r0, [r1, #8]
   23b40:	ldr	r0, [sp, #4]
   23b44:	ldr	r1, [sp, #20]
   23b48:	str	r0, [r1, #4]
   23b4c:	ldr	r0, [fp, #-12]
   23b50:	ldr	r1, [sp, #20]
   23b54:	ldr	r2, [r1]
   23b58:	ldr	r3, [r1, #8]
   23b5c:	add	ip, r2, #1
   23b60:	str	ip, [r1]
   23b64:	add	r1, r3, r2, lsl #2
   23b68:	str	r0, [r1]
   23b6c:	movw	r0, #0
   23b70:	str	r0, [fp, #-4]
   23b74:	ldr	r0, [fp, #-4]
   23b78:	mov	sp, fp
   23b7c:	pop	{fp, pc}
   23b80:	push	{fp, lr}
   23b84:	mov	fp, sp
   23b88:	sub	sp, sp, #40	; 0x28
   23b8c:	str	r0, [fp, #-8]
   23b90:	str	r1, [fp, #-12]
   23b94:	str	r2, [fp, #-16]
   23b98:	str	r3, [sp, #20]
   23b9c:	movw	r0, #1
   23ba0:	str	r0, [sp, #16]
   23ba4:	ldr	r0, [fp, #-16]
   23ba8:	add	r0, r0, #1
   23bac:	str	r0, [sp, #8]
   23bb0:	ldr	r0, [sp, #20]
   23bb4:	cmp	r0, #0
   23bb8:	bne	23c40 <__assert_fail@plt+0x1273c>
   23bbc:	ldr	r0, [sp, #8]
   23bc0:	lsl	r0, r0, #2
   23bc4:	bl	33b44 <__assert_fail@plt+0x22640>
   23bc8:	ldr	lr, [fp, #-8]
   23bcc:	str	r0, [lr, #4]
   23bd0:	ldr	r0, [fp, #-8]
   23bd4:	ldr	r0, [r0, #4]
   23bd8:	movw	lr, #0
   23bdc:	cmp	r0, lr
   23be0:	bne	23bf0 <__assert_fail@plt+0x126ec>
   23be4:	movw	r0, #0
   23be8:	str	r0, [fp, #-4]
   23bec:	b	23de8 <__assert_fail@plt+0x128e4>
   23bf0:	ldr	r0, [sp, #8]
   23bf4:	lsl	r0, r0, #2
   23bf8:	bl	33b44 <__assert_fail@plt+0x22640>
   23bfc:	ldr	lr, [fp, #-8]
   23c00:	str	r0, [lr, #8]
   23c04:	ldr	r0, [fp, #-8]
   23c08:	ldr	r0, [r0, #8]
   23c0c:	movw	lr, #0
   23c10:	cmp	r0, lr
   23c14:	bne	23c30 <__assert_fail@plt+0x1272c>
   23c18:	ldr	r0, [fp, #-8]
   23c1c:	ldr	r0, [r0, #4]
   23c20:	bl	35268 <__assert_fail@plt+0x23d64>
   23c24:	movw	r0, #0
   23c28:	str	r0, [fp, #-4]
   23c2c:	b	23de8 <__assert_fail@plt+0x128e4>
   23c30:	ldr	r0, [sp, #8]
   23c34:	ldr	r1, [fp, #-8]
   23c38:	str	r0, [r1]
   23c3c:	b	23d2c <__assert_fail@plt+0x12828>
   23c40:	ldr	r0, [sp, #20]
   23c44:	cmp	r0, #1
   23c48:	bne	23cf8 <__assert_fail@plt+0x127f4>
   23c4c:	ldr	r0, [sp, #8]
   23c50:	ldr	r1, [fp, #-8]
   23c54:	ldr	r1, [r1]
   23c58:	cmp	r0, r1
   23c5c:	bls	23cf4 <__assert_fail@plt+0x127f0>
   23c60:	ldr	r0, [fp, #-8]
   23c64:	ldr	r0, [r0, #4]
   23c68:	ldr	r1, [sp, #8]
   23c6c:	lsl	r1, r1, #2
   23c70:	bl	33bb4 <__assert_fail@plt+0x226b0>
   23c74:	str	r0, [sp, #4]
   23c78:	ldr	r0, [sp, #4]
   23c7c:	movw	r1, #0
   23c80:	cmp	r0, r1
   23c84:	bne	23c94 <__assert_fail@plt+0x12790>
   23c88:	movw	r0, #0
   23c8c:	str	r0, [fp, #-4]
   23c90:	b	23de8 <__assert_fail@plt+0x128e4>
   23c94:	ldr	r0, [fp, #-8]
   23c98:	ldr	r0, [r0, #8]
   23c9c:	ldr	r1, [sp, #8]
   23ca0:	lsl	r1, r1, #2
   23ca4:	bl	33bb4 <__assert_fail@plt+0x226b0>
   23ca8:	str	r0, [sp]
   23cac:	ldr	r0, [sp]
   23cb0:	movw	r1, #0
   23cb4:	cmp	r0, r1
   23cb8:	bne	23cd0 <__assert_fail@plt+0x127cc>
   23cbc:	ldr	r0, [sp, #4]
   23cc0:	bl	35268 <__assert_fail@plt+0x23d64>
   23cc4:	movw	r0, #0
   23cc8:	str	r0, [fp, #-4]
   23ccc:	b	23de8 <__assert_fail@plt+0x128e4>
   23cd0:	ldr	r0, [sp, #4]
   23cd4:	ldr	r1, [fp, #-8]
   23cd8:	str	r0, [r1, #4]
   23cdc:	ldr	r0, [sp]
   23ce0:	ldr	r1, [fp, #-8]
   23ce4:	str	r0, [r1, #8]
   23ce8:	ldr	r0, [sp, #8]
   23cec:	ldr	r1, [fp, #-8]
   23cf0:	str	r0, [r1]
   23cf4:	b	23d28 <__assert_fail@plt+0x12824>
   23cf8:	ldr	r0, [sp, #20]
   23cfc:	cmp	r0, #2
   23d00:	bne	23d08 <__assert_fail@plt+0x12804>
   23d04:	b	23d08 <__assert_fail@plt+0x12804>
   23d08:	ldr	r0, [fp, #-16]
   23d0c:	ldr	r1, [fp, #-8]
   23d10:	ldr	r1, [r1]
   23d14:	cmp	r0, r1
   23d18:	bhi	23d20 <__assert_fail@plt+0x1281c>
   23d1c:	b	23d20 <__assert_fail@plt+0x1281c>
   23d20:	movw	r0, #2
   23d24:	str	r0, [sp, #16]
   23d28:	b	23d2c <__assert_fail@plt+0x12828>
   23d2c:	movw	r0, #0
   23d30:	str	r0, [sp, #12]
   23d34:	ldr	r0, [sp, #12]
   23d38:	ldr	r1, [fp, #-16]
   23d3c:	cmp	r0, r1
   23d40:	bge	23d8c <__assert_fail@plt+0x12888>
   23d44:	ldr	r0, [fp, #-12]
   23d48:	ldr	r1, [sp, #12]
   23d4c:	ldr	r0, [r0, r1, lsl #3]
   23d50:	ldr	r2, [fp, #-8]
   23d54:	ldr	r2, [r2, #4]
   23d58:	str	r0, [r2, r1, lsl #2]
   23d5c:	ldr	r0, [fp, #-12]
   23d60:	ldr	r1, [sp, #12]
   23d64:	add	r0, r0, r1, lsl #3
   23d68:	ldr	r0, [r0, #4]
   23d6c:	ldr	r2, [fp, #-8]
   23d70:	ldr	r2, [r2, #8]
   23d74:	add	r1, r2, r1, lsl #2
   23d78:	str	r0, [r1]
   23d7c:	ldr	r0, [sp, #12]
   23d80:	add	r0, r0, #1
   23d84:	str	r0, [sp, #12]
   23d88:	b	23d34 <__assert_fail@plt+0x12830>
   23d8c:	b	23d90 <__assert_fail@plt+0x1288c>
   23d90:	ldr	r0, [sp, #12]
   23d94:	ldr	r1, [fp, #-8]
   23d98:	ldr	r1, [r1]
   23d9c:	cmp	r0, r1
   23da0:	bcs	23de0 <__assert_fail@plt+0x128dc>
   23da4:	ldr	r0, [fp, #-8]
   23da8:	ldr	r0, [r0, #8]
   23dac:	ldr	r1, [sp, #12]
   23db0:	mvn	r2, #0
   23db4:	str	r2, [r0, r1, lsl #2]
   23db8:	ldr	r0, [fp, #-8]
   23dbc:	ldr	r0, [r0, #4]
   23dc0:	ldr	r1, [sp, #12]
   23dc4:	add	r0, r0, r1, lsl #2
   23dc8:	mvn	r1, #0
   23dcc:	str	r1, [r0]
   23dd0:	ldr	r0, [sp, #12]
   23dd4:	add	r0, r0, #1
   23dd8:	str	r0, [sp, #12]
   23ddc:	b	23d90 <__assert_fail@plt+0x1288c>
   23de0:	ldr	r0, [sp, #16]
   23de4:	str	r0, [fp, #-4]
   23de8:	ldr	r0, [fp, #-4]
   23dec:	mov	sp, fp
   23df0:	pop	{fp, pc}
   23df4:	push	{r4, sl, fp, lr}
   23df8:	add	fp, sp, #8
   23dfc:	sub	sp, sp, #64	; 0x40
   23e00:	ldr	ip, [fp, #16]
   23e04:	ldr	lr, [fp, #12]
   23e08:	ldr	r4, [fp, #8]
   23e0c:	str	r0, [fp, #-16]
   23e10:	str	r1, [fp, #-20]	; 0xffffffec
   23e14:	str	r2, [fp, #-24]	; 0xffffffe8
   23e18:	str	r3, [fp, #-28]	; 0xffffffe4
   23e1c:	and	r0, lr, #1
   23e20:	strb	r0, [fp, #-29]	; 0xffffffe3
   23e24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23e28:	ldr	r1, [fp, #16]
   23e2c:	ldr	r1, [r1, #92]	; 0x5c
   23e30:	cmp	r0, r1
   23e34:	str	r4, [sp, #28]
   23e38:	str	ip, [sp, #24]
   23e3c:	bge	23e4c <__assert_fail@plt+0x12948>
   23e40:	ldr	r0, [fp, #16]
   23e44:	ldr	r0, [r0, #92]	; 0x5c
   23e48:	str	r0, [fp, #-28]	; 0xffffffe4
   23e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23e50:	add	r0, r0, #1
   23e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23e58:	cmp	r0, r1
   23e5c:	bge	23e70 <__assert_fail@plt+0x1296c>
   23e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23e64:	add	r0, r0, #1
   23e68:	str	r0, [sp, #20]
   23e6c:	b	23e78 <__assert_fail@plt+0x12974>
   23e70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23e74:	str	r0, [sp, #20]
   23e78:	ldr	r0, [sp, #20]
   23e7c:	str	r0, [sp, #32]
   23e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23e88:	ldr	r2, [fp, #-16]
   23e8c:	ldr	r3, [fp, #8]
   23e90:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   23e94:	ldr	lr, [fp, #16]
   23e98:	and	ip, ip, #1
   23e9c:	str	ip, [sp]
   23ea0:	str	lr, [sp, #4]
   23ea4:	bl	1a148 <__assert_fail@plt+0x8c44>
   23ea8:	ldr	r0, [fp, #-16]
   23eac:	ldr	r1, [sp, #32]
   23eb0:	bl	1a24c <__assert_fail@plt+0x8d48>
   23eb4:	str	r0, [sp, #36]	; 0x24
   23eb8:	ldr	r0, [sp, #36]	; 0x24
   23ebc:	cmp	r0, #0
   23ec0:	beq	23ed0 <__assert_fail@plt+0x129cc>
   23ec4:	ldr	r0, [sp, #36]	; 0x24
   23ec8:	str	r0, [fp, #-12]
   23ecc:	b	23f84 <__assert_fail@plt+0x12a80>
   23ed0:	ldr	r0, [fp, #16]
   23ed4:	add	r0, r0, #96	; 0x60
   23ed8:	ldr	r1, [fp, #-16]
   23edc:	str	r0, [r1, #68]	; 0x44
   23ee0:	ldr	r0, [fp, #16]
   23ee4:	ldrb	r0, [r0, #88]	; 0x58
   23ee8:	ubfx	r0, r0, #4, #1
   23eec:	and	r0, r0, #255	; 0xff
   23ef0:	ldr	r1, [fp, #-16]
   23ef4:	strb	r0, [r1, #78]	; 0x4e
   23ef8:	ldr	r0, [fp, #-16]
   23efc:	ldrb	r0, [r0, #75]	; 0x4b
   23f00:	cmp	r0, #0
   23f04:	beq	23f18 <__assert_fail@plt+0x12a14>
   23f08:	ldr	r0, [fp, #-16]
   23f0c:	ldr	r0, [r0, #4]
   23f10:	str	r0, [sp, #16]
   23f14:	b	23f20 <__assert_fail@plt+0x12a1c>
   23f18:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f1c:	str	r0, [sp, #16]
   23f20:	ldr	r0, [sp, #16]
   23f24:	ldr	r1, [fp, #-16]
   23f28:	str	r0, [r1, #4]
   23f2c:	ldr	r0, [fp, #-16]
   23f30:	ldrb	r0, [r0, #75]	; 0x4b
   23f34:	cmp	r0, #0
   23f38:	bne	23f4c <__assert_fail@plt+0x12a48>
   23f3c:	ldr	r0, [fp, #16]
   23f40:	ldr	r0, [r0, #92]	; 0x5c
   23f44:	cmp	r0, #1
   23f48:	ble	23f58 <__assert_fail@plt+0x12a54>
   23f4c:	movw	r0, #0
   23f50:	str	r0, [sp, #12]
   23f54:	b	23f60 <__assert_fail@plt+0x12a5c>
   23f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23f5c:	str	r0, [sp, #12]
   23f60:	ldr	r0, [sp, #12]
   23f64:	ldr	r1, [fp, #-16]
   23f68:	str	r0, [r1, #28]
   23f6c:	ldr	r0, [fp, #-16]
   23f70:	ldr	r0, [r0, #28]
   23f74:	ldr	r1, [fp, #-16]
   23f78:	str	r0, [r1, #32]
   23f7c:	movw	r0, #0
   23f80:	str	r0, [fp, #-12]
   23f84:	ldr	r0, [fp, #-12]
   23f88:	sub	sp, fp, #8
   23f8c:	pop	{r4, sl, fp, pc}
   23f90:	push	{fp, lr}
   23f94:	mov	fp, sp
   23f98:	sub	sp, sp, #32
   23f9c:	str	r0, [fp, #-8]
   23fa0:	str	r1, [fp, #-12]
   23fa4:	str	r2, [sp, #16]
   23fa8:	ldr	r0, [fp, #-12]
   23fac:	ldr	r1, [fp, #-8]
   23fb0:	str	r0, [r1, #88]	; 0x58
   23fb4:	ldr	r0, [fp, #-8]
   23fb8:	mvn	r1, #0
   23fbc:	str	r1, [r0, #92]	; 0x5c
   23fc0:	ldr	r0, [sp, #16]
   23fc4:	cmp	r0, #0
   23fc8:	ble	240a4 <__assert_fail@plt+0x12ba0>
   23fcc:	ldr	r0, [pc, #264]	; 240dc <__assert_fail@plt+0x12bd8>
   23fd0:	movw	r1, #24
   23fd4:	str	r1, [sp, #12]
   23fd8:	ldr	r1, [sp, #12]
   23fdc:	mvn	r2, #0
   23fe0:	udiv	r1, r2, r1
   23fe4:	cmp	r0, r1
   23fe8:	bcs	23ff8 <__assert_fail@plt+0x12af4>
   23fec:	ldr	r0, [pc, #232]	; 240dc <__assert_fail@plt+0x12bd8>
   23ff0:	str	r0, [sp, #8]
   23ff4:	b	24008 <__assert_fail@plt+0x12b04>
   23ff8:	ldr	r0, [sp, #12]
   23ffc:	mvn	r1, #0
   24000:	udiv	r0, r1, r0
   24004:	str	r0, [sp, #8]
   24008:	ldr	r0, [sp, #8]
   2400c:	ldr	r1, [sp, #16]
   24010:	cmp	r0, r1
   24014:	bcs	24024 <__assert_fail@plt+0x12b20>
   24018:	movw	r0, #12
   2401c:	str	r0, [fp, #-4]
   24020:	b	240d0 <__assert_fail@plt+0x12bcc>
   24024:	ldr	r0, [sp, #16]
   24028:	add	r0, r0, r0, lsl #1
   2402c:	lsl	r0, r0, #3
   24030:	bl	33b44 <__assert_fail@plt+0x22640>
   24034:	ldr	lr, [fp, #-8]
   24038:	str	r0, [lr, #116]	; 0x74
   2403c:	ldr	r0, [sp, #16]
   24040:	lsl	r0, r0, #2
   24044:	bl	33b44 <__assert_fail@plt+0x22640>
   24048:	ldr	lr, [fp, #-8]
   2404c:	str	r0, [lr, #132]	; 0x84
   24050:	ldr	r0, [fp, #-8]
   24054:	ldr	r0, [r0, #116]	; 0x74
   24058:	movw	lr, #0
   2405c:	cmp	r0, lr
   24060:	movw	r0, #1
   24064:	str	r0, [sp, #4]
   24068:	beq	24088 <__assert_fail@plt+0x12b84>
   2406c:	ldr	r0, [fp, #-8]
   24070:	ldr	r0, [r0, #132]	; 0x84
   24074:	movw	r1, #0
   24078:	cmp	r0, r1
   2407c:	movw	r0, #0
   24080:	moveq	r0, #1
   24084:	str	r0, [sp, #4]
   24088:	ldr	r0, [sp, #4]
   2408c:	tst	r0, #1
   24090:	beq	240a0 <__assert_fail@plt+0x12b9c>
   24094:	movw	r0, #12
   24098:	str	r0, [fp, #-4]
   2409c:	b	240d0 <__assert_fail@plt+0x12bcc>
   240a0:	b	240a4 <__assert_fail@plt+0x12ba0>
   240a4:	ldr	r0, [sp, #16]
   240a8:	ldr	r1, [fp, #-8]
   240ac:	str	r0, [r1, #112]	; 0x70
   240b0:	ldr	r0, [fp, #-8]
   240b4:	movw	r1, #1
   240b8:	str	r1, [r0, #120]	; 0x78
   240bc:	ldr	r0, [sp, #16]
   240c0:	ldr	r1, [fp, #-8]
   240c4:	str	r0, [r1, #128]	; 0x80
   240c8:	movw	r0, #0
   240cc:	str	r0, [fp, #-4]
   240d0:	ldr	r0, [fp, #-4]
   240d4:	mov	sp, fp
   240d8:	pop	{fp, pc}
   240dc:	svcvc	0x00ffffff
   240e0:	push	{fp, lr}
   240e4:	mov	fp, sp
   240e8:	sub	sp, sp, #128	; 0x80
   240ec:	str	r0, [fp, #-8]
   240f0:	str	r1, [fp, #-12]
   240f4:	str	r2, [fp, #-16]
   240f8:	ldr	r0, [fp, #-8]
   240fc:	ldr	r0, [r0, #24]
   24100:	ldr	r1, [fp, #-12]
   24104:	cmp	r0, r1
   24108:	bgt	24124 <__assert_fail@plt+0x12c20>
   2410c:	ldr	r0, [fp, #-12]
   24110:	ldr	r1, [fp, #-8]
   24114:	ldr	r1, [r1, #24]
   24118:	sub	r0, r0, r1
   2411c:	str	r0, [fp, #-20]	; 0xffffffec
   24120:	b	241e4 <__assert_fail@plt+0x12ce0>
   24124:	ldr	r0, [fp, #-8]
   24128:	ldr	r0, [r0, #80]	; 0x50
   2412c:	cmp	r0, #1
   24130:	ble	2414c <__assert_fail@plt+0x12c48>
   24134:	ldr	r0, [fp, #-8]
   24138:	add	r0, r0, #16
   2413c:	movw	r1, #0
   24140:	and	r1, r1, #255	; 0xff
   24144:	movw	r2, #8
   24148:	bl	11420 <memset@plt>
   2414c:	ldr	r0, [fp, #-8]
   24150:	ldr	r0, [r0, #44]	; 0x2c
   24154:	ldr	r1, [fp, #-8]
   24158:	str	r0, [r1, #48]	; 0x30
   2415c:	ldr	r0, [fp, #-8]
   24160:	ldr	r0, [r0, #52]	; 0x34
   24164:	ldr	r1, [fp, #-8]
   24168:	str	r0, [r1, #56]	; 0x38
   2416c:	ldr	r0, [fp, #-8]
   24170:	movw	r1, #0
   24174:	str	r1, [r0, #28]
   24178:	ldr	r0, [fp, #-8]
   2417c:	str	r1, [r0, #24]
   24180:	ldr	r0, [fp, #-8]
   24184:	str	r1, [r0, #32]
   24188:	ldr	r0, [fp, #-8]
   2418c:	movw	r1, #0
   24190:	strb	r1, [r0, #76]	; 0x4c
   24194:	ldr	r0, [fp, #-16]
   24198:	and	r0, r0, #1
   2419c:	cmp	r0, #0
   241a0:	movw	r0, #0
   241a4:	movne	r0, #1
   241a8:	tst	r0, #1
   241ac:	movw	r0, #4
   241b0:	moveq	r0, #6
   241b4:	ldr	r1, [fp, #-8]
   241b8:	str	r0, [r1, #60]	; 0x3c
   241bc:	ldr	r0, [fp, #-8]
   241c0:	ldrsb	r0, [r0, #75]	; 0x4b
   241c4:	cmp	r0, #0
   241c8:	bne	241dc <__assert_fail@plt+0x12cd8>
   241cc:	ldr	r0, [fp, #-8]
   241d0:	ldr	r0, [r0]
   241d4:	ldr	r1, [fp, #-8]
   241d8:	str	r0, [r1, #4]
   241dc:	ldr	r0, [fp, #-12]
   241e0:	str	r0, [fp, #-20]	; 0xffffffec
   241e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   241e8:	cmp	r0, #0
   241ec:	beq	24bc4 <__assert_fail@plt+0x136c0>
   241f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   241f4:	ldr	r1, [fp, #-8]
   241f8:	ldr	r1, [r1, #32]
   241fc:	cmp	r0, r1
   24200:	bge	246ac <__assert_fail@plt+0x131a8>
   24204:	ldr	r0, [fp, #-8]
   24208:	ldrb	r0, [r0, #76]	; 0x4c
   2420c:	cmp	r0, #0
   24210:	beq	245d8 <__assert_fail@plt+0x130d4>
   24214:	movw	r0, #0
   24218:	str	r0, [fp, #-24]	; 0xffffffe8
   2421c:	ldr	r0, [fp, #-8]
   24220:	ldr	r0, [r0, #28]
   24224:	str	r0, [fp, #-28]	; 0xffffffe4
   24228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2422c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24230:	add	r0, r0, r1
   24234:	add	r0, r0, r0, lsr #31
   24238:	asr	r0, r0, #1
   2423c:	str	r0, [fp, #-32]	; 0xffffffe0
   24240:	ldr	r0, [fp, #-8]
   24244:	ldr	r0, [r0, #12]
   24248:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2424c:	add	r0, r0, r1, lsl #2
   24250:	ldr	r0, [r0]
   24254:	ldr	r1, [fp, #-20]	; 0xffffffec
   24258:	cmp	r0, r1
   2425c:	ble	2426c <__assert_fail@plt+0x12d68>
   24260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24264:	str	r0, [fp, #-28]	; 0xffffffe4
   24268:	b	242a4 <__assert_fail@plt+0x12da0>
   2426c:	ldr	r0, [fp, #-8]
   24270:	ldr	r0, [r0, #12]
   24274:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24278:	add	r0, r0, r1, lsl #2
   2427c:	ldr	r0, [r0]
   24280:	ldr	r1, [fp, #-20]	; 0xffffffec
   24284:	cmp	r0, r1
   24288:	bge	2429c <__assert_fail@plt+0x12d98>
   2428c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24290:	add	r0, r0, #1
   24294:	str	r0, [fp, #-24]	; 0xffffffe8
   24298:	b	242a0 <__assert_fail@plt+0x12d9c>
   2429c:	b	242b8 <__assert_fail@plt+0x12db4>
   242a0:	b	242a4 <__assert_fail@plt+0x12da0>
   242a4:	b	242a8 <__assert_fail@plt+0x12da4>
   242a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   242ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   242b0:	cmp	r0, r1
   242b4:	blt	24228 <__assert_fail@plt+0x12d24>
   242b8:	ldr	r0, [fp, #-8]
   242bc:	ldr	r0, [r0, #12]
   242c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   242c4:	add	r0, r0, r1, lsl #2
   242c8:	ldr	r0, [r0]
   242cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   242d0:	cmp	r0, r1
   242d4:	bge	242e4 <__assert_fail@plt+0x12de0>
   242d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   242dc:	add	r0, r0, #1
   242e0:	str	r0, [fp, #-32]	; 0xffffffe0
   242e4:	ldr	r0, [fp, #-8]
   242e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   242ec:	sub	r1, r1, #1
   242f0:	ldr	r2, [fp, #-16]
   242f4:	bl	25b94 <__assert_fail@plt+0x14690>
   242f8:	ldr	r1, [fp, #-8]
   242fc:	str	r0, [r1, #60]	; 0x3c
   24300:	ldr	r0, [fp, #-8]
   24304:	ldr	r0, [r0, #28]
   24308:	ldr	r1, [fp, #-20]	; 0xffffffec
   2430c:	cmp	r0, r1
   24310:	ble	24414 <__assert_fail@plt+0x12f10>
   24314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24318:	ldr	r1, [fp, #-20]	; 0xffffffec
   2431c:	cmp	r0, r1
   24320:	bne	24414 <__assert_fail@plt+0x12f10>
   24324:	ldr	r0, [fp, #-8]
   24328:	ldr	r0, [r0, #12]
   2432c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24330:	add	r0, r0, r1, lsl #2
   24334:	ldr	r0, [r0]
   24338:	ldr	r1, [fp, #-20]	; 0xffffffec
   2433c:	cmp	r0, r1
   24340:	bne	24414 <__assert_fail@plt+0x12f10>
   24344:	ldr	r0, [fp, #-8]
   24348:	ldr	r1, [r0, #8]
   2434c:	ldr	r0, [r0, #28]
   24350:	ldr	r2, [fp, #-20]	; 0xffffffec
   24354:	add	r3, r1, r2, lsl #2
   24358:	sub	r0, r0, r2
   2435c:	lsl	r2, r0, #2
   24360:	mov	r0, r1
   24364:	mov	r1, r3
   24368:	bl	11270 <memmove@plt>
   2436c:	ldr	r0, [fp, #-8]
   24370:	ldr	r0, [r0, #4]
   24374:	ldr	r1, [fp, #-8]
   24378:	ldr	r1, [r1, #4]
   2437c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24380:	add	r1, r1, r2
   24384:	ldr	r2, [fp, #-8]
   24388:	ldr	r2, [r2, #28]
   2438c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24390:	sub	r2, r2, r3
   24394:	bl	11270 <memmove@plt>
   24398:	ldr	r0, [fp, #-20]	; 0xffffffec
   2439c:	ldr	r1, [fp, #-8]
   243a0:	ldr	r2, [r1, #28]
   243a4:	sub	r0, r2, r0
   243a8:	str	r0, [r1, #28]
   243ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   243b0:	ldr	r1, [fp, #-8]
   243b4:	ldr	r2, [r1, #32]
   243b8:	sub	r0, r2, r0
   243bc:	str	r0, [r1, #32]
   243c0:	movw	r0, #0
   243c4:	str	r0, [fp, #-24]	; 0xffffffe8
   243c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   243cc:	ldr	r1, [fp, #-8]
   243d0:	ldr	r1, [r1, #28]
   243d4:	cmp	r0, r1
   243d8:	bge	24410 <__assert_fail@plt+0x12f0c>
   243dc:	ldr	r0, [fp, #-8]
   243e0:	ldr	r0, [r0, #12]
   243e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   243e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   243ec:	add	r3, r1, r2
   243f0:	ldr	r3, [r0, r3, lsl #2]
   243f4:	sub	r2, r3, r2
   243f8:	add	r0, r0, r1, lsl #2
   243fc:	str	r2, [r0]
   24400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24404:	add	r0, r0, #1
   24408:	str	r0, [fp, #-24]	; 0xffffffe8
   2440c:	b	243c8 <__assert_fail@plt+0x12ec4>
   24410:	b	245d4 <__assert_fail@plt+0x130d0>
   24414:	ldr	r0, [fp, #-8]
   24418:	ldr	r0, [r0, #44]	; 0x2c
   2441c:	ldr	r1, [fp, #-12]
   24420:	sub	r0, r0, r1
   24424:	ldr	r1, [fp, #-20]	; 0xffffffec
   24428:	add	r0, r0, r1
   2442c:	ldr	r1, [fp, #-8]
   24430:	str	r0, [r1, #48]	; 0x30
   24434:	ldr	r0, [fp, #-8]
   24438:	ldr	r0, [r0, #52]	; 0x34
   2443c:	ldr	r1, [fp, #-12]
   24440:	sub	r0, r0, r1
   24444:	ldr	r1, [fp, #-20]	; 0xffffffec
   24448:	add	r0, r0, r1
   2444c:	ldr	r1, [fp, #-8]
   24450:	str	r0, [r1, #56]	; 0x38
   24454:	ldr	r0, [fp, #-8]
   24458:	movw	r1, #0
   2445c:	strb	r1, [r0, #76]	; 0x4c
   24460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24464:	cmp	r0, #0
   24468:	movw	r0, #0
   2446c:	str	r0, [sp, #24]
   24470:	ble	244a0 <__assert_fail@plt+0x12f9c>
   24474:	ldr	r0, [fp, #-8]
   24478:	ldr	r0, [r0, #12]
   2447c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24480:	sub	r1, r1, #1
   24484:	add	r0, r0, r1, lsl #2
   24488:	ldr	r0, [r0]
   2448c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24490:	cmp	r0, r1
   24494:	movw	r0, #0
   24498:	moveq	r0, #1
   2449c:	str	r0, [sp, #24]
   244a0:	ldr	r0, [sp, #24]
   244a4:	tst	r0, #1
   244a8:	beq	244c0 <__assert_fail@plt+0x12fbc>
   244ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244b0:	mvn	r1, #0
   244b4:	add	r0, r0, r1
   244b8:	str	r0, [fp, #-32]	; 0xffffffe0
   244bc:	b	24460 <__assert_fail@plt+0x12f5c>
   244c0:	b	244c4 <__assert_fail@plt+0x12fc0>
   244c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244c8:	ldr	r1, [fp, #-8]
   244cc:	ldr	r1, [r1, #28]
   244d0:	cmp	r0, r1
   244d4:	bge	24508 <__assert_fail@plt+0x13004>
   244d8:	ldr	r0, [fp, #-8]
   244dc:	ldr	r0, [r0, #8]
   244e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   244e4:	add	r0, r0, r1, lsl #2
   244e8:	ldr	r0, [r0]
   244ec:	cmn	r0, #1
   244f0:	beq	244f8 <__assert_fail@plt+0x12ff4>
   244f4:	b	24508 <__assert_fail@plt+0x13004>
   244f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244fc:	add	r0, r0, #1
   24500:	str	r0, [fp, #-32]	; 0xffffffe0
   24504:	b	244c4 <__assert_fail@plt+0x12fc0>
   24508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2450c:	ldr	r1, [fp, #-8]
   24510:	ldr	r1, [r1, #28]
   24514:	cmp	r0, r1
   24518:	bne	2452c <__assert_fail@plt+0x13028>
   2451c:	ldr	r0, [fp, #-8]
   24520:	movw	r1, #0
   24524:	str	r1, [r0, #28]
   24528:	b	245c4 <__assert_fail@plt+0x130c0>
   2452c:	ldr	r0, [fp, #-8]
   24530:	ldr	r0, [r0, #12]
   24534:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24538:	add	r0, r0, r1, lsl #2
   2453c:	ldr	r0, [r0]
   24540:	ldr	r1, [fp, #-20]	; 0xffffffec
   24544:	sub	r0, r0, r1
   24548:	ldr	r1, [fp, #-8]
   2454c:	str	r0, [r1, #28]
   24550:	ldr	r0, [fp, #-8]
   24554:	ldr	r0, [r0, #28]
   24558:	cmp	r0, #0
   2455c:	beq	245c0 <__assert_fail@plt+0x130bc>
   24560:	movw	r0, #0
   24564:	str	r0, [fp, #-24]	; 0xffffffe8
   24568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2456c:	ldr	r1, [fp, #-8]
   24570:	ldr	r1, [r1, #28]
   24574:	cmp	r0, r1
   24578:	bge	245a4 <__assert_fail@plt+0x130a0>
   2457c:	ldr	r0, [fp, #-8]
   24580:	ldr	r0, [r0, #8]
   24584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24588:	add	r0, r0, r1, lsl #2
   2458c:	mvn	r1, #0
   24590:	str	r1, [r0]
   24594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24598:	add	r0, r0, #1
   2459c:	str	r0, [fp, #-24]	; 0xffffffe8
   245a0:	b	24568 <__assert_fail@plt+0x13064>
   245a4:	ldr	r0, [fp, #-8]
   245a8:	ldr	r0, [r0, #4]
   245ac:	ldr	r1, [fp, #-8]
   245b0:	ldr	r2, [r1, #28]
   245b4:	movw	r1, #255	; 0xff
   245b8:	and	r1, r1, #255	; 0xff
   245bc:	bl	11420 <memset@plt>
   245c0:	b	245c4 <__assert_fail@plt+0x130c0>
   245c4:	ldr	r0, [fp, #-8]
   245c8:	ldr	r0, [r0, #28]
   245cc:	ldr	r1, [fp, #-8]
   245d0:	str	r0, [r1, #32]
   245d4:	b	246a8 <__assert_fail@plt+0x131a4>
   245d8:	ldr	r0, [fp, #-8]
   245dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   245e0:	sub	r1, r1, #1
   245e4:	ldr	r2, [fp, #-16]
   245e8:	bl	25b94 <__assert_fail@plt+0x14690>
   245ec:	ldr	r1, [fp, #-8]
   245f0:	str	r0, [r1, #60]	; 0x3c
   245f4:	ldr	r0, [fp, #-8]
   245f8:	ldr	r0, [r0, #80]	; 0x50
   245fc:	cmp	r0, #1
   24600:	ble	2462c <__assert_fail@plt+0x13128>
   24604:	ldr	r0, [fp, #-8]
   24608:	ldr	r1, [r0, #8]
   2460c:	ldr	r0, [r0, #28]
   24610:	ldr	r2, [fp, #-20]	; 0xffffffec
   24614:	add	r3, r1, r2, lsl #2
   24618:	sub	r0, r0, r2
   2461c:	lsl	r2, r0, #2
   24620:	mov	r0, r1
   24624:	mov	r1, r3
   24628:	bl	11270 <memmove@plt>
   2462c:	ldr	r0, [fp, #-8]
   24630:	ldrb	r0, [r0, #75]	; 0x4b
   24634:	cmp	r0, #0
   24638:	beq	24668 <__assert_fail@plt+0x13164>
   2463c:	ldr	r0, [fp, #-8]
   24640:	ldr	r0, [r0, #4]
   24644:	ldr	r1, [fp, #-8]
   24648:	ldr	r1, [r1, #4]
   2464c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24650:	add	r1, r1, r2
   24654:	ldr	r2, [fp, #-8]
   24658:	ldr	r2, [r2, #28]
   2465c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24660:	sub	r2, r2, r3
   24664:	bl	11270 <memmove@plt>
   24668:	ldr	r0, [fp, #-20]	; 0xffffffec
   2466c:	ldr	r1, [fp, #-8]
   24670:	ldr	r2, [r1, #28]
   24674:	sub	r0, r2, r0
   24678:	str	r0, [r1, #28]
   2467c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24680:	ldr	r1, [fp, #-8]
   24684:	ldr	r2, [r1, #32]
   24688:	sub	r0, r2, r0
   2468c:	str	r0, [r1, #32]
   24690:	ldr	r0, [fp, #-8]
   24694:	ldr	r0, [r0, #28]
   24698:	cmp	r0, #0
   2469c:	ble	246a4 <__assert_fail@plt+0x131a0>
   246a0:	b	246a4 <__assert_fail@plt+0x131a0>
   246a4:	b	246a8 <__assert_fail@plt+0x131a4>
   246a8:	b	24b9c <__assert_fail@plt+0x13698>
   246ac:	ldr	r0, [fp, #-8]
   246b0:	ldr	r0, [r0, #28]
   246b4:	str	r0, [fp, #-36]	; 0xffffffdc
   246b8:	ldr	r0, [fp, #-8]
   246bc:	ldrb	r0, [r0, #76]	; 0x4c
   246c0:	cmp	r0, #0
   246c4:	beq	24714 <__assert_fail@plt+0x13210>
   246c8:	ldr	r0, [fp, #-8]
   246cc:	ldr	r0, [r0, #44]	; 0x2c
   246d0:	ldr	r1, [fp, #-12]
   246d4:	sub	r0, r0, r1
   246d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   246dc:	add	r0, r0, r1
   246e0:	ldr	r1, [fp, #-8]
   246e4:	str	r0, [r1, #48]	; 0x30
   246e8:	ldr	r0, [fp, #-8]
   246ec:	ldr	r0, [r0, #52]	; 0x34
   246f0:	ldr	r1, [fp, #-12]
   246f4:	sub	r0, r0, r1
   246f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   246fc:	add	r0, r0, r1
   24700:	ldr	r1, [fp, #-8]
   24704:	str	r0, [r1, #56]	; 0x38
   24708:	ldr	r0, [fp, #-8]
   2470c:	movw	r1, #0
   24710:	strb	r1, [r0, #76]	; 0x4c
   24714:	ldr	r0, [fp, #-8]
   24718:	movw	r1, #0
   2471c:	str	r1, [r0, #28]
   24720:	ldr	r0, [fp, #-8]
   24724:	ldr	r0, [r0, #80]	; 0x50
   24728:	cmp	r0, #1
   2472c:	ble	24acc <__assert_fail@plt+0x135c8>
   24730:	mvn	r0, #0
   24734:	str	r0, [fp, #-44]	; 0xffffffd4
   24738:	ldr	r0, [fp, #-8]
   2473c:	ldrsb	r0, [r0, #73]	; 0x49
   24740:	cmp	r0, #0
   24744:	beq	24958 <__assert_fail@plt+0x13454>
   24748:	ldr	r0, [fp, #-8]
   2474c:	ldr	r0, [r0]
   24750:	ldr	r1, [fp, #-8]
   24754:	ldr	r1, [r1, #24]
   24758:	add	r0, r0, r1
   2475c:	str	r0, [fp, #-48]	; 0xffffffd0
   24760:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24764:	ldr	r1, [fp, #-20]	; 0xffffffec
   24768:	ldr	r2, [fp, #-8]
   2476c:	ldr	r2, [r2, #80]	; 0x50
   24770:	sub	r1, r1, r2
   24774:	add	r0, r0, r1
   24778:	str	r0, [fp, #-56]	; 0xffffffc8
   2477c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24780:	ldr	r1, [fp, #-8]
   24784:	ldr	r1, [r1]
   24788:	cmp	r0, r1
   2478c:	bcs	2479c <__assert_fail@plt+0x13298>
   24790:	ldr	r0, [fp, #-8]
   24794:	ldr	r0, [r0]
   24798:	str	r0, [fp, #-56]	; 0xffffffc8
   2479c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   247a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   247a4:	add	r0, r0, r1
   247a8:	mvn	r1, #0
   247ac:	add	r0, r0, r1
   247b0:	str	r0, [fp, #-52]	; 0xffffffcc
   247b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   247b8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   247bc:	cmp	r0, r1
   247c0:	bcc	24954 <__assert_fail@plt+0x13450>
   247c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   247c8:	ldrb	r0, [r0]
   247cc:	and	r0, r0, #192	; 0xc0
   247d0:	cmp	r0, #128	; 0x80
   247d4:	beq	2493c <__assert_fail@plt+0x13438>
   247d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   247dc:	ldr	r1, [fp, #-8]
   247e0:	ldr	r1, [r1, #48]	; 0x30
   247e4:	add	r0, r0, r1
   247e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   247ec:	sub	r0, r0, r1
   247f0:	str	r0, [sp, #56]	; 0x38
   247f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   247f8:	str	r0, [sp, #40]	; 0x28
   247fc:	ldr	r0, [fp, #-8]
   24800:	ldr	r0, [r0, #64]	; 0x40
   24804:	movw	r1, #0
   24808:	cmp	r0, r1
   2480c:	beq	24890 <__assert_fail@plt+0x1338c>
   24810:	ldr	r0, [sp, #56]	; 0x38
   24814:	cmp	r0, #6
   24818:	bge	24828 <__assert_fail@plt+0x13324>
   2481c:	ldr	r0, [sp, #56]	; 0x38
   24820:	str	r0, [sp, #20]
   24824:	b	24834 <__assert_fail@plt+0x13330>
   24828:	movw	r0, #6
   2482c:	str	r0, [sp, #20]
   24830:	b	24834 <__assert_fail@plt+0x13330>
   24834:	ldr	r0, [sp, #20]
   24838:	str	r0, [sp, #36]	; 0x24
   2483c:	ldr	r0, [sp, #36]	; 0x24
   24840:	mvn	r1, #0
   24844:	add	r0, r0, r1
   24848:	str	r0, [sp, #36]	; 0x24
   2484c:	cmp	r0, #0
   24850:	blt	24888 <__assert_fail@plt+0x13384>
   24854:	ldr	r0, [fp, #-8]
   24858:	ldr	r0, [r0, #64]	; 0x40
   2485c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24860:	ldr	r2, [sp, #36]	; 0x24
   24864:	add	r1, r1, r2
   24868:	ldrb	r1, [r1]
   2486c:	add	r0, r0, r1
   24870:	ldrb	r0, [r0]
   24874:	ldr	r1, [sp, #36]	; 0x24
   24878:	add	r2, sp, #50	; 0x32
   2487c:	add	r1, r2, r1
   24880:	strb	r0, [r1]
   24884:	b	2483c <__assert_fail@plt+0x13338>
   24888:	add	r0, sp, #50	; 0x32
   2488c:	str	r0, [sp, #40]	; 0x28
   24890:	add	r0, sp, #64	; 0x40
   24894:	mov	r1, r0
   24898:	str	r0, [sp, #16]
   2489c:	mov	r0, r1
   248a0:	movw	r1, #0
   248a4:	and	r1, r1, #255	; 0xff
   248a8:	movw	r2, #8
   248ac:	bl	11420 <memset@plt>
   248b0:	ldr	r1, [sp, #40]	; 0x28
   248b4:	ldr	r2, [sp, #56]	; 0x38
   248b8:	add	r0, sp, #60	; 0x3c
   248bc:	ldr	r3, [sp, #16]
   248c0:	bl	354d8 <__assert_fail@plt+0x23fd4>
   248c4:	str	r0, [sp, #44]	; 0x2c
   248c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   248cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   248d0:	add	r0, r0, r1
   248d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   248d8:	sub	r0, r0, r1
   248dc:	ldr	r1, [sp, #44]	; 0x2c
   248e0:	cmp	r0, r1
   248e4:	bhi	24938 <__assert_fail@plt+0x13434>
   248e8:	ldr	r0, [sp, #44]	; 0x2c
   248ec:	cmn	r0, #2
   248f0:	bcs	24938 <__assert_fail@plt+0x13434>
   248f4:	ldr	r0, [fp, #-8]
   248f8:	add	r0, r0, #16
   248fc:	movw	r1, #0
   24900:	and	r1, r1, #255	; 0xff
   24904:	movw	r2, #8
   24908:	bl	11420 <memset@plt>
   2490c:	ldr	r0, [sp, #44]	; 0x2c
   24910:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24914:	ldr	r2, [fp, #-20]	; 0xffffffec
   24918:	add	r1, r1, r2
   2491c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24920:	sub	r1, r1, r2
   24924:	sub	r0, r0, r1
   24928:	ldr	r1, [fp, #-8]
   2492c:	str	r0, [r1, #28]
   24930:	ldr	r0, [sp, #60]	; 0x3c
   24934:	str	r0, [fp, #-44]	; 0xffffffd4
   24938:	b	24954 <__assert_fail@plt+0x13450>
   2493c:	b	24940 <__assert_fail@plt+0x1343c>
   24940:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24944:	mvn	r1, #0
   24948:	add	r0, r0, r1
   2494c:	str	r0, [fp, #-52]	; 0xffffffcc
   24950:	b	247b4 <__assert_fail@plt+0x132b0>
   24954:	b	24958 <__assert_fail@plt+0x13454>
   24958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2495c:	cmn	r0, #1
   24960:	bne	24984 <__assert_fail@plt+0x13480>
   24964:	ldr	r0, [fp, #-8]
   24968:	ldr	r1, [fp, #-12]
   2496c:	sub	r2, fp, #44	; 0x2c
   24970:	bl	25d94 <__assert_fail@plt+0x14890>
   24974:	ldr	r1, [fp, #-12]
   24978:	sub	r0, r0, r1
   2497c:	ldr	r1, [fp, #-8]
   24980:	str	r0, [r1, #28]
   24984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24988:	cmn	r0, #1
   2498c:	bne	249b0 <__assert_fail@plt+0x134ac>
   24990:	ldr	r0, [fp, #-8]
   24994:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24998:	sub	r1, r1, #1
   2499c:	ldr	r2, [fp, #-16]
   249a0:	bl	25b94 <__assert_fail@plt+0x14690>
   249a4:	ldr	r1, [fp, #-8]
   249a8:	str	r0, [r1, #60]	; 0x3c
   249ac:	b	24a34 <__assert_fail@plt+0x13530>
   249b0:	ldr	r0, [fp, #-8]
   249b4:	ldrb	r0, [r0, #78]	; 0x4e
   249b8:	cmp	r0, #0
   249bc:	beq	249e8 <__assert_fail@plt+0x134e4>
   249c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   249c4:	bl	11408 <iswalnum@plt>
   249c8:	cmp	r0, #0
   249cc:	bne	249dc <__assert_fail@plt+0x134d8>
   249d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   249d4:	cmp	r0, #95	; 0x5f
   249d8:	bne	249e8 <__assert_fail@plt+0x134e4>
   249dc:	movw	r0, #1
   249e0:	str	r0, [sp, #12]
   249e4:	b	24a28 <__assert_fail@plt+0x13524>
   249e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   249ec:	cmp	r0, #10
   249f0:	movw	r0, #0
   249f4:	str	r0, [sp, #8]
   249f8:	bne	24a14 <__assert_fail@plt+0x13510>
   249fc:	ldr	r0, [fp, #-8]
   24a00:	ldrb	r0, [r0, #77]	; 0x4d
   24a04:	cmp	r0, #0
   24a08:	movw	r0, #0
   24a0c:	movne	r0, #1
   24a10:	str	r0, [sp, #8]
   24a14:	ldr	r0, [sp, #8]
   24a18:	tst	r0, #1
   24a1c:	movw	r0, #2
   24a20:	moveq	r0, #0
   24a24:	str	r0, [sp, #12]
   24a28:	ldr	r0, [sp, #12]
   24a2c:	ldr	r1, [fp, #-8]
   24a30:	str	r0, [r1, #60]	; 0x3c
   24a34:	ldr	r0, [fp, #-8]
   24a38:	ldr	r0, [r0, #28]
   24a3c:	cmp	r0, #0
   24a40:	beq	24ab8 <__assert_fail@plt+0x135b4>
   24a44:	movw	r0, #0
   24a48:	str	r0, [fp, #-40]	; 0xffffffd8
   24a4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24a50:	ldr	r1, [fp, #-8]
   24a54:	ldr	r1, [r1, #28]
   24a58:	cmp	r0, r1
   24a5c:	bge	24a88 <__assert_fail@plt+0x13584>
   24a60:	ldr	r0, [fp, #-8]
   24a64:	ldr	r0, [r0, #8]
   24a68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24a6c:	add	r0, r0, r1, lsl #2
   24a70:	mvn	r1, #0
   24a74:	str	r1, [r0]
   24a78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24a7c:	add	r0, r0, #1
   24a80:	str	r0, [fp, #-40]	; 0xffffffd8
   24a84:	b	24a4c <__assert_fail@plt+0x13548>
   24a88:	ldr	r0, [fp, #-8]
   24a8c:	ldrsb	r0, [r0, #75]	; 0x4b
   24a90:	cmp	r0, #0
   24a94:	beq	24ab4 <__assert_fail@plt+0x135b0>
   24a98:	ldr	r0, [fp, #-8]
   24a9c:	ldr	r0, [r0, #4]
   24aa0:	ldr	r1, [fp, #-8]
   24aa4:	ldr	r2, [r1, #28]
   24aa8:	movw	r1, #255	; 0xff
   24aac:	and	r1, r1, #255	; 0xff
   24ab0:	bl	11420 <memset@plt>
   24ab4:	b	24ab8 <__assert_fail@plt+0x135b4>
   24ab8:	ldr	r0, [fp, #-8]
   24abc:	ldr	r0, [r0, #28]
   24ac0:	ldr	r1, [fp, #-8]
   24ac4:	str	r0, [r1, #32]
   24ac8:	b	24b98 <__assert_fail@plt+0x13694>
   24acc:	ldr	r0, [fp, #-8]
   24ad0:	ldr	r0, [r0]
   24ad4:	ldr	r1, [fp, #-8]
   24ad8:	ldr	r1, [r1, #24]
   24adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   24ae0:	add	r1, r1, r2
   24ae4:	sub	r1, r1, #1
   24ae8:	add	r0, r0, r1
   24aec:	ldrb	r0, [r0]
   24af0:	str	r0, [sp, #32]
   24af4:	ldr	r0, [fp, #-8]
   24af8:	movw	r1, #0
   24afc:	str	r1, [r0, #32]
   24b00:	ldr	r0, [fp, #-8]
   24b04:	ldr	r0, [r0, #64]	; 0x40
   24b08:	cmp	r0, r1
   24b0c:	beq	24b28 <__assert_fail@plt+0x13624>
   24b10:	ldr	r0, [fp, #-8]
   24b14:	ldr	r0, [r0, #64]	; 0x40
   24b18:	ldr	r1, [sp, #32]
   24b1c:	add	r0, r0, r1
   24b20:	ldrb	r0, [r0]
   24b24:	str	r0, [sp, #32]
   24b28:	ldr	r0, [fp, #-8]
   24b2c:	ldr	r0, [r0, #68]	; 0x44
   24b30:	ldr	r1, [sp, #32]
   24b34:	bl	25f04 <__assert_fail@plt+0x14a00>
   24b38:	tst	r0, #1
   24b3c:	beq	24b4c <__assert_fail@plt+0x13648>
   24b40:	movw	r0, #1
   24b44:	str	r0, [sp, #4]
   24b48:	b	24b8c <__assert_fail@plt+0x13688>
   24b4c:	ldr	r0, [sp, #32]
   24b50:	cmp	r0, #10
   24b54:	movw	r0, #0
   24b58:	str	r0, [sp]
   24b5c:	bne	24b78 <__assert_fail@plt+0x13674>
   24b60:	ldr	r0, [fp, #-8]
   24b64:	ldrb	r0, [r0, #77]	; 0x4d
   24b68:	cmp	r0, #0
   24b6c:	movw	r0, #0
   24b70:	movne	r0, #1
   24b74:	str	r0, [sp]
   24b78:	ldr	r0, [sp]
   24b7c:	tst	r0, #1
   24b80:	movw	r0, #2
   24b84:	moveq	r0, #0
   24b88:	str	r0, [sp, #4]
   24b8c:	ldr	r0, [sp, #4]
   24b90:	ldr	r1, [fp, #-8]
   24b94:	str	r0, [r1, #60]	; 0x3c
   24b98:	b	24b9c <__assert_fail@plt+0x13698>
   24b9c:	ldr	r0, [fp, #-8]
   24ba0:	ldrb	r0, [r0, #75]	; 0x4b
   24ba4:	cmp	r0, #0
   24ba8:	bne	24bc0 <__assert_fail@plt+0x136bc>
   24bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   24bb0:	ldr	r1, [fp, #-8]
   24bb4:	ldr	r2, [r1, #4]
   24bb8:	add	r0, r2, r0
   24bbc:	str	r0, [r1, #4]
   24bc0:	b	24bc4 <__assert_fail@plt+0x136c0>
   24bc4:	ldr	r0, [fp, #-12]
   24bc8:	ldr	r1, [fp, #-8]
   24bcc:	str	r0, [r1, #24]
   24bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24bd4:	ldr	r1, [fp, #-8]
   24bd8:	ldr	r2, [r1, #48]	; 0x30
   24bdc:	sub	r0, r2, r0
   24be0:	str	r0, [r1, #48]	; 0x30
   24be4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24be8:	ldr	r1, [fp, #-8]
   24bec:	ldr	r2, [r1, #56]	; 0x38
   24bf0:	sub	r0, r2, r0
   24bf4:	str	r0, [r1, #56]	; 0x38
   24bf8:	ldr	r0, [fp, #-8]
   24bfc:	ldr	r0, [r0, #80]	; 0x50
   24c00:	cmp	r0, #1
   24c04:	ble	24c4c <__assert_fail@plt+0x13748>
   24c08:	ldr	r0, [fp, #-8]
   24c0c:	ldrsb	r0, [r0, #72]	; 0x48
   24c10:	cmp	r0, #0
   24c14:	beq	24c40 <__assert_fail@plt+0x1373c>
   24c18:	ldr	r0, [fp, #-8]
   24c1c:	bl	1a3a4 <__assert_fail@plt+0x8ea0>
   24c20:	str	r0, [sp, #28]
   24c24:	ldr	r0, [sp, #28]
   24c28:	cmp	r0, #0
   24c2c:	beq	24c3c <__assert_fail@plt+0x13738>
   24c30:	ldr	r0, [sp, #28]
   24c34:	str	r0, [fp, #-4]
   24c38:	b	24cc0 <__assert_fail@plt+0x137bc>
   24c3c:	b	24c48 <__assert_fail@plt+0x13744>
   24c40:	ldr	r0, [fp, #-8]
   24c44:	bl	1af54 <__assert_fail@plt+0x9a50>
   24c48:	b	24cb0 <__assert_fail@plt+0x137ac>
   24c4c:	ldr	r0, [fp, #-8]
   24c50:	ldrb	r0, [r0, #75]	; 0x4b
   24c54:	cmp	r0, #0
   24c58:	beq	24c9c <__assert_fail@plt+0x13798>
   24c5c:	ldr	r0, [fp, #-8]
   24c60:	ldrsb	r0, [r0, #72]	; 0x48
   24c64:	cmp	r0, #0
   24c68:	beq	24c78 <__assert_fail@plt+0x13774>
   24c6c:	ldr	r0, [fp, #-8]
   24c70:	bl	1ae50 <__assert_fail@plt+0x994c>
   24c74:	b	24c98 <__assert_fail@plt+0x13794>
   24c78:	ldr	r0, [fp, #-8]
   24c7c:	ldr	r0, [r0, #64]	; 0x40
   24c80:	movw	r1, #0
   24c84:	cmp	r0, r1
   24c88:	beq	24c94 <__assert_fail@plt+0x13790>
   24c8c:	ldr	r0, [fp, #-8]
   24c90:	bl	1b294 <__assert_fail@plt+0x9d90>
   24c94:	b	24c98 <__assert_fail@plt+0x13794>
   24c98:	b	24cac <__assert_fail@plt+0x137a8>
   24c9c:	ldr	r0, [fp, #-8]
   24ca0:	ldr	r0, [r0, #48]	; 0x30
   24ca4:	ldr	r1, [fp, #-8]
   24ca8:	str	r0, [r1, #28]
   24cac:	b	24cb0 <__assert_fail@plt+0x137ac>
   24cb0:	ldr	r0, [fp, #-8]
   24cb4:	movw	r1, #0
   24cb8:	str	r1, [r0, #40]	; 0x28
   24cbc:	str	r1, [fp, #-4]
   24cc0:	ldr	r0, [fp, #-4]
   24cc4:	mov	sp, fp
   24cc8:	pop	{fp, pc}
   24ccc:	push	{fp, lr}
   24cd0:	mov	fp, sp
   24cd4:	sub	sp, sp, #80	; 0x50
   24cd8:	str	r0, [fp, #-32]	; 0xffffffe0
   24cdc:	and	r0, r1, #1
   24ce0:	strb	r0, [fp, #-33]	; 0xffffffdf
   24ce4:	str	r2, [sp, #40]	; 0x28
   24ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cec:	ldr	r0, [r0, #84]	; 0x54
   24cf0:	str	r0, [sp, #36]	; 0x24
   24cf4:	mov	r0, #0
   24cf8:	str	r0, [sp, #28]
   24cfc:	mvn	r1, #0
   24d00:	str	r1, [sp, #24]
   24d04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24d08:	ldr	r1, [r1, #40]	; 0x28
   24d0c:	str	r1, [sp, #20]
   24d10:	ldr	r1, [sp, #40]	; 0x28
   24d14:	cmp	r1, #0
   24d18:	movwne	r1, #1
   24d1c:	strb	r1, [sp, #15]
   24d20:	ldr	r1, [sp, #20]
   24d24:	str	r1, [sp, #8]
   24d28:	str	r0, [sp, #32]
   24d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d30:	ldr	r1, [sp, #20]
   24d34:	add	r2, sp, #32
   24d38:	str	r2, [fp, #-8]
   24d3c:	str	r0, [fp, #-12]
   24d40:	str	r1, [fp, #-16]
   24d44:	ldr	r0, [fp, #-12]
   24d48:	ldr	r0, [r0, #84]	; 0x54
   24d4c:	str	r0, [fp, #-20]	; 0xffffffec
   24d50:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d54:	ldr	r0, [r0, #36]	; 0x24
   24d58:	ldrb	r0, [r0, #52]	; 0x34
   24d5c:	lsr	r0, r0, #7
   24d60:	and	r0, r0, #255	; 0xff
   24d64:	cmp	r0, #0
   24d68:	beq	24e58 <__assert_fail@plt+0x13954>
   24d6c:	ldr	r0, [fp, #-12]
   24d70:	ldr	r1, [fp, #-16]
   24d74:	sub	r1, r1, #1
   24d78:	ldr	r2, [fp, #-12]
   24d7c:	ldr	r2, [r2, #88]	; 0x58
   24d80:	bl	25b94 <__assert_fail@plt+0x14690>
   24d84:	str	r0, [fp, #-24]	; 0xffffffe8
   24d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d8c:	and	r0, r0, #1
   24d90:	cmp	r0, #0
   24d94:	beq	24da8 <__assert_fail@plt+0x138a4>
   24d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d9c:	ldr	r0, [r0, #40]	; 0x28
   24da0:	str	r0, [fp, #-4]
   24da4:	b	24e64 <__assert_fail@plt+0x13960>
   24da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24dac:	cmp	r0, #0
   24db0:	bne	24dc4 <__assert_fail@plt+0x138c0>
   24db4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24db8:	ldr	r0, [r0, #36]	; 0x24
   24dbc:	str	r0, [fp, #-4]
   24dc0:	b	24e64 <__assert_fail@plt+0x13960>
   24dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24dc8:	and	r0, r0, #4
   24dcc:	cmp	r0, #0
   24dd0:	beq	24df4 <__assert_fail@plt+0x138f0>
   24dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24dd8:	and	r0, r0, #2
   24ddc:	cmp	r0, #0
   24de0:	beq	24df4 <__assert_fail@plt+0x138f0>
   24de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24de8:	ldr	r0, [r0, #48]	; 0x30
   24dec:	str	r0, [fp, #-4]
   24df0:	b	24e64 <__assert_fail@plt+0x13960>
   24df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24df8:	and	r0, r0, #2
   24dfc:	cmp	r0, #0
   24e00:	beq	24e14 <__assert_fail@plt+0x13910>
   24e04:	ldr	r0, [fp, #-20]	; 0xffffffec
   24e08:	ldr	r0, [r0, #44]	; 0x2c
   24e0c:	str	r0, [fp, #-4]
   24e10:	b	24e64 <__assert_fail@plt+0x13960>
   24e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e18:	and	r0, r0, #4
   24e1c:	cmp	r0, #0
   24e20:	beq	24e48 <__assert_fail@plt+0x13944>
   24e24:	ldr	r0, [fp, #-8]
   24e28:	ldr	r1, [fp, #-20]	; 0xffffffec
   24e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24e30:	ldr	r2, [r2, #36]	; 0x24
   24e34:	ldr	r2, [r2, #40]	; 0x28
   24e38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e3c:	bl	23344 <__assert_fail@plt+0x11e40>
   24e40:	str	r0, [fp, #-4]
   24e44:	b	24e64 <__assert_fail@plt+0x13960>
   24e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   24e4c:	ldr	r0, [r0, #36]	; 0x24
   24e50:	str	r0, [fp, #-4]
   24e54:	b	24e64 <__assert_fail@plt+0x13960>
   24e58:	ldr	r0, [fp, #-20]	; 0xffffffec
   24e5c:	ldr	r0, [r0, #36]	; 0x24
   24e60:	str	r0, [fp, #-4]
   24e64:	ldr	r0, [fp, #-4]
   24e68:	str	r0, [sp, #16]
   24e6c:	ldr	r0, [sp, #16]
   24e70:	movw	r1, #0
   24e74:	cmp	r0, r1
   24e78:	bne	24e98 <__assert_fail@plt+0x13994>
   24e7c:	ldr	r0, [sp, #32]
   24e80:	cmp	r0, #12
   24e84:	bne	24e8c <__assert_fail@plt+0x13988>
   24e88:	b	24e8c <__assert_fail@plt+0x13988>
   24e8c:	mvn	r0, #1
   24e90:	str	r0, [fp, #-28]	; 0xffffffe4
   24e94:	b	2524c <__assert_fail@plt+0x13d48>
   24e98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e9c:	ldr	r0, [r0, #100]	; 0x64
   24ea0:	movw	r1, #0
   24ea4:	cmp	r0, r1
   24ea8:	beq	24f5c <__assert_fail@plt+0x13a58>
   24eac:	ldr	r0, [sp, #16]
   24eb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24eb4:	ldr	r1, [r1, #100]	; 0x64
   24eb8:	ldr	r2, [sp, #20]
   24ebc:	add	r1, r1, r2, lsl #2
   24ec0:	str	r0, [r1]
   24ec4:	ldr	r0, [sp, #36]	; 0x24
   24ec8:	ldr	r0, [r0, #76]	; 0x4c
   24ecc:	cmp	r0, #0
   24ed0:	beq	24f58 <__assert_fail@plt+0x13a54>
   24ed4:	movw	r0, #0
   24ed8:	strb	r0, [sp, #15]
   24edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ee0:	ldr	r1, [sp, #16]
   24ee4:	add	r1, r1, #4
   24ee8:	movw	r2, #0
   24eec:	bl	25f50 <__assert_fail@plt+0x14a4c>
   24ef0:	str	r0, [sp, #32]
   24ef4:	ldr	r0, [sp, #32]
   24ef8:	cmp	r0, #0
   24efc:	beq	24f0c <__assert_fail@plt+0x13a08>
   24f00:	ldr	r0, [sp, #32]
   24f04:	str	r0, [fp, #-28]	; 0xffffffe4
   24f08:	b	2524c <__assert_fail@plt+0x13d48>
   24f0c:	ldr	r0, [sp, #16]
   24f10:	ldrb	r0, [r0, #52]	; 0x34
   24f14:	ubfx	r0, r0, #6, #1
   24f18:	and	r0, r0, #255	; 0xff
   24f1c:	cmp	r0, #0
   24f20:	beq	24f54 <__assert_fail@plt+0x13a50>
   24f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f28:	ldr	r1, [sp, #16]
   24f2c:	add	r1, r1, #4
   24f30:	bl	26064 <__assert_fail@plt+0x14b60>
   24f34:	str	r0, [sp, #32]
   24f38:	ldr	r0, [sp, #32]
   24f3c:	cmp	r0, #0
   24f40:	beq	24f50 <__assert_fail@plt+0x13a4c>
   24f44:	ldr	r0, [sp, #32]
   24f48:	str	r0, [fp, #-28]	; 0xffffffe4
   24f4c:	b	2524c <__assert_fail@plt+0x13d48>
   24f50:	b	24f54 <__assert_fail@plt+0x13a50>
   24f54:	b	24f58 <__assert_fail@plt+0x13a54>
   24f58:	b	24f5c <__assert_fail@plt+0x13a58>
   24f5c:	ldr	r0, [sp, #16]
   24f60:	ldrb	r0, [r0, #52]	; 0x34
   24f64:	ubfx	r0, r0, #4, #1
   24f68:	and	r0, r0, #255	; 0xff
   24f6c:	cmp	r0, #0
   24f70:	beq	24fd4 <__assert_fail@plt+0x13ad0>
   24f74:	ldr	r0, [sp, #16]
   24f78:	ldrb	r0, [r0, #52]	; 0x34
   24f7c:	lsr	r0, r0, #7
   24f80:	and	r0, r0, #255	; 0xff
   24f84:	cmp	r0, #0
   24f88:	beq	24fa4 <__assert_fail@plt+0x13aa0>
   24f8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f90:	ldr	r1, [sp, #16]
   24f94:	ldr	r2, [sp, #20]
   24f98:	bl	25258 <__assert_fail@plt+0x13d54>
   24f9c:	cmp	r0, #0
   24fa0:	beq	24fd0 <__assert_fail@plt+0x13acc>
   24fa4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   24fa8:	tst	r0, #1
   24fac:	bne	24fbc <__assert_fail@plt+0x13ab8>
   24fb0:	ldr	r0, [sp, #20]
   24fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   24fb8:	b	2524c <__assert_fail@plt+0x13d48>
   24fbc:	ldr	r0, [sp, #20]
   24fc0:	str	r0, [sp, #24]
   24fc4:	movw	r0, #1
   24fc8:	str	r0, [sp, #28]
   24fcc:	b	24fd0 <__assert_fail@plt+0x13acc>
   24fd0:	b	24fd4 <__assert_fail@plt+0x13ad0>
   24fd4:	b	24fd8 <__assert_fail@plt+0x13ad4>
   24fd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24fdc:	ldr	r0, [r0, #56]	; 0x38
   24fe0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24fe4:	ldr	r1, [r1, #40]	; 0x28
   24fe8:	cmp	r0, r1
   24fec:	movw	r0, #0
   24ff0:	movle	r0, #1
   24ff4:	mvn	r1, #0
   24ff8:	eor	r0, r0, r1
   24ffc:	tst	r0, #1
   25000:	beq	25220 <__assert_fail@plt+0x13d1c>
   25004:	ldr	r0, [sp, #16]
   25008:	str	r0, [sp, #4]
   2500c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25010:	ldr	r0, [r0, #40]	; 0x28
   25014:	add	r0, r0, #1
   25018:	str	r0, [sp]
   2501c:	ldr	r0, [sp]
   25020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25024:	ldr	r1, [r1, #36]	; 0x24
   25028:	cmp	r0, r1
   2502c:	blt	25048 <__assert_fail@plt+0x13b44>
   25030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25034:	ldr	r0, [r0, #36]	; 0x24
   25038:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2503c:	ldr	r1, [r1, #48]	; 0x30
   25040:	cmp	r0, r1
   25044:	blt	25074 <__assert_fail@plt+0x13b70>
   25048:	ldr	r0, [sp]
   2504c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25050:	ldr	r1, [r1, #28]
   25054:	cmp	r0, r1
   25058:	blt	250b4 <__assert_fail@plt+0x13bb0>
   2505c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25060:	ldr	r0, [r0, #28]
   25064:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25068:	ldr	r1, [r1, #48]	; 0x30
   2506c:	cmp	r0, r1
   25070:	bge	250b4 <__assert_fail@plt+0x13bb0>
   25074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25078:	ldr	r1, [sp]
   2507c:	add	r1, r1, #1
   25080:	bl	265a0 <__assert_fail@plt+0x1509c>
   25084:	str	r0, [sp, #32]
   25088:	ldr	r0, [sp, #32]
   2508c:	cmp	r0, #0
   25090:	beq	250b0 <__assert_fail@plt+0x13bac>
   25094:	ldr	r0, [sp, #32]
   25098:	cmp	r0, #12
   2509c:	bne	250a4 <__assert_fail@plt+0x13ba0>
   250a0:	b	250a4 <__assert_fail@plt+0x13ba0>
   250a4:	mvn	r0, #1
   250a8:	str	r0, [fp, #-28]	; 0xffffffe4
   250ac:	b	2524c <__assert_fail@plt+0x13d48>
   250b0:	b	250b4 <__assert_fail@plt+0x13bb0>
   250b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   250b8:	ldr	r2, [sp, #16]
   250bc:	add	r0, sp, #32
   250c0:	bl	267b8 <__assert_fail@plt+0x152b4>
   250c4:	str	r0, [sp, #16]
   250c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   250cc:	ldr	r0, [r0, #100]	; 0x64
   250d0:	movw	r1, #0
   250d4:	cmp	r0, r1
   250d8:	beq	250f0 <__assert_fail@plt+0x13bec>
   250dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   250e0:	ldr	r2, [sp, #16]
   250e4:	add	r0, sp, #32
   250e8:	bl	26944 <__assert_fail@plt+0x15440>
   250ec:	str	r0, [sp, #16]
   250f0:	ldr	r0, [sp, #16]
   250f4:	movw	r1, #0
   250f8:	cmp	r0, r1
   250fc:	bne	25168 <__assert_fail@plt+0x13c64>
   25100:	ldr	r0, [sp, #32]
   25104:	cmp	r0, #0
   25108:	beq	25118 <__assert_fail@plt+0x13c14>
   2510c:	mvn	r0, #1
   25110:	str	r0, [fp, #-28]	; 0xffffffe4
   25114:	b	2524c <__assert_fail@plt+0x13d48>
   25118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2511c:	ldr	r0, [r0, #100]	; 0x64
   25120:	movw	r1, #0
   25124:	cmp	r0, r1
   25128:	beq	25160 <__assert_fail@plt+0x13c5c>
   2512c:	ldr	r0, [sp, #28]
   25130:	cmp	r0, #0
   25134:	beq	25144 <__assert_fail@plt+0x13c40>
   25138:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   2513c:	tst	r0, #1
   25140:	beq	25160 <__assert_fail@plt+0x13c5c>
   25144:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25148:	add	r0, sp, #32
   2514c:	bl	26bc0 <__assert_fail@plt+0x156bc>
   25150:	str	r0, [sp, #16]
   25154:	movw	r1, #0
   25158:	cmp	r0, r1
   2515c:	bne	25164 <__assert_fail@plt+0x13c60>
   25160:	b	25220 <__assert_fail@plt+0x13d1c>
   25164:	b	25168 <__assert_fail@plt+0x13c64>
   25168:	ldrb	r0, [sp, #15]
   2516c:	tst	r0, #1
   25170:	beq	2519c <__assert_fail@plt+0x13c98>
   25174:	ldr	r0, [sp, #4]
   25178:	ldr	r1, [sp, #16]
   2517c:	cmp	r0, r1
   25180:	bne	25190 <__assert_fail@plt+0x13c8c>
   25184:	ldr	r0, [sp]
   25188:	str	r0, [sp, #8]
   2518c:	b	25198 <__assert_fail@plt+0x13c94>
   25190:	movw	r0, #0
   25194:	strb	r0, [sp, #15]
   25198:	b	2519c <__assert_fail@plt+0x13c98>
   2519c:	ldr	r0, [sp, #16]
   251a0:	ldrb	r0, [r0, #52]	; 0x34
   251a4:	ubfx	r0, r0, #4, #1
   251a8:	and	r0, r0, #255	; 0xff
   251ac:	cmp	r0, #0
   251b0:	beq	2521c <__assert_fail@plt+0x13d18>
   251b4:	ldr	r0, [sp, #16]
   251b8:	ldrb	r0, [r0, #52]	; 0x34
   251bc:	lsr	r0, r0, #7
   251c0:	and	r0, r0, #255	; 0xff
   251c4:	cmp	r0, #0
   251c8:	beq	251e8 <__assert_fail@plt+0x13ce4>
   251cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251d0:	ldr	r1, [sp, #16]
   251d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   251d8:	ldr	r2, [r2, #40]	; 0x28
   251dc:	bl	25258 <__assert_fail@plt+0x13d54>
   251e0:	cmp	r0, #0
   251e4:	beq	25218 <__assert_fail@plt+0x13d14>
   251e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251ec:	ldr	r0, [r0, #40]	; 0x28
   251f0:	str	r0, [sp, #24]
   251f4:	movw	r0, #1
   251f8:	str	r0, [sp, #28]
   251fc:	movw	r0, #0
   25200:	str	r0, [sp, #40]	; 0x28
   25204:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   25208:	tst	r0, #1
   2520c:	bne	25214 <__assert_fail@plt+0x13d10>
   25210:	b	25220 <__assert_fail@plt+0x13d1c>
   25214:	b	25218 <__assert_fail@plt+0x13d14>
   25218:	b	2521c <__assert_fail@plt+0x13d18>
   2521c:	b	24fd8 <__assert_fail@plt+0x13ad4>
   25220:	ldr	r0, [sp, #40]	; 0x28
   25224:	movw	r1, #0
   25228:	cmp	r0, r1
   2522c:	beq	25244 <__assert_fail@plt+0x13d40>
   25230:	ldr	r0, [sp, #8]
   25234:	ldr	r1, [sp, #40]	; 0x28
   25238:	ldr	r2, [r1]
   2523c:	add	r0, r2, r0
   25240:	str	r0, [r1]
   25244:	ldr	r0, [sp, #24]
   25248:	str	r0, [fp, #-28]	; 0xffffffe4
   2524c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25250:	mov	sp, fp
   25254:	pop	{fp, pc}
   25258:	push	{fp, lr}
   2525c:	mov	fp, sp
   25260:	sub	sp, sp, #24
   25264:	str	r0, [fp, #-8]
   25268:	str	r1, [sp, #12]
   2526c:	str	r2, [sp, #8]
   25270:	ldr	r0, [sp, #12]
   25274:	ldrb	r0, [r0, #52]	; 0x34
   25278:	ubfx	r0, r0, #4, #1
   2527c:	and	r0, r0, #255	; 0xff
   25280:	cmp	r0, #0
   25284:	beq	2528c <__assert_fail@plt+0x13d88>
   25288:	b	2528c <__assert_fail@plt+0x13d88>
   2528c:	ldr	r0, [fp, #-8]
   25290:	ldr	r1, [sp, #8]
   25294:	ldr	r2, [fp, #-8]
   25298:	ldr	r2, [r2, #88]	; 0x58
   2529c:	bl	25b94 <__assert_fail@plt+0x14690>
   252a0:	str	r0, [sp]
   252a4:	movw	r0, #0
   252a8:	str	r0, [sp, #4]
   252ac:	ldr	r0, [sp, #4]
   252b0:	ldr	r1, [sp, #12]
   252b4:	ldr	r1, [r1, #8]
   252b8:	cmp	r0, r1
   252bc:	bge	2531c <__assert_fail@plt+0x13e18>
   252c0:	ldr	r0, [fp, #-8]
   252c4:	ldr	r0, [r0, #84]	; 0x54
   252c8:	ldr	r1, [sp, #12]
   252cc:	ldr	r1, [r1, #12]
   252d0:	ldr	r2, [sp, #4]
   252d4:	add	r1, r1, r2, lsl #2
   252d8:	ldr	r1, [r1]
   252dc:	ldr	r2, [sp]
   252e0:	bl	2b05c <__assert_fail@plt+0x19b58>
   252e4:	tst	r0, #1
   252e8:	beq	25308 <__assert_fail@plt+0x13e04>
   252ec:	ldr	r0, [sp, #12]
   252f0:	ldr	r0, [r0, #12]
   252f4:	ldr	r1, [sp, #4]
   252f8:	add	r0, r0, r1, lsl #2
   252fc:	ldr	r0, [r0]
   25300:	str	r0, [fp, #-4]
   25304:	b	25324 <__assert_fail@plt+0x13e20>
   25308:	b	2530c <__assert_fail@plt+0x13e08>
   2530c:	ldr	r0, [sp, #4]
   25310:	add	r0, r0, #1
   25314:	str	r0, [sp, #4]
   25318:	b	252ac <__assert_fail@plt+0x13da8>
   2531c:	movw	r0, #0
   25320:	str	r0, [fp, #-4]
   25324:	ldr	r0, [fp, #-4]
   25328:	mov	sp, fp
   2532c:	pop	{fp, pc}
   25330:	push	{fp, lr}
   25334:	mov	fp, sp
   25338:	sub	sp, sp, #80	; 0x50
   2533c:	str	r0, [fp, #-8]
   25340:	ldr	r0, [fp, #-8]
   25344:	ldr	r0, [r0, #84]	; 0x54
   25348:	str	r0, [fp, #-12]
   2534c:	movw	r0, #0
   25350:	str	r0, [fp, #-32]	; 0xffffffe0
   25354:	ldr	r1, [fp, #-8]
   25358:	ldr	r1, [r1, #100]	; 0x64
   2535c:	cmp	r1, r0
   25360:	beq	25368 <__assert_fail@plt+0x13e64>
   25364:	b	25368 <__assert_fail@plt+0x13e64>
   25368:	ldr	r0, [pc, #776]	; 25678 <__assert_fail@plt+0x14174>
   2536c:	ldr	r1, [fp, #-8]
   25370:	ldr	r1, [r1, #92]	; 0x5c
   25374:	str	r1, [fp, #-20]	; 0xffffffec
   25378:	ldr	r1, [fp, #-8]
   2537c:	ldr	r1, [r1, #96]	; 0x60
   25380:	str	r1, [fp, #-16]
   25384:	ldr	r1, [fp, #-20]	; 0xffffffec
   25388:	cmp	r0, r1
   2538c:	bhi	2539c <__assert_fail@plt+0x13e98>
   25390:	movw	r0, #12
   25394:	str	r0, [fp, #-4]
   25398:	b	2566c <__assert_fail@plt+0x14168>
   2539c:	ldr	r0, [fp, #-20]	; 0xffffffec
   253a0:	add	r0, r0, #1
   253a4:	lsl	r0, r0, #2
   253a8:	bl	33b44 <__assert_fail@plt+0x22640>
   253ac:	str	r0, [fp, #-28]	; 0xffffffe4
   253b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   253b4:	movw	lr, #0
   253b8:	cmp	r0, lr
   253bc:	bne	253cc <__assert_fail@plt+0x13ec8>
   253c0:	movw	r0, #12
   253c4:	str	r0, [fp, #-24]	; 0xffffffe8
   253c8:	b	25654 <__assert_fail@plt+0x14150>
   253cc:	ldr	r0, [fp, #-12]
   253d0:	ldr	r0, [r0, #76]	; 0x4c
   253d4:	cmp	r0, #0
   253d8:	beq	255a4 <__assert_fail@plt+0x140a0>
   253dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   253e0:	add	r0, r0, #1
   253e4:	lsl	r0, r0, #2
   253e8:	bl	33b44 <__assert_fail@plt+0x22640>
   253ec:	str	r0, [fp, #-32]	; 0xffffffe0
   253f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253f4:	movw	lr, #0
   253f8:	cmp	r0, lr
   253fc:	bne	2540c <__assert_fail@plt+0x13f08>
   25400:	movw	r0, #12
   25404:	str	r0, [fp, #-24]	; 0xffffffe8
   25408:	b	25654 <__assert_fail@plt+0x14150>
   2540c:	b	25410 <__assert_fail@plt+0x13f0c>
   25410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25414:	ldr	r1, [fp, #-20]	; 0xffffffec
   25418:	add	r1, r1, #1
   2541c:	lsl	r2, r1, #2
   25420:	movw	r1, #0
   25424:	and	r1, r1, #255	; 0xff
   25428:	bl	11420 <memset@plt>
   2542c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25430:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25434:	ldr	r3, [fp, #-16]
   25438:	ldr	r0, [fp, #-20]	; 0xffffffec
   2543c:	add	lr, sp, #20
   25440:	str	r0, [sp, #16]
   25444:	mov	r0, lr
   25448:	ldr	lr, [sp, #16]
   2544c:	str	lr, [sp]
   25450:	bl	2b18c <__assert_fail@plt+0x19c88>
   25454:	ldr	r0, [fp, #-8]
   25458:	add	r1, sp, #20
   2545c:	bl	2b200 <__assert_fail@plt+0x19cfc>
   25460:	str	r0, [fp, #-24]	; 0xffffffe8
   25464:	ldr	r0, [sp, #44]	; 0x2c
   25468:	bl	35268 <__assert_fail@plt+0x23d64>
   2546c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25470:	cmp	r0, #0
   25474:	beq	2547c <__assert_fail@plt+0x13f78>
   25478:	b	25654 <__assert_fail@plt+0x14150>
   2547c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25480:	ldr	r0, [r0]
   25484:	movw	r1, #0
   25488:	cmp	r0, r1
   2548c:	bne	254a4 <__assert_fail@plt+0x13fa0>
   25490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25494:	ldr	r0, [r0]
   25498:	movw	r1, #0
   2549c:	cmp	r0, r1
   254a0:	beq	254a8 <__assert_fail@plt+0x13fa4>
   254a4:	b	25564 <__assert_fail@plt+0x14060>
   254a8:	b	254ac <__assert_fail@plt+0x13fa8>
   254ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   254b0:	mvn	r1, #0
   254b4:	add	r0, r0, r1
   254b8:	str	r0, [fp, #-20]	; 0xffffffec
   254bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   254c0:	cmp	r0, #0
   254c4:	bge	254d4 <__assert_fail@plt+0x13fd0>
   254c8:	movw	r0, #1
   254cc:	str	r0, [fp, #-24]	; 0xffffffe8
   254d0:	b	25654 <__assert_fail@plt+0x14150>
   254d4:	b	254d8 <__assert_fail@plt+0x13fd4>
   254d8:	ldr	r0, [fp, #-8]
   254dc:	ldr	r0, [r0, #100]	; 0x64
   254e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   254e4:	add	r0, r0, r1, lsl #2
   254e8:	ldr	r0, [r0]
   254ec:	movw	r1, #0
   254f0:	cmp	r0, r1
   254f4:	movw	r0, #1
   254f8:	str	r0, [sp, #12]
   254fc:	beq	25534 <__assert_fail@plt+0x14030>
   25500:	ldr	r0, [fp, #-8]
   25504:	ldr	r0, [r0, #100]	; 0x64
   25508:	ldr	r1, [fp, #-20]	; 0xffffffec
   2550c:	ldr	r0, [r0, r1, lsl #2]
   25510:	ldrb	r0, [r0, #52]	; 0x34
   25514:	ubfx	r0, r0, #4, #1
   25518:	and	r0, r0, #255	; 0xff
   2551c:	cmp	r0, #0
   25520:	movw	r0, #0
   25524:	movne	r0, #1
   25528:	mvn	r1, #0
   2552c:	eor	r0, r0, r1
   25530:	str	r0, [sp, #12]
   25534:	ldr	r0, [sp, #12]
   25538:	tst	r0, #1
   2553c:	bne	254ac <__assert_fail@plt+0x13fa8>
   25540:	ldr	r0, [fp, #-8]
   25544:	ldr	r1, [r0, #100]	; 0x64
   25548:	ldr	r2, [fp, #-20]	; 0xffffffec
   2554c:	add	r1, r1, r2, lsl #2
   25550:	ldr	r1, [r1]
   25554:	ldr	r2, [fp, #-20]	; 0xffffffec
   25558:	bl	25258 <__assert_fail@plt+0x13d54>
   2555c:	str	r0, [fp, #-16]
   25560:	b	25410 <__assert_fail@plt+0x13f0c>
   25564:	ldr	r0, [fp, #-12]
   25568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2556c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25570:	ldr	r3, [fp, #-20]	; 0xffffffec
   25574:	add	r3, r3, #1
   25578:	bl	2b3f8 <__assert_fail@plt+0x19ef4>
   2557c:	str	r0, [fp, #-24]	; 0xffffffe8
   25580:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25584:	bl	35268 <__assert_fail@plt+0x23d64>
   25588:	movw	r0, #0
   2558c:	str	r0, [fp, #-32]	; 0xffffffe0
   25590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25594:	cmp	r0, #0
   25598:	beq	255a0 <__assert_fail@plt+0x1409c>
   2559c:	b	25654 <__assert_fail@plt+0x14150>
   255a0:	b	25618 <__assert_fail@plt+0x14114>
   255a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   255a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   255ac:	ldr	r3, [fp, #-16]
   255b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   255b4:	add	ip, sp, #20
   255b8:	str	r0, [sp, #8]
   255bc:	mov	r0, ip
   255c0:	ldr	ip, [sp, #8]
   255c4:	str	ip, [sp]
   255c8:	bl	2b18c <__assert_fail@plt+0x19c88>
   255cc:	ldr	r0, [fp, #-8]
   255d0:	add	r1, sp, #20
   255d4:	bl	2b200 <__assert_fail@plt+0x19cfc>
   255d8:	str	r0, [fp, #-24]	; 0xffffffe8
   255dc:	ldr	r0, [sp, #44]	; 0x2c
   255e0:	bl	35268 <__assert_fail@plt+0x23d64>
   255e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   255e8:	cmp	r0, #0
   255ec:	beq	255f4 <__assert_fail@plt+0x140f0>
   255f0:	b	25654 <__assert_fail@plt+0x14150>
   255f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   255f8:	ldr	r0, [r0]
   255fc:	movw	r1, #0
   25600:	cmp	r0, r1
   25604:	bne	25614 <__assert_fail@plt+0x14110>
   25608:	movw	r0, #1
   2560c:	str	r0, [fp, #-24]	; 0xffffffe8
   25610:	b	25654 <__assert_fail@plt+0x14150>
   25614:	b	25618 <__assert_fail@plt+0x14114>
   25618:	ldr	r0, [fp, #-8]
   2561c:	ldr	r0, [r0, #100]	; 0x64
   25620:	bl	35268 <__assert_fail@plt+0x23d64>
   25624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25628:	ldr	lr, [fp, #-8]
   2562c:	str	r0, [lr, #100]	; 0x64
   25630:	movw	r0, #0
   25634:	str	r0, [fp, #-28]	; 0xffffffe4
   25638:	ldr	lr, [fp, #-16]
   2563c:	ldr	r1, [fp, #-8]
   25640:	str	lr, [r1, #96]	; 0x60
   25644:	ldr	r1, [fp, #-20]	; 0xffffffec
   25648:	ldr	lr, [fp, #-8]
   2564c:	str	r1, [lr, #92]	; 0x5c
   25650:	str	r0, [fp, #-24]	; 0xffffffe8
   25654:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25658:	bl	35268 <__assert_fail@plt+0x23d64>
   2565c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25660:	bl	35268 <__assert_fail@plt+0x23d64>
   25664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25668:	str	r0, [fp, #-4]
   2566c:	ldr	r0, [fp, #-4]
   25670:	mov	sp, fp
   25674:	pop	{fp, pc}
   25678:	svccc	0x00ffffff
   2567c:	push	{fp, lr}
   25680:	mov	fp, sp
   25684:	sub	sp, sp, #24
   25688:	str	r0, [fp, #-4]
   2568c:	movw	r0, #0
   25690:	str	r0, [fp, #-8]
   25694:	ldr	r0, [fp, #-8]
   25698:	ldr	r1, [fp, #-4]
   2569c:	ldr	r1, [r1, #124]	; 0x7c
   256a0:	cmp	r0, r1
   256a4:	bge	2576c <__assert_fail@plt+0x14268>
   256a8:	ldr	r0, [fp, #-4]
   256ac:	ldr	r0, [r0, #132]	; 0x84
   256b0:	ldr	r1, [fp, #-8]
   256b4:	add	r0, r0, r1, lsl #2
   256b8:	ldr	r0, [r0]
   256bc:	str	r0, [sp, #8]
   256c0:	movw	r0, #0
   256c4:	str	r0, [sp, #12]
   256c8:	ldr	r0, [sp, #12]
   256cc:	ldr	r1, [sp, #8]
   256d0:	ldr	r1, [r1, #16]
   256d4:	cmp	r0, r1
   256d8:	bge	25718 <__assert_fail@plt+0x14214>
   256dc:	ldr	r0, [sp, #8]
   256e0:	ldr	r0, [r0, #20]
   256e4:	ldr	r1, [sp, #12]
   256e8:	add	r0, r0, r1, lsl #2
   256ec:	ldr	r0, [r0]
   256f0:	str	r0, [sp, #4]
   256f4:	ldr	r0, [sp, #4]
   256f8:	ldr	r0, [r0, #16]
   256fc:	bl	35268 <__assert_fail@plt+0x23d64>
   25700:	ldr	r0, [sp, #4]
   25704:	bl	35268 <__assert_fail@plt+0x23d64>
   25708:	ldr	r0, [sp, #12]
   2570c:	add	r0, r0, #1
   25710:	str	r0, [sp, #12]
   25714:	b	256c8 <__assert_fail@plt+0x141c4>
   25718:	ldr	r0, [sp, #8]
   2571c:	ldr	r0, [r0, #20]
   25720:	bl	35268 <__assert_fail@plt+0x23d64>
   25724:	ldr	r0, [sp, #8]
   25728:	ldr	r0, [r0, #8]
   2572c:	movw	lr, #0
   25730:	cmp	r0, lr
   25734:	beq	25754 <__assert_fail@plt+0x14250>
   25738:	ldr	r0, [sp, #8]
   2573c:	ldr	r0, [r0, #8]
   25740:	ldr	r0, [r0, #8]
   25744:	bl	35268 <__assert_fail@plt+0x23d64>
   25748:	ldr	r0, [sp, #8]
   2574c:	ldr	r0, [r0, #8]
   25750:	bl	35268 <__assert_fail@plt+0x23d64>
   25754:	ldr	r0, [sp, #8]
   25758:	bl	35268 <__assert_fail@plt+0x23d64>
   2575c:	ldr	r0, [fp, #-8]
   25760:	add	r0, r0, #1
   25764:	str	r0, [fp, #-8]
   25768:	b	25694 <__assert_fail@plt+0x14190>
   2576c:	ldr	r0, [fp, #-4]
   25770:	movw	r1, #0
   25774:	str	r1, [r0, #124]	; 0x7c
   25778:	ldr	r0, [fp, #-4]
   2577c:	str	r1, [r0, #108]	; 0x6c
   25780:	mov	sp, fp
   25784:	pop	{fp, pc}
   25788:	push	{r4, sl, fp, lr}
   2578c:	add	fp, sp, #8
   25790:	sub	sp, sp, #248	; 0xf8
   25794:	ldr	ip, [fp, #8]
   25798:	str	r0, [fp, #-16]
   2579c:	str	r1, [fp, #-20]	; 0xffffffec
   257a0:	str	r2, [fp, #-24]	; 0xffffffe8
   257a4:	str	r3, [fp, #-28]	; 0xffffffe4
   257a8:	and	r0, ip, #1
   257ac:	strb	r0, [fp, #-29]	; 0xffffffe3
   257b0:	ldr	r0, [fp, #-16]
   257b4:	ldr	r0, [r0]
   257b8:	str	r0, [fp, #-36]	; 0xffffffdc
   257bc:	movw	r0, #33576	; 0x8328
   257c0:	movt	r0, #3
   257c4:	ldr	r1, [r0]
   257c8:	str	r1, [fp, #-72]	; 0xffffffb8
   257cc:	ldr	r1, [r0, #4]
   257d0:	str	r1, [fp, #-68]	; 0xffffffbc
   257d4:	ldr	r0, [r0, #8]
   257d8:	str	r0, [fp, #-64]	; 0xffffffc0
   257dc:	add	r0, sp, #44	; 0x2c
   257e0:	bl	2d018 <__assert_fail@plt+0x1bb14>
   257e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   257e8:	cmp	r0, #1
   257ec:	bls	257f4 <__assert_fail@plt+0x142f0>
   257f0:	b	257f4 <__assert_fail@plt+0x142f0>
   257f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   257f8:	ldr	r0, [r0, #100]	; 0x64
   257fc:	movw	r1, #0
   25800:	cmp	r0, r1
   25804:	beq	2580c <__assert_fail@plt+0x14308>
   25808:	b	2580c <__assert_fail@plt+0x14308>
   2580c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   25810:	tst	r0, #1
   25814:	beq	25860 <__assert_fail@plt+0x1435c>
   25818:	sub	r0, fp, #72	; 0x48
   2581c:	str	r0, [fp, #-60]	; 0xffffffc4
   25820:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25824:	ldr	r0, [r0, #4]
   25828:	movw	r1, #24
   2582c:	mul	r0, r0, r1
   25830:	bl	33b44 <__assert_fail@plt+0x22640>
   25834:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25838:	str	r0, [r1, #8]
   2583c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25840:	ldr	r0, [r0, #8]
   25844:	movw	r1, #0
   25848:	cmp	r0, r1
   2584c:	bne	2585c <__assert_fail@plt+0x14358>
   25850:	movw	r0, #12
   25854:	str	r0, [fp, #-12]
   25858:	b	25b50 <__assert_fail@plt+0x1464c>
   2585c:	b	25868 <__assert_fail@plt+0x14364>
   25860:	movw	r0, #0
   25864:	str	r0, [fp, #-60]	; 0xffffffc4
   25868:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2586c:	ldr	r0, [r0, #72]	; 0x48
   25870:	str	r0, [fp, #-44]	; 0xffffffd4
   25874:	sub	r0, fp, #56	; 0x38
   25878:	movw	r1, #0
   2587c:	and	r1, r1, #255	; 0xff
   25880:	movw	r2, #12
   25884:	bl	11420 <memset@plt>
   25888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2588c:	add	r0, sp, #44	; 0x2c
   25890:	bl	2d050 <__assert_fail@plt+0x1bb4c>
   25894:	tst	r0, #1
   25898:	bne	258bc <__assert_fail@plt+0x143b8>
   2589c:	add	r0, sp, #44	; 0x2c
   258a0:	bl	2d110 <__assert_fail@plt+0x1bc0c>
   258a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   258a8:	bl	2d14c <__assert_fail@plt+0x1bc48>
   258ac:	movw	lr, #12
   258b0:	str	lr, [fp, #-12]
   258b4:	str	r0, [sp, #32]
   258b8:	b	25b50 <__assert_fail@plt+0x1464c>
   258bc:	add	r0, sp, #44	; 0x2c
   258c0:	bl	2d1f0 <__assert_fail@plt+0x1bcec>
   258c4:	str	r0, [sp, #40]	; 0x28
   258c8:	ldr	r0, [sp, #40]	; 0x28
   258cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   258d0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   258d4:	lsl	r2, lr, #3
   258d8:	bl	112a0 <memcpy@plt>
   258dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   258e0:	ldr	r0, [r0]
   258e4:	str	r0, [fp, #-40]	; 0xffffffd8
   258e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   258ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   258f0:	ldr	r1, [r1, #4]
   258f4:	cmp	r0, r1
   258f8:	bgt	25b34 <__assert_fail@plt+0x14630>
   258fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25904:	ldr	r2, [sp, #40]	; 0x28
   25908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2590c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   25910:	ldr	lr, [fp, #-24]	; 0xffffffe8
   25914:	str	ip, [sp]
   25918:	str	lr, [sp, #4]
   2591c:	bl	2d208 <__assert_fail@plt+0x1bd04>
   25920:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25928:	ldr	r1, [r1, #4]
   2592c:	cmp	r0, r1
   25930:	bne	25948 <__assert_fail@plt+0x14444>
   25934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25938:	ldr	r1, [fp, #-20]	; 0xffffffec
   2593c:	ldr	r1, [r1, #96]	; 0x60
   25940:	cmp	r0, r1
   25944:	beq	2596c <__assert_fail@plt+0x14468>
   25948:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2594c:	movw	r1, #0
   25950:	cmp	r0, r1
   25954:	beq	25a4c <__assert_fail@plt+0x14548>
   25958:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2595c:	sub	r0, fp, #56	; 0x38
   25960:	bl	23254 <__assert_fail@plt+0x11d50>
   25964:	cmp	r0, #0
   25968:	beq	25a4c <__assert_fail@plt+0x14548>
   2596c:	mvn	r0, #0
   25970:	str	r0, [fp, #-44]	; 0xffffffd4
   25974:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25978:	movw	r1, #0
   2597c:	cmp	r0, r1
   25980:	beq	25a1c <__assert_fail@plt+0x14518>
   25984:	movw	r0, #0
   25988:	str	r0, [sp, #36]	; 0x24
   2598c:	ldr	r0, [sp, #36]	; 0x24
   25990:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25994:	cmp	r0, r1
   25998:	bcs	25a18 <__assert_fail@plt+0x14514>
   2599c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   259a0:	ldr	r1, [sp, #36]	; 0x24
   259a4:	add	r0, r0, r1, lsl #3
   259a8:	ldr	r0, [r0]
   259ac:	cmn	r0, #1
   259b0:	ble	25a04 <__assert_fail@plt+0x14500>
   259b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   259b8:	ldr	r1, [sp, #36]	; 0x24
   259bc:	add	r0, r0, r1, lsl #3
   259c0:	ldr	r0, [r0, #4]
   259c4:	cmn	r0, #1
   259c8:	bne	25a04 <__assert_fail@plt+0x14500>
   259cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   259d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   259d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   259d8:	ldr	r1, [sp, #40]	; 0x28
   259dc:	sub	ip, fp, #40	; 0x28
   259e0:	str	r1, [sp, #28]
   259e4:	mov	r1, ip
   259e8:	ldr	ip, [sp, #28]
   259ec:	str	ip, [sp]
   259f0:	sub	lr, fp, #56	; 0x38
   259f4:	str	lr, [sp, #4]
   259f8:	bl	2d3b0 <__assert_fail@plt+0x1beac>
   259fc:	str	r0, [fp, #-44]	; 0xffffffd4
   25a00:	b	25a18 <__assert_fail@plt+0x14514>
   25a04:	b	25a08 <__assert_fail@plt+0x14504>
   25a08:	ldr	r0, [sp, #36]	; 0x24
   25a0c:	add	r0, r0, #1
   25a10:	str	r0, [sp, #36]	; 0x24
   25a14:	b	2598c <__assert_fail@plt+0x14488>
   25a18:	b	25a1c <__assert_fail@plt+0x14518>
   25a1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25a20:	cmp	r0, #0
   25a24:	bge	25a48 <__assert_fail@plt+0x14544>
   25a28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25a2c:	bl	35268 <__assert_fail@plt+0x23d64>
   25a30:	add	r0, sp, #44	; 0x2c
   25a34:	bl	2d110 <__assert_fail@plt+0x1bc0c>
   25a38:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25a3c:	bl	2d14c <__assert_fail@plt+0x1bc48>
   25a40:	str	r0, [fp, #-12]
   25a44:	b	25b50 <__assert_fail@plt+0x1464c>
   25a48:	b	25a4c <__assert_fail@plt+0x14548>
   25a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25a54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25a58:	ldr	r3, [sp, #40]	; 0x28
   25a5c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   25a60:	ldr	lr, [fp, #-60]	; 0xffffffc4
   25a64:	sub	r4, fp, #40	; 0x28
   25a68:	str	r4, [sp]
   25a6c:	str	ip, [sp, #4]
   25a70:	sub	ip, fp, #56	; 0x38
   25a74:	str	ip, [sp, #8]
   25a78:	str	lr, [sp, #12]
   25a7c:	bl	2d550 <__assert_fail@plt+0x1c04c>
   25a80:	str	r0, [fp, #-44]	; 0xffffffd4
   25a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25a88:	cmp	r0, #0
   25a8c:	bge	25b30 <__assert_fail@plt+0x1462c>
   25a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25a94:	cmn	r0, #2
   25a98:	bne	25ac4 <__assert_fail@plt+0x145c0>
   25a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25aa0:	bl	35268 <__assert_fail@plt+0x23d64>
   25aa4:	add	r0, sp, #44	; 0x2c
   25aa8:	bl	2d110 <__assert_fail@plt+0x1bc0c>
   25aac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25ab0:	bl	2d14c <__assert_fail@plt+0x1bc48>
   25ab4:	movw	lr, #12
   25ab8:	str	lr, [fp, #-12]
   25abc:	str	r0, [sp, #24]
   25ac0:	b	25b50 <__assert_fail@plt+0x1464c>
   25ac4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25ad0:	ldr	r1, [sp, #40]	; 0x28
   25ad4:	sub	ip, fp, #40	; 0x28
   25ad8:	str	r1, [sp, #20]
   25adc:	mov	r1, ip
   25ae0:	ldr	ip, [sp, #20]
   25ae4:	str	ip, [sp]
   25ae8:	sub	lr, fp, #56	; 0x38
   25aec:	str	lr, [sp, #4]
   25af0:	bl	2d3b0 <__assert_fail@plt+0x1beac>
   25af4:	str	r0, [fp, #-44]	; 0xffffffd4
   25af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25afc:	cmp	r0, #0
   25b00:	bge	25b2c <__assert_fail@plt+0x14628>
   25b04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25b08:	bl	35268 <__assert_fail@plt+0x23d64>
   25b0c:	add	r0, sp, #44	; 0x2c
   25b10:	bl	2d110 <__assert_fail@plt+0x1bc0c>
   25b14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b18:	bl	2d14c <__assert_fail@plt+0x1bc48>
   25b1c:	movw	lr, #1
   25b20:	str	lr, [fp, #-12]
   25b24:	str	r0, [sp, #16]
   25b28:	b	25b50 <__assert_fail@plt+0x1464c>
   25b2c:	b	25b30 <__assert_fail@plt+0x1462c>
   25b30:	b	258e8 <__assert_fail@plt+0x143e4>
   25b34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25b38:	bl	35268 <__assert_fail@plt+0x23d64>
   25b3c:	add	r0, sp, #44	; 0x2c
   25b40:	bl	2d110 <__assert_fail@plt+0x1bc0c>
   25b44:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b48:	bl	2d14c <__assert_fail@plt+0x1bc48>
   25b4c:	str	r0, [fp, #-12]
   25b50:	ldr	r0, [fp, #-12]
   25b54:	sub	sp, fp, #8
   25b58:	pop	{r4, sl, fp, pc}
   25b5c:	push	{fp, lr}
   25b60:	mov	fp, sp
   25b64:	sub	sp, sp, #8
   25b68:	str	r0, [sp, #4]
   25b6c:	ldr	r0, [sp, #4]
   25b70:	bl	2567c <__assert_fail@plt+0x14178>
   25b74:	ldr	r0, [sp, #4]
   25b78:	ldr	r0, [r0, #132]	; 0x84
   25b7c:	bl	35268 <__assert_fail@plt+0x23d64>
   25b80:	ldr	r0, [sp, #4]
   25b84:	ldr	r0, [r0, #116]	; 0x74
   25b88:	bl	35268 <__assert_fail@plt+0x23d64>
   25b8c:	mov	sp, fp
   25b90:	pop	{fp, pc}
   25b94:	push	{fp, lr}
   25b98:	mov	fp, sp
   25b9c:	sub	sp, sp, #40	; 0x28
   25ba0:	str	r0, [fp, #-8]
   25ba4:	str	r1, [fp, #-12]
   25ba8:	str	r2, [fp, #-16]
   25bac:	ldr	r0, [fp, #-12]
   25bb0:	cmp	r0, #0
   25bb4:	bge	25bc8 <__assert_fail@plt+0x146c4>
   25bb8:	ldr	r0, [fp, #-8]
   25bbc:	ldr	r0, [r0, #60]	; 0x3c
   25bc0:	str	r0, [fp, #-4]
   25bc4:	b	25d88 <__assert_fail@plt+0x14884>
   25bc8:	ldr	r0, [fp, #-12]
   25bcc:	ldr	r1, [fp, #-8]
   25bd0:	ldr	r1, [r1, #48]	; 0x30
   25bd4:	cmp	r0, r1
   25bd8:	bne	25c04 <__assert_fail@plt+0x14700>
   25bdc:	ldr	r0, [fp, #-16]
   25be0:	and	r0, r0, #2
   25be4:	cmp	r0, #0
   25be8:	movw	r0, #0
   25bec:	movne	r0, #1
   25bf0:	tst	r0, #1
   25bf4:	movw	r0, #8
   25bf8:	moveq	r0, #10
   25bfc:	str	r0, [fp, #-4]
   25c00:	b	25d88 <__assert_fail@plt+0x14884>
   25c04:	ldr	r0, [fp, #-8]
   25c08:	ldr	r0, [r0, #80]	; 0x50
   25c0c:	cmp	r0, #1
   25c10:	ble	25d0c <__assert_fail@plt+0x14808>
   25c14:	ldr	r0, [fp, #-12]
   25c18:	str	r0, [sp, #12]
   25c1c:	ldr	r0, [fp, #-8]
   25c20:	ldr	r0, [r0, #8]
   25c24:	ldr	r1, [sp, #12]
   25c28:	add	r0, r0, r1, lsl #2
   25c2c:	ldr	r0, [r0]
   25c30:	cmn	r0, #1
   25c34:	bne	25c78 <__assert_fail@plt+0x14774>
   25c38:	ldr	r0, [sp, #12]
   25c3c:	cmp	r0, #0
   25c40:	blt	25c48 <__assert_fail@plt+0x14744>
   25c44:	b	25c48 <__assert_fail@plt+0x14744>
   25c48:	ldr	r0, [sp, #12]
   25c4c:	mvn	r1, #0
   25c50:	add	r0, r0, r1
   25c54:	str	r0, [sp, #12]
   25c58:	ldr	r0, [sp, #12]
   25c5c:	cmp	r0, #0
   25c60:	bge	25c74 <__assert_fail@plt+0x14770>
   25c64:	ldr	r0, [fp, #-8]
   25c68:	ldr	r0, [r0, #60]	; 0x3c
   25c6c:	str	r0, [fp, #-4]
   25c70:	b	25d88 <__assert_fail@plt+0x14884>
   25c74:	b	25c1c <__assert_fail@plt+0x14718>
   25c78:	ldr	r0, [fp, #-8]
   25c7c:	ldr	r0, [r0, #8]
   25c80:	ldr	r1, [sp, #12]
   25c84:	add	r0, r0, r1, lsl #2
   25c88:	ldr	r0, [r0]
   25c8c:	str	r0, [sp, #16]
   25c90:	ldr	r0, [fp, #-8]
   25c94:	ldrb	r0, [r0, #78]	; 0x4e
   25c98:	cmp	r0, #0
   25c9c:	beq	25cc8 <__assert_fail@plt+0x147c4>
   25ca0:	ldr	r0, [sp, #16]
   25ca4:	bl	11408 <iswalnum@plt>
   25ca8:	cmp	r0, #0
   25cac:	bne	25cbc <__assert_fail@plt+0x147b8>
   25cb0:	ldr	r0, [sp, #16]
   25cb4:	cmp	r0, #95	; 0x5f
   25cb8:	bne	25cc8 <__assert_fail@plt+0x147c4>
   25cbc:	movw	r0, #1
   25cc0:	str	r0, [fp, #-4]
   25cc4:	b	25d88 <__assert_fail@plt+0x14884>
   25cc8:	ldr	r0, [sp, #16]
   25ccc:	cmp	r0, #10
   25cd0:	movw	r0, #0
   25cd4:	str	r0, [sp, #8]
   25cd8:	bne	25cf4 <__assert_fail@plt+0x147f0>
   25cdc:	ldr	r0, [fp, #-8]
   25ce0:	ldrb	r0, [r0, #77]	; 0x4d
   25ce4:	cmp	r0, #0
   25ce8:	movw	r0, #0
   25cec:	movne	r0, #1
   25cf0:	str	r0, [sp, #8]
   25cf4:	ldr	r0, [sp, #8]
   25cf8:	tst	r0, #1
   25cfc:	movw	r0, #2
   25d00:	moveq	r0, #0
   25d04:	str	r0, [fp, #-4]
   25d08:	b	25d88 <__assert_fail@plt+0x14884>
   25d0c:	ldr	r0, [fp, #-8]
   25d10:	ldr	r0, [r0, #4]
   25d14:	ldr	r1, [fp, #-12]
   25d18:	add	r0, r0, r1
   25d1c:	ldrb	r0, [r0]
   25d20:	str	r0, [sp, #20]
   25d24:	ldr	r0, [fp, #-8]
   25d28:	ldr	r0, [r0, #68]	; 0x44
   25d2c:	ldr	r1, [sp, #20]
   25d30:	bl	25f04 <__assert_fail@plt+0x14a00>
   25d34:	tst	r0, #1
   25d38:	beq	25d48 <__assert_fail@plt+0x14844>
   25d3c:	movw	r0, #1
   25d40:	str	r0, [fp, #-4]
   25d44:	b	25d88 <__assert_fail@plt+0x14884>
   25d48:	ldr	r0, [sp, #20]
   25d4c:	cmp	r0, #10
   25d50:	movw	r0, #0
   25d54:	str	r0, [sp, #4]
   25d58:	bne	25d74 <__assert_fail@plt+0x14870>
   25d5c:	ldr	r0, [fp, #-8]
   25d60:	ldrb	r0, [r0, #77]	; 0x4d
   25d64:	cmp	r0, #0
   25d68:	movw	r0, #0
   25d6c:	movne	r0, #1
   25d70:	str	r0, [sp, #4]
   25d74:	ldr	r0, [sp, #4]
   25d78:	tst	r0, #1
   25d7c:	movw	r0, #2
   25d80:	moveq	r0, #0
   25d84:	str	r0, [fp, #-4]
   25d88:	ldr	r0, [fp, #-4]
   25d8c:	mov	sp, fp
   25d90:	pop	{fp, pc}
   25d94:	push	{fp, lr}
   25d98:	mov	fp, sp
   25d9c:	sub	sp, sp, #48	; 0x30
   25da0:	str	r0, [fp, #-4]
   25da4:	str	r1, [fp, #-8]
   25da8:	str	r2, [fp, #-12]
   25dac:	mvn	r0, #0
   25db0:	str	r0, [sp, #16]
   25db4:	ldr	r0, [fp, #-4]
   25db8:	ldr	r0, [r0, #24]
   25dbc:	ldr	r1, [fp, #-4]
   25dc0:	ldr	r1, [r1, #32]
   25dc4:	add	r0, r0, r1
   25dc8:	str	r0, [sp, #24]
   25dcc:	ldr	r0, [sp, #24]
   25dd0:	ldr	r1, [fp, #-8]
   25dd4:	cmp	r0, r1
   25dd8:	bge	25eec <__assert_fail@plt+0x149e8>
   25ddc:	ldr	r0, [fp, #-4]
   25de0:	ldr	r0, [r0, #44]	; 0x2c
   25de4:	ldr	r1, [sp, #24]
   25de8:	sub	r0, r0, r1
   25dec:	str	r0, [sp, #8]
   25df0:	ldr	r0, [fp, #-4]
   25df4:	ldr	r1, [r0, #16]
   25df8:	str	r1, [fp, #-20]	; 0xffffffec
   25dfc:	ldr	r0, [r0, #20]
   25e00:	str	r0, [fp, #-16]
   25e04:	ldr	r0, [fp, #-4]
   25e08:	ldr	r0, [r0]
   25e0c:	ldr	r1, [sp, #24]
   25e10:	add	r1, r0, r1
   25e14:	ldr	r2, [sp, #8]
   25e18:	ldr	r0, [fp, #-4]
   25e1c:	add	r3, r0, #16
   25e20:	add	r0, sp, #12
   25e24:	bl	354d8 <__assert_fail@plt+0x23fd4>
   25e28:	str	r0, [sp, #20]
   25e2c:	ldr	r0, [sp, #20]
   25e30:	cmn	r0, #2
   25e34:	movw	r0, #1
   25e38:	str	r0, [sp, #4]
   25e3c:	beq	25e68 <__assert_fail@plt+0x14964>
   25e40:	ldr	r0, [sp, #20]
   25e44:	cmn	r0, #1
   25e48:	movw	r0, #1
   25e4c:	str	r0, [sp, #4]
   25e50:	beq	25e68 <__assert_fail@plt+0x14964>
   25e54:	ldr	r0, [sp, #20]
   25e58:	cmp	r0, #0
   25e5c:	movw	r0, #0
   25e60:	moveq	r0, #1
   25e64:	str	r0, [sp, #4]
   25e68:	ldr	r0, [sp, #4]
   25e6c:	tst	r0, #1
   25e70:	beq	25ed0 <__assert_fail@plt+0x149cc>
   25e74:	ldr	r0, [sp, #20]
   25e78:	cmp	r0, #0
   25e7c:	beq	25e8c <__assert_fail@plt+0x14988>
   25e80:	ldr	r0, [sp, #8]
   25e84:	cmp	r0, #0
   25e88:	bne	25e98 <__assert_fail@plt+0x14994>
   25e8c:	movw	r0, #0
   25e90:	str	r0, [sp, #16]
   25e94:	b	25eb0 <__assert_fail@plt+0x149ac>
   25e98:	ldr	r0, [fp, #-4]
   25e9c:	ldr	r0, [r0]
   25ea0:	ldr	r1, [sp, #24]
   25ea4:	add	r0, r0, r1
   25ea8:	ldrb	r0, [r0]
   25eac:	str	r0, [sp, #16]
   25eb0:	movw	r0, #1
   25eb4:	str	r0, [sp, #20]
   25eb8:	ldr	r0, [fp, #-4]
   25ebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   25ec0:	str	r1, [r0, #16]
   25ec4:	ldr	r1, [fp, #-16]
   25ec8:	str	r1, [r0, #20]
   25ecc:	b	25ed8 <__assert_fail@plt+0x149d4>
   25ed0:	ldr	r0, [sp, #12]
   25ed4:	str	r0, [sp, #16]
   25ed8:	ldr	r0, [sp, #20]
   25edc:	ldr	r1, [sp, #24]
   25ee0:	add	r0, r1, r0
   25ee4:	str	r0, [sp, #24]
   25ee8:	b	25dcc <__assert_fail@plt+0x148c8>
   25eec:	ldr	r0, [sp, #16]
   25ef0:	ldr	r1, [fp, #-12]
   25ef4:	str	r0, [r1]
   25ef8:	ldr	r0, [sp, #24]
   25efc:	mov	sp, fp
   25f00:	pop	{fp, pc}
   25f04:	sub	sp, sp, #8
   25f08:	str	r0, [sp, #4]
   25f0c:	str	r1, [sp]
   25f10:	ldr	r0, [sp, #4]
   25f14:	ldr	r1, [sp]
   25f18:	asr	r2, r1, #31
   25f1c:	add	r2, r1, r2, lsr #27
   25f20:	asr	r3, r2, #5
   25f24:	ldr	r0, [r0, r3, lsl #2]
   25f28:	bic	r2, r2, #31
   25f2c:	sub	r1, r1, r2
   25f30:	lsr	r0, r0, r1
   25f34:	and	r0, r0, #1
   25f38:	cmp	r0, #0
   25f3c:	movw	r0, #0
   25f40:	movne	r0, #1
   25f44:	and	r0, r0, #1
   25f48:	add	sp, sp, #8
   25f4c:	bx	lr
   25f50:	push	{fp, lr}
   25f54:	mov	fp, sp
   25f58:	sub	sp, sp, #32
   25f5c:	str	r0, [fp, #-8]
   25f60:	str	r1, [fp, #-12]
   25f64:	str	r2, [sp, #16]
   25f68:	ldr	r0, [fp, #-8]
   25f6c:	ldr	r0, [r0, #84]	; 0x54
   25f70:	str	r0, [sp, #12]
   25f74:	movw	r0, #0
   25f78:	str	r0, [sp, #8]
   25f7c:	ldr	r0, [sp, #8]
   25f80:	ldr	r1, [fp, #-12]
   25f84:	ldr	r1, [r1, #4]
   25f88:	cmp	r0, r1
   25f8c:	bge	26050 <__assert_fail@plt+0x14b4c>
   25f90:	ldr	r0, [fp, #-12]
   25f94:	ldr	r0, [r0, #8]
   25f98:	ldr	r1, [sp, #8]
   25f9c:	ldr	r0, [r0, r1, lsl #2]
   25fa0:	str	r0, [sp]
   25fa4:	ldr	r0, [sp, #12]
   25fa8:	ldr	r0, [r0]
   25fac:	ldr	r1, [sp]
   25fb0:	add	r0, r0, r1, lsl #3
   25fb4:	ldr	r0, [r0, #4]
   25fb8:	and	r0, r0, #255	; 0xff
   25fbc:	cmp	r0, #8
   25fc0:	bne	2603c <__assert_fail@plt+0x14b38>
   25fc4:	ldr	r0, [sp, #12]
   25fc8:	ldr	r0, [r0]
   25fcc:	ldr	r1, [sp]
   25fd0:	add	r0, r0, r1, lsl #3
   25fd4:	ldr	r0, [r0]
   25fd8:	cmp	r0, #32
   25fdc:	bge	2603c <__assert_fail@plt+0x14b38>
   25fe0:	ldr	r0, [sp, #12]
   25fe4:	ldr	r1, [r0]
   25fe8:	ldr	r0, [r0, #80]	; 0x50
   25fec:	ldr	r2, [sp]
   25ff0:	add	r1, r1, r2, lsl #3
   25ff4:	ldr	r1, [r1]
   25ff8:	movw	r2, #1
   25ffc:	lsl	r1, r2, r1
   26000:	and	r0, r0, r1
   26004:	cmp	r0, #0
   26008:	beq	2603c <__assert_fail@plt+0x14b38>
   2600c:	ldr	r0, [fp, #-8]
   26010:	ldr	r1, [sp]
   26014:	ldr	r2, [sp, #16]
   26018:	bl	26ca4 <__assert_fail@plt+0x157a0>
   2601c:	str	r0, [sp, #4]
   26020:	ldr	r0, [sp, #4]
   26024:	cmp	r0, #0
   26028:	beq	26038 <__assert_fail@plt+0x14b34>
   2602c:	ldr	r0, [sp, #4]
   26030:	str	r0, [fp, #-4]
   26034:	b	26058 <__assert_fail@plt+0x14b54>
   26038:	b	2603c <__assert_fail@plt+0x14b38>
   2603c:	b	26040 <__assert_fail@plt+0x14b3c>
   26040:	ldr	r0, [sp, #8]
   26044:	add	r0, r0, #1
   26048:	str	r0, [sp, #8]
   2604c:	b	25f7c <__assert_fail@plt+0x14a78>
   26050:	movw	r0, #0
   26054:	str	r0, [fp, #-4]
   26058:	ldr	r0, [fp, #-4]
   2605c:	mov	sp, fp
   26060:	pop	{fp, pc}
   26064:	push	{fp, lr}
   26068:	mov	fp, sp
   2606c:	sub	sp, sp, #96	; 0x60
   26070:	str	r0, [fp, #-4]
   26074:	str	r1, [fp, #-8]
   26078:	ldr	r0, [fp, #-4]
   2607c:	ldr	r0, [r0, #84]	; 0x54
   26080:	str	r0, [fp, #-12]
   26084:	ldr	r0, [fp, #-4]
   26088:	ldr	r0, [r0, #40]	; 0x28
   2608c:	str	r0, [fp, #-24]	; 0xffffffe8
   26090:	movw	r0, #0
   26094:	str	r0, [fp, #-20]	; 0xffffffec
   26098:	ldr	r0, [fp, #-20]	; 0xffffffec
   2609c:	ldr	r1, [fp, #-8]
   260a0:	ldr	r1, [r1, #4]
   260a4:	cmp	r0, r1
   260a8:	bge	2658c <__assert_fail@plt+0x15088>
   260ac:	ldr	r0, [fp, #-8]
   260b0:	ldr	r0, [r0, #8]
   260b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   260b8:	ldr	r0, [r0, r1, lsl #2]
   260bc:	str	r0, [fp, #-40]	; 0xffffffd8
   260c0:	ldr	r0, [fp, #-12]
   260c4:	ldr	r0, [r0]
   260c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   260cc:	add	r0, r0, r1, lsl #3
   260d0:	str	r0, [sp, #48]	; 0x30
   260d4:	ldr	r0, [sp, #48]	; 0x30
   260d8:	ldr	r0, [r0, #4]
   260dc:	and	r0, r0, #255	; 0xff
   260e0:	cmp	r0, #4
   260e4:	beq	260ec <__assert_fail@plt+0x14be8>
   260e8:	b	2657c <__assert_fail@plt+0x15078>
   260ec:	ldr	r0, [sp, #48]	; 0x30
   260f0:	ldr	r0, [r0, #4]
   260f4:	lsr	r0, r0, #8
   260f8:	movw	r1, #1023	; 0x3ff
   260fc:	and	r0, r0, r1
   26100:	cmp	r0, #0
   26104:	beq	261e8 <__assert_fail@plt+0x14ce4>
   26108:	ldr	r0, [fp, #-4]
   2610c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26110:	ldr	r2, [fp, #-4]
   26114:	ldr	r2, [r2, #88]	; 0x58
   26118:	bl	25b94 <__assert_fail@plt+0x14690>
   2611c:	str	r0, [fp, #-44]	; 0xffffffd4
   26120:	ldr	r0, [sp, #48]	; 0x30
   26124:	ldr	r0, [r0, #4]
   26128:	lsr	r0, r0, #8
   2612c:	movw	r1, #1023	; 0x3ff
   26130:	and	r0, r0, r1
   26134:	and	r0, r0, #4
   26138:	cmp	r0, #0
   2613c:	beq	26150 <__assert_fail@plt+0x14c4c>
   26140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26144:	and	r0, r0, #1
   26148:	cmp	r0, #0
   2614c:	beq	261e0 <__assert_fail@plt+0x14cdc>
   26150:	ldr	r0, [sp, #48]	; 0x30
   26154:	ldr	r0, [r0, #4]
   26158:	lsr	r0, r0, #8
   2615c:	movw	r1, #1023	; 0x3ff
   26160:	and	r0, r0, r1
   26164:	and	r0, r0, #8
   26168:	cmp	r0, #0
   2616c:	beq	26180 <__assert_fail@plt+0x14c7c>
   26170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26174:	and	r0, r0, #1
   26178:	cmp	r0, #0
   2617c:	bne	261e0 <__assert_fail@plt+0x14cdc>
   26180:	ldr	r0, [sp, #48]	; 0x30
   26184:	ldr	r0, [r0, #4]
   26188:	lsr	r0, r0, #8
   2618c:	movw	r1, #1023	; 0x3ff
   26190:	and	r0, r0, r1
   26194:	and	r0, r0, #32
   26198:	cmp	r0, #0
   2619c:	beq	261b0 <__assert_fail@plt+0x14cac>
   261a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   261a4:	and	r0, r0, #2
   261a8:	cmp	r0, #0
   261ac:	beq	261e0 <__assert_fail@plt+0x14cdc>
   261b0:	ldr	r0, [sp, #48]	; 0x30
   261b4:	ldr	r0, [r0, #4]
   261b8:	lsr	r0, r0, #8
   261bc:	movw	r1, #1023	; 0x3ff
   261c0:	and	r0, r0, r1
   261c4:	and	r0, r0, #128	; 0x80
   261c8:	cmp	r0, #0
   261cc:	beq	261e4 <__assert_fail@plt+0x14ce0>
   261d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   261d4:	and	r0, r0, #8
   261d8:	cmp	r0, #0
   261dc:	bne	261e4 <__assert_fail@plt+0x14ce0>
   261e0:	b	2657c <__assert_fail@plt+0x15078>
   261e4:	b	261e8 <__assert_fail@plt+0x14ce4>
   261e8:	ldr	r0, [fp, #-4]
   261ec:	ldr	r0, [r0, #108]	; 0x6c
   261f0:	str	r0, [fp, #-36]	; 0xffffffdc
   261f4:	ldr	r0, [fp, #-4]
   261f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   261fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26200:	bl	26df4 <__assert_fail@plt+0x158f0>
   26204:	str	r0, [fp, #-16]
   26208:	ldr	r0, [fp, #-16]
   2620c:	cmp	r0, #0
   26210:	beq	26218 <__assert_fail@plt+0x14d14>
   26214:	b	26594 <__assert_fail@plt+0x15090>
   26218:	ldr	r0, [fp, #-12]
   2621c:	ldr	r0, [r0, #12]
   26220:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26224:	add	r0, r0, r1, lsl #2
   26228:	ldr	r0, [r0]
   2622c:	cmn	r0, #1
   26230:	beq	26238 <__assert_fail@plt+0x14d34>
   26234:	b	26238 <__assert_fail@plt+0x14d34>
   26238:	b	2623c <__assert_fail@plt+0x14d38>
   2623c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26240:	ldr	r1, [fp, #-4]
   26244:	ldr	r1, [r1, #108]	; 0x6c
   26248:	cmp	r0, r1
   2624c:	bge	26578 <__assert_fail@plt+0x15074>
   26250:	ldr	r0, [fp, #-4]
   26254:	ldr	r0, [r0, #116]	; 0x74
   26258:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2625c:	movw	r2, #24
   26260:	mul	r1, r1, r2
   26264:	add	r0, r0, r1
   26268:	str	r0, [sp, #32]
   2626c:	ldr	r0, [sp, #32]
   26270:	ldr	r0, [r0]
   26274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26278:	cmp	r0, r1
   2627c:	bne	26294 <__assert_fail@plt+0x14d90>
   26280:	ldr	r0, [sp, #32]
   26284:	ldr	r0, [r0, #4]
   26288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2628c:	cmp	r0, r1
   26290:	beq	26298 <__assert_fail@plt+0x14d94>
   26294:	b	26568 <__assert_fail@plt+0x15064>
   26298:	ldr	r0, [sp, #32]
   2629c:	ldr	r0, [r0, #12]
   262a0:	ldr	r1, [sp, #32]
   262a4:	ldr	r1, [r1, #8]
   262a8:	sub	r0, r0, r1
   262ac:	str	r0, [sp, #40]	; 0x28
   262b0:	ldr	r0, [sp, #40]	; 0x28
   262b4:	cmp	r0, #0
   262b8:	bne	262f4 <__assert_fail@plt+0x14df0>
   262bc:	ldr	r0, [fp, #-12]
   262c0:	ldr	r0, [r0, #24]
   262c4:	ldr	r1, [fp, #-12]
   262c8:	ldr	r1, [r1, #20]
   262cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   262d0:	movw	r3, #12
   262d4:	mul	r2, r2, r3
   262d8:	add	r1, r1, r2
   262dc:	ldr	r1, [r1, #8]
   262e0:	ldr	r1, [r1]
   262e4:	mul	r1, r1, r3
   262e8:	add	r0, r0, r1
   262ec:	str	r0, [sp, #16]
   262f0:	b	2631c <__assert_fail@plt+0x14e18>
   262f4:	ldr	r0, [fp, #-12]
   262f8:	ldr	r1, [r0, #12]
   262fc:	ldr	r0, [r0, #24]
   26300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26304:	add	r1, r1, r2, lsl #2
   26308:	ldr	r1, [r1]
   2630c:	movw	r2, #12
   26310:	mul	r1, r1, r2
   26314:	add	r0, r0, r1
   26318:	str	r0, [sp, #16]
   2631c:	ldr	r0, [sp, #16]
   26320:	str	r0, [sp, #44]	; 0x2c
   26324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26328:	ldr	r1, [sp, #32]
   2632c:	ldr	r2, [r1, #8]
   26330:	ldr	r1, [r1, #12]
   26334:	add	r0, r0, r1
   26338:	sub	r0, r0, r2
   2633c:	str	r0, [fp, #-28]	; 0xffffffe4
   26340:	ldr	r0, [fp, #-4]
   26344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26348:	sub	r1, r1, #1
   2634c:	ldr	r2, [r0, #88]	; 0x58
   26350:	bl	25b94 <__assert_fail@plt+0x14690>
   26354:	str	r0, [fp, #-44]	; 0xffffffd4
   26358:	ldr	r0, [fp, #-4]
   2635c:	ldr	r0, [r0, #100]	; 0x64
   26360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26364:	ldr	r0, [r0, r1, lsl #2]
   26368:	str	r0, [sp, #36]	; 0x24
   2636c:	ldr	r0, [fp, #-4]
   26370:	ldr	r0, [r0, #100]	; 0x64
   26374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26378:	add	r0, r0, r1, lsl #2
   2637c:	ldr	r0, [r0]
   26380:	movw	r1, #0
   26384:	cmp	r0, r1
   26388:	bne	26398 <__assert_fail@plt+0x14e94>
   2638c:	movw	r0, #0
   26390:	str	r0, [sp, #12]
   26394:	b	263b4 <__assert_fail@plt+0x14eb0>
   26398:	ldr	r0, [fp, #-4]
   2639c:	ldr	r0, [r0, #100]	; 0x64
   263a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   263a4:	add	r0, r0, r1, lsl #2
   263a8:	ldr	r0, [r0]
   263ac:	ldr	r0, [r0, #8]
   263b0:	str	r0, [sp, #12]
   263b4:	ldr	r0, [sp, #12]
   263b8:	str	r0, [fp, #-32]	; 0xffffffe0
   263bc:	ldr	r0, [sp, #36]	; 0x24
   263c0:	movw	r1, #0
   263c4:	cmp	r0, r1
   263c8:	bne	26440 <__assert_fail@plt+0x14f3c>
   263cc:	ldr	r1, [fp, #-12]
   263d0:	ldr	r2, [sp, #44]	; 0x2c
   263d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   263d8:	sub	r0, fp, #16
   263dc:	bl	23344 <__assert_fail@plt+0x11e40>
   263e0:	ldr	r1, [fp, #-4]
   263e4:	ldr	r1, [r1, #100]	; 0x64
   263e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   263ec:	str	r0, [r1, r2, lsl #2]
   263f0:	ldr	r0, [fp, #-4]
   263f4:	ldr	r0, [r0, #100]	; 0x64
   263f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   263fc:	add	r0, r0, r1, lsl #2
   26400:	ldr	r0, [r0]
   26404:	movw	r1, #0
   26408:	cmp	r0, r1
   2640c:	movw	r0, #0
   26410:	str	r0, [sp, #8]
   26414:	bne	2642c <__assert_fail@plt+0x14f28>
   26418:	ldr	r0, [fp, #-16]
   2641c:	cmp	r0, #0
   26420:	movw	r0, #0
   26424:	movne	r0, #1
   26428:	str	r0, [sp, #8]
   2642c:	ldr	r0, [sp, #8]
   26430:	tst	r0, #1
   26434:	beq	2643c <__assert_fail@plt+0x14f38>
   26438:	b	26594 <__assert_fail@plt+0x15090>
   2643c:	b	264ec <__assert_fail@plt+0x14fe8>
   26440:	ldr	r0, [sp, #36]	; 0x24
   26444:	ldr	r1, [r0, #40]	; 0x28
   26448:	ldr	r2, [sp, #44]	; 0x2c
   2644c:	add	r0, sp, #20
   26450:	bl	27390 <__assert_fail@plt+0x15e8c>
   26454:	str	r0, [fp, #-16]
   26458:	ldr	r0, [fp, #-16]
   2645c:	cmp	r0, #0
   26460:	beq	26470 <__assert_fail@plt+0x14f6c>
   26464:	ldr	r0, [sp, #28]
   26468:	bl	35268 <__assert_fail@plt+0x23d64>
   2646c:	b	26594 <__assert_fail@plt+0x15090>
   26470:	ldr	r1, [fp, #-12]
   26474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26478:	sub	r0, fp, #16
   2647c:	add	r2, sp, #20
   26480:	bl	23344 <__assert_fail@plt+0x11e40>
   26484:	ldr	r1, [fp, #-4]
   26488:	ldr	r1, [r1, #100]	; 0x64
   2648c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26490:	str	r0, [r1, r2, lsl #2]
   26494:	ldr	r0, [sp, #28]
   26498:	bl	35268 <__assert_fail@plt+0x23d64>
   2649c:	ldr	r0, [fp, #-4]
   264a0:	ldr	r0, [r0, #100]	; 0x64
   264a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   264a8:	add	r0, r0, r1, lsl #2
   264ac:	ldr	r0, [r0]
   264b0:	movw	r1, #0
   264b4:	cmp	r0, r1
   264b8:	movw	r0, #0
   264bc:	str	r0, [sp, #4]
   264c0:	bne	264d8 <__assert_fail@plt+0x14fd4>
   264c4:	ldr	r0, [fp, #-16]
   264c8:	cmp	r0, #0
   264cc:	movw	r0, #0
   264d0:	movne	r0, #1
   264d4:	str	r0, [sp, #4]
   264d8:	ldr	r0, [sp, #4]
   264dc:	tst	r0, #1
   264e0:	beq	264e8 <__assert_fail@plt+0x14fe4>
   264e4:	b	26594 <__assert_fail@plt+0x15090>
   264e8:	b	264ec <__assert_fail@plt+0x14fe8>
   264ec:	ldr	r0, [sp, #40]	; 0x28
   264f0:	cmp	r0, #0
   264f4:	bne	26564 <__assert_fail@plt+0x15060>
   264f8:	ldr	r0, [fp, #-4]
   264fc:	ldr	r0, [r0, #100]	; 0x64
   26500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26504:	add	r0, r0, r1, lsl #2
   26508:	ldr	r0, [r0]
   2650c:	ldr	r0, [r0, #8]
   26510:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26514:	cmp	r0, r1
   26518:	ble	26564 <__assert_fail@plt+0x15060>
   2651c:	ldr	r0, [fp, #-4]
   26520:	ldr	r1, [sp, #44]	; 0x2c
   26524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26528:	bl	25f50 <__assert_fail@plt+0x14a4c>
   2652c:	str	r0, [fp, #-16]
   26530:	ldr	r0, [fp, #-16]
   26534:	cmp	r0, #0
   26538:	beq	26540 <__assert_fail@plt+0x1503c>
   2653c:	b	26594 <__assert_fail@plt+0x15090>
   26540:	ldr	r0, [fp, #-4]
   26544:	ldr	r1, [sp, #44]	; 0x2c
   26548:	bl	26064 <__assert_fail@plt+0x14b60>
   2654c:	str	r0, [fp, #-16]
   26550:	ldr	r0, [fp, #-16]
   26554:	cmp	r0, #0
   26558:	beq	26560 <__assert_fail@plt+0x1505c>
   2655c:	b	26594 <__assert_fail@plt+0x15090>
   26560:	b	26564 <__assert_fail@plt+0x15060>
   26564:	b	26568 <__assert_fail@plt+0x15064>
   26568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2656c:	add	r0, r0, #1
   26570:	str	r0, [fp, #-36]	; 0xffffffdc
   26574:	b	2623c <__assert_fail@plt+0x14d38>
   26578:	b	2657c <__assert_fail@plt+0x15078>
   2657c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26580:	add	r0, r0, #1
   26584:	str	r0, [fp, #-20]	; 0xffffffec
   26588:	b	26098 <__assert_fail@plt+0x14b94>
   2658c:	movw	r0, #0
   26590:	str	r0, [fp, #-16]
   26594:	ldr	r0, [fp, #-16]
   26598:	mov	sp, fp
   2659c:	pop	{fp, pc}
   265a0:	push	{fp, lr}
   265a4:	mov	fp, sp
   265a8:	sub	sp, sp, #48	; 0x30
   265ac:	ldr	r2, [pc, #512]	; 267b4 <__assert_fail@plt+0x152b0>
   265b0:	str	r0, [fp, #-8]
   265b4:	str	r1, [fp, #-12]
   265b8:	ldr	r0, [fp, #-8]
   265bc:	str	r0, [fp, #-20]	; 0xffffffec
   265c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   265c4:	ldr	r0, [r0, #36]	; 0x24
   265c8:	cmp	r2, r0
   265cc:	bhi	265dc <__assert_fail@plt+0x150d8>
   265d0:	movw	r0, #12
   265d4:	str	r0, [fp, #-4]
   265d8:	b	267a8 <__assert_fail@plt+0x152a4>
   265dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   265e0:	ldr	r1, [fp, #-12]
   265e4:	ldr	r2, [r0, #36]	; 0x24
   265e8:	ldr	r3, [r0, #48]	; 0x30
   265ec:	lsl	r2, r2, #1
   265f0:	cmp	r3, r2
   265f4:	str	r0, [sp, #20]
   265f8:	str	r1, [sp, #16]
   265fc:	bge	26610 <__assert_fail@plt+0x1510c>
   26600:	ldr	r0, [fp, #-20]	; 0xffffffec
   26604:	ldr	r0, [r0, #48]	; 0x30
   26608:	str	r0, [sp, #12]
   2660c:	b	26620 <__assert_fail@plt+0x1511c>
   26610:	ldr	r0, [fp, #-20]	; 0xffffffec
   26614:	ldr	r0, [r0, #36]	; 0x24
   26618:	lsl	r0, r0, #1
   2661c:	str	r0, [sp, #12]
   26620:	ldr	r0, [sp, #12]
   26624:	ldr	r1, [sp, #16]
   26628:	cmp	r1, r0
   2662c:	bge	26674 <__assert_fail@plt+0x15170>
   26630:	ldr	r0, [fp, #-20]	; 0xffffffec
   26634:	ldr	r1, [r0, #36]	; 0x24
   26638:	ldr	r0, [r0, #48]	; 0x30
   2663c:	lsl	r1, r1, #1
   26640:	cmp	r0, r1
   26644:	bge	26658 <__assert_fail@plt+0x15154>
   26648:	ldr	r0, [fp, #-20]	; 0xffffffec
   2664c:	ldr	r0, [r0, #48]	; 0x30
   26650:	str	r0, [sp, #8]
   26654:	b	26668 <__assert_fail@plt+0x15164>
   26658:	ldr	r0, [fp, #-20]	; 0xffffffec
   2665c:	ldr	r0, [r0, #36]	; 0x24
   26660:	lsl	r0, r0, #1
   26664:	str	r0, [sp, #8]
   26668:	ldr	r0, [sp, #8]
   2666c:	str	r0, [sp, #4]
   26670:	b	2667c <__assert_fail@plt+0x15178>
   26674:	ldr	r0, [fp, #-12]
   26678:	str	r0, [sp, #4]
   2667c:	ldr	r0, [sp, #4]
   26680:	ldr	r1, [sp, #20]
   26684:	str	r0, [sp]
   26688:	mov	r0, r1
   2668c:	ldr	r1, [sp]
   26690:	bl	1a24c <__assert_fail@plt+0x8d48>
   26694:	str	r0, [fp, #-16]
   26698:	ldr	r0, [fp, #-16]
   2669c:	cmp	r0, #0
   266a0:	beq	266b0 <__assert_fail@plt+0x151ac>
   266a4:	ldr	r0, [fp, #-16]
   266a8:	str	r0, [fp, #-4]
   266ac:	b	267a8 <__assert_fail@plt+0x152a4>
   266b0:	ldr	r0, [fp, #-8]
   266b4:	ldr	r0, [r0, #100]	; 0x64
   266b8:	movw	r1, #0
   266bc:	cmp	r0, r1
   266c0:	beq	2670c <__assert_fail@plt+0x15208>
   266c4:	ldr	r0, [fp, #-8]
   266c8:	ldr	r0, [r0, #100]	; 0x64
   266cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   266d0:	ldr	r1, [r1, #36]	; 0x24
   266d4:	add	r1, r1, #1
   266d8:	lsl	r1, r1, #2
   266dc:	bl	33bb4 <__assert_fail@plt+0x226b0>
   266e0:	str	r0, [sp, #24]
   266e4:	ldr	r0, [sp, #24]
   266e8:	movw	r1, #0
   266ec:	cmp	r0, r1
   266f0:	bne	26700 <__assert_fail@plt+0x151fc>
   266f4:	movw	r0, #12
   266f8:	str	r0, [fp, #-4]
   266fc:	b	267a8 <__assert_fail@plt+0x152a4>
   26700:	ldr	r0, [sp, #24]
   26704:	ldr	r1, [fp, #-8]
   26708:	str	r0, [r1, #100]	; 0x64
   2670c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26710:	ldrsb	r0, [r0, #72]	; 0x48
   26714:	cmp	r0, #0
   26718:	beq	26760 <__assert_fail@plt+0x1525c>
   2671c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26720:	ldr	r0, [r0, #80]	; 0x50
   26724:	cmp	r0, #1
   26728:	ble	26754 <__assert_fail@plt+0x15250>
   2672c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26730:	bl	1a3a4 <__assert_fail@plt+0x8ea0>
   26734:	str	r0, [fp, #-16]
   26738:	ldr	r0, [fp, #-16]
   2673c:	cmp	r0, #0
   26740:	beq	26750 <__assert_fail@plt+0x1524c>
   26744:	ldr	r0, [fp, #-16]
   26748:	str	r0, [fp, #-4]
   2674c:	b	267a8 <__assert_fail@plt+0x152a4>
   26750:	b	2675c <__assert_fail@plt+0x15258>
   26754:	ldr	r0, [fp, #-20]	; 0xffffffec
   26758:	bl	1ae50 <__assert_fail@plt+0x994c>
   2675c:	b	267a0 <__assert_fail@plt+0x1529c>
   26760:	ldr	r0, [fp, #-20]	; 0xffffffec
   26764:	ldr	r0, [r0, #80]	; 0x50
   26768:	cmp	r0, #1
   2676c:	ble	2677c <__assert_fail@plt+0x15278>
   26770:	ldr	r0, [fp, #-20]	; 0xffffffec
   26774:	bl	1af54 <__assert_fail@plt+0x9a50>
   26778:	b	2679c <__assert_fail@plt+0x15298>
   2677c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26780:	ldr	r0, [r0, #64]	; 0x40
   26784:	movw	r1, #0
   26788:	cmp	r0, r1
   2678c:	beq	26798 <__assert_fail@plt+0x15294>
   26790:	ldr	r0, [fp, #-20]	; 0xffffffec
   26794:	bl	1b294 <__assert_fail@plt+0x9d90>
   26798:	b	2679c <__assert_fail@plt+0x15298>
   2679c:	b	267a0 <__assert_fail@plt+0x1529c>
   267a0:	movw	r0, #0
   267a4:	str	r0, [fp, #-4]
   267a8:	ldr	r0, [fp, #-4]
   267ac:	mov	sp, fp
   267b0:	pop	{fp, pc}
   267b4:	svcne	0x00ffffff
   267b8:	push	{fp, lr}
   267bc:	mov	fp, sp
   267c0:	sub	sp, sp, #40	; 0x28
   267c4:	str	r0, [fp, #-8]
   267c8:	str	r1, [fp, #-12]
   267cc:	str	r2, [fp, #-16]
   267d0:	ldr	r0, [fp, #-16]
   267d4:	ldrb	r0, [r0, #52]	; 0x34
   267d8:	ubfx	r0, r0, #5, #1
   267dc:	and	r0, r0, #255	; 0xff
   267e0:	cmp	r0, #0
   267e4:	beq	2681c <__assert_fail@plt+0x15318>
   267e8:	ldr	r0, [fp, #-12]
   267ec:	ldr	r1, [fp, #-16]
   267f0:	bl	29b54 <__assert_fail@plt+0x18650>
   267f4:	ldr	r1, [fp, #-8]
   267f8:	str	r0, [r1]
   267fc:	ldr	r0, [fp, #-8]
   26800:	ldr	r0, [r0]
   26804:	cmp	r0, #0
   26808:	beq	26818 <__assert_fail@plt+0x15314>
   2680c:	movw	r0, #0
   26810:	str	r0, [fp, #-4]
   26814:	b	26938 <__assert_fail@plt+0x15434>
   26818:	b	2681c <__assert_fail@plt+0x15318>
   2681c:	ldr	r0, [fp, #-12]
   26820:	ldr	r0, [r0, #4]
   26824:	ldr	r1, [fp, #-12]
   26828:	ldr	r2, [r1, #40]	; 0x28
   2682c:	add	r3, r2, #1
   26830:	str	r3, [r1, #40]	; 0x28
   26834:	add	r0, r0, r2
   26838:	ldrb	r0, [r0]
   2683c:	strb	r0, [sp, #19]
   26840:	ldr	r0, [fp, #-16]
   26844:	ldr	r0, [r0, #44]	; 0x2c
   26848:	str	r0, [sp, #20]
   2684c:	ldr	r0, [sp, #20]
   26850:	movw	r1, #0
   26854:	cmp	r0, r1
   26858:	beq	2687c <__assert_fail@plt+0x15378>
   2685c:	ldr	r0, [sp, #20]
   26860:	ldrb	r1, [sp, #19]
   26864:	mov	r2, r1
   26868:	add	r0, r0, r1, lsl #2
   2686c:	ldr	r0, [r0]
   26870:	str	r0, [fp, #-4]
   26874:	str	r2, [sp, #8]
   26878:	b	26938 <__assert_fail@plt+0x15434>
   2687c:	ldr	r0, [fp, #-16]
   26880:	ldr	r0, [r0, #48]	; 0x30
   26884:	str	r0, [sp, #20]
   26888:	ldr	r0, [sp, #20]
   2688c:	movw	r1, #0
   26890:	cmp	r0, r1
   26894:	beq	26904 <__assert_fail@plt+0x15400>
   26898:	ldr	r0, [fp, #-12]
   2689c:	ldr	r1, [fp, #-12]
   268a0:	ldr	r1, [r1, #40]	; 0x28
   268a4:	sub	r1, r1, #1
   268a8:	ldr	r2, [fp, #-12]
   268ac:	ldr	r2, [r2, #88]	; 0x58
   268b0:	bl	25b94 <__assert_fail@plt+0x14690>
   268b4:	str	r0, [sp, #12]
   268b8:	ldr	r0, [sp, #12]
   268bc:	and	r0, r0, #1
   268c0:	cmp	r0, #0
   268c4:	beq	268e4 <__assert_fail@plt+0x153e0>
   268c8:	ldr	r0, [sp, #20]
   268cc:	ldrb	r1, [sp, #19]
   268d0:	orr	r1, r1, #256	; 0x100
   268d4:	add	r0, r0, r1, lsl #2
   268d8:	ldr	r0, [r0]
   268dc:	str	r0, [fp, #-4]
   268e0:	b	26938 <__assert_fail@plt+0x15434>
   268e4:	ldr	r0, [sp, #20]
   268e8:	ldrb	r1, [sp, #19]
   268ec:	mov	r2, r1
   268f0:	add	r0, r0, r1, lsl #2
   268f4:	ldr	r0, [r0]
   268f8:	str	r0, [fp, #-4]
   268fc:	str	r2, [sp, #4]
   26900:	b	26938 <__assert_fail@plt+0x15434>
   26904:	ldr	r0, [fp, #-12]
   26908:	ldr	r0, [r0, #84]	; 0x54
   2690c:	ldr	r1, [fp, #-16]
   26910:	bl	29f30 <__assert_fail@plt+0x18a2c>
   26914:	tst	r0, #1
   26918:	bne	26934 <__assert_fail@plt+0x15430>
   2691c:	ldr	r0, [fp, #-8]
   26920:	movw	r1, #12
   26924:	str	r1, [r0]
   26928:	movw	r0, #0
   2692c:	str	r0, [fp, #-4]
   26930:	b	26938 <__assert_fail@plt+0x15434>
   26934:	b	26840 <__assert_fail@plt+0x1533c>
   26938:	ldr	r0, [fp, #-4]
   2693c:	mov	sp, fp
   26940:	pop	{fp, pc}
   26944:	push	{fp, lr}
   26948:	mov	fp, sp
   2694c:	sub	sp, sp, #56	; 0x38
   26950:	str	r0, [fp, #-8]
   26954:	str	r1, [fp, #-12]
   26958:	str	r2, [fp, #-16]
   2695c:	ldr	r0, [fp, #-12]
   26960:	ldr	r0, [r0, #84]	; 0x54
   26964:	str	r0, [fp, #-20]	; 0xffffffec
   26968:	ldr	r0, [fp, #-12]
   2696c:	ldr	r0, [r0, #40]	; 0x28
   26970:	str	r0, [fp, #-24]	; 0xffffffe8
   26974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26978:	ldr	r1, [fp, #-12]
   2697c:	ldr	r1, [r1, #104]	; 0x68
   26980:	cmp	r0, r1
   26984:	ble	269b0 <__assert_fail@plt+0x154ac>
   26988:	ldr	r0, [fp, #-16]
   2698c:	ldr	r1, [fp, #-12]
   26990:	ldr	r1, [r1, #100]	; 0x64
   26994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26998:	add	r1, r1, r2, lsl #2
   2699c:	str	r0, [r1]
   269a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269a4:	ldr	r1, [fp, #-12]
   269a8:	str	r0, [r1, #104]	; 0x68
   269ac:	b	26aec <__assert_fail@plt+0x155e8>
   269b0:	ldr	r0, [fp, #-12]
   269b4:	ldr	r0, [r0, #100]	; 0x64
   269b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   269bc:	add	r0, r0, r1, lsl #2
   269c0:	ldr	r0, [r0]
   269c4:	movw	r1, #0
   269c8:	cmp	r0, r1
   269cc:	bne	269ec <__assert_fail@plt+0x154e8>
   269d0:	ldr	r0, [fp, #-16]
   269d4:	ldr	r1, [fp, #-12]
   269d8:	ldr	r1, [r1, #100]	; 0x64
   269dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   269e0:	add	r1, r1, r2, lsl #2
   269e4:	str	r0, [r1]
   269e8:	b	26ae8 <__assert_fail@plt+0x155e4>
   269ec:	mov	r0, #0
   269f0:	str	r0, [sp, #4]
   269f4:	ldr	r0, [fp, #-12]
   269f8:	ldr	r0, [r0, #100]	; 0x64
   269fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26a00:	add	r0, r0, r1, lsl #2
   26a04:	ldr	r0, [r0]
   26a08:	str	r0, [sp, #28]
   26a0c:	ldr	r0, [sp, #28]
   26a10:	ldr	r0, [r0, #40]	; 0x28
   26a14:	str	r0, [sp, #8]
   26a18:	ldr	r0, [fp, #-16]
   26a1c:	movw	r1, #0
   26a20:	cmp	r0, r1
   26a24:	beq	26a6c <__assert_fail@plt+0x15568>
   26a28:	ldr	r0, [fp, #-16]
   26a2c:	ldr	r0, [r0, #40]	; 0x28
   26a30:	str	r0, [sp, #4]
   26a34:	ldr	r1, [sp, #4]
   26a38:	ldr	r2, [sp, #8]
   26a3c:	add	r0, sp, #12
   26a40:	bl	27390 <__assert_fail@plt+0x15e8c>
   26a44:	ldr	r1, [fp, #-8]
   26a48:	str	r0, [r1]
   26a4c:	ldr	r0, [fp, #-8]
   26a50:	ldr	r0, [r0]
   26a54:	cmp	r0, #0
   26a58:	beq	26a68 <__assert_fail@plt+0x15564>
   26a5c:	movw	r0, #0
   26a60:	str	r0, [fp, #-4]
   26a64:	b	26bb4 <__assert_fail@plt+0x156b0>
   26a68:	b	26a88 <__assert_fail@plt+0x15584>
   26a6c:	ldr	r0, [sp, #8]
   26a70:	ldr	r1, [r0]
   26a74:	str	r1, [sp, #12]
   26a78:	ldr	r1, [r0, #4]
   26a7c:	str	r1, [sp, #16]
   26a80:	ldr	r0, [r0, #8]
   26a84:	str	r0, [sp, #20]
   26a88:	ldr	r0, [fp, #-12]
   26a8c:	ldr	r1, [r0, #40]	; 0x28
   26a90:	ldr	r2, [r0, #88]	; 0x58
   26a94:	sub	r1, r1, #1
   26a98:	bl	25b94 <__assert_fail@plt+0x14690>
   26a9c:	str	r0, [sp, #24]
   26aa0:	ldr	r0, [fp, #-8]
   26aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   26aa8:	ldr	r3, [sp, #24]
   26aac:	add	r2, sp, #12
   26ab0:	bl	23344 <__assert_fail@plt+0x11e40>
   26ab4:	ldr	r1, [fp, #-12]
   26ab8:	ldr	r1, [r1, #100]	; 0x64
   26abc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26ac0:	add	r1, r1, r2, lsl #2
   26ac4:	str	r0, [r1]
   26ac8:	str	r0, [fp, #-16]
   26acc:	ldr	r0, [sp, #4]
   26ad0:	movw	r1, #0
   26ad4:	cmp	r0, r1
   26ad8:	beq	26ae4 <__assert_fail@plt+0x155e0>
   26adc:	ldr	r0, [sp, #20]
   26ae0:	bl	35268 <__assert_fail@plt+0x23d64>
   26ae4:	b	26ae8 <__assert_fail@plt+0x155e4>
   26ae8:	b	26aec <__assert_fail@plt+0x155e8>
   26aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   26af0:	ldr	r0, [r0, #76]	; 0x4c
   26af4:	cmp	r0, #0
   26af8:	beq	26bac <__assert_fail@plt+0x156a8>
   26afc:	ldr	r0, [fp, #-16]
   26b00:	movw	r1, #0
   26b04:	cmp	r0, r1
   26b08:	beq	26bac <__assert_fail@plt+0x156a8>
   26b0c:	ldr	r0, [fp, #-12]
   26b10:	ldr	r1, [fp, #-16]
   26b14:	add	r1, r1, #4
   26b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26b1c:	bl	25f50 <__assert_fail@plt+0x14a4c>
   26b20:	ldr	r1, [fp, #-8]
   26b24:	str	r0, [r1]
   26b28:	ldr	r0, [fp, #-8]
   26b2c:	ldr	r0, [r0]
   26b30:	cmp	r0, #0
   26b34:	beq	26b44 <__assert_fail@plt+0x15640>
   26b38:	movw	r0, #0
   26b3c:	str	r0, [fp, #-4]
   26b40:	b	26bb4 <__assert_fail@plt+0x156b0>
   26b44:	ldr	r0, [fp, #-16]
   26b48:	ldrb	r0, [r0, #52]	; 0x34
   26b4c:	ubfx	r0, r0, #6, #1
   26b50:	and	r0, r0, #255	; 0xff
   26b54:	cmp	r0, #0
   26b58:	beq	26ba8 <__assert_fail@plt+0x156a4>
   26b5c:	ldr	r0, [fp, #-12]
   26b60:	ldr	r1, [fp, #-16]
   26b64:	add	r1, r1, #4
   26b68:	bl	26064 <__assert_fail@plt+0x14b60>
   26b6c:	ldr	r1, [fp, #-8]
   26b70:	str	r0, [r1]
   26b74:	ldr	r0, [fp, #-8]
   26b78:	ldr	r0, [r0]
   26b7c:	cmp	r0, #0
   26b80:	beq	26b90 <__assert_fail@plt+0x1568c>
   26b84:	movw	r0, #0
   26b88:	str	r0, [fp, #-4]
   26b8c:	b	26bb4 <__assert_fail@plt+0x156b0>
   26b90:	ldr	r0, [fp, #-12]
   26b94:	ldr	r0, [r0, #100]	; 0x64
   26b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26b9c:	add	r0, r0, r1, lsl #2
   26ba0:	ldr	r0, [r0]
   26ba4:	str	r0, [fp, #-16]
   26ba8:	b	26bac <__assert_fail@plt+0x156a8>
   26bac:	ldr	r0, [fp, #-16]
   26bb0:	str	r0, [fp, #-4]
   26bb4:	ldr	r0, [fp, #-4]
   26bb8:	mov	sp, fp
   26bbc:	pop	{fp, pc}
   26bc0:	push	{fp, lr}
   26bc4:	mov	fp, sp
   26bc8:	sub	sp, sp, #32
   26bcc:	str	r0, [fp, #-8]
   26bd0:	str	r1, [fp, #-12]
   26bd4:	ldr	r0, [fp, #-12]
   26bd8:	ldr	r0, [r0, #104]	; 0x68
   26bdc:	str	r0, [sp, #12]
   26be0:	ldr	r0, [fp, #-12]
   26be4:	ldr	r0, [r0, #40]	; 0x28
   26be8:	str	r0, [sp, #8]
   26bec:	ldr	r0, [sp, #8]
   26bf0:	add	r0, r0, #1
   26bf4:	str	r0, [sp, #8]
   26bf8:	ldr	r1, [sp, #12]
   26bfc:	cmp	r0, r1
   26c00:	ble	26c10 <__assert_fail@plt+0x1570c>
   26c04:	movw	r0, #0
   26c08:	str	r0, [fp, #-4]
   26c0c:	b	26c98 <__assert_fail@plt+0x15794>
   26c10:	ldr	r0, [fp, #-12]
   26c14:	ldr	r1, [r0, #40]	; 0x28
   26c18:	add	r1, r1, #1
   26c1c:	str	r1, [r0, #40]	; 0x28
   26c20:	ldr	r0, [fp, #-12]
   26c24:	ldr	r0, [r0, #100]	; 0x64
   26c28:	ldr	r1, [sp, #8]
   26c2c:	add	r0, r0, r1, lsl #2
   26c30:	ldr	r0, [r0]
   26c34:	movw	r1, #0
   26c38:	cmp	r0, r1
   26c3c:	beq	26bec <__assert_fail@plt+0x156e8>
   26c40:	ldr	r0, [fp, #-8]
   26c44:	ldr	r1, [fp, #-12]
   26c48:	movw	r2, #0
   26c4c:	bl	26944 <__assert_fail@plt+0x15440>
   26c50:	str	r0, [sp, #16]
   26c54:	ldr	r0, [fp, #-8]
   26c58:	ldr	r0, [r0]
   26c5c:	cmp	r0, #0
   26c60:	movw	r0, #0
   26c64:	str	r0, [sp, #4]
   26c68:	bne	26c84 <__assert_fail@plt+0x15780>
   26c6c:	ldr	r0, [sp, #16]
   26c70:	movw	r1, #0
   26c74:	cmp	r0, r1
   26c78:	movw	r0, #0
   26c7c:	moveq	r0, #1
   26c80:	str	r0, [sp, #4]
   26c84:	ldr	r0, [sp, #4]
   26c88:	tst	r0, #1
   26c8c:	bne	26bd4 <__assert_fail@plt+0x156d0>
   26c90:	ldr	r0, [sp, #16]
   26c94:	str	r0, [fp, #-4]
   26c98:	ldr	r0, [fp, #-4]
   26c9c:	mov	sp, fp
   26ca0:	pop	{fp, pc}
   26ca4:	push	{fp, lr}
   26ca8:	mov	fp, sp
   26cac:	sub	sp, sp, #24
   26cb0:	str	r0, [fp, #-8]
   26cb4:	str	r1, [sp, #12]
   26cb8:	str	r2, [sp, #8]
   26cbc:	ldr	r0, [fp, #-8]
   26cc0:	ldr	r0, [r0, #132]	; 0x84
   26cc4:	movw	r1, #0
   26cc8:	cmp	r0, r1
   26ccc:	beq	26cd4 <__assert_fail@plt+0x157d0>
   26cd0:	b	26cd4 <__assert_fail@plt+0x157d0>
   26cd4:	ldr	r0, [fp, #-8]
   26cd8:	ldr	r0, [r0, #128]	; 0x80
   26cdc:	cmp	r0, #0
   26ce0:	ble	26ce8 <__assert_fail@plt+0x157e4>
   26ce4:	b	26ce8 <__assert_fail@plt+0x157e4>
   26ce8:	ldr	r0, [fp, #-8]
   26cec:	ldr	r0, [r0, #124]	; 0x7c
   26cf0:	ldr	r1, [fp, #-8]
   26cf4:	ldr	r1, [r1, #128]	; 0x80
   26cf8:	cmp	r0, r1
   26cfc:	bne	26d5c <__assert_fail@plt+0x15858>
   26d00:	ldr	r0, [fp, #-8]
   26d04:	ldr	r0, [r0, #128]	; 0x80
   26d08:	lsl	r0, r0, #1
   26d0c:	str	r0, [sp, #4]
   26d10:	ldr	r0, [fp, #-8]
   26d14:	ldr	r0, [r0, #132]	; 0x84
   26d18:	ldr	r1, [sp, #4]
   26d1c:	lsl	r1, r1, #2
   26d20:	bl	33bb4 <__assert_fail@plt+0x226b0>
   26d24:	str	r0, [sp]
   26d28:	ldr	r0, [sp]
   26d2c:	movw	r1, #0
   26d30:	cmp	r0, r1
   26d34:	bne	26d44 <__assert_fail@plt+0x15840>
   26d38:	movw	r0, #12
   26d3c:	str	r0, [fp, #-4]
   26d40:	b	26de8 <__assert_fail@plt+0x158e4>
   26d44:	ldr	r0, [sp]
   26d48:	ldr	r1, [fp, #-8]
   26d4c:	str	r0, [r1, #132]	; 0x84
   26d50:	ldr	r0, [sp, #4]
   26d54:	ldr	r1, [fp, #-8]
   26d58:	str	r0, [r1, #128]	; 0x80
   26d5c:	mov	r0, #1
   26d60:	mov	r1, #24
   26d64:	bl	33aa8 <__assert_fail@plt+0x225a4>
   26d68:	ldr	r1, [fp, #-8]
   26d6c:	ldr	lr, [r1, #124]	; 0x7c
   26d70:	ldr	r1, [r1, #132]	; 0x84
   26d74:	str	r0, [r1, lr, lsl #2]
   26d78:	ldr	r0, [fp, #-8]
   26d7c:	ldr	r1, [r0, #124]	; 0x7c
   26d80:	ldr	r0, [r0, #132]	; 0x84
   26d84:	add	r0, r0, r1, lsl #2
   26d88:	ldr	r0, [r0]
   26d8c:	movw	r1, #0
   26d90:	cmp	r0, r1
   26d94:	bne	26da4 <__assert_fail@plt+0x158a0>
   26d98:	movw	r0, #12
   26d9c:	str	r0, [fp, #-4]
   26da0:	b	26de8 <__assert_fail@plt+0x158e4>
   26da4:	ldr	r0, [sp, #12]
   26da8:	ldr	r1, [fp, #-8]
   26dac:	ldr	r2, [r1, #124]	; 0x7c
   26db0:	ldr	r1, [r1, #132]	; 0x84
   26db4:	ldr	r1, [r1, r2, lsl #2]
   26db8:	str	r0, [r1, #4]
   26dbc:	ldr	r0, [sp, #8]
   26dc0:	ldr	r1, [fp, #-8]
   26dc4:	ldr	r2, [r1, #124]	; 0x7c
   26dc8:	ldr	r3, [r1, #132]	; 0x84
   26dcc:	add	ip, r2, #1
   26dd0:	str	ip, [r1, #124]	; 0x7c
   26dd4:	add	r1, r3, r2, lsl #2
   26dd8:	ldr	r1, [r1]
   26ddc:	str	r0, [r1]
   26de0:	movw	r0, #0
   26de4:	str	r0, [fp, #-4]
   26de8:	ldr	r0, [fp, #-4]
   26dec:	mov	sp, fp
   26df0:	pop	{fp, pc}
   26df4:	push	{fp, lr}
   26df8:	mov	fp, sp
   26dfc:	sub	sp, sp, #96	; 0x60
   26e00:	str	r0, [fp, #-8]
   26e04:	str	r1, [fp, #-12]
   26e08:	str	r2, [fp, #-16]
   26e0c:	ldr	r0, [fp, #-8]
   26e10:	ldr	r0, [r0, #84]	; 0x54
   26e14:	str	r0, [fp, #-20]	; 0xffffffec
   26e18:	ldr	r0, [fp, #-8]
   26e1c:	ldr	r0, [r0, #4]
   26e20:	str	r0, [fp, #-32]	; 0xffffffe0
   26e24:	ldr	r0, [fp, #-8]
   26e28:	ldr	r1, [fp, #-16]
   26e2c:	bl	276dc <__assert_fail@plt+0x161d8>
   26e30:	str	r0, [fp, #-36]	; 0xffffffdc
   26e34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26e38:	cmn	r0, #1
   26e3c:	beq	26e9c <__assert_fail@plt+0x15998>
   26e40:	ldr	r0, [fp, #-8]
   26e44:	ldr	r0, [r0, #116]	; 0x74
   26e48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26e4c:	movw	r2, #24
   26e50:	mul	r1, r1, r2
   26e54:	add	r0, r0, r1
   26e58:	str	r0, [fp, #-40]	; 0xffffffd8
   26e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26e60:	ldr	r0, [r0]
   26e64:	ldr	r1, [fp, #-12]
   26e68:	cmp	r0, r1
   26e6c:	bne	26e7c <__assert_fail@plt+0x15978>
   26e70:	movw	r0, #0
   26e74:	str	r0, [fp, #-4]
   26e78:	b	27384 <__assert_fail@plt+0x15e80>
   26e7c:	b	26e80 <__assert_fail@plt+0x1597c>
   26e80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26e84:	add	r1, r0, #24
   26e88:	str	r1, [fp, #-40]	; 0xffffffd8
   26e8c:	ldrsb	r0, [r0, #20]
   26e90:	cmp	r0, #0
   26e94:	bne	26e5c <__assert_fail@plt+0x15958>
   26e98:	b	26e9c <__assert_fail@plt+0x15998>
   26e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26ea0:	ldr	r0, [r0]
   26ea4:	ldr	r1, [fp, #-12]
   26ea8:	add	r0, r0, r1, lsl #3
   26eac:	ldr	r0, [r0]
   26eb0:	str	r0, [fp, #-24]	; 0xffffffe8
   26eb4:	movw	r0, #0
   26eb8:	str	r0, [fp, #-28]	; 0xffffffe4
   26ebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26ec0:	ldr	r1, [fp, #-8]
   26ec4:	ldr	r1, [r1, #124]	; 0x7c
   26ec8:	cmp	r0, r1
   26ecc:	bge	2737c <__assert_fail@plt+0x15e78>
   26ed0:	ldr	r0, [fp, #-8]
   26ed4:	ldr	r0, [r0, #132]	; 0x84
   26ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26edc:	ldr	r0, [r0, r1, lsl #2]
   26ee0:	str	r0, [sp, #48]	; 0x30
   26ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   26ee8:	ldr	r0, [r0]
   26eec:	ldr	r1, [sp, #48]	; 0x30
   26ef0:	ldr	r1, [r1, #4]
   26ef4:	add	r0, r0, r1, lsl #3
   26ef8:	ldr	r0, [r0]
   26efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26f00:	cmp	r0, r1
   26f04:	beq	26f0c <__assert_fail@plt+0x15a08>
   26f08:	b	2736c <__assert_fail@plt+0x15e68>
   26f0c:	ldr	r0, [sp, #48]	; 0x30
   26f10:	ldr	r0, [r0]
   26f14:	str	r0, [sp, #36]	; 0x24
   26f18:	ldr	r0, [fp, #-16]
   26f1c:	str	r0, [sp, #32]
   26f20:	movw	r0, #0
   26f24:	str	r0, [sp, #40]	; 0x28
   26f28:	ldr	r0, [sp, #40]	; 0x28
   26f2c:	ldr	r1, [sp, #48]	; 0x30
   26f30:	ldr	r1, [r1, #16]
   26f34:	cmp	r0, r1
   26f38:	bge	270a4 <__assert_fail@plt+0x15ba0>
   26f3c:	ldr	r0, [sp, #48]	; 0x30
   26f40:	ldr	r0, [r0, #20]
   26f44:	ldr	r1, [sp, #40]	; 0x28
   26f48:	add	r0, r0, r1, lsl #2
   26f4c:	ldr	r0, [r0]
   26f50:	str	r0, [sp, #44]	; 0x2c
   26f54:	ldr	r0, [sp, #44]	; 0x2c
   26f58:	ldr	r0, [r0, #4]
   26f5c:	ldr	r1, [sp, #36]	; 0x24
   26f60:	sub	r0, r0, r1
   26f64:	str	r0, [sp, #28]
   26f68:	ldr	r0, [sp, #28]
   26f6c:	cmp	r0, #0
   26f70:	ble	2701c <__assert_fail@plt+0x15b18>
   26f74:	ldr	r0, [sp, #32]
   26f78:	ldr	r1, [sp, #28]
   26f7c:	add	r0, r0, r1
   26f80:	ldr	r1, [fp, #-8]
   26f84:	ldr	r1, [r1, #28]
   26f88:	cmp	r0, r1
   26f8c:	ble	26fec <__assert_fail@plt+0x15ae8>
   26f90:	ldr	r0, [sp, #32]
   26f94:	ldr	r1, [sp, #28]
   26f98:	add	r0, r0, r1
   26f9c:	ldr	r1, [fp, #-8]
   26fa0:	ldr	r1, [r1, #48]	; 0x30
   26fa4:	cmp	r0, r1
   26fa8:	ble	26fb0 <__assert_fail@plt+0x15aac>
   26fac:	b	270a4 <__assert_fail@plt+0x15ba0>
   26fb0:	ldr	r0, [fp, #-8]
   26fb4:	ldr	r1, [sp, #32]
   26fb8:	ldr	r2, [sp, #28]
   26fbc:	add	r1, r1, r2
   26fc0:	bl	277c4 <__assert_fail@plt+0x162c0>
   26fc4:	str	r0, [fp, #-44]	; 0xffffffd4
   26fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26fcc:	cmp	r0, #0
   26fd0:	beq	26fe0 <__assert_fail@plt+0x15adc>
   26fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26fd8:	str	r0, [fp, #-4]
   26fdc:	b	27384 <__assert_fail@plt+0x15e80>
   26fe0:	ldr	r0, [fp, #-8]
   26fe4:	ldr	r0, [r0, #4]
   26fe8:	str	r0, [fp, #-32]	; 0xffffffe0
   26fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26ff0:	ldr	r1, [sp, #32]
   26ff4:	add	r0, r0, r1
   26ff8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26ffc:	ldr	r2, [sp, #36]	; 0x24
   27000:	add	r1, r1, r2
   27004:	ldr	r2, [sp, #28]
   27008:	bl	112e8 <memcmp@plt>
   2700c:	cmp	r0, #0
   27010:	beq	27018 <__assert_fail@plt+0x15b14>
   27014:	b	270a4 <__assert_fail@plt+0x15ba0>
   27018:	b	2701c <__assert_fail@plt+0x15b18>
   2701c:	ldr	r0, [sp, #28]
   27020:	ldr	r1, [sp, #32]
   27024:	add	r0, r1, r0
   27028:	str	r0, [sp, #32]
   2702c:	ldr	r0, [sp, #28]
   27030:	ldr	r1, [sp, #36]	; 0x24
   27034:	add	r0, r1, r0
   27038:	str	r0, [sp, #36]	; 0x24
   2703c:	ldr	r0, [fp, #-8]
   27040:	ldr	r1, [sp, #48]	; 0x30
   27044:	ldr	r2, [sp, #44]	; 0x2c
   27048:	ldr	r3, [fp, #-12]
   2704c:	ldr	ip, [fp, #-16]
   27050:	str	ip, [sp]
   27054:	bl	278e0 <__assert_fail@plt+0x163dc>
   27058:	str	r0, [fp, #-44]	; 0xffffffd4
   2705c:	ldr	r0, [fp, #-8]
   27060:	ldr	r0, [r0, #4]
   27064:	str	r0, [fp, #-32]	; 0xffffffe0
   27068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2706c:	cmp	r0, #1
   27070:	bne	27078 <__assert_fail@plt+0x15b74>
   27074:	b	27094 <__assert_fail@plt+0x15b90>
   27078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2707c:	cmp	r0, #0
   27080:	beq	27090 <__assert_fail@plt+0x15b8c>
   27084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27088:	str	r0, [fp, #-4]
   2708c:	b	27384 <__assert_fail@plt+0x15e80>
   27090:	b	27094 <__assert_fail@plt+0x15b90>
   27094:	ldr	r0, [sp, #40]	; 0x28
   27098:	add	r0, r0, #1
   2709c:	str	r0, [sp, #40]	; 0x28
   270a0:	b	26f28 <__assert_fail@plt+0x15a24>
   270a4:	ldr	r0, [sp, #40]	; 0x28
   270a8:	ldr	r1, [sp, #48]	; 0x30
   270ac:	ldr	r1, [r1, #16]
   270b0:	cmp	r0, r1
   270b4:	bge	270bc <__assert_fail@plt+0x15bb8>
   270b8:	b	2736c <__assert_fail@plt+0x15e68>
   270bc:	ldr	r0, [sp, #40]	; 0x28
   270c0:	cmp	r0, #0
   270c4:	ble	270d4 <__assert_fail@plt+0x15bd0>
   270c8:	ldr	r0, [sp, #36]	; 0x24
   270cc:	add	r0, r0, #1
   270d0:	str	r0, [sp, #36]	; 0x24
   270d4:	b	270d8 <__assert_fail@plt+0x15bd4>
   270d8:	ldr	r0, [sp, #36]	; 0x24
   270dc:	ldr	r1, [fp, #-16]
   270e0:	cmp	r0, r1
   270e4:	bgt	27368 <__assert_fail@plt+0x15e64>
   270e8:	ldr	r0, [sp, #36]	; 0x24
   270ec:	ldr	r1, [sp, #48]	; 0x30
   270f0:	ldr	r1, [r1]
   270f4:	sub	r0, r0, r1
   270f8:	str	r0, [sp, #20]
   270fc:	ldr	r0, [sp, #20]
   27100:	cmp	r0, #0
   27104:	ble	271a8 <__assert_fail@plt+0x15ca4>
   27108:	ldr	r0, [sp, #32]
   2710c:	ldr	r1, [fp, #-8]
   27110:	ldr	r1, [r1, #28]
   27114:	cmp	r0, r1
   27118:	blt	2716c <__assert_fail@plt+0x15c68>
   2711c:	ldr	r0, [sp, #32]
   27120:	ldr	r1, [fp, #-8]
   27124:	ldr	r1, [r1, #48]	; 0x30
   27128:	cmp	r0, r1
   2712c:	blt	27134 <__assert_fail@plt+0x15c30>
   27130:	b	27368 <__assert_fail@plt+0x15e64>
   27134:	ldr	r0, [fp, #-8]
   27138:	ldr	r1, [sp, #32]
   2713c:	add	r1, r1, #1
   27140:	bl	265a0 <__assert_fail@plt+0x1509c>
   27144:	str	r0, [fp, #-44]	; 0xffffffd4
   27148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2714c:	cmp	r0, #0
   27150:	beq	27160 <__assert_fail@plt+0x15c5c>
   27154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27158:	str	r0, [fp, #-4]
   2715c:	b	27384 <__assert_fail@plt+0x15e80>
   27160:	ldr	r0, [fp, #-8]
   27164:	ldr	r0, [r0, #4]
   27168:	str	r0, [fp, #-32]	; 0xffffffe0
   2716c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27170:	ldr	r1, [sp, #32]
   27174:	add	r2, r1, #1
   27178:	str	r2, [sp, #32]
   2717c:	add	r0, r0, r1
   27180:	ldrb	r0, [r0]
   27184:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27188:	ldr	r2, [sp, #36]	; 0x24
   2718c:	sub	r2, r2, #1
   27190:	add	r1, r1, r2
   27194:	ldrb	r1, [r1]
   27198:	cmp	r0, r1
   2719c:	beq	271a4 <__assert_fail@plt+0x15ca0>
   271a0:	b	27368 <__assert_fail@plt+0x15e64>
   271a4:	b	271a8 <__assert_fail@plt+0x15ca4>
   271a8:	ldr	r0, [fp, #-8]
   271ac:	ldr	r0, [r0, #100]	; 0x64
   271b0:	ldr	r1, [sp, #36]	; 0x24
   271b4:	add	r0, r0, r1, lsl #2
   271b8:	ldr	r0, [r0]
   271bc:	movw	r1, #0
   271c0:	cmp	r0, r1
   271c4:	bne	271cc <__assert_fail@plt+0x15cc8>
   271c8:	b	27358 <__assert_fail@plt+0x15e54>
   271cc:	ldr	r0, [fp, #-8]
   271d0:	ldr	r0, [r0, #100]	; 0x64
   271d4:	ldr	r1, [sp, #36]	; 0x24
   271d8:	add	r0, r0, r1, lsl #2
   271dc:	ldr	r0, [r0]
   271e0:	add	r0, r0, #4
   271e4:	str	r0, [sp, #16]
   271e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   271ec:	ldr	r1, [sp, #16]
   271f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   271f4:	movw	r3, #9
   271f8:	bl	279d4 <__assert_fail@plt+0x164d0>
   271fc:	str	r0, [sp, #24]
   27200:	ldr	r0, [sp, #24]
   27204:	cmn	r0, #1
   27208:	bne	27210 <__assert_fail@plt+0x15d0c>
   2720c:	b	27358 <__assert_fail@plt+0x15e54>
   27210:	ldr	r0, [sp, #48]	; 0x30
   27214:	ldr	r0, [r0, #8]
   27218:	movw	r1, #0
   2721c:	cmp	r0, r1
   27220:	bne	2726c <__assert_fail@plt+0x15d68>
   27224:	ldr	r0, [sp, #36]	; 0x24
   27228:	ldr	r1, [sp, #48]	; 0x30
   2722c:	ldr	r1, [r1]
   27230:	sub	r0, r0, r1
   27234:	add	r1, r0, #1
   27238:	movw	r0, #12
   2723c:	bl	33aa8 <__assert_fail@plt+0x225a4>
   27240:	ldr	r1, [sp, #48]	; 0x30
   27244:	str	r0, [r1, #8]
   27248:	ldr	r0, [sp, #48]	; 0x30
   2724c:	ldr	r0, [r0, #8]
   27250:	movw	r1, #0
   27254:	cmp	r0, r1
   27258:	bne	27268 <__assert_fail@plt+0x15d64>
   2725c:	movw	r0, #12
   27260:	str	r0, [fp, #-4]
   27264:	b	27384 <__assert_fail@plt+0x15e80>
   27268:	b	2726c <__assert_fail@plt+0x15d68>
   2726c:	ldr	r0, [fp, #-8]
   27270:	ldr	r1, [sp, #48]	; 0x30
   27274:	ldr	r1, [r1, #8]
   27278:	ldr	r2, [sp, #48]	; 0x30
   2727c:	ldr	r2, [r2, #4]
   27280:	ldr	r3, [sp, #48]	; 0x30
   27284:	ldr	r3, [r3]
   27288:	ldr	ip, [sp, #24]
   2728c:	ldr	lr, [sp, #36]	; 0x24
   27290:	str	ip, [sp]
   27294:	str	lr, [sp, #4]
   27298:	movw	ip, #9
   2729c:	str	ip, [sp, #8]
   272a0:	bl	27a8c <__assert_fail@plt+0x16588>
   272a4:	str	r0, [fp, #-44]	; 0xffffffd4
   272a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   272ac:	cmp	r0, #1
   272b0:	bne	272b8 <__assert_fail@plt+0x15db4>
   272b4:	b	27358 <__assert_fail@plt+0x15e54>
   272b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   272bc:	cmp	r0, #0
   272c0:	beq	272d0 <__assert_fail@plt+0x15dcc>
   272c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   272c8:	str	r0, [fp, #-4]
   272cc:	b	27384 <__assert_fail@plt+0x15e80>
   272d0:	ldr	r0, [sp, #48]	; 0x30
   272d4:	ldr	r1, [sp, #24]
   272d8:	ldr	r2, [sp, #36]	; 0x24
   272dc:	bl	281d0 <__assert_fail@plt+0x16ccc>
   272e0:	str	r0, [sp, #44]	; 0x2c
   272e4:	ldr	r0, [sp, #44]	; 0x2c
   272e8:	movw	r1, #0
   272ec:	cmp	r0, r1
   272f0:	bne	27300 <__assert_fail@plt+0x15dfc>
   272f4:	movw	r0, #12
   272f8:	str	r0, [fp, #-4]
   272fc:	b	27384 <__assert_fail@plt+0x15e80>
   27300:	ldr	r0, [fp, #-8]
   27304:	ldr	r1, [sp, #48]	; 0x30
   27308:	ldr	r2, [sp, #44]	; 0x2c
   2730c:	ldr	r3, [fp, #-12]
   27310:	ldr	ip, [fp, #-16]
   27314:	str	ip, [sp]
   27318:	bl	278e0 <__assert_fail@plt+0x163dc>
   2731c:	str	r0, [fp, #-44]	; 0xffffffd4
   27320:	ldr	r0, [fp, #-8]
   27324:	ldr	r0, [r0, #4]
   27328:	str	r0, [fp, #-32]	; 0xffffffe0
   2732c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27330:	cmp	r0, #1
   27334:	bne	2733c <__assert_fail@plt+0x15e38>
   27338:	b	27358 <__assert_fail@plt+0x15e54>
   2733c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27340:	cmp	r0, #0
   27344:	beq	27354 <__assert_fail@plt+0x15e50>
   27348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2734c:	str	r0, [fp, #-4]
   27350:	b	27384 <__assert_fail@plt+0x15e80>
   27354:	b	27358 <__assert_fail@plt+0x15e54>
   27358:	ldr	r0, [sp, #36]	; 0x24
   2735c:	add	r0, r0, #1
   27360:	str	r0, [sp, #36]	; 0x24
   27364:	b	270d8 <__assert_fail@plt+0x15bd4>
   27368:	b	2736c <__assert_fail@plt+0x15e68>
   2736c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27370:	add	r0, r0, #1
   27374:	str	r0, [fp, #-28]	; 0xffffffe4
   27378:	b	26ebc <__assert_fail@plt+0x159b8>
   2737c:	movw	r0, #0
   27380:	str	r0, [fp, #-4]
   27384:	ldr	r0, [fp, #-4]
   27388:	mov	sp, fp
   2738c:	pop	{fp, pc}
   27390:	push	{fp, lr}
   27394:	mov	fp, sp
   27398:	sub	sp, sp, #32
   2739c:	str	r0, [fp, #-8]
   273a0:	str	r1, [fp, #-12]
   273a4:	str	r2, [sp, #16]
   273a8:	ldr	r0, [fp, #-12]
   273ac:	movw	r1, #0
   273b0:	cmp	r0, r1
   273b4:	beq	27440 <__assert_fail@plt+0x15f3c>
   273b8:	ldr	r0, [fp, #-12]
   273bc:	ldr	r0, [r0, #4]
   273c0:	cmp	r0, #0
   273c4:	ble	27440 <__assert_fail@plt+0x15f3c>
   273c8:	ldr	r0, [sp, #16]
   273cc:	movw	r1, #0
   273d0:	cmp	r0, r1
   273d4:	beq	27440 <__assert_fail@plt+0x15f3c>
   273d8:	ldr	r0, [sp, #16]
   273dc:	ldr	r0, [r0, #4]
   273e0:	cmp	r0, #0
   273e4:	ble	27440 <__assert_fail@plt+0x15f3c>
   273e8:	ldr	r0, [fp, #-12]
   273ec:	ldr	r0, [r0, #4]
   273f0:	ldr	r1, [sp, #16]
   273f4:	ldr	r1, [r1, #4]
   273f8:	add	r0, r0, r1
   273fc:	ldr	r1, [fp, #-8]
   27400:	str	r0, [r1]
   27404:	ldr	r0, [fp, #-8]
   27408:	ldr	r0, [r0]
   2740c:	lsl	r0, r0, #2
   27410:	bl	33b44 <__assert_fail@plt+0x22640>
   27414:	ldr	r1, [fp, #-8]
   27418:	str	r0, [r1, #8]
   2741c:	ldr	r0, [fp, #-8]
   27420:	ldr	r0, [r0, #8]
   27424:	movw	r1, #0
   27428:	cmp	r0, r1
   2742c:	bne	2743c <__assert_fail@plt+0x15f38>
   27430:	movw	r0, #12
   27434:	str	r0, [fp, #-4]
   27438:	b	276d0 <__assert_fail@plt+0x161cc>
   2743c:	b	274cc <__assert_fail@plt+0x15fc8>
   27440:	ldr	r0, [fp, #-12]
   27444:	movw	r1, #0
   27448:	cmp	r0, r1
   2744c:	beq	27474 <__assert_fail@plt+0x15f70>
   27450:	ldr	r0, [fp, #-12]
   27454:	ldr	r0, [r0, #4]
   27458:	cmp	r0, #0
   2745c:	ble	27474 <__assert_fail@plt+0x15f70>
   27460:	ldr	r0, [fp, #-8]
   27464:	ldr	r1, [fp, #-12]
   27468:	bl	23180 <__assert_fail@plt+0x11c7c>
   2746c:	str	r0, [fp, #-4]
   27470:	b	276d0 <__assert_fail@plt+0x161cc>
   27474:	ldr	r0, [sp, #16]
   27478:	movw	r1, #0
   2747c:	cmp	r0, r1
   27480:	beq	274a8 <__assert_fail@plt+0x15fa4>
   27484:	ldr	r0, [sp, #16]
   27488:	ldr	r0, [r0, #4]
   2748c:	cmp	r0, #0
   27490:	ble	274a8 <__assert_fail@plt+0x15fa4>
   27494:	ldr	r0, [fp, #-8]
   27498:	ldr	r1, [sp, #16]
   2749c:	bl	23180 <__assert_fail@plt+0x11c7c>
   274a0:	str	r0, [fp, #-4]
   274a4:	b	276d0 <__assert_fail@plt+0x161cc>
   274a8:	ldr	r0, [fp, #-8]
   274ac:	movw	r1, #0
   274b0:	and	r1, r1, #255	; 0xff
   274b4:	movw	r2, #12
   274b8:	bl	11420 <memset@plt>
   274bc:	b	274c0 <__assert_fail@plt+0x15fbc>
   274c0:	movw	r0, #0
   274c4:	str	r0, [fp, #-4]
   274c8:	b	276d0 <__assert_fail@plt+0x161cc>
   274cc:	movw	r0, #0
   274d0:	str	r0, [sp, #4]
   274d4:	str	r0, [sp, #8]
   274d8:	str	r0, [sp, #12]
   274dc:	ldr	r0, [sp, #12]
   274e0:	ldr	r1, [fp, #-12]
   274e4:	ldr	r1, [r1, #4]
   274e8:	cmp	r0, r1
   274ec:	movw	r0, #0
   274f0:	str	r0, [sp]
   274f4:	bge	27514 <__assert_fail@plt+0x16010>
   274f8:	ldr	r0, [sp, #8]
   274fc:	ldr	r1, [sp, #16]
   27500:	ldr	r1, [r1, #4]
   27504:	cmp	r0, r1
   27508:	movw	r0, #0
   2750c:	movlt	r0, #1
   27510:	str	r0, [sp]
   27514:	ldr	r0, [sp]
   27518:	tst	r0, #1
   2751c:	beq	275f4 <__assert_fail@plt+0x160f0>
   27520:	ldr	r0, [fp, #-12]
   27524:	ldr	r0, [r0, #8]
   27528:	ldr	r1, [sp, #12]
   2752c:	ldr	r0, [r0, r1, lsl #2]
   27530:	ldr	r1, [sp, #16]
   27534:	ldr	r1, [r1, #8]
   27538:	ldr	r2, [sp, #8]
   2753c:	add	r1, r1, r2, lsl #2
   27540:	ldr	r1, [r1]
   27544:	cmp	r0, r1
   27548:	ble	27584 <__assert_fail@plt+0x16080>
   2754c:	ldr	r0, [sp, #16]
   27550:	ldr	r0, [r0, #8]
   27554:	ldr	r1, [sp, #8]
   27558:	add	r2, r1, #1
   2755c:	str	r2, [sp, #8]
   27560:	ldr	r0, [r0, r1, lsl #2]
   27564:	ldr	r1, [fp, #-8]
   27568:	ldr	r1, [r1, #8]
   2756c:	ldr	r2, [sp, #4]
   27570:	add	r3, r2, #1
   27574:	str	r3, [sp, #4]
   27578:	add	r1, r1, r2, lsl #2
   2757c:	str	r0, [r1]
   27580:	b	274dc <__assert_fail@plt+0x15fd8>
   27584:	ldr	r0, [fp, #-12]
   27588:	ldr	r0, [r0, #8]
   2758c:	ldr	r1, [sp, #12]
   27590:	ldr	r0, [r0, r1, lsl #2]
   27594:	ldr	r1, [sp, #16]
   27598:	ldr	r1, [r1, #8]
   2759c:	ldr	r2, [sp, #8]
   275a0:	add	r1, r1, r2, lsl #2
   275a4:	ldr	r1, [r1]
   275a8:	cmp	r0, r1
   275ac:	bne	275bc <__assert_fail@plt+0x160b8>
   275b0:	ldr	r0, [sp, #8]
   275b4:	add	r0, r0, #1
   275b8:	str	r0, [sp, #8]
   275bc:	ldr	r0, [fp, #-12]
   275c0:	ldr	r0, [r0, #8]
   275c4:	ldr	r1, [sp, #12]
   275c8:	add	r2, r1, #1
   275cc:	str	r2, [sp, #12]
   275d0:	ldr	r0, [r0, r1, lsl #2]
   275d4:	ldr	r1, [fp, #-8]
   275d8:	ldr	r1, [r1, #8]
   275dc:	ldr	r2, [sp, #4]
   275e0:	add	r3, r2, #1
   275e4:	str	r3, [sp, #4]
   275e8:	add	r1, r1, r2, lsl #2
   275ec:	str	r0, [r1]
   275f0:	b	274dc <__assert_fail@plt+0x15fd8>
   275f4:	ldr	r0, [sp, #12]
   275f8:	ldr	r1, [fp, #-12]
   275fc:	ldr	r1, [r1, #4]
   27600:	cmp	r0, r1
   27604:	bge	27658 <__assert_fail@plt+0x16154>
   27608:	ldr	r0, [fp, #-8]
   2760c:	ldr	r0, [r0, #8]
   27610:	ldr	r1, [sp, #4]
   27614:	add	r0, r0, r1, lsl #2
   27618:	ldr	r1, [fp, #-12]
   2761c:	ldr	r2, [r1, #4]
   27620:	ldr	r1, [r1, #8]
   27624:	ldr	r3, [sp, #12]
   27628:	add	r1, r1, r3, lsl #2
   2762c:	sub	r2, r2, r3
   27630:	lsl	r2, r2, #2
   27634:	bl	112a0 <memcpy@plt>
   27638:	ldr	r0, [fp, #-12]
   2763c:	ldr	r0, [r0, #4]
   27640:	ldr	r1, [sp, #12]
   27644:	sub	r0, r0, r1
   27648:	ldr	r1, [sp, #4]
   2764c:	add	r0, r1, r0
   27650:	str	r0, [sp, #4]
   27654:	b	276bc <__assert_fail@plt+0x161b8>
   27658:	ldr	r0, [sp, #8]
   2765c:	ldr	r1, [sp, #16]
   27660:	ldr	r1, [r1, #4]
   27664:	cmp	r0, r1
   27668:	bge	276b8 <__assert_fail@plt+0x161b4>
   2766c:	ldr	r0, [fp, #-8]
   27670:	ldr	r0, [r0, #8]
   27674:	ldr	r1, [sp, #4]
   27678:	add	r0, r0, r1, lsl #2
   2767c:	ldr	r1, [sp, #16]
   27680:	ldr	r2, [r1, #4]
   27684:	ldr	r1, [r1, #8]
   27688:	ldr	r3, [sp, #8]
   2768c:	add	r1, r1, r3, lsl #2
   27690:	sub	r2, r2, r3
   27694:	lsl	r2, r2, #2
   27698:	bl	112a0 <memcpy@plt>
   2769c:	ldr	r0, [sp, #16]
   276a0:	ldr	r0, [r0, #4]
   276a4:	ldr	r1, [sp, #8]
   276a8:	sub	r0, r0, r1
   276ac:	ldr	r1, [sp, #4]
   276b0:	add	r0, r1, r0
   276b4:	str	r0, [sp, #4]
   276b8:	b	276bc <__assert_fail@plt+0x161b8>
   276bc:	ldr	r0, [sp, #4]
   276c0:	ldr	r1, [fp, #-8]
   276c4:	str	r0, [r1, #4]
   276c8:	movw	r0, #0
   276cc:	str	r0, [fp, #-4]
   276d0:	ldr	r0, [fp, #-4]
   276d4:	mov	sp, fp
   276d8:	pop	{fp, pc}
   276dc:	sub	sp, sp, #28
   276e0:	str	r0, [sp, #20]
   276e4:	str	r1, [sp, #16]
   276e8:	ldr	r0, [sp, #20]
   276ec:	ldr	r0, [r0, #108]	; 0x6c
   276f0:	str	r0, [sp, #8]
   276f4:	str	r0, [sp]
   276f8:	movw	r0, #0
   276fc:	str	r0, [sp, #12]
   27700:	ldr	r0, [sp, #12]
   27704:	ldr	r1, [sp, #8]
   27708:	cmp	r0, r1
   2770c:	bge	2776c <__assert_fail@plt+0x16268>
   27710:	ldr	r0, [sp, #12]
   27714:	ldr	r1, [sp, #8]
   27718:	add	r0, r0, r1
   2771c:	movw	r1, #2
   27720:	sdiv	r0, r0, r1
   27724:	str	r0, [sp, #4]
   27728:	ldr	r0, [sp, #20]
   2772c:	ldr	r0, [r0, #116]	; 0x74
   27730:	ldr	r1, [sp, #4]
   27734:	movw	r2, #24
   27738:	mul	r1, r1, r2
   2773c:	add	r0, r0, r1
   27740:	ldr	r0, [r0, #4]
   27744:	ldr	r1, [sp, #16]
   27748:	cmp	r0, r1
   2774c:	bge	27760 <__assert_fail@plt+0x1625c>
   27750:	ldr	r0, [sp, #4]
   27754:	add	r0, r0, #1
   27758:	str	r0, [sp, #12]
   2775c:	b	27768 <__assert_fail@plt+0x16264>
   27760:	ldr	r0, [sp, #4]
   27764:	str	r0, [sp, #8]
   27768:	b	27700 <__assert_fail@plt+0x161fc>
   2776c:	ldr	r0, [sp, #12]
   27770:	ldr	r1, [sp]
   27774:	cmp	r0, r1
   27778:	bge	277b0 <__assert_fail@plt+0x162ac>
   2777c:	ldr	r0, [sp, #20]
   27780:	ldr	r0, [r0, #116]	; 0x74
   27784:	ldr	r1, [sp, #12]
   27788:	movw	r2, #24
   2778c:	mul	r1, r1, r2
   27790:	add	r0, r0, r1
   27794:	ldr	r0, [r0, #4]
   27798:	ldr	r1, [sp, #16]
   2779c:	cmp	r0, r1
   277a0:	bne	277b0 <__assert_fail@plt+0x162ac>
   277a4:	ldr	r0, [sp, #12]
   277a8:	str	r0, [sp, #24]
   277ac:	b	277b8 <__assert_fail@plt+0x162b4>
   277b0:	mvn	r0, #0
   277b4:	str	r0, [sp, #24]
   277b8:	ldr	r0, [sp, #24]
   277bc:	add	sp, sp, #28
   277c0:	bx	lr
   277c4:	push	{fp, lr}
   277c8:	mov	fp, sp
   277cc:	sub	sp, sp, #24
   277d0:	str	r0, [fp, #-8]
   277d4:	str	r1, [sp, #12]
   277d8:	ldr	r0, [fp, #-8]
   277dc:	ldr	r0, [r0, #104]	; 0x68
   277e0:	str	r0, [sp, #8]
   277e4:	ldr	r0, [sp, #12]
   277e8:	ldr	r1, [fp, #-8]
   277ec:	ldr	r1, [r1, #36]	; 0x24
   277f0:	cmp	r0, r1
   277f4:	blt	27810 <__assert_fail@plt+0x1630c>
   277f8:	ldr	r0, [fp, #-8]
   277fc:	ldr	r0, [r0, #36]	; 0x24
   27800:	ldr	r1, [fp, #-8]
   27804:	ldr	r1, [r1, #48]	; 0x30
   27808:	cmp	r0, r1
   2780c:	blt	2783c <__assert_fail@plt+0x16338>
   27810:	ldr	r0, [sp, #12]
   27814:	ldr	r1, [fp, #-8]
   27818:	ldr	r1, [r1, #28]
   2781c:	cmp	r0, r1
   27820:	blt	2786c <__assert_fail@plt+0x16368>
   27824:	ldr	r0, [fp, #-8]
   27828:	ldr	r0, [r0, #28]
   2782c:	ldr	r1, [fp, #-8]
   27830:	ldr	r1, [r1, #48]	; 0x30
   27834:	cmp	r0, r1
   27838:	bge	2786c <__assert_fail@plt+0x16368>
   2783c:	ldr	r0, [fp, #-8]
   27840:	ldr	r1, [sp, #12]
   27844:	add	r1, r1, #1
   27848:	bl	265a0 <__assert_fail@plt+0x1509c>
   2784c:	str	r0, [sp, #4]
   27850:	ldr	r0, [sp, #4]
   27854:	cmp	r0, #0
   27858:	beq	27868 <__assert_fail@plt+0x16364>
   2785c:	ldr	r0, [sp, #4]
   27860:	str	r0, [fp, #-4]
   27864:	b	278d4 <__assert_fail@plt+0x163d0>
   27868:	b	2786c <__assert_fail@plt+0x16368>
   2786c:	ldr	r0, [sp, #8]
   27870:	ldr	r1, [sp, #12]
   27874:	cmp	r0, r1
   27878:	bge	278cc <__assert_fail@plt+0x163c8>
   2787c:	ldr	r0, [fp, #-8]
   27880:	ldr	r0, [r0, #100]	; 0x64
   27884:	movw	r1, #0
   27888:	cmp	r0, r1
   2788c:	beq	27894 <__assert_fail@plt+0x16390>
   27890:	b	27894 <__assert_fail@plt+0x16390>
   27894:	ldr	r0, [fp, #-8]
   27898:	ldr	r0, [r0, #100]	; 0x64
   2789c:	ldr	r1, [sp, #8]
   278a0:	add	r0, r0, r1, lsl #2
   278a4:	add	r0, r0, #4
   278a8:	ldr	r2, [sp, #12]
   278ac:	sub	r1, r2, r1
   278b0:	lsl	r2, r1, #2
   278b4:	movw	r1, #0
   278b8:	and	r1, r1, #255	; 0xff
   278bc:	bl	11420 <memset@plt>
   278c0:	ldr	r0, [sp, #12]
   278c4:	ldr	r1, [fp, #-8]
   278c8:	str	r0, [r1, #104]	; 0x68
   278cc:	movw	r0, #0
   278d0:	str	r0, [fp, #-4]
   278d4:	ldr	r0, [fp, #-4]
   278d8:	mov	sp, fp
   278dc:	pop	{fp, pc}
   278e0:	push	{r4, sl, fp, lr}
   278e4:	add	fp, sp, #8
   278e8:	sub	sp, sp, #48	; 0x30
   278ec:	ldr	ip, [fp, #8]
   278f0:	str	r0, [fp, #-16]
   278f4:	str	r1, [fp, #-20]	; 0xffffffec
   278f8:	str	r2, [fp, #-24]	; 0xffffffe8
   278fc:	str	r3, [sp, #28]
   27900:	ldr	r0, [fp, #-16]
   27904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27908:	add	r1, r1, #8
   2790c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27910:	ldr	r2, [r2]
   27914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27918:	ldr	r3, [r3, #4]
   2791c:	ldr	lr, [sp, #28]
   27920:	ldr	r4, [fp, #8]
   27924:	str	lr, [sp]
   27928:	str	r4, [sp, #4]
   2792c:	movw	lr, #8
   27930:	str	lr, [sp, #8]
   27934:	str	ip, [sp, #16]
   27938:	bl	27a8c <__assert_fail@plt+0x16588>
   2793c:	str	r0, [sp, #24]
   27940:	ldr	r0, [sp, #24]
   27944:	cmp	r0, #0
   27948:	beq	27958 <__assert_fail@plt+0x16454>
   2794c:	ldr	r0, [sp, #24]
   27950:	str	r0, [fp, #-12]
   27954:	b	279c8 <__assert_fail@plt+0x164c4>
   27958:	ldr	r0, [fp, #-16]
   2795c:	ldr	r1, [sp, #28]
   27960:	ldr	r2, [fp, #8]
   27964:	ldr	r3, [fp, #-20]	; 0xffffffec
   27968:	ldr	r3, [r3]
   2796c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   27970:	ldr	ip, [ip, #4]
   27974:	str	ip, [sp]
   27978:	bl	282d4 <__assert_fail@plt+0x16dd0>
   2797c:	str	r0, [sp, #24]
   27980:	ldr	r0, [sp, #24]
   27984:	cmp	r0, #0
   27988:	beq	27998 <__assert_fail@plt+0x16494>
   2798c:	ldr	r0, [sp, #24]
   27990:	str	r0, [fp, #-12]
   27994:	b	279c8 <__assert_fail@plt+0x164c4>
   27998:	ldr	r0, [fp, #8]
   2799c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   279a0:	ldr	r1, [r1, #4]
   279a4:	add	r0, r0, r1
   279a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   279ac:	ldr	r1, [r1]
   279b0:	sub	r0, r0, r1
   279b4:	str	r0, [sp, #20]
   279b8:	ldr	r0, [fp, #-16]
   279bc:	ldr	r1, [sp, #20]
   279c0:	bl	277c4 <__assert_fail@plt+0x162c0>
   279c4:	str	r0, [fp, #-12]
   279c8:	ldr	r0, [fp, #-12]
   279cc:	sub	sp, fp, #8
   279d0:	pop	{r4, sl, fp, pc}
   279d4:	sub	sp, sp, #32
   279d8:	str	r0, [sp, #24]
   279dc:	str	r1, [sp, #20]
   279e0:	str	r2, [sp, #16]
   279e4:	str	r3, [sp, #12]
   279e8:	movw	r0, #0
   279ec:	str	r0, [sp, #8]
   279f0:	ldr	r0, [sp, #8]
   279f4:	ldr	r1, [sp, #20]
   279f8:	ldr	r1, [r1, #4]
   279fc:	cmp	r0, r1
   27a00:	bge	27a78 <__assert_fail@plt+0x16574>
   27a04:	ldr	r0, [sp, #20]
   27a08:	ldr	r0, [r0, #8]
   27a0c:	ldr	r1, [sp, #8]
   27a10:	ldr	r0, [r0, r1, lsl #2]
   27a14:	str	r0, [sp, #4]
   27a18:	ldr	r0, [sp, #24]
   27a1c:	ldr	r0, [r0]
   27a20:	ldr	r1, [sp, #4]
   27a24:	add	r0, r0, r1, lsl #3
   27a28:	str	r0, [sp]
   27a2c:	ldr	r0, [sp]
   27a30:	ldr	r0, [r0, #4]
   27a34:	and	r0, r0, #255	; 0xff
   27a38:	ldr	r1, [sp, #12]
   27a3c:	cmp	r0, r1
   27a40:	bne	27a64 <__assert_fail@plt+0x16560>
   27a44:	ldr	r0, [sp]
   27a48:	ldr	r0, [r0]
   27a4c:	ldr	r1, [sp, #16]
   27a50:	cmp	r0, r1
   27a54:	bne	27a64 <__assert_fail@plt+0x16560>
   27a58:	ldr	r0, [sp, #4]
   27a5c:	str	r0, [sp, #28]
   27a60:	b	27a80 <__assert_fail@plt+0x1657c>
   27a64:	b	27a68 <__assert_fail@plt+0x16564>
   27a68:	ldr	r0, [sp, #8]
   27a6c:	add	r0, r0, #1
   27a70:	str	r0, [sp, #8]
   27a74:	b	279f0 <__assert_fail@plt+0x164ec>
   27a78:	mvn	r0, #0
   27a7c:	str	r0, [sp, #28]
   27a80:	ldr	r0, [sp, #28]
   27a84:	add	sp, sp, #32
   27a88:	bx	lr
   27a8c:	push	{r4, sl, fp, lr}
   27a90:	add	fp, sp, #8
   27a94:	sub	sp, sp, #136	; 0x88
   27a98:	ldr	ip, [fp, #16]
   27a9c:	ldr	lr, [fp, #12]
   27aa0:	ldr	r4, [fp, #8]
   27aa4:	str	r0, [fp, #-16]
   27aa8:	str	r1, [fp, #-20]	; 0xffffffec
   27aac:	str	r2, [fp, #-24]	; 0xffffffe8
   27ab0:	str	r3, [fp, #-28]	; 0xffffffe4
   27ab4:	ldr	r0, [fp, #-16]
   27ab8:	ldr	r0, [r0, #84]	; 0x54
   27abc:	str	r0, [fp, #-32]	; 0xffffffe0
   27ac0:	mov	r0, #0
   27ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   27ac8:	str	r0, [fp, #-56]	; 0xffffffc8
   27acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ad0:	ldr	r0, [r0]
   27ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27ad8:	add	r0, r0, r1, lsl #3
   27adc:	ldr	r0, [r0]
   27ae0:	str	r0, [fp, #-40]	; 0xffffffd8
   27ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27ae8:	ldr	r0, [r0, #4]
   27aec:	ldr	r1, [fp, #12]
   27af0:	ldr	r2, [fp, #-16]
   27af4:	ldr	r2, [r2, #120]	; 0x78
   27af8:	add	r1, r1, r2
   27afc:	add	r1, r1, #1
   27b00:	cmp	r0, r1
   27b04:	str	r4, [sp, #44]	; 0x2c
   27b08:	str	lr, [sp, #40]	; 0x28
   27b0c:	str	ip, [sp, #36]	; 0x24
   27b10:	bge	27bfc <__assert_fail@plt+0x166f8>
   27b14:	ldr	r0, [pc, #1708]	; 281c8 <__assert_fail@plt+0x16cc4>
   27b18:	ldr	r1, [fp, #-20]	; 0xffffffec
   27b1c:	ldr	r1, [r1, #4]
   27b20:	str	r1, [sp, #56]	; 0x38
   27b24:	ldr	r1, [fp, #12]
   27b28:	ldr	r2, [fp, #-16]
   27b2c:	ldr	r2, [r2, #120]	; 0x78
   27b30:	add	r1, r1, r2
   27b34:	add	r1, r1, #1
   27b38:	str	r1, [sp, #52]	; 0x34
   27b3c:	ldr	r1, [sp, #56]	; 0x38
   27b40:	sub	r0, r0, r1
   27b44:	ldr	r1, [sp, #52]	; 0x34
   27b48:	cmp	r0, r1
   27b4c:	bge	27b5c <__assert_fail@plt+0x16658>
   27b50:	movw	r0, #12
   27b54:	str	r0, [fp, #-12]
   27b58:	b	281bc <__assert_fail@plt+0x16cb8>
   27b5c:	ldr	r0, [pc, #1640]	; 281cc <__assert_fail@plt+0x16cc8>
   27b60:	ldr	r1, [sp, #56]	; 0x38
   27b64:	ldr	r2, [sp, #52]	; 0x34
   27b68:	add	r1, r1, r2
   27b6c:	str	r1, [sp, #48]	; 0x30
   27b70:	ldr	r1, [sp, #48]	; 0x30
   27b74:	cmp	r0, r1
   27b78:	bcs	27b88 <__assert_fail@plt+0x16684>
   27b7c:	movw	r0, #12
   27b80:	str	r0, [fp, #-12]
   27b84:	b	281bc <__assert_fail@plt+0x16cb8>
   27b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   27b8c:	ldr	r0, [r0, #8]
   27b90:	ldr	r1, [sp, #48]	; 0x30
   27b94:	lsl	r1, r1, #2
   27b98:	bl	33bb4 <__assert_fail@plt+0x226b0>
   27b9c:	str	r0, [sp, #60]	; 0x3c
   27ba0:	ldr	r0, [sp, #60]	; 0x3c
   27ba4:	movw	r1, #0
   27ba8:	cmp	r0, r1
   27bac:	bne	27bbc <__assert_fail@plt+0x166b8>
   27bb0:	movw	r0, #12
   27bb4:	str	r0, [fp, #-12]
   27bb8:	b	281bc <__assert_fail@plt+0x16cb8>
   27bbc:	ldr	r0, [sp, #60]	; 0x3c
   27bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   27bc4:	str	r0, [r1, #8]
   27bc8:	ldr	r0, [sp, #48]	; 0x30
   27bcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   27bd0:	str	r0, [r1, #4]
   27bd4:	ldr	r0, [sp, #60]	; 0x3c
   27bd8:	ldr	r1, [sp, #56]	; 0x38
   27bdc:	add	r0, r0, r1, lsl #2
   27be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   27be4:	ldr	r2, [r2, #4]
   27be8:	sub	r1, r2, r1
   27bec:	lsl	r2, r1, #2
   27bf0:	movw	r1, #0
   27bf4:	and	r1, r1, #255	; 0xff
   27bf8:	bl	11420 <memset@plt>
   27bfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c00:	ldr	r0, [r0]
   27c04:	cmp	r0, #0
   27c08:	beq	27c1c <__assert_fail@plt+0x16718>
   27c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c10:	ldr	r0, [r0]
   27c14:	str	r0, [sp, #32]
   27c18:	b	27c24 <__assert_fail@plt+0x16720>
   27c1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27c20:	str	r0, [sp, #32]
   27c24:	ldr	r0, [sp, #32]
   27c28:	str	r0, [fp, #-48]	; 0xffffffd0
   27c2c:	ldr	r0, [fp, #-16]
   27c30:	ldr	r0, [r0, #100]	; 0x64
   27c34:	str	r0, [sp, #68]	; 0x44
   27c38:	ldr	r0, [fp, #-16]
   27c3c:	ldr	r0, [r0, #40]	; 0x28
   27c40:	str	r0, [fp, #-44]	; 0xffffffd4
   27c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c48:	ldr	r0, [r0, #8]
   27c4c:	ldr	r1, [fp, #-16]
   27c50:	str	r0, [r1, #100]	; 0x64
   27c54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27c58:	ldr	r1, [fp, #-16]
   27c5c:	str	r0, [r1, #40]	; 0x28
   27c60:	ldr	r0, [fp, #-16]
   27c64:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27c68:	sub	r1, r1, #1
   27c6c:	ldr	r2, [fp, #-16]
   27c70:	ldr	r2, [r2, #88]	; 0x58
   27c74:	bl	25b94 <__assert_fail@plt+0x14690>
   27c78:	str	r0, [sp, #64]	; 0x40
   27c7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27c84:	cmp	r0, r1
   27c88:	bne	27cf0 <__assert_fail@plt+0x167ec>
   27c8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27c90:	add	r0, sp, #72	; 0x48
   27c94:	bl	21ecc <__assert_fail@plt+0x109c8>
   27c98:	str	r0, [fp, #-36]	; 0xffffffdc
   27c9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27ca0:	cmp	r0, #0
   27ca4:	beq	27cb4 <__assert_fail@plt+0x167b0>
   27ca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27cac:	str	r0, [fp, #-12]
   27cb0:	b	281bc <__assert_fail@plt+0x16cb8>
   27cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27cb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27cbc:	ldr	r3, [fp, #16]
   27cc0:	add	r1, sp, #72	; 0x48
   27cc4:	bl	28534 <__assert_fail@plt+0x17030>
   27cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   27ccc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27cd0:	cmp	r0, #0
   27cd4:	beq	27cec <__assert_fail@plt+0x167e8>
   27cd8:	ldr	r0, [sp, #80]	; 0x50
   27cdc:	bl	35268 <__assert_fail@plt+0x23d64>
   27ce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27ce4:	str	r0, [fp, #-12]
   27ce8:	b	281bc <__assert_fail@plt+0x16cb8>
   27cec:	b	27d78 <__assert_fail@plt+0x16874>
   27cf0:	ldr	r0, [fp, #-16]
   27cf4:	ldr	r0, [r0, #100]	; 0x64
   27cf8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27cfc:	add	r0, r0, r1, lsl #2
   27d00:	ldr	r0, [r0]
   27d04:	str	r0, [fp, #-56]	; 0xffffffc8
   27d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27d0c:	movw	r1, #0
   27d10:	cmp	r0, r1
   27d14:	beq	27d60 <__assert_fail@plt+0x1685c>
   27d18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27d1c:	ldrb	r0, [r0, #52]	; 0x34
   27d20:	ubfx	r0, r0, #6, #1
   27d24:	and	r0, r0, #255	; 0xff
   27d28:	cmp	r0, #0
   27d2c:	beq	27d60 <__assert_fail@plt+0x1685c>
   27d30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27d34:	add	r1, r0, #4
   27d38:	add	r0, sp, #72	; 0x48
   27d3c:	bl	23180 <__assert_fail@plt+0x11c7c>
   27d40:	str	r0, [fp, #-36]	; 0xffffffdc
   27d44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27d48:	cmp	r0, #0
   27d4c:	beq	27d5c <__assert_fail@plt+0x16858>
   27d50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27d54:	str	r0, [fp, #-12]
   27d58:	b	281bc <__assert_fail@plt+0x16cb8>
   27d5c:	b	27d74 <__assert_fail@plt+0x16870>
   27d60:	add	r0, sp, #72	; 0x48
   27d64:	movw	r1, #0
   27d68:	and	r1, r1, #255	; 0xff
   27d6c:	movw	r2, #12
   27d70:	bl	11420 <memset@plt>
   27d74:	b	27d78 <__assert_fail@plt+0x16874>
   27d78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27d80:	cmp	r0, r1
   27d84:	beq	27db0 <__assert_fail@plt+0x168ac>
   27d88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27d8c:	movw	r1, #0
   27d90:	cmp	r0, r1
   27d94:	beq	27e88 <__assert_fail@plt+0x16984>
   27d98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27d9c:	ldrb	r0, [r0, #52]	; 0x34
   27da0:	ubfx	r0, r0, #6, #1
   27da4:	and	r0, r0, #255	; 0xff
   27da8:	cmp	r0, #0
   27dac:	beq	27e88 <__assert_fail@plt+0x16984>
   27db0:	ldr	r0, [sp, #76]	; 0x4c
   27db4:	cmp	r0, #0
   27db8:	beq	27e0c <__assert_fail@plt+0x16908>
   27dbc:	ldr	r0, [fp, #-16]
   27dc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27dc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27dc8:	ldr	r1, [fp, #16]
   27dcc:	add	ip, sp, #72	; 0x48
   27dd0:	str	r1, [sp, #28]
   27dd4:	mov	r1, ip
   27dd8:	ldr	ip, [sp, #28]
   27ddc:	str	ip, [sp]
   27de0:	bl	286d8 <__assert_fail@plt+0x171d4>
   27de4:	str	r0, [fp, #-36]	; 0xffffffdc
   27de8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27dec:	cmp	r0, #0
   27df0:	beq	27e08 <__assert_fail@plt+0x16904>
   27df4:	ldr	r0, [sp, #80]	; 0x50
   27df8:	bl	35268 <__assert_fail@plt+0x23d64>
   27dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e00:	str	r0, [fp, #-12]
   27e04:	b	281bc <__assert_fail@plt+0x16cb8>
   27e08:	b	27e0c <__assert_fail@plt+0x16908>
   27e0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27e10:	ldr	r3, [sp, #64]	; 0x40
   27e14:	sub	r0, fp, #36	; 0x24
   27e18:	add	r2, sp, #72	; 0x48
   27e1c:	bl	23344 <__assert_fail@plt+0x11e40>
   27e20:	str	r0, [fp, #-56]	; 0xffffffc8
   27e24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27e28:	movw	r1, #0
   27e2c:	cmp	r0, r1
   27e30:	movw	r0, #0
   27e34:	str	r0, [sp, #24]
   27e38:	bne	27e50 <__assert_fail@plt+0x1694c>
   27e3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e40:	cmp	r0, #0
   27e44:	movw	r0, #0
   27e48:	movne	r0, #1
   27e4c:	str	r0, [sp, #24]
   27e50:	ldr	r0, [sp, #24]
   27e54:	tst	r0, #1
   27e58:	beq	27e70 <__assert_fail@plt+0x1696c>
   27e5c:	ldr	r0, [sp, #80]	; 0x50
   27e60:	bl	35268 <__assert_fail@plt+0x23d64>
   27e64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e68:	str	r0, [fp, #-12]
   27e6c:	b	281bc <__assert_fail@plt+0x16cb8>
   27e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27e74:	ldr	r1, [fp, #-16]
   27e78:	ldr	r1, [r1, #100]	; 0x64
   27e7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27e80:	add	r1, r1, r2, lsl #2
   27e84:	str	r0, [r1]
   27e88:	movw	r0, #0
   27e8c:	str	r0, [fp, #-52]	; 0xffffffcc
   27e90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27e94:	ldr	r1, [fp, #12]
   27e98:	cmp	r0, r1
   27e9c:	movw	r0, #0
   27ea0:	str	r0, [sp, #20]
   27ea4:	bge	27ec4 <__assert_fail@plt+0x169c0>
   27ea8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27eac:	ldr	r1, [fp, #-16]
   27eb0:	ldr	r1, [r1, #120]	; 0x78
   27eb4:	cmp	r0, r1
   27eb8:	movw	r0, #0
   27ebc:	movle	r0, #1
   27ec0:	str	r0, [sp, #20]
   27ec4:	ldr	r0, [sp, #20]
   27ec8:	tst	r0, #1
   27ecc:	beq	28108 <__assert_fail@plt+0x16c04>
   27ed0:	mov	r0, #0
   27ed4:	str	r0, [sp, #76]	; 0x4c
   27ed8:	ldr	r0, [fp, #-16]
   27edc:	ldr	r0, [r0, #100]	; 0x64
   27ee0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27ee4:	add	r1, r1, #1
   27ee8:	add	r0, r0, r1, lsl #2
   27eec:	ldr	r0, [r0]
   27ef0:	movw	r1, #0
   27ef4:	cmp	r0, r1
   27ef8:	beq	27f48 <__assert_fail@plt+0x16a44>
   27efc:	ldr	r0, [fp, #-16]
   27f00:	ldr	r0, [r0, #100]	; 0x64
   27f04:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27f08:	add	r1, r1, #1
   27f0c:	add	r0, r0, r1, lsl #2
   27f10:	ldr	r0, [r0]
   27f14:	add	r1, r0, #4
   27f18:	add	r0, sp, #72	; 0x48
   27f1c:	bl	228ac <__assert_fail@plt+0x113a8>
   27f20:	str	r0, [fp, #-36]	; 0xffffffdc
   27f24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f28:	cmp	r0, #0
   27f2c:	beq	27f44 <__assert_fail@plt+0x16a40>
   27f30:	ldr	r0, [sp, #80]	; 0x50
   27f34:	bl	35268 <__assert_fail@plt+0x23d64>
   27f38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f3c:	str	r0, [fp, #-12]
   27f40:	b	281bc <__assert_fail@plt+0x16cb8>
   27f44:	b	27f48 <__assert_fail@plt+0x16a44>
   27f48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27f4c:	movw	r1, #0
   27f50:	cmp	r0, r1
   27f54:	beq	27f98 <__assert_fail@plt+0x16a94>
   27f58:	ldr	r0, [fp, #-16]
   27f5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27f60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27f64:	add	r2, r2, #16
   27f68:	add	r3, sp, #72	; 0x48
   27f6c:	bl	28aa8 <__assert_fail@plt+0x175a4>
   27f70:	str	r0, [fp, #-36]	; 0xffffffdc
   27f74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f78:	cmp	r0, #0
   27f7c:	beq	27f94 <__assert_fail@plt+0x16a90>
   27f80:	ldr	r0, [sp, #80]	; 0x50
   27f84:	bl	35268 <__assert_fail@plt+0x23d64>
   27f88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f8c:	str	r0, [fp, #-12]
   27f90:	b	281bc <__assert_fail@plt+0x16cb8>
   27f94:	b	27f98 <__assert_fail@plt+0x16a94>
   27f98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27f9c:	add	r0, r0, #1
   27fa0:	str	r0, [fp, #-48]	; 0xffffffd0
   27fa4:	ldr	r0, [sp, #76]	; 0x4c
   27fa8:	cmp	r0, #0
   27fac:	beq	28038 <__assert_fail@plt+0x16b34>
   27fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27fb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27fb8:	ldr	r3, [fp, #16]
   27fbc:	add	r1, sp, #72	; 0x48
   27fc0:	bl	28534 <__assert_fail@plt+0x17030>
   27fc4:	str	r0, [fp, #-36]	; 0xffffffdc
   27fc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27fcc:	cmp	r0, #0
   27fd0:	beq	27fe8 <__assert_fail@plt+0x16ae4>
   27fd4:	ldr	r0, [sp, #80]	; 0x50
   27fd8:	bl	35268 <__assert_fail@plt+0x23d64>
   27fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27fe0:	str	r0, [fp, #-12]
   27fe4:	b	281bc <__assert_fail@plt+0x16cb8>
   27fe8:	ldr	r0, [fp, #-16]
   27fec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27ff0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27ff4:	ldr	r1, [fp, #16]
   27ff8:	add	ip, sp, #72	; 0x48
   27ffc:	str	r1, [sp, #16]
   28000:	mov	r1, ip
   28004:	ldr	ip, [sp, #16]
   28008:	str	ip, [sp]
   2800c:	bl	286d8 <__assert_fail@plt+0x171d4>
   28010:	str	r0, [fp, #-36]	; 0xffffffdc
   28014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28018:	cmp	r0, #0
   2801c:	beq	28034 <__assert_fail@plt+0x16b30>
   28020:	ldr	r0, [sp, #80]	; 0x50
   28024:	bl	35268 <__assert_fail@plt+0x23d64>
   28028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2802c:	str	r0, [fp, #-12]
   28030:	b	281bc <__assert_fail@plt+0x16cb8>
   28034:	b	28038 <__assert_fail@plt+0x16b34>
   28038:	ldr	r0, [fp, #-16]
   2803c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   28040:	sub	r1, r1, #1
   28044:	ldr	r2, [fp, #-16]
   28048:	ldr	r2, [r2, #88]	; 0x58
   2804c:	bl	25b94 <__assert_fail@plt+0x14690>
   28050:	str	r0, [sp, #64]	; 0x40
   28054:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28058:	ldr	r3, [sp, #64]	; 0x40
   2805c:	sub	r0, fp, #36	; 0x24
   28060:	add	r2, sp, #72	; 0x48
   28064:	bl	23344 <__assert_fail@plt+0x11e40>
   28068:	str	r0, [fp, #-56]	; 0xffffffc8
   2806c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28070:	movw	r1, #0
   28074:	cmp	r0, r1
   28078:	movw	r0, #0
   2807c:	str	r0, [sp, #12]
   28080:	bne	28098 <__assert_fail@plt+0x16b94>
   28084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28088:	cmp	r0, #0
   2808c:	movw	r0, #0
   28090:	movne	r0, #1
   28094:	str	r0, [sp, #12]
   28098:	ldr	r0, [sp, #12]
   2809c:	tst	r0, #1
   280a0:	beq	280b8 <__assert_fail@plt+0x16bb4>
   280a4:	ldr	r0, [sp, #80]	; 0x50
   280a8:	bl	35268 <__assert_fail@plt+0x23d64>
   280ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   280b0:	str	r0, [fp, #-12]
   280b4:	b	281bc <__assert_fail@plt+0x16cb8>
   280b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   280bc:	ldr	r1, [fp, #-16]
   280c0:	ldr	r1, [r1, #100]	; 0x64
   280c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   280c8:	add	r1, r1, r2, lsl #2
   280cc:	str	r0, [r1]
   280d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   280d4:	movw	r1, #0
   280d8:	cmp	r0, r1
   280dc:	bne	280f0 <__assert_fail@plt+0x16bec>
   280e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   280e4:	add	r0, r0, #1
   280e8:	str	r0, [sp, #8]
   280ec:	b	280fc <__assert_fail@plt+0x16bf8>
   280f0:	movw	r0, #0
   280f4:	str	r0, [sp, #8]
   280f8:	b	280fc <__assert_fail@plt+0x16bf8>
   280fc:	ldr	r0, [sp, #8]
   28100:	str	r0, [fp, #-52]	; 0xffffffcc
   28104:	b	27e90 <__assert_fail@plt+0x1698c>
   28108:	ldr	r0, [sp, #80]	; 0x50
   2810c:	bl	35268 <__assert_fail@plt+0x23d64>
   28110:	ldr	r0, [fp, #-16]
   28114:	ldr	r0, [r0, #100]	; 0x64
   28118:	ldr	lr, [fp, #12]
   2811c:	add	r0, r0, lr, lsl #2
   28120:	ldr	r0, [r0]
   28124:	movw	lr, #0
   28128:	cmp	r0, lr
   2812c:	bne	2813c <__assert_fail@plt+0x16c38>
   28130:	movw	r0, #0
   28134:	str	r0, [sp, #4]
   28138:	b	28158 <__assert_fail@plt+0x16c54>
   2813c:	ldr	r0, [fp, #-16]
   28140:	ldr	r0, [r0, #100]	; 0x64
   28144:	ldr	r1, [fp, #12]
   28148:	add	r0, r0, r1, lsl #2
   2814c:	ldr	r0, [r0]
   28150:	add	r0, r0, #4
   28154:	str	r0, [sp, #4]
   28158:	ldr	r0, [sp, #4]
   2815c:	str	r0, [fp, #-60]	; 0xffffffc4
   28160:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28164:	ldr	r1, [fp, #-20]	; 0xffffffec
   28168:	str	r0, [r1]
   2816c:	ldr	r0, [sp, #68]	; 0x44
   28170:	ldr	r1, [fp, #-16]
   28174:	str	r0, [r1, #100]	; 0x64
   28178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2817c:	ldr	r1, [fp, #-16]
   28180:	str	r0, [r1, #40]	; 0x28
   28184:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28188:	movw	r1, #0
   2818c:	cmp	r0, r1
   28190:	beq	281b4 <__assert_fail@plt+0x16cb0>
   28194:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28198:	ldr	r1, [fp, #8]
   2819c:	bl	23254 <__assert_fail@plt+0x11d50>
   281a0:	cmp	r0, #0
   281a4:	beq	281b4 <__assert_fail@plt+0x16cb0>
   281a8:	movw	r0, #0
   281ac:	str	r0, [fp, #-12]
   281b0:	b	281bc <__assert_fail@plt+0x16cb8>
   281b4:	movw	r0, #1
   281b8:	str	r0, [fp, #-12]
   281bc:	ldr	r0, [fp, #-12]
   281c0:	sub	sp, fp, #8
   281c4:	pop	{r4, sl, fp, pc}
   281c8:	svcvc	0x00ffffff
   281cc:	svccc	0x00ffffff
   281d0:	push	{fp, lr}
   281d4:	mov	fp, sp
   281d8:	sub	sp, sp, #32
   281dc:	str	r0, [fp, #-8]
   281e0:	str	r1, [fp, #-12]
   281e4:	str	r2, [sp, #16]
   281e8:	ldr	r0, [fp, #-8]
   281ec:	ldr	r0, [r0, #16]
   281f0:	ldr	r1, [fp, #-8]
   281f4:	ldr	r1, [r1, #12]
   281f8:	cmp	r0, r1
   281fc:	bne	28260 <__assert_fail@plt+0x16d5c>
   28200:	ldr	r0, [fp, #-8]
   28204:	ldr	r0, [r0, #12]
   28208:	mov	r1, #1
   2820c:	orr	r0, r1, r0, lsl #1
   28210:	str	r0, [sp, #8]
   28214:	ldr	r0, [fp, #-8]
   28218:	ldr	r0, [r0, #20]
   2821c:	ldr	r1, [sp, #8]
   28220:	lsl	r1, r1, #2
   28224:	bl	33bb4 <__assert_fail@plt+0x226b0>
   28228:	str	r0, [sp, #4]
   2822c:	ldr	r0, [sp, #4]
   28230:	movw	r1, #0
   28234:	cmp	r0, r1
   28238:	bne	28248 <__assert_fail@plt+0x16d44>
   2823c:	movw	r0, #0
   28240:	str	r0, [fp, #-4]
   28244:	b	282c8 <__assert_fail@plt+0x16dc4>
   28248:	ldr	r0, [sp, #4]
   2824c:	ldr	r1, [fp, #-8]
   28250:	str	r0, [r1, #20]
   28254:	ldr	r0, [sp, #8]
   28258:	ldr	r1, [fp, #-8]
   2825c:	str	r0, [r1, #12]
   28260:	movw	r0, #1
   28264:	movw	r1, #20
   28268:	bl	33aa8 <__assert_fail@plt+0x225a4>
   2826c:	str	r0, [sp, #12]
   28270:	ldr	r0, [sp, #12]
   28274:	movw	r1, #0
   28278:	cmp	r0, r1
   2827c:	beq	282c0 <__assert_fail@plt+0x16dbc>
   28280:	ldr	r0, [sp, #12]
   28284:	ldr	r1, [fp, #-8]
   28288:	ldr	r2, [r1, #16]
   2828c:	ldr	r1, [r1, #20]
   28290:	add	r1, r1, r2, lsl #2
   28294:	str	r0, [r1]
   28298:	ldr	r0, [fp, #-12]
   2829c:	ldr	r1, [sp, #12]
   282a0:	str	r0, [r1]
   282a4:	ldr	r0, [sp, #16]
   282a8:	ldr	r1, [sp, #12]
   282ac:	str	r0, [r1, #4]
   282b0:	ldr	r0, [fp, #-8]
   282b4:	ldr	r1, [r0, #16]
   282b8:	add	r1, r1, #1
   282bc:	str	r1, [r0, #16]
   282c0:	ldr	r0, [sp, #12]
   282c4:	str	r0, [fp, #-4]
   282c8:	ldr	r0, [fp, #-4]
   282cc:	mov	sp, fp
   282d0:	pop	{fp, pc}
   282d4:	push	{fp, lr}
   282d8:	mov	fp, sp
   282dc:	sub	sp, sp, #32
   282e0:	ldr	ip, [fp, #8]
   282e4:	str	r0, [fp, #-8]
   282e8:	str	r1, [fp, #-12]
   282ec:	str	r2, [sp, #16]
   282f0:	str	r3, [sp, #12]
   282f4:	ldr	r0, [fp, #-8]
   282f8:	ldr	r0, [r0, #108]	; 0x6c
   282fc:	ldr	r1, [fp, #-8]
   28300:	ldr	r1, [r1, #112]	; 0x70
   28304:	cmp	r0, r1
   28308:	str	ip, [sp, #4]
   2830c:	blt	283a0 <__assert_fail@plt+0x16e9c>
   28310:	ldr	r0, [fp, #-8]
   28314:	ldr	r1, [r0, #112]	; 0x70
   28318:	ldr	r0, [r0, #116]	; 0x74
   2831c:	lsl	r1, r1, #1
   28320:	movw	r2, #24
   28324:	mul	r1, r1, r2
   28328:	bl	33bb4 <__assert_fail@plt+0x226b0>
   2832c:	str	r0, [sp, #8]
   28330:	ldr	r0, [sp, #8]
   28334:	movw	r1, #0
   28338:	cmp	r0, r1
   2833c:	bne	28358 <__assert_fail@plt+0x16e54>
   28340:	ldr	r0, [fp, #-8]
   28344:	ldr	r0, [r0, #116]	; 0x74
   28348:	bl	35268 <__assert_fail@plt+0x23d64>
   2834c:	movw	r0, #12
   28350:	str	r0, [fp, #-4]
   28354:	b	28528 <__assert_fail@plt+0x17024>
   28358:	ldr	r0, [sp, #8]
   2835c:	ldr	r1, [fp, #-8]
   28360:	str	r0, [r1, #116]	; 0x74
   28364:	ldr	r0, [fp, #-8]
   28368:	ldr	r1, [r0, #108]	; 0x6c
   2836c:	ldr	r2, [r0, #112]	; 0x70
   28370:	ldr	r0, [r0, #116]	; 0x74
   28374:	add	r1, r1, r1, lsl #1
   28378:	add	r0, r0, r1, lsl #3
   2837c:	add	r1, r2, r2, lsl #1
   28380:	lsl	r2, r1, #3
   28384:	mov	r1, #0
   28388:	bl	11420 <memset@plt>
   2838c:	ldr	r1, [fp, #-8]
   28390:	ldr	r2, [r1, #112]	; 0x70
   28394:	lsl	r2, r2, #1
   28398:	str	r2, [r1, #112]	; 0x70
   2839c:	str	r0, [sp]
   283a0:	ldr	r0, [fp, #-8]
   283a4:	ldr	r0, [r0, #108]	; 0x6c
   283a8:	cmp	r0, #0
   283ac:	ble	28408 <__assert_fail@plt+0x16f04>
   283b0:	ldr	r0, [fp, #-8]
   283b4:	ldr	r0, [r0, #116]	; 0x74
   283b8:	ldr	r1, [fp, #-8]
   283bc:	ldr	r1, [r1, #108]	; 0x6c
   283c0:	sub	r1, r1, #1
   283c4:	movw	r2, #24
   283c8:	mul	r1, r1, r2
   283cc:	add	r0, r0, r1
   283d0:	ldr	r0, [r0, #4]
   283d4:	ldr	r1, [sp, #16]
   283d8:	cmp	r0, r1
   283dc:	bne	28408 <__assert_fail@plt+0x16f04>
   283e0:	ldr	r0, [fp, #-8]
   283e4:	ldr	r0, [r0, #116]	; 0x74
   283e8:	ldr	r1, [fp, #-8]
   283ec:	ldr	r1, [r1, #108]	; 0x6c
   283f0:	sub	r1, r1, #1
   283f4:	movw	r2, #24
   283f8:	mul	r1, r1, r2
   283fc:	add	r0, r0, r1
   28400:	movw	r1, #1
   28404:	strb	r1, [r0, #20]
   28408:	ldr	r0, [fp, #-12]
   2840c:	ldr	r1, [fp, #-8]
   28410:	ldr	r1, [r1, #116]	; 0x74
   28414:	ldr	r2, [fp, #-8]
   28418:	ldr	r2, [r2, #108]	; 0x6c
   2841c:	movw	r3, #24
   28420:	mul	r2, r2, r3
   28424:	add	r1, r1, r2
   28428:	str	r0, [r1]
   2842c:	ldr	r0, [sp, #16]
   28430:	ldr	r1, [fp, #-8]
   28434:	ldr	r1, [r1, #116]	; 0x74
   28438:	ldr	r2, [fp, #-8]
   2843c:	ldr	r2, [r2, #108]	; 0x6c
   28440:	mul	r2, r2, r3
   28444:	add	r1, r1, r2
   28448:	str	r0, [r1, #4]
   2844c:	ldr	r0, [sp, #12]
   28450:	ldr	r1, [fp, #-8]
   28454:	ldr	r1, [r1, #116]	; 0x74
   28458:	ldr	r2, [fp, #-8]
   2845c:	ldr	r2, [r2, #108]	; 0x6c
   28460:	mul	r2, r2, r3
   28464:	add	r1, r1, r2
   28468:	str	r0, [r1, #8]
   2846c:	ldr	r0, [fp, #8]
   28470:	ldr	r1, [fp, #-8]
   28474:	ldr	r1, [r1, #116]	; 0x74
   28478:	ldr	r2, [fp, #-8]
   2847c:	ldr	r2, [r2, #108]	; 0x6c
   28480:	mul	r2, r2, r3
   28484:	add	r1, r1, r2
   28488:	str	r0, [r1, #12]
   2848c:	ldr	r0, [sp, #12]
   28490:	ldr	r1, [fp, #8]
   28494:	cmp	r0, r1
   28498:	movw	r0, #0
   2849c:	moveq	r0, #1
   284a0:	tst	r0, #1
   284a4:	mvn	r0, #0
   284a8:	moveq	r0, #0
   284ac:	ldr	r1, [fp, #-8]
   284b0:	ldr	r1, [r1, #116]	; 0x74
   284b4:	ldr	r2, [fp, #-8]
   284b8:	ldr	r2, [r2, #108]	; 0x6c
   284bc:	mul	r2, r2, r3
   284c0:	add	r1, r1, r2
   284c4:	str	r0, [r1, #16]
   284c8:	ldr	r0, [fp, #-8]
   284cc:	ldr	r0, [r0, #116]	; 0x74
   284d0:	ldr	r1, [fp, #-8]
   284d4:	ldr	r2, [r1, #108]	; 0x6c
   284d8:	add	ip, r2, #1
   284dc:	str	ip, [r1, #108]	; 0x6c
   284e0:	mul	r1, r2, r3
   284e4:	add	r0, r0, r1
   284e8:	movw	r1, #0
   284ec:	strb	r1, [r0, #20]
   284f0:	ldr	r0, [fp, #-8]
   284f4:	ldr	r0, [r0, #120]	; 0x78
   284f8:	ldr	r1, [fp, #8]
   284fc:	ldr	r2, [sp, #12]
   28500:	sub	r1, r1, r2
   28504:	cmp	r0, r1
   28508:	bge	28520 <__assert_fail@plt+0x1701c>
   2850c:	ldr	r0, [fp, #8]
   28510:	ldr	r1, [sp, #12]
   28514:	sub	r0, r0, r1
   28518:	ldr	r1, [fp, #-8]
   2851c:	str	r0, [r1, #120]	; 0x78
   28520:	movw	r0, #0
   28524:	str	r0, [fp, #-4]
   28528:	ldr	r0, [fp, #-4]
   2852c:	mov	sp, fp
   28530:	pop	{fp, pc}
   28534:	push	{fp, lr}
   28538:	mov	fp, sp
   2853c:	sub	sp, sp, #64	; 0x40
   28540:	str	r0, [fp, #-8]
   28544:	str	r1, [fp, #-12]
   28548:	str	r2, [fp, #-16]
   2854c:	str	r3, [fp, #-20]	; 0xffffffec
   28550:	ldr	r0, [fp, #-12]
   28554:	ldr	r0, [r0, #4]
   28558:	cmp	r0, #0
   2855c:	beq	28564 <__assert_fail@plt+0x17060>
   28560:	b	28564 <__assert_fail@plt+0x17060>
   28564:	ldr	r0, [fp, #-12]
   28568:	ldr	r1, [r0, #4]
   2856c:	add	r0, sp, #20
   28570:	bl	22330 <__assert_fail@plt+0x10e2c>
   28574:	str	r0, [fp, #-24]	; 0xffffffe8
   28578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2857c:	cmp	r0, #0
   28580:	beq	28590 <__assert_fail@plt+0x1708c>
   28584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28588:	str	r0, [fp, #-4]
   2858c:	b	286cc <__assert_fail@plt+0x171c8>
   28590:	movw	r0, #0
   28594:	str	r0, [fp, #-28]	; 0xffffffe4
   28598:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2859c:	ldr	r1, [fp, #-12]
   285a0:	ldr	r1, [r1, #4]
   285a4:	cmp	r0, r1
   285a8:	bge	2869c <__assert_fail@plt+0x17198>
   285ac:	ldr	r0, [fp, #-12]
   285b0:	ldr	r0, [r0, #8]
   285b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   285b8:	add	r0, r0, r1, lsl #2
   285bc:	ldr	r0, [r0]
   285c0:	str	r0, [sp, #16]
   285c4:	ldr	r0, [fp, #-8]
   285c8:	ldr	r0, [r0, #24]
   285cc:	ldr	r1, [sp, #16]
   285d0:	movw	r2, #12
   285d4:	mul	r1, r1, r2
   285d8:	add	r0, r0, r1
   285dc:	str	r0, [sp, #12]
   285e0:	ldr	r0, [fp, #-8]
   285e4:	ldr	r1, [sp, #12]
   285e8:	ldr	r2, [fp, #-16]
   285ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   285f0:	bl	279d4 <__assert_fail@plt+0x164d0>
   285f4:	str	r0, [sp, #32]
   285f8:	ldr	r0, [sp, #32]
   285fc:	cmn	r0, #1
   28600:	bne	28638 <__assert_fail@plt+0x17134>
   28604:	ldr	r1, [sp, #12]
   28608:	add	r0, sp, #20
   2860c:	bl	228ac <__assert_fail@plt+0x113a8>
   28610:	str	r0, [fp, #-24]	; 0xffffffe8
   28614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28618:	cmp	r0, #0
   2861c:	beq	28634 <__assert_fail@plt+0x17130>
   28620:	ldr	r0, [sp, #28]
   28624:	bl	35268 <__assert_fail@plt+0x23d64>
   28628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2862c:	str	r0, [fp, #-4]
   28630:	b	286cc <__assert_fail@plt+0x171c8>
   28634:	b	28688 <__assert_fail@plt+0x17184>
   28638:	ldr	r0, [fp, #-8]
   2863c:	ldr	r2, [sp, #16]
   28640:	ldr	r3, [fp, #-16]
   28644:	ldr	r1, [fp, #-20]	; 0xffffffec
   28648:	add	ip, sp, #20
   2864c:	str	r1, [sp, #8]
   28650:	mov	r1, ip
   28654:	ldr	ip, [sp, #8]
   28658:	str	ip, [sp]
   2865c:	bl	28d94 <__assert_fail@plt+0x17890>
   28660:	str	r0, [fp, #-24]	; 0xffffffe8
   28664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28668:	cmp	r0, #0
   2866c:	beq	28684 <__assert_fail@plt+0x17180>
   28670:	ldr	r0, [sp, #28]
   28674:	bl	35268 <__assert_fail@plt+0x23d64>
   28678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2867c:	str	r0, [fp, #-4]
   28680:	b	286cc <__assert_fail@plt+0x171c8>
   28684:	b	28688 <__assert_fail@plt+0x17184>
   28688:	b	2868c <__assert_fail@plt+0x17188>
   2868c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28690:	add	r0, r0, #1
   28694:	str	r0, [fp, #-28]	; 0xffffffe4
   28698:	b	28598 <__assert_fail@plt+0x17094>
   2869c:	ldr	r0, [fp, #-12]
   286a0:	ldr	r0, [r0, #8]
   286a4:	bl	35268 <__assert_fail@plt+0x23d64>
   286a8:	ldr	r0, [fp, #-12]
   286ac:	ldr	lr, [sp, #20]
   286b0:	str	lr, [r0]
   286b4:	ldr	lr, [sp, #24]
   286b8:	str	lr, [r0, #4]
   286bc:	ldr	lr, [sp, #28]
   286c0:	str	lr, [r0, #8]
   286c4:	movw	r0, #0
   286c8:	str	r0, [fp, #-4]
   286cc:	ldr	r0, [fp, #-4]
   286d0:	mov	sp, fp
   286d4:	pop	{fp, pc}
   286d8:	push	{fp, lr}
   286dc:	mov	fp, sp
   286e0:	sub	sp, sp, #112	; 0x70
   286e4:	ldr	ip, [fp, #8]
   286e8:	str	r0, [fp, #-8]
   286ec:	str	r1, [fp, #-12]
   286f0:	str	r2, [fp, #-16]
   286f4:	str	r3, [fp, #-20]	; 0xffffffec
   286f8:	ldr	r0, [fp, #-8]
   286fc:	ldr	r0, [r0, #84]	; 0x54
   28700:	str	r0, [fp, #-24]	; 0xffffffe8
   28704:	ldr	r0, [fp, #-8]
   28708:	ldr	r1, [fp, #-16]
   2870c:	str	ip, [sp, #28]
   28710:	bl	276dc <__assert_fail@plt+0x161d8>
   28714:	str	r0, [fp, #-32]	; 0xffffffe0
   28718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2871c:	cmn	r0, #1
   28720:	bne	28730 <__assert_fail@plt+0x1722c>
   28724:	movw	r0, #0
   28728:	str	r0, [fp, #-4]
   2872c:	b	28a9c <__assert_fail@plt+0x17598>
   28730:	b	28734 <__assert_fail@plt+0x17230>
   28734:	ldr	r0, [fp, #-8]
   28738:	ldr	r0, [r0, #116]	; 0x74
   2873c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28740:	movw	r2, #24
   28744:	mul	r1, r1, r2
   28748:	add	r0, r0, r1
   2874c:	str	r0, [fp, #-36]	; 0xffffffdc
   28750:	ldr	r0, [fp, #-12]
   28754:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28758:	ldr	r1, [r1]
   2875c:	bl	23254 <__assert_fail@plt+0x11d50>
   28760:	cmp	r0, #0
   28764:	bne	2876c <__assert_fail@plt+0x17268>
   28768:	b	28a7c <__assert_fail@plt+0x17578>
   2876c:	ldr	r0, [fp, #-16]
   28770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28774:	ldr	r1, [r1, #12]
   28778:	add	r0, r0, r1
   2877c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28780:	ldr	r1, [r1, #8]
   28784:	sub	r0, r0, r1
   28788:	str	r0, [fp, #-40]	; 0xffffffd8
   2878c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28790:	ldr	r1, [fp, #-16]
   28794:	cmp	r0, r1
   28798:	bne	288bc <__assert_fail@plt+0x173b8>
   2879c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   287a0:	ldr	r0, [r0, #20]
   287a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   287a8:	ldr	r1, [r1]
   287ac:	movw	r2, #12
   287b0:	mul	r1, r1, r2
   287b4:	add	r0, r0, r1
   287b8:	ldr	r0, [r0, #8]
   287bc:	ldr	r0, [r0]
   287c0:	str	r0, [fp, #-44]	; 0xffffffd4
   287c4:	ldr	r0, [fp, #-12]
   287c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   287cc:	bl	23254 <__assert_fail@plt+0x11d50>
   287d0:	cmp	r0, #0
   287d4:	beq	287dc <__assert_fail@plt+0x172d8>
   287d8:	b	28a7c <__assert_fail@plt+0x17578>
   287dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   287e0:	add	r0, sp, #56	; 0x38
   287e4:	bl	21ecc <__assert_fail@plt+0x109c8>
   287e8:	str	r0, [fp, #-28]	; 0xffffffe4
   287ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   287f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   287f4:	ldr	r3, [fp, #8]
   287f8:	add	r1, sp, #56	; 0x38
   287fc:	bl	28534 <__assert_fail@plt+0x17030>
   28800:	str	r0, [sp, #52]	; 0x34
   28804:	ldr	r0, [fp, #-12]
   28808:	add	r1, sp, #56	; 0x38
   2880c:	bl	228ac <__assert_fail@plt+0x113a8>
   28810:	str	r0, [sp, #48]	; 0x30
   28814:	ldr	r0, [sp, #64]	; 0x40
   28818:	bl	35268 <__assert_fail@plt+0x23d64>
   2881c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28820:	cmp	r0, #0
   28824:	movw	r0, #1
   28828:	str	r0, [sp, #24]
   2882c:	bne	28858 <__assert_fail@plt+0x17354>
   28830:	ldr	r0, [sp, #52]	; 0x34
   28834:	cmp	r0, #0
   28838:	movw	r0, #1
   2883c:	str	r0, [sp, #24]
   28840:	bne	28858 <__assert_fail@plt+0x17354>
   28844:	ldr	r0, [sp, #48]	; 0x30
   28848:	cmp	r0, #0
   2884c:	movw	r0, #0
   28850:	movne	r0, #1
   28854:	str	r0, [sp, #24]
   28858:	ldr	r0, [sp, #24]
   2885c:	tst	r0, #1
   28860:	beq	288b8 <__assert_fail@plt+0x173b4>
   28864:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28868:	cmp	r0, #0
   2886c:	beq	2887c <__assert_fail@plt+0x17378>
   28870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28874:	str	r0, [sp, #20]
   28878:	b	288a4 <__assert_fail@plt+0x173a0>
   2887c:	ldr	r0, [sp, #52]	; 0x34
   28880:	cmp	r0, #0
   28884:	beq	28894 <__assert_fail@plt+0x17390>
   28888:	ldr	r0, [sp, #52]	; 0x34
   2888c:	str	r0, [sp, #16]
   28890:	b	2889c <__assert_fail@plt+0x17398>
   28894:	ldr	r0, [sp, #48]	; 0x30
   28898:	str	r0, [sp, #16]
   2889c:	ldr	r0, [sp, #16]
   288a0:	str	r0, [sp, #20]
   288a4:	ldr	r0, [sp, #20]
   288a8:	str	r0, [fp, #-28]	; 0xffffffe4
   288ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   288b0:	str	r0, [fp, #-4]
   288b4:	b	28a9c <__assert_fail@plt+0x17598>
   288b8:	b	28734 <__assert_fail@plt+0x17230>
   288bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   288c0:	ldr	r0, [r0, #12]
   288c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   288c8:	ldr	r1, [r1]
   288cc:	ldr	r0, [r0, r1, lsl #2]
   288d0:	str	r0, [fp, #-44]	; 0xffffffd4
   288d4:	ldr	r0, [fp, #-8]
   288d8:	ldr	r0, [r0, #100]	; 0x64
   288dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   288e0:	add	r0, r0, r1, lsl #2
   288e4:	ldr	r0, [r0]
   288e8:	movw	r1, #0
   288ec:	cmp	r0, r1
   288f0:	beq	289cc <__assert_fail@plt+0x174c8>
   288f4:	ldr	r0, [fp, #-8]
   288f8:	ldr	r0, [r0, #100]	; 0x64
   288fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28900:	add	r0, r0, r1, lsl #2
   28904:	ldr	r0, [r0]
   28908:	add	r0, r0, #4
   2890c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28910:	bl	23254 <__assert_fail@plt+0x11d50>
   28914:	cmp	r0, #0
   28918:	beq	28920 <__assert_fail@plt+0x1741c>
   2891c:	b	28a7c <__assert_fail@plt+0x17578>
   28920:	ldr	r0, [fp, #-8]
   28924:	ldr	r0, [r0, #100]	; 0x64
   28928:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2892c:	add	r0, r0, r1, lsl #2
   28930:	ldr	r0, [r0]
   28934:	add	r1, r0, #4
   28938:	add	r0, sp, #36	; 0x24
   2893c:	bl	23180 <__assert_fail@plt+0x11c7c>
   28940:	str	r0, [fp, #-28]	; 0xffffffe4
   28944:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28948:	add	r0, sp, #36	; 0x24
   2894c:	bl	22d98 <__assert_fail@plt+0x11894>
   28950:	and	r0, r0, #1
   28954:	strb	r0, [sp, #35]	; 0x23
   28958:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2895c:	cmp	r0, #0
   28960:	movw	r0, #1
   28964:	str	r0, [sp, #12]
   28968:	bne	2897c <__assert_fail@plt+0x17478>
   2896c:	ldrb	r0, [sp, #35]	; 0x23
   28970:	mvn	r1, #0
   28974:	eor	r0, r0, r1
   28978:	str	r0, [sp, #12]
   2897c:	ldr	r0, [sp, #12]
   28980:	tst	r0, #1
   28984:	beq	289c8 <__assert_fail@plt+0x174c4>
   28988:	ldr	r0, [sp, #44]	; 0x2c
   2898c:	bl	35268 <__assert_fail@plt+0x23d64>
   28990:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28994:	cmp	r0, #0
   28998:	beq	289a8 <__assert_fail@plt+0x174a4>
   2899c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289a0:	str	r0, [sp, #8]
   289a4:	b	289b4 <__assert_fail@plt+0x174b0>
   289a8:	movw	r0, #12
   289ac:	str	r0, [sp, #8]
   289b0:	b	289b4 <__assert_fail@plt+0x174b0>
   289b4:	ldr	r0, [sp, #8]
   289b8:	str	r0, [fp, #-28]	; 0xffffffe4
   289bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289c0:	str	r0, [fp, #-4]
   289c4:	b	28a9c <__assert_fail@plt+0x17598>
   289c8:	b	289f8 <__assert_fail@plt+0x174f4>
   289cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   289d0:	add	r0, sp, #36	; 0x24
   289d4:	bl	21ecc <__assert_fail@plt+0x109c8>
   289d8:	str	r0, [fp, #-28]	; 0xffffffe4
   289dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289e0:	cmp	r0, #0
   289e4:	beq	289f4 <__assert_fail@plt+0x174f0>
   289e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289ec:	str	r0, [fp, #-4]
   289f0:	b	28a9c <__assert_fail@plt+0x17598>
   289f4:	b	289f8 <__assert_fail@plt+0x174f4>
   289f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   289fc:	sub	r0, fp, #28
   28a00:	add	r2, sp, #36	; 0x24
   28a04:	bl	28f88 <__assert_fail@plt+0x17a84>
   28a08:	ldr	r1, [fp, #-8]
   28a0c:	ldr	r1, [r1, #100]	; 0x64
   28a10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28a14:	str	r0, [r1, r2, lsl #2]
   28a18:	ldr	r0, [sp, #44]	; 0x2c
   28a1c:	bl	35268 <__assert_fail@plt+0x23d64>
   28a20:	ldr	r0, [fp, #-8]
   28a24:	ldr	r0, [r0, #100]	; 0x64
   28a28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28a2c:	add	r0, r0, r1, lsl #2
   28a30:	ldr	r0, [r0]
   28a34:	movw	r1, #0
   28a38:	cmp	r0, r1
   28a3c:	movw	r0, #0
   28a40:	str	r0, [sp, #4]
   28a44:	bne	28a5c <__assert_fail@plt+0x17558>
   28a48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28a4c:	cmp	r0, #0
   28a50:	movw	r0, #0
   28a54:	movne	r0, #1
   28a58:	str	r0, [sp, #4]
   28a5c:	ldr	r0, [sp, #4]
   28a60:	tst	r0, #1
   28a64:	beq	28a74 <__assert_fail@plt+0x17570>
   28a68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28a6c:	str	r0, [fp, #-4]
   28a70:	b	28a9c <__assert_fail@plt+0x17598>
   28a74:	b	28a78 <__assert_fail@plt+0x17574>
   28a78:	b	28a7c <__assert_fail@plt+0x17578>
   28a7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28a80:	add	r1, r0, #24
   28a84:	str	r1, [fp, #-36]	; 0xffffffdc
   28a88:	ldrsb	r0, [r0, #20]
   28a8c:	cmp	r0, #0
   28a90:	bne	28750 <__assert_fail@plt+0x1724c>
   28a94:	movw	r0, #0
   28a98:	str	r0, [fp, #-4]
   28a9c:	ldr	r0, [fp, #-4]
   28aa0:	mov	sp, fp
   28aa4:	pop	{fp, pc}
   28aa8:	push	{fp, lr}
   28aac:	mov	fp, sp
   28ab0:	sub	sp, sp, #80	; 0x50
   28ab4:	str	r0, [fp, #-8]
   28ab8:	str	r1, [fp, #-12]
   28abc:	str	r2, [fp, #-16]
   28ac0:	str	r3, [fp, #-20]	; 0xffffffec
   28ac4:	ldr	r0, [fp, #-8]
   28ac8:	ldr	r0, [r0, #84]	; 0x54
   28acc:	str	r0, [fp, #-24]	; 0xffffffe8
   28ad0:	movw	r0, #0
   28ad4:	str	r0, [fp, #-36]	; 0xffffffdc
   28ad8:	add	r1, sp, #32
   28adc:	str	r0, [sp, #8]
   28ae0:	mov	r0, r1
   28ae4:	movw	r1, #0
   28ae8:	and	r1, r1, #255	; 0xff
   28aec:	movw	r2, #12
   28af0:	bl	11420 <memset@plt>
   28af4:	ldr	r0, [sp, #8]
   28af8:	str	r0, [fp, #-32]	; 0xffffffe0
   28afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28b00:	ldr	r1, [fp, #-16]
   28b04:	ldr	r1, [r1, #4]
   28b08:	cmp	r0, r1
   28b0c:	bge	28d78 <__assert_fail@plt+0x17874>
   28b10:	mov	r0, #0
   28b14:	str	r0, [sp, #28]
   28b18:	ldr	r0, [fp, #-16]
   28b1c:	ldr	r0, [r0, #8]
   28b20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28b24:	ldr	r0, [r0, r1, lsl #2]
   28b28:	str	r0, [sp, #24]
   28b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28b30:	ldr	r0, [r0]
   28b34:	ldr	r1, [sp, #24]
   28b38:	add	r0, r0, r1, lsl #3
   28b3c:	ldr	r0, [r0, #4]
   28b40:	and	r0, r0, #255	; 0xff
   28b44:	and	r0, r0, #8
   28b48:	cmp	r0, #0
   28b4c:	bne	28b54 <__assert_fail@plt+0x17650>
   28b50:	b	28b54 <__assert_fail@plt+0x17650>
   28b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28b58:	ldr	r0, [r0]
   28b5c:	ldr	r1, [sp, #24]
   28b60:	add	r0, r0, r1, lsl #3
   28b64:	ldr	r0, [r0, #4]
   28b68:	lsr	r0, r0, #20
   28b6c:	and	r0, r0, #1
   28b70:	cmp	r0, #0
   28b74:	beq	28ce4 <__assert_fail@plt+0x177e0>
   28b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28b7c:	ldr	r1, [sp, #24]
   28b80:	ldr	r2, [fp, #-8]
   28b84:	ldr	r3, [fp, #-12]
   28b88:	bl	292e0 <__assert_fail@plt+0x17ddc>
   28b8c:	str	r0, [sp, #28]
   28b90:	ldr	r0, [sp, #28]
   28b94:	cmp	r0, #1
   28b98:	ble	28ce0 <__assert_fail@plt+0x177dc>
   28b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28ba0:	ldr	r0, [r0, #12]
   28ba4:	ldr	r1, [sp, #24]
   28ba8:	ldr	r0, [r0, r1, lsl #2]
   28bac:	str	r0, [sp, #16]
   28bb0:	ldr	r0, [fp, #-12]
   28bb4:	ldr	r1, [sp, #28]
   28bb8:	add	r0, r0, r1
   28bbc:	str	r0, [sp, #12]
   28bc0:	ldr	r0, [fp, #-8]
   28bc4:	ldr	r0, [r0, #100]	; 0x64
   28bc8:	ldr	r1, [sp, #12]
   28bcc:	add	r0, r0, r1, lsl #2
   28bd0:	ldr	r0, [r0]
   28bd4:	str	r0, [sp, #20]
   28bd8:	movw	r0, #0
   28bdc:	str	r0, [sp, #36]	; 0x24
   28be0:	ldr	r1, [sp, #20]
   28be4:	cmp	r1, r0
   28be8:	beq	28c24 <__assert_fail@plt+0x17720>
   28bec:	ldr	r0, [sp, #20]
   28bf0:	add	r1, r0, #4
   28bf4:	add	r0, sp, #32
   28bf8:	bl	228ac <__assert_fail@plt+0x113a8>
   28bfc:	str	r0, [fp, #-36]	; 0xffffffdc
   28c00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28c04:	cmp	r0, #0
   28c08:	beq	28c20 <__assert_fail@plt+0x1771c>
   28c0c:	ldr	r0, [sp, #40]	; 0x28
   28c10:	bl	35268 <__assert_fail@plt+0x23d64>
   28c14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28c18:	str	r0, [fp, #-4]
   28c1c:	b	28d88 <__assert_fail@plt+0x17884>
   28c20:	b	28c24 <__assert_fail@plt+0x17720>
   28c24:	ldr	r1, [sp, #16]
   28c28:	add	r0, sp, #32
   28c2c:	bl	22d98 <__assert_fail@plt+0x11894>
   28c30:	and	r0, r0, #1
   28c34:	strb	r0, [fp, #-25]	; 0xffffffe7
   28c38:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   28c3c:	mvn	r1, #0
   28c40:	eor	r0, r0, r1
   28c44:	tst	r0, #1
   28c48:	beq	28c60 <__assert_fail@plt+0x1775c>
   28c4c:	ldr	r0, [sp, #40]	; 0x28
   28c50:	bl	35268 <__assert_fail@plt+0x23d64>
   28c54:	movw	r0, #12
   28c58:	str	r0, [fp, #-4]
   28c5c:	b	28d88 <__assert_fail@plt+0x17884>
   28c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28c64:	sub	r0, fp, #36	; 0x24
   28c68:	add	r2, sp, #32
   28c6c:	bl	28f88 <__assert_fail@plt+0x17a84>
   28c70:	ldr	r1, [fp, #-8]
   28c74:	ldr	r1, [r1, #100]	; 0x64
   28c78:	ldr	r2, [sp, #12]
   28c7c:	str	r0, [r1, r2, lsl #2]
   28c80:	ldr	r0, [fp, #-8]
   28c84:	ldr	r0, [r0, #100]	; 0x64
   28c88:	ldr	r1, [sp, #12]
   28c8c:	add	r0, r0, r1, lsl #2
   28c90:	ldr	r0, [r0]
   28c94:	movw	r1, #0
   28c98:	cmp	r0, r1
   28c9c:	movw	r0, #0
   28ca0:	str	r0, [sp, #4]
   28ca4:	bne	28cbc <__assert_fail@plt+0x177b8>
   28ca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28cac:	cmp	r0, #0
   28cb0:	movw	r0, #0
   28cb4:	movne	r0, #1
   28cb8:	str	r0, [sp, #4]
   28cbc:	ldr	r0, [sp, #4]
   28cc0:	tst	r0, #1
   28cc4:	beq	28cdc <__assert_fail@plt+0x177d8>
   28cc8:	ldr	r0, [sp, #40]	; 0x28
   28ccc:	bl	35268 <__assert_fail@plt+0x23d64>
   28cd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28cd4:	str	r0, [fp, #-4]
   28cd8:	b	28d88 <__assert_fail@plt+0x17884>
   28cdc:	b	28ce0 <__assert_fail@plt+0x177dc>
   28ce0:	b	28ce4 <__assert_fail@plt+0x177e0>
   28ce4:	ldr	r0, [sp, #28]
   28ce8:	cmp	r0, #0
   28cec:	bne	28d14 <__assert_fail@plt+0x17810>
   28cf0:	ldr	r0, [fp, #-8]
   28cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28cf8:	ldr	r1, [r1]
   28cfc:	ldr	r2, [sp, #24]
   28d00:	add	r1, r1, r2, lsl #3
   28d04:	ldr	r2, [fp, #-12]
   28d08:	bl	298c8 <__assert_fail@plt+0x183c4>
   28d0c:	tst	r0, #1
   28d10:	beq	28d64 <__assert_fail@plt+0x17860>
   28d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   28d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28d1c:	ldr	r1, [r1, #12]
   28d20:	ldr	r2, [sp, #24]
   28d24:	add	r1, r1, r2, lsl #2
   28d28:	ldr	r1, [r1]
   28d2c:	bl	22d98 <__assert_fail@plt+0x11894>
   28d30:	and	r0, r0, #1
   28d34:	strb	r0, [fp, #-25]	; 0xffffffe7
   28d38:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   28d3c:	mvn	r1, #0
   28d40:	eor	r0, r0, r1
   28d44:	tst	r0, #1
   28d48:	beq	28d60 <__assert_fail@plt+0x1785c>
   28d4c:	ldr	r0, [sp, #40]	; 0x28
   28d50:	bl	35268 <__assert_fail@plt+0x23d64>
   28d54:	movw	r0, #12
   28d58:	str	r0, [fp, #-4]
   28d5c:	b	28d88 <__assert_fail@plt+0x17884>
   28d60:	b	28d64 <__assert_fail@plt+0x17860>
   28d64:	b	28d68 <__assert_fail@plt+0x17864>
   28d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28d6c:	add	r0, r0, #1
   28d70:	str	r0, [fp, #-32]	; 0xffffffe0
   28d74:	b	28afc <__assert_fail@plt+0x175f8>
   28d78:	ldr	r0, [sp, #40]	; 0x28
   28d7c:	bl	35268 <__assert_fail@plt+0x23d64>
   28d80:	movw	r0, #0
   28d84:	str	r0, [fp, #-4]
   28d88:	ldr	r0, [fp, #-4]
   28d8c:	mov	sp, fp
   28d90:	pop	{fp, pc}
   28d94:	push	{fp, lr}
   28d98:	mov	fp, sp
   28d9c:	sub	sp, sp, #40	; 0x28
   28da0:	ldr	ip, [fp, #8]
   28da4:	str	r0, [fp, #-8]
   28da8:	str	r1, [fp, #-12]
   28dac:	str	r2, [fp, #-16]
   28db0:	str	r3, [sp, #20]
   28db4:	ldr	r0, [fp, #-16]
   28db8:	str	r0, [sp, #16]
   28dbc:	str	ip, [sp, #4]
   28dc0:	ldr	r0, [fp, #-12]
   28dc4:	ldr	r1, [sp, #16]
   28dc8:	bl	23254 <__assert_fail@plt+0x11d50>
   28dcc:	cmp	r0, #0
   28dd0:	movw	r0, #0
   28dd4:	movne	r0, #1
   28dd8:	mvn	r1, #0
   28ddc:	eor	r0, r0, r1
   28de0:	tst	r0, #1
   28de4:	beq	28f74 <__assert_fail@plt+0x17a70>
   28de8:	ldr	r0, [fp, #-8]
   28dec:	ldr	r0, [r0]
   28df0:	ldr	r1, [sp, #16]
   28df4:	add	r0, r0, r1, lsl #3
   28df8:	ldr	r0, [r0, #4]
   28dfc:	and	r0, r0, #255	; 0xff
   28e00:	ldr	r1, [fp, #8]
   28e04:	cmp	r0, r1
   28e08:	bne	28e74 <__assert_fail@plt+0x17970>
   28e0c:	ldr	r0, [fp, #-8]
   28e10:	ldr	r0, [r0]
   28e14:	ldr	r1, [sp, #16]
   28e18:	add	r0, r0, r1, lsl #3
   28e1c:	ldr	r0, [r0]
   28e20:	ldr	r1, [sp, #20]
   28e24:	cmp	r0, r1
   28e28:	bne	28e74 <__assert_fail@plt+0x17970>
   28e2c:	ldr	r0, [fp, #8]
   28e30:	cmp	r0, #9
   28e34:	bne	28e70 <__assert_fail@plt+0x1796c>
   28e38:	ldr	r0, [fp, #-12]
   28e3c:	ldr	r1, [sp, #16]
   28e40:	bl	22d98 <__assert_fail@plt+0x11894>
   28e44:	and	r0, r0, #1
   28e48:	strb	r0, [sp, #15]
   28e4c:	ldrb	r0, [sp, #15]
   28e50:	mvn	r1, #0
   28e54:	eor	r0, r0, r1
   28e58:	tst	r0, #1
   28e5c:	beq	28e6c <__assert_fail@plt+0x17968>
   28e60:	movw	r0, #12
   28e64:	str	r0, [fp, #-4]
   28e68:	b	28f7c <__assert_fail@plt+0x17a78>
   28e6c:	b	28e70 <__assert_fail@plt+0x1796c>
   28e70:	b	28f74 <__assert_fail@plt+0x17a70>
   28e74:	ldr	r0, [fp, #-12]
   28e78:	ldr	r1, [sp, #16]
   28e7c:	bl	22d98 <__assert_fail@plt+0x11894>
   28e80:	and	r0, r0, #1
   28e84:	strb	r0, [sp, #15]
   28e88:	ldrb	r0, [sp, #15]
   28e8c:	mvn	r1, #0
   28e90:	eor	r0, r0, r1
   28e94:	tst	r0, #1
   28e98:	beq	28ea8 <__assert_fail@plt+0x179a4>
   28e9c:	movw	r0, #12
   28ea0:	str	r0, [fp, #-4]
   28ea4:	b	28f7c <__assert_fail@plt+0x17a78>
   28ea8:	ldr	r0, [fp, #-8]
   28eac:	ldr	r0, [r0, #20]
   28eb0:	ldr	r1, [sp, #16]
   28eb4:	movw	r2, #12
   28eb8:	mul	r1, r1, r2
   28ebc:	add	r0, r0, r1
   28ec0:	ldr	r0, [r0, #4]
   28ec4:	cmp	r0, #0
   28ec8:	bne	28ed0 <__assert_fail@plt+0x179cc>
   28ecc:	b	28f74 <__assert_fail@plt+0x17a70>
   28ed0:	ldr	r0, [fp, #-8]
   28ed4:	ldr	r0, [r0, #20]
   28ed8:	ldr	r1, [sp, #16]
   28edc:	movw	r2, #12
   28ee0:	mul	r1, r1, r2
   28ee4:	add	r0, r0, r1
   28ee8:	ldr	r0, [r0, #4]
   28eec:	cmp	r0, #2
   28ef0:	bne	28f4c <__assert_fail@plt+0x17a48>
   28ef4:	ldr	r0, [fp, #-8]
   28ef8:	ldr	r1, [fp, #-12]
   28efc:	ldr	r2, [fp, #-8]
   28f00:	ldr	r2, [r2, #20]
   28f04:	ldr	r3, [sp, #16]
   28f08:	movw	ip, #12
   28f0c:	mul	r3, r3, ip
   28f10:	add	r2, r2, r3
   28f14:	ldr	r2, [r2, #8]
   28f18:	ldr	r2, [r2, #4]
   28f1c:	ldr	r3, [sp, #20]
   28f20:	ldr	ip, [fp, #8]
   28f24:	str	ip, [sp]
   28f28:	bl	28d94 <__assert_fail@plt+0x17890>
   28f2c:	str	r0, [sp, #8]
   28f30:	ldr	r0, [sp, #8]
   28f34:	cmp	r0, #0
   28f38:	beq	28f48 <__assert_fail@plt+0x17a44>
   28f3c:	ldr	r0, [sp, #8]
   28f40:	str	r0, [fp, #-4]
   28f44:	b	28f7c <__assert_fail@plt+0x17a78>
   28f48:	b	28f4c <__assert_fail@plt+0x17a48>
   28f4c:	ldr	r0, [fp, #-8]
   28f50:	ldr	r0, [r0, #20]
   28f54:	ldr	r1, [sp, #16]
   28f58:	movw	r2, #12
   28f5c:	mul	r1, r1, r2
   28f60:	add	r0, r0, r1
   28f64:	ldr	r0, [r0, #8]
   28f68:	ldr	r0, [r0]
   28f6c:	str	r0, [sp, #16]
   28f70:	b	28dc0 <__assert_fail@plt+0x178bc>
   28f74:	movw	r0, #0
   28f78:	str	r0, [fp, #-4]
   28f7c:	ldr	r0, [fp, #-4]
   28f80:	mov	sp, fp
   28f84:	pop	{fp, pc}
   28f88:	push	{fp, lr}
   28f8c:	mov	fp, sp
   28f90:	sub	sp, sp, #40	; 0x28
   28f94:	str	r0, [fp, #-8]
   28f98:	str	r1, [fp, #-12]
   28f9c:	str	r2, [fp, #-16]
   28fa0:	ldr	r0, [fp, #-16]
   28fa4:	ldr	r0, [r0, #4]
   28fa8:	cmp	r0, #0
   28fac:	bne	28fc4 <__assert_fail@plt+0x17ac0>
   28fb0:	ldr	r0, [fp, #-8]
   28fb4:	movw	r1, #0
   28fb8:	str	r1, [r0]
   28fbc:	str	r1, [fp, #-4]
   28fc0:	b	290b8 <__assert_fail@plt+0x17bb4>
   28fc4:	ldr	r0, [fp, #-16]
   28fc8:	movw	r1, #0
   28fcc:	bl	234a0 <__assert_fail@plt+0x11f9c>
   28fd0:	str	r0, [sp, #20]
   28fd4:	ldr	r0, [fp, #-12]
   28fd8:	ldr	r0, [r0, #32]
   28fdc:	ldr	r1, [sp, #20]
   28fe0:	ldr	lr, [fp, #-12]
   28fe4:	ldr	lr, [lr, #68]	; 0x44
   28fe8:	and	r1, r1, lr
   28fec:	movw	lr, #12
   28ff0:	mul	r1, r1, lr
   28ff4:	add	r0, r0, r1
   28ff8:	str	r0, [sp, #12]
   28ffc:	movw	r0, #0
   29000:	str	r0, [sp, #8]
   29004:	ldr	r0, [sp, #8]
   29008:	ldr	r1, [sp, #12]
   2900c:	ldr	r1, [r1]
   29010:	cmp	r0, r1
   29014:	bge	29080 <__assert_fail@plt+0x17b7c>
   29018:	ldr	r0, [sp, #12]
   2901c:	ldr	r0, [r0, #8]
   29020:	ldr	r1, [sp, #8]
   29024:	add	r0, r0, r1, lsl #2
   29028:	ldr	r0, [r0]
   2902c:	str	r0, [sp, #4]
   29030:	ldr	r0, [sp, #20]
   29034:	ldr	r1, [sp, #4]
   29038:	ldr	r1, [r1]
   2903c:	cmp	r0, r1
   29040:	beq	29048 <__assert_fail@plt+0x17b44>
   29044:	b	29070 <__assert_fail@plt+0x17b6c>
   29048:	ldr	r0, [sp, #4]
   2904c:	add	r0, r0, #4
   29050:	ldr	r1, [fp, #-16]
   29054:	bl	23518 <__assert_fail@plt+0x12014>
   29058:	tst	r0, #1
   2905c:	beq	2906c <__assert_fail@plt+0x17b68>
   29060:	ldr	r0, [sp, #4]
   29064:	str	r0, [fp, #-4]
   29068:	b	290b8 <__assert_fail@plt+0x17bb4>
   2906c:	b	29070 <__assert_fail@plt+0x17b6c>
   29070:	ldr	r0, [sp, #8]
   29074:	add	r0, r0, #1
   29078:	str	r0, [sp, #8]
   2907c:	b	29004 <__assert_fail@plt+0x17b00>
   29080:	ldr	r0, [fp, #-12]
   29084:	ldr	r1, [fp, #-16]
   29088:	ldr	r2, [sp, #20]
   2908c:	bl	290c4 <__assert_fail@plt+0x17bc0>
   29090:	str	r0, [sp, #16]
   29094:	ldr	r0, [sp, #16]
   29098:	movw	r1, #0
   2909c:	cmp	r0, r1
   290a0:	bne	290b0 <__assert_fail@plt+0x17bac>
   290a4:	ldr	r0, [fp, #-8]
   290a8:	movw	r1, #12
   290ac:	str	r1, [r0]
   290b0:	ldr	r0, [sp, #16]
   290b4:	str	r0, [fp, #-4]
   290b8:	ldr	r0, [fp, #-4]
   290bc:	mov	sp, fp
   290c0:	pop	{fp, pc}
   290c4:	push	{fp, lr}
   290c8:	mov	fp, sp
   290cc:	sub	sp, sp, #40	; 0x28
   290d0:	str	r0, [fp, #-8]
   290d4:	str	r1, [fp, #-12]
   290d8:	str	r2, [fp, #-16]
   290dc:	movw	r0, #56	; 0x38
   290e0:	movw	r1, #1
   290e4:	bl	33aa8 <__assert_fail@plt+0x225a4>
   290e8:	str	r0, [sp, #12]
   290ec:	ldr	r0, [sp, #12]
   290f0:	movw	r1, #0
   290f4:	cmp	r0, r1
   290f8:	bne	29108 <__assert_fail@plt+0x17c04>
   290fc:	movw	r0, #0
   29100:	str	r0, [fp, #-4]
   29104:	b	292d4 <__assert_fail@plt+0x17dd0>
   29108:	ldr	r0, [sp, #12]
   2910c:	add	r0, r0, #4
   29110:	ldr	r1, [fp, #-12]
   29114:	bl	23180 <__assert_fail@plt+0x11c7c>
   29118:	str	r0, [sp, #16]
   2911c:	ldr	r0, [sp, #16]
   29120:	cmp	r0, #0
   29124:	beq	2913c <__assert_fail@plt+0x17c38>
   29128:	ldr	r0, [sp, #12]
   2912c:	bl	35268 <__assert_fail@plt+0x23d64>
   29130:	movw	r0, #0
   29134:	str	r0, [fp, #-4]
   29138:	b	292d4 <__assert_fail@plt+0x17dd0>
   2913c:	ldr	r0, [sp, #12]
   29140:	add	r0, r0, #4
   29144:	ldr	r1, [sp, #12]
   29148:	str	r0, [r1, #40]	; 0x28
   2914c:	movw	r0, #0
   29150:	str	r0, [sp, #20]
   29154:	ldr	r0, [sp, #20]
   29158:	ldr	r1, [fp, #-12]
   2915c:	ldr	r1, [r1, #4]
   29160:	cmp	r0, r1
   29164:	bge	2929c <__assert_fail@plt+0x17d98>
   29168:	ldr	r0, [fp, #-8]
   2916c:	ldr	r0, [r0]
   29170:	ldr	r1, [fp, #-12]
   29174:	ldr	r1, [r1, #8]
   29178:	ldr	r2, [sp, #20]
   2917c:	ldr	r1, [r1, r2, lsl #2]
   29180:	add	r0, r0, r1, lsl #3
   29184:	str	r0, [sp, #8]
   29188:	ldr	r0, [sp, #8]
   2918c:	ldr	r0, [r0, #4]
   29190:	and	r0, r0, #255	; 0xff
   29194:	str	r0, [sp, #4]
   29198:	ldr	r0, [sp, #4]
   2919c:	cmp	r0, #1
   291a0:	bne	291c4 <__assert_fail@plt+0x17cc0>
   291a4:	ldr	r0, [sp, #8]
   291a8:	ldr	r0, [r0, #4]
   291ac:	lsr	r0, r0, #8
   291b0:	movw	r1, #1023	; 0x3ff
   291b4:	and	r0, r0, r1
   291b8:	cmp	r0, #0
   291bc:	bne	291c4 <__assert_fail@plt+0x17cc0>
   291c0:	b	2928c <__assert_fail@plt+0x17d88>
   291c4:	ldr	r0, [sp, #8]
   291c8:	ldr	r0, [r0, #4]
   291cc:	ldr	r1, [sp, #12]
   291d0:	ldrb	r2, [r1, #52]	; 0x34
   291d4:	lsr	r3, r2, #5
   291d8:	orr	r0, r3, r0, lsr #20
   291dc:	and	r0, r0, #1
   291e0:	lsl	r0, r0, #5
   291e4:	bic	r2, r2, #32
   291e8:	orr	r0, r2, r0
   291ec:	strb	r0, [r1, #52]	; 0x34
   291f0:	ldr	r0, [sp, #4]
   291f4:	cmp	r0, #2
   291f8:	bne	29218 <__assert_fail@plt+0x17d14>
   291fc:	ldr	r0, [sp, #12]
   29200:	ldrb	r1, [r0, #52]	; 0x34
   29204:	bic	r1, r1, #16
   29208:	movw	r2, #16
   2920c:	orr	r1, r1, r2
   29210:	strb	r1, [r0, #52]	; 0x34
   29214:	b	29288 <__assert_fail@plt+0x17d84>
   29218:	ldr	r0, [sp, #4]
   2921c:	cmp	r0, #4
   29220:	bne	29240 <__assert_fail@plt+0x17d3c>
   29224:	ldr	r0, [sp, #12]
   29228:	ldrb	r1, [r0, #52]	; 0x34
   2922c:	bic	r1, r1, #64	; 0x40
   29230:	movw	r2, #64	; 0x40
   29234:	orr	r1, r1, r2
   29238:	strb	r1, [r0, #52]	; 0x34
   2923c:	b	29284 <__assert_fail@plt+0x17d80>
   29240:	ldr	r0, [sp, #4]
   29244:	cmp	r0, #12
   29248:	beq	29268 <__assert_fail@plt+0x17d64>
   2924c:	ldr	r0, [sp, #8]
   29250:	ldr	r0, [r0, #4]
   29254:	lsr	r0, r0, #8
   29258:	movw	r1, #1023	; 0x3ff
   2925c:	and	r0, r0, r1
   29260:	cmp	r0, #0
   29264:	beq	29280 <__assert_fail@plt+0x17d7c>
   29268:	ldr	r0, [sp, #12]
   2926c:	ldrb	r1, [r0, #52]	; 0x34
   29270:	and	r1, r1, #127	; 0x7f
   29274:	movw	r2, #128	; 0x80
   29278:	orr	r1, r1, r2
   2927c:	strb	r1, [r0, #52]	; 0x34
   29280:	b	29284 <__assert_fail@plt+0x17d80>
   29284:	b	29288 <__assert_fail@plt+0x17d84>
   29288:	b	2928c <__assert_fail@plt+0x17d88>
   2928c:	ldr	r0, [sp, #20]
   29290:	add	r0, r0, #1
   29294:	str	r0, [sp, #20]
   29298:	b	29154 <__assert_fail@plt+0x17c50>
   2929c:	ldr	r0, [fp, #-8]
   292a0:	ldr	r1, [sp, #12]
   292a4:	ldr	r2, [fp, #-16]
   292a8:	bl	239c8 <__assert_fail@plt+0x124c4>
   292ac:	str	r0, [sp, #16]
   292b0:	ldr	r0, [sp, #16]
   292b4:	cmp	r0, #0
   292b8:	beq	292cc <__assert_fail@plt+0x17dc8>
   292bc:	ldr	r0, [sp, #12]
   292c0:	bl	18ba0 <__assert_fail@plt+0x769c>
   292c4:	movw	r0, #0
   292c8:	str	r0, [sp, #12]
   292cc:	ldr	r0, [sp, #12]
   292d0:	str	r0, [fp, #-4]
   292d4:	ldr	r0, [fp, #-4]
   292d8:	mov	sp, fp
   292dc:	pop	{fp, pc}
   292e0:	push	{fp, lr}
   292e4:	mov	fp, sp
   292e8:	sub	sp, sp, #72	; 0x48
   292ec:	str	r0, [fp, #-8]
   292f0:	str	r1, [fp, #-12]
   292f4:	str	r2, [fp, #-16]
   292f8:	str	r3, [fp, #-20]	; 0xffffffec
   292fc:	ldr	r0, [fp, #-8]
   29300:	ldr	r0, [r0]
   29304:	ldr	r1, [fp, #-12]
   29308:	add	r0, r0, r1, lsl #3
   2930c:	str	r0, [fp, #-24]	; 0xffffffe8
   29310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29314:	ldr	r0, [r0, #4]
   29318:	and	r0, r0, #255	; 0xff
   2931c:	cmp	r0, #7
   29320:	bne	29590 <__assert_fail@plt+0x1808c>
   29324:	ldr	r0, [fp, #-16]
   29328:	ldr	r0, [r0, #4]
   2932c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29330:	add	r0, r0, r1
   29334:	ldrb	r0, [r0]
   29338:	strb	r0, [sp, #35]	; 0x23
   2933c:	ldrb	r0, [sp, #35]	; 0x23
   29340:	cmp	r0, #194	; 0xc2
   29344:	bge	29354 <__assert_fail@plt+0x17e50>
   29348:	movw	r0, #0
   2934c:	str	r0, [fp, #-4]
   29350:	b	298bc <__assert_fail@plt+0x183b8>
   29354:	ldr	r0, [fp, #-20]	; 0xffffffec
   29358:	add	r0, r0, #2
   2935c:	ldr	r1, [fp, #-16]
   29360:	ldr	r1, [r1, #48]	; 0x30
   29364:	cmp	r0, r1
   29368:	ble	29378 <__assert_fail@plt+0x17e74>
   2936c:	movw	r0, #0
   29370:	str	r0, [fp, #-4]
   29374:	b	298bc <__assert_fail@plt+0x183b8>
   29378:	ldr	r0, [fp, #-16]
   2937c:	ldr	r0, [r0, #4]
   29380:	ldr	r1, [fp, #-20]	; 0xffffffec
   29384:	add	r1, r1, #1
   29388:	add	r0, r0, r1
   2938c:	ldrb	r0, [r0]
   29390:	strb	r0, [sp, #34]	; 0x22
   29394:	ldrb	r0, [sp, #35]	; 0x23
   29398:	cmp	r0, #224	; 0xe0
   2939c:	bge	293e0 <__assert_fail@plt+0x17edc>
   293a0:	ldrb	r0, [sp, #34]	; 0x22
   293a4:	cmp	r0, #128	; 0x80
   293a8:	movw	r0, #1
   293ac:	str	r0, [sp, #12]
   293b0:	blt	293c8 <__assert_fail@plt+0x17ec4>
   293b4:	ldrb	r0, [sp, #34]	; 0x22
   293b8:	cmp	r0, #191	; 0xbf
   293bc:	movw	r0, #0
   293c0:	movgt	r0, #1
   293c4:	str	r0, [sp, #12]
   293c8:	ldr	r0, [sp, #12]
   293cc:	tst	r0, #1
   293d0:	movw	r0, #0
   293d4:	moveq	r0, #2
   293d8:	str	r0, [fp, #-4]
   293dc:	b	298bc <__assert_fail@plt+0x183b8>
   293e0:	ldrb	r0, [sp, #35]	; 0x23
   293e4:	cmp	r0, #240	; 0xf0
   293e8:	bge	2941c <__assert_fail@plt+0x17f18>
   293ec:	movw	r0, #3
   293f0:	str	r0, [fp, #-28]	; 0xffffffe4
   293f4:	ldrb	r0, [sp, #35]	; 0x23
   293f8:	cmp	r0, #224	; 0xe0
   293fc:	bne	29418 <__assert_fail@plt+0x17f14>
   29400:	ldrb	r0, [sp, #34]	; 0x22
   29404:	cmp	r0, #160	; 0xa0
   29408:	bge	29418 <__assert_fail@plt+0x17f14>
   2940c:	movw	r0, #0
   29410:	str	r0, [fp, #-4]
   29414:	b	298bc <__assert_fail@plt+0x183b8>
   29418:	b	294e8 <__assert_fail@plt+0x17fe4>
   2941c:	ldrb	r0, [sp, #35]	; 0x23
   29420:	cmp	r0, #248	; 0xf8
   29424:	bge	29458 <__assert_fail@plt+0x17f54>
   29428:	movw	r0, #4
   2942c:	str	r0, [fp, #-28]	; 0xffffffe4
   29430:	ldrb	r0, [sp, #35]	; 0x23
   29434:	cmp	r0, #240	; 0xf0
   29438:	bne	29454 <__assert_fail@plt+0x17f50>
   2943c:	ldrb	r0, [sp, #34]	; 0x22
   29440:	cmp	r0, #144	; 0x90
   29444:	bge	29454 <__assert_fail@plt+0x17f50>
   29448:	movw	r0, #0
   2944c:	str	r0, [fp, #-4]
   29450:	b	298bc <__assert_fail@plt+0x183b8>
   29454:	b	294e4 <__assert_fail@plt+0x17fe0>
   29458:	ldrb	r0, [sp, #35]	; 0x23
   2945c:	cmp	r0, #252	; 0xfc
   29460:	bge	29494 <__assert_fail@plt+0x17f90>
   29464:	movw	r0, #5
   29468:	str	r0, [fp, #-28]	; 0xffffffe4
   2946c:	ldrb	r0, [sp, #35]	; 0x23
   29470:	cmp	r0, #248	; 0xf8
   29474:	bne	29490 <__assert_fail@plt+0x17f8c>
   29478:	ldrb	r0, [sp, #34]	; 0x22
   2947c:	cmp	r0, #136	; 0x88
   29480:	bge	29490 <__assert_fail@plt+0x17f8c>
   29484:	movw	r0, #0
   29488:	str	r0, [fp, #-4]
   2948c:	b	298bc <__assert_fail@plt+0x183b8>
   29490:	b	294e0 <__assert_fail@plt+0x17fdc>
   29494:	ldrb	r0, [sp, #35]	; 0x23
   29498:	cmp	r0, #254	; 0xfe
   2949c:	bge	294d0 <__assert_fail@plt+0x17fcc>
   294a0:	movw	r0, #6
   294a4:	str	r0, [fp, #-28]	; 0xffffffe4
   294a8:	ldrb	r0, [sp, #35]	; 0x23
   294ac:	cmp	r0, #252	; 0xfc
   294b0:	bne	294cc <__assert_fail@plt+0x17fc8>
   294b4:	ldrb	r0, [sp, #34]	; 0x22
   294b8:	cmp	r0, #132	; 0x84
   294bc:	bge	294cc <__assert_fail@plt+0x17fc8>
   294c0:	movw	r0, #0
   294c4:	str	r0, [fp, #-4]
   294c8:	b	298bc <__assert_fail@plt+0x183b8>
   294cc:	b	294dc <__assert_fail@plt+0x17fd8>
   294d0:	movw	r0, #0
   294d4:	str	r0, [fp, #-4]
   294d8:	b	298bc <__assert_fail@plt+0x183b8>
   294dc:	b	294e0 <__assert_fail@plt+0x17fdc>
   294e0:	b	294e4 <__assert_fail@plt+0x17fe0>
   294e4:	b	294e8 <__assert_fail@plt+0x17fe4>
   294e8:	b	294ec <__assert_fail@plt+0x17fe8>
   294ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   294f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   294f4:	add	r0, r0, r1
   294f8:	ldr	r1, [fp, #-16]
   294fc:	ldr	r1, [r1, #48]	; 0x30
   29500:	cmp	r0, r1
   29504:	ble	29514 <__assert_fail@plt+0x18010>
   29508:	movw	r0, #0
   2950c:	str	r0, [fp, #-4]
   29510:	b	298bc <__assert_fail@plt+0x183b8>
   29514:	movw	r0, #1
   29518:	str	r0, [sp, #36]	; 0x24
   2951c:	ldr	r0, [sp, #36]	; 0x24
   29520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29524:	cmp	r0, r1
   29528:	bge	29584 <__assert_fail@plt+0x18080>
   2952c:	ldr	r0, [fp, #-16]
   29530:	ldr	r0, [r0, #4]
   29534:	ldr	r1, [fp, #-20]	; 0xffffffec
   29538:	ldr	r2, [sp, #36]	; 0x24
   2953c:	add	r1, r1, r2
   29540:	add	r0, r0, r1
   29544:	ldrb	r0, [r0]
   29548:	strb	r0, [sp, #34]	; 0x22
   2954c:	ldrb	r0, [sp, #34]	; 0x22
   29550:	cmp	r0, #128	; 0x80
   29554:	blt	29564 <__assert_fail@plt+0x18060>
   29558:	ldrb	r0, [sp, #34]	; 0x22
   2955c:	cmp	r0, #191	; 0xbf
   29560:	ble	29570 <__assert_fail@plt+0x1806c>
   29564:	movw	r0, #0
   29568:	str	r0, [fp, #-4]
   2956c:	b	298bc <__assert_fail@plt+0x183b8>
   29570:	b	29574 <__assert_fail@plt+0x18070>
   29574:	ldr	r0, [sp, #36]	; 0x24
   29578:	add	r0, r0, #1
   2957c:	str	r0, [sp, #36]	; 0x24
   29580:	b	2951c <__assert_fail@plt+0x18018>
   29584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29588:	str	r0, [fp, #-4]
   2958c:	b	298bc <__assert_fail@plt+0x183b8>
   29590:	ldr	r0, [fp, #-16]
   29594:	ldr	r1, [fp, #-20]	; 0xffffffec
   29598:	bl	2063c <__assert_fail@plt+0xf138>
   2959c:	str	r0, [fp, #-28]	; 0xffffffe4
   295a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   295a4:	ldr	r0, [r0, #4]
   295a8:	and	r0, r0, #255	; 0xff
   295ac:	cmp	r0, #5
   295b0:	bne	29644 <__assert_fail@plt+0x18140>
   295b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   295b8:	cmp	r0, #1
   295bc:	bgt	295cc <__assert_fail@plt+0x180c8>
   295c0:	movw	r0, #0
   295c4:	str	r0, [fp, #-4]
   295c8:	b	298bc <__assert_fail@plt+0x183b8>
   295cc:	ldr	r0, [fp, #-8]
   295d0:	ldr	r0, [r0, #128]	; 0x80
   295d4:	and	r0, r0, #64	; 0x40
   295d8:	cmp	r0, #0
   295dc:	bne	295fc <__assert_fail@plt+0x180f8>
   295e0:	ldr	r0, [fp, #-16]
   295e4:	ldr	r0, [r0, #4]
   295e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   295ec:	add	r0, r0, r1
   295f0:	ldrb	r0, [r0]
   295f4:	cmp	r0, #10
   295f8:	beq	2962c <__assert_fail@plt+0x18128>
   295fc:	ldr	r0, [fp, #-8]
   29600:	ldr	r0, [r0, #128]	; 0x80
   29604:	and	r0, r0, #128	; 0x80
   29608:	cmp	r0, #0
   2960c:	beq	29638 <__assert_fail@plt+0x18134>
   29610:	ldr	r0, [fp, #-16]
   29614:	ldr	r0, [r0, #4]
   29618:	ldr	r1, [fp, #-20]	; 0xffffffec
   2961c:	add	r0, r0, r1
   29620:	ldrb	r0, [r0]
   29624:	cmp	r0, #0
   29628:	bne	29638 <__assert_fail@plt+0x18134>
   2962c:	movw	r0, #0
   29630:	str	r0, [fp, #-4]
   29634:	b	298bc <__assert_fail@plt+0x183b8>
   29638:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2963c:	str	r0, [fp, #-4]
   29640:	b	298bc <__assert_fail@plt+0x183b8>
   29644:	ldr	r0, [fp, #-16]
   29648:	ldr	r1, [fp, #-20]	; 0xffffffec
   2964c:	bl	29b3c <__assert_fail@plt+0x18638>
   29650:	str	r0, [fp, #-32]	; 0xffffffe0
   29654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29658:	cmp	r0, #1
   2965c:	bgt	2966c <__assert_fail@plt+0x18168>
   29660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29664:	cmp	r0, #1
   29668:	ble	29678 <__assert_fail@plt+0x18174>
   2966c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29670:	cmp	r0, #0
   29674:	bne	29684 <__assert_fail@plt+0x18180>
   29678:	movw	r0, #0
   2967c:	str	r0, [fp, #-4]
   29680:	b	298bc <__assert_fail@plt+0x183b8>
   29684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29688:	ldr	r0, [r0, #4]
   2968c:	and	r0, r0, #255	; 0xff
   29690:	cmp	r0, #6
   29694:	bne	298b4 <__assert_fail@plt+0x183b0>
   29698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2969c:	ldr	r0, [r0]
   296a0:	str	r0, [sp, #28]
   296a4:	movw	r0, #0
   296a8:	str	r0, [sp, #24]
   296ac:	ldr	r0, [sp, #28]
   296b0:	ldr	r0, [r0, #32]
   296b4:	cmp	r0, #0
   296b8:	bne	296dc <__assert_fail@plt+0x181d8>
   296bc:	ldr	r0, [sp, #28]
   296c0:	ldr	r0, [r0, #36]	; 0x24
   296c4:	cmp	r0, #0
   296c8:	bne	296dc <__assert_fail@plt+0x181d8>
   296cc:	ldr	r0, [sp, #28]
   296d0:	ldr	r0, [r0, #20]
   296d4:	cmp	r0, #0
   296d8:	beq	296f0 <__assert_fail@plt+0x181ec>
   296dc:	ldr	r0, [fp, #-16]
   296e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   296e4:	bl	1c71c <__assert_fail@plt+0xb218>
   296e8:	str	r0, [sp, #8]
   296ec:	b	296fc <__assert_fail@plt+0x181f8>
   296f0:	movw	r0, #0
   296f4:	str	r0, [sp, #8]
   296f8:	b	296fc <__assert_fail@plt+0x181f8>
   296fc:	ldr	r0, [sp, #8]
   29700:	str	r0, [sp, #20]
   29704:	movw	r0, #0
   29708:	str	r0, [sp, #36]	; 0x24
   2970c:	ldr	r0, [sp, #36]	; 0x24
   29710:	ldr	r1, [sp, #28]
   29714:	ldr	r1, [r1, #20]
   29718:	cmp	r0, r1
   2971c:	bge	29760 <__assert_fail@plt+0x1825c>
   29720:	ldr	r0, [sp, #20]
   29724:	ldr	r1, [sp, #28]
   29728:	ldr	r1, [r1]
   2972c:	ldr	r2, [sp, #36]	; 0x24
   29730:	add	r1, r1, r2, lsl #2
   29734:	ldr	r1, [r1]
   29738:	cmp	r0, r1
   2973c:	bne	2974c <__assert_fail@plt+0x18248>
   29740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29744:	str	r0, [sp, #24]
   29748:	b	29848 <__assert_fail@plt+0x18344>
   2974c:	b	29750 <__assert_fail@plt+0x1824c>
   29750:	ldr	r0, [sp, #36]	; 0x24
   29754:	add	r0, r0, #1
   29758:	str	r0, [sp, #36]	; 0x24
   2975c:	b	2970c <__assert_fail@plt+0x18208>
   29760:	movw	r0, #0
   29764:	str	r0, [sp, #36]	; 0x24
   29768:	ldr	r0, [sp, #36]	; 0x24
   2976c:	ldr	r1, [sp, #28]
   29770:	ldr	r1, [r1, #36]	; 0x24
   29774:	cmp	r0, r1
   29778:	bge	297c8 <__assert_fail@plt+0x182c4>
   2977c:	ldr	r0, [sp, #28]
   29780:	ldr	r0, [r0, #12]
   29784:	ldr	r1, [sp, #36]	; 0x24
   29788:	add	r0, r0, r1, lsl #2
   2978c:	ldr	r0, [r0]
   29790:	str	r0, [sp, #16]
   29794:	ldr	r0, [sp, #20]
   29798:	ldr	r1, [sp, #16]
   2979c:	bl	11228 <iswctype@plt>
   297a0:	cmp	r0, #0
   297a4:	beq	297b4 <__assert_fail@plt+0x182b0>
   297a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   297ac:	str	r0, [sp, #24]
   297b0:	b	29848 <__assert_fail@plt+0x18344>
   297b4:	b	297b8 <__assert_fail@plt+0x182b4>
   297b8:	ldr	r0, [sp, #36]	; 0x24
   297bc:	add	r0, r0, #1
   297c0:	str	r0, [sp, #36]	; 0x24
   297c4:	b	29768 <__assert_fail@plt+0x18264>
   297c8:	movw	r0, #0
   297cc:	str	r0, [sp, #36]	; 0x24
   297d0:	ldr	r0, [sp, #36]	; 0x24
   297d4:	ldr	r1, [sp, #28]
   297d8:	ldr	r1, [r1, #32]
   297dc:	cmp	r0, r1
   297e0:	bge	29844 <__assert_fail@plt+0x18340>
   297e4:	ldr	r0, [sp, #28]
   297e8:	ldr	r0, [r0, #4]
   297ec:	ldr	r1, [sp, #36]	; 0x24
   297f0:	add	r0, r0, r1, lsl #2
   297f4:	ldr	r0, [r0]
   297f8:	ldr	r1, [sp, #20]
   297fc:	cmp	r0, r1
   29800:	bhi	29830 <__assert_fail@plt+0x1832c>
   29804:	ldr	r0, [sp, #20]
   29808:	ldr	r1, [sp, #28]
   2980c:	ldr	r1, [r1, #8]
   29810:	ldr	r2, [sp, #36]	; 0x24
   29814:	add	r1, r1, r2, lsl #2
   29818:	ldr	r1, [r1]
   2981c:	cmp	r0, r1
   29820:	bhi	29830 <__assert_fail@plt+0x1832c>
   29824:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29828:	str	r0, [sp, #24]
   2982c:	b	29848 <__assert_fail@plt+0x18344>
   29830:	b	29834 <__assert_fail@plt+0x18330>
   29834:	ldr	r0, [sp, #36]	; 0x24
   29838:	add	r0, r0, #1
   2983c:	str	r0, [sp, #36]	; 0x24
   29840:	b	297d0 <__assert_fail@plt+0x182cc>
   29844:	b	29848 <__assert_fail@plt+0x18344>
   29848:	ldr	r0, [sp, #28]
   2984c:	ldrb	r0, [r0, #16]
   29850:	and	r0, r0, #1
   29854:	and	r0, r0, #255	; 0xff
   29858:	cmp	r0, #0
   2985c:	bne	2986c <__assert_fail@plt+0x18368>
   29860:	ldr	r0, [sp, #24]
   29864:	str	r0, [fp, #-4]
   29868:	b	298bc <__assert_fail@plt+0x183b8>
   2986c:	ldr	r0, [sp, #24]
   29870:	cmp	r0, #0
   29874:	ble	29884 <__assert_fail@plt+0x18380>
   29878:	movw	r0, #0
   2987c:	str	r0, [fp, #-4]
   29880:	b	298bc <__assert_fail@plt+0x183b8>
   29884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29888:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2988c:	cmp	r0, r1
   29890:	ble	298a0 <__assert_fail@plt+0x1839c>
   29894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29898:	str	r0, [sp, #4]
   2989c:	b	298a8 <__assert_fail@plt+0x183a4>
   298a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   298a4:	str	r0, [sp, #4]
   298a8:	ldr	r0, [sp, #4]
   298ac:	str	r0, [fp, #-4]
   298b0:	b	298bc <__assert_fail@plt+0x183b8>
   298b4:	movw	r0, #0
   298b8:	str	r0, [fp, #-4]
   298bc:	ldr	r0, [fp, #-4]
   298c0:	mov	sp, fp
   298c4:	pop	{fp, pc}
   298c8:	push	{fp, lr}
   298cc:	mov	fp, sp
   298d0:	sub	sp, sp, #32
   298d4:	str	r0, [fp, #-8]
   298d8:	str	r1, [fp, #-12]
   298dc:	str	r2, [sp, #16]
   298e0:	ldr	r0, [fp, #-8]
   298e4:	ldr	r0, [r0, #4]
   298e8:	ldr	r1, [sp, #16]
   298ec:	ldrb	r0, [r0, r1]
   298f0:	strb	r0, [sp, #15]
   298f4:	ldr	r0, [fp, #-12]
   298f8:	ldrb	r0, [r0, #4]
   298fc:	sub	r0, r0, #1
   29900:	cmp	r0, #6
   29904:	str	r0, [sp, #4]
   29908:	bhi	29a08 <__assert_fail@plt+0x18504>
   2990c:	add	r0, pc, #8
   29910:	ldr	r1, [sp, #4]
   29914:	ldr	r0, [r0, r1, lsl #2]
   29918:	mov	pc, r0
   2991c:	andeq	r9, r2, r8, lsr r9
   29920:	andeq	r9, r2, r8, lsl #20
   29924:	andeq	r9, r2, r0, ror #18
   29928:	andeq	r9, r2, r8, lsl #20
   2992c:	andeq	r9, r2, ip, lsr #19
   29930:	andeq	r9, r2, r8, lsl #20
   29934:	andeq	r9, r2, ip, lsl #19
   29938:	ldr	r0, [fp, #-12]
   2993c:	ldrb	r0, [r0]
   29940:	ldrb	r1, [sp, #15]
   29944:	cmp	r0, r1
   29948:	beq	2995c <__assert_fail@plt+0x18458>
   2994c:	movw	r0, #0
   29950:	and	r0, r0, #1
   29954:	strb	r0, [fp, #-1]
   29958:	b	29b2c <__assert_fail@plt+0x18628>
   2995c:	b	29a18 <__assert_fail@plt+0x18514>
   29960:	ldr	r0, [fp, #-12]
   29964:	ldr	r0, [r0]
   29968:	ldrb	r1, [sp, #15]
   2996c:	bl	25f04 <__assert_fail@plt+0x14a00>
   29970:	tst	r0, #1
   29974:	bne	29988 <__assert_fail@plt+0x18484>
   29978:	movw	r0, #0
   2997c:	and	r0, r0, #1
   29980:	strb	r0, [fp, #-1]
   29984:	b	29b2c <__assert_fail@plt+0x18628>
   29988:	b	29a18 <__assert_fail@plt+0x18514>
   2998c:	ldrb	r0, [sp, #15]
   29990:	cmp	r0, #128	; 0x80
   29994:	blt	299a8 <__assert_fail@plt+0x184a4>
   29998:	movw	r0, #0
   2999c:	and	r0, r0, #1
   299a0:	strb	r0, [fp, #-1]
   299a4:	b	29b2c <__assert_fail@plt+0x18628>
   299a8:	b	299ac <__assert_fail@plt+0x184a8>
   299ac:	ldrb	r0, [sp, #15]
   299b0:	cmp	r0, #10
   299b4:	bne	299d0 <__assert_fail@plt+0x184cc>
   299b8:	ldr	r0, [fp, #-8]
   299bc:	ldr	r0, [r0, #84]	; 0x54
   299c0:	ldr	r0, [r0, #128]	; 0x80
   299c4:	and	r0, r0, #64	; 0x40
   299c8:	cmp	r0, #0
   299cc:	beq	299f4 <__assert_fail@plt+0x184f0>
   299d0:	ldrb	r0, [sp, #15]
   299d4:	cmp	r0, #0
   299d8:	bne	29a04 <__assert_fail@plt+0x18500>
   299dc:	ldr	r0, [fp, #-8]
   299e0:	ldr	r0, [r0, #84]	; 0x54
   299e4:	ldr	r0, [r0, #128]	; 0x80
   299e8:	and	r0, r0, #128	; 0x80
   299ec:	cmp	r0, #0
   299f0:	beq	29a04 <__assert_fail@plt+0x18500>
   299f4:	movw	r0, #0
   299f8:	and	r0, r0, #1
   299fc:	strb	r0, [fp, #-1]
   29a00:	b	29b2c <__assert_fail@plt+0x18628>
   29a04:	b	29a18 <__assert_fail@plt+0x18514>
   29a08:	movw	r0, #0
   29a0c:	and	r0, r0, #1
   29a10:	strb	r0, [fp, #-1]
   29a14:	b	29b2c <__assert_fail@plt+0x18628>
   29a18:	ldr	r0, [fp, #-12]
   29a1c:	ldr	r0, [r0, #4]
   29a20:	lsr	r0, r0, #8
   29a24:	movw	r1, #1023	; 0x3ff
   29a28:	and	r0, r0, r1
   29a2c:	cmp	r0, #0
   29a30:	beq	29b20 <__assert_fail@plt+0x1861c>
   29a34:	ldr	r0, [fp, #-8]
   29a38:	ldr	r1, [sp, #16]
   29a3c:	ldr	r2, [fp, #-8]
   29a40:	ldr	r2, [r2, #88]	; 0x58
   29a44:	bl	25b94 <__assert_fail@plt+0x14690>
   29a48:	str	r0, [sp, #8]
   29a4c:	ldr	r0, [fp, #-12]
   29a50:	ldr	r0, [r0, #4]
   29a54:	lsr	r0, r0, #8
   29a58:	movw	r1, #1023	; 0x3ff
   29a5c:	and	r0, r0, r1
   29a60:	and	r0, r0, #4
   29a64:	cmp	r0, #0
   29a68:	beq	29a7c <__assert_fail@plt+0x18578>
   29a6c:	ldr	r0, [sp, #8]
   29a70:	and	r0, r0, #1
   29a74:	cmp	r0, #0
   29a78:	beq	29b0c <__assert_fail@plt+0x18608>
   29a7c:	ldr	r0, [fp, #-12]
   29a80:	ldr	r0, [r0, #4]
   29a84:	lsr	r0, r0, #8
   29a88:	movw	r1, #1023	; 0x3ff
   29a8c:	and	r0, r0, r1
   29a90:	and	r0, r0, #8
   29a94:	cmp	r0, #0
   29a98:	beq	29aac <__assert_fail@plt+0x185a8>
   29a9c:	ldr	r0, [sp, #8]
   29aa0:	and	r0, r0, #1
   29aa4:	cmp	r0, #0
   29aa8:	bne	29b0c <__assert_fail@plt+0x18608>
   29aac:	ldr	r0, [fp, #-12]
   29ab0:	ldr	r0, [r0, #4]
   29ab4:	lsr	r0, r0, #8
   29ab8:	movw	r1, #1023	; 0x3ff
   29abc:	and	r0, r0, r1
   29ac0:	and	r0, r0, #32
   29ac4:	cmp	r0, #0
   29ac8:	beq	29adc <__assert_fail@plt+0x185d8>
   29acc:	ldr	r0, [sp, #8]
   29ad0:	and	r0, r0, #2
   29ad4:	cmp	r0, #0
   29ad8:	beq	29b0c <__assert_fail@plt+0x18608>
   29adc:	ldr	r0, [fp, #-12]
   29ae0:	ldr	r0, [r0, #4]
   29ae4:	lsr	r0, r0, #8
   29ae8:	movw	r1, #1023	; 0x3ff
   29aec:	and	r0, r0, r1
   29af0:	and	r0, r0, #128	; 0x80
   29af4:	cmp	r0, #0
   29af8:	beq	29b1c <__assert_fail@plt+0x18618>
   29afc:	ldr	r0, [sp, #8]
   29b00:	and	r0, r0, #8
   29b04:	cmp	r0, #0
   29b08:	bne	29b1c <__assert_fail@plt+0x18618>
   29b0c:	movw	r0, #0
   29b10:	and	r0, r0, #1
   29b14:	strb	r0, [fp, #-1]
   29b18:	b	29b2c <__assert_fail@plt+0x18628>
   29b1c:	b	29b20 <__assert_fail@plt+0x1861c>
   29b20:	movw	r0, #1
   29b24:	and	r0, r0, #1
   29b28:	strb	r0, [fp, #-1]
   29b2c:	ldrb	r0, [fp, #-1]
   29b30:	and	r0, r0, #1
   29b34:	mov	sp, fp
   29b38:	pop	{fp, pc}
   29b3c:	sub	sp, sp, #8
   29b40:	str	r0, [sp, #4]
   29b44:	str	r1, [sp]
   29b48:	movw	r0, #1
   29b4c:	add	sp, sp, #8
   29b50:	bx	lr
   29b54:	push	{fp, lr}
   29b58:	mov	fp, sp
   29b5c:	sub	sp, sp, #72	; 0x48
   29b60:	str	r0, [fp, #-8]
   29b64:	str	r1, [fp, #-12]
   29b68:	ldr	r0, [fp, #-8]
   29b6c:	ldr	r0, [r0, #84]	; 0x54
   29b70:	str	r0, [fp, #-16]
   29b74:	movw	r0, #0
   29b78:	str	r0, [fp, #-24]	; 0xffffffe8
   29b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29b80:	ldr	r1, [fp, #-12]
   29b84:	ldr	r1, [r1, #8]
   29b88:	cmp	r0, r1
   29b8c:	bge	29f1c <__assert_fail@plt+0x18a18>
   29b90:	ldr	r0, [fp, #-12]
   29b94:	ldr	r0, [r0, #12]
   29b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29b9c:	ldr	r0, [r0, r1, lsl #2]
   29ba0:	str	r0, [sp, #28]
   29ba4:	ldr	r0, [fp, #-16]
   29ba8:	ldr	r0, [r0]
   29bac:	ldr	r1, [sp, #28]
   29bb0:	add	r0, r0, r1, lsl #3
   29bb4:	ldr	r0, [r0, #4]
   29bb8:	lsr	r0, r0, #20
   29bbc:	and	r0, r0, #1
   29bc0:	cmp	r0, #0
   29bc4:	bne	29bcc <__assert_fail@plt+0x186c8>
   29bc8:	b	29f0c <__assert_fail@plt+0x18a08>
   29bcc:	ldr	r0, [fp, #-16]
   29bd0:	ldr	r0, [r0]
   29bd4:	ldr	r1, [sp, #28]
   29bd8:	add	r0, r0, r1, lsl #3
   29bdc:	ldr	r0, [r0, #4]
   29be0:	lsr	r0, r0, #8
   29be4:	movw	r1, #1023	; 0x3ff
   29be8:	and	r0, r0, r1
   29bec:	cmp	r0, #0
   29bf0:	beq	29d00 <__assert_fail@plt+0x187fc>
   29bf4:	ldr	r0, [fp, #-8]
   29bf8:	ldr	r1, [r0, #40]	; 0x28
   29bfc:	ldr	r2, [r0, #88]	; 0x58
   29c00:	bl	25b94 <__assert_fail@plt+0x14690>
   29c04:	str	r0, [sp, #16]
   29c08:	ldr	r0, [fp, #-16]
   29c0c:	ldr	r0, [r0]
   29c10:	ldr	r1, [sp, #28]
   29c14:	add	r0, r0, r1, lsl #3
   29c18:	ldr	r0, [r0, #4]
   29c1c:	lsr	r0, r0, #8
   29c20:	movw	r1, #1023	; 0x3ff
   29c24:	and	r0, r0, r1
   29c28:	and	r0, r0, #4
   29c2c:	cmp	r0, #0
   29c30:	beq	29c44 <__assert_fail@plt+0x18740>
   29c34:	ldr	r0, [sp, #16]
   29c38:	and	r0, r0, #1
   29c3c:	cmp	r0, #0
   29c40:	beq	29cf8 <__assert_fail@plt+0x187f4>
   29c44:	ldr	r0, [fp, #-16]
   29c48:	ldr	r0, [r0]
   29c4c:	ldr	r1, [sp, #28]
   29c50:	add	r0, r0, r1, lsl #3
   29c54:	ldr	r0, [r0, #4]
   29c58:	lsr	r0, r0, #8
   29c5c:	movw	r1, #1023	; 0x3ff
   29c60:	and	r0, r0, r1
   29c64:	and	r0, r0, #8
   29c68:	cmp	r0, #0
   29c6c:	beq	29c80 <__assert_fail@plt+0x1877c>
   29c70:	ldr	r0, [sp, #16]
   29c74:	and	r0, r0, #1
   29c78:	cmp	r0, #0
   29c7c:	bne	29cf8 <__assert_fail@plt+0x187f4>
   29c80:	ldr	r0, [fp, #-16]
   29c84:	ldr	r0, [r0]
   29c88:	ldr	r1, [sp, #28]
   29c8c:	add	r0, r0, r1, lsl #3
   29c90:	ldr	r0, [r0, #4]
   29c94:	lsr	r0, r0, #8
   29c98:	movw	r1, #1023	; 0x3ff
   29c9c:	and	r0, r0, r1
   29ca0:	and	r0, r0, #32
   29ca4:	cmp	r0, #0
   29ca8:	beq	29cbc <__assert_fail@plt+0x187b8>
   29cac:	ldr	r0, [sp, #16]
   29cb0:	and	r0, r0, #2
   29cb4:	cmp	r0, #0
   29cb8:	beq	29cf8 <__assert_fail@plt+0x187f4>
   29cbc:	ldr	r0, [fp, #-16]
   29cc0:	ldr	r0, [r0]
   29cc4:	ldr	r1, [sp, #28]
   29cc8:	add	r0, r0, r1, lsl #3
   29ccc:	ldr	r0, [r0, #4]
   29cd0:	lsr	r0, r0, #8
   29cd4:	movw	r1, #1023	; 0x3ff
   29cd8:	and	r0, r0, r1
   29cdc:	and	r0, r0, #128	; 0x80
   29ce0:	cmp	r0, #0
   29ce4:	beq	29cfc <__assert_fail@plt+0x187f8>
   29ce8:	ldr	r0, [sp, #16]
   29cec:	and	r0, r0, #8
   29cf0:	cmp	r0, #0
   29cf4:	bne	29cfc <__assert_fail@plt+0x187f8>
   29cf8:	b	29f0c <__assert_fail@plt+0x18a08>
   29cfc:	b	29d00 <__assert_fail@plt+0x187fc>
   29d00:	ldr	r0, [fp, #-16]
   29d04:	ldr	r1, [sp, #28]
   29d08:	ldr	r2, [fp, #-8]
   29d0c:	ldr	r3, [fp, #-8]
   29d10:	ldr	r3, [r3, #40]	; 0x28
   29d14:	bl	292e0 <__assert_fail@plt+0x17ddc>
   29d18:	str	r0, [sp, #24]
   29d1c:	ldr	r0, [sp, #24]
   29d20:	cmp	r0, #0
   29d24:	bne	29d2c <__assert_fail@plt+0x18828>
   29d28:	b	29f0c <__assert_fail@plt+0x18a08>
   29d2c:	ldr	r0, [fp, #-8]
   29d30:	ldr	r0, [r0, #40]	; 0x28
   29d34:	ldr	r1, [sp, #24]
   29d38:	add	r0, r0, r1
   29d3c:	str	r0, [sp, #20]
   29d40:	ldr	r0, [fp, #-8]
   29d44:	ldr	r0, [r0, #120]	; 0x78
   29d48:	ldr	r1, [sp, #24]
   29d4c:	cmp	r0, r1
   29d50:	bge	29d60 <__assert_fail@plt+0x1885c>
   29d54:	ldr	r0, [sp, #24]
   29d58:	str	r0, [sp, #8]
   29d5c:	b	29d6c <__assert_fail@plt+0x18868>
   29d60:	ldr	r0, [fp, #-8]
   29d64:	ldr	r0, [r0, #120]	; 0x78
   29d68:	str	r0, [sp, #8]
   29d6c:	ldr	r0, [sp, #8]
   29d70:	ldr	r1, [fp, #-8]
   29d74:	str	r0, [r1, #120]	; 0x78
   29d78:	ldr	r0, [fp, #-8]
   29d7c:	ldr	r1, [sp, #20]
   29d80:	bl	277c4 <__assert_fail@plt+0x162c0>
   29d84:	str	r0, [fp, #-20]	; 0xffffffec
   29d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   29d8c:	cmp	r0, #0
   29d90:	beq	29da0 <__assert_fail@plt+0x1889c>
   29d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   29d98:	str	r0, [fp, #-4]
   29d9c:	b	29f24 <__assert_fail@plt+0x18a20>
   29da0:	ldr	r0, [fp, #-16]
   29da4:	ldr	r0, [r0, #12]
   29da8:	ldr	r1, [sp, #28]
   29dac:	add	r0, r0, r1, lsl #2
   29db0:	ldr	r0, [r0]
   29db4:	cmn	r0, #1
   29db8:	beq	29dc0 <__assert_fail@plt+0x188bc>
   29dbc:	b	29dc0 <__assert_fail@plt+0x188bc>
   29dc0:	ldr	r0, [fp, #-16]
   29dc4:	ldr	r1, [r0, #12]
   29dc8:	ldr	r0, [r0, #24]
   29dcc:	ldr	r2, [sp, #28]
   29dd0:	ldr	r1, [r1, r2, lsl #2]
   29dd4:	add	r1, r1, r1, lsl #1
   29dd8:	add	r0, r0, r1, lsl #2
   29ddc:	str	r0, [sp, #32]
   29de0:	ldr	r0, [fp, #-8]
   29de4:	ldr	r0, [r0, #100]	; 0x64
   29de8:	ldr	r1, [sp, #20]
   29dec:	add	r0, r0, r1, lsl #2
   29df0:	ldr	r0, [r0]
   29df4:	str	r0, [sp, #12]
   29df8:	ldr	r0, [sp, #12]
   29dfc:	movw	r1, #0
   29e00:	cmp	r0, r1
   29e04:	bne	29e28 <__assert_fail@plt+0x18924>
   29e08:	ldr	r0, [sp, #32]
   29e0c:	ldr	r1, [r0]
   29e10:	str	r1, [sp, #36]	; 0x24
   29e14:	ldr	r1, [r0, #4]
   29e18:	str	r1, [sp, #40]	; 0x28
   29e1c:	ldr	r0, [r0, #8]
   29e20:	str	r0, [sp, #44]	; 0x2c
   29e24:	b	29e5c <__assert_fail@plt+0x18958>
   29e28:	ldr	r0, [sp, #12]
   29e2c:	ldr	r1, [r0, #40]	; 0x28
   29e30:	ldr	r2, [sp, #32]
   29e34:	add	r0, sp, #36	; 0x24
   29e38:	bl	27390 <__assert_fail@plt+0x15e8c>
   29e3c:	str	r0, [fp, #-20]	; 0xffffffec
   29e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   29e44:	cmp	r0, #0
   29e48:	beq	29e58 <__assert_fail@plt+0x18954>
   29e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29e50:	str	r0, [fp, #-4]
   29e54:	b	29f24 <__assert_fail@plt+0x18a20>
   29e58:	b	29e5c <__assert_fail@plt+0x18958>
   29e5c:	ldr	r0, [fp, #-8]
   29e60:	ldr	r1, [sp, #20]
   29e64:	sub	r1, r1, #1
   29e68:	ldr	r2, [r0, #88]	; 0x58
   29e6c:	bl	25b94 <__assert_fail@plt+0x14690>
   29e70:	str	r0, [sp, #16]
   29e74:	ldr	r1, [fp, #-16]
   29e78:	ldr	r3, [sp, #16]
   29e7c:	sub	r0, fp, #20
   29e80:	add	r2, sp, #36	; 0x24
   29e84:	bl	23344 <__assert_fail@plt+0x11e40>
   29e88:	ldr	r1, [fp, #-8]
   29e8c:	ldr	r1, [r1, #100]	; 0x64
   29e90:	ldr	r2, [sp, #20]
   29e94:	add	r1, r1, r2, lsl #2
   29e98:	str	r0, [r1]
   29e9c:	ldr	r0, [sp, #12]
   29ea0:	movw	r1, #0
   29ea4:	cmp	r0, r1
   29ea8:	beq	29eb4 <__assert_fail@plt+0x189b0>
   29eac:	ldr	r0, [sp, #44]	; 0x2c
   29eb0:	bl	35268 <__assert_fail@plt+0x23d64>
   29eb4:	ldr	r0, [fp, #-8]
   29eb8:	ldr	r0, [r0, #100]	; 0x64
   29ebc:	ldr	r1, [sp, #20]
   29ec0:	add	r0, r0, r1, lsl #2
   29ec4:	ldr	r0, [r0]
   29ec8:	movw	r1, #0
   29ecc:	cmp	r0, r1
   29ed0:	movw	r0, #0
   29ed4:	str	r0, [sp, #4]
   29ed8:	bne	29ef0 <__assert_fail@plt+0x189ec>
   29edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29ee0:	cmp	r0, #0
   29ee4:	movw	r0, #0
   29ee8:	movne	r0, #1
   29eec:	str	r0, [sp, #4]
   29ef0:	ldr	r0, [sp, #4]
   29ef4:	tst	r0, #1
   29ef8:	beq	29f08 <__assert_fail@plt+0x18a04>
   29efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29f00:	str	r0, [fp, #-4]
   29f04:	b	29f24 <__assert_fail@plt+0x18a20>
   29f08:	b	29f0c <__assert_fail@plt+0x18a08>
   29f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29f10:	add	r0, r0, #1
   29f14:	str	r0, [fp, #-24]	; 0xffffffe8
   29f18:	b	29b7c <__assert_fail@plt+0x18678>
   29f1c:	movw	r0, #0
   29f20:	str	r0, [fp, #-4]
   29f24:	ldr	r0, [fp, #-4]
   29f28:	mov	sp, fp
   29f2c:	pop	{fp, pc}
   29f30:	push	{r4, r5, fp, lr}
   29f34:	add	fp, sp, #8
   29f38:	sub	sp, sp, #2160	; 0x870
   29f3c:	sub	sp, sp, #12288	; 0x3000
   29f40:	add	r3, sp, #20
   29f44:	sub	lr, fp, #6144	; 0x1800
   29f48:	sub	r2, lr, #100	; 0x64
   29f4c:	str	r0, [fp, #-16]
   29f50:	str	r1, [fp, #-20]	; 0xffffffec
   29f54:	movw	r0, #0
   29f58:	strb	r0, [fp, #-37]	; 0xffffffdb
   29f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29f60:	movw	r1, #0
   29f64:	str	r1, [r0, #44]	; 0x2c
   29f68:	ldr	r0, [fp, #-20]	; 0xffffffec
   29f6c:	str	r1, [r0, #48]	; 0x30
   29f70:	ldr	r0, [fp, #-16]
   29f74:	ldr	r1, [fp, #-20]	; 0xffffffec
   29f78:	bl	2a758 <__assert_fail@plt+0x19254>
   29f7c:	str	r0, [fp, #-52]	; 0xffffffcc
   29f80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29f84:	cmp	r0, #0
   29f88:	bgt	29ff0 <__assert_fail@plt+0x18aec>
   29f8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29f90:	cmp	r0, #0
   29f94:	bne	29fe0 <__assert_fail@plt+0x18adc>
   29f98:	movw	r0, #4
   29f9c:	movw	r1, #256	; 0x100
   29fa0:	bl	33aa8 <__assert_fail@plt+0x225a4>
   29fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   29fa8:	str	r0, [r1, #44]	; 0x2c
   29fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   29fb0:	ldr	r0, [r0, #44]	; 0x2c
   29fb4:	movw	r1, #0
   29fb8:	cmp	r0, r1
   29fbc:	bne	29fd0 <__assert_fail@plt+0x18acc>
   29fc0:	movw	r0, #0
   29fc4:	and	r0, r0, #1
   29fc8:	strb	r0, [fp, #-9]
   29fcc:	b	2a748 <__assert_fail@plt+0x19244>
   29fd0:	movw	r0, #1
   29fd4:	and	r0, r0, #1
   29fd8:	strb	r0, [fp, #-9]
   29fdc:	b	2a748 <__assert_fail@plt+0x19244>
   29fe0:	movw	r0, #0
   29fe4:	and	r0, r0, #1
   29fe8:	strb	r0, [fp, #-9]
   29fec:	b	2a748 <__assert_fail@plt+0x19244>
   29ff0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29ff4:	add	r1, r0, #1
   29ff8:	sub	lr, fp, #3072	; 0xc00
   29ffc:	sub	r0, lr, #68	; 0x44
   2a000:	bl	22330 <__assert_fail@plt+0x10e2c>
   2a004:	str	r0, [fp, #-24]	; 0xffffffe8
   2a008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a00c:	cmp	r0, #0
   2a010:	beq	2a078 <__assert_fail@plt+0x18b74>
   2a014:	b	2a018 <__assert_fail@plt+0x18b14>
   2a018:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2a01c:	bl	35268 <__assert_fail@plt+0x23d64>
   2a020:	movw	r0, #0
   2a024:	str	r0, [fp, #-28]	; 0xffffffe4
   2a028:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a02c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a030:	cmp	r0, r1
   2a034:	bge	2a068 <__assert_fail@plt+0x18b64>
   2a038:	sub	lr, fp, #6144	; 0x1800
   2a03c:	sub	r0, lr, #100	; 0x64
   2a040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a044:	movw	r2, #12
   2a048:	mul	r1, r1, r2
   2a04c:	add	r0, r0, r1
   2a050:	ldr	r0, [r0, #8]
   2a054:	bl	35268 <__assert_fail@plt+0x23d64>
   2a058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a05c:	add	r0, r0, #1
   2a060:	str	r0, [fp, #-28]	; 0xffffffe4
   2a064:	b	2a028 <__assert_fail@plt+0x18b24>
   2a068:	movw	r0, #0
   2a06c:	and	r0, r0, #1
   2a070:	strb	r0, [fp, #-9]
   2a074:	b	2a748 <__assert_fail@plt+0x19244>
   2a078:	sub	lr, fp, #3072	; 0xc00
   2a07c:	sub	r0, lr, #100	; 0x64
   2a080:	bl	2af38 <__assert_fail@plt+0x19a34>
   2a084:	movw	r0, #0
   2a088:	str	r0, [fp, #-28]	; 0xffffffe4
   2a08c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a090:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a094:	cmp	r0, r1
   2a098:	bge	2a368 <__assert_fail@plt+0x18e64>
   2a09c:	movw	r0, #0
   2a0a0:	str	r0, [fp, #-3136]	; 0xfffff3c0
   2a0a4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a0a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a0b0:	movw	r2, #12
   2a0b4:	mul	r1, r1, r2
   2a0b8:	sub	lr, fp, #6144	; 0x1800
   2a0bc:	sub	r2, lr, #100	; 0x64
   2a0c0:	add	r1, r2, r1
   2a0c4:	ldr	r1, [r1, #4]
   2a0c8:	cmp	r0, r1
   2a0cc:	bge	2a160 <__assert_fail@plt+0x18c5c>
   2a0d0:	ldr	r0, [fp, #-16]
   2a0d4:	ldr	r0, [r0, #12]
   2a0d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a0dc:	add	r1, r1, r1, lsl #1
   2a0e0:	sub	lr, fp, #6144	; 0x1800
   2a0e4:	sub	r2, lr, #100	; 0x64
   2a0e8:	add	r1, r2, r1, lsl #2
   2a0ec:	ldr	r1, [r1, #8]
   2a0f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a0f4:	ldr	r1, [r1, r2, lsl #2]
   2a0f8:	add	r0, r0, r1, lsl #2
   2a0fc:	ldr	r0, [r0]
   2a100:	str	r0, [sp, #16]
   2a104:	ldr	r0, [sp, #16]
   2a108:	cmn	r0, #1
   2a10c:	beq	2a14c <__assert_fail@plt+0x18c48>
   2a110:	ldr	r0, [fp, #-16]
   2a114:	ldr	r0, [r0, #24]
   2a118:	ldr	r1, [sp, #16]
   2a11c:	movw	r2, #12
   2a120:	mul	r1, r1, r2
   2a124:	add	r1, r0, r1
   2a128:	sub	lr, fp, #3072	; 0xc00
   2a12c:	sub	r0, lr, #68	; 0x44
   2a130:	bl	228ac <__assert_fail@plt+0x113a8>
   2a134:	str	r0, [fp, #-24]	; 0xffffffe8
   2a138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a13c:	cmp	r0, #0
   2a140:	beq	2a148 <__assert_fail@plt+0x18c44>
   2a144:	b	2a018 <__assert_fail@plt+0x18b14>
   2a148:	b	2a14c <__assert_fail@plt+0x18c48>
   2a14c:	b	2a150 <__assert_fail@plt+0x18c4c>
   2a150:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a154:	add	r0, r0, #1
   2a158:	str	r0, [fp, #-32]	; 0xffffffe0
   2a15c:	b	2a0a8 <__assert_fail@plt+0x18ba4>
   2a160:	ldr	r1, [fp, #-16]
   2a164:	sub	r0, fp, #24
   2a168:	sub	lr, fp, #3072	; 0xc00
   2a16c:	sub	r2, lr, #68	; 0x44
   2a170:	mov	r3, #0
   2a174:	bl	23344 <__assert_fail@plt+0x11e40>
   2a178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a17c:	sub	lr, fp, #1024	; 0x400
   2a180:	sub	r2, lr, #56	; 0x38
   2a184:	str	r0, [r2, r1, lsl #2]
   2a188:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a18c:	add	r0, r2, r0, lsl #2
   2a190:	ldr	r0, [r0]
   2a194:	movw	r1, #0
   2a198:	cmp	r0, r1
   2a19c:	movw	r0, #0
   2a1a0:	str	r0, [sp, #12]
   2a1a4:	bne	2a1bc <__assert_fail@plt+0x18cb8>
   2a1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a1ac:	cmp	r0, #0
   2a1b0:	movw	r0, #0
   2a1b4:	movne	r0, #1
   2a1b8:	str	r0, [sp, #12]
   2a1bc:	ldr	r0, [sp, #12]
   2a1c0:	tst	r0, #1
   2a1c4:	beq	2a1cc <__assert_fail@plt+0x18cc8>
   2a1c8:	b	2a018 <__assert_fail@plt+0x18b14>
   2a1cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a1d0:	sub	lr, fp, #1024	; 0x400
   2a1d4:	sub	r1, lr, #56	; 0x38
   2a1d8:	ldr	r0, [r1, r0, lsl #2]
   2a1dc:	ldrb	r0, [r0, #52]	; 0x34
   2a1e0:	lsr	r0, r0, #7
   2a1e4:	and	r0, r0, #255	; 0xff
   2a1e8:	cmp	r0, #0
   2a1ec:	beq	2a30c <__assert_fail@plt+0x18e08>
   2a1f0:	ldr	r1, [fp, #-16]
   2a1f4:	sub	r0, fp, #24
   2a1f8:	sub	lr, fp, #3072	; 0xc00
   2a1fc:	sub	r2, lr, #68	; 0x44
   2a200:	mov	r3, #1
   2a204:	bl	23344 <__assert_fail@plt+0x11e40>
   2a208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a20c:	sub	lr, fp, #2048	; 0x800
   2a210:	sub	r2, lr, #56	; 0x38
   2a214:	str	r0, [r2, r1, lsl #2]
   2a218:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a21c:	add	r0, r2, r0, lsl #2
   2a220:	ldr	r0, [r0]
   2a224:	movw	r1, #0
   2a228:	cmp	r0, r1
   2a22c:	movw	r0, #0
   2a230:	str	r0, [sp, #8]
   2a234:	bne	2a24c <__assert_fail@plt+0x18d48>
   2a238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a23c:	cmp	r0, #0
   2a240:	movw	r0, #0
   2a244:	movne	r0, #1
   2a248:	str	r0, [sp, #8]
   2a24c:	ldr	r0, [sp, #8]
   2a250:	tst	r0, #1
   2a254:	beq	2a25c <__assert_fail@plt+0x18d58>
   2a258:	b	2a018 <__assert_fail@plt+0x18b14>
   2a25c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a260:	sub	lr, fp, #1024	; 0x400
   2a264:	sub	r1, lr, #56	; 0x38
   2a268:	ldr	r1, [r1, r0, lsl #2]
   2a26c:	sub	lr, fp, #2048	; 0x800
   2a270:	sub	r2, lr, #56	; 0x38
   2a274:	add	r0, r2, r0, lsl #2
   2a278:	ldr	r0, [r0]
   2a27c:	cmp	r1, r0
   2a280:	beq	2a29c <__assert_fail@plt+0x18d98>
   2a284:	ldr	r0, [fp, #-16]
   2a288:	ldr	r0, [r0, #92]	; 0x5c
   2a28c:	cmp	r0, #1
   2a290:	ble	2a29c <__assert_fail@plt+0x18d98>
   2a294:	movw	r0, #1
   2a298:	strb	r0, [fp, #-37]	; 0xffffffdb
   2a29c:	ldr	r1, [fp, #-16]
   2a2a0:	sub	r0, fp, #24
   2a2a4:	sub	lr, fp, #3072	; 0xc00
   2a2a8:	sub	r2, lr, #68	; 0x44
   2a2ac:	mov	r3, #2
   2a2b0:	bl	23344 <__assert_fail@plt+0x11e40>
   2a2b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a2b8:	sub	lr, fp, #3072	; 0xc00
   2a2bc:	sub	r2, lr, #56	; 0x38
   2a2c0:	str	r0, [r2, r1, lsl #2]
   2a2c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a2c8:	add	r0, r2, r0, lsl #2
   2a2cc:	ldr	r0, [r0]
   2a2d0:	movw	r1, #0
   2a2d4:	cmp	r0, r1
   2a2d8:	movw	r0, #0
   2a2dc:	str	r0, [sp, #4]
   2a2e0:	bne	2a2f8 <__assert_fail@plt+0x18df4>
   2a2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a2e8:	cmp	r0, #0
   2a2ec:	movw	r0, #0
   2a2f0:	movne	r0, #1
   2a2f4:	str	r0, [sp, #4]
   2a2f8:	ldr	r0, [sp, #4]
   2a2fc:	tst	r0, #1
   2a300:	beq	2a308 <__assert_fail@plt+0x18e04>
   2a304:	b	2a018 <__assert_fail@plt+0x18b14>
   2a308:	b	2a340 <__assert_fail@plt+0x18e3c>
   2a30c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a310:	sub	lr, fp, #1024	; 0x400
   2a314:	sub	r1, lr, #56	; 0x38
   2a318:	ldr	r2, [r1, r0, lsl #2]
   2a31c:	sub	lr, fp, #2048	; 0x800
   2a320:	sub	r3, lr, #56	; 0x38
   2a324:	str	r2, [r3, r0, lsl #2]
   2a328:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a32c:	ldr	r1, [r1, r0, lsl #2]
   2a330:	sub	lr, fp, #3072	; 0xc00
   2a334:	sub	r2, lr, #56	; 0x38
   2a338:	add	r0, r2, r0, lsl #2
   2a33c:	str	r1, [r0]
   2a340:	sub	lr, fp, #3072	; 0xc00
   2a344:	sub	r0, lr, #100	; 0x64
   2a348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a34c:	add	r2, sp, #20
   2a350:	add	r1, r2, r1, lsl #5
   2a354:	bl	2af64 <__assert_fail@plt+0x19a60>
   2a358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a35c:	add	r0, r0, #1
   2a360:	str	r0, [fp, #-28]	; 0xffffffe4
   2a364:	b	2a08c <__assert_fail@plt+0x18b88>
   2a368:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2a36c:	tst	r0, #1
   2a370:	bne	2a4f0 <__assert_fail@plt+0x18fec>
   2a374:	movw	r0, #4
   2a378:	movw	r1, #256	; 0x100
   2a37c:	bl	33aa8 <__assert_fail@plt+0x225a4>
   2a380:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a384:	str	r0, [r1, #44]	; 0x2c
   2a388:	str	r0, [fp, #-56]	; 0xffffffc8
   2a38c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a390:	movw	r1, #0
   2a394:	cmp	r0, r1
   2a398:	bne	2a3a0 <__assert_fail@plt+0x18e9c>
   2a39c:	b	2a018 <__assert_fail@plt+0x18b14>
   2a3a0:	movw	r0, #0
   2a3a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2a3a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3ac:	cmp	r0, #8
   2a3b0:	bge	2a4ec <__assert_fail@plt+0x18fe8>
   2a3b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3b8:	lsl	r0, r0, #5
   2a3bc:	str	r0, [fp, #-36]	; 0xffffffdc
   2a3c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3c4:	sub	lr, fp, #3072	; 0xc00
   2a3c8:	sub	r1, lr, #100	; 0x64
   2a3cc:	add	r0, r1, r0, lsl #2
   2a3d0:	ldr	r0, [r0]
   2a3d4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a3d8:	movw	r0, #1
   2a3dc:	str	r0, [fp, #-48]	; 0xffffffd0
   2a3e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a3e4:	cmp	r0, #0
   2a3e8:	beq	2a4d8 <__assert_fail@plt+0x18fd4>
   2a3ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a3f0:	and	r0, r0, #1
   2a3f4:	cmp	r0, #0
   2a3f8:	beq	2a4ac <__assert_fail@plt+0x18fa8>
   2a3fc:	movw	r0, #0
   2a400:	str	r0, [fp, #-32]	; 0xffffffe0
   2a404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a408:	add	r1, sp, #20
   2a40c:	add	r0, r1, r0, lsl #5
   2a410:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a414:	add	r0, r0, r1, lsl #2
   2a418:	ldr	r0, [r0]
   2a41c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a420:	and	r0, r0, r1
   2a424:	cmp	r0, #0
   2a428:	bne	2a440 <__assert_fail@plt+0x18f3c>
   2a42c:	b	2a430 <__assert_fail@plt+0x18f2c>
   2a430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a434:	add	r0, r0, #1
   2a438:	str	r0, [fp, #-32]	; 0xffffffe0
   2a43c:	b	2a404 <__assert_fail@plt+0x18f00>
   2a440:	ldr	r0, [fp, #-16]
   2a444:	add	r0, r0, #96	; 0x60
   2a448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a44c:	add	r0, r0, r1, lsl #2
   2a450:	ldr	r0, [r0]
   2a454:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a458:	and	r0, r0, r1
   2a45c:	cmp	r0, #0
   2a460:	beq	2a488 <__assert_fail@plt+0x18f84>
   2a464:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a468:	sub	lr, fp, #2048	; 0x800
   2a46c:	sub	r1, lr, #56	; 0x38
   2a470:	ldr	r0, [r1, r0, lsl #2]
   2a474:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a478:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a47c:	add	r1, r1, r2, lsl #2
   2a480:	str	r0, [r1]
   2a484:	b	2a4a8 <__assert_fail@plt+0x18fa4>
   2a488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a48c:	sub	lr, fp, #1024	; 0x400
   2a490:	sub	r1, lr, #56	; 0x38
   2a494:	ldr	r0, [r1, r0, lsl #2]
   2a498:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a49c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a4a0:	add	r1, r1, r2, lsl #2
   2a4a4:	str	r0, [r1]
   2a4a8:	b	2a4ac <__assert_fail@plt+0x18fa8>
   2a4ac:	b	2a4b0 <__assert_fail@plt+0x18fac>
   2a4b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a4b4:	lsl	r0, r0, #1
   2a4b8:	str	r0, [fp, #-48]	; 0xffffffd0
   2a4bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a4c0:	lsr	r0, r0, #1
   2a4c4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a4c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a4cc:	add	r0, r0, #1
   2a4d0:	str	r0, [fp, #-36]	; 0xffffffdc
   2a4d4:	b	2a3e0 <__assert_fail@plt+0x18edc>
   2a4d8:	b	2a4dc <__assert_fail@plt+0x18fd8>
   2a4dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a4e0:	add	r0, r0, #1
   2a4e4:	str	r0, [fp, #-28]	; 0xffffffe4
   2a4e8:	b	2a3a8 <__assert_fail@plt+0x18ea4>
   2a4ec:	b	2a640 <__assert_fail@plt+0x1913c>
   2a4f0:	movw	r0, #4
   2a4f4:	movw	r1, #512	; 0x200
   2a4f8:	bl	33aa8 <__assert_fail@plt+0x225a4>
   2a4fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a500:	str	r0, [r1, #48]	; 0x30
   2a504:	str	r0, [fp, #-56]	; 0xffffffc8
   2a508:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a50c:	movw	r1, #0
   2a510:	cmp	r0, r1
   2a514:	bne	2a51c <__assert_fail@plt+0x19018>
   2a518:	b	2a018 <__assert_fail@plt+0x18b14>
   2a51c:	movw	r0, #0
   2a520:	str	r0, [fp, #-28]	; 0xffffffe4
   2a524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a528:	cmp	r0, #8
   2a52c:	bge	2a63c <__assert_fail@plt+0x19138>
   2a530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a534:	lsl	r0, r0, #5
   2a538:	str	r0, [fp, #-36]	; 0xffffffdc
   2a53c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a540:	sub	lr, fp, #3072	; 0xc00
   2a544:	sub	r1, lr, #100	; 0x64
   2a548:	add	r0, r1, r0, lsl #2
   2a54c:	ldr	r0, [r0]
   2a550:	str	r0, [fp, #-44]	; 0xffffffd4
   2a554:	movw	r0, #1
   2a558:	str	r0, [fp, #-48]	; 0xffffffd0
   2a55c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a560:	cmp	r0, #0
   2a564:	beq	2a628 <__assert_fail@plt+0x19124>
   2a568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a56c:	and	r0, r0, #1
   2a570:	cmp	r0, #0
   2a574:	beq	2a5fc <__assert_fail@plt+0x190f8>
   2a578:	movw	r0, #0
   2a57c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a580:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a584:	add	r1, sp, #20
   2a588:	add	r0, r1, r0, lsl #5
   2a58c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a590:	add	r0, r0, r1, lsl #2
   2a594:	ldr	r0, [r0]
   2a598:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a59c:	and	r0, r0, r1
   2a5a0:	cmp	r0, #0
   2a5a4:	bne	2a5bc <__assert_fail@plt+0x190b8>
   2a5a8:	b	2a5ac <__assert_fail@plt+0x190a8>
   2a5ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5b0:	add	r0, r0, #1
   2a5b4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a5b8:	b	2a580 <__assert_fail@plt+0x1907c>
   2a5bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5c0:	sub	lr, fp, #1024	; 0x400
   2a5c4:	sub	r1, lr, #56	; 0x38
   2a5c8:	ldr	r0, [r1, r0, lsl #2]
   2a5cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a5d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a5d4:	str	r0, [r1, r2, lsl #2]
   2a5d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5dc:	sub	lr, fp, #2048	; 0x800
   2a5e0:	sub	r1, lr, #56	; 0x38
   2a5e4:	ldr	r0, [r1, r0, lsl #2]
   2a5e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a5ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a5f0:	add	r2, r2, #256	; 0x100
   2a5f4:	add	r1, r1, r2, lsl #2
   2a5f8:	str	r0, [r1]
   2a5fc:	b	2a600 <__assert_fail@plt+0x190fc>
   2a600:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a604:	lsl	r0, r0, #1
   2a608:	str	r0, [fp, #-48]	; 0xffffffd0
   2a60c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a610:	lsr	r0, r0, #1
   2a614:	str	r0, [fp, #-44]	; 0xffffffd4
   2a618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a61c:	add	r0, r0, #1
   2a620:	str	r0, [fp, #-36]	; 0xffffffdc
   2a624:	b	2a55c <__assert_fail@plt+0x19058>
   2a628:	b	2a62c <__assert_fail@plt+0x19128>
   2a62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a630:	add	r0, r0, #1
   2a634:	str	r0, [fp, #-28]	; 0xffffffe4
   2a638:	b	2a524 <__assert_fail@plt+0x19020>
   2a63c:	b	2a640 <__assert_fail@plt+0x1913c>
   2a640:	sub	lr, fp, #3072	; 0xc00
   2a644:	sub	r0, lr, #100	; 0x64
   2a648:	movw	r1, #10
   2a64c:	bl	25f04 <__assert_fail@plt+0x14a00>
   2a650:	tst	r0, #1
   2a654:	beq	2a6ec <__assert_fail@plt+0x191e8>
   2a658:	movw	r0, #0
   2a65c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a660:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a664:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a668:	cmp	r0, r1
   2a66c:	bge	2a6e8 <__assert_fail@plt+0x191e4>
   2a670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a674:	add	r1, sp, #20
   2a678:	add	r0, r1, r0, lsl #5
   2a67c:	movw	r1, #10
   2a680:	bl	25f04 <__assert_fail@plt+0x14a00>
   2a684:	tst	r0, #1
   2a688:	beq	2a6d4 <__assert_fail@plt+0x191d0>
   2a68c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a690:	sub	lr, fp, #3072	; 0xc00
   2a694:	sub	r1, lr, #56	; 0x38
   2a698:	add	r0, r1, r0, lsl #2
   2a69c:	ldr	r0, [r0]
   2a6a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a6a4:	str	r0, [r1, #40]	; 0x28
   2a6a8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2a6ac:	tst	r0, #1
   2a6b0:	beq	2a6d0 <__assert_fail@plt+0x191cc>
   2a6b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a6b8:	sub	lr, fp, #3072	; 0xc00
   2a6bc:	sub	r1, lr, #56	; 0x38
   2a6c0:	add	r0, r1, r0, lsl #2
   2a6c4:	ldr	r0, [r0]
   2a6c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a6cc:	str	r0, [r1, #1064]	; 0x428
   2a6d0:	b	2a6e8 <__assert_fail@plt+0x191e4>
   2a6d4:	b	2a6d8 <__assert_fail@plt+0x191d4>
   2a6d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a6dc:	add	r0, r0, #1
   2a6e0:	str	r0, [fp, #-32]	; 0xffffffe0
   2a6e4:	b	2a660 <__assert_fail@plt+0x1915c>
   2a6e8:	b	2a6ec <__assert_fail@plt+0x191e8>
   2a6ec:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2a6f0:	bl	35268 <__assert_fail@plt+0x23d64>
   2a6f4:	movw	r0, #0
   2a6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   2a6fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a700:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a704:	cmp	r0, r1
   2a708:	bge	2a73c <__assert_fail@plt+0x19238>
   2a70c:	sub	lr, fp, #6144	; 0x1800
   2a710:	sub	r0, lr, #100	; 0x64
   2a714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a718:	movw	r2, #12
   2a71c:	mul	r1, r1, r2
   2a720:	add	r0, r0, r1
   2a724:	ldr	r0, [r0, #8]
   2a728:	bl	35268 <__assert_fail@plt+0x23d64>
   2a72c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a730:	add	r0, r0, #1
   2a734:	str	r0, [fp, #-28]	; 0xffffffe4
   2a738:	b	2a6fc <__assert_fail@plt+0x191f8>
   2a73c:	movw	r0, #1
   2a740:	and	r0, r0, #1
   2a744:	strb	r0, [fp, #-9]
   2a748:	ldrb	r0, [fp, #-9]
   2a74c:	and	r0, r0, #1
   2a750:	sub	sp, fp, #8
   2a754:	pop	{r4, r5, fp, pc}
   2a758:	push	{fp, lr}
   2a75c:	mov	fp, sp
   2a760:	sub	sp, sp, #184	; 0xb8
   2a764:	sub	ip, fp, #76	; 0x4c
   2a768:	str	r0, [fp, #-8]
   2a76c:	str	r1, [fp, #-12]
   2a770:	str	r2, [fp, #-16]
   2a774:	str	r3, [fp, #-20]	; 0xffffffec
   2a778:	ldr	r0, [fp, #-12]
   2a77c:	add	r0, r0, #4
   2a780:	str	r0, [fp, #-80]	; 0xffffffb0
   2a784:	mov	r0, ip
   2a788:	bl	2af38 <__assert_fail@plt+0x19a34>
   2a78c:	movw	r0, #0
   2a790:	str	r0, [fp, #-44]	; 0xffffffd4
   2a794:	str	r0, [fp, #-32]	; 0xffffffe0
   2a798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a79c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2a7a0:	ldr	r1, [r1, #4]
   2a7a4:	cmp	r0, r1
   2a7a8:	bge	2aec4 <__assert_fail@plt+0x199c0>
   2a7ac:	ldr	r0, [fp, #-8]
   2a7b0:	ldr	r0, [r0]
   2a7b4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2a7b8:	ldr	r1, [r1, #8]
   2a7bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a7c0:	ldr	r1, [r1, r2, lsl #2]
   2a7c4:	add	r0, r0, r1, lsl #3
   2a7c8:	str	r0, [fp, #-84]	; 0xffffffac
   2a7cc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a7d0:	ldr	r0, [r0, #4]
   2a7d4:	and	r0, r0, #255	; 0xff
   2a7d8:	str	r0, [fp, #-88]	; 0xffffffa8
   2a7dc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a7e0:	ldr	r0, [r0, #4]
   2a7e4:	lsr	r0, r0, #8
   2a7e8:	movw	r1, #1023	; 0x3ff
   2a7ec:	and	r0, r0, r1
   2a7f0:	str	r0, [sp, #92]	; 0x5c
   2a7f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a7f8:	cmp	r0, #1
   2a7fc:	bne	2a814 <__assert_fail@plt+0x19310>
   2a800:	sub	r0, fp, #76	; 0x4c
   2a804:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a808:	ldrb	r1, [r1]
   2a80c:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   2a810:	b	2a924 <__assert_fail@plt+0x19420>
   2a814:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a818:	cmp	r0, #3
   2a81c:	bne	2a834 <__assert_fail@plt+0x19330>
   2a820:	sub	r0, fp, #76	; 0x4c
   2a824:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a828:	ldr	r1, [r1]
   2a82c:	bl	2af64 <__assert_fail@plt+0x19a60>
   2a830:	b	2a920 <__assert_fail@plt+0x1941c>
   2a834:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a838:	cmp	r0, #5
   2a83c:	bne	2a8b0 <__assert_fail@plt+0x193ac>
   2a840:	ldr	r0, [fp, #-8]
   2a844:	ldr	r0, [r0, #92]	; 0x5c
   2a848:	cmp	r0, #1
   2a84c:	ble	2a864 <__assert_fail@plt+0x19360>
   2a850:	sub	r0, fp, #76	; 0x4c
   2a854:	ldr	r1, [fp, #-8]
   2a858:	ldr	r1, [r1, #60]	; 0x3c
   2a85c:	bl	2af64 <__assert_fail@plt+0x19a60>
   2a860:	b	2a86c <__assert_fail@plt+0x19368>
   2a864:	sub	r0, fp, #76	; 0x4c
   2a868:	bl	2afbc <__assert_fail@plt+0x19ab8>
   2a86c:	ldr	r0, [fp, #-8]
   2a870:	ldr	r0, [r0, #128]	; 0x80
   2a874:	and	r0, r0, #64	; 0x40
   2a878:	cmp	r0, #0
   2a87c:	bne	2a88c <__assert_fail@plt+0x19388>
   2a880:	sub	r0, fp, #76	; 0x4c
   2a884:	movw	r1, #10
   2a888:	bl	2afe8 <__assert_fail@plt+0x19ae4>
   2a88c:	ldr	r0, [fp, #-8]
   2a890:	ldr	r0, [r0, #128]	; 0x80
   2a894:	and	r0, r0, #128	; 0x80
   2a898:	cmp	r0, #0
   2a89c:	beq	2a8ac <__assert_fail@plt+0x193a8>
   2a8a0:	sub	r0, fp, #76	; 0x4c
   2a8a4:	movw	r1, #0
   2a8a8:	bl	2afe8 <__assert_fail@plt+0x19ae4>
   2a8ac:	b	2a91c <__assert_fail@plt+0x19418>
   2a8b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a8b4:	cmp	r0, #7
   2a8b8:	bne	2a914 <__assert_fail@plt+0x19410>
   2a8bc:	sub	r0, fp, #76	; 0x4c
   2a8c0:	movw	r1, #255	; 0xff
   2a8c4:	and	r1, r1, #255	; 0xff
   2a8c8:	movw	r2, #16
   2a8cc:	bl	11420 <memset@plt>
   2a8d0:	ldr	r0, [fp, #-8]
   2a8d4:	ldr	r0, [r0, #128]	; 0x80
   2a8d8:	and	r0, r0, #64	; 0x40
   2a8dc:	cmp	r0, #0
   2a8e0:	bne	2a8f0 <__assert_fail@plt+0x193ec>
   2a8e4:	sub	r0, fp, #76	; 0x4c
   2a8e8:	movw	r1, #10
   2a8ec:	bl	2afe8 <__assert_fail@plt+0x19ae4>
   2a8f0:	ldr	r0, [fp, #-8]
   2a8f4:	ldr	r0, [r0, #128]	; 0x80
   2a8f8:	and	r0, r0, #128	; 0x80
   2a8fc:	cmp	r0, #0
   2a900:	beq	2a910 <__assert_fail@plt+0x1940c>
   2a904:	sub	r0, fp, #76	; 0x4c
   2a908:	movw	r1, #0
   2a90c:	bl	2afe8 <__assert_fail@plt+0x19ae4>
   2a910:	b	2a918 <__assert_fail@plt+0x19414>
   2a914:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2a918:	b	2a91c <__assert_fail@plt+0x19418>
   2a91c:	b	2a920 <__assert_fail@plt+0x1941c>
   2a920:	b	2a924 <__assert_fail@plt+0x19420>
   2a924:	ldr	r0, [sp, #92]	; 0x5c
   2a928:	cmp	r0, #0
   2a92c:	beq	2ac00 <__assert_fail@plt+0x196fc>
   2a930:	ldr	r0, [sp, #92]	; 0x5c
   2a934:	and	r0, r0, #32
   2a938:	cmp	r0, #0
   2a93c:	beq	2a984 <__assert_fail@plt+0x19480>
   2a940:	sub	r0, fp, #76	; 0x4c
   2a944:	movw	r1, #10
   2a948:	bl	25f04 <__assert_fail@plt+0x14a00>
   2a94c:	sub	r1, fp, #76	; 0x4c
   2a950:	and	r0, r0, #1
   2a954:	strb	r0, [sp, #91]	; 0x5b
   2a958:	mov	r0, r1
   2a95c:	bl	2af38 <__assert_fail@plt+0x19a34>
   2a960:	ldrb	r0, [sp, #91]	; 0x5b
   2a964:	tst	r0, #1
   2a968:	beq	2a97c <__assert_fail@plt+0x19478>
   2a96c:	sub	r0, fp, #76	; 0x4c
   2a970:	movw	r1, #10
   2a974:	bl	1f1a0 <__assert_fail@plt+0xdc9c>
   2a978:	b	2a980 <__assert_fail@plt+0x1947c>
   2a97c:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2a980:	b	2a984 <__assert_fail@plt+0x19480>
   2a984:	ldr	r0, [sp, #92]	; 0x5c
   2a988:	and	r0, r0, #128	; 0x80
   2a98c:	cmp	r0, #0
   2a990:	beq	2a9a0 <__assert_fail@plt+0x1949c>
   2a994:	sub	r0, fp, #76	; 0x4c
   2a998:	bl	2af38 <__assert_fail@plt+0x19a34>
   2a99c:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2a9a0:	ldr	r0, [sp, #92]	; 0x5c
   2a9a4:	and	r0, r0, #4
   2a9a8:	cmp	r0, #0
   2a9ac:	beq	2aacc <__assert_fail@plt+0x195c8>
   2a9b0:	movw	r0, #0
   2a9b4:	str	r0, [sp, #84]	; 0x54
   2a9b8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a9bc:	cmp	r0, #1
   2a9c0:	bne	2a9e8 <__assert_fail@plt+0x194e4>
   2a9c4:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a9c8:	ldr	r0, [r0, #4]
   2a9cc:	lsr	r0, r0, #22
   2a9d0:	and	r0, r0, #1
   2a9d4:	cmp	r0, #0
   2a9d8:	bne	2a9e8 <__assert_fail@plt+0x194e4>
   2a9dc:	sub	r0, fp, #76	; 0x4c
   2a9e0:	bl	2af38 <__assert_fail@plt+0x19a34>
   2a9e4:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2a9e8:	ldr	r0, [fp, #-8]
   2a9ec:	ldr	r0, [r0, #92]	; 0x5c
   2a9f0:	cmp	r0, #1
   2a9f4:	ble	2aa60 <__assert_fail@plt+0x1955c>
   2a9f8:	movw	r0, #0
   2a9fc:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa04:	cmp	r0, #8
   2aa08:	bge	2aa5c <__assert_fail@plt+0x19558>
   2aa0c:	ldr	r0, [fp, #-8]
   2aa10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aa14:	add	r2, r0, r1, lsl #2
   2aa18:	ldr	r2, [r2, #96]	; 0x60
   2aa1c:	ldr	r0, [r0, #60]	; 0x3c
   2aa20:	ldr	r0, [r0, r1, lsl #2]
   2aa24:	mvn	r0, r0
   2aa28:	orr	r0, r2, r0
   2aa2c:	sub	r2, fp, #76	; 0x4c
   2aa30:	add	r1, r2, r1, lsl #2
   2aa34:	ldr	r2, [r1]
   2aa38:	and	r0, r2, r0
   2aa3c:	str	r0, [r1]
   2aa40:	ldr	r1, [sp, #84]	; 0x54
   2aa44:	orr	r0, r1, r0
   2aa48:	str	r0, [sp, #84]	; 0x54
   2aa4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa50:	add	r0, r0, #1
   2aa54:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa58:	b	2aa00 <__assert_fail@plt+0x194fc>
   2aa5c:	b	2aab8 <__assert_fail@plt+0x195b4>
   2aa60:	movw	r0, #0
   2aa64:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa6c:	cmp	r0, #8
   2aa70:	bge	2aab4 <__assert_fail@plt+0x195b0>
   2aa74:	ldr	r0, [fp, #-8]
   2aa78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aa7c:	add	r0, r0, r1, lsl #2
   2aa80:	ldr	r0, [r0, #96]	; 0x60
   2aa84:	sub	r2, fp, #76	; 0x4c
   2aa88:	add	r1, r2, r1, lsl #2
   2aa8c:	ldr	r2, [r1]
   2aa90:	and	r0, r2, r0
   2aa94:	str	r0, [r1]
   2aa98:	ldr	r1, [sp, #84]	; 0x54
   2aa9c:	orr	r0, r1, r0
   2aaa0:	str	r0, [sp, #84]	; 0x54
   2aaa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aaa8:	add	r0, r0, #1
   2aaac:	str	r0, [fp, #-36]	; 0xffffffdc
   2aab0:	b	2aa68 <__assert_fail@plt+0x19564>
   2aab4:	b	2aab8 <__assert_fail@plt+0x195b4>
   2aab8:	ldr	r0, [sp, #84]	; 0x54
   2aabc:	cmp	r0, #0
   2aac0:	bne	2aac8 <__assert_fail@plt+0x195c4>
   2aac4:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2aac8:	b	2aacc <__assert_fail@plt+0x195c8>
   2aacc:	ldr	r0, [sp, #92]	; 0x5c
   2aad0:	and	r0, r0, #8
   2aad4:	cmp	r0, #0
   2aad8:	beq	2abfc <__assert_fail@plt+0x196f8>
   2aadc:	movw	r0, #0
   2aae0:	str	r0, [sp, #80]	; 0x50
   2aae4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2aae8:	cmp	r0, #1
   2aaec:	bne	2ab14 <__assert_fail@plt+0x19610>
   2aaf0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2aaf4:	ldr	r0, [r0, #4]
   2aaf8:	lsr	r0, r0, #22
   2aafc:	and	r0, r0, #1
   2ab00:	cmp	r0, #0
   2ab04:	beq	2ab14 <__assert_fail@plt+0x19610>
   2ab08:	sub	r0, fp, #76	; 0x4c
   2ab0c:	bl	2af38 <__assert_fail@plt+0x19a34>
   2ab10:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2ab14:	ldr	r0, [fp, #-8]
   2ab18:	ldr	r0, [r0, #92]	; 0x5c
   2ab1c:	cmp	r0, #1
   2ab20:	ble	2ab8c <__assert_fail@plt+0x19688>
   2ab24:	movw	r0, #0
   2ab28:	str	r0, [fp, #-36]	; 0xffffffdc
   2ab2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab30:	cmp	r0, #8
   2ab34:	bge	2ab88 <__assert_fail@plt+0x19684>
   2ab38:	ldr	r0, [fp, #-8]
   2ab3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ab40:	add	r2, r0, r1, lsl #2
   2ab44:	ldr	r2, [r2, #96]	; 0x60
   2ab48:	ldr	r0, [r0, #60]	; 0x3c
   2ab4c:	ldr	r0, [r0, r1, lsl #2]
   2ab50:	and	r0, r2, r0
   2ab54:	mvn	r0, r0
   2ab58:	sub	r2, fp, #76	; 0x4c
   2ab5c:	add	r1, r2, r1, lsl #2
   2ab60:	ldr	r2, [r1]
   2ab64:	and	r0, r2, r0
   2ab68:	str	r0, [r1]
   2ab6c:	ldr	r1, [sp, #80]	; 0x50
   2ab70:	orr	r0, r1, r0
   2ab74:	str	r0, [sp, #80]	; 0x50
   2ab78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab7c:	add	r0, r0, #1
   2ab80:	str	r0, [fp, #-36]	; 0xffffffdc
   2ab84:	b	2ab2c <__assert_fail@plt+0x19628>
   2ab88:	b	2abe8 <__assert_fail@plt+0x196e4>
   2ab8c:	movw	r0, #0
   2ab90:	str	r0, [fp, #-36]	; 0xffffffdc
   2ab94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab98:	cmp	r0, #8
   2ab9c:	bge	2abe4 <__assert_fail@plt+0x196e0>
   2aba0:	ldr	r0, [fp, #-8]
   2aba4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aba8:	add	r0, r0, r1, lsl #2
   2abac:	ldr	r0, [r0, #96]	; 0x60
   2abb0:	mvn	r0, r0
   2abb4:	sub	r2, fp, #76	; 0x4c
   2abb8:	add	r1, r2, r1, lsl #2
   2abbc:	ldr	r2, [r1]
   2abc0:	and	r0, r2, r0
   2abc4:	str	r0, [r1]
   2abc8:	ldr	r1, [sp, #80]	; 0x50
   2abcc:	orr	r0, r1, r0
   2abd0:	str	r0, [sp, #80]	; 0x50
   2abd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2abd8:	add	r0, r0, #1
   2abdc:	str	r0, [fp, #-36]	; 0xffffffdc
   2abe0:	b	2ab94 <__assert_fail@plt+0x19690>
   2abe4:	b	2abe8 <__assert_fail@plt+0x196e4>
   2abe8:	ldr	r0, [sp, #80]	; 0x50
   2abec:	cmp	r0, #0
   2abf0:	bne	2abf8 <__assert_fail@plt+0x196f4>
   2abf4:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2abf8:	b	2abfc <__assert_fail@plt+0x196f8>
   2abfc:	b	2ac00 <__assert_fail@plt+0x196fc>
   2ac00:	movw	r0, #0
   2ac04:	str	r0, [fp, #-36]	; 0xffffffdc
   2ac08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ac0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ac10:	cmp	r0, r1
   2ac14:	bge	2ae3c <__assert_fail@plt+0x19938>
   2ac18:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2ac1c:	cmp	r0, #1
   2ac20:	bne	2ac48 <__assert_fail@plt+0x19744>
   2ac24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ac28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ac2c:	add	r0, r0, r1, lsl #5
   2ac30:	ldr	r1, [fp, #-84]	; 0xffffffac
   2ac34:	ldrb	r1, [r1]
   2ac38:	bl	25f04 <__assert_fail@plt+0x14a00>
   2ac3c:	tst	r0, #1
   2ac40:	bne	2ac48 <__assert_fail@plt+0x19744>
   2ac44:	b	2ae2c <__assert_fail@plt+0x19928>
   2ac48:	movw	r0, #0
   2ac4c:	str	r0, [sp, #12]
   2ac50:	str	r0, [fp, #-40]	; 0xffffffd8
   2ac54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac58:	cmp	r0, #8
   2ac5c:	bge	2aca8 <__assert_fail@plt+0x197a4>
   2ac60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac64:	sub	r1, fp, #76	; 0x4c
   2ac68:	ldr	r1, [r1, r0, lsl #2]
   2ac6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ac70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac74:	add	r2, r2, r3, lsl #5
   2ac78:	ldr	r2, [r2, r0, lsl #2]
   2ac7c:	and	r1, r1, r2
   2ac80:	add	r2, sp, #48	; 0x30
   2ac84:	add	r0, r2, r0, lsl #2
   2ac88:	str	r1, [r0]
   2ac8c:	ldr	r0, [sp, #12]
   2ac90:	orr	r0, r0, r1
   2ac94:	str	r0, [sp, #12]
   2ac98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac9c:	add	r0, r0, #1
   2aca0:	str	r0, [fp, #-40]	; 0xffffffd8
   2aca4:	b	2ac54 <__assert_fail@plt+0x19750>
   2aca8:	ldr	r0, [sp, #12]
   2acac:	cmp	r0, #0
   2acb0:	bne	2acb8 <__assert_fail@plt+0x197b4>
   2acb4:	b	2ae2c <__assert_fail@plt+0x19928>
   2acb8:	movw	r0, #0
   2acbc:	str	r0, [sp, #4]
   2acc0:	str	r0, [sp, #8]
   2acc4:	str	r0, [fp, #-40]	; 0xffffffd8
   2acc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2accc:	cmp	r0, #8
   2acd0:	bge	2ad48 <__assert_fail@plt+0x19844>
   2acd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2acd8:	sub	r1, fp, #76	; 0x4c
   2acdc:	ldr	r2, [r1, r0, lsl #2]
   2ace0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ace4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2ace8:	add	r3, r3, ip, lsl #5
   2acec:	ldr	r3, [r3, r0, lsl #2]
   2acf0:	bic	r2, r3, r2
   2acf4:	add	r3, sp, #16
   2acf8:	str	r2, [r3, r0, lsl #2]
   2acfc:	ldr	r0, [sp, #8]
   2ad00:	orr	r0, r0, r2
   2ad04:	str	r0, [sp, #8]
   2ad08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ad0c:	add	r2, r1, r0, lsl #2
   2ad10:	ldr	r1, [r1, r0, lsl #2]
   2ad14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad18:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2ad1c:	add	r3, r3, ip, lsl #5
   2ad20:	ldr	r0, [r3, r0, lsl #2]
   2ad24:	bic	r0, r1, r0
   2ad28:	str	r0, [r2]
   2ad2c:	ldr	r1, [sp, #4]
   2ad30:	orr	r0, r1, r0
   2ad34:	str	r0, [sp, #4]
   2ad38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ad3c:	add	r0, r0, #1
   2ad40:	str	r0, [fp, #-40]	; 0xffffffd8
   2ad44:	b	2acc8 <__assert_fail@plt+0x197c4>
   2ad48:	ldr	r0, [sp, #8]
   2ad4c:	cmp	r0, #0
   2ad50:	beq	2add0 <__assert_fail@plt+0x198cc>
   2ad54:	add	r1, sp, #48	; 0x30
   2ad58:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ad5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ad60:	add	r0, r0, r2, lsl #5
   2ad64:	add	r2, sp, #16
   2ad68:	str	r1, [sp]
   2ad6c:	mov	r1, r2
   2ad70:	bl	2b030 <__assert_fail@plt+0x19b2c>
   2ad74:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ad78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ad7c:	add	r0, r0, r1, lsl #5
   2ad80:	ldr	r1, [sp]
   2ad84:	bl	2b030 <__assert_fail@plt+0x19b2c>
   2ad88:	ldr	r0, [fp, #-16]
   2ad8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ad90:	movw	r2, #12
   2ad94:	mul	r1, r1, r2
   2ad98:	add	r0, r0, r1
   2ad9c:	ldr	r1, [fp, #-16]
   2ada0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ada4:	mul	r2, lr, r2
   2ada8:	add	r1, r1, r2
   2adac:	bl	23180 <__assert_fail@plt+0x11c7c>
   2adb0:	str	r0, [fp, #-24]	; 0xffffffe8
   2adb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adb8:	cmp	r0, #0
   2adbc:	beq	2adc4 <__assert_fail@plt+0x198c0>
   2adc0:	b	2aee0 <__assert_fail@plt+0x199dc>
   2adc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2adc8:	add	r0, r0, #1
   2adcc:	str	r0, [fp, #-44]	; 0xffffffd4
   2add0:	ldr	r0, [fp, #-16]
   2add4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2add8:	add	r1, r1, r1, lsl #1
   2addc:	add	r0, r0, r1, lsl #2
   2ade0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2ade4:	ldr	r1, [r1, #8]
   2ade8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2adec:	add	r1, r1, r2, lsl #2
   2adf0:	ldr	r1, [r1]
   2adf4:	bl	22d98 <__assert_fail@plt+0x11894>
   2adf8:	and	r0, r0, #1
   2adfc:	strb	r0, [fp, #-25]	; 0xffffffe7
   2ae00:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2ae04:	mvn	r1, #0
   2ae08:	eor	r0, r0, r1
   2ae0c:	tst	r0, #1
   2ae10:	beq	2ae18 <__assert_fail@plt+0x19914>
   2ae14:	b	2aee0 <__assert_fail@plt+0x199dc>
   2ae18:	ldr	r0, [sp, #4]
   2ae1c:	cmp	r0, #0
   2ae20:	bne	2ae28 <__assert_fail@plt+0x19924>
   2ae24:	b	2ae3c <__assert_fail@plt+0x19938>
   2ae28:	b	2ae2c <__assert_fail@plt+0x19928>
   2ae2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ae30:	add	r0, r0, #1
   2ae34:	str	r0, [fp, #-36]	; 0xffffffdc
   2ae38:	b	2ac08 <__assert_fail@plt+0x19704>
   2ae3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ae40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ae44:	cmp	r0, r1
   2ae48:	bne	2aeb0 <__assert_fail@plt+0x199ac>
   2ae4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ae54:	add	r0, r0, r1, lsl #5
   2ae58:	sub	r1, fp, #76	; 0x4c
   2ae5c:	bl	2b030 <__assert_fail@plt+0x19b2c>
   2ae60:	ldr	r0, [fp, #-16]
   2ae64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ae68:	add	r1, r1, r1, lsl #1
   2ae6c:	add	r0, r0, r1, lsl #2
   2ae70:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2ae74:	ldr	r1, [r1, #8]
   2ae78:	ldr	lr, [fp, #-32]	; 0xffffffe0
   2ae7c:	add	r1, r1, lr, lsl #2
   2ae80:	ldr	r1, [r1]
   2ae84:	bl	21ecc <__assert_fail@plt+0x109c8>
   2ae88:	str	r0, [fp, #-24]	; 0xffffffe8
   2ae8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ae90:	cmp	r0, #0
   2ae94:	beq	2ae9c <__assert_fail@plt+0x19998>
   2ae98:	b	2aee0 <__assert_fail@plt+0x199dc>
   2ae9c:	sub	r0, fp, #76	; 0x4c
   2aea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2aea4:	add	r1, r1, #1
   2aea8:	str	r1, [fp, #-44]	; 0xffffffd4
   2aeac:	bl	2af38 <__assert_fail@plt+0x19a34>
   2aeb0:	b	2aeb4 <__assert_fail@plt+0x199b0>
   2aeb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2aeb8:	add	r0, r0, #1
   2aebc:	str	r0, [fp, #-32]	; 0xffffffe0
   2aec0:	b	2a798 <__assert_fail@plt+0x19294>
   2aec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2aec8:	cmp	r0, #256	; 0x100
   2aecc:	bgt	2aed4 <__assert_fail@plt+0x199d0>
   2aed0:	b	2aed4 <__assert_fail@plt+0x199d0>
   2aed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2aed8:	str	r0, [fp, #-4]
   2aedc:	b	2af2c <__assert_fail@plt+0x19a28>
   2aee0:	movw	r0, #0
   2aee4:	str	r0, [fp, #-36]	; 0xffffffdc
   2aee8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aeec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2aef0:	cmp	r0, r1
   2aef4:	bge	2af24 <__assert_fail@plt+0x19a20>
   2aef8:	ldr	r0, [fp, #-16]
   2aefc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2af00:	movw	r2, #12
   2af04:	mul	r1, r1, r2
   2af08:	add	r0, r0, r1
   2af0c:	ldr	r0, [r0, #8]
   2af10:	bl	35268 <__assert_fail@plt+0x23d64>
   2af14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2af18:	add	r0, r0, #1
   2af1c:	str	r0, [fp, #-36]	; 0xffffffdc
   2af20:	b	2aee8 <__assert_fail@plt+0x199e4>
   2af24:	mvn	r0, #0
   2af28:	str	r0, [fp, #-4]
   2af2c:	ldr	r0, [fp, #-4]
   2af30:	mov	sp, fp
   2af34:	pop	{fp, pc}
   2af38:	push	{fp, lr}
   2af3c:	mov	fp, sp
   2af40:	sub	sp, sp, #8
   2af44:	str	r0, [sp, #4]
   2af48:	ldr	r0, [sp, #4]
   2af4c:	movw	r1, #0
   2af50:	and	r1, r1, #255	; 0xff
   2af54:	movw	r2, #32
   2af58:	bl	11420 <memset@plt>
   2af5c:	mov	sp, fp
   2af60:	pop	{fp, pc}
   2af64:	sub	sp, sp, #12
   2af68:	str	r0, [sp, #8]
   2af6c:	str	r1, [sp, #4]
   2af70:	movw	r0, #0
   2af74:	str	r0, [sp]
   2af78:	ldr	r0, [sp]
   2af7c:	cmp	r0, #8
   2af80:	bge	2afb4 <__assert_fail@plt+0x19ab0>
   2af84:	ldr	r0, [sp, #4]
   2af88:	ldr	r1, [sp]
   2af8c:	ldr	r0, [r0, r1, lsl #2]
   2af90:	ldr	r2, [sp, #8]
   2af94:	add	r1, r2, r1, lsl #2
   2af98:	ldr	r2, [r1]
   2af9c:	orr	r0, r2, r0
   2afa0:	str	r0, [r1]
   2afa4:	ldr	r0, [sp]
   2afa8:	add	r0, r0, #1
   2afac:	str	r0, [sp]
   2afb0:	b	2af78 <__assert_fail@plt+0x19a74>
   2afb4:	add	sp, sp, #12
   2afb8:	bx	lr
   2afbc:	push	{fp, lr}
   2afc0:	mov	fp, sp
   2afc4:	sub	sp, sp, #8
   2afc8:	str	r0, [sp, #4]
   2afcc:	ldr	r0, [sp, #4]
   2afd0:	movw	r1, #255	; 0xff
   2afd4:	and	r1, r1, #255	; 0xff
   2afd8:	movw	r2, #32
   2afdc:	bl	11420 <memset@plt>
   2afe0:	mov	sp, fp
   2afe4:	pop	{fp, pc}
   2afe8:	sub	sp, sp, #8
   2afec:	str	r0, [sp, #4]
   2aff0:	str	r1, [sp]
   2aff4:	ldr	r0, [sp]
   2aff8:	asr	r1, r0, #31
   2affc:	add	r1, r0, r1, lsr #27
   2b000:	bic	r2, r1, #31
   2b004:	sub	r0, r0, r2
   2b008:	mov	r2, #1
   2b00c:	mvn	r0, r2, lsl r0
   2b010:	ldr	r2, [sp, #4]
   2b014:	asr	r1, r1, #5
   2b018:	add	r1, r2, r1, lsl #2
   2b01c:	ldr	r2, [r1]
   2b020:	and	r0, r2, r0
   2b024:	str	r0, [r1]
   2b028:	add	sp, sp, #8
   2b02c:	bx	lr
   2b030:	push	{fp, lr}
   2b034:	mov	fp, sp
   2b038:	sub	sp, sp, #8
   2b03c:	str	r0, [sp, #4]
   2b040:	str	r1, [sp]
   2b044:	ldr	r0, [sp, #4]
   2b048:	ldr	r1, [sp]
   2b04c:	movw	r2, #32
   2b050:	bl	112a0 <memcpy@plt>
   2b054:	mov	sp, fp
   2b058:	pop	{fp, pc}
   2b05c:	sub	sp, sp, #24
   2b060:	str	r0, [sp, #16]
   2b064:	str	r1, [sp, #12]
   2b068:	str	r2, [sp, #8]
   2b06c:	ldr	r0, [sp, #16]
   2b070:	ldr	r0, [r0]
   2b074:	ldr	r1, [sp, #12]
   2b078:	add	r0, r0, r1, lsl #3
   2b07c:	ldrb	r0, [r0, #4]
   2b080:	str	r0, [sp, #4]
   2b084:	ldr	r0, [sp, #16]
   2b088:	ldr	r0, [r0]
   2b08c:	ldr	r1, [sp, #12]
   2b090:	add	r0, r0, r1, lsl #3
   2b094:	ldr	r0, [r0, #4]
   2b098:	lsr	r0, r0, #8
   2b09c:	movw	r1, #1023	; 0x3ff
   2b0a0:	and	r0, r0, r1
   2b0a4:	str	r0, [sp]
   2b0a8:	ldr	r0, [sp, #4]
   2b0ac:	cmp	r0, #2
   2b0b0:	beq	2b0c4 <__assert_fail@plt+0x19bc0>
   2b0b4:	movw	r0, #0
   2b0b8:	and	r0, r0, #1
   2b0bc:	strb	r0, [sp, #23]
   2b0c0:	b	2b17c <__assert_fail@plt+0x19c78>
   2b0c4:	ldr	r0, [sp]
   2b0c8:	cmp	r0, #0
   2b0cc:	bne	2b0e0 <__assert_fail@plt+0x19bdc>
   2b0d0:	movw	r0, #1
   2b0d4:	and	r0, r0, #1
   2b0d8:	strb	r0, [sp, #23]
   2b0dc:	b	2b17c <__assert_fail@plt+0x19c78>
   2b0e0:	ldr	r0, [sp]
   2b0e4:	and	r0, r0, #4
   2b0e8:	cmp	r0, #0
   2b0ec:	beq	2b100 <__assert_fail@plt+0x19bfc>
   2b0f0:	ldr	r0, [sp, #8]
   2b0f4:	and	r0, r0, #1
   2b0f8:	cmp	r0, #0
   2b0fc:	beq	2b160 <__assert_fail@plt+0x19c5c>
   2b100:	ldr	r0, [sp]
   2b104:	and	r0, r0, #8
   2b108:	cmp	r0, #0
   2b10c:	beq	2b120 <__assert_fail@plt+0x19c1c>
   2b110:	ldr	r0, [sp, #8]
   2b114:	and	r0, r0, #1
   2b118:	cmp	r0, #0
   2b11c:	bne	2b160 <__assert_fail@plt+0x19c5c>
   2b120:	ldr	r0, [sp]
   2b124:	and	r0, r0, #32
   2b128:	cmp	r0, #0
   2b12c:	beq	2b140 <__assert_fail@plt+0x19c3c>
   2b130:	ldr	r0, [sp, #8]
   2b134:	and	r0, r0, #2
   2b138:	cmp	r0, #0
   2b13c:	beq	2b160 <__assert_fail@plt+0x19c5c>
   2b140:	ldr	r0, [sp]
   2b144:	and	r0, r0, #128	; 0x80
   2b148:	cmp	r0, #0
   2b14c:	beq	2b170 <__assert_fail@plt+0x19c6c>
   2b150:	ldr	r0, [sp, #8]
   2b154:	and	r0, r0, #8
   2b158:	cmp	r0, #0
   2b15c:	bne	2b170 <__assert_fail@plt+0x19c6c>
   2b160:	movw	r0, #0
   2b164:	and	r0, r0, #1
   2b168:	strb	r0, [sp, #23]
   2b16c:	b	2b17c <__assert_fail@plt+0x19c78>
   2b170:	movw	r0, #1
   2b174:	and	r0, r0, #1
   2b178:	strb	r0, [sp, #23]
   2b17c:	ldrb	r0, [sp, #23]
   2b180:	and	r0, r0, #1
   2b184:	add	sp, sp, #24
   2b188:	bx	lr
   2b18c:	push	{fp, lr}
   2b190:	mov	fp, sp
   2b194:	sub	sp, sp, #24
   2b198:	ldr	ip, [fp, #8]
   2b19c:	str	r0, [fp, #-4]
   2b1a0:	str	r1, [fp, #-8]
   2b1a4:	str	r2, [sp, #12]
   2b1a8:	str	r3, [sp, #8]
   2b1ac:	ldr	r0, [fp, #-8]
   2b1b0:	ldr	r1, [fp, #-4]
   2b1b4:	str	r0, [r1]
   2b1b8:	ldr	r0, [sp, #12]
   2b1bc:	ldr	r1, [fp, #-4]
   2b1c0:	str	r0, [r1, #4]
   2b1c4:	ldr	r0, [sp, #8]
   2b1c8:	ldr	r1, [fp, #-4]
   2b1cc:	str	r0, [r1, #8]
   2b1d0:	ldr	r0, [fp, #8]
   2b1d4:	ldr	r1, [fp, #-4]
   2b1d8:	str	r0, [r1, #12]
   2b1dc:	ldr	r0, [fp, #-4]
   2b1e0:	add	r0, r0, #16
   2b1e4:	movw	r1, #0
   2b1e8:	and	r1, r1, #255	; 0xff
   2b1ec:	movw	r2, #12
   2b1f0:	str	ip, [sp, #4]
   2b1f4:	bl	11420 <memset@plt>
   2b1f8:	mov	sp, fp
   2b1fc:	pop	{fp, pc}
   2b200:	push	{fp, lr}
   2b204:	mov	fp, sp
   2b208:	sub	sp, sp, #40	; 0x28
   2b20c:	str	r0, [fp, #-8]
   2b210:	str	r1, [fp, #-12]
   2b214:	movw	r0, #0
   2b218:	str	r0, [sp, #20]
   2b21c:	ldr	r1, [fp, #-12]
   2b220:	ldr	r1, [r1, #12]
   2b224:	str	r1, [sp, #16]
   2b228:	ldr	r1, [fp, #-8]
   2b22c:	ldr	r1, [r1, #100]	; 0x64
   2b230:	cmp	r1, r0
   2b234:	beq	2b25c <__assert_fail@plt+0x19d58>
   2b238:	ldr	r0, [fp, #-8]
   2b23c:	ldr	r0, [r0, #100]	; 0x64
   2b240:	ldr	r1, [sp, #16]
   2b244:	add	r0, r0, r1, lsl #2
   2b248:	ldr	r0, [r0]
   2b24c:	movw	r1, #0
   2b250:	cmp	r0, r1
   2b254:	beq	2b25c <__assert_fail@plt+0x19d58>
   2b258:	b	2b25c <__assert_fail@plt+0x19d58>
   2b25c:	ldr	r0, [fp, #-12]
   2b260:	ldr	r1, [r0, #8]
   2b264:	add	r0, sp, #4
   2b268:	bl	21ecc <__assert_fail@plt+0x109c8>
   2b26c:	str	r0, [fp, #-16]
   2b270:	ldr	r0, [fp, #-16]
   2b274:	cmp	r0, #0
   2b278:	beq	2b288 <__assert_fail@plt+0x19d84>
   2b27c:	ldr	r0, [fp, #-16]
   2b280:	str	r0, [fp, #-4]
   2b284:	b	2b3ec <__assert_fail@plt+0x19ee8>
   2b288:	ldr	r0, [fp, #-8]
   2b28c:	ldr	r1, [fp, #-12]
   2b290:	ldr	r2, [sp, #16]
   2b294:	add	r3, sp, #4
   2b298:	bl	2b540 <__assert_fail@plt+0x1a03c>
   2b29c:	str	r0, [fp, #-16]
   2b2a0:	ldr	r0, [fp, #-16]
   2b2a4:	cmp	r0, #0
   2b2a8:	beq	2b2b0 <__assert_fail@plt+0x19dac>
   2b2ac:	b	2b3dc <__assert_fail@plt+0x19ed8>
   2b2b0:	b	2b2b4 <__assert_fail@plt+0x19db0>
   2b2b4:	ldr	r0, [sp, #16]
   2b2b8:	cmp	r0, #0
   2b2bc:	ble	2b3d4 <__assert_fail@plt+0x19ed0>
   2b2c0:	ldr	r0, [fp, #-12]
   2b2c4:	ldr	r0, [r0]
   2b2c8:	ldr	r1, [sp, #16]
   2b2cc:	add	r0, r0, r1, lsl #2
   2b2d0:	ldr	r0, [r0]
   2b2d4:	movw	r1, #0
   2b2d8:	cmp	r0, r1
   2b2dc:	bne	2b2f0 <__assert_fail@plt+0x19dec>
   2b2e0:	ldr	r0, [sp, #20]
   2b2e4:	add	r0, r0, #1
   2b2e8:	str	r0, [sp]
   2b2ec:	b	2b2fc <__assert_fail@plt+0x19df8>
   2b2f0:	movw	r0, #0
   2b2f4:	str	r0, [sp]
   2b2f8:	b	2b2fc <__assert_fail@plt+0x19df8>
   2b2fc:	ldr	r0, [sp]
   2b300:	str	r0, [sp, #20]
   2b304:	ldr	r0, [sp, #20]
   2b308:	ldr	r1, [fp, #-8]
   2b30c:	ldr	r1, [r1, #120]	; 0x78
   2b310:	cmp	r0, r1
   2b314:	ble	2b348 <__assert_fail@plt+0x19e44>
   2b318:	ldr	r0, [fp, #-12]
   2b31c:	ldr	r0, [r0]
   2b320:	ldr	r1, [sp, #16]
   2b324:	lsl	r2, r1, #2
   2b328:	movw	r1, #0
   2b32c:	and	r1, r1, #255	; 0xff
   2b330:	bl	11420 <memset@plt>
   2b334:	ldr	r0, [sp, #12]
   2b338:	bl	35268 <__assert_fail@plt+0x23d64>
   2b33c:	movw	r0, #0
   2b340:	str	r0, [fp, #-4]
   2b344:	b	2b3ec <__assert_fail@plt+0x19ee8>
   2b348:	mov	r0, #0
   2b34c:	str	r0, [sp, #8]
   2b350:	ldr	r0, [sp, #16]
   2b354:	sub	r0, r0, #1
   2b358:	str	r0, [sp, #16]
   2b35c:	ldr	r0, [fp, #-8]
   2b360:	ldr	r0, [r0, #100]	; 0x64
   2b364:	ldr	r1, [sp, #16]
   2b368:	add	r0, r0, r1, lsl #2
   2b36c:	ldr	r0, [r0]
   2b370:	movw	r1, #0
   2b374:	cmp	r0, r1
   2b378:	beq	2b3a8 <__assert_fail@plt+0x19ea4>
   2b37c:	ldr	r0, [fp, #-8]
   2b380:	ldr	r1, [fp, #-12]
   2b384:	ldr	r2, [sp, #16]
   2b388:	add	r3, sp, #4
   2b38c:	bl	2b744 <__assert_fail@plt+0x1a240>
   2b390:	str	r0, [fp, #-16]
   2b394:	ldr	r0, [fp, #-16]
   2b398:	cmp	r0, #0
   2b39c:	beq	2b3a4 <__assert_fail@plt+0x19ea0>
   2b3a0:	b	2b3dc <__assert_fail@plt+0x19ed8>
   2b3a4:	b	2b3a8 <__assert_fail@plt+0x19ea4>
   2b3a8:	ldr	r0, [fp, #-8]
   2b3ac:	ldr	r1, [fp, #-12]
   2b3b0:	ldr	r2, [sp, #16]
   2b3b4:	add	r3, sp, #4
   2b3b8:	bl	2b540 <__assert_fail@plt+0x1a03c>
   2b3bc:	str	r0, [fp, #-16]
   2b3c0:	ldr	r0, [fp, #-16]
   2b3c4:	cmp	r0, #0
   2b3c8:	beq	2b3d0 <__assert_fail@plt+0x19ecc>
   2b3cc:	b	2b3dc <__assert_fail@plt+0x19ed8>
   2b3d0:	b	2b2b4 <__assert_fail@plt+0x19db0>
   2b3d4:	movw	r0, #0
   2b3d8:	str	r0, [fp, #-16]
   2b3dc:	ldr	r0, [sp, #12]
   2b3e0:	bl	35268 <__assert_fail@plt+0x23d64>
   2b3e4:	ldr	r0, [fp, #-16]
   2b3e8:	str	r0, [fp, #-4]
   2b3ec:	ldr	r0, [fp, #-4]
   2b3f0:	mov	sp, fp
   2b3f4:	pop	{fp, pc}
   2b3f8:	push	{fp, lr}
   2b3fc:	mov	fp, sp
   2b400:	sub	sp, sp, #48	; 0x30
   2b404:	str	r0, [fp, #-8]
   2b408:	str	r1, [fp, #-12]
   2b40c:	str	r2, [fp, #-16]
   2b410:	str	r3, [fp, #-20]	; 0xffffffec
   2b414:	movw	r0, #0
   2b418:	str	r0, [sp, #24]
   2b41c:	ldr	r0, [sp, #24]
   2b420:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b424:	cmp	r0, r1
   2b428:	bge	2b52c <__assert_fail@plt+0x1a028>
   2b42c:	ldr	r0, [fp, #-12]
   2b430:	ldr	r1, [sp, #24]
   2b434:	add	r0, r0, r1, lsl #2
   2b438:	ldr	r0, [r0]
   2b43c:	movw	r1, #0
   2b440:	cmp	r0, r1
   2b444:	bne	2b464 <__assert_fail@plt+0x19f60>
   2b448:	ldr	r0, [fp, #-16]
   2b44c:	ldr	r1, [sp, #24]
   2b450:	ldr	r0, [r0, r1, lsl #2]
   2b454:	ldr	r2, [fp, #-12]
   2b458:	add	r1, r2, r1, lsl #2
   2b45c:	str	r0, [r1]
   2b460:	b	2b518 <__assert_fail@plt+0x1a014>
   2b464:	ldr	r0, [fp, #-16]
   2b468:	ldr	r1, [sp, #24]
   2b46c:	add	r0, r0, r1, lsl #2
   2b470:	ldr	r0, [r0]
   2b474:	movw	r1, #0
   2b478:	cmp	r0, r1
   2b47c:	beq	2b514 <__assert_fail@plt+0x1a010>
   2b480:	ldr	r0, [fp, #-12]
   2b484:	ldr	r1, [sp, #24]
   2b488:	ldr	r0, [r0, r1, lsl #2]
   2b48c:	add	r0, r0, #4
   2b490:	ldr	r2, [fp, #-16]
   2b494:	add	r1, r2, r1, lsl #2
   2b498:	ldr	r1, [r1]
   2b49c:	add	r2, r1, #4
   2b4a0:	add	r1, sp, #8
   2b4a4:	str	r0, [sp, #4]
   2b4a8:	mov	r0, r1
   2b4ac:	ldr	r1, [sp, #4]
   2b4b0:	bl	27390 <__assert_fail@plt+0x15e8c>
   2b4b4:	str	r0, [sp, #20]
   2b4b8:	ldr	r0, [sp, #20]
   2b4bc:	cmp	r0, #0
   2b4c0:	beq	2b4d0 <__assert_fail@plt+0x19fcc>
   2b4c4:	ldr	r0, [sp, #20]
   2b4c8:	str	r0, [fp, #-4]
   2b4cc:	b	2b534 <__assert_fail@plt+0x1a030>
   2b4d0:	ldr	r1, [fp, #-8]
   2b4d4:	add	r0, sp, #20
   2b4d8:	add	r2, sp, #8
   2b4dc:	bl	28f88 <__assert_fail@plt+0x17a84>
   2b4e0:	ldr	r1, [fp, #-12]
   2b4e4:	ldr	r2, [sp, #24]
   2b4e8:	add	r1, r1, r2, lsl #2
   2b4ec:	str	r0, [r1]
   2b4f0:	ldr	r0, [sp, #16]
   2b4f4:	bl	35268 <__assert_fail@plt+0x23d64>
   2b4f8:	ldr	r0, [sp, #20]
   2b4fc:	cmp	r0, #0
   2b500:	beq	2b510 <__assert_fail@plt+0x1a00c>
   2b504:	ldr	r0, [sp, #20]
   2b508:	str	r0, [fp, #-4]
   2b50c:	b	2b534 <__assert_fail@plt+0x1a030>
   2b510:	b	2b514 <__assert_fail@plt+0x1a010>
   2b514:	b	2b518 <__assert_fail@plt+0x1a014>
   2b518:	b	2b51c <__assert_fail@plt+0x1a018>
   2b51c:	ldr	r0, [sp, #24]
   2b520:	add	r0, r0, #1
   2b524:	str	r0, [sp, #24]
   2b528:	b	2b41c <__assert_fail@plt+0x19f18>
   2b52c:	movw	r0, #0
   2b530:	str	r0, [fp, #-4]
   2b534:	ldr	r0, [fp, #-4]
   2b538:	mov	sp, fp
   2b53c:	pop	{fp, pc}
   2b540:	push	{fp, lr}
   2b544:	mov	fp, sp
   2b548:	sub	sp, sp, #48	; 0x30
   2b54c:	str	r0, [fp, #-8]
   2b550:	str	r1, [fp, #-12]
   2b554:	str	r2, [fp, #-16]
   2b558:	str	r3, [fp, #-20]	; 0xffffffec
   2b55c:	ldr	r0, [fp, #-8]
   2b560:	ldr	r0, [r0, #84]	; 0x54
   2b564:	str	r0, [sp, #24]
   2b568:	mov	r0, #0
   2b56c:	str	r0, [sp, #20]
   2b570:	ldr	r0, [fp, #-8]
   2b574:	ldr	r0, [r0, #100]	; 0x64
   2b578:	ldr	r1, [fp, #-16]
   2b57c:	add	r0, r0, r1, lsl #2
   2b580:	ldr	r0, [r0]
   2b584:	movw	r1, #0
   2b588:	cmp	r0, r1
   2b58c:	bne	2b59c <__assert_fail@plt+0x1a098>
   2b590:	movw	r0, #0
   2b594:	str	r0, [sp, #12]
   2b598:	b	2b5b8 <__assert_fail@plt+0x1a0b4>
   2b59c:	ldr	r0, [fp, #-8]
   2b5a0:	ldr	r0, [r0, #100]	; 0x64
   2b5a4:	ldr	r1, [fp, #-16]
   2b5a8:	add	r0, r0, r1, lsl #2
   2b5ac:	ldr	r0, [r0]
   2b5b0:	add	r0, r0, #4
   2b5b4:	str	r0, [sp, #12]
   2b5b8:	ldr	r0, [sp, #12]
   2b5bc:	str	r0, [sp, #16]
   2b5c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b5c4:	ldr	r0, [r0, #4]
   2b5c8:	cmp	r0, #0
   2b5cc:	bne	2b5ec <__assert_fail@plt+0x1a0e8>
   2b5d0:	ldr	r0, [fp, #-12]
   2b5d4:	ldr	r0, [r0]
   2b5d8:	ldr	r1, [fp, #-16]
   2b5dc:	add	r0, r0, r1, lsl #2
   2b5e0:	movw	r1, #0
   2b5e4:	str	r1, [r0]
   2b5e8:	b	2b6c8 <__assert_fail@plt+0x1a1c4>
   2b5ec:	ldr	r0, [sp, #16]
   2b5f0:	movw	r1, #0
   2b5f4:	cmp	r0, r1
   2b5f8:	beq	2b688 <__assert_fail@plt+0x1a184>
   2b5fc:	ldr	r0, [sp, #24]
   2b600:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b604:	ldr	r2, [sp, #16]
   2b608:	bl	2b998 <__assert_fail@plt+0x1a494>
   2b60c:	str	r0, [sp, #20]
   2b610:	ldr	r0, [sp, #20]
   2b614:	cmp	r0, #0
   2b618:	beq	2b628 <__assert_fail@plt+0x1a124>
   2b61c:	ldr	r0, [sp, #20]
   2b620:	str	r0, [fp, #-4]
   2b624:	b	2b738 <__assert_fail@plt+0x1a234>
   2b628:	ldr	r0, [fp, #-12]
   2b62c:	ldr	r0, [r0, #20]
   2b630:	cmp	r0, #0
   2b634:	beq	2b684 <__assert_fail@plt+0x1a180>
   2b638:	ldr	r0, [sp, #24]
   2b63c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b640:	ldr	r2, [sp, #16]
   2b644:	ldr	r3, [fp, #-12]
   2b648:	add	r3, r3, #16
   2b64c:	ldr	ip, [fp, #-8]
   2b650:	ldr	ip, [ip, #116]	; 0x74
   2b654:	ldr	lr, [fp, #-16]
   2b658:	str	ip, [sp]
   2b65c:	str	lr, [sp, #4]
   2b660:	bl	2bacc <__assert_fail@plt+0x1a5c8>
   2b664:	str	r0, [sp, #20]
   2b668:	ldr	r0, [sp, #20]
   2b66c:	cmp	r0, #0
   2b670:	beq	2b680 <__assert_fail@plt+0x1a17c>
   2b674:	ldr	r0, [sp, #20]
   2b678:	str	r0, [fp, #-4]
   2b67c:	b	2b738 <__assert_fail@plt+0x1a234>
   2b680:	b	2b684 <__assert_fail@plt+0x1a180>
   2b684:	b	2b688 <__assert_fail@plt+0x1a184>
   2b688:	ldr	r1, [sp, #24]
   2b68c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b690:	add	r0, sp, #20
   2b694:	bl	28f88 <__assert_fail@plt+0x17a84>
   2b698:	ldr	r1, [fp, #-12]
   2b69c:	ldr	r1, [r1]
   2b6a0:	ldr	r2, [fp, #-16]
   2b6a4:	add	r1, r1, r2, lsl #2
   2b6a8:	str	r0, [r1]
   2b6ac:	ldr	r0, [sp, #20]
   2b6b0:	cmp	r0, #0
   2b6b4:	beq	2b6c4 <__assert_fail@plt+0x1a1c0>
   2b6b8:	ldr	r0, [sp, #20]
   2b6bc:	str	r0, [fp, #-4]
   2b6c0:	b	2b738 <__assert_fail@plt+0x1a234>
   2b6c4:	b	2b6c8 <__assert_fail@plt+0x1a1c4>
   2b6c8:	ldr	r0, [sp, #16]
   2b6cc:	movw	r1, #0
   2b6d0:	cmp	r0, r1
   2b6d4:	beq	2b730 <__assert_fail@plt+0x1a22c>
   2b6d8:	ldr	r0, [fp, #-8]
   2b6dc:	ldr	r0, [r0, #100]	; 0x64
   2b6e0:	ldr	r1, [fp, #-16]
   2b6e4:	ldr	r0, [r0, r1, lsl #2]
   2b6e8:	ldrb	r0, [r0, #52]	; 0x34
   2b6ec:	ubfx	r0, r0, #6, #1
   2b6f0:	and	r0, r0, #255	; 0xff
   2b6f4:	cmp	r0, #0
   2b6f8:	beq	2b730 <__assert_fail@plt+0x1a22c>
   2b6fc:	ldr	r0, [fp, #-8]
   2b700:	ldr	r1, [fp, #-12]
   2b704:	ldr	r2, [fp, #-16]
   2b708:	ldr	r3, [sp, #16]
   2b70c:	bl	2be9c <__assert_fail@plt+0x1a998>
   2b710:	str	r0, [sp, #20]
   2b714:	ldr	r0, [sp, #20]
   2b718:	cmp	r0, #0
   2b71c:	beq	2b72c <__assert_fail@plt+0x1a228>
   2b720:	ldr	r0, [sp, #20]
   2b724:	str	r0, [fp, #-4]
   2b728:	b	2b738 <__assert_fail@plt+0x1a234>
   2b72c:	b	2b730 <__assert_fail@plt+0x1a22c>
   2b730:	movw	r0, #0
   2b734:	str	r0, [fp, #-4]
   2b738:	ldr	r0, [fp, #-4]
   2b73c:	mov	sp, fp
   2b740:	pop	{fp, pc}
   2b744:	push	{fp, lr}
   2b748:	mov	fp, sp
   2b74c:	sub	sp, sp, #56	; 0x38
   2b750:	str	r0, [fp, #-8]
   2b754:	str	r1, [fp, #-12]
   2b758:	str	r2, [fp, #-16]
   2b75c:	str	r3, [fp, #-20]	; 0xffffffec
   2b760:	ldr	r0, [fp, #-8]
   2b764:	ldr	r0, [r0, #84]	; 0x54
   2b768:	str	r0, [fp, #-24]	; 0xffffffe8
   2b76c:	ldr	r0, [fp, #-8]
   2b770:	ldr	r0, [r0, #100]	; 0x64
   2b774:	ldr	r1, [fp, #-16]
   2b778:	add	r0, r0, r1, lsl #2
   2b77c:	ldr	r0, [r0]
   2b780:	add	r0, r0, #16
   2b784:	str	r0, [sp, #28]
   2b788:	movw	r0, #0
   2b78c:	str	r0, [sp, #24]
   2b790:	ldr	r0, [sp, #24]
   2b794:	ldr	r1, [sp, #28]
   2b798:	ldr	r1, [r1, #4]
   2b79c:	cmp	r0, r1
   2b7a0:	bge	2b984 <__assert_fail@plt+0x1a480>
   2b7a4:	ldr	r0, [sp, #28]
   2b7a8:	ldr	r0, [r0, #8]
   2b7ac:	ldr	r1, [sp, #24]
   2b7b0:	ldr	r0, [r0, r1, lsl #2]
   2b7b4:	str	r0, [sp, #20]
   2b7b8:	mov	r0, #0
   2b7bc:	str	r0, [sp, #16]
   2b7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b7c4:	ldr	r0, [r0]
   2b7c8:	ldr	r1, [sp, #20]
   2b7cc:	add	r0, r0, r1, lsl #3
   2b7d0:	ldr	r0, [r0, #4]
   2b7d4:	and	r0, r0, #255	; 0xff
   2b7d8:	and	r0, r0, #8
   2b7dc:	cmp	r0, #0
   2b7e0:	bne	2b7e8 <__assert_fail@plt+0x1a2e4>
   2b7e4:	b	2b7e8 <__assert_fail@plt+0x1a2e4>
   2b7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b7ec:	ldr	r0, [r0]
   2b7f0:	ldr	r1, [sp, #20]
   2b7f4:	add	r0, r0, r1, lsl #3
   2b7f8:	ldr	r0, [r0, #4]
   2b7fc:	lsr	r0, r0, #20
   2b800:	and	r0, r0, #1
   2b804:	cmp	r0, #0
   2b808:	beq	2b830 <__assert_fail@plt+0x1a32c>
   2b80c:	ldr	r0, [fp, #-8]
   2b810:	ldr	r1, [fp, #-12]
   2b814:	ldr	r2, [sp, #20]
   2b818:	ldr	r3, [fp, #-16]
   2b81c:	ldr	ip, [fp, #-12]
   2b820:	ldr	ip, [ip, #12]
   2b824:	str	ip, [sp]
   2b828:	bl	2cf34 <__assert_fail@plt+0x1ba30>
   2b82c:	str	r0, [sp, #16]
   2b830:	ldr	r0, [sp, #16]
   2b834:	cmp	r0, #0
   2b838:	bne	2b8c4 <__assert_fail@plt+0x1a3c0>
   2b83c:	ldr	r0, [fp, #-8]
   2b840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b844:	ldr	r1, [r1]
   2b848:	ldr	r2, [sp, #20]
   2b84c:	add	r1, r1, r2, lsl #3
   2b850:	ldr	r2, [fp, #-16]
   2b854:	bl	298c8 <__assert_fail@plt+0x183c4>
   2b858:	tst	r0, #1
   2b85c:	beq	2b8c4 <__assert_fail@plt+0x1a3c0>
   2b860:	ldr	r0, [fp, #-12]
   2b864:	ldr	r0, [r0]
   2b868:	ldr	r1, [fp, #-16]
   2b86c:	add	r1, r1, #1
   2b870:	add	r0, r0, r1, lsl #2
   2b874:	ldr	r0, [r0]
   2b878:	movw	r1, #0
   2b87c:	cmp	r0, r1
   2b880:	beq	2b8c4 <__assert_fail@plt+0x1a3c0>
   2b884:	ldr	r0, [fp, #-12]
   2b888:	ldr	r0, [r0]
   2b88c:	ldr	r1, [fp, #-16]
   2b890:	add	r0, r0, r1, lsl #2
   2b894:	ldr	r0, [r0, #4]
   2b898:	add	r0, r0, #4
   2b89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b8a0:	ldr	r1, [r1, #12]
   2b8a4:	ldr	r2, [sp, #20]
   2b8a8:	add	r1, r1, r2, lsl #2
   2b8ac:	ldr	r1, [r1]
   2b8b0:	bl	23254 <__assert_fail@plt+0x11d50>
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2b8c4 <__assert_fail@plt+0x1a3c0>
   2b8bc:	movw	r0, #1
   2b8c0:	str	r0, [sp, #16]
   2b8c4:	ldr	r0, [sp, #16]
   2b8c8:	cmp	r0, #0
   2b8cc:	bne	2b8d4 <__assert_fail@plt+0x1a3d0>
   2b8d0:	b	2b974 <__assert_fail@plt+0x1a470>
   2b8d4:	ldr	r0, [fp, #-12]
   2b8d8:	ldr	r0, [r0, #20]
   2b8dc:	cmp	r0, #0
   2b8e0:	beq	2b93c <__assert_fail@plt+0x1a438>
   2b8e4:	ldr	r0, [fp, #-16]
   2b8e8:	ldr	r1, [sp, #16]
   2b8ec:	add	r0, r0, r1
   2b8f0:	str	r0, [sp, #8]
   2b8f4:	ldr	r0, [fp, #-8]
   2b8f8:	ldr	r1, [fp, #-12]
   2b8fc:	add	r1, r1, #16
   2b900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b904:	ldr	r2, [r2, #12]
   2b908:	ldr	r3, [sp, #20]
   2b90c:	add	r2, r2, r3, lsl #2
   2b910:	ldr	r2, [r2]
   2b914:	ldr	r3, [sp, #8]
   2b918:	ldr	ip, [sp, #20]
   2b91c:	ldr	lr, [fp, #-16]
   2b920:	str	ip, [sp]
   2b924:	str	lr, [sp, #4]
   2b928:	bl	2c9a0 <__assert_fail@plt+0x1b49c>
   2b92c:	tst	r0, #1
   2b930:	beq	2b938 <__assert_fail@plt+0x1a434>
   2b934:	b	2b974 <__assert_fail@plt+0x1a470>
   2b938:	b	2b93c <__assert_fail@plt+0x1a438>
   2b93c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b940:	ldr	r1, [sp, #20]
   2b944:	bl	22d98 <__assert_fail@plt+0x11894>
   2b948:	and	r0, r0, #1
   2b94c:	strb	r0, [sp, #15]
   2b950:	ldrb	r0, [sp, #15]
   2b954:	mvn	r1, #0
   2b958:	eor	r0, r0, r1
   2b95c:	tst	r0, #1
   2b960:	beq	2b970 <__assert_fail@plt+0x1a46c>
   2b964:	movw	r0, #12
   2b968:	str	r0, [fp, #-4]
   2b96c:	b	2b98c <__assert_fail@plt+0x1a488>
   2b970:	b	2b974 <__assert_fail@plt+0x1a470>
   2b974:	ldr	r0, [sp, #24]
   2b978:	add	r0, r0, #1
   2b97c:	str	r0, [sp, #24]
   2b980:	b	2b790 <__assert_fail@plt+0x1a28c>
   2b984:	movw	r0, #0
   2b988:	str	r0, [fp, #-4]
   2b98c:	ldr	r0, [fp, #-4]
   2b990:	mov	sp, fp
   2b994:	pop	{fp, pc}
   2b998:	push	{fp, lr}
   2b99c:	mov	fp, sp
   2b9a0:	sub	sp, sp, #32
   2b9a4:	str	r0, [fp, #-8]
   2b9a8:	str	r1, [fp, #-12]
   2b9ac:	str	r2, [sp, #16]
   2b9b0:	movw	r0, #0
   2b9b4:	str	r0, [sp, #12]
   2b9b8:	ldr	r1, [fp, #-8]
   2b9bc:	ldr	r2, [fp, #-12]
   2b9c0:	add	r0, sp, #12
   2b9c4:	bl	28f88 <__assert_fail@plt+0x17a84>
   2b9c8:	str	r0, [sp, #4]
   2b9cc:	ldr	r0, [sp, #12]
   2b9d0:	cmp	r0, #0
   2b9d4:	beq	2b9e4 <__assert_fail@plt+0x1a4e0>
   2b9d8:	ldr	r0, [sp, #12]
   2b9dc:	str	r0, [fp, #-4]
   2b9e0:	b	2bac0 <__assert_fail@plt+0x1a5bc>
   2b9e4:	ldr	r0, [sp, #4]
   2b9e8:	ldr	r0, [r0, #28]
   2b9ec:	cmp	r0, #0
   2b9f0:	bne	2baa8 <__assert_fail@plt+0x1a5a4>
   2b9f4:	ldr	r0, [sp, #4]
   2b9f8:	add	r0, r0, #28
   2b9fc:	ldr	r1, [fp, #-12]
   2ba00:	ldr	r1, [r1, #4]
   2ba04:	bl	22330 <__assert_fail@plt+0x10e2c>
   2ba08:	str	r0, [sp, #12]
   2ba0c:	ldr	r0, [sp, #12]
   2ba10:	cmp	r0, #0
   2ba14:	beq	2ba24 <__assert_fail@plt+0x1a520>
   2ba18:	movw	r0, #12
   2ba1c:	str	r0, [fp, #-4]
   2ba20:	b	2bac0 <__assert_fail@plt+0x1a5bc>
   2ba24:	movw	r0, #0
   2ba28:	str	r0, [sp, #8]
   2ba2c:	ldr	r0, [sp, #8]
   2ba30:	ldr	r1, [fp, #-12]
   2ba34:	ldr	r1, [r1, #4]
   2ba38:	cmp	r0, r1
   2ba3c:	bge	2baa4 <__assert_fail@plt+0x1a5a0>
   2ba40:	ldr	r0, [sp, #4]
   2ba44:	add	r0, r0, #28
   2ba48:	ldr	r1, [fp, #-8]
   2ba4c:	ldr	r1, [r1, #28]
   2ba50:	ldr	r2, [fp, #-12]
   2ba54:	ldr	r2, [r2, #8]
   2ba58:	ldr	r3, [sp, #8]
   2ba5c:	add	r2, r2, r3, lsl #2
   2ba60:	ldr	r2, [r2]
   2ba64:	movw	r3, #12
   2ba68:	mul	r2, r2, r3
   2ba6c:	add	r1, r1, r2
   2ba70:	bl	228ac <__assert_fail@plt+0x113a8>
   2ba74:	str	r0, [sp, #12]
   2ba78:	ldr	r0, [sp, #12]
   2ba7c:	cmp	r0, #0
   2ba80:	beq	2ba90 <__assert_fail@plt+0x1a58c>
   2ba84:	movw	r0, #12
   2ba88:	str	r0, [fp, #-4]
   2ba8c:	b	2bac0 <__assert_fail@plt+0x1a5bc>
   2ba90:	b	2ba94 <__assert_fail@plt+0x1a590>
   2ba94:	ldr	r0, [sp, #8]
   2ba98:	add	r0, r0, #1
   2ba9c:	str	r0, [sp, #8]
   2baa0:	b	2ba2c <__assert_fail@plt+0x1a528>
   2baa4:	b	2baa8 <__assert_fail@plt+0x1a5a4>
   2baa8:	ldr	r0, [fp, #-12]
   2baac:	ldr	r1, [sp, #16]
   2bab0:	ldr	r2, [sp, #4]
   2bab4:	add	r2, r2, #28
   2bab8:	bl	2c2cc <__assert_fail@plt+0x1adc8>
   2babc:	str	r0, [fp, #-4]
   2bac0:	ldr	r0, [fp, #-4]
   2bac4:	mov	sp, fp
   2bac8:	pop	{fp, pc}
   2bacc:	push	{fp, lr}
   2bad0:	mov	fp, sp
   2bad4:	sub	sp, sp, #80	; 0x50
   2bad8:	ldr	ip, [fp, #12]
   2badc:	ldr	lr, [fp, #8]
   2bae0:	str	r0, [fp, #-8]
   2bae4:	str	r1, [fp, #-12]
   2bae8:	str	r2, [fp, #-16]
   2baec:	str	r3, [fp, #-20]	; 0xffffffec
   2baf0:	movw	r0, #0
   2baf4:	str	r0, [fp, #-32]	; 0xffffffe0
   2baf8:	str	lr, [sp, #8]
   2bafc:	str	ip, [sp, #4]
   2bb00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bb04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bb08:	ldr	r1, [r1, #4]
   2bb0c:	cmp	r0, r1
   2bb10:	bge	2be88 <__assert_fail@plt+0x1a984>
   2bb14:	ldr	r0, [fp, #8]
   2bb18:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bb1c:	ldr	r1, [r1, #8]
   2bb20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bb24:	add	r1, r1, r2, lsl #2
   2bb28:	ldr	r1, [r1]
   2bb2c:	movw	r2, #24
   2bb30:	mul	r1, r1, r2
   2bb34:	add	r0, r0, r1
   2bb38:	str	r0, [sp, #40]	; 0x28
   2bb3c:	ldr	r0, [fp, #12]
   2bb40:	ldr	r1, [sp, #40]	; 0x28
   2bb44:	ldr	r1, [r1, #8]
   2bb48:	cmp	r0, r1
   2bb4c:	ble	2bb64 <__assert_fail@plt+0x1a660>
   2bb50:	ldr	r0, [sp, #40]	; 0x28
   2bb54:	ldr	r0, [r0, #4]
   2bb58:	ldr	r1, [fp, #12]
   2bb5c:	cmp	r0, r1
   2bb60:	bge	2bb68 <__assert_fail@plt+0x1a664>
   2bb64:	b	2be78 <__assert_fail@plt+0x1a974>
   2bb68:	ldr	r0, [fp, #-8]
   2bb6c:	ldr	r0, [r0]
   2bb70:	ldr	r1, [sp, #40]	; 0x28
   2bb74:	ldr	r1, [r1]
   2bb78:	add	r0, r0, r1, lsl #3
   2bb7c:	ldr	r0, [r0]
   2bb80:	str	r0, [fp, #-36]	; 0xffffffdc
   2bb84:	ldr	r0, [sp, #40]	; 0x28
   2bb88:	ldr	r0, [r0, #12]
   2bb8c:	ldr	r1, [fp, #12]
   2bb90:	cmp	r0, r1
   2bb94:	bne	2bda0 <__assert_fail@plt+0x1a89c>
   2bb98:	mvn	r0, #0
   2bb9c:	str	r0, [sp, #36]	; 0x24
   2bba0:	str	r0, [sp, #32]
   2bba4:	movw	r0, #0
   2bba8:	str	r0, [fp, #-28]	; 0xffffffe4
   2bbac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bbb0:	ldr	r1, [fp, #-12]
   2bbb4:	ldr	r1, [r1, #4]
   2bbb8:	cmp	r0, r1
   2bbbc:	bge	2bc74 <__assert_fail@plt+0x1a770>
   2bbc0:	ldr	r0, [fp, #-12]
   2bbc4:	ldr	r0, [r0, #8]
   2bbc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bbcc:	ldr	r0, [r0, r1, lsl #2]
   2bbd0:	str	r0, [sp, #28]
   2bbd4:	ldr	r0, [fp, #-8]
   2bbd8:	ldr	r0, [r0]
   2bbdc:	ldr	r1, [sp, #28]
   2bbe0:	add	r0, r0, r1, lsl #3
   2bbe4:	ldr	r0, [r0, #4]
   2bbe8:	and	r0, r0, #255	; 0xff
   2bbec:	str	r0, [sp, #24]
   2bbf0:	ldr	r0, [sp, #24]
   2bbf4:	cmp	r0, #8
   2bbf8:	bne	2bc28 <__assert_fail@plt+0x1a724>
   2bbfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bc00:	ldr	r1, [fp, #-8]
   2bc04:	ldr	r1, [r1]
   2bc08:	ldr	r2, [sp, #28]
   2bc0c:	add	r1, r1, r2, lsl #3
   2bc10:	ldr	r1, [r1]
   2bc14:	cmp	r0, r1
   2bc18:	bne	2bc28 <__assert_fail@plt+0x1a724>
   2bc1c:	ldr	r0, [sp, #28]
   2bc20:	str	r0, [sp, #36]	; 0x24
   2bc24:	b	2bc60 <__assert_fail@plt+0x1a75c>
   2bc28:	ldr	r0, [sp, #24]
   2bc2c:	cmp	r0, #9
   2bc30:	bne	2bc5c <__assert_fail@plt+0x1a758>
   2bc34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bc38:	ldr	r1, [fp, #-8]
   2bc3c:	ldr	r1, [r1]
   2bc40:	ldr	r2, [sp, #28]
   2bc44:	add	r1, r1, r2, lsl #3
   2bc48:	ldr	r1, [r1]
   2bc4c:	cmp	r0, r1
   2bc50:	bne	2bc5c <__assert_fail@plt+0x1a758>
   2bc54:	ldr	r0, [sp, #28]
   2bc58:	str	r0, [sp, #32]
   2bc5c:	b	2bc60 <__assert_fail@plt+0x1a75c>
   2bc60:	b	2bc64 <__assert_fail@plt+0x1a760>
   2bc64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bc68:	add	r0, r0, #1
   2bc6c:	str	r0, [fp, #-28]	; 0xffffffe4
   2bc70:	b	2bbac <__assert_fail@plt+0x1a6a8>
   2bc74:	ldr	r0, [sp, #36]	; 0x24
   2bc78:	cmp	r0, #0
   2bc7c:	blt	2bcb4 <__assert_fail@plt+0x1a7b0>
   2bc80:	ldr	r0, [fp, #-8]
   2bc84:	ldr	r1, [sp, #36]	; 0x24
   2bc88:	ldr	r2, [fp, #-12]
   2bc8c:	ldr	r3, [fp, #-16]
   2bc90:	bl	2c714 <__assert_fail@plt+0x1b210>
   2bc94:	str	r0, [fp, #-24]	; 0xffffffe8
   2bc98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bc9c:	cmp	r0, #0
   2bca0:	beq	2bcb0 <__assert_fail@plt+0x1a7ac>
   2bca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bca8:	str	r0, [fp, #-4]
   2bcac:	b	2be90 <__assert_fail@plt+0x1a98c>
   2bcb0:	b	2bcb4 <__assert_fail@plt+0x1a7b0>
   2bcb4:	ldr	r0, [sp, #32]
   2bcb8:	cmp	r0, #0
   2bcbc:	blt	2bd9c <__assert_fail@plt+0x1a898>
   2bcc0:	movw	r0, #0
   2bcc4:	str	r0, [fp, #-28]	; 0xffffffe4
   2bcc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bccc:	ldr	r1, [fp, #-12]
   2bcd0:	ldr	r1, [r1, #4]
   2bcd4:	cmp	r0, r1
   2bcd8:	bge	2bd98 <__assert_fail@plt+0x1a894>
   2bcdc:	ldr	r0, [fp, #-12]
   2bce0:	ldr	r0, [r0, #8]
   2bce4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bce8:	add	r0, r0, r1, lsl #2
   2bcec:	ldr	r0, [r0]
   2bcf0:	str	r0, [sp, #20]
   2bcf4:	ldr	r0, [fp, #-8]
   2bcf8:	ldr	r0, [r0, #28]
   2bcfc:	ldr	r1, [sp, #20]
   2bd00:	movw	r2, #12
   2bd04:	mul	r1, r1, r2
   2bd08:	add	r0, r0, r1
   2bd0c:	ldr	r1, [sp, #32]
   2bd10:	bl	23254 <__assert_fail@plt+0x11d50>
   2bd14:	cmp	r0, #0
   2bd18:	bne	2bd84 <__assert_fail@plt+0x1a880>
   2bd1c:	ldr	r0, [fp, #-8]
   2bd20:	ldr	r0, [r0, #24]
   2bd24:	ldr	r1, [sp, #20]
   2bd28:	movw	r2, #12
   2bd2c:	mul	r1, r1, r2
   2bd30:	add	r0, r0, r1
   2bd34:	ldr	r1, [sp, #32]
   2bd38:	bl	23254 <__assert_fail@plt+0x11d50>
   2bd3c:	cmp	r0, #0
   2bd40:	bne	2bd84 <__assert_fail@plt+0x1a880>
   2bd44:	ldr	r0, [fp, #-8]
   2bd48:	ldr	r1, [sp, #20]
   2bd4c:	ldr	r2, [fp, #-12]
   2bd50:	ldr	r3, [fp, #-16]
   2bd54:	bl	2c714 <__assert_fail@plt+0x1b210>
   2bd58:	str	r0, [fp, #-24]	; 0xffffffe8
   2bd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bd60:	cmp	r0, #0
   2bd64:	beq	2bd74 <__assert_fail@plt+0x1a870>
   2bd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bd6c:	str	r0, [fp, #-4]
   2bd70:	b	2be90 <__assert_fail@plt+0x1a98c>
   2bd74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bd78:	mvn	r1, #0
   2bd7c:	add	r0, r0, r1
   2bd80:	str	r0, [fp, #-28]	; 0xffffffe4
   2bd84:	b	2bd88 <__assert_fail@plt+0x1a884>
   2bd88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bd8c:	add	r0, r0, #1
   2bd90:	str	r0, [fp, #-28]	; 0xffffffe4
   2bd94:	b	2bcc8 <__assert_fail@plt+0x1a7c4>
   2bd98:	b	2bd9c <__assert_fail@plt+0x1a898>
   2bd9c:	b	2be74 <__assert_fail@plt+0x1a970>
   2bda0:	movw	r0, #0
   2bda4:	str	r0, [fp, #-28]	; 0xffffffe4
   2bda8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bdac:	ldr	r1, [fp, #-12]
   2bdb0:	ldr	r1, [r1, #4]
   2bdb4:	cmp	r0, r1
   2bdb8:	bge	2be70 <__assert_fail@plt+0x1a96c>
   2bdbc:	ldr	r0, [fp, #-12]
   2bdc0:	ldr	r0, [r0, #8]
   2bdc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bdc8:	ldr	r0, [r0, r1, lsl #2]
   2bdcc:	str	r0, [sp, #16]
   2bdd0:	ldr	r0, [fp, #-8]
   2bdd4:	ldr	r0, [r0]
   2bdd8:	ldr	r1, [sp, #16]
   2bddc:	add	r0, r0, r1, lsl #3
   2bde0:	ldr	r0, [r0, #4]
   2bde4:	and	r0, r0, #255	; 0xff
   2bde8:	str	r0, [sp, #12]
   2bdec:	ldr	r0, [sp, #12]
   2bdf0:	cmp	r0, #9
   2bdf4:	beq	2be04 <__assert_fail@plt+0x1a900>
   2bdf8:	ldr	r0, [sp, #12]
   2bdfc:	cmp	r0, #8
   2be00:	bne	2be5c <__assert_fail@plt+0x1a958>
   2be04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2be08:	ldr	r1, [fp, #-8]
   2be0c:	ldr	r1, [r1]
   2be10:	ldr	r2, [sp, #16]
   2be14:	add	r1, r1, r2, lsl #3
   2be18:	ldr	r1, [r1]
   2be1c:	cmp	r0, r1
   2be20:	beq	2be28 <__assert_fail@plt+0x1a924>
   2be24:	b	2be60 <__assert_fail@plt+0x1a95c>
   2be28:	ldr	r0, [fp, #-8]
   2be2c:	ldr	r1, [sp, #16]
   2be30:	ldr	r2, [fp, #-12]
   2be34:	ldr	r3, [fp, #-16]
   2be38:	bl	2c714 <__assert_fail@plt+0x1b210>
   2be3c:	str	r0, [fp, #-24]	; 0xffffffe8
   2be40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be44:	cmp	r0, #0
   2be48:	beq	2be58 <__assert_fail@plt+0x1a954>
   2be4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be50:	str	r0, [fp, #-4]
   2be54:	b	2be90 <__assert_fail@plt+0x1a98c>
   2be58:	b	2be5c <__assert_fail@plt+0x1a958>
   2be5c:	b	2be60 <__assert_fail@plt+0x1a95c>
   2be60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2be64:	add	r0, r0, #1
   2be68:	str	r0, [fp, #-28]	; 0xffffffe4
   2be6c:	b	2bda8 <__assert_fail@plt+0x1a8a4>
   2be70:	b	2be74 <__assert_fail@plt+0x1a970>
   2be74:	b	2be78 <__assert_fail@plt+0x1a974>
   2be78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be7c:	add	r0, r0, #1
   2be80:	str	r0, [fp, #-32]	; 0xffffffe0
   2be84:	b	2bb00 <__assert_fail@plt+0x1a5fc>
   2be88:	movw	r0, #0
   2be8c:	str	r0, [fp, #-4]
   2be90:	ldr	r0, [fp, #-4]
   2be94:	mov	sp, fp
   2be98:	pop	{fp, pc}
   2be9c:	push	{fp, lr}
   2bea0:	mov	fp, sp
   2bea4:	sub	sp, sp, #128	; 0x80
   2bea8:	str	r0, [fp, #-8]
   2beac:	str	r1, [fp, #-12]
   2beb0:	str	r2, [fp, #-16]
   2beb4:	str	r3, [fp, #-20]	; 0xffffffec
   2beb8:	ldr	r0, [fp, #-8]
   2bebc:	ldr	r0, [r0, #84]	; 0x54
   2bec0:	str	r0, [fp, #-24]	; 0xffffffe8
   2bec4:	ldr	r0, [fp, #-8]
   2bec8:	ldr	r1, [fp, #-16]
   2becc:	bl	276dc <__assert_fail@plt+0x161d8>
   2bed0:	str	r0, [sp, #60]	; 0x3c
   2bed4:	ldr	r0, [sp, #60]	; 0x3c
   2bed8:	cmn	r0, #1
   2bedc:	bne	2beec <__assert_fail@plt+0x1a9e8>
   2bee0:	movw	r0, #0
   2bee4:	str	r0, [fp, #-4]
   2bee8:	b	2c2c0 <__assert_fail@plt+0x1adbc>
   2beec:	movw	r0, #0
   2bef0:	str	r0, [sp, #64]	; 0x40
   2bef4:	str	r0, [fp, #-32]	; 0xffffffe0
   2bef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2befc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bf00:	ldr	r1, [r1, #4]
   2bf04:	cmp	r0, r1
   2bf08:	bge	2c298 <__assert_fail@plt+0x1ad94>
   2bf0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bf10:	ldr	r0, [r0, #8]
   2bf14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bf18:	ldr	r0, [r0, r1, lsl #2]
   2bf1c:	str	r0, [fp, #-36]	; 0xffffffdc
   2bf20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf24:	ldr	r0, [r0]
   2bf28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bf2c:	add	r0, r0, r1, lsl #3
   2bf30:	ldr	r0, [r0, #4]
   2bf34:	and	r0, r0, #255	; 0xff
   2bf38:	str	r0, [sp, #52]	; 0x34
   2bf3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bf40:	ldr	r1, [fp, #-12]
   2bf44:	ldr	r1, [r1, #8]
   2bf48:	cmp	r0, r1
   2bf4c:	bne	2bf68 <__assert_fail@plt+0x1aa64>
   2bf50:	ldr	r0, [fp, #-16]
   2bf54:	ldr	r1, [fp, #-12]
   2bf58:	ldr	r1, [r1, #12]
   2bf5c:	cmp	r0, r1
   2bf60:	bne	2bf68 <__assert_fail@plt+0x1aa64>
   2bf64:	b	2c288 <__assert_fail@plt+0x1ad84>
   2bf68:	ldr	r0, [sp, #52]	; 0x34
   2bf6c:	cmp	r0, #4
   2bf70:	beq	2bf78 <__assert_fail@plt+0x1aa74>
   2bf74:	b	2c288 <__assert_fail@plt+0x1ad84>
   2bf78:	ldr	r0, [fp, #-8]
   2bf7c:	ldr	r0, [r0, #116]	; 0x74
   2bf80:	ldr	r1, [sp, #60]	; 0x3c
   2bf84:	movw	r2, #24
   2bf88:	mul	r1, r1, r2
   2bf8c:	add	r0, r0, r1
   2bf90:	str	r0, [sp, #48]	; 0x30
   2bf94:	ldr	r0, [sp, #60]	; 0x3c
   2bf98:	str	r0, [sp, #56]	; 0x38
   2bf9c:	ldr	r0, [sp, #48]	; 0x30
   2bfa0:	ldr	r0, [r0]
   2bfa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bfa8:	cmp	r0, r1
   2bfac:	beq	2bfb4 <__assert_fail@plt+0x1aab0>
   2bfb0:	b	2c260 <__assert_fail@plt+0x1ad5c>
   2bfb4:	ldr	r0, [sp, #48]	; 0x30
   2bfb8:	ldr	r0, [r0, #12]
   2bfbc:	ldr	r1, [sp, #48]	; 0x30
   2bfc0:	ldr	r1, [r1, #8]
   2bfc4:	sub	r0, r0, r1
   2bfc8:	str	r0, [sp, #44]	; 0x2c
   2bfcc:	ldr	r0, [fp, #-16]
   2bfd0:	ldr	r1, [sp, #44]	; 0x2c
   2bfd4:	add	r0, r0, r1
   2bfd8:	str	r0, [sp, #40]	; 0x28
   2bfdc:	ldr	r0, [sp, #44]	; 0x2c
   2bfe0:	cmp	r0, #0
   2bfe4:	beq	2c004 <__assert_fail@plt+0x1ab00>
   2bfe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bfec:	ldr	r0, [r0, #12]
   2bff0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bff4:	add	r0, r0, r1, lsl #2
   2bff8:	ldr	r0, [r0]
   2bffc:	str	r0, [sp, #24]
   2c000:	b	2c028 <__assert_fail@plt+0x1ab24>
   2c004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c008:	ldr	r0, [r0, #20]
   2c00c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c010:	movw	r2, #12
   2c014:	mul	r1, r1, r2
   2c018:	add	r0, r0, r1
   2c01c:	ldr	r0, [r0, #8]
   2c020:	ldr	r0, [r0]
   2c024:	str	r0, [sp, #24]
   2c028:	ldr	r0, [sp, #24]
   2c02c:	str	r0, [sp, #36]	; 0x24
   2c030:	ldr	r0, [sp, #40]	; 0x28
   2c034:	ldr	r1, [fp, #-12]
   2c038:	ldr	r1, [r1, #12]
   2c03c:	cmp	r0, r1
   2c040:	bgt	2c0dc <__assert_fail@plt+0x1abd8>
   2c044:	ldr	r0, [fp, #-12]
   2c048:	ldr	r0, [r0]
   2c04c:	ldr	r1, [sp, #40]	; 0x28
   2c050:	add	r0, r0, r1, lsl #2
   2c054:	ldr	r0, [r0]
   2c058:	movw	r1, #0
   2c05c:	cmp	r0, r1
   2c060:	beq	2c0dc <__assert_fail@plt+0x1abd8>
   2c064:	ldr	r0, [fp, #-12]
   2c068:	ldr	r0, [r0]
   2c06c:	ldr	r1, [sp, #40]	; 0x28
   2c070:	add	r0, r0, r1, lsl #2
   2c074:	ldr	r0, [r0]
   2c078:	movw	r1, #0
   2c07c:	cmp	r0, r1
   2c080:	beq	2c0dc <__assert_fail@plt+0x1abd8>
   2c084:	ldr	r0, [fp, #-12]
   2c088:	ldr	r0, [r0]
   2c08c:	ldr	r1, [sp, #40]	; 0x28
   2c090:	add	r0, r0, r1, lsl #2
   2c094:	ldr	r0, [r0]
   2c098:	add	r0, r0, #4
   2c09c:	ldr	r1, [sp, #36]	; 0x24
   2c0a0:	bl	23254 <__assert_fail@plt+0x11d50>
   2c0a4:	cmp	r0, #0
   2c0a8:	beq	2c0dc <__assert_fail@plt+0x1abd8>
   2c0ac:	ldr	r0, [fp, #-8]
   2c0b0:	ldr	r1, [fp, #-12]
   2c0b4:	add	r1, r1, #16
   2c0b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c0bc:	ldr	r3, [fp, #-16]
   2c0c0:	ldr	ip, [sp, #36]	; 0x24
   2c0c4:	ldr	lr, [sp, #40]	; 0x28
   2c0c8:	str	ip, [sp]
   2c0cc:	str	lr, [sp, #4]
   2c0d0:	bl	2c9a0 <__assert_fail@plt+0x1b49c>
   2c0d4:	tst	r0, #1
   2c0d8:	beq	2c0e0 <__assert_fail@plt+0x1abdc>
   2c0dc:	b	2c260 <__assert_fail@plt+0x1ad5c>
   2c0e0:	ldr	r0, [sp, #64]	; 0x40
   2c0e4:	movw	r1, #0
   2c0e8:	cmp	r0, r1
   2c0ec:	bne	2c144 <__assert_fail@plt+0x1ac40>
   2c0f0:	ldr	r0, [fp, #-12]
   2c0f4:	add	r1, sp, #64	; 0x40
   2c0f8:	mov	r2, r1
   2c0fc:	str	r0, [sp, #20]
   2c100:	mov	r0, r2
   2c104:	ldr	r2, [sp, #20]
   2c108:	str	r1, [sp, #16]
   2c10c:	mov	r1, r2
   2c110:	movw	r2, #28
   2c114:	bl	112a0 <memcpy@plt>
   2c118:	ldr	r0, [sp, #16]
   2c11c:	add	r0, r0, #16
   2c120:	ldr	r1, [fp, #-12]
   2c124:	add	r1, r1, #16
   2c128:	bl	23180 <__assert_fail@plt+0x11c7c>
   2c12c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c130:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c134:	cmp	r0, #0
   2c138:	beq	2c140 <__assert_fail@plt+0x1ac3c>
   2c13c:	b	2c2a0 <__assert_fail@plt+0x1ad9c>
   2c140:	b	2c144 <__assert_fail@plt+0x1ac40>
   2c144:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c148:	str	r0, [sp, #72]	; 0x48
   2c14c:	ldr	r0, [fp, #-16]
   2c150:	str	r0, [sp, #76]	; 0x4c
   2c154:	add	r0, sp, #64	; 0x40
   2c158:	add	r0, r0, #16
   2c15c:	ldr	r1, [sp, #56]	; 0x38
   2c160:	bl	22d98 <__assert_fail@plt+0x11894>
   2c164:	and	r0, r0, #1
   2c168:	strb	r0, [sp, #35]	; 0x23
   2c16c:	ldrb	r0, [sp, #35]	; 0x23
   2c170:	mvn	r1, #0
   2c174:	eor	r0, r0, r1
   2c178:	tst	r0, #1
   2c17c:	beq	2c18c <__assert_fail@plt+0x1ac88>
   2c180:	movw	r0, #12
   2c184:	str	r0, [fp, #-28]	; 0xffffffe4
   2c188:	b	2c2a0 <__assert_fail@plt+0x1ad9c>
   2c18c:	ldr	r0, [sp, #64]	; 0x40
   2c190:	ldr	r1, [fp, #-16]
   2c194:	add	r0, r0, r1, lsl #2
   2c198:	ldr	r0, [r0]
   2c19c:	str	r0, [sp, #28]
   2c1a0:	ldr	r0, [fp, #-8]
   2c1a4:	add	r1, sp, #64	; 0x40
   2c1a8:	bl	2b200 <__assert_fail@plt+0x19cfc>
   2c1ac:	str	r0, [fp, #-28]	; 0xffffffe4
   2c1b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c1b4:	cmp	r0, #0
   2c1b8:	beq	2c1c0 <__assert_fail@plt+0x1acbc>
   2c1bc:	b	2c2a0 <__assert_fail@plt+0x1ad9c>
   2c1c0:	ldr	r0, [fp, #-12]
   2c1c4:	ldr	r0, [r0, #4]
   2c1c8:	movw	r1, #0
   2c1cc:	cmp	r0, r1
   2c1d0:	beq	2c208 <__assert_fail@plt+0x1ad04>
   2c1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c1d8:	ldr	r1, [fp, #-12]
   2c1dc:	ldr	r1, [r1, #4]
   2c1e0:	ldr	r2, [sp, #64]	; 0x40
   2c1e4:	ldr	r3, [fp, #-16]
   2c1e8:	add	r3, r3, #1
   2c1ec:	bl	2b3f8 <__assert_fail@plt+0x19ef4>
   2c1f0:	str	r0, [fp, #-28]	; 0xffffffe4
   2c1f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c1f8:	cmp	r0, #0
   2c1fc:	beq	2c204 <__assert_fail@plt+0x1ad00>
   2c200:	b	2c2a0 <__assert_fail@plt+0x1ad9c>
   2c204:	b	2c208 <__assert_fail@plt+0x1ad04>
   2c208:	ldr	r0, [sp, #28]
   2c20c:	ldr	r1, [sp, #64]	; 0x40
   2c210:	ldr	r2, [fp, #-16]
   2c214:	add	r1, r1, r2, lsl #2
   2c218:	str	r0, [r1]
   2c21c:	add	r0, sp, #64	; 0x40
   2c220:	add	r1, r0, #16
   2c224:	add	r0, r0, #16
   2c228:	ldr	r2, [sp, #56]	; 0x38
   2c22c:	str	r1, [sp, #12]
   2c230:	mov	r1, r2
   2c234:	bl	23254 <__assert_fail@plt+0x11d50>
   2c238:	sub	r1, r0, #1
   2c23c:	ldr	r0, [sp, #12]
   2c240:	bl	23940 <__assert_fail@plt+0x1243c>
   2c244:	ldr	r0, [fp, #-8]
   2c248:	ldr	r0, [r0, #116]	; 0x74
   2c24c:	ldr	r1, [sp, #56]	; 0x38
   2c250:	movw	r2, #24
   2c254:	mul	r1, r1, r2
   2c258:	add	r0, r0, r1
   2c25c:	str	r0, [sp, #48]	; 0x30
   2c260:	ldr	r0, [sp, #56]	; 0x38
   2c264:	add	r0, r0, #1
   2c268:	str	r0, [sp, #56]	; 0x38
   2c26c:	ldr	r0, [sp, #48]	; 0x30
   2c270:	add	r1, r0, #24
   2c274:	str	r1, [sp, #48]	; 0x30
   2c278:	ldrsb	r0, [r0, #20]
   2c27c:	cmp	r0, #0
   2c280:	bne	2bf9c <__assert_fail@plt+0x1aa98>
   2c284:	b	2c288 <__assert_fail@plt+0x1ad84>
   2c288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c28c:	add	r0, r0, #1
   2c290:	str	r0, [fp, #-32]	; 0xffffffe0
   2c294:	b	2bef8 <__assert_fail@plt+0x1a9f4>
   2c298:	movw	r0, #0
   2c29c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c2a0:	ldr	r0, [sp, #64]	; 0x40
   2c2a4:	movw	r1, #0
   2c2a8:	cmp	r0, r1
   2c2ac:	beq	2c2b8 <__assert_fail@plt+0x1adb4>
   2c2b0:	ldr	r0, [sp, #88]	; 0x58
   2c2b4:	bl	35268 <__assert_fail@plt+0x23d64>
   2c2b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c2bc:	str	r0, [fp, #-4]
   2c2c0:	ldr	r0, [fp, #-4]
   2c2c4:	mov	sp, fp
   2c2c8:	pop	{fp, pc}
   2c2cc:	push	{fp, lr}
   2c2d0:	mov	fp, sp
   2c2d4:	sub	sp, sp, #56	; 0x38
   2c2d8:	str	r0, [fp, #-8]
   2c2dc:	str	r1, [fp, #-12]
   2c2e0:	str	r2, [fp, #-16]
   2c2e4:	ldr	r0, [fp, #-12]
   2c2e8:	ldr	r0, [r0, #4]
   2c2ec:	cmp	r0, #0
   2c2f0:	beq	2c304 <__assert_fail@plt+0x1ae00>
   2c2f4:	ldr	r0, [fp, #-16]
   2c2f8:	ldr	r0, [r0, #4]
   2c2fc:	cmp	r0, #0
   2c300:	bne	2c310 <__assert_fail@plt+0x1ae0c>
   2c304:	movw	r0, #0
   2c308:	str	r0, [fp, #-4]
   2c30c:	b	2c708 <__assert_fail@plt+0x1b204>
   2c310:	ldr	r0, [fp, #-12]
   2c314:	ldr	r0, [r0, #4]
   2c318:	ldr	r1, [fp, #-16]
   2c31c:	ldr	r1, [r1, #4]
   2c320:	add	r0, r0, r1
   2c324:	ldr	r1, [fp, #-8]
   2c328:	ldr	r1, [r1, #4]
   2c32c:	add	r0, r0, r1
   2c330:	ldr	r1, [fp, #-8]
   2c334:	ldr	r1, [r1]
   2c338:	cmp	r0, r1
   2c33c:	ble	2c3b0 <__assert_fail@plt+0x1aeac>
   2c340:	ldr	r0, [fp, #-12]
   2c344:	ldr	r0, [r0, #4]
   2c348:	ldr	r1, [fp, #-16]
   2c34c:	ldr	r1, [r1, #4]
   2c350:	add	r0, r0, r1
   2c354:	ldr	r1, [fp, #-8]
   2c358:	ldr	r1, [r1]
   2c35c:	add	r0, r0, r1
   2c360:	str	r0, [sp, #12]
   2c364:	ldr	r0, [fp, #-8]
   2c368:	ldr	r0, [r0, #8]
   2c36c:	ldr	r1, [sp, #12]
   2c370:	lsl	r1, r1, #2
   2c374:	bl	33bb4 <__assert_fail@plt+0x226b0>
   2c378:	str	r0, [sp, #8]
   2c37c:	ldr	r0, [sp, #8]
   2c380:	movw	r1, #0
   2c384:	cmp	r0, r1
   2c388:	bne	2c398 <__assert_fail@plt+0x1ae94>
   2c38c:	movw	r0, #12
   2c390:	str	r0, [fp, #-4]
   2c394:	b	2c708 <__assert_fail@plt+0x1b204>
   2c398:	ldr	r0, [sp, #8]
   2c39c:	ldr	r1, [fp, #-8]
   2c3a0:	str	r0, [r1, #8]
   2c3a4:	ldr	r0, [sp, #12]
   2c3a8:	ldr	r1, [fp, #-8]
   2c3ac:	str	r0, [r1]
   2c3b0:	ldr	r0, [fp, #-8]
   2c3b4:	ldr	r0, [r0, #4]
   2c3b8:	ldr	r1, [fp, #-12]
   2c3bc:	ldr	r1, [r1, #4]
   2c3c0:	add	r0, r0, r1
   2c3c4:	ldr	r1, [fp, #-16]
   2c3c8:	ldr	r1, [r1, #4]
   2c3cc:	add	r0, r0, r1
   2c3d0:	str	r0, [sp, #16]
   2c3d4:	ldr	r0, [fp, #-12]
   2c3d8:	ldr	r0, [r0, #4]
   2c3dc:	sub	r0, r0, #1
   2c3e0:	str	r0, [fp, #-20]	; 0xffffffec
   2c3e4:	ldr	r0, [fp, #-16]
   2c3e8:	ldr	r0, [r0, #4]
   2c3ec:	sub	r0, r0, #1
   2c3f0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c3f4:	ldr	r0, [fp, #-8]
   2c3f8:	ldr	r0, [r0, #4]
   2c3fc:	sub	r0, r0, #1
   2c400:	str	r0, [sp, #24]
   2c404:	ldr	r0, [fp, #-12]
   2c408:	ldr	r0, [r0, #8]
   2c40c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c410:	ldr	r0, [r0, r1, lsl #2]
   2c414:	ldr	r1, [fp, #-16]
   2c418:	ldr	r1, [r1, #8]
   2c41c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c420:	add	r1, r1, r2, lsl #2
   2c424:	ldr	r1, [r1]
   2c428:	cmp	r0, r1
   2c42c:	bne	2c538 <__assert_fail@plt+0x1b034>
   2c430:	b	2c434 <__assert_fail@plt+0x1af30>
   2c434:	ldr	r0, [sp, #24]
   2c438:	cmp	r0, #0
   2c43c:	movw	r0, #0
   2c440:	str	r0, [sp, #4]
   2c444:	blt	2c47c <__assert_fail@plt+0x1af78>
   2c448:	ldr	r0, [fp, #-8]
   2c44c:	ldr	r0, [r0, #8]
   2c450:	ldr	r1, [sp, #24]
   2c454:	ldr	r0, [r0, r1, lsl #2]
   2c458:	ldr	r1, [fp, #-12]
   2c45c:	ldr	r1, [r1, #8]
   2c460:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c464:	add	r1, r1, r2, lsl #2
   2c468:	ldr	r1, [r1]
   2c46c:	cmp	r0, r1
   2c470:	movw	r0, #0
   2c474:	movgt	r0, #1
   2c478:	str	r0, [sp, #4]
   2c47c:	ldr	r0, [sp, #4]
   2c480:	tst	r0, #1
   2c484:	beq	2c49c <__assert_fail@plt+0x1af98>
   2c488:	ldr	r0, [sp, #24]
   2c48c:	mvn	r1, #0
   2c490:	add	r0, r0, r1
   2c494:	str	r0, [sp, #24]
   2c498:	b	2c434 <__assert_fail@plt+0x1af30>
   2c49c:	ldr	r0, [sp, #24]
   2c4a0:	cmp	r0, #0
   2c4a4:	blt	2c4d4 <__assert_fail@plt+0x1afd0>
   2c4a8:	ldr	r0, [fp, #-8]
   2c4ac:	ldr	r0, [r0, #8]
   2c4b0:	ldr	r1, [sp, #24]
   2c4b4:	ldr	r0, [r0, r1, lsl #2]
   2c4b8:	ldr	r1, [fp, #-12]
   2c4bc:	ldr	r1, [r1, #8]
   2c4c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c4c4:	add	r1, r1, r2, lsl #2
   2c4c8:	ldr	r1, [r1]
   2c4cc:	cmp	r0, r1
   2c4d0:	beq	2c500 <__assert_fail@plt+0x1affc>
   2c4d4:	ldr	r0, [fp, #-12]
   2c4d8:	ldr	r0, [r0, #8]
   2c4dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c4e0:	ldr	r0, [r0, r1, lsl #2]
   2c4e4:	ldr	r1, [fp, #-8]
   2c4e8:	ldr	r1, [r1, #8]
   2c4ec:	ldr	r2, [sp, #16]
   2c4f0:	sub	r2, r2, #1
   2c4f4:	str	r2, [sp, #16]
   2c4f8:	add	r1, r1, r2, lsl #2
   2c4fc:	str	r0, [r1]
   2c500:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c504:	mvn	r1, #0
   2c508:	add	r0, r0, r1
   2c50c:	str	r0, [fp, #-20]	; 0xffffffec
   2c510:	cmp	r0, #0
   2c514:	blt	2c530 <__assert_fail@plt+0x1b02c>
   2c518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c51c:	mvn	r1, #0
   2c520:	add	r0, r0, r1
   2c524:	str	r0, [fp, #-24]	; 0xffffffe8
   2c528:	cmp	r0, #0
   2c52c:	bge	2c534 <__assert_fail@plt+0x1b030>
   2c530:	b	2c5ac <__assert_fail@plt+0x1b0a8>
   2c534:	b	2c5a8 <__assert_fail@plt+0x1b0a4>
   2c538:	ldr	r0, [fp, #-12]
   2c53c:	ldr	r0, [r0, #8]
   2c540:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c544:	ldr	r0, [r0, r1, lsl #2]
   2c548:	ldr	r1, [fp, #-16]
   2c54c:	ldr	r1, [r1, #8]
   2c550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c554:	add	r1, r1, r2, lsl #2
   2c558:	ldr	r1, [r1]
   2c55c:	cmp	r0, r1
   2c560:	bge	2c584 <__assert_fail@plt+0x1b080>
   2c564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c568:	mvn	r1, #0
   2c56c:	add	r0, r0, r1
   2c570:	str	r0, [fp, #-24]	; 0xffffffe8
   2c574:	cmp	r0, #0
   2c578:	bge	2c580 <__assert_fail@plt+0x1b07c>
   2c57c:	b	2c5ac <__assert_fail@plt+0x1b0a8>
   2c580:	b	2c5a4 <__assert_fail@plt+0x1b0a0>
   2c584:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c588:	mvn	r1, #0
   2c58c:	add	r0, r0, r1
   2c590:	str	r0, [fp, #-20]	; 0xffffffec
   2c594:	cmp	r0, #0
   2c598:	bge	2c5a0 <__assert_fail@plt+0x1b09c>
   2c59c:	b	2c5ac <__assert_fail@plt+0x1b0a8>
   2c5a0:	b	2c5a4 <__assert_fail@plt+0x1b0a0>
   2c5a4:	b	2c5a8 <__assert_fail@plt+0x1b0a4>
   2c5a8:	b	2c404 <__assert_fail@plt+0x1af00>
   2c5ac:	ldr	r0, [fp, #-8]
   2c5b0:	ldr	r0, [r0, #4]
   2c5b4:	sub	r0, r0, #1
   2c5b8:	str	r0, [sp, #24]
   2c5bc:	ldr	r0, [fp, #-8]
   2c5c0:	ldr	r0, [r0, #4]
   2c5c4:	ldr	r1, [fp, #-12]
   2c5c8:	ldr	r1, [r1, #4]
   2c5cc:	add	r0, r0, r1
   2c5d0:	ldr	r1, [fp, #-16]
   2c5d4:	ldr	r1, [r1, #4]
   2c5d8:	add	r0, r0, r1
   2c5dc:	sub	r0, r0, #1
   2c5e0:	str	r0, [sp, #28]
   2c5e4:	ldr	r0, [sp, #28]
   2c5e8:	ldr	r1, [sp, #16]
   2c5ec:	sub	r0, r0, r1
   2c5f0:	add	r0, r0, #1
   2c5f4:	str	r0, [sp, #20]
   2c5f8:	ldr	r0, [sp, #20]
   2c5fc:	ldr	r1, [fp, #-8]
   2c600:	ldr	r2, [r1, #4]
   2c604:	add	r0, r2, r0
   2c608:	str	r0, [r1, #4]
   2c60c:	ldr	r0, [sp, #20]
   2c610:	cmp	r0, #0
   2c614:	ble	2c6e4 <__assert_fail@plt+0x1b1e0>
   2c618:	ldr	r0, [sp, #24]
   2c61c:	cmp	r0, #0
   2c620:	blt	2c6e4 <__assert_fail@plt+0x1b1e0>
   2c624:	b	2c628 <__assert_fail@plt+0x1b124>
   2c628:	ldr	r0, [fp, #-8]
   2c62c:	ldr	r0, [r0, #8]
   2c630:	ldr	r1, [sp, #28]
   2c634:	ldr	r1, [r0, r1, lsl #2]
   2c638:	ldr	r2, [sp, #24]
   2c63c:	add	r0, r0, r2, lsl #2
   2c640:	ldr	r0, [r0]
   2c644:	cmp	r1, r0
   2c648:	ble	2c69c <__assert_fail@plt+0x1b198>
   2c64c:	ldr	r0, [fp, #-8]
   2c650:	ldr	r0, [r0, #8]
   2c654:	ldr	r1, [sp, #28]
   2c658:	sub	r2, r1, #1
   2c65c:	str	r2, [sp, #28]
   2c660:	ldr	r0, [r0, r1, lsl #2]
   2c664:	ldr	r1, [fp, #-8]
   2c668:	ldr	r1, [r1, #8]
   2c66c:	ldr	r2, [sp, #24]
   2c670:	ldr	r3, [sp, #20]
   2c674:	sub	ip, r3, #1
   2c678:	str	ip, [sp, #20]
   2c67c:	add	r2, r2, r3
   2c680:	add	r1, r1, r2, lsl #2
   2c684:	str	r0, [r1]
   2c688:	ldr	r0, [sp, #20]
   2c68c:	cmp	r0, #0
   2c690:	bne	2c698 <__assert_fail@plt+0x1b194>
   2c694:	b	2c6e0 <__assert_fail@plt+0x1b1dc>
   2c698:	b	2c6dc <__assert_fail@plt+0x1b1d8>
   2c69c:	ldr	r0, [fp, #-8]
   2c6a0:	ldr	r0, [r0, #8]
   2c6a4:	ldr	r1, [sp, #24]
   2c6a8:	ldr	r2, [r0, r1, lsl #2]
   2c6ac:	ldr	r3, [sp, #20]
   2c6b0:	add	r1, r1, r3
   2c6b4:	add	r0, r0, r1, lsl #2
   2c6b8:	str	r2, [r0]
   2c6bc:	ldr	r0, [sp, #24]
   2c6c0:	mvn	r1, #0
   2c6c4:	add	r0, r0, r1
   2c6c8:	str	r0, [sp, #24]
   2c6cc:	cmp	r0, #0
   2c6d0:	bge	2c6d8 <__assert_fail@plt+0x1b1d4>
   2c6d4:	b	2c6e0 <__assert_fail@plt+0x1b1dc>
   2c6d8:	b	2c6dc <__assert_fail@plt+0x1b1d8>
   2c6dc:	b	2c628 <__assert_fail@plt+0x1b124>
   2c6e0:	b	2c6e4 <__assert_fail@plt+0x1b1e0>
   2c6e4:	ldr	r0, [fp, #-8]
   2c6e8:	ldr	r0, [r0, #8]
   2c6ec:	ldr	r1, [sp, #16]
   2c6f0:	add	r1, r0, r1, lsl #2
   2c6f4:	ldr	r2, [sp, #20]
   2c6f8:	lsl	r2, r2, #2
   2c6fc:	bl	112a0 <memcpy@plt>
   2c700:	movw	r0, #0
   2c704:	str	r0, [fp, #-4]
   2c708:	ldr	r0, [fp, #-4]
   2c70c:	mov	sp, fp
   2c710:	pop	{fp, pc}
   2c714:	push	{fp, lr}
   2c718:	mov	fp, sp
   2c71c:	sub	sp, sp, #72	; 0x48
   2c720:	str	r0, [fp, #-8]
   2c724:	str	r1, [fp, #-12]
   2c728:	str	r2, [fp, #-16]
   2c72c:	str	r3, [fp, #-20]	; 0xffffffec
   2c730:	ldr	r0, [fp, #-8]
   2c734:	ldr	r0, [r0, #28]
   2c738:	ldr	r1, [fp, #-12]
   2c73c:	movw	r2, #12
   2c740:	mul	r1, r1, r2
   2c744:	add	r0, r0, r1
   2c748:	str	r0, [fp, #-32]	; 0xffffffe0
   2c74c:	add	r0, sp, #28
   2c750:	movw	r1, #0
   2c754:	and	r1, r1, #255	; 0xff
   2c758:	bl	11420 <memset@plt>
   2c75c:	movw	r0, #0
   2c760:	str	r0, [fp, #-24]	; 0xffffffe8
   2c764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c768:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c76c:	ldr	r1, [r1, #4]
   2c770:	cmp	r0, r1
   2c774:	bge	2c908 <__assert_fail@plt+0x1b404>
   2c778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c77c:	ldr	r0, [r0, #8]
   2c780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c784:	add	r0, r0, r1, lsl #2
   2c788:	ldr	r0, [r0]
   2c78c:	str	r0, [sp, #24]
   2c790:	ldr	r0, [sp, #24]
   2c794:	ldr	r1, [fp, #-12]
   2c798:	cmp	r0, r1
   2c79c:	bne	2c7a4 <__assert_fail@plt+0x1b2a0>
   2c7a0:	b	2c8f8 <__assert_fail@plt+0x1b3f4>
   2c7a4:	ldr	r0, [fp, #-8]
   2c7a8:	ldr	r0, [r0]
   2c7ac:	ldr	r1, [sp, #24]
   2c7b0:	add	r0, r0, r1, lsl #3
   2c7b4:	ldr	r0, [r0, #4]
   2c7b8:	and	r0, r0, #255	; 0xff
   2c7bc:	and	r0, r0, #8
   2c7c0:	cmp	r0, #0
   2c7c4:	beq	2c8f4 <__assert_fail@plt+0x1b3f0>
   2c7c8:	ldr	r0, [fp, #-8]
   2c7cc:	ldr	r0, [r0, #20]
   2c7d0:	ldr	r1, [sp, #24]
   2c7d4:	movw	r2, #12
   2c7d8:	mul	r1, r1, r2
   2c7dc:	add	r0, r0, r1
   2c7e0:	ldr	r0, [r0, #8]
   2c7e4:	ldr	r0, [r0]
   2c7e8:	str	r0, [sp, #20]
   2c7ec:	ldr	r0, [fp, #-8]
   2c7f0:	ldr	r0, [r0, #20]
   2c7f4:	ldr	r1, [sp, #24]
   2c7f8:	mul	r1, r1, r2
   2c7fc:	add	r0, r0, r1
   2c800:	ldr	r0, [r0, #4]
   2c804:	cmp	r0, #1
   2c808:	ble	2c834 <__assert_fail@plt+0x1b330>
   2c80c:	ldr	r0, [fp, #-8]
   2c810:	ldr	r0, [r0, #20]
   2c814:	ldr	r1, [sp, #24]
   2c818:	movw	r2, #12
   2c81c:	mul	r1, r1, r2
   2c820:	add	r0, r0, r1
   2c824:	ldr	r0, [r0, #8]
   2c828:	ldr	r0, [r0, #4]
   2c82c:	str	r0, [sp, #4]
   2c830:	b	2c840 <__assert_fail@plt+0x1b33c>
   2c834:	mvn	r0, #0
   2c838:	str	r0, [sp, #4]
   2c83c:	b	2c840 <__assert_fail@plt+0x1b33c>
   2c840:	ldr	r0, [sp, #4]
   2c844:	str	r0, [sp, #16]
   2c848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c84c:	ldr	r1, [sp, #20]
   2c850:	bl	23254 <__assert_fail@plt+0x11d50>
   2c854:	cmp	r0, #0
   2c858:	bne	2c870 <__assert_fail@plt+0x1b36c>
   2c85c:	ldr	r0, [fp, #-16]
   2c860:	ldr	r1, [sp, #20]
   2c864:	bl	23254 <__assert_fail@plt+0x11d50>
   2c868:	cmp	r0, #0
   2c86c:	bne	2c8a4 <__assert_fail@plt+0x1b3a0>
   2c870:	ldr	r0, [sp, #16]
   2c874:	cmp	r0, #0
   2c878:	ble	2c8f0 <__assert_fail@plt+0x1b3ec>
   2c87c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c880:	ldr	r1, [sp, #16]
   2c884:	bl	23254 <__assert_fail@plt+0x11d50>
   2c888:	cmp	r0, #0
   2c88c:	bne	2c8f0 <__assert_fail@plt+0x1b3ec>
   2c890:	ldr	r0, [fp, #-16]
   2c894:	ldr	r1, [sp, #16]
   2c898:	bl	23254 <__assert_fail@plt+0x11d50>
   2c89c:	cmp	r0, #0
   2c8a0:	beq	2c8f0 <__assert_fail@plt+0x1b3ec>
   2c8a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c8a8:	ldr	r0, [fp, #-8]
   2c8ac:	ldr	r0, [r0, #28]
   2c8b0:	ldr	r2, [sp, #24]
   2c8b4:	movw	r3, #12
   2c8b8:	mul	r2, r2, r3
   2c8bc:	add	r2, r0, r2
   2c8c0:	add	r0, sp, #28
   2c8c4:	bl	2c2cc <__assert_fail@plt+0x1adc8>
   2c8c8:	str	r0, [fp, #-28]	; 0xffffffe4
   2c8cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c8d0:	cmp	r0, #0
   2c8d4:	beq	2c8ec <__assert_fail@plt+0x1b3e8>
   2c8d8:	ldr	r0, [sp, #36]	; 0x24
   2c8dc:	bl	35268 <__assert_fail@plt+0x23d64>
   2c8e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c8e4:	str	r0, [fp, #-4]
   2c8e8:	b	2c994 <__assert_fail@plt+0x1b490>
   2c8ec:	b	2c8f0 <__assert_fail@plt+0x1b3ec>
   2c8f0:	b	2c8f4 <__assert_fail@plt+0x1b3f0>
   2c8f4:	b	2c8f8 <__assert_fail@plt+0x1b3f4>
   2c8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c8fc:	add	r0, r0, #1
   2c900:	str	r0, [fp, #-24]	; 0xffffffe8
   2c904:	b	2c764 <__assert_fail@plt+0x1b260>
   2c908:	movw	r0, #0
   2c90c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c914:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c918:	ldr	r1, [r1, #4]
   2c91c:	cmp	r0, r1
   2c920:	bge	2c984 <__assert_fail@plt+0x1b480>
   2c924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c928:	ldr	r0, [r0, #8]
   2c92c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c930:	add	r0, r0, r1, lsl #2
   2c934:	ldr	r0, [r0]
   2c938:	str	r0, [sp, #12]
   2c93c:	ldr	r1, [sp, #12]
   2c940:	add	r0, sp, #28
   2c944:	bl	23254 <__assert_fail@plt+0x11d50>
   2c948:	cmp	r0, #0
   2c94c:	bne	2c970 <__assert_fail@plt+0x1b46c>
   2c950:	ldr	r0, [fp, #-16]
   2c954:	ldr	r1, [sp, #12]
   2c958:	bl	23254 <__assert_fail@plt+0x11d50>
   2c95c:	sub	r0, r0, #1
   2c960:	str	r0, [sp, #8]
   2c964:	ldr	r0, [fp, #-16]
   2c968:	ldr	r1, [sp, #8]
   2c96c:	bl	23940 <__assert_fail@plt+0x1243c>
   2c970:	b	2c974 <__assert_fail@plt+0x1b470>
   2c974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c978:	add	r0, r0, #1
   2c97c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c980:	b	2c910 <__assert_fail@plt+0x1b40c>
   2c984:	ldr	r0, [sp, #36]	; 0x24
   2c988:	bl	35268 <__assert_fail@plt+0x23d64>
   2c98c:	movw	r0, #0
   2c990:	str	r0, [fp, #-4]
   2c994:	ldr	r0, [fp, #-4]
   2c998:	mov	sp, fp
   2c99c:	pop	{fp, pc}
   2c9a0:	push	{r4, sl, fp, lr}
   2c9a4:	add	fp, sp, #8
   2c9a8:	sub	sp, sp, #72	; 0x48
   2c9ac:	ldr	ip, [fp, #12]
   2c9b0:	ldr	lr, [fp, #8]
   2c9b4:	str	r0, [fp, #-16]
   2c9b8:	str	r1, [fp, #-20]	; 0xffffffec
   2c9bc:	str	r2, [fp, #-24]	; 0xffffffe8
   2c9c0:	str	r3, [fp, #-28]	; 0xffffffe4
   2c9c4:	ldr	r0, [fp, #-16]
   2c9c8:	ldr	r0, [r0, #84]	; 0x54
   2c9cc:	str	r0, [fp, #-32]	; 0xffffffe0
   2c9d0:	ldr	r0, [fp, #-16]
   2c9d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c9d8:	str	lr, [sp, #16]
   2c9dc:	str	ip, [sp, #12]
   2c9e0:	bl	276dc <__assert_fail@plt+0x161d8>
   2c9e4:	str	r0, [sp, #32]
   2c9e8:	ldr	r0, [fp, #-16]
   2c9ec:	ldr	r1, [fp, #12]
   2c9f0:	bl	276dc <__assert_fail@plt+0x161d8>
   2c9f4:	str	r0, [sp, #28]
   2c9f8:	movw	r0, #0
   2c9fc:	str	r0, [fp, #-36]	; 0xffffffdc
   2ca00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ca04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca08:	ldr	r1, [r1, #4]
   2ca0c:	cmp	r0, r1
   2ca10:	bge	2caf4 <__assert_fail@plt+0x1b5f0>
   2ca14:	ldr	r0, [fp, #-16]
   2ca18:	ldr	r0, [r0, #116]	; 0x74
   2ca1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca20:	ldr	r1, [r1, #8]
   2ca24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ca28:	ldr	r1, [r1, r2, lsl #2]
   2ca2c:	add	r1, r1, r1, lsl #1
   2ca30:	add	r0, r0, r1, lsl #3
   2ca34:	str	r0, [sp, #20]
   2ca38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ca3c:	ldr	r0, [r0]
   2ca40:	ldr	r1, [sp, #20]
   2ca44:	ldr	r1, [r1]
   2ca48:	ldr	r0, [r0, r1, lsl #3]
   2ca4c:	str	r0, [sp, #24]
   2ca50:	ldr	r0, [fp, #-16]
   2ca54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca58:	ldr	r1, [r1, #8]
   2ca5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ca60:	ldr	r1, [r1, r2, lsl #2]
   2ca64:	ldr	r2, [sp, #24]
   2ca68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca6c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2ca70:	ldr	lr, [sp, #32]
   2ca74:	mov	r4, sp
   2ca78:	str	lr, [r4, #4]
   2ca7c:	str	ip, [r4]
   2ca80:	bl	2cb10 <__assert_fail@plt+0x1b60c>
   2ca84:	str	r0, [sp, #36]	; 0x24
   2ca88:	ldr	r0, [fp, #-16]
   2ca8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca90:	ldr	r1, [r1, #8]
   2ca94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ca98:	add	r1, r1, r2, lsl #2
   2ca9c:	ldr	r1, [r1]
   2caa0:	ldr	r2, [sp, #24]
   2caa4:	ldr	r3, [fp, #8]
   2caa8:	ldr	ip, [fp, #12]
   2caac:	ldr	lr, [sp, #28]
   2cab0:	str	ip, [sp]
   2cab4:	str	lr, [sp, #4]
   2cab8:	bl	2cb10 <__assert_fail@plt+0x1b60c>
   2cabc:	str	r0, [sp, #40]	; 0x28
   2cac0:	ldr	r0, [sp, #40]	; 0x28
   2cac4:	ldr	r1, [sp, #36]	; 0x24
   2cac8:	cmp	r0, r1
   2cacc:	bne	2cad4 <__assert_fail@plt+0x1b5d0>
   2cad0:	b	2cae4 <__assert_fail@plt+0x1b5e0>
   2cad4:	movw	r0, #1
   2cad8:	and	r0, r0, #1
   2cadc:	strb	r0, [fp, #-9]
   2cae0:	b	2cb00 <__assert_fail@plt+0x1b5fc>
   2cae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2cae8:	add	r0, r0, #1
   2caec:	str	r0, [fp, #-36]	; 0xffffffdc
   2caf0:	b	2ca00 <__assert_fail@plt+0x1b4fc>
   2caf4:	movw	r0, #0
   2caf8:	and	r0, r0, #1
   2cafc:	strb	r0, [fp, #-9]
   2cb00:	ldrb	r0, [fp, #-9]
   2cb04:	and	r0, r0, #1
   2cb08:	sub	sp, fp, #8
   2cb0c:	pop	{r4, sl, fp, pc}
   2cb10:	push	{fp, lr}
   2cb14:	mov	fp, sp
   2cb18:	sub	sp, sp, #40	; 0x28
   2cb1c:	ldr	ip, [fp, #12]
   2cb20:	ldr	lr, [fp, #8]
   2cb24:	str	r0, [fp, #-8]
   2cb28:	str	r1, [fp, #-12]
   2cb2c:	str	r2, [fp, #-16]
   2cb30:	str	r3, [sp, #20]
   2cb34:	ldr	r0, [fp, #-8]
   2cb38:	ldr	r0, [r0, #116]	; 0x74
   2cb3c:	ldr	r1, [fp, #-12]
   2cb40:	movw	r2, #24
   2cb44:	mul	r1, r1, r2
   2cb48:	add	r0, r0, r1
   2cb4c:	str	r0, [sp, #16]
   2cb50:	ldr	r0, [fp, #8]
   2cb54:	ldr	r1, [sp, #16]
   2cb58:	ldr	r1, [r1, #8]
   2cb5c:	cmp	r0, r1
   2cb60:	str	lr, [sp, #8]
   2cb64:	str	ip, [sp, #4]
   2cb68:	bge	2cb78 <__assert_fail@plt+0x1b674>
   2cb6c:	mvn	r0, #0
   2cb70:	str	r0, [fp, #-4]
   2cb74:	b	2cc1c <__assert_fail@plt+0x1b718>
   2cb78:	ldr	r0, [sp, #16]
   2cb7c:	ldr	r0, [r0, #12]
   2cb80:	ldr	r1, [fp, #8]
   2cb84:	cmp	r0, r1
   2cb88:	bge	2cb98 <__assert_fail@plt+0x1b694>
   2cb8c:	movw	r0, #1
   2cb90:	str	r0, [fp, #-4]
   2cb94:	b	2cc1c <__assert_fail@plt+0x1b718>
   2cb98:	ldr	r0, [fp, #8]
   2cb9c:	ldr	r1, [sp, #16]
   2cba0:	ldr	r1, [r1, #8]
   2cba4:	cmp	r0, r1
   2cba8:	movw	r0, #0
   2cbac:	moveq	r0, #1
   2cbb0:	and	r0, r0, #1
   2cbb4:	str	r0, [sp, #12]
   2cbb8:	ldr	r0, [fp, #8]
   2cbbc:	ldr	r1, [sp, #16]
   2cbc0:	ldr	r1, [r1, #12]
   2cbc4:	cmp	r0, r1
   2cbc8:	movw	r0, #0
   2cbcc:	moveq	r0, #1
   2cbd0:	and	r0, r0, #1
   2cbd4:	lsl	r0, r0, #1
   2cbd8:	ldr	r1, [sp, #12]
   2cbdc:	orr	r0, r1, r0
   2cbe0:	str	r0, [sp, #12]
   2cbe4:	ldr	r0, [sp, #12]
   2cbe8:	cmp	r0, #0
   2cbec:	bne	2cbfc <__assert_fail@plt+0x1b6f8>
   2cbf0:	movw	r0, #0
   2cbf4:	str	r0, [fp, #-4]
   2cbf8:	b	2cc1c <__assert_fail@plt+0x1b718>
   2cbfc:	ldr	r0, [fp, #-8]
   2cc00:	ldr	r1, [sp, #12]
   2cc04:	ldr	r2, [fp, #-16]
   2cc08:	ldr	r3, [sp, #20]
   2cc0c:	ldr	ip, [fp, #12]
   2cc10:	str	ip, [sp]
   2cc14:	bl	2cc28 <__assert_fail@plt+0x1b724>
   2cc18:	str	r0, [fp, #-4]
   2cc1c:	ldr	r0, [fp, #-4]
   2cc20:	mov	sp, fp
   2cc24:	pop	{fp, pc}
   2cc28:	push	{fp, lr}
   2cc2c:	mov	fp, sp
   2cc30:	sub	sp, sp, #64	; 0x40
   2cc34:	ldr	ip, [fp, #8]
   2cc38:	str	r0, [fp, #-8]
   2cc3c:	str	r1, [fp, #-12]
   2cc40:	str	r2, [fp, #-16]
   2cc44:	str	r3, [fp, #-20]	; 0xffffffec
   2cc48:	ldr	r0, [fp, #-8]
   2cc4c:	ldr	r0, [r0, #84]	; 0x54
   2cc50:	str	r0, [fp, #-24]	; 0xffffffe8
   2cc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc58:	ldr	r0, [r0, #24]
   2cc5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cc60:	movw	r2, #12
   2cc64:	mul	r1, r1, r2
   2cc68:	add	r0, r0, r1
   2cc6c:	str	r0, [fp, #-28]	; 0xffffffe4
   2cc70:	movw	r0, #0
   2cc74:	str	r0, [sp, #32]
   2cc78:	str	ip, [sp, #12]
   2cc7c:	ldr	r0, [sp, #32]
   2cc80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cc84:	ldr	r1, [r1, #4]
   2cc88:	cmp	r0, r1
   2cc8c:	bge	2cf04 <__assert_fail@plt+0x1ba00>
   2cc90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cc94:	ldr	r0, [r0, #8]
   2cc98:	ldr	r1, [sp, #32]
   2cc9c:	ldr	r0, [r0, r1, lsl #2]
   2cca0:	str	r0, [sp, #28]
   2cca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cca8:	ldr	r0, [r0]
   2ccac:	ldr	r1, [sp, #28]
   2ccb0:	add	r0, r0, r1, lsl #3
   2ccb4:	ldrb	r0, [r0, #4]
   2ccb8:	mov	r1, r0
   2ccbc:	cmp	r0, #4
   2ccc0:	str	r1, [sp, #8]
   2ccc4:	beq	2ccec <__assert_fail@plt+0x1b7e8>
   2ccc8:	b	2cccc <__assert_fail@plt+0x1b7c8>
   2cccc:	ldr	r0, [sp, #8]
   2ccd0:	cmp	r0, #8
   2ccd4:	beq	2ce6c <__assert_fail@plt+0x1b968>
   2ccd8:	b	2ccdc <__assert_fail@plt+0x1b7d8>
   2ccdc:	ldr	r0, [sp, #8]
   2cce0:	cmp	r0, #9
   2cce4:	beq	2ceac <__assert_fail@plt+0x1b9a8>
   2cce8:	b	2ceec <__assert_fail@plt+0x1b9e8>
   2ccec:	ldr	r0, [fp, #8]
   2ccf0:	cmn	r0, #1
   2ccf4:	beq	2ce68 <__assert_fail@plt+0x1b964>
   2ccf8:	ldr	r0, [fp, #-8]
   2ccfc:	ldr	r0, [r0, #116]	; 0x74
   2cd00:	ldr	r1, [fp, #8]
   2cd04:	movw	r2, #24
   2cd08:	mul	r1, r1, r2
   2cd0c:	add	r0, r0, r1
   2cd10:	str	r0, [sp, #24]
   2cd14:	ldr	r0, [sp, #24]
   2cd18:	ldr	r0, [r0]
   2cd1c:	ldr	r1, [sp, #28]
   2cd20:	cmp	r0, r1
   2cd24:	beq	2cd2c <__assert_fail@plt+0x1b828>
   2cd28:	b	2ce4c <__assert_fail@plt+0x1b948>
   2cd2c:	ldr	r0, [fp, #-16]
   2cd30:	cmp	r0, #32
   2cd34:	bge	2cd5c <__assert_fail@plt+0x1b858>
   2cd38:	ldr	r0, [sp, #24]
   2cd3c:	ldr	r0, [r0, #16]
   2cd40:	ldr	r1, [fp, #-16]
   2cd44:	movw	r2, #1
   2cd48:	lsl	r1, r2, r1
   2cd4c:	and	r0, r0, r1
   2cd50:	cmp	r0, #0
   2cd54:	bne	2cd5c <__assert_fail@plt+0x1b858>
   2cd58:	b	2ce4c <__assert_fail@plt+0x1b948>
   2cd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd60:	ldr	r0, [r0, #20]
   2cd64:	ldr	r1, [sp, #28]
   2cd68:	movw	r2, #12
   2cd6c:	mul	r1, r1, r2
   2cd70:	add	r0, r0, r1
   2cd74:	ldr	r0, [r0, #8]
   2cd78:	ldr	r0, [r0]
   2cd7c:	str	r0, [sp, #20]
   2cd80:	ldr	r0, [sp, #20]
   2cd84:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd88:	cmp	r0, r1
   2cd8c:	bne	2cdb8 <__assert_fail@plt+0x1b8b4>
   2cd90:	ldr	r0, [fp, #-12]
   2cd94:	and	r0, r0, #1
   2cd98:	cmp	r0, #0
   2cd9c:	beq	2cdac <__assert_fail@plt+0x1b8a8>
   2cda0:	mvn	r0, #0
   2cda4:	str	r0, [fp, #-4]
   2cda8:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2cdac:	movw	r0, #0
   2cdb0:	str	r0, [fp, #-4]
   2cdb4:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2cdb8:	ldr	r0, [fp, #-8]
   2cdbc:	ldr	r1, [fp, #-12]
   2cdc0:	ldr	r2, [fp, #-16]
   2cdc4:	ldr	r3, [sp, #20]
   2cdc8:	ldr	ip, [fp, #8]
   2cdcc:	str	ip, [sp]
   2cdd0:	bl	2cc28 <__assert_fail@plt+0x1b724>
   2cdd4:	str	r0, [sp, #16]
   2cdd8:	ldr	r0, [sp, #16]
   2cddc:	cmn	r0, #1
   2cde0:	bne	2cdf0 <__assert_fail@plt+0x1b8ec>
   2cde4:	mvn	r0, #0
   2cde8:	str	r0, [fp, #-4]
   2cdec:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2cdf0:	ldr	r0, [sp, #16]
   2cdf4:	cmp	r0, #0
   2cdf8:	bne	2ce18 <__assert_fail@plt+0x1b914>
   2cdfc:	ldr	r0, [fp, #-12]
   2ce00:	and	r0, r0, #2
   2ce04:	cmp	r0, #0
   2ce08:	beq	2ce18 <__assert_fail@plt+0x1b914>
   2ce0c:	movw	r0, #0
   2ce10:	str	r0, [fp, #-4]
   2ce14:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2ce18:	ldr	r0, [fp, #-16]
   2ce1c:	cmp	r0, #32
   2ce20:	bge	2ce48 <__assert_fail@plt+0x1b944>
   2ce24:	ldr	r0, [fp, #-16]
   2ce28:	movw	r1, #1
   2ce2c:	lsl	r0, r1, r0
   2ce30:	mvn	r1, #0
   2ce34:	eor	r0, r0, r1
   2ce38:	ldr	r1, [sp, #24]
   2ce3c:	ldr	r2, [r1, #16]
   2ce40:	and	r0, r2, r0
   2ce44:	str	r0, [r1, #16]
   2ce48:	b	2ce4c <__assert_fail@plt+0x1b948>
   2ce4c:	ldr	r0, [sp, #24]
   2ce50:	add	r1, r0, #24
   2ce54:	str	r1, [sp, #24]
   2ce58:	ldrsb	r0, [r0, #20]
   2ce5c:	cmp	r0, #0
   2ce60:	bne	2cd14 <__assert_fail@plt+0x1b810>
   2ce64:	b	2ce68 <__assert_fail@plt+0x1b964>
   2ce68:	b	2cef0 <__assert_fail@plt+0x1b9ec>
   2ce6c:	ldr	r0, [fp, #-12]
   2ce70:	and	r0, r0, #1
   2ce74:	cmp	r0, #0
   2ce78:	beq	2cea8 <__assert_fail@plt+0x1b9a4>
   2ce7c:	ldr	r0, [fp, #-16]
   2ce80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ce84:	ldr	r1, [r1]
   2ce88:	ldr	r2, [sp, #28]
   2ce8c:	add	r1, r1, r2, lsl #3
   2ce90:	ldr	r1, [r1]
   2ce94:	cmp	r0, r1
   2ce98:	bne	2cea8 <__assert_fail@plt+0x1b9a4>
   2ce9c:	mvn	r0, #0
   2cea0:	str	r0, [fp, #-4]
   2cea4:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2cea8:	b	2cef0 <__assert_fail@plt+0x1b9ec>
   2ceac:	ldr	r0, [fp, #-12]
   2ceb0:	and	r0, r0, #2
   2ceb4:	cmp	r0, #0
   2ceb8:	beq	2cee8 <__assert_fail@plt+0x1b9e4>
   2cebc:	ldr	r0, [fp, #-16]
   2cec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cec4:	ldr	r1, [r1]
   2cec8:	ldr	r2, [sp, #28]
   2cecc:	add	r1, r1, r2, lsl #3
   2ced0:	ldr	r1, [r1]
   2ced4:	cmp	r0, r1
   2ced8:	bne	2cee8 <__assert_fail@plt+0x1b9e4>
   2cedc:	movw	r0, #0
   2cee0:	str	r0, [fp, #-4]
   2cee4:	b	2cf28 <__assert_fail@plt+0x1ba24>
   2cee8:	b	2cef0 <__assert_fail@plt+0x1b9ec>
   2ceec:	b	2cef0 <__assert_fail@plt+0x1b9ec>
   2cef0:	b	2cef4 <__assert_fail@plt+0x1b9f0>
   2cef4:	ldr	r0, [sp, #32]
   2cef8:	add	r0, r0, #1
   2cefc:	str	r0, [sp, #32]
   2cf00:	b	2cc7c <__assert_fail@plt+0x1b778>
   2cf04:	ldr	r0, [fp, #-12]
   2cf08:	and	r0, r0, #2
   2cf0c:	cmp	r0, #0
   2cf10:	movw	r0, #0
   2cf14:	movne	r0, #1
   2cf18:	tst	r0, #1
   2cf1c:	movw	r0, #1
   2cf20:	moveq	r0, #0
   2cf24:	str	r0, [fp, #-4]
   2cf28:	ldr	r0, [fp, #-4]
   2cf2c:	mov	sp, fp
   2cf30:	pop	{fp, pc}
   2cf34:	push	{fp, lr}
   2cf38:	mov	fp, sp
   2cf3c:	sub	sp, sp, #32
   2cf40:	ldr	ip, [fp, #8]
   2cf44:	str	r0, [fp, #-4]
   2cf48:	str	r1, [fp, #-8]
   2cf4c:	str	r2, [fp, #-12]
   2cf50:	str	r3, [sp, #16]
   2cf54:	ldr	r0, [fp, #-4]
   2cf58:	ldr	r0, [r0, #84]	; 0x54
   2cf5c:	str	r0, [sp, #12]
   2cf60:	ldr	r0, [sp, #12]
   2cf64:	ldr	r1, [fp, #-12]
   2cf68:	ldr	r2, [fp, #-4]
   2cf6c:	ldr	r3, [sp, #16]
   2cf70:	str	ip, [sp, #4]
   2cf74:	bl	292e0 <__assert_fail@plt+0x17ddc>
   2cf78:	str	r0, [sp, #8]
   2cf7c:	ldr	r0, [sp, #8]
   2cf80:	cmp	r0, #0
   2cf84:	ble	2d00c <__assert_fail@plt+0x1bb08>
   2cf88:	ldr	r0, [sp, #16]
   2cf8c:	ldr	r1, [sp, #8]
   2cf90:	add	r0, r0, r1
   2cf94:	ldr	r1, [fp, #8]
   2cf98:	cmp	r0, r1
   2cf9c:	bgt	2d00c <__assert_fail@plt+0x1bb08>
   2cfa0:	ldr	r0, [fp, #-8]
   2cfa4:	ldr	r0, [r0]
   2cfa8:	ldr	r1, [sp, #16]
   2cfac:	ldr	r2, [sp, #8]
   2cfb0:	add	r1, r1, r2
   2cfb4:	add	r0, r0, r1, lsl #2
   2cfb8:	ldr	r0, [r0]
   2cfbc:	movw	r1, #0
   2cfc0:	cmp	r0, r1
   2cfc4:	beq	2d004 <__assert_fail@plt+0x1bb00>
   2cfc8:	ldr	r0, [fp, #-8]
   2cfcc:	ldr	r0, [r0]
   2cfd0:	ldr	r1, [sp, #16]
   2cfd4:	ldr	r2, [sp, #8]
   2cfd8:	add	r1, r1, r2
   2cfdc:	ldr	r0, [r0, r1, lsl #2]
   2cfe0:	add	r0, r0, #4
   2cfe4:	ldr	r1, [sp, #12]
   2cfe8:	ldr	r1, [r1, #12]
   2cfec:	ldr	r2, [fp, #-12]
   2cff0:	add	r1, r1, r2, lsl #2
   2cff4:	ldr	r1, [r1]
   2cff8:	bl	23254 <__assert_fail@plt+0x11d50>
   2cffc:	cmp	r0, #0
   2d000:	bne	2d00c <__assert_fail@plt+0x1bb08>
   2d004:	movw	r0, #0
   2d008:	str	r0, [sp, #8]
   2d00c:	ldr	r0, [sp, #8]
   2d010:	mov	sp, fp
   2d014:	pop	{fp, pc}
   2d018:	sub	sp, sp, #4
   2d01c:	str	r0, [sp]
   2d020:	ldr	r0, [sp]
   2d024:	movw	r1, #0
   2d028:	str	r1, [r0]
   2d02c:	ldr	r0, [sp]
   2d030:	movw	r1, #16
   2d034:	str	r1, [r0, #4]
   2d038:	ldr	r0, [sp]
   2d03c:	add	r0, r0, #12
   2d040:	ldr	r1, [sp]
   2d044:	str	r0, [r1, #8]
   2d048:	add	sp, sp, #4
   2d04c:	bx	lr
   2d050:	push	{fp, lr}
   2d054:	mov	fp, sp
   2d058:	sub	sp, sp, #16
   2d05c:	str	r0, [sp, #8]
   2d060:	str	r1, [sp, #4]
   2d064:	ldr	r0, [sp, #4]
   2d068:	ldr	r1, [sp, #8]
   2d06c:	ldr	r1, [r1]
   2d070:	cmp	r0, r1
   2d074:	bls	2d0c4 <__assert_fail@plt+0x1bbc0>
   2d078:	ldr	r0, [sp, #8]
   2d07c:	ldr	r1, [sp, #4]
   2d080:	ldr	r2, [sp, #8]
   2d084:	add	r2, r2, #12
   2d088:	movw	r3, #8
   2d08c:	bl	33de0 <__assert_fail@plt+0x228dc>
   2d090:	and	r0, r0, #1
   2d094:	strb	r0, [sp, #3]
   2d098:	ldrb	r0, [sp, #3]
   2d09c:	mvn	r1, #0
   2d0a0:	eor	r0, r0, r1
   2d0a4:	tst	r0, #1
   2d0a8:	beq	2d0b4 <__assert_fail@plt+0x1bbb0>
   2d0ac:	ldr	r0, [sp, #8]
   2d0b0:	bl	2dacc <__assert_fail@plt+0x1c5c8>
   2d0b4:	ldrb	r0, [sp, #3]
   2d0b8:	and	r0, r0, #1
   2d0bc:	strb	r0, [fp, #-1]
   2d0c0:	b	2d100 <__assert_fail@plt+0x1bbfc>
   2d0c4:	ldr	r0, [sp, #8]
   2d0c8:	ldr	r0, [r0, #8]
   2d0cc:	ldr	r1, [sp, #4]
   2d0d0:	add	r0, r0, r1, lsl #3
   2d0d4:	ldr	r1, [sp, #8]
   2d0d8:	ldr	r1, [r1]
   2d0dc:	ldr	r2, [sp, #4]
   2d0e0:	sub	r1, r1, r2
   2d0e4:	bl	2db28 <__assert_fail@plt+0x1c624>
   2d0e8:	ldr	r0, [sp, #4]
   2d0ec:	ldr	r1, [sp, #8]
   2d0f0:	str	r0, [r1]
   2d0f4:	movw	r0, #1
   2d0f8:	and	r0, r0, #1
   2d0fc:	strb	r0, [fp, #-1]
   2d100:	ldrb	r0, [fp, #-1]
   2d104:	and	r0, r0, #1
   2d108:	mov	sp, fp
   2d10c:	pop	{fp, pc}
   2d110:	push	{fp, lr}
   2d114:	mov	fp, sp
   2d118:	sub	sp, sp, #8
   2d11c:	str	r0, [sp, #4]
   2d120:	ldr	r0, [sp, #4]
   2d124:	ldr	r0, [r0, #8]
   2d128:	ldr	r1, [sp, #4]
   2d12c:	ldr	r1, [r1]
   2d130:	bl	2db28 <__assert_fail@plt+0x1c624>
   2d134:	ldr	r0, [sp, #4]
   2d138:	bl	2db3c <__assert_fail@plt+0x1c638>
   2d13c:	ldr	r0, [sp, #4]
   2d140:	bl	2d018 <__assert_fail@plt+0x1bb14>
   2d144:	mov	sp, fp
   2d148:	pop	{fp, pc}
   2d14c:	push	{fp, lr}
   2d150:	mov	fp, sp
   2d154:	sub	sp, sp, #8
   2d158:	str	r0, [sp, #4]
   2d15c:	ldr	r0, [sp, #4]
   2d160:	movw	r1, #0
   2d164:	cmp	r0, r1
   2d168:	beq	2d1e4 <__assert_fail@plt+0x1bce0>
   2d16c:	movw	r0, #0
   2d170:	str	r0, [sp]
   2d174:	ldr	r0, [sp]
   2d178:	ldr	r1, [sp, #4]
   2d17c:	ldr	r1, [r1]
   2d180:	cmp	r0, r1
   2d184:	bge	2d1d8 <__assert_fail@plt+0x1bcd4>
   2d188:	ldr	r0, [sp, #4]
   2d18c:	ldr	r0, [r0, #8]
   2d190:	ldr	r1, [sp]
   2d194:	movw	r2, #24
   2d198:	mul	r1, r1, r2
   2d19c:	add	r0, r0, r1
   2d1a0:	ldr	r0, [r0, #20]
   2d1a4:	bl	35268 <__assert_fail@plt+0x23d64>
   2d1a8:	ldr	r0, [sp, #4]
   2d1ac:	ldr	r0, [r0, #8]
   2d1b0:	ldr	r1, [sp]
   2d1b4:	movw	r2, #24
   2d1b8:	mul	r1, r1, r2
   2d1bc:	add	r0, r0, r1
   2d1c0:	ldr	r0, [r0, #8]
   2d1c4:	bl	35268 <__assert_fail@plt+0x23d64>
   2d1c8:	ldr	r0, [sp]
   2d1cc:	add	r0, r0, #1
   2d1d0:	str	r0, [sp]
   2d1d4:	b	2d174 <__assert_fail@plt+0x1bc70>
   2d1d8:	ldr	r0, [sp, #4]
   2d1dc:	ldr	r0, [r0, #8]
   2d1e0:	bl	35268 <__assert_fail@plt+0x23d64>
   2d1e4:	movw	r0, #0
   2d1e8:	mov	sp, fp
   2d1ec:	pop	{fp, pc}
   2d1f0:	sub	sp, sp, #4
   2d1f4:	str	r0, [sp]
   2d1f8:	ldr	r0, [sp]
   2d1fc:	ldr	r0, [r0, #8]
   2d200:	add	sp, sp, #4
   2d204:	bx	lr
   2d208:	push	{fp, lr}
   2d20c:	mov	fp, sp
   2d210:	sub	sp, sp, #40	; 0x28
   2d214:	ldr	ip, [fp, #12]
   2d218:	ldr	lr, [fp, #8]
   2d21c:	str	r0, [fp, #-4]
   2d220:	str	r1, [fp, #-8]
   2d224:	str	r2, [fp, #-12]
   2d228:	str	r3, [fp, #-16]
   2d22c:	ldr	r0, [fp, #-4]
   2d230:	ldr	r0, [r0]
   2d234:	ldr	r1, [fp, #-16]
   2d238:	add	r0, r0, r1, lsl #3
   2d23c:	ldr	r0, [r0, #4]
   2d240:	and	r0, r0, #255	; 0xff
   2d244:	str	r0, [sp, #20]
   2d248:	ldr	r0, [sp, #20]
   2d24c:	cmp	r0, #8
   2d250:	str	lr, [sp, #8]
   2d254:	str	ip, [sp, #4]
   2d258:	bne	2d2b0 <__assert_fail@plt+0x1bdac>
   2d25c:	ldr	r0, [fp, #-4]
   2d260:	ldr	r0, [r0]
   2d264:	ldr	r1, [fp, #-16]
   2d268:	add	r0, r0, r1, lsl #3
   2d26c:	ldr	r0, [r0]
   2d270:	add	r0, r0, #1
   2d274:	str	r0, [sp, #16]
   2d278:	ldr	r0, [sp, #16]
   2d27c:	ldr	r1, [fp, #12]
   2d280:	cmp	r0, r1
   2d284:	bge	2d2ac <__assert_fail@plt+0x1bda8>
   2d288:	ldr	r0, [fp, #8]
   2d28c:	ldr	r1, [fp, #-8]
   2d290:	ldr	r2, [sp, #16]
   2d294:	str	r0, [r1, r2, lsl #3]
   2d298:	ldr	r0, [fp, #-8]
   2d29c:	ldr	r1, [sp, #16]
   2d2a0:	add	r0, r0, r1, lsl #3
   2d2a4:	mvn	r1, #0
   2d2a8:	str	r1, [r0, #4]
   2d2ac:	b	2d3a8 <__assert_fail@plt+0x1bea4>
   2d2b0:	ldr	r0, [sp, #20]
   2d2b4:	cmp	r0, #9
   2d2b8:	bne	2d3a4 <__assert_fail@plt+0x1bea0>
   2d2bc:	ldr	r0, [fp, #-4]
   2d2c0:	ldr	r0, [r0]
   2d2c4:	ldr	r1, [fp, #-16]
   2d2c8:	add	r0, r0, r1, lsl #3
   2d2cc:	ldr	r0, [r0]
   2d2d0:	add	r0, r0, #1
   2d2d4:	str	r0, [sp, #12]
   2d2d8:	ldr	r0, [sp, #12]
   2d2dc:	ldr	r1, [fp, #12]
   2d2e0:	cmp	r0, r1
   2d2e4:	bge	2d3a0 <__assert_fail@plt+0x1be9c>
   2d2e8:	ldr	r0, [fp, #-8]
   2d2ec:	ldr	r1, [sp, #12]
   2d2f0:	add	r0, r0, r1, lsl #3
   2d2f4:	ldr	r0, [r0]
   2d2f8:	ldr	r1, [fp, #8]
   2d2fc:	cmp	r0, r1
   2d300:	bge	2d330 <__assert_fail@plt+0x1be2c>
   2d304:	ldr	r0, [fp, #8]
   2d308:	ldr	r1, [fp, #-8]
   2d30c:	ldr	r2, [sp, #12]
   2d310:	add	r1, r1, r2, lsl #3
   2d314:	str	r0, [r1, #4]
   2d318:	ldr	r0, [fp, #-12]
   2d31c:	ldr	r1, [fp, #-8]
   2d320:	ldr	r2, [fp, #12]
   2d324:	lsl	r2, r2, #3
   2d328:	bl	112a0 <memcpy@plt>
   2d32c:	b	2d39c <__assert_fail@plt+0x1be98>
   2d330:	ldr	r0, [fp, #-4]
   2d334:	ldr	r0, [r0]
   2d338:	ldr	r1, [fp, #-16]
   2d33c:	add	r0, r0, r1, lsl #3
   2d340:	ldr	r0, [r0, #4]
   2d344:	lsr	r0, r0, #19
   2d348:	and	r0, r0, #1
   2d34c:	cmp	r0, #0
   2d350:	beq	2d384 <__assert_fail@plt+0x1be80>
   2d354:	ldr	r0, [fp, #-12]
   2d358:	ldr	r1, [sp, #12]
   2d35c:	add	r0, r0, r1, lsl #3
   2d360:	ldr	r0, [r0]
   2d364:	cmn	r0, #1
   2d368:	beq	2d384 <__assert_fail@plt+0x1be80>
   2d36c:	ldr	r0, [fp, #-8]
   2d370:	ldr	r1, [fp, #-12]
   2d374:	ldr	r2, [fp, #12]
   2d378:	lsl	r2, r2, #3
   2d37c:	bl	112a0 <memcpy@plt>
   2d380:	b	2d398 <__assert_fail@plt+0x1be94>
   2d384:	ldr	r0, [fp, #8]
   2d388:	ldr	r1, [fp, #-8]
   2d38c:	ldr	r2, [sp, #12]
   2d390:	add	r1, r1, r2, lsl #3
   2d394:	str	r0, [r1, #4]
   2d398:	b	2d39c <__assert_fail@plt+0x1be98>
   2d39c:	b	2d3a0 <__assert_fail@plt+0x1be9c>
   2d3a0:	b	2d3a4 <__assert_fail@plt+0x1bea0>
   2d3a4:	b	2d3a8 <__assert_fail@plt+0x1bea4>
   2d3a8:	mov	sp, fp
   2d3ac:	pop	{fp, pc}
   2d3b0:	push	{fp, lr}
   2d3b4:	mov	fp, sp
   2d3b8:	sub	sp, sp, #40	; 0x28
   2d3bc:	ldr	ip, [fp, #12]
   2d3c0:	ldr	lr, [fp, #8]
   2d3c4:	str	r0, [fp, #-8]
   2d3c8:	str	r1, [fp, #-12]
   2d3cc:	str	r2, [fp, #-16]
   2d3d0:	str	r3, [sp, #20]
   2d3d4:	ldr	r0, [fp, #-8]
   2d3d8:	movw	r1, #0
   2d3dc:	cmp	r0, r1
   2d3e0:	str	lr, [sp, #12]
   2d3e4:	str	ip, [sp, #8]
   2d3e8:	beq	2d3fc <__assert_fail@plt+0x1bef8>
   2d3ec:	ldr	r0, [fp, #-8]
   2d3f0:	ldr	r0, [r0]
   2d3f4:	cmp	r0, #0
   2d3f8:	bne	2d408 <__assert_fail@plt+0x1bf04>
   2d3fc:	mvn	r0, #0
   2d400:	str	r0, [fp, #-4]
   2d404:	b	2d544 <__assert_fail@plt+0x1c040>
   2d408:	ldr	r0, [fp, #-8]
   2d40c:	ldr	r1, [r0]
   2d410:	sub	r1, r1, #1
   2d414:	str	r1, [r0]
   2d418:	str	r1, [sp, #16]
   2d41c:	ldr	r0, [fp, #-8]
   2d420:	ldr	r0, [r0, #8]
   2d424:	ldr	r1, [sp, #16]
   2d428:	add	r1, r1, r1, lsl #1
   2d42c:	ldr	r0, [r0, r1, lsl #3]
   2d430:	ldr	r1, [fp, #-12]
   2d434:	str	r0, [r1]
   2d438:	ldr	r0, [sp, #20]
   2d43c:	ldr	r1, [fp, #-8]
   2d440:	ldr	r1, [r1, #8]
   2d444:	ldr	r2, [sp, #16]
   2d448:	add	r2, r2, r2, lsl #1
   2d44c:	add	r1, r1, r2, lsl #3
   2d450:	ldr	r1, [r1, #8]
   2d454:	ldr	r2, [fp, #-16]
   2d458:	lsl	r2, r2, #3
   2d45c:	bl	112a0 <memcpy@plt>
   2d460:	ldr	r1, [fp, #8]
   2d464:	ldr	r2, [fp, #-8]
   2d468:	ldr	r2, [r2, #8]
   2d46c:	ldr	lr, [sp, #16]
   2d470:	add	lr, lr, lr, lsl #1
   2d474:	add	r2, r2, lr, lsl #3
   2d478:	ldr	r2, [r2, #8]
   2d47c:	ldr	lr, [fp, #-16]
   2d480:	add	r2, r2, lr, lsl #3
   2d484:	lsl	lr, lr, #3
   2d488:	str	r0, [sp, #4]
   2d48c:	mov	r0, r1
   2d490:	mov	r1, r2
   2d494:	mov	r2, lr
   2d498:	bl	112a0 <memcpy@plt>
   2d49c:	ldr	r0, [fp, #12]
   2d4a0:	ldr	r0, [r0, #8]
   2d4a4:	bl	35268 <__assert_fail@plt+0x23d64>
   2d4a8:	ldr	r0, [fp, #-8]
   2d4ac:	ldr	r0, [r0, #8]
   2d4b0:	ldr	r1, [sp, #16]
   2d4b4:	movw	r2, #24
   2d4b8:	mul	r1, r1, r2
   2d4bc:	add	r0, r0, r1
   2d4c0:	ldr	r0, [r0, #8]
   2d4c4:	bl	35268 <__assert_fail@plt+0x23d64>
   2d4c8:	ldr	r0, [fp, #12]
   2d4cc:	ldr	r1, [fp, #-8]
   2d4d0:	ldr	r1, [r1, #8]
   2d4d4:	ldr	r2, [sp, #16]
   2d4d8:	movw	lr, #24
   2d4dc:	mul	r2, r2, lr
   2d4e0:	add	r1, r1, r2
   2d4e4:	ldr	r2, [r1, #12]
   2d4e8:	str	r2, [r0]
   2d4ec:	ldr	r2, [r1, #16]
   2d4f0:	str	r2, [r0, #4]
   2d4f4:	ldr	r1, [r1, #20]
   2d4f8:	str	r1, [r0, #8]
   2d4fc:	ldr	r0, [fp, #-8]
   2d500:	ldr	r0, [r0, #8]
   2d504:	ldr	r1, [sp, #16]
   2d508:	mul	r1, r1, lr
   2d50c:	add	r0, r0, r1
   2d510:	ldr	r0, [r0, #4]
   2d514:	movw	r1, #0
   2d518:	cmp	r1, r0
   2d51c:	bgt	2d524 <__assert_fail@plt+0x1c020>
   2d520:	b	2d524 <__assert_fail@plt+0x1c020>
   2d524:	ldr	r0, [fp, #-8]
   2d528:	ldr	r0, [r0, #8]
   2d52c:	ldr	r1, [sp, #16]
   2d530:	movw	r2, #24
   2d534:	mul	r1, r1, r2
   2d538:	add	r0, r0, r1
   2d53c:	ldr	r0, [r0, #4]
   2d540:	str	r0, [fp, #-4]
   2d544:	ldr	r0, [fp, #-4]
   2d548:	mov	sp, fp
   2d54c:	pop	{fp, pc}
   2d550:	push	{r4, r5, fp, lr}
   2d554:	add	fp, sp, #8
   2d558:	sub	sp, sp, #112	; 0x70
   2d55c:	ldr	ip, [fp, #20]
   2d560:	ldr	lr, [fp, #16]
   2d564:	ldr	r4, [fp, #12]
   2d568:	ldr	r5, [fp, #8]
   2d56c:	str	r0, [fp, #-16]
   2d570:	str	r1, [fp, #-20]	; 0xffffffec
   2d574:	str	r2, [fp, #-24]	; 0xffffffe8
   2d578:	str	r3, [fp, #-28]	; 0xffffffe4
   2d57c:	ldr	r0, [fp, #-16]
   2d580:	ldr	r0, [r0, #84]	; 0x54
   2d584:	str	r0, [fp, #-32]	; 0xffffffe0
   2d588:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d58c:	ldr	r0, [r0]
   2d590:	ldr	r1, [fp, #12]
   2d594:	add	r0, r0, r1, lsl #3
   2d598:	ldr	r0, [r0, #4]
   2d59c:	and	r0, r0, #255	; 0xff
   2d5a0:	and	r0, r0, #8
   2d5a4:	cmp	r0, #0
   2d5a8:	str	r5, [sp, #32]
   2d5ac:	str	ip, [sp, #28]
   2d5b0:	str	lr, [sp, #24]
   2d5b4:	str	r4, [sp, #20]
   2d5b8:	beq	2d74c <__assert_fail@plt+0x1c248>
   2d5bc:	ldr	r0, [fp, #-16]
   2d5c0:	ldr	r0, [r0, #100]	; 0x64
   2d5c4:	ldr	r1, [fp, #8]
   2d5c8:	ldr	r1, [r1]
   2d5cc:	add	r0, r0, r1, lsl #2
   2d5d0:	ldr	r0, [r0]
   2d5d4:	add	r0, r0, #4
   2d5d8:	str	r0, [fp, #-36]	; 0xffffffdc
   2d5dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d5e0:	ldr	r0, [r0, #20]
   2d5e4:	ldr	r1, [fp, #12]
   2d5e8:	movw	r2, #12
   2d5ec:	mul	r1, r1, r2
   2d5f0:	add	r0, r0, r1
   2d5f4:	str	r0, [fp, #-40]	; 0xffffffd8
   2d5f8:	ldr	r0, [fp, #16]
   2d5fc:	ldr	r1, [fp, #12]
   2d600:	bl	23254 <__assert_fail@plt+0x11d50>
   2d604:	cmp	r0, #0
   2d608:	bne	2d644 <__assert_fail@plt+0x1c140>
   2d60c:	ldr	r0, [fp, #16]
   2d610:	ldr	r1, [fp, #12]
   2d614:	bl	22d98 <__assert_fail@plt+0x11894>
   2d618:	and	r0, r0, #1
   2d61c:	strb	r0, [fp, #-41]	; 0xffffffd7
   2d620:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   2d624:	mvn	r1, #0
   2d628:	eor	r0, r0, r1
   2d62c:	tst	r0, #1
   2d630:	beq	2d640 <__assert_fail@plt+0x1c13c>
   2d634:	mvn	r0, #1
   2d638:	str	r0, [fp, #-12]
   2d63c:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d640:	b	2d644 <__assert_fail@plt+0x1c140>
   2d644:	mvn	r0, #0
   2d648:	str	r0, [fp, #-48]	; 0xffffffd0
   2d64c:	movw	r0, #0
   2d650:	str	r0, [fp, #-52]	; 0xffffffcc
   2d654:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d658:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d65c:	ldr	r1, [r1, #4]
   2d660:	cmp	r0, r1
   2d664:	bge	2d740 <__assert_fail@plt+0x1c23c>
   2d668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d66c:	ldr	r0, [r0, #8]
   2d670:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d674:	add	r0, r0, r1, lsl #2
   2d678:	ldr	r0, [r0]
   2d67c:	str	r0, [fp, #-56]	; 0xffffffc8
   2d680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d684:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d688:	bl	23254 <__assert_fail@plt+0x11d50>
   2d68c:	cmp	r0, #0
   2d690:	bne	2d698 <__assert_fail@plt+0x1c194>
   2d694:	b	2d730 <__assert_fail@plt+0x1c22c>
   2d698:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d69c:	cmn	r0, #1
   2d6a0:	bne	2d6b0 <__assert_fail@plt+0x1c1ac>
   2d6a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d6a8:	str	r0, [fp, #-48]	; 0xffffffd0
   2d6ac:	b	2d72c <__assert_fail@plt+0x1c228>
   2d6b0:	ldr	r0, [fp, #16]
   2d6b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d6b8:	bl	23254 <__assert_fail@plt+0x11d50>
   2d6bc:	cmp	r0, #0
   2d6c0:	beq	2d6d0 <__assert_fail@plt+0x1c1cc>
   2d6c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d6c8:	str	r0, [fp, #-12]
   2d6cc:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d6d0:	ldr	r0, [fp, #20]
   2d6d4:	movw	r1, #0
   2d6d8:	cmp	r0, r1
   2d6dc:	beq	2d724 <__assert_fail@plt+0x1c220>
   2d6e0:	ldr	r0, [fp, #20]
   2d6e4:	ldr	r1, [fp, #8]
   2d6e8:	ldr	r1, [r1]
   2d6ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d6f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d6f4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2d6f8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   2d6fc:	ldr	r4, [fp, #16]
   2d700:	str	ip, [sp]
   2d704:	str	lr, [sp, #4]
   2d708:	str	r4, [sp, #8]
   2d70c:	bl	2db80 <__assert_fail@plt+0x1c67c>
   2d710:	cmp	r0, #0
   2d714:	beq	2d724 <__assert_fail@plt+0x1c220>
   2d718:	mvn	r0, #1
   2d71c:	str	r0, [fp, #-12]
   2d720:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d724:	b	2d728 <__assert_fail@plt+0x1c224>
   2d728:	b	2d740 <__assert_fail@plt+0x1c23c>
   2d72c:	b	2d730 <__assert_fail@plt+0x1c22c>
   2d730:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d734:	add	r0, r0, #1
   2d738:	str	r0, [fp, #-52]	; 0xffffffcc
   2d73c:	b	2d654 <__assert_fail@plt+0x1c150>
   2d740:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d744:	str	r0, [fp, #-12]
   2d748:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d74c:	mov	r0, #0
   2d750:	str	r0, [sp, #60]	; 0x3c
   2d754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d758:	ldr	r0, [r0]
   2d75c:	ldr	r1, [fp, #12]
   2d760:	add	r0, r0, r1, lsl #3
   2d764:	ldrb	r0, [r0, #4]
   2d768:	str	r0, [sp, #56]	; 0x38
   2d76c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d770:	ldr	r0, [r0]
   2d774:	ldr	r1, [fp, #12]
   2d778:	add	r0, r0, r1, lsl #3
   2d77c:	ldr	r0, [r0, #4]
   2d780:	lsr	r0, r0, #20
   2d784:	and	r0, r0, #1
   2d788:	cmp	r0, #0
   2d78c:	beq	2d7b0 <__assert_fail@plt+0x1c2ac>
   2d790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d794:	ldr	r1, [fp, #12]
   2d798:	ldr	r2, [fp, #-16]
   2d79c:	ldr	r3, [fp, #8]
   2d7a0:	ldr	r3, [r3]
   2d7a4:	bl	292e0 <__assert_fail@plt+0x17ddc>
   2d7a8:	str	r0, [sp, #60]	; 0x3c
   2d7ac:	b	2d98c <__assert_fail@plt+0x1c488>
   2d7b0:	ldr	r0, [sp, #56]	; 0x38
   2d7b4:	cmp	r0, #4
   2d7b8:	bne	2d988 <__assert_fail@plt+0x1c484>
   2d7bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d7c0:	ldr	r0, [r0]
   2d7c4:	ldr	r1, [fp, #12]
   2d7c8:	add	r0, r0, r1, lsl #3
   2d7cc:	ldr	r0, [r0]
   2d7d0:	add	r0, r0, #1
   2d7d4:	str	r0, [sp, #52]	; 0x34
   2d7d8:	ldr	r0, [sp, #52]	; 0x34
   2d7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d7e0:	cmp	r0, r1
   2d7e4:	bge	2d804 <__assert_fail@plt+0x1c300>
   2d7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7ec:	ldr	r1, [sp, #52]	; 0x34
   2d7f0:	add	r0, r0, r1, lsl #3
   2d7f4:	ldr	r1, [r0, #4]
   2d7f8:	ldr	r0, [r0]
   2d7fc:	sub	r0, r1, r0
   2d800:	str	r0, [sp, #60]	; 0x3c
   2d804:	ldr	r0, [fp, #20]
   2d808:	movw	r1, #0
   2d80c:	cmp	r0, r1
   2d810:	beq	2d8e8 <__assert_fail@plt+0x1c3e4>
   2d814:	ldr	r0, [sp, #52]	; 0x34
   2d818:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d81c:	cmp	r0, r1
   2d820:	bge	2d854 <__assert_fail@plt+0x1c350>
   2d824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d828:	ldr	r1, [sp, #52]	; 0x34
   2d82c:	add	r0, r0, r1, lsl #3
   2d830:	ldr	r0, [r0]
   2d834:	cmn	r0, #1
   2d838:	beq	2d854 <__assert_fail@plt+0x1c350>
   2d83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d840:	ldr	r1, [sp, #52]	; 0x34
   2d844:	add	r0, r0, r1, lsl #3
   2d848:	ldr	r0, [r0, #4]
   2d84c:	cmn	r0, #1
   2d850:	bne	2d860 <__assert_fail@plt+0x1c35c>
   2d854:	mvn	r0, #0
   2d858:	str	r0, [fp, #-12]
   2d85c:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d860:	ldr	r0, [sp, #60]	; 0x3c
   2d864:	cmp	r0, #0
   2d868:	beq	2d8e0 <__assert_fail@plt+0x1c3dc>
   2d86c:	ldr	r0, [fp, #-16]
   2d870:	ldr	r0, [r0, #4]
   2d874:	str	r0, [sp, #48]	; 0x30
   2d878:	ldr	r0, [fp, #-16]
   2d87c:	ldr	r0, [r0, #28]
   2d880:	ldr	r1, [fp, #8]
   2d884:	ldr	r1, [r1]
   2d888:	sub	r0, r0, r1
   2d88c:	ldr	r1, [sp, #60]	; 0x3c
   2d890:	cmp	r0, r1
   2d894:	blt	2d8d0 <__assert_fail@plt+0x1c3cc>
   2d898:	ldr	r0, [sp, #48]	; 0x30
   2d89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d8a0:	ldr	r2, [sp, #52]	; 0x34
   2d8a4:	add	r1, r1, r2, lsl #3
   2d8a8:	ldr	r1, [r1]
   2d8ac:	add	r0, r0, r1
   2d8b0:	ldr	r1, [sp, #48]	; 0x30
   2d8b4:	ldr	r2, [fp, #8]
   2d8b8:	ldr	r2, [r2]
   2d8bc:	add	r1, r1, r2
   2d8c0:	ldr	r2, [sp, #60]	; 0x3c
   2d8c4:	bl	112e8 <memcmp@plt>
   2d8c8:	cmp	r0, #0
   2d8cc:	beq	2d8dc <__assert_fail@plt+0x1c3d8>
   2d8d0:	mvn	r0, #0
   2d8d4:	str	r0, [fp, #-12]
   2d8d8:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d8dc:	b	2d8e0 <__assert_fail@plt+0x1c3dc>
   2d8e0:	b	2d8e4 <__assert_fail@plt+0x1c3e0>
   2d8e4:	b	2d8e8 <__assert_fail@plt+0x1c3e4>
   2d8e8:	ldr	r0, [sp, #60]	; 0x3c
   2d8ec:	cmp	r0, #0
   2d8f0:	bne	2d984 <__assert_fail@plt+0x1c480>
   2d8f4:	ldr	r0, [fp, #16]
   2d8f8:	ldr	r1, [fp, #12]
   2d8fc:	bl	22d98 <__assert_fail@plt+0x11894>
   2d900:	and	r0, r0, #1
   2d904:	strb	r0, [sp, #43]	; 0x2b
   2d908:	ldrb	r0, [sp, #43]	; 0x2b
   2d90c:	mvn	r1, #0
   2d910:	eor	r0, r0, r1
   2d914:	tst	r0, #1
   2d918:	beq	2d928 <__assert_fail@plt+0x1c424>
   2d91c:	mvn	r0, #1
   2d920:	str	r0, [fp, #-12]
   2d924:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d92c:	ldr	r0, [r0, #20]
   2d930:	ldr	r1, [fp, #12]
   2d934:	add	r1, r1, r1, lsl #1
   2d938:	add	r0, r0, r1, lsl #2
   2d93c:	ldr	r0, [r0, #8]
   2d940:	ldr	r0, [r0]
   2d944:	str	r0, [sp, #44]	; 0x2c
   2d948:	ldr	r0, [fp, #-16]
   2d94c:	ldr	r0, [r0, #100]	; 0x64
   2d950:	ldr	r1, [fp, #8]
   2d954:	ldr	r1, [r1]
   2d958:	add	r0, r0, r1, lsl #2
   2d95c:	ldr	r0, [r0]
   2d960:	add	r0, r0, #4
   2d964:	ldr	r1, [sp, #44]	; 0x2c
   2d968:	bl	23254 <__assert_fail@plt+0x11d50>
   2d96c:	cmp	r0, #0
   2d970:	beq	2d980 <__assert_fail@plt+0x1c47c>
   2d974:	ldr	r0, [sp, #44]	; 0x2c
   2d978:	str	r0, [fp, #-12]
   2d97c:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2d980:	b	2d984 <__assert_fail@plt+0x1c480>
   2d984:	b	2d988 <__assert_fail@plt+0x1c484>
   2d988:	b	2d98c <__assert_fail@plt+0x1c488>
   2d98c:	ldr	r0, [sp, #60]	; 0x3c
   2d990:	cmp	r0, #0
   2d994:	bne	2d9c0 <__assert_fail@plt+0x1c4bc>
   2d998:	ldr	r0, [fp, #-16]
   2d99c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2d9a0:	ldr	r1, [r1]
   2d9a4:	ldr	r2, [fp, #12]
   2d9a8:	add	r1, r1, r2, lsl #3
   2d9ac:	ldr	r2, [fp, #8]
   2d9b0:	ldr	r2, [r2]
   2d9b4:	bl	298c8 <__assert_fail@plt+0x183c4>
   2d9b8:	tst	r0, #1
   2d9bc:	beq	2dab4 <__assert_fail@plt+0x1c5b0>
   2d9c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d9c4:	ldr	r0, [r0, #12]
   2d9c8:	ldr	r1, [fp, #12]
   2d9cc:	add	r0, r0, r1, lsl #2
   2d9d0:	ldr	r0, [r0]
   2d9d4:	str	r0, [sp, #36]	; 0x24
   2d9d8:	ldr	r0, [sp, #60]	; 0x3c
   2d9dc:	cmp	r0, #0
   2d9e0:	bne	2d9f8 <__assert_fail@plt+0x1c4f4>
   2d9e4:	ldr	r0, [fp, #8]
   2d9e8:	ldr	r0, [r0]
   2d9ec:	add	r0, r0, #1
   2d9f0:	str	r0, [sp, #16]
   2d9f4:	b	2da0c <__assert_fail@plt+0x1c508>
   2d9f8:	ldr	r0, [fp, #8]
   2d9fc:	ldr	r0, [r0]
   2da00:	ldr	r1, [sp, #60]	; 0x3c
   2da04:	add	r0, r0, r1
   2da08:	str	r0, [sp, #16]
   2da0c:	ldr	r0, [sp, #16]
   2da10:	ldr	r1, [fp, #8]
   2da14:	str	r0, [r1]
   2da18:	ldr	r0, [fp, #20]
   2da1c:	movw	r1, #0
   2da20:	cmp	r0, r1
   2da24:	beq	2da9c <__assert_fail@plt+0x1c598>
   2da28:	ldr	r0, [fp, #8]
   2da2c:	ldr	r0, [r0]
   2da30:	ldr	r1, [fp, #-16]
   2da34:	ldr	r1, [r1, #92]	; 0x5c
   2da38:	cmp	r0, r1
   2da3c:	bgt	2da90 <__assert_fail@plt+0x1c58c>
   2da40:	ldr	r0, [fp, #-16]
   2da44:	ldr	r0, [r0, #100]	; 0x64
   2da48:	ldr	r1, [fp, #8]
   2da4c:	ldr	r1, [r1]
   2da50:	add	r0, r0, r1, lsl #2
   2da54:	ldr	r0, [r0]
   2da58:	movw	r1, #0
   2da5c:	cmp	r0, r1
   2da60:	beq	2da90 <__assert_fail@plt+0x1c58c>
   2da64:	ldr	r0, [fp, #-16]
   2da68:	ldr	r0, [r0, #100]	; 0x64
   2da6c:	ldr	r1, [fp, #8]
   2da70:	ldr	r1, [r1]
   2da74:	add	r0, r0, r1, lsl #2
   2da78:	ldr	r0, [r0]
   2da7c:	add	r0, r0, #4
   2da80:	ldr	r1, [sp, #36]	; 0x24
   2da84:	bl	23254 <__assert_fail@plt+0x11d50>
   2da88:	cmp	r0, #0
   2da8c:	bne	2da9c <__assert_fail@plt+0x1c598>
   2da90:	mvn	r0, #0
   2da94:	str	r0, [fp, #-12]
   2da98:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2da9c:	ldr	r0, [fp, #16]
   2daa0:	movw	r1, #0
   2daa4:	str	r1, [r0, #4]
   2daa8:	ldr	r0, [sp, #36]	; 0x24
   2daac:	str	r0, [fp, #-12]
   2dab0:	b	2dac0 <__assert_fail@plt+0x1c5bc>
   2dab4:	b	2dab8 <__assert_fail@plt+0x1c5b4>
   2dab8:	mvn	r0, #0
   2dabc:	str	r0, [fp, #-12]
   2dac0:	ldr	r0, [fp, #-12]
   2dac4:	sub	sp, fp, #8
   2dac8:	pop	{r4, r5, fp, pc}
   2dacc:	push	{fp, lr}
   2dad0:	mov	fp, sp
   2dad4:	sub	sp, sp, #8
   2dad8:	str	r0, [sp, #4]
   2dadc:	ldr	r0, [sp, #4]
   2dae0:	ldr	r0, [r0, #8]
   2dae4:	ldr	r1, [sp, #4]
   2dae8:	ldr	r1, [r1]
   2daec:	bl	2db28 <__assert_fail@plt+0x1c624>
   2daf0:	ldr	r0, [sp, #4]
   2daf4:	bl	2db3c <__assert_fail@plt+0x1c638>
   2daf8:	ldr	r0, [sp, #4]
   2dafc:	add	r0, r0, #12
   2db00:	ldr	r1, [sp, #4]
   2db04:	str	r0, [r1, #8]
   2db08:	ldr	r0, [sp, #4]
   2db0c:	movw	r1, #0
   2db10:	str	r1, [r0]
   2db14:	bl	2db78 <__assert_fail@plt+0x1c674>
   2db18:	ldr	r1, [sp, #4]
   2db1c:	str	r0, [r1, #4]
   2db20:	mov	sp, fp
   2db24:	pop	{fp, pc}
   2db28:	sub	sp, sp, #8
   2db2c:	str	r0, [sp, #4]
   2db30:	str	r1, [sp]
   2db34:	add	sp, sp, #8
   2db38:	bx	lr
   2db3c:	push	{fp, lr}
   2db40:	mov	fp, sp
   2db44:	sub	sp, sp, #8
   2db48:	str	r0, [sp, #4]
   2db4c:	ldr	r0, [sp, #4]
   2db50:	ldr	r0, [r0, #8]
   2db54:	ldr	r1, [sp, #4]
   2db58:	add	r1, r1, #12
   2db5c:	cmp	r0, r1
   2db60:	beq	2db70 <__assert_fail@plt+0x1c66c>
   2db64:	ldr	r0, [sp, #4]
   2db68:	ldr	r0, [r0, #8]
   2db6c:	bl	35268 <__assert_fail@plt+0x23d64>
   2db70:	mov	sp, fp
   2db74:	pop	{fp, pc}
   2db78:	mvn	r0, #0
   2db7c:	bx	lr
   2db80:	push	{r4, sl, fp, lr}
   2db84:	add	fp, sp, #8
   2db88:	sub	sp, sp, #56	; 0x38
   2db8c:	ldr	ip, [fp, #16]
   2db90:	ldr	lr, [fp, #12]
   2db94:	ldr	r4, [fp, #8]
   2db98:	str	r0, [fp, #-16]
   2db9c:	str	r1, [fp, #-20]	; 0xffffffec
   2dba0:	str	r2, [fp, #-24]	; 0xffffffe8
   2dba4:	str	r3, [fp, #-28]	; 0xffffffe4
   2dba8:	ldr	r0, [fp, #-16]
   2dbac:	ldr	r1, [r0]
   2dbb0:	add	r2, r1, #1
   2dbb4:	str	r2, [r0]
   2dbb8:	str	r1, [sp, #28]
   2dbbc:	ldr	r0, [fp, #-16]
   2dbc0:	ldr	r0, [r0]
   2dbc4:	ldr	r1, [fp, #-16]
   2dbc8:	ldr	r1, [r1, #4]
   2dbcc:	cmp	r0, r1
   2dbd0:	str	r4, [sp, #20]
   2dbd4:	str	lr, [sp, #16]
   2dbd8:	str	ip, [sp, #12]
   2dbdc:	bne	2dc38 <__assert_fail@plt+0x1c734>
   2dbe0:	ldr	r0, [fp, #-16]
   2dbe4:	ldr	r1, [r0, #4]
   2dbe8:	ldr	r0, [r0, #8]
   2dbec:	lsl	r1, r1, #1
   2dbf0:	movw	r2, #24
   2dbf4:	mul	r1, r1, r2
   2dbf8:	bl	33bb4 <__assert_fail@plt+0x226b0>
   2dbfc:	str	r0, [sp, #24]
   2dc00:	ldr	r0, [sp, #24]
   2dc04:	movw	r1, #0
   2dc08:	cmp	r0, r1
   2dc0c:	bne	2dc1c <__assert_fail@plt+0x1c718>
   2dc10:	movw	r0, #12
   2dc14:	str	r0, [fp, #-12]
   2dc18:	b	2dd5c <__assert_fail@plt+0x1c858>
   2dc1c:	ldr	r0, [fp, #-16]
   2dc20:	ldr	r1, [r0, #4]
   2dc24:	lsl	r1, r1, #1
   2dc28:	str	r1, [r0, #4]
   2dc2c:	ldr	r0, [sp, #24]
   2dc30:	ldr	r1, [fp, #-16]
   2dc34:	str	r0, [r1, #8]
   2dc38:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dc3c:	ldr	r1, [fp, #-16]
   2dc40:	ldr	r1, [r1, #8]
   2dc44:	ldr	r2, [sp, #28]
   2dc48:	add	r2, r2, r2, lsl #1
   2dc4c:	str	r0, [r1, r2, lsl #3]
   2dc50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc54:	ldr	r1, [fp, #-16]
   2dc58:	ldr	r1, [r1, #8]
   2dc5c:	ldr	r2, [sp, #28]
   2dc60:	add	r2, r2, r2, lsl #1
   2dc64:	add	r1, r1, r2, lsl #3
   2dc68:	str	r0, [r1, #4]
   2dc6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2dc70:	lsl	r1, r0, #1
   2dc74:	lsl	r0, r0, #4
   2dc78:	str	r1, [sp, #8]
   2dc7c:	bl	33b44 <__assert_fail@plt+0x22640>
   2dc80:	ldr	r1, [fp, #-16]
   2dc84:	ldr	r1, [r1, #8]
   2dc88:	ldr	r2, [sp, #28]
   2dc8c:	movw	lr, #24
   2dc90:	mul	r2, r2, lr
   2dc94:	add	r1, r1, r2
   2dc98:	str	r0, [r1, #8]
   2dc9c:	ldr	r0, [fp, #-16]
   2dca0:	ldr	r0, [r0, #8]
   2dca4:	ldr	r1, [sp, #28]
   2dca8:	mul	r1, r1, lr
   2dcac:	add	r0, r0, r1
   2dcb0:	ldr	r0, [r0, #8]
   2dcb4:	movw	r1, #0
   2dcb8:	cmp	r0, r1
   2dcbc:	bne	2dccc <__assert_fail@plt+0x1c7c8>
   2dcc0:	movw	r0, #12
   2dcc4:	str	r0, [fp, #-12]
   2dcc8:	b	2dd5c <__assert_fail@plt+0x1c858>
   2dccc:	ldr	r0, [fp, #-16]
   2dcd0:	ldr	r0, [r0, #8]
   2dcd4:	ldr	r1, [sp, #28]
   2dcd8:	add	r1, r1, r1, lsl #1
   2dcdc:	add	r0, r0, r1, lsl #3
   2dce0:	ldr	r0, [r0, #8]
   2dce4:	ldr	r1, [fp, #8]
   2dce8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dcec:	lsl	r2, r2, #3
   2dcf0:	bl	112a0 <memcpy@plt>
   2dcf4:	ldr	r1, [fp, #-16]
   2dcf8:	ldr	r1, [r1, #8]
   2dcfc:	ldr	r2, [sp, #28]
   2dd00:	add	r2, r2, r2, lsl #1
   2dd04:	add	r1, r1, r2, lsl #3
   2dd08:	ldr	r1, [r1, #8]
   2dd0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dd10:	add	r1, r1, r2, lsl #3
   2dd14:	lsl	r2, r2, #3
   2dd18:	ldr	lr, [fp, #12]
   2dd1c:	str	r0, [sp, #4]
   2dd20:	mov	r0, r1
   2dd24:	mov	r1, lr
   2dd28:	bl	112a0 <memcpy@plt>
   2dd2c:	ldr	r0, [fp, #-16]
   2dd30:	ldr	r0, [r0, #8]
   2dd34:	ldr	r1, [sp, #28]
   2dd38:	movw	r2, #24
   2dd3c:	mul	r1, r1, r2
   2dd40:	add	r0, r0, r1
   2dd44:	add	r0, r0, #12
   2dd48:	ldr	r1, [fp, #16]
   2dd4c:	bl	23180 <__assert_fail@plt+0x11c7c>
   2dd50:	str	r0, [sp, #32]
   2dd54:	ldr	r0, [sp, #32]
   2dd58:	str	r0, [fp, #-12]
   2dd5c:	ldr	r0, [fp, #-12]
   2dd60:	sub	sp, fp, #8
   2dd64:	pop	{r4, sl, fp, pc}
   2dd68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dd6c:	add	fp, sp, #28
   2dd70:	sub	sp, sp, #260	; 0x104
   2dd74:	ldr	ip, [fp, #12]
   2dd78:	ldr	lr, [fp, #8]
   2dd7c:	str	r0, [fp, #-32]	; 0xffffffe0
   2dd80:	str	r1, [fp, #-36]	; 0xffffffdc
   2dd84:	str	r2, [fp, #-40]	; 0xffffffd8
   2dd88:	str	r3, [fp, #-44]	; 0xffffffd4
   2dd8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2dd90:	movw	r1, #0
   2dd94:	cmp	r0, r1
   2dd98:	str	lr, [fp, #-48]	; 0xffffffd0
   2dd9c:	str	ip, [fp, #-52]	; 0xffffffcc
   2dda0:	beq	2ddd8 <__assert_fail@plt+0x1c8d4>
   2dda4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dda8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ddac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ddb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ddb4:	movw	ip, #33655	; 0x8377
   2ddb8:	movt	ip, #3
   2ddbc:	str	r1, [fp, #-56]	; 0xffffffc8
   2ddc0:	mov	r1, ip
   2ddc4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   2ddc8:	str	ip, [sp]
   2ddcc:	bl	113f0 <fprintf@plt>
   2ddd0:	str	r0, [fp, #-60]	; 0xffffffc4
   2ddd4:	b	2ddf4 <__assert_fail@plt+0x1c8f0>
   2ddd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dddc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dde0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dde4:	movw	r1, #33667	; 0x8383
   2dde8:	movt	r1, #3
   2ddec:	bl	113f0 <fprintf@plt>
   2ddf0:	str	r0, [fp, #-64]	; 0xffffffc0
   2ddf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ddf8:	movw	r1, #33674	; 0x838a
   2ddfc:	movt	r1, #3
   2de00:	str	r0, [fp, #-68]	; 0xffffffbc
   2de04:	mov	r0, r1
   2de08:	bl	113cc <gettext@plt>
   2de0c:	movw	r1, #34392	; 0x8658
   2de10:	movt	r1, #3
   2de14:	movw	r3, #2022	; 0x7e6
   2de18:	ldr	lr, [fp, #-68]	; 0xffffffbc
   2de1c:	str	r0, [fp, #-72]	; 0xffffffb8
   2de20:	mov	r0, lr
   2de24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2de28:	bl	113f0 <fprintf@plt>
   2de2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2de30:	movw	r2, #31427	; 0x7ac3
   2de34:	movt	r2, #3
   2de38:	str	r0, [fp, #-76]	; 0xffffffb4
   2de3c:	mov	r0, r2
   2de40:	str	r2, [fp, #-80]	; 0xffffffb0
   2de44:	bl	111f8 <fputs_unlocked@plt>
   2de48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2de4c:	movw	r2, #33678	; 0x838e
   2de50:	movt	r2, #3
   2de54:	str	r0, [fp, #-84]	; 0xffffffac
   2de58:	mov	r0, r2
   2de5c:	str	r1, [fp, #-88]	; 0xffffffa8
   2de60:	bl	113cc <gettext@plt>
   2de64:	movw	r2, #33849	; 0x8439
   2de68:	movt	r2, #3
   2de6c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2de70:	str	r0, [fp, #-92]	; 0xffffffa4
   2de74:	mov	r0, r1
   2de78:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2de7c:	bl	113f0 <fprintf@plt>
   2de80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2de84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2de88:	str	r0, [fp, #-96]	; 0xffffffa0
   2de8c:	mov	r0, r2
   2de90:	bl	111f8 <fputs_unlocked@plt>
   2de94:	ldr	r1, [fp, #12]
   2de98:	cmp	r1, #9
   2de9c:	str	r0, [fp, #-100]	; 0xffffff9c
   2dea0:	str	r1, [fp, #-104]	; 0xffffff98
   2dea4:	bhi	2e2e4 <__assert_fail@plt+0x1cde0>
   2dea8:	add	r0, pc, #8
   2deac:	ldr	r1, [fp, #-104]	; 0xffffff98
   2deb0:	ldr	r0, [r0, r1, lsl #2]
   2deb4:	mov	pc, r0
   2deb8:	andeq	sp, r2, r0, ror #29
   2debc:	andeq	sp, r2, r4, ror #29
   2dec0:	andeq	sp, r2, r0, lsr #30
   2dec4:	andeq	sp, r2, r4, ror #30
   2dec8:	andeq	sp, r2, r0, asr #31
   2decc:	andeq	lr, r2, r8, lsr #32
   2ded0:	muleq	r2, ip, r0
   2ded4:	andeq	lr, r2, ip, lsl r1
   2ded8:	andeq	lr, r2, r8, lsr #3
   2dedc:	andeq	lr, r2, r0, asr #4
   2dee0:	b	2e384 <__assert_fail@plt+0x1ce80>
   2dee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dee8:	movw	r1, #33883	; 0x845b
   2deec:	movt	r1, #3
   2def0:	str	r0, [fp, #-108]	; 0xffffff94
   2def4:	mov	r0, r1
   2def8:	bl	113cc <gettext@plt>
   2defc:	ldr	r1, [fp, #8]
   2df00:	ldr	r2, [r1]
   2df04:	ldr	r1, [fp, #-108]	; 0xffffff94
   2df08:	str	r0, [fp, #-112]	; 0xffffff90
   2df0c:	mov	r0, r1
   2df10:	ldr	r1, [fp, #-112]	; 0xffffff90
   2df14:	bl	113f0 <fprintf@plt>
   2df18:	str	r0, [fp, #-116]	; 0xffffff8c
   2df1c:	b	2e384 <__assert_fail@plt+0x1ce80>
   2df20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df24:	movw	r1, #33899	; 0x846b
   2df28:	movt	r1, #3
   2df2c:	str	r0, [fp, #-120]	; 0xffffff88
   2df30:	mov	r0, r1
   2df34:	bl	113cc <gettext@plt>
   2df38:	ldr	r1, [fp, #8]
   2df3c:	ldr	r2, [r1]
   2df40:	ldr	r1, [fp, #8]
   2df44:	ldr	r3, [r1, #4]
   2df48:	ldr	r1, [fp, #-120]	; 0xffffff88
   2df4c:	str	r0, [fp, #-124]	; 0xffffff84
   2df50:	mov	r0, r1
   2df54:	ldr	r1, [fp, #-124]	; 0xffffff84
   2df58:	bl	113f0 <fprintf@plt>
   2df5c:	str	r0, [fp, #-128]	; 0xffffff80
   2df60:	b	2e384 <__assert_fail@plt+0x1ce80>
   2df64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df68:	movw	r1, #33922	; 0x8482
   2df6c:	movt	r1, #3
   2df70:	str	r0, [fp, #-132]	; 0xffffff7c
   2df74:	mov	r0, r1
   2df78:	bl	113cc <gettext@plt>
   2df7c:	ldr	r1, [fp, #8]
   2df80:	ldr	r2, [r1]
   2df84:	ldr	r1, [fp, #8]
   2df88:	ldr	r3, [r1, #4]
   2df8c:	ldr	r1, [fp, #8]
   2df90:	ldr	r1, [r1, #8]
   2df94:	ldr	lr, [fp, #-132]	; 0xffffff7c
   2df98:	str	r0, [fp, #-136]	; 0xffffff78
   2df9c:	mov	r0, lr
   2dfa0:	ldr	ip, [fp, #-136]	; 0xffffff78
   2dfa4:	str	r1, [fp, #-140]	; 0xffffff74
   2dfa8:	mov	r1, ip
   2dfac:	ldr	r4, [fp, #-140]	; 0xffffff74
   2dfb0:	str	r4, [sp]
   2dfb4:	bl	113f0 <fprintf@plt>
   2dfb8:	str	r0, [sp, #144]	; 0x90
   2dfbc:	b	2e384 <__assert_fail@plt+0x1ce80>
   2dfc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dfc4:	movw	r1, #33950	; 0x849e
   2dfc8:	movt	r1, #3
   2dfcc:	str	r0, [sp, #140]	; 0x8c
   2dfd0:	mov	r0, r1
   2dfd4:	bl	113cc <gettext@plt>
   2dfd8:	ldr	r1, [fp, #8]
   2dfdc:	ldr	r2, [r1]
   2dfe0:	ldr	r1, [fp, #8]
   2dfe4:	ldr	r3, [r1, #4]
   2dfe8:	ldr	r1, [fp, #8]
   2dfec:	ldr	r1, [r1, #8]
   2dff0:	ldr	lr, [fp, #8]
   2dff4:	ldr	lr, [lr, #12]
   2dff8:	ldr	ip, [sp, #140]	; 0x8c
   2dffc:	str	r0, [sp, #136]	; 0x88
   2e000:	mov	r0, ip
   2e004:	ldr	r4, [sp, #136]	; 0x88
   2e008:	str	r1, [sp, #132]	; 0x84
   2e00c:	mov	r1, r4
   2e010:	ldr	r5, [sp, #132]	; 0x84
   2e014:	str	r5, [sp]
   2e018:	str	lr, [sp, #4]
   2e01c:	bl	113f0 <fprintf@plt>
   2e020:	str	r0, [sp, #128]	; 0x80
   2e024:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e02c:	movw	r1, #33982	; 0x84be
   2e030:	movt	r1, #3
   2e034:	str	r0, [sp, #124]	; 0x7c
   2e038:	mov	r0, r1
   2e03c:	bl	113cc <gettext@plt>
   2e040:	ldr	r1, [fp, #8]
   2e044:	ldr	r2, [r1]
   2e048:	ldr	r1, [fp, #8]
   2e04c:	ldr	r3, [r1, #4]
   2e050:	ldr	r1, [fp, #8]
   2e054:	ldr	r1, [r1, #8]
   2e058:	ldr	lr, [fp, #8]
   2e05c:	ldr	lr, [lr, #12]
   2e060:	ldr	ip, [fp, #8]
   2e064:	ldr	ip, [ip, #16]
   2e068:	ldr	r4, [sp, #124]	; 0x7c
   2e06c:	str	r0, [sp, #120]	; 0x78
   2e070:	mov	r0, r4
   2e074:	ldr	r5, [sp, #120]	; 0x78
   2e078:	str	r1, [sp, #116]	; 0x74
   2e07c:	mov	r1, r5
   2e080:	ldr	r6, [sp, #116]	; 0x74
   2e084:	str	r6, [sp]
   2e088:	str	lr, [sp, #4]
   2e08c:	str	ip, [sp, #8]
   2e090:	bl	113f0 <fprintf@plt>
   2e094:	str	r0, [sp, #112]	; 0x70
   2e098:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e0a0:	movw	r1, #34018	; 0x84e2
   2e0a4:	movt	r1, #3
   2e0a8:	str	r0, [sp, #108]	; 0x6c
   2e0ac:	mov	r0, r1
   2e0b0:	bl	113cc <gettext@plt>
   2e0b4:	ldr	r1, [fp, #8]
   2e0b8:	ldr	r2, [r1]
   2e0bc:	ldr	r1, [fp, #8]
   2e0c0:	ldr	r3, [r1, #4]
   2e0c4:	ldr	r1, [fp, #8]
   2e0c8:	ldr	r1, [r1, #8]
   2e0cc:	ldr	lr, [fp, #8]
   2e0d0:	ldr	lr, [lr, #12]
   2e0d4:	ldr	ip, [fp, #8]
   2e0d8:	ldr	ip, [ip, #16]
   2e0dc:	ldr	r4, [fp, #8]
   2e0e0:	ldr	r4, [r4, #20]
   2e0e4:	ldr	r5, [sp, #108]	; 0x6c
   2e0e8:	str	r0, [sp, #104]	; 0x68
   2e0ec:	mov	r0, r5
   2e0f0:	ldr	r6, [sp, #104]	; 0x68
   2e0f4:	str	r1, [sp, #100]	; 0x64
   2e0f8:	mov	r1, r6
   2e0fc:	ldr	r7, [sp, #100]	; 0x64
   2e100:	str	r7, [sp]
   2e104:	str	lr, [sp, #4]
   2e108:	str	ip, [sp, #8]
   2e10c:	str	r4, [sp, #12]
   2e110:	bl	113f0 <fprintf@plt>
   2e114:	str	r0, [sp, #96]	; 0x60
   2e118:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e11c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e120:	movw	r1, #34058	; 0x850a
   2e124:	movt	r1, #3
   2e128:	str	r0, [sp, #92]	; 0x5c
   2e12c:	mov	r0, r1
   2e130:	bl	113cc <gettext@plt>
   2e134:	ldr	r1, [fp, #8]
   2e138:	ldr	r2, [r1]
   2e13c:	ldr	r1, [fp, #8]
   2e140:	ldr	r3, [r1, #4]
   2e144:	ldr	r1, [fp, #8]
   2e148:	ldr	r1, [r1, #8]
   2e14c:	ldr	lr, [fp, #8]
   2e150:	ldr	lr, [lr, #12]
   2e154:	ldr	ip, [fp, #8]
   2e158:	ldr	ip, [ip, #16]
   2e15c:	ldr	r4, [fp, #8]
   2e160:	ldr	r4, [r4, #20]
   2e164:	ldr	r5, [fp, #8]
   2e168:	ldr	r5, [r5, #24]
   2e16c:	ldr	r6, [sp, #92]	; 0x5c
   2e170:	str	r0, [sp, #88]	; 0x58
   2e174:	mov	r0, r6
   2e178:	ldr	r7, [sp, #88]	; 0x58
   2e17c:	str	r1, [sp, #84]	; 0x54
   2e180:	mov	r1, r7
   2e184:	ldr	r8, [sp, #84]	; 0x54
   2e188:	str	r8, [sp]
   2e18c:	str	lr, [sp, #4]
   2e190:	str	ip, [sp, #8]
   2e194:	str	r4, [sp, #12]
   2e198:	str	r5, [sp, #16]
   2e19c:	bl	113f0 <fprintf@plt>
   2e1a0:	str	r0, [sp, #80]	; 0x50
   2e1a4:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e1a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e1ac:	movw	r1, #34102	; 0x8536
   2e1b0:	movt	r1, #3
   2e1b4:	str	r0, [sp, #76]	; 0x4c
   2e1b8:	mov	r0, r1
   2e1bc:	bl	113cc <gettext@plt>
   2e1c0:	ldr	r1, [fp, #8]
   2e1c4:	ldr	r2, [r1]
   2e1c8:	ldr	r1, [fp, #8]
   2e1cc:	ldr	r3, [r1, #4]
   2e1d0:	ldr	r1, [fp, #8]
   2e1d4:	ldr	r1, [r1, #8]
   2e1d8:	ldr	lr, [fp, #8]
   2e1dc:	ldr	lr, [lr, #12]
   2e1e0:	ldr	ip, [fp, #8]
   2e1e4:	ldr	ip, [ip, #16]
   2e1e8:	ldr	r4, [fp, #8]
   2e1ec:	ldr	r4, [r4, #20]
   2e1f0:	ldr	r5, [fp, #8]
   2e1f4:	ldr	r5, [r5, #24]
   2e1f8:	ldr	r6, [fp, #8]
   2e1fc:	ldr	r6, [r6, #28]
   2e200:	ldr	r7, [sp, #76]	; 0x4c
   2e204:	str	r0, [sp, #72]	; 0x48
   2e208:	mov	r0, r7
   2e20c:	ldr	r8, [sp, #72]	; 0x48
   2e210:	str	r1, [sp, #68]	; 0x44
   2e214:	mov	r1, r8
   2e218:	ldr	r9, [sp, #68]	; 0x44
   2e21c:	str	r9, [sp]
   2e220:	str	lr, [sp, #4]
   2e224:	str	ip, [sp, #8]
   2e228:	str	r4, [sp, #12]
   2e22c:	str	r5, [sp, #16]
   2e230:	str	r6, [sp, #20]
   2e234:	bl	113f0 <fprintf@plt>
   2e238:	str	r0, [sp, #64]	; 0x40
   2e23c:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e244:	movw	r1, #34150	; 0x8566
   2e248:	movt	r1, #3
   2e24c:	str	r0, [sp, #60]	; 0x3c
   2e250:	mov	r0, r1
   2e254:	bl	113cc <gettext@plt>
   2e258:	ldr	r1, [fp, #8]
   2e25c:	ldr	r2, [r1]
   2e260:	ldr	r1, [fp, #8]
   2e264:	ldr	r3, [r1, #4]
   2e268:	ldr	r1, [fp, #8]
   2e26c:	ldr	r1, [r1, #8]
   2e270:	ldr	lr, [fp, #8]
   2e274:	ldr	lr, [lr, #12]
   2e278:	ldr	ip, [fp, #8]
   2e27c:	ldr	ip, [ip, #16]
   2e280:	ldr	r4, [fp, #8]
   2e284:	ldr	r4, [r4, #20]
   2e288:	ldr	r5, [fp, #8]
   2e28c:	ldr	r5, [r5, #24]
   2e290:	ldr	r6, [fp, #8]
   2e294:	ldr	r6, [r6, #28]
   2e298:	ldr	r7, [fp, #8]
   2e29c:	ldr	r7, [r7, #32]
   2e2a0:	ldr	r8, [sp, #60]	; 0x3c
   2e2a4:	str	r0, [sp, #56]	; 0x38
   2e2a8:	mov	r0, r8
   2e2ac:	ldr	r9, [sp, #56]	; 0x38
   2e2b0:	str	r1, [sp, #52]	; 0x34
   2e2b4:	mov	r1, r9
   2e2b8:	ldr	sl, [sp, #52]	; 0x34
   2e2bc:	str	sl, [sp]
   2e2c0:	str	lr, [sp, #4]
   2e2c4:	str	ip, [sp, #8]
   2e2c8:	str	r4, [sp, #12]
   2e2cc:	str	r5, [sp, #16]
   2e2d0:	str	r6, [sp, #20]
   2e2d4:	str	r7, [sp, #24]
   2e2d8:	bl	113f0 <fprintf@plt>
   2e2dc:	str	r0, [sp, #48]	; 0x30
   2e2e0:	b	2e384 <__assert_fail@plt+0x1ce80>
   2e2e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e2e8:	movw	r1, #34202	; 0x859a
   2e2ec:	movt	r1, #3
   2e2f0:	str	r0, [sp, #44]	; 0x2c
   2e2f4:	mov	r0, r1
   2e2f8:	bl	113cc <gettext@plt>
   2e2fc:	ldr	r1, [fp, #8]
   2e300:	ldr	r2, [r1]
   2e304:	ldr	r1, [fp, #8]
   2e308:	ldr	r3, [r1, #4]
   2e30c:	ldr	r1, [fp, #8]
   2e310:	ldr	r1, [r1, #8]
   2e314:	ldr	lr, [fp, #8]
   2e318:	ldr	lr, [lr, #12]
   2e31c:	ldr	ip, [fp, #8]
   2e320:	ldr	ip, [ip, #16]
   2e324:	ldr	r4, [fp, #8]
   2e328:	ldr	r4, [r4, #20]
   2e32c:	ldr	r5, [fp, #8]
   2e330:	ldr	r5, [r5, #24]
   2e334:	ldr	r6, [fp, #8]
   2e338:	ldr	r6, [r6, #28]
   2e33c:	ldr	r7, [fp, #8]
   2e340:	ldr	r7, [r7, #32]
   2e344:	ldr	r8, [sp, #44]	; 0x2c
   2e348:	str	r0, [sp, #40]	; 0x28
   2e34c:	mov	r0, r8
   2e350:	ldr	r9, [sp, #40]	; 0x28
   2e354:	str	r1, [sp, #36]	; 0x24
   2e358:	mov	r1, r9
   2e35c:	ldr	sl, [sp, #36]	; 0x24
   2e360:	str	sl, [sp]
   2e364:	str	lr, [sp, #4]
   2e368:	str	ip, [sp, #8]
   2e36c:	str	r4, [sp, #12]
   2e370:	str	r5, [sp, #16]
   2e374:	str	r6, [sp, #20]
   2e378:	str	r7, [sp, #24]
   2e37c:	bl	113f0 <fprintf@plt>
   2e380:	str	r0, [sp, #32]
   2e384:	sub	sp, fp, #28
   2e388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e38c:	push	{fp, lr}
   2e390:	mov	fp, sp
   2e394:	sub	sp, sp, #32
   2e398:	ldr	ip, [fp, #8]
   2e39c:	str	r0, [fp, #-4]
   2e3a0:	str	r1, [fp, #-8]
   2e3a4:	str	r2, [fp, #-12]
   2e3a8:	str	r3, [sp, #16]
   2e3ac:	movw	r0, #0
   2e3b0:	str	r0, [sp, #12]
   2e3b4:	str	ip, [sp, #8]
   2e3b8:	ldr	r0, [fp, #8]
   2e3bc:	ldr	r1, [sp, #12]
   2e3c0:	add	r0, r0, r1, lsl #2
   2e3c4:	ldr	r0, [r0]
   2e3c8:	movw	r1, #0
   2e3cc:	cmp	r0, r1
   2e3d0:	beq	2e3e8 <__assert_fail@plt+0x1cee4>
   2e3d4:	b	2e3d8 <__assert_fail@plt+0x1ced4>
   2e3d8:	ldr	r0, [sp, #12]
   2e3dc:	add	r0, r0, #1
   2e3e0:	str	r0, [sp, #12]
   2e3e4:	b	2e3b8 <__assert_fail@plt+0x1ceb4>
   2e3e8:	ldr	r0, [fp, #-4]
   2e3ec:	ldr	r1, [fp, #-8]
   2e3f0:	ldr	r2, [fp, #-12]
   2e3f4:	ldr	r3, [sp, #16]
   2e3f8:	ldr	ip, [fp, #8]
   2e3fc:	ldr	lr, [sp, #12]
   2e400:	str	ip, [sp]
   2e404:	str	lr, [sp, #4]
   2e408:	bl	2dd68 <__assert_fail@plt+0x1c864>
   2e40c:	mov	sp, fp
   2e410:	pop	{fp, pc}
   2e414:	push	{fp, lr}
   2e418:	mov	fp, sp
   2e41c:	sub	sp, sp, #80	; 0x50
   2e420:	ldr	ip, [fp, #8]
   2e424:	str	ip, [fp, #-4]
   2e428:	str	r0, [fp, #-8]
   2e42c:	str	r1, [fp, #-12]
   2e430:	str	r2, [fp, #-16]
   2e434:	str	r3, [fp, #-20]	; 0xffffffec
   2e438:	movw	r0, #0
   2e43c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e444:	cmp	r0, #10
   2e448:	movw	r0, #0
   2e44c:	str	r0, [sp, #12]
   2e450:	bcs	2e488 <__assert_fail@plt+0x1cf84>
   2e454:	ldr	r0, [fp, #-4]
   2e458:	add	r1, r0, #4
   2e45c:	str	r1, [fp, #-4]
   2e460:	ldr	r0, [r0]
   2e464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e468:	add	r2, sp, #16
   2e46c:	add	r1, r2, r1, lsl #2
   2e470:	str	r0, [r1]
   2e474:	movw	r1, #0
   2e478:	cmp	r0, r1
   2e47c:	movw	r0, #0
   2e480:	movne	r0, #1
   2e484:	str	r0, [sp, #12]
   2e488:	ldr	r0, [sp, #12]
   2e48c:	tst	r0, #1
   2e490:	beq	2e4a8 <__assert_fail@plt+0x1cfa4>
   2e494:	b	2e498 <__assert_fail@plt+0x1cf94>
   2e498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e49c:	add	r0, r0, #1
   2e4a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2e4a4:	b	2e440 <__assert_fail@plt+0x1cf3c>
   2e4a8:	add	r0, sp, #16
   2e4ac:	ldr	r1, [fp, #-8]
   2e4b0:	ldr	r2, [fp, #-12]
   2e4b4:	ldr	r3, [fp, #-16]
   2e4b8:	ldr	ip, [fp, #-20]	; 0xffffffec
   2e4bc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2e4c0:	str	r0, [sp, #8]
   2e4c4:	mov	r0, r1
   2e4c8:	mov	r1, r2
   2e4cc:	mov	r2, r3
   2e4d0:	mov	r3, ip
   2e4d4:	ldr	ip, [sp, #8]
   2e4d8:	str	ip, [sp]
   2e4dc:	str	lr, [sp, #4]
   2e4e0:	bl	2dd68 <__assert_fail@plt+0x1c864>
   2e4e4:	mov	sp, fp
   2e4e8:	pop	{fp, pc}
   2e4ec:	push	{fp, lr}
   2e4f0:	mov	fp, sp
   2e4f4:	sub	sp, sp, #32
   2e4f8:	str	r0, [fp, #-4]
   2e4fc:	str	r1, [fp, #-8]
   2e500:	str	r2, [fp, #-12]
   2e504:	str	r3, [sp, #16]
   2e508:	add	r0, fp, #8
   2e50c:	str	r0, [sp, #12]
   2e510:	ldr	r0, [fp, #-4]
   2e514:	ldr	r1, [fp, #-8]
   2e518:	ldr	r2, [fp, #-12]
   2e51c:	ldr	r3, [sp, #16]
   2e520:	ldr	ip, [sp, #12]
   2e524:	mov	lr, sp
   2e528:	str	ip, [lr]
   2e52c:	bl	2e414 <__assert_fail@plt+0x1cf10>
   2e530:	add	r0, sp, #12
   2e534:	str	r0, [sp, #8]
   2e538:	mov	sp, fp
   2e53c:	pop	{fp, pc}
   2e540:	push	{fp, lr}
   2e544:	mov	fp, sp
   2e548:	sub	sp, sp, #16
   2e54c:	movw	r0, #37332	; 0x91d4
   2e550:	movt	r0, #4
   2e554:	ldr	r1, [r0]
   2e558:	movw	r0, #31427	; 0x7ac3
   2e55c:	movt	r0, #3
   2e560:	bl	111f8 <fputs_unlocked@plt>
   2e564:	movw	r1, #34262	; 0x85d6
   2e568:	movt	r1, #3
   2e56c:	str	r0, [fp, #-4]
   2e570:	mov	r0, r1
   2e574:	bl	113cc <gettext@plt>
   2e578:	movw	r1, #34282	; 0x85ea
   2e57c:	movt	r1, #3
   2e580:	bl	1124c <printf@plt>
   2e584:	movw	r1, #34304	; 0x8600
   2e588:	movt	r1, #3
   2e58c:	str	r0, [sp, #8]
   2e590:	mov	r0, r1
   2e594:	bl	113cc <gettext@plt>
   2e598:	movw	r1, #31750	; 0x7c06
   2e59c:	movt	r1, #3
   2e5a0:	movw	r2, #32043	; 0x7d2b
   2e5a4:	movt	r2, #3
   2e5a8:	bl	1124c <printf@plt>
   2e5ac:	movw	r1, #34324	; 0x8614
   2e5b0:	movt	r1, #3
   2e5b4:	str	r0, [sp, #4]
   2e5b8:	mov	r0, r1
   2e5bc:	bl	113cc <gettext@plt>
   2e5c0:	movw	r1, #34363	; 0x863b
   2e5c4:	movt	r1, #3
   2e5c8:	bl	1124c <printf@plt>
   2e5cc:	str	r0, [sp]
   2e5d0:	mov	sp, fp
   2e5d4:	pop	{fp, pc}
   2e5d8:	push	{fp, lr}
   2e5dc:	mov	fp, sp
   2e5e0:	sub	sp, sp, #16
   2e5e4:	str	r0, [fp, #-4]
   2e5e8:	str	r1, [sp, #8]
   2e5ec:	str	r2, [sp, #4]
   2e5f0:	ldr	r0, [fp, #-4]
   2e5f4:	ldr	r1, [sp, #8]
   2e5f8:	ldr	r2, [sp, #4]
   2e5fc:	bl	2e608 <__assert_fail@plt+0x1d104>
   2e600:	mov	sp, fp
   2e604:	pop	{fp, pc}
   2e608:	push	{fp, lr}
   2e60c:	mov	fp, sp
   2e610:	sub	sp, sp, #16
   2e614:	str	r0, [fp, #-4]
   2e618:	str	r1, [sp, #8]
   2e61c:	str	r2, [sp, #4]
   2e620:	ldr	r0, [fp, #-4]
   2e624:	ldr	r1, [sp, #8]
   2e628:	ldr	r2, [sp, #4]
   2e62c:	bl	35588 <__assert_fail@plt+0x24084>
   2e630:	str	r0, [sp]
   2e634:	ldr	r0, [sp]
   2e638:	movw	r1, #0
   2e63c:	cmp	r0, r1
   2e640:	bne	2e670 <__assert_fail@plt+0x1d16c>
   2e644:	ldr	r0, [fp, #-4]
   2e648:	movw	r1, #0
   2e64c:	cmp	r0, r1
   2e650:	beq	2e66c <__assert_fail@plt+0x1d168>
   2e654:	ldr	r0, [sp, #8]
   2e658:	cmp	r0, #0
   2e65c:	beq	2e670 <__assert_fail@plt+0x1d16c>
   2e660:	ldr	r0, [sp, #4]
   2e664:	cmp	r0, #0
   2e668:	beq	2e670 <__assert_fail@plt+0x1d16c>
   2e66c:	bl	31458 <__assert_fail@plt+0x1ff54>
   2e670:	ldr	r0, [sp]
   2e674:	mov	sp, fp
   2e678:	pop	{fp, pc}
   2e67c:	push	{fp, lr}
   2e680:	mov	fp, sp
   2e684:	sub	sp, sp, #8
   2e688:	str	r0, [sp, #4]
   2e68c:	ldr	r0, [sp, #4]
   2e690:	bl	33b44 <__assert_fail@plt+0x22640>
   2e694:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   2e698:	mov	sp, fp
   2e69c:	pop	{fp, pc}
   2e6a0:	push	{fp, lr}
   2e6a4:	mov	fp, sp
   2e6a8:	sub	sp, sp, #8
   2e6ac:	str	r0, [sp, #4]
   2e6b0:	ldr	r0, [sp, #4]
   2e6b4:	movw	r1, #0
   2e6b8:	cmp	r0, r1
   2e6bc:	bne	2e6c4 <__assert_fail@plt+0x1d1c0>
   2e6c0:	bl	31458 <__assert_fail@plt+0x1ff54>
   2e6c4:	ldr	r0, [sp, #4]
   2e6c8:	mov	sp, fp
   2e6cc:	pop	{fp, pc}
   2e6d0:	push	{fp, lr}
   2e6d4:	mov	fp, sp
   2e6d8:	sub	sp, sp, #8
   2e6dc:	str	r0, [sp, #4]
   2e6e0:	ldr	r0, [sp, #4]
   2e6e4:	bl	352c4 <__assert_fail@plt+0x23dc0>
   2e6e8:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   2e6ec:	mov	sp, fp
   2e6f0:	pop	{fp, pc}
   2e6f4:	push	{fp, lr}
   2e6f8:	mov	fp, sp
   2e6fc:	sub	sp, sp, #8
   2e700:	str	r0, [sp, #4]
   2e704:	ldr	r0, [sp, #4]
   2e708:	bl	2e67c <__assert_fail@plt+0x1d178>
   2e70c:	mov	sp, fp
   2e710:	pop	{fp, pc}
   2e714:	push	{fp, lr}
   2e718:	mov	fp, sp
   2e71c:	sub	sp, sp, #16
   2e720:	str	r0, [fp, #-4]
   2e724:	str	r1, [sp, #8]
   2e728:	ldr	r0, [fp, #-4]
   2e72c:	ldr	r1, [sp, #8]
   2e730:	bl	33bb4 <__assert_fail@plt+0x226b0>
   2e734:	str	r0, [sp, #4]
   2e738:	ldr	r0, [sp, #4]
   2e73c:	movw	r1, #0
   2e740:	cmp	r0, r1
   2e744:	bne	2e768 <__assert_fail@plt+0x1d264>
   2e748:	ldr	r0, [fp, #-4]
   2e74c:	movw	r1, #0
   2e750:	cmp	r0, r1
   2e754:	beq	2e764 <__assert_fail@plt+0x1d260>
   2e758:	ldr	r0, [sp, #8]
   2e75c:	cmp	r0, #0
   2e760:	beq	2e768 <__assert_fail@plt+0x1d264>
   2e764:	bl	31458 <__assert_fail@plt+0x1ff54>
   2e768:	ldr	r0, [sp, #4]
   2e76c:	mov	sp, fp
   2e770:	pop	{fp, pc}
   2e774:	push	{fp, lr}
   2e778:	mov	fp, sp
   2e77c:	sub	sp, sp, #8
   2e780:	str	r0, [sp, #4]
   2e784:	str	r1, [sp]
   2e788:	ldr	r0, [sp, #4]
   2e78c:	ldr	r1, [sp]
   2e790:	bl	35304 <__assert_fail@plt+0x23e00>
   2e794:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   2e798:	mov	sp, fp
   2e79c:	pop	{fp, pc}
   2e7a0:	push	{fp, lr}
   2e7a4:	mov	fp, sp
   2e7a8:	sub	sp, sp, #16
   2e7ac:	str	r0, [fp, #-4]
   2e7b0:	str	r1, [sp, #8]
   2e7b4:	str	r2, [sp, #4]
   2e7b8:	ldr	r0, [fp, #-4]
   2e7bc:	ldr	r1, [sp, #8]
   2e7c0:	ldr	r2, [sp, #4]
   2e7c4:	bl	353fc <__assert_fail@plt+0x23ef8>
   2e7c8:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   2e7cc:	mov	sp, fp
   2e7d0:	pop	{fp, pc}
   2e7d4:	push	{fp, lr}
   2e7d8:	mov	fp, sp
   2e7dc:	sub	sp, sp, #8
   2e7e0:	str	r0, [sp, #4]
   2e7e4:	str	r1, [sp]
   2e7e8:	ldr	r1, [sp, #4]
   2e7ec:	ldr	r2, [sp]
   2e7f0:	movw	r0, #0
   2e7f4:	bl	2e608 <__assert_fail@plt+0x1d104>
   2e7f8:	mov	sp, fp
   2e7fc:	pop	{fp, pc}
   2e800:	push	{fp, lr}
   2e804:	mov	fp, sp
   2e808:	sub	sp, sp, #8
   2e80c:	str	r0, [sp, #4]
   2e810:	str	r1, [sp]
   2e814:	ldr	r1, [sp, #4]
   2e818:	ldr	r2, [sp]
   2e81c:	movw	r0, #0
   2e820:	bl	2e7a0 <__assert_fail@plt+0x1d29c>
   2e824:	mov	sp, fp
   2e828:	pop	{fp, pc}
   2e82c:	push	{fp, lr}
   2e830:	mov	fp, sp
   2e834:	sub	sp, sp, #8
   2e838:	str	r0, [sp, #4]
   2e83c:	str	r1, [sp]
   2e840:	ldr	r0, [sp, #4]
   2e844:	ldr	r1, [sp]
   2e848:	movw	r2, #1
   2e84c:	bl	2e858 <__assert_fail@plt+0x1d354>
   2e850:	mov	sp, fp
   2e854:	pop	{fp, pc}
   2e858:	push	{fp, lr}
   2e85c:	mov	fp, sp
   2e860:	sub	sp, sp, #16
   2e864:	str	r0, [fp, #-4]
   2e868:	str	r1, [sp, #8]
   2e86c:	str	r2, [sp, #4]
   2e870:	ldr	r0, [sp, #8]
   2e874:	ldr	r0, [r0]
   2e878:	str	r0, [sp]
   2e87c:	ldr	r0, [fp, #-4]
   2e880:	movw	r1, #0
   2e884:	cmp	r0, r1
   2e888:	bne	2e8d4 <__assert_fail@plt+0x1d3d0>
   2e88c:	ldr	r0, [sp]
   2e890:	cmp	r0, #0
   2e894:	bne	2e8d0 <__assert_fail@plt+0x1d3cc>
   2e898:	ldr	r0, [sp, #4]
   2e89c:	movw	r1, #64	; 0x40
   2e8a0:	udiv	r0, r1, r0
   2e8a4:	str	r0, [sp]
   2e8a8:	ldr	r0, [sp]
   2e8ac:	cmp	r0, #0
   2e8b0:	movw	r0, #0
   2e8b4:	movne	r0, #1
   2e8b8:	mvn	r1, #0
   2e8bc:	eor	r0, r0, r1
   2e8c0:	and	r0, r0, #1
   2e8c4:	ldr	r1, [sp]
   2e8c8:	add	r0, r1, r0
   2e8cc:	str	r0, [sp]
   2e8d0:	b	2e904 <__assert_fail@plt+0x1d400>
   2e8d4:	ldr	r0, [sp]
   2e8d8:	ldr	r1, [sp]
   2e8dc:	lsr	r1, r1, #1
   2e8e0:	add	r1, r1, #1
   2e8e4:	adds	r0, r0, r1
   2e8e8:	mov	r1, #0
   2e8ec:	adc	r1, r1, #0
   2e8f0:	str	r0, [sp]
   2e8f4:	tst	r1, #1
   2e8f8:	beq	2e900 <__assert_fail@plt+0x1d3fc>
   2e8fc:	bl	31458 <__assert_fail@plt+0x1ff54>
   2e900:	b	2e904 <__assert_fail@plt+0x1d400>
   2e904:	ldr	r0, [fp, #-4]
   2e908:	ldr	r1, [sp]
   2e90c:	ldr	r2, [sp, #4]
   2e910:	bl	2e608 <__assert_fail@plt+0x1d104>
   2e914:	str	r0, [fp, #-4]
   2e918:	ldr	r0, [sp]
   2e91c:	ldr	r1, [sp, #8]
   2e920:	str	r0, [r1]
   2e924:	ldr	r0, [fp, #-4]
   2e928:	mov	sp, fp
   2e92c:	pop	{fp, pc}
   2e930:	push	{fp, lr}
   2e934:	mov	fp, sp
   2e938:	sub	sp, sp, #376	; 0x178
   2e93c:	ldr	ip, [fp, #8]
   2e940:	str	r0, [fp, #-4]
   2e944:	str	r1, [fp, #-8]
   2e948:	str	r2, [fp, #-12]
   2e94c:	str	r3, [fp, #-16]
   2e950:	ldr	r0, [fp, #-8]
   2e954:	ldr	r0, [r0]
   2e958:	str	r0, [fp, #-20]	; 0xffffffec
   2e95c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e960:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e964:	asr	r1, r1, #1
   2e968:	add	r1, r0, r1
   2e96c:	mov	r2, #1
   2e970:	cmp	r1, r0
   2e974:	movwvc	r2, #0
   2e978:	str	r1, [fp, #-24]	; 0xffffffe8
   2e97c:	tst	r2, #1
   2e980:	str	ip, [fp, #-36]	; 0xffffffdc
   2e984:	beq	2e990 <__assert_fail@plt+0x1d48c>
   2e988:	ldr	r0, [pc, #4044]	; 2f95c <__assert_fail@plt+0x1e458>
   2e98c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e990:	ldr	r0, [fp, #-16]
   2e994:	movw	r1, #0
   2e998:	cmp	r1, r0
   2e99c:	bgt	2e9b8 <__assert_fail@plt+0x1d4b4>
   2e9a0:	ldr	r0, [fp, #-16]
   2e9a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e9a8:	cmp	r0, r1
   2e9ac:	bge	2e9b8 <__assert_fail@plt+0x1d4b4>
   2e9b0:	ldr	r0, [fp, #-16]
   2e9b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2e9b8:	b	2ed90 <__assert_fail@plt+0x1d88c>
   2e9bc:	b	2e9c0 <__assert_fail@plt+0x1d4bc>
   2e9c0:	ldr	r0, [fp, #8]
   2e9c4:	cmp	r0, #0
   2e9c8:	bge	2eadc <__assert_fail@plt+0x1d5d8>
   2e9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9d0:	cmp	r0, #0
   2e9d4:	bge	2ea60 <__assert_fail@plt+0x1d55c>
   2e9d8:	b	2e9dc <__assert_fail@plt+0x1d4d8>
   2e9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9e0:	ldr	r1, [fp, #8]
   2e9e4:	movw	r2, #127	; 0x7f
   2e9e8:	sdiv	r1, r2, r1
   2e9ec:	cmp	r0, r1
   2e9f0:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2e9f4:	b	2eb94 <__assert_fail@plt+0x1d690>
   2e9f8:	b	2e9fc <__assert_fail@plt+0x1d4f8>
   2e9fc:	ldr	r0, [pc, #4076]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2ea00:	ldr	r1, [fp, #8]
   2ea04:	cmp	r1, r0
   2ea08:	blt	2ea20 <__assert_fail@plt+0x1d51c>
   2ea0c:	b	2ea2c <__assert_fail@plt+0x1d528>
   2ea10:	ldr	r0, [fp, #8]
   2ea14:	movw	r1, #0
   2ea18:	cmp	r1, r0
   2ea1c:	bge	2ea2c <__assert_fail@plt+0x1d528>
   2ea20:	movw	r0, #0
   2ea24:	str	r0, [fp, #-40]	; 0xffffffd8
   2ea28:	b	2ea44 <__assert_fail@plt+0x1d540>
   2ea2c:	ldr	r0, [fp, #8]
   2ea30:	movw	r1, #0
   2ea34:	sub	r0, r1, r0
   2ea38:	movw	r1, #127	; 0x7f
   2ea3c:	sdiv	r0, r1, r0
   2ea40:	str	r0, [fp, #-40]	; 0xffffffd8
   2ea44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ea48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ea4c:	mvn	r2, #0
   2ea50:	sub	r1, r2, r1
   2ea54:	cmp	r0, r1
   2ea58:	ble	2eb7c <__assert_fail@plt+0x1d678>
   2ea5c:	b	2eb94 <__assert_fail@plt+0x1d690>
   2ea60:	b	2ea64 <__assert_fail@plt+0x1d560>
   2ea64:	b	2eac0 <__assert_fail@plt+0x1d5bc>
   2ea68:	b	2eac0 <__assert_fail@plt+0x1d5bc>
   2ea6c:	ldr	r0, [fp, #8]
   2ea70:	cmn	r0, #1
   2ea74:	bne	2eac0 <__assert_fail@plt+0x1d5bc>
   2ea78:	b	2ea7c <__assert_fail@plt+0x1d578>
   2ea7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea80:	mvn	r1, #127	; 0x7f
   2ea84:	add	r0, r0, r1
   2ea88:	movw	r1, #0
   2ea8c:	cmp	r1, r0
   2ea90:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2ea94:	b	2eb94 <__assert_fail@plt+0x1d690>
   2ea98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea9c:	movw	r1, #0
   2eaa0:	cmp	r1, r0
   2eaa4:	bge	2eb94 <__assert_fail@plt+0x1d690>
   2eaa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eaac:	sub	r0, r0, #1
   2eab0:	movw	r1, #127	; 0x7f
   2eab4:	cmp	r1, r0
   2eab8:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2eabc:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eac0:	ldr	r0, [fp, #8]
   2eac4:	mvn	r1, #127	; 0x7f
   2eac8:	sdiv	r0, r1, r0
   2eacc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ead0:	cmp	r0, r1
   2ead4:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2ead8:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eadc:	ldr	r0, [fp, #8]
   2eae0:	cmp	r0, #0
   2eae4:	bne	2eaec <__assert_fail@plt+0x1d5e8>
   2eae8:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eaec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eaf0:	cmp	r0, #0
   2eaf4:	bge	2eb64 <__assert_fail@plt+0x1d660>
   2eaf8:	b	2eafc <__assert_fail@plt+0x1d5f8>
   2eafc:	b	2eb48 <__assert_fail@plt+0x1d644>
   2eb00:	b	2eb48 <__assert_fail@plt+0x1d644>
   2eb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb08:	cmn	r0, #1
   2eb0c:	bne	2eb48 <__assert_fail@plt+0x1d644>
   2eb10:	b	2eb14 <__assert_fail@plt+0x1d610>
   2eb14:	ldr	r0, [fp, #8]
   2eb18:	mvn	r1, #127	; 0x7f
   2eb1c:	add	r0, r0, r1
   2eb20:	movw	r1, #0
   2eb24:	cmp	r1, r0
   2eb28:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2eb2c:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eb30:	ldr	r0, [fp, #8]
   2eb34:	sub	r0, r0, #1
   2eb38:	movw	r1, #127	; 0x7f
   2eb3c:	cmp	r1, r0
   2eb40:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2eb44:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb4c:	mvn	r1, #127	; 0x7f
   2eb50:	sdiv	r0, r1, r0
   2eb54:	ldr	r1, [fp, #8]
   2eb58:	cmp	r0, r1
   2eb5c:	blt	2eb7c <__assert_fail@plt+0x1d678>
   2eb60:	b	2eb94 <__assert_fail@plt+0x1d690>
   2eb64:	ldr	r0, [fp, #8]
   2eb68:	movw	r1, #127	; 0x7f
   2eb6c:	sdiv	r0, r1, r0
   2eb70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eb74:	cmp	r0, r1
   2eb78:	bge	2eb94 <__assert_fail@plt+0x1d690>
   2eb7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb80:	ldr	r1, [fp, #8]
   2eb84:	mul	r0, r0, r1
   2eb88:	sxtb	r0, r0
   2eb8c:	str	r0, [fp, #-28]	; 0xffffffe4
   2eb90:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2eb94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb98:	ldr	r1, [fp, #8]
   2eb9c:	mul	r0, r0, r1
   2eba0:	sxtb	r0, r0
   2eba4:	str	r0, [fp, #-28]	; 0xffffffe4
   2eba8:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2ebac:	ldr	r0, [fp, #8]
   2ebb0:	cmp	r0, #0
   2ebb4:	bge	2ecc4 <__assert_fail@plt+0x1d7c0>
   2ebb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebbc:	cmp	r0, #0
   2ebc0:	bge	2ec4c <__assert_fail@plt+0x1d748>
   2ebc4:	b	2ebc8 <__assert_fail@plt+0x1d6c4>
   2ebc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebcc:	ldr	r1, [fp, #8]
   2ebd0:	movw	r2, #255	; 0xff
   2ebd4:	sdiv	r1, r2, r1
   2ebd8:	cmp	r0, r1
   2ebdc:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ebe0:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ebe4:	b	2ebe8 <__assert_fail@plt+0x1d6e4>
   2ebe8:	ldr	r0, [pc, #3584]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2ebec:	ldr	r1, [fp, #8]
   2ebf0:	cmp	r1, r0
   2ebf4:	blt	2ec0c <__assert_fail@plt+0x1d708>
   2ebf8:	b	2ec18 <__assert_fail@plt+0x1d714>
   2ebfc:	ldr	r0, [fp, #8]
   2ec00:	movw	r1, #0
   2ec04:	cmp	r1, r0
   2ec08:	bge	2ec18 <__assert_fail@plt+0x1d714>
   2ec0c:	movw	r0, #0
   2ec10:	str	r0, [fp, #-44]	; 0xffffffd4
   2ec14:	b	2ec30 <__assert_fail@plt+0x1d72c>
   2ec18:	ldr	r0, [fp, #8]
   2ec1c:	movw	r1, #0
   2ec20:	sub	r0, r1, r0
   2ec24:	movw	r1, #255	; 0xff
   2ec28:	sdiv	r0, r1, r0
   2ec2c:	str	r0, [fp, #-44]	; 0xffffffd4
   2ec30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ec34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec38:	mvn	r2, #0
   2ec3c:	sub	r1, r2, r1
   2ec40:	cmp	r0, r1
   2ec44:	ble	2ed60 <__assert_fail@plt+0x1d85c>
   2ec48:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ec4c:	b	2ec50 <__assert_fail@plt+0x1d74c>
   2ec50:	b	2eca8 <__assert_fail@plt+0x1d7a4>
   2ec54:	b	2eca8 <__assert_fail@plt+0x1d7a4>
   2ec58:	ldr	r0, [fp, #8]
   2ec5c:	cmn	r0, #1
   2ec60:	bne	2eca8 <__assert_fail@plt+0x1d7a4>
   2ec64:	b	2ec68 <__assert_fail@plt+0x1d764>
   2ec68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec6c:	add	r0, r0, #0
   2ec70:	movw	r1, #0
   2ec74:	cmp	r1, r0
   2ec78:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ec7c:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ec80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec84:	movw	r1, #0
   2ec88:	cmp	r1, r0
   2ec8c:	bge	2ed78 <__assert_fail@plt+0x1d874>
   2ec90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec94:	sub	r0, r0, #1
   2ec98:	mvn	r1, #0
   2ec9c:	cmp	r1, r0
   2eca0:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2eca4:	b	2ed78 <__assert_fail@plt+0x1d874>
   2eca8:	ldr	r0, [fp, #8]
   2ecac:	movw	r1, #0
   2ecb0:	sdiv	r0, r1, r0
   2ecb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ecb8:	cmp	r0, r1
   2ecbc:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ecc0:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ecc4:	ldr	r0, [fp, #8]
   2ecc8:	cmp	r0, #0
   2eccc:	bne	2ecd4 <__assert_fail@plt+0x1d7d0>
   2ecd0:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ecd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecd8:	cmp	r0, #0
   2ecdc:	bge	2ed48 <__assert_fail@plt+0x1d844>
   2ece0:	b	2ece4 <__assert_fail@plt+0x1d7e0>
   2ece4:	b	2ed2c <__assert_fail@plt+0x1d828>
   2ece8:	b	2ed2c <__assert_fail@plt+0x1d828>
   2ecec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecf0:	cmn	r0, #1
   2ecf4:	bne	2ed2c <__assert_fail@plt+0x1d828>
   2ecf8:	b	2ecfc <__assert_fail@plt+0x1d7f8>
   2ecfc:	ldr	r0, [fp, #8]
   2ed00:	add	r0, r0, #0
   2ed04:	movw	r1, #0
   2ed08:	cmp	r1, r0
   2ed0c:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ed10:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ed14:	ldr	r0, [fp, #8]
   2ed18:	sub	r0, r0, #1
   2ed1c:	mvn	r1, #0
   2ed20:	cmp	r1, r0
   2ed24:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ed28:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ed2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed30:	movw	r1, #0
   2ed34:	sdiv	r0, r1, r0
   2ed38:	ldr	r1, [fp, #8]
   2ed3c:	cmp	r0, r1
   2ed40:	blt	2ed60 <__assert_fail@plt+0x1d85c>
   2ed44:	b	2ed78 <__assert_fail@plt+0x1d874>
   2ed48:	ldr	r0, [fp, #8]
   2ed4c:	movw	r1, #255	; 0xff
   2ed50:	sdiv	r0, r1, r0
   2ed54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ed58:	cmp	r0, r1
   2ed5c:	bge	2ed78 <__assert_fail@plt+0x1d874>
   2ed60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed64:	ldr	r1, [fp, #8]
   2ed68:	mul	r0, r0, r1
   2ed6c:	and	r0, r0, #255	; 0xff
   2ed70:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed74:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2ed78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed7c:	ldr	r1, [fp, #8]
   2ed80:	mul	r0, r0, r1
   2ed84:	and	r0, r0, #255	; 0xff
   2ed88:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed8c:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2ed90:	b	2f168 <__assert_fail@plt+0x1dc64>
   2ed94:	b	2ed98 <__assert_fail@plt+0x1d894>
   2ed98:	ldr	r0, [fp, #8]
   2ed9c:	cmp	r0, #0
   2eda0:	bge	2eeb4 <__assert_fail@plt+0x1d9b0>
   2eda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eda8:	cmp	r0, #0
   2edac:	bge	2ee38 <__assert_fail@plt+0x1d934>
   2edb0:	b	2edb4 <__assert_fail@plt+0x1d8b0>
   2edb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edb8:	ldr	r1, [fp, #8]
   2edbc:	movw	r2, #32767	; 0x7fff
   2edc0:	sdiv	r1, r2, r1
   2edc4:	cmp	r0, r1
   2edc8:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2edcc:	b	2ef6c <__assert_fail@plt+0x1da68>
   2edd0:	b	2edd4 <__assert_fail@plt+0x1d8d0>
   2edd4:	ldr	r0, [pc, #3092]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2edd8:	ldr	r1, [fp, #8]
   2eddc:	cmp	r1, r0
   2ede0:	blt	2edf8 <__assert_fail@plt+0x1d8f4>
   2ede4:	b	2ee04 <__assert_fail@plt+0x1d900>
   2ede8:	ldr	r0, [fp, #8]
   2edec:	movw	r1, #0
   2edf0:	cmp	r1, r0
   2edf4:	bge	2ee04 <__assert_fail@plt+0x1d900>
   2edf8:	movw	r0, #0
   2edfc:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee00:	b	2ee1c <__assert_fail@plt+0x1d918>
   2ee04:	ldr	r0, [fp, #8]
   2ee08:	movw	r1, #0
   2ee0c:	sub	r0, r1, r0
   2ee10:	movw	r1, #32767	; 0x7fff
   2ee14:	sdiv	r0, r1, r0
   2ee18:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ee20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ee24:	mvn	r2, #0
   2ee28:	sub	r1, r2, r1
   2ee2c:	cmp	r0, r1
   2ee30:	ble	2ef54 <__assert_fail@plt+0x1da50>
   2ee34:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ee38:	b	2ee3c <__assert_fail@plt+0x1d938>
   2ee3c:	b	2ee98 <__assert_fail@plt+0x1d994>
   2ee40:	b	2ee98 <__assert_fail@plt+0x1d994>
   2ee44:	ldr	r0, [fp, #8]
   2ee48:	cmn	r0, #1
   2ee4c:	bne	2ee98 <__assert_fail@plt+0x1d994>
   2ee50:	b	2ee54 <__assert_fail@plt+0x1d950>
   2ee54:	ldr	r0, [pc, #3928]	; 2fdb4 <__assert_fail@plt+0x1e8b0>
   2ee58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ee5c:	add	r0, r1, r0
   2ee60:	movw	r1, #0
   2ee64:	cmp	r1, r0
   2ee68:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2ee6c:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ee70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee74:	movw	r1, #0
   2ee78:	cmp	r1, r0
   2ee7c:	bge	2ef6c <__assert_fail@plt+0x1da68>
   2ee80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee84:	sub	r0, r0, #1
   2ee88:	movw	r1, #32767	; 0x7fff
   2ee8c:	cmp	r1, r0
   2ee90:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2ee94:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ee98:	ldr	r0, [pc, #3860]	; 2fdb4 <__assert_fail@plt+0x1e8b0>
   2ee9c:	ldr	r1, [fp, #8]
   2eea0:	sdiv	r0, r0, r1
   2eea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eea8:	cmp	r0, r1
   2eeac:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2eeb0:	b	2ef6c <__assert_fail@plt+0x1da68>
   2eeb4:	ldr	r0, [fp, #8]
   2eeb8:	cmp	r0, #0
   2eebc:	bne	2eec4 <__assert_fail@plt+0x1d9c0>
   2eec0:	b	2ef6c <__assert_fail@plt+0x1da68>
   2eec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eec8:	cmp	r0, #0
   2eecc:	bge	2ef3c <__assert_fail@plt+0x1da38>
   2eed0:	b	2eed4 <__assert_fail@plt+0x1d9d0>
   2eed4:	b	2ef20 <__assert_fail@plt+0x1da1c>
   2eed8:	b	2ef20 <__assert_fail@plt+0x1da1c>
   2eedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eee0:	cmn	r0, #1
   2eee4:	bne	2ef20 <__assert_fail@plt+0x1da1c>
   2eee8:	b	2eeec <__assert_fail@plt+0x1d9e8>
   2eeec:	ldr	r0, [pc, #3776]	; 2fdb4 <__assert_fail@plt+0x1e8b0>
   2eef0:	ldr	r1, [fp, #8]
   2eef4:	add	r0, r1, r0
   2eef8:	movw	r1, #0
   2eefc:	cmp	r1, r0
   2ef00:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2ef04:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ef08:	ldr	r0, [fp, #8]
   2ef0c:	sub	r0, r0, #1
   2ef10:	movw	r1, #32767	; 0x7fff
   2ef14:	cmp	r1, r0
   2ef18:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2ef1c:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ef20:	ldr	r0, [pc, #3724]	; 2fdb4 <__assert_fail@plt+0x1e8b0>
   2ef24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef28:	sdiv	r0, r0, r1
   2ef2c:	ldr	r1, [fp, #8]
   2ef30:	cmp	r0, r1
   2ef34:	blt	2ef54 <__assert_fail@plt+0x1da50>
   2ef38:	b	2ef6c <__assert_fail@plt+0x1da68>
   2ef3c:	ldr	r0, [fp, #8]
   2ef40:	movw	r1, #32767	; 0x7fff
   2ef44:	sdiv	r0, r1, r0
   2ef48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef4c:	cmp	r0, r1
   2ef50:	bge	2ef6c <__assert_fail@plt+0x1da68>
   2ef54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef58:	ldr	r1, [fp, #8]
   2ef5c:	mul	r0, r0, r1
   2ef60:	sxth	r0, r0
   2ef64:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef68:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef70:	ldr	r1, [fp, #8]
   2ef74:	mul	r0, r0, r1
   2ef78:	sxth	r0, r0
   2ef7c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef80:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2ef84:	ldr	r0, [fp, #8]
   2ef88:	cmp	r0, #0
   2ef8c:	bge	2f09c <__assert_fail@plt+0x1db98>
   2ef90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef94:	cmp	r0, #0
   2ef98:	bge	2f024 <__assert_fail@plt+0x1db20>
   2ef9c:	b	2efa0 <__assert_fail@plt+0x1da9c>
   2efa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efa4:	ldr	r1, [fp, #8]
   2efa8:	movw	r2, #65535	; 0xffff
   2efac:	sdiv	r1, r2, r1
   2efb0:	cmp	r0, r1
   2efb4:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2efb8:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2efbc:	b	2efc0 <__assert_fail@plt+0x1dabc>
   2efc0:	ldr	r0, [pc, #2600]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2efc4:	ldr	r1, [fp, #8]
   2efc8:	cmp	r1, r0
   2efcc:	blt	2efe4 <__assert_fail@plt+0x1dae0>
   2efd0:	b	2eff0 <__assert_fail@plt+0x1daec>
   2efd4:	ldr	r0, [fp, #8]
   2efd8:	movw	r1, #0
   2efdc:	cmp	r1, r0
   2efe0:	bge	2eff0 <__assert_fail@plt+0x1daec>
   2efe4:	movw	r0, #0
   2efe8:	str	r0, [fp, #-52]	; 0xffffffcc
   2efec:	b	2f008 <__assert_fail@plt+0x1db04>
   2eff0:	ldr	r0, [fp, #8]
   2eff4:	movw	r1, #0
   2eff8:	sub	r0, r1, r0
   2effc:	movw	r1, #65535	; 0xffff
   2f000:	sdiv	r0, r1, r0
   2f004:	str	r0, [fp, #-52]	; 0xffffffcc
   2f008:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2f00c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f010:	mvn	r2, #0
   2f014:	sub	r1, r2, r1
   2f018:	cmp	r0, r1
   2f01c:	ble	2f138 <__assert_fail@plt+0x1dc34>
   2f020:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f024:	b	2f028 <__assert_fail@plt+0x1db24>
   2f028:	b	2f080 <__assert_fail@plt+0x1db7c>
   2f02c:	b	2f080 <__assert_fail@plt+0x1db7c>
   2f030:	ldr	r0, [fp, #8]
   2f034:	cmn	r0, #1
   2f038:	bne	2f080 <__assert_fail@plt+0x1db7c>
   2f03c:	b	2f040 <__assert_fail@plt+0x1db3c>
   2f040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f044:	add	r0, r0, #0
   2f048:	movw	r1, #0
   2f04c:	cmp	r1, r0
   2f050:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f054:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f05c:	movw	r1, #0
   2f060:	cmp	r1, r0
   2f064:	bge	2f150 <__assert_fail@plt+0x1dc4c>
   2f068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f06c:	sub	r0, r0, #1
   2f070:	mvn	r1, #0
   2f074:	cmp	r1, r0
   2f078:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f07c:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f080:	ldr	r0, [fp, #8]
   2f084:	movw	r1, #0
   2f088:	sdiv	r0, r1, r0
   2f08c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f090:	cmp	r0, r1
   2f094:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f098:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f09c:	ldr	r0, [fp, #8]
   2f0a0:	cmp	r0, #0
   2f0a4:	bne	2f0ac <__assert_fail@plt+0x1dba8>
   2f0a8:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0b0:	cmp	r0, #0
   2f0b4:	bge	2f120 <__assert_fail@plt+0x1dc1c>
   2f0b8:	b	2f0bc <__assert_fail@plt+0x1dbb8>
   2f0bc:	b	2f104 <__assert_fail@plt+0x1dc00>
   2f0c0:	b	2f104 <__assert_fail@plt+0x1dc00>
   2f0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0c8:	cmn	r0, #1
   2f0cc:	bne	2f104 <__assert_fail@plt+0x1dc00>
   2f0d0:	b	2f0d4 <__assert_fail@plt+0x1dbd0>
   2f0d4:	ldr	r0, [fp, #8]
   2f0d8:	add	r0, r0, #0
   2f0dc:	movw	r1, #0
   2f0e0:	cmp	r1, r0
   2f0e4:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f0e8:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f0ec:	ldr	r0, [fp, #8]
   2f0f0:	sub	r0, r0, #1
   2f0f4:	mvn	r1, #0
   2f0f8:	cmp	r1, r0
   2f0fc:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f100:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f108:	movw	r1, #0
   2f10c:	sdiv	r0, r1, r0
   2f110:	ldr	r1, [fp, #8]
   2f114:	cmp	r0, r1
   2f118:	blt	2f138 <__assert_fail@plt+0x1dc34>
   2f11c:	b	2f150 <__assert_fail@plt+0x1dc4c>
   2f120:	ldr	r0, [fp, #8]
   2f124:	movw	r1, #65535	; 0xffff
   2f128:	sdiv	r0, r1, r0
   2f12c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f130:	cmp	r0, r1
   2f134:	bge	2f150 <__assert_fail@plt+0x1dc4c>
   2f138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f13c:	ldr	r1, [fp, #8]
   2f140:	mul	r0, r0, r1
   2f144:	uxth	r0, r0
   2f148:	str	r0, [fp, #-28]	; 0xffffffe4
   2f14c:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2f150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f154:	ldr	r1, [fp, #8]
   2f158:	mul	r0, r0, r1
   2f15c:	uxth	r0, r0
   2f160:	str	r0, [fp, #-28]	; 0xffffffe4
   2f164:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2f168:	b	2f16c <__assert_fail@plt+0x1dc68>
   2f16c:	b	2f170 <__assert_fail@plt+0x1dc6c>
   2f170:	ldr	r0, [fp, #8]
   2f174:	cmp	r0, #0
   2f178:	bge	2f27c <__assert_fail@plt+0x1dd78>
   2f17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f180:	cmp	r0, #0
   2f184:	bge	2f210 <__assert_fail@plt+0x1dd0c>
   2f188:	b	2f18c <__assert_fail@plt+0x1dc88>
   2f18c:	ldr	r0, [pc, #1992]	; 2f95c <__assert_fail@plt+0x1e458>
   2f190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f194:	ldr	r2, [fp, #8]
   2f198:	sdiv	r0, r0, r2
   2f19c:	cmp	r1, r0
   2f1a0:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f1a4:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f1a8:	b	2f1ac <__assert_fail@plt+0x1dca8>
   2f1ac:	ldr	r0, [pc, #2108]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2f1b0:	ldr	r1, [fp, #8]
   2f1b4:	cmp	r1, r0
   2f1b8:	blt	2f1d0 <__assert_fail@plt+0x1dccc>
   2f1bc:	b	2f1dc <__assert_fail@plt+0x1dcd8>
   2f1c0:	ldr	r0, [fp, #8]
   2f1c4:	movw	r1, #0
   2f1c8:	cmp	r1, r0
   2f1cc:	bge	2f1dc <__assert_fail@plt+0x1dcd8>
   2f1d0:	movw	r0, #0
   2f1d4:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1d8:	b	2f1f4 <__assert_fail@plt+0x1dcf0>
   2f1dc:	ldr	r0, [pc, #1912]	; 2f95c <__assert_fail@plt+0x1e458>
   2f1e0:	ldr	r1, [fp, #8]
   2f1e4:	movw	r2, #0
   2f1e8:	sub	r1, r2, r1
   2f1ec:	sdiv	r0, r0, r1
   2f1f0:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1fc:	mvn	r2, #0
   2f200:	sub	r1, r2, r1
   2f204:	cmp	r0, r1
   2f208:	ble	2f30c <__assert_fail@plt+0x1de08>
   2f20c:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f210:	ldr	r0, [fp, #8]
   2f214:	cmn	r0, #1
   2f218:	bne	2f260 <__assert_fail@plt+0x1dd5c>
   2f21c:	b	2f220 <__assert_fail@plt+0x1dd1c>
   2f220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f224:	add	r0, r0, #-2147483648	; 0x80000000
   2f228:	movw	r1, #0
   2f22c:	cmp	r1, r0
   2f230:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f234:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f23c:	movw	r1, #0
   2f240:	cmp	r1, r0
   2f244:	bge	2f320 <__assert_fail@plt+0x1de1c>
   2f248:	ldr	r0, [pc, #1804]	; 2f95c <__assert_fail@plt+0x1e458>
   2f24c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f250:	sub	r1, r1, #1
   2f254:	cmp	r0, r1
   2f258:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f25c:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f260:	ldr	r0, [pc, #4072]	; 30250 <__assert_fail@plt+0x1ed4c>
   2f264:	ldr	r1, [fp, #8]
   2f268:	sdiv	r0, r0, r1
   2f26c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f270:	cmp	r0, r1
   2f274:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f278:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f27c:	ldr	r0, [fp, #8]
   2f280:	cmp	r0, #0
   2f284:	bne	2f28c <__assert_fail@plt+0x1dd88>
   2f288:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f290:	cmp	r0, #0
   2f294:	bge	2f2f4 <__assert_fail@plt+0x1ddf0>
   2f298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f29c:	cmn	r0, #1
   2f2a0:	bne	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f2a4:	b	2f2a8 <__assert_fail@plt+0x1dda4>
   2f2a8:	ldr	r0, [fp, #8]
   2f2ac:	add	r0, r0, #-2147483648	; 0x80000000
   2f2b0:	movw	r1, #0
   2f2b4:	cmp	r1, r0
   2f2b8:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f2bc:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f2c0:	ldr	r0, [pc, #1684]	; 2f95c <__assert_fail@plt+0x1e458>
   2f2c4:	ldr	r1, [fp, #8]
   2f2c8:	sub	r1, r1, #1
   2f2cc:	cmp	r0, r1
   2f2d0:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f2d4:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f2d8:	ldr	r0, [pc, #3952]	; 30250 <__assert_fail@plt+0x1ed4c>
   2f2dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f2e0:	sdiv	r0, r0, r1
   2f2e4:	ldr	r1, [fp, #8]
   2f2e8:	cmp	r0, r1
   2f2ec:	blt	2f30c <__assert_fail@plt+0x1de08>
   2f2f0:	b	2f320 <__assert_fail@plt+0x1de1c>
   2f2f4:	ldr	r0, [pc, #1632]	; 2f95c <__assert_fail@plt+0x1e458>
   2f2f8:	ldr	r1, [fp, #8]
   2f2fc:	sdiv	r0, r0, r1
   2f300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f304:	cmp	r0, r1
   2f308:	bge	2f320 <__assert_fail@plt+0x1de1c>
   2f30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f310:	ldr	r1, [fp, #8]
   2f314:	mul	r0, r0, r1
   2f318:	str	r0, [fp, #-28]	; 0xffffffe4
   2f31c:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2f320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f324:	ldr	r1, [fp, #8]
   2f328:	mul	r0, r0, r1
   2f32c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f330:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2f334:	ldr	r0, [fp, #8]
   2f338:	cmp	r0, #0
   2f33c:	bge	2f44c <__assert_fail@plt+0x1df48>
   2f340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f344:	cmp	r0, #0
   2f348:	bge	2f3d4 <__assert_fail@plt+0x1ded0>
   2f34c:	b	2f36c <__assert_fail@plt+0x1de68>
   2f350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f354:	ldr	r1, [fp, #8]
   2f358:	mvn	r2, #0
   2f35c:	udiv	r1, r2, r1
   2f360:	cmp	r0, r1
   2f364:	bcc	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f368:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f36c:	b	2f370 <__assert_fail@plt+0x1de6c>
   2f370:	ldr	r0, [pc, #1656]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2f374:	ldr	r1, [fp, #8]
   2f378:	cmp	r1, r0
   2f37c:	blt	2f394 <__assert_fail@plt+0x1de90>
   2f380:	b	2f3a0 <__assert_fail@plt+0x1de9c>
   2f384:	ldr	r0, [fp, #8]
   2f388:	movw	r1, #0
   2f38c:	cmp	r1, r0
   2f390:	bge	2f3a0 <__assert_fail@plt+0x1de9c>
   2f394:	movw	r0, #1
   2f398:	str	r0, [fp, #-60]	; 0xffffffc4
   2f39c:	b	2f3b8 <__assert_fail@plt+0x1deb4>
   2f3a0:	ldr	r0, [fp, #8]
   2f3a4:	movw	r1, #0
   2f3a8:	sub	r0, r1, r0
   2f3ac:	mvn	r1, #0
   2f3b0:	udiv	r0, r1, r0
   2f3b4:	str	r0, [fp, #-60]	; 0xffffffc4
   2f3b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f3bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f3c0:	mvn	r2, #0
   2f3c4:	sub	r1, r2, r1
   2f3c8:	cmp	r0, r1
   2f3cc:	bls	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f3d0:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f3d4:	b	2f3d8 <__assert_fail@plt+0x1ded4>
   2f3d8:	b	2f430 <__assert_fail@plt+0x1df2c>
   2f3dc:	b	2f430 <__assert_fail@plt+0x1df2c>
   2f3e0:	ldr	r0, [fp, #8]
   2f3e4:	cmn	r0, #1
   2f3e8:	bne	2f430 <__assert_fail@plt+0x1df2c>
   2f3ec:	b	2f3f0 <__assert_fail@plt+0x1deec>
   2f3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3f4:	add	r0, r0, #0
   2f3f8:	movw	r1, #0
   2f3fc:	cmp	r1, r0
   2f400:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f404:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f40c:	movw	r1, #0
   2f410:	cmp	r1, r0
   2f414:	bge	2f4fc <__assert_fail@plt+0x1dff8>
   2f418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f41c:	sub	r0, r0, #1
   2f420:	mvn	r1, #0
   2f424:	cmp	r1, r0
   2f428:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f42c:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f430:	ldr	r0, [fp, #8]
   2f434:	movw	r1, #0
   2f438:	sdiv	r0, r1, r0
   2f43c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f440:	cmp	r0, r1
   2f444:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f448:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f44c:	ldr	r0, [fp, #8]
   2f450:	cmp	r0, #0
   2f454:	bne	2f45c <__assert_fail@plt+0x1df58>
   2f458:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f45c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f460:	cmp	r0, #0
   2f464:	bge	2f4d0 <__assert_fail@plt+0x1dfcc>
   2f468:	b	2f46c <__assert_fail@plt+0x1df68>
   2f46c:	b	2f4b4 <__assert_fail@plt+0x1dfb0>
   2f470:	b	2f4b4 <__assert_fail@plt+0x1dfb0>
   2f474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f478:	cmn	r0, #1
   2f47c:	bne	2f4b4 <__assert_fail@plt+0x1dfb0>
   2f480:	b	2f484 <__assert_fail@plt+0x1df80>
   2f484:	ldr	r0, [fp, #8]
   2f488:	add	r0, r0, #0
   2f48c:	movw	r1, #0
   2f490:	cmp	r1, r0
   2f494:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f498:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f49c:	ldr	r0, [fp, #8]
   2f4a0:	sub	r0, r0, #1
   2f4a4:	mvn	r1, #0
   2f4a8:	cmp	r1, r0
   2f4ac:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f4b0:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4b8:	movw	r1, #0
   2f4bc:	sdiv	r0, r1, r0
   2f4c0:	ldr	r1, [fp, #8]
   2f4c4:	cmp	r0, r1
   2f4c8:	blt	2f4e8 <__assert_fail@plt+0x1dfe4>
   2f4cc:	b	2f4fc <__assert_fail@plt+0x1dff8>
   2f4d0:	ldr	r0, [fp, #8]
   2f4d4:	mvn	r1, #0
   2f4d8:	udiv	r0, r1, r0
   2f4dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f4e0:	cmp	r0, r1
   2f4e4:	bcs	2f4fc <__assert_fail@plt+0x1dff8>
   2f4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4ec:	ldr	r1, [fp, #8]
   2f4f0:	mul	r0, r0, r1
   2f4f4:	str	r0, [fp, #-28]	; 0xffffffe4
   2f4f8:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2f4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f500:	ldr	r1, [fp, #8]
   2f504:	mul	r0, r0, r1
   2f508:	str	r0, [fp, #-28]	; 0xffffffe4
   2f50c:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2f510:	b	2f514 <__assert_fail@plt+0x1e010>
   2f514:	b	2f518 <__assert_fail@plt+0x1e014>
   2f518:	ldr	r0, [fp, #8]
   2f51c:	cmp	r0, #0
   2f520:	bge	2f624 <__assert_fail@plt+0x1e120>
   2f524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f528:	cmp	r0, #0
   2f52c:	bge	2f5b8 <__assert_fail@plt+0x1e0b4>
   2f530:	b	2f534 <__assert_fail@plt+0x1e030>
   2f534:	ldr	r0, [pc, #1056]	; 2f95c <__assert_fail@plt+0x1e458>
   2f538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f53c:	ldr	r2, [fp, #8]
   2f540:	sdiv	r0, r0, r2
   2f544:	cmp	r1, r0
   2f548:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f54c:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f550:	b	2f554 <__assert_fail@plt+0x1e050>
   2f554:	ldr	r0, [pc, #1172]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2f558:	ldr	r1, [fp, #8]
   2f55c:	cmp	r1, r0
   2f560:	blt	2f578 <__assert_fail@plt+0x1e074>
   2f564:	b	2f584 <__assert_fail@plt+0x1e080>
   2f568:	ldr	r0, [fp, #8]
   2f56c:	movw	r1, #0
   2f570:	cmp	r1, r0
   2f574:	bge	2f584 <__assert_fail@plt+0x1e080>
   2f578:	movw	r0, #0
   2f57c:	str	r0, [fp, #-64]	; 0xffffffc0
   2f580:	b	2f59c <__assert_fail@plt+0x1e098>
   2f584:	ldr	r0, [pc, #976]	; 2f95c <__assert_fail@plt+0x1e458>
   2f588:	ldr	r1, [fp, #8]
   2f58c:	movw	r2, #0
   2f590:	sub	r1, r2, r1
   2f594:	sdiv	r0, r0, r1
   2f598:	str	r0, [fp, #-64]	; 0xffffffc0
   2f59c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5a4:	mvn	r2, #0
   2f5a8:	sub	r1, r2, r1
   2f5ac:	cmp	r0, r1
   2f5b0:	ble	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f5b4:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f5b8:	ldr	r0, [fp, #8]
   2f5bc:	cmn	r0, #1
   2f5c0:	bne	2f608 <__assert_fail@plt+0x1e104>
   2f5c4:	b	2f5c8 <__assert_fail@plt+0x1e0c4>
   2f5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5cc:	add	r0, r0, #-2147483648	; 0x80000000
   2f5d0:	movw	r1, #0
   2f5d4:	cmp	r1, r0
   2f5d8:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f5dc:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5e4:	movw	r1, #0
   2f5e8:	cmp	r1, r0
   2f5ec:	bge	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f5f0:	ldr	r0, [pc, #868]	; 2f95c <__assert_fail@plt+0x1e458>
   2f5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5f8:	sub	r1, r1, #1
   2f5fc:	cmp	r0, r1
   2f600:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f604:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f608:	ldr	r0, [pc, #3136]	; 30250 <__assert_fail@plt+0x1ed4c>
   2f60c:	ldr	r1, [fp, #8]
   2f610:	sdiv	r0, r0, r1
   2f614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f618:	cmp	r0, r1
   2f61c:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f620:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f624:	ldr	r0, [fp, #8]
   2f628:	cmp	r0, #0
   2f62c:	bne	2f634 <__assert_fail@plt+0x1e130>
   2f630:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f638:	cmp	r0, #0
   2f63c:	bge	2f69c <__assert_fail@plt+0x1e198>
   2f640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f644:	cmn	r0, #1
   2f648:	bne	2f680 <__assert_fail@plt+0x1e17c>
   2f64c:	b	2f650 <__assert_fail@plt+0x1e14c>
   2f650:	ldr	r0, [fp, #8]
   2f654:	add	r0, r0, #-2147483648	; 0x80000000
   2f658:	movw	r1, #0
   2f65c:	cmp	r1, r0
   2f660:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f664:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f668:	ldr	r0, [pc, #748]	; 2f95c <__assert_fail@plt+0x1e458>
   2f66c:	ldr	r1, [fp, #8]
   2f670:	sub	r1, r1, #1
   2f674:	cmp	r0, r1
   2f678:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f67c:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f680:	ldr	r0, [pc, #3016]	; 30250 <__assert_fail@plt+0x1ed4c>
   2f684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f688:	sdiv	r0, r0, r1
   2f68c:	ldr	r1, [fp, #8]
   2f690:	cmp	r0, r1
   2f694:	blt	2f6b4 <__assert_fail@plt+0x1e1b0>
   2f698:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f69c:	ldr	r0, [pc, #696]	; 2f95c <__assert_fail@plt+0x1e458>
   2f6a0:	ldr	r1, [fp, #8]
   2f6a4:	sdiv	r0, r0, r1
   2f6a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f6ac:	cmp	r0, r1
   2f6b0:	bge	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6b8:	ldr	r1, [fp, #8]
   2f6bc:	mul	r0, r0, r1
   2f6c0:	str	r0, [fp, #-28]	; 0xffffffe4
   2f6c4:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2f6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6cc:	ldr	r1, [fp, #8]
   2f6d0:	mul	r0, r0, r1
   2f6d4:	str	r0, [fp, #-28]	; 0xffffffe4
   2f6d8:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2f6dc:	ldr	r0, [fp, #8]
   2f6e0:	cmp	r0, #0
   2f6e4:	bge	2f7f4 <__assert_fail@plt+0x1e2f0>
   2f6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6ec:	cmp	r0, #0
   2f6f0:	bge	2f77c <__assert_fail@plt+0x1e278>
   2f6f4:	b	2f714 <__assert_fail@plt+0x1e210>
   2f6f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6fc:	ldr	r1, [fp, #8]
   2f700:	mvn	r2, #0
   2f704:	udiv	r1, r2, r1
   2f708:	cmp	r0, r1
   2f70c:	bcc	2f890 <__assert_fail@plt+0x1e38c>
   2f710:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f714:	b	2f718 <__assert_fail@plt+0x1e214>
   2f718:	ldr	r0, [pc, #720]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2f71c:	ldr	r1, [fp, #8]
   2f720:	cmp	r1, r0
   2f724:	blt	2f73c <__assert_fail@plt+0x1e238>
   2f728:	b	2f748 <__assert_fail@plt+0x1e244>
   2f72c:	ldr	r0, [fp, #8]
   2f730:	movw	r1, #0
   2f734:	cmp	r1, r0
   2f738:	bge	2f748 <__assert_fail@plt+0x1e244>
   2f73c:	movw	r0, #1
   2f740:	str	r0, [fp, #-68]	; 0xffffffbc
   2f744:	b	2f760 <__assert_fail@plt+0x1e25c>
   2f748:	ldr	r0, [fp, #8]
   2f74c:	movw	r1, #0
   2f750:	sub	r0, r1, r0
   2f754:	mvn	r1, #0
   2f758:	udiv	r0, r1, r0
   2f75c:	str	r0, [fp, #-68]	; 0xffffffbc
   2f760:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2f764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f768:	mvn	r2, #0
   2f76c:	sub	r1, r2, r1
   2f770:	cmp	r0, r1
   2f774:	bls	2f890 <__assert_fail@plt+0x1e38c>
   2f778:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f77c:	b	2f780 <__assert_fail@plt+0x1e27c>
   2f780:	b	2f7d8 <__assert_fail@plt+0x1e2d4>
   2f784:	b	2f7d8 <__assert_fail@plt+0x1e2d4>
   2f788:	ldr	r0, [fp, #8]
   2f78c:	cmn	r0, #1
   2f790:	bne	2f7d8 <__assert_fail@plt+0x1e2d4>
   2f794:	b	2f798 <__assert_fail@plt+0x1e294>
   2f798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f79c:	add	r0, r0, #0
   2f7a0:	movw	r1, #0
   2f7a4:	cmp	r1, r0
   2f7a8:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f7ac:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7b4:	movw	r1, #0
   2f7b8:	cmp	r1, r0
   2f7bc:	bge	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7c4:	sub	r0, r0, #1
   2f7c8:	mvn	r1, #0
   2f7cc:	cmp	r1, r0
   2f7d0:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f7d4:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f7d8:	ldr	r0, [fp, #8]
   2f7dc:	movw	r1, #0
   2f7e0:	sdiv	r0, r1, r0
   2f7e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f7e8:	cmp	r0, r1
   2f7ec:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f7f0:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f7f4:	ldr	r0, [fp, #8]
   2f7f8:	cmp	r0, #0
   2f7fc:	bne	2f804 <__assert_fail@plt+0x1e300>
   2f800:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f808:	cmp	r0, #0
   2f80c:	bge	2f878 <__assert_fail@plt+0x1e374>
   2f810:	b	2f814 <__assert_fail@plt+0x1e310>
   2f814:	b	2f85c <__assert_fail@plt+0x1e358>
   2f818:	b	2f85c <__assert_fail@plt+0x1e358>
   2f81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f820:	cmn	r0, #1
   2f824:	bne	2f85c <__assert_fail@plt+0x1e358>
   2f828:	b	2f82c <__assert_fail@plt+0x1e328>
   2f82c:	ldr	r0, [fp, #8]
   2f830:	add	r0, r0, #0
   2f834:	movw	r1, #0
   2f838:	cmp	r1, r0
   2f83c:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f840:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f844:	ldr	r0, [fp, #8]
   2f848:	sub	r0, r0, #1
   2f84c:	mvn	r1, #0
   2f850:	cmp	r1, r0
   2f854:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f858:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f860:	movw	r1, #0
   2f864:	sdiv	r0, r1, r0
   2f868:	ldr	r1, [fp, #8]
   2f86c:	cmp	r0, r1
   2f870:	blt	2f890 <__assert_fail@plt+0x1e38c>
   2f874:	b	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f878:	ldr	r0, [fp, #8]
   2f87c:	mvn	r1, #0
   2f880:	udiv	r0, r1, r0
   2f884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f888:	cmp	r0, r1
   2f88c:	bcs	2f8a4 <__assert_fail@plt+0x1e3a0>
   2f890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f894:	ldr	r1, [fp, #8]
   2f898:	mul	r0, r0, r1
   2f89c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f8a0:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2f8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8a8:	ldr	r1, [fp, #8]
   2f8ac:	mul	r0, r0, r1
   2f8b0:	str	r0, [fp, #-28]	; 0xffffffe4
   2f8b4:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2f8b8:	b	2f8bc <__assert_fail@plt+0x1e3b8>
   2f8bc:	ldr	r0, [fp, #8]
   2f8c0:	cmp	r0, #0
   2f8c4:	bge	2fa54 <__assert_fail@plt+0x1e550>
   2f8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8cc:	cmp	r0, #0
   2f8d0:	bge	2f9bc <__assert_fail@plt+0x1e4b8>
   2f8d4:	b	2f8d8 <__assert_fail@plt+0x1e3d4>
   2f8d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8dc:	ldr	r1, [fp, #8]
   2f8e0:	asr	r3, r1, #31
   2f8e4:	mvn	r2, #0
   2f8e8:	mvn	ip, #-2147483648	; 0x80000000
   2f8ec:	str	r0, [fp, #-72]	; 0xffffffb8
   2f8f0:	mov	r0, r2
   2f8f4:	str	r1, [fp, #-76]	; 0xffffffb4
   2f8f8:	mov	r1, ip
   2f8fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2f900:	bl	37150 <__assert_fail@plt+0x25c4c>
   2f904:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f908:	subs	r0, r2, r0
   2f90c:	rscs	r1, r1, r2, asr #31
   2f910:	str	r0, [fp, #-80]	; 0xffffffb0
   2f914:	str	r1, [fp, #-84]	; 0xffffffac
   2f918:	blt	2fb34 <__assert_fail@plt+0x1e630>
   2f91c:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f920:	b	2f924 <__assert_fail@plt+0x1e420>
   2f924:	ldr	r0, [pc, #196]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2f928:	ldr	r1, [fp, #8]
   2f92c:	cmp	r1, r0
   2f930:	blt	2f948 <__assert_fail@plt+0x1e444>
   2f934:	b	2f960 <__assert_fail@plt+0x1e45c>
   2f938:	ldr	r0, [fp, #8]
   2f93c:	movw	r1, #0
   2f940:	cmp	r1, r0
   2f944:	bge	2f960 <__assert_fail@plt+0x1e45c>
   2f948:	mov	r0, #0
   2f94c:	mvn	r1, #0
   2f950:	str	r1, [fp, #-88]	; 0xffffffa8
   2f954:	str	r0, [fp, #-92]	; 0xffffffa4
   2f958:	b	2f994 <__assert_fail@plt+0x1e490>
   2f95c:	svcvc	0x00ffffff
   2f960:	ldr	r0, [fp, #8]
   2f964:	rsb	r0, r0, #0
   2f968:	asr	r3, r0, #31
   2f96c:	mvn	r1, #0
   2f970:	mvn	r2, #-2147483648	; 0x80000000
   2f974:	str	r0, [fp, #-96]	; 0xffffffa0
   2f978:	mov	r0, r1
   2f97c:	mov	r1, r2
   2f980:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2f984:	bl	37150 <__assert_fail@plt+0x25c4c>
   2f988:	str	r0, [fp, #-88]	; 0xffffffa8
   2f98c:	str	r1, [fp, #-92]	; 0xffffffa4
   2f990:	b	2f994 <__assert_fail@plt+0x1e490>
   2f994:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2f998:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2f99c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f9a0:	mvn	r2, r2
   2f9a4:	subs	r1, r2, r1
   2f9a8:	rscs	r0, r0, r2, asr #31
   2f9ac:	str	r1, [fp, #-100]	; 0xffffff9c
   2f9b0:	str	r0, [fp, #-104]	; 0xffffff98
   2f9b4:	bge	2fb34 <__assert_fail@plt+0x1e630>
   2f9b8:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f9bc:	ldr	r0, [fp, #8]
   2f9c0:	cmn	r0, #1
   2f9c4:	bne	2fa14 <__assert_fail@plt+0x1e510>
   2f9c8:	b	2f9cc <__assert_fail@plt+0x1e4c8>
   2f9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f9d0:	mov	r1, #-2147483648	; 0x80000000
   2f9d4:	add	r1, r1, r0, asr #31
   2f9d8:	rsbs	r0, r0, #0
   2f9dc:	rscs	r1, r1, #0
   2f9e0:	str	r0, [fp, #-108]	; 0xffffff94
   2f9e4:	str	r1, [fp, #-112]	; 0xffffff90
   2f9e8:	blt	2fb34 <__assert_fail@plt+0x1e630>
   2f9ec:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f9f0:	andhi	r0, r0, r1
   2f9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f9f8:	movw	r1, #0
   2f9fc:	cmp	r1, r0
   2fa00:	bge	2fb48 <__assert_fail@plt+0x1e644>
   2fa04:	mov	r0, #0
   2fa08:	cmp	r0, #0
   2fa0c:	bne	2fb34 <__assert_fail@plt+0x1e630>
   2fa10:	b	2fb48 <__assert_fail@plt+0x1e644>
   2fa14:	ldr	r0, [fp, #8]
   2fa18:	asr	r3, r0, #31
   2fa1c:	mov	r1, #0
   2fa20:	mov	r2, #-2147483648	; 0x80000000
   2fa24:	str	r0, [fp, #-116]	; 0xffffff8c
   2fa28:	mov	r0, r1
   2fa2c:	mov	r1, r2
   2fa30:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2fa34:	bl	37150 <__assert_fail@plt+0x25c4c>
   2fa38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fa3c:	subs	r0, r0, r2
   2fa40:	sbcs	r1, r1, r2, asr #31
   2fa44:	str	r0, [fp, #-120]	; 0xffffff88
   2fa48:	str	r1, [fp, #-124]	; 0xffffff84
   2fa4c:	blt	2fb34 <__assert_fail@plt+0x1e630>
   2fa50:	b	2fb48 <__assert_fail@plt+0x1e644>
   2fa54:	ldr	r0, [fp, #8]
   2fa58:	cmp	r0, #0
   2fa5c:	bne	2fa64 <__assert_fail@plt+0x1e560>
   2fa60:	b	2fb48 <__assert_fail@plt+0x1e644>
   2fa64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa68:	cmp	r0, #0
   2fa6c:	bge	2faf4 <__assert_fail@plt+0x1e5f0>
   2fa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa74:	cmn	r0, #1
   2fa78:	bne	2fab4 <__assert_fail@plt+0x1e5b0>
   2fa7c:	b	2fa80 <__assert_fail@plt+0x1e57c>
   2fa80:	ldr	r0, [fp, #8]
   2fa84:	mov	r1, #-2147483648	; 0x80000000
   2fa88:	add	r1, r1, r0, asr #31
   2fa8c:	rsbs	r0, r0, #0
   2fa90:	rscs	r1, r1, #0
   2fa94:	str	r0, [fp, #-128]	; 0xffffff80
   2fa98:	str	r1, [fp, #-132]	; 0xffffff7c
   2fa9c:	blt	2fb34 <__assert_fail@plt+0x1e630>
   2faa0:	b	2fb48 <__assert_fail@plt+0x1e644>
   2faa4:	mov	r0, #0
   2faa8:	cmp	r0, #0
   2faac:	bne	2fb34 <__assert_fail@plt+0x1e630>
   2fab0:	b	2fb48 <__assert_fail@plt+0x1e644>
   2fab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fab8:	asr	r3, r0, #31
   2fabc:	mov	r1, #0
   2fac0:	mov	r2, #-2147483648	; 0x80000000
   2fac4:	str	r0, [fp, #-136]	; 0xffffff78
   2fac8:	mov	r0, r1
   2facc:	mov	r1, r2
   2fad0:	ldr	r2, [fp, #-136]	; 0xffffff78
   2fad4:	bl	37150 <__assert_fail@plt+0x25c4c>
   2fad8:	ldr	r2, [fp, #8]
   2fadc:	subs	r0, r0, r2
   2fae0:	sbcs	r1, r1, r2, asr #31
   2fae4:	str	r0, [fp, #-140]	; 0xffffff74
   2fae8:	str	r1, [fp, #-144]	; 0xffffff70
   2faec:	blt	2fb34 <__assert_fail@plt+0x1e630>
   2faf0:	b	2fb48 <__assert_fail@plt+0x1e644>
   2faf4:	ldr	r0, [fp, #8]
   2faf8:	asr	r3, r0, #31
   2fafc:	mvn	r1, #0
   2fb00:	mvn	r2, #-2147483648	; 0x80000000
   2fb04:	str	r0, [fp, #-148]	; 0xffffff6c
   2fb08:	mov	r0, r1
   2fb0c:	mov	r1, r2
   2fb10:	ldr	r2, [fp, #-148]	; 0xffffff6c
   2fb14:	bl	37150 <__assert_fail@plt+0x25c4c>
   2fb18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fb1c:	subs	r0, r0, r2
   2fb20:	sbcs	r1, r1, r2, asr #31
   2fb24:	str	r0, [fp, #-152]	; 0xffffff68
   2fb28:	str	r1, [fp, #-156]	; 0xffffff64
   2fb2c:	bge	2fb48 <__assert_fail@plt+0x1e644>
   2fb30:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb38:	ldr	r1, [fp, #8]
   2fb3c:	mul	r0, r0, r1
   2fb40:	str	r0, [fp, #-28]	; 0xffffffe4
   2fb44:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2fb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb4c:	ldr	r1, [fp, #8]
   2fb50:	mul	r0, r0, r1
   2fb54:	str	r0, [fp, #-28]	; 0xffffffe4
   2fb58:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2fb5c:	ldr	r0, [fp, #8]
   2fb60:	cmp	r0, #0
   2fb64:	bge	2fcc4 <__assert_fail@plt+0x1e7c0>
   2fb68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb6c:	cmp	r0, #0
   2fb70:	bge	2fc4c <__assert_fail@plt+0x1e748>
   2fb74:	b	2fbbc <__assert_fail@plt+0x1e6b8>
   2fb78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb7c:	ldr	r1, [fp, #8]
   2fb80:	asr	r3, r1, #31
   2fb84:	mvn	r2, #0
   2fb88:	str	r0, [fp, #-160]	; 0xffffff60
   2fb8c:	mov	r0, r2
   2fb90:	str	r1, [fp, #-164]	; 0xffffff5c
   2fb94:	mov	r1, r2
   2fb98:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2fb9c:	bl	37224 <__assert_fail@plt+0x25d20>
   2fba0:	ldr	r2, [fp, #-160]	; 0xffffff60
   2fba4:	subs	r0, r2, r0
   2fba8:	rscs	r1, r1, r2, asr #31
   2fbac:	str	r0, [fp, #-168]	; 0xffffff58
   2fbb0:	str	r1, [fp, #-172]	; 0xffffff54
   2fbb4:	bcc	2fd80 <__assert_fail@plt+0x1e87c>
   2fbb8:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fbbc:	b	2fbc0 <__assert_fail@plt+0x1e6bc>
   2fbc0:	ldr	r0, [pc, #-472]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2fbc4:	ldr	r1, [fp, #8]
   2fbc8:	cmp	r1, r0
   2fbcc:	blt	2fbe4 <__assert_fail@plt+0x1e6e0>
   2fbd0:	b	2fbf8 <__assert_fail@plt+0x1e6f4>
   2fbd4:	ldr	r0, [fp, #8]
   2fbd8:	movw	r1, #0
   2fbdc:	cmp	r1, r0
   2fbe0:	bge	2fbf8 <__assert_fail@plt+0x1e6f4>
   2fbe4:	mov	r0, #1
   2fbe8:	mvn	r1, #0
   2fbec:	str	r1, [fp, #-176]	; 0xffffff50
   2fbf0:	str	r0, [fp, #-180]	; 0xffffff4c
   2fbf4:	b	2fc24 <__assert_fail@plt+0x1e720>
   2fbf8:	ldr	r0, [fp, #8]
   2fbfc:	rsb	r0, r0, #0
   2fc00:	asr	r3, r0, #31
   2fc04:	mvn	r1, #0
   2fc08:	str	r0, [fp, #-184]	; 0xffffff48
   2fc0c:	mov	r0, r1
   2fc10:	ldr	r2, [fp, #-184]	; 0xffffff48
   2fc14:	bl	37224 <__assert_fail@plt+0x25d20>
   2fc18:	str	r0, [fp, #-176]	; 0xffffff50
   2fc1c:	str	r1, [fp, #-180]	; 0xffffff4c
   2fc20:	b	2fc24 <__assert_fail@plt+0x1e720>
   2fc24:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2fc28:	ldr	r1, [fp, #-176]	; 0xffffff50
   2fc2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fc30:	mvn	r2, r2
   2fc34:	subs	r1, r2, r1
   2fc38:	rscs	r0, r0, r2, asr #31
   2fc3c:	str	r1, [sp, #188]	; 0xbc
   2fc40:	str	r0, [sp, #184]	; 0xb8
   2fc44:	bcs	2fd80 <__assert_fail@plt+0x1e87c>
   2fc48:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fc4c:	b	2fc50 <__assert_fail@plt+0x1e74c>
   2fc50:	b	2fca8 <__assert_fail@plt+0x1e7a4>
   2fc54:	b	2fca8 <__assert_fail@plt+0x1e7a4>
   2fc58:	ldr	r0, [fp, #8]
   2fc5c:	cmn	r0, #1
   2fc60:	bne	2fca8 <__assert_fail@plt+0x1e7a4>
   2fc64:	b	2fc68 <__assert_fail@plt+0x1e764>
   2fc68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc6c:	add	r0, r0, #0
   2fc70:	movw	r1, #0
   2fc74:	cmp	r1, r0
   2fc78:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fc7c:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fc80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc84:	movw	r1, #0
   2fc88:	cmp	r1, r0
   2fc8c:	bge	2fd94 <__assert_fail@plt+0x1e890>
   2fc90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc94:	sub	r0, r0, #1
   2fc98:	mvn	r1, #0
   2fc9c:	cmp	r1, r0
   2fca0:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fca4:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fca8:	ldr	r0, [fp, #8]
   2fcac:	movw	r1, #0
   2fcb0:	sdiv	r0, r1, r0
   2fcb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fcb8:	cmp	r0, r1
   2fcbc:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fcc0:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fcc4:	ldr	r0, [fp, #8]
   2fcc8:	cmp	r0, #0
   2fccc:	bne	2fcd4 <__assert_fail@plt+0x1e7d0>
   2fcd0:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fcd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcd8:	cmp	r0, #0
   2fcdc:	bge	2fd48 <__assert_fail@plt+0x1e844>
   2fce0:	b	2fce4 <__assert_fail@plt+0x1e7e0>
   2fce4:	b	2fd2c <__assert_fail@plt+0x1e828>
   2fce8:	b	2fd2c <__assert_fail@plt+0x1e828>
   2fcec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcf0:	cmn	r0, #1
   2fcf4:	bne	2fd2c <__assert_fail@plt+0x1e828>
   2fcf8:	b	2fcfc <__assert_fail@plt+0x1e7f8>
   2fcfc:	ldr	r0, [fp, #8]
   2fd00:	add	r0, r0, #0
   2fd04:	movw	r1, #0
   2fd08:	cmp	r1, r0
   2fd0c:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fd10:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fd14:	ldr	r0, [fp, #8]
   2fd18:	sub	r0, r0, #1
   2fd1c:	mvn	r1, #0
   2fd20:	cmp	r1, r0
   2fd24:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fd28:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fd2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd30:	movw	r1, #0
   2fd34:	sdiv	r0, r1, r0
   2fd38:	ldr	r1, [fp, #8]
   2fd3c:	cmp	r0, r1
   2fd40:	blt	2fd80 <__assert_fail@plt+0x1e87c>
   2fd44:	b	2fd94 <__assert_fail@plt+0x1e890>
   2fd48:	ldr	r0, [fp, #8]
   2fd4c:	asr	r3, r0, #31
   2fd50:	mvn	r1, #0
   2fd54:	str	r0, [sp, #180]	; 0xb4
   2fd58:	mov	r0, r1
   2fd5c:	ldr	r2, [sp, #180]	; 0xb4
   2fd60:	bl	37224 <__assert_fail@plt+0x25d20>
   2fd64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fd68:	subs	r0, r0, r2
   2fd6c:	sbcs	r1, r1, r2, asr #31
   2fd70:	str	r0, [sp, #176]	; 0xb0
   2fd74:	str	r1, [sp, #172]	; 0xac
   2fd78:	bcs	2fd94 <__assert_fail@plt+0x1e890>
   2fd7c:	b	2fd80 <__assert_fail@plt+0x1e87c>
   2fd80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd84:	ldr	r1, [fp, #8]
   2fd88:	mul	r0, r0, r1
   2fd8c:	str	r0, [fp, #-28]	; 0xffffffe4
   2fd90:	b	2fda8 <__assert_fail@plt+0x1e8a4>
   2fd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd98:	ldr	r1, [fp, #8]
   2fd9c:	mul	r0, r0, r1
   2fda0:	str	r0, [fp, #-28]	; 0xffffffe4
   2fda4:	b	2fdb8 <__assert_fail@plt+0x1e8b4>
   2fda8:	ldr	r0, [pc, #-1108]	; 2f95c <__assert_fail@plt+0x1e458>
   2fdac:	str	r0, [sp, #168]	; 0xa8
   2fdb0:	b	2fdd8 <__assert_fail@plt+0x1e8d4>
   2fdb4:			; <UNDEFINED> instruction: 0xffff8000
   2fdb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fdbc:	cmp	r0, #64	; 0x40
   2fdc0:	movw	r0, #0
   2fdc4:	movlt	r0, #1
   2fdc8:	tst	r0, #1
   2fdcc:	movw	r0, #64	; 0x40
   2fdd0:	moveq	r0, #0
   2fdd4:	str	r0, [sp, #168]	; 0xa8
   2fdd8:	ldr	r0, [sp, #168]	; 0xa8
   2fddc:	str	r0, [fp, #-32]	; 0xffffffe0
   2fde0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fde4:	cmp	r0, #0
   2fde8:	beq	2fe18 <__assert_fail@plt+0x1e914>
   2fdec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fdf0:	ldr	r1, [fp, #8]
   2fdf4:	sdiv	r0, r0, r1
   2fdf8:	str	r0, [fp, #-24]	; 0xffffffe8
   2fdfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fe00:	mov	r1, r0
   2fe04:	ldr	r2, [fp, #8]
   2fe08:	sdiv	r3, r0, r2
   2fe0c:	mls	r0, r3, r2, r0
   2fe10:	sub	r0, r1, r0
   2fe14:	str	r0, [fp, #-28]	; 0xffffffe4
   2fe18:	ldr	r0, [fp, #-4]
   2fe1c:	movw	r1, #0
   2fe20:	cmp	r0, r1
   2fe24:	bne	2fe34 <__assert_fail@plt+0x1e930>
   2fe28:	ldr	r0, [fp, #-8]
   2fe2c:	movw	r1, #0
   2fe30:	str	r1, [r0]
   2fe34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe38:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fe3c:	sub	r0, r0, r1
   2fe40:	ldr	r1, [fp, #-12]
   2fe44:	cmp	r0, r1
   2fe48:	bge	31280 <__assert_fail@plt+0x1fd7c>
   2fe4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fe50:	ldr	r1, [fp, #-12]
   2fe54:	add	r1, r0, r1
   2fe58:	mov	r2, #1
   2fe5c:	cmp	r1, r0
   2fe60:	movwvc	r2, #0
   2fe64:	str	r1, [fp, #-24]	; 0xffffffe8
   2fe68:	tst	r2, #1
   2fe6c:	bne	3127c <__assert_fail@plt+0x1fd78>
   2fe70:	ldr	r0, [fp, #-16]
   2fe74:	movw	r1, #0
   2fe78:	cmp	r1, r0
   2fe7c:	bgt	2fe90 <__assert_fail@plt+0x1e98c>
   2fe80:	ldr	r0, [fp, #-16]
   2fe84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe88:	cmp	r0, r1
   2fe8c:	blt	3127c <__assert_fail@plt+0x1fd78>
   2fe90:	b	3026c <__assert_fail@plt+0x1ed68>
   2fe94:	b	2fe98 <__assert_fail@plt+0x1e994>
   2fe98:	ldr	r0, [fp, #8]
   2fe9c:	cmp	r0, #0
   2fea0:	bge	2ffb4 <__assert_fail@plt+0x1eab0>
   2fea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fea8:	cmp	r0, #0
   2feac:	bge	2ff38 <__assert_fail@plt+0x1ea34>
   2feb0:	b	2feb4 <__assert_fail@plt+0x1e9b0>
   2feb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2feb8:	ldr	r1, [fp, #8]
   2febc:	movw	r2, #127	; 0x7f
   2fec0:	sdiv	r1, r2, r1
   2fec4:	cmp	r0, r1
   2fec8:	blt	30054 <__assert_fail@plt+0x1eb50>
   2fecc:	b	3006c <__assert_fail@plt+0x1eb68>
   2fed0:	b	2fed4 <__assert_fail@plt+0x1e9d0>
   2fed4:	ldr	r0, [pc, #-1260]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   2fed8:	ldr	r1, [fp, #8]
   2fedc:	cmp	r1, r0
   2fee0:	blt	2fef8 <__assert_fail@plt+0x1e9f4>
   2fee4:	b	2ff04 <__assert_fail@plt+0x1ea00>
   2fee8:	ldr	r0, [fp, #8]
   2feec:	movw	r1, #0
   2fef0:	cmp	r1, r0
   2fef4:	bge	2ff04 <__assert_fail@plt+0x1ea00>
   2fef8:	movw	r0, #0
   2fefc:	str	r0, [sp, #164]	; 0xa4
   2ff00:	b	2ff1c <__assert_fail@plt+0x1ea18>
   2ff04:	ldr	r0, [fp, #8]
   2ff08:	movw	r1, #0
   2ff0c:	sub	r0, r1, r0
   2ff10:	movw	r1, #127	; 0x7f
   2ff14:	sdiv	r0, r1, r0
   2ff18:	str	r0, [sp, #164]	; 0xa4
   2ff1c:	ldr	r0, [sp, #164]	; 0xa4
   2ff20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ff24:	mvn	r2, #0
   2ff28:	sub	r1, r2, r1
   2ff2c:	cmp	r0, r1
   2ff30:	ble	30054 <__assert_fail@plt+0x1eb50>
   2ff34:	b	3006c <__assert_fail@plt+0x1eb68>
   2ff38:	b	2ff3c <__assert_fail@plt+0x1ea38>
   2ff3c:	b	2ff98 <__assert_fail@plt+0x1ea94>
   2ff40:	b	2ff98 <__assert_fail@plt+0x1ea94>
   2ff44:	ldr	r0, [fp, #8]
   2ff48:	cmn	r0, #1
   2ff4c:	bne	2ff98 <__assert_fail@plt+0x1ea94>
   2ff50:	b	2ff54 <__assert_fail@plt+0x1ea50>
   2ff54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff58:	mvn	r1, #127	; 0x7f
   2ff5c:	add	r0, r0, r1
   2ff60:	movw	r1, #0
   2ff64:	cmp	r1, r0
   2ff68:	blt	30054 <__assert_fail@plt+0x1eb50>
   2ff6c:	b	3006c <__assert_fail@plt+0x1eb68>
   2ff70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff74:	movw	r1, #0
   2ff78:	cmp	r1, r0
   2ff7c:	bge	3006c <__assert_fail@plt+0x1eb68>
   2ff80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff84:	sub	r0, r0, #1
   2ff88:	movw	r1, #127	; 0x7f
   2ff8c:	cmp	r1, r0
   2ff90:	blt	30054 <__assert_fail@plt+0x1eb50>
   2ff94:	b	3006c <__assert_fail@plt+0x1eb68>
   2ff98:	ldr	r0, [fp, #8]
   2ff9c:	mvn	r1, #127	; 0x7f
   2ffa0:	sdiv	r0, r1, r0
   2ffa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffa8:	cmp	r0, r1
   2ffac:	blt	30054 <__assert_fail@plt+0x1eb50>
   2ffb0:	b	3006c <__assert_fail@plt+0x1eb68>
   2ffb4:	ldr	r0, [fp, #8]
   2ffb8:	cmp	r0, #0
   2ffbc:	bne	2ffc4 <__assert_fail@plt+0x1eac0>
   2ffc0:	b	3006c <__assert_fail@plt+0x1eb68>
   2ffc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ffc8:	cmp	r0, #0
   2ffcc:	bge	3003c <__assert_fail@plt+0x1eb38>
   2ffd0:	b	2ffd4 <__assert_fail@plt+0x1ead0>
   2ffd4:	b	30020 <__assert_fail@plt+0x1eb1c>
   2ffd8:	b	30020 <__assert_fail@plt+0x1eb1c>
   2ffdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ffe0:	cmn	r0, #1
   2ffe4:	bne	30020 <__assert_fail@plt+0x1eb1c>
   2ffe8:	b	2ffec <__assert_fail@plt+0x1eae8>
   2ffec:	ldr	r0, [fp, #8]
   2fff0:	mvn	r1, #127	; 0x7f
   2fff4:	add	r0, r0, r1
   2fff8:	movw	r1, #0
   2fffc:	cmp	r1, r0
   30000:	blt	30054 <__assert_fail@plt+0x1eb50>
   30004:	b	3006c <__assert_fail@plt+0x1eb68>
   30008:	ldr	r0, [fp, #8]
   3000c:	sub	r0, r0, #1
   30010:	movw	r1, #127	; 0x7f
   30014:	cmp	r1, r0
   30018:	blt	30054 <__assert_fail@plt+0x1eb50>
   3001c:	b	3006c <__assert_fail@plt+0x1eb68>
   30020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30024:	mvn	r1, #127	; 0x7f
   30028:	sdiv	r0, r1, r0
   3002c:	ldr	r1, [fp, #8]
   30030:	cmp	r0, r1
   30034:	blt	30054 <__assert_fail@plt+0x1eb50>
   30038:	b	3006c <__assert_fail@plt+0x1eb68>
   3003c:	ldr	r0, [fp, #8]
   30040:	movw	r1, #127	; 0x7f
   30044:	sdiv	r0, r1, r0
   30048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3004c:	cmp	r0, r1
   30050:	bge	3006c <__assert_fail@plt+0x1eb68>
   30054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30058:	ldr	r1, [fp, #8]
   3005c:	mul	r0, r0, r1
   30060:	sxtb	r0, r0
   30064:	str	r0, [fp, #-28]	; 0xffffffe4
   30068:	b	3127c <__assert_fail@plt+0x1fd78>
   3006c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30070:	ldr	r1, [fp, #8]
   30074:	mul	r0, r0, r1
   30078:	sxtb	r0, r0
   3007c:	str	r0, [fp, #-28]	; 0xffffffe4
   30080:	b	31280 <__assert_fail@plt+0x1fd7c>
   30084:	ldr	r0, [fp, #8]
   30088:	cmp	r0, #0
   3008c:	bge	3019c <__assert_fail@plt+0x1ec98>
   30090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30094:	cmp	r0, #0
   30098:	bge	30124 <__assert_fail@plt+0x1ec20>
   3009c:	b	300a0 <__assert_fail@plt+0x1eb9c>
   300a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   300a4:	ldr	r1, [fp, #8]
   300a8:	movw	r2, #255	; 0xff
   300ac:	sdiv	r1, r2, r1
   300b0:	cmp	r0, r1
   300b4:	blt	30238 <__assert_fail@plt+0x1ed34>
   300b8:	b	30254 <__assert_fail@plt+0x1ed50>
   300bc:	b	300c0 <__assert_fail@plt+0x1ebbc>
   300c0:	ldr	r0, [pc, #-1752]	; 2f9f0 <__assert_fail@plt+0x1e4ec>
   300c4:	ldr	r1, [fp, #8]
   300c8:	cmp	r1, r0
   300cc:	blt	300e4 <__assert_fail@plt+0x1ebe0>
   300d0:	b	300f0 <__assert_fail@plt+0x1ebec>
   300d4:	ldr	r0, [fp, #8]
   300d8:	movw	r1, #0
   300dc:	cmp	r1, r0
   300e0:	bge	300f0 <__assert_fail@plt+0x1ebec>
   300e4:	movw	r0, #0
   300e8:	str	r0, [sp, #160]	; 0xa0
   300ec:	b	30108 <__assert_fail@plt+0x1ec04>
   300f0:	ldr	r0, [fp, #8]
   300f4:	movw	r1, #0
   300f8:	sub	r0, r1, r0
   300fc:	movw	r1, #255	; 0xff
   30100:	sdiv	r0, r1, r0
   30104:	str	r0, [sp, #160]	; 0xa0
   30108:	ldr	r0, [sp, #160]	; 0xa0
   3010c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30110:	mvn	r2, #0
   30114:	sub	r1, r2, r1
   30118:	cmp	r0, r1
   3011c:	ble	30238 <__assert_fail@plt+0x1ed34>
   30120:	b	30254 <__assert_fail@plt+0x1ed50>
   30124:	b	30128 <__assert_fail@plt+0x1ec24>
   30128:	b	30180 <__assert_fail@plt+0x1ec7c>
   3012c:	b	30180 <__assert_fail@plt+0x1ec7c>
   30130:	ldr	r0, [fp, #8]
   30134:	cmn	r0, #1
   30138:	bne	30180 <__assert_fail@plt+0x1ec7c>
   3013c:	b	30140 <__assert_fail@plt+0x1ec3c>
   30140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30144:	add	r0, r0, #0
   30148:	movw	r1, #0
   3014c:	cmp	r1, r0
   30150:	blt	30238 <__assert_fail@plt+0x1ed34>
   30154:	b	30254 <__assert_fail@plt+0x1ed50>
   30158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3015c:	movw	r1, #0
   30160:	cmp	r1, r0
   30164:	bge	30254 <__assert_fail@plt+0x1ed50>
   30168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3016c:	sub	r0, r0, #1
   30170:	mvn	r1, #0
   30174:	cmp	r1, r0
   30178:	blt	30238 <__assert_fail@plt+0x1ed34>
   3017c:	b	30254 <__assert_fail@plt+0x1ed50>
   30180:	ldr	r0, [fp, #8]
   30184:	movw	r1, #0
   30188:	sdiv	r0, r1, r0
   3018c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30190:	cmp	r0, r1
   30194:	blt	30238 <__assert_fail@plt+0x1ed34>
   30198:	b	30254 <__assert_fail@plt+0x1ed50>
   3019c:	ldr	r0, [fp, #8]
   301a0:	cmp	r0, #0
   301a4:	bne	301ac <__assert_fail@plt+0x1eca8>
   301a8:	b	30254 <__assert_fail@plt+0x1ed50>
   301ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   301b0:	cmp	r0, #0
   301b4:	bge	30220 <__assert_fail@plt+0x1ed1c>
   301b8:	b	301bc <__assert_fail@plt+0x1ecb8>
   301bc:	b	30204 <__assert_fail@plt+0x1ed00>
   301c0:	b	30204 <__assert_fail@plt+0x1ed00>
   301c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   301c8:	cmn	r0, #1
   301cc:	bne	30204 <__assert_fail@plt+0x1ed00>
   301d0:	b	301d4 <__assert_fail@plt+0x1ecd0>
   301d4:	ldr	r0, [fp, #8]
   301d8:	add	r0, r0, #0
   301dc:	movw	r1, #0
   301e0:	cmp	r1, r0
   301e4:	blt	30238 <__assert_fail@plt+0x1ed34>
   301e8:	b	30254 <__assert_fail@plt+0x1ed50>
   301ec:	ldr	r0, [fp, #8]
   301f0:	sub	r0, r0, #1
   301f4:	mvn	r1, #0
   301f8:	cmp	r1, r0
   301fc:	blt	30238 <__assert_fail@plt+0x1ed34>
   30200:	b	30254 <__assert_fail@plt+0x1ed50>
   30204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30208:	movw	r1, #0
   3020c:	sdiv	r0, r1, r0
   30210:	ldr	r1, [fp, #8]
   30214:	cmp	r0, r1
   30218:	blt	30238 <__assert_fail@plt+0x1ed34>
   3021c:	b	30254 <__assert_fail@plt+0x1ed50>
   30220:	ldr	r0, [fp, #8]
   30224:	movw	r1, #255	; 0xff
   30228:	sdiv	r0, r1, r0
   3022c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30230:	cmp	r0, r1
   30234:	bge	30254 <__assert_fail@plt+0x1ed50>
   30238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3023c:	ldr	r1, [fp, #8]
   30240:	mul	r0, r0, r1
   30244:	and	r0, r0, #255	; 0xff
   30248:	str	r0, [fp, #-28]	; 0xffffffe4
   3024c:	b	3127c <__assert_fail@plt+0x1fd78>
   30250:	andhi	r0, r0, r0
   30254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30258:	ldr	r1, [fp, #8]
   3025c:	mul	r0, r0, r1
   30260:	and	r0, r0, #255	; 0xff
   30264:	str	r0, [fp, #-28]	; 0xffffffe4
   30268:	b	31280 <__assert_fail@plt+0x1fd7c>
   3026c:	b	30644 <__assert_fail@plt+0x1f140>
   30270:	b	30274 <__assert_fail@plt+0x1ed70>
   30274:	ldr	r0, [fp, #8]
   30278:	cmp	r0, #0
   3027c:	bge	30390 <__assert_fail@plt+0x1ee8c>
   30280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30284:	cmp	r0, #0
   30288:	bge	30314 <__assert_fail@plt+0x1ee10>
   3028c:	b	30290 <__assert_fail@plt+0x1ed8c>
   30290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30294:	ldr	r1, [fp, #8]
   30298:	movw	r2, #32767	; 0x7fff
   3029c:	sdiv	r1, r2, r1
   302a0:	cmp	r0, r1
   302a4:	blt	30430 <__assert_fail@plt+0x1ef2c>
   302a8:	b	30448 <__assert_fail@plt+0x1ef44>
   302ac:	b	302b0 <__assert_fail@plt+0x1edac>
   302b0:	ldr	r0, [pc, #4084]	; 312ac <__assert_fail@plt+0x1fda8>
   302b4:	ldr	r1, [fp, #8]
   302b8:	cmp	r1, r0
   302bc:	blt	302d4 <__assert_fail@plt+0x1edd0>
   302c0:	b	302e0 <__assert_fail@plt+0x1eddc>
   302c4:	ldr	r0, [fp, #8]
   302c8:	movw	r1, #0
   302cc:	cmp	r1, r0
   302d0:	bge	302e0 <__assert_fail@plt+0x1eddc>
   302d4:	movw	r0, #0
   302d8:	str	r0, [sp, #156]	; 0x9c
   302dc:	b	302f8 <__assert_fail@plt+0x1edf4>
   302e0:	ldr	r0, [fp, #8]
   302e4:	movw	r1, #0
   302e8:	sub	r0, r1, r0
   302ec:	movw	r1, #32767	; 0x7fff
   302f0:	sdiv	r0, r1, r0
   302f4:	str	r0, [sp, #156]	; 0x9c
   302f8:	ldr	r0, [sp, #156]	; 0x9c
   302fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30300:	mvn	r2, #0
   30304:	sub	r1, r2, r1
   30308:	cmp	r0, r1
   3030c:	ble	30430 <__assert_fail@plt+0x1ef2c>
   30310:	b	30448 <__assert_fail@plt+0x1ef44>
   30314:	b	30318 <__assert_fail@plt+0x1ee14>
   30318:	b	30374 <__assert_fail@plt+0x1ee70>
   3031c:	b	30374 <__assert_fail@plt+0x1ee70>
   30320:	ldr	r0, [fp, #8]
   30324:	cmn	r0, #1
   30328:	bne	30374 <__assert_fail@plt+0x1ee70>
   3032c:	b	30330 <__assert_fail@plt+0x1ee2c>
   30330:	ldr	r0, [pc, #3964]	; 312b4 <__assert_fail@plt+0x1fdb0>
   30334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30338:	add	r0, r1, r0
   3033c:	movw	r1, #0
   30340:	cmp	r1, r0
   30344:	blt	30430 <__assert_fail@plt+0x1ef2c>
   30348:	b	30448 <__assert_fail@plt+0x1ef44>
   3034c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30350:	movw	r1, #0
   30354:	cmp	r1, r0
   30358:	bge	30448 <__assert_fail@plt+0x1ef44>
   3035c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30360:	sub	r0, r0, #1
   30364:	movw	r1, #32767	; 0x7fff
   30368:	cmp	r1, r0
   3036c:	blt	30430 <__assert_fail@plt+0x1ef2c>
   30370:	b	30448 <__assert_fail@plt+0x1ef44>
   30374:	ldr	r0, [pc, #3896]	; 312b4 <__assert_fail@plt+0x1fdb0>
   30378:	ldr	r1, [fp, #8]
   3037c:	sdiv	r0, r0, r1
   30380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30384:	cmp	r0, r1
   30388:	blt	30430 <__assert_fail@plt+0x1ef2c>
   3038c:	b	30448 <__assert_fail@plt+0x1ef44>
   30390:	ldr	r0, [fp, #8]
   30394:	cmp	r0, #0
   30398:	bne	303a0 <__assert_fail@plt+0x1ee9c>
   3039c:	b	30448 <__assert_fail@plt+0x1ef44>
   303a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   303a4:	cmp	r0, #0
   303a8:	bge	30418 <__assert_fail@plt+0x1ef14>
   303ac:	b	303b0 <__assert_fail@plt+0x1eeac>
   303b0:	b	303fc <__assert_fail@plt+0x1eef8>
   303b4:	b	303fc <__assert_fail@plt+0x1eef8>
   303b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   303bc:	cmn	r0, #1
   303c0:	bne	303fc <__assert_fail@plt+0x1eef8>
   303c4:	b	303c8 <__assert_fail@plt+0x1eec4>
   303c8:	ldr	r0, [pc, #3812]	; 312b4 <__assert_fail@plt+0x1fdb0>
   303cc:	ldr	r1, [fp, #8]
   303d0:	add	r0, r1, r0
   303d4:	movw	r1, #0
   303d8:	cmp	r1, r0
   303dc:	blt	30430 <__assert_fail@plt+0x1ef2c>
   303e0:	b	30448 <__assert_fail@plt+0x1ef44>
   303e4:	ldr	r0, [fp, #8]
   303e8:	sub	r0, r0, #1
   303ec:	movw	r1, #32767	; 0x7fff
   303f0:	cmp	r1, r0
   303f4:	blt	30430 <__assert_fail@plt+0x1ef2c>
   303f8:	b	30448 <__assert_fail@plt+0x1ef44>
   303fc:	ldr	r0, [pc, #3760]	; 312b4 <__assert_fail@plt+0x1fdb0>
   30400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30404:	sdiv	r0, r0, r1
   30408:	ldr	r1, [fp, #8]
   3040c:	cmp	r0, r1
   30410:	blt	30430 <__assert_fail@plt+0x1ef2c>
   30414:	b	30448 <__assert_fail@plt+0x1ef44>
   30418:	ldr	r0, [fp, #8]
   3041c:	movw	r1, #32767	; 0x7fff
   30420:	sdiv	r0, r1, r0
   30424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30428:	cmp	r0, r1
   3042c:	bge	30448 <__assert_fail@plt+0x1ef44>
   30430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30434:	ldr	r1, [fp, #8]
   30438:	mul	r0, r0, r1
   3043c:	sxth	r0, r0
   30440:	str	r0, [fp, #-28]	; 0xffffffe4
   30444:	b	3127c <__assert_fail@plt+0x1fd78>
   30448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3044c:	ldr	r1, [fp, #8]
   30450:	mul	r0, r0, r1
   30454:	sxth	r0, r0
   30458:	str	r0, [fp, #-28]	; 0xffffffe4
   3045c:	b	31280 <__assert_fail@plt+0x1fd7c>
   30460:	ldr	r0, [fp, #8]
   30464:	cmp	r0, #0
   30468:	bge	30578 <__assert_fail@plt+0x1f074>
   3046c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30470:	cmp	r0, #0
   30474:	bge	30500 <__assert_fail@plt+0x1effc>
   30478:	b	3047c <__assert_fail@plt+0x1ef78>
   3047c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30480:	ldr	r1, [fp, #8]
   30484:	movw	r2, #65535	; 0xffff
   30488:	sdiv	r1, r2, r1
   3048c:	cmp	r0, r1
   30490:	blt	30614 <__assert_fail@plt+0x1f110>
   30494:	b	3062c <__assert_fail@plt+0x1f128>
   30498:	b	3049c <__assert_fail@plt+0x1ef98>
   3049c:	ldr	r0, [pc, #3592]	; 312ac <__assert_fail@plt+0x1fda8>
   304a0:	ldr	r1, [fp, #8]
   304a4:	cmp	r1, r0
   304a8:	blt	304c0 <__assert_fail@plt+0x1efbc>
   304ac:	b	304cc <__assert_fail@plt+0x1efc8>
   304b0:	ldr	r0, [fp, #8]
   304b4:	movw	r1, #0
   304b8:	cmp	r1, r0
   304bc:	bge	304cc <__assert_fail@plt+0x1efc8>
   304c0:	movw	r0, #0
   304c4:	str	r0, [sp, #152]	; 0x98
   304c8:	b	304e4 <__assert_fail@plt+0x1efe0>
   304cc:	ldr	r0, [fp, #8]
   304d0:	movw	r1, #0
   304d4:	sub	r0, r1, r0
   304d8:	movw	r1, #65535	; 0xffff
   304dc:	sdiv	r0, r1, r0
   304e0:	str	r0, [sp, #152]	; 0x98
   304e4:	ldr	r0, [sp, #152]	; 0x98
   304e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   304ec:	mvn	r2, #0
   304f0:	sub	r1, r2, r1
   304f4:	cmp	r0, r1
   304f8:	ble	30614 <__assert_fail@plt+0x1f110>
   304fc:	b	3062c <__assert_fail@plt+0x1f128>
   30500:	b	30504 <__assert_fail@plt+0x1f000>
   30504:	b	3055c <__assert_fail@plt+0x1f058>
   30508:	b	3055c <__assert_fail@plt+0x1f058>
   3050c:	ldr	r0, [fp, #8]
   30510:	cmn	r0, #1
   30514:	bne	3055c <__assert_fail@plt+0x1f058>
   30518:	b	3051c <__assert_fail@plt+0x1f018>
   3051c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30520:	add	r0, r0, #0
   30524:	movw	r1, #0
   30528:	cmp	r1, r0
   3052c:	blt	30614 <__assert_fail@plt+0x1f110>
   30530:	b	3062c <__assert_fail@plt+0x1f128>
   30534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30538:	movw	r1, #0
   3053c:	cmp	r1, r0
   30540:	bge	3062c <__assert_fail@plt+0x1f128>
   30544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30548:	sub	r0, r0, #1
   3054c:	mvn	r1, #0
   30550:	cmp	r1, r0
   30554:	blt	30614 <__assert_fail@plt+0x1f110>
   30558:	b	3062c <__assert_fail@plt+0x1f128>
   3055c:	ldr	r0, [fp, #8]
   30560:	movw	r1, #0
   30564:	sdiv	r0, r1, r0
   30568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3056c:	cmp	r0, r1
   30570:	blt	30614 <__assert_fail@plt+0x1f110>
   30574:	b	3062c <__assert_fail@plt+0x1f128>
   30578:	ldr	r0, [fp, #8]
   3057c:	cmp	r0, #0
   30580:	bne	30588 <__assert_fail@plt+0x1f084>
   30584:	b	3062c <__assert_fail@plt+0x1f128>
   30588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3058c:	cmp	r0, #0
   30590:	bge	305fc <__assert_fail@plt+0x1f0f8>
   30594:	b	30598 <__assert_fail@plt+0x1f094>
   30598:	b	305e0 <__assert_fail@plt+0x1f0dc>
   3059c:	b	305e0 <__assert_fail@plt+0x1f0dc>
   305a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   305a4:	cmn	r0, #1
   305a8:	bne	305e0 <__assert_fail@plt+0x1f0dc>
   305ac:	b	305b0 <__assert_fail@plt+0x1f0ac>
   305b0:	ldr	r0, [fp, #8]
   305b4:	add	r0, r0, #0
   305b8:	movw	r1, #0
   305bc:	cmp	r1, r0
   305c0:	blt	30614 <__assert_fail@plt+0x1f110>
   305c4:	b	3062c <__assert_fail@plt+0x1f128>
   305c8:	ldr	r0, [fp, #8]
   305cc:	sub	r0, r0, #1
   305d0:	mvn	r1, #0
   305d4:	cmp	r1, r0
   305d8:	blt	30614 <__assert_fail@plt+0x1f110>
   305dc:	b	3062c <__assert_fail@plt+0x1f128>
   305e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   305e4:	movw	r1, #0
   305e8:	sdiv	r0, r1, r0
   305ec:	ldr	r1, [fp, #8]
   305f0:	cmp	r0, r1
   305f4:	blt	30614 <__assert_fail@plt+0x1f110>
   305f8:	b	3062c <__assert_fail@plt+0x1f128>
   305fc:	ldr	r0, [fp, #8]
   30600:	movw	r1, #65535	; 0xffff
   30604:	sdiv	r0, r1, r0
   30608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3060c:	cmp	r0, r1
   30610:	bge	3062c <__assert_fail@plt+0x1f128>
   30614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30618:	ldr	r1, [fp, #8]
   3061c:	mul	r0, r0, r1
   30620:	uxth	r0, r0
   30624:	str	r0, [fp, #-28]	; 0xffffffe4
   30628:	b	3127c <__assert_fail@plt+0x1fd78>
   3062c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30630:	ldr	r1, [fp, #8]
   30634:	mul	r0, r0, r1
   30638:	uxth	r0, r0
   3063c:	str	r0, [fp, #-28]	; 0xffffffe4
   30640:	b	31280 <__assert_fail@plt+0x1fd7c>
   30644:	b	30648 <__assert_fail@plt+0x1f144>
   30648:	b	3064c <__assert_fail@plt+0x1f148>
   3064c:	ldr	r0, [fp, #8]
   30650:	cmp	r0, #0
   30654:	bge	30758 <__assert_fail@plt+0x1f254>
   30658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3065c:	cmp	r0, #0
   30660:	bge	306ec <__assert_fail@plt+0x1f1e8>
   30664:	b	30668 <__assert_fail@plt+0x1f164>
   30668:	ldr	r0, [pc, #3128]	; 312a8 <__assert_fail@plt+0x1fda4>
   3066c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30670:	ldr	r2, [fp, #8]
   30674:	sdiv	r0, r0, r2
   30678:	cmp	r1, r0
   3067c:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   30680:	b	307fc <__assert_fail@plt+0x1f2f8>
   30684:	b	30688 <__assert_fail@plt+0x1f184>
   30688:	ldr	r0, [pc, #3100]	; 312ac <__assert_fail@plt+0x1fda8>
   3068c:	ldr	r1, [fp, #8]
   30690:	cmp	r1, r0
   30694:	blt	306ac <__assert_fail@plt+0x1f1a8>
   30698:	b	306b8 <__assert_fail@plt+0x1f1b4>
   3069c:	ldr	r0, [fp, #8]
   306a0:	movw	r1, #0
   306a4:	cmp	r1, r0
   306a8:	bge	306b8 <__assert_fail@plt+0x1f1b4>
   306ac:	movw	r0, #0
   306b0:	str	r0, [sp, #148]	; 0x94
   306b4:	b	306d0 <__assert_fail@plt+0x1f1cc>
   306b8:	ldr	r0, [pc, #3048]	; 312a8 <__assert_fail@plt+0x1fda4>
   306bc:	ldr	r1, [fp, #8]
   306c0:	movw	r2, #0
   306c4:	sub	r1, r2, r1
   306c8:	sdiv	r0, r0, r1
   306cc:	str	r0, [sp, #148]	; 0x94
   306d0:	ldr	r0, [sp, #148]	; 0x94
   306d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   306d8:	mvn	r2, #0
   306dc:	sub	r1, r2, r1
   306e0:	cmp	r0, r1
   306e4:	ble	307e8 <__assert_fail@plt+0x1f2e4>
   306e8:	b	307fc <__assert_fail@plt+0x1f2f8>
   306ec:	ldr	r0, [fp, #8]
   306f0:	cmn	r0, #1
   306f4:	bne	3073c <__assert_fail@plt+0x1f238>
   306f8:	b	306fc <__assert_fail@plt+0x1f1f8>
   306fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30700:	add	r0, r0, #-2147483648	; 0x80000000
   30704:	movw	r1, #0
   30708:	cmp	r1, r0
   3070c:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   30710:	b	307fc <__assert_fail@plt+0x1f2f8>
   30714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30718:	movw	r1, #0
   3071c:	cmp	r1, r0
   30720:	bge	307fc <__assert_fail@plt+0x1f2f8>
   30724:	ldr	r0, [pc, #2940]	; 312a8 <__assert_fail@plt+0x1fda4>
   30728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3072c:	sub	r1, r1, #1
   30730:	cmp	r0, r1
   30734:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   30738:	b	307fc <__assert_fail@plt+0x1f2f8>
   3073c:	ldr	r0, [pc, #2924]	; 312b0 <__assert_fail@plt+0x1fdac>
   30740:	ldr	r1, [fp, #8]
   30744:	sdiv	r0, r0, r1
   30748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3074c:	cmp	r0, r1
   30750:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   30754:	b	307fc <__assert_fail@plt+0x1f2f8>
   30758:	ldr	r0, [fp, #8]
   3075c:	cmp	r0, #0
   30760:	bne	30768 <__assert_fail@plt+0x1f264>
   30764:	b	307fc <__assert_fail@plt+0x1f2f8>
   30768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3076c:	cmp	r0, #0
   30770:	bge	307d0 <__assert_fail@plt+0x1f2cc>
   30774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30778:	cmn	r0, #1
   3077c:	bne	307b4 <__assert_fail@plt+0x1f2b0>
   30780:	b	30784 <__assert_fail@plt+0x1f280>
   30784:	ldr	r0, [fp, #8]
   30788:	add	r0, r0, #-2147483648	; 0x80000000
   3078c:	movw	r1, #0
   30790:	cmp	r1, r0
   30794:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   30798:	b	307fc <__assert_fail@plt+0x1f2f8>
   3079c:	ldr	r0, [pc, #2820]	; 312a8 <__assert_fail@plt+0x1fda4>
   307a0:	ldr	r1, [fp, #8]
   307a4:	sub	r1, r1, #1
   307a8:	cmp	r0, r1
   307ac:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   307b0:	b	307fc <__assert_fail@plt+0x1f2f8>
   307b4:	ldr	r0, [pc, #2804]	; 312b0 <__assert_fail@plt+0x1fdac>
   307b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   307bc:	sdiv	r0, r0, r1
   307c0:	ldr	r1, [fp, #8]
   307c4:	cmp	r0, r1
   307c8:	blt	307e8 <__assert_fail@plt+0x1f2e4>
   307cc:	b	307fc <__assert_fail@plt+0x1f2f8>
   307d0:	ldr	r0, [pc, #2768]	; 312a8 <__assert_fail@plt+0x1fda4>
   307d4:	ldr	r1, [fp, #8]
   307d8:	sdiv	r0, r0, r1
   307dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   307e0:	cmp	r0, r1
   307e4:	bge	307fc <__assert_fail@plt+0x1f2f8>
   307e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   307ec:	ldr	r1, [fp, #8]
   307f0:	mul	r0, r0, r1
   307f4:	str	r0, [fp, #-28]	; 0xffffffe4
   307f8:	b	3127c <__assert_fail@plt+0x1fd78>
   307fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30800:	ldr	r1, [fp, #8]
   30804:	mul	r0, r0, r1
   30808:	str	r0, [fp, #-28]	; 0xffffffe4
   3080c:	b	31280 <__assert_fail@plt+0x1fd7c>
   30810:	ldr	r0, [fp, #8]
   30814:	cmp	r0, #0
   30818:	bge	30928 <__assert_fail@plt+0x1f424>
   3081c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30820:	cmp	r0, #0
   30824:	bge	308b0 <__assert_fail@plt+0x1f3ac>
   30828:	b	30848 <__assert_fail@plt+0x1f344>
   3082c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30830:	ldr	r1, [fp, #8]
   30834:	mvn	r2, #0
   30838:	udiv	r1, r2, r1
   3083c:	cmp	r0, r1
   30840:	bcc	309c4 <__assert_fail@plt+0x1f4c0>
   30844:	b	309d8 <__assert_fail@plt+0x1f4d4>
   30848:	b	3084c <__assert_fail@plt+0x1f348>
   3084c:	ldr	r0, [pc, #2648]	; 312ac <__assert_fail@plt+0x1fda8>
   30850:	ldr	r1, [fp, #8]
   30854:	cmp	r1, r0
   30858:	blt	30870 <__assert_fail@plt+0x1f36c>
   3085c:	b	3087c <__assert_fail@plt+0x1f378>
   30860:	ldr	r0, [fp, #8]
   30864:	movw	r1, #0
   30868:	cmp	r1, r0
   3086c:	bge	3087c <__assert_fail@plt+0x1f378>
   30870:	movw	r0, #1
   30874:	str	r0, [sp, #144]	; 0x90
   30878:	b	30894 <__assert_fail@plt+0x1f390>
   3087c:	ldr	r0, [fp, #8]
   30880:	movw	r1, #0
   30884:	sub	r0, r1, r0
   30888:	mvn	r1, #0
   3088c:	udiv	r0, r1, r0
   30890:	str	r0, [sp, #144]	; 0x90
   30894:	ldr	r0, [sp, #144]	; 0x90
   30898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3089c:	mvn	r2, #0
   308a0:	sub	r1, r2, r1
   308a4:	cmp	r0, r1
   308a8:	bls	309c4 <__assert_fail@plt+0x1f4c0>
   308ac:	b	309d8 <__assert_fail@plt+0x1f4d4>
   308b0:	b	308b4 <__assert_fail@plt+0x1f3b0>
   308b4:	b	3090c <__assert_fail@plt+0x1f408>
   308b8:	b	3090c <__assert_fail@plt+0x1f408>
   308bc:	ldr	r0, [fp, #8]
   308c0:	cmn	r0, #1
   308c4:	bne	3090c <__assert_fail@plt+0x1f408>
   308c8:	b	308cc <__assert_fail@plt+0x1f3c8>
   308cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   308d0:	add	r0, r0, #0
   308d4:	movw	r1, #0
   308d8:	cmp	r1, r0
   308dc:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   308e0:	b	309d8 <__assert_fail@plt+0x1f4d4>
   308e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   308e8:	movw	r1, #0
   308ec:	cmp	r1, r0
   308f0:	bge	309d8 <__assert_fail@plt+0x1f4d4>
   308f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   308f8:	sub	r0, r0, #1
   308fc:	mvn	r1, #0
   30900:	cmp	r1, r0
   30904:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   30908:	b	309d8 <__assert_fail@plt+0x1f4d4>
   3090c:	ldr	r0, [fp, #8]
   30910:	movw	r1, #0
   30914:	sdiv	r0, r1, r0
   30918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3091c:	cmp	r0, r1
   30920:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   30924:	b	309d8 <__assert_fail@plt+0x1f4d4>
   30928:	ldr	r0, [fp, #8]
   3092c:	cmp	r0, #0
   30930:	bne	30938 <__assert_fail@plt+0x1f434>
   30934:	b	309d8 <__assert_fail@plt+0x1f4d4>
   30938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3093c:	cmp	r0, #0
   30940:	bge	309ac <__assert_fail@plt+0x1f4a8>
   30944:	b	30948 <__assert_fail@plt+0x1f444>
   30948:	b	30990 <__assert_fail@plt+0x1f48c>
   3094c:	b	30990 <__assert_fail@plt+0x1f48c>
   30950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30954:	cmn	r0, #1
   30958:	bne	30990 <__assert_fail@plt+0x1f48c>
   3095c:	b	30960 <__assert_fail@plt+0x1f45c>
   30960:	ldr	r0, [fp, #8]
   30964:	add	r0, r0, #0
   30968:	movw	r1, #0
   3096c:	cmp	r1, r0
   30970:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   30974:	b	309d8 <__assert_fail@plt+0x1f4d4>
   30978:	ldr	r0, [fp, #8]
   3097c:	sub	r0, r0, #1
   30980:	mvn	r1, #0
   30984:	cmp	r1, r0
   30988:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   3098c:	b	309d8 <__assert_fail@plt+0x1f4d4>
   30990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30994:	movw	r1, #0
   30998:	sdiv	r0, r1, r0
   3099c:	ldr	r1, [fp, #8]
   309a0:	cmp	r0, r1
   309a4:	blt	309c4 <__assert_fail@plt+0x1f4c0>
   309a8:	b	309d8 <__assert_fail@plt+0x1f4d4>
   309ac:	ldr	r0, [fp, #8]
   309b0:	mvn	r1, #0
   309b4:	udiv	r0, r1, r0
   309b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   309bc:	cmp	r0, r1
   309c0:	bcs	309d8 <__assert_fail@plt+0x1f4d4>
   309c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   309c8:	ldr	r1, [fp, #8]
   309cc:	mul	r0, r0, r1
   309d0:	str	r0, [fp, #-28]	; 0xffffffe4
   309d4:	b	3127c <__assert_fail@plt+0x1fd78>
   309d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   309dc:	ldr	r1, [fp, #8]
   309e0:	mul	r0, r0, r1
   309e4:	str	r0, [fp, #-28]	; 0xffffffe4
   309e8:	b	31280 <__assert_fail@plt+0x1fd7c>
   309ec:	b	309f0 <__assert_fail@plt+0x1f4ec>
   309f0:	b	309f4 <__assert_fail@plt+0x1f4f0>
   309f4:	ldr	r0, [fp, #8]
   309f8:	cmp	r0, #0
   309fc:	bge	30b00 <__assert_fail@plt+0x1f5fc>
   30a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a04:	cmp	r0, #0
   30a08:	bge	30a94 <__assert_fail@plt+0x1f590>
   30a0c:	b	30a10 <__assert_fail@plt+0x1f50c>
   30a10:	ldr	r0, [pc, #2192]	; 312a8 <__assert_fail@plt+0x1fda4>
   30a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30a18:	ldr	r2, [fp, #8]
   30a1c:	sdiv	r0, r0, r2
   30a20:	cmp	r1, r0
   30a24:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30a28:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30a2c:	b	30a30 <__assert_fail@plt+0x1f52c>
   30a30:	ldr	r0, [pc, #2164]	; 312ac <__assert_fail@plt+0x1fda8>
   30a34:	ldr	r1, [fp, #8]
   30a38:	cmp	r1, r0
   30a3c:	blt	30a54 <__assert_fail@plt+0x1f550>
   30a40:	b	30a60 <__assert_fail@plt+0x1f55c>
   30a44:	ldr	r0, [fp, #8]
   30a48:	movw	r1, #0
   30a4c:	cmp	r1, r0
   30a50:	bge	30a60 <__assert_fail@plt+0x1f55c>
   30a54:	movw	r0, #0
   30a58:	str	r0, [sp, #140]	; 0x8c
   30a5c:	b	30a78 <__assert_fail@plt+0x1f574>
   30a60:	ldr	r0, [pc, #2112]	; 312a8 <__assert_fail@plt+0x1fda4>
   30a64:	ldr	r1, [fp, #8]
   30a68:	movw	r2, #0
   30a6c:	sub	r1, r2, r1
   30a70:	sdiv	r0, r0, r1
   30a74:	str	r0, [sp, #140]	; 0x8c
   30a78:	ldr	r0, [sp, #140]	; 0x8c
   30a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30a80:	mvn	r2, #0
   30a84:	sub	r1, r2, r1
   30a88:	cmp	r0, r1
   30a8c:	ble	30b90 <__assert_fail@plt+0x1f68c>
   30a90:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30a94:	ldr	r0, [fp, #8]
   30a98:	cmn	r0, #1
   30a9c:	bne	30ae4 <__assert_fail@plt+0x1f5e0>
   30aa0:	b	30aa4 <__assert_fail@plt+0x1f5a0>
   30aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30aa8:	add	r0, r0, #-2147483648	; 0x80000000
   30aac:	movw	r1, #0
   30ab0:	cmp	r1, r0
   30ab4:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30ab8:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ac0:	movw	r1, #0
   30ac4:	cmp	r1, r0
   30ac8:	bge	30ba4 <__assert_fail@plt+0x1f6a0>
   30acc:	ldr	r0, [pc, #2004]	; 312a8 <__assert_fail@plt+0x1fda4>
   30ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30ad4:	sub	r1, r1, #1
   30ad8:	cmp	r0, r1
   30adc:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30ae0:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30ae4:	ldr	r0, [pc, #1988]	; 312b0 <__assert_fail@plt+0x1fdac>
   30ae8:	ldr	r1, [fp, #8]
   30aec:	sdiv	r0, r0, r1
   30af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30af4:	cmp	r0, r1
   30af8:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30afc:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30b00:	ldr	r0, [fp, #8]
   30b04:	cmp	r0, #0
   30b08:	bne	30b10 <__assert_fail@plt+0x1f60c>
   30b0c:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b14:	cmp	r0, #0
   30b18:	bge	30b78 <__assert_fail@plt+0x1f674>
   30b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b20:	cmn	r0, #1
   30b24:	bne	30b5c <__assert_fail@plt+0x1f658>
   30b28:	b	30b2c <__assert_fail@plt+0x1f628>
   30b2c:	ldr	r0, [fp, #8]
   30b30:	add	r0, r0, #-2147483648	; 0x80000000
   30b34:	movw	r1, #0
   30b38:	cmp	r1, r0
   30b3c:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30b40:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30b44:	ldr	r0, [pc, #1884]	; 312a8 <__assert_fail@plt+0x1fda4>
   30b48:	ldr	r1, [fp, #8]
   30b4c:	sub	r1, r1, #1
   30b50:	cmp	r0, r1
   30b54:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30b58:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30b5c:	ldr	r0, [pc, #1868]	; 312b0 <__assert_fail@plt+0x1fdac>
   30b60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b64:	sdiv	r0, r0, r1
   30b68:	ldr	r1, [fp, #8]
   30b6c:	cmp	r0, r1
   30b70:	blt	30b90 <__assert_fail@plt+0x1f68c>
   30b74:	b	30ba4 <__assert_fail@plt+0x1f6a0>
   30b78:	ldr	r0, [pc, #1832]	; 312a8 <__assert_fail@plt+0x1fda4>
   30b7c:	ldr	r1, [fp, #8]
   30b80:	sdiv	r0, r0, r1
   30b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b88:	cmp	r0, r1
   30b8c:	bge	30ba4 <__assert_fail@plt+0x1f6a0>
   30b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b94:	ldr	r1, [fp, #8]
   30b98:	mul	r0, r0, r1
   30b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   30ba0:	b	3127c <__assert_fail@plt+0x1fd78>
   30ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ba8:	ldr	r1, [fp, #8]
   30bac:	mul	r0, r0, r1
   30bb0:	str	r0, [fp, #-28]	; 0xffffffe4
   30bb4:	b	31280 <__assert_fail@plt+0x1fd7c>
   30bb8:	ldr	r0, [fp, #8]
   30bbc:	cmp	r0, #0
   30bc0:	bge	30cd0 <__assert_fail@plt+0x1f7cc>
   30bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30bc8:	cmp	r0, #0
   30bcc:	bge	30c58 <__assert_fail@plt+0x1f754>
   30bd0:	b	30bf0 <__assert_fail@plt+0x1f6ec>
   30bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30bd8:	ldr	r1, [fp, #8]
   30bdc:	mvn	r2, #0
   30be0:	udiv	r1, r2, r1
   30be4:	cmp	r0, r1
   30be8:	bcc	30d6c <__assert_fail@plt+0x1f868>
   30bec:	b	30d80 <__assert_fail@plt+0x1f87c>
   30bf0:	b	30bf4 <__assert_fail@plt+0x1f6f0>
   30bf4:	ldr	r0, [pc, #1712]	; 312ac <__assert_fail@plt+0x1fda8>
   30bf8:	ldr	r1, [fp, #8]
   30bfc:	cmp	r1, r0
   30c00:	blt	30c18 <__assert_fail@plt+0x1f714>
   30c04:	b	30c24 <__assert_fail@plt+0x1f720>
   30c08:	ldr	r0, [fp, #8]
   30c0c:	movw	r1, #0
   30c10:	cmp	r1, r0
   30c14:	bge	30c24 <__assert_fail@plt+0x1f720>
   30c18:	movw	r0, #1
   30c1c:	str	r0, [sp, #136]	; 0x88
   30c20:	b	30c3c <__assert_fail@plt+0x1f738>
   30c24:	ldr	r0, [fp, #8]
   30c28:	movw	r1, #0
   30c2c:	sub	r0, r1, r0
   30c30:	mvn	r1, #0
   30c34:	udiv	r0, r1, r0
   30c38:	str	r0, [sp, #136]	; 0x88
   30c3c:	ldr	r0, [sp, #136]	; 0x88
   30c40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30c44:	mvn	r2, #0
   30c48:	sub	r1, r2, r1
   30c4c:	cmp	r0, r1
   30c50:	bls	30d6c <__assert_fail@plt+0x1f868>
   30c54:	b	30d80 <__assert_fail@plt+0x1f87c>
   30c58:	b	30c5c <__assert_fail@plt+0x1f758>
   30c5c:	b	30cb4 <__assert_fail@plt+0x1f7b0>
   30c60:	b	30cb4 <__assert_fail@plt+0x1f7b0>
   30c64:	ldr	r0, [fp, #8]
   30c68:	cmn	r0, #1
   30c6c:	bne	30cb4 <__assert_fail@plt+0x1f7b0>
   30c70:	b	30c74 <__assert_fail@plt+0x1f770>
   30c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c78:	add	r0, r0, #0
   30c7c:	movw	r1, #0
   30c80:	cmp	r1, r0
   30c84:	blt	30d6c <__assert_fail@plt+0x1f868>
   30c88:	b	30d80 <__assert_fail@plt+0x1f87c>
   30c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c90:	movw	r1, #0
   30c94:	cmp	r1, r0
   30c98:	bge	30d80 <__assert_fail@plt+0x1f87c>
   30c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ca0:	sub	r0, r0, #1
   30ca4:	mvn	r1, #0
   30ca8:	cmp	r1, r0
   30cac:	blt	30d6c <__assert_fail@plt+0x1f868>
   30cb0:	b	30d80 <__assert_fail@plt+0x1f87c>
   30cb4:	ldr	r0, [fp, #8]
   30cb8:	movw	r1, #0
   30cbc:	sdiv	r0, r1, r0
   30cc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30cc4:	cmp	r0, r1
   30cc8:	blt	30d6c <__assert_fail@plt+0x1f868>
   30ccc:	b	30d80 <__assert_fail@plt+0x1f87c>
   30cd0:	ldr	r0, [fp, #8]
   30cd4:	cmp	r0, #0
   30cd8:	bne	30ce0 <__assert_fail@plt+0x1f7dc>
   30cdc:	b	30d80 <__assert_fail@plt+0x1f87c>
   30ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ce4:	cmp	r0, #0
   30ce8:	bge	30d54 <__assert_fail@plt+0x1f850>
   30cec:	b	30cf0 <__assert_fail@plt+0x1f7ec>
   30cf0:	b	30d38 <__assert_fail@plt+0x1f834>
   30cf4:	b	30d38 <__assert_fail@plt+0x1f834>
   30cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30cfc:	cmn	r0, #1
   30d00:	bne	30d38 <__assert_fail@plt+0x1f834>
   30d04:	b	30d08 <__assert_fail@plt+0x1f804>
   30d08:	ldr	r0, [fp, #8]
   30d0c:	add	r0, r0, #0
   30d10:	movw	r1, #0
   30d14:	cmp	r1, r0
   30d18:	blt	30d6c <__assert_fail@plt+0x1f868>
   30d1c:	b	30d80 <__assert_fail@plt+0x1f87c>
   30d20:	ldr	r0, [fp, #8]
   30d24:	sub	r0, r0, #1
   30d28:	mvn	r1, #0
   30d2c:	cmp	r1, r0
   30d30:	blt	30d6c <__assert_fail@plt+0x1f868>
   30d34:	b	30d80 <__assert_fail@plt+0x1f87c>
   30d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d3c:	movw	r1, #0
   30d40:	sdiv	r0, r1, r0
   30d44:	ldr	r1, [fp, #8]
   30d48:	cmp	r0, r1
   30d4c:	blt	30d6c <__assert_fail@plt+0x1f868>
   30d50:	b	30d80 <__assert_fail@plt+0x1f87c>
   30d54:	ldr	r0, [fp, #8]
   30d58:	mvn	r1, #0
   30d5c:	udiv	r0, r1, r0
   30d60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30d64:	cmp	r0, r1
   30d68:	bcs	30d80 <__assert_fail@plt+0x1f87c>
   30d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d70:	ldr	r1, [fp, #8]
   30d74:	mul	r0, r0, r1
   30d78:	str	r0, [fp, #-28]	; 0xffffffe4
   30d7c:	b	3127c <__assert_fail@plt+0x1fd78>
   30d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d84:	ldr	r1, [fp, #8]
   30d88:	mul	r0, r0, r1
   30d8c:	str	r0, [fp, #-28]	; 0xffffffe4
   30d90:	b	31280 <__assert_fail@plt+0x1fd7c>
   30d94:	b	30d98 <__assert_fail@plt+0x1f894>
   30d98:	ldr	r0, [fp, #8]
   30d9c:	cmp	r0, #0
   30da0:	bge	30f28 <__assert_fail@plt+0x1fa24>
   30da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30da8:	cmp	r0, #0
   30dac:	bge	30e94 <__assert_fail@plt+0x1f990>
   30db0:	b	30db4 <__assert_fail@plt+0x1f8b0>
   30db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30db8:	ldr	r1, [fp, #8]
   30dbc:	asr	r3, r1, #31
   30dc0:	mvn	r2, #0
   30dc4:	mvn	ip, #-2147483648	; 0x80000000
   30dc8:	str	r0, [sp, #132]	; 0x84
   30dcc:	mov	r0, r2
   30dd0:	str	r1, [sp, #128]	; 0x80
   30dd4:	mov	r1, ip
   30dd8:	ldr	r2, [sp, #128]	; 0x80
   30ddc:	bl	37150 <__assert_fail@plt+0x25c4c>
   30de0:	ldr	r2, [sp, #132]	; 0x84
   30de4:	subs	r0, r2, r0
   30de8:	rscs	r1, r1, r2, asr #31
   30dec:	str	r0, [sp, #124]	; 0x7c
   30df0:	str	r1, [sp, #120]	; 0x78
   30df4:	blt	31008 <__assert_fail@plt+0x1fb04>
   30df8:	b	3101c <__assert_fail@plt+0x1fb18>
   30dfc:	b	30e00 <__assert_fail@plt+0x1f8fc>
   30e00:	ldr	r0, [pc, #1188]	; 312ac <__assert_fail@plt+0x1fda8>
   30e04:	ldr	r1, [fp, #8]
   30e08:	cmp	r1, r0
   30e0c:	blt	30e24 <__assert_fail@plt+0x1f920>
   30e10:	b	30e38 <__assert_fail@plt+0x1f934>
   30e14:	ldr	r0, [fp, #8]
   30e18:	movw	r1, #0
   30e1c:	cmp	r1, r0
   30e20:	bge	30e38 <__assert_fail@plt+0x1f934>
   30e24:	mov	r0, #0
   30e28:	mvn	r1, #0
   30e2c:	str	r1, [sp, #116]	; 0x74
   30e30:	str	r0, [sp, #112]	; 0x70
   30e34:	b	30e6c <__assert_fail@plt+0x1f968>
   30e38:	ldr	r0, [fp, #8]
   30e3c:	rsb	r0, r0, #0
   30e40:	asr	r3, r0, #31
   30e44:	mvn	r1, #0
   30e48:	mvn	r2, #-2147483648	; 0x80000000
   30e4c:	str	r0, [sp, #108]	; 0x6c
   30e50:	mov	r0, r1
   30e54:	mov	r1, r2
   30e58:	ldr	r2, [sp, #108]	; 0x6c
   30e5c:	bl	37150 <__assert_fail@plt+0x25c4c>
   30e60:	str	r0, [sp, #116]	; 0x74
   30e64:	str	r1, [sp, #112]	; 0x70
   30e68:	b	30e6c <__assert_fail@plt+0x1f968>
   30e6c:	ldr	r0, [sp, #112]	; 0x70
   30e70:	ldr	r1, [sp, #116]	; 0x74
   30e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30e78:	mvn	r2, r2
   30e7c:	subs	r1, r2, r1
   30e80:	rscs	r0, r0, r2, asr #31
   30e84:	str	r1, [sp, #104]	; 0x68
   30e88:	str	r0, [sp, #100]	; 0x64
   30e8c:	bge	31008 <__assert_fail@plt+0x1fb04>
   30e90:	b	3101c <__assert_fail@plt+0x1fb18>
   30e94:	ldr	r0, [fp, #8]
   30e98:	cmn	r0, #1
   30e9c:	bne	30ee8 <__assert_fail@plt+0x1f9e4>
   30ea0:	b	30ea4 <__assert_fail@plt+0x1f9a0>
   30ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ea8:	mov	r1, #-2147483648	; 0x80000000
   30eac:	add	r1, r1, r0, asr #31
   30eb0:	rsbs	r0, r0, #0
   30eb4:	rscs	r1, r1, #0
   30eb8:	str	r0, [sp, #96]	; 0x60
   30ebc:	str	r1, [sp, #92]	; 0x5c
   30ec0:	blt	31008 <__assert_fail@plt+0x1fb04>
   30ec4:	b	3101c <__assert_fail@plt+0x1fb18>
   30ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ecc:	movw	r1, #0
   30ed0:	cmp	r1, r0
   30ed4:	bge	3101c <__assert_fail@plt+0x1fb18>
   30ed8:	mov	r0, #0
   30edc:	cmp	r0, #0
   30ee0:	bne	31008 <__assert_fail@plt+0x1fb04>
   30ee4:	b	3101c <__assert_fail@plt+0x1fb18>
   30ee8:	ldr	r0, [fp, #8]
   30eec:	asr	r3, r0, #31
   30ef0:	mov	r1, #0
   30ef4:	mov	r2, #-2147483648	; 0x80000000
   30ef8:	str	r0, [sp, #88]	; 0x58
   30efc:	mov	r0, r1
   30f00:	mov	r1, r2
   30f04:	ldr	r2, [sp, #88]	; 0x58
   30f08:	bl	37150 <__assert_fail@plt+0x25c4c>
   30f0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30f10:	subs	r0, r0, r2
   30f14:	sbcs	r1, r1, r2, asr #31
   30f18:	str	r0, [sp, #84]	; 0x54
   30f1c:	str	r1, [sp, #80]	; 0x50
   30f20:	blt	31008 <__assert_fail@plt+0x1fb04>
   30f24:	b	3101c <__assert_fail@plt+0x1fb18>
   30f28:	ldr	r0, [fp, #8]
   30f2c:	cmp	r0, #0
   30f30:	bne	30f38 <__assert_fail@plt+0x1fa34>
   30f34:	b	3101c <__assert_fail@plt+0x1fb18>
   30f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f3c:	cmp	r0, #0
   30f40:	bge	30fc8 <__assert_fail@plt+0x1fac4>
   30f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f48:	cmn	r0, #1
   30f4c:	bne	30f88 <__assert_fail@plt+0x1fa84>
   30f50:	b	30f54 <__assert_fail@plt+0x1fa50>
   30f54:	ldr	r0, [fp, #8]
   30f58:	mov	r1, #-2147483648	; 0x80000000
   30f5c:	add	r1, r1, r0, asr #31
   30f60:	rsbs	r0, r0, #0
   30f64:	rscs	r1, r1, #0
   30f68:	str	r0, [sp, #76]	; 0x4c
   30f6c:	str	r1, [sp, #72]	; 0x48
   30f70:	blt	31008 <__assert_fail@plt+0x1fb04>
   30f74:	b	3101c <__assert_fail@plt+0x1fb18>
   30f78:	mov	r0, #0
   30f7c:	cmp	r0, #0
   30f80:	bne	31008 <__assert_fail@plt+0x1fb04>
   30f84:	b	3101c <__assert_fail@plt+0x1fb18>
   30f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f8c:	asr	r3, r0, #31
   30f90:	mov	r1, #0
   30f94:	mov	r2, #-2147483648	; 0x80000000
   30f98:	str	r0, [sp, #68]	; 0x44
   30f9c:	mov	r0, r1
   30fa0:	mov	r1, r2
   30fa4:	ldr	r2, [sp, #68]	; 0x44
   30fa8:	bl	37150 <__assert_fail@plt+0x25c4c>
   30fac:	ldr	r2, [fp, #8]
   30fb0:	subs	r0, r0, r2
   30fb4:	sbcs	r1, r1, r2, asr #31
   30fb8:	str	r0, [sp, #64]	; 0x40
   30fbc:	str	r1, [sp, #60]	; 0x3c
   30fc0:	blt	31008 <__assert_fail@plt+0x1fb04>
   30fc4:	b	3101c <__assert_fail@plt+0x1fb18>
   30fc8:	ldr	r0, [fp, #8]
   30fcc:	asr	r3, r0, #31
   30fd0:	mvn	r1, #0
   30fd4:	mvn	r2, #-2147483648	; 0x80000000
   30fd8:	str	r0, [sp, #56]	; 0x38
   30fdc:	mov	r0, r1
   30fe0:	mov	r1, r2
   30fe4:	ldr	r2, [sp, #56]	; 0x38
   30fe8:	bl	37150 <__assert_fail@plt+0x25c4c>
   30fec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30ff0:	subs	r0, r0, r2
   30ff4:	sbcs	r1, r1, r2, asr #31
   30ff8:	str	r0, [sp, #52]	; 0x34
   30ffc:	str	r1, [sp, #48]	; 0x30
   31000:	bge	3101c <__assert_fail@plt+0x1fb18>
   31004:	b	31008 <__assert_fail@plt+0x1fb04>
   31008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3100c:	ldr	r1, [fp, #8]
   31010:	mul	r0, r0, r1
   31014:	str	r0, [fp, #-28]	; 0xffffffe4
   31018:	b	3127c <__assert_fail@plt+0x1fd78>
   3101c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31020:	ldr	r1, [fp, #8]
   31024:	mul	r0, r0, r1
   31028:	str	r0, [fp, #-28]	; 0xffffffe4
   3102c:	b	31280 <__assert_fail@plt+0x1fd7c>
   31030:	ldr	r0, [fp, #8]
   31034:	cmp	r0, #0
   31038:	bge	31198 <__assert_fail@plt+0x1fc94>
   3103c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31040:	cmp	r0, #0
   31044:	bge	31120 <__assert_fail@plt+0x1fc1c>
   31048:	b	31090 <__assert_fail@plt+0x1fb8c>
   3104c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31050:	ldr	r1, [fp, #8]
   31054:	asr	r3, r1, #31
   31058:	mvn	r2, #0
   3105c:	str	r0, [sp, #44]	; 0x2c
   31060:	mov	r0, r2
   31064:	str	r1, [sp, #40]	; 0x28
   31068:	mov	r1, r2
   3106c:	ldr	r2, [sp, #40]	; 0x28
   31070:	bl	37224 <__assert_fail@plt+0x25d20>
   31074:	ldr	r2, [sp, #44]	; 0x2c
   31078:	subs	r0, r2, r0
   3107c:	rscs	r1, r1, r2, asr #31
   31080:	str	r0, [sp, #36]	; 0x24
   31084:	str	r1, [sp, #32]
   31088:	bcc	31254 <__assert_fail@plt+0x1fd50>
   3108c:	b	31268 <__assert_fail@plt+0x1fd64>
   31090:	b	31094 <__assert_fail@plt+0x1fb90>
   31094:	ldr	r0, [pc, #528]	; 312ac <__assert_fail@plt+0x1fda8>
   31098:	ldr	r1, [fp, #8]
   3109c:	cmp	r1, r0
   310a0:	blt	310b8 <__assert_fail@plt+0x1fbb4>
   310a4:	b	310cc <__assert_fail@plt+0x1fbc8>
   310a8:	ldr	r0, [fp, #8]
   310ac:	movw	r1, #0
   310b0:	cmp	r1, r0
   310b4:	bge	310cc <__assert_fail@plt+0x1fbc8>
   310b8:	mov	r0, #1
   310bc:	mvn	r1, #0
   310c0:	str	r1, [sp, #28]
   310c4:	str	r0, [sp, #24]
   310c8:	b	310f8 <__assert_fail@plt+0x1fbf4>
   310cc:	ldr	r0, [fp, #8]
   310d0:	rsb	r0, r0, #0
   310d4:	asr	r3, r0, #31
   310d8:	mvn	r1, #0
   310dc:	str	r0, [sp, #20]
   310e0:	mov	r0, r1
   310e4:	ldr	r2, [sp, #20]
   310e8:	bl	37224 <__assert_fail@plt+0x25d20>
   310ec:	str	r0, [sp, #28]
   310f0:	str	r1, [sp, #24]
   310f4:	b	310f8 <__assert_fail@plt+0x1fbf4>
   310f8:	ldr	r0, [sp, #24]
   310fc:	ldr	r1, [sp, #28]
   31100:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31104:	mvn	r2, r2
   31108:	subs	r1, r2, r1
   3110c:	rscs	r0, r0, r2, asr #31
   31110:	str	r1, [sp, #16]
   31114:	str	r0, [sp, #12]
   31118:	bcs	31254 <__assert_fail@plt+0x1fd50>
   3111c:	b	31268 <__assert_fail@plt+0x1fd64>
   31120:	b	31124 <__assert_fail@plt+0x1fc20>
   31124:	b	3117c <__assert_fail@plt+0x1fc78>
   31128:	b	3117c <__assert_fail@plt+0x1fc78>
   3112c:	ldr	r0, [fp, #8]
   31130:	cmn	r0, #1
   31134:	bne	3117c <__assert_fail@plt+0x1fc78>
   31138:	b	3113c <__assert_fail@plt+0x1fc38>
   3113c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31140:	add	r0, r0, #0
   31144:	movw	r1, #0
   31148:	cmp	r1, r0
   3114c:	blt	31254 <__assert_fail@plt+0x1fd50>
   31150:	b	31268 <__assert_fail@plt+0x1fd64>
   31154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31158:	movw	r1, #0
   3115c:	cmp	r1, r0
   31160:	bge	31268 <__assert_fail@plt+0x1fd64>
   31164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31168:	sub	r0, r0, #1
   3116c:	mvn	r1, #0
   31170:	cmp	r1, r0
   31174:	blt	31254 <__assert_fail@plt+0x1fd50>
   31178:	b	31268 <__assert_fail@plt+0x1fd64>
   3117c:	ldr	r0, [fp, #8]
   31180:	movw	r1, #0
   31184:	sdiv	r0, r1, r0
   31188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3118c:	cmp	r0, r1
   31190:	blt	31254 <__assert_fail@plt+0x1fd50>
   31194:	b	31268 <__assert_fail@plt+0x1fd64>
   31198:	ldr	r0, [fp, #8]
   3119c:	cmp	r0, #0
   311a0:	bne	311a8 <__assert_fail@plt+0x1fca4>
   311a4:	b	31268 <__assert_fail@plt+0x1fd64>
   311a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   311ac:	cmp	r0, #0
   311b0:	bge	3121c <__assert_fail@plt+0x1fd18>
   311b4:	b	311b8 <__assert_fail@plt+0x1fcb4>
   311b8:	b	31200 <__assert_fail@plt+0x1fcfc>
   311bc:	b	31200 <__assert_fail@plt+0x1fcfc>
   311c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   311c4:	cmn	r0, #1
   311c8:	bne	31200 <__assert_fail@plt+0x1fcfc>
   311cc:	b	311d0 <__assert_fail@plt+0x1fccc>
   311d0:	ldr	r0, [fp, #8]
   311d4:	add	r0, r0, #0
   311d8:	movw	r1, #0
   311dc:	cmp	r1, r0
   311e0:	blt	31254 <__assert_fail@plt+0x1fd50>
   311e4:	b	31268 <__assert_fail@plt+0x1fd64>
   311e8:	ldr	r0, [fp, #8]
   311ec:	sub	r0, r0, #1
   311f0:	mvn	r1, #0
   311f4:	cmp	r1, r0
   311f8:	blt	31254 <__assert_fail@plt+0x1fd50>
   311fc:	b	31268 <__assert_fail@plt+0x1fd64>
   31200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31204:	movw	r1, #0
   31208:	sdiv	r0, r1, r0
   3120c:	ldr	r1, [fp, #8]
   31210:	cmp	r0, r1
   31214:	blt	31254 <__assert_fail@plt+0x1fd50>
   31218:	b	31268 <__assert_fail@plt+0x1fd64>
   3121c:	ldr	r0, [fp, #8]
   31220:	asr	r3, r0, #31
   31224:	mvn	r1, #0
   31228:	str	r0, [sp, #8]
   3122c:	mov	r0, r1
   31230:	ldr	r2, [sp, #8]
   31234:	bl	37224 <__assert_fail@plt+0x25d20>
   31238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3123c:	subs	r0, r0, r2
   31240:	sbcs	r1, r1, r2, asr #31
   31244:	str	r0, [sp, #4]
   31248:	str	r1, [sp]
   3124c:	bcs	31268 <__assert_fail@plt+0x1fd64>
   31250:	b	31254 <__assert_fail@plt+0x1fd50>
   31254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31258:	ldr	r1, [fp, #8]
   3125c:	mul	r0, r0, r1
   31260:	str	r0, [fp, #-28]	; 0xffffffe4
   31264:	b	3127c <__assert_fail@plt+0x1fd78>
   31268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3126c:	ldr	r1, [fp, #8]
   31270:	mul	r0, r0, r1
   31274:	str	r0, [fp, #-28]	; 0xffffffe4
   31278:	b	31280 <__assert_fail@plt+0x1fd7c>
   3127c:	bl	31458 <__assert_fail@plt+0x1ff54>
   31280:	ldr	r0, [fp, #-4]
   31284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31288:	bl	2e714 <__assert_fail@plt+0x1d210>
   3128c:	str	r0, [fp, #-4]
   31290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31294:	ldr	r1, [fp, #-8]
   31298:	str	r0, [r1]
   3129c:	ldr	r0, [fp, #-4]
   312a0:	mov	sp, fp
   312a4:	pop	{fp, pc}
   312a8:	svcvc	0x00ffffff
   312ac:	andhi	r0, r0, r1
   312b0:	andhi	r0, r0, r0
   312b4:			; <UNDEFINED> instruction: 0xffff8000
   312b8:	push	{fp, lr}
   312bc:	mov	fp, sp
   312c0:	sub	sp, sp, #8
   312c4:	str	r0, [sp, #4]
   312c8:	ldr	r0, [sp, #4]
   312cc:	movw	r1, #1
   312d0:	bl	312dc <__assert_fail@plt+0x1fdd8>
   312d4:	mov	sp, fp
   312d8:	pop	{fp, pc}
   312dc:	push	{fp, lr}
   312e0:	mov	fp, sp
   312e4:	sub	sp, sp, #8
   312e8:	str	r0, [sp, #4]
   312ec:	str	r1, [sp]
   312f0:	ldr	r0, [sp, #4]
   312f4:	ldr	r1, [sp]
   312f8:	bl	33aa8 <__assert_fail@plt+0x225a4>
   312fc:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   31300:	mov	sp, fp
   31304:	pop	{fp, pc}
   31308:	push	{fp, lr}
   3130c:	mov	fp, sp
   31310:	sub	sp, sp, #8
   31314:	str	r0, [sp, #4]
   31318:	ldr	r0, [sp, #4]
   3131c:	movw	r1, #1
   31320:	bl	3132c <__assert_fail@plt+0x1fe28>
   31324:	mov	sp, fp
   31328:	pop	{fp, pc}
   3132c:	push	{fp, lr}
   31330:	mov	fp, sp
   31334:	sub	sp, sp, #8
   31338:	str	r0, [sp, #4]
   3133c:	str	r1, [sp]
   31340:	ldr	r0, [sp, #4]
   31344:	ldr	r1, [sp]
   31348:	bl	3536c <__assert_fail@plt+0x23e68>
   3134c:	bl	2e6a0 <__assert_fail@plt+0x1d19c>
   31350:	mov	sp, fp
   31354:	pop	{fp, pc}
   31358:	push	{fp, lr}
   3135c:	mov	fp, sp
   31360:	sub	sp, sp, #16
   31364:	str	r0, [fp, #-4]
   31368:	str	r1, [sp, #8]
   3136c:	ldr	r0, [sp, #8]
   31370:	bl	2e67c <__assert_fail@plt+0x1d178>
   31374:	ldr	r1, [fp, #-4]
   31378:	ldr	r2, [sp, #8]
   3137c:	str	r0, [sp, #4]
   31380:	bl	112a0 <memcpy@plt>
   31384:	ldr	r0, [sp, #4]
   31388:	mov	sp, fp
   3138c:	pop	{fp, pc}
   31390:	push	{fp, lr}
   31394:	mov	fp, sp
   31398:	sub	sp, sp, #16
   3139c:	str	r0, [fp, #-4]
   313a0:	str	r1, [sp, #8]
   313a4:	ldr	r0, [sp, #8]
   313a8:	bl	2e6d0 <__assert_fail@plt+0x1d1cc>
   313ac:	ldr	r1, [fp, #-4]
   313b0:	ldr	r2, [sp, #8]
   313b4:	str	r0, [sp, #4]
   313b8:	bl	112a0 <memcpy@plt>
   313bc:	ldr	r0, [sp, #4]
   313c0:	mov	sp, fp
   313c4:	pop	{fp, pc}
   313c8:	push	{fp, lr}
   313cc:	mov	fp, sp
   313d0:	sub	sp, sp, #16
   313d4:	str	r0, [fp, #-4]
   313d8:	str	r1, [sp, #8]
   313dc:	ldr	r0, [sp, #8]
   313e0:	add	r0, r0, #1
   313e4:	bl	2e6d0 <__assert_fail@plt+0x1d1cc>
   313e8:	str	r0, [sp, #4]
   313ec:	ldr	r0, [sp, #4]
   313f0:	ldr	r1, [sp, #8]
   313f4:	add	r0, r0, r1
   313f8:	movw	r1, #0
   313fc:	strb	r1, [r0]
   31400:	ldr	r0, [sp, #4]
   31404:	ldr	r1, [fp, #-4]
   31408:	ldr	r2, [sp, #8]
   3140c:	str	r0, [sp]
   31410:	bl	112a0 <memcpy@plt>
   31414:	ldr	r0, [sp]
   31418:	mov	sp, fp
   3141c:	pop	{fp, pc}
   31420:	push	{fp, lr}
   31424:	mov	fp, sp
   31428:	sub	sp, sp, #8
   3142c:	str	r0, [sp, #4]
   31430:	ldr	r0, [sp, #4]
   31434:	ldr	r1, [sp, #4]
   31438:	str	r0, [sp]
   3143c:	mov	r0, r1
   31440:	bl	113d8 <strlen@plt>
   31444:	add	r1, r0, #1
   31448:	ldr	r0, [sp]
   3144c:	bl	31358 <__assert_fail@plt+0x1fe54>
   31450:	mov	sp, fp
   31454:	pop	{fp, pc}
   31458:	push	{fp, lr}
   3145c:	mov	fp, sp
   31460:	sub	sp, sp, #8
   31464:	movw	r0, #37232	; 0x9170
   31468:	movt	r0, #4
   3146c:	ldr	r0, [r0]
   31470:	movw	r1, #34439	; 0x8687
   31474:	movt	r1, #3
   31478:	str	r0, [sp, #4]
   3147c:	mov	r0, r1
   31480:	bl	113cc <gettext@plt>
   31484:	ldr	r1, [sp, #4]
   31488:	str	r0, [sp]
   3148c:	mov	r0, r1
   31490:	movw	r1, #0
   31494:	movw	r2, #31510	; 0x7b16
   31498:	movt	r2, #3
   3149c:	ldr	r3, [sp]
   314a0:	bl	1136c <error@plt>
   314a4:	bl	114e0 <abort@plt>
   314a8:	push	{r4, r5, r6, sl, fp, lr}
   314ac:	add	fp, sp, #16
   314b0:	sub	sp, sp, #120	; 0x78
   314b4:	ldr	ip, [fp, #12]
   314b8:	ldr	lr, [fp, #8]
   314bc:	ldr	r4, [fp, #24]
   314c0:	ldr	r5, [fp, #20]
   314c4:	ldr	r6, [fp, #16]
   314c8:	str	r0, [fp, #-20]	; 0xffffffec
   314cc:	str	r1, [fp, #-24]	; 0xffffffe8
   314d0:	str	r3, [fp, #-28]	; 0xffffffe4
   314d4:	str	r2, [fp, #-32]	; 0xffffffe0
   314d8:	str	ip, [fp, #-36]	; 0xffffffdc
   314dc:	str	lr, [fp, #-40]	; 0xffffffd8
   314e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   314e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   314e8:	ldr	r1, [fp, #16]
   314ec:	movw	r3, #0
   314f0:	str	r1, [fp, #-60]	; 0xffffffc4
   314f4:	mov	r1, r3
   314f8:	sub	r3, fp, #56	; 0x38
   314fc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   31500:	str	ip, [sp]
   31504:	str	r5, [fp, #-64]	; 0xffffffc0
   31508:	str	r4, [sp, #68]	; 0x44
   3150c:	str	r6, [sp, #64]	; 0x40
   31510:	bl	31774 <__assert_fail@plt+0x20270>
   31514:	str	r0, [fp, #-44]	; 0xffffffd4
   31518:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3151c:	cmp	r0, #0
   31520:	bne	315fc <__assert_fail@plt+0x200f8>
   31524:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31528:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3152c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31534:	subs	r0, r0, r2
   31538:	sbcs	r1, r1, r3
   3153c:	str	r0, [sp, #60]	; 0x3c
   31540:	str	r1, [sp, #56]	; 0x38
   31544:	blt	31574 <__assert_fail@plt+0x20070>
   31548:	b	3154c <__assert_fail@plt+0x20048>
   3154c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31550:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31554:	ldr	r2, [fp, #-56]	; 0xffffffc8
   31558:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3155c:	subs	r0, r0, r2
   31560:	sbcs	r1, r1, r3
   31564:	str	r0, [sp, #52]	; 0x34
   31568:	str	r1, [sp, #48]	; 0x30
   3156c:	bge	315f8 <__assert_fail@plt+0x200f4>
   31570:	b	31574 <__assert_fail@plt+0x20070>
   31574:	mov	r0, #1
   31578:	str	r0, [fp, #-44]	; 0xffffffd4
   3157c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31580:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31584:	subs	r0, r0, #1073741824	; 0x40000000
   31588:	sbcs	r1, r1, #0
   3158c:	str	r0, [sp, #44]	; 0x2c
   31590:	str	r1, [sp, #40]	; 0x28
   31594:	blt	315ac <__assert_fail@plt+0x200a8>
   31598:	b	3159c <__assert_fail@plt+0x20098>
   3159c:	bl	113fc <__errno_location@plt>
   315a0:	movw	lr, #75	; 0x4b
   315a4:	str	lr, [r0]
   315a8:	b	315f4 <__assert_fail@plt+0x200f0>
   315ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   315b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   315b4:	mvn	r2, #1073741824	; 0x40000000
   315b8:	subs	r0, r2, r0
   315bc:	mvn	r2, #0
   315c0:	sbcs	r1, r2, r1
   315c4:	str	r0, [sp, #36]	; 0x24
   315c8:	str	r1, [sp, #32]
   315cc:	blt	315e4 <__assert_fail@plt+0x200e0>
   315d0:	b	315d4 <__assert_fail@plt+0x200d0>
   315d4:	bl	113fc <__errno_location@plt>
   315d8:	movw	lr, #75	; 0x4b
   315dc:	str	lr, [r0]
   315e0:	b	315f0 <__assert_fail@plt+0x200ec>
   315e4:	bl	113fc <__errno_location@plt>
   315e8:	movw	lr, #34	; 0x22
   315ec:	str	lr, [r0]
   315f0:	b	315f4 <__assert_fail@plt+0x200f0>
   315f4:	b	315f8 <__assert_fail@plt+0x200f4>
   315f8:	b	31638 <__assert_fail@plt+0x20134>
   315fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31600:	cmp	r0, #1
   31604:	bne	31618 <__assert_fail@plt+0x20114>
   31608:	bl	113fc <__errno_location@plt>
   3160c:	movw	lr, #75	; 0x4b
   31610:	str	lr, [r0]
   31614:	b	31634 <__assert_fail@plt+0x20130>
   31618:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3161c:	cmp	r0, #3
   31620:	bne	31630 <__assert_fail@plt+0x2012c>
   31624:	bl	113fc <__errno_location@plt>
   31628:	movw	lr, #0
   3162c:	str	lr, [r0]
   31630:	b	31634 <__assert_fail@plt+0x20130>
   31634:	b	31638 <__assert_fail@plt+0x20134>
   31638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3163c:	cmp	r0, #0
   31640:	beq	316dc <__assert_fail@plt+0x201d8>
   31644:	ldr	r0, [fp, #24]
   31648:	cmp	r0, #0
   3164c:	beq	3165c <__assert_fail@plt+0x20158>
   31650:	ldr	r0, [fp, #24]
   31654:	str	r0, [sp, #28]
   31658:	b	31668 <__assert_fail@plt+0x20164>
   3165c:	movw	r0, #1
   31660:	str	r0, [sp, #28]
   31664:	b	31668 <__assert_fail@plt+0x20164>
   31668:	ldr	r0, [sp, #28]
   3166c:	str	r0, [sp, #24]
   31670:	bl	113fc <__errno_location@plt>
   31674:	ldr	r0, [r0]
   31678:	cmp	r0, #22
   3167c:	bne	3168c <__assert_fail@plt+0x20188>
   31680:	movw	r0, #0
   31684:	str	r0, [sp, #20]
   31688:	b	31698 <__assert_fail@plt+0x20194>
   3168c:	bl	113fc <__errno_location@plt>
   31690:	ldr	r0, [r0]
   31694:	str	r0, [sp, #20]
   31698:	ldr	r0, [sp, #20]
   3169c:	ldr	r3, [fp, #20]
   316a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   316a4:	str	r0, [sp, #16]
   316a8:	mov	r0, r1
   316ac:	str	r3, [sp, #12]
   316b0:	bl	15c84 <__assert_fail@plt+0x4780>
   316b4:	ldr	r1, [sp, #24]
   316b8:	str	r0, [sp, #8]
   316bc:	mov	r0, r1
   316c0:	ldr	r1, [sp, #16]
   316c4:	movw	r2, #32819	; 0x8033
   316c8:	movt	r2, #3
   316cc:	ldr	r3, [sp, #12]
   316d0:	ldr	lr, [sp, #8]
   316d4:	str	lr, [sp]
   316d8:	bl	1136c <error@plt>
   316dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   316e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   316e4:	sub	sp, fp, #16
   316e8:	pop	{r4, r5, r6, sl, fp, pc}
   316ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   316f0:	add	fp, sp, #24
   316f4:	sub	sp, sp, #56	; 0x38
   316f8:	ldr	r1, [fp, #12]
   316fc:	ldr	ip, [fp, #8]
   31700:	ldr	lr, [fp, #24]
   31704:	ldr	r4, [fp, #20]
   31708:	ldr	r5, [fp, #16]
   3170c:	str	r0, [fp, #-28]	; 0xffffffe4
   31710:	str	r3, [sp, #44]	; 0x2c
   31714:	str	r2, [sp, #40]	; 0x28
   31718:	str	r1, [sp, #36]	; 0x24
   3171c:	str	ip, [sp, #32]
   31720:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31724:	ldr	r2, [sp, #40]	; 0x28
   31728:	ldr	r3, [sp, #44]	; 0x2c
   3172c:	ldr	r1, [sp, #32]
   31730:	ldr	ip, [sp, #36]	; 0x24
   31734:	ldr	r6, [fp, #16]
   31738:	ldr	r7, [fp, #20]
   3173c:	ldr	r8, [fp, #24]
   31740:	mov	r9, sp
   31744:	str	r8, [r9, #16]
   31748:	str	r7, [r9, #12]
   3174c:	str	r6, [r9, #8]
   31750:	str	ip, [r9, #4]
   31754:	str	r1, [r9]
   31758:	mov	r1, #10
   3175c:	str	lr, [sp, #28]
   31760:	str	r4, [sp, #24]
   31764:	str	r5, [sp, #20]
   31768:	bl	314a8 <__assert_fail@plt+0x1ffa4>
   3176c:	sub	sp, fp, #24
   31770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31774:	push	{fp, lr}
   31778:	mov	fp, sp
   3177c:	sub	sp, sp, #80	; 0x50
   31780:	ldr	ip, [fp, #8]
   31784:	str	r0, [fp, #-8]
   31788:	str	r1, [fp, #-12]
   3178c:	str	r2, [fp, #-16]
   31790:	str	r3, [fp, #-20]	; 0xffffffec
   31794:	movw	r0, #0
   31798:	str	r0, [sp, #36]	; 0x24
   3179c:	ldr	r1, [fp, #-16]
   317a0:	cmp	r0, r1
   317a4:	str	ip, [sp, #20]
   317a8:	bgt	317bc <__assert_fail@plt+0x202b8>
   317ac:	ldr	r0, [fp, #-16]
   317b0:	cmp	r0, #36	; 0x24
   317b4:	bgt	317bc <__assert_fail@plt+0x202b8>
   317b8:	b	317dc <__assert_fail@plt+0x202d8>
   317bc:	movw	r0, #34456	; 0x8698
   317c0:	movt	r0, #3
   317c4:	movw	r1, #34494	; 0x86be
   317c8:	movt	r1, #3
   317cc:	movw	r2, #85	; 0x55
   317d0:	movw	r3, #34510	; 0x86ce
   317d4:	movt	r3, #3
   317d8:	bl	11504 <__assert_fail@plt>
   317dc:	ldr	r0, [fp, #-12]
   317e0:	movw	r1, #0
   317e4:	cmp	r0, r1
   317e8:	beq	317f8 <__assert_fail@plt+0x202f4>
   317ec:	ldr	r0, [fp, #-12]
   317f0:	str	r0, [sp, #16]
   317f4:	b	31804 <__assert_fail@plt+0x20300>
   317f8:	sub	r0, fp, #24
   317fc:	str	r0, [sp, #16]
   31800:	b	31804 <__assert_fail@plt+0x20300>
   31804:	ldr	r0, [sp, #16]
   31808:	str	r0, [fp, #-28]	; 0xffffffe4
   3180c:	bl	113fc <__errno_location@plt>
   31810:	mov	lr, #0
   31814:	str	lr, [r0]
   31818:	ldr	r0, [fp, #-8]
   3181c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31820:	ldr	r2, [fp, #-16]
   31824:	bl	11444 <strtoimax@plt>
   31828:	str	r1, [sp, #44]	; 0x2c
   3182c:	str	r0, [sp, #40]	; 0x28
   31830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31834:	ldr	r0, [r0]
   31838:	ldr	r1, [fp, #-8]
   3183c:	cmp	r0, r1
   31840:	bne	318ac <__assert_fail@plt+0x203a8>
   31844:	ldr	r0, [fp, #8]
   31848:	movw	r1, #0
   3184c:	cmp	r0, r1
   31850:	beq	3189c <__assert_fail@plt+0x20398>
   31854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31858:	ldr	r0, [r0]
   3185c:	ldrb	r0, [r0]
   31860:	cmp	r0, #0
   31864:	beq	3189c <__assert_fail@plt+0x20398>
   31868:	ldr	r0, [fp, #8]
   3186c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31870:	ldr	r1, [r1]
   31874:	ldrb	r1, [r1]
   31878:	bl	113e4 <strchr@plt>
   3187c:	movw	r1, #0
   31880:	cmp	r0, r1
   31884:	beq	3189c <__assert_fail@plt+0x20398>
   31888:	mov	r0, #0
   3188c:	str	r0, [sp, #44]	; 0x2c
   31890:	mov	r0, #1
   31894:	str	r0, [sp, #40]	; 0x28
   31898:	b	318a8 <__assert_fail@plt+0x203a4>
   3189c:	movw	r0, #4
   318a0:	str	r0, [fp, #-4]
   318a4:	b	31d94 <__assert_fail@plt+0x20890>
   318a8:	b	318e4 <__assert_fail@plt+0x203e0>
   318ac:	bl	113fc <__errno_location@plt>
   318b0:	ldr	r0, [r0]
   318b4:	cmp	r0, #0
   318b8:	beq	318e0 <__assert_fail@plt+0x203dc>
   318bc:	bl	113fc <__errno_location@plt>
   318c0:	ldr	r0, [r0]
   318c4:	cmp	r0, #34	; 0x22
   318c8:	beq	318d8 <__assert_fail@plt+0x203d4>
   318cc:	movw	r0, #4
   318d0:	str	r0, [fp, #-4]
   318d4:	b	31d94 <__assert_fail@plt+0x20890>
   318d8:	movw	r0, #1
   318dc:	str	r0, [sp, #36]	; 0x24
   318e0:	b	318e4 <__assert_fail@plt+0x203e0>
   318e4:	ldr	r0, [fp, #8]
   318e8:	movw	r1, #0
   318ec:	cmp	r0, r1
   318f0:	bne	31914 <__assert_fail@plt+0x20410>
   318f4:	ldr	r0, [sp, #40]	; 0x28
   318f8:	ldr	r1, [sp, #44]	; 0x2c
   318fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   31900:	str	r1, [r2, #4]
   31904:	str	r0, [r2]
   31908:	ldr	r0, [sp, #36]	; 0x24
   3190c:	str	r0, [fp, #-4]
   31910:	b	31d94 <__assert_fail@plt+0x20890>
   31914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31918:	ldr	r0, [r0]
   3191c:	ldrb	r0, [r0]
   31920:	cmp	r0, #0
   31924:	beq	31d78 <__assert_fail@plt+0x20874>
   31928:	movw	r0, #1024	; 0x400
   3192c:	str	r0, [sp, #32]
   31930:	movw	r0, #1
   31934:	str	r0, [sp, #28]
   31938:	ldr	r0, [fp, #8]
   3193c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31940:	ldr	r1, [r1]
   31944:	ldrb	r1, [r1]
   31948:	bl	113e4 <strchr@plt>
   3194c:	movw	r1, #0
   31950:	cmp	r0, r1
   31954:	bne	3197c <__assert_fail@plt+0x20478>
   31958:	ldr	r0, [sp, #40]	; 0x28
   3195c:	ldr	r1, [sp, #44]	; 0x2c
   31960:	ldr	r2, [fp, #-20]	; 0xffffffec
   31964:	str	r1, [r2, #4]
   31968:	str	r0, [r2]
   3196c:	ldr	r0, [sp, #36]	; 0x24
   31970:	orr	r0, r0, #2
   31974:	str	r0, [fp, #-4]
   31978:	b	31d94 <__assert_fail@plt+0x20890>
   3197c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31980:	ldr	r0, [r0]
   31984:	ldrb	r0, [r0]
   31988:	sub	r0, r0, #69	; 0x45
   3198c:	cmp	r0, #47	; 0x2f
   31990:	str	r0, [sp, #12]
   31994:	bhi	31b00 <__assert_fail@plt+0x205fc>
   31998:	add	r0, pc, #8
   3199c:	ldr	r1, [sp, #12]
   319a0:	ldr	r0, [r0, r1, lsl #2]
   319a4:	mov	pc, r0
   319a8:	andeq	r1, r3, r8, ror #20
   319ac:	andeq	r1, r3, r0, lsl #22
   319b0:	andeq	r1, r3, r8, ror #20
   319b4:	andeq	r1, r3, r0, lsl #22
   319b8:	andeq	r1, r3, r0, lsl #22
   319bc:	andeq	r1, r3, r0, lsl #22
   319c0:	andeq	r1, r3, r8, ror #20
   319c4:	andeq	r1, r3, r0, lsl #22
   319c8:	andeq	r1, r3, r8, ror #20
   319cc:	andeq	r1, r3, r0, lsl #22
   319d0:	andeq	r1, r3, r0, lsl #22
   319d4:	andeq	r1, r3, r8, ror #20
   319d8:	andeq	r1, r3, r0, lsl #22
   319dc:	andeq	r1, r3, r0, lsl #22
   319e0:	andeq	r1, r3, r0, lsl #22
   319e4:	andeq	r1, r3, r8, ror #20
   319e8:	andeq	r1, r3, r0, lsl #22
   319ec:	andeq	r1, r3, r0, lsl #22
   319f0:	andeq	r1, r3, r0, lsl #22
   319f4:	andeq	r1, r3, r0, lsl #22
   319f8:	andeq	r1, r3, r8, ror #20
   319fc:	andeq	r1, r3, r8, ror #20
   31a00:	andeq	r1, r3, r0, lsl #22
   31a04:	andeq	r1, r3, r0, lsl #22
   31a08:	andeq	r1, r3, r0, lsl #22
   31a0c:	andeq	r1, r3, r0, lsl #22
   31a10:	andeq	r1, r3, r0, lsl #22
   31a14:	andeq	r1, r3, r0, lsl #22
   31a18:	andeq	r1, r3, r0, lsl #22
   31a1c:	andeq	r1, r3, r0, lsl #22
   31a20:	andeq	r1, r3, r0, lsl #22
   31a24:	andeq	r1, r3, r0, lsl #22
   31a28:	andeq	r1, r3, r0, lsl #22
   31a2c:	andeq	r1, r3, r0, lsl #22
   31a30:	andeq	r1, r3, r8, ror #20
   31a34:	andeq	r1, r3, r0, lsl #22
   31a38:	andeq	r1, r3, r0, lsl #22
   31a3c:	andeq	r1, r3, r0, lsl #22
   31a40:	andeq	r1, r3, r8, ror #20
   31a44:	andeq	r1, r3, r0, lsl #22
   31a48:	andeq	r1, r3, r8, ror #20
   31a4c:	andeq	r1, r3, r0, lsl #22
   31a50:	andeq	r1, r3, r0, lsl #22
   31a54:	andeq	r1, r3, r0, lsl #22
   31a58:	andeq	r1, r3, r0, lsl #22
   31a5c:	andeq	r1, r3, r0, lsl #22
   31a60:	andeq	r1, r3, r0, lsl #22
   31a64:	andeq	r1, r3, r8, ror #20
   31a68:	ldr	r0, [fp, #8]
   31a6c:	movw	r1, #48	; 0x30
   31a70:	bl	113e4 <strchr@plt>
   31a74:	movw	r1, #0
   31a78:	cmp	r0, r1
   31a7c:	beq	31afc <__assert_fail@plt+0x205f8>
   31a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31a84:	ldr	r0, [r0]
   31a88:	ldrb	r0, [r0, #1]
   31a8c:	mov	r1, r0
   31a90:	cmp	r0, #66	; 0x42
   31a94:	str	r1, [sp, #8]
   31a98:	beq	31ae4 <__assert_fail@plt+0x205e0>
   31a9c:	b	31aa0 <__assert_fail@plt+0x2059c>
   31aa0:	ldr	r0, [sp, #8]
   31aa4:	cmp	r0, #68	; 0x44
   31aa8:	beq	31ae4 <__assert_fail@plt+0x205e0>
   31aac:	b	31ab0 <__assert_fail@plt+0x205ac>
   31ab0:	ldr	r0, [sp, #8]
   31ab4:	cmp	r0, #105	; 0x69
   31ab8:	bne	31af8 <__assert_fail@plt+0x205f4>
   31abc:	b	31ac0 <__assert_fail@plt+0x205bc>
   31ac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31ac4:	ldr	r0, [r0]
   31ac8:	ldrb	r0, [r0, #2]
   31acc:	cmp	r0, #66	; 0x42
   31ad0:	bne	31ae0 <__assert_fail@plt+0x205dc>
   31ad4:	ldr	r0, [sp, #28]
   31ad8:	add	r0, r0, #2
   31adc:	str	r0, [sp, #28]
   31ae0:	b	31af8 <__assert_fail@plt+0x205f4>
   31ae4:	movw	r0, #1000	; 0x3e8
   31ae8:	str	r0, [sp, #32]
   31aec:	ldr	r0, [sp, #28]
   31af0:	add	r0, r0, #1
   31af4:	str	r0, [sp, #28]
   31af8:	b	31afc <__assert_fail@plt+0x205f8>
   31afc:	b	31b00 <__assert_fail@plt+0x205fc>
   31b00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31b04:	ldr	r0, [r0]
   31b08:	ldrb	r0, [r0]
   31b0c:	sub	r0, r0, #66	; 0x42
   31b10:	cmp	r0, #53	; 0x35
   31b14:	str	r0, [sp, #4]
   31b18:	bhi	31d0c <__assert_fail@plt+0x20808>
   31b1c:	add	r0, pc, #8
   31b20:	ldr	r1, [sp, #4]
   31b24:	ldr	r0, [r0, r1, lsl #2]
   31b28:	mov	pc, r0
   31b2c:	andeq	r1, r3, r8, lsl ip
   31b30:	andeq	r1, r3, ip, lsl #26
   31b34:	andeq	r1, r3, ip, lsl #26
   31b38:	andeq	r1, r3, r8, lsr ip
   31b3c:	andeq	r1, r3, ip, lsl #26
   31b40:	andeq	r1, r3, r0, asr ip
   31b44:	andeq	r1, r3, ip, lsl #26
   31b48:	andeq	r1, r3, ip, lsl #26
   31b4c:	andeq	r1, r3, ip, lsl #26
   31b50:	andeq	r1, r3, r8, ror #24
   31b54:	andeq	r1, r3, ip, lsl #26
   31b58:	andeq	r1, r3, r0, lsl #25
   31b5c:	andeq	r1, r3, ip, lsl #26
   31b60:	andeq	r1, r3, ip, lsl #26
   31b64:	muleq	r3, r8, ip
   31b68:	andeq	r1, r3, ip, lsl #26
   31b6c:	andeq	r1, r3, ip, lsl #26
   31b70:	andeq	r1, r3, ip, lsl #26
   31b74:			; <UNDEFINED> instruction: 0x00031cb0
   31b78:	andeq	r1, r3, ip, lsl #26
   31b7c:	andeq	r1, r3, ip, lsl #26
   31b80:	andeq	r1, r3, ip, lsl #26
   31b84:	andeq	r1, r3, ip, lsl #26
   31b88:	ldrdeq	r1, [r3], -ip
   31b8c:	strdeq	r1, [r3], -r4
   31b90:	andeq	r1, r3, ip, lsl #26
   31b94:	andeq	r1, r3, ip, lsl #26
   31b98:	andeq	r1, r3, ip, lsl #26
   31b9c:	andeq	r1, r3, ip, lsl #26
   31ba0:	andeq	r1, r3, ip, lsl #26
   31ba4:	andeq	r1, r3, ip, lsl #26
   31ba8:	andeq	r1, r3, ip, lsl #26
   31bac:	andeq	r1, r3, r4, lsl #24
   31bb0:	andeq	r1, r3, ip, lsr #24
   31bb4:	andeq	r1, r3, ip, lsl #26
   31bb8:	andeq	r1, r3, ip, lsl #26
   31bbc:	andeq	r1, r3, ip, lsl #26
   31bc0:	andeq	r1, r3, r0, asr ip
   31bc4:	andeq	r1, r3, ip, lsl #26
   31bc8:	andeq	r1, r3, ip, lsl #26
   31bcc:	andeq	r1, r3, ip, lsl #26
   31bd0:	andeq	r1, r3, r8, ror #24
   31bd4:	andeq	r1, r3, ip, lsl #26
   31bd8:	andeq	r1, r3, r0, lsl #25
   31bdc:	andeq	r1, r3, ip, lsl #26
   31be0:	andeq	r1, r3, ip, lsl #26
   31be4:	andeq	r1, r3, ip, lsl #26
   31be8:	andeq	r1, r3, ip, lsl #26
   31bec:	andeq	r1, r3, ip, lsl #26
   31bf0:	andeq	r1, r3, ip, lsl #26
   31bf4:			; <UNDEFINED> instruction: 0x00031cb0
   31bf8:	andeq	r1, r3, ip, lsl #26
   31bfc:	andeq	r1, r3, ip, lsl #26
   31c00:	andeq	r1, r3, r8, asr #25
   31c04:	add	r0, sp, #40	; 0x28
   31c08:	movw	r1, #512	; 0x200
   31c0c:	bl	31da0 <__assert_fail@plt+0x2089c>
   31c10:	str	r0, [sp, #24]
   31c14:	b	31d30 <__assert_fail@plt+0x2082c>
   31c18:	add	r0, sp, #40	; 0x28
   31c1c:	movw	r1, #1024	; 0x400
   31c20:	bl	31da0 <__assert_fail@plt+0x2089c>
   31c24:	str	r0, [sp, #24]
   31c28:	b	31d30 <__assert_fail@plt+0x2082c>
   31c2c:	movw	r0, #0
   31c30:	str	r0, [sp, #24]
   31c34:	b	31d30 <__assert_fail@plt+0x2082c>
   31c38:	ldr	r1, [sp, #32]
   31c3c:	add	r0, sp, #40	; 0x28
   31c40:	movw	r2, #6
   31c44:	bl	33a48 <__assert_fail@plt+0x22544>
   31c48:	str	r0, [sp, #24]
   31c4c:	b	31d30 <__assert_fail@plt+0x2082c>
   31c50:	ldr	r1, [sp, #32]
   31c54:	add	r0, sp, #40	; 0x28
   31c58:	movw	r2, #3
   31c5c:	bl	33a48 <__assert_fail@plt+0x22544>
   31c60:	str	r0, [sp, #24]
   31c64:	b	31d30 <__assert_fail@plt+0x2082c>
   31c68:	ldr	r1, [sp, #32]
   31c6c:	add	r0, sp, #40	; 0x28
   31c70:	movw	r2, #1
   31c74:	bl	33a48 <__assert_fail@plt+0x22544>
   31c78:	str	r0, [sp, #24]
   31c7c:	b	31d30 <__assert_fail@plt+0x2082c>
   31c80:	ldr	r1, [sp, #32]
   31c84:	add	r0, sp, #40	; 0x28
   31c88:	movw	r2, #2
   31c8c:	bl	33a48 <__assert_fail@plt+0x22544>
   31c90:	str	r0, [sp, #24]
   31c94:	b	31d30 <__assert_fail@plt+0x2082c>
   31c98:	ldr	r1, [sp, #32]
   31c9c:	add	r0, sp, #40	; 0x28
   31ca0:	movw	r2, #5
   31ca4:	bl	33a48 <__assert_fail@plt+0x22544>
   31ca8:	str	r0, [sp, #24]
   31cac:	b	31d30 <__assert_fail@plt+0x2082c>
   31cb0:	ldr	r1, [sp, #32]
   31cb4:	add	r0, sp, #40	; 0x28
   31cb8:	movw	r2, #4
   31cbc:	bl	33a48 <__assert_fail@plt+0x22544>
   31cc0:	str	r0, [sp, #24]
   31cc4:	b	31d30 <__assert_fail@plt+0x2082c>
   31cc8:	add	r0, sp, #40	; 0x28
   31ccc:	movw	r1, #2
   31cd0:	bl	31da0 <__assert_fail@plt+0x2089c>
   31cd4:	str	r0, [sp, #24]
   31cd8:	b	31d30 <__assert_fail@plt+0x2082c>
   31cdc:	ldr	r1, [sp, #32]
   31ce0:	add	r0, sp, #40	; 0x28
   31ce4:	movw	r2, #8
   31ce8:	bl	33a48 <__assert_fail@plt+0x22544>
   31cec:	str	r0, [sp, #24]
   31cf0:	b	31d30 <__assert_fail@plt+0x2082c>
   31cf4:	ldr	r1, [sp, #32]
   31cf8:	add	r0, sp, #40	; 0x28
   31cfc:	movw	r2, #7
   31d00:	bl	33a48 <__assert_fail@plt+0x22544>
   31d04:	str	r0, [sp, #24]
   31d08:	b	31d30 <__assert_fail@plt+0x2082c>
   31d0c:	ldr	r0, [sp, #40]	; 0x28
   31d10:	ldr	r1, [sp, #44]	; 0x2c
   31d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   31d18:	str	r1, [r2, #4]
   31d1c:	str	r0, [r2]
   31d20:	ldr	r0, [sp, #36]	; 0x24
   31d24:	orr	r0, r0, #2
   31d28:	str	r0, [fp, #-4]
   31d2c:	b	31d94 <__assert_fail@plt+0x20890>
   31d30:	ldr	r0, [sp, #24]
   31d34:	ldr	r1, [sp, #36]	; 0x24
   31d38:	orr	r0, r1, r0
   31d3c:	str	r0, [sp, #36]	; 0x24
   31d40:	ldr	r0, [sp, #28]
   31d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31d48:	ldr	r2, [r1]
   31d4c:	add	r0, r2, r0
   31d50:	str	r0, [r1]
   31d54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31d58:	ldr	r0, [r0]
   31d5c:	ldrsb	r0, [r0]
   31d60:	cmp	r0, #0
   31d64:	beq	31d74 <__assert_fail@plt+0x20870>
   31d68:	ldr	r0, [sp, #36]	; 0x24
   31d6c:	orr	r0, r0, #2
   31d70:	str	r0, [sp, #36]	; 0x24
   31d74:	b	31d78 <__assert_fail@plt+0x20874>
   31d78:	ldr	r0, [sp, #40]	; 0x28
   31d7c:	ldr	r1, [sp, #44]	; 0x2c
   31d80:	ldr	r2, [fp, #-20]	; 0xffffffec
   31d84:	str	r1, [r2, #4]
   31d88:	str	r0, [r2]
   31d8c:	ldr	r0, [sp, #36]	; 0x24
   31d90:	str	r0, [fp, #-4]
   31d94:	ldr	r0, [fp, #-4]
   31d98:	mov	sp, fp
   31d9c:	pop	{fp, pc}
   31da0:	push	{fp, lr}
   31da4:	mov	fp, sp
   31da8:	sub	sp, sp, #752	; 0x2f0
   31dac:	str	r0, [fp, #-8]
   31db0:	str	r1, [fp, #-12]
   31db4:	b	3233c <__assert_fail@plt+0x20e38>
   31db8:	b	31dbc <__assert_fail@plt+0x208b8>
   31dbc:	ldr	r0, [fp, #-12]
   31dc0:	cmp	r0, #0
   31dc4:	bge	31f54 <__assert_fail@plt+0x20a50>
   31dc8:	ldr	r0, [fp, #-8]
   31dcc:	ldr	r0, [r0, #4]
   31dd0:	cmn	r0, #1
   31dd4:	bgt	31e8c <__assert_fail@plt+0x20988>
   31dd8:	b	31ddc <__assert_fail@plt+0x208d8>
   31ddc:	b	31de0 <__assert_fail@plt+0x208dc>
   31de0:	ldr	r0, [fp, #-8]
   31de4:	ldr	r1, [r0]
   31de8:	ldr	r0, [r0, #4]
   31dec:	ldr	r2, [fp, #-12]
   31df0:	mov	r3, #127	; 0x7f
   31df4:	sdiv	r2, r3, r2
   31df8:	subs	r1, r1, r2
   31dfc:	sbcs	r0, r0, r2, asr #31
   31e00:	str	r1, [fp, #-28]	; 0xffffffe4
   31e04:	str	r0, [fp, #-32]	; 0xffffffe0
   31e08:	blt	3203c <__assert_fail@plt+0x20b38>
   31e0c:	b	32060 <__assert_fail@plt+0x20b5c>
   31e10:	b	31e14 <__assert_fail@plt+0x20910>
   31e14:	ldr	r0, [pc, #4064]	; 32dfc <__assert_fail@plt+0x218f8>
   31e18:	ldr	r1, [fp, #-12]
   31e1c:	cmp	r1, r0
   31e20:	blt	31e38 <__assert_fail@plt+0x20934>
   31e24:	b	31e44 <__assert_fail@plt+0x20940>
   31e28:	ldr	r0, [fp, #-12]
   31e2c:	movw	r1, #0
   31e30:	cmp	r1, r0
   31e34:	bge	31e44 <__assert_fail@plt+0x20940>
   31e38:	movw	r0, #0
   31e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   31e40:	b	31e5c <__assert_fail@plt+0x20958>
   31e44:	ldr	r0, [fp, #-12]
   31e48:	movw	r1, #0
   31e4c:	sub	r0, r1, r0
   31e50:	movw	r1, #127	; 0x7f
   31e54:	sdiv	r0, r1, r0
   31e58:	str	r0, [fp, #-36]	; 0xffffffdc
   31e5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31e60:	ldr	r1, [fp, #-8]
   31e64:	ldr	r2, [r1]
   31e68:	ldr	r1, [r1, #4]
   31e6c:	mvn	r1, r1
   31e70:	mvn	r2, r2
   31e74:	subs	r2, r2, r0
   31e78:	sbcs	r0, r1, r0, asr #31
   31e7c:	str	r2, [fp, #-40]	; 0xffffffd8
   31e80:	str	r0, [fp, #-44]	; 0xffffffd4
   31e84:	bge	3203c <__assert_fail@plt+0x20b38>
   31e88:	b	32060 <__assert_fail@plt+0x20b5c>
   31e8c:	b	31e90 <__assert_fail@plt+0x2098c>
   31e90:	b	31f24 <__assert_fail@plt+0x20a20>
   31e94:	b	31f24 <__assert_fail@plt+0x20a20>
   31e98:	ldr	r0, [fp, #-12]
   31e9c:	cmn	r0, #1
   31ea0:	bne	31f24 <__assert_fail@plt+0x20a20>
   31ea4:	b	31ea8 <__assert_fail@plt+0x209a4>
   31ea8:	ldr	r0, [fp, #-8]
   31eac:	ldr	r1, [r0]
   31eb0:	ldr	r0, [r0, #4]
   31eb4:	subs	r1, r1, #128	; 0x80
   31eb8:	sbc	r0, r0, #0
   31ebc:	rsbs	r1, r1, #0
   31ec0:	rscs	r0, r0, #0
   31ec4:	str	r1, [fp, #-48]	; 0xffffffd0
   31ec8:	str	r0, [fp, #-52]	; 0xffffffcc
   31ecc:	blt	3203c <__assert_fail@plt+0x20b38>
   31ed0:	b	32060 <__assert_fail@plt+0x20b5c>
   31ed4:	ldr	r0, [fp, #-8]
   31ed8:	ldr	r1, [r0]
   31edc:	ldr	r0, [r0, #4]
   31ee0:	subs	r1, r1, #1
   31ee4:	sbcs	r0, r0, #0
   31ee8:	str	r1, [fp, #-56]	; 0xffffffc8
   31eec:	str	r0, [fp, #-60]	; 0xffffffc4
   31ef0:	blt	32060 <__assert_fail@plt+0x20b5c>
   31ef4:	b	31ef8 <__assert_fail@plt+0x209f4>
   31ef8:	ldr	r0, [fp, #-8]
   31efc:	ldr	r1, [r0]
   31f00:	ldr	r0, [r0, #4]
   31f04:	subs	r1, r1, #1
   31f08:	sbc	r0, r0, #0
   31f0c:	rsbs	r1, r1, #127	; 0x7f
   31f10:	rscs	r0, r0, #0
   31f14:	str	r1, [fp, #-64]	; 0xffffffc0
   31f18:	str	r0, [fp, #-68]	; 0xffffffbc
   31f1c:	blt	3203c <__assert_fail@plt+0x20b38>
   31f20:	b	32060 <__assert_fail@plt+0x20b5c>
   31f24:	ldr	r0, [fp, #-12]
   31f28:	mvn	r1, #127	; 0x7f
   31f2c:	sdiv	r0, r1, r0
   31f30:	ldr	r1, [fp, #-8]
   31f34:	ldr	r2, [r1]
   31f38:	ldr	r1, [r1, #4]
   31f3c:	subs	r2, r0, r2
   31f40:	rscs	r0, r1, r0, asr #31
   31f44:	str	r2, [fp, #-72]	; 0xffffffb8
   31f48:	str	r0, [fp, #-76]	; 0xffffffb4
   31f4c:	blt	3203c <__assert_fail@plt+0x20b38>
   31f50:	b	32060 <__assert_fail@plt+0x20b5c>
   31f54:	ldr	r0, [fp, #-12]
   31f58:	cmp	r0, #0
   31f5c:	bne	31f64 <__assert_fail@plt+0x20a60>
   31f60:	b	32060 <__assert_fail@plt+0x20b5c>
   31f64:	ldr	r0, [fp, #-8]
   31f68:	ldr	r0, [r0, #4]
   31f6c:	cmn	r0, #1
   31f70:	bgt	3200c <__assert_fail@plt+0x20b08>
   31f74:	b	31f78 <__assert_fail@plt+0x20a74>
   31f78:	b	31f7c <__assert_fail@plt+0x20a78>
   31f7c:	b	31fd8 <__assert_fail@plt+0x20ad4>
   31f80:	b	31fd8 <__assert_fail@plt+0x20ad4>
   31f84:	ldr	r0, [fp, #-8]
   31f88:	ldr	r1, [r0]
   31f8c:	ldr	r0, [r0, #4]
   31f90:	and	r0, r1, r0
   31f94:	cmn	r0, #1
   31f98:	bne	31fd8 <__assert_fail@plt+0x20ad4>
   31f9c:	b	31fa0 <__assert_fail@plt+0x20a9c>
   31fa0:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31fa4:	ldr	r0, [fp, #-12]
   31fa8:	mvn	r1, #127	; 0x7f
   31fac:	add	r0, r0, r1
   31fb0:	movw	r1, #0
   31fb4:	cmp	r1, r0
   31fb8:	blt	3203c <__assert_fail@plt+0x20b38>
   31fbc:	b	32060 <__assert_fail@plt+0x20b5c>
   31fc0:	ldr	r0, [fp, #-12]
   31fc4:	sub	r0, r0, #1
   31fc8:	movw	r1, #127	; 0x7f
   31fcc:	cmp	r1, r0
   31fd0:	blt	3203c <__assert_fail@plt+0x20b38>
   31fd4:	b	32060 <__assert_fail@plt+0x20b5c>
   31fd8:	ldr	r0, [fp, #-8]
   31fdc:	ldr	r2, [r0]
   31fe0:	ldr	r3, [r0, #4]
   31fe4:	mvn	r0, #127	; 0x7f
   31fe8:	mvn	r1, #0
   31fec:	bl	37150 <__assert_fail@plt+0x25c4c>
   31ff0:	ldr	r2, [fp, #-12]
   31ff4:	subs	r0, r0, r2
   31ff8:	sbcs	r1, r1, r2, asr #31
   31ffc:	str	r0, [fp, #-80]	; 0xffffffb0
   32000:	str	r1, [fp, #-84]	; 0xffffffac
   32004:	blt	3203c <__assert_fail@plt+0x20b38>
   32008:	b	32060 <__assert_fail@plt+0x20b5c>
   3200c:	ldr	r0, [fp, #-12]
   32010:	mov	r1, #127	; 0x7f
   32014:	sdiv	r0, r1, r0
   32018:	ldr	r1, [fp, #-8]
   3201c:	ldr	r2, [r1]
   32020:	ldr	r1, [r1, #4]
   32024:	subs	r2, r0, r2
   32028:	rscs	r0, r1, r0, asr #31
   3202c:	str	r2, [fp, #-88]	; 0xffffffa8
   32030:	str	r0, [fp, #-92]	; 0xffffffa4
   32034:	bge	32060 <__assert_fail@plt+0x20b5c>
   32038:	b	3203c <__assert_fail@plt+0x20b38>
   3203c:	ldr	r0, [fp, #-8]
   32040:	ldr	r0, [r0]
   32044:	ldr	r1, [fp, #-12]
   32048:	mul	r0, r0, r1
   3204c:	sxtb	r0, r0
   32050:	asr	r1, r0, #31
   32054:	str	r0, [fp, #-24]	; 0xffffffe8
   32058:	str	r1, [fp, #-20]	; 0xffffffec
   3205c:	b	339e4 <__assert_fail@plt+0x224e0>
   32060:	ldr	r0, [fp, #-8]
   32064:	ldr	r0, [r0]
   32068:	ldr	r1, [fp, #-12]
   3206c:	mul	r0, r0, r1
   32070:	sxtb	r0, r0
   32074:	asr	r1, r0, #31
   32078:	str	r0, [fp, #-24]	; 0xffffffe8
   3207c:	str	r1, [fp, #-20]	; 0xffffffec
   32080:	b	33a18 <__assert_fail@plt+0x22514>
   32084:	ldr	r0, [fp, #-12]
   32088:	cmp	r0, #0
   3208c:	bge	3220c <__assert_fail@plt+0x20d08>
   32090:	ldr	r0, [fp, #-8]
   32094:	ldr	r0, [r0, #4]
   32098:	cmn	r0, #1
   3209c:	bgt	32154 <__assert_fail@plt+0x20c50>
   320a0:	b	320a4 <__assert_fail@plt+0x20ba0>
   320a4:	b	320a8 <__assert_fail@plt+0x20ba4>
   320a8:	ldr	r0, [fp, #-8]
   320ac:	ldr	r1, [r0]
   320b0:	ldr	r0, [r0, #4]
   320b4:	ldr	r2, [fp, #-12]
   320b8:	mov	r3, #255	; 0xff
   320bc:	sdiv	r2, r3, r2
   320c0:	subs	r1, r1, r2
   320c4:	sbcs	r0, r0, r2, asr #31
   320c8:	str	r1, [fp, #-96]	; 0xffffffa0
   320cc:	str	r0, [fp, #-100]	; 0xffffff9c
   320d0:	blt	322f4 <__assert_fail@plt+0x20df0>
   320d4:	b	32318 <__assert_fail@plt+0x20e14>
   320d8:	b	320dc <__assert_fail@plt+0x20bd8>
   320dc:	ldr	r0, [pc, #3352]	; 32dfc <__assert_fail@plt+0x218f8>
   320e0:	ldr	r1, [fp, #-12]
   320e4:	cmp	r1, r0
   320e8:	blt	32100 <__assert_fail@plt+0x20bfc>
   320ec:	b	3210c <__assert_fail@plt+0x20c08>
   320f0:	ldr	r0, [fp, #-12]
   320f4:	movw	r1, #0
   320f8:	cmp	r1, r0
   320fc:	bge	3210c <__assert_fail@plt+0x20c08>
   32100:	movw	r0, #0
   32104:	str	r0, [fp, #-104]	; 0xffffff98
   32108:	b	32124 <__assert_fail@plt+0x20c20>
   3210c:	ldr	r0, [fp, #-12]
   32110:	movw	r1, #0
   32114:	sub	r0, r1, r0
   32118:	movw	r1, #255	; 0xff
   3211c:	sdiv	r0, r1, r0
   32120:	str	r0, [fp, #-104]	; 0xffffff98
   32124:	ldr	r0, [fp, #-104]	; 0xffffff98
   32128:	ldr	r1, [fp, #-8]
   3212c:	ldr	r2, [r1]
   32130:	ldr	r1, [r1, #4]
   32134:	mvn	r1, r1
   32138:	mvn	r2, r2
   3213c:	subs	r2, r2, r0
   32140:	sbcs	r0, r1, r0, asr #31
   32144:	str	r2, [fp, #-108]	; 0xffffff94
   32148:	str	r0, [fp, #-112]	; 0xffffff90
   3214c:	bge	322f4 <__assert_fail@plt+0x20df0>
   32150:	b	32318 <__assert_fail@plt+0x20e14>
   32154:	b	32158 <__assert_fail@plt+0x20c54>
   32158:	b	321dc <__assert_fail@plt+0x20cd8>
   3215c:	b	321dc <__assert_fail@plt+0x20cd8>
   32160:	ldr	r0, [fp, #-12]
   32164:	cmn	r0, #1
   32168:	bne	321dc <__assert_fail@plt+0x20cd8>
   3216c:	b	32170 <__assert_fail@plt+0x20c6c>
   32170:	ldr	r0, [fp, #-8]
   32174:	ldr	r1, [r0]
   32178:	ldr	r0, [r0, #4]
   3217c:	rsbs	r1, r1, #0
   32180:	rscs	r0, r0, #0
   32184:	str	r1, [fp, #-116]	; 0xffffff8c
   32188:	str	r0, [fp, #-120]	; 0xffffff88
   3218c:	blt	322f4 <__assert_fail@plt+0x20df0>
   32190:	b	32318 <__assert_fail@plt+0x20e14>
   32194:	ldr	r0, [fp, #-8]
   32198:	ldr	r1, [r0]
   3219c:	ldr	r0, [r0, #4]
   321a0:	subs	r1, r1, #1
   321a4:	sbcs	r0, r0, #0
   321a8:	str	r1, [fp, #-124]	; 0xffffff84
   321ac:	str	r0, [fp, #-128]	; 0xffffff80
   321b0:	blt	32318 <__assert_fail@plt+0x20e14>
   321b4:	b	321b8 <__assert_fail@plt+0x20cb4>
   321b8:	ldr	r0, [fp, #-8]
   321bc:	ldr	r1, [r0]
   321c0:	ldr	r0, [r0, #4]
   321c4:	subs	r1, r1, #1
   321c8:	sbc	r0, r0, #0
   321cc:	cmn	r0, #1
   321d0:	str	r1, [fp, #-132]	; 0xffffff7c
   321d4:	bgt	322f4 <__assert_fail@plt+0x20df0>
   321d8:	b	32318 <__assert_fail@plt+0x20e14>
   321dc:	ldr	r0, [fp, #-12]
   321e0:	mov	r1, #0
   321e4:	sdiv	r0, r1, r0
   321e8:	ldr	r1, [fp, #-8]
   321ec:	ldr	r2, [r1]
   321f0:	ldr	r1, [r1, #4]
   321f4:	subs	r2, r0, r2
   321f8:	rscs	r0, r1, r0, asr #31
   321fc:	str	r2, [fp, #-136]	; 0xffffff78
   32200:	str	r0, [fp, #-140]	; 0xffffff74
   32204:	blt	322f4 <__assert_fail@plt+0x20df0>
   32208:	b	32318 <__assert_fail@plt+0x20e14>
   3220c:	ldr	r0, [fp, #-12]
   32210:	cmp	r0, #0
   32214:	bne	3221c <__assert_fail@plt+0x20d18>
   32218:	b	32318 <__assert_fail@plt+0x20e14>
   3221c:	ldr	r0, [fp, #-8]
   32220:	ldr	r0, [r0, #4]
   32224:	cmn	r0, #1
   32228:	bgt	322c4 <__assert_fail@plt+0x20dc0>
   3222c:	b	32230 <__assert_fail@plt+0x20d2c>
   32230:	b	32234 <__assert_fail@plt+0x20d30>
   32234:	b	3228c <__assert_fail@plt+0x20d88>
   32238:	b	3228c <__assert_fail@plt+0x20d88>
   3223c:	ldr	r0, [fp, #-8]
   32240:	ldr	r1, [r0]
   32244:	ldr	r0, [r0, #4]
   32248:	and	r0, r1, r0
   3224c:	cmn	r0, #1
   32250:	bne	3228c <__assert_fail@plt+0x20d88>
   32254:	b	32258 <__assert_fail@plt+0x20d54>
   32258:	b	3225c <__assert_fail@plt+0x20d58>
   3225c:	ldr	r0, [fp, #-12]
   32260:	add	r0, r0, #0
   32264:	movw	r1, #0
   32268:	cmp	r1, r0
   3226c:	blt	322f4 <__assert_fail@plt+0x20df0>
   32270:	b	32318 <__assert_fail@plt+0x20e14>
   32274:	ldr	r0, [fp, #-12]
   32278:	sub	r0, r0, #1
   3227c:	mvn	r1, #0
   32280:	cmp	r1, r0
   32284:	blt	322f4 <__assert_fail@plt+0x20df0>
   32288:	b	32318 <__assert_fail@plt+0x20e14>
   3228c:	ldr	r0, [fp, #-8]
   32290:	ldr	r2, [r0]
   32294:	ldr	r3, [r0, #4]
   32298:	mov	r0, #0
   3229c:	str	r0, [fp, #-144]	; 0xffffff70
   322a0:	ldr	r1, [fp, #-144]	; 0xffffff70
   322a4:	bl	37150 <__assert_fail@plt+0x25c4c>
   322a8:	ldr	r2, [fp, #-12]
   322ac:	subs	r0, r0, r2
   322b0:	sbcs	r1, r1, r2, asr #31
   322b4:	str	r0, [fp, #-148]	; 0xffffff6c
   322b8:	str	r1, [fp, #-152]	; 0xffffff68
   322bc:	blt	322f4 <__assert_fail@plt+0x20df0>
   322c0:	b	32318 <__assert_fail@plt+0x20e14>
   322c4:	ldr	r0, [fp, #-12]
   322c8:	mov	r1, #255	; 0xff
   322cc:	sdiv	r0, r1, r0
   322d0:	ldr	r1, [fp, #-8]
   322d4:	ldr	r2, [r1]
   322d8:	ldr	r1, [r1, #4]
   322dc:	subs	r2, r0, r2
   322e0:	rscs	r0, r1, r0, asr #31
   322e4:	str	r2, [fp, #-156]	; 0xffffff64
   322e8:	str	r0, [fp, #-160]	; 0xffffff60
   322ec:	bge	32318 <__assert_fail@plt+0x20e14>
   322f0:	b	322f4 <__assert_fail@plt+0x20df0>
   322f4:	ldr	r0, [fp, #-8]
   322f8:	ldr	r0, [r0]
   322fc:	ldr	r1, [fp, #-12]
   32300:	mul	r0, r0, r1
   32304:	uxtb	r0, r0
   32308:	mov	r1, #0
   3230c:	str	r1, [fp, #-20]	; 0xffffffec
   32310:	str	r0, [fp, #-24]	; 0xffffffe8
   32314:	b	339e4 <__assert_fail@plt+0x224e0>
   32318:	ldr	r0, [fp, #-8]
   3231c:	ldr	r0, [r0]
   32320:	ldr	r1, [fp, #-12]
   32324:	mul	r0, r0, r1
   32328:	uxtb	r0, r0
   3232c:	mov	r1, #0
   32330:	str	r1, [fp, #-20]	; 0xffffffec
   32334:	str	r0, [fp, #-24]	; 0xffffffe8
   32338:	b	33a18 <__assert_fail@plt+0x22514>
   3233c:	b	328d0 <__assert_fail@plt+0x213cc>
   32340:	b	32344 <__assert_fail@plt+0x20e40>
   32344:	ldr	r0, [fp, #-12]
   32348:	cmp	r0, #0
   3234c:	bge	324e4 <__assert_fail@plt+0x20fe0>
   32350:	ldr	r0, [fp, #-8]
   32354:	ldr	r0, [r0, #4]
   32358:	cmn	r0, #1
   3235c:	bgt	32414 <__assert_fail@plt+0x20f10>
   32360:	b	32364 <__assert_fail@plt+0x20e60>
   32364:	b	32368 <__assert_fail@plt+0x20e64>
   32368:	ldr	r0, [fp, #-8]
   3236c:	ldr	r1, [r0]
   32370:	ldr	r0, [r0, #4]
   32374:	ldr	r2, [fp, #-12]
   32378:	movw	r3, #32767	; 0x7fff
   3237c:	sdiv	r2, r3, r2
   32380:	subs	r1, r1, r2
   32384:	sbcs	r0, r0, r2, asr #31
   32388:	str	r1, [fp, #-164]	; 0xffffff5c
   3238c:	str	r0, [fp, #-168]	; 0xffffff58
   32390:	blt	325d0 <__assert_fail@plt+0x210cc>
   32394:	b	325f4 <__assert_fail@plt+0x210f0>
   32398:	b	3239c <__assert_fail@plt+0x20e98>
   3239c:	ldr	r0, [pc, #2648]	; 32dfc <__assert_fail@plt+0x218f8>
   323a0:	ldr	r1, [fp, #-12]
   323a4:	cmp	r1, r0
   323a8:	blt	323c0 <__assert_fail@plt+0x20ebc>
   323ac:	b	323cc <__assert_fail@plt+0x20ec8>
   323b0:	ldr	r0, [fp, #-12]
   323b4:	movw	r1, #0
   323b8:	cmp	r1, r0
   323bc:	bge	323cc <__assert_fail@plt+0x20ec8>
   323c0:	movw	r0, #0
   323c4:	str	r0, [fp, #-172]	; 0xffffff54
   323c8:	b	323e4 <__assert_fail@plt+0x20ee0>
   323cc:	ldr	r0, [fp, #-12]
   323d0:	movw	r1, #0
   323d4:	sub	r0, r1, r0
   323d8:	movw	r1, #32767	; 0x7fff
   323dc:	sdiv	r0, r1, r0
   323e0:	str	r0, [fp, #-172]	; 0xffffff54
   323e4:	ldr	r0, [fp, #-172]	; 0xffffff54
   323e8:	ldr	r1, [fp, #-8]
   323ec:	ldr	r2, [r1]
   323f0:	ldr	r1, [r1, #4]
   323f4:	mvn	r1, r1
   323f8:	mvn	r2, r2
   323fc:	subs	r2, r2, r0
   32400:	sbcs	r0, r1, r0, asr #31
   32404:	str	r2, [fp, #-176]	; 0xffffff50
   32408:	str	r0, [fp, #-180]	; 0xffffff4c
   3240c:	bge	325d0 <__assert_fail@plt+0x210cc>
   32410:	b	325f4 <__assert_fail@plt+0x210f0>
   32414:	b	32418 <__assert_fail@plt+0x20f14>
   32418:	b	324b0 <__assert_fail@plt+0x20fac>
   3241c:	b	324b0 <__assert_fail@plt+0x20fac>
   32420:	ldr	r0, [fp, #-12]
   32424:	cmn	r0, #1
   32428:	bne	324b0 <__assert_fail@plt+0x20fac>
   3242c:	b	32430 <__assert_fail@plt+0x20f2c>
   32430:	ldr	r0, [fp, #-8]
   32434:	ldr	r1, [r0]
   32438:	ldr	r0, [r0, #4]
   3243c:	subs	r1, r1, #32768	; 0x8000
   32440:	sbc	r0, r0, #0
   32444:	rsbs	r1, r1, #0
   32448:	rscs	r0, r0, #0
   3244c:	str	r1, [fp, #-184]	; 0xffffff48
   32450:	str	r0, [fp, #-188]	; 0xffffff44
   32454:	blt	325d0 <__assert_fail@plt+0x210cc>
   32458:	b	325f4 <__assert_fail@plt+0x210f0>
   3245c:	ldr	r0, [fp, #-8]
   32460:	ldr	r1, [r0]
   32464:	ldr	r0, [r0, #4]
   32468:	subs	r1, r1, #1
   3246c:	sbcs	r0, r0, #0
   32470:	str	r1, [fp, #-192]	; 0xffffff40
   32474:	str	r0, [fp, #-196]	; 0xffffff3c
   32478:	blt	325f4 <__assert_fail@plt+0x210f0>
   3247c:	b	32480 <__assert_fail@plt+0x20f7c>
   32480:	ldr	r0, [fp, #-8]
   32484:	ldr	r1, [r0]
   32488:	ldr	r0, [r0, #4]
   3248c:	subs	r1, r1, #1
   32490:	sbc	r0, r0, #0
   32494:	movw	r2, #32767	; 0x7fff
   32498:	subs	r1, r2, r1
   3249c:	rscs	r0, r0, #0
   324a0:	str	r1, [fp, #-200]	; 0xffffff38
   324a4:	str	r0, [fp, #-204]	; 0xffffff34
   324a8:	blt	325d0 <__assert_fail@plt+0x210cc>
   324ac:	b	325f4 <__assert_fail@plt+0x210f0>
   324b0:	ldr	r0, [fp, #-12]
   324b4:	movw	r1, #32768	; 0x8000
   324b8:	movt	r1, #65535	; 0xffff
   324bc:	sdiv	r0, r1, r0
   324c0:	ldr	r1, [fp, #-8]
   324c4:	ldr	r2, [r1]
   324c8:	ldr	r1, [r1, #4]
   324cc:	subs	r2, r0, r2
   324d0:	rscs	r0, r1, r0, asr #31
   324d4:	str	r2, [fp, #-208]	; 0xffffff30
   324d8:	str	r0, [fp, #-212]	; 0xffffff2c
   324dc:	blt	325d0 <__assert_fail@plt+0x210cc>
   324e0:	b	325f4 <__assert_fail@plt+0x210f0>
   324e4:	ldr	r0, [fp, #-12]
   324e8:	cmp	r0, #0
   324ec:	bne	324f4 <__assert_fail@plt+0x20ff0>
   324f0:	b	325f4 <__assert_fail@plt+0x210f0>
   324f4:	ldr	r0, [fp, #-8]
   324f8:	ldr	r0, [r0, #4]
   324fc:	cmn	r0, #1
   32500:	bgt	325a0 <__assert_fail@plt+0x2109c>
   32504:	b	32508 <__assert_fail@plt+0x21004>
   32508:	b	3250c <__assert_fail@plt+0x21008>
   3250c:	b	32568 <__assert_fail@plt+0x21064>
   32510:	b	32568 <__assert_fail@plt+0x21064>
   32514:	ldr	r0, [fp, #-8]
   32518:	ldr	r1, [r0]
   3251c:	ldr	r0, [r0, #4]
   32520:	and	r0, r1, r0
   32524:	cmn	r0, #1
   32528:	bne	32568 <__assert_fail@plt+0x21064>
   3252c:	b	32530 <__assert_fail@plt+0x2102c>
   32530:	b	32534 <__assert_fail@plt+0x21030>
   32534:	ldr	r0, [pc, #4088]	; 33534 <__assert_fail@plt+0x22030>
   32538:	ldr	r1, [fp, #-12]
   3253c:	add	r0, r1, r0
   32540:	movw	r1, #0
   32544:	cmp	r1, r0
   32548:	blt	325d0 <__assert_fail@plt+0x210cc>
   3254c:	b	325f4 <__assert_fail@plt+0x210f0>
   32550:	ldr	r0, [fp, #-12]
   32554:	sub	r0, r0, #1
   32558:	movw	r1, #32767	; 0x7fff
   3255c:	cmp	r1, r0
   32560:	blt	325d0 <__assert_fail@plt+0x210cc>
   32564:	b	325f4 <__assert_fail@plt+0x210f0>
   32568:	ldr	r0, [fp, #-8]
   3256c:	ldr	r2, [r0]
   32570:	ldr	r3, [r0, #4]
   32574:	movw	r0, #32768	; 0x8000
   32578:	movt	r0, #65535	; 0xffff
   3257c:	mvn	r1, #0
   32580:	bl	37150 <__assert_fail@plt+0x25c4c>
   32584:	ldr	r2, [fp, #-12]
   32588:	subs	r0, r0, r2
   3258c:	sbcs	r1, r1, r2, asr #31
   32590:	str	r0, [fp, #-216]	; 0xffffff28
   32594:	str	r1, [fp, #-220]	; 0xffffff24
   32598:	blt	325d0 <__assert_fail@plt+0x210cc>
   3259c:	b	325f4 <__assert_fail@plt+0x210f0>
   325a0:	ldr	r0, [fp, #-12]
   325a4:	movw	r1, #32767	; 0x7fff
   325a8:	sdiv	r0, r1, r0
   325ac:	ldr	r1, [fp, #-8]
   325b0:	ldr	r2, [r1]
   325b4:	ldr	r1, [r1, #4]
   325b8:	subs	r2, r0, r2
   325bc:	rscs	r0, r1, r0, asr #31
   325c0:	str	r2, [fp, #-224]	; 0xffffff20
   325c4:	str	r0, [fp, #-228]	; 0xffffff1c
   325c8:	bge	325f4 <__assert_fail@plt+0x210f0>
   325cc:	b	325d0 <__assert_fail@plt+0x210cc>
   325d0:	ldr	r0, [fp, #-8]
   325d4:	ldr	r0, [r0]
   325d8:	ldr	r1, [fp, #-12]
   325dc:	mul	r0, r0, r1
   325e0:	sxth	r0, r0
   325e4:	asr	r1, r0, #31
   325e8:	str	r0, [fp, #-24]	; 0xffffffe8
   325ec:	str	r1, [fp, #-20]	; 0xffffffec
   325f0:	b	339e4 <__assert_fail@plt+0x224e0>
   325f4:	ldr	r0, [fp, #-8]
   325f8:	ldr	r0, [r0]
   325fc:	ldr	r1, [fp, #-12]
   32600:	mul	r0, r0, r1
   32604:	sxth	r0, r0
   32608:	asr	r1, r0, #31
   3260c:	str	r0, [fp, #-24]	; 0xffffffe8
   32610:	str	r1, [fp, #-20]	; 0xffffffec
   32614:	b	33a18 <__assert_fail@plt+0x22514>
   32618:	ldr	r0, [fp, #-12]
   3261c:	cmp	r0, #0
   32620:	bge	327a0 <__assert_fail@plt+0x2129c>
   32624:	ldr	r0, [fp, #-8]
   32628:	ldr	r0, [r0, #4]
   3262c:	cmn	r0, #1
   32630:	bgt	326e8 <__assert_fail@plt+0x211e4>
   32634:	b	32638 <__assert_fail@plt+0x21134>
   32638:	b	3263c <__assert_fail@plt+0x21138>
   3263c:	ldr	r0, [fp, #-8]
   32640:	ldr	r1, [r0]
   32644:	ldr	r0, [r0, #4]
   32648:	ldr	r2, [fp, #-12]
   3264c:	movw	r3, #65535	; 0xffff
   32650:	sdiv	r2, r3, r2
   32654:	subs	r1, r1, r2
   32658:	sbcs	r0, r0, r2, asr #31
   3265c:	str	r1, [fp, #-232]	; 0xffffff18
   32660:	str	r0, [fp, #-236]	; 0xffffff14
   32664:	blt	32888 <__assert_fail@plt+0x21384>
   32668:	b	328ac <__assert_fail@plt+0x213a8>
   3266c:	b	32670 <__assert_fail@plt+0x2116c>
   32670:	ldr	r0, [pc, #1924]	; 32dfc <__assert_fail@plt+0x218f8>
   32674:	ldr	r1, [fp, #-12]
   32678:	cmp	r1, r0
   3267c:	blt	32694 <__assert_fail@plt+0x21190>
   32680:	b	326a0 <__assert_fail@plt+0x2119c>
   32684:	ldr	r0, [fp, #-12]
   32688:	movw	r1, #0
   3268c:	cmp	r1, r0
   32690:	bge	326a0 <__assert_fail@plt+0x2119c>
   32694:	movw	r0, #0
   32698:	str	r0, [fp, #-240]	; 0xffffff10
   3269c:	b	326b8 <__assert_fail@plt+0x211b4>
   326a0:	ldr	r0, [fp, #-12]
   326a4:	movw	r1, #0
   326a8:	sub	r0, r1, r0
   326ac:	movw	r1, #65535	; 0xffff
   326b0:	sdiv	r0, r1, r0
   326b4:	str	r0, [fp, #-240]	; 0xffffff10
   326b8:	ldr	r0, [fp, #-240]	; 0xffffff10
   326bc:	ldr	r1, [fp, #-8]
   326c0:	ldr	r2, [r1]
   326c4:	ldr	r1, [r1, #4]
   326c8:	mvn	r1, r1
   326cc:	mvn	r2, r2
   326d0:	subs	r2, r2, r0
   326d4:	sbcs	r0, r1, r0, asr #31
   326d8:	str	r2, [fp, #-244]	; 0xffffff0c
   326dc:	str	r0, [fp, #-248]	; 0xffffff08
   326e0:	bge	32888 <__assert_fail@plt+0x21384>
   326e4:	b	328ac <__assert_fail@plt+0x213a8>
   326e8:	b	326ec <__assert_fail@plt+0x211e8>
   326ec:	b	32770 <__assert_fail@plt+0x2126c>
   326f0:	b	32770 <__assert_fail@plt+0x2126c>
   326f4:	ldr	r0, [fp, #-12]
   326f8:	cmn	r0, #1
   326fc:	bne	32770 <__assert_fail@plt+0x2126c>
   32700:	b	32704 <__assert_fail@plt+0x21200>
   32704:	ldr	r0, [fp, #-8]
   32708:	ldr	r1, [r0]
   3270c:	ldr	r0, [r0, #4]
   32710:	rsbs	r1, r1, #0
   32714:	rscs	r0, r0, #0
   32718:	str	r1, [fp, #-252]	; 0xffffff04
   3271c:	str	r0, [fp, #-256]	; 0xffffff00
   32720:	blt	32888 <__assert_fail@plt+0x21384>
   32724:	b	328ac <__assert_fail@plt+0x213a8>
   32728:	ldr	r0, [fp, #-8]
   3272c:	ldr	r1, [r0]
   32730:	ldr	r0, [r0, #4]
   32734:	subs	r1, r1, #1
   32738:	sbcs	r0, r0, #0
   3273c:	str	r1, [fp, #-260]	; 0xfffffefc
   32740:	str	r0, [fp, #-264]	; 0xfffffef8
   32744:	blt	328ac <__assert_fail@plt+0x213a8>
   32748:	b	3274c <__assert_fail@plt+0x21248>
   3274c:	ldr	r0, [fp, #-8]
   32750:	ldr	r1, [r0]
   32754:	ldr	r0, [r0, #4]
   32758:	subs	r1, r1, #1
   3275c:	sbc	r0, r0, #0
   32760:	cmn	r0, #1
   32764:	str	r1, [fp, #-268]	; 0xfffffef4
   32768:	bgt	32888 <__assert_fail@plt+0x21384>
   3276c:	b	328ac <__assert_fail@plt+0x213a8>
   32770:	ldr	r0, [fp, #-12]
   32774:	mov	r1, #0
   32778:	sdiv	r0, r1, r0
   3277c:	ldr	r1, [fp, #-8]
   32780:	ldr	r2, [r1]
   32784:	ldr	r1, [r1, #4]
   32788:	subs	r2, r0, r2
   3278c:	rscs	r0, r1, r0, asr #31
   32790:	str	r2, [fp, #-272]	; 0xfffffef0
   32794:	str	r0, [fp, #-276]	; 0xfffffeec
   32798:	blt	32888 <__assert_fail@plt+0x21384>
   3279c:	b	328ac <__assert_fail@plt+0x213a8>
   327a0:	ldr	r0, [fp, #-12]
   327a4:	cmp	r0, #0
   327a8:	bne	327b0 <__assert_fail@plt+0x212ac>
   327ac:	b	328ac <__assert_fail@plt+0x213a8>
   327b0:	ldr	r0, [fp, #-8]
   327b4:	ldr	r0, [r0, #4]
   327b8:	cmn	r0, #1
   327bc:	bgt	32858 <__assert_fail@plt+0x21354>
   327c0:	b	327c4 <__assert_fail@plt+0x212c0>
   327c4:	b	327c8 <__assert_fail@plt+0x212c4>
   327c8:	b	32820 <__assert_fail@plt+0x2131c>
   327cc:	b	32820 <__assert_fail@plt+0x2131c>
   327d0:	ldr	r0, [fp, #-8]
   327d4:	ldr	r1, [r0]
   327d8:	ldr	r0, [r0, #4]
   327dc:	and	r0, r1, r0
   327e0:	cmn	r0, #1
   327e4:	bne	32820 <__assert_fail@plt+0x2131c>
   327e8:	b	327ec <__assert_fail@plt+0x212e8>
   327ec:	b	327f0 <__assert_fail@plt+0x212ec>
   327f0:	ldr	r0, [fp, #-12]
   327f4:	add	r0, r0, #0
   327f8:	movw	r1, #0
   327fc:	cmp	r1, r0
   32800:	blt	32888 <__assert_fail@plt+0x21384>
   32804:	b	328ac <__assert_fail@plt+0x213a8>
   32808:	ldr	r0, [fp, #-12]
   3280c:	sub	r0, r0, #1
   32810:	mvn	r1, #0
   32814:	cmp	r1, r0
   32818:	blt	32888 <__assert_fail@plt+0x21384>
   3281c:	b	328ac <__assert_fail@plt+0x213a8>
   32820:	ldr	r0, [fp, #-8]
   32824:	ldr	r2, [r0]
   32828:	ldr	r3, [r0, #4]
   3282c:	mov	r0, #0
   32830:	str	r0, [fp, #-280]	; 0xfffffee8
   32834:	ldr	r1, [fp, #-280]	; 0xfffffee8
   32838:	bl	37150 <__assert_fail@plt+0x25c4c>
   3283c:	ldr	r2, [fp, #-12]
   32840:	subs	r0, r0, r2
   32844:	sbcs	r1, r1, r2, asr #31
   32848:	str	r0, [fp, #-284]	; 0xfffffee4
   3284c:	str	r1, [fp, #-288]	; 0xfffffee0
   32850:	blt	32888 <__assert_fail@plt+0x21384>
   32854:	b	328ac <__assert_fail@plt+0x213a8>
   32858:	ldr	r0, [fp, #-12]
   3285c:	movw	r1, #65535	; 0xffff
   32860:	sdiv	r0, r1, r0
   32864:	ldr	r1, [fp, #-8]
   32868:	ldr	r2, [r1]
   3286c:	ldr	r1, [r1, #4]
   32870:	subs	r2, r0, r2
   32874:	rscs	r0, r1, r0, asr #31
   32878:	str	r2, [fp, #-292]	; 0xfffffedc
   3287c:	str	r0, [fp, #-296]	; 0xfffffed8
   32880:	bge	328ac <__assert_fail@plt+0x213a8>
   32884:	b	32888 <__assert_fail@plt+0x21384>
   32888:	ldr	r0, [fp, #-8]
   3288c:	ldr	r0, [r0]
   32890:	ldr	r1, [fp, #-12]
   32894:	mul	r0, r0, r1
   32898:	uxth	r0, r0
   3289c:	mov	r1, #0
   328a0:	str	r1, [fp, #-20]	; 0xffffffec
   328a4:	str	r0, [fp, #-24]	; 0xffffffe8
   328a8:	b	339e4 <__assert_fail@plt+0x224e0>
   328ac:	ldr	r0, [fp, #-8]
   328b0:	ldr	r0, [r0]
   328b4:	ldr	r1, [fp, #-12]
   328b8:	mul	r0, r0, r1
   328bc:	uxth	r0, r0
   328c0:	mov	r1, #0
   328c4:	str	r1, [fp, #-20]	; 0xffffffec
   328c8:	str	r0, [fp, #-24]	; 0xffffffe8
   328cc:	b	33a18 <__assert_fail@plt+0x22514>
   328d0:	b	32e40 <__assert_fail@plt+0x2193c>
   328d4:	b	328d8 <__assert_fail@plt+0x213d4>
   328d8:	ldr	r0, [fp, #-12]
   328dc:	cmp	r0, #0
   328e0:	bge	32a68 <__assert_fail@plt+0x21564>
   328e4:	ldr	r0, [fp, #-8]
   328e8:	ldr	r0, [r0, #4]
   328ec:	cmn	r0, #1
   328f0:	bgt	329a8 <__assert_fail@plt+0x214a4>
   328f4:	b	328f8 <__assert_fail@plt+0x213f4>
   328f8:	b	328fc <__assert_fail@plt+0x213f8>
   328fc:	ldr	r0, [fp, #-8]
   32900:	ldr	r1, [r0]
   32904:	ldr	r0, [r0, #4]
   32908:	ldr	r2, [fp, #-12]
   3290c:	mvn	r3, #-2147483648	; 0x80000000
   32910:	sdiv	r2, r3, r2
   32914:	subs	r1, r1, r2
   32918:	sbcs	r0, r0, r2, asr #31
   3291c:	str	r1, [fp, #-300]	; 0xfffffed4
   32920:	str	r0, [fp, #-304]	; 0xfffffed0
   32924:	blt	32b4c <__assert_fail@plt+0x21648>
   32928:	b	32b6c <__assert_fail@plt+0x21668>
   3292c:	b	32930 <__assert_fail@plt+0x2142c>
   32930:	ldr	r0, [pc, #1220]	; 32dfc <__assert_fail@plt+0x218f8>
   32934:	ldr	r1, [fp, #-12]
   32938:	cmp	r1, r0
   3293c:	blt	32954 <__assert_fail@plt+0x21450>
   32940:	b	32960 <__assert_fail@plt+0x2145c>
   32944:	ldr	r0, [fp, #-12]
   32948:	movw	r1, #0
   3294c:	cmp	r1, r0
   32950:	bge	32960 <__assert_fail@plt+0x2145c>
   32954:	movw	r0, #0
   32958:	str	r0, [fp, #-308]	; 0xfffffecc
   3295c:	b	32978 <__assert_fail@plt+0x21474>
   32960:	ldr	r0, [pc, #4064]	; 33948 <__assert_fail@plt+0x22444>
   32964:	ldr	r1, [fp, #-12]
   32968:	movw	r2, #0
   3296c:	sub	r1, r2, r1
   32970:	sdiv	r0, r0, r1
   32974:	str	r0, [fp, #-308]	; 0xfffffecc
   32978:	ldr	r0, [fp, #-308]	; 0xfffffecc
   3297c:	ldr	r1, [fp, #-8]
   32980:	ldr	r2, [r1]
   32984:	ldr	r1, [r1, #4]
   32988:	mvn	r1, r1
   3298c:	mvn	r2, r2
   32990:	subs	r2, r2, r0
   32994:	sbcs	r0, r1, r0, asr #31
   32998:	str	r2, [fp, #-312]	; 0xfffffec8
   3299c:	str	r0, [fp, #-316]	; 0xfffffec4
   329a0:	bge	32b4c <__assert_fail@plt+0x21648>
   329a4:	b	32b6c <__assert_fail@plt+0x21668>
   329a8:	ldr	r0, [fp, #-12]
   329ac:	cmn	r0, #1
   329b0:	bne	32a38 <__assert_fail@plt+0x21534>
   329b4:	b	329b8 <__assert_fail@plt+0x214b4>
   329b8:	ldr	r0, [fp, #-8]
   329bc:	ldr	r1, [r0]
   329c0:	ldr	r0, [r0, #4]
   329c4:	adds	r1, r1, #-2147483648	; 0x80000000
   329c8:	sbc	r0, r0, #0
   329cc:	rsbs	r1, r1, #0
   329d0:	rscs	r0, r0, #0
   329d4:	str	r1, [fp, #-320]	; 0xfffffec0
   329d8:	str	r0, [fp, #-324]	; 0xfffffebc
   329dc:	blt	32b4c <__assert_fail@plt+0x21648>
   329e0:	b	32b6c <__assert_fail@plt+0x21668>
   329e4:	ldr	r0, [fp, #-8]
   329e8:	ldr	r1, [r0]
   329ec:	ldr	r0, [r0, #4]
   329f0:	subs	r1, r1, #1
   329f4:	sbcs	r0, r0, #0
   329f8:	str	r1, [fp, #-328]	; 0xfffffeb8
   329fc:	str	r0, [fp, #-332]	; 0xfffffeb4
   32a00:	blt	32b6c <__assert_fail@plt+0x21668>
   32a04:	b	32a08 <__assert_fail@plt+0x21504>
   32a08:	ldr	r0, [fp, #-8]
   32a0c:	ldr	r1, [r0]
   32a10:	ldr	r0, [r0, #4]
   32a14:	subs	r1, r1, #1
   32a18:	sbc	r0, r0, #0
   32a1c:	mvn	r2, #-2147483648	; 0x80000000
   32a20:	subs	r1, r2, r1
   32a24:	rscs	r0, r0, #0
   32a28:	str	r1, [fp, #-336]	; 0xfffffeb0
   32a2c:	str	r0, [fp, #-340]	; 0xfffffeac
   32a30:	blt	32b4c <__assert_fail@plt+0x21648>
   32a34:	b	32b6c <__assert_fail@plt+0x21668>
   32a38:	ldr	r0, [fp, #-12]
   32a3c:	mov	r1, #-2147483648	; 0x80000000
   32a40:	sdiv	r0, r1, r0
   32a44:	ldr	r1, [fp, #-8]
   32a48:	ldr	r2, [r1]
   32a4c:	ldr	r1, [r1, #4]
   32a50:	subs	r2, r0, r2
   32a54:	rscs	r0, r1, r0, asr #31
   32a58:	str	r2, [fp, #-344]	; 0xfffffea8
   32a5c:	str	r0, [fp, #-348]	; 0xfffffea4
   32a60:	blt	32b4c <__assert_fail@plt+0x21648>
   32a64:	b	32b6c <__assert_fail@plt+0x21668>
   32a68:	ldr	r0, [fp, #-12]
   32a6c:	cmp	r0, #0
   32a70:	bne	32a78 <__assert_fail@plt+0x21574>
   32a74:	b	32b6c <__assert_fail@plt+0x21668>
   32a78:	ldr	r0, [fp, #-8]
   32a7c:	ldr	r0, [r0, #4]
   32a80:	cmn	r0, #1
   32a84:	bgt	32b1c <__assert_fail@plt+0x21618>
   32a88:	b	32a8c <__assert_fail@plt+0x21588>
   32a8c:	b	32a90 <__assert_fail@plt+0x2158c>
   32a90:	b	32ae8 <__assert_fail@plt+0x215e4>
   32a94:	b	32ae8 <__assert_fail@plt+0x215e4>
   32a98:	ldr	r0, [fp, #-8]
   32a9c:	ldr	r1, [r0]
   32aa0:	ldr	r0, [r0, #4]
   32aa4:	and	r0, r1, r0
   32aa8:	cmn	r0, #1
   32aac:	bne	32ae8 <__assert_fail@plt+0x215e4>
   32ab0:	b	32ab4 <__assert_fail@plt+0x215b0>
   32ab4:	b	32ab8 <__assert_fail@plt+0x215b4>
   32ab8:	ldr	r0, [fp, #-12]
   32abc:	add	r0, r0, #-2147483648	; 0x80000000
   32ac0:	movw	r1, #0
   32ac4:	cmp	r1, r0
   32ac8:	blt	32b4c <__assert_fail@plt+0x21648>
   32acc:	b	32b6c <__assert_fail@plt+0x21668>
   32ad0:	ldr	r0, [pc, #3948]	; 33a44 <__assert_fail@plt+0x22540>
   32ad4:	ldr	r1, [fp, #-12]
   32ad8:	sub	r1, r1, #1
   32adc:	cmp	r0, r1
   32ae0:	blt	32b4c <__assert_fail@plt+0x21648>
   32ae4:	b	32b6c <__assert_fail@plt+0x21668>
   32ae8:	ldr	r0, [fp, #-8]
   32aec:	ldr	r2, [r0]
   32af0:	ldr	r3, [r0, #4]
   32af4:	mov	r0, #-2147483648	; 0x80000000
   32af8:	mvn	r1, #0
   32afc:	bl	37150 <__assert_fail@plt+0x25c4c>
   32b00:	ldr	r2, [fp, #-12]
   32b04:	subs	r0, r0, r2
   32b08:	sbcs	r1, r1, r2, asr #31
   32b0c:	str	r0, [fp, #-352]	; 0xfffffea0
   32b10:	str	r1, [fp, #-356]	; 0xfffffe9c
   32b14:	blt	32b4c <__assert_fail@plt+0x21648>
   32b18:	b	32b6c <__assert_fail@plt+0x21668>
   32b1c:	ldr	r0, [fp, #-12]
   32b20:	mvn	r1, #-2147483648	; 0x80000000
   32b24:	sdiv	r0, r1, r0
   32b28:	ldr	r1, [fp, #-8]
   32b2c:	ldr	r2, [r1]
   32b30:	ldr	r1, [r1, #4]
   32b34:	subs	r2, r0, r2
   32b38:	rscs	r0, r1, r0, asr #31
   32b3c:	str	r2, [fp, #-360]	; 0xfffffe98
   32b40:	str	r0, [fp, #-364]	; 0xfffffe94
   32b44:	bge	32b6c <__assert_fail@plt+0x21668>
   32b48:	b	32b4c <__assert_fail@plt+0x21648>
   32b4c:	ldr	r0, [fp, #-8]
   32b50:	ldr	r0, [r0]
   32b54:	ldr	r1, [fp, #-12]
   32b58:	mul	r0, r0, r1
   32b5c:	asr	r1, r0, #31
   32b60:	str	r0, [fp, #-24]	; 0xffffffe8
   32b64:	str	r1, [fp, #-20]	; 0xffffffec
   32b68:	b	339e4 <__assert_fail@plt+0x224e0>
   32b6c:	ldr	r0, [fp, #-8]
   32b70:	ldr	r0, [r0]
   32b74:	ldr	r1, [fp, #-12]
   32b78:	mul	r0, r0, r1
   32b7c:	asr	r1, r0, #31
   32b80:	str	r0, [fp, #-24]	; 0xffffffe8
   32b84:	str	r1, [fp, #-20]	; 0xffffffec
   32b88:	b	33a18 <__assert_fail@plt+0x22514>
   32b8c:	ldr	r0, [fp, #-12]
   32b90:	cmp	r0, #0
   32b94:	bge	32d14 <__assert_fail@plt+0x21810>
   32b98:	ldr	r0, [fp, #-8]
   32b9c:	ldr	r0, [r0, #4]
   32ba0:	cmn	r0, #1
   32ba4:	bgt	32c5c <__assert_fail@plt+0x21758>
   32ba8:	b	32bac <__assert_fail@plt+0x216a8>
   32bac:	b	32be0 <__assert_fail@plt+0x216dc>
   32bb0:	ldr	r0, [fp, #-8]
   32bb4:	ldr	r1, [r0]
   32bb8:	ldr	r0, [r0, #4]
   32bbc:	ldr	r2, [fp, #-12]
   32bc0:	mvn	r3, #0
   32bc4:	udiv	r2, r3, r2
   32bc8:	subs	r1, r1, r2
   32bcc:	sbcs	r0, r0, #0
   32bd0:	str	r1, [fp, #-368]	; 0xfffffe90
   32bd4:	str	r0, [fp, #-372]	; 0xfffffe8c
   32bd8:	blt	32e00 <__assert_fail@plt+0x218fc>
   32bdc:	b	32e20 <__assert_fail@plt+0x2191c>
   32be0:	b	32be4 <__assert_fail@plt+0x216e0>
   32be4:	ldr	r0, [pc, #3668]	; 33a40 <__assert_fail@plt+0x2253c>
   32be8:	ldr	r1, [fp, #-12]
   32bec:	cmp	r1, r0
   32bf0:	blt	32c08 <__assert_fail@plt+0x21704>
   32bf4:	b	32c14 <__assert_fail@plt+0x21710>
   32bf8:	ldr	r0, [fp, #-12]
   32bfc:	movw	r1, #0
   32c00:	cmp	r1, r0
   32c04:	bge	32c14 <__assert_fail@plt+0x21710>
   32c08:	movw	r0, #1
   32c0c:	str	r0, [sp, #376]	; 0x178
   32c10:	b	32c2c <__assert_fail@plt+0x21728>
   32c14:	ldr	r0, [fp, #-12]
   32c18:	movw	r1, #0
   32c1c:	sub	r0, r1, r0
   32c20:	mvn	r1, #0
   32c24:	udiv	r0, r1, r0
   32c28:	str	r0, [sp, #376]	; 0x178
   32c2c:	ldr	r0, [sp, #376]	; 0x178
   32c30:	ldr	r1, [fp, #-8]
   32c34:	ldr	r2, [r1]
   32c38:	ldr	r1, [r1, #4]
   32c3c:	mvn	r1, r1
   32c40:	mvn	r2, r2
   32c44:	subs	r0, r2, r0
   32c48:	sbcs	r1, r1, #0
   32c4c:	str	r0, [sp, #372]	; 0x174
   32c50:	str	r1, [sp, #368]	; 0x170
   32c54:	bge	32e00 <__assert_fail@plt+0x218fc>
   32c58:	b	32e20 <__assert_fail@plt+0x2191c>
   32c5c:	b	32c60 <__assert_fail@plt+0x2175c>
   32c60:	b	32ce4 <__assert_fail@plt+0x217e0>
   32c64:	b	32ce4 <__assert_fail@plt+0x217e0>
   32c68:	ldr	r0, [fp, #-12]
   32c6c:	cmn	r0, #1
   32c70:	bne	32ce4 <__assert_fail@plt+0x217e0>
   32c74:	b	32c78 <__assert_fail@plt+0x21774>
   32c78:	ldr	r0, [fp, #-8]
   32c7c:	ldr	r1, [r0]
   32c80:	ldr	r0, [r0, #4]
   32c84:	rsbs	r1, r1, #0
   32c88:	rscs	r0, r0, #0
   32c8c:	str	r1, [sp, #364]	; 0x16c
   32c90:	str	r0, [sp, #360]	; 0x168
   32c94:	blt	32e00 <__assert_fail@plt+0x218fc>
   32c98:	b	32e20 <__assert_fail@plt+0x2191c>
   32c9c:	ldr	r0, [fp, #-8]
   32ca0:	ldr	r1, [r0]
   32ca4:	ldr	r0, [r0, #4]
   32ca8:	subs	r1, r1, #1
   32cac:	sbcs	r0, r0, #0
   32cb0:	str	r1, [sp, #356]	; 0x164
   32cb4:	str	r0, [sp, #352]	; 0x160
   32cb8:	blt	32e20 <__assert_fail@plt+0x2191c>
   32cbc:	b	32cc0 <__assert_fail@plt+0x217bc>
   32cc0:	ldr	r0, [fp, #-8]
   32cc4:	ldr	r1, [r0]
   32cc8:	ldr	r0, [r0, #4]
   32ccc:	subs	r1, r1, #1
   32cd0:	sbc	r0, r0, #0
   32cd4:	cmn	r0, #1
   32cd8:	str	r1, [sp, #348]	; 0x15c
   32cdc:	bgt	32e00 <__assert_fail@plt+0x218fc>
   32ce0:	b	32e20 <__assert_fail@plt+0x2191c>
   32ce4:	ldr	r0, [fp, #-12]
   32ce8:	mov	r1, #0
   32cec:	sdiv	r0, r1, r0
   32cf0:	ldr	r1, [fp, #-8]
   32cf4:	ldr	r2, [r1]
   32cf8:	ldr	r1, [r1, #4]
   32cfc:	subs	r2, r0, r2
   32d00:	rscs	r0, r1, r0, asr #31
   32d04:	str	r2, [sp, #344]	; 0x158
   32d08:	str	r0, [sp, #340]	; 0x154
   32d0c:	blt	32e00 <__assert_fail@plt+0x218fc>
   32d10:	b	32e20 <__assert_fail@plt+0x2191c>
   32d14:	ldr	r0, [fp, #-12]
   32d18:	cmp	r0, #0
   32d1c:	bne	32d24 <__assert_fail@plt+0x21820>
   32d20:	b	32e20 <__assert_fail@plt+0x2191c>
   32d24:	ldr	r0, [fp, #-8]
   32d28:	ldr	r0, [r0, #4]
   32d2c:	cmn	r0, #1
   32d30:	bgt	32dcc <__assert_fail@plt+0x218c8>
   32d34:	b	32d38 <__assert_fail@plt+0x21834>
   32d38:	b	32d3c <__assert_fail@plt+0x21838>
   32d3c:	b	32d94 <__assert_fail@plt+0x21890>
   32d40:	b	32d94 <__assert_fail@plt+0x21890>
   32d44:	ldr	r0, [fp, #-8]
   32d48:	ldr	r1, [r0]
   32d4c:	ldr	r0, [r0, #4]
   32d50:	and	r0, r1, r0
   32d54:	cmn	r0, #1
   32d58:	bne	32d94 <__assert_fail@plt+0x21890>
   32d5c:	b	32d60 <__assert_fail@plt+0x2185c>
   32d60:	b	32d64 <__assert_fail@plt+0x21860>
   32d64:	ldr	r0, [fp, #-12]
   32d68:	add	r0, r0, #0
   32d6c:	movw	r1, #0
   32d70:	cmp	r1, r0
   32d74:	blt	32e00 <__assert_fail@plt+0x218fc>
   32d78:	b	32e20 <__assert_fail@plt+0x2191c>
   32d7c:	ldr	r0, [fp, #-12]
   32d80:	sub	r0, r0, #1
   32d84:	mvn	r1, #0
   32d88:	cmp	r1, r0
   32d8c:	blt	32e00 <__assert_fail@plt+0x218fc>
   32d90:	b	32e20 <__assert_fail@plt+0x2191c>
   32d94:	ldr	r0, [fp, #-8]
   32d98:	ldr	r2, [r0]
   32d9c:	ldr	r3, [r0, #4]
   32da0:	mov	r0, #0
   32da4:	str	r0, [sp, #336]	; 0x150
   32da8:	ldr	r1, [sp, #336]	; 0x150
   32dac:	bl	37150 <__assert_fail@plt+0x25c4c>
   32db0:	ldr	r2, [fp, #-12]
   32db4:	subs	r0, r0, r2
   32db8:	sbcs	r1, r1, r2, asr #31
   32dbc:	str	r0, [sp, #332]	; 0x14c
   32dc0:	str	r1, [sp, #328]	; 0x148
   32dc4:	blt	32e00 <__assert_fail@plt+0x218fc>
   32dc8:	b	32e20 <__assert_fail@plt+0x2191c>
   32dcc:	ldr	r0, [fp, #-12]
   32dd0:	mvn	r1, #0
   32dd4:	udiv	r0, r1, r0
   32dd8:	ldr	r1, [fp, #-8]
   32ddc:	ldr	r2, [r1]
   32de0:	ldr	r1, [r1, #4]
   32de4:	subs	r0, r0, r2
   32de8:	rscs	r1, r1, #0
   32dec:	str	r0, [sp, #324]	; 0x144
   32df0:	str	r1, [sp, #320]	; 0x140
   32df4:	bge	32e20 <__assert_fail@plt+0x2191c>
   32df8:	b	32e00 <__assert_fail@plt+0x218fc>
   32dfc:	andhi	r0, r0, r1
   32e00:	ldr	r0, [fp, #-8]
   32e04:	ldr	r0, [r0]
   32e08:	ldr	r1, [fp, #-12]
   32e0c:	mul	r0, r0, r1
   32e10:	mov	r1, #0
   32e14:	str	r1, [fp, #-20]	; 0xffffffec
   32e18:	str	r0, [fp, #-24]	; 0xffffffe8
   32e1c:	b	339e4 <__assert_fail@plt+0x224e0>
   32e20:	ldr	r0, [fp, #-8]
   32e24:	ldr	r0, [r0]
   32e28:	ldr	r1, [fp, #-12]
   32e2c:	mul	r0, r0, r1
   32e30:	mov	r1, #0
   32e34:	str	r1, [fp, #-20]	; 0xffffffec
   32e38:	str	r0, [fp, #-24]	; 0xffffffe8
   32e3c:	b	33a18 <__assert_fail@plt+0x22514>
   32e40:	b	333ac <__assert_fail@plt+0x21ea8>
   32e44:	b	32e48 <__assert_fail@plt+0x21944>
   32e48:	ldr	r0, [fp, #-12]
   32e4c:	cmp	r0, #0
   32e50:	bge	32fd8 <__assert_fail@plt+0x21ad4>
   32e54:	ldr	r0, [fp, #-8]
   32e58:	ldr	r0, [r0, #4]
   32e5c:	cmn	r0, #1
   32e60:	bgt	32f18 <__assert_fail@plt+0x21a14>
   32e64:	b	32e68 <__assert_fail@plt+0x21964>
   32e68:	b	32e6c <__assert_fail@plt+0x21968>
   32e6c:	ldr	r0, [fp, #-8]
   32e70:	ldr	r1, [r0]
   32e74:	ldr	r0, [r0, #4]
   32e78:	ldr	r2, [fp, #-12]
   32e7c:	mvn	r3, #-2147483648	; 0x80000000
   32e80:	sdiv	r2, r3, r2
   32e84:	subs	r1, r1, r2
   32e88:	sbcs	r0, r0, r2, asr #31
   32e8c:	str	r1, [sp, #316]	; 0x13c
   32e90:	str	r0, [sp, #312]	; 0x138
   32e94:	blt	330bc <__assert_fail@plt+0x21bb8>
   32e98:	b	330dc <__assert_fail@plt+0x21bd8>
   32e9c:	b	32ea0 <__assert_fail@plt+0x2199c>
   32ea0:	ldr	r0, [pc, #2968]	; 33a40 <__assert_fail@plt+0x2253c>
   32ea4:	ldr	r1, [fp, #-12]
   32ea8:	cmp	r1, r0
   32eac:	blt	32ec4 <__assert_fail@plt+0x219c0>
   32eb0:	b	32ed0 <__assert_fail@plt+0x219cc>
   32eb4:	ldr	r0, [fp, #-12]
   32eb8:	movw	r1, #0
   32ebc:	cmp	r1, r0
   32ec0:	bge	32ed0 <__assert_fail@plt+0x219cc>
   32ec4:	movw	r0, #0
   32ec8:	str	r0, [sp, #308]	; 0x134
   32ecc:	b	32ee8 <__assert_fail@plt+0x219e4>
   32ed0:	ldr	r0, [pc, #2924]	; 33a44 <__assert_fail@plt+0x22540>
   32ed4:	ldr	r1, [fp, #-12]
   32ed8:	movw	r2, #0
   32edc:	sub	r1, r2, r1
   32ee0:	sdiv	r0, r0, r1
   32ee4:	str	r0, [sp, #308]	; 0x134
   32ee8:	ldr	r0, [sp, #308]	; 0x134
   32eec:	ldr	r1, [fp, #-8]
   32ef0:	ldr	r2, [r1]
   32ef4:	ldr	r1, [r1, #4]
   32ef8:	mvn	r1, r1
   32efc:	mvn	r2, r2
   32f00:	subs	r2, r2, r0
   32f04:	sbcs	r0, r1, r0, asr #31
   32f08:	str	r2, [sp, #304]	; 0x130
   32f0c:	str	r0, [sp, #300]	; 0x12c
   32f10:	bge	330bc <__assert_fail@plt+0x21bb8>
   32f14:	b	330dc <__assert_fail@plt+0x21bd8>
   32f18:	ldr	r0, [fp, #-12]
   32f1c:	cmn	r0, #1
   32f20:	bne	32fa8 <__assert_fail@plt+0x21aa4>
   32f24:	b	32f28 <__assert_fail@plt+0x21a24>
   32f28:	ldr	r0, [fp, #-8]
   32f2c:	ldr	r1, [r0]
   32f30:	ldr	r0, [r0, #4]
   32f34:	adds	r1, r1, #-2147483648	; 0x80000000
   32f38:	sbc	r0, r0, #0
   32f3c:	rsbs	r1, r1, #0
   32f40:	rscs	r0, r0, #0
   32f44:	str	r1, [sp, #296]	; 0x128
   32f48:	str	r0, [sp, #292]	; 0x124
   32f4c:	blt	330bc <__assert_fail@plt+0x21bb8>
   32f50:	b	330dc <__assert_fail@plt+0x21bd8>
   32f54:	ldr	r0, [fp, #-8]
   32f58:	ldr	r1, [r0]
   32f5c:	ldr	r0, [r0, #4]
   32f60:	subs	r1, r1, #1
   32f64:	sbcs	r0, r0, #0
   32f68:	str	r1, [sp, #288]	; 0x120
   32f6c:	str	r0, [sp, #284]	; 0x11c
   32f70:	blt	330dc <__assert_fail@plt+0x21bd8>
   32f74:	b	32f78 <__assert_fail@plt+0x21a74>
   32f78:	ldr	r0, [fp, #-8]
   32f7c:	ldr	r1, [r0]
   32f80:	ldr	r0, [r0, #4]
   32f84:	subs	r1, r1, #1
   32f88:	sbc	r0, r0, #0
   32f8c:	mvn	r2, #-2147483648	; 0x80000000
   32f90:	subs	r1, r2, r1
   32f94:	rscs	r0, r0, #0
   32f98:	str	r1, [sp, #280]	; 0x118
   32f9c:	str	r0, [sp, #276]	; 0x114
   32fa0:	blt	330bc <__assert_fail@plt+0x21bb8>
   32fa4:	b	330dc <__assert_fail@plt+0x21bd8>
   32fa8:	ldr	r0, [fp, #-12]
   32fac:	mov	r1, #-2147483648	; 0x80000000
   32fb0:	sdiv	r0, r1, r0
   32fb4:	ldr	r1, [fp, #-8]
   32fb8:	ldr	r2, [r1]
   32fbc:	ldr	r1, [r1, #4]
   32fc0:	subs	r2, r0, r2
   32fc4:	rscs	r0, r1, r0, asr #31
   32fc8:	str	r2, [sp, #272]	; 0x110
   32fcc:	str	r0, [sp, #268]	; 0x10c
   32fd0:	blt	330bc <__assert_fail@plt+0x21bb8>
   32fd4:	b	330dc <__assert_fail@plt+0x21bd8>
   32fd8:	ldr	r0, [fp, #-12]
   32fdc:	cmp	r0, #0
   32fe0:	bne	32fe8 <__assert_fail@plt+0x21ae4>
   32fe4:	b	330dc <__assert_fail@plt+0x21bd8>
   32fe8:	ldr	r0, [fp, #-8]
   32fec:	ldr	r0, [r0, #4]
   32ff0:	cmn	r0, #1
   32ff4:	bgt	3308c <__assert_fail@plt+0x21b88>
   32ff8:	b	32ffc <__assert_fail@plt+0x21af8>
   32ffc:	b	33000 <__assert_fail@plt+0x21afc>
   33000:	b	33058 <__assert_fail@plt+0x21b54>
   33004:	b	33058 <__assert_fail@plt+0x21b54>
   33008:	ldr	r0, [fp, #-8]
   3300c:	ldr	r1, [r0]
   33010:	ldr	r0, [r0, #4]
   33014:	and	r0, r1, r0
   33018:	cmn	r0, #1
   3301c:	bne	33058 <__assert_fail@plt+0x21b54>
   33020:	b	33024 <__assert_fail@plt+0x21b20>
   33024:	b	33028 <__assert_fail@plt+0x21b24>
   33028:	ldr	r0, [fp, #-12]
   3302c:	add	r0, r0, #-2147483648	; 0x80000000
   33030:	movw	r1, #0
   33034:	cmp	r1, r0
   33038:	blt	330bc <__assert_fail@plt+0x21bb8>
   3303c:	b	330dc <__assert_fail@plt+0x21bd8>
   33040:	ldr	r0, [pc, #2556]	; 33a44 <__assert_fail@plt+0x22540>
   33044:	ldr	r1, [fp, #-12]
   33048:	sub	r1, r1, #1
   3304c:	cmp	r0, r1
   33050:	blt	330bc <__assert_fail@plt+0x21bb8>
   33054:	b	330dc <__assert_fail@plt+0x21bd8>
   33058:	ldr	r0, [fp, #-8]
   3305c:	ldr	r2, [r0]
   33060:	ldr	r3, [r0, #4]
   33064:	mov	r0, #-2147483648	; 0x80000000
   33068:	mvn	r1, #0
   3306c:	bl	37150 <__assert_fail@plt+0x25c4c>
   33070:	ldr	r2, [fp, #-12]
   33074:	subs	r0, r0, r2
   33078:	sbcs	r1, r1, r2, asr #31
   3307c:	str	r0, [sp, #264]	; 0x108
   33080:	str	r1, [sp, #260]	; 0x104
   33084:	blt	330bc <__assert_fail@plt+0x21bb8>
   33088:	b	330dc <__assert_fail@plt+0x21bd8>
   3308c:	ldr	r0, [fp, #-12]
   33090:	mvn	r1, #-2147483648	; 0x80000000
   33094:	sdiv	r0, r1, r0
   33098:	ldr	r1, [fp, #-8]
   3309c:	ldr	r2, [r1]
   330a0:	ldr	r1, [r1, #4]
   330a4:	subs	r2, r0, r2
   330a8:	rscs	r0, r1, r0, asr #31
   330ac:	str	r2, [sp, #256]	; 0x100
   330b0:	str	r0, [sp, #252]	; 0xfc
   330b4:	bge	330dc <__assert_fail@plt+0x21bd8>
   330b8:	b	330bc <__assert_fail@plt+0x21bb8>
   330bc:	ldr	r0, [fp, #-8]
   330c0:	ldr	r0, [r0]
   330c4:	ldr	r1, [fp, #-12]
   330c8:	mul	r0, r0, r1
   330cc:	asr	r1, r0, #31
   330d0:	str	r0, [fp, #-24]	; 0xffffffe8
   330d4:	str	r1, [fp, #-20]	; 0xffffffec
   330d8:	b	339e4 <__assert_fail@plt+0x224e0>
   330dc:	ldr	r0, [fp, #-8]
   330e0:	ldr	r0, [r0]
   330e4:	ldr	r1, [fp, #-12]
   330e8:	mul	r0, r0, r1
   330ec:	asr	r1, r0, #31
   330f0:	str	r0, [fp, #-24]	; 0xffffffe8
   330f4:	str	r1, [fp, #-20]	; 0xffffffec
   330f8:	b	33a18 <__assert_fail@plt+0x22514>
   330fc:	ldr	r0, [fp, #-12]
   33100:	cmp	r0, #0
   33104:	bge	33284 <__assert_fail@plt+0x21d80>
   33108:	ldr	r0, [fp, #-8]
   3310c:	ldr	r0, [r0, #4]
   33110:	cmn	r0, #1
   33114:	bgt	331cc <__assert_fail@plt+0x21cc8>
   33118:	b	3311c <__assert_fail@plt+0x21c18>
   3311c:	b	33150 <__assert_fail@plt+0x21c4c>
   33120:	ldr	r0, [fp, #-8]
   33124:	ldr	r1, [r0]
   33128:	ldr	r0, [r0, #4]
   3312c:	ldr	r2, [fp, #-12]
   33130:	mvn	r3, #0
   33134:	udiv	r2, r3, r2
   33138:	subs	r1, r1, r2
   3313c:	sbcs	r0, r0, #0
   33140:	str	r1, [sp, #248]	; 0xf8
   33144:	str	r0, [sp, #244]	; 0xf4
   33148:	blt	3336c <__assert_fail@plt+0x21e68>
   3314c:	b	3338c <__assert_fail@plt+0x21e88>
   33150:	b	33154 <__assert_fail@plt+0x21c50>
   33154:	ldr	r0, [pc, #2276]	; 33a40 <__assert_fail@plt+0x2253c>
   33158:	ldr	r1, [fp, #-12]
   3315c:	cmp	r1, r0
   33160:	blt	33178 <__assert_fail@plt+0x21c74>
   33164:	b	33184 <__assert_fail@plt+0x21c80>
   33168:	ldr	r0, [fp, #-12]
   3316c:	movw	r1, #0
   33170:	cmp	r1, r0
   33174:	bge	33184 <__assert_fail@plt+0x21c80>
   33178:	movw	r0, #1
   3317c:	str	r0, [sp, #240]	; 0xf0
   33180:	b	3319c <__assert_fail@plt+0x21c98>
   33184:	ldr	r0, [fp, #-12]
   33188:	movw	r1, #0
   3318c:	sub	r0, r1, r0
   33190:	mvn	r1, #0
   33194:	udiv	r0, r1, r0
   33198:	str	r0, [sp, #240]	; 0xf0
   3319c:	ldr	r0, [sp, #240]	; 0xf0
   331a0:	ldr	r1, [fp, #-8]
   331a4:	ldr	r2, [r1]
   331a8:	ldr	r1, [r1, #4]
   331ac:	mvn	r1, r1
   331b0:	mvn	r2, r2
   331b4:	subs	r0, r2, r0
   331b8:	sbcs	r1, r1, #0
   331bc:	str	r0, [sp, #236]	; 0xec
   331c0:	str	r1, [sp, #232]	; 0xe8
   331c4:	bge	3336c <__assert_fail@plt+0x21e68>
   331c8:	b	3338c <__assert_fail@plt+0x21e88>
   331cc:	b	331d0 <__assert_fail@plt+0x21ccc>
   331d0:	b	33254 <__assert_fail@plt+0x21d50>
   331d4:	b	33254 <__assert_fail@plt+0x21d50>
   331d8:	ldr	r0, [fp, #-12]
   331dc:	cmn	r0, #1
   331e0:	bne	33254 <__assert_fail@plt+0x21d50>
   331e4:	b	331e8 <__assert_fail@plt+0x21ce4>
   331e8:	ldr	r0, [fp, #-8]
   331ec:	ldr	r1, [r0]
   331f0:	ldr	r0, [r0, #4]
   331f4:	rsbs	r1, r1, #0
   331f8:	rscs	r0, r0, #0
   331fc:	str	r1, [sp, #228]	; 0xe4
   33200:	str	r0, [sp, #224]	; 0xe0
   33204:	blt	3336c <__assert_fail@plt+0x21e68>
   33208:	b	3338c <__assert_fail@plt+0x21e88>
   3320c:	ldr	r0, [fp, #-8]
   33210:	ldr	r1, [r0]
   33214:	ldr	r0, [r0, #4]
   33218:	subs	r1, r1, #1
   3321c:	sbcs	r0, r0, #0
   33220:	str	r1, [sp, #220]	; 0xdc
   33224:	str	r0, [sp, #216]	; 0xd8
   33228:	blt	3338c <__assert_fail@plt+0x21e88>
   3322c:	b	33230 <__assert_fail@plt+0x21d2c>
   33230:	ldr	r0, [fp, #-8]
   33234:	ldr	r1, [r0]
   33238:	ldr	r0, [r0, #4]
   3323c:	subs	r1, r1, #1
   33240:	sbc	r0, r0, #0
   33244:	cmn	r0, #1
   33248:	str	r1, [sp, #212]	; 0xd4
   3324c:	bgt	3336c <__assert_fail@plt+0x21e68>
   33250:	b	3338c <__assert_fail@plt+0x21e88>
   33254:	ldr	r0, [fp, #-12]
   33258:	mov	r1, #0
   3325c:	sdiv	r0, r1, r0
   33260:	ldr	r1, [fp, #-8]
   33264:	ldr	r2, [r1]
   33268:	ldr	r1, [r1, #4]
   3326c:	subs	r2, r0, r2
   33270:	rscs	r0, r1, r0, asr #31
   33274:	str	r2, [sp, #208]	; 0xd0
   33278:	str	r0, [sp, #204]	; 0xcc
   3327c:	blt	3336c <__assert_fail@plt+0x21e68>
   33280:	b	3338c <__assert_fail@plt+0x21e88>
   33284:	ldr	r0, [fp, #-12]
   33288:	cmp	r0, #0
   3328c:	bne	33294 <__assert_fail@plt+0x21d90>
   33290:	b	3338c <__assert_fail@plt+0x21e88>
   33294:	ldr	r0, [fp, #-8]
   33298:	ldr	r0, [r0, #4]
   3329c:	cmn	r0, #1
   332a0:	bgt	3333c <__assert_fail@plt+0x21e38>
   332a4:	b	332a8 <__assert_fail@plt+0x21da4>
   332a8:	b	332ac <__assert_fail@plt+0x21da8>
   332ac:	b	33304 <__assert_fail@plt+0x21e00>
   332b0:	b	33304 <__assert_fail@plt+0x21e00>
   332b4:	ldr	r0, [fp, #-8]
   332b8:	ldr	r1, [r0]
   332bc:	ldr	r0, [r0, #4]
   332c0:	and	r0, r1, r0
   332c4:	cmn	r0, #1
   332c8:	bne	33304 <__assert_fail@plt+0x21e00>
   332cc:	b	332d0 <__assert_fail@plt+0x21dcc>
   332d0:	b	332d4 <__assert_fail@plt+0x21dd0>
   332d4:	ldr	r0, [fp, #-12]
   332d8:	add	r0, r0, #0
   332dc:	movw	r1, #0
   332e0:	cmp	r1, r0
   332e4:	blt	3336c <__assert_fail@plt+0x21e68>
   332e8:	b	3338c <__assert_fail@plt+0x21e88>
   332ec:	ldr	r0, [fp, #-12]
   332f0:	sub	r0, r0, #1
   332f4:	mvn	r1, #0
   332f8:	cmp	r1, r0
   332fc:	blt	3336c <__assert_fail@plt+0x21e68>
   33300:	b	3338c <__assert_fail@plt+0x21e88>
   33304:	ldr	r0, [fp, #-8]
   33308:	ldr	r2, [r0]
   3330c:	ldr	r3, [r0, #4]
   33310:	mov	r0, #0
   33314:	str	r0, [sp, #200]	; 0xc8
   33318:	ldr	r1, [sp, #200]	; 0xc8
   3331c:	bl	37150 <__assert_fail@plt+0x25c4c>
   33320:	ldr	r2, [fp, #-12]
   33324:	subs	r0, r0, r2
   33328:	sbcs	r1, r1, r2, asr #31
   3332c:	str	r0, [sp, #196]	; 0xc4
   33330:	str	r1, [sp, #192]	; 0xc0
   33334:	blt	3336c <__assert_fail@plt+0x21e68>
   33338:	b	3338c <__assert_fail@plt+0x21e88>
   3333c:	ldr	r0, [fp, #-12]
   33340:	mvn	r1, #0
   33344:	udiv	r0, r1, r0
   33348:	ldr	r1, [fp, #-8]
   3334c:	ldr	r2, [r1]
   33350:	ldr	r1, [r1, #4]
   33354:	subs	r0, r0, r2
   33358:	rscs	r1, r1, #0
   3335c:	str	r0, [sp, #188]	; 0xbc
   33360:	str	r1, [sp, #184]	; 0xb8
   33364:	bge	3338c <__assert_fail@plt+0x21e88>
   33368:	b	3336c <__assert_fail@plt+0x21e68>
   3336c:	ldr	r0, [fp, #-8]
   33370:	ldr	r0, [r0]
   33374:	ldr	r1, [fp, #-12]
   33378:	mul	r0, r0, r1
   3337c:	mov	r1, #0
   33380:	str	r1, [fp, #-20]	; 0xffffffec
   33384:	str	r0, [fp, #-24]	; 0xffffffe8
   33388:	b	339e4 <__assert_fail@plt+0x224e0>
   3338c:	ldr	r0, [fp, #-8]
   33390:	ldr	r0, [r0]
   33394:	ldr	r1, [fp, #-12]
   33398:	mul	r0, r0, r1
   3339c:	mov	r1, #0
   333a0:	str	r1, [fp, #-20]	; 0xffffffec
   333a4:	str	r0, [fp, #-24]	; 0xffffffe8
   333a8:	b	33a18 <__assert_fail@plt+0x22514>
   333ac:	b	333b0 <__assert_fail@plt+0x21eac>
   333b0:	ldr	r0, [fp, #-12]
   333b4:	cmp	r0, #0
   333b8:	bge	33580 <__assert_fail@plt+0x2207c>
   333bc:	ldr	r0, [fp, #-8]
   333c0:	ldr	r0, [r0, #4]
   333c4:	cmn	r0, #1
   333c8:	bgt	334c8 <__assert_fail@plt+0x21fc4>
   333cc:	b	333d0 <__assert_fail@plt+0x21ecc>
   333d0:	b	333d4 <__assert_fail@plt+0x21ed0>
   333d4:	ldr	r0, [fp, #-8]
   333d8:	ldr	r1, [r0]
   333dc:	ldr	r0, [r0, #4]
   333e0:	ldr	r2, [fp, #-12]
   333e4:	asr	r3, r2, #31
   333e8:	mvn	ip, #0
   333ec:	mvn	lr, #-2147483648	; 0x80000000
   333f0:	str	r0, [sp, #180]	; 0xb4
   333f4:	mov	r0, ip
   333f8:	str	r1, [sp, #176]	; 0xb0
   333fc:	mov	r1, lr
   33400:	bl	37150 <__assert_fail@plt+0x25c4c>
   33404:	ldr	r2, [sp, #176]	; 0xb0
   33408:	subs	r0, r2, r0
   3340c:	ldr	r2, [sp, #180]	; 0xb4
   33410:	sbcs	r1, r2, r1
   33414:	str	r0, [sp, #172]	; 0xac
   33418:	str	r1, [sp, #168]	; 0xa8
   3341c:	blt	33674 <__assert_fail@plt+0x22170>
   33420:	b	336a0 <__assert_fail@plt+0x2219c>
   33424:	b	33428 <__assert_fail@plt+0x21f24>
   33428:	ldr	r0, [pc, #1552]	; 33a40 <__assert_fail@plt+0x2253c>
   3342c:	ldr	r1, [fp, #-12]
   33430:	cmp	r1, r0
   33434:	blt	3344c <__assert_fail@plt+0x21f48>
   33438:	b	33460 <__assert_fail@plt+0x21f5c>
   3343c:	ldr	r0, [fp, #-12]
   33440:	movw	r1, #0
   33444:	cmp	r1, r0
   33448:	bge	33460 <__assert_fail@plt+0x21f5c>
   3344c:	mov	r0, #0
   33450:	mvn	r1, #0
   33454:	str	r1, [sp, #164]	; 0xa4
   33458:	str	r0, [sp, #160]	; 0xa0
   3345c:	b	33494 <__assert_fail@plt+0x21f90>
   33460:	ldr	r0, [fp, #-12]
   33464:	rsb	r0, r0, #0
   33468:	asr	r3, r0, #31
   3346c:	mvn	r1, #0
   33470:	mvn	r2, #-2147483648	; 0x80000000
   33474:	str	r0, [sp, #156]	; 0x9c
   33478:	mov	r0, r1
   3347c:	mov	r1, r2
   33480:	ldr	r2, [sp, #156]	; 0x9c
   33484:	bl	37150 <__assert_fail@plt+0x25c4c>
   33488:	str	r0, [sp, #164]	; 0xa4
   3348c:	str	r1, [sp, #160]	; 0xa0
   33490:	b	33494 <__assert_fail@plt+0x21f90>
   33494:	ldr	r0, [sp, #160]	; 0xa0
   33498:	ldr	r1, [sp, #164]	; 0xa4
   3349c:	ldr	r2, [fp, #-8]
   334a0:	ldr	r3, [r2]
   334a4:	ldr	r2, [r2, #4]
   334a8:	mvn	r2, r2
   334ac:	mvn	r3, r3
   334b0:	subs	r1, r3, r1
   334b4:	sbcs	r0, r2, r0
   334b8:	str	r1, [sp, #152]	; 0x98
   334bc:	str	r0, [sp, #148]	; 0x94
   334c0:	bge	33674 <__assert_fail@plt+0x22170>
   334c4:	b	336a0 <__assert_fail@plt+0x2219c>
   334c8:	ldr	r0, [fp, #-12]
   334cc:	cmn	r0, #1
   334d0:	bne	33538 <__assert_fail@plt+0x22034>
   334d4:	b	334d8 <__assert_fail@plt+0x21fd4>
   334d8:	ldr	r0, [fp, #-8]
   334dc:	ldr	r1, [r0]
   334e0:	ldr	r0, [r0, #4]
   334e4:	add	r0, r0, #-2147483648	; 0x80000000
   334e8:	rsbs	r1, r1, #0
   334ec:	rscs	r0, r0, #0
   334f0:	str	r1, [sp, #144]	; 0x90
   334f4:	str	r0, [sp, #140]	; 0x8c
   334f8:	blt	33674 <__assert_fail@plt+0x22170>
   334fc:	b	336a0 <__assert_fail@plt+0x2219c>
   33500:	ldr	r0, [fp, #-8]
   33504:	ldr	r1, [r0]
   33508:	ldr	r0, [r0, #4]
   3350c:	subs	r1, r1, #1
   33510:	sbcs	r0, r0, #0
   33514:	str	r1, [sp, #136]	; 0x88
   33518:	str	r0, [sp, #132]	; 0x84
   3351c:	blt	336a0 <__assert_fail@plt+0x2219c>
   33520:	b	33524 <__assert_fail@plt+0x22020>
   33524:	mov	r0, #0
   33528:	cmp	r0, #0
   3352c:	bne	33674 <__assert_fail@plt+0x22170>
   33530:	b	336a0 <__assert_fail@plt+0x2219c>
   33534:			; <UNDEFINED> instruction: 0xffff8000
   33538:	ldr	r0, [fp, #-12]
   3353c:	asr	r3, r0, #31
   33540:	mov	r1, #0
   33544:	mov	r2, #-2147483648	; 0x80000000
   33548:	str	r0, [sp, #128]	; 0x80
   3354c:	mov	r0, r1
   33550:	mov	r1, r2
   33554:	ldr	r2, [sp, #128]	; 0x80
   33558:	bl	37150 <__assert_fail@plt+0x25c4c>
   3355c:	ldr	r2, [fp, #-8]
   33560:	ldr	r3, [r2]
   33564:	ldr	r2, [r2, #4]
   33568:	subs	r0, r0, r3
   3356c:	sbcs	r1, r1, r2
   33570:	str	r0, [sp, #124]	; 0x7c
   33574:	str	r1, [sp, #120]	; 0x78
   33578:	blt	33674 <__assert_fail@plt+0x22170>
   3357c:	b	336a0 <__assert_fail@plt+0x2219c>
   33580:	ldr	r0, [fp, #-12]
   33584:	cmp	r0, #0
   33588:	bne	33590 <__assert_fail@plt+0x2208c>
   3358c:	b	336a0 <__assert_fail@plt+0x2219c>
   33590:	ldr	r0, [fp, #-8]
   33594:	ldr	r0, [r0, #4]
   33598:	cmn	r0, #1
   3359c:	bgt	3362c <__assert_fail@plt+0x22128>
   335a0:	b	335a4 <__assert_fail@plt+0x220a0>
   335a4:	ldr	r0, [fp, #-8]
   335a8:	ldr	r1, [r0]
   335ac:	ldr	r0, [r0, #4]
   335b0:	and	r0, r1, r0
   335b4:	cmn	r0, #1
   335b8:	bne	335f8 <__assert_fail@plt+0x220f4>
   335bc:	b	335c0 <__assert_fail@plt+0x220bc>
   335c0:	b	335c4 <__assert_fail@plt+0x220c0>
   335c4:	ldr	r0, [fp, #-12]
   335c8:	mov	r1, #-2147483648	; 0x80000000
   335cc:	add	r1, r1, r0, asr #31
   335d0:	rsbs	r0, r0, #0
   335d4:	rscs	r1, r1, #0
   335d8:	str	r0, [sp, #116]	; 0x74
   335dc:	str	r1, [sp, #112]	; 0x70
   335e0:	blt	33674 <__assert_fail@plt+0x22170>
   335e4:	b	336a0 <__assert_fail@plt+0x2219c>
   335e8:	mov	r0, #0
   335ec:	cmp	r0, #0
   335f0:	bne	33674 <__assert_fail@plt+0x22170>
   335f4:	b	336a0 <__assert_fail@plt+0x2219c>
   335f8:	ldr	r0, [fp, #-8]
   335fc:	ldr	r2, [r0]
   33600:	ldr	r3, [r0, #4]
   33604:	mov	r0, #0
   33608:	mov	r1, #-2147483648	; 0x80000000
   3360c:	bl	37150 <__assert_fail@plt+0x25c4c>
   33610:	ldr	r2, [fp, #-12]
   33614:	subs	r0, r0, r2
   33618:	sbcs	r1, r1, r2, asr #31
   3361c:	str	r0, [sp, #108]	; 0x6c
   33620:	str	r1, [sp, #104]	; 0x68
   33624:	blt	33674 <__assert_fail@plt+0x22170>
   33628:	b	336a0 <__assert_fail@plt+0x2219c>
   3362c:	ldr	r0, [fp, #-12]
   33630:	asr	r3, r0, #31
   33634:	mvn	r1, #0
   33638:	mvn	r2, #-2147483648	; 0x80000000
   3363c:	str	r0, [sp, #100]	; 0x64
   33640:	mov	r0, r1
   33644:	mov	r1, r2
   33648:	ldr	r2, [sp, #100]	; 0x64
   3364c:	bl	37150 <__assert_fail@plt+0x25c4c>
   33650:	ldr	r2, [fp, #-8]
   33654:	ldr	r3, [r2]
   33658:	ldr	r2, [r2, #4]
   3365c:	subs	r0, r0, r3
   33660:	sbcs	r1, r1, r2
   33664:	str	r0, [sp, #96]	; 0x60
   33668:	str	r1, [sp, #92]	; 0x5c
   3366c:	bge	336a0 <__assert_fail@plt+0x2219c>
   33670:	b	33674 <__assert_fail@plt+0x22170>
   33674:	ldr	r0, [fp, #-8]
   33678:	ldr	r1, [r0]
   3367c:	ldr	r0, [r0, #4]
   33680:	ldr	r2, [fp, #-12]
   33684:	asr	r3, r2, #31
   33688:	umull	ip, lr, r1, r2
   3368c:	mla	r1, r1, r3, lr
   33690:	mla	r0, r0, r2, r1
   33694:	str	ip, [fp, #-24]	; 0xffffffe8
   33698:	str	r0, [fp, #-20]	; 0xffffffec
   3369c:	b	339e4 <__assert_fail@plt+0x224e0>
   336a0:	ldr	r0, [fp, #-8]
   336a4:	ldr	r1, [r0]
   336a8:	ldr	r0, [r0, #4]
   336ac:	ldr	r2, [fp, #-12]
   336b0:	asr	r3, r2, #31
   336b4:	umull	ip, lr, r1, r2
   336b8:	mla	r1, r1, r3, lr
   336bc:	mla	r0, r0, r2, r1
   336c0:	str	ip, [fp, #-24]	; 0xffffffe8
   336c4:	str	r0, [fp, #-20]	; 0xffffffec
   336c8:	b	33a18 <__assert_fail@plt+0x22514>
   336cc:	ldr	r0, [fp, #-12]
   336d0:	cmp	r0, #0
   336d4:	bge	33890 <__assert_fail@plt+0x2238c>
   336d8:	ldr	r0, [fp, #-8]
   336dc:	ldr	r0, [r0, #4]
   336e0:	cmn	r0, #1
   336e4:	bgt	337d8 <__assert_fail@plt+0x222d4>
   336e8:	b	336ec <__assert_fail@plt+0x221e8>
   336ec:	b	3373c <__assert_fail@plt+0x22238>
   336f0:	ldr	r0, [fp, #-8]
   336f4:	ldr	r1, [r0]
   336f8:	ldr	r0, [r0, #4]
   336fc:	ldr	r2, [fp, #-12]
   33700:	asr	r3, r2, #31
   33704:	mvn	ip, #0
   33708:	str	r0, [sp, #88]	; 0x58
   3370c:	mov	r0, ip
   33710:	str	r1, [sp, #84]	; 0x54
   33714:	mov	r1, ip
   33718:	bl	37224 <__assert_fail@plt+0x25d20>
   3371c:	ldr	r2, [sp, #84]	; 0x54
   33720:	subs	r0, r2, r0
   33724:	ldr	r2, [sp, #88]	; 0x58
   33728:	sbcs	r1, r2, r1
   3372c:	str	r0, [sp, #80]	; 0x50
   33730:	str	r1, [sp, #76]	; 0x4c
   33734:	bcc	3398c <__assert_fail@plt+0x22488>
   33738:	b	339b8 <__assert_fail@plt+0x224b4>
   3373c:	b	33740 <__assert_fail@plt+0x2223c>
   33740:	ldr	r0, [pc, #760]	; 33a40 <__assert_fail@plt+0x2253c>
   33744:	ldr	r1, [fp, #-12]
   33748:	cmp	r1, r0
   3374c:	blt	33764 <__assert_fail@plt+0x22260>
   33750:	b	33778 <__assert_fail@plt+0x22274>
   33754:	ldr	r0, [fp, #-12]
   33758:	movw	r1, #0
   3375c:	cmp	r1, r0
   33760:	bge	33778 <__assert_fail@plt+0x22274>
   33764:	mov	r0, #1
   33768:	mvn	r1, #0
   3376c:	str	r1, [sp, #72]	; 0x48
   33770:	str	r0, [sp, #68]	; 0x44
   33774:	b	337a4 <__assert_fail@plt+0x222a0>
   33778:	ldr	r0, [fp, #-12]
   3377c:	rsb	r0, r0, #0
   33780:	asr	r3, r0, #31
   33784:	mvn	r1, #0
   33788:	str	r0, [sp, #64]	; 0x40
   3378c:	mov	r0, r1
   33790:	ldr	r2, [sp, #64]	; 0x40
   33794:	bl	37224 <__assert_fail@plt+0x25d20>
   33798:	str	r0, [sp, #72]	; 0x48
   3379c:	str	r1, [sp, #68]	; 0x44
   337a0:	b	337a4 <__assert_fail@plt+0x222a0>
   337a4:	ldr	r0, [sp, #68]	; 0x44
   337a8:	ldr	r1, [sp, #72]	; 0x48
   337ac:	ldr	r2, [fp, #-8]
   337b0:	ldr	r3, [r2]
   337b4:	ldr	r2, [r2, #4]
   337b8:	mvn	r2, r2
   337bc:	mvn	r3, r3
   337c0:	subs	r1, r3, r1
   337c4:	sbcs	r0, r2, r0
   337c8:	str	r1, [sp, #60]	; 0x3c
   337cc:	str	r0, [sp, #56]	; 0x38
   337d0:	bcs	3398c <__assert_fail@plt+0x22488>
   337d4:	b	339b8 <__assert_fail@plt+0x224b4>
   337d8:	b	337dc <__assert_fail@plt+0x222d8>
   337dc:	b	33860 <__assert_fail@plt+0x2235c>
   337e0:	b	33860 <__assert_fail@plt+0x2235c>
   337e4:	ldr	r0, [fp, #-12]
   337e8:	cmn	r0, #1
   337ec:	bne	33860 <__assert_fail@plt+0x2235c>
   337f0:	b	337f4 <__assert_fail@plt+0x222f0>
   337f4:	ldr	r0, [fp, #-8]
   337f8:	ldr	r1, [r0]
   337fc:	ldr	r0, [r0, #4]
   33800:	rsbs	r1, r1, #0
   33804:	rscs	r0, r0, #0
   33808:	str	r1, [sp, #52]	; 0x34
   3380c:	str	r0, [sp, #48]	; 0x30
   33810:	blt	3398c <__assert_fail@plt+0x22488>
   33814:	b	339b8 <__assert_fail@plt+0x224b4>
   33818:	ldr	r0, [fp, #-8]
   3381c:	ldr	r1, [r0]
   33820:	ldr	r0, [r0, #4]
   33824:	subs	r1, r1, #1
   33828:	sbcs	r0, r0, #0
   3382c:	str	r1, [sp, #44]	; 0x2c
   33830:	str	r0, [sp, #40]	; 0x28
   33834:	blt	339b8 <__assert_fail@plt+0x224b4>
   33838:	b	3383c <__assert_fail@plt+0x22338>
   3383c:	ldr	r0, [fp, #-8]
   33840:	ldr	r1, [r0]
   33844:	ldr	r0, [r0, #4]
   33848:	subs	r1, r1, #1
   3384c:	sbc	r0, r0, #0
   33850:	cmn	r0, #1
   33854:	str	r1, [sp, #36]	; 0x24
   33858:	bgt	3398c <__assert_fail@plt+0x22488>
   3385c:	b	339b8 <__assert_fail@plt+0x224b4>
   33860:	ldr	r0, [fp, #-12]
   33864:	mov	r1, #0
   33868:	sdiv	r0, r1, r0
   3386c:	ldr	r1, [fp, #-8]
   33870:	ldr	r2, [r1]
   33874:	ldr	r1, [r1, #4]
   33878:	subs	r2, r0, r2
   3387c:	rscs	r0, r1, r0, asr #31
   33880:	str	r2, [sp, #32]
   33884:	str	r0, [sp, #28]
   33888:	blt	3398c <__assert_fail@plt+0x22488>
   3388c:	b	339b8 <__assert_fail@plt+0x224b4>
   33890:	ldr	r0, [fp, #-12]
   33894:	cmp	r0, #0
   33898:	bne	338a0 <__assert_fail@plt+0x2239c>
   3389c:	b	339b8 <__assert_fail@plt+0x224b4>
   338a0:	ldr	r0, [fp, #-8]
   338a4:	ldr	r0, [r0, #4]
   338a8:	cmn	r0, #1
   338ac:	bgt	3394c <__assert_fail@plt+0x22448>
   338b0:	b	338b4 <__assert_fail@plt+0x223b0>
   338b4:	b	338b8 <__assert_fail@plt+0x223b4>
   338b8:	b	33910 <__assert_fail@plt+0x2240c>
   338bc:	b	33910 <__assert_fail@plt+0x2240c>
   338c0:	ldr	r0, [fp, #-8]
   338c4:	ldr	r1, [r0]
   338c8:	ldr	r0, [r0, #4]
   338cc:	and	r0, r1, r0
   338d0:	cmn	r0, #1
   338d4:	bne	33910 <__assert_fail@plt+0x2240c>
   338d8:	b	338dc <__assert_fail@plt+0x223d8>
   338dc:	b	338e0 <__assert_fail@plt+0x223dc>
   338e0:	ldr	r0, [fp, #-12]
   338e4:	add	r0, r0, #0
   338e8:	movw	r1, #0
   338ec:	cmp	r1, r0
   338f0:	blt	3398c <__assert_fail@plt+0x22488>
   338f4:	b	339b8 <__assert_fail@plt+0x224b4>
   338f8:	ldr	r0, [fp, #-12]
   338fc:	sub	r0, r0, #1
   33900:	mvn	r1, #0
   33904:	cmp	r1, r0
   33908:	blt	3398c <__assert_fail@plt+0x22488>
   3390c:	b	339b8 <__assert_fail@plt+0x224b4>
   33910:	ldr	r0, [fp, #-8]
   33914:	ldr	r2, [r0]
   33918:	ldr	r3, [r0, #4]
   3391c:	mov	r0, #0
   33920:	str	r0, [sp, #24]
   33924:	ldr	r1, [sp, #24]
   33928:	bl	37150 <__assert_fail@plt+0x25c4c>
   3392c:	ldr	r2, [fp, #-12]
   33930:	subs	r0, r0, r2
   33934:	sbcs	r1, r1, r2, asr #31
   33938:	str	r0, [sp, #20]
   3393c:	str	r1, [sp, #16]
   33940:	blt	3398c <__assert_fail@plt+0x22488>
   33944:	b	339b8 <__assert_fail@plt+0x224b4>
   33948:	svcvc	0x00ffffff
   3394c:	ldr	r0, [fp, #-12]
   33950:	asr	r3, r0, #31
   33954:	mvn	r1, #0
   33958:	str	r0, [sp, #12]
   3395c:	mov	r0, r1
   33960:	ldr	r2, [sp, #12]
   33964:	bl	37224 <__assert_fail@plt+0x25d20>
   33968:	ldr	r2, [fp, #-8]
   3396c:	ldr	r3, [r2]
   33970:	ldr	r2, [r2, #4]
   33974:	subs	r0, r0, r3
   33978:	sbcs	r1, r1, r2
   3397c:	str	r0, [sp, #8]
   33980:	str	r1, [sp, #4]
   33984:	bcs	339b8 <__assert_fail@plt+0x224b4>
   33988:	b	3398c <__assert_fail@plt+0x22488>
   3398c:	ldr	r0, [fp, #-8]
   33990:	ldr	r1, [r0]
   33994:	ldr	r0, [r0, #4]
   33998:	ldr	r2, [fp, #-12]
   3399c:	asr	r3, r2, #31
   339a0:	umull	ip, lr, r1, r2
   339a4:	mla	r1, r1, r3, lr
   339a8:	mla	r0, r0, r2, r1
   339ac:	str	ip, [fp, #-24]	; 0xffffffe8
   339b0:	str	r0, [fp, #-20]	; 0xffffffec
   339b4:	b	339e4 <__assert_fail@plt+0x224e0>
   339b8:	ldr	r0, [fp, #-8]
   339bc:	ldr	r1, [r0]
   339c0:	ldr	r0, [r0, #4]
   339c4:	ldr	r2, [fp, #-12]
   339c8:	asr	r3, r2, #31
   339cc:	umull	ip, lr, r1, r2
   339d0:	mla	r1, r1, r3, lr
   339d4:	mla	r0, r0, r2, r1
   339d8:	str	ip, [fp, #-24]	; 0xffffffe8
   339dc:	str	r0, [fp, #-20]	; 0xffffffec
   339e0:	b	33a18 <__assert_fail@plt+0x22514>
   339e4:	ldr	r0, [fp, #-8]
   339e8:	ldr	r1, [r0, #4]
   339ec:	mvn	r2, #0
   339f0:	cmp	r1, #0
   339f4:	movwlt	r2, #0
   339f8:	mvn	r3, #-2147483648	; 0x80000000
   339fc:	cmp	r1, #0
   33a00:	movlt	r3, #-2147483648	; 0x80000000
   33a04:	str	r3, [r0, #4]
   33a08:	str	r2, [r0]
   33a0c:	movw	r0, #1
   33a10:	str	r0, [fp, #-4]
   33a14:	b	33a34 <__assert_fail@plt+0x22530>
   33a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a20:	ldr	r2, [fp, #-8]
   33a24:	str	r1, [r2, #4]
   33a28:	str	r0, [r2]
   33a2c:	movw	r0, #0
   33a30:	str	r0, [fp, #-4]
   33a34:	ldr	r0, [fp, #-4]
   33a38:	mov	sp, fp
   33a3c:	pop	{fp, pc}
   33a40:	andhi	r0, r0, r1
   33a44:	svcvc	0x00ffffff
   33a48:	push	{fp, lr}
   33a4c:	mov	fp, sp
   33a50:	sub	sp, sp, #16
   33a54:	str	r0, [fp, #-4]
   33a58:	str	r1, [sp, #8]
   33a5c:	str	r2, [sp, #4]
   33a60:	movw	r0, #0
   33a64:	str	r0, [sp]
   33a68:	ldr	r0, [sp, #4]
   33a6c:	mvn	r1, #0
   33a70:	add	r1, r0, r1
   33a74:	str	r1, [sp, #4]
   33a78:	cmp	r0, #0
   33a7c:	beq	33a9c <__assert_fail@plt+0x22598>
   33a80:	ldr	r0, [fp, #-4]
   33a84:	ldr	r1, [sp, #8]
   33a88:	bl	31da0 <__assert_fail@plt+0x2089c>
   33a8c:	ldr	r1, [sp]
   33a90:	orr	r0, r1, r0
   33a94:	str	r0, [sp]
   33a98:	b	33a68 <__assert_fail@plt+0x22564>
   33a9c:	ldr	r0, [sp]
   33aa0:	mov	sp, fp
   33aa4:	pop	{fp, pc}
   33aa8:	push	{fp, lr}
   33aac:	mov	fp, sp
   33ab0:	sub	sp, sp, #16
   33ab4:	str	r0, [sp, #8]
   33ab8:	str	r1, [sp, #4]
   33abc:	ldr	r0, [sp, #8]
   33ac0:	cmp	r0, #0
   33ac4:	beq	33ad4 <__assert_fail@plt+0x225d0>
   33ac8:	ldr	r0, [sp, #4]
   33acc:	cmp	r0, #0
   33ad0:	bne	33ae0 <__assert_fail@plt+0x225dc>
   33ad4:	movw	r0, #1
   33ad8:	str	r0, [sp, #4]
   33adc:	str	r0, [sp, #8]
   33ae0:	ldr	r0, [sp, #4]
   33ae4:	cmp	r0, #0
   33ae8:	beq	33b1c <__assert_fail@plt+0x22618>
   33aec:	ldr	r0, [pc, #76]	; 33b40 <__assert_fail@plt+0x2263c>
   33af0:	ldr	r1, [sp, #4]
   33af4:	udiv	r0, r0, r1
   33af8:	ldr	r1, [sp, #8]
   33afc:	cmp	r0, r1
   33b00:	bcs	33b1c <__assert_fail@plt+0x22618>
   33b04:	bl	113fc <__errno_location@plt>
   33b08:	movw	lr, #12
   33b0c:	str	lr, [r0]
   33b10:	movw	r0, #0
   33b14:	str	r0, [fp, #-4]
   33b18:	b	33b34 <__assert_fail@plt+0x22630>
   33b1c:	ldr	r0, [sp, #8]
   33b20:	ldr	r1, [sp, #4]
   33b24:	bl	111ec <calloc@plt>
   33b28:	str	r0, [sp]
   33b2c:	ldr	r0, [sp]
   33b30:	str	r0, [fp, #-4]
   33b34:	ldr	r0, [fp, #-4]
   33b38:	mov	sp, fp
   33b3c:	pop	{fp, pc}
   33b40:	svcvc	0x00ffffff
   33b44:	push	{fp, lr}
   33b48:	mov	fp, sp
   33b4c:	sub	sp, sp, #16
   33b50:	str	r0, [sp, #8]
   33b54:	ldr	r0, [sp, #8]
   33b58:	cmp	r0, #0
   33b5c:	bne	33b68 <__assert_fail@plt+0x22664>
   33b60:	movw	r0, #1
   33b64:	str	r0, [sp, #8]
   33b68:	ldr	r0, [pc, #64]	; 33bb0 <__assert_fail@plt+0x226ac>
   33b6c:	ldr	r1, [sp, #8]
   33b70:	cmp	r0, r1
   33b74:	bcs	33b90 <__assert_fail@plt+0x2268c>
   33b78:	bl	113fc <__errno_location@plt>
   33b7c:	movw	lr, #12
   33b80:	str	lr, [r0]
   33b84:	movw	r0, #0
   33b88:	str	r0, [fp, #-4]
   33b8c:	b	33ba4 <__assert_fail@plt+0x226a0>
   33b90:	ldr	r0, [sp, #8]
   33b94:	bl	11378 <malloc@plt>
   33b98:	str	r0, [sp, #4]
   33b9c:	ldr	r0, [sp, #4]
   33ba0:	str	r0, [fp, #-4]
   33ba4:	ldr	r0, [fp, #-4]
   33ba8:	mov	sp, fp
   33bac:	pop	{fp, pc}
   33bb0:	svcvc	0x00ffffff
   33bb4:	push	{fp, lr}
   33bb8:	mov	fp, sp
   33bbc:	sub	sp, sp, #16
   33bc0:	str	r0, [sp, #8]
   33bc4:	str	r1, [sp, #4]
   33bc8:	ldr	r0, [sp, #8]
   33bcc:	movw	r1, #0
   33bd0:	cmp	r0, r1
   33bd4:	bne	33be8 <__assert_fail@plt+0x226e4>
   33bd8:	ldr	r0, [sp, #4]
   33bdc:	bl	33b44 <__assert_fail@plt+0x22640>
   33be0:	str	r0, [fp, #-4]
   33be4:	b	33c48 <__assert_fail@plt+0x22744>
   33be8:	ldr	r0, [sp, #4]
   33bec:	cmp	r0, #0
   33bf0:	bne	33c08 <__assert_fail@plt+0x22704>
   33bf4:	ldr	r0, [sp, #8]
   33bf8:	bl	35268 <__assert_fail@plt+0x23d64>
   33bfc:	movw	r0, #0
   33c00:	str	r0, [fp, #-4]
   33c04:	b	33c48 <__assert_fail@plt+0x22744>
   33c08:	ldr	r0, [pc, #68]	; 33c54 <__assert_fail@plt+0x22750>
   33c0c:	ldr	r1, [sp, #4]
   33c10:	cmp	r0, r1
   33c14:	bcs	33c30 <__assert_fail@plt+0x2272c>
   33c18:	bl	113fc <__errno_location@plt>
   33c1c:	movw	lr, #12
   33c20:	str	lr, [r0]
   33c24:	movw	r0, #0
   33c28:	str	r0, [fp, #-4]
   33c2c:	b	33c48 <__assert_fail@plt+0x22744>
   33c30:	ldr	r0, [sp, #8]
   33c34:	ldr	r1, [sp, #4]
   33c38:	bl	1130c <realloc@plt>
   33c3c:	str	r0, [sp]
   33c40:	ldr	r0, [sp]
   33c44:	str	r0, [fp, #-4]
   33c48:	ldr	r0, [fp, #-4]
   33c4c:	mov	sp, fp
   33c50:	pop	{fp, pc}
   33c54:	svcvc	0x00ffffff
   33c58:	push	{fp, lr}
   33c5c:	mov	fp, sp
   33c60:	sub	sp, sp, #24
   33c64:	str	r0, [fp, #-8]
   33c68:	str	r1, [sp, #12]
   33c6c:	ldr	r0, [fp, #-8]
   33c70:	str	r0, [sp, #8]
   33c74:	ldr	r0, [sp, #12]
   33c78:	str	r0, [sp, #4]
   33c7c:	ldr	r0, [sp, #8]
   33c80:	ldr	r1, [sp, #4]
   33c84:	cmp	r0, r1
   33c88:	bne	33c98 <__assert_fail@plt+0x22794>
   33c8c:	movw	r0, #0
   33c90:	str	r0, [fp, #-4]
   33c94:	b	33d04 <__assert_fail@plt+0x22800>
   33c98:	b	33c9c <__assert_fail@plt+0x22798>
   33c9c:	ldr	r0, [sp, #8]
   33ca0:	ldrb	r0, [r0]
   33ca4:	bl	36ed0 <__assert_fail@plt+0x259cc>
   33ca8:	strb	r0, [sp, #3]
   33cac:	ldr	r0, [sp, #4]
   33cb0:	ldrb	r0, [r0]
   33cb4:	bl	36ed0 <__assert_fail@plt+0x259cc>
   33cb8:	strb	r0, [sp, #2]
   33cbc:	ldrb	r0, [sp, #3]
   33cc0:	cmp	r0, #0
   33cc4:	bne	33ccc <__assert_fail@plt+0x227c8>
   33cc8:	b	33cf4 <__assert_fail@plt+0x227f0>
   33ccc:	ldr	r0, [sp, #8]
   33cd0:	add	r0, r0, #1
   33cd4:	str	r0, [sp, #8]
   33cd8:	ldr	r0, [sp, #4]
   33cdc:	add	r0, r0, #1
   33ce0:	str	r0, [sp, #4]
   33ce4:	ldrb	r0, [sp, #3]
   33ce8:	ldrb	r1, [sp, #2]
   33cec:	cmp	r0, r1
   33cf0:	beq	33c9c <__assert_fail@plt+0x22798>
   33cf4:	ldrb	r0, [sp, #3]
   33cf8:	ldrb	r1, [sp, #2]
   33cfc:	sub	r0, r0, r1
   33d00:	str	r0, [fp, #-4]
   33d04:	ldr	r0, [fp, #-4]
   33d08:	mov	sp, fp
   33d0c:	pop	{fp, pc}
   33d10:	push	{fp, lr}
   33d14:	mov	fp, sp
   33d18:	sub	sp, sp, #16
   33d1c:	str	r0, [sp, #8]
   33d20:	ldr	r0, [sp, #8]
   33d24:	bl	11348 <__fpending@plt>
   33d28:	cmp	r0, #0
   33d2c:	movw	r0, #0
   33d30:	movne	r0, #1
   33d34:	and	r0, r0, #1
   33d38:	strb	r0, [sp, #7]
   33d3c:	ldr	r0, [sp, #8]
   33d40:	bl	11354 <ferror_unlocked@plt>
   33d44:	cmp	r0, #0
   33d48:	movw	r0, #0
   33d4c:	movne	r0, #1
   33d50:	and	r0, r0, #1
   33d54:	strb	r0, [sp, #6]
   33d58:	ldr	r0, [sp, #8]
   33d5c:	bl	13174 <__assert_fail@plt+0x1c70>
   33d60:	cmp	r0, #0
   33d64:	movw	r0, #0
   33d68:	movne	r0, #1
   33d6c:	and	r0, r0, #1
   33d70:	strb	r0, [sp, #5]
   33d74:	ldrb	r0, [sp, #6]
   33d78:	tst	r0, #1
   33d7c:	bne	33da8 <__assert_fail@plt+0x228a4>
   33d80:	ldrb	r0, [sp, #5]
   33d84:	tst	r0, #1
   33d88:	beq	33dcc <__assert_fail@plt+0x228c8>
   33d8c:	ldrb	r0, [sp, #7]
   33d90:	tst	r0, #1
   33d94:	bne	33da8 <__assert_fail@plt+0x228a4>
   33d98:	bl	113fc <__errno_location@plt>
   33d9c:	ldr	r0, [r0]
   33da0:	cmp	r0, #9
   33da4:	beq	33dcc <__assert_fail@plt+0x228c8>
   33da8:	ldrb	r0, [sp, #5]
   33dac:	tst	r0, #1
   33db0:	bne	33dc0 <__assert_fail@plt+0x228bc>
   33db4:	bl	113fc <__errno_location@plt>
   33db8:	movw	lr, #0
   33dbc:	str	lr, [r0]
   33dc0:	mvn	r0, #0
   33dc4:	str	r0, [fp, #-4]
   33dc8:	b	33dd4 <__assert_fail@plt+0x228d0>
   33dcc:	movw	r0, #0
   33dd0:	str	r0, [fp, #-4]
   33dd4:	ldr	r0, [fp, #-4]
   33dd8:	mov	sp, fp
   33ddc:	pop	{fp, pc}
   33de0:	push	{fp, lr}
   33de4:	mov	fp, sp
   33de8:	sub	sp, sp, #184	; 0xb8
   33dec:	str	r0, [fp, #-8]
   33df0:	str	r1, [fp, #-12]
   33df4:	str	r2, [fp, #-16]
   33df8:	str	r3, [fp, #-20]	; 0xffffffec
   33dfc:	ldr	r0, [fp, #-12]
   33e00:	ldr	r1, [fp, #-8]
   33e04:	ldr	r1, [r1, #4]
   33e08:	cmp	r0, r1
   33e0c:	bhi	33e2c <__assert_fail@plt+0x22928>
   33e10:	ldr	r0, [fp, #-12]
   33e14:	ldr	r1, [fp, #-8]
   33e18:	str	r0, [r1]
   33e1c:	movw	r0, #1
   33e20:	and	r0, r0, #1
   33e24:	strb	r0, [fp, #-1]
   33e28:	b	3524c <__assert_fail@plt+0x23d48>
   33e2c:	b	341e4 <__assert_fail@plt+0x22ce0>
   33e30:	b	34004 <__assert_fail@plt+0x22b00>
   33e34:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e38:	cmp	r0, #0
   33e3c:	bcs	33f40 <__assert_fail@plt+0x22a3c>
   33e40:	ldr	r0, [fp, #-12]
   33e44:	cmp	r0, #0
   33e48:	bcs	33ed0 <__assert_fail@plt+0x229cc>
   33e4c:	b	33e6c <__assert_fail@plt+0x22968>
   33e50:	ldr	r0, [fp, #-12]
   33e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   33e58:	movw	r2, #127	; 0x7f
   33e5c:	udiv	r1, r2, r1
   33e60:	cmp	r0, r1
   33e64:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33e68:	b	33fec <__assert_fail@plt+0x22ae8>
   33e6c:	b	33e80 <__assert_fail@plt+0x2297c>
   33e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e74:	cmp	r0, #1
   33e78:	bcc	33e90 <__assert_fail@plt+0x2298c>
   33e7c:	b	33e9c <__assert_fail@plt+0x22998>
   33e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e84:	movw	r1, #0
   33e88:	cmp	r1, r0
   33e8c:	bcs	33e9c <__assert_fail@plt+0x22998>
   33e90:	movw	r0, #0
   33e94:	str	r0, [fp, #-32]	; 0xffffffe0
   33e98:	b	33eb4 <__assert_fail@plt+0x229b0>
   33e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ea0:	movw	r1, #0
   33ea4:	sub	r0, r1, r0
   33ea8:	movw	r1, #127	; 0x7f
   33eac:	udiv	r0, r1, r0
   33eb0:	str	r0, [fp, #-32]	; 0xffffffe0
   33eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33eb8:	ldr	r1, [fp, #-12]
   33ebc:	mvn	r2, #0
   33ec0:	sub	r1, r2, r1
   33ec4:	cmp	r0, r1
   33ec8:	bls	33fd4 <__assert_fail@plt+0x22ad0>
   33ecc:	b	33fec <__assert_fail@plt+0x22ae8>
   33ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ed4:	cmn	r0, #1
   33ed8:	bne	33f24 <__assert_fail@plt+0x22a20>
   33edc:	b	33efc <__assert_fail@plt+0x229f8>
   33ee0:	ldr	r0, [fp, #-12]
   33ee4:	mvn	r1, #127	; 0x7f
   33ee8:	add	r0, r0, r1
   33eec:	movw	r1, #0
   33ef0:	cmp	r1, r0
   33ef4:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33ef8:	b	33fec <__assert_fail@plt+0x22ae8>
   33efc:	ldr	r0, [fp, #-12]
   33f00:	movw	r1, #0
   33f04:	cmp	r1, r0
   33f08:	bcs	33fec <__assert_fail@plt+0x22ae8>
   33f0c:	ldr	r0, [fp, #-12]
   33f10:	sub	r0, r0, #1
   33f14:	movw	r1, #127	; 0x7f
   33f18:	cmp	r1, r0
   33f1c:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33f20:	b	33fec <__assert_fail@plt+0x22ae8>
   33f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f28:	mvn	r1, #127	; 0x7f
   33f2c:	udiv	r0, r1, r0
   33f30:	ldr	r1, [fp, #-12]
   33f34:	cmp	r0, r1
   33f38:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33f3c:	b	33fec <__assert_fail@plt+0x22ae8>
   33f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f44:	cmp	r0, #0
   33f48:	bne	33f50 <__assert_fail@plt+0x22a4c>
   33f4c:	b	33fec <__assert_fail@plt+0x22ae8>
   33f50:	ldr	r0, [fp, #-12]
   33f54:	cmp	r0, #0
   33f58:	bcs	33fbc <__assert_fail@plt+0x22ab8>
   33f5c:	ldr	r0, [fp, #-12]
   33f60:	cmn	r0, #1
   33f64:	bne	33fa0 <__assert_fail@plt+0x22a9c>
   33f68:	b	33f88 <__assert_fail@plt+0x22a84>
   33f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f70:	mvn	r1, #127	; 0x7f
   33f74:	add	r0, r0, r1
   33f78:	movw	r1, #0
   33f7c:	cmp	r1, r0
   33f80:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33f84:	b	33fec <__assert_fail@plt+0x22ae8>
   33f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f8c:	sub	r0, r0, #1
   33f90:	movw	r1, #127	; 0x7f
   33f94:	cmp	r1, r0
   33f98:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33f9c:	b	33fec <__assert_fail@plt+0x22ae8>
   33fa0:	ldr	r0, [fp, #-12]
   33fa4:	mvn	r1, #127	; 0x7f
   33fa8:	udiv	r0, r1, r0
   33fac:	ldr	r1, [fp, #-20]	; 0xffffffec
   33fb0:	cmp	r0, r1
   33fb4:	bcc	33fd4 <__assert_fail@plt+0x22ad0>
   33fb8:	b	33fec <__assert_fail@plt+0x22ae8>
   33fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   33fc0:	movw	r1, #127	; 0x7f
   33fc4:	udiv	r0, r1, r0
   33fc8:	ldr	r1, [fp, #-12]
   33fcc:	cmp	r0, r1
   33fd0:	bcs	33fec <__assert_fail@plt+0x22ae8>
   33fd4:	ldr	r0, [fp, #-12]
   33fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   33fdc:	mul	r0, r0, r1
   33fe0:	sxtb	r0, r0
   33fe4:	str	r0, [fp, #-24]	; 0xffffffe8
   33fe8:	b	35164 <__assert_fail@plt+0x23c60>
   33fec:	ldr	r0, [fp, #-12]
   33ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33ff4:	mul	r0, r0, r1
   33ff8:	sxtb	r0, r0
   33ffc:	str	r0, [fp, #-24]	; 0xffffffe8
   34000:	b	35180 <__assert_fail@plt+0x23c7c>
   34004:	ldr	r0, [fp, #-20]	; 0xffffffec
   34008:	cmp	r0, #0
   3400c:	bcs	34118 <__assert_fail@plt+0x22c14>
   34010:	ldr	r0, [fp, #-12]
   34014:	cmp	r0, #0
   34018:	bcs	340a0 <__assert_fail@plt+0x22b9c>
   3401c:	b	3403c <__assert_fail@plt+0x22b38>
   34020:	ldr	r0, [fp, #-12]
   34024:	ldr	r1, [fp, #-20]	; 0xffffffec
   34028:	movw	r2, #255	; 0xff
   3402c:	udiv	r1, r2, r1
   34030:	cmp	r0, r1
   34034:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   34038:	b	341cc <__assert_fail@plt+0x22cc8>
   3403c:	b	34050 <__assert_fail@plt+0x22b4c>
   34040:	ldr	r0, [fp, #-20]	; 0xffffffec
   34044:	cmp	r0, #1
   34048:	bcc	34060 <__assert_fail@plt+0x22b5c>
   3404c:	b	3406c <__assert_fail@plt+0x22b68>
   34050:	ldr	r0, [fp, #-20]	; 0xffffffec
   34054:	movw	r1, #0
   34058:	cmp	r1, r0
   3405c:	bcs	3406c <__assert_fail@plt+0x22b68>
   34060:	movw	r0, #0
   34064:	str	r0, [fp, #-36]	; 0xffffffdc
   34068:	b	34084 <__assert_fail@plt+0x22b80>
   3406c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34070:	movw	r1, #0
   34074:	sub	r0, r1, r0
   34078:	movw	r1, #255	; 0xff
   3407c:	udiv	r0, r1, r0
   34080:	str	r0, [fp, #-36]	; 0xffffffdc
   34084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34088:	ldr	r1, [fp, #-12]
   3408c:	mvn	r2, #0
   34090:	sub	r1, r2, r1
   34094:	cmp	r0, r1
   34098:	bls	341b4 <__assert_fail@plt+0x22cb0>
   3409c:	b	341cc <__assert_fail@plt+0x22cc8>
   340a0:	b	340a8 <__assert_fail@plt+0x22ba4>
   340a4:	b	340ac <__assert_fail@plt+0x22ba8>
   340a8:	b	340fc <__assert_fail@plt+0x22bf8>
   340ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   340b0:	cmn	r0, #1
   340b4:	bne	340fc <__assert_fail@plt+0x22bf8>
   340b8:	b	340d4 <__assert_fail@plt+0x22bd0>
   340bc:	ldr	r0, [fp, #-12]
   340c0:	add	r0, r0, #0
   340c4:	movw	r1, #0
   340c8:	cmp	r1, r0
   340cc:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   340d0:	b	341cc <__assert_fail@plt+0x22cc8>
   340d4:	ldr	r0, [fp, #-12]
   340d8:	movw	r1, #0
   340dc:	cmp	r1, r0
   340e0:	bcs	341cc <__assert_fail@plt+0x22cc8>
   340e4:	ldr	r0, [fp, #-12]
   340e8:	sub	r0, r0, #1
   340ec:	mvn	r1, #0
   340f0:	cmp	r1, r0
   340f4:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   340f8:	b	341cc <__assert_fail@plt+0x22cc8>
   340fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   34100:	movw	r1, #0
   34104:	udiv	r0, r1, r0
   34108:	ldr	r1, [fp, #-12]
   3410c:	cmp	r0, r1
   34110:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   34114:	b	341cc <__assert_fail@plt+0x22cc8>
   34118:	ldr	r0, [fp, #-20]	; 0xffffffec
   3411c:	cmp	r0, #0
   34120:	bne	34128 <__assert_fail@plt+0x22c24>
   34124:	b	341cc <__assert_fail@plt+0x22cc8>
   34128:	ldr	r0, [fp, #-12]
   3412c:	cmp	r0, #0
   34130:	bcs	3419c <__assert_fail@plt+0x22c98>
   34134:	b	3413c <__assert_fail@plt+0x22c38>
   34138:	b	34140 <__assert_fail@plt+0x22c3c>
   3413c:	b	34180 <__assert_fail@plt+0x22c7c>
   34140:	ldr	r0, [fp, #-12]
   34144:	cmn	r0, #1
   34148:	bne	34180 <__assert_fail@plt+0x22c7c>
   3414c:	b	34168 <__assert_fail@plt+0x22c64>
   34150:	ldr	r0, [fp, #-20]	; 0xffffffec
   34154:	add	r0, r0, #0
   34158:	movw	r1, #0
   3415c:	cmp	r1, r0
   34160:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   34164:	b	341cc <__assert_fail@plt+0x22cc8>
   34168:	ldr	r0, [fp, #-20]	; 0xffffffec
   3416c:	sub	r0, r0, #1
   34170:	mvn	r1, #0
   34174:	cmp	r1, r0
   34178:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   3417c:	b	341cc <__assert_fail@plt+0x22cc8>
   34180:	ldr	r0, [fp, #-12]
   34184:	movw	r1, #0
   34188:	udiv	r0, r1, r0
   3418c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34190:	cmp	r0, r1
   34194:	bcc	341b4 <__assert_fail@plt+0x22cb0>
   34198:	b	341cc <__assert_fail@plt+0x22cc8>
   3419c:	ldr	r0, [fp, #-20]	; 0xffffffec
   341a0:	movw	r1, #255	; 0xff
   341a4:	udiv	r0, r1, r0
   341a8:	ldr	r1, [fp, #-12]
   341ac:	cmp	r0, r1
   341b0:	bcs	341cc <__assert_fail@plt+0x22cc8>
   341b4:	ldr	r0, [fp, #-12]
   341b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   341bc:	mul	r0, r0, r1
   341c0:	and	r0, r0, #255	; 0xff
   341c4:	str	r0, [fp, #-24]	; 0xffffffe8
   341c8:	b	35164 <__assert_fail@plt+0x23c60>
   341cc:	ldr	r0, [fp, #-12]
   341d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   341d4:	mul	r0, r0, r1
   341d8:	and	r0, r0, #255	; 0xff
   341dc:	str	r0, [fp, #-24]	; 0xffffffe8
   341e0:	b	35180 <__assert_fail@plt+0x23c7c>
   341e4:	b	3459c <__assert_fail@plt+0x23098>
   341e8:	b	343bc <__assert_fail@plt+0x22eb8>
   341ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   341f0:	cmp	r0, #0
   341f4:	bcs	342f8 <__assert_fail@plt+0x22df4>
   341f8:	ldr	r0, [fp, #-12]
   341fc:	cmp	r0, #0
   34200:	bcs	34288 <__assert_fail@plt+0x22d84>
   34204:	b	34224 <__assert_fail@plt+0x22d20>
   34208:	ldr	r0, [fp, #-12]
   3420c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34210:	movw	r2, #32767	; 0x7fff
   34214:	udiv	r1, r2, r1
   34218:	cmp	r0, r1
   3421c:	bcc	3438c <__assert_fail@plt+0x22e88>
   34220:	b	343a4 <__assert_fail@plt+0x22ea0>
   34224:	b	34238 <__assert_fail@plt+0x22d34>
   34228:	ldr	r0, [fp, #-20]	; 0xffffffec
   3422c:	cmp	r0, #1
   34230:	bcc	34248 <__assert_fail@plt+0x22d44>
   34234:	b	34254 <__assert_fail@plt+0x22d50>
   34238:	ldr	r0, [fp, #-20]	; 0xffffffec
   3423c:	movw	r1, #0
   34240:	cmp	r1, r0
   34244:	bcs	34254 <__assert_fail@plt+0x22d50>
   34248:	movw	r0, #0
   3424c:	str	r0, [fp, #-40]	; 0xffffffd8
   34250:	b	3426c <__assert_fail@plt+0x22d68>
   34254:	ldr	r0, [fp, #-20]	; 0xffffffec
   34258:	movw	r1, #0
   3425c:	sub	r0, r1, r0
   34260:	movw	r1, #32767	; 0x7fff
   34264:	udiv	r0, r1, r0
   34268:	str	r0, [fp, #-40]	; 0xffffffd8
   3426c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34270:	ldr	r1, [fp, #-12]
   34274:	mvn	r2, #0
   34278:	sub	r1, r2, r1
   3427c:	cmp	r0, r1
   34280:	bls	3438c <__assert_fail@plt+0x22e88>
   34284:	b	343a4 <__assert_fail@plt+0x22ea0>
   34288:	ldr	r0, [fp, #-20]	; 0xffffffec
   3428c:	cmn	r0, #1
   34290:	bne	342dc <__assert_fail@plt+0x22dd8>
   34294:	b	342b4 <__assert_fail@plt+0x22db0>
   34298:	ldr	r0, [pc, #4036]	; 35264 <__assert_fail@plt+0x23d60>
   3429c:	ldr	r1, [fp, #-12]
   342a0:	add	r0, r1, r0
   342a4:	movw	r1, #0
   342a8:	cmp	r1, r0
   342ac:	bcc	3438c <__assert_fail@plt+0x22e88>
   342b0:	b	343a4 <__assert_fail@plt+0x22ea0>
   342b4:	ldr	r0, [fp, #-12]
   342b8:	movw	r1, #0
   342bc:	cmp	r1, r0
   342c0:	bcs	343a4 <__assert_fail@plt+0x22ea0>
   342c4:	ldr	r0, [fp, #-12]
   342c8:	sub	r0, r0, #1
   342cc:	movw	r1, #32767	; 0x7fff
   342d0:	cmp	r1, r0
   342d4:	bcc	3438c <__assert_fail@plt+0x22e88>
   342d8:	b	343a4 <__assert_fail@plt+0x22ea0>
   342dc:	ldr	r0, [pc, #3968]	; 35264 <__assert_fail@plt+0x23d60>
   342e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   342e4:	udiv	r0, r0, r1
   342e8:	ldr	r1, [fp, #-12]
   342ec:	cmp	r0, r1
   342f0:	bcc	3438c <__assert_fail@plt+0x22e88>
   342f4:	b	343a4 <__assert_fail@plt+0x22ea0>
   342f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   342fc:	cmp	r0, #0
   34300:	bne	34308 <__assert_fail@plt+0x22e04>
   34304:	b	343a4 <__assert_fail@plt+0x22ea0>
   34308:	ldr	r0, [fp, #-12]
   3430c:	cmp	r0, #0
   34310:	bcs	34374 <__assert_fail@plt+0x22e70>
   34314:	ldr	r0, [fp, #-12]
   34318:	cmn	r0, #1
   3431c:	bne	34358 <__assert_fail@plt+0x22e54>
   34320:	b	34340 <__assert_fail@plt+0x22e3c>
   34324:	ldr	r0, [pc, #3896]	; 35264 <__assert_fail@plt+0x23d60>
   34328:	ldr	r1, [fp, #-20]	; 0xffffffec
   3432c:	add	r0, r1, r0
   34330:	movw	r1, #0
   34334:	cmp	r1, r0
   34338:	bcc	3438c <__assert_fail@plt+0x22e88>
   3433c:	b	343a4 <__assert_fail@plt+0x22ea0>
   34340:	ldr	r0, [fp, #-20]	; 0xffffffec
   34344:	sub	r0, r0, #1
   34348:	movw	r1, #32767	; 0x7fff
   3434c:	cmp	r1, r0
   34350:	bcc	3438c <__assert_fail@plt+0x22e88>
   34354:	b	343a4 <__assert_fail@plt+0x22ea0>
   34358:	ldr	r0, [pc, #3844]	; 35264 <__assert_fail@plt+0x23d60>
   3435c:	ldr	r1, [fp, #-12]
   34360:	udiv	r0, r0, r1
   34364:	ldr	r1, [fp, #-20]	; 0xffffffec
   34368:	cmp	r0, r1
   3436c:	bcc	3438c <__assert_fail@plt+0x22e88>
   34370:	b	343a4 <__assert_fail@plt+0x22ea0>
   34374:	ldr	r0, [fp, #-20]	; 0xffffffec
   34378:	movw	r1, #32767	; 0x7fff
   3437c:	udiv	r0, r1, r0
   34380:	ldr	r1, [fp, #-12]
   34384:	cmp	r0, r1
   34388:	bcs	343a4 <__assert_fail@plt+0x22ea0>
   3438c:	ldr	r0, [fp, #-12]
   34390:	ldr	r1, [fp, #-20]	; 0xffffffec
   34394:	mul	r0, r0, r1
   34398:	sxth	r0, r0
   3439c:	str	r0, [fp, #-24]	; 0xffffffe8
   343a0:	b	35164 <__assert_fail@plt+0x23c60>
   343a4:	ldr	r0, [fp, #-12]
   343a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343ac:	mul	r0, r0, r1
   343b0:	sxth	r0, r0
   343b4:	str	r0, [fp, #-24]	; 0xffffffe8
   343b8:	b	35180 <__assert_fail@plt+0x23c7c>
   343bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   343c0:	cmp	r0, #0
   343c4:	bcs	344d0 <__assert_fail@plt+0x22fcc>
   343c8:	ldr	r0, [fp, #-12]
   343cc:	cmp	r0, #0
   343d0:	bcs	34458 <__assert_fail@plt+0x22f54>
   343d4:	b	343f4 <__assert_fail@plt+0x22ef0>
   343d8:	ldr	r0, [fp, #-12]
   343dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   343e0:	movw	r2, #65535	; 0xffff
   343e4:	udiv	r1, r2, r1
   343e8:	cmp	r0, r1
   343ec:	bcc	3456c <__assert_fail@plt+0x23068>
   343f0:	b	34584 <__assert_fail@plt+0x23080>
   343f4:	b	34408 <__assert_fail@plt+0x22f04>
   343f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   343fc:	cmp	r0, #1
   34400:	bcc	34418 <__assert_fail@plt+0x22f14>
   34404:	b	34424 <__assert_fail@plt+0x22f20>
   34408:	ldr	r0, [fp, #-20]	; 0xffffffec
   3440c:	movw	r1, #0
   34410:	cmp	r1, r0
   34414:	bcs	34424 <__assert_fail@plt+0x22f20>
   34418:	movw	r0, #0
   3441c:	str	r0, [fp, #-44]	; 0xffffffd4
   34420:	b	3443c <__assert_fail@plt+0x22f38>
   34424:	ldr	r0, [fp, #-20]	; 0xffffffec
   34428:	movw	r1, #0
   3442c:	sub	r0, r1, r0
   34430:	movw	r1, #65535	; 0xffff
   34434:	udiv	r0, r1, r0
   34438:	str	r0, [fp, #-44]	; 0xffffffd4
   3443c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34440:	ldr	r1, [fp, #-12]
   34444:	mvn	r2, #0
   34448:	sub	r1, r2, r1
   3444c:	cmp	r0, r1
   34450:	bls	3456c <__assert_fail@plt+0x23068>
   34454:	b	34584 <__assert_fail@plt+0x23080>
   34458:	b	34460 <__assert_fail@plt+0x22f5c>
   3445c:	b	34464 <__assert_fail@plt+0x22f60>
   34460:	b	344b4 <__assert_fail@plt+0x22fb0>
   34464:	ldr	r0, [fp, #-20]	; 0xffffffec
   34468:	cmn	r0, #1
   3446c:	bne	344b4 <__assert_fail@plt+0x22fb0>
   34470:	b	3448c <__assert_fail@plt+0x22f88>
   34474:	ldr	r0, [fp, #-12]
   34478:	add	r0, r0, #0
   3447c:	movw	r1, #0
   34480:	cmp	r1, r0
   34484:	bcc	3456c <__assert_fail@plt+0x23068>
   34488:	b	34584 <__assert_fail@plt+0x23080>
   3448c:	ldr	r0, [fp, #-12]
   34490:	movw	r1, #0
   34494:	cmp	r1, r0
   34498:	bcs	34584 <__assert_fail@plt+0x23080>
   3449c:	ldr	r0, [fp, #-12]
   344a0:	sub	r0, r0, #1
   344a4:	mvn	r1, #0
   344a8:	cmp	r1, r0
   344ac:	bcc	3456c <__assert_fail@plt+0x23068>
   344b0:	b	34584 <__assert_fail@plt+0x23080>
   344b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   344b8:	movw	r1, #0
   344bc:	udiv	r0, r1, r0
   344c0:	ldr	r1, [fp, #-12]
   344c4:	cmp	r0, r1
   344c8:	bcc	3456c <__assert_fail@plt+0x23068>
   344cc:	b	34584 <__assert_fail@plt+0x23080>
   344d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   344d4:	cmp	r0, #0
   344d8:	bne	344e0 <__assert_fail@plt+0x22fdc>
   344dc:	b	34584 <__assert_fail@plt+0x23080>
   344e0:	ldr	r0, [fp, #-12]
   344e4:	cmp	r0, #0
   344e8:	bcs	34554 <__assert_fail@plt+0x23050>
   344ec:	b	344f4 <__assert_fail@plt+0x22ff0>
   344f0:	b	344f8 <__assert_fail@plt+0x22ff4>
   344f4:	b	34538 <__assert_fail@plt+0x23034>
   344f8:	ldr	r0, [fp, #-12]
   344fc:	cmn	r0, #1
   34500:	bne	34538 <__assert_fail@plt+0x23034>
   34504:	b	34520 <__assert_fail@plt+0x2301c>
   34508:	ldr	r0, [fp, #-20]	; 0xffffffec
   3450c:	add	r0, r0, #0
   34510:	movw	r1, #0
   34514:	cmp	r1, r0
   34518:	bcc	3456c <__assert_fail@plt+0x23068>
   3451c:	b	34584 <__assert_fail@plt+0x23080>
   34520:	ldr	r0, [fp, #-20]	; 0xffffffec
   34524:	sub	r0, r0, #1
   34528:	mvn	r1, #0
   3452c:	cmp	r1, r0
   34530:	bcc	3456c <__assert_fail@plt+0x23068>
   34534:	b	34584 <__assert_fail@plt+0x23080>
   34538:	ldr	r0, [fp, #-12]
   3453c:	movw	r1, #0
   34540:	udiv	r0, r1, r0
   34544:	ldr	r1, [fp, #-20]	; 0xffffffec
   34548:	cmp	r0, r1
   3454c:	bcc	3456c <__assert_fail@plt+0x23068>
   34550:	b	34584 <__assert_fail@plt+0x23080>
   34554:	ldr	r0, [fp, #-20]	; 0xffffffec
   34558:	movw	r1, #65535	; 0xffff
   3455c:	udiv	r0, r1, r0
   34560:	ldr	r1, [fp, #-12]
   34564:	cmp	r0, r1
   34568:	bcs	34584 <__assert_fail@plt+0x23080>
   3456c:	ldr	r0, [fp, #-12]
   34570:	ldr	r1, [fp, #-20]	; 0xffffffec
   34574:	mul	r0, r0, r1
   34578:	uxth	r0, r0
   3457c:	str	r0, [fp, #-24]	; 0xffffffe8
   34580:	b	35164 <__assert_fail@plt+0x23c60>
   34584:	ldr	r0, [fp, #-12]
   34588:	ldr	r1, [fp, #-20]	; 0xffffffec
   3458c:	mul	r0, r0, r1
   34590:	uxth	r0, r0
   34594:	str	r0, [fp, #-24]	; 0xffffffe8
   34598:	b	35180 <__assert_fail@plt+0x23c7c>
   3459c:	b	345a0 <__assert_fail@plt+0x2309c>
   345a0:	b	34764 <__assert_fail@plt+0x23260>
   345a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   345a8:	cmp	r0, #0
   345ac:	bcs	346ac <__assert_fail@plt+0x231a8>
   345b0:	ldr	r0, [fp, #-12]
   345b4:	cmp	r0, #0
   345b8:	bcs	34640 <__assert_fail@plt+0x2313c>
   345bc:	b	345dc <__assert_fail@plt+0x230d8>
   345c0:	ldr	r0, [pc, #3220]	; 3525c <__assert_fail@plt+0x23d58>
   345c4:	ldr	r1, [fp, #-12]
   345c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   345cc:	udiv	r0, r0, r2
   345d0:	cmp	r1, r0
   345d4:	bcc	3473c <__assert_fail@plt+0x23238>
   345d8:	b	34750 <__assert_fail@plt+0x2324c>
   345dc:	b	345f0 <__assert_fail@plt+0x230ec>
   345e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   345e4:	cmp	r0, #1
   345e8:	bcc	34600 <__assert_fail@plt+0x230fc>
   345ec:	b	3460c <__assert_fail@plt+0x23108>
   345f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   345f4:	movw	r1, #0
   345f8:	cmp	r1, r0
   345fc:	bcs	3460c <__assert_fail@plt+0x23108>
   34600:	movw	r0, #0
   34604:	str	r0, [fp, #-48]	; 0xffffffd0
   34608:	b	34624 <__assert_fail@plt+0x23120>
   3460c:	ldr	r0, [pc, #3144]	; 3525c <__assert_fail@plt+0x23d58>
   34610:	ldr	r1, [fp, #-20]	; 0xffffffec
   34614:	movw	r2, #0
   34618:	sub	r1, r2, r1
   3461c:	udiv	r0, r0, r1
   34620:	str	r0, [fp, #-48]	; 0xffffffd0
   34624:	ldr	r0, [fp, #-48]	; 0xffffffd0
   34628:	ldr	r1, [fp, #-12]
   3462c:	mvn	r2, #0
   34630:	sub	r1, r2, r1
   34634:	cmp	r0, r1
   34638:	bls	3473c <__assert_fail@plt+0x23238>
   3463c:	b	34750 <__assert_fail@plt+0x2324c>
   34640:	ldr	r0, [fp, #-20]	; 0xffffffec
   34644:	cmn	r0, #1
   34648:	bne	34690 <__assert_fail@plt+0x2318c>
   3464c:	b	34668 <__assert_fail@plt+0x23164>
   34650:	ldr	r0, [fp, #-12]
   34654:	add	r0, r0, #-2147483648	; 0x80000000
   34658:	movw	r1, #0
   3465c:	cmp	r1, r0
   34660:	bcc	3473c <__assert_fail@plt+0x23238>
   34664:	b	34750 <__assert_fail@plt+0x2324c>
   34668:	ldr	r0, [fp, #-12]
   3466c:	movw	r1, #0
   34670:	cmp	r1, r0
   34674:	bcs	34750 <__assert_fail@plt+0x2324c>
   34678:	ldr	r0, [pc, #3036]	; 3525c <__assert_fail@plt+0x23d58>
   3467c:	ldr	r1, [fp, #-12]
   34680:	sub	r1, r1, #1
   34684:	cmp	r0, r1
   34688:	bcc	3473c <__assert_fail@plt+0x23238>
   3468c:	b	34750 <__assert_fail@plt+0x2324c>
   34690:	ldr	r0, [pc, #3016]	; 35260 <__assert_fail@plt+0x23d5c>
   34694:	ldr	r1, [fp, #-20]	; 0xffffffec
   34698:	udiv	r0, r0, r1
   3469c:	ldr	r1, [fp, #-12]
   346a0:	cmp	r0, r1
   346a4:	bcc	3473c <__assert_fail@plt+0x23238>
   346a8:	b	34750 <__assert_fail@plt+0x2324c>
   346ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   346b0:	cmp	r0, #0
   346b4:	bne	346bc <__assert_fail@plt+0x231b8>
   346b8:	b	34750 <__assert_fail@plt+0x2324c>
   346bc:	ldr	r0, [fp, #-12]
   346c0:	cmp	r0, #0
   346c4:	bcs	34724 <__assert_fail@plt+0x23220>
   346c8:	ldr	r0, [fp, #-12]
   346cc:	cmn	r0, #1
   346d0:	bne	34708 <__assert_fail@plt+0x23204>
   346d4:	b	346f0 <__assert_fail@plt+0x231ec>
   346d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   346dc:	add	r0, r0, #-2147483648	; 0x80000000
   346e0:	movw	r1, #0
   346e4:	cmp	r1, r0
   346e8:	bcc	3473c <__assert_fail@plt+0x23238>
   346ec:	b	34750 <__assert_fail@plt+0x2324c>
   346f0:	ldr	r0, [pc, #2916]	; 3525c <__assert_fail@plt+0x23d58>
   346f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   346f8:	sub	r1, r1, #1
   346fc:	cmp	r0, r1
   34700:	bcc	3473c <__assert_fail@plt+0x23238>
   34704:	b	34750 <__assert_fail@plt+0x2324c>
   34708:	ldr	r0, [pc, #2896]	; 35260 <__assert_fail@plt+0x23d5c>
   3470c:	ldr	r1, [fp, #-12]
   34710:	udiv	r0, r0, r1
   34714:	ldr	r1, [fp, #-20]	; 0xffffffec
   34718:	cmp	r0, r1
   3471c:	bcc	3473c <__assert_fail@plt+0x23238>
   34720:	b	34750 <__assert_fail@plt+0x2324c>
   34724:	ldr	r0, [pc, #2864]	; 3525c <__assert_fail@plt+0x23d58>
   34728:	ldr	r1, [fp, #-20]	; 0xffffffec
   3472c:	udiv	r0, r0, r1
   34730:	ldr	r1, [fp, #-12]
   34734:	cmp	r0, r1
   34738:	bcs	34750 <__assert_fail@plt+0x2324c>
   3473c:	ldr	r0, [fp, #-12]
   34740:	ldr	r1, [fp, #-20]	; 0xffffffec
   34744:	mul	r0, r0, r1
   34748:	str	r0, [fp, #-24]	; 0xffffffe8
   3474c:	b	35164 <__assert_fail@plt+0x23c60>
   34750:	ldr	r0, [fp, #-12]
   34754:	ldr	r1, [fp, #-20]	; 0xffffffec
   34758:	mul	r0, r0, r1
   3475c:	str	r0, [fp, #-24]	; 0xffffffe8
   34760:	b	35180 <__assert_fail@plt+0x23c7c>
   34764:	ldr	r0, [fp, #-20]	; 0xffffffec
   34768:	cmp	r0, #0
   3476c:	bcs	34878 <__assert_fail@plt+0x23374>
   34770:	ldr	r0, [fp, #-12]
   34774:	cmp	r0, #0
   34778:	bcs	34800 <__assert_fail@plt+0x232fc>
   3477c:	b	3479c <__assert_fail@plt+0x23298>
   34780:	ldr	r0, [fp, #-12]
   34784:	ldr	r1, [fp, #-20]	; 0xffffffec
   34788:	mvn	r2, #0
   3478c:	udiv	r1, r2, r1
   34790:	cmp	r0, r1
   34794:	bcc	34914 <__assert_fail@plt+0x23410>
   34798:	b	34928 <__assert_fail@plt+0x23424>
   3479c:	b	347b0 <__assert_fail@plt+0x232ac>
   347a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   347a4:	cmp	r0, #1
   347a8:	bcc	347c0 <__assert_fail@plt+0x232bc>
   347ac:	b	347cc <__assert_fail@plt+0x232c8>
   347b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   347b4:	movw	r1, #0
   347b8:	cmp	r1, r0
   347bc:	bcs	347cc <__assert_fail@plt+0x232c8>
   347c0:	movw	r0, #1
   347c4:	str	r0, [fp, #-52]	; 0xffffffcc
   347c8:	b	347e4 <__assert_fail@plt+0x232e0>
   347cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   347d0:	movw	r1, #0
   347d4:	sub	r0, r1, r0
   347d8:	mvn	r1, #0
   347dc:	udiv	r0, r1, r0
   347e0:	str	r0, [fp, #-52]	; 0xffffffcc
   347e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   347e8:	ldr	r1, [fp, #-12]
   347ec:	mvn	r2, #0
   347f0:	sub	r1, r2, r1
   347f4:	cmp	r0, r1
   347f8:	bls	34914 <__assert_fail@plt+0x23410>
   347fc:	b	34928 <__assert_fail@plt+0x23424>
   34800:	b	34808 <__assert_fail@plt+0x23304>
   34804:	b	3480c <__assert_fail@plt+0x23308>
   34808:	b	3485c <__assert_fail@plt+0x23358>
   3480c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34810:	cmn	r0, #1
   34814:	bne	3485c <__assert_fail@plt+0x23358>
   34818:	b	34834 <__assert_fail@plt+0x23330>
   3481c:	ldr	r0, [fp, #-12]
   34820:	add	r0, r0, #0
   34824:	movw	r1, #0
   34828:	cmp	r1, r0
   3482c:	bcc	34914 <__assert_fail@plt+0x23410>
   34830:	b	34928 <__assert_fail@plt+0x23424>
   34834:	ldr	r0, [fp, #-12]
   34838:	movw	r1, #0
   3483c:	cmp	r1, r0
   34840:	bcs	34928 <__assert_fail@plt+0x23424>
   34844:	ldr	r0, [fp, #-12]
   34848:	sub	r0, r0, #1
   3484c:	mvn	r1, #0
   34850:	cmp	r1, r0
   34854:	bcc	34914 <__assert_fail@plt+0x23410>
   34858:	b	34928 <__assert_fail@plt+0x23424>
   3485c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34860:	movw	r1, #0
   34864:	udiv	r0, r1, r0
   34868:	ldr	r1, [fp, #-12]
   3486c:	cmp	r0, r1
   34870:	bcc	34914 <__assert_fail@plt+0x23410>
   34874:	b	34928 <__assert_fail@plt+0x23424>
   34878:	ldr	r0, [fp, #-20]	; 0xffffffec
   3487c:	cmp	r0, #0
   34880:	bne	34888 <__assert_fail@plt+0x23384>
   34884:	b	34928 <__assert_fail@plt+0x23424>
   34888:	ldr	r0, [fp, #-12]
   3488c:	cmp	r0, #0
   34890:	bcs	348fc <__assert_fail@plt+0x233f8>
   34894:	b	3489c <__assert_fail@plt+0x23398>
   34898:	b	348a0 <__assert_fail@plt+0x2339c>
   3489c:	b	348e0 <__assert_fail@plt+0x233dc>
   348a0:	ldr	r0, [fp, #-12]
   348a4:	cmn	r0, #1
   348a8:	bne	348e0 <__assert_fail@plt+0x233dc>
   348ac:	b	348c8 <__assert_fail@plt+0x233c4>
   348b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   348b4:	add	r0, r0, #0
   348b8:	movw	r1, #0
   348bc:	cmp	r1, r0
   348c0:	bcc	34914 <__assert_fail@plt+0x23410>
   348c4:	b	34928 <__assert_fail@plt+0x23424>
   348c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   348cc:	sub	r0, r0, #1
   348d0:	mvn	r1, #0
   348d4:	cmp	r1, r0
   348d8:	bcc	34914 <__assert_fail@plt+0x23410>
   348dc:	b	34928 <__assert_fail@plt+0x23424>
   348e0:	ldr	r0, [fp, #-12]
   348e4:	movw	r1, #0
   348e8:	udiv	r0, r1, r0
   348ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   348f0:	cmp	r0, r1
   348f4:	bcc	34914 <__assert_fail@plt+0x23410>
   348f8:	b	34928 <__assert_fail@plt+0x23424>
   348fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   34900:	mvn	r1, #0
   34904:	udiv	r0, r1, r0
   34908:	ldr	r1, [fp, #-12]
   3490c:	cmp	r0, r1
   34910:	bcs	34928 <__assert_fail@plt+0x23424>
   34914:	ldr	r0, [fp, #-12]
   34918:	ldr	r1, [fp, #-20]	; 0xffffffec
   3491c:	mul	r0, r0, r1
   34920:	str	r0, [fp, #-24]	; 0xffffffe8
   34924:	b	35164 <__assert_fail@plt+0x23c60>
   34928:	ldr	r0, [fp, #-12]
   3492c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34930:	mul	r0, r0, r1
   34934:	str	r0, [fp, #-24]	; 0xffffffe8
   34938:	b	35180 <__assert_fail@plt+0x23c7c>
   3493c:	b	34940 <__assert_fail@plt+0x2343c>
   34940:	b	34b04 <__assert_fail@plt+0x23600>
   34944:	ldr	r0, [fp, #-20]	; 0xffffffec
   34948:	cmp	r0, #0
   3494c:	bcs	34a4c <__assert_fail@plt+0x23548>
   34950:	ldr	r0, [fp, #-12]
   34954:	cmp	r0, #0
   34958:	bcs	349e0 <__assert_fail@plt+0x234dc>
   3495c:	b	3497c <__assert_fail@plt+0x23478>
   34960:	ldr	r0, [pc, #2292]	; 3525c <__assert_fail@plt+0x23d58>
   34964:	ldr	r1, [fp, #-12]
   34968:	ldr	r2, [fp, #-20]	; 0xffffffec
   3496c:	udiv	r0, r0, r2
   34970:	cmp	r1, r0
   34974:	bcc	34adc <__assert_fail@plt+0x235d8>
   34978:	b	34af0 <__assert_fail@plt+0x235ec>
   3497c:	b	34990 <__assert_fail@plt+0x2348c>
   34980:	ldr	r0, [fp, #-20]	; 0xffffffec
   34984:	cmp	r0, #1
   34988:	bcc	349a0 <__assert_fail@plt+0x2349c>
   3498c:	b	349ac <__assert_fail@plt+0x234a8>
   34990:	ldr	r0, [fp, #-20]	; 0xffffffec
   34994:	movw	r1, #0
   34998:	cmp	r1, r0
   3499c:	bcs	349ac <__assert_fail@plt+0x234a8>
   349a0:	movw	r0, #0
   349a4:	str	r0, [fp, #-56]	; 0xffffffc8
   349a8:	b	349c4 <__assert_fail@plt+0x234c0>
   349ac:	ldr	r0, [pc, #2216]	; 3525c <__assert_fail@plt+0x23d58>
   349b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   349b4:	movw	r2, #0
   349b8:	sub	r1, r2, r1
   349bc:	udiv	r0, r0, r1
   349c0:	str	r0, [fp, #-56]	; 0xffffffc8
   349c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   349c8:	ldr	r1, [fp, #-12]
   349cc:	mvn	r2, #0
   349d0:	sub	r1, r2, r1
   349d4:	cmp	r0, r1
   349d8:	bls	34adc <__assert_fail@plt+0x235d8>
   349dc:	b	34af0 <__assert_fail@plt+0x235ec>
   349e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   349e4:	cmn	r0, #1
   349e8:	bne	34a30 <__assert_fail@plt+0x2352c>
   349ec:	b	34a08 <__assert_fail@plt+0x23504>
   349f0:	ldr	r0, [fp, #-12]
   349f4:	add	r0, r0, #-2147483648	; 0x80000000
   349f8:	movw	r1, #0
   349fc:	cmp	r1, r0
   34a00:	bcc	34adc <__assert_fail@plt+0x235d8>
   34a04:	b	34af0 <__assert_fail@plt+0x235ec>
   34a08:	ldr	r0, [fp, #-12]
   34a0c:	movw	r1, #0
   34a10:	cmp	r1, r0
   34a14:	bcs	34af0 <__assert_fail@plt+0x235ec>
   34a18:	ldr	r0, [pc, #2108]	; 3525c <__assert_fail@plt+0x23d58>
   34a1c:	ldr	r1, [fp, #-12]
   34a20:	sub	r1, r1, #1
   34a24:	cmp	r0, r1
   34a28:	bcc	34adc <__assert_fail@plt+0x235d8>
   34a2c:	b	34af0 <__assert_fail@plt+0x235ec>
   34a30:	ldr	r0, [pc, #2088]	; 35260 <__assert_fail@plt+0x23d5c>
   34a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a38:	udiv	r0, r0, r1
   34a3c:	ldr	r1, [fp, #-12]
   34a40:	cmp	r0, r1
   34a44:	bcc	34adc <__assert_fail@plt+0x235d8>
   34a48:	b	34af0 <__assert_fail@plt+0x235ec>
   34a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a50:	cmp	r0, #0
   34a54:	bne	34a5c <__assert_fail@plt+0x23558>
   34a58:	b	34af0 <__assert_fail@plt+0x235ec>
   34a5c:	ldr	r0, [fp, #-12]
   34a60:	cmp	r0, #0
   34a64:	bcs	34ac4 <__assert_fail@plt+0x235c0>
   34a68:	ldr	r0, [fp, #-12]
   34a6c:	cmn	r0, #1
   34a70:	bne	34aa8 <__assert_fail@plt+0x235a4>
   34a74:	b	34a90 <__assert_fail@plt+0x2358c>
   34a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a7c:	add	r0, r0, #-2147483648	; 0x80000000
   34a80:	movw	r1, #0
   34a84:	cmp	r1, r0
   34a88:	bcc	34adc <__assert_fail@plt+0x235d8>
   34a8c:	b	34af0 <__assert_fail@plt+0x235ec>
   34a90:	ldr	r0, [pc, #1988]	; 3525c <__assert_fail@plt+0x23d58>
   34a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a98:	sub	r1, r1, #1
   34a9c:	cmp	r0, r1
   34aa0:	bcc	34adc <__assert_fail@plt+0x235d8>
   34aa4:	b	34af0 <__assert_fail@plt+0x235ec>
   34aa8:	ldr	r0, [pc, #1968]	; 35260 <__assert_fail@plt+0x23d5c>
   34aac:	ldr	r1, [fp, #-12]
   34ab0:	udiv	r0, r0, r1
   34ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   34ab8:	cmp	r0, r1
   34abc:	bcc	34adc <__assert_fail@plt+0x235d8>
   34ac0:	b	34af0 <__assert_fail@plt+0x235ec>
   34ac4:	ldr	r0, [pc, #1936]	; 3525c <__assert_fail@plt+0x23d58>
   34ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   34acc:	udiv	r0, r0, r1
   34ad0:	ldr	r1, [fp, #-12]
   34ad4:	cmp	r0, r1
   34ad8:	bcs	34af0 <__assert_fail@plt+0x235ec>
   34adc:	ldr	r0, [fp, #-12]
   34ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   34ae4:	mul	r0, r0, r1
   34ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   34aec:	b	35164 <__assert_fail@plt+0x23c60>
   34af0:	ldr	r0, [fp, #-12]
   34af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   34af8:	mul	r0, r0, r1
   34afc:	str	r0, [fp, #-24]	; 0xffffffe8
   34b00:	b	35180 <__assert_fail@plt+0x23c7c>
   34b04:	ldr	r0, [fp, #-20]	; 0xffffffec
   34b08:	cmp	r0, #0
   34b0c:	bcs	34c18 <__assert_fail@plt+0x23714>
   34b10:	ldr	r0, [fp, #-12]
   34b14:	cmp	r0, #0
   34b18:	bcs	34ba0 <__assert_fail@plt+0x2369c>
   34b1c:	b	34b3c <__assert_fail@plt+0x23638>
   34b20:	ldr	r0, [fp, #-12]
   34b24:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b28:	mvn	r2, #0
   34b2c:	udiv	r1, r2, r1
   34b30:	cmp	r0, r1
   34b34:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34b38:	b	34cc8 <__assert_fail@plt+0x237c4>
   34b3c:	b	34b50 <__assert_fail@plt+0x2364c>
   34b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   34b44:	cmp	r0, #1
   34b48:	bcc	34b60 <__assert_fail@plt+0x2365c>
   34b4c:	b	34b6c <__assert_fail@plt+0x23668>
   34b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   34b54:	movw	r1, #0
   34b58:	cmp	r1, r0
   34b5c:	bcs	34b6c <__assert_fail@plt+0x23668>
   34b60:	movw	r0, #1
   34b64:	str	r0, [fp, #-60]	; 0xffffffc4
   34b68:	b	34b84 <__assert_fail@plt+0x23680>
   34b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34b70:	movw	r1, #0
   34b74:	sub	r0, r1, r0
   34b78:	mvn	r1, #0
   34b7c:	udiv	r0, r1, r0
   34b80:	str	r0, [fp, #-60]	; 0xffffffc4
   34b84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   34b88:	ldr	r1, [fp, #-12]
   34b8c:	mvn	r2, #0
   34b90:	sub	r1, r2, r1
   34b94:	cmp	r0, r1
   34b98:	bls	34cb4 <__assert_fail@plt+0x237b0>
   34b9c:	b	34cc8 <__assert_fail@plt+0x237c4>
   34ba0:	b	34ba8 <__assert_fail@plt+0x236a4>
   34ba4:	b	34bac <__assert_fail@plt+0x236a8>
   34ba8:	b	34bfc <__assert_fail@plt+0x236f8>
   34bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   34bb0:	cmn	r0, #1
   34bb4:	bne	34bfc <__assert_fail@plt+0x236f8>
   34bb8:	b	34bd4 <__assert_fail@plt+0x236d0>
   34bbc:	ldr	r0, [fp, #-12]
   34bc0:	add	r0, r0, #0
   34bc4:	movw	r1, #0
   34bc8:	cmp	r1, r0
   34bcc:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34bd0:	b	34cc8 <__assert_fail@plt+0x237c4>
   34bd4:	ldr	r0, [fp, #-12]
   34bd8:	movw	r1, #0
   34bdc:	cmp	r1, r0
   34be0:	bcs	34cc8 <__assert_fail@plt+0x237c4>
   34be4:	ldr	r0, [fp, #-12]
   34be8:	sub	r0, r0, #1
   34bec:	mvn	r1, #0
   34bf0:	cmp	r1, r0
   34bf4:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34bf8:	b	34cc8 <__assert_fail@plt+0x237c4>
   34bfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c00:	movw	r1, #0
   34c04:	udiv	r0, r1, r0
   34c08:	ldr	r1, [fp, #-12]
   34c0c:	cmp	r0, r1
   34c10:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34c14:	b	34cc8 <__assert_fail@plt+0x237c4>
   34c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c1c:	cmp	r0, #0
   34c20:	bne	34c28 <__assert_fail@plt+0x23724>
   34c24:	b	34cc8 <__assert_fail@plt+0x237c4>
   34c28:	ldr	r0, [fp, #-12]
   34c2c:	cmp	r0, #0
   34c30:	bcs	34c9c <__assert_fail@plt+0x23798>
   34c34:	b	34c3c <__assert_fail@plt+0x23738>
   34c38:	b	34c40 <__assert_fail@plt+0x2373c>
   34c3c:	b	34c80 <__assert_fail@plt+0x2377c>
   34c40:	ldr	r0, [fp, #-12]
   34c44:	cmn	r0, #1
   34c48:	bne	34c80 <__assert_fail@plt+0x2377c>
   34c4c:	b	34c68 <__assert_fail@plt+0x23764>
   34c50:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c54:	add	r0, r0, #0
   34c58:	movw	r1, #0
   34c5c:	cmp	r1, r0
   34c60:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34c64:	b	34cc8 <__assert_fail@plt+0x237c4>
   34c68:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c6c:	sub	r0, r0, #1
   34c70:	mvn	r1, #0
   34c74:	cmp	r1, r0
   34c78:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34c7c:	b	34cc8 <__assert_fail@plt+0x237c4>
   34c80:	ldr	r0, [fp, #-12]
   34c84:	movw	r1, #0
   34c88:	udiv	r0, r1, r0
   34c8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34c90:	cmp	r0, r1
   34c94:	bcc	34cb4 <__assert_fail@plt+0x237b0>
   34c98:	b	34cc8 <__assert_fail@plt+0x237c4>
   34c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34ca0:	mvn	r1, #0
   34ca4:	udiv	r0, r1, r0
   34ca8:	ldr	r1, [fp, #-12]
   34cac:	cmp	r0, r1
   34cb0:	bcs	34cc8 <__assert_fail@plt+0x237c4>
   34cb4:	ldr	r0, [fp, #-12]
   34cb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   34cbc:	mul	r0, r0, r1
   34cc0:	str	r0, [fp, #-24]	; 0xffffffe8
   34cc4:	b	35164 <__assert_fail@plt+0x23c60>
   34cc8:	ldr	r0, [fp, #-12]
   34ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34cd0:	mul	r0, r0, r1
   34cd4:	str	r0, [fp, #-24]	; 0xffffffe8
   34cd8:	b	35180 <__assert_fail@plt+0x23c7c>
   34cdc:	b	34f30 <__assert_fail@plt+0x23a2c>
   34ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   34ce4:	cmp	r0, #0
   34ce8:	bcs	34e48 <__assert_fail@plt+0x23944>
   34cec:	ldr	r0, [fp, #-12]
   34cf0:	cmp	r0, #0
   34cf4:	bcs	34dc4 <__assert_fail@plt+0x238c0>
   34cf8:	b	34cfc <__assert_fail@plt+0x237f8>
   34cfc:	ldr	r0, [fp, #-12]
   34d00:	ldr	r2, [fp, #-20]	; 0xffffffec
   34d04:	mvn	r1, #0
   34d08:	mvn	r3, #-2147483648	; 0x80000000
   34d0c:	mov	ip, #0
   34d10:	str	r0, [fp, #-64]	; 0xffffffc0
   34d14:	mov	r0, r1
   34d18:	mov	r1, r3
   34d1c:	mov	r3, ip
   34d20:	bl	37224 <__assert_fail@plt+0x25d20>
   34d24:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34d28:	subs	r0, r2, r0
   34d2c:	rscs	r1, r1, #0
   34d30:	str	r0, [fp, #-68]	; 0xffffffbc
   34d34:	str	r1, [fp, #-72]	; 0xffffffb8
   34d38:	blt	34f08 <__assert_fail@plt+0x23a04>
   34d3c:	b	34f1c <__assert_fail@plt+0x23a18>
   34d40:	b	34d54 <__assert_fail@plt+0x23850>
   34d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   34d48:	cmp	r0, #1
   34d4c:	bcc	34d64 <__assert_fail@plt+0x23860>
   34d50:	b	34d78 <__assert_fail@plt+0x23874>
   34d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   34d58:	movw	r1, #0
   34d5c:	cmp	r1, r0
   34d60:	bcs	34d78 <__assert_fail@plt+0x23874>
   34d64:	mov	r0, #0
   34d68:	mvn	r1, #0
   34d6c:	str	r1, [fp, #-76]	; 0xffffffb4
   34d70:	str	r0, [fp, #-80]	; 0xffffffb0
   34d74:	b	34d9c <__assert_fail@plt+0x23898>
   34d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   34d7c:	rsb	r2, r0, #0
   34d80:	mvn	r0, #0
   34d84:	mvn	r1, #-2147483648	; 0x80000000
   34d88:	mov	r3, #0
   34d8c:	bl	37224 <__assert_fail@plt+0x25d20>
   34d90:	str	r0, [fp, #-76]	; 0xffffffb4
   34d94:	str	r1, [fp, #-80]	; 0xffffffb0
   34d98:	b	34d9c <__assert_fail@plt+0x23898>
   34d9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   34da0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   34da4:	ldr	r2, [fp, #-12]
   34da8:	mvn	r2, r2
   34dac:	subs	r1, r2, r1
   34db0:	rscs	r0, r0, #0
   34db4:	str	r1, [fp, #-84]	; 0xffffffac
   34db8:	str	r0, [fp, #-88]	; 0xffffffa8
   34dbc:	bge	34f08 <__assert_fail@plt+0x23a04>
   34dc0:	b	34f1c <__assert_fail@plt+0x23a18>
   34dc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   34dc8:	cmn	r0, #1
   34dcc:	bne	34e14 <__assert_fail@plt+0x23910>
   34dd0:	b	34df4 <__assert_fail@plt+0x238f0>
   34dd4:	ldr	r0, [fp, #-12]
   34dd8:	rsbs	r0, r0, #0
   34ddc:	mov	r1, #0
   34de0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   34de4:	str	r0, [sp, #92]	; 0x5c
   34de8:	str	r1, [sp, #88]	; 0x58
   34dec:	blt	34f08 <__assert_fail@plt+0x23a04>
   34df0:	b	34f1c <__assert_fail@plt+0x23a18>
   34df4:	ldr	r0, [fp, #-12]
   34df8:	movw	r1, #0
   34dfc:	cmp	r1, r0
   34e00:	bcs	34f1c <__assert_fail@plt+0x23a18>
   34e04:	mov	r0, #0
   34e08:	cmp	r0, #0
   34e0c:	bne	34f08 <__assert_fail@plt+0x23a04>
   34e10:	b	34f1c <__assert_fail@plt+0x23a18>
   34e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   34e18:	mov	r1, #-2147483648	; 0x80000000
   34e1c:	mov	r0, #0
   34e20:	str	r0, [sp, #84]	; 0x54
   34e24:	ldr	r3, [sp, #84]	; 0x54
   34e28:	bl	37150 <__assert_fail@plt+0x25c4c>
   34e2c:	ldr	r2, [fp, #-12]
   34e30:	subs	r0, r0, r2
   34e34:	sbcs	r1, r1, #0
   34e38:	str	r0, [sp, #80]	; 0x50
   34e3c:	str	r1, [sp, #76]	; 0x4c
   34e40:	blt	34f08 <__assert_fail@plt+0x23a04>
   34e44:	b	34f1c <__assert_fail@plt+0x23a18>
   34e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   34e4c:	cmp	r0, #0
   34e50:	bne	34e58 <__assert_fail@plt+0x23954>
   34e54:	b	34f1c <__assert_fail@plt+0x23a18>
   34e58:	ldr	r0, [fp, #-12]
   34e5c:	cmp	r0, #0
   34e60:	bcs	34ed8 <__assert_fail@plt+0x239d4>
   34e64:	ldr	r0, [fp, #-12]
   34e68:	cmn	r0, #1
   34e6c:	bne	34ea4 <__assert_fail@plt+0x239a0>
   34e70:	b	34e94 <__assert_fail@plt+0x23990>
   34e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   34e78:	rsbs	r0, r0, #0
   34e7c:	mov	r1, #0
   34e80:	sbcs	r1, r1, #-2147483648	; 0x80000000
   34e84:	str	r0, [sp, #72]	; 0x48
   34e88:	str	r1, [sp, #68]	; 0x44
   34e8c:	blt	34f08 <__assert_fail@plt+0x23a04>
   34e90:	b	34f1c <__assert_fail@plt+0x23a18>
   34e94:	mov	r0, #0
   34e98:	cmp	r0, #0
   34e9c:	bne	34f08 <__assert_fail@plt+0x23a04>
   34ea0:	b	34f1c <__assert_fail@plt+0x23a18>
   34ea4:	ldr	r2, [fp, #-12]
   34ea8:	mov	r1, #-2147483648	; 0x80000000
   34eac:	mov	r0, #0
   34eb0:	str	r0, [sp, #64]	; 0x40
   34eb4:	ldr	r3, [sp, #64]	; 0x40
   34eb8:	bl	37150 <__assert_fail@plt+0x25c4c>
   34ebc:	ldr	r2, [fp, #-20]	; 0xffffffec
   34ec0:	subs	r0, r0, r2
   34ec4:	sbcs	r1, r1, #0
   34ec8:	str	r0, [sp, #60]	; 0x3c
   34ecc:	str	r1, [sp, #56]	; 0x38
   34ed0:	blt	34f08 <__assert_fail@plt+0x23a04>
   34ed4:	b	34f1c <__assert_fail@plt+0x23a18>
   34ed8:	ldr	r2, [fp, #-20]	; 0xffffffec
   34edc:	mvn	r0, #0
   34ee0:	mvn	r1, #-2147483648	; 0x80000000
   34ee4:	mov	r3, #0
   34ee8:	bl	37224 <__assert_fail@plt+0x25d20>
   34eec:	ldr	r2, [fp, #-12]
   34ef0:	subs	r0, r0, r2
   34ef4:	sbcs	r1, r1, #0
   34ef8:	str	r0, [sp, #52]	; 0x34
   34efc:	str	r1, [sp, #48]	; 0x30
   34f00:	bge	34f1c <__assert_fail@plt+0x23a18>
   34f04:	b	34f08 <__assert_fail@plt+0x23a04>
   34f08:	ldr	r0, [fp, #-12]
   34f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34f10:	mul	r0, r0, r1
   34f14:	str	r0, [fp, #-24]	; 0xffffffe8
   34f18:	b	35164 <__assert_fail@plt+0x23c60>
   34f1c:	ldr	r0, [fp, #-12]
   34f20:	ldr	r1, [fp, #-20]	; 0xffffffec
   34f24:	mul	r0, r0, r1
   34f28:	str	r0, [fp, #-24]	; 0xffffffe8
   34f2c:	b	35180 <__assert_fail@plt+0x23c7c>
   34f30:	ldr	r0, [fp, #-20]	; 0xffffffec
   34f34:	cmp	r0, #0
   34f38:	bcs	35084 <__assert_fail@plt+0x23b80>
   34f3c:	ldr	r0, [fp, #-12]
   34f40:	cmp	r0, #0
   34f44:	bcs	3500c <__assert_fail@plt+0x23b08>
   34f48:	b	34f84 <__assert_fail@plt+0x23a80>
   34f4c:	ldr	r0, [fp, #-12]
   34f50:	ldr	r2, [fp, #-20]	; 0xffffffec
   34f54:	mvn	r1, #0
   34f58:	mov	r3, #0
   34f5c:	str	r0, [sp, #44]	; 0x2c
   34f60:	mov	r0, r1
   34f64:	bl	37224 <__assert_fail@plt+0x25d20>
   34f68:	ldr	r2, [sp, #44]	; 0x2c
   34f6c:	subs	r0, r2, r0
   34f70:	rscs	r1, r1, #0
   34f74:	str	r0, [sp, #40]	; 0x28
   34f78:	str	r1, [sp, #36]	; 0x24
   34f7c:	bcc	3513c <__assert_fail@plt+0x23c38>
   34f80:	b	35150 <__assert_fail@plt+0x23c4c>
   34f84:	b	34f98 <__assert_fail@plt+0x23a94>
   34f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   34f8c:	cmp	r0, #1
   34f90:	bcc	34fa8 <__assert_fail@plt+0x23aa4>
   34f94:	b	34fbc <__assert_fail@plt+0x23ab8>
   34f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   34f9c:	movw	r1, #0
   34fa0:	cmp	r1, r0
   34fa4:	bcs	34fbc <__assert_fail@plt+0x23ab8>
   34fa8:	mov	r0, #1
   34fac:	mvn	r1, #0
   34fb0:	str	r1, [sp, #32]
   34fb4:	str	r0, [sp, #28]
   34fb8:	b	34fe4 <__assert_fail@plt+0x23ae0>
   34fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   34fc0:	rsb	r2, r0, #0
   34fc4:	mvn	r0, #0
   34fc8:	mov	r3, #0
   34fcc:	str	r0, [sp, #24]
   34fd0:	ldr	r1, [sp, #24]
   34fd4:	bl	37224 <__assert_fail@plt+0x25d20>
   34fd8:	str	r0, [sp, #32]
   34fdc:	str	r1, [sp, #28]
   34fe0:	b	34fe4 <__assert_fail@plt+0x23ae0>
   34fe4:	ldr	r0, [sp, #28]
   34fe8:	ldr	r1, [sp, #32]
   34fec:	ldr	r2, [fp, #-12]
   34ff0:	mvn	r2, r2
   34ff4:	subs	r1, r2, r1
   34ff8:	rscs	r0, r0, #0
   34ffc:	str	r1, [sp, #20]
   35000:	str	r0, [sp, #16]
   35004:	bcs	3513c <__assert_fail@plt+0x23c38>
   35008:	b	35150 <__assert_fail@plt+0x23c4c>
   3500c:	b	35014 <__assert_fail@plt+0x23b10>
   35010:	b	35018 <__assert_fail@plt+0x23b14>
   35014:	b	35068 <__assert_fail@plt+0x23b64>
   35018:	ldr	r0, [fp, #-20]	; 0xffffffec
   3501c:	cmn	r0, #1
   35020:	bne	35068 <__assert_fail@plt+0x23b64>
   35024:	b	35040 <__assert_fail@plt+0x23b3c>
   35028:	ldr	r0, [fp, #-12]
   3502c:	add	r0, r0, #0
   35030:	movw	r1, #0
   35034:	cmp	r1, r0
   35038:	bcc	3513c <__assert_fail@plt+0x23c38>
   3503c:	b	35150 <__assert_fail@plt+0x23c4c>
   35040:	ldr	r0, [fp, #-12]
   35044:	movw	r1, #0
   35048:	cmp	r1, r0
   3504c:	bcs	35150 <__assert_fail@plt+0x23c4c>
   35050:	ldr	r0, [fp, #-12]
   35054:	sub	r0, r0, #1
   35058:	mvn	r1, #0
   3505c:	cmp	r1, r0
   35060:	bcc	3513c <__assert_fail@plt+0x23c38>
   35064:	b	35150 <__assert_fail@plt+0x23c4c>
   35068:	ldr	r0, [fp, #-20]	; 0xffffffec
   3506c:	movw	r1, #0
   35070:	udiv	r0, r1, r0
   35074:	ldr	r1, [fp, #-12]
   35078:	cmp	r0, r1
   3507c:	bcc	3513c <__assert_fail@plt+0x23c38>
   35080:	b	35150 <__assert_fail@plt+0x23c4c>
   35084:	ldr	r0, [fp, #-20]	; 0xffffffec
   35088:	cmp	r0, #0
   3508c:	bne	35094 <__assert_fail@plt+0x23b90>
   35090:	b	35150 <__assert_fail@plt+0x23c4c>
   35094:	ldr	r0, [fp, #-12]
   35098:	cmp	r0, #0
   3509c:	bcs	35108 <__assert_fail@plt+0x23c04>
   350a0:	b	350a8 <__assert_fail@plt+0x23ba4>
   350a4:	b	350ac <__assert_fail@plt+0x23ba8>
   350a8:	b	350ec <__assert_fail@plt+0x23be8>
   350ac:	ldr	r0, [fp, #-12]
   350b0:	cmn	r0, #1
   350b4:	bne	350ec <__assert_fail@plt+0x23be8>
   350b8:	b	350d4 <__assert_fail@plt+0x23bd0>
   350bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   350c0:	add	r0, r0, #0
   350c4:	movw	r1, #0
   350c8:	cmp	r1, r0
   350cc:	bcc	3513c <__assert_fail@plt+0x23c38>
   350d0:	b	35150 <__assert_fail@plt+0x23c4c>
   350d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   350d8:	sub	r0, r0, #1
   350dc:	mvn	r1, #0
   350e0:	cmp	r1, r0
   350e4:	bcc	3513c <__assert_fail@plt+0x23c38>
   350e8:	b	35150 <__assert_fail@plt+0x23c4c>
   350ec:	ldr	r0, [fp, #-12]
   350f0:	movw	r1, #0
   350f4:	udiv	r0, r1, r0
   350f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   350fc:	cmp	r0, r1
   35100:	bcc	3513c <__assert_fail@plt+0x23c38>
   35104:	b	35150 <__assert_fail@plt+0x23c4c>
   35108:	ldr	r2, [fp, #-20]	; 0xffffffec
   3510c:	mvn	r0, #0
   35110:	mov	r3, #0
   35114:	str	r0, [sp, #12]
   35118:	ldr	r1, [sp, #12]
   3511c:	bl	37224 <__assert_fail@plt+0x25d20>
   35120:	ldr	r2, [fp, #-12]
   35124:	subs	r0, r0, r2
   35128:	sbcs	r1, r1, #0
   3512c:	str	r0, [sp, #8]
   35130:	str	r1, [sp, #4]
   35134:	bcs	35150 <__assert_fail@plt+0x23c4c>
   35138:	b	3513c <__assert_fail@plt+0x23c38>
   3513c:	ldr	r0, [fp, #-12]
   35140:	ldr	r1, [fp, #-20]	; 0xffffffec
   35144:	mul	r0, r0, r1
   35148:	str	r0, [fp, #-24]	; 0xffffffe8
   3514c:	b	35164 <__assert_fail@plt+0x23c60>
   35150:	ldr	r0, [fp, #-12]
   35154:	ldr	r1, [fp, #-20]	; 0xffffffec
   35158:	mul	r0, r0, r1
   3515c:	str	r0, [fp, #-24]	; 0xffffffe8
   35160:	b	35180 <__assert_fail@plt+0x23c7c>
   35164:	bl	113fc <__errno_location@plt>
   35168:	movw	lr, #12
   3516c:	str	lr, [r0]
   35170:	movw	r0, #0
   35174:	and	r0, r0, #1
   35178:	strb	r0, [fp, #-1]
   3517c:	b	3524c <__assert_fail@plt+0x23d48>
   35180:	ldr	r0, [fp, #-8]
   35184:	ldr	r0, [r0, #8]
   35188:	ldr	r1, [fp, #-16]
   3518c:	cmp	r0, r1
   35190:	bne	351e8 <__assert_fail@plt+0x23ce4>
   35194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35198:	bl	33b44 <__assert_fail@plt+0x22640>
   3519c:	str	r0, [fp, #-28]	; 0xffffffe4
   351a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   351a4:	movw	lr, #0
   351a8:	cmp	r0, lr
   351ac:	beq	351e4 <__assert_fail@plt+0x23ce0>
   351b0:	ldr	r0, [fp, #-8]
   351b4:	ldr	r0, [r0, #8]
   351b8:	movw	r1, #0
   351bc:	cmp	r0, r1
   351c0:	beq	351e4 <__assert_fail@plt+0x23ce0>
   351c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   351c8:	ldr	r1, [fp, #-8]
   351cc:	ldr	r1, [r1, #8]
   351d0:	ldr	r2, [fp, #-8]
   351d4:	ldr	r2, [r2]
   351d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   351dc:	mul	r2, r2, r3
   351e0:	bl	112a0 <memcpy@plt>
   351e4:	b	351fc <__assert_fail@plt+0x23cf8>
   351e8:	ldr	r0, [fp, #-8]
   351ec:	ldr	r0, [r0, #8]
   351f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   351f4:	bl	33bb4 <__assert_fail@plt+0x226b0>
   351f8:	str	r0, [fp, #-28]	; 0xffffffe4
   351fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35200:	movw	r1, #0
   35204:	cmp	r0, r1
   35208:	bne	3521c <__assert_fail@plt+0x23d18>
   3520c:	movw	r0, #0
   35210:	and	r0, r0, #1
   35214:	strb	r0, [fp, #-1]
   35218:	b	3524c <__assert_fail@plt+0x23d48>
   3521c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35220:	ldr	r1, [fp, #-8]
   35224:	str	r0, [r1, #8]
   35228:	ldr	r0, [fp, #-12]
   3522c:	ldr	r1, [fp, #-8]
   35230:	str	r0, [r1, #4]
   35234:	ldr	r0, [fp, #-12]
   35238:	ldr	r1, [fp, #-8]
   3523c:	str	r0, [r1]
   35240:	movw	r0, #1
   35244:	and	r0, r0, #1
   35248:	strb	r0, [fp, #-1]
   3524c:	ldrb	r0, [fp, #-1]
   35250:	and	r0, r0, #1
   35254:	mov	sp, fp
   35258:	pop	{fp, pc}
   3525c:	svcvc	0x00ffffff
   35260:	andhi	r0, r0, r0
   35264:			; <UNDEFINED> instruction: 0xffff8000
   35268:	push	{fp, lr}
   3526c:	mov	fp, sp
   35270:	sub	sp, sp, #16
   35274:	str	r0, [fp, #-4]
   35278:	bl	113fc <__errno_location@plt>
   3527c:	ldr	r0, [r0]
   35280:	str	r0, [sp, #8]
   35284:	ldr	r0, [fp, #-4]
   35288:	bl	1127c <free@plt>
   3528c:	ldr	r0, [sp, #8]
   35290:	str	r0, [sp, #4]
   35294:	bl	113fc <__errno_location@plt>
   35298:	ldr	lr, [sp, #4]
   3529c:	str	lr, [r0]
   352a0:	mov	sp, fp
   352a4:	pop	{fp, pc}
   352a8:	push	{fp, lr}
   352ac:	mov	fp, sp
   352b0:	bl	113fc <__errno_location@plt>
   352b4:	movw	lr, #12
   352b8:	str	lr, [r0]
   352bc:	movw	r0, #0
   352c0:	pop	{fp, pc}
   352c4:	push	{fp, lr}
   352c8:	mov	fp, sp
   352cc:	sub	sp, sp, #8
   352d0:	str	r0, [sp, #4]
   352d4:	ldr	r0, [sp, #4]
   352d8:	cmn	r0, #1
   352dc:	bhi	352f0 <__assert_fail@plt+0x23dec>
   352e0:	ldr	r0, [sp, #4]
   352e4:	bl	33b44 <__assert_fail@plt+0x22640>
   352e8:	str	r0, [sp]
   352ec:	b	352f8 <__assert_fail@plt+0x23df4>
   352f0:	bl	352a8 <__assert_fail@plt+0x23da4>
   352f4:	str	r0, [sp]
   352f8:	ldr	r0, [sp]
   352fc:	mov	sp, fp
   35300:	pop	{fp, pc}
   35304:	push	{fp, lr}
   35308:	mov	fp, sp
   3530c:	sub	sp, sp, #16
   35310:	str	r0, [fp, #-4]
   35314:	str	r1, [sp, #8]
   35318:	ldr	r0, [sp, #8]
   3531c:	cmn	r0, #1
   35320:	bhi	35358 <__assert_fail@plt+0x23e54>
   35324:	ldr	r0, [fp, #-4]
   35328:	ldr	r1, [sp, #8]
   3532c:	ldr	r2, [sp, #8]
   35330:	cmp	r2, #0
   35334:	movw	r2, #0
   35338:	movne	r2, #1
   3533c:	mvn	r3, #0
   35340:	eor	r2, r2, r3
   35344:	and	r2, r2, #1
   35348:	orr	r1, r1, r2
   3534c:	bl	33bb4 <__assert_fail@plt+0x226b0>
   35350:	str	r0, [sp, #4]
   35354:	b	35360 <__assert_fail@plt+0x23e5c>
   35358:	bl	352a8 <__assert_fail@plt+0x23da4>
   3535c:	str	r0, [sp, #4]
   35360:	ldr	r0, [sp, #4]
   35364:	mov	sp, fp
   35368:	pop	{fp, pc}
   3536c:	push	{fp, lr}
   35370:	mov	fp, sp
   35374:	sub	sp, sp, #16
   35378:	str	r0, [sp, #8]
   3537c:	str	r1, [sp, #4]
   35380:	ldr	r0, [sp, #8]
   35384:	mvn	r1, #0
   35388:	cmp	r1, r0
   3538c:	bcs	353b0 <__assert_fail@plt+0x23eac>
   35390:	ldr	r0, [sp, #4]
   35394:	cmp	r0, #0
   35398:	beq	353a8 <__assert_fail@plt+0x23ea4>
   3539c:	bl	352a8 <__assert_fail@plt+0x23da4>
   353a0:	str	r0, [fp, #-4]
   353a4:	b	353f0 <__assert_fail@plt+0x23eec>
   353a8:	movw	r0, #0
   353ac:	str	r0, [sp, #8]
   353b0:	ldr	r0, [sp, #4]
   353b4:	mvn	r1, #0
   353b8:	cmp	r1, r0
   353bc:	bcs	353e0 <__assert_fail@plt+0x23edc>
   353c0:	ldr	r0, [sp, #8]
   353c4:	cmp	r0, #0
   353c8:	beq	353d8 <__assert_fail@plt+0x23ed4>
   353cc:	bl	352a8 <__assert_fail@plt+0x23da4>
   353d0:	str	r0, [fp, #-4]
   353d4:	b	353f0 <__assert_fail@plt+0x23eec>
   353d8:	movw	r0, #0
   353dc:	str	r0, [sp, #4]
   353e0:	ldr	r0, [sp, #8]
   353e4:	ldr	r1, [sp, #4]
   353e8:	bl	33aa8 <__assert_fail@plt+0x225a4>
   353ec:	str	r0, [fp, #-4]
   353f0:	ldr	r0, [fp, #-4]
   353f4:	mov	sp, fp
   353f8:	pop	{fp, pc}
   353fc:	push	{fp, lr}
   35400:	mov	fp, sp
   35404:	sub	sp, sp, #16
   35408:	str	r0, [fp, #-4]
   3540c:	str	r1, [sp, #8]
   35410:	str	r2, [sp, #4]
   35414:	ldr	r0, [sp, #8]
   35418:	cmp	r0, #0
   3541c:	beq	3542c <__assert_fail@plt+0x23f28>
   35420:	ldr	r0, [sp, #4]
   35424:	cmp	r0, #0
   35428:	bne	35438 <__assert_fail@plt+0x23f34>
   3542c:	movw	r0, #1
   35430:	str	r0, [sp, #4]
   35434:	str	r0, [sp, #8]
   35438:	ldr	r0, [sp, #8]
   3543c:	cmn	r0, #1
   35440:	bhi	35468 <__assert_fail@plt+0x23f64>
   35444:	ldr	r0, [sp, #4]
   35448:	cmn	r0, #1
   3544c:	bhi	35468 <__assert_fail@plt+0x23f64>
   35450:	ldr	r0, [fp, #-4]
   35454:	ldr	r1, [sp, #8]
   35458:	ldr	r2, [sp, #4]
   3545c:	bl	35588 <__assert_fail@plt+0x24084>
   35460:	str	r0, [sp]
   35464:	b	35470 <__assert_fail@plt+0x23f6c>
   35468:	bl	352a8 <__assert_fail@plt+0x23da4>
   3546c:	str	r0, [sp]
   35470:	ldr	r0, [sp]
   35474:	mov	sp, fp
   35478:	pop	{fp, pc}
   3547c:	push	{fp, lr}
   35480:	mov	fp, sp
   35484:	sub	sp, sp, #8
   35488:	movw	r0, #14
   3548c:	bl	1148c <nl_langinfo@plt>
   35490:	str	r0, [sp, #4]
   35494:	ldr	r0, [sp, #4]
   35498:	movw	lr, #0
   3549c:	cmp	r0, lr
   354a0:	bne	354b0 <__assert_fail@plt+0x23fac>
   354a4:	movw	r0, #32426	; 0x7eaa
   354a8:	movt	r0, #3
   354ac:	str	r0, [sp, #4]
   354b0:	ldr	r0, [sp, #4]
   354b4:	ldrb	r0, [r0]
   354b8:	cmp	r0, #0
   354bc:	bne	354cc <__assert_fail@plt+0x23fc8>
   354c0:	movw	r0, #34588	; 0x871c
   354c4:	movt	r0, #3
   354c8:	str	r0, [sp, #4]
   354cc:	ldr	r0, [sp, #4]
   354d0:	mov	sp, fp
   354d4:	pop	{fp, pc}
   354d8:	push	{fp, lr}
   354dc:	mov	fp, sp
   354e0:	sub	sp, sp, #32
   354e4:	str	r0, [fp, #-8]
   354e8:	str	r1, [fp, #-12]
   354ec:	str	r2, [sp, #16]
   354f0:	str	r3, [sp, #12]
   354f4:	ldr	r0, [fp, #-8]
   354f8:	movw	r1, #0
   354fc:	cmp	r0, r1
   35500:	bne	3550c <__assert_fail@plt+0x24008>
   35504:	add	r0, sp, #4
   35508:	str	r0, [fp, #-8]
   3550c:	ldr	r0, [fp, #-8]
   35510:	ldr	r1, [fp, #-12]
   35514:	ldr	r2, [sp, #16]
   35518:	ldr	r3, [sp, #12]
   3551c:	bl	11360 <mbrtowc@plt>
   35520:	str	r0, [sp, #8]
   35524:	ldr	r0, [sp, #8]
   35528:	mvn	r1, #1
   3552c:	cmp	r1, r0
   35530:	bhi	35574 <__assert_fail@plt+0x24070>
   35534:	ldr	r0, [sp, #16]
   35538:	cmp	r0, #0
   3553c:	beq	35574 <__assert_fail@plt+0x24070>
   35540:	movw	r0, #0
   35544:	bl	36f58 <__assert_fail@plt+0x25a54>
   35548:	tst	r0, #1
   3554c:	bne	35574 <__assert_fail@plt+0x24070>
   35550:	ldr	r0, [fp, #-12]
   35554:	ldrb	r0, [r0]
   35558:	strb	r0, [sp, #3]
   3555c:	ldrb	r0, [sp, #3]
   35560:	ldr	r1, [fp, #-8]
   35564:	str	r0, [r1]
   35568:	movw	r0, #1
   3556c:	str	r0, [fp, #-4]
   35570:	b	3557c <__assert_fail@plt+0x24078>
   35574:	ldr	r0, [sp, #8]
   35578:	str	r0, [fp, #-4]
   3557c:	ldr	r0, [fp, #-4]
   35580:	mov	sp, fp
   35584:	pop	{fp, pc}
   35588:	push	{fp, lr}
   3558c:	mov	fp, sp
   35590:	sub	sp, sp, #176	; 0xb0
   35594:	str	r0, [fp, #-8]
   35598:	str	r1, [fp, #-12]
   3559c:	str	r2, [fp, #-16]
   355a0:	b	35958 <__assert_fail@plt+0x24454>
   355a4:	b	35778 <__assert_fail@plt+0x24274>
   355a8:	ldr	r0, [fp, #-16]
   355ac:	cmp	r0, #0
   355b0:	bcs	356b4 <__assert_fail@plt+0x241b0>
   355b4:	ldr	r0, [fp, #-12]
   355b8:	cmp	r0, #0
   355bc:	bcs	35644 <__assert_fail@plt+0x24140>
   355c0:	b	355e0 <__assert_fail@plt+0x240dc>
   355c4:	ldr	r0, [fp, #-12]
   355c8:	ldr	r1, [fp, #-16]
   355cc:	movw	r2, #127	; 0x7f
   355d0:	udiv	r1, r2, r1
   355d4:	cmp	r0, r1
   355d8:	bcc	35748 <__assert_fail@plt+0x24244>
   355dc:	b	35760 <__assert_fail@plt+0x2425c>
   355e0:	b	355f4 <__assert_fail@plt+0x240f0>
   355e4:	ldr	r0, [fp, #-16]
   355e8:	cmp	r0, #1
   355ec:	bcc	35604 <__assert_fail@plt+0x24100>
   355f0:	b	35610 <__assert_fail@plt+0x2410c>
   355f4:	ldr	r0, [fp, #-16]
   355f8:	movw	r1, #0
   355fc:	cmp	r1, r0
   35600:	bcs	35610 <__assert_fail@plt+0x2410c>
   35604:	movw	r0, #0
   35608:	str	r0, [fp, #-24]	; 0xffffffe8
   3560c:	b	35628 <__assert_fail@plt+0x24124>
   35610:	ldr	r0, [fp, #-16]
   35614:	movw	r1, #0
   35618:	sub	r0, r1, r0
   3561c:	movw	r1, #127	; 0x7f
   35620:	udiv	r0, r1, r0
   35624:	str	r0, [fp, #-24]	; 0xffffffe8
   35628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3562c:	ldr	r1, [fp, #-12]
   35630:	mvn	r2, #0
   35634:	sub	r1, r2, r1
   35638:	cmp	r0, r1
   3563c:	bls	35748 <__assert_fail@plt+0x24244>
   35640:	b	35760 <__assert_fail@plt+0x2425c>
   35644:	ldr	r0, [fp, #-16]
   35648:	cmn	r0, #1
   3564c:	bne	35698 <__assert_fail@plt+0x24194>
   35650:	b	35670 <__assert_fail@plt+0x2416c>
   35654:	ldr	r0, [fp, #-12]
   35658:	mvn	r1, #127	; 0x7f
   3565c:	add	r0, r0, r1
   35660:	movw	r1, #0
   35664:	cmp	r1, r0
   35668:	bcc	35748 <__assert_fail@plt+0x24244>
   3566c:	b	35760 <__assert_fail@plt+0x2425c>
   35670:	ldr	r0, [fp, #-12]
   35674:	movw	r1, #0
   35678:	cmp	r1, r0
   3567c:	bcs	35760 <__assert_fail@plt+0x2425c>
   35680:	ldr	r0, [fp, #-12]
   35684:	sub	r0, r0, #1
   35688:	movw	r1, #127	; 0x7f
   3568c:	cmp	r1, r0
   35690:	bcc	35748 <__assert_fail@plt+0x24244>
   35694:	b	35760 <__assert_fail@plt+0x2425c>
   35698:	ldr	r0, [fp, #-16]
   3569c:	mvn	r1, #127	; 0x7f
   356a0:	udiv	r0, r1, r0
   356a4:	ldr	r1, [fp, #-12]
   356a8:	cmp	r0, r1
   356ac:	bcc	35748 <__assert_fail@plt+0x24244>
   356b0:	b	35760 <__assert_fail@plt+0x2425c>
   356b4:	ldr	r0, [fp, #-16]
   356b8:	cmp	r0, #0
   356bc:	bne	356c4 <__assert_fail@plt+0x241c0>
   356c0:	b	35760 <__assert_fail@plt+0x2425c>
   356c4:	ldr	r0, [fp, #-12]
   356c8:	cmp	r0, #0
   356cc:	bcs	35730 <__assert_fail@plt+0x2422c>
   356d0:	ldr	r0, [fp, #-12]
   356d4:	cmn	r0, #1
   356d8:	bne	35714 <__assert_fail@plt+0x24210>
   356dc:	b	356fc <__assert_fail@plt+0x241f8>
   356e0:	ldr	r0, [fp, #-16]
   356e4:	mvn	r1, #127	; 0x7f
   356e8:	add	r0, r0, r1
   356ec:	movw	r1, #0
   356f0:	cmp	r1, r0
   356f4:	bcc	35748 <__assert_fail@plt+0x24244>
   356f8:	b	35760 <__assert_fail@plt+0x2425c>
   356fc:	ldr	r0, [fp, #-16]
   35700:	sub	r0, r0, #1
   35704:	movw	r1, #127	; 0x7f
   35708:	cmp	r1, r0
   3570c:	bcc	35748 <__assert_fail@plt+0x24244>
   35710:	b	35760 <__assert_fail@plt+0x2425c>
   35714:	ldr	r0, [fp, #-12]
   35718:	mvn	r1, #127	; 0x7f
   3571c:	udiv	r0, r1, r0
   35720:	ldr	r1, [fp, #-16]
   35724:	cmp	r0, r1
   35728:	bcc	35748 <__assert_fail@plt+0x24244>
   3572c:	b	35760 <__assert_fail@plt+0x2425c>
   35730:	ldr	r0, [fp, #-16]
   35734:	movw	r1, #127	; 0x7f
   35738:	udiv	r0, r1, r0
   3573c:	ldr	r1, [fp, #-12]
   35740:	cmp	r0, r1
   35744:	bcs	35760 <__assert_fail@plt+0x2425c>
   35748:	ldr	r0, [fp, #-12]
   3574c:	ldr	r1, [fp, #-16]
   35750:	mul	r0, r0, r1
   35754:	sxtb	r0, r0
   35758:	str	r0, [fp, #-20]	; 0xffffffec
   3575c:	b	368d8 <__assert_fail@plt+0x253d4>
   35760:	ldr	r0, [fp, #-12]
   35764:	ldr	r1, [fp, #-16]
   35768:	mul	r0, r0, r1
   3576c:	sxtb	r0, r0
   35770:	str	r0, [fp, #-20]	; 0xffffffec
   35774:	b	368f0 <__assert_fail@plt+0x253ec>
   35778:	ldr	r0, [fp, #-16]
   3577c:	cmp	r0, #0
   35780:	bcs	3588c <__assert_fail@plt+0x24388>
   35784:	ldr	r0, [fp, #-12]
   35788:	cmp	r0, #0
   3578c:	bcs	35814 <__assert_fail@plt+0x24310>
   35790:	b	357b0 <__assert_fail@plt+0x242ac>
   35794:	ldr	r0, [fp, #-12]
   35798:	ldr	r1, [fp, #-16]
   3579c:	movw	r2, #255	; 0xff
   357a0:	udiv	r1, r2, r1
   357a4:	cmp	r0, r1
   357a8:	bcc	35928 <__assert_fail@plt+0x24424>
   357ac:	b	35940 <__assert_fail@plt+0x2443c>
   357b0:	b	357c4 <__assert_fail@plt+0x242c0>
   357b4:	ldr	r0, [fp, #-16]
   357b8:	cmp	r0, #1
   357bc:	bcc	357d4 <__assert_fail@plt+0x242d0>
   357c0:	b	357e0 <__assert_fail@plt+0x242dc>
   357c4:	ldr	r0, [fp, #-16]
   357c8:	movw	r1, #0
   357cc:	cmp	r1, r0
   357d0:	bcs	357e0 <__assert_fail@plt+0x242dc>
   357d4:	movw	r0, #0
   357d8:	str	r0, [fp, #-28]	; 0xffffffe4
   357dc:	b	357f8 <__assert_fail@plt+0x242f4>
   357e0:	ldr	r0, [fp, #-16]
   357e4:	movw	r1, #0
   357e8:	sub	r0, r1, r0
   357ec:	movw	r1, #255	; 0xff
   357f0:	udiv	r0, r1, r0
   357f4:	str	r0, [fp, #-28]	; 0xffffffe4
   357f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   357fc:	ldr	r1, [fp, #-12]
   35800:	mvn	r2, #0
   35804:	sub	r1, r2, r1
   35808:	cmp	r0, r1
   3580c:	bls	35928 <__assert_fail@plt+0x24424>
   35810:	b	35940 <__assert_fail@plt+0x2443c>
   35814:	b	3581c <__assert_fail@plt+0x24318>
   35818:	b	35820 <__assert_fail@plt+0x2431c>
   3581c:	b	35870 <__assert_fail@plt+0x2436c>
   35820:	ldr	r0, [fp, #-16]
   35824:	cmn	r0, #1
   35828:	bne	35870 <__assert_fail@plt+0x2436c>
   3582c:	b	35848 <__assert_fail@plt+0x24344>
   35830:	ldr	r0, [fp, #-12]
   35834:	add	r0, r0, #0
   35838:	movw	r1, #0
   3583c:	cmp	r1, r0
   35840:	bcc	35928 <__assert_fail@plt+0x24424>
   35844:	b	35940 <__assert_fail@plt+0x2443c>
   35848:	ldr	r0, [fp, #-12]
   3584c:	movw	r1, #0
   35850:	cmp	r1, r0
   35854:	bcs	35940 <__assert_fail@plt+0x2443c>
   35858:	ldr	r0, [fp, #-12]
   3585c:	sub	r0, r0, #1
   35860:	mvn	r1, #0
   35864:	cmp	r1, r0
   35868:	bcc	35928 <__assert_fail@plt+0x24424>
   3586c:	b	35940 <__assert_fail@plt+0x2443c>
   35870:	ldr	r0, [fp, #-16]
   35874:	movw	r1, #0
   35878:	udiv	r0, r1, r0
   3587c:	ldr	r1, [fp, #-12]
   35880:	cmp	r0, r1
   35884:	bcc	35928 <__assert_fail@plt+0x24424>
   35888:	b	35940 <__assert_fail@plt+0x2443c>
   3588c:	ldr	r0, [fp, #-16]
   35890:	cmp	r0, #0
   35894:	bne	3589c <__assert_fail@plt+0x24398>
   35898:	b	35940 <__assert_fail@plt+0x2443c>
   3589c:	ldr	r0, [fp, #-12]
   358a0:	cmp	r0, #0
   358a4:	bcs	35910 <__assert_fail@plt+0x2440c>
   358a8:	b	358b0 <__assert_fail@plt+0x243ac>
   358ac:	b	358b4 <__assert_fail@plt+0x243b0>
   358b0:	b	358f4 <__assert_fail@plt+0x243f0>
   358b4:	ldr	r0, [fp, #-12]
   358b8:	cmn	r0, #1
   358bc:	bne	358f4 <__assert_fail@plt+0x243f0>
   358c0:	b	358dc <__assert_fail@plt+0x243d8>
   358c4:	ldr	r0, [fp, #-16]
   358c8:	add	r0, r0, #0
   358cc:	movw	r1, #0
   358d0:	cmp	r1, r0
   358d4:	bcc	35928 <__assert_fail@plt+0x24424>
   358d8:	b	35940 <__assert_fail@plt+0x2443c>
   358dc:	ldr	r0, [fp, #-16]
   358e0:	sub	r0, r0, #1
   358e4:	mvn	r1, #0
   358e8:	cmp	r1, r0
   358ec:	bcc	35928 <__assert_fail@plt+0x24424>
   358f0:	b	35940 <__assert_fail@plt+0x2443c>
   358f4:	ldr	r0, [fp, #-12]
   358f8:	movw	r1, #0
   358fc:	udiv	r0, r1, r0
   35900:	ldr	r1, [fp, #-16]
   35904:	cmp	r0, r1
   35908:	bcc	35928 <__assert_fail@plt+0x24424>
   3590c:	b	35940 <__assert_fail@plt+0x2443c>
   35910:	ldr	r0, [fp, #-16]
   35914:	movw	r1, #255	; 0xff
   35918:	udiv	r0, r1, r0
   3591c:	ldr	r1, [fp, #-12]
   35920:	cmp	r0, r1
   35924:	bcs	35940 <__assert_fail@plt+0x2443c>
   35928:	ldr	r0, [fp, #-12]
   3592c:	ldr	r1, [fp, #-16]
   35930:	mul	r0, r0, r1
   35934:	and	r0, r0, #255	; 0xff
   35938:	str	r0, [fp, #-20]	; 0xffffffec
   3593c:	b	368d8 <__assert_fail@plt+0x253d4>
   35940:	ldr	r0, [fp, #-12]
   35944:	ldr	r1, [fp, #-16]
   35948:	mul	r0, r0, r1
   3594c:	and	r0, r0, #255	; 0xff
   35950:	str	r0, [fp, #-20]	; 0xffffffec
   35954:	b	368f0 <__assert_fail@plt+0x253ec>
   35958:	b	35d10 <__assert_fail@plt+0x2480c>
   3595c:	b	35b30 <__assert_fail@plt+0x2462c>
   35960:	ldr	r0, [fp, #-16]
   35964:	cmp	r0, #0
   35968:	bcs	35a6c <__assert_fail@plt+0x24568>
   3596c:	ldr	r0, [fp, #-12]
   35970:	cmp	r0, #0
   35974:	bcs	359fc <__assert_fail@plt+0x244f8>
   35978:	b	35998 <__assert_fail@plt+0x24494>
   3597c:	ldr	r0, [fp, #-12]
   35980:	ldr	r1, [fp, #-16]
   35984:	movw	r2, #32767	; 0x7fff
   35988:	udiv	r1, r2, r1
   3598c:	cmp	r0, r1
   35990:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35994:	b	35b18 <__assert_fail@plt+0x24614>
   35998:	b	359ac <__assert_fail@plt+0x244a8>
   3599c:	ldr	r0, [fp, #-16]
   359a0:	cmp	r0, #1
   359a4:	bcc	359bc <__assert_fail@plt+0x244b8>
   359a8:	b	359c8 <__assert_fail@plt+0x244c4>
   359ac:	ldr	r0, [fp, #-16]
   359b0:	movw	r1, #0
   359b4:	cmp	r1, r0
   359b8:	bcs	359c8 <__assert_fail@plt+0x244c4>
   359bc:	movw	r0, #0
   359c0:	str	r0, [fp, #-32]	; 0xffffffe0
   359c4:	b	359e0 <__assert_fail@plt+0x244dc>
   359c8:	ldr	r0, [fp, #-16]
   359cc:	movw	r1, #0
   359d0:	sub	r0, r1, r0
   359d4:	movw	r1, #32767	; 0x7fff
   359d8:	udiv	r0, r1, r0
   359dc:	str	r0, [fp, #-32]	; 0xffffffe0
   359e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   359e4:	ldr	r1, [fp, #-12]
   359e8:	mvn	r2, #0
   359ec:	sub	r1, r2, r1
   359f0:	cmp	r0, r1
   359f4:	bls	35b00 <__assert_fail@plt+0x245fc>
   359f8:	b	35b18 <__assert_fail@plt+0x24614>
   359fc:	ldr	r0, [fp, #-16]
   35a00:	cmn	r0, #1
   35a04:	bne	35a50 <__assert_fail@plt+0x2454c>
   35a08:	b	35a28 <__assert_fail@plt+0x24524>
   35a0c:	ldr	r0, [pc, #3840]	; 36914 <__assert_fail@plt+0x25410>
   35a10:	ldr	r1, [fp, #-12]
   35a14:	add	r0, r1, r0
   35a18:	movw	r1, #0
   35a1c:	cmp	r1, r0
   35a20:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35a24:	b	35b18 <__assert_fail@plt+0x24614>
   35a28:	ldr	r0, [fp, #-12]
   35a2c:	movw	r1, #0
   35a30:	cmp	r1, r0
   35a34:	bcs	35b18 <__assert_fail@plt+0x24614>
   35a38:	ldr	r0, [fp, #-12]
   35a3c:	sub	r0, r0, #1
   35a40:	movw	r1, #32767	; 0x7fff
   35a44:	cmp	r1, r0
   35a48:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35a4c:	b	35b18 <__assert_fail@plt+0x24614>
   35a50:	ldr	r0, [pc, #3772]	; 36914 <__assert_fail@plt+0x25410>
   35a54:	ldr	r1, [fp, #-16]
   35a58:	udiv	r0, r0, r1
   35a5c:	ldr	r1, [fp, #-12]
   35a60:	cmp	r0, r1
   35a64:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35a68:	b	35b18 <__assert_fail@plt+0x24614>
   35a6c:	ldr	r0, [fp, #-16]
   35a70:	cmp	r0, #0
   35a74:	bne	35a7c <__assert_fail@plt+0x24578>
   35a78:	b	35b18 <__assert_fail@plt+0x24614>
   35a7c:	ldr	r0, [fp, #-12]
   35a80:	cmp	r0, #0
   35a84:	bcs	35ae8 <__assert_fail@plt+0x245e4>
   35a88:	ldr	r0, [fp, #-12]
   35a8c:	cmn	r0, #1
   35a90:	bne	35acc <__assert_fail@plt+0x245c8>
   35a94:	b	35ab4 <__assert_fail@plt+0x245b0>
   35a98:	ldr	r0, [pc, #3700]	; 36914 <__assert_fail@plt+0x25410>
   35a9c:	ldr	r1, [fp, #-16]
   35aa0:	add	r0, r1, r0
   35aa4:	movw	r1, #0
   35aa8:	cmp	r1, r0
   35aac:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35ab0:	b	35b18 <__assert_fail@plt+0x24614>
   35ab4:	ldr	r0, [fp, #-16]
   35ab8:	sub	r0, r0, #1
   35abc:	movw	r1, #32767	; 0x7fff
   35ac0:	cmp	r1, r0
   35ac4:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35ac8:	b	35b18 <__assert_fail@plt+0x24614>
   35acc:	ldr	r0, [pc, #3648]	; 36914 <__assert_fail@plt+0x25410>
   35ad0:	ldr	r1, [fp, #-12]
   35ad4:	udiv	r0, r0, r1
   35ad8:	ldr	r1, [fp, #-16]
   35adc:	cmp	r0, r1
   35ae0:	bcc	35b00 <__assert_fail@plt+0x245fc>
   35ae4:	b	35b18 <__assert_fail@plt+0x24614>
   35ae8:	ldr	r0, [fp, #-16]
   35aec:	movw	r1, #32767	; 0x7fff
   35af0:	udiv	r0, r1, r0
   35af4:	ldr	r1, [fp, #-12]
   35af8:	cmp	r0, r1
   35afc:	bcs	35b18 <__assert_fail@plt+0x24614>
   35b00:	ldr	r0, [fp, #-12]
   35b04:	ldr	r1, [fp, #-16]
   35b08:	mul	r0, r0, r1
   35b0c:	sxth	r0, r0
   35b10:	str	r0, [fp, #-20]	; 0xffffffec
   35b14:	b	368d8 <__assert_fail@plt+0x253d4>
   35b18:	ldr	r0, [fp, #-12]
   35b1c:	ldr	r1, [fp, #-16]
   35b20:	mul	r0, r0, r1
   35b24:	sxth	r0, r0
   35b28:	str	r0, [fp, #-20]	; 0xffffffec
   35b2c:	b	368f0 <__assert_fail@plt+0x253ec>
   35b30:	ldr	r0, [fp, #-16]
   35b34:	cmp	r0, #0
   35b38:	bcs	35c44 <__assert_fail@plt+0x24740>
   35b3c:	ldr	r0, [fp, #-12]
   35b40:	cmp	r0, #0
   35b44:	bcs	35bcc <__assert_fail@plt+0x246c8>
   35b48:	b	35b68 <__assert_fail@plt+0x24664>
   35b4c:	ldr	r0, [fp, #-12]
   35b50:	ldr	r1, [fp, #-16]
   35b54:	movw	r2, #65535	; 0xffff
   35b58:	udiv	r1, r2, r1
   35b5c:	cmp	r0, r1
   35b60:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35b64:	b	35cf8 <__assert_fail@plt+0x247f4>
   35b68:	b	35b7c <__assert_fail@plt+0x24678>
   35b6c:	ldr	r0, [fp, #-16]
   35b70:	cmp	r0, #1
   35b74:	bcc	35b8c <__assert_fail@plt+0x24688>
   35b78:	b	35b98 <__assert_fail@plt+0x24694>
   35b7c:	ldr	r0, [fp, #-16]
   35b80:	movw	r1, #0
   35b84:	cmp	r1, r0
   35b88:	bcs	35b98 <__assert_fail@plt+0x24694>
   35b8c:	movw	r0, #0
   35b90:	str	r0, [fp, #-36]	; 0xffffffdc
   35b94:	b	35bb0 <__assert_fail@plt+0x246ac>
   35b98:	ldr	r0, [fp, #-16]
   35b9c:	movw	r1, #0
   35ba0:	sub	r0, r1, r0
   35ba4:	movw	r1, #65535	; 0xffff
   35ba8:	udiv	r0, r1, r0
   35bac:	str	r0, [fp, #-36]	; 0xffffffdc
   35bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35bb4:	ldr	r1, [fp, #-12]
   35bb8:	mvn	r2, #0
   35bbc:	sub	r1, r2, r1
   35bc0:	cmp	r0, r1
   35bc4:	bls	35ce0 <__assert_fail@plt+0x247dc>
   35bc8:	b	35cf8 <__assert_fail@plt+0x247f4>
   35bcc:	b	35bd4 <__assert_fail@plt+0x246d0>
   35bd0:	b	35bd8 <__assert_fail@plt+0x246d4>
   35bd4:	b	35c28 <__assert_fail@plt+0x24724>
   35bd8:	ldr	r0, [fp, #-16]
   35bdc:	cmn	r0, #1
   35be0:	bne	35c28 <__assert_fail@plt+0x24724>
   35be4:	b	35c00 <__assert_fail@plt+0x246fc>
   35be8:	ldr	r0, [fp, #-12]
   35bec:	add	r0, r0, #0
   35bf0:	movw	r1, #0
   35bf4:	cmp	r1, r0
   35bf8:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35bfc:	b	35cf8 <__assert_fail@plt+0x247f4>
   35c00:	ldr	r0, [fp, #-12]
   35c04:	movw	r1, #0
   35c08:	cmp	r1, r0
   35c0c:	bcs	35cf8 <__assert_fail@plt+0x247f4>
   35c10:	ldr	r0, [fp, #-12]
   35c14:	sub	r0, r0, #1
   35c18:	mvn	r1, #0
   35c1c:	cmp	r1, r0
   35c20:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35c24:	b	35cf8 <__assert_fail@plt+0x247f4>
   35c28:	ldr	r0, [fp, #-16]
   35c2c:	movw	r1, #0
   35c30:	udiv	r0, r1, r0
   35c34:	ldr	r1, [fp, #-12]
   35c38:	cmp	r0, r1
   35c3c:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35c40:	b	35cf8 <__assert_fail@plt+0x247f4>
   35c44:	ldr	r0, [fp, #-16]
   35c48:	cmp	r0, #0
   35c4c:	bne	35c54 <__assert_fail@plt+0x24750>
   35c50:	b	35cf8 <__assert_fail@plt+0x247f4>
   35c54:	ldr	r0, [fp, #-12]
   35c58:	cmp	r0, #0
   35c5c:	bcs	35cc8 <__assert_fail@plt+0x247c4>
   35c60:	b	35c68 <__assert_fail@plt+0x24764>
   35c64:	b	35c6c <__assert_fail@plt+0x24768>
   35c68:	b	35cac <__assert_fail@plt+0x247a8>
   35c6c:	ldr	r0, [fp, #-12]
   35c70:	cmn	r0, #1
   35c74:	bne	35cac <__assert_fail@plt+0x247a8>
   35c78:	b	35c94 <__assert_fail@plt+0x24790>
   35c7c:	ldr	r0, [fp, #-16]
   35c80:	add	r0, r0, #0
   35c84:	movw	r1, #0
   35c88:	cmp	r1, r0
   35c8c:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35c90:	b	35cf8 <__assert_fail@plt+0x247f4>
   35c94:	ldr	r0, [fp, #-16]
   35c98:	sub	r0, r0, #1
   35c9c:	mvn	r1, #0
   35ca0:	cmp	r1, r0
   35ca4:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35ca8:	b	35cf8 <__assert_fail@plt+0x247f4>
   35cac:	ldr	r0, [fp, #-12]
   35cb0:	movw	r1, #0
   35cb4:	udiv	r0, r1, r0
   35cb8:	ldr	r1, [fp, #-16]
   35cbc:	cmp	r0, r1
   35cc0:	bcc	35ce0 <__assert_fail@plt+0x247dc>
   35cc4:	b	35cf8 <__assert_fail@plt+0x247f4>
   35cc8:	ldr	r0, [fp, #-16]
   35ccc:	movw	r1, #65535	; 0xffff
   35cd0:	udiv	r0, r1, r0
   35cd4:	ldr	r1, [fp, #-12]
   35cd8:	cmp	r0, r1
   35cdc:	bcs	35cf8 <__assert_fail@plt+0x247f4>
   35ce0:	ldr	r0, [fp, #-12]
   35ce4:	ldr	r1, [fp, #-16]
   35ce8:	mul	r0, r0, r1
   35cec:	uxth	r0, r0
   35cf0:	str	r0, [fp, #-20]	; 0xffffffec
   35cf4:	b	368d8 <__assert_fail@plt+0x253d4>
   35cf8:	ldr	r0, [fp, #-12]
   35cfc:	ldr	r1, [fp, #-16]
   35d00:	mul	r0, r0, r1
   35d04:	uxth	r0, r0
   35d08:	str	r0, [fp, #-20]	; 0xffffffec
   35d0c:	b	368f0 <__assert_fail@plt+0x253ec>
   35d10:	b	35d14 <__assert_fail@plt+0x24810>
   35d14:	b	35ed8 <__assert_fail@plt+0x249d4>
   35d18:	ldr	r0, [fp, #-16]
   35d1c:	cmp	r0, #0
   35d20:	bcs	35e20 <__assert_fail@plt+0x2491c>
   35d24:	ldr	r0, [fp, #-12]
   35d28:	cmp	r0, #0
   35d2c:	bcs	35db4 <__assert_fail@plt+0x248b0>
   35d30:	b	35d50 <__assert_fail@plt+0x2484c>
   35d34:	ldr	r0, [pc, #3024]	; 3690c <__assert_fail@plt+0x25408>
   35d38:	ldr	r1, [fp, #-12]
   35d3c:	ldr	r2, [fp, #-16]
   35d40:	udiv	r0, r0, r2
   35d44:	cmp	r1, r0
   35d48:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35d4c:	b	35ec4 <__assert_fail@plt+0x249c0>
   35d50:	b	35d64 <__assert_fail@plt+0x24860>
   35d54:	ldr	r0, [fp, #-16]
   35d58:	cmp	r0, #1
   35d5c:	bcc	35d74 <__assert_fail@plt+0x24870>
   35d60:	b	35d80 <__assert_fail@plt+0x2487c>
   35d64:	ldr	r0, [fp, #-16]
   35d68:	movw	r1, #0
   35d6c:	cmp	r1, r0
   35d70:	bcs	35d80 <__assert_fail@plt+0x2487c>
   35d74:	movw	r0, #0
   35d78:	str	r0, [fp, #-40]	; 0xffffffd8
   35d7c:	b	35d98 <__assert_fail@plt+0x24894>
   35d80:	ldr	r0, [pc, #2948]	; 3690c <__assert_fail@plt+0x25408>
   35d84:	ldr	r1, [fp, #-16]
   35d88:	movw	r2, #0
   35d8c:	sub	r1, r2, r1
   35d90:	udiv	r0, r0, r1
   35d94:	str	r0, [fp, #-40]	; 0xffffffd8
   35d98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35d9c:	ldr	r1, [fp, #-12]
   35da0:	mvn	r2, #0
   35da4:	sub	r1, r2, r1
   35da8:	cmp	r0, r1
   35dac:	bls	35eb0 <__assert_fail@plt+0x249ac>
   35db0:	b	35ec4 <__assert_fail@plt+0x249c0>
   35db4:	ldr	r0, [fp, #-16]
   35db8:	cmn	r0, #1
   35dbc:	bne	35e04 <__assert_fail@plt+0x24900>
   35dc0:	b	35ddc <__assert_fail@plt+0x248d8>
   35dc4:	ldr	r0, [fp, #-12]
   35dc8:	add	r0, r0, #-2147483648	; 0x80000000
   35dcc:	movw	r1, #0
   35dd0:	cmp	r1, r0
   35dd4:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35dd8:	b	35ec4 <__assert_fail@plt+0x249c0>
   35ddc:	ldr	r0, [fp, #-12]
   35de0:	movw	r1, #0
   35de4:	cmp	r1, r0
   35de8:	bcs	35ec4 <__assert_fail@plt+0x249c0>
   35dec:	ldr	r0, [pc, #2840]	; 3690c <__assert_fail@plt+0x25408>
   35df0:	ldr	r1, [fp, #-12]
   35df4:	sub	r1, r1, #1
   35df8:	cmp	r0, r1
   35dfc:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35e00:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e04:	ldr	r0, [pc, #2820]	; 36910 <__assert_fail@plt+0x2540c>
   35e08:	ldr	r1, [fp, #-16]
   35e0c:	udiv	r0, r0, r1
   35e10:	ldr	r1, [fp, #-12]
   35e14:	cmp	r0, r1
   35e18:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35e1c:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e20:	ldr	r0, [fp, #-16]
   35e24:	cmp	r0, #0
   35e28:	bne	35e30 <__assert_fail@plt+0x2492c>
   35e2c:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e30:	ldr	r0, [fp, #-12]
   35e34:	cmp	r0, #0
   35e38:	bcs	35e98 <__assert_fail@plt+0x24994>
   35e3c:	ldr	r0, [fp, #-12]
   35e40:	cmn	r0, #1
   35e44:	bne	35e7c <__assert_fail@plt+0x24978>
   35e48:	b	35e64 <__assert_fail@plt+0x24960>
   35e4c:	ldr	r0, [fp, #-16]
   35e50:	add	r0, r0, #-2147483648	; 0x80000000
   35e54:	movw	r1, #0
   35e58:	cmp	r1, r0
   35e5c:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35e60:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e64:	ldr	r0, [pc, #2720]	; 3690c <__assert_fail@plt+0x25408>
   35e68:	ldr	r1, [fp, #-16]
   35e6c:	sub	r1, r1, #1
   35e70:	cmp	r0, r1
   35e74:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35e78:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e7c:	ldr	r0, [pc, #2700]	; 36910 <__assert_fail@plt+0x2540c>
   35e80:	ldr	r1, [fp, #-12]
   35e84:	udiv	r0, r0, r1
   35e88:	ldr	r1, [fp, #-16]
   35e8c:	cmp	r0, r1
   35e90:	bcc	35eb0 <__assert_fail@plt+0x249ac>
   35e94:	b	35ec4 <__assert_fail@plt+0x249c0>
   35e98:	ldr	r0, [pc, #2668]	; 3690c <__assert_fail@plt+0x25408>
   35e9c:	ldr	r1, [fp, #-16]
   35ea0:	udiv	r0, r0, r1
   35ea4:	ldr	r1, [fp, #-12]
   35ea8:	cmp	r0, r1
   35eac:	bcs	35ec4 <__assert_fail@plt+0x249c0>
   35eb0:	ldr	r0, [fp, #-12]
   35eb4:	ldr	r1, [fp, #-16]
   35eb8:	mul	r0, r0, r1
   35ebc:	str	r0, [fp, #-20]	; 0xffffffec
   35ec0:	b	368d8 <__assert_fail@plt+0x253d4>
   35ec4:	ldr	r0, [fp, #-12]
   35ec8:	ldr	r1, [fp, #-16]
   35ecc:	mul	r0, r0, r1
   35ed0:	str	r0, [fp, #-20]	; 0xffffffec
   35ed4:	b	368f0 <__assert_fail@plt+0x253ec>
   35ed8:	ldr	r0, [fp, #-16]
   35edc:	cmp	r0, #0
   35ee0:	bcs	35fec <__assert_fail@plt+0x24ae8>
   35ee4:	ldr	r0, [fp, #-12]
   35ee8:	cmp	r0, #0
   35eec:	bcs	35f74 <__assert_fail@plt+0x24a70>
   35ef0:	b	35f10 <__assert_fail@plt+0x24a0c>
   35ef4:	ldr	r0, [fp, #-12]
   35ef8:	ldr	r1, [fp, #-16]
   35efc:	mvn	r2, #0
   35f00:	udiv	r1, r2, r1
   35f04:	cmp	r0, r1
   35f08:	bcc	36088 <__assert_fail@plt+0x24b84>
   35f0c:	b	3609c <__assert_fail@plt+0x24b98>
   35f10:	b	35f24 <__assert_fail@plt+0x24a20>
   35f14:	ldr	r0, [fp, #-16]
   35f18:	cmp	r0, #1
   35f1c:	bcc	35f34 <__assert_fail@plt+0x24a30>
   35f20:	b	35f40 <__assert_fail@plt+0x24a3c>
   35f24:	ldr	r0, [fp, #-16]
   35f28:	movw	r1, #0
   35f2c:	cmp	r1, r0
   35f30:	bcs	35f40 <__assert_fail@plt+0x24a3c>
   35f34:	movw	r0, #1
   35f38:	str	r0, [fp, #-44]	; 0xffffffd4
   35f3c:	b	35f58 <__assert_fail@plt+0x24a54>
   35f40:	ldr	r0, [fp, #-16]
   35f44:	movw	r1, #0
   35f48:	sub	r0, r1, r0
   35f4c:	mvn	r1, #0
   35f50:	udiv	r0, r1, r0
   35f54:	str	r0, [fp, #-44]	; 0xffffffd4
   35f58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   35f5c:	ldr	r1, [fp, #-12]
   35f60:	mvn	r2, #0
   35f64:	sub	r1, r2, r1
   35f68:	cmp	r0, r1
   35f6c:	bls	36088 <__assert_fail@plt+0x24b84>
   35f70:	b	3609c <__assert_fail@plt+0x24b98>
   35f74:	b	35f7c <__assert_fail@plt+0x24a78>
   35f78:	b	35f80 <__assert_fail@plt+0x24a7c>
   35f7c:	b	35fd0 <__assert_fail@plt+0x24acc>
   35f80:	ldr	r0, [fp, #-16]
   35f84:	cmn	r0, #1
   35f88:	bne	35fd0 <__assert_fail@plt+0x24acc>
   35f8c:	b	35fa8 <__assert_fail@plt+0x24aa4>
   35f90:	ldr	r0, [fp, #-12]
   35f94:	add	r0, r0, #0
   35f98:	movw	r1, #0
   35f9c:	cmp	r1, r0
   35fa0:	bcc	36088 <__assert_fail@plt+0x24b84>
   35fa4:	b	3609c <__assert_fail@plt+0x24b98>
   35fa8:	ldr	r0, [fp, #-12]
   35fac:	movw	r1, #0
   35fb0:	cmp	r1, r0
   35fb4:	bcs	3609c <__assert_fail@plt+0x24b98>
   35fb8:	ldr	r0, [fp, #-12]
   35fbc:	sub	r0, r0, #1
   35fc0:	mvn	r1, #0
   35fc4:	cmp	r1, r0
   35fc8:	bcc	36088 <__assert_fail@plt+0x24b84>
   35fcc:	b	3609c <__assert_fail@plt+0x24b98>
   35fd0:	ldr	r0, [fp, #-16]
   35fd4:	movw	r1, #0
   35fd8:	udiv	r0, r1, r0
   35fdc:	ldr	r1, [fp, #-12]
   35fe0:	cmp	r0, r1
   35fe4:	bcc	36088 <__assert_fail@plt+0x24b84>
   35fe8:	b	3609c <__assert_fail@plt+0x24b98>
   35fec:	ldr	r0, [fp, #-16]
   35ff0:	cmp	r0, #0
   35ff4:	bne	35ffc <__assert_fail@plt+0x24af8>
   35ff8:	b	3609c <__assert_fail@plt+0x24b98>
   35ffc:	ldr	r0, [fp, #-12]
   36000:	cmp	r0, #0
   36004:	bcs	36070 <__assert_fail@plt+0x24b6c>
   36008:	b	36010 <__assert_fail@plt+0x24b0c>
   3600c:	b	36014 <__assert_fail@plt+0x24b10>
   36010:	b	36054 <__assert_fail@plt+0x24b50>
   36014:	ldr	r0, [fp, #-12]
   36018:	cmn	r0, #1
   3601c:	bne	36054 <__assert_fail@plt+0x24b50>
   36020:	b	3603c <__assert_fail@plt+0x24b38>
   36024:	ldr	r0, [fp, #-16]
   36028:	add	r0, r0, #0
   3602c:	movw	r1, #0
   36030:	cmp	r1, r0
   36034:	bcc	36088 <__assert_fail@plt+0x24b84>
   36038:	b	3609c <__assert_fail@plt+0x24b98>
   3603c:	ldr	r0, [fp, #-16]
   36040:	sub	r0, r0, #1
   36044:	mvn	r1, #0
   36048:	cmp	r1, r0
   3604c:	bcc	36088 <__assert_fail@plt+0x24b84>
   36050:	b	3609c <__assert_fail@plt+0x24b98>
   36054:	ldr	r0, [fp, #-12]
   36058:	movw	r1, #0
   3605c:	udiv	r0, r1, r0
   36060:	ldr	r1, [fp, #-16]
   36064:	cmp	r0, r1
   36068:	bcc	36088 <__assert_fail@plt+0x24b84>
   3606c:	b	3609c <__assert_fail@plt+0x24b98>
   36070:	ldr	r0, [fp, #-16]
   36074:	mvn	r1, #0
   36078:	udiv	r0, r1, r0
   3607c:	ldr	r1, [fp, #-12]
   36080:	cmp	r0, r1
   36084:	bcs	3609c <__assert_fail@plt+0x24b98>
   36088:	ldr	r0, [fp, #-12]
   3608c:	ldr	r1, [fp, #-16]
   36090:	mul	r0, r0, r1
   36094:	str	r0, [fp, #-20]	; 0xffffffec
   36098:	b	368d8 <__assert_fail@plt+0x253d4>
   3609c:	ldr	r0, [fp, #-12]
   360a0:	ldr	r1, [fp, #-16]
   360a4:	mul	r0, r0, r1
   360a8:	str	r0, [fp, #-20]	; 0xffffffec
   360ac:	b	368f0 <__assert_fail@plt+0x253ec>
   360b0:	b	360b4 <__assert_fail@plt+0x24bb0>
   360b4:	b	36278 <__assert_fail@plt+0x24d74>
   360b8:	ldr	r0, [fp, #-16]
   360bc:	cmp	r0, #0
   360c0:	bcs	361c0 <__assert_fail@plt+0x24cbc>
   360c4:	ldr	r0, [fp, #-12]
   360c8:	cmp	r0, #0
   360cc:	bcs	36154 <__assert_fail@plt+0x24c50>
   360d0:	b	360f0 <__assert_fail@plt+0x24bec>
   360d4:	ldr	r0, [pc, #2096]	; 3690c <__assert_fail@plt+0x25408>
   360d8:	ldr	r1, [fp, #-12]
   360dc:	ldr	r2, [fp, #-16]
   360e0:	udiv	r0, r0, r2
   360e4:	cmp	r1, r0
   360e8:	bcc	36250 <__assert_fail@plt+0x24d4c>
   360ec:	b	36264 <__assert_fail@plt+0x24d60>
   360f0:	b	36104 <__assert_fail@plt+0x24c00>
   360f4:	ldr	r0, [fp, #-16]
   360f8:	cmp	r0, #1
   360fc:	bcc	36114 <__assert_fail@plt+0x24c10>
   36100:	b	36120 <__assert_fail@plt+0x24c1c>
   36104:	ldr	r0, [fp, #-16]
   36108:	movw	r1, #0
   3610c:	cmp	r1, r0
   36110:	bcs	36120 <__assert_fail@plt+0x24c1c>
   36114:	movw	r0, #0
   36118:	str	r0, [fp, #-48]	; 0xffffffd0
   3611c:	b	36138 <__assert_fail@plt+0x24c34>
   36120:	ldr	r0, [pc, #2020]	; 3690c <__assert_fail@plt+0x25408>
   36124:	ldr	r1, [fp, #-16]
   36128:	movw	r2, #0
   3612c:	sub	r1, r2, r1
   36130:	udiv	r0, r0, r1
   36134:	str	r0, [fp, #-48]	; 0xffffffd0
   36138:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3613c:	ldr	r1, [fp, #-12]
   36140:	mvn	r2, #0
   36144:	sub	r1, r2, r1
   36148:	cmp	r0, r1
   3614c:	bls	36250 <__assert_fail@plt+0x24d4c>
   36150:	b	36264 <__assert_fail@plt+0x24d60>
   36154:	ldr	r0, [fp, #-16]
   36158:	cmn	r0, #1
   3615c:	bne	361a4 <__assert_fail@plt+0x24ca0>
   36160:	b	3617c <__assert_fail@plt+0x24c78>
   36164:	ldr	r0, [fp, #-12]
   36168:	add	r0, r0, #-2147483648	; 0x80000000
   3616c:	movw	r1, #0
   36170:	cmp	r1, r0
   36174:	bcc	36250 <__assert_fail@plt+0x24d4c>
   36178:	b	36264 <__assert_fail@plt+0x24d60>
   3617c:	ldr	r0, [fp, #-12]
   36180:	movw	r1, #0
   36184:	cmp	r1, r0
   36188:	bcs	36264 <__assert_fail@plt+0x24d60>
   3618c:	ldr	r0, [pc, #1912]	; 3690c <__assert_fail@plt+0x25408>
   36190:	ldr	r1, [fp, #-12]
   36194:	sub	r1, r1, #1
   36198:	cmp	r0, r1
   3619c:	bcc	36250 <__assert_fail@plt+0x24d4c>
   361a0:	b	36264 <__assert_fail@plt+0x24d60>
   361a4:	ldr	r0, [pc, #1892]	; 36910 <__assert_fail@plt+0x2540c>
   361a8:	ldr	r1, [fp, #-16]
   361ac:	udiv	r0, r0, r1
   361b0:	ldr	r1, [fp, #-12]
   361b4:	cmp	r0, r1
   361b8:	bcc	36250 <__assert_fail@plt+0x24d4c>
   361bc:	b	36264 <__assert_fail@plt+0x24d60>
   361c0:	ldr	r0, [fp, #-16]
   361c4:	cmp	r0, #0
   361c8:	bne	361d0 <__assert_fail@plt+0x24ccc>
   361cc:	b	36264 <__assert_fail@plt+0x24d60>
   361d0:	ldr	r0, [fp, #-12]
   361d4:	cmp	r0, #0
   361d8:	bcs	36238 <__assert_fail@plt+0x24d34>
   361dc:	ldr	r0, [fp, #-12]
   361e0:	cmn	r0, #1
   361e4:	bne	3621c <__assert_fail@plt+0x24d18>
   361e8:	b	36204 <__assert_fail@plt+0x24d00>
   361ec:	ldr	r0, [fp, #-16]
   361f0:	add	r0, r0, #-2147483648	; 0x80000000
   361f4:	movw	r1, #0
   361f8:	cmp	r1, r0
   361fc:	bcc	36250 <__assert_fail@plt+0x24d4c>
   36200:	b	36264 <__assert_fail@plt+0x24d60>
   36204:	ldr	r0, [pc, #1792]	; 3690c <__assert_fail@plt+0x25408>
   36208:	ldr	r1, [fp, #-16]
   3620c:	sub	r1, r1, #1
   36210:	cmp	r0, r1
   36214:	bcc	36250 <__assert_fail@plt+0x24d4c>
   36218:	b	36264 <__assert_fail@plt+0x24d60>
   3621c:	ldr	r0, [pc, #1772]	; 36910 <__assert_fail@plt+0x2540c>
   36220:	ldr	r1, [fp, #-12]
   36224:	udiv	r0, r0, r1
   36228:	ldr	r1, [fp, #-16]
   3622c:	cmp	r0, r1
   36230:	bcc	36250 <__assert_fail@plt+0x24d4c>
   36234:	b	36264 <__assert_fail@plt+0x24d60>
   36238:	ldr	r0, [pc, #1740]	; 3690c <__assert_fail@plt+0x25408>
   3623c:	ldr	r1, [fp, #-16]
   36240:	udiv	r0, r0, r1
   36244:	ldr	r1, [fp, #-12]
   36248:	cmp	r0, r1
   3624c:	bcs	36264 <__assert_fail@plt+0x24d60>
   36250:	ldr	r0, [fp, #-12]
   36254:	ldr	r1, [fp, #-16]
   36258:	mul	r0, r0, r1
   3625c:	str	r0, [fp, #-20]	; 0xffffffec
   36260:	b	368d8 <__assert_fail@plt+0x253d4>
   36264:	ldr	r0, [fp, #-12]
   36268:	ldr	r1, [fp, #-16]
   3626c:	mul	r0, r0, r1
   36270:	str	r0, [fp, #-20]	; 0xffffffec
   36274:	b	368f0 <__assert_fail@plt+0x253ec>
   36278:	ldr	r0, [fp, #-16]
   3627c:	cmp	r0, #0
   36280:	bcs	3638c <__assert_fail@plt+0x24e88>
   36284:	ldr	r0, [fp, #-12]
   36288:	cmp	r0, #0
   3628c:	bcs	36314 <__assert_fail@plt+0x24e10>
   36290:	b	362b0 <__assert_fail@plt+0x24dac>
   36294:	ldr	r0, [fp, #-12]
   36298:	ldr	r1, [fp, #-16]
   3629c:	mvn	r2, #0
   362a0:	udiv	r1, r2, r1
   362a4:	cmp	r0, r1
   362a8:	bcc	36428 <__assert_fail@plt+0x24f24>
   362ac:	b	3643c <__assert_fail@plt+0x24f38>
   362b0:	b	362c4 <__assert_fail@plt+0x24dc0>
   362b4:	ldr	r0, [fp, #-16]
   362b8:	cmp	r0, #1
   362bc:	bcc	362d4 <__assert_fail@plt+0x24dd0>
   362c0:	b	362e0 <__assert_fail@plt+0x24ddc>
   362c4:	ldr	r0, [fp, #-16]
   362c8:	movw	r1, #0
   362cc:	cmp	r1, r0
   362d0:	bcs	362e0 <__assert_fail@plt+0x24ddc>
   362d4:	movw	r0, #1
   362d8:	str	r0, [fp, #-52]	; 0xffffffcc
   362dc:	b	362f8 <__assert_fail@plt+0x24df4>
   362e0:	ldr	r0, [fp, #-16]
   362e4:	movw	r1, #0
   362e8:	sub	r0, r1, r0
   362ec:	mvn	r1, #0
   362f0:	udiv	r0, r1, r0
   362f4:	str	r0, [fp, #-52]	; 0xffffffcc
   362f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   362fc:	ldr	r1, [fp, #-12]
   36300:	mvn	r2, #0
   36304:	sub	r1, r2, r1
   36308:	cmp	r0, r1
   3630c:	bls	36428 <__assert_fail@plt+0x24f24>
   36310:	b	3643c <__assert_fail@plt+0x24f38>
   36314:	b	3631c <__assert_fail@plt+0x24e18>
   36318:	b	36320 <__assert_fail@plt+0x24e1c>
   3631c:	b	36370 <__assert_fail@plt+0x24e6c>
   36320:	ldr	r0, [fp, #-16]
   36324:	cmn	r0, #1
   36328:	bne	36370 <__assert_fail@plt+0x24e6c>
   3632c:	b	36348 <__assert_fail@plt+0x24e44>
   36330:	ldr	r0, [fp, #-12]
   36334:	add	r0, r0, #0
   36338:	movw	r1, #0
   3633c:	cmp	r1, r0
   36340:	bcc	36428 <__assert_fail@plt+0x24f24>
   36344:	b	3643c <__assert_fail@plt+0x24f38>
   36348:	ldr	r0, [fp, #-12]
   3634c:	movw	r1, #0
   36350:	cmp	r1, r0
   36354:	bcs	3643c <__assert_fail@plt+0x24f38>
   36358:	ldr	r0, [fp, #-12]
   3635c:	sub	r0, r0, #1
   36360:	mvn	r1, #0
   36364:	cmp	r1, r0
   36368:	bcc	36428 <__assert_fail@plt+0x24f24>
   3636c:	b	3643c <__assert_fail@plt+0x24f38>
   36370:	ldr	r0, [fp, #-16]
   36374:	movw	r1, #0
   36378:	udiv	r0, r1, r0
   3637c:	ldr	r1, [fp, #-12]
   36380:	cmp	r0, r1
   36384:	bcc	36428 <__assert_fail@plt+0x24f24>
   36388:	b	3643c <__assert_fail@plt+0x24f38>
   3638c:	ldr	r0, [fp, #-16]
   36390:	cmp	r0, #0
   36394:	bne	3639c <__assert_fail@plt+0x24e98>
   36398:	b	3643c <__assert_fail@plt+0x24f38>
   3639c:	ldr	r0, [fp, #-12]
   363a0:	cmp	r0, #0
   363a4:	bcs	36410 <__assert_fail@plt+0x24f0c>
   363a8:	b	363b0 <__assert_fail@plt+0x24eac>
   363ac:	b	363b4 <__assert_fail@plt+0x24eb0>
   363b0:	b	363f4 <__assert_fail@plt+0x24ef0>
   363b4:	ldr	r0, [fp, #-12]
   363b8:	cmn	r0, #1
   363bc:	bne	363f4 <__assert_fail@plt+0x24ef0>
   363c0:	b	363dc <__assert_fail@plt+0x24ed8>
   363c4:	ldr	r0, [fp, #-16]
   363c8:	add	r0, r0, #0
   363cc:	movw	r1, #0
   363d0:	cmp	r1, r0
   363d4:	bcc	36428 <__assert_fail@plt+0x24f24>
   363d8:	b	3643c <__assert_fail@plt+0x24f38>
   363dc:	ldr	r0, [fp, #-16]
   363e0:	sub	r0, r0, #1
   363e4:	mvn	r1, #0
   363e8:	cmp	r1, r0
   363ec:	bcc	36428 <__assert_fail@plt+0x24f24>
   363f0:	b	3643c <__assert_fail@plt+0x24f38>
   363f4:	ldr	r0, [fp, #-12]
   363f8:	movw	r1, #0
   363fc:	udiv	r0, r1, r0
   36400:	ldr	r1, [fp, #-16]
   36404:	cmp	r0, r1
   36408:	bcc	36428 <__assert_fail@plt+0x24f24>
   3640c:	b	3643c <__assert_fail@plt+0x24f38>
   36410:	ldr	r0, [fp, #-16]
   36414:	mvn	r1, #0
   36418:	udiv	r0, r1, r0
   3641c:	ldr	r1, [fp, #-12]
   36420:	cmp	r0, r1
   36424:	bcs	3643c <__assert_fail@plt+0x24f38>
   36428:	ldr	r0, [fp, #-12]
   3642c:	ldr	r1, [fp, #-16]
   36430:	mul	r0, r0, r1
   36434:	str	r0, [fp, #-20]	; 0xffffffec
   36438:	b	368d8 <__assert_fail@plt+0x253d4>
   3643c:	ldr	r0, [fp, #-12]
   36440:	ldr	r1, [fp, #-16]
   36444:	mul	r0, r0, r1
   36448:	str	r0, [fp, #-20]	; 0xffffffec
   3644c:	b	368f0 <__assert_fail@plt+0x253ec>
   36450:	b	366a4 <__assert_fail@plt+0x251a0>
   36454:	ldr	r0, [fp, #-16]
   36458:	cmp	r0, #0
   3645c:	bcs	365bc <__assert_fail@plt+0x250b8>
   36460:	ldr	r0, [fp, #-12]
   36464:	cmp	r0, #0
   36468:	bcs	36538 <__assert_fail@plt+0x25034>
   3646c:	b	36470 <__assert_fail@plt+0x24f6c>
   36470:	ldr	r0, [fp, #-12]
   36474:	ldr	r2, [fp, #-16]
   36478:	mvn	r1, #0
   3647c:	mvn	r3, #-2147483648	; 0x80000000
   36480:	mov	ip, #0
   36484:	str	r0, [fp, #-56]	; 0xffffffc8
   36488:	mov	r0, r1
   3648c:	mov	r1, r3
   36490:	mov	r3, ip
   36494:	bl	37224 <__assert_fail@plt+0x25d20>
   36498:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3649c:	subs	r0, r2, r0
   364a0:	rscs	r1, r1, #0
   364a4:	str	r0, [fp, #-60]	; 0xffffffc4
   364a8:	str	r1, [fp, #-64]	; 0xffffffc0
   364ac:	blt	3667c <__assert_fail@plt+0x25178>
   364b0:	b	36690 <__assert_fail@plt+0x2518c>
   364b4:	b	364c8 <__assert_fail@plt+0x24fc4>
   364b8:	ldr	r0, [fp, #-16]
   364bc:	cmp	r0, #1
   364c0:	bcc	364d8 <__assert_fail@plt+0x24fd4>
   364c4:	b	364ec <__assert_fail@plt+0x24fe8>
   364c8:	ldr	r0, [fp, #-16]
   364cc:	movw	r1, #0
   364d0:	cmp	r1, r0
   364d4:	bcs	364ec <__assert_fail@plt+0x24fe8>
   364d8:	mov	r0, #0
   364dc:	mvn	r1, #0
   364e0:	str	r1, [fp, #-68]	; 0xffffffbc
   364e4:	str	r0, [fp, #-72]	; 0xffffffb8
   364e8:	b	36510 <__assert_fail@plt+0x2500c>
   364ec:	ldr	r0, [fp, #-16]
   364f0:	rsb	r2, r0, #0
   364f4:	mvn	r0, #0
   364f8:	mvn	r1, #-2147483648	; 0x80000000
   364fc:	mov	r3, #0
   36500:	bl	37224 <__assert_fail@plt+0x25d20>
   36504:	str	r0, [fp, #-68]	; 0xffffffbc
   36508:	str	r1, [fp, #-72]	; 0xffffffb8
   3650c:	b	36510 <__assert_fail@plt+0x2500c>
   36510:	ldr	r0, [fp, #-72]	; 0xffffffb8
   36514:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36518:	ldr	r2, [fp, #-12]
   3651c:	mvn	r2, r2
   36520:	subs	r1, r2, r1
   36524:	rscs	r0, r0, #0
   36528:	str	r1, [fp, #-76]	; 0xffffffb4
   3652c:	str	r0, [fp, #-80]	; 0xffffffb0
   36530:	bge	3667c <__assert_fail@plt+0x25178>
   36534:	b	36690 <__assert_fail@plt+0x2518c>
   36538:	ldr	r0, [fp, #-16]
   3653c:	cmn	r0, #1
   36540:	bne	36588 <__assert_fail@plt+0x25084>
   36544:	b	36568 <__assert_fail@plt+0x25064>
   36548:	ldr	r0, [fp, #-12]
   3654c:	rsbs	r0, r0, #0
   36550:	mov	r1, #0
   36554:	sbcs	r1, r1, #-2147483648	; 0x80000000
   36558:	str	r0, [fp, #-84]	; 0xffffffac
   3655c:	str	r1, [sp, #88]	; 0x58
   36560:	blt	3667c <__assert_fail@plt+0x25178>
   36564:	b	36690 <__assert_fail@plt+0x2518c>
   36568:	ldr	r0, [fp, #-12]
   3656c:	movw	r1, #0
   36570:	cmp	r1, r0
   36574:	bcs	36690 <__assert_fail@plt+0x2518c>
   36578:	mov	r0, #0
   3657c:	cmp	r0, #0
   36580:	bne	3667c <__assert_fail@plt+0x25178>
   36584:	b	36690 <__assert_fail@plt+0x2518c>
   36588:	ldr	r2, [fp, #-16]
   3658c:	mov	r1, #-2147483648	; 0x80000000
   36590:	mov	r0, #0
   36594:	str	r0, [sp, #84]	; 0x54
   36598:	ldr	r3, [sp, #84]	; 0x54
   3659c:	bl	37150 <__assert_fail@plt+0x25c4c>
   365a0:	ldr	r2, [fp, #-12]
   365a4:	subs	r0, r0, r2
   365a8:	sbcs	r1, r1, #0
   365ac:	str	r0, [sp, #80]	; 0x50
   365b0:	str	r1, [sp, #76]	; 0x4c
   365b4:	blt	3667c <__assert_fail@plt+0x25178>
   365b8:	b	36690 <__assert_fail@plt+0x2518c>
   365bc:	ldr	r0, [fp, #-16]
   365c0:	cmp	r0, #0
   365c4:	bne	365cc <__assert_fail@plt+0x250c8>
   365c8:	b	36690 <__assert_fail@plt+0x2518c>
   365cc:	ldr	r0, [fp, #-12]
   365d0:	cmp	r0, #0
   365d4:	bcs	3664c <__assert_fail@plt+0x25148>
   365d8:	ldr	r0, [fp, #-12]
   365dc:	cmn	r0, #1
   365e0:	bne	36618 <__assert_fail@plt+0x25114>
   365e4:	b	36608 <__assert_fail@plt+0x25104>
   365e8:	ldr	r0, [fp, #-16]
   365ec:	rsbs	r0, r0, #0
   365f0:	mov	r1, #0
   365f4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   365f8:	str	r0, [sp, #72]	; 0x48
   365fc:	str	r1, [sp, #68]	; 0x44
   36600:	blt	3667c <__assert_fail@plt+0x25178>
   36604:	b	36690 <__assert_fail@plt+0x2518c>
   36608:	mov	r0, #0
   3660c:	cmp	r0, #0
   36610:	bne	3667c <__assert_fail@plt+0x25178>
   36614:	b	36690 <__assert_fail@plt+0x2518c>
   36618:	ldr	r2, [fp, #-12]
   3661c:	mov	r1, #-2147483648	; 0x80000000
   36620:	mov	r0, #0
   36624:	str	r0, [sp, #64]	; 0x40
   36628:	ldr	r3, [sp, #64]	; 0x40
   3662c:	bl	37150 <__assert_fail@plt+0x25c4c>
   36630:	ldr	r2, [fp, #-16]
   36634:	subs	r0, r0, r2
   36638:	sbcs	r1, r1, #0
   3663c:	str	r0, [sp, #60]	; 0x3c
   36640:	str	r1, [sp, #56]	; 0x38
   36644:	blt	3667c <__assert_fail@plt+0x25178>
   36648:	b	36690 <__assert_fail@plt+0x2518c>
   3664c:	ldr	r2, [fp, #-16]
   36650:	mvn	r0, #0
   36654:	mvn	r1, #-2147483648	; 0x80000000
   36658:	mov	r3, #0
   3665c:	bl	37224 <__assert_fail@plt+0x25d20>
   36660:	ldr	r2, [fp, #-12]
   36664:	subs	r0, r0, r2
   36668:	sbcs	r1, r1, #0
   3666c:	str	r0, [sp, #52]	; 0x34
   36670:	str	r1, [sp, #48]	; 0x30
   36674:	bge	36690 <__assert_fail@plt+0x2518c>
   36678:	b	3667c <__assert_fail@plt+0x25178>
   3667c:	ldr	r0, [fp, #-12]
   36680:	ldr	r1, [fp, #-16]
   36684:	mul	r0, r0, r1
   36688:	str	r0, [fp, #-20]	; 0xffffffec
   3668c:	b	368d8 <__assert_fail@plt+0x253d4>
   36690:	ldr	r0, [fp, #-12]
   36694:	ldr	r1, [fp, #-16]
   36698:	mul	r0, r0, r1
   3669c:	str	r0, [fp, #-20]	; 0xffffffec
   366a0:	b	368f0 <__assert_fail@plt+0x253ec>
   366a4:	ldr	r0, [fp, #-16]
   366a8:	cmp	r0, #0
   366ac:	bcs	367f8 <__assert_fail@plt+0x252f4>
   366b0:	ldr	r0, [fp, #-12]
   366b4:	cmp	r0, #0
   366b8:	bcs	36780 <__assert_fail@plt+0x2527c>
   366bc:	b	366f8 <__assert_fail@plt+0x251f4>
   366c0:	ldr	r0, [fp, #-12]
   366c4:	ldr	r2, [fp, #-16]
   366c8:	mvn	r1, #0
   366cc:	mov	r3, #0
   366d0:	str	r0, [sp, #44]	; 0x2c
   366d4:	mov	r0, r1
   366d8:	bl	37224 <__assert_fail@plt+0x25d20>
   366dc:	ldr	r2, [sp, #44]	; 0x2c
   366e0:	subs	r0, r2, r0
   366e4:	rscs	r1, r1, #0
   366e8:	str	r0, [sp, #40]	; 0x28
   366ec:	str	r1, [sp, #36]	; 0x24
   366f0:	bcc	368b0 <__assert_fail@plt+0x253ac>
   366f4:	b	368c4 <__assert_fail@plt+0x253c0>
   366f8:	b	3670c <__assert_fail@plt+0x25208>
   366fc:	ldr	r0, [fp, #-16]
   36700:	cmp	r0, #1
   36704:	bcc	3671c <__assert_fail@plt+0x25218>
   36708:	b	36730 <__assert_fail@plt+0x2522c>
   3670c:	ldr	r0, [fp, #-16]
   36710:	movw	r1, #0
   36714:	cmp	r1, r0
   36718:	bcs	36730 <__assert_fail@plt+0x2522c>
   3671c:	mov	r0, #1
   36720:	mvn	r1, #0
   36724:	str	r1, [sp, #32]
   36728:	str	r0, [sp, #28]
   3672c:	b	36758 <__assert_fail@plt+0x25254>
   36730:	ldr	r0, [fp, #-16]
   36734:	rsb	r2, r0, #0
   36738:	mvn	r0, #0
   3673c:	mov	r3, #0
   36740:	str	r0, [sp, #24]
   36744:	ldr	r1, [sp, #24]
   36748:	bl	37224 <__assert_fail@plt+0x25d20>
   3674c:	str	r0, [sp, #32]
   36750:	str	r1, [sp, #28]
   36754:	b	36758 <__assert_fail@plt+0x25254>
   36758:	ldr	r0, [sp, #28]
   3675c:	ldr	r1, [sp, #32]
   36760:	ldr	r2, [fp, #-12]
   36764:	mvn	r2, r2
   36768:	subs	r1, r2, r1
   3676c:	rscs	r0, r0, #0
   36770:	str	r1, [sp, #20]
   36774:	str	r0, [sp, #16]
   36778:	bcs	368b0 <__assert_fail@plt+0x253ac>
   3677c:	b	368c4 <__assert_fail@plt+0x253c0>
   36780:	b	36788 <__assert_fail@plt+0x25284>
   36784:	b	3678c <__assert_fail@plt+0x25288>
   36788:	b	367dc <__assert_fail@plt+0x252d8>
   3678c:	ldr	r0, [fp, #-16]
   36790:	cmn	r0, #1
   36794:	bne	367dc <__assert_fail@plt+0x252d8>
   36798:	b	367b4 <__assert_fail@plt+0x252b0>
   3679c:	ldr	r0, [fp, #-12]
   367a0:	add	r0, r0, #0
   367a4:	movw	r1, #0
   367a8:	cmp	r1, r0
   367ac:	bcc	368b0 <__assert_fail@plt+0x253ac>
   367b0:	b	368c4 <__assert_fail@plt+0x253c0>
   367b4:	ldr	r0, [fp, #-12]
   367b8:	movw	r1, #0
   367bc:	cmp	r1, r0
   367c0:	bcs	368c4 <__assert_fail@plt+0x253c0>
   367c4:	ldr	r0, [fp, #-12]
   367c8:	sub	r0, r0, #1
   367cc:	mvn	r1, #0
   367d0:	cmp	r1, r0
   367d4:	bcc	368b0 <__assert_fail@plt+0x253ac>
   367d8:	b	368c4 <__assert_fail@plt+0x253c0>
   367dc:	ldr	r0, [fp, #-16]
   367e0:	movw	r1, #0
   367e4:	udiv	r0, r1, r0
   367e8:	ldr	r1, [fp, #-12]
   367ec:	cmp	r0, r1
   367f0:	bcc	368b0 <__assert_fail@plt+0x253ac>
   367f4:	b	368c4 <__assert_fail@plt+0x253c0>
   367f8:	ldr	r0, [fp, #-16]
   367fc:	cmp	r0, #0
   36800:	bne	36808 <__assert_fail@plt+0x25304>
   36804:	b	368c4 <__assert_fail@plt+0x253c0>
   36808:	ldr	r0, [fp, #-12]
   3680c:	cmp	r0, #0
   36810:	bcs	3687c <__assert_fail@plt+0x25378>
   36814:	b	3681c <__assert_fail@plt+0x25318>
   36818:	b	36820 <__assert_fail@plt+0x2531c>
   3681c:	b	36860 <__assert_fail@plt+0x2535c>
   36820:	ldr	r0, [fp, #-12]
   36824:	cmn	r0, #1
   36828:	bne	36860 <__assert_fail@plt+0x2535c>
   3682c:	b	36848 <__assert_fail@plt+0x25344>
   36830:	ldr	r0, [fp, #-16]
   36834:	add	r0, r0, #0
   36838:	movw	r1, #0
   3683c:	cmp	r1, r0
   36840:	bcc	368b0 <__assert_fail@plt+0x253ac>
   36844:	b	368c4 <__assert_fail@plt+0x253c0>
   36848:	ldr	r0, [fp, #-16]
   3684c:	sub	r0, r0, #1
   36850:	mvn	r1, #0
   36854:	cmp	r1, r0
   36858:	bcc	368b0 <__assert_fail@plt+0x253ac>
   3685c:	b	368c4 <__assert_fail@plt+0x253c0>
   36860:	ldr	r0, [fp, #-12]
   36864:	movw	r1, #0
   36868:	udiv	r0, r1, r0
   3686c:	ldr	r1, [fp, #-16]
   36870:	cmp	r0, r1
   36874:	bcc	368b0 <__assert_fail@plt+0x253ac>
   36878:	b	368c4 <__assert_fail@plt+0x253c0>
   3687c:	ldr	r2, [fp, #-16]
   36880:	mvn	r0, #0
   36884:	mov	r3, #0
   36888:	str	r0, [sp, #12]
   3688c:	ldr	r1, [sp, #12]
   36890:	bl	37224 <__assert_fail@plt+0x25d20>
   36894:	ldr	r2, [fp, #-12]
   36898:	subs	r0, r0, r2
   3689c:	sbcs	r1, r1, #0
   368a0:	str	r0, [sp, #8]
   368a4:	str	r1, [sp, #4]
   368a8:	bcs	368c4 <__assert_fail@plt+0x253c0>
   368ac:	b	368b0 <__assert_fail@plt+0x253ac>
   368b0:	ldr	r0, [fp, #-12]
   368b4:	ldr	r1, [fp, #-16]
   368b8:	mul	r0, r0, r1
   368bc:	str	r0, [fp, #-20]	; 0xffffffec
   368c0:	b	368d8 <__assert_fail@plt+0x253d4>
   368c4:	ldr	r0, [fp, #-12]
   368c8:	ldr	r1, [fp, #-16]
   368cc:	mul	r0, r0, r1
   368d0:	str	r0, [fp, #-20]	; 0xffffffec
   368d4:	b	368f0 <__assert_fail@plt+0x253ec>
   368d8:	bl	113fc <__errno_location@plt>
   368dc:	movw	lr, #12
   368e0:	str	lr, [r0]
   368e4:	movw	r0, #0
   368e8:	str	r0, [fp, #-4]
   368ec:	b	36900 <__assert_fail@plt+0x253fc>
   368f0:	ldr	r0, [fp, #-8]
   368f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   368f8:	bl	33bb4 <__assert_fail@plt+0x226b0>
   368fc:	str	r0, [fp, #-4]
   36900:	ldr	r0, [fp, #-4]
   36904:	mov	sp, fp
   36908:	pop	{fp, pc}
   3690c:	svcvc	0x00ffffff
   36910:	andhi	r0, r0, r0
   36914:			; <UNDEFINED> instruction: 0xffff8000
   36918:	sub	sp, sp, #12
   3691c:	str	r0, [sp, #4]
   36920:	ldr	r0, [sp, #4]
   36924:	sub	r1, r0, #48	; 0x30
   36928:	cmp	r1, #10
   3692c:	str	r0, [sp]
   36930:	bcc	36960 <__assert_fail@plt+0x2545c>
   36934:	b	36938 <__assert_fail@plt+0x25434>
   36938:	ldr	r0, [sp]
   3693c:	sub	r1, r0, #65	; 0x41
   36940:	cmp	r1, #26
   36944:	bcc	36960 <__assert_fail@plt+0x2545c>
   36948:	b	3694c <__assert_fail@plt+0x25448>
   3694c:	ldr	r0, [sp]
   36950:	sub	r1, r0, #97	; 0x61
   36954:	cmp	r1, #25
   36958:	bhi	36970 <__assert_fail@plt+0x2546c>
   3695c:	b	36960 <__assert_fail@plt+0x2545c>
   36960:	movw	r0, #1
   36964:	and	r0, r0, #1
   36968:	strb	r0, [sp, #11]
   3696c:	b	3697c <__assert_fail@plt+0x25478>
   36970:	movw	r0, #0
   36974:	and	r0, r0, #1
   36978:	strb	r0, [sp, #11]
   3697c:	ldrb	r0, [sp, #11]
   36980:	and	r0, r0, #1
   36984:	add	sp, sp, #12
   36988:	bx	lr
   3698c:	sub	sp, sp, #12
   36990:	str	r0, [sp, #4]
   36994:	ldr	r0, [sp, #4]
   36998:	sub	r1, r0, #65	; 0x41
   3699c:	cmp	r1, #26
   369a0:	str	r0, [sp]
   369a4:	bcc	369c0 <__assert_fail@plt+0x254bc>
   369a8:	b	369ac <__assert_fail@plt+0x254a8>
   369ac:	ldr	r0, [sp]
   369b0:	sub	r1, r0, #97	; 0x61
   369b4:	cmp	r1, #25
   369b8:	bhi	369d0 <__assert_fail@plt+0x254cc>
   369bc:	b	369c0 <__assert_fail@plt+0x254bc>
   369c0:	movw	r0, #1
   369c4:	and	r0, r0, #1
   369c8:	strb	r0, [sp, #11]
   369cc:	b	369dc <__assert_fail@plt+0x254d8>
   369d0:	movw	r0, #0
   369d4:	and	r0, r0, #1
   369d8:	strb	r0, [sp, #11]
   369dc:	ldrb	r0, [sp, #11]
   369e0:	and	r0, r0, #1
   369e4:	add	sp, sp, #12
   369e8:	bx	lr
   369ec:	sub	sp, sp, #8
   369f0:	str	r0, [sp]
   369f4:	ldr	r0, [sp]
   369f8:	cmp	r0, #127	; 0x7f
   369fc:	bhi	36a14 <__assert_fail@plt+0x25510>
   36a00:	b	36a04 <__assert_fail@plt+0x25500>
   36a04:	movw	r0, #1
   36a08:	and	r0, r0, #1
   36a0c:	strb	r0, [sp, #7]
   36a10:	b	36a20 <__assert_fail@plt+0x2551c>
   36a14:	movw	r0, #0
   36a18:	and	r0, r0, #1
   36a1c:	strb	r0, [sp, #7]
   36a20:	ldrb	r0, [sp, #7]
   36a24:	and	r0, r0, #1
   36a28:	add	sp, sp, #8
   36a2c:	bx	lr
   36a30:	sub	sp, sp, #8
   36a34:	str	r0, [sp, #4]
   36a38:	ldr	r0, [sp, #4]
   36a3c:	cmp	r0, #32
   36a40:	movw	r0, #1
   36a44:	str	r0, [sp]
   36a48:	beq	36a60 <__assert_fail@plt+0x2555c>
   36a4c:	ldr	r0, [sp, #4]
   36a50:	cmp	r0, #9
   36a54:	movw	r0, #0
   36a58:	moveq	r0, #1
   36a5c:	str	r0, [sp]
   36a60:	ldr	r0, [sp]
   36a64:	and	r0, r0, #1
   36a68:	add	sp, sp, #8
   36a6c:	bx	lr
   36a70:	sub	sp, sp, #12
   36a74:	str	r0, [sp, #4]
   36a78:	ldr	r0, [sp, #4]
   36a7c:	cmp	r0, #32
   36a80:	str	r0, [sp]
   36a84:	bcc	36a9c <__assert_fail@plt+0x25598>
   36a88:	b	36a8c <__assert_fail@plt+0x25588>
   36a8c:	ldr	r0, [sp]
   36a90:	cmp	r0, #127	; 0x7f
   36a94:	bne	36aac <__assert_fail@plt+0x255a8>
   36a98:	b	36a9c <__assert_fail@plt+0x25598>
   36a9c:	movw	r0, #1
   36aa0:	and	r0, r0, #1
   36aa4:	strb	r0, [sp, #11]
   36aa8:	b	36ab8 <__assert_fail@plt+0x255b4>
   36aac:	movw	r0, #0
   36ab0:	and	r0, r0, #1
   36ab4:	strb	r0, [sp, #11]
   36ab8:	ldrb	r0, [sp, #11]
   36abc:	and	r0, r0, #1
   36ac0:	add	sp, sp, #12
   36ac4:	bx	lr
   36ac8:	sub	sp, sp, #8
   36acc:	str	r0, [sp]
   36ad0:	ldr	r0, [sp]
   36ad4:	sub	r0, r0, #48	; 0x30
   36ad8:	cmp	r0, #9
   36adc:	bhi	36af4 <__assert_fail@plt+0x255f0>
   36ae0:	b	36ae4 <__assert_fail@plt+0x255e0>
   36ae4:	movw	r0, #1
   36ae8:	and	r0, r0, #1
   36aec:	strb	r0, [sp, #7]
   36af0:	b	36b00 <__assert_fail@plt+0x255fc>
   36af4:	movw	r0, #0
   36af8:	and	r0, r0, #1
   36afc:	strb	r0, [sp, #7]
   36b00:	ldrb	r0, [sp, #7]
   36b04:	and	r0, r0, #1
   36b08:	add	sp, sp, #8
   36b0c:	bx	lr
   36b10:	sub	sp, sp, #8
   36b14:	str	r0, [sp]
   36b18:	ldr	r0, [sp]
   36b1c:	sub	r0, r0, #33	; 0x21
   36b20:	cmp	r0, #93	; 0x5d
   36b24:	bhi	36b3c <__assert_fail@plt+0x25638>
   36b28:	b	36b2c <__assert_fail@plt+0x25628>
   36b2c:	movw	r0, #1
   36b30:	and	r0, r0, #1
   36b34:	strb	r0, [sp, #7]
   36b38:	b	36b48 <__assert_fail@plt+0x25644>
   36b3c:	movw	r0, #0
   36b40:	and	r0, r0, #1
   36b44:	strb	r0, [sp, #7]
   36b48:	ldrb	r0, [sp, #7]
   36b4c:	and	r0, r0, #1
   36b50:	add	sp, sp, #8
   36b54:	bx	lr
   36b58:	sub	sp, sp, #8
   36b5c:	str	r0, [sp]
   36b60:	ldr	r0, [sp]
   36b64:	sub	r0, r0, #97	; 0x61
   36b68:	cmp	r0, #25
   36b6c:	bhi	36b84 <__assert_fail@plt+0x25680>
   36b70:	b	36b74 <__assert_fail@plt+0x25670>
   36b74:	movw	r0, #1
   36b78:	and	r0, r0, #1
   36b7c:	strb	r0, [sp, #7]
   36b80:	b	36b90 <__assert_fail@plt+0x2568c>
   36b84:	movw	r0, #0
   36b88:	and	r0, r0, #1
   36b8c:	strb	r0, [sp, #7]
   36b90:	ldrb	r0, [sp, #7]
   36b94:	and	r0, r0, #1
   36b98:	add	sp, sp, #8
   36b9c:	bx	lr
   36ba0:	sub	sp, sp, #8
   36ba4:	str	r0, [sp]
   36ba8:	ldr	r0, [sp]
   36bac:	sub	r0, r0, #32
   36bb0:	cmp	r0, #94	; 0x5e
   36bb4:	bhi	36bcc <__assert_fail@plt+0x256c8>
   36bb8:	b	36bbc <__assert_fail@plt+0x256b8>
   36bbc:	movw	r0, #1
   36bc0:	and	r0, r0, #1
   36bc4:	strb	r0, [sp, #7]
   36bc8:	b	36bd8 <__assert_fail@plt+0x256d4>
   36bcc:	movw	r0, #0
   36bd0:	and	r0, r0, #1
   36bd4:	strb	r0, [sp, #7]
   36bd8:	ldrb	r0, [sp, #7]
   36bdc:	and	r0, r0, #1
   36be0:	add	sp, sp, #8
   36be4:	bx	lr
   36be8:	sub	sp, sp, #12
   36bec:	str	r0, [sp, #4]
   36bf0:	ldr	r0, [sp, #4]
   36bf4:	sub	r0, r0, #33	; 0x21
   36bf8:	cmp	r0, #93	; 0x5d
   36bfc:	str	r0, [sp]
   36c00:	bhi	36d9c <__assert_fail@plt+0x25898>
   36c04:	add	r0, pc, #8
   36c08:	ldr	r1, [sp]
   36c0c:	ldr	r0, [r0, r1, lsl #2]
   36c10:	mov	pc, r0
   36c14:	andeq	r6, r3, ip, lsl #27
   36c18:	andeq	r6, r3, ip, lsl #27
   36c1c:	andeq	r6, r3, ip, lsl #27
   36c20:	andeq	r6, r3, ip, lsl #27
   36c24:	andeq	r6, r3, ip, lsl #27
   36c28:	andeq	r6, r3, ip, lsl #27
   36c2c:	andeq	r6, r3, ip, lsl #27
   36c30:	andeq	r6, r3, ip, lsl #27
   36c34:	andeq	r6, r3, ip, lsl #27
   36c38:	andeq	r6, r3, ip, lsl #27
   36c3c:	andeq	r6, r3, ip, lsl #27
   36c40:	andeq	r6, r3, ip, lsl #27
   36c44:	andeq	r6, r3, ip, lsl #27
   36c48:	andeq	r6, r3, ip, lsl #27
   36c4c:	andeq	r6, r3, ip, lsl #27
   36c50:	muleq	r3, ip, sp
   36c54:	muleq	r3, ip, sp
   36c58:	muleq	r3, ip, sp
   36c5c:	muleq	r3, ip, sp
   36c60:	muleq	r3, ip, sp
   36c64:	muleq	r3, ip, sp
   36c68:	muleq	r3, ip, sp
   36c6c:	muleq	r3, ip, sp
   36c70:	muleq	r3, ip, sp
   36c74:	muleq	r3, ip, sp
   36c78:	andeq	r6, r3, ip, lsl #27
   36c7c:	andeq	r6, r3, ip, lsl #27
   36c80:	andeq	r6, r3, ip, lsl #27
   36c84:	andeq	r6, r3, ip, lsl #27
   36c88:	andeq	r6, r3, ip, lsl #27
   36c8c:	andeq	r6, r3, ip, lsl #27
   36c90:	andeq	r6, r3, ip, lsl #27
   36c94:	muleq	r3, ip, sp
   36c98:	muleq	r3, ip, sp
   36c9c:	muleq	r3, ip, sp
   36ca0:	muleq	r3, ip, sp
   36ca4:	muleq	r3, ip, sp
   36ca8:	muleq	r3, ip, sp
   36cac:	muleq	r3, ip, sp
   36cb0:	muleq	r3, ip, sp
   36cb4:	muleq	r3, ip, sp
   36cb8:	muleq	r3, ip, sp
   36cbc:	muleq	r3, ip, sp
   36cc0:	muleq	r3, ip, sp
   36cc4:	muleq	r3, ip, sp
   36cc8:	muleq	r3, ip, sp
   36ccc:	muleq	r3, ip, sp
   36cd0:	muleq	r3, ip, sp
   36cd4:	muleq	r3, ip, sp
   36cd8:	muleq	r3, ip, sp
   36cdc:	muleq	r3, ip, sp
   36ce0:	muleq	r3, ip, sp
   36ce4:	muleq	r3, ip, sp
   36ce8:	muleq	r3, ip, sp
   36cec:	muleq	r3, ip, sp
   36cf0:	muleq	r3, ip, sp
   36cf4:	muleq	r3, ip, sp
   36cf8:	muleq	r3, ip, sp
   36cfc:	andeq	r6, r3, ip, lsl #27
   36d00:	andeq	r6, r3, ip, lsl #27
   36d04:	andeq	r6, r3, ip, lsl #27
   36d08:	andeq	r6, r3, ip, lsl #27
   36d0c:	andeq	r6, r3, ip, lsl #27
   36d10:	andeq	r6, r3, ip, lsl #27
   36d14:	muleq	r3, ip, sp
   36d18:	muleq	r3, ip, sp
   36d1c:	muleq	r3, ip, sp
   36d20:	muleq	r3, ip, sp
   36d24:	muleq	r3, ip, sp
   36d28:	muleq	r3, ip, sp
   36d2c:	muleq	r3, ip, sp
   36d30:	muleq	r3, ip, sp
   36d34:	muleq	r3, ip, sp
   36d38:	muleq	r3, ip, sp
   36d3c:	muleq	r3, ip, sp
   36d40:	muleq	r3, ip, sp
   36d44:	muleq	r3, ip, sp
   36d48:	muleq	r3, ip, sp
   36d4c:	muleq	r3, ip, sp
   36d50:	muleq	r3, ip, sp
   36d54:	muleq	r3, ip, sp
   36d58:	muleq	r3, ip, sp
   36d5c:	muleq	r3, ip, sp
   36d60:	muleq	r3, ip, sp
   36d64:	muleq	r3, ip, sp
   36d68:	muleq	r3, ip, sp
   36d6c:	muleq	r3, ip, sp
   36d70:	muleq	r3, ip, sp
   36d74:	muleq	r3, ip, sp
   36d78:	muleq	r3, ip, sp
   36d7c:	andeq	r6, r3, ip, lsl #27
   36d80:	andeq	r6, r3, ip, lsl #27
   36d84:	andeq	r6, r3, ip, lsl #27
   36d88:	andeq	r6, r3, ip, lsl #27
   36d8c:	movw	r0, #1
   36d90:	and	r0, r0, #1
   36d94:	strb	r0, [sp, #11]
   36d98:	b	36da8 <__assert_fail@plt+0x258a4>
   36d9c:	movw	r0, #0
   36da0:	and	r0, r0, #1
   36da4:	strb	r0, [sp, #11]
   36da8:	ldrb	r0, [sp, #11]
   36dac:	and	r0, r0, #1
   36db0:	add	sp, sp, #12
   36db4:	bx	lr
   36db8:	sub	sp, sp, #12
   36dbc:	str	r0, [sp, #4]
   36dc0:	ldr	r0, [sp, #4]
   36dc4:	sub	r1, r0, #9
   36dc8:	cmp	r1, #5
   36dcc:	str	r0, [sp]
   36dd0:	bcc	36de8 <__assert_fail@plt+0x258e4>
   36dd4:	b	36dd8 <__assert_fail@plt+0x258d4>
   36dd8:	ldr	r0, [sp]
   36ddc:	cmp	r0, #32
   36de0:	bne	36df8 <__assert_fail@plt+0x258f4>
   36de4:	b	36de8 <__assert_fail@plt+0x258e4>
   36de8:	movw	r0, #1
   36dec:	and	r0, r0, #1
   36df0:	strb	r0, [sp, #11]
   36df4:	b	36e04 <__assert_fail@plt+0x25900>
   36df8:	movw	r0, #0
   36dfc:	and	r0, r0, #1
   36e00:	strb	r0, [sp, #11]
   36e04:	ldrb	r0, [sp, #11]
   36e08:	and	r0, r0, #1
   36e0c:	add	sp, sp, #12
   36e10:	bx	lr
   36e14:	sub	sp, sp, #8
   36e18:	str	r0, [sp]
   36e1c:	ldr	r0, [sp]
   36e20:	sub	r0, r0, #65	; 0x41
   36e24:	cmp	r0, #25
   36e28:	bhi	36e40 <__assert_fail@plt+0x2593c>
   36e2c:	b	36e30 <__assert_fail@plt+0x2592c>
   36e30:	movw	r0, #1
   36e34:	and	r0, r0, #1
   36e38:	strb	r0, [sp, #7]
   36e3c:	b	36e4c <__assert_fail@plt+0x25948>
   36e40:	movw	r0, #0
   36e44:	and	r0, r0, #1
   36e48:	strb	r0, [sp, #7]
   36e4c:	ldrb	r0, [sp, #7]
   36e50:	and	r0, r0, #1
   36e54:	add	sp, sp, #8
   36e58:	bx	lr
   36e5c:	sub	sp, sp, #12
   36e60:	str	r0, [sp, #4]
   36e64:	ldr	r0, [sp, #4]
   36e68:	sub	r1, r0, #48	; 0x30
   36e6c:	cmp	r1, #10
   36e70:	str	r0, [sp]
   36e74:	bcc	36ea4 <__assert_fail@plt+0x259a0>
   36e78:	b	36e7c <__assert_fail@plt+0x25978>
   36e7c:	ldr	r0, [sp]
   36e80:	sub	r1, r0, #65	; 0x41
   36e84:	cmp	r1, #6
   36e88:	bcc	36ea4 <__assert_fail@plt+0x259a0>
   36e8c:	b	36e90 <__assert_fail@plt+0x2598c>
   36e90:	ldr	r0, [sp]
   36e94:	sub	r1, r0, #97	; 0x61
   36e98:	cmp	r1, #5
   36e9c:	bhi	36eb4 <__assert_fail@plt+0x259b0>
   36ea0:	b	36ea4 <__assert_fail@plt+0x259a0>
   36ea4:	movw	r0, #1
   36ea8:	and	r0, r0, #1
   36eac:	strb	r0, [sp, #11]
   36eb0:	b	36ec0 <__assert_fail@plt+0x259bc>
   36eb4:	movw	r0, #0
   36eb8:	and	r0, r0, #1
   36ebc:	strb	r0, [sp, #11]
   36ec0:	ldrb	r0, [sp, #11]
   36ec4:	and	r0, r0, #1
   36ec8:	add	sp, sp, #12
   36ecc:	bx	lr
   36ed0:	sub	sp, sp, #8
   36ed4:	str	r0, [sp]
   36ed8:	ldr	r0, [sp]
   36edc:	sub	r0, r0, #65	; 0x41
   36ee0:	cmp	r0, #25
   36ee4:	bhi	36f00 <__assert_fail@plt+0x259fc>
   36ee8:	b	36eec <__assert_fail@plt+0x259e8>
   36eec:	ldr	r0, [sp]
   36ef0:	sub	r0, r0, #65	; 0x41
   36ef4:	add	r0, r0, #97	; 0x61
   36ef8:	str	r0, [sp, #4]
   36efc:	b	36f08 <__assert_fail@plt+0x25a04>
   36f00:	ldr	r0, [sp]
   36f04:	str	r0, [sp, #4]
   36f08:	ldr	r0, [sp, #4]
   36f0c:	add	sp, sp, #8
   36f10:	bx	lr
   36f14:	sub	sp, sp, #8
   36f18:	str	r0, [sp]
   36f1c:	ldr	r0, [sp]
   36f20:	sub	r0, r0, #97	; 0x61
   36f24:	cmp	r0, #25
   36f28:	bhi	36f44 <__assert_fail@plt+0x25a40>
   36f2c:	b	36f30 <__assert_fail@plt+0x25a2c>
   36f30:	ldr	r0, [sp]
   36f34:	sub	r0, r0, #97	; 0x61
   36f38:	add	r0, r0, #65	; 0x41
   36f3c:	str	r0, [sp, #4]
   36f40:	b	36f4c <__assert_fail@plt+0x25a48>
   36f44:	ldr	r0, [sp]
   36f48:	str	r0, [sp, #4]
   36f4c:	ldr	r0, [sp, #4]
   36f50:	add	sp, sp, #8
   36f54:	bx	lr
   36f58:	push	{r4, r5, fp, lr}
   36f5c:	add	fp, sp, #8
   36f60:	sub	sp, sp, #272	; 0x110
   36f64:	add	r1, sp, #7
   36f68:	str	r0, [fp, #-16]
   36f6c:	ldr	r0, [fp, #-16]
   36f70:	movw	r2, #257	; 0x101
   36f74:	bl	36ff4 <__assert_fail@plt+0x25af0>
   36f78:	cmp	r0, #0
   36f7c:	beq	36f90 <__assert_fail@plt+0x25a8c>
   36f80:	movw	r0, #0
   36f84:	and	r0, r0, #1
   36f88:	strb	r0, [fp, #-9]
   36f8c:	b	36fe4 <__assert_fail@plt+0x25ae0>
   36f90:	add	r0, sp, #7
   36f94:	movw	r1, #34594	; 0x8722
   36f98:	movt	r1, #3
   36f9c:	bl	11234 <strcmp@plt>
   36fa0:	cmp	r0, #0
   36fa4:	movw	r0, #1
   36fa8:	str	r0, [sp]
   36fac:	beq	36fd0 <__assert_fail@plt+0x25acc>
   36fb0:	add	r0, sp, #7
   36fb4:	movw	r1, #34596	; 0x8724
   36fb8:	movt	r1, #3
   36fbc:	bl	11234 <strcmp@plt>
   36fc0:	cmp	r0, #0
   36fc4:	movw	r0, #0
   36fc8:	moveq	r0, #1
   36fcc:	str	r0, [sp]
   36fd0:	ldr	r0, [sp]
   36fd4:	mvn	r1, #0
   36fd8:	eor	r0, r0, r1
   36fdc:	and	r0, r0, #1
   36fe0:	strb	r0, [fp, #-9]
   36fe4:	ldrb	r0, [fp, #-9]
   36fe8:	and	r0, r0, #1
   36fec:	sub	sp, fp, #8
   36ff0:	pop	{r4, r5, fp, pc}
   36ff4:	push	{fp, lr}
   36ff8:	mov	fp, sp
   36ffc:	sub	sp, sp, #16
   37000:	str	r0, [fp, #-4]
   37004:	str	r1, [sp, #8]
   37008:	str	r2, [sp, #4]
   3700c:	ldr	r0, [fp, #-4]
   37010:	ldr	r1, [sp, #8]
   37014:	ldr	r2, [sp, #4]
   37018:	bl	37024 <__assert_fail@plt+0x25b20>
   3701c:	mov	sp, fp
   37020:	pop	{fp, pc}
   37024:	push	{fp, lr}
   37028:	mov	fp, sp
   3702c:	sub	sp, sp, #24
   37030:	str	r0, [fp, #-8]
   37034:	str	r1, [sp, #12]
   37038:	str	r2, [sp, #8]
   3703c:	ldr	r0, [fp, #-8]
   37040:	bl	37124 <__assert_fail@plt+0x25c20>
   37044:	str	r0, [sp, #4]
   37048:	ldr	r0, [sp, #4]
   3704c:	movw	r1, #0
   37050:	cmp	r0, r1
   37054:	bne	3707c <__assert_fail@plt+0x25b78>
   37058:	ldr	r0, [sp, #8]
   3705c:	cmp	r0, #0
   37060:	bls	37070 <__assert_fail@plt+0x25b6c>
   37064:	ldr	r0, [sp, #12]
   37068:	movw	r1, #0
   3706c:	strb	r1, [r0]
   37070:	movw	r0, #22
   37074:	str	r0, [fp, #-4]
   37078:	b	370f8 <__assert_fail@plt+0x25bf4>
   3707c:	ldr	r0, [sp, #4]
   37080:	bl	113d8 <strlen@plt>
   37084:	str	r0, [sp]
   37088:	ldr	r0, [sp]
   3708c:	ldr	lr, [sp, #8]
   37090:	cmp	r0, lr
   37094:	bcs	370b8 <__assert_fail@plt+0x25bb4>
   37098:	ldr	r0, [sp, #12]
   3709c:	ldr	r1, [sp, #4]
   370a0:	ldr	r2, [sp]
   370a4:	add	r2, r2, #1
   370a8:	bl	112a0 <memcpy@plt>
   370ac:	movw	r0, #0
   370b0:	str	r0, [fp, #-4]
   370b4:	b	370f8 <__assert_fail@plt+0x25bf4>
   370b8:	ldr	r0, [sp, #8]
   370bc:	cmp	r0, #0
   370c0:	bls	370f0 <__assert_fail@plt+0x25bec>
   370c4:	ldr	r0, [sp, #12]
   370c8:	ldr	r1, [sp, #4]
   370cc:	ldr	r2, [sp, #8]
   370d0:	sub	r2, r2, #1
   370d4:	bl	112a0 <memcpy@plt>
   370d8:	ldr	r0, [sp, #12]
   370dc:	ldr	r1, [sp, #8]
   370e0:	sub	r1, r1, #1
   370e4:	add	r0, r0, r1
   370e8:	movw	r1, #0
   370ec:	strb	r1, [r0]
   370f0:	movw	r0, #34	; 0x22
   370f4:	str	r0, [fp, #-4]
   370f8:	ldr	r0, [fp, #-4]
   370fc:	mov	sp, fp
   37100:	pop	{fp, pc}
   37104:	push	{fp, lr}
   37108:	mov	fp, sp
   3710c:	sub	sp, sp, #8
   37110:	str	r0, [sp, #4]
   37114:	ldr	r0, [sp, #4]
   37118:	bl	37124 <__assert_fail@plt+0x25c20>
   3711c:	mov	sp, fp
   37120:	pop	{fp, pc}
   37124:	push	{fp, lr}
   37128:	mov	fp, sp
   3712c:	sub	sp, sp, #8
   37130:	str	r0, [sp, #4]
   37134:	ldr	r0, [sp, #4]
   37138:	movw	r1, #0
   3713c:	bl	11468 <setlocale@plt>
   37140:	str	r0, [sp]
   37144:	ldr	r0, [sp]
   37148:	mov	sp, fp
   3714c:	pop	{fp, pc}
   37150:	cmp	r3, #0
   37154:	cmpeq	r2, #0
   37158:	bne	3717c <__assert_fail@plt+0x25c78>
   3715c:	cmp	r1, #0
   37160:	movlt	r1, #-2147483648	; 0x80000000
   37164:	movlt	r0, #0
   37168:	blt	37178 <__assert_fail@plt+0x25c74>
   3716c:	cmpeq	r0, #0
   37170:	mvnne	r1, #-2147483648	; 0x80000000
   37174:	mvnne	r0, #0
   37178:	b	37260 <__assert_fail@plt+0x25d5c>
   3717c:	sub	sp, sp, #8
   37180:	push	{sp, lr}
   37184:	cmp	r1, #0
   37188:	blt	371a8 <__assert_fail@plt+0x25ca4>
   3718c:	cmp	r3, #0
   37190:	blt	371dc <__assert_fail@plt+0x25cd8>
   37194:	bl	37270 <__assert_fail@plt+0x25d6c>
   37198:	ldr	lr, [sp, #4]
   3719c:	add	sp, sp, #8
   371a0:	pop	{r2, r3}
   371a4:	bx	lr
   371a8:	rsbs	r0, r0, #0
   371ac:	sbc	r1, r1, r1, lsl #1
   371b0:	cmp	r3, #0
   371b4:	blt	37200 <__assert_fail@plt+0x25cfc>
   371b8:	bl	37270 <__assert_fail@plt+0x25d6c>
   371bc:	ldr	lr, [sp, #4]
   371c0:	add	sp, sp, #8
   371c4:	pop	{r2, r3}
   371c8:	rsbs	r0, r0, #0
   371cc:	sbc	r1, r1, r1, lsl #1
   371d0:	rsbs	r2, r2, #0
   371d4:	sbc	r3, r3, r3, lsl #1
   371d8:	bx	lr
   371dc:	rsbs	r2, r2, #0
   371e0:	sbc	r3, r3, r3, lsl #1
   371e4:	bl	37270 <__assert_fail@plt+0x25d6c>
   371e8:	ldr	lr, [sp, #4]
   371ec:	add	sp, sp, #8
   371f0:	pop	{r2, r3}
   371f4:	rsbs	r0, r0, #0
   371f8:	sbc	r1, r1, r1, lsl #1
   371fc:	bx	lr
   37200:	rsbs	r2, r2, #0
   37204:	sbc	r3, r3, r3, lsl #1
   37208:	bl	37270 <__assert_fail@plt+0x25d6c>
   3720c:	ldr	lr, [sp, #4]
   37210:	add	sp, sp, #8
   37214:	pop	{r2, r3}
   37218:	rsbs	r2, r2, #0
   3721c:	sbc	r3, r3, r3, lsl #1
   37220:	bx	lr
   37224:	cmp	r3, #0
   37228:	cmpeq	r2, #0
   3722c:	bne	37244 <__assert_fail@plt+0x25d40>
   37230:	cmp	r1, #0
   37234:	cmpeq	r0, #0
   37238:	mvnne	r1, #0
   3723c:	mvnne	r0, #0
   37240:	b	37260 <__assert_fail@plt+0x25d5c>
   37244:	sub	sp, sp, #8
   37248:	push	{sp, lr}
   3724c:	bl	37270 <__assert_fail@plt+0x25d6c>
   37250:	ldr	lr, [sp, #4]
   37254:	add	sp, sp, #8
   37258:	pop	{r2, r3}
   3725c:	bx	lr
   37260:	push	{r1, lr}
   37264:	mov	r0, #8
   37268:	bl	11210 <raise@plt>
   3726c:	pop	{r1, pc}
   37270:	cmp	r1, r3
   37274:	cmpeq	r0, r2
   37278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3727c:	mov	r4, r0
   37280:	movcc	r0, #0
   37284:	mov	r5, r1
   37288:	ldr	lr, [sp, #36]	; 0x24
   3728c:	movcc	r1, r0
   37290:	bcc	3738c <__assert_fail@plt+0x25e88>
   37294:	cmp	r3, #0
   37298:	clzeq	ip, r2
   3729c:	clzne	ip, r3
   372a0:	addeq	ip, ip, #32
   372a4:	cmp	r5, #0
   372a8:	clzeq	r1, r4
   372ac:	addeq	r1, r1, #32
   372b0:	clzne	r1, r5
   372b4:	sub	ip, ip, r1
   372b8:	sub	sl, ip, #32
   372bc:	lsl	r9, r3, ip
   372c0:	rsb	fp, ip, #32
   372c4:	orr	r9, r9, r2, lsl sl
   372c8:	orr	r9, r9, r2, lsr fp
   372cc:	lsl	r8, r2, ip
   372d0:	cmp	r5, r9
   372d4:	cmpeq	r4, r8
   372d8:	movcc	r0, #0
   372dc:	movcc	r1, r0
   372e0:	bcc	372fc <__assert_fail@plt+0x25df8>
   372e4:	mov	r0, #1
   372e8:	subs	r4, r4, r8
   372ec:	lsl	r1, r0, sl
   372f0:	orr	r1, r1, r0, lsr fp
   372f4:	lsl	r0, r0, ip
   372f8:	sbc	r5, r5, r9
   372fc:	cmp	ip, #0
   37300:	beq	3738c <__assert_fail@plt+0x25e88>
   37304:	lsr	r6, r8, #1
   37308:	orr	r6, r6, r9, lsl #31
   3730c:	lsr	r7, r9, #1
   37310:	mov	r2, ip
   37314:	b	37338 <__assert_fail@plt+0x25e34>
   37318:	subs	r3, r4, r6
   3731c:	sbc	r8, r5, r7
   37320:	adds	r3, r3, r3
   37324:	adc	r8, r8, r8
   37328:	adds	r4, r3, #1
   3732c:	adc	r5, r8, #0
   37330:	subs	r2, r2, #1
   37334:	beq	37354 <__assert_fail@plt+0x25e50>
   37338:	cmp	r5, r7
   3733c:	cmpeq	r4, r6
   37340:	bcs	37318 <__assert_fail@plt+0x25e14>
   37344:	adds	r4, r4, r4
   37348:	adc	r5, r5, r5
   3734c:	subs	r2, r2, #1
   37350:	bne	37338 <__assert_fail@plt+0x25e34>
   37354:	lsr	r3, r4, ip
   37358:	orr	r3, r3, r5, lsl fp
   3735c:	lsr	r2, r5, ip
   37360:	orr	r3, r3, r5, lsr sl
   37364:	adds	r0, r0, r4
   37368:	mov	r4, r3
   3736c:	lsl	r3, r2, ip
   37370:	orr	r3, r3, r4, lsl sl
   37374:	lsl	ip, r4, ip
   37378:	orr	r3, r3, r4, lsr fp
   3737c:	adc	r1, r1, r5
   37380:	subs	r0, r0, ip
   37384:	mov	r5, r2
   37388:	sbc	r1, r1, r3
   3738c:	cmp	lr, #0
   37390:	strdne	r4, [lr]
   37394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37398:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3739c:	mov	r7, r0
   373a0:	ldr	r6, [pc, #72]	; 373f0 <__assert_fail@plt+0x25eec>
   373a4:	ldr	r5, [pc, #72]	; 373f4 <__assert_fail@plt+0x25ef0>
   373a8:	add	r6, pc, r6
   373ac:	add	r5, pc, r5
   373b0:	sub	r6, r6, r5
   373b4:	mov	r8, r1
   373b8:	mov	r9, r2
   373bc:	bl	111c0 <pthread_mutex_unlock@plt-0x20>
   373c0:	asrs	r6, r6, #2
   373c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   373c8:	mov	r4, #0
   373cc:	add	r4, r4, #1
   373d0:	ldr	r3, [r5], #4
   373d4:	mov	r2, r9
   373d8:	mov	r1, r8
   373dc:	mov	r0, r7
   373e0:	blx	r3
   373e4:	cmp	r6, r4
   373e8:	bne	373cc <__assert_fail@plt+0x25ec8>
   373ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   373f0:	andeq	r1, r1, ip, asr fp
   373f4:	andeq	r1, r1, r4, asr fp
   373f8:	bx	lr
   373fc:	ldr	r3, [pc, #12]	; 37410 <__assert_fail@plt+0x25f0c>
   37400:	mov	r1, #0
   37404:	add	r3, pc, r3
   37408:	ldr	r2, [r3]
   3740c:	b	11414 <__cxa_atexit@plt>
   37410:	andeq	r1, r1, r8, lsl sp

Disassembly of section .fini:

00037414 <.fini>:
   37414:	push	{r3, lr}
   37418:	pop	{r3, pc}
