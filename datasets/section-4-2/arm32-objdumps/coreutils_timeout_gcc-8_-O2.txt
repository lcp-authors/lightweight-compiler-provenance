
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001101c <.init>:
   1101c:	push	{r3, lr}
   11020:	bl	119d8 <__snprintf_chk@plt+0x66c>
   11024:	pop	{r3, pc}

Disassembly of section .plt:

00011028 <calloc@plt-0x14>:
   11028:	push	{lr}		; (str lr, [sp, #-4]!)
   1102c:	ldr	lr, [pc, #4]	; 11038 <calloc@plt-0x4>
   11030:	add	lr, pc, lr
   11034:	ldr	pc, [lr, #8]!
   11038:	andeq	r6, r1, r8, asr #31

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #4040]!	; 0xfc8

00011048 <fputs_unlocked@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #4032]!	; 0xfc0

00011054 <raise@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011060 <strcmp@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #4016]!	; 0xfb0

0001106c <strtol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #4008]!	; 0xfa8

00011078 <fflush@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #4000]!	; 0xfa0

00011084 <sigprocmask@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #3992]!	; 0xf98

00011090 <free@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #3984]!	; 0xf90

0001109c <_exit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #3976]!	; 0xf88

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #3968]!	; 0xf80

000110b4 <execvp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #90112	; 0x16000
   110bc:	ldr	pc, [ip, #3960]!	; 0xf78

000110c0 <mbsinit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #90112	; 0x16000
   110c8:	ldr	pc, [ip, #3952]!	; 0xf70

000110cc <signal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #90112	; 0x16000
   110d4:	ldr	pc, [ip, #3944]!	; 0xf68

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #90112	; 0x16000
   110e0:	ldr	pc, [ip, #3936]!	; 0xf60

000110e4 <fputc_unlocked@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #90112	; 0x16000
   110ec:	ldr	pc, [ip, #3928]!	; 0xf58

000110f0 <dcgettext@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #90112	; 0x16000
   110f8:	ldr	pc, [ip, #3920]!	; 0xf50

000110fc <alarm@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #90112	; 0x16000
   11104:	ldr	pc, [ip, #3912]!	; 0xf48

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #90112	; 0x16000
   11110:	ldr	pc, [ip, #3904]!	; 0xf40

00011114 <timer_create@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #90112	; 0x16000
   1111c:	ldr	pc, [ip, #3896]!	; 0xf38

00011120 <textdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #90112	; 0x16000
   11128:	ldr	pc, [ip, #3888]!	; 0xf30

0001112c <iswprint@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #90112	; 0x16000
   11134:	ldr	pc, [ip, #3880]!	; 0xf28

00011138 <timer_settime@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #90112	; 0x16000
   11140:	ldr	pc, [ip, #3872]!	; 0xf20

00011144 <sigaction@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #90112	; 0x16000
   1114c:	ldr	pc, [ip, #3864]!	; 0xf18

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #90112	; 0x16000
   11158:	ldr	pc, [ip, #3856]!	; 0xf10

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #90112	; 0x16000
   11164:	ldr	pc, [ip, #3848]!	; 0xf08

00011168 <waitpid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #90112	; 0x16000
   11170:	ldr	pc, [ip, #3840]!	; 0xf00

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #90112	; 0x16000
   1117c:	ldr	pc, [ip, #3832]!	; 0xef8

00011180 <strcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3824]!	; 0xef0

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3816]!	; 0xee8

00011198 <mbrtowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3808]!	; 0xee0

000111a4 <error@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3800]!	; 0xed8

000111b0 <timer_delete@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #90112	; 0x16000
   111b8:	ldr	pc, [ip, #3792]!	; 0xed0

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #90112	; 0x16000
   111c4:	ldr	pc, [ip, #3784]!	; 0xec8

000111c8 <sigaddset@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #90112	; 0x16000
   111d0:	ldr	pc, [ip, #3776]!	; 0xec0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #90112	; 0x16000
   111dc:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #90112	; 0x16000
   111e8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #90112	; 0x16000
   111f4:	ldr	pc, [ip, #3752]!	; 0xea8

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #90112	; 0x16000
   11200:	ldr	pc, [ip, #3744]!	; 0xea0

00011204 <kill@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #90112	; 0x16000
   1120c:	ldr	pc, [ip, #3736]!	; 0xe98

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #90112	; 0x16000
   11218:	ldr	pc, [ip, #3728]!	; 0xe90

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #90112	; 0x16000
   11224:	ldr	pc, [ip, #3720]!	; 0xe88

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #90112	; 0x16000
   11230:	ldr	pc, [ip, #3712]!	; 0xe80

00011234 <__libc_current_sigrtmax@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #90112	; 0x16000
   1123c:	ldr	pc, [ip, #3704]!	; 0xe78

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #90112	; 0x16000
   11248:	ldr	pc, [ip, #3696]!	; 0xe70

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #90112	; 0x16000
   11254:	ldr	pc, [ip, #3688]!	; 0xe68

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #90112	; 0x16000
   11260:	ldr	pc, [ip, #3680]!	; 0xe60

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #90112	; 0x16000
   1126c:	ldr	pc, [ip, #3672]!	; 0xe58

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #90112	; 0x16000
   11278:	ldr	pc, [ip, #3664]!	; 0xe50

0001127c <sigsuspend@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #90112	; 0x16000
   11284:	ldr	pc, [ip, #3656]!	; 0xe48

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #90112	; 0x16000
   11290:	ldr	pc, [ip, #3648]!	; 0xe40

00011294 <prctl@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #90112	; 0x16000
   1129c:	ldr	pc, [ip, #3640]!	; 0xe38

000112a0 <strtod@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #90112	; 0x16000
   112a8:	ldr	pc, [ip, #3632]!	; 0xe30

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #90112	; 0x16000
   112b4:	ldr	pc, [ip, #3624]!	; 0xe28

000112b8 <__fprintf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #90112	; 0x16000
   112c0:	ldr	pc, [ip, #3616]!	; 0xe20

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #90112	; 0x16000
   112cc:	ldr	pc, [ip, #3608]!	; 0xe18

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #90112	; 0x16000
   112d8:	ldr	pc, [ip, #3600]!	; 0xe10

000112dc <strtod_l@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #90112	; 0x16000
   112e4:	ldr	pc, [ip, #3592]!	; 0xe08

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #90112	; 0x16000
   112f0:	ldr	pc, [ip, #3584]!	; 0xe00

000112f4 <sigemptyset@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #90112	; 0x16000
   112fc:	ldr	pc, [ip, #3576]!	; 0xdf8

00011300 <fork@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #90112	; 0x16000
   11308:	ldr	pc, [ip, #3568]!	; 0xdf0

0001130c <strrchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #90112	; 0x16000
   11314:	ldr	pc, [ip, #3560]!	; 0xde8

00011318 <nl_langinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #90112	; 0x16000
   11320:	ldr	pc, [ip, #3552]!	; 0xde0

00011324 <newlocale@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #90112	; 0x16000
   1132c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011330 <setpgid@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #90112	; 0x16000
   11338:	ldr	pc, [ip, #3536]!	; 0xdd0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #90112	; 0x16000
   11344:	ldr	pc, [ip, #3528]!	; 0xdc8

00011348 <__libc_current_sigrtmin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #90112	; 0x16000
   11350:	ldr	pc, [ip, #3520]!	; 0xdc0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #90112	; 0x16000
   1135c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #90112	; 0x16000
   11368:	ldr	pc, [ip, #3504]!	; 0xdb0

0001136c <__snprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #90112	; 0x16000
   11374:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

00011378 <.text>:
   11378:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1137c:	movw	r5, #26900	; 0x6914
   11380:	movt	r5, #1
   11384:	strd	r6, [sp, #8]
   11388:	mov	r7, r0
   1138c:	mov	r6, r1
   11390:	strd	r8, [sp, #16]
   11394:	movw	r9, #33592	; 0x8338
   11398:	movt	r9, #2
   1139c:	str	sl, [sp, #24]
   113a0:	str	lr, [sp, #28]
   113a4:	vpush	{d8}
   113a8:	sub	sp, sp, #296	; 0x128
   113ac:	ldr	r0, [r1]
   113b0:	bl	127d8 <__snprintf_chk@plt+0x146c>
   113b4:	movw	r1, #24856	; 0x6118
   113b8:	movt	r1, #1
   113bc:	ldr	r8, [pc, #1492]	; 11998 <__snprintf_chk@plt+0x62c>
   113c0:	mov	r0, #6
   113c4:	bl	112e8 <setlocale@plt>
   113c8:	movw	r1, #26860	; 0x68ec
   113cc:	movt	r1, #1
   113d0:	movw	r0, #26664	; 0x6828
   113d4:	movt	r0, #1
   113d8:	bl	1133c <bindtextdomain@plt>
   113dc:	movw	r0, #26664	; 0x6828
   113e0:	movt	r0, #1
   113e4:	bl	11120 <textdomain@plt>
   113e8:	movw	r3, #33076	; 0x8134
   113ec:	movt	r3, #2
   113f0:	mov	r2, #125	; 0x7d
   113f4:	movw	r0, #9660	; 0x25bc
   113f8:	movt	r0, #1
   113fc:	str	r2, [r3]
   11400:	bl	15f20 <__snprintf_chk@plt+0x4bb4>
   11404:	mov	r4, #0
   11408:	mov	r3, r8
   1140c:	mov	r2, r5
   11410:	mov	r1, r6
   11414:	mov	r0, r7
   11418:	str	r4, [sp]
   1141c:	bl	111f8 <getopt_long@plt>
   11420:	cmn	r0, #1
   11424:	beq	11528 <__snprintf_chk@plt+0x1bc>
   11428:	cmp	r0, #115	; 0x73
   1142c:	beq	114dc <__snprintf_chk@plt+0x170>
   11430:	ble	1145c <__snprintf_chk@plt+0xf0>
   11434:	cmp	r0, #256	; 0x100
   11438:	beq	11500 <__snprintf_chk@plt+0x194>
   1143c:	movw	r3, #257	; 0x101
   11440:	cmp	r0, r3
   11444:	bne	11484 <__snprintf_chk@plt+0x118>
   11448:	movw	r3, #33600	; 0x8340
   1144c:	movt	r3, #2
   11450:	mov	r2, #1
   11454:	strb	r2, [r3, #25]
   11458:	b	11404 <__snprintf_chk@plt+0x98>
   1145c:	cmn	r0, #2
   11460:	beq	11960 <__snprintf_chk@plt+0x5f4>
   11464:	cmp	r0, #107	; 0x6b
   11468:	bne	11494 <__snprintf_chk@plt+0x128>
   1146c:	ldr	r0, [r9]
   11470:	bl	12204 <__snprintf_chk@plt+0xe98>
   11474:	movw	r3, #33600	; 0x8340
   11478:	movt	r3, #2
   1147c:	vstr	d0, [r3, #8]
   11480:	b	11404 <__snprintf_chk@plt+0x98>
   11484:	cmp	r0, #118	; 0x76
   11488:	beq	11514 <__snprintf_chk@plt+0x1a8>
   1148c:	mov	r0, #125	; 0x7d
   11490:	bl	11e40 <__snprintf_chk@plt+0xad4>
   11494:	cmn	r0, #3
   11498:	bne	1148c <__snprintf_chk@plt+0x120>
   1149c:	movw	r2, #26884	; 0x6904
   114a0:	movt	r2, #1
   114a4:	movw	r3, #33072	; 0x8130
   114a8:	movt	r3, #2
   114ac:	movw	r0, #33588	; 0x8334
   114b0:	movt	r0, #2
   114b4:	stm	sp, {r2, r4}
   114b8:	movw	r1, #24680	; 0x6068
   114bc:	movt	r1, #1
   114c0:	ldr	r0, [r0]
   114c4:	movw	r2, #26660	; 0x6824
   114c8:	movt	r2, #1
   114cc:	ldr	r3, [r3]
   114d0:	bl	15214 <__snprintf_chk@plt+0x3ea8>
   114d4:	mov	r0, r4
   114d8:	bl	1121c <exit@plt>
   114dc:	add	r1, sp, #8
   114e0:	ldr	r0, [r9]
   114e4:	bl	12358 <__snprintf_chk@plt+0xfec>
   114e8:	movw	r3, #33068	; 0x812c
   114ec:	movt	r3, #2
   114f0:	cmn	r0, #1
   114f4:	str	r0, [r3]
   114f8:	bne	11404 <__snprintf_chk@plt+0x98>
   114fc:	b	1148c <__snprintf_chk@plt+0x120>
   11500:	movw	r3, #33600	; 0x8340
   11504:	movt	r3, #2
   11508:	mov	r2, #1
   1150c:	strb	r2, [r3, #24]
   11510:	b	11404 <__snprintf_chk@plt+0x98>
   11514:	movw	r3, #33600	; 0x8340
   11518:	movt	r3, #2
   1151c:	mov	r2, #1
   11520:	strb	r2, [r3, #16]
   11524:	b	11404 <__snprintf_chk@plt+0x98>
   11528:	movw	r5, #33576	; 0x8328
   1152c:	movt	r5, #2
   11530:	ldr	r3, [r5]
   11534:	sub	r7, r7, r3
   11538:	cmp	r7, #1
   1153c:	ble	1148c <__snprintf_chk@plt+0x120>
   11540:	add	r2, r3, #1
   11544:	ldr	r0, [r6, r3, lsl #2]
   11548:	movw	r4, #33600	; 0x8340
   1154c:	movt	r4, #2
   11550:	str	r2, [r5]
   11554:	bl	12204 <__snprintf_chk@plt+0xe98>
   11558:	ldr	r8, [r5]
   1155c:	vmov.f64	d8, d0
   11560:	ldrb	r1, [r4, #24]
   11564:	ldr	r3, [r6, r8, lsl #2]
   11568:	add	r9, r6, r8, lsl #2
   1156c:	cmp	r1, #0
   11570:	str	r3, [r4, #20]
   11574:	beq	11894 <__snprintf_chk@plt+0x528>
   11578:	movw	r7, #33068	; 0x812c
   1157c:	movt	r7, #2
   11580:	add	r0, sp, #160	; 0xa0
   11584:	mov	r5, #268435456	; 0x10000000
   11588:	ldr	sl, [r7]
   1158c:	bl	112f4 <sigemptyset@plt>
   11590:	movw	r3, #7260	; 0x1c5c
   11594:	movt	r3, #1
   11598:	add	r1, sp, #156	; 0x9c
   1159c:	mov	r2, #0
   115a0:	mov	r0, #14
   115a4:	str	r3, [sp, #156]	; 0x9c
   115a8:	str	r5, [sp, #288]	; 0x120
   115ac:	bl	11144 <sigaction@plt>
   115b0:	add	r1, sp, #156	; 0x9c
   115b4:	mov	r2, #0
   115b8:	mov	r0, #2
   115bc:	bl	11144 <sigaction@plt>
   115c0:	add	r1, sp, #156	; 0x9c
   115c4:	mov	r2, #0
   115c8:	mov	r0, #3
   115cc:	bl	11144 <sigaction@plt>
   115d0:	add	r1, sp, #156	; 0x9c
   115d4:	mov	r2, #0
   115d8:	mov	r0, #1
   115dc:	bl	11144 <sigaction@plt>
   115e0:	add	r1, sp, #156	; 0x9c
   115e4:	mov	r2, #0
   115e8:	mov	r0, #15
   115ec:	bl	11144 <sigaction@plt>
   115f0:	mov	r2, #0
   115f4:	add	r1, sp, #156	; 0x9c
   115f8:	mov	r0, sl
   115fc:	bl	11144 <sigaction@plt>
   11600:	mov	r1, #1
   11604:	mov	r0, #21
   11608:	bl	110cc <signal@plt>
   1160c:	mov	r1, #1
   11610:	mov	r0, #22
   11614:	bl	110cc <signal@plt>
   11618:	add	r0, sp, #160	; 0xa0
   1161c:	bl	112f4 <sigemptyset@plt>
   11620:	movw	r3, #6800	; 0x1a90
   11624:	movt	r3, #1
   11628:	add	r1, sp, #156	; 0x9c
   1162c:	mov	r2, #0
   11630:	mov	r0, #17
   11634:	str	r3, [sp, #156]	; 0x9c
   11638:	str	r5, [sp, #288]	; 0x120
   1163c:	bl	11144 <sigaction@plt>
   11640:	mov	r0, #17
   11644:	bl	11be0 <__snprintf_chk@plt+0x874>
   11648:	bl	11300 <fork@plt>
   1164c:	cmn	r0, #1
   11650:	mov	r5, r0
   11654:	str	r0, [r4, #4]
   11658:	beq	118a0 <__snprintf_chk@plt+0x534>
   1165c:	cmp	r0, #0
   11660:	bne	116f4 <__snprintf_chk@plt+0x388>
   11664:	mov	r1, r0
   11668:	mov	r0, #21
   1166c:	bl	110cc <signal@plt>
   11670:	mov	r1, r5
   11674:	mov	r0, #22
   11678:	bl	110cc <signal@plt>
   1167c:	mov	r1, r9
   11680:	ldr	r0, [r6, r8, lsl #2]
   11684:	bl	110b4 <execvp@plt>
   11688:	bl	1124c <__errno_location@plt>
   1168c:	ldr	r7, [r0]
   11690:	mov	r2, #5
   11694:	movw	r1, #26932	; 0x6934
   11698:	movt	r1, #1
   1169c:	mov	r0, r5
   116a0:	cmp	r7, #2
   116a4:	moveq	r6, #127	; 0x7f
   116a8:	movne	r6, #126	; 0x7e
   116ac:	bl	110f0 <dcgettext@plt>
   116b0:	mov	r8, r0
   116b4:	ldr	r0, [r4, #20]
   116b8:	bl	14ac8 <__snprintf_chk@plt+0x375c>
   116bc:	mov	r3, r0
   116c0:	mov	r2, r8
   116c4:	mov	r1, r7
   116c8:	mov	r0, r5
   116cc:	bl	111a4 <error@plt>
   116d0:	mov	r0, r6
   116d4:	add	sp, sp, #296	; 0x128
   116d8:	vpop	{d8}
   116dc:	ldrd	r4, [sp]
   116e0:	ldrd	r6, [sp, #8]
   116e4:	ldrd	r8, [sp, #16]
   116e8:	ldr	sl, [sp, #24]
   116ec:	add	sp, sp, #28
   116f0:	pop	{pc}		; (ldr pc, [sp], #4)
   116f4:	mov	r0, #14
   116f8:	bl	11be0 <__snprintf_chk@plt+0x874>
   116fc:	vmov.f64	d0, d8
   11700:	mov	r0, #1
   11704:	bl	11a94 <__snprintf_chk@plt+0x728>
   11708:	add	r0, sp, #156	; 0x9c
   1170c:	ldr	r5, [r7]
   11710:	bl	112f4 <sigemptyset@plt>
   11714:	mov	r1, #14
   11718:	add	r0, sp, #156	; 0x9c
   1171c:	bl	111c8 <sigaddset@plt>
   11720:	mov	r1, #2
   11724:	add	r0, sp, #156	; 0x9c
   11728:	bl	111c8 <sigaddset@plt>
   1172c:	mov	r1, #3
   11730:	add	r0, sp, #156	; 0x9c
   11734:	bl	111c8 <sigaddset@plt>
   11738:	mov	r1, #1
   1173c:	add	r0, sp, #156	; 0x9c
   11740:	bl	111c8 <sigaddset@plt>
   11744:	mov	r1, #15
   11748:	add	r0, sp, #156	; 0x9c
   1174c:	bl	111c8 <sigaddset@plt>
   11750:	mov	r1, r5
   11754:	add	r0, sp, #156	; 0x9c
   11758:	bl	111c8 <sigaddset@plt>
   1175c:	mov	r1, #17
   11760:	add	r0, sp, #156	; 0x9c
   11764:	bl	111c8 <sigaddset@plt>
   11768:	add	r2, sp, #28
   1176c:	add	r1, sp, #156	; 0x9c
   11770:	mov	r0, #0
   11774:	bl	11084 <sigprocmask@plt>
   11778:	cmp	r0, #0
   1177c:	beq	117b8 <__snprintf_chk@plt+0x44c>
   11780:	bl	1124c <__errno_location@plt>
   11784:	ldr	r5, [r0]
   11788:	mov	r2, #5
   1178c:	movw	r1, #24620	; 0x602c
   11790:	movt	r1, #1
   11794:	mov	r0, #0
   11798:	bl	110f0 <dcgettext@plt>
   1179c:	mov	r2, r0
   117a0:	mov	r0, #0
   117a4:	mov	r1, r5
   117a8:	bl	111a4 <error@plt>
   117ac:	b	117b8 <__snprintf_chk@plt+0x44c>
   117b0:	add	r0, sp, #28
   117b4:	bl	1127c <sigsuspend@plt>
   117b8:	mov	r2, #1
   117bc:	add	r1, sp, #156	; 0x9c
   117c0:	ldr	r0, [r4, #4]
   117c4:	bl	11168 <waitpid@plt>
   117c8:	cmp	r0, #0
   117cc:	beq	117b0 <__snprintf_chk@plt+0x444>
   117d0:	blt	1185c <__snprintf_chk@plt+0x4f0>
   117d4:	ldr	r3, [sp, #156]	; 0x9c
   117d8:	ands	r5, r3, #127	; 0x7f
   117dc:	ubfxeq	r3, r3, #8, #8
   117e0:	streq	r3, [sp, #156]	; 0x9c
   117e4:	beq	11838 <__snprintf_chk@plt+0x4cc>
   117e8:	add	r2, r5, #1
   117ec:	sbfx	r2, r2, #1, #7
   117f0:	cmp	r2, #0
   117f4:	ble	118d4 <__snprintf_chk@plt+0x568>
   117f8:	tst	r3, #128	; 0x80
   117fc:	bne	11908 <__snprintf_chk@plt+0x59c>
   11800:	ldr	r6, [r4]
   11804:	cmp	r6, #0
   11808:	beq	11930 <__snprintf_chk@plt+0x5c4>
   1180c:	ldr	r2, [r4]
   11810:	sub	r3, r5, #9
   11814:	add	r5, r5, #128	; 0x80
   11818:	clz	r3, r3
   1181c:	lsr	r3, r3, #5
   11820:	str	r5, [sp, #156]	; 0x9c
   11824:	cmp	r2, #0
   11828:	moveq	r3, #0
   1182c:	cmp	r3, #0
   11830:	movne	r3, #1
   11834:	strbne	r3, [r4, #25]
   11838:	ldr	r3, [r4]
   1183c:	cmp	r3, #0
   11840:	beq	11854 <__snprintf_chk@plt+0x4e8>
   11844:	ldrb	r3, [r4, #25]
   11848:	cmp	r3, #0
   1184c:	moveq	r3, #124	; 0x7c
   11850:	streq	r3, [sp, #156]	; 0x9c
   11854:	ldr	r6, [sp, #156]	; 0x9c
   11858:	b	116d0 <__snprintf_chk@plt+0x364>
   1185c:	bl	1124c <__errno_location@plt>
   11860:	ldr	r5, [r0]
   11864:	mov	r2, #5
   11868:	movw	r1, #26960	; 0x6950
   1186c:	movt	r1, #1
   11870:	mov	r0, #0
   11874:	bl	110f0 <dcgettext@plt>
   11878:	mov	r2, r0
   1187c:	mov	r0, #0
   11880:	mov	r1, r5
   11884:	bl	111a4 <error@plt>
   11888:	mov	r3, #125	; 0x7d
   1188c:	str	r3, [sp, #156]	; 0x9c
   11890:	b	11838 <__snprintf_chk@plt+0x4cc>
   11894:	mov	r0, r1
   11898:	bl	11330 <setpgid@plt>
   1189c:	b	11578 <__snprintf_chk@plt+0x20c>
   118a0:	bl	1124c <__errno_location@plt>
   118a4:	ldr	r4, [r0]
   118a8:	mov	r2, #5
   118ac:	movw	r1, #26908	; 0x691c
   118b0:	movt	r1, #1
   118b4:	mov	r0, #0
   118b8:	bl	110f0 <dcgettext@plt>
   118bc:	mov	r2, r0
   118c0:	mov	r0, #0
   118c4:	mov	r6, #125	; 0x7d
   118c8:	mov	r1, r4
   118cc:	bl	111a4 <error@plt>
   118d0:	b	116d0 <__snprintf_chk@plt+0x364>
   118d4:	mov	r2, #5
   118d8:	movw	r1, #27064	; 0x69b8
   118dc:	movt	r1, #1
   118e0:	mov	r0, #0
   118e4:	bl	110f0 <dcgettext@plt>
   118e8:	mov	r1, #0
   118ec:	mov	r2, r0
   118f0:	ldr	r3, [sp, #156]	; 0x9c
   118f4:	mov	r0, r1
   118f8:	bl	111a4 <error@plt>
   118fc:	mov	r3, #1
   11900:	str	r3, [sp, #156]	; 0x9c
   11904:	b	11838 <__snprintf_chk@plt+0x4cc>
   11908:	mov	r2, #5
   1190c:	movw	r1, #26988	; 0x696c
   11910:	movt	r1, #1
   11914:	mov	r0, #0
   11918:	bl	110f0 <dcgettext@plt>
   1191c:	mov	r1, #0
   11920:	mov	r2, r0
   11924:	mov	r0, r1
   11928:	bl	111a4 <error@plt>
   1192c:	b	11800 <__snprintf_chk@plt+0x494>
   11930:	mov	r1, r6
   11934:	mov	r0, #4
   11938:	bl	11294 <prctl@plt>
   1193c:	subs	r1, r0, #0
   11940:	bne	11968 <__snprintf_chk@plt+0x5fc>
   11944:	mov	r0, r5
   11948:	bl	110cc <signal@plt>
   1194c:	mov	r0, r5
   11950:	bl	11be0 <__snprintf_chk@plt+0x874>
   11954:	mov	r0, r5
   11958:	bl	11054 <raise@plt>
   1195c:	b	1180c <__snprintf_chk@plt+0x4a0>
   11960:	mov	r0, r4
   11964:	bl	11e40 <__snprintf_chk@plt+0xad4>
   11968:	bl	1124c <__errno_location@plt>
   1196c:	ldr	r7, [r0]
   11970:	mov	r2, #5
   11974:	mov	r0, r6
   11978:	movw	r1, #27024	; 0x6990
   1197c:	movt	r1, #1
   11980:	bl	110f0 <dcgettext@plt>
   11984:	mov	r2, r0
   11988:	mov	r0, r6
   1198c:	mov	r1, r7
   11990:	bl	111a4 <error@plt>
   11994:	b	1180c <__snprintf_chk@plt+0x4a0>
   11998:	andeq	r5, r1, ip, ror pc
   1199c:	mov	fp, #0
   119a0:	mov	lr, #0
   119a4:	pop	{r1}		; (ldr r1, [sp], #4)
   119a8:	mov	r2, sp
   119ac:	push	{r2}		; (str r2, [sp, #-4]!)
   119b0:	push	{r0}		; (str r0, [sp, #-4]!)
   119b4:	ldr	ip, [pc, #16]	; 119cc <__snprintf_chk@plt+0x660>
   119b8:	push	{ip}		; (str ip, [sp, #-4]!)
   119bc:	ldr	r0, [pc, #12]	; 119d0 <__snprintf_chk@plt+0x664>
   119c0:	ldr	r3, [pc, #12]	; 119d4 <__snprintf_chk@plt+0x668>
   119c4:	bl	111d4 <__libc_start_main@plt>
   119c8:	bl	11360 <abort@plt>
   119cc:	andeq	r5, r1, ip, lsl pc
   119d0:	andeq	r1, r1, r8, ror r3
   119d4:			; <UNDEFINED> instruction: 0x00015ebc
   119d8:	ldr	r3, [pc, #20]	; 119f4 <__snprintf_chk@plt+0x688>
   119dc:	ldr	r2, [pc, #20]	; 119f8 <__snprintf_chk@plt+0x68c>
   119e0:	add	r3, pc, r3
   119e4:	ldr	r2, [r3, r2]
   119e8:	cmp	r2, #0
   119ec:	bxeq	lr
   119f0:	b	111ec <__gmon_start__@plt>
   119f4:	andeq	r6, r1, r8, lsl r6
   119f8:	andeq	r0, r0, r0, lsr #2
   119fc:	ldr	r0, [pc, #24]	; 11a1c <__snprintf_chk@plt+0x6b0>
   11a00:	ldr	r3, [pc, #24]	; 11a20 <__snprintf_chk@plt+0x6b4>
   11a04:	cmp	r3, r0
   11a08:	bxeq	lr
   11a0c:	ldr	r3, [pc, #16]	; 11a24 <__snprintf_chk@plt+0x6b8>
   11a10:	cmp	r3, #0
   11a14:	bxeq	lr
   11a18:	bx	r3
   11a1c:	andeq	r8, r2, ip, lsl r3
   11a20:	andeq	r8, r2, ip, lsl r3
   11a24:	andeq	r0, r0, r0
   11a28:	ldr	r0, [pc, #36]	; 11a54 <__snprintf_chk@plt+0x6e8>
   11a2c:	ldr	r1, [pc, #36]	; 11a58 <__snprintf_chk@plt+0x6ec>
   11a30:	sub	r1, r1, r0
   11a34:	asr	r1, r1, #2
   11a38:	add	r1, r1, r1, lsr #31
   11a3c:	asrs	r1, r1, #1
   11a40:	bxeq	lr
   11a44:	ldr	r3, [pc, #16]	; 11a5c <__snprintf_chk@plt+0x6f0>
   11a48:	cmp	r3, #0
   11a4c:	bxeq	lr
   11a50:	bx	r3
   11a54:	andeq	r8, r2, ip, lsl r3
   11a58:	andeq	r8, r2, ip, lsl r3
   11a5c:	andeq	r0, r0, r0
   11a60:	push	{r4, lr}
   11a64:	ldr	r4, [pc, #24]	; 11a84 <__snprintf_chk@plt+0x718>
   11a68:	ldrb	r3, [r4]
   11a6c:	cmp	r3, #0
   11a70:	popne	{r4, pc}
   11a74:	bl	119fc <__snprintf_chk@plt+0x690>
   11a78:	mov	r3, #1
   11a7c:	strb	r3, [r4]
   11a80:	pop	{r4, pc}
   11a84:	andeq	r8, r2, ip, lsr r3
   11a88:	b	11a28 <__snprintf_chk@plt+0x6bc>
   11a8c:	andeq	r0, r0, r0
   11a90:	bx	lr
   11a94:	strd	r4, [sp, #-20]!	; 0xffffffec
   11a98:	mov	r5, r0
   11a9c:	mov	r4, #0
   11aa0:	strd	r6, [sp, #8]
   11aa4:	str	lr, [sp, #16]
   11aa8:	vpush	{d8}
   11aac:	sub	sp, sp, #36	; 0x24
   11ab0:	vmov.f64	d8, d0
   11ab4:	add	r0, sp, #8
   11ab8:	bl	126a8 <__snprintf_chk@plt+0x133c>
   11abc:	ldrd	r6, [sp, #8]
   11ac0:	mov	r1, r4
   11ac4:	mov	r0, r4
   11ac8:	add	r2, sp, #4
   11acc:	str	r4, [sp, #16]
   11ad0:	str	r4, [sp, #20]
   11ad4:	strd	r6, [sp, #24]
   11ad8:	bl	11114 <timer_create@plt>
   11adc:	subs	r6, r0, #0
   11ae0:	beq	11b50 <__snprintf_chk@plt+0x7e4>
   11ae4:	cmp	r5, #0
   11ae8:	beq	11afc <__snprintf_chk@plt+0x790>
   11aec:	bl	1124c <__errno_location@plt>
   11af0:	ldr	r5, [r0]
   11af4:	cmp	r5, #38	; 0x26
   11af8:	bne	11b80 <__snprintf_chk@plt+0x814>
   11afc:	vldr	d7, [pc, #212]	; 11bd8 <__snprintf_chk@plt+0x86c>
   11b00:	vcmpe.f64	d8, d7
   11b04:	vmrs	APSR_nzcv, fpscr
   11b08:	mvnge	r0, #0
   11b0c:	blt	11b2c <__snprintf_chk@plt+0x7c0>
   11b10:	bl	110fc <alarm@plt>
   11b14:	add	sp, sp, #36	; 0x24
   11b18:	vpop	{d8}
   11b1c:	ldrd	r4, [sp]
   11b20:	ldrd	r6, [sp, #8]
   11b24:	add	sp, sp, #16
   11b28:	pop	{pc}		; (ldr pc, [sp], #4)
   11b2c:	vcvt.u32.f64	s15, d8
   11b30:	vcvt.f64.u32	d6, s15
   11b34:	vmov	r3, s15
   11b38:	vcmpe.f64	d6, d8
   11b3c:	vmrs	APSR_nzcv, fpscr
   11b40:	movmi	r0, #1
   11b44:	movpl	r0, #0
   11b48:	add	r0, r0, r3
   11b4c:	b	11b10 <__snprintf_chk@plt+0x7a4>
   11b50:	mov	r3, r6
   11b54:	add	r2, sp, #16
   11b58:	ldr	r0, [sp, #4]
   11b5c:	mov	r1, r6
   11b60:	bl	11138 <timer_settime@plt>
   11b64:	cmp	r0, r4
   11b68:	beq	11b14 <__snprintf_chk@plt+0x7a8>
   11b6c:	cmp	r5, r4
   11b70:	bne	11ba8 <__snprintf_chk@plt+0x83c>
   11b74:	ldr	r0, [sp, #4]
   11b78:	bl	111b0 <timer_delete@plt>
   11b7c:	b	11afc <__snprintf_chk@plt+0x790>
   11b80:	mov	r2, #5
   11b84:	mov	r0, r4
   11b88:	movw	r1, #24596	; 0x6014
   11b8c:	movt	r1, #1
   11b90:	bl	110f0 <dcgettext@plt>
   11b94:	mov	r2, r0
   11b98:	mov	r1, r5
   11b9c:	mov	r0, r4
   11ba0:	bl	111a4 <error@plt>
   11ba4:	b	11afc <__snprintf_chk@plt+0x790>
   11ba8:	bl	1124c <__errno_location@plt>
   11bac:	ldr	r4, [r0]
   11bb0:	mov	r2, #5
   11bb4:	mov	r0, r6
   11bb8:	movw	r1, #24572	; 0x5ffc
   11bbc:	movt	r1, #1
   11bc0:	bl	110f0 <dcgettext@plt>
   11bc4:	mov	r2, r0
   11bc8:	mov	r0, r6
   11bcc:	mov	r1, r4
   11bd0:	bl	111a4 <error@plt>
   11bd4:	b	11b74 <__snprintf_chk@plt+0x808>
   11bd8:			; <UNDEFINED> instruction: 0xffe00000
   11bdc:	strdmi	pc, [pc, #255]	; 11ce3 <__snprintf_chk@plt+0x977>
   11be0:	str	r4, [sp, #-8]!
   11be4:	mov	r4, r0
   11be8:	str	lr, [sp, #4]
   11bec:	sub	sp, sp, #128	; 0x80
   11bf0:	mov	r0, sp
   11bf4:	bl	112f4 <sigemptyset@plt>
   11bf8:	mov	r1, r4
   11bfc:	mov	r0, sp
   11c00:	bl	111c8 <sigaddset@plt>
   11c04:	mov	r1, sp
   11c08:	mov	r2, #0
   11c0c:	mov	r0, #1
   11c10:	bl	11084 <sigprocmask@plt>
   11c14:	cmp	r0, #0
   11c18:	bne	11c2c <__snprintf_chk@plt+0x8c0>
   11c1c:	add	sp, sp, #128	; 0x80
   11c20:	ldr	r4, [sp]
   11c24:	add	sp, sp, #4
   11c28:	pop	{pc}		; (ldr pc, [sp], #4)
   11c2c:	bl	1124c <__errno_location@plt>
   11c30:	ldr	r4, [r0]
   11c34:	mov	r2, #5
   11c38:	movw	r1, #24620	; 0x602c
   11c3c:	movt	r1, #1
   11c40:	mov	r0, #0
   11c44:	bl	110f0 <dcgettext@plt>
   11c48:	mov	r2, r0
   11c4c:	mov	r0, #0
   11c50:	mov	r1, r4
   11c54:	bl	111a4 <error@plt>
   11c58:	b	11c1c <__snprintf_chk@plt+0x8b0>
   11c5c:	cmp	r0, #14
   11c60:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11c64:	strd	r6, [sp, #8]
   11c68:	strd	r8, [sp, #16]
   11c6c:	str	lr, [sp, #24]
   11c70:	vpush	{d8}
   11c74:	sub	sp, sp, #36	; 0x24
   11c78:	beq	11d90 <__snprintf_chk@plt+0xa24>
   11c7c:	movw	r4, #33600	; 0x8340
   11c80:	movt	r4, #2
   11c84:	mov	r5, r0
   11c88:	ldr	r6, [r4, #4]
   11c8c:	cmp	r6, #0
   11c90:	beq	11e38 <__snprintf_chk@plt+0xacc>
   11c94:	vldr	d8, [r4, #8]
   11c98:	mov	r8, #0
   11c9c:	mov	r9, #0
   11ca0:	vcmp.f64	d8, #0.0
   11ca4:	vmrs	APSR_nzcv, fpscr
   11ca8:	bne	11cec <__snprintf_chk@plt+0x980>
   11cac:	ldrb	r3, [r4, #16]
   11cb0:	cmp	r3, #0
   11cb4:	bne	11d28 <__snprintf_chk@plt+0x9bc>
   11cb8:	mov	r1, r5
   11cbc:	mov	r0, r6
   11cc0:	bl	11204 <kill@plt>
   11cc4:	ldrb	r4, [r4, #24]
   11cc8:	cmp	r4, #0
   11ccc:	beq	11db0 <__snprintf_chk@plt+0xa44>
   11cd0:	add	sp, sp, #36	; 0x24
   11cd4:	vpop	{d8}
   11cd8:	ldrd	r4, [sp]
   11cdc:	ldrd	r6, [sp, #8]
   11ce0:	ldrd	r8, [sp, #16]
   11ce4:	add	sp, sp, #24
   11ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   11cec:	bl	1124c <__errno_location@plt>
   11cf0:	mov	r2, #9
   11cf4:	movw	r3, #33068	; 0x812c
   11cf8:	movt	r3, #2
   11cfc:	mov	r6, r0
   11d00:	vmov.f64	d0, d8
   11d04:	mov	r0, #0
   11d08:	ldr	r7, [r6]
   11d0c:	str	r2, [r3]
   11d10:	bl	11a94 <__snprintf_chk@plt+0x728>
   11d14:	ldrb	r3, [r4, #16]
   11d18:	strd	r8, [r4, #8]
   11d1c:	str	r7, [r6]
   11d20:	cmp	r3, #0
   11d24:	beq	11d74 <__snprintf_chk@plt+0xa08>
   11d28:	mov	r0, r5
   11d2c:	add	r1, sp, #12
   11d30:	bl	14c74 <__snprintf_chk@plt+0x3908>
   11d34:	cmp	r0, #0
   11d38:	bne	11e04 <__snprintf_chk@plt+0xa98>
   11d3c:	mov	r2, #5
   11d40:	movw	r1, #24648	; 0x6048
   11d44:	movt	r1, #1
   11d48:	mov	r0, #0
   11d4c:	bl	110f0 <dcgettext@plt>
   11d50:	mov	r6, r0
   11d54:	ldr	r0, [r4, #20]
   11d58:	bl	14ac8 <__snprintf_chk@plt+0x375c>
   11d5c:	mov	r1, #0
   11d60:	mov	r2, r6
   11d64:	str	r0, [sp]
   11d68:	add	r3, sp, #12
   11d6c:	mov	r0, r1
   11d70:	bl	111a4 <error@plt>
   11d74:	ldr	r6, [r4, #4]
   11d78:	cmp	r6, #0
   11d7c:	bne	11cb8 <__snprintf_chk@plt+0x94c>
   11d80:	mov	r1, #1
   11d84:	mov	r0, r5
   11d88:	bl	110cc <signal@plt>
   11d8c:	b	11cb8 <__snprintf_chk@plt+0x94c>
   11d90:	movw	r3, #33068	; 0x812c
   11d94:	movt	r3, #2
   11d98:	movw	r4, #33600	; 0x8340
   11d9c:	movt	r4, #2
   11da0:	ldr	r5, [r3]
   11da4:	mov	r3, #1
   11da8:	str	r3, [r4]
   11dac:	b	11c88 <__snprintf_chk@plt+0x91c>
   11db0:	mov	r1, #1
   11db4:	mov	r0, r5
   11db8:	bl	110cc <signal@plt>
   11dbc:	mov	r1, r5
   11dc0:	mov	r0, r4
   11dc4:	bl	11204 <kill@plt>
   11dc8:	cmp	r5, #9
   11dcc:	cmpne	r5, #18
   11dd0:	beq	11cd0 <__snprintf_chk@plt+0x964>
   11dd4:	cmp	r6, #0
   11dd8:	beq	11e28 <__snprintf_chk@plt+0xabc>
   11ddc:	mov	r0, r6
   11de0:	mov	r1, #18
   11de4:	bl	11204 <kill@plt>
   11de8:	mov	r1, #1
   11dec:	mov	r0, #18
   11df0:	bl	110cc <signal@plt>
   11df4:	mov	r1, #18
   11df8:	mov	r0, #0
   11dfc:	bl	11204 <kill@plt>
   11e00:	b	11cd0 <__snprintf_chk@plt+0x964>
   11e04:	movw	r0, #24644	; 0x6044
   11e08:	movt	r0, #1
   11e0c:	mov	r3, #19
   11e10:	mov	r2, #1
   11e14:	mov	r1, r3
   11e18:	stm	sp, {r0, r5}
   11e1c:	add	r0, sp, #12
   11e20:	bl	1136c <__snprintf_chk@plt>
   11e24:	b	11d3c <__snprintf_chk@plt+0x9d0>
   11e28:	mov	r1, #1
   11e2c:	mov	r0, #18
   11e30:	bl	110cc <signal@plt>
   11e34:	b	11ddc <__snprintf_chk@plt+0xa70>
   11e38:	add	r0, r5, #128	; 0x80
   11e3c:	bl	1109c <_exit@plt>
   11e40:	subs	r6, r0, #0
   11e44:	str	r7, [sp, #-8]!
   11e48:	str	lr, [sp, #4]
   11e4c:	sub	sp, sp, #56	; 0x38
   11e50:	beq	11e98 <__snprintf_chk@plt+0xb2c>
   11e54:	movw	r3, #33584	; 0x8330
   11e58:	movt	r3, #2
   11e5c:	ldr	r4, [r3]
   11e60:	mov	r2, #5
   11e64:	movw	r1, #24688	; 0x6070
   11e68:	movt	r1, #1
   11e6c:	mov	r0, #0
   11e70:	bl	110f0 <dcgettext@plt>
   11e74:	movw	r3, #33636	; 0x8364
   11e78:	movt	r3, #2
   11e7c:	mov	r2, r0
   11e80:	mov	r1, #1
   11e84:	ldr	r3, [r3]
   11e88:	mov	r0, r4
   11e8c:	bl	112b8 <__fprintf_chk@plt>
   11e90:	mov	r0, r6
   11e94:	bl	1121c <exit@plt>
   11e98:	mov	r2, #5
   11e9c:	movw	r1, #24728	; 0x6098
   11ea0:	movt	r1, #1
   11ea4:	movw	r7, #33588	; 0x8334
   11ea8:	movt	r7, #2
   11eac:	bl	110f0 <dcgettext@plt>
   11eb0:	movw	r3, #33636	; 0x8364
   11eb4:	movt	r3, #2
   11eb8:	ldr	r3, [r3]
   11ebc:	mov	r1, r0
   11ec0:	mov	r0, #1
   11ec4:	mov	r2, r3
   11ec8:	bl	11288 <__printf_chk@plt>
   11ecc:	mov	r2, #5
   11ed0:	movw	r1, #24796	; 0x60dc
   11ed4:	movt	r1, #1
   11ed8:	mov	r0, r6
   11edc:	bl	110f0 <dcgettext@plt>
   11ee0:	ldr	r1, [r7]
   11ee4:	bl	11048 <fputs_unlocked@plt>
   11ee8:	mov	r2, #5
   11eec:	movw	r1, #24860	; 0x611c
   11ef0:	movt	r1, #1
   11ef4:	mov	r0, r6
   11ef8:	bl	110f0 <dcgettext@plt>
   11efc:	ldr	r1, [r7]
   11f00:	bl	11048 <fputs_unlocked@plt>
   11f04:	mov	r2, #5
   11f08:	movw	r1, #24936	; 0x6168
   11f0c:	movt	r1, #1
   11f10:	mov	r0, r6
   11f14:	bl	110f0 <dcgettext@plt>
   11f18:	ldr	r1, [r7]
   11f1c:	bl	11048 <fputs_unlocked@plt>
   11f20:	mov	r2, #5
   11f24:	movw	r1, #25668	; 0x6444
   11f28:	movt	r1, #1
   11f2c:	mov	r0, r6
   11f30:	bl	110f0 <dcgettext@plt>
   11f34:	ldr	r1, [r7]
   11f38:	bl	11048 <fputs_unlocked@plt>
   11f3c:	mov	r2, #5
   11f40:	movw	r1, #25736	; 0x6488
   11f44:	movt	r1, #1
   11f48:	mov	r0, r6
   11f4c:	bl	110f0 <dcgettext@plt>
   11f50:	ldr	r1, [r7]
   11f54:	bl	11048 <fputs_unlocked@plt>
   11f58:	mov	r2, #5
   11f5c:	movw	r1, #25784	; 0x64b8
   11f60:	movt	r1, #1
   11f64:	mov	r0, r6
   11f68:	bl	110f0 <dcgettext@plt>
   11f6c:	ldr	r1, [r7]
   11f70:	bl	11048 <fputs_unlocked@plt>
   11f74:	mov	r2, #5
   11f78:	movw	r1, #25840	; 0x64f0
   11f7c:	movt	r1, #1
   11f80:	mov	r0, r6
   11f84:	bl	110f0 <dcgettext@plt>
   11f88:	ldr	r1, [r7]
   11f8c:	bl	11048 <fputs_unlocked@plt>
   11f90:	mov	r2, #5
   11f94:	movw	r1, #26032	; 0x65b0
   11f98:	movt	r1, #1
   11f9c:	mov	r0, r6
   11fa0:	bl	110f0 <dcgettext@plt>
   11fa4:	ldr	r1, [r7]
   11fa8:	bl	11048 <fputs_unlocked@plt>
   11fac:	mov	r2, #5
   11fb0:	movw	r1, #26268	; 0x669c
   11fb4:	movt	r1, #1
   11fb8:	mov	r0, r6
   11fbc:	bl	110f0 <dcgettext@plt>
   11fc0:	ldr	r1, [r7]
   11fc4:	bl	11048 <fputs_unlocked@plt>
   11fc8:	movw	lr, #24388	; 0x5f44
   11fcc:	movt	lr, #1
   11fd0:	ldr	ip, [lr]
   11fd4:	ldr	r4, [lr, #4]
   11fd8:	ldrd	r8, [lr, #8]
   11fdc:	subs	r1, ip, #0
   11fe0:	str	ip, [sp]
   11fe4:	ldrd	r2, [lr, #16]
   11fe8:	str	r4, [sp, #4]
   11fec:	ldrd	r4, [lr, #24]
   11ff0:	strd	r8, [sp, #8]
   11ff4:	ldrd	r8, [lr, #32]
   11ff8:	strd	r2, [sp, #16]
   11ffc:	ldrd	r2, [lr, #40]	; 0x28
   12000:	strd	r4, [sp, #24]
   12004:	ldrd	r4, [lr, #48]	; 0x30
   12008:	strd	r8, [sp, #32]
   1200c:	strd	r2, [sp, #40]	; 0x28
   12010:	strd	r4, [sp, #48]	; 0x30
   12014:	movwne	r5, #24680	; 0x6068
   12018:	mov	r4, sp
   1201c:	movtne	r5, #1
   12020:	bne	12118 <__snprintf_chk@plt+0xdac>
   12024:	ldr	r4, [r4, #4]
   12028:	movw	r1, #26596	; 0x67e4
   1202c:	movt	r1, #1
   12030:	mov	r2, #5
   12034:	cmp	r4, #0
   12038:	beq	1212c <__snprintf_chk@plt+0xdc0>
   1203c:	mov	r0, #0
   12040:	bl	110f0 <dcgettext@plt>
   12044:	mov	r1, r0
   12048:	movw	r3, #26620	; 0x67fc
   1204c:	movt	r3, #1
   12050:	movw	r2, #26660	; 0x6824
   12054:	movt	r2, #1
   12058:	mov	r0, #1
   1205c:	bl	11288 <__printf_chk@plt>
   12060:	mov	r1, #0
   12064:	mov	r0, #5
   12068:	bl	112e8 <setlocale@plt>
   1206c:	cmp	r0, #0
   12070:	movweq	r5, #24680	; 0x6068
   12074:	movteq	r5, #1
   12078:	beq	1209c <__snprintf_chk@plt+0xd30>
   1207c:	movw	r1, #26676	; 0x6834
   12080:	movt	r1, #1
   12084:	mov	r2, #3
   12088:	movw	r5, #24680	; 0x6068
   1208c:	movt	r5, #1
   12090:	bl	11354 <strncmp@plt>
   12094:	cmp	r0, #0
   12098:	bne	121e4 <__snprintf_chk@plt+0xe78>
   1209c:	mov	r2, #5
   120a0:	movw	r1, #26752	; 0x6880
   120a4:	movt	r1, #1
   120a8:	mov	r0, #0
   120ac:	bl	110f0 <dcgettext@plt>
   120b0:	mov	r1, r0
   120b4:	movw	r3, #24680	; 0x6068
   120b8:	movt	r3, #1
   120bc:	movw	r2, #26620	; 0x67fc
   120c0:	movt	r2, #1
   120c4:	mov	r0, #1
   120c8:	bl	11288 <__printf_chk@plt>
   120cc:	mov	r2, #5
   120d0:	movw	r1, #26780	; 0x689c
   120d4:	movt	r1, #1
   120d8:	mov	r0, #0
   120dc:	bl	110f0 <dcgettext@plt>
   120e0:	movw	r2, #27108	; 0x69e4
   120e4:	movt	r2, #1
   120e8:	cmp	r4, r5
   120ec:	movw	r3, #24856	; 0x6118
   120f0:	movt	r3, #1
   120f4:	mov	r1, r0
   120f8:	moveq	r3, r2
   120fc:	mov	r2, r4
   12100:	mov	r0, #1
   12104:	bl	11288 <__printf_chk@plt>
   12108:	b	11e90 <__snprintf_chk@plt+0xb24>
   1210c:	ldr	r1, [r4, #8]!
   12110:	cmp	r1, #0
   12114:	beq	12024 <__snprintf_chk@plt+0xcb8>
   12118:	mov	r0, r5
   1211c:	bl	11060 <strcmp@plt>
   12120:	cmp	r0, #0
   12124:	bne	1210c <__snprintf_chk@plt+0xda0>
   12128:	b	12024 <__snprintf_chk@plt+0xcb8>
   1212c:	mov	r0, r4
   12130:	bl	110f0 <dcgettext@plt>
   12134:	mov	r1, r0
   12138:	movw	r3, #26620	; 0x67fc
   1213c:	movt	r3, #1
   12140:	movw	r2, #26660	; 0x6824
   12144:	movt	r2, #1
   12148:	mov	r0, #1
   1214c:	bl	11288 <__printf_chk@plt>
   12150:	mov	r1, r4
   12154:	mov	r0, #5
   12158:	bl	112e8 <setlocale@plt>
   1215c:	cmp	r0, #0
   12160:	beq	1217c <__snprintf_chk@plt+0xe10>
   12164:	movw	r1, #26676	; 0x6834
   12168:	movt	r1, #1
   1216c:	mov	r2, #3
   12170:	bl	11354 <strncmp@plt>
   12174:	cmp	r0, #0
   12178:	bne	121d8 <__snprintf_chk@plt+0xe6c>
   1217c:	mov	r2, #5
   12180:	movw	r1, #26752	; 0x6880
   12184:	movt	r1, #1
   12188:	mov	r0, #0
   1218c:	bl	110f0 <dcgettext@plt>
   12190:	mov	r1, r0
   12194:	movw	r3, #24680	; 0x6068
   12198:	movt	r3, #1
   1219c:	movw	r2, #26620	; 0x67fc
   121a0:	movt	r2, #1
   121a4:	mov	r0, #1
   121a8:	bl	11288 <__printf_chk@plt>
   121ac:	movw	r1, #26780	; 0x689c
   121b0:	movt	r1, #1
   121b4:	mov	r2, #5
   121b8:	mov	r0, #0
   121bc:	bl	110f0 <dcgettext@plt>
   121c0:	movw	r4, #24680	; 0x6068
   121c4:	movt	r4, #1
   121c8:	movw	r3, #27108	; 0x69e4
   121cc:	movt	r3, #1
   121d0:	mov	r1, r0
   121d4:	b	120fc <__snprintf_chk@plt+0xd90>
   121d8:	movw	r5, #24680	; 0x6068
   121dc:	movt	r5, #1
   121e0:	mov	r4, r5
   121e4:	mov	r2, #5
   121e8:	movw	r1, #26680	; 0x6838
   121ec:	movt	r1, #1
   121f0:	mov	r0, #0
   121f4:	bl	110f0 <dcgettext@plt>
   121f8:	ldr	r1, [r7]
   121fc:	bl	11048 <fputs_unlocked@plt>
   12200:	b	1209c <__snprintf_chk@plt+0xd30>
   12204:	strd	r4, [sp, #-12]!
   12208:	movw	r3, #9484	; 0x250c
   1220c:	movt	r3, #1
   12210:	str	lr, [sp, #8]
   12214:	sub	sp, sp, #20
   12218:	mov	r4, r0
   1221c:	add	r2, sp, #8
   12220:	add	r1, sp, #4
   12224:	bl	157e0 <__snprintf_chk@plt+0x4474>
   12228:	cmp	r0, #0
   1222c:	bne	12240 <__snprintf_chk@plt+0xed4>
   12230:	bl	1124c <__errno_location@plt>
   12234:	ldr	r3, [r0]
   12238:	cmp	r3, #34	; 0x22
   1223c:	bne	122d4 <__snprintf_chk@plt+0xf68>
   12240:	vldr	d0, [sp, #8]
   12244:	vcmpe.f64	d0, #0.0
   12248:	vmrs	APSR_nzcv, fpscr
   1224c:	blt	122d4 <__snprintf_chk@plt+0xf68>
   12250:	ldr	r2, [sp, #4]
   12254:	ldrb	r3, [r2]
   12258:	cmp	r3, #0
   1225c:	beq	122c4 <__snprintf_chk@plt+0xf58>
   12260:	ldrb	r2, [r2, #1]
   12264:	cmp	r2, #0
   12268:	bne	122d4 <__snprintf_chk@plt+0xf68>
   1226c:	sub	r3, r3, #100	; 0x64
   12270:	cmp	r3, #15
   12274:	ldrls	pc, [pc, r3, lsl #2]
   12278:	b	122d4 <__snprintf_chk@plt+0xf68>
   1227c:	andeq	r2, r1, r8, lsr #6
   12280:	ldrdeq	r2, [r1], -r4
   12284:	ldrdeq	r2, [r1], -r4
   12288:	ldrdeq	r2, [r1], -r4
   1228c:			; <UNDEFINED> instruction: 0x000122bc
   12290:	ldrdeq	r2, [r1], -r4
   12294:	ldrdeq	r2, [r1], -r4
   12298:	ldrdeq	r2, [r1], -r4
   1229c:	ldrdeq	r2, [r1], -r4
   122a0:	andeq	r2, r1, r0, lsl r3
   122a4:	ldrdeq	r2, [r1], -r4
   122a8:	ldrdeq	r2, [r1], -r4
   122ac:	ldrdeq	r2, [r1], -r4
   122b0:	ldrdeq	r2, [r1], -r4
   122b4:	ldrdeq	r2, [r1], -r4
   122b8:	andeq	r2, r1, r4, asr #5
   122bc:	vldr	d7, [pc, #124]	; 12340 <__snprintf_chk@plt+0xfd4>
   122c0:	vmul.f64	d0, d0, d7
   122c4:	add	sp, sp, #20
   122c8:	ldrd	r4, [sp]
   122cc:	add	sp, sp, #8
   122d0:	pop	{pc}		; (ldr pc, [sp], #4)
   122d4:	mov	r2, #5
   122d8:	movw	r1, #26832	; 0x68d0
   122dc:	movt	r1, #1
   122e0:	mov	r0, #0
   122e4:	bl	110f0 <dcgettext@plt>
   122e8:	mov	r5, r0
   122ec:	mov	r0, r4
   122f0:	bl	14ac8 <__snprintf_chk@plt+0x375c>
   122f4:	mov	r1, #0
   122f8:	mov	r3, r0
   122fc:	mov	r2, r5
   12300:	mov	r0, r1
   12304:	bl	111a4 <error@plt>
   12308:	mov	r0, #125	; 0x7d
   1230c:	bl	11e40 <__snprintf_chk@plt+0xad4>
   12310:	vldr	d7, [pc, #48]	; 12348 <__snprintf_chk@plt+0xfdc>
   12314:	vmul.f64	d0, d0, d7
   12318:	add	sp, sp, #20
   1231c:	ldrd	r4, [sp]
   12320:	add	sp, sp, #8
   12324:	pop	{pc}		; (ldr pc, [sp], #4)
   12328:	vldr	d7, [pc, #32]	; 12350 <__snprintf_chk@plt+0xfe4>
   1232c:	vmul.f64	d0, d0, d7
   12330:	add	sp, sp, #20
   12334:	ldrd	r4, [sp]
   12338:	add	sp, sp, #8
   1233c:	pop	{pc}		; (ldr pc, [sp], #4)
   12340:	andeq	r0, r0, r0
   12344:	adcmi	r2, ip, r0
   12348:	andeq	r0, r0, r0
   1234c:	submi	r0, lr, r0
   12350:	andeq	r0, r0, r0
   12354:	rscsmi	r1, r5, r0, lsl #16
   12358:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1235c:	strd	r6, [sp, #8]
   12360:	mov	r7, r0
   12364:	strd	r8, [sp, #16]
   12368:	mov	r8, r1
   1236c:	str	lr, [sp, #24]
   12370:	sub	sp, sp, #12
   12374:	ldrb	r3, [r0]
   12378:	sub	r3, r3, #48	; 0x30
   1237c:	cmp	r3, #9
   12380:	bhi	12414 <__snprintf_chk@plt+0x10a8>
   12384:	bl	1124c <__errno_location@plt>
   12388:	mov	r4, r0
   1238c:	mov	r3, #0
   12390:	mov	r2, #10
   12394:	add	r1, sp, #4
   12398:	mov	r0, r7
   1239c:	str	r3, [r4]
   123a0:	bl	1106c <strtol@plt>
   123a4:	ldr	r3, [sp, #4]
   123a8:	cmp	r3, r7
   123ac:	beq	12498 <__snprintf_chk@plt+0x112c>
   123b0:	ldrb	r3, [r3]
   123b4:	cmp	r3, #0
   123b8:	bne	12498 <__snprintf_chk@plt+0x112c>
   123bc:	ldr	r3, [r4]
   123c0:	cmp	r3, #0
   123c4:	bne	12498 <__snprintf_chk@plt+0x112c>
   123c8:	cmn	r0, #1
   123cc:	streq	r0, [sp]
   123d0:	beq	124a0 <__snprintf_chk@plt+0x1134>
   123d4:	cmp	r0, #254	; 0xfe
   123d8:	movgt	r3, #255	; 0xff
   123dc:	movle	r3, #127	; 0x7f
   123e0:	and	r0, r0, r3
   123e4:	str	r0, [sp]
   123e8:	mov	r1, r8
   123ec:	bl	14c74 <__snprintf_chk@plt+0x3908>
   123f0:	cmp	r0, #0
   123f4:	bne	124a0 <__snprintf_chk@plt+0x1134>
   123f8:	ldr	r0, [sp]
   123fc:	add	sp, sp, #12
   12400:	ldrd	r4, [sp]
   12404:	ldrd	r6, [sp, #8]
   12408:	ldrd	r8, [sp, #16]
   1240c:	add	sp, sp, #24
   12410:	pop	{pc}		; (ldr pc, [sp], #4)
   12414:	bl	15774 <__snprintf_chk@plt+0x4408>
   12418:	ldrb	r4, [r0]
   1241c:	mov	r9, r0
   12420:	cmp	r4, #0
   12424:	movwne	r6, #27272	; 0x6a88
   12428:	movne	r5, r0
   1242c:	movtne	r6, #1
   12430:	beq	12458 <__snprintf_chk@plt+0x10ec>
   12434:	mov	r1, r4
   12438:	mov	r0, r6
   1243c:	bl	11240 <strchr@plt>
   12440:	sub	r4, r4, #32
   12444:	cmp	r0, #0
   12448:	strbne	r4, [r5]
   1244c:	ldrb	r4, [r5, #1]!
   12450:	cmp	r4, #0
   12454:	bne	12434 <__snprintf_chk@plt+0x10c8>
   12458:	mov	r0, r9
   1245c:	mov	r1, sp
   12460:	bl	14ae0 <__snprintf_chk@plt+0x3774>
   12464:	cmp	r0, #0
   12468:	beq	12480 <__snprintf_chk@plt+0x1114>
   1246c:	ldrb	r3, [r9]
   12470:	cmp	r3, #83	; 0x53
   12474:	beq	124dc <__snprintf_chk@plt+0x1170>
   12478:	mvn	r3, #0
   1247c:	str	r3, [sp]
   12480:	mov	r0, r9
   12484:	bl	12778 <__snprintf_chk@plt+0x140c>
   12488:	ldr	r0, [sp]
   1248c:	cmp	r0, #0
   12490:	bge	123e8 <__snprintf_chk@plt+0x107c>
   12494:	b	124a0 <__snprintf_chk@plt+0x1134>
   12498:	mvn	r3, #0
   1249c:	str	r3, [sp]
   124a0:	mov	r2, #5
   124a4:	movw	r1, #27300	; 0x6aa4
   124a8:	movt	r1, #1
   124ac:	mov	r0, #0
   124b0:	bl	110f0 <dcgettext@plt>
   124b4:	mov	r4, r0
   124b8:	mov	r0, r7
   124bc:	bl	14ac8 <__snprintf_chk@plt+0x375c>
   124c0:	mov	r1, #0
   124c4:	mov	r3, r0
   124c8:	mov	r2, r4
   124cc:	mov	r0, r1
   124d0:	bl	111a4 <error@plt>
   124d4:	mvn	r0, #0
   124d8:	b	123fc <__snprintf_chk@plt+0x1090>
   124dc:	ldrb	r3, [r9, #1]
   124e0:	cmp	r3, #73	; 0x49
   124e4:	bne	12478 <__snprintf_chk@plt+0x110c>
   124e8:	ldrb	r3, [r9, #2]
   124ec:	cmp	r3, #71	; 0x47
   124f0:	bne	12478 <__snprintf_chk@plt+0x110c>
   124f4:	mov	r1, sp
   124f8:	add	r0, r9, #3
   124fc:	bl	14ae0 <__snprintf_chk@plt+0x3774>
   12500:	cmp	r0, #0
   12504:	bne	12478 <__snprintf_chk@plt+0x110c>
   12508:	b	12480 <__snprintf_chk@plt+0x1114>
   1250c:	strd	r4, [sp, #-16]!
   12510:	mov	r4, r1
   12514:	mov	r5, r0
   12518:	str	r6, [sp, #8]
   1251c:	str	lr, [sp, #12]
   12520:	vpush	{d8}
   12524:	sub	sp, sp, #8
   12528:	mov	r1, sp
   1252c:	bl	112a0 <strtod@plt>
   12530:	ldr	r3, [sp]
   12534:	vmov.f64	d8, d0
   12538:	ldrb	r3, [r3]
   1253c:	cmp	r3, #0
   12540:	bne	1256c <__snprintf_chk@plt+0x1200>
   12544:	cmp	r4, #0
   12548:	vmov.f64	d0, d8
   1254c:	ldrne	r3, [sp]
   12550:	strne	r3, [r4]
   12554:	add	sp, sp, #8
   12558:	vpop	{d8}
   1255c:	ldrd	r4, [sp]
   12560:	ldr	r6, [sp, #8]
   12564:	add	sp, sp, #12
   12568:	pop	{pc}		; (ldr pc, [sp], #4)
   1256c:	bl	1124c <__errno_location@plt>
   12570:	mov	r6, r0
   12574:	add	r1, sp, #4
   12578:	mov	r0, r5
   1257c:	ldr	r5, [r6]
   12580:	bl	159b0 <__snprintf_chk@plt+0x4644>
   12584:	ldrd	r2, [sp]
   12588:	cmp	r2, r3
   1258c:	vmovcc.f64	d8, d0
   12590:	strcc	r3, [sp]
   12594:	strcs	r5, [r6]
   12598:	b	12544 <__snprintf_chk@plt+0x11d8>
   1259c:	movw	r3, #33628	; 0x835c
   125a0:	movt	r3, #2
   125a4:	str	r0, [r3]
   125a8:	bx	lr
   125ac:	movw	r3, #33628	; 0x835c
   125b0:	movt	r3, #2
   125b4:	strb	r0, [r3, #4]
   125b8:	bx	lr
   125bc:	movw	r3, #33588	; 0x8334
   125c0:	movt	r3, #2
   125c4:	strd	r4, [sp, #-16]!
   125c8:	ldr	r0, [r3]
   125cc:	str	r6, [sp, #8]
   125d0:	str	lr, [sp, #12]
   125d4:	sub	sp, sp, #8
   125d8:	bl	15a40 <__snprintf_chk@plt+0x46d4>
   125dc:	cmp	r0, #0
   125e0:	beq	1260c <__snprintf_chk@plt+0x12a0>
   125e4:	movw	r4, #33628	; 0x835c
   125e8:	movt	r4, #2
   125ec:	ldrb	r6, [r4, #4]
   125f0:	bl	1124c <__errno_location@plt>
   125f4:	mov	r5, r0
   125f8:	cmp	r6, #0
   125fc:	beq	12638 <__snprintf_chk@plt+0x12cc>
   12600:	ldr	r3, [r0]
   12604:	cmp	r3, #32
   12608:	bne	12638 <__snprintf_chk@plt+0x12cc>
   1260c:	movw	r3, #33584	; 0x8330
   12610:	movt	r3, #2
   12614:	ldr	r0, [r3]
   12618:	bl	15a40 <__snprintf_chk@plt+0x46d4>
   1261c:	cmp	r0, #0
   12620:	bne	12680 <__snprintf_chk@plt+0x1314>
   12624:	add	sp, sp, #8
   12628:	ldrd	r4, [sp]
   1262c:	ldr	r6, [sp, #8]
   12630:	add	sp, sp, #12
   12634:	pop	{pc}		; (ldr pc, [sp], #4)
   12638:	movw	r1, #27336	; 0x6ac8
   1263c:	movt	r1, #1
   12640:	mov	r2, #5
   12644:	mov	r0, #0
   12648:	bl	110f0 <dcgettext@plt>
   1264c:	mov	r6, r0
   12650:	ldr	r0, [r4]
   12654:	cmp	r0, #0
   12658:	beq	12690 <__snprintf_chk@plt+0x1324>
   1265c:	ldr	r4, [r5]
   12660:	bl	148dc <__snprintf_chk@plt+0x3570>
   12664:	mov	r3, r0
   12668:	movw	r2, #27348	; 0x6ad4
   1266c:	movt	r2, #1
   12670:	mov	r0, #0
   12674:	str	r6, [sp]
   12678:	mov	r1, r4
   1267c:	bl	111a4 <error@plt>
   12680:	movw	r3, #33076	; 0x8134
   12684:	movt	r3, #2
   12688:	ldr	r0, [r3]
   1268c:	bl	1109c <_exit@plt>
   12690:	mov	r3, r6
   12694:	movw	r2, #27352	; 0x6ad8
   12698:	movt	r2, #1
   1269c:	ldr	r1, [r5]
   126a0:	bl	111a4 <error@plt>
   126a4:	b	12680 <__snprintf_chk@plt+0x1314>
   126a8:	vldr	d7, [pc, #176]	; 12760 <__snprintf_chk@plt+0x13f4>
   126ac:	vcmpe.f64	d0, d7
   126b0:	vmrs	APSR_nzcv, fpscr
   126b4:	ble	12750 <__snprintf_chk@plt+0x13e4>
   126b8:	vldr	d7, [pc, #168]	; 12768 <__snprintf_chk@plt+0x13fc>
   126bc:	vcmpe.f64	d0, d7
   126c0:	vmrs	APSR_nzcv, fpscr
   126c4:	bmi	126dc <__snprintf_chk@plt+0x1370>
   126c8:	mvn	r2, #-2147483648	; 0x80000000
   126cc:	movw	r3, #51711	; 0xc9ff
   126d0:	movt	r3, #15258	; 0x3b9a
   126d4:	strd	r2, [r0]
   126d8:	bx	lr
   126dc:	vcvt.s32.f64	s15, d0
   126e0:	vldr	d6, [pc, #136]	; 12770 <__snprintf_chk@plt+0x1404>
   126e4:	movw	r1, #12193	; 0x2fa1
   126e8:	movt	r1, #17592	; 0x44b8
   126ec:	push	{lr}		; (str lr, [sp, #-4]!)
   126f0:	mov	ip, #51712	; 0xca00
   126f4:	movt	ip, #15258	; 0x3b9a
   126f8:	vcvt.f64.s32	d5, s15
   126fc:	vsub.f64	d0, d0, d5
   12700:	vmul.f64	d0, d0, d6
   12704:	vcvt.s32.f64	s14, d0
   12708:	vcvt.f64.s32	d6, s14
   1270c:	vmov	r3, s14
   12710:	vcmpe.f64	d6, d0
   12714:	vmrs	APSR_nzcv, fpscr
   12718:	movmi	r2, #1
   1271c:	movpl	r2, #0
   12720:	add	r2, r2, r3
   12724:	asr	r3, r2, #31
   12728:	smull	lr, r1, r1, r2
   1272c:	rsb	r3, r3, r1, asr #28
   12730:	vmov	r1, s15
   12734:	add	r1, r3, r1
   12738:	mls	r3, ip, r3, r2
   1273c:	cmp	r3, #0
   12740:	sublt	r1, r1, #1
   12744:	addlt	r3, r3, ip
   12748:	stm	r0, {r1, r3}
   1274c:	pop	{pc}		; (ldr pc, [sp], #4)
   12750:	mov	r2, #-2147483648	; 0x80000000
   12754:	mov	r3, #0
   12758:	strd	r2, [r0]
   1275c:	bx	lr
   12760:	andeq	r0, r0, r0
   12764:	mvngt	r0, r0
   12768:	andeq	r0, r0, r0
   1276c:	mvnmi	r0, r0
   12770:	andeq	r0, r0, r0
   12774:	bicmi	ip, sp, r5, ror #26
   12778:	strd	r4, [sp, #-12]!
   1277c:	mov	r5, r0
   12780:	str	lr, [sp, #8]
   12784:	sub	sp, sp, #12
   12788:	bl	1124c <__errno_location@plt>
   1278c:	mov	r4, r0
   12790:	mov	r2, #0
   12794:	ldr	r3, [r4]
   12798:	mov	r0, r5
   1279c:	str	r2, [r4]
   127a0:	str	r3, [sp]
   127a4:	str	r3, [sp, #4]
   127a8:	bl	11090 <free@plt>
   127ac:	ldr	r3, [r4]
   127b0:	add	r2, sp, #8
   127b4:	clz	r3, r3
   127b8:	lsr	r3, r3, #5
   127bc:	add	r3, r2, r3, lsl #2
   127c0:	ldr	r3, [r3, #-8]
   127c4:	str	r3, [r4]
   127c8:	add	sp, sp, #12
   127cc:	ldrd	r4, [sp]
   127d0:	add	sp, sp, #8
   127d4:	pop	{pc}		; (ldr pc, [sp], #4)
   127d8:	strd	r4, [sp, #-16]!
   127dc:	subs	r4, r0, #0
   127e0:	str	r6, [sp, #8]
   127e4:	str	lr, [sp, #12]
   127e8:	beq	12880 <__snprintf_chk@plt+0x1514>
   127ec:	mov	r1, #47	; 0x2f
   127f0:	bl	1130c <strrchr@plt>
   127f4:	subs	r5, r0, #0
   127f8:	beq	12858 <__snprintf_chk@plt+0x14ec>
   127fc:	add	r6, r5, #1
   12800:	sub	r3, r6, r4
   12804:	cmp	r3, #6
   12808:	ble	12858 <__snprintf_chk@plt+0x14ec>
   1280c:	movw	r1, #27412	; 0x6b14
   12810:	movt	r1, #1
   12814:	mov	r2, #7
   12818:	sub	r0, r5, #6
   1281c:	bl	11354 <strncmp@plt>
   12820:	cmp	r0, #0
   12824:	bne	12858 <__snprintf_chk@plt+0x14ec>
   12828:	movw	r1, #27420	; 0x6b1c
   1282c:	movt	r1, #1
   12830:	mov	r2, #3
   12834:	mov	r0, r6
   12838:	bl	11354 <strncmp@plt>
   1283c:	cmp	r0, #0
   12840:	movne	r4, r6
   12844:	bne	12858 <__snprintf_chk@plt+0x14ec>
   12848:	add	r4, r5, #4
   1284c:	movw	r3, #33568	; 0x8320
   12850:	movt	r3, #2
   12854:	str	r4, [r3]
   12858:	movw	r2, #33636	; 0x8364
   1285c:	movt	r2, #2
   12860:	ldr	r6, [sp, #8]
   12864:	movw	r3, #33572	; 0x8324
   12868:	movt	r3, #2
   1286c:	str	r4, [r2]
   12870:	str	r4, [r3]
   12874:	ldrd	r4, [sp]
   12878:	add	sp, sp, #12
   1287c:	pop	{pc}		; (ldr pc, [sp], #4)
   12880:	movw	r3, #33584	; 0x8330
   12884:	movt	r3, #2
   12888:	movw	r0, #27356	; 0x6adc
   1288c:	movt	r0, #1
   12890:	ldr	r3, [r3]
   12894:	mov	r2, #55	; 0x37
   12898:	mov	r1, #1
   1289c:	bl	11150 <fwrite@plt>
   128a0:	bl	11360 <abort@plt>
   128a4:	strd	r4, [sp, #-16]!
   128a8:	mov	r4, #0
   128ac:	mov	r5, #0
   128b0:	cmp	r1, #10
   128b4:	str	r6, [sp, #8]
   128b8:	strd	r4, [r0]
   128bc:	strd	r4, [r0, #8]
   128c0:	str	lr, [sp, #12]
   128c4:	strd	r4, [r0, #16]
   128c8:	strd	r4, [r0, #24]
   128cc:	strd	r4, [r0, #32]
   128d0:	strd	r4, [r0, #40]	; 0x28
   128d4:	beq	128ec <__snprintf_chk@plt+0x1580>
   128d8:	ldrd	r4, [sp]
   128dc:	str	r1, [r0]
   128e0:	ldr	r6, [sp, #8]
   128e4:	add	sp, sp, #12
   128e8:	pop	{pc}		; (ldr pc, [sp], #4)
   128ec:	bl	11360 <abort@plt>
   128f0:	mov	r2, #5
   128f4:	strd	r4, [sp, #-16]!
   128f8:	mov	r5, r0
   128fc:	str	r6, [sp, #8]
   12900:	mov	r6, r1
   12904:	mov	r1, r0
   12908:	mov	r0, #0
   1290c:	str	lr, [sp, #12]
   12910:	bl	110f0 <dcgettext@plt>
   12914:	cmp	r5, r0
   12918:	mov	r4, r0
   1291c:	beq	12934 <__snprintf_chk@plt+0x15c8>
   12920:	mov	r0, r4
   12924:	ldrd	r4, [sp]
   12928:	ldr	r6, [sp, #8]
   1292c:	add	sp, sp, #12
   12930:	pop	{pc}		; (ldr pc, [sp], #4)
   12934:	bl	15cac <__snprintf_chk@plt+0x4940>
   12938:	ldrb	r3, [r0]
   1293c:	bic	r3, r3, #32
   12940:	cmp	r3, #85	; 0x55
   12944:	bne	129ac <__snprintf_chk@plt+0x1640>
   12948:	ldrb	r3, [r0, #1]
   1294c:	bic	r3, r3, #32
   12950:	cmp	r3, #84	; 0x54
   12954:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12958:	ldrb	r3, [r0, #2]
   1295c:	bic	r3, r3, #32
   12960:	cmp	r3, #70	; 0x46
   12964:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12968:	ldrb	r3, [r0, #3]
   1296c:	cmp	r3, #45	; 0x2d
   12970:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12974:	ldrb	r3, [r0, #4]
   12978:	cmp	r3, #56	; 0x38
   1297c:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12980:	ldrb	r3, [r0, #5]
   12984:	cmp	r3, #0
   12988:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   1298c:	ldrb	r2, [r4]
   12990:	movw	r3, #27512	; 0x6b78
   12994:	movt	r3, #1
   12998:	movw	r4, #27524	; 0x6b84
   1299c:	movt	r4, #1
   129a0:	cmp	r2, #96	; 0x60
   129a4:	movne	r4, r3
   129a8:	b	12920 <__snprintf_chk@plt+0x15b4>
   129ac:	cmp	r3, #71	; 0x47
   129b0:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129b4:	ldrb	r3, [r0, #1]
   129b8:	bic	r3, r3, #32
   129bc:	cmp	r3, #66	; 0x42
   129c0:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129c4:	ldrb	r3, [r0, #2]
   129c8:	cmp	r3, #49	; 0x31
   129cc:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129d0:	ldrb	r3, [r0, #3]
   129d4:	cmp	r3, #56	; 0x38
   129d8:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129dc:	ldrb	r3, [r0, #4]
   129e0:	cmp	r3, #48	; 0x30
   129e4:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129e8:	ldrb	r3, [r0, #5]
   129ec:	cmp	r3, #51	; 0x33
   129f0:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   129f4:	ldrb	r3, [r0, #6]
   129f8:	cmp	r3, #48	; 0x30
   129fc:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12a00:	ldrb	r3, [r0, #7]
   12a04:	cmp	r3, #0
   12a08:	bne	12a2c <__snprintf_chk@plt+0x16c0>
   12a0c:	ldrb	r2, [r4]
   12a10:	movw	r3, #27516	; 0x6b7c
   12a14:	movt	r3, #1
   12a18:	movw	r4, #27520	; 0x6b80
   12a1c:	movt	r4, #1
   12a20:	cmp	r2, #96	; 0x60
   12a24:	movne	r4, r3
   12a28:	b	12920 <__snprintf_chk@plt+0x15b4>
   12a2c:	movw	r3, #27528	; 0x6b88
   12a30:	movt	r3, #1
   12a34:	cmp	r6, #9
   12a38:	movw	r4, #27508	; 0x6b74
   12a3c:	movt	r4, #1
   12a40:	movne	r4, r3
   12a44:	b	12920 <__snprintf_chk@plt+0x15b4>
   12a48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12a4c:	strd	r6, [sp, #8]
   12a50:	strd	r8, [sp, #16]
   12a54:	strd	sl, [sp, #24]
   12a58:	mov	fp, r0
   12a5c:	mov	sl, r1
   12a60:	str	lr, [sp, #32]
   12a64:	sub	sp, sp, #116	; 0x74
   12a68:	ldr	r8, [sp, #152]	; 0x98
   12a6c:	str	r3, [sp, #28]
   12a70:	ldr	r3, [sp, #156]	; 0x9c
   12a74:	str	r2, [sp, #32]
   12a78:	and	r4, r3, #2
   12a7c:	ubfx	r3, r3, #1, #1
   12a80:	str	r3, [sp, #44]	; 0x2c
   12a84:	bl	11174 <__ctype_get_mb_cur_max@plt>
   12a88:	str	r0, [sp, #64]	; 0x40
   12a8c:	cmp	r8, #10
   12a90:	ldrls	pc, [pc, r8, lsl #2]
   12a94:	b	14204 <__snprintf_chk@plt+0x2e98>
   12a98:	muleq	r1, ip, lr
   12a9c:	andeq	r2, r1, r8, lsr pc
   12aa0:	andeq	r3, r1, r4, lsl r5
   12aa4:	andeq	r2, r1, r8, asr pc
   12aa8:	andeq	r2, r1, r0, lsl #28
   12aac:	andeq	r2, r1, ip, asr #28
   12ab0:	andeq	r2, r1, ip, asr #29
   12ab4:	andeq	r2, r1, r8, lsl #30
   12ab8:	andeq	r2, r1, r4, asr #21
   12abc:	andeq	r2, r1, r4, asr #21
   12ac0:	andeq	r2, r1, r4, asr #21
   12ac4:	cmp	r8, #10
   12ac8:	beq	12af4 <__snprintf_chk@plt+0x1788>
   12acc:	mov	r1, r8
   12ad0:	movw	r0, #27532	; 0x6b8c
   12ad4:	movt	r0, #1
   12ad8:	bl	128f0 <__snprintf_chk@plt+0x1584>
   12adc:	mov	r1, r8
   12ae0:	str	r0, [sp, #164]	; 0xa4
   12ae4:	movw	r0, #27528	; 0x6b88
   12ae8:	movt	r0, #1
   12aec:	bl	128f0 <__snprintf_chk@plt+0x1584>
   12af0:	str	r0, [sp, #168]	; 0xa8
   12af4:	cmp	r4, #0
   12af8:	movne	r4, #0
   12afc:	beq	13ee0 <__snprintf_chk@plt+0x2b74>
   12b00:	mov	r3, #1
   12b04:	mov	r5, #0
   12b08:	ldr	r0, [sp, #168]	; 0xa8
   12b0c:	str	r3, [sp, #36]	; 0x24
   12b10:	str	r3, [sp, #40]	; 0x28
   12b14:	str	r5, [sp, #68]	; 0x44
   12b18:	bl	11228 <strlen@plt>
   12b1c:	ldr	r3, [sp, #168]	; 0xa8
   12b20:	str	r5, [sp, #48]	; 0x30
   12b24:	str	r0, [sp, #56]	; 0x38
   12b28:	str	r3, [sp, #60]	; 0x3c
   12b2c:	str	r5, [sp, #72]	; 0x48
   12b30:	str	r8, [sp, #152]	; 0x98
   12b34:	mov	r8, fp
   12b38:	mov	r9, #0
   12b3c:	ldr	fp, [sp, #152]	; 0x98
   12b40:	ldr	r3, [sp, #28]
   12b44:	cmn	r3, #1
   12b48:	beq	130a8 <__snprintf_chk@plt+0x1d3c>
   12b4c:	ldr	r3, [sp, #28]
   12b50:	subs	r6, r3, r9
   12b54:	movne	r6, #1
   12b58:	cmp	r6, #0
   12b5c:	beq	130c0 <__snprintf_chk@plt+0x1d54>
   12b60:	ldr	r0, [sp, #32]
   12b64:	ldr	r7, [sp, #40]	; 0x28
   12b68:	add	r3, r0, r9
   12b6c:	cmp	fp, #2
   12b70:	moveq	r7, #0
   12b74:	andne	r7, r7, #1
   12b78:	str	r3, [sp, #52]	; 0x34
   12b7c:	cmp	r7, #0
   12b80:	beq	1355c <__snprintf_chk@plt+0x21f0>
   12b84:	ldr	r2, [sp, #56]	; 0x38
   12b88:	cmp	r2, #0
   12b8c:	beq	137f8 <__snprintf_chk@plt+0x248c>
   12b90:	ldr	r1, [sp, #28]
   12b94:	cmp	r2, #1
   12b98:	mov	r3, r2
   12b9c:	movls	r3, #0
   12ba0:	movhi	r3, #1
   12ba4:	add	r5, r9, r2
   12ba8:	cmn	r1, #1
   12bac:	movne	r3, #0
   12bb0:	cmp	r3, #0
   12bb4:	beq	12bc0 <__snprintf_chk@plt+0x1854>
   12bb8:	bl	11228 <strlen@plt>
   12bbc:	str	r0, [sp, #28]
   12bc0:	ldr	r3, [sp, #28]
   12bc4:	cmp	r5, r3
   12bc8:	bhi	137f8 <__snprintf_chk@plt+0x248c>
   12bcc:	ldr	r0, [sp, #52]	; 0x34
   12bd0:	ldr	r2, [sp, #56]	; 0x38
   12bd4:	ldr	r1, [sp, #60]	; 0x3c
   12bd8:	bl	110d8 <memcmp@plt>
   12bdc:	cmp	r0, #0
   12be0:	bne	137f8 <__snprintf_chk@plt+0x248c>
   12be4:	ldr	r3, [sp, #44]	; 0x2c
   12be8:	cmp	r3, #0
   12bec:	bne	14128 <__snprintf_chk@plt+0x2dbc>
   12bf0:	ldr	r3, [sp, #52]	; 0x34
   12bf4:	ldrb	r5, [r3]
   12bf8:	cmp	r5, #126	; 0x7e
   12bfc:	ldrls	pc, [pc, r5, lsl #2]
   12c00:	b	134b8 <__snprintf_chk@plt+0x214c>
   12c04:			; <UNDEFINED> instruction: 0x000133bc
   12c08:			; <UNDEFINED> instruction: 0x000134b8
   12c0c:			; <UNDEFINED> instruction: 0x000134b8
   12c10:			; <UNDEFINED> instruction: 0x000134b8
   12c14:			; <UNDEFINED> instruction: 0x000134b8
   12c18:			; <UNDEFINED> instruction: 0x000134b8
   12c1c:			; <UNDEFINED> instruction: 0x000134b8
   12c20:	muleq	r1, r0, r3
   12c24:	andeq	r3, r1, r8, lsl #7
   12c28:	ldrdeq	r3, [r1], -r0
   12c2c:	andeq	r3, r1, ip, ror r3
   12c30:	andeq	r3, r1, r8, asr #5
   12c34:	andeq	r3, r1, r8, asr r3
   12c38:	andeq	r3, r1, r4, lsr #7
   12c3c:			; <UNDEFINED> instruction: 0x000134b8
   12c40:			; <UNDEFINED> instruction: 0x000134b8
   12c44:			; <UNDEFINED> instruction: 0x000134b8
   12c48:			; <UNDEFINED> instruction: 0x000134b8
   12c4c:			; <UNDEFINED> instruction: 0x000134b8
   12c50:			; <UNDEFINED> instruction: 0x000134b8
   12c54:			; <UNDEFINED> instruction: 0x000134b8
   12c58:			; <UNDEFINED> instruction: 0x000134b8
   12c5c:			; <UNDEFINED> instruction: 0x000134b8
   12c60:			; <UNDEFINED> instruction: 0x000134b8
   12c64:			; <UNDEFINED> instruction: 0x000134b8
   12c68:			; <UNDEFINED> instruction: 0x000134b8
   12c6c:			; <UNDEFINED> instruction: 0x000134b8
   12c70:			; <UNDEFINED> instruction: 0x000134b8
   12c74:			; <UNDEFINED> instruction: 0x000134b8
   12c78:			; <UNDEFINED> instruction: 0x000134b8
   12c7c:			; <UNDEFINED> instruction: 0x000134b8
   12c80:			; <UNDEFINED> instruction: 0x000134b8
   12c84:	muleq	r1, r4, r4
   12c88:	muleq	r1, ip, r3
   12c8c:	muleq	r1, ip, r3
   12c90:	andeq	r3, r1, r8, ror r4
   12c94:	muleq	r1, ip, r3
   12c98:	andeq	r3, r1, ip, lsr #9
   12c9c:	muleq	r1, ip, r3
   12ca0:	strdeq	r3, [r1], -r8
   12ca4:	muleq	r1, ip, r3
   12ca8:	muleq	r1, ip, r3
   12cac:	muleq	r1, ip, r3
   12cb0:	andeq	r3, r1, ip, lsr #9
   12cb4:	andeq	r3, r1, ip, lsr #9
   12cb8:	andeq	r3, r1, ip, lsr #9
   12cbc:	andeq	r3, r1, ip, lsr #9
   12cc0:	andeq	r3, r1, ip, lsr #9
   12cc4:	andeq	r3, r1, ip, lsr #9
   12cc8:	andeq	r3, r1, ip, lsr #9
   12ccc:	andeq	r3, r1, ip, lsr #9
   12cd0:	andeq	r3, r1, ip, lsr #9
   12cd4:	andeq	r3, r1, ip, lsr #9
   12cd8:	andeq	r3, r1, ip, lsr #9
   12cdc:	andeq	r3, r1, ip, lsr #9
   12ce0:	andeq	r3, r1, ip, lsr #9
   12ce4:	andeq	r3, r1, ip, lsr #9
   12ce8:	andeq	r3, r1, ip, lsr #9
   12cec:	andeq	r3, r1, ip, lsr #9
   12cf0:	muleq	r1, ip, r3
   12cf4:	muleq	r1, ip, r3
   12cf8:	muleq	r1, ip, r3
   12cfc:	muleq	r1, ip, r3
   12d00:	andeq	r3, r1, ip, asr #3
   12d04:			; <UNDEFINED> instruction: 0x000134b8
   12d08:	andeq	r3, r1, ip, lsr #9
   12d0c:	andeq	r3, r1, ip, lsr #9
   12d10:	andeq	r3, r1, ip, lsr #9
   12d14:	andeq	r3, r1, ip, lsr #9
   12d18:	andeq	r3, r1, ip, lsr #9
   12d1c:	andeq	r3, r1, ip, lsr #9
   12d20:	andeq	r3, r1, ip, lsr #9
   12d24:	andeq	r3, r1, ip, lsr #9
   12d28:	andeq	r3, r1, ip, lsr #9
   12d2c:	andeq	r3, r1, ip, lsr #9
   12d30:	andeq	r3, r1, ip, lsr #9
   12d34:	andeq	r3, r1, ip, lsr #9
   12d38:	andeq	r3, r1, ip, lsr #9
   12d3c:	andeq	r3, r1, ip, lsr #9
   12d40:	andeq	r3, r1, ip, lsr #9
   12d44:	andeq	r3, r1, ip, lsr #9
   12d48:	andeq	r3, r1, ip, lsr #9
   12d4c:	andeq	r3, r1, ip, lsr #9
   12d50:	andeq	r3, r1, ip, lsr #9
   12d54:	andeq	r3, r1, ip, lsr #9
   12d58:	andeq	r3, r1, ip, lsr #9
   12d5c:	andeq	r3, r1, ip, lsr #9
   12d60:	andeq	r3, r1, ip, lsr #9
   12d64:	andeq	r3, r1, ip, lsr #9
   12d68:	andeq	r3, r1, ip, lsr #9
   12d6c:	andeq	r3, r1, ip, lsr #9
   12d70:	muleq	r1, ip, r3
   12d74:	andeq	r3, r1, r4, ror r1
   12d78:	andeq	r3, r1, ip, lsr #9
   12d7c:	muleq	r1, ip, r3
   12d80:	andeq	r3, r1, ip, lsr #9
   12d84:	muleq	r1, ip, r3
   12d88:	andeq	r3, r1, ip, lsr #9
   12d8c:	andeq	r3, r1, ip, lsr #9
   12d90:	andeq	r3, r1, ip, lsr #9
   12d94:	andeq	r3, r1, ip, lsr #9
   12d98:	andeq	r3, r1, ip, lsr #9
   12d9c:	andeq	r3, r1, ip, lsr #9
   12da0:	andeq	r3, r1, ip, lsr #9
   12da4:	andeq	r3, r1, ip, lsr #9
   12da8:	andeq	r3, r1, ip, lsr #9
   12dac:	andeq	r3, r1, ip, lsr #9
   12db0:	andeq	r3, r1, ip, lsr #9
   12db4:	andeq	r3, r1, ip, lsr #9
   12db8:	andeq	r3, r1, ip, lsr #9
   12dbc:	andeq	r3, r1, ip, lsr #9
   12dc0:	andeq	r3, r1, ip, lsr #9
   12dc4:	andeq	r3, r1, ip, lsr #9
   12dc8:	andeq	r3, r1, ip, lsr #9
   12dcc:	andeq	r3, r1, ip, lsr #9
   12dd0:	andeq	r3, r1, ip, lsr #9
   12dd4:	andeq	r3, r1, ip, lsr #9
   12dd8:	andeq	r3, r1, ip, lsr #9
   12ddc:	andeq	r3, r1, ip, lsr #9
   12de0:	andeq	r3, r1, ip, lsr #9
   12de4:	andeq	r3, r1, ip, lsr #9
   12de8:	andeq	r3, r1, ip, lsr #9
   12dec:	andeq	r3, r1, ip, lsr #9
   12df0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12df4:	muleq	r1, ip, r3
   12df8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12dfc:	andeq	r3, r1, r8, ror r4
   12e00:	cmp	r4, #0
   12e04:	moveq	r3, #1
   12e08:	streq	r3, [sp, #40]	; 0x28
   12e0c:	beq	13520 <__snprintf_chk@plt+0x21b4>
   12e10:	mov	r3, #0
   12e14:	mov	r2, #1
   12e18:	mov	r4, r3
   12e1c:	str	r2, [sp, #36]	; 0x24
   12e20:	str	r2, [sp, #44]	; 0x2c
   12e24:	str	r2, [sp, #56]	; 0x38
   12e28:	str	r3, [sp, #68]	; 0x44
   12e2c:	movw	r3, #27528	; 0x6b88
   12e30:	movt	r3, #1
   12e34:	str	r4, [sp, #40]	; 0x28
   12e38:	mov	r8, #2
   12e3c:	str	r4, [sp, #48]	; 0x30
   12e40:	str	r3, [sp, #60]	; 0x3c
   12e44:	str	r4, [sp, #72]	; 0x48
   12e48:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12e4c:	cmp	r4, #0
   12e50:	bne	1409c <__snprintf_chk@plt+0x2d30>
   12e54:	cmp	sl, #0
   12e58:	beq	13e5c <__snprintf_chk@plt+0x2af0>
   12e5c:	mov	r3, #34	; 0x22
   12e60:	mov	r1, r4
   12e64:	mov	r2, #1
   12e68:	strb	r3, [fp]
   12e6c:	movw	r3, #27508	; 0x6b74
   12e70:	movt	r3, #1
   12e74:	mov	r4, r2
   12e78:	str	r2, [sp, #36]	; 0x24
   12e7c:	str	r2, [sp, #40]	; 0x28
   12e80:	str	r1, [sp, #44]	; 0x2c
   12e84:	str	r1, [sp, #48]	; 0x30
   12e88:	str	r2, [sp, #56]	; 0x38
   12e8c:	str	r3, [sp, #60]	; 0x3c
   12e90:	str	r1, [sp, #68]	; 0x44
   12e94:	str	r1, [sp, #72]	; 0x48
   12e98:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12e9c:	mov	r3, #0
   12ea0:	mov	r4, r8
   12ea4:	str	r3, [sp, #40]	; 0x28
   12ea8:	str	r3, [sp, #44]	; 0x2c
   12eac:	str	r3, [sp, #48]	; 0x30
   12eb0:	str	r8, [sp, #56]	; 0x38
   12eb4:	str	r3, [sp, #60]	; 0x3c
   12eb8:	str	r3, [sp, #68]	; 0x44
   12ebc:	mov	r3, #1
   12ec0:	str	r3, [sp, #36]	; 0x24
   12ec4:	str	r8, [sp, #72]	; 0x48
   12ec8:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12ecc:	mov	r3, #1
   12ed0:	mov	r2, #0
   12ed4:	mov	r4, r2
   12ed8:	mov	r8, #5
   12edc:	str	r3, [sp, #36]	; 0x24
   12ee0:	str	r3, [sp, #40]	; 0x28
   12ee4:	str	r3, [sp, #44]	; 0x2c
   12ee8:	str	r2, [sp, #48]	; 0x30
   12eec:	str	r3, [sp, #56]	; 0x38
   12ef0:	movw	r3, #27508	; 0x6b74
   12ef4:	movt	r3, #1
   12ef8:	str	r3, [sp, #60]	; 0x3c
   12efc:	str	r2, [sp, #68]	; 0x44
   12f00:	str	r2, [sp, #72]	; 0x48
   12f04:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12f08:	mov	r3, #0
   12f0c:	mov	r2, #1
   12f10:	mov	r4, r3
   12f14:	str	r2, [sp, #36]	; 0x24
   12f18:	str	r2, [sp, #40]	; 0x28
   12f1c:	str	r3, [sp, #44]	; 0x2c
   12f20:	str	r3, [sp, #48]	; 0x30
   12f24:	str	r3, [sp, #56]	; 0x38
   12f28:	str	r3, [sp, #60]	; 0x3c
   12f2c:	str	r3, [sp, #68]	; 0x44
   12f30:	str	r3, [sp, #72]	; 0x48
   12f34:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12f38:	mov	r2, #1
   12f3c:	mov	r3, #0
   12f40:	mov	r4, r3
   12f44:	str	r2, [sp, #36]	; 0x24
   12f48:	str	r2, [sp, #44]	; 0x2c
   12f4c:	str	r8, [sp, #56]	; 0x38
   12f50:	str	r3, [sp, #68]	; 0x44
   12f54:	b	12e2c <__snprintf_chk@plt+0x1ac0>
   12f58:	mov	r3, #1
   12f5c:	mov	r2, #0
   12f60:	mov	r4, r2
   12f64:	mov	r8, #2
   12f68:	str	r3, [sp, #36]	; 0x24
   12f6c:	str	r3, [sp, #40]	; 0x28
   12f70:	str	r3, [sp, #44]	; 0x2c
   12f74:	str	r2, [sp, #48]	; 0x30
   12f78:	str	r3, [sp, #56]	; 0x38
   12f7c:	movw	r3, #27528	; 0x6b88
   12f80:	movt	r3, #1
   12f84:	str	r3, [sp, #60]	; 0x3c
   12f88:	str	r2, [sp, #68]	; 0x44
   12f8c:	str	r2, [sp, #72]	; 0x48
   12f90:	b	12b30 <__snprintf_chk@plt+0x17c4>
   12f94:	mov	r7, #0
   12f98:	ldr	r3, [sp, #28]
   12f9c:	cmn	r3, #1
   12fa0:	beq	13a78 <__snprintf_chk@plt+0x270c>
   12fa4:	ldr	r3, [sp, #28]
   12fa8:	subs	r2, r3, #1
   12fac:	movne	r2, #1
   12fb0:	sub	r3, fp, #2
   12fb4:	cmp	r2, #0
   12fb8:	clz	r3, r3
   12fbc:	lsr	r3, r3, #5
   12fc0:	bne	12fcc <__snprintf_chk@plt+0x1c60>
   12fc4:	cmp	r9, #0
   12fc8:	beq	137d8 <__snprintf_chk@plt+0x246c>
   12fcc:	mov	r6, #0
   12fd0:	ldr	r2, [sp, #40]	; 0x28
   12fd4:	eor	r2, r2, #1
   12fd8:	orrs	r3, r3, r2
   12fdc:	bne	131b4 <__snprintf_chk@plt+0x1e48>
   12fe0:	ldr	r2, [sp, #160]	; 0xa0
   12fe4:	cmp	r2, #0
   12fe8:	beq	13008 <__snprintf_chk@plt+0x1c9c>
   12fec:	ldr	r0, [sp, #160]	; 0xa0
   12ff0:	ubfx	r1, r5, #5, #8
   12ff4:	and	r2, r5, #31
   12ff8:	ldr	r1, [r0, r1, lsl #2]
   12ffc:	lsr	r2, r1, r2
   13000:	tst	r2, #1
   13004:	bne	13010 <__snprintf_chk@plt+0x1ca4>
   13008:	cmp	r7, #0
   1300c:	beq	13280 <__snprintf_chk@plt+0x1f14>
   13010:	ldr	r2, [sp, #44]	; 0x2c
   13014:	sub	r3, fp, #2
   13018:	clz	r3, r3
   1301c:	lsr	r3, r3, #5
   13020:	cmp	r2, #0
   13024:	bne	13dcc <__snprintf_chk@plt+0x2a60>
   13028:	ldr	r2, [sp, #48]	; 0x30
   1302c:	eor	r2, r2, #1
   13030:	ands	r3, r3, r2
   13034:	beq	1306c <__snprintf_chk@plt+0x1d00>
   13038:	cmp	sl, r4
   1303c:	str	r3, [sp, #48]	; 0x30
   13040:	movhi	r2, #39	; 0x27
   13044:	strbhi	r2, [r8, r4]
   13048:	add	r2, r4, #1
   1304c:	cmp	sl, r2
   13050:	movhi	r1, #36	; 0x24
   13054:	strbhi	r1, [r8, r2]
   13058:	add	r2, r4, #2
   1305c:	add	r4, r4, #3
   13060:	cmp	sl, r2
   13064:	movhi	r1, #39	; 0x27
   13068:	strbhi	r1, [r8, r2]
   1306c:	cmp	r4, sl
   13070:	add	r9, r9, #1
   13074:	movcc	r3, #92	; 0x5c
   13078:	strbcc	r3, [r8, r4]
   1307c:	add	r4, r4, #1
   13080:	cmp	r4, sl
   13084:	ldr	r3, [sp, #36]	; 0x24
   13088:	strbcc	r5, [r8, r4]
   1308c:	cmp	r6, #0
   13090:	add	r4, r4, #1
   13094:	moveq	r3, #0
   13098:	str	r3, [sp, #36]	; 0x24
   1309c:	ldr	r3, [sp, #28]
   130a0:	cmn	r3, #1
   130a4:	bne	12b4c <__snprintf_chk@plt+0x17e0>
   130a8:	ldr	r3, [sp, #32]
   130ac:	ldrb	r6, [r3, r9]
   130b0:	adds	r6, r6, #0
   130b4:	movne	r6, #1
   130b8:	cmp	r6, #0
   130bc:	bne	12b60 <__snprintf_chk@plt+0x17f4>
   130c0:	str	fp, [sp, #152]	; 0x98
   130c4:	mov	fp, r8
   130c8:	cmp	r4, #0
   130cc:	ldr	r1, [sp, #44]	; 0x2c
   130d0:	movne	r3, #0
   130d4:	ldr	r8, [sp, #152]	; 0x98
   130d8:	sub	r2, r8, #2
   130dc:	clz	r2, r2
   130e0:	lsr	r2, r2, #5
   130e4:	andeq	r3, r2, r1
   130e8:	cmp	r3, #0
   130ec:	bne	141a8 <__snprintf_chk@plt+0x2e3c>
   130f0:	eor	r3, r1, #1
   130f4:	ands	r2, r2, r3
   130f8:	beq	140d4 <__snprintf_chk@plt+0x2d68>
   130fc:	ldr	r3, [sp, #68]	; 0x44
   13100:	cmp	r3, #0
   13104:	beq	140d8 <__snprintf_chk@plt+0x2d6c>
   13108:	ldr	r3, [sp, #36]	; 0x24
   1310c:	cmp	r3, #0
   13110:	bne	14164 <__snprintf_chk@plt+0x2df8>
   13114:	ldr	r3, [sp, #72]	; 0x48
   13118:	adds	r3, r3, #0
   1311c:	movne	r3, #1
   13120:	cmp	sl, #0
   13124:	movne	r3, #0
   13128:	cmp	r3, #0
   1312c:	ldreq	r2, [sp, #68]	; 0x44
   13130:	beq	140d8 <__snprintf_chk@plt+0x2d6c>
   13134:	ldr	r2, [sp, #72]	; 0x48
   13138:	str	r3, [sp, #68]	; 0x44
   1313c:	movw	r3, #27528	; 0x6b88
   13140:	movt	r3, #1
   13144:	mov	r1, #39	; 0x27
   13148:	mov	r4, #1
   1314c:	ldr	sl, [sp, #72]	; 0x48
   13150:	mov	r8, #2
   13154:	str	r3, [sp, #60]	; 0x3c
   13158:	mov	r3, #0
   1315c:	strb	r1, [fp]
   13160:	str	r3, [sp, #44]	; 0x2c
   13164:	str	r4, [sp, #56]	; 0x38
   13168:	str	r2, [sp, #72]	; 0x48
   1316c:	b	12b30 <__snprintf_chk@plt+0x17c4>
   13170:	mov	r7, #0
   13174:	cmp	fp, #2
   13178:	beq	13a58 <__snprintf_chk@plt+0x26ec>
   1317c:	ldr	r2, [sp, #40]	; 0x28
   13180:	ldr	r3, [sp, #56]	; 0x38
   13184:	ldr	r1, [sp, #44]	; 0x2c
   13188:	cmp	r3, #0
   1318c:	moveq	r3, #0
   13190:	andne	r3, r2, r1
   13194:	cmp	r3, #0
   13198:	moveq	r5, #92	; 0x5c
   1319c:	moveq	r3, r5
   131a0:	bne	13a64 <__snprintf_chk@plt+0x26f8>
   131a4:	ldr	r2, [sp, #40]	; 0x28
   131a8:	cmp	r2, #0
   131ac:	bne	13ea0 <__snprintf_chk@plt+0x2b34>
   131b0:	mov	r6, #0
   131b4:	ldr	r3, [sp, #44]	; 0x2c
   131b8:	cmp	r3, #0
   131bc:	beq	13a50 <__snprintf_chk@plt+0x26e4>
   131c0:	mov	r3, #0
   131c4:	b	12fe0 <__snprintf_chk@plt+0x1c74>
   131c8:	mov	r7, #0
   131cc:	cmp	fp, #2
   131d0:	beq	13ac8 <__snprintf_chk@plt+0x275c>
   131d4:	cmp	fp, #5
   131d8:	beq	13a8c <__snprintf_chk@plt+0x2720>
   131dc:	sub	r3, fp, #2
   131e0:	mov	r6, #0
   131e4:	clz	r3, r3
   131e8:	mov	r5, #63	; 0x3f
   131ec:	lsr	r3, r3, #5
   131f0:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   131f4:	mov	r7, #0
   131f8:	cmp	fp, #2
   131fc:	movne	r3, #0
   13200:	movne	r5, #39	; 0x27
   13204:	strne	r6, [sp, #68]	; 0x44
   13208:	bne	12fd0 <__snprintf_chk@plt+0x1c64>
   1320c:	ldr	r3, [sp, #44]	; 0x2c
   13210:	cmp	r3, #0
   13214:	bne	13ed0 <__snprintf_chk@plt+0x2b64>
   13218:	ldr	r3, [sp, #72]	; 0x48
   1321c:	cmp	sl, #0
   13220:	clz	r3, r3
   13224:	lsr	r3, r3, #5
   13228:	moveq	r3, #0
   1322c:	cmp	r3, #0
   13230:	bne	13dfc <__snprintf_chk@plt+0x2a90>
   13234:	cmp	sl, r4
   13238:	movhi	r3, #39	; 0x27
   1323c:	strbhi	r3, [r8, r4]
   13240:	add	r3, r4, #1
   13244:	cmp	sl, r3
   13248:	movhi	r2, #92	; 0x5c
   1324c:	strbhi	r2, [r8, r3]
   13250:	add	r3, r4, #2
   13254:	cmp	sl, r3
   13258:	bls	13264 <__snprintf_chk@plt+0x1ef8>
   1325c:	mov	r2, #39	; 0x27
   13260:	strb	r2, [r8, r3]
   13264:	mov	r3, #0
   13268:	cmp	r7, #0
   1326c:	add	r4, r4, #3
   13270:	mov	r5, #39	; 0x27
   13274:	str	r3, [sp, #48]	; 0x30
   13278:	str	r6, [sp, #68]	; 0x44
   1327c:	bne	13010 <__snprintf_chk@plt+0x1ca4>
   13280:	ldr	r2, [sp, #48]	; 0x30
   13284:	eor	r3, r3, #1
   13288:	add	r9, r9, #1
   1328c:	and	r3, r3, r2
   13290:	uxtb	r3, r3
   13294:	cmp	r3, #0
   13298:	beq	13080 <__snprintf_chk@plt+0x1d14>
   1329c:	cmp	sl, r4
   132a0:	movhi	r3, #39	; 0x27
   132a4:	strbhi	r3, [r8, r4]
   132a8:	add	r3, r4, #1
   132ac:	add	r4, r4, #2
   132b0:	cmp	sl, r3
   132b4:	movhi	r2, #39	; 0x27
   132b8:	strbhi	r2, [r8, r3]
   132bc:	mov	r3, #0
   132c0:	str	r3, [sp, #48]	; 0x30
   132c4:	b	13080 <__snprintf_chk@plt+0x1d14>
   132c8:	mov	r3, #118	; 0x76
   132cc:	b	131a4 <__snprintf_chk@plt+0x1e38>
   132d0:	mov	r3, #116	; 0x74
   132d4:	ldr	r2, [sp, #44]	; 0x2c
   132d8:	cmp	fp, #2
   132dc:	movne	r2, #0
   132e0:	andeq	r2, r2, #1
   132e4:	cmp	r2, #0
   132e8:	beq	131a4 <__snprintf_chk@plt+0x1e38>
   132ec:	mov	fp, r8
   132f0:	mov	r8, #2
   132f4:	ldr	r3, [sp, #40]	; 0x28
   132f8:	cmp	r3, #0
   132fc:	movne	r8, #4
   13300:	mov	lr, #0
   13304:	mov	r0, fp
   13308:	ldr	r2, [sp, #32]
   1330c:	ldr	r3, [sp, #156]	; 0x9c
   13310:	ldr	r1, [sp, #164]	; 0xa4
   13314:	bic	ip, r3, #2
   13318:	ldr	r3, [sp, #28]
   1331c:	stm	sp, {r8, ip, lr}
   13320:	ldr	ip, [sp, #168]	; 0xa8
   13324:	str	r1, [sp, #12]
   13328:	mov	r1, sl
   1332c:	str	ip, [sp, #16]
   13330:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   13334:	mov	r4, r0
   13338:	mov	r0, r4
   1333c:	add	sp, sp, #116	; 0x74
   13340:	ldrd	r4, [sp]
   13344:	ldrd	r6, [sp, #8]
   13348:	ldrd	r8, [sp, #16]
   1334c:	ldrd	sl, [sp, #24]
   13350:	add	sp, sp, #32
   13354:	pop	{pc}		; (ldr pc, [sp], #4)
   13358:	mov	r5, #102	; 0x66
   1335c:	ldr	r2, [sp, #44]	; 0x2c
   13360:	sub	r3, fp, #2
   13364:	clz	r3, r3
   13368:	lsr	r3, r3, #5
   1336c:	cmp	r2, #0
   13370:	bne	13dcc <__snprintf_chk@plt+0x2a60>
   13374:	mov	r6, r2
   13378:	b	1306c <__snprintf_chk@plt+0x1d00>
   1337c:	mov	r5, #110	; 0x6e
   13380:	mov	r6, #0
   13384:	b	13010 <__snprintf_chk@plt+0x1ca4>
   13388:	mov	r5, #98	; 0x62
   1338c:	b	1335c <__snprintf_chk@plt+0x1ff0>
   13390:	mov	r5, #97	; 0x61
   13394:	b	1335c <__snprintf_chk@plt+0x1ff0>
   13398:	mov	r7, #0
   1339c:	mov	r6, #0
   133a0:	b	131c0 <__snprintf_chk@plt+0x1e54>
   133a4:	mov	r5, #114	; 0x72
   133a8:	b	13380 <__snprintf_chk@plt+0x2014>
   133ac:	ldr	r3, [sp, #44]	; 0x2c
   133b0:	cmp	r3, #0
   133b4:	bne	14144 <__snprintf_chk@plt+0x2dd8>
   133b8:	mov	r7, r3
   133bc:	ldr	r3, [sp, #48]	; 0x30
   133c0:	sub	r2, fp, #2
   133c4:	clz	r2, r2
   133c8:	lsr	r2, r2, #5
   133cc:	eor	r3, r3, #1
   133d0:	ands	r3, r2, r3
   133d4:	beq	13de8 <__snprintf_chk@plt+0x2a7c>
   133d8:	cmp	sl, r4
   133dc:	movhi	r1, #39	; 0x27
   133e0:	strbhi	r1, [r8, r4]
   133e4:	add	r1, r4, #1
   133e8:	cmp	sl, r1
   133ec:	movhi	r0, #36	; 0x24
   133f0:	strbhi	r0, [r8, r1]
   133f4:	add	r1, r4, #2
   133f8:	cmp	sl, r1
   133fc:	movhi	r0, #39	; 0x27
   13400:	strbhi	r0, [r8, r1]
   13404:	add	r1, r4, #3
   13408:	cmp	sl, r1
   1340c:	bls	13e40 <__snprintf_chk@plt+0x2ad4>
   13410:	mov	r4, r1
   13414:	mov	r1, #92	; 0x5c
   13418:	mov	r0, r4
   1341c:	str	r3, [sp, #48]	; 0x30
   13420:	strb	r1, [r8, r4]
   13424:	cmp	fp, #2
   13428:	add	r4, r4, #1
   1342c:	beq	13e90 <__snprintf_chk@plt+0x2b24>
   13430:	ldr	r1, [sp, #28]
   13434:	add	r3, r9, #1
   13438:	cmp	r3, r1
   1343c:	bcs	13454 <__snprintf_chk@plt+0x20e8>
   13440:	ldr	r1, [sp, #32]
   13444:	ldrb	r3, [r1, r3]
   13448:	sub	r3, r3, #48	; 0x30
   1344c:	cmp	r3, #9
   13450:	bls	13ea8 <__snprintf_chk@plt+0x2b3c>
   13454:	mov	r5, #48	; 0x30
   13458:	ldr	r3, [sp, #40]	; 0x28
   1345c:	eor	r3, r3, #1
   13460:	orrs	r2, r2, r3
   13464:	mov	r3, r6
   13468:	moveq	r6, r2
   1346c:	beq	12fe0 <__snprintf_chk@plt+0x1c74>
   13470:	mov	r6, #0
   13474:	b	13008 <__snprintf_chk@plt+0x1c9c>
   13478:	cmp	r9, #0
   1347c:	mov	r2, r7
   13480:	bne	13a20 <__snprintf_chk@plt+0x26b4>
   13484:	mov	r6, r7
   13488:	mov	r3, r9
   1348c:	mov	r7, r2
   13490:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   13494:	mov	r2, r7
   13498:	mov	r6, r7
   1349c:	mov	r3, #0
   134a0:	mov	r7, r2
   134a4:	mov	r5, #32
   134a8:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   134ac:	mov	r6, r7
   134b0:	b	131c0 <__snprintf_chk@plt+0x1e54>
   134b4:	mov	r7, #0
   134b8:	ldr	r3, [sp, #64]	; 0x40
   134bc:	cmp	r3, #1
   134c0:	bne	13ae0 <__snprintf_chk@plt+0x2774>
   134c4:	bl	11210 <__ctype_b_loc@plt>
   134c8:	ldr	r2, [r0]
   134cc:	sxth	r3, r5
   134d0:	lsl	r3, r3, #1
   134d4:	ldr	r1, [sp, #64]	; 0x40
   134d8:	ldrh	r3, [r2, r3]
   134dc:	mov	ip, r1
   134e0:	and	r3, r3, #16384	; 0x4000
   134e4:	cmp	r3, #0
   134e8:	ldr	r3, [sp, #40]	; 0x28
   134ec:	movne	r6, #1
   134f0:	moveq	r6, #0
   134f4:	movne	r2, #0
   134f8:	andeq	r2, r3, #1
   134fc:	cmp	r2, #0
   13500:	bne	13e28 <__snprintf_chk@plt+0x2abc>
   13504:	sub	r3, fp, #2
   13508:	clz	r3, r3
   1350c:	lsr	r3, r3, #5
   13510:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   13514:	cmp	r4, #0
   13518:	bne	141b8 <__snprintf_chk@plt+0x2e4c>
   1351c:	str	r4, [sp, #40]	; 0x28
   13520:	cmp	sl, #0
   13524:	bne	141e8 <__snprintf_chk@plt+0x2e7c>
   13528:	mov	r3, #1
   1352c:	movw	r2, #27528	; 0x6b88
   13530:	movt	r2, #1
   13534:	mov	r4, r3
   13538:	mov	r8, #2
   1353c:	str	r3, [sp, #36]	; 0x24
   13540:	str	sl, [sp, #44]	; 0x2c
   13544:	str	sl, [sp, #48]	; 0x30
   13548:	str	r3, [sp, #56]	; 0x38
   1354c:	str	r2, [sp, #60]	; 0x3c
   13550:	str	sl, [sp, #68]	; 0x44
   13554:	str	sl, [sp, #72]	; 0x48
   13558:	b	12b30 <__snprintf_chk@plt+0x17c4>
   1355c:	ldr	r3, [sp, #32]
   13560:	ldrb	r5, [r3, r9]
   13564:	cmp	r5, #126	; 0x7e
   13568:	ldrls	pc, [pc, r5, lsl #2]
   1356c:	b	134b8 <__snprintf_chk@plt+0x214c>
   13570:	muleq	r1, r4, r7
   13574:			; <UNDEFINED> instruction: 0x000134b8
   13578:			; <UNDEFINED> instruction: 0x000134b8
   1357c:			; <UNDEFINED> instruction: 0x000134b8
   13580:			; <UNDEFINED> instruction: 0x000134b8
   13584:			; <UNDEFINED> instruction: 0x000134b8
   13588:			; <UNDEFINED> instruction: 0x000134b8
   1358c:	andeq	r3, r1, ip, lsl #15
   13590:	andeq	r3, r1, r4, lsl #15
   13594:	ldrdeq	r3, [r1], -r0
   13598:	andeq	r3, r1, ip, ror r7
   1359c:	andeq	r3, r1, r8, asr #5
   135a0:	andeq	r3, r1, r4, ror r7
   135a4:	andeq	r3, r1, ip, ror #14
   135a8:			; <UNDEFINED> instruction: 0x000134b8
   135ac:			; <UNDEFINED> instruction: 0x000134b8
   135b0:			; <UNDEFINED> instruction: 0x000134b8
   135b4:			; <UNDEFINED> instruction: 0x000134b8
   135b8:			; <UNDEFINED> instruction: 0x000134b8
   135bc:			; <UNDEFINED> instruction: 0x000134b8
   135c0:			; <UNDEFINED> instruction: 0x000134b8
   135c4:			; <UNDEFINED> instruction: 0x000134b8
   135c8:			; <UNDEFINED> instruction: 0x000134b8
   135cc:			; <UNDEFINED> instruction: 0x000134b8
   135d0:			; <UNDEFINED> instruction: 0x000134b8
   135d4:			; <UNDEFINED> instruction: 0x000134b8
   135d8:			; <UNDEFINED> instruction: 0x000134b8
   135dc:			; <UNDEFINED> instruction: 0x000134b8
   135e0:			; <UNDEFINED> instruction: 0x000134b8
   135e4:			; <UNDEFINED> instruction: 0x000134b8
   135e8:			; <UNDEFINED> instruction: 0x000134b8
   135ec:			; <UNDEFINED> instruction: 0x000134b8
   135f0:	andeq	r3, r1, r8, ror #15
   135f4:	andeq	r3, r1, r8, asr #15
   135f8:	andeq	r3, r1, r8, asr #15
   135fc:			; <UNDEFINED> instruction: 0x000137b8
   13600:	andeq	r3, r1, r8, asr #15
   13604:	andeq	r3, r1, r4, lsl #10
   13608:	andeq	r3, r1, r8, asr #15
   1360c:	strdeq	r3, [r1], -r8
   13610:	andeq	r3, r1, r8, asr #15
   13614:	andeq	r3, r1, r8, asr #15
   13618:	andeq	r3, r1, r8, asr #15
   1361c:	andeq	r3, r1, r4, lsl #10
   13620:	andeq	r3, r1, r4, lsl #10
   13624:	andeq	r3, r1, r4, lsl #10
   13628:	andeq	r3, r1, r4, lsl #10
   1362c:	andeq	r3, r1, r4, lsl #10
   13630:	andeq	r3, r1, r4, lsl #10
   13634:	andeq	r3, r1, r4, lsl #10
   13638:	andeq	r3, r1, r4, lsl #10
   1363c:	andeq	r3, r1, r4, lsl #10
   13640:	andeq	r3, r1, r4, lsl #10
   13644:	andeq	r3, r1, r4, lsl #10
   13648:	andeq	r3, r1, r4, lsl #10
   1364c:	andeq	r3, r1, r4, lsl #10
   13650:	andeq	r3, r1, r4, lsl #10
   13654:	andeq	r3, r1, r4, lsl #10
   13658:	andeq	r3, r1, r4, lsl #10
   1365c:	andeq	r3, r1, r8, asr #15
   13660:	andeq	r3, r1, r8, asr #15
   13664:	andeq	r3, r1, r8, asr #15
   13668:	andeq	r3, r1, r8, asr #15
   1366c:	andeq	r3, r1, ip, asr #3
   13670:			; <UNDEFINED> instruction: 0x000134b8
   13674:	andeq	r3, r1, r4, lsl #10
   13678:	andeq	r3, r1, r4, lsl #10
   1367c:	andeq	r3, r1, r4, lsl #10
   13680:	andeq	r3, r1, r4, lsl #10
   13684:	andeq	r3, r1, r4, lsl #10
   13688:	andeq	r3, r1, r4, lsl #10
   1368c:	andeq	r3, r1, r4, lsl #10
   13690:	andeq	r3, r1, r4, lsl #10
   13694:	andeq	r3, r1, r4, lsl #10
   13698:	andeq	r3, r1, r4, lsl #10
   1369c:	andeq	r3, r1, r4, lsl #10
   136a0:	andeq	r3, r1, r4, lsl #10
   136a4:	andeq	r3, r1, r4, lsl #10
   136a8:	andeq	r3, r1, r4, lsl #10
   136ac:	andeq	r3, r1, r4, lsl #10
   136b0:	andeq	r3, r1, r4, lsl #10
   136b4:	andeq	r3, r1, r4, lsl #10
   136b8:	andeq	r3, r1, r4, lsl #10
   136bc:	andeq	r3, r1, r4, lsl #10
   136c0:	andeq	r3, r1, r4, lsl #10
   136c4:	andeq	r3, r1, r4, lsl #10
   136c8:	andeq	r3, r1, r4, lsl #10
   136cc:	andeq	r3, r1, r4, lsl #10
   136d0:	andeq	r3, r1, r4, lsl #10
   136d4:	andeq	r3, r1, r4, lsl #10
   136d8:	andeq	r3, r1, r4, lsl #10
   136dc:	andeq	r3, r1, r8, asr #15
   136e0:	andeq	r3, r1, r4, ror r1
   136e4:	andeq	r3, r1, r4, lsl #10
   136e8:	andeq	r3, r1, r8, asr #15
   136ec:	andeq	r3, r1, r4, lsl #10
   136f0:	andeq	r3, r1, r8, asr #15
   136f4:	andeq	r3, r1, r4, lsl #10
   136f8:	andeq	r3, r1, r4, lsl #10
   136fc:	andeq	r3, r1, r4, lsl #10
   13700:	andeq	r3, r1, r4, lsl #10
   13704:	andeq	r3, r1, r4, lsl #10
   13708:	andeq	r3, r1, r4, lsl #10
   1370c:	andeq	r3, r1, r4, lsl #10
   13710:	andeq	r3, r1, r4, lsl #10
   13714:	andeq	r3, r1, r4, lsl #10
   13718:	andeq	r3, r1, r4, lsl #10
   1371c:	andeq	r3, r1, r4, lsl #10
   13720:	andeq	r3, r1, r4, lsl #10
   13724:	andeq	r3, r1, r4, lsl #10
   13728:	andeq	r3, r1, r4, lsl #10
   1372c:	andeq	r3, r1, r4, lsl #10
   13730:	andeq	r3, r1, r4, lsl #10
   13734:	andeq	r3, r1, r4, lsl #10
   13738:	andeq	r3, r1, r4, lsl #10
   1373c:	andeq	r3, r1, r4, lsl #10
   13740:	andeq	r3, r1, r4, lsl #10
   13744:	andeq	r3, r1, r4, lsl #10
   13748:	andeq	r3, r1, r4, lsl #10
   1374c:	andeq	r3, r1, r4, lsl #10
   13750:	andeq	r3, r1, r4, lsl #10
   13754:	andeq	r3, r1, r4, lsl #10
   13758:	andeq	r3, r1, r4, lsl #10
   1375c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13760:	andeq	r3, r1, r8, asr #15
   13764:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13768:			; <UNDEFINED> instruction: 0x000137b8
   1376c:	mov	r3, #114	; 0x72
   13770:	b	132d4 <__snprintf_chk@plt+0x1f68>
   13774:	mov	r3, #102	; 0x66
   13778:	b	131a4 <__snprintf_chk@plt+0x1e38>
   1377c:	mov	r3, #110	; 0x6e
   13780:	b	132d4 <__snprintf_chk@plt+0x1f68>
   13784:	mov	r3, #98	; 0x62
   13788:	b	131a4 <__snprintf_chk@plt+0x1e38>
   1378c:	mov	r3, #97	; 0x61
   13790:	b	131a4 <__snprintf_chk@plt+0x1e38>
   13794:	ldr	r3, [sp, #40]	; 0x28
   13798:	cmp	r3, #0
   1379c:	bne	133ac <__snprintf_chk@plt+0x2040>
   137a0:	ldr	r3, [sp, #156]	; 0x9c
   137a4:	tst	r3, #1
   137a8:	addne	r9, r9, #1
   137ac:	bne	12b40 <__snprintf_chk@plt+0x17d4>
   137b0:	ldr	r7, [sp, #40]	; 0x28
   137b4:	b	131b0 <__snprintf_chk@plt+0x1e44>
   137b8:	sub	r3, fp, #2
   137bc:	clz	r3, r3
   137c0:	lsr	r3, r3, #5
   137c4:	b	12fc4 <__snprintf_chk@plt+0x1c58>
   137c8:	sub	r3, fp, #2
   137cc:	mov	r6, #0
   137d0:	clz	r3, r3
   137d4:	lsr	r3, r3, #5
   137d8:	ldr	r2, [sp, #44]	; 0x2c
   137dc:	tst	r2, r3
   137e0:	beq	12fd0 <__snprintf_chk@plt+0x1c64>
   137e4:	b	132ec <__snprintf_chk@plt+0x1f80>
   137e8:	sub	r3, fp, #2
   137ec:	clz	r3, r3
   137f0:	lsr	r3, r3, #5
   137f4:	b	137d8 <__snprintf_chk@plt+0x246c>
   137f8:	ldr	r3, [sp, #52]	; 0x34
   137fc:	ldrb	r5, [r3]
   13800:	cmp	r5, #126	; 0x7e
   13804:	ldrls	pc, [pc, r5, lsl #2]
   13808:	b	134b4 <__snprintf_chk@plt+0x2148>
   1380c:	andeq	r3, r1, ip, lsr #7
   13810:			; <UNDEFINED> instruction: 0x000134b4
   13814:			; <UNDEFINED> instruction: 0x000134b4
   13818:			; <UNDEFINED> instruction: 0x000134b4
   1381c:			; <UNDEFINED> instruction: 0x000134b4
   13820:			; <UNDEFINED> instruction: 0x000134b4
   13824:			; <UNDEFINED> instruction: 0x000134b4
   13828:	muleq	r1, r0, r3
   1382c:	andeq	r3, r1, r8, lsl #7
   13830:	andeq	r3, r1, r4, asr #20
   13834:	andeq	r3, r1, ip, ror r3
   13838:	andeq	r3, r1, r8, lsr sl
   1383c:	andeq	r3, r1, r8, asr r3
   13840:	andeq	r3, r1, r4, lsr #7
   13844:			; <UNDEFINED> instruction: 0x000134b4
   13848:			; <UNDEFINED> instruction: 0x000134b4
   1384c:			; <UNDEFINED> instruction: 0x000134b4
   13850:			; <UNDEFINED> instruction: 0x000134b4
   13854:			; <UNDEFINED> instruction: 0x000134b4
   13858:			; <UNDEFINED> instruction: 0x000134b4
   1385c:			; <UNDEFINED> instruction: 0x000134b4
   13860:			; <UNDEFINED> instruction: 0x000134b4
   13864:			; <UNDEFINED> instruction: 0x000134b4
   13868:			; <UNDEFINED> instruction: 0x000134b4
   1386c:			; <UNDEFINED> instruction: 0x000134b4
   13870:			; <UNDEFINED> instruction: 0x000134b4
   13874:			; <UNDEFINED> instruction: 0x000134b4
   13878:			; <UNDEFINED> instruction: 0x000134b4
   1387c:			; <UNDEFINED> instruction: 0x000134b4
   13880:			; <UNDEFINED> instruction: 0x000134b4
   13884:			; <UNDEFINED> instruction: 0x000134b4
   13888:			; <UNDEFINED> instruction: 0x000134b4
   1388c:	andeq	r3, r1, r0, lsr sl
   13890:	muleq	r1, r8, r3
   13894:	muleq	r1, r8, r3
   13898:	andeq	r3, r1, r4, lsl sl
   1389c:	muleq	r1, r8, r3
   138a0:	andeq	r3, r1, r8, lsl #20
   138a4:	muleq	r1, r8, r3
   138a8:	strdeq	r3, [r1], -r4
   138ac:	muleq	r1, r8, r3
   138b0:	muleq	r1, r8, r3
   138b4:	muleq	r1, r8, r3
   138b8:	andeq	r3, r1, r8, lsl #20
   138bc:	andeq	r3, r1, r8, lsl #20
   138c0:	andeq	r3, r1, r8, lsl #20
   138c4:	andeq	r3, r1, r8, lsl #20
   138c8:	andeq	r3, r1, r8, lsl #20
   138cc:	andeq	r3, r1, r8, lsl #20
   138d0:	andeq	r3, r1, r8, lsl #20
   138d4:	andeq	r3, r1, r8, lsl #20
   138d8:	andeq	r3, r1, r8, lsl #20
   138dc:	andeq	r3, r1, r8, lsl #20
   138e0:	andeq	r3, r1, r8, lsl #20
   138e4:	andeq	r3, r1, r8, lsl #20
   138e8:	andeq	r3, r1, r8, lsl #20
   138ec:	andeq	r3, r1, r8, lsl #20
   138f0:	andeq	r3, r1, r8, lsl #20
   138f4:	andeq	r3, r1, r8, lsl #20
   138f8:	muleq	r1, r8, r3
   138fc:	muleq	r1, r8, r3
   13900:	muleq	r1, r8, r3
   13904:	muleq	r1, r8, r3
   13908:	andeq	r3, r1, r8, asr #3
   1390c:			; <UNDEFINED> instruction: 0x000134b4
   13910:	andeq	r3, r1, r8, lsl #20
   13914:	andeq	r3, r1, r8, lsl #20
   13918:	andeq	r3, r1, r8, lsl #20
   1391c:	andeq	r3, r1, r8, lsl #20
   13920:	andeq	r3, r1, r8, lsl #20
   13924:	andeq	r3, r1, r8, lsl #20
   13928:	andeq	r3, r1, r8, lsl #20
   1392c:	andeq	r3, r1, r8, lsl #20
   13930:	andeq	r3, r1, r8, lsl #20
   13934:	andeq	r3, r1, r8, lsl #20
   13938:	andeq	r3, r1, r8, lsl #20
   1393c:	andeq	r3, r1, r8, lsl #20
   13940:	andeq	r3, r1, r8, lsl #20
   13944:	andeq	r3, r1, r8, lsl #20
   13948:	andeq	r3, r1, r8, lsl #20
   1394c:	andeq	r3, r1, r8, lsl #20
   13950:	andeq	r3, r1, r8, lsl #20
   13954:	andeq	r3, r1, r8, lsl #20
   13958:	andeq	r3, r1, r8, lsl #20
   1395c:	andeq	r3, r1, r8, lsl #20
   13960:	andeq	r3, r1, r8, lsl #20
   13964:	andeq	r3, r1, r8, lsl #20
   13968:	andeq	r3, r1, r8, lsl #20
   1396c:	andeq	r3, r1, r8, lsl #20
   13970:	andeq	r3, r1, r8, lsl #20
   13974:	andeq	r3, r1, r8, lsl #20
   13978:	muleq	r1, r8, r3
   1397c:	andeq	r3, r1, r0, ror r1
   13980:	andeq	r3, r1, r8, lsl #20
   13984:	muleq	r1, r8, r3
   13988:	andeq	r3, r1, r8, lsl #20
   1398c:	muleq	r1, r8, r3
   13990:	andeq	r3, r1, r8, lsl #20
   13994:	andeq	r3, r1, r8, lsl #20
   13998:	andeq	r3, r1, r8, lsl #20
   1399c:	andeq	r3, r1, r8, lsl #20
   139a0:	andeq	r3, r1, r8, lsl #20
   139a4:	andeq	r3, r1, r8, lsl #20
   139a8:	andeq	r3, r1, r8, lsl #20
   139ac:	andeq	r3, r1, r8, lsl #20
   139b0:	andeq	r3, r1, r8, lsl #20
   139b4:	andeq	r3, r1, r8, lsl #20
   139b8:	andeq	r3, r1, r8, lsl #20
   139bc:	andeq	r3, r1, r8, lsl #20
   139c0:	andeq	r3, r1, r8, lsl #20
   139c4:	andeq	r3, r1, r8, lsl #20
   139c8:	andeq	r3, r1, r8, lsl #20
   139cc:	andeq	r3, r1, r8, lsl #20
   139d0:	andeq	r3, r1, r8, lsl #20
   139d4:	andeq	r3, r1, r8, lsl #20
   139d8:	andeq	r3, r1, r8, lsl #20
   139dc:	andeq	r3, r1, r8, lsl #20
   139e0:	andeq	r3, r1, r8, lsl #20
   139e4:	andeq	r3, r1, r8, lsl #20
   139e8:	andeq	r3, r1, r8, lsl #20
   139ec:	andeq	r3, r1, r8, lsl #20
   139f0:	andeq	r3, r1, r8, lsl #20
   139f4:	andeq	r3, r1, r8, lsl #20
   139f8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   139fc:	muleq	r1, r8, r3
   13a00:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13a04:	andeq	r3, r1, r4, lsl sl
   13a08:	mov	r6, r7
   13a0c:	mov	r7, #0
   13a10:	b	131c0 <__snprintf_chk@plt+0x1e54>
   13a14:	cmp	r9, #0
   13a18:	mov	r2, #0
   13a1c:	beq	13484 <__snprintf_chk@plt+0x2118>
   13a20:	mov	r6, #0
   13a24:	mov	r7, r2
   13a28:	mov	r3, r6
   13a2c:	b	12fe0 <__snprintf_chk@plt+0x1c74>
   13a30:	mov	r2, #0
   13a34:	b	13498 <__snprintf_chk@plt+0x212c>
   13a38:	mov	r7, #0
   13a3c:	mov	r3, #118	; 0x76
   13a40:	b	131a4 <__snprintf_chk@plt+0x1e38>
   13a44:	mov	r7, #0
   13a48:	mov	r3, #116	; 0x74
   13a4c:	b	132d4 <__snprintf_chk@plt+0x1f68>
   13a50:	ldr	r3, [sp, #44]	; 0x2c
   13a54:	b	13008 <__snprintf_chk@plt+0x1c9c>
   13a58:	ldr	r3, [sp, #44]	; 0x2c
   13a5c:	cmp	r3, #0
   13a60:	bne	13ed0 <__snprintf_chk@plt+0x2b64>
   13a64:	add	r9, r9, #1
   13a68:	mov	r6, #0
   13a6c:	ldr	r3, [sp, #48]	; 0x30
   13a70:	mov	r5, #92	; 0x5c
   13a74:	b	13294 <__snprintf_chk@plt+0x1f28>
   13a78:	ldr	r3, [sp, #32]
   13a7c:	ldrb	r2, [r3, #1]
   13a80:	adds	r2, r2, #0
   13a84:	movne	r2, #1
   13a88:	b	12fb0 <__snprintf_chk@plt+0x1c44>
   13a8c:	ldr	r3, [sp, #156]	; 0x9c
   13a90:	ands	r3, r3, #4
   13a94:	beq	13abc <__snprintf_chk@plt+0x2750>
   13a98:	ldr	r2, [sp, #28]
   13a9c:	add	r3, r9, #2
   13aa0:	cmp	r3, r2
   13aa4:	bcs	13ab8 <__snprintf_chk@plt+0x274c>
   13aa8:	ldr	r2, [sp, #52]	; 0x34
   13aac:	ldrb	r5, [r2, #1]
   13ab0:	cmp	r5, #63	; 0x3f
   13ab4:	beq	13f34 <__snprintf_chk@plt+0x2bc8>
   13ab8:	mov	r3, #0
   13abc:	mov	r5, #63	; 0x3f
   13ac0:	mov	r6, r3
   13ac4:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   13ac8:	ldr	r3, [sp, #44]	; 0x2c
   13acc:	cmp	r3, #0
   13ad0:	bne	13ed0 <__snprintf_chk@plt+0x2b64>
   13ad4:	mov	r6, r3
   13ad8:	mov	r5, #63	; 0x3f
   13adc:	b	13008 <__snprintf_chk@plt+0x1c9c>
   13ae0:	ldr	r1, [sp, #28]
   13ae4:	mov	r2, #0
   13ae8:	mov	r3, #0
   13aec:	strd	r2, [sp, #104]	; 0x68
   13af0:	cmn	r1, #1
   13af4:	bne	13b04 <__snprintf_chk@plt+0x2798>
   13af8:	ldr	r0, [sp, #32]
   13afc:	bl	11228 <strlen@plt>
   13b00:	str	r0, [sp, #28]
   13b04:	str	r8, [sp, #76]	; 0x4c
   13b08:	mov	r3, #0
   13b0c:	str	sl, [sp, #80]	; 0x50
   13b10:	ldr	sl, [sp, #32]
   13b14:	str	r5, [sp, #84]	; 0x54
   13b18:	mov	r5, r3
   13b1c:	ldr	r8, [sp, #44]	; 0x2c
   13b20:	str	r7, [sp, #88]	; 0x58
   13b24:	str	r4, [sp, #92]	; 0x5c
   13b28:	ldr	r2, [sp, #28]
   13b2c:	add	r4, r9, r5
   13b30:	add	r3, sp, #104	; 0x68
   13b34:	add	r7, sl, r4
   13b38:	add	r0, sp, #100	; 0x64
   13b3c:	mov	r1, r7
   13b40:	sub	r2, r2, r4
   13b44:	bl	15cf8 <__snprintf_chk@plt+0x498c>
   13b48:	subs	r1, r0, #0
   13b4c:	beq	13b98 <__snprintf_chk@plt+0x282c>
   13b50:	cmn	r1, #1
   13b54:	beq	13f10 <__snprintf_chk@plt+0x2ba4>
   13b58:	cmn	r1, #2
   13b5c:	beq	14030 <__snprintf_chk@plt+0x2cc4>
   13b60:	cmp	fp, #2
   13b64:	movne	r3, #0
   13b68:	andeq	r3, r8, #1
   13b6c:	cmp	r3, #0
   13b70:	bne	13cfc <__snprintf_chk@plt+0x2990>
   13b74:	ldr	r0, [sp, #100]	; 0x64
   13b78:	add	r5, r5, r1
   13b7c:	bl	1112c <iswprint@plt>
   13b80:	cmp	r0, #0
   13b84:	add	r0, sp, #104	; 0x68
   13b88:	moveq	r6, #0
   13b8c:	bl	110c0 <mbsinit@plt>
   13b90:	cmp	r0, #0
   13b94:	beq	13b28 <__snprintf_chk@plt+0x27bc>
   13b98:	ldr	r3, [sp, #40]	; 0x28
   13b9c:	mov	ip, r5
   13ba0:	eor	r2, r6, #1
   13ba4:	ldr	r8, [sp, #76]	; 0x4c
   13ba8:	ldr	sl, [sp, #80]	; 0x50
   13bac:	and	r2, r2, r3
   13bb0:	ldr	r5, [sp, #84]	; 0x54
   13bb4:	ldr	r7, [sp, #88]	; 0x58
   13bb8:	ldr	r4, [sp, #92]	; 0x5c
   13bbc:	cmp	ip, #1
   13bc0:	bls	134fc <__snprintf_chk@plt+0x2190>
   13bc4:	add	r1, ip, r9
   13bc8:	mov	r0, #39	; 0x27
   13bcc:	ldr	lr, [sp, #52]	; 0x34
   13bd0:	mov	ip, #0
   13bd4:	str	r6, [sp, #52]	; 0x34
   13bd8:	ldr	r6, [sp, #48]	; 0x30
   13bdc:	b	13c98 <__snprintf_chk@plt+0x292c>
   13be0:	ldr	ip, [sp, #44]	; 0x2c
   13be4:	sub	r3, fp, #2
   13be8:	clz	r3, r3
   13bec:	lsr	r3, r3, #5
   13bf0:	cmp	ip, #0
   13bf4:	bne	13e08 <__snprintf_chk@plt+0x2a9c>
   13bf8:	eor	ip, r6, #1
   13bfc:	ands	r3, r3, ip
   13c00:	beq	13c30 <__snprintf_chk@plt+0x28c4>
   13c04:	cmp	sl, r4
   13c08:	add	ip, r4, #1
   13c0c:	strbhi	r0, [r8, r4]
   13c10:	cmp	sl, ip
   13c14:	movhi	r6, #36	; 0x24
   13c18:	strbhi	r6, [r8, ip]
   13c1c:	add	ip, r4, #2
   13c20:	mov	r6, r3
   13c24:	cmp	sl, ip
   13c28:	add	r4, r4, #3
   13c2c:	strbhi	r0, [r8, ip]
   13c30:	cmp	sl, r4
   13c34:	movhi	r3, #92	; 0x5c
   13c38:	strbhi	r3, [r8, r4]
   13c3c:	add	r3, r4, #1
   13c40:	cmp	sl, r3
   13c44:	bls	13c54 <__snprintf_chk@plt+0x28e8>
   13c48:	lsr	ip, r5, #6
   13c4c:	add	ip, ip, #48	; 0x30
   13c50:	strb	ip, [r8, r3]
   13c54:	add	r3, r4, #2
   13c58:	cmp	sl, r3
   13c5c:	bls	13c6c <__snprintf_chk@plt+0x2900>
   13c60:	ubfx	ip, r5, #3, #3
   13c64:	add	ip, ip, #48	; 0x30
   13c68:	strb	ip, [r8, r3]
   13c6c:	add	r9, r9, #1
   13c70:	and	r5, r5, #7
   13c74:	cmp	r9, r1
   13c78:	add	r5, r5, #48	; 0x30
   13c7c:	add	r4, r4, #3
   13c80:	bcs	13e34 <__snprintf_chk@plt+0x2ac8>
   13c84:	mov	ip, r2
   13c88:	cmp	sl, r4
   13c8c:	strbhi	r5, [r8, r4]
   13c90:	add	r4, r4, #1
   13c94:	ldrb	r5, [lr, #1]!
   13c98:	cmp	r2, #0
   13c9c:	bne	13be0 <__snprintf_chk@plt+0x2874>
   13ca0:	eor	r3, ip, #1
   13ca4:	cmp	r7, #0
   13ca8:	and	r3, r3, r6
   13cac:	uxtb	r3, r3
   13cb0:	beq	13cc4 <__snprintf_chk@plt+0x2958>
   13cb4:	cmp	sl, r4
   13cb8:	movhi	r7, #92	; 0x5c
   13cbc:	strbhi	r7, [r8, r4]
   13cc0:	add	r4, r4, #1
   13cc4:	add	r9, r9, #1
   13cc8:	cmp	r9, r1
   13ccc:	bcs	13e1c <__snprintf_chk@plt+0x2ab0>
   13cd0:	cmp	r3, #0
   13cd4:	beq	13e54 <__snprintf_chk@plt+0x2ae8>
   13cd8:	cmp	sl, r4
   13cdc:	add	r3, r4, #1
   13ce0:	mov	r7, #0
   13ce4:	strbhi	r0, [r8, r4]
   13ce8:	cmp	sl, r3
   13cec:	add	r4, r4, #2
   13cf0:	mov	r6, r7
   13cf4:	strbhi	r0, [r8, r3]
   13cf8:	b	13c88 <__snprintf_chk@plt+0x291c>
   13cfc:	cmp	r1, #1
   13d00:	beq	13b74 <__snprintf_chk@plt+0x2808>
   13d04:	add	r2, r4, #1
   13d08:	add	r3, sl, r1
   13d0c:	add	r2, sl, r2
   13d10:	add	r4, r3, r4
   13d14:	ldrb	r3, [r2], #1
   13d18:	sub	r3, r3, #91	; 0x5b
   13d1c:	cmp	r3, #33	; 0x21
   13d20:	ldrls	pc, [pc, r3, lsl #2]
   13d24:	b	13db0 <__snprintf_chk@plt+0x2a44>
   13d28:			; <UNDEFINED> instruction: 0x00013dbc
   13d2c:			; <UNDEFINED> instruction: 0x00013dbc
   13d30:			; <UNDEFINED> instruction: 0x00013db0
   13d34:			; <UNDEFINED> instruction: 0x00013dbc
   13d38:			; <UNDEFINED> instruction: 0x00013db0
   13d3c:			; <UNDEFINED> instruction: 0x00013dbc
   13d40:			; <UNDEFINED> instruction: 0x00013db0
   13d44:			; <UNDEFINED> instruction: 0x00013db0
   13d48:			; <UNDEFINED> instruction: 0x00013db0
   13d4c:			; <UNDEFINED> instruction: 0x00013db0
   13d50:			; <UNDEFINED> instruction: 0x00013db0
   13d54:			; <UNDEFINED> instruction: 0x00013db0
   13d58:			; <UNDEFINED> instruction: 0x00013db0
   13d5c:			; <UNDEFINED> instruction: 0x00013db0
   13d60:			; <UNDEFINED> instruction: 0x00013db0
   13d64:			; <UNDEFINED> instruction: 0x00013db0
   13d68:			; <UNDEFINED> instruction: 0x00013db0
   13d6c:			; <UNDEFINED> instruction: 0x00013db0
   13d70:			; <UNDEFINED> instruction: 0x00013db0
   13d74:			; <UNDEFINED> instruction: 0x00013db0
   13d78:			; <UNDEFINED> instruction: 0x00013db0
   13d7c:			; <UNDEFINED> instruction: 0x00013db0
   13d80:			; <UNDEFINED> instruction: 0x00013db0
   13d84:			; <UNDEFINED> instruction: 0x00013db0
   13d88:			; <UNDEFINED> instruction: 0x00013db0
   13d8c:			; <UNDEFINED> instruction: 0x00013db0
   13d90:			; <UNDEFINED> instruction: 0x00013db0
   13d94:			; <UNDEFINED> instruction: 0x00013db0
   13d98:			; <UNDEFINED> instruction: 0x00013db0
   13d9c:			; <UNDEFINED> instruction: 0x00013db0
   13da0:			; <UNDEFINED> instruction: 0x00013db0
   13da4:			; <UNDEFINED> instruction: 0x00013db0
   13da8:			; <UNDEFINED> instruction: 0x00013db0
   13dac:			; <UNDEFINED> instruction: 0x00013dbc
   13db0:	cmp	r4, r2
   13db4:	bne	13d14 <__snprintf_chk@plt+0x29a8>
   13db8:	b	13b74 <__snprintf_chk@plt+0x2808>
   13dbc:	mov	r8, #2
   13dc0:	ldr	fp, [sp, #76]	; 0x4c
   13dc4:	ldr	sl, [sp, #80]	; 0x50
   13dc8:	b	132f4 <__snprintf_chk@plt+0x1f88>
   13dcc:	ldr	r2, [sp, #40]	; 0x28
   13dd0:	str	fp, [sp, #152]	; 0x98
   13dd4:	mov	fp, r8
   13dd8:	ldr	r8, [sp, #152]	; 0x98
   13ddc:	and	r2, r2, r3
   13de0:	str	r2, [sp, #40]	; 0x28
   13de4:	b	132f4 <__snprintf_chk@plt+0x1f88>
   13de8:	cmp	sl, r4
   13dec:	movls	r0, r4
   13df0:	bls	13424 <__snprintf_chk@plt+0x20b8>
   13df4:	ldr	r3, [sp, #48]	; 0x30
   13df8:	b	13414 <__snprintf_chk@plt+0x20a8>
   13dfc:	str	sl, [sp, #72]	; 0x48
   13e00:	ldr	sl, [sp, #44]	; 0x2c
   13e04:	b	13264 <__snprintf_chk@plt+0x1ef8>
   13e08:	str	r3, [sp, #40]	; 0x28
   13e0c:	str	fp, [sp, #152]	; 0x98
   13e10:	mov	fp, r8
   13e14:	ldr	r8, [sp, #152]	; 0x98
   13e18:	b	132f4 <__snprintf_chk@plt+0x1f88>
   13e1c:	str	r6, [sp, #48]	; 0x30
   13e20:	ldr	r6, [sp, #52]	; 0x34
   13e24:	b	13294 <__snprintf_chk@plt+0x1f28>
   13e28:	mov	r6, #0
   13e2c:	ldr	r2, [sp, #40]	; 0x28
   13e30:	b	13bc4 <__snprintf_chk@plt+0x2858>
   13e34:	str	r6, [sp, #48]	; 0x30
   13e38:	ldr	r6, [sp, #52]	; 0x34
   13e3c:	b	13080 <__snprintf_chk@plt+0x1d14>
   13e40:	add	r4, r4, #4
   13e44:	mov	r6, #0
   13e48:	str	r3, [sp, #48]	; 0x30
   13e4c:	mov	r5, #48	; 0x30
   13e50:	b	13008 <__snprintf_chk@plt+0x1c9c>
   13e54:	mov	r7, r3
   13e58:	b	13c88 <__snprintf_chk@plt+0x291c>
   13e5c:	mov	r3, #1
   13e60:	movw	r2, #27508	; 0x6b74
   13e64:	movt	r2, #1
   13e68:	mov	r4, r3
   13e6c:	str	r3, [sp, #36]	; 0x24
   13e70:	str	r3, [sp, #40]	; 0x28
   13e74:	str	sl, [sp, #44]	; 0x2c
   13e78:	str	sl, [sp, #48]	; 0x30
   13e7c:	str	r3, [sp, #56]	; 0x38
   13e80:	str	r2, [sp, #60]	; 0x3c
   13e84:	str	sl, [sp, #68]	; 0x44
   13e88:	str	sl, [sp, #72]	; 0x48
   13e8c:	b	12b30 <__snprintf_chk@plt+0x17c4>
   13e90:	mov	r3, r6
   13e94:	mov	r5, #48	; 0x30
   13e98:	mov	r6, #0
   13e9c:	b	13008 <__snprintf_chk@plt+0x1c9c>
   13ea0:	mov	r5, r3
   13ea4:	b	13380 <__snprintf_chk@plt+0x2014>
   13ea8:	cmp	sl, r4
   13eac:	mov	r5, #48	; 0x30
   13eb0:	movhi	r3, #48	; 0x30
   13eb4:	strbhi	r3, [r8, r4]
   13eb8:	add	r3, r0, #2
   13ebc:	add	r4, r0, #3
   13ec0:	cmp	sl, r3
   13ec4:	movhi	r1, #48	; 0x30
   13ec8:	strbhi	r1, [r8, r3]
   13ecc:	b	13458 <__snprintf_chk@plt+0x20ec>
   13ed0:	str	fp, [sp, #152]	; 0x98
   13ed4:	mov	fp, r8
   13ed8:	ldr	r8, [sp, #152]	; 0x98
   13edc:	b	132f4 <__snprintf_chk@plt+0x1f88>
   13ee0:	ldr	r3, [sp, #164]	; 0xa4
   13ee4:	ldrb	r3, [r3]
   13ee8:	cmp	r3, #0
   13eec:	beq	12b00 <__snprintf_chk@plt+0x1794>
   13ef0:	ldr	r2, [sp, #164]	; 0xa4
   13ef4:	cmp	sl, r4
   13ef8:	strbhi	r3, [fp, r4]
   13efc:	add	r4, r4, #1
   13f00:	ldrb	r3, [r2, #1]!
   13f04:	cmp	r3, #0
   13f08:	bne	13ef4 <__snprintf_chk@plt+0x2b88>
   13f0c:	b	12b00 <__snprintf_chk@plt+0x1794>
   13f10:	mov	ip, r5
   13f14:	mov	r6, #0
   13f18:	ldr	r2, [sp, #40]	; 0x28
   13f1c:	ldr	r8, [sp, #76]	; 0x4c
   13f20:	ldr	sl, [sp, #80]	; 0x50
   13f24:	ldr	r5, [sp, #84]	; 0x54
   13f28:	ldr	r7, [sp, #88]	; 0x58
   13f2c:	ldr	r4, [sp, #92]	; 0x5c
   13f30:	b	13bbc <__snprintf_chk@plt+0x2850>
   13f34:	ldr	r2, [sp, #32]
   13f38:	ldrb	r1, [r2, r3]
   13f3c:	sub	r2, r1, #33	; 0x21
   13f40:	cmp	r2, #29
   13f44:	ldrls	pc, [pc, r2, lsl #2]
   13f48:	b	14024 <__snprintf_chk@plt+0x2cb8>
   13f4c:	andeq	r3, r1, r4, asr #31
   13f50:	andeq	r4, r1, r4, lsr #32
   13f54:	andeq	r4, r1, r4, lsr #32
   13f58:	andeq	r4, r1, r4, lsr #32
   13f5c:	andeq	r4, r1, r4, lsr #32
   13f60:	andeq	r4, r1, r4, lsr #32
   13f64:	andeq	r3, r1, r4, asr #31
   13f68:	andeq	r3, r1, r4, asr #31
   13f6c:	andeq	r3, r1, r4, asr #31
   13f70:	andeq	r4, r1, r4, lsr #32
   13f74:	andeq	r4, r1, r4, lsr #32
   13f78:	andeq	r4, r1, r4, lsr #32
   13f7c:	andeq	r3, r1, r4, asr #31
   13f80:	andeq	r4, r1, r4, lsr #32
   13f84:	andeq	r3, r1, r4, asr #31
   13f88:	andeq	r4, r1, r4, lsr #32
   13f8c:	andeq	r4, r1, r4, lsr #32
   13f90:	andeq	r4, r1, r4, lsr #32
   13f94:	andeq	r4, r1, r4, lsr #32
   13f98:	andeq	r4, r1, r4, lsr #32
   13f9c:	andeq	r4, r1, r4, lsr #32
   13fa0:	andeq	r4, r1, r4, lsr #32
   13fa4:	andeq	r4, r1, r4, lsr #32
   13fa8:	andeq	r4, r1, r4, lsr #32
   13fac:	andeq	r4, r1, r4, lsr #32
   13fb0:	andeq	r4, r1, r4, lsr #32
   13fb4:	andeq	r4, r1, r4, lsr #32
   13fb8:	andeq	r3, r1, r4, asr #31
   13fbc:	andeq	r3, r1, r4, asr #31
   13fc0:	andeq	r3, r1, r4, asr #31
   13fc4:	ldr	r2, [sp, #44]	; 0x2c
   13fc8:	cmp	r2, #0
   13fcc:	bne	14128 <__snprintf_chk@plt+0x2dbc>
   13fd0:	cmp	sl, r4
   13fd4:	mov	r5, r1
   13fd8:	movhi	r2, #63	; 0x3f
   13fdc:	mov	r9, r3
   13fe0:	strbhi	r2, [r8, r4]
   13fe4:	add	r2, r4, #1
   13fe8:	cmp	sl, r2
   13fec:	movhi	r0, #34	; 0x22
   13ff0:	strbhi	r0, [r8, r2]
   13ff4:	add	r2, r4, #2
   13ff8:	cmp	sl, r2
   13ffc:	movhi	r0, #34	; 0x22
   14000:	strbhi	r0, [r8, r2]
   14004:	add	r2, r4, #3
   14008:	add	r4, r4, #4
   1400c:	cmp	sl, r2
   14010:	movhi	r0, #63	; 0x3f
   14014:	strbhi	r0, [r8, r2]
   14018:	mov	r2, #0
   1401c:	mov	r6, r2
   14020:	b	13458 <__snprintf_chk@plt+0x20ec>
   14024:	mov	r3, #0
   14028:	mov	r6, r3
   1402c:	b	12fd0 <__snprintf_chk@plt+0x1c64>
   14030:	ldr	r0, [sp, #28]
   14034:	mov	r1, r4
   14038:	mov	r2, r7
   1403c:	mov	r3, r5
   14040:	mov	ip, r5
   14044:	ldr	r8, [sp, #76]	; 0x4c
   14048:	ldr	sl, [sp, #80]	; 0x50
   1404c:	cmp	r1, r0
   14050:	ldr	r5, [sp, #84]	; 0x54
   14054:	ldr	r7, [sp, #88]	; 0x58
   14058:	ldr	r4, [sp, #92]	; 0x5c
   1405c:	bcs	14090 <__snprintf_chk@plt+0x2d24>
   14060:	ldrb	r6, [r2]
   14064:	cmp	r6, #0
   14068:	bne	1407c <__snprintf_chk@plt+0x2d10>
   1406c:	b	141b0 <__snprintf_chk@plt+0x2e44>
   14070:	ldrb	r6, [r2, #1]!
   14074:	cmp	r6, #0
   14078:	beq	14138 <__snprintf_chk@plt+0x2dcc>
   1407c:	add	r3, r3, #1
   14080:	add	r1, r9, r3
   14084:	cmp	r1, r0
   14088:	bcc	14070 <__snprintf_chk@plt+0x2d04>
   1408c:	mov	ip, r3
   14090:	mov	r6, #0
   14094:	ldr	r2, [sp, #40]	; 0x28
   14098:	b	13bbc <__snprintf_chk@plt+0x2850>
   1409c:	mov	r3, #1
   140a0:	mov	r2, #0
   140a4:	mov	r4, r2
   140a8:	str	r3, [sp, #36]	; 0x24
   140ac:	str	r3, [sp, #40]	; 0x28
   140b0:	str	r3, [sp, #44]	; 0x2c
   140b4:	str	r2, [sp, #48]	; 0x30
   140b8:	str	r3, [sp, #56]	; 0x38
   140bc:	movw	r3, #27508	; 0x6b74
   140c0:	movt	r3, #1
   140c4:	str	r3, [sp, #60]	; 0x3c
   140c8:	str	r2, [sp, #68]	; 0x44
   140cc:	str	r2, [sp, #72]	; 0x48
   140d0:	b	12b30 <__snprintf_chk@plt+0x17c4>
   140d4:	mov	r2, r3
   140d8:	ldr	r3, [sp, #60]	; 0x3c
   140dc:	cmp	r3, #0
   140e0:	moveq	r2, #0
   140e4:	andne	r2, r2, #1
   140e8:	cmp	r2, #0
   140ec:	beq	14118 <__snprintf_chk@plt+0x2dac>
   140f0:	mov	r2, r3
   140f4:	ldrb	r3, [r3]
   140f8:	cmp	r3, #0
   140fc:	beq	14118 <__snprintf_chk@plt+0x2dac>
   14100:	cmp	sl, r4
   14104:	strbhi	r3, [fp, r4]
   14108:	add	r4, r4, #1
   1410c:	ldrb	r3, [r2, #1]!
   14110:	cmp	r3, #0
   14114:	bne	14100 <__snprintf_chk@plt+0x2d94>
   14118:	cmp	sl, r4
   1411c:	movhi	r3, #0
   14120:	strbhi	r3, [fp, r4]
   14124:	b	13338 <__snprintf_chk@plt+0x1fcc>
   14128:	str	fp, [sp, #152]	; 0x98
   1412c:	mov	fp, r8
   14130:	ldr	r8, [sp, #152]	; 0x98
   14134:	b	13300 <__snprintf_chk@plt+0x1f94>
   14138:	mov	ip, r3
   1413c:	ldr	r2, [sp, #40]	; 0x28
   14140:	b	13bbc <__snprintf_chk@plt+0x2850>
   14144:	str	fp, [sp, #152]	; 0x98
   14148:	mov	fp, r8
   1414c:	ldr	r8, [sp, #152]	; 0x98
   14150:	sub	r3, r8, #2
   14154:	clz	r3, r3
   14158:	lsr	r3, r3, #5
   1415c:	str	r3, [sp, #40]	; 0x28
   14160:	b	132f4 <__snprintf_chk@plt+0x1f88>
   14164:	mov	ip, #5
   14168:	ldr	r3, [sp, #28]
   1416c:	str	ip, [sp]
   14170:	ldr	r2, [sp, #156]	; 0x9c
   14174:	ldr	ip, [sp, #164]	; 0xa4
   14178:	ldr	r0, [sp, #160]	; 0xa0
   1417c:	str	r2, [sp, #4]
   14180:	ldr	r2, [sp, #32]
   14184:	ldr	r1, [sp, #72]	; 0x48
   14188:	str	ip, [sp, #12]
   1418c:	ldr	ip, [sp, #168]	; 0xa8
   14190:	str	r0, [sp, #8]
   14194:	mov	r0, fp
   14198:	str	ip, [sp, #16]
   1419c:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   141a0:	mov	r4, r0
   141a4:	b	13338 <__snprintf_chk@plt+0x1fcc>
   141a8:	mov	r8, #2
   141ac:	b	132f4 <__snprintf_chk@plt+0x1f88>
   141b0:	ldr	r2, [sp, #40]	; 0x28
   141b4:	b	13bbc <__snprintf_chk@plt+0x2850>
   141b8:	mov	r3, #0
   141bc:	mov	r2, #1
   141c0:	mov	r4, r3
   141c4:	strd	r2, [sp, #36]	; 0x24
   141c8:	strd	r2, [sp, #44]	; 0x2c
   141cc:	str	r2, [sp, #56]	; 0x38
   141d0:	str	r3, [sp, #68]	; 0x44
   141d4:	str	r3, [sp, #72]	; 0x48
   141d8:	movw	r3, #27528	; 0x6b88
   141dc:	movt	r3, #1
   141e0:	str	r3, [sp, #60]	; 0x3c
   141e4:	b	12b30 <__snprintf_chk@plt+0x17c4>
   141e8:	mov	r3, #0
   141ec:	mov	r1, #1
   141f0:	mov	r2, r3
   141f4:	str	r1, [sp, #36]	; 0x24
   141f8:	str	r3, [sp, #48]	; 0x30
   141fc:	str	sl, [sp, #72]	; 0x48
   14200:	b	13138 <__snprintf_chk@plt+0x1dcc>
   14204:	bl	11360 <abort@plt>
   14208:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1420c:	mov	r4, r0
   14210:	mov	r5, r3
   14214:	strd	r6, [sp, #8]
   14218:	movw	r7, #33080	; 0x8138
   1421c:	movt	r7, #2
   14220:	strd	r8, [sp, #16]
   14224:	strd	sl, [sp, #24]
   14228:	mov	sl, r1
   1422c:	mov	fp, r2
   14230:	str	lr, [sp, #32]
   14234:	sub	sp, sp, #60	; 0x3c
   14238:	bl	1124c <__errno_location@plt>
   1423c:	mov	r8, r0
   14240:	cmn	r4, #-2147483647	; 0x80000001
   14244:	ldr	r6, [r7]
   14248:	movne	r0, #0
   1424c:	moveq	r0, #1
   14250:	ldr	r3, [r8]
   14254:	orrs	r0, r0, r4, lsr #31
   14258:	str	r3, [sp, #28]
   1425c:	bne	143ec <__snprintf_chk@plt+0x3080>
   14260:	ldr	r3, [r7, #4]
   14264:	cmp	r3, r4
   14268:	bgt	142c8 <__snprintf_chk@plt+0x2f5c>
   1426c:	add	r1, r7, #8
   14270:	sub	r2, r4, r3
   14274:	str	r3, [sp, #52]	; 0x34
   14278:	cmp	r6, r1
   1427c:	add	r2, r2, #1
   14280:	beq	143c4 <__snprintf_chk@plt+0x3058>
   14284:	mov	r1, #8
   14288:	mov	r0, r6
   1428c:	mvn	r3, #-2147483648	; 0x80000000
   14290:	str	r1, [sp]
   14294:	add	r1, sp, #52	; 0x34
   14298:	bl	1551c <__snprintf_chk@plt+0x41b0>
   1429c:	mov	r6, r0
   142a0:	str	r0, [r7]
   142a4:	ldr	r0, [r7, #4]
   142a8:	mov	r1, #0
   142ac:	ldr	r2, [sp, #52]	; 0x34
   142b0:	sub	r2, r2, r0
   142b4:	add	r0, r6, r0, lsl #3
   142b8:	lsl	r2, r2, #3
   142bc:	bl	11270 <memset@plt>
   142c0:	ldr	r3, [sp, #52]	; 0x34
   142c4:	str	r3, [r7, #4]
   142c8:	ldr	r1, [r5, #4]
   142cc:	add	r0, r6, r4, lsl #3
   142d0:	add	ip, r5, #8
   142d4:	mov	r3, fp
   142d8:	mov	r2, sl
   142dc:	ldr	r7, [r0, #4]
   142e0:	str	r0, [sp, #36]	; 0x24
   142e4:	str	ip, [sp, #40]	; 0x28
   142e8:	orr	r0, r1, #1
   142ec:	ldr	r9, [r6, r4, lsl #3]
   142f0:	str	ip, [sp, #8]
   142f4:	ldr	lr, [r5, #44]	; 0x2c
   142f8:	str	r0, [sp, #4]
   142fc:	ldr	ip, [r5]
   14300:	mov	r1, r9
   14304:	str	ip, [sp, #32]
   14308:	ldr	ip, [r5, #40]	; 0x28
   1430c:	str	ip, [sp, #12]
   14310:	ldr	ip, [sp, #32]
   14314:	str	lr, [sp, #16]
   14318:	str	r0, [sp, #44]	; 0x2c
   1431c:	mov	r0, r7
   14320:	str	ip, [sp]
   14324:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   14328:	cmp	r9, r0
   1432c:	bhi	1439c <__snprintf_chk@plt+0x3030>
   14330:	add	r9, r0, #1
   14334:	movw	r3, #33640	; 0x8368
   14338:	movt	r3, #2
   1433c:	cmp	r7, r3
   14340:	str	r9, [r6, r4, lsl #3]
   14344:	beq	14350 <__snprintf_chk@plt+0x2fe4>
   14348:	mov	r0, r7
   1434c:	bl	12778 <__snprintf_chk@plt+0x140c>
   14350:	mov	r0, r9
   14354:	bl	1536c <__snprintf_chk@plt+0x4000>
   14358:	ldr	ip, [r5]
   1435c:	mov	r3, fp
   14360:	mov	r2, sl
   14364:	mov	r1, r9
   14368:	mov	r7, r0
   1436c:	ldr	lr, [sp, #36]	; 0x24
   14370:	ldr	r4, [r5, #40]	; 0x28
   14374:	str	r0, [lr, #4]
   14378:	ldr	lr, [r5, #44]	; 0x2c
   1437c:	str	ip, [sp]
   14380:	ldr	ip, [sp, #44]	; 0x2c
   14384:	str	ip, [sp, #4]
   14388:	ldr	ip, [sp, #40]	; 0x28
   1438c:	str	r4, [sp, #12]
   14390:	str	lr, [sp, #16]
   14394:	str	ip, [sp, #8]
   14398:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   1439c:	ldr	r3, [sp, #28]
   143a0:	mov	r0, r7
   143a4:	str	r3, [r8]
   143a8:	add	sp, sp, #60	; 0x3c
   143ac:	ldrd	r4, [sp]
   143b0:	ldrd	r6, [sp, #8]
   143b4:	ldrd	r8, [sp, #16]
   143b8:	ldrd	sl, [sp, #24]
   143bc:	add	sp, sp, #32
   143c0:	pop	{pc}		; (ldr pc, [sp], #4)
   143c4:	mov	r1, #8
   143c8:	mvn	r3, #-2147483648	; 0x80000000
   143cc:	str	r1, [sp]
   143d0:	add	r1, sp, #52	; 0x34
   143d4:	bl	1551c <__snprintf_chk@plt+0x41b0>
   143d8:	ldrd	r2, [r7, #8]
   143dc:	mov	r6, r0
   143e0:	str	r0, [r7]
   143e4:	strd	r2, [r0]
   143e8:	b	142a4 <__snprintf_chk@plt+0x2f38>
   143ec:	bl	11360 <abort@plt>
   143f0:	strd	r4, [sp, #-16]!
   143f4:	mov	r5, r0
   143f8:	str	r6, [sp, #8]
   143fc:	str	lr, [sp, #12]
   14400:	bl	1124c <__errno_location@plt>
   14404:	mov	r4, r0
   14408:	cmp	r5, #0
   1440c:	ldr	r0, [pc, #32]	; 14434 <__snprintf_chk@plt+0x30c8>
   14410:	mov	r1, #48	; 0x30
   14414:	movne	r0, r5
   14418:	ldr	r6, [r4]
   1441c:	bl	15694 <__snprintf_chk@plt+0x4328>
   14420:	str	r6, [r4]
   14424:	ldrd	r4, [sp]
   14428:	ldr	r6, [sp, #8]
   1442c:	add	sp, sp, #12
   14430:	pop	{pc}		; (ldr pc, [sp], #4)
   14434:	andeq	r8, r2, r8, ror #8
   14438:	ldr	r3, [pc, #12]	; 1444c <__snprintf_chk@plt+0x30e0>
   1443c:	cmp	r0, #0
   14440:	moveq	r0, r3
   14444:	ldr	r0, [r0]
   14448:	bx	lr
   1444c:	andeq	r8, r2, r8, ror #8
   14450:	ldr	r3, [pc, #12]	; 14464 <__snprintf_chk@plt+0x30f8>
   14454:	cmp	r0, #0
   14458:	moveq	r0, r3
   1445c:	str	r1, [r0]
   14460:	bx	lr
   14464:	andeq	r8, r2, r8, ror #8
   14468:	ldr	r3, [pc, #52]	; 144a4 <__snprintf_chk@plt+0x3138>
   1446c:	cmp	r0, #0
   14470:	push	{lr}		; (str lr, [sp, #-4]!)
   14474:	lsr	lr, r1, #5
   14478:	and	r1, r1, #31
   1447c:	moveq	r0, r3
   14480:	add	r3, r0, #8
   14484:	ldr	ip, [r3, lr, lsl #2]
   14488:	lsr	r0, ip, r1
   1448c:	eor	r2, r2, r0
   14490:	and	r0, r0, #1
   14494:	and	r2, r2, #1
   14498:	eor	r1, ip, r2, lsl r1
   1449c:	str	r1, [r3, lr, lsl #2]
   144a0:	pop	{pc}		; (ldr pc, [sp], #4)
   144a4:	andeq	r8, r2, r8, ror #8
   144a8:	ldr	r3, [pc, #16]	; 144c0 <__snprintf_chk@plt+0x3154>
   144ac:	cmp	r0, #0
   144b0:	movne	r3, r0
   144b4:	ldr	r0, [r3, #4]
   144b8:	str	r1, [r3, #4]
   144bc:	bx	lr
   144c0:	andeq	r8, r2, r8, ror #8
   144c4:	ldr	r3, [pc, #48]	; 144fc <__snprintf_chk@plt+0x3190>
   144c8:	cmp	r0, #0
   144cc:	mov	ip, #10
   144d0:	moveq	r0, r3
   144d4:	cmp	r2, #0
   144d8:	cmpne	r1, #0
   144dc:	str	ip, [r0]
   144e0:	beq	144f0 <__snprintf_chk@plt+0x3184>
   144e4:	str	r1, [r0, #40]	; 0x28
   144e8:	str	r2, [r0, #44]	; 0x2c
   144ec:	bx	lr
   144f0:	str	r4, [sp, #-8]!
   144f4:	str	lr, [sp, #4]
   144f8:	bl	11360 <abort@plt>
   144fc:	andeq	r8, r2, r8, ror #8
   14500:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14504:	strd	r6, [sp, #8]
   14508:	mov	r7, r0
   1450c:	mov	r6, r1
   14510:	strd	r8, [sp, #16]
   14514:	mov	r8, r2
   14518:	mov	r9, r3
   1451c:	str	lr, [sp, #24]
   14520:	sub	sp, sp, #28
   14524:	ldr	r4, [sp, #56]	; 0x38
   14528:	ldr	ip, [pc, #104]	; 14598 <__snprintf_chk@plt+0x322c>
   1452c:	cmp	r4, #0
   14530:	moveq	r4, ip
   14534:	bl	1124c <__errno_location@plt>
   14538:	ldr	ip, [r4, #44]	; 0x2c
   1453c:	mov	r5, r0
   14540:	mov	r1, r6
   14544:	add	lr, r4, #8
   14548:	mov	r3, r9
   1454c:	ldr	r6, [r5]
   14550:	mov	r2, r8
   14554:	mov	r0, r7
   14558:	str	ip, [sp, #16]
   1455c:	ldr	ip, [r4, #40]	; 0x28
   14560:	str	lr, [sp, #8]
   14564:	str	ip, [sp, #12]
   14568:	ldr	ip, [r4, #4]
   1456c:	str	ip, [sp, #4]
   14570:	ldr	ip, [r4]
   14574:	str	ip, [sp]
   14578:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   1457c:	str	r6, [r5]
   14580:	add	sp, sp, #28
   14584:	ldrd	r4, [sp]
   14588:	ldrd	r6, [sp, #8]
   1458c:	ldrd	r8, [sp, #16]
   14590:	add	sp, sp, #24
   14594:	pop	{pc}		; (ldr pc, [sp], #4)
   14598:	andeq	r8, r2, r8, ror #8
   1459c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   145a0:	cmp	r3, #0
   145a4:	ldr	r4, [pc, #220]	; 14688 <__snprintf_chk@plt+0x331c>
   145a8:	movne	r4, r3
   145ac:	strd	r6, [sp, #8]
   145b0:	mov	r6, r2
   145b4:	strd	r8, [sp, #16]
   145b8:	mov	r9, r0
   145bc:	strd	sl, [sp, #24]
   145c0:	mov	sl, r1
   145c4:	str	lr, [sp, #32]
   145c8:	sub	sp, sp, #44	; 0x2c
   145cc:	bl	1124c <__errno_location@plt>
   145d0:	ldr	r5, [r4, #4]
   145d4:	mov	r7, r0
   145d8:	mov	r1, #0
   145dc:	add	r8, r4, #8
   145e0:	mov	r3, sl
   145e4:	ldr	ip, [r4, #44]	; 0x2c
   145e8:	mov	r2, r9
   145ec:	mov	r0, r1
   145f0:	ldr	lr, [r7]
   145f4:	cmp	r6, r1
   145f8:	orreq	r5, r5, #1
   145fc:	str	ip, [sp, #16]
   14600:	ldr	ip, [r4, #40]	; 0x28
   14604:	stmib	sp, {r5, r8, ip}
   14608:	ldr	ip, [r4]
   1460c:	str	lr, [sp, #28]
   14610:	str	ip, [sp]
   14614:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   14618:	add	r1, r0, #1
   1461c:	mov	fp, r0
   14620:	mov	r0, r1
   14624:	str	r1, [sp, #36]	; 0x24
   14628:	bl	1536c <__snprintf_chk@plt+0x4000>
   1462c:	ldr	ip, [r4, #44]	; 0x2c
   14630:	mov	r3, sl
   14634:	mov	r2, r9
   14638:	ldr	r1, [sp, #36]	; 0x24
   1463c:	str	ip, [sp, #16]
   14640:	ldr	ip, [r4, #40]	; 0x28
   14644:	str	r0, [sp, #32]
   14648:	stmib	sp, {r5, r8, ip}
   1464c:	ldr	ip, [r4]
   14650:	str	ip, [sp]
   14654:	bl	12a48 <__snprintf_chk@plt+0x16dc>
   14658:	ldr	lr, [sp, #28]
   1465c:	cmp	r6, #0
   14660:	ldr	r0, [sp, #32]
   14664:	str	lr, [r7]
   14668:	strne	fp, [r6]
   1466c:	add	sp, sp, #44	; 0x2c
   14670:	ldrd	r4, [sp]
   14674:	ldrd	r6, [sp, #8]
   14678:	ldrd	r8, [sp, #16]
   1467c:	ldrd	sl, [sp, #24]
   14680:	add	sp, sp, #32
   14684:	pop	{pc}		; (ldr pc, [sp], #4)
   14688:	andeq	r8, r2, r8, ror #8
   1468c:	mov	r3, r2
   14690:	mov	r2, #0
   14694:	b	1459c <__snprintf_chk@plt+0x3230>
   14698:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1469c:	movw	r5, #33080	; 0x8138
   146a0:	movt	r5, #2
   146a4:	ldr	r3, [r5, #4]
   146a8:	strd	r6, [sp, #8]
   146ac:	str	r8, [sp, #16]
   146b0:	str	lr, [sp, #20]
   146b4:	ldr	r7, [r5]
   146b8:	cmp	r3, #1
   146bc:	ble	146e0 <__snprintf_chk@plt+0x3374>
   146c0:	mov	r4, #1
   146c4:	add	r6, r7, #4
   146c8:	ldr	r0, [r6, r4, lsl #3]
   146cc:	add	r4, r4, #1
   146d0:	bl	12778 <__snprintf_chk@plt+0x140c>
   146d4:	ldr	r3, [r5, #4]
   146d8:	cmp	r3, r4
   146dc:	bgt	146c8 <__snprintf_chk@plt+0x335c>
   146e0:	ldr	r0, [r7, #4]
   146e4:	movw	r4, #33640	; 0x8368
   146e8:	movt	r4, #2
   146ec:	cmp	r0, r4
   146f0:	beq	14704 <__snprintf_chk@plt+0x3398>
   146f4:	bl	12778 <__snprintf_chk@plt+0x140c>
   146f8:	mov	r3, #256	; 0x100
   146fc:	str	r3, [r5, #8]
   14700:	str	r4, [r5, #12]
   14704:	ldr	r4, [pc, #44]	; 14738 <__snprintf_chk@plt+0x33cc>
   14708:	cmp	r7, r4
   1470c:	beq	1471c <__snprintf_chk@plt+0x33b0>
   14710:	mov	r0, r7
   14714:	bl	12778 <__snprintf_chk@plt+0x140c>
   14718:	str	r4, [r5]
   1471c:	mov	r3, #1
   14720:	ldrd	r6, [sp, #8]
   14724:	str	r3, [r5, #4]
   14728:	ldrd	r4, [sp]
   1472c:	ldr	r8, [sp, #16]
   14730:	add	sp, sp, #20
   14734:	pop	{pc}		; (ldr pc, [sp], #4)
   14738:	andeq	r8, r2, r0, asr #2
   1473c:	ldr	r3, [pc, #4]	; 14748 <__snprintf_chk@plt+0x33dc>
   14740:	mvn	r2, #0
   14744:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14748:	andeq	r8, r2, r8, ror #8
   1474c:	ldr	r3, [pc]	; 14754 <__snprintf_chk@plt+0x33e8>
   14750:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14754:	andeq	r8, r2, r8, ror #8
   14758:	mov	r1, r0
   1475c:	ldr	r3, [pc, #8]	; 1476c <__snprintf_chk@plt+0x3400>
   14760:	mvn	r2, #0
   14764:	mov	r0, #0
   14768:	b	14208 <__snprintf_chk@plt+0x2e9c>
   1476c:	andeq	r8, r2, r8, ror #8
   14770:	mov	r2, r1
   14774:	ldr	r3, [pc, #8]	; 14784 <__snprintf_chk@plt+0x3418>
   14778:	mov	r1, r0
   1477c:	mov	r0, #0
   14780:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14784:	andeq	r8, r2, r8, ror #8
   14788:	strd	r4, [sp, #-12]!
   1478c:	mov	r5, r2
   14790:	mov	r4, r0
   14794:	str	lr, [sp, #8]
   14798:	sub	sp, sp, #52	; 0x34
   1479c:	mov	r0, sp
   147a0:	bl	128a4 <__snprintf_chk@plt+0x1538>
   147a4:	mov	r3, sp
   147a8:	mov	r1, r5
   147ac:	mov	r0, r4
   147b0:	mvn	r2, #0
   147b4:	bl	14208 <__snprintf_chk@plt+0x2e9c>
   147b8:	add	sp, sp, #52	; 0x34
   147bc:	ldrd	r4, [sp]
   147c0:	add	sp, sp, #8
   147c4:	pop	{pc}		; (ldr pc, [sp], #4)
   147c8:	strd	r4, [sp, #-16]!
   147cc:	mov	r5, r2
   147d0:	mov	r4, r0
   147d4:	str	r6, [sp, #8]
   147d8:	mov	r6, r3
   147dc:	str	lr, [sp, #12]
   147e0:	sub	sp, sp, #48	; 0x30
   147e4:	mov	r0, sp
   147e8:	bl	128a4 <__snprintf_chk@plt+0x1538>
   147ec:	mov	r3, sp
   147f0:	mov	r2, r6
   147f4:	mov	r1, r5
   147f8:	mov	r0, r4
   147fc:	bl	14208 <__snprintf_chk@plt+0x2e9c>
   14800:	add	sp, sp, #48	; 0x30
   14804:	ldrd	r4, [sp]
   14808:	ldr	r6, [sp, #8]
   1480c:	add	sp, sp, #12
   14810:	pop	{pc}		; (ldr pc, [sp], #4)
   14814:	mov	r2, r1
   14818:	mov	r1, r0
   1481c:	mov	r0, #0
   14820:	b	14788 <__snprintf_chk@plt+0x341c>
   14824:	mov	r3, r2
   14828:	mov	r2, r1
   1482c:	mov	r1, r0
   14830:	mov	r0, #0
   14834:	b	147c8 <__snprintf_chk@plt+0x345c>
   14838:	ldr	ip, [pc, #140]	; 148cc <__snprintf_chk@plt+0x3560>
   1483c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14840:	ldrd	r4, [ip]
   14844:	strd	r6, [sp, #8]
   14848:	ldrd	r6, [ip, #8]
   1484c:	strd	r8, [sp, #16]
   14850:	lsr	r9, r2, #5
   14854:	str	lr, [sp, #24]
   14858:	sub	sp, sp, #52	; 0x34
   1485c:	and	lr, r2, #31
   14860:	add	r8, sp, #8
   14864:	mov	r2, r1
   14868:	strd	r4, [sp]
   1486c:	mov	r1, r0
   14870:	mov	r3, sp
   14874:	strd	r6, [sp, #8]
   14878:	mov	r0, #0
   1487c:	ldrd	r4, [ip, #16]
   14880:	ldrd	r6, [ip, #24]
   14884:	strd	r4, [sp, #16]
   14888:	ldrd	r4, [ip, #32]
   1488c:	strd	r6, [sp, #24]
   14890:	ldrd	r6, [ip, #40]	; 0x28
   14894:	strd	r4, [sp, #32]
   14898:	strd	r6, [sp, #40]	; 0x28
   1489c:	ldr	ip, [r8, r9, lsl #2]
   148a0:	mvn	r4, ip, lsr lr
   148a4:	and	r4, r4, #1
   148a8:	eor	lr, ip, r4, lsl lr
   148ac:	str	lr, [r8, r9, lsl #2]
   148b0:	bl	14208 <__snprintf_chk@plt+0x2e9c>
   148b4:	add	sp, sp, #52	; 0x34
   148b8:	ldrd	r4, [sp]
   148bc:	ldrd	r6, [sp, #8]
   148c0:	ldrd	r8, [sp, #16]
   148c4:	add	sp, sp, #24
   148c8:	pop	{pc}		; (ldr pc, [sp], #4)
   148cc:	andeq	r8, r2, r8, ror #8
   148d0:	mov	r2, r1
   148d4:	mvn	r1, #0
   148d8:	b	14838 <__snprintf_chk@plt+0x34cc>
   148dc:	mov	r2, #58	; 0x3a
   148e0:	mvn	r1, #0
   148e4:	b	14838 <__snprintf_chk@plt+0x34cc>
   148e8:	mov	r2, #58	; 0x3a
   148ec:	b	14838 <__snprintf_chk@plt+0x34cc>
   148f0:	strd	r4, [sp, #-20]!	; 0xffffffec
   148f4:	strd	r6, [sp, #8]
   148f8:	mov	r6, r0
   148fc:	mov	r7, r2
   14900:	str	lr, [sp, #16]
   14904:	sub	sp, sp, #100	; 0x64
   14908:	mov	r0, sp
   1490c:	bl	128a4 <__snprintf_chk@plt+0x1538>
   14910:	ldrd	r4, [sp, #8]
   14914:	mov	r1, r7
   14918:	mov	r0, r6
   1491c:	add	r3, sp, #48	; 0x30
   14920:	mvn	r2, #0
   14924:	ldrd	r6, [sp]
   14928:	strd	r4, [sp, #56]	; 0x38
   1492c:	ldrd	r4, [sp, #16]
   14930:	strd	r6, [sp, #48]	; 0x30
   14934:	ldrd	r6, [sp, #32]
   14938:	ldr	lr, [sp, #60]	; 0x3c
   1493c:	strd	r4, [sp, #64]	; 0x40
   14940:	ldrd	r4, [sp, #24]
   14944:	mvn	ip, lr
   14948:	and	ip, ip, #67108864	; 0x4000000
   1494c:	strd	r4, [sp, #72]	; 0x48
   14950:	eor	ip, ip, lr
   14954:	ldrd	r4, [sp, #40]	; 0x28
   14958:	str	ip, [sp, #60]	; 0x3c
   1495c:	strd	r6, [sp, #80]	; 0x50
   14960:	strd	r4, [sp, #88]	; 0x58
   14964:	bl	14208 <__snprintf_chk@plt+0x2e9c>
   14968:	add	sp, sp, #100	; 0x64
   1496c:	ldrd	r4, [sp]
   14970:	ldrd	r6, [sp, #8]
   14974:	add	sp, sp, #16
   14978:	pop	{pc}		; (ldr pc, [sp], #4)
   1497c:	ldr	ip, [pc, #156]	; 14a20 <__snprintf_chk@plt+0x36b4>
   14980:	cmp	r2, #0
   14984:	cmpne	r1, #0
   14988:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1498c:	strd	r6, [sp, #8]
   14990:	mov	r6, r2
   14994:	str	r8, [sp, #16]
   14998:	mov	r8, r3
   1499c:	strd	sl, [sp, #20]
   149a0:	ldrd	r4, [ip]
   149a4:	str	lr, [sp, #28]
   149a8:	sub	sp, sp, #48	; 0x30
   149ac:	mov	lr, #10
   149b0:	ldrd	r2, [ip, #8]
   149b4:	ldrd	sl, [ip, #16]
   149b8:	strd	r4, [sp]
   149bc:	ldrd	r4, [ip, #32]
   149c0:	str	lr, [sp]
   149c4:	strd	r2, [sp, #8]
   149c8:	strd	sl, [sp, #16]
   149cc:	ldrd	r2, [ip, #24]
   149d0:	ldrd	sl, [ip, #40]	; 0x28
   149d4:	strd	r2, [sp, #24]
   149d8:	strd	r4, [sp, #32]
   149dc:	strd	sl, [sp, #40]	; 0x28
   149e0:	beq	14a1c <__snprintf_chk@plt+0x36b0>
   149e4:	ldr	r2, [sp, #80]	; 0x50
   149e8:	mov	r7, r1
   149ec:	mov	r3, sp
   149f0:	mov	r1, r8
   149f4:	str	r7, [sp, #40]	; 0x28
   149f8:	str	r6, [sp, #44]	; 0x2c
   149fc:	bl	14208 <__snprintf_chk@plt+0x2e9c>
   14a00:	add	sp, sp, #48	; 0x30
   14a04:	ldrd	r4, [sp]
   14a08:	ldrd	r6, [sp, #8]
   14a0c:	ldr	r8, [sp, #16]
   14a10:	ldrd	sl, [sp, #20]
   14a14:	add	sp, sp, #28
   14a18:	pop	{pc}		; (ldr pc, [sp], #4)
   14a1c:	bl	11360 <abort@plt>
   14a20:	andeq	r8, r2, r8, ror #8
   14a24:	mvn	ip, #0
   14a28:	push	{lr}		; (str lr, [sp, #-4]!)
   14a2c:	sub	sp, sp, #12
   14a30:	str	ip, [sp]
   14a34:	bl	1497c <__snprintf_chk@plt+0x3610>
   14a38:	add	sp, sp, #12
   14a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a40:	mvn	ip, #0
   14a44:	push	{lr}		; (str lr, [sp, #-4]!)
   14a48:	sub	sp, sp, #12
   14a4c:	mov	r3, r2
   14a50:	mov	r2, r1
   14a54:	mov	r1, r0
   14a58:	mov	r0, #0
   14a5c:	str	ip, [sp]
   14a60:	bl	1497c <__snprintf_chk@plt+0x3610>
   14a64:	add	sp, sp, #12
   14a68:	pop	{pc}		; (ldr pc, [sp], #4)
   14a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   14a70:	sub	sp, sp, #12
   14a74:	str	r3, [sp]
   14a78:	mov	r3, r2
   14a7c:	mov	r2, r1
   14a80:	mov	r1, r0
   14a84:	mov	r0, #0
   14a88:	bl	1497c <__snprintf_chk@plt+0x3610>
   14a8c:	add	sp, sp, #12
   14a90:	pop	{pc}		; (ldr pc, [sp], #4)
   14a94:	ldr	r3, [pc]	; 14a9c <__snprintf_chk@plt+0x3730>
   14a98:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14a9c:	andeq	r8, r2, r8, asr #2
   14aa0:	mov	r2, r1
   14aa4:	ldr	r3, [pc, #8]	; 14ab4 <__snprintf_chk@plt+0x3748>
   14aa8:	mov	r1, r0
   14aac:	mov	r0, #0
   14ab0:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14ab4:	andeq	r8, r2, r8, asr #2
   14ab8:	ldr	r3, [pc, #4]	; 14ac4 <__snprintf_chk@plt+0x3758>
   14abc:	mvn	r2, #0
   14ac0:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14ac4:	andeq	r8, r2, r8, asr #2
   14ac8:	mov	r1, r0
   14acc:	ldr	r3, [pc, #8]	; 14adc <__snprintf_chk@plt+0x3770>
   14ad0:	mvn	r2, #0
   14ad4:	mov	r0, #0
   14ad8:	b	14208 <__snprintf_chk@plt+0x2e9c>
   14adc:	andeq	r8, r2, r8, asr #2
   14ae0:	strd	r4, [sp, #-20]!	; 0xffffffec
   14ae4:	strd	r6, [sp, #8]
   14ae8:	mov	r6, r1
   14aec:	str	lr, [sp, #16]
   14af0:	sub	sp, sp, #12
   14af4:	ldrb	r3, [r0]
   14af8:	sub	r3, r3, #48	; 0x30
   14afc:	cmp	r3, #9
   14b00:	bls	14b64 <__snprintf_chk@plt+0x37f8>
   14b04:	mov	r7, r0
   14b08:	ldr	r5, [pc, #352]	; 14c70 <__snprintf_chk@plt+0x3904>
   14b0c:	mov	r4, #0
   14b10:	b	14b20 <__snprintf_chk@plt+0x37b4>
   14b14:	add	r4, r4, #1
   14b18:	cmp	r4, #35	; 0x23
   14b1c:	beq	14b98 <__snprintf_chk@plt+0x382c>
   14b20:	mov	r0, r5
   14b24:	mov	r1, r7
   14b28:	bl	11060 <strcmp@plt>
   14b2c:	cmp	r0, #0
   14b30:	add	r5, r5, #12
   14b34:	bne	14b14 <__snprintf_chk@plt+0x37a8>
   14b38:	add	r4, r4, r4, lsl #1
   14b3c:	movw	r3, #33144	; 0x8178
   14b40:	movt	r3, #2
   14b44:	ldr	r4, [r3, r4, lsl #2]
   14b48:	asr	r0, r4, #31
   14b4c:	str	r4, [r6]
   14b50:	add	sp, sp, #12
   14b54:	ldrd	r4, [sp]
   14b58:	ldrd	r6, [sp, #8]
   14b5c:	add	sp, sp, #16
   14b60:	pop	{pc}		; (ldr pc, [sp], #4)
   14b64:	mov	r2, #10
   14b68:	add	r1, sp, #4
   14b6c:	bl	1106c <strtol@plt>
   14b70:	ldr	r2, [sp, #4]
   14b74:	mov	r4, r0
   14b78:	ldrb	r2, [r2]
   14b7c:	cmp	r0, #64	; 0x40
   14b80:	cmple	r2, #0
   14b84:	beq	14b48 <__snprintf_chk@plt+0x37dc>
   14b88:	mvn	r3, #0
   14b8c:	mov	r0, r3
   14b90:	str	r3, [r6]
   14b94:	b	14b50 <__snprintf_chk@plt+0x37e4>
   14b98:	bl	11348 <__libc_current_sigrtmin@plt>
   14b9c:	mov	r5, r0
   14ba0:	bl	11234 <__libc_current_sigrtmax@plt>
   14ba4:	cmp	r5, #0
   14ba8:	mov	r4, r0
   14bac:	ble	14bcc <__snprintf_chk@plt+0x3860>
   14bb0:	movw	r1, #27640	; 0x6bf8
   14bb4:	movt	r1, #1
   14bb8:	mov	r2, #5
   14bbc:	mov	r0, r7
   14bc0:	bl	11354 <strncmp@plt>
   14bc4:	cmp	r0, #0
   14bc8:	beq	14c38 <__snprintf_chk@plt+0x38cc>
   14bcc:	cmp	r4, #0
   14bd0:	ble	14b88 <__snprintf_chk@plt+0x381c>
   14bd4:	movw	r1, #27648	; 0x6c00
   14bd8:	movt	r1, #1
   14bdc:	mov	r2, #5
   14be0:	mov	r0, r7
   14be4:	bl	11354 <strncmp@plt>
   14be8:	cmp	r0, #0
   14bec:	bne	14b88 <__snprintf_chk@plt+0x381c>
   14bf0:	add	r0, r7, #5
   14bf4:	mov	r2, #10
   14bf8:	add	r1, sp, #4
   14bfc:	bl	1106c <strtol@plt>
   14c00:	ldr	r3, [sp, #4]
   14c04:	ldrb	r3, [r3]
   14c08:	cmp	r3, #0
   14c0c:	bne	14b88 <__snprintf_chk@plt+0x381c>
   14c10:	sub	r3, r5, r4
   14c14:	cmp	r0, r3
   14c18:	movlt	r5, #0
   14c1c:	movge	r5, #1
   14c20:	cmp	r0, #0
   14c24:	movgt	r5, #0
   14c28:	cmp	r5, #0
   14c2c:	beq	14b88 <__snprintf_chk@plt+0x381c>
   14c30:	add	r4, r4, r0
   14c34:	b	14b48 <__snprintf_chk@plt+0x37dc>
   14c38:	add	r0, r7, #5
   14c3c:	mov	r2, #10
   14c40:	add	r1, sp, #4
   14c44:	bl	1106c <strtol@plt>
   14c48:	ldr	r3, [sp, #4]
   14c4c:	ldrb	r3, [r3]
   14c50:	cmp	r0, #0
   14c54:	cmpge	r3, #0
   14c58:	bne	14b88 <__snprintf_chk@plt+0x381c>
   14c5c:	sub	r3, r4, r5
   14c60:	cmp	r0, r3
   14c64:	bgt	14b88 <__snprintf_chk@plt+0x381c>
   14c68:	add	r4, r5, r0
   14c6c:	b	14b48 <__snprintf_chk@plt+0x37dc>
   14c70:	andeq	r8, r2, ip, ror r1
   14c74:	strd	r4, [sp, #-16]!
   14c78:	mov	r3, #0
   14c7c:	mov	r4, r0
   14c80:	mov	r5, r1
   14c84:	str	r6, [sp, #8]
   14c88:	str	lr, [sp, #12]
   14c8c:	movw	lr, #33144	; 0x8178
   14c90:	movt	lr, #2
   14c94:	sub	sp, sp, #8
   14c98:	mov	r2, lr
   14c9c:	b	14cac <__snprintf_chk@plt+0x3940>
   14ca0:	add	r3, r3, #1
   14ca4:	cmp	r3, #35	; 0x23
   14ca8:	beq	14cec <__snprintf_chk@plt+0x3980>
   14cac:	ldr	ip, [r2]
   14cb0:	add	r2, r2, #12
   14cb4:	cmp	ip, r4
   14cb8:	bne	14ca0 <__snprintf_chk@plt+0x3934>
   14cbc:	add	r3, r3, r3, lsl #1
   14cc0:	mov	r0, r5
   14cc4:	mov	r4, #0
   14cc8:	add	r3, lr, r3, lsl #2
   14ccc:	add	r1, r3, #4
   14cd0:	bl	11180 <strcpy@plt>
   14cd4:	mov	r0, r4
   14cd8:	add	sp, sp, #8
   14cdc:	ldrd	r4, [sp]
   14ce0:	ldr	r6, [sp, #8]
   14ce4:	add	sp, sp, #12
   14ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cec:	bl	11348 <__libc_current_sigrtmin@plt>
   14cf0:	mov	r6, r0
   14cf4:	bl	11234 <__libc_current_sigrtmax@plt>
   14cf8:	cmp	r4, r0
   14cfc:	movle	r3, #0
   14d00:	movgt	r3, #1
   14d04:	cmp	r4, r6
   14d08:	orrlt	r3, r3, #1
   14d0c:	cmp	r3, #0
   14d10:	bne	14d88 <__snprintf_chk@plt+0x3a1c>
   14d14:	sub	r3, r0, r6
   14d18:	add	r3, r6, r3, asr #1
   14d1c:	cmp	r3, r4
   14d20:	bge	14d6c <__snprintf_chk@plt+0x3a00>
   14d24:	movw	r3, #27648	; 0x6c00
   14d28:	movt	r3, #1
   14d2c:	ldr	r2, [r3]
   14d30:	mov	r6, r0
   14d34:	ldrh	r3, [r3, #4]
   14d38:	str	r2, [r5]
   14d3c:	strh	r3, [r5, #4]
   14d40:	subs	r4, r4, r6
   14d44:	beq	14cd4 <__snprintf_chk@plt+0x3968>
   14d48:	add	r0, r5, #5
   14d4c:	movw	r3, #27656	; 0x6c08
   14d50:	movt	r3, #1
   14d54:	mvn	r2, #0
   14d58:	str	r4, [sp]
   14d5c:	mov	r1, #1
   14d60:	mov	r4, #0
   14d64:	bl	11258 <__sprintf_chk@plt>
   14d68:	b	14cd4 <__snprintf_chk@plt+0x3968>
   14d6c:	movw	r3, #27640	; 0x6bf8
   14d70:	movt	r3, #1
   14d74:	ldr	r2, [r3]
   14d78:	ldrh	r3, [r3, #4]
   14d7c:	str	r2, [r5]
   14d80:	strh	r3, [r5, #4]
   14d84:	b	14d40 <__snprintf_chk@plt+0x39d4>
   14d88:	mvn	r4, #0
   14d8c:	b	14cd4 <__snprintf_chk@plt+0x3968>
   14d90:	cmp	r1, #0
   14d94:	strd	r4, [sp, #-16]!
   14d98:	mov	ip, r3
   14d9c:	str	r6, [sp, #8]
   14da0:	mov	r4, r0
   14da4:	str	lr, [sp, #12]
   14da8:	sub	sp, sp, #32
   14dac:	ldr	r5, [sp, #48]	; 0x30
   14db0:	ldr	r6, [sp, #52]	; 0x34
   14db4:	beq	14ef8 <__snprintf_chk@plt+0x3b8c>
   14db8:	mov	r3, r1
   14dbc:	mov	r1, #1
   14dc0:	stm	sp, {r2, ip}
   14dc4:	movw	r2, #27660	; 0x6c0c
   14dc8:	movt	r2, #1
   14dcc:	bl	112b8 <__fprintf_chk@plt>
   14dd0:	mov	r2, #5
   14dd4:	movw	r1, #27680	; 0x6c20
   14dd8:	movt	r1, #1
   14ddc:	mov	r0, #0
   14de0:	bl	110f0 <dcgettext@plt>
   14de4:	movw	ip, #2022	; 0x7e6
   14de8:	mov	r3, r0
   14dec:	mov	r1, #1
   14df0:	movw	r2, #28408	; 0x6ef8
   14df4:	movt	r2, #1
   14df8:	mov	r0, r4
   14dfc:	str	ip, [sp]
   14e00:	bl	112b8 <__fprintf_chk@plt>
   14e04:	mov	r1, r4
   14e08:	mov	r0, #10
   14e0c:	bl	110e4 <fputc_unlocked@plt>
   14e10:	mov	r2, #5
   14e14:	movw	r1, #27684	; 0x6c24
   14e18:	movt	r1, #1
   14e1c:	mov	r0, #0
   14e20:	bl	110f0 <dcgettext@plt>
   14e24:	mov	r2, r0
   14e28:	mov	r1, #1
   14e2c:	movw	r3, #27856	; 0x6cd0
   14e30:	movt	r3, #1
   14e34:	mov	r0, r4
   14e38:	bl	112b8 <__fprintf_chk@plt>
   14e3c:	mov	r1, r4
   14e40:	mov	r0, #10
   14e44:	bl	110e4 <fputc_unlocked@plt>
   14e48:	cmp	r6, #9
   14e4c:	ldrls	pc, [pc, r6, lsl #2]
   14e50:	b	15164 <__snprintf_chk@plt+0x3df8>
   14e54:	andeq	r4, r1, r4, ror #29
   14e58:	andeq	r4, r1, r4, lsl pc
   14e5c:	andeq	r4, r1, r0, asr pc
   14e60:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14e64:	ldrdeq	r4, [r1], -r8
   14e68:	andeq	r5, r1, r0, lsl r0
   14e6c:	andeq	r5, r1, r8, asr r0
   14e70:	andeq	r5, r1, ip, lsr #1
   14e74:	andeq	r5, r1, r4, lsl #2
   14e78:	andeq	r4, r1, ip, ror lr
   14e7c:	movw	r1, #28160	; 0x6e00
   14e80:	movt	r1, #1
   14e84:	mov	r2, #5
   14e88:	mov	r0, #0
   14e8c:	bl	110f0 <dcgettext@plt>
   14e90:	ldr	lr, [r5, #4]
   14e94:	mov	r2, r0
   14e98:	mov	r1, #1
   14e9c:	mov	r0, r4
   14ea0:	ldr	r3, [r5, #8]
   14ea4:	ldr	ip, [r5, #32]
   14ea8:	str	lr, [sp]
   14eac:	ldr	lr, [r5, #12]
   14eb0:	str	ip, [sp, #28]
   14eb4:	ldr	ip, [r5, #28]
   14eb8:	str	r3, [sp, #4]
   14ebc:	ldr	r3, [r5, #16]
   14ec0:	str	lr, [sp, #8]
   14ec4:	ldr	lr, [r5, #20]
   14ec8:	str	ip, [sp, #24]
   14ecc:	ldr	ip, [r5, #24]
   14ed0:	str	r3, [sp, #12]
   14ed4:	ldr	r3, [r5]
   14ed8:	str	lr, [sp, #16]
   14edc:	str	ip, [sp, #20]
   14ee0:	bl	112b8 <__fprintf_chk@plt>
   14ee4:	add	sp, sp, #32
   14ee8:	ldrd	r4, [sp]
   14eec:	ldr	r6, [sp, #8]
   14ef0:	add	sp, sp, #12
   14ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ef8:	mov	r3, r2
   14efc:	mov	r1, #1
   14f00:	str	ip, [sp]
   14f04:	movw	r2, #27672	; 0x6c18
   14f08:	movt	r2, #1
   14f0c:	bl	112b8 <__fprintf_chk@plt>
   14f10:	b	14dd0 <__snprintf_chk@plt+0x3a64>
   14f14:	mov	r2, #5
   14f18:	movw	r1, #27892	; 0x6cf4
   14f1c:	movt	r1, #1
   14f20:	mov	r0, #0
   14f24:	bl	110f0 <dcgettext@plt>
   14f28:	ldr	r3, [r5]
   14f2c:	mov	r2, r0
   14f30:	mov	r1, #1
   14f34:	mov	r0, r4
   14f38:	add	sp, sp, #32
   14f3c:	ldrd	r4, [sp]
   14f40:	ldr	r6, [sp, #8]
   14f44:	ldr	lr, [sp, #12]
   14f48:	add	sp, sp, #16
   14f4c:	b	112b8 <__fprintf_chk@plt>
   14f50:	mov	r2, #5
   14f54:	movw	r1, #27908	; 0x6d04
   14f58:	movt	r1, #1
   14f5c:	mov	r0, #0
   14f60:	bl	110f0 <dcgettext@plt>
   14f64:	ldm	r5, {r3, ip}
   14f68:	mov	r2, r0
   14f6c:	mov	r1, #1
   14f70:	mov	r0, r4
   14f74:	str	ip, [sp, #48]	; 0x30
   14f78:	add	sp, sp, #32
   14f7c:	ldrd	r4, [sp]
   14f80:	ldr	r6, [sp, #8]
   14f84:	ldr	lr, [sp, #12]
   14f88:	add	sp, sp, #16
   14f8c:	b	112b8 <__fprintf_chk@plt>
   14f90:	mov	r2, #5
   14f94:	movw	r1, #27932	; 0x6d1c
   14f98:	movt	r1, #1
   14f9c:	mov	r0, #0
   14fa0:	bl	110f0 <dcgettext@plt>
   14fa4:	ldm	r5, {r3, lr}
   14fa8:	mov	r2, r0
   14fac:	mov	r1, #1
   14fb0:	mov	r0, r4
   14fb4:	ldr	ip, [r5, #8]
   14fb8:	str	lr, [sp, #48]	; 0x30
   14fbc:	str	ip, [sp, #52]	; 0x34
   14fc0:	add	sp, sp, #32
   14fc4:	ldrd	r4, [sp]
   14fc8:	ldr	r6, [sp, #8]
   14fcc:	ldr	lr, [sp, #12]
   14fd0:	add	sp, sp, #16
   14fd4:	b	112b8 <__fprintf_chk@plt>
   14fd8:	mov	r2, #5
   14fdc:	movw	r1, #27960	; 0x6d38
   14fe0:	movt	r1, #1
   14fe4:	mov	r0, #0
   14fe8:	bl	110f0 <dcgettext@plt>
   14fec:	ldmib	r5, {r3, ip, lr}
   14ff0:	mov	r2, r0
   14ff4:	mov	r1, #1
   14ff8:	mov	r0, r4
   14ffc:	str	r3, [sp]
   15000:	ldr	r3, [r5]
   15004:	stmib	sp, {ip, lr}
   15008:	bl	112b8 <__fprintf_chk@plt>
   1500c:	b	14ee4 <__snprintf_chk@plt+0x3b78>
   15010:	mov	r2, #5
   15014:	movw	r1, #27992	; 0x6d58
   15018:	movt	r1, #1
   1501c:	mov	r0, #0
   15020:	bl	110f0 <dcgettext@plt>
   15024:	ldmib	r5, {ip, lr}
   15028:	mov	r2, r0
   1502c:	mov	r1, #1
   15030:	mov	r0, r4
   15034:	ldr	r3, [r5, #16]
   15038:	str	ip, [sp]
   1503c:	ldr	ip, [r5, #12]
   15040:	str	r3, [sp, #12]
   15044:	ldr	r3, [r5]
   15048:	str	lr, [sp, #4]
   1504c:	str	ip, [sp, #8]
   15050:	bl	112b8 <__fprintf_chk@plt>
   15054:	b	14ee4 <__snprintf_chk@plt+0x3b78>
   15058:	mov	r2, #5
   1505c:	movw	r1, #28028	; 0x6d7c
   15060:	movt	r1, #1
   15064:	mov	r0, #0
   15068:	bl	110f0 <dcgettext@plt>
   1506c:	ldr	lr, [r5, #4]
   15070:	mov	r2, r0
   15074:	mov	r1, #1
   15078:	mov	r0, r4
   1507c:	ldr	r3, [r5, #8]
   15080:	ldr	ip, [r5, #20]
   15084:	str	lr, [sp]
   15088:	ldr	lr, [r5, #12]
   1508c:	str	ip, [sp, #16]
   15090:	ldr	ip, [r5, #16]
   15094:	str	r3, [sp, #4]
   15098:	ldr	r3, [r5]
   1509c:	str	lr, [sp, #8]
   150a0:	str	ip, [sp, #12]
   150a4:	bl	112b8 <__fprintf_chk@plt>
   150a8:	b	14ee4 <__snprintf_chk@plt+0x3b78>
   150ac:	mov	r2, #5
   150b0:	movw	r1, #28068	; 0x6da4
   150b4:	movt	r1, #1
   150b8:	mov	r0, #0
   150bc:	bl	110f0 <dcgettext@plt>
   150c0:	ldmib	r5, {r3, ip}
   150c4:	mov	r2, r0
   150c8:	mov	r1, #1
   150cc:	mov	r0, r4
   150d0:	ldr	lr, [r5, #24]
   150d4:	str	r3, [sp]
   150d8:	ldr	r3, [r5, #12]
   150dc:	str	lr, [sp, #20]
   150e0:	ldr	lr, [r5, #20]
   150e4:	str	ip, [sp, #4]
   150e8:	ldr	ip, [r5, #16]
   150ec:	str	r3, [sp, #8]
   150f0:	ldr	r3, [r5]
   150f4:	str	ip, [sp, #12]
   150f8:	str	lr, [sp, #16]
   150fc:	bl	112b8 <__fprintf_chk@plt>
   15100:	b	14ee4 <__snprintf_chk@plt+0x3b78>
   15104:	mov	r2, #5
   15108:	movw	r1, #28112	; 0x6dd0
   1510c:	movt	r1, #1
   15110:	mov	r0, #0
   15114:	bl	110f0 <dcgettext@plt>
   15118:	ldmib	r5, {ip, lr}
   1511c:	mov	r2, r0
   15120:	mov	r1, #1
   15124:	mov	r0, r4
   15128:	ldr	r3, [r5, #28]
   1512c:	str	ip, [sp]
   15130:	ldr	ip, [r5, #12]
   15134:	str	r3, [sp, #24]
   15138:	ldr	r3, [r5, #24]
   1513c:	str	lr, [sp, #4]
   15140:	ldr	lr, [r5, #16]
   15144:	str	ip, [sp, #8]
   15148:	ldr	ip, [r5, #20]
   1514c:	str	r3, [sp, #20]
   15150:	ldr	r3, [r5]
   15154:	str	lr, [sp, #12]
   15158:	str	ip, [sp, #16]
   1515c:	bl	112b8 <__fprintf_chk@plt>
   15160:	b	14ee4 <__snprintf_chk@plt+0x3b78>
   15164:	movw	r1, #28212	; 0x6e34
   15168:	movt	r1, #1
   1516c:	b	14e84 <__snprintf_chk@plt+0x3b18>
   15170:	strd	r4, [sp, #-12]!
   15174:	str	lr, [sp, #8]
   15178:	sub	sp, sp, #12
   1517c:	ldr	r5, [sp, #24]
   15180:	ldr	ip, [r5]
   15184:	cmp	ip, #0
   15188:	beq	151a4 <__snprintf_chk@plt+0x3e38>
   1518c:	mov	lr, r5
   15190:	mov	ip, #0
   15194:	ldr	r4, [lr, #4]!
   15198:	add	ip, ip, #1
   1519c:	cmp	r4, #0
   151a0:	bne	15194 <__snprintf_chk@plt+0x3e28>
   151a4:	stm	sp, {r5, ip}
   151a8:	bl	14d90 <__snprintf_chk@plt+0x3a24>
   151ac:	add	sp, sp, #12
   151b0:	ldrd	r4, [sp]
   151b4:	add	sp, sp, #8
   151b8:	pop	{pc}		; (ldr pc, [sp], #4)
   151bc:	strd	r4, [sp, #-16]!
   151c0:	mov	ip, #0
   151c4:	str	r6, [sp, #8]
   151c8:	str	lr, [sp, #12]
   151cc:	sub	sp, sp, #48	; 0x30
   151d0:	ldr	r5, [sp, #64]	; 0x40
   151d4:	add	r6, sp, #8
   151d8:	mov	r4, r6
   151dc:	ldr	lr, [r5], #4
   151e0:	cmp	lr, #0
   151e4:	str	lr, [r4], #4
   151e8:	beq	151f8 <__snprintf_chk@plt+0x3e8c>
   151ec:	add	ip, ip, #1
   151f0:	cmp	ip, #10
   151f4:	bne	151dc <__snprintf_chk@plt+0x3e70>
   151f8:	stm	sp, {r6, ip}
   151fc:	bl	14d90 <__snprintf_chk@plt+0x3a24>
   15200:	add	sp, sp, #48	; 0x30
   15204:	ldrd	r4, [sp]
   15208:	ldr	r6, [sp, #8]
   1520c:	add	sp, sp, #12
   15210:	pop	{pc}		; (ldr pc, [sp], #4)
   15214:	push	{r3}		; (str r3, [sp, #-4]!)
   15218:	mov	ip, #0
   1521c:	strd	r4, [sp, #-12]!
   15220:	str	lr, [sp, #8]
   15224:	sub	sp, sp, #56	; 0x38
   15228:	add	r3, sp, #72	; 0x48
   1522c:	add	r5, sp, #16
   15230:	mov	r4, r3
   15234:	mov	lr, r5
   15238:	str	r3, [sp, #12]
   1523c:	ldr	r3, [r4], #4
   15240:	cmp	r3, #0
   15244:	str	r3, [lr], #4
   15248:	beq	15258 <__snprintf_chk@plt+0x3eec>
   1524c:	add	ip, ip, #1
   15250:	cmp	ip, #10
   15254:	bne	1523c <__snprintf_chk@plt+0x3ed0>
   15258:	ldr	r3, [sp, #68]	; 0x44
   1525c:	stm	sp, {r5, ip}
   15260:	bl	14d90 <__snprintf_chk@plt+0x3a24>
   15264:	add	sp, sp, #56	; 0x38
   15268:	ldrd	r4, [sp]
   1526c:	ldr	lr, [sp, #8]
   15270:	add	sp, sp, #12
   15274:	add	sp, sp, #4
   15278:	bx	lr
   1527c:	movw	r3, #33588	; 0x8334
   15280:	movt	r3, #2
   15284:	str	r4, [sp, #-8]!
   15288:	mov	r0, #10
   1528c:	ldr	r1, [r3]
   15290:	str	lr, [sp, #4]
   15294:	bl	110e4 <fputc_unlocked@plt>
   15298:	mov	r2, #5
   1529c:	movw	r1, #28272	; 0x6e70
   152a0:	movt	r1, #1
   152a4:	mov	r0, #0
   152a8:	bl	110f0 <dcgettext@plt>
   152ac:	mov	r1, r0
   152b0:	movw	r2, #28292	; 0x6e84
   152b4:	movt	r2, #1
   152b8:	mov	r0, #1
   152bc:	bl	11288 <__printf_chk@plt>
   152c0:	mov	r2, #5
   152c4:	movw	r1, #28316	; 0x6e9c
   152c8:	movt	r1, #1
   152cc:	mov	r0, #0
   152d0:	bl	110f0 <dcgettext@plt>
   152d4:	mov	r1, r0
   152d8:	movw	r3, #26620	; 0x67fc
   152dc:	movt	r3, #1
   152e0:	movw	r2, #26660	; 0x6824
   152e4:	movt	r2, #1
   152e8:	mov	r0, #1
   152ec:	bl	11288 <__printf_chk@plt>
   152f0:	mov	r2, #5
   152f4:	movw	r1, #28336	; 0x6eb0
   152f8:	movt	r1, #1
   152fc:	mov	r0, #0
   15300:	bl	110f0 <dcgettext@plt>
   15304:	mov	r1, r0
   15308:	movw	r2, #28376	; 0x6ed8
   1530c:	movt	r2, #1
   15310:	mov	r0, #1
   15314:	ldr	r4, [sp]
   15318:	ldr	lr, [sp, #4]
   1531c:	add	sp, sp, #8
   15320:	b	11288 <__printf_chk@plt>
   15324:	str	r4, [sp, #-8]!
   15328:	str	lr, [sp, #4]
   1532c:	bl	15918 <__snprintf_chk@plt+0x45ac>
   15330:	cmp	r0, #0
   15334:	beq	15344 <__snprintf_chk@plt+0x3fd8>
   15338:	ldr	r4, [sp]
   1533c:	add	sp, sp, #4
   15340:	pop	{pc}		; (ldr pc, [sp], #4)
   15344:	bl	1579c <__snprintf_chk@plt+0x4430>
   15348:	str	r4, [sp, #-8]!
   1534c:	str	lr, [sp, #4]
   15350:	bl	15918 <__snprintf_chk@plt+0x45ac>
   15354:	cmp	r0, #0
   15358:	beq	15368 <__snprintf_chk@plt+0x3ffc>
   1535c:	ldr	r4, [sp]
   15360:	add	sp, sp, #4
   15364:	pop	{pc}		; (ldr pc, [sp], #4)
   15368:	bl	1579c <__snprintf_chk@plt+0x4430>
   1536c:	str	r4, [sp, #-8]!
   15370:	str	lr, [sp, #4]
   15374:	bl	15918 <__snprintf_chk@plt+0x45ac>
   15378:	cmp	r0, #0
   1537c:	beq	1538c <__snprintf_chk@plt+0x4020>
   15380:	ldr	r4, [sp]
   15384:	add	sp, sp, #4
   15388:	pop	{pc}		; (ldr pc, [sp], #4)
   1538c:	bl	1579c <__snprintf_chk@plt+0x4430>
   15390:	strd	r4, [sp, #-16]!
   15394:	mov	r5, r0
   15398:	mov	r4, r1
   1539c:	str	r6, [sp, #8]
   153a0:	str	lr, [sp, #12]
   153a4:	bl	15954 <__snprintf_chk@plt+0x45e8>
   153a8:	cmp	r0, #0
   153ac:	beq	153c0 <__snprintf_chk@plt+0x4054>
   153b0:	ldrd	r4, [sp]
   153b4:	ldr	r6, [sp, #8]
   153b8:	add	sp, sp, #12
   153bc:	pop	{pc}		; (ldr pc, [sp], #4)
   153c0:	adds	r4, r4, #0
   153c4:	movne	r4, #1
   153c8:	cmp	r5, #0
   153cc:	moveq	r4, #1
   153d0:	cmp	r4, #0
   153d4:	beq	153b0 <__snprintf_chk@plt+0x4044>
   153d8:	bl	1579c <__snprintf_chk@plt+0x4430>
   153dc:	cmp	r1, #0
   153e0:	orreq	r1, r1, #1
   153e4:	str	r4, [sp, #-8]!
   153e8:	str	lr, [sp, #4]
   153ec:	bl	15954 <__snprintf_chk@plt+0x45e8>
   153f0:	cmp	r0, #0
   153f4:	beq	15404 <__snprintf_chk@plt+0x4098>
   153f8:	ldr	r4, [sp]
   153fc:	add	sp, sp, #4
   15400:	pop	{pc}		; (ldr pc, [sp], #4)
   15404:	bl	1579c <__snprintf_chk@plt+0x4430>
   15408:	strd	r4, [sp, #-16]!
   1540c:	mov	r4, r0
   15410:	mov	r5, r2
   15414:	str	r6, [sp, #8]
   15418:	mov	r6, r1
   1541c:	str	lr, [sp, #12]
   15420:	bl	15d68 <__snprintf_chk@plt+0x49fc>
   15424:	cmp	r0, #0
   15428:	beq	1543c <__snprintf_chk@plt+0x40d0>
   1542c:	ldrd	r4, [sp]
   15430:	ldr	r6, [sp, #8]
   15434:	add	sp, sp, #12
   15438:	pop	{pc}		; (ldr pc, [sp], #4)
   1543c:	cmp	r4, #0
   15440:	beq	15450 <__snprintf_chk@plt+0x40e4>
   15444:	cmp	r6, #0
   15448:	cmpne	r5, #0
   1544c:	beq	1542c <__snprintf_chk@plt+0x40c0>
   15450:	bl	1579c <__snprintf_chk@plt+0x4430>
   15454:	b	15408 <__snprintf_chk@plt+0x409c>
   15458:	cmp	r2, #0
   1545c:	cmpne	r1, #0
   15460:	str	r4, [sp, #-8]!
   15464:	moveq	r2, #1
   15468:	str	lr, [sp, #4]
   1546c:	moveq	r1, r2
   15470:	bl	15d68 <__snprintf_chk@plt+0x49fc>
   15474:	cmp	r0, #0
   15478:	beq	15488 <__snprintf_chk@plt+0x411c>
   1547c:	ldr	r4, [sp]
   15480:	add	sp, sp, #4
   15484:	pop	{pc}		; (ldr pc, [sp], #4)
   15488:	bl	1579c <__snprintf_chk@plt+0x4430>
   1548c:	mov	r2, r1
   15490:	mov	r1, r0
   15494:	mov	r0, #0
   15498:	b	15408 <__snprintf_chk@plt+0x409c>
   1549c:	mov	r2, r1
   154a0:	mov	r1, r0
   154a4:	mov	r0, #0
   154a8:	b	15458 <__snprintf_chk@plt+0x40ec>
   154ac:	cmp	r0, #0
   154b0:	strd	r4, [sp, #-16]!
   154b4:	mov	r5, r1
   154b8:	ldr	r4, [r1]
   154bc:	str	r6, [sp, #8]
   154c0:	str	lr, [sp, #12]
   154c4:	beq	154f4 <__snprintf_chk@plt+0x4188>
   154c8:	lsr	r3, r4, #1
   154cc:	add	r3, r3, #1
   154d0:	adds	r4, r4, r3
   154d4:	bcs	15510 <__snprintf_chk@plt+0x41a4>
   154d8:	mov	r1, r4
   154dc:	bl	15408 <__snprintf_chk@plt+0x409c>
   154e0:	ldr	r6, [sp, #8]
   154e4:	str	r4, [r5]
   154e8:	ldrd	r4, [sp]
   154ec:	add	sp, sp, #12
   154f0:	pop	{pc}		; (ldr pc, [sp], #4)
   154f4:	cmp	r4, #0
   154f8:	bne	154d8 <__snprintf_chk@plt+0x416c>
   154fc:	mov	r4, #64	; 0x40
   15500:	udiv	r4, r4, r2
   15504:	cmp	r2, #64	; 0x40
   15508:	addhi	r4, r4, #1
   1550c:	b	154d8 <__snprintf_chk@plt+0x416c>
   15510:	bl	1579c <__snprintf_chk@plt+0x4430>
   15514:	mov	r2, #1
   15518:	b	154ac <__snprintf_chk@plt+0x4140>
   1551c:	ldr	ip, [r1]
   15520:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15524:	mov	r5, r1
   15528:	strd	r6, [sp, #8]
   1552c:	str	lr, [sp, #28]
   15530:	strd	r8, [sp, #16]
   15534:	asr	lr, ip, #1
   15538:	ldr	r8, [sp, #32]
   1553c:	str	sl, [sp, #24]
   15540:	adds	r4, ip, lr
   15544:	mvn	lr, r3
   15548:	lsr	lr, lr, #31
   1554c:	mvnvs	r4, #-2147483648	; 0x80000000
   15550:	cmp	r3, r4
   15554:	movge	r1, #0
   15558:	andlt	r1, lr, #1
   1555c:	cmp	r1, #0
   15560:	movne	r4, r3
   15564:	smull	r6, r7, r4, r8
   15568:	cmp	r7, r6, asr #31
   1556c:	bne	155f4 <__snprintf_chk@plt+0x4288>
   15570:	cmp	r6, #63	; 0x3f
   15574:	mov	r1, r6
   15578:	ble	155dc <__snprintf_chk@plt+0x4270>
   1557c:	cmp	r0, #0
   15580:	sub	r6, r4, ip
   15584:	streq	r0, [r5]
   15588:	cmp	r6, r2
   1558c:	bge	155bc <__snprintf_chk@plt+0x4250>
   15590:	adds	r4, ip, r2
   15594:	bvs	155f0 <__snprintf_chk@plt+0x4284>
   15598:	cmp	r4, r3
   1559c:	movle	r3, #0
   155a0:	andgt	r3, lr, #1
   155a4:	cmp	r3, #0
   155a8:	bne	155f0 <__snprintf_chk@plt+0x4284>
   155ac:	smull	r8, r9, r4, r8
   155b0:	cmp	r9, r8, asr #31
   155b4:	mov	r1, r8
   155b8:	bne	155f0 <__snprintf_chk@plt+0x4284>
   155bc:	bl	15390 <__snprintf_chk@plt+0x4024>
   155c0:	ldrd	r6, [sp, #8]
   155c4:	ldrd	r8, [sp, #16]
   155c8:	ldr	sl, [sp, #24]
   155cc:	str	r4, [r5]
   155d0:	ldrd	r4, [sp]
   155d4:	add	sp, sp, #28
   155d8:	pop	{pc}		; (ldr pc, [sp], #4)
   155dc:	mov	r6, #64	; 0x40
   155e0:	sdiv	r4, r6, r8
   155e4:	mls	r1, r8, r4, r6
   155e8:	sub	r1, r6, r1
   155ec:	b	1557c <__snprintf_chk@plt+0x4210>
   155f0:	bl	1579c <__snprintf_chk@plt+0x4430>
   155f4:	mvn	r6, #-2147483648	; 0x80000000
   155f8:	b	155e0 <__snprintf_chk@plt+0x4274>
   155fc:	mov	r1, #1
   15600:	str	r4, [sp, #-8]!
   15604:	str	lr, [sp, #4]
   15608:	bl	158a4 <__snprintf_chk@plt+0x4538>
   1560c:	cmp	r0, #0
   15610:	beq	15620 <__snprintf_chk@plt+0x42b4>
   15614:	ldr	r4, [sp]
   15618:	add	sp, sp, #4
   1561c:	pop	{pc}		; (ldr pc, [sp], #4)
   15620:	bl	1579c <__snprintf_chk@plt+0x4430>
   15624:	mov	r1, #1
   15628:	str	r4, [sp, #-8]!
   1562c:	str	lr, [sp, #4]
   15630:	bl	158a4 <__snprintf_chk@plt+0x4538>
   15634:	cmp	r0, #0
   15638:	beq	15648 <__snprintf_chk@plt+0x42dc>
   1563c:	ldr	r4, [sp]
   15640:	add	sp, sp, #4
   15644:	pop	{pc}		; (ldr pc, [sp], #4)
   15648:	bl	1579c <__snprintf_chk@plt+0x4430>
   1564c:	str	r4, [sp, #-8]!
   15650:	str	lr, [sp, #4]
   15654:	bl	158a4 <__snprintf_chk@plt+0x4538>
   15658:	cmp	r0, #0
   1565c:	beq	1566c <__snprintf_chk@plt+0x4300>
   15660:	ldr	r4, [sp]
   15664:	add	sp, sp, #4
   15668:	pop	{pc}		; (ldr pc, [sp], #4)
   1566c:	bl	1579c <__snprintf_chk@plt+0x4430>
   15670:	str	r4, [sp, #-8]!
   15674:	str	lr, [sp, #4]
   15678:	bl	158a4 <__snprintf_chk@plt+0x4538>
   1567c:	cmp	r0, #0
   15680:	beq	15690 <__snprintf_chk@plt+0x4324>
   15684:	ldr	r4, [sp]
   15688:	add	sp, sp, #4
   1568c:	pop	{pc}		; (ldr pc, [sp], #4)
   15690:	bl	1579c <__snprintf_chk@plt+0x4430>
   15694:	strd	r4, [sp, #-16]!
   15698:	mov	r4, r1
   1569c:	str	r6, [sp, #8]
   156a0:	mov	r6, r0
   156a4:	mov	r0, r1
   156a8:	str	lr, [sp, #12]
   156ac:	bl	15918 <__snprintf_chk@plt+0x45ac>
   156b0:	subs	r5, r0, #0
   156b4:	beq	156d8 <__snprintf_chk@plt+0x436c>
   156b8:	mov	r2, r4
   156bc:	mov	r1, r6
   156c0:	bl	110a8 <memcpy@plt>
   156c4:	mov	r0, r5
   156c8:	ldrd	r4, [sp]
   156cc:	ldr	r6, [sp, #8]
   156d0:	add	sp, sp, #12
   156d4:	pop	{pc}		; (ldr pc, [sp], #4)
   156d8:	bl	1579c <__snprintf_chk@plt+0x4430>
   156dc:	strd	r4, [sp, #-16]!
   156e0:	mov	r4, r1
   156e4:	str	r6, [sp, #8]
   156e8:	mov	r6, r0
   156ec:	mov	r0, r1
   156f0:	str	lr, [sp, #12]
   156f4:	bl	15918 <__snprintf_chk@plt+0x45ac>
   156f8:	subs	r5, r0, #0
   156fc:	beq	15720 <__snprintf_chk@plt+0x43b4>
   15700:	mov	r2, r4
   15704:	mov	r1, r6
   15708:	bl	110a8 <memcpy@plt>
   1570c:	mov	r0, r5
   15710:	ldrd	r4, [sp]
   15714:	ldr	r6, [sp, #8]
   15718:	add	sp, sp, #12
   1571c:	pop	{pc}		; (ldr pc, [sp], #4)
   15720:	bl	1579c <__snprintf_chk@plt+0x4430>
   15724:	strd	r4, [sp, #-16]!
   15728:	mov	r4, r1
   1572c:	str	r6, [sp, #8]
   15730:	mov	r6, r0
   15734:	add	r0, r1, #1
   15738:	str	lr, [sp, #12]
   1573c:	bl	15918 <__snprintf_chk@plt+0x45ac>
   15740:	subs	r5, r0, #0
   15744:	beq	15770 <__snprintf_chk@plt+0x4404>
   15748:	mov	r3, #0
   1574c:	mov	r1, r6
   15750:	mov	r2, r4
   15754:	strb	r3, [r5, r4]
   15758:	bl	110a8 <memcpy@plt>
   1575c:	mov	r0, r5
   15760:	ldrd	r4, [sp]
   15764:	ldr	r6, [sp, #8]
   15768:	add	sp, sp, #12
   1576c:	pop	{pc}		; (ldr pc, [sp], #4)
   15770:	bl	1579c <__snprintf_chk@plt+0x4430>
   15774:	str	r4, [sp, #-8]!
   15778:	mov	r4, r0
   1577c:	str	lr, [sp, #4]
   15780:	bl	11228 <strlen@plt>
   15784:	add	r1, r0, #1
   15788:	mov	r0, r4
   1578c:	ldr	r4, [sp]
   15790:	ldr	lr, [sp, #4]
   15794:	add	sp, sp, #8
   15798:	b	15694 <__snprintf_chk@plt+0x4328>
   1579c:	movw	r3, #33076	; 0x8134
   157a0:	movt	r3, #2
   157a4:	str	r4, [sp, #-8]!
   157a8:	ldr	r4, [r3]
   157ac:	mov	r2, #5
   157b0:	movw	r1, #28456	; 0x6f28
   157b4:	movt	r1, #1
   157b8:	mov	r0, #0
   157bc:	str	lr, [sp, #4]
   157c0:	bl	110f0 <dcgettext@plt>
   157c4:	mov	r3, r0
   157c8:	movw	r2, #27352	; 0x6ad8
   157cc:	movt	r2, #1
   157d0:	mov	r1, #0
   157d4:	mov	r0, r4
   157d8:	bl	111a4 <error@plt>
   157dc:	bl	11360 <abort@plt>
   157e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   157e4:	mov	r5, r1
   157e8:	mov	r4, #0
   157ec:	strd	r6, [sp, #8]
   157f0:	mov	r6, r0
   157f4:	strd	r8, [sp, #16]
   157f8:	mov	r9, r3
   157fc:	mov	r8, r2
   15800:	str	lr, [sp, #24]
   15804:	sub	sp, sp, #12
   15808:	bl	1124c <__errno_location@plt>
   1580c:	mov	r7, r0
   15810:	add	r1, sp, #4
   15814:	mov	r0, r6
   15818:	str	r4, [r7]
   1581c:	blx	r9
   15820:	ldr	r3, [sp, #4]
   15824:	cmp	r3, r6
   15828:	beq	1589c <__snprintf_chk@plt+0x4530>
   1582c:	cmp	r5, r4
   15830:	beq	15878 <__snprintf_chk@plt+0x450c>
   15834:	vcmp.f64	d0, #0.0
   15838:	vmrs	APSR_nzcv, fpscr
   1583c:	moveq	r0, #1
   15840:	beq	15858 <__snprintf_chk@plt+0x44ec>
   15844:	ldr	r0, [r7]
   15848:	subs	r0, r0, #34	; 0x22
   1584c:	movne	r0, #1
   15850:	cmp	r5, #0
   15854:	beq	1585c <__snprintf_chk@plt+0x44f0>
   15858:	str	r3, [r5]
   1585c:	vstr	d0, [r8]
   15860:	add	sp, sp, #12
   15864:	ldrd	r4, [sp]
   15868:	ldrd	r6, [sp, #8]
   1586c:	ldrd	r8, [sp, #16]
   15870:	add	sp, sp, #24
   15874:	pop	{pc}		; (ldr pc, [sp], #4)
   15878:	ldrb	r2, [r3]
   1587c:	cmp	r2, r4
   15880:	movne	r0, r5
   15884:	bne	1585c <__snprintf_chk@plt+0x44f0>
   15888:	vcmp.f64	d0, #0.0
   1588c:	vmrs	APSR_nzcv, fpscr
   15890:	bne	15844 <__snprintf_chk@plt+0x44d8>
   15894:	mov	r0, #1
   15898:	b	1585c <__snprintf_chk@plt+0x44f0>
   1589c:	mov	r0, r4
   158a0:	b	15850 <__snprintf_chk@plt+0x44e4>
   158a4:	cmp	r1, #0
   158a8:	cmpne	r0, #0
   158ac:	beq	158f8 <__snprintf_chk@plt+0x458c>
   158b0:	strd	r4, [sp, #-16]!
   158b4:	umull	r4, r5, r0, r1
   158b8:	str	r6, [sp, #8]
   158bc:	str	lr, [sp, #12]
   158c0:	adds	r3, r5, #0
   158c4:	movne	r3, #1
   158c8:	cmp	r4, #0
   158cc:	blt	158d8 <__snprintf_chk@plt+0x456c>
   158d0:	cmp	r3, #0
   158d4:	beq	15904 <__snprintf_chk@plt+0x4598>
   158d8:	bl	1124c <__errno_location@plt>
   158dc:	mov	r3, #12
   158e0:	ldrd	r4, [sp]
   158e4:	ldr	r6, [sp, #8]
   158e8:	add	sp, sp, #12
   158ec:	str	r3, [r0]
   158f0:	mov	r0, #0
   158f4:	pop	{pc}		; (ldr pc, [sp], #4)
   158f8:	mov	r1, #1
   158fc:	mov	r0, r1
   15900:	b	1103c <calloc@plt>
   15904:	ldrd	r4, [sp]
   15908:	ldr	r6, [sp, #8]
   1590c:	ldr	lr, [sp, #12]
   15910:	add	sp, sp, #16
   15914:	b	1103c <calloc@plt>
   15918:	cmp	r0, #0
   1591c:	beq	15928 <__snprintf_chk@plt+0x45bc>
   15920:	blt	15930 <__snprintf_chk@plt+0x45c4>
   15924:	b	111bc <malloc@plt>
   15928:	mov	r0, #1
   1592c:	b	111bc <malloc@plt>
   15930:	str	r4, [sp, #-8]!
   15934:	str	lr, [sp, #4]
   15938:	bl	1124c <__errno_location@plt>
   1593c:	mov	r3, #12
   15940:	ldr	r4, [sp]
   15944:	add	sp, sp, #4
   15948:	str	r3, [r0]
   1594c:	mov	r0, #0
   15950:	pop	{pc}		; (ldr pc, [sp], #4)
   15954:	cmp	r0, #0
   15958:	beq	15980 <__snprintf_chk@plt+0x4614>
   1595c:	cmp	r1, #0
   15960:	str	r4, [sp, #-8]!
   15964:	str	lr, [sp, #4]
   15968:	beq	15988 <__snprintf_chk@plt+0x461c>
   1596c:	blt	1599c <__snprintf_chk@plt+0x4630>
   15970:	ldr	r4, [sp]
   15974:	ldr	lr, [sp, #4]
   15978:	add	sp, sp, #8
   1597c:	b	11108 <realloc@plt>
   15980:	mov	r0, r1
   15984:	b	15918 <__snprintf_chk@plt+0x45ac>
   15988:	bl	12778 <__snprintf_chk@plt+0x140c>
   1598c:	ldr	r4, [sp]
   15990:	add	sp, sp, #4
   15994:	mov	r0, #0
   15998:	pop	{pc}		; (ldr pc, [sp], #4)
   1599c:	bl	1124c <__errno_location@plt>
   159a0:	mov	r3, #12
   159a4:	str	r3, [r0]
   159a8:	b	1598c <__snprintf_chk@plt+0x4620>
   159ac:	andeq	r0, r0, r0
   159b0:	strd	r4, [sp, #-16]!
   159b4:	movw	r4, #33944	; 0x8498
   159b8:	movt	r4, #2
   159bc:	ldr	r2, [r4]
   159c0:	mov	r5, r1
   159c4:	str	r6, [sp, #8]
   159c8:	mov	r6, r0
   159cc:	str	lr, [sp, #12]
   159d0:	cmp	r2, #0
   159d4:	beq	15a1c <__snprintf_chk@plt+0x46b0>
   159d8:	ldr	r2, [r4]
   159dc:	cmp	r2, #0
   159e0:	beq	15a00 <__snprintf_chk@plt+0x4694>
   159e4:	mov	r1, r5
   159e8:	mov	r0, r6
   159ec:	ldrd	r4, [sp]
   159f0:	ldr	r6, [sp, #8]
   159f4:	ldr	lr, [sp, #12]
   159f8:	add	sp, sp, #16
   159fc:	b	112dc <strtod_l@plt>
   15a00:	cmp	r5, #0
   15a04:	vldr	d0, [pc, #44]	; 15a38 <__snprintf_chk@plt+0x46cc>
   15a08:	strne	r6, [r5]
   15a0c:	ldrd	r4, [sp]
   15a10:	ldr	r6, [sp, #8]
   15a14:	add	sp, sp, #12
   15a18:	pop	{pc}		; (ldr pc, [sp], #4)
   15a1c:	movw	r1, #28476	; 0x6f3c
   15a20:	movt	r1, #1
   15a24:	movw	r0, #8127	; 0x1fbf
   15a28:	bl	11324 <newlocale@plt>
   15a2c:	str	r0, [r4]
   15a30:	b	159d8 <__snprintf_chk@plt+0x466c>
   15a34:	nop	{0}
	...
   15a40:	strd	r4, [sp, #-16]!
   15a44:	mov	r4, r0
   15a48:	str	r6, [sp, #8]
   15a4c:	str	lr, [sp, #12]
   15a50:	bl	1118c <__fpending@plt>
   15a54:	ldr	r5, [r4]
   15a58:	mov	r6, r0
   15a5c:	mov	r0, r4
   15a60:	bl	15ac8 <__snprintf_chk@plt+0x475c>
   15a64:	mov	r4, r0
   15a68:	and	r5, r5, #32
   15a6c:	cmp	r5, #0
   15a70:	bne	15aa8 <__snprintf_chk@plt+0x473c>
   15a74:	cmp	r0, #0
   15a78:	beq	15a94 <__snprintf_chk@plt+0x4728>
   15a7c:	cmp	r6, #0
   15a80:	bne	15ac0 <__snprintf_chk@plt+0x4754>
   15a84:	bl	1124c <__errno_location@plt>
   15a88:	ldr	r4, [r0]
   15a8c:	subs	r4, r4, #9
   15a90:	mvnne	r4, #0
   15a94:	mov	r0, r4
   15a98:	ldrd	r4, [sp]
   15a9c:	ldr	r6, [sp, #8]
   15aa0:	add	sp, sp, #12
   15aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa8:	cmp	r0, #0
   15aac:	bne	15ac0 <__snprintf_chk@plt+0x4754>
   15ab0:	bl	1124c <__errno_location@plt>
   15ab4:	str	r4, [r0]
   15ab8:	mvn	r4, #0
   15abc:	b	15a94 <__snprintf_chk@plt+0x4728>
   15ac0:	mvn	r4, #0
   15ac4:	b	15a94 <__snprintf_chk@plt+0x4728>
   15ac8:	strd	r4, [sp, #-12]!
   15acc:	mov	r4, r0
   15ad0:	str	lr, [sp, #8]
   15ad4:	sub	sp, sp, #12
   15ad8:	bl	112ac <fileno@plt>
   15adc:	cmp	r0, #0
   15ae0:	mov	r0, r4
   15ae4:	blt	15b68 <__snprintf_chk@plt+0x47fc>
   15ae8:	bl	111e0 <__freading@plt>
   15aec:	cmp	r0, #0
   15af0:	bne	15b34 <__snprintf_chk@plt+0x47c8>
   15af4:	mov	r0, r4
   15af8:	bl	15b7c <__snprintf_chk@plt+0x4810>
   15afc:	cmp	r0, #0
   15b00:	beq	15b64 <__snprintf_chk@plt+0x47f8>
   15b04:	bl	1124c <__errno_location@plt>
   15b08:	mov	r5, r0
   15b0c:	mov	r0, r4
   15b10:	ldr	r4, [r5]
   15b14:	bl	112c4 <fclose@plt>
   15b18:	cmp	r4, #0
   15b1c:	mvnne	r0, #0
   15b20:	strne	r4, [r5]
   15b24:	add	sp, sp, #12
   15b28:	ldrd	r4, [sp]
   15b2c:	add	sp, sp, #8
   15b30:	pop	{pc}		; (ldr pc, [sp], #4)
   15b34:	mov	r0, r4
   15b38:	bl	112ac <fileno@plt>
   15b3c:	mov	r1, #1
   15b40:	mov	r2, #0
   15b44:	mov	r3, #0
   15b48:	str	r1, [sp]
   15b4c:	bl	1115c <lseek64@plt>
   15b50:	mvn	r3, #0
   15b54:	mvn	r2, #0
   15b58:	cmp	r1, r3
   15b5c:	cmpeq	r0, r2
   15b60:	bne	15af4 <__snprintf_chk@plt+0x4788>
   15b64:	mov	r0, r4
   15b68:	add	sp, sp, #12
   15b6c:	ldrd	r4, [sp]
   15b70:	ldr	lr, [sp, #8]
   15b74:	add	sp, sp, #12
   15b78:	b	112c4 <fclose@plt>
   15b7c:	str	r4, [sp, #-8]!
   15b80:	subs	r4, r0, #0
   15b84:	str	lr, [sp, #4]
   15b88:	sub	sp, sp, #8
   15b8c:	beq	15ba8 <__snprintf_chk@plt+0x483c>
   15b90:	bl	111e0 <__freading@plt>
   15b94:	cmp	r0, #0
   15b98:	beq	15ba8 <__snprintf_chk@plt+0x483c>
   15b9c:	ldr	r3, [r4]
   15ba0:	tst	r3, #256	; 0x100
   15ba4:	bne	15bc0 <__snprintf_chk@plt+0x4854>
   15ba8:	mov	r0, r4
   15bac:	add	sp, sp, #8
   15bb0:	ldr	r4, [sp]
   15bb4:	ldr	lr, [sp, #4]
   15bb8:	add	sp, sp, #8
   15bbc:	b	11078 <fflush@plt>
   15bc0:	mov	r1, #1
   15bc4:	mov	r2, #0
   15bc8:	mov	r3, #0
   15bcc:	mov	r0, r4
   15bd0:	str	r1, [sp]
   15bd4:	bl	15bdc <__snprintf_chk@plt+0x4870>
   15bd8:	b	15ba8 <__snprintf_chk@plt+0x483c>
   15bdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15be0:	mov	r4, r0
   15be4:	ldr	ip, [r0, #4]
   15be8:	strd	r6, [sp, #8]
   15bec:	str	lr, [sp, #20]
   15bf0:	ldr	lr, [r0, #8]
   15bf4:	str	r8, [sp, #16]
   15bf8:	sub	sp, sp, #8
   15bfc:	ldr	r5, [sp, #32]
   15c00:	cmp	lr, ip
   15c04:	beq	15c2c <__snprintf_chk@plt+0x48c0>
   15c08:	mov	r0, r4
   15c0c:	str	r5, [sp, #32]
   15c10:	add	sp, sp, #8
   15c14:	ldrd	r4, [sp]
   15c18:	ldrd	r6, [sp, #8]
   15c1c:	ldr	r8, [sp, #16]
   15c20:	ldr	lr, [sp, #20]
   15c24:	add	sp, sp, #24
   15c28:	b	112d0 <fseeko64@plt>
   15c2c:	ldr	ip, [r0, #16]
   15c30:	ldr	lr, [r0, #20]
   15c34:	cmp	lr, ip
   15c38:	bne	15c08 <__snprintf_chk@plt+0x489c>
   15c3c:	ldr	r8, [r0, #36]	; 0x24
   15c40:	cmp	r8, #0
   15c44:	bne	15c08 <__snprintf_chk@plt+0x489c>
   15c48:	mov	r6, r2
   15c4c:	mov	r7, r3
   15c50:	bl	112ac <fileno@plt>
   15c54:	mov	r2, r6
   15c58:	mov	r3, r7
   15c5c:	str	r5, [sp]
   15c60:	bl	1115c <lseek64@plt>
   15c64:	mvn	r3, #0
   15c68:	mvn	r2, #0
   15c6c:	cmp	r1, r3
   15c70:	cmpeq	r0, r2
   15c74:	beq	15ca4 <__snprintf_chk@plt+0x4938>
   15c78:	ldr	r3, [r4]
   15c7c:	strd	r0, [r4, #80]	; 0x50
   15c80:	bic	r3, r3, #16
   15c84:	str	r3, [r4]
   15c88:	mov	r0, r8
   15c8c:	add	sp, sp, #8
   15c90:	ldrd	r4, [sp]
   15c94:	ldrd	r6, [sp, #8]
   15c98:	ldr	r8, [sp, #16]
   15c9c:	add	sp, sp, #20
   15ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ca4:	mvn	r8, #0
   15ca8:	b	15c88 <__snprintf_chk@plt+0x491c>
   15cac:	mov	r0, #14
   15cb0:	str	r4, [sp, #-8]!
   15cb4:	str	lr, [sp, #4]
   15cb8:	bl	11318 <nl_langinfo@plt>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15ce4 <__snprintf_chk@plt+0x4978>
   15cc4:	ldrb	r2, [r0]
   15cc8:	movw	r3, #28480	; 0x6f40
   15ccc:	movt	r3, #1
   15cd0:	ldr	r4, [sp]
   15cd4:	add	sp, sp, #4
   15cd8:	cmp	r2, #0
   15cdc:	moveq	r0, r3
   15ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ce4:	ldr	r4, [sp]
   15ce8:	add	sp, sp, #4
   15cec:	movw	r0, #28480	; 0x6f40
   15cf0:	movt	r0, #1
   15cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf8:	strd	r4, [sp, #-20]!	; 0xffffffec
   15cfc:	mov	r5, r2
   15d00:	strd	r6, [sp, #8]
   15d04:	subs	r6, r0, #0
   15d08:	mov	r7, r1
   15d0c:	str	lr, [sp, #16]
   15d10:	sub	sp, sp, #12
   15d14:	addeq	r6, sp, #4
   15d18:	mov	r0, r6
   15d1c:	bl	11198 <mbrtowc@plt>
   15d20:	cmp	r5, #0
   15d24:	cmnne	r0, #3
   15d28:	mov	r4, r0
   15d2c:	bhi	15d48 <__snprintf_chk@plt+0x49dc>
   15d30:	mov	r0, r4
   15d34:	add	sp, sp, #12
   15d38:	ldrd	r4, [sp]
   15d3c:	ldrd	r6, [sp, #8]
   15d40:	add	sp, sp, #16
   15d44:	pop	{pc}		; (ldr pc, [sp], #4)
   15d48:	mov	r0, #0
   15d4c:	bl	15da0 <__snprintf_chk@plt+0x4a34>
   15d50:	cmp	r0, #0
   15d54:	bne	15d30 <__snprintf_chk@plt+0x49c4>
   15d58:	ldrb	r3, [r7]
   15d5c:	mov	r4, #1
   15d60:	str	r3, [r6]
   15d64:	b	15d30 <__snprintf_chk@plt+0x49c4>
   15d68:	umull	r2, r3, r1, r2
   15d6c:	cmp	r3, #0
   15d70:	bne	15d7c <__snprintf_chk@plt+0x4a10>
   15d74:	mov	r1, r2
   15d78:	b	15954 <__snprintf_chk@plt+0x45e8>
   15d7c:	str	r4, [sp, #-8]!
   15d80:	str	lr, [sp, #4]
   15d84:	bl	1124c <__errno_location@plt>
   15d88:	mov	r3, #12
   15d8c:	ldr	r4, [sp]
   15d90:	add	sp, sp, #4
   15d94:	str	r3, [r0]
   15d98:	mov	r0, #0
   15d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15da0:	push	{lr}		; (str lr, [sp, #-4]!)
   15da4:	sub	sp, sp, #268	; 0x10c
   15da8:	movw	r2, #257	; 0x101
   15dac:	add	r1, sp, #4
   15db0:	bl	15df8 <__snprintf_chk@plt+0x4a8c>
   15db4:	cmp	r0, #0
   15db8:	movne	r0, #0
   15dbc:	bne	15df0 <__snprintf_chk@plt+0x4a84>
   15dc0:	movw	r1, #28476	; 0x6f3c
   15dc4:	movt	r1, #1
   15dc8:	add	r0, sp, #4
   15dcc:	bl	11060 <strcmp@plt>
   15dd0:	cmp	r0, #0
   15dd4:	beq	15df0 <__snprintf_chk@plt+0x4a84>
   15dd8:	add	r0, sp, #4
   15ddc:	movw	r1, #28488	; 0x6f48
   15de0:	movt	r1, #1
   15de4:	bl	11060 <strcmp@plt>
   15de8:	adds	r0, r0, #0
   15dec:	movne	r0, #1
   15df0:	add	sp, sp, #268	; 0x10c
   15df4:	pop	{pc}		; (ldr pc, [sp], #4)
   15df8:	strd	r4, [sp, #-16]!
   15dfc:	mov	r5, r1
   15e00:	mov	r1, #0
   15e04:	mov	r4, r2
   15e08:	str	r6, [sp, #8]
   15e0c:	str	lr, [sp, #12]
   15e10:	bl	112e8 <setlocale@plt>
   15e14:	subs	r6, r0, #0
   15e18:	beq	15e98 <__snprintf_chk@plt+0x4b2c>
   15e1c:	bl	11228 <strlen@plt>
   15e20:	cmp	r4, r0
   15e24:	bhi	15e44 <__snprintf_chk@plt+0x4ad8>
   15e28:	cmp	r4, #0
   15e2c:	moveq	r0, #34	; 0x22
   15e30:	bne	15e68 <__snprintf_chk@plt+0x4afc>
   15e34:	ldrd	r4, [sp]
   15e38:	ldr	r6, [sp, #8]
   15e3c:	add	sp, sp, #12
   15e40:	pop	{pc}		; (ldr pc, [sp], #4)
   15e44:	add	r2, r0, #1
   15e48:	mov	r1, r6
   15e4c:	mov	r0, r5
   15e50:	bl	110a8 <memcpy@plt>
   15e54:	ldrd	r4, [sp]
   15e58:	mov	r0, #0
   15e5c:	ldr	r6, [sp, #8]
   15e60:	add	sp, sp, #12
   15e64:	pop	{pc}		; (ldr pc, [sp], #4)
   15e68:	sub	r4, r4, #1
   15e6c:	mov	r1, r6
   15e70:	mov	r2, r4
   15e74:	mov	r0, r5
   15e78:	bl	110a8 <memcpy@plt>
   15e7c:	mov	r3, #0
   15e80:	mov	r0, #34	; 0x22
   15e84:	strb	r3, [r5, r4]
   15e88:	ldrd	r4, [sp]
   15e8c:	ldr	r6, [sp, #8]
   15e90:	add	sp, sp, #12
   15e94:	pop	{pc}		; (ldr pc, [sp], #4)
   15e98:	cmp	r4, #0
   15e9c:	mov	r0, #22
   15ea0:	strbne	r6, [r5]
   15ea4:	ldrd	r4, [sp]
   15ea8:	ldr	r6, [sp, #8]
   15eac:	add	sp, sp, #12
   15eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15eb4:	mov	r1, #0
   15eb8:	b	112e8 <setlocale@plt>
   15ebc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ec0:	mov	r7, r0
   15ec4:	ldr	r6, [pc, #72]	; 15f14 <__snprintf_chk@plt+0x4ba8>
   15ec8:	ldr	r5, [pc, #72]	; 15f18 <__snprintf_chk@plt+0x4bac>
   15ecc:	add	r6, pc, r6
   15ed0:	add	r5, pc, r5
   15ed4:	sub	r6, r6, r5
   15ed8:	mov	r8, r1
   15edc:	mov	r9, r2
   15ee0:	bl	1101c <calloc@plt-0x20>
   15ee4:	asrs	r6, r6, #2
   15ee8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15eec:	mov	r4, #0
   15ef0:	add	r4, r4, #1
   15ef4:	ldr	r3, [r5], #4
   15ef8:	mov	r2, r9
   15efc:	mov	r1, r8
   15f00:	mov	r0, r7
   15f04:	blx	r3
   15f08:	cmp	r6, r4
   15f0c:	bne	15ef0 <__snprintf_chk@plt+0x4b84>
   15f10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f14:	andeq	r2, r1, r0, lsr r0
   15f18:	andeq	r2, r1, r8, lsr #32
   15f1c:	bx	lr
   15f20:	ldr	r3, [pc, #12]	; 15f34 <__snprintf_chk@plt+0x4bc8>
   15f24:	mov	r1, #0
   15f28:	add	r3, pc, r3
   15f2c:	ldr	r2, [r3]
   15f30:	b	11264 <__cxa_atexit@plt>
   15f34:	strdeq	r2, [r1], -r8

Disassembly of section .fini:

00015f38 <.fini>:
   15f38:	push	{r3, lr}
   15f3c:	pop	{r3, pc}
