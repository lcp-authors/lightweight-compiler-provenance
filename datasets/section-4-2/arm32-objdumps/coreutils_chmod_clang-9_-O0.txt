
../repos/coreutils/src/chmod:     file format elf32-littlearm


Disassembly of section .init:

000110b4 <.init>:
   110b4:	push	{r3, lr}
   110b8:	bl	11414 <__assert_fail@plt+0x4c>
   110bc:	pop	{r3, pc}

Disassembly of section .plt:

000110c0 <fstatfs64@plt-0x14>:
   110c0:	push	{lr}		; (str lr, [sp, #-4]!)
   110c4:	ldr	lr, [pc, #4]	; 110d0 <fstatfs64@plt-0x4>
   110c8:	add	lr, pc, lr
   110cc:	ldr	pc, [lr, #8]!
   110d0:	andeq	r2, r2, r0, lsr pc

000110d4 <fstatfs64@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #139264	; 0x22000
   110dc:	ldr	pc, [ip, #3888]!	; 0xf30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #139264	; 0x22000
   110e8:	ldr	pc, [ip, #3880]!	; 0xf28

000110ec <fputs_unlocked@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #139264	; 0x22000
   110f4:	ldr	pc, [ip, #3872]!	; 0xf20

000110f8 <raise@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #139264	; 0x22000
   11100:	ldr	pc, [ip, #3864]!	; 0xf18

00011104 <strcmp@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #139264	; 0x22000
   1110c:	ldr	pc, [ip, #3856]!	; 0xf10

00011110 <printf@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #139264	; 0x22000
   11118:	ldr	pc, [ip, #3848]!	; 0xf08

0001111c <fflush@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #139264	; 0x22000
   11124:	ldr	pc, [ip, #3840]!	; 0xf00

00011128 <memmove@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #139264	; 0x22000
   11130:	ldr	pc, [ip, #3832]!	; 0xef8

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #139264	; 0x22000
   1113c:	ldr	pc, [ip, #3824]!	; 0xef0

00011140 <_exit@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #139264	; 0x22000
   11148:	ldr	pc, [ip, #3816]!	; 0xee8

0001114c <memcpy@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #139264	; 0x22000
   11154:	ldr	pc, [ip, #3808]!	; 0xee0

00011158 <mbsinit@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #139264	; 0x22000
   11160:	ldr	pc, [ip, #3800]!	; 0xed8

00011164 <memcmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #139264	; 0x22000
   1116c:	ldr	pc, [ip, #3792]!	; 0xed0

00011170 <realloc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #139264	; 0x22000
   11178:	ldr	pc, [ip, #3784]!	; 0xec8

0001117c <textdomain@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #139264	; 0x22000
   11184:	ldr	pc, [ip, #3776]!	; 0xec0

00011188 <__fxstatat64@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #139264	; 0x22000
   11190:	ldr	pc, [ip, #3768]!	; 0xeb8

00011194 <iswprint@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #139264	; 0x22000
   1119c:	ldr	pc, [ip, #3760]!	; 0xeb0

000111a0 <__fxstat64@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #139264	; 0x22000
   111a8:	ldr	pc, [ip, #3752]!	; 0xea8

000111ac <lseek64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #139264	; 0x22000
   111b4:	ldr	pc, [ip, #3744]!	; 0xea0

000111b8 <__ctype_get_mb_cur_max@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #139264	; 0x22000
   111c0:	ldr	pc, [ip, #3736]!	; 0xe98

000111c4 <__fpending@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #139264	; 0x22000
   111cc:	ldr	pc, [ip, #3728]!	; 0xe90

000111d0 <ferror_unlocked@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #139264	; 0x22000
   111d8:	ldr	pc, [ip, #3720]!	; 0xe88

000111dc <mbrtowc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #139264	; 0x22000
   111e4:	ldr	pc, [ip, #3712]!	; 0xe80

000111e8 <error@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #139264	; 0x22000
   111f0:	ldr	pc, [ip, #3704]!	; 0xe78

000111f4 <open64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #139264	; 0x22000
   111fc:	ldr	pc, [ip, #3696]!	; 0xe70

00011200 <malloc@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #139264	; 0x22000
   11208:	ldr	pc, [ip, #3688]!	; 0xe68

0001120c <__libc_start_main@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #139264	; 0x22000
   11214:	ldr	pc, [ip, #3680]!	; 0xe60

00011218 <__freading@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #139264	; 0x22000
   11220:	ldr	pc, [ip, #3672]!	; 0xe58

00011224 <__gmon_start__@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #139264	; 0x22000
   1122c:	ldr	pc, [ip, #3664]!	; 0xe50

00011230 <getopt_long@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #139264	; 0x22000
   11238:	ldr	pc, [ip, #3656]!	; 0xe48

0001123c <__ctype_b_loc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #139264	; 0x22000
   11244:	ldr	pc, [ip, #3648]!	; 0xe40

00011248 <exit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #139264	; 0x22000
   11250:	ldr	pc, [ip, #3640]!	; 0xe38

00011254 <gettext@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #139264	; 0x22000
   1125c:	ldr	pc, [ip, #3632]!	; 0xe30

00011260 <strlen@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #139264	; 0x22000
   11268:	ldr	pc, [ip, #3624]!	; 0xe28

0001126c <openat64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #139264	; 0x22000
   11274:	ldr	pc, [ip, #3616]!	; 0xe20

00011278 <fprintf@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #139264	; 0x22000
   11280:	ldr	pc, [ip, #3608]!	; 0xe18

00011284 <fchmodat@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #139264	; 0x22000
   1128c:	ldr	pc, [ip, #3600]!	; 0xe10

00011290 <__errno_location@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #139264	; 0x22000
   11298:	ldr	pc, [ip, #3592]!	; 0xe08

0001129c <__cxa_atexit@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #139264	; 0x22000
   112a4:	ldr	pc, [ip, #3584]!	; 0xe00

000112a8 <memset@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #139264	; 0x22000
   112b0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112b4 <fileno@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #139264	; 0x22000
   112bc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112c0 <fclose@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #139264	; 0x22000
   112c8:	ldr	pc, [ip, #3560]!	; 0xde8

000112cc <fseeko64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #139264	; 0x22000
   112d4:	ldr	pc, [ip, #3552]!	; 0xde0

000112d8 <fcntl64@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #139264	; 0x22000
   112e0:	ldr	pc, [ip, #3544]!	; 0xdd8

000112e4 <setlocale@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #139264	; 0x22000
   112ec:	ldr	pc, [ip, #3536]!	; 0xdd0

000112f0 <strrchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #139264	; 0x22000
   112f8:	ldr	pc, [ip, #3528]!	; 0xdc8

000112fc <nl_langinfo@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #139264	; 0x22000
   11304:	ldr	pc, [ip, #3520]!	; 0xdc0

00011308 <sprintf@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #139264	; 0x22000
   11310:	ldr	pc, [ip, #3512]!	; 0xdb8

00011314 <readdir64@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #139264	; 0x22000
   1131c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011320 <fdopendir@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #139264	; 0x22000
   11328:	ldr	pc, [ip, #3496]!	; 0xda8

0001132c <dirfd@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #139264	; 0x22000
   11334:	ldr	pc, [ip, #3488]!	; 0xda0

00011338 <fchdir@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #139264	; 0x22000
   11340:	ldr	pc, [ip, #3480]!	; 0xd98

00011344 <qsort@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #139264	; 0x22000
   1134c:	ldr	pc, [ip, #3472]!	; 0xd90

00011350 <bindtextdomain@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #139264	; 0x22000
   11358:	ldr	pc, [ip, #3464]!	; 0xd88

0001135c <umask@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #139264	; 0x22000
   11364:	ldr	pc, [ip, #3456]!	; 0xd80

00011368 <chmod@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #139264	; 0x22000
   11370:	ldr	pc, [ip, #3448]!	; 0xd78

00011374 <__xstat64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #139264	; 0x22000
   1137c:	ldr	pc, [ip, #3440]!	; 0xd70

00011380 <fputs@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #139264	; 0x22000
   11388:	ldr	pc, [ip, #3432]!	; 0xd68

0001138c <strncmp@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #139264	; 0x22000
   11394:	ldr	pc, [ip, #3424]!	; 0xd60

00011398 <abort@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #139264	; 0x22000
   113a0:	ldr	pc, [ip, #3416]!	; 0xd58

000113a4 <close@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #139264	; 0x22000
   113ac:	ldr	pc, [ip, #3408]!	; 0xd50

000113b0 <__lxstat64@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #139264	; 0x22000
   113b8:	ldr	pc, [ip, #3400]!	; 0xd48

000113bc <closedir@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #139264	; 0x22000
   113c4:	ldr	pc, [ip, #3392]!	; 0xd40

000113c8 <__assert_fail@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #139264	; 0x22000
   113d0:	ldr	pc, [ip, #3384]!	; 0xd38

Disassembly of section .text:

000113d8 <.text>:
   113d8:	mov	fp, #0
   113dc:	mov	lr, #0
   113e0:	pop	{r1}		; (ldr r1, [sp], #4)
   113e4:	mov	r2, sp
   113e8:	push	{r2}		; (str r2, [sp, #-4]!)
   113ec:	push	{r0}		; (str r0, [sp, #-4]!)
   113f0:	ldr	ip, [pc, #16]	; 11408 <__assert_fail@plt+0x40>
   113f4:	push	{ip}		; (str ip, [sp, #-4]!)
   113f8:	ldr	r0, [pc, #12]	; 1140c <__assert_fail@plt+0x44>
   113fc:	ldr	r3, [pc, #12]	; 11410 <__assert_fail@plt+0x48>
   11400:	bl	1120c <__libc_start_main@plt>
   11404:	bl	11398 <abort@plt>
   11408:	andeq	r2, r2, r4, ror #22
   1140c:	andeq	r1, r1, r8, asr #16
   11410:	andeq	r2, r2, r4, lsl #22
   11414:	ldr	r3, [pc, #20]	; 11430 <__assert_fail@plt+0x68>
   11418:	ldr	r2, [pc, #20]	; 11434 <__assert_fail@plt+0x6c>
   1141c:	add	r3, pc, r3
   11420:	ldr	r2, [r3, r2]
   11424:	cmp	r2, #0
   11428:	bxeq	lr
   1142c:	b	11224 <__gmon_start__@plt>
   11430:	ldrdeq	r2, [r2], -ip
   11434:	andeq	r0, r0, ip, lsl #2
   11438:	ldr	r0, [pc, #24]	; 11458 <__assert_fail@plt+0x90>
   1143c:	ldr	r3, [pc, #24]	; 1145c <__assert_fail@plt+0x94>
   11440:	cmp	r3, r0
   11444:	bxeq	lr
   11448:	ldr	r3, [pc, #16]	; 11460 <__assert_fail@plt+0x98>
   1144c:	cmp	r3, #0
   11450:	bxeq	lr
   11454:	bx	r3
   11458:	andeq	r4, r3, r4, ror #2
   1145c:	andeq	r4, r3, r4, ror #2
   11460:	andeq	r0, r0, r0
   11464:	ldr	r0, [pc, #36]	; 11490 <__assert_fail@plt+0xc8>
   11468:	ldr	r1, [pc, #36]	; 11494 <__assert_fail@plt+0xcc>
   1146c:	sub	r1, r1, r0
   11470:	asr	r1, r1, #2
   11474:	add	r1, r1, r1, lsr #31
   11478:	asrs	r1, r1, #1
   1147c:	bxeq	lr
   11480:	ldr	r3, [pc, #16]	; 11498 <__assert_fail@plt+0xd0>
   11484:	cmp	r3, #0
   11488:	bxeq	lr
   1148c:	bx	r3
   11490:	andeq	r4, r3, r4, ror #2
   11494:	andeq	r4, r3, r4, ror #2
   11498:	andeq	r0, r0, r0
   1149c:	push	{r4, lr}
   114a0:	ldr	r4, [pc, #24]	; 114c0 <__assert_fail@plt+0xf8>
   114a4:	ldrb	r3, [r4]
   114a8:	cmp	r3, #0
   114ac:	popne	{r4, pc}
   114b0:	bl	11438 <__assert_fail@plt+0x70>
   114b4:	mov	r3, #1
   114b8:	strb	r3, [r4]
   114bc:	pop	{r4, pc}
   114c0:	andeq	r4, r3, r4, lsl #3
   114c4:	b	11464 <__assert_fail@plt+0x9c>
   114c8:	push	{fp, lr}
   114cc:	mov	fp, sp
   114d0:	sub	sp, sp, #56	; 0x38
   114d4:	str	r0, [fp, #-4]
   114d8:	ldr	r0, [fp, #-4]
   114dc:	cmp	r0, #0
   114e0:	beq	1152c <__assert_fail@plt+0x164>
   114e4:	b	114e8 <__assert_fail@plt+0x120>
   114e8:	movw	r0, #16760	; 0x4178
   114ec:	movt	r0, #3
   114f0:	ldr	r0, [r0]
   114f4:	movw	r1, #11236	; 0x2be4
   114f8:	movt	r1, #2
   114fc:	str	r0, [fp, #-8]
   11500:	mov	r0, r1
   11504:	bl	11254 <gettext@plt>
   11508:	movw	r1, #16820	; 0x41b4
   1150c:	movt	r1, #3
   11510:	ldr	r2, [r1]
   11514:	ldr	r1, [fp, #-8]
   11518:	str	r0, [fp, #-12]
   1151c:	mov	r0, r1
   11520:	ldr	r1, [fp, #-12]
   11524:	bl	11278 <fprintf@plt>
   11528:	b	11694 <__assert_fail@plt+0x2cc>
   1152c:	movw	r0, #11275	; 0x2c0b
   11530:	movt	r0, #2
   11534:	bl	11254 <gettext@plt>
   11538:	movw	r1, #16820	; 0x41b4
   1153c:	movt	r1, #3
   11540:	ldr	r2, [r1]
   11544:	ldr	r3, [r1]
   11548:	ldr	r1, [r1]
   1154c:	str	r1, [fp, #-16]
   11550:	mov	r1, r2
   11554:	mov	r2, r3
   11558:	ldr	r3, [fp, #-16]
   1155c:	bl	11110 <printf@plt>
   11560:	movw	r1, #11410	; 0x2c92
   11564:	movt	r1, #2
   11568:	str	r0, [fp, #-20]	; 0xffffffec
   1156c:	mov	r0, r1
   11570:	bl	11254 <gettext@plt>
   11574:	movw	r1, #16764	; 0x417c
   11578:	movt	r1, #3
   1157c:	ldr	r1, [r1]
   11580:	bl	110ec <fputs_unlocked@plt>
   11584:	movw	r1, #11515	; 0x2cfb
   11588:	movt	r1, #2
   1158c:	str	r0, [fp, #-24]	; 0xffffffe8
   11590:	mov	r0, r1
   11594:	bl	11254 <gettext@plt>
   11598:	movw	r1, #16764	; 0x417c
   1159c:	movt	r1, #3
   115a0:	ldr	r1, [r1]
   115a4:	bl	110ec <fputs_unlocked@plt>
   115a8:	movw	r1, #11716	; 0x2dc4
   115ac:	movt	r1, #2
   115b0:	str	r0, [sp, #28]
   115b4:	mov	r0, r1
   115b8:	bl	11254 <gettext@plt>
   115bc:	movw	r1, #16764	; 0x417c
   115c0:	movt	r1, #3
   115c4:	ldr	r1, [r1]
   115c8:	bl	110ec <fputs_unlocked@plt>
   115cc:	movw	r1, #11844	; 0x2e44
   115d0:	movt	r1, #2
   115d4:	str	r0, [sp, #24]
   115d8:	mov	r0, r1
   115dc:	bl	11254 <gettext@plt>
   115e0:	movw	r1, #16764	; 0x417c
   115e4:	movt	r1, #3
   115e8:	ldr	r1, [r1]
   115ec:	bl	110ec <fputs_unlocked@plt>
   115f0:	movw	r1, #11910	; 0x2e86
   115f4:	movt	r1, #2
   115f8:	str	r0, [sp, #20]
   115fc:	mov	r0, r1
   11600:	bl	11254 <gettext@plt>
   11604:	movw	r1, #16764	; 0x417c
   11608:	movt	r1, #3
   1160c:	ldr	r1, [r1]
   11610:	bl	110ec <fputs_unlocked@plt>
   11614:	movw	r1, #11977	; 0x2ec9
   11618:	movt	r1, #2
   1161c:	str	r0, [sp, #16]
   11620:	mov	r0, r1
   11624:	bl	11254 <gettext@plt>
   11628:	movw	r1, #16764	; 0x417c
   1162c:	movt	r1, #3
   11630:	ldr	r1, [r1]
   11634:	bl	110ec <fputs_unlocked@plt>
   11638:	movw	r1, #12022	; 0x2ef6
   1163c:	movt	r1, #2
   11640:	str	r0, [sp, #12]
   11644:	mov	r0, r1
   11648:	bl	11254 <gettext@plt>
   1164c:	movw	r1, #16764	; 0x417c
   11650:	movt	r1, #3
   11654:	ldr	r1, [r1]
   11658:	bl	110ec <fputs_unlocked@plt>
   1165c:	movw	r1, #12076	; 0x2f2c
   11660:	movt	r1, #2
   11664:	str	r0, [sp, #8]
   11668:	mov	r0, r1
   1166c:	bl	11254 <gettext@plt>
   11670:	movw	r1, #16764	; 0x417c
   11674:	movt	r1, #3
   11678:	ldr	r1, [r1]
   1167c:	bl	110ec <fputs_unlocked@plt>
   11680:	movw	r1, #12151	; 0x2f77
   11684:	movt	r1, #2
   11688:	str	r0, [sp, #4]
   1168c:	mov	r0, r1
   11690:	bl	1169c <__assert_fail@plt+0x2d4>
   11694:	ldr	r0, [fp, #-4]
   11698:	bl	11248 <exit@plt>
   1169c:	push	{fp, lr}
   116a0:	mov	fp, sp
   116a4:	sub	sp, sp, #88	; 0x58
   116a8:	add	r1, sp, #28
   116ac:	movw	r2, #13760	; 0x35c0
   116b0:	movt	r2, #2
   116b4:	str	r0, [fp, #-4]
   116b8:	mov	r0, r1
   116bc:	str	r1, [sp, #12]
   116c0:	mov	r1, r2
   116c4:	movw	r2, #56	; 0x38
   116c8:	bl	1114c <memcpy@plt>
   116cc:	ldr	r0, [fp, #-4]
   116d0:	str	r0, [sp, #24]
   116d4:	ldr	r0, [sp, #12]
   116d8:	str	r0, [sp, #20]
   116dc:	ldr	r0, [sp, #20]
   116e0:	ldr	r0, [r0]
   116e4:	movw	r1, #0
   116e8:	cmp	r0, r1
   116ec:	movw	r0, #0
   116f0:	str	r0, [sp, #8]
   116f4:	beq	11720 <__assert_fail@plt+0x358>
   116f8:	ldr	r0, [fp, #-4]
   116fc:	ldr	r1, [sp, #20]
   11700:	ldr	r1, [r1]
   11704:	bl	11104 <strcmp@plt>
   11708:	cmp	r0, #0
   1170c:	movw	r0, #0
   11710:	moveq	r0, #1
   11714:	mvn	r1, #0
   11718:	eor	r0, r0, r1
   1171c:	str	r0, [sp, #8]
   11720:	ldr	r0, [sp, #8]
   11724:	tst	r0, #1
   11728:	beq	1173c <__assert_fail@plt+0x374>
   1172c:	ldr	r0, [sp, #20]
   11730:	add	r0, r0, #8
   11734:	str	r0, [sp, #20]
   11738:	b	116dc <__assert_fail@plt+0x314>
   1173c:	ldr	r0, [sp, #20]
   11740:	ldr	r0, [r0, #4]
   11744:	movw	r1, #0
   11748:	cmp	r0, r1
   1174c:	beq	1175c <__assert_fail@plt+0x394>
   11750:	ldr	r0, [sp, #20]
   11754:	ldr	r0, [r0, #4]
   11758:	str	r0, [sp, #24]
   1175c:	movw	r0, #12520	; 0x30e8
   11760:	movt	r0, #2
   11764:	bl	11254 <gettext@plt>
   11768:	movw	r1, #12249	; 0x2fd9
   1176c:	movt	r1, #2
   11770:	movw	r2, #12543	; 0x30ff
   11774:	movt	r2, #2
   11778:	bl	11110 <printf@plt>
   1177c:	movw	r1, #5
   11780:	str	r0, [sp, #4]
   11784:	mov	r0, r1
   11788:	movw	r1, #0
   1178c:	bl	112e4 <setlocale@plt>
   11790:	str	r0, [sp, #16]
   11794:	ldr	r0, [sp, #16]
   11798:	movw	r1, #0
   1179c:	cmp	r0, r1
   117a0:	beq	117dc <__assert_fail@plt+0x414>
   117a4:	ldr	r0, [sp, #16]
   117a8:	movw	r1, #12583	; 0x3127
   117ac:	movt	r1, #2
   117b0:	movw	r2, #3
   117b4:	bl	1138c <strncmp@plt>
   117b8:	cmp	r0, #0
   117bc:	beq	117dc <__assert_fail@plt+0x414>
   117c0:	movw	r0, #12587	; 0x312b
   117c4:	movt	r0, #2
   117c8:	bl	11254 <gettext@plt>
   117cc:	movw	r1, #16764	; 0x417c
   117d0:	movt	r1, #3
   117d4:	ldr	r1, [r1]
   117d8:	bl	110ec <fputs_unlocked@plt>
   117dc:	movw	r0, #12658	; 0x3172
   117e0:	movt	r0, #2
   117e4:	bl	11254 <gettext@plt>
   117e8:	ldr	r2, [fp, #-4]
   117ec:	movw	r1, #12543	; 0x30ff
   117f0:	movt	r1, #2
   117f4:	bl	11110 <printf@plt>
   117f8:	movw	r1, #12685	; 0x318d
   117fc:	movt	r1, #2
   11800:	str	r0, [sp]
   11804:	mov	r0, r1
   11808:	bl	11254 <gettext@plt>
   1180c:	ldr	r1, [sp, #24]
   11810:	ldr	r2, [sp, #24]
   11814:	ldr	r3, [fp, #-4]
   11818:	cmp	r2, r3
   1181c:	movw	r2, #0
   11820:	moveq	r2, #1
   11824:	tst	r2, #1
   11828:	movw	r2, #11514	; 0x2cfa
   1182c:	movt	r2, #2
   11830:	movw	r3, #12453	; 0x30a5
   11834:	movt	r3, #2
   11838:	movne	r2, r3
   1183c:	bl	11110 <printf@plt>
   11840:	mov	sp, fp
   11844:	pop	{fp, pc}
   11848:	push	{fp, lr}
   1184c:	mov	fp, sp
   11850:	sub	sp, sp, #128	; 0x80
   11854:	movw	r2, #0
   11858:	str	r2, [fp, #-4]
   1185c:	str	r0, [fp, #-8]
   11860:	str	r1, [fp, #-12]
   11864:	str	r2, [fp, #-16]
   11868:	str	r2, [fp, #-20]	; 0xffffffec
   1186c:	str	r2, [fp, #-24]	; 0xffffffe8
   11870:	movw	r0, #0
   11874:	strb	r0, [fp, #-26]	; 0xffffffe6
   11878:	str	r2, [fp, #-32]	; 0xffffffe0
   1187c:	ldr	r0, [fp, #-12]
   11880:	ldr	r0, [r0]
   11884:	bl	19afc <__assert_fail@plt+0x8734>
   11888:	movw	r0, #6
   1188c:	movw	r1, #11514	; 0x2cfa
   11890:	movt	r1, #2
   11894:	bl	112e4 <setlocale@plt>
   11898:	movw	r1, #12253	; 0x2fdd
   1189c:	movt	r1, #2
   118a0:	str	r0, [fp, #-56]	; 0xffffffc8
   118a4:	mov	r0, r1
   118a8:	movw	r1, #12157	; 0x2f7d
   118ac:	movt	r1, #2
   118b0:	bl	11350 <bindtextdomain@plt>
   118b4:	movw	r1, #12253	; 0x2fdd
   118b8:	movt	r1, #2
   118bc:	str	r0, [fp, #-60]	; 0xffffffc4
   118c0:	mov	r0, r1
   118c4:	bl	1117c <textdomain@plt>
   118c8:	movw	r1, #11868	; 0x2e5c
   118cc:	movt	r1, #1
   118d0:	str	r0, [sp, #64]	; 0x40
   118d4:	mov	r0, r1
   118d8:	bl	22b68 <__assert_fail@plt+0x117a0>
   118dc:	movw	r1, #16776	; 0x4188
   118e0:	movt	r1, #3
   118e4:	movw	r2, #0
   118e8:	strb	r2, [r1]
   118ec:	movw	r1, #16777	; 0x4189
   118f0:	movt	r1, #3
   118f4:	strb	r2, [r1]
   118f8:	movw	r1, #16778	; 0x418a
   118fc:	movt	r1, #3
   11900:	strb	r2, [r1]
   11904:	ldr	r0, [fp, #-8]
   11908:	ldr	r1, [fp, #-12]
   1190c:	movw	r2, #12181	; 0x2f95
   11910:	movt	r2, #2
   11914:	movw	r3, #13584	; 0x3510
   11918:	movt	r3, #2
   1191c:	movw	ip, #0
   11920:	str	ip, [sp]
   11924:	bl	11230 <getopt_long@plt>
   11928:	str	r0, [fp, #-36]	; 0xffffffdc
   1192c:	cmn	r0, #1
   11930:	beq	11f38 <__assert_fail@plt+0xb70>
   11934:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11938:	add	r0, r0, #3
   1193c:	lsr	r1, r0, #1
   11940:	cmp	r1, #130	; 0x82
   11944:	str	r0, [sp, #60]	; 0x3c
   11948:	bhi	11f2c <__assert_fail@plt+0xb64>
   1194c:	add	r0, pc, #8
   11950:	ldr	r1, [sp, #60]	; 0x3c
   11954:	ldr	r0, [r0, r1, lsl #2]
   11958:	mov	pc, r0
   1195c:	ldrdeq	r1, [r1], -r8
   11960:	ldrdeq	r1, [r1], -r0
   11964:	andeq	r1, r1, ip, lsr #30
   11968:	andeq	r1, r1, ip, lsr #30
   1196c:	andeq	r1, r1, ip, lsr #30
   11970:	andeq	r1, r1, ip, lsr #30
   11974:	andeq	r1, r1, ip, lsr #30
   11978:	andeq	r1, r1, ip, lsr #30
   1197c:	andeq	r1, r1, ip, lsr #30
   11980:	andeq	r1, r1, ip, lsr #30
   11984:	andeq	r1, r1, ip, lsr #30
   11988:	andeq	r1, r1, ip, lsr #30
   1198c:	andeq	r1, r1, ip, lsr #30
   11990:	andeq	r1, r1, ip, lsr #30
   11994:	andeq	r1, r1, ip, lsr #30
   11998:	andeq	r1, r1, ip, lsr #30
   1199c:	andeq	r1, r1, ip, lsr #30
   119a0:	andeq	r1, r1, ip, lsr #30
   119a4:	andeq	r1, r1, ip, lsr #30
   119a8:	andeq	r1, r1, ip, lsr #30
   119ac:	andeq	r1, r1, ip, lsr #30
   119b0:	andeq	r1, r1, ip, lsr #30
   119b4:	andeq	r1, r1, ip, lsr #30
   119b8:	andeq	r1, r1, ip, lsr #30
   119bc:	andeq	r1, r1, ip, lsr #30
   119c0:	andeq	r1, r1, ip, lsr #30
   119c4:	andeq	r1, r1, ip, lsr #30
   119c8:	andeq	r1, r1, ip, lsr #30
   119cc:	andeq	r1, r1, ip, lsr #30
   119d0:	andeq	r1, r1, ip, lsr #30
   119d4:	andeq	r1, r1, ip, lsr #30
   119d8:	andeq	r1, r1, ip, lsr #30
   119dc:	andeq	r1, r1, ip, lsr #30
   119e0:	andeq	r1, r1, ip, lsr #30
   119e4:	andeq	r1, r1, ip, lsr #30
   119e8:	andeq	r1, r1, ip, lsr #30
   119ec:	andeq	r1, r1, ip, lsr #30
   119f0:	andeq	r1, r1, ip, lsr #30
   119f4:	andeq	r1, r1, ip, lsr #30
   119f8:	andeq	r1, r1, ip, lsr #30
   119fc:	andeq	r1, r1, ip, lsr #30
   11a00:	andeq	r1, r1, ip, lsr #30
   11a04:	andeq	r1, r1, ip, lsr #30
   11a08:	andeq	r1, r1, ip, lsr #30
   11a0c:	andeq	r1, r1, ip, lsr #30
   11a10:	andeq	r1, r1, ip, lsr #30
   11a14:	andeq	r1, r1, r4, ror sp
   11a18:	andeq	r1, r1, r4, ror sp
   11a1c:	andeq	r1, r1, ip, lsr #30
   11a20:	andeq	r1, r1, ip, lsr #30
   11a24:	andeq	r1, r1, ip, lsr #30
   11a28:	andeq	r1, r1, r4, ror sp
   11a2c:	andeq	r1, r1, r4, ror sp
   11a30:	andeq	r1, r1, r4, ror sp
   11a34:	andeq	r1, r1, r4, ror sp
   11a38:	andeq	r1, r1, r4, ror sp
   11a3c:	andeq	r1, r1, r4, ror sp
   11a40:	andeq	r1, r1, r4, ror sp
   11a44:	andeq	r1, r1, r4, ror sp
   11a48:	andeq	r1, r1, ip, lsr #30
   11a4c:	andeq	r1, r1, ip, lsr #30
   11a50:	andeq	r1, r1, ip, lsr #30
   11a54:	andeq	r1, r1, ip, lsr #30
   11a58:	andeq	r1, r1, ip, lsr #30
   11a5c:	andeq	r1, r1, r4, ror sp
   11a60:	andeq	r1, r1, ip, lsr #30
   11a64:	andeq	r1, r1, ip, lsr #30
   11a68:	andeq	r1, r1, ip, lsr #30
   11a6c:	andeq	r1, r1, ip, lsr #30
   11a70:	andeq	r1, r1, ip, lsr #30
   11a74:	andeq	r1, r1, ip, lsr #30
   11a78:	andeq	r1, r1, ip, lsr #30
   11a7c:	andeq	r1, r1, ip, lsr #30
   11a80:	andeq	r1, r1, ip, lsr #30
   11a84:	andeq	r1, r1, ip, lsr #30
   11a88:	andeq	r1, r1, ip, lsr #30
   11a8c:	andeq	r1, r1, ip, lsr #30
   11a90:	andeq	r1, r1, ip, lsr #30
   11a94:	andeq	r1, r1, ip, lsr #30
   11a98:	andeq	r1, r1, ip, lsr #30
   11a9c:	andeq	r1, r1, ip, lsr #30
   11aa0:	andeq	r1, r1, ip, lsr #30
   11aa4:	andeq	r1, r1, ip, lsr #30
   11aa8:	andeq	r1, r1, ip, lsr #30
   11aac:	andeq	r1, r1, ip, lsr #30
   11ab0:	andeq	r1, r1, r0, lsl #29
   11ab4:	andeq	r1, r1, ip, lsr #30
   11ab8:	andeq	r1, r1, ip, lsr #30
   11abc:	andeq	r1, r1, ip, lsr #30
   11ac0:	andeq	r1, r1, ip, lsr #30
   11ac4:	andeq	r1, r1, ip, lsr #30
   11ac8:	andeq	r1, r1, r4, ror sp
   11acc:	andeq	r1, r1, ip, lsr #30
   11ad0:	andeq	r1, r1, ip, lsr #30
   11ad4:	andeq	r1, r1, ip, lsr #30
   11ad8:	andeq	r1, r1, ip, lsr #30
   11adc:	andeq	r1, r1, ip, lsr #30
   11ae0:	andeq	r1, r1, ip, lsr #30
   11ae4:	andeq	r1, r1, ip, lsr #30
   11ae8:	andeq	r1, r1, ip, lsr #30
   11aec:	andeq	r1, r1, r4, ror sp
   11af0:	andeq	r1, r1, ip, lsr #30
   11af4:	muleq	r1, r4, lr
   11af8:	andeq	r1, r1, ip, lsr #30
   11afc:	andeq	r1, r1, ip, lsr #30
   11b00:	andeq	r1, r1, r8, lsr #29
   11b04:	andeq	r1, r1, r4, ror sp
   11b08:	andeq	r1, r1, ip, lsr #30
   11b0c:	andeq	r1, r1, ip, lsr #30
   11b10:	andeq	r1, r1, ip, lsr #30
   11b14:	andeq	r1, r1, ip, lsr #30
   11b18:	andeq	r1, r1, ip, lsr #30
   11b1c:	andeq	r1, r1, ip, lsr #30
   11b20:	andeq	r1, r1, ip, lsr #30
   11b24:	andeq	r1, r1, r4, ror sp
   11b28:	andeq	r1, r1, ip, lsr #30
   11b2c:	andeq	r1, r1, ip, lsr #30
   11b30:	andeq	r1, r1, r4, ror sp
   11b34:	andeq	r1, r1, r4, ror sp
   11b38:	andeq	r1, r1, r4, ror sp
   11b3c:	andeq	r1, r1, r4, ror sp
   11b40:			; <UNDEFINED> instruction: 0x00011ebc
   11b44:	andeq	r1, r1, r4, ror sp
   11b48:	andeq	r1, r1, r4, ror sp
   11b4c:	andeq	r1, r1, ip, lsr #30
   11b50:	andeq	r1, r1, ip, lsr #30
   11b54:	andeq	r1, r1, ip, lsr #30
   11b58:	andeq	r1, r1, ip, lsr #30
   11b5c:	andeq	r1, r1, ip, lsr #30
   11b60:	andeq	r1, r1, ip, lsr #30
   11b64:	andeq	r1, r1, ip, lsr #30
   11b68:	andeq	r1, r1, ip, lsr #30
   11b6c:	andeq	r1, r1, ip, lsr #30
   11b70:	andeq	r1, r1, ip, lsr #30
   11b74:	andeq	r1, r1, ip, lsr #30
   11b78:	andeq	r1, r1, ip, lsr #30
   11b7c:	andeq	r1, r1, ip, lsr #30
   11b80:	andeq	r1, r1, ip, lsr #30
   11b84:	andeq	r1, r1, ip, lsr #30
   11b88:	andeq	r1, r1, ip, lsr #30
   11b8c:	andeq	r1, r1, ip, lsr #30
   11b90:	andeq	r1, r1, ip, lsr #30
   11b94:	andeq	r1, r1, ip, lsr #30
   11b98:	andeq	r1, r1, ip, lsr #30
   11b9c:	andeq	r1, r1, ip, lsr #30
   11ba0:	andeq	r1, r1, ip, lsr #30
   11ba4:	andeq	r1, r1, ip, lsr #30
   11ba8:	andeq	r1, r1, ip, lsr #30
   11bac:	andeq	r1, r1, ip, lsr #30
   11bb0:	andeq	r1, r1, ip, lsr #30
   11bb4:	andeq	r1, r1, ip, lsr #30
   11bb8:	andeq	r1, r1, ip, lsr #30
   11bbc:	andeq	r1, r1, ip, lsr #30
   11bc0:	andeq	r1, r1, ip, lsr #30
   11bc4:	andeq	r1, r1, ip, lsr #30
   11bc8:	andeq	r1, r1, ip, lsr #30
   11bcc:	andeq	r1, r1, ip, lsr #30
   11bd0:	andeq	r1, r1, ip, lsr #30
   11bd4:	andeq	r1, r1, ip, lsr #30
   11bd8:	andeq	r1, r1, ip, lsr #30
   11bdc:	andeq	r1, r1, ip, lsr #30
   11be0:	andeq	r1, r1, ip, lsr #30
   11be4:	andeq	r1, r1, ip, lsr #30
   11be8:	andeq	r1, r1, ip, lsr #30
   11bec:	andeq	r1, r1, ip, lsr #30
   11bf0:	andeq	r1, r1, ip, lsr #30
   11bf4:	andeq	r1, r1, ip, lsr #30
   11bf8:	andeq	r1, r1, ip, lsr #30
   11bfc:	andeq	r1, r1, ip, lsr #30
   11c00:	andeq	r1, r1, ip, lsr #30
   11c04:	andeq	r1, r1, ip, lsr #30
   11c08:	andeq	r1, r1, ip, lsr #30
   11c0c:	andeq	r1, r1, ip, lsr #30
   11c10:	andeq	r1, r1, ip, lsr #30
   11c14:	andeq	r1, r1, ip, lsr #30
   11c18:	andeq	r1, r1, ip, lsr #30
   11c1c:	andeq	r1, r1, ip, lsr #30
   11c20:	andeq	r1, r1, ip, lsr #30
   11c24:	andeq	r1, r1, ip, lsr #30
   11c28:	andeq	r1, r1, ip, lsr #30
   11c2c:	andeq	r1, r1, ip, lsr #30
   11c30:	andeq	r1, r1, ip, lsr #30
   11c34:	andeq	r1, r1, ip, lsr #30
   11c38:	andeq	r1, r1, ip, lsr #30
   11c3c:	andeq	r1, r1, ip, lsr #30
   11c40:	andeq	r1, r1, ip, lsr #30
   11c44:	andeq	r1, r1, ip, lsr #30
   11c48:	andeq	r1, r1, ip, lsr #30
   11c4c:	andeq	r1, r1, ip, lsr #30
   11c50:	andeq	r1, r1, ip, lsr #30
   11c54:	andeq	r1, r1, ip, lsr #30
   11c58:	andeq	r1, r1, ip, lsr #30
   11c5c:	andeq	r1, r1, ip, lsr #30
   11c60:	andeq	r1, r1, ip, lsr #30
   11c64:	andeq	r1, r1, ip, lsr #30
   11c68:	andeq	r1, r1, ip, lsr #30
   11c6c:	andeq	r1, r1, ip, lsr #30
   11c70:	andeq	r1, r1, ip, lsr #30
   11c74:	andeq	r1, r1, ip, lsr #30
   11c78:	andeq	r1, r1, ip, lsr #30
   11c7c:	andeq	r1, r1, ip, lsr #30
   11c80:	andeq	r1, r1, ip, lsr #30
   11c84:	andeq	r1, r1, ip, lsr #30
   11c88:	andeq	r1, r1, ip, lsr #30
   11c8c:	andeq	r1, r1, ip, lsr #30
   11c90:	andeq	r1, r1, ip, lsr #30
   11c94:	andeq	r1, r1, ip, lsr #30
   11c98:	andeq	r1, r1, ip, lsr #30
   11c9c:	andeq	r1, r1, ip, lsr #30
   11ca0:	andeq	r1, r1, ip, lsr #30
   11ca4:	andeq	r1, r1, ip, lsr #30
   11ca8:	andeq	r1, r1, ip, lsr #30
   11cac:	andeq	r1, r1, ip, lsr #30
   11cb0:	andeq	r1, r1, ip, lsr #30
   11cb4:	andeq	r1, r1, ip, lsr #30
   11cb8:	andeq	r1, r1, ip, lsr #30
   11cbc:	andeq	r1, r1, ip, lsr #30
   11cc0:	andeq	r1, r1, ip, lsr #30
   11cc4:	andeq	r1, r1, ip, lsr #30
   11cc8:	andeq	r1, r1, ip, lsr #30
   11ccc:	andeq	r1, r1, ip, lsr #30
   11cd0:	andeq	r1, r1, ip, lsr #30
   11cd4:	andeq	r1, r1, ip, lsr #30
   11cd8:	andeq	r1, r1, ip, lsr #30
   11cdc:	andeq	r1, r1, ip, lsr #30
   11ce0:	andeq	r1, r1, ip, lsr #30
   11ce4:	andeq	r1, r1, ip, lsr #30
   11ce8:	andeq	r1, r1, ip, lsr #30
   11cec:	andeq	r1, r1, ip, lsr #30
   11cf0:	andeq	r1, r1, ip, lsr #30
   11cf4:	andeq	r1, r1, ip, lsr #30
   11cf8:	andeq	r1, r1, ip, lsr #30
   11cfc:	andeq	r1, r1, ip, lsr #30
   11d00:	andeq	r1, r1, ip, lsr #30
   11d04:	andeq	r1, r1, ip, lsr #30
   11d08:	andeq	r1, r1, ip, lsr #30
   11d0c:	andeq	r1, r1, ip, lsr #30
   11d10:	andeq	r1, r1, ip, lsr #30
   11d14:	andeq	r1, r1, ip, lsr #30
   11d18:	andeq	r1, r1, ip, lsr #30
   11d1c:	andeq	r1, r1, ip, lsr #30
   11d20:	andeq	r1, r1, ip, lsr #30
   11d24:	andeq	r1, r1, ip, lsr #30
   11d28:	andeq	r1, r1, ip, lsr #30
   11d2c:	andeq	r1, r1, ip, lsr #30
   11d30:	andeq	r1, r1, ip, lsr #30
   11d34:	andeq	r1, r1, ip, lsr #30
   11d38:	andeq	r1, r1, ip, lsr #30
   11d3c:	andeq	r1, r1, ip, lsr #30
   11d40:	andeq	r1, r1, ip, lsr #30
   11d44:	andeq	r1, r1, ip, lsr #30
   11d48:	andeq	r1, r1, ip, lsr #30
   11d4c:	andeq	r1, r1, ip, lsr #30
   11d50:	andeq	r1, r1, ip, lsr #30
   11d54:	andeq	r1, r1, ip, lsr #30
   11d58:	andeq	r1, r1, ip, lsr #30
   11d5c:	andeq	r1, r1, ip, lsr #30
   11d60:	andeq	r1, r1, ip, lsr #30
   11d64:	andeq	r1, r1, ip, lsr #30
   11d68:	andeq	r1, r1, r4, asr lr
   11d6c:	andeq	r1, r1, r0, ror #28
   11d70:	andeq	r1, r1, ip, ror #28
   11d74:	ldr	r0, [fp, #-12]
   11d78:	movw	r1, #16752	; 0x4170
   11d7c:	movt	r1, #3
   11d80:	ldr	r1, [r1]
   11d84:	sub	r1, r1, #1
   11d88:	add	r0, r0, r1, lsl #2
   11d8c:	ldr	r0, [r0]
   11d90:	str	r0, [fp, #-40]	; 0xffffffd8
   11d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d98:	bl	11260 <strlen@plt>
   11d9c:	str	r0, [fp, #-44]	; 0xffffffd4
   11da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11da8:	cmp	r1, #0
   11dac:	movw	r1, #0
   11db0:	movne	r1, #1
   11db4:	mvn	r2, #0
   11db8:	eor	r1, r1, r2
   11dbc:	eor	r1, r1, r2
   11dc0:	and	r1, r1, #1
   11dc4:	add	r0, r0, r1
   11dc8:	str	r0, [fp, #-48]	; 0xffffffd0
   11dcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11dd4:	add	r0, r0, r1
   11dd8:	str	r0, [fp, #-52]	; 0xffffffcc
   11ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11de0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11de4:	cmp	r0, r1
   11de8:	bhi	11e08 <__assert_fail@plt+0xa40>
   11dec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11df0:	add	r0, r0, #1
   11df4:	str	r0, [fp, #-24]	; 0xffffffe8
   11df8:	ldr	r0, [fp, #-16]
   11dfc:	sub	r1, fp, #24
   11e00:	bl	1cdf4 <__assert_fail@plt+0xba2c>
   11e04:	str	r0, [fp, #-16]
   11e08:	ldr	r0, [fp, #-16]
   11e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e10:	add	r0, r0, r1
   11e14:	movw	r1, #44	; 0x2c
   11e18:	strb	r1, [r0]
   11e1c:	ldr	r0, [fp, #-16]
   11e20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11e24:	add	r0, r0, r1
   11e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11e2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11e30:	add	r2, r2, #1
   11e34:	bl	1114c <memcpy@plt>
   11e38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e3c:	str	r0, [fp, #-20]	; 0xffffffec
   11e40:	movw	r0, #16776	; 0x4188
   11e44:	movt	r0, #3
   11e48:	movw	r1, #1
   11e4c:	strb	r1, [r0]
   11e50:	b	11f34 <__assert_fail@plt+0xb6c>
   11e54:	movw	r0, #0
   11e58:	strb	r0, [fp, #-26]	; 0xffffffe6
   11e5c:	b	11f34 <__assert_fail@plt+0xb6c>
   11e60:	movw	r0, #1
   11e64:	strb	r0, [fp, #-26]	; 0xffffffe6
   11e68:	b	11f34 <__assert_fail@plt+0xb6c>
   11e6c:	movw	r0, #16768	; 0x4180
   11e70:	movt	r0, #3
   11e74:	ldr	r0, [r0]
   11e78:	str	r0, [fp, #-32]	; 0xffffffe0
   11e7c:	b	11f34 <__assert_fail@plt+0xb6c>
   11e80:	movw	r0, #16778	; 0x418a
   11e84:	movt	r0, #3
   11e88:	movw	r1, #1
   11e8c:	strb	r1, [r0]
   11e90:	b	11f34 <__assert_fail@plt+0xb6c>
   11e94:	movw	r0, #16664	; 0x4118
   11e98:	movt	r0, #3
   11e9c:	movw	r1, #1
   11ea0:	str	r1, [r0]
   11ea4:	b	11f34 <__assert_fail@plt+0xb6c>
   11ea8:	movw	r0, #16777	; 0x4189
   11eac:	movt	r0, #3
   11eb0:	movw	r1, #1
   11eb4:	strb	r1, [r0]
   11eb8:	b	11f34 <__assert_fail@plt+0xb6c>
   11ebc:	movw	r0, #16664	; 0x4118
   11ec0:	movt	r0, #3
   11ec4:	movw	r1, #0
   11ec8:	str	r1, [r0]
   11ecc:	b	11f34 <__assert_fail@plt+0xb6c>
   11ed0:	movw	r0, #0
   11ed4:	bl	114c8 <__assert_fail@plt+0x100>
   11ed8:	movw	r0, #16764	; 0x417c
   11edc:	movt	r0, #3
   11ee0:	ldr	r0, [r0]
   11ee4:	movw	r1, #16668	; 0x411c
   11ee8:	movt	r1, #3
   11eec:	ldr	r3, [r1]
   11ef0:	movw	r1, #12151	; 0x2f77
   11ef4:	movt	r1, #2
   11ef8:	movw	r2, #12249	; 0x2fd9
   11efc:	movt	r2, #2
   11f00:	movw	ip, #12263	; 0x2fe7
   11f04:	movt	ip, #2
   11f08:	str	ip, [sp]
   11f0c:	movw	ip, #12279	; 0x2ff7
   11f10:	movt	ip, #2
   11f14:	str	ip, [sp, #4]
   11f18:	movw	ip, #0
   11f1c:	str	ip, [sp, #8]
   11f20:	bl	1cabc <__assert_fail@plt+0xb6f4>
   11f24:	movw	r0, #0
   11f28:	bl	11248 <exit@plt>
   11f2c:	movw	r0, #1
   11f30:	bl	114c8 <__assert_fail@plt+0x100>
   11f34:	b	11904 <__assert_fail@plt+0x53c>
   11f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f3c:	movw	r1, #0
   11f40:	cmp	r0, r1
   11f44:	beq	11f84 <__assert_fail@plt+0xbbc>
   11f48:	ldr	r0, [fp, #-16]
   11f4c:	movw	r1, #0
   11f50:	cmp	r0, r1
   11f54:	beq	11f80 <__assert_fail@plt+0xbb8>
   11f58:	movw	r0, #12292	; 0x3004
   11f5c:	movt	r0, #2
   11f60:	bl	11254 <gettext@plt>
   11f64:	movw	r1, #0
   11f68:	str	r0, [sp, #56]	; 0x38
   11f6c:	mov	r0, r1
   11f70:	ldr	r2, [sp, #56]	; 0x38
   11f74:	bl	111e8 <error@plt>
   11f78:	movw	r0, #1
   11f7c:	bl	114c8 <__assert_fail@plt+0x100>
   11f80:	b	11fbc <__assert_fail@plt+0xbf4>
   11f84:	ldr	r0, [fp, #-16]
   11f88:	movw	r1, #0
   11f8c:	cmp	r0, r1
   11f90:	bne	11fb8 <__assert_fail@plt+0xbf0>
   11f94:	ldr	r0, [fp, #-12]
   11f98:	movw	r1, #16752	; 0x4170
   11f9c:	movt	r1, #3
   11fa0:	ldr	r2, [r1]
   11fa4:	add	r3, r2, #1
   11fa8:	str	r3, [r1]
   11fac:	add	r0, r0, r2, lsl #2
   11fb0:	ldr	r0, [r0]
   11fb4:	str	r0, [fp, #-16]
   11fb8:	b	11fbc <__assert_fail@plt+0xbf4>
   11fbc:	movw	r0, #16752	; 0x4170
   11fc0:	movt	r0, #3
   11fc4:	ldr	r0, [r0]
   11fc8:	ldr	r1, [fp, #-8]
   11fcc:	cmp	r0, r1
   11fd0:	blt	1207c <__assert_fail@plt+0xcb4>
   11fd4:	ldr	r0, [fp, #-16]
   11fd8:	movw	r1, #0
   11fdc:	cmp	r0, r1
   11fe0:	beq	1200c <__assert_fail@plt+0xc44>
   11fe4:	ldr	r0, [fp, #-16]
   11fe8:	ldr	r1, [fp, #-12]
   11fec:	movw	r2, #16752	; 0x4170
   11ff0:	movt	r2, #3
   11ff4:	ldr	r2, [r2]
   11ff8:	sub	r2, r2, #1
   11ffc:	add	r1, r1, r2, lsl #2
   12000:	ldr	r1, [r1]
   12004:	cmp	r0, r1
   12008:	beq	12030 <__assert_fail@plt+0xc68>
   1200c:	movw	r0, #12336	; 0x3030
   12010:	movt	r0, #2
   12014:	bl	11254 <gettext@plt>
   12018:	movw	r1, #0
   1201c:	str	r0, [sp, #52]	; 0x34
   12020:	mov	r0, r1
   12024:	ldr	r2, [sp, #52]	; 0x34
   12028:	bl	111e8 <error@plt>
   1202c:	b	12074 <__assert_fail@plt+0xcac>
   12030:	movw	r0, #12352	; 0x3040
   12034:	movt	r0, #2
   12038:	bl	11254 <gettext@plt>
   1203c:	ldr	r1, [fp, #-12]
   12040:	ldr	r2, [fp, #-8]
   12044:	sub	r2, r2, #1
   12048:	add	r1, r1, r2, lsl #2
   1204c:	ldr	r1, [r1]
   12050:	str	r0, [sp, #48]	; 0x30
   12054:	mov	r0, r1
   12058:	bl	1c158 <__assert_fail@plt+0xad90>
   1205c:	movw	r1, #0
   12060:	str	r0, [sp, #44]	; 0x2c
   12064:	mov	r0, r1
   12068:	ldr	r2, [sp, #48]	; 0x30
   1206c:	ldr	r3, [sp, #44]	; 0x2c
   12070:	bl	111e8 <error@plt>
   12074:	movw	r0, #1
   12078:	bl	114c8 <__assert_fail@plt+0x100>
   1207c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12080:	movw	r1, #0
   12084:	cmp	r0, r1
   12088:	beq	120fc <__assert_fail@plt+0xd34>
   1208c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12090:	bl	19678 <__assert_fail@plt+0x82b0>
   12094:	movw	r1, #16780	; 0x418c
   12098:	movt	r1, #3
   1209c:	str	r0, [r1]
   120a0:	ldr	r0, [r1]
   120a4:	movw	r1, #0
   120a8:	cmp	r0, r1
   120ac:	bne	120f8 <__assert_fail@plt+0xd30>
   120b0:	bl	11290 <__errno_location@plt>
   120b4:	ldr	r1, [r0]
   120b8:	movw	r0, #12377	; 0x3059
   120bc:	movt	r0, #2
   120c0:	str	r1, [sp, #40]	; 0x28
   120c4:	bl	11254 <gettext@plt>
   120c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120cc:	movw	r2, #4
   120d0:	str	r0, [sp, #36]	; 0x24
   120d4:	mov	r0, r2
   120d8:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   120dc:	movw	r1, #1
   120e0:	str	r0, [sp, #32]
   120e4:	mov	r0, r1
   120e8:	ldr	r1, [sp, #40]	; 0x28
   120ec:	ldr	r2, [sp, #36]	; 0x24
   120f0:	ldr	r3, [sp, #32]
   120f4:	bl	111e8 <error@plt>
   120f8:	b	12170 <__assert_fail@plt+0xda8>
   120fc:	ldr	r0, [fp, #-16]
   12100:	bl	18dec <__assert_fail@plt+0x7a24>
   12104:	movw	r1, #16780	; 0x418c
   12108:	movt	r1, #3
   1210c:	str	r0, [r1]
   12110:	ldr	r0, [r1]
   12114:	movw	r1, #0
   12118:	cmp	r0, r1
   1211c:	bne	1215c <__assert_fail@plt+0xd94>
   12120:	movw	r0, #12408	; 0x3078
   12124:	movt	r0, #2
   12128:	bl	11254 <gettext@plt>
   1212c:	ldr	r1, [fp, #-16]
   12130:	str	r0, [sp, #28]
   12134:	mov	r0, r1
   12138:	bl	1c158 <__assert_fail@plt+0xad90>
   1213c:	movw	r1, #0
   12140:	str	r0, [sp, #24]
   12144:	mov	r0, r1
   12148:	ldr	r2, [sp, #28]
   1214c:	ldr	r3, [sp, #24]
   12150:	bl	111e8 <error@plt>
   12154:	movw	r0, #1
   12158:	bl	114c8 <__assert_fail@plt+0x100>
   1215c:	movw	r0, #0
   12160:	bl	1135c <umask@plt>
   12164:	movw	r1, #16784	; 0x4190
   12168:	movt	r1, #3
   1216c:	str	r0, [r1]
   12170:	movw	r0, #16778	; 0x418a
   12174:	movt	r0, #3
   12178:	ldrb	r0, [r0]
   1217c:	tst	r0, #1
   12180:	beq	12208 <__assert_fail@plt+0xe40>
   12184:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12188:	tst	r0, #1
   1218c:	beq	12208 <__assert_fail@plt+0xe40>
   12190:	movw	r0, #16792	; 0x4198
   12194:	movt	r0, #3
   12198:	bl	1c290 <__assert_fail@plt+0xaec8>
   1219c:	movw	r1, #16808	; 0x41a8
   121a0:	movt	r1, #3
   121a4:	str	r0, [r1]
   121a8:	ldr	r0, [r1]
   121ac:	movw	r1, #0
   121b0:	cmp	r0, r1
   121b4:	bne	12204 <__assert_fail@plt+0xe3c>
   121b8:	bl	11290 <__errno_location@plt>
   121bc:	ldr	r1, [r0]
   121c0:	movw	r0, #12377	; 0x3059
   121c4:	movt	r0, #2
   121c8:	str	r1, [sp, #20]
   121cc:	bl	11254 <gettext@plt>
   121d0:	movw	r1, #4
   121d4:	str	r0, [sp, #16]
   121d8:	mov	r0, r1
   121dc:	movw	r1, #14995	; 0x3a93
   121e0:	movt	r1, #2
   121e4:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   121e8:	movw	r1, #1
   121ec:	str	r0, [sp, #12]
   121f0:	mov	r0, r1
   121f4:	ldr	r1, [sp, #20]
   121f8:	ldr	r2, [sp, #16]
   121fc:	ldr	r3, [sp, #12]
   12200:	bl	111e8 <error@plt>
   12204:	b	12218 <__assert_fail@plt+0xe50>
   12208:	movw	r0, #16808	; 0x41a8
   1220c:	movt	r0, #3
   12210:	movw	r1, #0
   12214:	str	r1, [r0]
   12218:	ldr	r0, [fp, #-12]
   1221c:	movw	r1, #16752	; 0x4170
   12220:	movt	r1, #3
   12224:	ldr	r1, [r1]
   12228:	add	r0, r0, r1, lsl #2
   1222c:	movw	r1, #1041	; 0x411
   12230:	bl	12254 <__assert_fail@plt+0xe8c>
   12234:	and	r0, r0, #1
   12238:	strb	r0, [fp, #-25]	; 0xffffffe7
   1223c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12240:	tst	r0, #1
   12244:	movw	r0, #0
   12248:	moveq	r0, #1
   1224c:	mov	sp, fp
   12250:	pop	{fp, pc}
   12254:	push	{fp, lr}
   12258:	mov	fp, sp
   1225c:	sub	sp, sp, #40	; 0x28
   12260:	str	r0, [fp, #-4]
   12264:	str	r1, [fp, #-8]
   12268:	movw	r0, #1
   1226c:	strb	r0, [fp, #-9]
   12270:	ldr	r0, [fp, #-4]
   12274:	ldr	r1, [fp, #-8]
   12278:	movw	r2, #0
   1227c:	bl	1f9cc <__assert_fail@plt+0xe604>
   12280:	str	r0, [fp, #-16]
   12284:	ldr	r0, [fp, #-16]
   12288:	bl	14654 <__assert_fail@plt+0x328c>
   1228c:	str	r0, [sp, #20]
   12290:	ldr	r0, [sp, #20]
   12294:	movw	r1, #0
   12298:	cmp	r0, r1
   1229c:	bne	12300 <__assert_fail@plt+0xf38>
   122a0:	bl	11290 <__errno_location@plt>
   122a4:	ldr	r0, [r0]
   122a8:	cmp	r0, #0
   122ac:	beq	122fc <__assert_fail@plt+0xf34>
   122b0:	movw	r0, #16777	; 0x4189
   122b4:	movt	r0, #3
   122b8:	ldrb	r0, [r0]
   122bc:	tst	r0, #1
   122c0:	bne	122f4 <__assert_fail@plt+0xf2c>
   122c4:	bl	11290 <__errno_location@plt>
   122c8:	ldr	r1, [r0]
   122cc:	movw	r0, #12815	; 0x320f
   122d0:	movt	r0, #2
   122d4:	str	r1, [sp, #16]
   122d8:	bl	11254 <gettext@plt>
   122dc:	movw	r1, #0
   122e0:	str	r0, [sp, #12]
   122e4:	mov	r0, r1
   122e8:	ldr	r1, [sp, #16]
   122ec:	ldr	r2, [sp, #12]
   122f0:	bl	111e8 <error@plt>
   122f4:	movw	r0, #0
   122f8:	strb	r0, [fp, #-9]
   122fc:	b	12334 <__assert_fail@plt+0xf6c>
   12300:	ldr	r0, [fp, #-16]
   12304:	ldr	r1, [sp, #20]
   12308:	bl	1238c <__assert_fail@plt+0xfc4>
   1230c:	and	r0, r0, #1
   12310:	ldrb	r1, [fp, #-9]
   12314:	and	r1, r1, #1
   12318:	and	r0, r1, r0
   1231c:	cmp	r0, #0
   12320:	movw	r0, #0
   12324:	movne	r0, #1
   12328:	and	r0, r0, #1
   1232c:	strb	r0, [fp, #-9]
   12330:	b	12284 <__assert_fail@plt+0xebc>
   12334:	ldr	r0, [fp, #-16]
   12338:	bl	14394 <__assert_fail@plt+0x2fcc>
   1233c:	cmp	r0, #0
   12340:	beq	1237c <__assert_fail@plt+0xfb4>
   12344:	bl	11290 <__errno_location@plt>
   12348:	ldr	r1, [r0]
   1234c:	movw	r0, #12831	; 0x321f
   12350:	movt	r0, #2
   12354:	str	r1, [sp, #8]
   12358:	bl	11254 <gettext@plt>
   1235c:	movw	r1, #0
   12360:	str	r0, [sp, #4]
   12364:	mov	r0, r1
   12368:	ldr	r1, [sp, #8]
   1236c:	ldr	r2, [sp, #4]
   12370:	bl	111e8 <error@plt>
   12374:	movw	r0, #0
   12378:	strb	r0, [fp, #-9]
   1237c:	ldrb	r0, [fp, #-9]
   12380:	and	r0, r0, #1
   12384:	mov	sp, fp
   12388:	pop	{fp, pc}
   1238c:	push	{fp, lr}
   12390:	mov	fp, sp
   12394:	sub	sp, sp, #192	; 0xc0
   12398:	str	r0, [fp, #-8]
   1239c:	str	r1, [fp, #-12]
   123a0:	ldr	r0, [fp, #-12]
   123a4:	ldr	r0, [r0, #28]
   123a8:	str	r0, [fp, #-16]
   123ac:	ldr	r0, [fp, #-12]
   123b0:	ldr	r0, [r0, #24]
   123b4:	str	r0, [fp, #-20]	; 0xffffffec
   123b8:	ldr	r0, [fp, #-12]
   123bc:	add	r0, r0, #64	; 0x40
   123c0:	str	r0, [fp, #-24]	; 0xffffffe8
   123c4:	mov	r0, #0
   123c8:	str	r0, [fp, #-36]	; 0xffffffdc
   123cc:	str	r0, [fp, #-40]	; 0xffffffd8
   123d0:	str	r0, [fp, #-32]	; 0xffffffe0
   123d4:	str	r0, [fp, #-40]	; 0xffffffd8
   123d8:	ldr	r0, [fp, #-12]
   123dc:	ldrh	r0, [r0, #56]	; 0x38
   123e0:	sub	r0, r0, #2
   123e4:	cmp	r0, #11
   123e8:	str	r0, [fp, #-72]	; 0xffffffb8
   123ec:	bhi	12664 <__assert_fail@plt+0x129c>
   123f0:	add	r0, pc, #8
   123f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   123f8:	ldr	r0, [r0, r1, lsl #2]
   123fc:	mov	pc, r0
   12400:	strdeq	r2, [r1], -ip
   12404:	andeq	r2, r1, r4, ror #12
   12408:	andeq	r2, r1, ip, asr #10
   1240c:	andeq	r2, r1, r4, ror #12
   12410:	andeq	r2, r1, r0, lsr r4
   12414:	strdeq	r2, [r1], -r4
   12418:	andeq	r2, r1, r4, ror #12
   1241c:	andeq	r2, r1, r4, ror #12
   12420:	andeq	r2, r1, r0, asr #8
   12424:	andeq	r2, r1, r4, ror #12
   12428:	andeq	r2, r1, r4, ror #12
   1242c:	andeq	r2, r1, ip, lsr #11
   12430:	movw	r0, #1
   12434:	and	r0, r0, #1
   12438:	strb	r0, [fp, #-1]
   1243c:	b	12b04 <__assert_fail@plt+0x173c>
   12440:	ldr	r0, [fp, #-12]
   12444:	ldr	r0, [r0, #48]	; 0x30
   12448:	cmp	r0, #0
   1244c:	bne	12494 <__assert_fail@plt+0x10cc>
   12450:	ldr	r0, [fp, #-12]
   12454:	ldr	r0, [r0, #16]
   12458:	cmp	r0, #0
   1245c:	bne	12494 <__assert_fail@plt+0x10cc>
   12460:	ldr	r0, [fp, #-12]
   12464:	movw	r1, #1
   12468:	str	r1, [r0, #16]
   1246c:	ldr	r0, [fp, #-8]
   12470:	ldr	r2, [fp, #-12]
   12474:	str	r1, [fp, #-76]	; 0xffffffb4
   12478:	mov	r1, r2
   1247c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12480:	bl	16578 <__assert_fail@plt+0x51b0>
   12484:	movw	r1, #1
   12488:	and	r1, r1, #1
   1248c:	strb	r1, [fp, #-1]
   12490:	b	12b04 <__assert_fail@plt+0x173c>
   12494:	movw	r0, #16777	; 0x4189
   12498:	movt	r0, #3
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	bne	124f0 <__assert_fail@plt+0x1128>
   124a8:	ldr	r0, [fp, #-12]
   124ac:	ldr	r1, [r0, #32]
   124b0:	movw	r0, #12848	; 0x3230
   124b4:	movt	r0, #2
   124b8:	str	r1, [fp, #-80]	; 0xffffffb0
   124bc:	bl	11254 <gettext@plt>
   124c0:	ldr	r1, [fp, #-16]
   124c4:	movw	r2, #4
   124c8:	str	r0, [fp, #-84]	; 0xffffffac
   124cc:	mov	r0, r2
   124d0:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   124d4:	movw	r1, #0
   124d8:	str	r0, [fp, #-88]	; 0xffffffa8
   124dc:	mov	r0, r1
   124e0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   124e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   124e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   124ec:	bl	111e8 <error@plt>
   124f0:	b	1266c <__assert_fail@plt+0x12a4>
   124f4:	movw	r0, #16777	; 0x4189
   124f8:	movt	r0, #3
   124fc:	ldrb	r0, [r0]
   12500:	tst	r0, #1
   12504:	bne	12548 <__assert_fail@plt+0x1180>
   12508:	ldr	r0, [fp, #-12]
   1250c:	ldr	r1, [r0, #32]
   12510:	ldr	r2, [fp, #-16]
   12514:	movw	r0, #0
   12518:	movw	r3, #3
   1251c:	str	r1, [fp, #-92]	; 0xffffffa4
   12520:	mov	r1, r3
   12524:	bl	1bf14 <__assert_fail@plt+0xab4c>
   12528:	movw	r1, #0
   1252c:	str	r0, [sp, #96]	; 0x60
   12530:	mov	r0, r1
   12534:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12538:	movw	r2, #12422	; 0x3086
   1253c:	movt	r2, #2
   12540:	ldr	r3, [sp, #96]	; 0x60
   12544:	bl	111e8 <error@plt>
   12548:	b	1266c <__assert_fail@plt+0x12a4>
   1254c:	movw	r0, #16777	; 0x4189
   12550:	movt	r0, #3
   12554:	ldrb	r0, [r0]
   12558:	tst	r0, #1
   1255c:	bne	125a8 <__assert_fail@plt+0x11e0>
   12560:	ldr	r0, [fp, #-12]
   12564:	ldr	r1, [r0, #32]
   12568:	movw	r0, #12865	; 0x3241
   1256c:	movt	r0, #2
   12570:	str	r1, [sp, #92]	; 0x5c
   12574:	bl	11254 <gettext@plt>
   12578:	ldr	r1, [fp, #-16]
   1257c:	movw	r2, #4
   12580:	str	r0, [sp, #88]	; 0x58
   12584:	mov	r0, r2
   12588:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   1258c:	movw	r1, #0
   12590:	str	r0, [sp, #84]	; 0x54
   12594:	mov	r0, r1
   12598:	ldr	r1, [sp, #92]	; 0x5c
   1259c:	ldr	r2, [sp, #88]	; 0x58
   125a0:	ldr	r3, [sp, #84]	; 0x54
   125a4:	bl	111e8 <error@plt>
   125a8:	b	1266c <__assert_fail@plt+0x12a4>
   125ac:	movw	r0, #16777	; 0x4189
   125b0:	movt	r0, #3
   125b4:	ldrb	r0, [r0]
   125b8:	tst	r0, #1
   125bc:	bne	125f8 <__assert_fail@plt+0x1230>
   125c0:	movw	r0, #12890	; 0x325a
   125c4:	movt	r0, #2
   125c8:	bl	11254 <gettext@plt>
   125cc:	ldr	r1, [fp, #-16]
   125d0:	movw	r2, #4
   125d4:	str	r0, [sp, #80]	; 0x50
   125d8:	mov	r0, r2
   125dc:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   125e0:	movw	r1, #0
   125e4:	str	r0, [sp, #76]	; 0x4c
   125e8:	mov	r0, r1
   125ec:	ldr	r2, [sp, #80]	; 0x50
   125f0:	ldr	r3, [sp, #76]	; 0x4c
   125f4:	bl	111e8 <error@plt>
   125f8:	b	1266c <__assert_fail@plt+0x12a4>
   125fc:	ldr	r0, [fp, #-8]
   12600:	ldr	r1, [fp, #-12]
   12604:	bl	1fa50 <__assert_fail@plt+0xe688>
   12608:	tst	r0, #1
   1260c:	beq	12660 <__assert_fail@plt+0x1298>
   12610:	b	12614 <__assert_fail@plt+0x124c>
   12614:	movw	r0, #12928	; 0x3280
   12618:	movt	r0, #2
   1261c:	bl	11254 <gettext@plt>
   12620:	ldr	r2, [fp, #-16]
   12624:	movw	r1, #0
   12628:	str	r0, [sp, #72]	; 0x48
   1262c:	mov	r0, r1
   12630:	movw	r1, #3
   12634:	bl	1bf14 <__assert_fail@plt+0xab4c>
   12638:	movw	r1, #0
   1263c:	str	r0, [sp, #68]	; 0x44
   12640:	mov	r0, r1
   12644:	ldr	r2, [sp, #72]	; 0x48
   12648:	ldr	r3, [sp, #68]	; 0x44
   1264c:	bl	111e8 <error@plt>
   12650:	movw	r0, #0
   12654:	and	r0, r0, #1
   12658:	strb	r0, [fp, #-1]
   1265c:	b	12b04 <__assert_fail@plt+0x173c>
   12660:	b	12664 <__assert_fail@plt+0x129c>
   12664:	movw	r0, #2
   12668:	str	r0, [fp, #-40]	; 0xffffffd8
   1266c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12670:	cmp	r0, #2
   12674:	bne	12808 <__assert_fail@plt+0x1440>
   12678:	movw	r0, #16808	; 0x41a8
   1267c:	movt	r0, #3
   12680:	ldr	r0, [r0]
   12684:	movw	r1, #0
   12688:	cmp	r0, r1
   1268c:	beq	12808 <__assert_fail@plt+0x1440>
   12690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12694:	ldr	r1, [r0, #96]	; 0x60
   12698:	ldr	r0, [r0, #100]	; 0x64
   1269c:	movw	r2, #16808	; 0x41a8
   126a0:	movt	r2, #3
   126a4:	ldr	r2, [r2]
   126a8:	ldr	r3, [r2]
   126ac:	ldr	r2, [r2, #4]
   126b0:	eor	r0, r0, r2
   126b4:	eor	r1, r1, r3
   126b8:	orr	r0, r1, r0
   126bc:	cmp	r0, #0
   126c0:	bne	12808 <__assert_fail@plt+0x1440>
   126c4:	b	126c8 <__assert_fail@plt+0x1300>
   126c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126cc:	ldr	r1, [r0]
   126d0:	ldr	r0, [r0, #4]
   126d4:	movw	r2, #16808	; 0x41a8
   126d8:	movt	r2, #3
   126dc:	ldr	r2, [r2]
   126e0:	ldr	r3, [r2, #8]
   126e4:	ldr	r2, [r2, #12]
   126e8:	eor	r0, r0, r2
   126ec:	eor	r1, r1, r3
   126f0:	orr	r0, r1, r0
   126f4:	cmp	r0, #0
   126f8:	bne	12808 <__assert_fail@plt+0x1440>
   126fc:	b	12700 <__assert_fail@plt+0x1338>
   12700:	b	12704 <__assert_fail@plt+0x133c>
   12704:	ldr	r0, [fp, #-16]
   12708:	movw	r1, #14995	; 0x3a93
   1270c:	movt	r1, #2
   12710:	bl	11104 <strcmp@plt>
   12714:	cmp	r0, #0
   12718:	bne	12758 <__assert_fail@plt+0x1390>
   1271c:	movw	r0, #13114	; 0x333a
   12720:	movt	r0, #2
   12724:	bl	11254 <gettext@plt>
   12728:	ldr	r1, [fp, #-16]
   1272c:	movw	r2, #4
   12730:	str	r0, [sp, #64]	; 0x40
   12734:	mov	r0, r2
   12738:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   1273c:	movw	r1, #0
   12740:	str	r0, [sp, #60]	; 0x3c
   12744:	mov	r0, r1
   12748:	ldr	r2, [sp, #64]	; 0x40
   1274c:	ldr	r3, [sp, #60]	; 0x3c
   12750:	bl	111e8 <error@plt>
   12754:	b	127b8 <__assert_fail@plt+0x13f0>
   12758:	movw	r0, #13159	; 0x3367
   1275c:	movt	r0, #2
   12760:	bl	11254 <gettext@plt>
   12764:	ldr	r2, [fp, #-16]
   12768:	movw	r1, #0
   1276c:	str	r0, [sp, #56]	; 0x38
   12770:	mov	r0, r1
   12774:	movw	r1, #4
   12778:	bl	1bcec <__assert_fail@plt+0xa924>
   1277c:	movw	r1, #1
   12780:	str	r0, [sp, #52]	; 0x34
   12784:	mov	r0, r1
   12788:	movw	r1, #4
   1278c:	movw	r2, #14995	; 0x3a93
   12790:	movt	r2, #2
   12794:	bl	1bcec <__assert_fail@plt+0xa924>
   12798:	movw	r1, #0
   1279c:	str	r0, [sp, #48]	; 0x30
   127a0:	mov	r0, r1
   127a4:	ldr	r2, [sp, #56]	; 0x38
   127a8:	ldr	r3, [sp, #52]	; 0x34
   127ac:	ldr	ip, [sp, #48]	; 0x30
   127b0:	str	ip, [sp]
   127b4:	bl	111e8 <error@plt>
   127b8:	movw	r0, #13217	; 0x33a1
   127bc:	movt	r0, #2
   127c0:	bl	11254 <gettext@plt>
   127c4:	movw	r1, #0
   127c8:	str	r0, [sp, #44]	; 0x2c
   127cc:	mov	r0, r1
   127d0:	ldr	r2, [sp, #44]	; 0x2c
   127d4:	bl	111e8 <error@plt>
   127d8:	ldr	r0, [fp, #-8]
   127dc:	ldr	r1, [fp, #-12]
   127e0:	movw	r2, #4
   127e4:	bl	16578 <__assert_fail@plt+0x51b0>
   127e8:	ldr	r1, [fp, #-8]
   127ec:	str	r0, [sp, #40]	; 0x28
   127f0:	mov	r0, r1
   127f4:	bl	14654 <__assert_fail@plt+0x328c>
   127f8:	movw	r1, #0
   127fc:	and	r1, r1, #1
   12800:	strb	r1, [fp, #-1]
   12804:	b	12b04 <__assert_fail@plt+0x173c>
   12808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1280c:	cmp	r0, #2
   12810:	bne	12918 <__assert_fail@plt+0x1550>
   12814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12818:	ldr	r0, [r0, #16]
   1281c:	and	r0, r0, #61440	; 0xf000
   12820:	cmp	r0, #40960	; 0xa000
   12824:	beq	12918 <__assert_fail@plt+0x1550>
   12828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1282c:	ldr	r0, [r0, #16]
   12830:	str	r0, [fp, #-36]	; 0xffffffdc
   12834:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12838:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1283c:	and	r1, r1, #61440	; 0xf000
   12840:	cmp	r1, #16384	; 0x4000
   12844:	movw	r1, #0
   12848:	moveq	r1, #1
   1284c:	and	r1, r1, #1
   12850:	cmp	r1, #0
   12854:	movw	r1, #0
   12858:	movne	r1, #1
   1285c:	movw	r2, #16784	; 0x4190
   12860:	movt	r2, #3
   12864:	ldr	r2, [r2]
   12868:	movw	r3, #16780	; 0x418c
   1286c:	movt	r3, #3
   12870:	ldr	r3, [r3]
   12874:	and	r1, r1, #1
   12878:	movw	ip, #0
   1287c:	str	ip, [sp]
   12880:	bl	196c4 <__assert_fail@plt+0x82fc>
   12884:	str	r0, [fp, #-32]	; 0xffffffe0
   12888:	ldr	r0, [fp, #-8]
   1288c:	ldr	r0, [r0, #32]
   12890:	ldr	r1, [fp, #-20]	; 0xffffffec
   12894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12898:	bl	12dac <__assert_fail@plt+0x19e4>
   1289c:	cmp	r0, #0
   128a0:	bne	128b0 <__assert_fail@plt+0x14e8>
   128a4:	movw	r0, #4
   128a8:	str	r0, [fp, #-40]	; 0xffffffd8
   128ac:	b	12914 <__assert_fail@plt+0x154c>
   128b0:	movw	r0, #16777	; 0x4189
   128b4:	movt	r0, #3
   128b8:	ldrb	r0, [r0]
   128bc:	tst	r0, #1
   128c0:	bne	1290c <__assert_fail@plt+0x1544>
   128c4:	bl	11290 <__errno_location@plt>
   128c8:	ldr	r1, [r0]
   128cc:	movw	r0, #13266	; 0x33d2
   128d0:	movt	r0, #2
   128d4:	str	r1, [sp, #36]	; 0x24
   128d8:	bl	11254 <gettext@plt>
   128dc:	ldr	r1, [fp, #-16]
   128e0:	movw	r2, #4
   128e4:	str	r0, [sp, #32]
   128e8:	mov	r0, r2
   128ec:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   128f0:	movw	r1, #0
   128f4:	str	r0, [sp, #28]
   128f8:	mov	r0, r1
   128fc:	ldr	r1, [sp, #36]	; 0x24
   12900:	ldr	r2, [sp, #32]
   12904:	ldr	r3, [sp, #28]
   12908:	bl	111e8 <error@plt>
   1290c:	movw	r0, #1
   12910:	str	r0, [fp, #-40]	; 0xffffffd8
   12914:	b	12918 <__assert_fail@plt+0x1550>
   12918:	movw	r0, #16664	; 0x4118
   1291c:	movt	r0, #3
   12920:	ldr	r0, [r0]
   12924:	cmp	r0, #2
   12928:	beq	12998 <__assert_fail@plt+0x15d0>
   1292c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12930:	cmp	r0, #4
   12934:	bne	12968 <__assert_fail@plt+0x15a0>
   12938:	ldr	r0, [fp, #-8]
   1293c:	ldr	r0, [r0, #32]
   12940:	ldr	r1, [fp, #-20]	; 0xffffffec
   12944:	ldr	r2, [fp, #-16]
   12948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1294c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   12950:	str	ip, [sp]
   12954:	bl	12b14 <__assert_fail@plt+0x174c>
   12958:	tst	r0, #1
   1295c:	bne	12968 <__assert_fail@plt+0x15a0>
   12960:	movw	r0, #3
   12964:	str	r0, [fp, #-40]	; 0xffffffd8
   12968:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1296c:	cmp	r0, #4
   12970:	beq	12988 <__assert_fail@plt+0x15c0>
   12974:	movw	r0, #16664	; 0x4118
   12978:	movt	r0, #3
   1297c:	ldr	r0, [r0]
   12980:	cmp	r0, #0
   12984:	bne	12994 <__assert_fail@plt+0x15cc>
   12988:	ldr	r0, [fp, #-16]
   1298c:	sub	r1, fp, #40	; 0x28
   12990:	bl	12c0c <__assert_fail@plt+0x1844>
   12994:	b	12998 <__assert_fail@plt+0x15d0>
   12998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1299c:	movw	r1, #3
   129a0:	cmp	r1, r0
   129a4:	bhi	12ac4 <__assert_fail@plt+0x16fc>
   129a8:	movw	r0, #16776	; 0x4188
   129ac:	movt	r0, #3
   129b0:	ldrb	r0, [r0]
   129b4:	tst	r0, #1
   129b8:	beq	12ac4 <__assert_fail@plt+0x16fc>
   129bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   129c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129c4:	and	r1, r1, #61440	; 0xf000
   129c8:	cmp	r1, #16384	; 0x4000
   129cc:	movw	r1, #0
   129d0:	moveq	r1, #1
   129d4:	and	r1, r1, #1
   129d8:	cmp	r1, #0
   129dc:	movw	r1, #0
   129e0:	movne	r1, #1
   129e4:	movw	r2, #16780	; 0x418c
   129e8:	movt	r2, #3
   129ec:	ldr	r3, [r2]
   129f0:	and	r1, r1, #1
   129f4:	movw	r2, #0
   129f8:	str	r2, [sp, #24]
   129fc:	ldr	ip, [sp, #24]
   12a00:	str	ip, [sp]
   12a04:	bl	196c4 <__assert_fail@plt+0x82fc>
   12a08:	str	r0, [fp, #-44]	; 0xffffffd4
   12a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a14:	mvn	r2, #0
   12a18:	eor	r1, r1, r2
   12a1c:	and	r0, r0, r1
   12a20:	cmp	r0, #0
   12a24:	beq	12ac0 <__assert_fail@plt+0x16f8>
   12a28:	sub	r1, fp, #56	; 0x38
   12a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a30:	bl	1314c <__assert_fail@plt+0x1d84>
   12a34:	sub	r1, fp, #68	; 0x44
   12a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a3c:	bl	1314c <__assert_fail@plt+0x1d84>
   12a40:	movw	r0, #0
   12a44:	strb	r0, [fp, #-58]	; 0xffffffc6
   12a48:	strb	r0, [fp, #-46]	; 0xffffffd2
   12a4c:	movw	r0, #13293	; 0x33ed
   12a50:	movt	r0, #2
   12a54:	bl	11254 <gettext@plt>
   12a58:	ldr	r2, [fp, #-16]
   12a5c:	movw	r1, #0
   12a60:	str	r0, [sp, #20]
   12a64:	mov	r0, r1
   12a68:	movw	r1, #3
   12a6c:	bl	1bf14 <__assert_fail@plt+0xab4c>
   12a70:	sub	r1, fp, #68	; 0x44
   12a74:	sub	r2, fp, #56	; 0x38
   12a78:	add	r2, r2, #1
   12a7c:	add	r1, r1, #1
   12a80:	movw	r3, #0
   12a84:	str	r0, [sp, #16]
   12a88:	mov	r0, r3
   12a8c:	str	r1, [sp, #12]
   12a90:	mov	r1, r3
   12a94:	ldr	r3, [sp, #20]
   12a98:	str	r2, [sp, #8]
   12a9c:	mov	r2, r3
   12aa0:	ldr	r3, [sp, #16]
   12aa4:	ldr	ip, [sp, #8]
   12aa8:	str	ip, [sp]
   12aac:	ldr	lr, [sp, #12]
   12ab0:	str	lr, [sp, #4]
   12ab4:	bl	111e8 <error@plt>
   12ab8:	movw	r0, #1
   12abc:	str	r0, [fp, #-40]	; 0xffffffd8
   12ac0:	b	12ac4 <__assert_fail@plt+0x16fc>
   12ac4:	movw	r0, #16778	; 0x418a
   12ac8:	movt	r0, #3
   12acc:	ldrb	r0, [r0]
   12ad0:	tst	r0, #1
   12ad4:	bne	12ae8 <__assert_fail@plt+0x1720>
   12ad8:	ldr	r0, [fp, #-8]
   12adc:	ldr	r1, [fp, #-12]
   12ae0:	movw	r2, #4
   12ae4:	bl	16578 <__assert_fail@plt+0x51b0>
   12ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12aec:	movw	r1, #2
   12af0:	cmp	r1, r0
   12af4:	movw	r0, #0
   12af8:	movls	r0, #1
   12afc:	and	r0, r0, #1
   12b00:	strb	r0, [fp, #-1]
   12b04:	ldrb	r0, [fp, #-1]
   12b08:	and	r0, r0, #1
   12b0c:	mov	sp, fp
   12b10:	pop	{fp, pc}
   12b14:	push	{fp, lr}
   12b18:	mov	fp, sp
   12b1c:	sub	sp, sp, #144	; 0x90
   12b20:	ldr	ip, [fp, #8]
   12b24:	str	r0, [fp, #-8]
   12b28:	str	r1, [fp, #-12]
   12b2c:	str	r2, [fp, #-16]
   12b30:	str	r3, [fp, #-20]	; 0xffffffec
   12b34:	ldr	r0, [fp, #8]
   12b38:	and	r0, r0, #3584	; 0xe00
   12b3c:	cmp	r0, #0
   12b40:	beq	12bd4 <__assert_fail@plt+0x180c>
   12b44:	ldr	r0, [fp, #-8]
   12b48:	ldr	r1, [fp, #-12]
   12b4c:	add	r2, sp, #16
   12b50:	movw	r3, #0
   12b54:	bl	22bb0 <__assert_fail@plt+0x117e8>
   12b58:	cmp	r0, #0
   12b5c:	beq	12bcc <__assert_fail@plt+0x1804>
   12b60:	movw	r0, #16777	; 0x4189
   12b64:	movt	r0, #3
   12b68:	ldrb	r0, [r0]
   12b6c:	tst	r0, #1
   12b70:	bne	12bbc <__assert_fail@plt+0x17f4>
   12b74:	bl	11290 <__errno_location@plt>
   12b78:	ldr	r1, [r0]
   12b7c:	movw	r0, #13328	; 0x3410
   12b80:	movt	r0, #2
   12b84:	str	r1, [sp, #12]
   12b88:	bl	11254 <gettext@plt>
   12b8c:	ldr	r1, [fp, #-16]
   12b90:	movw	r2, #4
   12b94:	str	r0, [sp, #8]
   12b98:	mov	r0, r2
   12b9c:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   12ba0:	movw	r1, #0
   12ba4:	str	r0, [sp, #4]
   12ba8:	mov	r0, r1
   12bac:	ldr	r1, [sp, #12]
   12bb0:	ldr	r2, [sp, #8]
   12bb4:	ldr	r3, [sp, #4]
   12bb8:	bl	111e8 <error@plt>
   12bbc:	movw	r0, #0
   12bc0:	and	r0, r0, #1
   12bc4:	strb	r0, [fp, #-1]
   12bc8:	b	12bfc <__assert_fail@plt+0x1834>
   12bcc:	ldr	r0, [sp, #32]
   12bd0:	str	r0, [fp, #8]
   12bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bd8:	ldr	r1, [fp, #8]
   12bdc:	eor	r0, r0, r1
   12be0:	movw	r1, #4095	; 0xfff
   12be4:	and	r0, r0, r1
   12be8:	cmp	r0, #0
   12bec:	movw	r0, #0
   12bf0:	movne	r0, #1
   12bf4:	and	r0, r0, #1
   12bf8:	strb	r0, [fp, #-1]
   12bfc:	ldrb	r0, [fp, #-1]
   12c00:	and	r0, r0, #1
   12c04:	mov	sp, fp
   12c08:	pop	{fp, pc}
   12c0c:	push	{fp, lr}
   12c10:	mov	fp, sp
   12c14:	sub	sp, sp, #72	; 0x48
   12c18:	str	r0, [fp, #-4]
   12c1c:	str	r1, [fp, #-8]
   12c20:	ldr	r1, [fp, #-4]
   12c24:	mov	r0, #4
   12c28:	bl	1bdc0 <__assert_fail@plt+0xa9f8>
   12c2c:	str	r0, [sp, #32]
   12c30:	ldr	r0, [fp, #-8]
   12c34:	ldr	r0, [r0]
   12c38:	cmp	r0, #0
   12c3c:	str	r0, [sp, #20]
   12c40:	beq	12c70 <__assert_fail@plt+0x18a8>
   12c44:	b	12c48 <__assert_fail@plt+0x1880>
   12c48:	ldr	r0, [sp, #20]
   12c4c:	cmp	r0, #2
   12c50:	bne	12c88 <__assert_fail@plt+0x18c0>
   12c54:	b	12c58 <__assert_fail@plt+0x1890>
   12c58:	movw	r0, #13357	; 0x342d
   12c5c:	movt	r0, #2
   12c60:	bl	11254 <gettext@plt>
   12c64:	ldr	r1, [sp, #32]
   12c68:	bl	11110 <printf@plt>
   12c6c:	b	12da4 <__assert_fail@plt+0x19dc>
   12c70:	movw	r0, #13413	; 0x3465
   12c74:	movt	r0, #2
   12c78:	bl	11254 <gettext@plt>
   12c7c:	ldr	r1, [sp, #32]
   12c80:	bl	11110 <printf@plt>
   12c84:	b	12da4 <__assert_fail@plt+0x19dc>
   12c88:	b	12c8c <__assert_fail@plt+0x18c4>
   12c8c:	ldr	r0, [fp, #-8]
   12c90:	ldr	r0, [r0, #4]
   12c94:	bfc	r0, #12, #20
   12c98:	str	r0, [sp, #28]
   12c9c:	ldr	r0, [fp, #-8]
   12ca0:	ldr	r0, [r0, #8]
   12ca4:	bfc	r0, #12, #20
   12ca8:	str	r0, [sp, #24]
   12cac:	ldr	r0, [fp, #-8]
   12cb0:	ldr	r0, [r0, #8]
   12cb4:	sub	r1, fp, #20
   12cb8:	bl	1314c <__assert_fail@plt+0x1d84>
   12cbc:	mov	r0, #0
   12cc0:	strb	r0, [fp, #-10]
   12cc4:	ldr	r1, [fp, #-8]
   12cc8:	ldr	r1, [r1, #4]
   12ccc:	sub	r2, fp, #32
   12cd0:	str	r0, [sp, #16]
   12cd4:	mov	r0, r1
   12cd8:	mov	r1, r2
   12cdc:	bl	1314c <__assert_fail@plt+0x1d84>
   12ce0:	ldr	r0, [sp, #16]
   12ce4:	strb	r0, [fp, #-22]	; 0xffffffea
   12ce8:	ldr	r1, [fp, #-8]
   12cec:	ldr	r1, [r1]
   12cf0:	cmp	r1, #1
   12cf4:	str	r1, [sp, #12]
   12cf8:	beq	12d34 <__assert_fail@plt+0x196c>
   12cfc:	b	12d00 <__assert_fail@plt+0x1938>
   12d00:	ldr	r0, [sp, #12]
   12d04:	cmp	r0, #3
   12d08:	beq	12d48 <__assert_fail@plt+0x1980>
   12d0c:	b	12d10 <__assert_fail@plt+0x1948>
   12d10:	ldr	r0, [sp, #12]
   12d14:	cmp	r0, #4
   12d18:	bne	12d74 <__assert_fail@plt+0x19ac>
   12d1c:	b	12d20 <__assert_fail@plt+0x1958>
   12d20:	movw	r0, #13439	; 0x347f
   12d24:	movt	r0, #2
   12d28:	bl	11254 <gettext@plt>
   12d2c:	str	r0, [sp, #36]	; 0x24
   12d30:	b	12d78 <__assert_fail@plt+0x19b0>
   12d34:	movw	r0, #13489	; 0x34b1
   12d38:	movt	r0, #2
   12d3c:	bl	11254 <gettext@plt>
   12d40:	str	r0, [sp, #36]	; 0x24
   12d44:	b	12d78 <__assert_fail@plt+0x19b0>
   12d48:	movw	r0, #13548	; 0x34ec
   12d4c:	movt	r0, #2
   12d50:	bl	11254 <gettext@plt>
   12d54:	str	r0, [sp, #36]	; 0x24
   12d58:	ldr	r0, [sp, #36]	; 0x24
   12d5c:	ldr	r1, [sp, #32]
   12d60:	ldr	r2, [sp, #24]
   12d64:	sub	r3, fp, #20
   12d68:	add	r3, r3, #1
   12d6c:	bl	11110 <printf@plt>
   12d70:	b	12da4 <__assert_fail@plt+0x19dc>
   12d74:	bl	11398 <abort@plt>
   12d78:	ldr	r0, [sp, #36]	; 0x24
   12d7c:	ldr	r1, [sp, #32]
   12d80:	ldr	r2, [sp, #28]
   12d84:	sub	r3, fp, #32
   12d88:	add	r3, r3, #1
   12d8c:	ldr	ip, [sp, #24]
   12d90:	sub	lr, fp, #20
   12d94:	add	lr, lr, #1
   12d98:	str	ip, [sp]
   12d9c:	str	lr, [sp, #4]
   12da0:	bl	11110 <printf@plt>
   12da4:	mov	sp, fp
   12da8:	pop	{fp, pc}
   12dac:	push	{fp, lr}
   12db0:	mov	fp, sp
   12db4:	sub	sp, sp, #16
   12db8:	str	r0, [fp, #-4]
   12dbc:	str	r1, [sp, #8]
   12dc0:	str	r2, [sp, #4]
   12dc4:	ldr	r0, [fp, #-4]
   12dc8:	ldr	r1, [sp, #8]
   12dcc:	ldr	r2, [sp, #4]
   12dd0:	movw	r3, #0
   12dd4:	bl	12f7c <__assert_fail@plt+0x1bb4>
   12dd8:	mov	sp, fp
   12ddc:	pop	{fp, pc}
   12de0:	push	{fp, lr}
   12de4:	mov	fp, sp
   12de8:	sub	sp, sp, #16
   12dec:	str	r0, [fp, #-4]
   12df0:	str	r1, [sp, #8]
   12df4:	str	r2, [sp, #4]
   12df8:	ldr	r0, [fp, #-4]
   12dfc:	ldr	r1, [sp, #8]
   12e00:	ldr	r2, [sp, #4]
   12e04:	movw	r3, #256	; 0x100
   12e08:	bl	12f7c <__assert_fail@plt+0x1bb4>
   12e0c:	mov	sp, fp
   12e10:	pop	{fp, pc}
   12e14:	sub	sp, sp, #4
   12e18:	str	r0, [sp]
   12e1c:	ldr	r0, [sp]
   12e20:	movw	r1, #16812	; 0x41ac
   12e24:	movt	r1, #3
   12e28:	str	r0, [r1]
   12e2c:	add	sp, sp, #4
   12e30:	bx	lr
   12e34:	sub	sp, sp, #4
   12e38:	and	r0, r0, #1
   12e3c:	strb	r0, [sp, #3]
   12e40:	ldrb	r0, [sp, #3]
   12e44:	and	r0, r0, #1
   12e48:	movw	r1, #16816	; 0x41b0
   12e4c:	movt	r1, #3
   12e50:	strb	r0, [r1]
   12e54:	add	sp, sp, #4
   12e58:	bx	lr
   12e5c:	push	{fp, lr}
   12e60:	mov	fp, sp
   12e64:	sub	sp, sp, #24
   12e68:	movw	r0, #16764	; 0x417c
   12e6c:	movt	r0, #3
   12e70:	ldr	r0, [r0]
   12e74:	bl	2003c <__assert_fail@plt+0xec74>
   12e78:	cmp	r0, #0
   12e7c:	beq	12f4c <__assert_fail@plt+0x1b84>
   12e80:	movw	r0, #16816	; 0x41b0
   12e84:	movt	r0, #3
   12e88:	ldrb	r0, [r0]
   12e8c:	tst	r0, #1
   12e90:	beq	12ea4 <__assert_fail@plt+0x1adc>
   12e94:	bl	11290 <__errno_location@plt>
   12e98:	ldr	r0, [r0]
   12e9c:	cmp	r0, #32
   12ea0:	beq	12f4c <__assert_fail@plt+0x1b84>
   12ea4:	movw	r0, #13831	; 0x3607
   12ea8:	movt	r0, #2
   12eac:	bl	11254 <gettext@plt>
   12eb0:	str	r0, [fp, #-4]
   12eb4:	movw	r0, #16812	; 0x41ac
   12eb8:	movt	r0, #3
   12ebc:	ldr	r0, [r0]
   12ec0:	movw	r1, #0
   12ec4:	cmp	r0, r1
   12ec8:	beq	12f20 <__assert_fail@plt+0x1b58>
   12ecc:	bl	11290 <__errno_location@plt>
   12ed0:	ldr	r1, [r0]
   12ed4:	movw	r0, #16812	; 0x41ac
   12ed8:	movt	r0, #3
   12edc:	ldr	r0, [r0]
   12ee0:	str	r1, [fp, #-8]
   12ee4:	bl	1bebc <__assert_fail@plt+0xaaf4>
   12ee8:	ldr	r1, [fp, #-4]
   12eec:	movw	r2, #0
   12ef0:	str	r0, [sp, #12]
   12ef4:	mov	r0, r2
   12ef8:	ldr	r2, [fp, #-8]
   12efc:	str	r1, [sp, #8]
   12f00:	mov	r1, r2
   12f04:	movw	r2, #13843	; 0x3613
   12f08:	movt	r2, #2
   12f0c:	ldr	r3, [sp, #12]
   12f10:	ldr	ip, [sp, #8]
   12f14:	str	ip, [sp]
   12f18:	bl	111e8 <error@plt>
   12f1c:	b	12f3c <__assert_fail@plt+0x1b74>
   12f20:	bl	11290 <__errno_location@plt>
   12f24:	ldr	r1, [r0]
   12f28:	ldr	r3, [fp, #-4]
   12f2c:	movw	r0, #0
   12f30:	movw	r2, #12422	; 0x3086
   12f34:	movt	r2, #2
   12f38:	bl	111e8 <error@plt>
   12f3c:	movw	r0, #16672	; 0x4120
   12f40:	movt	r0, #3
   12f44:	ldr	r0, [r0]
   12f48:	bl	11140 <_exit@plt>
   12f4c:	movw	r0, #16760	; 0x4178
   12f50:	movt	r0, #3
   12f54:	ldr	r0, [r0]
   12f58:	bl	2003c <__assert_fail@plt+0xec74>
   12f5c:	cmp	r0, #0
   12f60:	beq	12f74 <__assert_fail@plt+0x1bac>
   12f64:	movw	r0, #16672	; 0x4120
   12f68:	movt	r0, #3
   12f6c:	ldr	r0, [r0]
   12f70:	bl	11140 <_exit@plt>
   12f74:	mov	sp, fp
   12f78:	pop	{fp, pc}
   12f7c:	push	{fp, lr}
   12f80:	mov	fp, sp
   12f84:	sub	sp, sp, #192	; 0xc0
   12f88:	str	r0, [fp, #-8]
   12f8c:	str	r1, [fp, #-12]
   12f90:	str	r2, [fp, #-16]
   12f94:	str	r3, [fp, #-20]	; 0xffffffec
   12f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f9c:	cmp	r0, #256	; 0x100
   12fa0:	bne	130ec <__assert_fail@plt+0x1d24>
   12fa4:	ldr	r2, [pc, #356]	; 13110 <__assert_fail@plt+0x1d48>
   12fa8:	ldr	r0, [fp, #-8]
   12fac:	ldr	r1, [fp, #-12]
   12fb0:	bl	1126c <openat64@plt>
   12fb4:	str	r0, [sp, #60]	; 0x3c
   12fb8:	ldr	r0, [sp, #60]	; 0x3c
   12fbc:	cmp	r0, #0
   12fc0:	bge	12fd0 <__assert_fail@plt+0x1c08>
   12fc4:	ldr	r0, [sp, #60]	; 0x3c
   12fc8:	str	r0, [fp, #-4]
   12fcc:	b	13104 <__assert_fail@plt+0x1d3c>
   12fd0:	ldr	r0, [sp, #60]	; 0x3c
   12fd4:	movw	r1, #11514	; 0x2cfa
   12fd8:	movt	r1, #2
   12fdc:	add	r2, sp, #64	; 0x40
   12fe0:	movw	r3, #4096	; 0x1000
   12fe4:	bl	22bb0 <__assert_fail@plt+0x117e8>
   12fe8:	cmp	r0, #0
   12fec:	beq	13028 <__assert_fail@plt+0x1c60>
   12ff0:	bl	11290 <__errno_location@plt>
   12ff4:	ldr	r0, [r0]
   12ff8:	str	r0, [sp, #56]	; 0x38
   12ffc:	ldr	r0, [sp, #60]	; 0x3c
   13000:	bl	113a4 <close@plt>
   13004:	ldr	r1, [sp, #56]	; 0x38
   13008:	str	r0, [sp, #16]
   1300c:	str	r1, [sp, #12]
   13010:	bl	11290 <__errno_location@plt>
   13014:	ldr	r1, [sp, #12]
   13018:	str	r1, [r0]
   1301c:	mvn	r0, #0
   13020:	str	r0, [fp, #-4]
   13024:	b	13104 <__assert_fail@plt+0x1d3c>
   13028:	ldr	r0, [sp, #80]	; 0x50
   1302c:	and	r0, r0, #61440	; 0xf000
   13030:	cmp	r0, #40960	; 0xa000
   13034:	bne	1305c <__assert_fail@plt+0x1c94>
   13038:	ldr	r0, [sp, #60]	; 0x3c
   1303c:	bl	113a4 <close@plt>
   13040:	str	r0, [sp, #8]
   13044:	bl	11290 <__errno_location@plt>
   13048:	movw	r1, #95	; 0x5f
   1304c:	str	r1, [r0]
   13050:	mvn	r0, #0
   13054:	str	r0, [fp, #-4]
   13058:	b	13104 <__assert_fail@plt+0x1d3c>
   1305c:	add	r0, sp, #30
   13060:	ldr	r2, [sp, #60]	; 0x3c
   13064:	movw	r1, #13850	; 0x361a
   13068:	movt	r1, #2
   1306c:	bl	11308 <sprintf@plt>
   13070:	add	r1, sp, #30
   13074:	ldr	r2, [fp, #-16]
   13078:	str	r0, [sp, #4]
   1307c:	mov	r0, r1
   13080:	mov	r1, r2
   13084:	bl	11368 <chmod@plt>
   13088:	str	r0, [sp, #24]
   1308c:	bl	11290 <__errno_location@plt>
   13090:	ldr	r0, [r0]
   13094:	str	r0, [sp, #20]
   13098:	ldr	r0, [sp, #60]	; 0x3c
   1309c:	bl	113a4 <close@plt>
   130a0:	ldr	r1, [sp, #24]
   130a4:	cmp	r1, #0
   130a8:	bne	130b8 <__assert_fail@plt+0x1cf0>
   130ac:	ldr	r0, [sp, #24]
   130b0:	str	r0, [fp, #-4]
   130b4:	b	13104 <__assert_fail@plt+0x1d3c>
   130b8:	ldr	r0, [sp, #20]
   130bc:	cmp	r0, #2
   130c0:	beq	130e4 <__assert_fail@plt+0x1d1c>
   130c4:	ldr	r0, [sp, #20]
   130c8:	str	r0, [sp]
   130cc:	bl	11290 <__errno_location@plt>
   130d0:	ldr	r1, [sp]
   130d4:	str	r1, [r0]
   130d8:	ldr	r0, [sp, #24]
   130dc:	str	r0, [fp, #-4]
   130e0:	b	13104 <__assert_fail@plt+0x1d3c>
   130e4:	movw	r0, #0
   130e8:	str	r0, [fp, #-20]	; 0xffffffec
   130ec:	ldr	r0, [fp, #-8]
   130f0:	ldr	r1, [fp, #-12]
   130f4:	ldr	r2, [fp, #-16]
   130f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   130fc:	bl	13114 <__assert_fail@plt+0x1d4c>
   13100:	str	r0, [fp, #-4]
   13104:	ldr	r0, [fp, #-4]
   13108:	mov	sp, fp
   1310c:	pop	{fp, pc}
   13110:	eoreq	r8, r8, r0
   13114:	push	{fp, lr}
   13118:	mov	fp, sp
   1311c:	sub	sp, sp, #16
   13120:	str	r0, [fp, #-4]
   13124:	str	r1, [sp, #8]
   13128:	str	r2, [sp, #4]
   1312c:	str	r3, [sp]
   13130:	ldr	r0, [fp, #-4]
   13134:	ldr	r1, [sp, #8]
   13138:	ldr	r2, [sp, #4]
   1313c:	ldr	r3, [sp]
   13140:	bl	11284 <fchmodat@plt>
   13144:	mov	sp, fp
   13148:	pop	{fp, pc}
   1314c:	push	{fp, lr}
   13150:	mov	fp, sp
   13154:	sub	sp, sp, #24
   13158:	str	r0, [fp, #-4]
   1315c:	str	r1, [fp, #-8]
   13160:	ldr	r0, [fp, #-4]
   13164:	bl	133b8 <__assert_fail@plt+0x1ff0>
   13168:	ldr	r1, [fp, #-8]
   1316c:	strb	r0, [r1]
   13170:	ldr	r0, [fp, #-4]
   13174:	and	r0, r0, #256	; 0x100
   13178:	cmp	r0, #0
   1317c:	movw	r0, #0
   13180:	movne	r0, #1
   13184:	tst	r0, #1
   13188:	movw	r0, #114	; 0x72
   1318c:	moveq	r0, #45	; 0x2d
   13190:	ldr	r1, [fp, #-8]
   13194:	strb	r0, [r1, #1]
   13198:	ldr	r0, [fp, #-4]
   1319c:	and	r0, r0, #128	; 0x80
   131a0:	cmp	r0, #0
   131a4:	movw	r0, #0
   131a8:	movne	r0, #1
   131ac:	tst	r0, #1
   131b0:	movw	r0, #119	; 0x77
   131b4:	moveq	r0, #45	; 0x2d
   131b8:	ldr	r1, [fp, #-8]
   131bc:	strb	r0, [r1, #2]
   131c0:	ldr	r0, [fp, #-4]
   131c4:	and	r0, r0, #2048	; 0x800
   131c8:	cmp	r0, #0
   131cc:	beq	131f8 <__assert_fail@plt+0x1e30>
   131d0:	ldr	r0, [fp, #-4]
   131d4:	and	r0, r0, #64	; 0x40
   131d8:	cmp	r0, #0
   131dc:	movw	r0, #0
   131e0:	movne	r0, #1
   131e4:	tst	r0, #1
   131e8:	movw	r0, #115	; 0x73
   131ec:	moveq	r0, #83	; 0x53
   131f0:	str	r0, [sp, #12]
   131f4:	b	1321c <__assert_fail@plt+0x1e54>
   131f8:	ldr	r0, [fp, #-4]
   131fc:	and	r0, r0, #64	; 0x40
   13200:	cmp	r0, #0
   13204:	movw	r0, #0
   13208:	movne	r0, #1
   1320c:	tst	r0, #1
   13210:	movw	r0, #120	; 0x78
   13214:	moveq	r0, #45	; 0x2d
   13218:	str	r0, [sp, #12]
   1321c:	ldr	r0, [sp, #12]
   13220:	ldr	r1, [fp, #-8]
   13224:	strb	r0, [r1, #3]
   13228:	ldr	r0, [fp, #-4]
   1322c:	and	r0, r0, #32
   13230:	cmp	r0, #0
   13234:	movw	r0, #0
   13238:	movne	r0, #1
   1323c:	tst	r0, #1
   13240:	movw	r0, #114	; 0x72
   13244:	moveq	r0, #45	; 0x2d
   13248:	ldr	r1, [fp, #-8]
   1324c:	strb	r0, [r1, #4]
   13250:	ldr	r0, [fp, #-4]
   13254:	and	r0, r0, #16
   13258:	cmp	r0, #0
   1325c:	movw	r0, #0
   13260:	movne	r0, #1
   13264:	tst	r0, #1
   13268:	movw	r0, #119	; 0x77
   1326c:	moveq	r0, #45	; 0x2d
   13270:	ldr	r1, [fp, #-8]
   13274:	strb	r0, [r1, #5]
   13278:	ldr	r0, [fp, #-4]
   1327c:	and	r0, r0, #1024	; 0x400
   13280:	cmp	r0, #0
   13284:	beq	132b0 <__assert_fail@plt+0x1ee8>
   13288:	ldr	r0, [fp, #-4]
   1328c:	and	r0, r0, #8
   13290:	cmp	r0, #0
   13294:	movw	r0, #0
   13298:	movne	r0, #1
   1329c:	tst	r0, #1
   132a0:	movw	r0, #115	; 0x73
   132a4:	moveq	r0, #83	; 0x53
   132a8:	str	r0, [sp, #8]
   132ac:	b	132d4 <__assert_fail@plt+0x1f0c>
   132b0:	ldr	r0, [fp, #-4]
   132b4:	and	r0, r0, #8
   132b8:	cmp	r0, #0
   132bc:	movw	r0, #0
   132c0:	movne	r0, #1
   132c4:	tst	r0, #1
   132c8:	movw	r0, #120	; 0x78
   132cc:	moveq	r0, #45	; 0x2d
   132d0:	str	r0, [sp, #8]
   132d4:	ldr	r0, [sp, #8]
   132d8:	ldr	r1, [fp, #-8]
   132dc:	strb	r0, [r1, #6]
   132e0:	ldr	r0, [fp, #-4]
   132e4:	and	r0, r0, #4
   132e8:	cmp	r0, #0
   132ec:	movw	r0, #0
   132f0:	movne	r0, #1
   132f4:	tst	r0, #1
   132f8:	movw	r0, #114	; 0x72
   132fc:	moveq	r0, #45	; 0x2d
   13300:	ldr	r1, [fp, #-8]
   13304:	strb	r0, [r1, #7]
   13308:	ldr	r0, [fp, #-4]
   1330c:	and	r0, r0, #2
   13310:	cmp	r0, #0
   13314:	movw	r0, #0
   13318:	movne	r0, #1
   1331c:	tst	r0, #1
   13320:	movw	r0, #119	; 0x77
   13324:	moveq	r0, #45	; 0x2d
   13328:	ldr	r1, [fp, #-8]
   1332c:	strb	r0, [r1, #8]
   13330:	ldr	r0, [fp, #-4]
   13334:	and	r0, r0, #512	; 0x200
   13338:	cmp	r0, #0
   1333c:	beq	13368 <__assert_fail@plt+0x1fa0>
   13340:	ldr	r0, [fp, #-4]
   13344:	and	r0, r0, #1
   13348:	cmp	r0, #0
   1334c:	movw	r0, #0
   13350:	movne	r0, #1
   13354:	tst	r0, #1
   13358:	movw	r0, #116	; 0x74
   1335c:	moveq	r0, #84	; 0x54
   13360:	str	r0, [sp, #4]
   13364:	b	1338c <__assert_fail@plt+0x1fc4>
   13368:	ldr	r0, [fp, #-4]
   1336c:	and	r0, r0, #1
   13370:	cmp	r0, #0
   13374:	movw	r0, #0
   13378:	movne	r0, #1
   1337c:	tst	r0, #1
   13380:	movw	r0, #120	; 0x78
   13384:	moveq	r0, #45	; 0x2d
   13388:	str	r0, [sp, #4]
   1338c:	ldr	r0, [sp, #4]
   13390:	ldr	r1, [fp, #-8]
   13394:	strb	r0, [r1, #9]
   13398:	ldr	r0, [fp, #-8]
   1339c:	movw	r1, #32
   133a0:	strb	r1, [r0, #10]
   133a4:	ldr	r0, [fp, #-8]
   133a8:	movw	r1, #0
   133ac:	strb	r1, [r0, #11]
   133b0:	mov	sp, fp
   133b4:	pop	{fp, pc}
   133b8:	sub	sp, sp, #8
   133bc:	str	r0, [sp]
   133c0:	ldr	r0, [sp]
   133c4:	and	r0, r0, #61440	; 0xf000
   133c8:	cmp	r0, #32768	; 0x8000
   133cc:	bne	133dc <__assert_fail@plt+0x2014>
   133d0:	movw	r0, #45	; 0x2d
   133d4:	strb	r0, [sp, #7]
   133d8:	b	1348c <__assert_fail@plt+0x20c4>
   133dc:	ldr	r0, [sp]
   133e0:	and	r0, r0, #61440	; 0xf000
   133e4:	cmp	r0, #16384	; 0x4000
   133e8:	bne	133f8 <__assert_fail@plt+0x2030>
   133ec:	movw	r0, #100	; 0x64
   133f0:	strb	r0, [sp, #7]
   133f4:	b	1348c <__assert_fail@plt+0x20c4>
   133f8:	ldr	r0, [sp]
   133fc:	and	r0, r0, #61440	; 0xf000
   13400:	cmp	r0, #24576	; 0x6000
   13404:	bne	13414 <__assert_fail@plt+0x204c>
   13408:	movw	r0, #98	; 0x62
   1340c:	strb	r0, [sp, #7]
   13410:	b	1348c <__assert_fail@plt+0x20c4>
   13414:	ldr	r0, [sp]
   13418:	and	r0, r0, #61440	; 0xf000
   1341c:	cmp	r0, #8192	; 0x2000
   13420:	bne	13430 <__assert_fail@plt+0x2068>
   13424:	movw	r0, #99	; 0x63
   13428:	strb	r0, [sp, #7]
   1342c:	b	1348c <__assert_fail@plt+0x20c4>
   13430:	ldr	r0, [sp]
   13434:	and	r0, r0, #61440	; 0xf000
   13438:	cmp	r0, #40960	; 0xa000
   1343c:	bne	1344c <__assert_fail@plt+0x2084>
   13440:	movw	r0, #108	; 0x6c
   13444:	strb	r0, [sp, #7]
   13448:	b	1348c <__assert_fail@plt+0x20c4>
   1344c:	ldr	r0, [sp]
   13450:	and	r0, r0, #61440	; 0xf000
   13454:	cmp	r0, #4096	; 0x1000
   13458:	bne	13468 <__assert_fail@plt+0x20a0>
   1345c:	movw	r0, #112	; 0x70
   13460:	strb	r0, [sp, #7]
   13464:	b	1348c <__assert_fail@plt+0x20c4>
   13468:	ldr	r0, [sp]
   1346c:	and	r0, r0, #61440	; 0xf000
   13470:	cmp	r0, #49152	; 0xc000
   13474:	bne	13484 <__assert_fail@plt+0x20bc>
   13478:	movw	r0, #115	; 0x73
   1347c:	strb	r0, [sp, #7]
   13480:	b	1348c <__assert_fail@plt+0x20c4>
   13484:	movw	r0, #63	; 0x3f
   13488:	strb	r0, [sp, #7]
   1348c:	ldrb	r0, [sp, #7]
   13490:	add	sp, sp, #8
   13494:	bx	lr
   13498:	push	{fp, lr}
   1349c:	mov	fp, sp
   134a0:	sub	sp, sp, #8
   134a4:	str	r0, [sp, #4]
   134a8:	str	r1, [sp]
   134ac:	ldr	r0, [sp, #4]
   134b0:	ldr	r0, [r0, #16]
   134b4:	ldr	r1, [sp]
   134b8:	bl	1314c <__assert_fail@plt+0x1d84>
   134bc:	ldr	r0, [sp, #4]
   134c0:	ldr	r0, [r0, #16]
   134c4:	ldr	r1, [sp, #4]
   134c8:	ldr	r1, [r1, #16]
   134cc:	sub	r0, r0, r1
   134d0:	cmp	r0, #0
   134d4:	beq	134e8 <__assert_fail@plt+0x2120>
   134d8:	ldr	r0, [sp]
   134dc:	movw	r1, #70	; 0x46
   134e0:	strb	r1, [r0]
   134e4:	b	1354c <__assert_fail@plt+0x2184>
   134e8:	ldr	r0, [sp, #4]
   134ec:	ldr	r0, [r0, #16]
   134f0:	ldr	r1, [sp, #4]
   134f4:	ldr	r1, [r1, #16]
   134f8:	sub	r0, r0, r1
   134fc:	cmp	r0, #0
   13500:	beq	13514 <__assert_fail@plt+0x214c>
   13504:	ldr	r0, [sp]
   13508:	movw	r1, #81	; 0x51
   1350c:	strb	r1, [r0]
   13510:	b	13548 <__assert_fail@plt+0x2180>
   13514:	ldr	r0, [sp, #4]
   13518:	ldr	r0, [r0, #16]
   1351c:	ldr	r1, [sp, #4]
   13520:	ldr	r1, [r1, #16]
   13524:	sub	r0, r0, r1
   13528:	cmp	r0, #0
   1352c:	beq	13540 <__assert_fail@plt+0x2178>
   13530:	ldr	r0, [sp]
   13534:	movw	r1, #83	; 0x53
   13538:	strb	r1, [r0]
   1353c:	b	13544 <__assert_fail@plt+0x217c>
   13540:	b	13544 <__assert_fail@plt+0x217c>
   13544:	b	13548 <__assert_fail@plt+0x2180>
   13548:	b	1354c <__assert_fail@plt+0x2184>
   1354c:	mov	sp, fp
   13550:	pop	{fp, pc}
   13554:	push	{fp, lr}
   13558:	mov	fp, sp
   1355c:	sub	sp, sp, #80	; 0x50
   13560:	ldr	r3, [pc, #1452]	; 13b14 <__assert_fail@plt+0x274c>
   13564:	str	r0, [fp, #-8]
   13568:	str	r1, [fp, #-12]
   1356c:	str	r2, [fp, #-16]
   13570:	movw	r0, #0
   13574:	str	r0, [fp, #-36]	; 0xffffffdc
   13578:	str	r0, [sp, #40]	; 0x28
   1357c:	ldr	r0, [fp, #-12]
   13580:	and	r0, r0, r3
   13584:	cmp	r0, #0
   13588:	beq	135a4 <__assert_fail@plt+0x21dc>
   1358c:	bl	11290 <__errno_location@plt>
   13590:	movw	r1, #22
   13594:	str	r1, [r0]
   13598:	movw	r0, #0
   1359c:	str	r0, [fp, #-4]
   135a0:	b	13b08 <__assert_fail@plt+0x2740>
   135a4:	ldr	r0, [fp, #-12]
   135a8:	and	r0, r0, #4
   135ac:	cmp	r0, #0
   135b0:	beq	135dc <__assert_fail@plt+0x2214>
   135b4:	ldr	r0, [fp, #-12]
   135b8:	and	r0, r0, #512	; 0x200
   135bc:	cmp	r0, #0
   135c0:	beq	135dc <__assert_fail@plt+0x2214>
   135c4:	bl	11290 <__errno_location@plt>
   135c8:	movw	r1, #22
   135cc:	str	r1, [r0]
   135d0:	movw	r0, #0
   135d4:	str	r0, [fp, #-4]
   135d8:	b	13b08 <__assert_fail@plt+0x2740>
   135dc:	ldr	r0, [fp, #-12]
   135e0:	and	r0, r0, #18
   135e4:	cmp	r0, #0
   135e8:	bne	13604 <__assert_fail@plt+0x223c>
   135ec:	bl	11290 <__errno_location@plt>
   135f0:	movw	r1, #22
   135f4:	str	r1, [r0]
   135f8:	movw	r0, #0
   135fc:	str	r0, [fp, #-4]
   13600:	b	13b08 <__assert_fail@plt+0x2740>
   13604:	movw	r0, #1
   13608:	movw	r1, #96	; 0x60
   1360c:	bl	1faf4 <__assert_fail@plt+0xe72c>
   13610:	str	r0, [fp, #-20]	; 0xffffffec
   13614:	ldr	r0, [fp, #-20]	; 0xffffffec
   13618:	movw	r1, #0
   1361c:	cmp	r0, r1
   13620:	bne	13630 <__assert_fail@plt+0x2268>
   13624:	movw	r0, #0
   13628:	str	r0, [fp, #-4]
   1362c:	b	13b08 <__assert_fail@plt+0x2740>
   13630:	ldr	r0, [fp, #-16]
   13634:	ldr	r1, [fp, #-20]	; 0xffffffec
   13638:	str	r0, [r1, #44]	; 0x2c
   1363c:	ldr	r0, [fp, #-12]
   13640:	ldr	r1, [fp, #-20]	; 0xffffffec
   13644:	str	r0, [r1, #48]	; 0x30
   13648:	ldr	r0, [fp, #-20]	; 0xffffffec
   1364c:	ldr	r0, [r0, #48]	; 0x30
   13650:	and	r0, r0, #2
   13654:	cmp	r0, #0
   13658:	beq	13680 <__assert_fail@plt+0x22b8>
   1365c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13660:	ldr	r1, [r0, #48]	; 0x30
   13664:	orr	r1, r1, #4
   13668:	str	r1, [r0, #48]	; 0x30
   1366c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13670:	ldr	r1, [r0, #48]	; 0x30
   13674:	mvn	r2, #512	; 0x200
   13678:	and	r1, r1, r2
   1367c:	str	r1, [r0, #48]	; 0x30
   13680:	ldr	r0, [fp, #-20]	; 0xffffffec
   13684:	mvn	r1, #99	; 0x63
   13688:	str	r1, [r0, #32]
   1368c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13690:	ldr	r0, [r0, #48]	; 0x30
   13694:	and	r0, r0, #512	; 0x200
   13698:	cmp	r0, #0
   1369c:	beq	136d4 <__assert_fail@plt+0x230c>
   136a0:	b	136d4 <__assert_fail@plt+0x230c>
   136a4:	ldr	r1, [pc, #1132]	; 13b18 <__assert_fail@plt+0x2750>
   136a8:	movw	r0, #13868	; 0x362c
   136ac:	movt	r0, #2
   136b0:	bl	207c8 <__assert_fail@plt+0xf400>
   136b4:	str	r0, [sp, #32]
   136b8:	ldr	r0, [sp, #32]
   136bc:	cmp	r0, #0
   136c0:	bge	136c8 <__assert_fail@plt+0x2300>
   136c4:	b	136d0 <__assert_fail@plt+0x2308>
   136c8:	ldr	r0, [sp, #32]
   136cc:	bl	113a4 <close@plt>
   136d0:	b	136d4 <__assert_fail@plt+0x230c>
   136d4:	ldr	r0, [fp, #-8]
   136d8:	bl	13b1c <__assert_fail@plt+0x2754>
   136dc:	str	r0, [sp, #28]
   136e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   136e4:	ldr	r1, [sp, #28]
   136e8:	cmp	r1, #4096	; 0x1000
   136ec:	str	r0, [sp, #16]
   136f0:	bls	13700 <__assert_fail@plt+0x2338>
   136f4:	ldr	r0, [sp, #28]
   136f8:	str	r0, [sp, #12]
   136fc:	b	1370c <__assert_fail@plt+0x2344>
   13700:	movw	r0, #4096	; 0x1000
   13704:	str	r0, [sp, #12]
   13708:	b	1370c <__assert_fail@plt+0x2344>
   1370c:	ldr	r0, [sp, #12]
   13710:	ldr	r1, [sp, #16]
   13714:	str	r0, [sp, #8]
   13718:	mov	r0, r1
   1371c:	ldr	r1, [sp, #8]
   13720:	bl	13b90 <__assert_fail@plt+0x27c8>
   13724:	tst	r0, #1
   13728:	bne	13730 <__assert_fail@plt+0x2368>
   1372c:	b	13af8 <__assert_fail@plt+0x2730>
   13730:	ldr	r0, [fp, #-8]
   13734:	ldr	r0, [r0]
   13738:	movw	r1, #0
   1373c:	cmp	r0, r1
   13740:	beq	13778 <__assert_fail@plt+0x23b0>
   13744:	ldr	r0, [fp, #-20]	; 0xffffffec
   13748:	movw	r1, #11514	; 0x2cfa
   1374c:	movt	r1, #2
   13750:	movw	r2, #0
   13754:	bl	13c88 <__assert_fail@plt+0x28c0>
   13758:	str	r0, [fp, #-36]	; 0xffffffdc
   1375c:	movw	r1, #0
   13760:	cmp	r0, r1
   13764:	bne	1376c <__assert_fail@plt+0x23a4>
   13768:	b	13aec <__assert_fail@plt+0x2724>
   1376c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13770:	mvn	r1, #0
   13774:	str	r1, [r0, #48]	; 0x30
   13778:	ldr	r0, [fp, #-16]
   1377c:	movw	r1, #0
   13780:	cmp	r0, r1
   13784:	movw	r0, #1
   13788:	str	r0, [sp, #4]
   1378c:	beq	137ac <__assert_fail@plt+0x23e4>
   13790:	ldr	r0, [fp, #-20]	; 0xffffffec
   13794:	ldr	r0, [r0, #48]	; 0x30
   13798:	and	r0, r0, #1024	; 0x400
   1379c:	cmp	r0, #0
   137a0:	movw	r0, #0
   137a4:	movne	r0, #1
   137a8:	str	r0, [sp, #4]
   137ac:	ldr	r0, [sp, #4]
   137b0:	and	r0, r0, #1
   137b4:	strb	r0, [sp, #39]	; 0x27
   137b8:	movw	r0, #0
   137bc:	str	r0, [fp, #-28]	; 0xffffffe4
   137c0:	str	r0, [fp, #-32]	; 0xffffffe0
   137c4:	ldr	r0, [fp, #-8]
   137c8:	ldr	r0, [r0]
   137cc:	movw	r1, #0
   137d0:	cmp	r0, r1
   137d4:	beq	139c8 <__assert_fail@plt+0x2600>
   137d8:	ldr	r0, [fp, #-8]
   137dc:	ldr	r0, [r0]
   137e0:	bl	11260 <strlen@plt>
   137e4:	str	r0, [sp, #24]
   137e8:	ldr	r0, [fp, #-12]
   137ec:	and	r0, r0, #2048	; 0x800
   137f0:	cmp	r0, #0
   137f4:	bne	13898 <__assert_fail@plt+0x24d0>
   137f8:	ldr	r0, [fp, #-8]
   137fc:	ldr	r0, [r0]
   13800:	str	r0, [sp, #20]
   13804:	ldr	r0, [sp, #24]
   13808:	movw	r1, #2
   1380c:	cmp	r1, r0
   13810:	bcs	13894 <__assert_fail@plt+0x24cc>
   13814:	ldr	r0, [sp, #20]
   13818:	ldr	r1, [sp, #24]
   1381c:	sub	r1, r1, #1
   13820:	add	r0, r0, r1
   13824:	ldrb	r0, [r0]
   13828:	cmp	r0, #47	; 0x2f
   1382c:	bne	13894 <__assert_fail@plt+0x24cc>
   13830:	b	13834 <__assert_fail@plt+0x246c>
   13834:	ldr	r0, [sp, #24]
   13838:	movw	r1, #1
   1383c:	cmp	r1, r0
   13840:	movw	r0, #0
   13844:	str	r0, [sp]
   13848:	bcs	13870 <__assert_fail@plt+0x24a8>
   1384c:	ldr	r0, [sp, #20]
   13850:	ldr	r1, [sp, #24]
   13854:	sub	r1, r1, #2
   13858:	add	r0, r0, r1
   1385c:	ldrb	r0, [r0]
   13860:	cmp	r0, #47	; 0x2f
   13864:	movw	r0, #0
   13868:	moveq	r0, #1
   1386c:	str	r0, [sp]
   13870:	ldr	r0, [sp]
   13874:	tst	r0, #1
   13878:	beq	13890 <__assert_fail@plt+0x24c8>
   1387c:	ldr	r0, [sp, #24]
   13880:	mvn	r1, #0
   13884:	add	r0, r0, r1
   13888:	str	r0, [sp, #24]
   1388c:	b	13834 <__assert_fail@plt+0x246c>
   13890:	b	13894 <__assert_fail@plt+0x24cc>
   13894:	b	13898 <__assert_fail@plt+0x24d0>
   13898:	ldr	r0, [fp, #-20]	; 0xffffffec
   1389c:	ldr	r1, [fp, #-8]
   138a0:	ldr	r1, [r1]
   138a4:	ldr	r2, [sp, #24]
   138a8:	bl	13c88 <__assert_fail@plt+0x28c0>
   138ac:	str	r0, [fp, #-24]	; 0xffffffe8
   138b0:	movw	r1, #0
   138b4:	cmp	r0, r1
   138b8:	bne	138c0 <__assert_fail@plt+0x24f8>
   138bc:	b	13adc <__assert_fail@plt+0x2714>
   138c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c4:	movw	r1, #0
   138c8:	str	r1, [r0, #48]	; 0x30
   138cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   138d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138d4:	str	r0, [r1, #4]
   138d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138dc:	add	r0, r0, #168	; 0xa8
   138e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138e4:	str	r0, [r1, #24]
   138e8:	ldrb	r0, [sp, #39]	; 0x27
   138ec:	tst	r0, #1
   138f0:	beq	13924 <__assert_fail@plt+0x255c>
   138f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138f8:	movw	r1, #0
   138fc:	cmp	r0, r1
   13900:	beq	13924 <__assert_fail@plt+0x255c>
   13904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13908:	movw	r1, #11
   1390c:	strh	r1, [r0, #56]	; 0x38
   13910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13914:	movw	r1, #1
   13918:	and	r1, r1, #1
   1391c:	bl	13d80 <__assert_fail@plt+0x29b8>
   13920:	b	13940 <__assert_fail@plt+0x2578>
   13924:	ldr	r0, [fp, #-20]	; 0xffffffec
   13928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1392c:	movw	r2, #0
   13930:	and	r2, r2, #1
   13934:	bl	13dd8 <__assert_fail@plt+0x2a10>
   13938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1393c:	strh	r0, [r1, #56]	; 0x38
   13940:	ldr	r0, [fp, #-16]
   13944:	movw	r1, #0
   13948:	cmp	r0, r1
   1394c:	beq	13968 <__assert_fail@plt+0x25a0>
   13950:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13958:	str	r0, [r1, #8]
   1395c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13960:	str	r0, [fp, #-28]	; 0xffffffe4
   13964:	b	139a8 <__assert_fail@plt+0x25e0>
   13968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1396c:	movw	r1, #0
   13970:	str	r1, [r0, #8]
   13974:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13978:	cmp	r0, r1
   1397c:	bne	13990 <__assert_fail@plt+0x25c8>
   13980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13984:	str	r0, [fp, #-28]	; 0xffffffe4
   13988:	str	r0, [sp, #40]	; 0x28
   1398c:	b	139a4 <__assert_fail@plt+0x25dc>
   13990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13994:	ldr	r1, [sp, #40]	; 0x28
   13998:	str	r0, [r1, #8]
   1399c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139a0:	str	r0, [sp, #40]	; 0x28
   139a4:	b	139a8 <__assert_fail@plt+0x25e0>
   139a8:	b	139ac <__assert_fail@plt+0x25e4>
   139ac:	ldr	r0, [fp, #-8]
   139b0:	add	r0, r0, #4
   139b4:	str	r0, [fp, #-8]
   139b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139bc:	add	r0, r0, #1
   139c0:	str	r0, [fp, #-32]	; 0xffffffe0
   139c4:	b	137c4 <__assert_fail@plt+0x23fc>
   139c8:	ldr	r0, [fp, #-16]
   139cc:	movw	r1, #0
   139d0:	cmp	r0, r1
   139d4:	beq	139f8 <__assert_fail@plt+0x2630>
   139d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139dc:	cmp	r0, #1
   139e0:	bls	139f8 <__assert_fail@plt+0x2630>
   139e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   139e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139f0:	bl	13ff0 <__assert_fail@plt+0x2c28>
   139f4:	str	r0, [fp, #-28]	; 0xffffffe4
   139f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139fc:	movw	r1, #11514	; 0x2cfa
   13a00:	movt	r1, #2
   13a04:	movw	r2, #0
   13a08:	bl	13c88 <__assert_fail@plt+0x28c0>
   13a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a10:	str	r0, [r1]
   13a14:	movw	r1, #0
   13a18:	cmp	r0, r1
   13a1c:	bne	13a24 <__assert_fail@plt+0x265c>
   13a20:	b	13adc <__assert_fail@plt+0x2714>
   13a24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a28:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a2c:	ldr	r1, [r1]
   13a30:	str	r0, [r1, #8]
   13a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a38:	ldr	r0, [r0]
   13a3c:	movw	r1, #9
   13a40:	strh	r1, [r0, #56]	; 0x38
   13a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a48:	ldr	r0, [r0]
   13a4c:	movw	r1, #1
   13a50:	str	r1, [r0, #48]	; 0x30
   13a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a58:	bl	141b8 <__assert_fail@plt+0x2df0>
   13a5c:	tst	r0, #1
   13a60:	bne	13a68 <__assert_fail@plt+0x26a0>
   13a64:	b	13adc <__assert_fail@plt+0x2714>
   13a68:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a6c:	ldr	r0, [r0, #48]	; 0x30
   13a70:	and	r0, r0, #4
   13a74:	cmp	r0, #0
   13a78:	bne	13ac0 <__assert_fail@plt+0x26f8>
   13a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a80:	ldr	r0, [r0, #48]	; 0x30
   13a84:	and	r0, r0, #512	; 0x200
   13a88:	cmp	r0, #0
   13a8c:	bne	13ac0 <__assert_fail@plt+0x26f8>
   13a90:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a94:	movw	r1, #13868	; 0x362c
   13a98:	movt	r1, #2
   13a9c:	bl	14294 <__assert_fail@plt+0x2ecc>
   13aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13aa4:	str	r0, [r1, #28]
   13aa8:	cmp	r0, #0
   13aac:	bge	13ac0 <__assert_fail@plt+0x26f8>
   13ab0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ab4:	ldr	r1, [r0, #48]	; 0x30
   13ab8:	orr	r1, r1, #4
   13abc:	str	r1, [r0, #48]	; 0x30
   13ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ac4:	add	r0, r0, #60	; 0x3c
   13ac8:	mvn	r1, #0
   13acc:	bl	18c10 <__assert_fail@plt+0x7848>
   13ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ad4:	str	r0, [fp, #-4]
   13ad8:	b	13b08 <__assert_fail@plt+0x2740>
   13adc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ae0:	bl	14330 <__assert_fail@plt+0x2f68>
   13ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ae8:	bl	208f4 <__assert_fail@plt+0xf52c>
   13aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   13af0:	ldr	r0, [r0, #24]
   13af4:	bl	208f4 <__assert_fail@plt+0xf52c>
   13af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13afc:	bl	208f4 <__assert_fail@plt+0xf52c>
   13b00:	movw	r0, #0
   13b04:	str	r0, [fp, #-4]
   13b08:	ldr	r0, [fp, #-4]
   13b0c:	mov	sp, fp
   13b10:	pop	{fp, pc}
   13b14:			; <UNDEFINED> instruction: 0xfffff000
   13b18:	andeq	r0, r8, r0
   13b1c:	push	{fp, lr}
   13b20:	mov	fp, sp
   13b24:	sub	sp, sp, #16
   13b28:	str	r0, [fp, #-4]
   13b2c:	movw	r0, #0
   13b30:	str	r0, [sp, #4]
   13b34:	ldr	r0, [fp, #-4]
   13b38:	ldr	r0, [r0]
   13b3c:	movw	r1, #0
   13b40:	cmp	r0, r1
   13b44:	beq	13b80 <__assert_fail@plt+0x27b8>
   13b48:	ldr	r0, [fp, #-4]
   13b4c:	ldr	r0, [r0]
   13b50:	bl	11260 <strlen@plt>
   13b54:	str	r0, [sp, #8]
   13b58:	ldr	r1, [sp, #4]
   13b5c:	cmp	r0, r1
   13b60:	bls	13b6c <__assert_fail@plt+0x27a4>
   13b64:	ldr	r0, [sp, #8]
   13b68:	str	r0, [sp, #4]
   13b6c:	b	13b70 <__assert_fail@plt+0x27a8>
   13b70:	ldr	r0, [fp, #-4]
   13b74:	add	r0, r0, #4
   13b78:	str	r0, [fp, #-4]
   13b7c:	b	13b34 <__assert_fail@plt+0x276c>
   13b80:	ldr	r0, [sp, #4]
   13b84:	add	r0, r0, #1
   13b88:	mov	sp, fp
   13b8c:	pop	{fp, pc}
   13b90:	push	{fp, lr}
   13b94:	mov	fp, sp
   13b98:	sub	sp, sp, #24
   13b9c:	str	r0, [fp, #-8]
   13ba0:	str	r1, [sp, #12]
   13ba4:	ldr	r0, [fp, #-8]
   13ba8:	ldr	r0, [r0, #36]	; 0x24
   13bac:	ldr	r1, [sp, #12]
   13bb0:	add	r0, r0, r1
   13bb4:	add	r0, r0, #256	; 0x100
   13bb8:	str	r0, [sp, #4]
   13bbc:	ldr	r0, [sp, #4]
   13bc0:	ldr	r1, [fp, #-8]
   13bc4:	ldr	r1, [r1, #36]	; 0x24
   13bc8:	cmp	r0, r1
   13bcc:	bcs	13c04 <__assert_fail@plt+0x283c>
   13bd0:	ldr	r0, [fp, #-8]
   13bd4:	ldr	r0, [r0, #24]
   13bd8:	bl	208f4 <__assert_fail@plt+0xf52c>
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	movw	r1, #0
   13be4:	str	r1, [r0, #24]
   13be8:	bl	11290 <__errno_location@plt>
   13bec:	movw	r1, #36	; 0x24
   13bf0:	str	r1, [r0]
   13bf4:	movw	r0, #0
   13bf8:	and	r0, r0, #1
   13bfc:	strb	r0, [fp, #-1]
   13c00:	b	13c78 <__assert_fail@plt+0x28b0>
   13c04:	ldr	r0, [sp, #4]
   13c08:	ldr	r1, [fp, #-8]
   13c0c:	str	r0, [r1, #36]	; 0x24
   13c10:	ldr	r0, [fp, #-8]
   13c14:	ldr	r0, [r0, #24]
   13c18:	ldr	r1, [fp, #-8]
   13c1c:	ldr	r1, [r1, #36]	; 0x24
   13c20:	bl	1fc00 <__assert_fail@plt+0xe838>
   13c24:	str	r0, [sp, #8]
   13c28:	ldr	r0, [sp, #8]
   13c2c:	movw	r1, #0
   13c30:	cmp	r0, r1
   13c34:	bne	13c60 <__assert_fail@plt+0x2898>
   13c38:	ldr	r0, [fp, #-8]
   13c3c:	ldr	r0, [r0, #24]
   13c40:	bl	208f4 <__assert_fail@plt+0xf52c>
   13c44:	ldr	r0, [fp, #-8]
   13c48:	movw	r1, #0
   13c4c:	str	r1, [r0, #24]
   13c50:	movw	r0, #0
   13c54:	and	r0, r0, #1
   13c58:	strb	r0, [fp, #-1]
   13c5c:	b	13c78 <__assert_fail@plt+0x28b0>
   13c60:	ldr	r0, [sp, #8]
   13c64:	ldr	r1, [fp, #-8]
   13c68:	str	r0, [r1, #24]
   13c6c:	movw	r0, #1
   13c70:	and	r0, r0, #1
   13c74:	strb	r0, [fp, #-1]
   13c78:	ldrb	r0, [fp, #-1]
   13c7c:	and	r0, r0, #1
   13c80:	mov	sp, fp
   13c84:	pop	{fp, pc}
   13c88:	push	{fp, lr}
   13c8c:	mov	fp, sp
   13c90:	sub	sp, sp, #24
   13c94:	str	r0, [fp, #-8]
   13c98:	str	r1, [sp, #12]
   13c9c:	str	r2, [sp, #8]
   13ca0:	ldr	r0, [sp, #8]
   13ca4:	add	r0, r0, #1
   13ca8:	add	r0, r0, #175	; 0xaf
   13cac:	mvn	r1, #7
   13cb0:	and	r0, r0, r1
   13cb4:	str	r0, [sp]
   13cb8:	ldr	r0, [sp]
   13cbc:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   13cc0:	str	r0, [sp, #4]
   13cc4:	movw	r1, #0
   13cc8:	cmp	r0, r1
   13ccc:	bne	13cdc <__assert_fail@plt+0x2914>
   13cd0:	movw	r0, #0
   13cd4:	str	r0, [fp, #-4]
   13cd8:	b	13d74 <__assert_fail@plt+0x29ac>
   13cdc:	ldr	r0, [sp, #4]
   13ce0:	add	r0, r0, #168	; 0xa8
   13ce4:	ldr	r1, [sp, #12]
   13ce8:	ldr	r2, [sp, #8]
   13cec:	bl	1114c <memcpy@plt>
   13cf0:	ldr	r0, [sp, #4]
   13cf4:	add	r0, r0, #168	; 0xa8
   13cf8:	ldr	r1, [sp, #8]
   13cfc:	add	r0, r0, r1
   13d00:	movw	r1, #0
   13d04:	strb	r1, [r0]
   13d08:	ldr	r0, [sp, #8]
   13d0c:	ldr	r1, [sp, #4]
   13d10:	str	r0, [r1, #52]	; 0x34
   13d14:	ldr	r0, [fp, #-8]
   13d18:	ldr	r1, [sp, #4]
   13d1c:	str	r0, [r1, #44]	; 0x2c
   13d20:	ldr	r0, [fp, #-8]
   13d24:	ldr	r0, [r0, #24]
   13d28:	ldr	r1, [sp, #4]
   13d2c:	str	r0, [r1, #28]
   13d30:	ldr	r0, [sp, #4]
   13d34:	movw	r1, #0
   13d38:	str	r1, [r0, #32]
   13d3c:	ldr	r0, [sp, #4]
   13d40:	str	r1, [r0, #12]
   13d44:	ldr	r0, [sp, #4]
   13d48:	movw	r2, #0
   13d4c:	strh	r2, [r0, #58]	; 0x3a
   13d50:	ldr	r0, [sp, #4]
   13d54:	movw	r2, #3
   13d58:	strh	r2, [r0, #60]	; 0x3c
   13d5c:	ldr	r0, [sp, #4]
   13d60:	str	r1, [r0, #16]
   13d64:	ldr	r0, [sp, #4]
   13d68:	str	r1, [r0, #20]
   13d6c:	ldr	r0, [sp, #4]
   13d70:	str	r0, [fp, #-4]
   13d74:	ldr	r0, [fp, #-4]
   13d78:	mov	sp, fp
   13d7c:	pop	{fp, pc}
   13d80:	push	{fp, lr}
   13d84:	mov	fp, sp
   13d88:	sub	sp, sp, #8
   13d8c:	str	r0, [sp, #4]
   13d90:	and	r0, r1, #1
   13d94:	strb	r0, [sp, #3]
   13d98:	ldr	r0, [sp, #4]
   13d9c:	ldrh	r0, [r0, #56]	; 0x38
   13da0:	cmp	r0, #11
   13da4:	beq	13dac <__assert_fail@plt+0x29e4>
   13da8:	bl	11398 <abort@plt>
   13dac:	b	13db0 <__assert_fail@plt+0x29e8>
   13db0:	ldrb	r0, [sp, #3]
   13db4:	mov	r1, #1
   13db8:	tst	r0, #1
   13dbc:	movwne	r1, #2
   13dc0:	ldr	r0, [sp, #4]
   13dc4:	mov	r2, #0
   13dc8:	str	r2, [r0, #116]	; 0x74
   13dcc:	str	r1, [r0, #112]	; 0x70
   13dd0:	mov	sp, fp
   13dd4:	pop	{fp, pc}
   13dd8:	push	{fp, lr}
   13ddc:	mov	fp, sp
   13de0:	sub	sp, sp, #24
   13de4:	str	r0, [fp, #-8]
   13de8:	str	r1, [sp, #12]
   13dec:	and	r0, r2, #1
   13df0:	strb	r0, [sp, #11]
   13df4:	ldr	r0, [sp, #12]
   13df8:	add	r0, r0, #64	; 0x40
   13dfc:	str	r0, [sp, #4]
   13e00:	ldr	r0, [sp, #12]
   13e04:	ldr	r0, [r0, #48]	; 0x30
   13e08:	cmp	r0, #0
   13e0c:	bne	13e2c <__assert_fail@plt+0x2a64>
   13e10:	ldr	r0, [fp, #-8]
   13e14:	ldr	r0, [r0, #48]	; 0x30
   13e18:	and	r0, r0, #1
   13e1c:	cmp	r0, #0
   13e20:	beq	13e2c <__assert_fail@plt+0x2a64>
   13e24:	movw	r0, #1
   13e28:	strb	r0, [sp, #11]
   13e2c:	ldr	r0, [fp, #-8]
   13e30:	ldr	r0, [r0, #48]	; 0x30
   13e34:	and	r0, r0, #2
   13e38:	cmp	r0, #0
   13e3c:	bne	13e4c <__assert_fail@plt+0x2a84>
   13e40:	ldrb	r0, [sp, #11]
   13e44:	tst	r0, #1
   13e48:	beq	13ebc <__assert_fail@plt+0x2af4>
   13e4c:	ldr	r0, [sp, #12]
   13e50:	ldr	r0, [r0, #24]
   13e54:	ldr	r1, [sp, #4]
   13e58:	bl	22b80 <__assert_fail@plt+0x117b8>
   13e5c:	cmp	r0, #0
   13e60:	beq	13eb8 <__assert_fail@plt+0x2af0>
   13e64:	bl	11290 <__errno_location@plt>
   13e68:	ldr	r0, [r0]
   13e6c:	cmp	r0, #2
   13e70:	bne	13ea4 <__assert_fail@plt+0x2adc>
   13e74:	ldr	r0, [sp, #12]
   13e78:	ldr	r0, [r0, #24]
   13e7c:	ldr	r1, [sp, #4]
   13e80:	bl	22ba0 <__assert_fail@plt+0x117d8>
   13e84:	cmp	r0, #0
   13e88:	bne	13ea4 <__assert_fail@plt+0x2adc>
   13e8c:	bl	11290 <__errno_location@plt>
   13e90:	movw	r1, #0
   13e94:	str	r1, [r0]
   13e98:	movw	r0, #13
   13e9c:	strh	r0, [fp, #-2]
   13ea0:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13ea4:	bl	11290 <__errno_location@plt>
   13ea8:	ldr	r0, [r0]
   13eac:	ldr	r1, [sp, #12]
   13eb0:	str	r0, [r1, #32]
   13eb4:	b	13ef0 <__assert_fail@plt+0x2b28>
   13eb8:	b	13f14 <__assert_fail@plt+0x2b4c>
   13ebc:	ldr	r0, [fp, #-8]
   13ec0:	ldr	r0, [r0, #32]
   13ec4:	ldr	r1, [sp, #12]
   13ec8:	ldr	r1, [r1, #24]
   13ecc:	ldr	r2, [sp, #4]
   13ed0:	movw	r3, #256	; 0x100
   13ed4:	bl	22bb0 <__assert_fail@plt+0x117e8>
   13ed8:	cmp	r0, #0
   13edc:	beq	13f10 <__assert_fail@plt+0x2b48>
   13ee0:	bl	11290 <__errno_location@plt>
   13ee4:	ldr	r0, [r0]
   13ee8:	ldr	r1, [sp, #12]
   13eec:	str	r0, [r1, #32]
   13ef0:	ldr	r0, [sp, #4]
   13ef4:	movw	r1, #0
   13ef8:	and	r1, r1, #255	; 0xff
   13efc:	movw	r2, #104	; 0x68
   13f00:	bl	112a8 <memset@plt>
   13f04:	movw	r0, #10
   13f08:	strh	r0, [fp, #-2]
   13f0c:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13f10:	b	13f14 <__assert_fail@plt+0x2b4c>
   13f14:	ldr	r0, [sp, #4]
   13f18:	ldr	r0, [r0, #16]
   13f1c:	and	r0, r0, #61440	; 0xf000
   13f20:	cmp	r0, #16384	; 0x4000
   13f24:	bne	13f9c <__assert_fail@plt+0x2bd4>
   13f28:	ldr	r0, [sp, #12]
   13f2c:	ldrb	r0, [r0, #168]	; 0xa8
   13f30:	cmp	r0, #46	; 0x2e
   13f34:	bne	13f90 <__assert_fail@plt+0x2bc8>
   13f38:	ldr	r0, [sp, #12]
   13f3c:	ldrsb	r0, [r0, #169]	; 0xa9
   13f40:	cmp	r0, #0
   13f44:	beq	13f68 <__assert_fail@plt+0x2ba0>
   13f48:	ldr	r0, [sp, #12]
   13f4c:	ldrb	r0, [r0, #169]	; 0xa9
   13f50:	cmp	r0, #46	; 0x2e
   13f54:	bne	13f90 <__assert_fail@plt+0x2bc8>
   13f58:	ldr	r0, [sp, #12]
   13f5c:	ldrsb	r0, [r0, #170]	; 0xaa
   13f60:	cmp	r0, #0
   13f64:	bne	13f90 <__assert_fail@plt+0x2bc8>
   13f68:	ldr	r0, [sp, #12]
   13f6c:	ldr	r0, [r0, #48]	; 0x30
   13f70:	cmp	r0, #0
   13f74:	movw	r0, #0
   13f78:	moveq	r0, #1
   13f7c:	tst	r0, #1
   13f80:	movw	r0, #1
   13f84:	moveq	r0, #5
   13f88:	strh	r0, [fp, #-2]
   13f8c:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13f90:	movw	r0, #1
   13f94:	strh	r0, [fp, #-2]
   13f98:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13f9c:	ldr	r0, [sp, #4]
   13fa0:	ldr	r0, [r0, #16]
   13fa4:	and	r0, r0, #61440	; 0xf000
   13fa8:	cmp	r0, #40960	; 0xa000
   13fac:	bne	13fbc <__assert_fail@plt+0x2bf4>
   13fb0:	movw	r0, #12
   13fb4:	strh	r0, [fp, #-2]
   13fb8:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13fbc:	ldr	r0, [sp, #4]
   13fc0:	ldr	r0, [r0, #16]
   13fc4:	and	r0, r0, #61440	; 0xf000
   13fc8:	cmp	r0, #32768	; 0x8000
   13fcc:	bne	13fdc <__assert_fail@plt+0x2c14>
   13fd0:	movw	r0, #8
   13fd4:	strh	r0, [fp, #-2]
   13fd8:	b	13fe4 <__assert_fail@plt+0x2c1c>
   13fdc:	movw	r0, #3
   13fe0:	strh	r0, [fp, #-2]
   13fe4:	ldrh	r0, [fp, #-2]
   13fe8:	mov	sp, fp
   13fec:	pop	{fp, pc}
   13ff0:	push	{fp, lr}
   13ff4:	mov	fp, sp
   13ff8:	sub	sp, sp, #48	; 0x30
   13ffc:	add	r3, sp, #20
   14000:	str	r0, [fp, #-8]
   14004:	str	r1, [fp, #-12]
   14008:	str	r2, [fp, #-16]
   1400c:	mov	r0, r3
   14010:	cmp	r3, r0
   14014:	bne	14028 <__assert_fail@plt+0x2c60>
   14018:	ldr	r0, [fp, #-8]
   1401c:	ldr	r0, [r0, #44]	; 0x2c
   14020:	str	r0, [sp, #8]
   14024:	b	14038 <__assert_fail@plt+0x2c70>
   14028:	movw	r0, #28500	; 0x6f54
   1402c:	movt	r0, #1
   14030:	str	r0, [sp, #8]
   14034:	b	14038 <__assert_fail@plt+0x2c70>
   14038:	ldr	r0, [sp, #8]
   1403c:	str	r0, [sp, #16]
   14040:	ldr	r0, [fp, #-16]
   14044:	ldr	r1, [fp, #-8]
   14048:	ldr	r1, [r1, #40]	; 0x28
   1404c:	cmp	r0, r1
   14050:	bls	140e0 <__assert_fail@plt+0x2d18>
   14054:	ldr	r0, [pc, #344]	; 141b4 <__assert_fail@plt+0x2dec>
   14058:	ldr	r1, [fp, #-16]
   1405c:	add	r1, r1, #40	; 0x28
   14060:	ldr	r2, [fp, #-8]
   14064:	str	r1, [r2, #40]	; 0x28
   14068:	ldr	r1, [fp, #-8]
   1406c:	ldr	r1, [r1, #40]	; 0x28
   14070:	cmp	r0, r1
   14074:	bcc	140a8 <__assert_fail@plt+0x2ce0>
   14078:	ldr	r0, [fp, #-8]
   1407c:	ldr	r1, [r0, #8]
   14080:	ldr	r0, [r0, #40]	; 0x28
   14084:	lsl	r0, r0, #2
   14088:	str	r0, [sp, #4]
   1408c:	mov	r0, r1
   14090:	ldr	r1, [sp, #4]
   14094:	bl	1fc00 <__assert_fail@plt+0xe838>
   14098:	str	r0, [sp, #12]
   1409c:	movw	r1, #0
   140a0:	cmp	r0, r1
   140a4:	bne	140d4 <__assert_fail@plt+0x2d0c>
   140a8:	ldr	r0, [fp, #-8]
   140ac:	ldr	r0, [r0, #8]
   140b0:	bl	208f4 <__assert_fail@plt+0xf52c>
   140b4:	ldr	r0, [fp, #-8]
   140b8:	movw	r1, #0
   140bc:	str	r1, [r0, #8]
   140c0:	ldr	r0, [fp, #-8]
   140c4:	str	r1, [r0, #40]	; 0x28
   140c8:	ldr	r0, [fp, #-12]
   140cc:	str	r0, [fp, #-4]
   140d0:	b	141a8 <__assert_fail@plt+0x2de0>
   140d4:	ldr	r0, [sp, #12]
   140d8:	ldr	r1, [fp, #-8]
   140dc:	str	r0, [r1, #8]
   140e0:	ldr	r0, [fp, #-8]
   140e4:	ldr	r0, [r0, #8]
   140e8:	str	r0, [fp, #-20]	; 0xffffffec
   140ec:	ldr	r0, [fp, #-12]
   140f0:	str	r0, [sp, #24]
   140f4:	ldr	r0, [sp, #24]
   140f8:	movw	r1, #0
   140fc:	cmp	r0, r1
   14100:	beq	14128 <__assert_fail@plt+0x2d60>
   14104:	ldr	r0, [sp, #24]
   14108:	ldr	r1, [fp, #-20]	; 0xffffffec
   1410c:	add	r2, r1, #4
   14110:	str	r2, [fp, #-20]	; 0xffffffec
   14114:	str	r0, [r1]
   14118:	ldr	r0, [sp, #24]
   1411c:	ldr	r0, [r0, #8]
   14120:	str	r0, [sp, #24]
   14124:	b	140f4 <__assert_fail@plt+0x2d2c>
   14128:	ldr	r0, [fp, #-8]
   1412c:	ldr	r0, [r0, #8]
   14130:	ldr	r1, [fp, #-16]
   14134:	ldr	r3, [sp, #16]
   14138:	movw	r2, #4
   1413c:	bl	11344 <qsort@plt>
   14140:	ldr	r0, [fp, #-8]
   14144:	ldr	r0, [r0, #8]
   14148:	str	r0, [fp, #-20]	; 0xffffffec
   1414c:	ldr	r0, [r0]
   14150:	str	r0, [fp, #-12]
   14154:	ldr	r0, [fp, #-16]
   14158:	mvn	r1, #0
   1415c:	add	r0, r0, r1
   14160:	str	r0, [fp, #-16]
   14164:	cmp	r0, #0
   14168:	beq	14190 <__assert_fail@plt+0x2dc8>
   1416c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14170:	ldr	r0, [r0, #4]
   14174:	ldr	r1, [fp, #-20]	; 0xffffffec
   14178:	ldr	r1, [r1]
   1417c:	str	r0, [r1, #8]
   14180:	ldr	r0, [fp, #-20]	; 0xffffffec
   14184:	add	r0, r0, #4
   14188:	str	r0, [fp, #-20]	; 0xffffffec
   1418c:	b	14154 <__assert_fail@plt+0x2d8c>
   14190:	ldr	r0, [fp, #-20]	; 0xffffffec
   14194:	ldr	r0, [r0]
   14198:	movw	r1, #0
   1419c:	str	r1, [r0, #8]
   141a0:	ldr	r0, [fp, #-12]
   141a4:	str	r0, [fp, #-4]
   141a8:	ldr	r0, [fp, #-4]
   141ac:	mov	sp, fp
   141b0:	pop	{fp, pc}
   141b4:	svccc	0x00ffffff
   141b8:	push	{fp, lr}
   141bc:	mov	fp, sp
   141c0:	sub	sp, sp, #16
   141c4:	str	r0, [sp, #8]
   141c8:	ldr	r0, [sp, #8]
   141cc:	ldr	r0, [r0, #48]	; 0x30
   141d0:	movw	r1, #258	; 0x102
   141d4:	and	r0, r0, r1
   141d8:	cmp	r0, #0
   141dc:	beq	14238 <__assert_fail@plt+0x2e70>
   141e0:	movw	r0, #31
   141e4:	movw	r1, #0
   141e8:	movw	r2, #26680	; 0x6838
   141ec:	movt	r2, #1
   141f0:	movw	r3, #26760	; 0x6888
   141f4:	movt	r3, #1
   141f8:	movw	ip, #2292	; 0x8f4
   141fc:	movt	ip, #2
   14200:	str	ip, [sp]
   14204:	bl	177bc <__assert_fail@plt+0x63f4>
   14208:	ldr	r1, [sp, #8]
   1420c:	str	r0, [r1, #56]	; 0x38
   14210:	ldr	r0, [sp, #8]
   14214:	ldr	r0, [r0, #56]	; 0x38
   14218:	movw	r1, #0
   1421c:	cmp	r0, r1
   14220:	bne	14234 <__assert_fail@plt+0x2e6c>
   14224:	movw	r0, #0
   14228:	and	r0, r0, #1
   1422c:	strb	r0, [fp, #-1]
   14230:	b	14284 <__assert_fail@plt+0x2ebc>
   14234:	b	14278 <__assert_fail@plt+0x2eb0>
   14238:	movw	r0, #32
   1423c:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   14240:	ldr	r1, [sp, #8]
   14244:	str	r0, [r1, #56]	; 0x38
   14248:	ldr	r0, [sp, #8]
   1424c:	ldr	r0, [r0, #56]	; 0x38
   14250:	movw	r1, #0
   14254:	cmp	r0, r1
   14258:	bne	1426c <__assert_fail@plt+0x2ea4>
   1425c:	movw	r0, #0
   14260:	and	r0, r0, #1
   14264:	strb	r0, [fp, #-1]
   14268:	b	14284 <__assert_fail@plt+0x2ebc>
   1426c:	ldr	r0, [sp, #8]
   14270:	ldr	r0, [r0, #56]	; 0x38
   14274:	bl	2010c <__assert_fail@plt+0xed44>
   14278:	movw	r0, #1
   1427c:	and	r0, r0, #1
   14280:	strb	r0, [fp, #-1]
   14284:	ldrb	r0, [fp, #-1]
   14288:	and	r0, r0, #1
   1428c:	mov	sp, fp
   14290:	pop	{fp, pc}
   14294:	push	{fp, lr}
   14298:	mov	fp, sp
   1429c:	sub	sp, sp, #24
   142a0:	ldr	r2, [pc, #132]	; 1432c <__assert_fail@plt+0x2f64>
   142a4:	str	r0, [fp, #-4]
   142a8:	str	r1, [fp, #-8]
   142ac:	ldr	r0, [fp, #-4]
   142b0:	ldr	r0, [r0, #48]	; 0x30
   142b4:	and	r0, r0, #16
   142b8:	cmp	r0, #0
   142bc:	movw	r0, #0
   142c0:	movne	r0, #1
   142c4:	tst	r0, #1
   142c8:	movw	r0, #32768	; 0x8000
   142cc:	moveq	r0, #0
   142d0:	orr	r0, r0, r2
   142d4:	str	r0, [sp, #12]
   142d8:	ldr	r0, [fp, #-4]
   142dc:	ldr	r0, [r0, #48]	; 0x30
   142e0:	and	r0, r0, #512	; 0x200
   142e4:	cmp	r0, #0
   142e8:	beq	14308 <__assert_fail@plt+0x2f40>
   142ec:	ldr	r0, [fp, #-4]
   142f0:	ldr	r0, [r0, #32]
   142f4:	ldr	r1, [fp, #-8]
   142f8:	ldr	r2, [sp, #12]
   142fc:	bl	199b0 <__assert_fail@plt+0x85e8>
   14300:	str	r0, [sp, #4]
   14304:	b	14318 <__assert_fail@plt+0x2f50>
   14308:	ldr	r0, [fp, #-8]
   1430c:	ldr	r1, [sp, #12]
   14310:	bl	207c8 <__assert_fail@plt+0xf400>
   14314:	str	r0, [sp, #4]
   14318:	ldr	r0, [sp, #4]
   1431c:	str	r0, [sp, #8]
   14320:	ldr	r0, [sp, #8]
   14324:	mov	sp, fp
   14328:	pop	{fp, pc}
   1432c:	andeq	r4, r8, r0, lsl #18
   14330:	push	{fp, lr}
   14334:	mov	fp, sp
   14338:	sub	sp, sp, #8
   1433c:	str	r0, [sp, #4]
   14340:	ldr	r0, [sp, #4]
   14344:	str	r0, [sp]
   14348:	movw	r1, #0
   1434c:	cmp	r0, r1
   14350:	beq	1438c <__assert_fail@plt+0x2fc4>
   14354:	ldr	r0, [sp, #4]
   14358:	ldr	r0, [r0, #8]
   1435c:	str	r0, [sp, #4]
   14360:	ldr	r0, [sp]
   14364:	ldr	r0, [r0, #12]
   14368:	movw	r1, #0
   1436c:	cmp	r0, r1
   14370:	beq	14380 <__assert_fail@plt+0x2fb8>
   14374:	ldr	r0, [sp]
   14378:	ldr	r0, [r0, #12]
   1437c:	bl	113bc <closedir@plt>
   14380:	ldr	r0, [sp]
   14384:	bl	208f4 <__assert_fail@plt+0xf52c>
   14388:	b	14340 <__assert_fail@plt+0x2f78>
   1438c:	mov	sp, fp
   14390:	pop	{fp, pc}
   14394:	push	{fp, lr}
   14398:	mov	fp, sp
   1439c:	sub	sp, sp, #32
   143a0:	str	r0, [fp, #-8]
   143a4:	movw	r0, #0
   143a8:	str	r0, [sp, #12]
   143ac:	ldr	r1, [fp, #-8]
   143b0:	ldr	r1, [r1]
   143b4:	cmp	r1, r0
   143b8:	beq	1442c <__assert_fail@plt+0x3064>
   143bc:	ldr	r0, [fp, #-8]
   143c0:	ldr	r0, [r0]
   143c4:	str	r0, [sp, #16]
   143c8:	ldr	r0, [sp, #16]
   143cc:	ldr	r0, [r0, #48]	; 0x30
   143d0:	cmp	r0, #0
   143d4:	blt	14424 <__assert_fail@plt+0x305c>
   143d8:	ldr	r0, [sp, #16]
   143dc:	str	r0, [fp, #-12]
   143e0:	ldr	r0, [sp, #16]
   143e4:	ldr	r0, [r0, #8]
   143e8:	movw	r1, #0
   143ec:	cmp	r0, r1
   143f0:	beq	14404 <__assert_fail@plt+0x303c>
   143f4:	ldr	r0, [sp, #16]
   143f8:	ldr	r0, [r0, #8]
   143fc:	str	r0, [sp, #8]
   14400:	b	14410 <__assert_fail@plt+0x3048>
   14404:	ldr	r0, [sp, #16]
   14408:	ldr	r0, [r0, #4]
   1440c:	str	r0, [sp, #8]
   14410:	ldr	r0, [sp, #8]
   14414:	str	r0, [sp, #16]
   14418:	ldr	r0, [fp, #-12]
   1441c:	bl	208f4 <__assert_fail@plt+0xf52c>
   14420:	b	143c8 <__assert_fail@plt+0x3000>
   14424:	ldr	r0, [sp, #16]
   14428:	bl	208f4 <__assert_fail@plt+0xf52c>
   1442c:	ldr	r0, [fp, #-8]
   14430:	ldr	r0, [r0, #4]
   14434:	movw	r1, #0
   14438:	cmp	r0, r1
   1443c:	beq	1444c <__assert_fail@plt+0x3084>
   14440:	ldr	r0, [fp, #-8]
   14444:	ldr	r0, [r0, #4]
   14448:	bl	14330 <__assert_fail@plt+0x2f68>
   1444c:	ldr	r0, [fp, #-8]
   14450:	ldr	r0, [r0, #8]
   14454:	bl	208f4 <__assert_fail@plt+0xf52c>
   14458:	ldr	r0, [fp, #-8]
   1445c:	ldr	r0, [r0, #24]
   14460:	bl	208f4 <__assert_fail@plt+0xf52c>
   14464:	ldr	r0, [fp, #-8]
   14468:	ldr	r0, [r0, #48]	; 0x30
   1446c:	and	r0, r0, #512	; 0x200
   14470:	cmp	r0, #0
   14474:	beq	144b4 <__assert_fail@plt+0x30ec>
   14478:	ldr	r0, [fp, #-8]
   1447c:	ldr	r0, [r0, #32]
   14480:	movw	r1, #0
   14484:	cmp	r1, r0
   14488:	bgt	144b0 <__assert_fail@plt+0x30e8>
   1448c:	ldr	r0, [fp, #-8]
   14490:	ldr	r0, [r0, #32]
   14494:	bl	113a4 <close@plt>
   14498:	cmp	r0, #0
   1449c:	beq	144ac <__assert_fail@plt+0x30e4>
   144a0:	bl	11290 <__errno_location@plt>
   144a4:	ldr	r0, [r0]
   144a8:	str	r0, [sp, #12]
   144ac:	b	144b0 <__assert_fail@plt+0x30e8>
   144b0:	b	14520 <__assert_fail@plt+0x3158>
   144b4:	ldr	r0, [fp, #-8]
   144b8:	ldr	r0, [r0, #48]	; 0x30
   144bc:	and	r0, r0, #4
   144c0:	cmp	r0, #0
   144c4:	bne	1451c <__assert_fail@plt+0x3154>
   144c8:	ldr	r0, [fp, #-8]
   144cc:	ldr	r0, [r0, #28]
   144d0:	bl	11338 <fchdir@plt>
   144d4:	cmp	r0, #0
   144d8:	beq	144e8 <__assert_fail@plt+0x3120>
   144dc:	bl	11290 <__errno_location@plt>
   144e0:	ldr	r0, [r0]
   144e4:	str	r0, [sp, #12]
   144e8:	ldr	r0, [fp, #-8]
   144ec:	ldr	r0, [r0, #28]
   144f0:	bl	113a4 <close@plt>
   144f4:	cmp	r0, #0
   144f8:	beq	14518 <__assert_fail@plt+0x3150>
   144fc:	ldr	r0, [sp, #12]
   14500:	cmp	r0, #0
   14504:	bne	14514 <__assert_fail@plt+0x314c>
   14508:	bl	11290 <__errno_location@plt>
   1450c:	ldr	r0, [r0]
   14510:	str	r0, [sp, #12]
   14514:	b	14518 <__assert_fail@plt+0x3150>
   14518:	b	1451c <__assert_fail@plt+0x3154>
   1451c:	b	14520 <__assert_fail@plt+0x3158>
   14520:	ldr	r0, [fp, #-8]
   14524:	add	r0, r0, #60	; 0x3c
   14528:	bl	1459c <__assert_fail@plt+0x31d4>
   1452c:	ldr	r0, [fp, #-8]
   14530:	ldr	r0, [r0, #52]	; 0x34
   14534:	movw	r1, #0
   14538:	cmp	r0, r1
   1453c:	beq	1454c <__assert_fail@plt+0x3184>
   14540:	ldr	r0, [fp, #-8]
   14544:	ldr	r0, [r0, #52]	; 0x34
   14548:	bl	17d0c <__assert_fail@plt+0x6944>
   1454c:	ldr	r0, [fp, #-8]
   14550:	bl	145f4 <__assert_fail@plt+0x322c>
   14554:	ldr	r0, [fp, #-8]
   14558:	bl	208f4 <__assert_fail@plt+0xf52c>
   1455c:	ldr	r0, [sp, #12]
   14560:	cmp	r0, #0
   14564:	beq	14588 <__assert_fail@plt+0x31c0>
   14568:	ldr	r0, [sp, #12]
   1456c:	str	r0, [sp, #4]
   14570:	bl	11290 <__errno_location@plt>
   14574:	ldr	r1, [sp, #4]
   14578:	str	r1, [r0]
   1457c:	mvn	r0, #0
   14580:	str	r0, [fp, #-4]
   14584:	b	14590 <__assert_fail@plt+0x31c8>
   14588:	movw	r0, #0
   1458c:	str	r0, [fp, #-4]
   14590:	ldr	r0, [fp, #-4]
   14594:	mov	sp, fp
   14598:	pop	{fp, pc}
   1459c:	push	{fp, lr}
   145a0:	mov	fp, sp
   145a4:	sub	sp, sp, #8
   145a8:	str	r0, [sp, #4]
   145ac:	ldr	r0, [sp, #4]
   145b0:	bl	18c84 <__assert_fail@plt+0x78bc>
   145b4:	mvn	r1, #0
   145b8:	eor	r0, r0, r1
   145bc:	tst	r0, #1
   145c0:	beq	145ec <__assert_fail@plt+0x3224>
   145c4:	ldr	r0, [sp, #4]
   145c8:	bl	18d54 <__assert_fail@plt+0x798c>
   145cc:	str	r0, [sp]
   145d0:	ldr	r0, [sp]
   145d4:	movw	r1, #0
   145d8:	cmp	r1, r0
   145dc:	bgt	145e8 <__assert_fail@plt+0x3220>
   145e0:	ldr	r0, [sp]
   145e4:	bl	113a4 <close@plt>
   145e8:	b	145ac <__assert_fail@plt+0x31e4>
   145ec:	mov	sp, fp
   145f0:	pop	{fp, pc}
   145f4:	push	{fp, lr}
   145f8:	mov	fp, sp
   145fc:	sub	sp, sp, #8
   14600:	str	r0, [sp, #4]
   14604:	ldr	r0, [sp, #4]
   14608:	ldr	r0, [r0, #48]	; 0x30
   1460c:	movw	r1, #258	; 0x102
   14610:	and	r0, r0, r1
   14614:	cmp	r0, #0
   14618:	beq	14640 <__assert_fail@plt+0x3278>
   1461c:	ldr	r0, [sp, #4]
   14620:	ldr	r0, [r0, #56]	; 0x38
   14624:	movw	r1, #0
   14628:	cmp	r0, r1
   1462c:	beq	1463c <__assert_fail@plt+0x3274>
   14630:	ldr	r0, [sp, #4]
   14634:	ldr	r0, [r0, #56]	; 0x38
   14638:	bl	17d0c <__assert_fail@plt+0x6944>
   1463c:	b	1464c <__assert_fail@plt+0x3284>
   14640:	ldr	r0, [sp, #4]
   14644:	ldr	r0, [r0, #56]	; 0x38
   14648:	bl	208f4 <__assert_fail@plt+0xf52c>
   1464c:	mov	sp, fp
   14650:	pop	{fp, pc}
   14654:	push	{fp, lr}
   14658:	mov	fp, sp
   1465c:	sub	sp, sp, #40	; 0x28
   14660:	str	r0, [fp, #-8]
   14664:	ldr	r0, [fp, #-8]
   14668:	ldr	r0, [r0]
   1466c:	movw	r1, #0
   14670:	cmp	r0, r1
   14674:	beq	1468c <__assert_fail@plt+0x32c4>
   14678:	ldr	r0, [fp, #-8]
   1467c:	ldr	r0, [r0, #48]	; 0x30
   14680:	and	r0, r0, #8192	; 0x2000
   14684:	cmp	r0, #0
   14688:	beq	14698 <__assert_fail@plt+0x32d0>
   1468c:	movw	r0, #0
   14690:	str	r0, [fp, #-4]
   14694:	b	15028 <__assert_fail@plt+0x3c60>
   14698:	ldr	r0, [fp, #-8]
   1469c:	ldr	r0, [r0]
   146a0:	str	r0, [fp, #-12]
   146a4:	ldr	r0, [fp, #-12]
   146a8:	ldrh	r0, [r0, #60]	; 0x3c
   146ac:	strh	r0, [fp, #-18]	; 0xffffffee
   146b0:	ldr	r0, [fp, #-12]
   146b4:	movw	r1, #3
   146b8:	strh	r1, [r0, #60]	; 0x3c
   146bc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   146c0:	cmp	r0, #1
   146c4:	bne	146f0 <__assert_fail@plt+0x3328>
   146c8:	ldr	r0, [fp, #-8]
   146cc:	ldr	r1, [fp, #-12]
   146d0:	movw	r2, #0
   146d4:	and	r2, r2, #1
   146d8:	bl	13dd8 <__assert_fail@plt+0x2a10>
   146dc:	ldr	r1, [fp, #-12]
   146e0:	strh	r0, [r1, #56]	; 0x38
   146e4:	ldr	r0, [fp, #-12]
   146e8:	str	r0, [fp, #-4]
   146ec:	b	15028 <__assert_fail@plt+0x3c60>
   146f0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   146f4:	cmp	r0, #2
   146f8:	bne	147b4 <__assert_fail@plt+0x33ec>
   146fc:	ldr	r0, [fp, #-12]
   14700:	ldrh	r0, [r0, #56]	; 0x38
   14704:	cmp	r0, #12
   14708:	beq	1471c <__assert_fail@plt+0x3354>
   1470c:	ldr	r0, [fp, #-12]
   14710:	ldrh	r0, [r0, #56]	; 0x38
   14714:	cmp	r0, #13
   14718:	bne	147b4 <__assert_fail@plt+0x33ec>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r1, [fp, #-12]
   14724:	movw	r2, #1
   14728:	and	r2, r2, #1
   1472c:	bl	13dd8 <__assert_fail@plt+0x2a10>
   14730:	ldr	r1, [fp, #-12]
   14734:	strh	r0, [r1, #56]	; 0x38
   14738:	ldr	r0, [fp, #-12]
   1473c:	ldrh	r0, [r0, #56]	; 0x38
   14740:	cmp	r0, #1
   14744:	bne	147b0 <__assert_fail@plt+0x33e8>
   14748:	ldr	r0, [fp, #-8]
   1474c:	ldr	r0, [r0, #48]	; 0x30
   14750:	and	r0, r0, #4
   14754:	cmp	r0, #0
   14758:	bne	147b0 <__assert_fail@plt+0x33e8>
   1475c:	ldr	r0, [fp, #-8]
   14760:	movw	r1, #13868	; 0x362c
   14764:	movt	r1, #2
   14768:	bl	14294 <__assert_fail@plt+0x2ecc>
   1476c:	ldr	r1, [fp, #-12]
   14770:	str	r0, [r1, #36]	; 0x24
   14774:	cmp	r0, #0
   14778:	bge	1479c <__assert_fail@plt+0x33d4>
   1477c:	bl	11290 <__errno_location@plt>
   14780:	ldr	r0, [r0]
   14784:	ldr	r1, [fp, #-12]
   14788:	str	r0, [r1, #32]
   1478c:	ldr	r0, [fp, #-12]
   14790:	movw	r1, #7
   14794:	strh	r1, [r0, #56]	; 0x38
   14798:	b	147ac <__assert_fail@plt+0x33e4>
   1479c:	ldr	r0, [fp, #-12]
   147a0:	ldrh	r1, [r0, #58]	; 0x3a
   147a4:	orr	r1, r1, #2
   147a8:	strh	r1, [r0, #58]	; 0x3a
   147ac:	b	147b0 <__assert_fail@plt+0x33e8>
   147b0:	b	14cc4 <__assert_fail@plt+0x38fc>
   147b4:	ldr	r0, [fp, #-12]
   147b8:	ldrh	r0, [r0, #56]	; 0x38
   147bc:	cmp	r0, #1
   147c0:	bne	14a1c <__assert_fail@plt+0x3654>
   147c4:	ldrh	r0, [fp, #-18]	; 0xffffffee
   147c8:	cmp	r0, #4
   147cc:	beq	14814 <__assert_fail@plt+0x344c>
   147d0:	ldr	r0, [fp, #-8]
   147d4:	ldr	r0, [r0, #48]	; 0x30
   147d8:	and	r0, r0, #64	; 0x40
   147dc:	cmp	r0, #0
   147e0:	beq	14884 <__assert_fail@plt+0x34bc>
   147e4:	ldr	r0, [fp, #-12]
   147e8:	ldr	r1, [r0, #64]	; 0x40
   147ec:	ldr	r0, [r0, #68]	; 0x44
   147f0:	ldr	r2, [fp, #-8]
   147f4:	ldr	r3, [r2, #16]
   147f8:	ldr	r2, [r2, #20]
   147fc:	eor	r0, r0, r2
   14800:	eor	r1, r1, r3
   14804:	orr	r0, r1, r0
   14808:	cmp	r0, #0
   1480c:	beq	14884 <__assert_fail@plt+0x34bc>
   14810:	b	14814 <__assert_fail@plt+0x344c>
   14814:	ldr	r0, [fp, #-12]
   14818:	ldrh	r0, [r0, #58]	; 0x3a
   1481c:	and	r0, r0, #2
   14820:	cmp	r0, #0
   14824:	beq	14834 <__assert_fail@plt+0x346c>
   14828:	ldr	r0, [fp, #-12]
   1482c:	ldr	r0, [r0, #36]	; 0x24
   14830:	bl	113a4 <close@plt>
   14834:	ldr	r0, [fp, #-8]
   14838:	ldr	r0, [r0, #4]
   1483c:	movw	r1, #0
   14840:	cmp	r0, r1
   14844:	beq	14860 <__assert_fail@plt+0x3498>
   14848:	ldr	r0, [fp, #-8]
   1484c:	ldr	r0, [r0, #4]
   14850:	bl	14330 <__assert_fail@plt+0x2f68>
   14854:	ldr	r0, [fp, #-8]
   14858:	movw	r1, #0
   1485c:	str	r1, [r0, #4]
   14860:	ldr	r0, [fp, #-12]
   14864:	movw	r1, #6
   14868:	strh	r1, [r0, #56]	; 0x38
   1486c:	ldr	r0, [fp, #-8]
   14870:	ldr	r1, [fp, #-12]
   14874:	bl	15034 <__assert_fail@plt+0x3c6c>
   14878:	ldr	r0, [fp, #-12]
   1487c:	str	r0, [fp, #-4]
   14880:	b	15028 <__assert_fail@plt+0x3c60>
   14884:	ldr	r0, [fp, #-8]
   14888:	ldr	r0, [r0, #4]
   1488c:	movw	r1, #0
   14890:	cmp	r0, r1
   14894:	beq	148d8 <__assert_fail@plt+0x3510>
   14898:	ldr	r0, [fp, #-8]
   1489c:	ldr	r0, [r0, #48]	; 0x30
   148a0:	and	r0, r0, #4096	; 0x1000
   148a4:	cmp	r0, #0
   148a8:	beq	148d8 <__assert_fail@plt+0x3510>
   148ac:	ldr	r0, [fp, #-8]
   148b0:	ldr	r1, [r0, #48]	; 0x30
   148b4:	mvn	r2, #4096	; 0x1000
   148b8:	and	r1, r1, r2
   148bc:	str	r1, [r0, #48]	; 0x30
   148c0:	ldr	r0, [fp, #-8]
   148c4:	ldr	r0, [r0, #4]
   148c8:	bl	14330 <__assert_fail@plt+0x2f68>
   148cc:	ldr	r0, [fp, #-8]
   148d0:	movw	r1, #0
   148d4:	str	r1, [r0, #4]
   148d8:	ldr	r0, [fp, #-8]
   148dc:	ldr	r0, [r0, #4]
   148e0:	movw	r1, #0
   148e4:	cmp	r0, r1
   148e8:	beq	14974 <__assert_fail@plt+0x35ac>
   148ec:	ldr	r0, [fp, #-8]
   148f0:	ldr	r1, [fp, #-12]
   148f4:	ldr	r2, [fp, #-12]
   148f8:	ldr	r3, [r2, #24]
   148fc:	mvn	r2, #0
   14900:	bl	151d4 <__assert_fail@plt+0x3e0c>
   14904:	cmp	r0, #0
   14908:	beq	14970 <__assert_fail@plt+0x35a8>
   1490c:	bl	11290 <__errno_location@plt>
   14910:	ldr	r0, [r0]
   14914:	ldr	r1, [fp, #-12]
   14918:	str	r0, [r1, #32]
   1491c:	ldr	r0, [fp, #-12]
   14920:	ldrh	r1, [r0, #58]	; 0x3a
   14924:	orr	r1, r1, #1
   14928:	strh	r1, [r0, #58]	; 0x3a
   1492c:	ldr	r0, [fp, #-8]
   14930:	ldr	r0, [r0, #4]
   14934:	str	r0, [fp, #-12]
   14938:	ldr	r0, [fp, #-12]
   1493c:	movw	r1, #0
   14940:	cmp	r0, r1
   14944:	beq	1496c <__assert_fail@plt+0x35a4>
   14948:	ldr	r0, [fp, #-12]
   1494c:	ldr	r0, [r0, #4]
   14950:	ldr	r0, [r0, #24]
   14954:	ldr	r1, [fp, #-12]
   14958:	str	r0, [r1, #24]
   1495c:	ldr	r0, [fp, #-12]
   14960:	ldr	r0, [r0, #8]
   14964:	str	r0, [fp, #-12]
   14968:	b	14938 <__assert_fail@plt+0x3570>
   1496c:	b	14970 <__assert_fail@plt+0x35a8>
   14970:	b	14a00 <__assert_fail@plt+0x3638>
   14974:	ldr	r0, [fp, #-8]
   14978:	movw	r1, #3
   1497c:	bl	15494 <__assert_fail@plt+0x40cc>
   14980:	ldr	r1, [fp, #-8]
   14984:	str	r0, [r1, #4]
   14988:	movw	r1, #0
   1498c:	cmp	r0, r1
   14990:	bne	149fc <__assert_fail@plt+0x3634>
   14994:	ldr	r0, [fp, #-8]
   14998:	ldr	r0, [r0, #48]	; 0x30
   1499c:	and	r0, r0, #8192	; 0x2000
   149a0:	cmp	r0, #0
   149a4:	beq	149b4 <__assert_fail@plt+0x35ec>
   149a8:	movw	r0, #0
   149ac:	str	r0, [fp, #-4]
   149b0:	b	15028 <__assert_fail@plt+0x3c60>
   149b4:	ldr	r0, [fp, #-12]
   149b8:	ldr	r0, [r0, #32]
   149bc:	cmp	r0, #0
   149c0:	beq	149e0 <__assert_fail@plt+0x3618>
   149c4:	ldr	r0, [fp, #-12]
   149c8:	ldrh	r0, [r0, #56]	; 0x38
   149cc:	cmp	r0, #4
   149d0:	beq	149e0 <__assert_fail@plt+0x3618>
   149d4:	ldr	r0, [fp, #-12]
   149d8:	movw	r1, #7
   149dc:	strh	r1, [r0, #56]	; 0x38
   149e0:	b	149e4 <__assert_fail@plt+0x361c>
   149e4:	ldr	r0, [fp, #-8]
   149e8:	ldr	r1, [fp, #-12]
   149ec:	bl	15034 <__assert_fail@plt+0x3c6c>
   149f0:	ldr	r0, [fp, #-12]
   149f4:	str	r0, [fp, #-4]
   149f8:	b	15028 <__assert_fail@plt+0x3c60>
   149fc:	b	14a00 <__assert_fail@plt+0x3638>
   14a00:	ldr	r0, [fp, #-8]
   14a04:	ldr	r0, [r0, #4]
   14a08:	str	r0, [fp, #-12]
   14a0c:	ldr	r0, [fp, #-8]
   14a10:	movw	r1, #0
   14a14:	str	r1, [r0, #4]
   14a18:	b	14c24 <__assert_fail@plt+0x385c>
   14a1c:	b	14a20 <__assert_fail@plt+0x3658>
   14a20:	ldr	r0, [fp, #-12]
   14a24:	str	r0, [fp, #-16]
   14a28:	ldr	r0, [fp, #-12]
   14a2c:	ldr	r0, [r0, #8]
   14a30:	movw	r1, #0
   14a34:	cmp	r0, r1
   14a38:	bne	14ad4 <__assert_fail@plt+0x370c>
   14a3c:	ldr	r0, [fp, #-12]
   14a40:	ldr	r0, [r0, #4]
   14a44:	ldr	r0, [r0, #12]
   14a48:	movw	r1, #0
   14a4c:	cmp	r0, r1
   14a50:	beq	14ad4 <__assert_fail@plt+0x370c>
   14a54:	ldr	r0, [fp, #-16]
   14a58:	ldr	r0, [r0, #4]
   14a5c:	str	r0, [fp, #-12]
   14a60:	ldr	r0, [fp, #-12]
   14a64:	ldr	r1, [fp, #-8]
   14a68:	str	r0, [r1]
   14a6c:	ldr	r0, [fp, #-8]
   14a70:	ldr	r0, [r0, #24]
   14a74:	ldr	r1, [fp, #-12]
   14a78:	ldr	r1, [r1, #40]	; 0x28
   14a7c:	add	r0, r0, r1
   14a80:	movw	r1, #0
   14a84:	strb	r1, [r0]
   14a88:	ldr	r0, [fp, #-8]
   14a8c:	movw	r1, #3
   14a90:	bl	15494 <__assert_fail@plt+0x40cc>
   14a94:	str	r0, [fp, #-12]
   14a98:	movw	r1, #0
   14a9c:	cmp	r0, r1
   14aa0:	bne	14ac8 <__assert_fail@plt+0x3700>
   14aa4:	ldr	r0, [fp, #-8]
   14aa8:	ldr	r0, [r0, #48]	; 0x30
   14aac:	and	r0, r0, #8192	; 0x2000
   14ab0:	cmp	r0, #0
   14ab4:	beq	14ac4 <__assert_fail@plt+0x36fc>
   14ab8:	movw	r0, #0
   14abc:	str	r0, [fp, #-4]
   14ac0:	b	15028 <__assert_fail@plt+0x3c60>
   14ac4:	b	14dcc <__assert_fail@plt+0x3a04>
   14ac8:	ldr	r0, [fp, #-16]
   14acc:	bl	208f4 <__assert_fail@plt+0xf52c>
   14ad0:	b	14c24 <__assert_fail@plt+0x385c>
   14ad4:	ldr	r0, [fp, #-12]
   14ad8:	ldr	r0, [r0, #8]
   14adc:	str	r0, [fp, #-12]
   14ae0:	movw	r1, #0
   14ae4:	cmp	r0, r1
   14ae8:	beq	14dc8 <__assert_fail@plt+0x3a00>
   14aec:	ldr	r0, [fp, #-12]
   14af0:	ldr	r1, [fp, #-8]
   14af4:	str	r0, [r1]
   14af8:	ldr	r0, [fp, #-16]
   14afc:	bl	208f4 <__assert_fail@plt+0xf52c>
   14b00:	ldr	r0, [fp, #-12]
   14b04:	ldr	r0, [r0, #48]	; 0x30
   14b08:	cmp	r0, #0
   14b0c:	bne	14b5c <__assert_fail@plt+0x3794>
   14b10:	ldr	r0, [fp, #-8]
   14b14:	bl	16158 <__assert_fail@plt+0x4d90>
   14b18:	cmp	r0, #0
   14b1c:	beq	14b3c <__assert_fail@plt+0x3774>
   14b20:	ldr	r0, [fp, #-8]
   14b24:	ldr	r1, [r0, #48]	; 0x30
   14b28:	orr	r1, r1, #8192	; 0x2000
   14b2c:	str	r1, [r0, #48]	; 0x30
   14b30:	movw	r0, #0
   14b34:	str	r0, [fp, #-4]
   14b38:	b	15028 <__assert_fail@plt+0x3c60>
   14b3c:	ldr	r0, [fp, #-8]
   14b40:	bl	145f4 <__assert_fail@plt+0x322c>
   14b44:	ldr	r0, [fp, #-8]
   14b48:	ldr	r1, [fp, #-12]
   14b4c:	bl	16268 <__assert_fail@plt+0x4ea0>
   14b50:	ldr	r0, [fp, #-8]
   14b54:	bl	141b8 <__assert_fail@plt+0x2df0>
   14b58:	b	14cc4 <__assert_fail@plt+0x38fc>
   14b5c:	ldr	r0, [fp, #-12]
   14b60:	ldrh	r0, [r0, #60]	; 0x3c
   14b64:	cmp	r0, #4
   14b68:	bne	14b70 <__assert_fail@plt+0x37a8>
   14b6c:	b	14a20 <__assert_fail@plt+0x3658>
   14b70:	ldr	r0, [fp, #-12]
   14b74:	ldrh	r0, [r0, #60]	; 0x3c
   14b78:	cmp	r0, #2
   14b7c:	bne	14c20 <__assert_fail@plt+0x3858>
   14b80:	ldr	r0, [fp, #-8]
   14b84:	ldr	r1, [fp, #-12]
   14b88:	movw	r2, #1
   14b8c:	and	r2, r2, #1
   14b90:	bl	13dd8 <__assert_fail@plt+0x2a10>
   14b94:	ldr	r1, [fp, #-12]
   14b98:	strh	r0, [r1, #56]	; 0x38
   14b9c:	ldr	r0, [fp, #-12]
   14ba0:	ldrh	r0, [r0, #56]	; 0x38
   14ba4:	cmp	r0, #1
   14ba8:	bne	14c14 <__assert_fail@plt+0x384c>
   14bac:	ldr	r0, [fp, #-8]
   14bb0:	ldr	r0, [r0, #48]	; 0x30
   14bb4:	and	r0, r0, #4
   14bb8:	cmp	r0, #0
   14bbc:	bne	14c14 <__assert_fail@plt+0x384c>
   14bc0:	ldr	r0, [fp, #-8]
   14bc4:	movw	r1, #13868	; 0x362c
   14bc8:	movt	r1, #2
   14bcc:	bl	14294 <__assert_fail@plt+0x2ecc>
   14bd0:	ldr	r1, [fp, #-12]
   14bd4:	str	r0, [r1, #36]	; 0x24
   14bd8:	cmp	r0, #0
   14bdc:	bge	14c00 <__assert_fail@plt+0x3838>
   14be0:	bl	11290 <__errno_location@plt>
   14be4:	ldr	r0, [r0]
   14be8:	ldr	r1, [fp, #-12]
   14bec:	str	r0, [r1, #32]
   14bf0:	ldr	r0, [fp, #-12]
   14bf4:	movw	r1, #7
   14bf8:	strh	r1, [r0, #56]	; 0x38
   14bfc:	b	14c10 <__assert_fail@plt+0x3848>
   14c00:	ldr	r0, [fp, #-12]
   14c04:	ldrh	r1, [r0, #58]	; 0x3a
   14c08:	orr	r1, r1, #2
   14c0c:	strh	r1, [r0, #58]	; 0x3a
   14c10:	b	14c14 <__assert_fail@plt+0x384c>
   14c14:	ldr	r0, [fp, #-12]
   14c18:	movw	r1, #3
   14c1c:	strh	r1, [r0, #60]	; 0x3c
   14c20:	b	14c24 <__assert_fail@plt+0x385c>
   14c24:	ldr	r0, [fp, #-8]
   14c28:	ldr	r0, [r0, #24]
   14c2c:	ldr	r1, [fp, #-12]
   14c30:	ldr	r1, [r1, #4]
   14c34:	ldr	r1, [r1, #28]
   14c38:	ldr	r2, [fp, #-12]
   14c3c:	ldr	r2, [r2, #4]
   14c40:	ldr	r2, [r2, #40]	; 0x28
   14c44:	sub	r2, r2, #1
   14c48:	add	r1, r1, r2
   14c4c:	ldrb	r1, [r1]
   14c50:	cmp	r1, #47	; 0x2f
   14c54:	str	r0, [sp, #12]
   14c58:	bne	14c74 <__assert_fail@plt+0x38ac>
   14c5c:	ldr	r0, [fp, #-12]
   14c60:	ldr	r0, [r0, #4]
   14c64:	ldr	r0, [r0, #40]	; 0x28
   14c68:	sub	r0, r0, #1
   14c6c:	str	r0, [sp, #8]
   14c70:	b	14c84 <__assert_fail@plt+0x38bc>
   14c74:	ldr	r0, [fp, #-12]
   14c78:	ldr	r0, [r0, #4]
   14c7c:	ldr	r0, [r0, #40]	; 0x28
   14c80:	str	r0, [sp, #8]
   14c84:	ldr	r0, [sp, #8]
   14c88:	ldr	r1, [sp, #12]
   14c8c:	add	r0, r1, r0
   14c90:	str	r0, [sp, #16]
   14c94:	ldr	r0, [sp, #16]
   14c98:	add	r2, r0, #1
   14c9c:	str	r2, [sp, #16]
   14ca0:	movw	r2, #47	; 0x2f
   14ca4:	strb	r2, [r0]
   14ca8:	ldr	r0, [sp, #16]
   14cac:	ldr	r2, [fp, #-12]
   14cb0:	add	r1, r2, #168	; 0xa8
   14cb4:	ldr	r2, [fp, #-12]
   14cb8:	ldr	r2, [r2, #52]	; 0x34
   14cbc:	add	r2, r2, #1
   14cc0:	bl	11128 <memmove@plt>
   14cc4:	ldr	r0, [fp, #-12]
   14cc8:	ldr	r1, [fp, #-8]
   14ccc:	str	r0, [r1]
   14cd0:	ldr	r0, [fp, #-12]
   14cd4:	ldrh	r0, [r0, #56]	; 0x38
   14cd8:	cmp	r0, #11
   14cdc:	bne	14d54 <__assert_fail@plt+0x398c>
   14ce0:	ldr	r0, [fp, #-12]
   14ce4:	ldr	r1, [r0, #112]	; 0x70
   14ce8:	ldr	r0, [r0, #116]	; 0x74
   14cec:	eor	r1, r1, #2
   14cf0:	orr	r0, r1, r0
   14cf4:	cmp	r0, #0
   14cf8:	bne	14d20 <__assert_fail@plt+0x3958>
   14cfc:	b	14d00 <__assert_fail@plt+0x3938>
   14d00:	ldr	r0, [fp, #-8]
   14d04:	ldr	r1, [fp, #-12]
   14d08:	movw	r2, #0
   14d0c:	and	r2, r2, #1
   14d10:	bl	13dd8 <__assert_fail@plt+0x2a10>
   14d14:	ldr	r1, [fp, #-12]
   14d18:	strh	r0, [r1, #56]	; 0x38
   14d1c:	b	14d50 <__assert_fail@plt+0x3988>
   14d20:	b	14d24 <__assert_fail@plt+0x395c>
   14d24:	ldr	r0, [fp, #-12]
   14d28:	ldr	r1, [r0, #112]	; 0x70
   14d2c:	ldr	r0, [r0, #116]	; 0x74
   14d30:	eor	r1, r1, #1
   14d34:	orr	r0, r1, r0
   14d38:	cmp	r0, #0
   14d3c:	beq	14d48 <__assert_fail@plt+0x3980>
   14d40:	b	14d44 <__assert_fail@plt+0x397c>
   14d44:	bl	11398 <abort@plt>
   14d48:	b	14d4c <__assert_fail@plt+0x3984>
   14d4c:	b	14d50 <__assert_fail@plt+0x3988>
   14d50:	b	14d54 <__assert_fail@plt+0x398c>
   14d54:	ldr	r0, [fp, #-12]
   14d58:	ldrh	r0, [r0, #56]	; 0x38
   14d5c:	cmp	r0, #1
   14d60:	bne	14dbc <__assert_fail@plt+0x39f4>
   14d64:	ldr	r0, [fp, #-12]
   14d68:	ldr	r0, [r0, #48]	; 0x30
   14d6c:	cmp	r0, #0
   14d70:	bne	14d8c <__assert_fail@plt+0x39c4>
   14d74:	ldr	r0, [fp, #-12]
   14d78:	ldr	r1, [r0, #64]	; 0x40
   14d7c:	ldr	r0, [r0, #68]	; 0x44
   14d80:	ldr	r2, [fp, #-8]
   14d84:	str	r0, [r2, #20]
   14d88:	str	r1, [r2, #16]
   14d8c:	ldr	r0, [fp, #-8]
   14d90:	ldr	r1, [fp, #-12]
   14d94:	bl	16348 <__assert_fail@plt+0x4f80>
   14d98:	tst	r0, #1
   14d9c:	bne	14db8 <__assert_fail@plt+0x39f0>
   14da0:	bl	11290 <__errno_location@plt>
   14da4:	movw	r1, #12
   14da8:	str	r1, [r0]
   14dac:	movw	r0, #0
   14db0:	str	r0, [fp, #-4]
   14db4:	b	15028 <__assert_fail@plt+0x3c60>
   14db8:	b	14dbc <__assert_fail@plt+0x39f4>
   14dbc:	ldr	r0, [fp, #-12]
   14dc0:	str	r0, [fp, #-4]
   14dc4:	b	15028 <__assert_fail@plt+0x3c60>
   14dc8:	b	14dcc <__assert_fail@plt+0x3a04>
   14dcc:	ldr	r0, [fp, #-16]
   14dd0:	ldr	r0, [r0, #4]
   14dd4:	str	r0, [fp, #-12]
   14dd8:	ldr	r0, [fp, #-12]
   14ddc:	ldr	r1, [fp, #-8]
   14de0:	str	r0, [r1]
   14de4:	ldr	r0, [fp, #-16]
   14de8:	bl	208f4 <__assert_fail@plt+0xf52c>
   14dec:	ldr	r0, [fp, #-12]
   14df0:	ldr	r0, [r0, #48]	; 0x30
   14df4:	cmn	r0, #1
   14df8:	bne	14e20 <__assert_fail@plt+0x3a58>
   14dfc:	ldr	r0, [fp, #-12]
   14e00:	bl	208f4 <__assert_fail@plt+0xf52c>
   14e04:	bl	11290 <__errno_location@plt>
   14e08:	movw	r1, #0
   14e0c:	str	r1, [r0]
   14e10:	ldr	r0, [fp, #-8]
   14e14:	str	r1, [r0]
   14e18:	str	r1, [fp, #-4]
   14e1c:	b	15028 <__assert_fail@plt+0x3c60>
   14e20:	b	14e24 <__assert_fail@plt+0x3a5c>
   14e24:	ldr	r0, [fp, #-12]
   14e28:	ldrh	r0, [r0, #56]	; 0x38
   14e2c:	cmp	r0, #11
   14e30:	bne	14e38 <__assert_fail@plt+0x3a70>
   14e34:	bl	11398 <abort@plt>
   14e38:	b	14e3c <__assert_fail@plt+0x3a74>
   14e3c:	ldr	r0, [fp, #-8]
   14e40:	ldr	r0, [r0, #24]
   14e44:	ldr	r1, [fp, #-12]
   14e48:	ldr	r1, [r1, #40]	; 0x28
   14e4c:	add	r0, r0, r1
   14e50:	movw	r1, #0
   14e54:	strb	r1, [r0]
   14e58:	ldr	r0, [fp, #-12]
   14e5c:	ldr	r0, [r0, #48]	; 0x30
   14e60:	cmp	r0, #0
   14e64:	bne	14e9c <__assert_fail@plt+0x3ad4>
   14e68:	ldr	r0, [fp, #-8]
   14e6c:	bl	16158 <__assert_fail@plt+0x4d90>
   14e70:	cmp	r0, #0
   14e74:	beq	14e98 <__assert_fail@plt+0x3ad0>
   14e78:	bl	11290 <__errno_location@plt>
   14e7c:	ldr	r0, [r0]
   14e80:	ldr	r1, [fp, #-12]
   14e84:	str	r0, [r1, #32]
   14e88:	ldr	r0, [fp, #-8]
   14e8c:	ldr	r1, [r0, #48]	; 0x30
   14e90:	orr	r1, r1, #8192	; 0x2000
   14e94:	str	r1, [r0, #48]	; 0x30
   14e98:	b	14f98 <__assert_fail@plt+0x3bd0>
   14e9c:	ldr	r0, [fp, #-12]
   14ea0:	ldrh	r0, [r0, #58]	; 0x3a
   14ea4:	and	r0, r0, #2
   14ea8:	cmp	r0, #0
   14eac:	beq	14f38 <__assert_fail@plt+0x3b70>
   14eb0:	ldr	r0, [fp, #-8]
   14eb4:	ldr	r0, [r0, #48]	; 0x30
   14eb8:	and	r0, r0, #4
   14ebc:	cmp	r0, #0
   14ec0:	bne	14f28 <__assert_fail@plt+0x3b60>
   14ec4:	ldr	r0, [fp, #-8]
   14ec8:	ldr	r0, [r0, #48]	; 0x30
   14ecc:	and	r0, r0, #512	; 0x200
   14ed0:	cmp	r0, #0
   14ed4:	beq	14ef4 <__assert_fail@plt+0x3b2c>
   14ed8:	ldr	r0, [fp, #-8]
   14edc:	ldr	r1, [fp, #-12]
   14ee0:	ldr	r1, [r1, #36]	; 0x24
   14ee4:	movw	r2, #1
   14ee8:	and	r2, r2, #1
   14eec:	bl	164a8 <__assert_fail@plt+0x50e0>
   14ef0:	b	14f28 <__assert_fail@plt+0x3b60>
   14ef4:	ldr	r0, [fp, #-12]
   14ef8:	ldr	r0, [r0, #36]	; 0x24
   14efc:	bl	11338 <fchdir@plt>
   14f00:	cmp	r0, #0
   14f04:	beq	14f28 <__assert_fail@plt+0x3b60>
   14f08:	bl	11290 <__errno_location@plt>
   14f0c:	ldr	r0, [r0]
   14f10:	ldr	r1, [fp, #-12]
   14f14:	str	r0, [r1, #32]
   14f18:	ldr	r0, [fp, #-8]
   14f1c:	ldr	r1, [r0, #48]	; 0x30
   14f20:	orr	r1, r1, #8192	; 0x2000
   14f24:	str	r1, [r0, #48]	; 0x30
   14f28:	ldr	r0, [fp, #-12]
   14f2c:	ldr	r0, [r0, #36]	; 0x24
   14f30:	bl	113a4 <close@plt>
   14f34:	b	14f94 <__assert_fail@plt+0x3bcc>
   14f38:	ldr	r0, [fp, #-12]
   14f3c:	ldrh	r0, [r0, #58]	; 0x3a
   14f40:	and	r0, r0, #1
   14f44:	cmp	r0, #0
   14f48:	bne	14f90 <__assert_fail@plt+0x3bc8>
   14f4c:	ldr	r0, [fp, #-8]
   14f50:	ldr	r1, [fp, #-12]
   14f54:	ldr	r1, [r1, #4]
   14f58:	mvn	r2, #0
   14f5c:	movw	r3, #13867	; 0x362b
   14f60:	movt	r3, #2
   14f64:	bl	151d4 <__assert_fail@plt+0x3e0c>
   14f68:	cmp	r0, #0
   14f6c:	beq	14f90 <__assert_fail@plt+0x3bc8>
   14f70:	bl	11290 <__errno_location@plt>
   14f74:	ldr	r0, [r0]
   14f78:	ldr	r1, [fp, #-12]
   14f7c:	str	r0, [r1, #32]
   14f80:	ldr	r0, [fp, #-8]
   14f84:	ldr	r1, [r0, #48]	; 0x30
   14f88:	orr	r1, r1, #8192	; 0x2000
   14f8c:	str	r1, [r0, #48]	; 0x30
   14f90:	b	14f94 <__assert_fail@plt+0x3bcc>
   14f94:	b	14f98 <__assert_fail@plt+0x3bd0>
   14f98:	ldr	r0, [fp, #-12]
   14f9c:	ldrh	r0, [r0, #56]	; 0x38
   14fa0:	cmp	r0, #2
   14fa4:	beq	14ff8 <__assert_fail@plt+0x3c30>
   14fa8:	ldr	r0, [fp, #-12]
   14fac:	ldr	r0, [r0, #32]
   14fb0:	cmp	r0, #0
   14fb4:	movw	r0, #0
   14fb8:	movne	r0, #1
   14fbc:	tst	r0, #1
   14fc0:	movw	r0, #7
   14fc4:	moveq	r0, #6
   14fc8:	ldr	r1, [fp, #-12]
   14fcc:	strh	r0, [r1, #56]	; 0x38
   14fd0:	ldr	r0, [fp, #-12]
   14fd4:	ldr	r0, [r0, #32]
   14fd8:	cmp	r0, #0
   14fdc:	bne	14ff4 <__assert_fail@plt+0x3c2c>
   14fe0:	b	14fe4 <__assert_fail@plt+0x3c1c>
   14fe4:	ldr	r0, [fp, #-8]
   14fe8:	ldr	r1, [fp, #-12]
   14fec:	bl	15034 <__assert_fail@plt+0x3c6c>
   14ff0:	b	14ff4 <__assert_fail@plt+0x3c2c>
   14ff4:	b	14ff8 <__assert_fail@plt+0x3c30>
   14ff8:	ldr	r0, [fp, #-8]
   14ffc:	ldr	r0, [r0, #48]	; 0x30
   15000:	and	r0, r0, #8192	; 0x2000
   15004:	cmp	r0, #0
   15008:	beq	15018 <__assert_fail@plt+0x3c50>
   1500c:	movw	r0, #0
   15010:	str	r0, [sp, #4]
   15014:	b	15020 <__assert_fail@plt+0x3c58>
   15018:	ldr	r0, [fp, #-12]
   1501c:	str	r0, [sp, #4]
   15020:	ldr	r0, [sp, #4]
   15024:	str	r0, [fp, #-4]
   15028:	ldr	r0, [fp, #-4]
   1502c:	mov	sp, fp
   15030:	pop	{fp, pc}
   15034:	push	{fp, lr}
   15038:	mov	fp, sp
   1503c:	sub	sp, sp, #48	; 0x30
   15040:	str	r0, [fp, #-4]
   15044:	str	r1, [fp, #-8]
   15048:	ldr	r0, [fp, #-8]
   1504c:	add	r0, r0, #64	; 0x40
   15050:	str	r0, [fp, #-12]
   15054:	ldr	r0, [fp, #-4]
   15058:	ldr	r0, [r0, #48]	; 0x30
   1505c:	movw	r1, #258	; 0x102
   15060:	and	r0, r0, r1
   15064:	cmp	r0, #0
   15068:	beq	150c8 <__assert_fail@plt+0x3d00>
   1506c:	ldr	r0, [fp, #-12]
   15070:	ldr	r1, [r0]
   15074:	ldr	r0, [r0, #4]
   15078:	str	r0, [sp, #12]
   1507c:	str	r1, [sp, #8]
   15080:	ldr	r0, [fp, #-12]
   15084:	ldr	r1, [r0, #96]	; 0x60
   15088:	ldr	r0, [r0, #100]	; 0x64
   1508c:	str	r0, [sp, #20]
   15090:	str	r1, [sp, #16]
   15094:	ldr	r0, [fp, #-4]
   15098:	ldr	r0, [r0, #56]	; 0x38
   1509c:	add	r1, sp, #8
   150a0:	bl	18854 <__assert_fail@plt+0x748c>
   150a4:	str	r0, [sp, #4]
   150a8:	ldr	r0, [sp, #4]
   150ac:	movw	r1, #0
   150b0:	cmp	r0, r1
   150b4:	bne	150bc <__assert_fail@plt+0x3cf4>
   150b8:	bl	11398 <abort@plt>
   150bc:	ldr	r0, [sp, #4]
   150c0:	bl	208f4 <__assert_fail@plt+0xf52c>
   150c4:	b	151cc <__assert_fail@plt+0x3e04>
   150c8:	ldr	r0, [fp, #-8]
   150cc:	ldr	r0, [r0, #4]
   150d0:	str	r0, [sp]
   150d4:	ldr	r0, [sp]
   150d8:	movw	r1, #0
   150dc:	cmp	r0, r1
   150e0:	beq	151c8 <__assert_fail@plt+0x3e00>
   150e4:	ldr	r0, [sp]
   150e8:	ldr	r0, [r0, #48]	; 0x30
   150ec:	movw	r1, #0
   150f0:	cmp	r1, r0
   150f4:	bgt	151c8 <__assert_fail@plt+0x3e00>
   150f8:	b	150fc <__assert_fail@plt+0x3d34>
   150fc:	ldr	r0, [fp, #-4]
   15100:	ldr	r0, [r0, #56]	; 0x38
   15104:	ldr	r1, [r0, #16]
   15108:	ldr	r0, [r0, #20]
   1510c:	orr	r0, r1, r0
   15110:	cmp	r0, #0
   15114:	bne	15120 <__assert_fail@plt+0x3d58>
   15118:	b	1511c <__assert_fail@plt+0x3d54>
   1511c:	bl	11398 <abort@plt>
   15120:	ldr	r0, [fp, #-4]
   15124:	ldr	r0, [r0, #56]	; 0x38
   15128:	ldr	r1, [r0]
   1512c:	ldr	r0, [r0, #4]
   15130:	ldr	r2, [fp, #-12]
   15134:	ldr	r3, [r2, #96]	; 0x60
   15138:	ldr	r2, [r2, #100]	; 0x64
   1513c:	eor	r0, r0, r2
   15140:	eor	r1, r1, r3
   15144:	orr	r0, r1, r0
   15148:	cmp	r0, #0
   1514c:	bne	151c0 <__assert_fail@plt+0x3df8>
   15150:	b	15154 <__assert_fail@plt+0x3d8c>
   15154:	ldr	r0, [fp, #-4]
   15158:	ldr	r0, [r0, #56]	; 0x38
   1515c:	ldr	r1, [r0, #8]
   15160:	ldr	r0, [r0, #12]
   15164:	ldr	r2, [fp, #-12]
   15168:	ldr	r3, [r2]
   1516c:	ldr	r2, [r2, #4]
   15170:	eor	r0, r0, r2
   15174:	eor	r1, r1, r3
   15178:	orr	r0, r1, r0
   1517c:	cmp	r0, #0
   15180:	bne	151c0 <__assert_fail@plt+0x3df8>
   15184:	b	15188 <__assert_fail@plt+0x3dc0>
   15188:	ldr	r0, [sp]
   1518c:	ldr	r1, [r0, #64]	; 0x40
   15190:	ldr	r0, [r0, #68]	; 0x44
   15194:	ldr	r2, [fp, #-4]
   15198:	ldr	r2, [r2, #56]	; 0x38
   1519c:	str	r0, [r2, #12]
   151a0:	str	r1, [r2, #8]
   151a4:	ldr	r0, [sp]
   151a8:	ldr	r1, [r0, #160]	; 0xa0
   151ac:	ldr	r0, [r0, #164]	; 0xa4
   151b0:	ldr	r2, [fp, #-4]
   151b4:	ldr	r2, [r2, #56]	; 0x38
   151b8:	str	r0, [r2, #4]
   151bc:	str	r1, [r2]
   151c0:	b	151c4 <__assert_fail@plt+0x3dfc>
   151c4:	b	151c8 <__assert_fail@plt+0x3e00>
   151c8:	b	151cc <__assert_fail@plt+0x3e04>
   151cc:	mov	sp, fp
   151d0:	pop	{fp, pc}
   151d4:	push	{fp, lr}
   151d8:	mov	fp, sp
   151dc:	sub	sp, sp, #160	; 0xa0
   151e0:	str	r0, [fp, #-8]
   151e4:	str	r1, [fp, #-12]
   151e8:	str	r2, [fp, #-16]
   151ec:	str	r3, [fp, #-20]	; 0xffffffec
   151f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   151f4:	movw	r1, #0
   151f8:	cmp	r0, r1
   151fc:	movw	r0, #0
   15200:	str	r0, [sp, #8]
   15204:	beq	15228 <__assert_fail@plt+0x3e60>
   15208:	ldr	r0, [fp, #-20]	; 0xffffffec
   1520c:	movw	r1, #13867	; 0x362b
   15210:	movt	r1, #2
   15214:	bl	11104 <strcmp@plt>
   15218:	cmp	r0, #0
   1521c:	movw	r0, #0
   15220:	moveq	r0, #1
   15224:	str	r0, [sp, #8]
   15228:	ldr	r0, [sp, #8]
   1522c:	and	r0, r0, #1
   15230:	strb	r0, [fp, #-25]	; 0xffffffe7
   15234:	ldr	r0, [fp, #-8]
   15238:	ldr	r0, [r0, #48]	; 0x30
   1523c:	and	r0, r0, #4
   15240:	cmp	r0, #0
   15244:	beq	15280 <__assert_fail@plt+0x3eb8>
   15248:	ldr	r0, [fp, #-8]
   1524c:	ldr	r0, [r0, #48]	; 0x30
   15250:	and	r0, r0, #512	; 0x200
   15254:	cmp	r0, #0
   15258:	beq	15274 <__assert_fail@plt+0x3eac>
   1525c:	ldr	r0, [fp, #-16]
   15260:	movw	r1, #0
   15264:	cmp	r1, r0
   15268:	bgt	15274 <__assert_fail@plt+0x3eac>
   1526c:	ldr	r0, [fp, #-16]
   15270:	bl	113a4 <close@plt>
   15274:	movw	r0, #0
   15278:	str	r0, [fp, #-4]
   1527c:	b	15488 <__assert_fail@plt+0x40c0>
   15280:	ldr	r0, [fp, #-16]
   15284:	cmp	r0, #0
   15288:	bge	152f8 <__assert_fail@plt+0x3f30>
   1528c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15290:	tst	r0, #1
   15294:	beq	152f8 <__assert_fail@plt+0x3f30>
   15298:	ldr	r0, [fp, #-8]
   1529c:	ldr	r0, [r0, #48]	; 0x30
   152a0:	and	r0, r0, #512	; 0x200
   152a4:	cmp	r0, #0
   152a8:	beq	152f8 <__assert_fail@plt+0x3f30>
   152ac:	ldr	r0, [fp, #-8]
   152b0:	add	r0, r0, #60	; 0x3c
   152b4:	bl	18c84 <__assert_fail@plt+0x78bc>
   152b8:	tst	r0, #1
   152bc:	bne	152f4 <__assert_fail@plt+0x3f2c>
   152c0:	ldr	r0, [fp, #-8]
   152c4:	add	r0, r0, #60	; 0x3c
   152c8:	bl	18d54 <__assert_fail@plt+0x798c>
   152cc:	str	r0, [fp, #-36]	; 0xffffffdc
   152d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152d4:	movw	r1, #0
   152d8:	cmp	r1, r0
   152dc:	bgt	152f0 <__assert_fail@plt+0x3f28>
   152e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152e4:	str	r0, [fp, #-16]
   152e8:	movw	r0, #0
   152ec:	str	r0, [fp, #-20]	; 0xffffffec
   152f0:	b	152f4 <__assert_fail@plt+0x3f2c>
   152f4:	b	152f8 <__assert_fail@plt+0x3f30>
   152f8:	ldr	r0, [fp, #-16]
   152fc:	str	r0, [fp, #-32]	; 0xffffffe0
   15300:	ldr	r0, [fp, #-16]
   15304:	cmp	r0, #0
   15308:	bge	15330 <__assert_fail@plt+0x3f68>
   1530c:	ldr	r0, [fp, #-8]
   15310:	ldr	r1, [fp, #-20]	; 0xffffffec
   15314:	bl	14294 <__assert_fail@plt+0x2ecc>
   15318:	str	r0, [fp, #-32]	; 0xffffffe0
   1531c:	cmp	r0, #0
   15320:	bge	15330 <__assert_fail@plt+0x3f68>
   15324:	mvn	r0, #0
   15328:	str	r0, [fp, #-4]
   1532c:	b	15488 <__assert_fail@plt+0x40c0>
   15330:	ldr	r0, [fp, #-8]
   15334:	ldr	r0, [r0, #48]	; 0x30
   15338:	and	r0, r0, #2
   1533c:	cmp	r0, #0
   15340:	bne	1536c <__assert_fail@plt+0x3fa4>
   15344:	ldr	r0, [fp, #-20]	; 0xffffffec
   15348:	movw	r1, #0
   1534c:	cmp	r0, r1
   15350:	beq	15400 <__assert_fail@plt+0x4038>
   15354:	ldr	r0, [fp, #-20]	; 0xffffffec
   15358:	movw	r1, #13867	; 0x362b
   1535c:	movt	r1, #2
   15360:	bl	11104 <strcmp@plt>
   15364:	cmp	r0, #0
   15368:	bne	15400 <__assert_fail@plt+0x4038>
   1536c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15370:	add	r1, sp, #16
   15374:	bl	22b90 <__assert_fail@plt+0x117c8>
   15378:	cmp	r0, #0
   1537c:	beq	1538c <__assert_fail@plt+0x3fc4>
   15380:	mvn	r0, #0
   15384:	str	r0, [fp, #-24]	; 0xffffffe8
   15388:	b	15448 <__assert_fail@plt+0x4080>
   1538c:	ldr	r0, [fp, #-12]
   15390:	ldr	r1, [r0, #64]	; 0x40
   15394:	ldr	r0, [r0, #68]	; 0x44
   15398:	ldr	r2, [sp, #16]
   1539c:	ldr	r3, [sp, #20]
   153a0:	eor	r0, r0, r3
   153a4:	eor	r1, r1, r2
   153a8:	orr	r0, r1, r0
   153ac:	cmp	r0, #0
   153b0:	bne	153e4 <__assert_fail@plt+0x401c>
   153b4:	b	153b8 <__assert_fail@plt+0x3ff0>
   153b8:	ldr	r0, [fp, #-12]
   153bc:	ldr	r1, [r0, #160]	; 0xa0
   153c0:	ldr	r0, [r0, #164]	; 0xa4
   153c4:	ldr	r2, [sp, #112]	; 0x70
   153c8:	ldr	r3, [sp, #116]	; 0x74
   153cc:	eor	r0, r0, r3
   153d0:	eor	r1, r1, r2
   153d4:	orr	r0, r1, r0
   153d8:	cmp	r0, #0
   153dc:	beq	153fc <__assert_fail@plt+0x4034>
   153e0:	b	153e4 <__assert_fail@plt+0x401c>
   153e4:	bl	11290 <__errno_location@plt>
   153e8:	movw	r1, #2
   153ec:	str	r1, [r0]
   153f0:	mvn	r0, #0
   153f4:	str	r0, [fp, #-24]	; 0xffffffe8
   153f8:	b	15448 <__assert_fail@plt+0x4080>
   153fc:	b	15400 <__assert_fail@plt+0x4038>
   15400:	ldr	r0, [fp, #-8]
   15404:	ldr	r0, [r0, #48]	; 0x30
   15408:	and	r0, r0, #512	; 0x200
   1540c:	cmp	r0, #0
   15410:	beq	1543c <__assert_fail@plt+0x4074>
   15414:	ldr	r0, [fp, #-8]
   15418:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1541c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   15420:	mvn	r3, #0
   15424:	eor	r2, r2, r3
   15428:	and	r2, r2, #1
   1542c:	bl	164a8 <__assert_fail@plt+0x50e0>
   15430:	movw	r0, #0
   15434:	str	r0, [fp, #-4]
   15438:	b	15488 <__assert_fail@plt+0x40c0>
   1543c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15440:	bl	11338 <fchdir@plt>
   15444:	str	r0, [fp, #-24]	; 0xffffffe8
   15448:	ldr	r0, [fp, #-16]
   1544c:	cmp	r0, #0
   15450:	bge	15480 <__assert_fail@plt+0x40b8>
   15454:	bl	11290 <__errno_location@plt>
   15458:	ldr	r0, [r0]
   1545c:	str	r0, [sp, #12]
   15460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15464:	bl	113a4 <close@plt>
   15468:	ldr	r1, [sp, #12]
   1546c:	str	r0, [sp, #4]
   15470:	str	r1, [sp]
   15474:	bl	11290 <__errno_location@plt>
   15478:	ldr	r1, [sp]
   1547c:	str	r1, [r0]
   15480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15484:	str	r0, [fp, #-4]
   15488:	ldr	r0, [fp, #-4]
   1548c:	mov	sp, fp
   15490:	pop	{fp, pc}
   15494:	push	{fp, lr}
   15498:	mov	fp, sp
   1549c:	sub	sp, sp, #152	; 0x98
   154a0:	str	r0, [fp, #-8]
   154a4:	str	r1, [fp, #-12]
   154a8:	ldr	r0, [fp, #-8]
   154ac:	ldr	r0, [r0]
   154b0:	str	r0, [fp, #-68]	; 0xffffffbc
   154b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   154b8:	ldr	r0, [r0, #12]
   154bc:	movw	r1, #0
   154c0:	cmp	r0, r1
   154c4:	movw	r0, #0
   154c8:	movne	r0, #1
   154cc:	mvn	r1, #0
   154d0:	eor	r0, r0, r1
   154d4:	eor	r0, r0, r1
   154d8:	and	r0, r0, #1
   154dc:	strb	r0, [fp, #-69]	; 0xffffffbb
   154e0:	movw	r0, #0
   154e4:	strb	r0, [fp, #-70]	; 0xffffffba
   154e8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   154ec:	tst	r0, #1
   154f0:	beq	1556c <__assert_fail@plt+0x41a4>
   154f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   154f8:	ldr	r0, [r0, #12]
   154fc:	str	r0, [sp, #72]	; 0x48
   15500:	ldr	r0, [sp, #72]	; 0x48
   15504:	bl	1132c <dirfd@plt>
   15508:	str	r0, [fp, #-64]	; 0xffffffc0
   1550c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15510:	cmp	r0, #0
   15514:	bge	15568 <__assert_fail@plt+0x41a0>
   15518:	b	1551c <__assert_fail@plt+0x4154>
   1551c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15520:	ldr	r0, [r0, #12]
   15524:	bl	113bc <closedir@plt>
   15528:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1552c:	movw	r2, #0
   15530:	str	r2, [r1, #12]
   15534:	ldr	r0, [fp, #-12]
   15538:	cmp	r0, #3
   1553c:	bne	1555c <__assert_fail@plt+0x4194>
   15540:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15544:	movw	r1, #4
   15548:	strh	r1, [r0, #56]	; 0x38
   1554c:	bl	11290 <__errno_location@plt>
   15550:	ldr	r0, [r0]
   15554:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15558:	str	r0, [r1, #32]
   1555c:	movw	r0, #0
   15560:	str	r0, [fp, #-4]
   15564:	b	16148 <__assert_fail@plt+0x4d80>
   15568:	b	15744 <__assert_fail@plt+0x437c>
   1556c:	ldr	r0, [fp, #-8]
   15570:	ldr	r0, [r0, #48]	; 0x30
   15574:	and	r0, r0, #4
   15578:	cmp	r0, #0
   1557c:	bne	155a4 <__assert_fail@plt+0x41dc>
   15580:	ldr	r0, [fp, #-8]
   15584:	ldr	r0, [r0, #48]	; 0x30
   15588:	and	r0, r0, #512	; 0x200
   1558c:	cmp	r0, #0
   15590:	beq	155a4 <__assert_fail@plt+0x41dc>
   15594:	ldr	r0, [fp, #-8]
   15598:	ldr	r0, [r0, #32]
   1559c:	str	r0, [sp, #56]	; 0x38
   155a0:	b	155b0 <__assert_fail@plt+0x41e8>
   155a4:	mvn	r0, #99	; 0x63
   155a8:	str	r0, [sp, #56]	; 0x38
   155ac:	b	155b0 <__assert_fail@plt+0x41e8>
   155b0:	ldr	r0, [sp, #56]	; 0x38
   155b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   155b8:	ldr	r1, [r1, #24]
   155bc:	ldr	r2, [fp, #-8]
   155c0:	ldr	r2, [r2, #48]	; 0x30
   155c4:	and	r2, r2, #16
   155c8:	cmp	r2, #0
   155cc:	movw	r2, #0
   155d0:	str	r0, [sp, #52]	; 0x34
   155d4:	str	r1, [sp, #48]	; 0x30
   155d8:	str	r2, [sp, #44]	; 0x2c
   155dc:	beq	15624 <__assert_fail@plt+0x425c>
   155e0:	ldr	r0, [fp, #-8]
   155e4:	ldr	r0, [r0, #48]	; 0x30
   155e8:	and	r0, r0, #1
   155ec:	cmp	r0, #0
   155f0:	movw	r0, #0
   155f4:	str	r0, [sp, #40]	; 0x28
   155f8:	beq	15614 <__assert_fail@plt+0x424c>
   155fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15600:	ldr	r0, [r0, #48]	; 0x30
   15604:	cmp	r0, #0
   15608:	movw	r0, #0
   1560c:	moveq	r0, #1
   15610:	str	r0, [sp, #40]	; 0x28
   15614:	ldr	r0, [sp, #40]	; 0x28
   15618:	mvn	r1, #0
   1561c:	eor	r0, r0, r1
   15620:	str	r0, [sp, #44]	; 0x2c
   15624:	ldr	r0, [sp, #44]	; 0x2c
   15628:	tst	r0, #1
   1562c:	movw	r0, #32768	; 0x8000
   15630:	moveq	r0, #0
   15634:	ldr	r1, [sp, #52]	; 0x34
   15638:	str	r0, [sp, #36]	; 0x24
   1563c:	mov	r0, r1
   15640:	ldr	r1, [sp, #48]	; 0x30
   15644:	ldr	r2, [sp, #36]	; 0x24
   15648:	sub	r3, fp, #64	; 0x40
   1564c:	bl	19a34 <__assert_fail@plt+0x866c>
   15650:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15654:	str	r0, [r1, #12]
   15658:	movw	r1, #0
   1565c:	cmp	r0, r1
   15660:	bne	15698 <__assert_fail@plt+0x42d0>
   15664:	ldr	r0, [fp, #-12]
   15668:	cmp	r0, #3
   1566c:	bne	1568c <__assert_fail@plt+0x42c4>
   15670:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15674:	movw	r1, #4
   15678:	strh	r1, [r0, #56]	; 0x38
   1567c:	bl	11290 <__errno_location@plt>
   15680:	ldr	r0, [r0]
   15684:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15688:	str	r0, [r1, #32]
   1568c:	movw	r0, #0
   15690:	str	r0, [fp, #-4]
   15694:	b	16148 <__assert_fail@plt+0x4d80>
   15698:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1569c:	ldrh	r0, [r0, #56]	; 0x38
   156a0:	cmp	r0, #11
   156a4:	bne	156c8 <__assert_fail@plt+0x4300>
   156a8:	ldr	r0, [fp, #-8]
   156ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156b0:	movw	r2, #0
   156b4:	and	r2, r2, #1
   156b8:	bl	13dd8 <__assert_fail@plt+0x2a10>
   156bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156c0:	strh	r0, [r1, #56]	; 0x38
   156c4:	b	15740 <__assert_fail@plt+0x4378>
   156c8:	ldr	r0, [fp, #-8]
   156cc:	ldr	r0, [r0, #48]	; 0x30
   156d0:	and	r0, r0, #256	; 0x100
   156d4:	cmp	r0, #0
   156d8:	beq	1573c <__assert_fail@plt+0x4374>
   156dc:	b	156e0 <__assert_fail@plt+0x4318>
   156e0:	ldr	r0, [fp, #-8]
   156e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156e8:	bl	15034 <__assert_fail@plt+0x3c6c>
   156ec:	ldr	r0, [fp, #-8]
   156f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156f4:	movw	r2, #0
   156f8:	and	r2, r2, #1
   156fc:	bl	13dd8 <__assert_fail@plt+0x2a10>
   15700:	ldr	r1, [fp, #-8]
   15704:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15708:	str	r0, [sp, #32]
   1570c:	mov	r0, r1
   15710:	mov	r1, r2
   15714:	bl	16348 <__assert_fail@plt+0x4f80>
   15718:	tst	r0, #1
   1571c:	bne	15738 <__assert_fail@plt+0x4370>
   15720:	bl	11290 <__errno_location@plt>
   15724:	movw	r1, #12
   15728:	str	r1, [r0]
   1572c:	movw	r0, #0
   15730:	str	r0, [fp, #-4]
   15734:	b	16148 <__assert_fail@plt+0x4d80>
   15738:	b	1573c <__assert_fail@plt+0x4374>
   1573c:	b	15740 <__assert_fail@plt+0x4378>
   15740:	b	15744 <__assert_fail@plt+0x437c>
   15744:	ldr	r0, [pc, #2568]	; 16154 <__assert_fail@plt+0x4d8c>
   15748:	ldr	r1, [fp, #-8]
   1574c:	ldr	r1, [r1, #44]	; 0x2c
   15750:	movw	r2, #0
   15754:	cmp	r1, r2
   15758:	movw	r1, #0
   1575c:	movne	r1, #1
   15760:	tst	r1, #1
   15764:	mvn	r1, #0
   15768:	movne	r0, r1
   1576c:	str	r0, [sp, #76]	; 0x4c
   15770:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15774:	tst	r0, #1
   15778:	beq	15788 <__assert_fail@plt+0x43c0>
   1577c:	movw	r0, #1
   15780:	strb	r0, [fp, #-37]	; 0xffffffdb
   15784:	b	1594c <__assert_fail@plt+0x4584>
   15788:	ldr	r0, [fp, #-12]
   1578c:	cmp	r0, #2
   15790:	movw	r0, #0
   15794:	str	r0, [sp, #28]
   15798:	beq	15834 <__assert_fail@plt+0x446c>
   1579c:	ldr	r0, [fp, #-8]
   157a0:	ldr	r0, [r0, #48]	; 0x30
   157a4:	and	r0, r0, #8
   157a8:	cmp	r0, #0
   157ac:	movw	r0, #0
   157b0:	str	r0, [sp, #24]
   157b4:	beq	15824 <__assert_fail@plt+0x445c>
   157b8:	ldr	r0, [fp, #-8]
   157bc:	ldr	r0, [r0, #48]	; 0x30
   157c0:	and	r0, r0, #16
   157c4:	cmp	r0, #0
   157c8:	movw	r0, #0
   157cc:	str	r0, [sp, #24]
   157d0:	beq	15824 <__assert_fail@plt+0x445c>
   157d4:	ldr	r0, [fp, #-8]
   157d8:	ldr	r0, [r0, #48]	; 0x30
   157dc:	and	r0, r0, #32
   157e0:	cmp	r0, #0
   157e4:	movw	r0, #0
   157e8:	str	r0, [sp, #24]
   157ec:	bne	15824 <__assert_fail@plt+0x445c>
   157f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157f4:	ldr	r0, [r0, #84]	; 0x54
   157f8:	cmp	r0, #2
   157fc:	movw	r0, #0
   15800:	str	r0, [sp, #24]
   15804:	bne	15824 <__assert_fail@plt+0x445c>
   15808:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1580c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15810:	bl	1691c <__assert_fail@plt+0x5554>
   15814:	cmp	r0, #0
   15818:	movw	r0, #0
   1581c:	movne	r0, #1
   15820:	str	r0, [sp, #24]
   15824:	ldr	r0, [sp, #24]
   15828:	mvn	r1, #0
   1582c:	eor	r0, r0, r1
   15830:	str	r0, [sp, #28]
   15834:	ldr	r0, [sp, #28]
   15838:	and	r0, r0, #1
   1583c:	strb	r0, [fp, #-37]	; 0xffffffdb
   15840:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15844:	tst	r0, #1
   15848:	bne	15858 <__assert_fail@plt+0x4490>
   1584c:	ldr	r0, [fp, #-12]
   15850:	cmp	r0, #3
   15854:	bne	15948 <__assert_fail@plt+0x4580>
   15858:	ldr	r0, [fp, #-8]
   1585c:	ldr	r0, [r0, #48]	; 0x30
   15860:	and	r0, r0, #512	; 0x200
   15864:	cmp	r0, #0
   15868:	beq	15880 <__assert_fail@plt+0x44b8>
   1586c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15870:	movw	r1, #1030	; 0x406
   15874:	movw	r2, #3
   15878:	bl	203e8 <__assert_fail@plt+0xf020>
   1587c:	str	r0, [fp, #-64]	; 0xffffffc0
   15880:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15884:	cmp	r0, #0
   15888:	blt	158a8 <__assert_fail@plt+0x44e0>
   1588c:	ldr	r0, [fp, #-8]
   15890:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15894:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15898:	movw	r3, #0
   1589c:	bl	151d4 <__assert_fail@plt+0x3e0c>
   158a0:	cmp	r0, #0
   158a4:	beq	1593c <__assert_fail@plt+0x4574>
   158a8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   158ac:	tst	r0, #1
   158b0:	beq	158d0 <__assert_fail@plt+0x4508>
   158b4:	ldr	r0, [fp, #-12]
   158b8:	cmp	r0, #3
   158bc:	bne	158d0 <__assert_fail@plt+0x4508>
   158c0:	bl	11290 <__errno_location@plt>
   158c4:	ldr	r0, [r0]
   158c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158cc:	str	r0, [r1, #32]
   158d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158d4:	ldrh	r1, [r0, #58]	; 0x3a
   158d8:	orr	r1, r1, #1
   158dc:	strh	r1, [r0, #58]	; 0x3a
   158e0:	movw	r0, #0
   158e4:	strb	r0, [fp, #-37]	; 0xffffffdb
   158e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158ec:	ldr	r0, [r0, #12]
   158f0:	bl	113bc <closedir@plt>
   158f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158f8:	movw	r2, #0
   158fc:	str	r2, [r1, #12]
   15900:	ldr	r0, [fp, #-8]
   15904:	ldr	r0, [r0, #48]	; 0x30
   15908:	and	r0, r0, #512	; 0x200
   1590c:	cmp	r0, #0
   15910:	beq	1592c <__assert_fail@plt+0x4564>
   15914:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15918:	movw	r1, #0
   1591c:	cmp	r1, r0
   15920:	bgt	1592c <__assert_fail@plt+0x4564>
   15924:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15928:	bl	113a4 <close@plt>
   1592c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15930:	movw	r1, #0
   15934:	str	r1, [r0, #12]
   15938:	b	15944 <__assert_fail@plt+0x457c>
   1593c:	movw	r0, #1
   15940:	strb	r0, [fp, #-37]	; 0xffffffdb
   15944:	b	15948 <__assert_fail@plt+0x4580>
   15948:	b	1594c <__assert_fail@plt+0x4584>
   1594c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15950:	ldr	r0, [r0, #28]
   15954:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15958:	ldr	r1, [r1, #40]	; 0x28
   1595c:	sub	r1, r1, #1
   15960:	add	r0, r0, r1
   15964:	ldrb	r0, [r0]
   15968:	cmp	r0, #47	; 0x2f
   1596c:	bne	15984 <__assert_fail@plt+0x45bc>
   15970:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15974:	ldr	r0, [r0, #40]	; 0x28
   15978:	sub	r0, r0, #1
   1597c:	str	r0, [sp, #20]
   15980:	b	15990 <__assert_fail@plt+0x45c8>
   15984:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15988:	ldr	r0, [r0, #40]	; 0x28
   1598c:	str	r0, [sp, #20]
   15990:	ldr	r0, [sp, #20]
   15994:	str	r0, [fp, #-48]	; 0xffffffd0
   15998:	ldr	r0, [fp, #-8]
   1599c:	ldr	r0, [r0, #48]	; 0x30
   159a0:	and	r0, r0, #4
   159a4:	cmp	r0, #0
   159a8:	beq	159d8 <__assert_fail@plt+0x4610>
   159ac:	ldr	r0, [fp, #-8]
   159b0:	ldr	r0, [r0, #24]
   159b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   159b8:	add	r0, r0, r1
   159bc:	str	r0, [fp, #-60]	; 0xffffffc4
   159c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   159c4:	add	r1, r0, #1
   159c8:	str	r1, [fp, #-60]	; 0xffffffc4
   159cc:	movw	r1, #47	; 0x2f
   159d0:	strb	r1, [r0]
   159d4:	b	159e0 <__assert_fail@plt+0x4618>
   159d8:	movw	r0, #0
   159dc:	str	r0, [fp, #-60]	; 0xffffffc4
   159e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   159e4:	add	r0, r0, #1
   159e8:	str	r0, [fp, #-48]	; 0xffffffd0
   159ec:	ldr	r0, [fp, #-8]
   159f0:	ldr	r0, [r0, #36]	; 0x24
   159f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   159f8:	sub	r0, r0, r1
   159fc:	str	r0, [fp, #-52]	; 0xffffffcc
   15a00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a04:	ldr	r0, [r0, #48]	; 0x30
   15a08:	add	r0, r0, #1
   15a0c:	str	r0, [fp, #-44]	; 0xffffffd4
   15a10:	movw	r0, #0
   15a14:	strb	r0, [fp, #-38]	; 0xffffffda
   15a18:	movw	r0, #0
   15a1c:	str	r0, [fp, #-20]	; 0xffffffec
   15a20:	str	r0, [fp, #-28]	; 0xffffffe4
   15a24:	str	r0, [fp, #-24]	; 0xffffffe8
   15a28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a2c:	ldr	r0, [r0, #12]
   15a30:	movw	r1, #0
   15a34:	cmp	r0, r1
   15a38:	beq	15f30 <__assert_fail@plt+0x4b68>
   15a3c:	bl	11290 <__errno_location@plt>
   15a40:	movw	r1, #0
   15a44:	str	r1, [r0]
   15a48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a4c:	ldr	r0, [r0, #12]
   15a50:	bl	11314 <readdir64@plt>
   15a54:	str	r0, [sp, #64]	; 0x40
   15a58:	ldr	r0, [sp, #64]	; 0x40
   15a5c:	movw	r1, #0
   15a60:	cmp	r0, r1
   15a64:	bne	15acc <__assert_fail@plt+0x4704>
   15a68:	bl	11290 <__errno_location@plt>
   15a6c:	ldr	r0, [r0]
   15a70:	cmp	r0, #0
   15a74:	beq	15ac8 <__assert_fail@plt+0x4700>
   15a78:	bl	11290 <__errno_location@plt>
   15a7c:	ldr	r0, [r0]
   15a80:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a84:	str	r0, [r1, #32]
   15a88:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15a8c:	tst	r0, #1
   15a90:	movw	r0, #1
   15a94:	str	r0, [sp, #16]
   15a98:	bne	15ab0 <__assert_fail@plt+0x46e8>
   15a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aa0:	cmp	r0, #0
   15aa4:	movw	r0, #0
   15aa8:	movne	r0, #1
   15aac:	str	r0, [sp, #16]
   15ab0:	ldr	r0, [sp, #16]
   15ab4:	tst	r0, #1
   15ab8:	movw	r0, #7
   15abc:	moveq	r0, #4
   15ac0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ac4:	strh	r0, [r1, #56]	; 0x38
   15ac8:	b	15f30 <__assert_fail@plt+0x4b68>
   15acc:	ldr	r0, [fp, #-8]
   15ad0:	ldr	r0, [r0, #48]	; 0x30
   15ad4:	and	r0, r0, #32
   15ad8:	cmp	r0, #0
   15adc:	bne	15b24 <__assert_fail@plt+0x475c>
   15ae0:	ldr	r0, [sp, #64]	; 0x40
   15ae4:	ldrb	r0, [r0, #19]
   15ae8:	cmp	r0, #46	; 0x2e
   15aec:	bne	15b24 <__assert_fail@plt+0x475c>
   15af0:	ldr	r0, [sp, #64]	; 0x40
   15af4:	ldrsb	r0, [r0, #20]
   15af8:	cmp	r0, #0
   15afc:	beq	15b20 <__assert_fail@plt+0x4758>
   15b00:	ldr	r0, [sp, #64]	; 0x40
   15b04:	ldrb	r0, [r0, #20]
   15b08:	cmp	r0, #46	; 0x2e
   15b0c:	bne	15b24 <__assert_fail@plt+0x475c>
   15b10:	ldr	r0, [sp, #64]	; 0x40
   15b14:	ldrsb	r0, [r0, #21]
   15b18:	cmp	r0, #0
   15b1c:	bne	15b24 <__assert_fail@plt+0x475c>
   15b20:	b	15a28 <__assert_fail@plt+0x4660>
   15b24:	ldr	r0, [sp, #64]	; 0x40
   15b28:	add	r0, r0, #19
   15b2c:	bl	11260 <strlen@plt>
   15b30:	str	r0, [sp, #68]	; 0x44
   15b34:	ldr	r0, [fp, #-8]
   15b38:	ldr	r1, [sp, #64]	; 0x40
   15b3c:	add	r1, r1, #19
   15b40:	ldr	r2, [sp, #68]	; 0x44
   15b44:	bl	13c88 <__assert_fail@plt+0x28c0>
   15b48:	str	r0, [fp, #-16]
   15b4c:	ldr	r0, [fp, #-16]
   15b50:	movw	r1, #0
   15b54:	cmp	r0, r1
   15b58:	bne	15b60 <__assert_fail@plt+0x4798>
   15b5c:	b	15ba0 <__assert_fail@plt+0x47d8>
   15b60:	ldr	r0, [sp, #68]	; 0x44
   15b64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b68:	cmp	r0, r1
   15b6c:	bcc	15c6c <__assert_fail@plt+0x48a4>
   15b70:	ldr	r0, [fp, #-8]
   15b74:	ldr	r0, [r0, #24]
   15b78:	str	r0, [fp, #-32]	; 0xffffffe0
   15b7c:	ldr	r0, [fp, #-8]
   15b80:	ldr	r1, [sp, #68]	; 0x44
   15b84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b88:	add	r1, r1, r2
   15b8c:	add	r1, r1, #1
   15b90:	bl	13b90 <__assert_fail@plt+0x27c8>
   15b94:	tst	r0, #1
   15b98:	bne	15c10 <__assert_fail@plt+0x4848>
   15b9c:	b	15ba0 <__assert_fail@plt+0x47d8>
   15ba0:	bl	11290 <__errno_location@plt>
   15ba4:	ldr	r0, [r0]
   15ba8:	str	r0, [fp, #-36]	; 0xffffffdc
   15bac:	ldr	r0, [fp, #-16]
   15bb0:	bl	208f4 <__assert_fail@plt+0xf52c>
   15bb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15bb8:	bl	14330 <__assert_fail@plt+0x2f68>
   15bbc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15bc0:	ldr	r0, [r0, #12]
   15bc4:	bl	113bc <closedir@plt>
   15bc8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15bcc:	movw	r2, #0
   15bd0:	str	r2, [r1, #12]
   15bd4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15bd8:	movw	r1, #7
   15bdc:	strh	r1, [r0, #56]	; 0x38
   15be0:	ldr	r0, [fp, #-8]
   15be4:	ldr	r1, [r0, #48]	; 0x30
   15be8:	orr	r1, r1, #8192	; 0x2000
   15bec:	str	r1, [r0, #48]	; 0x30
   15bf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15bf4:	str	r0, [sp, #12]
   15bf8:	bl	11290 <__errno_location@plt>
   15bfc:	ldr	r1, [sp, #12]
   15c00:	str	r1, [r0]
   15c04:	movw	r0, #0
   15c08:	str	r0, [fp, #-4]
   15c0c:	b	16148 <__assert_fail@plt+0x4d80>
   15c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c14:	ldr	r1, [fp, #-8]
   15c18:	ldr	r1, [r1, #24]
   15c1c:	cmp	r0, r1
   15c20:	beq	15c58 <__assert_fail@plt+0x4890>
   15c24:	movw	r0, #1
   15c28:	strb	r0, [fp, #-38]	; 0xffffffda
   15c2c:	ldr	r0, [fp, #-8]
   15c30:	ldr	r0, [r0, #48]	; 0x30
   15c34:	and	r0, r0, #4
   15c38:	cmp	r0, #0
   15c3c:	beq	15c54 <__assert_fail@plt+0x488c>
   15c40:	ldr	r0, [fp, #-8]
   15c44:	ldr	r0, [r0, #24]
   15c48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c4c:	add	r0, r0, r1
   15c50:	str	r0, [fp, #-60]	; 0xffffffc4
   15c54:	b	15c58 <__assert_fail@plt+0x4890>
   15c58:	ldr	r0, [fp, #-8]
   15c5c:	ldr	r0, [r0, #36]	; 0x24
   15c60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c64:	sub	r0, r0, r1
   15c68:	str	r0, [fp, #-52]	; 0xffffffcc
   15c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c70:	ldr	r1, [sp, #68]	; 0x44
   15c74:	add	r0, r0, r1
   15c78:	str	r0, [fp, #-56]	; 0xffffffc8
   15c7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15c80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c84:	cmp	r0, r1
   15c88:	bcs	15ce8 <__assert_fail@plt+0x4920>
   15c8c:	ldr	r0, [fp, #-16]
   15c90:	bl	208f4 <__assert_fail@plt+0xf52c>
   15c94:	ldr	r0, [fp, #-20]	; 0xffffffec
   15c98:	bl	14330 <__assert_fail@plt+0x2f68>
   15c9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ca0:	ldr	r0, [r0, #12]
   15ca4:	bl	113bc <closedir@plt>
   15ca8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15cac:	movw	r2, #0
   15cb0:	str	r2, [r1, #12]
   15cb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15cb8:	movw	r1, #7
   15cbc:	strh	r1, [r0, #56]	; 0x38
   15cc0:	ldr	r0, [fp, #-8]
   15cc4:	ldr	r1, [r0, #48]	; 0x30
   15cc8:	orr	r1, r1, #8192	; 0x2000
   15ccc:	str	r1, [r0, #48]	; 0x30
   15cd0:	bl	11290 <__errno_location@plt>
   15cd4:	movw	r1, #36	; 0x24
   15cd8:	str	r1, [r0]
   15cdc:	movw	r0, #0
   15ce0:	str	r0, [fp, #-4]
   15ce4:	b	16148 <__assert_fail@plt+0x4d80>
   15ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cec:	ldr	r1, [fp, #-16]
   15cf0:	str	r0, [r1, #48]	; 0x30
   15cf4:	ldr	r0, [fp, #-8]
   15cf8:	ldr	r0, [r0]
   15cfc:	ldr	r1, [fp, #-16]
   15d00:	str	r0, [r1, #4]
   15d04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d08:	ldr	r1, [fp, #-16]
   15d0c:	str	r0, [r1, #40]	; 0x28
   15d10:	ldr	r0, [sp, #64]	; 0x40
   15d14:	ldr	r1, [r0]
   15d18:	ldr	r0, [r0, #4]
   15d1c:	ldr	r2, [fp, #-16]
   15d20:	str	r0, [r2, #164]	; 0xa4
   15d24:	str	r1, [r2, #160]	; 0xa0
   15d28:	ldr	r0, [fp, #-8]
   15d2c:	ldr	r0, [r0, #48]	; 0x30
   15d30:	and	r0, r0, #4
   15d34:	cmp	r0, #0
   15d38:	beq	15d6c <__assert_fail@plt+0x49a4>
   15d3c:	ldr	r0, [fp, #-16]
   15d40:	ldr	r0, [r0, #28]
   15d44:	ldr	r1, [fp, #-16]
   15d48:	str	r0, [r1, #24]
   15d4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d50:	ldr	r1, [fp, #-16]
   15d54:	add	r1, r1, #168	; 0xa8
   15d58:	ldr	r2, [fp, #-16]
   15d5c:	ldr	r2, [r2, #52]	; 0x34
   15d60:	add	r2, r2, #1
   15d64:	bl	11128 <memmove@plt>
   15d68:	b	15d7c <__assert_fail@plt+0x49b4>
   15d6c:	ldr	r0, [fp, #-16]
   15d70:	add	r0, r0, #168	; 0xa8
   15d74:	ldr	r1, [fp, #-16]
   15d78:	str	r0, [r1, #24]
   15d7c:	ldr	r0, [fp, #-8]
   15d80:	ldr	r0, [r0, #44]	; 0x2c
   15d84:	movw	r1, #0
   15d88:	cmp	r0, r1
   15d8c:	beq	15da4 <__assert_fail@plt+0x49dc>
   15d90:	ldr	r0, [fp, #-8]
   15d94:	ldr	r0, [r0, #48]	; 0x30
   15d98:	and	r0, r0, #1024	; 0x400
   15d9c:	cmp	r0, #0
   15da0:	beq	15e7c <__assert_fail@plt+0x4ab4>
   15da4:	ldr	r0, [fp, #-8]
   15da8:	ldr	r0, [r0, #48]	; 0x30
   15dac:	and	r0, r0, #8
   15db0:	cmp	r0, #0
   15db4:	movw	r0, #0
   15db8:	str	r0, [sp, #8]
   15dbc:	beq	15e34 <__assert_fail@plt+0x4a6c>
   15dc0:	ldr	r0, [sp, #64]	; 0x40
   15dc4:	ldrb	r0, [r0, #18]
   15dc8:	cmp	r0, #0
   15dcc:	movw	r0, #0
   15dd0:	str	r0, [sp, #8]
   15dd4:	beq	15e34 <__assert_fail@plt+0x4a6c>
   15dd8:	ldr	r0, [sp, #64]	; 0x40
   15ddc:	ldrb	r0, [r0, #18]
   15de0:	cmp	r0, #4
   15de4:	movw	r0, #0
   15de8:	str	r0, [sp, #8]
   15dec:	beq	15e34 <__assert_fail@plt+0x4a6c>
   15df0:	ldr	r0, [fp, #-8]
   15df4:	ldr	r0, [r0, #48]	; 0x30
   15df8:	and	r0, r0, #16
   15dfc:	cmp	r0, #0
   15e00:	movw	r0, #1
   15e04:	str	r0, [sp, #4]
   15e08:	bne	15e2c <__assert_fail@plt+0x4a64>
   15e0c:	ldr	r0, [sp, #64]	; 0x40
   15e10:	ldrb	r0, [r0, #18]
   15e14:	cmp	r0, #10
   15e18:	movw	r0, #0
   15e1c:	moveq	r0, #1
   15e20:	mvn	r1, #0
   15e24:	eor	r0, r0, r1
   15e28:	str	r0, [sp, #4]
   15e2c:	ldr	r0, [sp, #4]
   15e30:	str	r0, [sp, #8]
   15e34:	ldr	r0, [sp, #8]
   15e38:	and	r0, r0, #1
   15e3c:	strb	r0, [sp, #63]	; 0x3f
   15e40:	ldr	r0, [fp, #-16]
   15e44:	movw	r1, #11
   15e48:	strh	r1, [r0, #56]	; 0x38
   15e4c:	ldr	r0, [fp, #-16]
   15e50:	add	r0, r0, #64	; 0x40
   15e54:	ldr	r1, [sp, #64]	; 0x40
   15e58:	ldrb	r1, [r1, #18]
   15e5c:	bl	169d8 <__assert_fail@plt+0x5610>
   15e60:	ldr	r0, [fp, #-16]
   15e64:	ldrb	r1, [sp, #63]	; 0x3f
   15e68:	mvn	r2, #0
   15e6c:	eor	r1, r1, r2
   15e70:	and	r1, r1, #1
   15e74:	bl	13d80 <__assert_fail@plt+0x29b8>
   15e78:	b	15e98 <__assert_fail@plt+0x4ad0>
   15e7c:	ldr	r0, [fp, #-8]
   15e80:	ldr	r1, [fp, #-16]
   15e84:	movw	r2, #0
   15e88:	and	r2, r2, #1
   15e8c:	bl	13dd8 <__assert_fail@plt+0x2a10>
   15e90:	ldr	r1, [fp, #-16]
   15e94:	strh	r0, [r1, #56]	; 0x38
   15e98:	ldr	r0, [fp, #-16]
   15e9c:	movw	r1, #0
   15ea0:	str	r1, [r0, #8]
   15ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ea8:	cmp	r0, r1
   15eac:	bne	15ec0 <__assert_fail@plt+0x4af8>
   15eb0:	ldr	r0, [fp, #-16]
   15eb4:	str	r0, [fp, #-28]	; 0xffffffe4
   15eb8:	str	r0, [fp, #-20]	; 0xffffffec
   15ebc:	b	15ed4 <__assert_fail@plt+0x4b0c>
   15ec0:	ldr	r0, [fp, #-16]
   15ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ec8:	str	r0, [r1, #8]
   15ecc:	ldr	r0, [fp, #-16]
   15ed0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed8:	movw	r1, #10000	; 0x2710
   15edc:	cmp	r0, r1
   15ee0:	bne	15f0c <__assert_fail@plt+0x4b44>
   15ee4:	ldr	r0, [fp, #-8]
   15ee8:	ldr	r0, [r0, #44]	; 0x2c
   15eec:	movw	r1, #0
   15ef0:	cmp	r0, r1
   15ef4:	bne	15f0c <__assert_fail@plt+0x4b44>
   15ef8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15efc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15f00:	bl	16aa8 <__assert_fail@plt+0x56e0>
   15f04:	and	r0, r0, #1
   15f08:	strb	r0, [fp, #-70]	; 0xffffffba
   15f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f10:	add	r0, r0, #1
   15f14:	str	r0, [fp, #-24]	; 0xffffffe8
   15f18:	ldr	r0, [sp, #76]	; 0x4c
   15f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f20:	cmp	r0, r1
   15f24:	bhi	15f2c <__assert_fail@plt+0x4b64>
   15f28:	b	15f68 <__assert_fail@plt+0x4ba0>
   15f2c:	b	15a28 <__assert_fail@plt+0x4660>
   15f30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f34:	ldr	r0, [r0, #12]
   15f38:	movw	r1, #0
   15f3c:	cmp	r0, r1
   15f40:	beq	15f64 <__assert_fail@plt+0x4b9c>
   15f44:	b	15f48 <__assert_fail@plt+0x4b80>
   15f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f4c:	ldr	r0, [r0, #12]
   15f50:	bl	113bc <closedir@plt>
   15f54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15f58:	movw	r2, #0
   15f5c:	str	r2, [r1, #12]
   15f60:	b	15f64 <__assert_fail@plt+0x4b9c>
   15f64:	b	15f68 <__assert_fail@plt+0x4ba0>
   15f68:	ldrb	r0, [fp, #-38]	; 0xffffffda
   15f6c:	tst	r0, #1
   15f70:	beq	15f80 <__assert_fail@plt+0x4bb8>
   15f74:	ldr	r0, [fp, #-8]
   15f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f7c:	bl	16b3c <__assert_fail@plt+0x5774>
   15f80:	ldr	r0, [fp, #-8]
   15f84:	ldr	r0, [r0, #48]	; 0x30
   15f88:	and	r0, r0, #4
   15f8c:	cmp	r0, #0
   15f90:	beq	15fd0 <__assert_fail@plt+0x4c08>
   15f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f98:	ldr	r1, [fp, #-8]
   15f9c:	ldr	r1, [r1, #36]	; 0x24
   15fa0:	cmp	r0, r1
   15fa4:	beq	15fb4 <__assert_fail@plt+0x4bec>
   15fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fac:	cmp	r0, #0
   15fb0:	bne	15fc4 <__assert_fail@plt+0x4bfc>
   15fb4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15fb8:	mvn	r1, #0
   15fbc:	add	r0, r0, r1
   15fc0:	str	r0, [fp, #-60]	; 0xffffffc4
   15fc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15fc8:	movw	r1, #0
   15fcc:	strb	r1, [r0]
   15fd0:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15fd4:	tst	r0, #1
   15fd8:	bne	16078 <__assert_fail@plt+0x4cb0>
   15fdc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15fe0:	tst	r0, #1
   15fe4:	beq	16078 <__assert_fail@plt+0x4cb0>
   15fe8:	ldr	r0, [fp, #-12]
   15fec:	cmp	r0, #1
   15ff0:	beq	16000 <__assert_fail@plt+0x4c38>
   15ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff8:	cmp	r0, #0
   15ffc:	bne	16078 <__assert_fail@plt+0x4cb0>
   16000:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16004:	ldr	r0, [r0, #48]	; 0x30
   16008:	cmp	r0, #0
   1600c:	bne	16024 <__assert_fail@plt+0x4c5c>
   16010:	ldr	r0, [fp, #-8]
   16014:	bl	16158 <__assert_fail@plt+0x4d90>
   16018:	cmp	r0, #0
   1601c:	bne	16048 <__assert_fail@plt+0x4c80>
   16020:	b	16078 <__assert_fail@plt+0x4cb0>
   16024:	ldr	r0, [fp, #-8]
   16028:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1602c:	ldr	r1, [r1, #4]
   16030:	mvn	r2, #0
   16034:	movw	r3, #13867	; 0x362b
   16038:	movt	r3, #2
   1603c:	bl	151d4 <__assert_fail@plt+0x3e0c>
   16040:	cmp	r0, #0
   16044:	beq	16078 <__assert_fail@plt+0x4cb0>
   16048:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1604c:	movw	r1, #7
   16050:	strh	r1, [r0, #56]	; 0x38
   16054:	ldr	r0, [fp, #-8]
   16058:	ldr	r1, [r0, #48]	; 0x30
   1605c:	orr	r1, r1, #8192	; 0x2000
   16060:	str	r1, [r0, #48]	; 0x30
   16064:	ldr	r0, [fp, #-20]	; 0xffffffec
   16068:	bl	14330 <__assert_fail@plt+0x2f68>
   1606c:	movw	r0, #0
   16070:	str	r0, [fp, #-4]
   16074:	b	16148 <__assert_fail@plt+0x4d80>
   16078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1607c:	cmp	r0, #0
   16080:	bne	160d0 <__assert_fail@plt+0x4d08>
   16084:	ldr	r0, [fp, #-12]
   16088:	cmp	r0, #3
   1608c:	bne	160bc <__assert_fail@plt+0x4cf4>
   16090:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16094:	ldrh	r0, [r0, #56]	; 0x38
   16098:	cmp	r0, #4
   1609c:	beq	160bc <__assert_fail@plt+0x4cf4>
   160a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160a4:	ldrh	r0, [r0, #56]	; 0x38
   160a8:	cmp	r0, #7
   160ac:	beq	160bc <__assert_fail@plt+0x4cf4>
   160b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160b4:	movw	r1, #6
   160b8:	strh	r1, [r0, #56]	; 0x38
   160bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160c0:	bl	14330 <__assert_fail@plt+0x2f68>
   160c4:	movw	r0, #0
   160c8:	str	r0, [fp, #-4]
   160cc:	b	16148 <__assert_fail@plt+0x4d80>
   160d0:	ldrb	r0, [fp, #-70]	; 0xffffffba
   160d4:	tst	r0, #1
   160d8:	beq	1610c <__assert_fail@plt+0x4d44>
   160dc:	ldr	r0, [fp, #-8]
   160e0:	movw	r1, #27768	; 0x6c78
   160e4:	movt	r1, #1
   160e8:	str	r1, [r0, #44]	; 0x2c
   160ec:	ldr	r0, [fp, #-8]
   160f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   160f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160f8:	bl	13ff0 <__assert_fail@plt+0x2c28>
   160fc:	str	r0, [fp, #-20]	; 0xffffffec
   16100:	ldr	r0, [fp, #-8]
   16104:	movw	r1, #0
   16108:	str	r1, [r0, #44]	; 0x2c
   1610c:	ldr	r0, [fp, #-8]
   16110:	ldr	r0, [r0, #44]	; 0x2c
   16114:	movw	r1, #0
   16118:	cmp	r0, r1
   1611c:	beq	16140 <__assert_fail@plt+0x4d78>
   16120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16124:	cmp	r0, #1
   16128:	bls	16140 <__assert_fail@plt+0x4d78>
   1612c:	ldr	r0, [fp, #-8]
   16130:	ldr	r1, [fp, #-20]	; 0xffffffec
   16134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16138:	bl	13ff0 <__assert_fail@plt+0x2c28>
   1613c:	str	r0, [fp, #-20]	; 0xffffffec
   16140:	ldr	r0, [fp, #-20]	; 0xffffffec
   16144:	str	r0, [fp, #-4]
   16148:	ldr	r0, [fp, #-4]
   1614c:	mov	sp, fp
   16150:	pop	{fp, pc}
   16154:	andeq	r8, r1, r0, lsr #13
   16158:	push	{fp, lr}
   1615c:	mov	fp, sp
   16160:	sub	sp, sp, #32
   16164:	str	r0, [fp, #-4]
   16168:	ldr	r0, [fp, #-4]
   1616c:	ldr	r0, [r0, #48]	; 0x30
   16170:	and	r0, r0, #4
   16174:	cmp	r0, #0
   16178:	movw	r0, #0
   1617c:	str	r0, [fp, #-12]
   16180:	bne	16244 <__assert_fail@plt+0x4e7c>
   16184:	ldr	r0, [fp, #-4]
   16188:	ldr	r0, [r0, #48]	; 0x30
   1618c:	and	r0, r0, #512	; 0x200
   16190:	cmp	r0, #0
   16194:	beq	161f8 <__assert_fail@plt+0x4e30>
   16198:	ldr	r0, [fp, #-4]
   1619c:	ldr	r1, [fp, #-4]
   161a0:	ldr	r1, [r1, #48]	; 0x30
   161a4:	and	r1, r1, #512	; 0x200
   161a8:	cmp	r1, #0
   161ac:	str	r0, [sp, #16]
   161b0:	beq	161c0 <__assert_fail@plt+0x4df8>
   161b4:	mvn	r0, #99	; 0x63
   161b8:	str	r0, [sp, #12]
   161bc:	b	161cc <__assert_fail@plt+0x4e04>
   161c0:	ldr	r0, [fp, #-4]
   161c4:	ldr	r0, [r0, #28]
   161c8:	str	r0, [sp, #12]
   161cc:	ldr	r0, [sp, #12]
   161d0:	ldr	r1, [sp, #16]
   161d4:	str	r0, [sp, #8]
   161d8:	mov	r0, r1
   161dc:	ldr	r1, [sp, #8]
   161e0:	movw	r2, #1
   161e4:	and	r2, r2, #1
   161e8:	bl	164a8 <__assert_fail@plt+0x50e0>
   161ec:	movw	r0, #0
   161f0:	str	r0, [sp, #4]
   161f4:	b	16230 <__assert_fail@plt+0x4e68>
   161f8:	ldr	r0, [fp, #-4]
   161fc:	ldr	r0, [r0, #48]	; 0x30
   16200:	and	r0, r0, #512	; 0x200
   16204:	cmp	r0, #0
   16208:	beq	16218 <__assert_fail@plt+0x4e50>
   1620c:	mvn	r0, #99	; 0x63
   16210:	str	r0, [sp]
   16214:	b	16224 <__assert_fail@plt+0x4e5c>
   16218:	ldr	r0, [fp, #-4]
   1621c:	ldr	r0, [r0, #28]
   16220:	str	r0, [sp]
   16224:	ldr	r0, [sp]
   16228:	bl	11338 <fchdir@plt>
   1622c:	str	r0, [sp, #4]
   16230:	ldr	r0, [sp, #4]
   16234:	cmp	r0, #0
   16238:	movw	r0, #0
   1623c:	movne	r0, #1
   16240:	str	r0, [fp, #-12]
   16244:	ldr	r0, [fp, #-12]
   16248:	and	r0, r0, #1
   1624c:	str	r0, [fp, #-8]
   16250:	ldr	r0, [fp, #-4]
   16254:	add	r0, r0, #60	; 0x3c
   16258:	bl	1459c <__assert_fail@plt+0x31d4>
   1625c:	ldr	r0, [fp, #-8]
   16260:	mov	sp, fp
   16264:	pop	{fp, pc}
   16268:	push	{fp, lr}
   1626c:	mov	fp, sp
   16270:	sub	sp, sp, #16
   16274:	str	r0, [fp, #-4]
   16278:	str	r1, [sp, #8]
   1627c:	ldr	r0, [sp, #8]
   16280:	ldr	r0, [r0, #52]	; 0x34
   16284:	ldr	r1, [sp, #8]
   16288:	str	r0, [r1, #40]	; 0x28
   1628c:	str	r0, [sp, #4]
   16290:	ldr	r0, [fp, #-4]
   16294:	ldr	r0, [r0, #24]
   16298:	ldr	r1, [sp, #8]
   1629c:	add	r1, r1, #168	; 0xa8
   162a0:	ldr	r2, [sp, #4]
   162a4:	add	r2, r2, #1
   162a8:	bl	11128 <memmove@plt>
   162ac:	ldr	r0, [sp, #8]
   162b0:	add	r0, r0, #168	; 0xa8
   162b4:	movw	r1, #47	; 0x2f
   162b8:	bl	112f0 <strrchr@plt>
   162bc:	str	r0, [sp]
   162c0:	movw	r1, #0
   162c4:	cmp	r0, r1
   162c8:	beq	16328 <__assert_fail@plt+0x4f60>
   162cc:	ldr	r0, [sp]
   162d0:	ldr	r1, [sp, #8]
   162d4:	add	r1, r1, #168	; 0xa8
   162d8:	cmp	r0, r1
   162dc:	bne	162f0 <__assert_fail@plt+0x4f28>
   162e0:	ldr	r0, [sp]
   162e4:	ldrb	r0, [r0, #1]
   162e8:	cmp	r0, #0
   162ec:	beq	16328 <__assert_fail@plt+0x4f60>
   162f0:	ldr	r0, [sp]
   162f4:	add	r0, r0, #1
   162f8:	str	r0, [sp]
   162fc:	bl	11260 <strlen@plt>
   16300:	str	r0, [sp, #4]
   16304:	ldr	r0, [sp, #8]
   16308:	add	r0, r0, #168	; 0xa8
   1630c:	ldr	r1, [sp]
   16310:	ldr	r2, [sp, #4]
   16314:	add	r2, r2, #1
   16318:	bl	11128 <memmove@plt>
   1631c:	ldr	r0, [sp, #4]
   16320:	ldr	r1, [sp, #8]
   16324:	str	r0, [r1, #52]	; 0x34
   16328:	ldr	r0, [fp, #-4]
   1632c:	ldr	r0, [r0, #24]
   16330:	ldr	r1, [sp, #8]
   16334:	str	r0, [r1, #28]
   16338:	ldr	r1, [sp, #8]
   1633c:	str	r0, [r1, #24]
   16340:	mov	sp, fp
   16344:	pop	{fp, pc}
   16348:	push	{fp, lr}
   1634c:	mov	fp, sp
   16350:	sub	sp, sp, #24
   16354:	str	r0, [fp, #-8]
   16358:	str	r1, [sp, #12]
   1635c:	ldr	r0, [fp, #-8]
   16360:	ldr	r0, [r0, #48]	; 0x30
   16364:	movw	r1, #258	; 0x102
   16368:	and	r0, r0, r1
   1636c:	cmp	r0, #0
   16370:	beq	16454 <__assert_fail@plt+0x508c>
   16374:	ldr	r0, [sp, #12]
   16378:	add	r0, r0, #64	; 0x40
   1637c:	str	r0, [sp, #8]
   16380:	movw	r0, #24
   16384:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   16388:	str	r0, [sp, #4]
   1638c:	ldr	r0, [sp, #4]
   16390:	movw	r1, #0
   16394:	cmp	r0, r1
   16398:	bne	163ac <__assert_fail@plt+0x4fe4>
   1639c:	movw	r0, #0
   163a0:	and	r0, r0, #1
   163a4:	strb	r0, [fp, #-1]
   163a8:	b	16498 <__assert_fail@plt+0x50d0>
   163ac:	ldr	r0, [sp, #8]
   163b0:	ldr	r1, [r0]
   163b4:	ldr	r0, [r0, #4]
   163b8:	ldr	r2, [sp, #4]
   163bc:	str	r0, [r2, #4]
   163c0:	str	r1, [r2]
   163c4:	ldr	r0, [sp, #8]
   163c8:	ldr	r1, [r0, #96]	; 0x60
   163cc:	ldr	r0, [r0, #100]	; 0x64
   163d0:	ldr	r2, [sp, #4]
   163d4:	str	r0, [r2, #12]
   163d8:	str	r1, [r2, #8]
   163dc:	ldr	r0, [sp, #12]
   163e0:	ldr	r1, [sp, #4]
   163e4:	str	r0, [r1, #16]
   163e8:	ldr	r0, [fp, #-8]
   163ec:	ldr	r0, [r0, #56]	; 0x38
   163f0:	ldr	r1, [sp, #4]
   163f4:	bl	187e0 <__assert_fail@plt+0x7418>
   163f8:	str	r0, [sp]
   163fc:	ldr	r0, [sp]
   16400:	ldr	r1, [sp, #4]
   16404:	cmp	r0, r1
   16408:	beq	16450 <__assert_fail@plt+0x5088>
   1640c:	ldr	r0, [sp, #4]
   16410:	bl	208f4 <__assert_fail@plt+0xf52c>
   16414:	ldr	r0, [sp]
   16418:	movw	r1, #0
   1641c:	cmp	r0, r1
   16420:	bne	16434 <__assert_fail@plt+0x506c>
   16424:	movw	r0, #0
   16428:	and	r0, r0, #1
   1642c:	strb	r0, [fp, #-1]
   16430:	b	16498 <__assert_fail@plt+0x50d0>
   16434:	ldr	r0, [sp]
   16438:	ldr	r0, [r0, #16]
   1643c:	ldr	r1, [sp, #12]
   16440:	str	r0, [r1]
   16444:	ldr	r0, [sp, #12]
   16448:	movw	r1, #2
   1644c:	strh	r1, [r0, #56]	; 0x38
   16450:	b	1648c <__assert_fail@plt+0x50c4>
   16454:	ldr	r0, [fp, #-8]
   16458:	ldr	r0, [r0, #56]	; 0x38
   1645c:	ldr	r1, [sp, #12]
   16460:	add	r1, r1, #64	; 0x40
   16464:	bl	2013c <__assert_fail@plt+0xed74>
   16468:	tst	r0, #1
   1646c:	beq	16488 <__assert_fail@plt+0x50c0>
   16470:	ldr	r0, [sp, #12]
   16474:	ldr	r1, [sp, #12]
   16478:	str	r0, [r1]
   1647c:	ldr	r0, [sp, #12]
   16480:	movw	r1, #2
   16484:	strh	r1, [r0, #56]	; 0x38
   16488:	b	1648c <__assert_fail@plt+0x50c4>
   1648c:	movw	r0, #1
   16490:	and	r0, r0, #1
   16494:	strb	r0, [fp, #-1]
   16498:	ldrb	r0, [fp, #-1]
   1649c:	and	r0, r0, #1
   164a0:	mov	sp, fp
   164a4:	pop	{fp, pc}
   164a8:	push	{fp, lr}
   164ac:	mov	fp, sp
   164b0:	sub	sp, sp, #24
   164b4:	str	r0, [fp, #-4]
   164b8:	str	r1, [fp, #-8]
   164bc:	and	r0, r2, #1
   164c0:	strb	r0, [fp, #-9]
   164c4:	ldr	r0, [fp, #-4]
   164c8:	ldr	r0, [r0, #32]
   164cc:	str	r0, [sp, #8]
   164d0:	ldr	r0, [sp, #8]
   164d4:	ldr	r1, [fp, #-8]
   164d8:	cmp	r0, r1
   164dc:	bne	164f0 <__assert_fail@plt+0x5128>
   164e0:	ldr	r0, [sp, #8]
   164e4:	cmn	r0, #100	; 0x64
   164e8:	beq	164f0 <__assert_fail@plt+0x5128>
   164ec:	bl	11398 <abort@plt>
   164f0:	b	164f4 <__assert_fail@plt+0x512c>
   164f4:	ldrb	r0, [fp, #-9]
   164f8:	tst	r0, #1
   164fc:	beq	16530 <__assert_fail@plt+0x5168>
   16500:	ldr	r0, [fp, #-4]
   16504:	add	r0, r0, #60	; 0x3c
   16508:	ldr	r1, [sp, #8]
   1650c:	bl	18ca0 <__assert_fail@plt+0x78d8>
   16510:	str	r0, [sp, #4]
   16514:	ldr	r0, [sp, #4]
   16518:	movw	r1, #0
   1651c:	cmp	r1, r0
   16520:	bgt	1652c <__assert_fail@plt+0x5164>
   16524:	ldr	r0, [sp, #4]
   16528:	bl	113a4 <close@plt>
   1652c:	b	16564 <__assert_fail@plt+0x519c>
   16530:	ldr	r0, [fp, #-4]
   16534:	ldr	r0, [r0, #48]	; 0x30
   16538:	and	r0, r0, #4
   1653c:	cmp	r0, #0
   16540:	bne	16560 <__assert_fail@plt+0x5198>
   16544:	ldr	r0, [sp, #8]
   16548:	movw	r1, #0
   1654c:	cmp	r1, r0
   16550:	bgt	1655c <__assert_fail@plt+0x5194>
   16554:	ldr	r0, [sp, #8]
   16558:	bl	113a4 <close@plt>
   1655c:	b	16560 <__assert_fail@plt+0x5198>
   16560:	b	16564 <__assert_fail@plt+0x519c>
   16564:	ldr	r0, [fp, #-8]
   16568:	ldr	r1, [fp, #-4]
   1656c:	str	r0, [r1, #32]
   16570:	mov	sp, fp
   16574:	pop	{fp, pc}
   16578:	push	{fp, lr}
   1657c:	mov	fp, sp
   16580:	sub	sp, sp, #16
   16584:	str	r0, [sp, #8]
   16588:	str	r1, [sp, #4]
   1658c:	str	r2, [sp]
   16590:	ldr	r0, [sp]
   16594:	cmp	r0, #0
   16598:	beq	165e4 <__assert_fail@plt+0x521c>
   1659c:	ldr	r0, [sp]
   165a0:	cmp	r0, #1
   165a4:	beq	165e4 <__assert_fail@plt+0x521c>
   165a8:	ldr	r0, [sp]
   165ac:	cmp	r0, #2
   165b0:	beq	165e4 <__assert_fail@plt+0x521c>
   165b4:	ldr	r0, [sp]
   165b8:	cmp	r0, #3
   165bc:	beq	165e4 <__assert_fail@plt+0x521c>
   165c0:	ldr	r0, [sp]
   165c4:	cmp	r0, #4
   165c8:	beq	165e4 <__assert_fail@plt+0x521c>
   165cc:	bl	11290 <__errno_location@plt>
   165d0:	movw	r1, #22
   165d4:	str	r1, [r0]
   165d8:	movw	r0, #1
   165dc:	str	r0, [fp, #-4]
   165e0:	b	165f8 <__assert_fail@plt+0x5230>
   165e4:	ldr	r0, [sp]
   165e8:	ldr	r1, [sp, #4]
   165ec:	strh	r0, [r1, #60]	; 0x3c
   165f0:	movw	r0, #0
   165f4:	str	r0, [fp, #-4]
   165f8:	ldr	r0, [fp, #-4]
   165fc:	mov	sp, fp
   16600:	pop	{fp, pc}
   16604:	push	{fp, lr}
   16608:	mov	fp, sp
   1660c:	sub	sp, sp, #32
   16610:	str	r0, [fp, #-8]
   16614:	str	r1, [fp, #-12]
   16618:	ldr	r0, [fp, #-12]
   1661c:	cmp	r0, #0
   16620:	beq	16648 <__assert_fail@plt+0x5280>
   16624:	ldr	r0, [fp, #-12]
   16628:	cmp	r0, #4096	; 0x1000
   1662c:	beq	16648 <__assert_fail@plt+0x5280>
   16630:	bl	11290 <__errno_location@plt>
   16634:	movw	r1, #22
   16638:	str	r1, [r0]
   1663c:	movw	r0, #0
   16640:	str	r0, [fp, #-4]
   16644:	b	1682c <__assert_fail@plt+0x5464>
   16648:	ldr	r0, [fp, #-8]
   1664c:	ldr	r0, [r0]
   16650:	str	r0, [sp, #16]
   16654:	bl	11290 <__errno_location@plt>
   16658:	movw	r1, #0
   1665c:	str	r1, [r0]
   16660:	ldr	r0, [fp, #-8]
   16664:	ldr	r0, [r0, #48]	; 0x30
   16668:	and	r0, r0, #8192	; 0x2000
   1666c:	cmp	r0, #0
   16670:	beq	16680 <__assert_fail@plt+0x52b8>
   16674:	movw	r0, #0
   16678:	str	r0, [fp, #-4]
   1667c:	b	1682c <__assert_fail@plt+0x5464>
   16680:	ldr	r0, [sp, #16]
   16684:	ldrh	r0, [r0, #56]	; 0x38
   16688:	cmp	r0, #9
   1668c:	bne	166a0 <__assert_fail@plt+0x52d8>
   16690:	ldr	r0, [sp, #16]
   16694:	ldr	r0, [r0, #8]
   16698:	str	r0, [fp, #-4]
   1669c:	b	1682c <__assert_fail@plt+0x5464>
   166a0:	ldr	r0, [sp, #16]
   166a4:	ldrh	r0, [r0, #56]	; 0x38
   166a8:	cmp	r0, #1
   166ac:	beq	166bc <__assert_fail@plt+0x52f4>
   166b0:	movw	r0, #0
   166b4:	str	r0, [fp, #-4]
   166b8:	b	1682c <__assert_fail@plt+0x5464>
   166bc:	ldr	r0, [fp, #-8]
   166c0:	ldr	r0, [r0, #4]
   166c4:	movw	r1, #0
   166c8:	cmp	r0, r1
   166cc:	beq	166dc <__assert_fail@plt+0x5314>
   166d0:	ldr	r0, [fp, #-8]
   166d4:	ldr	r0, [r0, #4]
   166d8:	bl	14330 <__assert_fail@plt+0x2f68>
   166dc:	ldr	r0, [fp, #-12]
   166e0:	cmp	r0, #4096	; 0x1000
   166e4:	bne	16704 <__assert_fail@plt+0x533c>
   166e8:	ldr	r0, [fp, #-8]
   166ec:	ldr	r1, [r0, #48]	; 0x30
   166f0:	orr	r1, r1, #4096	; 0x1000
   166f4:	str	r1, [r0, #48]	; 0x30
   166f8:	movw	r0, #2
   166fc:	str	r0, [fp, #-12]
   16700:	b	1670c <__assert_fail@plt+0x5344>
   16704:	movw	r0, #1
   16708:	str	r0, [fp, #-12]
   1670c:	ldr	r0, [sp, #16]
   16710:	ldr	r0, [r0, #48]	; 0x30
   16714:	cmp	r0, #0
   16718:	bne	16744 <__assert_fail@plt+0x537c>
   1671c:	ldr	r0, [sp, #16]
   16720:	ldr	r0, [r0, #24]
   16724:	ldrb	r0, [r0]
   16728:	cmp	r0, #47	; 0x2f
   1672c:	beq	16744 <__assert_fail@plt+0x537c>
   16730:	ldr	r0, [fp, #-8]
   16734:	ldr	r0, [r0, #48]	; 0x30
   16738:	and	r0, r0, #4
   1673c:	cmp	r0, #0
   16740:	beq	16760 <__assert_fail@plt+0x5398>
   16744:	ldr	r0, [fp, #-8]
   16748:	ldr	r1, [fp, #-12]
   1674c:	bl	15494 <__assert_fail@plt+0x40cc>
   16750:	ldr	r1, [fp, #-8]
   16754:	str	r0, [r1, #4]
   16758:	str	r0, [fp, #-4]
   1675c:	b	1682c <__assert_fail@plt+0x5464>
   16760:	ldr	r0, [fp, #-8]
   16764:	movw	r1, #13868	; 0x362c
   16768:	movt	r1, #2
   1676c:	bl	14294 <__assert_fail@plt+0x2ecc>
   16770:	str	r0, [sp, #12]
   16774:	cmp	r0, #0
   16778:	bge	16790 <__assert_fail@plt+0x53c8>
   1677c:	ldr	r0, [fp, #-8]
   16780:	movw	r1, #0
   16784:	str	r1, [r0, #4]
   16788:	str	r1, [fp, #-4]
   1678c:	b	1682c <__assert_fail@plt+0x5464>
   16790:	ldr	r0, [fp, #-8]
   16794:	ldr	r1, [fp, #-12]
   16798:	bl	15494 <__assert_fail@plt+0x40cc>
   1679c:	ldr	r1, [fp, #-8]
   167a0:	str	r0, [r1, #4]
   167a4:	ldr	r0, [fp, #-8]
   167a8:	ldr	r0, [r0, #48]	; 0x30
   167ac:	and	r0, r0, #512	; 0x200
   167b0:	cmp	r0, #0
   167b4:	beq	167d0 <__assert_fail@plt+0x5408>
   167b8:	ldr	r0, [fp, #-8]
   167bc:	ldr	r1, [sp, #12]
   167c0:	movw	r2, #1
   167c4:	and	r2, r2, #1
   167c8:	bl	164a8 <__assert_fail@plt+0x50e0>
   167cc:	b	16820 <__assert_fail@plt+0x5458>
   167d0:	ldr	r0, [sp, #12]
   167d4:	bl	11338 <fchdir@plt>
   167d8:	cmp	r0, #0
   167dc:	beq	16818 <__assert_fail@plt+0x5450>
   167e0:	bl	11290 <__errno_location@plt>
   167e4:	ldr	r0, [r0]
   167e8:	str	r0, [sp, #8]
   167ec:	ldr	r0, [sp, #12]
   167f0:	bl	113a4 <close@plt>
   167f4:	ldr	r1, [sp, #8]
   167f8:	str	r0, [sp, #4]
   167fc:	str	r1, [sp]
   16800:	bl	11290 <__errno_location@plt>
   16804:	ldr	r1, [sp]
   16808:	str	r1, [r0]
   1680c:	movw	r0, #0
   16810:	str	r0, [fp, #-4]
   16814:	b	1682c <__assert_fail@plt+0x5464>
   16818:	ldr	r0, [sp, #12]
   1681c:	bl	113a4 <close@plt>
   16820:	ldr	r0, [fp, #-8]
   16824:	ldr	r0, [r0, #4]
   16828:	str	r0, [fp, #-4]
   1682c:	ldr	r0, [fp, #-4]
   16830:	mov	sp, fp
   16834:	pop	{fp, pc}
   16838:	push	{fp, lr}
   1683c:	mov	fp, sp
   16840:	sub	sp, sp, #24
   16844:	str	r0, [fp, #-4]
   16848:	str	r1, [fp, #-8]
   1684c:	ldr	r0, [fp, #-4]
   16850:	str	r0, [sp, #12]
   16854:	ldr	r0, [sp, #12]
   16858:	ldr	r1, [r0, #8]
   1685c:	ldr	r0, [r0, #12]
   16860:	ldr	r2, [fp, #-8]
   16864:	mov	r3, #0
   16868:	str	r0, [sp, #8]
   1686c:	mov	r0, r1
   16870:	ldr	r1, [sp, #8]
   16874:	bl	22990 <__assert_fail@plt+0x115c8>
   16878:	str	r0, [sp, #4]
   1687c:	mov	r0, r2
   16880:	mov	sp, fp
   16884:	pop	{fp, pc}
   16888:	sub	sp, sp, #20
   1688c:	str	r0, [sp, #16]
   16890:	str	r1, [sp, #12]
   16894:	ldr	r0, [sp, #16]
   16898:	str	r0, [sp, #8]
   1689c:	ldr	r0, [sp, #12]
   168a0:	str	r0, [sp, #4]
   168a4:	ldr	r0, [sp, #8]
   168a8:	ldr	r1, [r0, #8]
   168ac:	ldr	r0, [r0, #12]
   168b0:	ldr	r2, [sp, #4]
   168b4:	ldr	r3, [r2, #8]
   168b8:	ldr	r2, [r2, #12]
   168bc:	eor	r0, r0, r2
   168c0:	eor	r1, r1, r3
   168c4:	orr	r0, r1, r0
   168c8:	mov	r1, #0
   168cc:	cmp	r0, #0
   168d0:	str	r1, [sp]
   168d4:	bne	1690c <__assert_fail@plt+0x5544>
   168d8:	b	168dc <__assert_fail@plt+0x5514>
   168dc:	ldr	r0, [sp, #8]
   168e0:	ldr	r1, [r0]
   168e4:	ldr	r0, [r0, #4]
   168e8:	ldr	r2, [sp, #4]
   168ec:	ldr	r3, [r2]
   168f0:	ldr	r2, [r2, #4]
   168f4:	eor	r0, r0, r2
   168f8:	eor	r1, r1, r3
   168fc:	orr	r0, r1, r0
   16900:	clz	r0, r0
   16904:	lsr	r0, r0, #5
   16908:	str	r0, [sp]
   1690c:	ldr	r0, [sp]
   16910:	and	r0, r0, #1
   16914:	add	sp, sp, #20
   16918:	bx	lr
   1691c:	push	{fp, lr}
   16920:	mov	fp, sp
   16924:	sub	sp, sp, #16
   16928:	str	r0, [sp, #8]
   1692c:	str	r1, [sp, #4]
   16930:	ldr	r0, [sp, #8]
   16934:	ldr	r1, [sp, #4]
   16938:	bl	16ce4 <__assert_fail@plt+0x591c>
   1693c:	mov	r1, r0
   16940:	movw	r2, #19778	; 0x4d42
   16944:	movt	r2, #65363	; 0xff53
   16948:	cmp	r0, r2
   1694c:	str	r1, [sp]
   16950:	beq	169b0 <__assert_fail@plt+0x55e8>
   16954:	b	16958 <__assert_fail@plt+0x5590>
   16958:	ldr	r0, [sp]
   1695c:	cmp	r0, #0
   16960:	beq	169a8 <__assert_fail@plt+0x55e0>
   16964:	b	16968 <__assert_fail@plt+0x55a0>
   16968:	movw	r0, #26985	; 0x6969
   1696c:	ldr	r1, [sp]
   16970:	cmp	r1, r0
   16974:	beq	169b4 <__assert_fail@plt+0x55ec>
   16978:	b	1697c <__assert_fail@plt+0x55b4>
   1697c:	movw	r0, #40864	; 0x9fa0
   16980:	ldr	r1, [sp]
   16984:	cmp	r1, r0
   16988:	beq	169b8 <__assert_fail@plt+0x55f0>
   1698c:	b	16990 <__assert_fail@plt+0x55c8>
   16990:	movw	r0, #16719	; 0x414f
   16994:	movt	r0, #21318	; 0x5346
   16998:	ldr	r1, [sp]
   1699c:	cmp	r1, r0
   169a0:	beq	169ac <__assert_fail@plt+0x55e4>
   169a4:	b	169c4 <__assert_fail@plt+0x55fc>
   169a8:	b	169ac <__assert_fail@plt+0x55e4>
   169ac:	b	169b0 <__assert_fail@plt+0x55e8>
   169b0:	b	169b4 <__assert_fail@plt+0x55ec>
   169b4:	b	169b8 <__assert_fail@plt+0x55f0>
   169b8:	movw	r0, #0
   169bc:	str	r0, [fp, #-4]
   169c0:	b	169cc <__assert_fail@plt+0x5604>
   169c4:	movw	r0, #1
   169c8:	str	r0, [fp, #-4]
   169cc:	ldr	r0, [fp, #-4]
   169d0:	mov	sp, fp
   169d4:	pop	{fp, pc}
   169d8:	sub	sp, sp, #16
   169dc:	str	r0, [sp, #12]
   169e0:	str	r1, [sp, #8]
   169e4:	ldr	r0, [sp, #8]
   169e8:	sub	r0, r0, #1
   169ec:	cmp	r0, #11
   169f0:	str	r0, [sp]
   169f4:	bhi	16a8c <__assert_fail@plt+0x56c4>
   169f8:	add	r0, pc, #8
   169fc:	ldr	r1, [sp]
   16a00:	ldr	r0, [r0, r1, lsl #2]
   16a04:	mov	pc, r0
   16a08:	andeq	r6, r1, ip, asr sl
   16a0c:	andeq	r6, r1, r4, asr #20
   16a10:	andeq	r6, r1, ip, lsl #21
   16a14:	andeq	r6, r1, r0, asr sl
   16a18:	andeq	r6, r1, ip, lsl #21
   16a1c:	andeq	r6, r1, r8, lsr sl
   16a20:	andeq	r6, r1, ip, lsl #21
   16a24:	andeq	r6, r1, r4, ror sl
   16a28:	andeq	r6, r1, ip, lsl #21
   16a2c:	andeq	r6, r1, r8, ror #20
   16a30:	andeq	r6, r1, ip, lsl #21
   16a34:	andeq	r6, r1, r0, lsl #21
   16a38:	movw	r0, #24576	; 0x6000
   16a3c:	str	r0, [sp, #4]
   16a40:	b	16a94 <__assert_fail@plt+0x56cc>
   16a44:	movw	r0, #8192	; 0x2000
   16a48:	str	r0, [sp, #4]
   16a4c:	b	16a94 <__assert_fail@plt+0x56cc>
   16a50:	movw	r0, #16384	; 0x4000
   16a54:	str	r0, [sp, #4]
   16a58:	b	16a94 <__assert_fail@plt+0x56cc>
   16a5c:	movw	r0, #4096	; 0x1000
   16a60:	str	r0, [sp, #4]
   16a64:	b	16a94 <__assert_fail@plt+0x56cc>
   16a68:	movw	r0, #40960	; 0xa000
   16a6c:	str	r0, [sp, #4]
   16a70:	b	16a94 <__assert_fail@plt+0x56cc>
   16a74:	movw	r0, #32768	; 0x8000
   16a78:	str	r0, [sp, #4]
   16a7c:	b	16a94 <__assert_fail@plt+0x56cc>
   16a80:	movw	r0, #49152	; 0xc000
   16a84:	str	r0, [sp, #4]
   16a88:	b	16a94 <__assert_fail@plt+0x56cc>
   16a8c:	movw	r0, #0
   16a90:	str	r0, [sp, #4]
   16a94:	ldr	r0, [sp, #4]
   16a98:	ldr	r1, [sp, #12]
   16a9c:	str	r0, [r1, #16]
   16aa0:	add	sp, sp, #16
   16aa4:	bx	lr
   16aa8:	push	{fp, lr}
   16aac:	mov	fp, sp
   16ab0:	sub	sp, sp, #16
   16ab4:	str	r0, [sp, #8]
   16ab8:	str	r1, [sp, #4]
   16abc:	ldr	r0, [sp, #8]
   16ac0:	ldr	r1, [sp, #4]
   16ac4:	bl	16ce4 <__assert_fail@plt+0x591c>
   16ac8:	mov	r1, r0
   16acc:	movw	r2, #19778	; 0x4d42
   16ad0:	movt	r2, #65363	; 0xff53
   16ad4:	cmp	r0, r2
   16ad8:	str	r1, [sp]
   16adc:	beq	16b10 <__assert_fail@plt+0x5748>
   16ae0:	b	16ae4 <__assert_fail@plt+0x571c>
   16ae4:	movw	r0, #26985	; 0x6969
   16ae8:	ldr	r1, [sp]
   16aec:	cmp	r1, r0
   16af0:	beq	16b10 <__assert_fail@plt+0x5748>
   16af4:	b	16af8 <__assert_fail@plt+0x5730>
   16af8:	movw	r0, #6548	; 0x1994
   16afc:	movt	r0, #258	; 0x102
   16b00:	ldr	r1, [sp]
   16b04:	cmp	r1, r0
   16b08:	bne	16b20 <__assert_fail@plt+0x5758>
   16b0c:	b	16b10 <__assert_fail@plt+0x5748>
   16b10:	movw	r0, #0
   16b14:	and	r0, r0, #1
   16b18:	strb	r0, [fp, #-1]
   16b1c:	b	16b2c <__assert_fail@plt+0x5764>
   16b20:	movw	r0, #1
   16b24:	and	r0, r0, #1
   16b28:	strb	r0, [fp, #-1]
   16b2c:	ldrb	r0, [fp, #-1]
   16b30:	and	r0, r0, #1
   16b34:	mov	sp, fp
   16b38:	pop	{fp, pc}
   16b3c:	sub	sp, sp, #20
   16b40:	str	r0, [sp, #16]
   16b44:	str	r1, [sp, #12]
   16b48:	ldr	r0, [sp, #16]
   16b4c:	ldr	r0, [r0, #24]
   16b50:	str	r0, [sp, #4]
   16b54:	ldr	r0, [sp, #16]
   16b58:	ldr	r0, [r0, #4]
   16b5c:	str	r0, [sp, #8]
   16b60:	ldr	r0, [sp, #8]
   16b64:	movw	r1, #0
   16b68:	cmp	r0, r1
   16b6c:	beq	16bd0 <__assert_fail@plt+0x5808>
   16b70:	b	16b74 <__assert_fail@plt+0x57ac>
   16b74:	ldr	r0, [sp, #8]
   16b78:	ldr	r0, [r0, #24]
   16b7c:	ldr	r1, [sp, #8]
   16b80:	add	r1, r1, #168	; 0xa8
   16b84:	cmp	r0, r1
   16b88:	beq	16bb0 <__assert_fail@plt+0x57e8>
   16b8c:	ldr	r0, [sp, #4]
   16b90:	ldr	r1, [sp, #8]
   16b94:	ldr	r1, [r1, #24]
   16b98:	ldr	r2, [sp, #8]
   16b9c:	ldr	r2, [r2, #28]
   16ba0:	sub	r1, r1, r2
   16ba4:	add	r0, r0, r1
   16ba8:	ldr	r1, [sp, #8]
   16bac:	str	r0, [r1, #24]
   16bb0:	ldr	r0, [sp, #4]
   16bb4:	ldr	r1, [sp, #8]
   16bb8:	str	r0, [r1, #28]
   16bbc:	b	16bc0 <__assert_fail@plt+0x57f8>
   16bc0:	ldr	r0, [sp, #8]
   16bc4:	ldr	r0, [r0, #8]
   16bc8:	str	r0, [sp, #8]
   16bcc:	b	16b60 <__assert_fail@plt+0x5798>
   16bd0:	ldr	r0, [sp, #12]
   16bd4:	str	r0, [sp, #8]
   16bd8:	ldr	r0, [sp, #8]
   16bdc:	ldr	r0, [r0, #48]	; 0x30
   16be0:	cmp	r0, #0
   16be4:	blt	16c70 <__assert_fail@plt+0x58a8>
   16be8:	b	16bec <__assert_fail@plt+0x5824>
   16bec:	ldr	r0, [sp, #8]
   16bf0:	ldr	r0, [r0, #24]
   16bf4:	ldr	r1, [sp, #8]
   16bf8:	add	r1, r1, #168	; 0xa8
   16bfc:	cmp	r0, r1
   16c00:	beq	16c28 <__assert_fail@plt+0x5860>
   16c04:	ldr	r0, [sp, #4]
   16c08:	ldr	r1, [sp, #8]
   16c0c:	ldr	r1, [r1, #24]
   16c10:	ldr	r2, [sp, #8]
   16c14:	ldr	r2, [r2, #28]
   16c18:	sub	r1, r1, r2
   16c1c:	add	r0, r0, r1
   16c20:	ldr	r1, [sp, #8]
   16c24:	str	r0, [r1, #24]
   16c28:	ldr	r0, [sp, #4]
   16c2c:	ldr	r1, [sp, #8]
   16c30:	str	r0, [r1, #28]
   16c34:	ldr	r0, [sp, #8]
   16c38:	ldr	r0, [r0, #8]
   16c3c:	movw	r1, #0
   16c40:	cmp	r0, r1
   16c44:	beq	16c58 <__assert_fail@plt+0x5890>
   16c48:	ldr	r0, [sp, #8]
   16c4c:	ldr	r0, [r0, #8]
   16c50:	str	r0, [sp]
   16c54:	b	16c64 <__assert_fail@plt+0x589c>
   16c58:	ldr	r0, [sp, #8]
   16c5c:	ldr	r0, [r0, #4]
   16c60:	str	r0, [sp]
   16c64:	ldr	r0, [sp]
   16c68:	str	r0, [sp, #8]
   16c6c:	b	16bd8 <__assert_fail@plt+0x5810>
   16c70:	add	sp, sp, #20
   16c74:	bx	lr
   16c78:	push	{r4, r5, fp, lr}
   16c7c:	add	fp, sp, #8
   16c80:	sub	sp, sp, #12
   16c84:	str	r0, [sp, #8]
   16c88:	str	r1, [sp, #4]
   16c8c:	ldr	r0, [sp, #8]
   16c90:	ldr	r0, [r0]
   16c94:	ldr	r1, [r0, #160]	; 0xa0
   16c98:	ldr	r0, [r0, #164]	; 0xa4
   16c9c:	ldr	r2, [sp, #4]
   16ca0:	ldr	r2, [r2]
   16ca4:	ldr	r3, [r2, #160]	; 0xa0
   16ca8:	ldr	r2, [r2, #164]	; 0xa4
   16cac:	subs	ip, r3, r1
   16cb0:	sbcs	lr, r2, r0
   16cb4:	mov	r4, #0
   16cb8:	mov	r5, r4
   16cbc:	movwcc	r5, #1
   16cc0:	subs	r1, r1, r3
   16cc4:	sbcs	r0, r0, r2
   16cc8:	movwcc	r4, #1
   16ccc:	and	r2, r4, #1
   16cd0:	sub	r2, r5, r2
   16cd4:	str	r0, [sp]
   16cd8:	mov	r0, r2
   16cdc:	sub	sp, fp, #8
   16ce0:	pop	{r4, r5, fp, pc}
   16ce4:	push	{fp, lr}
   16ce8:	mov	fp, sp
   16cec:	sub	sp, sp, #136	; 0x88
   16cf0:	str	r0, [fp, #-8]
   16cf4:	str	r1, [fp, #-12]
   16cf8:	ldr	r0, [fp, #-8]
   16cfc:	ldr	r0, [r0, #44]	; 0x2c
   16d00:	str	r0, [fp, #-16]
   16d04:	ldr	r0, [fp, #-16]
   16d08:	ldr	r0, [r0, #52]	; 0x34
   16d0c:	str	r0, [fp, #-20]	; 0xffffffec
   16d10:	ldr	r0, [fp, #-16]
   16d14:	ldr	r0, [r0, #48]	; 0x30
   16d18:	and	r0, r0, #512	; 0x200
   16d1c:	cmp	r0, #0
   16d20:	bne	16d30 <__assert_fail@plt+0x5968>
   16d24:	movw	r0, #0
   16d28:	str	r0, [fp, #-4]
   16d2c:	b	16ea0 <__assert_fail@plt+0x5ad8>
   16d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d34:	movw	r1, #0
   16d38:	cmp	r0, r1
   16d3c:	bne	16d74 <__assert_fail@plt+0x59ac>
   16d40:	movw	r0, #13
   16d44:	movw	r1, #0
   16d48:	movw	r2, #28332	; 0x6eac
   16d4c:	movt	r2, #1
   16d50:	movw	r3, #28416	; 0x6f00
   16d54:	movt	r3, #1
   16d58:	movw	ip, #2292	; 0x8f4
   16d5c:	movt	ip, #2
   16d60:	str	ip, [sp]
   16d64:	bl	177bc <__assert_fail@plt+0x63f4>
   16d68:	ldr	r1, [fp, #-16]
   16d6c:	str	r0, [r1, #52]	; 0x34
   16d70:	str	r0, [fp, #-20]	; 0xffffffec
   16d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d78:	movw	r1, #0
   16d7c:	cmp	r0, r1
   16d80:	beq	16dcc <__assert_fail@plt+0x5a04>
   16d84:	ldr	r0, [fp, #-8]
   16d88:	ldr	r1, [r0, #64]	; 0x40
   16d8c:	ldr	r0, [r0, #68]	; 0x44
   16d90:	str	r0, [sp, #12]
   16d94:	str	r1, [sp, #8]
   16d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d9c:	add	r1, sp, #8
   16da0:	bl	172a0 <__assert_fail@plt+0x5ed8>
   16da4:	str	r0, [fp, #-24]	; 0xffffffe8
   16da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dac:	movw	r1, #0
   16db0:	cmp	r0, r1
   16db4:	beq	16dc8 <__assert_fail@plt+0x5a00>
   16db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dbc:	ldr	r0, [r0, #8]
   16dc0:	str	r0, [fp, #-4]
   16dc4:	b	16ea0 <__assert_fail@plt+0x5ad8>
   16dc8:	b	16dcc <__assert_fail@plt+0x5a04>
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	cmp	r0, #0
   16dd4:	blt	16dec <__assert_fail@plt+0x5a24>
   16dd8:	ldr	r0, [fp, #-12]
   16ddc:	add	r1, sp, #24
   16de0:	bl	110d4 <fstatfs64@plt>
   16de4:	cmp	r0, #0
   16de8:	beq	16df8 <__assert_fail@plt+0x5a30>
   16dec:	movw	r0, #0
   16df0:	str	r0, [fp, #-4]
   16df4:	b	16ea0 <__assert_fail@plt+0x5ad8>
   16df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16dfc:	movw	r1, #0
   16e00:	cmp	r0, r1
   16e04:	beq	16e98 <__assert_fail@plt+0x5ad0>
   16e08:	movw	r0, #16
   16e0c:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   16e10:	str	r0, [sp, #4]
   16e14:	ldr	r0, [sp, #4]
   16e18:	movw	r1, #0
   16e1c:	cmp	r0, r1
   16e20:	beq	16e94 <__assert_fail@plt+0x5acc>
   16e24:	ldr	r0, [fp, #-8]
   16e28:	ldr	r1, [r0, #64]	; 0x40
   16e2c:	ldr	r0, [r0, #68]	; 0x44
   16e30:	ldr	r2, [sp, #4]
   16e34:	str	r0, [r2, #4]
   16e38:	str	r1, [r2]
   16e3c:	ldr	r0, [sp, #24]
   16e40:	ldr	r1, [sp, #4]
   16e44:	str	r0, [r1, #8]
   16e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e4c:	ldr	r1, [sp, #4]
   16e50:	bl	187e0 <__assert_fail@plt+0x7418>
   16e54:	str	r0, [fp, #-24]	; 0xffffffe8
   16e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e5c:	movw	r1, #0
   16e60:	cmp	r0, r1
   16e64:	beq	16e88 <__assert_fail@plt+0x5ac0>
   16e68:	b	16e6c <__assert_fail@plt+0x5aa4>
   16e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e70:	ldr	r1, [sp, #4]
   16e74:	cmp	r0, r1
   16e78:	beq	16e80 <__assert_fail@plt+0x5ab8>
   16e7c:	bl	11398 <abort@plt>
   16e80:	b	16e84 <__assert_fail@plt+0x5abc>
   16e84:	b	16e90 <__assert_fail@plt+0x5ac8>
   16e88:	ldr	r0, [sp, #4]
   16e8c:	bl	208f4 <__assert_fail@plt+0xf52c>
   16e90:	b	16e94 <__assert_fail@plt+0x5acc>
   16e94:	b	16e98 <__assert_fail@plt+0x5ad0>
   16e98:	ldr	r0, [sp, #24]
   16e9c:	str	r0, [fp, #-4]
   16ea0:	ldr	r0, [fp, #-4]
   16ea4:	mov	sp, fp
   16ea8:	pop	{fp, pc}
   16eac:	push	{fp, lr}
   16eb0:	mov	fp, sp
   16eb4:	sub	sp, sp, #32
   16eb8:	str	r0, [fp, #-4]
   16ebc:	str	r1, [fp, #-8]
   16ec0:	ldr	r0, [fp, #-4]
   16ec4:	str	r0, [fp, #-12]
   16ec8:	ldr	r0, [fp, #-12]
   16ecc:	ldr	r1, [r0]
   16ed0:	ldr	r0, [r0, #4]
   16ed4:	str	r0, [sp, #12]
   16ed8:	str	r1, [sp, #8]
   16edc:	ldr	r0, [sp, #8]
   16ee0:	ldr	r1, [sp, #12]
   16ee4:	ldr	r2, [fp, #-8]
   16ee8:	mov	r3, #0
   16eec:	bl	22990 <__assert_fail@plt+0x115c8>
   16ef0:	str	r0, [sp, #4]
   16ef4:	mov	r0, r2
   16ef8:	mov	sp, fp
   16efc:	pop	{fp, pc}
   16f00:	sub	sp, sp, #16
   16f04:	str	r0, [sp, #12]
   16f08:	str	r1, [sp, #8]
   16f0c:	ldr	r0, [sp, #12]
   16f10:	str	r0, [sp, #4]
   16f14:	ldr	r0, [sp, #8]
   16f18:	str	r0, [sp]
   16f1c:	ldr	r0, [sp, #4]
   16f20:	ldr	r1, [r0]
   16f24:	ldr	r0, [r0, #4]
   16f28:	ldr	r2, [sp]
   16f2c:	ldr	r3, [r2]
   16f30:	ldr	r2, [r2, #4]
   16f34:	eor	r0, r0, r2
   16f38:	eor	r1, r1, r3
   16f3c:	orr	r0, r1, r0
   16f40:	clz	r0, r0
   16f44:	lsr	r0, r0, #5
   16f48:	and	r0, r0, #1
   16f4c:	add	sp, sp, #16
   16f50:	bx	lr
   16f54:	push	{fp, lr}
   16f58:	mov	fp, sp
   16f5c:	sub	sp, sp, #24
   16f60:	str	r0, [fp, #-4]
   16f64:	str	r1, [fp, #-8]
   16f68:	ldr	r0, [fp, #-4]
   16f6c:	str	r0, [sp, #12]
   16f70:	ldr	r0, [fp, #-8]
   16f74:	str	r0, [sp, #8]
   16f78:	ldr	r0, [sp, #12]
   16f7c:	ldr	r0, [r0]
   16f80:	ldr	r0, [r0, #44]	; 0x2c
   16f84:	ldr	r0, [r0, #44]	; 0x2c
   16f88:	ldr	r1, [sp, #12]
   16f8c:	ldr	r2, [sp, #8]
   16f90:	str	r0, [sp, #4]
   16f94:	mov	r0, r1
   16f98:	mov	r1, r2
   16f9c:	ldr	r2, [sp, #4]
   16fa0:	blx	r2
   16fa4:	mov	sp, fp
   16fa8:	pop	{fp, pc}
   16fac:	andeq	r0, r0, r0
   16fb0:	sub	sp, sp, #4
   16fb4:	str	r0, [sp]
   16fb8:	ldr	r0, [sp]
   16fbc:	ldr	r0, [r0, #8]
   16fc0:	add	sp, sp, #4
   16fc4:	bx	lr
   16fc8:	sub	sp, sp, #4
   16fcc:	str	r0, [sp]
   16fd0:	ldr	r0, [sp]
   16fd4:	ldr	r0, [r0, #12]
   16fd8:	add	sp, sp, #4
   16fdc:	bx	lr
   16fe0:	sub	sp, sp, #4
   16fe4:	str	r0, [sp]
   16fe8:	ldr	r0, [sp]
   16fec:	ldr	r0, [r0, #16]
   16ff0:	add	sp, sp, #4
   16ff4:	bx	lr
   16ff8:	sub	sp, sp, #20
   16ffc:	str	r0, [sp, #16]
   17000:	movw	r0, #0
   17004:	str	r0, [sp, #8]
   17008:	ldr	r0, [sp, #16]
   1700c:	ldr	r0, [r0]
   17010:	str	r0, [sp, #12]
   17014:	ldr	r0, [sp, #12]
   17018:	ldr	r1, [sp, #16]
   1701c:	ldr	r1, [r1, #4]
   17020:	cmp	r0, r1
   17024:	bcs	170a8 <__assert_fail@plt+0x5ce0>
   17028:	ldr	r0, [sp, #12]
   1702c:	ldr	r0, [r0]
   17030:	movw	r1, #0
   17034:	cmp	r0, r1
   17038:	beq	17094 <__assert_fail@plt+0x5ccc>
   1703c:	ldr	r0, [sp, #12]
   17040:	str	r0, [sp, #4]
   17044:	movw	r0, #1
   17048:	str	r0, [sp]
   1704c:	ldr	r0, [sp, #4]
   17050:	ldr	r0, [r0, #4]
   17054:	str	r0, [sp, #4]
   17058:	ldr	r0, [sp, #4]
   1705c:	movw	r1, #0
   17060:	cmp	r0, r1
   17064:	beq	17078 <__assert_fail@plt+0x5cb0>
   17068:	ldr	r0, [sp]
   1706c:	add	r0, r0, #1
   17070:	str	r0, [sp]
   17074:	b	1704c <__assert_fail@plt+0x5c84>
   17078:	ldr	r0, [sp]
   1707c:	ldr	r1, [sp, #8]
   17080:	cmp	r0, r1
   17084:	bls	17090 <__assert_fail@plt+0x5cc8>
   17088:	ldr	r0, [sp]
   1708c:	str	r0, [sp, #8]
   17090:	b	17094 <__assert_fail@plt+0x5ccc>
   17094:	b	17098 <__assert_fail@plt+0x5cd0>
   17098:	ldr	r0, [sp, #12]
   1709c:	add	r0, r0, #8
   170a0:	str	r0, [sp, #12]
   170a4:	b	17014 <__assert_fail@plt+0x5c4c>
   170a8:	ldr	r0, [sp, #8]
   170ac:	add	sp, sp, #20
   170b0:	bx	lr
   170b4:	sub	sp, sp, #24
   170b8:	str	r0, [sp, #16]
   170bc:	movw	r0, #0
   170c0:	str	r0, [sp, #8]
   170c4:	str	r0, [sp, #4]
   170c8:	ldr	r0, [sp, #16]
   170cc:	ldr	r0, [r0]
   170d0:	str	r0, [sp, #12]
   170d4:	ldr	r0, [sp, #12]
   170d8:	ldr	r1, [sp, #16]
   170dc:	ldr	r1, [r1, #4]
   170e0:	cmp	r0, r1
   170e4:	bcs	17160 <__assert_fail@plt+0x5d98>
   170e8:	ldr	r0, [sp, #12]
   170ec:	ldr	r0, [r0]
   170f0:	movw	r1, #0
   170f4:	cmp	r0, r1
   170f8:	beq	1714c <__assert_fail@plt+0x5d84>
   170fc:	ldr	r0, [sp, #12]
   17100:	str	r0, [sp]
   17104:	ldr	r0, [sp, #8]
   17108:	add	r0, r0, #1
   1710c:	str	r0, [sp, #8]
   17110:	ldr	r0, [sp, #4]
   17114:	add	r0, r0, #1
   17118:	str	r0, [sp, #4]
   1711c:	ldr	r0, [sp]
   17120:	ldr	r0, [r0, #4]
   17124:	str	r0, [sp]
   17128:	ldr	r0, [sp]
   1712c:	movw	r1, #0
   17130:	cmp	r0, r1
   17134:	beq	17148 <__assert_fail@plt+0x5d80>
   17138:	ldr	r0, [sp, #4]
   1713c:	add	r0, r0, #1
   17140:	str	r0, [sp, #4]
   17144:	b	1711c <__assert_fail@plt+0x5d54>
   17148:	b	1714c <__assert_fail@plt+0x5d84>
   1714c:	b	17150 <__assert_fail@plt+0x5d88>
   17150:	ldr	r0, [sp, #12]
   17154:	add	r0, r0, #8
   17158:	str	r0, [sp, #12]
   1715c:	b	170d4 <__assert_fail@plt+0x5d0c>
   17160:	ldr	r0, [sp, #8]
   17164:	ldr	r1, [sp, #16]
   17168:	ldr	r1, [r1, #12]
   1716c:	cmp	r0, r1
   17170:	bne	17198 <__assert_fail@plt+0x5dd0>
   17174:	ldr	r0, [sp, #4]
   17178:	ldr	r1, [sp, #16]
   1717c:	ldr	r1, [r1, #16]
   17180:	cmp	r0, r1
   17184:	bne	17198 <__assert_fail@plt+0x5dd0>
   17188:	movw	r0, #1
   1718c:	and	r0, r0, #1
   17190:	strb	r0, [sp, #23]
   17194:	b	171a4 <__assert_fail@plt+0x5ddc>
   17198:	movw	r0, #0
   1719c:	and	r0, r0, #1
   171a0:	strb	r0, [sp, #23]
   171a4:	ldrb	r0, [sp, #23]
   171a8:	and	r0, r0, #1
   171ac:	add	sp, sp, #24
   171b0:	bx	lr
   171b4:	nop	{0}
   171b8:	push	{fp, lr}
   171bc:	mov	fp, sp
   171c0:	sub	sp, sp, #48	; 0x30
   171c4:	str	r0, [fp, #-4]
   171c8:	str	r1, [fp, #-8]
   171cc:	ldr	r0, [fp, #-4]
   171d0:	bl	16fe0 <__assert_fail@plt+0x5c18>
   171d4:	str	r0, [fp, #-12]
   171d8:	ldr	r0, [fp, #-4]
   171dc:	bl	16fb0 <__assert_fail@plt+0x5be8>
   171e0:	str	r0, [fp, #-16]
   171e4:	ldr	r0, [fp, #-4]
   171e8:	bl	16fc8 <__assert_fail@plt+0x5c00>
   171ec:	str	r0, [fp, #-20]	; 0xffffffec
   171f0:	ldr	r0, [fp, #-4]
   171f4:	bl	16ff8 <__assert_fail@plt+0x5c30>
   171f8:	str	r0, [sp, #24]
   171fc:	ldr	r0, [fp, #-8]
   17200:	ldr	r2, [fp, #-12]
   17204:	movw	r1, #13870	; 0x362e
   17208:	movt	r1, #2
   1720c:	bl	11278 <fprintf@plt>
   17210:	ldr	r1, [fp, #-8]
   17214:	ldr	r2, [fp, #-16]
   17218:	str	r0, [sp, #20]
   1721c:	mov	r0, r1
   17220:	movw	r1, #13894	; 0x3646
   17224:	movt	r1, #2
   17228:	bl	11278 <fprintf@plt>
   1722c:	vldr	d16, [pc, #100]	; 17298 <__assert_fail@plt+0x5ed0>
   17230:	ldr	r1, [fp, #-8]
   17234:	ldr	r2, [fp, #-20]	; 0xffffffec
   17238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1723c:	vmov	s0, r3
   17240:	vcvt.f64.u32	d17, s0
   17244:	vmul.f64	d16, d16, d17
   17248:	ldr	r3, [fp, #-16]
   1724c:	vmov	s0, r3
   17250:	vcvt.f64.u32	d17, s0
   17254:	vdiv.f64	d16, d16, d17
   17258:	str	r0, [sp, #16]
   1725c:	mov	r0, r1
   17260:	movw	r1, #13918	; 0x365e
   17264:	movt	r1, #2
   17268:	vstr	d16, [sp]
   1726c:	bl	11278 <fprintf@plt>
   17270:	ldr	r1, [fp, #-8]
   17274:	ldr	r2, [sp, #24]
   17278:	str	r0, [sp, #12]
   1727c:	mov	r0, r1
   17280:	movw	r1, #13951	; 0x367f
   17284:	movt	r1, #2
   17288:	bl	11278 <fprintf@plt>
   1728c:	mov	sp, fp
   17290:	pop	{fp, pc}
   17294:	nop	{0}
   17298:	andeq	r0, r0, r0
   1729c:	subsmi	r0, r9, r0
   172a0:	push	{fp, lr}
   172a4:	mov	fp, sp
   172a8:	sub	sp, sp, #24
   172ac:	str	r0, [fp, #-8]
   172b0:	str	r1, [sp, #12]
   172b4:	ldr	r0, [fp, #-8]
   172b8:	ldr	r1, [sp, #12]
   172bc:	bl	17378 <__assert_fail@plt+0x5fb0>
   172c0:	str	r0, [sp, #8]
   172c4:	ldr	r0, [sp, #8]
   172c8:	ldr	r0, [r0]
   172cc:	movw	r1, #0
   172d0:	cmp	r0, r1
   172d4:	bne	172e4 <__assert_fail@plt+0x5f1c>
   172d8:	movw	r0, #0
   172dc:	str	r0, [fp, #-4]
   172e0:	b	1736c <__assert_fail@plt+0x5fa4>
   172e4:	ldr	r0, [sp, #8]
   172e8:	str	r0, [sp, #4]
   172ec:	ldr	r0, [sp, #4]
   172f0:	movw	r1, #0
   172f4:	cmp	r0, r1
   172f8:	beq	17364 <__assert_fail@plt+0x5f9c>
   172fc:	ldr	r0, [sp, #12]
   17300:	ldr	r1, [sp, #4]
   17304:	ldr	r1, [r1]
   17308:	cmp	r0, r1
   1730c:	beq	17340 <__assert_fail@plt+0x5f78>
   17310:	ldr	r0, [fp, #-8]
   17314:	ldr	r0, [r0, #28]
   17318:	ldr	r1, [sp, #12]
   1731c:	ldr	r2, [sp, #4]
   17320:	ldr	r2, [r2]
   17324:	str	r0, [sp]
   17328:	mov	r0, r1
   1732c:	mov	r1, r2
   17330:	ldr	r2, [sp]
   17334:	blx	r2
   17338:	tst	r0, #1
   1733c:	beq	17350 <__assert_fail@plt+0x5f88>
   17340:	ldr	r0, [sp, #4]
   17344:	ldr	r0, [r0]
   17348:	str	r0, [fp, #-4]
   1734c:	b	1736c <__assert_fail@plt+0x5fa4>
   17350:	b	17354 <__assert_fail@plt+0x5f8c>
   17354:	ldr	r0, [sp, #4]
   17358:	ldr	r0, [r0, #4]
   1735c:	str	r0, [sp, #4]
   17360:	b	172ec <__assert_fail@plt+0x5f24>
   17364:	movw	r0, #0
   17368:	str	r0, [fp, #-4]
   1736c:	ldr	r0, [fp, #-4]
   17370:	mov	sp, fp
   17374:	pop	{fp, pc}
   17378:	push	{fp, lr}
   1737c:	mov	fp, sp
   17380:	sub	sp, sp, #16
   17384:	str	r0, [fp, #-4]
   17388:	str	r1, [sp, #8]
   1738c:	ldr	r0, [fp, #-4]
   17390:	ldr	r0, [r0, #24]
   17394:	ldr	r1, [sp, #8]
   17398:	ldr	r2, [fp, #-4]
   1739c:	ldr	r2, [r2, #8]
   173a0:	str	r0, [sp]
   173a4:	mov	r0, r1
   173a8:	mov	r1, r2
   173ac:	ldr	r2, [sp]
   173b0:	blx	r2
   173b4:	str	r0, [sp, #4]
   173b8:	ldr	r0, [sp, #4]
   173bc:	ldr	r1, [fp, #-4]
   173c0:	ldr	r1, [r1, #8]
   173c4:	cmp	r0, r1
   173c8:	bcc	173d0 <__assert_fail@plt+0x6008>
   173cc:	bl	11398 <abort@plt>
   173d0:	ldr	r0, [fp, #-4]
   173d4:	ldr	r0, [r0]
   173d8:	ldr	r1, [sp, #4]
   173dc:	add	r0, r0, r1, lsl #3
   173e0:	mov	sp, fp
   173e4:	pop	{fp, pc}
   173e8:	push	{fp, lr}
   173ec:	mov	fp, sp
   173f0:	sub	sp, sp, #16
   173f4:	str	r0, [sp, #8]
   173f8:	ldr	r0, [sp, #8]
   173fc:	ldr	r0, [r0, #16]
   17400:	cmp	r0, #0
   17404:	bne	17414 <__assert_fail@plt+0x604c>
   17408:	movw	r0, #0
   1740c:	str	r0, [fp, #-4]
   17410:	b	17474 <__assert_fail@plt+0x60ac>
   17414:	ldr	r0, [sp, #8]
   17418:	ldr	r0, [r0]
   1741c:	str	r0, [sp, #4]
   17420:	ldr	r0, [sp, #4]
   17424:	ldr	r1, [sp, #8]
   17428:	ldr	r1, [r1, #4]
   1742c:	cmp	r0, r1
   17430:	bcc	17438 <__assert_fail@plt+0x6070>
   17434:	bl	11398 <abort@plt>
   17438:	ldr	r0, [sp, #4]
   1743c:	ldr	r0, [r0]
   17440:	movw	r1, #0
   17444:	cmp	r0, r1
   17448:	beq	1745c <__assert_fail@plt+0x6094>
   1744c:	ldr	r0, [sp, #4]
   17450:	ldr	r0, [r0]
   17454:	str	r0, [fp, #-4]
   17458:	b	17474 <__assert_fail@plt+0x60ac>
   1745c:	b	17460 <__assert_fail@plt+0x6098>
   17460:	b	17464 <__assert_fail@plt+0x609c>
   17464:	ldr	r0, [sp, #4]
   17468:	add	r0, r0, #8
   1746c:	str	r0, [sp, #4]
   17470:	b	17420 <__assert_fail@plt+0x6058>
   17474:	ldr	r0, [fp, #-4]
   17478:	mov	sp, fp
   1747c:	pop	{fp, pc}
   17480:	push	{fp, lr}
   17484:	mov	fp, sp
   17488:	sub	sp, sp, #24
   1748c:	str	r0, [fp, #-8]
   17490:	str	r1, [sp, #12]
   17494:	ldr	r0, [fp, #-8]
   17498:	ldr	r1, [sp, #12]
   1749c:	bl	17378 <__assert_fail@plt+0x5fb0>
   174a0:	str	r0, [sp, #8]
   174a4:	ldr	r0, [sp, #8]
   174a8:	str	r0, [sp, #4]
   174ac:	ldr	r0, [sp, #4]
   174b0:	ldr	r0, [r0]
   174b4:	ldr	r1, [sp, #12]
   174b8:	cmp	r0, r1
   174bc:	bne	174e8 <__assert_fail@plt+0x6120>
   174c0:	ldr	r0, [sp, #4]
   174c4:	ldr	r0, [r0, #4]
   174c8:	movw	r1, #0
   174cc:	cmp	r0, r1
   174d0:	beq	174e8 <__assert_fail@plt+0x6120>
   174d4:	ldr	r0, [sp, #4]
   174d8:	ldr	r0, [r0, #4]
   174dc:	ldr	r0, [r0]
   174e0:	str	r0, [fp, #-4]
   174e4:	b	17554 <__assert_fail@plt+0x618c>
   174e8:	ldr	r0, [sp, #4]
   174ec:	ldr	r0, [r0, #4]
   174f0:	str	r0, [sp, #4]
   174f4:	ldr	r0, [sp, #4]
   174f8:	movw	r1, #0
   174fc:	cmp	r0, r1
   17500:	bne	174ac <__assert_fail@plt+0x60e4>
   17504:	b	17508 <__assert_fail@plt+0x6140>
   17508:	ldr	r0, [sp, #8]
   1750c:	add	r0, r0, #8
   17510:	str	r0, [sp, #8]
   17514:	ldr	r1, [fp, #-8]
   17518:	ldr	r1, [r1, #4]
   1751c:	cmp	r0, r1
   17520:	bcs	1754c <__assert_fail@plt+0x6184>
   17524:	ldr	r0, [sp, #8]
   17528:	ldr	r0, [r0]
   1752c:	movw	r1, #0
   17530:	cmp	r0, r1
   17534:	beq	17548 <__assert_fail@plt+0x6180>
   17538:	ldr	r0, [sp, #8]
   1753c:	ldr	r0, [r0]
   17540:	str	r0, [fp, #-4]
   17544:	b	17554 <__assert_fail@plt+0x618c>
   17548:	b	17508 <__assert_fail@plt+0x6140>
   1754c:	movw	r0, #0
   17550:	str	r0, [fp, #-4]
   17554:	ldr	r0, [fp, #-4]
   17558:	mov	sp, fp
   1755c:	pop	{fp, pc}
   17560:	sub	sp, sp, #28
   17564:	str	r0, [sp, #20]
   17568:	str	r1, [sp, #16]
   1756c:	str	r2, [sp, #12]
   17570:	movw	r0, #0
   17574:	str	r0, [sp, #8]
   17578:	ldr	r0, [sp, #20]
   1757c:	ldr	r0, [r0]
   17580:	str	r0, [sp, #4]
   17584:	ldr	r0, [sp, #4]
   17588:	ldr	r1, [sp, #20]
   1758c:	ldr	r1, [r1, #4]
   17590:	cmp	r0, r1
   17594:	bcs	17628 <__assert_fail@plt+0x6260>
   17598:	ldr	r0, [sp, #4]
   1759c:	ldr	r0, [r0]
   175a0:	movw	r1, #0
   175a4:	cmp	r0, r1
   175a8:	beq	17614 <__assert_fail@plt+0x624c>
   175ac:	ldr	r0, [sp, #4]
   175b0:	str	r0, [sp]
   175b4:	ldr	r0, [sp]
   175b8:	movw	r1, #0
   175bc:	cmp	r0, r1
   175c0:	beq	17610 <__assert_fail@plt+0x6248>
   175c4:	ldr	r0, [sp, #8]
   175c8:	ldr	r1, [sp, #12]
   175cc:	cmp	r0, r1
   175d0:	bcc	175e0 <__assert_fail@plt+0x6218>
   175d4:	ldr	r0, [sp, #8]
   175d8:	str	r0, [sp, #24]
   175dc:	b	17630 <__assert_fail@plt+0x6268>
   175e0:	ldr	r0, [sp]
   175e4:	ldr	r0, [r0]
   175e8:	ldr	r1, [sp, #16]
   175ec:	ldr	r2, [sp, #8]
   175f0:	add	r3, r2, #1
   175f4:	str	r3, [sp, #8]
   175f8:	add	r1, r1, r2, lsl #2
   175fc:	str	r0, [r1]
   17600:	ldr	r0, [sp]
   17604:	ldr	r0, [r0, #4]
   17608:	str	r0, [sp]
   1760c:	b	175b4 <__assert_fail@plt+0x61ec>
   17610:	b	17614 <__assert_fail@plt+0x624c>
   17614:	b	17618 <__assert_fail@plt+0x6250>
   17618:	ldr	r0, [sp, #4]
   1761c:	add	r0, r0, #8
   17620:	str	r0, [sp, #4]
   17624:	b	17584 <__assert_fail@plt+0x61bc>
   17628:	ldr	r0, [sp, #8]
   1762c:	str	r0, [sp, #24]
   17630:	ldr	r0, [sp, #24]
   17634:	add	sp, sp, #28
   17638:	bx	lr
   1763c:	push	{fp, lr}
   17640:	mov	fp, sp
   17644:	sub	sp, sp, #32
   17648:	str	r0, [fp, #-8]
   1764c:	str	r1, [fp, #-12]
   17650:	str	r2, [sp, #16]
   17654:	movw	r0, #0
   17658:	str	r0, [sp, #12]
   1765c:	ldr	r0, [fp, #-8]
   17660:	ldr	r0, [r0]
   17664:	str	r0, [sp, #8]
   17668:	ldr	r0, [sp, #8]
   1766c:	ldr	r1, [fp, #-8]
   17670:	ldr	r1, [r1, #4]
   17674:	cmp	r0, r1
   17678:	bcs	17714 <__assert_fail@plt+0x634c>
   1767c:	ldr	r0, [sp, #8]
   17680:	ldr	r0, [r0]
   17684:	movw	r1, #0
   17688:	cmp	r0, r1
   1768c:	beq	17700 <__assert_fail@plt+0x6338>
   17690:	ldr	r0, [sp, #8]
   17694:	str	r0, [sp, #4]
   17698:	ldr	r0, [sp, #4]
   1769c:	movw	r1, #0
   176a0:	cmp	r0, r1
   176a4:	beq	176fc <__assert_fail@plt+0x6334>
   176a8:	ldr	r0, [fp, #-12]
   176ac:	ldr	r1, [sp, #4]
   176b0:	ldr	r1, [r1]
   176b4:	ldr	r2, [sp, #16]
   176b8:	str	r0, [sp]
   176bc:	mov	r0, r1
   176c0:	mov	r1, r2
   176c4:	ldr	r2, [sp]
   176c8:	blx	r2
   176cc:	tst	r0, #1
   176d0:	bne	176e0 <__assert_fail@plt+0x6318>
   176d4:	ldr	r0, [sp, #12]
   176d8:	str	r0, [fp, #-4]
   176dc:	b	1771c <__assert_fail@plt+0x6354>
   176e0:	ldr	r0, [sp, #12]
   176e4:	add	r0, r0, #1
   176e8:	str	r0, [sp, #12]
   176ec:	ldr	r0, [sp, #4]
   176f0:	ldr	r0, [r0, #4]
   176f4:	str	r0, [sp, #4]
   176f8:	b	17698 <__assert_fail@plt+0x62d0>
   176fc:	b	17700 <__assert_fail@plt+0x6338>
   17700:	b	17704 <__assert_fail@plt+0x633c>
   17704:	ldr	r0, [sp, #8]
   17708:	add	r0, r0, #8
   1770c:	str	r0, [sp, #8]
   17710:	b	17668 <__assert_fail@plt+0x62a0>
   17714:	ldr	r0, [sp, #12]
   17718:	str	r0, [fp, #-4]
   1771c:	ldr	r0, [fp, #-4]
   17720:	mov	sp, fp
   17724:	pop	{fp, pc}
   17728:	sub	sp, sp, #16
   1772c:	str	r0, [sp, #12]
   17730:	str	r1, [sp, #8]
   17734:	movw	r0, #0
   17738:	str	r0, [sp, #4]
   1773c:	ldr	r0, [sp, #12]
   17740:	ldrb	r0, [r0]
   17744:	strb	r0, [sp, #3]
   17748:	sxtb	r0, r0
   1774c:	cmp	r0, #0
   17750:	beq	17784 <__assert_fail@plt+0x63bc>
   17754:	ldr	r0, [sp, #4]
   17758:	rsb	r0, r0, r0, lsl #5
   1775c:	ldrb	r1, [sp, #3]
   17760:	add	r0, r0, r1
   17764:	ldr	r1, [sp, #8]
   17768:	udiv	r2, r0, r1
   1776c:	mls	r0, r2, r1, r0
   17770:	str	r0, [sp, #4]
   17774:	ldr	r0, [sp, #12]
   17778:	add	r0, r0, #1
   1777c:	str	r0, [sp, #12]
   17780:	b	1773c <__assert_fail@plt+0x6374>
   17784:	ldr	r0, [sp, #4]
   17788:	add	sp, sp, #16
   1778c:	bx	lr
   17790:	push	{fp, lr}
   17794:	mov	fp, sp
   17798:	sub	sp, sp, #8
   1779c:	movw	r1, #13976	; 0x3698
   177a0:	movt	r1, #2
   177a4:	str	r0, [sp, #4]
   177a8:	ldr	r0, [sp, #4]
   177ac:	movw	r2, #20
   177b0:	bl	1114c <memcpy@plt>
   177b4:	mov	sp, fp
   177b8:	pop	{fp, pc}
   177bc:	push	{fp, lr}
   177c0:	mov	fp, sp
   177c4:	sub	sp, sp, #24
   177c8:	ldr	ip, [fp, #8]
   177cc:	str	r0, [fp, #-8]
   177d0:	str	r1, [sp, #12]
   177d4:	str	r2, [sp, #8]
   177d8:	str	r3, [sp, #4]
   177dc:	ldr	r0, [sp, #8]
   177e0:	movw	r1, #0
   177e4:	cmp	r0, r1
   177e8:	bne	177f8 <__assert_fail@plt+0x6430>
   177ec:	movw	r0, #31056	; 0x7950
   177f0:	movt	r0, #1
   177f4:	str	r0, [sp, #8]
   177f8:	ldr	r0, [sp, #4]
   177fc:	movw	r1, #0
   17800:	cmp	r0, r1
   17804:	bne	17814 <__assert_fail@plt+0x644c>
   17808:	movw	r0, #31116	; 0x798c
   1780c:	movt	r0, #1
   17810:	str	r0, [sp, #4]
   17814:	movw	r0, #40	; 0x28
   17818:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   1781c:	str	r0, [sp]
   17820:	ldr	r0, [sp]
   17824:	movw	r1, #0
   17828:	cmp	r0, r1
   1782c:	bne	1783c <__assert_fail@plt+0x6474>
   17830:	movw	r0, #0
   17834:	str	r0, [fp, #-4]
   17838:	b	17944 <__assert_fail@plt+0x657c>
   1783c:	ldr	r0, [sp, #12]
   17840:	movw	r1, #0
   17844:	cmp	r0, r1
   17848:	bne	17858 <__assert_fail@plt+0x6490>
   1784c:	movw	r0, #13976	; 0x3698
   17850:	movt	r0, #2
   17854:	str	r0, [sp, #12]
   17858:	ldr	r0, [sp, #12]
   1785c:	ldr	r1, [sp]
   17860:	str	r0, [r1, #20]
   17864:	ldr	r0, [sp]
   17868:	bl	179b8 <__assert_fail@plt+0x65f0>
   1786c:	tst	r0, #1
   17870:	bne	17878 <__assert_fail@plt+0x64b0>
   17874:	b	17934 <__assert_fail@plt+0x656c>
   17878:	ldr	r0, [fp, #-8]
   1787c:	ldr	r1, [sp, #12]
   17880:	bl	17b0c <__assert_fail@plt+0x6744>
   17884:	ldr	r1, [sp]
   17888:	str	r0, [r1, #8]
   1788c:	ldr	r0, [sp]
   17890:	ldr	r0, [r0, #8]
   17894:	cmp	r0, #0
   17898:	bne	178a0 <__assert_fail@plt+0x64d8>
   1789c:	b	17934 <__assert_fail@plt+0x656c>
   178a0:	ldr	r0, [sp]
   178a4:	ldr	r0, [r0, #8]
   178a8:	movw	r1, #8
   178ac:	bl	1faf4 <__assert_fail@plt+0xe72c>
   178b0:	ldr	r1, [sp]
   178b4:	str	r0, [r1]
   178b8:	ldr	r0, [sp]
   178bc:	ldr	r0, [r0]
   178c0:	movw	r1, #0
   178c4:	cmp	r0, r1
   178c8:	bne	178d0 <__assert_fail@plt+0x6508>
   178cc:	b	17934 <__assert_fail@plt+0x656c>
   178d0:	ldr	r0, [sp]
   178d4:	ldr	r1, [r0]
   178d8:	ldr	r0, [r0, #8]
   178dc:	add	r0, r1, r0, lsl #3
   178e0:	ldr	r1, [sp]
   178e4:	str	r0, [r1, #4]
   178e8:	ldr	r0, [sp]
   178ec:	movw	r1, #0
   178f0:	str	r1, [r0, #12]
   178f4:	ldr	r0, [sp]
   178f8:	str	r1, [r0, #16]
   178fc:	ldr	r0, [sp, #8]
   17900:	ldr	r2, [sp]
   17904:	str	r0, [r2, #24]
   17908:	ldr	r0, [sp, #4]
   1790c:	ldr	r2, [sp]
   17910:	str	r0, [r2, #28]
   17914:	ldr	r0, [fp, #8]
   17918:	ldr	r2, [sp]
   1791c:	str	r0, [r2, #32]
   17920:	ldr	r0, [sp]
   17924:	str	r1, [r0, #36]	; 0x24
   17928:	ldr	r0, [sp]
   1792c:	str	r0, [fp, #-4]
   17930:	b	17944 <__assert_fail@plt+0x657c>
   17934:	ldr	r0, [sp]
   17938:	bl	208f4 <__assert_fail@plt+0xf52c>
   1793c:	movw	r0, #0
   17940:	str	r0, [fp, #-4]
   17944:	ldr	r0, [fp, #-4]
   17948:	mov	sp, fp
   1794c:	pop	{fp, pc}
   17950:	push	{fp, lr}
   17954:	mov	fp, sp
   17958:	sub	sp, sp, #16
   1795c:	str	r0, [fp, #-4]
   17960:	str	r1, [sp, #8]
   17964:	ldr	r0, [fp, #-4]
   17968:	mov	r1, #3
   1796c:	bl	1fe44 <__assert_fail@plt+0xea7c>
   17970:	str	r0, [sp, #4]
   17974:	ldr	r0, [sp, #4]
   17978:	ldr	r1, [sp, #8]
   1797c:	udiv	r2, r0, r1
   17980:	mls	r0, r2, r1, r0
   17984:	mov	sp, fp
   17988:	pop	{fp, pc}
   1798c:	sub	sp, sp, #8
   17990:	str	r0, [sp, #4]
   17994:	str	r1, [sp]
   17998:	ldr	r0, [sp, #4]
   1799c:	ldr	r1, [sp]
   179a0:	cmp	r0, r1
   179a4:	movw	r0, #0
   179a8:	moveq	r0, #1
   179ac:	and	r0, r0, #1
   179b0:	add	sp, sp, #8
   179b4:	bx	lr
   179b8:	sub	sp, sp, #16
   179bc:	str	r0, [sp, #8]
   179c0:	ldr	r0, [sp, #8]
   179c4:	ldr	r0, [r0, #20]
   179c8:	str	r0, [sp, #4]
   179cc:	ldr	r0, [sp, #4]
   179d0:	movw	r1, #13976	; 0x3698
   179d4:	movt	r1, #2
   179d8:	cmp	r0, r1
   179dc:	bne	179f0 <__assert_fail@plt+0x6628>
   179e0:	movw	r0, #1
   179e4:	and	r0, r0, #1
   179e8:	strb	r0, [sp, #15]
   179ec:	b	17af4 <__assert_fail@plt+0x672c>
   179f0:	vldr	s0, [pc, #268]	; 17b04 <__assert_fail@plt+0x673c>
   179f4:	vstr	s0, [sp]
   179f8:	vldr	s0, [sp]
   179fc:	ldr	r0, [sp, #4]
   17a00:	vldr	s2, [r0, #8]
   17a04:	vcmpe.f32	s0, s2
   17a08:	vmrs	APSR_nzcv, fpscr
   17a0c:	bpl	17ad8 <__assert_fail@plt+0x6710>
   17a10:	ldr	r0, [sp, #4]
   17a14:	vldr	s0, [r0, #8]
   17a18:	vldr	s2, [sp]
   17a1c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17a20:	vsub.f32	s2, s4, s2
   17a24:	vcmpe.f32	s0, s2
   17a28:	vmrs	APSR_nzcv, fpscr
   17a2c:	bpl	17ad8 <__assert_fail@plt+0x6710>
   17a30:	vldr	s0, [sp]
   17a34:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17a38:	vadd.f32	s0, s2, s0
   17a3c:	ldr	r0, [sp, #4]
   17a40:	vldr	s2, [r0, #12]
   17a44:	vcmpe.f32	s0, s2
   17a48:	vmrs	APSR_nzcv, fpscr
   17a4c:	bpl	17ad8 <__assert_fail@plt+0x6710>
   17a50:	vldr	s0, [pc, #176]	; 17b08 <__assert_fail@plt+0x6740>
   17a54:	ldr	r0, [sp, #4]
   17a58:	vldr	s2, [r0]
   17a5c:	vcmpe.f32	s0, s2
   17a60:	vmrs	APSR_nzcv, fpscr
   17a64:	bhi	17ad8 <__assert_fail@plt+0x6710>
   17a68:	ldr	r0, [sp, #4]
   17a6c:	vldr	s0, [r0]
   17a70:	vldr	s2, [sp]
   17a74:	vadd.f32	s0, s0, s2
   17a78:	ldr	r0, [sp, #4]
   17a7c:	vldr	s2, [r0, #4]
   17a80:	vcmpe.f32	s0, s2
   17a84:	vmrs	APSR_nzcv, fpscr
   17a88:	bpl	17ad8 <__assert_fail@plt+0x6710>
   17a8c:	ldr	r0, [sp, #4]
   17a90:	vldr	s0, [r0, #4]
   17a94:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17a98:	vcmpe.f32	s0, s2
   17a9c:	vmrs	APSR_nzcv, fpscr
   17aa0:	bhi	17ad8 <__assert_fail@plt+0x6710>
   17aa4:	ldr	r0, [sp, #4]
   17aa8:	vldr	s0, [r0]
   17aac:	vldr	s2, [sp]
   17ab0:	vadd.f32	s0, s0, s2
   17ab4:	ldr	r0, [sp, #4]
   17ab8:	vldr	s2, [r0, #8]
   17abc:	vcmpe.f32	s0, s2
   17ac0:	vmrs	APSR_nzcv, fpscr
   17ac4:	bpl	17ad8 <__assert_fail@plt+0x6710>
   17ac8:	movw	r0, #1
   17acc:	and	r0, r0, #1
   17ad0:	strb	r0, [sp, #15]
   17ad4:	b	17af4 <__assert_fail@plt+0x672c>
   17ad8:	ldr	r0, [sp, #8]
   17adc:	movw	r1, #13976	; 0x3698
   17ae0:	movt	r1, #2
   17ae4:	str	r1, [r0, #20]
   17ae8:	movw	r0, #0
   17aec:	and	r0, r0, #1
   17af0:	strb	r0, [sp, #15]
   17af4:	ldrb	r0, [sp, #15]
   17af8:	and	r0, r0, #1
   17afc:	add	sp, sp, #16
   17b00:	bx	lr
   17b04:	stclcc	12, cr12, [ip, #820]	; 0x334
   17b08:	andeq	r0, r0, r0
   17b0c:	push	{fp, lr}
   17b10:	mov	fp, sp
   17b14:	sub	sp, sp, #16
   17b18:	str	r0, [sp, #8]
   17b1c:	str	r1, [sp, #4]
   17b20:	ldr	r0, [sp, #4]
   17b24:	ldrb	r0, [r0, #16]
   17b28:	tst	r0, #1
   17b2c:	bne	17b7c <__assert_fail@plt+0x67b4>
   17b30:	vldr	s0, [pc, #128]	; 17bb8 <__assert_fail@plt+0x67f0>
   17b34:	ldr	r0, [sp, #8]
   17b38:	vmov	s2, r0
   17b3c:	vcvt.f32.u32	s2, s2
   17b40:	ldr	r0, [sp, #4]
   17b44:	vldr	s4, [r0, #8]
   17b48:	vdiv.f32	s2, s2, s4
   17b4c:	vstr	s2, [sp]
   17b50:	vldr	s2, [sp]
   17b54:	vcmpe.f32	s0, s2
   17b58:	vmrs	APSR_nzcv, fpscr
   17b5c:	bhi	17b6c <__assert_fail@plt+0x67a4>
   17b60:	movw	r0, #0
   17b64:	str	r0, [fp, #-4]
   17b68:	b	17bac <__assert_fail@plt+0x67e4>
   17b6c:	vldr	s0, [sp]
   17b70:	vcvt.u32.f32	s0, s0
   17b74:	vmov	r0, s0
   17b78:	str	r0, [sp, #8]
   17b7c:	ldr	r0, [sp, #8]
   17b80:	bl	18a7c <__assert_fail@plt+0x76b4>
   17b84:	ldr	r1, [pc, #48]	; 17bbc <__assert_fail@plt+0x67f4>
   17b88:	str	r0, [sp, #8]
   17b8c:	ldr	r0, [sp, #8]
   17b90:	cmp	r1, r0
   17b94:	bcs	17ba4 <__assert_fail@plt+0x67dc>
   17b98:	movw	r0, #0
   17b9c:	str	r0, [fp, #-4]
   17ba0:	b	17bac <__assert_fail@plt+0x67e4>
   17ba4:	ldr	r0, [sp, #8]
   17ba8:	str	r0, [fp, #-4]
   17bac:	ldr	r0, [fp, #-4]
   17bb0:	mov	sp, fp
   17bb4:	pop	{fp, pc}
   17bb8:	svcmi	0x00800000
   17bbc:	svcne	0x00ffffff
   17bc0:	push	{fp, lr}
   17bc4:	mov	fp, sp
   17bc8:	sub	sp, sp, #24
   17bcc:	str	r0, [fp, #-4]
   17bd0:	ldr	r0, [fp, #-4]
   17bd4:	ldr	r0, [r0]
   17bd8:	str	r0, [fp, #-8]
   17bdc:	ldr	r0, [fp, #-8]
   17be0:	ldr	r1, [fp, #-4]
   17be4:	ldr	r1, [r1, #4]
   17be8:	cmp	r0, r1
   17bec:	bcs	17cf0 <__assert_fail@plt+0x6928>
   17bf0:	ldr	r0, [fp, #-8]
   17bf4:	ldr	r0, [r0]
   17bf8:	movw	r1, #0
   17bfc:	cmp	r0, r1
   17c00:	beq	17cdc <__assert_fail@plt+0x6914>
   17c04:	ldr	r0, [fp, #-8]
   17c08:	ldr	r0, [r0, #4]
   17c0c:	str	r0, [sp, #12]
   17c10:	ldr	r0, [sp, #12]
   17c14:	movw	r1, #0
   17c18:	cmp	r0, r1
   17c1c:	beq	17c94 <__assert_fail@plt+0x68cc>
   17c20:	ldr	r0, [fp, #-4]
   17c24:	ldr	r0, [r0, #32]
   17c28:	movw	r1, #0
   17c2c:	cmp	r0, r1
   17c30:	beq	17c54 <__assert_fail@plt+0x688c>
   17c34:	ldr	r0, [fp, #-4]
   17c38:	ldr	r0, [r0, #32]
   17c3c:	ldr	r1, [sp, #12]
   17c40:	ldr	r1, [r1]
   17c44:	str	r0, [sp, #4]
   17c48:	mov	r0, r1
   17c4c:	ldr	r1, [sp, #4]
   17c50:	blx	r1
   17c54:	ldr	r0, [sp, #12]
   17c58:	movw	r1, #0
   17c5c:	str	r1, [r0]
   17c60:	ldr	r0, [sp, #12]
   17c64:	ldr	r0, [r0, #4]
   17c68:	str	r0, [sp, #8]
   17c6c:	ldr	r0, [fp, #-4]
   17c70:	ldr	r0, [r0, #36]	; 0x24
   17c74:	ldr	r1, [sp, #12]
   17c78:	str	r0, [r1, #4]
   17c7c:	ldr	r0, [sp, #12]
   17c80:	ldr	r1, [fp, #-4]
   17c84:	str	r0, [r1, #36]	; 0x24
   17c88:	ldr	r0, [sp, #8]
   17c8c:	str	r0, [sp, #12]
   17c90:	b	17c10 <__assert_fail@plt+0x6848>
   17c94:	ldr	r0, [fp, #-4]
   17c98:	ldr	r0, [r0, #32]
   17c9c:	movw	r1, #0
   17ca0:	cmp	r0, r1
   17ca4:	beq	17cc8 <__assert_fail@plt+0x6900>
   17ca8:	ldr	r0, [fp, #-4]
   17cac:	ldr	r0, [r0, #32]
   17cb0:	ldr	r1, [fp, #-8]
   17cb4:	ldr	r1, [r1]
   17cb8:	str	r0, [sp]
   17cbc:	mov	r0, r1
   17cc0:	ldr	r1, [sp]
   17cc4:	blx	r1
   17cc8:	ldr	r0, [fp, #-8]
   17ccc:	movw	r1, #0
   17cd0:	str	r1, [r0]
   17cd4:	ldr	r0, [fp, #-8]
   17cd8:	str	r1, [r0, #4]
   17cdc:	b	17ce0 <__assert_fail@plt+0x6918>
   17ce0:	ldr	r0, [fp, #-8]
   17ce4:	add	r0, r0, #8
   17ce8:	str	r0, [fp, #-8]
   17cec:	b	17bdc <__assert_fail@plt+0x6814>
   17cf0:	ldr	r0, [fp, #-4]
   17cf4:	movw	r1, #0
   17cf8:	str	r1, [r0, #12]
   17cfc:	ldr	r0, [fp, #-4]
   17d00:	str	r1, [r0, #16]
   17d04:	mov	sp, fp
   17d08:	pop	{fp, pc}
   17d0c:	push	{fp, lr}
   17d10:	mov	fp, sp
   17d14:	sub	sp, sp, #24
   17d18:	str	r0, [fp, #-4]
   17d1c:	ldr	r0, [fp, #-4]
   17d20:	ldr	r0, [r0, #32]
   17d24:	movw	r1, #0
   17d28:	cmp	r0, r1
   17d2c:	beq	17dd8 <__assert_fail@plt+0x6a10>
   17d30:	ldr	r0, [fp, #-4]
   17d34:	ldr	r0, [r0, #16]
   17d38:	cmp	r0, #0
   17d3c:	beq	17dd8 <__assert_fail@plt+0x6a10>
   17d40:	ldr	r0, [fp, #-4]
   17d44:	ldr	r0, [r0]
   17d48:	str	r0, [fp, #-8]
   17d4c:	ldr	r0, [fp, #-8]
   17d50:	ldr	r1, [fp, #-4]
   17d54:	ldr	r1, [r1, #4]
   17d58:	cmp	r0, r1
   17d5c:	bcs	17dd4 <__assert_fail@plt+0x6a0c>
   17d60:	ldr	r0, [fp, #-8]
   17d64:	ldr	r0, [r0]
   17d68:	movw	r1, #0
   17d6c:	cmp	r0, r1
   17d70:	beq	17dc0 <__assert_fail@plt+0x69f8>
   17d74:	ldr	r0, [fp, #-8]
   17d78:	str	r0, [sp, #12]
   17d7c:	ldr	r0, [sp, #12]
   17d80:	movw	r1, #0
   17d84:	cmp	r0, r1
   17d88:	beq	17dbc <__assert_fail@plt+0x69f4>
   17d8c:	ldr	r0, [fp, #-4]
   17d90:	ldr	r0, [r0, #32]
   17d94:	ldr	r1, [sp, #12]
   17d98:	ldr	r1, [r1]
   17d9c:	str	r0, [sp, #4]
   17da0:	mov	r0, r1
   17da4:	ldr	r1, [sp, #4]
   17da8:	blx	r1
   17dac:	ldr	r0, [sp, #12]
   17db0:	ldr	r0, [r0, #4]
   17db4:	str	r0, [sp, #12]
   17db8:	b	17d7c <__assert_fail@plt+0x69b4>
   17dbc:	b	17dc0 <__assert_fail@plt+0x69f8>
   17dc0:	b	17dc4 <__assert_fail@plt+0x69fc>
   17dc4:	ldr	r0, [fp, #-8]
   17dc8:	add	r0, r0, #8
   17dcc:	str	r0, [fp, #-8]
   17dd0:	b	17d4c <__assert_fail@plt+0x6984>
   17dd4:	b	17dd8 <__assert_fail@plt+0x6a10>
   17dd8:	ldr	r0, [fp, #-4]
   17ddc:	ldr	r0, [r0]
   17de0:	str	r0, [fp, #-8]
   17de4:	ldr	r0, [fp, #-8]
   17de8:	ldr	r1, [fp, #-4]
   17dec:	ldr	r1, [r1, #4]
   17df0:	cmp	r0, r1
   17df4:	bcs	17e48 <__assert_fail@plt+0x6a80>
   17df8:	ldr	r0, [fp, #-8]
   17dfc:	ldr	r0, [r0, #4]
   17e00:	str	r0, [sp, #12]
   17e04:	ldr	r0, [sp, #12]
   17e08:	movw	r1, #0
   17e0c:	cmp	r0, r1
   17e10:	beq	17e34 <__assert_fail@plt+0x6a6c>
   17e14:	ldr	r0, [sp, #12]
   17e18:	ldr	r0, [r0, #4]
   17e1c:	str	r0, [sp, #8]
   17e20:	ldr	r0, [sp, #12]
   17e24:	bl	208f4 <__assert_fail@plt+0xf52c>
   17e28:	ldr	r0, [sp, #8]
   17e2c:	str	r0, [sp, #12]
   17e30:	b	17e04 <__assert_fail@plt+0x6a3c>
   17e34:	b	17e38 <__assert_fail@plt+0x6a70>
   17e38:	ldr	r0, [fp, #-8]
   17e3c:	add	r0, r0, #8
   17e40:	str	r0, [fp, #-8]
   17e44:	b	17de4 <__assert_fail@plt+0x6a1c>
   17e48:	ldr	r0, [fp, #-4]
   17e4c:	ldr	r0, [r0, #36]	; 0x24
   17e50:	str	r0, [sp, #12]
   17e54:	ldr	r0, [sp, #12]
   17e58:	movw	r1, #0
   17e5c:	cmp	r0, r1
   17e60:	beq	17e84 <__assert_fail@plt+0x6abc>
   17e64:	ldr	r0, [sp, #12]
   17e68:	ldr	r0, [r0, #4]
   17e6c:	str	r0, [sp, #8]
   17e70:	ldr	r0, [sp, #12]
   17e74:	bl	208f4 <__assert_fail@plt+0xf52c>
   17e78:	ldr	r0, [sp, #8]
   17e7c:	str	r0, [sp, #12]
   17e80:	b	17e54 <__assert_fail@plt+0x6a8c>
   17e84:	ldr	r0, [fp, #-4]
   17e88:	ldr	r0, [r0]
   17e8c:	bl	208f4 <__assert_fail@plt+0xf52c>
   17e90:	ldr	r0, [fp, #-4]
   17e94:	bl	208f4 <__assert_fail@plt+0xf52c>
   17e98:	mov	sp, fp
   17e9c:	pop	{fp, pc}
   17ea0:	push	{fp, lr}
   17ea4:	mov	fp, sp
   17ea8:	sub	sp, sp, #64	; 0x40
   17eac:	str	r0, [fp, #-8]
   17eb0:	str	r1, [fp, #-12]
   17eb4:	ldr	r0, [fp, #-12]
   17eb8:	ldr	r1, [fp, #-8]
   17ebc:	ldr	r1, [r1, #20]
   17ec0:	bl	17b0c <__assert_fail@plt+0x6744>
   17ec4:	str	r0, [sp, #4]
   17ec8:	ldr	r0, [sp, #4]
   17ecc:	cmp	r0, #0
   17ed0:	bne	17ee4 <__assert_fail@plt+0x6b1c>
   17ed4:	movw	r0, #0
   17ed8:	and	r0, r0, #1
   17edc:	strb	r0, [fp, #-1]
   17ee0:	b	180bc <__assert_fail@plt+0x6cf4>
   17ee4:	ldr	r0, [sp, #4]
   17ee8:	ldr	r1, [fp, #-8]
   17eec:	ldr	r1, [r1, #8]
   17ef0:	cmp	r0, r1
   17ef4:	bne	17f08 <__assert_fail@plt+0x6b40>
   17ef8:	movw	r0, #1
   17efc:	and	r0, r0, #1
   17f00:	strb	r0, [fp, #-1]
   17f04:	b	180bc <__assert_fail@plt+0x6cf4>
   17f08:	add	r0, sp, #12
   17f0c:	str	r0, [sp, #8]
   17f10:	ldr	r0, [sp, #4]
   17f14:	movw	r1, #8
   17f18:	bl	1faf4 <__assert_fail@plt+0xe72c>
   17f1c:	ldr	r1, [sp, #8]
   17f20:	str	r0, [r1]
   17f24:	ldr	r0, [sp, #8]
   17f28:	ldr	r0, [r0]
   17f2c:	movw	r1, #0
   17f30:	cmp	r0, r1
   17f34:	bne	17f48 <__assert_fail@plt+0x6b80>
   17f38:	movw	r0, #0
   17f3c:	and	r0, r0, #1
   17f40:	strb	r0, [fp, #-1]
   17f44:	b	180bc <__assert_fail@plt+0x6cf4>
   17f48:	ldr	r0, [sp, #4]
   17f4c:	ldr	r1, [sp, #8]
   17f50:	str	r0, [r1, #8]
   17f54:	ldr	r0, [sp, #8]
   17f58:	ldr	r0, [r0]
   17f5c:	ldr	r1, [sp, #4]
   17f60:	add	r0, r0, r1, lsl #3
   17f64:	ldr	r1, [sp, #8]
   17f68:	str	r0, [r1, #4]
   17f6c:	ldr	r0, [sp, #8]
   17f70:	movw	r1, #0
   17f74:	str	r1, [r0, #12]
   17f78:	ldr	r0, [sp, #8]
   17f7c:	str	r1, [r0, #16]
   17f80:	ldr	r0, [fp, #-8]
   17f84:	ldr	r0, [r0, #20]
   17f88:	ldr	r1, [sp, #8]
   17f8c:	str	r0, [r1, #20]
   17f90:	ldr	r0, [fp, #-8]
   17f94:	ldr	r0, [r0, #24]
   17f98:	ldr	r1, [sp, #8]
   17f9c:	str	r0, [r1, #24]
   17fa0:	ldr	r0, [fp, #-8]
   17fa4:	ldr	r0, [r0, #28]
   17fa8:	ldr	r1, [sp, #8]
   17fac:	str	r0, [r1, #28]
   17fb0:	ldr	r0, [fp, #-8]
   17fb4:	ldr	r0, [r0, #32]
   17fb8:	ldr	r1, [sp, #8]
   17fbc:	str	r0, [r1, #32]
   17fc0:	ldr	r0, [fp, #-8]
   17fc4:	ldr	r0, [r0, #36]	; 0x24
   17fc8:	ldr	r1, [sp, #8]
   17fcc:	str	r0, [r1, #36]	; 0x24
   17fd0:	ldr	r0, [sp, #8]
   17fd4:	ldr	r1, [fp, #-8]
   17fd8:	movw	r2, #0
   17fdc:	and	r2, r2, #1
   17fe0:	bl	180cc <__assert_fail@plt+0x6d04>
   17fe4:	tst	r0, #1
   17fe8:	beq	18058 <__assert_fail@plt+0x6c90>
   17fec:	ldr	r0, [fp, #-8]
   17ff0:	ldr	r0, [r0]
   17ff4:	bl	208f4 <__assert_fail@plt+0xf52c>
   17ff8:	ldr	r0, [sp, #8]
   17ffc:	ldr	r0, [r0]
   18000:	ldr	r1, [fp, #-8]
   18004:	str	r0, [r1]
   18008:	ldr	r0, [sp, #8]
   1800c:	ldr	r0, [r0, #4]
   18010:	ldr	r1, [fp, #-8]
   18014:	str	r0, [r1, #4]
   18018:	ldr	r0, [sp, #8]
   1801c:	ldr	r0, [r0, #8]
   18020:	ldr	r1, [fp, #-8]
   18024:	str	r0, [r1, #8]
   18028:	ldr	r0, [sp, #8]
   1802c:	ldr	r0, [r0, #12]
   18030:	ldr	r1, [fp, #-8]
   18034:	str	r0, [r1, #12]
   18038:	ldr	r0, [sp, #8]
   1803c:	ldr	r0, [r0, #36]	; 0x24
   18040:	ldr	r1, [fp, #-8]
   18044:	str	r0, [r1, #36]	; 0x24
   18048:	movw	r0, #1
   1804c:	and	r0, r0, #1
   18050:	strb	r0, [fp, #-1]
   18054:	b	180bc <__assert_fail@plt+0x6cf4>
   18058:	ldr	r0, [sp, #8]
   1805c:	ldr	r0, [r0, #36]	; 0x24
   18060:	ldr	r1, [fp, #-8]
   18064:	str	r0, [r1, #36]	; 0x24
   18068:	ldr	r0, [fp, #-8]
   1806c:	ldr	r1, [sp, #8]
   18070:	movw	r2, #1
   18074:	and	r2, r2, #1
   18078:	bl	180cc <__assert_fail@plt+0x6d04>
   1807c:	tst	r0, #1
   18080:	beq	180a0 <__assert_fail@plt+0x6cd8>
   18084:	ldr	r0, [fp, #-8]
   18088:	ldr	r1, [sp, #8]
   1808c:	movw	r2, #0
   18090:	and	r2, r2, #1
   18094:	bl	180cc <__assert_fail@plt+0x6d04>
   18098:	tst	r0, #1
   1809c:	bne	180a4 <__assert_fail@plt+0x6cdc>
   180a0:	bl	11398 <abort@plt>
   180a4:	ldr	r0, [sp, #8]
   180a8:	ldr	r0, [r0]
   180ac:	bl	208f4 <__assert_fail@plt+0xf52c>
   180b0:	movw	r0, #0
   180b4:	and	r0, r0, #1
   180b8:	strb	r0, [fp, #-1]
   180bc:	ldrb	r0, [fp, #-1]
   180c0:	and	r0, r0, #1
   180c4:	mov	sp, fp
   180c8:	pop	{fp, pc}
   180cc:	push	{fp, lr}
   180d0:	mov	fp, sp
   180d4:	sub	sp, sp, #40	; 0x28
   180d8:	str	r0, [fp, #-8]
   180dc:	str	r1, [fp, #-12]
   180e0:	and	r0, r2, #1
   180e4:	strb	r0, [fp, #-13]
   180e8:	ldr	r0, [fp, #-12]
   180ec:	ldr	r0, [r0]
   180f0:	str	r0, [sp, #20]
   180f4:	ldr	r0, [sp, #20]
   180f8:	ldr	r1, [fp, #-12]
   180fc:	ldr	r1, [r1, #4]
   18100:	cmp	r0, r1
   18104:	bcs	182c0 <__assert_fail@plt+0x6ef8>
   18108:	ldr	r0, [sp, #20]
   1810c:	ldr	r0, [r0]
   18110:	movw	r1, #0
   18114:	cmp	r0, r1
   18118:	beq	182ac <__assert_fail@plt+0x6ee4>
   1811c:	ldr	r0, [sp, #20]
   18120:	ldr	r0, [r0, #4]
   18124:	str	r0, [sp, #16]
   18128:	ldr	r0, [sp, #16]
   1812c:	movw	r1, #0
   18130:	cmp	r0, r1
   18134:	beq	181cc <__assert_fail@plt+0x6e04>
   18138:	ldr	r0, [sp, #16]
   1813c:	ldr	r0, [r0]
   18140:	str	r0, [sp, #8]
   18144:	ldr	r0, [fp, #-8]
   18148:	ldr	r1, [sp, #8]
   1814c:	bl	17378 <__assert_fail@plt+0x5fb0>
   18150:	str	r0, [sp, #4]
   18154:	ldr	r0, [sp, #16]
   18158:	ldr	r0, [r0, #4]
   1815c:	str	r0, [sp, #12]
   18160:	ldr	r0, [sp, #4]
   18164:	ldr	r0, [r0]
   18168:	movw	r1, #0
   1816c:	cmp	r0, r1
   18170:	beq	18194 <__assert_fail@plt+0x6dcc>
   18174:	ldr	r0, [sp, #4]
   18178:	ldr	r0, [r0, #4]
   1817c:	ldr	r1, [sp, #16]
   18180:	str	r0, [r1, #4]
   18184:	ldr	r0, [sp, #16]
   18188:	ldr	r1, [sp, #4]
   1818c:	str	r0, [r1, #4]
   18190:	b	181bc <__assert_fail@plt+0x6df4>
   18194:	ldr	r0, [sp, #8]
   18198:	ldr	r1, [sp, #4]
   1819c:	str	r0, [r1]
   181a0:	ldr	r0, [fp, #-8]
   181a4:	ldr	r1, [r0, #12]
   181a8:	add	r1, r1, #1
   181ac:	str	r1, [r0, #12]
   181b0:	ldr	r0, [fp, #-8]
   181b4:	ldr	r1, [sp, #16]
   181b8:	bl	18bd4 <__assert_fail@plt+0x780c>
   181bc:	b	181c0 <__assert_fail@plt+0x6df8>
   181c0:	ldr	r0, [sp, #12]
   181c4:	str	r0, [sp, #16]
   181c8:	b	18128 <__assert_fail@plt+0x6d60>
   181cc:	ldr	r0, [sp, #20]
   181d0:	ldr	r0, [r0]
   181d4:	str	r0, [sp, #8]
   181d8:	ldr	r0, [sp, #20]
   181dc:	movw	r1, #0
   181e0:	str	r1, [r0, #4]
   181e4:	ldrb	r0, [fp, #-13]
   181e8:	tst	r0, #1
   181ec:	beq	181f4 <__assert_fail@plt+0x6e2c>
   181f0:	b	182b0 <__assert_fail@plt+0x6ee8>
   181f4:	ldr	r0, [fp, #-8]
   181f8:	ldr	r1, [sp, #8]
   181fc:	bl	17378 <__assert_fail@plt+0x5fb0>
   18200:	str	r0, [sp, #4]
   18204:	ldr	r0, [sp, #4]
   18208:	ldr	r0, [r0]
   1820c:	movw	r1, #0
   18210:	cmp	r0, r1
   18214:	beq	18270 <__assert_fail@plt+0x6ea8>
   18218:	ldr	r0, [fp, #-8]
   1821c:	bl	18784 <__assert_fail@plt+0x73bc>
   18220:	str	r0, [sp]
   18224:	ldr	r0, [sp]
   18228:	movw	r1, #0
   1822c:	cmp	r0, r1
   18230:	bne	18244 <__assert_fail@plt+0x6e7c>
   18234:	movw	r0, #0
   18238:	and	r0, r0, #1
   1823c:	strb	r0, [fp, #-1]
   18240:	b	182cc <__assert_fail@plt+0x6f04>
   18244:	ldr	r0, [sp, #8]
   18248:	ldr	r1, [sp]
   1824c:	str	r0, [r1]
   18250:	ldr	r0, [sp, #4]
   18254:	ldr	r0, [r0, #4]
   18258:	ldr	r1, [sp]
   1825c:	str	r0, [r1, #4]
   18260:	ldr	r0, [sp]
   18264:	ldr	r1, [sp, #4]
   18268:	str	r0, [r1, #4]
   1826c:	b	1828c <__assert_fail@plt+0x6ec4>
   18270:	ldr	r0, [sp, #8]
   18274:	ldr	r1, [sp, #4]
   18278:	str	r0, [r1]
   1827c:	ldr	r0, [fp, #-8]
   18280:	ldr	r1, [r0, #12]
   18284:	add	r1, r1, #1
   18288:	str	r1, [r0, #12]
   1828c:	ldr	r0, [sp, #20]
   18290:	movw	r1, #0
   18294:	str	r1, [r0]
   18298:	ldr	r0, [fp, #-12]
   1829c:	ldr	r1, [r0, #12]
   182a0:	mvn	r2, #0
   182a4:	add	r1, r1, r2
   182a8:	str	r1, [r0, #12]
   182ac:	b	182b0 <__assert_fail@plt+0x6ee8>
   182b0:	ldr	r0, [sp, #20]
   182b4:	add	r0, r0, #8
   182b8:	str	r0, [sp, #20]
   182bc:	b	180f4 <__assert_fail@plt+0x6d2c>
   182c0:	movw	r0, #1
   182c4:	and	r0, r0, #1
   182c8:	strb	r0, [fp, #-1]
   182cc:	ldrb	r0, [fp, #-1]
   182d0:	and	r0, r0, #1
   182d4:	mov	sp, fp
   182d8:	pop	{fp, pc}
   182dc:	push	{fp, lr}
   182e0:	mov	fp, sp
   182e4:	sub	sp, sp, #40	; 0x28
   182e8:	str	r0, [fp, #-8]
   182ec:	str	r1, [fp, #-12]
   182f0:	str	r2, [fp, #-16]
   182f4:	ldr	r0, [fp, #-12]
   182f8:	movw	r1, #0
   182fc:	cmp	r0, r1
   18300:	bne	18308 <__assert_fail@plt+0x6f40>
   18304:	bl	11398 <abort@plt>
   18308:	ldr	r0, [fp, #-8]
   1830c:	ldr	r1, [fp, #-12]
   18310:	add	r2, sp, #16
   18314:	movw	r3, #0
   18318:	and	r3, r3, #1
   1831c:	bl	18588 <__assert_fail@plt+0x71c0>
   18320:	str	r0, [sp, #20]
   18324:	movw	r1, #0
   18328:	cmp	r0, r1
   1832c:	beq	18358 <__assert_fail@plt+0x6f90>
   18330:	ldr	r0, [fp, #-16]
   18334:	movw	r1, #0
   18338:	cmp	r0, r1
   1833c:	beq	1834c <__assert_fail@plt+0x6f84>
   18340:	ldr	r0, [sp, #20]
   18344:	ldr	r1, [fp, #-16]
   18348:	str	r0, [r1]
   1834c:	movw	r0, #0
   18350:	str	r0, [fp, #-4]
   18354:	b	18578 <__assert_fail@plt+0x71b0>
   18358:	ldr	r0, [fp, #-8]
   1835c:	ldr	r0, [r0, #12]
   18360:	vmov	s0, r0
   18364:	vcvt.f32.u32	s0, s0
   18368:	ldr	r0, [fp, #-8]
   1836c:	ldr	r0, [r0, #20]
   18370:	vldr	s2, [r0, #8]
   18374:	ldr	r0, [fp, #-8]
   18378:	ldr	r0, [r0, #8]
   1837c:	vmov	s4, r0
   18380:	vcvt.f32.u32	s4, s4
   18384:	vmul.f32	s2, s2, s4
   18388:	vcmpe.f32	s0, s2
   1838c:	vmrs	APSR_nzcv, fpscr
   18390:	ble	184c4 <__assert_fail@plt+0x70fc>
   18394:	ldr	r0, [fp, #-8]
   18398:	bl	179b8 <__assert_fail@plt+0x65f0>
   1839c:	ldr	r1, [fp, #-8]
   183a0:	ldr	r1, [r1, #12]
   183a4:	vmov	s0, r1
   183a8:	vcvt.f32.u32	s0, s0
   183ac:	ldr	r1, [fp, #-8]
   183b0:	ldr	r1, [r1, #20]
   183b4:	vldr	s2, [r1, #8]
   183b8:	ldr	r1, [fp, #-8]
   183bc:	ldr	r1, [r1, #8]
   183c0:	vmov	s4, r1
   183c4:	vcvt.f32.u32	s4, s4
   183c8:	vmul.f32	s2, s2, s4
   183cc:	vcmpe.f32	s0, s2
   183d0:	vmrs	APSR_nzcv, fpscr
   183d4:	ble	184c0 <__assert_fail@plt+0x70f8>
   183d8:	ldr	r0, [fp, #-8]
   183dc:	ldr	r0, [r0, #20]
   183e0:	str	r0, [sp, #12]
   183e4:	ldr	r0, [sp, #12]
   183e8:	ldrb	r0, [r0, #16]
   183ec:	tst	r0, #1
   183f0:	beq	18418 <__assert_fail@plt+0x7050>
   183f4:	ldr	r0, [fp, #-8]
   183f8:	ldr	r0, [r0, #8]
   183fc:	vmov	s0, r0
   18400:	vcvt.f32.u32	s0, s0
   18404:	ldr	r0, [sp, #12]
   18408:	vldr	s2, [r0, #12]
   1840c:	vmul.f32	s0, s0, s2
   18410:	vstr	s0, [sp]
   18414:	b	18444 <__assert_fail@plt+0x707c>
   18418:	ldr	r0, [fp, #-8]
   1841c:	ldr	r0, [r0, #8]
   18420:	vmov	s0, r0
   18424:	vcvt.f32.u32	s0, s0
   18428:	ldr	r0, [sp, #12]
   1842c:	vldr	s2, [r0, #12]
   18430:	vmul.f32	s0, s0, s2
   18434:	ldr	r0, [sp, #12]
   18438:	vldr	s2, [r0, #8]
   1843c:	vmul.f32	s0, s0, s2
   18440:	vstr	s0, [sp]
   18444:	vldr	s0, [sp]
   18448:	vldr	s2, [pc, #308]	; 18584 <__assert_fail@plt+0x71bc>
   1844c:	vstr	s0, [sp, #8]
   18450:	vldr	s0, [sp, #8]
   18454:	vcmpe.f32	s2, s0
   18458:	vmrs	APSR_nzcv, fpscr
   1845c:	bhi	1846c <__assert_fail@plt+0x70a4>
   18460:	mvn	r0, #0
   18464:	str	r0, [fp, #-4]
   18468:	b	18578 <__assert_fail@plt+0x71b0>
   1846c:	ldr	r0, [fp, #-8]
   18470:	vldr	s0, [sp, #8]
   18474:	vcvt.u32.f32	s0, s0
   18478:	vmov	r1, s0
   1847c:	bl	17ea0 <__assert_fail@plt+0x6ad8>
   18480:	tst	r0, #1
   18484:	bne	18494 <__assert_fail@plt+0x70cc>
   18488:	mvn	r0, #0
   1848c:	str	r0, [fp, #-4]
   18490:	b	18578 <__assert_fail@plt+0x71b0>
   18494:	ldr	r0, [fp, #-8]
   18498:	ldr	r1, [fp, #-12]
   1849c:	add	r2, sp, #16
   184a0:	movw	r3, #0
   184a4:	and	r3, r3, #1
   184a8:	bl	18588 <__assert_fail@plt+0x71c0>
   184ac:	movw	r1, #0
   184b0:	cmp	r0, r1
   184b4:	beq	184bc <__assert_fail@plt+0x70f4>
   184b8:	bl	11398 <abort@plt>
   184bc:	b	184c0 <__assert_fail@plt+0x70f8>
   184c0:	b	184c4 <__assert_fail@plt+0x70fc>
   184c4:	ldr	r0, [sp, #16]
   184c8:	ldr	r0, [r0]
   184cc:	movw	r1, #0
   184d0:	cmp	r0, r1
   184d4:	beq	18544 <__assert_fail@plt+0x717c>
   184d8:	ldr	r0, [fp, #-8]
   184dc:	bl	18784 <__assert_fail@plt+0x73bc>
   184e0:	str	r0, [sp, #4]
   184e4:	ldr	r0, [sp, #4]
   184e8:	movw	r1, #0
   184ec:	cmp	r0, r1
   184f0:	bne	18500 <__assert_fail@plt+0x7138>
   184f4:	mvn	r0, #0
   184f8:	str	r0, [fp, #-4]
   184fc:	b	18578 <__assert_fail@plt+0x71b0>
   18500:	ldr	r0, [fp, #-12]
   18504:	ldr	r1, [sp, #4]
   18508:	str	r0, [r1]
   1850c:	ldr	r0, [sp, #16]
   18510:	ldr	r0, [r0, #4]
   18514:	ldr	r1, [sp, #4]
   18518:	str	r0, [r1, #4]
   1851c:	ldr	r0, [sp, #4]
   18520:	ldr	r1, [sp, #16]
   18524:	str	r0, [r1, #4]
   18528:	ldr	r0, [fp, #-8]
   1852c:	ldr	r1, [r0, #16]
   18530:	add	r1, r1, #1
   18534:	str	r1, [r0, #16]
   18538:	movw	r0, #1
   1853c:	str	r0, [fp, #-4]
   18540:	b	18578 <__assert_fail@plt+0x71b0>
   18544:	ldr	r0, [fp, #-12]
   18548:	ldr	r1, [sp, #16]
   1854c:	str	r0, [r1]
   18550:	ldr	r0, [fp, #-8]
   18554:	ldr	r1, [r0, #16]
   18558:	add	r1, r1, #1
   1855c:	str	r1, [r0, #16]
   18560:	ldr	r0, [fp, #-8]
   18564:	ldr	r1, [r0, #12]
   18568:	add	r1, r1, #1
   1856c:	str	r1, [r0, #12]
   18570:	movw	r0, #1
   18574:	str	r0, [fp, #-4]
   18578:	ldr	r0, [fp, #-4]
   1857c:	mov	sp, fp
   18580:	pop	{fp, pc}
   18584:	svcmi	0x00800000
   18588:	push	{fp, lr}
   1858c:	mov	fp, sp
   18590:	sub	sp, sp, #56	; 0x38
   18594:	str	r0, [fp, #-8]
   18598:	str	r1, [fp, #-12]
   1859c:	str	r2, [fp, #-16]
   185a0:	and	r0, r3, #1
   185a4:	strb	r0, [fp, #-17]	; 0xffffffef
   185a8:	ldr	r0, [fp, #-8]
   185ac:	ldr	r1, [fp, #-12]
   185b0:	bl	17378 <__assert_fail@plt+0x5fb0>
   185b4:	str	r0, [fp, #-24]	; 0xffffffe8
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	ldr	r1, [fp, #-16]
   185c0:	str	r0, [r1]
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	ldr	r0, [r0]
   185cc:	movw	r1, #0
   185d0:	cmp	r0, r1
   185d4:	bne	185e4 <__assert_fail@plt+0x721c>
   185d8:	movw	r0, #0
   185dc:	str	r0, [fp, #-4]
   185e0:	b	18778 <__assert_fail@plt+0x73b0>
   185e4:	ldr	r0, [fp, #-12]
   185e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185ec:	ldr	r1, [r1]
   185f0:	cmp	r0, r1
   185f4:	beq	18628 <__assert_fail@plt+0x7260>
   185f8:	ldr	r0, [fp, #-8]
   185fc:	ldr	r0, [r0, #28]
   18600:	ldr	r1, [fp, #-12]
   18604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18608:	ldr	r2, [r2]
   1860c:	str	r0, [sp, #8]
   18610:	mov	r0, r1
   18614:	mov	r1, r2
   18618:	ldr	r2, [sp, #8]
   1861c:	blx	r2
   18620:	tst	r0, #1
   18624:	beq	186a4 <__assert_fail@plt+0x72dc>
   18628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1862c:	ldr	r0, [r0]
   18630:	str	r0, [sp, #24]
   18634:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18638:	tst	r0, #1
   1863c:	beq	18698 <__assert_fail@plt+0x72d0>
   18640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18644:	ldr	r0, [r0, #4]
   18648:	movw	r1, #0
   1864c:	cmp	r0, r1
   18650:	beq	18688 <__assert_fail@plt+0x72c0>
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	ldr	r0, [r0, #4]
   1865c:	str	r0, [sp, #20]
   18660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18664:	ldr	r1, [sp, #20]
   18668:	ldr	r2, [r1]
   1866c:	str	r2, [r0]
   18670:	ldr	r1, [r1, #4]
   18674:	str	r1, [r0, #4]
   18678:	ldr	r0, [fp, #-8]
   1867c:	ldr	r1, [sp, #20]
   18680:	bl	18bd4 <__assert_fail@plt+0x780c>
   18684:	b	18694 <__assert_fail@plt+0x72cc>
   18688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1868c:	movw	r1, #0
   18690:	str	r1, [r0]
   18694:	b	18698 <__assert_fail@plt+0x72d0>
   18698:	ldr	r0, [sp, #24]
   1869c:	str	r0, [fp, #-4]
   186a0:	b	18778 <__assert_fail@plt+0x73b0>
   186a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a8:	str	r0, [sp, #28]
   186ac:	ldr	r0, [sp, #28]
   186b0:	ldr	r0, [r0, #4]
   186b4:	movw	r1, #0
   186b8:	cmp	r0, r1
   186bc:	beq	18770 <__assert_fail@plt+0x73a8>
   186c0:	ldr	r0, [fp, #-12]
   186c4:	ldr	r1, [sp, #28]
   186c8:	ldr	r1, [r1, #4]
   186cc:	ldr	r1, [r1]
   186d0:	cmp	r0, r1
   186d4:	beq	1870c <__assert_fail@plt+0x7344>
   186d8:	ldr	r0, [fp, #-8]
   186dc:	ldr	r0, [r0, #28]
   186e0:	ldr	r1, [fp, #-12]
   186e4:	ldr	r2, [sp, #28]
   186e8:	ldr	r2, [r2, #4]
   186ec:	ldr	r2, [r2]
   186f0:	str	r0, [sp, #4]
   186f4:	mov	r0, r1
   186f8:	mov	r1, r2
   186fc:	ldr	r2, [sp, #4]
   18700:	blx	r2
   18704:	tst	r0, #1
   18708:	beq	1875c <__assert_fail@plt+0x7394>
   1870c:	ldr	r0, [sp, #28]
   18710:	ldr	r0, [r0, #4]
   18714:	ldr	r0, [r0]
   18718:	str	r0, [sp, #16]
   1871c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18720:	tst	r0, #1
   18724:	beq	18750 <__assert_fail@plt+0x7388>
   18728:	ldr	r0, [sp, #28]
   1872c:	ldr	r0, [r0, #4]
   18730:	str	r0, [sp, #12]
   18734:	ldr	r0, [sp, #12]
   18738:	ldr	r0, [r0, #4]
   1873c:	ldr	r1, [sp, #28]
   18740:	str	r0, [r1, #4]
   18744:	ldr	r0, [fp, #-8]
   18748:	ldr	r1, [sp, #12]
   1874c:	bl	18bd4 <__assert_fail@plt+0x780c>
   18750:	ldr	r0, [sp, #16]
   18754:	str	r0, [fp, #-4]
   18758:	b	18778 <__assert_fail@plt+0x73b0>
   1875c:	b	18760 <__assert_fail@plt+0x7398>
   18760:	ldr	r0, [sp, #28]
   18764:	ldr	r0, [r0, #4]
   18768:	str	r0, [sp, #28]
   1876c:	b	186ac <__assert_fail@plt+0x72e4>
   18770:	movw	r0, #0
   18774:	str	r0, [fp, #-4]
   18778:	ldr	r0, [fp, #-4]
   1877c:	mov	sp, fp
   18780:	pop	{fp, pc}
   18784:	push	{fp, lr}
   18788:	mov	fp, sp
   1878c:	sub	sp, sp, #8
   18790:	str	r0, [sp, #4]
   18794:	ldr	r0, [sp, #4]
   18798:	ldr	r0, [r0, #36]	; 0x24
   1879c:	movw	r1, #0
   187a0:	cmp	r0, r1
   187a4:	beq	187c8 <__assert_fail@plt+0x7400>
   187a8:	ldr	r0, [sp, #4]
   187ac:	ldr	r0, [r0, #36]	; 0x24
   187b0:	str	r0, [sp]
   187b4:	ldr	r0, [sp]
   187b8:	ldr	r0, [r0, #4]
   187bc:	ldr	r1, [sp, #4]
   187c0:	str	r0, [r1, #36]	; 0x24
   187c4:	b	187d4 <__assert_fail@plt+0x740c>
   187c8:	movw	r0, #8
   187cc:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   187d0:	str	r0, [sp]
   187d4:	ldr	r0, [sp]
   187d8:	mov	sp, fp
   187dc:	pop	{fp, pc}
   187e0:	push	{fp, lr}
   187e4:	mov	fp, sp
   187e8:	sub	sp, sp, #24
   187ec:	str	r0, [fp, #-4]
   187f0:	str	r1, [fp, #-8]
   187f4:	ldr	r0, [fp, #-4]
   187f8:	ldr	r1, [fp, #-8]
   187fc:	add	r2, sp, #12
   18800:	bl	182dc <__assert_fail@plt+0x6f14>
   18804:	str	r0, [sp, #8]
   18808:	ldr	r0, [sp, #8]
   1880c:	cmn	r0, #1
   18810:	bne	18820 <__assert_fail@plt+0x7458>
   18814:	movw	r0, #0
   18818:	str	r0, [sp, #4]
   1881c:	b	18848 <__assert_fail@plt+0x7480>
   18820:	ldr	r0, [sp, #8]
   18824:	cmp	r0, #0
   18828:	bne	18838 <__assert_fail@plt+0x7470>
   1882c:	ldr	r0, [sp, #12]
   18830:	str	r0, [sp]
   18834:	b	18840 <__assert_fail@plt+0x7478>
   18838:	ldr	r0, [fp, #-8]
   1883c:	str	r0, [sp]
   18840:	ldr	r0, [sp]
   18844:	str	r0, [sp, #4]
   18848:	ldr	r0, [sp, #4]
   1884c:	mov	sp, fp
   18850:	pop	{fp, pc}
   18854:	push	{fp, lr}
   18858:	mov	fp, sp
   1885c:	sub	sp, sp, #40	; 0x28
   18860:	str	r0, [fp, #-8]
   18864:	str	r1, [fp, #-12]
   18868:	ldr	r0, [fp, #-8]
   1886c:	ldr	r1, [fp, #-12]
   18870:	add	r2, sp, #20
   18874:	movw	r3, #1
   18878:	and	r3, r3, #1
   1887c:	bl	18588 <__assert_fail@plt+0x71c0>
   18880:	str	r0, [fp, #-16]
   18884:	ldr	r0, [fp, #-16]
   18888:	movw	r1, #0
   1888c:	cmp	r0, r1
   18890:	bne	188a0 <__assert_fail@plt+0x74d8>
   18894:	movw	r0, #0
   18898:	str	r0, [fp, #-4]
   1889c:	b	18a48 <__assert_fail@plt+0x7680>
   188a0:	ldr	r0, [fp, #-8]
   188a4:	ldr	r1, [r0, #16]
   188a8:	mvn	r2, #0
   188ac:	add	r1, r1, r2
   188b0:	str	r1, [r0, #16]
   188b4:	ldr	r0, [sp, #20]
   188b8:	ldr	r0, [r0]
   188bc:	movw	r1, #0
   188c0:	cmp	r0, r1
   188c4:	bne	18a40 <__assert_fail@plt+0x7678>
   188c8:	ldr	r0, [fp, #-8]
   188cc:	ldr	r1, [r0, #12]
   188d0:	mvn	r2, #0
   188d4:	add	r1, r1, r2
   188d8:	str	r1, [r0, #12]
   188dc:	ldr	r0, [fp, #-8]
   188e0:	ldr	r0, [r0, #12]
   188e4:	vmov	s0, r0
   188e8:	vcvt.f32.u32	s0, s0
   188ec:	ldr	r0, [fp, #-8]
   188f0:	ldr	r0, [r0, #20]
   188f4:	vldr	s2, [r0]
   188f8:	ldr	r0, [fp, #-8]
   188fc:	ldr	r0, [r0, #8]
   18900:	vmov	s4, r0
   18904:	vcvt.f32.u32	s4, s4
   18908:	vmul.f32	s2, s2, s4
   1890c:	vcmpe.f32	s0, s2
   18910:	vmrs	APSR_nzcv, fpscr
   18914:	bpl	18a3c <__assert_fail@plt+0x7674>
   18918:	ldr	r0, [fp, #-8]
   1891c:	bl	179b8 <__assert_fail@plt+0x65f0>
   18920:	ldr	r1, [fp, #-8]
   18924:	ldr	r1, [r1, #12]
   18928:	vmov	s0, r1
   1892c:	vcvt.f32.u32	s0, s0
   18930:	ldr	r1, [fp, #-8]
   18934:	ldr	r1, [r1, #20]
   18938:	vldr	s2, [r1]
   1893c:	ldr	r1, [fp, #-8]
   18940:	ldr	r1, [r1, #8]
   18944:	vmov	s4, r1
   18948:	vcvt.f32.u32	s4, s4
   1894c:	vmul.f32	s2, s2, s4
   18950:	vcmpe.f32	s0, s2
   18954:	vmrs	APSR_nzcv, fpscr
   18958:	bpl	18a38 <__assert_fail@plt+0x7670>
   1895c:	ldr	r0, [fp, #-8]
   18960:	ldr	r0, [r0, #20]
   18964:	str	r0, [sp, #16]
   18968:	ldr	r0, [sp, #16]
   1896c:	ldrb	r0, [r0, #16]
   18970:	tst	r0, #1
   18974:	beq	1899c <__assert_fail@plt+0x75d4>
   18978:	ldr	r0, [fp, #-8]
   1897c:	ldr	r0, [r0, #8]
   18980:	vmov	s0, r0
   18984:	vcvt.f32.u32	s0, s0
   18988:	ldr	r0, [sp, #16]
   1898c:	vldr	s2, [r0, #4]
   18990:	vmul.f32	s0, s0, s2
   18994:	vstr	s0, [sp]
   18998:	b	189c8 <__assert_fail@plt+0x7600>
   1899c:	ldr	r0, [fp, #-8]
   189a0:	ldr	r0, [r0, #8]
   189a4:	vmov	s0, r0
   189a8:	vcvt.f32.u32	s0, s0
   189ac:	ldr	r0, [sp, #16]
   189b0:	vldr	s2, [r0, #4]
   189b4:	vmul.f32	s0, s0, s2
   189b8:	ldr	r0, [sp, #16]
   189bc:	vldr	s2, [r0, #8]
   189c0:	vmul.f32	s0, s0, s2
   189c4:	vstr	s0, [sp]
   189c8:	vldr	s0, [sp]
   189cc:	vcvt.u32.f32	s0, s0
   189d0:	vmov	r0, s0
   189d4:	str	r0, [sp, #12]
   189d8:	ldr	r0, [fp, #-8]
   189dc:	ldr	r1, [sp, #12]
   189e0:	bl	17ea0 <__assert_fail@plt+0x6ad8>
   189e4:	tst	r0, #1
   189e8:	bne	18a34 <__assert_fail@plt+0x766c>
   189ec:	ldr	r0, [fp, #-8]
   189f0:	ldr	r0, [r0, #36]	; 0x24
   189f4:	str	r0, [sp, #8]
   189f8:	ldr	r0, [sp, #8]
   189fc:	movw	r1, #0
   18a00:	cmp	r0, r1
   18a04:	beq	18a28 <__assert_fail@plt+0x7660>
   18a08:	ldr	r0, [sp, #8]
   18a0c:	ldr	r0, [r0, #4]
   18a10:	str	r0, [sp, #4]
   18a14:	ldr	r0, [sp, #8]
   18a18:	bl	208f4 <__assert_fail@plt+0xf52c>
   18a1c:	ldr	r0, [sp, #4]
   18a20:	str	r0, [sp, #8]
   18a24:	b	189f8 <__assert_fail@plt+0x7630>
   18a28:	ldr	r0, [fp, #-8]
   18a2c:	movw	r1, #0
   18a30:	str	r1, [r0, #36]	; 0x24
   18a34:	b	18a38 <__assert_fail@plt+0x7670>
   18a38:	b	18a3c <__assert_fail@plt+0x7674>
   18a3c:	b	18a40 <__assert_fail@plt+0x7678>
   18a40:	ldr	r0, [fp, #-16]
   18a44:	str	r0, [fp, #-4]
   18a48:	ldr	r0, [fp, #-4]
   18a4c:	mov	sp, fp
   18a50:	pop	{fp, pc}
   18a54:	push	{fp, lr}
   18a58:	mov	fp, sp
   18a5c:	sub	sp, sp, #8
   18a60:	str	r0, [sp, #4]
   18a64:	str	r1, [sp]
   18a68:	ldr	r0, [sp, #4]
   18a6c:	ldr	r1, [sp]
   18a70:	bl	18854 <__assert_fail@plt+0x748c>
   18a74:	mov	sp, fp
   18a78:	pop	{fp, pc}
   18a7c:	push	{fp, lr}
   18a80:	mov	fp, sp
   18a84:	sub	sp, sp, #8
   18a88:	str	r0, [sp, #4]
   18a8c:	ldr	r0, [sp, #4]
   18a90:	cmp	r0, #10
   18a94:	bcs	18aa0 <__assert_fail@plt+0x76d8>
   18a98:	movw	r0, #10
   18a9c:	str	r0, [sp, #4]
   18aa0:	ldr	r0, [sp, #4]
   18aa4:	orr	r0, r0, #1
   18aa8:	str	r0, [sp, #4]
   18aac:	ldr	r0, [sp, #4]
   18ab0:	mvn	r1, #0
   18ab4:	cmp	r1, r0
   18ab8:	movw	r0, #0
   18abc:	str	r0, [sp]
   18ac0:	beq	18ad8 <__assert_fail@plt+0x7710>
   18ac4:	ldr	r0, [sp, #4]
   18ac8:	bl	18b00 <__assert_fail@plt+0x7738>
   18acc:	mvn	r1, #0
   18ad0:	eor	r0, r0, r1
   18ad4:	str	r0, [sp]
   18ad8:	ldr	r0, [sp]
   18adc:	tst	r0, #1
   18ae0:	beq	18af4 <__assert_fail@plt+0x772c>
   18ae4:	ldr	r0, [sp, #4]
   18ae8:	add	r0, r0, #2
   18aec:	str	r0, [sp, #4]
   18af0:	b	18aac <__assert_fail@plt+0x76e4>
   18af4:	ldr	r0, [sp, #4]
   18af8:	mov	sp, fp
   18afc:	pop	{fp, pc}
   18b00:	sub	sp, sp, #16
   18b04:	str	r0, [sp, #12]
   18b08:	movw	r0, #3
   18b0c:	str	r0, [sp, #8]
   18b10:	ldr	r0, [sp, #8]
   18b14:	ldr	r1, [sp, #8]
   18b18:	mul	r0, r0, r1
   18b1c:	str	r0, [sp, #4]
   18b20:	ldr	r0, [sp, #4]
   18b24:	ldr	r1, [sp, #12]
   18b28:	cmp	r0, r1
   18b2c:	movw	r0, #0
   18b30:	str	r0, [sp]
   18b34:	bcs	18b58 <__assert_fail@plt+0x7790>
   18b38:	ldr	r0, [sp, #12]
   18b3c:	ldr	r1, [sp, #8]
   18b40:	udiv	r2, r0, r1
   18b44:	mls	r0, r2, r1, r0
   18b48:	cmp	r0, #0
   18b4c:	movw	r0, #0
   18b50:	movne	r0, #1
   18b54:	str	r0, [sp]
   18b58:	ldr	r0, [sp]
   18b5c:	tst	r0, #1
   18b60:	beq	18b94 <__assert_fail@plt+0x77cc>
   18b64:	ldr	r0, [sp, #8]
   18b68:	add	r0, r0, #1
   18b6c:	str	r0, [sp, #8]
   18b70:	ldr	r0, [sp, #8]
   18b74:	lsl	r0, r0, #2
   18b78:	ldr	r1, [sp, #4]
   18b7c:	add	r0, r1, r0
   18b80:	str	r0, [sp, #4]
   18b84:	ldr	r0, [sp, #8]
   18b88:	add	r0, r0, #1
   18b8c:	str	r0, [sp, #8]
   18b90:	b	18b20 <__assert_fail@plt+0x7758>
   18b94:	ldr	r0, [sp, #12]
   18b98:	ldr	r1, [sp, #8]
   18b9c:	udiv	r2, r0, r1
   18ba0:	mls	r0, r2, r1, r0
   18ba4:	cmp	r0, #0
   18ba8:	movw	r0, #0
   18bac:	movne	r0, #1
   18bb0:	tst	r0, #1
   18bb4:	movw	r0, #1
   18bb8:	moveq	r0, #0
   18bbc:	cmp	r0, #0
   18bc0:	movw	r0, #0
   18bc4:	movne	r0, #1
   18bc8:	and	r0, r0, #1
   18bcc:	add	sp, sp, #16
   18bd0:	bx	lr
   18bd4:	sub	sp, sp, #8
   18bd8:	str	r0, [sp, #4]
   18bdc:	str	r1, [sp]
   18be0:	ldr	r0, [sp]
   18be4:	movw	r1, #0
   18be8:	str	r1, [r0]
   18bec:	ldr	r0, [sp, #4]
   18bf0:	ldr	r0, [r0, #36]	; 0x24
   18bf4:	ldr	r1, [sp]
   18bf8:	str	r0, [r1, #4]
   18bfc:	ldr	r0, [sp]
   18c00:	ldr	r1, [sp, #4]
   18c04:	str	r0, [r1, #36]	; 0x24
   18c08:	add	sp, sp, #8
   18c0c:	bx	lr
   18c10:	sub	sp, sp, #12
   18c14:	str	r0, [sp, #8]
   18c18:	str	r1, [sp, #4]
   18c1c:	ldr	r0, [sp, #8]
   18c20:	movw	r1, #1
   18c24:	strb	r1, [r0, #28]
   18c28:	ldr	r0, [sp, #8]
   18c2c:	movw	r1, #0
   18c30:	str	r1, [r0, #20]
   18c34:	ldr	r0, [sp, #8]
   18c38:	str	r1, [r0, #24]
   18c3c:	str	r1, [sp]
   18c40:	ldr	r0, [sp]
   18c44:	cmp	r0, #4
   18c48:	bge	18c70 <__assert_fail@plt+0x78a8>
   18c4c:	ldr	r0, [sp, #4]
   18c50:	ldr	r1, [sp, #8]
   18c54:	ldr	r2, [sp]
   18c58:	add	r1, r1, r2, lsl #2
   18c5c:	str	r0, [r1]
   18c60:	ldr	r0, [sp]
   18c64:	add	r0, r0, #1
   18c68:	str	r0, [sp]
   18c6c:	b	18c40 <__assert_fail@plt+0x7878>
   18c70:	ldr	r0, [sp, #4]
   18c74:	ldr	r1, [sp, #8]
   18c78:	str	r0, [r1, #16]
   18c7c:	add	sp, sp, #12
   18c80:	bx	lr
   18c84:	sub	sp, sp, #4
   18c88:	str	r0, [sp]
   18c8c:	ldr	r0, [sp]
   18c90:	ldrb	r0, [r0, #28]
   18c94:	and	r0, r0, #1
   18c98:	add	sp, sp, #4
   18c9c:	bx	lr
   18ca0:	sub	sp, sp, #16
   18ca4:	str	r0, [sp, #12]
   18ca8:	str	r1, [sp, #8]
   18cac:	ldr	r0, [sp, #12]
   18cb0:	ldr	r1, [r0, #20]
   18cb4:	ldrb	r0, [r0, #28]
   18cb8:	mov	r2, #1
   18cbc:	bic	r0, r2, r0
   18cc0:	add	r0, r1, r0
   18cc4:	and	r0, r0, #3
   18cc8:	str	r0, [sp, #4]
   18ccc:	ldr	r0, [sp, #12]
   18cd0:	ldr	r1, [sp, #4]
   18cd4:	ldr	r0, [r0, r1, lsl #2]
   18cd8:	str	r0, [sp]
   18cdc:	ldr	r0, [sp, #8]
   18ce0:	ldr	r1, [sp, #12]
   18ce4:	ldr	r2, [sp, #4]
   18ce8:	add	r1, r1, r2, lsl #2
   18cec:	str	r0, [r1]
   18cf0:	ldr	r0, [sp, #4]
   18cf4:	ldr	r1, [sp, #12]
   18cf8:	str	r0, [r1, #20]
   18cfc:	ldr	r0, [sp, #4]
   18d00:	ldr	r1, [sp, #12]
   18d04:	ldr	r1, [r1, #24]
   18d08:	cmp	r0, r1
   18d0c:	bne	18d3c <__assert_fail@plt+0x7974>
   18d10:	ldr	r0, [sp, #12]
   18d14:	ldr	r0, [r0, #24]
   18d18:	ldr	r1, [sp, #12]
   18d1c:	ldrb	r1, [r1, #28]
   18d20:	mvn	r2, #0
   18d24:	eor	r1, r1, r2
   18d28:	and	r1, r1, #1
   18d2c:	add	r0, r0, r1
   18d30:	and	r0, r0, #3
   18d34:	ldr	r1, [sp, #12]
   18d38:	str	r0, [r1, #24]
   18d3c:	ldr	r0, [sp, #12]
   18d40:	movw	r1, #0
   18d44:	strb	r1, [r0, #28]
   18d48:	ldr	r0, [sp]
   18d4c:	add	sp, sp, #16
   18d50:	bx	lr
   18d54:	push	{fp, lr}
   18d58:	mov	fp, sp
   18d5c:	sub	sp, sp, #8
   18d60:	str	r0, [sp, #4]
   18d64:	ldr	r0, [sp, #4]
   18d68:	bl	18c84 <__assert_fail@plt+0x78bc>
   18d6c:	tst	r0, #1
   18d70:	beq	18d78 <__assert_fail@plt+0x79b0>
   18d74:	bl	11398 <abort@plt>
   18d78:	ldr	r0, [sp, #4]
   18d7c:	ldr	r1, [r0, #20]
   18d80:	ldr	r0, [r0, r1, lsl #2]
   18d84:	str	r0, [sp]
   18d88:	ldr	r0, [sp, #4]
   18d8c:	ldr	r1, [r0, #16]
   18d90:	ldr	r2, [r0, #20]
   18d94:	add	r0, r0, r2, lsl #2
   18d98:	str	r1, [r0]
   18d9c:	ldr	r0, [sp, #4]
   18da0:	ldr	r0, [r0, #20]
   18da4:	ldr	r1, [sp, #4]
   18da8:	ldr	r1, [r1, #24]
   18dac:	cmp	r0, r1
   18db0:	bne	18dc4 <__assert_fail@plt+0x79fc>
   18db4:	ldr	r0, [sp, #4]
   18db8:	movw	r1, #1
   18dbc:	strb	r1, [r0, #28]
   18dc0:	b	18de0 <__assert_fail@plt+0x7a18>
   18dc4:	ldr	r0, [sp, #4]
   18dc8:	ldr	r0, [r0, #20]
   18dcc:	add	r0, r0, #4
   18dd0:	sub	r0, r0, #1
   18dd4:	and	r0, r0, #3
   18dd8:	ldr	r1, [sp, #4]
   18ddc:	str	r0, [r1, #20]
   18de0:	ldr	r0, [sp]
   18de4:	mov	sp, fp
   18de8:	pop	{fp, pc}
   18dec:	push	{fp, lr}
   18df0:	mov	fp, sp
   18df4:	sub	sp, sp, #104	; 0x68
   18df8:	str	r0, [fp, #-8]
   18dfc:	movw	r0, #0
   18e00:	str	r0, [fp, #-16]
   18e04:	ldr	r0, [fp, #-8]
   18e08:	ldrb	r0, [r0]
   18e0c:	movw	r1, #48	; 0x30
   18e10:	cmp	r1, r0
   18e14:	bgt	18f3c <__assert_fail@plt+0x7b74>
   18e18:	ldr	r0, [fp, #-8]
   18e1c:	ldrb	r0, [r0]
   18e20:	cmp	r0, #56	; 0x38
   18e24:	bge	18f3c <__assert_fail@plt+0x7b74>
   18e28:	movw	r0, #0
   18e2c:	str	r0, [fp, #-24]	; 0xffffffe8
   18e30:	ldr	r0, [fp, #-8]
   18e34:	str	r0, [fp, #-20]	; 0xffffffec
   18e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e3c:	lsl	r0, r0, #3
   18e40:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e44:	add	r2, r1, #1
   18e48:	str	r2, [fp, #-20]	; 0xffffffec
   18e4c:	ldrb	r1, [r1]
   18e50:	add	r0, r0, r1
   18e54:	sub	r0, r0, #48	; 0x30
   18e58:	str	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e60:	movw	r1, #4095	; 0xfff
   18e64:	cmp	r1, r0
   18e68:	bcs	18e78 <__assert_fail@plt+0x7ab0>
   18e6c:	movw	r0, #0
   18e70:	str	r0, [fp, #-4]
   18e74:	b	195e4 <__assert_fail@plt+0x821c>
   18e78:	b	18e7c <__assert_fail@plt+0x7ab4>
   18e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e80:	ldrb	r0, [r0]
   18e84:	movw	r1, #48	; 0x30
   18e88:	cmp	r1, r0
   18e8c:	movw	r0, #0
   18e90:	str	r0, [sp, #36]	; 0x24
   18e94:	bgt	18eb0 <__assert_fail@plt+0x7ae8>
   18e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e9c:	ldrb	r0, [r0]
   18ea0:	cmp	r0, #56	; 0x38
   18ea4:	movw	r0, #0
   18ea8:	movlt	r0, #1
   18eac:	str	r0, [sp, #36]	; 0x24
   18eb0:	ldr	r0, [sp, #36]	; 0x24
   18eb4:	tst	r0, #1
   18eb8:	bne	18e38 <__assert_fail@plt+0x7a70>
   18ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ec0:	ldrsb	r0, [r0]
   18ec4:	cmp	r0, #0
   18ec8:	beq	18ed8 <__assert_fail@plt+0x7b10>
   18ecc:	movw	r0, #0
   18ed0:	str	r0, [fp, #-4]
   18ed4:	b	195e4 <__assert_fail@plt+0x821c>
   18ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18edc:	bl	195f0 <__assert_fail@plt+0x8228>
   18ee0:	str	r0, [fp, #-28]	; 0xffffffe4
   18ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ee8:	ldr	r1, [fp, #-8]
   18eec:	sub	r0, r0, r1
   18ef0:	cmp	r0, #5
   18ef4:	bge	18f14 <__assert_fail@plt+0x7b4c>
   18ef8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18efc:	and	r0, r0, #3072	; 0xc00
   18f00:	orr	r0, r0, #512	; 0x200
   18f04:	movw	r1, #511	; 0x1ff
   18f08:	orr	r0, r0, r1
   18f0c:	str	r0, [sp, #32]
   18f10:	b	18f20 <__assert_fail@plt+0x7b58>
   18f14:	movw	r0, #4095	; 0xfff
   18f18:	str	r0, [sp, #32]
   18f1c:	b	18f20 <__assert_fail@plt+0x7b58>
   18f20:	ldr	r0, [sp, #32]
   18f24:	str	r0, [fp, #-32]	; 0xffffffe0
   18f28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18f30:	bl	19604 <__assert_fail@plt+0x823c>
   18f34:	str	r0, [fp, #-4]
   18f38:	b	195e4 <__assert_fail@plt+0x821c>
   18f3c:	movw	r0, #1
   18f40:	str	r0, [fp, #-36]	; 0xffffffdc
   18f44:	ldr	r0, [fp, #-8]
   18f48:	str	r0, [fp, #-20]	; 0xffffffec
   18f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f50:	ldrsb	r0, [r0]
   18f54:	cmp	r0, #0
   18f58:	beq	18fc8 <__assert_fail@plt+0x7c00>
   18f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f60:	ldrb	r0, [r0]
   18f64:	cmp	r0, #61	; 0x3d
   18f68:	movw	r0, #1
   18f6c:	str	r0, [sp, #28]
   18f70:	beq	18fa4 <__assert_fail@plt+0x7bdc>
   18f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f78:	ldrb	r0, [r0]
   18f7c:	cmp	r0, #43	; 0x2b
   18f80:	movw	r0, #1
   18f84:	str	r0, [sp, #28]
   18f88:	beq	18fa4 <__assert_fail@plt+0x7bdc>
   18f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f90:	ldrb	r0, [r0]
   18f94:	cmp	r0, #45	; 0x2d
   18f98:	movw	r0, #0
   18f9c:	moveq	r0, #1
   18fa0:	str	r0, [sp, #28]
   18fa4:	ldr	r0, [sp, #28]
   18fa8:	and	r0, r0, #1
   18fac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18fb0:	add	r0, r1, r0
   18fb4:	str	r0, [fp, #-36]	; 0xffffffdc
   18fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fbc:	add	r0, r0, #1
   18fc0:	str	r0, [fp, #-20]	; 0xffffffec
   18fc4:	b	18f4c <__assert_fail@plt+0x7b84>
   18fc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18fcc:	movw	r1, #16
   18fd0:	bl	1cd9c <__assert_fail@plt+0xb9d4>
   18fd4:	str	r0, [fp, #-12]
   18fd8:	ldr	r0, [fp, #-8]
   18fdc:	str	r0, [fp, #-20]	; 0xffffffec
   18fe0:	movw	r0, #0
   18fe4:	str	r0, [fp, #-40]	; 0xffffffd8
   18fe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fec:	ldrb	r0, [r0]
   18ff0:	mov	r1, r0
   18ff4:	cmp	r0, #43	; 0x2b
   18ff8:	str	r1, [sp, #24]
   18ffc:	beq	190b4 <__assert_fail@plt+0x7cec>
   19000:	b	19004 <__assert_fail@plt+0x7c3c>
   19004:	ldr	r0, [sp, #24]
   19008:	cmp	r0, #45	; 0x2d
   1900c:	beq	190b4 <__assert_fail@plt+0x7cec>
   19010:	b	19014 <__assert_fail@plt+0x7c4c>
   19014:	ldr	r0, [sp, #24]
   19018:	cmp	r0, #61	; 0x3d
   1901c:	beq	190b4 <__assert_fail@plt+0x7cec>
   19020:	b	19024 <__assert_fail@plt+0x7c5c>
   19024:	ldr	r0, [sp, #24]
   19028:	cmp	r0, #97	; 0x61
   1902c:	beq	190a0 <__assert_fail@plt+0x7cd8>
   19030:	b	19034 <__assert_fail@plt+0x7c6c>
   19034:	ldr	r0, [sp, #24]
   19038:	cmp	r0, #103	; 0x67
   1903c:	beq	19078 <__assert_fail@plt+0x7cb0>
   19040:	b	19044 <__assert_fail@plt+0x7c7c>
   19044:	ldr	r0, [sp, #24]
   19048:	cmp	r0, #111	; 0x6f
   1904c:	beq	1908c <__assert_fail@plt+0x7cc4>
   19050:	b	19054 <__assert_fail@plt+0x7c8c>
   19054:	ldr	r0, [sp, #24]
   19058:	cmp	r0, #117	; 0x75
   1905c:	beq	19068 <__assert_fail@plt+0x7ca0>
   19060:	b	19064 <__assert_fail@plt+0x7c9c>
   19064:	b	195d4 <__assert_fail@plt+0x820c>
   19068:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1906c:	orr	r0, r0, #2496	; 0x9c0
   19070:	str	r0, [fp, #-40]	; 0xffffffd8
   19074:	b	190b8 <__assert_fail@plt+0x7cf0>
   19078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1907c:	movw	r1, #1080	; 0x438
   19080:	orr	r0, r0, r1
   19084:	str	r0, [fp, #-40]	; 0xffffffd8
   19088:	b	190b8 <__assert_fail@plt+0x7cf0>
   1908c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19090:	movw	r1, #519	; 0x207
   19094:	orr	r0, r0, r1
   19098:	str	r0, [fp, #-40]	; 0xffffffd8
   1909c:	b	190b8 <__assert_fail@plt+0x7cf0>
   190a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190a4:	movw	r1, #4095	; 0xfff
   190a8:	orr	r0, r0, r1
   190ac:	str	r0, [fp, #-40]	; 0xffffffd8
   190b0:	b	190b8 <__assert_fail@plt+0x7cf0>
   190b4:	b	190cc <__assert_fail@plt+0x7d04>
   190b8:	b	190bc <__assert_fail@plt+0x7cf4>
   190bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   190c0:	add	r0, r0, #1
   190c4:	str	r0, [fp, #-20]	; 0xffffffec
   190c8:	b	18fe8 <__assert_fail@plt+0x7c20>
   190cc:	b	190d0 <__assert_fail@plt+0x7d08>
   190d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   190d4:	add	r1, r0, #1
   190d8:	str	r1, [fp, #-20]	; 0xffffffec
   190dc:	ldrb	r0, [r0]
   190e0:	strb	r0, [fp, #-41]	; 0xffffffd7
   190e4:	mov	r0, #0
   190e8:	str	r0, [sp, #52]	; 0x34
   190ec:	mov	r0, #3
   190f0:	strb	r0, [sp, #51]	; 0x33
   190f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   190f8:	ldrb	r0, [r0]
   190fc:	sub	r0, r0, #48	; 0x30
   19100:	cmp	r0, #69	; 0x45
   19104:	str	r0, [sp, #20]
   19108:	bhi	19354 <__assert_fail@plt+0x7f8c>
   1910c:	add	r0, pc, #8
   19110:	ldr	r1, [sp, #20]
   19114:	ldr	r0, [r0, r1, lsl #2]
   19118:	mov	pc, r0
   1911c:	andeq	r9, r1, r4, lsr r2
   19120:	andeq	r9, r1, r4, lsr r2
   19124:	andeq	r9, r1, r4, lsr r2
   19128:	andeq	r9, r1, r4, lsr r2
   1912c:	andeq	r9, r1, r4, lsr r2
   19130:	andeq	r9, r1, r4, lsr r2
   19134:	andeq	r9, r1, r4, lsr r2
   19138:	andeq	r9, r1, r4, lsr r2
   1913c:	andeq	r9, r1, r4, asr r3
   19140:	andeq	r9, r1, r4, asr r3
   19144:	andeq	r9, r1, r4, asr r3
   19148:	andeq	r9, r1, r4, asr r3
   1914c:	andeq	r9, r1, r4, asr r3
   19150:	andeq	r9, r1, r4, asr r3
   19154:	andeq	r9, r1, r4, asr r3
   19158:	andeq	r9, r1, r4, asr r3
   1915c:	andeq	r9, r1, r4, asr r3
   19160:	andeq	r9, r1, r4, asr r3
   19164:	andeq	r9, r1, r4, asr r3
   19168:	andeq	r9, r1, r4, asr r3
   1916c:	andeq	r9, r1, r4, asr r3
   19170:	andeq	r9, r1, r4, asr r3
   19174:	andeq	r9, r1, r4, asr r3
   19178:	andeq	r9, r1, r4, asr r3
   1917c:	andeq	r9, r1, r4, asr r3
   19180:	andeq	r9, r1, r4, asr r3
   19184:	andeq	r9, r1, r4, asr r3
   19188:	andeq	r9, r1, r4, asr r3
   1918c:	andeq	r9, r1, r4, asr r3
   19190:	andeq	r9, r1, r4, asr r3
   19194:	andeq	r9, r1, r4, asr r3
   19198:	andeq	r9, r1, r4, asr r3
   1919c:	andeq	r9, r1, r4, asr r3
   191a0:	andeq	r9, r1, r4, asr r3
   191a4:	andeq	r9, r1, r4, asr r3
   191a8:	andeq	r9, r1, r4, asr r3
   191ac:	andeq	r9, r1, r4, asr r3
   191b0:	andeq	r9, r1, r4, asr r3
   191b4:	andeq	r9, r1, r4, asr r3
   191b8:	andeq	r9, r1, r4, asr r3
   191bc:	andeq	r9, r1, r4, asr r3
   191c0:	andeq	r9, r1, r4, asr r3
   191c4:	andeq	r9, r1, r4, asr r3
   191c8:	andeq	r9, r1, r4, asr r3
   191cc:	andeq	r9, r1, r4, asr r3
   191d0:	andeq	r9, r1, r4, asr r3
   191d4:	andeq	r9, r1, r4, asr r3
   191d8:	andeq	r9, r1, r4, asr r3
   191dc:	andeq	r9, r1, r4, asr r3
   191e0:	andeq	r9, r1, r4, asr r3
   191e4:	andeq	r9, r1, r4, asr r3
   191e8:	andeq	r9, r1, r4, asr r3
   191ec:	andeq	r9, r1, r4, asr r3
   191f0:	andeq	r9, r1, r4, asr r3
   191f4:	andeq	r9, r1, r4, asr r3
   191f8:	andeq	r9, r1, r4, lsr #6
   191fc:	andeq	r9, r1, r4, asr r3
   19200:	andeq	r9, r1, r4, asr r3
   19204:	andeq	r9, r1, r4, asr r3
   19208:	andeq	r9, r1, r4, asr r3
   1920c:	andeq	r9, r1, r4, asr r3
   19210:	andeq	r9, r1, r4, asr r3
   19214:	andeq	r9, r1, r4, asr r3
   19218:	andeq	r9, r1, ip, lsr r3
   1921c:	andeq	r9, r1, r4, asr r3
   19220:	andeq	r9, r1, r4, asr r3
   19224:	andeq	r9, r1, r4, asr r3
   19228:	andeq	r9, r1, r4, asr r3
   1922c:	andeq	r9, r1, r4, asr r3
   19230:	andeq	r9, r1, ip, lsl #6
   19234:	movw	r0, #0
   19238:	str	r0, [sp, #40]	; 0x28
   1923c:	ldr	r0, [sp, #40]	; 0x28
   19240:	lsl	r0, r0, #3
   19244:	ldr	r1, [fp, #-20]	; 0xffffffec
   19248:	add	r2, r1, #1
   1924c:	str	r2, [fp, #-20]	; 0xffffffec
   19250:	ldrb	r1, [r1]
   19254:	add	r0, r0, r1
   19258:	sub	r0, r0, #48	; 0x30
   1925c:	str	r0, [sp, #40]	; 0x28
   19260:	ldr	r0, [sp, #40]	; 0x28
   19264:	movw	r1, #4095	; 0xfff
   19268:	cmp	r1, r0
   1926c:	bcs	19274 <__assert_fail@plt+0x7eac>
   19270:	b	195d4 <__assert_fail@plt+0x820c>
   19274:	b	19278 <__assert_fail@plt+0x7eb0>
   19278:	ldr	r0, [fp, #-20]	; 0xffffffec
   1927c:	ldrb	r0, [r0]
   19280:	movw	r1, #48	; 0x30
   19284:	cmp	r1, r0
   19288:	movw	r0, #0
   1928c:	str	r0, [sp, #16]
   19290:	bgt	192ac <__assert_fail@plt+0x7ee4>
   19294:	ldr	r0, [fp, #-20]	; 0xffffffec
   19298:	ldrb	r0, [r0]
   1929c:	cmp	r0, #56	; 0x38
   192a0:	movw	r0, #0
   192a4:	movlt	r0, #1
   192a8:	str	r0, [sp, #16]
   192ac:	ldr	r0, [sp, #16]
   192b0:	tst	r0, #1
   192b4:	bne	1923c <__assert_fail@plt+0x7e74>
   192b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   192bc:	cmp	r0, #0
   192c0:	bne	192e4 <__assert_fail@plt+0x7f1c>
   192c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   192c8:	ldrb	r0, [r0]
   192cc:	cmp	r0, #0
   192d0:	beq	192e8 <__assert_fail@plt+0x7f20>
   192d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   192d8:	ldrb	r0, [r0]
   192dc:	cmp	r0, #44	; 0x2c
   192e0:	beq	192e8 <__assert_fail@plt+0x7f20>
   192e4:	b	195d4 <__assert_fail@plt+0x820c>
   192e8:	movw	r0, #4095	; 0xfff
   192ec:	str	r0, [sp, #52]	; 0x34
   192f0:	str	r0, [fp, #-40]	; 0xffffffd8
   192f4:	ldr	r0, [sp, #40]	; 0x28
   192f8:	bl	195f0 <__assert_fail@plt+0x8228>
   192fc:	str	r0, [fp, #-48]	; 0xffffffd0
   19300:	movw	r0, #1
   19304:	strb	r0, [sp, #51]	; 0x33
   19308:	b	19488 <__assert_fail@plt+0x80c0>
   1930c:	movw	r0, #448	; 0x1c0
   19310:	str	r0, [fp, #-48]	; 0xffffffd0
   19314:	ldr	r0, [fp, #-20]	; 0xffffffec
   19318:	add	r0, r0, #1
   1931c:	str	r0, [fp, #-20]	; 0xffffffec
   19320:	b	19488 <__assert_fail@plt+0x80c0>
   19324:	movw	r0, #56	; 0x38
   19328:	str	r0, [fp, #-48]	; 0xffffffd0
   1932c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19330:	add	r0, r0, #1
   19334:	str	r0, [fp, #-20]	; 0xffffffec
   19338:	b	19488 <__assert_fail@plt+0x80c0>
   1933c:	movw	r0, #7
   19340:	str	r0, [fp, #-48]	; 0xffffffd0
   19344:	ldr	r0, [fp, #-20]	; 0xffffffec
   19348:	add	r0, r0, #1
   1934c:	str	r0, [fp, #-20]	; 0xffffffec
   19350:	b	19488 <__assert_fail@plt+0x80c0>
   19354:	movw	r0, #0
   19358:	str	r0, [fp, #-48]	; 0xffffffd0
   1935c:	movw	r0, #1
   19360:	strb	r0, [sp, #51]	; 0x33
   19364:	ldr	r0, [fp, #-20]	; 0xffffffec
   19368:	ldrb	r0, [r0]
   1936c:	sub	r0, r0, #88	; 0x58
   19370:	cmp	r0, #32
   19374:	str	r0, [sp, #12]
   19378:	bhi	1946c <__assert_fail@plt+0x80a4>
   1937c:	add	r0, pc, #8
   19380:	ldr	r1, [sp, #12]
   19384:	ldr	r0, [r0, r1, lsl #2]
   19388:	mov	pc, r0
   1938c:	andeq	r9, r1, r0, asr #8
   19390:	andeq	r9, r1, ip, ror #8
   19394:	andeq	r9, r1, ip, ror #8
   19398:	andeq	r9, r1, ip, ror #8
   1939c:	andeq	r9, r1, ip, ror #8
   193a0:	andeq	r9, r1, ip, ror #8
   193a4:	andeq	r9, r1, ip, ror #8
   193a8:	andeq	r9, r1, ip, ror #8
   193ac:	andeq	r9, r1, ip, ror #8
   193b0:	andeq	r9, r1, ip, ror #8
   193b4:	andeq	r9, r1, ip, ror #8
   193b8:	andeq	r9, r1, ip, ror #8
   193bc:	andeq	r9, r1, ip, ror #8
   193c0:	andeq	r9, r1, ip, ror #8
   193c4:	andeq	r9, r1, ip, ror #8
   193c8:	andeq	r9, r1, ip, ror #8
   193cc:	andeq	r9, r1, ip, ror #8
   193d0:	andeq	r9, r1, ip, ror #8
   193d4:	andeq	r9, r1, ip, ror #8
   193d8:	andeq	r9, r1, ip, ror #8
   193dc:	andeq	r9, r1, ip, ror #8
   193e0:	andeq	r9, r1, ip, ror #8
   193e4:	andeq	r9, r1, ip, ror #8
   193e8:	andeq	r9, r1, ip, ror #8
   193ec:	andeq	r9, r1, ip, ror #8
   193f0:	andeq	r9, r1, ip, ror #8
   193f4:	andeq	r9, r1, r0, lsl r4
   193f8:	andeq	r9, r1, ip, asr #8
   193fc:	andeq	r9, r1, ip, asr r4
   19400:	andeq	r9, r1, ip, ror #8
   19404:	andeq	r9, r1, ip, ror #8
   19408:	andeq	r9, r1, r0, lsr #8
   1940c:	andeq	r9, r1, r0, lsr r4
   19410:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19414:	orr	r0, r0, #292	; 0x124
   19418:	str	r0, [fp, #-48]	; 0xffffffd0
   1941c:	b	19470 <__assert_fail@plt+0x80a8>
   19420:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19424:	orr	r0, r0, #146	; 0x92
   19428:	str	r0, [fp, #-48]	; 0xffffffd0
   1942c:	b	19470 <__assert_fail@plt+0x80a8>
   19430:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19434:	orr	r0, r0, #73	; 0x49
   19438:	str	r0, [fp, #-48]	; 0xffffffd0
   1943c:	b	19470 <__assert_fail@plt+0x80a8>
   19440:	movw	r0, #2
   19444:	strb	r0, [sp, #51]	; 0x33
   19448:	b	19470 <__assert_fail@plt+0x80a8>
   1944c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19450:	orr	r0, r0, #3072	; 0xc00
   19454:	str	r0, [fp, #-48]	; 0xffffffd0
   19458:	b	19470 <__assert_fail@plt+0x80a8>
   1945c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19460:	orr	r0, r0, #512	; 0x200
   19464:	str	r0, [fp, #-48]	; 0xffffffd0
   19468:	b	19470 <__assert_fail@plt+0x80a8>
   1946c:	b	19484 <__assert_fail@plt+0x80bc>
   19470:	b	19474 <__assert_fail@plt+0x80ac>
   19474:	ldr	r0, [fp, #-20]	; 0xffffffec
   19478:	add	r0, r0, #1
   1947c:	str	r0, [fp, #-20]	; 0xffffffec
   19480:	b	19364 <__assert_fail@plt+0x7f9c>
   19484:	b	19488 <__assert_fail@plt+0x80c0>
   19488:	ldr	r0, [fp, #-12]
   1948c:	ldr	r1, [fp, #-16]
   19490:	add	r2, r1, #1
   19494:	str	r2, [fp, #-16]
   19498:	add	r0, r0, r1, lsl #4
   1949c:	str	r0, [sp, #44]	; 0x2c
   194a0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   194a4:	ldr	r1, [sp, #44]	; 0x2c
   194a8:	strb	r0, [r1]
   194ac:	ldrb	r0, [sp, #51]	; 0x33
   194b0:	ldr	r1, [sp, #44]	; 0x2c
   194b4:	strb	r0, [r1, #1]
   194b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194bc:	ldr	r1, [sp, #44]	; 0x2c
   194c0:	str	r0, [r1, #4]
   194c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194c8:	ldr	r1, [sp, #44]	; 0x2c
   194cc:	str	r0, [r1, #8]
   194d0:	ldr	r0, [sp, #52]	; 0x34
   194d4:	cmp	r0, #0
   194d8:	beq	194e8 <__assert_fail@plt+0x8120>
   194dc:	ldr	r0, [sp, #52]	; 0x34
   194e0:	str	r0, [sp, #8]
   194e4:	b	19518 <__assert_fail@plt+0x8150>
   194e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194ec:	cmp	r0, #0
   194f0:	beq	19508 <__assert_fail@plt+0x8140>
   194f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   194fc:	and	r0, r0, r1
   19500:	str	r0, [sp, #4]
   19504:	b	19510 <__assert_fail@plt+0x8148>
   19508:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1950c:	str	r0, [sp, #4]
   19510:	ldr	r0, [sp, #4]
   19514:	str	r0, [sp, #8]
   19518:	ldr	r0, [sp, #8]
   1951c:	ldr	r1, [sp, #44]	; 0x2c
   19520:	str	r0, [r1, #12]
   19524:	ldr	r0, [fp, #-20]	; 0xffffffec
   19528:	ldrb	r0, [r0]
   1952c:	cmp	r0, #61	; 0x3d
   19530:	movw	r0, #1
   19534:	str	r0, [sp]
   19538:	beq	1956c <__assert_fail@plt+0x81a4>
   1953c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19540:	ldrb	r0, [r0]
   19544:	cmp	r0, #43	; 0x2b
   19548:	movw	r0, #1
   1954c:	str	r0, [sp]
   19550:	beq	1956c <__assert_fail@plt+0x81a4>
   19554:	ldr	r0, [fp, #-20]	; 0xffffffec
   19558:	ldrb	r0, [r0]
   1955c:	cmp	r0, #45	; 0x2d
   19560:	movw	r0, #0
   19564:	moveq	r0, #1
   19568:	str	r0, [sp]
   1956c:	ldr	r0, [sp]
   19570:	tst	r0, #1
   19574:	bne	190d0 <__assert_fail@plt+0x7d08>
   19578:	ldr	r0, [fp, #-20]	; 0xffffffec
   1957c:	ldrb	r0, [r0]
   19580:	cmp	r0, #44	; 0x2c
   19584:	beq	1958c <__assert_fail@plt+0x81c4>
   19588:	b	195a0 <__assert_fail@plt+0x81d8>
   1958c:	b	19590 <__assert_fail@plt+0x81c8>
   19590:	ldr	r0, [fp, #-20]	; 0xffffffec
   19594:	add	r0, r0, #1
   19598:	str	r0, [fp, #-20]	; 0xffffffec
   1959c:	b	18fe0 <__assert_fail@plt+0x7c18>
   195a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   195a4:	ldrb	r0, [r0]
   195a8:	cmp	r0, #0
   195ac:	bne	195d0 <__assert_fail@plt+0x8208>
   195b0:	ldr	r0, [fp, #-12]
   195b4:	ldr	r1, [fp, #-16]
   195b8:	add	r0, r0, r1, lsl #4
   195bc:	movw	r1, #0
   195c0:	strb	r1, [r0, #1]
   195c4:	ldr	r0, [fp, #-12]
   195c8:	str	r0, [fp, #-4]
   195cc:	b	195e4 <__assert_fail@plt+0x821c>
   195d0:	b	195d4 <__assert_fail@plt+0x820c>
   195d4:	ldr	r0, [fp, #-12]
   195d8:	bl	208f4 <__assert_fail@plt+0xf52c>
   195dc:	movw	r0, #0
   195e0:	str	r0, [fp, #-4]
   195e4:	ldr	r0, [fp, #-4]
   195e8:	mov	sp, fp
   195ec:	pop	{fp, pc}
   195f0:	sub	sp, sp, #4
   195f4:	str	r0, [sp]
   195f8:	ldr	r0, [sp]
   195fc:	add	sp, sp, #4
   19600:	bx	lr
   19604:	push	{fp, lr}
   19608:	mov	fp, sp
   1960c:	sub	sp, sp, #16
   19610:	str	r0, [fp, #-4]
   19614:	str	r1, [sp, #8]
   19618:	movw	r0, #32
   1961c:	bl	1cc44 <__assert_fail@plt+0xb87c>
   19620:	str	r0, [sp, #4]
   19624:	ldr	r0, [sp, #4]
   19628:	movw	r1, #61	; 0x3d
   1962c:	strb	r1, [r0]
   19630:	ldr	r0, [sp, #4]
   19634:	movw	r1, #1
   19638:	strb	r1, [r0, #1]
   1963c:	ldr	r0, [sp, #4]
   19640:	movw	r1, #4095	; 0xfff
   19644:	str	r1, [r0, #4]
   19648:	ldr	r0, [fp, #-4]
   1964c:	ldr	r1, [sp, #4]
   19650:	str	r0, [r1, #8]
   19654:	ldr	r0, [sp, #8]
   19658:	ldr	r1, [sp, #4]
   1965c:	str	r0, [r1, #12]
   19660:	ldr	r0, [sp, #4]
   19664:	movw	r1, #0
   19668:	strb	r1, [r0, #17]
   1966c:	ldr	r0, [sp, #4]
   19670:	mov	sp, fp
   19674:	pop	{fp, pc}
   19678:	push	{fp, lr}
   1967c:	mov	fp, sp
   19680:	sub	sp, sp, #112	; 0x70
   19684:	str	r0, [fp, #-8]
   19688:	ldr	r0, [fp, #-8]
   1968c:	mov	r1, sp
   19690:	bl	22b80 <__assert_fail@plt+0x117b8>
   19694:	cmp	r0, #0
   19698:	beq	196a8 <__assert_fail@plt+0x82e0>
   1969c:	movw	r0, #0
   196a0:	str	r0, [fp, #-4]
   196a4:	b	196b8 <__assert_fail@plt+0x82f0>
   196a8:	ldr	r0, [sp, #16]
   196ac:	movw	r1, #4095	; 0xfff
   196b0:	bl	19604 <__assert_fail@plt+0x823c>
   196b4:	str	r0, [fp, #-4]
   196b8:	ldr	r0, [fp, #-4]
   196bc:	mov	sp, fp
   196c0:	pop	{fp, pc}
   196c4:	sub	sp, sp, #56	; 0x38
   196c8:	ldr	ip, [sp, #56]	; 0x38
   196cc:	str	r0, [sp, #52]	; 0x34
   196d0:	and	r0, r1, #1
   196d4:	strb	r0, [sp, #51]	; 0x33
   196d8:	str	r2, [sp, #44]	; 0x2c
   196dc:	str	r3, [sp, #40]	; 0x28
   196e0:	ldr	r0, [sp, #52]	; 0x34
   196e4:	movw	r1, #4095	; 0xfff
   196e8:	and	r0, r0, r1
   196ec:	str	r0, [sp, #36]	; 0x24
   196f0:	movw	r0, #0
   196f4:	str	r0, [sp, #32]
   196f8:	ldr	r0, [sp, #40]	; 0x28
   196fc:	ldrb	r0, [r0, #1]
   19700:	cmp	r0, #0
   19704:	beq	19988 <__assert_fail@plt+0x85c0>
   19708:	ldr	r0, [sp, #40]	; 0x28
   1970c:	ldr	r0, [r0, #4]
   19710:	str	r0, [sp, #28]
   19714:	ldrb	r0, [sp, #51]	; 0x33
   19718:	and	r0, r0, #1
   1971c:	cmp	r0, #0
   19720:	movwne	r0, #3072	; 0xc00
   19724:	ldr	r1, [sp, #40]	; 0x28
   19728:	ldr	r1, [r1, #12]
   1972c:	bic	r0, r0, r1
   19730:	str	r0, [sp, #24]
   19734:	ldr	r0, [sp, #40]	; 0x28
   19738:	ldr	r0, [r0, #8]
   1973c:	str	r0, [sp, #20]
   19740:	ldr	r0, [sp, #40]	; 0x28
   19744:	ldrb	r0, [r0, #1]
   19748:	mov	r1, r0
   1974c:	cmp	r0, #1
   19750:	str	r1, [sp, #12]
   19754:	beq	1977c <__assert_fail@plt+0x83b4>
   19758:	b	1975c <__assert_fail@plt+0x8394>
   1975c:	ldr	r0, [sp, #12]
   19760:	cmp	r0, #2
   19764:	beq	19808 <__assert_fail@plt+0x8440>
   19768:	b	1976c <__assert_fail@plt+0x83a4>
   1976c:	ldr	r0, [sp, #12]
   19770:	cmp	r0, #3
   19774:	beq	19780 <__assert_fail@plt+0x83b8>
   19778:	b	19834 <__assert_fail@plt+0x846c>
   1977c:	b	19834 <__assert_fail@plt+0x846c>
   19780:	ldr	r0, [sp, #36]	; 0x24
   19784:	ldr	r1, [sp, #20]
   19788:	and	r0, r1, r0
   1978c:	str	r0, [sp, #20]
   19790:	ldr	r0, [sp, #20]
   19794:	and	r0, r0, #292	; 0x124
   19798:	cmp	r0, #0
   1979c:	movw	r0, #0
   197a0:	movne	r0, #1
   197a4:	tst	r0, #1
   197a8:	movw	r0, #292	; 0x124
   197ac:	moveq	r0, #0
   197b0:	ldr	r1, [sp, #20]
   197b4:	and	r1, r1, #146	; 0x92
   197b8:	cmp	r1, #0
   197bc:	movw	r1, #0
   197c0:	movne	r1, #1
   197c4:	tst	r1, #1
   197c8:	movw	r1, #146	; 0x92
   197cc:	moveq	r1, #0
   197d0:	orr	r0, r0, r1
   197d4:	ldr	r1, [sp, #20]
   197d8:	and	r1, r1, #73	; 0x49
   197dc:	cmp	r1, #0
   197e0:	movw	r1, #0
   197e4:	movne	r1, #1
   197e8:	tst	r1, #1
   197ec:	movw	r1, #73	; 0x49
   197f0:	moveq	r1, #0
   197f4:	orr	r0, r0, r1
   197f8:	ldr	r1, [sp, #20]
   197fc:	orr	r0, r1, r0
   19800:	str	r0, [sp, #20]
   19804:	b	19834 <__assert_fail@plt+0x846c>
   19808:	ldr	r0, [sp, #36]	; 0x24
   1980c:	and	r0, r0, #73	; 0x49
   19810:	ldrb	r1, [sp, #51]	; 0x33
   19814:	and	r1, r1, #1
   19818:	orr	r0, r0, r1
   1981c:	cmp	r0, #0
   19820:	beq	19830 <__assert_fail@plt+0x8468>
   19824:	ldr	r0, [sp, #20]
   19828:	orr	r0, r0, #73	; 0x49
   1982c:	str	r0, [sp, #20]
   19830:	b	19834 <__assert_fail@plt+0x846c>
   19834:	ldr	r0, [sp, #28]
   19838:	cmp	r0, #0
   1983c:	beq	1984c <__assert_fail@plt+0x8484>
   19840:	ldr	r0, [sp, #28]
   19844:	str	r0, [sp, #8]
   19848:	b	1985c <__assert_fail@plt+0x8494>
   1984c:	ldr	r0, [sp, #44]	; 0x2c
   19850:	mvn	r1, #0
   19854:	eor	r0, r0, r1
   19858:	str	r0, [sp, #8]
   1985c:	ldr	r0, [sp, #8]
   19860:	ldr	r1, [sp, #24]
   19864:	bic	r0, r0, r1
   19868:	ldr	r1, [sp, #20]
   1986c:	and	r0, r1, r0
   19870:	str	r0, [sp, #20]
   19874:	ldr	r0, [sp, #40]	; 0x28
   19878:	ldrb	r0, [r0]
   1987c:	mov	r1, r0
   19880:	cmp	r0, #43	; 0x2b
   19884:	str	r1, [sp, #4]
   19888:	beq	19928 <__assert_fail@plt+0x8560>
   1988c:	b	19890 <__assert_fail@plt+0x84c8>
   19890:	ldr	r0, [sp, #4]
   19894:	cmp	r0, #45	; 0x2d
   19898:	beq	1994c <__assert_fail@plt+0x8584>
   1989c:	b	198a0 <__assert_fail@plt+0x84d8>
   198a0:	ldr	r0, [sp, #4]
   198a4:	cmp	r0, #61	; 0x3d
   198a8:	bne	19974 <__assert_fail@plt+0x85ac>
   198ac:	b	198b0 <__assert_fail@plt+0x84e8>
   198b0:	ldr	r0, [sp, #28]
   198b4:	cmp	r0, #0
   198b8:	beq	198d0 <__assert_fail@plt+0x8508>
   198bc:	ldr	r0, [sp, #28]
   198c0:	mvn	r1, #0
   198c4:	eor	r0, r0, r1
   198c8:	str	r0, [sp]
   198cc:	b	198dc <__assert_fail@plt+0x8514>
   198d0:	movw	r0, #0
   198d4:	str	r0, [sp]
   198d8:	b	198dc <__assert_fail@plt+0x8514>
   198dc:	ldr	r0, [sp]
   198e0:	ldr	r1, [sp, #24]
   198e4:	orr	r0, r0, r1
   198e8:	str	r0, [sp, #16]
   198ec:	ldr	r0, [sp, #16]
   198f0:	mvn	r1, #0
   198f4:	eor	r0, r0, r1
   198f8:	movw	r1, #4095	; 0xfff
   198fc:	and	r0, r0, r1
   19900:	ldr	r1, [sp, #32]
   19904:	orr	r0, r1, r0
   19908:	str	r0, [sp, #32]
   1990c:	ldr	r0, [sp, #36]	; 0x24
   19910:	ldr	r1, [sp, #16]
   19914:	and	r0, r0, r1
   19918:	ldr	r1, [sp, #20]
   1991c:	orr	r0, r0, r1
   19920:	str	r0, [sp, #36]	; 0x24
   19924:	b	19974 <__assert_fail@plt+0x85ac>
   19928:	ldr	r0, [sp, #20]
   1992c:	ldr	r1, [sp, #32]
   19930:	orr	r0, r1, r0
   19934:	str	r0, [sp, #32]
   19938:	ldr	r0, [sp, #20]
   1993c:	ldr	r1, [sp, #36]	; 0x24
   19940:	orr	r0, r1, r0
   19944:	str	r0, [sp, #36]	; 0x24
   19948:	b	19974 <__assert_fail@plt+0x85ac>
   1994c:	ldr	r0, [sp, #20]
   19950:	ldr	r1, [sp, #32]
   19954:	orr	r0, r1, r0
   19958:	str	r0, [sp, #32]
   1995c:	ldr	r0, [sp, #20]
   19960:	mvn	r1, #0
   19964:	eor	r0, r0, r1
   19968:	ldr	r1, [sp, #36]	; 0x24
   1996c:	and	r0, r1, r0
   19970:	str	r0, [sp, #36]	; 0x24
   19974:	b	19978 <__assert_fail@plt+0x85b0>
   19978:	ldr	r0, [sp, #40]	; 0x28
   1997c:	add	r0, r0, #16
   19980:	str	r0, [sp, #40]	; 0x28
   19984:	b	196f8 <__assert_fail@plt+0x8330>
   19988:	ldr	r0, [sp, #56]	; 0x38
   1998c:	movw	r1, #0
   19990:	cmp	r0, r1
   19994:	beq	199a4 <__assert_fail@plt+0x85dc>
   19998:	ldr	r0, [sp, #32]
   1999c:	ldr	r1, [sp, #56]	; 0x38
   199a0:	str	r0, [r1]
   199a4:	ldr	r0, [sp, #36]	; 0x24
   199a8:	add	sp, sp, #56	; 0x38
   199ac:	bx	lr
   199b0:	sub	sp, sp, #4
   199b4:	push	{fp, lr}
   199b8:	mov	fp, sp
   199bc:	sub	sp, sp, #20
   199c0:	str	r3, [fp, #8]
   199c4:	str	r0, [fp, #-4]
   199c8:	str	r1, [fp, #-8]
   199cc:	str	r2, [sp, #8]
   199d0:	movw	r0, #0
   199d4:	str	r0, [sp, #4]
   199d8:	ldr	r0, [sp, #8]
   199dc:	and	r0, r0, #64	; 0x40
   199e0:	cmp	r0, #0
   199e4:	beq	19a0c <__assert_fail@plt+0x8644>
   199e8:	mov	r0, sp
   199ec:	mov	r1, r0
   199f0:	add	r2, fp, #8
   199f4:	str	r2, [r1]
   199f8:	ldr	r1, [sp]
   199fc:	add	r2, r1, #4
   19a00:	str	r2, [sp]
   19a04:	ldr	r1, [r1]
   19a08:	str	r1, [sp, #4]
   19a0c:	ldr	r0, [fp, #-4]
   19a10:	ldr	r1, [fp, #-8]
   19a14:	ldr	r2, [sp, #8]
   19a18:	ldr	r3, [sp, #4]
   19a1c:	bl	1126c <openat64@plt>
   19a20:	bl	1c300 <__assert_fail@plt+0xaf38>
   19a24:	mov	sp, fp
   19a28:	pop	{fp, lr}
   19a2c:	add	sp, sp, #4
   19a30:	bx	lr
   19a34:	push	{fp, lr}
   19a38:	mov	fp, sp
   19a3c:	sub	sp, sp, #48	; 0x30
   19a40:	ldr	ip, [pc, #176]	; 19af8 <__assert_fail@plt+0x8730>
   19a44:	str	r0, [fp, #-8]
   19a48:	str	r1, [fp, #-12]
   19a4c:	str	r2, [fp, #-16]
   19a50:	str	r3, [fp, #-20]	; 0xffffffec
   19a54:	ldr	r0, [fp, #-16]
   19a58:	orr	r0, r0, ip
   19a5c:	str	r0, [sp, #24]
   19a60:	ldr	r0, [fp, #-8]
   19a64:	ldr	r1, [fp, #-12]
   19a68:	ldr	r2, [sp, #24]
   19a6c:	bl	199b0 <__assert_fail@plt+0x85e8>
   19a70:	str	r0, [sp, #20]
   19a74:	ldr	r0, [sp, #20]
   19a78:	cmp	r0, #0
   19a7c:	bge	19a8c <__assert_fail@plt+0x86c4>
   19a80:	movw	r0, #0
   19a84:	str	r0, [fp, #-4]
   19a88:	b	19aec <__assert_fail@plt+0x8724>
   19a8c:	ldr	r0, [sp, #20]
   19a90:	bl	11320 <fdopendir@plt>
   19a94:	str	r0, [sp, #16]
   19a98:	ldr	r0, [sp, #16]
   19a9c:	movw	r1, #0
   19aa0:	cmp	r0, r1
   19aa4:	beq	19ab8 <__assert_fail@plt+0x86f0>
   19aa8:	ldr	r0, [sp, #20]
   19aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ab0:	str	r0, [r1]
   19ab4:	b	19ae4 <__assert_fail@plt+0x871c>
   19ab8:	bl	11290 <__errno_location@plt>
   19abc:	ldr	r0, [r0]
   19ac0:	str	r0, [sp, #12]
   19ac4:	ldr	r0, [sp, #20]
   19ac8:	bl	113a4 <close@plt>
   19acc:	ldr	r1, [sp, #12]
   19ad0:	str	r0, [sp, #8]
   19ad4:	str	r1, [sp, #4]
   19ad8:	bl	11290 <__errno_location@plt>
   19adc:	ldr	r1, [sp, #4]
   19ae0:	str	r1, [r0]
   19ae4:	ldr	r0, [sp, #16]
   19ae8:	str	r0, [fp, #-4]
   19aec:	ldr	r0, [fp, #-4]
   19af0:	mov	sp, fp
   19af4:	pop	{fp, pc}
   19af8:	andeq	r4, r8, r0, lsl #18
   19afc:	push	{fp, lr}
   19b00:	mov	fp, sp
   19b04:	sub	sp, sp, #24
   19b08:	str	r0, [fp, #-4]
   19b0c:	ldr	r0, [fp, #-4]
   19b10:	movw	r1, #0
   19b14:	cmp	r0, r1
   19b18:	bne	19b3c <__assert_fail@plt+0x8774>
   19b1c:	movw	r0, #16760	; 0x4178
   19b20:	movt	r0, #3
   19b24:	ldr	r1, [r0]
   19b28:	movw	r0, #13996	; 0x36ac
   19b2c:	movt	r0, #2
   19b30:	bl	11380 <fputs@plt>
   19b34:	str	r0, [sp, #8]
   19b38:	bl	11398 <abort@plt>
   19b3c:	ldr	r0, [fp, #-4]
   19b40:	movw	r1, #47	; 0x2f
   19b44:	bl	112f0 <strrchr@plt>
   19b48:	str	r0, [fp, #-8]
   19b4c:	ldr	r0, [fp, #-8]
   19b50:	movw	r1, #0
   19b54:	cmp	r0, r1
   19b58:	beq	19b6c <__assert_fail@plt+0x87a4>
   19b5c:	ldr	r0, [fp, #-8]
   19b60:	add	r0, r0, #1
   19b64:	str	r0, [sp, #4]
   19b68:	b	19b74 <__assert_fail@plt+0x87ac>
   19b6c:	ldr	r0, [fp, #-4]
   19b70:	str	r0, [sp, #4]
   19b74:	ldr	r0, [sp, #4]
   19b78:	str	r0, [sp, #12]
   19b7c:	ldr	r0, [sp, #12]
   19b80:	ldr	r1, [fp, #-4]
   19b84:	sub	r0, r0, r1
   19b88:	cmp	r0, #7
   19b8c:	blt	19bf8 <__assert_fail@plt+0x8830>
   19b90:	ldr	r0, [sp, #12]
   19b94:	mvn	r1, #6
   19b98:	add	r0, r0, r1
   19b9c:	movw	r1, #14052	; 0x36e4
   19ba0:	movt	r1, #2
   19ba4:	movw	r2, #7
   19ba8:	bl	1138c <strncmp@plt>
   19bac:	cmp	r0, #0
   19bb0:	bne	19bf8 <__assert_fail@plt+0x8830>
   19bb4:	ldr	r0, [sp, #12]
   19bb8:	str	r0, [fp, #-4]
   19bbc:	ldr	r0, [sp, #12]
   19bc0:	movw	r1, #14060	; 0x36ec
   19bc4:	movt	r1, #2
   19bc8:	movw	r2, #3
   19bcc:	bl	1138c <strncmp@plt>
   19bd0:	cmp	r0, #0
   19bd4:	bne	19bf4 <__assert_fail@plt+0x882c>
   19bd8:	ldr	r0, [sp, #12]
   19bdc:	add	r0, r0, #3
   19be0:	str	r0, [fp, #-4]
   19be4:	ldr	r0, [fp, #-4]
   19be8:	movw	r1, #16744	; 0x4168
   19bec:	movt	r1, #3
   19bf0:	str	r0, [r1]
   19bf4:	b	19bf8 <__assert_fail@plt+0x8830>
   19bf8:	ldr	r0, [fp, #-4]
   19bfc:	movw	r1, #16820	; 0x41b4
   19c00:	movt	r1, #3
   19c04:	str	r0, [r1]
   19c08:	ldr	r0, [fp, #-4]
   19c0c:	movw	r1, #16748	; 0x416c
   19c10:	movt	r1, #3
   19c14:	str	r0, [r1]
   19c18:	mov	sp, fp
   19c1c:	pop	{fp, pc}
   19c20:	push	{fp, lr}
   19c24:	mov	fp, sp
   19c28:	sub	sp, sp, #24
   19c2c:	str	r0, [fp, #-4]
   19c30:	bl	11290 <__errno_location@plt>
   19c34:	ldr	r0, [r0]
   19c38:	str	r0, [fp, #-8]
   19c3c:	ldr	r0, [fp, #-4]
   19c40:	movw	r1, #0
   19c44:	cmp	r0, r1
   19c48:	beq	19c58 <__assert_fail@plt+0x8890>
   19c4c:	ldr	r0, [fp, #-4]
   19c50:	str	r0, [sp, #8]
   19c54:	b	19c68 <__assert_fail@plt+0x88a0>
   19c58:	movw	r0, #16824	; 0x41b8
   19c5c:	movt	r0, #3
   19c60:	str	r0, [sp, #8]
   19c64:	b	19c68 <__assert_fail@plt+0x88a0>
   19c68:	ldr	r0, [sp, #8]
   19c6c:	movw	r1, #48	; 0x30
   19c70:	bl	1f87c <__assert_fail@plt+0xe4b4>
   19c74:	str	r0, [sp, #12]
   19c78:	ldr	r0, [fp, #-8]
   19c7c:	str	r0, [sp, #4]
   19c80:	bl	11290 <__errno_location@plt>
   19c84:	ldr	r1, [sp, #4]
   19c88:	str	r1, [r0]
   19c8c:	ldr	r0, [sp, #12]
   19c90:	mov	sp, fp
   19c94:	pop	{fp, pc}
   19c98:	sub	sp, sp, #8
   19c9c:	str	r0, [sp, #4]
   19ca0:	ldr	r0, [sp, #4]
   19ca4:	movw	r1, #0
   19ca8:	cmp	r0, r1
   19cac:	beq	19cbc <__assert_fail@plt+0x88f4>
   19cb0:	ldr	r0, [sp, #4]
   19cb4:	str	r0, [sp]
   19cb8:	b	19ccc <__assert_fail@plt+0x8904>
   19cbc:	movw	r0, #16824	; 0x41b8
   19cc0:	movt	r0, #3
   19cc4:	str	r0, [sp]
   19cc8:	b	19ccc <__assert_fail@plt+0x8904>
   19ccc:	ldr	r0, [sp]
   19cd0:	ldr	r0, [r0]
   19cd4:	add	sp, sp, #8
   19cd8:	bx	lr
   19cdc:	sub	sp, sp, #16
   19ce0:	str	r0, [sp, #12]
   19ce4:	str	r1, [sp, #8]
   19ce8:	ldr	r0, [sp, #8]
   19cec:	ldr	r1, [sp, #12]
   19cf0:	movw	r2, #0
   19cf4:	cmp	r1, r2
   19cf8:	str	r0, [sp, #4]
   19cfc:	beq	19d0c <__assert_fail@plt+0x8944>
   19d00:	ldr	r0, [sp, #12]
   19d04:	str	r0, [sp]
   19d08:	b	19d1c <__assert_fail@plt+0x8954>
   19d0c:	movw	r0, #16824	; 0x41b8
   19d10:	movt	r0, #3
   19d14:	str	r0, [sp]
   19d18:	b	19d1c <__assert_fail@plt+0x8954>
   19d1c:	ldr	r0, [sp]
   19d20:	ldr	r1, [sp, #4]
   19d24:	str	r1, [r0]
   19d28:	add	sp, sp, #16
   19d2c:	bx	lr
   19d30:	sub	sp, sp, #32
   19d34:	str	r0, [sp, #28]
   19d38:	strb	r1, [sp, #27]
   19d3c:	str	r2, [sp, #20]
   19d40:	ldrb	r0, [sp, #27]
   19d44:	strb	r0, [sp, #19]
   19d48:	ldr	r0, [sp, #28]
   19d4c:	movw	r1, #0
   19d50:	cmp	r0, r1
   19d54:	beq	19d64 <__assert_fail@plt+0x899c>
   19d58:	ldr	r0, [sp, #28]
   19d5c:	str	r0, [sp]
   19d60:	b	19d74 <__assert_fail@plt+0x89ac>
   19d64:	movw	r0, #16824	; 0x41b8
   19d68:	movt	r0, #3
   19d6c:	str	r0, [sp]
   19d70:	b	19d74 <__assert_fail@plt+0x89ac>
   19d74:	ldr	r0, [sp]
   19d78:	add	r0, r0, #8
   19d7c:	ldrb	r1, [sp, #19]
   19d80:	lsr	r1, r1, #5
   19d84:	add	r0, r0, r1, lsl #2
   19d88:	str	r0, [sp, #12]
   19d8c:	ldrb	r0, [sp, #19]
   19d90:	and	r0, r0, #31
   19d94:	str	r0, [sp, #8]
   19d98:	ldr	r0, [sp, #12]
   19d9c:	ldr	r0, [r0]
   19da0:	ldr	r1, [sp, #8]
   19da4:	lsr	r0, r0, r1
   19da8:	and	r0, r0, #1
   19dac:	str	r0, [sp, #4]
   19db0:	ldr	r0, [sp, #20]
   19db4:	and	r0, r0, #1
   19db8:	ldr	r1, [sp, #4]
   19dbc:	eor	r0, r0, r1
   19dc0:	ldr	r1, [sp, #8]
   19dc4:	lsl	r0, r0, r1
   19dc8:	ldr	r1, [sp, #12]
   19dcc:	ldr	r2, [r1]
   19dd0:	eor	r0, r2, r0
   19dd4:	str	r0, [r1]
   19dd8:	ldr	r0, [sp, #4]
   19ddc:	add	sp, sp, #32
   19de0:	bx	lr
   19de4:	sub	sp, sp, #12
   19de8:	str	r0, [sp, #8]
   19dec:	str	r1, [sp, #4]
   19df0:	ldr	r0, [sp, #8]
   19df4:	movw	r1, #0
   19df8:	cmp	r0, r1
   19dfc:	bne	19e0c <__assert_fail@plt+0x8a44>
   19e00:	movw	r0, #16824	; 0x41b8
   19e04:	movt	r0, #3
   19e08:	str	r0, [sp, #8]
   19e0c:	ldr	r0, [sp, #8]
   19e10:	ldr	r0, [r0, #4]
   19e14:	str	r0, [sp]
   19e18:	ldr	r0, [sp, #4]
   19e1c:	ldr	r1, [sp, #8]
   19e20:	str	r0, [r1, #4]
   19e24:	ldr	r0, [sp]
   19e28:	add	sp, sp, #12
   19e2c:	bx	lr
   19e30:	push	{fp, lr}
   19e34:	mov	fp, sp
   19e38:	sub	sp, sp, #16
   19e3c:	str	r0, [fp, #-4]
   19e40:	str	r1, [sp, #8]
   19e44:	str	r2, [sp, #4]
   19e48:	ldr	r0, [fp, #-4]
   19e4c:	movw	r1, #0
   19e50:	cmp	r0, r1
   19e54:	bne	19e64 <__assert_fail@plt+0x8a9c>
   19e58:	movw	r0, #16824	; 0x41b8
   19e5c:	movt	r0, #3
   19e60:	str	r0, [fp, #-4]
   19e64:	ldr	r0, [fp, #-4]
   19e68:	movw	r1, #10
   19e6c:	str	r1, [r0]
   19e70:	ldr	r0, [sp, #8]
   19e74:	movw	r1, #0
   19e78:	cmp	r0, r1
   19e7c:	beq	19e90 <__assert_fail@plt+0x8ac8>
   19e80:	ldr	r0, [sp, #4]
   19e84:	movw	r1, #0
   19e88:	cmp	r0, r1
   19e8c:	bne	19e94 <__assert_fail@plt+0x8acc>
   19e90:	bl	11398 <abort@plt>
   19e94:	ldr	r0, [sp, #8]
   19e98:	ldr	r1, [fp, #-4]
   19e9c:	str	r0, [r1, #40]	; 0x28
   19ea0:	ldr	r0, [sp, #4]
   19ea4:	ldr	r1, [fp, #-4]
   19ea8:	str	r0, [r1, #44]	; 0x2c
   19eac:	mov	sp, fp
   19eb0:	pop	{fp, pc}
   19eb4:	push	{r4, r5, r6, sl, fp, lr}
   19eb8:	add	fp, sp, #16
   19ebc:	sub	sp, sp, #56	; 0x38
   19ec0:	ldr	ip, [fp, #8]
   19ec4:	str	r0, [fp, #-20]	; 0xffffffec
   19ec8:	str	r1, [fp, #-24]	; 0xffffffe8
   19ecc:	str	r2, [fp, #-28]	; 0xffffffe4
   19ed0:	str	r3, [fp, #-32]	; 0xffffffe0
   19ed4:	ldr	r0, [fp, #8]
   19ed8:	movw	r1, #0
   19edc:	cmp	r0, r1
   19ee0:	beq	19ef0 <__assert_fail@plt+0x8b28>
   19ee4:	ldr	r0, [fp, #8]
   19ee8:	str	r0, [sp, #24]
   19eec:	b	19f00 <__assert_fail@plt+0x8b38>
   19ef0:	movw	r0, #16824	; 0x41b8
   19ef4:	movt	r0, #3
   19ef8:	str	r0, [sp, #24]
   19efc:	b	19f00 <__assert_fail@plt+0x8b38>
   19f00:	ldr	r0, [sp, #24]
   19f04:	str	r0, [sp, #36]	; 0x24
   19f08:	bl	11290 <__errno_location@plt>
   19f0c:	ldr	r0, [r0]
   19f10:	str	r0, [sp, #32]
   19f14:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19f20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f24:	ldr	ip, [sp, #36]	; 0x24
   19f28:	ldr	ip, [ip]
   19f2c:	ldr	lr, [sp, #36]	; 0x24
   19f30:	ldr	lr, [lr, #4]
   19f34:	ldr	r4, [sp, #36]	; 0x24
   19f38:	add	r4, r4, #8
   19f3c:	ldr	r5, [sp, #36]	; 0x24
   19f40:	ldr	r5, [r5, #40]	; 0x28
   19f44:	ldr	r6, [sp, #36]	; 0x24
   19f48:	ldr	r6, [r6, #44]	; 0x2c
   19f4c:	str	ip, [sp]
   19f50:	str	lr, [sp, #4]
   19f54:	str	r4, [sp, #8]
   19f58:	str	r5, [sp, #12]
   19f5c:	str	r6, [sp, #16]
   19f60:	bl	19f88 <__assert_fail@plt+0x8bc0>
   19f64:	str	r0, [sp, #28]
   19f68:	ldr	r0, [sp, #32]
   19f6c:	str	r0, [sp, #20]
   19f70:	bl	11290 <__errno_location@plt>
   19f74:	ldr	r1, [sp, #20]
   19f78:	str	r1, [r0]
   19f7c:	ldr	r0, [sp, #28]
   19f80:	sub	sp, fp, #16
   19f84:	pop	{r4, r5, r6, sl, fp, pc}
   19f88:	push	{r4, r5, r6, sl, fp, lr}
   19f8c:	add	fp, sp, #16
   19f90:	sub	sp, sp, #160	; 0xa0
   19f94:	ldr	ip, [fp, #24]
   19f98:	ldr	lr, [fp, #20]
   19f9c:	ldr	r4, [fp, #16]
   19fa0:	ldr	r5, [fp, #12]
   19fa4:	ldr	r6, [fp, #8]
   19fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   19fac:	str	r1, [fp, #-28]	; 0xffffffe4
   19fb0:	str	r2, [fp, #-32]	; 0xffffffe0
   19fb4:	str	r3, [fp, #-36]	; 0xffffffdc
   19fb8:	movw	r0, #0
   19fbc:	str	r0, [fp, #-44]	; 0xffffffd4
   19fc0:	str	r0, [fp, #-48]	; 0xffffffd0
   19fc4:	str	r0, [fp, #-52]	; 0xffffffcc
   19fc8:	str	r0, [fp, #-56]	; 0xffffffc8
   19fcc:	movw	r0, #0
   19fd0:	strb	r0, [fp, #-57]	; 0xffffffc7
   19fd4:	str	ip, [sp, #72]	; 0x48
   19fd8:	str	lr, [sp, #68]	; 0x44
   19fdc:	str	r4, [sp, #64]	; 0x40
   19fe0:	str	r5, [sp, #60]	; 0x3c
   19fe4:	str	r6, [sp, #56]	; 0x38
   19fe8:	bl	111b8 <__ctype_get_mb_cur_max@plt>
   19fec:	cmp	r0, #1
   19ff0:	movw	r0, #0
   19ff4:	moveq	r0, #1
   19ff8:	and	r0, r0, #1
   19ffc:	strb	r0, [fp, #-58]	; 0xffffffc6
   1a000:	ldr	r0, [fp, #12]
   1a004:	and	r0, r0, #2
   1a008:	cmp	r0, #0
   1a00c:	movw	r0, #0
   1a010:	movne	r0, #1
   1a014:	and	r0, r0, #1
   1a018:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a01c:	movw	r0, #0
   1a020:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a024:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a028:	movw	r0, #1
   1a02c:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a030:	ldr	r0, [fp, #8]
   1a034:	cmp	r0, #10
   1a038:	str	r0, [sp, #52]	; 0x34
   1a03c:	bhi	1a264 <__assert_fail@plt+0x8e9c>
   1a040:	add	r0, pc, #8
   1a044:	ldr	r1, [sp, #52]	; 0x34
   1a048:	ldr	r0, [r0, r1, lsl #2]
   1a04c:	mov	pc, r0
   1a050:	andeq	sl, r1, r8, asr r2
   1a054:	ldrdeq	sl, [r1], -r4
   1a058:	strdeq	sl, [r1], -r4
   1a05c:	andeq	sl, r1, ip, asr #3
   1a060:	ldrdeq	sl, [r1], -ip
   1a064:	andeq	sl, r1, ip, lsl #1
   1a068:	andeq	sl, r1, ip, ror r0
   1a06c:	strdeq	sl, [r1], -r0
   1a070:	andeq	sl, r1, r4, lsl #2
   1a074:	andeq	sl, r1, r4, lsl #2
   1a078:	andeq	sl, r1, r4, lsl #2
   1a07c:	movw	r0, #5
   1a080:	str	r0, [fp, #8]
   1a084:	movw	r0, #1
   1a088:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a08c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a090:	tst	r0, #1
   1a094:	bne	1a0d0 <__assert_fail@plt+0x8d08>
   1a098:	b	1a09c <__assert_fail@plt+0x8cd4>
   1a09c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0a4:	cmp	r0, r1
   1a0a8:	bcs	1a0c0 <__assert_fail@plt+0x8cf8>
   1a0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0b4:	add	r0, r0, r1
   1a0b8:	movw	r1, #34	; 0x22
   1a0bc:	strb	r1, [r0]
   1a0c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0c4:	add	r0, r0, #1
   1a0c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0cc:	b	1a0d0 <__assert_fail@plt+0x8d08>
   1a0d0:	movw	r0, #1
   1a0d4:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a0d8:	movw	r0, #14140	; 0x373c
   1a0dc:	movt	r0, #2
   1a0e0:	str	r0, [fp, #-52]	; 0xffffffcc
   1a0e4:	movw	r0, #1
   1a0e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a0ec:	b	1a268 <__assert_fail@plt+0x8ea0>
   1a0f0:	movw	r0, #1
   1a0f4:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a0f8:	movw	r0, #0
   1a0fc:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a100:	b	1a268 <__assert_fail@plt+0x8ea0>
   1a104:	ldr	r0, [fp, #8]
   1a108:	cmp	r0, #10
   1a10c:	beq	1a138 <__assert_fail@plt+0x8d70>
   1a110:	ldr	r1, [fp, #8]
   1a114:	movw	r0, #14142	; 0x373e
   1a118:	movt	r0, #2
   1a11c:	bl	1c17c <__assert_fail@plt+0xadb4>
   1a120:	str	r0, [fp, #20]
   1a124:	ldr	r1, [fp, #8]
   1a128:	movw	r0, #14144	; 0x3740
   1a12c:	movt	r0, #2
   1a130:	bl	1c17c <__assert_fail@plt+0xadb4>
   1a134:	str	r0, [fp, #24]
   1a138:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a13c:	tst	r0, #1
   1a140:	bne	1a1ac <__assert_fail@plt+0x8de4>
   1a144:	ldr	r0, [fp, #20]
   1a148:	str	r0, [fp, #-52]	; 0xffffffcc
   1a14c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a150:	ldrsb	r0, [r0]
   1a154:	cmp	r0, #0
   1a158:	beq	1a1a8 <__assert_fail@plt+0x8de0>
   1a15c:	b	1a160 <__assert_fail@plt+0x8d98>
   1a160:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a164:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a168:	cmp	r0, r1
   1a16c:	bcs	1a188 <__assert_fail@plt+0x8dc0>
   1a170:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a174:	ldrb	r0, [r0]
   1a178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a17c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a180:	add	r1, r1, r2
   1a184:	strb	r0, [r1]
   1a188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a18c:	add	r0, r0, #1
   1a190:	str	r0, [fp, #-44]	; 0xffffffd4
   1a194:	b	1a198 <__assert_fail@plt+0x8dd0>
   1a198:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a19c:	add	r0, r0, #1
   1a1a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1a1a4:	b	1a14c <__assert_fail@plt+0x8d84>
   1a1a8:	b	1a1ac <__assert_fail@plt+0x8de4>
   1a1ac:	movw	r0, #1
   1a1b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a1b4:	ldr	r0, [fp, #24]
   1a1b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1a1bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a1c0:	bl	11260 <strlen@plt>
   1a1c4:	str	r0, [fp, #-56]	; 0xffffffc8
   1a1c8:	b	1a268 <__assert_fail@plt+0x8ea0>
   1a1cc:	movw	r0, #1
   1a1d0:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a1d4:	movw	r0, #1
   1a1d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a1dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a1e0:	tst	r0, #1
   1a1e4:	bne	1a1f0 <__assert_fail@plt+0x8e28>
   1a1e8:	movw	r0, #1
   1a1ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a1f0:	b	1a1f4 <__assert_fail@plt+0x8e2c>
   1a1f4:	movw	r0, #2
   1a1f8:	str	r0, [fp, #8]
   1a1fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a200:	tst	r0, #1
   1a204:	bne	1a240 <__assert_fail@plt+0x8e78>
   1a208:	b	1a20c <__assert_fail@plt+0x8e44>
   1a20c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a214:	cmp	r0, r1
   1a218:	bcs	1a230 <__assert_fail@plt+0x8e68>
   1a21c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a224:	add	r0, r0, r1
   1a228:	movw	r1, #39	; 0x27
   1a22c:	strb	r1, [r0]
   1a230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a234:	add	r0, r0, #1
   1a238:	str	r0, [fp, #-44]	; 0xffffffd4
   1a23c:	b	1a240 <__assert_fail@plt+0x8e78>
   1a240:	movw	r0, #14144	; 0x3740
   1a244:	movt	r0, #2
   1a248:	str	r0, [fp, #-52]	; 0xffffffcc
   1a24c:	movw	r0, #1
   1a250:	str	r0, [fp, #-56]	; 0xffffffc8
   1a254:	b	1a268 <__assert_fail@plt+0x8ea0>
   1a258:	movw	r0, #0
   1a25c:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a260:	b	1a268 <__assert_fail@plt+0x8ea0>
   1a264:	bl	11398 <abort@plt>
   1a268:	movw	r0, #0
   1a26c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a274:	cmn	r0, #1
   1a278:	bne	1a2a4 <__assert_fail@plt+0x8edc>
   1a27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a280:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a284:	add	r0, r0, r1
   1a288:	ldrb	r0, [r0]
   1a28c:	cmp	r0, #0
   1a290:	movw	r0, #0
   1a294:	moveq	r0, #1
   1a298:	and	r0, r0, #1
   1a29c:	str	r0, [sp, #48]	; 0x30
   1a2a0:	b	1a2c0 <__assert_fail@plt+0x8ef8>
   1a2a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a2a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a2ac:	cmp	r0, r1
   1a2b0:	movw	r0, #0
   1a2b4:	moveq	r0, #1
   1a2b8:	and	r0, r0, #1
   1a2bc:	str	r0, [sp, #48]	; 0x30
   1a2c0:	ldr	r0, [sp, #48]	; 0x30
   1a2c4:	cmp	r0, #0
   1a2c8:	movw	r0, #0
   1a2cc:	movne	r0, #1
   1a2d0:	mvn	r1, #0
   1a2d4:	eor	r0, r0, r1
   1a2d8:	tst	r0, #1
   1a2dc:	beq	1b4c8 <__assert_fail@plt+0xa100>
   1a2e0:	movw	r0, #0
   1a2e4:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a2e8:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a2ec:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a2f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a2f4:	tst	r0, #1
   1a2f8:	beq	1a3a4 <__assert_fail@plt+0x8fdc>
   1a2fc:	ldr	r0, [fp, #8]
   1a300:	cmp	r0, #2
   1a304:	beq	1a3a4 <__assert_fail@plt+0x8fdc>
   1a308:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a30c:	cmp	r0, #0
   1a310:	beq	1a3a4 <__assert_fail@plt+0x8fdc>
   1a314:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a318:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a31c:	add	r0, r0, r1
   1a320:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a324:	cmn	r1, #1
   1a328:	str	r0, [sp, #44]	; 0x2c
   1a32c:	bne	1a354 <__assert_fail@plt+0x8f8c>
   1a330:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a334:	movw	r1, #1
   1a338:	cmp	r1, r0
   1a33c:	bcs	1a354 <__assert_fail@plt+0x8f8c>
   1a340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a344:	bl	11260 <strlen@plt>
   1a348:	str	r0, [fp, #-36]	; 0xffffffdc
   1a34c:	str	r0, [sp, #40]	; 0x28
   1a350:	b	1a35c <__assert_fail@plt+0x8f94>
   1a354:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a358:	str	r0, [sp, #40]	; 0x28
   1a35c:	ldr	r0, [sp, #40]	; 0x28
   1a360:	ldr	r1, [sp, #44]	; 0x2c
   1a364:	cmp	r1, r0
   1a368:	bhi	1a3a4 <__assert_fail@plt+0x8fdc>
   1a36c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a374:	add	r0, r0, r1
   1a378:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a37c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a380:	bl	11164 <memcmp@plt>
   1a384:	cmp	r0, #0
   1a388:	bne	1a3a4 <__assert_fail@plt+0x8fdc>
   1a38c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a390:	tst	r0, #1
   1a394:	beq	1a39c <__assert_fail@plt+0x8fd4>
   1a398:	b	1b648 <__assert_fail@plt+0xa280>
   1a39c:	movw	r0, #1
   1a3a0:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a3a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a3a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a3ac:	ldrb	r0, [r0, r1]
   1a3b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a3b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3b8:	mov	r1, r0
   1a3bc:	cmp	r0, #126	; 0x7e
   1a3c0:	str	r1, [sp, #36]	; 0x24
   1a3c4:	bhi	1ac34 <__assert_fail@plt+0x986c>
   1a3c8:	add	r0, pc, #8
   1a3cc:	ldr	r1, [sp, #36]	; 0x24
   1a3d0:	ldr	r0, [r0, r1, lsl #2]
   1a3d4:	mov	pc, r0
   1a3d8:	ldrdeq	sl, [r1], -r4
   1a3dc:	andeq	sl, r1, r4, lsr ip
   1a3e0:	andeq	sl, r1, r4, lsr ip
   1a3e4:	andeq	sl, r1, r4, lsr ip
   1a3e8:	andeq	sl, r1, r4, lsr ip
   1a3ec:	andeq	sl, r1, r4, lsr ip
   1a3f0:	andeq	sl, r1, r4, lsr ip
   1a3f4:	ldrdeq	sl, [r1], -ip
   1a3f8:	andeq	sl, r1, r8, ror #19
   1a3fc:	andeq	sl, r1, r8, lsl sl
   1a400:	andeq	sl, r1, r0, lsl #20
   1a404:	andeq	sl, r1, r4, lsr #20
   1a408:	strdeq	sl, [r1], -r4
   1a40c:	andeq	sl, r1, ip, lsl #20
   1a410:	andeq	sl, r1, r4, lsr ip
   1a414:	andeq	sl, r1, r4, lsr ip
   1a418:	andeq	sl, r1, r4, lsr ip
   1a41c:	andeq	sl, r1, r4, lsr ip
   1a420:	andeq	sl, r1, r4, lsr ip
   1a424:	andeq	sl, r1, r4, lsr ip
   1a428:	andeq	sl, r1, r4, lsr ip
   1a42c:	andeq	sl, r1, r4, lsr ip
   1a430:	andeq	sl, r1, r4, lsr ip
   1a434:	andeq	sl, r1, r4, lsr ip
   1a438:	andeq	sl, r1, r4, lsr ip
   1a43c:	andeq	sl, r1, r4, lsr ip
   1a440:	andeq	sl, r1, r4, lsr ip
   1a444:	andeq	sl, r1, r4, lsr ip
   1a448:	andeq	sl, r1, r4, lsr ip
   1a44c:	andeq	sl, r1, r4, lsr ip
   1a450:	andeq	sl, r1, r4, lsr ip
   1a454:	andeq	sl, r1, r4, lsr ip
   1a458:	andeq	sl, r1, r8, lsl #22
   1a45c:	andeq	sl, r1, r0, lsl fp
   1a460:	andeq	sl, r1, r0, lsl fp
   1a464:	strdeq	sl, [r1], -r4
   1a468:	andeq	sl, r1, r0, lsl fp
   1a46c:	andeq	sl, r1, r8, lsr #24
   1a470:	andeq	sl, r1, r0, lsl fp
   1a474:	andeq	sl, r1, r0, lsr fp
   1a478:	andeq	sl, r1, r0, lsl fp
   1a47c:	andeq	sl, r1, r0, lsl fp
   1a480:	andeq	sl, r1, r0, lsl fp
   1a484:	andeq	sl, r1, r8, lsr #24
   1a488:	andeq	sl, r1, r8, lsr #24
   1a48c:	andeq	sl, r1, r8, lsr #24
   1a490:	andeq	sl, r1, r8, lsr #24
   1a494:	andeq	sl, r1, r8, lsr #24
   1a498:	andeq	sl, r1, r8, lsr #24
   1a49c:	andeq	sl, r1, r8, lsr #24
   1a4a0:	andeq	sl, r1, r8, lsr #24
   1a4a4:	andeq	sl, r1, r8, lsr #24
   1a4a8:	andeq	sl, r1, r8, lsr #24
   1a4ac:	andeq	sl, r1, r8, lsr #24
   1a4b0:	andeq	sl, r1, r8, lsr #24
   1a4b4:	andeq	sl, r1, r8, lsr #24
   1a4b8:	andeq	sl, r1, r8, lsr #24
   1a4bc:	andeq	sl, r1, r8, lsr #24
   1a4c0:	andeq	sl, r1, r8, lsr #24
   1a4c4:	andeq	sl, r1, r0, lsl fp
   1a4c8:	andeq	sl, r1, r0, lsl fp
   1a4cc:	andeq	sl, r1, r0, lsl fp
   1a4d0:	andeq	sl, r1, r0, lsl fp
   1a4d4:	andeq	sl, r1, r0, ror #15
   1a4d8:	andeq	sl, r1, r4, lsr ip
   1a4dc:	andeq	sl, r1, r8, lsr #24
   1a4e0:	andeq	sl, r1, r8, lsr #24
   1a4e4:	andeq	sl, r1, r8, lsr #24
   1a4e8:	andeq	sl, r1, r8, lsr #24
   1a4ec:	andeq	sl, r1, r8, lsr #24
   1a4f0:	andeq	sl, r1, r8, lsr #24
   1a4f4:	andeq	sl, r1, r8, lsr #24
   1a4f8:	andeq	sl, r1, r8, lsr #24
   1a4fc:	andeq	sl, r1, r8, lsr #24
   1a500:	andeq	sl, r1, r8, lsr #24
   1a504:	andeq	sl, r1, r8, lsr #24
   1a508:	andeq	sl, r1, r8, lsr #24
   1a50c:	andeq	sl, r1, r8, lsr #24
   1a510:	andeq	sl, r1, r8, lsr #24
   1a514:	andeq	sl, r1, r8, lsr #24
   1a518:	andeq	sl, r1, r8, lsr #24
   1a51c:	andeq	sl, r1, r8, lsr #24
   1a520:	andeq	sl, r1, r8, lsr #24
   1a524:	andeq	sl, r1, r8, lsr #24
   1a528:	andeq	sl, r1, r8, lsr #24
   1a52c:	andeq	sl, r1, r8, lsr #24
   1a530:	andeq	sl, r1, r8, lsr #24
   1a534:	andeq	sl, r1, r8, lsr #24
   1a538:	andeq	sl, r1, r8, lsr #24
   1a53c:	andeq	sl, r1, r8, lsr #24
   1a540:	andeq	sl, r1, r8, lsr #24
   1a544:	andeq	sl, r1, r0, lsl fp
   1a548:	andeq	sl, r1, r0, lsr sl
   1a54c:	andeq	sl, r1, r8, lsr #24
   1a550:	andeq	sl, r1, r0, lsl fp
   1a554:	andeq	sl, r1, r8, lsr #24
   1a558:	andeq	sl, r1, r0, lsl fp
   1a55c:	andeq	sl, r1, r8, lsr #24
   1a560:	andeq	sl, r1, r8, lsr #24
   1a564:	andeq	sl, r1, r8, lsr #24
   1a568:	andeq	sl, r1, r8, lsr #24
   1a56c:	andeq	sl, r1, r8, lsr #24
   1a570:	andeq	sl, r1, r8, lsr #24
   1a574:	andeq	sl, r1, r8, lsr #24
   1a578:	andeq	sl, r1, r8, lsr #24
   1a57c:	andeq	sl, r1, r8, lsr #24
   1a580:	andeq	sl, r1, r8, lsr #24
   1a584:	andeq	sl, r1, r8, lsr #24
   1a588:	andeq	sl, r1, r8, lsr #24
   1a58c:	andeq	sl, r1, r8, lsr #24
   1a590:	andeq	sl, r1, r8, lsr #24
   1a594:	andeq	sl, r1, r8, lsr #24
   1a598:	andeq	sl, r1, r8, lsr #24
   1a59c:	andeq	sl, r1, r8, lsr #24
   1a5a0:	andeq	sl, r1, r8, lsr #24
   1a5a4:	andeq	sl, r1, r8, lsr #24
   1a5a8:	andeq	sl, r1, r8, lsr #24
   1a5ac:	andeq	sl, r1, r8, lsr #24
   1a5b0:	andeq	sl, r1, r8, lsr #24
   1a5b4:	andeq	sl, r1, r8, lsr #24
   1a5b8:	andeq	sl, r1, r8, lsr #24
   1a5bc:	andeq	sl, r1, r8, lsr #24
   1a5c0:	andeq	sl, r1, r8, lsr #24
   1a5c4:	andeq	sl, r1, r0, asr #21
   1a5c8:	andeq	sl, r1, r0, lsl fp
   1a5cc:	andeq	sl, r1, r0, asr #21
   1a5d0:	strdeq	sl, [r1], -r4
   1a5d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a5d8:	tst	r0, #1
   1a5dc:	beq	1a7c4 <__assert_fail@plt+0x93fc>
   1a5e0:	b	1a5e4 <__assert_fail@plt+0x921c>
   1a5e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5e8:	tst	r0, #1
   1a5ec:	beq	1a5f4 <__assert_fail@plt+0x922c>
   1a5f0:	b	1b648 <__assert_fail@plt+0xa280>
   1a5f4:	movw	r0, #1
   1a5f8:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a5fc:	ldr	r0, [fp, #8]
   1a600:	cmp	r0, #2
   1a604:	bne	1a6b8 <__assert_fail@plt+0x92f0>
   1a608:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a60c:	tst	r0, #1
   1a610:	bne	1a6b8 <__assert_fail@plt+0x92f0>
   1a614:	b	1a618 <__assert_fail@plt+0x9250>
   1a618:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a61c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a620:	cmp	r0, r1
   1a624:	bcs	1a63c <__assert_fail@plt+0x9274>
   1a628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a62c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a630:	add	r0, r0, r1
   1a634:	movw	r1, #39	; 0x27
   1a638:	strb	r1, [r0]
   1a63c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a640:	add	r0, r0, #1
   1a644:	str	r0, [fp, #-44]	; 0xffffffd4
   1a648:	b	1a64c <__assert_fail@plt+0x9284>
   1a64c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a654:	cmp	r0, r1
   1a658:	bcs	1a670 <__assert_fail@plt+0x92a8>
   1a65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a660:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a664:	add	r0, r0, r1
   1a668:	movw	r1, #36	; 0x24
   1a66c:	strb	r1, [r0]
   1a670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a674:	add	r0, r0, #1
   1a678:	str	r0, [fp, #-44]	; 0xffffffd4
   1a67c:	b	1a680 <__assert_fail@plt+0x92b8>
   1a680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a684:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a688:	cmp	r0, r1
   1a68c:	bcs	1a6a4 <__assert_fail@plt+0x92dc>
   1a690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a694:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a698:	add	r0, r0, r1
   1a69c:	movw	r1, #39	; 0x27
   1a6a0:	strb	r1, [r0]
   1a6a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6a8:	add	r0, r0, #1
   1a6ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6b0:	movw	r0, #1
   1a6b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a6b8:	b	1a6bc <__assert_fail@plt+0x92f4>
   1a6bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6c4:	cmp	r0, r1
   1a6c8:	bcs	1a6e0 <__assert_fail@plt+0x9318>
   1a6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6d4:	add	r0, r0, r1
   1a6d8:	movw	r1, #92	; 0x5c
   1a6dc:	strb	r1, [r0]
   1a6e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6e4:	add	r0, r0, #1
   1a6e8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6ec:	b	1a6f0 <__assert_fail@plt+0x9328>
   1a6f0:	ldr	r0, [fp, #8]
   1a6f4:	cmp	r0, #2
   1a6f8:	beq	1a7b8 <__assert_fail@plt+0x93f0>
   1a6fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a700:	add	r0, r0, #1
   1a704:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a708:	cmp	r0, r1
   1a70c:	bcs	1a7b8 <__assert_fail@plt+0x93f0>
   1a710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a714:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a718:	add	r1, r1, #1
   1a71c:	add	r0, r0, r1
   1a720:	ldrb	r0, [r0]
   1a724:	movw	r1, #48	; 0x30
   1a728:	cmp	r1, r0
   1a72c:	bgt	1a7b8 <__assert_fail@plt+0x93f0>
   1a730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a734:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a738:	add	r1, r1, #1
   1a73c:	add	r0, r0, r1
   1a740:	ldrb	r0, [r0]
   1a744:	cmp	r0, #57	; 0x39
   1a748:	bgt	1a7b8 <__assert_fail@plt+0x93f0>
   1a74c:	b	1a750 <__assert_fail@plt+0x9388>
   1a750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a758:	cmp	r0, r1
   1a75c:	bcs	1a774 <__assert_fail@plt+0x93ac>
   1a760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a764:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a768:	add	r0, r0, r1
   1a76c:	movw	r1, #48	; 0x30
   1a770:	strb	r1, [r0]
   1a774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a778:	add	r0, r0, #1
   1a77c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a780:	b	1a784 <__assert_fail@plt+0x93bc>
   1a784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a78c:	cmp	r0, r1
   1a790:	bcs	1a7a8 <__assert_fail@plt+0x93e0>
   1a794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a798:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a79c:	add	r0, r0, r1
   1a7a0:	movw	r1, #48	; 0x30
   1a7a4:	strb	r1, [r0]
   1a7a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7ac:	add	r0, r0, #1
   1a7b0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a7b4:	b	1a7b8 <__assert_fail@plt+0x93f0>
   1a7b8:	movw	r0, #48	; 0x30
   1a7bc:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a7c0:	b	1a7dc <__assert_fail@plt+0x9414>
   1a7c4:	ldr	r0, [fp, #12]
   1a7c8:	and	r0, r0, #1
   1a7cc:	cmp	r0, #0
   1a7d0:	beq	1a7d8 <__assert_fail@plt+0x9410>
   1a7d4:	b	1b4b8 <__assert_fail@plt+0xa0f0>
   1a7d8:	b	1a7dc <__assert_fail@plt+0x9414>
   1a7dc:	b	1b254 <__assert_fail@plt+0x9e8c>
   1a7e0:	ldr	r0, [fp, #8]
   1a7e4:	cmp	r0, #2
   1a7e8:	str	r0, [sp, #32]
   1a7ec:	beq	1a804 <__assert_fail@plt+0x943c>
   1a7f0:	b	1a7f4 <__assert_fail@plt+0x942c>
   1a7f4:	ldr	r0, [sp, #32]
   1a7f8:	cmp	r0, #5
   1a7fc:	beq	1a818 <__assert_fail@plt+0x9450>
   1a800:	b	1a9d4 <__assert_fail@plt+0x960c>
   1a804:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a808:	tst	r0, #1
   1a80c:	beq	1a814 <__assert_fail@plt+0x944c>
   1a810:	b	1b648 <__assert_fail@plt+0xa280>
   1a814:	b	1a9d8 <__assert_fail@plt+0x9610>
   1a818:	ldr	r0, [fp, #12]
   1a81c:	and	r0, r0, #4
   1a820:	cmp	r0, #0
   1a824:	beq	1a9d0 <__assert_fail@plt+0x9608>
   1a828:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a82c:	add	r0, r0, #2
   1a830:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a834:	cmp	r0, r1
   1a838:	bcs	1a9d0 <__assert_fail@plt+0x9608>
   1a83c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a840:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a844:	add	r1, r1, #1
   1a848:	add	r0, r0, r1
   1a84c:	ldrb	r0, [r0]
   1a850:	cmp	r0, #63	; 0x3f
   1a854:	bne	1a9d0 <__assert_fail@plt+0x9608>
   1a858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a85c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a860:	add	r0, r1, r0
   1a864:	ldrb	r0, [r0, #2]
   1a868:	mov	r1, r0
   1a86c:	cmp	r0, #33	; 0x21
   1a870:	str	r1, [sp, #28]
   1a874:	beq	1a8c4 <__assert_fail@plt+0x94fc>
   1a878:	b	1a87c <__assert_fail@plt+0x94b4>
   1a87c:	ldr	r0, [sp, #28]
   1a880:	sub	r1, r0, #39	; 0x27
   1a884:	cmp	r1, #3
   1a888:	bcc	1a8c4 <__assert_fail@plt+0x94fc>
   1a88c:	b	1a890 <__assert_fail@plt+0x94c8>
   1a890:	ldr	r0, [sp, #28]
   1a894:	cmp	r0, #45	; 0x2d
   1a898:	beq	1a8c4 <__assert_fail@plt+0x94fc>
   1a89c:	b	1a8a0 <__assert_fail@plt+0x94d8>
   1a8a0:	ldr	r0, [sp, #28]
   1a8a4:	cmp	r0, #47	; 0x2f
   1a8a8:	beq	1a8c4 <__assert_fail@plt+0x94fc>
   1a8ac:	b	1a8b0 <__assert_fail@plt+0x94e8>
   1a8b0:	ldr	r0, [sp, #28]
   1a8b4:	sub	r1, r0, #60	; 0x3c
   1a8b8:	cmp	r1, #2
   1a8bc:	bhi	1a9c8 <__assert_fail@plt+0x9600>
   1a8c0:	b	1a8c4 <__assert_fail@plt+0x94fc>
   1a8c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a8c8:	tst	r0, #1
   1a8cc:	beq	1a8d4 <__assert_fail@plt+0x950c>
   1a8d0:	b	1b648 <__assert_fail@plt+0xa280>
   1a8d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a8d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a8dc:	add	r1, r1, #2
   1a8e0:	add	r0, r0, r1
   1a8e4:	ldrb	r0, [r0]
   1a8e8:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a8ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8f0:	add	r0, r0, #2
   1a8f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a8f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a900:	cmp	r0, r1
   1a904:	bcs	1a91c <__assert_fail@plt+0x9554>
   1a908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a90c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a910:	add	r0, r0, r1
   1a914:	movw	r1, #63	; 0x3f
   1a918:	strb	r1, [r0]
   1a91c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a920:	add	r0, r0, #1
   1a924:	str	r0, [fp, #-44]	; 0xffffffd4
   1a928:	b	1a92c <__assert_fail@plt+0x9564>
   1a92c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a934:	cmp	r0, r1
   1a938:	bcs	1a950 <__assert_fail@plt+0x9588>
   1a93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a944:	add	r0, r0, r1
   1a948:	movw	r1, #34	; 0x22
   1a94c:	strb	r1, [r0]
   1a950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a954:	add	r0, r0, #1
   1a958:	str	r0, [fp, #-44]	; 0xffffffd4
   1a95c:	b	1a960 <__assert_fail@plt+0x9598>
   1a960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a964:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a968:	cmp	r0, r1
   1a96c:	bcs	1a984 <__assert_fail@plt+0x95bc>
   1a970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a974:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a978:	add	r0, r0, r1
   1a97c:	movw	r1, #34	; 0x22
   1a980:	strb	r1, [r0]
   1a984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a988:	add	r0, r0, #1
   1a98c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a990:	b	1a994 <__assert_fail@plt+0x95cc>
   1a994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a99c:	cmp	r0, r1
   1a9a0:	bcs	1a9b8 <__assert_fail@plt+0x95f0>
   1a9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9ac:	add	r0, r0, r1
   1a9b0:	movw	r1, #63	; 0x3f
   1a9b4:	strb	r1, [r0]
   1a9b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9bc:	add	r0, r0, #1
   1a9c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9c4:	b	1a9cc <__assert_fail@plt+0x9604>
   1a9c8:	b	1a9cc <__assert_fail@plt+0x9604>
   1a9cc:	b	1a9d0 <__assert_fail@plt+0x9608>
   1a9d0:	b	1a9d8 <__assert_fail@plt+0x9610>
   1a9d4:	b	1a9d8 <__assert_fail@plt+0x9610>
   1a9d8:	b	1b254 <__assert_fail@plt+0x9e8c>
   1a9dc:	movw	r0, #97	; 0x61
   1a9e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a9e4:	b	1aaa4 <__assert_fail@plt+0x96dc>
   1a9e8:	movw	r0, #98	; 0x62
   1a9ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a9f0:	b	1aaa4 <__assert_fail@plt+0x96dc>
   1a9f4:	movw	r0, #102	; 0x66
   1a9f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a9fc:	b	1aaa4 <__assert_fail@plt+0x96dc>
   1aa00:	movw	r0, #110	; 0x6e
   1aa04:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa08:	b	1aa84 <__assert_fail@plt+0x96bc>
   1aa0c:	movw	r0, #114	; 0x72
   1aa10:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa14:	b	1aa84 <__assert_fail@plt+0x96bc>
   1aa18:	movw	r0, #116	; 0x74
   1aa1c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa20:	b	1aa84 <__assert_fail@plt+0x96bc>
   1aa24:	movw	r0, #118	; 0x76
   1aa28:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa2c:	b	1aaa4 <__assert_fail@plt+0x96dc>
   1aa30:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa34:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa38:	ldr	r0, [fp, #8]
   1aa3c:	cmp	r0, #2
   1aa40:	bne	1aa58 <__assert_fail@plt+0x9690>
   1aa44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aa48:	tst	r0, #1
   1aa4c:	beq	1aa54 <__assert_fail@plt+0x968c>
   1aa50:	b	1b648 <__assert_fail@plt+0xa280>
   1aa54:	b	1b3dc <__assert_fail@plt+0xa014>
   1aa58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aa5c:	tst	r0, #1
   1aa60:	beq	1aa80 <__assert_fail@plt+0x96b8>
   1aa64:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aa68:	tst	r0, #1
   1aa6c:	beq	1aa80 <__assert_fail@plt+0x96b8>
   1aa70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aa74:	cmp	r0, #0
   1aa78:	beq	1aa80 <__assert_fail@plt+0x96b8>
   1aa7c:	b	1b3dc <__assert_fail@plt+0xa014>
   1aa80:	b	1aa84 <__assert_fail@plt+0x96bc>
   1aa84:	ldr	r0, [fp, #8]
   1aa88:	cmp	r0, #2
   1aa8c:	bne	1aaa0 <__assert_fail@plt+0x96d8>
   1aa90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aa94:	tst	r0, #1
   1aa98:	beq	1aaa0 <__assert_fail@plt+0x96d8>
   1aa9c:	b	1b648 <__assert_fail@plt+0xa280>
   1aaa0:	b	1aaa4 <__assert_fail@plt+0x96dc>
   1aaa4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aaa8:	tst	r0, #1
   1aaac:	beq	1aabc <__assert_fail@plt+0x96f4>
   1aab0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1aab4:	strb	r0, [fp, #-63]	; 0xffffffc1
   1aab8:	b	1b2c8 <__assert_fail@plt+0x9f00>
   1aabc:	b	1b254 <__assert_fail@plt+0x9e8c>
   1aac0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aac4:	cmn	r0, #1
   1aac8:	bne	1aae0 <__assert_fail@plt+0x9718>
   1aacc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aad0:	ldrb	r0, [r0, #1]
   1aad4:	cmp	r0, #0
   1aad8:	beq	1aaf0 <__assert_fail@plt+0x9728>
   1aadc:	b	1aaec <__assert_fail@plt+0x9724>
   1aae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aae4:	cmp	r0, #1
   1aae8:	beq	1aaf0 <__assert_fail@plt+0x9728>
   1aaec:	b	1b254 <__assert_fail@plt+0x9e8c>
   1aaf0:	b	1aaf4 <__assert_fail@plt+0x972c>
   1aaf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aaf8:	cmp	r0, #0
   1aafc:	beq	1ab04 <__assert_fail@plt+0x973c>
   1ab00:	b	1b254 <__assert_fail@plt+0x9e8c>
   1ab04:	b	1ab08 <__assert_fail@plt+0x9740>
   1ab08:	movw	r0, #1
   1ab0c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1ab10:	ldr	r0, [fp, #8]
   1ab14:	cmp	r0, #2
   1ab18:	bne	1ab2c <__assert_fail@plt+0x9764>
   1ab1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ab20:	tst	r0, #1
   1ab24:	beq	1ab2c <__assert_fail@plt+0x9764>
   1ab28:	b	1b648 <__assert_fail@plt+0xa280>
   1ab2c:	b	1b254 <__assert_fail@plt+0x9e8c>
   1ab30:	movw	r0, #1
   1ab34:	strb	r0, [fp, #-61]	; 0xffffffc3
   1ab38:	strb	r0, [fp, #-67]	; 0xffffffbd
   1ab3c:	ldr	r0, [fp, #8]
   1ab40:	cmp	r0, #2
   1ab44:	bne	1ac24 <__assert_fail@plt+0x985c>
   1ab48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ab4c:	tst	r0, #1
   1ab50:	beq	1ab58 <__assert_fail@plt+0x9790>
   1ab54:	b	1b648 <__assert_fail@plt+0xa280>
   1ab58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab5c:	cmp	r0, #0
   1ab60:	beq	1ab80 <__assert_fail@plt+0x97b8>
   1ab64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ab68:	cmp	r0, #0
   1ab6c:	bne	1ab80 <__assert_fail@plt+0x97b8>
   1ab70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab74:	str	r0, [fp, #-48]	; 0xffffffd0
   1ab78:	movw	r0, #0
   1ab7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab80:	b	1ab84 <__assert_fail@plt+0x97bc>
   1ab84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab8c:	cmp	r0, r1
   1ab90:	bcs	1aba8 <__assert_fail@plt+0x97e0>
   1ab94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab9c:	add	r0, r0, r1
   1aba0:	movw	r1, #39	; 0x27
   1aba4:	strb	r1, [r0]
   1aba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abac:	add	r0, r0, #1
   1abb0:	str	r0, [fp, #-44]	; 0xffffffd4
   1abb4:	b	1abb8 <__assert_fail@plt+0x97f0>
   1abb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abc0:	cmp	r0, r1
   1abc4:	bcs	1abdc <__assert_fail@plt+0x9814>
   1abc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1abd0:	add	r0, r0, r1
   1abd4:	movw	r1, #92	; 0x5c
   1abd8:	strb	r1, [r0]
   1abdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abe0:	add	r0, r0, #1
   1abe4:	str	r0, [fp, #-44]	; 0xffffffd4
   1abe8:	b	1abec <__assert_fail@plt+0x9824>
   1abec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abf4:	cmp	r0, r1
   1abf8:	bcs	1ac10 <__assert_fail@plt+0x9848>
   1abfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac04:	add	r0, r0, r1
   1ac08:	movw	r1, #39	; 0x27
   1ac0c:	strb	r1, [r0]
   1ac10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac14:	add	r0, r0, #1
   1ac18:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac1c:	movw	r0, #0
   1ac20:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ac24:	b	1b254 <__assert_fail@plt+0x9e8c>
   1ac28:	movw	r0, #1
   1ac2c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1ac30:	b	1b254 <__assert_fail@plt+0x9e8c>
   1ac34:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1ac38:	tst	r0, #1
   1ac3c:	beq	1ac7c <__assert_fail@plt+0x98b4>
   1ac40:	mov	r0, #1
   1ac44:	str	r0, [fp, #-72]	; 0xffffffb8
   1ac48:	bl	1123c <__ctype_b_loc@plt>
   1ac4c:	ldr	r0, [r0]
   1ac50:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1ac54:	mov	r2, r1
   1ac58:	add	r0, r0, r1, lsl #1
   1ac5c:	ldrh	r0, [r0]
   1ac60:	and	r0, r0, #16384	; 0x4000
   1ac64:	cmp	r0, #0
   1ac68:	movw	r0, #0
   1ac6c:	movne	r0, #1
   1ac70:	and	r0, r0, #1
   1ac74:	strb	r0, [fp, #-73]	; 0xffffffb7
   1ac78:	b	1af08 <__assert_fail@plt+0x9b40>
   1ac7c:	sub	r0, fp, #84	; 0x54
   1ac80:	movw	r1, #0
   1ac84:	and	r1, r1, #255	; 0xff
   1ac88:	movw	r2, #8
   1ac8c:	bl	112a8 <memset@plt>
   1ac90:	movw	r0, #0
   1ac94:	str	r0, [fp, #-72]	; 0xffffffb8
   1ac98:	movw	r0, #1
   1ac9c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1aca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aca4:	cmn	r0, #1
   1aca8:	bne	1acb8 <__assert_fail@plt+0x98f0>
   1acac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1acb0:	bl	11260 <strlen@plt>
   1acb4:	str	r0, [fp, #-36]	; 0xffffffdc
   1acb8:	b	1acbc <__assert_fail@plt+0x98f4>
   1acbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1acc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1acc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1acc8:	add	r1, r1, r2
   1accc:	add	r1, r0, r1
   1acd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1acd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1acd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1acdc:	add	r2, r2, r3
   1ace0:	sub	r2, r0, r2
   1ace4:	add	r0, sp, #88	; 0x58
   1ace8:	sub	r3, fp, #84	; 0x54
   1acec:	bl	20c6c <__assert_fail@plt+0xf8a4>
   1acf0:	str	r0, [sp, #84]	; 0x54
   1acf4:	ldr	r0, [sp, #84]	; 0x54
   1acf8:	cmp	r0, #0
   1acfc:	bne	1ad04 <__assert_fail@plt+0x993c>
   1ad00:	b	1af04 <__assert_fail@plt+0x9b3c>
   1ad04:	ldr	r0, [sp, #84]	; 0x54
   1ad08:	cmn	r0, #1
   1ad0c:	bne	1ad1c <__assert_fail@plt+0x9954>
   1ad10:	movw	r0, #0
   1ad14:	strb	r0, [fp, #-73]	; 0xffffffb7
   1ad18:	b	1af04 <__assert_fail@plt+0x9b3c>
   1ad1c:	ldr	r0, [sp, #84]	; 0x54
   1ad20:	cmn	r0, #2
   1ad24:	bne	1ad98 <__assert_fail@plt+0x99d0>
   1ad28:	movw	r0, #0
   1ad2c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1ad30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad34:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1ad38:	add	r0, r0, r1
   1ad3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad40:	cmp	r0, r1
   1ad44:	movw	r0, #0
   1ad48:	str	r0, [sp, #24]
   1ad4c:	bcs	1ad78 <__assert_fail@plt+0x99b0>
   1ad50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ad54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ad58:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ad5c:	add	r1, r1, r2
   1ad60:	add	r0, r0, r1
   1ad64:	ldrb	r0, [r0]
   1ad68:	cmp	r0, #0
   1ad6c:	movw	r0, #0
   1ad70:	movne	r0, #1
   1ad74:	str	r0, [sp, #24]
   1ad78:	ldr	r0, [sp, #24]
   1ad7c:	tst	r0, #1
   1ad80:	beq	1ad94 <__assert_fail@plt+0x99cc>
   1ad84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ad88:	add	r0, r0, #1
   1ad8c:	str	r0, [fp, #-72]	; 0xffffffb8
   1ad90:	b	1ad30 <__assert_fail@plt+0x9968>
   1ad94:	b	1af04 <__assert_fail@plt+0x9b3c>
   1ad98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ad9c:	tst	r0, #1
   1ada0:	beq	1aeac <__assert_fail@plt+0x9ae4>
   1ada4:	ldr	r0, [fp, #8]
   1ada8:	cmp	r0, #2
   1adac:	bne	1aeac <__assert_fail@plt+0x9ae4>
   1adb0:	movw	r0, #1
   1adb4:	str	r0, [sp, #80]	; 0x50
   1adb8:	ldr	r0, [sp, #80]	; 0x50
   1adbc:	ldr	r1, [sp, #84]	; 0x54
   1adc0:	cmp	r0, r1
   1adc4:	bcs	1aea8 <__assert_fail@plt+0x9ae0>
   1adc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1adcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1add0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1add4:	add	r1, r1, r2
   1add8:	ldr	r2, [sp, #80]	; 0x50
   1addc:	add	r1, r1, r2
   1ade0:	ldrb	r0, [r0, r1]
   1ade4:	sub	r0, r0, #91	; 0x5b
   1ade8:	cmp	r0, #33	; 0x21
   1adec:	str	r0, [sp, #20]
   1adf0:	bhi	1ae90 <__assert_fail@plt+0x9ac8>
   1adf4:	add	r0, pc, #8
   1adf8:	ldr	r1, [sp, #20]
   1adfc:	ldr	r0, [r0, r1, lsl #2]
   1ae00:	mov	pc, r0
   1ae04:	andeq	sl, r1, ip, lsl #29
   1ae08:	andeq	sl, r1, ip, lsl #29
   1ae0c:	muleq	r1, r0, lr
   1ae10:	andeq	sl, r1, ip, lsl #29
   1ae14:	muleq	r1, r0, lr
   1ae18:	andeq	sl, r1, ip, lsl #29
   1ae1c:	muleq	r1, r0, lr
   1ae20:	muleq	r1, r0, lr
   1ae24:	muleq	r1, r0, lr
   1ae28:	muleq	r1, r0, lr
   1ae2c:	muleq	r1, r0, lr
   1ae30:	muleq	r1, r0, lr
   1ae34:	muleq	r1, r0, lr
   1ae38:	muleq	r1, r0, lr
   1ae3c:	muleq	r1, r0, lr
   1ae40:	muleq	r1, r0, lr
   1ae44:	muleq	r1, r0, lr
   1ae48:	muleq	r1, r0, lr
   1ae4c:	muleq	r1, r0, lr
   1ae50:	muleq	r1, r0, lr
   1ae54:	muleq	r1, r0, lr
   1ae58:	muleq	r1, r0, lr
   1ae5c:	muleq	r1, r0, lr
   1ae60:	muleq	r1, r0, lr
   1ae64:	muleq	r1, r0, lr
   1ae68:	muleq	r1, r0, lr
   1ae6c:	muleq	r1, r0, lr
   1ae70:	muleq	r1, r0, lr
   1ae74:	muleq	r1, r0, lr
   1ae78:	muleq	r1, r0, lr
   1ae7c:	muleq	r1, r0, lr
   1ae80:	muleq	r1, r0, lr
   1ae84:	muleq	r1, r0, lr
   1ae88:	andeq	sl, r1, ip, lsl #29
   1ae8c:	b	1b648 <__assert_fail@plt+0xa280>
   1ae90:	b	1ae94 <__assert_fail@plt+0x9acc>
   1ae94:	b	1ae98 <__assert_fail@plt+0x9ad0>
   1ae98:	ldr	r0, [sp, #80]	; 0x50
   1ae9c:	add	r0, r0, #1
   1aea0:	str	r0, [sp, #80]	; 0x50
   1aea4:	b	1adb8 <__assert_fail@plt+0x99f0>
   1aea8:	b	1aeac <__assert_fail@plt+0x9ae4>
   1aeac:	ldr	r0, [sp, #88]	; 0x58
   1aeb0:	bl	11194 <iswprint@plt>
   1aeb4:	cmp	r0, #0
   1aeb8:	bne	1aec4 <__assert_fail@plt+0x9afc>
   1aebc:	movw	r0, #0
   1aec0:	strb	r0, [fp, #-73]	; 0xffffffb7
   1aec4:	ldr	r0, [sp, #84]	; 0x54
   1aec8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1aecc:	add	r0, r1, r0
   1aed0:	str	r0, [fp, #-72]	; 0xffffffb8
   1aed4:	b	1aed8 <__assert_fail@plt+0x9b10>
   1aed8:	b	1aedc <__assert_fail@plt+0x9b14>
   1aedc:	b	1aee0 <__assert_fail@plt+0x9b18>
   1aee0:	sub	r0, fp, #84	; 0x54
   1aee4:	bl	11158 <mbsinit@plt>
   1aee8:	cmp	r0, #0
   1aeec:	movw	r0, #0
   1aef0:	movne	r0, #1
   1aef4:	mvn	r1, #0
   1aef8:	eor	r0, r0, r1
   1aefc:	tst	r0, #1
   1af00:	bne	1acbc <__assert_fail@plt+0x98f4>
   1af04:	b	1af08 <__assert_fail@plt+0x9b40>
   1af08:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1af0c:	and	r0, r0, #1
   1af10:	strb	r0, [fp, #-67]	; 0xffffffbd
   1af14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1af18:	movw	r1, #1
   1af1c:	cmp	r1, r0
   1af20:	bcc	1af3c <__assert_fail@plt+0x9b74>
   1af24:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1af28:	tst	r0, #1
   1af2c:	beq	1b250 <__assert_fail@plt+0x9e88>
   1af30:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1af34:	tst	r0, #1
   1af38:	bne	1b250 <__assert_fail@plt+0x9e88>
   1af3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1af40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1af44:	add	r0, r0, r1
   1af48:	str	r0, [sp, #76]	; 0x4c
   1af4c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1af50:	tst	r0, #1
   1af54:	beq	1b104 <__assert_fail@plt+0x9d3c>
   1af58:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1af5c:	tst	r0, #1
   1af60:	bne	1b104 <__assert_fail@plt+0x9d3c>
   1af64:	b	1af68 <__assert_fail@plt+0x9ba0>
   1af68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1af6c:	tst	r0, #1
   1af70:	beq	1af78 <__assert_fail@plt+0x9bb0>
   1af74:	b	1b648 <__assert_fail@plt+0xa280>
   1af78:	movw	r0, #1
   1af7c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1af80:	ldr	r0, [fp, #8]
   1af84:	cmp	r0, #2
   1af88:	bne	1b03c <__assert_fail@plt+0x9c74>
   1af8c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1af90:	tst	r0, #1
   1af94:	bne	1b03c <__assert_fail@plt+0x9c74>
   1af98:	b	1af9c <__assert_fail@plt+0x9bd4>
   1af9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afa4:	cmp	r0, r1
   1afa8:	bcs	1afc0 <__assert_fail@plt+0x9bf8>
   1afac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afb4:	add	r0, r0, r1
   1afb8:	movw	r1, #39	; 0x27
   1afbc:	strb	r1, [r0]
   1afc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afc4:	add	r0, r0, #1
   1afc8:	str	r0, [fp, #-44]	; 0xffffffd4
   1afcc:	b	1afd0 <__assert_fail@plt+0x9c08>
   1afd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afd8:	cmp	r0, r1
   1afdc:	bcs	1aff4 <__assert_fail@plt+0x9c2c>
   1afe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afe4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1afe8:	add	r0, r0, r1
   1afec:	movw	r1, #36	; 0x24
   1aff0:	strb	r1, [r0]
   1aff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aff8:	add	r0, r0, #1
   1affc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b000:	b	1b004 <__assert_fail@plt+0x9c3c>
   1b004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b00c:	cmp	r0, r1
   1b010:	bcs	1b028 <__assert_fail@plt+0x9c60>
   1b014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b01c:	add	r0, r0, r1
   1b020:	movw	r1, #39	; 0x27
   1b024:	strb	r1, [r0]
   1b028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b02c:	add	r0, r0, #1
   1b030:	str	r0, [fp, #-44]	; 0xffffffd4
   1b034:	movw	r0, #1
   1b038:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b03c:	b	1b040 <__assert_fail@plt+0x9c78>
   1b040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b048:	cmp	r0, r1
   1b04c:	bcs	1b064 <__assert_fail@plt+0x9c9c>
   1b050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b054:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b058:	add	r0, r0, r1
   1b05c:	movw	r1, #92	; 0x5c
   1b060:	strb	r1, [r0]
   1b064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b068:	add	r0, r0, #1
   1b06c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b070:	b	1b074 <__assert_fail@plt+0x9cac>
   1b074:	b	1b078 <__assert_fail@plt+0x9cb0>
   1b078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b07c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b080:	cmp	r0, r1
   1b084:	bcs	1b0a4 <__assert_fail@plt+0x9cdc>
   1b088:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b08c:	asr	r0, r0, #6
   1b090:	add	r0, r0, #48	; 0x30
   1b094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b098:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b09c:	add	r1, r1, r2
   1b0a0:	strb	r0, [r1]
   1b0a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0a8:	add	r0, r0, #1
   1b0ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0b0:	b	1b0b4 <__assert_fail@plt+0x9cec>
   1b0b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0bc:	cmp	r0, r1
   1b0c0:	bcs	1b0e4 <__assert_fail@plt+0x9d1c>
   1b0c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b0c8:	asr	r0, r0, #3
   1b0cc:	and	r0, r0, #7
   1b0d0:	add	r0, r0, #48	; 0x30
   1b0d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b0d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b0dc:	add	r1, r1, r2
   1b0e0:	strb	r0, [r1]
   1b0e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0e8:	add	r0, r0, #1
   1b0ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b0f4:	and	r0, r0, #7
   1b0f8:	add	r0, r0, #48	; 0x30
   1b0fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   1b100:	b	1b150 <__assert_fail@plt+0x9d88>
   1b104:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1b108:	tst	r0, #1
   1b10c:	beq	1b14c <__assert_fail@plt+0x9d84>
   1b110:	b	1b114 <__assert_fail@plt+0x9d4c>
   1b114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b11c:	cmp	r0, r1
   1b120:	bcs	1b138 <__assert_fail@plt+0x9d70>
   1b124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b12c:	add	r0, r0, r1
   1b130:	movw	r1, #92	; 0x5c
   1b134:	strb	r1, [r0]
   1b138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b13c:	add	r0, r0, #1
   1b140:	str	r0, [fp, #-44]	; 0xffffffd4
   1b144:	movw	r0, #0
   1b148:	strb	r0, [fp, #-65]	; 0xffffffbf
   1b14c:	b	1b150 <__assert_fail@plt+0x9d88>
   1b150:	ldr	r0, [sp, #76]	; 0x4c
   1b154:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b158:	add	r1, r1, #1
   1b15c:	cmp	r0, r1
   1b160:	bhi	1b168 <__assert_fail@plt+0x9da0>
   1b164:	b	1b24c <__assert_fail@plt+0x9e84>
   1b168:	b	1b16c <__assert_fail@plt+0x9da4>
   1b16c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b170:	tst	r0, #1
   1b174:	beq	1b1f4 <__assert_fail@plt+0x9e2c>
   1b178:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1b17c:	tst	r0, #1
   1b180:	bne	1b1f4 <__assert_fail@plt+0x9e2c>
   1b184:	b	1b188 <__assert_fail@plt+0x9dc0>
   1b188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b18c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b190:	cmp	r0, r1
   1b194:	bcs	1b1ac <__assert_fail@plt+0x9de4>
   1b198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b19c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b1a0:	add	r0, r0, r1
   1b1a4:	movw	r1, #39	; 0x27
   1b1a8:	strb	r1, [r0]
   1b1ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1b0:	add	r0, r0, #1
   1b1b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b1b8:	b	1b1bc <__assert_fail@plt+0x9df4>
   1b1bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b1c4:	cmp	r0, r1
   1b1c8:	bcs	1b1e0 <__assert_fail@plt+0x9e18>
   1b1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b1d4:	add	r0, r0, r1
   1b1d8:	movw	r1, #39	; 0x27
   1b1dc:	strb	r1, [r0]
   1b1e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1e4:	add	r0, r0, #1
   1b1e8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b1ec:	movw	r0, #0
   1b1f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b1f4:	b	1b1f8 <__assert_fail@plt+0x9e30>
   1b1f8:	b	1b1fc <__assert_fail@plt+0x9e34>
   1b1fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b200:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b204:	cmp	r0, r1
   1b208:	bcs	1b220 <__assert_fail@plt+0x9e58>
   1b20c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b214:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b218:	add	r1, r1, r2
   1b21c:	strb	r0, [r1]
   1b220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b224:	add	r0, r0, #1
   1b228:	str	r0, [fp, #-44]	; 0xffffffd4
   1b22c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b230:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b234:	add	r1, r1, #1
   1b238:	str	r1, [fp, #-40]	; 0xffffffd8
   1b23c:	add	r0, r0, r1
   1b240:	ldrb	r0, [r0]
   1b244:	strb	r0, [fp, #-63]	; 0xffffffc1
   1b248:	b	1af4c <__assert_fail@plt+0x9b84>
   1b24c:	b	1b3dc <__assert_fail@plt+0xa014>
   1b250:	b	1b254 <__assert_fail@plt+0x9e8c>
   1b254:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1b258:	tst	r0, #1
   1b25c:	beq	1b26c <__assert_fail@plt+0x9ea4>
   1b260:	ldr	r0, [fp, #8]
   1b264:	cmp	r0, #2
   1b268:	bne	1b278 <__assert_fail@plt+0x9eb0>
   1b26c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b270:	tst	r0, #1
   1b274:	beq	1b2b4 <__assert_fail@plt+0x9eec>
   1b278:	ldr	r0, [fp, #16]
   1b27c:	movw	r1, #0
   1b280:	cmp	r0, r1
   1b284:	beq	1b2b4 <__assert_fail@plt+0x9eec>
   1b288:	ldr	r0, [fp, #16]
   1b28c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1b290:	lsr	r1, r1, #5
   1b294:	add	r0, r0, r1, lsl #2
   1b298:	ldr	r0, [r0]
   1b29c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1b2a0:	and	r1, r1, #31
   1b2a4:	lsr	r0, r0, r1
   1b2a8:	and	r0, r0, #1
   1b2ac:	cmp	r0, #0
   1b2b0:	bne	1b2c4 <__assert_fail@plt+0x9efc>
   1b2b4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1b2b8:	tst	r0, #1
   1b2bc:	bne	1b2c4 <__assert_fail@plt+0x9efc>
   1b2c0:	b	1b3dc <__assert_fail@plt+0xa014>
   1b2c4:	b	1b2c8 <__assert_fail@plt+0x9f00>
   1b2c8:	b	1b2cc <__assert_fail@plt+0x9f04>
   1b2cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b2d0:	tst	r0, #1
   1b2d4:	beq	1b2dc <__assert_fail@plt+0x9f14>
   1b2d8:	b	1b648 <__assert_fail@plt+0xa280>
   1b2dc:	movw	r0, #1
   1b2e0:	strb	r0, [fp, #-66]	; 0xffffffbe
   1b2e4:	ldr	r0, [fp, #8]
   1b2e8:	cmp	r0, #2
   1b2ec:	bne	1b3a0 <__assert_fail@plt+0x9fd8>
   1b2f0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b2f4:	tst	r0, #1
   1b2f8:	bne	1b3a0 <__assert_fail@plt+0x9fd8>
   1b2fc:	b	1b300 <__assert_fail@plt+0x9f38>
   1b300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b308:	cmp	r0, r1
   1b30c:	bcs	1b324 <__assert_fail@plt+0x9f5c>
   1b310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b314:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b318:	add	r0, r0, r1
   1b31c:	movw	r1, #39	; 0x27
   1b320:	strb	r1, [r0]
   1b324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b328:	add	r0, r0, #1
   1b32c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b330:	b	1b334 <__assert_fail@plt+0x9f6c>
   1b334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b338:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b33c:	cmp	r0, r1
   1b340:	bcs	1b358 <__assert_fail@plt+0x9f90>
   1b344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b348:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b34c:	add	r0, r0, r1
   1b350:	movw	r1, #36	; 0x24
   1b354:	strb	r1, [r0]
   1b358:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b35c:	add	r0, r0, #1
   1b360:	str	r0, [fp, #-44]	; 0xffffffd4
   1b364:	b	1b368 <__assert_fail@plt+0x9fa0>
   1b368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b36c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b370:	cmp	r0, r1
   1b374:	bcs	1b38c <__assert_fail@plt+0x9fc4>
   1b378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b37c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b380:	add	r0, r0, r1
   1b384:	movw	r1, #39	; 0x27
   1b388:	strb	r1, [r0]
   1b38c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b390:	add	r0, r0, #1
   1b394:	str	r0, [fp, #-44]	; 0xffffffd4
   1b398:	movw	r0, #1
   1b39c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b3a0:	b	1b3a4 <__assert_fail@plt+0x9fdc>
   1b3a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b3ac:	cmp	r0, r1
   1b3b0:	bcs	1b3c8 <__assert_fail@plt+0xa000>
   1b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b3bc:	add	r0, r0, r1
   1b3c0:	movw	r1, #92	; 0x5c
   1b3c4:	strb	r1, [r0]
   1b3c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3cc:	add	r0, r0, #1
   1b3d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3d4:	b	1b3d8 <__assert_fail@plt+0xa010>
   1b3d8:	b	1b3dc <__assert_fail@plt+0xa014>
   1b3dc:	b	1b3e0 <__assert_fail@plt+0xa018>
   1b3e0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b3e4:	tst	r0, #1
   1b3e8:	beq	1b468 <__assert_fail@plt+0xa0a0>
   1b3ec:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1b3f0:	tst	r0, #1
   1b3f4:	bne	1b468 <__assert_fail@plt+0xa0a0>
   1b3f8:	b	1b3fc <__assert_fail@plt+0xa034>
   1b3fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b404:	cmp	r0, r1
   1b408:	bcs	1b420 <__assert_fail@plt+0xa058>
   1b40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b410:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b414:	add	r0, r0, r1
   1b418:	movw	r1, #39	; 0x27
   1b41c:	strb	r1, [r0]
   1b420:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b424:	add	r0, r0, #1
   1b428:	str	r0, [fp, #-44]	; 0xffffffd4
   1b42c:	b	1b430 <__assert_fail@plt+0xa068>
   1b430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b438:	cmp	r0, r1
   1b43c:	bcs	1b454 <__assert_fail@plt+0xa08c>
   1b440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b448:	add	r0, r0, r1
   1b44c:	movw	r1, #39	; 0x27
   1b450:	strb	r1, [r0]
   1b454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b458:	add	r0, r0, #1
   1b45c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b460:	movw	r0, #0
   1b464:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b468:	b	1b46c <__assert_fail@plt+0xa0a4>
   1b46c:	b	1b470 <__assert_fail@plt+0xa0a8>
   1b470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b474:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b478:	cmp	r0, r1
   1b47c:	bcs	1b494 <__assert_fail@plt+0xa0cc>
   1b480:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b488:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b48c:	add	r1, r1, r2
   1b490:	strb	r0, [r1]
   1b494:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b498:	add	r0, r0, #1
   1b49c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b4a0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1b4a4:	tst	r0, #1
   1b4a8:	bne	1b4b4 <__assert_fail@plt+0xa0ec>
   1b4ac:	movw	r0, #0
   1b4b0:	strb	r0, [fp, #-62]	; 0xffffffc2
   1b4b4:	b	1b4b8 <__assert_fail@plt+0xa0f0>
   1b4b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b4bc:	add	r0, r0, #1
   1b4c0:	str	r0, [fp, #-40]	; 0xffffffd8
   1b4c4:	b	1a270 <__assert_fail@plt+0x8ea8>
   1b4c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4cc:	cmp	r0, #0
   1b4d0:	bne	1b4f0 <__assert_fail@plt+0xa128>
   1b4d4:	ldr	r0, [fp, #8]
   1b4d8:	cmp	r0, #2
   1b4dc:	bne	1b4f0 <__assert_fail@plt+0xa128>
   1b4e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b4e4:	tst	r0, #1
   1b4e8:	beq	1b4f0 <__assert_fail@plt+0xa128>
   1b4ec:	b	1b648 <__assert_fail@plt+0xa280>
   1b4f0:	ldr	r0, [fp, #8]
   1b4f4:	cmp	r0, #2
   1b4f8:	bne	1b598 <__assert_fail@plt+0xa1d0>
   1b4fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b500:	tst	r0, #1
   1b504:	bne	1b598 <__assert_fail@plt+0xa1d0>
   1b508:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1b50c:	tst	r0, #1
   1b510:	beq	1b598 <__assert_fail@plt+0xa1d0>
   1b514:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1b518:	tst	r0, #1
   1b51c:	beq	1b564 <__assert_fail@plt+0xa19c>
   1b520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b524:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b528:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b52c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b530:	ldr	ip, [fp, #12]
   1b534:	ldr	lr, [fp, #16]
   1b538:	ldr	r4, [fp, #20]
   1b53c:	ldr	r5, [fp, #24]
   1b540:	movw	r6, #5
   1b544:	str	r6, [sp]
   1b548:	str	ip, [sp, #4]
   1b54c:	str	lr, [sp, #8]
   1b550:	str	r4, [sp, #12]
   1b554:	str	r5, [sp, #16]
   1b558:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1b55c:	str	r0, [fp, #-20]	; 0xffffffec
   1b560:	b	1b6b0 <__assert_fail@plt+0xa2e8>
   1b564:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b568:	cmp	r0, #0
   1b56c:	bne	1b590 <__assert_fail@plt+0xa1c8>
   1b570:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b574:	cmp	r0, #0
   1b578:	beq	1b590 <__assert_fail@plt+0xa1c8>
   1b57c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b580:	str	r0, [fp, #-28]	; 0xffffffe4
   1b584:	movw	r0, #0
   1b588:	str	r0, [fp, #-44]	; 0xffffffd4
   1b58c:	b	1a030 <__assert_fail@plt+0x8c68>
   1b590:	b	1b594 <__assert_fail@plt+0xa1cc>
   1b594:	b	1b598 <__assert_fail@plt+0xa1d0>
   1b598:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b59c:	movw	r1, #0
   1b5a0:	cmp	r0, r1
   1b5a4:	beq	1b618 <__assert_fail@plt+0xa250>
   1b5a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b5ac:	tst	r0, #1
   1b5b0:	bne	1b618 <__assert_fail@plt+0xa250>
   1b5b4:	b	1b5b8 <__assert_fail@plt+0xa1f0>
   1b5b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b5bc:	ldrsb	r0, [r0]
   1b5c0:	cmp	r0, #0
   1b5c4:	beq	1b614 <__assert_fail@plt+0xa24c>
   1b5c8:	b	1b5cc <__assert_fail@plt+0xa204>
   1b5cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b5d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b5d4:	cmp	r0, r1
   1b5d8:	bcs	1b5f4 <__assert_fail@plt+0xa22c>
   1b5dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b5e0:	ldrb	r0, [r0]
   1b5e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b5e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b5ec:	add	r1, r1, r2
   1b5f0:	strb	r0, [r1]
   1b5f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b5f8:	add	r0, r0, #1
   1b5fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b600:	b	1b604 <__assert_fail@plt+0xa23c>
   1b604:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b608:	add	r0, r0, #1
   1b60c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b610:	b	1b5b8 <__assert_fail@plt+0xa1f0>
   1b614:	b	1b618 <__assert_fail@plt+0xa250>
   1b618:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b61c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b620:	cmp	r0, r1
   1b624:	bcs	1b63c <__assert_fail@plt+0xa274>
   1b628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b62c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b630:	add	r0, r0, r1
   1b634:	movw	r1, #0
   1b638:	strb	r1, [r0]
   1b63c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b640:	str	r0, [fp, #-20]	; 0xffffffec
   1b644:	b	1b6b0 <__assert_fail@plt+0xa2e8>
   1b648:	ldr	r0, [fp, #8]
   1b64c:	cmp	r0, #2
   1b650:	bne	1b668 <__assert_fail@plt+0xa2a0>
   1b654:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1b658:	tst	r0, #1
   1b65c:	beq	1b668 <__assert_fail@plt+0xa2a0>
   1b660:	movw	r0, #4
   1b664:	str	r0, [fp, #8]
   1b668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b66c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b670:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b678:	ldr	ip, [fp, #8]
   1b67c:	ldr	lr, [fp, #12]
   1b680:	mvn	r4, #2
   1b684:	and	lr, lr, r4
   1b688:	ldr	r4, [fp, #20]
   1b68c:	ldr	r5, [fp, #24]
   1b690:	str	ip, [sp]
   1b694:	str	lr, [sp, #4]
   1b698:	movw	ip, #0
   1b69c:	str	ip, [sp, #8]
   1b6a0:	str	r4, [sp, #12]
   1b6a4:	str	r5, [sp, #16]
   1b6a8:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1b6ac:	str	r0, [fp, #-20]	; 0xffffffec
   1b6b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6b4:	sub	sp, fp, #16
   1b6b8:	pop	{r4, r5, r6, sl, fp, pc}
   1b6bc:	push	{fp, lr}
   1b6c0:	mov	fp, sp
   1b6c4:	sub	sp, sp, #16
   1b6c8:	str	r0, [fp, #-4]
   1b6cc:	str	r1, [sp, #8]
   1b6d0:	str	r2, [sp, #4]
   1b6d4:	ldr	r0, [fp, #-4]
   1b6d8:	ldr	r1, [sp, #8]
   1b6dc:	ldr	r3, [sp, #4]
   1b6e0:	movw	r2, #0
   1b6e4:	bl	1b6f0 <__assert_fail@plt+0xa328>
   1b6e8:	mov	sp, fp
   1b6ec:	pop	{fp, pc}
   1b6f0:	push	{r4, r5, r6, sl, fp, lr}
   1b6f4:	add	fp, sp, #16
   1b6f8:	sub	sp, sp, #80	; 0x50
   1b6fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b700:	str	r1, [fp, #-24]	; 0xffffffe8
   1b704:	str	r2, [fp, #-28]	; 0xffffffe4
   1b708:	str	r3, [fp, #-32]	; 0xffffffe0
   1b70c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b710:	movw	r1, #0
   1b714:	cmp	r0, r1
   1b718:	beq	1b728 <__assert_fail@plt+0xa360>
   1b71c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b720:	str	r0, [sp, #40]	; 0x28
   1b724:	b	1b738 <__assert_fail@plt+0xa370>
   1b728:	movw	r0, #16824	; 0x41b8
   1b72c:	movt	r0, #3
   1b730:	str	r0, [sp, #40]	; 0x28
   1b734:	b	1b738 <__assert_fail@plt+0xa370>
   1b738:	ldr	r0, [sp, #40]	; 0x28
   1b73c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b740:	bl	11290 <__errno_location@plt>
   1b744:	ldr	r0, [r0]
   1b748:	str	r0, [fp, #-40]	; 0xffffffd8
   1b74c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b750:	ldr	r0, [r0, #4]
   1b754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b758:	movw	r2, #0
   1b75c:	cmp	r1, r2
   1b760:	movw	r1, #0
   1b764:	movne	r1, #1
   1b768:	tst	r1, #1
   1b76c:	mov	r1, r2
   1b770:	moveq	r1, #1
   1b774:	orr	r0, r0, r1
   1b778:	str	r0, [fp, #-44]	; 0xffffffd4
   1b77c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b784:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b788:	ldr	r1, [r1]
   1b78c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1b790:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b794:	add	lr, lr, #8
   1b798:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b79c:	ldr	r4, [r4, #40]	; 0x28
   1b7a0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b7a4:	ldr	r5, [r5, #44]	; 0x2c
   1b7a8:	str	r0, [sp, #36]	; 0x24
   1b7ac:	mov	r0, r2
   1b7b0:	str	r1, [sp, #32]
   1b7b4:	mov	r1, r2
   1b7b8:	ldr	r2, [sp, #36]	; 0x24
   1b7bc:	ldr	r6, [sp, #32]
   1b7c0:	str	r6, [sp]
   1b7c4:	str	ip, [sp, #4]
   1b7c8:	str	lr, [sp, #8]
   1b7cc:	str	r4, [sp, #12]
   1b7d0:	str	r5, [sp, #16]
   1b7d4:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1b7d8:	add	r0, r0, #1
   1b7dc:	str	r0, [sp, #48]	; 0x30
   1b7e0:	ldr	r0, [sp, #48]	; 0x30
   1b7e4:	bl	1ccbc <__assert_fail@plt+0xb8f4>
   1b7e8:	str	r0, [sp, #44]	; 0x2c
   1b7ec:	ldr	r0, [sp, #44]	; 0x2c
   1b7f0:	ldr	r1, [sp, #48]	; 0x30
   1b7f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7fc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b800:	ldr	ip, [ip]
   1b804:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1b808:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b80c:	add	r4, r4, #8
   1b810:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b814:	ldr	r5, [r5, #40]	; 0x28
   1b818:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b81c:	ldr	r6, [r6, #44]	; 0x2c
   1b820:	str	ip, [sp]
   1b824:	str	lr, [sp, #4]
   1b828:	str	r4, [sp, #8]
   1b82c:	str	r5, [sp, #12]
   1b830:	str	r6, [sp, #16]
   1b834:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1b838:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b83c:	str	r0, [sp, #28]
   1b840:	str	r1, [sp, #24]
   1b844:	bl	11290 <__errno_location@plt>
   1b848:	ldr	r1, [sp, #24]
   1b84c:	str	r1, [r0]
   1b850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b854:	movw	r2, #0
   1b858:	cmp	r0, r2
   1b85c:	beq	1b870 <__assert_fail@plt+0xa4a8>
   1b860:	ldr	r0, [sp, #48]	; 0x30
   1b864:	sub	r0, r0, #1
   1b868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b86c:	str	r0, [r1]
   1b870:	ldr	r0, [sp, #44]	; 0x2c
   1b874:	sub	sp, fp, #16
   1b878:	pop	{r4, r5, r6, sl, fp, pc}
   1b87c:	push	{fp, lr}
   1b880:	mov	fp, sp
   1b884:	sub	sp, sp, #8
   1b888:	movw	r0, #16676	; 0x4124
   1b88c:	movt	r0, #3
   1b890:	ldr	r0, [r0]
   1b894:	str	r0, [sp, #4]
   1b898:	movw	r0, #1
   1b89c:	str	r0, [sp]
   1b8a0:	ldr	r0, [sp]
   1b8a4:	movw	r1, #16680	; 0x4128
   1b8a8:	movt	r1, #3
   1b8ac:	ldr	r1, [r1]
   1b8b0:	cmp	r0, r1
   1b8b4:	bge	1b8dc <__assert_fail@plt+0xa514>
   1b8b8:	ldr	r0, [sp, #4]
   1b8bc:	ldr	r1, [sp]
   1b8c0:	add	r0, r0, r1, lsl #3
   1b8c4:	ldr	r0, [r0, #4]
   1b8c8:	bl	208f4 <__assert_fail@plt+0xf52c>
   1b8cc:	ldr	r0, [sp]
   1b8d0:	add	r0, r0, #1
   1b8d4:	str	r0, [sp]
   1b8d8:	b	1b8a0 <__assert_fail@plt+0xa4d8>
   1b8dc:	ldr	r0, [sp, #4]
   1b8e0:	ldr	r0, [r0, #4]
   1b8e4:	movw	r1, #16872	; 0x41e8
   1b8e8:	movt	r1, #3
   1b8ec:	cmp	r0, r1
   1b8f0:	beq	1b91c <__assert_fail@plt+0xa554>
   1b8f4:	ldr	r0, [sp, #4]
   1b8f8:	ldr	r0, [r0, #4]
   1b8fc:	bl	208f4 <__assert_fail@plt+0xf52c>
   1b900:	movw	r0, #256	; 0x100
   1b904:	movw	r1, #16684	; 0x412c
   1b908:	movt	r1, #3
   1b90c:	str	r0, [r1]
   1b910:	movw	r0, #16872	; 0x41e8
   1b914:	movt	r0, #3
   1b918:	str	r0, [r1, #4]
   1b91c:	ldr	r0, [sp, #4]
   1b920:	movw	r1, #16684	; 0x412c
   1b924:	movt	r1, #3
   1b928:	cmp	r0, r1
   1b92c:	beq	1b94c <__assert_fail@plt+0xa584>
   1b930:	ldr	r0, [sp, #4]
   1b934:	bl	208f4 <__assert_fail@plt+0xf52c>
   1b938:	movw	r0, #16676	; 0x4124
   1b93c:	movt	r0, #3
   1b940:	movw	r1, #16684	; 0x412c
   1b944:	movt	r1, #3
   1b948:	str	r1, [r0]
   1b94c:	movw	r0, #16680	; 0x4128
   1b950:	movt	r0, #3
   1b954:	movw	r1, #1
   1b958:	str	r1, [r0]
   1b95c:	mov	sp, fp
   1b960:	pop	{fp, pc}
   1b964:	push	{fp, lr}
   1b968:	mov	fp, sp
   1b96c:	sub	sp, sp, #8
   1b970:	str	r0, [sp, #4]
   1b974:	str	r1, [sp]
   1b978:	ldr	r0, [sp, #4]
   1b97c:	ldr	r1, [sp]
   1b980:	mvn	r2, #0
   1b984:	movw	r3, #16824	; 0x41b8
   1b988:	movt	r3, #3
   1b98c:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1b990:	mov	sp, fp
   1b994:	pop	{fp, pc}
   1b998:	push	{r4, r5, r6, sl, fp, lr}
   1b99c:	add	fp, sp, #16
   1b9a0:	sub	sp, sp, #80	; 0x50
   1b9a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b9a8:	str	r1, [fp, #-24]	; 0xffffffe8
   1b9ac:	str	r2, [fp, #-28]	; 0xffffffe4
   1b9b0:	str	r3, [fp, #-32]	; 0xffffffe0
   1b9b4:	bl	11290 <__errno_location@plt>
   1b9b8:	ldr	r1, [pc, #672]	; 1bc60 <__assert_fail@plt+0xa898>
   1b9bc:	ldr	r0, [r0]
   1b9c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b9c4:	movw	r0, #16676	; 0x4124
   1b9c8:	movt	r0, #3
   1b9cc:	ldr	r0, [r0]
   1b9d0:	str	r0, [fp, #-40]	; 0xffffffd8
   1b9d4:	str	r1, [fp, #-44]	; 0xffffffd4
   1b9d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b9dc:	movw	r1, #0
   1b9e0:	cmp	r1, r0
   1b9e4:	bgt	1b9f8 <__assert_fail@plt+0xa630>
   1b9e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b9ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b9f0:	cmp	r0, r1
   1b9f4:	blt	1b9fc <__assert_fail@plt+0xa634>
   1b9f8:	bl	11398 <abort@plt>
   1b9fc:	movw	r0, #16680	; 0x4128
   1ba00:	movt	r0, #3
   1ba04:	ldr	r0, [r0]
   1ba08:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba0c:	cmp	r0, r1
   1ba10:	bgt	1bb08 <__assert_fail@plt+0xa740>
   1ba14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba18:	movw	r1, #16684	; 0x412c
   1ba1c:	movt	r1, #3
   1ba20:	cmp	r0, r1
   1ba24:	movw	r0, #0
   1ba28:	moveq	r0, #1
   1ba2c:	and	r0, r0, #1
   1ba30:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ba34:	movw	r0, #16680	; 0x4128
   1ba38:	movt	r0, #3
   1ba3c:	ldr	r0, [r0]
   1ba40:	str	r0, [sp, #44]	; 0x2c
   1ba44:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ba48:	tst	r0, #1
   1ba4c:	beq	1ba5c <__assert_fail@plt+0xa694>
   1ba50:	movw	r0, #0
   1ba54:	str	r0, [sp, #24]
   1ba58:	b	1ba64 <__assert_fail@plt+0xa69c>
   1ba5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba60:	str	r0, [sp, #24]
   1ba64:	ldr	r0, [sp, #24]
   1ba68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba6c:	movw	r2, #16680	; 0x4128
   1ba70:	movt	r2, #3
   1ba74:	ldr	r2, [r2]
   1ba78:	sub	r1, r1, r2
   1ba7c:	add	r2, r1, #1
   1ba80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba84:	add	r1, sp, #44	; 0x2c
   1ba88:	movw	ip, #8
   1ba8c:	str	ip, [sp]
   1ba90:	bl	1cef8 <__assert_fail@plt+0xbb30>
   1ba94:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba98:	movw	r1, #16676	; 0x4124
   1ba9c:	movt	r1, #3
   1baa0:	str	r0, [r1]
   1baa4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1baa8:	tst	r0, #1
   1baac:	beq	1bacc <__assert_fail@plt+0xa704>
   1bab0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bab4:	movw	r1, #16684	; 0x412c
   1bab8:	movt	r1, #3
   1babc:	ldr	r2, [r1]
   1bac0:	str	r2, [r0]
   1bac4:	ldr	r1, [r1, #4]
   1bac8:	str	r1, [r0, #4]
   1bacc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bad0:	movw	r1, #16680	; 0x4128
   1bad4:	movt	r1, #3
   1bad8:	ldr	r1, [r1]
   1badc:	add	r0, r0, r1, lsl #3
   1bae0:	ldr	r2, [sp, #44]	; 0x2c
   1bae4:	sub	r1, r2, r1
   1bae8:	lsl	r2, r1, #3
   1baec:	movw	r1, #0
   1baf0:	and	r1, r1, #255	; 0xff
   1baf4:	bl	112a8 <memset@plt>
   1baf8:	ldr	r0, [sp, #44]	; 0x2c
   1bafc:	movw	r1, #16680	; 0x4128
   1bb00:	movt	r1, #3
   1bb04:	str	r0, [r1]
   1bb08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb10:	ldr	r0, [r0, r1, lsl #3]
   1bb14:	str	r0, [sp, #40]	; 0x28
   1bb18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb20:	add	r0, r0, r1, lsl #3
   1bb24:	ldr	r0, [r0, #4]
   1bb28:	str	r0, [sp, #36]	; 0x24
   1bb2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb30:	ldr	r0, [r0, #4]
   1bb34:	orr	r0, r0, #1
   1bb38:	str	r0, [sp, #32]
   1bb3c:	ldr	r0, [sp, #36]	; 0x24
   1bb40:	ldr	r1, [sp, #40]	; 0x28
   1bb44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bb48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb4c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1bb50:	ldr	ip, [ip]
   1bb54:	ldr	lr, [sp, #32]
   1bb58:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1bb5c:	add	r4, r4, #8
   1bb60:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1bb64:	ldr	r5, [r5, #40]	; 0x28
   1bb68:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1bb6c:	ldr	r6, [r6, #44]	; 0x2c
   1bb70:	str	ip, [sp]
   1bb74:	str	lr, [sp, #4]
   1bb78:	str	r4, [sp, #8]
   1bb7c:	str	r5, [sp, #12]
   1bb80:	str	r6, [sp, #16]
   1bb84:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1bb88:	str	r0, [sp, #28]
   1bb8c:	ldr	r0, [sp, #40]	; 0x28
   1bb90:	ldr	r1, [sp, #28]
   1bb94:	cmp	r0, r1
   1bb98:	bhi	1bc40 <__assert_fail@plt+0xa878>
   1bb9c:	ldr	r0, [sp, #28]
   1bba0:	add	r0, r0, #1
   1bba4:	str	r0, [sp, #40]	; 0x28
   1bba8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bbac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbb0:	add	r1, r1, r2, lsl #3
   1bbb4:	str	r0, [r1]
   1bbb8:	ldr	r0, [sp, #36]	; 0x24
   1bbbc:	movw	r1, #16872	; 0x41e8
   1bbc0:	movt	r1, #3
   1bbc4:	cmp	r0, r1
   1bbc8:	beq	1bbd4 <__assert_fail@plt+0xa80c>
   1bbcc:	ldr	r0, [sp, #36]	; 0x24
   1bbd0:	bl	208f4 <__assert_fail@plt+0xf52c>
   1bbd4:	ldr	r0, [sp, #40]	; 0x28
   1bbd8:	bl	1ccbc <__assert_fail@plt+0xb8f4>
   1bbdc:	mov	r1, r0
   1bbe0:	str	r0, [sp, #36]	; 0x24
   1bbe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbe8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbec:	add	r0, r0, r2, lsl #3
   1bbf0:	str	r1, [r0, #4]
   1bbf4:	ldr	r0, [sp, #36]	; 0x24
   1bbf8:	ldr	r1, [sp, #40]	; 0x28
   1bbfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bc00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bc04:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1bc08:	ldr	ip, [ip]
   1bc0c:	ldr	lr, [sp, #32]
   1bc10:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1bc14:	add	r4, r4, #8
   1bc18:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1bc1c:	ldr	r5, [r5, #40]	; 0x28
   1bc20:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1bc24:	ldr	r6, [r6, #44]	; 0x2c
   1bc28:	str	ip, [sp]
   1bc2c:	str	lr, [sp, #4]
   1bc30:	str	r4, [sp, #8]
   1bc34:	str	r5, [sp, #12]
   1bc38:	str	r6, [sp, #16]
   1bc3c:	bl	19f88 <__assert_fail@plt+0x8bc0>
   1bc40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc44:	str	r0, [sp, #20]
   1bc48:	bl	11290 <__errno_location@plt>
   1bc4c:	ldr	r1, [sp, #20]
   1bc50:	str	r1, [r0]
   1bc54:	ldr	r0, [sp, #36]	; 0x24
   1bc58:	sub	sp, fp, #16
   1bc5c:	pop	{r4, r5, r6, sl, fp, pc}
   1bc60:	svcvc	0x00ffffff
   1bc64:	push	{fp, lr}
   1bc68:	mov	fp, sp
   1bc6c:	sub	sp, sp, #16
   1bc70:	str	r0, [fp, #-4]
   1bc74:	str	r1, [sp, #8]
   1bc78:	str	r2, [sp, #4]
   1bc7c:	ldr	r0, [fp, #-4]
   1bc80:	ldr	r1, [sp, #8]
   1bc84:	ldr	r2, [sp, #4]
   1bc88:	movw	r3, #16824	; 0x41b8
   1bc8c:	movt	r3, #3
   1bc90:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1bc94:	mov	sp, fp
   1bc98:	pop	{fp, pc}
   1bc9c:	push	{fp, lr}
   1bca0:	mov	fp, sp
   1bca4:	sub	sp, sp, #8
   1bca8:	str	r0, [sp, #4]
   1bcac:	ldr	r1, [sp, #4]
   1bcb0:	movw	r0, #0
   1bcb4:	bl	1b964 <__assert_fail@plt+0xa59c>
   1bcb8:	mov	sp, fp
   1bcbc:	pop	{fp, pc}
   1bcc0:	push	{fp, lr}
   1bcc4:	mov	fp, sp
   1bcc8:	sub	sp, sp, #8
   1bccc:	str	r0, [sp, #4]
   1bcd0:	str	r1, [sp]
   1bcd4:	ldr	r1, [sp, #4]
   1bcd8:	ldr	r2, [sp]
   1bcdc:	movw	r0, #0
   1bce0:	bl	1bc64 <__assert_fail@plt+0xa89c>
   1bce4:	mov	sp, fp
   1bce8:	pop	{fp, pc}
   1bcec:	push	{fp, lr}
   1bcf0:	mov	fp, sp
   1bcf4:	sub	sp, sp, #64	; 0x40
   1bcf8:	str	r0, [fp, #-4]
   1bcfc:	str	r1, [fp, #-8]
   1bd00:	str	r2, [fp, #-12]
   1bd04:	ldr	r1, [fp, #-8]
   1bd08:	add	r0, sp, #4
   1bd0c:	bl	1bd2c <__assert_fail@plt+0xa964>
   1bd10:	ldr	r0, [fp, #-4]
   1bd14:	ldr	r1, [fp, #-12]
   1bd18:	mvn	r2, #0
   1bd1c:	add	r3, sp, #4
   1bd20:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1bd24:	mov	sp, fp
   1bd28:	pop	{fp, pc}
   1bd2c:	push	{fp, lr}
   1bd30:	mov	fp, sp
   1bd34:	sub	sp, sp, #8
   1bd38:	str	r1, [sp, #4]
   1bd3c:	mov	r1, r0
   1bd40:	str	r0, [sp]
   1bd44:	mov	r0, r1
   1bd48:	movw	r1, #0
   1bd4c:	and	r1, r1, #255	; 0xff
   1bd50:	movw	r2, #48	; 0x30
   1bd54:	bl	112a8 <memset@plt>
   1bd58:	ldr	r0, [sp, #4]
   1bd5c:	cmp	r0, #10
   1bd60:	bne	1bd68 <__assert_fail@plt+0xa9a0>
   1bd64:	bl	11398 <abort@plt>
   1bd68:	ldr	r0, [sp, #4]
   1bd6c:	ldr	r1, [sp]
   1bd70:	str	r0, [r1]
   1bd74:	mov	sp, fp
   1bd78:	pop	{fp, pc}
   1bd7c:	push	{fp, lr}
   1bd80:	mov	fp, sp
   1bd84:	sub	sp, sp, #64	; 0x40
   1bd88:	str	r0, [fp, #-4]
   1bd8c:	str	r1, [fp, #-8]
   1bd90:	str	r2, [fp, #-12]
   1bd94:	str	r3, [fp, #-16]
   1bd98:	ldr	r1, [fp, #-8]
   1bd9c:	mov	r0, sp
   1bda0:	bl	1bd2c <__assert_fail@plt+0xa964>
   1bda4:	ldr	r0, [fp, #-4]
   1bda8:	ldr	r1, [fp, #-12]
   1bdac:	ldr	r2, [fp, #-16]
   1bdb0:	mov	r3, sp
   1bdb4:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1bdb8:	mov	sp, fp
   1bdbc:	pop	{fp, pc}
   1bdc0:	push	{fp, lr}
   1bdc4:	mov	fp, sp
   1bdc8:	sub	sp, sp, #8
   1bdcc:	str	r0, [sp, #4]
   1bdd0:	str	r1, [sp]
   1bdd4:	ldr	r1, [sp, #4]
   1bdd8:	ldr	r2, [sp]
   1bddc:	movw	r0, #0
   1bde0:	bl	1bcec <__assert_fail@plt+0xa924>
   1bde4:	mov	sp, fp
   1bde8:	pop	{fp, pc}
   1bdec:	push	{fp, lr}
   1bdf0:	mov	fp, sp
   1bdf4:	sub	sp, sp, #16
   1bdf8:	str	r0, [fp, #-4]
   1bdfc:	str	r1, [sp, #8]
   1be00:	str	r2, [sp, #4]
   1be04:	ldr	r1, [fp, #-4]
   1be08:	ldr	r2, [sp, #8]
   1be0c:	ldr	r3, [sp, #4]
   1be10:	movw	r0, #0
   1be14:	bl	1bd7c <__assert_fail@plt+0xa9b4>
   1be18:	mov	sp, fp
   1be1c:	pop	{fp, pc}
   1be20:	push	{fp, lr}
   1be24:	mov	fp, sp
   1be28:	sub	sp, sp, #72	; 0x48
   1be2c:	movw	r3, #16824	; 0x41b8
   1be30:	movt	r3, #3
   1be34:	str	r0, [fp, #-4]
   1be38:	str	r1, [fp, #-8]
   1be3c:	strb	r2, [fp, #-9]
   1be40:	add	r0, sp, #12
   1be44:	mov	r1, r0
   1be48:	str	r0, [sp, #8]
   1be4c:	mov	r0, r1
   1be50:	mov	r1, r3
   1be54:	movw	r2, #48	; 0x30
   1be58:	bl	1114c <memcpy@plt>
   1be5c:	ldr	r0, [sp, #8]
   1be60:	ldrb	r1, [fp, #-9]
   1be64:	movw	r2, #1
   1be68:	bl	19d30 <__assert_fail@plt+0x8968>
   1be6c:	ldr	r1, [fp, #-4]
   1be70:	ldr	r2, [fp, #-8]
   1be74:	movw	r3, #0
   1be78:	str	r0, [sp, #4]
   1be7c:	mov	r0, r3
   1be80:	add	r3, sp, #12
   1be84:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1be88:	mov	sp, fp
   1be8c:	pop	{fp, pc}
   1be90:	push	{fp, lr}
   1be94:	mov	fp, sp
   1be98:	sub	sp, sp, #8
   1be9c:	str	r0, [sp, #4]
   1bea0:	strb	r1, [sp, #3]
   1bea4:	ldr	r0, [sp, #4]
   1bea8:	mvn	r1, #0
   1beac:	ldrb	r2, [sp, #3]
   1beb0:	bl	1be20 <__assert_fail@plt+0xaa58>
   1beb4:	mov	sp, fp
   1beb8:	pop	{fp, pc}
   1bebc:	push	{fp, lr}
   1bec0:	mov	fp, sp
   1bec4:	sub	sp, sp, #8
   1bec8:	str	r0, [sp, #4]
   1becc:	ldr	r0, [sp, #4]
   1bed0:	movw	r1, #58	; 0x3a
   1bed4:	and	r1, r1, #255	; 0xff
   1bed8:	bl	1be90 <__assert_fail@plt+0xaac8>
   1bedc:	mov	sp, fp
   1bee0:	pop	{fp, pc}
   1bee4:	push	{fp, lr}
   1bee8:	mov	fp, sp
   1beec:	sub	sp, sp, #8
   1bef0:	str	r0, [sp, #4]
   1bef4:	str	r1, [sp]
   1bef8:	ldr	r0, [sp, #4]
   1befc:	ldr	r1, [sp]
   1bf00:	movw	r2, #58	; 0x3a
   1bf04:	and	r2, r2, #255	; 0xff
   1bf08:	bl	1be20 <__assert_fail@plt+0xaa58>
   1bf0c:	mov	sp, fp
   1bf10:	pop	{fp, pc}
   1bf14:	push	{fp, lr}
   1bf18:	mov	fp, sp
   1bf1c:	sub	sp, sp, #120	; 0x78
   1bf20:	str	r0, [fp, #-4]
   1bf24:	str	r1, [fp, #-8]
   1bf28:	str	r2, [fp, #-12]
   1bf2c:	ldr	r1, [fp, #-8]
   1bf30:	add	r0, sp, #12
   1bf34:	bl	1bd2c <__assert_fail@plt+0xa964>
   1bf38:	add	r0, sp, #60	; 0x3c
   1bf3c:	mov	r1, r0
   1bf40:	add	r2, sp, #12
   1bf44:	str	r0, [sp, #8]
   1bf48:	mov	r0, r1
   1bf4c:	mov	r1, r2
   1bf50:	movw	r2, #48	; 0x30
   1bf54:	bl	1114c <memcpy@plt>
   1bf58:	ldr	r0, [sp, #8]
   1bf5c:	movw	r1, #58	; 0x3a
   1bf60:	and	r1, r1, #255	; 0xff
   1bf64:	movw	r2, #1
   1bf68:	bl	19d30 <__assert_fail@plt+0x8968>
   1bf6c:	ldr	r1, [fp, #-4]
   1bf70:	ldr	r2, [fp, #-12]
   1bf74:	str	r0, [sp, #4]
   1bf78:	mov	r0, r1
   1bf7c:	mov	r1, r2
   1bf80:	mvn	r2, #0
   1bf84:	add	r3, sp, #60	; 0x3c
   1bf88:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1bf8c:	mov	sp, fp
   1bf90:	pop	{fp, pc}
   1bf94:	push	{fp, lr}
   1bf98:	mov	fp, sp
   1bf9c:	sub	sp, sp, #24
   1bfa0:	str	r0, [fp, #-4]
   1bfa4:	str	r1, [fp, #-8]
   1bfa8:	str	r2, [sp, #12]
   1bfac:	str	r3, [sp, #8]
   1bfb0:	ldr	r0, [fp, #-4]
   1bfb4:	ldr	r1, [fp, #-8]
   1bfb8:	ldr	r2, [sp, #12]
   1bfbc:	ldr	r3, [sp, #8]
   1bfc0:	mvn	ip, #0
   1bfc4:	str	ip, [sp]
   1bfc8:	bl	1bfd4 <__assert_fail@plt+0xac0c>
   1bfcc:	mov	sp, fp
   1bfd0:	pop	{fp, pc}
   1bfd4:	push	{fp, lr}
   1bfd8:	mov	fp, sp
   1bfdc:	sub	sp, sp, #72	; 0x48
   1bfe0:	ldr	ip, [fp, #8]
   1bfe4:	movw	lr, #16824	; 0x41b8
   1bfe8:	movt	lr, #3
   1bfec:	str	r0, [fp, #-4]
   1bff0:	str	r1, [fp, #-8]
   1bff4:	str	r2, [fp, #-12]
   1bff8:	str	r3, [fp, #-16]
   1bffc:	add	r0, sp, #8
   1c000:	mov	r1, r0
   1c004:	str	r0, [sp, #4]
   1c008:	mov	r0, r1
   1c00c:	mov	r1, lr
   1c010:	movw	r2, #48	; 0x30
   1c014:	str	ip, [sp]
   1c018:	bl	1114c <memcpy@plt>
   1c01c:	ldr	r1, [fp, #-8]
   1c020:	ldr	r2, [fp, #-12]
   1c024:	ldr	r0, [sp, #4]
   1c028:	bl	19e30 <__assert_fail@plt+0x8a68>
   1c02c:	ldr	r0, [fp, #-4]
   1c030:	ldr	r1, [fp, #-16]
   1c034:	ldr	r2, [fp, #8]
   1c038:	add	r3, sp, #8
   1c03c:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1c040:	mov	sp, fp
   1c044:	pop	{fp, pc}
   1c048:	push	{fp, lr}
   1c04c:	mov	fp, sp
   1c050:	sub	sp, sp, #16
   1c054:	str	r0, [fp, #-4]
   1c058:	str	r1, [sp, #8]
   1c05c:	str	r2, [sp, #4]
   1c060:	ldr	r1, [fp, #-4]
   1c064:	ldr	r2, [sp, #8]
   1c068:	ldr	r3, [sp, #4]
   1c06c:	movw	r0, #0
   1c070:	bl	1bf94 <__assert_fail@plt+0xabcc>
   1c074:	mov	sp, fp
   1c078:	pop	{fp, pc}
   1c07c:	push	{fp, lr}
   1c080:	mov	fp, sp
   1c084:	sub	sp, sp, #24
   1c088:	str	r0, [fp, #-4]
   1c08c:	str	r1, [fp, #-8]
   1c090:	str	r2, [sp, #12]
   1c094:	str	r3, [sp, #8]
   1c098:	ldr	r1, [fp, #-4]
   1c09c:	ldr	r2, [fp, #-8]
   1c0a0:	ldr	r3, [sp, #12]
   1c0a4:	ldr	r0, [sp, #8]
   1c0a8:	movw	ip, #0
   1c0ac:	str	r0, [sp, #4]
   1c0b0:	mov	r0, ip
   1c0b4:	ldr	ip, [sp, #4]
   1c0b8:	str	ip, [sp]
   1c0bc:	bl	1bfd4 <__assert_fail@plt+0xac0c>
   1c0c0:	mov	sp, fp
   1c0c4:	pop	{fp, pc}
   1c0c8:	push	{fp, lr}
   1c0cc:	mov	fp, sp
   1c0d0:	sub	sp, sp, #16
   1c0d4:	str	r0, [fp, #-4]
   1c0d8:	str	r1, [sp, #8]
   1c0dc:	str	r2, [sp, #4]
   1c0e0:	ldr	r0, [fp, #-4]
   1c0e4:	ldr	r1, [sp, #8]
   1c0e8:	ldr	r2, [sp, #4]
   1c0ec:	movw	r3, #16692	; 0x4134
   1c0f0:	movt	r3, #3
   1c0f4:	bl	1b998 <__assert_fail@plt+0xa5d0>
   1c0f8:	mov	sp, fp
   1c0fc:	pop	{fp, pc}
   1c100:	push	{fp, lr}
   1c104:	mov	fp, sp
   1c108:	sub	sp, sp, #8
   1c10c:	str	r0, [sp, #4]
   1c110:	str	r1, [sp]
   1c114:	ldr	r1, [sp, #4]
   1c118:	ldr	r2, [sp]
   1c11c:	movw	r0, #0
   1c120:	bl	1c0c8 <__assert_fail@plt+0xad00>
   1c124:	mov	sp, fp
   1c128:	pop	{fp, pc}
   1c12c:	push	{fp, lr}
   1c130:	mov	fp, sp
   1c134:	sub	sp, sp, #8
   1c138:	str	r0, [sp, #4]
   1c13c:	str	r1, [sp]
   1c140:	ldr	r0, [sp, #4]
   1c144:	ldr	r1, [sp]
   1c148:	mvn	r2, #0
   1c14c:	bl	1c0c8 <__assert_fail@plt+0xad00>
   1c150:	mov	sp, fp
   1c154:	pop	{fp, pc}
   1c158:	push	{fp, lr}
   1c15c:	mov	fp, sp
   1c160:	sub	sp, sp, #8
   1c164:	str	r0, [sp, #4]
   1c168:	ldr	r1, [sp, #4]
   1c16c:	movw	r0, #0
   1c170:	bl	1c12c <__assert_fail@plt+0xad64>
   1c174:	mov	sp, fp
   1c178:	pop	{fp, pc}
   1c17c:	push	{fp, lr}
   1c180:	mov	fp, sp
   1c184:	sub	sp, sp, #24
   1c188:	str	r0, [fp, #-8]
   1c18c:	str	r1, [sp, #12]
   1c190:	ldr	r0, [fp, #-8]
   1c194:	bl	11254 <gettext@plt>
   1c198:	str	r0, [sp, #8]
   1c19c:	ldr	r0, [sp, #8]
   1c1a0:	ldr	r1, [fp, #-8]
   1c1a4:	cmp	r0, r1
   1c1a8:	beq	1c1b8 <__assert_fail@plt+0xadf0>
   1c1ac:	ldr	r0, [sp, #8]
   1c1b0:	str	r0, [fp, #-4]
   1c1b4:	b	1c284 <__assert_fail@plt+0xaebc>
   1c1b8:	bl	20c10 <__assert_fail@plt+0xf848>
   1c1bc:	str	r0, [sp, #4]
   1c1c0:	ldr	r0, [sp, #4]
   1c1c4:	movw	r1, #14146	; 0x3742
   1c1c8:	movt	r1, #2
   1c1cc:	bl	1ff84 <__assert_fail@plt+0xebbc>
   1c1d0:	cmp	r0, #0
   1c1d4:	bne	1c20c <__assert_fail@plt+0xae44>
   1c1d8:	ldr	r0, [fp, #-8]
   1c1dc:	ldrb	r0, [r0]
   1c1e0:	cmp	r0, #96	; 0x60
   1c1e4:	movw	r0, #0
   1c1e8:	moveq	r0, #1
   1c1ec:	tst	r0, #1
   1c1f0:	movw	r0, #14156	; 0x374c
   1c1f4:	movt	r0, #2
   1c1f8:	movw	r1, #14152	; 0x3748
   1c1fc:	movt	r1, #2
   1c200:	movne	r0, r1
   1c204:	str	r0, [fp, #-4]
   1c208:	b	1c284 <__assert_fail@plt+0xaebc>
   1c20c:	ldr	r0, [sp, #4]
   1c210:	movw	r1, #14160	; 0x3750
   1c214:	movt	r1, #2
   1c218:	bl	1ff84 <__assert_fail@plt+0xebbc>
   1c21c:	cmp	r0, #0
   1c220:	bne	1c258 <__assert_fail@plt+0xae90>
   1c224:	ldr	r0, [fp, #-8]
   1c228:	ldrb	r0, [r0]
   1c22c:	cmp	r0, #96	; 0x60
   1c230:	movw	r0, #0
   1c234:	moveq	r0, #1
   1c238:	tst	r0, #1
   1c23c:	movw	r0, #14172	; 0x375c
   1c240:	movt	r0, #2
   1c244:	movw	r1, #14168	; 0x3758
   1c248:	movt	r1, #2
   1c24c:	movne	r0, r1
   1c250:	str	r0, [fp, #-4]
   1c254:	b	1c284 <__assert_fail@plt+0xaebc>
   1c258:	ldr	r0, [sp, #12]
   1c25c:	cmp	r0, #9
   1c260:	movw	r0, #0
   1c264:	moveq	r0, #1
   1c268:	tst	r0, #1
   1c26c:	movw	r0, #14144	; 0x3740
   1c270:	movt	r0, #2
   1c274:	movw	r1, #14140	; 0x373c
   1c278:	movt	r1, #2
   1c27c:	movne	r0, r1
   1c280:	str	r0, [fp, #-4]
   1c284:	ldr	r0, [fp, #-4]
   1c288:	mov	sp, fp
   1c28c:	pop	{fp, pc}
   1c290:	push	{fp, lr}
   1c294:	mov	fp, sp
   1c298:	sub	sp, sp, #112	; 0x70
   1c29c:	str	r0, [fp, #-8]
   1c2a0:	movw	r0, #14995	; 0x3a93
   1c2a4:	movt	r0, #2
   1c2a8:	mov	r1, sp
   1c2ac:	bl	22ba0 <__assert_fail@plt+0x117d8>
   1c2b0:	cmp	r0, #0
   1c2b4:	beq	1c2c4 <__assert_fail@plt+0xaefc>
   1c2b8:	movw	r0, #0
   1c2bc:	str	r0, [fp, #-4]
   1c2c0:	b	1c2f4 <__assert_fail@plt+0xaf2c>
   1c2c4:	ldr	r0, [sp, #96]	; 0x60
   1c2c8:	ldr	r1, [sp, #100]	; 0x64
   1c2cc:	ldr	r2, [fp, #-8]
   1c2d0:	str	r1, [r2, #4]
   1c2d4:	str	r0, [r2]
   1c2d8:	ldr	r0, [sp]
   1c2dc:	ldr	r1, [sp, #4]
   1c2e0:	ldr	r2, [fp, #-8]
   1c2e4:	str	r1, [r2, #12]
   1c2e8:	str	r0, [r2, #8]
   1c2ec:	ldr	r0, [fp, #-8]
   1c2f0:	str	r0, [fp, #-4]
   1c2f4:	ldr	r0, [fp, #-4]
   1c2f8:	mov	sp, fp
   1c2fc:	pop	{fp, pc}
   1c300:	push	{fp, lr}
   1c304:	mov	fp, sp
   1c308:	sub	sp, sp, #24
   1c30c:	str	r0, [fp, #-4]
   1c310:	ldr	r0, [fp, #-4]
   1c314:	movw	r1, #0
   1c318:	cmp	r1, r0
   1c31c:	bgt	1c36c <__assert_fail@plt+0xafa4>
   1c320:	ldr	r0, [fp, #-4]
   1c324:	cmp	r0, #2
   1c328:	bgt	1c36c <__assert_fail@plt+0xafa4>
   1c32c:	ldr	r0, [fp, #-4]
   1c330:	bl	2205c <__assert_fail@plt+0x10c94>
   1c334:	str	r0, [fp, #-8]
   1c338:	bl	11290 <__errno_location@plt>
   1c33c:	ldr	r0, [r0]
   1c340:	str	r0, [sp, #12]
   1c344:	ldr	r0, [fp, #-4]
   1c348:	bl	113a4 <close@plt>
   1c34c:	ldr	r1, [sp, #12]
   1c350:	str	r0, [sp, #8]
   1c354:	str	r1, [sp, #4]
   1c358:	bl	11290 <__errno_location@plt>
   1c35c:	ldr	r1, [sp, #4]
   1c360:	str	r1, [r0]
   1c364:	ldr	r0, [fp, #-8]
   1c368:	str	r0, [fp, #-4]
   1c36c:	ldr	r0, [fp, #-4]
   1c370:	mov	sp, fp
   1c374:	pop	{fp, pc}
   1c378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c37c:	add	fp, sp, #28
   1c380:	sub	sp, sp, #196	; 0xc4
   1c384:	ldr	ip, [fp, #12]
   1c388:	ldr	lr, [fp, #8]
   1c38c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c390:	str	r1, [fp, #-36]	; 0xffffffdc
   1c394:	str	r2, [fp, #-40]	; 0xffffffd8
   1c398:	str	r3, [fp, #-44]	; 0xffffffd4
   1c39c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c3a0:	movw	r1, #0
   1c3a4:	cmp	r0, r1
   1c3a8:	beq	1c3dc <__assert_fail@plt+0xb014>
   1c3ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c3b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c3b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3bc:	movw	ip, #14260	; 0x37b4
   1c3c0:	movt	ip, #2
   1c3c4:	str	r1, [fp, #-48]	; 0xffffffd0
   1c3c8:	mov	r1, ip
   1c3cc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1c3d0:	str	ip, [sp]
   1c3d4:	bl	11278 <fprintf@plt>
   1c3d8:	b	1c3f4 <__assert_fail@plt+0xb02c>
   1c3dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c3e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c3e8:	movw	r1, #14272	; 0x37c0
   1c3ec:	movt	r1, #2
   1c3f0:	bl	11278 <fprintf@plt>
   1c3f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3f8:	movw	r1, #14279	; 0x37c7
   1c3fc:	movt	r1, #2
   1c400:	str	r0, [fp, #-52]	; 0xffffffcc
   1c404:	mov	r0, r1
   1c408:	bl	11254 <gettext@plt>
   1c40c:	movw	r1, #14997	; 0x3a95
   1c410:	movt	r1, #2
   1c414:	movw	r3, #2022	; 0x7e6
   1c418:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c41c:	str	r0, [fp, #-56]	; 0xffffffc8
   1c420:	mov	r0, r2
   1c424:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c428:	bl	11278 <fprintf@plt>
   1c42c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c430:	movw	r2, #11513	; 0x2cf9
   1c434:	movt	r2, #2
   1c438:	str	r0, [fp, #-60]	; 0xffffffc4
   1c43c:	mov	r0, r2
   1c440:	str	r2, [fp, #-64]	; 0xffffffc0
   1c444:	bl	110ec <fputs_unlocked@plt>
   1c448:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c44c:	movw	r2, #14283	; 0x37cb
   1c450:	movt	r2, #2
   1c454:	str	r0, [fp, #-68]	; 0xffffffbc
   1c458:	mov	r0, r2
   1c45c:	str	r1, [fp, #-72]	; 0xffffffb8
   1c460:	bl	11254 <gettext@plt>
   1c464:	movw	r2, #14454	; 0x3876
   1c468:	movt	r2, #2
   1c46c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1c470:	str	r0, [fp, #-76]	; 0xffffffb4
   1c474:	mov	r0, r1
   1c478:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c47c:	bl	11278 <fprintf@plt>
   1c480:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c484:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c488:	str	r0, [fp, #-80]	; 0xffffffb0
   1c48c:	mov	r0, r2
   1c490:	bl	110ec <fputs_unlocked@plt>
   1c494:	ldr	r1, [fp, #12]
   1c498:	cmp	r1, #9
   1c49c:	str	r1, [fp, #-84]	; 0xffffffac
   1c4a0:	bhi	1c8bc <__assert_fail@plt+0xb4f4>
   1c4a4:	add	r0, pc, #8
   1c4a8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c4ac:	ldr	r0, [r0, r1, lsl #2]
   1c4b0:	mov	pc, r0
   1c4b4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c4b8:	andeq	ip, r1, r0, ror #9
   1c4bc:	andeq	ip, r1, r8, lsl r5
   1c4c0:	andeq	ip, r1, r8, asr r5
   1c4c4:			; <UNDEFINED> instruction: 0x0001c5b0
   1c4c8:	andeq	ip, r1, r4, lsl r6
   1c4cc:	andeq	ip, r1, r4, lsl #13
   1c4d0:	andeq	ip, r1, r0, lsl #14
   1c4d4:	andeq	ip, r1, r8, lsl #15
   1c4d8:	andeq	ip, r1, ip, lsl r8
   1c4dc:	b	1c958 <__assert_fail@plt+0xb590>
   1c4e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4e4:	movw	r1, #14488	; 0x3898
   1c4e8:	movt	r1, #2
   1c4ec:	str	r0, [fp, #-88]	; 0xffffffa8
   1c4f0:	mov	r0, r1
   1c4f4:	bl	11254 <gettext@plt>
   1c4f8:	ldr	r1, [fp, #8]
   1c4fc:	ldr	r2, [r1]
   1c500:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c504:	str	r0, [fp, #-92]	; 0xffffffa4
   1c508:	mov	r0, r1
   1c50c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c510:	bl	11278 <fprintf@plt>
   1c514:	b	1c958 <__assert_fail@plt+0xb590>
   1c518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c51c:	movw	r1, #14504	; 0x38a8
   1c520:	movt	r1, #2
   1c524:	str	r0, [fp, #-96]	; 0xffffffa0
   1c528:	mov	r0, r1
   1c52c:	bl	11254 <gettext@plt>
   1c530:	ldr	r1, [fp, #8]
   1c534:	ldr	r2, [r1]
   1c538:	ldr	r1, [fp, #8]
   1c53c:	ldr	r3, [r1, #4]
   1c540:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1c544:	str	r0, [fp, #-100]	; 0xffffff9c
   1c548:	mov	r0, r1
   1c54c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c550:	bl	11278 <fprintf@plt>
   1c554:	b	1c958 <__assert_fail@plt+0xb590>
   1c558:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c55c:	movw	r1, #14527	; 0x38bf
   1c560:	movt	r1, #2
   1c564:	str	r0, [fp, #-104]	; 0xffffff98
   1c568:	mov	r0, r1
   1c56c:	bl	11254 <gettext@plt>
   1c570:	ldr	r1, [fp, #8]
   1c574:	ldr	r2, [r1]
   1c578:	ldr	r1, [fp, #8]
   1c57c:	ldr	r3, [r1, #4]
   1c580:	ldr	r1, [fp, #8]
   1c584:	ldr	r1, [r1, #8]
   1c588:	ldr	ip, [fp, #-104]	; 0xffffff98
   1c58c:	str	r0, [fp, #-108]	; 0xffffff94
   1c590:	mov	r0, ip
   1c594:	ldr	lr, [fp, #-108]	; 0xffffff94
   1c598:	str	r1, [sp, #112]	; 0x70
   1c59c:	mov	r1, lr
   1c5a0:	ldr	r4, [sp, #112]	; 0x70
   1c5a4:	str	r4, [sp]
   1c5a8:	bl	11278 <fprintf@plt>
   1c5ac:	b	1c958 <__assert_fail@plt+0xb590>
   1c5b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5b4:	movw	r1, #14555	; 0x38db
   1c5b8:	movt	r1, #2
   1c5bc:	str	r0, [sp, #108]	; 0x6c
   1c5c0:	mov	r0, r1
   1c5c4:	bl	11254 <gettext@plt>
   1c5c8:	ldr	r1, [fp, #8]
   1c5cc:	ldr	r2, [r1]
   1c5d0:	ldr	r1, [fp, #8]
   1c5d4:	ldr	r3, [r1, #4]
   1c5d8:	ldr	r1, [fp, #8]
   1c5dc:	ldr	r1, [r1, #8]
   1c5e0:	ldr	ip, [fp, #8]
   1c5e4:	ldr	ip, [ip, #12]
   1c5e8:	ldr	lr, [sp, #108]	; 0x6c
   1c5ec:	str	r0, [sp, #104]	; 0x68
   1c5f0:	mov	r0, lr
   1c5f4:	ldr	r4, [sp, #104]	; 0x68
   1c5f8:	str	r1, [sp, #100]	; 0x64
   1c5fc:	mov	r1, r4
   1c600:	ldr	r5, [sp, #100]	; 0x64
   1c604:	str	r5, [sp]
   1c608:	str	ip, [sp, #4]
   1c60c:	bl	11278 <fprintf@plt>
   1c610:	b	1c958 <__assert_fail@plt+0xb590>
   1c614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c618:	movw	r1, #14587	; 0x38fb
   1c61c:	movt	r1, #2
   1c620:	str	r0, [sp, #96]	; 0x60
   1c624:	mov	r0, r1
   1c628:	bl	11254 <gettext@plt>
   1c62c:	ldr	r1, [fp, #8]
   1c630:	ldr	r2, [r1]
   1c634:	ldr	r1, [fp, #8]
   1c638:	ldr	r3, [r1, #4]
   1c63c:	ldr	r1, [fp, #8]
   1c640:	ldr	r1, [r1, #8]
   1c644:	ldr	ip, [fp, #8]
   1c648:	ldr	ip, [ip, #12]
   1c64c:	ldr	lr, [fp, #8]
   1c650:	ldr	lr, [lr, #16]
   1c654:	ldr	r4, [sp, #96]	; 0x60
   1c658:	str	r0, [sp, #92]	; 0x5c
   1c65c:	mov	r0, r4
   1c660:	ldr	r5, [sp, #92]	; 0x5c
   1c664:	str	r1, [sp, #88]	; 0x58
   1c668:	mov	r1, r5
   1c66c:	ldr	r6, [sp, #88]	; 0x58
   1c670:	str	r6, [sp]
   1c674:	str	ip, [sp, #4]
   1c678:	str	lr, [sp, #8]
   1c67c:	bl	11278 <fprintf@plt>
   1c680:	b	1c958 <__assert_fail@plt+0xb590>
   1c684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c688:	movw	r1, #14623	; 0x391f
   1c68c:	movt	r1, #2
   1c690:	str	r0, [sp, #84]	; 0x54
   1c694:	mov	r0, r1
   1c698:	bl	11254 <gettext@plt>
   1c69c:	ldr	r1, [fp, #8]
   1c6a0:	ldr	r2, [r1]
   1c6a4:	ldr	r1, [fp, #8]
   1c6a8:	ldr	r3, [r1, #4]
   1c6ac:	ldr	r1, [fp, #8]
   1c6b0:	ldr	r1, [r1, #8]
   1c6b4:	ldr	ip, [fp, #8]
   1c6b8:	ldr	ip, [ip, #12]
   1c6bc:	ldr	lr, [fp, #8]
   1c6c0:	ldr	lr, [lr, #16]
   1c6c4:	ldr	r4, [fp, #8]
   1c6c8:	ldr	r4, [r4, #20]
   1c6cc:	ldr	r5, [sp, #84]	; 0x54
   1c6d0:	str	r0, [sp, #80]	; 0x50
   1c6d4:	mov	r0, r5
   1c6d8:	ldr	r6, [sp, #80]	; 0x50
   1c6dc:	str	r1, [sp, #76]	; 0x4c
   1c6e0:	mov	r1, r6
   1c6e4:	ldr	r7, [sp, #76]	; 0x4c
   1c6e8:	str	r7, [sp]
   1c6ec:	str	ip, [sp, #4]
   1c6f0:	str	lr, [sp, #8]
   1c6f4:	str	r4, [sp, #12]
   1c6f8:	bl	11278 <fprintf@plt>
   1c6fc:	b	1c958 <__assert_fail@plt+0xb590>
   1c700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c704:	movw	r1, #14663	; 0x3947
   1c708:	movt	r1, #2
   1c70c:	str	r0, [sp, #72]	; 0x48
   1c710:	mov	r0, r1
   1c714:	bl	11254 <gettext@plt>
   1c718:	ldr	r1, [fp, #8]
   1c71c:	ldr	r2, [r1]
   1c720:	ldr	r1, [fp, #8]
   1c724:	ldr	r3, [r1, #4]
   1c728:	ldr	r1, [fp, #8]
   1c72c:	ldr	r1, [r1, #8]
   1c730:	ldr	ip, [fp, #8]
   1c734:	ldr	ip, [ip, #12]
   1c738:	ldr	lr, [fp, #8]
   1c73c:	ldr	lr, [lr, #16]
   1c740:	ldr	r4, [fp, #8]
   1c744:	ldr	r4, [r4, #20]
   1c748:	ldr	r5, [fp, #8]
   1c74c:	ldr	r5, [r5, #24]
   1c750:	ldr	r6, [sp, #72]	; 0x48
   1c754:	str	r0, [sp, #68]	; 0x44
   1c758:	mov	r0, r6
   1c75c:	ldr	r7, [sp, #68]	; 0x44
   1c760:	str	r1, [sp, #64]	; 0x40
   1c764:	mov	r1, r7
   1c768:	ldr	r8, [sp, #64]	; 0x40
   1c76c:	str	r8, [sp]
   1c770:	str	ip, [sp, #4]
   1c774:	str	lr, [sp, #8]
   1c778:	str	r4, [sp, #12]
   1c77c:	str	r5, [sp, #16]
   1c780:	bl	11278 <fprintf@plt>
   1c784:	b	1c958 <__assert_fail@plt+0xb590>
   1c788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c78c:	movw	r1, #14707	; 0x3973
   1c790:	movt	r1, #2
   1c794:	str	r0, [sp, #60]	; 0x3c
   1c798:	mov	r0, r1
   1c79c:	bl	11254 <gettext@plt>
   1c7a0:	ldr	r1, [fp, #8]
   1c7a4:	ldr	r2, [r1]
   1c7a8:	ldr	r1, [fp, #8]
   1c7ac:	ldr	r3, [r1, #4]
   1c7b0:	ldr	r1, [fp, #8]
   1c7b4:	ldr	r1, [r1, #8]
   1c7b8:	ldr	ip, [fp, #8]
   1c7bc:	ldr	ip, [ip, #12]
   1c7c0:	ldr	lr, [fp, #8]
   1c7c4:	ldr	lr, [lr, #16]
   1c7c8:	ldr	r4, [fp, #8]
   1c7cc:	ldr	r4, [r4, #20]
   1c7d0:	ldr	r5, [fp, #8]
   1c7d4:	ldr	r5, [r5, #24]
   1c7d8:	ldr	r6, [fp, #8]
   1c7dc:	ldr	r6, [r6, #28]
   1c7e0:	ldr	r7, [sp, #60]	; 0x3c
   1c7e4:	str	r0, [sp, #56]	; 0x38
   1c7e8:	mov	r0, r7
   1c7ec:	ldr	r8, [sp, #56]	; 0x38
   1c7f0:	str	r1, [sp, #52]	; 0x34
   1c7f4:	mov	r1, r8
   1c7f8:	ldr	r9, [sp, #52]	; 0x34
   1c7fc:	str	r9, [sp]
   1c800:	str	ip, [sp, #4]
   1c804:	str	lr, [sp, #8]
   1c808:	str	r4, [sp, #12]
   1c80c:	str	r5, [sp, #16]
   1c810:	str	r6, [sp, #20]
   1c814:	bl	11278 <fprintf@plt>
   1c818:	b	1c958 <__assert_fail@plt+0xb590>
   1c81c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c820:	movw	r1, #14755	; 0x39a3
   1c824:	movt	r1, #2
   1c828:	str	r0, [sp, #48]	; 0x30
   1c82c:	mov	r0, r1
   1c830:	bl	11254 <gettext@plt>
   1c834:	ldr	r1, [fp, #8]
   1c838:	ldr	r2, [r1]
   1c83c:	ldr	r1, [fp, #8]
   1c840:	ldr	r3, [r1, #4]
   1c844:	ldr	r1, [fp, #8]
   1c848:	ldr	r1, [r1, #8]
   1c84c:	ldr	ip, [fp, #8]
   1c850:	ldr	ip, [ip, #12]
   1c854:	ldr	lr, [fp, #8]
   1c858:	ldr	lr, [lr, #16]
   1c85c:	ldr	r4, [fp, #8]
   1c860:	ldr	r4, [r4, #20]
   1c864:	ldr	r5, [fp, #8]
   1c868:	ldr	r5, [r5, #24]
   1c86c:	ldr	r6, [fp, #8]
   1c870:	ldr	r6, [r6, #28]
   1c874:	ldr	r7, [fp, #8]
   1c878:	ldr	r7, [r7, #32]
   1c87c:	ldr	r8, [sp, #48]	; 0x30
   1c880:	str	r0, [sp, #44]	; 0x2c
   1c884:	mov	r0, r8
   1c888:	ldr	r9, [sp, #44]	; 0x2c
   1c88c:	str	r1, [sp, #40]	; 0x28
   1c890:	mov	r1, r9
   1c894:	ldr	sl, [sp, #40]	; 0x28
   1c898:	str	sl, [sp]
   1c89c:	str	ip, [sp, #4]
   1c8a0:	str	lr, [sp, #8]
   1c8a4:	str	r4, [sp, #12]
   1c8a8:	str	r5, [sp, #16]
   1c8ac:	str	r6, [sp, #20]
   1c8b0:	str	r7, [sp, #24]
   1c8b4:	bl	11278 <fprintf@plt>
   1c8b8:	b	1c958 <__assert_fail@plt+0xb590>
   1c8bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c8c0:	movw	r1, #14807	; 0x39d7
   1c8c4:	movt	r1, #2
   1c8c8:	str	r0, [sp, #36]	; 0x24
   1c8cc:	mov	r0, r1
   1c8d0:	bl	11254 <gettext@plt>
   1c8d4:	ldr	r1, [fp, #8]
   1c8d8:	ldr	r2, [r1]
   1c8dc:	ldr	r1, [fp, #8]
   1c8e0:	ldr	r3, [r1, #4]
   1c8e4:	ldr	r1, [fp, #8]
   1c8e8:	ldr	r1, [r1, #8]
   1c8ec:	ldr	ip, [fp, #8]
   1c8f0:	ldr	ip, [ip, #12]
   1c8f4:	ldr	lr, [fp, #8]
   1c8f8:	ldr	lr, [lr, #16]
   1c8fc:	ldr	r4, [fp, #8]
   1c900:	ldr	r4, [r4, #20]
   1c904:	ldr	r5, [fp, #8]
   1c908:	ldr	r5, [r5, #24]
   1c90c:	ldr	r6, [fp, #8]
   1c910:	ldr	r6, [r6, #28]
   1c914:	ldr	r7, [fp, #8]
   1c918:	ldr	r7, [r7, #32]
   1c91c:	ldr	r8, [sp, #36]	; 0x24
   1c920:	str	r0, [sp, #32]
   1c924:	mov	r0, r8
   1c928:	ldr	r9, [sp, #32]
   1c92c:	str	r1, [sp, #28]
   1c930:	mov	r1, r9
   1c934:	ldr	sl, [sp, #28]
   1c938:	str	sl, [sp]
   1c93c:	str	ip, [sp, #4]
   1c940:	str	lr, [sp, #8]
   1c944:	str	r4, [sp, #12]
   1c948:	str	r5, [sp, #16]
   1c94c:	str	r6, [sp, #20]
   1c950:	str	r7, [sp, #24]
   1c954:	bl	11278 <fprintf@plt>
   1c958:	sub	sp, fp, #28
   1c95c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c960:	push	{fp, lr}
   1c964:	mov	fp, sp
   1c968:	sub	sp, sp, #32
   1c96c:	ldr	ip, [fp, #8]
   1c970:	str	r0, [fp, #-4]
   1c974:	str	r1, [fp, #-8]
   1c978:	str	r2, [fp, #-12]
   1c97c:	str	r3, [sp, #16]
   1c980:	movw	r0, #0
   1c984:	str	r0, [sp, #12]
   1c988:	ldr	r0, [fp, #8]
   1c98c:	ldr	r1, [sp, #12]
   1c990:	add	r0, r0, r1, lsl #2
   1c994:	ldr	r0, [r0]
   1c998:	movw	r1, #0
   1c99c:	cmp	r0, r1
   1c9a0:	beq	1c9b8 <__assert_fail@plt+0xb5f0>
   1c9a4:	b	1c9a8 <__assert_fail@plt+0xb5e0>
   1c9a8:	ldr	r0, [sp, #12]
   1c9ac:	add	r0, r0, #1
   1c9b0:	str	r0, [sp, #12]
   1c9b4:	b	1c988 <__assert_fail@plt+0xb5c0>
   1c9b8:	ldr	r0, [fp, #-4]
   1c9bc:	ldr	r1, [fp, #-8]
   1c9c0:	ldr	r2, [fp, #-12]
   1c9c4:	ldr	r3, [sp, #16]
   1c9c8:	ldr	ip, [fp, #8]
   1c9cc:	ldr	lr, [sp, #12]
   1c9d0:	str	ip, [sp]
   1c9d4:	str	lr, [sp, #4]
   1c9d8:	bl	1c378 <__assert_fail@plt+0xafb0>
   1c9dc:	mov	sp, fp
   1c9e0:	pop	{fp, pc}
   1c9e4:	push	{fp, lr}
   1c9e8:	mov	fp, sp
   1c9ec:	sub	sp, sp, #80	; 0x50
   1c9f0:	ldr	ip, [fp, #8]
   1c9f4:	str	ip, [fp, #-4]
   1c9f8:	str	r0, [fp, #-8]
   1c9fc:	str	r1, [fp, #-12]
   1ca00:	str	r2, [fp, #-16]
   1ca04:	str	r3, [fp, #-20]	; 0xffffffec
   1ca08:	movw	r0, #0
   1ca0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca14:	cmp	r0, #10
   1ca18:	movw	r0, #0
   1ca1c:	str	r0, [sp, #12]
   1ca20:	bcs	1ca58 <__assert_fail@plt+0xb690>
   1ca24:	ldr	r0, [fp, #-4]
   1ca28:	add	r1, r0, #4
   1ca2c:	str	r1, [fp, #-4]
   1ca30:	ldr	r0, [r0]
   1ca34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca38:	add	r2, sp, #16
   1ca3c:	add	r1, r2, r1, lsl #2
   1ca40:	str	r0, [r1]
   1ca44:	movw	r1, #0
   1ca48:	cmp	r0, r1
   1ca4c:	movw	r0, #0
   1ca50:	movne	r0, #1
   1ca54:	str	r0, [sp, #12]
   1ca58:	ldr	r0, [sp, #12]
   1ca5c:	tst	r0, #1
   1ca60:	beq	1ca78 <__assert_fail@plt+0xb6b0>
   1ca64:	b	1ca68 <__assert_fail@plt+0xb6a0>
   1ca68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca6c:	add	r0, r0, #1
   1ca70:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca74:	b	1ca10 <__assert_fail@plt+0xb648>
   1ca78:	add	r0, sp, #16
   1ca7c:	ldr	r1, [fp, #-8]
   1ca80:	ldr	r2, [fp, #-12]
   1ca84:	ldr	r3, [fp, #-16]
   1ca88:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ca8c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1ca90:	str	r0, [sp, #8]
   1ca94:	mov	r0, r1
   1ca98:	mov	r1, r2
   1ca9c:	mov	r2, r3
   1caa0:	mov	r3, ip
   1caa4:	ldr	ip, [sp, #8]
   1caa8:	str	ip, [sp]
   1caac:	str	lr, [sp, #4]
   1cab0:	bl	1c378 <__assert_fail@plt+0xafb0>
   1cab4:	mov	sp, fp
   1cab8:	pop	{fp, pc}
   1cabc:	push	{fp, lr}
   1cac0:	mov	fp, sp
   1cac4:	sub	sp, sp, #24
   1cac8:	str	r0, [fp, #-4]
   1cacc:	str	r1, [fp, #-8]
   1cad0:	str	r2, [sp, #12]
   1cad4:	str	r3, [sp, #8]
   1cad8:	add	r0, fp, #8
   1cadc:	str	r0, [sp, #4]
   1cae0:	ldr	r0, [fp, #-4]
   1cae4:	ldr	r1, [fp, #-8]
   1cae8:	ldr	r2, [sp, #12]
   1caec:	ldr	r3, [sp, #8]
   1caf0:	ldr	ip, [sp, #4]
   1caf4:	mov	lr, sp
   1caf8:	str	ip, [lr]
   1cafc:	bl	1c9e4 <__assert_fail@plt+0xb61c>
   1cb00:	add	r0, sp, #4
   1cb04:	mov	sp, fp
   1cb08:	pop	{fp, pc}
   1cb0c:	push	{fp, lr}
   1cb10:	mov	fp, sp
   1cb14:	sub	sp, sp, #16
   1cb18:	movw	r0, #16764	; 0x417c
   1cb1c:	movt	r0, #3
   1cb20:	ldr	r1, [r0]
   1cb24:	movw	r0, #11513	; 0x2cf9
   1cb28:	movt	r0, #2
   1cb2c:	bl	110ec <fputs_unlocked@plt>
   1cb30:	movw	r1, #14867	; 0x3a13
   1cb34:	movt	r1, #2
   1cb38:	str	r0, [fp, #-4]
   1cb3c:	mov	r0, r1
   1cb40:	bl	11254 <gettext@plt>
   1cb44:	movw	r1, #14887	; 0x3a27
   1cb48:	movt	r1, #2
   1cb4c:	bl	11110 <printf@plt>
   1cb50:	movw	r1, #14909	; 0x3a3d
   1cb54:	movt	r1, #2
   1cb58:	str	r0, [sp, #8]
   1cb5c:	mov	r0, r1
   1cb60:	bl	11254 <gettext@plt>
   1cb64:	movw	r1, #12249	; 0x2fd9
   1cb68:	movt	r1, #2
   1cb6c:	movw	r2, #12543	; 0x30ff
   1cb70:	movt	r2, #2
   1cb74:	bl	11110 <printf@plt>
   1cb78:	movw	r1, #14929	; 0x3a51
   1cb7c:	movt	r1, #2
   1cb80:	str	r0, [sp, #4]
   1cb84:	mov	r0, r1
   1cb88:	bl	11254 <gettext@plt>
   1cb8c:	movw	r1, #14968	; 0x3a78
   1cb90:	movt	r1, #2
   1cb94:	bl	11110 <printf@plt>
   1cb98:	mov	sp, fp
   1cb9c:	pop	{fp, pc}
   1cba0:	push	{fp, lr}
   1cba4:	mov	fp, sp
   1cba8:	sub	sp, sp, #16
   1cbac:	str	r0, [fp, #-4]
   1cbb0:	str	r1, [sp, #8]
   1cbb4:	str	r2, [sp, #4]
   1cbb8:	ldr	r0, [fp, #-4]
   1cbbc:	ldr	r1, [sp, #8]
   1cbc0:	ldr	r2, [sp, #4]
   1cbc4:	bl	1cbd0 <__assert_fail@plt+0xb808>
   1cbc8:	mov	sp, fp
   1cbcc:	pop	{fp, pc}
   1cbd0:	push	{fp, lr}
   1cbd4:	mov	fp, sp
   1cbd8:	sub	sp, sp, #16
   1cbdc:	str	r0, [fp, #-4]
   1cbe0:	str	r1, [sp, #8]
   1cbe4:	str	r2, [sp, #4]
   1cbe8:	ldr	r0, [fp, #-4]
   1cbec:	ldr	r1, [sp, #8]
   1cbf0:	ldr	r2, [sp, #4]
   1cbf4:	bl	20d1c <__assert_fail@plt+0xf954>
   1cbf8:	str	r0, [sp]
   1cbfc:	ldr	r0, [sp]
   1cc00:	movw	r1, #0
   1cc04:	cmp	r0, r1
   1cc08:	bne	1cc38 <__assert_fail@plt+0xb870>
   1cc0c:	ldr	r0, [fp, #-4]
   1cc10:	movw	r1, #0
   1cc14:	cmp	r0, r1
   1cc18:	beq	1cc34 <__assert_fail@plt+0xb86c>
   1cc1c:	ldr	r0, [sp, #8]
   1cc20:	cmp	r0, #0
   1cc24:	beq	1cc38 <__assert_fail@plt+0xb870>
   1cc28:	ldr	r0, [sp, #4]
   1cc2c:	cmp	r0, #0
   1cc30:	beq	1cc38 <__assert_fail@plt+0xb870>
   1cc34:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1cc38:	ldr	r0, [sp]
   1cc3c:	mov	sp, fp
   1cc40:	pop	{fp, pc}
   1cc44:	push	{fp, lr}
   1cc48:	mov	fp, sp
   1cc4c:	sub	sp, sp, #8
   1cc50:	str	r0, [sp, #4]
   1cc54:	ldr	r0, [sp, #4]
   1cc58:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   1cc5c:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1cc60:	mov	sp, fp
   1cc64:	pop	{fp, pc}
   1cc68:	push	{fp, lr}
   1cc6c:	mov	fp, sp
   1cc70:	sub	sp, sp, #8
   1cc74:	str	r0, [sp, #4]
   1cc78:	ldr	r0, [sp, #4]
   1cc7c:	movw	r1, #0
   1cc80:	cmp	r0, r1
   1cc84:	bne	1cc8c <__assert_fail@plt+0xb8c4>
   1cc88:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1cc8c:	ldr	r0, [sp, #4]
   1cc90:	mov	sp, fp
   1cc94:	pop	{fp, pc}
   1cc98:	push	{fp, lr}
   1cc9c:	mov	fp, sp
   1cca0:	sub	sp, sp, #8
   1cca4:	str	r0, [sp, #4]
   1cca8:	ldr	r0, [sp, #4]
   1ccac:	bl	20a58 <__assert_fail@plt+0xf690>
   1ccb0:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1ccb4:	mov	sp, fp
   1ccb8:	pop	{fp, pc}
   1ccbc:	push	{fp, lr}
   1ccc0:	mov	fp, sp
   1ccc4:	sub	sp, sp, #8
   1ccc8:	str	r0, [sp, #4]
   1cccc:	ldr	r0, [sp, #4]
   1ccd0:	bl	1cc44 <__assert_fail@plt+0xb87c>
   1ccd4:	mov	sp, fp
   1ccd8:	pop	{fp, pc}
   1ccdc:	push	{fp, lr}
   1cce0:	mov	fp, sp
   1cce4:	sub	sp, sp, #16
   1cce8:	str	r0, [fp, #-4]
   1ccec:	str	r1, [sp, #8]
   1ccf0:	ldr	r0, [fp, #-4]
   1ccf4:	ldr	r1, [sp, #8]
   1ccf8:	bl	1fc00 <__assert_fail@plt+0xe838>
   1ccfc:	str	r0, [sp, #4]
   1cd00:	ldr	r0, [sp, #4]
   1cd04:	movw	r1, #0
   1cd08:	cmp	r0, r1
   1cd0c:	bne	1cd30 <__assert_fail@plt+0xb968>
   1cd10:	ldr	r0, [fp, #-4]
   1cd14:	movw	r1, #0
   1cd18:	cmp	r0, r1
   1cd1c:	beq	1cd2c <__assert_fail@plt+0xb964>
   1cd20:	ldr	r0, [sp, #8]
   1cd24:	cmp	r0, #0
   1cd28:	beq	1cd30 <__assert_fail@plt+0xb968>
   1cd2c:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1cd30:	ldr	r0, [sp, #4]
   1cd34:	mov	sp, fp
   1cd38:	pop	{fp, pc}
   1cd3c:	push	{fp, lr}
   1cd40:	mov	fp, sp
   1cd44:	sub	sp, sp, #8
   1cd48:	str	r0, [sp, #4]
   1cd4c:	str	r1, [sp]
   1cd50:	ldr	r0, [sp, #4]
   1cd54:	ldr	r1, [sp]
   1cd58:	bl	20a98 <__assert_fail@plt+0xf6d0>
   1cd5c:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1cd60:	mov	sp, fp
   1cd64:	pop	{fp, pc}
   1cd68:	push	{fp, lr}
   1cd6c:	mov	fp, sp
   1cd70:	sub	sp, sp, #16
   1cd74:	str	r0, [fp, #-4]
   1cd78:	str	r1, [sp, #8]
   1cd7c:	str	r2, [sp, #4]
   1cd80:	ldr	r0, [fp, #-4]
   1cd84:	ldr	r1, [sp, #8]
   1cd88:	ldr	r2, [sp, #4]
   1cd8c:	bl	20b90 <__assert_fail@plt+0xf7c8>
   1cd90:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1cd94:	mov	sp, fp
   1cd98:	pop	{fp, pc}
   1cd9c:	push	{fp, lr}
   1cda0:	mov	fp, sp
   1cda4:	sub	sp, sp, #8
   1cda8:	str	r0, [sp, #4]
   1cdac:	str	r1, [sp]
   1cdb0:	ldr	r1, [sp, #4]
   1cdb4:	ldr	r2, [sp]
   1cdb8:	movw	r0, #0
   1cdbc:	bl	1cbd0 <__assert_fail@plt+0xb808>
   1cdc0:	mov	sp, fp
   1cdc4:	pop	{fp, pc}
   1cdc8:	push	{fp, lr}
   1cdcc:	mov	fp, sp
   1cdd0:	sub	sp, sp, #8
   1cdd4:	str	r0, [sp, #4]
   1cdd8:	str	r1, [sp]
   1cddc:	ldr	r1, [sp, #4]
   1cde0:	ldr	r2, [sp]
   1cde4:	movw	r0, #0
   1cde8:	bl	1cd68 <__assert_fail@plt+0xb9a0>
   1cdec:	mov	sp, fp
   1cdf0:	pop	{fp, pc}
   1cdf4:	push	{fp, lr}
   1cdf8:	mov	fp, sp
   1cdfc:	sub	sp, sp, #8
   1ce00:	str	r0, [sp, #4]
   1ce04:	str	r1, [sp]
   1ce08:	ldr	r0, [sp, #4]
   1ce0c:	ldr	r1, [sp]
   1ce10:	movw	r2, #1
   1ce14:	bl	1ce20 <__assert_fail@plt+0xba58>
   1ce18:	mov	sp, fp
   1ce1c:	pop	{fp, pc}
   1ce20:	push	{fp, lr}
   1ce24:	mov	fp, sp
   1ce28:	sub	sp, sp, #16
   1ce2c:	str	r0, [fp, #-4]
   1ce30:	str	r1, [sp, #8]
   1ce34:	str	r2, [sp, #4]
   1ce38:	ldr	r0, [sp, #8]
   1ce3c:	ldr	r0, [r0]
   1ce40:	str	r0, [sp]
   1ce44:	ldr	r0, [fp, #-4]
   1ce48:	movw	r1, #0
   1ce4c:	cmp	r0, r1
   1ce50:	bne	1ce9c <__assert_fail@plt+0xbad4>
   1ce54:	ldr	r0, [sp]
   1ce58:	cmp	r0, #0
   1ce5c:	bne	1ce98 <__assert_fail@plt+0xbad0>
   1ce60:	ldr	r0, [sp, #4]
   1ce64:	movw	r1, #64	; 0x40
   1ce68:	udiv	r0, r1, r0
   1ce6c:	str	r0, [sp]
   1ce70:	ldr	r0, [sp]
   1ce74:	cmp	r0, #0
   1ce78:	movw	r0, #0
   1ce7c:	movne	r0, #1
   1ce80:	mvn	r1, #0
   1ce84:	eor	r0, r0, r1
   1ce88:	and	r0, r0, #1
   1ce8c:	ldr	r1, [sp]
   1ce90:	add	r0, r1, r0
   1ce94:	str	r0, [sp]
   1ce98:	b	1cecc <__assert_fail@plt+0xbb04>
   1ce9c:	ldr	r0, [sp]
   1cea0:	ldr	r1, [sp]
   1cea4:	lsr	r1, r1, #1
   1cea8:	add	r1, r1, #1
   1ceac:	adds	r0, r0, r1
   1ceb0:	mov	r1, #0
   1ceb4:	adc	r1, r1, #0
   1ceb8:	str	r0, [sp]
   1cebc:	tst	r1, #1
   1cec0:	beq	1cec8 <__assert_fail@plt+0xbb00>
   1cec4:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1cec8:	b	1cecc <__assert_fail@plt+0xbb04>
   1cecc:	ldr	r0, [fp, #-4]
   1ced0:	ldr	r1, [sp]
   1ced4:	ldr	r2, [sp, #4]
   1ced8:	bl	1cbd0 <__assert_fail@plt+0xb808>
   1cedc:	str	r0, [fp, #-4]
   1cee0:	ldr	r0, [sp]
   1cee4:	ldr	r1, [sp, #8]
   1cee8:	str	r0, [r1]
   1ceec:	ldr	r0, [fp, #-4]
   1cef0:	mov	sp, fp
   1cef4:	pop	{fp, pc}
   1cef8:	push	{fp, lr}
   1cefc:	mov	fp, sp
   1cf00:	sub	sp, sp, #216	; 0xd8
   1cf04:	ldr	ip, [fp, #8]
   1cf08:	str	r0, [fp, #-4]
   1cf0c:	str	r1, [fp, #-8]
   1cf10:	str	r2, [fp, #-12]
   1cf14:	str	r3, [fp, #-16]
   1cf18:	ldr	r0, [fp, #-8]
   1cf1c:	ldr	r0, [r0]
   1cf20:	str	r0, [fp, #-20]	; 0xffffffec
   1cf24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf2c:	asr	r1, r1, #1
   1cf30:	add	r1, r0, r1
   1cf34:	mov	r2, #1
   1cf38:	cmp	r1, r0
   1cf3c:	movwvc	r2, #0
   1cf40:	str	r1, [fp, #-24]	; 0xffffffe8
   1cf44:	tst	r2, #1
   1cf48:	beq	1cf54 <__assert_fail@plt+0xbb8c>
   1cf4c:	ldr	r0, [pc, #4036]	; 1df18 <__assert_fail@plt+0xcb50>
   1cf50:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf54:	ldr	r0, [fp, #-16]
   1cf58:	movw	r1, #0
   1cf5c:	cmp	r1, r0
   1cf60:	bgt	1cf7c <__assert_fail@plt+0xbbb4>
   1cf64:	ldr	r0, [fp, #-16]
   1cf68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf6c:	cmp	r0, r1
   1cf70:	bge	1cf7c <__assert_fail@plt+0xbbb4>
   1cf74:	ldr	r0, [fp, #-16]
   1cf78:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf7c:	b	1d354 <__assert_fail@plt+0xbf8c>
   1cf80:	b	1cf84 <__assert_fail@plt+0xbbbc>
   1cf84:	ldr	r0, [fp, #8]
   1cf88:	cmp	r0, #0
   1cf8c:	bge	1d0a0 <__assert_fail@plt+0xbcd8>
   1cf90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf94:	cmp	r0, #0
   1cf98:	bge	1d024 <__assert_fail@plt+0xbc5c>
   1cf9c:	b	1cfa0 <__assert_fail@plt+0xbbd8>
   1cfa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfa4:	ldr	r1, [fp, #8]
   1cfa8:	movw	r2, #127	; 0x7f
   1cfac:	sdiv	r1, r2, r1
   1cfb0:	cmp	r0, r1
   1cfb4:	blt	1d140 <__assert_fail@plt+0xbd78>
   1cfb8:	b	1d158 <__assert_fail@plt+0xbd90>
   1cfbc:	b	1cfc0 <__assert_fail@plt+0xbbf8>
   1cfc0:	ldr	r0, [pc, #4084]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1cfc4:	ldr	r1, [fp, #8]
   1cfc8:	cmp	r1, r0
   1cfcc:	blt	1cfe4 <__assert_fail@plt+0xbc1c>
   1cfd0:	b	1cff0 <__assert_fail@plt+0xbc28>
   1cfd4:	ldr	r0, [fp, #8]
   1cfd8:	movw	r1, #0
   1cfdc:	cmp	r1, r0
   1cfe0:	bge	1cff0 <__assert_fail@plt+0xbc28>
   1cfe4:	movw	r0, #0
   1cfe8:	str	r0, [fp, #-36]	; 0xffffffdc
   1cfec:	b	1d008 <__assert_fail@plt+0xbc40>
   1cff0:	ldr	r0, [fp, #8]
   1cff4:	movw	r1, #0
   1cff8:	sub	r0, r1, r0
   1cffc:	movw	r1, #127	; 0x7f
   1d000:	sdiv	r0, r1, r0
   1d004:	str	r0, [fp, #-36]	; 0xffffffdc
   1d008:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d00c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d010:	mvn	r2, #0
   1d014:	sub	r1, r2, r1
   1d018:	cmp	r0, r1
   1d01c:	ble	1d140 <__assert_fail@plt+0xbd78>
   1d020:	b	1d158 <__assert_fail@plt+0xbd90>
   1d024:	b	1d028 <__assert_fail@plt+0xbc60>
   1d028:	b	1d084 <__assert_fail@plt+0xbcbc>
   1d02c:	b	1d084 <__assert_fail@plt+0xbcbc>
   1d030:	ldr	r0, [fp, #8]
   1d034:	cmn	r0, #1
   1d038:	bne	1d084 <__assert_fail@plt+0xbcbc>
   1d03c:	b	1d040 <__assert_fail@plt+0xbc78>
   1d040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d044:	mvn	r1, #127	; 0x7f
   1d048:	add	r0, r0, r1
   1d04c:	movw	r1, #0
   1d050:	cmp	r1, r0
   1d054:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d058:	b	1d158 <__assert_fail@plt+0xbd90>
   1d05c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d060:	movw	r1, #0
   1d064:	cmp	r1, r0
   1d068:	bge	1d158 <__assert_fail@plt+0xbd90>
   1d06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d070:	sub	r0, r0, #1
   1d074:	movw	r1, #127	; 0x7f
   1d078:	cmp	r1, r0
   1d07c:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d080:	b	1d158 <__assert_fail@plt+0xbd90>
   1d084:	ldr	r0, [fp, #8]
   1d088:	mvn	r1, #127	; 0x7f
   1d08c:	sdiv	r0, r1, r0
   1d090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d094:	cmp	r0, r1
   1d098:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d09c:	b	1d158 <__assert_fail@plt+0xbd90>
   1d0a0:	ldr	r0, [fp, #8]
   1d0a4:	cmp	r0, #0
   1d0a8:	bne	1d0b0 <__assert_fail@plt+0xbce8>
   1d0ac:	b	1d158 <__assert_fail@plt+0xbd90>
   1d0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0b4:	cmp	r0, #0
   1d0b8:	bge	1d128 <__assert_fail@plt+0xbd60>
   1d0bc:	b	1d0c0 <__assert_fail@plt+0xbcf8>
   1d0c0:	b	1d10c <__assert_fail@plt+0xbd44>
   1d0c4:	b	1d10c <__assert_fail@plt+0xbd44>
   1d0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0cc:	cmn	r0, #1
   1d0d0:	bne	1d10c <__assert_fail@plt+0xbd44>
   1d0d4:	b	1d0d8 <__assert_fail@plt+0xbd10>
   1d0d8:	ldr	r0, [fp, #8]
   1d0dc:	mvn	r1, #127	; 0x7f
   1d0e0:	add	r0, r0, r1
   1d0e4:	movw	r1, #0
   1d0e8:	cmp	r1, r0
   1d0ec:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d0f0:	b	1d158 <__assert_fail@plt+0xbd90>
   1d0f4:	ldr	r0, [fp, #8]
   1d0f8:	sub	r0, r0, #1
   1d0fc:	movw	r1, #127	; 0x7f
   1d100:	cmp	r1, r0
   1d104:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d108:	b	1d158 <__assert_fail@plt+0xbd90>
   1d10c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d110:	mvn	r1, #127	; 0x7f
   1d114:	sdiv	r0, r1, r0
   1d118:	ldr	r1, [fp, #8]
   1d11c:	cmp	r0, r1
   1d120:	blt	1d140 <__assert_fail@plt+0xbd78>
   1d124:	b	1d158 <__assert_fail@plt+0xbd90>
   1d128:	ldr	r0, [fp, #8]
   1d12c:	movw	r1, #127	; 0x7f
   1d130:	sdiv	r0, r1, r0
   1d134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d138:	cmp	r0, r1
   1d13c:	bge	1d158 <__assert_fail@plt+0xbd90>
   1d140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d144:	ldr	r1, [fp, #8]
   1d148:	mul	r0, r0, r1
   1d14c:	sxtb	r0, r0
   1d150:	str	r0, [fp, #-28]	; 0xffffffe4
   1d154:	b	1e31c <__assert_fail@plt+0xcf54>
   1d158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d15c:	ldr	r1, [fp, #8]
   1d160:	mul	r0, r0, r1
   1d164:	sxtb	r0, r0
   1d168:	str	r0, [fp, #-28]	; 0xffffffe4
   1d16c:	b	1e328 <__assert_fail@plt+0xcf60>
   1d170:	ldr	r0, [fp, #8]
   1d174:	cmp	r0, #0
   1d178:	bge	1d288 <__assert_fail@plt+0xbec0>
   1d17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d180:	cmp	r0, #0
   1d184:	bge	1d210 <__assert_fail@plt+0xbe48>
   1d188:	b	1d18c <__assert_fail@plt+0xbdc4>
   1d18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d190:	ldr	r1, [fp, #8]
   1d194:	movw	r2, #255	; 0xff
   1d198:	sdiv	r1, r2, r1
   1d19c:	cmp	r0, r1
   1d1a0:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d1a4:	b	1d33c <__assert_fail@plt+0xbf74>
   1d1a8:	b	1d1ac <__assert_fail@plt+0xbde4>
   1d1ac:	ldr	r0, [pc, #3592]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1d1b0:	ldr	r1, [fp, #8]
   1d1b4:	cmp	r1, r0
   1d1b8:	blt	1d1d0 <__assert_fail@plt+0xbe08>
   1d1bc:	b	1d1dc <__assert_fail@plt+0xbe14>
   1d1c0:	ldr	r0, [fp, #8]
   1d1c4:	movw	r1, #0
   1d1c8:	cmp	r1, r0
   1d1cc:	bge	1d1dc <__assert_fail@plt+0xbe14>
   1d1d0:	movw	r0, #0
   1d1d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1d1d8:	b	1d1f4 <__assert_fail@plt+0xbe2c>
   1d1dc:	ldr	r0, [fp, #8]
   1d1e0:	movw	r1, #0
   1d1e4:	sub	r0, r1, r0
   1d1e8:	movw	r1, #255	; 0xff
   1d1ec:	sdiv	r0, r1, r0
   1d1f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d1f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1fc:	mvn	r2, #0
   1d200:	sub	r1, r2, r1
   1d204:	cmp	r0, r1
   1d208:	ble	1d324 <__assert_fail@plt+0xbf5c>
   1d20c:	b	1d33c <__assert_fail@plt+0xbf74>
   1d210:	b	1d214 <__assert_fail@plt+0xbe4c>
   1d214:	b	1d26c <__assert_fail@plt+0xbea4>
   1d218:	b	1d26c <__assert_fail@plt+0xbea4>
   1d21c:	ldr	r0, [fp, #8]
   1d220:	cmn	r0, #1
   1d224:	bne	1d26c <__assert_fail@plt+0xbea4>
   1d228:	b	1d22c <__assert_fail@plt+0xbe64>
   1d22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d230:	add	r0, r0, #0
   1d234:	movw	r1, #0
   1d238:	cmp	r1, r0
   1d23c:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d240:	b	1d33c <__assert_fail@plt+0xbf74>
   1d244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d248:	movw	r1, #0
   1d24c:	cmp	r1, r0
   1d250:	bge	1d33c <__assert_fail@plt+0xbf74>
   1d254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d258:	sub	r0, r0, #1
   1d25c:	mvn	r1, #0
   1d260:	cmp	r1, r0
   1d264:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d268:	b	1d33c <__assert_fail@plt+0xbf74>
   1d26c:	ldr	r0, [fp, #8]
   1d270:	movw	r1, #0
   1d274:	sdiv	r0, r1, r0
   1d278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d27c:	cmp	r0, r1
   1d280:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d284:	b	1d33c <__assert_fail@plt+0xbf74>
   1d288:	ldr	r0, [fp, #8]
   1d28c:	cmp	r0, #0
   1d290:	bne	1d298 <__assert_fail@plt+0xbed0>
   1d294:	b	1d33c <__assert_fail@plt+0xbf74>
   1d298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d29c:	cmp	r0, #0
   1d2a0:	bge	1d30c <__assert_fail@plt+0xbf44>
   1d2a4:	b	1d2a8 <__assert_fail@plt+0xbee0>
   1d2a8:	b	1d2f0 <__assert_fail@plt+0xbf28>
   1d2ac:	b	1d2f0 <__assert_fail@plt+0xbf28>
   1d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b4:	cmn	r0, #1
   1d2b8:	bne	1d2f0 <__assert_fail@plt+0xbf28>
   1d2bc:	b	1d2c0 <__assert_fail@plt+0xbef8>
   1d2c0:	ldr	r0, [fp, #8]
   1d2c4:	add	r0, r0, #0
   1d2c8:	movw	r1, #0
   1d2cc:	cmp	r1, r0
   1d2d0:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d2d4:	b	1d33c <__assert_fail@plt+0xbf74>
   1d2d8:	ldr	r0, [fp, #8]
   1d2dc:	sub	r0, r0, #1
   1d2e0:	mvn	r1, #0
   1d2e4:	cmp	r1, r0
   1d2e8:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d2ec:	b	1d33c <__assert_fail@plt+0xbf74>
   1d2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f4:	movw	r1, #0
   1d2f8:	sdiv	r0, r1, r0
   1d2fc:	ldr	r1, [fp, #8]
   1d300:	cmp	r0, r1
   1d304:	blt	1d324 <__assert_fail@plt+0xbf5c>
   1d308:	b	1d33c <__assert_fail@plt+0xbf74>
   1d30c:	ldr	r0, [fp, #8]
   1d310:	movw	r1, #255	; 0xff
   1d314:	sdiv	r0, r1, r0
   1d318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d31c:	cmp	r0, r1
   1d320:	bge	1d33c <__assert_fail@plt+0xbf74>
   1d324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d328:	ldr	r1, [fp, #8]
   1d32c:	mul	r0, r0, r1
   1d330:	and	r0, r0, #255	; 0xff
   1d334:	str	r0, [fp, #-28]	; 0xffffffe4
   1d338:	b	1e31c <__assert_fail@plt+0xcf54>
   1d33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d340:	ldr	r1, [fp, #8]
   1d344:	mul	r0, r0, r1
   1d348:	and	r0, r0, #255	; 0xff
   1d34c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d350:	b	1e328 <__assert_fail@plt+0xcf60>
   1d354:	b	1d72c <__assert_fail@plt+0xc364>
   1d358:	b	1d35c <__assert_fail@plt+0xbf94>
   1d35c:	ldr	r0, [fp, #8]
   1d360:	cmp	r0, #0
   1d364:	bge	1d478 <__assert_fail@plt+0xc0b0>
   1d368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d36c:	cmp	r0, #0
   1d370:	bge	1d3fc <__assert_fail@plt+0xc034>
   1d374:	b	1d378 <__assert_fail@plt+0xbfb0>
   1d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d37c:	ldr	r1, [fp, #8]
   1d380:	movw	r2, #32767	; 0x7fff
   1d384:	sdiv	r1, r2, r1
   1d388:	cmp	r0, r1
   1d38c:	blt	1d518 <__assert_fail@plt+0xc150>
   1d390:	b	1d530 <__assert_fail@plt+0xc168>
   1d394:	b	1d398 <__assert_fail@plt+0xbfd0>
   1d398:	ldr	r0, [pc, #3100]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1d39c:	ldr	r1, [fp, #8]
   1d3a0:	cmp	r1, r0
   1d3a4:	blt	1d3bc <__assert_fail@plt+0xbff4>
   1d3a8:	b	1d3c8 <__assert_fail@plt+0xc000>
   1d3ac:	ldr	r0, [fp, #8]
   1d3b0:	movw	r1, #0
   1d3b4:	cmp	r1, r0
   1d3b8:	bge	1d3c8 <__assert_fail@plt+0xc000>
   1d3bc:	movw	r0, #0
   1d3c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1d3c4:	b	1d3e0 <__assert_fail@plt+0xc018>
   1d3c8:	ldr	r0, [fp, #8]
   1d3cc:	movw	r1, #0
   1d3d0:	sub	r0, r1, r0
   1d3d4:	movw	r1, #32767	; 0x7fff
   1d3d8:	sdiv	r0, r1, r0
   1d3dc:	str	r0, [fp, #-44]	; 0xffffffd4
   1d3e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3e8:	mvn	r2, #0
   1d3ec:	sub	r1, r2, r1
   1d3f0:	cmp	r0, r1
   1d3f4:	ble	1d518 <__assert_fail@plt+0xc150>
   1d3f8:	b	1d530 <__assert_fail@plt+0xc168>
   1d3fc:	b	1d400 <__assert_fail@plt+0xc038>
   1d400:	b	1d45c <__assert_fail@plt+0xc094>
   1d404:	b	1d45c <__assert_fail@plt+0xc094>
   1d408:	ldr	r0, [fp, #8]
   1d40c:	cmn	r0, #1
   1d410:	bne	1d45c <__assert_fail@plt+0xc094>
   1d414:	b	1d418 <__assert_fail@plt+0xc050>
   1d418:	ldr	r0, [pc, #4068]	; 1e404 <__assert_fail@plt+0xd03c>
   1d41c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d420:	add	r0, r1, r0
   1d424:	movw	r1, #0
   1d428:	cmp	r1, r0
   1d42c:	blt	1d518 <__assert_fail@plt+0xc150>
   1d430:	b	1d530 <__assert_fail@plt+0xc168>
   1d434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d438:	movw	r1, #0
   1d43c:	cmp	r1, r0
   1d440:	bge	1d530 <__assert_fail@plt+0xc168>
   1d444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d448:	sub	r0, r0, #1
   1d44c:	movw	r1, #32767	; 0x7fff
   1d450:	cmp	r1, r0
   1d454:	blt	1d518 <__assert_fail@plt+0xc150>
   1d458:	b	1d530 <__assert_fail@plt+0xc168>
   1d45c:	ldr	r0, [pc, #4000]	; 1e404 <__assert_fail@plt+0xd03c>
   1d460:	ldr	r1, [fp, #8]
   1d464:	sdiv	r0, r0, r1
   1d468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d46c:	cmp	r0, r1
   1d470:	blt	1d518 <__assert_fail@plt+0xc150>
   1d474:	b	1d530 <__assert_fail@plt+0xc168>
   1d478:	ldr	r0, [fp, #8]
   1d47c:	cmp	r0, #0
   1d480:	bne	1d488 <__assert_fail@plt+0xc0c0>
   1d484:	b	1d530 <__assert_fail@plt+0xc168>
   1d488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d48c:	cmp	r0, #0
   1d490:	bge	1d500 <__assert_fail@plt+0xc138>
   1d494:	b	1d498 <__assert_fail@plt+0xc0d0>
   1d498:	b	1d4e4 <__assert_fail@plt+0xc11c>
   1d49c:	b	1d4e4 <__assert_fail@plt+0xc11c>
   1d4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a4:	cmn	r0, #1
   1d4a8:	bne	1d4e4 <__assert_fail@plt+0xc11c>
   1d4ac:	b	1d4b0 <__assert_fail@plt+0xc0e8>
   1d4b0:	ldr	r0, [pc, #3916]	; 1e404 <__assert_fail@plt+0xd03c>
   1d4b4:	ldr	r1, [fp, #8]
   1d4b8:	add	r0, r1, r0
   1d4bc:	movw	r1, #0
   1d4c0:	cmp	r1, r0
   1d4c4:	blt	1d518 <__assert_fail@plt+0xc150>
   1d4c8:	b	1d530 <__assert_fail@plt+0xc168>
   1d4cc:	ldr	r0, [fp, #8]
   1d4d0:	sub	r0, r0, #1
   1d4d4:	movw	r1, #32767	; 0x7fff
   1d4d8:	cmp	r1, r0
   1d4dc:	blt	1d518 <__assert_fail@plt+0xc150>
   1d4e0:	b	1d530 <__assert_fail@plt+0xc168>
   1d4e4:	ldr	r0, [pc, #3864]	; 1e404 <__assert_fail@plt+0xd03c>
   1d4e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4ec:	sdiv	r0, r0, r1
   1d4f0:	ldr	r1, [fp, #8]
   1d4f4:	cmp	r0, r1
   1d4f8:	blt	1d518 <__assert_fail@plt+0xc150>
   1d4fc:	b	1d530 <__assert_fail@plt+0xc168>
   1d500:	ldr	r0, [fp, #8]
   1d504:	movw	r1, #32767	; 0x7fff
   1d508:	sdiv	r0, r1, r0
   1d50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d510:	cmp	r0, r1
   1d514:	bge	1d530 <__assert_fail@plt+0xc168>
   1d518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d51c:	ldr	r1, [fp, #8]
   1d520:	mul	r0, r0, r1
   1d524:	sxth	r0, r0
   1d528:	str	r0, [fp, #-28]	; 0xffffffe4
   1d52c:	b	1e31c <__assert_fail@plt+0xcf54>
   1d530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d534:	ldr	r1, [fp, #8]
   1d538:	mul	r0, r0, r1
   1d53c:	sxth	r0, r0
   1d540:	str	r0, [fp, #-28]	; 0xffffffe4
   1d544:	b	1e328 <__assert_fail@plt+0xcf60>
   1d548:	ldr	r0, [fp, #8]
   1d54c:	cmp	r0, #0
   1d550:	bge	1d660 <__assert_fail@plt+0xc298>
   1d554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d558:	cmp	r0, #0
   1d55c:	bge	1d5e8 <__assert_fail@plt+0xc220>
   1d560:	b	1d564 <__assert_fail@plt+0xc19c>
   1d564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d568:	ldr	r1, [fp, #8]
   1d56c:	movw	r2, #65535	; 0xffff
   1d570:	sdiv	r1, r2, r1
   1d574:	cmp	r0, r1
   1d578:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d57c:	b	1d714 <__assert_fail@plt+0xc34c>
   1d580:	b	1d584 <__assert_fail@plt+0xc1bc>
   1d584:	ldr	r0, [pc, #2608]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1d588:	ldr	r1, [fp, #8]
   1d58c:	cmp	r1, r0
   1d590:	blt	1d5a8 <__assert_fail@plt+0xc1e0>
   1d594:	b	1d5b4 <__assert_fail@plt+0xc1ec>
   1d598:	ldr	r0, [fp, #8]
   1d59c:	movw	r1, #0
   1d5a0:	cmp	r1, r0
   1d5a4:	bge	1d5b4 <__assert_fail@plt+0xc1ec>
   1d5a8:	movw	r0, #0
   1d5ac:	str	r0, [fp, #-48]	; 0xffffffd0
   1d5b0:	b	1d5cc <__assert_fail@plt+0xc204>
   1d5b4:	ldr	r0, [fp, #8]
   1d5b8:	movw	r1, #0
   1d5bc:	sub	r0, r1, r0
   1d5c0:	movw	r1, #65535	; 0xffff
   1d5c4:	sdiv	r0, r1, r0
   1d5c8:	str	r0, [fp, #-48]	; 0xffffffd0
   1d5cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d5d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5d4:	mvn	r2, #0
   1d5d8:	sub	r1, r2, r1
   1d5dc:	cmp	r0, r1
   1d5e0:	ble	1d6fc <__assert_fail@plt+0xc334>
   1d5e4:	b	1d714 <__assert_fail@plt+0xc34c>
   1d5e8:	b	1d5ec <__assert_fail@plt+0xc224>
   1d5ec:	b	1d644 <__assert_fail@plt+0xc27c>
   1d5f0:	b	1d644 <__assert_fail@plt+0xc27c>
   1d5f4:	ldr	r0, [fp, #8]
   1d5f8:	cmn	r0, #1
   1d5fc:	bne	1d644 <__assert_fail@plt+0xc27c>
   1d600:	b	1d604 <__assert_fail@plt+0xc23c>
   1d604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d608:	add	r0, r0, #0
   1d60c:	movw	r1, #0
   1d610:	cmp	r1, r0
   1d614:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d618:	b	1d714 <__assert_fail@plt+0xc34c>
   1d61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d620:	movw	r1, #0
   1d624:	cmp	r1, r0
   1d628:	bge	1d714 <__assert_fail@plt+0xc34c>
   1d62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d630:	sub	r0, r0, #1
   1d634:	mvn	r1, #0
   1d638:	cmp	r1, r0
   1d63c:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d640:	b	1d714 <__assert_fail@plt+0xc34c>
   1d644:	ldr	r0, [fp, #8]
   1d648:	movw	r1, #0
   1d64c:	sdiv	r0, r1, r0
   1d650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d654:	cmp	r0, r1
   1d658:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d65c:	b	1d714 <__assert_fail@plt+0xc34c>
   1d660:	ldr	r0, [fp, #8]
   1d664:	cmp	r0, #0
   1d668:	bne	1d670 <__assert_fail@plt+0xc2a8>
   1d66c:	b	1d714 <__assert_fail@plt+0xc34c>
   1d670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d674:	cmp	r0, #0
   1d678:	bge	1d6e4 <__assert_fail@plt+0xc31c>
   1d67c:	b	1d680 <__assert_fail@plt+0xc2b8>
   1d680:	b	1d6c8 <__assert_fail@plt+0xc300>
   1d684:	b	1d6c8 <__assert_fail@plt+0xc300>
   1d688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d68c:	cmn	r0, #1
   1d690:	bne	1d6c8 <__assert_fail@plt+0xc300>
   1d694:	b	1d698 <__assert_fail@plt+0xc2d0>
   1d698:	ldr	r0, [fp, #8]
   1d69c:	add	r0, r0, #0
   1d6a0:	movw	r1, #0
   1d6a4:	cmp	r1, r0
   1d6a8:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d6ac:	b	1d714 <__assert_fail@plt+0xc34c>
   1d6b0:	ldr	r0, [fp, #8]
   1d6b4:	sub	r0, r0, #1
   1d6b8:	mvn	r1, #0
   1d6bc:	cmp	r1, r0
   1d6c0:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d6c4:	b	1d714 <__assert_fail@plt+0xc34c>
   1d6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6cc:	movw	r1, #0
   1d6d0:	sdiv	r0, r1, r0
   1d6d4:	ldr	r1, [fp, #8]
   1d6d8:	cmp	r0, r1
   1d6dc:	blt	1d6fc <__assert_fail@plt+0xc334>
   1d6e0:	b	1d714 <__assert_fail@plt+0xc34c>
   1d6e4:	ldr	r0, [fp, #8]
   1d6e8:	movw	r1, #65535	; 0xffff
   1d6ec:	sdiv	r0, r1, r0
   1d6f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6f4:	cmp	r0, r1
   1d6f8:	bge	1d714 <__assert_fail@plt+0xc34c>
   1d6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d700:	ldr	r1, [fp, #8]
   1d704:	mul	r0, r0, r1
   1d708:	uxth	r0, r0
   1d70c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d710:	b	1e31c <__assert_fail@plt+0xcf54>
   1d714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d718:	ldr	r1, [fp, #8]
   1d71c:	mul	r0, r0, r1
   1d720:	uxth	r0, r0
   1d724:	str	r0, [fp, #-28]	; 0xffffffe4
   1d728:	b	1e328 <__assert_fail@plt+0xcf60>
   1d72c:	b	1d730 <__assert_fail@plt+0xc368>
   1d730:	b	1d734 <__assert_fail@plt+0xc36c>
   1d734:	ldr	r0, [fp, #8]
   1d738:	cmp	r0, #0
   1d73c:	bge	1d840 <__assert_fail@plt+0xc478>
   1d740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d744:	cmp	r0, #0
   1d748:	bge	1d7d4 <__assert_fail@plt+0xc40c>
   1d74c:	b	1d750 <__assert_fail@plt+0xc388>
   1d750:	ldr	r0, [pc, #1984]	; 1df18 <__assert_fail@plt+0xcb50>
   1d754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d758:	ldr	r2, [fp, #8]
   1d75c:	sdiv	r0, r0, r2
   1d760:	cmp	r1, r0
   1d764:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d768:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d76c:	b	1d770 <__assert_fail@plt+0xc3a8>
   1d770:	ldr	r0, [pc, #2116]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1d774:	ldr	r1, [fp, #8]
   1d778:	cmp	r1, r0
   1d77c:	blt	1d794 <__assert_fail@plt+0xc3cc>
   1d780:	b	1d7a0 <__assert_fail@plt+0xc3d8>
   1d784:	ldr	r0, [fp, #8]
   1d788:	movw	r1, #0
   1d78c:	cmp	r1, r0
   1d790:	bge	1d7a0 <__assert_fail@plt+0xc3d8>
   1d794:	movw	r0, #0
   1d798:	str	r0, [fp, #-52]	; 0xffffffcc
   1d79c:	b	1d7b8 <__assert_fail@plt+0xc3f0>
   1d7a0:	ldr	r0, [pc, #1904]	; 1df18 <__assert_fail@plt+0xcb50>
   1d7a4:	ldr	r1, [fp, #8]
   1d7a8:	movw	r2, #0
   1d7ac:	sub	r1, r2, r1
   1d7b0:	sdiv	r0, r0, r1
   1d7b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1d7b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d7bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7c0:	mvn	r2, #0
   1d7c4:	sub	r1, r2, r1
   1d7c8:	cmp	r0, r1
   1d7cc:	ble	1d8d0 <__assert_fail@plt+0xc508>
   1d7d0:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d7d4:	ldr	r0, [fp, #8]
   1d7d8:	cmn	r0, #1
   1d7dc:	bne	1d824 <__assert_fail@plt+0xc45c>
   1d7e0:	b	1d7e4 <__assert_fail@plt+0xc41c>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	add	r0, r0, #-2147483648	; 0x80000000
   1d7ec:	movw	r1, #0
   1d7f0:	cmp	r1, r0
   1d7f4:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d7f8:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d800:	movw	r1, #0
   1d804:	cmp	r1, r0
   1d808:	bge	1d8e4 <__assert_fail@plt+0xc51c>
   1d80c:	ldr	r0, [pc, #1796]	; 1df18 <__assert_fail@plt+0xcb50>
   1d810:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d814:	sub	r1, r1, #1
   1d818:	cmp	r0, r1
   1d81c:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d820:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d824:	ldr	r0, [pc, #4080]	; 1e81c <__assert_fail@plt+0xd454>
   1d828:	ldr	r1, [fp, #8]
   1d82c:	sdiv	r0, r0, r1
   1d830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d834:	cmp	r0, r1
   1d838:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d83c:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d840:	ldr	r0, [fp, #8]
   1d844:	cmp	r0, #0
   1d848:	bne	1d850 <__assert_fail@plt+0xc488>
   1d84c:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d854:	cmp	r0, #0
   1d858:	bge	1d8b8 <__assert_fail@plt+0xc4f0>
   1d85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d860:	cmn	r0, #1
   1d864:	bne	1d89c <__assert_fail@plt+0xc4d4>
   1d868:	b	1d86c <__assert_fail@plt+0xc4a4>
   1d86c:	ldr	r0, [fp, #8]
   1d870:	add	r0, r0, #-2147483648	; 0x80000000
   1d874:	movw	r1, #0
   1d878:	cmp	r1, r0
   1d87c:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d880:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d884:	ldr	r0, [pc, #1676]	; 1df18 <__assert_fail@plt+0xcb50>
   1d888:	ldr	r1, [fp, #8]
   1d88c:	sub	r1, r1, #1
   1d890:	cmp	r0, r1
   1d894:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d898:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d89c:	ldr	r0, [pc, #3960]	; 1e81c <__assert_fail@plt+0xd454>
   1d8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8a4:	sdiv	r0, r0, r1
   1d8a8:	ldr	r1, [fp, #8]
   1d8ac:	cmp	r0, r1
   1d8b0:	blt	1d8d0 <__assert_fail@plt+0xc508>
   1d8b4:	b	1d8e4 <__assert_fail@plt+0xc51c>
   1d8b8:	ldr	r0, [pc, #1624]	; 1df18 <__assert_fail@plt+0xcb50>
   1d8bc:	ldr	r1, [fp, #8]
   1d8c0:	sdiv	r0, r0, r1
   1d8c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8c8:	cmp	r0, r1
   1d8cc:	bge	1d8e4 <__assert_fail@plt+0xc51c>
   1d8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8d4:	ldr	r1, [fp, #8]
   1d8d8:	mul	r0, r0, r1
   1d8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8e0:	b	1e31c <__assert_fail@plt+0xcf54>
   1d8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8e8:	ldr	r1, [fp, #8]
   1d8ec:	mul	r0, r0, r1
   1d8f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8f4:	b	1e328 <__assert_fail@plt+0xcf60>
   1d8f8:	ldr	r0, [fp, #8]
   1d8fc:	cmp	r0, #0
   1d900:	bge	1da10 <__assert_fail@plt+0xc648>
   1d904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d908:	cmp	r0, #0
   1d90c:	bge	1d998 <__assert_fail@plt+0xc5d0>
   1d910:	b	1d930 <__assert_fail@plt+0xc568>
   1d914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d918:	ldr	r1, [fp, #8]
   1d91c:	mvn	r2, #0
   1d920:	udiv	r1, r2, r1
   1d924:	cmp	r0, r1
   1d928:	bcc	1daac <__assert_fail@plt+0xc6e4>
   1d92c:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1d930:	b	1d934 <__assert_fail@plt+0xc56c>
   1d934:	ldr	r0, [pc, #1664]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1d938:	ldr	r1, [fp, #8]
   1d93c:	cmp	r1, r0
   1d940:	blt	1d958 <__assert_fail@plt+0xc590>
   1d944:	b	1d964 <__assert_fail@plt+0xc59c>
   1d948:	ldr	r0, [fp, #8]
   1d94c:	movw	r1, #0
   1d950:	cmp	r1, r0
   1d954:	bge	1d964 <__assert_fail@plt+0xc59c>
   1d958:	movw	r0, #1
   1d95c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d960:	b	1d97c <__assert_fail@plt+0xc5b4>
   1d964:	ldr	r0, [fp, #8]
   1d968:	movw	r1, #0
   1d96c:	sub	r0, r1, r0
   1d970:	mvn	r1, #0
   1d974:	udiv	r0, r1, r0
   1d978:	str	r0, [fp, #-56]	; 0xffffffc8
   1d97c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d984:	mvn	r2, #0
   1d988:	sub	r1, r2, r1
   1d98c:	cmp	r0, r1
   1d990:	bls	1daac <__assert_fail@plt+0xc6e4>
   1d994:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1d998:	b	1d99c <__assert_fail@plt+0xc5d4>
   1d99c:	b	1d9f4 <__assert_fail@plt+0xc62c>
   1d9a0:	b	1d9f4 <__assert_fail@plt+0xc62c>
   1d9a4:	ldr	r0, [fp, #8]
   1d9a8:	cmn	r0, #1
   1d9ac:	bne	1d9f4 <__assert_fail@plt+0xc62c>
   1d9b0:	b	1d9b4 <__assert_fail@plt+0xc5ec>
   1d9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9b8:	add	r0, r0, #0
   1d9bc:	movw	r1, #0
   1d9c0:	cmp	r1, r0
   1d9c4:	blt	1daac <__assert_fail@plt+0xc6e4>
   1d9c8:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1d9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9d0:	movw	r1, #0
   1d9d4:	cmp	r1, r0
   1d9d8:	bge	1dac0 <__assert_fail@plt+0xc6f8>
   1d9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9e0:	sub	r0, r0, #1
   1d9e4:	mvn	r1, #0
   1d9e8:	cmp	r1, r0
   1d9ec:	blt	1daac <__assert_fail@plt+0xc6e4>
   1d9f0:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1d9f4:	ldr	r0, [fp, #8]
   1d9f8:	movw	r1, #0
   1d9fc:	sdiv	r0, r1, r0
   1da00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da04:	cmp	r0, r1
   1da08:	blt	1daac <__assert_fail@plt+0xc6e4>
   1da0c:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1da10:	ldr	r0, [fp, #8]
   1da14:	cmp	r0, #0
   1da18:	bne	1da20 <__assert_fail@plt+0xc658>
   1da1c:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1da20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da24:	cmp	r0, #0
   1da28:	bge	1da94 <__assert_fail@plt+0xc6cc>
   1da2c:	b	1da30 <__assert_fail@plt+0xc668>
   1da30:	b	1da78 <__assert_fail@plt+0xc6b0>
   1da34:	b	1da78 <__assert_fail@plt+0xc6b0>
   1da38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da3c:	cmn	r0, #1
   1da40:	bne	1da78 <__assert_fail@plt+0xc6b0>
   1da44:	b	1da48 <__assert_fail@plt+0xc680>
   1da48:	ldr	r0, [fp, #8]
   1da4c:	add	r0, r0, #0
   1da50:	movw	r1, #0
   1da54:	cmp	r1, r0
   1da58:	blt	1daac <__assert_fail@plt+0xc6e4>
   1da5c:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1da60:	ldr	r0, [fp, #8]
   1da64:	sub	r0, r0, #1
   1da68:	mvn	r1, #0
   1da6c:	cmp	r1, r0
   1da70:	blt	1daac <__assert_fail@plt+0xc6e4>
   1da74:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1da78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da7c:	movw	r1, #0
   1da80:	sdiv	r0, r1, r0
   1da84:	ldr	r1, [fp, #8]
   1da88:	cmp	r0, r1
   1da8c:	blt	1daac <__assert_fail@plt+0xc6e4>
   1da90:	b	1dac0 <__assert_fail@plt+0xc6f8>
   1da94:	ldr	r0, [fp, #8]
   1da98:	mvn	r1, #0
   1da9c:	udiv	r0, r1, r0
   1daa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1daa4:	cmp	r0, r1
   1daa8:	bcs	1dac0 <__assert_fail@plt+0xc6f8>
   1daac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dab0:	ldr	r1, [fp, #8]
   1dab4:	mul	r0, r0, r1
   1dab8:	str	r0, [fp, #-28]	; 0xffffffe4
   1dabc:	b	1e31c <__assert_fail@plt+0xcf54>
   1dac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dac4:	ldr	r1, [fp, #8]
   1dac8:	mul	r0, r0, r1
   1dacc:	str	r0, [fp, #-28]	; 0xffffffe4
   1dad0:	b	1e328 <__assert_fail@plt+0xcf60>
   1dad4:	b	1dad8 <__assert_fail@plt+0xc710>
   1dad8:	b	1dadc <__assert_fail@plt+0xc714>
   1dadc:	ldr	r0, [fp, #8]
   1dae0:	cmp	r0, #0
   1dae4:	bge	1dbe8 <__assert_fail@plt+0xc820>
   1dae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daec:	cmp	r0, #0
   1daf0:	bge	1db7c <__assert_fail@plt+0xc7b4>
   1daf4:	b	1daf8 <__assert_fail@plt+0xc730>
   1daf8:	ldr	r0, [pc, #1048]	; 1df18 <__assert_fail@plt+0xcb50>
   1dafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db00:	ldr	r2, [fp, #8]
   1db04:	sdiv	r0, r0, r2
   1db08:	cmp	r1, r0
   1db0c:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1db10:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1db14:	b	1db18 <__assert_fail@plt+0xc750>
   1db18:	ldr	r0, [pc, #1180]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1db1c:	ldr	r1, [fp, #8]
   1db20:	cmp	r1, r0
   1db24:	blt	1db3c <__assert_fail@plt+0xc774>
   1db28:	b	1db48 <__assert_fail@plt+0xc780>
   1db2c:	ldr	r0, [fp, #8]
   1db30:	movw	r1, #0
   1db34:	cmp	r1, r0
   1db38:	bge	1db48 <__assert_fail@plt+0xc780>
   1db3c:	movw	r0, #0
   1db40:	str	r0, [fp, #-60]	; 0xffffffc4
   1db44:	b	1db60 <__assert_fail@plt+0xc798>
   1db48:	ldr	r0, [pc, #968]	; 1df18 <__assert_fail@plt+0xcb50>
   1db4c:	ldr	r1, [fp, #8]
   1db50:	movw	r2, #0
   1db54:	sub	r1, r2, r1
   1db58:	sdiv	r0, r0, r1
   1db5c:	str	r0, [fp, #-60]	; 0xffffffc4
   1db60:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1db64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db68:	mvn	r2, #0
   1db6c:	sub	r1, r2, r1
   1db70:	cmp	r0, r1
   1db74:	ble	1dc78 <__assert_fail@plt+0xc8b0>
   1db78:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1db7c:	ldr	r0, [fp, #8]
   1db80:	cmn	r0, #1
   1db84:	bne	1dbcc <__assert_fail@plt+0xc804>
   1db88:	b	1db8c <__assert_fail@plt+0xc7c4>
   1db8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db90:	add	r0, r0, #-2147483648	; 0x80000000
   1db94:	movw	r1, #0
   1db98:	cmp	r1, r0
   1db9c:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dba0:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dba8:	movw	r1, #0
   1dbac:	cmp	r1, r0
   1dbb0:	bge	1dc8c <__assert_fail@plt+0xc8c4>
   1dbb4:	ldr	r0, [pc, #860]	; 1df18 <__assert_fail@plt+0xcb50>
   1dbb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbbc:	sub	r1, r1, #1
   1dbc0:	cmp	r0, r1
   1dbc4:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dbc8:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dbcc:	ldr	r0, [pc, #3144]	; 1e81c <__assert_fail@plt+0xd454>
   1dbd0:	ldr	r1, [fp, #8]
   1dbd4:	sdiv	r0, r0, r1
   1dbd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbdc:	cmp	r0, r1
   1dbe0:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dbe4:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dbe8:	ldr	r0, [fp, #8]
   1dbec:	cmp	r0, #0
   1dbf0:	bne	1dbf8 <__assert_fail@plt+0xc830>
   1dbf4:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbfc:	cmp	r0, #0
   1dc00:	bge	1dc60 <__assert_fail@plt+0xc898>
   1dc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc08:	cmn	r0, #1
   1dc0c:	bne	1dc44 <__assert_fail@plt+0xc87c>
   1dc10:	b	1dc14 <__assert_fail@plt+0xc84c>
   1dc14:	ldr	r0, [fp, #8]
   1dc18:	add	r0, r0, #-2147483648	; 0x80000000
   1dc1c:	movw	r1, #0
   1dc20:	cmp	r1, r0
   1dc24:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dc28:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dc2c:	ldr	r0, [pc, #740]	; 1df18 <__assert_fail@plt+0xcb50>
   1dc30:	ldr	r1, [fp, #8]
   1dc34:	sub	r1, r1, #1
   1dc38:	cmp	r0, r1
   1dc3c:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dc40:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dc44:	ldr	r0, [pc, #3024]	; 1e81c <__assert_fail@plt+0xd454>
   1dc48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc4c:	sdiv	r0, r0, r1
   1dc50:	ldr	r1, [fp, #8]
   1dc54:	cmp	r0, r1
   1dc58:	blt	1dc78 <__assert_fail@plt+0xc8b0>
   1dc5c:	b	1dc8c <__assert_fail@plt+0xc8c4>
   1dc60:	ldr	r0, [pc, #688]	; 1df18 <__assert_fail@plt+0xcb50>
   1dc64:	ldr	r1, [fp, #8]
   1dc68:	sdiv	r0, r0, r1
   1dc6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc70:	cmp	r0, r1
   1dc74:	bge	1dc8c <__assert_fail@plt+0xc8c4>
   1dc78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc7c:	ldr	r1, [fp, #8]
   1dc80:	mul	r0, r0, r1
   1dc84:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc88:	b	1e31c <__assert_fail@plt+0xcf54>
   1dc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc90:	ldr	r1, [fp, #8]
   1dc94:	mul	r0, r0, r1
   1dc98:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc9c:	b	1e328 <__assert_fail@plt+0xcf60>
   1dca0:	ldr	r0, [fp, #8]
   1dca4:	cmp	r0, #0
   1dca8:	bge	1ddb8 <__assert_fail@plt+0xc9f0>
   1dcac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcb0:	cmp	r0, #0
   1dcb4:	bge	1dd40 <__assert_fail@plt+0xc978>
   1dcb8:	b	1dcd8 <__assert_fail@plt+0xc910>
   1dcbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcc0:	ldr	r1, [fp, #8]
   1dcc4:	mvn	r2, #0
   1dcc8:	udiv	r1, r2, r1
   1dccc:	cmp	r0, r1
   1dcd0:	bcc	1de54 <__assert_fail@plt+0xca8c>
   1dcd4:	b	1de68 <__assert_fail@plt+0xcaa0>
   1dcd8:	b	1dcdc <__assert_fail@plt+0xc914>
   1dcdc:	ldr	r0, [pc, #728]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1dce0:	ldr	r1, [fp, #8]
   1dce4:	cmp	r1, r0
   1dce8:	blt	1dd00 <__assert_fail@plt+0xc938>
   1dcec:	b	1dd0c <__assert_fail@plt+0xc944>
   1dcf0:	ldr	r0, [fp, #8]
   1dcf4:	movw	r1, #0
   1dcf8:	cmp	r1, r0
   1dcfc:	bge	1dd0c <__assert_fail@plt+0xc944>
   1dd00:	movw	r0, #1
   1dd04:	str	r0, [fp, #-64]	; 0xffffffc0
   1dd08:	b	1dd24 <__assert_fail@plt+0xc95c>
   1dd0c:	ldr	r0, [fp, #8]
   1dd10:	movw	r1, #0
   1dd14:	sub	r0, r1, r0
   1dd18:	mvn	r1, #0
   1dd1c:	udiv	r0, r1, r0
   1dd20:	str	r0, [fp, #-64]	; 0xffffffc0
   1dd24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1dd28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd2c:	mvn	r2, #0
   1dd30:	sub	r1, r2, r1
   1dd34:	cmp	r0, r1
   1dd38:	bls	1de54 <__assert_fail@plt+0xca8c>
   1dd3c:	b	1de68 <__assert_fail@plt+0xcaa0>
   1dd40:	b	1dd44 <__assert_fail@plt+0xc97c>
   1dd44:	b	1dd9c <__assert_fail@plt+0xc9d4>
   1dd48:	b	1dd9c <__assert_fail@plt+0xc9d4>
   1dd4c:	ldr	r0, [fp, #8]
   1dd50:	cmn	r0, #1
   1dd54:	bne	1dd9c <__assert_fail@plt+0xc9d4>
   1dd58:	b	1dd5c <__assert_fail@plt+0xc994>
   1dd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd60:	add	r0, r0, #0
   1dd64:	movw	r1, #0
   1dd68:	cmp	r1, r0
   1dd6c:	blt	1de54 <__assert_fail@plt+0xca8c>
   1dd70:	b	1de68 <__assert_fail@plt+0xcaa0>
   1dd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd78:	movw	r1, #0
   1dd7c:	cmp	r1, r0
   1dd80:	bge	1de68 <__assert_fail@plt+0xcaa0>
   1dd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd88:	sub	r0, r0, #1
   1dd8c:	mvn	r1, #0
   1dd90:	cmp	r1, r0
   1dd94:	blt	1de54 <__assert_fail@plt+0xca8c>
   1dd98:	b	1de68 <__assert_fail@plt+0xcaa0>
   1dd9c:	ldr	r0, [fp, #8]
   1dda0:	movw	r1, #0
   1dda4:	sdiv	r0, r1, r0
   1dda8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ddac:	cmp	r0, r1
   1ddb0:	blt	1de54 <__assert_fail@plt+0xca8c>
   1ddb4:	b	1de68 <__assert_fail@plt+0xcaa0>
   1ddb8:	ldr	r0, [fp, #8]
   1ddbc:	cmp	r0, #0
   1ddc0:	bne	1ddc8 <__assert_fail@plt+0xca00>
   1ddc4:	b	1de68 <__assert_fail@plt+0xcaa0>
   1ddc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddcc:	cmp	r0, #0
   1ddd0:	bge	1de3c <__assert_fail@plt+0xca74>
   1ddd4:	b	1ddd8 <__assert_fail@plt+0xca10>
   1ddd8:	b	1de20 <__assert_fail@plt+0xca58>
   1dddc:	b	1de20 <__assert_fail@plt+0xca58>
   1dde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dde4:	cmn	r0, #1
   1dde8:	bne	1de20 <__assert_fail@plt+0xca58>
   1ddec:	b	1ddf0 <__assert_fail@plt+0xca28>
   1ddf0:	ldr	r0, [fp, #8]
   1ddf4:	add	r0, r0, #0
   1ddf8:	movw	r1, #0
   1ddfc:	cmp	r1, r0
   1de00:	blt	1de54 <__assert_fail@plt+0xca8c>
   1de04:	b	1de68 <__assert_fail@plt+0xcaa0>
   1de08:	ldr	r0, [fp, #8]
   1de0c:	sub	r0, r0, #1
   1de10:	mvn	r1, #0
   1de14:	cmp	r1, r0
   1de18:	blt	1de54 <__assert_fail@plt+0xca8c>
   1de1c:	b	1de68 <__assert_fail@plt+0xcaa0>
   1de20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de24:	movw	r1, #0
   1de28:	sdiv	r0, r1, r0
   1de2c:	ldr	r1, [fp, #8]
   1de30:	cmp	r0, r1
   1de34:	blt	1de54 <__assert_fail@plt+0xca8c>
   1de38:	b	1de68 <__assert_fail@plt+0xcaa0>
   1de3c:	ldr	r0, [fp, #8]
   1de40:	mvn	r1, #0
   1de44:	udiv	r0, r1, r0
   1de48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de4c:	cmp	r0, r1
   1de50:	bcs	1de68 <__assert_fail@plt+0xcaa0>
   1de54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de58:	ldr	r1, [fp, #8]
   1de5c:	mul	r0, r0, r1
   1de60:	str	r0, [fp, #-28]	; 0xffffffe4
   1de64:	b	1e31c <__assert_fail@plt+0xcf54>
   1de68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de6c:	ldr	r1, [fp, #8]
   1de70:	mul	r0, r0, r1
   1de74:	str	r0, [fp, #-28]	; 0xffffffe4
   1de78:	b	1e328 <__assert_fail@plt+0xcf60>
   1de7c:	b	1de80 <__assert_fail@plt+0xcab8>
   1de80:	ldr	r0, [fp, #8]
   1de84:	cmp	r0, #0
   1de88:	bge	1dff8 <__assert_fail@plt+0xcc30>
   1de8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de90:	cmp	r0, #0
   1de94:	bge	1df70 <__assert_fail@plt+0xcba8>
   1de98:	b	1de9c <__assert_fail@plt+0xcad4>
   1de9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dea0:	ldr	r1, [fp, #8]
   1dea4:	asr	r3, r1, #31
   1dea8:	mvn	r2, #0
   1deac:	mvn	ip, #-2147483648	; 0x80000000
   1deb0:	str	r0, [fp, #-68]	; 0xffffffbc
   1deb4:	mov	r0, r2
   1deb8:	str	r1, [fp, #-72]	; 0xffffffb8
   1debc:	mov	r1, ip
   1dec0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1dec4:	bl	228bc <__assert_fail@plt+0x114f4>
   1dec8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1decc:	subs	r0, r2, r0
   1ded0:	rscs	r1, r1, r2, asr #31
   1ded4:	blt	1e0c0 <__assert_fail@plt+0xccf8>
   1ded8:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1dedc:	b	1dee0 <__assert_fail@plt+0xcb18>
   1dee0:	ldr	r0, [pc, #212]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1dee4:	ldr	r1, [fp, #8]
   1dee8:	cmp	r1, r0
   1deec:	blt	1df04 <__assert_fail@plt+0xcb3c>
   1def0:	b	1df1c <__assert_fail@plt+0xcb54>
   1def4:	ldr	r0, [fp, #8]
   1def8:	movw	r1, #0
   1defc:	cmp	r1, r0
   1df00:	bge	1df1c <__assert_fail@plt+0xcb54>
   1df04:	mov	r0, #0
   1df08:	mvn	r1, #0
   1df0c:	str	r1, [fp, #-76]	; 0xffffffb4
   1df10:	str	r0, [fp, #-80]	; 0xffffffb0
   1df14:	b	1df50 <__assert_fail@plt+0xcb88>
   1df18:	svcvc	0x00ffffff
   1df1c:	ldr	r0, [fp, #8]
   1df20:	rsb	r0, r0, #0
   1df24:	asr	r3, r0, #31
   1df28:	mvn	r1, #0
   1df2c:	mvn	r2, #-2147483648	; 0x80000000
   1df30:	str	r0, [fp, #-84]	; 0xffffffac
   1df34:	mov	r0, r1
   1df38:	mov	r1, r2
   1df3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1df40:	bl	228bc <__assert_fail@plt+0x114f4>
   1df44:	str	r0, [fp, #-76]	; 0xffffffb4
   1df48:	str	r1, [fp, #-80]	; 0xffffffb0
   1df4c:	b	1df50 <__assert_fail@plt+0xcb88>
   1df50:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1df54:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1df58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df5c:	mvn	r2, r2
   1df60:	subs	r1, r2, r1
   1df64:	rscs	r0, r0, r2, asr #31
   1df68:	bge	1e0c0 <__assert_fail@plt+0xccf8>
   1df6c:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1df70:	ldr	r0, [fp, #8]
   1df74:	cmn	r0, #1
   1df78:	bne	1dfc0 <__assert_fail@plt+0xcbf8>
   1df7c:	b	1df80 <__assert_fail@plt+0xcbb8>
   1df80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df84:	mov	r1, #-2147483648	; 0x80000000
   1df88:	add	r1, r1, r0, asr #31
   1df8c:	rsbs	r0, r0, #0
   1df90:	rscs	r1, r1, #0
   1df94:	blt	1e0c0 <__assert_fail@plt+0xccf8>
   1df98:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1df9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfa0:	movw	r1, #0
   1dfa4:	cmp	r1, r0
   1dfa8:	bge	1e0d4 <__assert_fail@plt+0xcd0c>
   1dfac:	mov	r0, #0
   1dfb0:	cmp	r0, #0
   1dfb4:	bne	1e0c0 <__assert_fail@plt+0xccf8>
   1dfb8:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1dfbc:	andhi	r0, r0, r1
   1dfc0:	ldr	r0, [fp, #8]
   1dfc4:	asr	r3, r0, #31
   1dfc8:	mov	r1, #0
   1dfcc:	mov	r2, #-2147483648	; 0x80000000
   1dfd0:	str	r0, [fp, #-88]	; 0xffffffa8
   1dfd4:	mov	r0, r1
   1dfd8:	mov	r1, r2
   1dfdc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1dfe0:	bl	228bc <__assert_fail@plt+0x114f4>
   1dfe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dfe8:	subs	r0, r0, r2
   1dfec:	sbcs	r1, r1, r2, asr #31
   1dff0:	blt	1e0c0 <__assert_fail@plt+0xccf8>
   1dff4:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1dff8:	ldr	r0, [fp, #8]
   1dffc:	cmp	r0, #0
   1e000:	bne	1e008 <__assert_fail@plt+0xcc40>
   1e004:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1e008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e00c:	cmp	r0, #0
   1e010:	bge	1e088 <__assert_fail@plt+0xccc0>
   1e014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e018:	cmn	r0, #1
   1e01c:	bne	1e050 <__assert_fail@plt+0xcc88>
   1e020:	b	1e024 <__assert_fail@plt+0xcc5c>
   1e024:	ldr	r0, [fp, #8]
   1e028:	mov	r1, #-2147483648	; 0x80000000
   1e02c:	add	r1, r1, r0, asr #31
   1e030:	rsbs	r0, r0, #0
   1e034:	rscs	r1, r1, #0
   1e038:	blt	1e0c0 <__assert_fail@plt+0xccf8>
   1e03c:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1e040:	mov	r0, #0
   1e044:	cmp	r0, #0
   1e048:	bne	1e0c0 <__assert_fail@plt+0xccf8>
   1e04c:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1e050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e054:	asr	r3, r0, #31
   1e058:	mov	r1, #0
   1e05c:	mov	r2, #-2147483648	; 0x80000000
   1e060:	str	r0, [fp, #-92]	; 0xffffffa4
   1e064:	mov	r0, r1
   1e068:	mov	r1, r2
   1e06c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1e070:	bl	228bc <__assert_fail@plt+0x114f4>
   1e074:	ldr	r2, [fp, #8]
   1e078:	subs	r0, r0, r2
   1e07c:	sbcs	r1, r1, r2, asr #31
   1e080:	blt	1e0c0 <__assert_fail@plt+0xccf8>
   1e084:	b	1e0d4 <__assert_fail@plt+0xcd0c>
   1e088:	ldr	r0, [fp, #8]
   1e08c:	asr	r3, r0, #31
   1e090:	mvn	r1, #0
   1e094:	mvn	r2, #-2147483648	; 0x80000000
   1e098:	str	r0, [fp, #-96]	; 0xffffffa0
   1e09c:	mov	r0, r1
   1e0a0:	mov	r1, r2
   1e0a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1e0a8:	bl	228bc <__assert_fail@plt+0x114f4>
   1e0ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0b0:	subs	r0, r0, r2
   1e0b4:	sbcs	r1, r1, r2, asr #31
   1e0b8:	bge	1e0d4 <__assert_fail@plt+0xcd0c>
   1e0bc:	b	1e0c0 <__assert_fail@plt+0xccf8>
   1e0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c4:	ldr	r1, [fp, #8]
   1e0c8:	mul	r0, r0, r1
   1e0cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0d0:	b	1e31c <__assert_fail@plt+0xcf54>
   1e0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0d8:	ldr	r1, [fp, #8]
   1e0dc:	mul	r0, r0, r1
   1e0e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0e4:	b	1e328 <__assert_fail@plt+0xcf60>
   1e0e8:	ldr	r0, [fp, #8]
   1e0ec:	cmp	r0, #0
   1e0f0:	bge	1e240 <__assert_fail@plt+0xce78>
   1e0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0f8:	cmp	r0, #0
   1e0fc:	bge	1e1c8 <__assert_fail@plt+0xce00>
   1e100:	b	1e140 <__assert_fail@plt+0xcd78>
   1e104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e108:	ldr	r1, [fp, #8]
   1e10c:	asr	r3, r1, #31
   1e110:	mvn	r2, #0
   1e114:	str	r0, [fp, #-100]	; 0xffffff9c
   1e118:	mov	r0, r2
   1e11c:	str	r1, [fp, #-104]	; 0xffffff98
   1e120:	mov	r1, r2
   1e124:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e128:	bl	22990 <__assert_fail@plt+0x115c8>
   1e12c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1e130:	subs	r0, r2, r0
   1e134:	rscs	r1, r1, r2, asr #31
   1e138:	bcc	1e2f4 <__assert_fail@plt+0xcf2c>
   1e13c:	b	1e308 <__assert_fail@plt+0xcf40>
   1e140:	b	1e144 <__assert_fail@plt+0xcd7c>
   1e144:	ldr	r0, [pc, #-400]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1e148:	ldr	r1, [fp, #8]
   1e14c:	cmp	r1, r0
   1e150:	blt	1e168 <__assert_fail@plt+0xcda0>
   1e154:	b	1e17c <__assert_fail@plt+0xcdb4>
   1e158:	ldr	r0, [fp, #8]
   1e15c:	movw	r1, #0
   1e160:	cmp	r1, r0
   1e164:	bge	1e17c <__assert_fail@plt+0xcdb4>
   1e168:	mov	r0, #1
   1e16c:	mvn	r1, #0
   1e170:	str	r1, [sp, #108]	; 0x6c
   1e174:	str	r0, [sp, #104]	; 0x68
   1e178:	b	1e1a8 <__assert_fail@plt+0xcde0>
   1e17c:	ldr	r0, [fp, #8]
   1e180:	rsb	r0, r0, #0
   1e184:	asr	r3, r0, #31
   1e188:	mvn	r1, #0
   1e18c:	str	r0, [sp, #100]	; 0x64
   1e190:	mov	r0, r1
   1e194:	ldr	r2, [sp, #100]	; 0x64
   1e198:	bl	22990 <__assert_fail@plt+0x115c8>
   1e19c:	str	r0, [sp, #108]	; 0x6c
   1e1a0:	str	r1, [sp, #104]	; 0x68
   1e1a4:	b	1e1a8 <__assert_fail@plt+0xcde0>
   1e1a8:	ldr	r0, [sp, #104]	; 0x68
   1e1ac:	ldr	r1, [sp, #108]	; 0x6c
   1e1b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1b4:	mvn	r2, r2
   1e1b8:	subs	r1, r2, r1
   1e1bc:	rscs	r0, r0, r2, asr #31
   1e1c0:	bcs	1e2f4 <__assert_fail@plt+0xcf2c>
   1e1c4:	b	1e308 <__assert_fail@plt+0xcf40>
   1e1c8:	b	1e1cc <__assert_fail@plt+0xce04>
   1e1cc:	b	1e224 <__assert_fail@plt+0xce5c>
   1e1d0:	b	1e224 <__assert_fail@plt+0xce5c>
   1e1d4:	ldr	r0, [fp, #8]
   1e1d8:	cmn	r0, #1
   1e1dc:	bne	1e224 <__assert_fail@plt+0xce5c>
   1e1e0:	b	1e1e4 <__assert_fail@plt+0xce1c>
   1e1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1e8:	add	r0, r0, #0
   1e1ec:	movw	r1, #0
   1e1f0:	cmp	r1, r0
   1e1f4:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e1f8:	b	1e308 <__assert_fail@plt+0xcf40>
   1e1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e200:	movw	r1, #0
   1e204:	cmp	r1, r0
   1e208:	bge	1e308 <__assert_fail@plt+0xcf40>
   1e20c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e210:	sub	r0, r0, #1
   1e214:	mvn	r1, #0
   1e218:	cmp	r1, r0
   1e21c:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e220:	b	1e308 <__assert_fail@plt+0xcf40>
   1e224:	ldr	r0, [fp, #8]
   1e228:	movw	r1, #0
   1e22c:	sdiv	r0, r1, r0
   1e230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e234:	cmp	r0, r1
   1e238:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e23c:	b	1e308 <__assert_fail@plt+0xcf40>
   1e240:	ldr	r0, [fp, #8]
   1e244:	cmp	r0, #0
   1e248:	bne	1e250 <__assert_fail@plt+0xce88>
   1e24c:	b	1e308 <__assert_fail@plt+0xcf40>
   1e250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e254:	cmp	r0, #0
   1e258:	bge	1e2c4 <__assert_fail@plt+0xcefc>
   1e25c:	b	1e260 <__assert_fail@plt+0xce98>
   1e260:	b	1e2a8 <__assert_fail@plt+0xcee0>
   1e264:	b	1e2a8 <__assert_fail@plt+0xcee0>
   1e268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e26c:	cmn	r0, #1
   1e270:	bne	1e2a8 <__assert_fail@plt+0xcee0>
   1e274:	b	1e278 <__assert_fail@plt+0xceb0>
   1e278:	ldr	r0, [fp, #8]
   1e27c:	add	r0, r0, #0
   1e280:	movw	r1, #0
   1e284:	cmp	r1, r0
   1e288:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e28c:	b	1e308 <__assert_fail@plt+0xcf40>
   1e290:	ldr	r0, [fp, #8]
   1e294:	sub	r0, r0, #1
   1e298:	mvn	r1, #0
   1e29c:	cmp	r1, r0
   1e2a0:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e2a4:	b	1e308 <__assert_fail@plt+0xcf40>
   1e2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2ac:	movw	r1, #0
   1e2b0:	sdiv	r0, r1, r0
   1e2b4:	ldr	r1, [fp, #8]
   1e2b8:	cmp	r0, r1
   1e2bc:	blt	1e2f4 <__assert_fail@plt+0xcf2c>
   1e2c0:	b	1e308 <__assert_fail@plt+0xcf40>
   1e2c4:	ldr	r0, [fp, #8]
   1e2c8:	asr	r3, r0, #31
   1e2cc:	mvn	r1, #0
   1e2d0:	str	r0, [sp, #96]	; 0x60
   1e2d4:	mov	r0, r1
   1e2d8:	ldr	r2, [sp, #96]	; 0x60
   1e2dc:	bl	22990 <__assert_fail@plt+0x115c8>
   1e2e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e2e4:	subs	r0, r0, r2
   1e2e8:	sbcs	r1, r1, r2, asr #31
   1e2ec:	bcs	1e308 <__assert_fail@plt+0xcf40>
   1e2f0:	b	1e2f4 <__assert_fail@plt+0xcf2c>
   1e2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2f8:	ldr	r1, [fp, #8]
   1e2fc:	mul	r0, r0, r1
   1e300:	str	r0, [fp, #-28]	; 0xffffffe4
   1e304:	b	1e31c <__assert_fail@plt+0xcf54>
   1e308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e30c:	ldr	r1, [fp, #8]
   1e310:	mul	r0, r0, r1
   1e314:	str	r0, [fp, #-28]	; 0xffffffe4
   1e318:	b	1e328 <__assert_fail@plt+0xcf60>
   1e31c:	ldr	r0, [pc, #-1036]	; 1df18 <__assert_fail@plt+0xcb50>
   1e320:	str	r0, [sp, #92]	; 0x5c
   1e324:	b	1e348 <__assert_fail@plt+0xcf80>
   1e328:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e32c:	cmp	r0, #64	; 0x40
   1e330:	movw	r0, #0
   1e334:	movlt	r0, #1
   1e338:	tst	r0, #1
   1e33c:	movw	r0, #64	; 0x40
   1e340:	moveq	r0, #0
   1e344:	str	r0, [sp, #92]	; 0x5c
   1e348:	ldr	r0, [sp, #92]	; 0x5c
   1e34c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e354:	cmp	r0, #0
   1e358:	beq	1e388 <__assert_fail@plt+0xcfc0>
   1e35c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e360:	ldr	r1, [fp, #8]
   1e364:	sdiv	r0, r0, r1
   1e368:	str	r0, [fp, #-24]	; 0xffffffe8
   1e36c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e370:	mov	r1, r0
   1e374:	ldr	r2, [fp, #8]
   1e378:	sdiv	r3, r0, r2
   1e37c:	mls	r0, r3, r2, r0
   1e380:	sub	r0, r1, r0
   1e384:	str	r0, [fp, #-28]	; 0xffffffe4
   1e388:	ldr	r0, [fp, #-4]
   1e38c:	movw	r1, #0
   1e390:	cmp	r0, r1
   1e394:	bne	1e3a4 <__assert_fail@plt+0xcfdc>
   1e398:	ldr	r0, [fp, #-8]
   1e39c:	movw	r1, #0
   1e3a0:	str	r1, [r0]
   1e3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e3ac:	sub	r0, r0, r1
   1e3b0:	ldr	r1, [fp, #-12]
   1e3b4:	cmp	r0, r1
   1e3b8:	bge	1f7a4 <__assert_fail@plt+0xe3dc>
   1e3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e3c0:	ldr	r1, [fp, #-12]
   1e3c4:	add	r1, r0, r1
   1e3c8:	mov	r2, #1
   1e3cc:	cmp	r1, r0
   1e3d0:	movwvc	r2, #0
   1e3d4:	str	r1, [fp, #-24]	; 0xffffffe8
   1e3d8:	tst	r2, #1
   1e3dc:	bne	1f7a0 <__assert_fail@plt+0xe3d8>
   1e3e0:	ldr	r0, [fp, #-16]
   1e3e4:	movw	r1, #0
   1e3e8:	cmp	r1, r0
   1e3ec:	bgt	1e400 <__assert_fail@plt+0xd038>
   1e3f0:	ldr	r0, [fp, #-16]
   1e3f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3f8:	cmp	r0, r1
   1e3fc:	blt	1f7a0 <__assert_fail@plt+0xe3d8>
   1e400:	b	1e7dc <__assert_fail@plt+0xd414>
   1e404:			; <UNDEFINED> instruction: 0xffff8000
   1e408:	b	1e40c <__assert_fail@plt+0xd044>
   1e40c:	ldr	r0, [fp, #8]
   1e410:	cmp	r0, #0
   1e414:	bge	1e528 <__assert_fail@plt+0xd160>
   1e418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e41c:	cmp	r0, #0
   1e420:	bge	1e4ac <__assert_fail@plt+0xd0e4>
   1e424:	b	1e428 <__assert_fail@plt+0xd060>
   1e428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e42c:	ldr	r1, [fp, #8]
   1e430:	movw	r2, #127	; 0x7f
   1e434:	sdiv	r1, r2, r1
   1e438:	cmp	r0, r1
   1e43c:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e440:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e444:	b	1e448 <__assert_fail@plt+0xd080>
   1e448:	ldr	r0, [pc, #-1172]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1e44c:	ldr	r1, [fp, #8]
   1e450:	cmp	r1, r0
   1e454:	blt	1e46c <__assert_fail@plt+0xd0a4>
   1e458:	b	1e478 <__assert_fail@plt+0xd0b0>
   1e45c:	ldr	r0, [fp, #8]
   1e460:	movw	r1, #0
   1e464:	cmp	r1, r0
   1e468:	bge	1e478 <__assert_fail@plt+0xd0b0>
   1e46c:	movw	r0, #0
   1e470:	str	r0, [sp, #88]	; 0x58
   1e474:	b	1e490 <__assert_fail@plt+0xd0c8>
   1e478:	ldr	r0, [fp, #8]
   1e47c:	movw	r1, #0
   1e480:	sub	r0, r1, r0
   1e484:	movw	r1, #127	; 0x7f
   1e488:	sdiv	r0, r1, r0
   1e48c:	str	r0, [sp, #88]	; 0x58
   1e490:	ldr	r0, [sp, #88]	; 0x58
   1e494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e498:	mvn	r2, #0
   1e49c:	sub	r1, r2, r1
   1e4a0:	cmp	r0, r1
   1e4a4:	ble	1e5c8 <__assert_fail@plt+0xd200>
   1e4a8:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e4ac:	b	1e4b0 <__assert_fail@plt+0xd0e8>
   1e4b0:	b	1e50c <__assert_fail@plt+0xd144>
   1e4b4:	b	1e50c <__assert_fail@plt+0xd144>
   1e4b8:	ldr	r0, [fp, #8]
   1e4bc:	cmn	r0, #1
   1e4c0:	bne	1e50c <__assert_fail@plt+0xd144>
   1e4c4:	b	1e4c8 <__assert_fail@plt+0xd100>
   1e4c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4cc:	mvn	r1, #127	; 0x7f
   1e4d0:	add	r0, r0, r1
   1e4d4:	movw	r1, #0
   1e4d8:	cmp	r1, r0
   1e4dc:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e4e0:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e8:	movw	r1, #0
   1e4ec:	cmp	r1, r0
   1e4f0:	bge	1e5e0 <__assert_fail@plt+0xd218>
   1e4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f8:	sub	r0, r0, #1
   1e4fc:	movw	r1, #127	; 0x7f
   1e500:	cmp	r1, r0
   1e504:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e508:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e50c:	ldr	r0, [fp, #8]
   1e510:	mvn	r1, #127	; 0x7f
   1e514:	sdiv	r0, r1, r0
   1e518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e51c:	cmp	r0, r1
   1e520:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e524:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e528:	ldr	r0, [fp, #8]
   1e52c:	cmp	r0, #0
   1e530:	bne	1e538 <__assert_fail@plt+0xd170>
   1e534:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e53c:	cmp	r0, #0
   1e540:	bge	1e5b0 <__assert_fail@plt+0xd1e8>
   1e544:	b	1e548 <__assert_fail@plt+0xd180>
   1e548:	b	1e594 <__assert_fail@plt+0xd1cc>
   1e54c:	b	1e594 <__assert_fail@plt+0xd1cc>
   1e550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e554:	cmn	r0, #1
   1e558:	bne	1e594 <__assert_fail@plt+0xd1cc>
   1e55c:	b	1e560 <__assert_fail@plt+0xd198>
   1e560:	ldr	r0, [fp, #8]
   1e564:	mvn	r1, #127	; 0x7f
   1e568:	add	r0, r0, r1
   1e56c:	movw	r1, #0
   1e570:	cmp	r1, r0
   1e574:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e578:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e57c:	ldr	r0, [fp, #8]
   1e580:	sub	r0, r0, #1
   1e584:	movw	r1, #127	; 0x7f
   1e588:	cmp	r1, r0
   1e58c:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e590:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e598:	mvn	r1, #127	; 0x7f
   1e59c:	sdiv	r0, r1, r0
   1e5a0:	ldr	r1, [fp, #8]
   1e5a4:	cmp	r0, r1
   1e5a8:	blt	1e5c8 <__assert_fail@plt+0xd200>
   1e5ac:	b	1e5e0 <__assert_fail@plt+0xd218>
   1e5b0:	ldr	r0, [fp, #8]
   1e5b4:	movw	r1, #127	; 0x7f
   1e5b8:	sdiv	r0, r1, r0
   1e5bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5c0:	cmp	r0, r1
   1e5c4:	bge	1e5e0 <__assert_fail@plt+0xd218>
   1e5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5cc:	ldr	r1, [fp, #8]
   1e5d0:	mul	r0, r0, r1
   1e5d4:	sxtb	r0, r0
   1e5d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5dc:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1e5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5e4:	ldr	r1, [fp, #8]
   1e5e8:	mul	r0, r0, r1
   1e5ec:	sxtb	r0, r0
   1e5f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5f4:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1e5f8:	ldr	r0, [fp, #8]
   1e5fc:	cmp	r0, #0
   1e600:	bge	1e710 <__assert_fail@plt+0xd348>
   1e604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e608:	cmp	r0, #0
   1e60c:	bge	1e698 <__assert_fail@plt+0xd2d0>
   1e610:	b	1e614 <__assert_fail@plt+0xd24c>
   1e614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e618:	ldr	r1, [fp, #8]
   1e61c:	movw	r2, #255	; 0xff
   1e620:	sdiv	r1, r2, r1
   1e624:	cmp	r0, r1
   1e628:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e62c:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e630:	b	1e634 <__assert_fail@plt+0xd26c>
   1e634:	ldr	r0, [pc, #-1664]	; 1dfbc <__assert_fail@plt+0xcbf4>
   1e638:	ldr	r1, [fp, #8]
   1e63c:	cmp	r1, r0
   1e640:	blt	1e658 <__assert_fail@plt+0xd290>
   1e644:	b	1e664 <__assert_fail@plt+0xd29c>
   1e648:	ldr	r0, [fp, #8]
   1e64c:	movw	r1, #0
   1e650:	cmp	r1, r0
   1e654:	bge	1e664 <__assert_fail@plt+0xd29c>
   1e658:	movw	r0, #0
   1e65c:	str	r0, [sp, #84]	; 0x54
   1e660:	b	1e67c <__assert_fail@plt+0xd2b4>
   1e664:	ldr	r0, [fp, #8]
   1e668:	movw	r1, #0
   1e66c:	sub	r0, r1, r0
   1e670:	movw	r1, #255	; 0xff
   1e674:	sdiv	r0, r1, r0
   1e678:	str	r0, [sp, #84]	; 0x54
   1e67c:	ldr	r0, [sp, #84]	; 0x54
   1e680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e684:	mvn	r2, #0
   1e688:	sub	r1, r2, r1
   1e68c:	cmp	r0, r1
   1e690:	ble	1e7ac <__assert_fail@plt+0xd3e4>
   1e694:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e698:	b	1e69c <__assert_fail@plt+0xd2d4>
   1e69c:	b	1e6f4 <__assert_fail@plt+0xd32c>
   1e6a0:	b	1e6f4 <__assert_fail@plt+0xd32c>
   1e6a4:	ldr	r0, [fp, #8]
   1e6a8:	cmn	r0, #1
   1e6ac:	bne	1e6f4 <__assert_fail@plt+0xd32c>
   1e6b0:	b	1e6b4 <__assert_fail@plt+0xd2ec>
   1e6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6b8:	add	r0, r0, #0
   1e6bc:	movw	r1, #0
   1e6c0:	cmp	r1, r0
   1e6c4:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e6c8:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d0:	movw	r1, #0
   1e6d4:	cmp	r1, r0
   1e6d8:	bge	1e7c4 <__assert_fail@plt+0xd3fc>
   1e6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6e0:	sub	r0, r0, #1
   1e6e4:	mvn	r1, #0
   1e6e8:	cmp	r1, r0
   1e6ec:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e6f0:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e6f4:	ldr	r0, [fp, #8]
   1e6f8:	movw	r1, #0
   1e6fc:	sdiv	r0, r1, r0
   1e700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e704:	cmp	r0, r1
   1e708:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e70c:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e710:	ldr	r0, [fp, #8]
   1e714:	cmp	r0, #0
   1e718:	bne	1e720 <__assert_fail@plt+0xd358>
   1e71c:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e724:	cmp	r0, #0
   1e728:	bge	1e794 <__assert_fail@plt+0xd3cc>
   1e72c:	b	1e730 <__assert_fail@plt+0xd368>
   1e730:	b	1e778 <__assert_fail@plt+0xd3b0>
   1e734:	b	1e778 <__assert_fail@plt+0xd3b0>
   1e738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e73c:	cmn	r0, #1
   1e740:	bne	1e778 <__assert_fail@plt+0xd3b0>
   1e744:	b	1e748 <__assert_fail@plt+0xd380>
   1e748:	ldr	r0, [fp, #8]
   1e74c:	add	r0, r0, #0
   1e750:	movw	r1, #0
   1e754:	cmp	r1, r0
   1e758:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e75c:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e760:	ldr	r0, [fp, #8]
   1e764:	sub	r0, r0, #1
   1e768:	mvn	r1, #0
   1e76c:	cmp	r1, r0
   1e770:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e774:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e77c:	movw	r1, #0
   1e780:	sdiv	r0, r1, r0
   1e784:	ldr	r1, [fp, #8]
   1e788:	cmp	r0, r1
   1e78c:	blt	1e7ac <__assert_fail@plt+0xd3e4>
   1e790:	b	1e7c4 <__assert_fail@plt+0xd3fc>
   1e794:	ldr	r0, [fp, #8]
   1e798:	movw	r1, #255	; 0xff
   1e79c:	sdiv	r0, r1, r0
   1e7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7a4:	cmp	r0, r1
   1e7a8:	bge	1e7c4 <__assert_fail@plt+0xd3fc>
   1e7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7b0:	ldr	r1, [fp, #8]
   1e7b4:	mul	r0, r0, r1
   1e7b8:	and	r0, r0, #255	; 0xff
   1e7bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e7c0:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1e7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7c8:	ldr	r1, [fp, #8]
   1e7cc:	mul	r0, r0, r1
   1e7d0:	and	r0, r0, #255	; 0xff
   1e7d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e7d8:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1e7dc:	b	1ebb8 <__assert_fail@plt+0xd7f0>
   1e7e0:	b	1e7e4 <__assert_fail@plt+0xd41c>
   1e7e4:	ldr	r0, [fp, #8]
   1e7e8:	cmp	r0, #0
   1e7ec:	bge	1e904 <__assert_fail@plt+0xd53c>
   1e7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7f4:	cmp	r0, #0
   1e7f8:	bge	1e888 <__assert_fail@plt+0xd4c0>
   1e7fc:	b	1e800 <__assert_fail@plt+0xd438>
   1e800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e804:	ldr	r1, [fp, #8]
   1e808:	movw	r2, #32767	; 0x7fff
   1e80c:	sdiv	r1, r2, r1
   1e810:	cmp	r0, r1
   1e814:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e818:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e81c:	andhi	r0, r0, r0
   1e820:	b	1e824 <__assert_fail@plt+0xd45c>
   1e824:	ldr	r0, [pc, #4004]	; 1f7d0 <__assert_fail@plt+0xe408>
   1e828:	ldr	r1, [fp, #8]
   1e82c:	cmp	r1, r0
   1e830:	blt	1e848 <__assert_fail@plt+0xd480>
   1e834:	b	1e854 <__assert_fail@plt+0xd48c>
   1e838:	ldr	r0, [fp, #8]
   1e83c:	movw	r1, #0
   1e840:	cmp	r1, r0
   1e844:	bge	1e854 <__assert_fail@plt+0xd48c>
   1e848:	movw	r0, #0
   1e84c:	str	r0, [sp, #80]	; 0x50
   1e850:	b	1e86c <__assert_fail@plt+0xd4a4>
   1e854:	ldr	r0, [fp, #8]
   1e858:	movw	r1, #0
   1e85c:	sub	r0, r1, r0
   1e860:	movw	r1, #32767	; 0x7fff
   1e864:	sdiv	r0, r1, r0
   1e868:	str	r0, [sp, #80]	; 0x50
   1e86c:	ldr	r0, [sp, #80]	; 0x50
   1e870:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e874:	mvn	r2, #0
   1e878:	sub	r1, r2, r1
   1e87c:	cmp	r0, r1
   1e880:	ble	1e9a4 <__assert_fail@plt+0xd5dc>
   1e884:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e888:	b	1e88c <__assert_fail@plt+0xd4c4>
   1e88c:	b	1e8e8 <__assert_fail@plt+0xd520>
   1e890:	b	1e8e8 <__assert_fail@plt+0xd520>
   1e894:	ldr	r0, [fp, #8]
   1e898:	cmn	r0, #1
   1e89c:	bne	1e8e8 <__assert_fail@plt+0xd520>
   1e8a0:	b	1e8a4 <__assert_fail@plt+0xd4dc>
   1e8a4:	ldr	r0, [pc, #3884]	; 1f7d8 <__assert_fail@plt+0xe410>
   1e8a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8ac:	add	r0, r1, r0
   1e8b0:	movw	r1, #0
   1e8b4:	cmp	r1, r0
   1e8b8:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e8bc:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8c4:	movw	r1, #0
   1e8c8:	cmp	r1, r0
   1e8cc:	bge	1e9bc <__assert_fail@plt+0xd5f4>
   1e8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8d4:	sub	r0, r0, #1
   1e8d8:	movw	r1, #32767	; 0x7fff
   1e8dc:	cmp	r1, r0
   1e8e0:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e8e4:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e8e8:	ldr	r0, [pc, #3816]	; 1f7d8 <__assert_fail@plt+0xe410>
   1e8ec:	ldr	r1, [fp, #8]
   1e8f0:	sdiv	r0, r0, r1
   1e8f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8f8:	cmp	r0, r1
   1e8fc:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e900:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e904:	ldr	r0, [fp, #8]
   1e908:	cmp	r0, #0
   1e90c:	bne	1e914 <__assert_fail@plt+0xd54c>
   1e910:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e918:	cmp	r0, #0
   1e91c:	bge	1e98c <__assert_fail@plt+0xd5c4>
   1e920:	b	1e924 <__assert_fail@plt+0xd55c>
   1e924:	b	1e970 <__assert_fail@plt+0xd5a8>
   1e928:	b	1e970 <__assert_fail@plt+0xd5a8>
   1e92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e930:	cmn	r0, #1
   1e934:	bne	1e970 <__assert_fail@plt+0xd5a8>
   1e938:	b	1e93c <__assert_fail@plt+0xd574>
   1e93c:	ldr	r0, [pc, #3732]	; 1f7d8 <__assert_fail@plt+0xe410>
   1e940:	ldr	r1, [fp, #8]
   1e944:	add	r0, r1, r0
   1e948:	movw	r1, #0
   1e94c:	cmp	r1, r0
   1e950:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e954:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e958:	ldr	r0, [fp, #8]
   1e95c:	sub	r0, r0, #1
   1e960:	movw	r1, #32767	; 0x7fff
   1e964:	cmp	r1, r0
   1e968:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e96c:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e970:	ldr	r0, [pc, #3680]	; 1f7d8 <__assert_fail@plt+0xe410>
   1e974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e978:	sdiv	r0, r0, r1
   1e97c:	ldr	r1, [fp, #8]
   1e980:	cmp	r0, r1
   1e984:	blt	1e9a4 <__assert_fail@plt+0xd5dc>
   1e988:	b	1e9bc <__assert_fail@plt+0xd5f4>
   1e98c:	ldr	r0, [fp, #8]
   1e990:	movw	r1, #32767	; 0x7fff
   1e994:	sdiv	r0, r1, r0
   1e998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e99c:	cmp	r0, r1
   1e9a0:	bge	1e9bc <__assert_fail@plt+0xd5f4>
   1e9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9a8:	ldr	r1, [fp, #8]
   1e9ac:	mul	r0, r0, r1
   1e9b0:	sxth	r0, r0
   1e9b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9b8:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1e9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9c0:	ldr	r1, [fp, #8]
   1e9c4:	mul	r0, r0, r1
   1e9c8:	sxth	r0, r0
   1e9cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9d0:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1e9d4:	ldr	r0, [fp, #8]
   1e9d8:	cmp	r0, #0
   1e9dc:	bge	1eaec <__assert_fail@plt+0xd724>
   1e9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9e4:	cmp	r0, #0
   1e9e8:	bge	1ea74 <__assert_fail@plt+0xd6ac>
   1e9ec:	b	1e9f0 <__assert_fail@plt+0xd628>
   1e9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9f4:	ldr	r1, [fp, #8]
   1e9f8:	movw	r2, #65535	; 0xffff
   1e9fc:	sdiv	r1, r2, r1
   1ea00:	cmp	r0, r1
   1ea04:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1ea08:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1ea0c:	b	1ea10 <__assert_fail@plt+0xd648>
   1ea10:	ldr	r0, [pc, #3512]	; 1f7d0 <__assert_fail@plt+0xe408>
   1ea14:	ldr	r1, [fp, #8]
   1ea18:	cmp	r1, r0
   1ea1c:	blt	1ea34 <__assert_fail@plt+0xd66c>
   1ea20:	b	1ea40 <__assert_fail@plt+0xd678>
   1ea24:	ldr	r0, [fp, #8]
   1ea28:	movw	r1, #0
   1ea2c:	cmp	r1, r0
   1ea30:	bge	1ea40 <__assert_fail@plt+0xd678>
   1ea34:	movw	r0, #0
   1ea38:	str	r0, [sp, #76]	; 0x4c
   1ea3c:	b	1ea58 <__assert_fail@plt+0xd690>
   1ea40:	ldr	r0, [fp, #8]
   1ea44:	movw	r1, #0
   1ea48:	sub	r0, r1, r0
   1ea4c:	movw	r1, #65535	; 0xffff
   1ea50:	sdiv	r0, r1, r0
   1ea54:	str	r0, [sp, #76]	; 0x4c
   1ea58:	ldr	r0, [sp, #76]	; 0x4c
   1ea5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea60:	mvn	r2, #0
   1ea64:	sub	r1, r2, r1
   1ea68:	cmp	r0, r1
   1ea6c:	ble	1eb88 <__assert_fail@plt+0xd7c0>
   1ea70:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1ea74:	b	1ea78 <__assert_fail@plt+0xd6b0>
   1ea78:	b	1ead0 <__assert_fail@plt+0xd708>
   1ea7c:	b	1ead0 <__assert_fail@plt+0xd708>
   1ea80:	ldr	r0, [fp, #8]
   1ea84:	cmn	r0, #1
   1ea88:	bne	1ead0 <__assert_fail@plt+0xd708>
   1ea8c:	b	1ea90 <__assert_fail@plt+0xd6c8>
   1ea90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea94:	add	r0, r0, #0
   1ea98:	movw	r1, #0
   1ea9c:	cmp	r1, r0
   1eaa0:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eaa4:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eaa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaac:	movw	r1, #0
   1eab0:	cmp	r1, r0
   1eab4:	bge	1eba0 <__assert_fail@plt+0xd7d8>
   1eab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eabc:	sub	r0, r0, #1
   1eac0:	mvn	r1, #0
   1eac4:	cmp	r1, r0
   1eac8:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eacc:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1ead0:	ldr	r0, [fp, #8]
   1ead4:	movw	r1, #0
   1ead8:	sdiv	r0, r1, r0
   1eadc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eae0:	cmp	r0, r1
   1eae4:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eae8:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eaec:	ldr	r0, [fp, #8]
   1eaf0:	cmp	r0, #0
   1eaf4:	bne	1eafc <__assert_fail@plt+0xd734>
   1eaf8:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb00:	cmp	r0, #0
   1eb04:	bge	1eb70 <__assert_fail@plt+0xd7a8>
   1eb08:	b	1eb0c <__assert_fail@plt+0xd744>
   1eb0c:	b	1eb54 <__assert_fail@plt+0xd78c>
   1eb10:	b	1eb54 <__assert_fail@plt+0xd78c>
   1eb14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb18:	cmn	r0, #1
   1eb1c:	bne	1eb54 <__assert_fail@plt+0xd78c>
   1eb20:	b	1eb24 <__assert_fail@plt+0xd75c>
   1eb24:	ldr	r0, [fp, #8]
   1eb28:	add	r0, r0, #0
   1eb2c:	movw	r1, #0
   1eb30:	cmp	r1, r0
   1eb34:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eb38:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eb3c:	ldr	r0, [fp, #8]
   1eb40:	sub	r0, r0, #1
   1eb44:	mvn	r1, #0
   1eb48:	cmp	r1, r0
   1eb4c:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eb50:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eb54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb58:	movw	r1, #0
   1eb5c:	sdiv	r0, r1, r0
   1eb60:	ldr	r1, [fp, #8]
   1eb64:	cmp	r0, r1
   1eb68:	blt	1eb88 <__assert_fail@plt+0xd7c0>
   1eb6c:	b	1eba0 <__assert_fail@plt+0xd7d8>
   1eb70:	ldr	r0, [fp, #8]
   1eb74:	movw	r1, #65535	; 0xffff
   1eb78:	sdiv	r0, r1, r0
   1eb7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb80:	cmp	r0, r1
   1eb84:	bge	1eba0 <__assert_fail@plt+0xd7d8>
   1eb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb8c:	ldr	r1, [fp, #8]
   1eb90:	mul	r0, r0, r1
   1eb94:	uxth	r0, r0
   1eb98:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb9c:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1eba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eba4:	ldr	r1, [fp, #8]
   1eba8:	mul	r0, r0, r1
   1ebac:	uxth	r0, r0
   1ebb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebb4:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1ebb8:	b	1ebbc <__assert_fail@plt+0xd7f4>
   1ebbc:	b	1ebc0 <__assert_fail@plt+0xd7f8>
   1ebc0:	ldr	r0, [fp, #8]
   1ebc4:	cmp	r0, #0
   1ebc8:	bge	1eccc <__assert_fail@plt+0xd904>
   1ebcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebd0:	cmp	r0, #0
   1ebd4:	bge	1ec60 <__assert_fail@plt+0xd898>
   1ebd8:	b	1ebdc <__assert_fail@plt+0xd814>
   1ebdc:	ldr	r0, [pc, #3048]	; 1f7cc <__assert_fail@plt+0xe404>
   1ebe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebe4:	ldr	r2, [fp, #8]
   1ebe8:	sdiv	r0, r0, r2
   1ebec:	cmp	r1, r0
   1ebf0:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ebf4:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ebf8:	b	1ebfc <__assert_fail@plt+0xd834>
   1ebfc:	ldr	r0, [pc, #3020]	; 1f7d0 <__assert_fail@plt+0xe408>
   1ec00:	ldr	r1, [fp, #8]
   1ec04:	cmp	r1, r0
   1ec08:	blt	1ec20 <__assert_fail@plt+0xd858>
   1ec0c:	b	1ec2c <__assert_fail@plt+0xd864>
   1ec10:	ldr	r0, [fp, #8]
   1ec14:	movw	r1, #0
   1ec18:	cmp	r1, r0
   1ec1c:	bge	1ec2c <__assert_fail@plt+0xd864>
   1ec20:	movw	r0, #0
   1ec24:	str	r0, [sp, #72]	; 0x48
   1ec28:	b	1ec44 <__assert_fail@plt+0xd87c>
   1ec2c:	ldr	r0, [pc, #2968]	; 1f7cc <__assert_fail@plt+0xe404>
   1ec30:	ldr	r1, [fp, #8]
   1ec34:	movw	r2, #0
   1ec38:	sub	r1, r2, r1
   1ec3c:	sdiv	r0, r0, r1
   1ec40:	str	r0, [sp, #72]	; 0x48
   1ec44:	ldr	r0, [sp, #72]	; 0x48
   1ec48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec4c:	mvn	r2, #0
   1ec50:	sub	r1, r2, r1
   1ec54:	cmp	r0, r1
   1ec58:	ble	1ed5c <__assert_fail@plt+0xd994>
   1ec5c:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ec60:	ldr	r0, [fp, #8]
   1ec64:	cmn	r0, #1
   1ec68:	bne	1ecb0 <__assert_fail@plt+0xd8e8>
   1ec6c:	b	1ec70 <__assert_fail@plt+0xd8a8>
   1ec70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec74:	add	r0, r0, #-2147483648	; 0x80000000
   1ec78:	movw	r1, #0
   1ec7c:	cmp	r1, r0
   1ec80:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ec84:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ec88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec8c:	movw	r1, #0
   1ec90:	cmp	r1, r0
   1ec94:	bge	1ed70 <__assert_fail@plt+0xd9a8>
   1ec98:	ldr	r0, [pc, #2860]	; 1f7cc <__assert_fail@plt+0xe404>
   1ec9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eca0:	sub	r1, r1, #1
   1eca4:	cmp	r0, r1
   1eca8:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ecac:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ecb0:	ldr	r0, [pc, #2844]	; 1f7d4 <__assert_fail@plt+0xe40c>
   1ecb4:	ldr	r1, [fp, #8]
   1ecb8:	sdiv	r0, r0, r1
   1ecbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecc0:	cmp	r0, r1
   1ecc4:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ecc8:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1eccc:	ldr	r0, [fp, #8]
   1ecd0:	cmp	r0, #0
   1ecd4:	bne	1ecdc <__assert_fail@plt+0xd914>
   1ecd8:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ecdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ece0:	cmp	r0, #0
   1ece4:	bge	1ed44 <__assert_fail@plt+0xd97c>
   1ece8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecec:	cmn	r0, #1
   1ecf0:	bne	1ed28 <__assert_fail@plt+0xd960>
   1ecf4:	b	1ecf8 <__assert_fail@plt+0xd930>
   1ecf8:	ldr	r0, [fp, #8]
   1ecfc:	add	r0, r0, #-2147483648	; 0x80000000
   1ed00:	movw	r1, #0
   1ed04:	cmp	r1, r0
   1ed08:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ed0c:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ed10:	ldr	r0, [pc, #2740]	; 1f7cc <__assert_fail@plt+0xe404>
   1ed14:	ldr	r1, [fp, #8]
   1ed18:	sub	r1, r1, #1
   1ed1c:	cmp	r0, r1
   1ed20:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ed24:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ed28:	ldr	r0, [pc, #2724]	; 1f7d4 <__assert_fail@plt+0xe40c>
   1ed2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed30:	sdiv	r0, r0, r1
   1ed34:	ldr	r1, [fp, #8]
   1ed38:	cmp	r0, r1
   1ed3c:	blt	1ed5c <__assert_fail@plt+0xd994>
   1ed40:	b	1ed70 <__assert_fail@plt+0xd9a8>
   1ed44:	ldr	r0, [pc, #2688]	; 1f7cc <__assert_fail@plt+0xe404>
   1ed48:	ldr	r1, [fp, #8]
   1ed4c:	sdiv	r0, r0, r1
   1ed50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed54:	cmp	r0, r1
   1ed58:	bge	1ed70 <__assert_fail@plt+0xd9a8>
   1ed5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed60:	ldr	r1, [fp, #8]
   1ed64:	mul	r0, r0, r1
   1ed68:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed6c:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1ed70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed74:	ldr	r1, [fp, #8]
   1ed78:	mul	r0, r0, r1
   1ed7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed80:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1ed84:	ldr	r0, [fp, #8]
   1ed88:	cmp	r0, #0
   1ed8c:	bge	1ee9c <__assert_fail@plt+0xdad4>
   1ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed94:	cmp	r0, #0
   1ed98:	bge	1ee24 <__assert_fail@plt+0xda5c>
   1ed9c:	b	1edbc <__assert_fail@plt+0xd9f4>
   1eda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eda4:	ldr	r1, [fp, #8]
   1eda8:	mvn	r2, #0
   1edac:	udiv	r1, r2, r1
   1edb0:	cmp	r0, r1
   1edb4:	bcc	1ef38 <__assert_fail@plt+0xdb70>
   1edb8:	b	1ef4c <__assert_fail@plt+0xdb84>
   1edbc:	b	1edc0 <__assert_fail@plt+0xd9f8>
   1edc0:	ldr	r0, [pc, #2568]	; 1f7d0 <__assert_fail@plt+0xe408>
   1edc4:	ldr	r1, [fp, #8]
   1edc8:	cmp	r1, r0
   1edcc:	blt	1ede4 <__assert_fail@plt+0xda1c>
   1edd0:	b	1edf0 <__assert_fail@plt+0xda28>
   1edd4:	ldr	r0, [fp, #8]
   1edd8:	movw	r1, #0
   1eddc:	cmp	r1, r0
   1ede0:	bge	1edf0 <__assert_fail@plt+0xda28>
   1ede4:	movw	r0, #1
   1ede8:	str	r0, [sp, #68]	; 0x44
   1edec:	b	1ee08 <__assert_fail@plt+0xda40>
   1edf0:	ldr	r0, [fp, #8]
   1edf4:	movw	r1, #0
   1edf8:	sub	r0, r1, r0
   1edfc:	mvn	r1, #0
   1ee00:	udiv	r0, r1, r0
   1ee04:	str	r0, [sp, #68]	; 0x44
   1ee08:	ldr	r0, [sp, #68]	; 0x44
   1ee0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee10:	mvn	r2, #0
   1ee14:	sub	r1, r2, r1
   1ee18:	cmp	r0, r1
   1ee1c:	bls	1ef38 <__assert_fail@plt+0xdb70>
   1ee20:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ee24:	b	1ee28 <__assert_fail@plt+0xda60>
   1ee28:	b	1ee80 <__assert_fail@plt+0xdab8>
   1ee2c:	b	1ee80 <__assert_fail@plt+0xdab8>
   1ee30:	ldr	r0, [fp, #8]
   1ee34:	cmn	r0, #1
   1ee38:	bne	1ee80 <__assert_fail@plt+0xdab8>
   1ee3c:	b	1ee40 <__assert_fail@plt+0xda78>
   1ee40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee44:	add	r0, r0, #0
   1ee48:	movw	r1, #0
   1ee4c:	cmp	r1, r0
   1ee50:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1ee54:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ee58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee5c:	movw	r1, #0
   1ee60:	cmp	r1, r0
   1ee64:	bge	1ef4c <__assert_fail@plt+0xdb84>
   1ee68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee6c:	sub	r0, r0, #1
   1ee70:	mvn	r1, #0
   1ee74:	cmp	r1, r0
   1ee78:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1ee7c:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ee80:	ldr	r0, [fp, #8]
   1ee84:	movw	r1, #0
   1ee88:	sdiv	r0, r1, r0
   1ee8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee90:	cmp	r0, r1
   1ee94:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1ee98:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ee9c:	ldr	r0, [fp, #8]
   1eea0:	cmp	r0, #0
   1eea4:	bne	1eeac <__assert_fail@plt+0xdae4>
   1eea8:	b	1ef4c <__assert_fail@plt+0xdb84>
   1eeac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eeb0:	cmp	r0, #0
   1eeb4:	bge	1ef20 <__assert_fail@plt+0xdb58>
   1eeb8:	b	1eebc <__assert_fail@plt+0xdaf4>
   1eebc:	b	1ef04 <__assert_fail@plt+0xdb3c>
   1eec0:	b	1ef04 <__assert_fail@plt+0xdb3c>
   1eec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eec8:	cmn	r0, #1
   1eecc:	bne	1ef04 <__assert_fail@plt+0xdb3c>
   1eed0:	b	1eed4 <__assert_fail@plt+0xdb0c>
   1eed4:	ldr	r0, [fp, #8]
   1eed8:	add	r0, r0, #0
   1eedc:	movw	r1, #0
   1eee0:	cmp	r1, r0
   1eee4:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1eee8:	b	1ef4c <__assert_fail@plt+0xdb84>
   1eeec:	ldr	r0, [fp, #8]
   1eef0:	sub	r0, r0, #1
   1eef4:	mvn	r1, #0
   1eef8:	cmp	r1, r0
   1eefc:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1ef00:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ef04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef08:	movw	r1, #0
   1ef0c:	sdiv	r0, r1, r0
   1ef10:	ldr	r1, [fp, #8]
   1ef14:	cmp	r0, r1
   1ef18:	blt	1ef38 <__assert_fail@plt+0xdb70>
   1ef1c:	b	1ef4c <__assert_fail@plt+0xdb84>
   1ef20:	ldr	r0, [fp, #8]
   1ef24:	mvn	r1, #0
   1ef28:	udiv	r0, r1, r0
   1ef2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef30:	cmp	r0, r1
   1ef34:	bcs	1ef4c <__assert_fail@plt+0xdb84>
   1ef38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef3c:	ldr	r1, [fp, #8]
   1ef40:	mul	r0, r0, r1
   1ef44:	str	r0, [fp, #-28]	; 0xffffffe4
   1ef48:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1ef4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef50:	ldr	r1, [fp, #8]
   1ef54:	mul	r0, r0, r1
   1ef58:	str	r0, [fp, #-28]	; 0xffffffe4
   1ef5c:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1ef60:	b	1ef64 <__assert_fail@plt+0xdb9c>
   1ef64:	b	1ef68 <__assert_fail@plt+0xdba0>
   1ef68:	ldr	r0, [fp, #8]
   1ef6c:	cmp	r0, #0
   1ef70:	bge	1f074 <__assert_fail@plt+0xdcac>
   1ef74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef78:	cmp	r0, #0
   1ef7c:	bge	1f008 <__assert_fail@plt+0xdc40>
   1ef80:	b	1ef84 <__assert_fail@plt+0xdbbc>
   1ef84:	ldr	r0, [pc, #2112]	; 1f7cc <__assert_fail@plt+0xe404>
   1ef88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef8c:	ldr	r2, [fp, #8]
   1ef90:	sdiv	r0, r0, r2
   1ef94:	cmp	r1, r0
   1ef98:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1ef9c:	b	1f118 <__assert_fail@plt+0xdd50>
   1efa0:	b	1efa4 <__assert_fail@plt+0xdbdc>
   1efa4:	ldr	r0, [pc, #2084]	; 1f7d0 <__assert_fail@plt+0xe408>
   1efa8:	ldr	r1, [fp, #8]
   1efac:	cmp	r1, r0
   1efb0:	blt	1efc8 <__assert_fail@plt+0xdc00>
   1efb4:	b	1efd4 <__assert_fail@plt+0xdc0c>
   1efb8:	ldr	r0, [fp, #8]
   1efbc:	movw	r1, #0
   1efc0:	cmp	r1, r0
   1efc4:	bge	1efd4 <__assert_fail@plt+0xdc0c>
   1efc8:	movw	r0, #0
   1efcc:	str	r0, [sp, #64]	; 0x40
   1efd0:	b	1efec <__assert_fail@plt+0xdc24>
   1efd4:	ldr	r0, [pc, #2032]	; 1f7cc <__assert_fail@plt+0xe404>
   1efd8:	ldr	r1, [fp, #8]
   1efdc:	movw	r2, #0
   1efe0:	sub	r1, r2, r1
   1efe4:	sdiv	r0, r0, r1
   1efe8:	str	r0, [sp, #64]	; 0x40
   1efec:	ldr	r0, [sp, #64]	; 0x40
   1eff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eff4:	mvn	r2, #0
   1eff8:	sub	r1, r2, r1
   1effc:	cmp	r0, r1
   1f000:	ble	1f104 <__assert_fail@plt+0xdd3c>
   1f004:	b	1f118 <__assert_fail@plt+0xdd50>
   1f008:	ldr	r0, [fp, #8]
   1f00c:	cmn	r0, #1
   1f010:	bne	1f058 <__assert_fail@plt+0xdc90>
   1f014:	b	1f018 <__assert_fail@plt+0xdc50>
   1f018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f01c:	add	r0, r0, #-2147483648	; 0x80000000
   1f020:	movw	r1, #0
   1f024:	cmp	r1, r0
   1f028:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f02c:	b	1f118 <__assert_fail@plt+0xdd50>
   1f030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f034:	movw	r1, #0
   1f038:	cmp	r1, r0
   1f03c:	bge	1f118 <__assert_fail@plt+0xdd50>
   1f040:	ldr	r0, [pc, #1924]	; 1f7cc <__assert_fail@plt+0xe404>
   1f044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f048:	sub	r1, r1, #1
   1f04c:	cmp	r0, r1
   1f050:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f054:	b	1f118 <__assert_fail@plt+0xdd50>
   1f058:	ldr	r0, [pc, #1908]	; 1f7d4 <__assert_fail@plt+0xe40c>
   1f05c:	ldr	r1, [fp, #8]
   1f060:	sdiv	r0, r0, r1
   1f064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f068:	cmp	r0, r1
   1f06c:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f070:	b	1f118 <__assert_fail@plt+0xdd50>
   1f074:	ldr	r0, [fp, #8]
   1f078:	cmp	r0, #0
   1f07c:	bne	1f084 <__assert_fail@plt+0xdcbc>
   1f080:	b	1f118 <__assert_fail@plt+0xdd50>
   1f084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f088:	cmp	r0, #0
   1f08c:	bge	1f0ec <__assert_fail@plt+0xdd24>
   1f090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f094:	cmn	r0, #1
   1f098:	bne	1f0d0 <__assert_fail@plt+0xdd08>
   1f09c:	b	1f0a0 <__assert_fail@plt+0xdcd8>
   1f0a0:	ldr	r0, [fp, #8]
   1f0a4:	add	r0, r0, #-2147483648	; 0x80000000
   1f0a8:	movw	r1, #0
   1f0ac:	cmp	r1, r0
   1f0b0:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f0b4:	b	1f118 <__assert_fail@plt+0xdd50>
   1f0b8:	ldr	r0, [pc, #1804]	; 1f7cc <__assert_fail@plt+0xe404>
   1f0bc:	ldr	r1, [fp, #8]
   1f0c0:	sub	r1, r1, #1
   1f0c4:	cmp	r0, r1
   1f0c8:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f0cc:	b	1f118 <__assert_fail@plt+0xdd50>
   1f0d0:	ldr	r0, [pc, #1788]	; 1f7d4 <__assert_fail@plt+0xe40c>
   1f0d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0d8:	sdiv	r0, r0, r1
   1f0dc:	ldr	r1, [fp, #8]
   1f0e0:	cmp	r0, r1
   1f0e4:	blt	1f104 <__assert_fail@plt+0xdd3c>
   1f0e8:	b	1f118 <__assert_fail@plt+0xdd50>
   1f0ec:	ldr	r0, [pc, #1752]	; 1f7cc <__assert_fail@plt+0xe404>
   1f0f0:	ldr	r1, [fp, #8]
   1f0f4:	sdiv	r0, r0, r1
   1f0f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0fc:	cmp	r0, r1
   1f100:	bge	1f118 <__assert_fail@plt+0xdd50>
   1f104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f108:	ldr	r1, [fp, #8]
   1f10c:	mul	r0, r0, r1
   1f110:	str	r0, [fp, #-28]	; 0xffffffe4
   1f114:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1f118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f11c:	ldr	r1, [fp, #8]
   1f120:	mul	r0, r0, r1
   1f124:	str	r0, [fp, #-28]	; 0xffffffe4
   1f128:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f12c:	ldr	r0, [fp, #8]
   1f130:	cmp	r0, #0
   1f134:	bge	1f244 <__assert_fail@plt+0xde7c>
   1f138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f13c:	cmp	r0, #0
   1f140:	bge	1f1cc <__assert_fail@plt+0xde04>
   1f144:	b	1f164 <__assert_fail@plt+0xdd9c>
   1f148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f14c:	ldr	r1, [fp, #8]
   1f150:	mvn	r2, #0
   1f154:	udiv	r1, r2, r1
   1f158:	cmp	r0, r1
   1f15c:	bcc	1f2e0 <__assert_fail@plt+0xdf18>
   1f160:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f164:	b	1f168 <__assert_fail@plt+0xdda0>
   1f168:	ldr	r0, [pc, #1632]	; 1f7d0 <__assert_fail@plt+0xe408>
   1f16c:	ldr	r1, [fp, #8]
   1f170:	cmp	r1, r0
   1f174:	blt	1f18c <__assert_fail@plt+0xddc4>
   1f178:	b	1f198 <__assert_fail@plt+0xddd0>
   1f17c:	ldr	r0, [fp, #8]
   1f180:	movw	r1, #0
   1f184:	cmp	r1, r0
   1f188:	bge	1f198 <__assert_fail@plt+0xddd0>
   1f18c:	movw	r0, #1
   1f190:	str	r0, [sp, #60]	; 0x3c
   1f194:	b	1f1b0 <__assert_fail@plt+0xdde8>
   1f198:	ldr	r0, [fp, #8]
   1f19c:	movw	r1, #0
   1f1a0:	sub	r0, r1, r0
   1f1a4:	mvn	r1, #0
   1f1a8:	udiv	r0, r1, r0
   1f1ac:	str	r0, [sp, #60]	; 0x3c
   1f1b0:	ldr	r0, [sp, #60]	; 0x3c
   1f1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1b8:	mvn	r2, #0
   1f1bc:	sub	r1, r2, r1
   1f1c0:	cmp	r0, r1
   1f1c4:	bls	1f2e0 <__assert_fail@plt+0xdf18>
   1f1c8:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f1cc:	b	1f1d0 <__assert_fail@plt+0xde08>
   1f1d0:	b	1f228 <__assert_fail@plt+0xde60>
   1f1d4:	b	1f228 <__assert_fail@plt+0xde60>
   1f1d8:	ldr	r0, [fp, #8]
   1f1dc:	cmn	r0, #1
   1f1e0:	bne	1f228 <__assert_fail@plt+0xde60>
   1f1e4:	b	1f1e8 <__assert_fail@plt+0xde20>
   1f1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1ec:	add	r0, r0, #0
   1f1f0:	movw	r1, #0
   1f1f4:	cmp	r1, r0
   1f1f8:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f1fc:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f204:	movw	r1, #0
   1f208:	cmp	r1, r0
   1f20c:	bge	1f2f4 <__assert_fail@plt+0xdf2c>
   1f210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f214:	sub	r0, r0, #1
   1f218:	mvn	r1, #0
   1f21c:	cmp	r1, r0
   1f220:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f224:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f228:	ldr	r0, [fp, #8]
   1f22c:	movw	r1, #0
   1f230:	sdiv	r0, r1, r0
   1f234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f238:	cmp	r0, r1
   1f23c:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f240:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f244:	ldr	r0, [fp, #8]
   1f248:	cmp	r0, #0
   1f24c:	bne	1f254 <__assert_fail@plt+0xde8c>
   1f250:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f258:	cmp	r0, #0
   1f25c:	bge	1f2c8 <__assert_fail@plt+0xdf00>
   1f260:	b	1f264 <__assert_fail@plt+0xde9c>
   1f264:	b	1f2ac <__assert_fail@plt+0xdee4>
   1f268:	b	1f2ac <__assert_fail@plt+0xdee4>
   1f26c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f270:	cmn	r0, #1
   1f274:	bne	1f2ac <__assert_fail@plt+0xdee4>
   1f278:	b	1f27c <__assert_fail@plt+0xdeb4>
   1f27c:	ldr	r0, [fp, #8]
   1f280:	add	r0, r0, #0
   1f284:	movw	r1, #0
   1f288:	cmp	r1, r0
   1f28c:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f290:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f294:	ldr	r0, [fp, #8]
   1f298:	sub	r0, r0, #1
   1f29c:	mvn	r1, #0
   1f2a0:	cmp	r1, r0
   1f2a4:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f2a8:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f2ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2b0:	movw	r1, #0
   1f2b4:	sdiv	r0, r1, r0
   1f2b8:	ldr	r1, [fp, #8]
   1f2bc:	cmp	r0, r1
   1f2c0:	blt	1f2e0 <__assert_fail@plt+0xdf18>
   1f2c4:	b	1f2f4 <__assert_fail@plt+0xdf2c>
   1f2c8:	ldr	r0, [fp, #8]
   1f2cc:	mvn	r1, #0
   1f2d0:	udiv	r0, r1, r0
   1f2d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f2d8:	cmp	r0, r1
   1f2dc:	bcs	1f2f4 <__assert_fail@plt+0xdf2c>
   1f2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2e4:	ldr	r1, [fp, #8]
   1f2e8:	mul	r0, r0, r1
   1f2ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1f2f0:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1f2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2f8:	ldr	r1, [fp, #8]
   1f2fc:	mul	r0, r0, r1
   1f300:	str	r0, [fp, #-28]	; 0xffffffe4
   1f304:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f308:	b	1f30c <__assert_fail@plt+0xdf44>
   1f30c:	ldr	r0, [fp, #8]
   1f310:	cmp	r0, #0
   1f314:	bge	1f47c <__assert_fail@plt+0xe0b4>
   1f318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f31c:	cmp	r0, #0
   1f320:	bge	1f3f8 <__assert_fail@plt+0xe030>
   1f324:	b	1f328 <__assert_fail@plt+0xdf60>
   1f328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f32c:	ldr	r1, [fp, #8]
   1f330:	asr	r3, r1, #31
   1f334:	mvn	r2, #0
   1f338:	mvn	ip, #-2147483648	; 0x80000000
   1f33c:	str	r0, [sp, #56]	; 0x38
   1f340:	mov	r0, r2
   1f344:	str	r1, [sp, #52]	; 0x34
   1f348:	mov	r1, ip
   1f34c:	ldr	r2, [sp, #52]	; 0x34
   1f350:	bl	228bc <__assert_fail@plt+0x114f4>
   1f354:	ldr	r2, [sp, #56]	; 0x38
   1f358:	subs	r0, r2, r0
   1f35c:	rscs	r1, r1, r2, asr #31
   1f360:	blt	1f544 <__assert_fail@plt+0xe17c>
   1f364:	b	1f558 <__assert_fail@plt+0xe190>
   1f368:	b	1f36c <__assert_fail@plt+0xdfa4>
   1f36c:	ldr	r0, [pc, #1116]	; 1f7d0 <__assert_fail@plt+0xe408>
   1f370:	ldr	r1, [fp, #8]
   1f374:	cmp	r1, r0
   1f378:	blt	1f390 <__assert_fail@plt+0xdfc8>
   1f37c:	b	1f3a4 <__assert_fail@plt+0xdfdc>
   1f380:	ldr	r0, [fp, #8]
   1f384:	movw	r1, #0
   1f388:	cmp	r1, r0
   1f38c:	bge	1f3a4 <__assert_fail@plt+0xdfdc>
   1f390:	mov	r0, #0
   1f394:	mvn	r1, #0
   1f398:	str	r1, [sp, #48]	; 0x30
   1f39c:	str	r0, [sp, #44]	; 0x2c
   1f3a0:	b	1f3d8 <__assert_fail@plt+0xe010>
   1f3a4:	ldr	r0, [fp, #8]
   1f3a8:	rsb	r0, r0, #0
   1f3ac:	asr	r3, r0, #31
   1f3b0:	mvn	r1, #0
   1f3b4:	mvn	r2, #-2147483648	; 0x80000000
   1f3b8:	str	r0, [sp, #40]	; 0x28
   1f3bc:	mov	r0, r1
   1f3c0:	mov	r1, r2
   1f3c4:	ldr	r2, [sp, #40]	; 0x28
   1f3c8:	bl	228bc <__assert_fail@plt+0x114f4>
   1f3cc:	str	r0, [sp, #48]	; 0x30
   1f3d0:	str	r1, [sp, #44]	; 0x2c
   1f3d4:	b	1f3d8 <__assert_fail@plt+0xe010>
   1f3d8:	ldr	r0, [sp, #44]	; 0x2c
   1f3dc:	ldr	r1, [sp, #48]	; 0x30
   1f3e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3e4:	mvn	r2, r2
   1f3e8:	subs	r1, r2, r1
   1f3ec:	rscs	r0, r0, r2, asr #31
   1f3f0:	bge	1f544 <__assert_fail@plt+0xe17c>
   1f3f4:	b	1f558 <__assert_fail@plt+0xe190>
   1f3f8:	ldr	r0, [fp, #8]
   1f3fc:	cmn	r0, #1
   1f400:	bne	1f444 <__assert_fail@plt+0xe07c>
   1f404:	b	1f408 <__assert_fail@plt+0xe040>
   1f408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f40c:	mov	r1, #-2147483648	; 0x80000000
   1f410:	add	r1, r1, r0, asr #31
   1f414:	rsbs	r0, r0, #0
   1f418:	rscs	r1, r1, #0
   1f41c:	blt	1f544 <__assert_fail@plt+0xe17c>
   1f420:	b	1f558 <__assert_fail@plt+0xe190>
   1f424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f428:	movw	r1, #0
   1f42c:	cmp	r1, r0
   1f430:	bge	1f558 <__assert_fail@plt+0xe190>
   1f434:	mov	r0, #0
   1f438:	cmp	r0, #0
   1f43c:	bne	1f544 <__assert_fail@plt+0xe17c>
   1f440:	b	1f558 <__assert_fail@plt+0xe190>
   1f444:	ldr	r0, [fp, #8]
   1f448:	asr	r3, r0, #31
   1f44c:	mov	r1, #0
   1f450:	mov	r2, #-2147483648	; 0x80000000
   1f454:	str	r0, [sp, #36]	; 0x24
   1f458:	mov	r0, r1
   1f45c:	mov	r1, r2
   1f460:	ldr	r2, [sp, #36]	; 0x24
   1f464:	bl	228bc <__assert_fail@plt+0x114f4>
   1f468:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f46c:	subs	r0, r0, r2
   1f470:	sbcs	r1, r1, r2, asr #31
   1f474:	blt	1f544 <__assert_fail@plt+0xe17c>
   1f478:	b	1f558 <__assert_fail@plt+0xe190>
   1f47c:	ldr	r0, [fp, #8]
   1f480:	cmp	r0, #0
   1f484:	bne	1f48c <__assert_fail@plt+0xe0c4>
   1f488:	b	1f558 <__assert_fail@plt+0xe190>
   1f48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f490:	cmp	r0, #0
   1f494:	bge	1f50c <__assert_fail@plt+0xe144>
   1f498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f49c:	cmn	r0, #1
   1f4a0:	bne	1f4d4 <__assert_fail@plt+0xe10c>
   1f4a4:	b	1f4a8 <__assert_fail@plt+0xe0e0>
   1f4a8:	ldr	r0, [fp, #8]
   1f4ac:	mov	r1, #-2147483648	; 0x80000000
   1f4b0:	add	r1, r1, r0, asr #31
   1f4b4:	rsbs	r0, r0, #0
   1f4b8:	rscs	r1, r1, #0
   1f4bc:	blt	1f544 <__assert_fail@plt+0xe17c>
   1f4c0:	b	1f558 <__assert_fail@plt+0xe190>
   1f4c4:	mov	r0, #0
   1f4c8:	cmp	r0, #0
   1f4cc:	bne	1f544 <__assert_fail@plt+0xe17c>
   1f4d0:	b	1f558 <__assert_fail@plt+0xe190>
   1f4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4d8:	asr	r3, r0, #31
   1f4dc:	mov	r1, #0
   1f4e0:	mov	r2, #-2147483648	; 0x80000000
   1f4e4:	str	r0, [sp, #32]
   1f4e8:	mov	r0, r1
   1f4ec:	mov	r1, r2
   1f4f0:	ldr	r2, [sp, #32]
   1f4f4:	bl	228bc <__assert_fail@plt+0x114f4>
   1f4f8:	ldr	r2, [fp, #8]
   1f4fc:	subs	r0, r0, r2
   1f500:	sbcs	r1, r1, r2, asr #31
   1f504:	blt	1f544 <__assert_fail@plt+0xe17c>
   1f508:	b	1f558 <__assert_fail@plt+0xe190>
   1f50c:	ldr	r0, [fp, #8]
   1f510:	asr	r3, r0, #31
   1f514:	mvn	r1, #0
   1f518:	mvn	r2, #-2147483648	; 0x80000000
   1f51c:	str	r0, [sp, #28]
   1f520:	mov	r0, r1
   1f524:	mov	r1, r2
   1f528:	ldr	r2, [sp, #28]
   1f52c:	bl	228bc <__assert_fail@plt+0x114f4>
   1f530:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f534:	subs	r0, r0, r2
   1f538:	sbcs	r1, r1, r2, asr #31
   1f53c:	bge	1f558 <__assert_fail@plt+0xe190>
   1f540:	b	1f544 <__assert_fail@plt+0xe17c>
   1f544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f548:	ldr	r1, [fp, #8]
   1f54c:	mul	r0, r0, r1
   1f550:	str	r0, [fp, #-28]	; 0xffffffe4
   1f554:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1f558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f55c:	ldr	r1, [fp, #8]
   1f560:	mul	r0, r0, r1
   1f564:	str	r0, [fp, #-28]	; 0xffffffe4
   1f568:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f56c:	ldr	r0, [fp, #8]
   1f570:	cmp	r0, #0
   1f574:	bge	1f6c4 <__assert_fail@plt+0xe2fc>
   1f578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f57c:	cmp	r0, #0
   1f580:	bge	1f64c <__assert_fail@plt+0xe284>
   1f584:	b	1f5c4 <__assert_fail@plt+0xe1fc>
   1f588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f58c:	ldr	r1, [fp, #8]
   1f590:	asr	r3, r1, #31
   1f594:	mvn	r2, #0
   1f598:	str	r0, [sp, #24]
   1f59c:	mov	r0, r2
   1f5a0:	str	r1, [sp, #20]
   1f5a4:	mov	r1, r2
   1f5a8:	ldr	r2, [sp, #20]
   1f5ac:	bl	22990 <__assert_fail@plt+0x115c8>
   1f5b0:	ldr	r2, [sp, #24]
   1f5b4:	subs	r0, r2, r0
   1f5b8:	rscs	r1, r1, r2, asr #31
   1f5bc:	bcc	1f778 <__assert_fail@plt+0xe3b0>
   1f5c0:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f5c4:	b	1f5c8 <__assert_fail@plt+0xe200>
   1f5c8:	ldr	r0, [pc, #512]	; 1f7d0 <__assert_fail@plt+0xe408>
   1f5cc:	ldr	r1, [fp, #8]
   1f5d0:	cmp	r1, r0
   1f5d4:	blt	1f5ec <__assert_fail@plt+0xe224>
   1f5d8:	b	1f600 <__assert_fail@plt+0xe238>
   1f5dc:	ldr	r0, [fp, #8]
   1f5e0:	movw	r1, #0
   1f5e4:	cmp	r1, r0
   1f5e8:	bge	1f600 <__assert_fail@plt+0xe238>
   1f5ec:	mov	r0, #1
   1f5f0:	mvn	r1, #0
   1f5f4:	str	r1, [sp, #16]
   1f5f8:	str	r0, [sp, #12]
   1f5fc:	b	1f62c <__assert_fail@plt+0xe264>
   1f600:	ldr	r0, [fp, #8]
   1f604:	rsb	r0, r0, #0
   1f608:	asr	r3, r0, #31
   1f60c:	mvn	r1, #0
   1f610:	str	r0, [sp, #8]
   1f614:	mov	r0, r1
   1f618:	ldr	r2, [sp, #8]
   1f61c:	bl	22990 <__assert_fail@plt+0x115c8>
   1f620:	str	r0, [sp, #16]
   1f624:	str	r1, [sp, #12]
   1f628:	b	1f62c <__assert_fail@plt+0xe264>
   1f62c:	ldr	r0, [sp, #12]
   1f630:	ldr	r1, [sp, #16]
   1f634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f638:	mvn	r2, r2
   1f63c:	subs	r1, r2, r1
   1f640:	rscs	r0, r0, r2, asr #31
   1f644:	bcs	1f778 <__assert_fail@plt+0xe3b0>
   1f648:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f64c:	b	1f650 <__assert_fail@plt+0xe288>
   1f650:	b	1f6a8 <__assert_fail@plt+0xe2e0>
   1f654:	b	1f6a8 <__assert_fail@plt+0xe2e0>
   1f658:	ldr	r0, [fp, #8]
   1f65c:	cmn	r0, #1
   1f660:	bne	1f6a8 <__assert_fail@plt+0xe2e0>
   1f664:	b	1f668 <__assert_fail@plt+0xe2a0>
   1f668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f66c:	add	r0, r0, #0
   1f670:	movw	r1, #0
   1f674:	cmp	r1, r0
   1f678:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f67c:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f684:	movw	r1, #0
   1f688:	cmp	r1, r0
   1f68c:	bge	1f78c <__assert_fail@plt+0xe3c4>
   1f690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f694:	sub	r0, r0, #1
   1f698:	mvn	r1, #0
   1f69c:	cmp	r1, r0
   1f6a0:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f6a4:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f6a8:	ldr	r0, [fp, #8]
   1f6ac:	movw	r1, #0
   1f6b0:	sdiv	r0, r1, r0
   1f6b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f6b8:	cmp	r0, r1
   1f6bc:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f6c0:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f6c4:	ldr	r0, [fp, #8]
   1f6c8:	cmp	r0, #0
   1f6cc:	bne	1f6d4 <__assert_fail@plt+0xe30c>
   1f6d0:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6d8:	cmp	r0, #0
   1f6dc:	bge	1f748 <__assert_fail@plt+0xe380>
   1f6e0:	b	1f6e4 <__assert_fail@plt+0xe31c>
   1f6e4:	b	1f72c <__assert_fail@plt+0xe364>
   1f6e8:	b	1f72c <__assert_fail@plt+0xe364>
   1f6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6f0:	cmn	r0, #1
   1f6f4:	bne	1f72c <__assert_fail@plt+0xe364>
   1f6f8:	b	1f6fc <__assert_fail@plt+0xe334>
   1f6fc:	ldr	r0, [fp, #8]
   1f700:	add	r0, r0, #0
   1f704:	movw	r1, #0
   1f708:	cmp	r1, r0
   1f70c:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f710:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f714:	ldr	r0, [fp, #8]
   1f718:	sub	r0, r0, #1
   1f71c:	mvn	r1, #0
   1f720:	cmp	r1, r0
   1f724:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f728:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f730:	movw	r1, #0
   1f734:	sdiv	r0, r1, r0
   1f738:	ldr	r1, [fp, #8]
   1f73c:	cmp	r0, r1
   1f740:	blt	1f778 <__assert_fail@plt+0xe3b0>
   1f744:	b	1f78c <__assert_fail@plt+0xe3c4>
   1f748:	ldr	r0, [fp, #8]
   1f74c:	asr	r3, r0, #31
   1f750:	mvn	r1, #0
   1f754:	str	r0, [sp, #4]
   1f758:	mov	r0, r1
   1f75c:	ldr	r2, [sp, #4]
   1f760:	bl	22990 <__assert_fail@plt+0x115c8>
   1f764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f768:	subs	r0, r0, r2
   1f76c:	sbcs	r1, r1, r2, asr #31
   1f770:	bcs	1f78c <__assert_fail@plt+0xe3c4>
   1f774:	b	1f778 <__assert_fail@plt+0xe3b0>
   1f778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f77c:	ldr	r1, [fp, #8]
   1f780:	mul	r0, r0, r1
   1f784:	str	r0, [fp, #-28]	; 0xffffffe4
   1f788:	b	1f7a0 <__assert_fail@plt+0xe3d8>
   1f78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f790:	ldr	r1, [fp, #8]
   1f794:	mul	r0, r0, r1
   1f798:	str	r0, [fp, #-28]	; 0xffffffe4
   1f79c:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f7a0:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1f7a4:	ldr	r0, [fp, #-4]
   1f7a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f7ac:	bl	1ccdc <__assert_fail@plt+0xb914>
   1f7b0:	str	r0, [fp, #-4]
   1f7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7b8:	ldr	r1, [fp, #-8]
   1f7bc:	str	r0, [r1]
   1f7c0:	ldr	r0, [fp, #-4]
   1f7c4:	mov	sp, fp
   1f7c8:	pop	{fp, pc}
   1f7cc:	svcvc	0x00ffffff
   1f7d0:	andhi	r0, r0, r1
   1f7d4:	andhi	r0, r0, r0
   1f7d8:			; <UNDEFINED> instruction: 0xffff8000
   1f7dc:	push	{fp, lr}
   1f7e0:	mov	fp, sp
   1f7e4:	sub	sp, sp, #8
   1f7e8:	str	r0, [sp, #4]
   1f7ec:	ldr	r0, [sp, #4]
   1f7f0:	movw	r1, #1
   1f7f4:	bl	1f800 <__assert_fail@plt+0xe438>
   1f7f8:	mov	sp, fp
   1f7fc:	pop	{fp, pc}
   1f800:	push	{fp, lr}
   1f804:	mov	fp, sp
   1f808:	sub	sp, sp, #8
   1f80c:	str	r0, [sp, #4]
   1f810:	str	r1, [sp]
   1f814:	ldr	r0, [sp, #4]
   1f818:	ldr	r1, [sp]
   1f81c:	bl	1faf4 <__assert_fail@plt+0xe72c>
   1f820:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1f824:	mov	sp, fp
   1f828:	pop	{fp, pc}
   1f82c:	push	{fp, lr}
   1f830:	mov	fp, sp
   1f834:	sub	sp, sp, #8
   1f838:	str	r0, [sp, #4]
   1f83c:	ldr	r0, [sp, #4]
   1f840:	movw	r1, #1
   1f844:	bl	1f850 <__assert_fail@plt+0xe488>
   1f848:	mov	sp, fp
   1f84c:	pop	{fp, pc}
   1f850:	push	{fp, lr}
   1f854:	mov	fp, sp
   1f858:	sub	sp, sp, #8
   1f85c:	str	r0, [sp, #4]
   1f860:	str	r1, [sp]
   1f864:	ldr	r0, [sp, #4]
   1f868:	ldr	r1, [sp]
   1f86c:	bl	20b00 <__assert_fail@plt+0xf738>
   1f870:	bl	1cc68 <__assert_fail@plt+0xb8a0>
   1f874:	mov	sp, fp
   1f878:	pop	{fp, pc}
   1f87c:	push	{fp, lr}
   1f880:	mov	fp, sp
   1f884:	sub	sp, sp, #16
   1f888:	str	r0, [fp, #-4]
   1f88c:	str	r1, [sp, #8]
   1f890:	ldr	r0, [sp, #8]
   1f894:	bl	1cc44 <__assert_fail@plt+0xb87c>
   1f898:	ldr	r1, [fp, #-4]
   1f89c:	ldr	r2, [sp, #8]
   1f8a0:	str	r0, [sp, #4]
   1f8a4:	bl	1114c <memcpy@plt>
   1f8a8:	ldr	r0, [sp, #4]
   1f8ac:	mov	sp, fp
   1f8b0:	pop	{fp, pc}
   1f8b4:	push	{fp, lr}
   1f8b8:	mov	fp, sp
   1f8bc:	sub	sp, sp, #16
   1f8c0:	str	r0, [fp, #-4]
   1f8c4:	str	r1, [sp, #8]
   1f8c8:	ldr	r0, [sp, #8]
   1f8cc:	bl	1cc98 <__assert_fail@plt+0xb8d0>
   1f8d0:	ldr	r1, [fp, #-4]
   1f8d4:	ldr	r2, [sp, #8]
   1f8d8:	str	r0, [sp, #4]
   1f8dc:	bl	1114c <memcpy@plt>
   1f8e0:	ldr	r0, [sp, #4]
   1f8e4:	mov	sp, fp
   1f8e8:	pop	{fp, pc}
   1f8ec:	push	{fp, lr}
   1f8f0:	mov	fp, sp
   1f8f4:	sub	sp, sp, #16
   1f8f8:	str	r0, [fp, #-4]
   1f8fc:	str	r1, [sp, #8]
   1f900:	ldr	r0, [sp, #8]
   1f904:	add	r0, r0, #1
   1f908:	bl	1cc98 <__assert_fail@plt+0xb8d0>
   1f90c:	str	r0, [sp, #4]
   1f910:	ldr	r0, [sp, #4]
   1f914:	ldr	r1, [sp, #8]
   1f918:	add	r0, r0, r1
   1f91c:	movw	r1, #0
   1f920:	strb	r1, [r0]
   1f924:	ldr	r0, [sp, #4]
   1f928:	ldr	r1, [fp, #-4]
   1f92c:	ldr	r2, [sp, #8]
   1f930:	str	r0, [sp]
   1f934:	bl	1114c <memcpy@plt>
   1f938:	ldr	r0, [sp]
   1f93c:	mov	sp, fp
   1f940:	pop	{fp, pc}
   1f944:	push	{fp, lr}
   1f948:	mov	fp, sp
   1f94c:	sub	sp, sp, #8
   1f950:	str	r0, [sp, #4]
   1f954:	ldr	r0, [sp, #4]
   1f958:	ldr	r1, [sp, #4]
   1f95c:	str	r0, [sp]
   1f960:	mov	r0, r1
   1f964:	bl	11260 <strlen@plt>
   1f968:	add	r1, r0, #1
   1f96c:	ldr	r0, [sp]
   1f970:	bl	1f87c <__assert_fail@plt+0xe4b4>
   1f974:	mov	sp, fp
   1f978:	pop	{fp, pc}
   1f97c:	push	{fp, lr}
   1f980:	mov	fp, sp
   1f984:	sub	sp, sp, #8
   1f988:	movw	r0, #16672	; 0x4120
   1f98c:	movt	r0, #3
   1f990:	ldr	r0, [r0]
   1f994:	movw	r1, #15044	; 0x3ac4
   1f998:	movt	r1, #2
   1f99c:	str	r0, [sp, #4]
   1f9a0:	mov	r0, r1
   1f9a4:	bl	11254 <gettext@plt>
   1f9a8:	ldr	r1, [sp, #4]
   1f9ac:	str	r0, [sp]
   1f9b0:	mov	r0, r1
   1f9b4:	movw	r1, #0
   1f9b8:	movw	r2, #12422	; 0x3086
   1f9bc:	movt	r2, #2
   1f9c0:	ldr	r3, [sp]
   1f9c4:	bl	111e8 <error@plt>
   1f9c8:	bl	11398 <abort@plt>
   1f9cc:	push	{fp, lr}
   1f9d0:	mov	fp, sp
   1f9d4:	sub	sp, sp, #16
   1f9d8:	str	r0, [fp, #-4]
   1f9dc:	str	r1, [sp, #8]
   1f9e0:	str	r2, [sp, #4]
   1f9e4:	ldr	r0, [fp, #-4]
   1f9e8:	ldr	r1, [sp, #8]
   1f9ec:	orr	r1, r1, #512	; 0x200
   1f9f0:	ldr	r2, [sp, #4]
   1f9f4:	bl	13554 <__assert_fail@plt+0x218c>
   1f9f8:	str	r0, [sp]
   1f9fc:	ldr	r0, [sp]
   1fa00:	movw	r1, #0
   1fa04:	cmp	r0, r1
   1fa08:	bne	1fa44 <__assert_fail@plt+0xe67c>
   1fa0c:	bl	11290 <__errno_location@plt>
   1fa10:	ldr	r0, [r0]
   1fa14:	cmp	r0, #22
   1fa18:	beq	1fa20 <__assert_fail@plt+0xe658>
   1fa1c:	b	1fa40 <__assert_fail@plt+0xe678>
   1fa20:	movw	r0, #15061	; 0x3ad5
   1fa24:	movt	r0, #2
   1fa28:	movw	r1, #15077	; 0x3ae5
   1fa2c:	movt	r1, #2
   1fa30:	movw	r2, #41	; 0x29
   1fa34:	movw	r3, #15088	; 0x3af0
   1fa38:	movt	r3, #2
   1fa3c:	bl	113c8 <__assert_fail@plt>
   1fa40:	bl	1f97c <__assert_fail@plt+0xe5b4>
   1fa44:	ldr	r0, [sp]
   1fa48:	mov	sp, fp
   1fa4c:	pop	{fp, pc}
   1fa50:	sub	sp, sp, #16
   1fa54:	str	r0, [sp, #12]
   1fa58:	str	r1, [sp, #8]
   1fa5c:	ldr	r0, [sp, #12]
   1fa60:	ldr	r0, [r0, #48]	; 0x30
   1fa64:	and	r0, r0, #16
   1fa68:	cmp	r0, #0
   1fa6c:	beq	1fa8c <__assert_fail@plt+0xe6c4>
   1fa70:	ldr	r0, [sp, #12]
   1fa74:	ldr	r0, [r0, #48]	; 0x30
   1fa78:	and	r0, r0, #1
   1fa7c:	cmp	r0, #0
   1fa80:	movw	r0, #1
   1fa84:	str	r0, [sp, #4]
   1fa88:	beq	1fae4 <__assert_fail@plt+0xe71c>
   1fa8c:	ldr	r0, [sp, #12]
   1fa90:	ldr	r0, [r0, #48]	; 0x30
   1fa94:	and	r0, r0, #16
   1fa98:	cmp	r0, #0
   1fa9c:	movw	r0, #0
   1faa0:	str	r0, [sp]
   1faa4:	beq	1fadc <__assert_fail@plt+0xe714>
   1faa8:	ldr	r0, [sp, #12]
   1faac:	ldr	r0, [r0, #48]	; 0x30
   1fab0:	and	r0, r0, #1
   1fab4:	cmp	r0, #0
   1fab8:	movw	r0, #0
   1fabc:	str	r0, [sp]
   1fac0:	beq	1fadc <__assert_fail@plt+0xe714>
   1fac4:	ldr	r0, [sp, #8]
   1fac8:	ldr	r0, [r0, #48]	; 0x30
   1facc:	cmp	r0, #0
   1fad0:	movw	r0, #0
   1fad4:	movne	r0, #1
   1fad8:	str	r0, [sp]
   1fadc:	ldr	r0, [sp]
   1fae0:	str	r0, [sp, #4]
   1fae4:	ldr	r0, [sp, #4]
   1fae8:	and	r0, r0, #1
   1faec:	add	sp, sp, #16
   1faf0:	bx	lr
   1faf4:	push	{fp, lr}
   1faf8:	mov	fp, sp
   1fafc:	sub	sp, sp, #16
   1fb00:	str	r0, [sp, #8]
   1fb04:	str	r1, [sp, #4]
   1fb08:	ldr	r0, [sp, #8]
   1fb0c:	cmp	r0, #0
   1fb10:	beq	1fb20 <__assert_fail@plt+0xe758>
   1fb14:	ldr	r0, [sp, #4]
   1fb18:	cmp	r0, #0
   1fb1c:	bne	1fb2c <__assert_fail@plt+0xe764>
   1fb20:	movw	r0, #1
   1fb24:	str	r0, [sp, #4]
   1fb28:	str	r0, [sp, #8]
   1fb2c:	ldr	r0, [sp, #4]
   1fb30:	cmp	r0, #0
   1fb34:	beq	1fb68 <__assert_fail@plt+0xe7a0>
   1fb38:	ldr	r0, [pc, #76]	; 1fb8c <__assert_fail@plt+0xe7c4>
   1fb3c:	ldr	r1, [sp, #4]
   1fb40:	udiv	r0, r0, r1
   1fb44:	ldr	r1, [sp, #8]
   1fb48:	cmp	r0, r1
   1fb4c:	bcs	1fb68 <__assert_fail@plt+0xe7a0>
   1fb50:	bl	11290 <__errno_location@plt>
   1fb54:	movw	r1, #12
   1fb58:	str	r1, [r0]
   1fb5c:	movw	r0, #0
   1fb60:	str	r0, [fp, #-4]
   1fb64:	b	1fb80 <__assert_fail@plt+0xe7b8>
   1fb68:	ldr	r0, [sp, #8]
   1fb6c:	ldr	r1, [sp, #4]
   1fb70:	bl	110e0 <calloc@plt>
   1fb74:	str	r0, [sp]
   1fb78:	ldr	r0, [sp]
   1fb7c:	str	r0, [fp, #-4]
   1fb80:	ldr	r0, [fp, #-4]
   1fb84:	mov	sp, fp
   1fb88:	pop	{fp, pc}
   1fb8c:	svcvc	0x00ffffff
   1fb90:	push	{fp, lr}
   1fb94:	mov	fp, sp
   1fb98:	sub	sp, sp, #16
   1fb9c:	str	r0, [sp, #8]
   1fba0:	ldr	r0, [sp, #8]
   1fba4:	cmp	r0, #0
   1fba8:	bne	1fbb4 <__assert_fail@plt+0xe7ec>
   1fbac:	movw	r0, #1
   1fbb0:	str	r0, [sp, #8]
   1fbb4:	ldr	r0, [pc, #64]	; 1fbfc <__assert_fail@plt+0xe834>
   1fbb8:	ldr	r1, [sp, #8]
   1fbbc:	cmp	r0, r1
   1fbc0:	bcs	1fbdc <__assert_fail@plt+0xe814>
   1fbc4:	bl	11290 <__errno_location@plt>
   1fbc8:	movw	r1, #12
   1fbcc:	str	r1, [r0]
   1fbd0:	movw	r0, #0
   1fbd4:	str	r0, [fp, #-4]
   1fbd8:	b	1fbf0 <__assert_fail@plt+0xe828>
   1fbdc:	ldr	r0, [sp, #8]
   1fbe0:	bl	11200 <malloc@plt>
   1fbe4:	str	r0, [sp, #4]
   1fbe8:	ldr	r0, [sp, #4]
   1fbec:	str	r0, [fp, #-4]
   1fbf0:	ldr	r0, [fp, #-4]
   1fbf4:	mov	sp, fp
   1fbf8:	pop	{fp, pc}
   1fbfc:	svcvc	0x00ffffff
   1fc00:	push	{fp, lr}
   1fc04:	mov	fp, sp
   1fc08:	sub	sp, sp, #16
   1fc0c:	str	r0, [sp, #8]
   1fc10:	str	r1, [sp, #4]
   1fc14:	ldr	r0, [sp, #8]
   1fc18:	movw	r1, #0
   1fc1c:	cmp	r0, r1
   1fc20:	bne	1fc34 <__assert_fail@plt+0xe86c>
   1fc24:	ldr	r0, [sp, #4]
   1fc28:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   1fc2c:	str	r0, [fp, #-4]
   1fc30:	b	1fc94 <__assert_fail@plt+0xe8cc>
   1fc34:	ldr	r0, [sp, #4]
   1fc38:	cmp	r0, #0
   1fc3c:	bne	1fc54 <__assert_fail@plt+0xe88c>
   1fc40:	ldr	r0, [sp, #8]
   1fc44:	bl	208f4 <__assert_fail@plt+0xf52c>
   1fc48:	movw	r0, #0
   1fc4c:	str	r0, [fp, #-4]
   1fc50:	b	1fc94 <__assert_fail@plt+0xe8cc>
   1fc54:	ldr	r0, [pc, #68]	; 1fca0 <__assert_fail@plt+0xe8d8>
   1fc58:	ldr	r1, [sp, #4]
   1fc5c:	cmp	r0, r1
   1fc60:	bcs	1fc7c <__assert_fail@plt+0xe8b4>
   1fc64:	bl	11290 <__errno_location@plt>
   1fc68:	movw	r1, #12
   1fc6c:	str	r1, [r0]
   1fc70:	movw	r0, #0
   1fc74:	str	r0, [fp, #-4]
   1fc78:	b	1fc94 <__assert_fail@plt+0xe8cc>
   1fc7c:	ldr	r0, [sp, #8]
   1fc80:	ldr	r1, [sp, #4]
   1fc84:	bl	11170 <realloc@plt>
   1fc88:	str	r0, [sp]
   1fc8c:	ldr	r0, [sp]
   1fc90:	str	r0, [fp, #-4]
   1fc94:	ldr	r0, [fp, #-4]
   1fc98:	mov	sp, fp
   1fc9c:	pop	{fp, pc}
   1fca0:	svcvc	0x00ffffff
   1fca4:	push	{r4, sl, fp, lr}
   1fca8:	add	fp, sp, #8
   1fcac:	sub	sp, sp, #16
   1fcb0:	str	r0, [sp, #8]
   1fcb4:	str	r1, [sp, #12]
   1fcb8:	str	r2, [sp, #4]
   1fcbc:	ldr	r0, [sp, #8]
   1fcc0:	ldr	r1, [sp, #12]
   1fcc4:	ldr	r2, [sp, #4]
   1fcc8:	rsb	r3, r2, #32
   1fccc:	lsr	ip, r0, r3
   1fcd0:	orr	ip, ip, r1, lsl r2
   1fcd4:	sub	lr, r2, #32
   1fcd8:	cmp	lr, #0
   1fcdc:	lslpl	ip, r0, lr
   1fce0:	lsl	r4, r0, r2
   1fce4:	cmp	lr, #0
   1fce8:	movwpl	r4, #0
   1fcec:	rsb	r2, r2, #64	; 0x40
   1fcf0:	lsr	lr, r1, r2
   1fcf4:	cmp	r3, #0
   1fcf8:	movwpl	lr, #0
   1fcfc:	lsr	r0, r0, r2
   1fd00:	rsb	r2, r2, #32
   1fd04:	orr	r0, r0, r1, lsl r2
   1fd08:	cmp	r3, #0
   1fd0c:	lsrpl	r0, r1, r3
   1fd10:	orr	r0, r4, r0
   1fd14:	orr	r1, ip, lr
   1fd18:	sub	sp, fp, #8
   1fd1c:	pop	{r4, sl, fp, pc}
   1fd20:	push	{r4, sl, fp, lr}
   1fd24:	add	fp, sp, #8
   1fd28:	sub	sp, sp, #16
   1fd2c:	str	r0, [sp, #8]
   1fd30:	str	r1, [sp, #12]
   1fd34:	str	r2, [sp, #4]
   1fd38:	ldr	r0, [sp, #8]
   1fd3c:	ldr	r1, [sp, #12]
   1fd40:	ldr	r2, [sp, #4]
   1fd44:	lsr	r3, r1, r2
   1fd48:	sub	ip, r2, #32
   1fd4c:	cmp	ip, #0
   1fd50:	movwpl	r3, #0
   1fd54:	lsr	lr, r0, r2
   1fd58:	rsb	r4, r2, #32
   1fd5c:	orr	lr, lr, r1, lsl r4
   1fd60:	cmp	ip, #0
   1fd64:	lsrpl	lr, r1, ip
   1fd68:	rsb	r2, r2, #64	; 0x40
   1fd6c:	rsb	ip, r2, #32
   1fd70:	lsr	ip, r0, ip
   1fd74:	orr	r1, ip, r1, lsl r2
   1fd78:	cmp	r4, #0
   1fd7c:	lslpl	r1, r0, r4
   1fd80:	lsl	r0, r0, r2
   1fd84:	cmp	r4, #0
   1fd88:	movwpl	r0, #0
   1fd8c:	orr	r0, lr, r0
   1fd90:	orr	r1, r3, r1
   1fd94:	sub	sp, fp, #8
   1fd98:	pop	{r4, sl, fp, pc}
   1fd9c:	sub	sp, sp, #8
   1fda0:	str	r0, [sp, #4]
   1fda4:	str	r1, [sp]
   1fda8:	ldr	r0, [sp, #4]
   1fdac:	ldr	r1, [sp]
   1fdb0:	lsl	r0, r0, r1
   1fdb4:	ldr	r1, [sp, #4]
   1fdb8:	ldr	r2, [sp]
   1fdbc:	movw	r3, #32
   1fdc0:	sub	r2, r3, r2
   1fdc4:	lsr	r1, r1, r2
   1fdc8:	orr	r0, r0, r1
   1fdcc:	add	sp, sp, #8
   1fdd0:	bx	lr
   1fdd4:	sub	sp, sp, #8
   1fdd8:	str	r0, [sp, #4]
   1fddc:	str	r1, [sp]
   1fde0:	ldr	r0, [sp, #4]
   1fde4:	ldr	r1, [sp]
   1fde8:	lsr	r0, r0, r1
   1fdec:	ldr	r1, [sp, #4]
   1fdf0:	ldr	r2, [sp]
   1fdf4:	movw	r3, #32
   1fdf8:	sub	r2, r3, r2
   1fdfc:	lsl	r1, r1, r2
   1fe00:	orr	r0, r0, r1
   1fe04:	add	sp, sp, #8
   1fe08:	bx	lr
   1fe0c:	sub	sp, sp, #8
   1fe10:	str	r0, [sp, #4]
   1fe14:	str	r1, [sp]
   1fe18:	ldr	r0, [sp, #4]
   1fe1c:	ldr	r1, [sp]
   1fe20:	lsl	r0, r0, r1
   1fe24:	ldr	r1, [sp, #4]
   1fe28:	ldr	r2, [sp]
   1fe2c:	movw	r3, #32
   1fe30:	sub	r2, r3, r2
   1fe34:	lsr	r1, r1, r2
   1fe38:	orr	r0, r0, r1
   1fe3c:	add	sp, sp, #8
   1fe40:	bx	lr
   1fe44:	sub	sp, sp, #8
   1fe48:	str	r0, [sp, #4]
   1fe4c:	str	r1, [sp]
   1fe50:	ldr	r0, [sp, #4]
   1fe54:	ldr	r1, [sp]
   1fe58:	lsr	r0, r0, r1
   1fe5c:	ldr	r1, [sp, #4]
   1fe60:	ldr	r2, [sp]
   1fe64:	movw	r3, #32
   1fe68:	sub	r2, r3, r2
   1fe6c:	lsl	r1, r1, r2
   1fe70:	orr	r0, r0, r1
   1fe74:	add	sp, sp, #8
   1fe78:	bx	lr
   1fe7c:	sub	sp, sp, #8
   1fe80:	strh	r0, [sp, #6]
   1fe84:	str	r1, [sp]
   1fe88:	ldrh	r0, [sp, #6]
   1fe8c:	ldr	r1, [sp]
   1fe90:	lsl	r0, r0, r1
   1fe94:	ldrh	r1, [sp, #6]
   1fe98:	ldr	r2, [sp]
   1fe9c:	movw	r3, #16
   1fea0:	sub	r2, r3, r2
   1fea4:	lsr	r1, r1, r2
   1fea8:	orr	r0, r0, r1
   1feac:	movw	r1, #65535	; 0xffff
   1feb0:	and	r0, r0, r1
   1feb4:	uxth	r0, r0
   1feb8:	add	sp, sp, #8
   1febc:	bx	lr
   1fec0:	sub	sp, sp, #8
   1fec4:	strh	r0, [sp, #6]
   1fec8:	str	r1, [sp]
   1fecc:	ldrh	r0, [sp, #6]
   1fed0:	ldr	r1, [sp]
   1fed4:	lsr	r0, r0, r1
   1fed8:	ldrh	r1, [sp, #6]
   1fedc:	ldr	r2, [sp]
   1fee0:	movw	r3, #16
   1fee4:	sub	r2, r3, r2
   1fee8:	lsl	r1, r1, r2
   1feec:	orr	r0, r0, r1
   1fef0:	movw	r1, #65535	; 0xffff
   1fef4:	and	r0, r0, r1
   1fef8:	uxth	r0, r0
   1fefc:	add	sp, sp, #8
   1ff00:	bx	lr
   1ff04:	sub	sp, sp, #8
   1ff08:	strb	r0, [sp, #7]
   1ff0c:	str	r1, [sp]
   1ff10:	ldrb	r0, [sp, #7]
   1ff14:	ldr	r1, [sp]
   1ff18:	lsl	r0, r0, r1
   1ff1c:	ldrb	r1, [sp, #7]
   1ff20:	ldr	r2, [sp]
   1ff24:	movw	r3, #8
   1ff28:	sub	r2, r3, r2
   1ff2c:	lsr	r1, r1, r2
   1ff30:	orr	r0, r0, r1
   1ff34:	and	r0, r0, #255	; 0xff
   1ff38:	and	r0, r0, #255	; 0xff
   1ff3c:	add	sp, sp, #8
   1ff40:	bx	lr
   1ff44:	sub	sp, sp, #8
   1ff48:	strb	r0, [sp, #7]
   1ff4c:	str	r1, [sp]
   1ff50:	ldrb	r0, [sp, #7]
   1ff54:	ldr	r1, [sp]
   1ff58:	lsr	r0, r0, r1
   1ff5c:	ldrb	r1, [sp, #7]
   1ff60:	ldr	r2, [sp]
   1ff64:	movw	r3, #8
   1ff68:	sub	r2, r3, r2
   1ff6c:	lsl	r1, r1, r2
   1ff70:	orr	r0, r0, r1
   1ff74:	and	r0, r0, #255	; 0xff
   1ff78:	and	r0, r0, #255	; 0xff
   1ff7c:	add	sp, sp, #8
   1ff80:	bx	lr
   1ff84:	push	{fp, lr}
   1ff88:	mov	fp, sp
   1ff8c:	sub	sp, sp, #24
   1ff90:	str	r0, [fp, #-8]
   1ff94:	str	r1, [sp, #12]
   1ff98:	ldr	r0, [fp, #-8]
   1ff9c:	str	r0, [sp, #8]
   1ffa0:	ldr	r0, [sp, #12]
   1ffa4:	str	r0, [sp, #4]
   1ffa8:	ldr	r0, [sp, #8]
   1ffac:	ldr	r1, [sp, #4]
   1ffb0:	cmp	r0, r1
   1ffb4:	bne	1ffc4 <__assert_fail@plt+0xebfc>
   1ffb8:	movw	r0, #0
   1ffbc:	str	r0, [fp, #-4]
   1ffc0:	b	20030 <__assert_fail@plt+0xec68>
   1ffc4:	b	1ffc8 <__assert_fail@plt+0xec00>
   1ffc8:	ldr	r0, [sp, #8]
   1ffcc:	ldrb	r0, [r0]
   1ffd0:	bl	2263c <__assert_fail@plt+0x11274>
   1ffd4:	strb	r0, [sp, #3]
   1ffd8:	ldr	r0, [sp, #4]
   1ffdc:	ldrb	r0, [r0]
   1ffe0:	bl	2263c <__assert_fail@plt+0x11274>
   1ffe4:	strb	r0, [sp, #2]
   1ffe8:	ldrb	r0, [sp, #3]
   1ffec:	cmp	r0, #0
   1fff0:	bne	1fff8 <__assert_fail@plt+0xec30>
   1fff4:	b	20020 <__assert_fail@plt+0xec58>
   1fff8:	ldr	r0, [sp, #8]
   1fffc:	add	r0, r0, #1
   20000:	str	r0, [sp, #8]
   20004:	ldr	r0, [sp, #4]
   20008:	add	r0, r0, #1
   2000c:	str	r0, [sp, #4]
   20010:	ldrb	r0, [sp, #3]
   20014:	ldrb	r1, [sp, #2]
   20018:	cmp	r0, r1
   2001c:	beq	1ffc8 <__assert_fail@plt+0xec00>
   20020:	ldrb	r0, [sp, #3]
   20024:	ldrb	r1, [sp, #2]
   20028:	sub	r0, r0, r1
   2002c:	str	r0, [fp, #-4]
   20030:	ldr	r0, [fp, #-4]
   20034:	mov	sp, fp
   20038:	pop	{fp, pc}
   2003c:	push	{fp, lr}
   20040:	mov	fp, sp
   20044:	sub	sp, sp, #16
   20048:	str	r0, [sp, #8]
   2004c:	ldr	r0, [sp, #8]
   20050:	bl	111c4 <__fpending@plt>
   20054:	cmp	r0, #0
   20058:	movw	r0, #0
   2005c:	movne	r0, #1
   20060:	and	r0, r0, #1
   20064:	strb	r0, [sp, #7]
   20068:	ldr	r0, [sp, #8]
   2006c:	bl	111d0 <ferror_unlocked@plt>
   20070:	cmp	r0, #0
   20074:	movw	r0, #0
   20078:	movne	r0, #1
   2007c:	and	r0, r0, #1
   20080:	strb	r0, [sp, #6]
   20084:	ldr	r0, [sp, #8]
   20088:	bl	202fc <__assert_fail@plt+0xef34>
   2008c:	cmp	r0, #0
   20090:	movw	r0, #0
   20094:	movne	r0, #1
   20098:	and	r0, r0, #1
   2009c:	strb	r0, [sp, #5]
   200a0:	ldrb	r0, [sp, #6]
   200a4:	tst	r0, #1
   200a8:	bne	200d4 <__assert_fail@plt+0xed0c>
   200ac:	ldrb	r0, [sp, #5]
   200b0:	tst	r0, #1
   200b4:	beq	200f8 <__assert_fail@plt+0xed30>
   200b8:	ldrb	r0, [sp, #7]
   200bc:	tst	r0, #1
   200c0:	bne	200d4 <__assert_fail@plt+0xed0c>
   200c4:	bl	11290 <__errno_location@plt>
   200c8:	ldr	r0, [r0]
   200cc:	cmp	r0, #9
   200d0:	beq	200f8 <__assert_fail@plt+0xed30>
   200d4:	ldrb	r0, [sp, #5]
   200d8:	tst	r0, #1
   200dc:	bne	200ec <__assert_fail@plt+0xed24>
   200e0:	bl	11290 <__errno_location@plt>
   200e4:	movw	r1, #0
   200e8:	str	r1, [r0]
   200ec:	mvn	r0, #0
   200f0:	str	r0, [fp, #-4]
   200f4:	b	20100 <__assert_fail@plt+0xed38>
   200f8:	movw	r0, #0
   200fc:	str	r0, [fp, #-4]
   20100:	ldr	r0, [fp, #-4]
   20104:	mov	sp, fp
   20108:	pop	{fp, pc}
   2010c:	sub	sp, sp, #4
   20110:	ldr	r1, [pc, #32]	; 20138 <__assert_fail@plt+0xed70>
   20114:	str	r0, [sp]
   20118:	ldr	r0, [sp]
   2011c:	mov	r2, #0
   20120:	str	r2, [r0, #20]
   20124:	str	r2, [r0, #16]
   20128:	ldr	r0, [sp]
   2012c:	str	r1, [r0, #24]
   20130:	add	sp, sp, #4
   20134:	bx	lr
   20138:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   2013c:	push	{fp, lr}
   20140:	mov	fp, sp
   20144:	sub	sp, sp, #16
   20148:	ldr	r2, [pc, #364]	; 202bc <__assert_fail@plt+0xeef4>
   2014c:	str	r0, [sp, #8]
   20150:	str	r1, [sp, #4]
   20154:	ldr	r0, [sp, #8]
   20158:	ldr	r0, [r0, #24]
   2015c:	cmp	r0, r2
   20160:	bne	20168 <__assert_fail@plt+0xeda0>
   20164:	b	20188 <__assert_fail@plt+0xedc0>
   20168:	movw	r0, #15166	; 0x3b3e
   2016c:	movt	r0, #2
   20170:	movw	r1, #15190	; 0x3b56
   20174:	movt	r1, #2
   20178:	movw	r2, #60	; 0x3c
   2017c:	movw	r3, #15208	; 0x3b68
   20180:	movt	r3, #2
   20184:	bl	113c8 <__assert_fail@plt>
   20188:	ldr	r0, [sp, #8]
   2018c:	ldr	r1, [r0, #16]
   20190:	ldr	r0, [r0, #20]
   20194:	orr	r0, r1, r0
   20198:	cmp	r0, #0
   2019c:	beq	20214 <__assert_fail@plt+0xee4c>
   201a0:	b	201a4 <__assert_fail@plt+0xeddc>
   201a4:	ldr	r0, [sp, #4]
   201a8:	ldr	r1, [r0, #96]	; 0x60
   201ac:	ldr	r0, [r0, #100]	; 0x64
   201b0:	ldr	r2, [sp, #8]
   201b4:	ldr	r3, [r2]
   201b8:	ldr	r2, [r2, #4]
   201bc:	eor	r0, r0, r2
   201c0:	eor	r1, r1, r3
   201c4:	orr	r0, r1, r0
   201c8:	cmp	r0, #0
   201cc:	bne	20214 <__assert_fail@plt+0xee4c>
   201d0:	b	201d4 <__assert_fail@plt+0xee0c>
   201d4:	ldr	r0, [sp, #4]
   201d8:	ldr	r1, [r0]
   201dc:	ldr	r0, [r0, #4]
   201e0:	ldr	r2, [sp, #8]
   201e4:	ldr	r3, [r2, #8]
   201e8:	ldr	r2, [r2, #12]
   201ec:	eor	r0, r0, r2
   201f0:	eor	r1, r1, r3
   201f4:	orr	r0, r1, r0
   201f8:	cmp	r0, #0
   201fc:	bne	20214 <__assert_fail@plt+0xee4c>
   20200:	b	20204 <__assert_fail@plt+0xee3c>
   20204:	movw	r0, #1
   20208:	and	r0, r0, #1
   2020c:	strb	r0, [fp, #-1]
   20210:	b	202ac <__assert_fail@plt+0xeee4>
   20214:	ldr	r0, [sp, #8]
   20218:	ldr	r1, [r0, #16]
   2021c:	ldr	r2, [r0, #20]
   20220:	adds	r1, r1, #1
   20224:	adc	r2, r2, #0
   20228:	str	r1, [r0, #16]
   2022c:	str	r2, [r0, #20]
   20230:	mov	r0, r1
   20234:	mov	r1, r2
   20238:	bl	202c0 <__assert_fail@plt+0xeef8>
   2023c:	tst	r0, #1
   20240:	beq	202a0 <__assert_fail@plt+0xeed8>
   20244:	ldr	r0, [sp, #8]
   20248:	ldr	r1, [r0, #16]
   2024c:	ldr	r0, [r0, #20]
   20250:	orr	r0, r1, r0
   20254:	cmp	r0, #0
   20258:	bne	20270 <__assert_fail@plt+0xeea8>
   2025c:	b	20260 <__assert_fail@plt+0xee98>
   20260:	movw	r0, #1
   20264:	and	r0, r0, #1
   20268:	strb	r0, [fp, #-1]
   2026c:	b	202ac <__assert_fail@plt+0xeee4>
   20270:	ldr	r0, [sp, #4]
   20274:	ldr	r1, [r0]
   20278:	ldr	r0, [r0, #4]
   2027c:	ldr	r2, [sp, #8]
   20280:	str	r0, [r2, #12]
   20284:	str	r1, [r2, #8]
   20288:	ldr	r0, [sp, #4]
   2028c:	ldr	r1, [r0, #96]	; 0x60
   20290:	ldr	r0, [r0, #100]	; 0x64
   20294:	ldr	r2, [sp, #8]
   20298:	str	r0, [r2, #4]
   2029c:	str	r1, [r2]
   202a0:	movw	r0, #0
   202a4:	and	r0, r0, #1
   202a8:	strb	r0, [fp, #-1]
   202ac:	ldrb	r0, [fp, #-1]
   202b0:	and	r0, r0, #1
   202b4:	mov	sp, fp
   202b8:	pop	{fp, pc}
   202bc:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   202c0:	sub	sp, sp, #8
   202c4:	str	r0, [sp]
   202c8:	str	r1, [sp, #4]
   202cc:	ldr	r0, [sp]
   202d0:	ldr	r1, [sp, #4]
   202d4:	subs	r2, r0, #1
   202d8:	sbc	r3, r1, #0
   202dc:	and	r0, r0, r2
   202e0:	and	r1, r1, r3
   202e4:	orr	r0, r0, r1
   202e8:	clz	r0, r0
   202ec:	lsr	r0, r0, #5
   202f0:	and	r0, r0, #1
   202f4:	add	sp, sp, #8
   202f8:	bx	lr
   202fc:	push	{fp, lr}
   20300:	mov	fp, sp
   20304:	sub	sp, sp, #32
   20308:	str	r0, [fp, #-8]
   2030c:	movw	r0, #0
   20310:	str	r0, [fp, #-12]
   20314:	str	r0, [sp, #12]
   20318:	ldr	r0, [fp, #-8]
   2031c:	bl	112b4 <fileno@plt>
   20320:	str	r0, [sp, #16]
   20324:	ldr	r0, [sp, #16]
   20328:	cmp	r0, #0
   2032c:	bge	20340 <__assert_fail@plt+0xef78>
   20330:	ldr	r0, [fp, #-8]
   20334:	bl	112c0 <fclose@plt>
   20338:	str	r0, [fp, #-4]
   2033c:	b	203dc <__assert_fail@plt+0xf014>
   20340:	ldr	r0, [fp, #-8]
   20344:	bl	11218 <__freading@plt>
   20348:	cmp	r0, #0
   2034c:	beq	20384 <__assert_fail@plt+0xefbc>
   20350:	ldr	r0, [fp, #-8]
   20354:	bl	112b4 <fileno@plt>
   20358:	mov	r1, sp
   2035c:	mov	r2, #1
   20360:	str	r2, [r1]
   20364:	mov	r1, #0
   20368:	mov	r2, r1
   2036c:	mov	r3, r1
   20370:	bl	111ac <lseek64@plt>
   20374:	and	r0, r0, r1
   20378:	cmn	r0, #1
   2037c:	beq	203a0 <__assert_fail@plt+0xefd8>
   20380:	b	20384 <__assert_fail@plt+0xefbc>
   20384:	ldr	r0, [fp, #-8]
   20388:	bl	20848 <__assert_fail@plt+0xf480>
   2038c:	cmp	r0, #0
   20390:	beq	203a0 <__assert_fail@plt+0xefd8>
   20394:	bl	11290 <__errno_location@plt>
   20398:	ldr	r0, [r0]
   2039c:	str	r0, [fp, #-12]
   203a0:	ldr	r0, [fp, #-8]
   203a4:	bl	112c0 <fclose@plt>
   203a8:	str	r0, [sp, #12]
   203ac:	ldr	r0, [fp, #-12]
   203b0:	cmp	r0, #0
   203b4:	beq	203d4 <__assert_fail@plt+0xf00c>
   203b8:	ldr	r0, [fp, #-12]
   203bc:	str	r0, [sp, #8]
   203c0:	bl	11290 <__errno_location@plt>
   203c4:	ldr	r1, [sp, #8]
   203c8:	str	r1, [r0]
   203cc:	mvn	r0, #0
   203d0:	str	r0, [sp, #12]
   203d4:	ldr	r0, [sp, #12]
   203d8:	str	r0, [fp, #-4]
   203dc:	ldr	r0, [fp, #-4]
   203e0:	mov	sp, fp
   203e4:	pop	{fp, pc}
   203e8:	sub	sp, sp, #8
   203ec:	push	{fp, lr}
   203f0:	mov	fp, sp
   203f4:	sub	sp, sp, #48	; 0x30
   203f8:	str	r3, [fp, #12]
   203fc:	str	r2, [fp, #8]
   20400:	str	r0, [fp, #-4]
   20404:	str	r1, [fp, #-8]
   20408:	mvn	r0, #0
   2040c:	str	r0, [fp, #-16]
   20410:	add	r0, fp, #8
   20414:	str	r0, [fp, #-12]
   20418:	ldr	r0, [fp, #-8]
   2041c:	cmp	r0, #0
   20420:	str	r0, [sp, #12]
   20424:	beq	20440 <__assert_fail@plt+0xf078>
   20428:	b	2042c <__assert_fail@plt+0xf064>
   2042c:	movw	r0, #1030	; 0x406
   20430:	ldr	r1, [sp, #12]
   20434:	cmp	r1, r0
   20438:	beq	20468 <__assert_fail@plt+0xf0a0>
   2043c:	b	20490 <__assert_fail@plt+0xf0c8>
   20440:	ldr	r0, [fp, #-12]
   20444:	add	r1, r0, #4
   20448:	str	r1, [fp, #-12]
   2044c:	ldr	r0, [r0]
   20450:	str	r0, [fp, #-20]	; 0xffffffec
   20454:	ldr	r0, [fp, #-4]
   20458:	ldr	r1, [fp, #-20]	; 0xffffffec
   2045c:	bl	2063c <__assert_fail@plt+0xf274>
   20460:	str	r0, [fp, #-16]
   20464:	b	2061c <__assert_fail@plt+0xf254>
   20468:	ldr	r0, [fp, #-12]
   2046c:	add	r1, r0, #4
   20470:	str	r1, [fp, #-12]
   20474:	ldr	r0, [r0]
   20478:	str	r0, [sp, #24]
   2047c:	ldr	r0, [fp, #-4]
   20480:	ldr	r1, [sp, #24]
   20484:	bl	20670 <__assert_fail@plt+0xf2a8>
   20488:	str	r0, [fp, #-16]
   2048c:	b	2061c <__assert_fail@plt+0xf254>
   20490:	ldr	r0, [fp, #-8]
   20494:	cmp	r0, #0
   20498:	str	r0, [sp, #8]
   2049c:	beq	205c4 <__assert_fail@plt+0xf1fc>
   204a0:	b	204a4 <__assert_fail@plt+0xf0dc>
   204a4:	ldr	r0, [sp, #8]
   204a8:	cmp	r0, #1
   204ac:	beq	205b0 <__assert_fail@plt+0xf1e8>
   204b0:	b	204b4 <__assert_fail@plt+0xf0ec>
   204b4:	ldr	r0, [sp, #8]
   204b8:	cmp	r0, #2
   204bc:	beq	205c4 <__assert_fail@plt+0xf1fc>
   204c0:	b	204c4 <__assert_fail@plt+0xf0fc>
   204c4:	ldr	r0, [sp, #8]
   204c8:	cmp	r0, #3
   204cc:	beq	205b0 <__assert_fail@plt+0xf1e8>
   204d0:	b	204d4 <__assert_fail@plt+0xf10c>
   204d4:	ldr	r0, [sp, #8]
   204d8:	cmp	r0, #4
   204dc:	beq	205c4 <__assert_fail@plt+0xf1fc>
   204e0:	b	204e4 <__assert_fail@plt+0xf11c>
   204e4:	ldr	r0, [sp, #8]
   204e8:	cmp	r0, #8
   204ec:	beq	205c4 <__assert_fail@plt+0xf1fc>
   204f0:	b	204f4 <__assert_fail@plt+0xf12c>
   204f4:	ldr	r0, [sp, #8]
   204f8:	cmp	r0, #9
   204fc:	beq	205b0 <__assert_fail@plt+0xf1e8>
   20500:	b	20504 <__assert_fail@plt+0xf13c>
   20504:	ldr	r0, [sp, #8]
   20508:	cmp	r0, #10
   2050c:	beq	205c4 <__assert_fail@plt+0xf1fc>
   20510:	b	20514 <__assert_fail@plt+0xf14c>
   20514:	ldr	r0, [sp, #8]
   20518:	cmp	r0, #11
   2051c:	beq	205b0 <__assert_fail@plt+0xf1e8>
   20520:	b	20524 <__assert_fail@plt+0xf15c>
   20524:	ldr	r0, [sp, #8]
   20528:	cmp	r0, #1024	; 0x400
   2052c:	beq	205c4 <__assert_fail@plt+0xf1fc>
   20530:	b	20534 <__assert_fail@plt+0xf16c>
   20534:	movw	r0, #1025	; 0x401
   20538:	ldr	r1, [sp, #8]
   2053c:	cmp	r1, r0
   20540:	beq	205b0 <__assert_fail@plt+0xf1e8>
   20544:	b	20548 <__assert_fail@plt+0xf180>
   20548:	movw	r0, #1026	; 0x402
   2054c:	ldr	r1, [sp, #8]
   20550:	cmp	r1, r0
   20554:	beq	205c4 <__assert_fail@plt+0xf1fc>
   20558:	b	2055c <__assert_fail@plt+0xf194>
   2055c:	movw	r0, #1030	; 0x406
   20560:	ldr	r1, [sp, #8]
   20564:	sub	r0, r1, r0
   20568:	cmp	r0, #2
   2056c:	bcc	205c4 <__assert_fail@plt+0xf1fc>
   20570:	b	20574 <__assert_fail@plt+0xf1ac>
   20574:	movw	r0, #1032	; 0x408
   20578:	ldr	r1, [sp, #8]
   2057c:	cmp	r1, r0
   20580:	beq	205b0 <__assert_fail@plt+0xf1e8>
   20584:	b	20588 <__assert_fail@plt+0xf1c0>
   20588:	movw	r0, #1033	; 0x409
   2058c:	ldr	r1, [sp, #8]
   20590:	cmp	r1, r0
   20594:	beq	205c4 <__assert_fail@plt+0xf1fc>
   20598:	b	2059c <__assert_fail@plt+0xf1d4>
   2059c:	movw	r0, #1034	; 0x40a
   205a0:	ldr	r1, [sp, #8]
   205a4:	cmp	r1, r0
   205a8:	bne	205f0 <__assert_fail@plt+0xf228>
   205ac:	b	205b0 <__assert_fail@plt+0xf1e8>
   205b0:	ldr	r0, [fp, #-4]
   205b4:	ldr	r1, [fp, #-8]
   205b8:	bl	112d8 <fcntl64@plt>
   205bc:	str	r0, [fp, #-16]
   205c0:	b	20618 <__assert_fail@plt+0xf250>
   205c4:	ldr	r0, [fp, #-12]
   205c8:	add	r1, r0, #4
   205cc:	str	r1, [fp, #-12]
   205d0:	ldr	r0, [r0]
   205d4:	str	r0, [sp, #20]
   205d8:	ldr	r0, [fp, #-4]
   205dc:	ldr	r1, [fp, #-8]
   205e0:	ldr	r2, [sp, #20]
   205e4:	bl	112d8 <fcntl64@plt>
   205e8:	str	r0, [fp, #-16]
   205ec:	b	20618 <__assert_fail@plt+0xf250>
   205f0:	ldr	r0, [fp, #-12]
   205f4:	add	r1, r0, #4
   205f8:	str	r1, [fp, #-12]
   205fc:	ldr	r0, [r0]
   20600:	str	r0, [sp, #16]
   20604:	ldr	r0, [fp, #-4]
   20608:	ldr	r1, [fp, #-8]
   2060c:	ldr	r2, [sp, #16]
   20610:	bl	112d8 <fcntl64@plt>
   20614:	str	r0, [fp, #-16]
   20618:	b	2061c <__assert_fail@plt+0xf254>
   2061c:	sub	r0, fp, #12
   20620:	ldr	r1, [fp, #-16]
   20624:	str	r0, [sp, #4]
   20628:	mov	r0, r1
   2062c:	mov	sp, fp
   20630:	pop	{fp, lr}
   20634:	add	sp, sp, #8
   20638:	bx	lr
   2063c:	push	{fp, lr}
   20640:	mov	fp, sp
   20644:	sub	sp, sp, #16
   20648:	str	r0, [fp, #-4]
   2064c:	str	r1, [sp, #8]
   20650:	ldr	r0, [fp, #-4]
   20654:	ldr	r2, [sp, #8]
   20658:	movw	r1, #0
   2065c:	bl	112d8 <fcntl64@plt>
   20660:	str	r0, [sp, #4]
   20664:	ldr	r0, [sp, #4]
   20668:	mov	sp, fp
   2066c:	pop	{fp, pc}
   20670:	push	{fp, lr}
   20674:	mov	fp, sp
   20678:	sub	sp, sp, #32
   2067c:	str	r0, [fp, #-4]
   20680:	str	r1, [fp, #-8]
   20684:	movw	r0, #17128	; 0x42e8
   20688:	movt	r0, #3
   2068c:	ldr	r0, [r0]
   20690:	movw	r1, #0
   20694:	cmp	r1, r0
   20698:	bgt	20718 <__assert_fail@plt+0xf350>
   2069c:	ldr	r0, [fp, #-4]
   206a0:	ldr	r2, [fp, #-8]
   206a4:	movw	r1, #1030	; 0x406
   206a8:	bl	112d8 <fcntl64@plt>
   206ac:	str	r0, [fp, #-12]
   206b0:	ldr	r0, [fp, #-12]
   206b4:	movw	r1, #0
   206b8:	cmp	r1, r0
   206bc:	ble	206d0 <__assert_fail@plt+0xf308>
   206c0:	bl	11290 <__errno_location@plt>
   206c4:	ldr	r0, [r0]
   206c8:	cmp	r0, #22
   206cc:	beq	206e4 <__assert_fail@plt+0xf31c>
   206d0:	movw	r0, #17128	; 0x42e8
   206d4:	movt	r0, #3
   206d8:	movw	r1, #1
   206dc:	str	r1, [r0]
   206e0:	b	20714 <__assert_fail@plt+0xf34c>
   206e4:	ldr	r0, [fp, #-4]
   206e8:	ldr	r1, [fp, #-8]
   206ec:	bl	2063c <__assert_fail@plt+0xf274>
   206f0:	str	r0, [fp, #-12]
   206f4:	ldr	r0, [fp, #-12]
   206f8:	cmp	r0, #0
   206fc:	blt	20710 <__assert_fail@plt+0xf348>
   20700:	movw	r0, #17128	; 0x42e8
   20704:	movt	r0, #3
   20708:	mvn	r1, #0
   2070c:	str	r1, [r0]
   20710:	b	20714 <__assert_fail@plt+0xf34c>
   20714:	b	20728 <__assert_fail@plt+0xf360>
   20718:	ldr	r0, [fp, #-4]
   2071c:	ldr	r1, [fp, #-8]
   20720:	bl	2063c <__assert_fail@plt+0xf274>
   20724:	str	r0, [fp, #-12]
   20728:	ldr	r0, [fp, #-12]
   2072c:	movw	r1, #0
   20730:	cmp	r1, r0
   20734:	bgt	207bc <__assert_fail@plt+0xf3f4>
   20738:	movw	r0, #17128	; 0x42e8
   2073c:	movt	r0, #3
   20740:	ldr	r0, [r0]
   20744:	cmn	r0, #1
   20748:	bne	207bc <__assert_fail@plt+0xf3f4>
   2074c:	ldr	r0, [fp, #-12]
   20750:	movw	r1, #1
   20754:	bl	112d8 <fcntl64@plt>
   20758:	str	r0, [sp, #16]
   2075c:	ldr	r0, [sp, #16]
   20760:	cmp	r0, #0
   20764:	blt	20784 <__assert_fail@plt+0xf3bc>
   20768:	ldr	r0, [fp, #-12]
   2076c:	ldr	r1, [sp, #16]
   20770:	orr	r2, r1, #1
   20774:	movw	r1, #2
   20778:	bl	112d8 <fcntl64@plt>
   2077c:	cmn	r0, #1
   20780:	bne	207b8 <__assert_fail@plt+0xf3f0>
   20784:	bl	11290 <__errno_location@plt>
   20788:	ldr	r0, [r0]
   2078c:	str	r0, [sp, #12]
   20790:	ldr	r0, [fp, #-12]
   20794:	bl	113a4 <close@plt>
   20798:	ldr	r1, [sp, #12]
   2079c:	str	r0, [sp, #8]
   207a0:	str	r1, [sp, #4]
   207a4:	bl	11290 <__errno_location@plt>
   207a8:	ldr	r1, [sp, #4]
   207ac:	str	r1, [r0]
   207b0:	mvn	r0, #0
   207b4:	str	r0, [fp, #-12]
   207b8:	b	207bc <__assert_fail@plt+0xf3f4>
   207bc:	ldr	r0, [fp, #-12]
   207c0:	mov	sp, fp
   207c4:	pop	{fp, pc}
   207c8:	sub	sp, sp, #8
   207cc:	push	{fp, lr}
   207d0:	mov	fp, sp
   207d4:	sub	sp, sp, #16
   207d8:	str	r3, [fp, #12]
   207dc:	str	r2, [fp, #8]
   207e0:	str	r0, [fp, #-4]
   207e4:	str	r1, [sp, #8]
   207e8:	movw	r0, #0
   207ec:	str	r0, [sp, #4]
   207f0:	ldr	r0, [sp, #8]
   207f4:	and	r0, r0, #64	; 0x40
   207f8:	cmp	r0, #0
   207fc:	beq	20824 <__assert_fail@plt+0xf45c>
   20800:	mov	r0, sp
   20804:	mov	r1, r0
   20808:	add	r2, fp, #8
   2080c:	str	r2, [r1]
   20810:	ldr	r1, [sp]
   20814:	add	r2, r1, #4
   20818:	str	r2, [sp]
   2081c:	ldr	r1, [r1]
   20820:	str	r1, [sp, #4]
   20824:	ldr	r0, [fp, #-4]
   20828:	ldr	r1, [sp, #8]
   2082c:	ldr	r2, [sp, #4]
   20830:	bl	111f4 <open64@plt>
   20834:	bl	1c300 <__assert_fail@plt+0xaf38>
   20838:	mov	sp, fp
   2083c:	pop	{fp, lr}
   20840:	add	sp, sp, #8
   20844:	bx	lr
   20848:	push	{fp, lr}
   2084c:	mov	fp, sp
   20850:	sub	sp, sp, #8
   20854:	str	r0, [sp]
   20858:	ldr	r0, [sp]
   2085c:	movw	r1, #0
   20860:	cmp	r0, r1
   20864:	beq	20878 <__assert_fail@plt+0xf4b0>
   20868:	ldr	r0, [sp]
   2086c:	bl	11218 <__freading@plt>
   20870:	cmp	r0, #0
   20874:	bne	20888 <__assert_fail@plt+0xf4c0>
   20878:	ldr	r0, [sp]
   2087c:	bl	1111c <fflush@plt>
   20880:	str	r0, [sp, #4]
   20884:	b	2089c <__assert_fail@plt+0xf4d4>
   20888:	ldr	r0, [sp]
   2088c:	bl	208a8 <__assert_fail@plt+0xf4e0>
   20890:	ldr	r0, [sp]
   20894:	bl	1111c <fflush@plt>
   20898:	str	r0, [sp, #4]
   2089c:	ldr	r0, [sp, #4]
   208a0:	mov	sp, fp
   208a4:	pop	{fp, pc}
   208a8:	push	{fp, lr}
   208ac:	mov	fp, sp
   208b0:	sub	sp, sp, #8
   208b4:	str	r0, [sp, #4]
   208b8:	ldr	r0, [sp, #4]
   208bc:	ldr	r0, [r0]
   208c0:	and	r0, r0, #256	; 0x100
   208c4:	cmp	r0, #0
   208c8:	beq	208ec <__assert_fail@plt+0xf524>
   208cc:	ldr	r0, [sp, #4]
   208d0:	mov	r1, sp
   208d4:	mov	r2, #1
   208d8:	str	r2, [r1]
   208dc:	mov	r1, #0
   208e0:	mov	r2, r1
   208e4:	mov	r3, r1
   208e8:	bl	20934 <__assert_fail@plt+0xf56c>
   208ec:	mov	sp, fp
   208f0:	pop	{fp, pc}
   208f4:	push	{fp, lr}
   208f8:	mov	fp, sp
   208fc:	sub	sp, sp, #16
   20900:	str	r0, [fp, #-4]
   20904:	bl	11290 <__errno_location@plt>
   20908:	ldr	r0, [r0]
   2090c:	str	r0, [sp, #8]
   20910:	ldr	r0, [fp, #-4]
   20914:	bl	11134 <free@plt>
   20918:	ldr	r0, [sp, #8]
   2091c:	str	r0, [sp, #4]
   20920:	bl	11290 <__errno_location@plt>
   20924:	ldr	r1, [sp, #4]
   20928:	str	r1, [r0]
   2092c:	mov	sp, fp
   20930:	pop	{fp, pc}
   20934:	push	{fp, lr}
   20938:	mov	fp, sp
   2093c:	sub	sp, sp, #32
   20940:	ldr	r1, [fp, #8]
   20944:	str	r0, [fp, #-8]
   20948:	str	r3, [sp, #20]
   2094c:	str	r2, [sp, #16]
   20950:	ldr	r0, [fp, #-8]
   20954:	ldr	r0, [r0, #8]
   20958:	ldr	r2, [fp, #-8]
   2095c:	ldr	r2, [r2, #4]
   20960:	cmp	r0, r2
   20964:	bne	20a10 <__assert_fail@plt+0xf648>
   20968:	ldr	r0, [fp, #-8]
   2096c:	ldr	r0, [r0, #20]
   20970:	ldr	r1, [fp, #-8]
   20974:	ldr	r1, [r1, #16]
   20978:	cmp	r0, r1
   2097c:	bne	20a10 <__assert_fail@plt+0xf648>
   20980:	ldr	r0, [fp, #-8]
   20984:	ldr	r0, [r0, #36]	; 0x24
   20988:	movw	r1, #0
   2098c:	cmp	r0, r1
   20990:	bne	20a10 <__assert_fail@plt+0xf648>
   20994:	ldr	r0, [fp, #-8]
   20998:	bl	112b4 <fileno@plt>
   2099c:	ldr	r2, [sp, #16]
   209a0:	ldr	r3, [sp, #20]
   209a4:	ldr	r1, [fp, #8]
   209a8:	mov	ip, sp
   209ac:	str	r1, [ip]
   209b0:	bl	111ac <lseek64@plt>
   209b4:	str	r1, [sp, #12]
   209b8:	str	r0, [sp, #8]
   209bc:	ldr	r0, [sp, #8]
   209c0:	ldr	r1, [sp, #12]
   209c4:	and	r0, r0, r1
   209c8:	cmn	r0, #1
   209cc:	bne	209e0 <__assert_fail@plt+0xf618>
   209d0:	b	209d4 <__assert_fail@plt+0xf60c>
   209d4:	mvn	r0, #0
   209d8:	str	r0, [fp, #-4]
   209dc:	b	20a30 <__assert_fail@plt+0xf668>
   209e0:	ldr	r0, [fp, #-8]
   209e4:	ldr	r1, [r0]
   209e8:	bic	r1, r1, #16
   209ec:	str	r1, [r0]
   209f0:	ldr	r0, [sp, #8]
   209f4:	ldr	r1, [sp, #12]
   209f8:	ldr	r2, [fp, #-8]
   209fc:	str	r1, [r2, #84]	; 0x54
   20a00:	str	r0, [r2, #80]	; 0x50
   20a04:	movw	r0, #0
   20a08:	str	r0, [fp, #-4]
   20a0c:	b	20a30 <__assert_fail@plt+0xf668>
   20a10:	ldr	r0, [fp, #-8]
   20a14:	ldr	r2, [sp, #16]
   20a18:	ldr	r3, [sp, #20]
   20a1c:	ldr	r1, [fp, #8]
   20a20:	mov	ip, sp
   20a24:	str	r1, [ip]
   20a28:	bl	112cc <fseeko64@plt>
   20a2c:	str	r0, [fp, #-4]
   20a30:	ldr	r0, [fp, #-4]
   20a34:	mov	sp, fp
   20a38:	pop	{fp, pc}
   20a3c:	push	{fp, lr}
   20a40:	mov	fp, sp
   20a44:	bl	11290 <__errno_location@plt>
   20a48:	movw	r1, #12
   20a4c:	str	r1, [r0]
   20a50:	movw	r0, #0
   20a54:	pop	{fp, pc}
   20a58:	push	{fp, lr}
   20a5c:	mov	fp, sp
   20a60:	sub	sp, sp, #8
   20a64:	str	r0, [sp, #4]
   20a68:	ldr	r0, [sp, #4]
   20a6c:	cmn	r0, #1
   20a70:	bhi	20a84 <__assert_fail@plt+0xf6bc>
   20a74:	ldr	r0, [sp, #4]
   20a78:	bl	1fb90 <__assert_fail@plt+0xe7c8>
   20a7c:	str	r0, [sp]
   20a80:	b	20a8c <__assert_fail@plt+0xf6c4>
   20a84:	bl	20a3c <__assert_fail@plt+0xf674>
   20a88:	str	r0, [sp]
   20a8c:	ldr	r0, [sp]
   20a90:	mov	sp, fp
   20a94:	pop	{fp, pc}
   20a98:	push	{fp, lr}
   20a9c:	mov	fp, sp
   20aa0:	sub	sp, sp, #16
   20aa4:	str	r0, [fp, #-4]
   20aa8:	str	r1, [sp, #8]
   20aac:	ldr	r0, [sp, #8]
   20ab0:	cmn	r0, #1
   20ab4:	bhi	20aec <__assert_fail@plt+0xf724>
   20ab8:	ldr	r0, [fp, #-4]
   20abc:	ldr	r1, [sp, #8]
   20ac0:	ldr	r2, [sp, #8]
   20ac4:	cmp	r2, #0
   20ac8:	movw	r2, #0
   20acc:	movne	r2, #1
   20ad0:	mvn	r3, #0
   20ad4:	eor	r2, r2, r3
   20ad8:	and	r2, r2, #1
   20adc:	orr	r1, r1, r2
   20ae0:	bl	1fc00 <__assert_fail@plt+0xe838>
   20ae4:	str	r0, [sp, #4]
   20ae8:	b	20af4 <__assert_fail@plt+0xf72c>
   20aec:	bl	20a3c <__assert_fail@plt+0xf674>
   20af0:	str	r0, [sp, #4]
   20af4:	ldr	r0, [sp, #4]
   20af8:	mov	sp, fp
   20afc:	pop	{fp, pc}
   20b00:	push	{fp, lr}
   20b04:	mov	fp, sp
   20b08:	sub	sp, sp, #16
   20b0c:	str	r0, [sp, #8]
   20b10:	str	r1, [sp, #4]
   20b14:	ldr	r0, [sp, #8]
   20b18:	mvn	r1, #0
   20b1c:	cmp	r1, r0
   20b20:	bcs	20b44 <__assert_fail@plt+0xf77c>
   20b24:	ldr	r0, [sp, #4]
   20b28:	cmp	r0, #0
   20b2c:	beq	20b3c <__assert_fail@plt+0xf774>
   20b30:	bl	20a3c <__assert_fail@plt+0xf674>
   20b34:	str	r0, [fp, #-4]
   20b38:	b	20b84 <__assert_fail@plt+0xf7bc>
   20b3c:	movw	r0, #0
   20b40:	str	r0, [sp, #8]
   20b44:	ldr	r0, [sp, #4]
   20b48:	mvn	r1, #0
   20b4c:	cmp	r1, r0
   20b50:	bcs	20b74 <__assert_fail@plt+0xf7ac>
   20b54:	ldr	r0, [sp, #8]
   20b58:	cmp	r0, #0
   20b5c:	beq	20b6c <__assert_fail@plt+0xf7a4>
   20b60:	bl	20a3c <__assert_fail@plt+0xf674>
   20b64:	str	r0, [fp, #-4]
   20b68:	b	20b84 <__assert_fail@plt+0xf7bc>
   20b6c:	movw	r0, #0
   20b70:	str	r0, [sp, #4]
   20b74:	ldr	r0, [sp, #8]
   20b78:	ldr	r1, [sp, #4]
   20b7c:	bl	1faf4 <__assert_fail@plt+0xe72c>
   20b80:	str	r0, [fp, #-4]
   20b84:	ldr	r0, [fp, #-4]
   20b88:	mov	sp, fp
   20b8c:	pop	{fp, pc}
   20b90:	push	{fp, lr}
   20b94:	mov	fp, sp
   20b98:	sub	sp, sp, #16
   20b9c:	str	r0, [fp, #-4]
   20ba0:	str	r1, [sp, #8]
   20ba4:	str	r2, [sp, #4]
   20ba8:	ldr	r0, [sp, #8]
   20bac:	cmp	r0, #0
   20bb0:	beq	20bc0 <__assert_fail@plt+0xf7f8>
   20bb4:	ldr	r0, [sp, #4]
   20bb8:	cmp	r0, #0
   20bbc:	bne	20bcc <__assert_fail@plt+0xf804>
   20bc0:	movw	r0, #1
   20bc4:	str	r0, [sp, #4]
   20bc8:	str	r0, [sp, #8]
   20bcc:	ldr	r0, [sp, #8]
   20bd0:	cmn	r0, #1
   20bd4:	bhi	20bfc <__assert_fail@plt+0xf834>
   20bd8:	ldr	r0, [sp, #4]
   20bdc:	cmn	r0, #1
   20be0:	bhi	20bfc <__assert_fail@plt+0xf834>
   20be4:	ldr	r0, [fp, #-4]
   20be8:	ldr	r1, [sp, #8]
   20bec:	ldr	r2, [sp, #4]
   20bf0:	bl	20d1c <__assert_fail@plt+0xf954>
   20bf4:	str	r0, [sp]
   20bf8:	b	20c04 <__assert_fail@plt+0xf83c>
   20bfc:	bl	20a3c <__assert_fail@plt+0xf674>
   20c00:	str	r0, [sp]
   20c04:	ldr	r0, [sp]
   20c08:	mov	sp, fp
   20c0c:	pop	{fp, pc}
   20c10:	push	{fp, lr}
   20c14:	mov	fp, sp
   20c18:	sub	sp, sp, #8
   20c1c:	movw	r0, #14
   20c20:	bl	112fc <nl_langinfo@plt>
   20c24:	str	r0, [sp, #4]
   20c28:	ldr	r0, [sp, #4]
   20c2c:	movw	r1, #0
   20c30:	cmp	r0, r1
   20c34:	bne	20c44 <__assert_fail@plt+0xf87c>
   20c38:	movw	r0, #11514	; 0x2cfa
   20c3c:	movt	r0, #2
   20c40:	str	r0, [sp, #4]
   20c44:	ldr	r0, [sp, #4]
   20c48:	ldrb	r0, [r0]
   20c4c:	cmp	r0, #0
   20c50:	bne	20c60 <__assert_fail@plt+0xf898>
   20c54:	movw	r0, #15275	; 0x3bab
   20c58:	movt	r0, #2
   20c5c:	str	r0, [sp, #4]
   20c60:	ldr	r0, [sp, #4]
   20c64:	mov	sp, fp
   20c68:	pop	{fp, pc}
   20c6c:	push	{fp, lr}
   20c70:	mov	fp, sp
   20c74:	sub	sp, sp, #32
   20c78:	str	r0, [fp, #-8]
   20c7c:	str	r1, [fp, #-12]
   20c80:	str	r2, [sp, #16]
   20c84:	str	r3, [sp, #12]
   20c88:	ldr	r0, [fp, #-8]
   20c8c:	movw	r1, #0
   20c90:	cmp	r0, r1
   20c94:	bne	20ca0 <__assert_fail@plt+0xf8d8>
   20c98:	add	r0, sp, #4
   20c9c:	str	r0, [fp, #-8]
   20ca0:	ldr	r0, [fp, #-8]
   20ca4:	ldr	r1, [fp, #-12]
   20ca8:	ldr	r2, [sp, #16]
   20cac:	ldr	r3, [sp, #12]
   20cb0:	bl	111dc <mbrtowc@plt>
   20cb4:	str	r0, [sp, #8]
   20cb8:	ldr	r0, [sp, #8]
   20cbc:	mvn	r1, #1
   20cc0:	cmp	r1, r0
   20cc4:	bhi	20d08 <__assert_fail@plt+0xf940>
   20cc8:	ldr	r0, [sp, #16]
   20ccc:	cmp	r0, #0
   20cd0:	beq	20d08 <__assert_fail@plt+0xf940>
   20cd4:	movw	r0, #0
   20cd8:	bl	226c4 <__assert_fail@plt+0x112fc>
   20cdc:	tst	r0, #1
   20ce0:	bne	20d08 <__assert_fail@plt+0xf940>
   20ce4:	ldr	r0, [fp, #-12]
   20ce8:	ldrb	r0, [r0]
   20cec:	strb	r0, [sp, #3]
   20cf0:	ldrb	r0, [sp, #3]
   20cf4:	ldr	r1, [fp, #-8]
   20cf8:	str	r0, [r1]
   20cfc:	movw	r0, #1
   20d00:	str	r0, [fp, #-4]
   20d04:	b	20d10 <__assert_fail@plt+0xf948>
   20d08:	ldr	r0, [sp, #8]
   20d0c:	str	r0, [fp, #-4]
   20d10:	ldr	r0, [fp, #-4]
   20d14:	mov	sp, fp
   20d18:	pop	{fp, pc}
   20d1c:	push	{fp, lr}
   20d20:	mov	fp, sp
   20d24:	sub	sp, sp, #96	; 0x60
   20d28:	str	r0, [fp, #-8]
   20d2c:	str	r1, [fp, #-12]
   20d30:	str	r2, [fp, #-16]
   20d34:	b	210ec <__assert_fail@plt+0xfd24>
   20d38:	b	20f0c <__assert_fail@plt+0xfb44>
   20d3c:	ldr	r0, [fp, #-16]
   20d40:	cmp	r0, #0
   20d44:	bcs	20e48 <__assert_fail@plt+0xfa80>
   20d48:	ldr	r0, [fp, #-12]
   20d4c:	cmp	r0, #0
   20d50:	bcs	20dd8 <__assert_fail@plt+0xfa10>
   20d54:	b	20d74 <__assert_fail@plt+0xf9ac>
   20d58:	ldr	r0, [fp, #-12]
   20d5c:	ldr	r1, [fp, #-16]
   20d60:	movw	r2, #127	; 0x7f
   20d64:	udiv	r1, r2, r1
   20d68:	cmp	r0, r1
   20d6c:	bcc	20edc <__assert_fail@plt+0xfb14>
   20d70:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20d74:	b	20d88 <__assert_fail@plt+0xf9c0>
   20d78:	ldr	r0, [fp, #-16]
   20d7c:	cmp	r0, #1
   20d80:	bcc	20d98 <__assert_fail@plt+0xf9d0>
   20d84:	b	20da4 <__assert_fail@plt+0xf9dc>
   20d88:	ldr	r0, [fp, #-16]
   20d8c:	movw	r1, #0
   20d90:	cmp	r1, r0
   20d94:	bcs	20da4 <__assert_fail@plt+0xf9dc>
   20d98:	movw	r0, #0
   20d9c:	str	r0, [fp, #-24]	; 0xffffffe8
   20da0:	b	20dbc <__assert_fail@plt+0xf9f4>
   20da4:	ldr	r0, [fp, #-16]
   20da8:	movw	r1, #0
   20dac:	sub	r0, r1, r0
   20db0:	movw	r1, #127	; 0x7f
   20db4:	udiv	r0, r1, r0
   20db8:	str	r0, [fp, #-24]	; 0xffffffe8
   20dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20dc0:	ldr	r1, [fp, #-12]
   20dc4:	mvn	r2, #0
   20dc8:	sub	r1, r2, r1
   20dcc:	cmp	r0, r1
   20dd0:	bls	20edc <__assert_fail@plt+0xfb14>
   20dd4:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20dd8:	ldr	r0, [fp, #-16]
   20ddc:	cmn	r0, #1
   20de0:	bne	20e2c <__assert_fail@plt+0xfa64>
   20de4:	b	20e04 <__assert_fail@plt+0xfa3c>
   20de8:	ldr	r0, [fp, #-12]
   20dec:	mvn	r1, #127	; 0x7f
   20df0:	add	r0, r0, r1
   20df4:	movw	r1, #0
   20df8:	cmp	r1, r0
   20dfc:	bcc	20edc <__assert_fail@plt+0xfb14>
   20e00:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20e04:	ldr	r0, [fp, #-12]
   20e08:	movw	r1, #0
   20e0c:	cmp	r1, r0
   20e10:	bcs	20ef4 <__assert_fail@plt+0xfb2c>
   20e14:	ldr	r0, [fp, #-12]
   20e18:	sub	r0, r0, #1
   20e1c:	movw	r1, #127	; 0x7f
   20e20:	cmp	r1, r0
   20e24:	bcc	20edc <__assert_fail@plt+0xfb14>
   20e28:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20e2c:	ldr	r0, [fp, #-16]
   20e30:	mvn	r1, #127	; 0x7f
   20e34:	udiv	r0, r1, r0
   20e38:	ldr	r1, [fp, #-12]
   20e3c:	cmp	r0, r1
   20e40:	bcc	20edc <__assert_fail@plt+0xfb14>
   20e44:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20e48:	ldr	r0, [fp, #-16]
   20e4c:	cmp	r0, #0
   20e50:	bne	20e58 <__assert_fail@plt+0xfa90>
   20e54:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20e58:	ldr	r0, [fp, #-12]
   20e5c:	cmp	r0, #0
   20e60:	bcs	20ec4 <__assert_fail@plt+0xfafc>
   20e64:	ldr	r0, [fp, #-12]
   20e68:	cmn	r0, #1
   20e6c:	bne	20ea8 <__assert_fail@plt+0xfae0>
   20e70:	b	20e90 <__assert_fail@plt+0xfac8>
   20e74:	ldr	r0, [fp, #-16]
   20e78:	mvn	r1, #127	; 0x7f
   20e7c:	add	r0, r0, r1
   20e80:	movw	r1, #0
   20e84:	cmp	r1, r0
   20e88:	bcc	20edc <__assert_fail@plt+0xfb14>
   20e8c:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20e90:	ldr	r0, [fp, #-16]
   20e94:	sub	r0, r0, #1
   20e98:	movw	r1, #127	; 0x7f
   20e9c:	cmp	r1, r0
   20ea0:	bcc	20edc <__assert_fail@plt+0xfb14>
   20ea4:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20ea8:	ldr	r0, [fp, #-12]
   20eac:	mvn	r1, #127	; 0x7f
   20eb0:	udiv	r0, r1, r0
   20eb4:	ldr	r1, [fp, #-16]
   20eb8:	cmp	r0, r1
   20ebc:	bcc	20edc <__assert_fail@plt+0xfb14>
   20ec0:	b	20ef4 <__assert_fail@plt+0xfb2c>
   20ec4:	ldr	r0, [fp, #-16]
   20ec8:	movw	r1, #127	; 0x7f
   20ecc:	udiv	r0, r1, r0
   20ed0:	ldr	r1, [fp, #-12]
   20ed4:	cmp	r0, r1
   20ed8:	bcs	20ef4 <__assert_fail@plt+0xfb2c>
   20edc:	ldr	r0, [fp, #-12]
   20ee0:	ldr	r1, [fp, #-16]
   20ee4:	mul	r0, r0, r1
   20ee8:	sxtb	r0, r0
   20eec:	str	r0, [fp, #-20]	; 0xffffffec
   20ef0:	b	2201c <__assert_fail@plt+0x10c54>
   20ef4:	ldr	r0, [fp, #-12]
   20ef8:	ldr	r1, [fp, #-16]
   20efc:	mul	r0, r0, r1
   20f00:	sxtb	r0, r0
   20f04:	str	r0, [fp, #-20]	; 0xffffffec
   20f08:	b	22034 <__assert_fail@plt+0x10c6c>
   20f0c:	ldr	r0, [fp, #-16]
   20f10:	cmp	r0, #0
   20f14:	bcs	21020 <__assert_fail@plt+0xfc58>
   20f18:	ldr	r0, [fp, #-12]
   20f1c:	cmp	r0, #0
   20f20:	bcs	20fa8 <__assert_fail@plt+0xfbe0>
   20f24:	b	20f44 <__assert_fail@plt+0xfb7c>
   20f28:	ldr	r0, [fp, #-12]
   20f2c:	ldr	r1, [fp, #-16]
   20f30:	movw	r2, #255	; 0xff
   20f34:	udiv	r1, r2, r1
   20f38:	cmp	r0, r1
   20f3c:	bcc	210bc <__assert_fail@plt+0xfcf4>
   20f40:	b	210d4 <__assert_fail@plt+0xfd0c>
   20f44:	b	20f58 <__assert_fail@plt+0xfb90>
   20f48:	ldr	r0, [fp, #-16]
   20f4c:	cmp	r0, #1
   20f50:	bcc	20f68 <__assert_fail@plt+0xfba0>
   20f54:	b	20f74 <__assert_fail@plt+0xfbac>
   20f58:	ldr	r0, [fp, #-16]
   20f5c:	movw	r1, #0
   20f60:	cmp	r1, r0
   20f64:	bcs	20f74 <__assert_fail@plt+0xfbac>
   20f68:	movw	r0, #0
   20f6c:	str	r0, [fp, #-28]	; 0xffffffe4
   20f70:	b	20f8c <__assert_fail@plt+0xfbc4>
   20f74:	ldr	r0, [fp, #-16]
   20f78:	movw	r1, #0
   20f7c:	sub	r0, r1, r0
   20f80:	movw	r1, #255	; 0xff
   20f84:	udiv	r0, r1, r0
   20f88:	str	r0, [fp, #-28]	; 0xffffffe4
   20f8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f90:	ldr	r1, [fp, #-12]
   20f94:	mvn	r2, #0
   20f98:	sub	r1, r2, r1
   20f9c:	cmp	r0, r1
   20fa0:	bls	210bc <__assert_fail@plt+0xfcf4>
   20fa4:	b	210d4 <__assert_fail@plt+0xfd0c>
   20fa8:	b	20fb0 <__assert_fail@plt+0xfbe8>
   20fac:	b	20fb4 <__assert_fail@plt+0xfbec>
   20fb0:	b	21004 <__assert_fail@plt+0xfc3c>
   20fb4:	ldr	r0, [fp, #-16]
   20fb8:	cmn	r0, #1
   20fbc:	bne	21004 <__assert_fail@plt+0xfc3c>
   20fc0:	b	20fdc <__assert_fail@plt+0xfc14>
   20fc4:	ldr	r0, [fp, #-12]
   20fc8:	add	r0, r0, #0
   20fcc:	movw	r1, #0
   20fd0:	cmp	r1, r0
   20fd4:	bcc	210bc <__assert_fail@plt+0xfcf4>
   20fd8:	b	210d4 <__assert_fail@plt+0xfd0c>
   20fdc:	ldr	r0, [fp, #-12]
   20fe0:	movw	r1, #0
   20fe4:	cmp	r1, r0
   20fe8:	bcs	210d4 <__assert_fail@plt+0xfd0c>
   20fec:	ldr	r0, [fp, #-12]
   20ff0:	sub	r0, r0, #1
   20ff4:	mvn	r1, #0
   20ff8:	cmp	r1, r0
   20ffc:	bcc	210bc <__assert_fail@plt+0xfcf4>
   21000:	b	210d4 <__assert_fail@plt+0xfd0c>
   21004:	ldr	r0, [fp, #-16]
   21008:	movw	r1, #0
   2100c:	udiv	r0, r1, r0
   21010:	ldr	r1, [fp, #-12]
   21014:	cmp	r0, r1
   21018:	bcc	210bc <__assert_fail@plt+0xfcf4>
   2101c:	b	210d4 <__assert_fail@plt+0xfd0c>
   21020:	ldr	r0, [fp, #-16]
   21024:	cmp	r0, #0
   21028:	bne	21030 <__assert_fail@plt+0xfc68>
   2102c:	b	210d4 <__assert_fail@plt+0xfd0c>
   21030:	ldr	r0, [fp, #-12]
   21034:	cmp	r0, #0
   21038:	bcs	210a4 <__assert_fail@plt+0xfcdc>
   2103c:	b	21044 <__assert_fail@plt+0xfc7c>
   21040:	b	21048 <__assert_fail@plt+0xfc80>
   21044:	b	21088 <__assert_fail@plt+0xfcc0>
   21048:	ldr	r0, [fp, #-12]
   2104c:	cmn	r0, #1
   21050:	bne	21088 <__assert_fail@plt+0xfcc0>
   21054:	b	21070 <__assert_fail@plt+0xfca8>
   21058:	ldr	r0, [fp, #-16]
   2105c:	add	r0, r0, #0
   21060:	movw	r1, #0
   21064:	cmp	r1, r0
   21068:	bcc	210bc <__assert_fail@plt+0xfcf4>
   2106c:	b	210d4 <__assert_fail@plt+0xfd0c>
   21070:	ldr	r0, [fp, #-16]
   21074:	sub	r0, r0, #1
   21078:	mvn	r1, #0
   2107c:	cmp	r1, r0
   21080:	bcc	210bc <__assert_fail@plt+0xfcf4>
   21084:	b	210d4 <__assert_fail@plt+0xfd0c>
   21088:	ldr	r0, [fp, #-12]
   2108c:	movw	r1, #0
   21090:	udiv	r0, r1, r0
   21094:	ldr	r1, [fp, #-16]
   21098:	cmp	r0, r1
   2109c:	bcc	210bc <__assert_fail@plt+0xfcf4>
   210a0:	b	210d4 <__assert_fail@plt+0xfd0c>
   210a4:	ldr	r0, [fp, #-16]
   210a8:	movw	r1, #255	; 0xff
   210ac:	udiv	r0, r1, r0
   210b0:	ldr	r1, [fp, #-12]
   210b4:	cmp	r0, r1
   210b8:	bcs	210d4 <__assert_fail@plt+0xfd0c>
   210bc:	ldr	r0, [fp, #-12]
   210c0:	ldr	r1, [fp, #-16]
   210c4:	mul	r0, r0, r1
   210c8:	and	r0, r0, #255	; 0xff
   210cc:	str	r0, [fp, #-20]	; 0xffffffec
   210d0:	b	2201c <__assert_fail@plt+0x10c54>
   210d4:	ldr	r0, [fp, #-12]
   210d8:	ldr	r1, [fp, #-16]
   210dc:	mul	r0, r0, r1
   210e0:	and	r0, r0, #255	; 0xff
   210e4:	str	r0, [fp, #-20]	; 0xffffffec
   210e8:	b	22034 <__assert_fail@plt+0x10c6c>
   210ec:	b	214a4 <__assert_fail@plt+0x100dc>
   210f0:	b	212c4 <__assert_fail@plt+0xfefc>
   210f4:	ldr	r0, [fp, #-16]
   210f8:	cmp	r0, #0
   210fc:	bcs	21200 <__assert_fail@plt+0xfe38>
   21100:	ldr	r0, [fp, #-12]
   21104:	cmp	r0, #0
   21108:	bcs	21190 <__assert_fail@plt+0xfdc8>
   2110c:	b	2112c <__assert_fail@plt+0xfd64>
   21110:	ldr	r0, [fp, #-12]
   21114:	ldr	r1, [fp, #-16]
   21118:	movw	r2, #32767	; 0x7fff
   2111c:	udiv	r1, r2, r1
   21120:	cmp	r0, r1
   21124:	bcc	21294 <__assert_fail@plt+0xfecc>
   21128:	b	212ac <__assert_fail@plt+0xfee4>
   2112c:	b	21140 <__assert_fail@plt+0xfd78>
   21130:	ldr	r0, [fp, #-16]
   21134:	cmp	r0, #1
   21138:	bcc	21150 <__assert_fail@plt+0xfd88>
   2113c:	b	2115c <__assert_fail@plt+0xfd94>
   21140:	ldr	r0, [fp, #-16]
   21144:	movw	r1, #0
   21148:	cmp	r1, r0
   2114c:	bcs	2115c <__assert_fail@plt+0xfd94>
   21150:	movw	r0, #0
   21154:	str	r0, [fp, #-32]	; 0xffffffe0
   21158:	b	21174 <__assert_fail@plt+0xfdac>
   2115c:	ldr	r0, [fp, #-16]
   21160:	movw	r1, #0
   21164:	sub	r0, r1, r0
   21168:	movw	r1, #32767	; 0x7fff
   2116c:	udiv	r0, r1, r0
   21170:	str	r0, [fp, #-32]	; 0xffffffe0
   21174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21178:	ldr	r1, [fp, #-12]
   2117c:	mvn	r2, #0
   21180:	sub	r1, r2, r1
   21184:	cmp	r0, r1
   21188:	bls	21294 <__assert_fail@plt+0xfecc>
   2118c:	b	212ac <__assert_fail@plt+0xfee4>
   21190:	ldr	r0, [fp, #-16]
   21194:	cmn	r0, #1
   21198:	bne	211e4 <__assert_fail@plt+0xfe1c>
   2119c:	b	211bc <__assert_fail@plt+0xfdf4>
   211a0:	ldr	r0, [pc, #3760]	; 22058 <__assert_fail@plt+0x10c90>
   211a4:	ldr	r1, [fp, #-12]
   211a8:	add	r0, r1, r0
   211ac:	movw	r1, #0
   211b0:	cmp	r1, r0
   211b4:	bcc	21294 <__assert_fail@plt+0xfecc>
   211b8:	b	212ac <__assert_fail@plt+0xfee4>
   211bc:	ldr	r0, [fp, #-12]
   211c0:	movw	r1, #0
   211c4:	cmp	r1, r0
   211c8:	bcs	212ac <__assert_fail@plt+0xfee4>
   211cc:	ldr	r0, [fp, #-12]
   211d0:	sub	r0, r0, #1
   211d4:	movw	r1, #32767	; 0x7fff
   211d8:	cmp	r1, r0
   211dc:	bcc	21294 <__assert_fail@plt+0xfecc>
   211e0:	b	212ac <__assert_fail@plt+0xfee4>
   211e4:	ldr	r0, [pc, #3692]	; 22058 <__assert_fail@plt+0x10c90>
   211e8:	ldr	r1, [fp, #-16]
   211ec:	udiv	r0, r0, r1
   211f0:	ldr	r1, [fp, #-12]
   211f4:	cmp	r0, r1
   211f8:	bcc	21294 <__assert_fail@plt+0xfecc>
   211fc:	b	212ac <__assert_fail@plt+0xfee4>
   21200:	ldr	r0, [fp, #-16]
   21204:	cmp	r0, #0
   21208:	bne	21210 <__assert_fail@plt+0xfe48>
   2120c:	b	212ac <__assert_fail@plt+0xfee4>
   21210:	ldr	r0, [fp, #-12]
   21214:	cmp	r0, #0
   21218:	bcs	2127c <__assert_fail@plt+0xfeb4>
   2121c:	ldr	r0, [fp, #-12]
   21220:	cmn	r0, #1
   21224:	bne	21260 <__assert_fail@plt+0xfe98>
   21228:	b	21248 <__assert_fail@plt+0xfe80>
   2122c:	ldr	r0, [pc, #3620]	; 22058 <__assert_fail@plt+0x10c90>
   21230:	ldr	r1, [fp, #-16]
   21234:	add	r0, r1, r0
   21238:	movw	r1, #0
   2123c:	cmp	r1, r0
   21240:	bcc	21294 <__assert_fail@plt+0xfecc>
   21244:	b	212ac <__assert_fail@plt+0xfee4>
   21248:	ldr	r0, [fp, #-16]
   2124c:	sub	r0, r0, #1
   21250:	movw	r1, #32767	; 0x7fff
   21254:	cmp	r1, r0
   21258:	bcc	21294 <__assert_fail@plt+0xfecc>
   2125c:	b	212ac <__assert_fail@plt+0xfee4>
   21260:	ldr	r0, [pc, #3568]	; 22058 <__assert_fail@plt+0x10c90>
   21264:	ldr	r1, [fp, #-12]
   21268:	udiv	r0, r0, r1
   2126c:	ldr	r1, [fp, #-16]
   21270:	cmp	r0, r1
   21274:	bcc	21294 <__assert_fail@plt+0xfecc>
   21278:	b	212ac <__assert_fail@plt+0xfee4>
   2127c:	ldr	r0, [fp, #-16]
   21280:	movw	r1, #32767	; 0x7fff
   21284:	udiv	r0, r1, r0
   21288:	ldr	r1, [fp, #-12]
   2128c:	cmp	r0, r1
   21290:	bcs	212ac <__assert_fail@plt+0xfee4>
   21294:	ldr	r0, [fp, #-12]
   21298:	ldr	r1, [fp, #-16]
   2129c:	mul	r0, r0, r1
   212a0:	sxth	r0, r0
   212a4:	str	r0, [fp, #-20]	; 0xffffffec
   212a8:	b	2201c <__assert_fail@plt+0x10c54>
   212ac:	ldr	r0, [fp, #-12]
   212b0:	ldr	r1, [fp, #-16]
   212b4:	mul	r0, r0, r1
   212b8:	sxth	r0, r0
   212bc:	str	r0, [fp, #-20]	; 0xffffffec
   212c0:	b	22034 <__assert_fail@plt+0x10c6c>
   212c4:	ldr	r0, [fp, #-16]
   212c8:	cmp	r0, #0
   212cc:	bcs	213d8 <__assert_fail@plt+0x10010>
   212d0:	ldr	r0, [fp, #-12]
   212d4:	cmp	r0, #0
   212d8:	bcs	21360 <__assert_fail@plt+0xff98>
   212dc:	b	212fc <__assert_fail@plt+0xff34>
   212e0:	ldr	r0, [fp, #-12]
   212e4:	ldr	r1, [fp, #-16]
   212e8:	movw	r2, #65535	; 0xffff
   212ec:	udiv	r1, r2, r1
   212f0:	cmp	r0, r1
   212f4:	bcc	21474 <__assert_fail@plt+0x100ac>
   212f8:	b	2148c <__assert_fail@plt+0x100c4>
   212fc:	b	21310 <__assert_fail@plt+0xff48>
   21300:	ldr	r0, [fp, #-16]
   21304:	cmp	r0, #1
   21308:	bcc	21320 <__assert_fail@plt+0xff58>
   2130c:	b	2132c <__assert_fail@plt+0xff64>
   21310:	ldr	r0, [fp, #-16]
   21314:	movw	r1, #0
   21318:	cmp	r1, r0
   2131c:	bcs	2132c <__assert_fail@plt+0xff64>
   21320:	movw	r0, #0
   21324:	str	r0, [fp, #-36]	; 0xffffffdc
   21328:	b	21344 <__assert_fail@plt+0xff7c>
   2132c:	ldr	r0, [fp, #-16]
   21330:	movw	r1, #0
   21334:	sub	r0, r1, r0
   21338:	movw	r1, #65535	; 0xffff
   2133c:	udiv	r0, r1, r0
   21340:	str	r0, [fp, #-36]	; 0xffffffdc
   21344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21348:	ldr	r1, [fp, #-12]
   2134c:	mvn	r2, #0
   21350:	sub	r1, r2, r1
   21354:	cmp	r0, r1
   21358:	bls	21474 <__assert_fail@plt+0x100ac>
   2135c:	b	2148c <__assert_fail@plt+0x100c4>
   21360:	b	21368 <__assert_fail@plt+0xffa0>
   21364:	b	2136c <__assert_fail@plt+0xffa4>
   21368:	b	213bc <__assert_fail@plt+0xfff4>
   2136c:	ldr	r0, [fp, #-16]
   21370:	cmn	r0, #1
   21374:	bne	213bc <__assert_fail@plt+0xfff4>
   21378:	b	21394 <__assert_fail@plt+0xffcc>
   2137c:	ldr	r0, [fp, #-12]
   21380:	add	r0, r0, #0
   21384:	movw	r1, #0
   21388:	cmp	r1, r0
   2138c:	bcc	21474 <__assert_fail@plt+0x100ac>
   21390:	b	2148c <__assert_fail@plt+0x100c4>
   21394:	ldr	r0, [fp, #-12]
   21398:	movw	r1, #0
   2139c:	cmp	r1, r0
   213a0:	bcs	2148c <__assert_fail@plt+0x100c4>
   213a4:	ldr	r0, [fp, #-12]
   213a8:	sub	r0, r0, #1
   213ac:	mvn	r1, #0
   213b0:	cmp	r1, r0
   213b4:	bcc	21474 <__assert_fail@plt+0x100ac>
   213b8:	b	2148c <__assert_fail@plt+0x100c4>
   213bc:	ldr	r0, [fp, #-16]
   213c0:	movw	r1, #0
   213c4:	udiv	r0, r1, r0
   213c8:	ldr	r1, [fp, #-12]
   213cc:	cmp	r0, r1
   213d0:	bcc	21474 <__assert_fail@plt+0x100ac>
   213d4:	b	2148c <__assert_fail@plt+0x100c4>
   213d8:	ldr	r0, [fp, #-16]
   213dc:	cmp	r0, #0
   213e0:	bne	213e8 <__assert_fail@plt+0x10020>
   213e4:	b	2148c <__assert_fail@plt+0x100c4>
   213e8:	ldr	r0, [fp, #-12]
   213ec:	cmp	r0, #0
   213f0:	bcs	2145c <__assert_fail@plt+0x10094>
   213f4:	b	213fc <__assert_fail@plt+0x10034>
   213f8:	b	21400 <__assert_fail@plt+0x10038>
   213fc:	b	21440 <__assert_fail@plt+0x10078>
   21400:	ldr	r0, [fp, #-12]
   21404:	cmn	r0, #1
   21408:	bne	21440 <__assert_fail@plt+0x10078>
   2140c:	b	21428 <__assert_fail@plt+0x10060>
   21410:	ldr	r0, [fp, #-16]
   21414:	add	r0, r0, #0
   21418:	movw	r1, #0
   2141c:	cmp	r1, r0
   21420:	bcc	21474 <__assert_fail@plt+0x100ac>
   21424:	b	2148c <__assert_fail@plt+0x100c4>
   21428:	ldr	r0, [fp, #-16]
   2142c:	sub	r0, r0, #1
   21430:	mvn	r1, #0
   21434:	cmp	r1, r0
   21438:	bcc	21474 <__assert_fail@plt+0x100ac>
   2143c:	b	2148c <__assert_fail@plt+0x100c4>
   21440:	ldr	r0, [fp, #-12]
   21444:	movw	r1, #0
   21448:	udiv	r0, r1, r0
   2144c:	ldr	r1, [fp, #-16]
   21450:	cmp	r0, r1
   21454:	bcc	21474 <__assert_fail@plt+0x100ac>
   21458:	b	2148c <__assert_fail@plt+0x100c4>
   2145c:	ldr	r0, [fp, #-16]
   21460:	movw	r1, #65535	; 0xffff
   21464:	udiv	r0, r1, r0
   21468:	ldr	r1, [fp, #-12]
   2146c:	cmp	r0, r1
   21470:	bcs	2148c <__assert_fail@plt+0x100c4>
   21474:	ldr	r0, [fp, #-12]
   21478:	ldr	r1, [fp, #-16]
   2147c:	mul	r0, r0, r1
   21480:	uxth	r0, r0
   21484:	str	r0, [fp, #-20]	; 0xffffffec
   21488:	b	2201c <__assert_fail@plt+0x10c54>
   2148c:	ldr	r0, [fp, #-12]
   21490:	ldr	r1, [fp, #-16]
   21494:	mul	r0, r0, r1
   21498:	uxth	r0, r0
   2149c:	str	r0, [fp, #-20]	; 0xffffffec
   214a0:	b	22034 <__assert_fail@plt+0x10c6c>
   214a4:	b	214a8 <__assert_fail@plt+0x100e0>
   214a8:	b	2166c <__assert_fail@plt+0x102a4>
   214ac:	ldr	r0, [fp, #-16]
   214b0:	cmp	r0, #0
   214b4:	bcs	215b4 <__assert_fail@plt+0x101ec>
   214b8:	ldr	r0, [fp, #-12]
   214bc:	cmp	r0, #0
   214c0:	bcs	21548 <__assert_fail@plt+0x10180>
   214c4:	b	214e4 <__assert_fail@plt+0x1011c>
   214c8:	ldr	r0, [pc, #2944]	; 22050 <__assert_fail@plt+0x10c88>
   214cc:	ldr	r1, [fp, #-12]
   214d0:	ldr	r2, [fp, #-16]
   214d4:	udiv	r0, r0, r2
   214d8:	cmp	r1, r0
   214dc:	bcc	21644 <__assert_fail@plt+0x1027c>
   214e0:	b	21658 <__assert_fail@plt+0x10290>
   214e4:	b	214f8 <__assert_fail@plt+0x10130>
   214e8:	ldr	r0, [fp, #-16]
   214ec:	cmp	r0, #1
   214f0:	bcc	21508 <__assert_fail@plt+0x10140>
   214f4:	b	21514 <__assert_fail@plt+0x1014c>
   214f8:	ldr	r0, [fp, #-16]
   214fc:	movw	r1, #0
   21500:	cmp	r1, r0
   21504:	bcs	21514 <__assert_fail@plt+0x1014c>
   21508:	movw	r0, #0
   2150c:	str	r0, [fp, #-40]	; 0xffffffd8
   21510:	b	2152c <__assert_fail@plt+0x10164>
   21514:	ldr	r0, [pc, #2868]	; 22050 <__assert_fail@plt+0x10c88>
   21518:	ldr	r1, [fp, #-16]
   2151c:	movw	r2, #0
   21520:	sub	r1, r2, r1
   21524:	udiv	r0, r0, r1
   21528:	str	r0, [fp, #-40]	; 0xffffffd8
   2152c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21530:	ldr	r1, [fp, #-12]
   21534:	mvn	r2, #0
   21538:	sub	r1, r2, r1
   2153c:	cmp	r0, r1
   21540:	bls	21644 <__assert_fail@plt+0x1027c>
   21544:	b	21658 <__assert_fail@plt+0x10290>
   21548:	ldr	r0, [fp, #-16]
   2154c:	cmn	r0, #1
   21550:	bne	21598 <__assert_fail@plt+0x101d0>
   21554:	b	21570 <__assert_fail@plt+0x101a8>
   21558:	ldr	r0, [fp, #-12]
   2155c:	add	r0, r0, #-2147483648	; 0x80000000
   21560:	movw	r1, #0
   21564:	cmp	r1, r0
   21568:	bcc	21644 <__assert_fail@plt+0x1027c>
   2156c:	b	21658 <__assert_fail@plt+0x10290>
   21570:	ldr	r0, [fp, #-12]
   21574:	movw	r1, #0
   21578:	cmp	r1, r0
   2157c:	bcs	21658 <__assert_fail@plt+0x10290>
   21580:	ldr	r0, [pc, #2760]	; 22050 <__assert_fail@plt+0x10c88>
   21584:	ldr	r1, [fp, #-12]
   21588:	sub	r1, r1, #1
   2158c:	cmp	r0, r1
   21590:	bcc	21644 <__assert_fail@plt+0x1027c>
   21594:	b	21658 <__assert_fail@plt+0x10290>
   21598:	ldr	r0, [pc, #2740]	; 22054 <__assert_fail@plt+0x10c8c>
   2159c:	ldr	r1, [fp, #-16]
   215a0:	udiv	r0, r0, r1
   215a4:	ldr	r1, [fp, #-12]
   215a8:	cmp	r0, r1
   215ac:	bcc	21644 <__assert_fail@plt+0x1027c>
   215b0:	b	21658 <__assert_fail@plt+0x10290>
   215b4:	ldr	r0, [fp, #-16]
   215b8:	cmp	r0, #0
   215bc:	bne	215c4 <__assert_fail@plt+0x101fc>
   215c0:	b	21658 <__assert_fail@plt+0x10290>
   215c4:	ldr	r0, [fp, #-12]
   215c8:	cmp	r0, #0
   215cc:	bcs	2162c <__assert_fail@plt+0x10264>
   215d0:	ldr	r0, [fp, #-12]
   215d4:	cmn	r0, #1
   215d8:	bne	21610 <__assert_fail@plt+0x10248>
   215dc:	b	215f8 <__assert_fail@plt+0x10230>
   215e0:	ldr	r0, [fp, #-16]
   215e4:	add	r0, r0, #-2147483648	; 0x80000000
   215e8:	movw	r1, #0
   215ec:	cmp	r1, r0
   215f0:	bcc	21644 <__assert_fail@plt+0x1027c>
   215f4:	b	21658 <__assert_fail@plt+0x10290>
   215f8:	ldr	r0, [pc, #2640]	; 22050 <__assert_fail@plt+0x10c88>
   215fc:	ldr	r1, [fp, #-16]
   21600:	sub	r1, r1, #1
   21604:	cmp	r0, r1
   21608:	bcc	21644 <__assert_fail@plt+0x1027c>
   2160c:	b	21658 <__assert_fail@plt+0x10290>
   21610:	ldr	r0, [pc, #2620]	; 22054 <__assert_fail@plt+0x10c8c>
   21614:	ldr	r1, [fp, #-12]
   21618:	udiv	r0, r0, r1
   2161c:	ldr	r1, [fp, #-16]
   21620:	cmp	r0, r1
   21624:	bcc	21644 <__assert_fail@plt+0x1027c>
   21628:	b	21658 <__assert_fail@plt+0x10290>
   2162c:	ldr	r0, [pc, #2588]	; 22050 <__assert_fail@plt+0x10c88>
   21630:	ldr	r1, [fp, #-16]
   21634:	udiv	r0, r0, r1
   21638:	ldr	r1, [fp, #-12]
   2163c:	cmp	r0, r1
   21640:	bcs	21658 <__assert_fail@plt+0x10290>
   21644:	ldr	r0, [fp, #-12]
   21648:	ldr	r1, [fp, #-16]
   2164c:	mul	r0, r0, r1
   21650:	str	r0, [fp, #-20]	; 0xffffffec
   21654:	b	2201c <__assert_fail@plt+0x10c54>
   21658:	ldr	r0, [fp, #-12]
   2165c:	ldr	r1, [fp, #-16]
   21660:	mul	r0, r0, r1
   21664:	str	r0, [fp, #-20]	; 0xffffffec
   21668:	b	22034 <__assert_fail@plt+0x10c6c>
   2166c:	ldr	r0, [fp, #-16]
   21670:	cmp	r0, #0
   21674:	bcs	21780 <__assert_fail@plt+0x103b8>
   21678:	ldr	r0, [fp, #-12]
   2167c:	cmp	r0, #0
   21680:	bcs	21708 <__assert_fail@plt+0x10340>
   21684:	b	216a4 <__assert_fail@plt+0x102dc>
   21688:	ldr	r0, [fp, #-12]
   2168c:	ldr	r1, [fp, #-16]
   21690:	mvn	r2, #0
   21694:	udiv	r1, r2, r1
   21698:	cmp	r0, r1
   2169c:	bcc	2181c <__assert_fail@plt+0x10454>
   216a0:	b	21830 <__assert_fail@plt+0x10468>
   216a4:	b	216b8 <__assert_fail@plt+0x102f0>
   216a8:	ldr	r0, [fp, #-16]
   216ac:	cmp	r0, #1
   216b0:	bcc	216c8 <__assert_fail@plt+0x10300>
   216b4:	b	216d4 <__assert_fail@plt+0x1030c>
   216b8:	ldr	r0, [fp, #-16]
   216bc:	movw	r1, #0
   216c0:	cmp	r1, r0
   216c4:	bcs	216d4 <__assert_fail@plt+0x1030c>
   216c8:	movw	r0, #1
   216cc:	str	r0, [fp, #-44]	; 0xffffffd4
   216d0:	b	216ec <__assert_fail@plt+0x10324>
   216d4:	ldr	r0, [fp, #-16]
   216d8:	movw	r1, #0
   216dc:	sub	r0, r1, r0
   216e0:	mvn	r1, #0
   216e4:	udiv	r0, r1, r0
   216e8:	str	r0, [fp, #-44]	; 0xffffffd4
   216ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   216f0:	ldr	r1, [fp, #-12]
   216f4:	mvn	r2, #0
   216f8:	sub	r1, r2, r1
   216fc:	cmp	r0, r1
   21700:	bls	2181c <__assert_fail@plt+0x10454>
   21704:	b	21830 <__assert_fail@plt+0x10468>
   21708:	b	21710 <__assert_fail@plt+0x10348>
   2170c:	b	21714 <__assert_fail@plt+0x1034c>
   21710:	b	21764 <__assert_fail@plt+0x1039c>
   21714:	ldr	r0, [fp, #-16]
   21718:	cmn	r0, #1
   2171c:	bne	21764 <__assert_fail@plt+0x1039c>
   21720:	b	2173c <__assert_fail@plt+0x10374>
   21724:	ldr	r0, [fp, #-12]
   21728:	add	r0, r0, #0
   2172c:	movw	r1, #0
   21730:	cmp	r1, r0
   21734:	bcc	2181c <__assert_fail@plt+0x10454>
   21738:	b	21830 <__assert_fail@plt+0x10468>
   2173c:	ldr	r0, [fp, #-12]
   21740:	movw	r1, #0
   21744:	cmp	r1, r0
   21748:	bcs	21830 <__assert_fail@plt+0x10468>
   2174c:	ldr	r0, [fp, #-12]
   21750:	sub	r0, r0, #1
   21754:	mvn	r1, #0
   21758:	cmp	r1, r0
   2175c:	bcc	2181c <__assert_fail@plt+0x10454>
   21760:	b	21830 <__assert_fail@plt+0x10468>
   21764:	ldr	r0, [fp, #-16]
   21768:	movw	r1, #0
   2176c:	udiv	r0, r1, r0
   21770:	ldr	r1, [fp, #-12]
   21774:	cmp	r0, r1
   21778:	bcc	2181c <__assert_fail@plt+0x10454>
   2177c:	b	21830 <__assert_fail@plt+0x10468>
   21780:	ldr	r0, [fp, #-16]
   21784:	cmp	r0, #0
   21788:	bne	21790 <__assert_fail@plt+0x103c8>
   2178c:	b	21830 <__assert_fail@plt+0x10468>
   21790:	ldr	r0, [fp, #-12]
   21794:	cmp	r0, #0
   21798:	bcs	21804 <__assert_fail@plt+0x1043c>
   2179c:	b	217a4 <__assert_fail@plt+0x103dc>
   217a0:	b	217a8 <__assert_fail@plt+0x103e0>
   217a4:	b	217e8 <__assert_fail@plt+0x10420>
   217a8:	ldr	r0, [fp, #-12]
   217ac:	cmn	r0, #1
   217b0:	bne	217e8 <__assert_fail@plt+0x10420>
   217b4:	b	217d0 <__assert_fail@plt+0x10408>
   217b8:	ldr	r0, [fp, #-16]
   217bc:	add	r0, r0, #0
   217c0:	movw	r1, #0
   217c4:	cmp	r1, r0
   217c8:	bcc	2181c <__assert_fail@plt+0x10454>
   217cc:	b	21830 <__assert_fail@plt+0x10468>
   217d0:	ldr	r0, [fp, #-16]
   217d4:	sub	r0, r0, #1
   217d8:	mvn	r1, #0
   217dc:	cmp	r1, r0
   217e0:	bcc	2181c <__assert_fail@plt+0x10454>
   217e4:	b	21830 <__assert_fail@plt+0x10468>
   217e8:	ldr	r0, [fp, #-12]
   217ec:	movw	r1, #0
   217f0:	udiv	r0, r1, r0
   217f4:	ldr	r1, [fp, #-16]
   217f8:	cmp	r0, r1
   217fc:	bcc	2181c <__assert_fail@plt+0x10454>
   21800:	b	21830 <__assert_fail@plt+0x10468>
   21804:	ldr	r0, [fp, #-16]
   21808:	mvn	r1, #0
   2180c:	udiv	r0, r1, r0
   21810:	ldr	r1, [fp, #-12]
   21814:	cmp	r0, r1
   21818:	bcs	21830 <__assert_fail@plt+0x10468>
   2181c:	ldr	r0, [fp, #-12]
   21820:	ldr	r1, [fp, #-16]
   21824:	mul	r0, r0, r1
   21828:	str	r0, [fp, #-20]	; 0xffffffec
   2182c:	b	2201c <__assert_fail@plt+0x10c54>
   21830:	ldr	r0, [fp, #-12]
   21834:	ldr	r1, [fp, #-16]
   21838:	mul	r0, r0, r1
   2183c:	str	r0, [fp, #-20]	; 0xffffffec
   21840:	b	22034 <__assert_fail@plt+0x10c6c>
   21844:	b	21848 <__assert_fail@plt+0x10480>
   21848:	b	21a0c <__assert_fail@plt+0x10644>
   2184c:	ldr	r0, [fp, #-16]
   21850:	cmp	r0, #0
   21854:	bcs	21954 <__assert_fail@plt+0x1058c>
   21858:	ldr	r0, [fp, #-12]
   2185c:	cmp	r0, #0
   21860:	bcs	218e8 <__assert_fail@plt+0x10520>
   21864:	b	21884 <__assert_fail@plt+0x104bc>
   21868:	ldr	r0, [pc, #2016]	; 22050 <__assert_fail@plt+0x10c88>
   2186c:	ldr	r1, [fp, #-12]
   21870:	ldr	r2, [fp, #-16]
   21874:	udiv	r0, r0, r2
   21878:	cmp	r1, r0
   2187c:	bcc	219e4 <__assert_fail@plt+0x1061c>
   21880:	b	219f8 <__assert_fail@plt+0x10630>
   21884:	b	21898 <__assert_fail@plt+0x104d0>
   21888:	ldr	r0, [fp, #-16]
   2188c:	cmp	r0, #1
   21890:	bcc	218a8 <__assert_fail@plt+0x104e0>
   21894:	b	218b4 <__assert_fail@plt+0x104ec>
   21898:	ldr	r0, [fp, #-16]
   2189c:	movw	r1, #0
   218a0:	cmp	r1, r0
   218a4:	bcs	218b4 <__assert_fail@plt+0x104ec>
   218a8:	movw	r0, #0
   218ac:	str	r0, [sp, #48]	; 0x30
   218b0:	b	218cc <__assert_fail@plt+0x10504>
   218b4:	ldr	r0, [pc, #1940]	; 22050 <__assert_fail@plt+0x10c88>
   218b8:	ldr	r1, [fp, #-16]
   218bc:	movw	r2, #0
   218c0:	sub	r1, r2, r1
   218c4:	udiv	r0, r0, r1
   218c8:	str	r0, [sp, #48]	; 0x30
   218cc:	ldr	r0, [sp, #48]	; 0x30
   218d0:	ldr	r1, [fp, #-12]
   218d4:	mvn	r2, #0
   218d8:	sub	r1, r2, r1
   218dc:	cmp	r0, r1
   218e0:	bls	219e4 <__assert_fail@plt+0x1061c>
   218e4:	b	219f8 <__assert_fail@plt+0x10630>
   218e8:	ldr	r0, [fp, #-16]
   218ec:	cmn	r0, #1
   218f0:	bne	21938 <__assert_fail@plt+0x10570>
   218f4:	b	21910 <__assert_fail@plt+0x10548>
   218f8:	ldr	r0, [fp, #-12]
   218fc:	add	r0, r0, #-2147483648	; 0x80000000
   21900:	movw	r1, #0
   21904:	cmp	r1, r0
   21908:	bcc	219e4 <__assert_fail@plt+0x1061c>
   2190c:	b	219f8 <__assert_fail@plt+0x10630>
   21910:	ldr	r0, [fp, #-12]
   21914:	movw	r1, #0
   21918:	cmp	r1, r0
   2191c:	bcs	219f8 <__assert_fail@plt+0x10630>
   21920:	ldr	r0, [pc, #1832]	; 22050 <__assert_fail@plt+0x10c88>
   21924:	ldr	r1, [fp, #-12]
   21928:	sub	r1, r1, #1
   2192c:	cmp	r0, r1
   21930:	bcc	219e4 <__assert_fail@plt+0x1061c>
   21934:	b	219f8 <__assert_fail@plt+0x10630>
   21938:	ldr	r0, [pc, #1812]	; 22054 <__assert_fail@plt+0x10c8c>
   2193c:	ldr	r1, [fp, #-16]
   21940:	udiv	r0, r0, r1
   21944:	ldr	r1, [fp, #-12]
   21948:	cmp	r0, r1
   2194c:	bcc	219e4 <__assert_fail@plt+0x1061c>
   21950:	b	219f8 <__assert_fail@plt+0x10630>
   21954:	ldr	r0, [fp, #-16]
   21958:	cmp	r0, #0
   2195c:	bne	21964 <__assert_fail@plt+0x1059c>
   21960:	b	219f8 <__assert_fail@plt+0x10630>
   21964:	ldr	r0, [fp, #-12]
   21968:	cmp	r0, #0
   2196c:	bcs	219cc <__assert_fail@plt+0x10604>
   21970:	ldr	r0, [fp, #-12]
   21974:	cmn	r0, #1
   21978:	bne	219b0 <__assert_fail@plt+0x105e8>
   2197c:	b	21998 <__assert_fail@plt+0x105d0>
   21980:	ldr	r0, [fp, #-16]
   21984:	add	r0, r0, #-2147483648	; 0x80000000
   21988:	movw	r1, #0
   2198c:	cmp	r1, r0
   21990:	bcc	219e4 <__assert_fail@plt+0x1061c>
   21994:	b	219f8 <__assert_fail@plt+0x10630>
   21998:	ldr	r0, [pc, #1712]	; 22050 <__assert_fail@plt+0x10c88>
   2199c:	ldr	r1, [fp, #-16]
   219a0:	sub	r1, r1, #1
   219a4:	cmp	r0, r1
   219a8:	bcc	219e4 <__assert_fail@plt+0x1061c>
   219ac:	b	219f8 <__assert_fail@plt+0x10630>
   219b0:	ldr	r0, [pc, #1692]	; 22054 <__assert_fail@plt+0x10c8c>
   219b4:	ldr	r1, [fp, #-12]
   219b8:	udiv	r0, r0, r1
   219bc:	ldr	r1, [fp, #-16]
   219c0:	cmp	r0, r1
   219c4:	bcc	219e4 <__assert_fail@plt+0x1061c>
   219c8:	b	219f8 <__assert_fail@plt+0x10630>
   219cc:	ldr	r0, [pc, #1660]	; 22050 <__assert_fail@plt+0x10c88>
   219d0:	ldr	r1, [fp, #-16]
   219d4:	udiv	r0, r0, r1
   219d8:	ldr	r1, [fp, #-12]
   219dc:	cmp	r0, r1
   219e0:	bcs	219f8 <__assert_fail@plt+0x10630>
   219e4:	ldr	r0, [fp, #-12]
   219e8:	ldr	r1, [fp, #-16]
   219ec:	mul	r0, r0, r1
   219f0:	str	r0, [fp, #-20]	; 0xffffffec
   219f4:	b	2201c <__assert_fail@plt+0x10c54>
   219f8:	ldr	r0, [fp, #-12]
   219fc:	ldr	r1, [fp, #-16]
   21a00:	mul	r0, r0, r1
   21a04:	str	r0, [fp, #-20]	; 0xffffffec
   21a08:	b	22034 <__assert_fail@plt+0x10c6c>
   21a0c:	ldr	r0, [fp, #-16]
   21a10:	cmp	r0, #0
   21a14:	bcs	21b20 <__assert_fail@plt+0x10758>
   21a18:	ldr	r0, [fp, #-12]
   21a1c:	cmp	r0, #0
   21a20:	bcs	21aa8 <__assert_fail@plt+0x106e0>
   21a24:	b	21a44 <__assert_fail@plt+0x1067c>
   21a28:	ldr	r0, [fp, #-12]
   21a2c:	ldr	r1, [fp, #-16]
   21a30:	mvn	r2, #0
   21a34:	udiv	r1, r2, r1
   21a38:	cmp	r0, r1
   21a3c:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21a40:	b	21bd0 <__assert_fail@plt+0x10808>
   21a44:	b	21a58 <__assert_fail@plt+0x10690>
   21a48:	ldr	r0, [fp, #-16]
   21a4c:	cmp	r0, #1
   21a50:	bcc	21a68 <__assert_fail@plt+0x106a0>
   21a54:	b	21a74 <__assert_fail@plt+0x106ac>
   21a58:	ldr	r0, [fp, #-16]
   21a5c:	movw	r1, #0
   21a60:	cmp	r1, r0
   21a64:	bcs	21a74 <__assert_fail@plt+0x106ac>
   21a68:	movw	r0, #1
   21a6c:	str	r0, [sp, #44]	; 0x2c
   21a70:	b	21a8c <__assert_fail@plt+0x106c4>
   21a74:	ldr	r0, [fp, #-16]
   21a78:	movw	r1, #0
   21a7c:	sub	r0, r1, r0
   21a80:	mvn	r1, #0
   21a84:	udiv	r0, r1, r0
   21a88:	str	r0, [sp, #44]	; 0x2c
   21a8c:	ldr	r0, [sp, #44]	; 0x2c
   21a90:	ldr	r1, [fp, #-12]
   21a94:	mvn	r2, #0
   21a98:	sub	r1, r2, r1
   21a9c:	cmp	r0, r1
   21aa0:	bls	21bbc <__assert_fail@plt+0x107f4>
   21aa4:	b	21bd0 <__assert_fail@plt+0x10808>
   21aa8:	b	21ab0 <__assert_fail@plt+0x106e8>
   21aac:	b	21ab4 <__assert_fail@plt+0x106ec>
   21ab0:	b	21b04 <__assert_fail@plt+0x1073c>
   21ab4:	ldr	r0, [fp, #-16]
   21ab8:	cmn	r0, #1
   21abc:	bne	21b04 <__assert_fail@plt+0x1073c>
   21ac0:	b	21adc <__assert_fail@plt+0x10714>
   21ac4:	ldr	r0, [fp, #-12]
   21ac8:	add	r0, r0, #0
   21acc:	movw	r1, #0
   21ad0:	cmp	r1, r0
   21ad4:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21ad8:	b	21bd0 <__assert_fail@plt+0x10808>
   21adc:	ldr	r0, [fp, #-12]
   21ae0:	movw	r1, #0
   21ae4:	cmp	r1, r0
   21ae8:	bcs	21bd0 <__assert_fail@plt+0x10808>
   21aec:	ldr	r0, [fp, #-12]
   21af0:	sub	r0, r0, #1
   21af4:	mvn	r1, #0
   21af8:	cmp	r1, r0
   21afc:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21b00:	b	21bd0 <__assert_fail@plt+0x10808>
   21b04:	ldr	r0, [fp, #-16]
   21b08:	movw	r1, #0
   21b0c:	udiv	r0, r1, r0
   21b10:	ldr	r1, [fp, #-12]
   21b14:	cmp	r0, r1
   21b18:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21b1c:	b	21bd0 <__assert_fail@plt+0x10808>
   21b20:	ldr	r0, [fp, #-16]
   21b24:	cmp	r0, #0
   21b28:	bne	21b30 <__assert_fail@plt+0x10768>
   21b2c:	b	21bd0 <__assert_fail@plt+0x10808>
   21b30:	ldr	r0, [fp, #-12]
   21b34:	cmp	r0, #0
   21b38:	bcs	21ba4 <__assert_fail@plt+0x107dc>
   21b3c:	b	21b44 <__assert_fail@plt+0x1077c>
   21b40:	b	21b48 <__assert_fail@plt+0x10780>
   21b44:	b	21b88 <__assert_fail@plt+0x107c0>
   21b48:	ldr	r0, [fp, #-12]
   21b4c:	cmn	r0, #1
   21b50:	bne	21b88 <__assert_fail@plt+0x107c0>
   21b54:	b	21b70 <__assert_fail@plt+0x107a8>
   21b58:	ldr	r0, [fp, #-16]
   21b5c:	add	r0, r0, #0
   21b60:	movw	r1, #0
   21b64:	cmp	r1, r0
   21b68:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21b6c:	b	21bd0 <__assert_fail@plt+0x10808>
   21b70:	ldr	r0, [fp, #-16]
   21b74:	sub	r0, r0, #1
   21b78:	mvn	r1, #0
   21b7c:	cmp	r1, r0
   21b80:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21b84:	b	21bd0 <__assert_fail@plt+0x10808>
   21b88:	ldr	r0, [fp, #-12]
   21b8c:	movw	r1, #0
   21b90:	udiv	r0, r1, r0
   21b94:	ldr	r1, [fp, #-16]
   21b98:	cmp	r0, r1
   21b9c:	bcc	21bbc <__assert_fail@plt+0x107f4>
   21ba0:	b	21bd0 <__assert_fail@plt+0x10808>
   21ba4:	ldr	r0, [fp, #-16]
   21ba8:	mvn	r1, #0
   21bac:	udiv	r0, r1, r0
   21bb0:	ldr	r1, [fp, #-12]
   21bb4:	cmp	r0, r1
   21bb8:	bcs	21bd0 <__assert_fail@plt+0x10808>
   21bbc:	ldr	r0, [fp, #-12]
   21bc0:	ldr	r1, [fp, #-16]
   21bc4:	mul	r0, r0, r1
   21bc8:	str	r0, [fp, #-20]	; 0xffffffec
   21bcc:	b	2201c <__assert_fail@plt+0x10c54>
   21bd0:	ldr	r0, [fp, #-12]
   21bd4:	ldr	r1, [fp, #-16]
   21bd8:	mul	r0, r0, r1
   21bdc:	str	r0, [fp, #-20]	; 0xffffffec
   21be0:	b	22034 <__assert_fail@plt+0x10c6c>
   21be4:	b	21e00 <__assert_fail@plt+0x10a38>
   21be8:	ldr	r0, [fp, #-16]
   21bec:	cmp	r0, #0
   21bf0:	bcs	21d30 <__assert_fail@plt+0x10968>
   21bf4:	ldr	r0, [fp, #-12]
   21bf8:	cmp	r0, #0
   21bfc:	bcs	21cbc <__assert_fail@plt+0x108f4>
   21c00:	b	21c04 <__assert_fail@plt+0x1083c>
   21c04:	ldr	r0, [fp, #-12]
   21c08:	ldr	r2, [fp, #-16]
   21c0c:	mvn	r1, #0
   21c10:	mvn	r3, #-2147483648	; 0x80000000
   21c14:	mov	ip, #0
   21c18:	str	r0, [sp, #40]	; 0x28
   21c1c:	mov	r0, r1
   21c20:	mov	r1, r3
   21c24:	mov	r3, ip
   21c28:	bl	22990 <__assert_fail@plt+0x115c8>
   21c2c:	ldr	r2, [sp, #40]	; 0x28
   21c30:	subs	r0, r2, r0
   21c34:	rscs	r1, r1, #0
   21c38:	blt	21dd8 <__assert_fail@plt+0x10a10>
   21c3c:	b	21dec <__assert_fail@plt+0x10a24>
   21c40:	b	21c54 <__assert_fail@plt+0x1088c>
   21c44:	ldr	r0, [fp, #-16]
   21c48:	cmp	r0, #1
   21c4c:	bcc	21c64 <__assert_fail@plt+0x1089c>
   21c50:	b	21c78 <__assert_fail@plt+0x108b0>
   21c54:	ldr	r0, [fp, #-16]
   21c58:	movw	r1, #0
   21c5c:	cmp	r1, r0
   21c60:	bcs	21c78 <__assert_fail@plt+0x108b0>
   21c64:	mov	r0, #0
   21c68:	mvn	r1, #0
   21c6c:	str	r1, [sp, #36]	; 0x24
   21c70:	str	r0, [sp, #32]
   21c74:	b	21c9c <__assert_fail@plt+0x108d4>
   21c78:	ldr	r0, [fp, #-16]
   21c7c:	rsb	r2, r0, #0
   21c80:	mvn	r0, #0
   21c84:	mvn	r1, #-2147483648	; 0x80000000
   21c88:	mov	r3, #0
   21c8c:	bl	22990 <__assert_fail@plt+0x115c8>
   21c90:	str	r0, [sp, #36]	; 0x24
   21c94:	str	r1, [sp, #32]
   21c98:	b	21c9c <__assert_fail@plt+0x108d4>
   21c9c:	ldr	r0, [sp, #32]
   21ca0:	ldr	r1, [sp, #36]	; 0x24
   21ca4:	ldr	r2, [fp, #-12]
   21ca8:	mvn	r2, r2
   21cac:	subs	r1, r2, r1
   21cb0:	rscs	r0, r0, #0
   21cb4:	bge	21dd8 <__assert_fail@plt+0x10a10>
   21cb8:	b	21dec <__assert_fail@plt+0x10a24>
   21cbc:	ldr	r0, [fp, #-16]
   21cc0:	cmn	r0, #1
   21cc4:	bne	21d04 <__assert_fail@plt+0x1093c>
   21cc8:	b	21ce4 <__assert_fail@plt+0x1091c>
   21ccc:	ldr	r0, [fp, #-12]
   21cd0:	rsbs	r0, r0, #0
   21cd4:	mov	r1, #0
   21cd8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21cdc:	blt	21dd8 <__assert_fail@plt+0x10a10>
   21ce0:	b	21dec <__assert_fail@plt+0x10a24>
   21ce4:	ldr	r0, [fp, #-12]
   21ce8:	movw	r1, #0
   21cec:	cmp	r1, r0
   21cf0:	bcs	21dec <__assert_fail@plt+0x10a24>
   21cf4:	mov	r0, #0
   21cf8:	cmp	r0, #0
   21cfc:	bne	21dd8 <__assert_fail@plt+0x10a10>
   21d00:	b	21dec <__assert_fail@plt+0x10a24>
   21d04:	ldr	r2, [fp, #-16]
   21d08:	mov	r1, #-2147483648	; 0x80000000
   21d0c:	mov	r0, #0
   21d10:	str	r0, [sp, #28]
   21d14:	ldr	r3, [sp, #28]
   21d18:	bl	228bc <__assert_fail@plt+0x114f4>
   21d1c:	ldr	r2, [fp, #-12]
   21d20:	subs	r0, r0, r2
   21d24:	sbcs	r1, r1, #0
   21d28:	blt	21dd8 <__assert_fail@plt+0x10a10>
   21d2c:	b	21dec <__assert_fail@plt+0x10a24>
   21d30:	ldr	r0, [fp, #-16]
   21d34:	cmp	r0, #0
   21d38:	bne	21d40 <__assert_fail@plt+0x10978>
   21d3c:	b	21dec <__assert_fail@plt+0x10a24>
   21d40:	ldr	r0, [fp, #-12]
   21d44:	cmp	r0, #0
   21d48:	bcs	21db0 <__assert_fail@plt+0x109e8>
   21d4c:	ldr	r0, [fp, #-12]
   21d50:	cmn	r0, #1
   21d54:	bne	21d84 <__assert_fail@plt+0x109bc>
   21d58:	b	21d74 <__assert_fail@plt+0x109ac>
   21d5c:	ldr	r0, [fp, #-16]
   21d60:	rsbs	r0, r0, #0
   21d64:	mov	r1, #0
   21d68:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21d6c:	blt	21dd8 <__assert_fail@plt+0x10a10>
   21d70:	b	21dec <__assert_fail@plt+0x10a24>
   21d74:	mov	r0, #0
   21d78:	cmp	r0, #0
   21d7c:	bne	21dd8 <__assert_fail@plt+0x10a10>
   21d80:	b	21dec <__assert_fail@plt+0x10a24>
   21d84:	ldr	r2, [fp, #-12]
   21d88:	mov	r1, #-2147483648	; 0x80000000
   21d8c:	mov	r0, #0
   21d90:	str	r0, [sp, #24]
   21d94:	ldr	r3, [sp, #24]
   21d98:	bl	228bc <__assert_fail@plt+0x114f4>
   21d9c:	ldr	r2, [fp, #-16]
   21da0:	subs	r0, r0, r2
   21da4:	sbcs	r1, r1, #0
   21da8:	blt	21dd8 <__assert_fail@plt+0x10a10>
   21dac:	b	21dec <__assert_fail@plt+0x10a24>
   21db0:	ldr	r2, [fp, #-16]
   21db4:	mvn	r0, #0
   21db8:	mvn	r1, #-2147483648	; 0x80000000
   21dbc:	mov	r3, #0
   21dc0:	bl	22990 <__assert_fail@plt+0x115c8>
   21dc4:	ldr	r2, [fp, #-12]
   21dc8:	subs	r0, r0, r2
   21dcc:	sbcs	r1, r1, #0
   21dd0:	bge	21dec <__assert_fail@plt+0x10a24>
   21dd4:	b	21dd8 <__assert_fail@plt+0x10a10>
   21dd8:	ldr	r0, [fp, #-12]
   21ddc:	ldr	r1, [fp, #-16]
   21de0:	mul	r0, r0, r1
   21de4:	str	r0, [fp, #-20]	; 0xffffffec
   21de8:	b	2201c <__assert_fail@plt+0x10c54>
   21dec:	ldr	r0, [fp, #-12]
   21df0:	ldr	r1, [fp, #-16]
   21df4:	mul	r0, r0, r1
   21df8:	str	r0, [fp, #-20]	; 0xffffffec
   21dfc:	b	22034 <__assert_fail@plt+0x10c6c>
   21e00:	ldr	r0, [fp, #-16]
   21e04:	cmp	r0, #0
   21e08:	bcs	21f44 <__assert_fail@plt+0x10b7c>
   21e0c:	ldr	r0, [fp, #-12]
   21e10:	cmp	r0, #0
   21e14:	bcs	21ecc <__assert_fail@plt+0x10b04>
   21e18:	b	21e4c <__assert_fail@plt+0x10a84>
   21e1c:	ldr	r0, [fp, #-12]
   21e20:	ldr	r2, [fp, #-16]
   21e24:	mvn	r1, #0
   21e28:	mov	r3, #0
   21e2c:	str	r0, [sp, #20]
   21e30:	mov	r0, r1
   21e34:	bl	22990 <__assert_fail@plt+0x115c8>
   21e38:	ldr	r2, [sp, #20]
   21e3c:	subs	r0, r2, r0
   21e40:	rscs	r1, r1, #0
   21e44:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21e48:	b	22008 <__assert_fail@plt+0x10c40>
   21e4c:	b	21e60 <__assert_fail@plt+0x10a98>
   21e50:	ldr	r0, [fp, #-16]
   21e54:	cmp	r0, #1
   21e58:	bcc	21e70 <__assert_fail@plt+0x10aa8>
   21e5c:	b	21e84 <__assert_fail@plt+0x10abc>
   21e60:	ldr	r0, [fp, #-16]
   21e64:	movw	r1, #0
   21e68:	cmp	r1, r0
   21e6c:	bcs	21e84 <__assert_fail@plt+0x10abc>
   21e70:	mov	r0, #1
   21e74:	mvn	r1, #0
   21e78:	str	r1, [sp, #16]
   21e7c:	str	r0, [sp, #12]
   21e80:	b	21eac <__assert_fail@plt+0x10ae4>
   21e84:	ldr	r0, [fp, #-16]
   21e88:	rsb	r2, r0, #0
   21e8c:	mvn	r0, #0
   21e90:	mov	r3, #0
   21e94:	str	r0, [sp, #8]
   21e98:	ldr	r1, [sp, #8]
   21e9c:	bl	22990 <__assert_fail@plt+0x115c8>
   21ea0:	str	r0, [sp, #16]
   21ea4:	str	r1, [sp, #12]
   21ea8:	b	21eac <__assert_fail@plt+0x10ae4>
   21eac:	ldr	r0, [sp, #12]
   21eb0:	ldr	r1, [sp, #16]
   21eb4:	ldr	r2, [fp, #-12]
   21eb8:	mvn	r2, r2
   21ebc:	subs	r1, r2, r1
   21ec0:	rscs	r0, r0, #0
   21ec4:	bcs	21ff4 <__assert_fail@plt+0x10c2c>
   21ec8:	b	22008 <__assert_fail@plt+0x10c40>
   21ecc:	b	21ed4 <__assert_fail@plt+0x10b0c>
   21ed0:	b	21ed8 <__assert_fail@plt+0x10b10>
   21ed4:	b	21f28 <__assert_fail@plt+0x10b60>
   21ed8:	ldr	r0, [fp, #-16]
   21edc:	cmn	r0, #1
   21ee0:	bne	21f28 <__assert_fail@plt+0x10b60>
   21ee4:	b	21f00 <__assert_fail@plt+0x10b38>
   21ee8:	ldr	r0, [fp, #-12]
   21eec:	add	r0, r0, #0
   21ef0:	movw	r1, #0
   21ef4:	cmp	r1, r0
   21ef8:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21efc:	b	22008 <__assert_fail@plt+0x10c40>
   21f00:	ldr	r0, [fp, #-12]
   21f04:	movw	r1, #0
   21f08:	cmp	r1, r0
   21f0c:	bcs	22008 <__assert_fail@plt+0x10c40>
   21f10:	ldr	r0, [fp, #-12]
   21f14:	sub	r0, r0, #1
   21f18:	mvn	r1, #0
   21f1c:	cmp	r1, r0
   21f20:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21f24:	b	22008 <__assert_fail@plt+0x10c40>
   21f28:	ldr	r0, [fp, #-16]
   21f2c:	movw	r1, #0
   21f30:	udiv	r0, r1, r0
   21f34:	ldr	r1, [fp, #-12]
   21f38:	cmp	r0, r1
   21f3c:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21f40:	b	22008 <__assert_fail@plt+0x10c40>
   21f44:	ldr	r0, [fp, #-16]
   21f48:	cmp	r0, #0
   21f4c:	bne	21f54 <__assert_fail@plt+0x10b8c>
   21f50:	b	22008 <__assert_fail@plt+0x10c40>
   21f54:	ldr	r0, [fp, #-12]
   21f58:	cmp	r0, #0
   21f5c:	bcs	21fc8 <__assert_fail@plt+0x10c00>
   21f60:	b	21f68 <__assert_fail@plt+0x10ba0>
   21f64:	b	21f6c <__assert_fail@plt+0x10ba4>
   21f68:	b	21fac <__assert_fail@plt+0x10be4>
   21f6c:	ldr	r0, [fp, #-12]
   21f70:	cmn	r0, #1
   21f74:	bne	21fac <__assert_fail@plt+0x10be4>
   21f78:	b	21f94 <__assert_fail@plt+0x10bcc>
   21f7c:	ldr	r0, [fp, #-16]
   21f80:	add	r0, r0, #0
   21f84:	movw	r1, #0
   21f88:	cmp	r1, r0
   21f8c:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21f90:	b	22008 <__assert_fail@plt+0x10c40>
   21f94:	ldr	r0, [fp, #-16]
   21f98:	sub	r0, r0, #1
   21f9c:	mvn	r1, #0
   21fa0:	cmp	r1, r0
   21fa4:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21fa8:	b	22008 <__assert_fail@plt+0x10c40>
   21fac:	ldr	r0, [fp, #-12]
   21fb0:	movw	r1, #0
   21fb4:	udiv	r0, r1, r0
   21fb8:	ldr	r1, [fp, #-16]
   21fbc:	cmp	r0, r1
   21fc0:	bcc	21ff4 <__assert_fail@plt+0x10c2c>
   21fc4:	b	22008 <__assert_fail@plt+0x10c40>
   21fc8:	ldr	r2, [fp, #-16]
   21fcc:	mvn	r0, #0
   21fd0:	mov	r3, #0
   21fd4:	str	r0, [sp, #4]
   21fd8:	ldr	r1, [sp, #4]
   21fdc:	bl	22990 <__assert_fail@plt+0x115c8>
   21fe0:	ldr	r2, [fp, #-12]
   21fe4:	subs	r0, r0, r2
   21fe8:	sbcs	r1, r1, #0
   21fec:	bcs	22008 <__assert_fail@plt+0x10c40>
   21ff0:	b	21ff4 <__assert_fail@plt+0x10c2c>
   21ff4:	ldr	r0, [fp, #-12]
   21ff8:	ldr	r1, [fp, #-16]
   21ffc:	mul	r0, r0, r1
   22000:	str	r0, [fp, #-20]	; 0xffffffec
   22004:	b	2201c <__assert_fail@plt+0x10c54>
   22008:	ldr	r0, [fp, #-12]
   2200c:	ldr	r1, [fp, #-16]
   22010:	mul	r0, r0, r1
   22014:	str	r0, [fp, #-20]	; 0xffffffec
   22018:	b	22034 <__assert_fail@plt+0x10c6c>
   2201c:	bl	11290 <__errno_location@plt>
   22020:	movw	r1, #12
   22024:	str	r1, [r0]
   22028:	movw	r0, #0
   2202c:	str	r0, [fp, #-4]
   22030:	b	22044 <__assert_fail@plt+0x10c7c>
   22034:	ldr	r0, [fp, #-8]
   22038:	ldr	r1, [fp, #-20]	; 0xffffffec
   2203c:	bl	1fc00 <__assert_fail@plt+0xe838>
   22040:	str	r0, [fp, #-4]
   22044:	ldr	r0, [fp, #-4]
   22048:	mov	sp, fp
   2204c:	pop	{fp, pc}
   22050:	svcvc	0x00ffffff
   22054:	andhi	r0, r0, r0
   22058:			; <UNDEFINED> instruction: 0xffff8000
   2205c:	push	{fp, lr}
   22060:	mov	fp, sp
   22064:	sub	sp, sp, #8
   22068:	str	r0, [sp, #4]
   2206c:	ldr	r0, [sp, #4]
   22070:	movw	r1, #0
   22074:	movw	r2, #3
   22078:	bl	203e8 <__assert_fail@plt+0xf020>
   2207c:	mov	sp, fp
   22080:	pop	{fp, pc}
   22084:	sub	sp, sp, #12
   22088:	str	r0, [sp, #4]
   2208c:	ldr	r0, [sp, #4]
   22090:	sub	r1, r0, #48	; 0x30
   22094:	cmp	r1, #10
   22098:	str	r0, [sp]
   2209c:	bcc	220cc <__assert_fail@plt+0x10d04>
   220a0:	b	220a4 <__assert_fail@plt+0x10cdc>
   220a4:	ldr	r0, [sp]
   220a8:	sub	r1, r0, #65	; 0x41
   220ac:	cmp	r1, #26
   220b0:	bcc	220cc <__assert_fail@plt+0x10d04>
   220b4:	b	220b8 <__assert_fail@plt+0x10cf0>
   220b8:	ldr	r0, [sp]
   220bc:	sub	r1, r0, #97	; 0x61
   220c0:	cmp	r1, #25
   220c4:	bhi	220dc <__assert_fail@plt+0x10d14>
   220c8:	b	220cc <__assert_fail@plt+0x10d04>
   220cc:	movw	r0, #1
   220d0:	and	r0, r0, #1
   220d4:	strb	r0, [sp, #11]
   220d8:	b	220e8 <__assert_fail@plt+0x10d20>
   220dc:	movw	r0, #0
   220e0:	and	r0, r0, #1
   220e4:	strb	r0, [sp, #11]
   220e8:	ldrb	r0, [sp, #11]
   220ec:	and	r0, r0, #1
   220f0:	add	sp, sp, #12
   220f4:	bx	lr
   220f8:	sub	sp, sp, #12
   220fc:	str	r0, [sp, #4]
   22100:	ldr	r0, [sp, #4]
   22104:	sub	r1, r0, #65	; 0x41
   22108:	cmp	r1, #26
   2210c:	str	r0, [sp]
   22110:	bcc	2212c <__assert_fail@plt+0x10d64>
   22114:	b	22118 <__assert_fail@plt+0x10d50>
   22118:	ldr	r0, [sp]
   2211c:	sub	r1, r0, #97	; 0x61
   22120:	cmp	r1, #25
   22124:	bhi	2213c <__assert_fail@plt+0x10d74>
   22128:	b	2212c <__assert_fail@plt+0x10d64>
   2212c:	movw	r0, #1
   22130:	and	r0, r0, #1
   22134:	strb	r0, [sp, #11]
   22138:	b	22148 <__assert_fail@plt+0x10d80>
   2213c:	movw	r0, #0
   22140:	and	r0, r0, #1
   22144:	strb	r0, [sp, #11]
   22148:	ldrb	r0, [sp, #11]
   2214c:	and	r0, r0, #1
   22150:	add	sp, sp, #12
   22154:	bx	lr
   22158:	sub	sp, sp, #8
   2215c:	str	r0, [sp]
   22160:	ldr	r0, [sp]
   22164:	cmp	r0, #127	; 0x7f
   22168:	bhi	22180 <__assert_fail@plt+0x10db8>
   2216c:	b	22170 <__assert_fail@plt+0x10da8>
   22170:	movw	r0, #1
   22174:	and	r0, r0, #1
   22178:	strb	r0, [sp, #7]
   2217c:	b	2218c <__assert_fail@plt+0x10dc4>
   22180:	movw	r0, #0
   22184:	and	r0, r0, #1
   22188:	strb	r0, [sp, #7]
   2218c:	ldrb	r0, [sp, #7]
   22190:	and	r0, r0, #1
   22194:	add	sp, sp, #8
   22198:	bx	lr
   2219c:	sub	sp, sp, #8
   221a0:	str	r0, [sp, #4]
   221a4:	ldr	r0, [sp, #4]
   221a8:	cmp	r0, #32
   221ac:	movw	r0, #1
   221b0:	str	r0, [sp]
   221b4:	beq	221cc <__assert_fail@plt+0x10e04>
   221b8:	ldr	r0, [sp, #4]
   221bc:	cmp	r0, #9
   221c0:	movw	r0, #0
   221c4:	moveq	r0, #1
   221c8:	str	r0, [sp]
   221cc:	ldr	r0, [sp]
   221d0:	and	r0, r0, #1
   221d4:	add	sp, sp, #8
   221d8:	bx	lr
   221dc:	sub	sp, sp, #12
   221e0:	str	r0, [sp, #4]
   221e4:	ldr	r0, [sp, #4]
   221e8:	cmp	r0, #32
   221ec:	str	r0, [sp]
   221f0:	bcc	22208 <__assert_fail@plt+0x10e40>
   221f4:	b	221f8 <__assert_fail@plt+0x10e30>
   221f8:	ldr	r0, [sp]
   221fc:	cmp	r0, #127	; 0x7f
   22200:	bne	22218 <__assert_fail@plt+0x10e50>
   22204:	b	22208 <__assert_fail@plt+0x10e40>
   22208:	movw	r0, #1
   2220c:	and	r0, r0, #1
   22210:	strb	r0, [sp, #11]
   22214:	b	22224 <__assert_fail@plt+0x10e5c>
   22218:	movw	r0, #0
   2221c:	and	r0, r0, #1
   22220:	strb	r0, [sp, #11]
   22224:	ldrb	r0, [sp, #11]
   22228:	and	r0, r0, #1
   2222c:	add	sp, sp, #12
   22230:	bx	lr
   22234:	sub	sp, sp, #8
   22238:	str	r0, [sp]
   2223c:	ldr	r0, [sp]
   22240:	sub	r0, r0, #48	; 0x30
   22244:	cmp	r0, #9
   22248:	bhi	22260 <__assert_fail@plt+0x10e98>
   2224c:	b	22250 <__assert_fail@plt+0x10e88>
   22250:	movw	r0, #1
   22254:	and	r0, r0, #1
   22258:	strb	r0, [sp, #7]
   2225c:	b	2226c <__assert_fail@plt+0x10ea4>
   22260:	movw	r0, #0
   22264:	and	r0, r0, #1
   22268:	strb	r0, [sp, #7]
   2226c:	ldrb	r0, [sp, #7]
   22270:	and	r0, r0, #1
   22274:	add	sp, sp, #8
   22278:	bx	lr
   2227c:	sub	sp, sp, #8
   22280:	str	r0, [sp]
   22284:	ldr	r0, [sp]
   22288:	sub	r0, r0, #33	; 0x21
   2228c:	cmp	r0, #93	; 0x5d
   22290:	bhi	222a8 <__assert_fail@plt+0x10ee0>
   22294:	b	22298 <__assert_fail@plt+0x10ed0>
   22298:	movw	r0, #1
   2229c:	and	r0, r0, #1
   222a0:	strb	r0, [sp, #7]
   222a4:	b	222b4 <__assert_fail@plt+0x10eec>
   222a8:	movw	r0, #0
   222ac:	and	r0, r0, #1
   222b0:	strb	r0, [sp, #7]
   222b4:	ldrb	r0, [sp, #7]
   222b8:	and	r0, r0, #1
   222bc:	add	sp, sp, #8
   222c0:	bx	lr
   222c4:	sub	sp, sp, #8
   222c8:	str	r0, [sp]
   222cc:	ldr	r0, [sp]
   222d0:	sub	r0, r0, #97	; 0x61
   222d4:	cmp	r0, #25
   222d8:	bhi	222f0 <__assert_fail@plt+0x10f28>
   222dc:	b	222e0 <__assert_fail@plt+0x10f18>
   222e0:	movw	r0, #1
   222e4:	and	r0, r0, #1
   222e8:	strb	r0, [sp, #7]
   222ec:	b	222fc <__assert_fail@plt+0x10f34>
   222f0:	movw	r0, #0
   222f4:	and	r0, r0, #1
   222f8:	strb	r0, [sp, #7]
   222fc:	ldrb	r0, [sp, #7]
   22300:	and	r0, r0, #1
   22304:	add	sp, sp, #8
   22308:	bx	lr
   2230c:	sub	sp, sp, #8
   22310:	str	r0, [sp]
   22314:	ldr	r0, [sp]
   22318:	sub	r0, r0, #32
   2231c:	cmp	r0, #94	; 0x5e
   22320:	bhi	22338 <__assert_fail@plt+0x10f70>
   22324:	b	22328 <__assert_fail@plt+0x10f60>
   22328:	movw	r0, #1
   2232c:	and	r0, r0, #1
   22330:	strb	r0, [sp, #7]
   22334:	b	22344 <__assert_fail@plt+0x10f7c>
   22338:	movw	r0, #0
   2233c:	and	r0, r0, #1
   22340:	strb	r0, [sp, #7]
   22344:	ldrb	r0, [sp, #7]
   22348:	and	r0, r0, #1
   2234c:	add	sp, sp, #8
   22350:	bx	lr
   22354:	sub	sp, sp, #12
   22358:	str	r0, [sp, #4]
   2235c:	ldr	r0, [sp, #4]
   22360:	sub	r0, r0, #33	; 0x21
   22364:	cmp	r0, #93	; 0x5d
   22368:	str	r0, [sp]
   2236c:	bhi	22508 <__assert_fail@plt+0x11140>
   22370:	add	r0, pc, #8
   22374:	ldr	r1, [sp]
   22378:	ldr	r0, [r0, r1, lsl #2]
   2237c:	mov	pc, r0
   22380:	strdeq	r2, [r2], -r8
   22384:	strdeq	r2, [r2], -r8
   22388:	strdeq	r2, [r2], -r8
   2238c:	strdeq	r2, [r2], -r8
   22390:	strdeq	r2, [r2], -r8
   22394:	strdeq	r2, [r2], -r8
   22398:	strdeq	r2, [r2], -r8
   2239c:	strdeq	r2, [r2], -r8
   223a0:	strdeq	r2, [r2], -r8
   223a4:	strdeq	r2, [r2], -r8
   223a8:	strdeq	r2, [r2], -r8
   223ac:	strdeq	r2, [r2], -r8
   223b0:	strdeq	r2, [r2], -r8
   223b4:	strdeq	r2, [r2], -r8
   223b8:	strdeq	r2, [r2], -r8
   223bc:	andeq	r2, r2, r8, lsl #10
   223c0:	andeq	r2, r2, r8, lsl #10
   223c4:	andeq	r2, r2, r8, lsl #10
   223c8:	andeq	r2, r2, r8, lsl #10
   223cc:	andeq	r2, r2, r8, lsl #10
   223d0:	andeq	r2, r2, r8, lsl #10
   223d4:	andeq	r2, r2, r8, lsl #10
   223d8:	andeq	r2, r2, r8, lsl #10
   223dc:	andeq	r2, r2, r8, lsl #10
   223e0:	andeq	r2, r2, r8, lsl #10
   223e4:	strdeq	r2, [r2], -r8
   223e8:	strdeq	r2, [r2], -r8
   223ec:	strdeq	r2, [r2], -r8
   223f0:	strdeq	r2, [r2], -r8
   223f4:	strdeq	r2, [r2], -r8
   223f8:	strdeq	r2, [r2], -r8
   223fc:	strdeq	r2, [r2], -r8
   22400:	andeq	r2, r2, r8, lsl #10
   22404:	andeq	r2, r2, r8, lsl #10
   22408:	andeq	r2, r2, r8, lsl #10
   2240c:	andeq	r2, r2, r8, lsl #10
   22410:	andeq	r2, r2, r8, lsl #10
   22414:	andeq	r2, r2, r8, lsl #10
   22418:	andeq	r2, r2, r8, lsl #10
   2241c:	andeq	r2, r2, r8, lsl #10
   22420:	andeq	r2, r2, r8, lsl #10
   22424:	andeq	r2, r2, r8, lsl #10
   22428:	andeq	r2, r2, r8, lsl #10
   2242c:	andeq	r2, r2, r8, lsl #10
   22430:	andeq	r2, r2, r8, lsl #10
   22434:	andeq	r2, r2, r8, lsl #10
   22438:	andeq	r2, r2, r8, lsl #10
   2243c:	andeq	r2, r2, r8, lsl #10
   22440:	andeq	r2, r2, r8, lsl #10
   22444:	andeq	r2, r2, r8, lsl #10
   22448:	andeq	r2, r2, r8, lsl #10
   2244c:	andeq	r2, r2, r8, lsl #10
   22450:	andeq	r2, r2, r8, lsl #10
   22454:	andeq	r2, r2, r8, lsl #10
   22458:	andeq	r2, r2, r8, lsl #10
   2245c:	andeq	r2, r2, r8, lsl #10
   22460:	andeq	r2, r2, r8, lsl #10
   22464:	andeq	r2, r2, r8, lsl #10
   22468:	strdeq	r2, [r2], -r8
   2246c:	strdeq	r2, [r2], -r8
   22470:	strdeq	r2, [r2], -r8
   22474:	strdeq	r2, [r2], -r8
   22478:	strdeq	r2, [r2], -r8
   2247c:	strdeq	r2, [r2], -r8
   22480:	andeq	r2, r2, r8, lsl #10
   22484:	andeq	r2, r2, r8, lsl #10
   22488:	andeq	r2, r2, r8, lsl #10
   2248c:	andeq	r2, r2, r8, lsl #10
   22490:	andeq	r2, r2, r8, lsl #10
   22494:	andeq	r2, r2, r8, lsl #10
   22498:	andeq	r2, r2, r8, lsl #10
   2249c:	andeq	r2, r2, r8, lsl #10
   224a0:	andeq	r2, r2, r8, lsl #10
   224a4:	andeq	r2, r2, r8, lsl #10
   224a8:	andeq	r2, r2, r8, lsl #10
   224ac:	andeq	r2, r2, r8, lsl #10
   224b0:	andeq	r2, r2, r8, lsl #10
   224b4:	andeq	r2, r2, r8, lsl #10
   224b8:	andeq	r2, r2, r8, lsl #10
   224bc:	andeq	r2, r2, r8, lsl #10
   224c0:	andeq	r2, r2, r8, lsl #10
   224c4:	andeq	r2, r2, r8, lsl #10
   224c8:	andeq	r2, r2, r8, lsl #10
   224cc:	andeq	r2, r2, r8, lsl #10
   224d0:	andeq	r2, r2, r8, lsl #10
   224d4:	andeq	r2, r2, r8, lsl #10
   224d8:	andeq	r2, r2, r8, lsl #10
   224dc:	andeq	r2, r2, r8, lsl #10
   224e0:	andeq	r2, r2, r8, lsl #10
   224e4:	andeq	r2, r2, r8, lsl #10
   224e8:	strdeq	r2, [r2], -r8
   224ec:	strdeq	r2, [r2], -r8
   224f0:	strdeq	r2, [r2], -r8
   224f4:	strdeq	r2, [r2], -r8
   224f8:	movw	r0, #1
   224fc:	and	r0, r0, #1
   22500:	strb	r0, [sp, #11]
   22504:	b	22514 <__assert_fail@plt+0x1114c>
   22508:	movw	r0, #0
   2250c:	and	r0, r0, #1
   22510:	strb	r0, [sp, #11]
   22514:	ldrb	r0, [sp, #11]
   22518:	and	r0, r0, #1
   2251c:	add	sp, sp, #12
   22520:	bx	lr
   22524:	sub	sp, sp, #12
   22528:	str	r0, [sp, #4]
   2252c:	ldr	r0, [sp, #4]
   22530:	sub	r1, r0, #9
   22534:	cmp	r1, #5
   22538:	str	r0, [sp]
   2253c:	bcc	22554 <__assert_fail@plt+0x1118c>
   22540:	b	22544 <__assert_fail@plt+0x1117c>
   22544:	ldr	r0, [sp]
   22548:	cmp	r0, #32
   2254c:	bne	22564 <__assert_fail@plt+0x1119c>
   22550:	b	22554 <__assert_fail@plt+0x1118c>
   22554:	movw	r0, #1
   22558:	and	r0, r0, #1
   2255c:	strb	r0, [sp, #11]
   22560:	b	22570 <__assert_fail@plt+0x111a8>
   22564:	movw	r0, #0
   22568:	and	r0, r0, #1
   2256c:	strb	r0, [sp, #11]
   22570:	ldrb	r0, [sp, #11]
   22574:	and	r0, r0, #1
   22578:	add	sp, sp, #12
   2257c:	bx	lr
   22580:	sub	sp, sp, #8
   22584:	str	r0, [sp]
   22588:	ldr	r0, [sp]
   2258c:	sub	r0, r0, #65	; 0x41
   22590:	cmp	r0, #25
   22594:	bhi	225ac <__assert_fail@plt+0x111e4>
   22598:	b	2259c <__assert_fail@plt+0x111d4>
   2259c:	movw	r0, #1
   225a0:	and	r0, r0, #1
   225a4:	strb	r0, [sp, #7]
   225a8:	b	225b8 <__assert_fail@plt+0x111f0>
   225ac:	movw	r0, #0
   225b0:	and	r0, r0, #1
   225b4:	strb	r0, [sp, #7]
   225b8:	ldrb	r0, [sp, #7]
   225bc:	and	r0, r0, #1
   225c0:	add	sp, sp, #8
   225c4:	bx	lr
   225c8:	sub	sp, sp, #12
   225cc:	str	r0, [sp, #4]
   225d0:	ldr	r0, [sp, #4]
   225d4:	sub	r1, r0, #48	; 0x30
   225d8:	cmp	r1, #10
   225dc:	str	r0, [sp]
   225e0:	bcc	22610 <__assert_fail@plt+0x11248>
   225e4:	b	225e8 <__assert_fail@plt+0x11220>
   225e8:	ldr	r0, [sp]
   225ec:	sub	r1, r0, #65	; 0x41
   225f0:	cmp	r1, #6
   225f4:	bcc	22610 <__assert_fail@plt+0x11248>
   225f8:	b	225fc <__assert_fail@plt+0x11234>
   225fc:	ldr	r0, [sp]
   22600:	sub	r1, r0, #97	; 0x61
   22604:	cmp	r1, #5
   22608:	bhi	22620 <__assert_fail@plt+0x11258>
   2260c:	b	22610 <__assert_fail@plt+0x11248>
   22610:	movw	r0, #1
   22614:	and	r0, r0, #1
   22618:	strb	r0, [sp, #11]
   2261c:	b	2262c <__assert_fail@plt+0x11264>
   22620:	movw	r0, #0
   22624:	and	r0, r0, #1
   22628:	strb	r0, [sp, #11]
   2262c:	ldrb	r0, [sp, #11]
   22630:	and	r0, r0, #1
   22634:	add	sp, sp, #12
   22638:	bx	lr
   2263c:	sub	sp, sp, #8
   22640:	str	r0, [sp]
   22644:	ldr	r0, [sp]
   22648:	sub	r0, r0, #65	; 0x41
   2264c:	cmp	r0, #25
   22650:	bhi	2266c <__assert_fail@plt+0x112a4>
   22654:	b	22658 <__assert_fail@plt+0x11290>
   22658:	ldr	r0, [sp]
   2265c:	sub	r0, r0, #65	; 0x41
   22660:	add	r0, r0, #97	; 0x61
   22664:	str	r0, [sp, #4]
   22668:	b	22674 <__assert_fail@plt+0x112ac>
   2266c:	ldr	r0, [sp]
   22670:	str	r0, [sp, #4]
   22674:	ldr	r0, [sp, #4]
   22678:	add	sp, sp, #8
   2267c:	bx	lr
   22680:	sub	sp, sp, #8
   22684:	str	r0, [sp]
   22688:	ldr	r0, [sp]
   2268c:	sub	r0, r0, #97	; 0x61
   22690:	cmp	r0, #25
   22694:	bhi	226b0 <__assert_fail@plt+0x112e8>
   22698:	b	2269c <__assert_fail@plt+0x112d4>
   2269c:	ldr	r0, [sp]
   226a0:	sub	r0, r0, #97	; 0x61
   226a4:	add	r0, r0, #65	; 0x41
   226a8:	str	r0, [sp, #4]
   226ac:	b	226b8 <__assert_fail@plt+0x112f0>
   226b0:	ldr	r0, [sp]
   226b4:	str	r0, [sp, #4]
   226b8:	ldr	r0, [sp, #4]
   226bc:	add	sp, sp, #8
   226c0:	bx	lr
   226c4:	push	{r4, r5, fp, lr}
   226c8:	add	fp, sp, #8
   226cc:	sub	sp, sp, #272	; 0x110
   226d0:	add	r1, sp, #7
   226d4:	str	r0, [fp, #-16]
   226d8:	ldr	r0, [fp, #-16]
   226dc:	movw	r2, #257	; 0x101
   226e0:	bl	22760 <__assert_fail@plt+0x11398>
   226e4:	cmp	r0, #0
   226e8:	beq	226fc <__assert_fail@plt+0x11334>
   226ec:	movw	r0, #0
   226f0:	and	r0, r0, #1
   226f4:	strb	r0, [fp, #-9]
   226f8:	b	22750 <__assert_fail@plt+0x11388>
   226fc:	add	r0, sp, #7
   22700:	movw	r1, #15281	; 0x3bb1
   22704:	movt	r1, #2
   22708:	bl	11104 <strcmp@plt>
   2270c:	cmp	r0, #0
   22710:	movw	r0, #1
   22714:	str	r0, [sp]
   22718:	beq	2273c <__assert_fail@plt+0x11374>
   2271c:	add	r0, sp, #7
   22720:	movw	r1, #15283	; 0x3bb3
   22724:	movt	r1, #2
   22728:	bl	11104 <strcmp@plt>
   2272c:	cmp	r0, #0
   22730:	movw	r0, #0
   22734:	moveq	r0, #1
   22738:	str	r0, [sp]
   2273c:	ldr	r0, [sp]
   22740:	mvn	r1, #0
   22744:	eor	r0, r0, r1
   22748:	and	r0, r0, #1
   2274c:	strb	r0, [fp, #-9]
   22750:	ldrb	r0, [fp, #-9]
   22754:	and	r0, r0, #1
   22758:	sub	sp, fp, #8
   2275c:	pop	{r4, r5, fp, pc}
   22760:	push	{fp, lr}
   22764:	mov	fp, sp
   22768:	sub	sp, sp, #16
   2276c:	str	r0, [fp, #-4]
   22770:	str	r1, [sp, #8]
   22774:	str	r2, [sp, #4]
   22778:	ldr	r0, [fp, #-4]
   2277c:	ldr	r1, [sp, #8]
   22780:	ldr	r2, [sp, #4]
   22784:	bl	22790 <__assert_fail@plt+0x113c8>
   22788:	mov	sp, fp
   2278c:	pop	{fp, pc}
   22790:	push	{fp, lr}
   22794:	mov	fp, sp
   22798:	sub	sp, sp, #24
   2279c:	str	r0, [fp, #-8]
   227a0:	str	r1, [sp, #12]
   227a4:	str	r2, [sp, #8]
   227a8:	ldr	r0, [fp, #-8]
   227ac:	bl	22890 <__assert_fail@plt+0x114c8>
   227b0:	str	r0, [sp, #4]
   227b4:	ldr	r0, [sp, #4]
   227b8:	movw	r1, #0
   227bc:	cmp	r0, r1
   227c0:	bne	227e8 <__assert_fail@plt+0x11420>
   227c4:	ldr	r0, [sp, #8]
   227c8:	cmp	r0, #0
   227cc:	bls	227dc <__assert_fail@plt+0x11414>
   227d0:	ldr	r0, [sp, #12]
   227d4:	movw	r1, #0
   227d8:	strb	r1, [r0]
   227dc:	movw	r0, #22
   227e0:	str	r0, [fp, #-4]
   227e4:	b	22864 <__assert_fail@plt+0x1149c>
   227e8:	ldr	r0, [sp, #4]
   227ec:	bl	11260 <strlen@plt>
   227f0:	str	r0, [sp]
   227f4:	ldr	r0, [sp]
   227f8:	ldr	r1, [sp, #8]
   227fc:	cmp	r0, r1
   22800:	bcs	22824 <__assert_fail@plt+0x1145c>
   22804:	ldr	r0, [sp, #12]
   22808:	ldr	r1, [sp, #4]
   2280c:	ldr	r2, [sp]
   22810:	add	r2, r2, #1
   22814:	bl	1114c <memcpy@plt>
   22818:	movw	r0, #0
   2281c:	str	r0, [fp, #-4]
   22820:	b	22864 <__assert_fail@plt+0x1149c>
   22824:	ldr	r0, [sp, #8]
   22828:	cmp	r0, #0
   2282c:	bls	2285c <__assert_fail@plt+0x11494>
   22830:	ldr	r0, [sp, #12]
   22834:	ldr	r1, [sp, #4]
   22838:	ldr	r2, [sp, #8]
   2283c:	sub	r2, r2, #1
   22840:	bl	1114c <memcpy@plt>
   22844:	ldr	r0, [sp, #12]
   22848:	ldr	r1, [sp, #8]
   2284c:	sub	r1, r1, #1
   22850:	add	r0, r0, r1
   22854:	movw	r1, #0
   22858:	strb	r1, [r0]
   2285c:	movw	r0, #34	; 0x22
   22860:	str	r0, [fp, #-4]
   22864:	ldr	r0, [fp, #-4]
   22868:	mov	sp, fp
   2286c:	pop	{fp, pc}
   22870:	push	{fp, lr}
   22874:	mov	fp, sp
   22878:	sub	sp, sp, #8
   2287c:	str	r0, [sp, #4]
   22880:	ldr	r0, [sp, #4]
   22884:	bl	22890 <__assert_fail@plt+0x114c8>
   22888:	mov	sp, fp
   2288c:	pop	{fp, pc}
   22890:	push	{fp, lr}
   22894:	mov	fp, sp
   22898:	sub	sp, sp, #8
   2289c:	str	r0, [sp, #4]
   228a0:	ldr	r0, [sp, #4]
   228a4:	movw	r1, #0
   228a8:	bl	112e4 <setlocale@plt>
   228ac:	str	r0, [sp]
   228b0:	ldr	r0, [sp]
   228b4:	mov	sp, fp
   228b8:	pop	{fp, pc}
   228bc:	cmp	r3, #0
   228c0:	cmpeq	r2, #0
   228c4:	bne	228e8 <__assert_fail@plt+0x11520>
   228c8:	cmp	r1, #0
   228cc:	movlt	r1, #-2147483648	; 0x80000000
   228d0:	movlt	r0, #0
   228d4:	blt	228e4 <__assert_fail@plt+0x1151c>
   228d8:	cmpeq	r0, #0
   228dc:	mvnne	r1, #-2147483648	; 0x80000000
   228e0:	mvnne	r0, #0
   228e4:	b	229cc <__assert_fail@plt+0x11604>
   228e8:	sub	sp, sp, #8
   228ec:	push	{sp, lr}
   228f0:	cmp	r1, #0
   228f4:	blt	22914 <__assert_fail@plt+0x1154c>
   228f8:	cmp	r3, #0
   228fc:	blt	22948 <__assert_fail@plt+0x11580>
   22900:	bl	229dc <__assert_fail@plt+0x11614>
   22904:	ldr	lr, [sp, #4]
   22908:	add	sp, sp, #8
   2290c:	pop	{r2, r3}
   22910:	bx	lr
   22914:	rsbs	r0, r0, #0
   22918:	sbc	r1, r1, r1, lsl #1
   2291c:	cmp	r3, #0
   22920:	blt	2296c <__assert_fail@plt+0x115a4>
   22924:	bl	229dc <__assert_fail@plt+0x11614>
   22928:	ldr	lr, [sp, #4]
   2292c:	add	sp, sp, #8
   22930:	pop	{r2, r3}
   22934:	rsbs	r0, r0, #0
   22938:	sbc	r1, r1, r1, lsl #1
   2293c:	rsbs	r2, r2, #0
   22940:	sbc	r3, r3, r3, lsl #1
   22944:	bx	lr
   22948:	rsbs	r2, r2, #0
   2294c:	sbc	r3, r3, r3, lsl #1
   22950:	bl	229dc <__assert_fail@plt+0x11614>
   22954:	ldr	lr, [sp, #4]
   22958:	add	sp, sp, #8
   2295c:	pop	{r2, r3}
   22960:	rsbs	r0, r0, #0
   22964:	sbc	r1, r1, r1, lsl #1
   22968:	bx	lr
   2296c:	rsbs	r2, r2, #0
   22970:	sbc	r3, r3, r3, lsl #1
   22974:	bl	229dc <__assert_fail@plt+0x11614>
   22978:	ldr	lr, [sp, #4]
   2297c:	add	sp, sp, #8
   22980:	pop	{r2, r3}
   22984:	rsbs	r2, r2, #0
   22988:	sbc	r3, r3, r3, lsl #1
   2298c:	bx	lr
   22990:	cmp	r3, #0
   22994:	cmpeq	r2, #0
   22998:	bne	229b0 <__assert_fail@plt+0x115e8>
   2299c:	cmp	r1, #0
   229a0:	cmpeq	r0, #0
   229a4:	mvnne	r1, #0
   229a8:	mvnne	r0, #0
   229ac:	b	229cc <__assert_fail@plt+0x11604>
   229b0:	sub	sp, sp, #8
   229b4:	push	{sp, lr}
   229b8:	bl	229dc <__assert_fail@plt+0x11614>
   229bc:	ldr	lr, [sp, #4]
   229c0:	add	sp, sp, #8
   229c4:	pop	{r2, r3}
   229c8:	bx	lr
   229cc:	push	{r1, lr}
   229d0:	mov	r0, #8
   229d4:	bl	110f8 <raise@plt>
   229d8:	pop	{r1, pc}
   229dc:	cmp	r1, r3
   229e0:	cmpeq	r0, r2
   229e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229e8:	mov	r4, r0
   229ec:	movcc	r0, #0
   229f0:	mov	r5, r1
   229f4:	ldr	lr, [sp, #36]	; 0x24
   229f8:	movcc	r1, r0
   229fc:	bcc	22af8 <__assert_fail@plt+0x11730>
   22a00:	cmp	r3, #0
   22a04:	clzeq	ip, r2
   22a08:	clzne	ip, r3
   22a0c:	addeq	ip, ip, #32
   22a10:	cmp	r5, #0
   22a14:	clzeq	r1, r4
   22a18:	addeq	r1, r1, #32
   22a1c:	clzne	r1, r5
   22a20:	sub	ip, ip, r1
   22a24:	sub	sl, ip, #32
   22a28:	lsl	r9, r3, ip
   22a2c:	rsb	fp, ip, #32
   22a30:	orr	r9, r9, r2, lsl sl
   22a34:	orr	r9, r9, r2, lsr fp
   22a38:	lsl	r8, r2, ip
   22a3c:	cmp	r5, r9
   22a40:	cmpeq	r4, r8
   22a44:	movcc	r0, #0
   22a48:	movcc	r1, r0
   22a4c:	bcc	22a68 <__assert_fail@plt+0x116a0>
   22a50:	mov	r0, #1
   22a54:	subs	r4, r4, r8
   22a58:	lsl	r1, r0, sl
   22a5c:	orr	r1, r1, r0, lsr fp
   22a60:	lsl	r0, r0, ip
   22a64:	sbc	r5, r5, r9
   22a68:	cmp	ip, #0
   22a6c:	beq	22af8 <__assert_fail@plt+0x11730>
   22a70:	lsr	r6, r8, #1
   22a74:	orr	r6, r6, r9, lsl #31
   22a78:	lsr	r7, r9, #1
   22a7c:	mov	r2, ip
   22a80:	b	22aa4 <__assert_fail@plt+0x116dc>
   22a84:	subs	r3, r4, r6
   22a88:	sbc	r8, r5, r7
   22a8c:	adds	r3, r3, r3
   22a90:	adc	r8, r8, r8
   22a94:	adds	r4, r3, #1
   22a98:	adc	r5, r8, #0
   22a9c:	subs	r2, r2, #1
   22aa0:	beq	22ac0 <__assert_fail@plt+0x116f8>
   22aa4:	cmp	r5, r7
   22aa8:	cmpeq	r4, r6
   22aac:	bcs	22a84 <__assert_fail@plt+0x116bc>
   22ab0:	adds	r4, r4, r4
   22ab4:	adc	r5, r5, r5
   22ab8:	subs	r2, r2, #1
   22abc:	bne	22aa4 <__assert_fail@plt+0x116dc>
   22ac0:	lsr	r3, r4, ip
   22ac4:	orr	r3, r3, r5, lsl fp
   22ac8:	lsr	r2, r5, ip
   22acc:	orr	r3, r3, r5, lsr sl
   22ad0:	adds	r0, r0, r4
   22ad4:	mov	r4, r3
   22ad8:	lsl	r3, r2, ip
   22adc:	orr	r3, r3, r4, lsl sl
   22ae0:	lsl	ip, r4, ip
   22ae4:	orr	r3, r3, r4, lsr fp
   22ae8:	adc	r1, r1, r5
   22aec:	subs	r0, r0, ip
   22af0:	mov	r5, r2
   22af4:	sbc	r1, r1, r3
   22af8:	cmp	lr, #0
   22afc:	strdne	r4, [lr]
   22b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22b08:	mov	r7, r0
   22b0c:	ldr	r6, [pc, #72]	; 22b5c <__assert_fail@plt+0x11794>
   22b10:	ldr	r5, [pc, #72]	; 22b60 <__assert_fail@plt+0x11798>
   22b14:	add	r6, pc, r6
   22b18:	add	r5, pc, r5
   22b1c:	sub	r6, r6, r5
   22b20:	mov	r8, r1
   22b24:	mov	r9, r2
   22b28:	bl	110b4 <fstatfs64@plt-0x20>
   22b2c:	asrs	r6, r6, #2
   22b30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22b34:	mov	r4, #0
   22b38:	add	r4, r4, #1
   22b3c:	ldr	r3, [r5], #4
   22b40:	mov	r2, r9
   22b44:	mov	r1, r8
   22b48:	mov	r0, r7
   22b4c:	blx	r3
   22b50:	cmp	r6, r4
   22b54:	bne	22b38 <__assert_fail@plt+0x11770>
   22b58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22b5c:	strdeq	r1, [r1], -r0
   22b60:	andeq	r1, r1, r8, ror #7
   22b64:	bx	lr
   22b68:	ldr	r3, [pc, #12]	; 22b7c <__assert_fail@plt+0x117b4>
   22b6c:	mov	r1, #0
   22b70:	add	r3, pc, r3
   22b74:	ldr	r2, [r3]
   22b78:	b	1129c <__cxa_atexit@plt>
   22b7c:	muleq	r1, ip, r5
   22b80:	mov	r2, r1
   22b84:	mov	r1, r0
   22b88:	mov	r0, #3
   22b8c:	b	11374 <__xstat64@plt>
   22b90:	mov	r2, r1
   22b94:	mov	r1, r0
   22b98:	mov	r0, #3
   22b9c:	b	111a0 <__fxstat64@plt>
   22ba0:	mov	r2, r1
   22ba4:	mov	r1, r0
   22ba8:	mov	r0, #3
   22bac:	b	113b0 <__lxstat64@plt>
   22bb0:	push	{lr}		; (str lr, [sp, #-4]!)
   22bb4:	sub	sp, sp, #12
   22bb8:	str	r3, [sp]
   22bbc:	mov	r3, r2
   22bc0:	mov	r2, r1
   22bc4:	mov	r1, r0
   22bc8:	mov	r0, #3
   22bcc:	bl	11188 <__fxstatat64@plt>
   22bd0:	add	sp, sp, #12
   22bd4:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00022bd8 <.fini>:
   22bd8:	push	{r3, lr}
   22bdc:	pop	{r3, pc}
