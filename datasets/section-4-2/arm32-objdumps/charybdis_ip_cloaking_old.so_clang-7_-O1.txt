
../repos/charybdis/extensions/.libs/ip_cloaking_old.so:     file format elf32-littlearm


Disassembly of section .init:

000006e8 <_init>:
 6e8:	push	{r3, lr}
 6ec:	bl	7c8 <call_weak_fn>
 6f0:	pop	{r3, pc}

Disassembly of section .plt:

000006f4 <.plt>:
 6f4:	push	{lr}		; (str lr, [sp, #-4]!)
 6f8:	ldr	lr, [pc, #4]	; 704 <.plt+0x10>
 6fc:	add	lr, pc, lr
 700:	ldr	pc, [lr, #8]!
 704:	.word	0x000108fc

00000708 <calloc@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #16, 20	; 0x10000
 710:	ldr	pc, [ip, #2300]!	; 0x8fc

00000714 <strcmp@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #16, 20	; 0x10000
 71c:	ldr	pc, [ip, #2292]!	; 0x8f4

00000720 <__cxa_finalize@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #16, 20	; 0x10000
 728:	ldr	pc, [ip, #2284]!	; 0x8ec

0000072c <rb_outofmemory@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #16, 20	; 0x10000
 734:	ldr	pc, [ip, #2276]!	; 0x8e4

00000738 <find_umode_slot@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #16, 20	; 0x10000
 740:	ldr	pc, [ip, #2268]!	; 0x8dc

00000744 <sendto_server@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #16, 20	; 0x10000
 74c:	ldr	pc, [ip, #2260]!	; 0x8d4

00000750 <__gmon_start__@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #16, 20	; 0x10000
 758:	ldr	pc, [ip, #2252]!	; 0x8cc

0000075c <sendto_one_numeric@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #16, 20	; 0x10000
 764:	ldr	pc, [ip, #2244]!	; 0x8c4

00000768 <strlen@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #16, 20	; 0x10000
 770:	ldr	pc, [ip, #2236]!	; 0x8bc

00000774 <strchr@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #16, 20	; 0x10000
 77c:	ldr	pc, [ip, #2228]!	; 0x8b4

00000780 <snprintf@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #16, 20	; 0x10000
 788:	ldr	pc, [ip, #2220]!	; 0x8ac

0000078c <change_nick_user_host@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #16, 20	; 0x10000
 794:	ldr	pc, [ip, #2212]!	; 0x8a4

00000798 <rb_strlcpy@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #16, 20	; 0x10000
 7a0:	ldr	pc, [ip, #2204]!	; 0x89c

000007a4 <irccmp@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #16, 20	; 0x10000
 7ac:	ldr	pc, [ip, #2196]!	; 0x894

000007b0 <rb_strlcat@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #16, 20	; 0x10000
 7b8:	ldr	pc, [ip, #2188]!	; 0x88c

000007bc <construct_umodebuf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #16, 20	; 0x10000
 7c4:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000007c8 <call_weak_fn>:
 7c8:	ldr	r3, [pc, #20]	; 7e4 <call_weak_fn+0x1c>
 7cc:	ldr	r2, [pc, #20]	; 7e8 <call_weak_fn+0x20>
 7d0:	add	r3, pc, r3
 7d4:	ldr	r2, [r3, r2]
 7d8:	cmp	r2, #0
 7dc:	bxeq	lr
 7e0:	b	750 <__gmon_start__@plt>
 7e4:	.word	0x00010828
 7e8:	.word	0x00000060

000007ec <deregister_tm_clones>:
 7ec:	ldr	r0, [pc, #44]	; 820 <deregister_tm_clones+0x34>
 7f0:	ldr	r3, [pc, #44]	; 824 <deregister_tm_clones+0x38>
 7f4:	add	r0, pc, r0
 7f8:	add	r3, pc, r3
 7fc:	cmp	r3, r0
 800:	ldr	r3, [pc, #32]	; 828 <deregister_tm_clones+0x3c>
 804:	add	r3, pc, r3
 808:	bxeq	lr
 80c:	ldr	r2, [pc, #24]	; 82c <deregister_tm_clones+0x40>
 810:	ldr	r3, [r3, r2]
 814:	cmp	r3, #0
 818:	bxeq	lr
 81c:	bx	r3
 820:	.word	0x000108c4
 824:	.word	0x000108c0
 828:	.word	0x000107f4
 82c:	.word	0x00000050

00000830 <register_tm_clones>:
 830:	ldr	r0, [pc, #56]	; 870 <register_tm_clones+0x40>
 834:	ldr	r3, [pc, #56]	; 874 <register_tm_clones+0x44>
 838:	add	r0, pc, r0
 83c:	add	r3, pc, r3
 840:	sub	r1, r3, r0
 844:	ldr	r3, [pc, #44]	; 878 <register_tm_clones+0x48>
 848:	asr	r1, r1, #2
 84c:	add	r3, pc, r3
 850:	add	r1, r1, r1, lsr #31
 854:	asrs	r1, r1, #1
 858:	bxeq	lr
 85c:	ldr	r2, [pc, #24]	; 87c <register_tm_clones+0x4c>
 860:	ldr	r3, [r3, r2]
 864:	cmp	r3, #0
 868:	bxeq	lr
 86c:	bx	r3
 870:	.word	0x00010880
 874:	.word	0x0001087c
 878:	.word	0x000107ac
 87c:	.word	0x00000068

00000880 <__do_global_dtors_aux>:
 880:	ldr	r3, [pc, #76]	; 8d4 <__do_global_dtors_aux+0x54>
 884:	ldr	r2, [pc, #76]	; 8d8 <__do_global_dtors_aux+0x58>
 888:	add	r3, pc, r3
 88c:	add	r2, pc, r2
 890:	ldrb	r3, [r3]
 894:	cmp	r3, #0
 898:	bxne	lr
 89c:	ldr	r3, [pc, #56]	; 8dc <__do_global_dtors_aux+0x5c>
 8a0:	push	{r4, lr}
 8a4:	ldr	r3, [r2, r3]
 8a8:	cmp	r3, #0
 8ac:	beq	8bc <__do_global_dtors_aux+0x3c>
 8b0:	ldr	r3, [pc, #40]	; 8e0 <__do_global_dtors_aux+0x60>
 8b4:	ldr	r0, [pc, r3]
 8b8:	bl	720 <__cxa_finalize@plt>
 8bc:	bl	7ec <deregister_tm_clones>
 8c0:	ldr	r3, [pc, #28]	; 8e4 <__do_global_dtors_aux+0x64>
 8c4:	mov	r2, #1
 8c8:	add	r3, pc, r3
 8cc:	strb	r2, [r3]
 8d0:	pop	{r4, pc}
 8d4:	.word	0x00010830
 8d8:	.word	0x0001076c
 8dc:	.word	0x0000004c
 8e0:	.word	0x000107b4
 8e4:	.word	0x000107f0

000008e8 <frame_dummy>:
 8e8:	b	830 <register_tm_clones>

000008ec <check_umode_change>:
 8ec:	push	{r4, r5, r6, r7, fp, lr}
 8f0:	add	fp, sp, #16
 8f4:	ldr	r4, [r0]
 8f8:	ldr	r1, [r4, #64]	; 0x40
 8fc:	tst	r1, #8192	; 0x2000
 900:	beq	998 <check_umode_change+0xac>
 904:	ldrh	r2, [r4, #80]	; 0x50
 908:	cmp	r2, #64	; 0x40
 90c:	bne	998 <check_umode_change+0xac>
 910:	ldr	r0, [r0, #4]
 914:	ldr	r6, [r4, #56]	; 0x38
 918:	eor	r0, r6, r0
 91c:	ldr	r2, [pc, #204]	; 9f0 <check_umode_change+0x104>
 920:	ldr	r2, [pc, r2]
 924:	ldr	r7, [r2, #416]	; 0x1a0
 928:	tst	r0, r7
 92c:	beq	998 <check_umode_change+0xac>
 930:	tst	r7, r6
 934:	beq	978 <check_umode_change+0x8c>
 938:	tst	r1, #16777216	; 0x1000000
 93c:	bne	96c <check_umode_change+0x80>
 940:	ldr	r0, [r4, #432]	; 0x1b0
 944:	ldr	r5, [r0, #432]	; 0x1b0
 948:	cmp	r5, #0
 94c:	beq	96c <check_umode_change+0x80>
 950:	tst	r1, #131072	; 0x20000
 954:	beq	9ac <check_umode_change+0xc0>
 958:	add	r0, r4, #163	; 0xa3
 95c:	mov	r1, r5
 960:	bl	714 <strcmp@plt>
 964:	cmp	r0, #0
 968:	beq	9ac <check_umode_change+0xc0>
 96c:	bic	r0, r6, r7
 970:	str	r0, [r4, #56]	; 0x38
 974:	pop	{r4, r5, r6, r7, fp, pc}
 978:	ldr	r0, [r4, #432]	; 0x1b0
 97c:	ldr	r1, [r0, #432]	; 0x1b0
 980:	cmp	r1, #0
 984:	popeq	{r4, r5, r6, r7, fp, pc}
 988:	add	r0, r4, #163	; 0xa3
 98c:	bl	714 <strcmp@plt>
 990:	cmp	r0, #0
 994:	beq	99c <check_umode_change+0xb0>
 998:	pop	{r4, r5, r6, r7, fp, pc}
 99c:	add	r1, r4, #227	; 0xe3
 9a0:	mov	r0, r4
 9a4:	pop	{r4, r5, r6, r7, fp, lr}
 9a8:	b	b2c <distribute_hostchange>
 9ac:	add	r6, r4, #163	; 0xa3
 9b0:	mov	r0, r6
 9b4:	mov	r1, r5
 9b8:	bl	714 <strcmp@plt>
 9bc:	cmp	r0, #0
 9c0:	beq	9d4 <check_umode_change+0xe8>
 9c4:	mov	r0, r4
 9c8:	mov	r1, r5
 9cc:	pop	{r4, r5, r6, r7, fp, lr}
 9d0:	b	b2c <distribute_hostchange>
 9d4:	ldr	r2, [pc, #24]	; 9f4 <check_umode_change+0x108>
 9d8:	add	r2, pc, r2
 9dc:	mov	r0, r4
 9e0:	mov	r1, #396	; 0x18c
 9e4:	mov	r3, r6
 9e8:	pop	{r4, r5, r6, r7, fp, lr}
 9ec:	b	75c <sendto_one_numeric@plt>
 9f0:	.word	0x00010734
 9f4:	.word	0x0000045d

000009f8 <check_new_user>:
 9f8:	push	{r4, r5, r6, sl, fp, lr}
 9fc:	add	fp, sp, #16
 a00:	mov	r4, r0
 a04:	ldrb	r0, [r0, #67]	; 0x43
 a08:	tst	r0, #1
 a0c:	bne	ac4 <check_new_user+0xcc>
 a10:	add	r6, r4, #64	; 0x40
 a14:	bl	ca4 <rb_malloc>
 a18:	ldr	r1, [r4, #432]	; 0x1b0
 a1c:	str	r0, [r1, #432]	; 0x1b0
 a20:	movw	r0, #291	; 0x123
 a24:	add	r1, r4, r0
 a28:	add	r5, r4, #227	; 0xe3
 a2c:	mov	r0, r5
 a30:	bl	7a4 <irccmp@plt>
 a34:	ldr	r1, [r4, #432]	; 0x1b0
 a38:	ldr	r1, [r1, #432]	; 0x1b0
 a3c:	cmp	r0, #0
 a40:	mov	r0, r5
 a44:	movne	r2, #0
 a48:	moveq	r2, #1
 a4c:	bl	cc4 <do_host_cloak>
 a50:	ldrb	r0, [r6, #2]
 a54:	tst	r0, #2
 a58:	beq	a74 <check_new_user+0x7c>
 a5c:	ldr	r0, [r4, #56]	; 0x38
 a60:	ldr	r1, [pc, #124]	; ae4 <check_new_user+0xec>
 a64:	ldr	r1, [pc, r1]
 a68:	ldr	r1, [r1, #416]	; 0x1a0
 a6c:	bic	r0, r0, r1
 a70:	str	r0, [r4, #56]	; 0x38
 a74:	ldr	r0, [r4, #56]	; 0x38
 a78:	ldr	r1, [pc, #104]	; ae8 <check_new_user+0xf0>
 a7c:	ldr	r1, [pc, r1]
 a80:	ldr	r1, [r1, #416]	; 0x1a0
 a84:	tst	r1, r0
 a88:	popeq	{r4, r5, r6, sl, fp, pc}
 a8c:	ldr	r0, [r4, #432]	; 0x1b0
 a90:	ldr	r1, [r0, #432]	; 0x1b0
 a94:	add	r4, r4, #163	; 0xa3
 a98:	mov	r0, r4
 a9c:	mov	r2, #64	; 0x40
 aa0:	bl	798 <rb_strlcpy@plt>
 aa4:	mov	r0, r4
 aa8:	mov	r1, r5
 aac:	bl	7a4 <irccmp@plt>
 ab0:	cmp	r0, #0
 ab4:	ldrne	r0, [r6]
 ab8:	orrne	r0, r0, #131072	; 0x20000
 abc:	strne	r0, [r6]
 ac0:	pop	{r4, r5, r6, sl, fp, pc}
 ac4:	ldr	r0, [r4, #56]	; 0x38
 ac8:	ldr	r1, [pc, #16]	; ae0 <check_new_user+0xe8>
 acc:	ldr	r1, [pc, r1]
 ad0:	ldr	r1, [r1, #416]	; 0x1a0
 ad4:	bic	r0, r0, r1
 ad8:	str	r0, [r4, #56]	; 0x38
 adc:	pop	{r4, r5, r6, sl, fp, pc}
 ae0:	.word	0x00010588
 ae4:	.word	0x000105f0
 ae8:	.word	0x000105d8

00000aec <_modinit>:
 aec:	push	{fp, lr}
 af0:	mov	fp, sp
 af4:	bl	738 <find_umode_slot@plt>
 af8:	ldr	r1, [pc, #16]	; b10 <_modinit+0x24>
 afc:	ldr	r1, [pc, r1]
 b00:	str	r0, [r1, #416]	; 0x1a0
 b04:	bl	7bc <construct_umodebuf@plt>
 b08:	mov	r0, #0
 b0c:	pop	{fp, pc}
 b10:	.word	0x00010558

00000b14 <_moddeinit>:
 b14:	ldr	r0, [pc, #12]	; b28 <_moddeinit+0x14>
 b18:	ldr	r0, [pc, r0]
 b1c:	mov	r1, #0
 b20:	str	r1, [r0, #416]	; 0x1a0
 b24:	b	7bc <construct_umodebuf@plt>
 b28:	.word	0x0001053c

00000b2c <distribute_hostchange>:
 b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b30:	add	fp, sp, #28
 b34:	sub	sp, sp, #20
 b38:	mov	r5, r1
 b3c:	mov	r7, r0
 b40:	add	r0, r0, #227	; 0xe3
 b44:	str	r0, [sp, #16]
 b48:	cmp	r0, r1
 b4c:	beq	b5c <distribute_hostchange+0x30>
 b50:	ldr	r2, [pc, #296]	; c80 <distribute_hostchange+0x154>
 b54:	add	r2, pc, r2
 b58:	b	b64 <distribute_hostchange+0x38>
 b5c:	ldr	r2, [pc, #288]	; c84 <distribute_hostchange+0x158>
 b60:	add	r2, pc, r2
 b64:	mov	r0, r7
 b68:	mov	r1, #396	; 0x18c
 b6c:	mov	r3, r5
 b70:	bl	75c <sendto_one_numeric@plt>
 b74:	mov	r4, r7
 b78:	ldrb	r0, [r4, #396]!	; 0x18c
 b7c:	add	r9, r7, #88	; 0x58
 b80:	cmp	r0, #0
 b84:	mov	r0, r4
 b88:	moveq	r0, r9
 b8c:	ldr	r1, [pc, #244]	; c88 <distribute_hostchange+0x15c>
 b90:	ldr	r1, [pc, r1]
 b94:	ldr	r1, [r1]
 b98:	ldr	r6, [pc, #236]	; c8c <distribute_hostchange+0x160>
 b9c:	ldr	r6, [pc, r6]
 ba0:	ldrb	r2, [r6, #396]!	; 0x18c
 ba4:	ldr	r8, [pc, #228]	; c90 <distribute_hostchange+0x164>
 ba8:	ldr	r8, [pc, r8]
 bac:	ldr	r3, [r8]
 bb0:	ldr	ip, [pc, #220]	; c94 <distribute_hostchange+0x168>
 bb4:	add	ip, pc, ip
 bb8:	sub	sl, r6, #308	; 0x134
 bbc:	cmp	r2, #0
 bc0:	mov	r2, r6
 bc4:	moveq	r2, sl
 bc8:	str	ip, [sp]
 bcc:	str	r2, [sp, #4]
 bd0:	str	r0, [sp, #8]
 bd4:	str	r5, [sp, #12]
 bd8:	orr	r2, r1, r3
 bdc:	mov	r0, #0
 be0:	mov	r1, #0
 be4:	mov	r3, #0
 be8:	bl	744 <sendto_server@plt>
 bec:	ldr	r3, [r8]
 bf0:	ldr	r0, [pc, #160]	; c98 <distribute_hostchange+0x16c>
 bf4:	ldr	r0, [pc, r0]
 bf8:	ldr	r2, [r0]
 bfc:	ldrb	r0, [r6]
 c00:	ldrb	r1, [r4]
 c04:	ldr	ip, [pc, #144]	; c9c <distribute_hostchange+0x170>
 c08:	add	ip, pc, ip
 c0c:	cmp	r1, #0
 c10:	moveq	r4, r9
 c14:	cmp	r0, #0
 c18:	moveq	r6, sl
 c1c:	str	ip, [sp]
 c20:	str	r6, [sp, #4]
 c24:	str	r4, [sp, #8]
 c28:	str	r5, [sp, #12]
 c2c:	mov	r0, #0
 c30:	mov	r1, #0
 c34:	bl	744 <sendto_server@plt>
 c38:	ldr	r0, [pc, #96]	; ca0 <distribute_hostchange+0x174>
 c3c:	add	r0, pc, r0
 c40:	mov	r1, #0
 c44:	str	r1, [sp]
 c48:	str	r0, [sp, #4]
 c4c:	add	r2, r7, #152	; 0x98
 c50:	mov	r0, r7
 c54:	mov	r1, r9
 c58:	mov	r3, r5
 c5c:	bl	78c <change_nick_user_host@plt>
 c60:	ldr	r0, [r7, #64]	; 0x40
 c64:	bic	r1, r0, #131072	; 0x20000
 c68:	ldr	r2, [sp, #16]
 c6c:	cmp	r2, r5
 c70:	orrne	r1, r0, #131072	; 0x20000
 c74:	str	r1, [r7, #64]	; 0x40
 c78:	sub	sp, fp, #28
 c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c80:	.word	0x000002e1
 c84:	.word	0x000002f1
 c88:	.word	0x000104bc
 c8c:	.word	0x000104c8
 c90:	.word	0x000104b4
 c94:	.word	0x000002b0
 c98:	.word	0x00010458
 c9c:	.word	0x0000026f
 ca0:	.word	0x00000256

00000ca4 <rb_malloc>:
 ca4:	push	{fp, lr}
 ca8:	mov	fp, sp
 cac:	mov	r0, #1
 cb0:	mov	r1, #64	; 0x40
 cb4:	bl	708 <calloc@plt>
 cb8:	cmp	r0, #0
 cbc:	popne	{fp, pc}
 cc0:	bl	72c <rb_outofmemory@plt>

00000cc4 <do_host_cloak>:
 cc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 cc8:	add	fp, sp, #24
 ccc:	sub	sp, sp, #8
 cd0:	mov	r6, r2
 cd4:	mov	r8, r1
 cd8:	mov	r5, r0
 cdc:	bl	768 <strlen@plt>
 ce0:	subs	r4, r0, #2
 ce4:	mov	r1, #1
 ce8:	mov	r3, #1
 cec:	mov	r2, #1
 cf0:	beq	d18 <do_host_cloak+0x54>
 cf4:	mov	r2, #1
 cf8:	mov	r3, #0
 cfc:	ldrb	r7, [r5, r3]
 d00:	mul	r2, r2, r7
 d04:	add	r3, r3, #2
 d08:	cmp	r3, r4
 d0c:	bcc	cfc <do_host_cloak+0x38>
 d10:	subs	r3, r0, #1
 d14:	beq	d2c <do_host_cloak+0x68>
 d18:	ldrb	r0, [r5, r3]
 d1c:	mul	r1, r1, r0
 d20:	subs	r3, r3, #2
 d24:	bne	d18 <do_host_cloak+0x54>
 d28:	b	d30 <do_host_cloak+0x6c>
 d2c:	mov	r1, #1
 d30:	movw	r3, #24317	; 0x5efd
 d34:	movt	r3, #26948	; 0x6944
 d38:	umull	r0, r7, r1, r3
 d3c:	add	r0, r2, r7, lsr #27
 d40:	umull	r2, r3, r0, r3
 d44:	add	r3, r1, r3, lsr #27
 d48:	ldr	r1, [pc, #184]	; e08 <do_host_cloak+0x144>
 d4c:	ldr	r1, [pc, r1]
 d50:	ldr	r4, [r1, #12]
 d54:	cmp	r6, #0
 d58:	beq	d7c <do_host_cloak+0xb8>
 d5c:	stm	sp, {r0, r4}
 d60:	ldr	r2, [pc, #172]	; e14 <do_host_cloak+0x150>
 d64:	add	r2, pc, r2
 d68:	mov	r0, r8
 d6c:	mov	r1, #63	; 0x3f
 d70:	bl	780 <snprintf@plt>
 d74:	sub	sp, fp, #24
 d78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 d7c:	str	r3, [sp]
 d80:	str	r0, [sp, #4]
 d84:	ldr	r2, [pc, #128]	; e0c <do_host_cloak+0x148>
 d88:	add	r2, pc, r2
 d8c:	mov	r0, r8
 d90:	mov	r1, #63	; 0x3f
 d94:	mov	r3, r4
 d98:	bl	780 <snprintf@plt>
 d9c:	mov	r0, r8
 da0:	bl	768 <strlen@plt>
 da4:	mov	r6, r0
 da8:	mov	r0, r5
 dac:	mov	r1, #46	; 0x2e
 db0:	bl	774 <strchr@plt>
 db4:	mov	r1, r0
 db8:	ldr	r0, [pc, #80]	; e10 <do_host_cloak+0x14c>
 dbc:	add	r0, pc, r0
 dc0:	cmp	r1, #0
 dc4:	movne	r0, r1
 dc8:	mov	r5, r0
 dcc:	bl	768 <strlen@plt>
 dd0:	add	r0, r0, r6
 dd4:	cmp	r0, #63	; 0x3f
 dd8:	bcc	df0 <do_host_cloak+0x12c>
 ddc:	add	r0, r5, #1
 de0:	mov	r1, #46	; 0x2e
 de4:	bl	774 <strchr@plt>
 de8:	cmp	r0, #0
 dec:	bne	dc8 <do_host_cloak+0x104>
 df0:	mov	r0, r8
 df4:	mov	r1, r5
 df8:	mov	r2, #63	; 0x3f
 dfc:	sub	sp, fp, #24
 e00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 e04:	b	7b0 <rb_strlcat@plt>
 e08:	.word	0x00010304
 e0c:	.word	0x00000118
 e10:	.word	0x000000ec
 e14:	.word	0x00000146

Disassembly of section .fini:

00000e18 <_fini>:
 e18:	push	{r3, lr}
 e1c:	pop	{r3, pc}
