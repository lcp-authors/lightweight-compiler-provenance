
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

000113fc <.init>:
   113fc:	push	{r3, lr}
   11400:	bl	117dc <__assert_fail@plt+0x48>
   11404:	pop	{r3, pc}

Disassembly of section .plt:

00011408 <fdopen@plt-0x14>:
   11408:	push	{lr}		; (str lr, [sp, #-4]!)
   1140c:	ldr	lr, [pc, #4]	; 11418 <fdopen@plt-0x4>
   11410:	add	lr, pc, lr
   11414:	ldr	pc, [lr, #8]!
   11418:	andeq	fp, r1, r8, ror #23

0001141c <fdopen@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #110592	; 0x1b000
   11424:	ldr	pc, [ip, #3048]!	; 0xbe8

00011428 <calloc@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #110592	; 0x1b000
   11430:	ldr	pc, [ip, #3040]!	; 0xbe0

00011434 <fputs_unlocked@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #110592	; 0x1b000
   1143c:	ldr	pc, [ip, #3032]!	; 0xbd8

00011440 <strcmp@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #110592	; 0x1b000
   11448:	ldr	pc, [ip, #3024]!	; 0xbd0

0001144c <strtol@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #110592	; 0x1b000
   11454:	ldr	pc, [ip, #3016]!	; 0xbc8

00011458 <printf@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #110592	; 0x1b000
   11460:	ldr	pc, [ip, #3008]!	; 0xbc0

00011464 <read@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #110592	; 0x1b000
   1146c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011470 <longjmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #110592	; 0x1b000
   11478:	ldr	pc, [ip, #2992]!	; 0xbb0

0001147c <_setjmp@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #110592	; 0x1b000
   11484:	ldr	pc, [ip, #2984]!	; 0xba8

00011488 <memmove@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #110592	; 0x1b000
   11490:	ldr	pc, [ip, #2976]!	; 0xba0

00011494 <strchrnul@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #110592	; 0x1b000
   1149c:	ldr	pc, [ip, #2968]!	; 0xb98

000114a0 <free@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #110592	; 0x1b000
   114a8:	ldr	pc, [ip, #2960]!	; 0xb90

000114ac <gai_strerror@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #110592	; 0x1b000
   114b4:	ldr	pc, [ip, #2952]!	; 0xb88

000114b8 <fgets@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #110592	; 0x1b000
   114c0:	ldr	pc, [ip, #2944]!	; 0xb80

000114c4 <strndup@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #110592	; 0x1b000
   114cc:	ldr	pc, [ip, #2936]!	; 0xb78

000114d0 <memcpy@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #110592	; 0x1b000
   114d8:	ldr	pc, [ip, #2928]!	; 0xb70

000114dc <signal@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #110592	; 0x1b000
   114e4:	ldr	pc, [ip, #2920]!	; 0xb68

000114e8 <fwrite_unlocked@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #110592	; 0x1b000
   114f0:	ldr	pc, [ip, #2912]!	; 0xb60

000114f4 <sleep@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #110592	; 0x1b000
   114fc:	ldr	pc, [ip, #2904]!	; 0xb58

00011500 <recvfrom@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #110592	; 0x1b000
   11508:	ldr	pc, [ip, #2896]!	; 0xb50

0001150c <alarm@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #110592	; 0x1b000
   11514:	ldr	pc, [ip, #2888]!	; 0xb48

00011518 <realloc@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #110592	; 0x1b000
   11520:	ldr	pc, [ip, #2880]!	; 0xb40

00011524 <strcasecmp@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #110592	; 0x1b000
   1152c:	ldr	pc, [ip, #2872]!	; 0xb38

00011530 <funlockfile@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #110592	; 0x1b000
   11538:	ldr	pc, [ip, #2864]!	; 0xb30

0001153c <perror@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #110592	; 0x1b000
   11544:	ldr	pc, [ip, #2856]!	; 0xb28

00011548 <fwrite@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #110592	; 0x1b000
   11550:	ldr	pc, [ip, #2848]!	; 0xb20

00011554 <ioctl@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #110592	; 0x1b000
   1155c:	ldr	pc, [ip, #2840]!	; 0xb18

00011560 <strcpy@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #110592	; 0x1b000
   11568:	ldr	pc, [ip, #2832]!	; 0xb10

0001156c <gettimeofday@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #110592	; 0x1b000
   11574:	ldr	pc, [ip, #2824]!	; 0xb08

00011578 <creat64@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #110592	; 0x1b000
   11580:	ldr	pc, [ip, #2816]!	; 0xb00

00011584 <error@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #110592	; 0x1b000
   1158c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011590 <open64@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #110592	; 0x1b000
   11598:	ldr	pc, [ip, #2800]!	; 0xaf0

0001159c <getenv@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #110592	; 0x1b000
   115a4:	ldr	pc, [ip, #2792]!	; 0xae8

000115a8 <puts@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #110592	; 0x1b000
   115b0:	ldr	pc, [ip, #2784]!	; 0xae0

000115b4 <malloc@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #110592	; 0x1b000
   115bc:	ldr	pc, [ip, #2776]!	; 0xad8

000115c0 <__libc_start_main@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #110592	; 0x1b000
   115c8:	ldr	pc, [ip, #2768]!	; 0xad0

000115cc <strerror@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #110592	; 0x1b000
   115d4:	ldr	pc, [ip, #2760]!	; 0xac8

000115d8 <__ctype_tolower_loc@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #110592	; 0x1b000
   115e0:	ldr	pc, [ip, #2752]!	; 0xac0

000115e4 <__gmon_start__@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #110592	; 0x1b000
   115ec:	ldr	pc, [ip, #2744]!	; 0xab8

000115f0 <__ctype_b_loc@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #110592	; 0x1b000
   115f8:	ldr	pc, [ip, #2736]!	; 0xab0

000115fc <exit@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #110592	; 0x1b000
   11604:	ldr	pc, [ip, #2728]!	; 0xaa8

00011608 <feof@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #110592	; 0x1b000
   11610:	ldr	pc, [ip, #2720]!	; 0xaa0

00011614 <strlen@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #110592	; 0x1b000
   1161c:	ldr	pc, [ip, #2712]!	; 0xa98

00011620 <strchr@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #110592	; 0x1b000
   11628:	ldr	pc, [ip, #2704]!	; 0xa90

0001162c <fprintf@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #110592	; 0x1b000
   11634:	ldr	pc, [ip, #2696]!	; 0xa88

00011638 <__errno_location@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #110592	; 0x1b000
   11640:	ldr	pc, [ip, #2688]!	; 0xa80

00011644 <getservbyname@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #110592	; 0x1b000
   1164c:	ldr	pc, [ip, #2680]!	; 0xa78

00011650 <strerror_r@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #110592	; 0x1b000
   11658:	ldr	pc, [ip, #2672]!	; 0xa70

0001165c <bind@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #110592	; 0x1b000
   11664:	ldr	pc, [ip, #2664]!	; 0xa68

00011668 <memset@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #110592	; 0x1b000
   11670:	ldr	pc, [ip, #2656]!	; 0xa60

00011674 <strncpy@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #110592	; 0x1b000
   1167c:	ldr	pc, [ip, #2648]!	; 0xa58

00011680 <write@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #110592	; 0x1b000
   11688:	ldr	pc, [ip, #2640]!	; 0xa50

0001168c <fileno@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #110592	; 0x1b000
   11694:	ldr	pc, [ip, #2632]!	; 0xa48

00011698 <memchr@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #110592	; 0x1b000
   116a0:	ldr	pc, [ip, #2624]!	; 0xa40

000116a4 <fclose@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #110592	; 0x1b000
   116ac:	ldr	pc, [ip, #2616]!	; 0xa38

000116b0 <fseeko64@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #110592	; 0x1b000
   116b8:	ldr	pc, [ip, #2608]!	; 0xa30

000116bc <sendto@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #110592	; 0x1b000
   116c4:	ldr	pc, [ip, #2600]!	; 0xa28

000116c8 <__overflow@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #110592	; 0x1b000
   116d0:	ldr	pc, [ip, #2592]!	; 0xa20

000116d4 <setlocale@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #110592	; 0x1b000
   116dc:	ldr	pc, [ip, #2584]!	; 0xa18

000116e0 <strrchr@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #110592	; 0x1b000
   116e8:	ldr	pc, [ip, #2576]!	; 0xa10

000116ec <vfprintf@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #110592	; 0x1b000
   116f4:	ldr	pc, [ip, #2568]!	; 0xa08

000116f8 <fputc@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #110592	; 0x1b000
   11700:	ldr	pc, [ip, #2560]!	; 0xa00

00011704 <putc@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #110592	; 0x1b000
   1170c:	ldr	pc, [ip, #2552]!	; 0x9f8

00011710 <flockfile@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #110592	; 0x1b000
   11718:	ldr	pc, [ip, #2544]!	; 0x9f0

0001171c <vsnprintf@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #110592	; 0x1b000
   11724:	ldr	pc, [ip, #2536]!	; 0x9e8

00011728 <qsort@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #110592	; 0x1b000
   11730:	ldr	pc, [ip, #2528]!	; 0x9e0

00011734 <freeaddrinfo@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #110592	; 0x1b000
   1173c:	ldr	pc, [ip, #2520]!	; 0x9d8

00011740 <getaddrinfo@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #110592	; 0x1b000
   11748:	ldr	pc, [ip, #2512]!	; 0x9d0

0001174c <socket@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #110592	; 0x1b000
   11754:	ldr	pc, [ip, #2504]!	; 0x9c8

00011758 <isatty@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #110592	; 0x1b000
   11760:	ldr	pc, [ip, #2496]!	; 0x9c0

00011764 <strncmp@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #110592	; 0x1b000
   1176c:	ldr	pc, [ip, #2488]!	; 0x9b8

00011770 <abort@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #110592	; 0x1b000
   11778:	ldr	pc, [ip, #2480]!	; 0x9b0

0001177c <getc@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #110592	; 0x1b000
   11784:	ldr	pc, [ip, #2472]!	; 0x9a8

00011788 <close@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #110592	; 0x1b000
   11790:	ldr	pc, [ip, #2464]!	; 0x9a0

00011794 <__assert_fail@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #110592	; 0x1b000
   1179c:	ldr	pc, [ip, #2456]!	; 0x998

Disassembly of section .text:

000117a0 <argp_help@@Base-0x2cd4>:
   117a0:	mov	fp, #0
   117a4:	mov	lr, #0
   117a8:	pop	{r1}		; (ldr r1, [sp], #4)
   117ac:	mov	r2, sp
   117b0:	push	{r2}		; (str r2, [sp, #-4]!)
   117b4:	push	{r0}		; (str r0, [sp, #-4]!)
   117b8:	ldr	ip, [pc, #16]	; 117d0 <__assert_fail@plt+0x3c>
   117bc:	push	{ip}		; (str ip, [sp, #-4]!)
   117c0:	ldr	r0, [pc, #12]	; 117d4 <__assert_fail@plt+0x40>
   117c4:	ldr	r3, [pc, #12]	; 117d8 <__assert_fail@plt+0x44>
   117c8:	bl	115c0 <__libc_start_main@plt>
   117cc:	bl	11770 <abort@plt>
   117d0:	andeq	fp, r1, r4, lsl #5
   117d4:	andeq	r2, r1, r8, lsr #25
   117d8:	andeq	fp, r1, r4, lsr #4
   117dc:	ldr	r3, [pc, #20]	; 117f8 <__assert_fail@plt+0x64>
   117e0:	ldr	r2, [pc, #20]	; 117fc <__assert_fail@plt+0x68>
   117e4:	add	r3, pc, r3
   117e8:	ldr	r2, [r3, r2]
   117ec:	cmp	r2, #0
   117f0:	bxeq	lr
   117f4:	b	115e4 <__gmon_start__@plt>
   117f8:	andeq	fp, r1, r4, lsl r8
   117fc:	andeq	r0, r0, r8, lsr r1
   11800:	ldr	r0, [pc, #24]	; 11820 <__assert_fail@plt+0x8c>
   11804:	ldr	r3, [pc, #24]	; 11824 <__assert_fail@plt+0x90>
   11808:	cmp	r3, r0
   1180c:	bxeq	lr
   11810:	ldr	r3, [pc, #16]	; 11828 <__assert_fail@plt+0x94>
   11814:	cmp	r3, #0
   11818:	bxeq	lr
   1181c:	bx	r3
   11820:	andeq	sp, r2, r4, lsr r4
   11824:	andeq	sp, r2, r4, lsr r4
   11828:	andeq	r0, r0, r0
   1182c:	ldr	r0, [pc, #36]	; 11858 <__assert_fail@plt+0xc4>
   11830:	ldr	r1, [pc, #36]	; 1185c <__assert_fail@plt+0xc8>
   11834:	sub	r1, r1, r0
   11838:	asr	r1, r1, #2
   1183c:	add	r1, r1, r1, lsr #31
   11840:	asrs	r1, r1, #1
   11844:	bxeq	lr
   11848:	ldr	r3, [pc, #16]	; 11860 <__assert_fail@plt+0xcc>
   1184c:	cmp	r3, #0
   11850:	bxeq	lr
   11854:	bx	r3
   11858:	andeq	sp, r2, r4, lsr r4
   1185c:	andeq	sp, r2, r4, lsr r4
   11860:	andeq	r0, r0, r0
   11864:	push	{r4, lr}
   11868:	ldr	r4, [pc, #24]	; 11888 <__assert_fail@plt+0xf4>
   1186c:	ldrb	r3, [r4]
   11870:	cmp	r3, #0
   11874:	popne	{r4, pc}
   11878:	bl	11800 <__assert_fail@plt+0x6c>
   1187c:	mov	r3, #1
   11880:	strb	r3, [r4]
   11884:	pop	{r4, pc}
   11888:	andeq	sp, r2, r0, asr r4
   1188c:	b	1182c <__assert_fail@plt+0x98>
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11894:	add	fp, sp, #28
   11898:	sub	sp, sp, #4
   1189c:	mov	sl, r1
   118a0:	cmp	r0, #1
   118a4:	bgt	119d0 <__assert_fail@plt+0x23c>
   118a8:	movw	r5, #56028	; 0xdadc
   118ac:	movw	r0, #25445	; 0x6365
   118b0:	movt	r5, #2
   118b4:	movt	r0, #116	; 0x74
   118b8:	str	r0, [r5, #4]
   118bc:	movw	r0, #28483	; 0x6f43
   118c0:	movt	r0, #28270	; 0x6e6e
   118c4:	str	r0, [r5]
   118c8:	mov	r0, r5
   118cc:	bl	11614 <strlen@plt>
   118d0:	add	r0, r5, r0
   118d4:	mov	r1, #32
   118d8:	strh	r1, [r0]
   118dc:	movw	r0, #47571	; 0xb9d3
   118e0:	movw	r1, #45827	; 0xb303
   118e4:	movt	r0, #1
   118e8:	movt	r1, #1
   118ec:	bl	11458 <printf@plt>
   118f0:	movw	r0, #54344	; 0xd448
   118f4:	mov	r1, #192	; 0xc0
   118f8:	movt	r0, #2
   118fc:	ldr	r2, [r0]
   11900:	add	r0, r5, #8
   11904:	bl	114b8 <fgets@plt>
   11908:	cmp	r0, #0
   1190c:	beq	11a4c <__assert_fail@plt+0x2b8>
   11910:	ldrb	r7, [r5]
   11914:	movw	sl, #55496	; 0xd8c8
   11918:	movw	r9, #55988	; 0xdab4
   1191c:	mov	r8, #0
   11920:	mov	r6, #0
   11924:	movt	sl, #2
   11928:	movt	r9, #2
   1192c:	mov	r4, sl
   11930:	str	r8, [r9]
   11934:	cmp	r7, #0
   11938:	beq	119c8 <__assert_fail@plt+0x234>
   1193c:	movw	r4, #55496	; 0xd8c8
   11940:	movt	r4, #2
   11944:	bl	115f0 <__ctype_b_loc@plt>
   11948:	mov	r1, #0
   1194c:	ldr	r2, [r0]
   11950:	uxtb	r3, r7
   11954:	add	r3, r2, r3, lsl #1
   11958:	ldrb	r3, [r3, #1]
   1195c:	tst	r3, #32
   11960:	beq	11980 <__assert_fail@plt+0x1ec>
   11964:	ldrb	r3, [r5, #1]!
   11968:	add	r7, r2, r3, lsl #1
   1196c:	ldrb	r7, [r7, #1]
   11970:	tst	r7, #32
   11974:	bne	11964 <__assert_fail@plt+0x1d0>
   11978:	cmp	r3, #0
   1197c:	beq	119c4 <__assert_fail@plt+0x230>
   11980:	ldr	r2, [r9]
   11984:	str	r5, [r4], #4
   11988:	add	r6, r2, #1
   1198c:	str	r6, [r9]
   11990:	ldrb	r2, [r5]
   11994:	cmp	r2, #0
   11998:	beq	119c8 <__assert_fail@plt+0x234>
   1199c:	ldr	r3, [r0]
   119a0:	add	r5, r5, #1
   119a4:	add	r2, r3, r2, lsl #1
   119a8:	ldrb	r2, [r2, #1]
   119ac:	tst	r2, #32
   119b0:	beq	11990 <__assert_fail@plt+0x1fc>
   119b4:	strb	r1, [r5, #-1]
   119b8:	ldrb	r7, [r5]
   119bc:	cmp	r7, #0
   119c0:	bne	1194c <__assert_fail@plt+0x1b8>
   119c4:	ldr	r6, [r9]
   119c8:	str	r8, [r4]
   119cc:	b	119d4 <__assert_fail@plt+0x240>
   119d0:	mov	r6, r0
   119d4:	bic	r0, r6, #1
   119d8:	cmp	r0, #2
   119dc:	bne	11a44 <__assert_fail@plt+0x2b0>
   119e0:	ldr	r0, [sl, #4]
   119e4:	bl	130b0 <__assert_fail@plt+0x191c>
   119e8:	cmn	r0, #1
   119ec:	beq	11ac4 <__assert_fail@plt+0x330>
   119f0:	cmp	r6, #3
   119f4:	bne	11a6c <__assert_fail@plt+0x2d8>
   119f8:	ldr	r0, [sl, #8]
   119fc:	mov	r1, #0
   11a00:	mov	r2, #10
   11a04:	mov	r4, #0
   11a08:	bl	1144c <strtol@plt>
   11a0c:	movw	r1, #54360	; 0xd458
   11a10:	cmp	r0, #0
   11a14:	movt	r1, #2
   11a18:	str	r0, [r1]
   11a1c:	bgt	11ab4 <__assert_fail@plt+0x320>
   11a20:	ldr	r1, [sl, #8]
   11a24:	movw	r0, #45861	; 0xb325
   11a28:	movt	r0, #1
   11a2c:	bl	11458 <printf@plt>
   11a30:	movw	r0, #54368	; 0xd460
   11a34:	movt	r0, #2
   11a38:	strb	r4, [r0]
   11a3c:	sub	sp, fp, #28
   11a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a44:	ldr	r1, [sl]
   11a48:	b	11a58 <__assert_fail@plt+0x2c4>
   11a4c:	movw	r1, #45819	; 0xb2fb
   11a50:	movt	r1, #1
   11a54:	str	r1, [sl]
   11a58:	movw	r0, #45833	; 0xb309
   11a5c:	movt	r0, #1
   11a60:	sub	sp, fp, #28
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a68:	b	11458 <printf@plt>
   11a6c:	movw	r0, #45716	; 0xb294
   11a70:	movw	r1, #45815	; 0xb2f7
   11a74:	movt	r0, #1
   11a78:	movt	r1, #1
   11a7c:	bl	11644 <getservbyname@plt>
   11a80:	mov	r4, r0
   11a84:	cmp	r0, #0
   11a88:	bne	11aa0 <__assert_fail@plt+0x30c>
   11a8c:	movw	r2, #45882	; 0xb33a
   11a90:	mov	r0, #1
   11a94:	mov	r1, #0
   11a98:	movt	r2, #1
   11a9c:	bl	11584 <error@plt>
   11aa0:	ldrh	r0, [r4, #8]
   11aa4:	movw	r1, #54360	; 0xd458
   11aa8:	movt	r1, #2
   11aac:	rev16	r0, r0
   11ab0:	str	r0, [r1]
   11ab4:	movw	r0, #54368	; 0xd460
   11ab8:	mov	r1, #1
   11abc:	movt	r0, #2
   11ac0:	strb	r1, [r0]
   11ac4:	sub	sp, fp, #28
   11ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11acc:	push	{r4, r5, r6, r7, fp, lr}
   11ad0:	add	fp, sp, #16
   11ad4:	cmp	r0, #1
   11ad8:	bgt	11af4 <__assert_fail@plt+0x360>
   11adc:	movw	r0, #45921	; 0xb361
   11ae0:	movt	r0, #1
   11ae4:	movw	r1, #55996	; 0xdabc
   11ae8:	movt	r1, #2
   11aec:	pop	{r4, r5, r6, r7, fp, lr}
   11af0:	b	11458 <printf@plt>
   11af4:	mov	r4, r1
   11af8:	cmp	r0, #2
   11afc:	bne	11b50 <__assert_fail@plt+0x3bc>
   11b00:	movw	r0, #54068	; 0xd334
   11b04:	ldr	r5, [r4, #4]
   11b08:	movt	r0, #2
   11b0c:	ldr	r1, [r0]
   11b10:	cmp	r1, #0
   11b14:	beq	11b40 <__assert_fail@plt+0x3ac>
   11b18:	add	r6, r0, #4
   11b1c:	mov	r0, r5
   11b20:	bl	11440 <strcmp@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	11bc4 <__assert_fail@plt+0x430>
   11b2c:	ldr	r1, [r6, #4]
   11b30:	add	r0, r6, #8
   11b34:	mov	r6, r0
   11b38:	cmp	r1, #0
   11b3c:	bne	11b1c <__assert_fail@plt+0x388>
   11b40:	movw	r0, #45955	; 0xb383
   11b44:	mov	r1, r5
   11b48:	movt	r0, #1
   11b4c:	bl	11458 <printf@plt>
   11b50:	ldr	r1, [r4]
   11b54:	movw	r0, #45973	; 0xb395
   11b58:	movt	r0, #1
   11b5c:	bl	11458 <printf@plt>
   11b60:	movw	r0, #54068	; 0xd334
   11b64:	movt	r0, #2
   11b68:	ldr	r2, [r0]
   11b6c:	cmp	r2, #0
   11b70:	beq	11bb4 <__assert_fail@plt+0x420>
   11b74:	movw	r4, #48088	; 0xbbd8
   11b78:	movw	r5, #45985	; 0xb3a1
   11b7c:	movw	r7, #45990	; 0xb3a6
   11b80:	add	r6, r0, #8
   11b84:	movt	r4, #1
   11b88:	movt	r5, #1
   11b8c:	movt	r7, #1
   11b90:	mov	r0, r5
   11b94:	mov	r1, r4
   11b98:	bl	11458 <printf@plt>
   11b9c:	ldrb	r0, [r4]
   11ba0:	ldr	r2, [r6], #8
   11ba4:	cmp	r0, #32
   11ba8:	moveq	r4, r7
   11bac:	cmp	r2, #0
   11bb0:	bne	11b90 <__assert_fail@plt+0x3fc>
   11bb4:	movw	r0, #46979	; 0xb783
   11bb8:	movt	r0, #1
   11bbc:	pop	{r4, r5, r6, r7, fp, lr}
   11bc0:	b	115a8 <puts@plt>
   11bc4:	ldr	r1, [r6]
   11bc8:	movw	r0, #55996	; 0xdabc
   11bcc:	movt	r0, #2
   11bd0:	bl	11560 <strcpy@plt>
   11bd4:	movw	r0, #54372	; 0xd464
   11bd8:	movt	r0, #2
   11bdc:	ldr	r0, [r0]
   11be0:	cmp	r0, #0
   11be4:	popeq	{r4, r5, r6, r7, fp, pc}
   11be8:	movw	r0, #46614	; 0xb616
   11bec:	movt	r0, #1
   11bf0:	b	11ae4 <__assert_fail@plt+0x350>
   11bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf8:	add	fp, sp, #28
   11bfc:	sub	sp, sp, #12
   11c00:	mov	r4, r1
   11c04:	cmp	r0, #1
   11c08:	bgt	11d30 <__assert_fail@plt+0x59c>
   11c0c:	movw	r5, #56028	; 0xdadc
   11c10:	movw	r0, #25971	; 0x6573
   11c14:	mov	r6, #0
   11c18:	movt	r5, #2
   11c1c:	movt	r0, #25710	; 0x646e
   11c20:	str	r0, [r5]
   11c24:	mov	r0, r5
   11c28:	strb	r6, [r5, #4]
   11c2c:	bl	11614 <strlen@plt>
   11c30:	add	r0, r5, r0
   11c34:	mov	r1, #32
   11c38:	strh	r1, [r0]
   11c3c:	movw	r0, #47571	; 0xb9d3
   11c40:	movw	r1, #45999	; 0xb3af
   11c44:	movt	r0, #1
   11c48:	movt	r1, #1
   11c4c:	bl	11458 <printf@plt>
   11c50:	movw	r0, #54344	; 0xd448
   11c54:	mov	r1, #195	; 0xc3
   11c58:	movt	r0, #2
   11c5c:	ldr	r2, [r0]
   11c60:	add	r0, r5, #5
   11c64:	bl	114b8 <fgets@plt>
   11c68:	cmp	r0, #0
   11c6c:	beq	11e38 <__assert_fail@plt+0x6a4>
   11c70:	movw	r7, #55988	; 0xdab4
   11c74:	movt	r7, #2
   11c78:	str	r6, [r7]
   11c7c:	ldrb	r6, [r5]
   11c80:	cmp	r6, #0
   11c84:	beq	11e88 <__assert_fail@plt+0x6f4>
   11c88:	movw	r4, #55496	; 0xd8c8
   11c8c:	movt	r4, #2
   11c90:	bl	115f0 <__ctype_b_loc@plt>
   11c94:	mov	r1, #0
   11c98:	ldr	r2, [r0]
   11c9c:	uxtb	r3, r6
   11ca0:	add	r3, r2, r3, lsl #1
   11ca4:	ldrb	r3, [r3, #1]
   11ca8:	tst	r3, #32
   11cac:	beq	11ccc <__assert_fail@plt+0x538>
   11cb0:	ldrb	r3, [r5, #1]!
   11cb4:	add	r6, r2, r3, lsl #1
   11cb8:	ldrb	r6, [r6, #1]
   11cbc:	tst	r6, #32
   11cc0:	bne	11cb0 <__assert_fail@plt+0x51c>
   11cc4:	cmp	r3, #0
   11cc8:	beq	11d10 <__assert_fail@plt+0x57c>
   11ccc:	ldr	r2, [r7]
   11cd0:	str	r5, [r4], #4
   11cd4:	add	r6, r2, #1
   11cd8:	str	r6, [r7]
   11cdc:	ldrb	r2, [r5]
   11ce0:	cmp	r2, #0
   11ce4:	beq	11d14 <__assert_fail@plt+0x580>
   11ce8:	ldr	r3, [r0]
   11cec:	add	r5, r5, #1
   11cf0:	add	r2, r3, r2, lsl #1
   11cf4:	ldrb	r2, [r2, #1]
   11cf8:	tst	r2, #32
   11cfc:	beq	11cdc <__assert_fail@plt+0x548>
   11d00:	strb	r1, [r5, #-1]
   11d04:	ldrb	r6, [r5]
   11d08:	cmp	r6, #0
   11d0c:	bne	11c98 <__assert_fail@plt+0x504>
   11d10:	ldr	r6, [r7]
   11d14:	mov	r0, #0
   11d18:	cmp	r6, #1
   11d1c:	str	r0, [r4]
   11d20:	ble	11e98 <__assert_fail@plt+0x704>
   11d24:	movw	r4, #55496	; 0xd8c8
   11d28:	movt	r4, #2
   11d2c:	b	11d34 <__assert_fail@plt+0x5a0>
   11d30:	mov	r6, r0
   11d34:	sub	r8, r6, #1
   11d38:	mov	r1, #58	; 0x3a
   11d3c:	ldr	r7, [r4, r8, lsl #2]
   11d40:	mov	r0, r7
   11d44:	bl	11620 <strchr@plt>
   11d48:	cmp	r0, #0
   11d4c:	beq	11dc4 <__assert_fail@plt+0x630>
   11d50:	mov	r9, r0
   11d54:	cmp	r6, #3
   11d58:	blt	11d80 <__assert_fail@plt+0x5ec>
   11d5c:	mov	r5, #1
   11d60:	ldr	r0, [r4, r5, lsl #2]
   11d64:	mov	r1, #58	; 0x3a
   11d68:	bl	11620 <strchr@plt>
   11d6c:	cmp	r0, #0
   11d70:	bne	11ecc <__assert_fail@plt+0x738>
   11d74:	add	r5, r5, #1
   11d78:	cmp	r5, r8
   11d7c:	blt	11d60 <__assert_fail@plt+0x5cc>
   11d80:	ldrb	r0, [r7]
   11d84:	cmp	r0, #91	; 0x5b
   11d88:	bne	11e5c <__assert_fail@plt+0x6c8>
   11d8c:	mov	r0, r7
   11d90:	mov	r1, #93	; 0x5d
   11d94:	bl	11620 <strchr@plt>
   11d98:	cmp	r0, #0
   11d9c:	beq	12018 <__assert_fail@plt+0x884>
   11da0:	mov	r1, #0
   11da4:	strb	r1, [r0]
   11da8:	ldrb	r2, [r0, #1]
   11dac:	ldr	r1, [r4, r8, lsl #2]
   11db0:	cmp	r2, #58	; 0x3a
   11db4:	bne	120b4 <__assert_fail@plt+0x920>
   11db8:	add	r5, r0, #2
   11dbc:	add	r7, r1, #1
   11dc0:	b	11e74 <__assert_fail@plt+0x6e0>
   11dc4:	mov	r5, r7
   11dc8:	movw	r0, #54368	; 0xd460
   11dcc:	movt	r0, #2
   11dd0:	ldrb	r0, [r0]
   11dd4:	cmp	r0, #0
   11dd8:	beq	11e48 <__assert_fail@plt+0x6b4>
   11ddc:	cmp	r6, #3
   11de0:	bgt	11eec <__assert_fail@plt+0x758>
   11de4:	cmp	r6, #2
   11de8:	bne	12020 <__assert_fail@plt+0x88c>
   11dec:	ldrb	r0, [r5]
   11df0:	mov	r4, r5
   11df4:	cmp	r0, #0
   11df8:	beq	12024 <__assert_fail@plt+0x890>
   11dfc:	mov	r4, #0
   11e00:	mov	r0, r5
   11e04:	mov	r1, #47	; 0x2f
   11e08:	bl	116e0 <strrchr@plt>
   11e0c:	cmp	r0, #0
   11e10:	beq	11e30 <__assert_fail@plt+0x69c>
   11e14:	ldrb	r1, [r0, #1]
   11e18:	cmp	r1, #0
   11e1c:	bne	120ec <__assert_fail@plt+0x958>
   11e20:	strb	r4, [r0]
   11e24:	ldrb	r0, [r5]
   11e28:	cmp	r0, #0
   11e2c:	bne	11e00 <__assert_fail@plt+0x66c>
   11e30:	mov	r4, r5
   11e34:	b	12024 <__assert_fail@plt+0x890>
   11e38:	movw	r5, #45994	; 0xb3aa
   11e3c:	movt	r5, #1
   11e40:	str	r5, [r4]
   11e44:	b	11ea4 <__assert_fail@plt+0x710>
   11e48:	movw	r0, #47136	; 0xb820
   11e4c:	movt	r0, #1
   11e50:	sub	sp, fp, #28
   11e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e58:	b	115a8 <puts@plt>
   11e5c:	mov	r0, #0
   11e60:	mov	r5, r9
   11e64:	strb	r0, [r5], #1
   11e68:	ldrb	r0, [r7]
   11e6c:	cmp	r0, #0
   11e70:	beq	11dc8 <__assert_fail@plt+0x634>
   11e74:	mov	r0, r7
   11e78:	bl	130b0 <__assert_fail@plt+0x191c>
   11e7c:	cmp	r0, #0
   11e80:	bne	12018 <__assert_fail@plt+0x884>
   11e84:	b	11dc8 <__assert_fail@plt+0x634>
   11e88:	movw	r0, #55496	; 0xd8c8
   11e8c:	mov	r1, #0
   11e90:	movt	r0, #2
   11e94:	str	r1, [r0]
   11e98:	movw	r0, #55496	; 0xd8c8
   11e9c:	movt	r0, #2
   11ea0:	ldr	r5, [r0]
   11ea4:	movw	r0, #46630	; 0xb626
   11ea8:	mov	r1, r5
   11eac:	movt	r0, #1
   11eb0:	bl	11458 <printf@plt>
   11eb4:	movw	r0, #46666	; 0xb64a
   11eb8:	mov	r1, r5
   11ebc:	movt	r0, #1
   11ec0:	sub	sp, fp, #28
   11ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec8:	b	11458 <printf@plt>
   11ecc:	ldr	r4, [r4]
   11ed0:	movw	r0, #46630	; 0xb626
   11ed4:	movt	r0, #1
   11ed8:	mov	r1, r4
   11edc:	bl	11458 <printf@plt>
   11ee0:	movw	r0, #46666	; 0xb64a
   11ee4:	mov	r1, r4
   11ee8:	b	11ebc <__assert_fail@plt+0x728>
   11eec:	mov	r0, r5
   11ef0:	bl	11614 <strlen@plt>
   11ef4:	mov	r1, #47	; 0x2f
   11ef8:	mov	r2, r5
   11efc:	movw	r6, #55996	; 0xdabc
   11f00:	mov	r9, #1
   11f04:	mov	sl, #0
   11f08:	strb	r1, [r2, r0]!
   11f0c:	movt	r6, #2
   11f10:	add	r0, r2, #1
   11f14:	str	r0, [sp, #8]
   11f18:	b	11f48 <__assert_fail@plt+0x7b4>
   11f1c:	movw	r0, #54336	; 0xd440
   11f20:	mov	r1, #6
   11f24:	mov	r2, #1
   11f28:	movt	r0, #2
   11f2c:	ldr	r3, [r0]
   11f30:	movw	r0, #46007	; 0xb3b7
   11f34:	movt	r0, #1
   11f38:	bl	11548 <fwrite@plt>
   11f3c:	ldr	r0, [r4, r9, lsl #2]
   11f40:	bl	1153c <perror@plt>
   11f44:	b	1200c <__assert_fail@plt+0x878>
   11f48:	ldr	r7, [r4, r9, lsl #2]
   11f4c:	b	11f54 <__assert_fail@plt+0x7c0>
   11f50:	strb	sl, [r0]
   11f54:	ldrb	r0, [r7]
   11f58:	cmp	r0, #0
   11f5c:	beq	11f84 <__assert_fail@plt+0x7f0>
   11f60:	mov	r0, r7
   11f64:	mov	r1, #47	; 0x2f
   11f68:	bl	116e0 <strrchr@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f84 <__assert_fail@plt+0x7f0>
   11f74:	ldrb	r1, [r0, #1]
   11f78:	cmp	r1, #0
   11f7c:	beq	11f50 <__assert_fail@plt+0x7bc>
   11f80:	add	r7, r0, #1
   11f84:	ldr	r0, [sp, #8]
   11f88:	mov	r1, r7
   11f8c:	bl	11560 <strcpy@plt>
   11f90:	ldr	r0, [r4, r9, lsl #2]
   11f94:	mov	r1, #0
   11f98:	bl	11590 <open64@plt>
   11f9c:	cmn	r0, #1
   11fa0:	ble	11f1c <__assert_fail@plt+0x788>
   11fa4:	mov	r7, r0
   11fa8:	movw	r0, #54372	; 0xd464
   11fac:	movt	r0, #2
   11fb0:	ldr	r0, [r0]
   11fb4:	cmp	r0, #0
   11fb8:	beq	11fe0 <__assert_fail@plt+0x84c>
   11fbc:	movw	r0, #55992	; 0xdab8
   11fc0:	ldr	r1, [r4, r9, lsl #2]
   11fc4:	mov	r3, r5
   11fc8:	movt	r0, #2
   11fcc:	ldr	r2, [r0]
   11fd0:	movw	r0, #46014	; 0xb3be
   11fd4:	str	r6, [sp]
   11fd8:	movt	r0, #1
   11fdc:	bl	11458 <printf@plt>
   11fe0:	movw	r0, #54360	; 0xd458
   11fe4:	movw	r1, #54376	; 0xd468
   11fe8:	mov	r2, r6
   11fec:	movt	r0, #2
   11ff0:	movt	r1, #2
   11ff4:	ldrh	r0, [r0]
   11ff8:	rev16	r0, r0
   11ffc:	strh	r0, [r1, #2]
   12000:	mov	r0, r7
   12004:	mov	r1, r5
   12008:	bl	132ec <__assert_fail@plt+0x1b58>
   1200c:	add	r9, r9, #1
   12010:	cmp	r9, r8
   12014:	bne	11f48 <__assert_fail@plt+0x7b4>
   12018:	sub	sp, fp, #28
   1201c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12020:	ldr	r4, [r4, #4]
   12024:	mov	r0, r4
   12028:	mov	r1, #0
   1202c:	bl	11590 <open64@plt>
   12030:	cmn	r0, #1
   12034:	ble	120bc <__assert_fail@plt+0x928>
   12038:	mov	r6, r0
   1203c:	movw	r0, #54372	; 0xd464
   12040:	movt	r0, #2
   12044:	ldr	r0, [r0]
   12048:	cmp	r0, #0
   1204c:	beq	1207c <__assert_fail@plt+0x8e8>
   12050:	movw	r0, #55992	; 0xdab8
   12054:	mov	r1, r4
   12058:	mov	r3, r5
   1205c:	movt	r0, #2
   12060:	ldr	r2, [r0]
   12064:	movw	r0, #55996	; 0xdabc
   12068:	movt	r0, #2
   1206c:	str	r0, [sp]
   12070:	movw	r0, #46014	; 0xb3be
   12074:	movt	r0, #1
   12078:	bl	11458 <printf@plt>
   1207c:	movw	r0, #54360	; 0xd458
   12080:	movw	r1, #54376	; 0xd468
   12084:	movw	r2, #55996	; 0xdabc
   12088:	movt	r0, #2
   1208c:	movt	r1, #2
   12090:	movt	r2, #2
   12094:	ldrh	r0, [r0]
   12098:	rev16	r0, r0
   1209c:	strh	r0, [r1, #2]
   120a0:	mov	r0, r6
   120a4:	mov	r1, r5
   120a8:	sub	sp, fp, #28
   120ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b0:	b	132ec <__assert_fail@plt+0x1b58>
   120b4:	mov	r5, r1
   120b8:	b	11dc8 <__assert_fail@plt+0x634>
   120bc:	movw	r0, #54336	; 0xd440
   120c0:	mov	r1, #6
   120c4:	mov	r2, #1
   120c8:	movt	r0, #2
   120cc:	ldr	r3, [r0]
   120d0:	movw	r0, #46007	; 0xb3b7
   120d4:	movt	r0, #1
   120d8:	bl	11548 <fwrite@plt>
   120dc:	mov	r0, r4
   120e0:	sub	sp, fp, #28
   120e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120e8:	b	1153c <perror@plt>
   120ec:	add	r4, r0, #1
   120f0:	b	12024 <__assert_fail@plt+0x890>
   120f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120f8:	add	fp, sp, #28
   120fc:	sub	sp, sp, #4
   12100:	mov	r8, r1
   12104:	cmp	r0, #1
   12108:	bgt	12230 <__assert_fail@plt+0xa9c>
   1210c:	movw	r6, #56028	; 0xdadc
   12110:	movw	r0, #25959	; 0x6567
   12114:	movt	r6, #2
   12118:	movt	r0, #116	; 0x74
   1211c:	str	r0, [r6]
   12120:	mov	r0, r6
   12124:	bl	11614 <strlen@plt>
   12128:	add	r0, r6, r0
   1212c:	mov	r1, #32
   12130:	strh	r1, [r0]
   12134:	movw	r0, #47571	; 0xb9d3
   12138:	movw	r1, #46040	; 0xb3d8
   1213c:	movt	r0, #1
   12140:	movt	r1, #1
   12144:	bl	11458 <printf@plt>
   12148:	movw	r0, #54344	; 0xd448
   1214c:	mov	r1, #196	; 0xc4
   12150:	movt	r0, #2
   12154:	ldr	r2, [r0]
   12158:	add	r0, r6, #4
   1215c:	bl	114b8 <fgets@plt>
   12160:	cmp	r0, #0
   12164:	beq	12288 <__assert_fail@plt+0xaf4>
   12168:	ldrb	r5, [r6]
   1216c:	movw	r7, #55988	; 0xdab4
   12170:	mov	r8, #0
   12174:	movt	r7, #2
   12178:	str	r8, [r7]
   1217c:	cmp	r5, #0
   12180:	beq	1247c <__assert_fail@plt+0xce8>
   12184:	movw	r4, #55496	; 0xd8c8
   12188:	movt	r4, #2
   1218c:	bl	115f0 <__ctype_b_loc@plt>
   12190:	ldr	r1, [r0]
   12194:	uxtb	r2, r5
   12198:	add	r2, r1, r2, lsl #1
   1219c:	ldrb	r2, [r2, #1]
   121a0:	tst	r2, #32
   121a4:	beq	121c4 <__assert_fail@plt+0xa30>
   121a8:	ldrb	r2, [r6, #1]!
   121ac:	add	r3, r1, r2, lsl #1
   121b0:	ldrb	r3, [r3, #1]
   121b4:	tst	r3, #32
   121b8:	bne	121a8 <__assert_fail@plt+0xa14>
   121bc:	cmp	r2, #0
   121c0:	beq	12208 <__assert_fail@plt+0xa74>
   121c4:	ldr	r1, [r7]
   121c8:	str	r6, [r4], #4
   121cc:	add	sl, r1, #1
   121d0:	str	sl, [r7]
   121d4:	ldrb	r1, [r6]
   121d8:	cmp	r1, #0
   121dc:	beq	1220c <__assert_fail@plt+0xa78>
   121e0:	ldr	r2, [r0]
   121e4:	add	r6, r6, #1
   121e8:	add	r1, r2, r1, lsl #1
   121ec:	ldrb	r1, [r1, #1]
   121f0:	tst	r1, #32
   121f4:	beq	121d4 <__assert_fail@plt+0xa40>
   121f8:	strb	r8, [r6, #-1]
   121fc:	ldrb	r5, [r6]
   12200:	cmp	r5, #0
   12204:	bne	12190 <__assert_fail@plt+0x9fc>
   12208:	ldr	sl, [r7]
   1220c:	mov	r0, #0
   12210:	cmp	sl, #1
   12214:	str	r0, [r4]
   12218:	ble	12488 <__assert_fail@plt+0xcf4>
   1221c:	movw	r8, #55496	; 0xd8c8
   12220:	movt	r8, #2
   12224:	cmp	sl, #2
   12228:	bge	1223c <__assert_fail@plt+0xaa8>
   1222c:	b	12274 <__assert_fail@plt+0xae0>
   12230:	mov	sl, r0
   12234:	cmp	sl, #2
   12238:	blt	12274 <__assert_fail@plt+0xae0>
   1223c:	movw	r0, #54368	; 0xd460
   12240:	movt	r0, #2
   12244:	ldrb	r0, [r0]
   12248:	cmp	r0, #0
   1224c:	bne	12274 <__assert_fail@plt+0xae0>
   12250:	mov	r6, #1
   12254:	ldr	r0, [r8, r6, lsl #2]
   12258:	mov	r1, #58	; 0x3a
   1225c:	bl	11620 <strchr@plt>
   12260:	cmp	r0, #0
   12264:	beq	1245c <__assert_fail@plt+0xcc8>
   12268:	add	r6, r6, #1
   1226c:	cmp	r6, sl
   12270:	blt	12254 <__assert_fail@plt+0xac0>
   12274:	cmp	sl, #2
   12278:	blt	12454 <__assert_fail@plt+0xcc0>
   1227c:	mov	r9, #1
   12280:	mov	r4, #0
   12284:	b	122c8 <__assert_fail@plt+0xb34>
   12288:	movw	r5, #45734	; 0xb2a6
   1228c:	movt	r5, #1
   12290:	str	r5, [r8]
   12294:	b	12494 <__assert_fail@plt+0xd00>
   12298:	movw	r0, #54336	; 0xd440
   1229c:	mov	r1, #6
   122a0:	mov	r2, #1
   122a4:	movt	r0, #2
   122a8:	ldr	r3, [r0]
   122ac:	movw	r0, #46007	; 0xb3b7
   122b0:	movt	r0, #1
   122b4:	bl	11548 <fwrite@plt>
   122b8:	mov	r0, r6
   122bc:	bl	1153c <perror@plt>
   122c0:	mov	r8, r5
   122c4:	b	12448 <__assert_fail@plt+0xcb4>
   122c8:	ldr	r6, [r8, r9, lsl #2]
   122cc:	mov	r1, #58	; 0x3a
   122d0:	mov	r0, r6
   122d4:	bl	11620 <strchr@plt>
   122d8:	cmp	r0, #0
   122dc:	beq	12330 <__assert_fail@plt+0xb9c>
   122e0:	mov	r7, r0
   122e4:	cmp	r0, r6
   122e8:	beq	12340 <__assert_fail@plt+0xbac>
   122ec:	ldrb	r0, [r6]
   122f0:	cmp	r0, #91	; 0x5b
   122f4:	bne	12350 <__assert_fail@plt+0xbbc>
   122f8:	mov	r0, r6
   122fc:	mov	r1, #93	; 0x5d
   12300:	bl	11620 <strchr@plt>
   12304:	cmp	r0, #0
   12308:	beq	12364 <__assert_fail@plt+0xbd0>
   1230c:	mov	r1, r0
   12310:	strb	r4, [r1], #2
   12314:	ldrb	r2, [r0, #1]!
   12318:	cmp	r2, #58	; 0x3a
   1231c:	moveq	r0, r1
   12320:	ldr	r1, [r8, r9, lsl #2]
   12324:	mov	r7, r0
   12328:	add	r6, r1, #1
   1232c:	b	12354 <__assert_fail@plt+0xbc0>
   12330:	mov	r7, r6
   12334:	cmp	sl, #3
   12338:	bgt	1236c <__assert_fail@plt+0xbd8>
   1233c:	b	124bc <__assert_fail@plt+0xd28>
   12340:	add	r7, r6, #1
   12344:	cmp	sl, #3
   12348:	bgt	1236c <__assert_fail@plt+0xbd8>
   1234c:	b	124bc <__assert_fail@plt+0xd28>
   12350:	strb	r4, [r7], #1
   12354:	mov	r0, r6
   12358:	bl	130b0 <__assert_fail@plt+0x191c>
   1235c:	cmp	r0, #0
   12360:	bne	12448 <__assert_fail@plt+0xcb4>
   12364:	cmp	sl, #3
   12368:	ble	124bc <__assert_fail@plt+0xd28>
   1236c:	ldrb	r0, [r7]
   12370:	mov	r6, r7
   12374:	cmp	r0, #0
   12378:	beq	123b8 <__assert_fail@plt+0xc24>
   1237c:	mov	r0, r7
   12380:	mov	r1, #47	; 0x2f
   12384:	bl	116e0 <strrchr@plt>
   12388:	cmp	r0, #0
   1238c:	beq	123ac <__assert_fail@plt+0xc18>
   12390:	ldrb	r1, [r0, #1]
   12394:	cmp	r1, #0
   12398:	bne	123b4 <__assert_fail@plt+0xc20>
   1239c:	strb	r4, [r0]
   123a0:	ldrb	r0, [r7]
   123a4:	cmp	r0, #0
   123a8:	bne	1237c <__assert_fail@plt+0xbe8>
   123ac:	mov	r6, r7
   123b0:	b	123b8 <__assert_fail@plt+0xc24>
   123b4:	add	r6, r0, #1
   123b8:	mov	r0, r6
   123bc:	mov	r1, #420	; 0x1a4
   123c0:	mov	r5, r8
   123c4:	bl	11578 <creat64@plt>
   123c8:	cmn	r0, #1
   123cc:	ble	12298 <__assert_fail@plt+0xb04>
   123d0:	mov	r8, r0
   123d4:	movw	r0, #54372	; 0xd464
   123d8:	movw	r4, #55996	; 0xdabc
   123dc:	movt	r0, #2
   123e0:	movt	r4, #2
   123e4:	ldr	r0, [r0]
   123e8:	cmp	r0, #0
   123ec:	beq	12414 <__assert_fail@plt+0xc80>
   123f0:	movw	r0, #55992	; 0xdab8
   123f4:	mov	r2, r7
   123f8:	mov	r3, r6
   123fc:	movt	r0, #2
   12400:	ldr	r1, [r0]
   12404:	movw	r0, #46049	; 0xb3e1
   12408:	str	r4, [sp]
   1240c:	movt	r0, #1
   12410:	bl	11458 <printf@plt>
   12414:	movw	r0, #54360	; 0xd458
   12418:	movw	r1, #54376	; 0xd468
   1241c:	mov	r2, r4
   12420:	movt	r0, #2
   12424:	movt	r1, #2
   12428:	ldrh	r0, [r0]
   1242c:	rev16	r0, r0
   12430:	strh	r0, [r1, #2]
   12434:	mov	r0, r8
   12438:	mov	r1, r7
   1243c:	bl	1376c <__assert_fail@plt+0x1fd8>
   12440:	mov	r8, r5
   12444:	mov	r4, #0
   12448:	add	r9, r9, #1
   1244c:	cmp	r9, sl
   12450:	blt	122c8 <__assert_fail@plt+0xb34>
   12454:	sub	sp, fp, #28
   12458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1245c:	ldr	r4, [r8]
   12460:	movw	r0, #46718	; 0xb67e
   12464:	movt	r0, #1
   12468:	mov	r1, r4
   1246c:	bl	11458 <printf@plt>
   12470:	movw	r0, #46762	; 0xb6aa
   12474:	mov	r1, r4
   12478:	b	124ac <__assert_fail@plt+0xd18>
   1247c:	movw	r0, #55496	; 0xd8c8
   12480:	movt	r0, #2
   12484:	str	r8, [r0]
   12488:	movw	r0, #55496	; 0xd8c8
   1248c:	movt	r0, #2
   12490:	ldr	r5, [r0]
   12494:	movw	r0, #46718	; 0xb67e
   12498:	mov	r1, r5
   1249c:	movt	r0, #1
   124a0:	bl	11458 <printf@plt>
   124a4:	movw	r0, #46762	; 0xb6aa
   124a8:	mov	r1, r5
   124ac:	movt	r0, #1
   124b0:	sub	sp, fp, #28
   124b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b8:	b	11458 <printf@plt>
   124bc:	bne	124d0 <__assert_fail@plt+0xd3c>
   124c0:	ldr	r4, [r8, #8]
   124c4:	movw	r6, #55996	; 0xdabc
   124c8:	movt	r6, #2
   124cc:	b	12528 <__assert_fail@plt+0xd94>
   124d0:	ldrb	r0, [r7]
   124d4:	movw	r6, #55996	; 0xdabc
   124d8:	mov	r4, r7
   124dc:	movt	r6, #2
   124e0:	cmp	r0, #0
   124e4:	beq	12528 <__assert_fail@plt+0xd94>
   124e8:	mov	r4, #0
   124ec:	mov	r0, r7
   124f0:	mov	r1, #47	; 0x2f
   124f4:	bl	116e0 <strrchr@plt>
   124f8:	cmp	r0, #0
   124fc:	beq	1251c <__assert_fail@plt+0xd88>
   12500:	ldrb	r1, [r0, #1]
   12504:	cmp	r1, #0
   12508:	bne	12524 <__assert_fail@plt+0xd90>
   1250c:	strb	r4, [r0]
   12510:	ldrb	r0, [r7]
   12514:	cmp	r0, #0
   12518:	bne	124ec <__assert_fail@plt+0xd58>
   1251c:	mov	r4, r7
   12520:	b	12528 <__assert_fail@plt+0xd94>
   12524:	add	r4, r0, #1
   12528:	mov	r0, r4
   1252c:	mov	r1, #420	; 0x1a4
   12530:	bl	11578 <creat64@plt>
   12534:	cmn	r0, #1
   12538:	ble	125b0 <__assert_fail@plt+0xe1c>
   1253c:	mov	r5, r0
   12540:	movw	r0, #54372	; 0xd464
   12544:	movt	r0, #2
   12548:	ldr	r0, [r0]
   1254c:	cmp	r0, #0
   12550:	beq	12578 <__assert_fail@plt+0xde4>
   12554:	movw	r0, #55992	; 0xdab8
   12558:	mov	r2, r7
   1255c:	mov	r3, r4
   12560:	movt	r0, #2
   12564:	ldr	r1, [r0]
   12568:	movw	r0, #46049	; 0xb3e1
   1256c:	str	r6, [sp]
   12570:	movt	r0, #1
   12574:	bl	11458 <printf@plt>
   12578:	movw	r0, #54360	; 0xd458
   1257c:	movw	r1, #54376	; 0xd468
   12580:	movw	r2, #55996	; 0xdabc
   12584:	movt	r0, #2
   12588:	movt	r1, #2
   1258c:	movt	r2, #2
   12590:	ldrh	r0, [r0]
   12594:	rev16	r0, r0
   12598:	strh	r0, [r1, #2]
   1259c:	mov	r0, r5
   125a0:	mov	r1, r7
   125a4:	sub	sp, fp, #28
   125a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125ac:	b	1376c <__assert_fail@plt+0x1fd8>
   125b0:	movw	r0, #54336	; 0xd440
   125b4:	mov	r1, #6
   125b8:	mov	r2, #1
   125bc:	movt	r0, #2
   125c0:	ldr	r3, [r0]
   125c4:	movw	r0, #46007	; 0xb3b7
   125c8:	movt	r0, #1
   125cc:	bl	11548 <fwrite@plt>
   125d0:	mov	r0, r4
   125d4:	sub	sp, fp, #28
   125d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125dc:	b	1153c <perror@plt>
   125e0:	push	{fp, lr}
   125e4:	mov	fp, sp
   125e8:	mov	r0, #0
   125ec:	bl	115fc <exit@plt>
   125f0:	movw	r0, #54372	; 0xd464
   125f4:	movt	r0, #2
   125f8:	ldr	r2, [r0]
   125fc:	clz	r1, r2
   12600:	cmp	r2, #0
   12604:	lsr	r1, r1, #5
   12608:	str	r1, [r0]
   1260c:	movw	r0, #48701	; 0xbe3d
   12610:	movw	r1, #46173	; 0xb45d
   12614:	movt	r0, #1
   12618:	movt	r1, #1
   1261c:	moveq	r1, r0
   12620:	movw	r0, #46313	; 0xb4e9
   12624:	movt	r0, #1
   12628:	b	11458 <printf@plt>
   1262c:	movw	r0, #54504	; 0xd4e8
   12630:	movt	r0, #2
   12634:	ldr	r2, [r0]
   12638:	clz	r1, r2
   1263c:	cmp	r2, #0
   12640:	lsr	r1, r1, #5
   12644:	str	r1, [r0]
   12648:	movw	r0, #48701	; 0xbe3d
   1264c:	movw	r1, #46173	; 0xb45d
   12650:	movt	r0, #1
   12654:	movt	r1, #1
   12658:	moveq	r1, r0
   1265c:	movw	r0, #46293	; 0xb4d5
   12660:	movt	r0, #1
   12664:	b	11458 <printf@plt>
   12668:	push	{fp, lr}
   1266c:	mov	fp, sp
   12670:	movw	r0, #54368	; 0xd460
   12674:	movt	r0, #2
   12678:	ldrb	r0, [r0]
   1267c:	cmp	r0, #1
   12680:	bne	126a0 <__assert_fail@plt+0xf0c>
   12684:	movw	r0, #55992	; 0xdab8
   12688:	movt	r0, #2
   1268c:	ldr	r1, [r0]
   12690:	movw	r0, #46121	; 0xb429
   12694:	movt	r0, #1
   12698:	bl	11458 <printf@plt>
   1269c:	b	126ac <__assert_fail@plt+0xf18>
   126a0:	movw	r0, #46982	; 0xb786
   126a4:	movt	r0, #1
   126a8:	bl	115a8 <puts@plt>
   126ac:	movw	r0, #54372	; 0xd464
   126b0:	movw	r3, #48701	; 0xbe3d
   126b4:	movw	r1, #46173	; 0xb45d
   126b8:	movt	r0, #2
   126bc:	movt	r3, #1
   126c0:	movt	r1, #1
   126c4:	ldr	r0, [r0]
   126c8:	mov	r2, r3
   126cc:	cmp	r0, #0
   126d0:	movw	r0, #54504	; 0xd4e8
   126d4:	movt	r0, #2
   126d8:	moveq	r2, r1
   126dc:	ldr	r0, [r0]
   126e0:	cmp	r0, #0
   126e4:	movw	r0, #46139	; 0xb43b
   126e8:	moveq	r3, r1
   126ec:	movw	r1, #55996	; 0xdabc
   126f0:	movt	r0, #1
   126f4:	movt	r1, #2
   126f8:	bl	11458 <printf@plt>
   126fc:	movw	r0, #54116	; 0xd364
   12700:	movt	r0, #2
   12704:	ldr	r1, [r0]
   12708:	movw	r0, #54120	; 0xd368
   1270c:	movt	r0, #2
   12710:	ldr	r2, [r0]
   12714:	movw	r0, #46177	; 0xb461
   12718:	movt	r0, #1
   1271c:	pop	{fp, lr}
   12720:	b	11458 <printf@plt>
   12724:	movw	r0, #55996	; 0xdabc
   12728:	mov	r1, #116	; 0x74
   1272c:	movt	r0, #2
   12730:	strh	r1, [r0, #4]
   12734:	movw	r1, #25455	; 0x636f
   12738:	movt	r1, #25972	; 0x6574
   1273c:	str	r1, [r0]
   12740:	movw	r0, #54372	; 0xd464
   12744:	movt	r0, #2
   12748:	ldr	r0, [r0]
   1274c:	cmp	r0, #0
   12750:	bxeq	lr
   12754:	movw	r0, #46614	; 0xb616
   12758:	movw	r1, #55996	; 0xdabc
   1275c:	movt	r0, #1
   12760:	movt	r1, #2
   12764:	b	11458 <printf@plt>
   12768:	movw	r0, #47080	; 0xb7e8
   1276c:	mov	r1, #0
   12770:	movt	r0, #1
   12774:	vldr	d16, [r0]
   12778:	movw	r0, #55996	; 0xdabc
   1277c:	movt	r0, #2
   12780:	strb	r1, [r0, #8]
   12784:	vst1.8	{d16}, [r0]
   12788:	movw	r0, #54372	; 0xd464
   1278c:	movt	r0, #2
   12790:	ldr	r0, [r0]
   12794:	cmp	r0, #0
   12798:	bxeq	lr
   1279c:	movw	r0, #46614	; 0xb616
   127a0:	movw	r1, #55996	; 0xdabc
   127a4:	movt	r0, #1
   127a8:	movt	r1, #2
   127ac:	b	11458 <printf@plt>
   127b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   127b4:	add	fp, sp, #24
   127b8:	mov	r4, r1
   127bc:	cmp	r0, #1
   127c0:	bgt	12900 <__assert_fail@plt+0x116c>
   127c4:	movw	r6, #47096	; 0xb7f8
   127c8:	movw	r5, #56028	; 0xdadc
   127cc:	movt	r6, #1
   127d0:	movt	r5, #2
   127d4:	add	r0, r6, #6
   127d8:	vldr	d16, [r6]
   127dc:	vld1.16	{d17}, [r0]
   127e0:	add	r0, r5, #6
   127e4:	vst1.8	{d16}, [r5]
   127e8:	vst1.8	{d17}, [r0]
   127ec:	mov	r0, r5
   127f0:	bl	11614 <strlen@plt>
   127f4:	add	r0, r5, r0
   127f8:	mov	r1, #32
   127fc:	strh	r1, [r0]
   12800:	movw	r0, #47571	; 0xb9d3
   12804:	movw	r1, #46080	; 0xb400
   12808:	movt	r0, #1
   1280c:	movt	r1, #1
   12810:	bl	11458 <printf@plt>
   12814:	movw	r0, #54344	; 0xd448
   12818:	mov	r1, #186	; 0xba
   1281c:	movt	r0, #2
   12820:	ldr	r2, [r0]
   12824:	add	r0, r5, #14
   12828:	bl	114b8 <fgets@plt>
   1282c:	cmp	r0, #0
   12830:	beq	12948 <__assert_fail@plt+0x11b4>
   12834:	ldrb	r7, [r5]
   12838:	movw	r4, #55496	; 0xd8c8
   1283c:	movw	r9, #55988	; 0xdab4
   12840:	mov	r8, #0
   12844:	mov	r1, #0
   12848:	movt	r4, #2
   1284c:	movt	r9, #2
   12850:	mov	r6, r4
   12854:	str	r8, [r9]
   12858:	cmp	r7, #0
   1285c:	beq	128ec <__assert_fail@plt+0x1158>
   12860:	movw	r6, #55496	; 0xd8c8
   12864:	movt	r6, #2
   12868:	bl	115f0 <__ctype_b_loc@plt>
   1286c:	mov	r2, #0
   12870:	ldr	r1, [r0]
   12874:	uxtb	r3, r7
   12878:	add	r3, r1, r3, lsl #1
   1287c:	ldrb	r3, [r3, #1]
   12880:	tst	r3, #32
   12884:	beq	128a4 <__assert_fail@plt+0x1110>
   12888:	ldrb	r3, [r5, #1]!
   1288c:	add	r7, r1, r3, lsl #1
   12890:	ldrb	r7, [r7, #1]
   12894:	tst	r7, #32
   12898:	bne	12888 <__assert_fail@plt+0x10f4>
   1289c:	cmp	r3, #0
   128a0:	beq	128e8 <__assert_fail@plt+0x1154>
   128a4:	ldr	r1, [r9]
   128a8:	str	r5, [r6], #4
   128ac:	add	r1, r1, #1
   128b0:	str	r1, [r9]
   128b4:	ldrb	r3, [r5]
   128b8:	cmp	r3, #0
   128bc:	beq	128ec <__assert_fail@plt+0x1158>
   128c0:	ldr	r7, [r0]
   128c4:	add	r5, r5, #1
   128c8:	add	r3, r7, r3, lsl #1
   128cc:	ldrb	r3, [r3, #1]
   128d0:	tst	r3, #32
   128d4:	beq	128b4 <__assert_fail@plt+0x1120>
   128d8:	strb	r2, [r5, #-1]
   128dc:	ldrb	r7, [r5]
   128e0:	cmp	r7, #0
   128e4:	bne	12870 <__assert_fail@plt+0x10dc>
   128e8:	ldr	r1, [r9]
   128ec:	str	r8, [r6]
   128f0:	cmp	r1, #2
   128f4:	beq	1290c <__assert_fail@plt+0x1178>
   128f8:	ldr	r6, [r4]
   128fc:	b	1294c <__assert_fail@plt+0x11b8>
   12900:	mov	r1, r0
   12904:	cmp	r1, #2
   12908:	bne	128f8 <__assert_fail@plt+0x1164>
   1290c:	ldr	r4, [r4, #4]
   12910:	mov	r1, #0
   12914:	mov	r2, #10
   12918:	mov	r0, r4
   1291c:	bl	1144c <strtol@plt>
   12920:	cmn	r0, #1
   12924:	movwgt	r1, #54116	; 0xd364
   12928:	movtgt	r1, #2
   1292c:	strgt	r0, [r1]
   12930:	popgt	{r4, r5, r6, r7, r8, r9, fp, pc}
   12934:	movw	r0, #46106	; 0xb41a
   12938:	mov	r1, r4
   1293c:	movt	r0, #1
   12940:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12944:	b	11458 <printf@plt>
   12948:	str	r6, [r4]
   1294c:	movw	r0, #46089	; 0xb409
   12950:	mov	r1, r6
   12954:	movt	r0, #1
   12958:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1295c:	b	11458 <printf@plt>
   12960:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12964:	add	fp, sp, #24
   12968:	mov	r4, r1
   1296c:	cmp	r0, #1
   12970:	bgt	12aa4 <__assert_fail@plt+0x1310>
   12974:	movw	r6, #47112	; 0xb808
   12978:	movw	r5, #56028	; 0xdadc
   1297c:	movt	r6, #1
   12980:	movt	r5, #2
   12984:	vld1.64	{d16-d17}, [r6]
   12988:	mov	r7, r5
   1298c:	mov	r0, r5
   12990:	vst1.8	{d16-d17}, [r7]!
   12994:	bl	11614 <strlen@plt>
   12998:	add	r0, r5, r0
   1299c:	mov	r1, #32
   129a0:	strh	r1, [r0]
   129a4:	movw	r0, #47571	; 0xb9d3
   129a8:	movw	r1, #46080	; 0xb400
   129ac:	movt	r0, #1
   129b0:	movt	r1, #1
   129b4:	bl	11458 <printf@plt>
   129b8:	movw	r0, #54344	; 0xd448
   129bc:	mov	r1, #184	; 0xb8
   129c0:	movt	r0, #2
   129c4:	ldr	r2, [r0]
   129c8:	mov	r0, r7
   129cc:	bl	114b8 <fgets@plt>
   129d0:	cmp	r0, #0
   129d4:	beq	12aec <__assert_fail@plt+0x1358>
   129d8:	ldrb	r7, [r5]
   129dc:	movw	r4, #55496	; 0xd8c8
   129e0:	movw	r9, #55988	; 0xdab4
   129e4:	mov	r8, #0
   129e8:	mov	r1, #0
   129ec:	movt	r4, #2
   129f0:	movt	r9, #2
   129f4:	mov	r6, r4
   129f8:	str	r8, [r9]
   129fc:	cmp	r7, #0
   12a00:	beq	12a90 <__assert_fail@plt+0x12fc>
   12a04:	movw	r6, #55496	; 0xd8c8
   12a08:	movt	r6, #2
   12a0c:	bl	115f0 <__ctype_b_loc@plt>
   12a10:	mov	r2, #0
   12a14:	ldr	r1, [r0]
   12a18:	uxtb	r3, r7
   12a1c:	add	r3, r1, r3, lsl #1
   12a20:	ldrb	r3, [r3, #1]
   12a24:	tst	r3, #32
   12a28:	beq	12a48 <__assert_fail@plt+0x12b4>
   12a2c:	ldrb	r3, [r5, #1]!
   12a30:	add	r7, r1, r3, lsl #1
   12a34:	ldrb	r7, [r7, #1]
   12a38:	tst	r7, #32
   12a3c:	bne	12a2c <__assert_fail@plt+0x1298>
   12a40:	cmp	r3, #0
   12a44:	beq	12a8c <__assert_fail@plt+0x12f8>
   12a48:	ldr	r1, [r9]
   12a4c:	str	r5, [r6], #4
   12a50:	add	r1, r1, #1
   12a54:	str	r1, [r9]
   12a58:	ldrb	r3, [r5]
   12a5c:	cmp	r3, #0
   12a60:	beq	12a90 <__assert_fail@plt+0x12fc>
   12a64:	ldr	r7, [r0]
   12a68:	add	r5, r5, #1
   12a6c:	add	r3, r7, r3, lsl #1
   12a70:	ldrb	r3, [r3, #1]
   12a74:	tst	r3, #32
   12a78:	beq	12a58 <__assert_fail@plt+0x12c4>
   12a7c:	strb	r2, [r5, #-1]
   12a80:	ldrb	r7, [r5]
   12a84:	cmp	r7, #0
   12a88:	bne	12a14 <__assert_fail@plt+0x1280>
   12a8c:	ldr	r1, [r9]
   12a90:	str	r8, [r6]
   12a94:	cmp	r1, #2
   12a98:	beq	12ab0 <__assert_fail@plt+0x131c>
   12a9c:	ldr	r6, [r4]
   12aa0:	b	12af0 <__assert_fail@plt+0x135c>
   12aa4:	mov	r1, r0
   12aa8:	cmp	r1, #2
   12aac:	bne	12a9c <__assert_fail@plt+0x1308>
   12ab0:	ldr	r4, [r4, #4]
   12ab4:	mov	r1, #0
   12ab8:	mov	r2, #10
   12abc:	mov	r0, r4
   12ac0:	bl	1144c <strtol@plt>
   12ac4:	cmn	r0, #1
   12ac8:	movwgt	r1, #54120	; 0xd368
   12acc:	movtgt	r1, #2
   12ad0:	strgt	r0, [r1]
   12ad4:	popgt	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ad8:	movw	r0, #46106	; 0xb41a
   12adc:	mov	r1, r4
   12ae0:	movt	r0, #1
   12ae4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ae8:	b	11458 <printf@plt>
   12aec:	str	r6, [r4]
   12af0:	movw	r0, #46089	; 0xb409
   12af4:	mov	r1, r6
   12af8:	movt	r0, #1
   12afc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b00:	b	11458 <printf@plt>
   12b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b08:	add	fp, sp, #28
   12b0c:	sub	sp, sp, #4
   12b10:	cmp	r0, #1
   12b14:	bne	12b68 <__assert_fail@plt+0x13d4>
   12b18:	movw	r0, #47168	; 0xb840
   12b1c:	movt	r0, #1
   12b20:	bl	115a8 <puts@plt>
   12b24:	movw	r0, #53856	; 0xd260
   12b28:	movt	r0, #2
   12b2c:	ldr	r2, [r0]
   12b30:	cmp	r2, #0
   12b34:	beq	12ca0 <__assert_fail@plt+0x150c>
   12b38:	movw	r4, #46230	; 0xb496
   12b3c:	add	r5, r0, #12
   12b40:	movt	r4, #1
   12b44:	ldr	r3, [r5, #-8]
   12b48:	mov	r0, r4
   12b4c:	mov	r1, #8
   12b50:	bl	11458 <printf@plt>
   12b54:	ldr	r2, [r5]
   12b58:	add	r5, r5, #12
   12b5c:	cmp	r2, #0
   12b60:	bne	12b44 <__assert_fail@plt+0x13b0>
   12b64:	b	12ca0 <__assert_fail@plt+0x150c>
   12b68:	cmp	r0, #2
   12b6c:	blt	12ca0 <__assert_fail@plt+0x150c>
   12b70:	movw	r8, #53856	; 0xd260
   12b74:	mov	r5, r1
   12b78:	movt	r8, #2
   12b7c:	mov	r9, r0
   12b80:	ldr	r0, [r8]
   12b84:	ldr	r1, [r5, #4]!
   12b88:	cmp	r0, #0
   12b8c:	beq	12c70 <__assert_fail@plt+0x14dc>
   12b90:	ldrb	ip, [r1]
   12b94:	mov	r6, #0
   12b98:	mov	r7, #0
   12b9c:	mov	r4, #0
   12ba0:	mov	r3, r8
   12ba4:	str	r5, [sp]
   12ba8:	clz	r2, ip
   12bac:	lsr	lr, r2, #5
   12bb0:	mov	r5, r4
   12bb4:	ldrb	r4, [r0]
   12bb8:	mov	r2, r6
   12bbc:	mov	sl, r7
   12bc0:	mov	r6, lr
   12bc4:	cmp	ip, r4
   12bc8:	mov	r4, r1
   12bcc:	bne	12bfc <__assert_fail@plt+0x1468>
   12bd0:	add	r0, r0, #1
   12bd4:	mov	r6, lr
   12bd8:	mov	r4, r1
   12bdc:	tst	r6, #1
   12be0:	bne	12c40 <__assert_fail@plt+0x14ac>
   12be4:	ldrb	r8, [r4, #1]!
   12be8:	ldrb	r7, [r0], #1
   12bec:	clz	r6, r8
   12bf0:	cmp	r8, r7
   12bf4:	lsr	r6, r6, #5
   12bf8:	beq	12bdc <__assert_fail@plt+0x1448>
   12bfc:	cmp	r6, #0
   12c00:	beq	12c1c <__assert_fail@plt+0x1488>
   12c04:	sub	r6, r4, r1
   12c08:	mov	r7, #1
   12c0c:	mov	r4, r3
   12c10:	cmp	r6, r2
   12c14:	bgt	12c28 <__assert_fail@plt+0x1494>
   12c18:	addeq	sl, sl, #1
   12c1c:	mov	r4, r5
   12c20:	mov	r7, sl
   12c24:	mov	r6, r2
   12c28:	ldr	r0, [r3, #12]!
   12c2c:	cmp	r0, #0
   12c30:	bne	12bb0 <__assert_fail@plt+0x141c>
   12c34:	cmp	r7, #1
   12c38:	mvngt	r4, #0
   12c3c:	b	12c44 <__assert_fail@plt+0x14b0>
   12c40:	mov	r4, r3
   12c44:	ldr	r5, [sp]
   12c48:	movw	r8, #53856	; 0xd260
   12c4c:	movt	r8, #2
   12c50:	cmp	r4, #0
   12c54:	beq	12c7c <__assert_fail@plt+0x14e8>
   12c58:	cmn	r4, #1
   12c5c:	bne	12c8c <__assert_fail@plt+0x14f8>
   12c60:	movw	r0, #46239	; 0xb49f
   12c64:	movt	r0, #1
   12c68:	bl	11458 <printf@plt>
   12c6c:	b	12c94 <__assert_fail@plt+0x1500>
   12c70:	mov	r4, #0
   12c74:	cmp	r4, #0
   12c78:	bne	12c58 <__assert_fail@plt+0x14c4>
   12c7c:	movw	r0, #46267	; 0xb4bb
   12c80:	movt	r0, #1
   12c84:	bl	11458 <printf@plt>
   12c88:	b	12c94 <__assert_fail@plt+0x1500>
   12c8c:	ldr	r0, [r4, #4]
   12c90:	bl	115a8 <puts@plt>
   12c94:	sub	r0, r9, #1
   12c98:	cmp	r9, #2
   12c9c:	bgt	12b7c <__assert_fail@plt+0x13e8>
   12ca0:	sub	sp, fp, #28
   12ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ca8:	push	{fp, lr}
   12cac:	mov	fp, sp
   12cb0:	sub	sp, sp, #8
   12cb4:	mov	r5, r0
   12cb8:	ldr	r0, [r1]
   12cbc:	mov	r4, r1
   12cc0:	bl	18d74 <argp_parse@@Base+0x13fc>
   12cc4:	movw	r1, #49749	; 0xc255
   12cc8:	mov	r0, #6
   12ccc:	movt	r1, #1
   12cd0:	bl	116d4 <setlocale@plt>
   12cd4:	movw	r0, #57268	; 0xdfb4
   12cd8:	movw	r1, #45791	; 0xb2df
   12cdc:	movw	r6, #45716	; 0xb294
   12ce0:	movt	r0, #2
   12ce4:	movt	r1, #1
   12ce8:	movt	r6, #1
   12cec:	str	r1, [r0]
   12cf0:	movw	r1, #54248	; 0xd3e8
   12cf4:	mov	r0, r6
   12cf8:	movt	r1, #2
   12cfc:	bl	18b50 <argp_parse@@Base+0x11d8>
   12d00:	movw	r0, #54040	; 0xd318
   12d04:	mov	r7, #0
   12d08:	mov	r1, r5
   12d0c:	mov	r2, r4
   12d10:	mov	r3, #0
   12d14:	movt	r0, #2
   12d18:	str	r7, [sp]
   12d1c:	str	r7, [sp, #4]
   12d20:	bl	17978 <argp_parse@@Base>
   12d24:	movw	r1, #45815	; 0xb2f7
   12d28:	mov	r0, r6
   12d2c:	movt	r1, #1
   12d30:	bl	11644 <getservbyname@plt>
   12d34:	cmp	r0, #0
   12d38:	mov	r1, #69	; 0x45
   12d3c:	ldrhne	r0, [r0, #8]
   12d40:	rev16ne	r1, r0
   12d44:	movw	r0, #54360	; 0xd458
   12d48:	movt	r0, #2
   12d4c:	str	r1, [r0]
   12d50:	mov	r0, #0
   12d54:	bl	11758 <isatty@plt>
   12d58:	movw	r2, #47080	; 0xb7e8
   12d5c:	movw	r1, #54364	; 0xd45c
   12d60:	movt	r2, #1
   12d64:	movt	r1, #2
   12d68:	vldr	d16, [r2]
   12d6c:	str	r0, [r1]
   12d70:	movw	r0, #55996	; 0xdabc
   12d74:	movw	r1, #11772	; 0x2dfc
   12d78:	movt	r0, #2
   12d7c:	movt	r1, #1
   12d80:	strb	r7, [r0, #8]
   12d84:	vst1.8	{d16}, [r0]
   12d88:	mov	r0, #2
   12d8c:	bl	114dc <signal@plt>
   12d90:	movw	r4, #54036	; 0xd314
   12d94:	movt	r4, #2
   12d98:	ldr	r0, [r4]
   12d9c:	cmp	r0, #2
   12da0:	blt	12dc8 <__assert_fail@plt+0x1634>
   12da4:	movw	r0, #55576	; 0xd918
   12da8:	movt	r0, #2
   12dac:	bl	1147c <_setjmp@plt>
   12db0:	cmp	r0, #0
   12db4:	bne	12df4 <__assert_fail@plt+0x1660>
   12db8:	ldr	r0, [r4]
   12dbc:	movw	r1, #54024	; 0xd308
   12dc0:	movt	r1, #2
   12dc4:	bl	11890 <__assert_fail@plt+0xfc>
   12dc8:	movw	r0, #55576	; 0xd918
   12dcc:	movt	r0, #2
   12dd0:	bl	1147c <_setjmp@plt>
   12dd4:	cmp	r0, #0
   12dd8:	beq	12df0 <__assert_fail@plt+0x165c>
   12ddc:	movw	r0, #54348	; 0xd44c
   12de0:	movt	r0, #2
   12de4:	ldr	r1, [r0]
   12de8:	mov	r0, #10
   12dec:	bl	11704 <putc@plt>
   12df0:	bl	12e28 <__assert_fail@plt+0x1694>
   12df4:	mov	r0, #0
   12df8:	bl	115fc <exit@plt>
   12dfc:	push	{fp, lr}
   12e00:	mov	fp, sp
   12e04:	mov	r0, #14
   12e08:	mov	r1, #1
   12e0c:	bl	114dc <signal@plt>
   12e10:	mov	r0, #0
   12e14:	bl	1150c <alarm@plt>
   12e18:	movw	r0, #55576	; 0xd918
   12e1c:	mvn	r1, #0
   12e20:	movt	r0, #2
   12e24:	bl	11470 <longjmp@plt>
   12e28:	push	{fp, lr}
   12e2c:	mov	fp, sp
   12e30:	movw	r8, #54364	; 0xd45c
   12e34:	movw	r9, #54344	; 0xd448
   12e38:	movw	r5, #56028	; 0xdadc
   12e3c:	movt	r8, #2
   12e40:	movt	r9, #2
   12e44:	movt	r5, #2
   12e48:	b	12e58 <__assert_fail@plt+0x16c4>
   12e4c:	movw	r0, #47248	; 0xb890
   12e50:	movt	r0, #1
   12e54:	bl	115a8 <puts@plt>
   12e58:	ldr	r0, [r8]
   12e5c:	cmp	r0, #0
   12e60:	beq	12e7c <__assert_fail@plt+0x16e8>
   12e64:	movw	r0, #53576	; 0xd148
   12e68:	movt	r0, #2
   12e6c:	ldr	r1, [r0]
   12e70:	movw	r0, #46805	; 0xb6d5
   12e74:	movt	r0, #1
   12e78:	bl	11458 <printf@plt>
   12e7c:	ldr	r2, [r9]
   12e80:	mov	r0, r5
   12e84:	mov	r1, #200	; 0xc8
   12e88:	bl	114b8 <fgets@plt>
   12e8c:	cmp	r0, #0
   12e90:	beq	13030 <__assert_fail@plt+0x189c>
   12e94:	ldrb	r4, [r5]
   12e98:	cmp	r4, #0
   12e9c:	beq	12e58 <__assert_fail@plt+0x16c4>
   12ea0:	movw	r0, #55988	; 0xdab4
   12ea4:	mov	r1, #0
   12ea8:	movt	r0, #2
   12eac:	str	r1, [r0]
   12eb0:	bl	115f0 <__ctype_b_loc@plt>
   12eb4:	movw	r2, #55496	; 0xd8c8
   12eb8:	mov	r1, r0
   12ebc:	mov	r3, r5
   12ec0:	movt	r2, #2
   12ec4:	ldr	r0, [r1]
   12ec8:	uxtb	r7, r4
   12ecc:	add	r7, r0, r7, lsl #1
   12ed0:	ldrb	r7, [r7, #1]
   12ed4:	tst	r7, #32
   12ed8:	beq	12ef8 <__assert_fail@plt+0x1764>
   12edc:	ldrb	r7, [r3, #1]!
   12ee0:	add	r6, r0, r7, lsl #1
   12ee4:	ldrb	r6, [r6, #1]
   12ee8:	tst	r6, #32
   12eec:	bne	12edc <__assert_fail@plt+0x1748>
   12ef0:	cmp	r7, #0
   12ef4:	beq	12f4c <__assert_fail@plt+0x17b8>
   12ef8:	movw	r0, #55988	; 0xdab4
   12efc:	str	r3, [r2], #4
   12f00:	movt	r0, #2
   12f04:	mov	r7, r0
   12f08:	ldr	r0, [r0]
   12f0c:	add	r0, r0, #1
   12f10:	str	r0, [r7]
   12f14:	ldrb	r7, [r3]
   12f18:	cmp	r7, #0
   12f1c:	beq	12f58 <__assert_fail@plt+0x17c4>
   12f20:	ldr	r6, [r1]
   12f24:	add	r3, r3, #1
   12f28:	add	r7, r6, r7, lsl #1
   12f2c:	ldrb	r7, [r7, #1]
   12f30:	tst	r7, #32
   12f34:	beq	12f14 <__assert_fail@plt+0x1780>
   12f38:	mov	r0, #0
   12f3c:	strb	r0, [r3, #-1]
   12f40:	ldrb	r4, [r3]
   12f44:	cmp	r4, #0
   12f48:	bne	12ec4 <__assert_fail@plt+0x1730>
   12f4c:	movw	r0, #55988	; 0xdab4
   12f50:	movt	r0, #2
   12f54:	ldr	r0, [r0]
   12f58:	mov	r1, #0
   12f5c:	cmp	r0, #0
   12f60:	str	r1, [r2]
   12f64:	beq	12e58 <__assert_fail@plt+0x16c4>
   12f68:	movw	r6, #53856	; 0xd260
   12f6c:	movt	r6, #2
   12f70:	ldr	r3, [r6]
   12f74:	cmp	r3, #0
   12f78:	beq	1308c <__assert_fail@plt+0x18f8>
   12f7c:	movw	r1, #55496	; 0xd8c8
   12f80:	mov	r7, #0
   12f84:	mov	r5, #0
   12f88:	mov	r4, #0
   12f8c:	movt	r1, #2
   12f90:	ldr	r1, [r1]
   12f94:	ldrb	ip, [r1]
   12f98:	clz	r2, ip
   12f9c:	lsr	lr, r2, #5
   12fa0:	mov	r2, r4
   12fa4:	ldrb	r4, [r3]
   12fa8:	mov	r8, r5
   12fac:	mov	r9, r7
   12fb0:	mov	r5, lr
   12fb4:	cmp	ip, r4
   12fb8:	mov	r4, r1
   12fbc:	bne	12fec <__assert_fail@plt+0x1858>
   12fc0:	add	r3, r3, #1
   12fc4:	mov	r5, lr
   12fc8:	mov	r4, r1
   12fcc:	tst	r5, #1
   12fd0:	bne	13044 <__assert_fail@plt+0x18b0>
   12fd4:	ldrb	sl, [r4, #1]!
   12fd8:	ldrb	r7, [r3], #1
   12fdc:	clz	r5, sl
   12fe0:	cmp	sl, r7
   12fe4:	lsr	r5, r5, #5
   12fe8:	beq	12fcc <__assert_fail@plt+0x1838>
   12fec:	cmp	r5, #0
   12ff0:	beq	1300c <__assert_fail@plt+0x1878>
   12ff4:	sub	r7, r4, r1
   12ff8:	mov	r5, #1
   12ffc:	mov	r4, r6
   13000:	cmp	r7, r9
   13004:	bgt	13018 <__assert_fail@plt+0x1884>
   13008:	addeq	r8, r8, #1
   1300c:	mov	r4, r2
   13010:	mov	r5, r8
   13014:	mov	r7, r9
   13018:	ldr	r3, [r6, #12]!
   1301c:	cmp	r3, #0
   13020:	bne	12fa0 <__assert_fail@plt+0x180c>
   13024:	cmp	r5, #1
   13028:	mvngt	r4, #0
   1302c:	b	13048 <__assert_fail@plt+0x18b4>
   13030:	ldr	r0, [r9]
   13034:	bl	11608 <feof@plt>
   13038:	cmp	r0, #0
   1303c:	beq	12e58 <__assert_fail@plt+0x16c4>
   13040:	b	130a8 <__assert_fail@plt+0x1914>
   13044:	mov	r4, r6
   13048:	movw	r5, #54364	; 0xd45c
   1304c:	movt	r5, #2
   13050:	mov	r8, r5
   13054:	movw	r5, #54344	; 0xd448
   13058:	movt	r5, #2
   1305c:	mov	r9, r5
   13060:	movw	r5, #56028	; 0xdadc
   13064:	movt	r5, #2
   13068:	cmp	r4, #0
   1306c:	beq	13098 <__assert_fail@plt+0x1904>
   13070:	cmn	r4, #1
   13074:	beq	12e4c <__assert_fail@plt+0x16b8>
   13078:	ldr	r2, [r4, #8]
   1307c:	movw	r1, #55496	; 0xd8c8
   13080:	movt	r1, #2
   13084:	blx	r2
   13088:	b	12e58 <__assert_fail@plt+0x16c4>
   1308c:	mov	r4, #0
   13090:	cmp	r4, #0
   13094:	bne	13070 <__assert_fail@plt+0x18dc>
   13098:	movw	r0, #47216	; 0xb870
   1309c:	movt	r0, #1
   130a0:	bl	115a8 <puts@plt>
   130a4:	b	12e58 <__assert_fail@plt+0x16c4>
   130a8:	mov	r0, #0
   130ac:	bl	115fc <exit@plt>
   130b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130b4:	add	fp, sp, #28
   130b8:	sub	sp, sp, #4
   130bc:	vpush	{d8-d9}
   130c0:	sub	sp, sp, #176	; 0xb0
   130c4:	add	r2, sp, #16
   130c8:	mov	r4, r0
   130cc:	vmov.i32	q8, #0	; 0x00000000
   130d0:	movw	r1, #45716	; 0xb294
   130d4:	add	r3, sp, #12
   130d8:	add	r0, r2, #4
   130dc:	movt	r1, #1
   130e0:	vst1.32	{d16-d17}, [r0]
   130e4:	add	r0, r2, #16
   130e8:	vst1.32	{d16-d17}, [r0]
   130ec:	mov	r0, #194	; 0xc2
   130f0:	str	r0, [sp, #16]
   130f4:	mov	r0, #2
   130f8:	str	r0, [sp, #24]
   130fc:	mov	r0, r4
   13100:	bl	11740 <getaddrinfo@plt>
   13104:	cmp	r0, #0
   13108:	bne	1325c <__assert_fail@plt+0x1ac8>
   1310c:	movw	r6, #54124	; 0xd36c
   13110:	movt	r6, #2
   13114:	ldr	r0, [r6]
   13118:	cmp	r0, #0
   1311c:	blt	1312c <__assert_fail@plt+0x1998>
   13120:	bl	11788 <close@plt>
   13124:	mvn	r0, #0
   13128:	str	r0, [r6]
   1312c:	ldr	r5, [sp, #12]
   13130:	cmp	r5, #0
   13134:	beq	131dc <__assert_fail@plt+0x1a48>
   13138:	add	r4, sp, #48	; 0x30
   1313c:	vmov.i32	q4, #0	; 0x00000000
   13140:	add	r0, r4, #96	; 0x60
   13144:	add	r7, r4, #64	; 0x40
   13148:	add	r8, r4, #48	; 0x30
   1314c:	add	r9, r4, #32
   13150:	add	sl, r4, #16
   13154:	str	r0, [sp, #8]
   13158:	add	r0, r4, #80	; 0x50
   1315c:	str	r0, [sp, #4]
   13160:	ldmib	r5, {r0, r1, r2}
   13164:	bl	1174c <socket@plt>
   13168:	cmp	r0, #0
   1316c:	str	r0, [r6]
   13170:	blt	131d0 <__assert_fail@plt+0x1a3c>
   13174:	mov	r1, r4
   13178:	mov	r2, #112	; 0x70
   1317c:	vst1.64	{d8-d9}, [r7]
   13180:	vst1.64	{d8-d9}, [r8]
   13184:	vst1.64	{d8-d9}, [r9]
   13188:	vst1.64	{d8-d9}, [sl]
   1318c:	vst1.64	{d8-d9}, [r1], r2
   13190:	vst1.64	{d8-d9}, [r1]
   13194:	ldr	r1, [sp, #8]
   13198:	vst1.64	{d8-d9}, [r1]
   1319c:	ldr	r1, [sp, #4]
   131a0:	vst1.64	{d8-d9}, [r1]
   131a4:	ldr	r1, [r5, #4]
   131a8:	strh	r1, [sp, #48]	; 0x30
   131ac:	mov	r1, r4
   131b0:	ldr	r2, [r5, #16]
   131b4:	bl	1165c <bind@plt>
   131b8:	cmp	r0, #0
   131bc:	beq	131e4 <__assert_fail@plt+0x1a50>
   131c0:	ldr	r0, [r6]
   131c4:	bl	11788 <close@plt>
   131c8:	mvn	r0, #0
   131cc:	str	r0, [r6]
   131d0:	ldr	r5, [r5, #28]
   131d4:	cmp	r5, #0
   131d8:	bne	13160 <__assert_fail@plt+0x19cc>
   131dc:	mvn	r4, #0
   131e0:	b	13240 <__assert_fail@plt+0x1aac>
   131e4:	ldr	r2, [r5, #16]
   131e8:	movw	r0, #54508	; 0xd4ec
   131ec:	ldr	r1, [r5, #20]
   131f0:	movt	r0, #2
   131f4:	str	r2, [r0]
   131f8:	movw	r0, #54376	; 0xd468
   131fc:	movt	r0, #2
   13200:	bl	114d0 <memcpy@plt>
   13204:	movw	r0, #54368	; 0xd460
   13208:	movw	r4, #55992	; 0xdab8
   1320c:	mov	r1, #1
   13210:	movt	r0, #2
   13214:	movt	r4, #2
   13218:	strb	r1, [r0]
   1321c:	ldr	r0, [r4]
   13220:	bl	18c48 <argp_parse@@Base+0x12d0>
   13224:	ldr	r0, [r5, #24]
   13228:	cmp	r0, #0
   1322c:	movweq	r0, #46606	; 0xb60e
   13230:	movteq	r0, #1
   13234:	bl	198fc <argp_parse@@Base+0x1f84>
   13238:	str	r0, [r4]
   1323c:	mov	r4, #0
   13240:	ldr	r0, [sp, #12]
   13244:	bl	11734 <freeaddrinfo@plt>
   13248:	mov	r0, r4
   1324c:	sub	sp, fp, #48	; 0x30
   13250:	vpop	{d8-d9}
   13254:	add	sp, sp, #4
   13258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1325c:	movw	r1, #54336	; 0xd440
   13260:	movt	r1, #2
   13264:	ldr	r5, [r1]
   13268:	bl	114ac <gai_strerror@plt>
   1326c:	movw	r1, #46592	; 0xb600
   13270:	mov	r3, r0
   13274:	mov	r0, r5
   13278:	mov	r2, r4
   1327c:	movt	r1, #1
   13280:	bl	1162c <fprintf@plt>
   13284:	mvn	r4, #0
   13288:	b	13248 <__assert_fail@plt+0x1ab4>
   1328c:	push	{r4, r5, fp, lr}
   13290:	add	fp, sp, #8
   13294:	mov	r4, r0
   13298:	ldrb	r0, [r0]
   1329c:	cmp	r0, #0
   132a0:	beq	132d8 <__assert_fail@plt+0x1b44>
   132a4:	mov	r5, #0
   132a8:	mov	r0, r4
   132ac:	mov	r1, #47	; 0x2f
   132b0:	bl	116e0 <strrchr@plt>
   132b4:	cmp	r0, #0
   132b8:	beq	132d8 <__assert_fail@plt+0x1b44>
   132bc:	ldrb	r1, [r0, #1]
   132c0:	cmp	r1, #0
   132c4:	bne	132e0 <__assert_fail@plt+0x1b4c>
   132c8:	strb	r5, [r0]
   132cc:	ldrb	r0, [r4]
   132d0:	cmp	r0, #0
   132d4:	bne	132a8 <__assert_fail@plt+0x1b14>
   132d8:	mov	r0, r4
   132dc:	pop	{r4, r5, fp, pc}
   132e0:	add	r4, r0, #1
   132e4:	mov	r0, r4
   132e8:	pop	{r4, r5, fp, pc}
   132ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132f0:	add	fp, sp, #28
   132f4:	sub	sp, sp, #4
   132f8:	vpush	{d8}
   132fc:	sub	sp, sp, #184	; 0xb8
   13300:	mov	r4, r0
   13304:	movw	r0, #55972	; 0xdaa4
   13308:	str	r1, [sp, #20]
   1330c:	mov	r1, #0
   13310:	mov	r5, r2
   13314:	mov	r6, #0
   13318:	movt	r0, #2
   1331c:	bl	1156c <gettimeofday@plt>
   13320:	bl	140a4 <__assert_fail@plt+0x2910>
   13324:	movw	r1, #46575	; 0xb5ef
   13328:	str	r0, [fp, #-44]	; 0xffffffd4
   1332c:	mov	r0, r4
   13330:	movt	r1, #1
   13334:	bl	1141c <fdopen@plt>
   13338:	movw	r1, #47080	; 0xb7e8
   1333c:	str	r0, [sp, #28]
   13340:	mov	r0, r5
   13344:	str	r5, [sp, #24]
   13348:	movt	r1, #1
   1334c:	bl	11440 <strcmp@plt>
   13350:	clz	r0, r0
   13354:	movw	r1, #15664	; 0x3d30
   13358:	lsr	r0, r0, #5
   1335c:	movt	r1, #1
   13360:	str	r0, [fp, #-56]	; 0xffffffc8
   13364:	mov	r0, #14
   13368:	str	r6, [fp, #-48]	; 0xffffffd0
   1336c:	str	r6, [fp, #-60]	; 0xffffffc4
   13370:	bl	114dc <signal@plt>
   13374:	movw	sl, #54504	; 0xd4e8
   13378:	movw	r7, #54124	; 0xd36c
   1337c:	movw	r4, #54584	; 0xd538
   13380:	mov	r5, #128	; 0x80
   13384:	add	r8, sp, #32
   13388:	add	r6, sp, #36	; 0x24
   1338c:	movt	sl, #2
   13390:	movt	r7, #2
   13394:	movt	r4, #2
   13398:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1339c:	cmp	r0, #0
   133a0:	beq	133e4 <__assert_fail@plt+0x1c50>
   133a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   133a8:	ldr	r0, [sp, #28]
   133ac:	sub	r1, fp, #44	; 0x2c
   133b0:	bl	14100 <__assert_fail@plt+0x296c>
   133b4:	str	r0, [fp, #-52]	; 0xffffffcc
   133b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   133bc:	cmn	r0, #1
   133c0:	ble	13758 <__assert_fail@plt+0x1fc4>
   133c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133c8:	mov	r1, #768	; 0x300
   133cc:	strh	r1, [r0]
   133d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   133d4:	rev16	r1, r1
   133d8:	strh	r1, [r0, #2]
   133dc:	mov	r1, #0
   133e0:	b	13464 <__assert_fail@plt+0x1cd0>
   133e4:	ldr	r9, [fp, #-44]	; 0xffffffd4
   133e8:	mov	r0, #512	; 0x200
   133ec:	str	r9, [sp, #16]
   133f0:	strh	r0, [r9], #2
   133f4:	ldr	r0, [sp, #20]
   133f8:	bl	11614 <strlen@plt>
   133fc:	ldr	r1, [sp, #20]
   13400:	str	r0, [sp, #12]
   13404:	mov	r0, r9
   13408:	movw	r2, #502	; 0x1f6
   1340c:	bl	11674 <strncpy@plt>
   13410:	ldr	r1, [sp, #12]
   13414:	lsr	r0, r1, #1
   13418:	cmp	r0, #251	; 0xfb
   1341c:	movw	r0, #502	; 0x1f6
   13420:	movcs	r1, r0
   13424:	mov	r0, #0
   13428:	strb	r0, [r9, r1]!
   1342c:	ldr	r1, [sp, #24]
   13430:	add	r9, r9, #1
   13434:	mov	r0, r9
   13438:	bl	11560 <strcpy@plt>
   1343c:	ldr	r0, [sp, #24]
   13440:	bl	11614 <strlen@plt>
   13444:	mov	r1, #0
   13448:	strb	r1, [r9, r0]!
   1344c:	mvn	r0, #3
   13450:	ldr	r2, [sp, #16]
   13454:	sub	r0, r0, r2
   13458:	add	r0, r0, r9
   1345c:	add	r0, r0, #1
   13460:	str	r0, [fp, #-52]	; 0xffffffcc
   13464:	movw	r0, #55968	; 0xdaa0
   13468:	movt	r0, #2
   1346c:	str	r1, [r0]
   13470:	movw	r0, #55104	; 0xd740
   13474:	movt	r0, #2
   13478:	bl	1147c <_setjmp@plt>
   1347c:	b	13584 <__assert_fail@plt+0x1df0>
   13480:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13484:	ldr	r0, [sp, #28]
   13488:	bl	14170 <__assert_fail@plt+0x29dc>
   1348c:	movw	r0, #54116	; 0xd364
   13490:	movt	r0, #2
   13494:	ldr	r0, [r0]
   13498:	bl	1150c <alarm@plt>
   1349c:	ldr	r0, [r7]
   134a0:	mov	r1, r4
   134a4:	mov	r2, #516	; 0x204
   134a8:	mov	r3, #0
   134ac:	str	r5, [sp, #32]
   134b0:	stm	sp, {r6, r8}
   134b4:	bl	11500 <recvfrom@plt>
   134b8:	cmp	r0, #1
   134bc:	blt	1349c <__assert_fail@plt+0x1d08>
   134c0:	mov	r9, r0
   134c4:	mov	r0, #0
   134c8:	bl	1150c <alarm@plt>
   134cc:	ldrh	r0, [sp, #38]	; 0x26
   134d0:	movw	r1, #54376	; 0xd468
   134d4:	movt	r1, #2
   134d8:	strh	r0, [r1, #2]
   134dc:	ldr	r0, [sl]
   134e0:	cmp	r0, #0
   134e4:	beq	134fc <__assert_fail@plt+0x1d68>
   134e8:	movw	r0, #46349	; 0xb50d
   134ec:	mov	r1, r4
   134f0:	mov	r2, r9
   134f4:	movt	r0, #1
   134f8:	bl	13eb4 <__assert_fail@plt+0x2720>
   134fc:	ldrh	r0, [r4]
   13500:	rev16	r1, r0
   13504:	strh	r1, [r4]
   13508:	ldrh	r2, [r4, #2]
   1350c:	rev16	r1, r2
   13510:	strh	r1, [r4, #2]
   13514:	rev	r1, r0
   13518:	rev	r0, r2
   1351c:	mov	r2, #4
   13520:	lsr	r0, r0, #16
   13524:	cmp	r2, r1, lsr #16
   13528:	beq	1353c <__assert_fail@plt+0x1da8>
   1352c:	lsr	r1, r1, #16
   13530:	cmp	r1, #5
   13534:	bne	1348c <__assert_fail@plt+0x1cf8>
   13538:	b	13628 <__assert_fail@plt+0x1e94>
   1353c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13540:	cmp	r1, r0
   13544:	beq	135ec <__assert_fail@plt+0x1e58>
   13548:	ldr	r0, [r7]
   1354c:	bl	143e8 <__assert_fail@plt+0x2c54>
   13550:	cmp	r0, #0
   13554:	movne	r1, r0
   13558:	ldrne	r0, [sl]
   1355c:	cmpne	r0, #0
   13560:	beq	13570 <__assert_fail@plt+0x1ddc>
   13564:	movw	r0, #46377	; 0xb529
   13568:	movt	r0, #1
   1356c:	bl	11458 <printf@plt>
   13570:	ldrh	r0, [r4, #2]
   13574:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13578:	sub	r1, r1, #1
   1357c:	cmp	r1, r0
   13580:	bne	1348c <__assert_fail@plt+0x1cf8>
   13584:	ldr	r0, [sl]
   13588:	cmp	r0, #0
   1358c:	beq	135a8 <__assert_fail@plt+0x1e14>
   13590:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13594:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13598:	add	r2, r0, #4
   1359c:	movw	r0, #46331	; 0xb4fb
   135a0:	movt	r0, #1
   135a4:	bl	13eb4 <__assert_fail@plt+0x2720>
   135a8:	movw	r1, #54508	; 0xd4ec
   135ac:	ldr	r0, [r7]
   135b0:	movw	r2, #54376	; 0xd468
   135b4:	movt	r1, #2
   135b8:	movt	r2, #2
   135bc:	ldr	ip, [r1]
   135c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   135c8:	stm	sp, {r2, ip}
   135cc:	add	r2, r3, #4
   135d0:	mov	r3, #0
   135d4:	bl	116bc <sendto@plt>
   135d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   135dc:	add	r1, r1, #4
   135e0:	cmp	r0, r1
   135e4:	beq	13480 <__assert_fail@plt+0x1cec>
   135e8:	b	13748 <__assert_fail@plt+0x1fb4>
   135ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135f0:	cmp	r0, #1
   135f4:	ldrge	r0, [fp, #-52]	; 0xffffffcc
   135f8:	ldrge	r1, [fp, #-60]	; 0xffffffc4
   135fc:	addge	r0, r1, r0
   13600:	strge	r0, [fp, #-60]	; 0xffffffc4
   13604:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13608:	add	r0, r0, #1
   1360c:	str	r0, [fp, #-48]	; 0xffffffd0
   13610:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13614:	cmp	r0, #512	; 0x200
   13618:	ldrne	r0, [fp, #-48]	; 0xffffffd0
   1361c:	cmpne	r0, #1
   13620:	beq	13398 <__assert_fail@plt+0x1c04>
   13624:	b	1363c <__assert_fail@plt+0x1ea8>
   13628:	sxth	r1, r0
   1362c:	movw	r0, #46358	; 0xb516
   13630:	add	r2, r4, #4
   13634:	movt	r0, #1
   13638:	bl	11458 <printf@plt>
   1363c:	ldr	r0, [sp, #28]
   13640:	bl	116a4 <fclose@plt>
   13644:	movw	r4, #55980	; 0xdaac
   13648:	mov	r1, #0
   1364c:	movt	r4, #2
   13650:	mov	r0, r4
   13654:	bl	1156c <gettimeofday@plt>
   13658:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1365c:	cmp	r0, #0
   13660:	beq	13738 <__assert_fail@plt+0x1fa4>
   13664:	movw	r0, #55972	; 0xdaa4
   13668:	movw	r1, #46473	; 0xb589
   1366c:	vldr	s2, [r4]
   13670:	vmov.f64	d16, #36	; 0x41200000  10.0
   13674:	movt	r0, #2
   13678:	movt	r1, #5368	; 0x14f8
   1367c:	mov	r3, r0
   13680:	ldr	r0, [r0, #4]
   13684:	vldr	s0, [r3]
   13688:	smmul	r0, r0, r1
   1368c:	asr	r2, r0, #13
   13690:	add	r0, r2, r0, lsr #31
   13694:	ldr	r2, [r4, #4]
   13698:	vcvt.f64.s32	d17, s0
   1369c:	vmov	s4, r0
   136a0:	movw	r0, #46934	; 0xb756
   136a4:	vcvt.f64.s32	d18, s4
   136a8:	vcvt.f64.s32	d19, s2
   136ac:	movt	r0, #1
   136b0:	vmla.f64	d18, d17, d16
   136b4:	smmul	r1, r2, r1
   136b8:	asr	r2, r1, #13
   136bc:	add	r1, r2, r1, lsr #31
   136c0:	vmov	s6, r1
   136c4:	movw	r1, #46399	; 0xb53f
   136c8:	vcvt.f64.s32	d20, s6
   136cc:	ldr	r4, [fp, #-60]	; 0xffffffc4
   136d0:	movt	r1, #1
   136d4:	vmla.f64	d20, d19, d16
   136d8:	mov	r2, r4
   136dc:	vsub.f64	d17, d20, d18
   136e0:	vdiv.f64	d8, d17, d16
   136e4:	vstr	d8, [sp]
   136e8:	bl	11458 <printf@plt>
   136ec:	movw	r0, #54372	; 0xd464
   136f0:	movt	r0, #2
   136f4:	ldr	r0, [r0]
   136f8:	cmp	r0, #0
   136fc:	beq	13724 <__assert_fail@plt+0x1f90>
   13700:	vmov	s0, r4
   13704:	vmov.f64	d16, #32	; 0x41000000  8.0
   13708:	movw	r0, #46962	; 0xb772
   1370c:	vcvt.f64.u32	d17, s0
   13710:	movt	r0, #1
   13714:	vmul.f64	d16, d17, d16
   13718:	vdiv.f64	d16, d16, d8
   1371c:	vmov	r2, r3, d16
   13720:	bl	11458 <printf@plt>
   13724:	movw	r0, #54348	; 0xd44c
   13728:	movt	r0, #2
   1372c:	ldr	r1, [r0]
   13730:	mov	r0, #10
   13734:	bl	11704 <putc@plt>
   13738:	sub	sp, fp, #40	; 0x28
   1373c:	vpop	{d8}
   13740:	add	sp, sp, #4
   13744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13748:	movw	r0, #46336	; 0xb500
   1374c:	movt	r0, #1
   13750:	bl	1153c <perror@plt>
   13754:	b	1363c <__assert_fail@plt+0x1ea8>
   13758:	bl	11638 <__errno_location@plt>
   1375c:	ldr	r0, [r0]
   13760:	add	r0, r0, #100	; 0x64
   13764:	bl	13d98 <__assert_fail@plt+0x2604>
   13768:	b	1363c <__assert_fail@plt+0x1ea8>
   1376c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13770:	add	fp, sp, #28
   13774:	sub	sp, sp, #4
   13778:	vpush	{d8}
   1377c:	sub	sp, sp, #176	; 0xb0
   13780:	mov	r5, r0
   13784:	movw	r0, #55972	; 0xdaa4
   13788:	str	r1, [sp, #8]
   1378c:	mov	r1, #0
   13790:	mov	r4, r2
   13794:	mov	r7, #0
   13798:	movt	r0, #2
   1379c:	bl	1156c <gettimeofday@plt>
   137a0:	bl	1404c <__assert_fail@plt+0x28b8>
   137a4:	movw	r1, #46404	; 0xb544
   137a8:	str	r0, [fp, #-44]	; 0xffffffd4
   137ac:	mov	r0, r5
   137b0:	movt	r1, #1
   137b4:	bl	1141c <fdopen@plt>
   137b8:	movw	r1, #47080	; 0xb7e8
   137bc:	mov	r6, r0
   137c0:	mov	r0, r4
   137c4:	str	r4, [sp, #12]
   137c8:	movt	r1, #1
   137cc:	bl	11440 <strcmp@plt>
   137d0:	clz	r0, r0
   137d4:	movw	r1, #15664	; 0x3d30
   137d8:	lsr	r0, r0, #5
   137dc:	movt	r1, #1
   137e0:	str	r0, [sp, #20]
   137e4:	mov	r0, #1
   137e8:	str	r0, [fp, #-48]	; 0xffffffd0
   137ec:	str	r0, [fp, #-56]	; 0xffffffc8
   137f0:	mov	r0, #14
   137f4:	str	r7, [fp, #-60]	; 0xffffffc4
   137f8:	bl	114dc <signal@plt>
   137fc:	movw	r7, #54584	; 0xd538
   13800:	movw	r4, #54124	; 0xd36c
   13804:	mov	r5, #128	; 0x80
   13808:	add	r8, sp, #24
   1380c:	add	sl, sp, #28
   13810:	str	r6, [sp, #16]
   13814:	movt	r7, #2
   13818:	movt	r4, #2
   1381c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13820:	cmp	r0, #0
   13824:	beq	138b0 <__assert_fail@plt+0x211c>
   13828:	mov	r6, r7
   1382c:	mov	r0, #256	; 0x100
   13830:	strh	r0, [r6], #2
   13834:	ldr	r0, [sp, #8]
   13838:	bl	11614 <strlen@plt>
   1383c:	ldr	r1, [sp, #8]
   13840:	mov	r9, r7
   13844:	mov	r7, r0
   13848:	mov	r0, r6
   1384c:	movw	r2, #502	; 0x1f6
   13850:	bl	11674 <strncpy@plt>
   13854:	lsr	r0, r7, #1
   13858:	cmp	r0, #251	; 0xfb
   1385c:	movw	r0, #502	; 0x1f6
   13860:	movcs	r7, r0
   13864:	mov	r0, #0
   13868:	strb	r0, [r6, r7]!
   1386c:	ldr	r7, [sp, #12]
   13870:	add	r6, r6, #1
   13874:	mov	r0, r6
   13878:	mov	r1, r7
   1387c:	bl	11560 <strcpy@plt>
   13880:	mov	r0, r7
   13884:	bl	11614 <strlen@plt>
   13888:	mov	r1, #0
   1388c:	mov	r7, r9
   13890:	strb	r1, [r6, r0]!
   13894:	add	r0, r6, #1
   13898:	ldr	r6, [sp, #16]
   1389c:	sub	r0, r0, r9
   138a0:	str	r0, [fp, #-52]	; 0xffffffcc
   138a4:	mov	r0, #0
   138a8:	str	r0, [fp, #-56]	; 0xffffffc8
   138ac:	b	138e0 <__assert_fail@plt+0x214c>
   138b0:	mov	r0, #1024	; 0x400
   138b4:	mov	r1, r7
   138b8:	strh	r0, [r7]
   138bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138c0:	rev16	r0, r0
   138c4:	strh	r0, [r7, #2]
   138c8:	mov	r0, #4
   138cc:	str	r0, [fp, #-52]	; 0xffffffcc
   138d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138d4:	add	r0, r0, #1
   138d8:	str	r0, [fp, #-48]	; 0xffffffd0
   138dc:	mov	r0, #0
   138e0:	movw	r1, #55968	; 0xdaa0
   138e4:	movt	r1, #2
   138e8:	str	r0, [r1]
   138ec:	movw	r0, #55104	; 0xd740
   138f0:	movt	r0, #2
   138f4:	bl	1147c <_setjmp@plt>
   138f8:	b	13a18 <__assert_fail@plt+0x2284>
   138fc:	ldr	r1, [sp, #20]
   13900:	mov	r0, r6
   13904:	bl	142ec <__assert_fail@plt+0x2b58>
   13908:	movw	r0, #54116	; 0xd364
   1390c:	movt	r0, #2
   13910:	ldr	r0, [r0]
   13914:	bl	1150c <alarm@plt>
   13918:	ldr	r0, [r4]
   1391c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13920:	mov	r2, #516	; 0x204
   13924:	mov	r3, #0
   13928:	str	r5, [sp, #24]
   1392c:	str	sl, [sp]
   13930:	str	r8, [sp, #4]
   13934:	bl	11500 <recvfrom@plt>
   13938:	cmp	r0, #1
   1393c:	blt	13918 <__assert_fail@plt+0x2184>
   13940:	mov	r9, r0
   13944:	mov	r0, #0
   13948:	bl	1150c <alarm@plt>
   1394c:	ldrh	r0, [sp, #30]
   13950:	movw	r1, #54376	; 0xd468
   13954:	movt	r1, #2
   13958:	strh	r0, [r1, #2]
   1395c:	movw	r0, #54504	; 0xd4e8
   13960:	movt	r0, #2
   13964:	ldr	r0, [r0]
   13968:	cmp	r0, #0
   1396c:	beq	13984 <__assert_fail@plt+0x21f0>
   13970:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13974:	movw	r0, #46349	; 0xb50d
   13978:	mov	r2, r9
   1397c:	movt	r0, #1
   13980:	bl	13eb4 <__assert_fail@plt+0x2720>
   13984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13988:	ldrh	r1, [r0]
   1398c:	rev16	r1, r1
   13990:	strh	r1, [r0]
   13994:	ldrh	r1, [r0, #2]
   13998:	rev16	r1, r1
   1399c:	strh	r1, [r0, #2]
   139a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139a4:	ldrh	r1, [r0]
   139a8:	cmp	r1, #3
   139ac:	beq	139bc <__assert_fail@plt+0x2228>
   139b0:	cmp	r1, #5
   139b4:	bne	13908 <__assert_fail@plt+0x2174>
   139b8:	b	13ac4 <__assert_fail@plt+0x2330>
   139bc:	ldrh	r0, [r0, #2]
   139c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   139c4:	cmp	r1, r0
   139c8:	beq	13a80 <__assert_fail@plt+0x22ec>
   139cc:	ldr	r0, [r4]
   139d0:	bl	143e8 <__assert_fail@plt+0x2c54>
   139d4:	cmp	r0, #0
   139d8:	beq	13a00 <__assert_fail@plt+0x226c>
   139dc:	mov	r1, r0
   139e0:	movw	r0, #54504	; 0xd4e8
   139e4:	movt	r0, #2
   139e8:	ldr	r0, [r0]
   139ec:	cmp	r0, #0
   139f0:	beq	13a00 <__assert_fail@plt+0x226c>
   139f4:	movw	r0, #46377	; 0xb529
   139f8:	movt	r0, #1
   139fc:	bl	11458 <printf@plt>
   13a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a04:	ldrh	r0, [r0, #2]
   13a08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a0c:	sub	r1, r1, #1
   13a10:	cmp	r1, r0
   13a14:	bne	13908 <__assert_fail@plt+0x2174>
   13a18:	movw	r0, #54504	; 0xd4e8
   13a1c:	movt	r0, #2
   13a20:	ldr	r0, [r0]
   13a24:	cmp	r0, #0
   13a28:	beq	13a40 <__assert_fail@plt+0x22ac>
   13a2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13a30:	movw	r0, #46331	; 0xb4fb
   13a34:	mov	r1, r7
   13a38:	movt	r0, #1
   13a3c:	bl	13eb4 <__assert_fail@plt+0x2720>
   13a40:	movw	r1, #54508	; 0xd4ec
   13a44:	ldr	r0, [r4]
   13a48:	movw	r3, #54376	; 0xd468
   13a4c:	movt	r1, #2
   13a50:	movt	r3, #2
   13a54:	ldr	r1, [r1]
   13a58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13a5c:	str	r3, [sp]
   13a60:	mov	r3, #0
   13a64:	str	r1, [sp, #4]
   13a68:	mov	r1, r7
   13a6c:	bl	116bc <sendto@plt>
   13a70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a74:	cmp	r0, r1
   13a78:	beq	138fc <__assert_fail@plt+0x2168>
   13a7c:	b	13c34 <__assert_fail@plt+0x24a0>
   13a80:	ldr	r3, [sp, #20]
   13a84:	sub	r2, r9, #4
   13a88:	mov	r0, r6
   13a8c:	sub	r1, fp, #44	; 0x2c
   13a90:	bl	1426c <__assert_fail@plt+0x2ad8>
   13a94:	str	r0, [fp, #-52]	; 0xffffffcc
   13a98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a9c:	cmn	r0, #1
   13aa0:	ble	13c4c <__assert_fail@plt+0x24b8>
   13aa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13aa8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13aac:	add	r0, r1, r0
   13ab0:	str	r0, [fp, #-60]	; 0xffffffc4
   13ab4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ab8:	cmp	r0, #512	; 0x200
   13abc:	beq	1381c <__assert_fail@plt+0x2088>
   13ac0:	b	13ad8 <__assert_fail@plt+0x2344>
   13ac4:	ldrsh	r1, [r0, #2]
   13ac8:	add	r2, r0, #4
   13acc:	movw	r0, #46358	; 0xb516
   13ad0:	movt	r0, #1
   13ad4:	bl	11458 <printf@plt>
   13ad8:	mov	r0, #1024	; 0x400
   13adc:	movw	r1, #54508	; 0xd4ec
   13ae0:	movw	r2, #54376	; 0xd468
   13ae4:	mov	r3, #0
   13ae8:	strh	r0, [r7]
   13aec:	movt	r1, #2
   13af0:	movt	r2, #2
   13af4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13af8:	ldr	r1, [r1]
   13afc:	str	r2, [sp]
   13b00:	mov	r2, #4
   13b04:	rev16	r0, r0
   13b08:	str	r1, [sp, #4]
   13b0c:	mov	r1, r7
   13b10:	strh	r0, [r7, #2]
   13b14:	ldr	r0, [r4]
   13b18:	bl	116bc <sendto@plt>
   13b1c:	ldr	r1, [sp, #20]
   13b20:	mov	r0, r6
   13b24:	bl	142ec <__assert_fail@plt+0x2b58>
   13b28:	mov	r0, r6
   13b2c:	bl	116a4 <fclose@plt>
   13b30:	movw	r4, #55980	; 0xdaac
   13b34:	mov	r1, #0
   13b38:	movt	r4, #2
   13b3c:	mov	r0, r4
   13b40:	bl	1156c <gettimeofday@plt>
   13b44:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13b48:	cmp	r0, #0
   13b4c:	beq	13c24 <__assert_fail@plt+0x2490>
   13b50:	movw	r0, #55972	; 0xdaa4
   13b54:	movw	r1, #46473	; 0xb589
   13b58:	vldr	s2, [r4]
   13b5c:	vmov.f64	d16, #36	; 0x41200000  10.0
   13b60:	movt	r0, #2
   13b64:	movt	r1, #5368	; 0x14f8
   13b68:	mov	r3, r0
   13b6c:	ldr	r0, [r0, #4]
   13b70:	vldr	s0, [r3]
   13b74:	smmul	r0, r0, r1
   13b78:	asr	r2, r0, #13
   13b7c:	add	r0, r2, r0, lsr #31
   13b80:	ldr	r2, [r4, #4]
   13b84:	vcvt.f64.s32	d17, s0
   13b88:	vmov	s4, r0
   13b8c:	movw	r0, #46934	; 0xb756
   13b90:	vcvt.f64.s32	d18, s4
   13b94:	vcvt.f64.s32	d19, s2
   13b98:	movt	r0, #1
   13b9c:	vmla.f64	d18, d17, d16
   13ba0:	smmul	r1, r2, r1
   13ba4:	asr	r2, r1, #13
   13ba8:	add	r1, r2, r1, lsr #31
   13bac:	vmov	s6, r1
   13bb0:	movw	r1, #46406	; 0xb546
   13bb4:	vcvt.f64.s32	d20, s6
   13bb8:	ldr	r4, [fp, #-60]	; 0xffffffc4
   13bbc:	movt	r1, #1
   13bc0:	vmla.f64	d20, d19, d16
   13bc4:	mov	r2, r4
   13bc8:	vsub.f64	d17, d20, d18
   13bcc:	vdiv.f64	d8, d17, d16
   13bd0:	vstr	d8, [sp]
   13bd4:	bl	11458 <printf@plt>
   13bd8:	movw	r0, #54372	; 0xd464
   13bdc:	movt	r0, #2
   13be0:	ldr	r0, [r0]
   13be4:	cmp	r0, #0
   13be8:	beq	13c10 <__assert_fail@plt+0x247c>
   13bec:	vmov	s0, r4
   13bf0:	vmov.f64	d16, #32	; 0x41000000  8.0
   13bf4:	movw	r0, #46962	; 0xb772
   13bf8:	vcvt.f64.u32	d17, s0
   13bfc:	movt	r0, #1
   13c00:	vmul.f64	d16, d17, d16
   13c04:	vdiv.f64	d16, d16, d8
   13c08:	vmov	r2, r3, d16
   13c0c:	bl	11458 <printf@plt>
   13c10:	movw	r0, #54348	; 0xd44c
   13c14:	movt	r0, #2
   13c18:	ldr	r1, [r0]
   13c1c:	mov	r0, #10
   13c20:	bl	11704 <putc@plt>
   13c24:	sub	sp, fp, #40	; 0x28
   13c28:	vpop	{d8}
   13c2c:	add	sp, sp, #4
   13c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c34:	mov	r0, #0
   13c38:	bl	1150c <alarm@plt>
   13c3c:	movw	r0, #46336	; 0xb500
   13c40:	movt	r0, #1
   13c44:	bl	1153c <perror@plt>
   13c48:	b	13ad8 <__assert_fail@plt+0x2344>
   13c4c:	bl	11638 <__errno_location@plt>
   13c50:	ldr	r0, [r0]
   13c54:	add	r0, r0, #100	; 0x64
   13c58:	bl	13d98 <__assert_fail@plt+0x2604>
   13c5c:	b	13ad8 <__assert_fail@plt+0x2344>
   13c60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c64:	add	fp, sp, #24
   13c68:	mov	r9, r0
   13c6c:	movw	r0, #53856	; 0xd260
   13c70:	movt	r0, #2
   13c74:	ldr	r6, [r0]
   13c78:	cmp	r6, #0
   13c7c:	moveq	r0, #0
   13c80:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c84:	ldrb	ip, [r9]
   13c88:	mov	r7, #0
   13c8c:	mov	r4, #0
   13c90:	clz	r2, ip
   13c94:	lsr	lr, r2, #5
   13c98:	mov	r2, #0
   13c9c:	mov	r8, r2
   13ca0:	ldrb	r2, [r6]
   13ca4:	mov	r3, r7
   13ca8:	mov	r5, r4
   13cac:	mov	r7, lr
   13cb0:	cmp	ip, r2
   13cb4:	mov	r2, r9
   13cb8:	bne	13ce8 <__assert_fail@plt+0x2554>
   13cbc:	add	r4, r6, #1
   13cc0:	mov	r7, lr
   13cc4:	mov	r2, r9
   13cc8:	tst	r7, #1
   13ccc:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cd0:	ldrb	r1, [r2, #1]!
   13cd4:	ldrb	r6, [r4], #1
   13cd8:	clz	r7, r1
   13cdc:	cmp	r1, r6
   13ce0:	lsr	r7, r7, #5
   13ce4:	beq	13cc8 <__assert_fail@plt+0x2534>
   13ce8:	cmp	r7, #0
   13cec:	beq	13d08 <__assert_fail@plt+0x2574>
   13cf0:	sub	r7, r2, r9
   13cf4:	mov	r4, #1
   13cf8:	mov	r2, r0
   13cfc:	cmp	r7, r3
   13d00:	bgt	13d14 <__assert_fail@plt+0x2580>
   13d04:	addeq	r5, r5, #1
   13d08:	mov	r2, r8
   13d0c:	mov	r4, r5
   13d10:	mov	r7, r3
   13d14:	ldr	r6, [r0, #12]!
   13d18:	cmp	r6, #0
   13d1c:	bne	13c9c <__assert_fail@plt+0x2508>
   13d20:	cmp	r4, #1
   13d24:	mvngt	r2, #0
   13d28:	mov	r0, r2
   13d2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d30:	push	{fp, lr}
   13d34:	mov	fp, sp
   13d38:	movw	r0, #54116	; 0xd364
   13d3c:	movw	r1, #55968	; 0xdaa0
   13d40:	movt	r0, #2
   13d44:	movt	r1, #2
   13d48:	ldr	r0, [r0]
   13d4c:	ldr	r2, [r1]
   13d50:	add	r0, r2, r0
   13d54:	str	r0, [r1]
   13d58:	movw	r1, #54120	; 0xd368
   13d5c:	movt	r1, #2
   13d60:	ldr	r1, [r1]
   13d64:	cmp	r0, r1
   13d68:	bge	13d7c <__assert_fail@plt+0x25e8>
   13d6c:	movw	r0, #55104	; 0xd740
   13d70:	mov	r1, #1
   13d74:	movt	r0, #2
   13d78:	bl	11470 <longjmp@plt>
   13d7c:	movw	r0, #47280	; 0xb8b0
   13d80:	movt	r0, #1
   13d84:	bl	115a8 <puts@plt>
   13d88:	movw	r0, #55576	; 0xd918
   13d8c:	mvn	r1, #0
   13d90:	movt	r0, #2
   13d94:	bl	11470 <longjmp@plt>
   13d98:	push	{r4, r5, r6, sl, fp, lr}
   13d9c:	add	fp, sp, #16
   13da0:	sub	sp, sp, #8
   13da4:	movw	r6, #54584	; 0xd538
   13da8:	mov	r1, #1280	; 0x500
   13dac:	movt	r6, #2
   13db0:	strh	r1, [r6]
   13db4:	rev16	r1, r0
   13db8:	strh	r1, [r6, #2]
   13dbc:	movw	r1, #54128	; 0xd370
   13dc0:	movt	r1, #2
   13dc4:	sub	r2, r1, #4
   13dc8:	ldr	r1, [r2, #4]
   13dcc:	add	r5, r2, #8
   13dd0:	cmp	r1, #0
   13dd4:	blt	13de4 <__assert_fail@plt+0x2650>
   13dd8:	cmp	r1, r0
   13ddc:	mov	r2, r5
   13de0:	bne	13dc8 <__assert_fail@plt+0x2634>
   13de4:	cmp	r1, #0
   13de8:	blt	13df4 <__assert_fail@plt+0x2660>
   13dec:	ldr	r4, [r5]
   13df0:	b	13e0c <__assert_fail@plt+0x2678>
   13df4:	sub	r0, r0, #100	; 0x64
   13df8:	bl	115cc <strerror@plt>
   13dfc:	mov	r4, r0
   13e00:	str	r0, [r5]
   13e04:	mov	r0, #0
   13e08:	strh	r0, [r6, #2]
   13e0c:	mov	r0, r4
   13e10:	bl	11614 <strlen@plt>
   13e14:	mov	r5, r0
   13e18:	add	r0, r6, #4
   13e1c:	mov	r1, r4
   13e20:	add	r2, r5, #1
   13e24:	bl	114d0 <memcpy@plt>
   13e28:	movw	r0, #54504	; 0xd4e8
   13e2c:	add	r4, r5, #4
   13e30:	movt	r0, #2
   13e34:	ldr	r0, [r0]
   13e38:	cmp	r0, #0
   13e3c:	beq	13e58 <__assert_fail@plt+0x26c4>
   13e40:	movw	r0, #46331	; 0xb4fb
   13e44:	movw	r1, #54584	; 0xd538
   13e48:	mov	r2, r4
   13e4c:	movt	r0, #1
   13e50:	movt	r1, #2
   13e54:	bl	13eb4 <__assert_fail@plt+0x2720>
   13e58:	movw	r1, #54508	; 0xd4ec
   13e5c:	movw	r0, #54124	; 0xd36c
   13e60:	movw	r2, #54376	; 0xd468
   13e64:	mov	r3, #0
   13e68:	movt	r1, #2
   13e6c:	movt	r0, #2
   13e70:	movt	r2, #2
   13e74:	ldr	r1, [r1]
   13e78:	ldr	r0, [r0]
   13e7c:	str	r2, [sp]
   13e80:	mov	r2, r4
   13e84:	str	r1, [sp, #4]
   13e88:	movw	r1, #54584	; 0xd538
   13e8c:	movt	r1, #2
   13e90:	bl	116bc <sendto@plt>
   13e94:	cmp	r0, r4
   13e98:	subeq	sp, fp, #16
   13e9c:	popeq	{r4, r5, r6, sl, fp, pc}
   13ea0:	movw	r0, #46810	; 0xb6da
   13ea4:	movt	r0, #1
   13ea8:	sub	sp, fp, #16
   13eac:	pop	{r4, r5, r6, sl, fp, lr}
   13eb0:	b	1153c <perror@plt>
   13eb4:	push	{r4, r5, r6, sl, fp, lr}
   13eb8:	add	fp, sp, #16
   13ebc:	mov	r4, r1
   13ec0:	mov	r1, r0
   13ec4:	mov	r5, r2
   13ec8:	ldrh	r0, [r4]
   13ecc:	rev16	r6, r0
   13ed0:	cmp	r0, #0
   13ed4:	beq	13efc <__assert_fail@plt+0x2768>
   13ed8:	uxth	r0, r6
   13edc:	cmp	r0, #6
   13ee0:	bcs	13efc <__assert_fail@plt+0x2768>
   13ee4:	movw	r0, #47052	; 0xb7cc
   13ee8:	movt	r0, #1
   13eec:	ldr	r2, [r0, r6, lsl #2]
   13ef0:	movw	r0, #46854	; 0xb706
   13ef4:	movt	r0, #1
   13ef8:	b	13f08 <__assert_fail@plt+0x2774>
   13efc:	movw	r0, #46840	; 0xb6f8
   13f00:	mov	r2, r6
   13f04:	movt	r0, #1
   13f08:	bl	11458 <printf@plt>
   13f0c:	mvn	r0, #0
   13f10:	uxtah	r0, r0, r6
   13f14:	cmp	r0, #4
   13f18:	pophi	{r4, r5, r6, sl, fp, pc}
   13f1c:	add	r1, pc, #0
   13f20:	ldr	pc, [r1, r0, lsl #2]
   13f24:	andeq	r3, r1, r8, lsr pc
   13f28:	andeq	r3, r1, r8, lsr pc
   13f2c:	andeq	r3, r1, r0, ror #30
   13f30:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13f34:	andeq	r3, r1, ip, ror pc
   13f38:	add	r4, r4, #2
   13f3c:	mov	r0, r4
   13f40:	bl	11614 <strlen@plt>
   13f44:	add	r0, r4, r0
   13f48:	mov	r1, r4
   13f4c:	add	r2, r0, #1
   13f50:	movw	r0, #46861	; 0xb70d
   13f54:	movt	r0, #1
   13f58:	pop	{r4, r5, r6, sl, fp, lr}
   13f5c:	b	11458 <printf@plt>
   13f60:	ldrh	r0, [r4, #2]
   13f64:	sub	r2, r5, #4
   13f68:	rev16	r1, r0
   13f6c:	movw	r0, #46881	; 0xb721
   13f70:	movt	r0, #1
   13f74:	pop	{r4, r5, r6, sl, fp, lr}
   13f78:	b	11458 <printf@plt>
   13f7c:	ldrh	r0, [r4, #2]
   13f80:	add	r2, r4, #4
   13f84:	rev16	r1, r0
   13f88:	movw	r0, #46915	; 0xb743
   13f8c:	movt	r0, #1
   13f90:	pop	{r4, r5, r6, sl, fp, lr}
   13f94:	b	11458 <printf@plt>
   13f98:	ldrh	r0, [r4, #2]
   13f9c:	rev16	r1, r0
   13fa0:	movw	r0, #46903	; 0xb737
   13fa4:	movt	r0, #1
   13fa8:	pop	{r4, r5, r6, sl, fp, lr}
   13fac:	b	11458 <printf@plt>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fe4 <__assert_fail@plt+0x2850>
   13fb8:	mov	r1, r0
   13fbc:	mov	r0, #7
   13fc0:	cmp	r1, #118	; 0x76
   13fc4:	bxne	lr
   13fc8:	movw	r0, #54372	; 0xd464
   13fcc:	movt	r0, #2
   13fd0:	ldr	r1, [r0]
   13fd4:	add	r1, r1, #1
   13fd8:	str	r1, [r0]
   13fdc:	mov	r0, #0
   13fe0:	bx	lr
   13fe4:	push	{r4, r5, fp, lr}
   13fe8:	add	fp, sp, #8
   13fec:	ldr	r0, [r2, #20]
   13ff0:	movw	r5, #54036	; 0xd314
   13ff4:	mov	r4, r1
   13ff8:	movt	r5, #2
   13ffc:	cmp	r0, #1
   14000:	bhi	14010 <__assert_fail@plt+0x287c>
   14004:	ldr	r0, [r5]
   14008:	cmp	r0, #3
   1400c:	blt	1402c <__assert_fail@plt+0x2898>
   14010:	movw	r0, #54336	; 0xd440
   14014:	movt	r0, #2
   14018:	ldr	r1, [r0]
   1401c:	mov	r0, r2
   14020:	movw	r2, #262	; 0x106
   14024:	bl	1596c <argp_state_help@@Base>
   14028:	ldr	r0, [r5]
   1402c:	add	r1, r0, #1
   14030:	str	r1, [r5]
   14034:	movw	r1, #54024	; 0xd308
   14038:	movt	r1, #2
   1403c:	str	r4, [r1, r0, lsl #2]
   14040:	mov	r0, #0
   14044:	pop	{r4, r5, fp, lr}
   14048:	bx	lr
   1404c:	movw	r0, #54256	; 0xd3f0
   14050:	mvn	r1, #0
   14054:	mvn	r2, #2
   14058:	movt	r0, #2
   1405c:	str	r1, [r0]
   14060:	movw	r0, #54512	; 0xd4f0
   14064:	mov	r1, #0
   14068:	movt	r0, #2
   1406c:	str	r1, [r0]
   14070:	movw	r0, #56228	; 0xdba4
   14074:	movt	r0, #2
   14078:	str	r2, [r0]
   1407c:	movw	r2, #54516	; 0xd4f4
   14080:	movt	r2, #2
   14084:	str	r1, [r2]
   14088:	mvn	r2, #1
   1408c:	str	r2, [r0, #520]	; 0x208
   14090:	movw	r2, #54520	; 0xd4f8
   14094:	add	r0, r0, #4
   14098:	movt	r2, #2
   1409c:	str	r1, [r2]
   140a0:	bx	lr
   140a4:	movw	r0, #54256	; 0xd3f0
   140a8:	mvn	r1, #0
   140ac:	mvn	r2, #2
   140b0:	movt	r0, #2
   140b4:	str	r1, [r0]
   140b8:	movw	r0, #54512	; 0xd4f0
   140bc:	mov	r1, #0
   140c0:	movt	r0, #2
   140c4:	str	r1, [r0]
   140c8:	movw	r0, #56228	; 0xdba4
   140cc:	movt	r0, #2
   140d0:	str	r2, [r0]
   140d4:	movw	r2, #54516	; 0xd4f4
   140d8:	movt	r2, #2
   140dc:	str	r1, [r2]
   140e0:	mvn	r1, #1
   140e4:	mov	r2, #1
   140e8:	str	r1, [r0, #520]	; 0x208
   140ec:	movw	r1, #54520	; 0xd4f8
   140f0:	add	r0, r0, #4
   140f4:	movt	r1, #2
   140f8:	str	r2, [r1]
   140fc:	bx	lr
   14100:	push	{r4, r5, r6, r7, fp, lr}
   14104:	add	fp, sp, #16
   14108:	mov	r4, r1
   1410c:	movw	r1, #54516	; 0xd4f4
   14110:	movw	r5, #56228	; 0xdba4
   14114:	mvn	r6, #1
   14118:	movt	r1, #2
   1411c:	movt	r5, #2
   14120:	ldr	r3, [r1]
   14124:	add	r7, r3, r3, lsl #6
   14128:	clz	r3, r3
   1412c:	str	r6, [r5, r7, lsl #3]
   14130:	lsr	r6, r3, #5
   14134:	mov	r7, r5
   14138:	str	r6, [r1]
   1413c:	orr	r1, r6, r6, lsl #6
   14140:	ldr	r1, [r7, r1, lsl #3]!
   14144:	cmn	r1, #2
   14148:	bne	14158 <__assert_fail@plt+0x29c4>
   1414c:	mov	r1, r2
   14150:	bl	14170 <__assert_fail@plt+0x29dc>
   14154:	ldr	r1, [r7]
   14158:	add	r0, r6, r6, lsl #6
   1415c:	add	r0, r5, r0, lsl #3
   14160:	add	r0, r0, #4
   14164:	str	r0, [r4]
   14168:	mov	r0, r1
   1416c:	pop	{r4, r5, r6, r7, fp, pc}
   14170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14174:	add	fp, sp, #28
   14178:	sub	sp, sp, #4
   1417c:	movw	r3, #54520	; 0xd4f8
   14180:	movw	r2, #56228	; 0xdba4
   14184:	mov	sl, r0
   14188:	movt	r3, #2
   1418c:	movt	r2, #2
   14190:	ldr	r7, [r3]
   14194:	mov	r9, r2
   14198:	add	r0, r7, r7, lsl #6
   1419c:	ldr	r6, [r9, r0, lsl #3]!
   141a0:	cmn	r6, #2
   141a4:	bne	14264 <__assert_fail@plt+0x2ad0>
   141a8:	clz	r7, r7
   141ac:	cmp	r1, #0
   141b0:	lsr	r7, r7, #5
   141b4:	str	r7, [r3]
   141b8:	beq	14248 <__assert_fail@plt+0x2ab4>
   141bc:	movw	r5, #54512	; 0xd4f0
   141c0:	movw	r4, #54256	; 0xd3f0
   141c4:	add	r8, r2, r0, lsl #3
   141c8:	mov	r7, #0
   141cc:	add	r6, r8, #8
   141d0:	movt	r5, #2
   141d4:	movt	r4, #2
   141d8:	ldr	r0, [r5]
   141dc:	cmp	r0, #0
   141e0:	beq	141f8 <__assert_fail@plt+0x2a64>
   141e4:	ldr	r0, [r4]
   141e8:	mov	r1, #0
   141ec:	cmp	r0, #10
   141f0:	movwne	r0, #0
   141f4:	b	14218 <__assert_fail@plt+0x2a84>
   141f8:	mov	r0, sl
   141fc:	bl	1177c <getc@plt>
   14200:	cmp	r0, #10
   14204:	cmpne	r0, #13
   14208:	bne	14230 <__assert_fail@plt+0x2a9c>
   1420c:	str	r0, [r4]
   14210:	mov	r0, #13
   14214:	mov	r1, #1
   14218:	str	r1, [r5]
   1421c:	strb	r0, [r6, r7]
   14220:	add	r7, r7, #1
   14224:	cmp	r7, #512	; 0x200
   14228:	bcc	141d8 <__assert_fail@plt+0x2a44>
   1422c:	b	14238 <__assert_fail@plt+0x2aa4>
   14230:	cmn	r0, #1
   14234:	bne	1421c <__assert_fail@plt+0x2a88>
   14238:	add	r0, r8, r7
   1423c:	add	r0, r0, #8
   14240:	sub	r0, r0, r6
   14244:	b	14260 <__assert_fail@plt+0x2acc>
   14248:	add	r4, r2, r0, lsl #3
   1424c:	mov	r0, sl
   14250:	bl	1168c <fileno@plt>
   14254:	add	r1, r4, #8
   14258:	mov	r2, #512	; 0x200
   1425c:	bl	11464 <read@plt>
   14260:	str	r0, [r9]
   14264:	sub	sp, fp, #28
   14268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1426c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14270:	add	fp, sp, #24
   14274:	movw	r7, #54516	; 0xd4f4
   14278:	mov	r8, r1
   1427c:	movw	r6, #56228	; 0xdba4
   14280:	mov	r4, r2
   14284:	movt	r7, #2
   14288:	movt	r6, #2
   1428c:	ldr	r1, [r7]
   14290:	add	r2, r1, r1, lsl #6
   14294:	clz	r1, r1
   14298:	lsr	r1, r1, #5
   1429c:	str	r4, [r6, r2, lsl #3]
   142a0:	mov	r2, r6
   142a4:	orr	r5, r1, r1, lsl #6
   142a8:	str	r1, [r7]
   142ac:	ldr	r5, [r2, r5, lsl #3]!
   142b0:	cmn	r5, #2
   142b4:	beq	142cc <__assert_fail@plt+0x2b38>
   142b8:	mov	r1, r3
   142bc:	bl	142ec <__assert_fail@plt+0x2b58>
   142c0:	ldr	r1, [r7]
   142c4:	add	r0, r1, r1, lsl #6
   142c8:	add	r2, r6, r0, lsl #3
   142cc:	mvn	r0, #2
   142d0:	str	r0, [r2]
   142d4:	add	r0, r1, r1, lsl #6
   142d8:	add	r0, r6, r0, lsl #3
   142dc:	add	r0, r0, #4
   142e0:	str	r0, [r8]
   142e4:	mov	r0, r4
   142e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142f0:	add	fp, sp, #28
   142f4:	sub	sp, sp, #4
   142f8:	movw	r7, #54520	; 0xd4f8
   142fc:	movw	r5, #56228	; 0xdba4
   14300:	mov	r9, r0
   14304:	mov	r0, #0
   14308:	movt	r7, #2
   1430c:	movt	r5, #2
   14310:	ldr	r6, [r7]
   14314:	mov	r3, r5
   14318:	add	r2, r6, r6, lsl #6
   1431c:	ldr	r4, [r3, r2, lsl #3]!
   14320:	cmn	r4, #1
   14324:	blt	143c4 <__assert_fail@plt+0x2c30>
   14328:	mvn	r0, #1
   1432c:	cmp	r4, #1
   14330:	str	r0, [r3]
   14334:	clz	r0, r6
   14338:	lsr	r0, r0, #5
   1433c:	str	r0, [r7]
   14340:	mvnlt	r0, #0
   14344:	sublt	sp, fp, #28
   14348:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1434c:	add	r0, r5, r2, lsl #3
   14350:	cmp	r1, #0
   14354:	add	r6, r0, #8
   14358:	beq	143cc <__assert_fail@plt+0x2c38>
   1435c:	movw	r8, #54256	; 0xd3f0
   14360:	mov	r5, #0
   14364:	mov	sl, #1
   14368:	movt	r8, #2
   1436c:	ldr	r0, [r8]
   14370:	ldrb	r7, [r6, r5]
   14374:	cmp	r0, #13
   14378:	bne	143a0 <__assert_fail@plt+0x2c0c>
   1437c:	cmp	r7, #0
   14380:	beq	143ac <__assert_fail@plt+0x2c18>
   14384:	cmp	r7, #10
   14388:	bne	143a0 <__assert_fail@plt+0x2c0c>
   1438c:	mov	r0, r9
   14390:	mvn	r2, #0
   14394:	mvn	r3, #0
   14398:	str	sl, [sp]
   1439c:	bl	116b0 <fseeko64@plt>
   143a0:	mov	r0, r7
   143a4:	mov	r1, r9
   143a8:	bl	11704 <putc@plt>
   143ac:	add	r5, r5, #1
   143b0:	mov	r0, r7
   143b4:	str	r7, [r8]
   143b8:	cmp	r4, r5
   143bc:	bne	14370 <__assert_fail@plt+0x2bdc>
   143c0:	mov	r0, r4
   143c4:	sub	sp, fp, #28
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143cc:	mov	r0, r9
   143d0:	bl	1168c <fileno@plt>
   143d4:	mov	r1, r6
   143d8:	mov	r2, r4
   143dc:	sub	sp, fp, #28
   143e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e4:	b	11680 <write@plt>
   143e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143ec:	add	fp, sp, #28
   143f0:	sub	sp, sp, #668	; 0x29c
   143f4:	sub	r2, fp, #36	; 0x24
   143f8:	movw	r1, #21531	; 0x541b
   143fc:	mov	r4, r0
   14400:	bl	18d38 <argp_parse@@Base+0x13c0>
   14404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14408:	mov	r5, #0
   1440c:	cmp	r0, #0
   14410:	beq	14468 <__assert_fail@plt+0x2cd4>
   14414:	mov	r8, #128	; 0x80
   14418:	add	r9, sp, #12
   1441c:	add	sl, sp, #16
   14420:	add	r6, sp, #144	; 0x90
   14424:	sub	r7, fp, #36	; 0x24
   14428:	mov	r0, r4
   1442c:	mov	r1, r6
   14430:	mov	r2, #516	; 0x204
   14434:	mov	r3, #0
   14438:	str	r8, [sp, #12]
   1443c:	str	sl, [sp]
   14440:	str	r9, [sp, #4]
   14444:	bl	11500 <recvfrom@plt>
   14448:	mov	r0, r4
   1444c:	movw	r1, #21531	; 0x541b
   14450:	mov	r2, r7
   14454:	bl	18d38 <argp_parse@@Base+0x13c0>
   14458:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1445c:	add	r5, r5, #1
   14460:	cmp	r0, #0
   14464:	bne	14428 <__assert_fail@plt+0x2c94>
   14468:	mov	r0, r5
   1446c:	sub	sp, fp, #28
   14470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014474 <argp_help@@Base>:
   14474:	push	{fp, lr}
   14478:	mov	fp, sp
   1447c:	sub	sp, sp, #8
   14480:	mov	ip, r2
   14484:	mov	r2, r1
   14488:	str	r3, [sp]
   1448c:	mov	r1, #0
   14490:	mov	r3, ip
   14494:	bl	144a0 <argp_help@@Base+0x2c>
   14498:	mov	sp, fp
   1449c:	pop	{fp, pc}
   144a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144a4:	add	fp, sp, #28
   144a8:	sub	sp, sp, #108	; 0x6c
   144ac:	cmp	r2, #0
   144b0:	str	r1, [fp, #-96]	; 0xffffffa0
   144b4:	str	r0, [fp, #-112]	; 0xffffff90
   144b8:	beq	14f10 <argp_help@@Base+0xa9c>
   144bc:	ldr	r0, [fp, #8]
   144c0:	mov	r6, r3
   144c4:	mov	r5, r2
   144c8:	str	r0, [fp, #-100]	; 0xffffff9c
   144cc:	mov	r0, r2
   144d0:	bl	11710 <flockfile@plt>
   144d4:	movw	r8, #54264	; 0xd3f8
   144d8:	str	r6, [fp, #-132]	; 0xffffff7c
   144dc:	movt	r8, #2
   144e0:	ldr	r0, [r8, #36]	; 0x24
   144e4:	cmp	r0, #0
   144e8:	bne	14a10 <argp_help@@Base+0x59c>
   144ec:	movw	r0, #47446	; 0xb956
   144f0:	movt	r0, #1
   144f4:	bl	1159c <getenv@plt>
   144f8:	mov	r1, r8
   144fc:	mov	r8, r0
   14500:	mov	r0, #32
   14504:	sub	r2, fp, #88	; 0x58
   14508:	add	r3, r1, #16
   1450c:	vld1.64	{d16-d17}, [r1], r0
   14510:	add	r7, r2, #16
   14514:	cmp	r8, #0
   14518:	vld1.64	{d18-d19}, [r3]
   1451c:	vldr	d20, [r1]
   14520:	mov	r1, r2
   14524:	vst1.64	{d16-d17}, [r1], r0
   14528:	vst1.64	{d18-d19}, [r7]
   1452c:	vstr	d20, [r1]
   14530:	beq	14a08 <argp_help@@Base+0x594>
   14534:	str	r7, [fp, #-108]	; 0xffffff94
   14538:	str	r3, [fp, #-104]	; 0xffffff98
   1453c:	str	r5, [fp, #-136]	; 0xffffff78
   14540:	ldrb	r5, [r8]
   14544:	cmp	r5, #0
   14548:	beq	14910 <argp_help@@Base+0x49c>
   1454c:	bl	115f0 <__ctype_b_loc@plt>
   14550:	movw	r7, #48112	; 0xbbf0
   14554:	str	r0, [fp, #-92]	; 0xffffffa4
   14558:	movt	r7, #1
   1455c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14560:	uxtb	r1, r5
   14564:	ldr	r0, [r0]
   14568:	add	r1, r0, r1, lsl #1
   1456c:	b	14578 <argp_help@@Base+0x104>
   14570:	ldrb	r5, [r8, #1]!
   14574:	add	r1, r0, r5, lsl #1
   14578:	ldrh	r1, [r1]
   1457c:	tst	r1, #8192	; 0x2000
   14580:	bne	14570 <argp_help@@Base+0xfc>
   14584:	tst	r1, #1024	; 0x400
   14588:	beq	148e4 <argp_help@@Base+0x470>
   1458c:	mov	r3, r5
   14590:	mov	r2, r8
   14594:	b	1459c <argp_help@@Base+0x128>
   14598:	ldrb	r3, [r2, #1]!
   1459c:	uxtb	r6, r3
   145a0:	add	r1, r0, r6, lsl #1
   145a4:	ldrh	r1, [r1]
   145a8:	tst	r1, #8
   145ac:	bne	14598 <argp_help@@Base+0x124>
   145b0:	cmp	r6, #95	; 0x5f
   145b4:	cmpne	r6, #45	; 0x2d
   145b8:	beq	14598 <argp_help@@Base+0x124>
   145bc:	tst	r1, #8192	; 0x2000
   145c0:	mov	r4, r2
   145c4:	beq	145e0 <argp_help@@Base+0x16c>
   145c8:	mov	r4, r2
   145cc:	ldrb	r3, [r4, #1]!
   145d0:	add	r1, r0, r3, lsl #1
   145d4:	ldrh	r1, [r1]
   145d8:	tst	r1, #8192	; 0x2000
   145dc:	bne	145cc <argp_help@@Base+0x158>
   145e0:	sub	r9, r2, r8
   145e4:	uxtb	r2, r3
   145e8:	cmp	r2, #0
   145ec:	cmpne	r2, #44	; 0x2c
   145f0:	bne	14640 <argp_help@@Base+0x1cc>
   145f4:	uxtb	r0, r5
   145f8:	mov	sl, #1
   145fc:	cmp	r0, #110	; 0x6e
   14600:	bne	14638 <argp_help@@Base+0x1c4>
   14604:	ldrb	r0, [r8, #1]
   14608:	mov	sl, #1
   1460c:	cmp	r0, #111	; 0x6f
   14610:	bne	14638 <argp_help@@Base+0x1c4>
   14614:	ldrb	r0, [r8, #2]
   14618:	mov	sl, #1
   1461c:	cmp	r0, #45	; 0x2d
   14620:	bne	14638 <argp_help@@Base+0x1c4>
   14624:	sub	r9, r9, #3
   14628:	add	r8, r8, #3
   1462c:	mov	r5, #0
   14630:	mov	sl, #1
   14634:	b	146c4 <argp_help@@Base+0x250>
   14638:	mov	r5, #1
   1463c:	b	146c4 <argp_help@@Base+0x250>
   14640:	cmp	r2, #61	; 0x3d
   14644:	bne	1465c <argp_help@@Base+0x1e8>
   14648:	ldrb	r1, [r4, #1]!
   1464c:	add	r1, r0, r1, lsl #1
   14650:	ldrh	r1, [r1]
   14654:	tst	r1, #8192	; 0x2000
   14658:	bne	14648 <argp_help@@Base+0x1d4>
   1465c:	mov	sl, #0
   14660:	tst	r1, #2048	; 0x800
   14664:	bne	14670 <argp_help@@Base+0x1fc>
   14668:	mov	r5, #0
   1466c:	b	146c4 <argp_help@@Base+0x250>
   14670:	mov	r0, r4
   14674:	mov	r1, #0
   14678:	mov	r2, #10
   1467c:	bl	1144c <strtol@plt>
   14680:	mov	r5, r0
   14684:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14688:	sub	r4, r4, #1
   1468c:	ldr	r0, [r0]
   14690:	ldrb	r1, [r4, #1]!
   14694:	add	r1, r0, r1, lsl #1
   14698:	ldrh	r1, [r1]
   1469c:	tst	r1, #2048	; 0x800
   146a0:	bne	14690 <argp_help@@Base+0x21c>
   146a4:	mov	sl, #0
   146a8:	tst	r1, #8192	; 0x2000
   146ac:	beq	146c4 <argp_help@@Base+0x250>
   146b0:	ldrb	r1, [r4, #1]!
   146b4:	add	r1, r0, r1, lsl #1
   146b8:	ldrb	r1, [r1, #1]
   146bc:	tst	r1, #32
   146c0:	bne	146b0 <argp_help@@Base+0x23c>
   146c4:	mov	r0, r7
   146c8:	bl	11614 <strlen@plt>
   146cc:	cmp	r0, r9
   146d0:	bne	146f0 <argp_help@@Base+0x27c>
   146d4:	mov	r0, r8
   146d8:	mov	r1, r7
   146dc:	mov	r2, r9
   146e0:	bl	11764 <strncmp@plt>
   146e4:	cmp	r0, #0
   146e8:	mov	r6, r7
   146ec:	beq	14874 <argp_help@@Base+0x400>
   146f0:	add	r6, r7, #16
   146f4:	mov	r0, r6
   146f8:	bl	11614 <strlen@plt>
   146fc:	cmp	r0, r9
   14700:	bne	1471c <argp_help@@Base+0x2a8>
   14704:	mov	r0, r8
   14708:	mov	r1, r6
   1470c:	mov	r2, r9
   14710:	bl	11764 <strncmp@plt>
   14714:	cmp	r0, #0
   14718:	beq	14874 <argp_help@@Base+0x400>
   1471c:	add	r6, r7, #32
   14720:	mov	r0, r6
   14724:	bl	11614 <strlen@plt>
   14728:	cmp	r0, r9
   1472c:	bne	14748 <argp_help@@Base+0x2d4>
   14730:	mov	r0, r8
   14734:	mov	r1, r6
   14738:	mov	r2, r9
   1473c:	bl	11764 <strncmp@plt>
   14740:	cmp	r0, #0
   14744:	beq	14874 <argp_help@@Base+0x400>
   14748:	add	r6, r7, #48	; 0x30
   1474c:	mov	r0, r6
   14750:	bl	11614 <strlen@plt>
   14754:	cmp	r0, r9
   14758:	bne	14774 <argp_help@@Base+0x300>
   1475c:	mov	r0, r8
   14760:	mov	r1, r6
   14764:	mov	r2, r9
   14768:	bl	11764 <strncmp@plt>
   1476c:	cmp	r0, #0
   14770:	beq	14874 <argp_help@@Base+0x400>
   14774:	add	r6, r7, #64	; 0x40
   14778:	mov	r0, r6
   1477c:	bl	11614 <strlen@plt>
   14780:	cmp	r0, r9
   14784:	bne	147a0 <argp_help@@Base+0x32c>
   14788:	mov	r0, r8
   1478c:	mov	r1, r6
   14790:	mov	r2, r9
   14794:	bl	11764 <strncmp@plt>
   14798:	cmp	r0, #0
   1479c:	beq	14874 <argp_help@@Base+0x400>
   147a0:	add	r6, r7, #80	; 0x50
   147a4:	mov	r0, r6
   147a8:	bl	11614 <strlen@plt>
   147ac:	cmp	r0, r9
   147b0:	bne	147cc <argp_help@@Base+0x358>
   147b4:	mov	r0, r8
   147b8:	mov	r1, r6
   147bc:	mov	r2, r9
   147c0:	bl	11764 <strncmp@plt>
   147c4:	cmp	r0, #0
   147c8:	beq	14874 <argp_help@@Base+0x400>
   147cc:	add	r6, r7, #96	; 0x60
   147d0:	mov	r0, r6
   147d4:	bl	11614 <strlen@plt>
   147d8:	cmp	r0, r9
   147dc:	bne	147f8 <argp_help@@Base+0x384>
   147e0:	mov	r0, r8
   147e4:	mov	r1, r6
   147e8:	mov	r2, r9
   147ec:	bl	11764 <strncmp@plt>
   147f0:	cmp	r0, #0
   147f4:	beq	14874 <argp_help@@Base+0x400>
   147f8:	add	r6, r7, #112	; 0x70
   147fc:	mov	r0, r6
   14800:	bl	11614 <strlen@plt>
   14804:	cmp	r0, r9
   14808:	bne	14824 <argp_help@@Base+0x3b0>
   1480c:	mov	r0, r8
   14810:	mov	r1, r6
   14814:	mov	r2, r9
   14818:	bl	11764 <strncmp@plt>
   1481c:	cmp	r0, #0
   14820:	beq	14874 <argp_help@@Base+0x400>
   14824:	add	r6, r7, #128	; 0x80
   14828:	mov	r0, r6
   1482c:	bl	11614 <strlen@plt>
   14830:	cmp	r0, r9
   14834:	bne	14850 <argp_help@@Base+0x3dc>
   14838:	mov	r0, r8
   1483c:	mov	r1, r6
   14840:	mov	r2, r9
   14844:	bl	11764 <strncmp@plt>
   14848:	cmp	r0, #0
   1484c:	beq	14874 <argp_help@@Base+0x400>
   14850:	sub	sp, sp, #8
   14854:	str	r9, [sp]
   14858:	str	r8, [sp, #4]
   1485c:	movw	r3, #47507	; 0xb993
   14860:	mov	r1, #0
   14864:	mov	r2, #0
   14868:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1486c:	movt	r3, #1
   14870:	b	148b8 <argp_help@@Base+0x444>
   14874:	cmp	sl, #0
   14878:	beq	14888 <argp_help@@Base+0x414>
   1487c:	ldrb	r0, [r6, #14]
   14880:	cmp	r0, #0
   14884:	beq	14898 <argp_help@@Base+0x424>
   14888:	ldrb	r0, [r6, #15]
   1488c:	sub	r1, fp, #88	; 0x58
   14890:	str	r5, [r1, r0]
   14894:	b	148c0 <argp_help@@Base+0x44c>
   14898:	sub	sp, sp, #8
   1489c:	str	r9, [sp]
   148a0:	str	r8, [sp, #4]
   148a4:	movw	r3, #47460	; 0xb964
   148a8:	mov	r1, #0
   148ac:	mov	r2, #0
   148b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   148b4:	movt	r3, #1
   148b8:	bl	15b6c <argp_failure@@Base>
   148bc:	add	sp, sp, #8
   148c0:	mov	r8, r4
   148c4:	ldr	r6, [fp, #-132]	; 0xffffff7c
   148c8:	ldrb	r0, [r8], #1
   148cc:	cmp	r0, #44	; 0x2c
   148d0:	movne	r8, r4
   148d4:	ldrb	r5, [r8]
   148d8:	cmp	r5, #0
   148dc:	bne	1455c <argp_help@@Base+0xe8>
   148e0:	b	14910 <argp_help@@Base+0x49c>
   148e4:	tst	r5, #255	; 0xff
   148e8:	beq	14910 <argp_help@@Base+0x49c>
   148ec:	sub	sp, sp, #8
   148f0:	str	r8, [sp]
   148f4:	movw	r3, #47545	; 0xb9b9
   148f8:	mov	r1, #0
   148fc:	mov	r2, #0
   14900:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14904:	movt	r3, #1
   14908:	bl	15b6c <argp_failure@@Base>
   1490c:	add	sp, sp, #8
   14910:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14914:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14918:	movw	r0, #48112	; 0xbbf0
   1491c:	movt	r0, #1
   14920:	cmp	r2, r1
   14924:	bge	149b0 <argp_help@@Base+0x53c>
   14928:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1492c:	cmp	r2, r1
   14930:	bge	149b8 <argp_help@@Base+0x544>
   14934:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14938:	cmp	r2, r1
   1493c:	bge	149c0 <argp_help@@Base+0x54c>
   14940:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14944:	cmp	r2, r1
   14948:	bge	149c8 <argp_help@@Base+0x554>
   1494c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14950:	cmp	r2, r1
   14954:	bge	149d0 <argp_help@@Base+0x55c>
   14958:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1495c:	ldr	r5, [fp, #-136]	; 0xffffff78
   14960:	cmp	r2, r1
   14964:	bge	15964 <argp_help@@Base+0x14f0>
   14968:	ldr	r0, [fp, #-108]	; 0xffffff94
   1496c:	sub	r1, fp, #88	; 0x58
   14970:	movw	r2, #54264	; 0xd3f8
   14974:	mov	r3, r1
   14978:	movt	r2, #2
   1497c:	mov	r1, r2
   14980:	vld1.64	{d16-d17}, [r0]
   14984:	mov	r0, #32
   14988:	vld1.64	{d18-d19}, [r3], r0
   1498c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14990:	vst1.64	{d16-d17}, [r0]
   14994:	mov	r0, #36	; 0x24
   14998:	vst1.64	{d18-d19}, [r1], r0
   1499c:	mov	r0, #1
   149a0:	str	r0, [r1]
   149a4:	ldr	r0, [r3]
   149a8:	str	r0, [r2, #32]
   149ac:	b	14a08 <argp_help@@Base+0x594>
   149b0:	add	r0, r0, #32
   149b4:	b	149d4 <argp_help@@Base+0x560>
   149b8:	add	r0, r0, #48	; 0x30
   149bc:	b	149d4 <argp_help@@Base+0x560>
   149c0:	add	r0, r0, #64	; 0x40
   149c4:	b	149d4 <argp_help@@Base+0x560>
   149c8:	add	r0, r0, #80	; 0x50
   149cc:	b	149d4 <argp_help@@Base+0x560>
   149d0:	add	r0, r0, #96	; 0x60
   149d4:	ldr	r5, [fp, #-136]	; 0xffffff78
   149d8:	sub	sp, sp, #8
   149dc:	movw	r1, #47626	; 0xba0a
   149e0:	str	r0, [sp, #4]
   149e4:	movw	r3, #47574	; 0xb9d6
   149e8:	mov	r2, #0
   149ec:	movt	r1, #1
   149f0:	movt	r3, #1
   149f4:	str	r1, [sp]
   149f8:	mov	r1, #0
   149fc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14a00:	bl	15b6c <argp_failure@@Base>
   14a04:	add	sp, sp, #8
   14a08:	movw	r8, #54264	; 0xd3f8
   14a0c:	movt	r8, #2
   14a10:	ldr	r2, [r8, #32]
   14a14:	mov	r0, #0
   14a18:	mov	r1, #0
   14a1c:	mov	r3, #0
   14a20:	str	r0, [fp, #-108]	; 0xffffff94
   14a24:	mov	r0, r5
   14a28:	bl	19a44 <argp_parse@@Base+0x20cc>
   14a2c:	cmp	r0, #0
   14a30:	beq	14acc <argp_help@@Base+0x658>
   14a34:	mov	r4, r0
   14a38:	tst	r6, #11
   14a3c:	str	r5, [fp, #-136]	; 0xffffff78
   14a40:	beq	14b9c <argp_help@@Base+0x728>
   14a44:	ldr	r0, [fp, #-112]	; 0xffffff90
   14a48:	mov	r1, #0
   14a4c:	bl	15d74 <argp_failure@@Base+0x208>
   14a50:	ldr	sl, [r0, #4]
   14a54:	str	r0, [fp, #-108]	; 0xffffff94
   14a58:	cmp	sl, #0
   14a5c:	beq	14b9c <argp_help@@Base+0x728>
   14a60:	ldr	r6, [r0]
   14a64:	movw	r9, #47346	; 0xb8f2
   14a68:	mov	r5, sl
   14a6c:	movt	r9, #1
   14a70:	str	r6, [fp, #-104]	; 0xffffff98
   14a74:	ldr	r7, [r6, #4]
   14a78:	cmp	r7, #0
   14a7c:	beq	14abc <argp_help@@Base+0x648>
   14a80:	ldr	r0, [r6]
   14a84:	add	r8, r0, #12
   14a88:	ldr	r0, [r8, #-12]
   14a8c:	cmp	r0, #0
   14a90:	beq	14ab0 <argp_help@@Base+0x63c>
   14a94:	ldrb	r1, [r8]
   14a98:	tst	r1, #2
   14a9c:	bne	14ab0 <argp_help@@Base+0x63c>
   14aa0:	mov	r1, r9
   14aa4:	bl	11440 <strcmp@plt>
   14aa8:	cmp	r0, #0
   14aac:	beq	14adc <argp_help@@Base+0x668>
   14ab0:	subs	r7, r7, #1
   14ab4:	add	r8, r8, #24
   14ab8:	bne	14a88 <argp_help@@Base+0x614>
   14abc:	subs	r5, r5, #1
   14ac0:	add	r6, r6, #28
   14ac4:	bne	14a74 <argp_help@@Base+0x600>
   14ac8:	b	14ae8 <argp_help@@Base+0x674>
   14acc:	mov	r0, r5
   14ad0:	sub	sp, fp, #28
   14ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ad8:	b	11530 <funlockfile@plt>
   14adc:	cmp	r6, #0
   14ae0:	mvnne	r0, #0
   14ae4:	strne	r0, [r6, #12]
   14ae8:	ldr	r6, [fp, #-104]	; 0xffffff98
   14aec:	movw	r9, #48696	; 0xbe38
   14af0:	mov	r8, sl
   14af4:	movt	r9, #1
   14af8:	ldr	r5, [r6, #4]
   14afc:	cmp	r5, #0
   14b00:	beq	14b40 <argp_help@@Base+0x6cc>
   14b04:	ldr	r0, [r6]
   14b08:	add	r7, r0, #12
   14b0c:	ldr	r0, [r7, #-12]
   14b10:	cmp	r0, #0
   14b14:	beq	14b34 <argp_help@@Base+0x6c0>
   14b18:	ldrb	r1, [r7]
   14b1c:	tst	r1, #2
   14b20:	bne	14b34 <argp_help@@Base+0x6c0>
   14b24:	mov	r1, r9
   14b28:	bl	11440 <strcmp@plt>
   14b2c:	cmp	r0, #0
   14b30:	beq	14b50 <argp_help@@Base+0x6dc>
   14b34:	subs	r5, r5, #1
   14b38:	add	r7, r7, #24
   14b3c:	bne	14b0c <argp_help@@Base+0x698>
   14b40:	subs	r8, r8, #1
   14b44:	add	r6, r6, #28
   14b48:	bne	14af8 <argp_help@@Base+0x684>
   14b4c:	b	14b5c <argp_help@@Base+0x6e8>
   14b50:	cmp	r6, #0
   14b54:	mvnne	r0, #0
   14b58:	strne	r0, [r6, #12]
   14b5c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14b60:	mov	r1, #0
   14b64:	add	r0, r0, #24
   14b68:	str	r1, [r0], #28
   14b6c:	add	r1, r1, #1
   14b70:	cmp	sl, r1
   14b74:	bne	14b68 <argp_help@@Base+0x6f4>
   14b78:	ldr	r0, [fp, #-104]	; 0xffffff98
   14b7c:	movw	r3, #28488	; 0x6f48
   14b80:	mov	r1, sl
   14b84:	mov	r2, #28
   14b88:	movt	r3, #1
   14b8c:	bl	11728 <qsort@plt>
   14b90:	ldr	r6, [fp, #-132]	; 0xffffff7c
   14b94:	movw	r8, #54264	; 0xd3f8
   14b98:	movt	r8, #2
   14b9c:	tst	r6, #3
   14ba0:	beq	14f18 <argp_help@@Base+0xaa4>
   14ba4:	ldr	r0, [fp, #-112]	; 0xffffff90
   14ba8:	bl	163f8 <argp_failure@@Base+0x88c>
   14bac:	mov	r2, r0
   14bb0:	add	r0, r0, #7
   14bb4:	bic	r0, r0, #7
   14bb8:	sub	r0, sp, r0
   14bbc:	mov	sp, r0
   14bc0:	mov	r1, #0
   14bc4:	str	r0, [fp, #-104]	; 0xffffff98
   14bc8:	bl	11668 <memset@plt>
   14bcc:	mov	r7, #1
   14bd0:	ldr	r1, [r4, #24]
   14bd4:	ldr	r2, [r4, #28]
   14bd8:	ldr	r0, [r4, #16]
   14bdc:	mov	r5, r6
   14be0:	ldr	r6, [r8, #28]
   14be4:	sub	r1, r2, r1
   14be8:	cmp	r1, r0
   14bec:	bls	14bf8 <argp_help@@Base+0x784>
   14bf0:	mov	r0, r4
   14bf4:	bl	19b08 <argp_parse@@Base+0x2190>
   14bf8:	ldr	r0, [fp, #-104]	; 0xffffff98
   14bfc:	ldr	r9, [r4, #12]
   14c00:	movw	r1, #47351	; 0xb8f7
   14c04:	str	r6, [r4, #12]
   14c08:	tst	r7, #1
   14c0c:	movt	r1, #1
   14c10:	str	r0, [fp, #-88]	; 0xffffffa8
   14c14:	mov	r0, r4
   14c18:	beq	14c28 <argp_help@@Base+0x7b4>
   14c1c:	movw	r2, #47357	; 0xb8fd
   14c20:	movt	r2, #1
   14c24:	b	14c30 <argp_help@@Base+0x7bc>
   14c28:	movw	r2, #47364	; 0xb904
   14c2c:	movt	r2, #1
   14c30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c34:	bl	1a154 <argp_parse@@Base+0x27dc>
   14c38:	ldr	r1, [r4, #24]
   14c3c:	ldr	r2, [r4, #28]
   14c40:	ldr	r0, [r4, #16]
   14c44:	ldr	r6, [r8, #28]
   14c48:	sub	r1, r2, r1
   14c4c:	cmp	r1, r0
   14c50:	bls	14c5c <argp_help@@Base+0x7e8>
   14c54:	mov	r0, r4
   14c58:	bl	19b08 <argp_parse@@Base+0x2190>
   14c5c:	ldr	r8, [r4, #4]
   14c60:	str	r6, [r4, #4]
   14c64:	mov	r6, r5
   14c68:	tst	r5, #2
   14c6c:	bne	14c84 <argp_help@@Base+0x810>
   14c70:	ldr	r0, [fp, #-108]	; 0xffffff94
   14c74:	mov	r1, r4
   14c78:	bl	16460 <argp_failure@@Base+0x8f4>
   14c7c:	orr	r6, r6, #2
   14c80:	b	14ce8 <argp_help@@Base+0x874>
   14c84:	ldr	r0, [fp, #-108]	; 0xffffff94
   14c88:	ldr	r0, [r0, #4]
   14c8c:	cmp	r0, #0
   14c90:	beq	14ce8 <argp_help@@Base+0x874>
   14c94:	ldr	r0, [r4, #28]
   14c98:	ldr	r1, [r4, #32]
   14c9c:	add	r2, r0, #12
   14ca0:	cmp	r2, r1
   14ca4:	bls	14cc0 <argp_help@@Base+0x84c>
   14ca8:	mov	r0, r4
   14cac:	mov	r1, #12
   14cb0:	bl	1a068 <argp_parse@@Base+0x26f0>
   14cb4:	cmp	r0, #0
   14cb8:	beq	14ce8 <argp_help@@Base+0x874>
   14cbc:	ldr	r0, [r4, #28]
   14cc0:	movw	r1, #48096	; 0xbbe0
   14cc4:	movt	r1, #1
   14cc8:	vldr	d16, [r1]
   14ccc:	movw	r1, #11822	; 0x2e2e
   14cd0:	movt	r1, #23854	; 0x5d2e
   14cd4:	str	r1, [r0, #8]
   14cd8:	vst1.8	{d16}, [r0]
   14cdc:	ldr	r0, [r4, #28]
   14ce0:	add	r0, r0, #12
   14ce4:	str	r0, [r4, #28]
   14ce8:	sub	sp, sp, #8
   14cec:	str	r4, [sp]
   14cf0:	sub	r2, fp, #88	; 0x58
   14cf4:	mov	r3, #1
   14cf8:	ldr	r0, [fp, #-112]	; 0xffffff90
   14cfc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14d00:	bl	16810 <argp_failure@@Base+0xca4>
   14d04:	add	sp, sp, #8
   14d08:	mov	sl, r0
   14d0c:	ldr	r2, [r4, #24]
   14d10:	ldr	r0, [r4, #28]
   14d14:	ldr	r1, [r4, #16]
   14d18:	sub	r2, r0, r2
   14d1c:	cmp	r2, r1
   14d20:	bls	14d3c <argp_help@@Base+0x8c8>
   14d24:	mov	r0, r4
   14d28:	bl	19b08 <argp_parse@@Base+0x2190>
   14d2c:	ldr	r2, [r4, #24]
   14d30:	ldr	r0, [r4, #28]
   14d34:	ldr	r1, [r4, #16]
   14d38:	sub	r2, r0, r2
   14d3c:	cmp	r2, r1
   14d40:	str	r9, [r4, #12]
   14d44:	bls	14d54 <argp_help@@Base+0x8e0>
   14d48:	mov	r0, r4
   14d4c:	bl	19b08 <argp_parse@@Base+0x2190>
   14d50:	ldr	r0, [r4, #28]
   14d54:	str	r8, [r4, #4]
   14d58:	movw	r8, #54264	; 0xd3f8
   14d5c:	ldr	r1, [r4, #32]
   14d60:	movt	r8, #2
   14d64:	cmp	r0, r1
   14d68:	bcc	14d84 <argp_help@@Base+0x910>
   14d6c:	mov	r0, r4
   14d70:	mov	r1, #1
   14d74:	bl	1a068 <argp_parse@@Base+0x26f0>
   14d78:	cmp	r0, #0
   14d7c:	beq	14d94 <argp_help@@Base+0x920>
   14d80:	ldr	r0, [r4, #28]
   14d84:	add	r1, r0, #1
   14d88:	str	r1, [r4, #28]
   14d8c:	mov	r1, #10
   14d90:	strb	r1, [r0]
   14d94:	mov	r7, #0
   14d98:	cmp	sl, #0
   14d9c:	bne	14bd0 <argp_help@@Base+0x75c>
   14da0:	mov	r5, #1
   14da4:	tst	r6, #16
   14da8:	beq	14dd4 <argp_help@@Base+0x960>
   14dac:	sub	sp, sp, #8
   14db0:	mov	r0, #1
   14db4:	mov	r2, #0
   14db8:	mov	r3, #0
   14dbc:	stm	sp, {r0, r4}
   14dc0:	ldr	r0, [fp, #-112]	; 0xffffff90
   14dc4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14dc8:	bl	16abc <argp_failure@@Base+0xf50>
   14dcc:	add	sp, sp, #8
   14dd0:	orr	r5, r0, r5
   14dd4:	ldr	r0, [fp, #-108]	; 0xffffff94
   14dd8:	tst	r6, #4
   14ddc:	beq	14e00 <argp_help@@Base+0x98c>
   14de0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14de4:	movw	r1, #47371	; 0xb90b
   14de8:	mov	r0, r4
   14dec:	movt	r1, #1
   14df0:	mov	r3, r2
   14df4:	bl	1a154 <argp_parse@@Base+0x27dc>
   14df8:	ldr	r0, [fp, #-108]	; 0xffffff94
   14dfc:	mov	r5, #1
   14e00:	tst	r6, #8
   14e04:	ldrne	r1, [r0, #4]
   14e08:	cmpne	r1, #0
   14e0c:	bne	14f28 <argp_help@@Base+0xab4>
   14e10:	tst	r6, #32
   14e14:	beq	14e40 <argp_help@@Base+0x9cc>
   14e18:	sub	sp, sp, #8
   14e1c:	mov	r0, #0
   14e20:	mov	r2, #1
   14e24:	mov	r3, r5
   14e28:	stm	sp, {r0, r4}
   14e2c:	ldr	r0, [fp, #-112]	; 0xffffff90
   14e30:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14e34:	bl	16abc <argp_failure@@Base+0xf50>
   14e38:	add	sp, sp, #8
   14e3c:	orr	r5, r0, r5
   14e40:	tst	r6, #64	; 0x40
   14e44:	movwne	r6, #57268	; 0xdfb4
   14e48:	movtne	r6, #2
   14e4c:	ldrne	r0, [r6]
   14e50:	cmpne	r0, #0
   14e54:	beq	14eac <argp_help@@Base+0xa38>
   14e58:	cmp	r5, #0
   14e5c:	beq	14e98 <argp_help@@Base+0xa24>
   14e60:	ldr	r0, [r4, #28]
   14e64:	ldr	r1, [r4, #32]
   14e68:	cmp	r0, r1
   14e6c:	bcc	14e88 <argp_help@@Base+0xa14>
   14e70:	mov	r0, r4
   14e74:	mov	r1, #1
   14e78:	bl	1a068 <argp_parse@@Base+0x26f0>
   14e7c:	cmp	r0, #0
   14e80:	beq	14e98 <argp_help@@Base+0xa24>
   14e84:	ldr	r0, [r4, #28]
   14e88:	add	r1, r0, #1
   14e8c:	str	r1, [r4, #28]
   14e90:	mov	r1, #10
   14e94:	strb	r1, [r0]
   14e98:	ldr	r2, [r6]
   14e9c:	movw	r1, #47426	; 0xb942
   14ea0:	mov	r0, r4
   14ea4:	movt	r1, #1
   14ea8:	bl	1a154 <argp_parse@@Base+0x27dc>
   14eac:	ldr	r0, [fp, #-136]	; 0xffffff78
   14eb0:	bl	11530 <funlockfile@plt>
   14eb4:	ldr	r0, [fp, #-108]	; 0xffffff94
   14eb8:	cmp	r0, #0
   14ebc:	beq	14f08 <argp_help@@Base+0xa94>
   14ec0:	ldr	r0, [r0, #12]
   14ec4:	cmp	r0, #0
   14ec8:	beq	14ee0 <argp_help@@Base+0xa6c>
   14ecc:	ldr	r5, [r0, #24]
   14ed0:	bl	18c48 <argp_parse@@Base+0x12d0>
   14ed4:	cmp	r5, #0
   14ed8:	mov	r0, r5
   14edc:	bne	14ecc <argp_help@@Base+0xa58>
   14ee0:	ldr	r5, [fp, #-108]	; 0xffffff94
   14ee4:	ldr	r0, [r5, #4]
   14ee8:	cmp	r0, #0
   14eec:	beq	14f00 <argp_help@@Base+0xa8c>
   14ef0:	ldr	r0, [r5]
   14ef4:	bl	18c48 <argp_parse@@Base+0x12d0>
   14ef8:	ldr	r0, [r5, #8]
   14efc:	bl	18c48 <argp_parse@@Base+0x12d0>
   14f00:	mov	r0, r5
   14f04:	bl	18c48 <argp_parse@@Base+0x12d0>
   14f08:	mov	r0, r4
   14f0c:	bl	19ac4 <argp_parse@@Base+0x214c>
   14f10:	sub	sp, fp, #28
   14f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f18:	mov	r5, #0
   14f1c:	tst	r6, #16
   14f20:	bne	14dac <argp_help@@Base+0x938>
   14f24:	b	14dd4 <argp_help@@Base+0x960>
   14f28:	cmp	r5, #0
   14f2c:	str	r6, [fp, #-132]	; 0xffffff7c
   14f30:	beq	14f9c <argp_help@@Base+0xb28>
   14f34:	mov	sl, r4
   14f38:	ldr	r0, [sl, #28]!
   14f3c:	mov	r2, sl
   14f40:	ldr	r1, [r2, #4]!
   14f44:	cmp	r0, r1
   14f48:	str	r2, [fp, #-100]	; 0xffffff9c
   14f4c:	bcc	14f68 <argp_help@@Base+0xaf4>
   14f50:	mov	r0, r4
   14f54:	mov	r1, #1
   14f58:	bl	1a068 <argp_parse@@Base+0x26f0>
   14f5c:	cmp	r0, #0
   14f60:	beq	14f78 <argp_help@@Base+0xb04>
   14f64:	ldr	r0, [sl]
   14f68:	add	r1, r0, #1
   14f6c:	str	r1, [sl]
   14f70:	mov	r1, #10
   14f74:	strb	r1, [r0]
   14f78:	ldr	r0, [fp, #-108]	; 0xffffff94
   14f7c:	ldr	r1, [r0, #4]
   14f80:	mov	r0, #0
   14f84:	str	r0, [fp, #-44]	; 0xffffffd4
   14f88:	str	r0, [fp, #-48]	; 0xffffffd0
   14f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   14f90:	cmp	r1, #0
   14f94:	bne	14fb8 <argp_help@@Base+0xb44>
   14f98:	b	157f4 <argp_help@@Base+0x1380>
   14f9c:	mov	r0, #0
   14fa0:	add	sl, r4, #28
   14fa4:	str	r0, [fp, #-44]	; 0xffffffd4
   14fa8:	str	r0, [fp, #-48]	; 0xffffffd0
   14fac:	str	r0, [fp, #-40]	; 0xffffffd8
   14fb0:	add	r0, r4, #32
   14fb4:	str	r0, [fp, #-100]	; 0xffffff9c
   14fb8:	ldr	r0, [fp, #-108]	; 0xffffff94
   14fbc:	str	r4, [fp, #-92]	; 0xffffffa4
   14fc0:	ldr	r6, [r0]
   14fc4:	str	r1, [fp, #-116]	; 0xffffff8c
   14fc8:	ldr	r1, [r4, #24]
   14fcc:	ldr	r2, [sl]
   14fd0:	ldr	r0, [r4, #16]
   14fd4:	mov	r5, r4
   14fd8:	ldr	r4, [r6]
   14fdc:	ldr	r9, [r6, #8]
   14fe0:	sub	r1, r2, r1
   14fe4:	cmp	r1, r0
   14fe8:	bls	14ff4 <argp_help@@Base+0xb80>
   14fec:	mov	r0, r5
   14ff0:	bl	19b08 <argp_parse@@Base+0x2190>
   14ff4:	mov	r0, #0
   14ff8:	mov	r1, #0
   14ffc:	ldr	r7, [r5, #4]
   15000:	ldr	r3, [r5, #12]
   15004:	str	r0, [fp, #-128]	; 0xffffff80
   15008:	sub	r0, fp, #48	; 0x30
   1500c:	str	r1, [r5, #4]
   15010:	str	r5, [fp, #-84]	; 0xffffffac
   15014:	str	r6, [fp, #-88]	; 0xffffffa8
   15018:	str	r0, [fp, #-80]	; 0xffffffb0
   1501c:	mov	r0, #1
   15020:	str	r0, [fp, #-76]	; 0xffffffb4
   15024:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15028:	str	r3, [fp, #-120]	; 0xffffff88
   1502c:	str	r7, [fp, #-124]	; 0xffffff84
   15030:	str	r0, [fp, #-72]	; 0xffffffb8
   15034:	ldrb	r0, [r4, #12]
   15038:	tst	r0, #8
   1503c:	bne	15080 <argp_help@@Base+0xc0c>
   15040:	ldr	r0, [r6, #4]
   15044:	cmp	r0, #0
   15048:	beq	15080 <argp_help@@Base+0xc0c>
   1504c:	add	r1, r4, #12
   15050:	ldr	r2, [r1, #-12]
   15054:	cmp	r2, #0
   15058:	beq	15068 <argp_help@@Base+0xbf4>
   1505c:	ldrb	r2, [r1]
   15060:	tst	r2, #2
   15064:	beq	15078 <argp_help@@Base+0xc04>
   15068:	add	r1, r1, #24
   1506c:	subs	r0, r0, #1
   15070:	bne	15050 <argp_help@@Base+0xbdc>
   15074:	b	15080 <argp_help@@Base+0xc0c>
   15078:	mov	r0, #1
   1507c:	str	r0, [fp, #-128]	; 0xffffff80
   15080:	ldr	r7, [fp, #-92]	; 0xffffffa4
   15084:	ldr	r2, [sl]
   15088:	ldr	r1, [r7, #24]
   1508c:	ldr	r0, [r7, #16]
   15090:	sub	r1, r2, r1
   15094:	movw	r2, #54264	; 0xd3f8
   15098:	movt	r2, #2
   1509c:	cmp	r1, r0
   150a0:	ldr	r5, [r2, #8]
   150a4:	bls	150b0 <argp_help@@Base+0xc3c>
   150a8:	mov	r0, r7
   150ac:	bl	19b08 <argp_parse@@Base+0x2190>
   150b0:	str	r5, [r7, #12]
   150b4:	str	r6, [fp, #-104]	; 0xffffff98
   150b8:	ldr	r7, [r6, #4]
   150bc:	cmp	r7, #0
   150c0:	beq	1521c <argp_help@@Base+0xda8>
   150c4:	add	r6, r4, #12
   150c8:	b	150fc <argp_help@@Base+0xc88>
   150cc:	cmp	r2, #0
   150d0:	beq	150f4 <argp_help@@Base+0xc80>
   150d4:	ldrb	r0, [r4, #12]
   150d8:	tst	r0, #1
   150dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   150e0:	movweq	r1, #47570	; 0xb9d2
   150e4:	movteq	r1, #1
   150e8:	movwne	r1, #48066	; 0xbbc2
   150ec:	movtne	r1, #1
   150f0:	bl	1a154 <argp_parse@@Base+0x27dc>
   150f4:	add	r9, r9, #1
   150f8:	b	15210 <argp_help@@Base+0xd9c>
   150fc:	ldr	r5, [r6]
   15100:	tst	r5, #8
   15104:	bne	15210 <argp_help@@Base+0xd9c>
   15108:	mov	r8, sl
   1510c:	ldr	sl, [r6, #-8]
   15110:	sub	r0, sl, #1
   15114:	cmp	r0, #254	; 0xfe
   15118:	bhi	1520c <argp_help@@Base+0xd98>
   1511c:	bl	115f0 <__ctype_b_loc@plt>
   15120:	ldr	r0, [r0]
   15124:	add	r0, r0, sl, lsl #1
   15128:	ldrb	r0, [r0, #1]
   1512c:	tst	r0, #64	; 0x40
   15130:	beq	1520c <argp_help@@Base+0xd98>
   15134:	ldrb	r0, [r9]
   15138:	cmp	sl, r0
   1513c:	bne	1520c <argp_help@@Base+0xd98>
   15140:	tst	r5, #2
   15144:	mov	sl, r8
   15148:	bne	150f4 <argp_help@@Base+0xc80>
   1514c:	movw	r0, #54264	; 0xd3f8
   15150:	sub	r1, fp, #88	; 0x58
   15154:	movt	r0, #2
   15158:	ldr	r0, [r0, #8]
   1515c:	bl	174c4 <argp_failure@@Base+0x1958>
   15160:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15164:	ldr	r0, [sl]
   15168:	ldr	r1, [r1]
   1516c:	cmp	r0, r1
   15170:	bcc	1518c <argp_help@@Base+0xd18>
   15174:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15178:	mov	r1, #1
   1517c:	bl	1a068 <argp_parse@@Base+0x26f0>
   15180:	cmp	r0, #0
   15184:	beq	1519c <argp_help@@Base+0xd28>
   15188:	ldr	r0, [sl]
   1518c:	add	r1, r0, #1
   15190:	str	r1, [sl]
   15194:	mov	r1, #45	; 0x2d
   15198:	strb	r1, [r0]
   1519c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   151a0:	ldr	r0, [sl]
   151a4:	ldrb	r5, [r9]
   151a8:	ldr	r1, [r1]
   151ac:	cmp	r0, r1
   151b0:	bcc	151cc <argp_help@@Base+0xd58>
   151b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   151b8:	mov	r1, #1
   151bc:	bl	1a068 <argp_parse@@Base+0x26f0>
   151c0:	cmp	r0, #0
   151c4:	beq	151d8 <argp_help@@Base+0xd64>
   151c8:	ldr	r0, [sl]
   151cc:	add	r1, r0, #1
   151d0:	str	r1, [sl]
   151d4:	strb	r5, [r0]
   151d8:	ldr	r0, [fp, #-128]	; 0xffffff80
   151dc:	ldr	r2, [r4, #8]
   151e0:	cmp	r0, #0
   151e4:	beq	150cc <argp_help@@Base+0xc58>
   151e8:	movw	r0, #54264	; 0xd3f8
   151ec:	movt	r0, #2
   151f0:	ldr	r0, [r0]
   151f4:	cmp	r0, #0
   151f8:	bne	150cc <argp_help@@Base+0xc58>
   151fc:	cmp	r2, #0
   15200:	movne	r0, #1
   15204:	strne	r0, [fp, #-40]	; 0xffffffd8
   15208:	b	150f4 <argp_help@@Base+0xc80>
   1520c:	mov	sl, r8
   15210:	add	r6, r6, #24
   15214:	subs	r7, r7, #1
   15218:	bne	150fc <argp_help@@Base+0xc88>
   1521c:	ldrb	r0, [r4, #12]
   15220:	tst	r0, #8
   15224:	bne	152f8 <argp_help@@Base+0xe84>
   15228:	ldr	r6, [fp, #-92]	; 0xffffffa4
   1522c:	ldr	r2, [sl]
   15230:	ldr	r1, [r6, #24]
   15234:	ldr	r0, [r6, #16]
   15238:	sub	r1, r2, r1
   1523c:	movw	r2, #54264	; 0xd3f8
   15240:	movt	r2, #2
   15244:	cmp	r1, r0
   15248:	ldr	r5, [r2, #12]
   1524c:	bls	15258 <argp_help@@Base+0xde4>
   15250:	mov	r0, r6
   15254:	bl	19b08 <argp_parse@@Base+0x2190>
   15258:	ldr	r0, [fp, #-104]	; 0xffffff98
   1525c:	str	r5, [r6, #12]
   15260:	ldr	r5, [r0, #4]
   15264:	cmp	r5, #0
   15268:	beq	153d8 <argp_help@@Base+0xf64>
   1526c:	add	r6, r4, #12
   15270:	ldr	r0, [r6, #-12]
   15274:	cmp	r0, #0
   15278:	beq	152e8 <argp_help@@Base+0xe74>
   1527c:	ldrb	r0, [r6]
   15280:	tst	r0, #2
   15284:	bne	152e8 <argp_help@@Base+0xe74>
   15288:	movw	r0, #54264	; 0xd3f8
   1528c:	sub	r1, fp, #88	; 0x58
   15290:	movt	r0, #2
   15294:	ldr	r0, [r0, #12]
   15298:	bl	174c4 <argp_failure@@Base+0x1958>
   1529c:	ldr	r2, [r6, #-12]
   152a0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   152a4:	movw	r1, #48071	; 0xbbc7
   152a8:	movt	r1, #1
   152ac:	bl	1a154 <argp_parse@@Base+0x27dc>
   152b0:	ldr	r2, [r4, #8]
   152b4:	cmp	r2, #0
   152b8:	beq	152e8 <argp_help@@Base+0xe74>
   152bc:	ldrb	r0, [r4, #12]
   152c0:	tst	r0, #1
   152c4:	bne	152d8 <argp_help@@Base+0xe64>
   152c8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   152cc:	movw	r1, #48076	; 0xbbcc
   152d0:	movt	r1, #1
   152d4:	b	152e4 <argp_help@@Base+0xe70>
   152d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   152dc:	movw	r1, #48080	; 0xbbd0
   152e0:	movt	r1, #1
   152e4:	bl	1a154 <argp_parse@@Base+0x27dc>
   152e8:	add	r6, r6, #24
   152ec:	subs	r5, r5, #1
   152f0:	bne	15270 <argp_help@@Base+0xdfc>
   152f4:	b	153d8 <argp_help@@Base+0xf64>
   152f8:	ldr	r6, [fp, #-92]	; 0xffffffa4
   152fc:	ldr	r2, [sl]
   15300:	ldr	r1, [r6, #24]
   15304:	ldr	r0, [r6, #16]
   15308:	sub	r1, r2, r1
   1530c:	movw	r2, #54264	; 0xd3f8
   15310:	movt	r2, #2
   15314:	cmp	r1, r0
   15318:	ldr	r5, [r2, #16]
   1531c:	bls	15328 <argp_help@@Base+0xeb4>
   15320:	mov	r0, r6
   15324:	bl	19b08 <argp_parse@@Base+0x2190>
   15328:	ldr	r0, [fp, #-104]	; 0xffffff98
   1532c:	str	r5, [r6, #12]
   15330:	ldr	r6, [r0, #4]
   15334:	cmp	r6, #0
   15338:	beq	153d8 <argp_help@@Base+0xf64>
   1533c:	add	r9, r4, #12
   15340:	ldr	r0, [r9, #-12]
   15344:	cmp	r0, #0
   15348:	beq	153cc <argp_help@@Base+0xf58>
   1534c:	ldrb	r0, [r9]
   15350:	tst	r0, #2
   15354:	bne	153cc <argp_help@@Base+0xf58>
   15358:	movw	r0, #54264	; 0xd3f8
   1535c:	sub	r1, fp, #88	; 0x58
   15360:	movt	r0, #2
   15364:	ldr	r0, [r0, #16]
   15368:	bl	174c4 <argp_failure@@Base+0x1958>
   1536c:	ldr	r5, [r9, #-12]
   15370:	mov	r0, r5
   15374:	bl	11614 <strlen@plt>
   15378:	cmp	r0, #0
   1537c:	beq	153cc <argp_help@@Base+0xf58>
   15380:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15384:	mov	r7, r0
   15388:	ldr	r0, [sl]
   1538c:	ldr	r2, [r2]
   15390:	add	r1, r0, r7
   15394:	cmp	r1, r2
   15398:	bls	153b4 <argp_help@@Base+0xf40>
   1539c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   153a0:	mov	r1, r7
   153a4:	bl	1a068 <argp_parse@@Base+0x26f0>
   153a8:	cmp	r0, #0
   153ac:	beq	153cc <argp_help@@Base+0xf58>
   153b0:	ldr	r0, [sl]
   153b4:	mov	r1, r5
   153b8:	mov	r2, r7
   153bc:	bl	114d0 <memcpy@plt>
   153c0:	ldr	r0, [sl]
   153c4:	add	r0, r0, r7
   153c8:	str	r0, [sl]
   153cc:	add	r9, r9, #24
   153d0:	subs	r6, r6, #1
   153d4:	bne	15340 <argp_help@@Base+0xecc>
   153d8:	ldr	r5, [fp, #-92]	; 0xffffffa4
   153dc:	ldr	r2, [sl]
   153e0:	ldr	r1, [r5, #24]
   153e4:	ldr	r0, [r5, #16]
   153e8:	sub	r1, r2, r1
   153ec:	cmp	r1, r0
   153f0:	bls	153fc <argp_help@@Base+0xf88>
   153f4:	mov	r0, r5
   153f8:	bl	19b08 <argp_parse@@Base+0x2190>
   153fc:	mov	r0, #0
   15400:	ldr	r6, [fp, #-104]	; 0xffffff98
   15404:	str	r0, [r5, #4]
   15408:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1540c:	cmp	r0, #0
   15410:	beq	15468 <argp_help@@Base+0xff4>
   15414:	ldrb	r0, [r4, #12]
   15418:	tst	r0, #8
   1541c:	bne	15448 <argp_help@@Base+0xfd4>
   15420:	ldr	r5, [r4, #4]
   15424:	sub	r0, r5, #1
   15428:	cmp	r0, #254	; 0xfe
   1542c:	bhi	15448 <argp_help@@Base+0xfd4>
   15430:	bl	115f0 <__ctype_b_loc@plt>
   15434:	ldr	r0, [r0]
   15438:	add	r0, r0, r5, lsl #1
   1543c:	ldrb	r0, [r0, #1]
   15440:	tst	r0, #64	; 0x40
   15444:	bne	15774 <argp_help@@Base+0x1300>
   15448:	ldr	r0, [r4]
   1544c:	cmp	r0, #0
   15450:	bne	15774 <argp_help@@Base+0x1300>
   15454:	ldr	r1, [r6, #20]
   15458:	ldr	r0, [r4, #16]
   1545c:	sub	r2, fp, #88	; 0x58
   15460:	bl	176cc <argp_failure@@Base+0x1b60>
   15464:	b	15770 <argp_help@@Base+0x12fc>
   15468:	ldr	r6, [r6, #20]
   1546c:	ldr	r7, [r4, #16]
   15470:	cmp	r6, #0
   15474:	mov	r9, r7
   15478:	beq	154b4 <argp_help@@Base+0x1040>
   1547c:	ldr	r0, [r6, #20]
   15480:	mov	r9, r7
   15484:	cmp	r0, #0
   15488:	beq	154b4 <argp_help@@Base+0x1040>
   1548c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15490:	ldr	r4, [r4, #4]
   15494:	mov	r0, r6
   15498:	bl	185b4 <argp_parse@@Base+0xc3c>
   1549c:	ldr	r3, [r6, #20]
   154a0:	mov	r2, r0
   154a4:	mov	r0, r4
   154a8:	mov	r1, r7
   154ac:	blx	r3
   154b0:	mov	r9, r0
   154b4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   154b8:	movw	r5, #54264	; 0xd3f8
   154bc:	cmp	r9, #0
   154c0:	movt	r5, #2
   154c4:	beq	1570c <argp_help@@Base+0x1298>
   154c8:	ldrb	r0, [r9]
   154cc:	cmp	r0, #0
   154d0:	beq	156fc <argp_help@@Base+0x1288>
   154d4:	ldr	r1, [r4, #24]
   154d8:	ldr	r2, [sl]
   154dc:	ldr	r0, [r4, #16]
   154e0:	str	r7, [fp, #-128]	; 0xffffff80
   154e4:	sub	r1, r2, r1
   154e8:	cmp	r1, r0
   154ec:	bls	15508 <argp_help@@Base+0x1094>
   154f0:	mov	r0, r4
   154f4:	bl	19b08 <argp_parse@@Base+0x2190>
   154f8:	ldr	r1, [r4, #24]
   154fc:	ldr	r2, [sl]
   15500:	ldr	r0, [r4, #16]
   15504:	sub	r1, r2, r1
   15508:	ldr	r5, [r5, #20]
   1550c:	ldr	r8, [r4, #20]
   15510:	cmp	r1, r0
   15514:	mov	r6, r5
   15518:	bls	15540 <argp_help@@Base+0x10cc>
   1551c:	mov	r0, r4
   15520:	bl	19b08 <argp_parse@@Base+0x2190>
   15524:	ldr	r1, [r4, #24]
   15528:	ldr	r2, [sl]
   1552c:	ldr	r0, [r4, #16]
   15530:	sub	r1, r2, r1
   15534:	movw	r2, #54264	; 0xd3f8
   15538:	movt	r2, #2
   1553c:	ldr	r6, [r2, #20]
   15540:	bic	r7, r8, r8, asr #31
   15544:	movw	r8, #54264	; 0xd3f8
   15548:	str	r5, [r4, #4]
   1554c:	cmp	r1, r0
   15550:	mov	r5, r6
   15554:	movt	r8, #2
   15558:	bls	15568 <argp_help@@Base+0x10f4>
   1555c:	mov	r0, r4
   15560:	bl	19b08 <argp_parse@@Base+0x2190>
   15564:	ldr	r5, [r8, #20]
   15568:	add	r0, r5, #3
   1556c:	str	r6, [r4, #12]
   15570:	cmp	r7, r0
   15574:	bls	155bc <argp_help@@Base+0x1148>
   15578:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1557c:	ldr	r0, [sl]
   15580:	ldr	r7, [fp, #-128]	; 0xffffff80
   15584:	ldr	r1, [r1]
   15588:	cmp	r0, r1
   1558c:	bcc	155a8 <argp_help@@Base+0x1134>
   15590:	mov	r0, r4
   15594:	mov	r1, #1
   15598:	bl	1a068 <argp_parse@@Base+0x26f0>
   1559c:	cmp	r0, #0
   155a0:	beq	156a0 <argp_help@@Base+0x122c>
   155a4:	ldr	r0, [sl]
   155a8:	add	r1, r0, #1
   155ac:	str	r1, [sl]
   155b0:	mov	r1, #10
   155b4:	strb	r1, [r0]
   155b8:	b	156a0 <argp_help@@Base+0x122c>
   155bc:	cmp	r7, r5
   155c0:	bcs	15650 <argp_help@@Base+0x11dc>
   155c4:	ldr	r1, [r4, #24]
   155c8:	ldr	r2, [sl]
   155cc:	ldr	r0, [r4, #16]
   155d0:	sub	r1, r2, r1
   155d4:	cmp	r1, r0
   155d8:	bls	155e4 <argp_help@@Base+0x1170>
   155dc:	mov	r0, r4
   155e0:	bl	19b08 <argp_parse@@Base+0x2190>
   155e4:	ldr	r0, [r4, #20]
   155e8:	ldr	r7, [fp, #-128]	; 0xffffff80
   155ec:	bic	r0, r0, r0, asr #31
   155f0:	sub	r1, r5, r0
   155f4:	cmp	r1, #1
   155f8:	blt	156a0 <argp_help@@Base+0x122c>
   155fc:	add	r1, r5, #1
   15600:	sub	r6, r1, r0
   15604:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15608:	ldr	r0, [sl]
   1560c:	ldr	r1, [r1]
   15610:	cmp	r0, r1
   15614:	bcc	15630 <argp_help@@Base+0x11bc>
   15618:	mov	r0, r4
   1561c:	mov	r1, #1
   15620:	bl	1a068 <argp_parse@@Base+0x26f0>
   15624:	cmp	r0, #0
   15628:	beq	15640 <argp_help@@Base+0x11cc>
   1562c:	ldr	r0, [sl]
   15630:	add	r1, r0, #1
   15634:	str	r1, [sl]
   15638:	mov	r1, #32
   1563c:	strb	r1, [r0]
   15640:	sub	r6, r6, #1
   15644:	cmp	r6, #1
   15648:	bgt	15604 <argp_help@@Base+0x1190>
   1564c:	b	156a0 <argp_help@@Base+0x122c>
   15650:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15654:	ldr	r7, [fp, #-128]	; 0xffffff80
   15658:	ldr	r1, [r0]
   1565c:	ldr	r0, [sl]
   15660:	add	r2, r0, #3
   15664:	cmp	r2, r1
   15668:	bls	15684 <argp_help@@Base+0x1210>
   1566c:	mov	r0, r4
   15670:	mov	r1, #3
   15674:	bl	1a068 <argp_parse@@Base+0x26f0>
   15678:	cmp	r0, #0
   1567c:	beq	156a0 <argp_help@@Base+0x122c>
   15680:	ldr	r0, [sl]
   15684:	mov	r1, #32
   15688:	strb	r1, [r0, #2]
   1568c:	movw	r1, #8224	; 0x2020
   15690:	strh	r1, [r0]
   15694:	ldr	r0, [sl]
   15698:	add	r0, r0, #3
   1569c:	str	r0, [sl]
   156a0:	mov	r0, r9
   156a4:	bl	11614 <strlen@plt>
   156a8:	cmp	r0, #0
   156ac:	beq	156fc <argp_help@@Base+0x1288>
   156b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   156b4:	mov	r6, r0
   156b8:	ldr	r0, [sl]
   156bc:	ldr	r2, [r2]
   156c0:	add	r1, r0, r6
   156c4:	cmp	r1, r2
   156c8:	bls	156e4 <argp_help@@Base+0x1270>
   156cc:	mov	r0, r4
   156d0:	mov	r1, r6
   156d4:	bl	1a068 <argp_parse@@Base+0x26f0>
   156d8:	cmp	r0, #0
   156dc:	beq	156fc <argp_help@@Base+0x1288>
   156e0:	ldr	r0, [sl]
   156e4:	mov	r1, r9
   156e8:	mov	r2, r6
   156ec:	bl	114d0 <memcpy@plt>
   156f0:	ldr	r0, [sl]
   156f4:	add	r0, r0, r6
   156f8:	str	r0, [sl]
   156fc:	cmp	r9, r7
   15700:	beq	1570c <argp_help@@Base+0x1298>
   15704:	mov	r0, r9
   15708:	bl	18c48 <argp_parse@@Base+0x12d0>
   1570c:	ldr	r2, [r4, #24]
   15710:	ldr	r0, [sl]
   15714:	ldr	r1, [r4, #16]
   15718:	sub	r2, r0, r2
   1571c:	cmp	r2, r1
   15720:	bls	15730 <argp_help@@Base+0x12bc>
   15724:	mov	r0, r4
   15728:	bl	19b08 <argp_parse@@Base+0x2190>
   1572c:	ldr	r0, [r4, #28]
   15730:	mov	r1, #0
   15734:	ldr	r6, [fp, #-104]	; 0xffffff98
   15738:	str	r1, [r4, #4]
   1573c:	ldr	r1, [r4, #32]
   15740:	cmp	r0, r1
   15744:	bcc	15760 <argp_help@@Base+0x12ec>
   15748:	mov	r0, r4
   1574c:	mov	r1, #1
   15750:	bl	1a068 <argp_parse@@Base+0x26f0>
   15754:	cmp	r0, #0
   15758:	beq	15770 <argp_help@@Base+0x12fc>
   1575c:	ldr	r0, [sl]
   15760:	add	r1, r0, #1
   15764:	str	r1, [sl]
   15768:	mov	r1, #10
   1576c:	strb	r1, [r0]
   15770:	str	r6, [fp, #-48]	; 0xffffffd0
   15774:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15778:	ldr	r2, [sl]
   1577c:	ldr	r1, [r4, #24]
   15780:	ldr	r0, [r4, #16]
   15784:	sub	r1, r2, r1
   15788:	cmp	r1, r0
   1578c:	bls	157a8 <argp_help@@Base+0x1334>
   15790:	mov	r0, r4
   15794:	bl	19b08 <argp_parse@@Base+0x2190>
   15798:	ldr	r1, [r4, #24]
   1579c:	ldr	r2, [sl]
   157a0:	ldr	r0, [r4, #16]
   157a4:	sub	r1, r2, r1
   157a8:	ldr	r2, [fp, #-124]	; 0xffffff84
   157ac:	ldr	r5, [fp, #-120]	; 0xffffff88
   157b0:	cmp	r1, r0
   157b4:	str	r2, [r4, #4]
   157b8:	bls	157c4 <argp_help@@Base+0x1350>
   157bc:	mov	r0, r4
   157c0:	bl	19b08 <argp_parse@@Base+0x2190>
   157c4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   157c8:	add	r6, r6, #28
   157cc:	str	r5, [r4, #12]
   157d0:	subs	r1, r1, #1
   157d4:	bne	14fc4 <argp_help@@Base+0xb50>
   157d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   157dc:	cmp	r0, #0
   157e0:	movw	r0, #54264	; 0xd3f8
   157e4:	movt	r0, #2
   157e8:	ldrne	r0, [r0, #4]
   157ec:	cmpne	r0, #0
   157f0:	bne	15808 <argp_help@@Base+0x1394>
   157f4:	ldr	r6, [fp, #-132]	; 0xffffff7c
   157f8:	mov	r5, #1
   157fc:	tst	r6, #32
   15800:	bne	14e18 <argp_help@@Base+0x9a4>
   15804:	b	14e40 <argp_help@@Base+0x9cc>
   15808:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1580c:	movw	r5, #47950	; 0xbb4e
   15810:	movt	r5, #1
   15814:	cmp	r0, #0
   15818:	beq	15830 <argp_help@@Base+0x13bc>
   1581c:	ldr	r6, [r0]
   15820:	cmp	r6, #0
   15824:	ldrne	r0, [r6, #20]
   15828:	cmpne	r0, #0
   1582c:	bne	1592c <argp_help@@Base+0x14b8>
   15830:	ldrb	r0, [r5]
   15834:	cmp	r0, #0
   15838:	beq	15910 <argp_help@@Base+0x149c>
   1583c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15840:	ldr	r0, [sl]
   15844:	ldr	r1, [r1]
   15848:	cmp	r0, r1
   1584c:	bcc	15868 <argp_help@@Base+0x13f4>
   15850:	mov	r0, r4
   15854:	mov	r1, #1
   15858:	bl	1a068 <argp_parse@@Base+0x26f0>
   1585c:	cmp	r0, #0
   15860:	beq	15878 <argp_help@@Base+0x1404>
   15864:	ldr	r0, [sl]
   15868:	add	r1, r0, #1
   1586c:	str	r1, [sl]
   15870:	mov	r1, #10
   15874:	strb	r1, [r0]
   15878:	mov	r0, r5
   1587c:	bl	11614 <strlen@plt>
   15880:	cmp	r0, #0
   15884:	beq	158d4 <argp_help@@Base+0x1460>
   15888:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1588c:	mov	r6, r0
   15890:	ldr	r0, [sl]
   15894:	ldr	r2, [r2]
   15898:	add	r1, r0, r6
   1589c:	cmp	r1, r2
   158a0:	bls	158bc <argp_help@@Base+0x1448>
   158a4:	mov	r0, r4
   158a8:	mov	r1, r6
   158ac:	bl	1a068 <argp_parse@@Base+0x26f0>
   158b0:	cmp	r0, #0
   158b4:	beq	158d4 <argp_help@@Base+0x1460>
   158b8:	ldr	r0, [sl]
   158bc:	mov	r1, r5
   158c0:	mov	r2, r6
   158c4:	bl	114d0 <memcpy@plt>
   158c8:	ldr	r0, [sl]
   158cc:	add	r0, r0, r6
   158d0:	str	r0, [sl]
   158d4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   158d8:	ldr	r0, [sl]
   158dc:	ldr	r1, [r1]
   158e0:	cmp	r0, r1
   158e4:	bcc	15900 <argp_help@@Base+0x148c>
   158e8:	mov	r0, r4
   158ec:	mov	r1, #1
   158f0:	bl	1a068 <argp_parse@@Base+0x26f0>
   158f4:	cmp	r0, #0
   158f8:	beq	15910 <argp_help@@Base+0x149c>
   158fc:	ldr	r0, [sl]
   15900:	add	r1, r0, #1
   15904:	str	r1, [sl]
   15908:	mov	r1, #10
   1590c:	strb	r1, [r0]
   15910:	movw	r0, #47950	; 0xbb4e
   15914:	movt	r0, #1
   15918:	cmp	r5, r0
   1591c:	beq	157f4 <argp_help@@Base+0x1380>
   15920:	mov	r0, r5
   15924:	bl	18c48 <argp_parse@@Base+0x12d0>
   15928:	b	157f4 <argp_help@@Base+0x1380>
   1592c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15930:	mov	r0, r6
   15934:	bl	185b4 <argp_parse@@Base+0xc3c>
   15938:	ldr	r3, [r6, #20]
   1593c:	movw	r1, #47950	; 0xbb4e
   15940:	mov	r2, r0
   15944:	movw	r0, #5
   15948:	movt	r0, #512	; 0x200
   1594c:	movt	r1, #1
   15950:	blx	r3
   15954:	mov	r5, r0
   15958:	cmp	r0, #0
   1595c:	bne	15830 <argp_help@@Base+0x13bc>
   15960:	b	157f4 <argp_help@@Base+0x1380>
   15964:	add	r0, r0, #112	; 0x70
   15968:	b	149d8 <argp_help@@Base+0x564>

0001596c <argp_state_help@@Base>:
   1596c:	push	{r4, r5, fp, lr}
   15970:	add	fp, sp, #8
   15974:	sub	sp, sp, #8
   15978:	mov	r4, r2
   1597c:	mov	r2, r1
   15980:	cmp	r0, #0
   15984:	beq	159d0 <argp_state_help@@Base+0x64>
   15988:	cmp	r2, #0
   1598c:	beq	15a08 <argp_state_help@@Base+0x9c>
   15990:	ldr	r1, [r0, #16]
   15994:	mov	r5, r0
   15998:	ands	r0, r1, #2
   1599c:	bne	15a08 <argp_state_help@@Base+0x9c>
   159a0:	ldr	r3, [r5, #40]	; 0x28
   159a4:	ldr	r0, [r5]
   159a8:	and	r1, r1, #64	; 0x40
   159ac:	orr	r4, r4, r1, lsl #1
   159b0:	mov	r1, r5
   159b4:	str	r3, [sp]
   159b8:	mov	r3, r4
   159bc:	bl	144a0 <argp_help@@Base+0x2c>
   159c0:	ldrb	r0, [r5, #16]
   159c4:	tst	r0, #32
   159c8:	beq	159f8 <argp_state_help@@Base+0x8c>
   159cc:	b	15a08 <argp_state_help@@Base+0x9c>
   159d0:	cmp	r2, #0
   159d4:	beq	15a08 <argp_state_help@@Base+0x9c>
   159d8:	movw	r0, #54328	; 0xd438
   159dc:	mov	r1, #0
   159e0:	mov	r3, r4
   159e4:	movt	r0, #2
   159e8:	ldr	r0, [r0]
   159ec:	str	r0, [sp]
   159f0:	mov	r0, #0
   159f4:	bl	144a0 <argp_help@@Base+0x2c>
   159f8:	tst	r4, #256	; 0x100
   159fc:	bne	15a10 <argp_state_help@@Base+0xa4>
   15a00:	tst	r4, #512	; 0x200
   15a04:	bne	15a20 <argp_state_help@@Base+0xb4>
   15a08:	sub	sp, fp, #8
   15a0c:	pop	{r4, r5, fp, pc}
   15a10:	movw	r0, #54304	; 0xd420
   15a14:	movt	r0, #2
   15a18:	ldr	r0, [r0]
   15a1c:	bl	115fc <exit@plt>
   15a20:	mov	r0, #0
   15a24:	bl	115fc <exit@plt>

00015a28 <argp_error@@Base>:
   15a28:	sub	sp, sp, #8
   15a2c:	push	{r4, r5, r6, sl, fp, lr}
   15a30:	add	fp, sp, #16
   15a34:	sub	sp, sp, #8
   15a38:	mov	r6, r1
   15a3c:	mov	r4, r0
   15a40:	cmp	r0, #0
   15a44:	str	r3, [fp, #12]
   15a48:	str	r2, [fp, #8]
   15a4c:	beq	15a64 <argp_error@@Base+0x3c>
   15a50:	ldrb	r0, [r4, #16]
   15a54:	tst	r0, #2
   15a58:	bne	15b2c <argp_error@@Base+0x104>
   15a5c:	add	r0, r4, #44	; 0x2c
   15a60:	b	15a6c <argp_error@@Base+0x44>
   15a64:	movw	r0, #54336	; 0xd440
   15a68:	movt	r0, #2
   15a6c:	ldr	r5, [r0]
   15a70:	cmp	r5, #0
   15a74:	beq	15b2c <argp_error@@Base+0x104>
   15a78:	mov	r0, r5
   15a7c:	bl	11710 <flockfile@plt>
   15a80:	add	r0, fp, #8
   15a84:	cmp	r4, #0
   15a88:	mov	r1, r5
   15a8c:	str	r0, [sp, #4]
   15a90:	movw	r0, #54328	; 0xd438
   15a94:	movt	r0, #2
   15a98:	addne	r0, r4, #40	; 0x28
   15a9c:	ldr	r0, [r0]
   15aa0:	bl	11434 <fputs_unlocked@plt>
   15aa4:	ldr	r0, [r5, #20]
   15aa8:	ldr	r1, [r5, #24]
   15aac:	cmp	r0, r1
   15ab0:	bcs	15b3c <argp_error@@Base+0x114>
   15ab4:	add	r1, r0, #1
   15ab8:	str	r1, [r5, #20]
   15abc:	mov	r1, #58	; 0x3a
   15ac0:	strb	r1, [r0]
   15ac4:	ldr	r0, [r5, #20]
   15ac8:	ldr	r1, [r5, #24]
   15acc:	cmp	r0, r1
   15ad0:	bcs	15b4c <argp_error@@Base+0x124>
   15ad4:	add	r1, r0, #1
   15ad8:	str	r1, [r5, #20]
   15adc:	mov	r1, #32
   15ae0:	strb	r1, [r0]
   15ae4:	ldr	r2, [sp, #4]
   15ae8:	mov	r0, r5
   15aec:	mov	r1, r6
   15af0:	bl	116ec <vfprintf@plt>
   15af4:	ldr	r0, [r5, #20]
   15af8:	ldr	r1, [r5, #24]
   15afc:	cmp	r0, r1
   15b00:	bcs	15b5c <argp_error@@Base+0x134>
   15b04:	add	r1, r0, #1
   15b08:	str	r1, [r5, #20]
   15b0c:	mov	r1, #10
   15b10:	strb	r1, [r0]
   15b14:	mov	r0, r4
   15b18:	mov	r1, r5
   15b1c:	mov	r2, #260	; 0x104
   15b20:	bl	1596c <argp_state_help@@Base>
   15b24:	mov	r0, r5
   15b28:	bl	11530 <funlockfile@plt>
   15b2c:	sub	sp, fp, #16
   15b30:	pop	{r4, r5, r6, sl, fp, lr}
   15b34:	add	sp, sp, #8
   15b38:	bx	lr
   15b3c:	mov	r0, r5
   15b40:	mov	r1, #58	; 0x3a
   15b44:	bl	116c8 <__overflow@plt>
   15b48:	b	15ac4 <argp_error@@Base+0x9c>
   15b4c:	mov	r0, r5
   15b50:	mov	r1, #32
   15b54:	bl	116c8 <__overflow@plt>
   15b58:	b	15ae4 <argp_error@@Base+0xbc>
   15b5c:	mov	r0, r5
   15b60:	mov	r1, #10
   15b64:	bl	116c8 <__overflow@plt>
   15b68:	b	15b14 <argp_error@@Base+0xec>

00015b6c <argp_failure@@Base>:
   15b6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b70:	add	fp, sp, #24
   15b74:	sub	sp, sp, #200	; 0xc8
   15b78:	mov	r4, r3
   15b7c:	mov	r9, r2
   15b80:	mov	r8, r1
   15b84:	mov	r5, r0
   15b88:	cmp	r0, #0
   15b8c:	beq	15ba4 <argp_failure@@Base+0x38>
   15b90:	ldrb	r0, [r5, #16]
   15b94:	tst	r0, #2
   15b98:	bne	15d1c <argp_failure@@Base+0x1b0>
   15b9c:	add	r0, r5, #44	; 0x2c
   15ba0:	b	15bac <argp_failure@@Base+0x40>
   15ba4:	movw	r0, #54336	; 0xd440
   15ba8:	movt	r0, #2
   15bac:	ldr	r6, [r0]
   15bb0:	cmp	r6, #0
   15bb4:	beq	15d1c <argp_failure@@Base+0x1b0>
   15bb8:	mov	r0, r6
   15bbc:	bl	11710 <flockfile@plt>
   15bc0:	movw	r0, #54328	; 0xd438
   15bc4:	cmp	r5, #0
   15bc8:	mov	r1, r6
   15bcc:	movt	r0, #2
   15bd0:	addne	r0, r5, #40	; 0x28
   15bd4:	ldr	r0, [r0]
   15bd8:	bl	11434 <fputs_unlocked@plt>
   15bdc:	cmp	r4, #0
   15be0:	beq	15c3c <argp_failure@@Base+0xd0>
   15be4:	add	r0, fp, #8
   15be8:	str	r0, [sp]
   15bec:	ldr	r0, [r6, #20]
   15bf0:	ldr	r1, [r6, #24]
   15bf4:	cmp	r0, r1
   15bf8:	bcs	15d34 <argp_failure@@Base+0x1c8>
   15bfc:	add	r1, r0, #1
   15c00:	str	r1, [r6, #20]
   15c04:	mov	r1, #58	; 0x3a
   15c08:	strb	r1, [r0]
   15c0c:	ldr	r0, [r6, #20]
   15c10:	ldr	r1, [r6, #24]
   15c14:	cmp	r0, r1
   15c18:	bcs	15d44 <argp_failure@@Base+0x1d8>
   15c1c:	add	r1, r0, #1
   15c20:	str	r1, [r6, #20]
   15c24:	mov	r1, #32
   15c28:	strb	r1, [r0]
   15c2c:	ldr	r2, [sp]
   15c30:	mov	r0, r6
   15c34:	mov	r1, r4
   15c38:	bl	116ec <vfprintf@plt>
   15c3c:	cmp	r9, #0
   15c40:	beq	15ccc <argp_failure@@Base+0x160>
   15c44:	mov	r4, r6
   15c48:	ldr	r0, [r4, #20]!
   15c4c:	mov	r7, r4
   15c50:	ldr	r1, [r7, #4]!
   15c54:	cmp	r0, r1
   15c58:	bcs	15d54 <argp_failure@@Base+0x1e8>
   15c5c:	add	r1, r0, #1
   15c60:	str	r1, [r4]
   15c64:	mov	r1, #58	; 0x3a
   15c68:	strb	r1, [r0]
   15c6c:	ldr	r0, [r4]
   15c70:	ldr	r1, [r7]
   15c74:	cmp	r0, r1
   15c78:	bcs	15d64 <argp_failure@@Base+0x1f8>
   15c7c:	add	r1, r0, #1
   15c80:	str	r1, [r4]
   15c84:	mov	r1, #32
   15c88:	strb	r1, [r0]
   15c8c:	mov	r1, sp
   15c90:	mov	r0, r9
   15c94:	mov	r2, #200	; 0xc8
   15c98:	bl	11650 <strerror_r@plt>
   15c9c:	cmp	r0, #0
   15ca0:	bne	15cc0 <argp_failure@@Base+0x154>
   15ca4:	mov	r0, r9
   15ca8:	bl	115cc <strerror@plt>
   15cac:	mov	r1, r0
   15cb0:	movw	r0, #47325	; 0xb8dd
   15cb4:	movt	r0, #1
   15cb8:	cmp	r1, #0
   15cbc:	movne	r0, r1
   15cc0:	mov	r1, r6
   15cc4:	bl	11434 <fputs_unlocked@plt>
   15cc8:	b	15cd4 <argp_failure@@Base+0x168>
   15ccc:	add	r7, r6, #24
   15cd0:	add	r4, r6, #20
   15cd4:	ldr	r0, [r4]
   15cd8:	ldr	r1, [r7]
   15cdc:	cmp	r0, r1
   15ce0:	bcs	15d24 <argp_failure@@Base+0x1b8>
   15ce4:	add	r1, r0, #1
   15ce8:	str	r1, [r4]
   15cec:	mov	r1, #10
   15cf0:	strb	r1, [r0]
   15cf4:	mov	r0, r6
   15cf8:	bl	11530 <funlockfile@plt>
   15cfc:	cmp	r8, #0
   15d00:	beq	15d1c <argp_failure@@Base+0x1b0>
   15d04:	cmp	r5, #0
   15d08:	ldrbne	r0, [r5, #16]
   15d0c:	tstne	r0, #32
   15d10:	bne	15d1c <argp_failure@@Base+0x1b0>
   15d14:	mov	r0, r8
   15d18:	bl	115fc <exit@plt>
   15d1c:	sub	sp, fp, #24
   15d20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d24:	mov	r0, r6
   15d28:	mov	r1, #10
   15d2c:	bl	116c8 <__overflow@plt>
   15d30:	b	15cf4 <argp_failure@@Base+0x188>
   15d34:	mov	r0, r6
   15d38:	mov	r1, #58	; 0x3a
   15d3c:	bl	116c8 <__overflow@plt>
   15d40:	b	15c0c <argp_failure@@Base+0xa0>
   15d44:	mov	r0, r6
   15d48:	mov	r1, #32
   15d4c:	bl	116c8 <__overflow@plt>
   15d50:	b	15c2c <argp_failure@@Base+0xc0>
   15d54:	mov	r0, r6
   15d58:	mov	r1, #58	; 0x3a
   15d5c:	bl	116c8 <__overflow@plt>
   15d60:	b	15c6c <argp_failure@@Base+0x100>
   15d64:	mov	r0, r6
   15d68:	mov	r1, #32
   15d6c:	bl	116c8 <__overflow@plt>
   15d70:	b	15c8c <argp_failure@@Base+0x120>
   15d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d78:	add	fp, sp, #28
   15d7c:	sub	sp, sp, #52	; 0x34
   15d80:	ldr	r4, [r0]
   15d84:	ldr	r9, [r0, #16]
   15d88:	mov	r7, r0
   15d8c:	mov	r0, #16
   15d90:	mov	sl, r1
   15d94:	bl	199c0 <argp_parse@@Base+0x2048>
   15d98:	cmp	r0, #0
   15d9c:	beq	16378 <argp_failure@@Base+0x80c>
   15da0:	mov	r1, #0
   15da4:	str	r0, [fp, #-32]	; 0xffffffe0
   15da8:	cmp	r4, #0
   15dac:	str	r7, [sp, #40]	; 0x28
   15db0:	str	r1, [r0, #12]!
   15db4:	str	r0, [sp, #20]
   15db8:	str	r1, [r0, #-8]
   15dbc:	beq	1600c <argp_failure@@Base+0x4a0>
   15dc0:	ldrb	r0, [r4, #12]
   15dc4:	tst	r0, #4
   15dc8:	bne	16398 <argp_failure@@Base+0x82c>
   15dcc:	add	r5, r4, #12
   15dd0:	mov	r6, #0
   15dd4:	mov	r8, #0
   15dd8:	b	15de0 <argp_failure@@Base+0x274>
   15ddc:	add	r5, r5, #24
   15de0:	ldr	r7, [r5, #-8]
   15de4:	cmp	r7, #0
   15de8:	bne	15e10 <argp_failure@@Base+0x2a4>
   15dec:	ldr	r0, [r5, #-12]
   15df0:	cmp	r0, #0
   15df4:	bne	15e10 <argp_failure@@Base+0x2a4>
   15df8:	ldr	r0, [r5, #4]
   15dfc:	cmp	r0, #0
   15e00:	bne	15e10 <argp_failure@@Base+0x2a4>
   15e04:	ldr	r0, [r5, #8]
   15e08:	cmp	r0, #0
   15e0c:	beq	15e54 <argp_failure@@Base+0x2e8>
   15e10:	ldr	r0, [r5]
   15e14:	tst	r0, #4
   15e18:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   15e1c:	addeq	r6, r6, #1
   15e20:	streq	r6, [r1, #4]
   15e24:	sub	r1, r7, #1
   15e28:	cmp	r1, #254	; 0xfe
   15e2c:	bhi	15ddc <argp_failure@@Base+0x270>
   15e30:	ands	r0, r0, #8
   15e34:	bne	15ddc <argp_failure@@Base+0x270>
   15e38:	bl	115f0 <__ctype_b_loc@plt>
   15e3c:	ldr	r0, [r0]
   15e40:	add	r0, r0, r7, lsl #1
   15e44:	ldrb	r0, [r0, #1]
   15e48:	tst	r0, #64	; 0x40
   15e4c:	addne	r8, r8, #1
   15e50:	b	15ddc <argp_failure@@Base+0x270>
   15e54:	rsb	r0, r6, r6, lsl #3
   15e58:	lsl	r0, r0, #2
   15e5c:	bl	199c0 <argp_parse@@Base+0x2048>
   15e60:	mov	r5, r0
   15e64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e68:	str	r5, [r0]
   15e6c:	add	r0, r8, #1
   15e70:	bl	199c0 <argp_parse@@Base+0x2048>
   15e74:	mov	r7, r0
   15e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e7c:	cmp	r5, #0
   15e80:	cmpne	r7, #0
   15e84:	str	r7, [r0, #8]
   15e88:	bne	15eac <argp_failure@@Base+0x340>
   15e8c:	movw	r0, #47730	; 0xba72
   15e90:	movw	r1, #47638	; 0xba16
   15e94:	movw	r3, #47650	; 0xba22
   15e98:	movw	r2, #474	; 0x1da
   15e9c:	movt	r0, #1
   15ea0:	movt	r1, #1
   15ea4:	movt	r3, #1
   15ea8:	bl	11794 <__assert_fail@plt>
   15eac:	movw	r0, #37450	; 0x924a
   15eb0:	str	r9, [sp, #12]
   15eb4:	movt	r0, #2340	; 0x924
   15eb8:	cmp	r6, r0
   15ebc:	bcs	163b8 <argp_failure@@Base+0x84c>
   15ec0:	mov	r8, #0
   15ec4:	mov	r0, #0
   15ec8:	b	15ed8 <argp_failure@@Base+0x36c>
   15ecc:	mov	r4, r0
   15ed0:	add	r5, r5, #28
   15ed4:	mov	r0, r9
   15ed8:	ldr	r1, [r4, #4]
   15edc:	cmp	r1, #0
   15ee0:	bne	15f08 <argp_failure@@Base+0x39c>
   15ee4:	ldr	r2, [r4]
   15ee8:	cmp	r2, #0
   15eec:	bne	15f08 <argp_failure@@Base+0x39c>
   15ef0:	ldr	r2, [r4, #16]
   15ef4:	cmp	r2, #0
   15ef8:	bne	15f08 <argp_failure@@Base+0x39c>
   15efc:	ldr	r2, [r4, #20]
   15f00:	cmp	r2, #0
   15f04:	beq	15ffc <argp_failure@@Base+0x490>
   15f08:	stm	r5, {r4, r8}
   15f0c:	str	r7, [r5, #8]
   15f10:	ldr	r9, [r4, #20]
   15f14:	cmp	r9, #0
   15f18:	bne	15f34 <argp_failure@@Base+0x3c8>
   15f1c:	ldr	r2, [r4]
   15f20:	cmp	r2, #0
   15f24:	bne	15f30 <argp_failure@@Base+0x3c4>
   15f28:	cmp	r1, #0
   15f2c:	addeq	r0, r0, #1
   15f30:	mov	r9, r0
   15f34:	ldr	r0, [sp, #40]	; 0x28
   15f38:	mov	r1, #0
   15f3c:	str	r9, [r5, #12]
   15f40:	str	sl, [r5, #16]
   15f44:	str	r0, [r5, #20]
   15f48:	b	15f54 <argp_failure@@Base+0x3e8>
   15f4c:	ldr	r1, [r5, #4]
   15f50:	mov	r4, r0
   15f54:	add	r0, r1, #1
   15f58:	str	r0, [r5, #4]
   15f5c:	ldrb	r0, [r4, #12]
   15f60:	tst	r0, #8
   15f64:	bne	15fb8 <argp_failure@@Base+0x44c>
   15f68:	ldr	r6, [r4, #4]
   15f6c:	sub	r0, r6, #1
   15f70:	cmp	r0, #254	; 0xfe
   15f74:	bhi	15fb8 <argp_failure@@Base+0x44c>
   15f78:	bl	115f0 <__ctype_b_loc@plt>
   15f7c:	ldr	r0, [r0]
   15f80:	add	r0, r0, r6, lsl #1
   15f84:	ldrb	r0, [r0, #1]
   15f88:	tst	r0, #64	; 0x40
   15f8c:	beq	15fb8 <argp_failure@@Base+0x44c>
   15f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f94:	ldr	r0, [r0, #8]
   15f98:	cmp	r0, r7
   15f9c:	bcs	15fb4 <argp_failure@@Base+0x448>
   15fa0:	ldrb	r1, [r0], #1
   15fa4:	uxtb	r2, r6
   15fa8:	cmp	r1, r2
   15fac:	bne	15f98 <argp_failure@@Base+0x42c>
   15fb0:	b	15fb8 <argp_failure@@Base+0x44c>
   15fb4:	strb	r6, [r7], #1
   15fb8:	ldr	r1, [r4, #28]
   15fbc:	add	r0, r4, #24
   15fc0:	cmp	r1, #0
   15fc4:	bne	15fec <argp_failure@@Base+0x480>
   15fc8:	ldr	r1, [r0]
   15fcc:	cmp	r1, #0
   15fd0:	bne	15fec <argp_failure@@Base+0x480>
   15fd4:	ldr	r1, [r4, #40]	; 0x28
   15fd8:	cmp	r1, #0
   15fdc:	bne	15fec <argp_failure@@Base+0x480>
   15fe0:	ldr	r1, [r4, #44]	; 0x2c
   15fe4:	cmp	r1, #0
   15fe8:	beq	15ecc <argp_failure@@Base+0x360>
   15fec:	ldrb	r1, [r4, #36]	; 0x24
   15ff0:	tst	r1, #4
   15ff4:	bne	15f4c <argp_failure@@Base+0x3e0>
   15ff8:	b	15ecc <argp_failure@@Base+0x360>
   15ffc:	mov	r0, #0
   16000:	ldr	r9, [sp, #12]
   16004:	strb	r0, [r7]
   16008:	ldr	r7, [sp, #40]	; 0x28
   1600c:	cmp	r9, #0
   16010:	ldrne	r0, [r9]
   16014:	cmpne	r0, #0
   16018:	bne	16028 <argp_failure@@Base+0x4bc>
   1601c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16020:	sub	sp, fp, #28
   16024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16028:	str	sl, [sp, #4]
   1602c:	ldr	r4, [r9, #12]
   16030:	cmp	r4, #0
   16034:	beq	16040 <argp_failure@@Base+0x4d4>
   16038:	ldr	r5, [r9, #8]
   1603c:	b	16050 <argp_failure@@Base+0x4e4>
   16040:	ldr	r5, [r9, #8]
   16044:	mov	r1, sl
   16048:	cmp	r5, #0
   1604c:	beq	160a0 <argp_failure@@Base+0x534>
   16050:	ldr	r6, [r7, #16]
   16054:	mov	r0, #28
   16058:	bl	199c0 <argp_parse@@Base+0x2048>
   1605c:	mov	r1, r0
   16060:	cmp	r0, #0
   16064:	beq	160a0 <argp_failure@@Base+0x534>
   16068:	sub	r0, r9, r6
   1606c:	str	r5, [r1]
   16070:	cmp	sl, #0
   16074:	asr	r0, r0, #4
   16078:	stmib	r1, {r0, r4, sl}
   1607c:	str	r7, [r1, #16]
   16080:	ldr	r3, [sp, #20]
   16084:	ldrne	r0, [sl, #20]
   16088:	ldr	r2, [r3]
   1608c:	addne	r0, r0, #1
   16090:	str	r1, [r3]
   16094:	moveq	r0, #0
   16098:	str	r0, [r1, #20]
   1609c:	str	r2, [r1, #24]
   160a0:	ldr	r0, [r9]
   160a4:	bl	15d74 <argp_failure@@Base+0x208>
   160a8:	ldr	r1, [sp, #20]
   160ac:	mov	r6, r0
   160b0:	ldr	r2, [r1]
   160b4:	mov	r0, r1
   160b8:	add	r1, r2, #24
   160bc:	cmp	r2, #0
   160c0:	bne	160b0 <argp_failure@@Base+0x544>
   160c4:	ldr	r1, [r6, #12]
   160c8:	str	r1, [r0]
   160cc:	mov	r0, #0
   160d0:	str	r0, [r6, #12]
   160d4:	ldr	r0, [r6, #4]
   160d8:	cmp	r0, #0
   160dc:	beq	16340 <argp_failure@@Base+0x7d4>
   160e0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   160e4:	ldr	r4, [r5, #4]
   160e8:	cmp	r4, #0
   160ec:	beq	1629c <argp_failure@@Base+0x730>
   160f0:	add	r0, r4, r0
   160f4:	str	r0, [sp, #16]
   160f8:	rsb	r0, r0, r0, lsl #3
   160fc:	lsl	r0, r0, #2
   16100:	bl	199c0 <argp_parse@@Base+0x2048>
   16104:	ldr	r8, [r5, #8]
   16108:	str	r0, [sp, #24]
   1610c:	mov	r0, r8
   16110:	bl	11614 <strlen@plt>
   16114:	mov	r7, r0
   16118:	ldr	r0, [r6, #8]
   1611c:	bl	11614 <strlen@plt>
   16120:	add	r0, r7, r0
   16124:	str	r7, [sp, #32]
   16128:	add	r0, r0, #1
   1612c:	bl	199c0 <argp_parse@@Base+0x2048>
   16130:	ldr	r1, [sp, #24]
   16134:	cmp	r1, #0
   16138:	cmpne	r0, #0
   1613c:	beq	16358 <argp_failure@@Base+0x7ec>
   16140:	ldr	r1, [sp, #16]
   16144:	str	r0, [sp, #36]	; 0x24
   16148:	movw	r0, #37450	; 0x924a
   1614c:	movt	r0, #2340	; 0x924
   16150:	cmp	r1, r0
   16154:	bcs	163d8 <argp_failure@@Base+0x86c>
   16158:	ldr	r7, [sp, #24]
   1615c:	ldr	r1, [r5]
   16160:	rsb	r5, r4, r4, lsl #3
   16164:	lsl	r2, r5, #2
   16168:	str	r2, [fp, #-36]	; 0xffffffdc
   1616c:	mov	r0, r7
   16170:	bl	114d0 <memcpy@plt>
   16174:	ldm	r6, {r1, r2}
   16178:	add	r0, r7, r5, lsl #2
   1617c:	rsb	r2, r2, r2, lsl #3
   16180:	lsl	r2, r2, #2
   16184:	bl	114d0 <memcpy@plt>
   16188:	ldr	r5, [sp, #36]	; 0x24
   1618c:	ldr	r2, [sp, #32]
   16190:	mov	r1, r8
   16194:	mov	r0, r5
   16198:	bl	114d0 <memcpy@plt>
   1619c:	add	r0, r7, #8
   161a0:	ldr	r1, [r0]
   161a4:	subs	r4, r4, #1
   161a8:	sub	r1, r1, r8
   161ac:	add	r1, r5, r1
   161b0:	str	r1, [r0], #28
   161b4:	bne	161a0 <argp_failure@@Base+0x634>
   161b8:	ldr	r0, [sp, #32]
   161bc:	ldr	r2, [r6, #4]
   161c0:	str	r9, [sp, #12]
   161c4:	str	r6, [sp, #8]
   161c8:	add	r4, r5, r0
   161cc:	cmp	r2, #0
   161d0:	beq	162b8 <argp_failure@@Base+0x74c>
   161d4:	mov	r0, r6
   161d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161dc:	ldr	r1, [sp, #24]
   161e0:	str	r4, [fp, #-36]	; 0xffffffdc
   161e4:	ldr	r7, [r0, #8]
   161e8:	add	r6, r1, r3
   161ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161f0:	str	r2, [sp, #28]
   161f4:	str	r0, [r6, #8]
   161f8:	ldr	r9, [r6, #4]
   161fc:	cmp	r9, #0
   16200:	beq	16288 <argp_failure@@Base+0x71c>
   16204:	ldr	sl, [r6]
   16208:	ldrb	r0, [sl, #12]
   1620c:	tst	r0, #8
   16210:	bne	1627c <argp_failure@@Base+0x710>
   16214:	ldr	r5, [sl, #4]
   16218:	sub	r0, r5, #1
   1621c:	cmp	r0, #254	; 0xfe
   16220:	bhi	1627c <argp_failure@@Base+0x710>
   16224:	ldrb	r8, [r7]
   16228:	bl	115f0 <__ctype_b_loc@plt>
   1622c:	cmp	r5, r8
   16230:	bne	1627c <argp_failure@@Base+0x710>
   16234:	ldr	r0, [r0]
   16238:	add	r0, r0, r5, lsl #1
   1623c:	ldrh	r0, [r0]
   16240:	ands	r0, r0, #16384	; 0x4000
   16244:	beq	1627c <argp_failure@@Base+0x710>
   16248:	ldr	r0, [sp, #32]
   1624c:	cmp	r0, #1
   16250:	ldr	r0, [sp, #36]	; 0x24
   16254:	blt	1626c <argp_failure@@Base+0x700>
   16258:	ldrb	r1, [r0], #1
   1625c:	cmp	r1, r8
   16260:	beq	16278 <argp_failure@@Base+0x70c>
   16264:	cmp	r0, r4
   16268:	bcc	16258 <argp_failure@@Base+0x6ec>
   1626c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16270:	strb	r8, [r0], #1
   16274:	str	r0, [fp, #-36]	; 0xffffffdc
   16278:	add	r7, r7, #1
   1627c:	subs	r9, r9, #1
   16280:	add	sl, sl, #24
   16284:	bne	16208 <argp_failure@@Base+0x69c>
   16288:	ldr	r2, [sp, #28]
   1628c:	add	r6, r6, #28
   16290:	subs	r2, r2, #1
   16294:	bne	161ec <argp_failure@@Base+0x680>
   16298:	b	162bc <argp_failure@@Base+0x750>
   1629c:	ldr	r1, [r6]
   162a0:	ldr	r2, [r6, #8]
   162a4:	str	r1, [r5]
   162a8:	stmib	r5, {r0, r2}
   162ac:	mov	r0, #0
   162b0:	str	r0, [r6, #4]
   162b4:	b	16340 <argp_failure@@Base+0x7d4>
   162b8:	str	r4, [fp, #-36]	; 0xffffffdc
   162bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   162c0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   162c4:	mov	r0, #0
   162c8:	strb	r0, [r1]
   162cc:	ldr	r0, [r4]
   162d0:	bl	18c48 <argp_parse@@Base+0x12d0>
   162d4:	ldr	r0, [r4, #8]
   162d8:	bl	18c48 <argp_parse@@Base+0x12d0>
   162dc:	ldr	r0, [sp, #24]
   162e0:	ldr	r6, [sp, #8]
   162e4:	str	r0, [r4]
   162e8:	ldr	r0, [sp, #16]
   162ec:	str	r0, [r4, #4]
   162f0:	ldr	r0, [sp, #36]	; 0x24
   162f4:	str	r0, [r4, #8]
   162f8:	ldr	r0, [r6, #12]
   162fc:	cmp	r0, #0
   16300:	beq	16318 <argp_failure@@Base+0x7ac>
   16304:	ldr	r4, [r0, #24]
   16308:	bl	18c48 <argp_parse@@Base+0x12d0>
   1630c:	cmp	r4, #0
   16310:	mov	r0, r4
   16314:	bne	16304 <argp_failure@@Base+0x798>
   16318:	ldr	r0, [r6, #4]
   1631c:	ldr	sl, [sp, #4]
   16320:	ldr	r7, [sp, #40]	; 0x28
   16324:	ldr	r9, [sp, #12]
   16328:	cmp	r0, #0
   1632c:	beq	16340 <argp_failure@@Base+0x7d4>
   16330:	ldr	r0, [r6]
   16334:	bl	18c48 <argp_parse@@Base+0x12d0>
   16338:	ldr	r0, [r6, #8]
   1633c:	bl	18c48 <argp_parse@@Base+0x12d0>
   16340:	mov	r0, r6
   16344:	bl	18c48 <argp_parse@@Base+0x12d0>
   16348:	ldr	r0, [r9, #16]!
   1634c:	cmp	r0, #0
   16350:	bne	1602c <argp_failure@@Base+0x4c0>
   16354:	b	1601c <argp_failure@@Base+0x4b0>
   16358:	movw	r0, #47822	; 0xbace
   1635c:	movw	r1, #47638	; 0xba16
   16360:	movw	r3, #47847	; 0xbae7
   16364:	movw	r2, #970	; 0x3ca
   16368:	movt	r0, #1
   1636c:	movt	r1, #1
   16370:	movt	r3, #1
   16374:	bl	11794 <__assert_fail@plt>
   16378:	movw	r0, #47634	; 0xba12
   1637c:	movw	r1, #47638	; 0xba16
   16380:	movw	r3, #47650	; 0xba22
   16384:	movw	r2, #450	; 0x1c2
   16388:	movt	r0, #1
   1638c:	movt	r1, #1
   16390:	movt	r3, #1
   16394:	bl	11794 <__assert_fail@plt>
   16398:	movw	r0, #47714	; 0xba62
   1639c:	movw	r1, #47638	; 0xba16
   163a0:	movw	r3, #47650	; 0xba22
   163a4:	mov	r2, #460	; 0x1cc
   163a8:	movt	r0, #1
   163ac:	movt	r1, #1
   163b0:	movt	r3, #1
   163b4:	bl	11794 <__assert_fail@plt>
   163b8:	movw	r0, #47765	; 0xba95
   163bc:	movw	r1, #47638	; 0xba16
   163c0:	movw	r3, #47650	; 0xba22
   163c4:	mov	r2, #476	; 0x1dc
   163c8:	movt	r0, #1
   163cc:	movt	r1, #1
   163d0:	movt	r3, #1
   163d4:	bl	11794 <__assert_fail@plt>
   163d8:	movw	r0, #47770	; 0xba9a
   163dc:	movw	r1, #47638	; 0xba16
   163e0:	movw	r3, #47847	; 0xbae7
   163e4:	mov	r2, #972	; 0x3cc
   163e8:	movt	r0, #1
   163ec:	movt	r1, #1
   163f0:	movt	r3, #1
   163f4:	bl	11794 <__assert_fail@plt>
   163f8:	push	{r4, r5, fp, lr}
   163fc:	add	fp, sp, #8
   16400:	mov	r1, r0
   16404:	ldr	r0, [r0, #8]
   16408:	ldr	r5, [r1, #16]
   1640c:	cmp	r0, #0
   16410:	beq	1642c <argp_failure@@Base+0x8c0>
   16414:	mov	r1, #10
   16418:	bl	11620 <strchr@plt>
   1641c:	mov	r4, r0
   16420:	cmp	r0, #0
   16424:	movwne	r4, #1
   16428:	b	16430 <argp_failure@@Base+0x8c4>
   1642c:	mov	r4, #0
   16430:	cmp	r5, #0
   16434:	ldrne	r0, [r5]
   16438:	cmpne	r0, #0
   1643c:	beq	16458 <argp_failure@@Base+0x8ec>
   16440:	add	r5, r5, #16
   16444:	bl	163f8 <argp_failure@@Base+0x88c>
   16448:	add	r4, r0, r4
   1644c:	ldr	r0, [r5], #16
   16450:	cmp	r0, #0
   16454:	bne	16444 <argp_failure@@Base+0x8d8>
   16458:	mov	r0, r4
   1645c:	pop	{r4, r5, fp, pc}
   16460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16464:	add	fp, sp, #28
   16468:	sub	sp, sp, #28
   1646c:	ldr	r4, [r0, #4]
   16470:	str	r1, [fp, #-40]	; 0xffffffd8
   16474:	cmp	r4, #0
   16478:	beq	16808 <argp_failure@@Base+0xc9c>
   1647c:	mov	r5, r0
   16480:	ldr	r0, [r0, #8]
   16484:	bl	11614 <strlen@plt>
   16488:	add	r0, r0, #8
   1648c:	bic	r0, r0, #7
   16490:	sub	r0, sp, r0
   16494:	mov	sp, r0
   16498:	ldr	r7, [r5]
   1649c:	str	r0, [fp, #-52]	; 0xffffffcc
   164a0:	str	r0, [fp, #-48]	; 0xffffffd0
   164a4:	str	r5, [fp, #-44]	; 0xffffffd4
   164a8:	ldr	r6, [r7, #4]
   164ac:	str	r4, [fp, #-36]	; 0xffffffdc
   164b0:	cmp	r6, #0
   164b4:	beq	16558 <argp_failure@@Base+0x9ec>
   164b8:	ldr	r4, [r7]
   164bc:	ldr	r5, [r7, #8]
   164c0:	mov	sl, r4
   164c4:	b	164f0 <argp_failure@@Base+0x984>
   164c8:	ldr	r0, [r4, #8]
   164cc:	cmp	r0, #0
   164d0:	bne	16548 <argp_failure@@Base+0x9dc>
   164d4:	ldr	r0, [r4, #12]
   164d8:	orr	r0, r0, r8
   164dc:	tst	r0, #16
   164e0:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   164e4:	strbeq	r9, [r0], #1
   164e8:	streq	r0, [fp, #-48]	; 0xffffffd0
   164ec:	b	16548 <argp_failure@@Base+0x9dc>
   164f0:	ldr	r8, [sl, #12]
   164f4:	tst	r8, #8
   164f8:	bne	1654c <argp_failure@@Base+0x9e0>
   164fc:	ldr	r9, [sl, #4]
   16500:	sub	r0, r9, #1
   16504:	cmp	r0, #254	; 0xfe
   16508:	bhi	1654c <argp_failure@@Base+0x9e0>
   1650c:	bl	115f0 <__ctype_b_loc@plt>
   16510:	ldr	r0, [r0]
   16514:	add	r0, r0, r9, lsl #1
   16518:	ldrb	r0, [r0, #1]
   1651c:	tst	r0, #64	; 0x40
   16520:	beq	1654c <argp_failure@@Base+0x9e0>
   16524:	ldrb	r0, [r5]
   16528:	cmp	r9, r0
   1652c:	bne	1654c <argp_failure@@Base+0x9e0>
   16530:	tst	r8, #4
   16534:	moveq	r4, sl
   16538:	tst	r8, #2
   1653c:	ldreq	r0, [sl, #8]
   16540:	cmpeq	r0, #0
   16544:	beq	164c8 <argp_failure@@Base+0x95c>
   16548:	add	r5, r5, #1
   1654c:	subs	r6, r6, #1
   16550:	add	sl, sl, #24
   16554:	bne	164f0 <argp_failure@@Base+0x984>
   16558:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1655c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16560:	add	r7, r7, #28
   16564:	subs	r4, r4, #1
   16568:	bne	164a8 <argp_failure@@Base+0x93c>
   1656c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16570:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16574:	cmp	r1, r2
   16578:	bls	16594 <argp_failure@@Base+0xa28>
   1657c:	mov	r0, #0
   16580:	strb	r0, [r1]
   16584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16588:	movw	r1, #47891	; 0xbb13
   1658c:	movt	r1, #1
   16590:	bl	1a154 <argp_parse@@Base+0x27dc>
   16594:	ldr	r5, [r6, #4]
   16598:	cmp	r5, #0
   1659c:	beq	16808 <argp_failure@@Base+0xc9c>
   165a0:	ldr	r8, [r6]
   165a4:	ldr	r9, [r8, #4]
   165a8:	cmp	r9, #0
   165ac:	beq	16740 <argp_failure@@Base+0xbd4>
   165b0:	ldr	sl, [r8]
   165b4:	ldr	r4, [r8, #8]
   165b8:	str	sl, [fp, #-36]	; 0xffffffdc
   165bc:	ldr	r6, [sl, #12]
   165c0:	tst	r6, #8
   165c4:	bne	16734 <argp_failure@@Base+0xbc8>
   165c8:	ldr	r7, [sl, #4]
   165cc:	sub	r0, r7, #1
   165d0:	cmp	r0, #254	; 0xfe
   165d4:	bhi	16734 <argp_failure@@Base+0xbc8>
   165d8:	bl	115f0 <__ctype_b_loc@plt>
   165dc:	ldr	r0, [r0]
   165e0:	add	r0, r0, r7, lsl #1
   165e4:	ldrb	r0, [r0, #1]
   165e8:	tst	r0, #64	; 0x40
   165ec:	beq	16734 <argp_failure@@Base+0xbc8>
   165f0:	ldrb	r0, [r4]
   165f4:	cmp	r7, r0
   165f8:	bne	16734 <argp_failure@@Base+0xbc8>
   165fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16600:	tst	r6, #4
   16604:	moveq	r0, sl
   16608:	tst	r6, #2
   1660c:	str	r0, [fp, #-36]	; 0xffffffdc
   16610:	bne	16730 <argp_failure@@Base+0xbc4>
   16614:	ldr	r3, [sl, #8]
   16618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1661c:	cmp	r3, #0
   16620:	ldr	r0, [r0, #12]
   16624:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   16628:	orr	r0, r0, r6
   1662c:	ldreq	r3, [r1, #8]
   16630:	tst	r0, #16
   16634:	bne	16730 <argp_failure@@Base+0xbc4>
   16638:	cmp	r3, #0
   1663c:	beq	16730 <argp_failure@@Base+0xbc4>
   16640:	tst	r0, #1
   16644:	bne	166d0 <argp_failure@@Base+0xb64>
   16648:	mov	r0, r3
   1664c:	str	r3, [fp, #-48]	; 0xffffffd0
   16650:	bl	11614 <strlen@plt>
   16654:	ldr	r7, [fp, #-40]	; 0xffffffd8
   16658:	add	r6, r0, #6
   1665c:	ldr	r2, [r7, #24]
   16660:	ldr	r0, [r7, #28]
   16664:	ldr	r1, [r7, #16]
   16668:	sub	r2, r0, r2
   1666c:	cmp	r2, r1
   16670:	bls	16680 <argp_failure@@Base+0xb14>
   16674:	mov	r0, r7
   16678:	bl	19b08 <argp_parse@@Base+0x2190>
   1667c:	ldr	r0, [r7, #28]
   16680:	ldr	r3, [r7, #20]
   16684:	ldr	r2, [r7, #8]
   16688:	ldr	r1, [r7, #32]
   1668c:	cmp	r3, #0
   16690:	addgt	r6, r6, r3
   16694:	cmp	r6, r2
   16698:	bcs	166e4 <argp_failure@@Base+0xb78>
   1669c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   166a0:	cmp	r0, r1
   166a4:	bcc	166c0 <argp_failure@@Base+0xb54>
   166a8:	mov	r0, r7
   166ac:	mov	r1, #1
   166b0:	bl	1a068 <argp_parse@@Base+0x26f0>
   166b4:	cmp	r0, #0
   166b8:	beq	16718 <argp_failure@@Base+0xbac>
   166bc:	ldr	r0, [r7, #28]
   166c0:	add	r1, r0, #1
   166c4:	str	r1, [r7, #28]
   166c8:	mov	r1, #32
   166cc:	b	16714 <argp_failure@@Base+0xba8>
   166d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166d4:	movw	r1, #47898	; 0xbb1a
   166d8:	mov	r2, r7
   166dc:	movt	r1, #1
   166e0:	b	1672c <argp_failure@@Base+0xbc0>
   166e4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   166e8:	cmp	r0, r1
   166ec:	bcc	16708 <argp_failure@@Base+0xb9c>
   166f0:	mov	r0, r7
   166f4:	mov	r1, #1
   166f8:	bl	1a068 <argp_parse@@Base+0x26f0>
   166fc:	cmp	r0, #0
   16700:	beq	16718 <argp_failure@@Base+0xbac>
   16704:	ldr	r0, [r7, #28]
   16708:	add	r1, r0, #1
   1670c:	str	r1, [r7, #28]
   16710:	mov	r1, #10
   16714:	strb	r1, [r0]
   16718:	ldr	r2, [sl, #4]
   1671c:	movw	r1, #47909	; 0xbb25
   16720:	mov	r0, r7
   16724:	mov	r3, r6
   16728:	movt	r1, #1
   1672c:	bl	1a154 <argp_parse@@Base+0x27dc>
   16730:	add	r4, r4, #1
   16734:	subs	r9, r9, #1
   16738:	add	sl, sl, #24
   1673c:	bne	165bc <argp_failure@@Base+0xa50>
   16740:	subs	r5, r5, #1
   16744:	add	r8, r8, #28
   16748:	bne	165a4 <argp_failure@@Base+0xa38>
   1674c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16750:	ldr	r4, [r0, #4]
   16754:	cmp	r4, #0
   16758:	beq	16808 <argp_failure@@Base+0xc9c>
   1675c:	ldr	r6, [r0]
   16760:	movw	sl, #47942	; 0xbb46
   16764:	movw	r9, #47918	; 0xbb2e
   16768:	movt	sl, #1
   1676c:	movt	r9, #1
   16770:	ldr	r7, [r6, #4]
   16774:	cmp	r7, #0
   16778:	beq	167fc <argp_failure@@Base+0xc90>
   1677c:	ldr	r8, [r6]
   16780:	mov	r5, r8
   16784:	ldr	r2, [r5]
   16788:	cmp	r2, #0
   1678c:	beq	167f0 <argp_failure@@Base+0xc84>
   16790:	ldr	r0, [r5, #12]
   16794:	tst	r0, #4
   16798:	moveq	r8, r5
   1679c:	tst	r0, #2
   167a0:	bne	167f0 <argp_failure@@Base+0xc84>
   167a4:	ldr	r3, [r5, #8]
   167a8:	ldr	r1, [r8, #12]
   167ac:	cmp	r3, #0
   167b0:	orr	r0, r1, r0
   167b4:	ldreq	r3, [r8, #8]
   167b8:	tst	r0, #16
   167bc:	bne	167f0 <argp_failure@@Base+0xc84>
   167c0:	cmp	r3, #0
   167c4:	beq	167e4 <argp_failure@@Base+0xc78>
   167c8:	tst	r0, #1
   167cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167d0:	movne	r1, r9
   167d4:	movweq	r1, #47931	; 0xbb3b
   167d8:	movteq	r1, #1
   167dc:	bl	1a154 <argp_parse@@Base+0x27dc>
   167e0:	b	167f0 <argp_failure@@Base+0xc84>
   167e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167e8:	mov	r1, sl
   167ec:	bl	1a154 <argp_parse@@Base+0x27dc>
   167f0:	subs	r7, r7, #1
   167f4:	add	r5, r5, #24
   167f8:	bne	16784 <argp_failure@@Base+0xc18>
   167fc:	subs	r4, r4, #1
   16800:	add	r6, r6, #28
   16804:	bne	16770 <argp_failure@@Base+0xc04>
   16808:	sub	sp, fp, #28
   1680c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16810:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16814:	add	fp, sp, #28
   16818:	sub	sp, sp, #28
   1681c:	ldr	r6, [r0, #8]
   16820:	ldr	r5, [r0, #16]
   16824:	ldr	sl, [r2]
   16828:	mov	r4, r3
   1682c:	mov	r9, r2
   16830:	mov	r8, r1
   16834:	mov	r7, r0
   16838:	cmp	r0, #0
   1683c:	mov	r0, r6
   16840:	beq	16878 <argp_failure@@Base+0xd0c>
   16844:	ldr	r0, [r7, #20]
   16848:	cmp	r0, #0
   1684c:	mov	r0, r6
   16850:	beq	16878 <argp_failure@@Base+0xd0c>
   16854:	mov	r0, r7
   16858:	mov	r1, r8
   1685c:	bl	185b4 <argp_parse@@Base+0xc3c>
   16860:	ldr	r3, [r7, #20]
   16864:	mov	r2, r0
   16868:	movw	r0, #6
   1686c:	mov	r1, r6
   16870:	movt	r0, #512	; 0x200
   16874:	blx	r3
   16878:	cmp	r0, #0
   1687c:	str	sl, [sp, #24]
   16880:	beq	168e0 <argp_failure@@Base+0xd74>
   16884:	mov	r1, #10
   16888:	mov	sl, r0
   1688c:	bl	11494 <strchrnul@plt>
   16890:	mov	r7, r0
   16894:	ldrb	r0, [r0]
   16898:	cmp	r0, #0
   1689c:	add	r0, sp, #12
   168a0:	stm	r0, {r5, r6, sl}
   168a4:	beq	168ec <argp_failure@@Base+0xd80>
   168a8:	ldr	r0, [sp, #24]
   168ac:	ldrb	r6, [r0]
   168b0:	cmp	r6, #0
   168b4:	beq	168f4 <argp_failure@@Base+0xd88>
   168b8:	mov	r5, #0
   168bc:	add	sl, r7, #1
   168c0:	mov	r1, #10
   168c4:	mov	r0, sl
   168c8:	bl	11494 <strchrnul@plt>
   168cc:	add	r5, r5, #1
   168d0:	mov	r7, r0
   168d4:	cmp	r5, r6
   168d8:	bcc	168bc <argp_failure@@Base+0xd50>
   168dc:	b	168f8 <argp_failure@@Base+0xd8c>
   168e0:	mov	r7, #0
   168e4:	mov	sl, #0
   168e8:	b	16a28 <argp_failure@@Base+0xebc>
   168ec:	mov	r0, #0
   168f0:	b	16908 <argp_failure@@Base+0xd9c>
   168f4:	ldr	sl, [sp, #20]
   168f8:	ldr	r0, [r9]
   168fc:	add	r0, r0, #1
   16900:	str	r0, [r9]
   16904:	mov	r0, #1
   16908:	ldr	r5, [fp, #8]
   1690c:	str	r0, [sp, #8]
   16910:	add	r0, r7, #1
   16914:	sub	r6, r0, sl
   16918:	ldr	r2, [r5, #24]
   1691c:	ldr	r0, [r5, #28]
   16920:	ldr	r1, [r5, #16]
   16924:	sub	r2, r0, r2
   16928:	cmp	r2, r1
   1692c:	bls	1693c <argp_failure@@Base+0xdd0>
   16930:	mov	r0, r5
   16934:	bl	19b08 <argp_parse@@Base+0x2190>
   16938:	ldr	r0, [r5, #28]
   1693c:	ldr	r3, [r5, #20]
   16940:	ldr	r2, [r5, #8]
   16944:	ldr	r1, [r5, #32]
   16948:	cmp	r3, #0
   1694c:	addgt	r6, r6, r3
   16950:	cmp	r6, r2
   16954:	bcs	16988 <argp_failure@@Base+0xe1c>
   16958:	cmp	r0, r1
   1695c:	bcc	16978 <argp_failure@@Base+0xe0c>
   16960:	mov	r0, r5
   16964:	mov	r1, #1
   16968:	bl	1a068 <argp_parse@@Base+0x26f0>
   1696c:	cmp	r0, #0
   16970:	beq	169b8 <argp_failure@@Base+0xe4c>
   16974:	ldr	r0, [r5, #28]
   16978:	add	r1, r0, #1
   1697c:	str	r1, [r5, #28]
   16980:	mov	r1, #32
   16984:	b	169b4 <argp_failure@@Base+0xe48>
   16988:	cmp	r0, r1
   1698c:	bcc	169a8 <argp_failure@@Base+0xe3c>
   16990:	mov	r0, r5
   16994:	mov	r1, #1
   16998:	bl	1a068 <argp_parse@@Base+0x26f0>
   1699c:	cmp	r0, #0
   169a0:	beq	169b8 <argp_failure@@Base+0xe4c>
   169a4:	ldr	r0, [r5, #28]
   169a8:	add	r1, r0, #1
   169ac:	str	r1, [r5, #28]
   169b0:	mov	r1, #10
   169b4:	strb	r1, [r0]
   169b8:	mov	r6, r5
   169bc:	sub	r5, r7, sl
   169c0:	ldr	r0, [r6, #28]
   169c4:	ldr	r1, [r6, #32]
   169c8:	add	r2, r0, r5
   169cc:	cmp	r2, r1
   169d0:	bls	169f0 <argp_failure@@Base+0xe84>
   169d4:	mov	r0, r6
   169d8:	mov	r1, r5
   169dc:	bl	1a068 <argp_parse@@Base+0x26f0>
   169e0:	cmp	r0, #0
   169e4:	beq	16a08 <argp_failure@@Base+0xe9c>
   169e8:	ldr	r6, [fp, #8]
   169ec:	ldr	r0, [r6, #28]
   169f0:	mov	r1, sl
   169f4:	mov	r2, r5
   169f8:	bl	114d0 <memcpy@plt>
   169fc:	ldr	r0, [r6, #28]
   16a00:	add	r0, r0, r5
   16a04:	str	r0, [r6, #28]
   16a08:	ldr	r0, [sp, #16]
   16a0c:	ldr	r1, [sp, #20]
   16a10:	cmp	r1, r0
   16a14:	beq	16a20 <argp_failure@@Base+0xeb4>
   16a18:	mov	r0, r1
   16a1c:	bl	18c48 <argp_parse@@Base+0x12d0>
   16a20:	ldr	r5, [sp, #12]
   16a24:	ldr	sl, [sp, #8]
   16a28:	cmp	r5, #0
   16a2c:	ldrne	r0, [r5]
   16a30:	cmpne	r0, #0
   16a34:	beq	16a6c <argp_failure@@Base+0xf00>
   16a38:	add	r6, r5, #16
   16a3c:	ldr	r5, [fp, #8]
   16a40:	mov	r1, r8
   16a44:	mov	r2, r9
   16a48:	mov	r3, r4
   16a4c:	str	r5, [sp]
   16a50:	bl	16810 <argp_failure@@Base+0xca4>
   16a54:	clz	r1, r0
   16a58:	ldr	r0, [r6], #16
   16a5c:	lsr	r4, r1, #5
   16a60:	cmp	r0, #0
   16a64:	bne	16a40 <argp_failure@@Base+0xed4>
   16a68:	lsr	r4, r1, #5
   16a6c:	cmp	sl, #0
   16a70:	cmpne	r4, #0
   16a74:	bne	16a88 <argp_failure@@Base+0xf1c>
   16a78:	clz	r0, r4
   16a7c:	lsr	r0, r0, #5
   16a80:	sub	sp, fp, #28
   16a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a88:	ldr	r2, [sp, #24]
   16a8c:	ldrb	r1, [r7]
   16a90:	ldrb	r0, [r2]
   16a94:	cmp	r1, #0
   16a98:	beq	16aac <argp_failure@@Base+0xf40>
   16a9c:	add	r0, r0, #1
   16aa0:	mov	r4, #0
   16aa4:	strb	r0, [r2]
   16aa8:	b	16a78 <argp_failure@@Base+0xf0c>
   16aac:	cmp	r0, #0
   16ab0:	movne	r0, #0
   16ab4:	strbne	r0, [r2]
   16ab8:	b	16a78 <argp_failure@@Base+0xf0c>
   16abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ac0:	add	fp, sp, #28
   16ac4:	sub	sp, sp, #28
   16ac8:	ldr	r7, [r0, #12]
   16acc:	ldr	r8, [r0, #16]
   16ad0:	mov	r6, r0
   16ad4:	mov	sl, r3
   16ad8:	str	r1, [sp, #24]
   16adc:	str	r3, [sp, #20]
   16ae0:	str	r2, [sp, #16]
   16ae4:	cmp	r7, #0
   16ae8:	beq	16b30 <argp_failure@@Base+0xfc4>
   16aec:	mov	r0, #0
   16af0:	mov	r1, #11
   16af4:	mov	r5, r2
   16af8:	str	r0, [sp, #12]
   16afc:	mov	r0, r7
   16b00:	bl	11620 <strchr@plt>
   16b04:	cmp	r0, #0
   16b08:	mov	r9, r0
   16b0c:	mov	r4, r0
   16b10:	subne	r9, r9, r7
   16b14:	cmp	r5, #0
   16b18:	movne	r9, #0
   16b1c:	cmp	r0, #0
   16b20:	addne	r4, r4, #1
   16b24:	cmp	r5, #0
   16b28:	moveq	r4, r7
   16b2c:	b	16b40 <argp_failure@@Base+0xfd4>
   16b30:	mov	r0, #0
   16b34:	mov	r9, #0
   16b38:	mov	r4, #0
   16b3c:	str	r0, [sp, #12]
   16b40:	ldr	r0, [r6, #20]
   16b44:	movw	r7, #1
   16b48:	mov	r5, r8
   16b4c:	movt	r7, #512	; 0x200
   16b50:	cmp	r0, #0
   16b54:	beq	16c50 <argp_failure@@Base+0x10e4>
   16b58:	cmp	r9, #0
   16b5c:	beq	16b70 <argp_failure@@Base+0x1004>
   16b60:	mov	r0, r4
   16b64:	mov	r1, r9
   16b68:	bl	114c4 <strndup@plt>
   16b6c:	mov	r4, r0
   16b70:	ldr	r1, [sp, #24]
   16b74:	mov	r0, r6
   16b78:	bl	185b4 <argp_parse@@Base+0xc3c>
   16b7c:	mov	r2, r0
   16b80:	ldr	r0, [sp, #16]
   16b84:	ldr	r3, [r6, #20]
   16b88:	mov	r1, r4
   16b8c:	str	r2, [sp, #12]
   16b90:	cmp	r0, #0
   16b94:	mov	r0, r7
   16b98:	addne	r0, r0, #1
   16b9c:	blx	r3
   16ba0:	mov	r8, r0
   16ba4:	cmp	r8, #0
   16ba8:	beq	16c5c <argp_failure@@Base+0x10f0>
   16bac:	ldr	r0, [sp, #20]
   16bb0:	cmp	r0, #0
   16bb4:	beq	16bf4 <argp_failure@@Base+0x1088>
   16bb8:	ldr	r0, [fp, #12]
   16bbc:	ldr	r2, [r0, #28]
   16bc0:	ldr	r1, [r0, #32]
   16bc4:	cmp	r2, r1
   16bc8:	bcc	16be4 <argp_failure@@Base+0x1078>
   16bcc:	mov	r1, #1
   16bd0:	bl	1a068 <argp_parse@@Base+0x26f0>
   16bd4:	cmp	r0, #0
   16bd8:	beq	16bf4 <argp_failure@@Base+0x1088>
   16bdc:	ldr	r0, [fp, #12]
   16be0:	ldr	r2, [r0, #28]
   16be4:	add	r1, r2, #1
   16be8:	str	r1, [r0, #28]
   16bec:	mov	r1, #10
   16bf0:	strb	r1, [r2]
   16bf4:	cmp	r9, #0
   16bf8:	str	r5, [sp, #8]
   16bfc:	beq	16c6c <argp_failure@@Base+0x1100>
   16c00:	cmp	r8, r4
   16c04:	bne	16c6c <argp_failure@@Base+0x1100>
   16c08:	ldr	r5, [fp, #12]
   16c0c:	ldr	r0, [r5, #28]!
   16c10:	ldr	r2, [r5, #4]
   16c14:	add	r1, r0, r9
   16c18:	cmp	r1, r2
   16c1c:	bls	16c38 <argp_failure@@Base+0x10cc>
   16c20:	ldr	r0, [fp, #12]
   16c24:	mov	r1, r9
   16c28:	bl	1a068 <argp_parse@@Base+0x26f0>
   16c2c:	cmp	r0, #0
   16c30:	beq	16ccc <argp_failure@@Base+0x1160>
   16c34:	ldr	r0, [r5]
   16c38:	mov	r1, r4
   16c3c:	mov	r2, r9
   16c40:	bl	114d0 <memcpy@plt>
   16c44:	ldr	r0, [r5]
   16c48:	add	r0, r0, r9
   16c4c:	b	16cc8 <argp_failure@@Base+0x115c>
   16c50:	mov	r8, r4
   16c54:	cmp	r8, #0
   16c58:	bne	16bac <argp_failure@@Base+0x1040>
   16c5c:	mov	sl, #0
   16c60:	cmp	r9, #0
   16c64:	bne	16d64 <argp_failure@@Base+0x11f8>
   16c68:	b	16d7c <argp_failure@@Base+0x1210>
   16c6c:	mov	r0, r8
   16c70:	bl	11614 <strlen@plt>
   16c74:	ldr	r1, [fp, #12]
   16c78:	cmp	r0, #0
   16c7c:	add	r5, r1, #28
   16c80:	beq	16ccc <argp_failure@@Base+0x1160>
   16c84:	mov	r7, r0
   16c88:	ldr	r0, [r1, #28]
   16c8c:	ldr	r1, [r1, #32]
   16c90:	add	r2, r0, r7
   16c94:	cmp	r2, r1
   16c98:	bls	16cb4 <argp_failure@@Base+0x1148>
   16c9c:	ldr	r0, [fp, #12]
   16ca0:	mov	r1, r7
   16ca4:	bl	1a068 <argp_parse@@Base+0x26f0>
   16ca8:	cmp	r0, #0
   16cac:	beq	16ccc <argp_failure@@Base+0x1160>
   16cb0:	ldr	r0, [r5]
   16cb4:	mov	r1, r8
   16cb8:	mov	r2, r7
   16cbc:	bl	114d0 <memcpy@plt>
   16cc0:	ldr	r0, [r5]
   16cc4:	add	r0, r0, r7
   16cc8:	str	r0, [r5]
   16ccc:	ldr	r7, [fp, #12]
   16cd0:	ldr	r2, [r5]
   16cd4:	ldr	r1, [r7, #24]
   16cd8:	ldr	r0, [r7, #16]
   16cdc:	sub	r1, r2, r1
   16ce0:	cmp	r1, r0
   16ce4:	bls	16cf0 <argp_failure@@Base+0x1184>
   16ce8:	mov	r0, r7
   16cec:	bl	19b08 <argp_parse@@Base+0x2190>
   16cf0:	ldr	r1, [r7, #20]
   16cf4:	ldr	r0, [r7, #4]
   16cf8:	bic	r1, r1, r1, asr #31
   16cfc:	cmp	r1, r0
   16d00:	bls	16d44 <argp_failure@@Base+0x11d8>
   16d04:	ldr	r0, [fp, #12]
   16d08:	mov	r1, r0
   16d0c:	ldr	r0, [r0, #28]
   16d10:	ldr	r1, [r1, #32]
   16d14:	cmp	r0, r1
   16d18:	bcc	16d34 <argp_failure@@Base+0x11c8>
   16d1c:	ldr	r0, [fp, #12]
   16d20:	mov	r1, #1
   16d24:	bl	1a068 <argp_parse@@Base+0x26f0>
   16d28:	cmp	r0, #0
   16d2c:	beq	16d44 <argp_failure@@Base+0x11d8>
   16d30:	ldr	r0, [r5]
   16d34:	add	r1, r0, #1
   16d38:	str	r1, [r5]
   16d3c:	mov	r1, #10
   16d40:	strb	r1, [r0]
   16d44:	mov	sl, #1
   16d48:	cmp	r8, r4
   16d4c:	beq	16d58 <argp_failure@@Base+0x11ec>
   16d50:	mov	r0, r8
   16d54:	bl	18c48 <argp_parse@@Base+0x12d0>
   16d58:	ldr	r5, [sp, #8]
   16d5c:	cmp	r9, #0
   16d60:	beq	16d7c <argp_failure@@Base+0x1210>
   16d64:	cmp	r4, #0
   16d68:	ldrne	r0, [r6, #20]
   16d6c:	cmpne	r0, #0
   16d70:	beq	16d7c <argp_failure@@Base+0x1210>
   16d74:	mov	r0, r4
   16d78:	bl	18c48 <argp_parse@@Base+0x12d0>
   16d7c:	ldr	r7, [sp, #16]
   16d80:	ldr	r9, [sp, #24]
   16d84:	ldr	r8, [sp, #20]
   16d88:	cmp	r7, #0
   16d8c:	beq	16ee8 <argp_failure@@Base+0x137c>
   16d90:	ldr	r3, [r6, #20]
   16d94:	cmp	r3, #0
   16d98:	beq	16ee8 <argp_failure@@Base+0x137c>
   16d9c:	ldr	r2, [sp, #12]
   16da0:	movw	r0, #1
   16da4:	mov	r1, #0
   16da8:	movt	r0, #512	; 0x200
   16dac:	add	r0, r0, #3
   16db0:	blx	r3
   16db4:	ldr	r6, [fp, #12]
   16db8:	cmp	r0, #0
   16dbc:	beq	16eec <argp_failure@@Base+0x1380>
   16dc0:	mov	r4, r0
   16dc4:	orrs	r0, sl, r8
   16dc8:	beq	16e04 <argp_failure@@Base+0x1298>
   16dcc:	ldr	r0, [r6, #28]
   16dd0:	ldr	r1, [r6, #32]
   16dd4:	cmp	r0, r1
   16dd8:	bcc	16df4 <argp_failure@@Base+0x1288>
   16ddc:	mov	r0, r6
   16de0:	mov	r1, #1
   16de4:	bl	1a068 <argp_parse@@Base+0x26f0>
   16de8:	cmp	r0, #0
   16dec:	beq	16e04 <argp_failure@@Base+0x1298>
   16df0:	ldr	r0, [r6, #28]
   16df4:	add	r1, r0, #1
   16df8:	str	r1, [r6, #28]
   16dfc:	mov	r1, #10
   16e00:	strb	r1, [r0]
   16e04:	mov	r0, r4
   16e08:	mov	sl, r5
   16e0c:	bl	11614 <strlen@plt>
   16e10:	cmp	r0, #0
   16e14:	beq	16e60 <argp_failure@@Base+0x12f4>
   16e18:	mov	r5, r0
   16e1c:	ldr	r0, [r6, #28]
   16e20:	ldr	r1, [r6, #32]
   16e24:	add	r2, r0, r5
   16e28:	cmp	r2, r1
   16e2c:	bls	16e48 <argp_failure@@Base+0x12dc>
   16e30:	mov	r0, r6
   16e34:	mov	r1, r5
   16e38:	bl	1a068 <argp_parse@@Base+0x26f0>
   16e3c:	cmp	r0, #0
   16e40:	beq	16e60 <argp_failure@@Base+0x12f4>
   16e44:	ldr	r0, [r6, #28]
   16e48:	mov	r1, r4
   16e4c:	mov	r2, r5
   16e50:	bl	114d0 <memcpy@plt>
   16e54:	ldr	r0, [r6, #28]
   16e58:	add	r0, r0, r5
   16e5c:	str	r0, [r6, #28]
   16e60:	mov	r0, r4
   16e64:	bl	18c48 <argp_parse@@Base+0x12d0>
   16e68:	ldr	r1, [r6, #24]
   16e6c:	ldr	r2, [r6, #28]
   16e70:	ldr	r0, [r6, #16]
   16e74:	mov	r5, sl
   16e78:	sub	r1, r2, r1
   16e7c:	cmp	r1, r0
   16e80:	bls	16e8c <argp_failure@@Base+0x1320>
   16e84:	mov	r0, r6
   16e88:	bl	19b08 <argp_parse@@Base+0x2190>
   16e8c:	ldr	r1, [r6, #20]
   16e90:	ldr	r0, [r6, #4]
   16e94:	mov	sl, #1
   16e98:	bic	r1, r1, r1, asr #31
   16e9c:	cmp	r1, r0
   16ea0:	bls	16eec <argp_failure@@Base+0x1380>
   16ea4:	ldr	r0, [r6, #28]
   16ea8:	ldr	r1, [r6, #32]
   16eac:	cmp	r0, r1
   16eb0:	bcc	16ed0 <argp_failure@@Base+0x1364>
   16eb4:	mov	r0, r6
   16eb8:	mov	r1, #1
   16ebc:	mov	sl, #1
   16ec0:	bl	1a068 <argp_parse@@Base+0x26f0>
   16ec4:	cmp	r0, #0
   16ec8:	beq	16eec <argp_failure@@Base+0x1380>
   16ecc:	ldr	r0, [r6, #28]
   16ed0:	add	r1, r0, #1
   16ed4:	mov	sl, #1
   16ed8:	str	r1, [r6, #28]
   16edc:	mov	r1, #10
   16ee0:	strb	r1, [r0]
   16ee4:	b	16eec <argp_failure@@Base+0x1380>
   16ee8:	ldr	r6, [fp, #12]
   16eec:	cmp	r5, #0
   16ef0:	ldrne	r0, [r5]
   16ef4:	cmpne	r0, #0
   16ef8:	bne	16f08 <argp_failure@@Base+0x139c>
   16efc:	mov	r0, sl
   16f00:	sub	sp, fp, #28
   16f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f08:	ldr	r4, [fp, #8]
   16f0c:	add	r5, r5, #16
   16f10:	cmp	r4, #0
   16f14:	cmpne	sl, #0
   16f18:	bne	16efc <argp_failure@@Base+0x1390>
   16f1c:	orrs	r3, sl, r8
   16f20:	mov	r1, r9
   16f24:	mov	r2, r7
   16f28:	stm	sp, {r4, r6}
   16f2c:	movwne	r3, #1
   16f30:	bl	16abc <argp_failure@@Base+0xf50>
   16f34:	orr	sl, r0, sl
   16f38:	ldr	r0, [r5], #16
   16f3c:	cmp	r0, #0
   16f40:	bne	16f10 <argp_failure@@Base+0x13a4>
   16f44:	b	16efc <argp_failure@@Base+0x1390>
   16f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f4c:	add	fp, sp, #28
   16f50:	sub	sp, sp, #28
   16f54:	mov	r7, r0
   16f58:	ldr	r0, [r0, #16]
   16f5c:	mov	r5, r1
   16f60:	cmp	r0, #0
   16f64:	beq	16f84 <argp_failure@@Base+0x1418>
   16f68:	mov	r2, r0
   16f6c:	mov	r1, r2
   16f70:	ldr	r2, [r2, #12]
   16f74:	cmp	r2, #0
   16f78:	bne	16f6c <argp_failure@@Base+0x1400>
   16f7c:	add	r2, r1, #8
   16f80:	b	16f88 <argp_failure@@Base+0x141c>
   16f84:	add	r2, r7, #12
   16f88:	ldr	r1, [r5, #16]
   16f8c:	ldr	r3, [r2]
   16f90:	cmp	r1, #0
   16f94:	beq	16fb4 <argp_failure@@Base+0x1448>
   16f98:	mov	r2, r1
   16f9c:	mov	r6, r2
   16fa0:	ldr	r2, [r2, #12]
   16fa4:	cmp	r2, #0
   16fa8:	bne	16f9c <argp_failure@@Base+0x1430>
   16fac:	add	r2, r6, #8
   16fb0:	b	16fb8 <argp_failure@@Base+0x144c>
   16fb4:	add	r2, r5, #12
   16fb8:	ldr	r6, [r2]
   16fbc:	orr	r4, r6, r3
   16fc0:	sub	r2, r3, r6
   16fc4:	cmn	r4, #1
   16fc8:	mov	r4, r2
   16fcc:	suble	r4, r6, r3
   16fd0:	and	r3, r6, r3
   16fd4:	cmp	r3, #0
   16fd8:	movlt	r4, r2
   16fdc:	cmp	r4, #0
   16fe0:	bne	17000 <argp_failure@@Base+0x1494>
   16fe4:	cmp	r0, #0
   16fe8:	mov	r4, r0
   16fec:	movwne	r4, #1
   16ff0:	cmp	r1, #0
   16ff4:	subne	r4, r4, #1
   16ff8:	cmp	r4, #0
   16ffc:	beq	1700c <argp_failure@@Base+0x14a0>
   17000:	mov	r0, r4
   17004:	sub	sp, fp, #28
   17008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1700c:	cmp	r0, #0
   17010:	beq	17080 <argp_failure@@Base+0x1514>
   17014:	ldr	r3, [r1, #20]
   17018:	ldr	r2, [r0, #20]
   1701c:	cmp	r2, r3
   17020:	ble	17048 <argp_failure@@Base+0x14dc>
   17024:	ldr	r0, [r0, #12]
   17028:	ldr	r2, [r0, #20]
   1702c:	cmp	r2, r3
   17030:	bgt	17024 <argp_failure@@Base+0x14b8>
   17034:	bl	1745c <argp_failure@@Base+0x18f0>
   17038:	mov	r4, r0
   1703c:	cmp	r0, #0
   17040:	movweq	r4, #1
   17044:	b	17000 <argp_failure@@Base+0x1494>
   17048:	bge	17070 <argp_failure@@Base+0x1504>
   1704c:	ldr	r1, [r1, #12]
   17050:	ldr	r3, [r1, #20]
   17054:	cmp	r2, r3
   17058:	blt	1704c <argp_failure@@Base+0x14e0>
   1705c:	bl	1745c <argp_failure@@Base+0x18f0>
   17060:	mov	r4, r0
   17064:	cmp	r0, #0
   17068:	mvneq	r4, #0
   1706c:	b	17000 <argp_failure@@Base+0x1494>
   17070:	bl	1745c <argp_failure@@Base+0x18f0>
   17074:	mov	r4, r0
   17078:	cmp	r0, #0
   1707c:	bne	17000 <argp_failure@@Base+0x1494>
   17080:	ldr	r0, [r7, #12]
   17084:	ldr	r1, [r5, #12]
   17088:	orr	r2, r1, r0
   1708c:	sub	r3, r0, r1
   17090:	cmn	r2, #1
   17094:	mov	r4, r3
   17098:	suble	r4, r1, r0
   1709c:	and	r0, r1, r0
   170a0:	cmp	r0, #0
   170a4:	movlt	r4, r3
   170a8:	cmp	r4, #0
   170ac:	bne	17000 <argp_failure@@Base+0x1494>
   170b0:	ldr	r3, [r7, #4]
   170b4:	mov	sl, #0
   170b8:	cmp	r3, #0
   170bc:	beq	170f4 <argp_failure@@Base+0x1588>
   170c0:	ldr	r0, [r7]
   170c4:	mov	r1, r3
   170c8:	add	r0, r0, #12
   170cc:	ldr	sl, [r0, #-12]
   170d0:	cmp	sl, #0
   170d4:	beq	170e4 <argp_failure@@Base+0x1578>
   170d8:	ldrb	r2, [r0]
   170dc:	tst	r2, #2
   170e0:	beq	170f4 <argp_failure@@Base+0x1588>
   170e4:	add	r0, r0, #24
   170e8:	subs	r1, r1, #1
   170ec:	bne	170cc <argp_failure@@Base+0x1560>
   170f0:	mov	sl, #0
   170f4:	ldr	r8, [r5, #4]
   170f8:	cmp	r8, #0
   170fc:	beq	17130 <argp_failure@@Base+0x15c4>
   17100:	ldr	r0, [r5]
   17104:	mov	r1, r8
   17108:	add	r0, r0, #12
   1710c:	ldr	r6, [r0, #-12]
   17110:	cmp	r6, #0
   17114:	beq	17124 <argp_failure@@Base+0x15b8>
   17118:	ldrb	r2, [r0]
   1711c:	tst	r2, #2
   17120:	beq	17134 <argp_failure@@Base+0x15c8>
   17124:	add	r0, r0, #24
   17128:	subs	r1, r1, #1
   1712c:	bne	1710c <argp_failure@@Base+0x15a0>
   17130:	mov	r6, #0
   17134:	ldr	r4, [r7]
   17138:	mov	r9, #0
   1713c:	cmp	sl, #0
   17140:	str	r3, [sp, #20]
   17144:	str	r8, [sp, #16]
   17148:	ldr	r1, [r4, #12]
   1714c:	str	r4, [sp, #4]
   17150:	beq	171b8 <argp_failure@@Base+0x164c>
   17154:	ands	r0, r1, #8
   17158:	beq	171b8 <argp_failure@@Base+0x164c>
   1715c:	str	r1, [sp, #24]
   17160:	bl	115f0 <__ctype_b_loc@plt>
   17164:	ldrb	r1, [sl]
   17168:	ldr	r0, [r0]
   1716c:	b	17174 <argp_failure@@Base+0x1608>
   17170:	ldrb	r1, [sl, #1]!
   17174:	add	r2, r0, r1, lsl #1
   17178:	ldrb	r2, [r2, #1]
   1717c:	tst	r2, #32
   17180:	bne	17170 <argp_failure@@Base+0x1604>
   17184:	subs	r4, r1, #45	; 0x2d
   17188:	movwne	r4, #1
   1718c:	cmp	r1, #0
   17190:	beq	171b0 <argp_failure@@Base+0x1644>
   17194:	uxtb	r1, r1
   17198:	ldrb	r1, [r0, r1, lsl #1]
   1719c:	tst	r1, #8
   171a0:	bne	171b0 <argp_failure@@Base+0x1644>
   171a4:	ldrb	r1, [sl, #1]!
   171a8:	cmp	r1, #0
   171ac:	bne	17194 <argp_failure@@Base+0x1628>
   171b0:	ldr	r1, [sp, #24]
   171b4:	b	171bc <argp_failure@@Base+0x1650>
   171b8:	mov	r4, #0
   171bc:	ldr	r0, [r5]
   171c0:	cmp	r6, #0
   171c4:	str	r0, [sp, #8]
   171c8:	ldr	r0, [r0, #12]
   171cc:	str	r0, [sp, #12]
   171d0:	andsne	r0, r0, #8
   171d4:	beq	17230 <argp_failure@@Base+0x16c4>
   171d8:	mov	r8, r1
   171dc:	bl	115f0 <__ctype_b_loc@plt>
   171e0:	ldrb	r1, [r6]
   171e4:	ldr	r0, [r0]
   171e8:	b	171f0 <argp_failure@@Base+0x1684>
   171ec:	ldrb	r1, [r6, #1]!
   171f0:	add	r2, r0, r1, lsl #1
   171f4:	ldrb	r2, [r2, #1]
   171f8:	tst	r2, #32
   171fc:	bne	171ec <argp_failure@@Base+0x1680>
   17200:	subs	r9, r1, #45	; 0x2d
   17204:	movwne	r9, #1
   17208:	cmp	r1, #0
   1720c:	beq	1722c <argp_failure@@Base+0x16c0>
   17210:	uxtb	r1, r1
   17214:	ldrb	r1, [r0, r1, lsl #1]
   17218:	tst	r1, #8
   1721c:	bne	1722c <argp_failure@@Base+0x16c0>
   17220:	ldrb	r1, [r6, #1]!
   17224:	cmp	r1, #0
   17228:	bne	17210 <argp_failure@@Base+0x16a4>
   1722c:	mov	r1, r8
   17230:	subs	r4, r4, r9
   17234:	bne	17000 <argp_failure@@Base+0x1494>
   17238:	ldr	r0, [sp, #20]
   1723c:	mov	r2, #0
   17240:	cmp	r0, #0
   17244:	beq	172dc <argp_failure@@Base+0x1770>
   17248:	rsb	r8, r0, #1
   1724c:	ldr	r0, [sp, #4]
   17250:	ldr	r4, [r7, #8]
   17254:	add	r9, r0, #36	; 0x24
   17258:	tst	r1, #8
   1725c:	beq	17284 <argp_failure@@Base+0x1718>
   17260:	mov	r2, #0
   17264:	cmp	r8, #0
   17268:	beq	172dc <argp_failure@@Base+0x1770>
   1726c:	cmp	r2, #0
   17270:	bne	172dc <argp_failure@@Base+0x1770>
   17274:	ldr	r1, [r9], #24
   17278:	add	r8, r8, #1
   1727c:	tst	r1, #8
   17280:	bne	17260 <argp_failure@@Base+0x16f4>
   17284:	ldr	r7, [r9, #-32]	; 0xffffffe0
   17288:	sub	r0, r7, #1
   1728c:	cmp	r0, #254	; 0xfe
   17290:	bhi	17260 <argp_failure@@Base+0x16f4>
   17294:	str	r1, [sp, #24]
   17298:	bl	115f0 <__ctype_b_loc@plt>
   1729c:	ldr	r0, [r0]
   172a0:	add	r0, r0, r7, lsl #1
   172a4:	ldrb	r0, [r0, #1]
   172a8:	tst	r0, #64	; 0x40
   172ac:	beq	17260 <argp_failure@@Base+0x16f4>
   172b0:	ldrb	r0, [r4]
   172b4:	mov	r2, r7
   172b8:	cmp	r7, r0
   172bc:	bne	17260 <argp_failure@@Base+0x16f4>
   172c0:	ldr	r0, [sp, #24]
   172c4:	add	r4, r4, #1
   172c8:	tst	r0, #2
   172cc:	mov	r0, #0
   172d0:	movne	r2, r0
   172d4:	cmp	r8, #0
   172d8:	bne	1726c <argp_failure@@Base+0x1700>
   172dc:	ldr	r3, [sp, #16]
   172e0:	mov	r9, #0
   172e4:	mov	r0, r2
   172e8:	str	r2, [sp, #24]
   172ec:	cmp	r3, #0
   172f0:	beq	17394 <argp_failure@@Base+0x1828>
   172f4:	ldr	r0, [sp, #8]
   172f8:	ldr	r5, [r5, #8]
   172fc:	ldr	r4, [sp, #12]
   17300:	rsb	r7, r3, #1
   17304:	add	r8, r0, #36	; 0x24
   17308:	tst	r4, #8
   1730c:	beq	1732c <argp_failure@@Base+0x17c0>
   17310:	b	17380 <argp_failure@@Base+0x1814>
   17314:	ldr	r2, [sp, #24]
   17318:	b	17380 <argp_failure@@Base+0x1814>
   1731c:	ldr	r4, [r8], #24
   17320:	add	r7, r7, #1
   17324:	tst	r4, #8
   17328:	bne	17380 <argp_failure@@Base+0x1814>
   1732c:	ldr	r9, [r8, #-32]	; 0xffffffe0
   17330:	sub	r0, r9, #1
   17334:	cmp	r0, #254	; 0xfe
   17338:	bhi	17380 <argp_failure@@Base+0x1814>
   1733c:	bl	115f0 <__ctype_b_loc@plt>
   17340:	ldr	r0, [r0]
   17344:	add	r0, r0, r9, lsl #1
   17348:	ldrb	r0, [r0, #1]
   1734c:	tst	r0, #64	; 0x40
   17350:	beq	17314 <argp_failure@@Base+0x17a8>
   17354:	ldrb	r0, [r5]
   17358:	ldr	r2, [sp, #24]
   1735c:	cmp	r9, r0
   17360:	bne	17380 <argp_failure@@Base+0x1814>
   17364:	tst	r4, #2
   17368:	mov	r0, #0
   1736c:	add	r5, r5, #1
   17370:	movne	r9, r0
   17374:	cmp	r7, #0
   17378:	bne	1738c <argp_failure@@Base+0x1820>
   1737c:	b	17394 <argp_failure@@Base+0x1828>
   17380:	mov	r9, #0
   17384:	cmp	r7, #0
   17388:	beq	17394 <argp_failure@@Base+0x1828>
   1738c:	cmp	r9, #0
   17390:	beq	1731c <argp_failure@@Base+0x17b0>
   17394:	tst	r2, #255	; 0xff
   17398:	mov	r5, r2
   1739c:	bne	173ac <argp_failure@@Base+0x1840>
   173a0:	cmp	sl, #0
   173a4:	ldrbne	r5, [sl]
   173a8:	moveq	r5, #0
   173ac:	tst	r9, #255	; 0xff
   173b0:	mov	r7, r9
   173b4:	bne	173c4 <argp_failure@@Base+0x1858>
   173b8:	cmp	r6, #0
   173bc:	ldrbne	r7, [r6]
   173c0:	moveq	r7, #0
   173c4:	bl	115d8 <__ctype_tolower_loc@plt>
   173c8:	ldr	r2, [r0]
   173cc:	uxtb	r0, r7
   173d0:	uxtb	r1, r5
   173d4:	ldr	r3, [r2, r0, lsl #2]
   173d8:	ldr	r2, [r2, r1, lsl #2]
   173dc:	subs	r4, r2, r3
   173e0:	subseq	r4, r0, r1
   173e4:	bne	17000 <argp_failure@@Base+0x1494>
   173e8:	ldr	r0, [sp, #24]
   173ec:	uxtb	r4, r0
   173f0:	cmp	r4, #0
   173f4:	movwne	r4, #1
   173f8:	tst	r9, #255	; 0xff
   173fc:	subne	r4, r4, #1
   17400:	cmp	r4, #0
   17404:	bne	17000 <argp_failure@@Base+0x1494>
   17408:	ldr	r0, [sp, #24]
   1740c:	tst	r0, #255	; 0xff
   17410:	beq	1741c <argp_failure@@Base+0x18b0>
   17414:	mov	r4, #0
   17418:	b	17000 <argp_failure@@Base+0x1494>
   1741c:	cmp	sl, #0
   17420:	mov	r4, sl
   17424:	movwne	r4, #1
   17428:	cmp	r6, #0
   1742c:	subne	r4, r4, #1
   17430:	cmp	r4, #0
   17434:	bne	17000 <argp_failure@@Base+0x1494>
   17438:	cmp	sl, #0
   1743c:	beq	17414 <argp_failure@@Base+0x18a8>
   17440:	mov	r0, sl
   17444:	mov	r1, r6
   17448:	bl	11524 <strcasecmp@plt>
   1744c:	mov	r4, r0
   17450:	cmp	r0, #0
   17454:	moveq	r4, #0
   17458:	b	17000 <argp_failure@@Base+0x1494>
   1745c:	push	{r4, r5, fp, lr}
   17460:	add	fp, sp, #8
   17464:	mov	r4, r1
   17468:	mov	r5, r0
   1746c:	ldr	r1, [r1, #12]
   17470:	ldr	r0, [r0, #12]
   17474:	cmp	r0, r1
   17478:	beq	17488 <argp_failure@@Base+0x191c>
   1747c:	bl	1745c <argp_failure@@Base+0x18f0>
   17480:	cmp	r0, #0
   17484:	popne	{r4, r5, fp, pc}
   17488:	ldr	r1, [r5, #8]
   1748c:	ldr	r2, [r4, #8]
   17490:	orr	r0, r2, r1
   17494:	sub	r3, r1, r2
   17498:	cmn	r0, #1
   1749c:	mov	r0, r3
   174a0:	suble	r0, r2, r1
   174a4:	and	r1, r2, r1
   174a8:	cmp	r1, #0
   174ac:	movlt	r0, r3
   174b0:	cmp	r0, #0
   174b4:	ldreq	r0, [r5, #4]
   174b8:	ldreq	r1, [r4, #4]
   174bc:	subeq	r0, r1, r0
   174c0:	pop	{r4, r5, fp, pc}
   174c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   174c8:	add	fp, sp, #24
   174cc:	mov	r8, r0
   174d0:	ldr	r0, [r1, #12]
   174d4:	mov	r5, r1
   174d8:	cmp	r0, #0
   174dc:	beq	1752c <argp_failure@@Base+0x19c0>
   174e0:	ldr	r1, [r5, #8]
   174e4:	ldr	r0, [r5]
   174e8:	ldr	r4, [r1]
   174ec:	ldr	r7, [r0, #16]
   174f0:	cmp	r4, #0
   174f4:	ldrne	r1, [r1, #4]
   174f8:	cmpne	r1, #0
   174fc:	bne	175f8 <argp_failure@@Base+0x1a8c>
   17500:	cmp	r7, #0
   17504:	beq	1751c <argp_failure@@Base+0x19b0>
   17508:	ldr	r0, [r7]
   1750c:	cmp	r0, #0
   17510:	ldrbne	r1, [r0]
   17514:	cmpne	r1, #0
   17518:	bne	17650 <argp_failure@@Base+0x1ae4>
   1751c:	mov	r0, #0
   17520:	str	r0, [r5, #12]
   17524:	add	r5, r5, #4
   17528:	b	17570 <argp_failure@@Base+0x1a04>
   1752c:	ldr	r6, [r5, #4]!
   17530:	ldr	r0, [r6, #28]
   17534:	ldr	r1, [r6, #32]
   17538:	add	r2, r0, #2
   1753c:	cmp	r2, r1
   17540:	bls	1755c <argp_failure@@Base+0x19f0>
   17544:	mov	r0, r6
   17548:	mov	r1, #2
   1754c:	bl	1a068 <argp_parse@@Base+0x26f0>
   17550:	cmp	r0, #0
   17554:	beq	17570 <argp_failure@@Base+0x1a04>
   17558:	ldr	r0, [r6, #28]
   1755c:	movw	r1, #8236	; 0x202c
   17560:	strh	r1, [r0]
   17564:	ldr	r0, [r6, #28]
   17568:	add	r0, r0, #2
   1756c:	str	r0, [r6, #28]
   17570:	ldr	r5, [r5]
   17574:	ldr	r1, [r5, #24]
   17578:	ldr	r2, [r5, #28]
   1757c:	ldr	r0, [r5, #16]
   17580:	sub	r1, r2, r1
   17584:	cmp	r1, r0
   17588:	bls	17594 <argp_failure@@Base+0x1a28>
   1758c:	mov	r0, r5
   17590:	bl	19b08 <argp_parse@@Base+0x2190>
   17594:	ldr	r0, [r5, #20]
   17598:	bic	r0, r0, r0, asr #31
   1759c:	sub	r1, r8, r0
   175a0:	cmp	r1, #1
   175a4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   175a8:	add	r1, r8, #1
   175ac:	mov	r6, #32
   175b0:	sub	r4, r1, r0
   175b4:	ldr	r0, [r5, #28]
   175b8:	ldr	r1, [r5, #32]
   175bc:	cmp	r0, r1
   175c0:	bcc	175dc <argp_failure@@Base+0x1a70>
   175c4:	mov	r0, r5
   175c8:	mov	r1, #1
   175cc:	bl	1a068 <argp_parse@@Base+0x26f0>
   175d0:	cmp	r0, #0
   175d4:	beq	175e8 <argp_failure@@Base+0x1a7c>
   175d8:	ldr	r0, [r5, #28]
   175dc:	add	r1, r0, #1
   175e0:	str	r1, [r5, #28]
   175e4:	strb	r6, [r0]
   175e8:	sub	r4, r4, #1
   175ec:	cmp	r4, #1
   175f0:	bgt	175b4 <argp_failure@@Base+0x1a48>
   175f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   175f8:	ldr	r1, [r4, #12]
   175fc:	ldr	r0, [r0, #12]
   17600:	cmp	r0, r1
   17604:	beq	17500 <argp_failure@@Base+0x1994>
   17608:	ldr	r6, [r5, #4]
   1760c:	ldr	r0, [r6, #28]
   17610:	ldr	r1, [r6, #32]
   17614:	cmp	r0, r1
   17618:	bcc	17634 <argp_failure@@Base+0x1ac8>
   1761c:	mov	r0, r6
   17620:	mov	r1, #1
   17624:	bl	1a068 <argp_parse@@Base+0x26f0>
   17628:	cmp	r0, #0
   1762c:	beq	17500 <argp_failure@@Base+0x1994>
   17630:	ldr	r0, [r6, #28]
   17634:	add	r1, r0, #1
   17638:	str	r1, [r6, #28]
   1763c:	mov	r1, #10
   17640:	strb	r1, [r0]
   17644:	cmp	r7, #0
   17648:	bne	17508 <argp_failure@@Base+0x199c>
   1764c:	b	1751c <argp_failure@@Base+0x19b0>
   17650:	cmp	r4, #0
   17654:	beq	1768c <argp_failure@@Base+0x1b20>
   17658:	ldr	r1, [r4, #16]
   1765c:	cmp	r1, r7
   17660:	beq	1751c <argp_failure@@Base+0x19b0>
   17664:	cmp	r1, #0
   17668:	beq	17680 <argp_failure@@Base+0x1b14>
   1766c:	ldr	r1, [r1, #12]
   17670:	cmp	r1, r7
   17674:	cmpne	r1, #0
   17678:	bne	1766c <argp_failure@@Base+0x1b00>
   1767c:	b	17684 <argp_failure@@Base+0x1b18>
   17680:	mov	r1, #0
   17684:	cmp	r1, r7
   17688:	beq	1751c <argp_failure@@Base+0x19b0>
   1768c:	ldr	r1, [r5, #4]
   17690:	mov	r2, r5
   17694:	ldr	r4, [r1, #12]
   17698:	ldr	r1, [r7, #16]
   1769c:	bl	176cc <argp_failure@@Base+0x1b60>
   176a0:	ldr	r6, [r5, #4]
   176a4:	ldr	r1, [r6, #24]
   176a8:	ldr	r2, [r6, #28]
   176ac:	ldr	r0, [r6, #16]
   176b0:	sub	r1, r2, r1
   176b4:	cmp	r1, r0
   176b8:	bls	176c4 <argp_failure@@Base+0x1b58>
   176bc:	mov	r0, r6
   176c0:	bl	19b08 <argp_parse@@Base+0x2190>
   176c4:	str	r4, [r6, #12]
   176c8:	b	1751c <argp_failure@@Base+0x19b0>
   176cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d0:	add	fp, sp, #28
   176d4:	sub	sp, sp, #4
   176d8:	mov	r9, r2
   176dc:	mov	r8, r0
   176e0:	cmp	r1, #0
   176e4:	mov	r6, r0
   176e8:	beq	17728 <argp_failure@@Base+0x1bbc>
   176ec:	ldr	r0, [r1, #20]
   176f0:	mov	r4, r1
   176f4:	mov	r6, r8
   176f8:	cmp	r0, #0
   176fc:	beq	17728 <argp_failure@@Base+0x1bbc>
   17700:	ldr	r1, [r9, #16]
   17704:	mov	r0, r4
   17708:	bl	185b4 <argp_parse@@Base+0xc3c>
   1770c:	ldr	r3, [r4, #20]
   17710:	mov	r2, r0
   17714:	movw	r0, #3
   17718:	mov	r1, r8
   1771c:	movt	r0, #512	; 0x200
   17720:	blx	r3
   17724:	mov	r6, r0
   17728:	cmp	r6, #0
   1772c:	beq	1795c <argp_failure@@Base+0x1df0>
   17730:	ldrb	r0, [r6]
   17734:	cmp	r0, #0
   17738:	beq	17950 <argp_failure@@Base+0x1de4>
   1773c:	ldr	r0, [r9, #8]
   17740:	ldr	r0, [r0]
   17744:	cmp	r0, #0
   17748:	beq	17788 <argp_failure@@Base+0x1c1c>
   1774c:	ldr	r4, [r9, #4]
   17750:	ldr	r0, [r4, #28]
   17754:	ldr	r1, [r4, #32]
   17758:	cmp	r0, r1
   1775c:	bcc	17778 <argp_failure@@Base+0x1c0c>
   17760:	mov	r0, r4
   17764:	mov	r1, #1
   17768:	bl	1a068 <argp_parse@@Base+0x26f0>
   1776c:	cmp	r0, #0
   17770:	beq	17788 <argp_failure@@Base+0x1c1c>
   17774:	ldr	r0, [r4, #28]
   17778:	add	r1, r0, #1
   1777c:	str	r1, [r4, #28]
   17780:	mov	r1, #10
   17784:	strb	r1, [r0]
   17788:	ldr	r7, [r9, #4]
   1778c:	movw	sl, #54264	; 0xd3f8
   17790:	movt	sl, #2
   17794:	ldr	r4, [sl, #24]
   17798:	ldr	r1, [r7, #24]
   1779c:	ldr	r2, [r7, #28]
   177a0:	ldr	r0, [r7, #16]
   177a4:	sub	r1, r2, r1
   177a8:	cmp	r1, r0
   177ac:	bls	177b8 <argp_failure@@Base+0x1c4c>
   177b0:	mov	r0, r7
   177b4:	bl	19b08 <argp_parse@@Base+0x2190>
   177b8:	ldr	r0, [r7, #20]
   177bc:	bic	r0, r0, r0, asr #31
   177c0:	sub	r1, r4, r0
   177c4:	cmp	r1, #1
   177c8:	blt	17818 <argp_failure@@Base+0x1cac>
   177cc:	add	r1, r4, #1
   177d0:	mov	r5, #32
   177d4:	sub	r4, r1, r0
   177d8:	ldr	r0, [r7, #28]
   177dc:	ldr	r1, [r7, #32]
   177e0:	cmp	r0, r1
   177e4:	bcc	17800 <argp_failure@@Base+0x1c94>
   177e8:	mov	r0, r7
   177ec:	mov	r1, #1
   177f0:	bl	1a068 <argp_parse@@Base+0x26f0>
   177f4:	cmp	r0, #0
   177f8:	beq	1780c <argp_failure@@Base+0x1ca0>
   177fc:	ldr	r0, [r7, #28]
   17800:	add	r1, r0, #1
   17804:	str	r1, [r7, #28]
   17808:	strb	r5, [r0]
   1780c:	sub	r4, r4, #1
   17810:	cmp	r4, #1
   17814:	bgt	177d8 <argp_failure@@Base+0x1c6c>
   17818:	ldr	r4, [r9, #4]
   1781c:	ldr	r5, [sl, #24]
   17820:	ldr	r1, [r4, #24]
   17824:	ldr	r2, [r4, #28]
   17828:	ldr	r0, [r4, #16]
   1782c:	mov	r7, r4
   17830:	sub	r1, r2, r1
   17834:	mov	r2, sl
   17838:	mov	sl, r5
   1783c:	cmp	r1, r0
   17840:	bls	17868 <argp_failure@@Base+0x1cfc>
   17844:	mov	r0, r4
   17848:	mov	r7, r2
   1784c:	bl	19b08 <argp_parse@@Base+0x2190>
   17850:	ldr	sl, [r7, #24]
   17854:	ldr	r7, [r9, #4]
   17858:	ldr	r1, [r7, #24]
   1785c:	ldr	r2, [r7, #28]
   17860:	ldr	r0, [r7, #16]
   17864:	sub	r1, r2, r1
   17868:	str	r5, [r4, #4]
   1786c:	cmp	r1, r0
   17870:	mov	r5, r7
   17874:	bls	17884 <argp_failure@@Base+0x1d18>
   17878:	mov	r0, r7
   1787c:	bl	19b08 <argp_parse@@Base+0x2190>
   17880:	ldr	r5, [r9, #4]
   17884:	mov	r0, r6
   17888:	str	sl, [r7, #12]
   1788c:	bl	11614 <strlen@plt>
   17890:	cmp	r0, #0
   17894:	beq	178e0 <argp_failure@@Base+0x1d74>
   17898:	mov	r4, r0
   1789c:	ldr	r0, [r5, #28]
   178a0:	ldr	r1, [r5, #32]
   178a4:	add	r2, r0, r4
   178a8:	cmp	r2, r1
   178ac:	bls	178c8 <argp_failure@@Base+0x1d5c>
   178b0:	mov	r0, r5
   178b4:	mov	r1, r4
   178b8:	bl	1a068 <argp_parse@@Base+0x26f0>
   178bc:	cmp	r0, #0
   178c0:	beq	178e0 <argp_failure@@Base+0x1d74>
   178c4:	ldr	r0, [r5, #28]
   178c8:	mov	r1, r6
   178cc:	mov	r2, r4
   178d0:	bl	114d0 <memcpy@plt>
   178d4:	ldr	r0, [r5, #28]
   178d8:	add	r0, r0, r4
   178dc:	str	r0, [r5, #28]
   178e0:	ldr	r4, [r9, #4]
   178e4:	mov	r5, r4
   178e8:	ldr	r2, [r4, #24]
   178ec:	ldr	r0, [r4, #16]
   178f0:	ldr	r1, [r5, #28]!
   178f4:	sub	r2, r1, r2
   178f8:	cmp	r2, r0
   178fc:	mov	r0, r4
   17900:	bls	17918 <argp_failure@@Base+0x1dac>
   17904:	mov	r0, r4
   17908:	bl	19b08 <argp_parse@@Base+0x2190>
   1790c:	ldr	r0, [r9, #4]
   17910:	mov	r5, r0
   17914:	ldr	r1, [r5, #28]!
   17918:	mov	r2, #0
   1791c:	str	r2, [r4, #4]
   17920:	ldr	r2, [r0, #32]
   17924:	cmp	r1, r2
   17928:	bcc	17940 <argp_failure@@Base+0x1dd4>
   1792c:	mov	r1, #1
   17930:	bl	1a068 <argp_parse@@Base+0x26f0>
   17934:	cmp	r0, #0
   17938:	beq	17950 <argp_failure@@Base+0x1de4>
   1793c:	ldr	r1, [r5]
   17940:	add	r0, r1, #1
   17944:	str	r0, [r5]
   17948:	mov	r0, #10
   1794c:	strb	r0, [r1]
   17950:	ldr	r0, [r9, #8]
   17954:	mov	r1, #1
   17958:	str	r1, [r0, #4]
   1795c:	cmp	r6, r8
   17960:	subeq	sp, fp, #28
   17964:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17968:	mov	r0, r6
   1796c:	sub	sp, fp, #28
   17970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17974:	b	18c48 <argp_parse@@Base+0x12d0>

00017978 <argp_parse@@Base>:
   17978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1797c:	add	fp, sp, #28
   17980:	sub	sp, sp, #212	; 0xd4
   17984:	mov	r5, r3
   17988:	mov	r6, r2
   1798c:	mov	r7, r1
   17990:	mov	r4, r0
   17994:	tst	r3, #1
   17998:	bne	179d4 <argp_parse@@Base+0x5c>
   1799c:	movw	r0, #54332	; 0xd43c
   179a0:	movw	r8, #54328	; 0xd438
   179a4:	movt	r0, #2
   179a8:	movt	r8, #2
   179ac:	ldr	r1, [r0]
   179b0:	cmp	r1, #0
   179b4:	ldreq	r1, [r6]
   179b8:	streq	r1, [r0]
   179bc:	ldr	r0, [r8]
   179c0:	cmp	r0, #0
   179c4:	bne	179d4 <argp_parse@@Base+0x5c>
   179c8:	ldr	r0, [r6]
   179cc:	bl	18bc4 <argp_parse@@Base+0x124c>
   179d0:	str	r0, [r8]
   179d4:	tst	r5, #16
   179d8:	str	r6, [fp, #-228]	; 0xffffff1c
   179dc:	bne	17a88 <argp_parse@@Base+0x110>
   179e0:	mov	r1, sp
   179e4:	sub	r3, r1, #64	; 0x40
   179e8:	mov	sp, r3
   179ec:	mov	r2, sp
   179f0:	sub	r0, r2, #32
   179f4:	mov	sp, r0
   179f8:	vmov.i32	q8, #0	; 0x00000000
   179fc:	sub	r2, r2, #20
   17a00:	cmp	r4, #0
   17a04:	vst1.32	{d16-d17}, [r2]
   17a08:	mov	r2, r0
   17a0c:	vst1.64	{d16-d17}, [r2]!
   17a10:	str	r3, [r2]
   17a14:	sub	r2, r1, #32
   17a18:	sub	r1, r1, #48	; 0x30
   17a1c:	vst1.64	{d16-d17}, [r2]
   17a20:	vst1.64	{d16-d17}, [r1]
   17a24:	mov	r1, #48	; 0x30
   17a28:	mov	r2, r3
   17a2c:	vst1.64	{d16-d17}, [r2], r1
   17a30:	vst1.64	{d16-d17}, [r2]
   17a34:	movw	r2, #48256	; 0xbc80
   17a38:	strne	r4, [r3], #16
   17a3c:	movt	r2, #1
   17a40:	mov	r1, r3
   17a44:	str	r2, [r1], #16
   17a48:	movw	r2, #57272	; 0xdfb8
   17a4c:	movt	r2, #2
   17a50:	ldr	r2, [r2]
   17a54:	cmp	r2, #0
   17a58:	movweq	r2, #54528	; 0xd500
   17a5c:	movteq	r2, #2
   17a60:	ldreq	r2, [r2]
   17a64:	cmpeq	r2, #0
   17a68:	beq	17a7c <argp_parse@@Base+0x104>
   17a6c:	movw	r2, #48284	; 0xbc9c
   17a70:	mov	r3, r1
   17a74:	movt	r2, #1
   17a78:	str	r2, [r1]
   17a7c:	mov	r1, #0
   17a80:	str	r1, [r3, #16]
   17a84:	b	17a8c <argp_parse@@Base+0x114>
   17a88:	mov	r0, r4
   17a8c:	sub	r9, fp, #96	; 0x60
   17a90:	str	r7, [fp, #-232]	; 0xffffff18
   17a94:	vmov.i32	q8, #0	; 0x00000000
   17a98:	mov	r7, #12
   17a9c:	mov	r4, #0
   17aa0:	cmp	r0, #0
   17aa4:	str	r5, [fp, #-224]	; 0xffffff20
   17aa8:	str	r0, [fp, #-236]	; 0xffffff14
   17aac:	mov	r1, r9
   17ab0:	vst1.64	{d16-d17}, [r1], r7
   17ab4:	vst1.32	{d16-d17}, [r1]
   17ab8:	mov	r1, #1
   17abc:	bic	r3, r1, r5, lsr #2
   17ac0:	str	r3, [fp, #-64]	; 0xffffffc0
   17ac4:	str	r4, [fp, #-60]	; 0xffffffc4
   17ac8:	str	r4, [fp, #-56]	; 0xffffffc8
   17acc:	str	r4, [fp, #-52]	; 0xffffffcc
   17ad0:	beq	17b08 <argp_parse@@Base+0x190>
   17ad4:	sub	r1, fp, #64	; 0x40
   17ad8:	bl	187a4 <argp_parse@@Base+0xe2c>
   17adc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ae0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17ae4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ae8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17aec:	mov	r6, #16
   17af0:	add	r1, r6, r1, lsl #4
   17af4:	add	r2, r2, r2, lsl #3
   17af8:	mov	r6, #36	; 0x24
   17afc:	lsl	r4, r0, #2
   17b00:	add	r8, r6, r2, lsl #2
   17b04:	b	17b10 <argp_parse@@Base+0x198>
   17b08:	mov	r8, #36	; 0x24
   17b0c:	mov	r1, #16
   17b10:	add	r5, r8, r4
   17b14:	add	sl, r5, r1
   17b18:	add	r0, r3, sl
   17b1c:	add	r0, r0, #1
   17b20:	bl	199c0 <argp_parse@@Base+0x2048>
   17b24:	cmp	r0, #0
   17b28:	str	r0, [fp, #-100]	; 0xffffff9c
   17b2c:	beq	1853c <argp_parse@@Base+0xbc4>
   17b30:	mov	r6, r0
   17b34:	mov	r0, #12
   17b38:	sub	r1, fp, #220	; 0xdc
   17b3c:	mov	r2, r4
   17b40:	vld1.64	{d16-d17}, [r9], r0
   17b44:	add	r0, r1, #20
   17b48:	add	r7, r6, r8
   17b4c:	add	r8, r6, r5
   17b50:	add	r5, r6, sl
   17b54:	vld1.32	{d18-d19}, [r9]
   17b58:	vst1.32	{d16-d17}, [r0]
   17b5c:	add	r0, r1, #32
   17b60:	mov	r9, r1
   17b64:	mov	r1, #0
   17b68:	vst1.32	{d18-d19}, [r0]
   17b6c:	mov	r0, #1
   17b70:	str	r6, [fp, #-172]	; 0xffffff54
   17b74:	str	r0, [fp, #-208]	; 0xffffff30
   17b78:	str	r0, [fp, #-204]	; 0xffffff34
   17b7c:	mov	r0, r7
   17b80:	str	r7, [fp, #-164]	; 0xffffff5c
   17b84:	str	r8, [fp, #-212]	; 0xffffff2c
   17b88:	str	r5, [fp, #-216]	; 0xffffff28
   17b8c:	bl	11668 <memset@plt>
   17b90:	str	r5, [fp, #-44]	; 0xffffffd4
   17b94:	str	r9, [fp, #-48]	; 0xffffffd0
   17b98:	ldr	r9, [fp, #-224]	; 0xffffff20
   17b9c:	mov	r0, #45	; 0x2d
   17ba0:	str	r8, [fp, #-40]	; 0xffffffd8
   17ba4:	str	r7, [fp, #-36]	; 0xffffffdc
   17ba8:	tst	r9, #8
   17bac:	moveq	r0, #43	; 0x2b
   17bb0:	tsteq	r9, #4
   17bb4:	beq	18184 <argp_parse@@Base+0x80c>
   17bb8:	add	r1, r5, #1
   17bbc:	strb	r0, [r5]
   17bc0:	str	r1, [fp, #-44]	; 0xffffffd4
   17bc4:	ldr	r0, [fp, #-236]	; 0xffffff14
   17bc8:	ldr	sl, [fp, #-228]	; 0xffffff1c
   17bcc:	mov	r5, #0
   17bd0:	strb	r5, [r1]
   17bd4:	str	r5, [r8]
   17bd8:	cmp	r0, #0
   17bdc:	str	r0, [fp, #-220]	; 0xffffff24
   17be0:	beq	17c18 <argp_parse@@Base+0x2a0>
   17be4:	sub	sp, sp, #8
   17be8:	sub	r1, fp, #48	; 0x30
   17bec:	mov	r2, #0
   17bf0:	mov	r3, r6
   17bf4:	str	r1, [sp]
   17bf8:	mov	r1, #0
   17bfc:	bl	18880 <argp_parse@@Base+0xf08>
   17c00:	add	sp, sp, #8
   17c04:	str	r0, [fp, #-168]	; 0xffffff58
   17c08:	mov	r6, r0
   17c0c:	ldr	r5, [fp, #-220]	; 0xffffff24
   17c10:	ldr	r4, [fp, #-172]	; 0xffffff54
   17c14:	b	17c20 <argp_parse@@Base+0x2a8>
   17c18:	mov	r4, r6
   17c1c:	str	r6, [fp, #-168]	; 0xffffff58
   17c20:	ldr	r3, [fp, #-232]	; 0xffffff18
   17c24:	sub	r1, fp, #220	; 0xdc
   17c28:	mov	r7, #0
   17c2c:	vmov.i32	q8, #0	; 0x00000000
   17c30:	mov	r0, #1
   17c34:	mov	r8, sl
   17c38:	cmp	r4, r6
   17c3c:	mov	r2, r1
   17c40:	add	r1, r1, #84	; 0x54
   17c44:	str	r7, [fp, #-116]	; 0xffffff8c
   17c48:	str	r7, [fp, #-120]	; 0xffffff88
   17c4c:	vst1.32	{d16-d17}, [r1]
   17c50:	str	r5, [fp, #-156]	; 0xffffff64
   17c54:	str	r3, [fp, #-152]	; 0xffffff68
   17c58:	str	sl, [fp, #-148]	; 0xffffff6c
   17c5c:	str	r9, [fp, #-140]	; 0xffffff74
   17c60:	str	r7, [fp, #-144]	; 0xffffff70
   17c64:	str	r2, [fp, #-104]	; 0xffffff98
   17c68:	str	r0, [fp, #-160]	; 0xffffff60
   17c6c:	movw	r0, #54336	; 0xd440
   17c70:	add	sl, r2, #64	; 0x40
   17c74:	movt	r0, #2
   17c78:	ldr	r0, [r0]
   17c7c:	str	r0, [fp, #-112]	; 0xffffff90
   17c80:	movw	r0, #54348	; 0xd44c
   17c84:	movt	r0, #2
   17c88:	ldr	r0, [r0]
   17c8c:	str	r0, [fp, #-108]	; 0xffffff94
   17c90:	bcs	17d74 <argp_parse@@Base+0x3fc>
   17c94:	ldr	r0, [fp, #12]
   17c98:	str	r0, [r4, #24]
   17c9c:	cmp	r7, #7
   17ca0:	cmpne	r7, #0
   17ca4:	bne	1853c <argp_parse@@Base+0xbc4>
   17ca8:	ldr	r0, [r4, #16]
   17cac:	cmp	r0, #0
   17cb0:	ldrne	r1, [r4, #20]
   17cb4:	ldrne	r0, [r0, #28]
   17cb8:	ldrne	r0, [r0, r1, lsl #2]
   17cbc:	strne	r0, [r4, #24]
   17cc0:	ldr	r3, [r4]
   17cc4:	cmp	r3, #0
   17cc8:	beq	17d18 <argp_parse@@Base+0x3a0>
   17ccc:	add	r0, r4, #28
   17cd0:	ldr	r1, [r4, #32]
   17cd4:	mov	r2, sl
   17cd8:	str	r1, [fp, #-120]	; 0xffffff88
   17cdc:	ldr	r1, [r4, #24]
   17ce0:	str	r1, [fp, #-128]	; 0xffffff80
   17ce4:	mov	r1, #0
   17ce8:	ldr	r0, [r0]
   17cec:	str	r0, [fp, #-124]	; 0xffffff84
   17cf0:	ldr	r0, [r4, #12]
   17cf4:	str	r0, [fp, #-136]	; 0xffffff78
   17cf8:	movw	r0, #6
   17cfc:	movt	r0, #256	; 0x100
   17d00:	sub	r0, r0, #3
   17d04:	blx	r3
   17d08:	mov	r7, r0
   17d0c:	ldr	r0, [fp, #-120]	; 0xffffff88
   17d10:	str	r0, [r4, #32]
   17d14:	b	17d34 <argp_parse@@Base+0x3bc>
   17d18:	ldr	r0, [r4, #4]
   17d1c:	mov	r7, #7
   17d20:	ldr	r0, [r0, #16]
   17d24:	cmp	r0, #0
   17d28:	ldrne	r0, [r0]
   17d2c:	cmpne	r0, #0
   17d30:	bne	17d48 <argp_parse@@Base+0x3d0>
   17d34:	ldr	r0, [fp, #-168]	; 0xffffff58
   17d38:	add	r4, r4, #36	; 0x24
   17d3c:	cmp	r4, r0
   17d40:	bcc	17c9c <argp_parse@@Base+0x324>
   17d44:	b	17d68 <argp_parse@@Base+0x3f0>
   17d48:	mov	r0, r4
   17d4c:	ldr	r2, [r4, #24]
   17d50:	ldr	r1, [r0, #28]!
   17d54:	str	r2, [r1]
   17d58:	ldr	r3, [r4]
   17d5c:	cmp	r3, #0
   17d60:	bne	17cd0 <argp_parse@@Base+0x358>
   17d64:	b	17d34 <argp_parse@@Base+0x3bc>
   17d68:	cmp	r7, #7
   17d6c:	cmpne	r7, #0
   17d70:	bne	1853c <argp_parse@@Base+0xbc4>
   17d74:	ldr	r0, [fp, #-140]	; 0xffffff74
   17d78:	tst	r0, #2
   17d7c:	bne	17d8c <argp_parse@@Base+0x414>
   17d80:	mov	r0, #1
   17d84:	str	r0, [fp, #-204]	; 0xffffff34
   17d88:	b	17db4 <argp_parse@@Base+0x43c>
   17d8c:	mov	r1, #0
   17d90:	tst	r0, #1
   17d94:	str	r1, [fp, #-204]	; 0xffffff34
   17d98:	beq	17db4 <argp_parse@@Base+0x43c>
   17d9c:	ldr	r0, [fp, #-152]	; 0xffffff68
   17da0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17da4:	sub	r1, r1, #4
   17da8:	add	r0, r0, #1
   17dac:	str	r1, [fp, #-148]	; 0xffffff6c
   17db0:	str	r0, [fp, #-152]	; 0xffffff68
   17db4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17db8:	cmp	r0, r8
   17dbc:	beq	17dd0 <argp_parse@@Base+0x458>
   17dc0:	movw	r0, #54328	; 0xd438
   17dc4:	movt	r0, #2
   17dc8:	ldr	r0, [r0]
   17dcc:	b	17de0 <argp_parse@@Base+0x468>
   17dd0:	ldr	r0, [r8]
   17dd4:	cmp	r0, #0
   17dd8:	beq	17dc0 <argp_parse@@Base+0x448>
   17ddc:	bl	18bc4 <argp_parse@@Base+0x124c>
   17de0:	str	r0, [fp, #-116]	; 0xffffff8c
   17de4:	sub	r0, fp, #220	; 0xdc
   17de8:	mov	r8, #0
   17dec:	add	r6, r0, #12
   17df0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17df4:	cmp	r0, #0
   17df8:	beq	17e0c <argp_parse@@Base+0x494>
   17dfc:	ldr	r9, [fp, #-144]	; 0xffffff70
   17e00:	cmp	r9, r0
   17e04:	bge	17ec0 <argp_parse@@Base+0x548>
   17e08:	str	r8, [fp, #-132]	; 0xffffff7c
   17e0c:	ldr	r0, [fp, #-160]	; 0xffffff60
   17e10:	ldr	r9, [fp, #-144]	; 0xffffff70
   17e14:	cmp	r0, #0
   17e18:	beq	17ec0 <argp_parse@@Base+0x548>
   17e1c:	mvn	r0, #0
   17e20:	str	r0, [fp, #-200]	; 0xffffff38
   17e24:	str	r9, [fp, #-208]	; 0xffffff30
   17e28:	ldr	r2, [fp, #-216]	; 0xffffff28
   17e2c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17e30:	ldr	r0, [fp, #-152]	; 0xffffff68
   17e34:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17e38:	ldrb	r7, [fp, #-140]	; 0xffffff74
   17e3c:	sub	sp, sp, #8
   17e40:	tst	r7, #64	; 0x40
   17e44:	bne	17e58 <argp_parse@@Base+0x4e0>
   17e48:	str	r8, [sp]
   17e4c:	str	r6, [sp, #4]
   17e50:	bl	18c9c <argp_parse@@Base+0x1324>
   17e54:	b	17e64 <argp_parse@@Base+0x4ec>
   17e58:	str	r8, [sp]
   17e5c:	str	r6, [sp, #4]
   17e60:	bl	18d00 <argp_parse@@Base+0x1388>
   17e64:	add	sp, sp, #8
   17e68:	ldr	r9, [fp, #-208]	; 0xffffff30
   17e6c:	mov	r7, r0
   17e70:	cmn	r0, #1
   17e74:	str	r9, [fp, #-144]	; 0xffffff70
   17e78:	beq	17e94 <argp_parse@@Base+0x51c>
   17e7c:	cmp	r7, #63	; 0x3f
   17e80:	beq	1805c <argp_parse@@Base+0x6e4>
   17e84:	cmp	r7, #1
   17e88:	bne	1806c <argp_parse@@Base+0x6f4>
   17e8c:	ldr	r7, [fp, #-196]	; 0xffffff3c
   17e90:	b	17ef8 <argp_parse@@Base+0x580>
   17e94:	cmp	r9, #2
   17e98:	str	r8, [fp, #-160]	; 0xffffff60
   17e9c:	blt	17ec0 <argp_parse@@Base+0x548>
   17ea0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17ea4:	movw	r1, #48739	; 0xbe63
   17ea8:	movt	r1, #1
   17eac:	add	r0, r0, r9, lsl #2
   17eb0:	ldr	r0, [r0, #-4]
   17eb4:	bl	11440 <strcmp@plt>
   17eb8:	cmp	r0, #0
   17ebc:	streq	r9, [fp, #-132]	; 0xffffff7c
   17ec0:	ldr	r2, [fp, #-152]	; 0xffffff68
   17ec4:	mov	r1, #1
   17ec8:	mov	r0, #7
   17ecc:	cmp	r9, r2
   17ed0:	bge	181d4 <argp_parse@@Base+0x85c>
   17ed4:	ldrb	r2, [fp, #-140]	; 0xffffff74
   17ed8:	tst	r2, #4
   17edc:	bne	181d4 <argp_parse@@Base+0x85c>
   17ee0:	add	r0, r9, #1
   17ee4:	str	r0, [fp, #-144]	; 0xffffff70
   17ee8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17eec:	ldr	r7, [r1, r9, lsl #2]
   17ef0:	mov	r9, r0
   17ef4:	str	r7, [fp, #-196]	; 0xffffff3c
   17ef8:	sub	r0, r9, #1
   17efc:	str	r0, [fp, #-144]	; 0xffffff70
   17f00:	ldr	r1, [fp, #-172]	; 0xffffff54
   17f04:	ldr	r2, [fp, #-168]	; 0xffffff58
   17f08:	cmp	r1, r2
   17f0c:	bcs	1818c <argp_parse@@Base+0x814>
   17f10:	add	r4, r1, #24
   17f14:	b	17f20 <argp_parse@@Base+0x5a8>
   17f18:	ldr	r0, [fp, #-144]	; 0xffffff70
   17f1c:	add	r4, r4, #36	; 0x24
   17f20:	add	r1, r0, #1
   17f24:	str	r1, [fp, #-144]	; 0xffffff70
   17f28:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17f2c:	cmp	r3, #0
   17f30:	beq	17fd0 <argp_parse@@Base+0x658>
   17f34:	ldr	r0, [r4, #8]
   17f38:	mov	r1, r7
   17f3c:	mov	r2, sl
   17f40:	mov	r5, #0
   17f44:	str	r0, [fp, #-120]	; 0xffffff88
   17f48:	ldr	r0, [r4]
   17f4c:	str	r0, [fp, #-128]	; 0xffffff80
   17f50:	ldr	r0, [r4, #4]
   17f54:	str	r0, [fp, #-124]	; 0xffffff84
   17f58:	ldr	r0, [r4, #-12]
   17f5c:	str	r0, [fp, #-136]	; 0xffffff78
   17f60:	mov	r0, #0
   17f64:	blx	r3
   17f68:	ldr	r1, [fp, #-120]	; 0xffffff88
   17f6c:	cmp	r0, #7
   17f70:	str	r1, [r4, #8]
   17f74:	bne	17ff8 <argp_parse@@Base+0x680>
   17f78:	ldr	r0, [fp, #-144]	; 0xffffff70
   17f7c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17f80:	sub	r0, r0, #1
   17f84:	cmp	r3, #0
   17f88:	str	r0, [fp, #-144]	; 0xffffff70
   17f8c:	beq	17fd4 <argp_parse@@Base+0x65c>
   17f90:	ldr	r0, [r4]
   17f94:	mov	r1, #0
   17f98:	mov	r2, sl
   17f9c:	str	r0, [fp, #-128]	; 0xffffff80
   17fa0:	ldr	r0, [r4, #4]
   17fa4:	str	r0, [fp, #-124]	; 0xffffff84
   17fa8:	ldr	r0, [r4, #-12]
   17fac:	str	r0, [fp, #-136]	; 0xffffff78
   17fb0:	movw	r0, #6
   17fb4:	movt	r0, #256	; 0x100
   17fb8:	blx	r3
   17fbc:	ldr	r1, [fp, #-120]	; 0xffffff88
   17fc0:	str	r1, [r4, #8]
   17fc4:	cmp	r0, #7
   17fc8:	beq	17fe0 <argp_parse@@Base+0x668>
   17fcc:	b	17ff0 <argp_parse@@Base+0x678>
   17fd0:	str	r0, [fp, #-144]	; 0xffffff70
   17fd4:	mov	r0, #7
   17fd8:	cmp	r0, #7
   17fdc:	bne	17ff0 <argp_parse@@Base+0x678>
   17fe0:	ldr	r2, [fp, #-168]	; 0xffffff58
   17fe4:	add	r1, r4, #12
   17fe8:	cmp	r1, r2
   17fec:	bcc	17f18 <argp_parse@@Base+0x5a0>
   17ff0:	movw	r5, #6
   17ff4:	movt	r5, #256	; 0x100
   17ff8:	cmp	r0, #0
   17ffc:	beq	1800c <argp_parse@@Base+0x694>
   18000:	cmp	r0, #7
   18004:	bne	18174 <argp_parse@@Base+0x7fc>
   18008:	b	1818c <argp_parse@@Base+0x814>
   1800c:	movw	r0, #6
   18010:	movt	r0, #256	; 0x100
   18014:	cmp	r5, r0
   18018:	ldreq	r0, [fp, #-152]	; 0xffffff68
   1801c:	streq	r0, [fp, #-144]	; 0xffffff70
   18020:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18024:	cmp	r0, r9
   18028:	bge	18038 <argp_parse@@Base+0x6c0>
   1802c:	mov	r0, #1
   18030:	str	r0, [fp, #-160]	; 0xffffff60
   18034:	b	1804c <argp_parse@@Base+0x6d4>
   18038:	rsb	r1, r9, #1
   1803c:	add	r0, r1, r0
   18040:	ldr	r1, [r4, #-12]
   18044:	add	r0, r0, r1
   18048:	str	r0, [r4, #-12]
   1804c:	mov	r0, #0
   18050:	cmp	r0, #0
   18054:	beq	17df0 <argp_parse@@Base+0x478>
   18058:	b	1817c <argp_parse@@Base+0x804>
   1805c:	ldr	r0, [fp, #-200]	; 0xffffff38
   18060:	cmn	r0, #1
   18064:	beq	180d4 <argp_parse@@Base+0x75c>
   18068:	b	1857c <argp_parse@@Base+0xc04>
   1806c:	cmp	r8, r7, asr #24
   18070:	beq	180d4 <argp_parse@@Base+0x75c>
   18074:	ldr	r1, [fp, #-172]	; 0xffffff54
   18078:	asr	r0, r7, #24
   1807c:	sub	r0, r0, #1
   18080:	add	r0, r0, r0, lsl #3
   18084:	ldr	r3, [r1, r0, lsl #2]
   18088:	cmp	r3, #0
   1808c:	beq	18548 <argp_parse@@Base+0xbd0>
   18090:	add	r4, r1, r0, lsl #2
   18094:	tst	r7, #8388608	; 0x800000
   18098:	mov	r2, sl
   1809c:	ldr	r0, [r4, #32]!
   180a0:	str	r0, [fp, #-120]	; 0xffffff88
   180a4:	ldr	r0, [r4, #-8]
   180a8:	str	r0, [fp, #-128]	; 0xffffff80
   180ac:	ldr	r0, [r4, #-4]
   180b0:	str	r0, [fp, #-124]	; 0xffffff84
   180b4:	ldr	r0, [r4, #-20]	; 0xffffffec
   180b8:	str	r0, [fp, #-136]	; 0xffffff78
   180bc:	bic	r0, r7, #-16777216	; 0xff000000
   180c0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   180c4:	orrne	r0, r0, #-16777216	; 0xff000000
   180c8:	blx	r3
   180cc:	mov	r1, #0
   180d0:	b	18164 <argp_parse@@Base+0x7ec>
   180d4:	ldr	r0, [fp, #-216]	; 0xffffff28
   180d8:	mov	r1, r7
   180dc:	bl	11620 <strchr@plt>
   180e0:	cmp	r0, #0
   180e4:	beq	181a0 <argp_parse@@Base+0x828>
   180e8:	ldr	r1, [fp, #-172]	; 0xffffff54
   180ec:	ldr	r2, [fp, #-168]	; 0xffffff58
   180f0:	cmp	r1, r2
   180f4:	bcs	181a0 <argp_parse@@Base+0x828>
   180f8:	add	r1, r1, #24
   180fc:	ldr	r3, [r1, #-16]
   18100:	cmp	r3, r0
   18104:	bhi	18120 <argp_parse@@Base+0x7a8>
   18108:	add	r3, r1, #36	; 0x24
   1810c:	add	r1, r1, #12
   18110:	cmp	r1, r2
   18114:	mov	r1, r3
   18118:	bcc	180fc <argp_parse@@Base+0x784>
   1811c:	b	181a0 <argp_parse@@Base+0x828>
   18120:	ldr	r3, [r1, #-24]	; 0xffffffe8
   18124:	cmp	r3, #0
   18128:	beq	181a0 <argp_parse@@Base+0x828>
   1812c:	mov	r4, r1
   18130:	mov	r2, sl
   18134:	ldr	r0, [r4, #8]!
   18138:	str	r0, [fp, #-120]	; 0xffffff88
   1813c:	ldr	r0, [r1]
   18140:	str	r0, [fp, #-128]	; 0xffffff80
   18144:	ldr	r0, [r1, #4]
   18148:	str	r0, [fp, #-124]	; 0xffffff84
   1814c:	ldr	r0, [r1, #-12]
   18150:	str	r0, [fp, #-136]	; 0xffffff78
   18154:	mov	r0, r7
   18158:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1815c:	blx	r3
   18160:	mov	r1, #1
   18164:	ldr	r2, [fp, #-120]	; 0xffffff88
   18168:	cmp	r0, #7
   1816c:	str	r2, [r4]
   18170:	beq	18198 <argp_parse@@Base+0x820>
   18174:	cmp	r0, #0
   18178:	beq	17df0 <argp_parse@@Base+0x478>
   1817c:	mov	r1, #0
   18180:	b	181d4 <argp_parse@@Base+0x85c>
   18184:	mov	r1, r5
   18188:	b	17bc4 <argp_parse@@Base+0x24c>
   1818c:	mov	r7, #1
   18190:	mov	r0, #1
   18194:	b	181c0 <argp_parse@@Base+0x848>
   18198:	cmp	r1, #0
   1819c:	beq	18548 <argp_parse@@Base+0xbd0>
   181a0:	movw	r1, #48742	; 0xbe66
   181a4:	movw	r3, #48480	; 0xbd60
   181a8:	mov	r0, sl
   181ac:	mov	r2, r7
   181b0:	movt	r1, #1
   181b4:	movt	r3, #1
   181b8:	bl	15a28 <argp_error@@Base>
   181bc:	mov	r0, #0
   181c0:	add	r1, r7, #1
   181c4:	clz	r1, r1
   181c8:	lsr	r1, r1, #5
   181cc:	orr	r1, r1, r0
   181d0:	mov	r0, #7
   181d4:	subs	r7, r0, #7
   181d8:	movne	r7, r0
   181dc:	cmp	r1, #0
   181e0:	moveq	r7, r0
   181e4:	cmp	r7, #0
   181e8:	beq	18288 <argp_parse@@Base+0x910>
   181ec:	cmp	r7, #0
   181f0:	beq	1841c <argp_parse@@Base+0xaa4>
   181f4:	cmp	r7, #7
   181f8:	bne	18210 <argp_parse@@Base+0x898>
   181fc:	ldr	r1, [fp, #-112]	; 0xffffff90
   18200:	mov	r0, sl
   18204:	mov	r2, #260	; 0x104
   18208:	bl	1596c <argp_state_help@@Base>
   1820c:	mov	r7, #7
   18210:	ldr	r4, [fp, #-172]	; 0xffffff54
   18214:	ldr	r0, [fp, #-168]	; 0xffffff58
   18218:	cmp	r4, r0
   1821c:	bcs	184bc <argp_parse@@Base+0xb44>
   18220:	movw	r1, #6
   18224:	movt	r1, #256	; 0x100
   18228:	sub	r6, r1, #1
   1822c:	ldr	r3, [r4]
   18230:	cmp	r3, #0
   18234:	beq	18274 <argp_parse@@Base+0x8fc>
   18238:	ldr	r0, [r4, #32]
   1823c:	mov	r1, #0
   18240:	mov	r2, sl
   18244:	str	r0, [fp, #-120]	; 0xffffff88
   18248:	ldr	r0, [r4, #24]
   1824c:	str	r0, [fp, #-128]	; 0xffffff80
   18250:	ldr	r0, [r4, #28]
   18254:	str	r0, [fp, #-124]	; 0xffffff84
   18258:	ldr	r0, [r4, #12]
   1825c:	str	r0, [fp, #-136]	; 0xffffff78
   18260:	mov	r0, r6
   18264:	blx	r3
   18268:	ldr	r0, [fp, #-120]	; 0xffffff88
   1826c:	str	r0, [r4, #32]
   18270:	ldr	r0, [fp, #-168]	; 0xffffff58
   18274:	add	r4, r4, #36	; 0x24
   18278:	cmp	r4, r0
   1827c:	bcc	1822c <argp_parse@@Base+0x8b4>
   18280:	ldr	r4, [fp, #-172]	; 0xffffff54
   18284:	b	184bc <argp_parse@@Base+0xb44>
   18288:	ldr	r1, [fp, #-152]	; 0xffffff68
   1828c:	ldr	r0, [fp, #-144]	; 0xffffff70
   18290:	cmp	r0, r1
   18294:	bne	183c0 <argp_parse@@Base+0xa48>
   18298:	ldr	r4, [fp, #-172]	; 0xffffff54
   1829c:	ldr	r1, [fp, #-168]	; 0xffffff58
   182a0:	mov	r0, #0
   182a4:	cmp	r4, r1
   182a8:	bcs	18334 <argp_parse@@Base+0x9bc>
   182ac:	movw	r0, #6
   182b0:	mov	r7, #0
   182b4:	movt	r0, #256	; 0x100
   182b8:	sub	r6, r0, #4
   182bc:	mov	r0, #0
   182c0:	cmp	r0, #7
   182c4:	cmpne	r0, #0
   182c8:	bne	18330 <argp_parse@@Base+0x9b8>
   182cc:	ldr	r2, [r4, #12]
   182d0:	cmp	r2, #0
   182d4:	bne	18324 <argp_parse@@Base+0x9ac>
   182d8:	ldr	r3, [r4]
   182dc:	cmp	r3, #0
   182e0:	beq	18320 <argp_parse@@Base+0x9a8>
   182e4:	ldr	r0, [r4, #32]
   182e8:	mov	r1, #0
   182ec:	mov	r2, sl
   182f0:	str	r0, [fp, #-120]	; 0xffffff88
   182f4:	ldr	r0, [r4, #24]
   182f8:	str	r0, [fp, #-128]	; 0xffffff80
   182fc:	ldr	r0, [r4, #28]
   18300:	str	r7, [fp, #-136]	; 0xffffff78
   18304:	str	r0, [fp, #-124]	; 0xffffff84
   18308:	mov	r0, r6
   1830c:	blx	r3
   18310:	ldr	r1, [fp, #-120]	; 0xffffff88
   18314:	str	r1, [r4, #32]
   18318:	ldr	r1, [fp, #-168]	; 0xffffff58
   1831c:	b	18324 <argp_parse@@Base+0x9ac>
   18320:	mov	r0, #7
   18324:	add	r4, r4, #36	; 0x24
   18328:	cmp	r4, r1
   1832c:	bcc	182c0 <argp_parse@@Base+0x948>
   18330:	ldr	r4, [fp, #-172]	; 0xffffff54
   18334:	sub	r7, r1, #36	; 0x24
   18338:	cmp	r7, r4
   1833c:	bcc	183b4 <argp_parse@@Base+0xa3c>
   18340:	movw	r1, #6
   18344:	movt	r1, #256	; 0x100
   18348:	sub	r6, r1, #5
   1834c:	cmp	r0, #7
   18350:	cmpne	r0, #0
   18354:	bne	18400 <argp_parse@@Base+0xa88>
   18358:	ldr	r3, [r7]
   1835c:	cmp	r3, #0
   18360:	beq	183a4 <argp_parse@@Base+0xa2c>
   18364:	ldr	r0, [r7, #32]
   18368:	mov	r1, #0
   1836c:	mov	r2, sl
   18370:	str	r0, [fp, #-120]	; 0xffffff88
   18374:	ldr	r0, [r7, #24]
   18378:	str	r0, [fp, #-128]	; 0xffffff80
   1837c:	ldr	r0, [r7, #28]
   18380:	str	r0, [fp, #-124]	; 0xffffff84
   18384:	ldr	r0, [r7, #12]
   18388:	str	r0, [fp, #-136]	; 0xffffff78
   1838c:	mov	r0, r6
   18390:	blx	r3
   18394:	ldr	r1, [fp, #-120]	; 0xffffff88
   18398:	str	r1, [r7, #32]
   1839c:	ldr	r4, [fp, #-172]	; 0xffffff54
   183a0:	b	183a8 <argp_parse@@Base+0xa30>
   183a4:	mov	r0, #7
   183a8:	sub	r7, r7, #36	; 0x24
   183ac:	cmp	r7, r4
   183b0:	bcs	1834c <argp_parse@@Base+0x9d4>
   183b4:	subs	r7, r0, #7
   183b8:	movne	r7, r0
   183bc:	b	18404 <argp_parse@@Base+0xa8c>
   183c0:	ldr	r1, [fp, #8]
   183c4:	cmp	r1, #0
   183c8:	beq	183d4 <argp_parse@@Base+0xa5c>
   183cc:	str	r0, [r1]
   183d0:	b	1841c <argp_parse@@Base+0xaa4>
   183d4:	ldrb	r0, [fp, #-140]	; 0xffffff74
   183d8:	tst	r0, #2
   183dc:	bne	181fc <argp_parse@@Base+0x884>
   183e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   183e4:	cmp	r0, #0
   183e8:	beq	181fc <argp_parse@@Base+0x884>
   183ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   183f0:	movw	r1, #48763	; 0xbe7b
   183f4:	movt	r1, #1
   183f8:	bl	1162c <fprintf@plt>
   183fc:	b	181fc <argp_parse@@Base+0x884>
   18400:	mov	r7, r0
   18404:	ldr	r1, [fp, #8]
   18408:	cmp	r1, #0
   1840c:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18410:	strne	r0, [r1]
   18414:	cmp	r7, #0
   18418:	bne	181f4 <argp_parse@@Base+0x87c>
   1841c:	ldr	r0, [fp, #-168]	; 0xffffff58
   18420:	ldr	r4, [fp, #-172]	; 0xffffff54
   18424:	mov	r7, #0
   18428:	sub	r5, r0, #36	; 0x24
   1842c:	cmp	r5, r4
   18430:	bcc	184bc <argp_parse@@Base+0xb44>
   18434:	movw	r1, #6
   18438:	mov	r0, #0
   1843c:	movt	r1, #256	; 0x100
   18440:	sub	r6, r1, #2
   18444:	cmp	r0, #7
   18448:	cmpne	r0, #0
   1844c:	bne	184b8 <argp_parse@@Base+0xb40>
   18450:	ldr	r3, [r5]
   18454:	cmp	r3, #0
   18458:	beq	1849c <argp_parse@@Base+0xb24>
   1845c:	ldr	r0, [r5, #32]
   18460:	mov	r1, #0
   18464:	mov	r2, sl
   18468:	str	r0, [fp, #-120]	; 0xffffff88
   1846c:	ldr	r0, [r5, #24]
   18470:	str	r0, [fp, #-128]	; 0xffffff80
   18474:	ldr	r0, [r5, #28]
   18478:	str	r0, [fp, #-124]	; 0xffffff84
   1847c:	ldr	r0, [r5, #12]
   18480:	str	r0, [fp, #-136]	; 0xffffff78
   18484:	mov	r0, r6
   18488:	blx	r3
   1848c:	ldr	r1, [fp, #-120]	; 0xffffff88
   18490:	str	r1, [r5, #32]
   18494:	ldr	r4, [fp, #-172]	; 0xffffff54
   18498:	b	184a0 <argp_parse@@Base+0xb28>
   1849c:	mov	r0, #7
   184a0:	sub	r5, r5, #36	; 0x24
   184a4:	cmp	r5, r4
   184a8:	bcs	18444 <argp_parse@@Base+0xacc>
   184ac:	subs	r7, r0, #7
   184b0:	movne	r7, r0
   184b4:	b	184bc <argp_parse@@Base+0xb44>
   184b8:	mov	r7, r0
   184bc:	ldr	r0, [fp, #-168]	; 0xffffff58
   184c0:	sub	r6, r0, #36	; 0x24
   184c4:	cmp	r6, r4
   184c8:	bcc	1852c <argp_parse@@Base+0xbb4>
   184cc:	movw	r0, #6
   184d0:	movt	r0, #256	; 0x100
   184d4:	add	r5, r0, #1
   184d8:	ldr	r3, [r6]
   184dc:	cmp	r3, #0
   184e0:	beq	18520 <argp_parse@@Base+0xba8>
   184e4:	ldr	r0, [r6, #32]
   184e8:	mov	r1, #0
   184ec:	mov	r2, sl
   184f0:	str	r0, [fp, #-120]	; 0xffffff88
   184f4:	ldr	r0, [r6, #24]
   184f8:	str	r0, [fp, #-128]	; 0xffffff80
   184fc:	ldr	r0, [r6, #28]
   18500:	str	r0, [fp, #-124]	; 0xffffff84
   18504:	ldr	r0, [r6, #12]
   18508:	str	r0, [fp, #-136]	; 0xffffff78
   1850c:	mov	r0, r5
   18510:	blx	r3
   18514:	ldr	r0, [fp, #-120]	; 0xffffff88
   18518:	str	r0, [r6, #32]
   1851c:	ldr	r4, [fp, #-172]	; 0xffffff54
   18520:	sub	r6, r6, #36	; 0x24
   18524:	cmp	r6, r4
   18528:	bcs	184d8 <argp_parse@@Base+0xb60>
   1852c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18530:	bl	18c48 <argp_parse@@Base+0x12d0>
   18534:	cmp	r7, #7
   18538:	movweq	r7, #22
   1853c:	mov	r0, r7
   18540:	sub	sp, fp, #28
   18544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18548:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1854c:	ldr	r1, [r0, #12]
   18550:	cmp	r1, r7
   18554:	beq	18584 <argp_parse@@Base+0xc0c>
   18558:	ldr	r1, [r0]
   1855c:	cmp	r1, #0
   18560:	beq	18584 <argp_parse@@Base+0xc0c>
   18564:	add	r1, r0, #16
   18568:	ldr	r0, [r0, #28]
   1856c:	cmp	r0, r7
   18570:	mov	r0, r1
   18574:	bne	18558 <argp_parse@@Base+0xbe0>
   18578:	b	18588 <argp_parse@@Base+0xc10>
   1857c:	mov	r1, #0
   18580:	b	181d0 <argp_parse@@Base+0x858>
   18584:	mov	r1, r0
   18588:	ldr	r0, [r1]
   1858c:	movw	r2, #48759	; 0xbe77
   18590:	movw	r1, #48750	; 0xbe6e
   18594:	movw	r3, #48480	; 0xbd60
   18598:	movt	r2, #1
   1859c:	movt	r1, #1
   185a0:	movt	r3, #1
   185a4:	cmp	r0, #0
   185a8:	movne	r2, r0
   185ac:	mov	r0, sl
   185b0:	b	181b8 <argp_parse@@Base+0x840>
   185b4:	mov	ip, r0
   185b8:	mov	r0, #0
   185bc:	cmp	r1, #0
   185c0:	beq	185f0 <argp_parse@@Base+0xc78>
   185c4:	ldr	r3, [r1, #52]	; 0x34
   185c8:	ldr	r1, [r3, #48]	; 0x30
   185cc:	ldr	r3, [r3, #52]	; 0x34
   185d0:	b	185d8 <argp_parse@@Base+0xc60>
   185d4:	add	r1, r1, #36	; 0x24
   185d8:	cmp	r1, r3
   185dc:	bxcs	lr
   185e0:	ldr	r2, [r1, #4]
   185e4:	cmp	r2, ip
   185e8:	bne	185d4 <argp_parse@@Base+0xc5c>
   185ec:	ldr	r0, [r1, #24]
   185f0:	bx	lr
   185f4:	push	{r4, r5, r6, sl, fp, lr}
   185f8:	add	fp, sp, #16
   185fc:	mov	r5, r2
   18600:	mov	r6, r1
   18604:	mov	r4, #7
   18608:	cmn	r0, #3
   1860c:	bgt	18630 <argp_parse@@Base+0xcb8>
   18610:	cmn	r0, #4
   18614:	beq	1865c <argp_parse@@Base+0xce4>
   18618:	cmn	r0, #3
   1861c:	bne	186b4 <argp_parse@@Base+0xd3c>
   18620:	ldr	r1, [r5, #48]	; 0x30
   18624:	mov	r0, r5
   18628:	movw	r2, #513	; 0x201
   1862c:	b	1864c <argp_parse@@Base+0xcd4>
   18630:	cmn	r0, #2
   18634:	beq	186bc <argp_parse@@Base+0xd44>
   18638:	cmp	r0, #63	; 0x3f
   1863c:	bne	186b4 <argp_parse@@Base+0xd3c>
   18640:	ldr	r1, [r5, #48]	; 0x30
   18644:	mov	r0, r5
   18648:	movw	r2, #634	; 0x27a
   1864c:	bl	1596c <argp_state_help@@Base>
   18650:	mov	r4, #0
   18654:	mov	r0, r4
   18658:	pop	{r4, r5, r6, sl, fp, pc}
   1865c:	movw	r0, #48677	; 0xbe25
   18660:	cmp	r6, #0
   18664:	mov	r1, #0
   18668:	mov	r2, #10
   1866c:	mov	r4, #0
   18670:	movt	r0, #1
   18674:	movne	r0, r6
   18678:	bl	1144c <strtol@plt>
   1867c:	movw	r5, #54524	; 0xd4fc
   18680:	movt	r5, #2
   18684:	str	r0, [r5]
   18688:	ldr	r0, [r5]
   1868c:	subs	r0, r0, #1
   18690:	str	r0, [r5]
   18694:	blt	186b4 <argp_parse@@Base+0xd3c>
   18698:	mov	r0, #1
   1869c:	bl	114f4 <sleep@plt>
   186a0:	ldr	r0, [r5]
   186a4:	sub	r1, r0, #1
   186a8:	cmp	r0, #0
   186ac:	str	r1, [r5]
   186b0:	bgt	18698 <argp_parse@@Base+0xd20>
   186b4:	mov	r0, r4
   186b8:	pop	{r4, r5, r6, sl, fp, pc}
   186bc:	movw	r0, #54332	; 0xd43c
   186c0:	movt	r0, #2
   186c4:	str	r6, [r0]
   186c8:	mov	r0, r6
   186cc:	bl	18bc4 <argp_parse@@Base+0x124c>
   186d0:	movw	r1, #54328	; 0xd438
   186d4:	str	r0, [r5, #40]	; 0x28
   186d8:	mov	r4, #0
   186dc:	movt	r1, #2
   186e0:	str	r0, [r1]
   186e4:	ldr	r0, [r5, #16]
   186e8:	and	r0, r0, #3
   186ec:	cmp	r0, #1
   186f0:	ldreq	r0, [r5, #8]
   186f4:	streq	r6, [r0]
   186f8:	moveq	r0, r4
   186fc:	popeq	{r4, r5, r6, sl, fp, pc}
   18700:	mov	r0, r4
   18704:	pop	{r4, r5, r6, sl, fp, pc}
   18708:	push	{r4, sl, fp, lr}
   1870c:	add	fp, sp, #8
   18710:	mov	r1, r0
   18714:	mov	r0, #7
   18718:	cmp	r1, #86	; 0x56
   1871c:	popne	{r4, sl, fp, pc}
   18720:	movw	r0, #54528	; 0xd500
   18724:	mov	r4, r2
   18728:	movt	r0, #2
   1872c:	ldr	r2, [r0]
   18730:	cmp	r2, #0
   18734:	beq	18748 <argp_parse@@Base+0xdd0>
   18738:	ldr	r0, [r4, #48]	; 0x30
   1873c:	mov	r1, r4
   18740:	blx	r2
   18744:	b	18788 <argp_parse@@Base+0xe10>
   18748:	movw	r0, #57272	; 0xdfb8
   1874c:	movt	r0, #2
   18750:	ldr	r2, [r0]
   18754:	cmp	r2, #0
   18758:	beq	18770 <argp_parse@@Base+0xdf8>
   1875c:	ldr	r0, [r4, #48]	; 0x30
   18760:	movw	r1, #46235	; 0xb49b
   18764:	movt	r1, #1
   18768:	bl	1162c <fprintf@plt>
   1876c:	b	18788 <argp_parse@@Base+0xe10>
   18770:	movw	r1, #47571	; 0xb9d3
   18774:	movw	r2, #48704	; 0xbe40
   18778:	mov	r0, r4
   1877c:	movt	r1, #1
   18780:	movt	r2, #1
   18784:	bl	15a28 <argp_error@@Base>
   18788:	ldrb	r1, [r4, #16]
   1878c:	mov	r0, #0
   18790:	tst	r1, #32
   18794:	beq	1879c <argp_parse@@Base+0xe24>
   18798:	pop	{r4, sl, fp, pc}
   1879c:	mov	r0, #0
   187a0:	bl	115fc <exit@plt>
   187a4:	push	{r4, r5, fp, lr}
   187a8:	add	fp, sp, #8
   187ac:	ldr	r2, [r0]
   187b0:	ldr	ip, [r0, #16]
   187b4:	mov	r4, r1
   187b8:	cmp	r2, #0
   187bc:	beq	18828 <argp_parse@@Base+0xeb0>
   187c0:	ldr	r0, [r4, #8]
   187c4:	mov	r3, #0
   187c8:	add	r0, r0, #1
   187cc:	str	r0, [r4, #8]
   187d0:	mov	r0, #0
   187d4:	b	187e0 <argp_parse@@Base+0xe68>
   187d8:	add	r3, r3, #3
   187dc:	add	r0, r0, #1
   187e0:	add	r5, r2, r3, lsl #3
   187e4:	ldr	r1, [r5, #4]
   187e8:	cmp	r1, #0
   187ec:	bne	187d8 <argp_parse@@Base+0xe60>
   187f0:	ldr	r1, [r2, r3, lsl #3]
   187f4:	cmp	r1, #0
   187f8:	bne	187d8 <argp_parse@@Base+0xe60>
   187fc:	ldr	r1, [r5, #16]
   18800:	cmp	r1, #0
   18804:	bne	187d8 <argp_parse@@Base+0xe60>
   18808:	ldr	r1, [r5, #20]
   1880c:	cmp	r1, #0
   18810:	bne	187d8 <argp_parse@@Base+0xe60>
   18814:	ldr	r1, [r4]
   18818:	mov	r2, r4
   1881c:	add	r1, r1, r3
   18820:	str	r1, [r2], #4
   18824:	b	1883c <argp_parse@@Base+0xec4>
   18828:	ldr	r0, [r0, #4]
   1882c:	cmp	r0, #0
   18830:	beq	18848 <argp_parse@@Base+0xed0>
   18834:	add	r2, r4, #8
   18838:	mov	r0, #1
   1883c:	ldr	r1, [r2]
   18840:	add	r0, r1, r0
   18844:	str	r0, [r2]
   18848:	cmp	ip, #0
   1884c:	ldrne	r0, [ip]
   18850:	cmpne	r0, #0
   18854:	beq	1887c <argp_parse@@Base+0xf04>
   18858:	add	r5, ip, #16
   1885c:	mov	r1, r4
   18860:	bl	187a4 <argp_parse@@Base+0xe2c>
   18864:	ldr	r0, [r4, #12]
   18868:	add	r0, r0, #1
   1886c:	str	r0, [r4, #12]
   18870:	ldr	r0, [r5], #16
   18874:	cmp	r0, #0
   18878:	bne	1885c <argp_parse@@Base+0xee4>
   1887c:	pop	{r4, r5, fp, pc}
   18880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18884:	add	fp, sp, #28
   18888:	sub	sp, sp, #28
   1888c:	ldr	r7, [r0]
   18890:	mov	r6, r3
   18894:	mov	r3, r1
   18898:	ldr	r5, [r0, #16]
   1889c:	ldr	r1, [fp, #8]
   188a0:	cmp	r7, #0
   188a4:	beq	18a80 <argp_parse@@Base+0x1108>
   188a8:	str	r0, [sp, #8]
   188ac:	add	r0, sp, #16
   188b0:	add	r8, r1, #4
   188b4:	mov	r9, r7
   188b8:	str	r3, [sp, #12]
   188bc:	stm	r0, {r2, r5, r6}
   188c0:	b	188c8 <argp_parse@@Base+0xf50>
   188c4:	add	r9, r9, #24
   188c8:	ldr	r4, [r9, #4]
   188cc:	cmp	r4, #0
   188d0:	bne	188f8 <argp_parse@@Base+0xf80>
   188d4:	ldr	r0, [r9]
   188d8:	cmp	r0, #0
   188dc:	bne	188f8 <argp_parse@@Base+0xf80>
   188e0:	ldr	r0, [r9, #16]
   188e4:	cmp	r0, #0
   188e8:	bne	188f8 <argp_parse@@Base+0xf80>
   188ec:	ldr	r0, [r9, #20]
   188f0:	cmp	r0, #0
   188f4:	beq	18a68 <argp_parse@@Base+0x10f0>
   188f8:	ldr	r0, [r9, #12]
   188fc:	mov	r5, #0
   18900:	tst	r0, #4
   18904:	moveq	r7, r9
   18908:	ldrb	r1, [r7, #12]
   1890c:	tst	r1, #8
   18910:	bne	188c4 <argp_parse@@Base+0xf4c>
   18914:	sub	r1, r4, #1
   18918:	cmp	r1, #254	; 0xfe
   1891c:	bhi	18998 <argp_parse@@Base+0x1020>
   18920:	ands	r0, r0, #8
   18924:	bne	18998 <argp_parse@@Base+0x1020>
   18928:	bl	115f0 <__ctype_b_loc@plt>
   1892c:	ldr	r0, [r0]
   18930:	add	r0, r0, r4, lsl #1
   18934:	ldrb	r0, [r0, #1]
   18938:	tst	r0, #64	; 0x40
   1893c:	beq	18998 <argp_parse@@Base+0x1020>
   18940:	ldr	r0, [r8]
   18944:	add	r1, r0, #1
   18948:	str	r1, [r8]
   1894c:	strb	r4, [r0]
   18950:	ldr	r0, [r7, #8]
   18954:	cmp	r0, #0
   18958:	beq	18990 <argp_parse@@Base+0x1018>
   1895c:	ldr	r0, [r8]
   18960:	add	r1, r0, #1
   18964:	str	r1, [r8]
   18968:	mov	r1, #58	; 0x3a
   1896c:	strb	r1, [r0]
   18970:	ldrb	r0, [r7, #12]
   18974:	tst	r0, #1
   18978:	beq	18990 <argp_parse@@Base+0x1018>
   1897c:	ldr	r0, [r8]
   18980:	add	r1, r0, #1
   18984:	str	r1, [r8]
   18988:	mov	r1, #58	; 0x3a
   1898c:	strb	r1, [r0]
   18990:	ldr	r0, [r8]
   18994:	strb	r5, [r0]
   18998:	ldr	r5, [r9]
   1899c:	cmp	r5, #0
   189a0:	beq	188c4 <argp_parse@@Base+0xf4c>
   189a4:	ldr	r0, [fp, #8]
   189a8:	ldr	r4, [r0]
   189ac:	ldr	sl, [r4, #8]
   189b0:	ldr	r0, [sl]
   189b4:	cmp	r0, #0
   189b8:	beq	189ec <argp_parse@@Base+0x1074>
   189bc:	mov	r6, sl
   189c0:	mov	r1, r5
   189c4:	bl	11440 <strcmp@plt>
   189c8:	cmp	r0, #0
   189cc:	beq	189e0 <argp_parse@@Base+0x1068>
   189d0:	ldr	r0, [r6, #16]!
   189d4:	cmp	r0, #0
   189d8:	bne	189c0 <argp_parse@@Base+0x1048>
   189dc:	b	189ec <argp_parse@@Base+0x1074>
   189e0:	sub	r0, r6, sl
   189e4:	cmn	r0, #1
   189e8:	bgt	188c4 <argp_parse@@Base+0xf4c>
   189ec:	ldr	r6, [fp, #8]
   189f0:	ldr	r0, [r6, #8]
   189f4:	str	r5, [r0]
   189f8:	ldr	r1, [r7, #8]
   189fc:	cmp	r1, #0
   18a00:	beq	18a18 <argp_parse@@Base+0x10a0>
   18a04:	ldrb	r1, [r7, #12]
   18a08:	tst	r1, #1
   18a0c:	mov	r1, #2
   18a10:	movweq	r1, #1
   18a14:	b	18a1c <argp_parse@@Base+0x10a4>
   18a18:	mov	r1, #0
   18a1c:	mov	r5, #0
   18a20:	stmib	r0, {r1, r5}
   18a24:	ldr	r1, [r9, #4]
   18a28:	ldr	r3, [sp, #24]
   18a2c:	ldr	r2, [r4, #48]	; 0x30
   18a30:	cmp	r1, #0
   18a34:	sub	r2, r3, r2
   18a38:	mov	r3, #956301312	; 0x39000000
   18a3c:	ldreq	r1, [r7, #4]
   18a40:	lsr	r2, r2, #2
   18a44:	mul	r2, r2, r3
   18a48:	add	r2, r2, #16777216	; 0x1000000
   18a4c:	bic	r1, r1, #-16777216	; 0xff000000
   18a50:	orr	r1, r2, r1
   18a54:	str	r1, [r0, #12]
   18a58:	add	r1, r0, #16
   18a5c:	str	r1, [r6, #8]
   18a60:	str	r5, [r0, #16]
   18a64:	b	188c4 <argp_parse@@Base+0xf4c>
   18a68:	ldr	r0, [sp, #8]
   18a6c:	add	r6, sp, #16
   18a70:	ldr	r7, [r0, #4]
   18a74:	ldm	r6, {r2, r5, r6}
   18a78:	ldr	r3, [sp, #12]
   18a7c:	b	18a94 <argp_parse@@Base+0x111c>
   18a80:	ldr	r7, [r0, #4]
   18a84:	cmp	r7, #0
   18a88:	beq	18b44 <argp_parse@@Base+0x11cc>
   18a8c:	ldr	r1, [fp, #8]
   18a90:	add	r8, r1, #4
   18a94:	str	r0, [r6, #4]
   18a98:	str	r7, [r6]
   18a9c:	mov	r0, #0
   18aa0:	cmp	r5, #0
   18aa4:	ldr	r1, [r8]
   18aa8:	str	r0, [r6, #12]
   18aac:	str	r3, [r6, #16]
   18ab0:	str	r2, [r6, #20]
   18ab4:	str	r0, [r6, #24]
   18ab8:	str	r0, [r6, #32]
   18abc:	str	r0, [r6, #28]
   18ac0:	str	r1, [r6, #8]
   18ac4:	beq	18af4 <argp_parse@@Base+0x117c>
   18ac8:	ldr	r1, [r5, r0, lsl #2]
   18acc:	add	r0, r0, #4
   18ad0:	cmp	r1, #0
   18ad4:	bne	18ac8 <argp_parse@@Base+0x1150>
   18ad8:	ldr	r1, [fp, #8]
   18adc:	mov	r2, r1
   18ae0:	ldr	r1, [r1, #12]
   18ae4:	add	r0, r1, r0
   18ae8:	str	r1, [r6, #28]
   18aec:	sub	r0, r0, #4
   18af0:	str	r0, [r2, #12]
   18af4:	add	r3, r6, #36	; 0x24
   18af8:	cmp	r5, #0
   18afc:	ldrne	r0, [r5]
   18b00:	cmpne	r0, #0
   18b04:	beq	18b38 <argp_parse@@Base+0x11c0>
   18b08:	ldr	r7, [fp, #8]
   18b0c:	add	r4, r5, #16
   18b10:	mov	r5, #0
   18b14:	mov	r1, r6
   18b18:	mov	r2, r5
   18b1c:	str	r7, [sp]
   18b20:	bl	18880 <argp_parse@@Base+0xf08>
   18b24:	mov	r3, r0
   18b28:	ldr	r0, [r4, r5, lsl #4]
   18b2c:	add	r5, r5, #1
   18b30:	cmp	r0, #0
   18b34:	bne	18b14 <argp_parse@@Base+0x119c>
   18b38:	mov	r0, r3
   18b3c:	sub	sp, fp, #28
   18b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b44:	mov	r3, r6
   18b48:	mov	r6, #0
   18b4c:	b	18af8 <argp_parse@@Base+0x1180>
   18b50:	movw	r2, #54532	; 0xd504
   18b54:	movt	r2, #2
   18b58:	str	r0, [r2]
   18b5c:	movw	r0, #54528	; 0xd500
   18b60:	movw	r2, #35712	; 0x8b80
   18b64:	movt	r0, #2
   18b68:	movt	r2, #1
   18b6c:	str	r2, [r0]
   18b70:	movw	r0, #54536	; 0xd508
   18b74:	movt	r0, #2
   18b78:	str	r1, [r0]
   18b7c:	bx	lr
   18b80:	push	{fp, lr}
   18b84:	mov	fp, sp
   18b88:	sub	sp, sp, #8
   18b8c:	movw	r2, #54536	; 0xd508
   18b90:	movw	r1, #54532	; 0xd504
   18b94:	movw	r3, #48801	; 0xbea1
   18b98:	movt	r2, #2
   18b9c:	movt	r1, #2
   18ba0:	movt	r3, #1
   18ba4:	ldr	r2, [r2]
   18ba8:	ldr	r1, [r1]
   18bac:	str	r2, [sp]
   18bb0:	movw	r2, #48787	; 0xbe93
   18bb4:	movt	r2, #1
   18bb8:	bl	19098 <argp_parse@@Base+0x1720>
   18bbc:	mov	sp, fp
   18bc0:	pop	{fp, pc}
   18bc4:	sub	r0, r0, #1
   18bc8:	ldrb	r3, [r0, #1]!
   18bcc:	cmp	r3, #47	; 0x2f
   18bd0:	beq	18bc8 <argp_parse@@Base+0x1250>
   18bd4:	mov	r2, #0
   18bd8:	mov	r1, r0
   18bdc:	b	18bf8 <argp_parse@@Base+0x1280>
   18be0:	cmp	r3, #0
   18be4:	bxeq	lr
   18be8:	tst	r2, #1
   18bec:	mov	r2, #0
   18bf0:	movne	r0, r1
   18bf4:	ldrb	r3, [r1, #1]!
   18bf8:	uxtb	r3, r3
   18bfc:	cmp	r3, #47	; 0x2f
   18c00:	bne	18be0 <argp_parse@@Base+0x1268>
   18c04:	ldrb	r3, [r1, #1]!
   18c08:	mov	r2, #1
   18c0c:	b	18bf8 <argp_parse@@Base+0x1280>
   18c10:	push	{r4, sl, fp, lr}
   18c14:	add	fp, sp, #8
   18c18:	mov	r4, r0
   18c1c:	bl	11614 <strlen@plt>
   18c20:	mov	r1, r0
   18c24:	sub	r2, r4, #1
   18c28:	mov	r0, r1
   18c2c:	cmp	r1, #2
   18c30:	popcc	{r4, sl, fp, pc}
   18c34:	ldrb	r3, [r2, r0]
   18c38:	sub	r1, r0, #1
   18c3c:	cmp	r3, #47	; 0x2f
   18c40:	beq	18c28 <argp_parse@@Base+0x12b0>
   18c44:	pop	{r4, sl, fp, pc}
   18c48:	push	{r4, r5, r6, sl, fp, lr}
   18c4c:	add	fp, sp, #16
   18c50:	mov	r4, r0
   18c54:	bl	11638 <__errno_location@plt>
   18c58:	ldr	r6, [r0]
   18c5c:	mov	r5, r0
   18c60:	mov	r0, r4
   18c64:	bl	114a0 <free@plt>
   18c68:	str	r6, [r5]
   18c6c:	pop	{r4, r5, r6, sl, fp, pc}
   18c70:	push	{fp, lr}
   18c74:	mov	fp, sp
   18c78:	sub	sp, sp, #16
   18c7c:	mov	ip, #0
   18c80:	str	ip, [sp, #8]
   18c84:	str	ip, [sp, #4]
   18c88:	ldr	ip, [fp, #8]
   18c8c:	str	ip, [sp]
   18c90:	bl	1b0ec <argp_parse@@Base+0x3774>
   18c94:	mov	sp, fp
   18c98:	pop	{fp, pc}
   18c9c:	push	{fp, lr}
   18ca0:	mov	fp, sp
   18ca4:	sub	sp, sp, #16
   18ca8:	mov	ip, #0
   18cac:	str	ip, [sp, #12]
   18cb0:	str	ip, [sp, #4]
   18cb4:	ldr	ip, [fp, #12]
   18cb8:	str	ip, [sp, #8]
   18cbc:	ldr	ip, [fp, #8]
   18cc0:	str	ip, [sp]
   18cc4:	bl	1a1dc <argp_parse@@Base+0x2864>
   18cc8:	mov	sp, fp
   18ccc:	pop	{fp, pc}
   18cd0:	push	{fp, lr}
   18cd4:	mov	fp, sp
   18cd8:	sub	sp, sp, #16
   18cdc:	mov	ip, #0
   18ce0:	str	ip, [sp, #8]
   18ce4:	mov	ip, #1
   18ce8:	str	ip, [sp, #4]
   18cec:	ldr	ip, [fp, #8]
   18cf0:	str	ip, [sp]
   18cf4:	bl	1b0ec <argp_parse@@Base+0x3774>
   18cf8:	mov	sp, fp
   18cfc:	pop	{fp, pc}
   18d00:	push	{fp, lr}
   18d04:	mov	fp, sp
   18d08:	sub	sp, sp, #16
   18d0c:	mov	ip, #0
   18d10:	str	ip, [sp, #12]
   18d14:	mov	ip, #1
   18d18:	str	ip, [sp, #4]
   18d1c:	ldr	ip, [fp, #12]
   18d20:	str	ip, [sp, #8]
   18d24:	ldr	ip, [fp, #8]
   18d28:	str	ip, [sp]
   18d2c:	bl	1a1dc <argp_parse@@Base+0x2864>
   18d30:	mov	sp, fp
   18d34:	pop	{fp, pc}
   18d38:	sub	sp, sp, #8
   18d3c:	push	{fp, lr}
   18d40:	mov	fp, sp
   18d44:	sub	sp, sp, #8
   18d48:	str	r2, [fp, #8]
   18d4c:	add	r2, fp, #8
   18d50:	str	r3, [fp, #12]
   18d54:	orr	r2, r2, #4
   18d58:	str	r2, [sp, #4]
   18d5c:	ldr	r2, [fp, #8]
   18d60:	bl	11554 <ioctl@plt>
   18d64:	mov	sp, fp
   18d68:	pop	{fp, lr}
   18d6c:	add	sp, sp, #8
   18d70:	bx	lr
   18d74:	push	{r4, r5, fp, lr}
   18d78:	add	fp, sp, #8
   18d7c:	cmp	r0, #0
   18d80:	beq	18e14 <argp_parse@@Base+0x149c>
   18d84:	mov	r1, #47	; 0x2f
   18d88:	mov	r4, r0
   18d8c:	bl	116e0 <strrchr@plt>
   18d90:	cmp	r0, #0
   18d94:	mov	r5, r4
   18d98:	addne	r5, r0, #1
   18d9c:	sub	r0, r5, r4
   18da0:	cmp	r0, #7
   18da4:	blt	18df8 <argp_parse@@Base+0x1480>
   18da8:	movw	r1, #48870	; 0xbee6
   18dac:	sub	r0, r5, #7
   18db0:	mov	r2, #7
   18db4:	movt	r1, #1
   18db8:	bl	11764 <strncmp@plt>
   18dbc:	cmp	r0, #0
   18dc0:	bne	18df8 <argp_parse@@Base+0x1480>
   18dc4:	movw	r1, #48878	; 0xbeee
   18dc8:	mov	r0, r5
   18dcc:	mov	r2, #3
   18dd0:	movt	r1, #1
   18dd4:	bl	11764 <strncmp@plt>
   18dd8:	cmp	r0, #0
   18ddc:	beq	18de8 <argp_parse@@Base+0x1470>
   18de0:	mov	r4, r5
   18de4:	b	18df8 <argp_parse@@Base+0x1480>
   18de8:	movw	r0, #54328	; 0xd438
   18dec:	add	r4, r5, #3
   18df0:	movt	r0, #2
   18df4:	str	r4, [r0]
   18df8:	movw	r0, #54332	; 0xd43c
   18dfc:	movt	r0, #2
   18e00:	str	r4, [r0]
   18e04:	movw	r0, #54540	; 0xd50c
   18e08:	movt	r0, #2
   18e0c:	str	r4, [r0]
   18e10:	pop	{r4, r5, fp, pc}
   18e14:	movw	r0, #54336	; 0xd440
   18e18:	mov	r1, #55	; 0x37
   18e1c:	mov	r2, #1
   18e20:	movt	r0, #2
   18e24:	ldr	r3, [r0]
   18e28:	movw	r0, #48814	; 0xbeae
   18e2c:	movt	r0, #1
   18e30:	bl	11548 <fwrite@plt>
   18e34:	bl	11770 <abort@plt>
   18e38:	push	{r4, r5, r6, r7, fp, lr}
   18e3c:	add	fp, sp, #16
   18e40:	sub	sp, sp, #32
   18e44:	ldr	r7, [fp, #12]
   18e48:	ldr	r6, [fp, #8]
   18e4c:	mov	r4, r2
   18e50:	mov	r5, r0
   18e54:	cmp	r1, #0
   18e58:	beq	18e78 <argp_parse@@Base+0x1500>
   18e5c:	mov	r2, r1
   18e60:	movw	r1, #48882	; 0xbef2
   18e64:	str	r3, [sp]
   18e68:	mov	r0, r5
   18e6c:	mov	r3, r4
   18e70:	movt	r1, #1
   18e74:	b	18e88 <argp_parse@@Base+0x1510>
   18e78:	movw	r1, #48894	; 0xbefe
   18e7c:	mov	r0, r5
   18e80:	mov	r2, r4
   18e84:	movt	r1, #1
   18e88:	bl	1162c <fprintf@plt>
   18e8c:	movw	r1, #49658	; 0xc1fa
   18e90:	movw	r2, #48901	; 0xbf05
   18e94:	mov	r0, r5
   18e98:	movw	r3, #2022	; 0x7e6
   18e9c:	movt	r1, #1
   18ea0:	movt	r2, #1
   18ea4:	bl	1162c <fprintf@plt>
   18ea8:	mov	r0, #10
   18eac:	mov	r1, r5
   18eb0:	bl	116f8 <fputc@plt>
   18eb4:	movw	r1, #48905	; 0xbf09
   18eb8:	movw	r2, #49076	; 0xbfb4
   18ebc:	mov	r0, r5
   18ec0:	movt	r1, #1
   18ec4:	movt	r2, #1
   18ec8:	bl	1162c <fprintf@plt>
   18ecc:	mov	r0, #10
   18ed0:	mov	r1, r5
   18ed4:	bl	116f8 <fputc@plt>
   18ed8:	cmp	r7, #9
   18edc:	bhi	18f18 <argp_parse@@Base+0x15a0>
   18ee0:	add	r0, pc, #0
   18ee4:	ldr	pc, [r0, r7, lsl #2]
   18ee8:	andeq	r8, r1, r0, lsl pc
   18eec:	andeq	r8, r1, ip, asr #30
   18ef0:	andeq	r8, r1, r8, ror #30
   18ef4:	andeq	r8, r1, r4, lsl #31
   18ef8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   18efc:			; <UNDEFINED> instruction: 0x00018fb8
   18f00:	ldrdeq	r8, [r1], -r4
   18f04:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18f08:	andeq	r9, r1, r8, asr r0
   18f0c:	andeq	r9, r1, r4, lsr #32
   18f10:	sub	sp, fp, #16
   18f14:	pop	{r4, r5, r6, r7, fp, pc}
   18f18:	add	r7, r6, #8
   18f1c:	ldm	r6, {r2, r3}
   18f20:	add	lr, r6, #20
   18f24:	ldm	r7, {r0, r1, r7}
   18f28:	ldm	lr, {r4, ip, lr}
   18f2c:	ldr	r6, [r6, #32]
   18f30:	stm	sp, {r0, r1, r7}
   18f34:	movw	r1, #49429	; 0xc115
   18f38:	add	r0, sp, #12
   18f3c:	stm	r0, {r4, ip, lr}
   18f40:	str	r6, [sp, #24]
   18f44:	movt	r1, #1
   18f48:	b	19088 <argp_parse@@Base+0x1710>
   18f4c:	ldr	r2, [r6]
   18f50:	movw	r1, #49110	; 0xbfd6
   18f54:	mov	r0, r5
   18f58:	movt	r1, #1
   18f5c:	sub	sp, fp, #16
   18f60:	pop	{r4, r5, r6, r7, fp, lr}
   18f64:	b	1162c <fprintf@plt>
   18f68:	ldm	r6, {r2, r3}
   18f6c:	movw	r1, #49126	; 0xbfe6
   18f70:	mov	r0, r5
   18f74:	movt	r1, #1
   18f78:	sub	sp, fp, #16
   18f7c:	pop	{r4, r5, r6, r7, fp, lr}
   18f80:	b	1162c <fprintf@plt>
   18f84:	ldm	r6, {r2, r3}
   18f88:	ldr	r0, [r6, #8]
   18f8c:	movw	r1, #49149	; 0xbffd
   18f90:	movt	r1, #1
   18f94:	str	r0, [sp]
   18f98:	b	19088 <argp_parse@@Base+0x1710>
   18f9c:	ldm	r6, {r2, r3}
   18fa0:	ldr	r0, [r6, #8]
   18fa4:	ldr	r1, [r6, #12]
   18fa8:	stm	sp, {r0, r1}
   18fac:	movw	r1, #49177	; 0xc019
   18fb0:	movt	r1, #1
   18fb4:	b	19088 <argp_parse@@Base+0x1710>
   18fb8:	add	r7, r6, #8
   18fbc:	ldm	r6, {r2, r3}
   18fc0:	ldm	r7, {r0, r1, r7}
   18fc4:	stm	sp, {r0, r1, r7}
   18fc8:	movw	r1, #49209	; 0xc039
   18fcc:	movt	r1, #1
   18fd0:	b	19088 <argp_parse@@Base+0x1710>
   18fd4:	add	r7, r6, #8
   18fd8:	ldm	r6, {r2, r3}
   18fdc:	ldm	r7, {r0, r1, r7}
   18fe0:	ldr	r6, [r6, #20]
   18fe4:	stm	sp, {r0, r1, r7}
   18fe8:	movw	r1, #49245	; 0xc05d
   18fec:	str	r6, [sp, #12]
   18ff0:	movt	r1, #1
   18ff4:	b	19088 <argp_parse@@Base+0x1710>
   18ff8:	add	r7, r6, #8
   18ffc:	ldm	r6, {r2, r3}
   19000:	ldm	r7, {r0, r1, r7}
   19004:	ldr	r4, [r6, #20]
   19008:	ldr	r6, [r6, #24]
   1900c:	stm	sp, {r0, r1, r7}
   19010:	movw	r1, #49285	; 0xc085
   19014:	str	r4, [sp, #12]
   19018:	str	r6, [sp, #16]
   1901c:	movt	r1, #1
   19020:	b	19088 <argp_parse@@Base+0x1710>
   19024:	add	r7, r6, #8
   19028:	ldm	r6, {r2, r3}
   1902c:	add	lr, r6, #20
   19030:	ldm	r7, {r0, r1, r7}
   19034:	ldm	lr, {r4, ip, lr}
   19038:	ldr	r6, [r6, #32]
   1903c:	stm	sp, {r0, r1, r7}
   19040:	movw	r1, #49377	; 0xc0e1
   19044:	add	r0, sp, #12
   19048:	stm	r0, {r4, ip, lr}
   1904c:	str	r6, [sp, #24]
   19050:	movt	r1, #1
   19054:	b	19088 <argp_parse@@Base+0x1710>
   19058:	add	r7, r6, #8
   1905c:	ldm	r6, {r2, r3}
   19060:	ldm	r7, {r0, r1, r7}
   19064:	ldr	r4, [r6, #20]
   19068:	ldr	ip, [r6, #24]
   1906c:	ldr	r6, [r6, #28]
   19070:	stm	sp, {r0, r1, r7}
   19074:	movw	r1, #49329	; 0xc0b1
   19078:	str	r4, [sp, #12]
   1907c:	str	ip, [sp, #16]
   19080:	str	r6, [sp, #20]
   19084:	movt	r1, #1
   19088:	mov	r0, r5
   1908c:	bl	1162c <fprintf@plt>
   19090:	sub	sp, fp, #16
   19094:	pop	{r4, r5, r6, r7, fp, pc}
   19098:	push	{r4, sl, fp, lr}
   1909c:	add	fp, sp, #8
   190a0:	sub	sp, sp, #8
   190a4:	ldr	ip, [fp, #8]
   190a8:	mov	lr, #0
   190ac:	ldr	r4, [ip, lr, lsl #2]
   190b0:	add	lr, lr, #1
   190b4:	cmp	r4, #0
   190b8:	bne	190ac <argp_parse@@Base+0x1734>
   190bc:	sub	r4, lr, #1
   190c0:	str	ip, [sp]
   190c4:	str	r4, [sp, #4]
   190c8:	bl	18e38 <argp_parse@@Base+0x14c0>
   190cc:	sub	sp, fp, #8
   190d0:	pop	{r4, sl, fp, pc}
   190d4:	push	{fp, lr}
   190d8:	mov	fp, sp
   190dc:	sub	sp, sp, #48	; 0x30
   190e0:	ldr	ip, [fp, #8]
   190e4:	ldr	lr, [ip]
   190e8:	cmp	lr, #0
   190ec:	str	lr, [sp, #8]
   190f0:	beq	1918c <argp_parse@@Base+0x1814>
   190f4:	ldr	lr, [ip, #4]
   190f8:	cmp	lr, #0
   190fc:	str	lr, [sp, #12]
   19100:	beq	19194 <argp_parse@@Base+0x181c>
   19104:	ldr	lr, [ip, #8]
   19108:	cmp	lr, #0
   1910c:	str	lr, [sp, #16]
   19110:	beq	1919c <argp_parse@@Base+0x1824>
   19114:	ldr	lr, [ip, #12]
   19118:	cmp	lr, #0
   1911c:	str	lr, [sp, #20]
   19120:	beq	191a4 <argp_parse@@Base+0x182c>
   19124:	ldr	lr, [ip, #16]
   19128:	cmp	lr, #0
   1912c:	str	lr, [sp, #24]
   19130:	beq	191ac <argp_parse@@Base+0x1834>
   19134:	ldr	lr, [ip, #20]
   19138:	cmp	lr, #0
   1913c:	str	lr, [sp, #28]
   19140:	beq	191b4 <argp_parse@@Base+0x183c>
   19144:	ldr	lr, [ip, #24]
   19148:	cmp	lr, #0
   1914c:	str	lr, [sp, #32]
   19150:	beq	191bc <argp_parse@@Base+0x1844>
   19154:	ldr	lr, [ip, #28]
   19158:	cmp	lr, #0
   1915c:	str	lr, [sp, #36]	; 0x24
   19160:	beq	191c4 <argp_parse@@Base+0x184c>
   19164:	ldr	lr, [ip, #32]
   19168:	cmp	lr, #0
   1916c:	str	lr, [sp, #40]	; 0x28
   19170:	beq	191cc <argp_parse@@Base+0x1854>
   19174:	ldr	lr, [ip, #36]	; 0x24
   19178:	mov	ip, #10
   1917c:	cmp	lr, #0
   19180:	str	lr, [sp, #44]	; 0x2c
   19184:	movweq	ip, #9
   19188:	b	191d0 <argp_parse@@Base+0x1858>
   1918c:	mov	ip, #0
   19190:	b	191d0 <argp_parse@@Base+0x1858>
   19194:	mov	ip, #1
   19198:	b	191d0 <argp_parse@@Base+0x1858>
   1919c:	mov	ip, #2
   191a0:	b	191d0 <argp_parse@@Base+0x1858>
   191a4:	mov	ip, #3
   191a8:	b	191d0 <argp_parse@@Base+0x1858>
   191ac:	mov	ip, #4
   191b0:	b	191d0 <argp_parse@@Base+0x1858>
   191b4:	mov	ip, #5
   191b8:	b	191d0 <argp_parse@@Base+0x1858>
   191bc:	mov	ip, #6
   191c0:	b	191d0 <argp_parse@@Base+0x1858>
   191c4:	mov	ip, #7
   191c8:	b	191d0 <argp_parse@@Base+0x1858>
   191cc:	mov	ip, #8
   191d0:	add	lr, sp, #8
   191d4:	str	ip, [sp, #4]
   191d8:	str	lr, [sp]
   191dc:	bl	18e38 <argp_parse@@Base+0x14c0>
   191e0:	mov	sp, fp
   191e4:	pop	{fp, pc}
   191e8:	push	{fp, lr}
   191ec:	mov	fp, sp
   191f0:	sub	sp, sp, #56	; 0x38
   191f4:	add	ip, fp, #8
   191f8:	str	ip, [sp, #12]
   191fc:	ldr	lr, [fp, #8]
   19200:	cmp	lr, #0
   19204:	str	lr, [sp, #16]
   19208:	beq	192a4 <argp_parse@@Base+0x192c>
   1920c:	ldr	lr, [ip, #4]
   19210:	cmp	lr, #0
   19214:	str	lr, [sp, #20]
   19218:	beq	192ac <argp_parse@@Base+0x1934>
   1921c:	ldr	lr, [ip, #8]
   19220:	cmp	lr, #0
   19224:	str	lr, [sp, #24]
   19228:	beq	192b4 <argp_parse@@Base+0x193c>
   1922c:	ldr	lr, [ip, #12]
   19230:	cmp	lr, #0
   19234:	str	lr, [sp, #28]
   19238:	beq	192bc <argp_parse@@Base+0x1944>
   1923c:	ldr	lr, [ip, #16]
   19240:	cmp	lr, #0
   19244:	str	lr, [sp, #32]
   19248:	beq	192c4 <argp_parse@@Base+0x194c>
   1924c:	ldr	lr, [ip, #20]
   19250:	cmp	lr, #0
   19254:	str	lr, [sp, #36]	; 0x24
   19258:	beq	192cc <argp_parse@@Base+0x1954>
   1925c:	ldr	lr, [ip, #24]
   19260:	cmp	lr, #0
   19264:	str	lr, [sp, #40]	; 0x28
   19268:	beq	192d4 <argp_parse@@Base+0x195c>
   1926c:	ldr	lr, [ip, #28]
   19270:	cmp	lr, #0
   19274:	str	lr, [sp, #44]	; 0x2c
   19278:	beq	192dc <argp_parse@@Base+0x1964>
   1927c:	ldr	lr, [ip, #32]
   19280:	cmp	lr, #0
   19284:	str	lr, [sp, #48]	; 0x30
   19288:	beq	192e4 <argp_parse@@Base+0x196c>
   1928c:	ldr	lr, [ip, #36]	; 0x24
   19290:	mov	ip, #10
   19294:	cmp	lr, #0
   19298:	str	lr, [sp, #52]	; 0x34
   1929c:	movweq	ip, #9
   192a0:	b	192e8 <argp_parse@@Base+0x1970>
   192a4:	mov	ip, #0
   192a8:	b	192e8 <argp_parse@@Base+0x1970>
   192ac:	mov	ip, #1
   192b0:	b	192e8 <argp_parse@@Base+0x1970>
   192b4:	mov	ip, #2
   192b8:	b	192e8 <argp_parse@@Base+0x1970>
   192bc:	mov	ip, #3
   192c0:	b	192e8 <argp_parse@@Base+0x1970>
   192c4:	mov	ip, #4
   192c8:	b	192e8 <argp_parse@@Base+0x1970>
   192cc:	mov	ip, #5
   192d0:	b	192e8 <argp_parse@@Base+0x1970>
   192d4:	mov	ip, #6
   192d8:	b	192e8 <argp_parse@@Base+0x1970>
   192dc:	mov	ip, #7
   192e0:	b	192e8 <argp_parse@@Base+0x1970>
   192e4:	mov	ip, #8
   192e8:	add	lr, sp, #16
   192ec:	str	ip, [sp, #4]
   192f0:	str	lr, [sp]
   192f4:	bl	18e38 <argp_parse@@Base+0x14c0>
   192f8:	mov	sp, fp
   192fc:	pop	{fp, pc}
   19300:	push	{fp, lr}
   19304:	mov	fp, sp
   19308:	movw	r0, #54348	; 0xd44c
   1930c:	movt	r0, #2
   19310:	ldr	r1, [r0]
   19314:	mov	r0, #10
   19318:	bl	116f8 <fputc@plt>
   1931c:	movw	r0, #49489	; 0xc151
   19320:	movw	r1, #49509	; 0xc165
   19324:	movt	r0, #1
   19328:	movt	r1, #1
   1932c:	bl	11458 <printf@plt>
   19330:	movw	r0, #49531	; 0xc17b
   19334:	movw	r1, #48787	; 0xbe93
   19338:	movw	r2, #49551	; 0xc18f
   1933c:	movt	r0, #1
   19340:	movt	r1, #1
   19344:	movt	r2, #1
   19348:	bl	11458 <printf@plt>
   1934c:	movw	r0, #49590	; 0xc1b6
   19350:	movw	r1, #49629	; 0xc1dd
   19354:	movt	r0, #1
   19358:	movt	r1, #1
   1935c:	pop	{fp, lr}
   19360:	b	11458 <printf@plt>
   19364:	push	{r4, r5, r6, sl, fp, lr}
   19368:	add	fp, sp, #16
   1936c:	mov	r4, r2
   19370:	mov	r5, r1
   19374:	mov	r6, r0
   19378:	bl	1b1e8 <argp_parse@@Base+0x3870>
   1937c:	cmp	r0, #0
   19380:	popne	{r4, r5, r6, sl, fp, pc}
   19384:	cmp	r6, #0
   19388:	beq	1939c <argp_parse@@Base+0x1a24>
   1938c:	cmp	r5, #0
   19390:	cmpne	r4, #0
   19394:	bne	1939c <argp_parse@@Base+0x1a24>
   19398:	pop	{r4, r5, r6, sl, fp, pc}
   1939c:	bl	1993c <argp_parse@@Base+0x1fc4>
   193a0:	push	{r4, r5, r6, sl, fp, lr}
   193a4:	add	fp, sp, #16
   193a8:	mov	r4, r2
   193ac:	mov	r5, r1
   193b0:	mov	r6, r0
   193b4:	bl	1b1e8 <argp_parse@@Base+0x3870>
   193b8:	cmp	r0, #0
   193bc:	popne	{r4, r5, r6, sl, fp, pc}
   193c0:	cmp	r6, #0
   193c4:	beq	193d8 <argp_parse@@Base+0x1a60>
   193c8:	cmp	r5, #0
   193cc:	cmpne	r4, #0
   193d0:	bne	193d8 <argp_parse@@Base+0x1a60>
   193d4:	pop	{r4, r5, r6, sl, fp, pc}
   193d8:	bl	1993c <argp_parse@@Base+0x1fc4>
   193dc:	push	{fp, lr}
   193e0:	mov	fp, sp
   193e4:	bl	199c0 <argp_parse@@Base+0x2048>
   193e8:	cmp	r0, #0
   193ec:	popne	{fp, pc}
   193f0:	bl	1993c <argp_parse@@Base+0x1fc4>
   193f4:	push	{fp, lr}
   193f8:	mov	fp, sp
   193fc:	bl	199c0 <argp_parse@@Base+0x2048>
   19400:	cmp	r0, #0
   19404:	popne	{fp, pc}
   19408:	bl	1993c <argp_parse@@Base+0x1fc4>
   1940c:	push	{fp, lr}
   19410:	mov	fp, sp
   19414:	bl	199c0 <argp_parse@@Base+0x2048>
   19418:	cmp	r0, #0
   1941c:	popne	{fp, pc}
   19420:	bl	1993c <argp_parse@@Base+0x1fc4>
   19424:	push	{r4, r5, fp, lr}
   19428:	add	fp, sp, #8
   1942c:	mov	r4, r1
   19430:	mov	r5, r0
   19434:	bl	199f0 <argp_parse@@Base+0x2078>
   19438:	cmp	r0, #0
   1943c:	popne	{r4, r5, fp, pc}
   19440:	cmp	r5, #0
   19444:	beq	19454 <argp_parse@@Base+0x1adc>
   19448:	cmp	r4, #0
   1944c:	bne	19454 <argp_parse@@Base+0x1adc>
   19450:	pop	{r4, r5, fp, pc}
   19454:	bl	1993c <argp_parse@@Base+0x1fc4>
   19458:	push	{fp, lr}
   1945c:	mov	fp, sp
   19460:	cmp	r1, #0
   19464:	orreq	r1, r1, #1
   19468:	bl	199f0 <argp_parse@@Base+0x2078>
   1946c:	cmp	r0, #0
   19470:	popne	{fp, pc}
   19474:	bl	1993c <argp_parse@@Base+0x1fc4>
   19478:	push	{fp, lr}
   1947c:	mov	fp, sp
   19480:	clz	r3, r2
   19484:	lsr	ip, r3, #5
   19488:	clz	r3, r1
   1948c:	lsr	r3, r3, #5
   19490:	orrs	r3, r3, ip
   19494:	movwne	r1, #1
   19498:	movwne	r2, #1
   1949c:	bl	1b1e8 <argp_parse@@Base+0x3870>
   194a0:	cmp	r0, #0
   194a4:	popne	{fp, pc}
   194a8:	bl	1993c <argp_parse@@Base+0x1fc4>
   194ac:	push	{fp, lr}
   194b0:	mov	fp, sp
   194b4:	mov	r2, r1
   194b8:	mov	r1, r0
   194bc:	mov	r0, #0
   194c0:	bl	1b1e8 <argp_parse@@Base+0x3870>
   194c4:	cmp	r0, #0
   194c8:	popne	{fp, pc}
   194cc:	bl	1993c <argp_parse@@Base+0x1fc4>
   194d0:	push	{fp, lr}
   194d4:	mov	fp, sp
   194d8:	mov	r2, r1
   194dc:	mov	r1, r0
   194e0:	clz	r0, r2
   194e4:	clz	r3, r1
   194e8:	lsr	r0, r0, #5
   194ec:	lsr	r3, r3, #5
   194f0:	orrs	r0, r3, r0
   194f4:	movwne	r1, #1
   194f8:	movwne	r2, #1
   194fc:	mov	r0, #0
   19500:	bl	1b1e8 <argp_parse@@Base+0x3870>
   19504:	cmp	r0, #0
   19508:	popne	{fp, pc}
   1950c:	bl	1993c <argp_parse@@Base+0x1fc4>
   19510:	push	{r4, r5, r6, sl, fp, lr}
   19514:	add	fp, sp, #16
   19518:	ldr	r5, [r1]
   1951c:	mov	r4, r1
   19520:	mov	r6, r0
   19524:	cmp	r0, #0
   19528:	beq	19540 <argp_parse@@Base+0x1bc8>
   1952c:	mov	r0, #1
   19530:	add	r0, r0, r5, lsr #1
   19534:	adds	r5, r5, r0
   19538:	bcc	19548 <argp_parse@@Base+0x1bd0>
   1953c:	b	19584 <argp_parse@@Base+0x1c0c>
   19540:	cmp	r5, #0
   19544:	movweq	r5, #64	; 0x40
   19548:	mov	r0, r6
   1954c:	mov	r1, r5
   19550:	mov	r2, #1
   19554:	bl	1b1e8 <argp_parse@@Base+0x3870>
   19558:	cmp	r5, #0
   1955c:	mov	r1, r5
   19560:	movwne	r1, #1
   19564:	cmp	r0, #0
   19568:	bne	1957c <argp_parse@@Base+0x1c04>
   1956c:	clz	r2, r6
   19570:	lsr	r2, r2, #5
   19574:	orrs	r1, r2, r1
   19578:	bne	19584 <argp_parse@@Base+0x1c0c>
   1957c:	str	r5, [r4]
   19580:	pop	{r4, r5, r6, sl, fp, pc}
   19584:	bl	1993c <argp_parse@@Base+0x1fc4>
   19588:	push	{r4, r5, r6, r7, fp, lr}
   1958c:	add	fp, sp, #16
   19590:	ldr	r5, [r1]
   19594:	mov	r6, r2
   19598:	mov	r4, r1
   1959c:	mov	r7, r0
   195a0:	cmp	r0, #0
   195a4:	beq	195bc <argp_parse@@Base+0x1c44>
   195a8:	mov	r0, #1
   195ac:	add	r0, r0, r5, lsr #1
   195b0:	adds	r5, r5, r0
   195b4:	bcc	195d4 <argp_parse@@Base+0x1c5c>
   195b8:	b	19608 <argp_parse@@Base+0x1c90>
   195bc:	cmp	r5, #0
   195c0:	bne	195d4 <argp_parse@@Base+0x1c5c>
   195c4:	mov	r0, #64	; 0x40
   195c8:	cmp	r6, #64	; 0x40
   195cc:	udiv	r5, r0, r6
   195d0:	addhi	r5, r5, #1
   195d4:	mov	r0, r7
   195d8:	mov	r1, r5
   195dc:	mov	r2, r6
   195e0:	bl	1b1e8 <argp_parse@@Base+0x3870>
   195e4:	cmp	r0, #0
   195e8:	bne	19600 <argp_parse@@Base+0x1c88>
   195ec:	cmp	r7, #0
   195f0:	beq	19608 <argp_parse@@Base+0x1c90>
   195f4:	cmp	r6, #0
   195f8:	cmpne	r5, #0
   195fc:	bne	19608 <argp_parse@@Base+0x1c90>
   19600:	str	r5, [r4]
   19604:	pop	{r4, r5, r6, r7, fp, pc}
   19608:	bl	1993c <argp_parse@@Base+0x1fc4>
   1960c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19610:	add	fp, sp, #24
   19614:	mov	r8, r1
   19618:	ldr	r1, [r1]
   1961c:	mov	r5, r0
   19620:	add	r0, r1, r1, asr #1
   19624:	cmp	r0, r1
   19628:	mvnvs	r0, #-2147483648	; 0x80000000
   1962c:	cmp	r0, r3
   19630:	mov	r7, r0
   19634:	movgt	r7, r3
   19638:	cmn	r3, #1
   1963c:	movle	r7, r0
   19640:	ldr	r0, [fp, #8]
   19644:	cmn	r0, #1
   19648:	ble	19670 <argp_parse@@Base+0x1cf8>
   1964c:	cmp	r0, #0
   19650:	beq	196c4 <argp_parse@@Base+0x1d4c>
   19654:	cmn	r7, #1
   19658:	ble	19698 <argp_parse@@Base+0x1d20>
   1965c:	mvn	r4, #-2147483648	; 0x80000000
   19660:	udiv	r6, r4, r0
   19664:	cmp	r6, r7
   19668:	bge	196c4 <argp_parse@@Base+0x1d4c>
   1966c:	b	196d4 <argp_parse@@Base+0x1d5c>
   19670:	cmn	r7, #1
   19674:	ble	196b4 <argp_parse@@Base+0x1d3c>
   19678:	cmn	r0, #1
   1967c:	beq	196c4 <argp_parse@@Base+0x1d4c>
   19680:	mov	r6, #-2147483648	; 0x80000000
   19684:	mvn	r4, #-2147483648	; 0x80000000
   19688:	sdiv	r6, r6, r0
   1968c:	cmp	r6, r7
   19690:	bge	196c4 <argp_parse@@Base+0x1d4c>
   19694:	b	196d4 <argp_parse@@Base+0x1d5c>
   19698:	beq	196c4 <argp_parse@@Base+0x1d4c>
   1969c:	mov	r6, #-2147483648	; 0x80000000
   196a0:	mvn	r4, #-2147483648	; 0x80000000
   196a4:	sdiv	r6, r6, r7
   196a8:	cmp	r6, r0
   196ac:	bge	196c4 <argp_parse@@Base+0x1d4c>
   196b0:	b	196d4 <argp_parse@@Base+0x1d5c>
   196b4:	mvn	r4, #-2147483648	; 0x80000000
   196b8:	sdiv	r6, r4, r0
   196bc:	cmp	r7, r6
   196c0:	blt	196d4 <argp_parse@@Base+0x1d5c>
   196c4:	mul	r6, r7, r0
   196c8:	mov	r4, #64	; 0x40
   196cc:	cmp	r6, #63	; 0x3f
   196d0:	bgt	196dc <argp_parse@@Base+0x1d64>
   196d4:	sdiv	r7, r4, r0
   196d8:	mul	r6, r7, r0
   196dc:	cmp	r5, #0
   196e0:	moveq	r4, #0
   196e4:	streq	r4, [r8]
   196e8:	sub	r4, r7, r1
   196ec:	cmp	r4, r2
   196f0:	bge	1979c <argp_parse@@Base+0x1e24>
   196f4:	add	r7, r1, r2
   196f8:	mov	r6, #0
   196fc:	mov	r2, #0
   19700:	cmp	r7, r3
   19704:	movwgt	r6, #1
   19708:	cmn	r3, #1
   1970c:	movwgt	r2, #1
   19710:	cmp	r7, r1
   19714:	bvs	197d0 <argp_parse@@Base+0x1e58>
   19718:	ands	r1, r2, r6
   1971c:	bne	197d0 <argp_parse@@Base+0x1e58>
   19720:	cmn	r0, #1
   19724:	ble	1974c <argp_parse@@Base+0x1dd4>
   19728:	cmp	r0, #0
   1972c:	beq	19798 <argp_parse@@Base+0x1e20>
   19730:	cmn	r7, #1
   19734:	ble	19770 <argp_parse@@Base+0x1df8>
   19738:	mvn	r1, #-2147483648	; 0x80000000
   1973c:	udiv	r1, r1, r0
   19740:	cmp	r1, r7
   19744:	bge	19798 <argp_parse@@Base+0x1e20>
   19748:	b	197d0 <argp_parse@@Base+0x1e58>
   1974c:	cmn	r7, #1
   19750:	ble	19788 <argp_parse@@Base+0x1e10>
   19754:	cmn	r0, #1
   19758:	beq	19798 <argp_parse@@Base+0x1e20>
   1975c:	mov	r1, #-2147483648	; 0x80000000
   19760:	sdiv	r1, r1, r0
   19764:	cmp	r1, r7
   19768:	bge	19798 <argp_parse@@Base+0x1e20>
   1976c:	b	197d0 <argp_parse@@Base+0x1e58>
   19770:	beq	19798 <argp_parse@@Base+0x1e20>
   19774:	mov	r1, #-2147483648	; 0x80000000
   19778:	sdiv	r1, r1, r7
   1977c:	cmp	r1, r0
   19780:	bge	19798 <argp_parse@@Base+0x1e20>
   19784:	b	197d0 <argp_parse@@Base+0x1e58>
   19788:	mvn	r1, #-2147483648	; 0x80000000
   1978c:	sdiv	r1, r1, r0
   19790:	cmp	r7, r1
   19794:	blt	197d0 <argp_parse@@Base+0x1e58>
   19798:	mul	r6, r7, r0
   1979c:	mov	r0, r5
   197a0:	mov	r1, r6
   197a4:	bl	199f0 <argp_parse@@Base+0x2078>
   197a8:	cmp	r6, #0
   197ac:	movwne	r6, #1
   197b0:	cmp	r0, #0
   197b4:	bne	197c8 <argp_parse@@Base+0x1e50>
   197b8:	clz	r1, r5
   197bc:	lsr	r1, r1, #5
   197c0:	orrs	r1, r1, r6
   197c4:	bne	197d0 <argp_parse@@Base+0x1e58>
   197c8:	str	r7, [r8]
   197cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   197d0:	bl	1993c <argp_parse@@Base+0x1fc4>
   197d4:	push	{fp, lr}
   197d8:	mov	fp, sp
   197dc:	mov	r1, #1
   197e0:	bl	1996c <argp_parse@@Base+0x1ff4>
   197e4:	cmp	r0, #0
   197e8:	popne	{fp, pc}
   197ec:	bl	1993c <argp_parse@@Base+0x1fc4>
   197f0:	push	{fp, lr}
   197f4:	mov	fp, sp
   197f8:	bl	1996c <argp_parse@@Base+0x1ff4>
   197fc:	cmp	r0, #0
   19800:	popne	{fp, pc}
   19804:	bl	1993c <argp_parse@@Base+0x1fc4>
   19808:	push	{fp, lr}
   1980c:	mov	fp, sp
   19810:	mov	r1, #1
   19814:	bl	1996c <argp_parse@@Base+0x1ff4>
   19818:	cmp	r0, #0
   1981c:	popne	{fp, pc}
   19820:	bl	1993c <argp_parse@@Base+0x1fc4>
   19824:	push	{fp, lr}
   19828:	mov	fp, sp
   1982c:	bl	1996c <argp_parse@@Base+0x1ff4>
   19830:	cmp	r0, #0
   19834:	popne	{fp, pc}
   19838:	bl	1993c <argp_parse@@Base+0x1fc4>
   1983c:	push	{r4, r5, r6, sl, fp, lr}
   19840:	add	fp, sp, #16
   19844:	mov	r5, r0
   19848:	mov	r0, r1
   1984c:	mov	r4, r1
   19850:	bl	199c0 <argp_parse@@Base+0x2048>
   19854:	cmp	r0, #0
   19858:	beq	19874 <argp_parse@@Base+0x1efc>
   1985c:	mov	r1, r5
   19860:	mov	r2, r4
   19864:	mov	r6, r0
   19868:	bl	114d0 <memcpy@plt>
   1986c:	mov	r0, r6
   19870:	pop	{r4, r5, r6, sl, fp, pc}
   19874:	bl	1993c <argp_parse@@Base+0x1fc4>
   19878:	push	{r4, r5, r6, sl, fp, lr}
   1987c:	add	fp, sp, #16
   19880:	mov	r5, r0
   19884:	mov	r0, r1
   19888:	mov	r4, r1
   1988c:	bl	199c0 <argp_parse@@Base+0x2048>
   19890:	cmp	r0, #0
   19894:	beq	198b0 <argp_parse@@Base+0x1f38>
   19898:	mov	r1, r5
   1989c:	mov	r2, r4
   198a0:	mov	r6, r0
   198a4:	bl	114d0 <memcpy@plt>
   198a8:	mov	r0, r6
   198ac:	pop	{r4, r5, r6, sl, fp, pc}
   198b0:	bl	1993c <argp_parse@@Base+0x1fc4>
   198b4:	push	{r4, r5, r6, sl, fp, lr}
   198b8:	add	fp, sp, #16
   198bc:	mov	r5, r0
   198c0:	add	r0, r1, #1
   198c4:	mov	r4, r1
   198c8:	bl	199c0 <argp_parse@@Base+0x2048>
   198cc:	cmp	r0, #0
   198d0:	beq	198f8 <argp_parse@@Base+0x1f80>
   198d4:	mov	r6, r0
   198d8:	mov	r0, #0
   198dc:	mov	r1, r5
   198e0:	mov	r2, r4
   198e4:	strb	r0, [r6, r4]
   198e8:	mov	r0, r6
   198ec:	bl	114d0 <memcpy@plt>
   198f0:	mov	r0, r6
   198f4:	pop	{r4, r5, r6, sl, fp, pc}
   198f8:	bl	1993c <argp_parse@@Base+0x1fc4>
   198fc:	push	{r4, r5, r6, sl, fp, lr}
   19900:	add	fp, sp, #16
   19904:	mov	r4, r0
   19908:	bl	11614 <strlen@plt>
   1990c:	add	r5, r0, #1
   19910:	mov	r0, r5
   19914:	bl	199c0 <argp_parse@@Base+0x2048>
   19918:	cmp	r0, #0
   1991c:	beq	19938 <argp_parse@@Base+0x1fc0>
   19920:	mov	r1, r4
   19924:	mov	r2, r5
   19928:	mov	r6, r0
   1992c:	bl	114d0 <memcpy@plt>
   19930:	mov	r0, r6
   19934:	pop	{r4, r5, r6, sl, fp, pc}
   19938:	bl	1993c <argp_parse@@Base+0x1fc4>
   1993c:	push	{fp, lr}
   19940:	mov	fp, sp
   19944:	movw	r0, #54308	; 0xd424
   19948:	movw	r2, #47571	; 0xb9d3
   1994c:	movw	r3, #49705	; 0xc229
   19950:	mov	r1, #0
   19954:	movt	r0, #2
   19958:	movt	r2, #1
   1995c:	movt	r3, #1
   19960:	ldr	r0, [r0]
   19964:	bl	11584 <error@plt>
   19968:	bl	11770 <abort@plt>
   1996c:	clz	r2, r1
   19970:	clz	r3, r0
   19974:	lsr	r2, r2, #5
   19978:	lsr	r3, r3, #5
   1997c:	orrs	r2, r3, r2
   19980:	movwne	r1, #1
   19984:	movwne	r0, #1
   19988:	cmp	r1, #0
   1998c:	beq	199bc <argp_parse@@Base+0x2044>
   19990:	mvn	r2, #-2147483648	; 0x80000000
   19994:	udiv	r2, r2, r1
   19998:	cmp	r2, r0
   1999c:	bcs	199bc <argp_parse@@Base+0x2044>
   199a0:	push	{fp, lr}
   199a4:	mov	fp, sp
   199a8:	bl	11638 <__errno_location@plt>
   199ac:	mov	r1, #12
   199b0:	str	r1, [r0]
   199b4:	mov	r0, #0
   199b8:	pop	{fp, pc}
   199bc:	b	11428 <calloc@plt>
   199c0:	cmp	r0, #0
   199c4:	movweq	r0, #1
   199c8:	cmn	r0, #1
   199cc:	ble	199d4 <argp_parse@@Base+0x205c>
   199d0:	b	115b4 <malloc@plt>
   199d4:	push	{fp, lr}
   199d8:	mov	fp, sp
   199dc:	bl	11638 <__errno_location@plt>
   199e0:	mov	r1, #12
   199e4:	str	r1, [r0]
   199e8:	mov	r0, #0
   199ec:	pop	{fp, pc}
   199f0:	push	{fp, lr}
   199f4:	mov	fp, sp
   199f8:	cmp	r0, #0
   199fc:	beq	19a18 <argp_parse@@Base+0x20a0>
   19a00:	cmp	r1, #0
   19a04:	beq	19a24 <argp_parse@@Base+0x20ac>
   19a08:	cmn	r1, #1
   19a0c:	ble	19a30 <argp_parse@@Base+0x20b8>
   19a10:	pop	{fp, lr}
   19a14:	b	11518 <realloc@plt>
   19a18:	mov	r0, r1
   19a1c:	pop	{fp, lr}
   19a20:	b	199c0 <argp_parse@@Base+0x2048>
   19a24:	bl	18c48 <argp_parse@@Base+0x12d0>
   19a28:	mov	r0, #0
   19a2c:	pop	{fp, pc}
   19a30:	bl	11638 <__errno_location@plt>
   19a34:	mov	r1, #12
   19a38:	str	r1, [r0]
   19a3c:	mov	r0, #0
   19a40:	pop	{fp, pc}
   19a44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19a48:	add	fp, sp, #24
   19a4c:	mov	r5, r0
   19a50:	mov	r0, #36	; 0x24
   19a54:	mov	r8, r3
   19a58:	mov	r6, r2
   19a5c:	mov	r7, r1
   19a60:	bl	199c0 <argp_parse@@Base+0x2048>
   19a64:	mov	r4, r0
   19a68:	cmp	r0, #0
   19a6c:	beq	19aa8 <argp_parse@@Base+0x2130>
   19a70:	mov	r0, #0
   19a74:	stm	r4, {r5, r7}
   19a78:	str	r6, [r4, #8]
   19a7c:	str	r8, [r4, #12]
   19a80:	str	r0, [r4, #16]
   19a84:	str	r0, [r4, #20]
   19a88:	mov	r0, #200	; 0xc8
   19a8c:	bl	199c0 <argp_parse@@Base+0x2048>
   19a90:	cmp	r0, #0
   19a94:	str	r0, [r4, #24]
   19a98:	beq	19ab0 <argp_parse@@Base+0x2138>
   19a9c:	add	r1, r0, #200	; 0xc8
   19aa0:	str	r0, [r4, #28]
   19aa4:	str	r1, [r4, #32]
   19aa8:	mov	r0, r4
   19aac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19ab0:	mov	r0, r4
   19ab4:	bl	18c48 <argp_parse@@Base+0x12d0>
   19ab8:	mov	r4, #0
   19abc:	mov	r0, r4
   19ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19ac4:	push	{r4, sl, fp, lr}
   19ac8:	add	fp, sp, #8
   19acc:	mov	r4, r0
   19ad0:	bl	19b08 <argp_parse@@Base+0x2190>
   19ad4:	ldr	r0, [r4, #24]
   19ad8:	ldr	r1, [r4, #28]
   19adc:	cmp	r1, r0
   19ae0:	bls	19af8 <argp_parse@@Base+0x2180>
   19ae4:	ldr	r3, [r4]
   19ae8:	sub	r2, r1, r0
   19aec:	mov	r1, #1
   19af0:	bl	114e8 <fwrite_unlocked@plt>
   19af4:	ldr	r0, [r4, #24]
   19af8:	bl	18c48 <argp_parse@@Base+0x12d0>
   19afc:	mov	r0, r4
   19b00:	pop	{r4, sl, fp, lr}
   19b04:	b	18c48 <argp_parse@@Base+0x12d0>
   19b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b0c:	add	fp, sp, #28
   19b10:	sub	sp, sp, #12
   19b14:	mov	r8, r0
   19b18:	ldr	r0, [r0, #16]
   19b1c:	ldr	r1, [r8, #24]
   19b20:	ldr	ip, [r8, #28]
   19b24:	add	sl, r1, r0
   19b28:	cmp	sl, ip
   19b2c:	bcs	1a054 <argp_parse@@Base+0x26dc>
   19b30:	ldr	r6, [r8, #20]
   19b34:	mov	r3, #32
   19b38:	cmp	r6, #0
   19b3c:	beq	19b48 <argp_parse@@Base+0x21d0>
   19b40:	mov	r9, sl
   19b44:	b	19be8 <argp_parse@@Base+0x2270>
   19b48:	ldr	r6, [r8, #4]
   19b4c:	cmp	r6, #0
   19b50:	beq	19d28 <argp_parse@@Base+0x23b0>
   19b54:	ldr	r1, [r8, #32]
   19b58:	add	r0, ip, r6
   19b5c:	mov	r5, r6
   19b60:	cmp	r0, r1
   19b64:	bcs	19b9c <argp_parse@@Base+0x2224>
   19b68:	add	r9, sl, r6
   19b6c:	sub	r2, ip, sl
   19b70:	mov	r1, sl
   19b74:	mov	r0, r9
   19b78:	bl	11488 <memmove@plt>
   19b7c:	ldr	r0, [r8, #28]
   19b80:	mov	r1, #32
   19b84:	mov	r2, r6
   19b88:	add	r0, r0, r6
   19b8c:	str	r0, [r8, #28]
   19b90:	mov	r0, sl
   19b94:	bl	11668 <memset@plt>
   19b98:	b	19be0 <argp_parse@@Base+0x2268>
   19b9c:	ldr	r0, [r8]
   19ba0:	ldr	r1, [r0, #20]
   19ba4:	ldr	r2, [r0, #24]
   19ba8:	cmp	r1, r2
   19bac:	bcs	19bc8 <argp_parse@@Base+0x2250>
   19bb0:	add	r2, r1, #1
   19bb4:	str	r2, [r0, #20]
   19bb8:	strb	r3, [r1]
   19bbc:	subs	r5, r5, #1
   19bc0:	bne	19b9c <argp_parse@@Base+0x2224>
   19bc4:	b	19bdc <argp_parse@@Base+0x2264>
   19bc8:	mov	r1, #32
   19bcc:	bl	116c8 <__overflow@plt>
   19bd0:	mov	r3, #32
   19bd4:	subs	r5, r5, #1
   19bd8:	bne	19b9c <argp_parse@@Base+0x2224>
   19bdc:	mov	r9, sl
   19be0:	str	r6, [r8, #20]
   19be4:	ldr	ip, [r8, #28]
   19be8:	sub	r4, ip, r9
   19bec:	mov	r0, r9
   19bf0:	mov	r1, #10
   19bf4:	str	ip, [sp, #8]
   19bf8:	mov	r2, r4
   19bfc:	bl	11698 <memchr@plt>
   19c00:	cmn	r6, #1
   19c04:	mov	r7, r0
   19c08:	movle	r6, #0
   19c0c:	strle	r6, [r8, #20]
   19c10:	cmp	r7, #0
   19c14:	beq	19c4c <argp_parse@@Base+0x22d4>
   19c18:	ldr	r5, [r8, #8]
   19c1c:	ldr	ip, [sp, #8]
   19c20:	sub	r0, r7, r9
   19c24:	mov	r3, #32
   19c28:	add	r0, r0, r6
   19c2c:	cmp	r0, r5
   19c30:	bge	19c68 <argp_parse@@Base+0x22f0>
   19c34:	mov	r6, #0
   19c38:	add	sl, r7, #1
   19c3c:	str	r6, [r8, #20]
   19c40:	cmp	sl, ip
   19c44:	bcc	19b38 <argp_parse@@Base+0x21c0>
   19c48:	b	1a054 <argp_parse@@Base+0x26dc>
   19c4c:	ldr	ip, [sp, #8]
   19c50:	ldr	r5, [r8, #8]
   19c54:	add	r0, r6, r4
   19c58:	mov	r3, #32
   19c5c:	cmp	r0, r5
   19c60:	mov	r7, ip
   19c64:	bcc	1a034 <argp_parse@@Base+0x26bc>
   19c68:	ldr	r0, [r8, #12]
   19c6c:	str	r4, [sp, #4]
   19c70:	cmn	r0, #1
   19c74:	ble	19cc8 <argp_parse@@Base+0x2350>
   19c78:	sub	sl, r5, r6
   19c7c:	mov	r4, r0
   19c80:	mov	r1, #0
   19c84:	add	r6, r9, sl
   19c88:	cmp	sl, #0
   19c8c:	blt	19d20 <argp_parse@@Base+0x23a8>
   19c90:	bl	115f0 <__ctype_b_loc@plt>
   19c94:	ldr	r1, [r0]
   19c98:	mov	r0, r6
   19c9c:	ldrb	r2, [r0]
   19ca0:	ldrb	r2, [r1, r2, lsl #1]
   19ca4:	tst	r2, #1
   19ca8:	bne	19d30 <argp_parse@@Base+0x23b8>
   19cac:	sub	r0, r0, #1
   19cb0:	cmp	r0, r9
   19cb4:	bcs	19c9c <argp_parse@@Base+0x2324>
   19cb8:	ldr	ip, [sp, #8]
   19cbc:	mov	r3, #32
   19cc0:	mov	r1, #0
   19cc4:	b	19d3c <argp_parse@@Base+0x23c4>
   19cc8:	sub	sl, r5, #1
   19ccc:	cmp	r7, ip
   19cd0:	bcs	1a03c <argp_parse@@Base+0x26c4>
   19cd4:	sub	r0, sl, r6
   19cd8:	sub	r2, ip, r7
   19cdc:	mov	r1, r7
   19ce0:	add	r0, r9, r0
   19ce4:	bl	11488 <memmove@plt>
   19ce8:	ldr	r0, [r8, #20]
   19cec:	ldr	r1, [r8, #28]
   19cf0:	mov	r6, #0
   19cf4:	mov	r3, #32
   19cf8:	str	r6, [r8, #20]
   19cfc:	sub	r0, sl, r0
   19d00:	add	sl, r9, r5
   19d04:	add	r0, r9, r0
   19d08:	sub	r0, r7, r0
   19d0c:	add	ip, r1, r0
   19d10:	str	ip, [r8, #28]
   19d14:	cmp	sl, ip
   19d18:	bcc	19b38 <argp_parse@@Base+0x21c0>
   19d1c:	b	1a054 <argp_parse@@Base+0x26dc>
   19d20:	mov	r0, r6
   19d24:	b	19d3c <argp_parse@@Base+0x23c4>
   19d28:	mov	r6, #0
   19d2c:	b	19b40 <argp_parse@@Base+0x21c8>
   19d30:	ldr	ip, [sp, #8]
   19d34:	mov	r1, #1
   19d38:	mov	r3, #32
   19d3c:	add	r5, r0, #1
   19d40:	cmp	r5, r9
   19d44:	bls	19d90 <argp_parse@@Base+0x2418>
   19d48:	cmp	r1, #0
   19d4c:	beq	19df8 <argp_parse@@Base+0x2480>
   19d50:	sub	r1, r0, #1
   19d54:	mov	r7, r4
   19d58:	mov	r6, r1
   19d5c:	cmp	r1, r9
   19d60:	bcc	19d80 <argp_parse@@Base+0x2408>
   19d64:	bl	115f0 <__ctype_b_loc@plt>
   19d68:	mov	r1, r6
   19d6c:	ldr	r0, [r0]
   19d70:	ldrb	r2, [r1], #-1
   19d74:	ldrb	r0, [r0, r2, lsl #1]
   19d78:	tst	r0, #1
   19d7c:	bne	19d58 <argp_parse@@Base+0x23e0>
   19d80:	ldr	ip, [sp, #8]
   19d84:	add	r6, r6, #1
   19d88:	mov	r3, #32
   19d8c:	b	19e00 <argp_parse@@Base+0x2488>
   19d90:	cmp	r6, r7
   19d94:	bcs	19dc8 <argp_parse@@Base+0x2450>
   19d98:	add	r0, r9, sl
   19d9c:	add	r1, r0, #1
   19da0:	mov	r6, r1
   19da4:	cmp	r1, r7
   19da8:	bcs	19dc8 <argp_parse@@Base+0x2450>
   19dac:	bl	115f0 <__ctype_b_loc@plt>
   19db0:	mov	r1, r6
   19db4:	ldr	r0, [r0]
   19db8:	ldrb	r2, [r1], #1
   19dbc:	ldrb	r0, [r0, r2, lsl #1]
   19dc0:	tst	r0, #1
   19dc4:	beq	19da0 <argp_parse@@Base+0x2428>
   19dc8:	cmp	r6, r7
   19dcc:	beq	19eec <argp_parse@@Base+0x2574>
   19dd0:	bl	115f0 <__ctype_b_loc@plt>
   19dd4:	ldr	r0, [r0]
   19dd8:	mov	r5, r6
   19ddc:	ldrb	r1, [r5, #1]!
   19de0:	ldrb	r1, [r0, r1, lsl #1]
   19de4:	tst	r1, #1
   19de8:	bne	19ddc <argp_parse@@Base+0x2464>
   19dec:	ldr	ip, [sp, #8]
   19df0:	mov	r3, #32
   19df4:	b	19dfc <argp_parse@@Base+0x2484>
   19df8:	mov	r6, r5
   19dfc:	mov	r7, r4
   19e00:	add	r0, ip, #1
   19e04:	cmp	r5, r0
   19e08:	beq	19e2c <argp_parse@@Base+0x24b4>
   19e0c:	add	sl, r6, #1
   19e10:	cmp	ip, r5
   19e14:	bls	19f10 <argp_parse@@Base+0x2598>
   19e18:	sub	r0, r5, sl
   19e1c:	cmp	r0, r7
   19e20:	bge	19f10 <argp_parse@@Base+0x2598>
   19e24:	ldr	r0, [r8, #32]
   19e28:	b	19e44 <argp_parse@@Base+0x24cc>
   19e2c:	cmp	ip, r5
   19e30:	bls	19f0c <argp_parse@@Base+0x2594>
   19e34:	ldr	r0, [r8, #32]
   19e38:	sub	r1, r0, r6
   19e3c:	cmp	r1, r7
   19e40:	bgt	19f0c <argp_parse@@Base+0x2594>
   19e44:	sub	r0, r0, ip
   19e48:	add	r1, r7, #1
   19e4c:	cmp	r0, r1
   19e50:	ble	19e90 <argp_parse@@Base+0x2518>
   19e54:	sub	r4, ip, r5
   19e58:	add	sl, r6, #1
   19e5c:	mov	r1, r5
   19e60:	add	r0, sl, r7
   19e64:	mov	r2, r4
   19e68:	bl	11488 <memmove@plt>
   19e6c:	ldr	r0, [r8, #12]
   19e70:	mov	r1, #10
   19e74:	mov	r3, #32
   19e78:	strb	r1, [r6]
   19e7c:	add	r5, sl, r0
   19e80:	add	r0, r5, r4
   19e84:	sub	r0, r0, r9
   19e88:	str	r0, [sp, #4]
   19e8c:	b	19f18 <argp_parse@@Base+0x25a0>
   19e90:	ldr	r0, [r8, #24]
   19e94:	cmp	r6, r0
   19e98:	bls	19eb4 <argp_parse@@Base+0x253c>
   19e9c:	ldr	r3, [r8]
   19ea0:	sub	r2, r6, r0
   19ea4:	mov	r1, #1
   19ea8:	bl	114e8 <fwrite_unlocked@plt>
   19eac:	ldr	ip, [sp, #8]
   19eb0:	mov	r3, #32
   19eb4:	ldr	r0, [r8]
   19eb8:	ldr	r1, [r0, #20]
   19ebc:	ldr	r2, [r0, #24]
   19ec0:	cmp	r1, r2
   19ec4:	bcs	1a020 <argp_parse@@Base+0x26a8>
   19ec8:	add	r2, r1, #1
   19ecc:	str	r2, [r0, #20]
   19ed0:	mov	r0, #10
   19ed4:	strb	r0, [r1]
   19ed8:	ldr	sl, [r8, #24]
   19edc:	sub	r0, ip, sl
   19ee0:	mov	r9, sl
   19ee4:	str	r0, [sp, #4]
   19ee8:	b	19f18 <argp_parse@@Base+0x25a0>
   19eec:	ldr	ip, [sp, #8]
   19ef0:	mov	r6, #0
   19ef4:	add	sl, r7, #1
   19ef8:	mov	r3, #32
   19efc:	str	r6, [r8, #20]
   19f00:	cmp	sl, ip
   19f04:	bcc	19b38 <argp_parse@@Base+0x21c0>
   19f08:	b	1a054 <argp_parse@@Base+0x26dc>
   19f0c:	add	sl, r6, #1
   19f10:	mov	r0, #10
   19f14:	strb	r0, [r6]
   19f18:	ldr	r6, [r8, #12]
   19f1c:	sub	r0, r5, sl
   19f20:	cmp	r0, r6
   19f24:	bge	19f5c <argp_parse@@Base+0x25e4>
   19f28:	ldr	r0, [sp, #4]
   19f2c:	add	r0, r9, r0
   19f30:	add	r0, r0, #1
   19f34:	cmp	r5, r0
   19f38:	bne	19f4c <argp_parse@@Base+0x25d4>
   19f3c:	ldr	r0, [r8, #32]
   19f40:	sub	r0, r0, r5
   19f44:	cmp	r0, r6
   19f48:	bge	19f5c <argp_parse@@Base+0x25e4>
   19f4c:	cmp	r6, #1
   19f50:	blt	19fcc <argp_parse@@Base+0x2654>
   19f54:	mov	r7, #0
   19f58:	b	19f9c <argp_parse@@Base+0x2624>
   19f5c:	cmp	r6, #1
   19f60:	blt	19fcc <argp_parse@@Base+0x2654>
   19f64:	mov	r0, #0
   19f68:	strb	r3, [sl, r0]
   19f6c:	add	r0, r0, #1
   19f70:	ldr	r6, [r8, #12]
   19f74:	cmp	r0, r6
   19f78:	blt	19f68 <argp_parse@@Base+0x25f0>
   19f7c:	add	sl, sl, r0
   19f80:	cmp	sl, r5
   19f84:	bcc	19fd4 <argp_parse@@Base+0x265c>
   19f88:	b	19ff4 <argp_parse@@Base+0x267c>
   19f8c:	mov	r1, #32
   19f90:	bl	116c8 <__overflow@plt>
   19f94:	mov	r3, #32
   19f98:	b	19fbc <argp_parse@@Base+0x2644>
   19f9c:	ldr	r0, [r8]
   19fa0:	ldr	r1, [r0, #20]
   19fa4:	ldr	r2, [r0, #24]
   19fa8:	cmp	r1, r2
   19fac:	bcs	19f8c <argp_parse@@Base+0x2614>
   19fb0:	add	r2, r1, #1
   19fb4:	str	r2, [r0, #20]
   19fb8:	strb	r3, [r1]
   19fbc:	ldr	r6, [r8, #12]
   19fc0:	add	r7, r7, #1
   19fc4:	cmp	r7, r6
   19fc8:	blt	19f9c <argp_parse@@Base+0x2624>
   19fcc:	cmp	sl, r5
   19fd0:	bcs	19ff4 <argp_parse@@Base+0x267c>
   19fd4:	ldr	r0, [sp, #4]
   19fd8:	mov	r1, r5
   19fdc:	add	r0, r9, r0
   19fe0:	sub	r2, r0, r5
   19fe4:	mov	r0, sl
   19fe8:	bl	11488 <memmove@plt>
   19fec:	ldr	r6, [r8, #12]
   19ff0:	mov	r3, #32
   19ff4:	ldr	r0, [sp, #4]
   19ff8:	cmp	r6, #0
   19ffc:	mvneq	r6, #0
   1a000:	str	r6, [r8, #20]
   1a004:	sub	r0, r0, r5
   1a008:	add	r0, r0, r9
   1a00c:	add	ip, sl, r0
   1a010:	str	ip, [r8, #28]
   1a014:	cmp	sl, ip
   1a018:	bcc	19b38 <argp_parse@@Base+0x21c0>
   1a01c:	b	1a054 <argp_parse@@Base+0x26dc>
   1a020:	mov	r1, #10
   1a024:	bl	116c8 <__overflow@plt>
   1a028:	ldr	ip, [sp, #8]
   1a02c:	mov	r3, #32
   1a030:	b	19ed8 <argp_parse@@Base+0x2560>
   1a034:	str	r0, [r8, #20]
   1a038:	b	1a054 <argp_parse@@Base+0x26dc>
   1a03c:	ldr	r0, [sp, #4]
   1a040:	add	r0, r6, r0
   1a044:	str	r0, [r8, #20]
   1a048:	sub	r0, sl, r0
   1a04c:	add	ip, ip, r0
   1a050:	str	ip, [r8, #28]
   1a054:	ldr	r0, [r8, #24]
   1a058:	sub	r0, ip, r0
   1a05c:	str	r0, [r8, #16]
   1a060:	sub	sp, fp, #28
   1a064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a068:	push	{r4, r5, r6, sl, fp, lr}
   1a06c:	add	fp, sp, #16
   1a070:	mov	r4, r0
   1a074:	mov	r6, r1
   1a078:	ldr	r0, [r0, #28]
   1a07c:	mov	r5, #1
   1a080:	ldr	r1, [r4, #32]
   1a084:	sub	r0, r1, r0
   1a088:	cmp	r0, r6
   1a08c:	bcs	1a14c <argp_parse@@Base+0x27d4>
   1a090:	mov	r0, r4
   1a094:	bl	19b08 <argp_parse@@Base+0x2190>
   1a098:	ldr	r0, [r4, #24]
   1a09c:	ldr	r1, [r4, #28]
   1a0a0:	ldr	r3, [r4]
   1a0a4:	mov	r5, #1
   1a0a8:	sub	r2, r1, r0
   1a0ac:	mov	r1, #1
   1a0b0:	bl	114e8 <fwrite_unlocked@plt>
   1a0b4:	mov	r1, r0
   1a0b8:	ldr	r0, [r4, #24]
   1a0bc:	ldr	r2, [r4, #28]
   1a0c0:	sub	r3, r2, r0
   1a0c4:	cmp	r1, r3
   1a0c8:	bne	1a118 <argp_parse@@Base+0x27a0>
   1a0cc:	mov	r1, #0
   1a0d0:	str	r1, [r4, #16]
   1a0d4:	str	r0, [r4, #28]
   1a0d8:	ldr	r1, [r4, #32]
   1a0dc:	sub	r1, r1, r0
   1a0e0:	cmp	r1, r6
   1a0e4:	bcs	1a14c <argp_parse@@Base+0x27d4>
   1a0e8:	adds	r6, r1, r6
   1a0ec:	bcs	1a13c <argp_parse@@Base+0x27c4>
   1a0f0:	mov	r1, r6
   1a0f4:	bl	199f0 <argp_parse@@Base+0x2078>
   1a0f8:	cmp	r0, #0
   1a0fc:	beq	1a13c <argp_parse@@Base+0x27c4>
   1a100:	str	r0, [r4, #24]
   1a104:	add	r1, r0, r6
   1a108:	str	r0, [r4, #28]
   1a10c:	mov	r0, r5
   1a110:	str	r1, [r4, #32]
   1a114:	pop	{r4, r5, r6, sl, fp, pc}
   1a118:	sub	r2, r2, r1
   1a11c:	str	r2, [r4, #28]
   1a120:	sub	r2, r2, r0
   1a124:	ldr	r3, [r4, #16]
   1a128:	sub	r3, r3, r1
   1a12c:	add	r1, r0, r1
   1a130:	str	r3, [r4, #16]
   1a134:	bl	11488 <memmove@plt>
   1a138:	b	1a148 <argp_parse@@Base+0x27d0>
   1a13c:	bl	11638 <__errno_location@plt>
   1a140:	mov	r1, #12
   1a144:	str	r1, [r0]
   1a148:	mov	r5, #0
   1a14c:	mov	r0, r5
   1a150:	pop	{r4, r5, r6, sl, fp, pc}
   1a154:	sub	sp, sp, #8
   1a158:	push	{r4, r5, r6, r7, fp, lr}
   1a15c:	add	fp, sp, #16
   1a160:	sub	sp, sp, #8
   1a164:	mov	r5, r1
   1a168:	mov	r4, r0
   1a16c:	mov	r1, #150	; 0x96
   1a170:	add	r6, fp, #8
   1a174:	str	r3, [fp, #12]
   1a178:	str	r2, [fp, #8]
   1a17c:	mov	r0, r4
   1a180:	bl	1a068 <argp_parse@@Base+0x26f0>
   1a184:	cmp	r0, #0
   1a188:	beq	1a1c8 <argp_parse@@Base+0x2850>
   1a18c:	str	r6, [sp, #4]
   1a190:	mov	r2, r5
   1a194:	mov	r3, r6
   1a198:	ldr	r0, [r4, #28]
   1a19c:	ldr	r1, [r4, #32]
   1a1a0:	sub	r7, r1, r0
   1a1a4:	mov	r1, r7
   1a1a8:	bl	1171c <vsnprintf@plt>
   1a1ac:	add	r1, r0, #1
   1a1b0:	cmp	r0, r7
   1a1b4:	bcs	1a17c <argp_parse@@Base+0x2804>
   1a1b8:	ldr	r1, [r4, #28]
   1a1bc:	add	r1, r1, r0
   1a1c0:	str	r1, [r4, #28]
   1a1c4:	b	1a1cc <argp_parse@@Base+0x2854>
   1a1c8:	mvn	r0, #0
   1a1cc:	sub	sp, fp, #16
   1a1d0:	pop	{r4, r5, r6, r7, fp, lr}
   1a1d4:	add	sp, sp, #8
   1a1d8:	bx	lr
   1a1dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1e0:	add	fp, sp, #28
   1a1e4:	sub	sp, sp, #68	; 0x44
   1a1e8:	mvn	r6, #0
   1a1ec:	cmp	r0, #1
   1a1f0:	blt	1a918 <argp_parse@@Base+0x2fa0>
   1a1f4:	mov	r7, r2
   1a1f8:	ldr	r2, [fp, #16]
   1a1fc:	mov	r5, r3
   1a200:	mov	r3, r0
   1a204:	mov	sl, r1
   1a208:	mov	r0, #0
   1a20c:	ldr	r9, [r2]
   1a210:	ldr	r6, [r2, #4]
   1a214:	str	r0, [r2, #12]
   1a218:	cmp	r9, #0
   1a21c:	beq	1a240 <argp_parse@@Base+0x28c8>
   1a220:	ldr	r0, [r2, #16]
   1a224:	cmp	r0, #0
   1a228:	beq	1a248 <argp_parse@@Base+0x28d0>
   1a22c:	ldrb	r0, [r7]
   1a230:	cmp	r0, #45	; 0x2d
   1a234:	cmpne	r0, #43	; 0x2b
   1a238:	addeq	r7, r7, #1
   1a23c:	b	1a2bc <argp_parse@@Base+0x2944>
   1a240:	mov	r9, #1
   1a244:	str	r9, [r2]
   1a248:	mov	r0, #0
   1a24c:	str	r9, [r2, #28]
   1a250:	str	r9, [r2, #32]
   1a254:	str	r0, [r2, #20]
   1a258:	ldrb	r1, [r7]
   1a25c:	cmp	r1, #43	; 0x2b
   1a260:	beq	1a270 <argp_parse@@Base+0x28f8>
   1a264:	cmp	r1, #45	; 0x2d
   1a268:	bne	1a27c <argp_parse@@Base+0x2904>
   1a26c:	mov	r0, #2
   1a270:	str	r0, [r2, #24]
   1a274:	add	r7, r7, #1
   1a278:	b	1a2b4 <argp_parse@@Base+0x293c>
   1a27c:	ldr	r0, [fp, #20]
   1a280:	cmp	r0, #0
   1a284:	bne	1a2ac <argp_parse@@Base+0x2934>
   1a288:	movw	r0, #49795	; 0xc283
   1a28c:	mov	r8, r2
   1a290:	mov	r4, r3
   1a294:	movt	r0, #1
   1a298:	bl	1159c <getenv@plt>
   1a29c:	mov	r3, r4
   1a2a0:	mov	r2, r8
   1a2a4:	cmp	r0, #0
   1a2a8:	beq	1a924 <argp_parse@@Base+0x2fac>
   1a2ac:	mov	r0, #0
   1a2b0:	str	r0, [r2, #24]
   1a2b4:	mov	r0, #1
   1a2b8:	str	r0, [r2, #16]
   1a2bc:	ldrb	r0, [r7]
   1a2c0:	ldr	r4, [r2, #20]
   1a2c4:	str	r5, [sp, #48]	; 0x30
   1a2c8:	subs	r0, r0, #58	; 0x3a
   1a2cc:	movne	r0, r6
   1a2d0:	cmp	r4, #0
   1a2d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2d8:	ldrbne	r0, [r4]
   1a2dc:	cmpne	r0, #0
   1a2e0:	bne	1a340 <argp_parse@@Base+0x29c8>
   1a2e4:	mov	r4, r2
   1a2e8:	mov	r6, r2
   1a2ec:	str	r7, [sp, #32]
   1a2f0:	ldr	r1, [r4, #32]!
   1a2f4:	cmp	r1, r9
   1a2f8:	mov	r8, r1
   1a2fc:	strgt	r9, [r4]
   1a300:	movgt	r8, r9
   1a304:	ldr	r5, [r6, #28]!
   1a308:	cmp	r5, r9
   1a30c:	strgt	r9, [r6]
   1a310:	movgt	r5, r9
   1a314:	ldr	r7, [r2, #24]
   1a318:	cmp	r7, #1
   1a31c:	bne	1a634 <argp_parse@@Base+0x2cbc>
   1a320:	cmp	r5, r8
   1a324:	cmpne	r8, r9
   1a328:	bne	1a3f8 <argp_parse@@Base+0x2a80>
   1a32c:	cmp	r8, r9
   1a330:	mov	r1, r6
   1a334:	mov	r0, r9
   1a338:	bne	1a5ec <argp_parse@@Base+0x2c74>
   1a33c:	b	1a5f4 <argp_parse@@Base+0x2c7c>
   1a340:	str	r3, [fp, #-40]	; 0xffffffd8
   1a344:	add	r8, r4, #1
   1a348:	mov	r0, r7
   1a34c:	mov	r5, r2
   1a350:	str	r8, [r2, #20]
   1a354:	ldrb	r6, [r4]
   1a358:	mov	r1, r6
   1a35c:	bl	11620 <strchr@plt>
   1a360:	ldrb	r1, [r4, #1]
   1a364:	mov	r3, r5
   1a368:	cmp	r1, #0
   1a36c:	orr	r1, r6, #1
   1a370:	addeq	r9, r9, #1
   1a374:	streq	r9, [r5]
   1a378:	cmp	r1, #59	; 0x3b
   1a37c:	cmpne	r0, #0
   1a380:	bne	1a39c <argp_parse@@Base+0x2a24>
   1a384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a388:	cmp	r0, #0
   1a38c:	bne	1a9e4 <argp_parse@@Base+0x306c>
   1a390:	str	r6, [r3, #8]
   1a394:	mov	r6, #63	; 0x3f
   1a398:	b	1a918 <argp_parse@@Base+0x2fa0>
   1a39c:	ldrb	r2, [r0]
   1a3a0:	ldrb	r1, [r0, #1]
   1a3a4:	cmp	r2, #87	; 0x57
   1a3a8:	bne	1a714 <argp_parse@@Base+0x2d9c>
   1a3ac:	ldr	r2, [sp, #48]	; 0x30
   1a3b0:	cmp	r2, #0
   1a3b4:	beq	1a714 <argp_parse@@Base+0x2d9c>
   1a3b8:	cmp	r1, #59	; 0x3b
   1a3bc:	bne	1a714 <argp_parse@@Base+0x2d9c>
   1a3c0:	ldrb	r0, [r8]
   1a3c4:	cmp	r0, #0
   1a3c8:	bne	1aa14 <argp_parse@@Base+0x309c>
   1a3cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3d0:	cmp	r9, r0
   1a3d4:	bne	1aa10 <argp_parse@@Base+0x3098>
   1a3d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3dc:	cmp	r0, #0
   1a3e0:	bne	1aa9c <argp_parse@@Base+0x3124>
   1a3e4:	str	r6, [r3, #8]
   1a3e8:	ldrb	r6, [r7]
   1a3ec:	cmp	r6, #58	; 0x3a
   1a3f0:	movwne	r6, #63	; 0x3f
   1a3f4:	b	1a918 <argp_parse@@Base+0x2fa0>
   1a3f8:	cmp	r9, r8
   1a3fc:	str	r7, [sp, #20]
   1a400:	str	r6, [sp, #24]
   1a404:	str	r5, [sp, #36]	; 0x24
   1a408:	str	r4, [sp, #28]
   1a40c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a410:	ble	1a5c4 <argp_parse@@Base+0x2c4c>
   1a414:	ldr	r0, [sp, #36]	; 0x24
   1a418:	cmp	r0, r8
   1a41c:	bge	1a5c4 <argp_parse@@Base+0x2c4c>
   1a420:	add	r0, sl, r8, lsl #2
   1a424:	mvn	r1, r1
   1a428:	ldr	r2, [sp, #36]	; 0x24
   1a42c:	mov	r3, r9
   1a430:	str	r0, [fp, #-32]	; 0xffffffe0
   1a434:	mvn	r0, r9
   1a438:	cmp	r0, r1
   1a43c:	movgt	r1, r0
   1a440:	add	r0, r1, #1
   1a444:	str	r1, [fp, #-36]	; 0xffffffdc
   1a448:	str	r0, [sp, #44]	; 0x2c
   1a44c:	add	r0, sl, #4
   1a450:	str	r0, [sp, #40]	; 0x28
   1a454:	sub	ip, r8, r2
   1a458:	sub	r7, r3, r8
   1a45c:	cmp	r7, ip
   1a460:	ble	1a510 <argp_parse@@Base+0x2b98>
   1a464:	sub	r4, r3, ip
   1a468:	cmp	ip, #1
   1a46c:	blt	1a508 <argp_parse@@Base+0x2b90>
   1a470:	mov	r7, #0
   1a474:	cmp	ip, #4
   1a478:	bcc	1a4d0 <argp_parse@@Base+0x2b58>
   1a47c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a480:	ldr	r1, [sp, #40]	; 0x28
   1a484:	add	lr, sl, r2, lsl #2
   1a488:	add	r0, r0, r3
   1a48c:	add	r0, r0, r2
   1a490:	add	r0, r1, r0, lsl #2
   1a494:	add	r1, sl, r3, lsl #2
   1a498:	cmp	lr, r1
   1a49c:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1a4a0:	cmpcc	r0, r1
   1a4a4:	bcc	1a4d0 <argp_parse@@Base+0x2b58>
   1a4a8:	bic	r7, ip, #3
   1a4ac:	mov	r1, r7
   1a4b0:	vld1.32	{d16-d17}, [r0]
   1a4b4:	vld1.32	{d18-d19}, [lr]
   1a4b8:	subs	r1, r1, #4
   1a4bc:	vst1.32	{d16-d17}, [lr]!
   1a4c0:	vst1.32	{d18-d19}, [r0]!
   1a4c4:	bne	1a4b0 <argp_parse@@Base+0x2b38>
   1a4c8:	cmp	ip, r7
   1a4cc:	beq	1a508 <argp_parse@@Base+0x2b90>
   1a4d0:	add	r0, sl, r3, lsl #2
   1a4d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4d8:	add	r1, r7, r2
   1a4dc:	add	r1, sl, r1, lsl #2
   1a4e0:	add	r3, r3, r7
   1a4e4:	add	r3, r3, r2
   1a4e8:	add	r7, r0, r3, lsl #2
   1a4ec:	ldr	r5, [r1]
   1a4f0:	add	r3, r3, #1
   1a4f4:	ldr	r6, [r7, #4]
   1a4f8:	cmn	r3, #1
   1a4fc:	str	r6, [r1], #4
   1a500:	str	r5, [r7, #4]
   1a504:	bne	1a4e8 <argp_parse@@Base+0x2b70>
   1a508:	mov	r3, r4
   1a50c:	b	1a5b8 <argp_parse@@Base+0x2c40>
   1a510:	cmp	r7, #1
   1a514:	blt	1a5b4 <argp_parse@@Base+0x2c3c>
   1a518:	mov	r4, #0
   1a51c:	cmp	r7, #3
   1a520:	bls	1a580 <argp_parse@@Base+0x2c08>
   1a524:	add	r1, sl, r3, lsl #2
   1a528:	add	r0, sl, r2, lsl #2
   1a52c:	cmp	r0, r1
   1a530:	bcs	1a554 <argp_parse@@Base+0x2bdc>
   1a534:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a538:	ldr	r6, [sp, #40]	; 0x28
   1a53c:	add	r1, r1, r3
   1a540:	add	r1, r1, r2
   1a544:	add	r1, r6, r1, lsl #2
   1a548:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a54c:	cmp	r6, r1
   1a550:	bcc	1a580 <argp_parse@@Base+0x2c08>
   1a554:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a558:	bic	r4, r7, #3
   1a55c:	mov	r1, r4
   1a560:	vld1.32	{d16-d17}, [r6]
   1a564:	vld1.32	{d18-d19}, [r0]
   1a568:	subs	r1, r1, #4
   1a56c:	vst1.32	{d16-d17}, [r0]!
   1a570:	vst1.32	{d18-d19}, [r6]!
   1a574:	bne	1a560 <argp_parse@@Base+0x2be8>
   1a578:	cmp	r7, r4
   1a57c:	beq	1a5b4 <argp_parse@@Base+0x2c3c>
   1a580:	ldr	r1, [sp, #44]	; 0x2c
   1a584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a588:	add	r6, r4, r2
   1a58c:	add	r1, r1, r3
   1a590:	add	r0, r0, r4, lsl #2
   1a594:	sub	r1, r1, r4
   1a598:	add	r4, sl, r6, lsl #2
   1a59c:	ldr	r6, [r4]
   1a5a0:	ldr	r5, [r0]
   1a5a4:	subs	r1, r1, #1
   1a5a8:	str	r5, [r4], #4
   1a5ac:	str	r6, [r0], #4
   1a5b0:	bne	1a59c <argp_parse@@Base+0x2c24>
   1a5b4:	add	r2, r7, r2
   1a5b8:	cmp	r3, r8
   1a5bc:	cmpgt	r8, r2
   1a5c0:	bgt	1a454 <argp_parse@@Base+0x2adc>
   1a5c4:	ldr	r0, [sp, #36]	; 0x24
   1a5c8:	ldr	r4, [sp, #28]
   1a5cc:	ldr	r6, [sp, #24]
   1a5d0:	ldr	r2, [fp, #16]
   1a5d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5d8:	ldr	r7, [sp, #20]
   1a5dc:	add	r0, r0, r9
   1a5e0:	mov	r1, r4
   1a5e4:	sub	r0, r0, r8
   1a5e8:	str	r0, [r6]
   1a5ec:	mov	r5, r0
   1a5f0:	str	r9, [r1]
   1a5f4:	mov	r8, r9
   1a5f8:	cmp	r9, r3
   1a5fc:	bge	1a62c <argp_parse@@Base+0x2cb4>
   1a600:	ldr	r0, [sl, r8, lsl #2]
   1a604:	ldrb	r1, [r0]
   1a608:	cmp	r1, #45	; 0x2d
   1a60c:	bne	1a61c <argp_parse@@Base+0x2ca4>
   1a610:	ldrb	r0, [r0, #1]
   1a614:	cmp	r0, #0
   1a618:	bne	1a62c <argp_parse@@Base+0x2cb4>
   1a61c:	add	r8, r8, #1
   1a620:	cmp	r8, r3
   1a624:	str	r8, [r2]
   1a628:	blt	1a600 <argp_parse@@Base+0x2c88>
   1a62c:	mov	r9, r8
   1a630:	str	r8, [r4]
   1a634:	cmp	r9, r3
   1a638:	beq	1a90c <argp_parse@@Base+0x2f94>
   1a63c:	ldr	r0, [sl, r9, lsl #2]
   1a640:	movw	r1, #48739	; 0xbe63
   1a644:	str	r3, [fp, #-40]	; 0xffffffd8
   1a648:	movt	r1, #1
   1a64c:	bl	11440 <strcmp@plt>
   1a650:	cmp	r0, #0
   1a654:	beq	1a6e4 <argp_parse@@Base+0x2d6c>
   1a658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a65c:	ldr	r2, [fp, #16]
   1a660:	cmp	r9, r3
   1a664:	beq	1a90c <argp_parse@@Base+0x2f94>
   1a668:	ldr	r0, [sl, r9, lsl #2]
   1a66c:	mvn	r6, #0
   1a670:	ldrb	r1, [r0]
   1a674:	cmp	r1, #45	; 0x2d
   1a678:	bne	1a73c <argp_parse@@Base+0x2dc4>
   1a67c:	mov	r4, r0
   1a680:	ldrb	r1, [r4, #1]!
   1a684:	cmp	r1, #0
   1a688:	beq	1a73c <argp_parse@@Base+0x2dc4>
   1a68c:	ldr	r6, [sp, #48]	; 0x30
   1a690:	cmp	r6, #0
   1a694:	beq	1a944 <argp_parse@@Base+0x2fcc>
   1a698:	ldr	r5, [fp, #12]
   1a69c:	ldr	r7, [sp, #32]
   1a6a0:	cmp	r1, #45	; 0x2d
   1a6a4:	bne	1a94c <argp_parse@@Base+0x2fd4>
   1a6a8:	add	r0, r0, #2
   1a6ac:	mov	r1, sl
   1a6b0:	str	r0, [r2, #20]
   1a6b4:	ldr	r0, [fp, #8]
   1a6b8:	stm	sp, {r0, r5}
   1a6bc:	str	r2, [sp, #8]
   1a6c0:	mov	r2, r7
   1a6c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6c8:	str	r0, [sp, #12]
   1a6cc:	movw	r0, #48739	; 0xbe63
   1a6d0:	movt	r0, #1
   1a6d4:	str	r0, [sp, #16]
   1a6d8:	mov	r0, r3
   1a6dc:	mov	r3, r6
   1a6e0:	b	1aa54 <argp_parse@@Base+0x30dc>
   1a6e4:	ldr	r2, [fp, #16]
   1a6e8:	add	r3, r9, #1
   1a6ec:	cmp	r5, r8
   1a6f0:	cmpne	r8, r3
   1a6f4:	str	r3, [r2]
   1a6f8:	bne	1a754 <argp_parse@@Base+0x2ddc>
   1a6fc:	cmp	r5, r8
   1a700:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1a704:	mov	r1, r6
   1a708:	mov	r0, r3
   1a70c:	beq	1a8fc <argp_parse@@Base+0x2f84>
   1a710:	b	1a904 <argp_parse@@Base+0x2f8c>
   1a714:	cmp	r1, #58	; 0x3a
   1a718:	bne	1a918 <argp_parse@@Base+0x2fa0>
   1a71c:	ldrb	r0, [r0, #2]
   1a720:	ldrb	r1, [r8]
   1a724:	cmp	r0, #58	; 0x3a
   1a728:	bne	1a92c <argp_parse@@Base+0x2fb4>
   1a72c:	cmp	r1, #0
   1a730:	bne	1a934 <argp_parse@@Base+0x2fbc>
   1a734:	mov	r0, #0
   1a738:	b	1aa6c <argp_parse@@Base+0x30f4>
   1a73c:	cmp	r7, #0
   1a740:	strne	r0, [r2, #12]
   1a744:	addne	r0, r9, #1
   1a748:	movne	r6, #1
   1a74c:	strne	r0, [r2]
   1a750:	b	1a918 <argp_parse@@Base+0x2fa0>
   1a754:	cmp	r9, r8
   1a758:	str	r3, [fp, #-36]	; 0xffffffdc
   1a75c:	str	r6, [sp, #24]
   1a760:	str	r5, [sp, #36]	; 0x24
   1a764:	str	r4, [sp, #28]
   1a768:	blt	1a8d8 <argp_parse@@Base+0x2f60>
   1a76c:	ldr	r0, [sp, #36]	; 0x24
   1a770:	cmp	r0, r8
   1a774:	bge	1a8d8 <argp_parse@@Base+0x2f60>
   1a778:	sub	r0, sl, r8, lsl #2
   1a77c:	ldr	r7, [sp, #36]	; 0x24
   1a780:	add	r9, sl, r8, lsl #2
   1a784:	str	r0, [fp, #-44]	; 0xffffffd4
   1a788:	rsb	r0, r8, #0
   1a78c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a790:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a794:	sub	r4, r8, r7
   1a798:	sub	r3, r0, r8
   1a79c:	cmp	r3, r4
   1a7a0:	ble	1a834 <argp_parse@@Base+0x2ebc>
   1a7a4:	sub	r3, r0, r4
   1a7a8:	cmp	r4, #1
   1a7ac:	blt	1a82c <argp_parse@@Base+0x2eb4>
   1a7b0:	mov	r1, #0
   1a7b4:	cmp	r4, #4
   1a7b8:	bcc	1a7fc <argp_parse@@Base+0x2e84>
   1a7bc:	add	r2, sl, r0, lsl #2
   1a7c0:	add	lr, sl, r7, lsl #2
   1a7c4:	add	ip, sl, r3, lsl #2
   1a7c8:	cmp	lr, r2
   1a7cc:	cmpcc	ip, r9
   1a7d0:	bcc	1a7fc <argp_parse@@Base+0x2e84>
   1a7d4:	bic	r1, r4, #3
   1a7d8:	mov	r2, r1
   1a7dc:	vld1.32	{d16-d17}, [ip]
   1a7e0:	vld1.32	{d18-d19}, [lr]
   1a7e4:	subs	r2, r2, #4
   1a7e8:	vst1.32	{d16-d17}, [lr]!
   1a7ec:	vst1.32	{d18-d19}, [ip]!
   1a7f0:	bne	1a7dc <argp_parse@@Base+0x2e64>
   1a7f4:	cmp	r4, r1
   1a7f8:	beq	1a82c <argp_parse@@Base+0x2eb4>
   1a7fc:	add	r0, r7, r0
   1a800:	sub	r2, r8, r1
   1a804:	add	r1, r1, r7
   1a808:	add	r1, sl, r1, lsl #2
   1a80c:	add	r0, sl, r0, lsl #2
   1a810:	ldr	r6, [r0, -r2, lsl #2]
   1a814:	ldr	r5, [r1]
   1a818:	str	r6, [r1], #4
   1a81c:	str	r5, [r0, -r2, lsl #2]
   1a820:	sub	r2, r2, #1
   1a824:	cmp	r7, r2
   1a828:	bne	1a810 <argp_parse@@Base+0x2e98>
   1a82c:	mov	r0, r3
   1a830:	b	1a8cc <argp_parse@@Base+0x2f54>
   1a834:	cmp	r3, #1
   1a838:	blt	1a8c8 <argp_parse@@Base+0x2f50>
   1a83c:	mov	r4, #0
   1a840:	cmp	r3, #3
   1a844:	bls	1a894 <argp_parse@@Base+0x2f1c>
   1a848:	add	r2, sl, r0, lsl #2
   1a84c:	add	r1, sl, r7, lsl #2
   1a850:	cmp	r1, r2
   1a854:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1a858:	addcc	r2, r7, r0
   1a85c:	addcc	r2, r6, r2, lsl #2
   1a860:	cmpcc	r9, r2
   1a864:	bcc	1a894 <argp_parse@@Base+0x2f1c>
   1a868:	bic	r4, r3, #3
   1a86c:	mov	r6, r9
   1a870:	mov	r2, r4
   1a874:	vld1.32	{d16-d17}, [r6]
   1a878:	vld1.32	{d18-d19}, [r1]
   1a87c:	subs	r2, r2, #4
   1a880:	vst1.32	{d16-d17}, [r1]!
   1a884:	vst1.32	{d18-d19}, [r6]!
   1a888:	bne	1a874 <argp_parse@@Base+0x2efc>
   1a88c:	cmp	r3, r4
   1a890:	beq	1a8c8 <argp_parse@@Base+0x2f50>
   1a894:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a898:	add	r2, r4, r7
   1a89c:	add	r6, r8, r4
   1a8a0:	add	r2, sl, r2, lsl #2
   1a8a4:	add	r1, r1, r0
   1a8a8:	sub	r1, r1, r4
   1a8ac:	add	r4, sl, r6, lsl #2
   1a8b0:	ldr	r6, [r2]
   1a8b4:	ldr	r5, [r4]
   1a8b8:	subs	r1, r1, #1
   1a8bc:	str	r5, [r2], #4
   1a8c0:	str	r6, [r4], #4
   1a8c4:	bne	1a8b0 <argp_parse@@Base+0x2f38>
   1a8c8:	add	r7, r3, r7
   1a8cc:	cmp	r0, r8
   1a8d0:	cmpgt	r8, r7
   1a8d4:	bgt	1a794 <argp_parse@@Base+0x2e1c>
   1a8d8:	ldr	r0, [sp, #36]	; 0x24
   1a8dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a8e0:	ldr	r1, [sp, #24]
   1a8e4:	ldr	r2, [fp, #16]
   1a8e8:	add	r0, r0, r3
   1a8ec:	sub	r0, r0, r8
   1a8f0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1a8f4:	str	r0, [r1]
   1a8f8:	ldr	r1, [sp, #28]
   1a8fc:	mov	r5, r0
   1a900:	str	r3, [r1]
   1a904:	str	r8, [r2]
   1a908:	str	r8, [r2, #32]
   1a90c:	cmp	r5, r8
   1a910:	mvn	r6, #0
   1a914:	strne	r5, [r2]
   1a918:	mov	r0, r6
   1a91c:	sub	sp, fp, #28
   1a920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a924:	mov	r0, #1
   1a928:	b	1a2b0 <argp_parse@@Base+0x2938>
   1a92c:	cmp	r1, #0
   1a930:	beq	1a9b8 <argp_parse@@Base+0x3040>
   1a934:	add	r0, r9, #1
   1a938:	str	r8, [r3, #12]
   1a93c:	str	r0, [r3]
   1a940:	b	1aa70 <argp_parse@@Base+0x30f8>
   1a944:	ldr	r7, [sp, #32]
   1a948:	b	1aa94 <argp_parse@@Base+0x311c>
   1a94c:	cmp	r5, #0
   1a950:	beq	1aa94 <argp_parse@@Base+0x311c>
   1a954:	ldrb	r0, [r0, #2]
   1a958:	cmp	r0, #0
   1a95c:	beq	1aa7c <argp_parse@@Base+0x3104>
   1a960:	ldr	r1, [fp, #8]
   1a964:	str	r4, [r2, #20]
   1a968:	movw	r0, #48740	; 0xbe64
   1a96c:	movt	r0, #1
   1a970:	stm	sp, {r1, r5}
   1a974:	str	r2, [sp, #8]
   1a978:	str	r0, [sp, #16]
   1a97c:	mov	r0, r3
   1a980:	mov	r2, r7
   1a984:	mov	r3, r6
   1a988:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a98c:	str	r1, [sp, #12]
   1a990:	mov	r1, sl
   1a994:	bl	1aaf4 <argp_parse@@Base+0x317c>
   1a998:	ldr	r2, [fp, #16]
   1a99c:	mov	r6, r0
   1a9a0:	cmn	r0, #1
   1a9a4:	bne	1a918 <argp_parse@@Base+0x2fa0>
   1a9a8:	ldr	r9, [r2]
   1a9ac:	ldr	r0, [sl, r9, lsl #2]
   1a9b0:	add	r4, r0, #1
   1a9b4:	b	1aa94 <argp_parse@@Base+0x311c>
   1a9b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9bc:	cmp	r9, r0
   1a9c0:	bne	1aa60 <argp_parse@@Base+0x30e8>
   1a9c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9c8:	cmp	r0, #0
   1a9cc:	bne	1aac8 <argp_parse@@Base+0x3150>
   1a9d0:	str	r6, [r3, #8]
   1a9d4:	ldrb	r6, [r7]
   1a9d8:	cmp	r6, #58	; 0x3a
   1a9dc:	movwne	r6, #63	; 0x3f
   1a9e0:	b	1aa70 <argp_parse@@Base+0x30f8>
   1a9e4:	movw	r0, #54336	; 0xd440
   1a9e8:	ldr	r2, [sl]
   1a9ec:	movw	r1, #49722	; 0xc23a
   1a9f0:	mov	r4, r3
   1a9f4:	mov	r3, r6
   1a9f8:	movt	r0, #2
   1a9fc:	movt	r1, #1
   1aa00:	ldr	r0, [r0]
   1aa04:	bl	1162c <fprintf@plt>
   1aa08:	mov	r3, r4
   1aa0c:	b	1a390 <argp_parse@@Base+0x2a18>
   1aa10:	ldr	r8, [sl, r9, lsl #2]
   1aa14:	ldr	r2, [fp, #8]
   1aa18:	mov	r0, #0
   1aa1c:	str	r8, [r3, #12]
   1aa20:	movw	r1, #49791	; 0xc27f
   1aa24:	str	r0, [r3, #12]
   1aa28:	str	r8, [r3, #20]
   1aa2c:	movt	r1, #1
   1aa30:	str	r2, [sp]
   1aa34:	stmib	sp, {r0, r3}
   1aa38:	str	r1, [sp, #16]
   1aa3c:	mov	r1, sl
   1aa40:	mov	r2, r7
   1aa44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa48:	ldr	r3, [sp, #48]	; 0x30
   1aa4c:	str	r0, [sp, #12]
   1aa50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa54:	bl	1aaf4 <argp_parse@@Base+0x317c>
   1aa58:	sub	sp, fp, #28
   1aa5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa60:	add	r0, r9, #1
   1aa64:	str	r0, [r3]
   1aa68:	ldr	r0, [sl, r9, lsl #2]
   1aa6c:	str	r0, [r3, #12]
   1aa70:	mov	r0, #0
   1aa74:	str	r0, [r3, #20]
   1aa78:	b	1a918 <argp_parse@@Base+0x2fa0>
   1aa7c:	mov	r0, r7
   1aa80:	bl	11620 <strchr@plt>
   1aa84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aa88:	ldr	r2, [fp, #16]
   1aa8c:	cmp	r0, #0
   1aa90:	beq	1a960 <argp_parse@@Base+0x2fe8>
   1aa94:	str	r4, [r2, #20]
   1aa98:	b	1a344 <argp_parse@@Base+0x29cc>
   1aa9c:	movw	r0, #54336	; 0xd440
   1aaa0:	ldr	r2, [sl]
   1aaa4:	movw	r1, #49750	; 0xc256
   1aaa8:	mov	r4, r3
   1aaac:	mov	r3, r6
   1aab0:	movt	r0, #2
   1aab4:	movt	r1, #1
   1aab8:	ldr	r0, [r0]
   1aabc:	bl	1162c <fprintf@plt>
   1aac0:	mov	r3, r4
   1aac4:	b	1a3e4 <argp_parse@@Base+0x2a6c>
   1aac8:	movw	r0, #54336	; 0xd440
   1aacc:	ldr	r2, [sl]
   1aad0:	movw	r1, #49750	; 0xc256
   1aad4:	mov	r4, r3
   1aad8:	mov	r3, r6
   1aadc:	movt	r0, #2
   1aae0:	movt	r1, #1
   1aae4:	ldr	r0, [r0]
   1aae8:	bl	1162c <fprintf@plt>
   1aaec:	mov	r3, r4
   1aaf0:	b	1a9d0 <argp_parse@@Base+0x3058>
   1aaf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aaf8:	add	fp, sp, #28
   1aafc:	sub	sp, sp, #44	; 0x2c
   1ab00:	str	r0, [sp, #12]
   1ab04:	ldr	r0, [fp, #16]
   1ab08:	ldr	r5, [fp, #8]
   1ab0c:	str	r2, [sp, #16]
   1ab10:	str	r1, [sp, #20]
   1ab14:	ldr	r9, [r0, #20]
   1ab18:	mov	r6, r9
   1ab1c:	b	1ab24 <argp_parse@@Base+0x31ac>
   1ab20:	add	r6, r6, #1
   1ab24:	ldrb	r0, [r6]
   1ab28:	cmp	r0, #0
   1ab2c:	cmpne	r0, #61	; 0x3d
   1ab30:	bne	1ab20 <argp_parse@@Base+0x31a8>
   1ab34:	ldr	sl, [r3]
   1ab38:	mvn	ip, #0
   1ab3c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ab40:	cmp	sl, #0
   1ab44:	beq	1ad48 <argp_parse@@Base+0x33d0>
   1ab48:	sub	r4, r6, r9
   1ab4c:	mov	r8, #0
   1ab50:	mov	r5, sl
   1ab54:	mov	r7, r3
   1ab58:	mov	r0, r5
   1ab5c:	mov	r1, r9
   1ab60:	mov	r2, r4
   1ab64:	bl	11764 <strncmp@plt>
   1ab68:	cmp	r0, #0
   1ab6c:	bne	1ab80 <argp_parse@@Base+0x3208>
   1ab70:	mov	r0, r5
   1ab74:	bl	11614 <strlen@plt>
   1ab78:	cmp	r4, r0
   1ab7c:	beq	1ad74 <argp_parse@@Base+0x33fc>
   1ab80:	ldr	r5, [r7, #16]!
   1ab84:	add	r8, r8, #1
   1ab88:	cmp	r5, #0
   1ab8c:	bne	1ab58 <argp_parse@@Base+0x31e0>
   1ab90:	cmp	sl, #0
   1ab94:	beq	1ad80 <argp_parse@@Base+0x3408>
   1ab98:	mvn	r0, #0
   1ab9c:	str	r4, [sp, #36]	; 0x24
   1aba0:	mov	r4, #0
   1aba4:	mov	r5, #0
   1aba8:	mov	r7, #0
   1abac:	str	r0, [sp, #24]
   1abb0:	mov	r0, #0
   1abb4:	str	r0, [sp, #32]
   1abb8:	mov	r0, #0
   1abbc:	str	r0, [sp, #8]
   1abc0:	mov	r0, #0
   1abc4:	str	r0, [sp, #28]
   1abc8:	b	1abe0 <argp_parse@@Base+0x3268>
   1abcc:	ldr	r0, [fp, #16]
   1abd0:	add	r1, r1, #16
   1abd4:	add	r5, r5, #1
   1abd8:	mov	r4, r1
   1abdc:	ldr	r9, [r0, #20]
   1abe0:	ldr	r2, [sp, #36]	; 0x24
   1abe4:	mov	r0, sl
   1abe8:	mov	r1, r9
   1abec:	bl	11764 <strncmp@plt>
   1abf0:	cmp	r0, #0
   1abf4:	beq	1ac14 <argp_parse@@Base+0x329c>
   1abf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1abfc:	mov	r1, r4
   1ac00:	add	r0, r3, r5, lsl #4
   1ac04:	ldr	sl, [r0, #16]
   1ac08:	cmp	sl, #0
   1ac0c:	bne	1abcc <argp_parse@@Base+0x3254>
   1ac10:	b	1ad60 <argp_parse@@Base+0x33e8>
   1ac14:	cmp	r7, #0
   1ac18:	beq	1accc <argp_parse@@Base+0x3354>
   1ac1c:	ldr	r0, [fp, #12]
   1ac20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac24:	cmp	r0, #0
   1ac28:	bne	1ac50 <argp_parse@@Base+0x32d8>
   1ac2c:	add	r0, r3, r5, lsl #4
   1ac30:	ldr	r2, [r7, #4]
   1ac34:	ldr	r1, [r0, #4]
   1ac38:	cmp	r2, r1
   1ac3c:	bne	1ac50 <argp_parse@@Base+0x32d8>
   1ac40:	ldr	r1, [r0, #8]
   1ac44:	ldr	r2, [r7, #8]
   1ac48:	cmp	r2, r1
   1ac4c:	beq	1ad04 <argp_parse@@Base+0x338c>
   1ac50:	ldr	r0, [sp, #32]
   1ac54:	mov	r1, r4
   1ac58:	cmp	r0, #0
   1ac5c:	bne	1ac00 <argp_parse@@Base+0x3288>
   1ac60:	ldr	r0, [fp, #20]
   1ac64:	cmp	r0, #0
   1ac68:	beq	1ace0 <argp_parse@@Base+0x3368>
   1ac6c:	ldr	r9, [sp, #28]
   1ac70:	mov	r0, #0
   1ac74:	str	r0, [sp, #32]
   1ac78:	cmp	r9, #0
   1ac7c:	bne	1acf4 <argp_parse@@Base+0x337c>
   1ac80:	mov	r0, r8
   1ac84:	bl	199c0 <argp_parse@@Base+0x2048>
   1ac88:	cmp	r0, #0
   1ac8c:	beq	1ad34 <argp_parse@@Base+0x33bc>
   1ac90:	mov	r9, r0
   1ac94:	mov	r0, #0
   1ac98:	mov	r1, #0
   1ac9c:	mov	r2, r8
   1aca0:	str	r0, [sp, #32]
   1aca4:	mov	r0, r9
   1aca8:	bl	11668 <memset@plt>
   1acac:	ldr	r0, [sp, #24]
   1acb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acb4:	mov	r1, #1
   1acb8:	mov	r2, #1
   1acbc:	str	r1, [sp, #8]
   1acc0:	mov	r1, r4
   1acc4:	strb	r2, [r9, r0]
   1acc8:	b	1acf4 <argp_parse@@Base+0x337c>
   1accc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acd0:	mov	r1, r4
   1acd4:	str	r5, [sp, #24]
   1acd8:	add	r7, r3, r4
   1acdc:	b	1ac00 <argp_parse@@Base+0x3288>
   1ace0:	ldr	r9, [sp, #28]
   1ace4:	mov	r0, #1
   1ace8:	str	r0, [sp, #32]
   1acec:	cmp	r9, #0
   1acf0:	beq	1ad28 <argp_parse@@Base+0x33b0>
   1acf4:	mov	r0, #1
   1acf8:	str	r9, [sp, #28]
   1acfc:	strb	r0, [r9, r5]
   1ad00:	b	1ac00 <argp_parse@@Base+0x3288>
   1ad04:	ldr	r1, [sp, #32]
   1ad08:	cmp	r1, #0
   1ad0c:	bne	1abfc <argp_parse@@Base+0x3284>
   1ad10:	ldr	r0, [r0, #12]
   1ad14:	ldr	r1, [r7, #12]
   1ad18:	cmp	r1, r0
   1ad1c:	mov	r1, r4
   1ad20:	bne	1ac60 <argp_parse@@Base+0x32e8>
   1ad24:	b	1ac00 <argp_parse@@Base+0x3288>
   1ad28:	mov	r0, #0
   1ad2c:	str	r0, [sp, #28]
   1ad30:	b	1ac00 <argp_parse@@Base+0x3288>
   1ad34:	mov	r0, #1
   1ad38:	str	r0, [sp, #32]
   1ad3c:	mov	r0, #0
   1ad40:	str	r0, [sp, #28]
   1ad44:	b	1abf8 <argp_parse@@Base+0x3280>
   1ad48:	mov	r0, #0
   1ad4c:	mov	r8, #0
   1ad50:	mov	r7, #0
   1ad54:	mov	sl, #0
   1ad58:	mov	r4, #0
   1ad5c:	b	1ad98 <argp_parse@@Base+0x3420>
   1ad60:	ldr	r5, [fp, #8]
   1ad64:	ldr	ip, [sp, #24]
   1ad68:	ldr	sl, [sp, #28]
   1ad6c:	ldr	r4, [sp, #8]
   1ad70:	b	1ad9c <argp_parse@@Base+0x3424>
   1ad74:	ldr	r5, [fp, #8]
   1ad78:	mov	ip, r8
   1ad7c:	b	1ae04 <argp_parse@@Base+0x348c>
   1ad80:	ldr	r5, [fp, #8]
   1ad84:	mov	r0, #0
   1ad88:	mov	r7, #0
   1ad8c:	mov	sl, #0
   1ad90:	mov	r4, #0
   1ad94:	mvn	ip, #0
   1ad98:	str	r0, [sp, #32]
   1ad9c:	cmp	sl, #0
   1ada0:	ldreq	r0, [sp, #32]
   1ada4:	cmpeq	r0, #0
   1ada8:	beq	1adfc <argp_parse@@Base+0x3484>
   1adac:	ldr	r0, [fp, #20]
   1adb0:	cmp	r0, #0
   1adb4:	bne	1af6c <argp_parse@@Base+0x35f4>
   1adb8:	cmp	r4, #0
   1adbc:	beq	1adc8 <argp_parse@@Base+0x3450>
   1adc0:	mov	r0, sl
   1adc4:	bl	18c48 <argp_parse@@Base+0x12d0>
   1adc8:	ldr	r0, [fp, #16]
   1adcc:	ldr	r4, [r0, #20]
   1add0:	mov	r5, r0
   1add4:	mov	r0, r4
   1add8:	bl	11614 <strlen@plt>
   1addc:	mov	r1, #0
   1ade0:	add	r0, r4, r0
   1ade4:	str	r1, [r5, #8]
   1ade8:	str	r0, [r5, #20]
   1adec:	ldr	r0, [r5]
   1adf0:	add	r0, r0, #1
   1adf4:	str	r0, [r5]
   1adf8:	b	1af30 <argp_parse@@Base+0x35b8>
   1adfc:	cmp	r7, #0
   1ae00:	beq	1aea0 <argp_parse@@Base+0x3528>
   1ae04:	ldr	r1, [fp, #16]
   1ae08:	mov	r0, #0
   1ae0c:	str	r0, [r1, #20]
   1ae10:	mov	r2, r1
   1ae14:	ldr	r1, [r1]
   1ae18:	add	r0, r1, #1
   1ae1c:	str	r0, [r2]
   1ae20:	ldrb	r3, [r6]
   1ae24:	ldr	r2, [r7, #4]
   1ae28:	cmp	r3, #0
   1ae2c:	beq	1ae48 <argp_parse@@Base+0x34d0>
   1ae30:	cmp	r2, #0
   1ae34:	beq	1af18 <argp_parse@@Base+0x35a0>
   1ae38:	ldr	r1, [fp, #16]
   1ae3c:	add	r0, r6, #1
   1ae40:	str	r0, [r1, #12]
   1ae44:	b	1ae74 <argp_parse@@Base+0x34fc>
   1ae48:	cmp	r2, #1
   1ae4c:	bne	1ae74 <argp_parse@@Base+0x34fc>
   1ae50:	ldr	r2, [sp, #12]
   1ae54:	cmp	r0, r2
   1ae58:	bge	1af3c <argp_parse@@Base+0x35c4>
   1ae5c:	ldr	r2, [fp, #16]
   1ae60:	add	r1, r1, #2
   1ae64:	str	r1, [r2]
   1ae68:	ldr	r1, [sp, #20]
   1ae6c:	ldr	r0, [r1, r0, lsl #2]
   1ae70:	str	r0, [r2, #12]
   1ae74:	cmp	r5, #0
   1ae78:	strne	ip, [r5]
   1ae7c:	ldr	r1, [r7, #8]
   1ae80:	ldr	r0, [r7, #12]
   1ae84:	cmp	r1, #0
   1ae88:	strne	r0, [r1]
   1ae8c:	movne	r0, #0
   1ae90:	subne	sp, fp, #28
   1ae94:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae98:	sub	sp, fp, #28
   1ae9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aea0:	ldr	r0, [fp, #12]
   1aea4:	cmp	r0, #0
   1aea8:	beq	1aeec <argp_parse@@Base+0x3574>
   1aeac:	ldr	r0, [fp, #16]
   1aeb0:	ldr	r1, [sp, #20]
   1aeb4:	ldr	r0, [r0]
   1aeb8:	ldr	r0, [r1, r0, lsl #2]
   1aebc:	ldrb	r0, [r0, #1]
   1aec0:	cmp	r0, #45	; 0x2d
   1aec4:	beq	1aeec <argp_parse@@Base+0x3574>
   1aec8:	ldr	r0, [fp, #16]
   1aecc:	ldr	r0, [r0, #20]
   1aed0:	ldrb	r1, [r0]
   1aed4:	ldr	r0, [sp, #16]
   1aed8:	bl	11620 <strchr@plt>
   1aedc:	mov	r1, r0
   1aee0:	mvn	r0, #0
   1aee4:	cmp	r1, #0
   1aee8:	bne	1af64 <argp_parse@@Base+0x35ec>
   1aeec:	ldr	r0, [fp, #20]
   1aef0:	cmp	r0, #0
   1aef4:	bne	1b058 <argp_parse@@Base+0x36e0>
   1aef8:	ldr	r1, [fp, #16]
   1aefc:	mov	r0, #0
   1af00:	str	r0, [r1, #20]
   1af04:	str	r0, [r1, #8]
   1af08:	ldr	r0, [r1]
   1af0c:	add	r0, r0, #1
   1af10:	str	r0, [r1]
   1af14:	b	1af30 <argp_parse@@Base+0x35b8>
   1af18:	ldr	r0, [fp, #20]
   1af1c:	cmp	r0, #0
   1af20:	bne	1b08c <argp_parse@@Base+0x3714>
   1af24:	ldr	r0, [r7, #12]
   1af28:	ldr	r1, [fp, #16]
   1af2c:	str	r0, [r1, #8]
   1af30:	mov	r0, #63	; 0x3f
   1af34:	sub	sp, fp, #28
   1af38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af3c:	ldr	r0, [fp, #20]
   1af40:	cmp	r0, #0
   1af44:	bne	1b0bc <argp_parse@@Base+0x3744>
   1af48:	ldr	r0, [r7, #12]
   1af4c:	ldr	r1, [fp, #16]
   1af50:	str	r0, [r1, #8]
   1af54:	ldr	r0, [sp, #16]
   1af58:	ldrb	r0, [r0]
   1af5c:	cmp	r0, #58	; 0x3a
   1af60:	movwne	r0, #63	; 0x3f
   1af64:	sub	sp, fp, #28
   1af68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af6c:	movw	r5, #54336	; 0xd440
   1af70:	ldr	r1, [sp, #32]
   1af74:	movt	r5, #2
   1af78:	ldr	r0, [r5]
   1af7c:	cmp	r1, #0
   1af80:	beq	1afb4 <argp_parse@@Base+0x363c>
   1af84:	ldr	r1, [sp, #20]
   1af88:	ldr	r3, [fp, #24]
   1af8c:	ldr	r2, [r1]
   1af90:	ldr	r1, [fp, #16]
   1af94:	ldr	r1, [r1, #20]
   1af98:	str	r1, [sp]
   1af9c:	movw	r1, #49811	; 0xc293
   1afa0:	movt	r1, #1
   1afa4:	bl	1162c <fprintf@plt>
   1afa8:	cmp	r4, #0
   1afac:	bne	1adc0 <argp_parse@@Base+0x3448>
   1afb0:	b	1adc8 <argp_parse@@Base+0x3450>
   1afb4:	bl	11710 <flockfile@plt>
   1afb8:	ldr	r1, [fp, #16]
   1afbc:	ldr	r0, [sp, #20]
   1afc0:	ldr	r9, [fp, #24]
   1afc4:	ldr	r1, [r1, #20]
   1afc8:	ldr	r2, [r0]
   1afcc:	ldr	r0, [r5]
   1afd0:	mov	r3, r9
   1afd4:	str	r1, [sp]
   1afd8:	movw	r1, #49843	; 0xc2b3
   1afdc:	movt	r1, #1
   1afe0:	bl	1162c <fprintf@plt>
   1afe4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1afe8:	cmp	r8, #0
   1afec:	beq	1b038 <argp_parse@@Base+0x36c0>
   1aff0:	mov	r6, sl
   1aff4:	b	1b01c <argp_parse@@Base+0x36a4>
   1aff8:	ldr	r3, [r1]
   1affc:	ldr	r0, [r5]
   1b000:	mov	r7, r1
   1b004:	movw	r1, #49890	; 0xc2e2
   1b008:	mov	r2, r9
   1b00c:	movt	r1, #1
   1b010:	bl	1162c <fprintf@plt>
   1b014:	mov	r1, r7
   1b018:	b	1b028 <argp_parse@@Base+0x36b0>
   1b01c:	ldrb	r0, [r6]
   1b020:	cmp	r0, #0
   1b024:	bne	1aff8 <argp_parse@@Base+0x3680>
   1b028:	add	r1, r1, #16
   1b02c:	add	r6, r6, #1
   1b030:	subs	r8, r8, #1
   1b034:	bne	1b01c <argp_parse@@Base+0x36a4>
   1b038:	ldr	r1, [r5]
   1b03c:	mov	r0, #10
   1b040:	bl	116f8 <fputc@plt>
   1b044:	ldr	r0, [r5]
   1b048:	bl	11530 <funlockfile@plt>
   1b04c:	cmp	r4, #0
   1b050:	bne	1adc0 <argp_parse@@Base+0x3448>
   1b054:	b	1adc8 <argp_parse@@Base+0x3450>
   1b058:	ldr	r1, [fp, #16]
   1b05c:	ldr	r0, [sp, #20]
   1b060:	ldr	r3, [fp, #24]
   1b064:	ldr	r2, [r0]
   1b068:	movw	r0, #54336	; 0xd440
   1b06c:	ldr	r1, [r1, #20]
   1b070:	movt	r0, #2
   1b074:	ldr	r0, [r0]
   1b078:	str	r1, [sp]
   1b07c:	movw	r1, #49898	; 0xc2ea
   1b080:	movt	r1, #1
   1b084:	bl	1162c <fprintf@plt>
   1b088:	b	1aef8 <argp_parse@@Base+0x3580>
   1b08c:	ldr	r0, [sp, #20]
   1b090:	ldr	r1, [r7]
   1b094:	ldr	r3, [fp, #24]
   1b098:	ldr	r2, [r0]
   1b09c:	movw	r0, #54336	; 0xd440
   1b0a0:	str	r1, [sp]
   1b0a4:	movw	r1, #49930	; 0xc30a
   1b0a8:	movt	r0, #2
   1b0ac:	movt	r1, #1
   1b0b0:	ldr	r0, [r0]
   1b0b4:	bl	1162c <fprintf@plt>
   1b0b8:	b	1af24 <argp_parse@@Base+0x35ac>
   1b0bc:	ldr	r0, [sp, #20]
   1b0c0:	ldr	r1, [r7]
   1b0c4:	ldr	r3, [fp, #24]
   1b0c8:	ldr	r2, [r0]
   1b0cc:	movw	r0, #54336	; 0xd440
   1b0d0:	str	r1, [sp]
   1b0d4:	movw	r1, #49975	; 0xc337
   1b0d8:	movt	r0, #2
   1b0dc:	movt	r1, #1
   1b0e0:	ldr	r0, [r0]
   1b0e4:	bl	1162c <fprintf@plt>
   1b0e8:	b	1af48 <argp_parse@@Base+0x35d0>
   1b0ec:	push	{r4, r5, r6, r7, fp, lr}
   1b0f0:	add	fp, sp, #16
   1b0f4:	sub	sp, sp, #16
   1b0f8:	movw	r7, #54312	; 0xd428
   1b0fc:	movw	r5, #54316	; 0xd42c
   1b100:	movw	r6, #54544	; 0xd510
   1b104:	movt	r5, #2
   1b108:	movt	r7, #2
   1b10c:	movt	r6, #2
   1b110:	ldr	r4, [r7]
   1b114:	ldr	r5, [r5]
   1b118:	stm	r6, {r4, r5}
   1b11c:	ldr	r5, [fp, #16]
   1b120:	str	r6, [sp, #8]
   1b124:	str	r5, [sp, #12]
   1b128:	ldr	r5, [fp, #12]
   1b12c:	str	r5, [sp, #4]
   1b130:	ldr	r5, [fp, #8]
   1b134:	str	r5, [sp]
   1b138:	bl	1a1dc <argp_parse@@Base+0x2864>
   1b13c:	ldr	r1, [r6]
   1b140:	ldr	r3, [r6, #12]
   1b144:	ldr	r2, [r6, #8]
   1b148:	str	r1, [r7]
   1b14c:	movw	r1, #57276	; 0xdfbc
   1b150:	movt	r1, #2
   1b154:	str	r3, [r1]
   1b158:	movw	r1, #54320	; 0xd430
   1b15c:	movt	r1, #2
   1b160:	str	r2, [r1]
   1b164:	sub	sp, fp, #16
   1b168:	pop	{r4, r5, r6, r7, fp, pc}
   1b16c:	push	{r4, r5, r6, sl, fp, lr}
   1b170:	add	fp, sp, #16
   1b174:	sub	sp, sp, #16
   1b178:	movw	r6, #54312	; 0xd428
   1b17c:	movw	r4, #54316	; 0xd42c
   1b180:	movw	r5, #54544	; 0xd510
   1b184:	movt	r4, #2
   1b188:	movt	r6, #2
   1b18c:	movt	r5, #2
   1b190:	ldr	r3, [r6]
   1b194:	ldr	r4, [r4]
   1b198:	stm	r5, {r3, r4}
   1b19c:	mov	r4, #0
   1b1a0:	mov	r3, #1
   1b1a4:	str	r4, [sp]
   1b1a8:	stmib	sp, {r4, r5}
   1b1ac:	str	r3, [sp, #12]
   1b1b0:	mov	r3, #0
   1b1b4:	bl	1a1dc <argp_parse@@Base+0x2864>
   1b1b8:	ldr	r1, [r5]
   1b1bc:	ldr	r3, [r5, #12]
   1b1c0:	ldr	r2, [r5, #8]
   1b1c4:	str	r1, [r6]
   1b1c8:	movw	r1, #57276	; 0xdfbc
   1b1cc:	movt	r1, #2
   1b1d0:	str	r3, [r1]
   1b1d4:	movw	r1, #54320	; 0xd430
   1b1d8:	movt	r1, #2
   1b1dc:	str	r2, [r1]
   1b1e0:	sub	sp, fp, #16
   1b1e4:	pop	{r4, r5, r6, sl, fp, pc}
   1b1e8:	cmp	r2, #0
   1b1ec:	beq	1b21c <argp_parse@@Base+0x38a4>
   1b1f0:	mvn	r3, #0
   1b1f4:	udiv	r3, r3, r2
   1b1f8:	cmp	r3, r1
   1b1fc:	bcs	1b21c <argp_parse@@Base+0x38a4>
   1b200:	push	{fp, lr}
   1b204:	mov	fp, sp
   1b208:	bl	11638 <__errno_location@plt>
   1b20c:	mov	r1, #12
   1b210:	str	r1, [r0]
   1b214:	mov	r0, #0
   1b218:	pop	{fp, pc}
   1b21c:	mul	r1, r2, r1
   1b220:	b	199f0 <argp_parse@@Base+0x2078>
   1b224:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b228:	mov	r7, r0
   1b22c:	ldr	r6, [pc, #72]	; 1b27c <argp_parse@@Base+0x3904>
   1b230:	ldr	r5, [pc, #72]	; 1b280 <argp_parse@@Base+0x3908>
   1b234:	add	r6, pc, r6
   1b238:	add	r5, pc, r5
   1b23c:	sub	r6, r6, r5
   1b240:	mov	r8, r1
   1b244:	mov	r9, r2
   1b248:	bl	113fc <fdopen@plt-0x20>
   1b24c:	asrs	r6, r6, #2
   1b250:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b254:	mov	r4, #0
   1b258:	add	r4, r4, #1
   1b25c:	ldr	r3, [r5], #4
   1b260:	mov	r2, r9
   1b264:	mov	r1, r8
   1b268:	mov	r0, r7
   1b26c:	blx	r3
   1b270:	cmp	r6, r4
   1b274:	bne	1b258 <argp_parse@@Base+0x38e0>
   1b278:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b27c:	andeq	r1, r1, r8, asr #25
   1b280:	andeq	r1, r1, r0, asr #25
   1b284:	bx	lr

Disassembly of section .fini:

0001b288 <.fini>:
   1b288:	push	{r3, lr}
   1b28c:	pop	{r3, pc}
