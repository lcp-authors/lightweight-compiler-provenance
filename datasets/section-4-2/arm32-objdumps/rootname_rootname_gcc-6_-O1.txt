
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

0001093c <.init>:
   1093c:	push	{r3, lr}
   10940:	bl	10aac <_start@@Base+0x3c>
   10944:	pop	{r3, pc}

Disassembly of section .plt:

00010948 <raise@plt-0x14>:
   10948:	push	{lr}		; (str lr, [sp, #-4]!)
   1094c:	ldr	lr, [pc, #4]	; 10958 <raise@plt-0x4>
   10950:	add	lr, pc, lr
   10954:	ldr	pc, [lr, #8]!
   10958:	andeq	r1, r1, r8, lsr #13

0001095c <raise@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1704]!	; 0x6a8

00010968 <fopen@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1696]!	; 0x6a0

00010974 <time@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1688]!	; 0x698

00010980 <xcb_connect@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1680]!	; 0x690

0001098c <sleep@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1672]!	; 0x688

00010998 <xcb_flush@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1664]!	; 0x680

000109a4 <rewind@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1656]!	; 0x678

000109b0 <xcb_screen_next@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1648]!	; 0x670

000109bc <fread@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1640]!	; 0x668

000109c8 <xcb_setup_roots_iterator@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1632]!	; 0x660

000109d4 <puts@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1624]!	; 0x658

000109e0 <__libc_start_main@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1616]!	; 0x650

000109ec <localtime@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1608]!	; 0x648

000109f8 <__gmon_start__@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1600]!	; 0x640

00010a04 <exit@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1592]!	; 0x638

00010a10 <snprintf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1584]!	; 0x630

00010a1c <__isoc99_sscanf@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1576]!	; 0x628

00010a28 <fclose@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1568]!	; 0x620

00010a34 <xcb_disconnect@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1560]!	; 0x618

00010a40 <xcb_connection_has_error@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1552]!	; 0x610

00010a4c <xcb_get_setup@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1544]!	; 0x608

00010a58 <xcb_change_property@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1536]!	; 0x600

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00010a70 <_start@@Base>:
   10a70:	mov	fp, #0
   10a74:	mov	lr, #0
   10a78:	pop	{r1}		; (ldr r1, [sp], #4)
   10a7c:	mov	r2, sp
   10a80:	push	{r2}		; (str r2, [sp, #-4]!)
   10a84:	push	{r0}		; (str r0, [sp, #-4]!)
   10a88:	ldr	ip, [pc, #16]	; 10aa0 <_start@@Base+0x30>
   10a8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a90:	ldr	r0, [pc, #12]	; 10aa4 <_start@@Base+0x34>
   10a94:	ldr	r3, [pc, #12]	; 10aa8 <_start@@Base+0x38>
   10a98:	bl	109e0 <__libc_start_main@plt>
   10a9c:	bl	10a64 <abort@plt>
   10aa0:	andeq	r1, r1, r4, asr #3
   10aa4:	muleq	r1, r8, fp
   10aa8:	andeq	r1, r1, r4, ror #2
   10aac:	ldr	r3, [pc, #20]	; 10ac8 <_start@@Base+0x58>
   10ab0:	ldr	r2, [pc, #20]	; 10acc <_start@@Base+0x5c>
   10ab4:	add	r3, pc, r3
   10ab8:	ldr	r2, [r3, r2]
   10abc:	cmp	r2, #0
   10ac0:	bxeq	lr
   10ac4:	b	109f8 <__gmon_start__@plt>
   10ac8:	andeq	r1, r1, r4, asr #10
   10acc:	andeq	r0, r0, r8, rrx
   10ad0:	ldr	r3, [pc, #28]	; 10af4 <_start@@Base+0x84>
   10ad4:	ldr	r0, [pc, #28]	; 10af8 <_start@@Base+0x88>
   10ad8:	sub	r3, r3, r0
   10adc:	cmp	r3, #6
   10ae0:	bxls	lr
   10ae4:	ldr	r3, [pc, #16]	; 10afc <_start@@Base+0x8c>
   10ae8:	cmp	r3, #0
   10aec:	bxeq	lr
   10af0:	bx	r3
   10af4:	andeq	r2, r2, r7, ror r0
   10af8:	andeq	r2, r2, r4, ror r0
   10afc:	andeq	r0, r0, r0
   10b00:	ldr	r1, [pc, #36]	; 10b2c <_start@@Base+0xbc>
   10b04:	ldr	r0, [pc, #36]	; 10b30 <_start@@Base+0xc0>
   10b08:	sub	r1, r1, r0
   10b0c:	asr	r1, r1, #2
   10b10:	add	r1, r1, r1, lsr #31
   10b14:	asrs	r1, r1, #1
   10b18:	bxeq	lr
   10b1c:	ldr	r3, [pc, #16]	; 10b34 <_start@@Base+0xc4>
   10b20:	cmp	r3, #0
   10b24:	bxeq	lr
   10b28:	bx	r3
   10b2c:	andeq	r2, r2, r4, ror r0
   10b30:	andeq	r2, r2, r4, ror r0
   10b34:	andeq	r0, r0, r0
   10b38:	push	{r4, lr}
   10b3c:	ldr	r4, [pc, #24]	; 10b5c <_start@@Base+0xec>
   10b40:	ldrb	r3, [r4]
   10b44:	cmp	r3, #0
   10b48:	popne	{r4, pc}
   10b4c:	bl	10ad0 <_start@@Base+0x60>
   10b50:	mov	r3, #1
   10b54:	strb	r3, [r4]
   10b58:	pop	{r4, pc}
   10b5c:	andeq	r2, r2, r4, ror r0
   10b60:	ldr	r0, [pc, #40]	; 10b90 <_start@@Base+0x120>
   10b64:	ldr	r3, [r0]
   10b68:	cmp	r3, #0
   10b6c:	bne	10b74 <_start@@Base+0x104>
   10b70:	b	10b00 <_start@@Base+0x90>
   10b74:	ldr	r3, [pc, #24]	; 10b94 <_start@@Base+0x124>
   10b78:	cmp	r3, #0
   10b7c:	beq	10b70 <_start@@Base+0x100>
   10b80:	push	{r4, lr}
   10b84:	blx	r3
   10b88:	pop	{r4, lr}
   10b8c:	b	10b00 <_start@@Base+0x90>
   10b90:	andeq	r1, r2, ip, lsl #30
   10b94:	andeq	r0, r0, r0

00010b98 <main@@Base>:
   10b98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b9c:	sub	sp, sp, #152	; 0x98
   10ba0:	add	r1, sp, #16
   10ba4:	mov	r0, #0
   10ba8:	bl	10980 <xcb_connect@plt>
   10bac:	mov	r7, r0
   10bb0:	bl	10a40 <xcb_connection_has_error@plt>
   10bb4:	cmp	r0, #0
   10bb8:	bne	10c24 <main@@Base+0x8c>
   10bbc:	mov	r0, r7
   10bc0:	bl	10a4c <xcb_get_setup@plt>
   10bc4:	mov	r1, r0
   10bc8:	add	r0, sp, #20
   10bcc:	bl	109c8 <xcb_setup_roots_iterator@plt>
   10bd0:	ldr	r3, [sp, #16]
   10bd4:	sub	r2, r3, #1
   10bd8:	str	r2, [sp, #16]
   10bdc:	cmp	r3, #0
   10be0:	beq	10c00 <main@@Base+0x68>
   10be4:	add	r0, sp, #20
   10be8:	bl	109b0 <xcb_screen_next@plt>
   10bec:	ldr	r3, [sp, #16]
   10bf0:	sub	r2, r3, #1
   10bf4:	str	r2, [sp, #16]
   10bf8:	cmp	r3, #0
   10bfc:	bne	10be4 <main@@Base+0x4c>
   10c00:	ldr	r3, [sp, #20]
   10c04:	ldr	r9, [r3]
   10c08:	add	r0, sp, #32
   10c0c:	bl	10dbc <init_bat@@Base>
   10c10:	mov	r5, #0
   10c14:	add	r6, sp, #68	; 0x44
   10c18:	mov	sl, #80	; 0x50
   10c1c:	ldr	r8, [pc, #292]	; 10d48 <main@@Base+0x1b0>
   10c20:	b	10cd8 <main@@Base+0x140>
   10c24:	ldr	r0, [pc, #288]	; 10d4c <main@@Base+0x1b4>
   10c28:	bl	109d4 <puts@plt>
   10c2c:	mov	r0, r7
   10c30:	bl	10a34 <xcb_disconnect@plt>
   10c34:	mov	r0, #1
   10c38:	bl	10a04 <exit@plt>
   10c3c:	mov	r0, r5
   10c40:	bl	10974 <time@plt>
   10c44:	str	r0, [sp, #20]
   10c48:	add	r0, sp, #20
   10c4c:	bl	109ec <localtime@plt>
   10c50:	ldr	r3, [r0, #20]
   10c54:	add	r3, r3, #1888	; 0x760
   10c58:	ldr	r2, [r0, #4]
   10c5c:	str	r2, [sp, #12]
   10c60:	ldr	r2, [r0, #8]
   10c64:	str	r2, [sp, #8]
   10c68:	ldr	r2, [r0, #12]
   10c6c:	str	r2, [sp, #4]
   10c70:	ldr	r2, [r0, #16]
   10c74:	add	r2, r2, #1
   10c78:	str	r2, [sp]
   10c7c:	add	r3, r3, #12
   10c80:	mov	r2, r8
   10c84:	rsb	r1, r4, #80	; 0x50
   10c88:	add	r0, r6, r4
   10c8c:	bl	10a10 <snprintf@plt>
   10c90:	str	r6, [sp, #12]
   10c94:	add	r0, r0, r4
   10c98:	str	r0, [sp, #8]
   10c9c:	mov	r3, #8
   10ca0:	str	r3, [sp, #4]
   10ca4:	mov	r3, #31
   10ca8:	str	r3, [sp]
   10cac:	mov	r3, #39	; 0x27
   10cb0:	mov	r2, r9
   10cb4:	mov	r1, r5
   10cb8:	mov	r0, r7
   10cbc:	bl	10a58 <xcb_change_property@plt>
   10cc0:	mov	r0, r7
   10cc4:	bl	10998 <xcb_flush@plt>
   10cc8:	cmp	r0, #0
   10ccc:	ble	10d04 <main@@Base+0x16c>
   10cd0:	mov	r0, #60	; 0x3c
   10cd4:	bl	1098c <sleep@plt>
   10cd8:	strb	r5, [sp, #148]	; 0x94
   10cdc:	ldrb	r3, [sp, #56]	; 0x38
   10ce0:	cmp	r3, #0
   10ce4:	moveq	r4, r5
   10ce8:	beq	10c3c <main@@Base+0xa4>
   10cec:	mov	r2, sl
   10cf0:	mov	r1, r6
   10cf4:	add	r0, sp, #32
   10cf8:	bl	10eec <bat@@Base>
   10cfc:	mov	r4, r0
   10d00:	b	10c3c <main@@Base+0xa4>
   10d04:	ldr	r0, [pc, #68]	; 10d50 <main@@Base+0x1b8>
   10d08:	bl	109d4 <puts@plt>
   10d0c:	mov	r0, r7
   10d10:	bl	10a34 <xcb_disconnect@plt>
   10d14:	ldrb	r3, [sp, #56]	; 0x38
   10d18:	cmp	r3, #0
   10d1c:	bne	10d2c <main@@Base+0x194>
   10d20:	mov	r0, #2
   10d24:	add	sp, sp, #152	; 0x98
   10d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d2c:	ldr	r0, [sp, #32]
   10d30:	bl	10a28 <fclose@plt>
   10d34:	ldr	r0, [sp, #40]	; 0x28
   10d38:	bl	10a28 <fclose@plt>
   10d3c:	ldr	r0, [sp, #36]	; 0x24
   10d40:	bl	10a28 <fclose@plt>
   10d44:	b	10d20 <main@@Base+0x188>
   10d48:	andeq	r1, r1, ip, ror #3
   10d4c:	ldrdeq	r1, [r1], -r4
   10d50:	andeq	r1, r1, r8, lsl #4

00010d54 <read_int@@Base>:
   10d54:	push	{r4, lr}
   10d58:	sub	sp, sp, #48	; 0x30
   10d5c:	mov	r4, r0
   10d60:	bl	109a4 <rewind@plt>
   10d64:	mov	r3, r4
   10d68:	mov	r2, #40	; 0x28
   10d6c:	mov	r1, #1
   10d70:	mov	r0, sp
   10d74:	bl	109bc <fread@plt>
   10d78:	add	r3, sp, #48	; 0x30
   10d7c:	add	r0, r3, r0
   10d80:	mov	r3, #0
   10d84:	strb	r3, [r0, #-48]	; 0xffffffd0
   10d88:	add	r2, sp, #40	; 0x28
   10d8c:	ldr	r1, [pc, #36]	; 10db8 <read_int@@Base+0x64>
   10d90:	mov	r0, sp
   10d94:	bl	10a1c <__isoc99_sscanf@plt>
   10d98:	cmp	r0, #1
   10d9c:	mvnne	r0, #0
   10da0:	movne	r1, #0
   10da4:	beq	10db0 <read_int@@Base+0x5c>
   10da8:	add	sp, sp, #48	; 0x30
   10dac:	pop	{r4, pc}
   10db0:	ldrd	r0, [sp, #40]	; 0x28
   10db4:	b	10da8 <read_int@@Base+0x54>
   10db8:	andeq	r1, r1, r8, lsr #4

00010dbc <init_bat@@Base>:
   10dbc:	push	{r4, r5, r6, lr}
   10dc0:	mov	r4, r0
   10dc4:	ldr	r1, [pc, #196]	; 10e90 <init_bat@@Base+0xd4>
   10dc8:	ldr	r0, [pc, #196]	; 10e94 <init_bat@@Base+0xd8>
   10dcc:	bl	10968 <fopen@plt>
   10dd0:	subs	r5, r0, #0
   10dd4:	beq	10e3c <init_bat@@Base+0x80>
   10dd8:	mov	r3, #1
   10ddc:	strb	r3, [r4, #24]
   10de0:	mov	r0, r5
   10de4:	bl	10d54 <read_int@@Base>
   10de8:	strd	r0, [r4, #16]
   10dec:	ldr	r6, [pc, #156]	; 10e90 <init_bat@@Base+0xd4>
   10df0:	mov	r1, r6
   10df4:	ldr	r0, [pc, #156]	; 10e98 <init_bat@@Base+0xdc>
   10df8:	bl	10968 <fopen@plt>
   10dfc:	str	r0, [r4]
   10e00:	mov	r1, r6
   10e04:	ldr	r0, [pc, #144]	; 10e9c <init_bat@@Base+0xe0>
   10e08:	bl	10968 <fopen@plt>
   10e0c:	str	r0, [r4, #4]
   10e10:	cmp	r0, #0
   10e14:	beq	10e68 <init_bat@@Base+0xac>
   10e18:	ldr	r1, [pc, #112]	; 10e90 <init_bat@@Base+0xd4>
   10e1c:	ldr	r0, [pc, #124]	; 10ea0 <init_bat@@Base+0xe4>
   10e20:	bl	10968 <fopen@plt>
   10e24:	str	r0, [r4, #8]
   10e28:	cmp	r0, #0
   10e2c:	beq	10e7c <init_bat@@Base+0xc0>
   10e30:	mov	r0, r5
   10e34:	bl	10a28 <fclose@plt>
   10e38:	pop	{r4, r5, r6, pc}
   10e3c:	ldr	r1, [pc, #76]	; 10e90 <init_bat@@Base+0xd4>
   10e40:	ldr	r0, [pc, #92]	; 10ea4 <init_bat@@Base+0xe8>
   10e44:	bl	10968 <fopen@plt>
   10e48:	subs	r5, r0, #0
   10e4c:	bne	10dd8 <init_bat@@Base+0x1c>
   10e50:	mov	r3, #0
   10e54:	strb	r3, [r4, #24]
   10e58:	str	r3, [r4]
   10e5c:	str	r3, [r4, #4]
   10e60:	str	r3, [r4, #8]
   10e64:	pop	{r4, r5, r6, pc}
   10e68:	mov	r1, r6
   10e6c:	ldr	r0, [pc, #52]	; 10ea8 <init_bat@@Base+0xec>
   10e70:	bl	10968 <fopen@plt>
   10e74:	str	r0, [r4, #4]
   10e78:	b	10e18 <init_bat@@Base+0x5c>
   10e7c:	ldr	r1, [pc, #12]	; 10e90 <init_bat@@Base+0xd4>
   10e80:	ldr	r0, [pc, #36]	; 10eac <init_bat@@Base+0xf0>
   10e84:	bl	10968 <fopen@plt>
   10e88:	str	r0, [r4, #8]
   10e8c:	b	10e30 <init_bat@@Base+0x74>
   10e90:	andeq	r1, r1, r0, lsr r2
   10e94:	andeq	r1, r1, r4, lsr r2
   10e98:	andeq	r1, r1, ip, lsl #5
   10e9c:			; <UNDEFINED> instruction: 0x000112b0
   10ea0:	andeq	r1, r1, r0, lsl #6
   10ea4:	andeq	r1, r1, r0, ror #4
   10ea8:	ldrdeq	r1, [r1], -r8
   10eac:	andeq	r1, r1, r8, lsr #6

00010eb0 <close_bat@@Base>:
   10eb0:	push	{r4, lr}
   10eb4:	mov	r4, r0
   10eb8:	ldr	r0, [r0]
   10ebc:	cmp	r0, #0
   10ec0:	beq	10ec8 <close_bat@@Base+0x18>
   10ec4:	bl	10a28 <fclose@plt>
   10ec8:	ldr	r0, [r4, #4]
   10ecc:	cmp	r0, #0
   10ed0:	beq	10ed8 <close_bat@@Base+0x28>
   10ed4:	bl	10a28 <fclose@plt>
   10ed8:	ldr	r0, [r4, #8]
   10edc:	cmp	r0, #0
   10ee0:	popeq	{r4, pc}
   10ee4:	bl	10a28 <fclose@plt>
   10ee8:	pop	{r4, pc}

00010eec <bat@@Base>:
   10eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ef0:	sub	sp, sp, #20
   10ef4:	mov	r4, r0
   10ef8:	str	r1, [sp, #12]
   10efc:	mov	fp, r2
   10f00:	ldr	r0, [r0]
   10f04:	bl	10d54 <read_int@@Base>
   10f08:	mov	r8, r0
   10f0c:	mov	r9, r1
   10f10:	ldr	r0, [r4, #4]
   10f14:	bl	10d54 <read_int@@Base>
   10f18:	mov	sl, r0
   10f1c:	mov	r5, r1
   10f20:	ldr	r0, [r4, #8]
   10f24:	bl	10d54 <read_int@@Base>
   10f28:	mov	r6, r0
   10f2c:	mov	r7, r1
   10f30:	mov	r3, #100	; 0x64
   10f34:	umull	r0, r1, sl, r3
   10f38:	mla	r1, r3, r5, r1
   10f3c:	ldrd	r2, [r4, #16]
   10f40:	bl	10ff0 <bat@@Base+0x104>
   10f44:	mov	r4, r0
   10f48:	orrs	r3, r8, r9
   10f4c:	bne	10f74 <bat@@Base+0x88>
   10f50:	orrs	r3, r6, r7
   10f54:	bne	10f8c <bat@@Base+0xa0>
   10f58:	mov	r3, r0
   10f5c:	ldr	r2, [pc, #128]	; 10fe4 <bat@@Base+0xf8>
   10f60:	mov	r1, fp
   10f64:	ldr	r0, [sp, #12]
   10f68:	bl	10a10 <snprintf@plt>
   10f6c:	add	sp, sp, #20
   10f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f74:	mov	r3, r0
   10f78:	ldr	r2, [pc, #104]	; 10fe8 <bat@@Base+0xfc>
   10f7c:	mov	r1, fp
   10f80:	ldr	r0, [sp, #12]
   10f84:	bl	10a10 <snprintf@plt>
   10f88:	b	10f6c <bat@@Base+0x80>
   10f8c:	mov	r3, #60	; 0x3c
   10f90:	umull	r0, r1, sl, r3
   10f94:	mla	r1, r3, r5, r1
   10f98:	mov	r2, r6
   10f9c:	mov	r3, r7
   10fa0:	bl	10ff0 <bat@@Base+0x104>
   10fa4:	mov	r2, #60	; 0x3c
   10fa8:	mov	r3, #0
   10fac:	bl	10ff0 <bat@@Base+0x104>
   10fb0:	str	r2, [sp, #4]
   10fb4:	mov	r2, r6
   10fb8:	mov	r3, r7
   10fbc:	mov	r0, sl
   10fc0:	mov	r1, r5
   10fc4:	bl	10ff0 <bat@@Base+0x104>
   10fc8:	str	r0, [sp]
   10fcc:	mov	r3, r4
   10fd0:	ldr	r2, [pc, #20]	; 10fec <bat@@Base+0x100>
   10fd4:	mov	r1, fp
   10fd8:	ldr	r0, [sp, #12]
   10fdc:	bl	10a10 <snprintf@plt>
   10fe0:	b	10f6c <bat@@Base+0x80>
   10fe4:	andeq	r1, r1, r4, ror r3
   10fe8:	andeq	r1, r1, r4, asr r3
   10fec:	andeq	r1, r1, r0, ror #6
   10ff0:	cmp	r3, #0
   10ff4:	cmpeq	r2, #0
   10ff8:	bne	11010 <bat@@Base+0x124>
   10ffc:	cmp	r1, #0
   11000:	cmpeq	r0, #0
   11004:	mvnne	r1, #0
   11008:	mvnne	r0, #0
   1100c:	b	1102c <bat@@Base+0x140>
   11010:	sub	sp, sp, #8
   11014:	push	{sp, lr}
   11018:	bl	1103c <bat@@Base+0x150>
   1101c:	ldr	lr, [sp, #4]
   11020:	add	sp, sp, #8
   11024:	pop	{r2, r3}
   11028:	bx	lr
   1102c:	push	{r1, lr}
   11030:	mov	r0, #8
   11034:	bl	1095c <raise@plt>
   11038:	pop	{r1, pc}
   1103c:	cmp	r1, r3
   11040:	push	{r4, r5, r6, r7, r8, r9, lr}
   11044:	cmpeq	r0, r2
   11048:	mov	r4, r0
   1104c:	mov	r5, r1
   11050:	ldr	r9, [sp, #28]
   11054:	movcc	r0, #0
   11058:	movcc	r1, #0
   1105c:	bcc	11154 <bat@@Base+0x268>
   11060:	cmp	r3, #0
   11064:	clzeq	ip, r2
   11068:	clzne	ip, r3
   1106c:	addeq	ip, ip, #32
   11070:	cmp	r5, #0
   11074:	clzeq	r1, r4
   11078:	addeq	r1, r1, #32
   1107c:	clzne	r1, r5
   11080:	sub	ip, ip, r1
   11084:	sub	lr, ip, #32
   11088:	lsl	r7, r3, ip
   1108c:	rsb	r8, ip, #32
   11090:	orr	r7, r7, r2, lsl lr
   11094:	orr	r7, r7, r2, lsr r8
   11098:	lsl	r6, r2, ip
   1109c:	cmp	r5, r7
   110a0:	cmpeq	r4, r6
   110a4:	movcc	r0, #0
   110a8:	movcc	r1, #0
   110ac:	bcc	110c8 <bat@@Base+0x1dc>
   110b0:	mov	r3, #1
   110b4:	subs	r4, r4, r6
   110b8:	lsl	r1, r3, lr
   110bc:	lsl	r0, r3, ip
   110c0:	orr	r1, r1, r3, lsr r8
   110c4:	sbc	r5, r5, r7
   110c8:	cmp	ip, #0
   110cc:	beq	11154 <bat@@Base+0x268>
   110d0:	lsrs	r3, r7, #1
   110d4:	rrx	r2, r6
   110d8:	mov	r6, ip
   110dc:	b	11100 <bat@@Base+0x214>
   110e0:	subs	r4, r4, r2
   110e4:	sbc	r5, r5, r3
   110e8:	adds	r4, r4, r4
   110ec:	adc	r5, r5, r5
   110f0:	adds	r4, r4, #1
   110f4:	adc	r5, r5, #0
   110f8:	subs	r6, r6, #1
   110fc:	beq	1111c <bat@@Base+0x230>
   11100:	cmp	r5, r3
   11104:	cmpeq	r4, r2
   11108:	bcs	110e0 <bat@@Base+0x1f4>
   1110c:	adds	r4, r4, r4
   11110:	adc	r5, r5, r5
   11114:	subs	r6, r6, #1
   11118:	bne	11100 <bat@@Base+0x214>
   1111c:	lsr	r6, r4, ip
   11120:	lsr	r7, r5, ip
   11124:	orr	r6, r6, r5, lsl r8
   11128:	adds	r2, r0, r4
   1112c:	orr	r6, r6, r5, lsr lr
   11130:	adc	r3, r1, r5
   11134:	lsl	r1, r7, ip
   11138:	orr	r1, r1, r6, lsl lr
   1113c:	lsl	r0, r6, ip
   11140:	orr	r1, r1, r6, lsr r8
   11144:	subs	r0, r2, r0
   11148:	mov	r4, r6
   1114c:	mov	r5, r7
   11150:	sbc	r1, r3, r1
   11154:	cmp	r9, #0
   11158:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1115c:	strd	r4, [r9]
   11160:	pop	{r4, r5, r6, r7, r8, r9, pc}

00011164 <__libc_csu_init@@Base>:
   11164:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11168:	mov	r7, r0
   1116c:	ldr	r6, [pc, #72]	; 111bc <__libc_csu_init@@Base+0x58>
   11170:	ldr	r5, [pc, #72]	; 111c0 <__libc_csu_init@@Base+0x5c>
   11174:	add	r6, pc, r6
   11178:	add	r5, pc, r5
   1117c:	sub	r6, r6, r5
   11180:	mov	r8, r1
   11184:	mov	r9, r2
   11188:	bl	1093c <raise@plt-0x20>
   1118c:	asrs	r6, r6, #2
   11190:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11194:	mov	r4, #0
   11198:	add	r4, r4, #1
   1119c:	ldr	r3, [r5], #4
   111a0:	mov	r2, r9
   111a4:	mov	r1, r8
   111a8:	mov	r0, r7
   111ac:	blx	r3
   111b0:	cmp	r6, r4
   111b4:	bne	11198 <__libc_csu_init@@Base+0x34>
   111b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111bc:	andeq	r0, r1, ip, lsl #27
   111c0:	andeq	r0, r1, r4, lsl #27

000111c4 <__libc_csu_fini@@Base>:
   111c4:	bx	lr

Disassembly of section .fini:

000111c8 <.fini>:
   111c8:	push	{r3, lr}
   111cc:	pop	{r3, pc}
