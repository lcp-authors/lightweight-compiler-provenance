
../repos/charybdis/modules/.libs/m_testline.so:     file format elf32-littlearm


Disassembly of section .init:

0000076c <_init>:
 76c:	push	{r3, lr}
 770:	bl	894 <call_weak_fn>
 774:	pop	{r3, pc}

Disassembly of section .plt:

00000778 <.plt>:
 778:	push	{lr}		; (str lr, [sp, #-4]!)
 77c:	ldr	lr, [pc, #4]	; 788 <.plt+0x10>
 780:	add	lr, pc, lr
 784:	ldr	pc, [lr, #8]!
 788:	.word	0x00011878

0000078c <raise@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2168]!	; 0x878

00000798 <rb_current_time@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2160]!	; 0x870

000007a4 <__cxa_finalize@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2152]!	; 0x868

000007b0 <sendto_one@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2144]!	; 0x860

000007bc <find_address_conf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2136]!	; 0x858

000007c8 <parse_netmask@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2128]!	; 0x850

000007d4 <get_printable_kline@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2120]!	; 0x848

000007e0 <is_throttle_ip@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2112]!	; 0x840

000007ec <strcpy@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2104]!	; 0x838

000007f8 <find_nick_resv@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2096]!	; 0x830

00000804 <show_iline_prefix@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2088]!	; 0x828

00000810 <__gmon_start__@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2080]!	; 0x820

0000081c <sendto_one_numeric@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2072]!	; 0x818

00000828 <strlen@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2064]!	; 0x810

00000834 <strchr@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2056]!	; 0x808

00000840 <snprintf@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2048]!	; 0x800

0000084c <is_reject_ip@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2040]!	; 0x7f8

00000858 <find_xline@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2032]!	; 0x7f0

00000864 <rb_strlcpy@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #2024]!	; 0x7e8

00000870 <privilegeset_in_set@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #2016]!	; 0x7e0

0000087c <hash_find_resv@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #2008]!	; 0x7d8

00000888 <find_dline@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #2000]!	; 0x7d0

Disassembly of section .text:

00000894 <call_weak_fn>:
     894:	ldr	r3, [pc, #20]	; 8b0 <call_weak_fn+0x1c>
     898:	ldr	r2, [pc, #20]	; 8b4 <call_weak_fn+0x20>
     89c:	add	r3, pc, r3
     8a0:	ldr	r2, [r3, r2]
     8a4:	cmp	r2, #0
     8a8:	bxeq	lr
     8ac:	b	810 <__gmon_start__@plt>
     8b0:	.word	0x0001175c
     8b4:	.word	0x0000006c

000008b8 <deregister_tm_clones>:
     8b8:	ldr	r3, [pc, #52]	; 8f4 <deregister_tm_clones+0x3c>
     8bc:	ldr	r0, [pc, #52]	; 8f8 <deregister_tm_clones+0x40>
     8c0:	add	r3, pc, r3
     8c4:	add	r0, pc, r0
     8c8:	add	r3, r3, #3
     8cc:	sub	r3, r3, r0
     8d0:	cmp	r3, #6
     8d4:	ldr	r3, [pc, #32]	; 8fc <deregister_tm_clones+0x44>
     8d8:	add	r3, pc, r3
     8dc:	bxls	lr
     8e0:	ldr	r2, [pc, #24]	; 900 <deregister_tm_clones+0x48>
     8e4:	ldr	r3, [r3, r2]
     8e8:	cmp	r3, #0
     8ec:	bxeq	lr
     8f0:	bx	r3
     8f4:	.word	0x00011878
     8f8:	.word	0x00011874
     8fc:	.word	0x00011720
     900:	.word	0x00000068

00000904 <register_tm_clones>:
     904:	ldr	r1, [pc, #56]	; 944 <register_tm_clones+0x40>
     908:	ldr	r0, [pc, #56]	; 948 <register_tm_clones+0x44>
     90c:	add	r1, pc, r1
     910:	add	r0, pc, r0
     914:	sub	r1, r1, r0
     918:	ldr	r3, [pc, #44]	; 94c <register_tm_clones+0x48>
     91c:	asr	r1, r1, #2
     920:	add	r3, pc, r3
     924:	add	r1, r1, r1, lsr #31
     928:	asrs	r1, r1, #1
     92c:	bxeq	lr
     930:	ldr	r2, [pc, #24]	; 950 <register_tm_clones+0x4c>
     934:	ldr	r3, [r3, r2]
     938:	cmp	r3, #0
     93c:	bxeq	lr
     940:	bx	r3
     944:	.word	0x0001182c
     948:	.word	0x00011828
     94c:	.word	0x000116d8
     950:	.word	0x00000078

00000954 <__do_global_dtors_aux>:
     954:	ldr	r3, [pc, #76]	; 9a8 <__do_global_dtors_aux+0x54>
     958:	ldr	r2, [pc, #76]	; 9ac <__do_global_dtors_aux+0x58>
     95c:	add	r3, pc, r3
     960:	add	r2, pc, r2
     964:	ldrb	r3, [r3]
     968:	cmp	r3, #0
     96c:	bxne	lr
     970:	ldr	r3, [pc, #56]	; 9b0 <__do_global_dtors_aux+0x5c>
     974:	push	{r4, lr}
     978:	ldr	r3, [r2, r3]
     97c:	cmp	r3, #0
     980:	beq	990 <__do_global_dtors_aux+0x3c>
     984:	ldr	r3, [pc, #40]	; 9b4 <__do_global_dtors_aux+0x60>
     988:	ldr	r0, [pc, r3]
     98c:	bl	7a4 <__cxa_finalize@plt>
     990:	bl	8b8 <deregister_tm_clones>
     994:	ldr	r3, [pc, #28]	; 9b8 <__do_global_dtors_aux+0x64>
     998:	mov	r2, #1
     99c:	add	r3, pc, r3
     9a0:	strb	r2, [r3]
     9a4:	pop	{r4, pc}
     9a8:	.word	0x000117dc
     9ac:	.word	0x00011698
     9b0:	.word	0x00000064
     9b4:	.word	0x000116f0
     9b8:	.word	0x0001179c

000009bc <frame_dummy>:
     9bc:	ldr	r0, [pc, #56]	; 9fc <frame_dummy+0x40>
     9c0:	ldr	r3, [pc, #56]	; a00 <frame_dummy+0x44>
     9c4:	add	r0, pc, r0
     9c8:	ldr	r2, [r0]
     9cc:	add	r3, pc, r3
     9d0:	cmp	r2, #0
     9d4:	bne	9dc <frame_dummy+0x20>
     9d8:	b	904 <register_tm_clones>
     9dc:	ldr	r2, [pc, #32]	; a04 <frame_dummy+0x48>
     9e0:	ldr	r3, [r3, r2]
     9e4:	cmp	r3, #0
     9e8:	beq	9d8 <frame_dummy+0x1c>
     9ec:	push	{r4, lr}
     9f0:	blx	r3
     9f4:	pop	{r4, lr}
     9f8:	b	904 <register_tm_clones>
     9fc:	.word	0x00011530
     a00:	.word	0x0001162c
     a04:	.word	0x00000074

00000a08 <mo_testline>:
     a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a0c:	add	fp, sp, #32
     a10:	sub	sp, sp, #724	; 0x2d4
     a14:	ldr	r3, [r2, #24]
     a18:	ldr	r6, [pc, #1656]	; 1098 <mo_testline+0x690>
     a1c:	cmp	r3, #0
     a20:	add	r6, pc, r6
     a24:	mov	r4, r2
     a28:	bne	a60 <mo_testline+0x58>
     a2c:	ldr	r3, [pc, #1640]	; 109c <mo_testline+0x694>
     a30:	ldr	r1, [pc, #1640]	; 10a0 <mo_testline+0x698>
     a34:	ldr	r2, [r6, r3]
     a38:	ldr	r3, [pc, #1636]	; 10a4 <mo_testline+0x69c>
     a3c:	add	r2, r2, #88	; 0x58
     a40:	add	r3, pc, r3
     a44:	str	r3, [sp]
     a48:	add	r1, pc, r1
     a4c:	add	r3, r4, #88	; 0x58
     a50:	mov	r0, r4
     a54:	bl	7b0 <sendto_one@plt>
     a58:	sub	sp, fp, #32
     a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a60:	ldr	r0, [r3, #36]	; 0x24
     a64:	cmp	r0, #0
     a68:	beq	a2c <mo_testline+0x24>
     a6c:	ldr	r1, [pc, #1588]	; 10a8 <mo_testline+0x6a0>
     a70:	add	r1, pc, r1
     a74:	bl	870 <privilegeset_in_set@plt>
     a78:	cmp	r0, #0
     a7c:	beq	a2c <mo_testline+0x24>
     a80:	ldr	r3, [fp, #4]
     a84:	ldr	r7, [r3, #4]
     a88:	mov	r0, r7
     a8c:	bl	828 <strlen@plt>
     a90:	mov	r1, r7
     a94:	add	r0, r0, #15
     a98:	bic	r0, r0, #7
     a9c:	sub	sp, sp, r0
     aa0:	add	r5, sp, #24
     aa4:	mov	r0, r5
     aa8:	bl	7ec <strcpy@plt>
     aac:	ldr	r3, [pc, #1528]	; 10ac <mo_testline+0x6a4>
     ab0:	ldrb	r2, [r5]
     ab4:	ldr	r3, [r6, r3]
     ab8:	ldr	r3, [r3, r2, lsl #2]
     abc:	ands	r7, r3, #512	; 0x200
     ac0:	beq	b50 <mo_testline+0x148>
     ac4:	mov	r0, r5
     ac8:	bl	87c <hash_find_resv@plt>
     acc:	ldr	r3, [pc, #1480]	; 109c <mo_testline+0x694>
     ad0:	add	r8, r4, #88	; 0x58
     ad4:	ldr	r6, [r6, r3]
     ad8:	subs	r7, r0, #0
     adc:	beq	b30 <mo_testline+0x128>
     ae0:	ldr	r5, [r7, #36]	; 0x24
     ae4:	cmp	r5, #0
     ae8:	bne	f88 <mo_testline+0x580>
     aec:	mov	r1, #81	; 0x51
     af0:	mov	r0, r5
     af4:	ldr	r3, [r7, #20]
     af8:	add	r2, r6, #88	; 0x58
     afc:	str	r3, [sp, #12]
     b00:	ldr	r3, [r7, #16]
     b04:	str	r1, [sp]
     b08:	ldr	r1, [pc, #1440]	; 10b0 <mo_testline+0x6a8>
     b0c:	stmib	sp, {r0, r3}
     b10:	add	r1, pc, r1
     b14:	mov	r3, r8
     b18:	mov	r0, r4
     b1c:	bl	7b0 <sendto_one@plt>
     b20:	ldr	r3, [r7, #32]
     b24:	sub	r3, r3, #1
     b28:	str	r3, [r7, #32]
     b2c:	b	a58 <mo_testline+0x50>
     b30:	ldr	r3, [fp, #4]
     b34:	ldr	r1, [pc, #1400]	; 10b4 <mo_testline+0x6ac>
     b38:	add	r2, r6, #88	; 0x58
     b3c:	ldr	r3, [r3, #4]
     b40:	add	r1, pc, r1
     b44:	str	r3, [sp]
     b48:	mov	r3, r8
     b4c:	b	a50 <mo_testline+0x48>
     b50:	mov	r1, #33	; 0x21
     b54:	mov	r0, r5
     b58:	bl	834 <strchr@plt>
     b5c:	cmp	r0, #0
     b60:	beq	ca8 <mo_testline+0x2a0>
     b64:	adds	r3, r0, #1
     b68:	strb	r7, [r0]
     b6c:	beq	a58 <mo_testline+0x50>
     b70:	ldrb	r2, [r0, #1]
     b74:	cmp	r2, #0
     b78:	strne	r5, [fp, #-728]	; 0xfffffd28
     b7c:	movne	r5, r3
     b80:	beq	a58 <mo_testline+0x50>
     b84:	mov	r1, #64	; 0x40
     b88:	mov	r0, r5
     b8c:	bl	834 <strchr@plt>
     b90:	cmp	r0, #0
     b94:	beq	cb0 <mo_testline+0x2a8>
     b98:	mov	r3, #0
     b9c:	adds	r9, r0, #1
     ba0:	strb	r3, [r0]
     ba4:	beq	a58 <mo_testline+0x50>
     ba8:	ldrb	r3, [r0, #1]
     bac:	cmp	r3, #0
     bb0:	beq	a58 <mo_testline+0x50>
     bb4:	sub	r7, fp, #676	; 0x2a4
     bb8:	sub	r2, fp, #720	; 0x2d0
     bbc:	mov	r1, r7
     bc0:	mov	r0, r9
     bc4:	bl	7c8 <parse_netmask@plt>
     bc8:	cmp	r0, #1
     bcc:	mov	r8, r0
     bd0:	beq	d88 <mo_testline+0x380>
     bd4:	cmp	r0, #3
     bd8:	moveq	r1, #10
     bdc:	movne	r1, #2
     be0:	mov	r0, r7
     be4:	bl	888 <find_dline@plt>
     be8:	cmp	r0, #0
     bec:	mov	sl, r0
     bf0:	beq	cc8 <mo_testline+0x2c0>
     bf4:	ldr	r3, [r0]
     bf8:	tst	r3, #131072	; 0x20000
     bfc:	beq	d88 <mo_testline+0x380>
     c00:	sub	r3, fp, #704	; 0x2c0
     c04:	str	r3, [sp, #4]
     c08:	sub	r3, fp, #716	; 0x2cc
     c0c:	mov	r1, r0
     c10:	str	r3, [sp]
     c14:	sub	r2, fp, #712	; 0x2c8
     c18:	sub	r3, fp, #708	; 0x2c4
     c1c:	mov	r0, r4
     c20:	bl	7d4 <get_printable_kline@plt>
     c24:	ldr	r1, [fp, #-704]	; 0xfffffd40
     c28:	ldr	r3, [fp, #-708]	; 0xfffffd3c
     c2c:	cmp	r1, #0
     c30:	bne	cbc <mo_testline+0x2b4>
     c34:	ldr	r2, [pc, #1148]	; 10b8 <mo_testline+0x6b0>
     c38:	add	r2, pc, r2
     c3c:	mov	r1, r2
     c40:	str	r2, [sp]
     c44:	ldr	r2, [pc, #1136]	; 10bc <mo_testline+0x6b4>
     c48:	sub	r5, fp, #548	; 0x224
     c4c:	str	r1, [sp, #4]
     c50:	add	r2, pc, r2
     c54:	mov	r1, #512	; 0x200
     c58:	mov	r0, r5
     c5c:	bl	840 <snprintf@plt>
     c60:	ldr	r0, [sl, #4]
     c64:	add	r7, r4, #88	; 0x58
     c68:	ands	r0, r0, #8388608	; 0x800000
     c6c:	bne	fa0 <mo_testline+0x598>
     c70:	mov	r1, #68	; 0x44
     c74:	ldr	r3, [pc, #1056]	; 109c <mo_testline+0x694>
     c78:	ldr	r2, [r6, r3]
     c7c:	ldr	r3, [fp, #-712]	; 0xfffffd38
     c80:	str	r1, [sp]
     c84:	ldr	r1, [pc, #1076]	; 10c0 <mo_testline+0x6b8>
     c88:	stmib	sp, {r0, r3}
     c8c:	add	r2, r2, #88	; 0x58
     c90:	mov	r3, r7
     c94:	add	r1, pc, r1
     c98:	str	r5, [sp, #12]
     c9c:	mov	r0, r4
     ca0:	bl	7b0 <sendto_one@plt>
     ca4:	b	a58 <mo_testline+0x50>
     ca8:	str	r0, [fp, #-728]	; 0xfffffd28
     cac:	b	b84 <mo_testline+0x17c>
     cb0:	mov	r9, r5
     cb4:	mov	r5, r0
     cb8:	b	bb4 <mo_testline+0x1ac>
     cbc:	ldr	r2, [pc, #1024]	; 10c4 <mo_testline+0x6bc>
     cc0:	add	r2, pc, r2
     cc4:	b	c40 <mo_testline+0x238>
     cc8:	mov	r0, r7
     ccc:	bl	84c <is_reject_ip@plt>
     cd0:	cmp	r0, #0
     cd4:	beq	d28 <mo_testline+0x320>
     cd8:	ldr	r2, [pc, #956]	; 109c <mo_testline+0x694>
     cdc:	add	r3, r4, #88	; 0x58
     ce0:	str	r3, [fp, #-732]	; 0xfffffd24
     ce4:	ldr	sl, [r6, r2]
     ce8:	ldr	r2, [pc, #984]	; 10c8 <mo_testline+0x6c0>
     cec:	mov	r1, #60	; 0x3c
     cf0:	add	r2, pc, r2
     cf4:	str	r2, [sp, #12]
     cf8:	str	r9, [sp, #8]
     cfc:	bl	1230 <__divsi3>
     d00:	ldr	r1, [pc, #964]	; 10cc <mo_testline+0x6c4>
     d04:	mov	r2, #33	; 0x21
     d08:	add	sl, sl, #88	; 0x58
     d0c:	str	r2, [sp]
     d10:	ldr	r3, [fp, #-732]	; 0xfffffd24
     d14:	mov	r2, sl
     d18:	add	r1, pc, r1
     d1c:	str	r0, [sp, #4]
     d20:	mov	r0, r4
     d24:	bl	7b0 <sendto_one@plt>
     d28:	mov	r0, r7
     d2c:	bl	7e0 <is_throttle_ip@plt>
     d30:	cmp	r0, #0
     d34:	beq	d88 <mo_testline+0x380>
     d38:	ldr	r2, [pc, #860]	; 109c <mo_testline+0x694>
     d3c:	add	r3, r4, #88	; 0x58
     d40:	str	r3, [fp, #-732]	; 0xfffffd24
     d44:	ldr	sl, [r6, r2]
     d48:	ldr	r2, [pc, #896]	; 10d0 <mo_testline+0x6c8>
     d4c:	mov	r1, #60	; 0x3c
     d50:	add	r2, pc, r2
     d54:	str	r2, [sp, #12]
     d58:	str	r9, [sp, #8]
     d5c:	bl	1230 <__divsi3>
     d60:	ldr	r1, [pc, #876]	; 10d4 <mo_testline+0x6cc>
     d64:	mov	r2, #33	; 0x21
     d68:	add	sl, sl, #88	; 0x58
     d6c:	str	r2, [sp]
     d70:	ldr	r3, [fp, #-732]	; 0xfffffd24
     d74:	mov	r2, sl
     d78:	add	r1, pc, r1
     d7c:	str	r0, [sp, #4]
     d80:	mov	r0, r4
     d84:	bl	7b0 <sendto_one@plt>
     d88:	sub	r3, fp, #688	; 0x2b0
     d8c:	cmp	r5, #0
     d90:	sub	sl, fp, #700	; 0x2bc
     d94:	str	r3, [fp, #-732]	; 0xfffffd24
     d98:	beq	ecc <mo_testline+0x4c4>
     d9c:	mov	r1, r5
     da0:	mov	r2, #11
     da4:	mov	r0, sl
     da8:	bl	864 <rb_strlcpy@plt>
     dac:	ldrb	r3, [r5]
     db0:	cmp	r3, #126	; 0x7e
     db4:	addeq	r5, r5, #1
     db8:	mov	r2, #11
     dbc:	mov	r1, r5
     dc0:	ldr	r0, [fp, #-732]	; 0xfffffd24
     dc4:	bl	864 <rb_strlcpy@plt>
     dc8:	cmp	r8, #1
     dcc:	bne	fbc <mo_testline+0x5b4>
     dd0:	mov	r7, #0
     dd4:	mov	r8, r7
     dd8:	mov	r1, #0
     ddc:	str	r1, [sp, #8]
     de0:	stm	sp, {r7, r8}
     de4:	ldr	r3, [fp, #-732]	; 0xfffffd24
     de8:	mov	r2, sl
     dec:	mov	r0, r9
     df0:	bl	7bc <find_address_conf@plt>
     df4:	subs	r5, r0, #0
     df8:	beq	1000 <mo_testline+0x5f8>
     dfc:	ldr	r3, [r5]
     e00:	tst	r3, #64	; 0x40
     e04:	beq	1034 <mo_testline+0x62c>
     e08:	sub	r3, fp, #704	; 0x2c0
     e0c:	str	r3, [sp, #4]
     e10:	sub	r3, fp, #716	; 0x2cc
     e14:	str	r3, [sp]
     e18:	sub	r2, fp, #712	; 0x2c8
     e1c:	sub	r3, fp, #708	; 0x2c4
     e20:	mov	r1, r5
     e24:	mov	r0, r4
     e28:	bl	7d4 <get_printable_kline@plt>
     e2c:	ldr	r3, [fp, #-712]	; 0xfffffd38
     e30:	ldr	r2, [pc, #672]	; 10d8 <mo_testline+0x6d0>
     e34:	ldr	r0, [pc, #672]	; 10dc <mo_testline+0x6d4>
     e38:	str	r3, [sp]
     e3c:	mov	r1, #75	; 0x4b
     e40:	ldr	r3, [fp, #-716]	; 0xfffffd34
     e44:	add	r2, pc, r2
     e48:	add	r0, pc, r0
     e4c:	bl	840 <snprintf@plt>
     e50:	ldr	r1, [fp, #-704]	; 0xfffffd40
     e54:	ldr	r3, [fp, #-708]	; 0xfffffd3c
     e58:	cmp	r1, #0
     e5c:	beq	ee8 <mo_testline+0x4e0>
     e60:	ldr	r2, [pc, #632]	; 10e0 <mo_testline+0x6d8>
     e64:	add	r2, pc, r2
     e68:	str	r2, [sp]
     e6c:	ldr	r2, [pc, #624]	; 10e4 <mo_testline+0x6dc>
     e70:	sub	r7, fp, #548	; 0x224
     e74:	str	r1, [sp, #4]
     e78:	add	r2, pc, r2
     e7c:	mov	r1, #512	; 0x200
     e80:	mov	r0, r7
     e84:	bl	840 <snprintf@plt>
     e88:	ldr	r0, [r5, #4]
     e8c:	add	r8, r4, #88	; 0x58
     e90:	ands	r0, r0, #8388608	; 0x800000
     e94:	bne	fcc <mo_testline+0x5c4>
     e98:	mov	r1, #75	; 0x4b
     e9c:	ldr	r3, [pc, #504]	; 109c <mo_testline+0x694>
     ea0:	ldr	r2, [r6, r3]
     ea4:	ldr	r3, [pc, #572]	; 10e8 <mo_testline+0x6e0>
     ea8:	str	r1, [sp]
     eac:	add	r3, pc, r3
     eb0:	ldr	r1, [pc, #564]	; 10ec <mo_testline+0x6e4>
     eb4:	stmib	sp, {r0, r3}
     eb8:	str	r7, [sp, #12]
     ebc:	mov	r3, r8
     ec0:	add	r2, r2, #88	; 0x58
     ec4:	add	r1, pc, r1
     ec8:	b	c9c <mo_testline+0x294>
     ecc:	ldr	r5, [pc, #540]	; 10f0 <mo_testline+0x6e8>
     ed0:	mov	r2, #11
     ed4:	add	r5, pc, r5
     ed8:	mov	r1, r5
     edc:	mov	r0, sl
     ee0:	bl	864 <rb_strlcpy@plt>
     ee4:	b	db8 <mo_testline+0x3b0>
     ee8:	ldr	r2, [pc, #516]	; 10f4 <mo_testline+0x6ec>
     eec:	add	r2, pc, r2
     ef0:	mov	r1, r2
     ef4:	b	e68 <mo_testline+0x460>
     ef8:	cmp	r5, #0
     efc:	beq	100c <mo_testline+0x604>
     f00:	ldr	r3, [r5]
     f04:	tst	r3, #2
     f08:	beq	100c <mo_testline+0x604>
     f0c:	ldr	r6, [r5, #24]
     f10:	ldr	r7, [r5, #12]
     f14:	cmp	r6, #0
     f18:	beq	f70 <mo_testline+0x568>
     f1c:	ldrb	r3, [r6]
     f20:	cmp	r3, #0
     f24:	beq	f7c <mo_testline+0x574>
     f28:	ldr	r2, [r5, #28]
     f2c:	mov	r1, r5
     f30:	mov	r0, r4
     f34:	bl	804 <show_iline_prefix@plt>
     f38:	ldr	r3, [r5, #48]	; 0x30
     f3c:	ldr	r2, [pc, #436]	; 10f8 <mo_testline+0x6f0>
     f40:	str	r3, [sp, #16]
     f44:	ldr	r3, [r5, #32]
     f48:	add	r2, pc, r2
     f4c:	str	r3, [sp, #12]
     f50:	ldr	r3, [r5, #16]
     f54:	mov	r1, #215	; 0xd7
     f58:	str	r6, [sp]
     f5c:	stmib	sp, {r0, r3}
     f60:	mov	r3, r7
     f64:	mov	r0, r4
     f68:	bl	81c <sendto_one_numeric@plt>
     f6c:	b	a58 <mo_testline+0x50>
     f70:	ldr	r6, [pc, #388]	; 10fc <mo_testline+0x6f4>
     f74:	add	r6, pc, r6
     f78:	b	f28 <mo_testline+0x520>
     f7c:	ldr	r6, [pc, #380]	; 1100 <mo_testline+0x6f8>
     f80:	add	r6, pc, r6
     f84:	b	f28 <mo_testline+0x520>
     f88:	bl	798 <rb_current_time@plt>
     f8c:	mov	r1, #60	; 0x3c
     f90:	sub	r0, r5, r0
     f94:	bl	1230 <__divsi3>
     f98:	mov	r1, #113	; 0x71
     f9c:	b	af4 <mo_testline+0xec>
     fa0:	ldr	r8, [sl, #36]	; 0x24
     fa4:	bl	798 <rb_current_time@plt>
     fa8:	mov	r1, #60	; 0x3c
     fac:	sub	r0, r8, r0
     fb0:	bl	1230 <__divsi3>
     fb4:	mov	r1, #100	; 0x64
     fb8:	b	c74 <mo_testline+0x26c>
     fbc:	cmp	r8, #3
     fc0:	moveq	r8, #10
     fc4:	movne	r8, #2
     fc8:	b	dd8 <mo_testline+0x3d0>
     fcc:	ldr	r5, [r5, #36]	; 0x24
     fd0:	bl	798 <rb_current_time@plt>
     fd4:	mov	r1, #60	; 0x3c
     fd8:	sub	r0, r5, r0
     fdc:	bl	1230 <__divsi3>
     fe0:	mov	r1, #107	; 0x6b
     fe4:	b	e9c <mo_testline+0x494>
     fe8:	bl	798 <rb_current_time@plt>
     fec:	mov	r1, #60	; 0x3c
     ff0:	sub	r0, r5, r0
     ff4:	bl	1230 <__divsi3>
     ff8:	mov	r1, #113	; 0x71
     ffc:	b	1068 <mo_testline+0x660>
    1000:	ldr	r3, [fp, #-728]	; 0xfffffd28
    1004:	cmp	r3, #0
    1008:	bne	1040 <mo_testline+0x638>
    100c:	ldr	r3, [pc, #136]	; 109c <mo_testline+0x694>
    1010:	ldr	r1, [pc, #236]	; 1104 <mo_testline+0x6fc>
    1014:	ldr	r2, [r6, r3]
    1018:	ldr	r3, [fp, #4]
    101c:	add	r2, r2, #88	; 0x58
    1020:	add	r1, pc, r1
    1024:	ldr	r3, [r3, #4]
    1028:	str	r3, [sp]
    102c:	add	r3, r4, #88	; 0x58
    1030:	b	a50 <mo_testline+0x48>
    1034:	ldr	r3, [fp, #-728]	; 0xfffffd28
    1038:	cmp	r3, #0
    103c:	beq	f00 <mo_testline+0x4f8>
    1040:	ldr	r0, [fp, #-728]	; 0xfffffd28
    1044:	bl	7f8 <find_nick_resv@plt>
    1048:	subs	r7, r0, #0
    104c:	beq	ef8 <mo_testline+0x4f0>
    1050:	ldr	r5, [r7, #36]	; 0x24
    1054:	add	r8, r4, #88	; 0x58
    1058:	cmp	r5, #0
    105c:	bne	fe8 <mo_testline+0x5e0>
    1060:	mov	r1, #81	; 0x51
    1064:	mov	r0, r5
    1068:	ldr	r3, [pc, #44]	; 109c <mo_testline+0x694>
    106c:	ldr	r2, [r6, r3]
    1070:	ldr	r3, [r7, #20]
    1074:	add	r2, r2, #88	; 0x58
    1078:	str	r3, [sp, #12]
    107c:	ldr	r3, [r7, #16]
    1080:	str	r1, [sp]
    1084:	ldr	r1, [pc, #124]	; 1108 <mo_testline+0x700>
    1088:	stmib	sp, {r0, r3}
    108c:	add	r1, pc, r1
    1090:	mov	r3, r8
    1094:	b	b18 <mo_testline+0x110>
    1098:	.word	0x000115d8
    109c:	.word	0x0000007c
    10a0:	.word	0x00000a76
    10a4:	.word	0x00000aaa
    10a8:	.word	0x00000a75
    10ac:	.word	0x00000070
    10b0:	.word	0x000009e3
    10b4:	.word	0x000009cc
    10b8:	.word	0x00000885
    10bc:	.word	0x000008d6
    10c0:	.word	0x0000085f
    10c4:	.word	0x000007f5
    10c8:	.word	0x0000083d
    10cc:	.word	0x000007db
    10d0:	.word	0x000007ea
    10d4:	.word	0x0000077b
    10d8:	.word	0x00000706
    10dc:	.word	0x000112f1
    10e0:	.word	0x00000651
    10e4:	.word	0x000006ae
    10e8:	.word	0x0001128d
    10ec:	.word	0x0000062f
    10f0:	.word	0x00000670
    10f4:	.word	0x000005d1
    10f8:	.word	0x00000608
    10fc:	.word	0x00000543
    1100:	.word	0x00000537
    1104:	.word	0x000004ec
    1108:	.word	0x00000467

0000110c <mo_testgecos>:
    110c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    1110:	mov	r5, r2
    1114:	ldr	r2, [pc, #248]	; 1214 <mo_testgecos+0x108>
    1118:	ldr	r3, [r5, #24]
    111c:	ldr	r1, [pc, #244]	; 1218 <mo_testgecos+0x10c>
    1120:	add	r2, pc, r2
    1124:	cmp	r3, #0
    1128:	ldr	r4, [sp, #40]	; 0x28
    112c:	add	r7, r5, #88	; 0x58
    1130:	ldr	r8, [r2, r1]
    1134:	bne	1164 <mo_testgecos+0x58>
    1138:	ldr	r3, [pc, #220]	; 121c <mo_testgecos+0x110>
    113c:	ldr	r1, [pc, #220]	; 1220 <mo_testgecos+0x114>
    1140:	add	r3, pc, r3
    1144:	str	r3, [sp, #40]	; 0x28
    1148:	add	r2, r8, #88	; 0x58
    114c:	mov	r3, r7
    1150:	add	r1, pc, r1
    1154:	mov	r0, r5
    1158:	add	sp, sp, #16
    115c:	pop	{r4, r5, r6, r7, r8, lr}
    1160:	b	7b0 <sendto_one@plt>
    1164:	ldr	r0, [r3, #36]	; 0x24
    1168:	cmp	r0, #0
    116c:	beq	1138 <mo_testgecos+0x2c>
    1170:	ldr	r1, [pc, #172]	; 1224 <mo_testgecos+0x118>
    1174:	add	r1, pc, r1
    1178:	bl	870 <privilegeset_in_set@plt>
    117c:	cmp	r0, #0
    1180:	beq	1138 <mo_testgecos+0x2c>
    1184:	mov	r1, #0
    1188:	ldr	r0, [r4, #4]
    118c:	bl	858 <find_xline@plt>
    1190:	subs	r6, r0, #0
    1194:	bne	11b4 <mo_testgecos+0xa8>
    1198:	ldr	r3, [r4, #4]
    119c:	ldr	r1, [pc, #132]	; 1228 <mo_testgecos+0x11c>
    11a0:	str	r3, [sp, #40]	; 0x28
    11a4:	add	r2, r8, #88	; 0x58
    11a8:	mov	r3, r7
    11ac:	add	r1, pc, r1
    11b0:	b	1154 <mo_testgecos+0x48>
    11b4:	ldr	r4, [r6, #36]	; 0x24
    11b8:	cmp	r4, #0
    11bc:	bne	11fc <mo_testgecos+0xf0>
    11c0:	mov	r3, #88	; 0x58
    11c4:	mov	r0, r4
    11c8:	ldr	r2, [r6, #20]
    11cc:	ldr	r1, [pc, #88]	; 122c <mo_testgecos+0x120>
    11d0:	str	r2, [sp, #12]
    11d4:	ldr	r2, [r6, #16]
    11d8:	add	r1, pc, r1
    11dc:	str	r3, [sp]
    11e0:	stmib	sp, {r0, r2}
    11e4:	mov	r3, r7
    11e8:	add	r2, r8, #88	; 0x58
    11ec:	mov	r0, r5
    11f0:	bl	7b0 <sendto_one@plt>
    11f4:	add	sp, sp, #16
    11f8:	pop	{r4, r5, r6, r7, r8, pc}
    11fc:	bl	798 <rb_current_time@plt>
    1200:	mov	r1, #60	; 0x3c
    1204:	sub	r0, r4, r0
    1208:	bl	1230 <__divsi3>
    120c:	mov	r3, #120	; 0x78
    1210:	b	11c8 <mo_testgecos+0xbc>
    1214:	.word	0x00010ed8
    1218:	.word	0x0000007c
    121c:	.word	0x000003aa
    1220:	.word	0x0000036e
    1224:	.word	0x00000371
    1228:	.word	0x00000360
    122c:	.word	0x0000031b

00001230 <__divsi3>:
    1230:	cmp	r1, #0
    1234:	beq	1440 <.divsi3_skip_div0_test+0x208>

00001238 <.divsi3_skip_div0_test>:
    1238:	eor	ip, r0, r1
    123c:	rsbmi	r1, r1, #0
    1240:	subs	r2, r1, #1
    1244:	beq	140c <.divsi3_skip_div0_test+0x1d4>
    1248:	movs	r3, r0
    124c:	rsbmi	r3, r0, #0
    1250:	cmp	r3, r1
    1254:	bls	1418 <.divsi3_skip_div0_test+0x1e0>
    1258:	tst	r1, r2
    125c:	beq	1428 <.divsi3_skip_div0_test+0x1f0>
    1260:	clz	r2, r3
    1264:	clz	r0, r1
    1268:	sub	r2, r0, r2
    126c:	rsbs	r2, r2, #31
    1270:	addne	r2, r2, r2, lsl #1
    1274:	mov	r0, #0
    1278:	addne	pc, pc, r2, lsl #2
    127c:	nop			; (mov r0, r0)
    1280:	cmp	r3, r1, lsl #31
    1284:	adc	r0, r0, r0
    1288:	subcs	r3, r3, r1, lsl #31
    128c:	cmp	r3, r1, lsl #30
    1290:	adc	r0, r0, r0
    1294:	subcs	r3, r3, r1, lsl #30
    1298:	cmp	r3, r1, lsl #29
    129c:	adc	r0, r0, r0
    12a0:	subcs	r3, r3, r1, lsl #29
    12a4:	cmp	r3, r1, lsl #28
    12a8:	adc	r0, r0, r0
    12ac:	subcs	r3, r3, r1, lsl #28
    12b0:	cmp	r3, r1, lsl #27
    12b4:	adc	r0, r0, r0
    12b8:	subcs	r3, r3, r1, lsl #27
    12bc:	cmp	r3, r1, lsl #26
    12c0:	adc	r0, r0, r0
    12c4:	subcs	r3, r3, r1, lsl #26
    12c8:	cmp	r3, r1, lsl #25
    12cc:	adc	r0, r0, r0
    12d0:	subcs	r3, r3, r1, lsl #25
    12d4:	cmp	r3, r1, lsl #24
    12d8:	adc	r0, r0, r0
    12dc:	subcs	r3, r3, r1, lsl #24
    12e0:	cmp	r3, r1, lsl #23
    12e4:	adc	r0, r0, r0
    12e8:	subcs	r3, r3, r1, lsl #23
    12ec:	cmp	r3, r1, lsl #22
    12f0:	adc	r0, r0, r0
    12f4:	subcs	r3, r3, r1, lsl #22
    12f8:	cmp	r3, r1, lsl #21
    12fc:	adc	r0, r0, r0
    1300:	subcs	r3, r3, r1, lsl #21
    1304:	cmp	r3, r1, lsl #20
    1308:	adc	r0, r0, r0
    130c:	subcs	r3, r3, r1, lsl #20
    1310:	cmp	r3, r1, lsl #19
    1314:	adc	r0, r0, r0
    1318:	subcs	r3, r3, r1, lsl #19
    131c:	cmp	r3, r1, lsl #18
    1320:	adc	r0, r0, r0
    1324:	subcs	r3, r3, r1, lsl #18
    1328:	cmp	r3, r1, lsl #17
    132c:	adc	r0, r0, r0
    1330:	subcs	r3, r3, r1, lsl #17
    1334:	cmp	r3, r1, lsl #16
    1338:	adc	r0, r0, r0
    133c:	subcs	r3, r3, r1, lsl #16
    1340:	cmp	r3, r1, lsl #15
    1344:	adc	r0, r0, r0
    1348:	subcs	r3, r3, r1, lsl #15
    134c:	cmp	r3, r1, lsl #14
    1350:	adc	r0, r0, r0
    1354:	subcs	r3, r3, r1, lsl #14
    1358:	cmp	r3, r1, lsl #13
    135c:	adc	r0, r0, r0
    1360:	subcs	r3, r3, r1, lsl #13
    1364:	cmp	r3, r1, lsl #12
    1368:	adc	r0, r0, r0
    136c:	subcs	r3, r3, r1, lsl #12
    1370:	cmp	r3, r1, lsl #11
    1374:	adc	r0, r0, r0
    1378:	subcs	r3, r3, r1, lsl #11
    137c:	cmp	r3, r1, lsl #10
    1380:	adc	r0, r0, r0
    1384:	subcs	r3, r3, r1, lsl #10
    1388:	cmp	r3, r1, lsl #9
    138c:	adc	r0, r0, r0
    1390:	subcs	r3, r3, r1, lsl #9
    1394:	cmp	r3, r1, lsl #8
    1398:	adc	r0, r0, r0
    139c:	subcs	r3, r3, r1, lsl #8
    13a0:	cmp	r3, r1, lsl #7
    13a4:	adc	r0, r0, r0
    13a8:	subcs	r3, r3, r1, lsl #7
    13ac:	cmp	r3, r1, lsl #6
    13b0:	adc	r0, r0, r0
    13b4:	subcs	r3, r3, r1, lsl #6
    13b8:	cmp	r3, r1, lsl #5
    13bc:	adc	r0, r0, r0
    13c0:	subcs	r3, r3, r1, lsl #5
    13c4:	cmp	r3, r1, lsl #4
    13c8:	adc	r0, r0, r0
    13cc:	subcs	r3, r3, r1, lsl #4
    13d0:	cmp	r3, r1, lsl #3
    13d4:	adc	r0, r0, r0
    13d8:	subcs	r3, r3, r1, lsl #3
    13dc:	cmp	r3, r1, lsl #2
    13e0:	adc	r0, r0, r0
    13e4:	subcs	r3, r3, r1, lsl #2
    13e8:	cmp	r3, r1, lsl #1
    13ec:	adc	r0, r0, r0
    13f0:	subcs	r3, r3, r1, lsl #1
    13f4:	cmp	r3, r1
    13f8:	adc	r0, r0, r0
    13fc:	subcs	r3, r3, r1
    1400:	cmp	ip, #0
    1404:	rsbmi	r0, r0, #0
    1408:	bx	lr
    140c:	teq	ip, r0
    1410:	rsbmi	r0, r0, #0
    1414:	bx	lr
    1418:	movcc	r0, #0
    141c:	asreq	r0, ip, #31
    1420:	orreq	r0, r0, #1
    1424:	bx	lr
    1428:	clz	r2, r1
    142c:	rsb	r2, r2, #31
    1430:	cmp	ip, #0
    1434:	lsr	r0, r3, r2
    1438:	rsbmi	r0, r0, #0
    143c:	bx	lr
    1440:	cmp	r0, #0
    1444:	mvngt	r0, #-2147483648	; 0x80000000
    1448:	movlt	r0, #-2147483648	; 0x80000000
    144c:	b	1470 <__aeabi_idiv0>

00001450 <__aeabi_idivmod>:
    1450:	cmp	r1, #0
    1454:	beq	1440 <.divsi3_skip_div0_test+0x208>
    1458:	push	{r0, r1, lr}
    145c:	bl	1238 <.divsi3_skip_div0_test>
    1460:	pop	{r1, r2, lr}
    1464:	mul	r3, r2, r0
    1468:	sub	r1, r1, r3
    146c:	bx	lr

00001470 <__aeabi_idiv0>:
    1470:	push	{r1, lr}
    1474:	mov	r0, #8
    1478:	bl	78c <raise@plt>
    147c:	pop	{r1, pc}

Disassembly of section .fini:

00001480 <_fini>:
    1480:	push	{r3, lr}
    1484:	pop	{r3, pc}
