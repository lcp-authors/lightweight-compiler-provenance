
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000b94 <_init>:
 b94:	push	{r3, lr}
 b98:	bl	dd4 <call_weak_fn>
 b9c:	pop	{r3, pc}

Disassembly of section .plt:

00000ba0 <.plt>:
 ba0:	push	{lr}		; (str lr, [sp, #-4]!)
 ba4:	ldr	lr, [pc, #4]	; bb0 <.plt+0x10>
 ba8:	add	lr, pc, lr
 bac:	ldr	pc, [lr, #8]!
 bb0:	.word	0x00013450

00000bb4 <propagate_generic@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #77824	; 0x13000
 bbc:	ldr	pc, [ip, #1104]!	; 0x450

00000bc0 <make_conf@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #77824	; 0x13000
 bc8:	ldr	pc, [ip, #1096]!	; 0x448

00000bcc <rb_current_time@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #77824	; 0x13000
 bd4:	ldr	pc, [ip, #1088]!	; 0x440

00000bd8 <add_to_resv_hash@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #77824	; 0x13000
 be0:	ldr	pc, [ip, #1080]!	; 0x438

00000be4 <sendto_match_servs@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #77824	; 0x13000
 bec:	ldr	pc, [ip, #1072]!	; 0x430

00000bf0 <__cxa_finalize@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #77824	; 0x13000
 bf8:	ldr	pc, [ip, #1064]!	; 0x428

00000bfc <strtol@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #77824	; 0x13000
 c04:	ldr	pc, [ip, #1056]!	; 0x420

00000c08 <sendto_one@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #77824	; 0x13000
 c10:	ldr	pc, [ip, #1048]!	; 0x418

00000c14 <replace_old_ban@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #77824	; 0x13000
 c1c:	ldr	pc, [ip, #1040]!	; 0x410

00000c20 <memcpy@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #77824	; 0x13000
 c28:	ldr	pc, [ip, #1032]!	; 0x408

00000c2c <rb_outofmemory@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #77824	; 0x13000
 c34:	ldr	pc, [ip, #1024]!	; 0x400

00000c38 <resv_nick_fnc@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #77824	; 0x13000
 c40:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c44 <operhash_delete@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #77824	; 0x13000
 c4c:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c50 <sendto_realops_snomask@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #77824	; 0x13000
 c58:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c5c <bandb_add@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #77824	; 0x13000
 c64:	ldr	pc, [ip, #992]!	; 0x3e0

00000c68 <resv_chan_forcepart@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #77824	; 0x13000
 c70:	ldr	pc, [ip, #984]!	; 0x3d8

00000c74 <deactivate_conf@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #77824	; 0x13000
 c7c:	ldr	pc, [ip, #976]!	; 0x3d0

00000c80 <get_oper_name@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #77824	; 0x13000
 c88:	ldr	pc, [ip, #968]!	; 0x3c8

00000c8c <rb_free_rb_dlink_node@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #77824	; 0x13000
 c94:	ldr	pc, [ip, #960]!	; 0x3c0

00000c98 <cluster_generic@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #77824	; 0x13000
 ca0:	ldr	pc, [ip, #952]!	; 0x3b8

00000ca4 <operhash_add@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #77824	; 0x13000
 cac:	ldr	pc, [ip, #944]!	; 0x3b0

00000cb0 <sendto_server@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #77824	; 0x13000
 cb8:	ldr	pc, [ip, #936]!	; 0x3a8

00000cbc <malloc@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #77824	; 0x13000
 cc4:	ldr	pc, [ip, #928]!	; 0x3a0

00000cc8 <__gmon_start__@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #77824	; 0x13000
 cd0:	ldr	pc, [ip, #920]!	; 0x398

00000cd4 <free_conf@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #77824	; 0x13000
 cdc:	ldr	pc, [ip, #912]!	; 0x390

00000ce0 <rb_make_rb_dlink_node@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #77824	; 0x13000
 ce8:	ldr	pc, [ip, #904]!	; 0x388

00000cec <strlen@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #77824	; 0x13000
 cf4:	ldr	pc, [ip, #896]!	; 0x380

00000cf8 <ilog@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #77824	; 0x13000
 d00:	ldr	pc, [ip, #888]!	; 0x378

00000d04 <match@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #77824	; 0x13000
 d0c:	ldr	pc, [ip, #880]!	; 0x370

00000d10 <del_from_resv_hash@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #77824	; 0x13000
 d18:	ldr	pc, [ip, #872]!	; 0x368

00000d1c <find_nick_resv_mask@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #864]!	; 0x360

00000d28 <valid_temp_time@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #856]!	; 0x358

00000d34 <sendto_one_notice@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #848]!	; 0x350

00000d40 <bandb_del@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #840]!	; 0x348

00000d4c <valid_wild_card_simple@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #832]!	; 0x340

00000d58 <find_shared_conf@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #824]!	; 0x338

00000d64 <privilegeset_in_set@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #816]!	; 0x330

00000d70 <hash_find_resv@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #808]!	; 0x328

00000d7c <irccmp@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #800]!	; 0x320

00000d88 <clean_resv_nick@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #792]!	; 0x318

00000d94 <__assert_fail@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #784]!	; 0x310

Disassembly of section .text:

00000da0 <rb_dlinkFind.part.5>:
     da0:	ldr	r3, [pc, #28]	; dc4 <rb_dlinkFind.part.5+0x24>
     da4:	ldr	r1, [pc, #28]	; dc8 <rb_dlinkFind.part.5+0x28>
     da8:	ldr	r0, [pc, #28]	; dcc <rb_dlinkFind.part.5+0x2c>
     dac:	push	{r4, lr}
     db0:	add	r3, pc, r3
     db4:	ldr	r2, [pc, #20]	; dd0 <rb_dlinkFind.part.5+0x30>
     db8:	add	r1, pc, r1
     dbc:	add	r0, pc, r0
     dc0:	bl	d94 <__assert_fail@plt>
     dc4:	.word	0x000022a8
     dc8:	.word	0x00002304
     dcc:	.word	0x0000231c
     dd0:	.word	0x00000137

00000dd4 <call_weak_fn>:
     dd4:	ldr	r3, [pc, #20]	; df0 <call_weak_fn+0x1c>
     dd8:	ldr	r2, [pc, #20]	; df4 <call_weak_fn+0x20>
     ddc:	add	r3, pc, r3
     de0:	ldr	r2, [r3, r2]
     de4:	cmp	r2, #0
     de8:	bxeq	lr
     dec:	b	cc8 <__gmon_start__@plt>
     df0:	.word	0x0001321c
     df4:	.word	0x000000cc

00000df8 <deregister_tm_clones>:
     df8:	ldr	r3, [pc, #52]	; e34 <deregister_tm_clones+0x3c>
     dfc:	ldr	r0, [pc, #52]	; e38 <deregister_tm_clones+0x40>
     e00:	add	r3, pc, r3
     e04:	add	r0, pc, r0
     e08:	add	r3, r3, #3
     e0c:	sub	r3, r3, r0
     e10:	cmp	r3, #6
     e14:	ldr	r3, [pc, #32]	; e3c <deregister_tm_clones+0x44>
     e18:	add	r3, pc, r3
     e1c:	bxls	lr
     e20:	ldr	r2, [pc, #24]	; e40 <deregister_tm_clones+0x48>
     e24:	ldr	r3, [r3, r2]
     e28:	cmp	r3, #0
     e2c:	bxeq	lr
     e30:	bx	r3
     e34:	.word	0x000133a4
     e38:	.word	0x000133a0
     e3c:	.word	0x000131e0
     e40:	.word	0x000000b4

00000e44 <register_tm_clones>:
     e44:	ldr	r1, [pc, #56]	; e84 <register_tm_clones+0x40>
     e48:	ldr	r0, [pc, #56]	; e88 <register_tm_clones+0x44>
     e4c:	add	r1, pc, r1
     e50:	add	r0, pc, r0
     e54:	sub	r1, r1, r0
     e58:	ldr	r3, [pc, #44]	; e8c <register_tm_clones+0x48>
     e5c:	asr	r1, r1, #2
     e60:	add	r3, pc, r3
     e64:	add	r1, r1, r1, lsr #31
     e68:	asrs	r1, r1, #1
     e6c:	bxeq	lr
     e70:	ldr	r2, [pc, #24]	; e90 <register_tm_clones+0x4c>
     e74:	ldr	r3, [r3, r2]
     e78:	cmp	r3, #0
     e7c:	bxeq	lr
     e80:	bx	r3
     e84:	.word	0x00013358
     e88:	.word	0x00013354
     e8c:	.word	0x00013198
     e90:	.word	0x000000dc

00000e94 <__do_global_dtors_aux>:
     e94:	ldr	r3, [pc, #76]	; ee8 <__do_global_dtors_aux+0x54>
     e98:	ldr	r2, [pc, #76]	; eec <__do_global_dtors_aux+0x58>
     e9c:	add	r3, pc, r3
     ea0:	add	r2, pc, r2
     ea4:	ldrb	r3, [r3]
     ea8:	cmp	r3, #0
     eac:	bxne	lr
     eb0:	ldr	r3, [pc, #56]	; ef0 <__do_global_dtors_aux+0x5c>
     eb4:	push	{r4, lr}
     eb8:	ldr	r3, [r2, r3]
     ebc:	cmp	r3, #0
     ec0:	beq	ed0 <__do_global_dtors_aux+0x3c>
     ec4:	ldr	r3, [pc, #40]	; ef4 <__do_global_dtors_aux+0x60>
     ec8:	ldr	r0, [pc, r3]
     ecc:	bl	bf0 <__cxa_finalize@plt>
     ed0:	bl	df8 <deregister_tm_clones>
     ed4:	ldr	r3, [pc, #28]	; ef8 <__do_global_dtors_aux+0x64>
     ed8:	mov	r2, #1
     edc:	add	r3, pc, r3
     ee0:	strb	r2, [r3]
     ee4:	pop	{r4, pc}
     ee8:	.word	0x00013308
     eec:	.word	0x00013158
     ef0:	.word	0x000000b0
     ef4:	.word	0x0001321c
     ef8:	.word	0x000132c8

00000efc <frame_dummy>:
     efc:	ldr	r0, [pc, #56]	; f3c <frame_dummy+0x40>
     f00:	ldr	r3, [pc, #56]	; f40 <frame_dummy+0x44>
     f04:	add	r0, pc, r0
     f08:	ldr	r2, [r0]
     f0c:	add	r3, pc, r3
     f10:	cmp	r2, #0
     f14:	bne	f1c <frame_dummy+0x20>
     f18:	b	e44 <register_tm_clones>
     f1c:	ldr	r2, [pc, #32]	; f44 <frame_dummy+0x48>
     f20:	ldr	r3, [r3, r2]
     f24:	cmp	r3, #0
     f28:	beq	f18 <frame_dummy+0x1c>
     f2c:	push	{r4, lr}
     f30:	blx	r3
     f34:	pop	{r4, lr}
     f38:	b	e44 <register_tm_clones>
     f3c:	.word	0x00012ff0
     f40:	.word	0x000130ec
     f44:	.word	0x000000d8

00000f48 <remove_resv>:
     f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     f4c:	subs	r6, r1, #0
     f50:	ldr	r7, [pc, #1508]	; 153c <remove_resv+0x5f4>
     f54:	sub	sp, sp, #24
     f58:	mov	r8, r0
     f5c:	mov	r9, r2
     f60:	add	r7, pc, r7
     f64:	beq	f80 <remove_resv+0x38>
     f68:	ldr	r3, [pc, #1488]	; 1540 <remove_resv+0x5f8>
     f6c:	ldrb	r2, [r6]
     f70:	ldr	r3, [r7, r3]
     f74:	ldr	r3, [r3, r2, lsl #2]
     f78:	tst	r3, #512	; 0x200
     f7c:	bne	1218 <remove_resv+0x2d0>
     f80:	ldr	r3, [pc, #1468]	; 1544 <remove_resv+0x5fc>
     f84:	ldr	sl, [r7, r3]
     f88:	ldr	r4, [sl]
     f8c:	cmp	r4, #0
     f90:	bne	fa4 <remove_resv+0x5c>
     f94:	b	11e0 <remove_resv+0x298>
     f98:	ldr	r4, [r4, #8]
     f9c:	cmp	r4, #0
     fa0:	beq	11e0 <remove_resv+0x298>
     fa4:	ldr	r5, [r4]
     fa8:	mov	r1, r6
     fac:	ldr	r0, [r5, #16]
     fb0:	bl	d7c <irccmp@plt>
     fb4:	cmp	r0, #0
     fb8:	bne	f98 <remove_resv+0x50>
     fbc:	ldr	r3, [r5, #44]	; 0x2c
     fc0:	cmp	r3, #0
     fc4:	beq	1110 <remove_resv+0x1c8>
     fc8:	cmp	r9, #0
     fcc:	beq	1364 <remove_resv+0x41c>
     fd0:	ldr	r3, [pc, #1392]	; 1548 <remove_resv+0x600>
     fd4:	ldr	r3, [r7, r3]
     fd8:	ldr	r4, [r3]
     fdc:	cmp	r4, #0
     fe0:	bne	ff4 <remove_resv+0xac>
     fe4:	b	142c <remove_resv+0x4e4>
     fe8:	ldr	r4, [r4, #8]
     fec:	cmp	r4, #0
     ff0:	beq	142c <remove_resv+0x4e4>
     ff4:	ldr	r3, [r4]
     ff8:	cmp	r5, r3
     ffc:	bne	fe8 <remove_resv+0xa0>
    1000:	ldr	r1, [pc, #1348]	; 154c <remove_resv+0x604>
    1004:	mov	r2, r6
    1008:	add	r1, pc, r1
    100c:	mov	r0, r8
    1010:	bl	d34 <sendto_one_notice@plt>
    1014:	mov	r0, r8
    1018:	bl	c80 <get_oper_name@plt>
    101c:	ldr	r2, [pc, #1324]	; 1550 <remove_resv+0x608>
    1020:	mov	r1, #0
    1024:	add	r2, pc, r2
    1028:	str	r6, [sp]
    102c:	mov	r3, r0
    1030:	mov	r0, #256	; 0x100
    1034:	bl	c50 <sendto_realops_snomask@plt>
    1038:	mov	r0, r8
    103c:	bl	c80 <get_oper_name@plt>
    1040:	ldr	r1, [pc, #1292]	; 1554 <remove_resv+0x60c>
    1044:	mov	r3, r6
    1048:	add	r1, pc, r1
    104c:	mov	r2, r0
    1050:	mov	r0, #7
    1054:	bl	cf8 <ilog@plt>
    1058:	bl	bcc <rb_current_time@plt>
    105c:	ldr	r3, [r5, #40]	; 0x28
    1060:	cmp	r0, r3
    1064:	mov	r6, r0
    1068:	movgt	r3, r0
    106c:	addle	r3, r3, #1
    1070:	str	r3, [r5, #40]	; 0x28
    1074:	str	r3, [r5, #36]	; 0x24
    1078:	ldr	r0, [r5, #12]
    107c:	bl	c44 <operhash_delete@plt>
    1080:	mov	r0, r8
    1084:	bl	c80 <get_oper_name@plt>
    1088:	bl	ca4 <operhash_add@plt>
    108c:	ldr	r3, [r5, #4]
    1090:	ldr	r9, [r5, #40]	; 0x28
    1094:	ldr	r2, [r5, #44]	; 0x2c
    1098:	ldr	ip, [pc, #1208]	; 1558 <remove_resv+0x610>
    109c:	orr	r3, r3, #8912896	; 0x880000
    10a0:	ldr	sl, [pc, #1204]	; 155c <remove_resv+0x614>
    10a4:	ldr	lr, [pc, #1204]	; 1560 <remove_resv+0x618>
    10a8:	str	r3, [r5, #4]
    10ac:	add	r8, r8, #396	; 0x18c
    10b0:	sub	r2, r2, r9
    10b4:	mov	r3, #0
    10b8:	add	ip, pc, ip
    10bc:	str	r0, [r5, #12]
    10c0:	ldr	lr, [r7, lr]
    10c4:	ldr	r0, [r7, sl]
    10c8:	str	r2, [sp, #20]
    10cc:	ldr	r2, [lr]
    10d0:	ldr	r0, [r0]
    10d4:	str	r9, [sp, #12]
    10d8:	str	r3, [sp, #16]
    10dc:	ldr	lr, [r5, #16]
    10e0:	mov	r1, r3
    10e4:	orr	r2, r0, r2
    10e8:	stmib	sp, {r8, lr}
    10ec:	mov	r0, r3
    10f0:	str	ip, [sp]
    10f4:	bl	cb0 <sendto_server@plt>
    10f8:	mov	r2, r6
    10fc:	mov	r1, r4
    1100:	mov	r0, r5
    1104:	add	sp, sp, #24
    1108:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    110c:	b	c74 <deactivate_conf@plt>
    1110:	cmp	r9, #0
    1114:	beq	112c <remove_resv+0x1e4>
    1118:	ldr	r3, [pc, #1092]	; 1564 <remove_resv+0x61c>
    111c:	ldr	r3, [r7, r3]
    1120:	ldr	r3, [r3, #8]
    1124:	cmp	r3, #0
    1128:	bne	145c <remove_resv+0x514>
    112c:	ldr	r1, [pc, #1076]	; 1568 <remove_resv+0x620>
    1130:	mov	r2, r6
    1134:	add	r1, pc, r1
    1138:	mov	r0, r8
    113c:	bl	d34 <sendto_one_notice@plt>
    1140:	mov	r0, r8
    1144:	bl	c80 <get_oper_name@plt>
    1148:	ldr	r1, [pc, #1052]	; 156c <remove_resv+0x624>
    114c:	mov	r3, r6
    1150:	add	r1, pc, r1
    1154:	mov	r2, r0
    1158:	mov	r0, #7
    115c:	bl	cf8 <ilog@plt>
    1160:	ldr	r7, [r5, #36]	; 0x24
    1164:	cmp	r7, #0
    1168:	beq	132c <remove_resv+0x3e4>
    116c:	mov	r0, r8
    1170:	bl	c80 <get_oper_name@plt>
    1174:	ldr	r2, [pc, #1012]	; 1570 <remove_resv+0x628>
    1178:	str	r6, [sp]
    117c:	add	r2, pc, r2
    1180:	mov	r1, #0
    1184:	mov	r3, r0
    1188:	mov	r0, #256	; 0x100
    118c:	bl	c50 <sendto_realops_snomask@plt>
    1190:	ldmib	r4, {r2, r3}
    1194:	mov	r0, r4
    1198:	cmp	r3, #0
    119c:	strne	r2, [r3, #4]
    11a0:	ldrne	r2, [r4, #4]
    11a4:	streq	r2, [sl, #4]
    11a8:	cmp	r2, #0
    11ac:	strne	r3, [r2, #8]
    11b0:	streq	r3, [sl]
    11b4:	ldr	r3, [sl, #8]
    11b8:	mov	r2, #0
    11bc:	sub	r3, r3, #1
    11c0:	str	r2, [r4, #4]
    11c4:	str	r2, [r4, #8]
    11c8:	str	r3, [sl, #8]
    11cc:	bl	c8c <rb_free_rb_dlink_node@plt>
    11d0:	mov	r0, r5
    11d4:	add	sp, sp, #24
    11d8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    11dc:	b	cd4 <free_conf@plt>
    11e0:	cmp	r9, #0
    11e4:	beq	11fc <remove_resv+0x2b4>
    11e8:	ldr	r3, [pc, #884]	; 1564 <remove_resv+0x61c>
    11ec:	ldr	r3, [r7, r3]
    11f0:	ldr	r3, [r3, #8]
    11f4:	cmp	r3, #0
    11f8:	bne	1490 <remove_resv+0x548>
    11fc:	ldr	r1, [pc, #880]	; 1574 <remove_resv+0x62c>
    1200:	mov	r2, r6
    1204:	mov	r0, r8
    1208:	add	r1, pc, r1
    120c:	add	sp, sp, #24
    1210:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1214:	b	d34 <sendto_one_notice@plt>
    1218:	mov	r0, r6
    121c:	bl	d70 <hash_find_resv@plt>
    1220:	subs	r5, r0, #0
    1224:	beq	1500 <remove_resv+0x5b8>
    1228:	ldr	r3, [r5, #44]	; 0x2c
    122c:	cmp	r3, #0
    1230:	beq	1380 <remove_resv+0x438>
    1234:	cmp	r9, #0
    1238:	beq	1364 <remove_resv+0x41c>
    123c:	ldr	r3, [pc, #772]	; 1548 <remove_resv+0x600>
    1240:	ldr	r3, [r7, r3]
    1244:	ldr	r4, [r3]
    1248:	cmp	r4, #0
    124c:	bne	1260 <remove_resv+0x318>
    1250:	b	142c <remove_resv+0x4e4>
    1254:	ldr	r4, [r4, #8]
    1258:	cmp	r4, #0
    125c:	beq	142c <remove_resv+0x4e4>
    1260:	ldr	r3, [r4]
    1264:	cmp	r5, r3
    1268:	bne	1254 <remove_resv+0x30c>
    126c:	ldr	r1, [pc, #772]	; 1578 <remove_resv+0x630>
    1270:	mov	r2, r6
    1274:	add	r1, pc, r1
    1278:	mov	r0, r8
    127c:	bl	d34 <sendto_one_notice@plt>
    1280:	mov	r0, r8
    1284:	bl	c80 <get_oper_name@plt>
    1288:	ldr	r2, [pc, #748]	; 157c <remove_resv+0x634>
    128c:	mov	r1, #0
    1290:	add	r2, pc, r2
    1294:	str	r6, [sp]
    1298:	mov	r3, r0
    129c:	mov	r0, #256	; 0x100
    12a0:	bl	c50 <sendto_realops_snomask@plt>
    12a4:	mov	r0, r8
    12a8:	bl	c80 <get_oper_name@plt>
    12ac:	ldr	r1, [pc, #716]	; 1580 <remove_resv+0x638>
    12b0:	mov	r3, r6
    12b4:	add	r1, pc, r1
    12b8:	mov	r2, r0
    12bc:	mov	r0, #7
    12c0:	bl	cf8 <ilog@plt>
    12c4:	bl	bcc <rb_current_time@plt>
    12c8:	ldr	r3, [r5, #40]	; 0x28
    12cc:	cmp	r0, r3
    12d0:	mov	r6, r0
    12d4:	movgt	r3, r0
    12d8:	ble	14c4 <remove_resv+0x57c>
    12dc:	str	r3, [r5, #40]	; 0x28
    12e0:	str	r3, [r5, #36]	; 0x24
    12e4:	ldr	r0, [r5, #12]
    12e8:	bl	c44 <operhash_delete@plt>
    12ec:	mov	r0, r8
    12f0:	bl	c80 <get_oper_name@plt>
    12f4:	bl	ca4 <operhash_add@plt>
    12f8:	ldr	r3, [r5, #4]
    12fc:	ldr	r9, [r5, #40]	; 0x28
    1300:	ldr	r2, [r5, #44]	; 0x2c
    1304:	ldr	ip, [pc, #632]	; 1584 <remove_resv+0x63c>
    1308:	orr	r3, r3, #8912896	; 0x880000
    130c:	str	r3, [r5, #4]
    1310:	ldr	sl, [pc, #580]	; 155c <remove_resv+0x614>
    1314:	ldr	lr, [pc, #580]	; 1560 <remove_resv+0x618>
    1318:	add	r8, r8, #396	; 0x18c
    131c:	sub	r2, r2, r9
    1320:	mov	r3, #0
    1324:	add	ip, pc, ip
    1328:	b	10bc <remove_resv+0x174>
    132c:	mov	r2, r7
    1330:	ldr	r1, [r5, #16]
    1334:	mov	r0, #3
    1338:	bl	d40 <bandb_del@plt>
    133c:	mov	r0, r8
    1340:	bl	c80 <get_oper_name@plt>
    1344:	ldr	r2, [pc, #572]	; 1588 <remove_resv+0x640>
    1348:	str	r6, [sp]
    134c:	mov	r1, r7
    1350:	add	r2, pc, r2
    1354:	mov	r3, r0
    1358:	mov	r0, #256	; 0x100
    135c:	bl	c50 <sendto_realops_snomask@plt>
    1360:	b	1190 <remove_resv+0x248>
    1364:	ldr	r1, [pc, #544]	; 158c <remove_resv+0x644>
    1368:	mov	r2, r6
    136c:	mov	r0, r8
    1370:	add	r1, pc, r1
    1374:	add	sp, sp, #24
    1378:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    137c:	b	d34 <sendto_one_notice@plt>
    1380:	cmp	r9, #0
    1384:	beq	139c <remove_resv+0x454>
    1388:	ldr	r3, [pc, #468]	; 1564 <remove_resv+0x61c>
    138c:	ldr	r3, [r7, r3]
    1390:	ldr	r3, [r3, #8]
    1394:	cmp	r3, #0
    1398:	bne	14cc <remove_resv+0x584>
    139c:	ldr	r1, [pc, #492]	; 1590 <remove_resv+0x648>
    13a0:	mov	r2, r6
    13a4:	add	r1, pc, r1
    13a8:	mov	r0, r8
    13ac:	bl	d34 <sendto_one_notice@plt>
    13b0:	mov	r0, r8
    13b4:	bl	c80 <get_oper_name@plt>
    13b8:	ldr	r1, [pc, #468]	; 1594 <remove_resv+0x64c>
    13bc:	mov	r3, r6
    13c0:	add	r1, pc, r1
    13c4:	mov	r2, r0
    13c8:	mov	r0, #7
    13cc:	bl	cf8 <ilog@plt>
    13d0:	ldr	r4, [r5, #36]	; 0x24
    13d4:	cmp	r4, #0
    13d8:	bne	1434 <remove_resv+0x4ec>
    13dc:	mov	r2, r4
    13e0:	ldr	r1, [r5, #16]
    13e4:	mov	r0, #3
    13e8:	bl	d40 <bandb_del@plt>
    13ec:	mov	r0, r8
    13f0:	bl	c80 <get_oper_name@plt>
    13f4:	ldr	r2, [pc, #412]	; 1598 <remove_resv+0x650>
    13f8:	str	r6, [sp]
    13fc:	mov	r1, r4
    1400:	add	r2, pc, r2
    1404:	mov	r3, r0
    1408:	mov	r0, #256	; 0x100
    140c:	bl	c50 <sendto_realops_snomask@plt>
    1410:	mov	r0, r6
    1414:	mov	r1, r5
    1418:	bl	d10 <del_from_resv_hash@plt>
    141c:	mov	r0, r5
    1420:	add	sp, sp, #24
    1424:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1428:	b	cd4 <free_conf@plt>
    142c:	add	sp, sp, #24
    1430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1434:	mov	r0, r8
    1438:	bl	c80 <get_oper_name@plt>
    143c:	ldr	r2, [pc, #344]	; 159c <remove_resv+0x654>
    1440:	str	r6, [sp]
    1444:	add	r2, pc, r2
    1448:	mov	r1, #0
    144c:	mov	r3, r0
    1450:	mov	r0, #256	; 0x100
    1454:	bl	c50 <sendto_realops_snomask@plt>
    1458:	b	1410 <remove_resv+0x4c8>
    145c:	ldr	r3, [pc, #316]	; 15a0 <remove_resv+0x658>
    1460:	ldr	r0, [pc, #316]	; 15a4 <remove_resv+0x65c>
    1464:	ldr	r1, [pc, #316]	; 15a8 <remove_resv+0x660>
    1468:	ldr	r3, [r7, r3]
    146c:	add	r0, pc, r0
    1470:	str	r6, [sp, #4]
    1474:	mov	r2, #512	; 0x200
    1478:	ldr	r3, [r3]
    147c:	add	r1, pc, r1
    1480:	str	r0, [sp]
    1484:	mov	r0, r8
    1488:	bl	c98 <cluster_generic@plt>
    148c:	b	112c <remove_resv+0x1e4>
    1490:	ldr	r3, [pc, #264]	; 15a0 <remove_resv+0x658>
    1494:	ldr	r0, [pc, #272]	; 15ac <remove_resv+0x664>
    1498:	ldr	r1, [pc, #272]	; 15b0 <remove_resv+0x668>
    149c:	ldr	r3, [r7, r3]
    14a0:	add	r0, pc, r0
    14a4:	mov	r2, #512	; 0x200
    14a8:	add	r1, pc, r1
    14ac:	str	r6, [sp, #4]
    14b0:	ldr	r3, [r3]
    14b4:	str	r0, [sp]
    14b8:	mov	r0, r8
    14bc:	bl	c98 <cluster_generic@plt>
    14c0:	b	11fc <remove_resv+0x2b4>
    14c4:	add	r3, r3, #1
    14c8:	b	12dc <remove_resv+0x394>
    14cc:	ldr	r3, [pc, #204]	; 15a0 <remove_resv+0x658>
    14d0:	ldr	r0, [pc, #220]	; 15b4 <remove_resv+0x66c>
    14d4:	ldr	r1, [pc, #220]	; 15b8 <remove_resv+0x670>
    14d8:	ldr	r3, [r7, r3]
    14dc:	add	r0, pc, r0
    14e0:	str	r6, [sp, #4]
    14e4:	mov	r2, #512	; 0x200
    14e8:	ldr	r3, [r3]
    14ec:	add	r1, pc, r1
    14f0:	str	r0, [sp]
    14f4:	mov	r0, r8
    14f8:	bl	c98 <cluster_generic@plt>
    14fc:	b	139c <remove_resv+0x454>
    1500:	cmp	r9, #0
    1504:	beq	11fc <remove_resv+0x2b4>
    1508:	ldr	r3, [pc, #84]	; 1564 <remove_resv+0x61c>
    150c:	ldr	r3, [r7, r3]
    1510:	ldr	r3, [r3, #8]
    1514:	cmp	r3, #0
    1518:	beq	11fc <remove_resv+0x2b4>
    151c:	ldr	r3, [pc, #124]	; 15a0 <remove_resv+0x658>
    1520:	ldr	r0, [pc, #148]	; 15bc <remove_resv+0x674>
    1524:	ldr	r1, [pc, #148]	; 15c0 <remove_resv+0x678>
    1528:	add	r0, pc, r0
    152c:	mov	r2, #512	; 0x200
    1530:	ldr	r3, [r7, r3]
    1534:	add	r1, pc, r1
    1538:	b	14ac <remove_resv+0x564>
    153c:	.word	0x00013098
    1540:	.word	0x000000d4
    1544:	.word	0x000000b8
    1548:	.word	0x000000bc
    154c:	.word	0x0000214c
    1550:	.word	0x000021a8
    1554:	.word	0x00002128
    1558:	.word	0x0000207c
    155c:	.word	0x000000c4
    1560:	.word	0x000000c8
    1564:	.word	0x000000d0
    1568:	.word	0x00002020
    156c:	.word	0x00002020
    1570:	.word	0x00002024
    1574:	.word	0x00001ee8
    1578:	.word	0x00001ee0
    157c:	.word	0x00001f3c
    1580:	.word	0x00001ebc
    1584:	.word	0x00001e10
    1588:	.word	0x00001e2c
    158c:	.word	0x00001d90
    1590:	.word	0x00001db0
    1594:	.word	0x00001db0
    1598:	.word	0x00001d7c
    159c:	.word	0x00001d5c
    15a0:	.word	0x000000c0
    15a4:	.word	0x00001e14
    15a8:	.word	0x00001c6c
    15ac:	.word	0x00001de0
    15b0:	.word	0x00001c40
    15b4:	.word	0x00001da4
    15b8:	.word	0x00001bfc
    15bc:	.word	0x00001d58
    15c0:	.word	0x00001bb4

000015c4 <mo_unresv>:
    15c4:	push	{r4, r5, r6, r7, lr}
    15c8:	mov	r4, r2
    15cc:	ldr	r2, [r2, #24]
    15d0:	sub	sp, sp, #12
    15d4:	ldr	r5, [pc, #336]	; 172c <mo_unresv+0x168>
    15d8:	cmp	r2, #0
    15dc:	add	r5, pc, r5
    15e0:	ldr	r6, [sp, #32]
    15e4:	beq	1630 <mo_unresv+0x6c>
    15e8:	ldr	r0, [r2, #36]	; 0x24
    15ec:	cmp	r0, #0
    15f0:	beq	1630 <mo_unresv+0x6c>
    15f4:	ldr	r1, [pc, #308]	; 1730 <mo_unresv+0x16c>
    15f8:	mov	r7, r3
    15fc:	add	r1, pc, r1
    1600:	bl	d64 <privilegeset_in_set@plt>
    1604:	cmp	r0, #0
    1608:	beq	1630 <mo_unresv+0x6c>
    160c:	cmp	r7, #4
    1610:	beq	1664 <mo_unresv+0xa0>
    1614:	mov	r7, #1
    1618:	mov	r2, r7
    161c:	ldr	r1, [r6, #4]
    1620:	mov	r0, r4
    1624:	add	sp, sp, #12
    1628:	pop	{r4, r5, r6, r7, lr}
    162c:	b	f48 <remove_resv>
    1630:	ldr	r2, [pc, #252]	; 1734 <mo_unresv+0x170>
    1634:	ldr	r1, [pc, #252]	; 1738 <mo_unresv+0x174>
    1638:	add	r3, r4, #88	; 0x58
    163c:	add	r1, pc, r1
    1640:	ldr	r2, [r5, r2]
    1644:	str	r1, [sp, #32]
    1648:	ldr	r1, [pc, #236]	; 173c <mo_unresv+0x178>
    164c:	mov	r0, r4
    1650:	add	r2, r2, #88	; 0x58
    1654:	add	r1, pc, r1
    1658:	add	sp, sp, #12
    165c:	pop	{r4, r5, r6, r7, lr}
    1660:	b	c08 <sendto_one@plt>
    1664:	ldr	r1, [pc, #212]	; 1740 <mo_unresv+0x17c>
    1668:	ldr	r0, [r6, #8]
    166c:	add	r1, pc, r1
    1670:	bl	d7c <irccmp@plt>
    1674:	subs	r7, r0, #0
    1678:	bne	1614 <mo_unresv+0x50>
    167c:	ldr	r3, [r4, #24]
    1680:	cmp	r3, #0
    1684:	beq	16a8 <mo_unresv+0xe4>
    1688:	ldr	r0, [r3, #36]	; 0x24
    168c:	cmp	r0, #0
    1690:	beq	16a8 <mo_unresv+0xe4>
    1694:	ldr	r1, [pc, #168]	; 1744 <mo_unresv+0x180>
    1698:	add	r1, pc, r1
    169c:	bl	d64 <privilegeset_in_set@plt>
    16a0:	cmp	r0, #0
    16a4:	bne	16d4 <mo_unresv+0x110>
    16a8:	ldr	r2, [pc, #132]	; 1734 <mo_unresv+0x170>
    16ac:	ldr	r1, [pc, #148]	; 1748 <mo_unresv+0x184>
    16b0:	add	r3, r4, #88	; 0x58
    16b4:	add	r1, pc, r1
    16b8:	ldr	r2, [r5, r2]
    16bc:	str	r1, [sp, #32]
    16c0:	ldr	r1, [pc, #132]	; 174c <mo_unresv+0x188>
    16c4:	mov	r0, r4
    16c8:	add	r2, r2, #88	; 0x58
    16cc:	add	r1, pc, r1
    16d0:	b	1658 <mo_unresv+0x94>
    16d4:	ldr	r3, [pc, #116]	; 1750 <mo_unresv+0x18c>
    16d8:	ldr	r1, [pc, #116]	; 1754 <mo_unresv+0x190>
    16dc:	ldr	r2, [r6, #12]
    16e0:	ldr	r3, [r5, r3]
    16e4:	add	r1, pc, r1
    16e8:	ldr	r0, [r6, #4]
    16ec:	ldr	r3, [r3]
    16f0:	str	r1, [sp]
    16f4:	ldr	r1, [pc, #92]	; 1758 <mo_unresv+0x194>
    16f8:	str	r0, [sp, #4]
    16fc:	add	r1, pc, r1
    1700:	mov	r0, r4
    1704:	bl	bb4 <propagate_generic@plt>
    1708:	ldr	r3, [pc, #36]	; 1734 <mo_unresv+0x170>
    170c:	ldr	r0, [r6, #12]
    1710:	ldr	r1, [r5, r3]
    1714:	add	r1, r1, #88	; 0x58
    1718:	bl	d04 <match@plt>
    171c:	cmp	r0, #0
    1720:	bne	1618 <mo_unresv+0x54>
    1724:	add	sp, sp, #12
    1728:	pop	{r4, r5, r6, r7, pc}
    172c:	.word	0x00012a1c
    1730:	.word	0x00001c2c
    1734:	.word	0x000000e0
    1738:	.word	0x00001be4
    173c:	.word	0x00001ba4
    1740:	.word	0x00001bc8
    1744:	.word	0x00001bac
    1748:	.word	0x00001b84
    174c:	.word	0x00001b2c
    1750:	.word	0x000000c0
    1754:	.word	0x00001b9c
    1758:	.word	0x000019ec

0000175c <ms_unresv>:
    175c:	push	{r4, r5, r6, lr}
    1760:	sub	sp, sp, #8
    1764:	ldr	r4, [pc, #184]	; 1824 <ms_unresv+0xc8>
    1768:	ldr	r3, [pc, #184]	; 1828 <ms_unresv+0xcc>
    176c:	add	r4, pc, r4
    1770:	ldr	r5, [sp, #24]
    1774:	ldr	r3, [r4, r3]
    1778:	ldr	r1, [pc, #172]	; 182c <ms_unresv+0xd0>
    177c:	ldr	ip, [r5, #4]
    1780:	add	r1, pc, r1
    1784:	ldr	r0, [r5, #8]
    1788:	ldr	r3, [r3]
    178c:	str	r1, [sp]
    1790:	ldr	r1, [pc, #152]	; 1830 <ms_unresv+0xd4>
    1794:	mov	r6, r2
    1798:	str	r0, [sp, #4]
    179c:	mov	r2, ip
    17a0:	mov	r0, r6
    17a4:	add	r1, pc, r1
    17a8:	bl	bb4 <propagate_generic@plt>
    17ac:	ldr	r3, [pc, #128]	; 1834 <ms_unresv+0xd8>
    17b0:	ldr	r0, [r5, #4]
    17b4:	ldr	r1, [r4, r3]
    17b8:	add	r1, r1, #88	; 0x58
    17bc:	bl	d04 <match@plt>
    17c0:	cmp	r0, #0
    17c4:	beq	17d4 <ms_unresv+0x78>
    17c8:	ldrh	r3, [r6, #80]	; 0x50
    17cc:	cmp	r3, #64	; 0x40
    17d0:	beq	17dc <ms_unresv+0x80>
    17d4:	add	sp, sp, #8
    17d8:	pop	{r4, r5, r6, pc}
    17dc:	ldr	r3, [r6, #24]
    17e0:	cmp	r3, #0
    17e4:	beq	17d4 <ms_unresv+0x78>
    17e8:	ldr	r2, [r6, #32]
    17ec:	mov	r3, #512	; 0x200
    17f0:	add	r2, r2, #88	; 0x58
    17f4:	add	r1, r6, #163	; 0xa3
    17f8:	add	r0, r6, #152	; 0x98
    17fc:	ldr	r4, [r5, #8]
    1800:	bl	d58 <find_shared_conf@plt>
    1804:	cmp	r0, #0
    1808:	beq	17d4 <ms_unresv+0x78>
    180c:	mov	r1, r4
    1810:	mov	r0, r6
    1814:	mov	r2, #0
    1818:	add	sp, sp, #8
    181c:	pop	{r4, r5, r6, lr}
    1820:	b	f48 <remove_resv>
    1824:	.word	0x0001288c
    1828:	.word	0x000000c0
    182c:	.word	0x00001b00
    1830:	.word	0x00001944
    1834:	.word	0x000000e0

00001838 <me_resv>:
    1838:	ldrh	r3, [r2, #80]	; 0x50
    183c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1840:	sub	sp, sp, #28
    1844:	ldr	r5, [pc, #1432]	; 1de4 <me_resv+0x5ac>
    1848:	cmp	r3, #64	; 0x40
    184c:	add	r5, pc, r5
    1850:	ldr	ip, [sp, #64]	; 0x40
    1854:	beq	1860 <me_resv+0x28>
    1858:	add	sp, sp, #28
    185c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1860:	ldr	r3, [r2, #24]
    1864:	cmp	r3, #0
    1868:	beq	1858 <me_resv+0x20>
    186c:	mov	r4, r2
    1870:	mov	r1, #0
    1874:	mov	r2, #10
    1878:	ldmib	ip, {r0, r6}
    187c:	ldr	r8, [ip, #16]
    1880:	bl	bfc <strtol@plt>
    1884:	ldrd	r2, [r4, #64]	; 0x40
    1888:	mov	r3, #0
    188c:	and	r2, r2, #8192	; 0x2000
    1890:	orrs	r3, r2, r3
    1894:	mov	r7, r0
    1898:	bne	1940 <me_resv+0x108>
    189c:	ldr	r2, [r4, #32]
    18a0:	cmp	r7, #0
    18a4:	movgt	r3, #128	; 0x80
    18a8:	movle	r3, #256	; 0x100
    18ac:	add	r2, r2, #88	; 0x58
    18b0:	add	r1, r4, #163	; 0xa3
    18b4:	add	r0, r4, #152	; 0x98
    18b8:	bl	d58 <find_shared_conf@plt>
    18bc:	cmp	r0, #0
    18c0:	beq	1858 <me_resv+0x20>
    18c4:	cmp	r6, #0
    18c8:	beq	18e4 <me_resv+0xac>
    18cc:	ldr	r3, [pc, #1300]	; 1de8 <me_resv+0x5b0>
    18d0:	ldrb	r2, [r6]
    18d4:	ldr	r3, [r5, r3]
    18d8:	ldr	r3, [r3, r2, lsl #2]
    18dc:	tst	r3, #512	; 0x200
    18e0:	bne	1950 <me_resv+0x118>
    18e4:	mov	r0, r6
    18e8:	bl	d88 <clean_resv_nick@plt>
    18ec:	cmp	r0, #0
    18f0:	beq	1ae8 <me_resv+0x2b0>
    18f4:	mov	r0, r6
    18f8:	bl	cec <strlen@plt>
    18fc:	cmp	r0, #64	; 0x40
    1900:	bhi	1afc <me_resv+0x2c4>
    1904:	mov	r0, r6
    1908:	bl	d4c <valid_wild_card_simple@plt>
    190c:	cmp	r0, #0
    1910:	beq	1974 <me_resv+0x13c>
    1914:	mov	r0, r6
    1918:	bl	d1c <find_nick_resv_mask@plt>
    191c:	subs	sl, r0, #0
    1920:	beq	1b24 <me_resv+0x2ec>
    1924:	ldr	r1, [pc, #1216]	; 1dec <me_resv+0x5b4>
    1928:	mov	r2, r6
    192c:	mov	r0, r4
    1930:	add	r1, pc, r1
    1934:	add	sp, sp, #28
    1938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    193c:	b	d34 <sendto_one_notice@plt>
    1940:	ldrh	r3, [r4, #80]	; 0x50
    1944:	cmp	r3, #64	; 0x40
    1948:	bne	189c <me_resv+0x64>
    194c:	b	18c4 <me_resv+0x8c>
    1950:	mov	r0, r6
    1954:	bl	d70 <hash_find_resv@plt>
    1958:	subs	r9, r0, #0
    195c:	beq	1990 <me_resv+0x158>
    1960:	ldr	r1, [pc, #1160]	; 1df0 <me_resv+0x5b8>
    1964:	mov	r2, r6
    1968:	mov	r0, r4
    196c:	add	r1, pc, r1
    1970:	b	1934 <me_resv+0xfc>
    1974:	ldr	r3, [pc, #1144]	; 1df4 <me_resv+0x5bc>
    1978:	ldr	r1, [pc, #1144]	; 1df8 <me_resv+0x5c0>
    197c:	mov	r0, r4
    1980:	ldr	r3, [r5, r3]
    1984:	add	r1, pc, r1
    1988:	ldr	r2, [r3, #240]	; 0xf0
    198c:	b	1934 <me_resv+0xfc>
    1990:	mov	r0, r6
    1994:	bl	cec <strlen@plt>
    1998:	cmp	r0, #200	; 0xc8
    199c:	bhi	1b10 <me_resv+0x2d8>
    19a0:	bl	bc0 <make_conf@plt>
    19a4:	mov	sl, #256	; 0x100
    19a8:	str	r9, [r0, #32]
    19ac:	str	sl, [r0]
    19b0:	mov	r5, r0
    19b4:	bl	bcc <rb_current_time@plt>
    19b8:	str	r0, [r5, #40]	; 0x28
    19bc:	mov	r0, r6
    19c0:	bl	cec <strlen@plt>
    19c4:	add	fp, r0, #1
    19c8:	mov	r0, fp
    19cc:	bl	cbc <malloc@plt>
    19d0:	subs	r3, r0, #0
    19d4:	beq	1ca4 <me_resv+0x46c>
    19d8:	mov	r2, fp
    19dc:	mov	r1, r6
    19e0:	str	r3, [sp, #20]
    19e4:	bl	c20 <memcpy@plt>
    19e8:	ldr	r3, [sp, #20]
    19ec:	mov	r0, r8
    19f0:	str	r3, [r5, #16]
    19f4:	bl	cec <strlen@plt>
    19f8:	add	fp, r0, #1
    19fc:	mov	r0, fp
    1a00:	bl	cbc <malloc@plt>
    1a04:	subs	r3, r0, #0
    1a08:	str	r3, [sp, #20]
    1a0c:	beq	1ca4 <me_resv+0x46c>
    1a10:	mov	r2, fp
    1a14:	mov	r1, r8
    1a18:	bl	c20 <memcpy@plt>
    1a1c:	ldr	r3, [sp, #20]
    1a20:	mov	r0, r4
    1a24:	str	r3, [r5, #20]
    1a28:	bl	c80 <get_oper_name@plt>
    1a2c:	bl	ca4 <operhash_add@plt>
    1a30:	cmp	r7, #0
    1a34:	str	r0, [r5, #12]
    1a38:	ble	1ca8 <me_resv+0x470>
    1a3c:	bl	bcc <rb_current_time@plt>
    1a40:	add	r0, r7, r0
    1a44:	str	r0, [r5, #36]	; 0x24
    1a48:	mov	r0, r4
    1a4c:	bl	c80 <get_oper_name@plt>
    1a50:	ldr	r2, [pc, #932]	; 1dfc <me_resv+0x5c4>
    1a54:	asr	r3, r7, #31
    1a58:	str	r8, [sp, #8]
    1a5c:	smull	r1, r2, r2, r7
    1a60:	str	r6, [sp, #4]
    1a64:	add	r2, r2, r7
    1a68:	mov	r1, r9
    1a6c:	rsb	r9, r3, r2, asr #5
    1a70:	ldr	r2, [pc, #904]	; 1e00 <me_resv+0x5c8>
    1a74:	str	r9, [sp]
    1a78:	add	r2, pc, r2
    1a7c:	mov	r3, r0
    1a80:	mov	r0, sl
    1a84:	bl	c50 <sendto_realops_snomask@plt>
    1a88:	mov	r0, r4
    1a8c:	bl	c80 <get_oper_name@plt>
    1a90:	ldr	r1, [pc, #876]	; 1e04 <me_resv+0x5cc>
    1a94:	mov	r3, r9
    1a98:	add	r1, pc, r1
    1a9c:	stm	sp, {r6, r8}
    1aa0:	mov	r2, r0
    1aa4:	mov	r0, #7
    1aa8:	bl	cf8 <ilog@plt>
    1aac:	ldr	r1, [pc, #852]	; 1e08 <me_resv+0x5d0>
    1ab0:	mov	r3, r6
    1ab4:	mov	r2, r9
    1ab8:	mov	r0, r4
    1abc:	add	r1, pc, r1
    1ac0:	bl	d34 <sendto_one_notice@plt>
    1ac4:	mov	r1, r5
    1ac8:	ldr	r0, [r5, #16]
    1acc:	bl	bd8 <add_to_resv_hash@plt>
    1ad0:	mov	r2, r7
    1ad4:	ldr	r1, [r5, #20]
    1ad8:	ldr	r0, [r5, #16]
    1adc:	add	sp, sp, #28
    1ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ae4:	b	c68 <resv_chan_forcepart@plt>
    1ae8:	ldr	r1, [pc, #796]	; 1e0c <me_resv+0x5d4>
    1aec:	mov	r2, r6
    1af0:	mov	r0, r4
    1af4:	add	r1, pc, r1
    1af8:	b	1934 <me_resv+0xfc>
    1afc:	ldr	r1, [pc, #780]	; 1e10 <me_resv+0x5d8>
    1b00:	mov	r2, r6
    1b04:	mov	r0, r4
    1b08:	add	r1, pc, r1
    1b0c:	b	1934 <me_resv+0xfc>
    1b10:	ldr	r1, [pc, #764]	; 1e14 <me_resv+0x5dc>
    1b14:	mov	r2, r6
    1b18:	mov	r0, r4
    1b1c:	add	r1, pc, r1
    1b20:	b	1934 <me_resv+0xfc>
    1b24:	bl	bc0 <make_conf@plt>
    1b28:	mov	r3, #512	; 0x200
    1b2c:	str	r3, [r0]
    1b30:	str	sl, [r0, #32]
    1b34:	mov	r9, r0
    1b38:	bl	bcc <rb_current_time@plt>
    1b3c:	str	r0, [r9, #40]	; 0x28
    1b40:	mov	r0, r6
    1b44:	bl	cec <strlen@plt>
    1b48:	add	fp, r0, #1
    1b4c:	mov	r0, fp
    1b50:	bl	cbc <malloc@plt>
    1b54:	subs	r3, r0, #0
    1b58:	str	r3, [sp, #20]
    1b5c:	beq	1ca4 <me_resv+0x46c>
    1b60:	mov	r2, fp
    1b64:	mov	r1, r6
    1b68:	bl	c20 <memcpy@plt>
    1b6c:	ldr	r3, [sp, #20]
    1b70:	mov	r0, r8
    1b74:	str	r3, [r9, #16]
    1b78:	bl	cec <strlen@plt>
    1b7c:	add	fp, r0, #1
    1b80:	mov	r0, fp
    1b84:	bl	cbc <malloc@plt>
    1b88:	subs	r3, r0, #0
    1b8c:	str	r3, [sp, #20]
    1b90:	beq	1ca4 <me_resv+0x46c>
    1b94:	mov	r2, fp
    1b98:	mov	r1, r8
    1b9c:	bl	c20 <memcpy@plt>
    1ba0:	ldr	r3, [sp, #20]
    1ba4:	mov	r0, r4
    1ba8:	str	r3, [r9, #20]
    1bac:	bl	c80 <get_oper_name@plt>
    1bb0:	bl	ca4 <operhash_add@plt>
    1bb4:	cmp	r7, #0
    1bb8:	str	r0, [r9, #12]
    1bbc:	ble	1d2c <me_resv+0x4f4>
    1bc0:	bl	bcc <rb_current_time@plt>
    1bc4:	add	r0, r7, r0
    1bc8:	str	r0, [r9, #36]	; 0x24
    1bcc:	mov	r0, r4
    1bd0:	bl	c80 <get_oper_name@plt>
    1bd4:	ldr	r2, [pc, #544]	; 1dfc <me_resv+0x5c4>
    1bd8:	asr	r3, r7, #31
    1bdc:	str	r8, [sp, #8]
    1be0:	smull	r1, r2, r2, r7
    1be4:	str	r6, [sp, #4]
    1be8:	add	r2, r2, r7
    1bec:	mov	r1, sl
    1bf0:	rsb	sl, r3, r2, asr #5
    1bf4:	ldr	r2, [pc, #540]	; 1e18 <me_resv+0x5e0>
    1bf8:	str	sl, [sp]
    1bfc:	add	r2, pc, r2
    1c00:	mov	r3, r0
    1c04:	mov	r0, #256	; 0x100
    1c08:	bl	c50 <sendto_realops_snomask@plt>
    1c0c:	mov	r0, r4
    1c10:	bl	c80 <get_oper_name@plt>
    1c14:	ldr	r1, [pc, #512]	; 1e1c <me_resv+0x5e4>
    1c18:	mov	r3, sl
    1c1c:	add	r1, pc, r1
    1c20:	stm	sp, {r6, r8}
    1c24:	mov	r2, r0
    1c28:	mov	r0, #7
    1c2c:	bl	cf8 <ilog@plt>
    1c30:	ldr	r1, [pc, #488]	; 1e20 <me_resv+0x5e8>
    1c34:	mov	r3, r6
    1c38:	mov	r2, sl
    1c3c:	mov	r0, r4
    1c40:	add	r1, pc, r1
    1c44:	bl	d34 <sendto_one_notice@plt>
    1c48:	bl	ce0 <rb_make_rb_dlink_node@plt>
    1c4c:	subs	r3, r0, #0
    1c50:	beq	1dc0 <me_resv+0x588>
    1c54:	ldr	r2, [pc, #456]	; 1e24 <me_resv+0x5ec>
    1c58:	mov	r1, #0
    1c5c:	str	r9, [r3]
    1c60:	str	r1, [r3, #4]
    1c64:	ldr	ip, [r5, r2]
    1c68:	ldr	r2, [ip]
    1c6c:	cmp	r2, r1
    1c70:	str	r2, [r3, #8]
    1c74:	strne	r3, [r2, #4]
    1c78:	beq	1db0 <me_resv+0x578>
    1c7c:	ldr	lr, [ip, #8]
    1c80:	mov	r2, r7
    1c84:	add	lr, lr, #1
    1c88:	ldr	r1, [r9, #20]
    1c8c:	ldr	r0, [r9, #16]
    1c90:	str	r3, [ip]
    1c94:	str	lr, [ip, #8]
    1c98:	add	sp, sp, #28
    1c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ca0:	b	c38 <resv_nick_fnc@plt>
    1ca4:	bl	c2c <rb_outofmemory@plt>
    1ca8:	mov	r0, r4
    1cac:	bl	c80 <get_oper_name@plt>
    1cb0:	ldr	r2, [pc, #368]	; 1e28 <me_resv+0x5f0>
    1cb4:	mov	r1, r9
    1cb8:	add	r2, pc, r2
    1cbc:	stm	sp, {r6, r8}
    1cc0:	mov	r3, r0
    1cc4:	mov	r0, sl
    1cc8:	bl	c50 <sendto_realops_snomask@plt>
    1ccc:	mov	r0, r4
    1cd0:	bl	c80 <get_oper_name@plt>
    1cd4:	ldr	r1, [pc, #336]	; 1e2c <me_resv+0x5f4>
    1cd8:	mov	r3, r6
    1cdc:	str	r8, [sp]
    1ce0:	add	r1, pc, r1
    1ce4:	mov	r2, r0
    1ce8:	mov	r0, #7
    1cec:	bl	cf8 <ilog@plt>
    1cf0:	ldr	r1, [pc, #312]	; 1e30 <me_resv+0x5f8>
    1cf4:	mov	r2, r6
    1cf8:	mov	r0, r4
    1cfc:	add	r1, pc, r1
    1d00:	bl	d34 <sendto_one_notice@plt>
    1d04:	ldr	r2, [r5, #16]
    1d08:	str	r9, [sp, #8]
    1d0c:	str	r9, [sp, #4]
    1d10:	ldr	r0, [r5, #20]
    1d14:	mov	r1, r4
    1d18:	str	r0, [sp]
    1d1c:	mov	r3, r9
    1d20:	mov	r0, #3
    1d24:	bl	c5c <bandb_add@plt>
    1d28:	b	1ac4 <me_resv+0x28c>
    1d2c:	mov	r0, r4
    1d30:	bl	c80 <get_oper_name@plt>
    1d34:	ldr	r2, [pc, #248]	; 1e34 <me_resv+0x5fc>
    1d38:	mov	r1, sl
    1d3c:	add	r2, pc, r2
    1d40:	stm	sp, {r6, r8}
    1d44:	mov	r3, r0
    1d48:	mov	r0, #256	; 0x100
    1d4c:	bl	c50 <sendto_realops_snomask@plt>
    1d50:	mov	r0, r4
    1d54:	bl	c80 <get_oper_name@plt>
    1d58:	ldr	r1, [pc, #216]	; 1e38 <me_resv+0x600>
    1d5c:	mov	r3, r6
    1d60:	str	r8, [sp]
    1d64:	add	r1, pc, r1
    1d68:	mov	r2, r0
    1d6c:	mov	r0, #7
    1d70:	bl	cf8 <ilog@plt>
    1d74:	ldr	r1, [pc, #192]	; 1e3c <me_resv+0x604>
    1d78:	mov	r2, r6
    1d7c:	mov	r0, r4
    1d80:	add	r1, pc, r1
    1d84:	bl	d34 <sendto_one_notice@plt>
    1d88:	ldr	r2, [r9, #16]
    1d8c:	str	sl, [sp, #8]
    1d90:	str	sl, [sp, #4]
    1d94:	ldr	r0, [r9, #20]
    1d98:	mov	r1, r4
    1d9c:	str	r0, [sp]
    1da0:	mov	r3, sl
    1da4:	mov	r0, #3
    1da8:	bl	c5c <bandb_add@plt>
    1dac:	b	1c48 <me_resv+0x410>
    1db0:	ldr	r2, [ip, #4]
    1db4:	cmp	r2, #0
    1db8:	streq	r3, [ip, #4]
    1dbc:	b	1c7c <me_resv+0x444>
    1dc0:	ldr	r3, [pc, #120]	; 1e40 <me_resv+0x608>
    1dc4:	ldr	r1, [pc, #120]	; 1e44 <me_resv+0x60c>
    1dc8:	ldr	r0, [pc, #120]	; 1e48 <me_resv+0x610>
    1dcc:	add	r3, pc, r3
    1dd0:	mov	r2, #144	; 0x90
    1dd4:	add	r3, r3, #16
    1dd8:	add	r1, pc, r1
    1ddc:	add	r0, pc, r0
    1de0:	bl	d94 <__assert_fail@plt>
    1de4:	.word	0x000127ac
    1de8:	.word	0x000000d4
    1dec:	.word	0x00001a58
    1df0:	.word	0x000018e8
    1df4:	.word	0x000000e8
    1df8:	.word	0x000019c0
    1dfc:	.word	0x88888889
    1e00:	.word	0x00001828
    1e04:	.word	0x00001838
    1e08:	.word	0x00001824
    1e0c:	.word	0x000018cc
    1e10:	.word	0x0000177c
    1e14:	.word	0x00001768
    1e18:	.word	0x000016a4
    1e1c:	.word	0x000016b4
    1e20:	.word	0x000016a0
    1e24:	.word	0x000000b8
    1e28:	.word	0x0000164c
    1e2c:	.word	0x00001640
    1e30:	.word	0x00001634
    1e34:	.word	0x000015c8
    1e38:	.word	0x000015bc
    1e3c:	.word	0x000015b0
    1e40:	.word	0x0000128c
    1e44:	.word	0x000012e4
    1e48:	.word	0x000015d8

00001e4c <parse_resv.part.2>:
    1e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e50:	sub	sp, sp, #44	; 0x2c
    1e54:	ldr	r5, [pc, #2048]	; 265c <parse_resv.part.2+0x810>
    1e58:	subs	r4, r1, #0
    1e5c:	mov	r6, r0
    1e60:	add	r5, pc, r5
    1e64:	mov	r8, r2
    1e68:	mov	r7, r3
    1e6c:	ldr	r9, [sp, #80]	; 0x50
    1e70:	mov	r0, r4
    1e74:	beq	1e90 <parse_resv.part.2+0x44>
    1e78:	ldr	r3, [pc, #2016]	; 2660 <parse_resv.part.2+0x814>
    1e7c:	ldrb	r2, [r4]
    1e80:	ldr	r3, [r5, r3]
    1e84:	ldr	r3, [r3, r2, lsl #2]
    1e88:	tst	r3, #512	; 0x200
    1e8c:	bne	1f04 <parse_resv.part.2+0xb8>
    1e90:	bl	d88 <clean_resv_nick@plt>
    1e94:	cmp	r0, #0
    1e98:	beq	1f2c <parse_resv.part.2+0xe0>
    1e9c:	mov	r0, r4
    1ea0:	bl	cec <strlen@plt>
    1ea4:	cmp	r0, #64	; 0x40
    1ea8:	bhi	1ee8 <parse_resv.part.2+0x9c>
    1eac:	mov	r0, r4
    1eb0:	bl	d4c <valid_wild_card_simple@plt>
    1eb4:	cmp	r0, #0
    1eb8:	beq	1f48 <parse_resv.part.2+0xfc>
    1ebc:	mov	r0, r4
    1ec0:	bl	d1c <find_nick_resv_mask@plt>
    1ec4:	subs	fp, r0, #0
    1ec8:	beq	2220 <parse_resv.part.2+0x3d4>
    1ecc:	ldr	r1, [pc, #1936]	; 2664 <parse_resv.part.2+0x818>
    1ed0:	mov	r2, r4
    1ed4:	mov	r0, r6
    1ed8:	add	r1, pc, r1
    1edc:	add	sp, sp, #44	; 0x2c
    1ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ee4:	b	d34 <sendto_one_notice@plt>
    1ee8:	ldr	r1, [pc, #1912]	; 2668 <parse_resv.part.2+0x81c>
    1eec:	mov	r2, r4
    1ef0:	mov	r0, r6
    1ef4:	add	r1, pc, r1
    1ef8:	add	sp, sp, #44	; 0x2c
    1efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f00:	b	d34 <sendto_one_notice@plt>
    1f04:	bl	d70 <hash_find_resv@plt>
    1f08:	subs	fp, r0, #0
    1f0c:	beq	1f6c <parse_resv.part.2+0x120>
    1f10:	ldr	r1, [pc, #1876]	; 266c <parse_resv.part.2+0x820>
    1f14:	mov	r2, r4
    1f18:	mov	r0, r6
    1f1c:	add	r1, pc, r1
    1f20:	add	sp, sp, #44	; 0x2c
    1f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f28:	b	d34 <sendto_one_notice@plt>
    1f2c:	ldr	r1, [pc, #1852]	; 2670 <parse_resv.part.2+0x824>
    1f30:	mov	r2, r4
    1f34:	mov	r0, r6
    1f38:	add	r1, pc, r1
    1f3c:	add	sp, sp, #44	; 0x2c
    1f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f44:	b	d34 <sendto_one_notice@plt>
    1f48:	ldr	r3, [pc, #1828]	; 2674 <parse_resv.part.2+0x828>
    1f4c:	ldr	r1, [pc, #1828]	; 2678 <parse_resv.part.2+0x82c>
    1f50:	mov	r0, r6
    1f54:	ldr	r3, [r5, r3]
    1f58:	add	r1, pc, r1
    1f5c:	ldr	r2, [r3, #240]	; 0xf0
    1f60:	add	sp, sp, #44	; 0x2c
    1f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f68:	b	d34 <sendto_one_notice@plt>
    1f6c:	mov	r0, r4
    1f70:	bl	cec <strlen@plt>
    1f74:	cmp	r0, #200	; 0xc8
    1f78:	bhi	1ee8 <parse_resv.part.2+0x9c>
    1f7c:	bl	bc0 <make_conf@plt>
    1f80:	mov	r3, #256	; 0x100
    1f84:	str	r3, [r0]
    1f88:	str	fp, [r0, #32]
    1f8c:	mov	sl, r0
    1f90:	bl	bcc <rb_current_time@plt>
    1f94:	str	r0, [sl, #40]	; 0x28
    1f98:	mov	r0, r4
    1f9c:	bl	cec <strlen@plt>
    1fa0:	add	r2, r0, #1
    1fa4:	mov	r0, r2
    1fa8:	str	r2, [sp, #32]
    1fac:	bl	cbc <malloc@plt>
    1fb0:	ldr	r2, [sp, #32]
    1fb4:	subs	r3, r0, #0
    1fb8:	beq	23b0 <parse_resv.part.2+0x564>
    1fbc:	mov	r1, r4
    1fc0:	str	r3, [sp, #32]
    1fc4:	bl	c20 <memcpy@plt>
    1fc8:	ldr	r3, [sp, #32]
    1fcc:	mov	r0, r8
    1fd0:	str	r3, [sl, #16]
    1fd4:	bl	cec <strlen@plt>
    1fd8:	add	r2, r0, #1
    1fdc:	mov	r0, r2
    1fe0:	str	r2, [sp, #36]	; 0x24
    1fe4:	bl	cbc <malloc@plt>
    1fe8:	subs	r3, r0, #0
    1fec:	str	r3, [sp, #32]
    1ff0:	beq	23b0 <parse_resv.part.2+0x564>
    1ff4:	ldr	r2, [sp, #36]	; 0x24
    1ff8:	mov	r1, r8
    1ffc:	bl	c20 <memcpy@plt>
    2000:	ldr	r3, [sp, #32]
    2004:	mov	r0, r6
    2008:	str	r3, [sl, #20]
    200c:	bl	c80 <get_oper_name@plt>
    2010:	bl	ca4 <operhash_add@plt>
    2014:	cmp	r9, #0
    2018:	str	r0, [sl, #12]
    201c:	bne	20d4 <parse_resv.part.2+0x288>
    2020:	cmp	r7, #0
    2024:	ble	23b4 <parse_resv.part.2+0x568>
    2028:	bl	bcc <rb_current_time@plt>
    202c:	asr	r5, r7, #31
    2030:	add	r0, r7, r0
    2034:	str	r0, [sl, #36]	; 0x24
    2038:	mov	r0, r6
    203c:	bl	c80 <get_oper_name@plt>
    2040:	ldr	r3, [pc, #1588]	; 267c <parse_resv.part.2+0x830>
    2044:	mov	r1, r9
    2048:	str	r8, [sp, #8]
    204c:	smull	r2, r3, r3, r7
    2050:	ldr	r2, [pc, #1576]	; 2680 <parse_resv.part.2+0x834>
    2054:	add	r3, r3, r7
    2058:	add	r2, pc, r2
    205c:	rsb	r5, r5, r3, asr #5
    2060:	str	r4, [sp, #4]
    2064:	str	r5, [sp]
    2068:	mov	r3, r0
    206c:	mov	r0, #256	; 0x100
    2070:	bl	c50 <sendto_realops_snomask@plt>
    2074:	mov	r0, r6
    2078:	bl	c80 <get_oper_name@plt>
    207c:	ldr	r1, [pc, #1536]	; 2684 <parse_resv.part.2+0x838>
    2080:	mov	r3, r5
    2084:	add	r1, pc, r1
    2088:	stm	sp, {r4, r8}
    208c:	mov	r2, r0
    2090:	mov	r0, #7
    2094:	bl	cf8 <ilog@plt>
    2098:	ldr	r1, [pc, #1512]	; 2688 <parse_resv.part.2+0x83c>
    209c:	mov	r3, r4
    20a0:	mov	r2, r5
    20a4:	mov	r0, r6
    20a8:	add	r1, pc, r1
    20ac:	bl	d34 <sendto_one_notice@plt>
    20b0:	mov	r1, sl
    20b4:	ldr	r0, [sl, #16]
    20b8:	bl	bd8 <add_to_resv_hash@plt>
    20bc:	mov	r2, r7
    20c0:	ldr	r1, [sl, #20]
    20c4:	ldr	r0, [sl, #16]
    20c8:	add	sp, sp, #44	; 0x2c
    20cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20d0:	b	c68 <resv_chan_forcepart@plt>
    20d4:	ldr	r3, [sl, #4]
    20d8:	orr	r3, r3, #8912896	; 0x880000
    20dc:	str	r3, [sl, #4]
    20e0:	bl	bcc <rb_current_time@plt>
    20e4:	add	r0, r0, r7
    20e8:	str	r0, [sl, #36]	; 0x24
    20ec:	str	r0, [sl, #44]	; 0x2c
    20f0:	mov	r0, sl
    20f4:	bl	c14 <replace_old_ban@plt>
    20f8:	bl	ce0 <rb_make_rb_dlink_node@plt>
    20fc:	subs	r2, r0, #0
    2100:	beq	2638 <parse_resv.part.2+0x7ec>
    2104:	ldr	r3, [pc, #1408]	; 268c <parse_resv.part.2+0x840>
    2108:	stm	r2, {sl, fp}
    210c:	ldr	r3, [r5, r3]
    2110:	ldr	r1, [r3]
    2114:	cmp	r1, #0
    2118:	str	r1, [r2, #8]
    211c:	strne	r2, [r1, #4]
    2120:	beq	2618 <parse_resv.part.2+0x7cc>
    2124:	ldr	r1, [r3, #8]
    2128:	mov	r0, r6
    212c:	add	r1, r1, #1
    2130:	str	r2, [r3]
    2134:	str	r1, [r3, #8]
    2138:	bl	c80 <get_oper_name@plt>
    213c:	ldr	r3, [pc, #1336]	; 267c <parse_resv.part.2+0x830>
    2140:	asr	r9, r7, #31
    2144:	mov	r1, #0
    2148:	smull	r2, r3, r3, r7
    214c:	ldr	r2, [pc, #1340]	; 2690 <parse_resv.part.2+0x844>
    2150:	add	r3, r3, r7
    2154:	add	r2, pc, r2
    2158:	rsb	r9, r9, r3, asr #5
    215c:	str	r8, [sp, #8]
    2160:	str	r4, [sp, #4]
    2164:	str	r9, [sp]
    2168:	mov	r3, r0
    216c:	mov	r0, #256	; 0x100
    2170:	bl	c50 <sendto_realops_snomask@plt>
    2174:	mov	r0, r6
    2178:	bl	c80 <get_oper_name@plt>
    217c:	ldr	r1, [pc, #1296]	; 2694 <parse_resv.part.2+0x848>
    2180:	mov	r3, r9
    2184:	stm	sp, {r4, r8}
    2188:	add	r1, pc, r1
    218c:	mov	r2, r0
    2190:	mov	r0, #7
    2194:	bl	cf8 <ilog@plt>
    2198:	ldr	r1, [pc, #1272]	; 2698 <parse_resv.part.2+0x84c>
    219c:	mov	r3, r4
    21a0:	mov	r2, r9
    21a4:	mov	r0, r6
    21a8:	add	r1, pc, r1
    21ac:	bl	d34 <sendto_one_notice@plt>
    21b0:	ldr	r1, [pc, #1252]	; 269c <parse_resv.part.2+0x850>
    21b4:	ldr	r2, [pc, #1252]	; 26a0 <parse_resv.part.2+0x854>
    21b8:	ldr	r3, [sl, #40]	; 0x28
    21bc:	ldr	r0, [r5, r1]
    21c0:	ldr	r2, [r5, r2]
    21c4:	str	r8, [sp, #24]
    21c8:	ldr	r1, [sl, #44]	; 0x2c
    21cc:	ldr	ip, [r0]
    21d0:	sub	r1, r1, r3
    21d4:	str	r1, [sp, #20]
    21d8:	ldr	r1, [sl, #36]	; 0x24
    21dc:	ldr	r2, [r2]
    21e0:	sub	r1, r1, r3
    21e4:	str	r1, [sp, #16]
    21e8:	ldr	r1, [pc, #1204]	; 26a4 <parse_resv.part.2+0x858>
    21ec:	str	r3, [sp, #12]
    21f0:	ldr	r0, [sl, #16]
    21f4:	mov	r3, #0
    21f8:	add	r1, pc, r1
    21fc:	add	r6, r6, #396	; 0x18c
    2200:	str	r0, [sp, #8]
    2204:	str	r1, [sp]
    2208:	orr	r2, ip, r2
    220c:	str	r6, [sp, #4]
    2210:	mov	r1, r3
    2214:	mov	r0, r3
    2218:	bl	cb0 <sendto_server@plt>
    221c:	b	20b0 <parse_resv.part.2+0x264>
    2220:	bl	bc0 <make_conf@plt>
    2224:	mov	r3, #512	; 0x200
    2228:	str	r3, [r0]
    222c:	str	fp, [r0, #32]
    2230:	mov	sl, r0
    2234:	bl	bcc <rb_current_time@plt>
    2238:	str	r0, [sl, #40]	; 0x28
    223c:	mov	r0, r4
    2240:	bl	cec <strlen@plt>
    2244:	add	r2, r0, #1
    2248:	mov	r0, r2
    224c:	str	r2, [sp, #36]	; 0x24
    2250:	bl	cbc <malloc@plt>
    2254:	subs	r3, r0, #0
    2258:	str	r3, [sp, #32]
    225c:	beq	23b0 <parse_resv.part.2+0x564>
    2260:	ldr	r2, [sp, #36]	; 0x24
    2264:	mov	r1, r4
    2268:	bl	c20 <memcpy@plt>
    226c:	ldr	r3, [sp, #32]
    2270:	mov	r0, r8
    2274:	str	r3, [sl, #16]
    2278:	bl	cec <strlen@plt>
    227c:	add	r2, r0, #1
    2280:	mov	r0, r2
    2284:	str	r2, [sp, #36]	; 0x24
    2288:	bl	cbc <malloc@plt>
    228c:	subs	r3, r0, #0
    2290:	str	r3, [sp, #32]
    2294:	beq	23b0 <parse_resv.part.2+0x564>
    2298:	ldr	r2, [sp, #36]	; 0x24
    229c:	mov	r1, r8
    22a0:	bl	c20 <memcpy@plt>
    22a4:	ldr	r3, [sp, #32]
    22a8:	mov	r0, r6
    22ac:	str	r3, [sl, #20]
    22b0:	bl	c80 <get_oper_name@plt>
    22b4:	bl	ca4 <operhash_add@plt>
    22b8:	cmp	r9, #0
    22bc:	str	r0, [sl, #12]
    22c0:	bne	2438 <parse_resv.part.2+0x5ec>
    22c4:	cmp	r7, #0
    22c8:	ble	2594 <parse_resv.part.2+0x748>
    22cc:	bl	bcc <rb_current_time@plt>
    22d0:	add	r0, r7, r0
    22d4:	str	r0, [sl, #36]	; 0x24
    22d8:	mov	r0, r6
    22dc:	bl	c80 <get_oper_name@plt>
    22e0:	ldr	r2, [pc, #916]	; 267c <parse_resv.part.2+0x830>
    22e4:	asr	r3, r7, #31
    22e8:	str	r8, [sp, #8]
    22ec:	smull	r1, r2, r2, r7
    22f0:	str	r4, [sp, #4]
    22f4:	add	r2, r2, r7
    22f8:	mov	r1, r9
    22fc:	rsb	r9, r3, r2, asr #5
    2300:	ldr	r2, [pc, #928]	; 26a8 <parse_resv.part.2+0x85c>
    2304:	str	r9, [sp]
    2308:	add	r2, pc, r2
    230c:	mov	r3, r0
    2310:	mov	r0, #256	; 0x100
    2314:	bl	c50 <sendto_realops_snomask@plt>
    2318:	mov	r0, r6
    231c:	bl	c80 <get_oper_name@plt>
    2320:	ldr	r1, [pc, #900]	; 26ac <parse_resv.part.2+0x860>
    2324:	mov	r3, r9
    2328:	add	r1, pc, r1
    232c:	stm	sp, {r4, r8}
    2330:	mov	r2, r0
    2334:	mov	r0, #7
    2338:	bl	cf8 <ilog@plt>
    233c:	ldr	r1, [pc, #876]	; 26b0 <parse_resv.part.2+0x864>
    2340:	mov	r3, r4
    2344:	mov	r2, r9
    2348:	mov	r0, r6
    234c:	add	r1, pc, r1
    2350:	bl	d34 <sendto_one_notice@plt>
    2354:	bl	ce0 <rb_make_rb_dlink_node@plt>
    2358:	subs	r3, r0, #0
    235c:	beq	2638 <parse_resv.part.2+0x7ec>
    2360:	ldr	r2, [pc, #844]	; 26b4 <parse_resv.part.2+0x868>
    2364:	mov	r1, #0
    2368:	str	sl, [r3]
    236c:	str	r1, [r3, #4]
    2370:	ldr	ip, [r5, r2]
    2374:	ldr	r2, [ip]
    2378:	cmp	r2, r1
    237c:	str	r2, [r3, #8]
    2380:	strne	r3, [r2, #4]
    2384:	beq	2584 <parse_resv.part.2+0x738>
    2388:	ldr	lr, [ip, #8]
    238c:	mov	r2, r7
    2390:	add	lr, lr, #1
    2394:	ldr	r1, [sl, #20]
    2398:	ldr	r0, [sl, #16]
    239c:	str	r3, [ip]
    23a0:	str	lr, [ip, #8]
    23a4:	add	sp, sp, #44	; 0x2c
    23a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    23ac:	b	c38 <resv_nick_fnc@plt>
    23b0:	bl	c2c <rb_outofmemory@plt>
    23b4:	mov	r0, r6
    23b8:	bl	c80 <get_oper_name@plt>
    23bc:	ldr	r2, [pc, #756]	; 26b8 <parse_resv.part.2+0x86c>
    23c0:	mov	r1, r9
    23c4:	add	r2, pc, r2
    23c8:	stm	sp, {r4, r8}
    23cc:	mov	r3, r0
    23d0:	mov	r0, #256	; 0x100
    23d4:	bl	c50 <sendto_realops_snomask@plt>
    23d8:	mov	r0, r6
    23dc:	bl	c80 <get_oper_name@plt>
    23e0:	ldr	r1, [pc, #724]	; 26bc <parse_resv.part.2+0x870>
    23e4:	mov	r3, r4
    23e8:	str	r8, [sp]
    23ec:	add	r1, pc, r1
    23f0:	mov	r2, r0
    23f4:	mov	r0, #7
    23f8:	bl	cf8 <ilog@plt>
    23fc:	ldr	r1, [pc, #700]	; 26c0 <parse_resv.part.2+0x874>
    2400:	mov	r2, r4
    2404:	mov	r0, r6
    2408:	add	r1, pc, r1
    240c:	bl	d34 <sendto_one_notice@plt>
    2410:	ldr	r2, [sl, #16]
    2414:	str	r9, [sp, #8]
    2418:	str	r9, [sp, #4]
    241c:	ldr	r0, [sl, #20]
    2420:	mov	r1, r6
    2424:	str	r0, [sp]
    2428:	mov	r3, r9
    242c:	mov	r0, #3
    2430:	bl	c5c <bandb_add@plt>
    2434:	b	20b0 <parse_resv.part.2+0x264>
    2438:	ldr	r3, [sl, #4]
    243c:	orr	r3, r3, #8912896	; 0x880000
    2440:	str	r3, [sl, #4]
    2444:	bl	bcc <rb_current_time@plt>
    2448:	add	r0, r7, r0
    244c:	str	r0, [sl, #36]	; 0x24
    2450:	str	r0, [sl, #44]	; 0x2c
    2454:	mov	r0, sl
    2458:	bl	c14 <replace_old_ban@plt>
    245c:	bl	ce0 <rb_make_rb_dlink_node@plt>
    2460:	subs	r2, r0, #0
    2464:	beq	2638 <parse_resv.part.2+0x7ec>
    2468:	ldr	r3, [pc, #540]	; 268c <parse_resv.part.2+0x840>
    246c:	stm	r2, {sl, fp}
    2470:	ldr	r3, [r5, r3]
    2474:	ldr	r1, [r3]
    2478:	cmp	r1, #0
    247c:	str	r1, [r2, #8]
    2480:	strne	r2, [r1, #4]
    2484:	beq	2628 <parse_resv.part.2+0x7dc>
    2488:	ldr	r1, [r3, #8]
    248c:	mov	r0, r6
    2490:	add	r1, r1, #1
    2494:	str	r2, [r3]
    2498:	str	r1, [r3, #8]
    249c:	bl	c80 <get_oper_name@plt>
    24a0:	ldr	r3, [pc, #468]	; 267c <parse_resv.part.2+0x830>
    24a4:	asr	r9, r7, #31
    24a8:	mov	r1, #0
    24ac:	smull	r2, r3, r3, r7
    24b0:	ldr	r2, [pc, #524]	; 26c4 <parse_resv.part.2+0x878>
    24b4:	add	r3, r3, r7
    24b8:	add	r2, pc, r2
    24bc:	rsb	r9, r9, r3, asr #5
    24c0:	str	r8, [sp, #8]
    24c4:	str	r4, [sp, #4]
    24c8:	str	r9, [sp]
    24cc:	mov	r3, r0
    24d0:	mov	r0, #256	; 0x100
    24d4:	bl	c50 <sendto_realops_snomask@plt>
    24d8:	mov	r0, r6
    24dc:	bl	c80 <get_oper_name@plt>
    24e0:	ldr	r1, [pc, #480]	; 26c8 <parse_resv.part.2+0x87c>
    24e4:	mov	r3, r9
    24e8:	stm	sp, {r4, r8}
    24ec:	add	r1, pc, r1
    24f0:	mov	r2, r0
    24f4:	mov	r0, #7
    24f8:	bl	cf8 <ilog@plt>
    24fc:	ldr	r1, [pc, #456]	; 26cc <parse_resv.part.2+0x880>
    2500:	mov	r3, r4
    2504:	mov	r2, r9
    2508:	mov	r0, r6
    250c:	add	r1, pc, r1
    2510:	bl	d34 <sendto_one_notice@plt>
    2514:	ldr	r1, [pc, #384]	; 269c <parse_resv.part.2+0x850>
    2518:	ldr	r2, [pc, #384]	; 26a0 <parse_resv.part.2+0x854>
    251c:	ldr	r3, [sl, #40]	; 0x28
    2520:	ldr	ip, [r5, r1]
    2524:	ldr	r0, [r5, r2]
    2528:	str	r8, [sp, #24]
    252c:	ldr	r1, [sl, #44]	; 0x2c
    2530:	ldr	r2, [ip]
    2534:	sub	r1, r1, r3
    2538:	str	r1, [sp, #20]
    253c:	ldr	r1, [sl, #36]	; 0x24
    2540:	ldr	ip, [r0]
    2544:	sub	r1, r1, r3
    2548:	str	r1, [sp, #16]
    254c:	ldr	r1, [pc, #380]	; 26d0 <parse_resv.part.2+0x884>
    2550:	str	r3, [sp, #12]
    2554:	ldr	r0, [sl, #16]
    2558:	mov	r3, #0
    255c:	add	r1, pc, r1
    2560:	add	r6, r6, #396	; 0x18c
    2564:	str	r0, [sp, #8]
    2568:	str	r1, [sp]
    256c:	orr	r2, r2, ip
    2570:	str	r6, [sp, #4]
    2574:	mov	r1, r3
    2578:	mov	r0, r3
    257c:	bl	cb0 <sendto_server@plt>
    2580:	b	2354 <parse_resv.part.2+0x508>
    2584:	ldr	r2, [ip, #4]
    2588:	cmp	r2, #0
    258c:	streq	r3, [ip, #4]
    2590:	b	2388 <parse_resv.part.2+0x53c>
    2594:	mov	r0, r6
    2598:	bl	c80 <get_oper_name@plt>
    259c:	ldr	r2, [pc, #304]	; 26d4 <parse_resv.part.2+0x888>
    25a0:	mov	r1, r9
    25a4:	add	r2, pc, r2
    25a8:	stm	sp, {r4, r8}
    25ac:	mov	r3, r0
    25b0:	mov	r0, #256	; 0x100
    25b4:	bl	c50 <sendto_realops_snomask@plt>
    25b8:	mov	r0, r6
    25bc:	bl	c80 <get_oper_name@plt>
    25c0:	ldr	r1, [pc, #272]	; 26d8 <parse_resv.part.2+0x88c>
    25c4:	mov	r3, r4
    25c8:	str	r8, [sp]
    25cc:	add	r1, pc, r1
    25d0:	mov	r2, r0
    25d4:	mov	r0, #7
    25d8:	bl	cf8 <ilog@plt>
    25dc:	ldr	r1, [pc, #248]	; 26dc <parse_resv.part.2+0x890>
    25e0:	mov	r2, r4
    25e4:	mov	r0, r6
    25e8:	add	r1, pc, r1
    25ec:	bl	d34 <sendto_one_notice@plt>
    25f0:	ldr	r2, [sl, #16]
    25f4:	str	r9, [sp, #8]
    25f8:	str	r9, [sp, #4]
    25fc:	ldr	r0, [sl, #20]
    2600:	mov	r1, r6
    2604:	str	r0, [sp]
    2608:	mov	r3, r9
    260c:	mov	r0, #3
    2610:	bl	c5c <bandb_add@plt>
    2614:	b	2354 <parse_resv.part.2+0x508>
    2618:	ldr	r1, [r3, #4]
    261c:	cmp	r1, #0
    2620:	streq	r2, [r3, #4]
    2624:	b	2124 <parse_resv.part.2+0x2d8>
    2628:	ldr	r1, [r3, #4]
    262c:	cmp	r1, #0
    2630:	streq	r2, [r3, #4]
    2634:	b	2488 <parse_resv.part.2+0x63c>
    2638:	ldr	r3, [pc, #160]	; 26e0 <parse_resv.part.2+0x894>
    263c:	ldr	r1, [pc, #160]	; 26e4 <parse_resv.part.2+0x898>
    2640:	ldr	r0, [pc, #160]	; 26e8 <parse_resv.part.2+0x89c>
    2644:	add	r3, pc, r3
    2648:	mov	r2, #144	; 0x90
    264c:	add	r3, r3, #16
    2650:	add	r1, pc, r1
    2654:	add	r0, pc, r0
    2658:	bl	d94 <__assert_fail@plt>
    265c:	.word	0x00012198
    2660:	.word	0x000000d4
    2664:	.word	0x000014b0
    2668:	.word	0x00001390
    266c:	.word	0x00001338
    2670:	.word	0x00001488
    2674:	.word	0x000000e8
    2678:	.word	0x000013ec
    267c:	.word	0x88888889
    2680:	.word	0x00001248
    2684:	.word	0x0000124c
    2688:	.word	0x00001238
    268c:	.word	0x000000bc
    2690:	.word	0x00001298
    2694:	.word	0x00001148
    2698:	.word	0x00001270
    269c:	.word	0x000000c4
    26a0:	.word	0x000000c8
    26a4:	.word	0x00001240
    26a8:	.word	0x00000f98
    26ac:	.word	0x00000fa8
    26b0:	.word	0x00000f94
    26b4:	.word	0x000000b8
    26b8:	.word	0x00000f40
    26bc:	.word	0x00000f34
    26c0:	.word	0x00000f28
    26c4:	.word	0x00000f34
    26c8:	.word	0x00000de4
    26cc:	.word	0x00000f0c
    26d0:	.word	0x00000edc
    26d4:	.word	0x00000d60
    26d8:	.word	0x00000d54
    26dc:	.word	0x00000d48
    26e0:	.word	0x00000a14
    26e4:	.word	0x00000a6c
    26e8:	.word	0x00000d60

000026ec <mo_resv>:
    26ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26f0:	mov	r7, r3
    26f4:	ldr	r3, [r2, #24]
    26f8:	sub	sp, sp, #44	; 0x2c
    26fc:	ldr	r5, [pc, #1200]	; 2bb4 <mo_resv+0x4c8>
    2700:	cmp	r3, #0
    2704:	add	r5, pc, r5
    2708:	mov	r4, r2
    270c:	ldr	r6, [sp, #80]	; 0x50
    2710:	beq	2740 <mo_resv+0x54>
    2714:	ldr	r0, [r3, #36]	; 0x24
    2718:	cmp	r0, #0
    271c:	beq	2740 <mo_resv+0x54>
    2720:	ldr	r3, [pc, #1168]	; 2bb8 <mo_resv+0x4cc>
    2724:	ldr	r1, [pc, #1168]	; 2bbc <mo_resv+0x4d0>
    2728:	ldr	r3, [r5, r3]
    272c:	add	r1, pc, r1
    2730:	ldr	r9, [r3, #324]	; 0x144
    2734:	bl	d64 <privilegeset_in_set@plt>
    2738:	cmp	r0, #0
    273c:	bne	2774 <mo_resv+0x88>
    2740:	ldr	r2, [pc, #1144]	; 2bc0 <mo_resv+0x4d4>
    2744:	ldr	r1, [pc, #1144]	; 2bc4 <mo_resv+0x4d8>
    2748:	add	r3, r4, #88	; 0x58
    274c:	add	r1, pc, r1
    2750:	ldr	r2, [r5, r2]
    2754:	str	r1, [sp, #80]	; 0x50
    2758:	ldr	r1, [pc, #1128]	; 2bc8 <mo_resv+0x4dc>
    275c:	mov	r0, r4
    2760:	add	r2, r2, #88	; 0x58
    2764:	add	r1, pc, r1
    2768:	add	sp, sp, #44	; 0x2c
    276c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2770:	b	c08 <sendto_one@plt>
    2774:	ldr	r0, [r6, #4]
    2778:	bl	d28 <valid_temp_time@plt>
    277c:	subs	fp, r0, #0
    2780:	blt	2928 <mo_resv+0x23c>
    2784:	mov	r3, #5
    2788:	mov	sl, #16
    278c:	mov	ip, #12
    2790:	mov	r1, #4
    2794:	mov	r8, #3
    2798:	mov	r2, #8
    279c:	ldr	r2, [r6, r2]
    27a0:	cmp	r7, r1
    27a4:	str	r2, [sp, #28]
    27a8:	movle	sl, #0
    27ac:	bgt	28b8 <mo_resv+0x1cc>
    27b0:	cmp	r8, r7
    27b4:	addlt	r8, r6, r8, lsl #2
    27b8:	bge	2884 <mo_resv+0x198>
    27bc:	ldr	r6, [r8]
    27c0:	cmp	r6, #0
    27c4:	beq	2884 <mo_resv+0x198>
    27c8:	ldrb	r3, [r6]
    27cc:	cmp	r3, #0
    27d0:	beq	2884 <mo_resv+0x198>
    27d4:	cmp	sl, #0
    27d8:	beq	2a08 <mo_resv+0x31c>
    27dc:	cmp	fp, #0
    27e0:	beq	2950 <mo_resv+0x264>
    27e4:	ldr	r2, [pc, #992]	; 2bcc <mo_resv+0x4e0>
    27e8:	ldr	r0, [pc, #992]	; 2bd0 <mo_resv+0x4e4>
    27ec:	ldr	ip, [sp, #28]
    27f0:	ldr	r2, [r5, r2]
    27f4:	add	r0, pc, r0
    27f8:	mov	r3, #0
    27fc:	mov	r1, sl
    2800:	str	r6, [sp, #16]
    2804:	ldr	r2, [r2]
    2808:	stm	sp, {r0, sl, fp, ip}
    280c:	mov	r0, r4
    2810:	bl	be4 <sendto_match_servs@plt>
    2814:	ldr	r3, [pc, #932]	; 2bc0 <mo_resv+0x4d4>
    2818:	mov	r0, sl
    281c:	ldr	r1, [r5, r3]
    2820:	add	r1, r1, #88	; 0x58
    2824:	bl	d04 <match@plt>
    2828:	cmp	r0, #0
    282c:	beq	2a00 <mo_resv+0x314>
    2830:	ldrd	r2, [r4, #64]	; 0x40
    2834:	mov	r3, #0
    2838:	and	r2, r2, #8192	; 0x2000
    283c:	orrs	r3, r2, r3
    2840:	bne	2a38 <mo_resv+0x34c>
    2844:	ldr	r2, [r4, #32]
    2848:	add	r0, r4, #152	; 0x98
    284c:	add	r2, r2, #88	; 0x58
    2850:	add	r1, r4, #163	; 0xa3
    2854:	mov	r3, #128	; 0x80
    2858:	bl	d58 <find_shared_conf@plt>
    285c:	cmp	r0, #0
    2860:	beq	2a00 <mo_resv+0x314>
    2864:	str	r9, [sp, #80]	; 0x50
    2868:	mov	r3, fp
    286c:	mov	r2, r6
    2870:	ldr	r1, [sp, #28]
    2874:	mov	r0, r4
    2878:	add	sp, sp, #44	; 0x2c
    287c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2880:	b	1e4c <parse_resv.part.2>
    2884:	ldr	r2, [pc, #820]	; 2bc0 <mo_resv+0x4d4>
    2888:	ldr	r1, [pc, #836]	; 2bd4 <mo_resv+0x4e8>
    288c:	add	r3, r4, #88	; 0x58
    2890:	add	r1, pc, r1
    2894:	ldr	r2, [r5, r2]
    2898:	str	r1, [sp, #80]	; 0x50
    289c:	ldr	r1, [pc, #820]	; 2bd8 <mo_resv+0x4ec>
    28a0:	mov	r0, r4
    28a4:	add	r2, r2, #88	; 0x58
    28a8:	add	r1, pc, r1
    28ac:	add	sp, sp, #44	; 0x2c
    28b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    28b4:	b	c08 <sendto_one@plt>
    28b8:	ldr	r1, [pc, #796]	; 2bdc <mo_resv+0x4f0>
    28bc:	ldr	r0, [r6, ip]
    28c0:	add	r1, pc, r1
    28c4:	str	r3, [sp, #32]
    28c8:	add	r8, r6, ip
    28cc:	bl	d7c <irccmp@plt>
    28d0:	subs	r2, r0, #0
    28d4:	bne	2948 <mo_resv+0x25c>
    28d8:	ldr	r1, [r4, #24]
    28dc:	ldr	r3, [sp, #32]
    28e0:	cmp	r1, #0
    28e4:	beq	2a64 <mo_resv+0x378>
    28e8:	ldr	r0, [r1, #36]	; 0x24
    28ec:	str	r3, [sp, #36]	; 0x24
    28f0:	cmp	r0, #0
    28f4:	str	r2, [sp, #32]
    28f8:	beq	2a64 <mo_resv+0x378>
    28fc:	ldr	r1, [pc, #732]	; 2be0 <mo_resv+0x4f4>
    2900:	add	r1, pc, r1
    2904:	bl	d64 <privilegeset_in_set@plt>
    2908:	cmp	r0, #0
    290c:	beq	2a64 <mo_resv+0x378>
    2910:	ldr	r2, [sp, #32]
    2914:	ldr	r3, [sp, #36]	; 0x24
    2918:	ldr	sl, [r6, sl]
    291c:	mov	r9, r2
    2920:	mov	r8, r3
    2924:	b	27b0 <mo_resv+0xc4>
    2928:	mov	r3, #4
    292c:	mov	r2, r3
    2930:	mov	sl, #12
    2934:	mov	ip, #8
    2938:	mov	r1, #3
    293c:	mov	r8, #2
    2940:	mov	fp, #0
    2944:	b	279c <mo_resv+0xb0>
    2948:	mov	sl, #0
    294c:	b	27bc <mo_resv+0xd0>
    2950:	ldr	r2, [pc, #652]	; 2be4 <mo_resv+0x4f8>
    2954:	ldr	r8, [sp, #28]
    2958:	ldr	r0, [pc, #648]	; 2be8 <mo_resv+0x4fc>
    295c:	ldr	r7, [r5, r2]
    2960:	mov	ip, r8
    2964:	add	r0, pc, r0
    2968:	mov	r3, fp
    296c:	mov	r1, sl
    2970:	str	r6, [sp, #12]
    2974:	ldr	r2, [r7]
    2978:	stm	sp, {r0, sl, ip}
    297c:	mov	r0, r4
    2980:	bl	be4 <sendto_match_servs@plt>
    2984:	ldr	r2, [pc, #576]	; 2bcc <mo_resv+0x4e0>
    2988:	ldr	r1, [pc, #604]	; 2bec <mo_resv+0x500>
    298c:	mov	ip, r8
    2990:	ldr	r2, [r5, r2]
    2994:	add	r1, pc, r1
    2998:	ldr	r3, [r7]
    299c:	mov	r0, r4
    29a0:	str	r6, [sp, #16]
    29a4:	ldr	r2, [r2]
    29a8:	stm	sp, {r1, sl, fp, ip}
    29ac:	mov	r1, sl
    29b0:	bl	be4 <sendto_match_servs@plt>
    29b4:	ldr	r3, [pc, #516]	; 2bc0 <mo_resv+0x4d4>
    29b8:	mov	r0, sl
    29bc:	ldr	r1, [r5, r3]
    29c0:	add	r1, r1, #88	; 0x58
    29c4:	bl	d04 <match@plt>
    29c8:	cmp	r0, #0
    29cc:	beq	2a00 <mo_resv+0x314>
    29d0:	adds	r3, r9, #0
    29d4:	movne	r3, #1
    29d8:	cmp	fp, #0
    29dc:	movne	r3, #0
    29e0:	cmp	r3, #0
    29e4:	beq	2a24 <mo_resv+0x338>
    29e8:	ldr	r1, [pc, #512]	; 2bf0 <mo_resv+0x504>
    29ec:	mov	r0, r4
    29f0:	add	r1, pc, r1
    29f4:	add	sp, sp, #44	; 0x2c
    29f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29fc:	b	d34 <sendto_one_notice@plt>
    2a00:	add	sp, sp, #44	; 0x2c
    2a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2a08:	cmp	r9, #0
    2a0c:	bne	29d0 <mo_resv+0x2e4>
    2a10:	ldr	r3, [pc, #476]	; 2bf4 <mo_resv+0x508>
    2a14:	ldr	r3, [r5, r3]
    2a18:	ldr	r2, [r3, #8]
    2a1c:	cmp	r2, #0
    2a20:	bne	2a90 <mo_resv+0x3a4>
    2a24:	ldrd	r2, [r4, #64]	; 0x40
    2a28:	mov	r3, #0
    2a2c:	and	r2, r2, #8192	; 0x2000
    2a30:	orrs	r3, r2, r3
    2a34:	beq	2a44 <mo_resv+0x358>
    2a38:	ldrh	r3, [r4, #80]	; 0x50
    2a3c:	cmp	r3, #64	; 0x40
    2a40:	beq	2864 <mo_resv+0x178>
    2a44:	ldr	r2, [r4, #32]
    2a48:	cmp	fp, #0
    2a4c:	add	r0, r4, #152	; 0x98
    2a50:	add	r2, r2, #88	; 0x58
    2a54:	add	r1, r4, #163	; 0xa3
    2a58:	moveq	r3, #256	; 0x100
    2a5c:	movne	r3, #128	; 0x80
    2a60:	b	2858 <mo_resv+0x16c>
    2a64:	ldr	r2, [pc, #340]	; 2bc0 <mo_resv+0x4d4>
    2a68:	ldr	r1, [pc, #392]	; 2bf8 <mo_resv+0x50c>
    2a6c:	add	r3, r4, #88	; 0x58
    2a70:	add	r1, pc, r1
    2a74:	ldr	r2, [r5, r2]
    2a78:	str	r1, [sp, #80]	; 0x50
    2a7c:	ldr	r1, [pc, #376]	; 2bfc <mo_resv+0x510>
    2a80:	mov	r0, r4
    2a84:	add	r2, r2, #88	; 0x58
    2a88:	add	r1, pc, r1
    2a8c:	b	2768 <mo_resv+0x7c>
    2a90:	ldr	r7, [r3]
    2a94:	cmp	r7, #0
    2a98:	beq	2a24 <mo_resv+0x338>
    2a9c:	cmp	fp, #0
    2aa0:	beq	2b0c <mo_resv+0x420>
    2aa4:	ldr	r8, [pc, #340]	; 2c00 <mo_resv+0x514>
    2aa8:	mov	sl, r9
    2aac:	add	r8, pc, r8
    2ab0:	b	2ac0 <mo_resv+0x3d4>
    2ab4:	ldr	r7, [r7, #8]
    2ab8:	cmp	r7, #0
    2abc:	beq	2a24 <mo_resv+0x338>
    2ac0:	ldr	r3, [r7]
    2ac4:	ldr	r2, [r3, #12]
    2ac8:	tst	r2, #128	; 0x80
    2acc:	beq	2ab4 <mo_resv+0x3c8>
    2ad0:	ldr	r2, [pc, #244]	; 2bcc <mo_resv+0x4e0>
    2ad4:	ldr	r0, [r3, #8]
    2ad8:	mov	r3, sl
    2adc:	ldr	r2, [r5, r2]
    2ae0:	mov	r1, r0
    2ae4:	str	r0, [sp, #4]
    2ae8:	ldr	r0, [sp, #28]
    2aec:	ldr	r2, [r2]
    2af0:	str	r0, [sp, #12]
    2af4:	str	r6, [sp, #16]
    2af8:	str	fp, [sp, #8]
    2afc:	str	r8, [sp]
    2b00:	mov	r0, r4
    2b04:	bl	be4 <sendto_match_servs@plt>
    2b08:	b	2ab4 <mo_resv+0x3c8>
    2b0c:	ldr	r3, [pc, #240]	; 2c04 <mo_resv+0x518>
    2b10:	add	r3, pc, r3
    2b14:	str	r3, [sp, #32]
    2b18:	ldr	r3, [pc, #232]	; 2c08 <mo_resv+0x51c>
    2b1c:	add	r3, pc, r3
    2b20:	str	r3, [sp, #36]	; 0x24
    2b24:	b	2b34 <mo_resv+0x448>
    2b28:	ldr	r7, [r7, #8]
    2b2c:	cmp	r7, #0
    2b30:	beq	2a24 <mo_resv+0x338>
    2b34:	ldr	r8, [r7]
    2b38:	ldr	r3, [r8, #12]
    2b3c:	tst	r3, #256	; 0x100
    2b40:	beq	2b28 <mo_resv+0x43c>
    2b44:	ldr	r2, [pc, #152]	; 2be4 <mo_resv+0x4f8>
    2b48:	ldr	r0, [r8, #8]
    2b4c:	ldr	ip, [sp, #32]
    2b50:	ldr	sl, [r5, r2]
    2b54:	mov	r1, r0
    2b58:	str	r0, [sp, #4]
    2b5c:	ldr	r0, [sp, #28]
    2b60:	ldr	r2, [sl]
    2b64:	mov	r3, #0
    2b68:	str	r0, [sp, #8]
    2b6c:	str	r6, [sp, #12]
    2b70:	mov	r0, r4
    2b74:	str	ip, [sp]
    2b78:	bl	be4 <sendto_match_servs@plt>
    2b7c:	ldr	r2, [pc, #72]	; 2bcc <mo_resv+0x4e0>
    2b80:	ldr	r1, [r8, #8]
    2b84:	ldr	r0, [sp, #28]
    2b88:	ldr	r2, [r5, r2]
    2b8c:	ldr	r3, [sl]
    2b90:	str	r1, [sp, #4]
    2b94:	ldr	r2, [r2]
    2b98:	str	r0, [sp, #8]
    2b9c:	ldr	r0, [sp, #36]	; 0x24
    2ba0:	str	r6, [sp, #12]
    2ba4:	str	r0, [sp]
    2ba8:	mov	r0, r4
    2bac:	bl	be4 <sendto_match_servs@plt>
    2bb0:	b	2b28 <mo_resv+0x43c>
    2bb4:	.word	0x000118f4
    2bb8:	.word	0x000000e8
    2bbc:	.word	0x00000afc
    2bc0:	.word	0x000000e0
    2bc4:	.word	0x00000ad4
    2bc8:	.word	0x00000a94
    2bcc:	.word	0x000000e4
    2bd0:	.word	0x00000ca4
    2bd4:	.word	0x00000bf0
    2bd8:	.word	0x00000bb0
    2bdc:	.word	0x00000974
    2be0:	.word	0x00000944
    2be4:	.word	0x000000c0
    2be8:	.word	0x00000b24
    2bec:	.word	0x00000b04
    2bf0:	.word	0x00000ae0
    2bf4:	.word	0x000000d0
    2bf8:	.word	0x000007c8
    2bfc:	.word	0x00000770
    2c00:	.word	0x000009ec
    2c04:	.word	0x00000978
    2c08:	.word	0x00000998

00002c0c <ms_resv>:
    2c0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2c10:	sub	sp, sp, #24
    2c14:	ldr	r4, [pc, #284]	; 2d38 <ms_resv+0x12c>
    2c18:	ldr	r1, [pc, #284]	; 2d3c <ms_resv+0x130>
    2c1c:	add	r4, pc, r4
    2c20:	ldr	r5, [sp, #56]	; 0x38
    2c24:	ldr	sl, [r4, r1]
    2c28:	ldr	r3, [pc, #272]	; 2d40 <ms_resv+0x134>
    2c2c:	ldmib	r5, {r6, r8}
    2c30:	ldr	r1, [sl]
    2c34:	ldr	r9, [r5, #12]
    2c38:	mov	r7, r2
    2c3c:	add	r3, pc, r3
    2c40:	mov	r2, r1
    2c44:	mov	r0, r7
    2c48:	mov	r1, r6
    2c4c:	str	r3, [sp]
    2c50:	str	r6, [sp, #4]
    2c54:	mov	r3, #0
    2c58:	str	r8, [sp, #8]
    2c5c:	str	r9, [sp, #12]
    2c60:	bl	be4 <sendto_match_servs@plt>
    2c64:	ldr	r2, [pc, #216]	; 2d44 <ms_resv+0x138>
    2c68:	ldr	ip, [pc, #216]	; 2d48 <ms_resv+0x13c>
    2c6c:	mov	lr, #0
    2c70:	ldr	r2, [r4, r2]
    2c74:	add	ip, pc, ip
    2c78:	ldr	r3, [sl]
    2c7c:	ldr	r2, [r2]
    2c80:	mov	r1, r6
    2c84:	mov	r0, r7
    2c88:	str	ip, [sp]
    2c8c:	str	lr, [sp, #8]
    2c90:	str	r9, [sp, #16]
    2c94:	str	r8, [sp, #12]
    2c98:	str	r6, [sp, #4]
    2c9c:	bl	be4 <sendto_match_servs@plt>
    2ca0:	ldr	r3, [pc, #164]	; 2d4c <ms_resv+0x140>
    2ca4:	ldr	r0, [r5, #4]
    2ca8:	ldr	r1, [r4, r3]
    2cac:	add	r1, r1, #88	; 0x58
    2cb0:	bl	d04 <match@plt>
    2cb4:	cmp	r0, #0
    2cb8:	beq	2cc8 <ms_resv+0xbc>
    2cbc:	ldrh	r3, [r7, #80]	; 0x50
    2cc0:	cmp	r3, #64	; 0x40
    2cc4:	beq	2cd0 <ms_resv+0xc4>
    2cc8:	add	sp, sp, #24
    2ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2cd0:	ldr	r3, [r7, #24]
    2cd4:	cmp	r3, #0
    2cd8:	beq	2cc8 <ms_resv+0xbc>
    2cdc:	ldrd	r2, [r7, #64]	; 0x40
    2ce0:	mov	r3, #0
    2ce4:	ldr	r4, [r5, #8]
    2ce8:	and	r2, r2, #8192	; 0x2000
    2cec:	orrs	r3, r2, r3
    2cf0:	ldr	r5, [r5, #12]
    2cf4:	bne	2d18 <ms_resv+0x10c>
    2cf8:	ldr	r2, [r7, #32]
    2cfc:	mov	r3, #256	; 0x100
    2d00:	add	r2, r2, #88	; 0x58
    2d04:	add	r1, r7, #163	; 0xa3
    2d08:	add	r0, r7, #152	; 0x98
    2d0c:	bl	d58 <find_shared_conf@plt>
    2d10:	cmp	r0, #0
    2d14:	beq	2cc8 <ms_resv+0xbc>
    2d18:	mov	r3, #0
    2d1c:	mov	r2, r5
    2d20:	mov	r1, r4
    2d24:	mov	r0, r7
    2d28:	str	r3, [sp, #56]	; 0x38
    2d2c:	add	sp, sp, #24
    2d30:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    2d34:	b	1e4c <parse_resv.part.2>
    2d38:	.word	0x000113dc
    2d3c:	.word	0x000000c0
    2d40:	.word	0x0000084c
    2d44:	.word	0x000000e4
    2d48:	.word	0x00000824
    2d4c:	.word	0x000000e0

00002d50 <me_unresv>:
    2d50:	ldrh	r3, [r2, #80]	; 0x50
    2d54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2d58:	sub	sp, sp, #8
    2d5c:	ldr	r4, [pc, #696]	; 301c <me_unresv+0x2cc>
    2d60:	cmp	r3, #64	; 0x40
    2d64:	add	r4, pc, r4
    2d68:	ldr	ip, [sp, #40]	; 0x28
    2d6c:	beq	2d78 <me_unresv+0x28>
    2d70:	add	sp, sp, #8
    2d74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2d78:	ldr	r3, [r2, #24]
    2d7c:	cmp	r3, #0
    2d80:	beq	2d70 <me_unresv+0x20>
    2d84:	mov	r5, r2
    2d88:	ldr	r2, [r2, #32]
    2d8c:	mov	r3, #512	; 0x200
    2d90:	add	r2, r2, #88	; 0x58
    2d94:	add	r1, r5, #163	; 0xa3
    2d98:	add	r0, r5, #152	; 0x98
    2d9c:	ldr	r7, [ip, #4]
    2da0:	bl	d58 <find_shared_conf@plt>
    2da4:	cmp	r0, #0
    2da8:	beq	2d70 <me_unresv+0x20>
    2dac:	cmp	r7, #0
    2db0:	beq	2dcc <me_unresv+0x7c>
    2db4:	ldr	r3, [pc, #612]	; 3020 <me_unresv+0x2d0>
    2db8:	ldrb	r2, [r7]
    2dbc:	ldr	r3, [r4, r3]
    2dc0:	ldr	r3, [r3, r2, lsl #2]
    2dc4:	tst	r3, #512	; 0x200
    2dc8:	bne	2f08 <me_unresv+0x1b8>
    2dcc:	ldr	r3, [pc, #592]	; 3024 <me_unresv+0x2d4>
    2dd0:	ldr	r8, [r4, r3]
    2dd4:	ldr	r4, [r8]
    2dd8:	cmp	r4, #0
    2ddc:	bne	2df0 <me_unresv+0xa0>
    2de0:	b	2ef4 <me_unresv+0x1a4>
    2de4:	ldr	r4, [r4, #8]
    2de8:	cmp	r4, #0
    2dec:	beq	2ef4 <me_unresv+0x1a4>
    2df0:	ldr	r6, [r4]
    2df4:	mov	r1, r7
    2df8:	ldr	r0, [r6, #16]
    2dfc:	bl	d7c <irccmp@plt>
    2e00:	cmp	r0, #0
    2e04:	bne	2de4 <me_unresv+0x94>
    2e08:	ldr	r9, [r6, #44]	; 0x2c
    2e0c:	cmp	r9, #0
    2e10:	bne	2ed8 <me_unresv+0x188>
    2e14:	ldr	r1, [pc, #524]	; 3028 <me_unresv+0x2d8>
    2e18:	mov	r2, r7
    2e1c:	add	r1, pc, r1
    2e20:	mov	r0, r5
    2e24:	bl	d34 <sendto_one_notice@plt>
    2e28:	mov	r0, r5
    2e2c:	bl	c80 <get_oper_name@plt>
    2e30:	ldr	r1, [pc, #500]	; 302c <me_unresv+0x2dc>
    2e34:	mov	r3, r7
    2e38:	add	r1, pc, r1
    2e3c:	mov	r2, r0
    2e40:	mov	r0, #7
    2e44:	bl	cf8 <ilog@plt>
    2e48:	ldr	sl, [r6, #36]	; 0x24
    2e4c:	cmp	sl, #0
    2e50:	bne	2f38 <me_unresv+0x1e8>
    2e54:	mov	r2, sl
    2e58:	ldr	r1, [r6, #16]
    2e5c:	mov	r0, #3
    2e60:	bl	d40 <bandb_del@plt>
    2e64:	mov	r0, r5
    2e68:	bl	c80 <get_oper_name@plt>
    2e6c:	ldr	r2, [pc, #444]	; 3030 <me_unresv+0x2e0>
    2e70:	str	r7, [sp]
    2e74:	mov	r1, sl
    2e78:	add	r2, pc, r2
    2e7c:	mov	r3, r0
    2e80:	mov	r0, #256	; 0x100
    2e84:	bl	c50 <sendto_realops_snomask@plt>
    2e88:	ldmib	r4, {r2, r3}
    2e8c:	mov	r0, r4
    2e90:	cmp	r3, #0
    2e94:	strne	r2, [r3, #4]
    2e98:	ldrne	r2, [r4, #4]
    2e9c:	streq	r2, [r8, #4]
    2ea0:	cmp	r2, #0
    2ea4:	strne	r3, [r2, #8]
    2ea8:	streq	r3, [r8]
    2eac:	ldr	r3, [r8, #8]
    2eb0:	mov	r2, #0
    2eb4:	sub	r3, r3, #1
    2eb8:	str	r2, [r4, #4]
    2ebc:	str	r2, [r4, #8]
    2ec0:	str	r3, [r8, #8]
    2ec4:	bl	c8c <rb_free_rb_dlink_node@plt>
    2ec8:	mov	r0, r6
    2ecc:	add	sp, sp, #8
    2ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    2ed4:	b	cd4 <free_conf@plt>
    2ed8:	ldr	r1, [pc, #340]	; 3034 <me_unresv+0x2e4>
    2edc:	mov	r2, r7
    2ee0:	mov	r0, r5
    2ee4:	add	r1, pc, r1
    2ee8:	add	sp, sp, #8
    2eec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    2ef0:	b	d34 <sendto_one_notice@plt>
    2ef4:	ldr	r1, [pc, #316]	; 3038 <me_unresv+0x2e8>
    2ef8:	mov	r2, r7
    2efc:	mov	r0, r5
    2f00:	add	r1, pc, r1
    2f04:	b	2ee8 <me_unresv+0x198>
    2f08:	mov	r0, r7
    2f0c:	bl	d70 <hash_find_resv@plt>
    2f10:	subs	r6, r0, #0
    2f14:	beq	3008 <me_unresv+0x2b8>
    2f18:	ldr	r4, [r6, #44]	; 0x2c
    2f1c:	mov	r2, r7
    2f20:	cmp	r4, #0
    2f24:	beq	2f60 <me_unresv+0x210>
    2f28:	ldr	r1, [pc, #268]	; 303c <me_unresv+0x2ec>
    2f2c:	mov	r0, r5
    2f30:	add	r1, pc, r1
    2f34:	b	2ee8 <me_unresv+0x198>
    2f38:	mov	r0, r5
    2f3c:	bl	c80 <get_oper_name@plt>
    2f40:	ldr	r2, [pc, #248]	; 3040 <me_unresv+0x2f0>
    2f44:	str	r7, [sp]
    2f48:	mov	r1, r9
    2f4c:	add	r2, pc, r2
    2f50:	mov	r3, r0
    2f54:	mov	r0, #256	; 0x100
    2f58:	bl	c50 <sendto_realops_snomask@plt>
    2f5c:	b	2e88 <me_unresv+0x138>
    2f60:	ldr	r1, [pc, #220]	; 3044 <me_unresv+0x2f4>
    2f64:	mov	r0, r5
    2f68:	add	r1, pc, r1
    2f6c:	bl	d34 <sendto_one_notice@plt>
    2f70:	mov	r0, r5
    2f74:	bl	c80 <get_oper_name@plt>
    2f78:	ldr	r1, [pc, #200]	; 3048 <me_unresv+0x2f8>
    2f7c:	mov	r3, r7
    2f80:	add	r1, pc, r1
    2f84:	mov	r2, r0
    2f88:	mov	r0, #7
    2f8c:	bl	cf8 <ilog@plt>
    2f90:	ldr	r8, [r6, #36]	; 0x24
    2f94:	cmp	r8, #0
    2f98:	bne	2fe0 <me_unresv+0x290>
    2f9c:	mov	r2, r8
    2fa0:	ldr	r1, [r6, #16]
    2fa4:	mov	r0, #3
    2fa8:	bl	d40 <bandb_del@plt>
    2fac:	mov	r0, r5
    2fb0:	bl	c80 <get_oper_name@plt>
    2fb4:	ldr	r2, [pc, #144]	; 304c <me_unresv+0x2fc>
    2fb8:	str	r7, [sp]
    2fbc:	mov	r1, r8
    2fc0:	add	r2, pc, r2
    2fc4:	mov	r3, r0
    2fc8:	mov	r0, #256	; 0x100
    2fcc:	bl	c50 <sendto_realops_snomask@plt>
    2fd0:	mov	r0, r7
    2fd4:	mov	r1, r6
    2fd8:	bl	d10 <del_from_resv_hash@plt>
    2fdc:	b	2ec8 <me_unresv+0x178>
    2fe0:	mov	r0, r5
    2fe4:	bl	c80 <get_oper_name@plt>
    2fe8:	ldr	r2, [pc, #96]	; 3050 <me_unresv+0x300>
    2fec:	str	r7, [sp]
    2ff0:	mov	r1, r4
    2ff4:	add	r2, pc, r2
    2ff8:	mov	r3, r0
    2ffc:	mov	r0, #256	; 0x100
    3000:	bl	c50 <sendto_realops_snomask@plt>
    3004:	b	2fd0 <me_unresv+0x280>
    3008:	ldr	r1, [pc, #68]	; 3054 <me_unresv+0x304>
    300c:	mov	r2, r7
    3010:	mov	r0, r5
    3014:	add	r1, pc, r1
    3018:	b	2ee8 <me_unresv+0x198>
    301c:	.word	0x00011294
    3020:	.word	0x000000d4
    3024:	.word	0x000000b8
    3028:	.word	0x00000338
    302c:	.word	0x00000338
    3030:	.word	0x00000304
    3034:	.word	0x0000021c
    3038:	.word	0x000001f0
    303c:	.word	0x000001d0
    3040:	.word	0x00000254
    3044:	.word	0x000001ec
    3048:	.word	0x000001f0
    304c:	.word	0x000001bc
    3050:	.word	0x000001ac
    3054:	.word	0x000000dc

Disassembly of section .fini:

00003058 <_fini>:
    3058:	push	{r3, lr}
    305c:	pop	{r3, pc}
