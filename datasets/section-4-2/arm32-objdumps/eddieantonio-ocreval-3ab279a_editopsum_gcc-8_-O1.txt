
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	10810 <abort@plt+0x48>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <calloc@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <calloc@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <calloc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <strcmp@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <fopen@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <free@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <fgets@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <strdup@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <unlink@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <__xstat@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <fwrite@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <__libc_start_main@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__sysv_signal@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <getpid@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <exit@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <strlen@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <fprintf@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <__isoc99_sscanf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <fclose@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <sprintf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <strncmp@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <abort@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

Disassembly of section .text:

000107d4 <error@@Base-0x784>:
   107d4:	mov	fp, #0
   107d8:	mov	lr, #0
   107dc:	pop	{r1}		; (ldr r1, [sp], #4)
   107e0:	mov	r2, sp
   107e4:	push	{r2}		; (str r2, [sp, #-4]!)
   107e8:	push	{r0}		; (str r0, [sp, #-4]!)
   107ec:	ldr	ip, [pc, #16]	; 10804 <abort@plt+0x3c>
   107f0:	push	{ip}		; (str ip, [sp, #-4]!)
   107f4:	ldr	r0, [pc, #12]	; 10808 <abort@plt+0x40>
   107f8:	ldr	r3, [pc, #12]	; 1080c <abort@plt+0x44>
   107fc:	bl	10744 <__libc_start_main@plt>
   10800:	bl	107c8 <abort@plt>
   10804:			; <UNDEFINED> instruction: 0x000113b4
   10808:	andeq	r0, r1, r4, asr #17
   1080c:	andeq	r1, r1, r4, asr r3
   10810:	ldr	r3, [pc, #20]	; 1082c <abort@plt+0x64>
   10814:	ldr	r2, [pc, #20]	; 10830 <abort@plt+0x68>
   10818:	add	r3, pc, r3
   1081c:	ldr	r2, [r3, r2]
   10820:	cmp	r2, #0
   10824:	bxeq	lr
   10828:	b	1075c <__gmon_start__@plt>
   1082c:	andeq	r1, r1, r0, ror #15
   10830:	andeq	r0, r0, r0, rrx
   10834:	ldr	r0, [pc, #24]	; 10854 <abort@plt+0x8c>
   10838:	ldr	r3, [pc, #24]	; 10858 <abort@plt+0x90>
   1083c:	cmp	r3, r0
   10840:	bxeq	lr
   10844:	ldr	r3, [pc, #16]	; 1085c <abort@plt+0x94>
   10848:	cmp	r3, #0
   1084c:	bxeq	lr
   10850:	bx	r3
   10854:	andeq	r2, r2, r4, ror r0
   10858:	andeq	r2, r2, r4, ror r0
   1085c:	andeq	r0, r0, r0
   10860:	ldr	r0, [pc, #36]	; 1088c <abort@plt+0xc4>
   10864:	ldr	r1, [pc, #36]	; 10890 <abort@plt+0xc8>
   10868:	sub	r1, r1, r0
   1086c:	asr	r1, r1, #2
   10870:	add	r1, r1, r1, lsr #31
   10874:	asrs	r1, r1, #1
   10878:	bxeq	lr
   1087c:	ldr	r3, [pc, #16]	; 10894 <abort@plt+0xcc>
   10880:	cmp	r3, #0
   10884:	bxeq	lr
   10888:	bx	r3
   1088c:	andeq	r2, r2, r4, ror r0
   10890:	andeq	r2, r2, r4, ror r0
   10894:	andeq	r0, r0, r0
   10898:	push	{r4, lr}
   1089c:	ldr	r4, [pc, #24]	; 108bc <abort@plt+0xf4>
   108a0:	ldrb	r3, [r4]
   108a4:	cmp	r3, #0
   108a8:	popne	{r4, pc}
   108ac:	bl	10834 <abort@plt+0x6c>
   108b0:	mov	r3, #1
   108b4:	strb	r3, [r4]
   108b8:	pop	{r4, pc}
   108bc:	andeq	r2, r2, r8, lsl #1
   108c0:	b	10860 <abort@plt+0x98>
   108c4:	strd	r4, [sp, #-16]!
   108c8:	str	r6, [sp, #8]
   108cc:	str	lr, [sp, #12]
   108d0:	sub	sp, sp, #8
   108d4:	str	r0, [sp, #4]
   108d8:	mov	r5, r1
   108dc:	mov	r3, #0
   108e0:	movw	r2, #5060	; 0x13c4
   108e4:	movt	r2, #1
   108e8:	add	r0, sp, #4
   108ec:	bl	110c4 <error@@Base+0x16c>
   108f0:	ldr	r3, [sp, #4]
   108f4:	cmp	r3, #1
   108f8:	ble	1093c <abort@plt+0x174>
   108fc:	sub	r5, r5, #4
   10900:	mov	r4, #0
   10904:	movw	r6, #8436	; 0x20f4
   10908:	movt	r6, #2
   1090c:	ldr	r1, [r5, #4]!
   10910:	mov	r0, r6
   10914:	bl	109e0 <abort@plt+0x218>
   10918:	add	r4, r4, #1
   1091c:	ldr	r3, [sp, #4]
   10920:	cmp	r3, r4
   10924:	bgt	1090c <abort@plt+0x144>
   10928:	mov	r1, #0
   1092c:	movw	r0, #8436	; 0x20f4
   10930:	movt	r0, #2
   10934:	bl	10b7c <abort@plt+0x3b4>
   10938:	bl	10ef8 <abort@plt+0x730>
   1093c:	movw	r0, #5112	; 0x13f8
   10940:	movt	r0, #1
   10944:	bl	10f58 <error@@Base>
   10948:	str	r4, [sp, #-8]!
   1094c:	str	lr, [sp, #4]
   10950:	mov	r2, r0
   10954:	mov	r1, #99	; 0x63
   10958:	movw	r0, #8332	; 0x208c
   1095c:	movt	r0, #2
   10960:	bl	10708 <fgets@plt>
   10964:	adds	r0, r0, #0
   10968:	movne	r0, #1
   1096c:	ldr	r4, [sp]
   10970:	add	sp, sp, #4
   10974:	pop	{pc}		; (ldr pc, [sp], #4)
   10978:	strd	r4, [sp, #-16]!
   1097c:	str	r6, [sp, #8]
   10980:	str	lr, [sp, #12]
   10984:	mov	r4, r1
   10988:	mov	r5, r2
   1098c:	bl	10948 <abort@plt+0x180>
   10990:	cmp	r0, #0
   10994:	bne	109a8 <abort@plt+0x1e0>
   10998:	ldrd	r4, [sp]
   1099c:	ldr	r6, [sp, #8]
   109a0:	add	sp, sp, #12
   109a4:	pop	{pc}		; (ldr pc, [sp], #4)
   109a8:	mov	r2, r4
   109ac:	movw	r1, #5248	; 0x1480
   109b0:	movt	r1, #1
   109b4:	movw	r0, #8332	; 0x208c
   109b8:	movt	r0, #2
   109bc:	bl	10798 <__isoc99_sscanf@plt>
   109c0:	cmp	r0, #1
   109c4:	movne	r0, #0
   109c8:	bne	10998 <abort@plt+0x1d0>
   109cc:	ldr	r3, [r5]
   109d0:	ldr	r2, [r4]
   109d4:	add	r3, r3, r2
   109d8:	str	r3, [r5]
   109dc:	b	10998 <abort@plt+0x1d0>
   109e0:	strd	r4, [sp, #-20]!	; 0xffffffec
   109e4:	strd	r6, [sp, #8]
   109e8:	str	lr, [sp, #16]
   109ec:	sub	sp, sp, #20
   109f0:	mov	r5, r0
   109f4:	mov	r6, r1
   109f8:	movw	r1, #5144	; 0x1418
   109fc:	movt	r1, #1
   10a00:	mov	r0, r6
   10a04:	bl	11040 <error@@Base+0xe8>
   10a08:	mov	r4, r0
   10a0c:	bl	10948 <abort@plt+0x180>
   10a10:	cmp	r0, #0
   10a14:	beq	10b60 <abort@plt+0x398>
   10a18:	mov	r2, #42	; 0x2a
   10a1c:	movw	r1, #5148	; 0x141c
   10a20:	movt	r1, #1
   10a24:	movw	r0, #8332	; 0x208c
   10a28:	movt	r0, #2
   10a2c:	bl	107bc <strncmp@plt>
   10a30:	cmp	r0, #0
   10a34:	bne	10b60 <abort@plt+0x398>
   10a38:	mov	r0, r4
   10a3c:	bl	10948 <abort@plt+0x180>
   10a40:	cmp	r0, #0
   10a44:	beq	10b60 <abort@plt+0x398>
   10a48:	movw	r1, #5196	; 0x144c
   10a4c:	movt	r1, #1
   10a50:	movw	r0, #8332	; 0x208c
   10a54:	movt	r0, #2
   10a58:	bl	106e4 <strcmp@plt>
   10a5c:	cmp	r0, #0
   10a60:	bne	10b60 <abort@plt+0x398>
   10a64:	mov	r2, r5
   10a68:	add	r1, sp, #8
   10a6c:	mov	r0, r4
   10a70:	bl	10978 <abort@plt+0x1b0>
   10a74:	cmp	r0, #0
   10a78:	beq	10b60 <abort@plt+0x398>
   10a7c:	add	r2, r5, #4
   10a80:	add	r1, sp, #8
   10a84:	mov	r0, r4
   10a88:	bl	10978 <abort@plt+0x1b0>
   10a8c:	cmp	r0, #0
   10a90:	beq	10b60 <abort@plt+0x398>
   10a94:	add	r2, r5, #8
   10a98:	add	r1, sp, #12
   10a9c:	mov	r0, r4
   10aa0:	bl	10978 <abort@plt+0x1b0>
   10aa4:	cmp	r0, #0
   10aa8:	beq	10b60 <abort@plt+0x398>
   10aac:	ldr	r3, [sp, #12]
   10ab0:	cmp	r3, #0
   10ab4:	bgt	10ad4 <abort@plt+0x30c>
   10ab8:	mov	r0, r4
   10abc:	bl	10de4 <abort@plt+0x61c>
   10ac0:	add	sp, sp, #20
   10ac4:	ldrd	r4, [sp]
   10ac8:	ldrd	r6, [sp, #8]
   10acc:	add	sp, sp, #16
   10ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ad4:	mov	r0, r4
   10ad8:	bl	10948 <abort@plt+0x180>
   10adc:	cmp	r0, #0
   10ae0:	beq	10ab8 <abort@plt+0x2f0>
   10ae4:	mov	r0, r4
   10ae8:	bl	10948 <abort@plt+0x180>
   10aec:	cmp	r0, #0
   10af0:	beq	10ab8 <abort@plt+0x2f0>
   10af4:	mov	r0, r4
   10af8:	bl	10948 <abort@plt+0x180>
   10afc:	cmp	r0, #0
   10b00:	beq	10ab8 <abort@plt+0x2f0>
   10b04:	movw	r7, #5244	; 0x147c
   10b08:	movt	r7, #1
   10b0c:	movw	r6, #8332	; 0x208c
   10b10:	movt	r6, #2
   10b14:	b	10b4c <abort@plt+0x384>
   10b18:	add	r3, sp, #4
   10b1c:	add	r2, sp, #8
   10b20:	mov	r1, r7
   10b24:	mov	r0, r6
   10b28:	bl	10798 <__isoc99_sscanf@plt>
   10b2c:	cmp	r0, #2
   10b30:	bne	10ab8 <abort@plt+0x2f0>
   10b34:	ldr	r3, [sp, #4]
   10b38:	add	r3, r5, r3, lsl #2
   10b3c:	ldr	r2, [r3, #12]
   10b40:	ldr	r1, [sp, #8]
   10b44:	add	r2, r2, r1
   10b48:	str	r2, [r3, #12]
   10b4c:	mov	r0, r4
   10b50:	bl	10948 <abort@plt+0x180>
   10b54:	cmp	r0, #0
   10b58:	beq	10ab8 <abort@plt+0x2f0>
   10b5c:	b	10b18 <abort@plt+0x350>
   10b60:	movw	r1, #5136	; 0x1410
   10b64:	movt	r1, #1
   10b68:	cmp	r6, #0
   10b6c:	movne	r1, r6
   10b70:	movw	r0, #5252	; 0x1484
   10b74:	movt	r0, #1
   10b78:	bl	10ffc <error@@Base+0xa4>
   10b7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10b80:	strd	r6, [sp, #8]
   10b84:	str	r8, [sp, #16]
   10b88:	str	lr, [sp, #20]
   10b8c:	mov	r5, r0
   10b90:	mov	r0, r1
   10b94:	movw	r1, #5272	; 0x1498
   10b98:	movt	r1, #1
   10b9c:	bl	11040 <error@@Base+0xe8>
   10ba0:	mov	r6, r0
   10ba4:	movw	r3, #5196	; 0x144c
   10ba8:	movt	r3, #1
   10bac:	movw	r2, #5148	; 0x141c
   10bb0:	movt	r2, #1
   10bb4:	movw	r1, #5276	; 0x149c
   10bb8:	movt	r1, #1
   10bbc:	bl	1078c <fprintf@plt>
   10bc0:	movw	r4, #5296	; 0x14b0
   10bc4:	movt	r4, #1
   10bc8:	movw	r3, #5284	; 0x14a4
   10bcc:	movt	r3, #1
   10bd0:	ldr	r2, [r5]
   10bd4:	mov	r1, r4
   10bd8:	mov	r0, r6
   10bdc:	bl	1078c <fprintf@plt>
   10be0:	movw	r3, #5308	; 0x14bc
   10be4:	movt	r3, #1
   10be8:	ldr	r2, [r5, #4]
   10bec:	mov	r1, r4
   10bf0:	mov	r0, r6
   10bf4:	bl	1078c <fprintf@plt>
   10bf8:	movw	r3, #5320	; 0x14c8
   10bfc:	movt	r3, #1
   10c00:	ldr	r2, [r5, #8]
   10c04:	mov	r1, r4
   10c08:	mov	r0, r6
   10c0c:	bl	1078c <fprintf@plt>
   10c10:	ldr	r3, [r5, #8]
   10c14:	cmp	r3, #0
   10c18:	bgt	10c38 <abort@plt+0x470>
   10c1c:	mov	r0, r6
   10c20:	bl	10de4 <abort@plt+0x61c>
   10c24:	ldrd	r4, [sp]
   10c28:	ldrd	r6, [sp, #8]
   10c2c:	ldr	r8, [sp, #16]
   10c30:	add	sp, sp, #20
   10c34:	pop	{pc}		; (ldr pc, [sp], #4)
   10c38:	mov	r3, r6
   10c3c:	mov	r2, #25
   10c40:	mov	r1, #1
   10c44:	movw	r0, #5328	; 0x14d0
   10c48:	movt	r0, #1
   10c4c:	bl	10738 <fwrite@plt>
   10c50:	add	r5, r5, #12
   10c54:	mov	r4, #1
   10c58:	movw	r7, #5356	; 0x14ec
   10c5c:	movt	r7, #1
   10c60:	b	10c70 <abort@plt+0x4a8>
   10c64:	add	r4, r4, #1
   10c68:	cmp	r4, #101	; 0x65
   10c6c:	beq	10c1c <abort@plt+0x454>
   10c70:	ldr	r2, [r5, #4]!
   10c74:	cmp	r2, #0
   10c78:	ble	10c64 <abort@plt+0x49c>
   10c7c:	mov	r3, r4
   10c80:	mov	r1, r7
   10c84:	mov	r0, r6
   10c88:	bl	1078c <fprintf@plt>
   10c8c:	b	10c64 <abort@plt+0x49c>
   10c90:	strd	r4, [sp, #-12]!
   10c94:	str	lr, [sp, #8]
   10c98:	sub	sp, sp, #116	; 0x74
   10c9c:	mov	r5, r0
   10ca0:	movw	r3, #8856	; 0x2298
   10ca4:	movt	r3, #2
   10ca8:	ldr	r4, [r3]
   10cac:	bl	10768 <getpid@plt>
   10cb0:	str	r5, [sp]
   10cb4:	mov	r3, r0
   10cb8:	mov	r2, r4
   10cbc:	movw	r1, #5368	; 0x14f8
   10cc0:	movt	r1, #1
   10cc4:	add	r0, sp, #12
   10cc8:	bl	107b0 <sprintf@plt>
   10ccc:	add	r0, sp, #12
   10cd0:	bl	10714 <strdup@plt>
   10cd4:	add	sp, sp, #116	; 0x74
   10cd8:	ldrd	r4, [sp]
   10cdc:	add	sp, sp, #8
   10ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ce4:	str	r7, [sp, #-8]!
   10ce8:	str	lr, [sp, #4]
   10cec:	mov	r6, r0
   10cf0:	movw	r3, #8860	; 0x229c
   10cf4:	movt	r3, #2
   10cf8:	ldr	r3, [r3]
   10cfc:	cmp	r3, #0
   10d00:	beq	10d08 <abort@plt+0x540>
   10d04:	blx	r3
   10d08:	movw	r3, #8432	; 0x20f0
   10d0c:	movt	r3, #2
   10d10:	ldrsh	r3, [r3]
   10d14:	cmp	r3, #0
   10d18:	ble	10d54 <abort@plt+0x58c>
   10d1c:	mov	r4, #1
   10d20:	movw	r5, #8432	; 0x20f0
   10d24:	movt	r5, #2
   10d28:	mov	r0, r4
   10d2c:	bl	10c90 <abort@plt+0x4c8>
   10d30:	mov	r7, r0
   10d34:	bl	10720 <unlink@plt>
   10d38:	mov	r0, r7
   10d3c:	bl	106fc <free@plt>
   10d40:	add	r4, r4, #1
   10d44:	sxth	r4, r4
   10d48:	ldrsh	r3, [r5]
   10d4c:	cmp	r3, r4
   10d50:	bge	10d28 <abort@plt+0x560>
   10d54:	mov	r0, r6
   10d58:	bl	10774 <exit@plt>
   10d5c:	str	r4, [sp, #-8]!
   10d60:	str	lr, [sp, #4]
   10d64:	ldrb	r3, [r0]
   10d68:	cmp	r3, #0
   10d6c:	beq	10dc0 <abort@plt+0x5f8>
   10d70:	ldrb	r2, [r1]
   10d74:	cmp	r2, r3
   10d78:	bne	10ddc <abort@plt+0x614>
   10d7c:	mov	ip, r1
   10d80:	mov	r2, r0
   10d84:	rsb	r0, r0, #1
   10d88:	add	r4, r0, r2
   10d8c:	ldrb	r3, [r2, #1]!
   10d90:	cmp	r3, #0
   10d94:	beq	10dc4 <abort@plt+0x5fc>
   10d98:	ldrb	lr, [ip, #1]!
   10d9c:	cmp	lr, r3
   10da0:	beq	10d88 <abort@plt+0x5c0>
   10da4:	ldrb	r2, [r1, r4]
   10da8:	cmp	r2, r3
   10dac:	mvnhi	r0, #0
   10db0:	movls	r0, #1
   10db4:	ldr	r4, [sp]
   10db8:	add	sp, sp, #4
   10dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   10dc0:	mov	r4, #0
   10dc4:	ldrb	r3, [r1, r4]
   10dc8:	cmp	r3, #0
   10dcc:	moveq	r0, #0
   10dd0:	beq	10db4 <abort@plt+0x5ec>
   10dd4:	mov	r3, #0
   10dd8:	b	10da4 <abort@plt+0x5dc>
   10ddc:	mov	r4, #0
   10de0:	b	10da4 <abort@plt+0x5dc>
   10de4:	movw	r3, #8320	; 0x2080
   10de8:	movt	r3, #2
   10dec:	ldr	r3, [r3]
   10df0:	cmp	r3, r0
   10df4:	bxeq	lr
   10df8:	movw	r3, #8324	; 0x2084
   10dfc:	movt	r3, #2
   10e00:	ldr	r3, [r3]
   10e04:	cmp	r3, r0
   10e08:	bxeq	lr
   10e0c:	str	r4, [sp, #-8]!
   10e10:	str	lr, [sp, #4]
   10e14:	bl	107a4 <fclose@plt>
   10e18:	ldr	r4, [sp]
   10e1c:	add	sp, sp, #4
   10e20:	pop	{pc}		; (ldr pc, [sp], #4)
   10e24:	push	{lr}		; (str lr, [sp, #-4]!)
   10e28:	sub	sp, sp, #92	; 0x5c
   10e2c:	mov	r2, sp
   10e30:	mov	r1, r0
   10e34:	mov	r0, #3
   10e38:	bl	1072c <__xstat@plt>
   10e3c:	clz	r0, r0
   10e40:	lsr	r0, r0, #5
   10e44:	add	sp, sp, #92	; 0x5c
   10e48:	pop	{pc}		; (ldr pc, [sp], #4)
   10e4c:	str	r4, [sp, #-8]!
   10e50:	str	lr, [sp, #4]
   10e54:	movw	r3, #8432	; 0x20f0
   10e58:	movt	r3, #2
   10e5c:	ldrh	r0, [r3]
   10e60:	add	r0, r0, #1
   10e64:	sxth	r0, r0
   10e68:	strh	r0, [r3]
   10e6c:	bl	10c90 <abort@plt+0x4c8>
   10e70:	mov	r4, r0
   10e74:	bl	10720 <unlink@plt>
   10e78:	mov	r0, r4
   10e7c:	ldr	r4, [sp]
   10e80:	add	sp, sp, #4
   10e84:	pop	{pc}		; (ldr pc, [sp], #4)
   10e88:	str	r4, [sp, #-8]!
   10e8c:	str	lr, [sp, #4]
   10e90:	mov	r4, r0
   10e94:	bl	10780 <strlen@plt>
   10e98:	uxth	r0, r0
   10e9c:	sub	r2, r0, #1
   10ea0:	sxth	r2, r2
   10ea4:	cmp	r2, #0
   10ea8:	blt	10ee4 <abort@plt+0x71c>
   10eac:	ldrb	r3, [r4, r2]
   10eb0:	cmp	r3, #47	; 0x2f
   10eb4:	beq	10ee4 <abort@plt+0x71c>
   10eb8:	sub	r0, r0, #2
   10ebc:	sxth	r3, r0
   10ec0:	add	r1, r3, #1
   10ec4:	add	r1, r4, r1
   10ec8:	sxth	r2, r3
   10ecc:	cmp	r2, #0
   10ed0:	blt	10ee4 <abort@plt+0x71c>
   10ed4:	sub	r3, r3, #1
   10ed8:	ldrb	r0, [r1, #-1]!
   10edc:	cmp	r0, #47	; 0x2f
   10ee0:	bne	10ec8 <abort@plt+0x700>
   10ee4:	add	r0, r2, #1
   10ee8:	add	r0, r4, r0
   10eec:	ldr	r4, [sp]
   10ef0:	add	sp, sp, #4
   10ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef8:	str	r4, [sp, #-8]!
   10efc:	str	lr, [sp, #4]
   10f00:	mov	r0, #0
   10f04:	bl	10ce4 <abort@plt+0x51c>
   10f08:	str	r4, [sp, #-8]!
   10f0c:	str	lr, [sp, #4]
   10f10:	movw	r2, #8852	; 0x2294
   10f14:	movt	r2, #2
   10f18:	ldr	r2, [r2]
   10f1c:	cmp	r2, #0
   10f20:	beq	10f2c <abort@plt+0x764>
   10f24:	blx	r2
   10f28:	bl	10ef8 <abort@plt+0x730>
   10f2c:	movw	r2, #8856	; 0x2298
   10f30:	movt	r2, #2
   10f34:	movw	ip, #8312	; 0x2078
   10f38:	movt	ip, #2
   10f3c:	mov	r3, r0
   10f40:	ldr	r2, [r2]
   10f44:	movw	r1, #5384	; 0x1508
   10f48:	movt	r1, #1
   10f4c:	ldr	r0, [ip]
   10f50:	bl	1078c <fprintf@plt>
   10f54:	b	10f28 <abort@plt+0x760>

00010f58 <error@@Base>:
   10f58:	str	r4, [sp, #-8]!
   10f5c:	str	lr, [sp, #4]
   10f60:	movw	r2, #8856	; 0x2298
   10f64:	movt	r2, #2
   10f68:	movw	ip, #8312	; 0x2078
   10f6c:	movt	ip, #2
   10f70:	mov	r3, r0
   10f74:	ldr	r2, [r2]
   10f78:	movw	r1, #5400	; 0x1518
   10f7c:	movt	r1, #1
   10f80:	ldr	r0, [ip]
   10f84:	bl	1078c <fprintf@plt>
   10f88:	movw	r3, #8300	; 0x206c
   10f8c:	movt	r3, #2
   10f90:	ldr	r0, [r3]
   10f94:	bl	10ce4 <abort@plt+0x51c>
   10f98:	str	r4, [sp, #-8]!
   10f9c:	str	lr, [sp, #4]
   10fa0:	bl	106d8 <calloc@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fb8 <error@@Base+0x60>
   10fac:	ldr	r4, [sp]
   10fb0:	add	sp, sp, #4
   10fb4:	pop	{pc}		; (ldr pc, [sp], #4)
   10fb8:	movw	r0, #5408	; 0x1520
   10fbc:	movt	r0, #1
   10fc0:	bl	10f58 <error@@Base>
   10fc4:	movw	r3, #8432	; 0x20f0
   10fc8:	movt	r3, #2
   10fcc:	ldrb	r3, [r3, #2]
   10fd0:	cmp	r3, #0
   10fd4:	bxne	lr
   10fd8:	str	r4, [sp, #-8]!
   10fdc:	str	lr, [sp, #4]
   10fe0:	movw	r3, #8432	; 0x20f0
   10fe4:	movt	r3, #2
   10fe8:	mov	r2, #1
   10fec:	strb	r2, [r3, #2]
   10ff0:	movw	r0, #5436	; 0x153c
   10ff4:	movt	r0, #1
   10ff8:	bl	10f58 <error@@Base>
   10ffc:	push	{lr}		; (str lr, [sp, #-4]!)
   11000:	sub	sp, sp, #12
   11004:	movw	r2, #8856	; 0x2298
   11008:	movt	r2, #2
   1100c:	movw	ip, #8312	; 0x2078
   11010:	movt	ip, #2
   11014:	str	r1, [sp]
   11018:	mov	r3, r0
   1101c:	ldr	r2, [r2]
   11020:	movw	r1, #5452	; 0x154c
   11024:	movt	r1, #1
   11028:	ldr	r0, [ip]
   1102c:	bl	1078c <fprintf@plt>
   11030:	movw	r3, #8300	; 0x206c
   11034:	movt	r3, #2
   11038:	ldr	r0, [r3]
   1103c:	bl	10ce4 <abort@plt+0x51c>
   11040:	strd	r4, [sp, #-16]!
   11044:	str	r6, [sp, #8]
   11048:	str	lr, [sp, #12]
   1104c:	subs	r5, r0, #0
   11050:	beq	11078 <error@@Base+0x120>
   11054:	mov	r4, r1
   11058:	mov	r0, r5
   1105c:	bl	106f0 <fopen@plt>
   11060:	cmp	r0, #0
   11064:	beq	11098 <error@@Base+0x140>
   11068:	ldrd	r4, [sp]
   1106c:	ldr	r6, [sp, #8]
   11070:	add	sp, sp, #12
   11074:	pop	{pc}		; (ldr pc, [sp], #4)
   11078:	ldrb	r3, [r1]
   1107c:	cmp	r3, #114	; 0x72
   11080:	movweq	r3, #8320	; 0x2080
   11084:	movteq	r3, #2
   11088:	movwne	r3, #8324	; 0x2084
   1108c:	movtne	r3, #2
   11090:	ldr	r0, [r3]
   11094:	b	11068 <error@@Base+0x110>
   11098:	ldrb	r3, [r4]
   1109c:	cmp	r3, #119	; 0x77
   110a0:	beq	110b4 <error@@Base+0x15c>
   110a4:	mov	r1, r5
   110a8:	movw	r0, #5492	; 0x1574
   110ac:	movt	r0, #1
   110b0:	bl	10ffc <error@@Base+0xa4>
   110b4:	mov	r1, r5
   110b8:	movw	r0, #5468	; 0x155c
   110bc:	movt	r0, #1
   110c0:	bl	10ffc <error@@Base+0xa4>
   110c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   110c8:	strd	r6, [sp, #8]
   110cc:	strd	r8, [sp, #16]
   110d0:	strd	sl, [sp, #24]
   110d4:	str	lr, [sp, #32]
   110d8:	sub	sp, sp, #28
   110dc:	mov	r5, r0
   110e0:	str	r0, [sp, #4]
   110e4:	mov	r9, r1
   110e8:	str	r2, [sp, #20]
   110ec:	mov	r6, r3
   110f0:	ldr	r0, [r1]
   110f4:	bl	10e88 <abort@plt+0x6c0>
   110f8:	movw	r3, #8856	; 0x2298
   110fc:	movt	r3, #2
   11100:	str	r0, [r3]
   11104:	movw	r4, #4036	; 0xfc4
   11108:	movt	r4, #1
   1110c:	mov	r1, r4
   11110:	mov	r0, #2
   11114:	bl	10750 <__sysv_signal@plt>
   11118:	mov	r1, r4
   1111c:	mov	r0, #15
   11120:	bl	10750 <__sysv_signal@plt>
   11124:	ldr	r7, [r5]
   11128:	cmp	r7, #1
   1112c:	beq	11158 <error@@Base+0x200>
   11130:	movle	r8, #0
   11134:	ble	11170 <error@@Base+0x218>
   11138:	mov	r8, #0
   1113c:	mov	sl, #1
   11140:	mov	r4, sl
   11144:	movw	r3, #5512	; 0x1588
   11148:	movt	r3, #1
   1114c:	str	r3, [sp, #12]
   11150:	str	r6, [sp, #16]
   11154:	b	11214 <error@@Base+0x2bc>
   11158:	movw	r3, #8300	; 0x206c
   1115c:	movt	r3, #2
   11160:	ldrb	r3, [r3, #4]
   11164:	cmp	r3, #0
   11168:	moveq	r8, #0
   1116c:	bne	11194 <error@@Base+0x23c>
   11170:	ldr	r3, [sp, #4]
   11174:	str	r8, [r3]
   11178:	add	sp, sp, #28
   1117c:	ldrd	r4, [sp]
   11180:	ldrd	r6, [sp, #8]
   11184:	ldrd	r8, [sp, #16]
   11188:	ldrd	sl, [sp, #24]
   1118c:	add	sp, sp, #32
   11190:	pop	{pc}		; (ldr pc, [sp], #4)
   11194:	ldr	r0, [sp, #20]
   11198:	bl	10f08 <abort@plt+0x740>
   1119c:	ldr	r0, [sp, #20]
   111a0:	bl	10f08 <abort@plt+0x740>
   111a4:	ldr	r0, [sp, #16]
   111a8:	b	112ac <error@@Base+0x354>
   111ac:	ldr	r3, [r0, #8]
   111b0:	cmp	r3, #0
   111b4:	beq	11308 <error@@Base+0x3b0>
   111b8:	ldrb	r2, [r5, #2]
   111bc:	cmp	r2, #0
   111c0:	bne	11308 <error@@Base+0x3b0>
   111c4:	ldrb	r2, [r3]
   111c8:	cmp	r2, #0
   111cc:	bne	111dc <error@@Base+0x284>
   111d0:	mov	r2, #1
   111d4:	strb	r2, [r3]
   111d8:	b	111f8 <error@@Base+0x2a0>
   111dc:	mov	r1, r5
   111e0:	movw	r0, #5536	; 0x15a0
   111e4:	movt	r0, #1
   111e8:	bl	10ffc <error@@Base+0xa4>
   111ec:	add	r3, r8, #1
   111f0:	str	r5, [r9, r8, lsl #2]
   111f4:	sxth	r8, r3
   111f8:	add	r4, r4, #1
   111fc:	sxth	r4, r4
   11200:	mov	sl, r4
   11204:	ldr	r3, [sp, #4]
   11208:	ldr	r7, [r3]
   1120c:	cmp	r4, r7
   11210:	bge	11170 <error@@Base+0x218>
   11214:	lsl	r3, r4, #2
   11218:	str	r3, [sp, #8]
   1121c:	ldr	r5, [r9, r4, lsl #2]
   11220:	ldrb	r3, [r5]
   11224:	cmp	r3, #45	; 0x2d
   11228:	bne	111ec <error@@Base+0x294>
   1122c:	ldrb	fp, [r5, #1]
   11230:	cmp	fp, #0
   11234:	beq	111ec <error@@Base+0x294>
   11238:	mov	r0, r5
   1123c:	bl	10780 <strlen@plt>
   11240:	mov	r2, r0
   11244:	mov	r1, r5
   11248:	ldr	r0, [sp, #12]
   1124c:	bl	107bc <strncmp@plt>
   11250:	cmp	r0, #0
   11254:	beq	1119c <error@@Base+0x244>
   11258:	add	sl, sl, #1
   1125c:	cmp	sl, r7
   11260:	ldrlt	r3, [sp, #8]
   11264:	addlt	r3, r9, r3
   11268:	ldrlt	r1, [r3, #4]
   1126c:	movge	r1, #0
   11270:	cmp	r6, #0
   11274:	beq	11308 <error@@Base+0x3b0>
   11278:	ldrb	r3, [r6]
   1127c:	cmp	fp, r3
   11280:	cmpne	r3, #0
   11284:	beq	111a4 <error@@Base+0x24c>
   11288:	mov	r2, #0
   1128c:	add	r2, r2, #1
   11290:	sxth	r2, r2
   11294:	add	r3, r2, r2, lsl #1
   11298:	add	r0, r6, r3, lsl #2
   1129c:	ldrb	r3, [r6, r3, lsl #2]
   112a0:	cmp	fp, r3
   112a4:	cmpne	r3, #0
   112a8:	bne	1128c <error@@Base+0x334>
   112ac:	cmp	r3, #0
   112b0:	beq	11308 <error@@Base+0x3b0>
   112b4:	ldr	r3, [r0, #4]
   112b8:	cmp	r3, #0
   112bc:	beq	111ac <error@@Base+0x254>
   112c0:	ldrb	r2, [r5, #2]
   112c4:	cmp	r1, #0
   112c8:	cmpeq	r2, #0
   112cc:	beq	112fc <error@@Base+0x3a4>
   112d0:	ldr	r0, [r3]
   112d4:	cmp	r0, #0
   112d8:	bne	111dc <error@@Base+0x284>
   112dc:	cmp	r2, #0
   112e0:	addne	r1, r5, #2
   112e4:	str	r1, [r3]
   112e8:	ldrb	r3, [r5, #2]
   112ec:	cmp	r3, #0
   112f0:	addeq	r4, r4, #1
   112f4:	sxtheq	r4, r4
   112f8:	b	111f8 <error@@Base+0x2a0>
   112fc:	ldr	r3, [r0, #8]
   11300:	cmp	r3, #0
   11304:	bne	111c4 <error@@Base+0x26c>
   11308:	mov	r1, r5
   1130c:	movw	r0, #5520	; 0x1590
   11310:	movt	r0, #1
   11314:	bl	10ffc <error@@Base+0xa4>
   11318:	push	{lr}		; (str lr, [sp, #-4]!)
   1131c:	sub	sp, sp, #12
   11320:	movw	r2, #8856	; 0x2298
   11324:	movt	r2, #2
   11328:	movw	ip, #8312	; 0x2078
   1132c:	movt	ip, #2
   11330:	str	r1, [sp]
   11334:	mov	r3, r0
   11338:	ldr	r2, [r2]
   1133c:	movw	r1, #5452	; 0x154c
   11340:	movt	r1, #1
   11344:	ldr	r0, [ip]
   11348:	bl	1078c <fprintf@plt>
   1134c:	add	sp, sp, #12
   11350:	pop	{pc}		; (ldr pc, [sp], #4)
   11354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11358:	mov	r7, r0
   1135c:	ldr	r6, [pc, #72]	; 113ac <error@@Base+0x454>
   11360:	ldr	r5, [pc, #72]	; 113b0 <error@@Base+0x458>
   11364:	add	r6, pc, r6
   11368:	add	r5, pc, r5
   1136c:	sub	r6, r6, r5
   11370:	mov	r8, r1
   11374:	mov	r9, r2
   11378:	bl	106b8 <calloc@plt-0x20>
   1137c:	asrs	r6, r6, #2
   11380:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11384:	mov	r4, #0
   11388:	add	r4, r4, #1
   1138c:	ldr	r3, [r5], #4
   11390:	mov	r2, r9
   11394:	mov	r1, r8
   11398:	mov	r0, r7
   1139c:	blx	r3
   113a0:	cmp	r6, r4
   113a4:	bne	11388 <error@@Base+0x430>
   113a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113ac:	muleq	r1, r8, fp
   113b0:	muleq	r1, r0, fp
   113b4:	bx	lr

Disassembly of section .fini:

000113b8 <.fini>:
   113b8:	push	{r3, lr}
   113bc:	pop	{r3, pc}
