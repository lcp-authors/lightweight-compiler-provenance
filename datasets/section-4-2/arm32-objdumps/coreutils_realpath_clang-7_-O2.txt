
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <.init>:
   10d98:	push	{r3, lr}
   10d9c:	bl	1105c <__mempcpy_chk@plt+0x4c>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <calloc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <calloc@plt-0x4>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r7, r1, ip, asr #4

00010db8 <calloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <fputs_unlocked@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <raise@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <fflush@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <memmove@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <free@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <faccessat@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <_exit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <memcpy@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <mbsinit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <memcmp@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <dcgettext@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <realloc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <textdomain@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <rawmemchr@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <iswprint@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <readlink@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <lseek64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <__ctype_get_mb_cur_max@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <__fpending@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <mbrtowc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <error@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <malloc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <__libc_start_main@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <__freading@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <__gmon_start__@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <getopt_long@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <__ctype_b_loc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <getcwd@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <strlen@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <__errno_location@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <__cxa_atexit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <memset@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <__printf_chk@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <fileno@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <__fprintf_chk@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <fclose@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <fseeko64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <__overflow@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #252]!	; 0xfc

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #244]!	; 0xf4

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #236]!	; 0xec

00010fd4 <bindtextdomain@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #228]!	; 0xe4

00010fe0 <__xstat64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #220]!	; 0xdc

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #212]!	; 0xd4

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #204]!	; 0xcc

00011004 <strspn@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #196]!	; 0xc4

00011010 <__mempcpy_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <__mempcpy_chk@plt+0x40>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x44>
   11044:	ldr	r3, [pc, #12]	; 11058 <__mempcpy_chk@plt+0x48>
   11048:	bl	10ee4 <__libc_start_main@plt>
   1104c:	bl	10ff8 <abort@plt>
   11050:	andeq	r6, r1, r0, asr sp
   11054:	andeq	r1, r1, r0, ror r3
   11058:	strdeq	r6, [r1], -r0
   1105c:	ldr	r3, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x68>
   11060:	ldr	r2, [pc, #20]	; 1107c <__mempcpy_chk@plt+0x6c>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10efc <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -r8
   11080:	ldr	r0, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x90>
   11084:	ldr	r3, [pc, #24]	; 110a4 <__mempcpy_chk@plt+0x94>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <__mempcpy_chk@plt+0x98>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r8, r2, r0, lsr r1
   110a4:	andeq	r8, r2, r0, lsr r1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc8>
   110b0:	ldr	r1, [pc, #36]	; 110dc <__mempcpy_chk@plt+0xcc>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0xd0>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r8, r2, r0, lsr r1
   110dc:	andeq	r8, r2, r0, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <__mempcpy_chk@plt+0xf8>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <__mempcpy_chk@plt+0x70>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r8, r2, ip, asr #2
   1110c:	b	110ac <__mempcpy_chk@plt+0x9c>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #56	; 0x38
   1111c:	mov	r4, r0
   11120:	cmp	r0, #0
   11124:	bne	1132c <__mempcpy_chk@plt+0x31c>
   11128:	movw	r1, #28067	; 0x6da3
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	movt	r1, #1
   11138:	bl	10e48 <dcgettext@plt>
   1113c:	mov	r1, r0
   11140:	movw	r0, #33124	; 0x8164
   11144:	movt	r0, #2
   11148:	ldr	r2, [r0]
   1114c:	mov	r0, #1
   11150:	bl	10f68 <__printf_chk@plt>
   11154:	movw	r1, #28098	; 0x6dc2
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e48 <dcgettext@plt>
   11168:	movw	r7, #33092	; 0x8144
   1116c:	movt	r7, #2
   11170:	ldr	r1, [r7]
   11174:	bl	10dc4 <fputs_unlocked@plt>
   11178:	movw	r1, #28177	; 0x6e11
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	movt	r1, #1
   11188:	bl	10e48 <dcgettext@plt>
   1118c:	ldr	r1, [r7]
   11190:	bl	10dc4 <fputs_unlocked@plt>
   11194:	movw	r1, #28803	; 0x7083
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e48 <dcgettext@plt>
   111a8:	ldr	r1, [r7]
   111ac:	bl	10dc4 <fputs_unlocked@plt>
   111b0:	movw	r1, #28848	; 0x70b0
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	movt	r1, #1
   111c0:	bl	10e48 <dcgettext@plt>
   111c4:	ldr	r1, [r7]
   111c8:	bl	10dc4 <fputs_unlocked@plt>
   111cc:	movw	r0, #29656	; 0x73d8
   111d0:	mov	r2, #48	; 0x30
   111d4:	mov	r6, sp
   111d8:	movw	r5, #28902	; 0x70e6
   111dc:	movt	r0, #1
   111e0:	movt	r5, #1
   111e4:	add	r1, r0, #32
   111e8:	add	r3, r0, #16
   111ec:	vld1.64	{d18-d19}, [r0], r2
   111f0:	vld1.64	{d16-d17}, [r1]
   111f4:	vld1.64	{d20-d21}, [r3]
   111f8:	add	r1, r6, #32
   111fc:	vldr	d22, [r0]
   11200:	add	r0, r6, #16
   11204:	vst1.64	{d16-d17}, [r1]
   11208:	movw	r1, #28987	; 0x713b
   1120c:	vst1.64	{d20-d21}, [r0]
   11210:	mov	r0, r6
   11214:	vst1.64	{d18-d19}, [r0], r2
   11218:	movt	r1, #1
   1121c:	vstr	d22, [r0]
   11220:	mov	r0, r5
   11224:	bl	10ddc <strcmp@plt>
   11228:	cmp	r0, #0
   1122c:	ldrne	r1, [r6, #8]!
   11230:	cmpne	r1, #0
   11234:	bne	11220 <__mempcpy_chk@plt+0x210>
   11238:	ldr	r6, [r6, #4]
   1123c:	movw	r1, #29082	; 0x719a
   11240:	mov	r0, #0
   11244:	mov	r2, #5
   11248:	movt	r1, #1
   1124c:	bl	10e48 <dcgettext@plt>
   11250:	movw	r2, #28943	; 0x710f
   11254:	movw	r3, #29105	; 0x71b1
   11258:	mov	r1, r0
   1125c:	mov	r0, #1
   11260:	movt	r2, #1
   11264:	movt	r3, #1
   11268:	bl	10f68 <__printf_chk@plt>
   1126c:	cmp	r6, #0
   11270:	mov	r0, #5
   11274:	mov	r1, #0
   11278:	moveq	r6, r5
   1127c:	bl	10fb0 <setlocale@plt>
   11280:	cmp	r0, #0
   11284:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   11288:	movw	r1, #29145	; 0x71d9
   1128c:	mov	r2, #3
   11290:	movt	r1, #1
   11294:	bl	10fec <strncmp@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   112a0:	movw	r1, #29149	; 0x71dd
   112a4:	mov	r0, #0
   112a8:	mov	r2, #5
   112ac:	movt	r1, #1
   112b0:	bl	10e48 <dcgettext@plt>
   112b4:	ldr	r1, [r7]
   112b8:	bl	10dc4 <fputs_unlocked@plt>
   112bc:	movw	r1, #29220	; 0x7224
   112c0:	mov	r0, #0
   112c4:	mov	r2, #5
   112c8:	movt	r1, #1
   112cc:	bl	10e48 <dcgettext@plt>
   112d0:	movw	r2, #29105	; 0x71b1
   112d4:	mov	r1, r0
   112d8:	mov	r0, #1
   112dc:	mov	r3, r5
   112e0:	movt	r2, #1
   112e4:	bl	10f68 <__printf_chk@plt>
   112e8:	movw	r1, #29247	; 0x723f
   112ec:	mov	r0, #0
   112f0:	mov	r2, #5
   112f4:	movt	r1, #1
   112f8:	bl	10e48 <dcgettext@plt>
   112fc:	movw	r3, #28176	; 0x6e10
   11300:	mov	r1, r0
   11304:	movw	r0, #29015	; 0x7157
   11308:	cmp	r6, r5
   1130c:	mov	r2, r6
   11310:	movt	r0, #1
   11314:	movt	r3, #1
   11318:	moveq	r3, r0
   1131c:	mov	r0, #1
   11320:	bl	10f68 <__printf_chk@plt>
   11324:	mov	r0, r4
   11328:	bl	10f2c <exit@plt>
   1132c:	movw	r0, #33088	; 0x8140
   11330:	movw	r1, #28028	; 0x6d7c
   11334:	mov	r2, #5
   11338:	movt	r0, #2
   1133c:	movt	r1, #1
   11340:	ldr	r5, [r0]
   11344:	mov	r0, #0
   11348:	bl	10e48 <dcgettext@plt>
   1134c:	mov	r2, r0
   11350:	movw	r0, #33124	; 0x8164
   11354:	mov	r1, #1
   11358:	movt	r0, #2
   1135c:	ldr	r3, [r0]
   11360:	mov	r0, r5
   11364:	bl	10f80 <__fprintf_chk@plt>
   11368:	mov	r0, r4
   1136c:	bl	10f2c <exit@plt>
   11370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	add	fp, sp, #28
   11378:	sub	sp, sp, #132	; 0x84
   1137c:	mov	r7, r0
   11380:	ldr	r0, [r1]
   11384:	mov	r5, r1
   11388:	bl	13b28 <__mempcpy_chk@plt+0x2b18>
   1138c:	movw	r1, #28176	; 0x6e10
   11390:	mov	r0, #6
   11394:	movt	r1, #1
   11398:	bl	10fb0 <setlocale@plt>
   1139c:	movw	r4, #28947	; 0x7113
   113a0:	movw	r1, #28911	; 0x70ef
   113a4:	movt	r4, #1
   113a8:	movt	r1, #1
   113ac:	mov	r0, r4
   113b0:	bl	10fd4 <bindtextdomain@plt>
   113b4:	mov	r0, r4
   113b8:	bl	10e60 <textdomain@plt>
   113bc:	movw	r0, #9708	; 0x25ec
   113c0:	movt	r0, #1
   113c4:	bl	16d54 <__mempcpy_chk@plt+0x5d44>
   113c8:	mov	r1, r5
   113cc:	movw	r5, #28935	; 0x7107
   113d0:	movw	r4, #29448	; 0x7308
   113d4:	mov	r0, #1
   113d8:	mov	sl, #0
   113dc:	mov	r6, #0
   113e0:	mov	r8, #0
   113e4:	movt	r5, #1
   113e8:	movt	r4, #1
   113ec:	str	r0, [sp, #20]
   113f0:	str	r1, [sp, #16]
   113f4:	b	11400 <__mempcpy_chk@plt+0x3f0>
   113f8:	ldr	r1, [sp, #16]
   113fc:	mov	r7, r9
   11400:	mov	r0, r7
   11404:	mov	r2, r5
   11408:	mov	r3, r4
   1140c:	str	sl, [sp]
   11410:	mov	r9, r7
   11414:	bl	10f08 <getopt_long@plt>
   11418:	cmp	r0, #75	; 0x4b
   1141c:	ble	115a8 <__mempcpy_chk@plt+0x598>
   11420:	sub	r1, r0, #76	; 0x4c
   11424:	cmp	r1, #46	; 0x2e
   11428:	bhi	11504 <__mempcpy_chk@plt+0x4f4>
   1142c:	add	r0, pc, #0
   11430:	ldr	pc, [r0, r1, lsl #2]
   11434:	strdeq	r1, [r1], -r0
   11438:	andeq	r1, r1, r8, asr #21
   1143c:	andeq	r1, r1, r8, asr #21
   11440:	andeq	r1, r1, r8, asr #21
   11444:	andeq	r1, r1, r8, lsr r5
   11448:	andeq	r1, r1, r8, asr #21
   1144c:	andeq	r1, r1, r8, asr #21
   11450:	andeq	r1, r1, r8, asr #21
   11454:	andeq	r1, r1, r8, asr #21
   11458:	andeq	r1, r1, r8, asr #21
   1145c:	andeq	r1, r1, r8, asr #21
   11460:	andeq	r1, r1, r8, asr #21
   11464:	andeq	r1, r1, r8, asr #21
   11468:	andeq	r1, r1, r8, asr #21
   1146c:	andeq	r1, r1, r8, asr #21
   11470:	andeq	r1, r1, r8, asr #21
   11474:	andeq	r1, r1, r8, asr #21
   11478:	andeq	r1, r1, r8, asr #21
   1147c:	andeq	r1, r1, r8, asr #21
   11480:	andeq	r1, r1, r8, asr #21
   11484:	andeq	r1, r1, r8, asr #21
   11488:	andeq	r1, r1, r8, asr #21
   1148c:	andeq	r1, r1, r8, asr #21
   11490:	andeq	r1, r1, r8, asr #21
   11494:	andeq	r1, r1, r8, asr #21
   11498:	andeq	r1, r1, ip, lsr #10
   1149c:	andeq	r1, r1, r8, asr #21
   114a0:	andeq	r1, r1, r8, asr #21
   114a4:	andeq	r1, r1, r8, asr #21
   114a8:	andeq	r1, r1, r8, asr #21
   114ac:	andeq	r1, r1, r8, asr #21
   114b0:	andeq	r1, r1, r8, asr #21
   114b4:	andeq	r1, r1, r8, asr #21
   114b8:	andeq	r1, r1, ip, lsl r5
   114bc:	andeq	r1, r1, r8, asr #21
   114c0:	andeq	r1, r1, r8, asr #21
   114c4:	andeq	r1, r1, r8, asr #21
   114c8:	andeq	r1, r1, ip, ror #10
   114cc:	andeq	r1, r1, r8, asr #21
   114d0:	andeq	r1, r1, r0, asr r5
   114d4:	andeq	r1, r1, r8, asr #21
   114d8:	andeq	r1, r1, r8, asr #21
   114dc:	andeq	r1, r1, r8, asr #21
   114e0:	andeq	r1, r1, r8, asr #21
   114e4:	andeq	r1, r1, r8, asr #21
   114e8:	andeq	r1, r1, r8, asr #21
   114ec:	andeq	r1, r1, r8, ror r5
   114f0:	movw	r0, #33104	; 0x8150
   114f4:	mov	r1, #1
   114f8:	movt	r0, #2
   114fc:	strb	r1, [r0]
   11500:	b	1155c <__mempcpy_chk@plt+0x54c>
   11504:	cmp	r0, #256	; 0x100
   11508:	bne	1158c <__mempcpy_chk@plt+0x57c>
   1150c:	movw	r0, #33096	; 0x8148
   11510:	movt	r0, #2
   11514:	ldr	r6, [r0]
   11518:	b	113f8 <__mempcpy_chk@plt+0x3e8>
   1151c:	ldr	r0, [sp, #20]
   11520:	mov	r1, #2
   11524:	bfi	r0, r1, #0, #2
   11528:	b	11564 <__mempcpy_chk@plt+0x554>
   1152c:	ldr	r0, [sp, #20]
   11530:	bic	r0, r0, #3
   11534:	b	11564 <__mempcpy_chk@plt+0x554>
   11538:	movw	r0, #33104	; 0x8150
   1153c:	movt	r0, #2
   11540:	strb	sl, [r0]
   11544:	ldr	r0, [sp, #20]
   11548:	bic	r0, r0, #4
   1154c:	b	11564 <__mempcpy_chk@plt+0x554>
   11550:	movw	r0, #33104	; 0x8150
   11554:	movt	r0, #2
   11558:	strb	sl, [r0]
   1155c:	ldr	r0, [sp, #20]
   11560:	orr	r0, r0, #4
   11564:	str	r0, [sp, #20]
   11568:	b	113f8 <__mempcpy_chk@plt+0x3e8>
   1156c:	movw	r0, #33105	; 0x8151
   11570:	movt	r0, #2
   11574:	b	11580 <__mempcpy_chk@plt+0x570>
   11578:	movw	r0, #33106	; 0x8152
   1157c:	movt	r0, #2
   11580:	mov	r1, #1
   11584:	strb	r1, [r0]
   11588:	b	113f8 <__mempcpy_chk@plt+0x3e8>
   1158c:	movw	r1, #257	; 0x101
   11590:	cmp	r0, r1
   11594:	bne	11ac8 <__mempcpy_chk@plt+0xab8>
   11598:	movw	r0, #33096	; 0x8148
   1159c:	movt	r0, #2
   115a0:	ldr	r8, [r0]
   115a4:	b	113f8 <__mempcpy_chk@plt+0x3e8>
   115a8:	cmn	r0, #1
   115ac:	bne	11a3c <__mempcpy_chk@plt+0xa2c>
   115b0:	movw	r0, #33080	; 0x8138
   115b4:	movt	r0, #2
   115b8:	ldr	r0, [r0]
   115bc:	cmp	r0, r9
   115c0:	bge	11a9c <__mempcpy_chk@plt+0xa8c>
   115c4:	ldr	r0, [sp, #20]
   115c8:	cmp	r8, #0
   115cc:	mov	r4, r8
   115d0:	mov	sl, r9
   115d4:	moveq	r4, r6
   115d8:	cmp	r6, #0
   115dc:	movne	r4, r6
   115e0:	cmp	r4, #0
   115e4:	and	r6, r0, #3
   115e8:	beq	11680 <__mempcpy_chk@plt+0x670>
   115ec:	ldr	r1, [sp, #20]
   115f0:	mov	r0, r4
   115f4:	bl	11eec <__mempcpy_chk@plt+0xedc>
   115f8:	mov	r5, r0
   115fc:	movw	r0, #33104	; 0x8150
   11600:	movt	r0, #2
   11604:	ldrb	r0, [r0]
   11608:	cmp	r0, #1
   1160c:	bne	11638 <__mempcpy_chk@plt+0x628>
   11610:	cmp	r5, #0
   11614:	beq	11638 <__mempcpy_chk@plt+0x628>
   11618:	ldr	r0, [sp, #20]
   1161c:	bic	r1, r0, #4
   11620:	mov	r0, r5
   11624:	bl	11eec <__mempcpy_chk@plt+0xedc>
   11628:	mov	r7, r0
   1162c:	mov	r0, r5
   11630:	bl	1279c <__mempcpy_chk@plt+0x178c>
   11634:	b	1163c <__mempcpy_chk@plt+0x62c>
   11638:	mov	r7, r5
   1163c:	movw	r0, #33108	; 0x8154
   11640:	cmp	r7, #0
   11644:	movt	r0, #2
   11648:	str	r7, [r0]
   1164c:	beq	11ad0 <__mempcpy_chk@plt+0xac0>
   11650:	cmp	r6, #0
   11654:	bne	11680 <__mempcpy_chk@plt+0x670>
   11658:	add	r2, sp, #24
   1165c:	mov	r0, #3
   11660:	mov	r1, r7
   11664:	bl	10fe0 <__xstat64@plt>
   11668:	cmp	r0, #0
   1166c:	bne	11b00 <__mempcpy_chk@plt+0xaf0>
   11670:	ldr	r0, [sp, #40]	; 0x28
   11674:	and	r0, r0, #61440	; 0xf000
   11678:	cmp	r0, #16384	; 0x4000
   1167c:	bne	11b40 <__mempcpy_chk@plt+0xb30>
   11680:	cmp	r8, r4
   11684:	beq	11710 <__mempcpy_chk@plt+0x700>
   11688:	cmp	r8, #0
   1168c:	beq	11814 <__mempcpy_chk@plt+0x804>
   11690:	ldr	r1, [sp, #20]
   11694:	mov	r0, r8
   11698:	bl	11eec <__mempcpy_chk@plt+0xedc>
   1169c:	mov	r5, r0
   116a0:	movw	r0, #33104	; 0x8150
   116a4:	movt	r0, #2
   116a8:	ldrb	r0, [r0]
   116ac:	cmp	r0, #1
   116b0:	bne	11720 <__mempcpy_chk@plt+0x710>
   116b4:	cmp	r5, #0
   116b8:	beq	11720 <__mempcpy_chk@plt+0x710>
   116bc:	ldr	r0, [sp, #20]
   116c0:	bic	r1, r0, #4
   116c4:	mov	r0, r5
   116c8:	bl	11eec <__mempcpy_chk@plt+0xedc>
   116cc:	mov	r4, r0
   116d0:	mov	r0, r5
   116d4:	bl	1279c <__mempcpy_chk@plt+0x178c>
   116d8:	cmp	r4, #0
   116dc:	bne	1172c <__mempcpy_chk@plt+0x71c>
   116e0:	bl	10f44 <__errno_location@plt>
   116e4:	ldr	r4, [r0]
   116e8:	mov	r0, #0
   116ec:	mov	r1, #3
   116f0:	mov	r2, r8
   116f4:	bl	154b0 <__mempcpy_chk@plt+0x44a0>
   116f8:	movw	r2, #29772	; 0x744c
   116fc:	mov	r3, r0
   11700:	mov	r0, #1
   11704:	mov	r1, r4
   11708:	movt	r2, #1
   1170c:	bl	10ecc <error@plt>
   11710:	movw	r0, #33108	; 0x8154
   11714:	movt	r0, #2
   11718:	ldr	r0, [r0]
   1171c:	b	11808 <__mempcpy_chk@plt+0x7f8>
   11720:	mov	r4, r5
   11724:	cmp	r4, #0
   11728:	beq	116e0 <__mempcpy_chk@plt+0x6d0>
   1172c:	cmp	r6, #0
   11730:	bne	1175c <__mempcpy_chk@plt+0x74c>
   11734:	add	r2, sp, #24
   11738:	mov	r0, #3
   1173c:	mov	r1, r4
   11740:	bl	10fe0 <__xstat64@plt>
   11744:	cmp	r0, #0
   11748:	bne	11b50 <__mempcpy_chk@plt+0xb40>
   1174c:	ldr	r0, [sp, #40]	; 0x28
   11750:	and	r0, r0, #61440	; 0xf000
   11754:	cmp	r0, #16384	; 0x4000
   11758:	bne	11b90 <__mempcpy_chk@plt+0xb80>
   1175c:	movw	r5, #33108	; 0x8154
   11760:	ldrb	r0, [r4, #1]
   11764:	movt	r5, #2
   11768:	ldr	r3, [r5]
   1176c:	cmp	r0, #0
   11770:	beq	11790 <__mempcpy_chk@plt+0x780>
   11774:	cmp	r0, #47	; 0x2f
   11778:	bne	117a0 <__mempcpy_chk@plt+0x790>
   1177c:	ldrb	r2, [r4, #2]
   11780:	ldrb	r1, [r3, #1]
   11784:	cmp	r2, #0
   11788:	bne	117a4 <__mempcpy_chk@plt+0x794>
   1178c:	b	117dc <__mempcpy_chk@plt+0x7cc>
   11790:	ldrb	r0, [r3, #1]
   11794:	cmp	r0, #47	; 0x2f
   11798:	bne	117e4 <__mempcpy_chk@plt+0x7d4>
   1179c:	b	117f4 <__mempcpy_chk@plt+0x7e4>
   117a0:	ldrb	r1, [r3, #1]
   117a4:	add	r2, r4, #2
   117a8:	add	r3, r3, #2
   117ac:	tst	r1, #255	; 0xff
   117b0:	beq	117f4 <__mempcpy_chk@plt+0x7e4>
   117b4:	uxtb	r1, r1
   117b8:	uxtb	r0, r0
   117bc:	cmp	r0, r1
   117c0:	bne	117f4 <__mempcpy_chk@plt+0x7e4>
   117c4:	ldrb	r0, [r2], #1
   117c8:	ldrb	r1, [r3], #1
   117cc:	cmp	r0, #0
   117d0:	bne	117ac <__mempcpy_chk@plt+0x79c>
   117d4:	cmp	r1, #0
   117d8:	beq	117e4 <__mempcpy_chk@plt+0x7d4>
   117dc:	cmp	r1, #47	; 0x2f
   117e0:	bne	117f4 <__mempcpy_chk@plt+0x7e4>
   117e4:	movw	r0, #33112	; 0x8158
   117e8:	movt	r0, #2
   117ec:	str	r4, [r0]
   117f0:	b	11814 <__mempcpy_chk@plt+0x804>
   117f4:	mov	r0, r4
   117f8:	bl	1279c <__mempcpy_chk@plt+0x178c>
   117fc:	ldr	r0, [r5]
   11800:	mov	r1, #0
   11804:	str	r1, [r5]
   11808:	movw	r1, #33112	; 0x8158
   1180c:	movt	r1, #2
   11810:	str	r0, [r1]
   11814:	movw	r0, #33080	; 0x8138
   11818:	movt	r0, #2
   1181c:	ldr	r1, [r0]
   11820:	mov	r0, #0
   11824:	cmp	r1, sl
   11828:	bge	11a34 <__mempcpy_chk@plt+0xa24>
   1182c:	ldr	r0, [sp, #20]
   11830:	movw	r6, #33092	; 0x8144
   11834:	mov	sl, #1
   11838:	movt	r6, #2
   1183c:	bic	r0, r0, #4
   11840:	str	r0, [sp, #12]
   11844:	b	11850 <__mempcpy_chk@plt+0x840>
   11848:	bl	10fa4 <__overflow@plt>
   1184c:	b	11a00 <__mempcpy_chk@plt+0x9f0>
   11850:	ldr	r0, [sp, #16]
   11854:	ldr	r5, [r0, r1, lsl #2]
   11858:	ldr	r1, [sp, #20]
   1185c:	mov	r0, r5
   11860:	bl	11eec <__mempcpy_chk@plt+0xedc>
   11864:	mov	r4, r0
   11868:	movw	r0, #33104	; 0x8150
   1186c:	movt	r0, #2
   11870:	ldrb	r0, [r0]
   11874:	cmp	r0, #1
   11878:	bne	118f4 <__mempcpy_chk@plt+0x8e4>
   1187c:	cmp	r4, #0
   11880:	beq	118f4 <__mempcpy_chk@plt+0x8e4>
   11884:	ldr	r1, [sp, #12]
   11888:	mov	r0, r4
   1188c:	bl	11eec <__mempcpy_chk@plt+0xedc>
   11890:	mov	r8, r0
   11894:	mov	r0, r4
   11898:	bl	1279c <__mempcpy_chk@plt+0x178c>
   1189c:	cmp	r8, #0
   118a0:	bne	11900 <__mempcpy_chk@plt+0x8f0>
   118a4:	movw	r0, #33105	; 0x8151
   118a8:	mov	r7, #0
   118ac:	movt	r0, #2
   118b0:	ldrb	r0, [r0]
   118b4:	cmp	r0, #0
   118b8:	bne	11a0c <__mempcpy_chk@plt+0x9fc>
   118bc:	bl	10f44 <__errno_location@plt>
   118c0:	ldr	r4, [r0]
   118c4:	mov	r0, #0
   118c8:	mov	r1, #3
   118cc:	mov	r2, r5
   118d0:	mov	r7, #0
   118d4:	bl	154b0 <__mempcpy_chk@plt+0x44a0>
   118d8:	movw	r2, #29772	; 0x744c
   118dc:	mov	r3, r0
   118e0:	mov	r0, #0
   118e4:	mov	r1, r4
   118e8:	movt	r2, #1
   118ec:	bl	10ecc <error@plt>
   118f0:	b	11a0c <__mempcpy_chk@plt+0x9fc>
   118f4:	mov	r8, r4
   118f8:	cmp	r8, #0
   118fc:	beq	118a4 <__mempcpy_chk@plt+0x894>
   11900:	movw	r0, #33108	; 0x8154
   11904:	movt	r0, #2
   11908:	ldr	r1, [r0]
   1190c:	cmp	r1, #0
   11910:	beq	119bc <__mempcpy_chk@plt+0x9ac>
   11914:	movw	r0, #33112	; 0x8158
   11918:	movt	r0, #2
   1191c:	ldr	r3, [r0]
   11920:	cmp	r3, #0
   11924:	beq	119a4 <__mempcpy_chk@plt+0x994>
   11928:	ldrb	r0, [r3, #1]
   1192c:	cmp	r0, #0
   11930:	beq	11950 <__mempcpy_chk@plt+0x940>
   11934:	cmp	r0, #47	; 0x2f
   11938:	bne	11960 <__mempcpy_chk@plt+0x950>
   1193c:	ldrb	r7, [r3, #2]
   11940:	ldrb	r2, [r8, #1]
   11944:	cmp	r7, #0
   11948:	bne	11964 <__mempcpy_chk@plt+0x954>
   1194c:	b	1199c <__mempcpy_chk@plt+0x98c>
   11950:	ldrb	r0, [r8, #1]
   11954:	cmp	r0, #47	; 0x2f
   11958:	bne	119a4 <__mempcpy_chk@plt+0x994>
   1195c:	b	119bc <__mempcpy_chk@plt+0x9ac>
   11960:	ldrb	r2, [r8, #1]
   11964:	add	r3, r3, #2
   11968:	add	r5, r8, #2
   1196c:	tst	r2, #255	; 0xff
   11970:	beq	119bc <__mempcpy_chk@plt+0x9ac>
   11974:	uxtb	r2, r2
   11978:	uxtb	r0, r0
   1197c:	cmp	r0, r2
   11980:	bne	119bc <__mempcpy_chk@plt+0x9ac>
   11984:	ldrb	r0, [r3], #1
   11988:	ldrb	r2, [r5], #1
   1198c:	cmp	r0, #0
   11990:	bne	1196c <__mempcpy_chk@plt+0x95c>
   11994:	cmp	r2, #0
   11998:	beq	119a4 <__mempcpy_chk@plt+0x994>
   1199c:	cmp	r2, #47	; 0x2f
   119a0:	bne	119bc <__mempcpy_chk@plt+0x9ac>
   119a4:	mov	r0, r8
   119a8:	mov	r2, #0
   119ac:	mov	r3, #0
   119b0:	bl	11bb8 <__mempcpy_chk@plt+0xba8>
   119b4:	cmp	r0, #0
   119b8:	bne	119c8 <__mempcpy_chk@plt+0x9b8>
   119bc:	ldr	r1, [r6]
   119c0:	mov	r0, r8
   119c4:	bl	10dc4 <fputs_unlocked@plt>
   119c8:	movw	r0, #33106	; 0x8152
   119cc:	mov	r1, #10
   119d0:	movt	r0, #2
   119d4:	ldrb	r0, [r0]
   119d8:	cmp	r0, #0
   119dc:	ldr	r0, [r6]
   119e0:	movwne	r1, #0
   119e4:	ldr	r2, [r0, #20]
   119e8:	ldr	r3, [r0, #24]
   119ec:	cmp	r2, r3
   119f0:	bcs	11848 <__mempcpy_chk@plt+0x838>
   119f4:	add	r3, r2, #1
   119f8:	str	r3, [r0, #20]
   119fc:	strb	r1, [r2]
   11a00:	mov	r0, r8
   11a04:	bl	1279c <__mempcpy_chk@plt+0x178c>
   11a08:	mov	r7, #1
   11a0c:	movw	r0, #33080	; 0x8138
   11a10:	and	sl, sl, r7
   11a14:	movt	r0, #2
   11a18:	mov	r2, r0
   11a1c:	ldr	r0, [r0]
   11a20:	add	r1, r0, #1
   11a24:	cmp	r1, r9
   11a28:	str	r1, [r2]
   11a2c:	blt	11850 <__mempcpy_chk@plt+0x840>
   11a30:	eor	r0, sl, #1
   11a34:	sub	sp, fp, #28
   11a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a3c:	cmn	r0, #3
   11a40:	bne	11a8c <__mempcpy_chk@plt+0xa7c>
   11a44:	movw	r0, #33000	; 0x80e8
   11a48:	movw	r2, #28957	; 0x711d
   11a4c:	mov	r1, #0
   11a50:	movt	r0, #2
   11a54:	movt	r2, #1
   11a58:	str	r1, [sp, #4]
   11a5c:	movw	r1, #28902	; 0x70e6
   11a60:	ldr	r3, [r0]
   11a64:	movw	r0, #33092	; 0x8144
   11a68:	str	r2, [sp]
   11a6c:	movw	r2, #28943	; 0x710f
   11a70:	movt	r1, #1
   11a74:	movt	r0, #2
   11a78:	movt	r2, #1
   11a7c:	ldr	r0, [r0]
   11a80:	bl	15e94 <__mempcpy_chk@plt+0x4e84>
   11a84:	mov	r0, #0
   11a88:	bl	10f2c <exit@plt>
   11a8c:	cmn	r0, #2
   11a90:	bne	11ac8 <__mempcpy_chk@plt+0xab8>
   11a94:	mov	r0, #0
   11a98:	bl	11110 <__mempcpy_chk@plt+0x100>
   11a9c:	movw	r1, #28971	; 0x712b
   11aa0:	mov	r0, #0
   11aa4:	mov	r2, #5
   11aa8:	movt	r1, #1
   11aac:	bl	10e48 <dcgettext@plt>
   11ab0:	mov	r2, r0
   11ab4:	mov	r0, #0
   11ab8:	mov	r1, #0
   11abc:	bl	10ecc <error@plt>
   11ac0:	mov	r0, #1
   11ac4:	bl	11110 <__mempcpy_chk@plt+0x100>
   11ac8:	mov	r0, #1
   11acc:	bl	11110 <__mempcpy_chk@plt+0x100>
   11ad0:	bl	10f44 <__errno_location@plt>
   11ad4:	ldr	r5, [r0]
   11ad8:	mov	r0, #0
   11adc:	mov	r1, #3
   11ae0:	mov	r2, r4
   11ae4:	bl	154b0 <__mempcpy_chk@plt+0x44a0>
   11ae8:	movw	r2, #29772	; 0x744c
   11aec:	mov	r3, r0
   11af0:	mov	r0, #1
   11af4:	mov	r1, r5
   11af8:	movt	r2, #1
   11afc:	bl	10ecc <error@plt>
   11b00:	bl	10f44 <__errno_location@plt>
   11b04:	ldr	r4, [r0]
   11b08:	movw	r1, #29426	; 0x72f2
   11b0c:	mov	r0, #0
   11b10:	mov	r2, #5
   11b14:	movt	r1, #1
   11b18:	bl	10e48 <dcgettext@plt>
   11b1c:	mov	r5, r0
   11b20:	mov	r0, #4
   11b24:	mov	r1, r7
   11b28:	bl	15234 <__mempcpy_chk@plt+0x4224>
   11b2c:	mov	r3, r0
   11b30:	mov	r0, #1
   11b34:	mov	r1, r4
   11b38:	mov	r2, r5
   11b3c:	bl	10ecc <error@plt>
   11b40:	mov	r0, #0
   11b44:	mov	r1, #3
   11b48:	mov	r2, r4
   11b4c:	b	11b9c <__mempcpy_chk@plt+0xb8c>
   11b50:	bl	10f44 <__errno_location@plt>
   11b54:	ldr	r5, [r0]
   11b58:	movw	r1, #29426	; 0x72f2
   11b5c:	mov	r0, #0
   11b60:	mov	r2, #5
   11b64:	movt	r1, #1
   11b68:	bl	10e48 <dcgettext@plt>
   11b6c:	mov	r6, r0
   11b70:	mov	r0, #4
   11b74:	mov	r1, r4
   11b78:	bl	15234 <__mempcpy_chk@plt+0x4224>
   11b7c:	mov	r3, r0
   11b80:	mov	r0, #1
   11b84:	mov	r1, r5
   11b88:	mov	r2, r6
   11b8c:	bl	10ecc <error@plt>
   11b90:	mov	r0, #0
   11b94:	mov	r1, #3
   11b98:	mov	r2, r8
   11b9c:	bl	154b0 <__mempcpy_chk@plt+0x44a0>
   11ba0:	movw	r2, #29772	; 0x744c
   11ba4:	mov	r3, r0
   11ba8:	mov	r0, #1
   11bac:	mov	r1, #20
   11bb0:	movt	r2, #1
   11bb4:	bl	10ecc <error@plt>
   11bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bbc:	add	fp, sp, #28
   11bc0:	sub	sp, sp, #4
   11bc4:	mov	r7, r1
   11bc8:	ldrb	r1, [r1, #1]
   11bcc:	mov	r6, r0
   11bd0:	ldrb	r0, [r0, #1]
   11bd4:	mov	r4, #0
   11bd8:	sub	r0, r0, #47	; 0x2f
   11bdc:	sub	r1, r1, #47	; 0x2f
   11be0:	clz	r0, r0
   11be4:	clz	r1, r1
   11be8:	lsr	r0, r0, #5
   11bec:	lsr	r1, r1, #5
   11bf0:	teq	r1, r0
   11bf4:	bne	11ee0 <__mempcpy_chk@plt+0xed0>
   11bf8:	mov	sl, r3
   11bfc:	ldrb	r3, [r7]
   11c00:	ldrb	r1, [r6]
   11c04:	mov	r8, r2
   11c08:	cmp	r3, #0
   11c0c:	beq	11c5c <__mempcpy_chk@plt+0xc4c>
   11c10:	mov	r0, #0
   11c14:	mov	r2, #1
   11c18:	tst	r1, #255	; 0xff
   11c1c:	beq	11c84 <__mempcpy_chk@plt+0xc74>
   11c20:	uxtb	r4, r1
   11c24:	uxtb	r5, r3
   11c28:	cmp	r5, r4
   11c2c:	bne	11c84 <__mempcpy_chk@plt+0xc74>
   11c30:	ldrb	r3, [r7, r2]
   11c34:	ldrb	r1, [r6, r2]
   11c38:	cmp	r4, #47	; 0x2f
   11c3c:	moveq	r0, r2
   11c40:	add	r2, r2, #1
   11c44:	cmp	r3, #0
   11c48:	bne	11c18 <__mempcpy_chk@plt+0xc08>
   11c4c:	sub	r2, r2, #1
   11c50:	cmp	r1, #0
   11c54:	bne	11c6c <__mempcpy_chk@plt+0xc5c>
   11c58:	b	11e24 <__mempcpy_chk@plt+0xe14>
   11c5c:	mov	r2, #0
   11c60:	mov	r0, #0
   11c64:	cmp	r1, #0
   11c68:	beq	11e24 <__mempcpy_chk@plt+0xe14>
   11c6c:	cmp	r1, #47	; 0x2f
   11c70:	moveq	r0, r2
   11c74:	cmp	r0, #0
   11c78:	bne	11c9c <__mempcpy_chk@plt+0xc8c>
   11c7c:	mov	r4, #0
   11c80:	b	11ee0 <__mempcpy_chk@plt+0xed0>
   11c84:	tst	r1, #255	; 0xff
   11c88:	uxtbeq	r1, r3
   11c8c:	cmpeq	r1, #47	; 0x2f
   11c90:	beq	11e20 <__mempcpy_chk@plt+0xe10>
   11c94:	cmp	r0, #0
   11c98:	beq	11c7c <__mempcpy_chk@plt+0xc6c>
   11c9c:	ldrb	r1, [r6, r0]!
   11ca0:	ldrb	r0, [r7, r0]!
   11ca4:	cmp	r1, #47	; 0x2f
   11ca8:	mov	r5, r6
   11cac:	sub	r1, r1, #47	; 0x2f
   11cb0:	addeq	r5, r5, #1
   11cb4:	cmp	r0, #47	; 0x2f
   11cb8:	clz	r1, r1
   11cbc:	addeq	r7, r7, #1
   11cc0:	lsr	r1, r1, #5
   11cc4:	ldrb	r0, [r7]
   11cc8:	cmp	r0, #0
   11ccc:	beq	11d00 <__mempcpy_chk@plt+0xcf0>
   11cd0:	cmp	r8, #0
   11cd4:	str	r1, [sp]
   11cd8:	beq	11d40 <__mempcpy_chk@plt+0xd30>
   11cdc:	mov	r4, #1
   11ce0:	cmp	sl, #3
   11ce4:	bcc	11d60 <__mempcpy_chk@plt+0xd50>
   11ce8:	movw	r0, #11822	; 0x2e2e
   11cec:	mov	r4, #0
   11cf0:	sub	sl, sl, #2
   11cf4:	strh	r0, [r8]
   11cf8:	strb	r4, [r8, #2]!
   11cfc:	b	11d60 <__mempcpy_chk@plt+0xd50>
   11d00:	ldrb	r0, [r6, r1]
   11d04:	movw	r1, #29714	; 0x7412
   11d08:	movt	r1, #1
   11d0c:	cmp	r0, #0
   11d10:	moveq	r5, r1
   11d14:	cmp	r8, #0
   11d18:	beq	11e34 <__mempcpy_chk@plt+0xe24>
   11d1c:	mov	r0, r5
   11d20:	bl	10f38 <strlen@plt>
   11d24:	cmp	r0, sl
   11d28:	bcs	11ea8 <__mempcpy_chk@plt+0xe98>
   11d2c:	add	r2, r0, #1
   11d30:	mov	r0, r8
   11d34:	mov	r1, r5
   11d38:	bl	10e24 <memcpy@plt>
   11d3c:	b	11edc <__mempcpy_chk@plt+0xecc>
   11d40:	movw	r0, #33092	; 0x8144
   11d44:	movt	r0, #2
   11d48:	ldr	r1, [r0]
   11d4c:	movw	r0, #29713	; 0x7411
   11d50:	movt	r0, #1
   11d54:	bl	10dc4 <fputs_unlocked@plt>
   11d58:	mov	r8, #0
   11d5c:	mov	r4, #0
   11d60:	movw	r9, #29712	; 0x7410
   11d64:	movt	r9, #1
   11d68:	b	11d70 <__mempcpy_chk@plt+0xd60>
   11d6c:	add	r7, r7, #1
   11d70:	ldrb	r0, [r7]
   11d74:	cmp	r0, #47	; 0x2f
   11d78:	beq	11d88 <__mempcpy_chk@plt+0xd78>
   11d7c:	cmp	r0, #0
   11d80:	bne	11d6c <__mempcpy_chk@plt+0xd5c>
   11d84:	b	11dd8 <__mempcpy_chk@plt+0xdc8>
   11d88:	cmp	r8, #0
   11d8c:	beq	11db0 <__mempcpy_chk@plt+0xda0>
   11d90:	mov	r0, #1
   11d94:	cmp	sl, #4
   11d98:	bcc	11dcc <__mempcpy_chk@plt+0xdbc>
   11d9c:	movw	r0, #11823	; 0x2e2f
   11da0:	sub	sl, sl, #3
   11da4:	movt	r0, #46	; 0x2e
   11da8:	str	r0, [r8], #3
   11dac:	b	11dc8 <__mempcpy_chk@plt+0xdb8>
   11db0:	movw	r0, #33092	; 0x8144
   11db4:	movt	r0, #2
   11db8:	ldr	r1, [r0]
   11dbc:	mov	r0, r9
   11dc0:	bl	10dc4 <fputs_unlocked@plt>
   11dc4:	mov	r8, #0
   11dc8:	mov	r0, #0
   11dcc:	and	r1, r4, #1
   11dd0:	orr	r4, r0, r1
   11dd4:	b	11d6c <__mempcpy_chk@plt+0xd5c>
   11dd8:	ldr	r0, [sp]
   11ddc:	ldrb	r0, [r6, r0]
   11de0:	and	r6, r4, #1
   11de4:	cmp	r0, #0
   11de8:	beq	11e10 <__mempcpy_chk@plt+0xe00>
   11dec:	cmp	r8, #0
   11df0:	beq	11e4c <__mempcpy_chk@plt+0xe3c>
   11df4:	mov	r4, #1
   11df8:	cmp	sl, #1
   11dfc:	bls	11e78 <__mempcpy_chk@plt+0xe68>
   11e00:	mov	r0, #47	; 0x2f
   11e04:	sub	sl, sl, #1
   11e08:	strh	r0, [r8], #1
   11e0c:	b	11e7c <__mempcpy_chk@plt+0xe6c>
   11e10:	mov	r4, #1
   11e14:	cmp	r6, #0
   11e18:	bne	11ea8 <__mempcpy_chk@plt+0xe98>
   11e1c:	b	11ee0 <__mempcpy_chk@plt+0xed0>
   11e20:	sub	r2, r2, #1
   11e24:	mov	r0, r2
   11e28:	cmp	r0, #0
   11e2c:	bne	11c9c <__mempcpy_chk@plt+0xc8c>
   11e30:	b	11c7c <__mempcpy_chk@plt+0xc6c>
   11e34:	movw	r0, #33092	; 0x8144
   11e38:	movt	r0, #2
   11e3c:	ldr	r1, [r0]
   11e40:	mov	r0, r5
   11e44:	bl	10dc4 <fputs_unlocked@plt>
   11e48:	b	11edc <__mempcpy_chk@plt+0xecc>
   11e4c:	movw	r0, #33092	; 0x8144
   11e50:	movt	r0, #2
   11e54:	ldr	r1, [r0]
   11e58:	mov	r4, r0
   11e5c:	movw	r0, #30887	; 0x78a7
   11e60:	movt	r0, #1
   11e64:	bl	10dc4 <fputs_unlocked@plt>
   11e68:	ldr	r1, [r4]
   11e6c:	mov	r0, r5
   11e70:	bl	10dc4 <fputs_unlocked@plt>
   11e74:	b	11e9c <__mempcpy_chk@plt+0xe8c>
   11e78:	mov	r6, #1
   11e7c:	mov	r0, r5
   11e80:	bl	10f38 <strlen@plt>
   11e84:	cmp	r0, sl
   11e88:	bcs	11ea0 <__mempcpy_chk@plt+0xe90>
   11e8c:	add	r2, r0, #1
   11e90:	mov	r0, r8
   11e94:	mov	r1, r5
   11e98:	bl	10e24 <memcpy@plt>
   11e9c:	mov	r4, #0
   11ea0:	orrs	r0, r4, r6
   11ea4:	beq	11edc <__mempcpy_chk@plt+0xecc>
   11ea8:	movw	r1, #29716	; 0x7414
   11eac:	mov	r0, #0
   11eb0:	mov	r2, #5
   11eb4:	mov	r4, #0
   11eb8:	movt	r1, #1
   11ebc:	bl	10e48 <dcgettext@plt>
   11ec0:	movw	r2, #29772	; 0x744c
   11ec4:	mov	r3, r0
   11ec8:	mov	r0, #0
   11ecc:	mov	r1, #36	; 0x24
   11ed0:	movt	r2, #1
   11ed4:	bl	10ecc <error@plt>
   11ed8:	b	11ee0 <__mempcpy_chk@plt+0xed0>
   11edc:	mov	r4, #1
   11ee0:	mov	r0, r4
   11ee4:	sub	sp, fp, #28
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ef0:	add	fp, sp, #28
   11ef4:	sub	sp, sp, #180	; 0xb4
   11ef8:	sub	sp, sp, #3072	; 0xc00
   11efc:	mov	r8, r0
   11f00:	and	r7, r1, #3
   11f04:	sub	r0, r1, #1
   11f08:	tst	r0, r7
   11f0c:	beq	11f2c <__mempcpy_chk@plt+0xf1c>
   11f10:	bl	10f44 <__errno_location@plt>
   11f14:	mov	r1, #22
   11f18:	mov	r4, #0
   11f1c:	str	r1, [r0]
   11f20:	mov	r0, r4
   11f24:	sub	sp, fp, #28
   11f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f2c:	cmp	r8, #0
   11f30:	beq	11f10 <__mempcpy_chk@plt+0xf00>
   11f34:	ldrb	r0, [r8]
   11f38:	cmp	r0, #0
   11f3c:	beq	11fb4 <__mempcpy_chk@plt+0xfa4>
   11f40:	sub	lr, fp, #1024	; 0x400
   11f44:	mov	r4, r1
   11f48:	mov	r1, #1024	; 0x400
   11f4c:	cmp	r0, #47	; 0x2f
   11f50:	sub	r2, lr, #40	; 0x28
   11f54:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11f58:	add	r2, r2, #8
   11f5c:	str	r2, [sp, #12]
   11f60:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11f64:	add	r2, sp, #1184	; 0x4a0
   11f68:	add	r2, r2, #8
   11f6c:	str	r2, [sp, #1184]	; 0x4a0
   11f70:	str	r2, [sp, #16]
   11f74:	add	r2, sp, #48	; 0x30
   11f78:	str	r1, [sp, #1188]	; 0x4a4
   11f7c:	add	r5, r2, #8
   11f80:	mov	r0, r5
   11f84:	str	r5, [sp, #48]	; 0x30
   11f88:	str	r1, [sp, #52]	; 0x34
   11f8c:	str	r5, [sp, #8]
   11f90:	bne	11fc0 <__mempcpy_chk@plt+0xfb0>
   11f94:	mov	r1, r8
   11f98:	mov	r2, #0
   11f9c:	mov	r3, #1024	; 0x400
   11fa0:	bl	11010 <__mempcpy_chk@plt>
   11fa4:	mov	r6, r0
   11fa8:	mov	r0, #47	; 0x2f
   11fac:	strb	r0, [r6], #1
   11fb0:	b	11fe0 <__mempcpy_chk@plt+0xfd0>
   11fb4:	bl	10f44 <__errno_location@plt>
   11fb8:	mov	r1, #2
   11fbc:	b	11f18 <__mempcpy_chk@plt+0xf08>
   11fc0:	mov	r1, #1024	; 0x400
   11fc4:	bl	10f20 <getcwd@plt>
   11fc8:	cmp	r0, #0
   11fcc:	beq	124f0 <__mempcpy_chk@plt+0x14e0>
   11fd0:	mov	r0, r5
   11fd4:	mov	r1, #0
   11fd8:	bl	10e6c <rawmemchr@plt>
   11fdc:	mov	r6, r0
   11fe0:	ldrb	r0, [r8]
   11fe4:	cmp	r0, #0
   11fe8:	beq	124b4 <__mempcpy_chk@plt+0x14a4>
   11fec:	and	r1, r4, #4
   11ff0:	add	r9, sp, #48	; 0x30
   11ff4:	str	r7, [sp, #32]
   11ff8:	str	r1, [sp, #40]	; 0x28
   11ffc:	mov	r1, #0
   12000:	str	r1, [sp, #24]
   12004:	mov	r1, #0
   12008:	str	r1, [sp, #36]	; 0x24
   1200c:	mov	r1, #0
   12010:	str	r1, [sp, #20]
   12014:	b	1245c <__mempcpy_chk@plt+0x144c>
   12018:	uxtb	r0, r0
   1201c:	cmp	r0, #46	; 0x2e
   12020:	ldrbeq	r0, [r8, #1]
   12024:	cmpeq	r0, #46	; 0x2e
   12028:	bne	12068 <__mempcpy_chk@plt+0x1058>
   1202c:	add	r0, r5, #1
   12030:	cmp	r6, r0
   12034:	bls	1215c <__mempcpy_chk@plt+0x114c>
   12038:	sub	r0, r6, #1
   1203c:	mov	r6, r0
   12040:	cmp	r0, r5
   12044:	bls	1215c <__mempcpy_chk@plt+0x114c>
   12048:	mov	r0, r6
   1204c:	ldrb	r1, [r0, #-1]!
   12050:	cmp	r1, #47	; 0x2f
   12054:	bne	1203c <__mempcpy_chk@plt+0x102c>
   12058:	b	1215c <__mempcpy_chk@plt+0x114c>
   1205c:	uxtb	r0, r0
   12060:	cmp	r0, #46	; 0x2e
   12064:	beq	1215c <__mempcpy_chk@plt+0x114c>
   12068:	ldrb	r0, [r6, #-1]
   1206c:	add	r4, r2, #2
   12070:	str	r2, [sp, #44]	; 0x2c
   12074:	cmp	r0, #47	; 0x2f
   12078:	movne	r0, #47	; 0x2f
   1207c:	strbne	r0, [r6], #1
   12080:	ldr	r0, [sp, #52]	; 0x34
   12084:	add	r0, r5, r0
   12088:	sub	r0, r0, r6
   1208c:	cmp	r0, r4
   12090:	bcs	120c8 <__mempcpy_chk@plt+0x10b8>
   12094:	mov	r0, r9
   12098:	bl	1596c <__mempcpy_chk@plt+0x495c>
   1209c:	cmp	r0, #0
   120a0:	beq	125b4 <__mempcpy_chk@plt+0x15a4>
   120a4:	sub	r0, r6, r5
   120a8:	ldr	r5, [sp, #48]	; 0x30
   120ac:	ldr	r1, [sp, #52]	; 0x34
   120b0:	add	r6, r5, r0
   120b4:	add	r0, r5, r1
   120b8:	sub	r0, r0, r6
   120bc:	cmp	r0, r4
   120c0:	bcc	12094 <__mempcpy_chk@plt+0x1084>
   120c4:	ldr	r2, [sp, #44]	; 0x2c
   120c8:	mov	r0, r6
   120cc:	mov	r1, r8
   120d0:	mvn	r3, #0
   120d4:	bl	11010 <__mempcpy_chk@plt>
   120d8:	mov	r6, r0
   120dc:	mov	r0, #0
   120e0:	strb	r0, [r6]
   120e4:	ldr	r0, [sp, #40]	; 0x28
   120e8:	cmp	r0, #0
   120ec:	bne	12150 <__mempcpy_chk@plt+0x1140>
   120f0:	ldr	r0, [sp, #1188]	; 0x4a4
   120f4:	ldr	r7, [sp, #1184]	; 0x4a0
   120f8:	sub	r9, r0, #1
   120fc:	mov	r0, r5
   12100:	mov	r1, r7
   12104:	mov	r2, r9
   12108:	bl	10e84 <readlink@plt>
   1210c:	cmp	r0, r9
   12110:	blt	12128 <__mempcpy_chk@plt+0x1118>
   12114:	add	r0, sp, #1184	; 0x4a0
   12118:	bl	158fc <__mempcpy_chk@plt+0x48ec>
   1211c:	cmp	r0, #0
   12120:	bne	120f0 <__mempcpy_chk@plt+0x10e0>
   12124:	b	125b4 <__mempcpy_chk@plt+0x15a4>
   12128:	mov	r4, r0
   1212c:	cmp	r0, #0
   12130:	add	r9, sp, #48	; 0x30
   12134:	blt	12150 <__mempcpy_chk@plt+0x1140>
   12138:	ldr	r0, [sp, #24]
   1213c:	cmp	r0, #19
   12140:	bgt	121e4 <__mempcpy_chk@plt+0x11d4>
   12144:	add	r0, r0, #1
   12148:	str	r0, [sp, #24]
   1214c:	b	1234c <__mempcpy_chk@plt+0x133c>
   12150:	ldr	r7, [sp, #32]
   12154:	cmp	r7, #2
   12158:	bne	12170 <__mempcpy_chk@plt+0x1160>
   1215c:	mov	r8, sl
   12160:	ldrb	r0, [r8]
   12164:	cmp	r0, #0
   12168:	bne	1245c <__mempcpy_chk@plt+0x144c>
   1216c:	b	124bc <__mempcpy_chk@plt+0x14ac>
   12170:	ldrb	r0, [sl]
   12174:	cmp	r0, #47	; 0x2f
   12178:	bne	122b4 <__mempcpy_chk@plt+0x12a4>
   1217c:	mov	r2, sl
   12180:	mov	r1, r2
   12184:	ldrb	r3, [r2, #1]!
   12188:	cmp	r3, #47	; 0x2f
   1218c:	beq	12180 <__mempcpy_chk@plt+0x1170>
   12190:	cmp	r3, #46	; 0x2e
   12194:	bne	122ac <__mempcpy_chk@plt+0x129c>
   12198:	add	r2, r1, #2
   1219c:	ldrb	r3, [r2]
   121a0:	cmp	r3, #47	; 0x2f
   121a4:	beq	12180 <__mempcpy_chk@plt+0x1170>
   121a8:	cmp	r3, #0
   121ac:	beq	121c8 <__mempcpy_chk@plt+0x11b8>
   121b0:	cmp	r3, #46	; 0x2e
   121b4:	bne	122b4 <__mempcpy_chk@plt+0x12a4>
   121b8:	ldrb	r1, [r1, #3]
   121bc:	cmp	r1, #47	; 0x2f
   121c0:	cmpne	r1, #0
   121c4:	bne	122b4 <__mempcpy_chk@plt+0x12a4>
   121c8:	mov	r0, #47	; 0x2f
   121cc:	mov	r1, r5
   121d0:	mov	r2, #0
   121d4:	mov	r3, #512	; 0x200
   121d8:	strh	r0, [r6]
   121dc:	mvn	r0, #99	; 0x63
   121e0:	b	122d8 <__mempcpy_chk@plt+0x12c8>
   121e4:	ldrb	r0, [r8]
   121e8:	cmp	r0, #0
   121ec:	beq	1234c <__mempcpy_chk@plt+0x133c>
   121f0:	ldr	r9, [sp, #44]	; 0x2c
   121f4:	mov	r0, #0
   121f8:	add	lr, sp, #1024	; 0x400
   121fc:	mov	r1, r5
   12200:	add	r2, lr, #56	; 0x38
   12204:	strb	r0, [r6, -r9]
   12208:	ldrb	r0, [r5]
   1220c:	cmp	r0, #0
   12210:	movw	r0, #29714	; 0x7412
   12214:	movt	r0, #1
   12218:	moveq	r1, r0
   1221c:	mov	r0, #3
   12220:	bl	10fe0 <__xstat64@plt>
   12224:	cmp	r0, #0
   12228:	bne	125c4 <__mempcpy_chk@plt+0x15b4>
   1222c:	rsb	r0, r9, #0
   12230:	ldr	r9, [sp, #20]
   12234:	ldrb	r1, [r8]
   12238:	cmp	r9, #0
   1223c:	strb	r1, [r6, r0]
   12240:	bne	12278 <__mempcpy_chk@plt+0x1268>
   12244:	movw	r0, #15112	; 0x3b08
   12248:	movw	r2, #14968	; 0x3a78
   1224c:	movw	r3, #15024	; 0x3ab0
   12250:	mov	r1, #0
   12254:	movt	r0, #1
   12258:	movt	r2, #1
   1225c:	movt	r3, #1
   12260:	str	r0, [sp]
   12264:	mov	r0, #7
   12268:	bl	12c50 <__mempcpy_chk@plt+0x1c40>
   1226c:	mov	r9, r0
   12270:	cmp	r0, #0
   12274:	beq	125b4 <__mempcpy_chk@plt+0x15a4>
   12278:	add	lr, sp, #1024	; 0x400
   1227c:	mov	r0, r9
   12280:	mov	r1, r8
   12284:	add	r2, lr, #56	; 0x38
   12288:	bl	12750 <__mempcpy_chk@plt+0x1740>
   1228c:	cmp	r0, #0
   12290:	str	r9, [sp, #20]
   12294:	beq	12338 <__mempcpy_chk@plt+0x1328>
   12298:	ldr	r7, [sp, #32]
   1229c:	cmp	r7, #2
   122a0:	bne	125b8 <__mempcpy_chk@plt+0x15a8>
   122a4:	mov	r8, sl
   122a8:	b	12418 <__mempcpy_chk@plt+0x1408>
   122ac:	cmp	r3, #0
   122b0:	beq	121c8 <__mempcpy_chk@plt+0x11b8>
   122b4:	ldr	r1, [sp, #40]	; 0x28
   122b8:	cmp	r1, #0
   122bc:	beq	122e8 <__mempcpy_chk@plt+0x12d8>
   122c0:	cmp	r0, #0
   122c4:	bne	1215c <__mempcpy_chk@plt+0x114c>
   122c8:	mvn	r0, #99	; 0x63
   122cc:	mov	r1, r5
   122d0:	mov	r2, #0
   122d4:	mov	r3, #512	; 0x200
   122d8:	bl	10e0c <faccessat@plt>
   122dc:	cmp	r0, #0
   122e0:	bne	122f8 <__mempcpy_chk@plt+0x12e8>
   122e4:	b	1215c <__mempcpy_chk@plt+0x114c>
   122e8:	bl	10f44 <__errno_location@plt>
   122ec:	ldr	r0, [r0]
   122f0:	cmp	r0, #22
   122f4:	beq	1215c <__mempcpy_chk@plt+0x114c>
   122f8:	mov	r4, #1
   122fc:	cmp	r7, #1
   12300:	bne	124dc <__mempcpy_chk@plt+0x14cc>
   12304:	bl	10f44 <__errno_location@plt>
   12308:	ldr	r0, [r0]
   1230c:	cmp	r0, #2
   12310:	bne	124dc <__mempcpy_chk@plt+0x14cc>
   12314:	movw	r1, #30887	; 0x78a7
   12318:	mov	r0, sl
   1231c:	movt	r1, #1
   12320:	bl	11004 <strspn@plt>
   12324:	ldrb	r0, [sl, r0]
   12328:	mov	r8, sl
   1232c:	cmp	r0, #0
   12330:	beq	12160 <__mempcpy_chk@plt+0x1150>
   12334:	b	124dc <__mempcpy_chk@plt+0x14cc>
   12338:	add	lr, sp, #1024	; 0x400
   1233c:	mov	r0, r9
   12340:	mov	r1, r8
   12344:	add	r2, lr, #56	; 0x38
   12348:	bl	126d4 <__mempcpy_chk@plt+0x16c4>
   1234c:	mov	r0, #0
   12350:	strb	r0, [r7, r4]
   12354:	ldr	r0, [sp, #36]	; 0x24
   12358:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   1235c:	tst	r0, #1
   12360:	ldr	r0, [sp, #28]
   12364:	subne	r0, sl, r8
   12368:	str	r0, [sp, #28]
   1236c:	mov	r0, sl
   12370:	bl	10f38 <strlen@plt>
   12374:	adds	r9, r0, r4
   12378:	str	r0, [sp, #44]	; 0x2c
   1237c:	bcs	125b4 <__mempcpy_chk@plt+0x15a4>
   12380:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12384:	cmp	r0, r9
   12388:	bhi	123b0 <__mempcpy_chk@plt+0x13a0>
   1238c:	sub	lr, fp, #1024	; 0x400
   12390:	sub	r0, lr, #40	; 0x28
   12394:	bl	1596c <__mempcpy_chk@plt+0x495c>
   12398:	cmp	r0, #0
   1239c:	beq	125b4 <__mempcpy_chk@plt+0x15a4>
   123a0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   123a4:	cmp	r0, r9
   123a8:	bls	1238c <__mempcpy_chk@plt+0x137c>
   123ac:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   123b0:	ldr	r0, [sp, #36]	; 0x24
   123b4:	ldr	r1, [sp, #44]	; 0x2c
   123b8:	tst	r0, #1
   123bc:	ldr	r0, [sp, #28]
   123c0:	add	r2, r1, #1
   123c4:	addne	sl, r8, r0
   123c8:	add	r0, r8, r4
   123cc:	mov	r1, sl
   123d0:	bl	10df4 <memmove@plt>
   123d4:	mov	r0, r8
   123d8:	mov	r1, r7
   123dc:	mov	r2, r4
   123e0:	bl	10e24 <memcpy@plt>
   123e4:	ldrb	r0, [r7]
   123e8:	cmp	r0, #47	; 0x2f
   123ec:	bne	12420 <__mempcpy_chk@plt+0x1410>
   123f0:	mov	r0, r5
   123f4:	mov	r1, r7
   123f8:	mov	r2, #0
   123fc:	mvn	r3, #0
   12400:	bl	11010 <__mempcpy_chk@plt>
   12404:	mov	r6, r0
   12408:	mov	r0, #47	; 0x2f
   1240c:	strb	r0, [r6], #1
   12410:	mov	r0, #1
   12414:	str	r0, [sp, #36]	; 0x24
   12418:	add	r9, sp, #48	; 0x30
   1241c:	b	12160 <__mempcpy_chk@plt+0x1150>
   12420:	add	r0, r5, #1
   12424:	mov	r1, #1
   12428:	add	r9, sp, #48	; 0x30
   1242c:	cmp	r6, r0
   12430:	str	r1, [sp, #36]	; 0x24
   12434:	bls	12160 <__mempcpy_chk@plt+0x1150>
   12438:	sub	r0, r6, #1
   1243c:	mov	r6, r0
   12440:	cmp	r0, r5
   12444:	bls	12160 <__mempcpy_chk@plt+0x1150>
   12448:	mov	r0, r6
   1244c:	ldrb	r1, [r0, #-1]!
   12450:	cmp	r1, #47	; 0x2f
   12454:	bne	1243c <__mempcpy_chk@plt+0x142c>
   12458:	b	12160 <__mempcpy_chk@plt+0x1150>
   1245c:	uxtb	r1, r0
   12460:	cmp	r1, #47	; 0x2f
   12464:	bne	12474 <__mempcpy_chk@plt+0x1464>
   12468:	ldrb	r0, [r8, #1]!
   1246c:	cmp	r0, #47	; 0x2f
   12470:	beq	12468 <__mempcpy_chk@plt+0x1458>
   12474:	mov	r1, r0
   12478:	mov	sl, r8
   1247c:	b	12484 <__mempcpy_chk@plt+0x1474>
   12480:	ldrb	r1, [sl, #1]!
   12484:	uxtb	r1, r1
   12488:	cmp	r1, #0
   1248c:	cmpne	r1, #47	; 0x2f
   12490:	bne	12480 <__mempcpy_chk@plt+0x1470>
   12494:	sub	r2, sl, r8
   12498:	cmp	r2, #1
   1249c:	beq	1205c <__mempcpy_chk@plt+0x104c>
   124a0:	cmp	r2, #2
   124a4:	beq	12018 <__mempcpy_chk@plt+0x1008>
   124a8:	cmp	r2, #0
   124ac:	bne	12068 <__mempcpy_chk@plt+0x1058>
   124b0:	b	124bc <__mempcpy_chk@plt+0x14ac>
   124b4:	mov	r0, #0
   124b8:	str	r0, [sp, #20]
   124bc:	add	r0, r5, #1
   124c0:	cmp	r6, r0
   124c4:	bls	124d8 <__mempcpy_chk@plt+0x14c8>
   124c8:	mov	r0, r6
   124cc:	ldrb	r1, [r0, #-1]!
   124d0:	cmp	r1, #47	; 0x2f
   124d4:	moveq	r6, r0
   124d8:	mov	r4, #0
   124dc:	ldr	r0, [sp, #20]
   124e0:	cmp	r0, #0
   124e4:	beq	12548 <__mempcpy_chk@plt+0x1538>
   124e8:	bl	12f48 <__mempcpy_chk@plt+0x1f38>
   124ec:	b	12548 <__mempcpy_chk@plt+0x1538>
   124f0:	bl	10f44 <__errno_location@plt>
   124f4:	ldr	r5, [sp, #8]
   124f8:	mov	r6, r0
   124fc:	add	r9, sp, #48	; 0x30
   12500:	ldr	r0, [r6]
   12504:	cmp	r0, #34	; 0x22
   12508:	bne	12538 <__mempcpy_chk@plt+0x1528>
   1250c:	mov	r0, r9
   12510:	bl	158fc <__mempcpy_chk@plt+0x48ec>
   12514:	cmp	r0, #0
   12518:	beq	125b4 <__mempcpy_chk@plt+0x15a4>
   1251c:	ldr	r5, [sp, #48]	; 0x30
   12520:	ldr	r1, [sp, #52]	; 0x34
   12524:	mov	r0, r5
   12528:	bl	10f20 <getcwd@plt>
   1252c:	cmp	r0, #0
   12530:	beq	12500 <__mempcpy_chk@plt+0x14f0>
   12534:	b	11fd0 <__mempcpy_chk@plt+0xfc0>
   12538:	cmp	r0, #12
   1253c:	beq	125b4 <__mempcpy_chk@plt+0x15a4>
   12540:	mov	r4, #1
   12544:	mov	r6, r5
   12548:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   1254c:	ldr	r1, [sp, #12]
   12550:	cmp	r0, r1
   12554:	beq	1255c <__mempcpy_chk@plt+0x154c>
   12558:	bl	1279c <__mempcpy_chk@plt+0x178c>
   1255c:	ldr	r0, [sp, #1184]	; 0x4a0
   12560:	ldr	r1, [sp, #16]
   12564:	cmp	r0, r1
   12568:	beq	12570 <__mempcpy_chk@plt+0x1560>
   1256c:	bl	1279c <__mempcpy_chk@plt+0x178c>
   12570:	cmp	r4, #0
   12574:	beq	12594 <__mempcpy_chk@plt+0x1584>
   12578:	ldr	r0, [sp, #48]	; 0x30
   1257c:	ldr	r1, [sp, #8]
   12580:	mov	r4, #0
   12584:	cmp	r0, r1
   12588:	beq	11f20 <__mempcpy_chk@plt+0xf10>
   1258c:	bl	1279c <__mempcpy_chk@plt+0x178c>
   12590:	b	11f20 <__mempcpy_chk@plt+0xf10>
   12594:	mov	r0, #0
   12598:	strb	r0, [r6], #1
   1259c:	add	r0, sp, #48	; 0x30
   125a0:	sub	r1, r6, r5
   125a4:	bl	15894 <__mempcpy_chk@plt+0x4884>
   125a8:	mov	r4, r0
   125ac:	cmp	r0, #0
   125b0:	bne	11f20 <__mempcpy_chk@plt+0xf10>
   125b4:	bl	16628 <__mempcpy_chk@plt+0x5618>
   125b8:	bl	10f44 <__errno_location@plt>
   125bc:	mov	r1, #40	; 0x28
   125c0:	str	r1, [r0]
   125c4:	mov	r4, #1
   125c8:	b	124dc <__mempcpy_chk@plt+0x14cc>
   125cc:	movw	r1, #33116	; 0x815c
   125d0:	movt	r1, #2
   125d4:	str	r0, [r1]
   125d8:	bx	lr
   125dc:	movw	r1, #33120	; 0x8160
   125e0:	movt	r1, #2
   125e4:	strb	r0, [r1]
   125e8:	bx	lr
   125ec:	push	{r4, r5, r6, sl, fp, lr}
   125f0:	add	fp, sp, #16
   125f4:	sub	sp, sp, #8
   125f8:	movw	r0, #33092	; 0x8144
   125fc:	movt	r0, #2
   12600:	ldr	r0, [r0]
   12604:	bl	16744 <__mempcpy_chk@plt+0x5734>
   12608:	cmp	r0, #0
   1260c:	beq	12634 <__mempcpy_chk@plt+0x1624>
   12610:	movw	r0, #33120	; 0x8160
   12614:	movt	r0, #2
   12618:	ldrb	r0, [r0]
   1261c:	cmp	r0, #0
   12620:	beq	12654 <__mempcpy_chk@plt+0x1644>
   12624:	bl	10f44 <__errno_location@plt>
   12628:	ldr	r0, [r0]
   1262c:	cmp	r0, #32
   12630:	bne	12654 <__mempcpy_chk@plt+0x1644>
   12634:	movw	r0, #33088	; 0x8140
   12638:	movt	r0, #2
   1263c:	ldr	r0, [r0]
   12640:	bl	16744 <__mempcpy_chk@plt+0x5734>
   12644:	cmp	r0, #0
   12648:	subeq	sp, fp, #16
   1264c:	popeq	{r4, r5, r6, sl, fp, pc}
   12650:	b	126c4 <__mempcpy_chk@plt+0x16b4>
   12654:	movw	r1, #29756	; 0x743c
   12658:	mov	r0, #0
   1265c:	mov	r2, #5
   12660:	movt	r1, #1
   12664:	bl	10e48 <dcgettext@plt>
   12668:	mov	r4, r0
   1266c:	movw	r0, #33116	; 0x815c
   12670:	movt	r0, #2
   12674:	ldr	r6, [r0]
   12678:	bl	10f44 <__errno_location@plt>
   1267c:	ldr	r5, [r0]
   12680:	cmp	r6, #0
   12684:	bne	126a0 <__mempcpy_chk@plt+0x1690>
   12688:	movw	r2, #29772	; 0x744c
   1268c:	mov	r0, #0
   12690:	mov	r1, r5
   12694:	mov	r3, r4
   12698:	movt	r2, #1
   1269c:	b	126c0 <__mempcpy_chk@plt+0x16b0>
   126a0:	mov	r0, r6
   126a4:	bl	153d4 <__mempcpy_chk@plt+0x43c4>
   126a8:	movw	r2, #29768	; 0x7448
   126ac:	mov	r3, r0
   126b0:	str	r4, [sp]
   126b4:	mov	r0, #0
   126b8:	mov	r1, r5
   126bc:	movt	r2, #1
   126c0:	bl	10ecc <error@plt>
   126c4:	movw	r0, #33004	; 0x80ec
   126c8:	movt	r0, #2
   126cc:	ldr	r0, [r0]
   126d0:	bl	10e18 <_exit@plt>
   126d4:	push	{r4, r5, r6, r7, fp, lr}
   126d8:	add	fp, sp, #16
   126dc:	cmp	r0, #0
   126e0:	popeq	{r4, r5, r6, r7, fp, pc}
   126e4:	mov	r5, r0
   126e8:	mov	r0, #24
   126ec:	mov	r6, r2
   126f0:	mov	r7, r1
   126f4:	bl	160c8 <__mempcpy_chk@plt+0x50b8>
   126f8:	mov	r4, r0
   126fc:	mov	r0, r7
   12700:	bl	165e8 <__mempcpy_chk@plt+0x55d8>
   12704:	str	r0, [r4]
   12708:	ldrd	r0, [r6, #96]	; 0x60
   1270c:	str	r1, [r4, #12]
   12710:	str	r0, [r4, #8]
   12714:	ldrd	r0, [r6]
   12718:	str	r1, [r4, #20]
   1271c:	str	r0, [r4, #16]
   12720:	mov	r0, r5
   12724:	mov	r1, r4
   12728:	bl	13794 <__mempcpy_chk@plt+0x2784>
   1272c:	cmp	r0, #0
   12730:	beq	1274c <__mempcpy_chk@plt+0x173c>
   12734:	cmp	r0, r4
   12738:	beq	12748 <__mempcpy_chk@plt+0x1738>
   1273c:	mov	r0, r4
   12740:	pop	{r4, r5, r6, r7, fp, lr}
   12744:	b	13b08 <__mempcpy_chk@plt+0x2af8>
   12748:	pop	{r4, r5, r6, r7, fp, pc}
   1274c:	bl	16628 <__mempcpy_chk@plt+0x5618>
   12750:	cmp	r0, #0
   12754:	moveq	r0, #0
   12758:	bxeq	lr
   1275c:	push	{r4, r5, fp, lr}
   12760:	add	fp, sp, #8
   12764:	sub	sp, sp, #24
   12768:	str	r1, [sp]
   1276c:	mov	r1, sp
   12770:	ldrd	r4, [r2, #96]	; 0x60
   12774:	str	r5, [sp, #12]
   12778:	str	r4, [sp, #8]
   1277c:	ldrd	r2, [r2]
   12780:	str	r3, [sp, #20]
   12784:	str	r2, [sp, #16]
   12788:	bl	129a0 <__mempcpy_chk@plt+0x1990>
   1278c:	cmp	r0, #0
   12790:	movwne	r0, #1
   12794:	sub	sp, fp, #8
   12798:	pop	{r4, r5, fp, pc}
   1279c:	push	{r4, r5, r6, sl, fp, lr}
   127a0:	add	fp, sp, #16
   127a4:	mov	r4, r0
   127a8:	bl	10f44 <__errno_location@plt>
   127ac:	ldr	r6, [r0]
   127b0:	mov	r5, r0
   127b4:	mov	r0, r4
   127b8:	bl	10e00 <free@plt>
   127bc:	str	r6, [r5]
   127c0:	pop	{r4, r5, r6, sl, fp, pc}
   127c4:	andeq	r0, r0, r0
   127c8:	ldr	r0, [r0, #8]
   127cc:	bx	lr
   127d0:	ldr	r0, [r0, #12]
   127d4:	bx	lr
   127d8:	ldr	r0, [r0, #16]
   127dc:	bx	lr
   127e0:	ldm	r0, {r2, ip}
   127e4:	mov	r0, #0
   127e8:	cmp	r2, ip
   127ec:	bxcs	lr
   127f0:	mov	r0, #0
   127f4:	ldr	r1, [r2]
   127f8:	cmp	r1, #0
   127fc:	beq	12820 <__mempcpy_chk@plt+0x1810>
   12800:	mov	r3, #0
   12804:	mov	r1, r2
   12808:	ldr	r1, [r1, #4]
   1280c:	add	r3, r3, #1
   12810:	cmp	r1, #0
   12814:	bne	12808 <__mempcpy_chk@plt+0x17f8>
   12818:	cmp	r3, r0
   1281c:	movhi	r0, r3
   12820:	add	r2, r2, #8
   12824:	cmp	r2, ip
   12828:	bcc	127f4 <__mempcpy_chk@plt+0x17e4>
   1282c:	bx	lr
   12830:	push	{fp, lr}
   12834:	mov	fp, sp
   12838:	ldm	r0, {r3, ip}
   1283c:	mov	lr, #0
   12840:	mov	r1, #0
   12844:	cmp	r3, ip
   12848:	bcs	12884 <__mempcpy_chk@plt+0x1874>
   1284c:	mov	r1, #0
   12850:	mov	lr, #0
   12854:	ldr	r2, [r3]
   12858:	cmp	r2, #0
   1285c:	beq	12878 <__mempcpy_chk@plt+0x1868>
   12860:	mov	r2, r3
   12864:	ldr	r2, [r2, #4]
   12868:	add	r1, r1, #1
   1286c:	cmp	r2, #0
   12870:	bne	12864 <__mempcpy_chk@plt+0x1854>
   12874:	add	lr, lr, #1
   12878:	add	r3, r3, #8
   1287c:	cmp	r3, ip
   12880:	bcc	12854 <__mempcpy_chk@plt+0x1844>
   12884:	ldr	r2, [r0, #12]
   12888:	cmp	lr, r2
   1288c:	bne	128a4 <__mempcpy_chk@plt+0x1894>
   12890:	ldr	r2, [r0, #16]
   12894:	mov	r0, #1
   12898:	cmp	r1, r2
   1289c:	movne	r0, #0
   128a0:	pop	{fp, pc}
   128a4:	mov	r0, #0
   128a8:	pop	{fp, pc}
   128ac:	nop	{0}
   128b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128b4:	add	fp, sp, #24
   128b8:	sub	sp, sp, #8
   128bc:	ldr	r6, [r0]
   128c0:	ldmib	r0, {r2, r7, r8}
   128c4:	ldr	r3, [r0, #16]
   128c8:	mov	r4, r1
   128cc:	mov	r5, #0
   128d0:	cmp	r6, r2
   128d4:	bcs	12914 <__mempcpy_chk@plt+0x1904>
   128d8:	mov	r5, #0
   128dc:	ldr	r0, [r6]
   128e0:	cmp	r0, #0
   128e4:	beq	12908 <__mempcpy_chk@plt+0x18f8>
   128e8:	mov	r0, #0
   128ec:	mov	r1, r6
   128f0:	ldr	r1, [r1, #4]
   128f4:	add	r0, r0, #1
   128f8:	cmp	r1, #0
   128fc:	bne	128f0 <__mempcpy_chk@plt+0x18e0>
   12900:	cmp	r0, r5
   12904:	movhi	r5, r0
   12908:	add	r6, r6, #8
   1290c:	cmp	r6, r2
   12910:	bcc	128dc <__mempcpy_chk@plt+0x18cc>
   12914:	movw	r2, #29775	; 0x744f
   12918:	mov	r0, r4
   1291c:	mov	r1, #1
   12920:	movt	r2, #1
   12924:	bl	10f80 <__fprintf_chk@plt>
   12928:	movw	r2, #29799	; 0x7467
   1292c:	mov	r0, r4
   12930:	mov	r1, #1
   12934:	mov	r3, r7
   12938:	movt	r2, #1
   1293c:	bl	10f80 <__fprintf_chk@plt>
   12940:	vldr	d16, [pc, #80]	; 12998 <__mempcpy_chk@plt+0x1988>
   12944:	vmov	s0, r8
   12948:	movw	r2, #29823	; 0x747f
   1294c:	mov	r0, r4
   12950:	mov	r1, #1
   12954:	mov	r3, r8
   12958:	vcvt.f64.u32	d17, s0
   1295c:	vmov	s0, r7
   12960:	movt	r2, #1
   12964:	vcvt.f64.u32	d18, s0
   12968:	vmul.f64	d16, d17, d16
   1296c:	vdiv.f64	d16, d16, d18
   12970:	vstr	d16, [sp]
   12974:	bl	10f80 <__fprintf_chk@plt>
   12978:	movw	r2, #29856	; 0x74a0
   1297c:	mov	r0, r4
   12980:	mov	r1, #1
   12984:	mov	r3, r5
   12988:	movt	r2, #1
   1298c:	sub	sp, fp, #24
   12990:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12994:	b	10f80 <__fprintf_chk@plt>
   12998:	andeq	r0, r0, r0
   1299c:	subsmi	r0, r9, r0
   129a0:	push	{r4, r5, r6, r7, fp, lr}
   129a4:	add	fp, sp, #16
   129a8:	mov	r4, r1
   129ac:	ldr	r1, [r0, #8]
   129b0:	ldr	r2, [r0, #24]
   129b4:	mov	r5, r0
   129b8:	mov	r0, r4
   129bc:	blx	r2
   129c0:	ldr	r1, [r5, #8]
   129c4:	cmp	r0, r1
   129c8:	bcs	12a34 <__mempcpy_chk@plt+0x1a24>
   129cc:	ldr	r7, [r5]
   129d0:	mov	r6, #0
   129d4:	ldr	r1, [r7, r0, lsl #3]!
   129d8:	cmp	r1, #0
   129dc:	cmpne	r7, #0
   129e0:	bne	129f0 <__mempcpy_chk@plt+0x19e0>
   129e4:	mov	r0, r6
   129e8:	pop	{r4, r5, r6, r7, fp, pc}
   129ec:	ldr	r1, [r7]
   129f0:	cmp	r1, r4
   129f4:	beq	12a1c <__mempcpy_chk@plt+0x1a0c>
   129f8:	ldr	r2, [r5, #28]
   129fc:	mov	r0, r4
   12a00:	blx	r2
   12a04:	cmp	r0, #0
   12a08:	bne	12a28 <__mempcpy_chk@plt+0x1a18>
   12a0c:	ldr	r7, [r7, #4]
   12a10:	cmp	r7, #0
   12a14:	bne	129ec <__mempcpy_chk@plt+0x19dc>
   12a18:	b	129e4 <__mempcpy_chk@plt+0x19d4>
   12a1c:	mov	r6, r4
   12a20:	mov	r0, r6
   12a24:	pop	{r4, r5, r6, r7, fp, pc}
   12a28:	ldr	r6, [r7]
   12a2c:	mov	r0, r6
   12a30:	pop	{r4, r5, r6, r7, fp, pc}
   12a34:	bl	10ff8 <abort@plt>
   12a38:	ldr	r1, [r0, #16]
   12a3c:	cmp	r1, #0
   12a40:	moveq	r0, #0
   12a44:	bxeq	lr
   12a48:	ldm	r0, {r1, r2}
   12a4c:	cmp	r1, r2
   12a50:	bcs	12a68 <__mempcpy_chk@plt+0x1a58>
   12a54:	ldr	r0, [r1], #8
   12a58:	cmp	r0, #0
   12a5c:	bxne	lr
   12a60:	cmp	r1, r2
   12a64:	bcc	12a54 <__mempcpy_chk@plt+0x1a44>
   12a68:	push	{fp, lr}
   12a6c:	mov	fp, sp
   12a70:	bl	10ff8 <abort@plt>
   12a74:	push	{r4, r5, fp, lr}
   12a78:	add	fp, sp, #8
   12a7c:	mov	r5, r1
   12a80:	ldr	r1, [r0, #8]
   12a84:	ldr	r2, [r0, #24]
   12a88:	mov	r4, r0
   12a8c:	mov	r0, r5
   12a90:	blx	r2
   12a94:	ldr	r1, [r4, #8]
   12a98:	cmp	r0, r1
   12a9c:	bcs	12af8 <__mempcpy_chk@plt+0x1ae8>
   12aa0:	ldr	r1, [r4]
   12aa4:	add	r2, r1, r0, lsl #3
   12aa8:	ldr	r3, [r2]
   12aac:	ldr	r2, [r2, #4]
   12ab0:	cmp	r3, r5
   12ab4:	beq	12ac4 <__mempcpy_chk@plt+0x1ab4>
   12ab8:	cmp	r2, #0
   12abc:	bne	12aa8 <__mempcpy_chk@plt+0x1a98>
   12ac0:	b	12ad0 <__mempcpy_chk@plt+0x1ac0>
   12ac4:	cmp	r2, #0
   12ac8:	ldrne	r0, [r2]
   12acc:	popne	{r4, r5, fp, pc}
   12ad0:	ldr	r2, [r4, #4]
   12ad4:	add	r0, r1, r0, lsl #3
   12ad8:	add	r1, r0, #8
   12adc:	cmp	r1, r2
   12ae0:	movcs	r0, #0
   12ae4:	popcs	{r4, r5, fp, pc}
   12ae8:	ldr	r0, [r1], #8
   12aec:	cmp	r0, #0
   12af0:	popne	{r4, r5, fp, pc}
   12af4:	b	12adc <__mempcpy_chk@plt+0x1acc>
   12af8:	bl	10ff8 <abort@plt>
   12afc:	push	{r4, r5, fp, lr}
   12b00:	add	fp, sp, #8
   12b04:	ldm	r0, {r5, lr}
   12b08:	mov	ip, r0
   12b0c:	mov	r0, #0
   12b10:	cmp	r5, lr
   12b14:	bcs	12b60 <__mempcpy_chk@plt+0x1b50>
   12b18:	mov	r0, #0
   12b1c:	ldr	r3, [r5]
   12b20:	cmp	r3, #0
   12b24:	cmpne	r5, #0
   12b28:	beq	12b54 <__mempcpy_chk@plt+0x1b44>
   12b2c:	mov	r3, r5
   12b30:	cmp	r0, r2
   12b34:	popcs	{r4, r5, fp, pc}
   12b38:	ldr	r4, [r3]
   12b3c:	str	r4, [r1, r0, lsl #2]
   12b40:	add	r0, r0, #1
   12b44:	ldr	r3, [r3, #4]
   12b48:	cmp	r3, #0
   12b4c:	bne	12b30 <__mempcpy_chk@plt+0x1b20>
   12b50:	ldr	lr, [ip, #4]
   12b54:	add	r5, r5, #8
   12b58:	cmp	r5, lr
   12b5c:	bcc	12b1c <__mempcpy_chk@plt+0x1b0c>
   12b60:	pop	{r4, r5, fp, pc}
   12b64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b68:	add	fp, sp, #24
   12b6c:	mov	r5, r1
   12b70:	ldr	r4, [r0]
   12b74:	ldr	r1, [r0, #4]
   12b78:	mov	r6, #0
   12b7c:	cmp	r4, r1
   12b80:	bcs	12bf4 <__mempcpy_chk@plt+0x1be4>
   12b84:	mov	r9, r2
   12b88:	mov	r8, r0
   12b8c:	mov	r6, #0
   12b90:	b	12bd8 <__mempcpy_chk@plt+0x1bc8>
   12b94:	mov	r1, r9
   12b98:	blx	r5
   12b9c:	cmp	r0, #0
   12ba0:	beq	12bf4 <__mempcpy_chk@plt+0x1be4>
   12ba4:	mov	r7, r4
   12ba8:	ldr	r7, [r7, #4]
   12bac:	add	r6, r6, #1
   12bb0:	cmp	r7, #0
   12bb4:	beq	12bd0 <__mempcpy_chk@plt+0x1bc0>
   12bb8:	ldr	r0, [r7]
   12bbc:	mov	r1, r9
   12bc0:	blx	r5
   12bc4:	cmp	r0, #0
   12bc8:	bne	12ba8 <__mempcpy_chk@plt+0x1b98>
   12bcc:	b	12bf4 <__mempcpy_chk@plt+0x1be4>
   12bd0:	ldr	r1, [r8, #4]
   12bd4:	b	12be8 <__mempcpy_chk@plt+0x1bd8>
   12bd8:	ldr	r0, [r4]
   12bdc:	cmp	r0, #0
   12be0:	cmpne	r4, #0
   12be4:	bne	12b94 <__mempcpy_chk@plt+0x1b84>
   12be8:	add	r4, r4, #8
   12bec:	cmp	r4, r1
   12bf0:	bcc	12bd8 <__mempcpy_chk@plt+0x1bc8>
   12bf4:	mov	r0, r6
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bfc:	ldrb	r2, [r0]
   12c00:	cmp	r2, #0
   12c04:	moveq	r0, #0
   12c08:	bxeq	lr
   12c0c:	add	r3, r0, #1
   12c10:	mov	r0, #0
   12c14:	rsb	r0, r0, r0, lsl #5
   12c18:	uxtab	r0, r0, r2
   12c1c:	udiv	r2, r0, r1
   12c20:	mls	r0, r2, r1, r0
   12c24:	ldrb	r2, [r3], #1
   12c28:	cmp	r2, #0
   12c2c:	bne	12c14 <__mempcpy_chk@plt+0x1c04>
   12c30:	bx	lr
   12c34:	movw	r1, #29880	; 0x74b8
   12c38:	movt	r1, #1
   12c3c:	vld1.32	{d16-d17}, [r1]!
   12c40:	ldr	r1, [r1]
   12c44:	vst1.32	{d16-d17}, [r0]!
   12c48:	str	r1, [r0]
   12c4c:	bx	lr
   12c50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c54:	add	fp, sp, #24
   12c58:	movw	r9, #11896	; 0x2e78
   12c5c:	movw	r5, #11876	; 0x2e64
   12c60:	cmp	r3, #0
   12c64:	mov	r6, r0
   12c68:	mov	r0, #40	; 0x28
   12c6c:	mov	r7, r1
   12c70:	movt	r9, #1
   12c74:	movt	r5, #1
   12c78:	movne	r9, r3
   12c7c:	cmp	r2, #0
   12c80:	movne	r5, r2
   12c84:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   12c88:	mov	r8, #0
   12c8c:	cmp	r0, #0
   12c90:	beq	12e4c <__mempcpy_chk@plt+0x1e3c>
   12c94:	mov	r4, r0
   12c98:	movw	r0, #29880	; 0x74b8
   12c9c:	cmp	r7, #0
   12ca0:	movt	r0, #1
   12ca4:	moveq	r7, r0
   12ca8:	cmp	r7, r0
   12cac:	str	r7, [r4, #20]
   12cb0:	beq	12d2c <__mempcpy_chk@plt+0x1d1c>
   12cb4:	vldr	s2, [pc, #408]	; 12e54 <__mempcpy_chk@plt+0x1e44>
   12cb8:	vldr	s0, [r7, #8]
   12cbc:	vcmpe.f32	s0, s2
   12cc0:	vmrs	APSR_nzcv, fpscr
   12cc4:	ble	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12cc8:	vldr	s4, [pc, #392]	; 12e58 <__mempcpy_chk@plt+0x1e48>
   12ccc:	vcmpe.f32	s0, s4
   12cd0:	vmrs	APSR_nzcv, fpscr
   12cd4:	bpl	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12cd8:	vldr	s4, [pc, #380]	; 12e5c <__mempcpy_chk@plt+0x1e4c>
   12cdc:	vldr	s6, [r7, #12]
   12ce0:	vcmpe.f32	s6, s4
   12ce4:	vmrs	APSR_nzcv, fpscr
   12ce8:	ble	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12cec:	vldr	s4, [r7]
   12cf0:	vcmpe.f32	s4, #0.0
   12cf4:	vmrs	APSR_nzcv, fpscr
   12cf8:	blt	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12cfc:	vadd.f32	s2, s4, s2
   12d00:	vcmpe.f32	s2, s0
   12d04:	vmrs	APSR_nzcv, fpscr
   12d08:	bpl	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12d0c:	vldr	s0, [r7, #4]
   12d10:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12d14:	vcmpe.f32	s0, s4
   12d18:	vmrs	APSR_nzcv, fpscr
   12d1c:	bhi	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12d20:	vcmpe.f32	s2, s0
   12d24:	vmrs	APSR_nzcv, fpscr
   12d28:	bpl	12dd8 <__mempcpy_chk@plt+0x1dc8>
   12d2c:	ldrb	r0, [r7, #16]
   12d30:	cmp	r0, #0
   12d34:	bne	12d60 <__mempcpy_chk@plt+0x1d50>
   12d38:	vldr	s0, [r7, #8]
   12d3c:	vldr	s4, [pc, #284]	; 12e60 <__mempcpy_chk@plt+0x1e50>
   12d40:	vmov	s2, r6
   12d44:	vcvt.f32.u32	s2, s2
   12d48:	vdiv.f32	s2, s2, s0
   12d4c:	vcmpe.f32	s2, s4
   12d50:	vcvt.u32.f32	s0, s2
   12d54:	vmrs	APSR_nzcv, fpscr
   12d58:	bge	12de8 <__mempcpy_chk@plt+0x1dd8>
   12d5c:	vmov	r6, s0
   12d60:	cmp	r6, #10
   12d64:	movls	r6, #10
   12d68:	orr	r0, r6, #1
   12d6c:	cmn	r0, #1
   12d70:	beq	12de8 <__mempcpy_chk@plt+0x1dd8>
   12d74:	ldr	r6, [fp, #8]
   12d78:	mov	r1, #3
   12d7c:	cmp	r0, #10
   12d80:	bcc	12db8 <__mempcpy_chk@plt+0x1da8>
   12d84:	mov	r1, #3
   12d88:	mov	r3, #9
   12d8c:	mov	r2, #12
   12d90:	udiv	r7, r0, r1
   12d94:	mls	r7, r7, r1, r0
   12d98:	cmp	r7, #0
   12d9c:	beq	12db8 <__mempcpy_chk@plt+0x1da8>
   12da0:	add	r3, r3, r2
   12da4:	add	r2, r2, #8
   12da8:	add	r1, r1, #2
   12dac:	add	r3, r3, #4
   12db0:	cmp	r3, r0
   12db4:	bcc	12d90 <__mempcpy_chk@plt+0x1d80>
   12db8:	udiv	r2, r0, r1
   12dbc:	mls	r1, r2, r1, r0
   12dc0:	cmp	r1, #0
   12dc4:	bne	12de0 <__mempcpy_chk@plt+0x1dd0>
   12dc8:	add	r0, r0, #2
   12dcc:	cmn	r0, #1
   12dd0:	bne	12d78 <__mempcpy_chk@plt+0x1d68>
   12dd4:	b	12de8 <__mempcpy_chk@plt+0x1dd8>
   12dd8:	str	r0, [r4, #20]
   12ddc:	b	12df0 <__mempcpy_chk@plt+0x1de0>
   12de0:	cmp	r0, #536870912	; 0x20000000
   12de4:	bcc	12e00 <__mempcpy_chk@plt+0x1df0>
   12de8:	mov	r0, #0
   12dec:	str	r0, [r4, #8]
   12df0:	mov	r0, r4
   12df4:	bl	1279c <__mempcpy_chk@plt+0x178c>
   12df8:	mov	r0, r8
   12dfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e00:	cmp	r0, #0
   12e04:	str	r0, [r4, #8]
   12e08:	beq	12df0 <__mempcpy_chk@plt+0x1de0>
   12e0c:	mov	r1, #8
   12e10:	bl	1666c <__mempcpy_chk@plt+0x565c>
   12e14:	cmp	r0, #0
   12e18:	str	r0, [r4]
   12e1c:	beq	12df0 <__mempcpy_chk@plt+0x1de0>
   12e20:	mov	r1, #0
   12e24:	mov	r8, r4
   12e28:	str	r1, [r4, #12]
   12e2c:	str	r1, [r4, #16]
   12e30:	str	r5, [r4, #24]
   12e34:	str	r9, [r4, #28]
   12e38:	str	r6, [r4, #32]
   12e3c:	str	r1, [r4, #36]	; 0x24
   12e40:	ldr	r1, [r4, #8]
   12e44:	add	r0, r0, r1, lsl #3
   12e48:	str	r0, [r4, #4]
   12e4c:	mov	r0, r8
   12e50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e54:	stclcc	12, cr12, [ip, #820]	; 0x334
   12e58:	svccc	0x00666666
   12e5c:	svccc	0x008ccccd
   12e60:	svcmi	0x00800000
   12e64:	ror	r2, r0, #3
   12e68:	udiv	r2, r2, r1
   12e6c:	mul	r1, r2, r1
   12e70:	rsb	r0, r1, r0, ror #3
   12e74:	bx	lr
   12e78:	sub	r0, r0, r1
   12e7c:	clz	r0, r0
   12e80:	lsr	r0, r0, #5
   12e84:	bx	lr
   12e88:	push	{r4, r5, r6, r7, fp, lr}
   12e8c:	add	fp, sp, #16
   12e90:	mov	r4, r0
   12e94:	ldr	r5, [r0]
   12e98:	ldr	r0, [r0, #4]
   12e9c:	cmp	r5, r0
   12ea0:	bcs	12f38 <__mempcpy_chk@plt+0x1f28>
   12ea4:	mov	r6, #0
   12ea8:	ldr	r1, [r5]
   12eac:	cmp	r1, #0
   12eb0:	beq	12f2c <__mempcpy_chk@plt+0x1f1c>
   12eb4:	ldr	r1, [r4, #32]
   12eb8:	ldr	r7, [r5, #4]
   12ebc:	cmp	r1, #0
   12ec0:	mov	r0, r1
   12ec4:	movwne	r0, #1
   12ec8:	cmp	r7, #0
   12ecc:	beq	12f10 <__mempcpy_chk@plt+0x1f00>
   12ed0:	tst	r0, #1
   12ed4:	beq	12ee4 <__mempcpy_chk@plt+0x1ed4>
   12ed8:	ldr	r0, [r7]
   12edc:	blx	r1
   12ee0:	ldr	r1, [r4, #32]
   12ee4:	str	r6, [r7]
   12ee8:	cmp	r1, #0
   12eec:	ldr	r0, [r4, #36]	; 0x24
   12ef0:	ldr	r2, [r7, #4]
   12ef4:	str	r0, [r7, #4]
   12ef8:	mov	r0, r1
   12efc:	str	r7, [r4, #36]	; 0x24
   12f00:	mov	r7, r2
   12f04:	movwne	r0, #1
   12f08:	cmp	r2, #0
   12f0c:	bne	12ed0 <__mempcpy_chk@plt+0x1ec0>
   12f10:	cmp	r0, #0
   12f14:	beq	12f20 <__mempcpy_chk@plt+0x1f10>
   12f18:	ldr	r0, [r5]
   12f1c:	blx	r1
   12f20:	str	r6, [r5]
   12f24:	str	r6, [r5, #4]
   12f28:	ldr	r0, [r4, #4]
   12f2c:	add	r5, r5, #8
   12f30:	cmp	r5, r0
   12f34:	bcc	12ea8 <__mempcpy_chk@plt+0x1e98>
   12f38:	mov	r0, #0
   12f3c:	str	r0, [r4, #12]
   12f40:	str	r0, [r4, #16]
   12f44:	pop	{r4, r5, r6, r7, fp, pc}
   12f48:	push	{r4, r5, r6, sl, fp, lr}
   12f4c:	add	fp, sp, #16
   12f50:	mov	r4, r0
   12f54:	ldr	r0, [r0, #32]
   12f58:	cmp	r0, #0
   12f5c:	ldrne	r0, [r4, #16]
   12f60:	cmpne	r0, #0
   12f64:	beq	12fcc <__mempcpy_chk@plt+0x1fbc>
   12f68:	ldr	r5, [r4]
   12f6c:	ldr	r1, [r4, #4]
   12f70:	cmp	r5, r1
   12f74:	bcc	12f88 <__mempcpy_chk@plt+0x1f78>
   12f78:	b	12fcc <__mempcpy_chk@plt+0x1fbc>
   12f7c:	add	r5, r5, #8
   12f80:	cmp	r5, r1
   12f84:	bcs	12fcc <__mempcpy_chk@plt+0x1fbc>
   12f88:	ldr	r0, [r5]
   12f8c:	cmp	r0, #0
   12f90:	cmpne	r5, #0
   12f94:	beq	12f7c <__mempcpy_chk@plt+0x1f6c>
   12f98:	ldr	r1, [r4, #32]
   12f9c:	blx	r1
   12fa0:	ldr	r6, [r5, #4]
   12fa4:	cmp	r6, #0
   12fa8:	beq	12fc4 <__mempcpy_chk@plt+0x1fb4>
   12fac:	ldr	r1, [r4, #32]
   12fb0:	ldr	r0, [r6]
   12fb4:	blx	r1
   12fb8:	ldr	r6, [r6, #4]
   12fbc:	cmp	r6, #0
   12fc0:	bne	12fac <__mempcpy_chk@plt+0x1f9c>
   12fc4:	ldr	r1, [r4, #4]
   12fc8:	b	12f7c <__mempcpy_chk@plt+0x1f6c>
   12fcc:	ldr	r5, [r4]
   12fd0:	ldr	r1, [r4, #4]
   12fd4:	cmp	r5, r1
   12fd8:	bcc	12fec <__mempcpy_chk@plt+0x1fdc>
   12fdc:	b	13014 <__mempcpy_chk@plt+0x2004>
   12fe0:	add	r5, r5, #8
   12fe4:	cmp	r5, r1
   12fe8:	bcs	13014 <__mempcpy_chk@plt+0x2004>
   12fec:	ldr	r0, [r5, #4]
   12ff0:	cmp	r0, #0
   12ff4:	beq	12fe0 <__mempcpy_chk@plt+0x1fd0>
   12ff8:	ldr	r6, [r0, #4]
   12ffc:	bl	1279c <__mempcpy_chk@plt+0x178c>
   13000:	cmp	r6, #0
   13004:	mov	r0, r6
   13008:	bne	12ff8 <__mempcpy_chk@plt+0x1fe8>
   1300c:	ldr	r1, [r4, #4]
   13010:	b	12fe0 <__mempcpy_chk@plt+0x1fd0>
   13014:	ldr	r0, [r4, #36]	; 0x24
   13018:	cmp	r0, #0
   1301c:	beq	13034 <__mempcpy_chk@plt+0x2024>
   13020:	ldr	r5, [r0, #4]
   13024:	bl	1279c <__mempcpy_chk@plt+0x178c>
   13028:	cmp	r5, #0
   1302c:	mov	r0, r5
   13030:	bne	13020 <__mempcpy_chk@plt+0x2010>
   13034:	ldr	r0, [r4]
   13038:	bl	1279c <__mempcpy_chk@plt+0x178c>
   1303c:	mov	r0, r4
   13040:	pop	{r4, r5, r6, sl, fp, lr}
   13044:	b	1279c <__mempcpy_chk@plt+0x178c>
   13048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1304c:	add	fp, sp, #28
   13050:	sub	sp, sp, #44	; 0x2c
   13054:	mov	r7, r0
   13058:	mov	r4, r0
   1305c:	ldr	r0, [r7, #20]!
   13060:	ldrb	r2, [r0, #16]
   13064:	cmp	r2, #0
   13068:	bne	13098 <__mempcpy_chk@plt+0x2088>
   1306c:	vldr	s0, [r0, #8]
   13070:	vldr	s4, [pc, #560]	; 132a8 <__mempcpy_chk@plt+0x2298>
   13074:	vmov	s2, r1
   13078:	mov	r5, #0
   1307c:	vcvt.f32.u32	s2, s2
   13080:	vdiv.f32	s2, s2, s0
   13084:	vcmpe.f32	s2, s4
   13088:	vcvt.u32.f32	s0, s2
   1308c:	vmrs	APSR_nzcv, fpscr
   13090:	bge	13298 <__mempcpy_chk@plt+0x2288>
   13094:	vmov	r1, s0
   13098:	cmp	r1, #10
   1309c:	mov	r5, #0
   130a0:	movls	r1, #10
   130a4:	orr	r6, r1, #1
   130a8:	cmn	r6, #1
   130ac:	bne	130c0 <__mempcpy_chk@plt+0x20b0>
   130b0:	b	13298 <__mempcpy_chk@plt+0x2288>
   130b4:	add	r6, r6, #2
   130b8:	cmn	r6, #1
   130bc:	beq	13298 <__mempcpy_chk@plt+0x2288>
   130c0:	mov	r0, #3
   130c4:	cmp	r6, #10
   130c8:	bcc	13100 <__mempcpy_chk@plt+0x20f0>
   130cc:	mov	r0, #3
   130d0:	mov	r2, #9
   130d4:	mov	r1, #12
   130d8:	udiv	r3, r6, r0
   130dc:	mls	r3, r3, r0, r6
   130e0:	cmp	r3, #0
   130e4:	beq	13100 <__mempcpy_chk@plt+0x20f0>
   130e8:	add	r2, r2, r1
   130ec:	add	r1, r1, #8
   130f0:	add	r0, r0, #2
   130f4:	add	r2, r2, #4
   130f8:	cmp	r2, r6
   130fc:	bcc	130d8 <__mempcpy_chk@plt+0x20c8>
   13100:	udiv	r1, r6, r0
   13104:	mls	r0, r1, r0, r6
   13108:	cmp	r0, #0
   1310c:	beq	130b4 <__mempcpy_chk@plt+0x20a4>
   13110:	sub	r0, r6, #1
   13114:	cmn	r0, #-536870910	; 0xe0000002
   13118:	bhi	13298 <__mempcpy_chk@plt+0x2288>
   1311c:	ldr	r0, [r4, #8]
   13120:	cmp	r6, r0
   13124:	bne	13130 <__mempcpy_chk@plt+0x2120>
   13128:	mov	r5, #1
   1312c:	b	13298 <__mempcpy_chk@plt+0x2288>
   13130:	mov	r0, r6
   13134:	mov	r1, #8
   13138:	bl	1666c <__mempcpy_chk@plt+0x565c>
   1313c:	cmp	r0, #0
   13140:	str	r0, [sp, #4]
   13144:	beq	13298 <__mempcpy_chk@plt+0x2288>
   13148:	mov	r1, #0
   1314c:	add	r0, r0, r6, lsl #3
   13150:	str	r6, [sp, #12]
   13154:	add	r5, sp, #4
   13158:	mov	sl, r4
   1315c:	mov	r2, #0
   13160:	str	r1, [sp, #16]
   13164:	str	r1, [sp, #20]
   13168:	str	r0, [sp, #8]
   1316c:	add	r0, r5, #20
   13170:	mov	r1, r4
   13174:	vld1.32	{d16-d17}, [r7]
   13178:	vst1.32	{d16-d17}, [r0]
   1317c:	ldr	r0, [sl, #36]!	; 0x24
   13180:	str	r0, [sp, #40]	; 0x28
   13184:	mov	r0, r5
   13188:	bl	132ac <__mempcpy_chk@plt+0x229c>
   1318c:	cmp	r0, #0
   13190:	beq	131b8 <__mempcpy_chk@plt+0x21a8>
   13194:	ldr	r0, [r4]
   13198:	bl	1279c <__mempcpy_chk@plt+0x178c>
   1319c:	mov	r0, #36	; 0x24
   131a0:	vld1.32	{d16-d17}, [r5], r0
   131a4:	vst1.32	{d16-d17}, [r4], r0
   131a8:	ldr	r0, [r5]
   131ac:	mov	r5, #1
   131b0:	str	r0, [r4]
   131b4:	b	13298 <__mempcpy_chk@plt+0x2288>
   131b8:	ldr	r0, [sp, #40]	; 0x28
   131bc:	str	r0, [sl]
   131c0:	ldr	r0, [sp, #8]
   131c4:	ldr	r8, [sp, #4]
   131c8:	cmp	r8, r0
   131cc:	str	r0, [sp]
   131d0:	bcs	13274 <__mempcpy_chk@plt+0x2264>
   131d4:	mov	r9, #0
   131d8:	ldr	r0, [r8]
   131dc:	cmp	r0, #0
   131e0:	beq	13264 <__mempcpy_chk@plt+0x2254>
   131e4:	ldr	r6, [r8, #4]
   131e8:	cmp	r6, #0
   131ec:	beq	13260 <__mempcpy_chk@plt+0x2250>
   131f0:	ldr	r1, [r4, #8]
   131f4:	ldr	r5, [r6]
   131f8:	ldr	r2, [r4, #24]
   131fc:	mov	r0, r5
   13200:	blx	r2
   13204:	ldr	r1, [r4, #8]
   13208:	cmp	r0, r1
   1320c:	bcs	132a4 <__mempcpy_chk@plt+0x2294>
   13210:	ldr	r3, [r4]
   13214:	ldr	r2, [r6, #4]
   13218:	ldr	r7, [r3, r0, lsl #3]
   1321c:	cmp	r7, #0
   13220:	beq	13230 <__mempcpy_chk@plt+0x2220>
   13224:	add	r0, r3, r0, lsl #3
   13228:	add	r0, r0, #4
   1322c:	b	13248 <__mempcpy_chk@plt+0x2238>
   13230:	str	r5, [r3, r0, lsl #3]
   13234:	ldr	r0, [r4, #12]
   13238:	add	r0, r0, #1
   1323c:	str	r0, [r4, #12]
   13240:	mov	r0, sl
   13244:	str	r9, [r6]
   13248:	ldr	r3, [r0]
   1324c:	cmp	r2, #0
   13250:	str	r3, [r6, #4]
   13254:	str	r6, [r0]
   13258:	mov	r6, r2
   1325c:	bne	131f4 <__mempcpy_chk@plt+0x21e4>
   13260:	str	r9, [r8, #4]
   13264:	ldr	r0, [sp]
   13268:	add	r8, r8, #8
   1326c:	cmp	r8, r0
   13270:	bcc	131d8 <__mempcpy_chk@plt+0x21c8>
   13274:	add	r1, sp, #4
   13278:	mov	r0, r4
   1327c:	mov	r2, #0
   13280:	mov	r5, #0
   13284:	bl	132ac <__mempcpy_chk@plt+0x229c>
   13288:	cmp	r0, #0
   1328c:	beq	132a4 <__mempcpy_chk@plt+0x2294>
   13290:	ldr	r0, [sp, #4]
   13294:	bl	1279c <__mempcpy_chk@plt+0x178c>
   13298:	mov	r0, r5
   1329c:	sub	sp, fp, #28
   132a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a4:	bl	10ff8 <abort@plt>
   132a8:	svcmi	0x00800000
   132ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132b0:	add	fp, sp, #28
   132b4:	sub	sp, sp, #12
   132b8:	ldr	sl, [r1]
   132bc:	str	r1, [sp, #8]
   132c0:	ldr	r1, [r1, #4]
   132c4:	mov	r7, r0
   132c8:	mov	r0, #1
   132cc:	str	r2, [sp, #4]
   132d0:	cmp	sl, r1
   132d4:	bcs	13430 <__mempcpy_chk@plt+0x2420>
   132d8:	add	r8, r7, #36	; 0x24
   132dc:	mov	r9, #0
   132e0:	ldr	r4, [sl]
   132e4:	cmp	r4, #0
   132e8:	beq	13418 <__mempcpy_chk@plt+0x2408>
   132ec:	ldr	r5, [sl, #4]
   132f0:	cmp	r5, #0
   132f4:	beq	1336c <__mempcpy_chk@plt+0x235c>
   132f8:	ldr	r1, [r7, #8]
   132fc:	ldr	r4, [r5]
   13300:	ldr	r2, [r7, #24]
   13304:	mov	r0, r4
   13308:	blx	r2
   1330c:	ldr	r1, [r7, #8]
   13310:	cmp	r0, r1
   13314:	bcs	13444 <__mempcpy_chk@plt+0x2434>
   13318:	ldr	r3, [r7]
   1331c:	ldr	r2, [r5, #4]
   13320:	ldr	r6, [r3, r0, lsl #3]
   13324:	cmp	r6, #0
   13328:	beq	13338 <__mempcpy_chk@plt+0x2328>
   1332c:	add	r0, r3, r0, lsl #3
   13330:	add	r0, r0, #4
   13334:	b	13350 <__mempcpy_chk@plt+0x2340>
   13338:	str	r4, [r3, r0, lsl #3]
   1333c:	ldr	r0, [r7, #12]
   13340:	add	r0, r0, #1
   13344:	str	r0, [r7, #12]
   13348:	mov	r0, r8
   1334c:	str	r9, [r5]
   13350:	ldr	r3, [r0]
   13354:	cmp	r2, #0
   13358:	str	r3, [r5, #4]
   1335c:	str	r5, [r0]
   13360:	mov	r5, r2
   13364:	bne	132fc <__mempcpy_chk@plt+0x22ec>
   13368:	ldr	r4, [sl]
   1336c:	ldr	r0, [sp, #4]
   13370:	str	r9, [sl, #4]
   13374:	cmp	r0, #0
   13378:	bne	13418 <__mempcpy_chk@plt+0x2408>
   1337c:	ldr	r1, [r7, #8]
   13380:	ldr	r2, [r7, #24]
   13384:	mov	r0, r4
   13388:	blx	r2
   1338c:	mov	r5, r0
   13390:	ldr	r0, [r7, #8]
   13394:	cmp	r5, r0
   13398:	bcs	13444 <__mempcpy_chk@plt+0x2434>
   1339c:	ldr	r6, [r7]
   133a0:	ldr	r0, [r6, r5, lsl #3]
   133a4:	cmp	r0, #0
   133a8:	beq	133c8 <__mempcpy_chk@plt+0x23b8>
   133ac:	ldr	r0, [r8]
   133b0:	cmp	r0, #0
   133b4:	beq	133dc <__mempcpy_chk@plt+0x23cc>
   133b8:	mov	r1, r0
   133bc:	ldr	r2, [r1, #4]!
   133c0:	str	r2, [r8]
   133c4:	b	133f0 <__mempcpy_chk@plt+0x23e0>
   133c8:	str	r4, [r6, r5, lsl #3]
   133cc:	ldr	r0, [r7, #12]
   133d0:	add	r0, r0, #1
   133d4:	str	r0, [r7, #12]
   133d8:	b	13404 <__mempcpy_chk@plt+0x23f4>
   133dc:	mov	r0, #8
   133e0:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   133e4:	cmp	r0, #0
   133e8:	beq	13438 <__mempcpy_chk@plt+0x2428>
   133ec:	add	r1, r0, #4
   133f0:	str	r4, [r0]
   133f4:	add	r2, r6, r5, lsl #3
   133f8:	ldr	r3, [r2, #4]
   133fc:	str	r3, [r1]
   13400:	str	r0, [r2, #4]
   13404:	ldr	r1, [sp, #8]
   13408:	str	r9, [sl]
   1340c:	ldr	r0, [r1, #12]
   13410:	sub	r0, r0, #1
   13414:	str	r0, [r1, #12]
   13418:	ldr	r0, [sp, #8]
   1341c:	add	sl, sl, #8
   13420:	ldr	r0, [r0, #4]
   13424:	cmp	sl, r0
   13428:	bcc	132e0 <__mempcpy_chk@plt+0x22d0>
   1342c:	mov	r0, #1
   13430:	sub	sp, fp, #28
   13434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13438:	mov	r0, #0
   1343c:	sub	sp, fp, #28
   13440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13444:	bl	10ff8 <abort@plt>
   13448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1344c:	add	fp, sp, #28
   13450:	sub	sp, sp, #4
   13454:	cmp	r1, #0
   13458:	beq	1377c <__mempcpy_chk@plt+0x276c>
   1345c:	mov	r8, r2
   13460:	mov	sl, r1
   13464:	ldr	r1, [r0, #8]
   13468:	ldr	r2, [r0, #24]
   1346c:	mov	r4, r0
   13470:	mov	r0, sl
   13474:	blx	r2
   13478:	mov	r7, r0
   1347c:	ldr	r0, [r4, #8]
   13480:	cmp	r7, r0
   13484:	bcs	1377c <__mempcpy_chk@plt+0x276c>
   13488:	ldr	r5, [r4]
   1348c:	mov	r9, r5
   13490:	ldr	r1, [r9, r7, lsl #3]!
   13494:	cmp	r1, #0
   13498:	beq	13524 <__mempcpy_chk@plt+0x2514>
   1349c:	cmp	r1, sl
   134a0:	beq	134cc <__mempcpy_chk@plt+0x24bc>
   134a4:	ldr	r2, [r4, #28]
   134a8:	mov	r0, sl
   134ac:	blx	r2
   134b0:	cmp	r0, #0
   134b4:	mov	r6, r9
   134b8:	beq	134e0 <__mempcpy_chk@plt+0x24d0>
   134bc:	ldr	r0, [r6]
   134c0:	cmp	r0, #0
   134c4:	bne	134d0 <__mempcpy_chk@plt+0x24c0>
   134c8:	b	13524 <__mempcpy_chk@plt+0x2514>
   134cc:	mov	r0, sl
   134d0:	cmp	r8, #0
   134d4:	mov	r7, #0
   134d8:	strne	r0, [r8]
   134dc:	b	13718 <__mempcpy_chk@plt+0x2708>
   134e0:	add	r6, r5, r7, lsl #3
   134e4:	ldr	r0, [r6, #4]!
   134e8:	cmp	r0, #0
   134ec:	beq	13524 <__mempcpy_chk@plt+0x2514>
   134f0:	ldr	r1, [r0]
   134f4:	cmp	r1, sl
   134f8:	beq	13518 <__mempcpy_chk@plt+0x2508>
   134fc:	ldr	r2, [r4, #28]
   13500:	mov	r0, sl
   13504:	blx	r2
   13508:	ldr	r6, [r6]
   1350c:	cmp	r0, #0
   13510:	beq	134e4 <__mempcpy_chk@plt+0x24d4>
   13514:	b	134bc <__mempcpy_chk@plt+0x24ac>
   13518:	mov	r0, sl
   1351c:	cmp	r0, #0
   13520:	bne	134d0 <__mempcpy_chk@plt+0x24c0>
   13524:	vldr	s0, [r4, #8]
   13528:	vldr	s2, [r4, #12]
   1352c:	ldr	r0, [r4, #20]
   13530:	vcvt.f32.u32	s0, s0
   13534:	vcvt.f32.u32	s4, s2
   13538:	vldr	s2, [r0, #8]
   1353c:	vmul.f32	s6, s2, s0
   13540:	vcmpe.f32	s6, s4
   13544:	vmrs	APSR_nzcv, fpscr
   13548:	bpl	1369c <__mempcpy_chk@plt+0x268c>
   1354c:	movw	r1, #29880	; 0x74b8
   13550:	movt	r1, #1
   13554:	cmp	r0, r1
   13558:	beq	135e4 <__mempcpy_chk@plt+0x25d4>
   1355c:	vldr	s6, [pc, #540]	; 13780 <__mempcpy_chk@plt+0x2770>
   13560:	vcmpe.f32	s2, s6
   13564:	vmrs	APSR_nzcv, fpscr
   13568:	ble	135d0 <__mempcpy_chk@plt+0x25c0>
   1356c:	vldr	s8, [pc, #528]	; 13784 <__mempcpy_chk@plt+0x2774>
   13570:	vcmpe.f32	s2, s8
   13574:	vmrs	APSR_nzcv, fpscr
   13578:	bpl	135d0 <__mempcpy_chk@plt+0x25c0>
   1357c:	vldr	s8, [pc, #516]	; 13788 <__mempcpy_chk@plt+0x2778>
   13580:	vldr	s10, [r0, #12]
   13584:	vcmpe.f32	s10, s8
   13588:	vmrs	APSR_nzcv, fpscr
   1358c:	ble	135d0 <__mempcpy_chk@plt+0x25c0>
   13590:	vldr	s8, [r0]
   13594:	vcmpe.f32	s8, #0.0
   13598:	vmrs	APSR_nzcv, fpscr
   1359c:	blt	135d0 <__mempcpy_chk@plt+0x25c0>
   135a0:	vadd.f32	s6, s8, s6
   135a4:	vcmpe.f32	s6, s2
   135a8:	vmrs	APSR_nzcv, fpscr
   135ac:	bpl	135d0 <__mempcpy_chk@plt+0x25c0>
   135b0:	vldr	s8, [r0, #4]
   135b4:	vmov.f32	s10, #112	; 0x3f800000  1.0
   135b8:	vcmpe.f32	s8, s10
   135bc:	vmrs	APSR_nzcv, fpscr
   135c0:	bhi	135d0 <__mempcpy_chk@plt+0x25c0>
   135c4:	vcmpe.f32	s6, s8
   135c8:	vmrs	APSR_nzcv, fpscr
   135cc:	bmi	135e8 <__mempcpy_chk@plt+0x25d8>
   135d0:	vldr	s2, [pc, #436]	; 1378c <__mempcpy_chk@plt+0x277c>
   135d4:	movw	r0, #29880	; 0x74b8
   135d8:	movt	r0, #1
   135dc:	str	r0, [r4, #20]
   135e0:	b	135e8 <__mempcpy_chk@plt+0x25d8>
   135e4:	mov	r0, r1
   135e8:	vmul.f32	s6, s2, s0
   135ec:	vcmpe.f32	s6, s4
   135f0:	vmrs	APSR_nzcv, fpscr
   135f4:	bpl	1369c <__mempcpy_chk@plt+0x268c>
   135f8:	vldr	s4, [r0, #12]
   135fc:	ldrb	r0, [r0, #16]
   13600:	mvn	r7, #0
   13604:	vmul.f32	s0, s4, s0
   13608:	vldr	s4, [pc, #384]	; 13790 <__mempcpy_chk@plt+0x2780>
   1360c:	cmp	r0, #0
   13610:	vmul.f32	s2, s2, s0
   13614:	vseleq.f32	s0, s2, s0
   13618:	vcmpe.f32	s0, s4
   1361c:	vmrs	APSR_nzcv, fpscr
   13620:	bge	13718 <__mempcpy_chk@plt+0x2708>
   13624:	vcvt.u32.f32	s0, s0
   13628:	mov	r0, r4
   1362c:	vmov	r1, s0
   13630:	bl	13048 <__mempcpy_chk@plt+0x2038>
   13634:	cmp	r0, #0
   13638:	beq	13718 <__mempcpy_chk@plt+0x2708>
   1363c:	ldr	r1, [r4, #8]
   13640:	ldr	r2, [r4, #24]
   13644:	mov	r0, sl
   13648:	blx	r2
   1364c:	mov	r7, r0
   13650:	ldr	r0, [r4, #8]
   13654:	cmp	r7, r0
   13658:	bcs	1377c <__mempcpy_chk@plt+0x276c>
   1365c:	ldr	r5, [r4]
   13660:	mov	r9, r5
   13664:	ldr	r1, [r9, r7, lsl #3]!
   13668:	cmp	r1, #0
   1366c:	beq	136c4 <__mempcpy_chk@plt+0x26b4>
   13670:	cmp	r1, sl
   13674:	mov	r0, sl
   13678:	beq	13694 <__mempcpy_chk@plt+0x2684>
   1367c:	ldr	r2, [r4, #28]
   13680:	mov	r0, sl
   13684:	blx	r2
   13688:	cmp	r0, #0
   1368c:	beq	1372c <__mempcpy_chk@plt+0x271c>
   13690:	ldr	r0, [r9]
   13694:	cmp	r0, #0
   13698:	bne	1377c <__mempcpy_chk@plt+0x276c>
   1369c:	ldr	r0, [r9]
   136a0:	cmp	r0, #0
   136a4:	beq	136c4 <__mempcpy_chk@plt+0x26b4>
   136a8:	ldr	r0, [r4, #36]	; 0x24
   136ac:	cmp	r0, #0
   136b0:	beq	136e4 <__mempcpy_chk@plt+0x26d4>
   136b4:	mov	r1, r0
   136b8:	ldr	r2, [r1, #4]!
   136bc:	str	r2, [r4, #36]	; 0x24
   136c0:	b	136f8 <__mempcpy_chk@plt+0x26e8>
   136c4:	str	sl, [r9]
   136c8:	ldr	r0, [r4, #12]
   136cc:	ldr	r1, [r4, #16]
   136d0:	add	r0, r0, #1
   136d4:	add	r1, r1, #1
   136d8:	str	r0, [r4, #12]
   136dc:	str	r1, [r4, #16]
   136e0:	b	13714 <__mempcpy_chk@plt+0x2704>
   136e4:	mov	r0, #8
   136e8:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   136ec:	cmp	r0, #0
   136f0:	beq	13724 <__mempcpy_chk@plt+0x2714>
   136f4:	add	r1, r0, #4
   136f8:	str	sl, [r0]
   136fc:	ldr	r2, [r9, #4]
   13700:	str	r2, [r1]
   13704:	str	r0, [r9, #4]
   13708:	ldr	r0, [r4, #16]
   1370c:	add	r0, r0, #1
   13710:	str	r0, [r4, #16]
   13714:	mov	r7, #1
   13718:	mov	r0, r7
   1371c:	sub	sp, fp, #28
   13720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13724:	mvn	r7, #0
   13728:	b	13718 <__mempcpy_chk@plt+0x2708>
   1372c:	add	r6, r5, r7, lsl #3
   13730:	ldr	r0, [r6, #4]!
   13734:	cmp	r0, #0
   13738:	beq	1369c <__mempcpy_chk@plt+0x268c>
   1373c:	ldr	r1, [r0]
   13740:	cmp	r1, sl
   13744:	beq	13770 <__mempcpy_chk@plt+0x2760>
   13748:	ldr	r2, [r4, #28]
   1374c:	mov	r0, sl
   13750:	blx	r2
   13754:	ldr	r6, [r6]
   13758:	cmp	r0, #0
   1375c:	beq	13730 <__mempcpy_chk@plt+0x2720>
   13760:	ldr	r0, [r6]
   13764:	cmp	r0, #0
   13768:	beq	1369c <__mempcpy_chk@plt+0x268c>
   1376c:	b	1377c <__mempcpy_chk@plt+0x276c>
   13770:	mov	r0, sl
   13774:	cmp	r0, #0
   13778:	beq	1369c <__mempcpy_chk@plt+0x268c>
   1377c:	bl	10ff8 <abort@plt>
   13780:	stclcc	12, cr12, [ip, #820]	; 0x334
   13784:	svccc	0x00666666
   13788:	svccc	0x008ccccd
   1378c:	svccc	0x004ccccd
   13790:	svcmi	0x00800000
   13794:	push	{r4, sl, fp, lr}
   13798:	add	fp, sp, #8
   1379c:	sub	sp, sp, #8
   137a0:	add	r2, sp, #4
   137a4:	mov	r4, r1
   137a8:	bl	13448 <__mempcpy_chk@plt+0x2438>
   137ac:	cmn	r0, #1
   137b0:	beq	137c4 <__mempcpy_chk@plt+0x27b4>
   137b4:	ldr	r1, [sp, #4]
   137b8:	cmp	r0, #0
   137bc:	moveq	r4, r1
   137c0:	b	137c8 <__mempcpy_chk@plt+0x27b8>
   137c4:	mov	r4, #0
   137c8:	mov	r0, r4
   137cc:	sub	sp, fp, #8
   137d0:	pop	{r4, sl, fp, pc}
   137d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   137d8:	add	fp, sp, #24
   137dc:	mov	r9, r1
   137e0:	ldr	r1, [r0, #8]
   137e4:	ldr	r2, [r0, #24]
   137e8:	mov	r5, r0
   137ec:	mov	r0, r9
   137f0:	blx	r2
   137f4:	mov	r7, r0
   137f8:	ldr	r0, [r5, #8]
   137fc:	cmp	r7, r0
   13800:	bcs	13a60 <__mempcpy_chk@plt+0x2a50>
   13804:	ldr	r6, [r5]
   13808:	mov	r8, #0
   1380c:	mov	r4, r6
   13810:	ldr	r1, [r4, r7, lsl #3]!
   13814:	cmp	r1, #0
   13818:	beq	138cc <__mempcpy_chk@plt+0x28bc>
   1381c:	cmp	r1, r9
   13820:	beq	1383c <__mempcpy_chk@plt+0x282c>
   13824:	ldr	r2, [r5, #28]
   13828:	mov	r0, r9
   1382c:	blx	r2
   13830:	cmp	r0, #0
   13834:	beq	13874 <__mempcpy_chk@plt+0x2864>
   13838:	ldr	r9, [r4]
   1383c:	add	r0, r6, r7, lsl #3
   13840:	ldr	r0, [r0, #4]
   13844:	cmp	r0, #0
   13848:	beq	138bc <__mempcpy_chk@plt+0x28ac>
   1384c:	ldm	r0, {r1, r2}
   13850:	stm	r4, {r1, r2}
   13854:	mov	r1, #0
   13858:	str	r1, [r0]
   1385c:	ldr	r1, [r5, #36]	; 0x24
   13860:	str	r1, [r0, #4]
   13864:	str	r0, [r5, #36]	; 0x24
   13868:	cmp	r9, #0
   1386c:	bne	13904 <__mempcpy_chk@plt+0x28f4>
   13870:	b	138cc <__mempcpy_chk@plt+0x28bc>
   13874:	add	r7, r6, r7, lsl #3
   13878:	ldr	r0, [r7, #4]!
   1387c:	cmp	r0, #0
   13880:	beq	138cc <__mempcpy_chk@plt+0x28bc>
   13884:	ldr	r1, [r0]
   13888:	cmp	r1, r9
   1388c:	beq	138d4 <__mempcpy_chk@plt+0x28c4>
   13890:	ldr	r2, [r5, #28]
   13894:	mov	r0, r9
   13898:	blx	r2
   1389c:	ldr	r1, [r7]
   138a0:	cmp	r0, #0
   138a4:	bne	138dc <__mempcpy_chk@plt+0x28cc>
   138a8:	ldr	r0, [r1, #4]!
   138ac:	cmp	r0, #0
   138b0:	mov	r7, r1
   138b4:	bne	13884 <__mempcpy_chk@plt+0x2874>
   138b8:	b	138cc <__mempcpy_chk@plt+0x28bc>
   138bc:	mov	r0, #0
   138c0:	str	r0, [r4]
   138c4:	cmp	r9, #0
   138c8:	bne	13904 <__mempcpy_chk@plt+0x28f4>
   138cc:	mov	r0, r8
   138d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138d4:	mov	r1, r0
   138d8:	b	138e0 <__mempcpy_chk@plt+0x28d0>
   138dc:	ldr	r9, [r1]
   138e0:	ldr	r0, [r1, #4]
   138e4:	str	r0, [r7]
   138e8:	mov	r0, #0
   138ec:	str	r0, [r1]
   138f0:	ldr	r0, [r5, #36]	; 0x24
   138f4:	str	r0, [r1, #4]
   138f8:	str	r1, [r5, #36]	; 0x24
   138fc:	cmp	r9, #0
   13900:	beq	138cc <__mempcpy_chk@plt+0x28bc>
   13904:	ldr	r0, [r5, #16]
   13908:	sub	r0, r0, #1
   1390c:	str	r0, [r5, #16]
   13910:	ldr	r0, [r4]
   13914:	cmp	r0, #0
   13918:	bne	13a20 <__mempcpy_chk@plt+0x2a10>
   1391c:	ldr	r0, [r5, #12]
   13920:	vldr	s0, [r5, #8]
   13924:	sub	r1, r0, #1
   13928:	str	r1, [r5, #12]
   1392c:	vmov	s2, r1
   13930:	ldr	r0, [r5, #20]
   13934:	vcvt.f32.u32	s0, s0
   13938:	vcvt.f32.u32	s2, s2
   1393c:	vldr	s4, [r0]
   13940:	vmul.f32	s6, s4, s0
   13944:	vcmpe.f32	s6, s2
   13948:	vmrs	APSR_nzcv, fpscr
   1394c:	ble	13a20 <__mempcpy_chk@plt+0x2a10>
   13950:	movw	r1, #29880	; 0x74b8
   13954:	movt	r1, #1
   13958:	cmp	r0, r1
   1395c:	beq	139b4 <__mempcpy_chk@plt+0x29a4>
   13960:	vldr	s8, [pc, #252]	; 13a64 <__mempcpy_chk@plt+0x2a54>
   13964:	vldr	s6, [r0, #8]
   13968:	vcmpe.f32	s6, s8
   1396c:	vmrs	APSR_nzcv, fpscr
   13970:	ble	139a0 <__mempcpy_chk@plt+0x2990>
   13974:	vldr	s10, [pc, #236]	; 13a68 <__mempcpy_chk@plt+0x2a58>
   13978:	vcmpe.f32	s6, s10
   1397c:	vmrs	APSR_nzcv, fpscr
   13980:	bpl	139a0 <__mempcpy_chk@plt+0x2990>
   13984:	vcmpe.f32	s4, #0.0
   13988:	vmrs	APSR_nzcv, fpscr
   1398c:	vldrge	s10, [r0, #12]
   13990:	vldrge	s12, [pc, #212]	; 13a6c <__mempcpy_chk@plt+0x2a5c>
   13994:	vcmpege.f32	s10, s12
   13998:	vmrsge	APSR_nzcv, fpscr
   1399c:	bgt	13a2c <__mempcpy_chk@plt+0x2a1c>
   139a0:	vldr	s4, [pc, #200]	; 13a70 <__mempcpy_chk@plt+0x2a60>
   139a4:	movw	r0, #29880	; 0x74b8
   139a8:	movt	r0, #1
   139ac:	str	r0, [r5, #20]
   139b0:	b	139b8 <__mempcpy_chk@plt+0x29a8>
   139b4:	mov	r0, r1
   139b8:	vmul.f32	s4, s4, s0
   139bc:	vcmpe.f32	s4, s2
   139c0:	vmrs	APSR_nzcv, fpscr
   139c4:	ble	13a20 <__mempcpy_chk@plt+0x2a10>
   139c8:	ldrb	r1, [r0, #16]
   139cc:	vldr	s2, [r0, #4]
   139d0:	cmp	r1, #0
   139d4:	vmul.f32	s0, s2, s0
   139d8:	vldreq	s2, [r0, #8]
   139dc:	mov	r0, r5
   139e0:	vmuleq.f32	s0, s0, s2
   139e4:	vcvt.u32.f32	s0, s0
   139e8:	vmov	r1, s0
   139ec:	bl	13048 <__mempcpy_chk@plt+0x2038>
   139f0:	cmp	r0, #0
   139f4:	bne	13a20 <__mempcpy_chk@plt+0x2a10>
   139f8:	ldr	r0, [r5, #36]	; 0x24
   139fc:	cmp	r0, #0
   13a00:	beq	13a18 <__mempcpy_chk@plt+0x2a08>
   13a04:	ldr	r4, [r0, #4]
   13a08:	bl	1279c <__mempcpy_chk@plt+0x178c>
   13a0c:	cmp	r4, #0
   13a10:	mov	r0, r4
   13a14:	bne	13a04 <__mempcpy_chk@plt+0x29f4>
   13a18:	mov	r0, #0
   13a1c:	str	r0, [r5, #36]	; 0x24
   13a20:	mov	r8, r9
   13a24:	mov	r0, r8
   13a28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13a2c:	vadd.f32	s8, s4, s8
   13a30:	vcmpe.f32	s8, s6
   13a34:	vmrs	APSR_nzcv, fpscr
   13a38:	bpl	139a0 <__mempcpy_chk@plt+0x2990>
   13a3c:	vldr	s6, [r0, #4]
   13a40:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13a44:	vcmpe.f32	s6, s10
   13a48:	vmrs	APSR_nzcv, fpscr
   13a4c:	bhi	139a0 <__mempcpy_chk@plt+0x2990>
   13a50:	vcmpe.f32	s8, s6
   13a54:	vmrs	APSR_nzcv, fpscr
   13a58:	bmi	139b8 <__mempcpy_chk@plt+0x29a8>
   13a5c:	b	139a0 <__mempcpy_chk@plt+0x2990>
   13a60:	bl	10ff8 <abort@plt>
   13a64:	stclcc	12, cr12, [ip, #820]	; 0x334
   13a68:	svccc	0x00666666
   13a6c:	svccc	0x008ccccd
   13a70:	andeq	r0, r0, r0
   13a74:	b	137d4 <__mempcpy_chk@plt+0x27c4>
   13a78:	push	{r4, r5, fp, lr}
   13a7c:	add	fp, sp, #8
   13a80:	mov	r5, r0
   13a84:	ldr	r0, [r0]
   13a88:	mov	r4, r1
   13a8c:	bl	16964 <__mempcpy_chk@plt+0x5954>
   13a90:	ldrd	r2, [r5, #8]
   13a94:	eor	r0, r2, r0
   13a98:	mov	r1, r3
   13a9c:	mov	r2, r4
   13aa0:	mov	r3, #0
   13aa4:	bl	16b7c <__mempcpy_chk@plt+0x5b6c>
   13aa8:	mov	r0, r2
   13aac:	pop	{r4, r5, fp, pc}
   13ab0:	push	{r4, r5, r6, r7, fp, lr}
   13ab4:	add	fp, sp, #16
   13ab8:	ldrd	r2, [r1, #8]
   13abc:	ldrd	r4, [r0, #8]
   13ac0:	eor	r3, r5, r3
   13ac4:	eor	r2, r4, r2
   13ac8:	orrs	r2, r2, r3
   13acc:	mov	r2, #0
   13ad0:	bne	13b00 <__mempcpy_chk@plt+0x2af0>
   13ad4:	ldrd	r4, [r1, #16]
   13ad8:	ldrd	r6, [r0, #16]
   13adc:	eor	r3, r7, r5
   13ae0:	eor	r7, r6, r4
   13ae4:	orrs	r3, r7, r3
   13ae8:	bne	13b00 <__mempcpy_chk@plt+0x2af0>
   13aec:	ldr	r1, [r1]
   13af0:	ldr	r0, [r0]
   13af4:	bl	10ddc <strcmp@plt>
   13af8:	clz	r0, r0
   13afc:	lsr	r2, r0, #5
   13b00:	mov	r0, r2
   13b04:	pop	{r4, r5, r6, r7, fp, pc}
   13b08:	push	{r4, sl, fp, lr}
   13b0c:	add	fp, sp, #8
   13b10:	mov	r4, r0
   13b14:	ldr	r0, [r0]
   13b18:	bl	1279c <__mempcpy_chk@plt+0x178c>
   13b1c:	mov	r0, r4
   13b20:	pop	{r4, sl, fp, lr}
   13b24:	b	1279c <__mempcpy_chk@plt+0x178c>
   13b28:	push	{r4, r5, fp, lr}
   13b2c:	add	fp, sp, #8
   13b30:	cmp	r0, #0
   13b34:	beq	13bc8 <__mempcpy_chk@plt+0x2bb8>
   13b38:	mov	r1, #47	; 0x2f
   13b3c:	mov	r4, r0
   13b40:	bl	10fbc <strrchr@plt>
   13b44:	cmp	r0, #0
   13b48:	mov	r5, r4
   13b4c:	addne	r5, r0, #1
   13b50:	sub	r0, r5, r4
   13b54:	cmp	r0, #7
   13b58:	blt	13bac <__mempcpy_chk@plt+0x2b9c>
   13b5c:	movw	r1, #29956	; 0x7504
   13b60:	sub	r0, r5, #7
   13b64:	mov	r2, #7
   13b68:	movt	r1, #1
   13b6c:	bl	10fec <strncmp@plt>
   13b70:	cmp	r0, #0
   13b74:	bne	13bac <__mempcpy_chk@plt+0x2b9c>
   13b78:	movw	r1, #29964	; 0x750c
   13b7c:	mov	r0, r5
   13b80:	mov	r2, #3
   13b84:	movt	r1, #1
   13b88:	bl	10fec <strncmp@plt>
   13b8c:	cmp	r0, #0
   13b90:	beq	13b9c <__mempcpy_chk@plt+0x2b8c>
   13b94:	mov	r4, r5
   13b98:	b	13bac <__mempcpy_chk@plt+0x2b9c>
   13b9c:	movw	r0, #33072	; 0x8130
   13ba0:	add	r4, r5, #3
   13ba4:	movt	r0, #2
   13ba8:	str	r4, [r0]
   13bac:	movw	r0, #33076	; 0x8134
   13bb0:	movt	r0, #2
   13bb4:	str	r4, [r0]
   13bb8:	movw	r0, #33124	; 0x8164
   13bbc:	movt	r0, #2
   13bc0:	str	r4, [r0]
   13bc4:	pop	{r4, r5, fp, pc}
   13bc8:	movw	r0, #33088	; 0x8140
   13bcc:	mov	r1, #55	; 0x37
   13bd0:	mov	r2, #1
   13bd4:	movt	r0, #2
   13bd8:	ldr	r3, [r0]
   13bdc:	movw	r0, #29900	; 0x74cc
   13be0:	movt	r0, #1
   13be4:	bl	10e90 <fwrite@plt>
   13be8:	bl	10ff8 <abort@plt>
   13bec:	push	{r4, r5, r6, sl, fp, lr}
   13bf0:	add	fp, sp, #16
   13bf4:	mov	r4, r0
   13bf8:	movw	r0, #33128	; 0x8168
   13bfc:	movt	r0, #2
   13c00:	cmp	r4, #0
   13c04:	moveq	r4, r0
   13c08:	bl	10f44 <__errno_location@plt>
   13c0c:	ldr	r6, [r0]
   13c10:	mov	r5, r0
   13c14:	mov	r0, r4
   13c18:	mov	r1, #48	; 0x30
   13c1c:	bl	16528 <__mempcpy_chk@plt+0x5518>
   13c20:	str	r6, [r5]
   13c24:	pop	{r4, r5, r6, sl, fp, pc}
   13c28:	movw	r1, #33128	; 0x8168
   13c2c:	cmp	r0, #0
   13c30:	movt	r1, #2
   13c34:	movne	r1, r0
   13c38:	ldr	r0, [r1]
   13c3c:	bx	lr
   13c40:	movw	r2, #33128	; 0x8168
   13c44:	cmp	r0, #0
   13c48:	movt	r2, #2
   13c4c:	movne	r2, r0
   13c50:	str	r1, [r2]
   13c54:	bx	lr
   13c58:	movw	r3, #33128	; 0x8168
   13c5c:	cmp	r0, #0
   13c60:	movt	r3, #2
   13c64:	movne	r3, r0
   13c68:	ubfx	r0, r1, #5, #3
   13c6c:	and	r1, r1, #31
   13c70:	add	r0, r3, r0, lsl #2
   13c74:	ldr	r3, [r0, #8]
   13c78:	eor	r2, r2, r3, lsr r1
   13c7c:	and	r2, r2, #1
   13c80:	eor	r2, r3, r2, lsl r1
   13c84:	str	r2, [r0, #8]
   13c88:	mov	r0, #1
   13c8c:	and	r0, r0, r3, lsr r1
   13c90:	bx	lr
   13c94:	movw	r2, #33128	; 0x8168
   13c98:	cmp	r0, #0
   13c9c:	movt	r2, #2
   13ca0:	movne	r2, r0
   13ca4:	ldr	r0, [r2, #4]
   13ca8:	str	r1, [r2, #4]
   13cac:	bx	lr
   13cb0:	movw	r3, #33128	; 0x8168
   13cb4:	cmp	r0, #0
   13cb8:	movt	r3, #2
   13cbc:	movne	r3, r0
   13cc0:	cmp	r1, #0
   13cc4:	mov	r0, #10
   13cc8:	cmpne	r2, #0
   13ccc:	str	r0, [r3]
   13cd0:	bne	13ce0 <__mempcpy_chk@plt+0x2cd0>
   13cd4:	push	{fp, lr}
   13cd8:	mov	fp, sp
   13cdc:	bl	10ff8 <abort@plt>
   13ce0:	str	r1, [r3, #40]	; 0x28
   13ce4:	str	r2, [r3, #44]	; 0x2c
   13ce8:	bx	lr
   13cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cf0:	add	fp, sp, #28
   13cf4:	sub	sp, sp, #20
   13cf8:	mov	r7, r0
   13cfc:	ldr	r0, [fp, #8]
   13d00:	movw	r5, #33128	; 0x8168
   13d04:	mov	r8, r3
   13d08:	mov	r9, r2
   13d0c:	mov	sl, r1
   13d10:	movt	r5, #2
   13d14:	cmp	r0, #0
   13d18:	movne	r5, r0
   13d1c:	bl	10f44 <__errno_location@plt>
   13d20:	mov	r4, r0
   13d24:	ldm	r5, {r0, r1}
   13d28:	ldr	r2, [r5, #40]	; 0x28
   13d2c:	ldr	r3, [r5, #44]	; 0x2c
   13d30:	add	r5, r5, #8
   13d34:	ldr	r6, [r4]
   13d38:	stm	sp, {r0, r1, r5}
   13d3c:	str	r2, [sp, #12]
   13d40:	str	r3, [sp, #16]
   13d44:	mov	r0, r7
   13d48:	mov	r1, sl
   13d4c:	mov	r2, r9
   13d50:	mov	r3, r8
   13d54:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   13d58:	str	r6, [r4]
   13d5c:	sub	sp, fp, #28
   13d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d68:	add	fp, sp, #28
   13d6c:	sub	sp, sp, #156	; 0x9c
   13d70:	str	r0, [sp, #80]	; 0x50
   13d74:	ldr	r0, [fp, #12]
   13d78:	mov	r6, r1
   13d7c:	mov	r9, r3
   13d80:	str	r2, [fp, #-84]	; 0xffffffac
   13d84:	and	r1, r0, #4
   13d88:	str	r1, [sp, #32]
   13d8c:	and	r1, r0, #1
   13d90:	str	r1, [sp, #36]	; 0x24
   13d94:	ubfx	r4, r0, #1, #1
   13d98:	bl	10ea8 <__ctype_get_mb_cur_max@plt>
   13d9c:	str	r0, [sp, #40]	; 0x28
   13da0:	ldr	r0, [fp, #24]
   13da4:	ldr	r7, [fp, #8]
   13da8:	mov	r1, #0
   13dac:	mov	r5, #1
   13db0:	str	r1, [fp, #-56]	; 0xffffffc8
   13db4:	mov	r1, #0
   13db8:	str	r1, [sp, #60]	; 0x3c
   13dbc:	str	r0, [sp, #76]	; 0x4c
   13dc0:	ldr	r0, [fp, #20]
   13dc4:	str	r0, [sp, #72]	; 0x48
   13dc8:	mov	r0, #0
   13dcc:	str	r0, [sp, #56]	; 0x38
   13dd0:	mov	r0, #0
   13dd4:	str	r0, [sp, #92]	; 0x5c
   13dd8:	mov	r0, #0
   13ddc:	str	r0, [fp, #-76]	; 0xffffffb4
   13de0:	mov	r0, #0
   13de4:	cmp	r7, #10
   13de8:	bhi	14d68 <__mempcpy_chk@plt+0x3d58>
   13dec:	add	r1, pc, #28
   13df0:	mov	sl, r6
   13df4:	ldr	r6, [sp, #80]	; 0x50
   13df8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13dfc:	mov	r8, #0
   13e00:	mov	r2, #1
   13e04:	mov	r3, #0
   13e08:	mov	lr, r9
   13e0c:	ldr	pc, [r1, r7, lsl #2]
   13e10:	strdeq	r3, [r1], -r4
   13e14:	andeq	r3, r1, r0, lsr #30
   13e18:	andeq	r3, r1, r4, ror #29
   13e1c:	ldrdeq	r3, [r1], -ip
   13e20:	andeq	r3, r1, r4, lsl pc
   13e24:	andeq	r3, r1, r8, ror #30
   13e28:	andeq	r3, r1, r4, lsl #30
   13e2c:	andeq	r3, r1, r4, asr #31
   13e30:	andeq	r3, r1, ip, lsr lr
   13e34:	andeq	r3, r1, ip, lsr lr
   13e38:	andeq	r3, r1, r4, ror #28
   13e3c:	movw	r0, #30048	; 0x7560
   13e40:	mov	r1, r7
   13e44:	movt	r0, #1
   13e48:	bl	15774 <__mempcpy_chk@plt+0x4764>
   13e4c:	str	r0, [sp, #72]	; 0x48
   13e50:	movw	r0, #30050	; 0x7562
   13e54:	mov	r1, r7
   13e58:	movt	r0, #1
   13e5c:	bl	15774 <__mempcpy_chk@plt+0x4764>
   13e60:	str	r0, [sp, #76]	; 0x4c
   13e64:	str	r5, [fp, #-48]	; 0xffffffd0
   13e68:	mov	r8, #0
   13e6c:	mov	r5, r7
   13e70:	tst	r4, #1
   13e74:	bne	13eac <__mempcpy_chk@plt+0x2e9c>
   13e78:	ldr	r0, [sp, #72]	; 0x48
   13e7c:	ldrb	r0, [r0]
   13e80:	cmp	r0, #0
   13e84:	beq	13eac <__mempcpy_chk@plt+0x2e9c>
   13e88:	ldr	r1, [sp, #72]	; 0x48
   13e8c:	mov	r8, #0
   13e90:	add	r1, r1, #1
   13e94:	cmp	r8, sl
   13e98:	strbcc	r0, [r6, r8]
   13e9c:	ldrb	r0, [r1, r8]
   13ea0:	add	r8, r8, #1
   13ea4:	cmp	r0, #0
   13ea8:	bne	13e94 <__mempcpy_chk@plt+0x2e84>
   13eac:	ldr	r7, [sp, #76]	; 0x4c
   13eb0:	mov	r0, r7
   13eb4:	bl	10f38 <strlen@plt>
   13eb8:	str	r7, [sp, #92]	; 0x5c
   13ebc:	mov	r7, r5
   13ec0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ec4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13ec8:	str	r0, [fp, #-76]	; 0xffffffb4
   13ecc:	mov	r2, #1
   13ed0:	mov	r3, r4
   13ed4:	mov	lr, r9
   13ed8:	b	13fc4 <__mempcpy_chk@plt+0x2fb4>
   13edc:	mov	r0, #1
   13ee0:	b	13f20 <__mempcpy_chk@plt+0x2f10>
   13ee4:	tst	r4, #1
   13ee8:	bne	13f20 <__mempcpy_chk@plt+0x2f10>
   13eec:	mov	r2, r0
   13ef0:	b	13f48 <__mempcpy_chk@plt+0x2f38>
   13ef4:	mov	r7, #0
   13ef8:	mov	r8, #0
   13efc:	mov	r2, r0
   13f00:	b	13fc0 <__mempcpy_chk@plt+0x2fb0>
   13f04:	mov	r0, #1
   13f08:	mov	r8, #0
   13f0c:	mov	r7, #5
   13f10:	b	13f7c <__mempcpy_chk@plt+0x2f6c>
   13f14:	mov	r2, #1
   13f18:	tst	r4, #1
   13f1c:	beq	13f48 <__mempcpy_chk@plt+0x2f38>
   13f20:	mov	r1, #1
   13f24:	mov	r8, #0
   13f28:	mov	r7, #2
   13f2c:	mov	r2, r0
   13f30:	mov	r3, #1
   13f34:	str	r1, [fp, #-76]	; 0xffffffb4
   13f38:	movw	r1, #30050	; 0x7562
   13f3c:	movt	r1, #1
   13f40:	str	r1, [sp, #92]	; 0x5c
   13f44:	b	13fc4 <__mempcpy_chk@plt+0x2fb4>
   13f48:	cmp	sl, #0
   13f4c:	mov	r8, #1
   13f50:	mov	r7, #2
   13f54:	movne	r0, #39	; 0x27
   13f58:	strbne	r0, [r6]
   13f5c:	movw	r0, #30050	; 0x7562
   13f60:	movt	r0, #1
   13f64:	b	13fb4 <__mempcpy_chk@plt+0x2fa4>
   13f68:	mov	r7, #5
   13f6c:	tst	r4, #1
   13f70:	beq	13f98 <__mempcpy_chk@plt+0x2f88>
   13f74:	mov	r0, #1
   13f78:	mov	r8, #0
   13f7c:	str	r0, [fp, #-76]	; 0xffffffb4
   13f80:	movw	r0, #30046	; 0x755e
   13f84:	mov	r2, #1
   13f88:	mov	r3, #1
   13f8c:	movt	r0, #1
   13f90:	str	r0, [sp, #92]	; 0x5c
   13f94:	b	13fc4 <__mempcpy_chk@plt+0x2fb4>
   13f98:	cmp	sl, #0
   13f9c:	mov	r8, #1
   13fa0:	mov	r2, #1
   13fa4:	movne	r0, #34	; 0x22
   13fa8:	strbne	r0, [r6]
   13fac:	movw	r0, #30046	; 0x755e
   13fb0:	movt	r0, #1
   13fb4:	str	r0, [sp, #92]	; 0x5c
   13fb8:	mov	r0, #1
   13fbc:	str	r0, [fp, #-76]	; 0xffffffb4
   13fc0:	mov	r3, #0
   13fc4:	ldr	r0, [fp, #16]
   13fc8:	str	r3, [fp, #-72]	; 0xffffffb8
   13fcc:	str	r7, [fp, #-64]	; 0xffffffc0
   13fd0:	str	r2, [sp, #84]	; 0x54
   13fd4:	cmp	r0, #0
   13fd8:	movwne	r0, #1
   13fdc:	and	r0, r0, r3
   13fe0:	str	r0, [fp, #-88]	; 0xffffffa8
   13fe4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13fe8:	cmp	r0, #0
   13fec:	movwne	r0, #1
   13ff0:	subs	r4, r7, #2
   13ff4:	mov	r7, #0
   13ff8:	and	r1, r0, r3
   13ffc:	str	r4, [fp, #-80]	; 0xffffffb0
   14000:	and	r1, r2, r1
   14004:	str	r1, [sp, #48]	; 0x30
   14008:	clz	r1, r4
   1400c:	lsr	r1, r1, #5
   14010:	and	r1, r1, r3
   14014:	eor	r3, r3, #1
   14018:	str	r1, [sp, #64]	; 0x40
   1401c:	mov	r1, r4
   14020:	str	r3, [sp, #88]	; 0x58
   14024:	movwne	r1, #1
   14028:	orr	r3, r1, r3
   1402c:	and	r1, r1, r2
   14030:	and	r0, r0, r1
   14034:	str	r3, [sp, #68]	; 0x44
   14038:	str	r1, [fp, #-68]	; 0xffffffbc
   1403c:	str	r0, [fp, #-60]	; 0xffffffc4
   14040:	eor	r0, r2, #1
   14044:	str	r0, [sp, #52]	; 0x34
   14048:	cmn	lr, #1
   1404c:	beq	1405c <__mempcpy_chk@plt+0x304c>
   14050:	cmp	r7, lr
   14054:	bne	14068 <__mempcpy_chk@plt+0x3058>
   14058:	b	14b90 <__mempcpy_chk@plt+0x3b80>
   1405c:	ldrb	r0, [ip, r7]
   14060:	cmp	r0, #0
   14064:	beq	14b98 <__mempcpy_chk@plt+0x3b88>
   14068:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1406c:	mov	r9, #0
   14070:	str	r5, [fp, #-48]	; 0xffffffd0
   14074:	cmp	r0, #0
   14078:	beq	140ac <__mempcpy_chk@plt+0x309c>
   1407c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14080:	add	r4, r7, r0
   14084:	cmp	r0, #2
   14088:	bcc	140a4 <__mempcpy_chk@plt+0x3094>
   1408c:	cmn	lr, #1
   14090:	bne	140a4 <__mempcpy_chk@plt+0x3094>
   14094:	mov	r0, ip
   14098:	bl	10f38 <strlen@plt>
   1409c:	ldr	ip, [fp, #-84]	; 0xffffffac
   140a0:	mov	lr, r0
   140a4:	cmp	r4, lr
   140a8:	bls	140b4 <__mempcpy_chk@plt+0x30a4>
   140ac:	mov	r0, #0
   140b0:	b	140f4 <__mempcpy_chk@plt+0x30e4>
   140b4:	ldr	r1, [sp, #92]	; 0x5c
   140b8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   140bc:	add	r0, ip, r7
   140c0:	mov	r4, lr
   140c4:	bl	10e3c <memcmp@plt>
   140c8:	ldr	r2, [sp, #88]	; 0x58
   140cc:	cmp	r0, #0
   140d0:	mov	r1, r0
   140d4:	movwne	r1, #1
   140d8:	orr	r1, r1, r2
   140dc:	tst	r1, #1
   140e0:	beq	14c28 <__mempcpy_chk@plt+0x3c18>
   140e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   140e8:	clz	r0, r0
   140ec:	mov	lr, r4
   140f0:	lsr	r0, r0, #5
   140f4:	str	r0, [fp, #-52]	; 0xffffffcc
   140f8:	ldrb	r5, [ip, r7]
   140fc:	cmp	r5, #126	; 0x7e
   14100:	bhi	144b8 <__mempcpy_chk@plt+0x34a8>
   14104:	add	r3, pc, #16
   14108:	mov	r4, #1
   1410c:	mov	r2, #110	; 0x6e
   14110:	mov	r0, #97	; 0x61
   14114:	mov	r1, #0
   14118:	ldr	pc, [r3, r5, lsl #2]
   1411c:			; <UNDEFINED> instruction: 0x000143b4
   14120:			; <UNDEFINED> instruction: 0x000144b8
   14124:			; <UNDEFINED> instruction: 0x000144b8
   14128:			; <UNDEFINED> instruction: 0x000144b8
   1412c:			; <UNDEFINED> instruction: 0x000144b8
   14130:			; <UNDEFINED> instruction: 0x000144b8
   14134:			; <UNDEFINED> instruction: 0x000144b8
   14138:	andeq	r4, r1, ip, ror #10
   1413c:	muleq	r1, r4, r3
   14140:	andeq	r4, r1, ip, lsl #7
   14144:	andeq	r4, r1, r0, lsr #7
   14148:	andeq	r4, r1, r0, lsr #8
   1414c:	andeq	r4, r1, r4, lsl #7
   14150:	muleq	r1, ip, r3
   14154:			; <UNDEFINED> instruction: 0x000144b8
   14158:			; <UNDEFINED> instruction: 0x000144b8
   1415c:			; <UNDEFINED> instruction: 0x000144b8
   14160:			; <UNDEFINED> instruction: 0x000144b8
   14164:			; <UNDEFINED> instruction: 0x000144b8
   14168:			; <UNDEFINED> instruction: 0x000144b8
   1416c:			; <UNDEFINED> instruction: 0x000144b8
   14170:			; <UNDEFINED> instruction: 0x000144b8
   14174:			; <UNDEFINED> instruction: 0x000144b8
   14178:			; <UNDEFINED> instruction: 0x000144b8
   1417c:			; <UNDEFINED> instruction: 0x000144b8
   14180:			; <UNDEFINED> instruction: 0x000144b8
   14184:			; <UNDEFINED> instruction: 0x000144b8
   14188:			; <UNDEFINED> instruction: 0x000144b8
   1418c:			; <UNDEFINED> instruction: 0x000144b8
   14190:			; <UNDEFINED> instruction: 0x000144b8
   14194:			; <UNDEFINED> instruction: 0x000144b8
   14198:			; <UNDEFINED> instruction: 0x000144b8
   1419c:	andeq	r4, r1, r4, lsr #10
   141a0:	andeq	r4, r1, r8, lsr #10
   141a4:	andeq	r4, r1, r8, lsr #10
   141a8:	andeq	r4, r1, ip, lsr #6
   141ac:	andeq	r4, r1, r8, lsr #10
   141b0:	andeq	r4, r1, r8, lsl r3
   141b4:	andeq	r4, r1, r8, lsr #10
   141b8:	andeq	r4, r1, r8, lsr #8
   141bc:	andeq	r4, r1, r8, lsr #10
   141c0:	andeq	r4, r1, r8, lsr #10
   141c4:	andeq	r4, r1, r8, lsr #10
   141c8:	andeq	r4, r1, r8, lsl r3
   141cc:	andeq	r4, r1, r8, lsl r3
   141d0:	andeq	r4, r1, r8, lsl r3
   141d4:	andeq	r4, r1, r8, lsl r3
   141d8:	andeq	r4, r1, r8, lsl r3
   141dc:	andeq	r4, r1, r8, lsl r3
   141e0:	andeq	r4, r1, r8, lsl r3
   141e4:	andeq	r4, r1, r8, lsl r3
   141e8:	andeq	r4, r1, r8, lsl r3
   141ec:	andeq	r4, r1, r8, lsl r3
   141f0:	andeq	r4, r1, r8, lsl r3
   141f4:	andeq	r4, r1, r8, lsl r3
   141f8:	andeq	r4, r1, r8, lsl r3
   141fc:	andeq	r4, r1, r8, lsl r3
   14200:	andeq	r4, r1, r8, lsl r3
   14204:	andeq	r4, r1, r8, lsl r3
   14208:	andeq	r4, r1, r8, lsr #10
   1420c:	andeq	r4, r1, r8, lsr #10
   14210:	andeq	r4, r1, r8, lsr #10
   14214:	andeq	r4, r1, r8, lsr #10
   14218:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1421c:			; <UNDEFINED> instruction: 0x000144b8
   14220:	andeq	r4, r1, r8, lsl r3
   14224:	andeq	r4, r1, r8, lsl r3
   14228:	andeq	r4, r1, r8, lsl r3
   1422c:	andeq	r4, r1, r8, lsl r3
   14230:	andeq	r4, r1, r8, lsl r3
   14234:	andeq	r4, r1, r8, lsl r3
   14238:	andeq	r4, r1, r8, lsl r3
   1423c:	andeq	r4, r1, r8, lsl r3
   14240:	andeq	r4, r1, r8, lsl r3
   14244:	andeq	r4, r1, r8, lsl r3
   14248:	andeq	r4, r1, r8, lsl r3
   1424c:	andeq	r4, r1, r8, lsl r3
   14250:	andeq	r4, r1, r8, lsl r3
   14254:	andeq	r4, r1, r8, lsl r3
   14258:	andeq	r4, r1, r8, lsl r3
   1425c:	andeq	r4, r1, r8, lsl r3
   14260:	andeq	r4, r1, r8, lsl r3
   14264:	andeq	r4, r1, r8, lsl r3
   14268:	andeq	r4, r1, r8, lsl r3
   1426c:	andeq	r4, r1, r8, lsl r3
   14270:	andeq	r4, r1, r8, lsl r3
   14274:	andeq	r4, r1, r8, lsl r3
   14278:	andeq	r4, r1, r8, lsl r3
   1427c:	andeq	r4, r1, r8, lsl r3
   14280:	andeq	r4, r1, r8, lsl r3
   14284:	andeq	r4, r1, r8, lsl r3
   14288:	andeq	r4, r1, r8, lsr #10
   1428c:	andeq	r4, r1, r0, ror #6
   14290:	andeq	r4, r1, r8, lsl r3
   14294:	andeq	r4, r1, r8, lsr #10
   14298:	andeq	r4, r1, r8, lsl r3
   1429c:	andeq	r4, r1, r8, lsr #10
   142a0:	andeq	r4, r1, r8, lsl r3
   142a4:	andeq	r4, r1, r8, lsl r3
   142a8:	andeq	r4, r1, r8, lsl r3
   142ac:	andeq	r4, r1, r8, lsl r3
   142b0:	andeq	r4, r1, r8, lsl r3
   142b4:	andeq	r4, r1, r8, lsl r3
   142b8:	andeq	r4, r1, r8, lsl r3
   142bc:	andeq	r4, r1, r8, lsl r3
   142c0:	andeq	r4, r1, r8, lsl r3
   142c4:	andeq	r4, r1, r8, lsl r3
   142c8:	andeq	r4, r1, r8, lsl r3
   142cc:	andeq	r4, r1, r8, lsl r3
   142d0:	andeq	r4, r1, r8, lsl r3
   142d4:	andeq	r4, r1, r8, lsl r3
   142d8:	andeq	r4, r1, r8, lsl r3
   142dc:	andeq	r4, r1, r8, lsl r3
   142e0:	andeq	r4, r1, r8, lsl r3
   142e4:	andeq	r4, r1, r8, lsl r3
   142e8:	andeq	r4, r1, r8, lsl r3
   142ec:	andeq	r4, r1, r8, lsl r3
   142f0:	andeq	r4, r1, r8, lsl r3
   142f4:	andeq	r4, r1, r8, lsl r3
   142f8:	andeq	r4, r1, r8, lsl r3
   142fc:	andeq	r4, r1, r8, lsl r3
   14300:	andeq	r4, r1, r8, lsl r3
   14304:	andeq	r4, r1, r8, lsl r3
   14308:	andeq	r4, r1, r0, asr #6
   1430c:	andeq	r4, r1, r8, lsr #10
   14310:	andeq	r4, r1, r0, asr #6
   14314:	andeq	r4, r1, ip, lsr #6
   14318:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1431c:	cmp	r0, #0
   14320:	beq	14580 <__mempcpy_chk@plt+0x3570>
   14324:	ldr	r0, [fp, #16]
   14328:	b	14584 <__mempcpy_chk@plt+0x3574>
   1432c:	mov	r4, #0
   14330:	cmp	r7, #0
   14334:	beq	14524 <__mempcpy_chk@plt+0x3514>
   14338:	mov	r9, #0
   1433c:	b	14318 <__mempcpy_chk@plt+0x3308>
   14340:	mov	r4, #0
   14344:	cmn	lr, #1
   14348:	beq	14508 <__mempcpy_chk@plt+0x34f8>
   1434c:	cmp	r7, #0
   14350:	bne	14338 <__mempcpy_chk@plt+0x3328>
   14354:	cmp	lr, #1
   14358:	beq	14524 <__mempcpy_chk@plt+0x3514>
   1435c:	b	14338 <__mempcpy_chk@plt+0x3328>
   14360:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14364:	cmp	r0, #2
   14368:	bne	14548 <__mempcpy_chk@plt+0x3538>
   1436c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14370:	tst	r0, #1
   14374:	bne	14c44 <__mempcpy_chk@plt+0x3c34>
   14378:	mov	r9, #0
   1437c:	mov	r0, #92	; 0x5c
   14380:	b	1455c <__mempcpy_chk@plt+0x354c>
   14384:	mov	r0, #102	; 0x66
   14388:	b	1456c <__mempcpy_chk@plt+0x355c>
   1438c:	mov	r2, #116	; 0x74
   14390:	b	143a0 <__mempcpy_chk@plt+0x3390>
   14394:	mov	r0, #98	; 0x62
   14398:	b	1456c <__mempcpy_chk@plt+0x355c>
   1439c:	mov	r2, #114	; 0x72
   143a0:	ldr	r0, [sp, #68]	; 0x44
   143a4:	tst	r0, #1
   143a8:	mov	r0, r2
   143ac:	bne	1456c <__mempcpy_chk@plt+0x355c>
   143b0:	b	14c44 <__mempcpy_chk@plt+0x3c34>
   143b4:	ldr	r0, [sp, #84]	; 0x54
   143b8:	tst	r0, #1
   143bc:	beq	1465c <__mempcpy_chk@plt+0x364c>
   143c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143c4:	tst	r0, #1
   143c8:	bne	14d54 <__mempcpy_chk@plt+0x3d44>
   143cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   143d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143d4:	cmp	r0, #2
   143d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   143dc:	movwne	r0, #1
   143e0:	orr	r0, r0, r2
   143e4:	tst	r0, #1
   143e8:	beq	14a2c <__mempcpy_chk@plt+0x3a1c>
   143ec:	mov	r0, r8
   143f0:	b	14a60 <__mempcpy_chk@plt+0x3a50>
   143f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   143f8:	mov	r9, #0
   143fc:	mov	r5, #63	; 0x3f
   14400:	cmp	r0, #5
   14404:	beq	14810 <__mempcpy_chk@plt+0x3800>
   14408:	cmp	r0, #2
   1440c:	bne	148b4 <__mempcpy_chk@plt+0x38a4>
   14410:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14414:	tst	r0, #1
   14418:	beq	148b8 <__mempcpy_chk@plt+0x38a8>
   1441c:	b	14c44 <__mempcpy_chk@plt+0x3c34>
   14420:	mov	r0, #118	; 0x76
   14424:	b	1456c <__mempcpy_chk@plt+0x355c>
   14428:	mov	r0, #1
   1442c:	mov	r5, #39	; 0x27
   14430:	str	r0, [sp, #60]	; 0x3c
   14434:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14438:	cmp	r0, #2
   1443c:	bne	144b0 <__mempcpy_chk@plt+0x34a0>
   14440:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14444:	tst	r0, #1
   14448:	bne	14c44 <__mempcpy_chk@plt+0x3c34>
   1444c:	ldr	r2, [sp, #56]	; 0x38
   14450:	clz	r1, sl
   14454:	mov	r9, #0
   14458:	lsr	r1, r1, #5
   1445c:	cmp	r2, #0
   14460:	mov	r0, r2
   14464:	movwne	r0, #1
   14468:	orrs	r0, r0, r1
   1446c:	moveq	r2, sl
   14470:	moveq	sl, r0
   14474:	cmp	r8, sl
   14478:	str	r2, [sp, #56]	; 0x38
   1447c:	movcc	r0, #39	; 0x27
   14480:	strbcc	r0, [r6, r8]
   14484:	add	r0, r8, #1
   14488:	cmp	r0, sl
   1448c:	movcc	r1, #92	; 0x5c
   14490:	strbcc	r1, [r6, r0]
   14494:	add	r0, r8, #2
   14498:	add	r8, r8, #3
   1449c:	cmp	r0, sl
   144a0:	movcc	r1, #39	; 0x27
   144a4:	strbcc	r1, [r6, r0]
   144a8:	mov	r0, #0
   144ac:	str	r0, [fp, #-56]	; 0xffffffc8
   144b0:	mov	r4, #1
   144b4:	b	14318 <__mempcpy_chk@plt+0x3308>
   144b8:	ldr	r0, [sp, #40]	; 0x28
   144bc:	cmp	r0, #1
   144c0:	bne	14688 <__mempcpy_chk@plt+0x3678>
   144c4:	str	lr, [sp, #28]
   144c8:	bl	10f14 <__ctype_b_loc@plt>
   144cc:	ldr	r0, [r0]
   144d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   144d4:	mov	r1, #1
   144d8:	add	r0, r0, r5, lsl #1
   144dc:	ldrb	r0, [r0, #1]
   144e0:	ubfx	r4, r0, #6, #1
   144e4:	ldr	r0, [sp, #52]	; 0x34
   144e8:	mov	r2, r1
   144ec:	cmp	r1, #1
   144f0:	orr	r0, r4, r0
   144f4:	bhi	148c0 <__mempcpy_chk@plt+0x38b0>
   144f8:	tst	r0, #1
   144fc:	beq	148c0 <__mempcpy_chk@plt+0x38b0>
   14500:	ldr	lr, [sp, #28]
   14504:	b	14318 <__mempcpy_chk@plt+0x3308>
   14508:	cmp	r7, #0
   1450c:	ldrbeq	r0, [ip, #1]
   14510:	cmpeq	r0, #0
   14514:	beq	14524 <__mempcpy_chk@plt+0x3514>
   14518:	mvn	lr, #0
   1451c:	mov	r9, #0
   14520:	b	14318 <__mempcpy_chk@plt+0x3308>
   14524:	mov	r1, #1
   14528:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1452c:	cmp	r0, #2
   14530:	bne	14540 <__mempcpy_chk@plt+0x3530>
   14534:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14538:	tst	r0, #1
   1453c:	bne	14c44 <__mempcpy_chk@plt+0x3c34>
   14540:	mov	r4, r1
   14544:	b	14318 <__mempcpy_chk@plt+0x3308>
   14548:	ldr	r1, [sp, #48]	; 0x30
   1454c:	mov	r9, #0
   14550:	mov	r0, #92	; 0x5c
   14554:	cmp	r1, #0
   14558:	beq	1456c <__mempcpy_chk@plt+0x355c>
   1455c:	mov	r4, #0
   14560:	cmp	r9, #0
   14564:	beq	14af8 <__mempcpy_chk@plt+0x3ae8>
   14568:	b	14b34 <__mempcpy_chk@plt+0x3b24>
   1456c:	ldr	r1, [sp, #84]	; 0x54
   14570:	mov	r4, #0
   14574:	mov	r9, #0
   14578:	tst	r1, #1
   1457c:	bne	145bc <__mempcpy_chk@plt+0x35ac>
   14580:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14584:	cmp	r0, #0
   14588:	mov	r0, r5
   1458c:	beq	145b0 <__mempcpy_chk@plt+0x35a0>
   14590:	ldr	r1, [fp, #16]
   14594:	ubfx	r0, r5, #5, #3
   14598:	mov	r2, #1
   1459c:	ldr	r0, [r1, r0, lsl #2]
   145a0:	and	r1, r5, #31
   145a4:	tst	r0, r2, lsl r1
   145a8:	mov	r0, r5
   145ac:	bne	145bc <__mempcpy_chk@plt+0x35ac>
   145b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145b4:	cmp	r1, #0
   145b8:	beq	14af0 <__mempcpy_chk@plt+0x3ae0>
   145bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   145c0:	tst	r1, #1
   145c4:	bne	14c1c <__mempcpy_chk@plt+0x3c0c>
   145c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   145cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   145d0:	cmp	r1, #2
   145d4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   145d8:	movwne	r1, #1
   145dc:	orr	r1, r1, r2
   145e0:	tst	r1, #1
   145e4:	beq	145f0 <__mempcpy_chk@plt+0x35e0>
   145e8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   145ec:	b	1462c <__mempcpy_chk@plt+0x361c>
   145f0:	cmp	r8, sl
   145f4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   145f8:	movcc	r1, #39	; 0x27
   145fc:	strbcc	r1, [r6, r8]
   14600:	add	r1, r8, #1
   14604:	cmp	r1, sl
   14608:	movcc	r2, #36	; 0x24
   1460c:	strbcc	r2, [r6, r1]
   14610:	add	r1, r8, #2
   14614:	add	r8, r8, #3
   14618:	cmp	r1, sl
   1461c:	movcc	r2, #39	; 0x27
   14620:	strbcc	r2, [r6, r1]
   14624:	mov	r1, #1
   14628:	str	r1, [fp, #-56]	; 0xffffffc8
   1462c:	cmp	r8, sl
   14630:	movcc	r1, #92	; 0x5c
   14634:	strbcc	r1, [r6, r8]
   14638:	add	r8, r8, #1
   1463c:	cmp	r8, sl
   14640:	and	r5, r5, r4
   14644:	add	r7, r7, #1
   14648:	strbcc	r0, [r6, r8]
   1464c:	add	r8, r8, #1
   14650:	cmn	lr, #1
   14654:	bne	14050 <__mempcpy_chk@plt+0x3040>
   14658:	b	1405c <__mempcpy_chk@plt+0x304c>
   1465c:	ldr	r0, [sp, #36]	; 0x24
   14660:	mov	r4, #0
   14664:	mov	r9, #0
   14668:	mov	r5, #0
   1466c:	cmp	r0, #0
   14670:	beq	14580 <__mempcpy_chk@plt+0x3570>
   14674:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14678:	add	r7, r7, #1
   1467c:	cmn	lr, #1
   14680:	bne	14050 <__mempcpy_chk@plt+0x3040>
   14684:	b	1405c <__mempcpy_chk@plt+0x304c>
   14688:	mov	r0, #0
   1468c:	cmn	lr, #1
   14690:	str	r0, [fp, #-36]	; 0xffffffdc
   14694:	str	r0, [fp, #-40]	; 0xffffffd8
   14698:	bne	146ac <__mempcpy_chk@plt+0x369c>
   1469c:	mov	r0, ip
   146a0:	bl	10f38 <strlen@plt>
   146a4:	ldr	ip, [fp, #-84]	; 0xffffffac
   146a8:	mov	lr, r0
   146ac:	add	r0, ip, r7
   146b0:	mov	r4, #1
   146b4:	mov	r6, #0
   146b8:	str	lr, [sp, #28]
   146bc:	str	r0, [sp, #24]
   146c0:	sub	r0, fp, #40	; 0x28
   146c4:	mov	r3, r0
   146c8:	str	r6, [sp, #44]	; 0x2c
   146cc:	add	r6, r6, r7
   146d0:	sub	r0, fp, #44	; 0x2c
   146d4:	add	r1, ip, r6
   146d8:	sub	r2, lr, r6
   146dc:	bl	169d8 <__mempcpy_chk@plt+0x59c8>
   146e0:	cmp	r0, #0
   146e4:	beq	14b7c <__mempcpy_chk@plt+0x3b6c>
   146e8:	cmn	r0, #1
   146ec:	beq	14b3c <__mempcpy_chk@plt+0x3b2c>
   146f0:	ldr	lr, [sp, #28]
   146f4:	cmn	r0, #2
   146f8:	beq	14b44 <__mempcpy_chk@plt+0x3b34>
   146fc:	ldr	r2, [sp, #64]	; 0x40
   14700:	cmp	r0, #2
   14704:	mov	r1, #0
   14708:	movwcc	r1, #1
   1470c:	eor	r2, r2, #1
   14710:	orrs	r1, r2, r1
   14714:	bne	147d4 <__mempcpy_chk@plt+0x37c4>
   14718:	ldr	r1, [sp, #44]	; 0x2c
   1471c:	ldr	r2, [sp, #24]
   14720:	add	r1, r2, r1
   14724:	mov	r2, #1
   14728:	ldrb	r3, [r1, r2]
   1472c:	sub	r3, r3, #91	; 0x5b
   14730:	cmp	r3, #33	; 0x21
   14734:	bhi	147c8 <__mempcpy_chk@plt+0x37b8>
   14738:	add	r6, pc, #0
   1473c:	ldr	pc, [r6, r3, lsl #2]
   14740:	andeq	r4, r1, ip, lsr ip
   14744:	andeq	r4, r1, ip, lsr ip
   14748:	andeq	r4, r1, r8, asr #15
   1474c:	andeq	r4, r1, ip, lsr ip
   14750:	andeq	r4, r1, r8, asr #15
   14754:	andeq	r4, r1, ip, lsr ip
   14758:	andeq	r4, r1, r8, asr #15
   1475c:	andeq	r4, r1, r8, asr #15
   14760:	andeq	r4, r1, r8, asr #15
   14764:	andeq	r4, r1, r8, asr #15
   14768:	andeq	r4, r1, r8, asr #15
   1476c:	andeq	r4, r1, r8, asr #15
   14770:	andeq	r4, r1, r8, asr #15
   14774:	andeq	r4, r1, r8, asr #15
   14778:	andeq	r4, r1, r8, asr #15
   1477c:	andeq	r4, r1, r8, asr #15
   14780:	andeq	r4, r1, r8, asr #15
   14784:	andeq	r4, r1, r8, asr #15
   14788:	andeq	r4, r1, r8, asr #15
   1478c:	andeq	r4, r1, r8, asr #15
   14790:	andeq	r4, r1, r8, asr #15
   14794:	andeq	r4, r1, r8, asr #15
   14798:	andeq	r4, r1, r8, asr #15
   1479c:	andeq	r4, r1, r8, asr #15
   147a0:	andeq	r4, r1, r8, asr #15
   147a4:	andeq	r4, r1, r8, asr #15
   147a8:	andeq	r4, r1, r8, asr #15
   147ac:	andeq	r4, r1, r8, asr #15
   147b0:	andeq	r4, r1, r8, asr #15
   147b4:	andeq	r4, r1, r8, asr #15
   147b8:	andeq	r4, r1, r8, asr #15
   147bc:	andeq	r4, r1, r8, asr #15
   147c0:	andeq	r4, r1, r8, asr #15
   147c4:	andeq	r4, r1, ip, lsr ip
   147c8:	add	r2, r2, #1
   147cc:	cmp	r2, r0
   147d0:	bcc	14728 <__mempcpy_chk@plt+0x3718>
   147d4:	ldr	r6, [sp, #44]	; 0x2c
   147d8:	add	r6, r0, r6
   147dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147e0:	bl	10e78 <iswprint@plt>
   147e4:	cmp	r0, #0
   147e8:	movwne	r0, #1
   147ec:	and	r4, r4, r0
   147f0:	sub	r0, fp, #40	; 0x28
   147f4:	bl	10e30 <mbsinit@plt>
   147f8:	ldr	lr, [sp, #28]
   147fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14800:	sub	r3, fp, #40	; 0x28
   14804:	cmp	r0, #0
   14808:	beq	146c8 <__mempcpy_chk@plt+0x36b8>
   1480c:	b	14b84 <__mempcpy_chk@plt+0x3b74>
   14810:	ldr	r0, [sp, #32]
   14814:	cmp	r0, #0
   14818:	beq	148b4 <__mempcpy_chk@plt+0x38a4>
   1481c:	add	r0, r7, #2
   14820:	cmp	r0, lr
   14824:	bcs	148b4 <__mempcpy_chk@plt+0x38a4>
   14828:	add	r1, ip, r7
   1482c:	ldrb	r1, [r1, #1]
   14830:	cmp	r1, #63	; 0x3f
   14834:	bne	148b4 <__mempcpy_chk@plt+0x38a4>
   14838:	ldrb	r5, [ip, r0]
   1483c:	sub	r1, r5, #33	; 0x21
   14840:	cmp	r1, #29
   14844:	bhi	148b4 <__mempcpy_chk@plt+0x38a4>
   14848:	movw	r3, #20929	; 0x51c1
   1484c:	mov	r2, #1
   14850:	movt	r3, #14336	; 0x3800
   14854:	tst	r3, r2, lsl r1
   14858:	beq	148b4 <__mempcpy_chk@plt+0x38a4>
   1485c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14860:	tst	r1, #1
   14864:	bne	14d5c <__mempcpy_chk@plt+0x3d4c>
   14868:	cmp	r8, sl
   1486c:	mov	r7, r0
   14870:	mov	r4, #0
   14874:	movcc	r1, #63	; 0x3f
   14878:	strbcc	r1, [r6, r8]
   1487c:	add	r1, r8, #1
   14880:	cmp	r1, sl
   14884:	movcc	r2, #34	; 0x22
   14888:	strbcc	r2, [r6, r1]
   1488c:	add	r1, r8, #2
   14890:	cmp	r1, sl
   14894:	movcc	r2, #34	; 0x22
   14898:	strbcc	r2, [r6, r1]
   1489c:	add	r1, r8, #3
   148a0:	add	r8, r8, #4
   148a4:	cmp	r1, sl
   148a8:	movcc	r2, #63	; 0x3f
   148ac:	strbcc	r2, [r6, r1]
   148b0:	b	14318 <__mempcpy_chk@plt+0x3308>
   148b4:	mov	r5, #63	; 0x3f
   148b8:	mov	r4, #0
   148bc:	b	14318 <__mempcpy_chk@plt+0x3308>
   148c0:	add	r1, r2, r7
   148c4:	ldr	lr, [sp, #28]
   148c8:	mov	r3, #0
   148cc:	str	r1, [sp, #44]	; 0x2c
   148d0:	add	r1, r7, #1
   148d4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   148d8:	tst	r0, #1
   148dc:	bne	149b0 <__mempcpy_chk@plt+0x39a0>
   148e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   148e4:	tst	r2, #1
   148e8:	bne	14ca4 <__mempcpy_chk@plt+0x3c94>
   148ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   148f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   148f4:	cmp	r7, #2
   148f8:	movwne	r3, #1
   148fc:	orr	r3, r3, r2
   14900:	tst	r3, #1
   14904:	bne	14940 <__mempcpy_chk@plt+0x3930>
   14908:	cmp	r8, sl
   1490c:	add	r3, r8, #1
   14910:	movcc	r2, #39	; 0x27
   14914:	strbcc	r2, [r6, r8]
   14918:	cmp	r3, sl
   1491c:	movcc	r2, #36	; 0x24
   14920:	strbcc	r2, [r6, r3]
   14924:	add	r3, r8, #2
   14928:	add	r8, r8, #3
   1492c:	cmp	r3, sl
   14930:	movcc	r2, #39	; 0x27
   14934:	strbcc	r2, [r6, r3]
   14938:	mov	r2, #1
   1493c:	str	r2, [fp, #-56]	; 0xffffffc8
   14940:	cmp	r8, sl
   14944:	movcc	r3, #92	; 0x5c
   14948:	strbcc	r3, [r6, r8]
   1494c:	add	r3, r8, #1
   14950:	cmp	r3, sl
   14954:	andcc	r7, r5, #192	; 0xc0
   14958:	movcc	r2, #48	; 0x30
   1495c:	orrcc	r7, r2, r7, lsr #6
   14960:	strbcc	r7, [r6, r3]
   14964:	add	r3, r8, #2
   14968:	add	r8, r8, #3
   1496c:	cmp	r3, sl
   14970:	lsrcc	r7, r5, #3
   14974:	movcc	r2, #6
   14978:	bficc	r7, r2, #3, #29
   1497c:	mov	r2, #6
   14980:	strbcc	r7, [r6, r3]
   14984:	bfi	r5, r2, #3, #29
   14988:	mov	r3, #1
   1498c:	b	149d4 <__mempcpy_chk@plt+0x39c4>
   14990:	cmp	r8, sl
   14994:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14998:	strbcc	r5, [r6, r8]
   1499c:	add	r8, r8, #1
   149a0:	ldrb	r5, [ip, r1]
   149a4:	add	r1, r1, #1
   149a8:	tst	r0, #1
   149ac:	beq	148e0 <__mempcpy_chk@plt+0x38d0>
   149b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   149b4:	tst	r2, #1
   149b8:	beq	149cc <__mempcpy_chk@plt+0x39bc>
   149bc:	cmp	r8, sl
   149c0:	movcc	r7, #92	; 0x5c
   149c4:	strbcc	r7, [r6, r8]
   149c8:	add	r8, r8, #1
   149cc:	mov	r2, #0
   149d0:	str	r2, [fp, #-52]	; 0xffffffcc
   149d4:	ldr	r2, [sp, #44]	; 0x2c
   149d8:	and	r9, r3, #1
   149dc:	cmp	r2, r1
   149e0:	bls	14ae0 <__mempcpy_chk@plt+0x3ad0>
   149e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   149e8:	cmp	r9, #0
   149ec:	movwne	r9, #1
   149f0:	mvn	r7, r2
   149f4:	orr	r7, r7, r9
   149f8:	tst	r7, #1
   149fc:	bne	14990 <__mempcpy_chk@plt+0x3980>
   14a00:	cmp	r8, sl
   14a04:	movcc	r7, #39	; 0x27
   14a08:	strbcc	r7, [r6, r8]
   14a0c:	add	r7, r8, #1
   14a10:	add	r8, r8, #2
   14a14:	cmp	r7, sl
   14a18:	movcc	r2, #39	; 0x27
   14a1c:	strbcc	r2, [r6, r7]
   14a20:	mov	r2, #0
   14a24:	str	r2, [fp, #-56]	; 0xffffffc8
   14a28:	b	14990 <__mempcpy_chk@plt+0x3980>
   14a2c:	cmp	r8, sl
   14a30:	mov	r2, #1
   14a34:	movcc	r0, #39	; 0x27
   14a38:	strbcc	r0, [r6, r8]
   14a3c:	add	r0, r8, #1
   14a40:	cmp	r0, sl
   14a44:	movcc	r1, #36	; 0x24
   14a48:	strbcc	r1, [r6, r0]
   14a4c:	add	r0, r8, #2
   14a50:	cmp	r0, sl
   14a54:	movcc	r1, #39	; 0x27
   14a58:	strbcc	r1, [r6, r0]
   14a5c:	add	r0, r8, #3
   14a60:	cmp	r0, sl
   14a64:	add	r8, r0, #1
   14a68:	str	r2, [fp, #-56]	; 0xffffffc8
   14a6c:	movcc	r1, #92	; 0x5c
   14a70:	strbcc	r1, [r6, r0]
   14a74:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14a78:	cmp	r1, #2
   14a7c:	beq	14ad0 <__mempcpy_chk@plt+0x3ac0>
   14a80:	add	r1, r7, #1
   14a84:	mov	r4, #0
   14a88:	mov	r9, #1
   14a8c:	mov	r5, #48	; 0x30
   14a90:	cmp	r1, lr
   14a94:	bcs	14318 <__mempcpy_chk@plt+0x3308>
   14a98:	ldrb	r1, [ip, r1]
   14a9c:	sub	r1, r1, #48	; 0x30
   14aa0:	uxtb	r1, r1
   14aa4:	cmp	r1, #9
   14aa8:	bhi	14318 <__mempcpy_chk@plt+0x3308>
   14aac:	cmp	r8, sl
   14ab0:	movcc	r1, #48	; 0x30
   14ab4:	strbcc	r1, [r6, r8]
   14ab8:	add	r1, r0, #2
   14abc:	add	r8, r0, #3
   14ac0:	cmp	r1, sl
   14ac4:	movcc	r2, #48	; 0x30
   14ac8:	strbcc	r2, [r6, r1]
   14acc:	b	14318 <__mempcpy_chk@plt+0x3308>
   14ad0:	mov	r0, #48	; 0x30
   14ad4:	mov	r9, #1
   14ad8:	mov	r4, #0
   14adc:	b	145b0 <__mempcpy_chk@plt+0x35a0>
   14ae0:	cmp	r9, #0
   14ae4:	sub	r7, r1, #1
   14ae8:	mov	r0, r5
   14aec:	movwne	r9, #1
   14af0:	cmp	r9, #0
   14af4:	bne	14b34 <__mempcpy_chk@plt+0x3b24>
   14af8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14afc:	tst	r1, #1
   14b00:	beq	14b34 <__mempcpy_chk@plt+0x3b24>
   14b04:	cmp	r8, sl
   14b08:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b0c:	movcc	r1, #39	; 0x27
   14b10:	strbcc	r1, [r6, r8]
   14b14:	add	r1, r8, #1
   14b18:	add	r8, r8, #2
   14b1c:	cmp	r1, sl
   14b20:	movcc	r2, #39	; 0x27
   14b24:	strbcc	r2, [r6, r1]
   14b28:	mov	r1, #0
   14b2c:	str	r1, [fp, #-56]	; 0xffffffc8
   14b30:	b	1463c <__mempcpy_chk@plt+0x362c>
   14b34:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b38:	b	1463c <__mempcpy_chk@plt+0x362c>
   14b3c:	mov	r4, #0
   14b40:	b	14b7c <__mempcpy_chk@plt+0x3b6c>
   14b44:	mov	r4, #0
   14b48:	cmp	lr, r6
   14b4c:	bls	14b7c <__mempcpy_chk@plt+0x3b6c>
   14b50:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b54:	ldr	r6, [sp, #44]	; 0x2c
   14b58:	ldr	r0, [sp, #24]
   14b5c:	ldrb	r0, [r0, r6]
   14b60:	cmp	r0, #0
   14b64:	beq	14b84 <__mempcpy_chk@plt+0x3b74>
   14b68:	add	r6, r6, #1
   14b6c:	add	r0, r7, r6
   14b70:	cmp	r0, lr
   14b74:	bcc	14b58 <__mempcpy_chk@plt+0x3b48>
   14b78:	b	14b84 <__mempcpy_chk@plt+0x3b74>
   14b7c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b80:	ldr	r6, [sp, #44]	; 0x2c
   14b84:	mov	r1, r6
   14b88:	ldr	r6, [sp, #80]	; 0x50
   14b8c:	b	144e4 <__mempcpy_chk@plt+0x34d4>
   14b90:	mov	lr, r7
   14b94:	b	14b9c <__mempcpy_chk@plt+0x3b8c>
   14b98:	mvn	lr, #0
   14b9c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14ba0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14ba4:	eor	r0, r7, #2
   14ba8:	orr	r0, r0, r8
   14bac:	clz	r0, r0
   14bb0:	lsr	r0, r0, #5
   14bb4:	tst	r1, r0
   14bb8:	bne	14c44 <__mempcpy_chk@plt+0x3c34>
   14bbc:	mov	r0, r1
   14bc0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14bc4:	cmp	r7, #2
   14bc8:	movwne	r1, #1
   14bcc:	orr	r0, r0, r1
   14bd0:	tst	r0, #1
   14bd4:	ldreq	r0, [sp, #60]	; 0x3c
   14bd8:	eoreq	r0, r0, #1
   14bdc:	tsteq	r0, #1
   14be0:	bne	14cf0 <__mempcpy_chk@plt+0x3ce0>
   14be4:	mov	r9, lr
   14be8:	tst	r5, #1
   14bec:	bne	14cac <__mempcpy_chk@plt+0x3c9c>
   14bf0:	ldr	r6, [sp, #56]	; 0x38
   14bf4:	mov	r4, #0
   14bf8:	cmp	r6, #0
   14bfc:	beq	14ce8 <__mempcpy_chk@plt+0x3cd8>
   14c00:	ldr	r0, [sp, #84]	; 0x54
   14c04:	mov	r1, #0
   14c08:	cmp	sl, #0
   14c0c:	mov	r5, #0
   14c10:	str	r1, [fp, #-72]	; 0xffffffb8
   14c14:	beq	13de4 <__mempcpy_chk@plt+0x2dd4>
   14c18:	b	14cf0 <__mempcpy_chk@plt+0x3ce0>
   14c1c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14c20:	ldr	r2, [sp, #84]	; 0x54
   14c24:	b	14c4c <__mempcpy_chk@plt+0x3c3c>
   14c28:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c2c:	mov	r2, #1
   14c30:	mov	lr, r4
   14c34:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14c38:	b	14c4c <__mempcpy_chk@plt+0x3c3c>
   14c3c:	ldr	r6, [sp, #80]	; 0x50
   14c40:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c44:	ldr	r2, [sp, #84]	; 0x54
   14c48:	mov	r7, #2
   14c4c:	mov	r0, #0
   14c50:	ldr	r1, [fp, #12]
   14c54:	tst	r2, #1
   14c58:	mov	r2, r7
   14c5c:	mov	r3, lr
   14c60:	str	r0, [sp, #8]
   14c64:	ldr	r0, [sp, #72]	; 0x48
   14c68:	movwne	r2, #4
   14c6c:	cmp	r7, #2
   14c70:	movne	r2, r7
   14c74:	str	r2, [sp]
   14c78:	mov	r2, ip
   14c7c:	bic	r1, r1, #2
   14c80:	str	r0, [sp, #12]
   14c84:	ldr	r0, [sp, #76]	; 0x4c
   14c88:	str	r1, [sp, #4]
   14c8c:	mov	r1, sl
   14c90:	str	r0, [sp, #16]
   14c94:	mov	r0, r6
   14c98:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   14c9c:	mov	r8, r0
   14ca0:	b	14d48 <__mempcpy_chk@plt+0x3d38>
   14ca4:	ldr	r2, [sp, #84]	; 0x54
   14ca8:	b	14c4c <__mempcpy_chk@plt+0x3c3c>
   14cac:	mov	r0, #5
   14cb0:	ldr	r1, [sp, #56]	; 0x38
   14cb4:	ldr	r2, [fp, #-84]	; 0xffffffac
   14cb8:	mov	r3, r9
   14cbc:	str	r0, [sp]
   14cc0:	ldr	r0, [fp, #12]
   14cc4:	str	r0, [sp, #4]
   14cc8:	ldr	r0, [fp, #16]
   14ccc:	str	r0, [sp, #8]
   14cd0:	ldr	r0, [sp, #72]	; 0x48
   14cd4:	str	r0, [sp, #12]
   14cd8:	ldr	r0, [sp, #76]	; 0x4c
   14cdc:	str	r0, [sp, #16]
   14ce0:	ldr	r0, [sp, #80]	; 0x50
   14ce4:	b	14c98 <__mempcpy_chk@plt+0x3c88>
   14ce8:	mov	r0, #0
   14cec:	str	r0, [fp, #-72]	; 0xffffffb8
   14cf0:	ldr	r1, [sp, #92]	; 0x5c
   14cf4:	cmp	r1, #0
   14cf8:	beq	14d38 <__mempcpy_chk@plt+0x3d28>
   14cfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14d00:	ldr	r2, [sp, #80]	; 0x50
   14d04:	tst	r0, #1
   14d08:	bne	14d3c <__mempcpy_chk@plt+0x3d2c>
   14d0c:	ldrb	r0, [r1]
   14d10:	cmp	r0, #0
   14d14:	beq	14d3c <__mempcpy_chk@plt+0x3d2c>
   14d18:	add	r1, r1, #1
   14d1c:	cmp	r8, sl
   14d20:	strbcc	r0, [r2, r8]
   14d24:	add	r8, r8, #1
   14d28:	ldrb	r0, [r1], #1
   14d2c:	cmp	r0, #0
   14d30:	bne	14d1c <__mempcpy_chk@plt+0x3d0c>
   14d34:	b	14d3c <__mempcpy_chk@plt+0x3d2c>
   14d38:	ldr	r2, [sp, #80]	; 0x50
   14d3c:	cmp	r8, sl
   14d40:	movcc	r0, #0
   14d44:	strbcc	r0, [r2, r8]
   14d48:	mov	r0, r8
   14d4c:	sub	sp, fp, #28
   14d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d54:	mov	r2, #1
   14d58:	b	14c34 <__mempcpy_chk@plt+0x3c24>
   14d5c:	ldr	r2, [sp, #84]	; 0x54
   14d60:	mov	r7, #5
   14d64:	b	14c4c <__mempcpy_chk@plt+0x3c3c>
   14d68:	bl	10ff8 <abort@plt>
   14d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d70:	add	fp, sp, #28
   14d74:	sub	sp, sp, #28
   14d78:	movw	r5, #33128	; 0x8168
   14d7c:	cmp	r2, #0
   14d80:	mov	r4, r1
   14d84:	mov	r7, r0
   14d88:	str	r0, [sp, #20]
   14d8c:	movt	r5, #2
   14d90:	movne	r5, r2
   14d94:	bl	10f44 <__errno_location@plt>
   14d98:	mov	sl, r0
   14d9c:	ldm	r5, {r0, r1}
   14da0:	ldr	r2, [r5, #40]	; 0x28
   14da4:	ldr	r3, [r5, #44]	; 0x2c
   14da8:	add	r9, r5, #8
   14dac:	ldr	r6, [sl]
   14db0:	orr	r8, r1, #1
   14db4:	mov	r1, #0
   14db8:	str	r6, [sp, #24]
   14dbc:	stm	sp, {r0, r8, r9}
   14dc0:	str	r2, [sp, #12]
   14dc4:	str	r3, [sp, #16]
   14dc8:	mov	r0, #0
   14dcc:	mov	r2, r7
   14dd0:	mov	r3, r4
   14dd4:	mov	r6, r4
   14dd8:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   14ddc:	add	r7, r0, #1
   14de0:	mov	r0, r7
   14de4:	bl	160f8 <__mempcpy_chk@plt+0x50e8>
   14de8:	mov	r4, r0
   14dec:	ldr	r0, [r5]
   14df0:	ldr	r2, [r5, #44]	; 0x2c
   14df4:	ldr	r1, [r5, #40]	; 0x28
   14df8:	mov	r3, r6
   14dfc:	stm	sp, {r0, r8, r9}
   14e00:	str	r2, [sp, #16]
   14e04:	str	r1, [sp, #12]
   14e08:	mov	r0, r4
   14e0c:	mov	r1, r7
   14e10:	ldr	r2, [sp, #20]
   14e14:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   14e18:	ldr	r0, [sp, #24]
   14e1c:	str	r0, [sl]
   14e20:	mov	r0, r4
   14e24:	sub	sp, fp, #28
   14e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e30:	add	fp, sp, #28
   14e34:	sub	sp, sp, #36	; 0x24
   14e38:	movw	r8, #33128	; 0x8168
   14e3c:	cmp	r3, #0
   14e40:	mov	r4, r2
   14e44:	str	r2, [sp, #24]
   14e48:	mov	r5, r1
   14e4c:	mov	r6, r0
   14e50:	str	r0, [sp, #20]
   14e54:	movt	r8, #2
   14e58:	movne	r8, r3
   14e5c:	bl	10f44 <__errno_location@plt>
   14e60:	str	r0, [sp, #28]
   14e64:	cmp	r4, #0
   14e68:	add	sl, r8, #8
   14e6c:	ldm	r8, {r3, r9}
   14e70:	ldr	r7, [r0]
   14e74:	ldr	r1, [r8, #40]	; 0x28
   14e78:	ldr	r2, [r8, #44]	; 0x2c
   14e7c:	mov	r0, #0
   14e80:	orreq	r9, r9, #1
   14e84:	str	r7, [sp, #32]
   14e88:	mov	r7, r5
   14e8c:	stm	sp, {r3, r9, sl}
   14e90:	str	r1, [sp, #12]
   14e94:	str	r2, [sp, #16]
   14e98:	mov	r1, #0
   14e9c:	mov	r2, r6
   14ea0:	mov	r3, r5
   14ea4:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   14ea8:	add	r4, r0, #1
   14eac:	mov	r5, r0
   14eb0:	mov	r0, r4
   14eb4:	bl	160f8 <__mempcpy_chk@plt+0x50e8>
   14eb8:	mov	r6, r0
   14ebc:	ldr	r0, [r8]
   14ec0:	ldr	r2, [r8, #44]	; 0x2c
   14ec4:	ldr	r1, [r8, #40]	; 0x28
   14ec8:	mov	r3, r7
   14ecc:	stm	sp, {r0, r9, sl}
   14ed0:	str	r2, [sp, #16]
   14ed4:	str	r1, [sp, #12]
   14ed8:	mov	r0, r6
   14edc:	mov	r1, r4
   14ee0:	ldr	r2, [sp, #20]
   14ee4:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   14ee8:	ldr	r0, [sp, #24]
   14eec:	ldr	r1, [sp, #32]
   14ef0:	ldr	r2, [sp, #28]
   14ef4:	cmp	r0, #0
   14ef8:	str	r1, [r2]
   14efc:	strne	r5, [r0]
   14f00:	mov	r0, r6
   14f04:	sub	sp, fp, #28
   14f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f10:	add	fp, sp, #24
   14f14:	movw	r5, #33012	; 0x80f4
   14f18:	movw	r8, #33008	; 0x80f0
   14f1c:	movt	r5, #2
   14f20:	movt	r8, #2
   14f24:	ldr	r0, [r5]
   14f28:	ldr	r4, [r8]
   14f2c:	cmp	r0, #2
   14f30:	blt	14f5c <__mempcpy_chk@plt+0x3f4c>
   14f34:	add	r7, r4, #12
   14f38:	mov	r6, #0
   14f3c:	ldr	r0, [r7, r6, lsl #3]
   14f40:	bl	1279c <__mempcpy_chk@plt+0x178c>
   14f44:	ldr	r1, [r5]
   14f48:	add	r2, r6, #2
   14f4c:	add	r0, r6, #1
   14f50:	mov	r6, r0
   14f54:	cmp	r2, r1
   14f58:	blt	14f3c <__mempcpy_chk@plt+0x3f2c>
   14f5c:	ldr	r0, [r4, #4]
   14f60:	movw	r7, #33176	; 0x8198
   14f64:	movt	r7, #2
   14f68:	cmp	r0, r7
   14f6c:	beq	14f84 <__mempcpy_chk@plt+0x3f74>
   14f70:	bl	1279c <__mempcpy_chk@plt+0x178c>
   14f74:	movw	r0, #33016	; 0x80f8
   14f78:	mov	r6, #256	; 0x100
   14f7c:	movt	r0, #2
   14f80:	strd	r6, [r0]
   14f84:	movw	r6, #33016	; 0x80f8
   14f88:	movt	r6, #2
   14f8c:	cmp	r4, r6
   14f90:	beq	14fa0 <__mempcpy_chk@plt+0x3f90>
   14f94:	mov	r0, r4
   14f98:	bl	1279c <__mempcpy_chk@plt+0x178c>
   14f9c:	str	r6, [r8]
   14fa0:	mov	r0, #1
   14fa4:	str	r0, [r5]
   14fa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fac:	movw	r3, #33128	; 0x8168
   14fb0:	mvn	r2, #0
   14fb4:	movt	r3, #2
   14fb8:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   14fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fc0:	add	fp, sp, #28
   14fc4:	sub	sp, sp, #44	; 0x2c
   14fc8:	mov	r7, r3
   14fcc:	str	r2, [sp, #36]	; 0x24
   14fd0:	str	r1, [sp, #32]
   14fd4:	mov	r5, r0
   14fd8:	bl	10f44 <__errno_location@plt>
   14fdc:	cmp	r5, #0
   14fe0:	blt	1514c <__mempcpy_chk@plt+0x413c>
   14fe4:	cmn	r5, #-2147483647	; 0x80000001
   14fe8:	beq	1514c <__mempcpy_chk@plt+0x413c>
   14fec:	movw	r8, #33012	; 0x80f4
   14ff0:	movw	r4, #33008	; 0x80f0
   14ff4:	str	r0, [sp, #28]
   14ff8:	ldr	r0, [r0]
   14ffc:	movt	r8, #2
   15000:	movt	r4, #2
   15004:	ldr	r1, [r8]
   15008:	ldr	r6, [r4]
   1500c:	str	r0, [sp, #24]
   15010:	cmp	r1, r5
   15014:	ble	15020 <__mempcpy_chk@plt+0x4010>
   15018:	mov	sl, r6
   1501c:	b	15088 <__mempcpy_chk@plt+0x4078>
   15020:	movw	r9, #33016	; 0x80f8
   15024:	mov	r0, #8
   15028:	add	r2, r5, #1
   1502c:	str	r1, [fp, #-32]	; 0xffffffe0
   15030:	mvn	r3, #-2147483648	; 0x80000000
   15034:	movt	r9, #2
   15038:	str	r0, [sp]
   1503c:	sub	r2, r2, r1
   15040:	sub	r1, fp, #32
   15044:	subs	r0, r6, r9
   15048:	movne	r0, r6
   1504c:	bl	162f8 <__mempcpy_chk@plt+0x52e8>
   15050:	cmp	r6, r9
   15054:	mov	sl, r0
   15058:	str	r0, [r4]
   1505c:	ldrdeq	r0, [r9]
   15060:	stmeq	sl, {r0, r1}
   15064:	ldr	r1, [r8]
   15068:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1506c:	add	r0, sl, r1, lsl #3
   15070:	sub	r1, r2, r1
   15074:	lsl	r2, r1, #3
   15078:	mov	r1, #0
   1507c:	bl	10f5c <memset@plt>
   15080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15084:	str	r0, [r8]
   15088:	mov	r9, sl
   1508c:	ldr	r6, [r9, r5, lsl #3]!
   15090:	ldr	r4, [r9, #4]!
   15094:	ldm	r7, {r0, r1}
   15098:	ldr	r2, [r7, #40]	; 0x28
   1509c:	ldr	r3, [r7, #44]	; 0x2c
   150a0:	orr	r8, r1, #1
   150a4:	add	r1, r7, #8
   150a8:	stm	sp, {r0, r8}
   150ac:	add	r0, sp, #8
   150b0:	str	r1, [sp, #20]
   150b4:	stm	r0, {r1, r2, r3}
   150b8:	mov	r0, r4
   150bc:	mov	r1, r6
   150c0:	ldr	r2, [sp, #32]
   150c4:	ldr	r3, [sp, #36]	; 0x24
   150c8:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   150cc:	cmp	r6, r0
   150d0:	bhi	15134 <__mempcpy_chk@plt+0x4124>
   150d4:	add	r6, r0, #1
   150d8:	movw	r0, #33176	; 0x8198
   150dc:	movt	r0, #2
   150e0:	str	r6, [sl, r5, lsl #3]
   150e4:	cmp	r4, r0
   150e8:	beq	150f4 <__mempcpy_chk@plt+0x40e4>
   150ec:	mov	r0, r4
   150f0:	bl	1279c <__mempcpy_chk@plt+0x178c>
   150f4:	mov	r0, r6
   150f8:	bl	160f8 <__mempcpy_chk@plt+0x50e8>
   150fc:	str	r0, [r9]
   15100:	mov	r4, r0
   15104:	add	r3, sp, #8
   15108:	ldr	r0, [r7]
   1510c:	ldr	r1, [r7, #40]	; 0x28
   15110:	ldr	r2, [r7, #44]	; 0x2c
   15114:	stm	sp, {r0, r8}
   15118:	ldr	r0, [sp, #20]
   1511c:	stm	r3, {r0, r1, r2}
   15120:	mov	r0, r4
   15124:	mov	r1, r6
   15128:	ldr	r2, [sp, #32]
   1512c:	ldr	r3, [sp, #36]	; 0x24
   15130:	bl	13d64 <__mempcpy_chk@plt+0x2d54>
   15134:	ldr	r0, [sp, #28]
   15138:	ldr	r1, [sp, #24]
   1513c:	str	r1, [r0]
   15140:	mov	r0, r4
   15144:	sub	sp, fp, #28
   15148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1514c:	bl	10ff8 <abort@plt>
   15150:	movw	r3, #33128	; 0x8168
   15154:	movt	r3, #2
   15158:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   1515c:	movw	r3, #33128	; 0x8168
   15160:	mov	r1, r0
   15164:	mov	r0, #0
   15168:	mvn	r2, #0
   1516c:	movt	r3, #2
   15170:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   15174:	movw	r3, #33128	; 0x8168
   15178:	mov	r2, r1
   1517c:	mov	r1, r0
   15180:	mov	r0, #0
   15184:	movt	r3, #2
   15188:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   1518c:	push	{fp, lr}
   15190:	mov	fp, sp
   15194:	sub	sp, sp, #48	; 0x30
   15198:	vmov.i32	q8, #0	; 0x00000000
   1519c:	mov	ip, #32
   151a0:	mov	r3, sp
   151a4:	mov	lr, r2
   151a8:	cmp	r1, #10
   151ac:	add	r2, r3, #16
   151b0:	vst1.64	{d16-d17}, [r3], ip
   151b4:	vst1.64	{d16-d17}, [r3]
   151b8:	vst1.64	{d16-d17}, [r2]
   151bc:	beq	151dc <__mempcpy_chk@plt+0x41cc>
   151c0:	str	r1, [sp]
   151c4:	mov	r3, sp
   151c8:	mov	r1, lr
   151cc:	mvn	r2, #0
   151d0:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   151d4:	mov	sp, fp
   151d8:	pop	{fp, pc}
   151dc:	bl	10ff8 <abort@plt>
   151e0:	push	{r4, sl, fp, lr}
   151e4:	add	fp, sp, #8
   151e8:	sub	sp, sp, #48	; 0x30
   151ec:	mov	ip, r3
   151f0:	mov	r3, sp
   151f4:	vmov.i32	q8, #0	; 0x00000000
   151f8:	mov	lr, #32
   151fc:	cmp	r1, #10
   15200:	add	r4, r3, #16
   15204:	vst1.64	{d16-d17}, [r3], lr
   15208:	vst1.64	{d16-d17}, [r3]
   1520c:	vst1.64	{d16-d17}, [r4]
   15210:	beq	15230 <__mempcpy_chk@plt+0x4220>
   15214:	str	r1, [sp]
   15218:	mov	r1, r2
   1521c:	mov	r3, sp
   15220:	mov	r2, ip
   15224:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   15228:	sub	sp, fp, #8
   1522c:	pop	{r4, sl, fp, pc}
   15230:	bl	10ff8 <abort@plt>
   15234:	push	{fp, lr}
   15238:	mov	fp, sp
   1523c:	sub	sp, sp, #48	; 0x30
   15240:	mov	r3, sp
   15244:	vmov.i32	q8, #0	; 0x00000000
   15248:	mov	ip, #32
   1524c:	cmp	r0, #10
   15250:	add	r2, r3, #16
   15254:	vst1.64	{d16-d17}, [r3], ip
   15258:	vst1.64	{d16-d17}, [r3]
   1525c:	vst1.64	{d16-d17}, [r2]
   15260:	beq	15280 <__mempcpy_chk@plt+0x4270>
   15264:	str	r0, [sp]
   15268:	mov	r3, sp
   1526c:	mov	r0, #0
   15270:	mvn	r2, #0
   15274:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   15278:	mov	sp, fp
   1527c:	pop	{fp, pc}
   15280:	bl	10ff8 <abort@plt>
   15284:	push	{fp, lr}
   15288:	mov	fp, sp
   1528c:	sub	sp, sp, #48	; 0x30
   15290:	mov	r3, sp
   15294:	vmov.i32	q8, #0	; 0x00000000
   15298:	mov	ip, #32
   1529c:	cmp	r0, #10
   152a0:	add	lr, r3, #16
   152a4:	vst1.64	{d16-d17}, [r3], ip
   152a8:	vst1.64	{d16-d17}, [r3]
   152ac:	vst1.64	{d16-d17}, [lr]
   152b0:	beq	152cc <__mempcpy_chk@plt+0x42bc>
   152b4:	str	r0, [sp]
   152b8:	mov	r3, sp
   152bc:	mov	r0, #0
   152c0:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   152c4:	mov	sp, fp
   152c8:	pop	{fp, pc}
   152cc:	bl	10ff8 <abort@plt>
   152d0:	push	{r4, sl, fp, lr}
   152d4:	add	fp, sp, #8
   152d8:	sub	sp, sp, #48	; 0x30
   152dc:	mov	lr, r0
   152e0:	movw	r0, #33128	; 0x8168
   152e4:	mov	r3, #32
   152e8:	mov	ip, r1
   152ec:	mov	r4, #1
   152f0:	movt	r0, #2
   152f4:	add	r1, r0, #16
   152f8:	vld1.64	{d16-d17}, [r0], r3
   152fc:	mov	r3, sp
   15300:	vld1.64	{d18-d19}, [r1]
   15304:	add	r1, r3, #16
   15308:	vld1.64	{d20-d21}, [r0]
   1530c:	add	r0, r3, #32
   15310:	vst1.64	{d18-d19}, [r1]
   15314:	mov	r1, r3
   15318:	vst1.64	{d20-d21}, [r0]
   1531c:	mov	r0, #28
   15320:	and	r0, r0, r2, lsr #3
   15324:	and	r2, r2, #31
   15328:	vst1.64	{d16-d17}, [r1], r0
   1532c:	ldr	r0, [r1, #8]
   15330:	bic	r4, r4, r0, lsr r2
   15334:	eor	r0, r0, r4, lsl r2
   15338:	mov	r2, ip
   1533c:	str	r0, [r1, #8]
   15340:	mov	r0, #0
   15344:	mov	r1, lr
   15348:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   1534c:	sub	sp, fp, #8
   15350:	pop	{r4, sl, fp, pc}
   15354:	push	{fp, lr}
   15358:	mov	fp, sp
   1535c:	sub	sp, sp, #48	; 0x30
   15360:	mov	ip, r0
   15364:	movw	r0, #33128	; 0x8168
   15368:	mov	r3, #32
   1536c:	movt	r0, #2
   15370:	add	r2, r0, #16
   15374:	vld1.64	{d16-d17}, [r0], r3
   15378:	mov	r3, sp
   1537c:	vld1.64	{d18-d19}, [r2]
   15380:	add	r2, r3, #16
   15384:	vld1.64	{d20-d21}, [r0]
   15388:	add	r0, r3, #32
   1538c:	vst1.64	{d18-d19}, [r2]
   15390:	mov	r2, r3
   15394:	vst1.64	{d20-d21}, [r0]
   15398:	mov	r0, #28
   1539c:	and	r0, r0, r1, lsr #3
   153a0:	and	r1, r1, #31
   153a4:	vst1.64	{d16-d17}, [r2], r0
   153a8:	mov	r0, #1
   153ac:	ldr	lr, [r2, #8]
   153b0:	bic	r0, r0, lr, lsr r1
   153b4:	eor	r0, lr, r0, lsl r1
   153b8:	mov	r1, ip
   153bc:	str	r0, [r2, #8]
   153c0:	mov	r0, #0
   153c4:	mvn	r2, #0
   153c8:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   153cc:	mov	sp, fp
   153d0:	pop	{fp, pc}
   153d4:	push	{fp, lr}
   153d8:	mov	fp, sp
   153dc:	sub	sp, sp, #48	; 0x30
   153e0:	movw	r2, #33128	; 0x8168
   153e4:	mov	r3, #32
   153e8:	mov	r1, r0
   153ec:	movt	r2, #2
   153f0:	add	r0, r2, #16
   153f4:	vld1.64	{d16-d17}, [r2], r3
   153f8:	mov	r3, sp
   153fc:	vld1.64	{d18-d19}, [r0]
   15400:	add	r0, r3, #16
   15404:	vld1.64	{d20-d21}, [r2]
   15408:	mov	r2, r3
   1540c:	vst1.64	{d18-d19}, [r0]
   15410:	add	r0, r3, #32
   15414:	vst1.64	{d20-d21}, [r0]
   15418:	mov	r0, #12
   1541c:	vst1.64	{d16-d17}, [r2], r0
   15420:	ldr	r0, [r2]
   15424:	orr	r0, r0, #67108864	; 0x4000000
   15428:	str	r0, [r2]
   1542c:	mov	r0, #0
   15430:	mvn	r2, #0
   15434:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   15438:	mov	sp, fp
   1543c:	pop	{fp, pc}
   15440:	push	{fp, lr}
   15444:	mov	fp, sp
   15448:	sub	sp, sp, #48	; 0x30
   1544c:	mov	ip, r1
   15450:	mov	r1, r0
   15454:	movw	r0, #33128	; 0x8168
   15458:	mov	r3, #32
   1545c:	movt	r0, #2
   15460:	add	r2, r0, #16
   15464:	vld1.64	{d16-d17}, [r0], r3
   15468:	mov	r3, sp
   1546c:	vld1.64	{d18-d19}, [r2]
   15470:	add	r2, r3, #16
   15474:	vld1.64	{d20-d21}, [r0]
   15478:	add	r0, r3, #32
   1547c:	vst1.64	{d18-d19}, [r2]
   15480:	mov	r2, r3
   15484:	vst1.64	{d20-d21}, [r0]
   15488:	mov	r0, #12
   1548c:	vst1.64	{d16-d17}, [r2], r0
   15490:	ldr	r0, [r2]
   15494:	orr	r0, r0, #67108864	; 0x4000000
   15498:	str	r0, [r2]
   1549c:	mov	r0, #0
   154a0:	mov	r2, ip
   154a4:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   154a8:	mov	sp, fp
   154ac:	pop	{fp, pc}
   154b0:	push	{r4, sl, fp, lr}
   154b4:	add	fp, sp, #8
   154b8:	sub	sp, sp, #96	; 0x60
   154bc:	mov	ip, r2
   154c0:	mov	r2, sp
   154c4:	vmov.i32	q8, #0	; 0x00000000
   154c8:	mov	r4, #28
   154cc:	cmp	r1, #10
   154d0:	mov	r3, r2
   154d4:	add	lr, r2, #16
   154d8:	vst1.64	{d16-d17}, [r3], r4
   154dc:	vst1.64	{d16-d17}, [lr]
   154e0:	vst1.32	{d16-d17}, [r3]
   154e4:	beq	15534 <__mempcpy_chk@plt+0x4524>
   154e8:	vld1.64	{d16-d17}, [r2], r4
   154ec:	vld1.64	{d18-d19}, [lr]
   154f0:	add	r3, sp, #48	; 0x30
   154f4:	add	r4, r3, #4
   154f8:	vld1.32	{d20-d21}, [r2]
   154fc:	add	r2, r3, #20
   15500:	vst1.32	{d16-d17}, [r4]
   15504:	vst1.32	{d18-d19}, [r2]
   15508:	add	r2, r3, #32
   1550c:	vst1.32	{d20-d21}, [r2]
   15510:	str	r1, [sp, #48]	; 0x30
   15514:	mvn	r2, #0
   15518:	ldr	r1, [sp, #60]	; 0x3c
   1551c:	orr	r1, r1, #67108864	; 0x4000000
   15520:	str	r1, [sp, #60]	; 0x3c
   15524:	mov	r1, ip
   15528:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   1552c:	sub	sp, fp, #8
   15530:	pop	{r4, sl, fp, pc}
   15534:	bl	10ff8 <abort@plt>
   15538:	push	{r4, r5, fp, lr}
   1553c:	add	fp, sp, #8
   15540:	sub	sp, sp, #48	; 0x30
   15544:	mov	ip, r3
   15548:	movw	r3, #33128	; 0x8168
   1554c:	mov	lr, #32
   15550:	cmp	r1, #0
   15554:	mov	r5, sp
   15558:	movt	r3, #2
   1555c:	cmpne	r2, #0
   15560:	add	r4, r3, #16
   15564:	vld1.64	{d16-d17}, [r3], lr
   15568:	vld1.64	{d18-d19}, [r4]
   1556c:	add	r4, r5, #16
   15570:	vld1.64	{d20-d21}, [r3]
   15574:	vst1.64	{d16-d17}, [r5], lr
   15578:	mov	r3, #10
   1557c:	vst1.64	{d18-d19}, [r4]
   15580:	vst1.64	{d20-d21}, [r5]
   15584:	str	r3, [sp]
   15588:	bne	15590 <__mempcpy_chk@plt+0x4580>
   1558c:	bl	10ff8 <abort@plt>
   15590:	str	r2, [sp, #44]	; 0x2c
   15594:	str	r1, [sp, #40]	; 0x28
   15598:	mov	r3, sp
   1559c:	mov	r1, ip
   155a0:	mvn	r2, #0
   155a4:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   155a8:	sub	sp, fp, #8
   155ac:	pop	{r4, r5, fp, pc}
   155b0:	push	{r4, r5, fp, lr}
   155b4:	add	fp, sp, #8
   155b8:	sub	sp, sp, #48	; 0x30
   155bc:	mov	lr, r3
   155c0:	movw	r3, #33128	; 0x8168
   155c4:	mov	ip, #32
   155c8:	cmp	r1, #0
   155cc:	mov	r5, sp
   155d0:	movt	r3, #2
   155d4:	cmpne	r2, #0
   155d8:	add	r4, r3, #16
   155dc:	vld1.64	{d16-d17}, [r3], ip
   155e0:	vld1.64	{d18-d19}, [r4]
   155e4:	add	r4, r5, #16
   155e8:	vld1.64	{d20-d21}, [r3]
   155ec:	vst1.64	{d16-d17}, [r5], ip
   155f0:	mov	r3, #10
   155f4:	vst1.64	{d18-d19}, [r4]
   155f8:	vst1.64	{d20-d21}, [r5]
   155fc:	str	r3, [sp]
   15600:	bne	15608 <__mempcpy_chk@plt+0x45f8>
   15604:	bl	10ff8 <abort@plt>
   15608:	ldr	ip, [fp, #8]
   1560c:	str	r2, [sp, #44]	; 0x2c
   15610:	str	r1, [sp, #40]	; 0x28
   15614:	mov	r3, sp
   15618:	mov	r1, lr
   1561c:	mov	r2, ip
   15620:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   15624:	sub	sp, fp, #8
   15628:	pop	{r4, r5, fp, pc}
   1562c:	push	{r4, sl, fp, lr}
   15630:	add	fp, sp, #8
   15634:	sub	sp, sp, #48	; 0x30
   15638:	mov	ip, r2
   1563c:	movw	r2, #33128	; 0x8168
   15640:	mov	lr, #32
   15644:	cmp	r0, #0
   15648:	mov	r4, sp
   1564c:	movt	r2, #2
   15650:	cmpne	r1, #0
   15654:	add	r3, r2, #16
   15658:	vld1.64	{d16-d17}, [r2], lr
   1565c:	vld1.64	{d18-d19}, [r3]
   15660:	add	r3, r4, #16
   15664:	vld1.64	{d20-d21}, [r2]
   15668:	vst1.64	{d16-d17}, [r4], lr
   1566c:	mov	r2, #10
   15670:	vst1.64	{d18-d19}, [r3]
   15674:	vst1.64	{d20-d21}, [r4]
   15678:	str	r2, [sp]
   1567c:	bne	15684 <__mempcpy_chk@plt+0x4674>
   15680:	bl	10ff8 <abort@plt>
   15684:	str	r1, [sp, #44]	; 0x2c
   15688:	str	r0, [sp, #40]	; 0x28
   1568c:	mov	r3, sp
   15690:	mov	r0, #0
   15694:	mov	r1, ip
   15698:	mvn	r2, #0
   1569c:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   156a0:	sub	sp, fp, #8
   156a4:	pop	{r4, sl, fp, pc}
   156a8:	push	{r4, r5, fp, lr}
   156ac:	add	fp, sp, #8
   156b0:	sub	sp, sp, #48	; 0x30
   156b4:	mov	lr, r2
   156b8:	movw	r2, #33128	; 0x8168
   156bc:	mov	ip, r3
   156c0:	mov	r3, #32
   156c4:	cmp	r0, #0
   156c8:	mov	r5, sp
   156cc:	movt	r2, #2
   156d0:	cmpne	r1, #0
   156d4:	add	r4, r2, #16
   156d8:	vld1.64	{d16-d17}, [r2], r3
   156dc:	vld1.64	{d18-d19}, [r4]
   156e0:	add	r4, r5, #16
   156e4:	vld1.64	{d20-d21}, [r2]
   156e8:	vst1.64	{d16-d17}, [r5], r3
   156ec:	mov	r2, #10
   156f0:	vst1.64	{d18-d19}, [r4]
   156f4:	vst1.64	{d20-d21}, [r5]
   156f8:	str	r2, [sp]
   156fc:	bne	15704 <__mempcpy_chk@plt+0x46f4>
   15700:	bl	10ff8 <abort@plt>
   15704:	str	r1, [sp, #44]	; 0x2c
   15708:	str	r0, [sp, #40]	; 0x28
   1570c:	mov	r3, sp
   15710:	mov	r0, #0
   15714:	mov	r1, lr
   15718:	mov	r2, ip
   1571c:	bl	14fbc <__mempcpy_chk@plt+0x3fac>
   15720:	sub	sp, fp, #8
   15724:	pop	{r4, r5, fp, pc}
   15728:	movw	r3, #33024	; 0x8100
   1572c:	movt	r3, #2
   15730:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   15734:	movw	r3, #33024	; 0x8100
   15738:	mov	r2, r1
   1573c:	mov	r1, r0
   15740:	mov	r0, #0
   15744:	movt	r3, #2
   15748:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   1574c:	movw	r3, #33024	; 0x8100
   15750:	mvn	r2, #0
   15754:	movt	r3, #2
   15758:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   1575c:	movw	r3, #33024	; 0x8100
   15760:	mov	r1, r0
   15764:	mov	r0, #0
   15768:	mvn	r2, #0
   1576c:	movt	r3, #2
   15770:	b	14fbc <__mempcpy_chk@plt+0x3fac>
   15774:	push	{r4, r5, fp, lr}
   15778:	add	fp, sp, #8
   1577c:	mov	r5, r0
   15780:	mov	r4, r1
   15784:	mov	r0, #0
   15788:	mov	r2, #5
   1578c:	mov	r1, r5
   15790:	bl	10e48 <dcgettext@plt>
   15794:	cmp	r0, r5
   15798:	popne	{r4, r5, fp, pc}
   1579c:	bl	169a0 <__mempcpy_chk@plt+0x5990>
   157a0:	ldrb	r1, [r0]
   157a4:	and	r1, r1, #223	; 0xdf
   157a8:	cmp	r1, #71	; 0x47
   157ac:	beq	15814 <__mempcpy_chk@plt+0x4804>
   157b0:	cmp	r1, #85	; 0x55
   157b4:	bne	15838 <__mempcpy_chk@plt+0x4828>
   157b8:	ldrb	r1, [r0, #1]
   157bc:	and	r1, r1, #223	; 0xdf
   157c0:	cmp	r1, #84	; 0x54
   157c4:	bne	15838 <__mempcpy_chk@plt+0x4828>
   157c8:	ldrb	r1, [r0, #2]
   157cc:	and	r1, r1, #223	; 0xdf
   157d0:	cmp	r1, #70	; 0x46
   157d4:	ldrbeq	r1, [r0, #3]
   157d8:	cmpeq	r1, #45	; 0x2d
   157dc:	bne	15838 <__mempcpy_chk@plt+0x4828>
   157e0:	ldrb	r1, [r0, #4]
   157e4:	cmp	r1, #56	; 0x38
   157e8:	ldrbeq	r0, [r0, #5]
   157ec:	cmpeq	r0, #0
   157f0:	bne	15838 <__mempcpy_chk@plt+0x4828>
   157f4:	ldrb	r1, [r5]
   157f8:	movw	r2, #30052	; 0x7564
   157fc:	movw	r0, #30056	; 0x7568
   15800:	movt	r2, #1
   15804:	movt	r0, #1
   15808:	cmp	r1, #96	; 0x60
   1580c:	moveq	r0, r2
   15810:	pop	{r4, r5, fp, pc}
   15814:	ldrb	r1, [r0, #1]
   15818:	and	r1, r1, #223	; 0xdf
   1581c:	cmp	r1, #66	; 0x42
   15820:	bne	15838 <__mempcpy_chk@plt+0x4828>
   15824:	ldrb	r1, [r0, #2]
   15828:	cmp	r1, #49	; 0x31
   1582c:	ldrbeq	r1, [r0, #3]
   15830:	cmpeq	r1, #56	; 0x38
   15834:	beq	15854 <__mempcpy_chk@plt+0x4844>
   15838:	movw	r1, #30046	; 0x755e
   1583c:	movw	r0, #30050	; 0x7562
   15840:	cmp	r4, #9
   15844:	movt	r1, #1
   15848:	movt	r0, #1
   1584c:	moveq	r0, r1
   15850:	pop	{r4, r5, fp, pc}
   15854:	ldrb	r1, [r0, #4]
   15858:	cmp	r1, #48	; 0x30
   1585c:	ldrbeq	r1, [r0, #5]
   15860:	cmpeq	r1, #51	; 0x33
   15864:	bne	15838 <__mempcpy_chk@plt+0x4828>
   15868:	ldrb	r1, [r0, #6]
   1586c:	cmp	r1, #48	; 0x30
   15870:	ldrbeq	r0, [r0, #7]
   15874:	cmpeq	r0, #0
   15878:	bne	15838 <__mempcpy_chk@plt+0x4828>
   1587c:	ldrb	r1, [r5]
   15880:	movw	r2, #30060	; 0x756c
   15884:	movw	r0, #30064	; 0x7570
   15888:	movt	r2, #1
   1588c:	movt	r0, #1
   15890:	b	15808 <__mempcpy_chk@plt+0x47f8>
   15894:	push	{r4, r5, r6, sl, fp, lr}
   15898:	add	fp, sp, #16
   1589c:	ldr	r4, [r0], #8
   158a0:	mov	r5, r1
   158a4:	cmp	r4, r0
   158a8:	beq	158cc <__mempcpy_chk@plt+0x48bc>
   158ac:	mov	r0, r4
   158b0:	mov	r1, r5
   158b4:	bl	166f0 <__mempcpy_chk@plt+0x56e0>
   158b8:	mov	r6, r0
   158bc:	cmp	r0, #0
   158c0:	moveq	r6, r4
   158c4:	mov	r0, r6
   158c8:	pop	{r4, r5, r6, sl, fp, pc}
   158cc:	mov	r0, r5
   158d0:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   158d4:	cmp	r0, #0
   158d8:	moveq	r6, #0
   158dc:	moveq	r0, r6
   158e0:	popeq	{r4, r5, r6, sl, fp, pc}
   158e4:	mov	r1, r4
   158e8:	mov	r2, r5
   158ec:	mov	r6, r0
   158f0:	bl	10e24 <memcpy@plt>
   158f4:	mov	r0, r6
   158f8:	pop	{r4, r5, r6, sl, fp, pc}
   158fc:	push	{r4, r5, r6, sl, fp, lr}
   15900:	add	fp, sp, #16
   15904:	mov	r4, r0
   15908:	add	r6, r0, #8
   1590c:	ldrd	r0, [r0]
   15910:	lsl	r5, r1, #1
   15914:	cmp	r0, r6
   15918:	beq	15924 <__mempcpy_chk@plt+0x4914>
   1591c:	bl	1279c <__mempcpy_chk@plt+0x178c>
   15920:	ldr	r1, [r4, #4]
   15924:	cmp	r5, r1
   15928:	bcc	1594c <__mempcpy_chk@plt+0x493c>
   1592c:	mov	r0, r5
   15930:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   15934:	cmp	r0, #0
   15938:	strne	r0, [r4]
   1593c:	movne	r0, #1
   15940:	strne	r5, [r4, #4]
   15944:	popne	{r4, r5, r6, sl, fp, pc}
   15948:	b	15958 <__mempcpy_chk@plt+0x4948>
   1594c:	bl	10f44 <__errno_location@plt>
   15950:	mov	r1, #12
   15954:	str	r1, [r0]
   15958:	mov	r0, #0
   1595c:	mov	r5, #1024	; 0x400
   15960:	str	r6, [r4]
   15964:	str	r5, [r4, #4]
   15968:	pop	{r4, r5, r6, sl, fp, pc}
   1596c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15970:	add	fp, sp, #24
   15974:	ldrd	r8, [r0]
   15978:	add	r7, r0, #8
   1597c:	mov	r4, r0
   15980:	lsl	r5, r9, #1
   15984:	cmp	r8, r7
   15988:	beq	159b4 <__mempcpy_chk@plt+0x49a4>
   1598c:	cmp	r5, r9
   15990:	bcc	159e8 <__mempcpy_chk@plt+0x49d8>
   15994:	mov	r0, r8
   15998:	mov	r1, r5
   1599c:	bl	166f0 <__mempcpy_chk@plt+0x56e0>
   159a0:	mov	r6, r0
   159a4:	cmp	r0, #0
   159a8:	bne	159d8 <__mempcpy_chk@plt+0x49c8>
   159ac:	ldr	r8, [r4]
   159b0:	b	159f4 <__mempcpy_chk@plt+0x49e4>
   159b4:	mov	r0, r5
   159b8:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   159bc:	cmp	r0, #0
   159c0:	moveq	r0, #0
   159c4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   159c8:	ldr	r2, [r4, #4]
   159cc:	mov	r1, r8
   159d0:	mov	r6, r0
   159d4:	bl	10e24 <memcpy@plt>
   159d8:	mov	r0, #1
   159dc:	str	r6, [r4]
   159e0:	str	r5, [r4, #4]
   159e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159e8:	bl	10f44 <__errno_location@plt>
   159ec:	mov	r1, #12
   159f0:	str	r1, [r0]
   159f4:	mov	r0, r8
   159f8:	bl	1279c <__mempcpy_chk@plt+0x178c>
   159fc:	mov	r0, #0
   15a00:	mov	r5, #1024	; 0x400
   15a04:	str	r7, [r4]
   15a08:	str	r5, [r4, #4]
   15a0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a14:	add	fp, sp, #24
   15a18:	sub	sp, sp, #32
   15a1c:	ldr	r6, [fp, #12]
   15a20:	ldr	r7, [fp, #8]
   15a24:	mov	r4, r2
   15a28:	mov	r8, r0
   15a2c:	cmp	r1, #0
   15a30:	beq	15a58 <__mempcpy_chk@plt+0x4a48>
   15a34:	movw	r2, #30152	; 0x75c8
   15a38:	mov	r5, r1
   15a3c:	str	r3, [sp, #4]
   15a40:	str	r4, [sp]
   15a44:	mov	r0, r8
   15a48:	mov	r1, #1
   15a4c:	movt	r2, #1
   15a50:	mov	r3, r5
   15a54:	b	15a70 <__mempcpy_chk@plt+0x4a60>
   15a58:	movw	r2, #30164	; 0x75d4
   15a5c:	str	r3, [sp]
   15a60:	mov	r0, r8
   15a64:	mov	r1, #1
   15a68:	mov	r3, r4
   15a6c:	movt	r2, #1
   15a70:	bl	10f80 <__fprintf_chk@plt>
   15a74:	movw	r1, #30171	; 0x75db
   15a78:	mov	r0, #0
   15a7c:	mov	r2, #5
   15a80:	movt	r1, #1
   15a84:	bl	10e48 <dcgettext@plt>
   15a88:	movw	r2, #30889	; 0x78a9
   15a8c:	mov	r3, r0
   15a90:	movw	r0, #2022	; 0x7e6
   15a94:	mov	r1, #1
   15a98:	str	r0, [sp]
   15a9c:	movt	r2, #1
   15aa0:	mov	r0, r8
   15aa4:	bl	10f80 <__fprintf_chk@plt>
   15aa8:	movw	r4, #28175	; 0x6e0f
   15aac:	mov	r1, r8
   15ab0:	movt	r4, #1
   15ab4:	mov	r0, r4
   15ab8:	bl	10dc4 <fputs_unlocked@plt>
   15abc:	movw	r1, #30175	; 0x75df
   15ac0:	mov	r0, #0
   15ac4:	mov	r2, #5
   15ac8:	movt	r1, #1
   15acc:	bl	10e48 <dcgettext@plt>
   15ad0:	movw	r3, #30346	; 0x768a
   15ad4:	mov	r2, r0
   15ad8:	mov	r0, r8
   15adc:	mov	r1, #1
   15ae0:	movt	r3, #1
   15ae4:	bl	10f80 <__fprintf_chk@plt>
   15ae8:	mov	r0, r4
   15aec:	mov	r1, r8
   15af0:	bl	10dc4 <fputs_unlocked@plt>
   15af4:	cmp	r6, #9
   15af8:	bhi	15b34 <__mempcpy_chk@plt+0x4b24>
   15afc:	add	r0, pc, #0
   15b00:	ldr	pc, [r0, r6, lsl #2]
   15b04:	andeq	r5, r1, ip, lsr #22
   15b08:	andeq	r5, r1, r0, asr #22
   15b0c:	andeq	r5, r1, r0, ror fp
   15b10:	muleq	r1, r8, fp
   15b14:	andeq	r5, r1, r0, asr #23
   15b18:	andeq	r5, r1, r8, ror #23
   15b1c:	andeq	r5, r1, r0, lsl ip
   15b20:	andeq	r5, r1, r8, asr #24
   15b24:	andeq	r5, r1, r8, ror #25
   15b28:	muleq	r1, r0, ip
   15b2c:	sub	sp, fp, #24
   15b30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b34:	movw	r1, #30699	; 0x77eb
   15b38:	movt	r1, #1
   15b3c:	b	15c98 <__mempcpy_chk@plt+0x4c88>
   15b40:	movw	r1, #30380	; 0x76ac
   15b44:	mov	r0, #0
   15b48:	mov	r2, #5
   15b4c:	movt	r1, #1
   15b50:	bl	10e48 <dcgettext@plt>
   15b54:	ldr	r3, [r7]
   15b58:	mov	r2, r0
   15b5c:	mov	r0, r8
   15b60:	mov	r1, #1
   15b64:	sub	sp, fp, #24
   15b68:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b6c:	b	10f80 <__fprintf_chk@plt>
   15b70:	movw	r1, #30396	; 0x76bc
   15b74:	mov	r0, #0
   15b78:	mov	r2, #5
   15b7c:	movt	r1, #1
   15b80:	bl	10e48 <dcgettext@plt>
   15b84:	mov	r2, r0
   15b88:	ldr	r3, [r7]
   15b8c:	ldr	r0, [r7, #4]
   15b90:	str	r0, [sp]
   15b94:	b	15c84 <__mempcpy_chk@plt+0x4c74>
   15b98:	movw	r1, #30419	; 0x76d3
   15b9c:	mov	r0, #0
   15ba0:	mov	r2, #5
   15ba4:	movt	r1, #1
   15ba8:	bl	10e48 <dcgettext@plt>
   15bac:	ldr	r3, [r7]
   15bb0:	mov	r2, r0
   15bb4:	ldmib	r7, {r0, r1}
   15bb8:	stm	sp, {r0, r1}
   15bbc:	b	15c84 <__mempcpy_chk@plt+0x4c74>
   15bc0:	movw	r1, #30447	; 0x76ef
   15bc4:	mov	r0, #0
   15bc8:	mov	r2, #5
   15bcc:	movt	r1, #1
   15bd0:	bl	10e48 <dcgettext@plt>
   15bd4:	ldr	r3, [r7]
   15bd8:	mov	r2, r0
   15bdc:	ldmib	r7, {r0, r1, r7}
   15be0:	stm	sp, {r0, r1, r7}
   15be4:	b	15c84 <__mempcpy_chk@plt+0x4c74>
   15be8:	movw	r1, #30479	; 0x770f
   15bec:	mov	r0, #0
   15bf0:	mov	r2, #5
   15bf4:	movt	r1, #1
   15bf8:	bl	10e48 <dcgettext@plt>
   15bfc:	ldr	r3, [r7]
   15c00:	mov	r2, r0
   15c04:	ldmib	r7, {r0, r1, r6, r7}
   15c08:	stm	sp, {r0, r1, r6, r7}
   15c0c:	b	15c84 <__mempcpy_chk@plt+0x4c74>
   15c10:	movw	r1, #30515	; 0x7733
   15c14:	mov	r0, #0
   15c18:	mov	r2, #5
   15c1c:	movt	r1, #1
   15c20:	bl	10e48 <dcgettext@plt>
   15c24:	ldr	r3, [r7]
   15c28:	mov	r2, r0
   15c2c:	ldmib	r7, {r0, r1, r6}
   15c30:	ldr	r5, [r7, #16]
   15c34:	ldr	r7, [r7, #20]
   15c38:	stm	sp, {r0, r1, r6}
   15c3c:	str	r5, [sp, #12]
   15c40:	str	r7, [sp, #16]
   15c44:	b	15c84 <__mempcpy_chk@plt+0x4c74>
   15c48:	movw	r1, #30555	; 0x775b
   15c4c:	mov	r0, #0
   15c50:	mov	r2, #5
   15c54:	movt	r1, #1
   15c58:	bl	10e48 <dcgettext@plt>
   15c5c:	ldr	r3, [r7]
   15c60:	mov	r2, r0
   15c64:	ldmib	r7, {r0, r1, r6}
   15c68:	ldr	r5, [r7, #16]
   15c6c:	ldr	r4, [r7, #20]
   15c70:	ldr	r7, [r7, #24]
   15c74:	stm	sp, {r0, r1, r6}
   15c78:	str	r5, [sp, #12]
   15c7c:	str	r4, [sp, #16]
   15c80:	str	r7, [sp, #20]
   15c84:	mov	r0, r8
   15c88:	mov	r1, #1
   15c8c:	b	15d38 <__mempcpy_chk@plt+0x4d28>
   15c90:	movw	r1, #30647	; 0x77b7
   15c94:	movt	r1, #1
   15c98:	mov	r0, #0
   15c9c:	mov	r2, #5
   15ca0:	bl	10e48 <dcgettext@plt>
   15ca4:	mov	ip, r0
   15ca8:	ldr	r3, [r7]
   15cac:	ldr	r0, [r7, #4]
   15cb0:	ldr	r1, [r7, #8]
   15cb4:	ldr	r6, [r7, #12]
   15cb8:	ldr	r5, [r7, #16]
   15cbc:	ldr	r4, [r7, #20]
   15cc0:	ldr	r2, [r7, #24]
   15cc4:	ldr	lr, [r7, #28]
   15cc8:	ldr	r7, [r7, #32]
   15ccc:	stm	sp, {r0, r1, r6}
   15cd0:	str	r5, [sp, #12]
   15cd4:	str	r4, [sp, #16]
   15cd8:	str	r2, [sp, #20]
   15cdc:	str	lr, [sp, #24]
   15ce0:	str	r7, [sp, #28]
   15ce4:	b	15d2c <__mempcpy_chk@plt+0x4d1c>
   15ce8:	movw	r1, #30599	; 0x7787
   15cec:	mov	r0, #0
   15cf0:	mov	r2, #5
   15cf4:	movt	r1, #1
   15cf8:	bl	10e48 <dcgettext@plt>
   15cfc:	mov	ip, r0
   15d00:	ldr	r3, [r7]
   15d04:	ldmib	r7, {r0, r1, r6}
   15d08:	ldr	r5, [r7, #16]
   15d0c:	ldr	r4, [r7, #20]
   15d10:	ldr	r2, [r7, #24]
   15d14:	ldr	r7, [r7, #28]
   15d18:	stm	sp, {r0, r1, r6}
   15d1c:	str	r5, [sp, #12]
   15d20:	str	r4, [sp, #16]
   15d24:	str	r2, [sp, #20]
   15d28:	str	r7, [sp, #24]
   15d2c:	mov	r0, r8
   15d30:	mov	r1, #1
   15d34:	mov	r2, ip
   15d38:	bl	10f80 <__fprintf_chk@plt>
   15d3c:	sub	sp, fp, #24
   15d40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d44:	push	{r4, sl, fp, lr}
   15d48:	add	fp, sp, #8
   15d4c:	sub	sp, sp, #8
   15d50:	ldr	ip, [fp, #8]
   15d54:	mov	lr, #0
   15d58:	ldr	r4, [ip, lr, lsl #2]
   15d5c:	add	lr, lr, #1
   15d60:	cmp	r4, #0
   15d64:	bne	15d58 <__mempcpy_chk@plt+0x4d48>
   15d68:	sub	r4, lr, #1
   15d6c:	str	ip, [sp]
   15d70:	str	r4, [sp, #4]
   15d74:	bl	15a10 <__mempcpy_chk@plt+0x4a00>
   15d78:	sub	sp, fp, #8
   15d7c:	pop	{r4, sl, fp, pc}
   15d80:	push	{fp, lr}
   15d84:	mov	fp, sp
   15d88:	sub	sp, sp, #48	; 0x30
   15d8c:	ldr	ip, [fp, #8]
   15d90:	ldr	lr, [ip]
   15d94:	cmp	lr, #0
   15d98:	str	lr, [sp, #8]
   15d9c:	beq	15e38 <__mempcpy_chk@plt+0x4e28>
   15da0:	ldr	lr, [ip, #4]
   15da4:	cmp	lr, #0
   15da8:	str	lr, [sp, #12]
   15dac:	beq	15e40 <__mempcpy_chk@plt+0x4e30>
   15db0:	ldr	lr, [ip, #8]
   15db4:	cmp	lr, #0
   15db8:	str	lr, [sp, #16]
   15dbc:	beq	15e48 <__mempcpy_chk@plt+0x4e38>
   15dc0:	ldr	lr, [ip, #12]
   15dc4:	cmp	lr, #0
   15dc8:	str	lr, [sp, #20]
   15dcc:	beq	15e50 <__mempcpy_chk@plt+0x4e40>
   15dd0:	ldr	lr, [ip, #16]
   15dd4:	cmp	lr, #0
   15dd8:	str	lr, [sp, #24]
   15ddc:	beq	15e58 <__mempcpy_chk@plt+0x4e48>
   15de0:	ldr	lr, [ip, #20]
   15de4:	cmp	lr, #0
   15de8:	str	lr, [sp, #28]
   15dec:	beq	15e60 <__mempcpy_chk@plt+0x4e50>
   15df0:	ldr	lr, [ip, #24]
   15df4:	cmp	lr, #0
   15df8:	str	lr, [sp, #32]
   15dfc:	beq	15e68 <__mempcpy_chk@plt+0x4e58>
   15e00:	ldr	lr, [ip, #28]
   15e04:	cmp	lr, #0
   15e08:	str	lr, [sp, #36]	; 0x24
   15e0c:	beq	15e70 <__mempcpy_chk@plt+0x4e60>
   15e10:	ldr	lr, [ip, #32]
   15e14:	cmp	lr, #0
   15e18:	str	lr, [sp, #40]	; 0x28
   15e1c:	beq	15e78 <__mempcpy_chk@plt+0x4e68>
   15e20:	ldr	lr, [ip, #36]	; 0x24
   15e24:	mov	ip, #10
   15e28:	cmp	lr, #0
   15e2c:	str	lr, [sp, #44]	; 0x2c
   15e30:	movweq	ip, #9
   15e34:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e38:	mov	ip, #0
   15e3c:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e40:	mov	ip, #1
   15e44:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e48:	mov	ip, #2
   15e4c:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e50:	mov	ip, #3
   15e54:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e58:	mov	ip, #4
   15e5c:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e60:	mov	ip, #5
   15e64:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e68:	mov	ip, #6
   15e6c:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e70:	mov	ip, #7
   15e74:	b	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e78:	mov	ip, #8
   15e7c:	add	lr, sp, #8
   15e80:	str	ip, [sp, #4]
   15e84:	str	lr, [sp]
   15e88:	bl	15a10 <__mempcpy_chk@plt+0x4a00>
   15e8c:	mov	sp, fp
   15e90:	pop	{fp, pc}
   15e94:	push	{fp, lr}
   15e98:	mov	fp, sp
   15e9c:	sub	sp, sp, #56	; 0x38
   15ea0:	add	ip, fp, #8
   15ea4:	str	ip, [sp, #12]
   15ea8:	ldr	lr, [fp, #8]
   15eac:	cmp	lr, #0
   15eb0:	str	lr, [sp, #16]
   15eb4:	beq	15f50 <__mempcpy_chk@plt+0x4f40>
   15eb8:	ldr	lr, [ip, #4]
   15ebc:	cmp	lr, #0
   15ec0:	str	lr, [sp, #20]
   15ec4:	beq	15f58 <__mempcpy_chk@plt+0x4f48>
   15ec8:	ldr	lr, [ip, #8]
   15ecc:	cmp	lr, #0
   15ed0:	str	lr, [sp, #24]
   15ed4:	beq	15f60 <__mempcpy_chk@plt+0x4f50>
   15ed8:	ldr	lr, [ip, #12]
   15edc:	cmp	lr, #0
   15ee0:	str	lr, [sp, #28]
   15ee4:	beq	15f68 <__mempcpy_chk@plt+0x4f58>
   15ee8:	ldr	lr, [ip, #16]
   15eec:	cmp	lr, #0
   15ef0:	str	lr, [sp, #32]
   15ef4:	beq	15f70 <__mempcpy_chk@plt+0x4f60>
   15ef8:	ldr	lr, [ip, #20]
   15efc:	cmp	lr, #0
   15f00:	str	lr, [sp, #36]	; 0x24
   15f04:	beq	15f78 <__mempcpy_chk@plt+0x4f68>
   15f08:	ldr	lr, [ip, #24]
   15f0c:	cmp	lr, #0
   15f10:	str	lr, [sp, #40]	; 0x28
   15f14:	beq	15f80 <__mempcpy_chk@plt+0x4f70>
   15f18:	ldr	lr, [ip, #28]
   15f1c:	cmp	lr, #0
   15f20:	str	lr, [sp, #44]	; 0x2c
   15f24:	beq	15f88 <__mempcpy_chk@plt+0x4f78>
   15f28:	ldr	lr, [ip, #32]
   15f2c:	cmp	lr, #0
   15f30:	str	lr, [sp, #48]	; 0x30
   15f34:	beq	15f90 <__mempcpy_chk@plt+0x4f80>
   15f38:	ldr	lr, [ip, #36]	; 0x24
   15f3c:	mov	ip, #10
   15f40:	cmp	lr, #0
   15f44:	str	lr, [sp, #52]	; 0x34
   15f48:	movweq	ip, #9
   15f4c:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f50:	mov	ip, #0
   15f54:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f58:	mov	ip, #1
   15f5c:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f60:	mov	ip, #2
   15f64:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f68:	mov	ip, #3
   15f6c:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f70:	mov	ip, #4
   15f74:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f78:	mov	ip, #5
   15f7c:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f80:	mov	ip, #6
   15f84:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f88:	mov	ip, #7
   15f8c:	b	15f94 <__mempcpy_chk@plt+0x4f84>
   15f90:	mov	ip, #8
   15f94:	add	lr, sp, #16
   15f98:	str	ip, [sp, #4]
   15f9c:	str	lr, [sp]
   15fa0:	bl	15a10 <__mempcpy_chk@plt+0x4a00>
   15fa4:	mov	sp, fp
   15fa8:	pop	{fp, pc}
   15fac:	push	{fp, lr}
   15fb0:	mov	fp, sp
   15fb4:	movw	r0, #33092	; 0x8144
   15fb8:	movt	r0, #2
   15fbc:	ldr	r1, [r0]
   15fc0:	movw	r0, #28175	; 0x6e0f
   15fc4:	movt	r0, #1
   15fc8:	bl	10dc4 <fputs_unlocked@plt>
   15fcc:	movw	r1, #30759	; 0x7827
   15fd0:	mov	r0, #0
   15fd4:	mov	r2, #5
   15fd8:	movt	r1, #1
   15fdc:	bl	10e48 <dcgettext@plt>
   15fe0:	movw	r2, #30779	; 0x783b
   15fe4:	mov	r1, r0
   15fe8:	mov	r0, #1
   15fec:	movt	r2, #1
   15ff0:	bl	10f68 <__printf_chk@plt>
   15ff4:	movw	r1, #30801	; 0x7851
   15ff8:	mov	r0, #0
   15ffc:	mov	r2, #5
   16000:	movt	r1, #1
   16004:	bl	10e48 <dcgettext@plt>
   16008:	movw	r2, #28943	; 0x710f
   1600c:	movw	r3, #29105	; 0x71b1
   16010:	mov	r1, r0
   16014:	mov	r0, #1
   16018:	movt	r2, #1
   1601c:	movt	r3, #1
   16020:	bl	10f68 <__printf_chk@plt>
   16024:	movw	r1, #30821	; 0x7865
   16028:	mov	r0, #0
   1602c:	mov	r2, #5
   16030:	movt	r1, #1
   16034:	bl	10e48 <dcgettext@plt>
   16038:	movw	r2, #30860	; 0x788c
   1603c:	mov	r1, r0
   16040:	mov	r0, #1
   16044:	movt	r2, #1
   16048:	pop	{fp, lr}
   1604c:	b	10f68 <__printf_chk@plt>
   16050:	push	{r4, r5, r6, sl, fp, lr}
   16054:	add	fp, sp, #16
   16058:	mov	r4, r2
   1605c:	mov	r5, r1
   16060:	mov	r6, r0
   16064:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   16068:	cmp	r0, #0
   1606c:	popne	{r4, r5, r6, sl, fp, pc}
   16070:	cmp	r6, #0
   16074:	beq	16088 <__mempcpy_chk@plt+0x5078>
   16078:	cmp	r5, #0
   1607c:	cmpne	r4, #0
   16080:	bne	16088 <__mempcpy_chk@plt+0x5078>
   16084:	pop	{r4, r5, r6, sl, fp, pc}
   16088:	bl	16628 <__mempcpy_chk@plt+0x5618>
   1608c:	push	{r4, r5, r6, sl, fp, lr}
   16090:	add	fp, sp, #16
   16094:	mov	r4, r2
   16098:	mov	r5, r1
   1609c:	mov	r6, r0
   160a0:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   160a4:	cmp	r0, #0
   160a8:	popne	{r4, r5, r6, sl, fp, pc}
   160ac:	cmp	r6, #0
   160b0:	beq	160c4 <__mempcpy_chk@plt+0x50b4>
   160b4:	cmp	r5, #0
   160b8:	cmpne	r4, #0
   160bc:	bne	160c4 <__mempcpy_chk@plt+0x50b4>
   160c0:	pop	{r4, r5, r6, sl, fp, pc}
   160c4:	bl	16628 <__mempcpy_chk@plt+0x5618>
   160c8:	push	{fp, lr}
   160cc:	mov	fp, sp
   160d0:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   160d4:	cmp	r0, #0
   160d8:	popne	{fp, pc}
   160dc:	bl	16628 <__mempcpy_chk@plt+0x5618>
   160e0:	push	{fp, lr}
   160e4:	mov	fp, sp
   160e8:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   160ec:	cmp	r0, #0
   160f0:	popne	{fp, pc}
   160f4:	bl	16628 <__mempcpy_chk@plt+0x5618>
   160f8:	push	{fp, lr}
   160fc:	mov	fp, sp
   16100:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   16104:	cmp	r0, #0
   16108:	popne	{fp, pc}
   1610c:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16110:	push	{r4, r5, fp, lr}
   16114:	add	fp, sp, #8
   16118:	mov	r4, r1
   1611c:	mov	r5, r0
   16120:	bl	166f0 <__mempcpy_chk@plt+0x56e0>
   16124:	cmp	r0, #0
   16128:	popne	{r4, r5, fp, pc}
   1612c:	cmp	r5, #0
   16130:	beq	16140 <__mempcpy_chk@plt+0x5130>
   16134:	cmp	r4, #0
   16138:	bne	16140 <__mempcpy_chk@plt+0x5130>
   1613c:	pop	{r4, r5, fp, pc}
   16140:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16144:	push	{fp, lr}
   16148:	mov	fp, sp
   1614c:	cmp	r1, #0
   16150:	orreq	r1, r1, #1
   16154:	bl	166f0 <__mempcpy_chk@plt+0x56e0>
   16158:	cmp	r0, #0
   1615c:	popne	{fp, pc}
   16160:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16164:	push	{fp, lr}
   16168:	mov	fp, sp
   1616c:	clz	r3, r2
   16170:	lsr	ip, r3, #5
   16174:	clz	r3, r1
   16178:	lsr	r3, r3, #5
   1617c:	orrs	r3, r3, ip
   16180:	movwne	r1, #1
   16184:	movwne	r2, #1
   16188:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   1618c:	cmp	r0, #0
   16190:	popne	{fp, pc}
   16194:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16198:	push	{fp, lr}
   1619c:	mov	fp, sp
   161a0:	mov	r2, r1
   161a4:	mov	r1, r0
   161a8:	mov	r0, #0
   161ac:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   161b0:	cmp	r0, #0
   161b4:	popne	{fp, pc}
   161b8:	bl	16628 <__mempcpy_chk@plt+0x5618>
   161bc:	push	{fp, lr}
   161c0:	mov	fp, sp
   161c4:	mov	r2, r1
   161c8:	mov	r1, r0
   161cc:	clz	r0, r2
   161d0:	clz	r3, r1
   161d4:	lsr	r0, r0, #5
   161d8:	lsr	r3, r3, #5
   161dc:	orrs	r0, r3, r0
   161e0:	movwne	r1, #1
   161e4:	movwne	r2, #1
   161e8:	mov	r0, #0
   161ec:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   161f0:	cmp	r0, #0
   161f4:	popne	{fp, pc}
   161f8:	bl	16628 <__mempcpy_chk@plt+0x5618>
   161fc:	push	{r4, r5, r6, sl, fp, lr}
   16200:	add	fp, sp, #16
   16204:	ldr	r5, [r1]
   16208:	mov	r4, r1
   1620c:	mov	r6, r0
   16210:	cmp	r0, #0
   16214:	beq	1622c <__mempcpy_chk@plt+0x521c>
   16218:	mov	r0, #1
   1621c:	add	r0, r0, r5, lsr #1
   16220:	adds	r5, r5, r0
   16224:	bcc	16234 <__mempcpy_chk@plt+0x5224>
   16228:	b	16270 <__mempcpy_chk@plt+0x5260>
   1622c:	cmp	r5, #0
   16230:	movweq	r5, #64	; 0x40
   16234:	mov	r0, r6
   16238:	mov	r1, r5
   1623c:	mov	r2, #1
   16240:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   16244:	cmp	r5, #0
   16248:	mov	r1, r5
   1624c:	movwne	r1, #1
   16250:	cmp	r0, #0
   16254:	bne	16268 <__mempcpy_chk@plt+0x5258>
   16258:	clz	r2, r6
   1625c:	lsr	r2, r2, #5
   16260:	orrs	r1, r2, r1
   16264:	bne	16270 <__mempcpy_chk@plt+0x5260>
   16268:	str	r5, [r4]
   1626c:	pop	{r4, r5, r6, sl, fp, pc}
   16270:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16274:	push	{r4, r5, r6, r7, fp, lr}
   16278:	add	fp, sp, #16
   1627c:	ldr	r5, [r1]
   16280:	mov	r6, r2
   16284:	mov	r4, r1
   16288:	mov	r7, r0
   1628c:	cmp	r0, #0
   16290:	beq	162a8 <__mempcpy_chk@plt+0x5298>
   16294:	mov	r0, #1
   16298:	add	r0, r0, r5, lsr #1
   1629c:	adds	r5, r5, r0
   162a0:	bcc	162c0 <__mempcpy_chk@plt+0x52b0>
   162a4:	b	162f4 <__mempcpy_chk@plt+0x52e4>
   162a8:	cmp	r5, #0
   162ac:	bne	162c0 <__mempcpy_chk@plt+0x52b0>
   162b0:	mov	r0, #64	; 0x40
   162b4:	cmp	r6, #64	; 0x40
   162b8:	udiv	r5, r0, r6
   162bc:	addhi	r5, r5, #1
   162c0:	mov	r0, r7
   162c4:	mov	r1, r5
   162c8:	mov	r2, r6
   162cc:	bl	16a38 <__mempcpy_chk@plt+0x5a28>
   162d0:	cmp	r0, #0
   162d4:	bne	162ec <__mempcpy_chk@plt+0x52dc>
   162d8:	cmp	r7, #0
   162dc:	beq	162f4 <__mempcpy_chk@plt+0x52e4>
   162e0:	cmp	r6, #0
   162e4:	cmpne	r5, #0
   162e8:	bne	162f4 <__mempcpy_chk@plt+0x52e4>
   162ec:	str	r5, [r4]
   162f0:	pop	{r4, r5, r6, r7, fp, pc}
   162f4:	bl	16628 <__mempcpy_chk@plt+0x5618>
   162f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162fc:	add	fp, sp, #24
   16300:	mov	r8, r1
   16304:	ldr	r1, [r1]
   16308:	mov	r5, r0
   1630c:	add	r0, r1, r1, asr #1
   16310:	cmp	r0, r1
   16314:	mvnvs	r0, #-2147483648	; 0x80000000
   16318:	cmp	r0, r3
   1631c:	mov	r7, r0
   16320:	movgt	r7, r3
   16324:	cmn	r3, #1
   16328:	movle	r7, r0
   1632c:	ldr	r0, [fp, #8]
   16330:	cmn	r0, #1
   16334:	ble	1635c <__mempcpy_chk@plt+0x534c>
   16338:	cmp	r0, #0
   1633c:	beq	163b0 <__mempcpy_chk@plt+0x53a0>
   16340:	cmn	r7, #1
   16344:	ble	16384 <__mempcpy_chk@plt+0x5374>
   16348:	mvn	r4, #-2147483648	; 0x80000000
   1634c:	udiv	r6, r4, r0
   16350:	cmp	r6, r7
   16354:	bge	163b0 <__mempcpy_chk@plt+0x53a0>
   16358:	b	163c0 <__mempcpy_chk@plt+0x53b0>
   1635c:	cmn	r7, #1
   16360:	ble	163a0 <__mempcpy_chk@plt+0x5390>
   16364:	cmn	r0, #1
   16368:	beq	163b0 <__mempcpy_chk@plt+0x53a0>
   1636c:	mov	r6, #-2147483648	; 0x80000000
   16370:	mvn	r4, #-2147483648	; 0x80000000
   16374:	sdiv	r6, r6, r0
   16378:	cmp	r6, r7
   1637c:	bge	163b0 <__mempcpy_chk@plt+0x53a0>
   16380:	b	163c0 <__mempcpy_chk@plt+0x53b0>
   16384:	beq	163b0 <__mempcpy_chk@plt+0x53a0>
   16388:	mov	r6, #-2147483648	; 0x80000000
   1638c:	mvn	r4, #-2147483648	; 0x80000000
   16390:	sdiv	r6, r6, r7
   16394:	cmp	r6, r0
   16398:	bge	163b0 <__mempcpy_chk@plt+0x53a0>
   1639c:	b	163c0 <__mempcpy_chk@plt+0x53b0>
   163a0:	mvn	r4, #-2147483648	; 0x80000000
   163a4:	sdiv	r6, r4, r0
   163a8:	cmp	r7, r6
   163ac:	blt	163c0 <__mempcpy_chk@plt+0x53b0>
   163b0:	mul	r6, r7, r0
   163b4:	mov	r4, #64	; 0x40
   163b8:	cmp	r6, #63	; 0x3f
   163bc:	bgt	163c8 <__mempcpy_chk@plt+0x53b8>
   163c0:	sdiv	r7, r4, r0
   163c4:	mul	r6, r7, r0
   163c8:	cmp	r5, #0
   163cc:	moveq	r4, #0
   163d0:	streq	r4, [r8]
   163d4:	sub	r4, r7, r1
   163d8:	cmp	r4, r2
   163dc:	bge	16488 <__mempcpy_chk@plt+0x5478>
   163e0:	add	r7, r1, r2
   163e4:	mov	r6, #0
   163e8:	mov	r2, #0
   163ec:	cmp	r7, r3
   163f0:	movwgt	r6, #1
   163f4:	cmn	r3, #1
   163f8:	movwgt	r2, #1
   163fc:	cmp	r7, r1
   16400:	bvs	164bc <__mempcpy_chk@plt+0x54ac>
   16404:	ands	r1, r2, r6
   16408:	bne	164bc <__mempcpy_chk@plt+0x54ac>
   1640c:	cmn	r0, #1
   16410:	ble	16438 <__mempcpy_chk@plt+0x5428>
   16414:	cmp	r0, #0
   16418:	beq	16484 <__mempcpy_chk@plt+0x5474>
   1641c:	cmn	r7, #1
   16420:	ble	1645c <__mempcpy_chk@plt+0x544c>
   16424:	mvn	r1, #-2147483648	; 0x80000000
   16428:	udiv	r1, r1, r0
   1642c:	cmp	r1, r7
   16430:	bge	16484 <__mempcpy_chk@plt+0x5474>
   16434:	b	164bc <__mempcpy_chk@plt+0x54ac>
   16438:	cmn	r7, #1
   1643c:	ble	16474 <__mempcpy_chk@plt+0x5464>
   16440:	cmn	r0, #1
   16444:	beq	16484 <__mempcpy_chk@plt+0x5474>
   16448:	mov	r1, #-2147483648	; 0x80000000
   1644c:	sdiv	r1, r1, r0
   16450:	cmp	r1, r7
   16454:	bge	16484 <__mempcpy_chk@plt+0x5474>
   16458:	b	164bc <__mempcpy_chk@plt+0x54ac>
   1645c:	beq	16484 <__mempcpy_chk@plt+0x5474>
   16460:	mov	r1, #-2147483648	; 0x80000000
   16464:	sdiv	r1, r1, r7
   16468:	cmp	r1, r0
   1646c:	bge	16484 <__mempcpy_chk@plt+0x5474>
   16470:	b	164bc <__mempcpy_chk@plt+0x54ac>
   16474:	mvn	r1, #-2147483648	; 0x80000000
   16478:	sdiv	r1, r1, r0
   1647c:	cmp	r7, r1
   16480:	blt	164bc <__mempcpy_chk@plt+0x54ac>
   16484:	mul	r6, r7, r0
   16488:	mov	r0, r5
   1648c:	mov	r1, r6
   16490:	bl	166f0 <__mempcpy_chk@plt+0x56e0>
   16494:	cmp	r6, #0
   16498:	movwne	r6, #1
   1649c:	cmp	r0, #0
   164a0:	bne	164b4 <__mempcpy_chk@plt+0x54a4>
   164a4:	clz	r1, r5
   164a8:	lsr	r1, r1, #5
   164ac:	orrs	r1, r1, r6
   164b0:	bne	164bc <__mempcpy_chk@plt+0x54ac>
   164b4:	str	r7, [r8]
   164b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   164bc:	bl	16628 <__mempcpy_chk@plt+0x5618>
   164c0:	push	{fp, lr}
   164c4:	mov	fp, sp
   164c8:	mov	r1, #1
   164cc:	bl	1666c <__mempcpy_chk@plt+0x565c>
   164d0:	cmp	r0, #0
   164d4:	popne	{fp, pc}
   164d8:	bl	16628 <__mempcpy_chk@plt+0x5618>
   164dc:	push	{fp, lr}
   164e0:	mov	fp, sp
   164e4:	bl	1666c <__mempcpy_chk@plt+0x565c>
   164e8:	cmp	r0, #0
   164ec:	popne	{fp, pc}
   164f0:	bl	16628 <__mempcpy_chk@plt+0x5618>
   164f4:	push	{fp, lr}
   164f8:	mov	fp, sp
   164fc:	mov	r1, #1
   16500:	bl	1666c <__mempcpy_chk@plt+0x565c>
   16504:	cmp	r0, #0
   16508:	popne	{fp, pc}
   1650c:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16510:	push	{fp, lr}
   16514:	mov	fp, sp
   16518:	bl	1666c <__mempcpy_chk@plt+0x565c>
   1651c:	cmp	r0, #0
   16520:	popne	{fp, pc}
   16524:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16528:	push	{r4, r5, r6, sl, fp, lr}
   1652c:	add	fp, sp, #16
   16530:	mov	r5, r0
   16534:	mov	r0, r1
   16538:	mov	r4, r1
   1653c:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   16540:	cmp	r0, #0
   16544:	beq	16560 <__mempcpy_chk@plt+0x5550>
   16548:	mov	r1, r5
   1654c:	mov	r2, r4
   16550:	mov	r6, r0
   16554:	bl	10e24 <memcpy@plt>
   16558:	mov	r0, r6
   1655c:	pop	{r4, r5, r6, sl, fp, pc}
   16560:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16564:	push	{r4, r5, r6, sl, fp, lr}
   16568:	add	fp, sp, #16
   1656c:	mov	r5, r0
   16570:	mov	r0, r1
   16574:	mov	r4, r1
   16578:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   1657c:	cmp	r0, #0
   16580:	beq	1659c <__mempcpy_chk@plt+0x558c>
   16584:	mov	r1, r5
   16588:	mov	r2, r4
   1658c:	mov	r6, r0
   16590:	bl	10e24 <memcpy@plt>
   16594:	mov	r0, r6
   16598:	pop	{r4, r5, r6, sl, fp, pc}
   1659c:	bl	16628 <__mempcpy_chk@plt+0x5618>
   165a0:	push	{r4, r5, r6, sl, fp, lr}
   165a4:	add	fp, sp, #16
   165a8:	mov	r5, r0
   165ac:	add	r0, r1, #1
   165b0:	mov	r4, r1
   165b4:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   165b8:	cmp	r0, #0
   165bc:	beq	165e4 <__mempcpy_chk@plt+0x55d4>
   165c0:	mov	r6, r0
   165c4:	mov	r0, #0
   165c8:	mov	r1, r5
   165cc:	mov	r2, r4
   165d0:	strb	r0, [r6, r4]
   165d4:	mov	r0, r6
   165d8:	bl	10e24 <memcpy@plt>
   165dc:	mov	r0, r6
   165e0:	pop	{r4, r5, r6, sl, fp, pc}
   165e4:	bl	16628 <__mempcpy_chk@plt+0x5618>
   165e8:	push	{r4, r5, r6, sl, fp, lr}
   165ec:	add	fp, sp, #16
   165f0:	mov	r4, r0
   165f4:	bl	10f38 <strlen@plt>
   165f8:	add	r5, r0, #1
   165fc:	mov	r0, r5
   16600:	bl	166c0 <__mempcpy_chk@plt+0x56b0>
   16604:	cmp	r0, #0
   16608:	beq	16624 <__mempcpy_chk@plt+0x5614>
   1660c:	mov	r1, r4
   16610:	mov	r2, r5
   16614:	mov	r6, r0
   16618:	bl	10e24 <memcpy@plt>
   1661c:	mov	r0, r6
   16620:	pop	{r4, r5, r6, sl, fp, pc}
   16624:	bl	16628 <__mempcpy_chk@plt+0x5618>
   16628:	push	{fp, lr}
   1662c:	mov	fp, sp
   16630:	movw	r0, #33004	; 0x80ec
   16634:	movw	r1, #30936	; 0x78d8
   16638:	mov	r2, #5
   1663c:	movt	r0, #2
   16640:	movt	r1, #1
   16644:	ldr	r4, [r0]
   16648:	mov	r0, #0
   1664c:	bl	10e48 <dcgettext@plt>
   16650:	movw	r2, #29772	; 0x744c
   16654:	mov	r3, r0
   16658:	mov	r0, r4
   1665c:	mov	r1, #0
   16660:	movt	r2, #1
   16664:	bl	10ecc <error@plt>
   16668:	bl	10ff8 <abort@plt>
   1666c:	clz	r2, r1
   16670:	clz	r3, r0
   16674:	lsr	r2, r2, #5
   16678:	lsr	r3, r3, #5
   1667c:	orrs	r2, r3, r2
   16680:	movwne	r1, #1
   16684:	movwne	r0, #1
   16688:	cmp	r1, #0
   1668c:	beq	166bc <__mempcpy_chk@plt+0x56ac>
   16690:	mvn	r2, #-2147483648	; 0x80000000
   16694:	udiv	r2, r2, r1
   16698:	cmp	r2, r0
   1669c:	bcs	166bc <__mempcpy_chk@plt+0x56ac>
   166a0:	push	{fp, lr}
   166a4:	mov	fp, sp
   166a8:	bl	10f44 <__errno_location@plt>
   166ac:	mov	r1, #12
   166b0:	str	r1, [r0]
   166b4:	mov	r0, #0
   166b8:	pop	{fp, pc}
   166bc:	b	10db8 <calloc@plt>
   166c0:	cmp	r0, #0
   166c4:	movweq	r0, #1
   166c8:	cmn	r0, #1
   166cc:	ble	166d4 <__mempcpy_chk@plt+0x56c4>
   166d0:	b	10ed8 <malloc@plt>
   166d4:	push	{fp, lr}
   166d8:	mov	fp, sp
   166dc:	bl	10f44 <__errno_location@plt>
   166e0:	mov	r1, #12
   166e4:	str	r1, [r0]
   166e8:	mov	r0, #0
   166ec:	pop	{fp, pc}
   166f0:	push	{fp, lr}
   166f4:	mov	fp, sp
   166f8:	cmp	r0, #0
   166fc:	beq	16718 <__mempcpy_chk@plt+0x5708>
   16700:	cmp	r1, #0
   16704:	beq	16724 <__mempcpy_chk@plt+0x5714>
   16708:	cmn	r1, #1
   1670c:	ble	16730 <__mempcpy_chk@plt+0x5720>
   16710:	pop	{fp, lr}
   16714:	b	10e54 <realloc@plt>
   16718:	mov	r0, r1
   1671c:	pop	{fp, lr}
   16720:	b	166c0 <__mempcpy_chk@plt+0x56b0>
   16724:	bl	1279c <__mempcpy_chk@plt+0x178c>
   16728:	mov	r0, #0
   1672c:	pop	{fp, pc}
   16730:	bl	10f44 <__errno_location@plt>
   16734:	mov	r1, #12
   16738:	str	r1, [r0]
   1673c:	mov	r0, #0
   16740:	pop	{fp, pc}
   16744:	push	{r4, r5, r6, sl, fp, lr}
   16748:	add	fp, sp, #16
   1674c:	mov	r4, r0
   16750:	bl	10eb4 <__fpending@plt>
   16754:	ldr	r6, [r4]
   16758:	mov	r5, r0
   1675c:	mov	r0, r4
   16760:	bl	167c8 <__mempcpy_chk@plt+0x57b8>
   16764:	tst	r6, #32
   16768:	bne	167a0 <__mempcpy_chk@plt+0x5790>
   1676c:	cmp	r0, #0
   16770:	mov	r4, r0
   16774:	mvnne	r4, #0
   16778:	cmp	r5, #0
   1677c:	bne	167ac <__mempcpy_chk@plt+0x579c>
   16780:	cmp	r0, #0
   16784:	beq	167ac <__mempcpy_chk@plt+0x579c>
   16788:	bl	10f44 <__errno_location@plt>
   1678c:	ldr	r0, [r0]
   16790:	subs	r4, r0, #9
   16794:	mvnne	r4, #0
   16798:	mov	r0, r4
   1679c:	pop	{r4, r5, r6, sl, fp, pc}
   167a0:	mvn	r4, #0
   167a4:	cmp	r0, #0
   167a8:	beq	167b4 <__mempcpy_chk@plt+0x57a4>
   167ac:	mov	r0, r4
   167b0:	pop	{r4, r5, r6, sl, fp, pc}
   167b4:	bl	10f44 <__errno_location@plt>
   167b8:	mov	r1, #0
   167bc:	str	r1, [r0]
   167c0:	mov	r0, r4
   167c4:	pop	{r4, r5, r6, sl, fp, pc}
   167c8:	push	{r4, r5, r6, sl, fp, lr}
   167cc:	add	fp, sp, #16
   167d0:	sub	sp, sp, #8
   167d4:	mov	r4, r0
   167d8:	bl	10f74 <fileno@plt>
   167dc:	cmn	r0, #1
   167e0:	ble	16854 <__mempcpy_chk@plt+0x5844>
   167e4:	mov	r0, r4
   167e8:	bl	10ef0 <__freading@plt>
   167ec:	cmp	r0, #0
   167f0:	beq	1681c <__mempcpy_chk@plt+0x580c>
   167f4:	mov	r0, r4
   167f8:	bl	10f74 <fileno@plt>
   167fc:	mov	r1, #1
   16800:	mov	r2, #0
   16804:	mov	r3, #0
   16808:	str	r1, [sp]
   1680c:	bl	10e9c <lseek64@plt>
   16810:	and	r0, r0, r1
   16814:	cmn	r0, #1
   16818:	beq	16854 <__mempcpy_chk@plt+0x5844>
   1681c:	mov	r0, r4
   16820:	bl	16864 <__mempcpy_chk@plt+0x5854>
   16824:	cmp	r0, #0
   16828:	beq	16854 <__mempcpy_chk@plt+0x5844>
   1682c:	bl	10f44 <__errno_location@plt>
   16830:	ldr	r6, [r0]
   16834:	mov	r5, r0
   16838:	mov	r0, r4
   1683c:	bl	10f8c <fclose@plt>
   16840:	cmp	r6, #0
   16844:	strne	r6, [r5]
   16848:	mvnne	r0, #0
   1684c:	sub	sp, fp, #16
   16850:	pop	{r4, r5, r6, sl, fp, pc}
   16854:	mov	r0, r4
   16858:	sub	sp, fp, #16
   1685c:	pop	{r4, r5, r6, sl, fp, lr}
   16860:	b	10f8c <fclose@plt>
   16864:	push	{r4, sl, fp, lr}
   16868:	add	fp, sp, #8
   1686c:	sub	sp, sp, #8
   16870:	mov	r4, r0
   16874:	cmp	r0, #0
   16878:	beq	16894 <__mempcpy_chk@plt+0x5884>
   1687c:	mov	r0, r4
   16880:	bl	10ef0 <__freading@plt>
   16884:	cmp	r0, #0
   16888:	ldrbne	r0, [r4, #1]
   1688c:	tstne	r0, #1
   16890:	bne	168a4 <__mempcpy_chk@plt+0x5894>
   16894:	mov	r0, r4
   16898:	sub	sp, fp, #8
   1689c:	pop	{r4, sl, fp, lr}
   168a0:	b	10de8 <fflush@plt>
   168a4:	mov	r0, #1
   168a8:	mov	r2, #0
   168ac:	mov	r3, #0
   168b0:	str	r0, [sp]
   168b4:	mov	r0, r4
   168b8:	bl	168c0 <__mempcpy_chk@plt+0x58b0>
   168bc:	b	16894 <__mempcpy_chk@plt+0x5884>
   168c0:	push	{r4, r5, r6, r7, fp, lr}
   168c4:	add	fp, sp, #16
   168c8:	sub	sp, sp, #8
   168cc:	mov	r4, r0
   168d0:	ldr	r0, [r0, #4]
   168d4:	mov	r5, r3
   168d8:	mov	r6, r2
   168dc:	ldr	r1, [r4, #8]
   168e0:	cmp	r1, r0
   168e4:	bne	16900 <__mempcpy_chk@plt+0x58f0>
   168e8:	ldrd	r0, [r4, #16]
   168ec:	cmp	r1, r0
   168f0:	bne	16900 <__mempcpy_chk@plt+0x58f0>
   168f4:	ldr	r0, [r4, #36]	; 0x24
   168f8:	cmp	r0, #0
   168fc:	beq	16918 <__mempcpy_chk@plt+0x5908>
   16900:	mov	r0, r4
   16904:	mov	r2, r6
   16908:	mov	r3, r5
   1690c:	sub	sp, fp, #16
   16910:	pop	{r4, r5, r6, r7, fp, lr}
   16914:	b	10f98 <fseeko64@plt>
   16918:	ldr	r7, [fp, #8]
   1691c:	mov	r0, r4
   16920:	bl	10f74 <fileno@plt>
   16924:	mov	r2, r6
   16928:	mov	r3, r5
   1692c:	str	r7, [sp]
   16930:	bl	10e9c <lseek64@plt>
   16934:	and	r2, r0, r1
   16938:	cmn	r2, #1
   1693c:	mvneq	r0, #0
   16940:	subeq	sp, fp, #16
   16944:	popeq	{r4, r5, r6, r7, fp, pc}
   16948:	strd	r0, [r4, #80]	; 0x50
   1694c:	ldr	r0, [r4]
   16950:	bic	r0, r0, #16
   16954:	str	r0, [r4]
   16958:	mov	r0, #0
   1695c:	sub	sp, fp, #16
   16960:	pop	{r4, r5, r6, r7, fp, pc}
   16964:	ldrb	r2, [r0]
   16968:	cmp	r2, #0
   1696c:	beq	16990 <__mempcpy_chk@plt+0x5980>
   16970:	add	r3, r0, #1
   16974:	mov	r0, #0
   16978:	ror	r0, r0, #23
   1697c:	uxtab	r0, r0, r2
   16980:	ldrb	r2, [r3], #1
   16984:	cmp	r2, #0
   16988:	bne	16978 <__mempcpy_chk@plt+0x5968>
   1698c:	b	16994 <__mempcpy_chk@plt+0x5984>
   16990:	mov	r0, #0
   16994:	udiv	r2, r0, r1
   16998:	mls	r0, r2, r1, r0
   1699c:	bx	lr
   169a0:	push	{fp, lr}
   169a4:	mov	fp, sp
   169a8:	mov	r0, #14
   169ac:	bl	10fc8 <nl_langinfo@plt>
   169b0:	movw	r1, #28176	; 0x6e10
   169b4:	cmp	r0, #0
   169b8:	movt	r1, #1
   169bc:	movne	r1, r0
   169c0:	movw	r0, #30953	; 0x78e9
   169c4:	ldrb	r2, [r1]
   169c8:	movt	r0, #1
   169cc:	cmp	r2, #0
   169d0:	movne	r0, r1
   169d4:	pop	{fp, pc}
   169d8:	push	{r4, r5, r6, r7, fp, lr}
   169dc:	add	fp, sp, #16
   169e0:	sub	sp, sp, #8
   169e4:	add	r5, sp, #4
   169e8:	cmp	r0, #0
   169ec:	mov	r7, r2
   169f0:	mov	r4, r1
   169f4:	movne	r5, r0
   169f8:	mov	r0, r5
   169fc:	bl	10ec0 <mbrtowc@plt>
   16a00:	mov	r6, r0
   16a04:	cmp	r7, #0
   16a08:	beq	16a2c <__mempcpy_chk@plt+0x5a1c>
   16a0c:	cmn	r6, #2
   16a10:	bcc	16a2c <__mempcpy_chk@plt+0x5a1c>
   16a14:	mov	r0, #0
   16a18:	bl	16a74 <__mempcpy_chk@plt+0x5a64>
   16a1c:	cmp	r0, #0
   16a20:	ldrbeq	r0, [r4]
   16a24:	moveq	r6, #1
   16a28:	streq	r0, [r5]
   16a2c:	mov	r0, r6
   16a30:	sub	sp, fp, #16
   16a34:	pop	{r4, r5, r6, r7, fp, pc}
   16a38:	cmp	r2, #0
   16a3c:	beq	16a6c <__mempcpy_chk@plt+0x5a5c>
   16a40:	mvn	r3, #0
   16a44:	udiv	r3, r3, r2
   16a48:	cmp	r3, r1
   16a4c:	bcs	16a6c <__mempcpy_chk@plt+0x5a5c>
   16a50:	push	{fp, lr}
   16a54:	mov	fp, sp
   16a58:	bl	10f44 <__errno_location@plt>
   16a5c:	mov	r1, #12
   16a60:	str	r1, [r0]
   16a64:	mov	r0, #0
   16a68:	pop	{fp, pc}
   16a6c:	mul	r1, r2, r1
   16a70:	b	166f0 <__mempcpy_chk@plt+0x56e0>
   16a74:	push	{r4, sl, fp, lr}
   16a78:	add	fp, sp, #8
   16a7c:	sub	sp, sp, #264	; 0x108
   16a80:	add	r1, sp, #7
   16a84:	movw	r2, #257	; 0x101
   16a88:	bl	16ad8 <__mempcpy_chk@plt+0x5ac8>
   16a8c:	mov	r4, #0
   16a90:	cmp	r0, #0
   16a94:	bne	16acc <__mempcpy_chk@plt+0x5abc>
   16a98:	movw	r1, #30959	; 0x78ef
   16a9c:	add	r0, sp, #7
   16aa0:	movt	r1, #1
   16aa4:	bl	10ddc <strcmp@plt>
   16aa8:	cmp	r0, #0
   16aac:	beq	16acc <__mempcpy_chk@plt+0x5abc>
   16ab0:	movw	r1, #30961	; 0x78f1
   16ab4:	add	r0, sp, #7
   16ab8:	movt	r1, #1
   16abc:	bl	10ddc <strcmp@plt>
   16ac0:	mov	r4, r0
   16ac4:	cmp	r0, #0
   16ac8:	movwne	r4, #1
   16acc:	mov	r0, r4
   16ad0:	sub	sp, fp, #8
   16ad4:	pop	{r4, sl, fp, pc}
   16ad8:	push	{r4, r5, r6, r7, fp, lr}
   16adc:	add	fp, sp, #16
   16ae0:	mov	r4, r1
   16ae4:	mov	r1, #0
   16ae8:	mov	r6, r2
   16aec:	bl	10fb0 <setlocale@plt>
   16af0:	cmp	r0, #0
   16af4:	beq	16b24 <__mempcpy_chk@plt+0x5b14>
   16af8:	mov	r7, r0
   16afc:	bl	10f38 <strlen@plt>
   16b00:	cmp	r0, r6
   16b04:	bcs	16b44 <__mempcpy_chk@plt+0x5b34>
   16b08:	add	r2, r0, #1
   16b0c:	mov	r0, r4
   16b10:	mov	r1, r7
   16b14:	bl	10e24 <memcpy@plt>
   16b18:	mov	r5, #0
   16b1c:	mov	r0, r5
   16b20:	pop	{r4, r5, r6, r7, fp, pc}
   16b24:	cmp	r6, #0
   16b28:	mov	r5, #22
   16b2c:	movne	r0, #0
   16b30:	strbne	r0, [r4]
   16b34:	movne	r0, r5
   16b38:	popne	{r4, r5, r6, r7, fp, pc}
   16b3c:	mov	r0, r5
   16b40:	pop	{r4, r5, r6, r7, fp, pc}
   16b44:	mov	r5, #34	; 0x22
   16b48:	cmp	r6, #0
   16b4c:	beq	16b6c <__mempcpy_chk@plt+0x5b5c>
   16b50:	sub	r6, r6, #1
   16b54:	mov	r0, r4
   16b58:	mov	r1, r7
   16b5c:	mov	r2, r6
   16b60:	bl	10e24 <memcpy@plt>
   16b64:	mov	r0, #0
   16b68:	strb	r0, [r4, r6]
   16b6c:	mov	r0, r5
   16b70:	pop	{r4, r5, r6, r7, fp, pc}
   16b74:	mov	r1, #0
   16b78:	b	10fb0 <setlocale@plt>
   16b7c:	cmp	r3, #0
   16b80:	cmpeq	r2, #0
   16b84:	bne	16b9c <__mempcpy_chk@plt+0x5b8c>
   16b88:	cmp	r1, #0
   16b8c:	cmpeq	r0, #0
   16b90:	mvnne	r1, #0
   16b94:	mvnne	r0, #0
   16b98:	b	16bb8 <__mempcpy_chk@plt+0x5ba8>
   16b9c:	sub	sp, sp, #8
   16ba0:	push	{sp, lr}
   16ba4:	bl	16bc8 <__mempcpy_chk@plt+0x5bb8>
   16ba8:	ldr	lr, [sp, #4]
   16bac:	add	sp, sp, #8
   16bb0:	pop	{r2, r3}
   16bb4:	bx	lr
   16bb8:	push	{r1, lr}
   16bbc:	mov	r0, #8
   16bc0:	bl	10dd0 <raise@plt>
   16bc4:	pop	{r1, pc}
   16bc8:	cmp	r1, r3
   16bcc:	cmpeq	r0, r2
   16bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bd4:	mov	r4, r0
   16bd8:	movcc	r0, #0
   16bdc:	mov	r5, r1
   16be0:	ldr	lr, [sp, #36]	; 0x24
   16be4:	movcc	r1, r0
   16be8:	bcc	16ce4 <__mempcpy_chk@plt+0x5cd4>
   16bec:	cmp	r3, #0
   16bf0:	clzeq	ip, r2
   16bf4:	clzne	ip, r3
   16bf8:	addeq	ip, ip, #32
   16bfc:	cmp	r5, #0
   16c00:	clzeq	r1, r4
   16c04:	addeq	r1, r1, #32
   16c08:	clzne	r1, r5
   16c0c:	sub	ip, ip, r1
   16c10:	sub	sl, ip, #32
   16c14:	lsl	r9, r3, ip
   16c18:	rsb	fp, ip, #32
   16c1c:	orr	r9, r9, r2, lsl sl
   16c20:	orr	r9, r9, r2, lsr fp
   16c24:	lsl	r8, r2, ip
   16c28:	cmp	r5, r9
   16c2c:	cmpeq	r4, r8
   16c30:	movcc	r0, #0
   16c34:	movcc	r1, r0
   16c38:	bcc	16c54 <__mempcpy_chk@plt+0x5c44>
   16c3c:	mov	r0, #1
   16c40:	subs	r4, r4, r8
   16c44:	lsl	r1, r0, sl
   16c48:	orr	r1, r1, r0, lsr fp
   16c4c:	lsl	r0, r0, ip
   16c50:	sbc	r5, r5, r9
   16c54:	cmp	ip, #0
   16c58:	beq	16ce4 <__mempcpy_chk@plt+0x5cd4>
   16c5c:	lsr	r6, r8, #1
   16c60:	orr	r6, r6, r9, lsl #31
   16c64:	lsr	r7, r9, #1
   16c68:	mov	r2, ip
   16c6c:	b	16c90 <__mempcpy_chk@plt+0x5c80>
   16c70:	subs	r3, r4, r6
   16c74:	sbc	r8, r5, r7
   16c78:	adds	r3, r3, r3
   16c7c:	adc	r8, r8, r8
   16c80:	adds	r4, r3, #1
   16c84:	adc	r5, r8, #0
   16c88:	subs	r2, r2, #1
   16c8c:	beq	16cac <__mempcpy_chk@plt+0x5c9c>
   16c90:	cmp	r5, r7
   16c94:	cmpeq	r4, r6
   16c98:	bcs	16c70 <__mempcpy_chk@plt+0x5c60>
   16c9c:	adds	r4, r4, r4
   16ca0:	adc	r5, r5, r5
   16ca4:	subs	r2, r2, #1
   16ca8:	bne	16c90 <__mempcpy_chk@plt+0x5c80>
   16cac:	lsr	r3, r4, ip
   16cb0:	orr	r3, r3, r5, lsl fp
   16cb4:	lsr	r2, r5, ip
   16cb8:	orr	r3, r3, r5, lsr sl
   16cbc:	adds	r0, r0, r4
   16cc0:	mov	r4, r3
   16cc4:	lsl	r3, r2, ip
   16cc8:	orr	r3, r3, r4, lsl sl
   16ccc:	lsl	ip, r4, ip
   16cd0:	orr	r3, r3, r4, lsr fp
   16cd4:	adc	r1, r1, r5
   16cd8:	subs	r0, r0, ip
   16cdc:	mov	r5, r2
   16ce0:	sbc	r1, r1, r3
   16ce4:	cmp	lr, #0
   16ce8:	strdne	r4, [lr]
   16cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16cf4:	mov	r7, r0
   16cf8:	ldr	r6, [pc, #72]	; 16d48 <__mempcpy_chk@plt+0x5d38>
   16cfc:	ldr	r5, [pc, #72]	; 16d4c <__mempcpy_chk@plt+0x5d3c>
   16d00:	add	r6, pc, r6
   16d04:	add	r5, pc, r5
   16d08:	sub	r6, r6, r5
   16d0c:	mov	r8, r1
   16d10:	mov	r9, r2
   16d14:	bl	10d98 <calloc@plt-0x20>
   16d18:	asrs	r6, r6, #2
   16d1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d20:	mov	r4, #0
   16d24:	add	r4, r4, #1
   16d28:	ldr	r3, [r5], #4
   16d2c:	mov	r2, r9
   16d30:	mov	r1, r8
   16d34:	mov	r0, r7
   16d38:	blx	r3
   16d3c:	cmp	r6, r4
   16d40:	bne	16d24 <__mempcpy_chk@plt+0x5d14>
   16d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d48:	andeq	r1, r1, r4, lsl #4
   16d4c:	strdeq	r1, [r1], -ip
   16d50:	bx	lr
   16d54:	ldr	r3, [pc, #12]	; 16d68 <__mempcpy_chk@plt+0x5d58>
   16d58:	mov	r1, #0
   16d5c:	add	r3, pc, r3
   16d60:	ldr	r2, [r3]
   16d64:	b	10f50 <__cxa_atexit@plt>
   16d68:	andeq	r1, r1, r0, lsl #7

Disassembly of section .fini:

00016d6c <.fini>:
   16d6c:	push	{r3, lr}
   16d70:	pop	{r3, pc}
