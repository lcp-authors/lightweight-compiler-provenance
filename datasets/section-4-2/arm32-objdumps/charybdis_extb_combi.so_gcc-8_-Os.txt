
../repos/charybdis/extensions/.libs/extb_combi.so:     file format elf32-littlearm


Disassembly of section .init:

00000368 <_init>:
 368:	push	{r3, lr}
 36c:	bl	3ac <call_weak_fn>
 370:	pop	{r3, pc}

Disassembly of section .plt:

00000374 <.plt>:
 374:	push	{lr}		; (str lr, [sp, #-4]!)
 378:	ldr	lr, [pc, #4]	; 384 <.plt+0x10>
 37c:	add	lr, pc, lr
 380:	ldr	pc, [lr, #8]!
 384:	.word	0x00010c7c

00000388 <__cxa_finalize@plt>:
 388:	add	ip, pc, #0, 12
 38c:	add	ip, ip, #16, 20	; 0x10000
 390:	ldr	pc, [ip, #3196]!	; 0xc7c

00000394 <__gmon_start__@plt>:
 394:	add	ip, pc, #0, 12
 398:	add	ip, ip, #16, 20	; 0x10000
 39c:	ldr	pc, [ip, #3188]!	; 0xc74

000003a0 <strlen@plt>:
 3a0:	add	ip, pc, #0, 12
 3a4:	add	ip, ip, #16, 20	; 0x10000
 3a8:	ldr	pc, [ip, #3180]!	; 0xc6c

Disassembly of section .text:

000003ac <call_weak_fn>:
 3ac:	ldr	r3, [pc, #20]	; 3c8 <call_weak_fn+0x1c>
 3b0:	ldr	r2, [pc, #20]	; 3cc <call_weak_fn+0x20>
 3b4:	add	r3, pc, r3
 3b8:	ldr	r2, [r3, r2]
 3bc:	cmp	r2, #0
 3c0:	bxeq	lr
 3c4:	b	394 <__gmon_start__@plt>
 3c8:	.word	0x00010c44
 3cc:	.word	0x00000020

000003d0 <deregister_tm_clones>:
 3d0:	ldr	r0, [pc, #44]	; 404 <deregister_tm_clones+0x34>
 3d4:	ldr	r3, [pc, #44]	; 408 <deregister_tm_clones+0x38>
 3d8:	add	r0, pc, r0
 3dc:	add	r3, pc, r3
 3e0:	cmp	r3, r0
 3e4:	ldr	r3, [pc, #32]	; 40c <deregister_tm_clones+0x3c>
 3e8:	add	r3, pc, r3
 3ec:	bxeq	lr
 3f0:	ldr	r2, [pc, #24]	; 410 <deregister_tm_clones+0x40>
 3f4:	ldr	r3, [r3, r2]
 3f8:	cmp	r3, #0
 3fc:	bxeq	lr
 400:	bx	r3
 404:	.word	0x00010c78
 408:	.word	0x00010c74
 40c:	.word	0x00010c10
 410:	.word	0x0000001c

00000414 <register_tm_clones>:
 414:	ldr	r0, [pc, #56]	; 454 <register_tm_clones+0x40>
 418:	ldr	r3, [pc, #56]	; 458 <register_tm_clones+0x44>
 41c:	add	r0, pc, r0
 420:	add	r3, pc, r3
 424:	sub	r1, r3, r0
 428:	ldr	r3, [pc, #44]	; 45c <register_tm_clones+0x48>
 42c:	asr	r1, r1, #2
 430:	add	r3, pc, r3
 434:	add	r1, r1, r1, lsr #31
 438:	asrs	r1, r1, #1
 43c:	bxeq	lr
 440:	ldr	r2, [pc, #24]	; 460 <register_tm_clones+0x4c>
 444:	ldr	r3, [r3, r2]
 448:	cmp	r3, #0
 44c:	bxeq	lr
 450:	bx	r3
 454:	.word	0x00010c34
 458:	.word	0x00010c30
 45c:	.word	0x00010bc8
 460:	.word	0x00000028

00000464 <__do_global_dtors_aux>:
 464:	ldr	r3, [pc, #76]	; 4b8 <__do_global_dtors_aux+0x54>
 468:	ldr	r2, [pc, #76]	; 4bc <__do_global_dtors_aux+0x58>
 46c:	add	r3, pc, r3
 470:	add	r2, pc, r2
 474:	ldrb	r3, [r3]
 478:	cmp	r3, #0
 47c:	bxne	lr
 480:	ldr	r3, [pc, #56]	; 4c0 <__do_global_dtors_aux+0x5c>
 484:	push	{r4, lr}
 488:	ldr	r3, [r2, r3]
 48c:	cmp	r3, #0
 490:	beq	4a0 <__do_global_dtors_aux+0x3c>
 494:	ldr	r3, [pc, #40]	; 4c4 <__do_global_dtors_aux+0x60>
 498:	ldr	r0, [pc, r3]
 49c:	bl	388 <__cxa_finalize@plt>
 4a0:	bl	3d0 <deregister_tm_clones>
 4a4:	ldr	r3, [pc, #28]	; 4c8 <__do_global_dtors_aux+0x64>
 4a8:	mov	r2, #1
 4ac:	add	r3, pc, r3
 4b0:	strb	r2, [r3]
 4b4:	pop	{r4, pc}
 4b8:	.word	0x00010be4
 4bc:	.word	0x00010b88
 4c0:	.word	0x00000018
 4c4:	.word	0x00010b8c
 4c8:	.word	0x00010ba4

000004cc <frame_dummy>:
 4cc:	b	414 <register_tm_clones>

000004d0 <_modinit>:
 4d0:	ldr	r3, [pc, #40]	; 500 <_modinit+0x30>
 4d4:	mov	r0, #0
 4d8:	ldr	r2, [pc, #36]	; 504 <_modinit+0x34>
 4dc:	add	r3, pc, r3
 4e0:	ldr	r3, [r3, r2]
 4e4:	ldr	r2, [pc, #28]	; 508 <_modinit+0x38>
 4e8:	add	r2, pc, r2
 4ec:	str	r2, [r3, #152]	; 0x98
 4f0:	ldr	r2, [pc, #20]	; 50c <_modinit+0x3c>
 4f4:	add	r2, pc, r2
 4f8:	str	r2, [r3, #496]	; 0x1f0
 4fc:	bx	lr
 500:	.word	0x00010b1c
 504:	.word	0x00000024
 508:	.word	0x0000030c
 50c:	.word	0x000002e8

00000510 <_moddeinit>:
 510:	ldr	r3, [pc, #24]	; 530 <_moddeinit+0x20>
 514:	ldr	r2, [pc, #24]	; 534 <_moddeinit+0x24>
 518:	add	r3, pc, r3
 51c:	ldr	r3, [r3, r2]
 520:	mov	r2, #0
 524:	str	r2, [r3, #152]	; 0x98
 528:	str	r2, [r3, #496]	; 0x1f0
 52c:	bx	lr
 530:	.word	0x00010ae0
 534:	.word	0x00000024

00000538 <eb_combi>:
 538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 53c:	mov	fp, r3
 540:	sub	sp, sp, #212	; 0xd4
 544:	ldr	r3, [pc, #624]	; 7bc <eb_combi+0x284>
 548:	stm	sp, {r1, r2}
 54c:	ldr	r8, [pc, #620]	; 7c0 <eb_combi+0x288>
 550:	ldrb	r7, [sp, #248]	; 0xf8
 554:	add	r3, pc, r3
 558:	ldr	r6, [r3]
 55c:	add	r8, pc, r8
 560:	cmp	r6, #4
 564:	movle	r3, #0
 568:	movgt	r3, #1
 56c:	cmp	r0, #0
 570:	moveq	r3, #1
 574:	cmp	r3, #0
 578:	bne	624 <eb_combi+0xec>
 57c:	ldrb	r9, [r0]
 580:	mov	r5, r0
 584:	cmp	r9, #0
 588:	beq	624 <eb_combi+0xec>
 58c:	bl	3a0 <strlen@plt>
 590:	cmp	r0, #195	; 0xc3
 594:	bhi	624 <eb_combi+0xec>
 598:	cmp	r9, #40	; 0x28
 59c:	add	r4, r5, r0
 5a0:	bne	5b8 <eb_combi+0x80>
 5a4:	ldrb	r3, [r4, #-1]
 5a8:	cmp	r3, #41	; 0x29
 5ac:	bne	624 <eb_combi+0xec>
 5b0:	add	r5, r5, #1
 5b4:	sub	r4, r4, #1
 5b8:	cmp	r5, r4
 5bc:	beq	624 <eb_combi+0xec>
 5c0:	ldr	r3, [pc, #508]	; 7c4 <eb_combi+0x28c>
 5c4:	add	r6, r6, #1
 5c8:	mov	r2, #0
 5cc:	add	r3, pc, r3
 5d0:	str	r6, [r3]
 5d4:	mov	r6, #11
 5d8:	subs	r6, r6, #1
 5dc:	bne	5f4 <eb_combi+0xbc>
 5e0:	cmp	r5, r4
 5e4:	beq	794 <eb_combi+0x25c>
 5e8:	ldr	r2, [pc, #472]	; 7c8 <eb_combi+0x290>
 5ec:	add	r2, pc, r2
 5f0:	b	618 <eb_combi+0xe0>
 5f4:	ldrb	r3, [r5]
 5f8:	cmp	r3, #126	; 0x7e
 5fc:	movne	r9, #0
 600:	bne	630 <eb_combi+0xf8>
 604:	add	r5, r5, #1
 608:	cmp	r5, r4
 60c:	bne	62c <eb_combi+0xf4>
 610:	ldr	r2, [pc, #436]	; 7cc <eb_combi+0x294>
 614:	add	r2, pc, r2
 618:	ldr	r3, [r2]
 61c:	sub	r3, r3, #1
 620:	str	r3, [r2]
 624:	mvn	r0, #0
 628:	b	7b4 <eb_combi+0x27c>
 62c:	mov	r9, #1
 630:	ldr	r3, [pc, #408]	; 7d0 <eb_combi+0x298>
 634:	ldrb	r1, [r5]
 638:	ldr	r3, [r8, r3]
 63c:	ldr	sl, [r3, r1, lsl #2]
 640:	cmp	sl, #0
 644:	beq	610 <eb_combi+0xd8>
 648:	ldrb	r3, [r5, #1]
 64c:	cmp	r3, #58	; 0x3a
 650:	addne	r5, r5, #1
 654:	movne	r0, #0
 658:	bne	728 <eb_combi+0x1f0>
 65c:	mov	lr, #0
 660:	add	r0, r5, #2
 664:	add	r3, sp, #12
 668:	mov	ip, lr
 66c:	cmp	r4, r0
 670:	mov	r5, r0
 674:	bne	68c <eb_combi+0x154>
 678:	cmp	ip, #0
 67c:	beq	71c <eb_combi+0x1e4>
 680:	ldr	r2, [pc, #332]	; 7d4 <eb_combi+0x29c>
 684:	add	r2, pc, r2
 688:	b	618 <eb_combi+0xe0>
 68c:	cmp	lr, #0
 690:	ldrb	r1, [r0], #1
 694:	beq	6d0 <eb_combi+0x198>
 698:	cmp	r1, #92	; 0x5c
 69c:	cmpne	r1, #44	; 0x2c
 6a0:	sub	r5, r1, #40	; 0x28
 6a4:	movne	lr, #1
 6a8:	moveq	lr, #0
 6ac:	cmp	r5, #1
 6b0:	movls	lr, #0
 6b4:	andhi	lr, lr, #1
 6b8:	cmp	lr, #0
 6bc:	movne	lr, #92	; 0x5c
 6c0:	strbne	lr, [r3], #1
 6c4:	mov	lr, #0
 6c8:	strb	r1, [r3], #1
 6cc:	b	66c <eb_combi+0x134>
 6d0:	cmp	r1, #41	; 0x29
 6d4:	beq	704 <eb_combi+0x1cc>
 6d8:	bhi	6ec <eb_combi+0x1b4>
 6dc:	cmp	r1, #40	; 0x28
 6e0:	addeq	ip, ip, #1
 6e4:	strb	r1, [r3], #1
 6e8:	b	66c <eb_combi+0x134>
 6ec:	cmp	r1, #44	; 0x2c
 6f0:	beq	714 <eb_combi+0x1dc>
 6f4:	cmp	r1, #92	; 0x5c
 6f8:	moveq	lr, #1
 6fc:	beq	66c <eb_combi+0x134>
 700:	b	6e4 <eb_combi+0x1ac>
 704:	cmp	ip, #0
 708:	beq	680 <eb_combi+0x148>
 70c:	sub	ip, ip, #1
 710:	b	6e4 <eb_combi+0x1ac>
 714:	cmp	ip, #0
 718:	bne	6e4 <eb_combi+0x1ac>
 71c:	mov	r1, #0
 720:	add	r0, sp, #12
 724:	strb	r1, [r3]
 728:	cmp	r2, #0
 72c:	bne	768 <eb_combi+0x230>
 730:	mov	r3, fp
 734:	ldm	sp, {r1, r2}
 738:	blx	sl
 73c:	cmn	r0, #1
 740:	ldreq	r2, [pc, #144]	; 7d8 <eb_combi+0x2a0>
 744:	addeq	r2, pc, r2
 748:	beq	618 <eb_combi+0xe0>
 74c:	cmp	r9, #0
 750:	subeq	r2, r0, #1
 754:	clzne	r2, r0
 758:	clzeq	r2, r2
 75c:	cmp	r7, #0
 760:	lsr	r2, r2, #5
 764:	eorne	r2, r2, #1
 768:	cmp	r5, r4
 76c:	beq	794 <eb_combi+0x25c>
 770:	ldrb	r3, [r5], #1
 774:	cmp	r3, #44	; 0x2c
 778:	beq	788 <eb_combi+0x250>
 77c:	ldr	r2, [pc, #88]	; 7dc <eb_combi+0x2a4>
 780:	add	r2, pc, r2
 784:	b	618 <eb_combi+0xe0>
 788:	cmp	r4, r5
 78c:	bne	5d8 <eb_combi+0xa0>
 790:	b	77c <eb_combi+0x244>
 794:	ldr	r1, [pc, #68]	; 7e0 <eb_combi+0x2a8>
 798:	cmp	r7, #0
 79c:	eorne	r0, r2, #1
 7a0:	moveq	r0, r2
 7a4:	add	r1, pc, r1
 7a8:	ldr	r3, [r1]
 7ac:	sub	r3, r3, #1
 7b0:	str	r3, [r1]
 7b4:	add	sp, sp, #212	; 0xd4
 7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7bc:	.word	0x00010b00
 7c0:	.word	0x00010a9c
 7c4:	.word	0x00010a88
 7c8:	.word	0x00010a68
 7cc:	.word	0x00010a40
 7d0:	.word	0x00000024
 7d4:	.word	0x000109d0
 7d8:	.word	0x00010910
 7dc:	.word	0x000108d4
 7e0:	.word	0x000108b0

000007e4 <eb_or>:
 7e4:	mov	ip, #0
 7e8:	push	{r0, r1, r2, lr}
 7ec:	str	ip, [sp]
 7f0:	bl	538 <eb_combi>
 7f4:	add	sp, sp, #12
 7f8:	pop	{pc}		; (ldr pc, [sp], #4)

000007fc <eb_and>:
 7fc:	mov	ip, #1
 800:	push	{r0, r1, r2, lr}
 804:	str	ip, [sp]
 808:	bl	538 <eb_combi>
 80c:	add	sp, sp, #12
 810:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00000814 <_fini>:
 814:	push	{r3, lr}
 818:	pop	{r3, pc}
