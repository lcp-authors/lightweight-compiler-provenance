
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010da4 <.init>:
   10da4:	push	{r3, lr}
   10da8:	bl	11070 <putchar_unlocked@plt+0x48>
   10dac:	pop	{r3, pc}

Disassembly of section .plt:

00010db0 <calloc@plt-0x14>:
   10db0:	push	{lr}		; (str lr, [sp, #-4]!)
   10db4:	ldr	lr, [pc, #4]	; 10dc0 <calloc@plt-0x4>
   10db8:	add	lr, pc, lr
   10dbc:	ldr	pc, [lr, #8]!
   10dc0:	andeq	r5, r1, r0, asr #4

00010dc4 <calloc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #576]!	; 0x240

00010dd0 <fputs_unlocked@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #568]!	; 0x238

00010ddc <raise@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #560]!	; 0x230

00010de8 <getpwnam@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #552]!	; 0x228

00010df4 <strcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #544]!	; 0x220

00010e00 <getpwuid@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #536]!	; 0x218

00010e0c <fflush@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #528]!	; 0x210

00010e18 <getuid@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #520]!	; 0x208

00010e24 <free@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #512]!	; 0x200

00010e30 <_exit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #504]!	; 0x1f8

00010e3c <memcpy@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #496]!	; 0x1f0

00010e48 <mbsinit@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #488]!	; 0x1e8

00010e54 <memcmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e60 <dcgettext@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #472]!	; 0x1d8

00010e6c <realloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #464]!	; 0x1d0

00010e78 <textdomain@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #456]!	; 0x1c8

00010e84 <iswprint@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e90 <getegid@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #440]!	; 0x1b8

00010e9c <fwrite@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea8 <lseek64@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb4 <__ctype_get_mb_cur_max@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec0 <__fpending@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #408]!	; 0x198

00010ecc <ferror_unlocked@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #400]!	; 0x190

00010ed8 <mbrtowc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #392]!	; 0x188

00010ee4 <error@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #384]!	; 0x180

00010ef0 <malloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #376]!	; 0x178

00010efc <__libc_start_main@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #368]!	; 0x170

00010f08 <__freading@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #360]!	; 0x168

00010f14 <__gmon_start__@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #352]!	; 0x160

00010f20 <getopt_long@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #344]!	; 0x158

00010f2c <__ctype_b_loc@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #336]!	; 0x150

00010f38 <exit@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #328]!	; 0x148

00010f44 <strlen@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #320]!	; 0x140

00010f50 <__errno_location@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #312]!	; 0x138

00010f5c <__cxa_atexit@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #304]!	; 0x130

00010f68 <getgid@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #296]!	; 0x128

00010f74 <getgrouplist@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #288]!	; 0x120

00010f80 <memset@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #280]!	; 0x118

00010f8c <__printf_chk@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #272]!	; 0x110

00010f98 <fileno@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #264]!	; 0x108

00010fa4 <__fprintf_chk@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #256]!	; 0x100

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #248]!	; 0xf8

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #240]!	; 0xf0

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #232]!	; 0xe8

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #224]!	; 0xe0

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #216]!	; 0xd8

00010fec <getgroups@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #208]!	; 0xd0

00010ff8 <bindtextdomain@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #200]!	; 0xc8

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #192]!	; 0xc0

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #184]!	; 0xb8

0001101c <getgrgid@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #176]!	; 0xb0

00011028 <putchar_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011034 <.text>:
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <putchar_unlocked@plt+0x3c>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <putchar_unlocked@plt+0x40>
   11058:	ldr	r3, [pc, #12]	; 1106c <putchar_unlocked@plt+0x44>
   1105c:	bl	10efc <__libc_start_main@plt>
   11060:	bl	11010 <abort@plt>
   11064:	muleq	r1, ip, fp
   11068:	muleq	r1, r4, r3
   1106c:	andeq	r4, r1, ip, lsr fp
   11070:	ldr	r3, [pc, #20]	; 1108c <putchar_unlocked@plt+0x64>
   11074:	ldr	r2, [pc, #20]	; 11090 <putchar_unlocked@plt+0x68>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10f14 <__gmon_start__@plt>
   1108c:	andeq	r4, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -ip
   11094:	ldr	r0, [pc, #24]	; 110b4 <putchar_unlocked@plt+0x8c>
   11098:	ldr	r3, [pc, #24]	; 110b8 <putchar_unlocked@plt+0x90>
   1109c:	cmp	r3, r0
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <putchar_unlocked@plt+0x94>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r6, r2, r0, lsr r1
   110b8:	andeq	r6, r2, r0, lsr r1
   110bc:	andeq	r0, r0, r0
   110c0:	ldr	r0, [pc, #36]	; 110ec <putchar_unlocked@plt+0xc4>
   110c4:	ldr	r1, [pc, #36]	; 110f0 <putchar_unlocked@plt+0xc8>
   110c8:	sub	r1, r1, r0
   110cc:	asr	r1, r1, #2
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <putchar_unlocked@plt+0xcc>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	r6, r2, r0, lsr r1
   110f0:	andeq	r6, r2, r0, lsr r1
   110f4:	andeq	r0, r0, r0
   110f8:	push	{r4, lr}
   110fc:	ldr	r4, [pc, #24]	; 1111c <putchar_unlocked@plt+0xf4>
   11100:	ldrb	r3, [r4]
   11104:	cmp	r3, #0
   11108:	popne	{r4, pc}
   1110c:	bl	11094 <putchar_unlocked@plt+0x6c>
   11110:	mov	r3, #1
   11114:	strb	r3, [r4]
   11118:	pop	{r4, pc}
   1111c:	andeq	r6, r2, r8, asr #2
   11120:	b	110c0 <putchar_unlocked@plt+0x98>
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	mov	r4, r0
   11130:	cmp	r0, #0
   11134:	bne	111cc <putchar_unlocked@plt+0x1a4>
   11138:	movw	r1, #19435	; 0x4beb
   1113c:	movt	r1, #1
   11140:	mov	r0, #0
   11144:	mov	r2, #5
   11148:	bl	10e60 <dcgettext@plt>
   1114c:	mov	r1, r0
   11150:	movw	r0, #24936	; 0x6168
   11154:	movt	r0, #2
   11158:	ldr	r2, [r0]
   1115c:	mov	r0, #1
   11160:	bl	10f8c <__printf_chk@plt>
   11164:	movw	r1, #19472	; 0x4c10
   11168:	movt	r1, #1
   1116c:	mov	r0, #0
   11170:	mov	r2, #5
   11174:	bl	10e60 <dcgettext@plt>
   11178:	movw	r5, #24900	; 0x6144
   1117c:	movt	r5, #2
   11180:	ldr	r1, [r5]
   11184:	bl	10dd0 <fputs_unlocked@plt>
   11188:	movw	r1, #19627	; 0x4cab
   1118c:	movt	r1, #1
   11190:	mov	r0, #0
   11194:	mov	r2, #5
   11198:	bl	10e60 <dcgettext@plt>
   1119c:	ldr	r1, [r5]
   111a0:	bl	10dd0 <fputs_unlocked@plt>
   111a4:	movw	r1, #19672	; 0x4cd8
   111a8:	movt	r1, #1
   111ac:	mov	r0, #0
   111b0:	mov	r2, #5
   111b4:	bl	10e60 <dcgettext@plt>
   111b8:	ldr	r1, [r5]
   111bc:	bl	10dd0 <fputs_unlocked@plt>
   111c0:	bl	11210 <putchar_unlocked@plt+0x1e8>
   111c4:	mov	r0, r4
   111c8:	bl	10f38 <exit@plt>
   111cc:	movw	r0, #24896	; 0x6140
   111d0:	movt	r0, #2
   111d4:	ldr	r5, [r0]
   111d8:	movw	r1, #19396	; 0x4bc4
   111dc:	movt	r1, #1
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	bl	10e60 <dcgettext@plt>
   111ec:	mov	r2, r0
   111f0:	movw	r0, #24936	; 0x6168
   111f4:	movt	r0, #2
   111f8:	ldr	r3, [r0]
   111fc:	mov	r0, r5
   11200:	mov	r1, #1
   11204:	bl	10fa4 <__fprintf_chk@plt>
   11208:	mov	r0, r4
   1120c:	bl	10f38 <exit@plt>
   11210:	push	{r4, r5, fp, lr}
   11214:	add	fp, sp, #8
   11218:	sub	sp, sp, #56	; 0x38
   1121c:	movw	r0, #20264	; 0x4f28
   11220:	movt	r0, #1
   11224:	add	r1, r0, #32
   11228:	mov	r5, sp
   1122c:	mov	r2, #48	; 0x30
   11230:	vld1.64	{d16-d17}, [r1]
   11234:	add	r1, r5, #32
   11238:	add	r3, r0, #16
   1123c:	vld1.64	{d18-d19}, [r0], r2
   11240:	vld1.64	{d20-d21}, [r3]
   11244:	vldr	d22, [r0]
   11248:	vst1.64	{d16-d17}, [r1]
   1124c:	add	r0, r5, #16
   11250:	vst1.64	{d20-d21}, [r0]
   11254:	mov	r0, r5
   11258:	vst1.64	{d18-d19}, [r0], r2
   1125c:	vstr	d22, [r0]
   11260:	ldr	r1, [sp]
   11264:	cmp	r1, #0
   11268:	beq	11290 <putchar_unlocked@plt+0x268>
   1126c:	mov	r5, sp
   11270:	movw	r4, #19726	; 0x4d0e
   11274:	movt	r4, #1
   11278:	mov	r0, r4
   1127c:	bl	10df4 <strcmp@plt>
   11280:	cmp	r0, #0
   11284:	ldrne	r1, [r5, #8]!
   11288:	cmpne	r1, #0
   1128c:	bne	11278 <putchar_unlocked@plt+0x250>
   11290:	ldr	r4, [r5, #4]
   11294:	movw	r1, #19985	; 0x4e11
   11298:	movt	r1, #1
   1129c:	mov	r0, #0
   112a0:	mov	r2, #5
   112a4:	bl	10e60 <dcgettext@plt>
   112a8:	mov	r1, r0
   112ac:	movw	r2, #19757	; 0x4d2d
   112b0:	movt	r2, #1
   112b4:	movw	r3, #20008	; 0x4e28
   112b8:	movt	r3, #1
   112bc:	mov	r0, #1
   112c0:	bl	10f8c <__printf_chk@plt>
   112c4:	movw	r5, #19726	; 0x4d0e
   112c8:	movt	r5, #1
   112cc:	cmp	r4, #0
   112d0:	moveq	r4, r5
   112d4:	mov	r0, #5
   112d8:	mov	r1, #0
   112dc:	bl	10fc8 <setlocale@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	11324 <putchar_unlocked@plt+0x2fc>
   112e8:	movw	r1, #20048	; 0x4e50
   112ec:	movt	r1, #1
   112f0:	mov	r2, #3
   112f4:	bl	11004 <strncmp@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11324 <putchar_unlocked@plt+0x2fc>
   11300:	movw	r1, #20052	; 0x4e54
   11304:	movt	r1, #1
   11308:	mov	r0, #0
   1130c:	mov	r2, #5
   11310:	bl	10e60 <dcgettext@plt>
   11314:	movw	r1, #24900	; 0x6144
   11318:	movt	r1, #2
   1131c:	ldr	r1, [r1]
   11320:	bl	10dd0 <fputs_unlocked@plt>
   11324:	movw	r1, #20123	; 0x4e9b
   11328:	movt	r1, #1
   1132c:	mov	r0, #0
   11330:	mov	r2, #5
   11334:	bl	10e60 <dcgettext@plt>
   11338:	mov	r1, r0
   1133c:	movw	r2, #20008	; 0x4e28
   11340:	movt	r2, #1
   11344:	mov	r0, #1
   11348:	mov	r3, r5
   1134c:	bl	10f8c <__printf_chk@plt>
   11350:	movw	r1, #20150	; 0x4eb6
   11354:	movt	r1, #1
   11358:	mov	r0, #0
   1135c:	mov	r2, #5
   11360:	bl	10e60 <dcgettext@plt>
   11364:	mov	r1, r0
   11368:	movw	r0, #19918	; 0x4dce
   1136c:	movt	r0, #1
   11370:	movw	r3, #20200	; 0x4ee8
   11374:	movt	r3, #1
   11378:	cmp	r4, r5
   1137c:	moveq	r3, r0
   11380:	mov	r0, #1
   11384:	mov	r2, r4
   11388:	bl	10f8c <__printf_chk@plt>
   1138c:	sub	sp, fp, #8
   11390:	pop	{r4, r5, fp, pc}
   11394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11398:	add	fp, sp, #28
   1139c:	sub	sp, sp, #12
   113a0:	mov	r4, r1
   113a4:	mov	sl, r0
   113a8:	ldr	r0, [r1]
   113ac:	bl	11a20 <putchar_unlocked@plt+0x9f8>
   113b0:	movw	r6, #20200	; 0x4ee8
   113b4:	movt	r6, #1
   113b8:	mov	r0, #6
   113bc:	mov	r1, r6
   113c0:	bl	10fc8 <setlocale@plt>
   113c4:	movw	r7, #19761	; 0x4d31
   113c8:	movt	r7, #1
   113cc:	movw	r1, #19733	; 0x4d15
   113d0:	movt	r1, #1
   113d4:	mov	r0, r7
   113d8:	bl	10ff8 <bindtextdomain@plt>
   113dc:	mov	r0, r7
   113e0:	bl	10e78 <textdomain@plt>
   113e4:	movw	r0, #6324	; 0x18b4
   113e8:	movt	r0, #1
   113ec:	bl	14ba0 <putchar_unlocked@plt+0x3b78>
   113f0:	mov	r0, #0
   113f4:	str	r0, [sp]
   113f8:	movw	r3, #20216	; 0x4ef8
   113fc:	movt	r3, #1
   11400:	mov	r0, sl
   11404:	mov	r1, r4
   11408:	mov	r2, r6
   1140c:	bl	10f20 <getopt_long@plt>
   11410:	cmn	r0, #1
   11414:	bne	115ac <putchar_unlocked@plt+0x584>
   11418:	movw	r8, #24888	; 0x6138
   1141c:	movt	r8, #2
   11420:	ldr	r0, [r8]
   11424:	cmp	r0, sl
   11428:	bne	114cc <putchar_unlocked@plt+0x4a4>
   1142c:	bl	10f50 <__errno_location@plt>
   11430:	mov	r5, r0
   11434:	mov	r7, #0
   11438:	str	r7, [r0]
   1143c:	bl	10e18 <getuid@plt>
   11440:	mov	r4, r0
   11444:	cmn	r0, #1
   11448:	bne	11458 <putchar_unlocked@plt+0x430>
   1144c:	ldr	r6, [r5]
   11450:	cmp	r6, #0
   11454:	bne	11620 <putchar_unlocked@plt+0x5f8>
   11458:	str	r7, [r5]
   1145c:	bl	10e90 <getegid@plt>
   11460:	mov	r6, r0
   11464:	cmn	r0, #1
   11468:	bne	11478 <putchar_unlocked@plt+0x450>
   1146c:	ldr	r7, [r5]
   11470:	cmp	r7, #0
   11474:	bne	11644 <putchar_unlocked@plt+0x61c>
   11478:	mov	r0, #0
   1147c:	str	r0, [r5]
   11480:	bl	10f68 <getgid@plt>
   11484:	mov	r2, r0
   11488:	cmn	r0, #1
   1148c:	bne	1149c <putchar_unlocked@plt+0x474>
   11490:	ldr	r5, [r5]
   11494:	cmp	r5, #0
   11498:	bne	11668 <putchar_unlocked@plt+0x640>
   1149c:	mov	r0, #32
   114a0:	mov	r1, #1
   114a4:	str	r1, [sp]
   114a8:	str	r0, [sp, #4]
   114ac:	mov	r0, #0
   114b0:	mov	r1, r4
   114b4:	mov	r3, r6
   114b8:	bl	1168c <putchar_unlocked@plt+0x664>
   114bc:	mov	r6, r0
   114c0:	mov	r0, #10
   114c4:	bl	11028 <putchar_unlocked@plt>
   114c8:	b	115a0 <putchar_unlocked@plt+0x578>
   114cc:	ldr	r0, [r8]
   114d0:	mov	r6, #1
   114d4:	cmp	r0, sl
   114d8:	bge	115a0 <putchar_unlocked@plt+0x578>
   114dc:	movw	r9, #19884	; 0x4dac
   114e0:	movt	r9, #1
   114e4:	mov	r6, #1
   114e8:	ldr	r0, [r4, r0, lsl #2]
   114ec:	bl	10de8 <getpwnam@plt>
   114f0:	cmp	r0, #0
   114f4:	beq	11550 <putchar_unlocked@plt+0x528>
   114f8:	ldr	r1, [r8]
   114fc:	ldr	r2, [r4, r1, lsl #2]
   11500:	ldr	r7, [r0, #8]
   11504:	ldr	r5, [r0, #12]
   11508:	mov	r0, #1
   1150c:	mov	r1, r9
   11510:	bl	10f8c <__printf_chk@plt>
   11514:	ldr	r0, [r8]
   11518:	ldr	r0, [r4, r0, lsl #2]
   1151c:	mov	r1, #1
   11520:	str	r1, [sp]
   11524:	mov	r1, #32
   11528:	str	r1, [sp, #4]
   1152c:	mov	r1, r7
   11530:	mov	r2, r5
   11534:	mov	r3, r5
   11538:	bl	1168c <putchar_unlocked@plt+0x664>
   1153c:	mov	r5, r0
   11540:	mov	r0, #10
   11544:	bl	11028 <putchar_unlocked@plt>
   11548:	and	r6, r6, r5
   1154c:	b	1158c <putchar_unlocked@plt+0x564>
   11550:	mov	r6, #0
   11554:	mov	r0, #0
   11558:	movw	r1, #19867	; 0x4d9b
   1155c:	movt	r1, #1
   11560:	mov	r2, #5
   11564:	bl	10e60 <dcgettext@plt>
   11568:	mov	r7, r0
   1156c:	ldr	r0, [r8]
   11570:	ldr	r0, [r4, r0, lsl #2]
   11574:	bl	13258 <putchar_unlocked@plt+0x2230>
   11578:	mov	r3, r0
   1157c:	mov	r0, #0
   11580:	mov	r1, #0
   11584:	mov	r2, r7
   11588:	bl	10ee4 <error@plt>
   1158c:	ldr	r0, [r8]
   11590:	add	r0, r0, #1
   11594:	str	r0, [r8]
   11598:	cmp	r0, sl
   1159c:	blt	114e8 <putchar_unlocked@plt+0x4c0>
   115a0:	eor	r0, r6, #1
   115a4:	sub	sp, fp, #28
   115a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115ac:	cmn	r0, #3
   115b0:	beq	115c4 <putchar_unlocked@plt+0x59c>
   115b4:	cmn	r0, #2
   115b8:	bne	11618 <putchar_unlocked@plt+0x5f0>
   115bc:	mov	r0, #0
   115c0:	bl	11124 <putchar_unlocked@plt+0xfc>
   115c4:	movw	r0, #24808	; 0x60e8
   115c8:	movt	r0, #2
   115cc:	ldr	r3, [r0]
   115d0:	movw	r0, #24900	; 0x6144
   115d4:	movt	r0, #2
   115d8:	ldr	r0, [r0]
   115dc:	mov	r1, #0
   115e0:	movw	r2, #19787	; 0x4d4b
   115e4:	movt	r2, #1
   115e8:	movw	r7, #19771	; 0x4d3b
   115ec:	movt	r7, #1
   115f0:	str	r7, [sp]
   115f4:	str	r2, [sp, #4]
   115f8:	str	r1, [sp, #8]
   115fc:	movw	r1, #19726	; 0x4d0e
   11600:	movt	r1, #1
   11604:	movw	r2, #19757	; 0x4d2d
   11608:	movt	r2, #1
   1160c:	bl	13a28 <putchar_unlocked@plt+0x2a00>
   11610:	mov	r0, #0
   11614:	bl	10f38 <exit@plt>
   11618:	mov	r0, #1
   1161c:	bl	11124 <putchar_unlocked@plt+0xfc>
   11620:	movw	r1, #19802	; 0x4d5a
   11624:	movt	r1, #1
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	bl	10e60 <dcgettext@plt>
   11634:	mov	r2, r0
   11638:	mov	r0, #1
   1163c:	mov	r1, r6
   11640:	bl	10ee4 <error@plt>
   11644:	movw	r1, #19822	; 0x4d6e
   11648:	movt	r1, #1
   1164c:	mov	r0, #0
   11650:	mov	r2, #5
   11654:	bl	10e60 <dcgettext@plt>
   11658:	mov	r2, r0
   1165c:	mov	r0, #1
   11660:	mov	r1, r7
   11664:	bl	10ee4 <error@plt>
   11668:	movw	r1, #19847	; 0x4d87
   1166c:	movt	r1, #1
   11670:	mov	r0, #0
   11674:	mov	r2, #5
   11678:	bl	10e60 <dcgettext@plt>
   1167c:	mov	r2, r0
   11680:	mov	r0, #1
   11684:	mov	r1, r5
   11688:	bl	10ee4 <error@plt>
   1168c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11690:	add	fp, sp, #28
   11694:	sub	sp, sp, #4
   11698:	mov	r8, r3
   1169c:	mov	r5, r2
   116a0:	mov	r4, r0
   116a4:	ldr	r9, [fp, #8]
   116a8:	cmp	r0, #0
   116ac:	beq	116cc <putchar_unlocked@plt+0x6a4>
   116b0:	mov	r0, r1
   116b4:	bl	10e00 <getpwuid@plt>
   116b8:	mov	r6, r0
   116bc:	cmp	r0, #0
   116c0:	mov	r7, r0
   116c4:	movwne	r7, #1
   116c8:	b	116d4 <putchar_unlocked@plt+0x6ac>
   116cc:	mov	r6, #0
   116d0:	mov	r7, #1
   116d4:	ldr	sl, [fp, #12]
   116d8:	mov	r0, r5
   116dc:	mov	r1, r9
   116e0:	bl	117f8 <putchar_unlocked@plt+0x7d0>
   116e4:	and	r7, r7, r0
   116e8:	cmp	r8, r5
   116ec:	beq	11708 <putchar_unlocked@plt+0x6e0>
   116f0:	mov	r0, sl
   116f4:	bl	11028 <putchar_unlocked@plt>
   116f8:	mov	r0, r8
   116fc:	mov	r1, r9
   11700:	bl	117f8 <putchar_unlocked@plt+0x7d0>
   11704:	and	r7, r7, r0
   11708:	cmp	r6, #0
   1170c:	mov	r1, r8
   11710:	ldrne	r1, [r6, #12]
   11714:	mov	r2, sp
   11718:	mov	r0, r4
   1171c:	bl	13f24 <putchar_unlocked@plt+0x2efc>
   11720:	cmp	r0, #0
   11724:	blt	1177c <putchar_unlocked@plt+0x754>
   11728:	beq	11770 <putchar_unlocked@plt+0x748>
   1172c:	mov	r6, r0
   11730:	mov	r4, #0
   11734:	ldr	r0, [sp]
   11738:	ldr	r0, [r0, r4, lsl #2]
   1173c:	cmp	r0, r5
   11740:	cmpne	r0, r8
   11744:	beq	11764 <putchar_unlocked@plt+0x73c>
   11748:	mov	r0, sl
   1174c:	bl	11028 <putchar_unlocked@plt>
   11750:	ldr	r0, [sp]
   11754:	ldr	r0, [r0, r4, lsl #2]
   11758:	mov	r1, r9
   1175c:	bl	117f8 <putchar_unlocked@plt+0x7d0>
   11760:	and	r7, r7, r0
   11764:	add	r4, r4, #1
   11768:	cmp	r6, r4
   1176c:	bne	11734 <putchar_unlocked@plt+0x70c>
   11770:	ldr	r0, [sp]
   11774:	bl	1199c <putchar_unlocked@plt+0x974>
   11778:	b	117ec <putchar_unlocked@plt+0x7c4>
   1177c:	bl	10f50 <__errno_location@plt>
   11780:	ldr	r6, [r0]
   11784:	mov	r7, #0
   11788:	cmp	r4, #0
   1178c:	beq	117c8 <putchar_unlocked@plt+0x7a0>
   11790:	movw	r1, #20320	; 0x4f60
   11794:	movt	r1, #1
   11798:	mov	r0, #0
   1179c:	mov	r2, #5
   117a0:	bl	10e60 <dcgettext@plt>
   117a4:	mov	r5, r0
   117a8:	mov	r0, r4
   117ac:	bl	13258 <putchar_unlocked@plt+0x2230>
   117b0:	mov	r3, r0
   117b4:	mov	r0, #0
   117b8:	mov	r1, r6
   117bc:	mov	r2, r5
   117c0:	bl	10ee4 <error@plt>
   117c4:	b	117ec <putchar_unlocked@plt+0x7c4>
   117c8:	movw	r1, #20353	; 0x4f81
   117cc:	movt	r1, #1
   117d0:	mov	r0, #0
   117d4:	mov	r2, #5
   117d8:	bl	10e60 <dcgettext@plt>
   117dc:	mov	r2, r0
   117e0:	mov	r0, #0
   117e4:	mov	r1, r6
   117e8:	bl	10ee4 <error@plt>
   117ec:	and	r0, r7, #1
   117f0:	sub	sp, fp, #28
   117f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117f8:	push	{r4, r5, fp, lr}
   117fc:	add	fp, sp, #8
   11800:	sub	sp, sp, #8
   11804:	str	r0, [sp, #4]
   11808:	mov	r4, #1
   1180c:	cmp	r1, #0
   11810:	beq	1185c <putchar_unlocked@plt+0x834>
   11814:	mov	r5, r0
   11818:	bl	1101c <getgrgid@plt>
   1181c:	cmp	r0, #0
   11820:	beq	11830 <putchar_unlocked@plt+0x808>
   11824:	ldr	r0, [r0]
   11828:	mov	r4, #1
   1182c:	b	11864 <putchar_unlocked@plt+0x83c>
   11830:	mov	r4, #0
   11834:	movw	r1, #20398	; 0x4fae
   11838:	movt	r1, #1
   1183c:	mov	r0, #0
   11840:	mov	r2, #5
   11844:	bl	10e60 <dcgettext@plt>
   11848:	mov	r2, r0
   1184c:	mov	r0, #0
   11850:	mov	r1, #0
   11854:	mov	r3, r5
   11858:	bl	10ee4 <error@plt>
   1185c:	add	r0, sp, #4
   11860:	bl	11880 <putchar_unlocked@plt+0x858>
   11864:	movw	r1, #24900	; 0x6144
   11868:	movt	r1, #2
   1186c:	ldr	r1, [r1]
   11870:	bl	10dd0 <fputs_unlocked@plt>
   11874:	mov	r0, r4
   11878:	sub	sp, fp, #8
   1187c:	pop	{r4, r5, fp, pc}
   11880:	ldr	r0, [r0]
   11884:	movw	r2, #24905	; 0x6149
   11888:	movt	r2, #2
   1188c:	mov	r1, #0
   11890:	b	119c4 <putchar_unlocked@plt+0x99c>
   11894:	movw	r1, #24928	; 0x6160
   11898:	movt	r1, #2
   1189c:	str	r0, [r1]
   118a0:	bx	lr
   118a4:	movw	r1, #24932	; 0x6164
   118a8:	movt	r1, #2
   118ac:	strb	r0, [r1]
   118b0:	bx	lr
   118b4:	push	{r4, r5, r6, sl, fp, lr}
   118b8:	add	fp, sp, #16
   118bc:	sub	sp, sp, #8
   118c0:	movw	r0, #24900	; 0x6144
   118c4:	movt	r0, #2
   118c8:	ldr	r0, [r0]
   118cc:	bl	14354 <putchar_unlocked@plt+0x332c>
   118d0:	cmp	r0, #0
   118d4:	beq	118fc <putchar_unlocked@plt+0x8d4>
   118d8:	movw	r0, #24932	; 0x6164
   118dc:	movt	r0, #2
   118e0:	ldrb	r0, [r0]
   118e4:	cmp	r0, #0
   118e8:	beq	1191c <putchar_unlocked@plt+0x8f4>
   118ec:	bl	10f50 <__errno_location@plt>
   118f0:	ldr	r0, [r0]
   118f4:	cmp	r0, #32
   118f8:	bne	1191c <putchar_unlocked@plt+0x8f4>
   118fc:	movw	r0, #24896	; 0x6140
   11900:	movt	r0, #2
   11904:	ldr	r0, [r0]
   11908:	bl	14354 <putchar_unlocked@plt+0x332c>
   1190c:	cmp	r0, #0
   11910:	subeq	sp, fp, #16
   11914:	popeq	{r4, r5, r6, sl, fp, pc}
   11918:	b	1198c <putchar_unlocked@plt+0x964>
   1191c:	movw	r1, #20447	; 0x4fdf
   11920:	movt	r1, #1
   11924:	mov	r0, #0
   11928:	mov	r2, #5
   1192c:	bl	10e60 <dcgettext@plt>
   11930:	mov	r4, r0
   11934:	movw	r0, #24928	; 0x6160
   11938:	movt	r0, #2
   1193c:	ldr	r6, [r0]
   11940:	bl	10f50 <__errno_location@plt>
   11944:	ldr	r5, [r0]
   11948:	cmp	r6, #0
   1194c:	bne	11968 <putchar_unlocked@plt+0x940>
   11950:	movw	r2, #20463	; 0x4fef
   11954:	movt	r2, #1
   11958:	mov	r0, #0
   1195c:	mov	r1, r5
   11960:	mov	r3, r4
   11964:	b	11988 <putchar_unlocked@plt+0x960>
   11968:	mov	r0, r6
   1196c:	bl	13108 <putchar_unlocked@plt+0x20e0>
   11970:	mov	r3, r0
   11974:	str	r4, [sp]
   11978:	movw	r2, #20459	; 0x4feb
   1197c:	movt	r2, #1
   11980:	mov	r0, #0
   11984:	mov	r1, r5
   11988:	bl	10ee4 <error@plt>
   1198c:	movw	r0, #24812	; 0x60ec
   11990:	movt	r0, #2
   11994:	ldr	r0, [r0]
   11998:	bl	10e30 <_exit@plt>
   1199c:	push	{r4, r5, r6, sl, fp, lr}
   119a0:	add	fp, sp, #16
   119a4:	mov	r4, r0
   119a8:	bl	10f50 <__errno_location@plt>
   119ac:	mov	r5, r0
   119b0:	ldr	r6, [r0]
   119b4:	mov	r0, r4
   119b8:	bl	10e24 <free@plt>
   119bc:	str	r6, [r5]
   119c0:	pop	{r4, r5, r6, sl, fp, pc}
   119c4:	push	{r4, r5, r6, sl, fp, lr}
   119c8:	add	fp, sp, #16
   119cc:	mov	r4, r1
   119d0:	mov	r5, r0
   119d4:	mov	r0, #0
   119d8:	strb	r0, [r2, #20]
   119dc:	add	r6, r2, #19
   119e0:	mov	r0, r5
   119e4:	mov	r1, r4
   119e8:	mov	r2, #10
   119ec:	mov	r3, #0
   119f0:	bl	149c8 <putchar_unlocked@plt+0x39a0>
   119f4:	add	r2, r0, r0, lsl #2
   119f8:	sub	r2, r5, r2, lsl #1
   119fc:	orr	r2, r2, #48	; 0x30
   11a00:	strb	r2, [r6], #-1
   11a04:	rsbs	r2, r5, #9
   11a08:	rscs	r2, r4, #0
   11a0c:	mov	r5, r0
   11a10:	mov	r4, r1
   11a14:	bcc	119e0 <putchar_unlocked@plt+0x9b8>
   11a18:	add	r0, r6, #1
   11a1c:	pop	{r4, r5, r6, sl, fp, pc}
   11a20:	push	{r4, r5, fp, lr}
   11a24:	add	fp, sp, #8
   11a28:	cmp	r0, #0
   11a2c:	beq	11ac0 <putchar_unlocked@plt+0xa98>
   11a30:	mov	r4, r0
   11a34:	mov	r1, #47	; 0x2f
   11a38:	bl	10fd4 <strrchr@plt>
   11a3c:	cmp	r0, #0
   11a40:	mov	r5, r4
   11a44:	addne	r5, r0, #1
   11a48:	sub	r0, r5, r4
   11a4c:	cmp	r0, #7
   11a50:	blt	11aa4 <putchar_unlocked@plt+0xa7c>
   11a54:	sub	r0, r5, #7
   11a58:	movw	r1, #20522	; 0x502a
   11a5c:	movt	r1, #1
   11a60:	mov	r2, #7
   11a64:	bl	11004 <strncmp@plt>
   11a68:	cmp	r0, #0
   11a6c:	bne	11aa4 <putchar_unlocked@plt+0xa7c>
   11a70:	movw	r1, #20530	; 0x5032
   11a74:	movt	r1, #1
   11a78:	mov	r0, r5
   11a7c:	mov	r2, #3
   11a80:	bl	11004 <strncmp@plt>
   11a84:	cmp	r0, #0
   11a88:	beq	11a94 <putchar_unlocked@plt+0xa6c>
   11a8c:	mov	r4, r5
   11a90:	b	11aa4 <putchar_unlocked@plt+0xa7c>
   11a94:	add	r4, r5, #3
   11a98:	movw	r0, #24880	; 0x6130
   11a9c:	movt	r0, #2
   11aa0:	str	r4, [r0]
   11aa4:	movw	r0, #24884	; 0x6134
   11aa8:	movt	r0, #2
   11aac:	str	r4, [r0]
   11ab0:	movw	r0, #24936	; 0x6168
   11ab4:	movt	r0, #2
   11ab8:	str	r4, [r0]
   11abc:	pop	{r4, r5, fp, pc}
   11ac0:	movw	r0, #24896	; 0x6140
   11ac4:	movt	r0, #2
   11ac8:	ldr	r3, [r0]
   11acc:	movw	r0, #20466	; 0x4ff2
   11ad0:	movt	r0, #1
   11ad4:	mov	r1, #55	; 0x37
   11ad8:	mov	r2, #1
   11adc:	bl	10e9c <fwrite@plt>
   11ae0:	bl	11010 <abort@plt>
   11ae4:	push	{r4, r5, r6, sl, fp, lr}
   11ae8:	add	fp, sp, #16
   11aec:	mov	r4, r0
   11af0:	movw	r0, #24944	; 0x6170
   11af4:	movt	r0, #2
   11af8:	cmp	r4, #0
   11afc:	moveq	r4, r0
   11b00:	bl	10f50 <__errno_location@plt>
   11b04:	mov	r5, r0
   11b08:	ldr	r6, [r0]
   11b0c:	mov	r0, r4
   11b10:	mov	r1, #48	; 0x30
   11b14:	bl	13e24 <putchar_unlocked@plt+0x2dfc>
   11b18:	str	r6, [r5]
   11b1c:	pop	{r4, r5, r6, sl, fp, pc}
   11b20:	movw	r1, #24944	; 0x6170
   11b24:	movt	r1, #2
   11b28:	cmp	r0, #0
   11b2c:	movne	r1, r0
   11b30:	ldr	r0, [r1]
   11b34:	bx	lr
   11b38:	movw	r2, #24944	; 0x6170
   11b3c:	movt	r2, #2
   11b40:	cmp	r0, #0
   11b44:	movne	r2, r0
   11b48:	str	r1, [r2]
   11b4c:	bx	lr
   11b50:	movw	r3, #24944	; 0x6170
   11b54:	movt	r3, #2
   11b58:	cmp	r0, #0
   11b5c:	movne	r3, r0
   11b60:	ubfx	r0, r1, #5, #3
   11b64:	add	r0, r3, r0, lsl #2
   11b68:	ldr	r3, [r0, #8]
   11b6c:	and	r1, r1, #31
   11b70:	eor	r2, r2, r3, lsr r1
   11b74:	and	r2, r2, #1
   11b78:	eor	r2, r3, r2, lsl r1
   11b7c:	str	r2, [r0, #8]
   11b80:	mov	r0, #1
   11b84:	and	r0, r0, r3, lsr r1
   11b88:	bx	lr
   11b8c:	movw	r2, #24944	; 0x6170
   11b90:	movt	r2, #2
   11b94:	cmp	r0, #0
   11b98:	movne	r2, r0
   11b9c:	ldr	r0, [r2, #4]
   11ba0:	str	r1, [r2, #4]
   11ba4:	bx	lr
   11ba8:	movw	r3, #24944	; 0x6170
   11bac:	movt	r3, #2
   11bb0:	cmp	r0, #0
   11bb4:	movne	r3, r0
   11bb8:	mov	r0, #10
   11bbc:	str	r0, [r3]
   11bc0:	cmp	r1, #0
   11bc4:	cmpne	r2, #0
   11bc8:	bne	11bd8 <putchar_unlocked@plt+0xbb0>
   11bcc:	push	{fp, lr}
   11bd0:	mov	fp, sp
   11bd4:	bl	11010 <abort@plt>
   11bd8:	str	r1, [r3, #40]	; 0x28
   11bdc:	str	r2, [r3, #44]	; 0x2c
   11be0:	bx	lr
   11be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11be8:	add	fp, sp, #28
   11bec:	sub	sp, sp, #20
   11bf0:	mov	r8, r3
   11bf4:	mov	r9, r2
   11bf8:	mov	sl, r1
   11bfc:	mov	r7, r0
   11c00:	ldr	r0, [fp, #8]
   11c04:	movw	r5, #24944	; 0x6170
   11c08:	movt	r5, #2
   11c0c:	cmp	r0, #0
   11c10:	movne	r5, r0
   11c14:	bl	10f50 <__errno_location@plt>
   11c18:	mov	r4, r0
   11c1c:	ldm	r5, {r0, r1}
   11c20:	ldr	r2, [r5, #40]	; 0x28
   11c24:	ldr	r3, [r5, #44]	; 0x2c
   11c28:	ldr	r6, [r4]
   11c2c:	add	r5, r5, #8
   11c30:	stm	sp, {r0, r1, r5}
   11c34:	str	r2, [sp, #12]
   11c38:	str	r3, [sp, #16]
   11c3c:	mov	r0, r7
   11c40:	mov	r1, sl
   11c44:	mov	r2, r9
   11c48:	mov	r3, r8
   11c4c:	bl	11c5c <putchar_unlocked@plt+0xc34>
   11c50:	str	r6, [r4]
   11c54:	sub	sp, fp, #28
   11c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c60:	add	fp, sp, #28
   11c64:	sub	sp, sp, #156	; 0x9c
   11c68:	mov	r9, r3
   11c6c:	str	r2, [fp, #-84]	; 0xffffffac
   11c70:	mov	r6, r1
   11c74:	mov	r7, r0
   11c78:	ldr	r0, [fp, #12]
   11c7c:	and	r1, r0, #4
   11c80:	str	r1, [sp, #32]
   11c84:	and	r1, r0, #1
   11c88:	str	r1, [sp, #36]	; 0x24
   11c8c:	ubfx	sl, r0, #1, #1
   11c90:	bl	10eb4 <__ctype_get_mb_cur_max@plt>
   11c94:	str	r0, [sp, #40]	; 0x28
   11c98:	ldr	r0, [fp, #24]
   11c9c:	str	r0, [sp, #76]	; 0x4c
   11ca0:	ldr	r0, [fp, #20]
   11ca4:	str	r0, [sp, #68]	; 0x44
   11ca8:	ldr	r0, [fp, #8]
   11cac:	str	r0, [fp, #-60]	; 0xffffffc4
   11cb0:	mov	r0, #0
   11cb4:	str	r0, [sp, #72]	; 0x48
   11cb8:	mov	r0, #0
   11cbc:	str	r0, [sp, #92]	; 0x5c
   11cc0:	mov	r0, #0
   11cc4:	str	r0, [fp, #-72]	; 0xffffffb8
   11cc8:	mov	r0, #0
   11ccc:	mov	r1, #0
   11cd0:	str	r1, [fp, #-56]	; 0xffffffc8
   11cd4:	mov	r1, #0
   11cd8:	str	r1, [sp, #56]	; 0x38
   11cdc:	mov	r5, #1
   11ce0:	str	r7, [sp, #80]	; 0x50
   11ce4:	mov	r4, r6
   11ce8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11cec:	cmp	r6, #10
   11cf0:	bhi	12c58 <putchar_unlocked@plt+0x1c30>
   11cf4:	add	r1, pc, #20
   11cf8:	mov	r8, #0
   11cfc:	mov	r2, #1
   11d00:	mov	r3, #0
   11d04:	ldr	ip, [fp, #-84]	; 0xffffffac
   11d08:	mov	lr, r9
   11d0c:	ldr	pc, [r1, r6, lsl #2]
   11d10:	andeq	r1, r1, r8, ror #27
   11d14:	andeq	r1, r1, r8, lsl lr
   11d18:	ldrdeq	r1, [r1], -r8
   11d1c:	ldrdeq	r1, [r1], -r0
   11d20:	andeq	r1, r1, ip, lsl #28
   11d24:	andeq	r1, r1, ip, ror #28
   11d28:	strdeq	r1, [r1], -r8
   11d2c:	andeq	r1, r1, r8, asr #29
   11d30:	andeq	r1, r1, ip, lsr sp
   11d34:	andeq	r1, r1, ip, lsr sp
   11d38:	andeq	r1, r1, r4, ror #26
   11d3c:	movw	r0, #20614	; 0x5086
   11d40:	movt	r0, #1
   11d44:	mov	r1, r6
   11d48:	bl	13264 <putchar_unlocked@plt+0x223c>
   11d4c:	str	r0, [sp, #68]	; 0x44
   11d50:	movw	r0, #20616	; 0x5088
   11d54:	movt	r0, #1
   11d58:	mov	r1, r6
   11d5c:	bl	13264 <putchar_unlocked@plt+0x223c>
   11d60:	str	r0, [sp, #76]	; 0x4c
   11d64:	mov	r8, #0
   11d68:	tst	sl, #1
   11d6c:	bne	11da4 <putchar_unlocked@plt+0xd7c>
   11d70:	ldr	r0, [sp, #68]	; 0x44
   11d74:	ldrb	r0, [r0]
   11d78:	cmp	r0, #0
   11d7c:	beq	11da4 <putchar_unlocked@plt+0xd7c>
   11d80:	ldr	r1, [sp, #68]	; 0x44
   11d84:	add	r1, r1, #1
   11d88:	mov	r8, #0
   11d8c:	cmp	r8, r4
   11d90:	strbcc	r0, [r7, r8]
   11d94:	ldrb	r0, [r1, r8]
   11d98:	add	r8, r8, #1
   11d9c:	cmp	r0, #0
   11da0:	bne	11d8c <putchar_unlocked@plt+0xd64>
   11da4:	ldr	r6, [sp, #76]	; 0x4c
   11da8:	mov	r0, r6
   11dac:	bl	10f44 <strlen@plt>
   11db0:	str	r0, [fp, #-72]	; 0xffffffb8
   11db4:	str	r6, [sp, #92]	; 0x5c
   11db8:	mov	r2, #1
   11dbc:	mov	r3, sl
   11dc0:	ldr	ip, [fp, #-84]	; 0xffffffac
   11dc4:	mov	lr, r9
   11dc8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11dcc:	b	11ec8 <putchar_unlocked@plt+0xea0>
   11dd0:	mov	r0, #1
   11dd4:	b	11e18 <putchar_unlocked@plt+0xdf0>
   11dd8:	tst	sl, #1
   11ddc:	bne	11e18 <putchar_unlocked@plt+0xdf0>
   11de0:	mov	r2, r0
   11de4:	b	11e40 <putchar_unlocked@plt+0xe18>
   11de8:	mov	r6, #0
   11dec:	mov	r8, #0
   11df0:	mov	r2, r0
   11df4:	b	11ec4 <putchar_unlocked@plt+0xe9c>
   11df8:	mov	r0, #1
   11dfc:	str	r0, [fp, #-72]	; 0xffffffb8
   11e00:	mov	r8, #0
   11e04:	mov	r6, #5
   11e08:	b	11e84 <putchar_unlocked@plt+0xe5c>
   11e0c:	mov	r2, #1
   11e10:	tst	sl, #1
   11e14:	beq	11e40 <putchar_unlocked@plt+0xe18>
   11e18:	mov	r1, #1
   11e1c:	str	r1, [fp, #-72]	; 0xffffffb8
   11e20:	mov	r8, #0
   11e24:	mov	r6, #2
   11e28:	movw	r1, #20616	; 0x5088
   11e2c:	movt	r1, #1
   11e30:	str	r1, [sp, #92]	; 0x5c
   11e34:	mov	r2, r0
   11e38:	mov	r3, #1
   11e3c:	b	11ec8 <putchar_unlocked@plt+0xea0>
   11e40:	mov	r8, #1
   11e44:	mov	r6, #2
   11e48:	cmp	r4, #0
   11e4c:	movne	r0, #39	; 0x27
   11e50:	strbne	r0, [r7]
   11e54:	movw	r0, #20616	; 0x5088
   11e58:	movt	r0, #1
   11e5c:	str	r0, [sp, #92]	; 0x5c
   11e60:	mov	r0, #1
   11e64:	str	r0, [fp, #-72]	; 0xffffffb8
   11e68:	b	11ec4 <putchar_unlocked@plt+0xe9c>
   11e6c:	mov	r6, #5
   11e70:	tst	sl, #1
   11e74:	beq	11e9c <putchar_unlocked@plt+0xe74>
   11e78:	mov	r0, #1
   11e7c:	str	r0, [fp, #-72]	; 0xffffffb8
   11e80:	mov	r8, #0
   11e84:	movw	r0, #20612	; 0x5084
   11e88:	movt	r0, #1
   11e8c:	str	r0, [sp, #92]	; 0x5c
   11e90:	mov	r2, #1
   11e94:	mov	r3, #1
   11e98:	b	11ec8 <putchar_unlocked@plt+0xea0>
   11e9c:	cmp	r4, #0
   11ea0:	movne	r0, #34	; 0x22
   11ea4:	strbne	r0, [r7]
   11ea8:	mov	r8, #1
   11eac:	movw	r0, #20612	; 0x5084
   11eb0:	movt	r0, #1
   11eb4:	str	r0, [sp, #92]	; 0x5c
   11eb8:	mov	r0, #1
   11ebc:	str	r0, [fp, #-72]	; 0xffffffb8
   11ec0:	mov	r2, #1
   11ec4:	mov	r3, #0
   11ec8:	ldr	r0, [fp, #16]
   11ecc:	cmp	r0, #0
   11ed0:	movwne	r0, #1
   11ed4:	and	r0, r0, r3
   11ed8:	str	r0, [fp, #-88]	; 0xffffffa8
   11edc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ee0:	cmp	r0, #0
   11ee4:	movwne	r0, #1
   11ee8:	and	r1, r0, r3
   11eec:	and	r1, r2, r1
   11ef0:	str	r1, [sp, #48]	; 0x30
   11ef4:	str	r6, [fp, #-60]	; 0xffffffc4
   11ef8:	subs	r6, r6, #2
   11efc:	clz	r1, r6
   11f00:	lsr	r1, r1, #5
   11f04:	and	r1, r1, r3
   11f08:	str	r1, [sp, #60]	; 0x3c
   11f0c:	str	r6, [fp, #-80]	; 0xffffffb0
   11f10:	mov	r1, r6
   11f14:	movwne	r1, #1
   11f18:	str	r3, [fp, #-76]	; 0xffffffb4
   11f1c:	eor	r3, r3, #1
   11f20:	str	r3, [sp, #88]	; 0x58
   11f24:	orr	r3, r1, r3
   11f28:	str	r3, [sp, #64]	; 0x40
   11f2c:	and	r1, r1, r2
   11f30:	str	r1, [fp, #-68]	; 0xffffffbc
   11f34:	and	r0, r0, r1
   11f38:	str	r0, [fp, #-64]	; 0xffffffc0
   11f3c:	str	r2, [sp, #84]	; 0x54
   11f40:	eor	r0, r2, #1
   11f44:	str	r0, [sp, #52]	; 0x34
   11f48:	mov	r6, #0
   11f4c:	cmn	lr, #1
   11f50:	beq	11f60 <putchar_unlocked@plt+0xf38>
   11f54:	cmp	r6, lr
   11f58:	bne	11f6c <putchar_unlocked@plt+0xf44>
   11f5c:	b	12ad8 <putchar_unlocked@plt+0x1ab0>
   11f60:	ldrb	r0, [ip, r6]
   11f64:	cmp	r0, #0
   11f68:	beq	12ad8 <putchar_unlocked@plt+0x1ab0>
   11f6c:	str	r5, [fp, #-48]	; 0xffffffd0
   11f70:	mov	sl, #0
   11f74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f78:	cmp	r0, #0
   11f7c:	beq	11fb0 <putchar_unlocked@plt+0xf88>
   11f80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f84:	add	r5, r6, r0
   11f88:	cmp	r0, #2
   11f8c:	bcc	11fa8 <putchar_unlocked@plt+0xf80>
   11f90:	cmn	lr, #1
   11f94:	bne	11fa8 <putchar_unlocked@plt+0xf80>
   11f98:	mov	r0, ip
   11f9c:	bl	10f44 <strlen@plt>
   11fa0:	ldr	ip, [fp, #-84]	; 0xffffffac
   11fa4:	mov	lr, r0
   11fa8:	cmp	r5, lr
   11fac:	bls	11fbc <putchar_unlocked@plt+0xf94>
   11fb0:	mov	r0, #0
   11fb4:	str	r0, [fp, #-52]	; 0xffffffcc
   11fb8:	b	12008 <putchar_unlocked@plt+0xfe0>
   11fbc:	mov	r5, r4
   11fc0:	mov	r4, lr
   11fc4:	add	r0, ip, r6
   11fc8:	ldr	r1, [sp, #92]	; 0x5c
   11fcc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11fd0:	bl	10e54 <memcmp@plt>
   11fd4:	cmp	r0, #0
   11fd8:	mov	r1, r0
   11fdc:	movwne	r1, #1
   11fe0:	ldr	r2, [sp, #88]	; 0x58
   11fe4:	orr	r1, r1, r2
   11fe8:	tst	r1, #1
   11fec:	beq	12b9c <putchar_unlocked@plt+0x1b74>
   11ff0:	clz	r0, r0
   11ff4:	lsr	r0, r0, #5
   11ff8:	str	r0, [fp, #-52]	; 0xffffffcc
   11ffc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12000:	mov	lr, r4
   12004:	mov	r4, r5
   12008:	ldrb	r5, [ip, r6]
   1200c:	cmp	r5, #126	; 0x7e
   12010:	bhi	123cc <putchar_unlocked@plt+0x13a4>
   12014:	mov	r9, #1
   12018:	mov	r2, #110	; 0x6e
   1201c:	mov	r0, #97	; 0x61
   12020:	add	r3, pc, #4
   12024:	mov	r1, #0
   12028:	ldr	pc, [r3, r5, lsl #2]
   1202c:	andeq	r2, r1, r4, asr #5
   12030:	andeq	r2, r1, ip, asr #7
   12034:	andeq	r2, r1, ip, asr #7
   12038:	andeq	r2, r1, ip, asr #7
   1203c:	andeq	r2, r1, ip, asr #7
   12040:	andeq	r2, r1, ip, asr #7
   12044:	andeq	r2, r1, ip, asr #7
   12048:	muleq	r1, r0, r4
   1204c:	andeq	r2, r1, r4, lsr #5
   12050:	muleq	r1, ip, r2
   12054:			; <UNDEFINED> instruction: 0x000122b0
   12058:	andeq	r2, r1, r4, lsr r3
   1205c:	muleq	r1, r4, r2
   12060:	andeq	r2, r1, ip, lsr #5
   12064:	andeq	r2, r1, ip, asr #7
   12068:	andeq	r2, r1, ip, asr #7
   1206c:	andeq	r2, r1, ip, asr #7
   12070:	andeq	r2, r1, ip, asr #7
   12074:	andeq	r2, r1, ip, asr #7
   12078:	andeq	r2, r1, ip, asr #7
   1207c:	andeq	r2, r1, ip, asr #7
   12080:	andeq	r2, r1, ip, asr #7
   12084:	andeq	r2, r1, ip, asr #7
   12088:	andeq	r2, r1, ip, asr #7
   1208c:	andeq	r2, r1, ip, asr #7
   12090:	andeq	r2, r1, ip, asr #7
   12094:	andeq	r2, r1, ip, asr #7
   12098:	andeq	r2, r1, ip, asr #7
   1209c:	andeq	r2, r1, ip, asr #7
   120a0:	andeq	r2, r1, ip, asr #7
   120a4:	andeq	r2, r1, ip, asr #7
   120a8:	andeq	r2, r1, ip, asr #7
   120ac:	andeq	r2, r1, r0, asr #8
   120b0:	andeq	r2, r1, r4, asr #8
   120b4:	andeq	r2, r1, r4, asr #8
   120b8:	andeq	r2, r1, ip, lsr r2
   120bc:	andeq	r2, r1, r4, asr #8
   120c0:	andeq	r2, r1, r8, lsr #4
   120c4:	andeq	r2, r1, r4, asr #8
   120c8:	andeq	r2, r1, ip, lsr r3
   120cc:	andeq	r2, r1, r4, asr #8
   120d0:	andeq	r2, r1, r4, asr #8
   120d4:	andeq	r2, r1, r4, asr #8
   120d8:	andeq	r2, r1, r8, lsr #4
   120dc:	andeq	r2, r1, r8, lsr #4
   120e0:	andeq	r2, r1, r8, lsr #4
   120e4:	andeq	r2, r1, r8, lsr #4
   120e8:	andeq	r2, r1, r8, lsr #4
   120ec:	andeq	r2, r1, r8, lsr #4
   120f0:	andeq	r2, r1, r8, lsr #4
   120f4:	andeq	r2, r1, r8, lsr #4
   120f8:	andeq	r2, r1, r8, lsr #4
   120fc:	andeq	r2, r1, r8, lsr #4
   12100:	andeq	r2, r1, r8, lsr #4
   12104:	andeq	r2, r1, r8, lsr #4
   12108:	andeq	r2, r1, r8, lsr #4
   1210c:	andeq	r2, r1, r8, lsr #4
   12110:	andeq	r2, r1, r8, lsr #4
   12114:	andeq	r2, r1, r8, lsr #4
   12118:	andeq	r2, r1, r4, asr #8
   1211c:	andeq	r2, r1, r4, asr #8
   12120:	andeq	r2, r1, r4, asr #8
   12124:	andeq	r2, r1, r4, asr #8
   12128:	andeq	r2, r1, r4, lsl #6
   1212c:	andeq	r2, r1, ip, asr #7
   12130:	andeq	r2, r1, r8, lsr #4
   12134:	andeq	r2, r1, r8, lsr #4
   12138:	andeq	r2, r1, r8, lsr #4
   1213c:	andeq	r2, r1, r8, lsr #4
   12140:	andeq	r2, r1, r8, lsr #4
   12144:	andeq	r2, r1, r8, lsr #4
   12148:	andeq	r2, r1, r8, lsr #4
   1214c:	andeq	r2, r1, r8, lsr #4
   12150:	andeq	r2, r1, r8, lsr #4
   12154:	andeq	r2, r1, r8, lsr #4
   12158:	andeq	r2, r1, r8, lsr #4
   1215c:	andeq	r2, r1, r8, lsr #4
   12160:	andeq	r2, r1, r8, lsr #4
   12164:	andeq	r2, r1, r8, lsr #4
   12168:	andeq	r2, r1, r8, lsr #4
   1216c:	andeq	r2, r1, r8, lsr #4
   12170:	andeq	r2, r1, r8, lsr #4
   12174:	andeq	r2, r1, r8, lsr #4
   12178:	andeq	r2, r1, r8, lsr #4
   1217c:	andeq	r2, r1, r8, lsr #4
   12180:	andeq	r2, r1, r8, lsr #4
   12184:	andeq	r2, r1, r8, lsr #4
   12188:	andeq	r2, r1, r8, lsr #4
   1218c:	andeq	r2, r1, r8, lsr #4
   12190:	andeq	r2, r1, r8, lsr #4
   12194:	andeq	r2, r1, r8, lsr #4
   12198:	andeq	r2, r1, r4, asr #8
   1219c:	andeq	r2, r1, r0, ror r2
   121a0:	andeq	r2, r1, r8, lsr #4
   121a4:	andeq	r2, r1, r4, asr #8
   121a8:	andeq	r2, r1, r8, lsr #4
   121ac:	andeq	r2, r1, r4, asr #8
   121b0:	andeq	r2, r1, r8, lsr #4
   121b4:	andeq	r2, r1, r8, lsr #4
   121b8:	andeq	r2, r1, r8, lsr #4
   121bc:	andeq	r2, r1, r8, lsr #4
   121c0:	andeq	r2, r1, r8, lsr #4
   121c4:	andeq	r2, r1, r8, lsr #4
   121c8:	andeq	r2, r1, r8, lsr #4
   121cc:	andeq	r2, r1, r8, lsr #4
   121d0:	andeq	r2, r1, r8, lsr #4
   121d4:	andeq	r2, r1, r8, lsr #4
   121d8:	andeq	r2, r1, r8, lsr #4
   121dc:	andeq	r2, r1, r8, lsr #4
   121e0:	andeq	r2, r1, r8, lsr #4
   121e4:	andeq	r2, r1, r8, lsr #4
   121e8:	andeq	r2, r1, r8, lsr #4
   121ec:	andeq	r2, r1, r8, lsr #4
   121f0:	andeq	r2, r1, r8, lsr #4
   121f4:	andeq	r2, r1, r8, lsr #4
   121f8:	andeq	r2, r1, r8, lsr #4
   121fc:	andeq	r2, r1, r8, lsr #4
   12200:	andeq	r2, r1, r8, lsr #4
   12204:	andeq	r2, r1, r8, lsr #4
   12208:	andeq	r2, r1, r8, lsr #4
   1220c:	andeq	r2, r1, r8, lsr #4
   12210:	andeq	r2, r1, r8, lsr #4
   12214:	andeq	r2, r1, r8, lsr #4
   12218:	andeq	r2, r1, r0, asr r2
   1221c:	andeq	r2, r1, r4, asr #8
   12220:	andeq	r2, r1, r0, asr r2
   12224:	andeq	r2, r1, ip, lsr r2
   12228:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1222c:	cmp	r0, #0
   12230:	beq	124a4 <putchar_unlocked@plt+0x147c>
   12234:	ldr	r0, [fp, #16]
   12238:	b	124a8 <putchar_unlocked@plt+0x1480>
   1223c:	mov	r9, #0
   12240:	cmp	r6, #0
   12244:	beq	12440 <putchar_unlocked@plt+0x1418>
   12248:	mov	sl, #0
   1224c:	b	12228 <putchar_unlocked@plt+0x1200>
   12250:	mov	r9, #0
   12254:	cmn	lr, #1
   12258:	beq	12424 <putchar_unlocked@plt+0x13fc>
   1225c:	cmp	r6, #0
   12260:	bne	12248 <putchar_unlocked@plt+0x1220>
   12264:	cmp	lr, #1
   12268:	beq	12440 <putchar_unlocked@plt+0x1418>
   1226c:	b	12248 <putchar_unlocked@plt+0x1220>
   12270:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12274:	cmp	r0, #2
   12278:	bne	1246c <putchar_unlocked@plt+0x1444>
   1227c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12280:	tst	r0, #1
   12284:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   12288:	mov	sl, #0
   1228c:	mov	r0, #92	; 0x5c
   12290:	b	12480 <putchar_unlocked@plt+0x1458>
   12294:	mov	r0, #102	; 0x66
   12298:	b	12490 <putchar_unlocked@plt+0x1468>
   1229c:	mov	r2, #116	; 0x74
   122a0:	b	122b0 <putchar_unlocked@plt+0x1288>
   122a4:	mov	r0, #98	; 0x62
   122a8:	b	12490 <putchar_unlocked@plt+0x1468>
   122ac:	mov	r2, #114	; 0x72
   122b0:	ldr	r0, [sp, #64]	; 0x40
   122b4:	tst	r0, #1
   122b8:	mov	r0, r2
   122bc:	bne	12490 <putchar_unlocked@plt+0x1468>
   122c0:	b	12bb4 <putchar_unlocked@plt+0x1b8c>
   122c4:	ldr	r0, [sp, #84]	; 0x54
   122c8:	tst	r0, #1
   122cc:	beq	12580 <putchar_unlocked@plt+0x1558>
   122d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122d4:	tst	r0, #1
   122d8:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   122dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122e0:	cmp	r0, #2
   122e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   122e8:	movwne	r0, #1
   122ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   122f0:	orr	r0, r0, r2
   122f4:	tst	r0, #1
   122f8:	beq	12974 <putchar_unlocked@plt+0x194c>
   122fc:	mov	r0, r8
   12300:	b	129a8 <putchar_unlocked@plt+0x1980>
   12304:	mov	sl, #0
   12308:	mov	r5, #63	; 0x3f
   1230c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12310:	cmp	r0, #5
   12314:	beq	12734 <putchar_unlocked@plt+0x170c>
   12318:	cmp	r0, #2
   1231c:	bne	127d4 <putchar_unlocked@plt+0x17ac>
   12320:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12324:	tst	r0, #1
   12328:	mov	r9, #0
   1232c:	beq	12228 <putchar_unlocked@plt+0x1200>
   12330:	b	12bb4 <putchar_unlocked@plt+0x1b8c>
   12334:	mov	r0, #118	; 0x76
   12338:	b	12490 <putchar_unlocked@plt+0x1468>
   1233c:	mov	r5, #39	; 0x27
   12340:	mov	r0, #1
   12344:	str	r0, [sp, #56]	; 0x38
   12348:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1234c:	cmp	r0, #2
   12350:	bne	125a0 <putchar_unlocked@plt+0x1578>
   12354:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12358:	tst	r0, #1
   1235c:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   12360:	ldr	r2, [sp, #72]	; 0x48
   12364:	cmp	r2, #0
   12368:	mov	r0, r2
   1236c:	movwne	r0, #1
   12370:	clz	r1, r4
   12374:	lsr	r1, r1, #5
   12378:	orrs	r0, r0, r1
   1237c:	moveq	r2, r4
   12380:	str	r2, [sp, #72]	; 0x48
   12384:	moveq	r4, r0
   12388:	cmp	r8, r4
   1238c:	movcc	r0, #39	; 0x27
   12390:	strbcc	r0, [r7, r8]
   12394:	add	r0, r8, #1
   12398:	cmp	r0, r4
   1239c:	movcc	r1, #92	; 0x5c
   123a0:	strbcc	r1, [r7, r0]
   123a4:	add	r0, r8, #2
   123a8:	cmp	r0, r4
   123ac:	movcc	r1, #39	; 0x27
   123b0:	strbcc	r1, [r7, r0]
   123b4:	add	r8, r8, #3
   123b8:	mov	r0, #0
   123bc:	str	r0, [fp, #-56]	; 0xffffffc8
   123c0:	mov	sl, #0
   123c4:	mov	r9, #1
   123c8:	b	12228 <putchar_unlocked@plt+0x1200>
   123cc:	str	r4, [sp, #24]
   123d0:	ldr	r0, [sp, #40]	; 0x28
   123d4:	cmp	r0, #1
   123d8:	bne	125a8 <putchar_unlocked@plt+0x1580>
   123dc:	str	lr, [sp, #28]
   123e0:	bl	10f2c <__ctype_b_loc@plt>
   123e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   123e8:	ldr	r0, [r0]
   123ec:	add	r0, r0, r5, lsl #1
   123f0:	ldrb	r0, [r0, #1]
   123f4:	ubfx	r9, r0, #6, #1
   123f8:	mov	r1, #1
   123fc:	ldr	r4, [sp, #24]
   12400:	ldr	r0, [sp, #52]	; 0x34
   12404:	orr	r0, r9, r0
   12408:	mov	r2, r1
   1240c:	cmp	r1, #1
   12410:	bhi	127dc <putchar_unlocked@plt+0x17b4>
   12414:	tst	r0, #1
   12418:	beq	127dc <putchar_unlocked@plt+0x17b4>
   1241c:	ldr	lr, [sp, #28]
   12420:	b	12228 <putchar_unlocked@plt+0x1200>
   12424:	cmp	r6, #0
   12428:	ldrbeq	r0, [ip, #1]
   1242c:	cmpeq	r0, #0
   12430:	beq	12440 <putchar_unlocked@plt+0x1418>
   12434:	mvn	lr, #0
   12438:	mov	sl, #0
   1243c:	b	12228 <putchar_unlocked@plt+0x1200>
   12440:	mov	r1, #1
   12444:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12448:	cmp	r0, #2
   1244c:	bne	12464 <putchar_unlocked@plt+0x143c>
   12450:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12454:	tst	r0, #1
   12458:	mov	r9, r1
   1245c:	beq	12228 <putchar_unlocked@plt+0x1200>
   12460:	b	12bb4 <putchar_unlocked@plt+0x1b8c>
   12464:	mov	r9, r1
   12468:	b	12228 <putchar_unlocked@plt+0x1200>
   1246c:	mov	sl, #0
   12470:	mov	r0, #92	; 0x5c
   12474:	ldr	r1, [sp, #48]	; 0x30
   12478:	cmp	r1, #0
   1247c:	beq	12490 <putchar_unlocked@plt+0x1468>
   12480:	mov	r9, #0
   12484:	cmp	sl, #0
   12488:	beq	12a40 <putchar_unlocked@plt+0x1a18>
   1248c:	b	12a7c <putchar_unlocked@plt+0x1a54>
   12490:	mov	r9, #0
   12494:	ldr	r1, [sp, #84]	; 0x54
   12498:	tst	r1, #1
   1249c:	mov	sl, #0
   124a0:	bne	124e0 <putchar_unlocked@plt+0x14b8>
   124a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   124a8:	cmp	r0, #0
   124ac:	mov	r0, r5
   124b0:	beq	124d4 <putchar_unlocked@plt+0x14ac>
   124b4:	ubfx	r0, r5, #5, #3
   124b8:	ldr	r1, [fp, #16]
   124bc:	ldr	r0, [r1, r0, lsl #2]
   124c0:	and	r1, r5, #31
   124c4:	mov	r2, #1
   124c8:	tst	r0, r2, lsl r1
   124cc:	mov	r0, r5
   124d0:	bne	124e0 <putchar_unlocked@plt+0x14b8>
   124d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   124d8:	cmp	r1, #0
   124dc:	beq	12a38 <putchar_unlocked@plt+0x1a10>
   124e0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   124e4:	tst	r1, #1
   124e8:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   124ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   124f0:	cmp	r1, #2
   124f4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   124f8:	movwne	r1, #1
   124fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12500:	orr	r1, r1, r2
   12504:	tst	r1, #1
   12508:	beq	12514 <putchar_unlocked@plt+0x14ec>
   1250c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12510:	b	12550 <putchar_unlocked@plt+0x1528>
   12514:	cmp	r8, r4
   12518:	movcc	r1, #39	; 0x27
   1251c:	strbcc	r1, [r7, r8]
   12520:	add	r1, r8, #1
   12524:	cmp	r1, r4
   12528:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1252c:	movcc	r2, #36	; 0x24
   12530:	strbcc	r2, [r7, r1]
   12534:	add	r1, r8, #2
   12538:	cmp	r1, r4
   1253c:	movcc	r2, #39	; 0x27
   12540:	strbcc	r2, [r7, r1]
   12544:	add	r8, r8, #3
   12548:	mov	r1, #1
   1254c:	str	r1, [fp, #-56]	; 0xffffffc8
   12550:	cmp	r8, r4
   12554:	movcc	r1, #92	; 0x5c
   12558:	strbcc	r1, [r7, r8]
   1255c:	add	r8, r8, #1
   12560:	cmp	r8, r4
   12564:	strbcc	r0, [r7, r8]
   12568:	and	r5, r5, r9
   1256c:	add	r8, r8, #1
   12570:	add	r6, r6, #1
   12574:	cmn	lr, #1
   12578:	bne	11f54 <putchar_unlocked@plt+0xf2c>
   1257c:	b	11f60 <putchar_unlocked@plt+0xf38>
   12580:	mov	r9, #0
   12584:	ldr	r0, [sp, #36]	; 0x24
   12588:	cmp	r0, #0
   1258c:	mov	sl, #0
   12590:	mov	r5, #0
   12594:	beq	124a4 <putchar_unlocked@plt+0x147c>
   12598:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1259c:	b	12570 <putchar_unlocked@plt+0x1548>
   125a0:	mov	r9, #1
   125a4:	b	12228 <putchar_unlocked@plt+0x1200>
   125a8:	mov	r0, #0
   125ac:	str	r0, [fp, #-36]	; 0xffffffdc
   125b0:	str	r0, [fp, #-40]	; 0xffffffd8
   125b4:	cmn	lr, #1
   125b8:	bne	125cc <putchar_unlocked@plt+0x15a4>
   125bc:	mov	r0, ip
   125c0:	bl	10f44 <strlen@plt>
   125c4:	ldr	ip, [fp, #-84]	; 0xffffffac
   125c8:	mov	lr, r0
   125cc:	add	r0, ip, r6
   125d0:	str	r0, [sp, #20]
   125d4:	mov	r9, #1
   125d8:	mov	r7, #0
   125dc:	sub	r4, fp, #40	; 0x28
   125e0:	str	lr, [sp, #28]
   125e4:	str	r7, [sp, #44]	; 0x2c
   125e8:	add	r7, r7, r6
   125ec:	add	r1, ip, r7
   125f0:	sub	r2, lr, r7
   125f4:	sub	r0, fp, #44	; 0x2c
   125f8:	mov	r3, r4
   125fc:	bl	14610 <putchar_unlocked@plt+0x35e8>
   12600:	cmp	r0, #0
   12604:	beq	12ac4 <putchar_unlocked@plt+0x1a9c>
   12608:	cmn	r0, #1
   1260c:	beq	12a84 <putchar_unlocked@plt+0x1a5c>
   12610:	cmn	r0, #2
   12614:	ldr	lr, [sp, #28]
   12618:	beq	12a8c <putchar_unlocked@plt+0x1a64>
   1261c:	cmp	r0, #2
   12620:	mov	r1, #0
   12624:	movwcc	r1, #1
   12628:	ldr	r2, [sp, #60]	; 0x3c
   1262c:	eor	r2, r2, #1
   12630:	orrs	r1, r2, r1
   12634:	ldr	r4, [sp, #24]
   12638:	bne	126f8 <putchar_unlocked@plt+0x16d0>
   1263c:	ldr	r1, [sp, #44]	; 0x2c
   12640:	ldr	r2, [sp, #20]
   12644:	add	r1, r2, r1
   12648:	mov	r2, #1
   1264c:	ldrb	r3, [r1, r2]
   12650:	sub	r3, r3, #91	; 0x5b
   12654:	cmp	r3, #33	; 0x21
   12658:	bhi	126ec <putchar_unlocked@plt+0x16c4>
   1265c:	add	r7, pc, #0
   12660:	ldr	pc, [r7, r3, lsl #2]
   12664:	andeq	r2, r1, ip, lsr #23
   12668:	andeq	r2, r1, ip, lsr #23
   1266c:	andeq	r2, r1, ip, ror #13
   12670:	andeq	r2, r1, ip, lsr #23
   12674:	andeq	r2, r1, ip, ror #13
   12678:	andeq	r2, r1, ip, lsr #23
   1267c:	andeq	r2, r1, ip, ror #13
   12680:	andeq	r2, r1, ip, ror #13
   12684:	andeq	r2, r1, ip, ror #13
   12688:	andeq	r2, r1, ip, ror #13
   1268c:	andeq	r2, r1, ip, ror #13
   12690:	andeq	r2, r1, ip, ror #13
   12694:	andeq	r2, r1, ip, ror #13
   12698:	andeq	r2, r1, ip, ror #13
   1269c:	andeq	r2, r1, ip, ror #13
   126a0:	andeq	r2, r1, ip, ror #13
   126a4:	andeq	r2, r1, ip, ror #13
   126a8:	andeq	r2, r1, ip, ror #13
   126ac:	andeq	r2, r1, ip, ror #13
   126b0:	andeq	r2, r1, ip, ror #13
   126b4:	andeq	r2, r1, ip, ror #13
   126b8:	andeq	r2, r1, ip, ror #13
   126bc:	andeq	r2, r1, ip, ror #13
   126c0:	andeq	r2, r1, ip, ror #13
   126c4:	andeq	r2, r1, ip, ror #13
   126c8:	andeq	r2, r1, ip, ror #13
   126cc:	andeq	r2, r1, ip, ror #13
   126d0:	andeq	r2, r1, ip, ror #13
   126d4:	andeq	r2, r1, ip, ror #13
   126d8:	andeq	r2, r1, ip, ror #13
   126dc:	andeq	r2, r1, ip, ror #13
   126e0:	andeq	r2, r1, ip, ror #13
   126e4:	andeq	r2, r1, ip, ror #13
   126e8:	andeq	r2, r1, ip, lsr #23
   126ec:	add	r2, r2, #1
   126f0:	cmp	r2, r0
   126f4:	bcc	1264c <putchar_unlocked@plt+0x1624>
   126f8:	ldr	r7, [sp, #44]	; 0x2c
   126fc:	add	r7, r0, r7
   12700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12704:	bl	10e84 <iswprint@plt>
   12708:	cmp	r0, #0
   1270c:	movwne	r0, #1
   12710:	and	r9, r9, r0
   12714:	sub	r4, fp, #40	; 0x28
   12718:	mov	r0, r4
   1271c:	bl	10e48 <mbsinit@plt>
   12720:	ldr	lr, [sp, #28]
   12724:	cmp	r0, #0
   12728:	ldr	ip, [fp, #-84]	; 0xffffffac
   1272c:	beq	125e4 <putchar_unlocked@plt+0x15bc>
   12730:	b	12acc <putchar_unlocked@plt+0x1aa4>
   12734:	ldr	r0, [sp, #32]
   12738:	cmp	r0, #0
   1273c:	beq	127d4 <putchar_unlocked@plt+0x17ac>
   12740:	add	r0, r6, #2
   12744:	cmp	r0, lr
   12748:	bcs	127d4 <putchar_unlocked@plt+0x17ac>
   1274c:	add	r1, ip, r6
   12750:	ldrb	r1, [r1, #1]
   12754:	cmp	r1, #63	; 0x3f
   12758:	bne	127d4 <putchar_unlocked@plt+0x17ac>
   1275c:	ldrb	r9, [ip, r0]
   12760:	sub	r2, r9, #33	; 0x21
   12764:	cmp	r2, #29
   12768:	bhi	127d4 <putchar_unlocked@plt+0x17ac>
   1276c:	mov	r3, #1
   12770:	movw	r1, #20929	; 0x51c1
   12774:	movt	r1, #14336	; 0x3800
   12778:	tst	r1, r3, lsl r2
   1277c:	beq	127d4 <putchar_unlocked@plt+0x17ac>
   12780:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12784:	tst	r1, #1
   12788:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   1278c:	cmp	r8, r4
   12790:	movcc	r1, #63	; 0x3f
   12794:	strbcc	r1, [r7, r8]
   12798:	add	r2, r8, #1
   1279c:	cmp	r2, r4
   127a0:	movcc	r1, #34	; 0x22
   127a4:	strbcc	r1, [r7, r2]
   127a8:	add	r2, r8, #2
   127ac:	cmp	r2, r4
   127b0:	movcc	r1, #34	; 0x22
   127b4:	strbcc	r1, [r7, r2]
   127b8:	add	r2, r8, #3
   127bc:	cmp	r2, r4
   127c0:	movcc	r1, #63	; 0x3f
   127c4:	strbcc	r1, [r7, r2]
   127c8:	add	r8, r8, #4
   127cc:	mov	r6, r0
   127d0:	mov	r5, r9
   127d4:	mov	r9, #0
   127d8:	b	12228 <putchar_unlocked@plt+0x1200>
   127dc:	add	r1, r2, r6
   127e0:	str	r1, [sp, #44]	; 0x2c
   127e4:	add	r1, r6, #1
   127e8:	mov	r3, #0
   127ec:	ldr	lr, [sp, #28]
   127f0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   127f4:	tst	r0, #1
   127f8:	bne	128ec <putchar_unlocked@plt+0x18c4>
   127fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12800:	tst	r2, #1
   12804:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   12808:	cmp	r6, #2
   1280c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12810:	movwne	r3, #1
   12814:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12818:	orr	r3, r3, r2
   1281c:	tst	r3, #1
   12820:	bne	1285c <putchar_unlocked@plt+0x1834>
   12824:	cmp	r8, r4
   12828:	movcc	r2, #39	; 0x27
   1282c:	strbcc	r2, [r7, r8]
   12830:	add	r3, r8, #1
   12834:	cmp	r3, r4
   12838:	movcc	r2, #36	; 0x24
   1283c:	strbcc	r2, [r7, r3]
   12840:	add	r3, r8, #2
   12844:	cmp	r3, r4
   12848:	movcc	r2, #39	; 0x27
   1284c:	strbcc	r2, [r7, r3]
   12850:	add	r8, r8, #3
   12854:	mov	r2, #1
   12858:	str	r2, [fp, #-56]	; 0xffffffc8
   1285c:	cmp	r8, r4
   12860:	movcc	r2, #92	; 0x5c
   12864:	strbcc	r2, [r7, r8]
   12868:	add	r3, r8, #1
   1286c:	cmp	r3, r4
   12870:	bcs	12890 <putchar_unlocked@plt+0x1868>
   12874:	and	r7, r5, #192	; 0xc0
   12878:	mov	r2, #48	; 0x30
   1287c:	orr	r7, r2, r7, lsr #6
   12880:	ldr	r6, [sp, #80]	; 0x50
   12884:	strb	r7, [r6, r3]
   12888:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1288c:	ldr	r7, [sp, #80]	; 0x50
   12890:	add	r3, r8, #2
   12894:	cmp	r3, r4
   12898:	bcs	128b8 <putchar_unlocked@plt+0x1890>
   1289c:	lsr	r7, r5, #3
   128a0:	mov	r2, #6
   128a4:	bfi	r7, r2, #3, #29
   128a8:	ldr	r6, [sp, #80]	; 0x50
   128ac:	strb	r7, [r6, r3]
   128b0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   128b4:	ldr	r7, [sp, #80]	; 0x50
   128b8:	mov	r2, #6
   128bc:	bfi	r5, r2, #3, #29
   128c0:	add	r8, r8, #3
   128c4:	mov	r3, #1
   128c8:	b	12910 <putchar_unlocked@plt+0x18e8>
   128cc:	ldr	r7, [sp, #80]	; 0x50
   128d0:	cmp	r8, r4
   128d4:	strbcc	r5, [r7, r8]
   128d8:	ldrb	r5, [ip, r1]
   128dc:	add	r1, r1, #1
   128e0:	add	r8, r8, #1
   128e4:	tst	r0, #1
   128e8:	beq	127fc <putchar_unlocked@plt+0x17d4>
   128ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   128f0:	tst	r2, #1
   128f4:	beq	12908 <putchar_unlocked@plt+0x18e0>
   128f8:	cmp	r8, r4
   128fc:	movcc	r2, #92	; 0x5c
   12900:	strbcc	r2, [r7, r8]
   12904:	add	r8, r8, #1
   12908:	mov	r2, #0
   1290c:	str	r2, [fp, #-52]	; 0xffffffcc
   12910:	and	sl, r3, #1
   12914:	ldr	r2, [sp, #44]	; 0x2c
   12918:	cmp	r2, r1
   1291c:	bls	12a28 <putchar_unlocked@plt+0x1a00>
   12920:	cmp	sl, #0
   12924:	movwne	sl, #1
   12928:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1292c:	mvn	r7, r2
   12930:	orr	r7, r7, sl
   12934:	tst	r7, #1
   12938:	bne	128cc <putchar_unlocked@plt+0x18a4>
   1293c:	cmp	r8, r4
   12940:	ldrcc	r7, [sp, #80]	; 0x50
   12944:	movcc	r2, #39	; 0x27
   12948:	strbcc	r2, [r7, r8]
   1294c:	add	r7, r8, #1
   12950:	cmp	r7, r4
   12954:	ldrcc	r6, [sp, #80]	; 0x50
   12958:	movcc	r2, #39	; 0x27
   1295c:	strbcc	r2, [r6, r7]
   12960:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   12964:	add	r8, r8, #2
   12968:	mov	r2, #0
   1296c:	str	r2, [fp, #-56]	; 0xffffffc8
   12970:	b	128cc <putchar_unlocked@plt+0x18a4>
   12974:	cmp	r8, r4
   12978:	movcc	r0, #39	; 0x27
   1297c:	strbcc	r0, [r7, r8]
   12980:	add	r0, r8, #1
   12984:	cmp	r0, r4
   12988:	movcc	r1, #36	; 0x24
   1298c:	strbcc	r1, [r7, r0]
   12990:	add	r0, r8, #2
   12994:	cmp	r0, r4
   12998:	movcc	r1, #39	; 0x27
   1299c:	strbcc	r1, [r7, r0]
   129a0:	add	r0, r8, #3
   129a4:	mov	r2, #1
   129a8:	cmp	r0, r4
   129ac:	movcc	r1, #92	; 0x5c
   129b0:	strbcc	r1, [r7, r0]
   129b4:	str	r2, [fp, #-56]	; 0xffffffc8
   129b8:	add	r8, r0, #1
   129bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   129c0:	cmp	r1, #2
   129c4:	beq	12a18 <putchar_unlocked@plt+0x19f0>
   129c8:	add	r1, r6, #1
   129cc:	mov	r9, #0
   129d0:	mov	sl, #1
   129d4:	mov	r5, #48	; 0x30
   129d8:	cmp	r1, lr
   129dc:	bcs	12228 <putchar_unlocked@plt+0x1200>
   129e0:	ldrb	r1, [ip, r1]
   129e4:	sub	r1, r1, #48	; 0x30
   129e8:	uxtb	r1, r1
   129ec:	cmp	r1, #9
   129f0:	bhi	12228 <putchar_unlocked@plt+0x1200>
   129f4:	cmp	r8, r4
   129f8:	movcc	r1, #48	; 0x30
   129fc:	strbcc	r1, [r7, r8]
   12a00:	add	r1, r0, #2
   12a04:	cmp	r1, r4
   12a08:	movcc	r2, #48	; 0x30
   12a0c:	strbcc	r2, [r7, r1]
   12a10:	add	r8, r0, #3
   12a14:	b	12228 <putchar_unlocked@plt+0x1200>
   12a18:	mov	r0, #48	; 0x30
   12a1c:	mov	sl, #1
   12a20:	mov	r9, #0
   12a24:	b	124d4 <putchar_unlocked@plt+0x14ac>
   12a28:	sub	r6, r1, #1
   12a2c:	cmp	sl, #0
   12a30:	movwne	sl, #1
   12a34:	mov	r0, r5
   12a38:	cmp	sl, #0
   12a3c:	bne	12a7c <putchar_unlocked@plt+0x1a54>
   12a40:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12a44:	tst	r1, #1
   12a48:	beq	12a7c <putchar_unlocked@plt+0x1a54>
   12a4c:	cmp	r8, r4
   12a50:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a54:	movcc	r1, #39	; 0x27
   12a58:	strbcc	r1, [r7, r8]
   12a5c:	add	r1, r8, #1
   12a60:	cmp	r1, r4
   12a64:	movcc	r2, #39	; 0x27
   12a68:	strbcc	r2, [r7, r1]
   12a6c:	add	r8, r8, #2
   12a70:	mov	r1, #0
   12a74:	str	r1, [fp, #-56]	; 0xffffffc8
   12a78:	b	12560 <putchar_unlocked@plt+0x1538>
   12a7c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a80:	b	12560 <putchar_unlocked@plt+0x1538>
   12a84:	mov	r9, #0
   12a88:	b	12ac4 <putchar_unlocked@plt+0x1a9c>
   12a8c:	mov	r9, #0
   12a90:	cmp	r7, lr
   12a94:	bcs	12ac4 <putchar_unlocked@plt+0x1a9c>
   12a98:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a9c:	ldr	r7, [sp, #44]	; 0x2c
   12aa0:	ldr	r0, [sp, #20]
   12aa4:	ldrb	r0, [r0, r7]
   12aa8:	cmp	r0, #0
   12aac:	beq	12acc <putchar_unlocked@plt+0x1aa4>
   12ab0:	add	r7, r7, #1
   12ab4:	add	r0, r6, r7
   12ab8:	cmp	r0, lr
   12abc:	bcc	12aa0 <putchar_unlocked@plt+0x1a78>
   12ac0:	b	12acc <putchar_unlocked@plt+0x1aa4>
   12ac4:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ac8:	ldr	r7, [sp, #44]	; 0x2c
   12acc:	mov	r1, r7
   12ad0:	ldr	r7, [sp, #80]	; 0x50
   12ad4:	b	123fc <putchar_unlocked@plt+0x13d4>
   12ad8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12adc:	eor	r0, r1, #2
   12ae0:	orr	r0, r0, r8
   12ae4:	clz	r0, r0
   12ae8:	lsr	r0, r0, #5
   12aec:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12af0:	tst	r2, r0
   12af4:	bne	12bb4 <putchar_unlocked@plt+0x1b8c>
   12af8:	cmp	r1, #2
   12afc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12b00:	movwne	r0, #1
   12b04:	orr	r0, r2, r0
   12b08:	tst	r0, #1
   12b0c:	ldreq	r0, [sp, #56]	; 0x38
   12b10:	eoreq	r0, r0, #1
   12b14:	tsteq	r0, #1
   12b18:	bne	12b4c <putchar_unlocked@plt+0x1b24>
   12b1c:	mov	r9, lr
   12b20:	tst	r5, #1
   12b24:	bne	12c1c <putchar_unlocked@plt+0x1bf4>
   12b28:	ldr	r0, [sp, #72]	; 0x48
   12b2c:	cmp	r0, #0
   12b30:	beq	12b4c <putchar_unlocked@plt+0x1b24>
   12b34:	mov	r5, #0
   12b38:	cmp	r4, #0
   12b3c:	ldr	r0, [sp, #84]	; 0x54
   12b40:	mov	sl, r2
   12b44:	ldr	r6, [sp, #72]	; 0x48
   12b48:	beq	11ce4 <putchar_unlocked@plt+0xcbc>
   12b4c:	ldr	r1, [sp, #92]	; 0x5c
   12b50:	clz	r0, r1
   12b54:	lsr	r0, r0, #5
   12b58:	orr	r0, r0, r2
   12b5c:	tst	r0, #1
   12b60:	bne	12b8c <putchar_unlocked@plt+0x1b64>
   12b64:	ldrb	r0, [r1]
   12b68:	cmp	r0, #0
   12b6c:	beq	12b8c <putchar_unlocked@plt+0x1b64>
   12b70:	add	r1, r1, #1
   12b74:	cmp	r8, r4
   12b78:	strbcc	r0, [r7, r8]
   12b7c:	add	r8, r8, #1
   12b80:	ldrb	r0, [r1], #1
   12b84:	cmp	r0, #0
   12b88:	bne	12b74 <putchar_unlocked@plt+0x1b4c>
   12b8c:	cmp	r8, r4
   12b90:	movcc	r0, #0
   12b94:	strbcc	r0, [r7, r8]
   12b98:	b	12c10 <putchar_unlocked@plt+0x1be8>
   12b9c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ba0:	mov	lr, r4
   12ba4:	mov	r4, r5
   12ba8:	b	12bb4 <putchar_unlocked@plt+0x1b8c>
   12bac:	ldr	r7, [sp, #80]	; 0x50
   12bb0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12bb4:	mov	r0, #0
   12bb8:	ldr	r1, [fp, #12]
   12bbc:	bic	r1, r1, #2
   12bc0:	ldr	r2, [sp, #84]	; 0x54
   12bc4:	tst	r2, #1
   12bc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bcc:	mov	r2, r3
   12bd0:	movwne	r2, #4
   12bd4:	cmp	r3, #2
   12bd8:	movne	r2, r3
   12bdc:	str	r2, [sp]
   12be0:	str	r1, [sp, #4]
   12be4:	str	r0, [sp, #8]
   12be8:	ldr	r0, [sp, #68]	; 0x44
   12bec:	str	r0, [sp, #12]
   12bf0:	ldr	r0, [sp, #76]	; 0x4c
   12bf4:	str	r0, [sp, #16]
   12bf8:	mov	r0, r7
   12bfc:	mov	r1, r4
   12c00:	mov	r2, ip
   12c04:	mov	r3, lr
   12c08:	bl	11c5c <putchar_unlocked@plt+0xc34>
   12c0c:	mov	r8, r0
   12c10:	mov	r0, r8
   12c14:	sub	sp, fp, #28
   12c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c1c:	mov	r0, #5
   12c20:	str	r0, [sp]
   12c24:	ldr	r0, [fp, #12]
   12c28:	str	r0, [sp, #4]
   12c2c:	ldr	r0, [fp, #16]
   12c30:	str	r0, [sp, #8]
   12c34:	ldr	r0, [sp, #68]	; 0x44
   12c38:	str	r0, [sp, #12]
   12c3c:	ldr	r0, [sp, #76]	; 0x4c
   12c40:	str	r0, [sp, #16]
   12c44:	mov	r0, r7
   12c48:	ldr	r1, [sp, #72]	; 0x48
   12c4c:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c50:	mov	r3, r9
   12c54:	b	12c08 <putchar_unlocked@plt+0x1be0>
   12c58:	bl	11010 <abort@plt>
   12c5c:	mov	r3, r2
   12c60:	mov	r2, #0
   12c64:	b	12c68 <putchar_unlocked@plt+0x1c40>
   12c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c6c:	add	fp, sp, #28
   12c70:	sub	sp, sp, #36	; 0x24
   12c74:	mov	r4, r2
   12c78:	str	r2, [sp, #24]
   12c7c:	mov	r5, r1
   12c80:	mov	r6, r0
   12c84:	str	r0, [sp, #20]
   12c88:	movw	r8, #24944	; 0x6170
   12c8c:	movt	r8, #2
   12c90:	cmp	r3, #0
   12c94:	movne	r8, r3
   12c98:	bl	10f50 <__errno_location@plt>
   12c9c:	str	r0, [sp, #28]
   12ca0:	ldm	r8, {r3, r9}
   12ca4:	ldr	r1, [r8, #40]	; 0x28
   12ca8:	ldr	r2, [r8, #44]	; 0x2c
   12cac:	ldr	r7, [r0]
   12cb0:	str	r7, [sp, #32]
   12cb4:	add	sl, r8, #8
   12cb8:	cmp	r4, #0
   12cbc:	orreq	r9, r9, #1
   12cc0:	stm	sp, {r3, r9, sl}
   12cc4:	str	r1, [sp, #12]
   12cc8:	str	r2, [sp, #16]
   12ccc:	mov	r0, #0
   12cd0:	mov	r1, #0
   12cd4:	mov	r2, r6
   12cd8:	mov	r3, r5
   12cdc:	mov	r7, r5
   12ce0:	bl	11c5c <putchar_unlocked@plt+0xc34>
   12ce4:	mov	r5, r0
   12ce8:	add	r4, r0, #1
   12cec:	mov	r0, r4
   12cf0:	bl	13b6c <putchar_unlocked@plt+0x2b44>
   12cf4:	mov	r6, r0
   12cf8:	ldr	r0, [r8]
   12cfc:	ldr	r1, [r8, #40]	; 0x28
   12d00:	ldr	r2, [r8, #44]	; 0x2c
   12d04:	stm	sp, {r0, r9, sl}
   12d08:	str	r1, [sp, #12]
   12d0c:	str	r2, [sp, #16]
   12d10:	mov	r0, r6
   12d14:	mov	r1, r4
   12d18:	ldr	r2, [sp, #20]
   12d1c:	mov	r3, r7
   12d20:	bl	11c5c <putchar_unlocked@plt+0xc34>
   12d24:	ldr	r0, [sp, #24]
   12d28:	ldr	r1, [sp, #32]
   12d2c:	ldr	r2, [sp, #28]
   12d30:	str	r1, [r2]
   12d34:	cmp	r0, #0
   12d38:	strne	r5, [r0]
   12d3c:	mov	r0, r6
   12d40:	sub	sp, fp, #28
   12d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d4c:	add	fp, sp, #24
   12d50:	movw	r8, #24816	; 0x60f0
   12d54:	movt	r8, #2
   12d58:	ldr	r4, [r8]
   12d5c:	movw	r5, #24820	; 0x60f4
   12d60:	movt	r5, #2
   12d64:	ldr	r0, [r5]
   12d68:	cmp	r0, #2
   12d6c:	blt	12d98 <putchar_unlocked@plt+0x1d70>
   12d70:	add	r7, r4, #12
   12d74:	mov	r6, #0
   12d78:	ldr	r0, [r7, r6, lsl #3]
   12d7c:	bl	1199c <putchar_unlocked@plt+0x974>
   12d80:	add	r0, r6, #1
   12d84:	ldr	r1, [r5]
   12d88:	add	r2, r6, #2
   12d8c:	cmp	r2, r1
   12d90:	mov	r6, r0
   12d94:	blt	12d78 <putchar_unlocked@plt+0x1d50>
   12d98:	ldr	r0, [r4, #4]
   12d9c:	movw	r7, #24992	; 0x61a0
   12da0:	movt	r7, #2
   12da4:	cmp	r0, r7
   12da8:	beq	12dc0 <putchar_unlocked@plt+0x1d98>
   12dac:	bl	1199c <putchar_unlocked@plt+0x974>
   12db0:	movw	r0, #24824	; 0x60f8
   12db4:	movt	r0, #2
   12db8:	mov	r6, #256	; 0x100
   12dbc:	strd	r6, [r0]
   12dc0:	movw	r6, #24824	; 0x60f8
   12dc4:	movt	r6, #2
   12dc8:	cmp	r4, r6
   12dcc:	beq	12ddc <putchar_unlocked@plt+0x1db4>
   12dd0:	mov	r0, r4
   12dd4:	bl	1199c <putchar_unlocked@plt+0x974>
   12dd8:	str	r6, [r8]
   12ddc:	mov	r0, #1
   12de0:	str	r0, [r5]
   12de4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12de8:	movw	r3, #24944	; 0x6170
   12dec:	movt	r3, #2
   12df0:	mvn	r2, #0
   12df4:	b	12df8 <putchar_unlocked@plt+0x1dd0>
   12df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dfc:	add	fp, sp, #28
   12e00:	sub	sp, sp, #44	; 0x2c
   12e04:	mov	r7, r3
   12e08:	str	r2, [sp, #36]	; 0x24
   12e0c:	str	r1, [sp, #32]
   12e10:	mov	r5, r0
   12e14:	bl	10f50 <__errno_location@plt>
   12e18:	cmp	r5, #0
   12e1c:	blt	12f88 <putchar_unlocked@plt+0x1f60>
   12e20:	cmn	r5, #-2147483647	; 0x80000001
   12e24:	beq	12f88 <putchar_unlocked@plt+0x1f60>
   12e28:	movw	r4, #24816	; 0x60f0
   12e2c:	movt	r4, #2
   12e30:	ldr	r6, [r4]
   12e34:	str	r0, [sp, #28]
   12e38:	ldr	r0, [r0]
   12e3c:	str	r0, [sp, #24]
   12e40:	movw	r8, #24820	; 0x60f4
   12e44:	movt	r8, #2
   12e48:	ldr	r1, [r8]
   12e4c:	cmp	r1, r5
   12e50:	ble	12e5c <putchar_unlocked@plt+0x1e34>
   12e54:	mov	sl, r6
   12e58:	b	12ec4 <putchar_unlocked@plt+0x1e9c>
   12e5c:	str	r1, [fp, #-32]	; 0xffffffe0
   12e60:	mov	r0, #8
   12e64:	str	r0, [sp]
   12e68:	movw	r9, #24824	; 0x60f8
   12e6c:	movt	r9, #2
   12e70:	subs	r0, r6, r9
   12e74:	movne	r0, r6
   12e78:	add	r2, r5, #1
   12e7c:	sub	r2, r2, r1
   12e80:	sub	r1, fp, #32
   12e84:	mvn	r3, #-2147483648	; 0x80000000
   12e88:	bl	13c54 <putchar_unlocked@plt+0x2c2c>
   12e8c:	mov	sl, r0
   12e90:	str	r0, [r4]
   12e94:	cmp	r6, r9
   12e98:	ldrdeq	r0, [r9]
   12e9c:	stmeq	sl, {r0, r1}
   12ea0:	ldr	r1, [r8]
   12ea4:	add	r0, sl, r1, lsl #3
   12ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12eac:	sub	r1, r2, r1
   12eb0:	lsl	r2, r1, #3
   12eb4:	mov	r1, #0
   12eb8:	bl	10f80 <memset@plt>
   12ebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ec0:	str	r0, [r8]
   12ec4:	mov	r9, sl
   12ec8:	ldr	r6, [r9, r5, lsl #3]!
   12ecc:	ldr	r4, [r9, #4]!
   12ed0:	ldm	r7, {r0, r1}
   12ed4:	ldr	r2, [r7, #40]	; 0x28
   12ed8:	ldr	r3, [r7, #44]	; 0x2c
   12edc:	orr	r8, r1, #1
   12ee0:	add	r1, r7, #8
   12ee4:	stm	sp, {r0, r8}
   12ee8:	str	r1, [sp, #20]
   12eec:	add	r0, sp, #8
   12ef0:	stm	r0, {r1, r2, r3}
   12ef4:	mov	r0, r4
   12ef8:	mov	r1, r6
   12efc:	ldr	r2, [sp, #32]
   12f00:	ldr	r3, [sp, #36]	; 0x24
   12f04:	bl	11c5c <putchar_unlocked@plt+0xc34>
   12f08:	cmp	r6, r0
   12f0c:	bhi	12f70 <putchar_unlocked@plt+0x1f48>
   12f10:	add	r6, r0, #1
   12f14:	str	r6, [sl, r5, lsl #3]
   12f18:	movw	r0, #24992	; 0x61a0
   12f1c:	movt	r0, #2
   12f20:	cmp	r4, r0
   12f24:	beq	12f30 <putchar_unlocked@plt+0x1f08>
   12f28:	mov	r0, r4
   12f2c:	bl	1199c <putchar_unlocked@plt+0x974>
   12f30:	mov	r0, r6
   12f34:	bl	13b6c <putchar_unlocked@plt+0x2b44>
   12f38:	mov	r4, r0
   12f3c:	str	r0, [r9]
   12f40:	ldr	r0, [r7]
   12f44:	ldr	r1, [r7, #40]	; 0x28
   12f48:	ldr	r2, [r7, #44]	; 0x2c
   12f4c:	stm	sp, {r0, r8}
   12f50:	ldr	r0, [sp, #20]
   12f54:	add	r3, sp, #8
   12f58:	stm	r3, {r0, r1, r2}
   12f5c:	mov	r0, r4
   12f60:	mov	r1, r6
   12f64:	ldr	r2, [sp, #32]
   12f68:	ldr	r3, [sp, #36]	; 0x24
   12f6c:	bl	11c5c <putchar_unlocked@plt+0xc34>
   12f70:	ldr	r0, [sp, #28]
   12f74:	ldr	r1, [sp, #24]
   12f78:	str	r1, [r0]
   12f7c:	mov	r0, r4
   12f80:	sub	sp, fp, #28
   12f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f88:	bl	11010 <abort@plt>
   12f8c:	movw	r3, #24944	; 0x6170
   12f90:	movt	r3, #2
   12f94:	b	12df8 <putchar_unlocked@plt+0x1dd0>
   12f98:	mov	r1, r0
   12f9c:	mov	r0, #0
   12fa0:	b	12de8 <putchar_unlocked@plt+0x1dc0>
   12fa4:	mov	r2, r1
   12fa8:	mov	r1, r0
   12fac:	mov	r0, #0
   12fb0:	b	12f8c <putchar_unlocked@plt+0x1f64>
   12fb4:	push	{r4, r5, r6, sl, fp, lr}
   12fb8:	add	fp, sp, #16
   12fbc:	sub	sp, sp, #48	; 0x30
   12fc0:	mov	r4, r2
   12fc4:	mov	r5, r0
   12fc8:	mov	r6, sp
   12fcc:	mov	r0, r6
   12fd0:	bl	12ff0 <putchar_unlocked@plt+0x1fc8>
   12fd4:	mov	r0, r5
   12fd8:	mov	r1, r4
   12fdc:	mvn	r2, #0
   12fe0:	mov	r3, r6
   12fe4:	bl	12df8 <putchar_unlocked@plt+0x1dd0>
   12fe8:	sub	sp, fp, #16
   12fec:	pop	{r4, r5, r6, sl, fp, pc}
   12ff0:	vmov.i32	q8, #0	; 0x00000000
   12ff4:	mov	r2, #32
   12ff8:	mov	r3, r0
   12ffc:	vst1.32	{d16-d17}, [r3], r2
   13000:	vst1.32	{d16-d17}, [r3]
   13004:	add	r2, r0, #16
   13008:	vst1.32	{d16-d17}, [r2]
   1300c:	cmp	r1, #10
   13010:	strne	r1, [r0]
   13014:	bxne	lr
   13018:	push	{fp, lr}
   1301c:	mov	fp, sp
   13020:	bl	11010 <abort@plt>
   13024:	push	{r4, r5, r6, r7, fp, lr}
   13028:	add	fp, sp, #16
   1302c:	sub	sp, sp, #48	; 0x30
   13030:	mov	r4, r3
   13034:	mov	r5, r2
   13038:	mov	r6, r0
   1303c:	mov	r7, sp
   13040:	mov	r0, r7
   13044:	bl	12ff0 <putchar_unlocked@plt+0x1fc8>
   13048:	mov	r0, r6
   1304c:	mov	r1, r5
   13050:	mov	r2, r4
   13054:	mov	r3, r7
   13058:	bl	12df8 <putchar_unlocked@plt+0x1dd0>
   1305c:	sub	sp, fp, #16
   13060:	pop	{r4, r5, r6, r7, fp, pc}
   13064:	mov	r2, r1
   13068:	mov	r1, r0
   1306c:	mov	r0, #0
   13070:	b	12fb4 <putchar_unlocked@plt+0x1f8c>
   13074:	mov	r3, r2
   13078:	mov	r2, r1
   1307c:	mov	r1, r0
   13080:	mov	r0, #0
   13084:	b	13024 <putchar_unlocked@plt+0x1ffc>
   13088:	push	{r4, r5, r6, sl, fp, lr}
   1308c:	add	fp, sp, #16
   13090:	sub	sp, sp, #48	; 0x30
   13094:	mov	r4, r1
   13098:	mov	r5, r0
   1309c:	mov	r0, #32
   130a0:	movw	r1, #24944	; 0x6170
   130a4:	movt	r1, #2
   130a8:	add	r3, r1, #16
   130ac:	vld1.64	{d16-d17}, [r1], r0
   130b0:	mov	r6, sp
   130b4:	vld1.64	{d18-d19}, [r3]
   130b8:	add	r3, r6, #16
   130bc:	vld1.64	{d20-d21}, [r1]
   130c0:	vst1.64	{d18-d19}, [r3]
   130c4:	mov	r1, r6
   130c8:	vst1.64	{d16-d17}, [r1], r0
   130cc:	vst1.64	{d20-d21}, [r1]
   130d0:	mov	r0, r6
   130d4:	mov	r1, r2
   130d8:	mov	r2, #1
   130dc:	bl	11b50 <putchar_unlocked@plt+0xb28>
   130e0:	mov	r0, #0
   130e4:	mov	r1, r5
   130e8:	mov	r2, r4
   130ec:	mov	r3, r6
   130f0:	bl	12df8 <putchar_unlocked@plt+0x1dd0>
   130f4:	sub	sp, fp, #16
   130f8:	pop	{r4, r5, r6, sl, fp, pc}
   130fc:	mov	r2, r1
   13100:	mvn	r1, #0
   13104:	b	13088 <putchar_unlocked@plt+0x2060>
   13108:	mov	r1, #58	; 0x3a
   1310c:	b	130fc <putchar_unlocked@plt+0x20d4>
   13110:	mov	r2, #58	; 0x3a
   13114:	b	13088 <putchar_unlocked@plt+0x2060>
   13118:	push	{r4, r5, r6, sl, fp, lr}
   1311c:	add	fp, sp, #16
   13120:	sub	sp, sp, #48	; 0x30
   13124:	mov	r4, r2
   13128:	mov	r5, r0
   1312c:	mov	r6, sp
   13130:	mov	r0, r6
   13134:	bl	12ff0 <putchar_unlocked@plt+0x1fc8>
   13138:	mov	r0, r6
   1313c:	mov	r1, #58	; 0x3a
   13140:	mov	r2, #1
   13144:	bl	11b50 <putchar_unlocked@plt+0xb28>
   13148:	mov	r0, r5
   1314c:	mov	r1, r4
   13150:	mvn	r2, #0
   13154:	mov	r3, r6
   13158:	bl	12df8 <putchar_unlocked@plt+0x1dd0>
   1315c:	sub	sp, fp, #16
   13160:	pop	{r4, r5, r6, sl, fp, pc}
   13164:	push	{fp, lr}
   13168:	mov	fp, sp
   1316c:	sub	sp, sp, #8
   13170:	mvn	ip, #0
   13174:	str	ip, [sp]
   13178:	bl	13184 <putchar_unlocked@plt+0x215c>
   1317c:	mov	sp, fp
   13180:	pop	{fp, pc}
   13184:	push	{r4, r5, r6, r7, fp, lr}
   13188:	add	fp, sp, #16
   1318c:	sub	sp, sp, #48	; 0x30
   13190:	mov	r7, r3
   13194:	mov	r5, r0
   13198:	mov	r0, #32
   1319c:	movw	r3, #24944	; 0x6170
   131a0:	movt	r3, #2
   131a4:	add	r4, r3, #16
   131a8:	vld1.64	{d16-d17}, [r3], r0
   131ac:	mov	r6, sp
   131b0:	vld1.64	{d18-d19}, [r4]
   131b4:	add	r4, r6, #16
   131b8:	vld1.64	{d20-d21}, [r3]
   131bc:	vst1.64	{d18-d19}, [r4]
   131c0:	mov	r3, r6
   131c4:	vst1.64	{d16-d17}, [r3], r0
   131c8:	vst1.64	{d20-d21}, [r3]
   131cc:	mov	r0, r6
   131d0:	bl	11ba8 <putchar_unlocked@plt+0xb80>
   131d4:	ldr	r2, [fp, #8]
   131d8:	mov	r0, r5
   131dc:	mov	r1, r7
   131e0:	mov	r3, r6
   131e4:	bl	12df8 <putchar_unlocked@plt+0x1dd0>
   131e8:	sub	sp, fp, #16
   131ec:	pop	{r4, r5, r6, r7, fp, pc}
   131f0:	mov	r3, r2
   131f4:	mov	r2, r1
   131f8:	mov	r1, r0
   131fc:	mov	r0, #0
   13200:	b	13164 <putchar_unlocked@plt+0x213c>
   13204:	push	{fp, lr}
   13208:	mov	fp, sp
   1320c:	sub	sp, sp, #8
   13210:	mov	ip, r2
   13214:	mov	r2, r1
   13218:	mov	r1, r0
   1321c:	str	r3, [sp]
   13220:	mov	r0, #0
   13224:	mov	r3, ip
   13228:	bl	13184 <putchar_unlocked@plt+0x215c>
   1322c:	mov	sp, fp
   13230:	pop	{fp, pc}
   13234:	movw	r3, #24832	; 0x6100
   13238:	movt	r3, #2
   1323c:	b	12df8 <putchar_unlocked@plt+0x1dd0>
   13240:	mov	r2, r1
   13244:	mov	r1, r0
   13248:	mov	r0, #0
   1324c:	b	13234 <putchar_unlocked@plt+0x220c>
   13250:	mvn	r2, #0
   13254:	b	13234 <putchar_unlocked@plt+0x220c>
   13258:	mov	r1, r0
   1325c:	mov	r0, #0
   13260:	b	13250 <putchar_unlocked@plt+0x2228>
   13264:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13268:	add	fp, sp, #24
   1326c:	sub	sp, sp, #16
   13270:	mov	r4, r1
   13274:	mov	r5, r0
   13278:	mov	r7, #0
   1327c:	mov	r0, #0
   13280:	mov	r1, r5
   13284:	mov	r2, #5
   13288:	bl	10e60 <dcgettext@plt>
   1328c:	cmp	r0, r5
   13290:	beq	1329c <putchar_unlocked@plt+0x2274>
   13294:	sub	sp, fp, #24
   13298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1329c:	bl	145d8 <putchar_unlocked@plt+0x35b0>
   132a0:	mov	r6, r0
   132a4:	mov	r8, #56	; 0x38
   132a8:	mov	r0, #45	; 0x2d
   132ac:	stm	sp, {r0, r8}
   132b0:	str	r7, [sp, #8]
   132b4:	str	r7, [sp, #12]
   132b8:	mov	r0, r6
   132bc:	mov	r1, #85	; 0x55
   132c0:	mov	r2, #84	; 0x54
   132c4:	mov	r3, #70	; 0x46
   132c8:	bl	13360 <putchar_unlocked@plt+0x2338>
   132cc:	cmp	r0, #0
   132d0:	beq	132ec <putchar_unlocked@plt+0x22c4>
   132d4:	ldrb	r1, [r5]
   132d8:	movw	r2, #20618	; 0x508a
   132dc:	movt	r2, #1
   132e0:	movw	r0, #20622	; 0x508e
   132e4:	movt	r0, #1
   132e8:	b	13330 <putchar_unlocked@plt+0x2308>
   132ec:	mov	r0, #48	; 0x30
   132f0:	mov	r1, #51	; 0x33
   132f4:	str	r8, [sp]
   132f8:	stmib	sp, {r0, r1}
   132fc:	str	r0, [sp, #12]
   13300:	mov	r0, r6
   13304:	mov	r1, #71	; 0x47
   13308:	mov	r2, #66	; 0x42
   1330c:	mov	r3, #49	; 0x31
   13310:	bl	13360 <putchar_unlocked@plt+0x2338>
   13314:	cmp	r0, #0
   13318:	beq	13340 <putchar_unlocked@plt+0x2318>
   1331c:	ldrb	r1, [r5]
   13320:	movw	r2, #20626	; 0x5092
   13324:	movt	r2, #1
   13328:	movw	r0, #20630	; 0x5096
   1332c:	movt	r0, #1
   13330:	cmp	r1, #96	; 0x60
   13334:	moveq	r0, r2
   13338:	sub	sp, fp, #24
   1333c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13340:	movw	r1, #20612	; 0x5084
   13344:	movt	r1, #1
   13348:	movw	r0, #20616	; 0x5088
   1334c:	movt	r0, #1
   13350:	cmp	r4, #9
   13354:	moveq	r0, r1
   13358:	sub	sp, fp, #24
   1335c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13360:	push	{r4, r5, r6, r7, fp, lr}
   13364:	add	fp, sp, #16
   13368:	sub	sp, sp, #16
   1336c:	mov	r4, r3
   13370:	mov	r5, r2
   13374:	mov	r7, r1
   13378:	mov	r6, r0
   1337c:	mov	r0, r1
   13380:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   13384:	ldrb	r1, [r6]
   13388:	cmp	r0, #0
   1338c:	andne	r1, r1, #223	; 0xdf
   13390:	mov	r0, #0
   13394:	cmp	r1, r7
   13398:	bne	133d8 <putchar_unlocked@plt+0x23b0>
   1339c:	cmp	r7, #0
   133a0:	moveq	r0, #1
   133a4:	subeq	sp, fp, #16
   133a8:	popeq	{r4, r5, r6, r7, fp, pc}
   133ac:	ldr	r0, [fp, #20]
   133b0:	ldr	r1, [fp, #16]
   133b4:	ldr	r2, [fp, #12]
   133b8:	ldr	r3, [fp, #8]
   133bc:	str	r2, [sp]
   133c0:	str	r1, [sp, #4]
   133c4:	str	r0, [sp, #8]
   133c8:	mov	r0, r6
   133cc:	mov	r1, r5
   133d0:	mov	r2, r4
   133d4:	bl	133e0 <putchar_unlocked@plt+0x23b8>
   133d8:	sub	sp, fp, #16
   133dc:	pop	{r4, r5, r6, r7, fp, pc}
   133e0:	push	{r4, r5, r6, r7, fp, lr}
   133e4:	add	fp, sp, #16
   133e8:	sub	sp, sp, #8
   133ec:	mov	r4, r3
   133f0:	mov	r5, r2
   133f4:	mov	r7, r1
   133f8:	mov	r6, r0
   133fc:	mov	r0, r1
   13400:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   13404:	ldrb	r1, [r6, #1]
   13408:	cmp	r0, #0
   1340c:	andne	r1, r1, #223	; 0xdf
   13410:	mov	r0, #0
   13414:	cmp	r1, r7
   13418:	bne	13450 <putchar_unlocked@plt+0x2428>
   1341c:	cmp	r7, #0
   13420:	moveq	r0, #1
   13424:	subeq	sp, fp, #16
   13428:	popeq	{r4, r5, r6, r7, fp, pc}
   1342c:	ldr	r0, [fp, #16]
   13430:	ldr	r1, [fp, #12]
   13434:	ldr	r3, [fp, #8]
   13438:	str	r1, [sp]
   1343c:	str	r0, [sp, #4]
   13440:	mov	r0, r6
   13444:	mov	r1, r5
   13448:	mov	r2, r4
   1344c:	bl	13458 <putchar_unlocked@plt+0x2430>
   13450:	sub	sp, fp, #16
   13454:	pop	{r4, r5, r6, r7, fp, pc}
   13458:	push	{r4, r5, r6, r7, fp, lr}
   1345c:	add	fp, sp, #16
   13460:	sub	sp, sp, #8
   13464:	mov	r4, r3
   13468:	mov	r5, r2
   1346c:	mov	r7, r1
   13470:	mov	r6, r0
   13474:	mov	r0, r1
   13478:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   1347c:	ldrb	r1, [r6, #2]
   13480:	cmp	r0, #0
   13484:	andne	r1, r1, #223	; 0xdf
   13488:	mov	r0, #0
   1348c:	cmp	r1, r7
   13490:	bne	134c0 <putchar_unlocked@plt+0x2498>
   13494:	cmp	r7, #0
   13498:	moveq	r0, #1
   1349c:	subeq	sp, fp, #16
   134a0:	popeq	{r4, r5, r6, r7, fp, pc}
   134a4:	ldr	r0, [fp, #12]
   134a8:	ldr	r3, [fp, #8]
   134ac:	str	r0, [sp]
   134b0:	mov	r0, r6
   134b4:	mov	r1, r5
   134b8:	mov	r2, r4
   134bc:	bl	134c8 <putchar_unlocked@plt+0x24a0>
   134c0:	sub	sp, fp, #16
   134c4:	pop	{r4, r5, r6, r7, fp, pc}
   134c8:	push	{r4, r5, r6, r7, fp, lr}
   134cc:	add	fp, sp, #16
   134d0:	mov	r4, r3
   134d4:	mov	r5, r2
   134d8:	mov	r7, r1
   134dc:	mov	r6, r0
   134e0:	mov	r0, r1
   134e4:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   134e8:	ldrb	r1, [r6, #3]
   134ec:	ldr	r3, [fp, #8]
   134f0:	cmp	r0, #0
   134f4:	andne	r1, r1, #223	; 0xdf
   134f8:	mov	r0, #0
   134fc:	cmp	r1, r7
   13500:	popne	{r4, r5, r6, r7, fp, pc}
   13504:	cmp	r7, #0
   13508:	beq	13520 <putchar_unlocked@plt+0x24f8>
   1350c:	mov	r0, r6
   13510:	mov	r1, r5
   13514:	mov	r2, r4
   13518:	pop	{r4, r5, r6, r7, fp, lr}
   1351c:	b	13528 <putchar_unlocked@plt+0x2500>
   13520:	mov	r0, #1
   13524:	pop	{r4, r5, r6, r7, fp, pc}
   13528:	push	{r4, r5, r6, r7, fp, lr}
   1352c:	add	fp, sp, #16
   13530:	mov	r4, r3
   13534:	mov	r5, r2
   13538:	mov	r7, r1
   1353c:	mov	r6, r0
   13540:	mov	r0, r1
   13544:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   13548:	ldrb	r1, [r6, #4]
   1354c:	cmp	r0, #0
   13550:	andne	r1, r1, #223	; 0xdf
   13554:	mov	r0, #0
   13558:	cmp	r1, r7
   1355c:	popne	{r4, r5, r6, r7, fp, pc}
   13560:	cmp	r7, #0
   13564:	beq	1357c <putchar_unlocked@plt+0x2554>
   13568:	mov	r0, r6
   1356c:	mov	r1, r5
   13570:	mov	r2, r4
   13574:	pop	{r4, r5, r6, r7, fp, lr}
   13578:	b	13584 <putchar_unlocked@plt+0x255c>
   1357c:	mov	r0, #1
   13580:	pop	{r4, r5, r6, r7, fp, pc}
   13584:	push	{r4, r5, r6, sl, fp, lr}
   13588:	add	fp, sp, #16
   1358c:	mov	r4, r2
   13590:	mov	r6, r1
   13594:	mov	r5, r0
   13598:	mov	r0, r1
   1359c:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   135a0:	ldrb	r1, [r5, #5]
   135a4:	cmp	r0, #0
   135a8:	andne	r1, r1, #223	; 0xdf
   135ac:	mov	r0, #0
   135b0:	cmp	r1, r6
   135b4:	popne	{r4, r5, r6, sl, fp, pc}
   135b8:	cmp	r6, #0
   135bc:	beq	135d0 <putchar_unlocked@plt+0x25a8>
   135c0:	mov	r0, r5
   135c4:	mov	r1, r4
   135c8:	pop	{r4, r5, r6, sl, fp, lr}
   135cc:	b	135d8 <putchar_unlocked@plt+0x25b0>
   135d0:	mov	r0, #1
   135d4:	pop	{r4, r5, r6, sl, fp, pc}
   135d8:	push	{r4, r5, fp, lr}
   135dc:	add	fp, sp, #8
   135e0:	mov	r5, r1
   135e4:	mov	r4, r0
   135e8:	mov	r0, r1
   135ec:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   135f0:	ldrb	r1, [r4, #6]
   135f4:	cmp	r0, #0
   135f8:	andne	r1, r1, #223	; 0xdf
   135fc:	mov	r0, #0
   13600:	cmp	r1, r5
   13604:	popne	{r4, r5, fp, pc}
   13608:	cmp	r5, #0
   1360c:	beq	1361c <putchar_unlocked@plt+0x25f4>
   13610:	mov	r0, r4
   13614:	pop	{r4, r5, fp, lr}
   13618:	b	13624 <putchar_unlocked@plt+0x25fc>
   1361c:	mov	r0, #1
   13620:	pop	{r4, r5, fp, pc}
   13624:	push	{r4, sl, fp, lr}
   13628:	add	fp, sp, #8
   1362c:	mov	r4, r0
   13630:	mov	r0, #0
   13634:	bl	142e4 <putchar_unlocked@plt+0x32bc>
   13638:	ldrb	r1, [r4, #7]
   1363c:	cmp	r0, #0
   13640:	beq	13658 <putchar_unlocked@plt+0x2630>
   13644:	tst	r1, #223	; 0xdf
   13648:	moveq	r0, #1
   1364c:	popeq	{r4, sl, fp, pc}
   13650:	mov	r0, #0
   13654:	pop	{r4, sl, fp, pc}
   13658:	cmp	r1, #0
   1365c:	moveq	r0, #1
   13660:	popeq	{r4, sl, fp, pc}
   13664:	mov	r0, #0
   13668:	pop	{r4, sl, fp, pc}
   1366c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13670:	add	fp, sp, #24
   13674:	sub	sp, sp, #32
   13678:	mov	r4, r2
   1367c:	mov	r8, r0
   13680:	ldr	r6, [fp, #12]
   13684:	ldr	r7, [fp, #8]
   13688:	cmp	r1, #0
   1368c:	beq	136b4 <putchar_unlocked@plt+0x268c>
   13690:	mov	r5, r1
   13694:	str	r4, [sp]
   13698:	str	r3, [sp, #4]
   1369c:	movw	r2, #20720	; 0x50f0
   136a0:	movt	r2, #1
   136a4:	mov	r0, r8
   136a8:	mov	r1, #1
   136ac:	mov	r3, r5
   136b0:	b	136cc <putchar_unlocked@plt+0x26a4>
   136b4:	str	r3, [sp]
   136b8:	movw	r2, #20732	; 0x50fc
   136bc:	movt	r2, #1
   136c0:	mov	r0, r8
   136c4:	mov	r1, #1
   136c8:	mov	r3, r4
   136cc:	bl	10fa4 <__fprintf_chk@plt>
   136d0:	movw	r1, #20739	; 0x5103
   136d4:	movt	r1, #1
   136d8:	mov	r0, #0
   136dc:	mov	r2, #5
   136e0:	bl	10e60 <dcgettext@plt>
   136e4:	mov	r3, r0
   136e8:	movw	r0, #2022	; 0x7e6
   136ec:	str	r0, [sp]
   136f0:	movw	r2, #21457	; 0x53d1
   136f4:	movt	r2, #1
   136f8:	mov	r0, r8
   136fc:	mov	r1, #1
   13700:	bl	10fa4 <__fprintf_chk@plt>
   13704:	movw	r4, #20199	; 0x4ee7
   13708:	movt	r4, #1
   1370c:	mov	r0, r4
   13710:	mov	r1, r8
   13714:	bl	10dd0 <fputs_unlocked@plt>
   13718:	movw	r1, #20743	; 0x5107
   1371c:	movt	r1, #1
   13720:	mov	r0, #0
   13724:	mov	r2, #5
   13728:	bl	10e60 <dcgettext@plt>
   1372c:	mov	r2, r0
   13730:	movw	r3, #20914	; 0x51b2
   13734:	movt	r3, #1
   13738:	mov	r0, r8
   1373c:	mov	r1, #1
   13740:	bl	10fa4 <__fprintf_chk@plt>
   13744:	mov	r0, r4
   13748:	mov	r1, r8
   1374c:	bl	10dd0 <fputs_unlocked@plt>
   13750:	cmp	r6, #9
   13754:	bhi	13790 <putchar_unlocked@plt+0x2768>
   13758:	add	r0, pc, #0
   1375c:	ldr	pc, [r0, r6, lsl #2]
   13760:	andeq	r3, r1, r8, lsl #15
   13764:	muleq	r1, ip, r7
   13768:	andeq	r3, r1, ip, asr #15
   1376c:	strdeq	r3, [r1], -r4
   13770:	andeq	r3, r1, ip, lsl r8
   13774:	andeq	r3, r1, r4, asr #16
   13778:	andeq	r3, r1, ip, ror #16
   1377c:	andeq	r3, r1, r4, lsr #17
   13780:	andeq	r3, r1, r4, asr #18
   13784:	andeq	r3, r1, ip, ror #17
   13788:	sub	sp, fp, #24
   1378c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13790:	movw	r1, #21267	; 0x5313
   13794:	movt	r1, #1
   13798:	b	138f4 <putchar_unlocked@plt+0x28cc>
   1379c:	movw	r1, #20948	; 0x51d4
   137a0:	movt	r1, #1
   137a4:	mov	r0, #0
   137a8:	mov	r2, #5
   137ac:	bl	10e60 <dcgettext@plt>
   137b0:	mov	r2, r0
   137b4:	ldr	r3, [r7]
   137b8:	mov	r0, r8
   137bc:	mov	r1, #1
   137c0:	sub	sp, fp, #24
   137c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137c8:	b	10fa4 <__fprintf_chk@plt>
   137cc:	movw	r1, #20964	; 0x51e4
   137d0:	movt	r1, #1
   137d4:	mov	r0, #0
   137d8:	mov	r2, #5
   137dc:	bl	10e60 <dcgettext@plt>
   137e0:	mov	r2, r0
   137e4:	ldr	r3, [r7]
   137e8:	ldr	r0, [r7, #4]
   137ec:	str	r0, [sp]
   137f0:	b	138e0 <putchar_unlocked@plt+0x28b8>
   137f4:	movw	r1, #20987	; 0x51fb
   137f8:	movt	r1, #1
   137fc:	mov	r0, #0
   13800:	mov	r2, #5
   13804:	bl	10e60 <dcgettext@plt>
   13808:	mov	r2, r0
   1380c:	ldr	r3, [r7]
   13810:	ldmib	r7, {r0, r1}
   13814:	stm	sp, {r0, r1}
   13818:	b	138e0 <putchar_unlocked@plt+0x28b8>
   1381c:	movw	r1, #21015	; 0x5217
   13820:	movt	r1, #1
   13824:	mov	r0, #0
   13828:	mov	r2, #5
   1382c:	bl	10e60 <dcgettext@plt>
   13830:	mov	r2, r0
   13834:	ldr	r3, [r7]
   13838:	ldmib	r7, {r0, r1, r7}
   1383c:	stm	sp, {r0, r1, r7}
   13840:	b	138e0 <putchar_unlocked@plt+0x28b8>
   13844:	movw	r1, #21047	; 0x5237
   13848:	movt	r1, #1
   1384c:	mov	r0, #0
   13850:	mov	r2, #5
   13854:	bl	10e60 <dcgettext@plt>
   13858:	mov	r2, r0
   1385c:	ldr	r3, [r7]
   13860:	ldmib	r7, {r0, r1, r6, r7}
   13864:	stm	sp, {r0, r1, r6, r7}
   13868:	b	138e0 <putchar_unlocked@plt+0x28b8>
   1386c:	movw	r1, #21083	; 0x525b
   13870:	movt	r1, #1
   13874:	mov	r0, #0
   13878:	mov	r2, #5
   1387c:	bl	10e60 <dcgettext@plt>
   13880:	mov	r2, r0
   13884:	ldr	r3, [r7]
   13888:	ldmib	r7, {r0, r1, r6}
   1388c:	ldr	r5, [r7, #16]
   13890:	ldr	r7, [r7, #20]
   13894:	stm	sp, {r0, r1, r6}
   13898:	str	r5, [sp, #12]
   1389c:	str	r7, [sp, #16]
   138a0:	b	138e0 <putchar_unlocked@plt+0x28b8>
   138a4:	movw	r1, #21123	; 0x5283
   138a8:	movt	r1, #1
   138ac:	mov	r0, #0
   138b0:	mov	r2, #5
   138b4:	bl	10e60 <dcgettext@plt>
   138b8:	mov	r2, r0
   138bc:	ldr	r3, [r7]
   138c0:	ldmib	r7, {r0, r1, r6}
   138c4:	ldr	r5, [r7, #16]
   138c8:	ldr	r4, [r7, #20]
   138cc:	ldr	r7, [r7, #24]
   138d0:	stm	sp, {r0, r1, r6}
   138d4:	str	r5, [sp, #12]
   138d8:	str	r4, [sp, #16]
   138dc:	str	r7, [sp, #20]
   138e0:	mov	r0, r8
   138e4:	mov	r1, #1
   138e8:	b	13994 <putchar_unlocked@plt+0x296c>
   138ec:	movw	r1, #21215	; 0x52df
   138f0:	movt	r1, #1
   138f4:	mov	r0, #0
   138f8:	mov	r2, #5
   138fc:	bl	10e60 <dcgettext@plt>
   13900:	mov	ip, r0
   13904:	ldr	r3, [r7]
   13908:	ldr	r0, [r7, #4]
   1390c:	ldr	r1, [r7, #8]
   13910:	ldr	r6, [r7, #12]
   13914:	ldr	r5, [r7, #16]
   13918:	ldr	r4, [r7, #20]
   1391c:	ldr	r2, [r7, #24]
   13920:	ldr	lr, [r7, #28]
   13924:	ldr	r7, [r7, #32]
   13928:	stm	sp, {r0, r1, r6}
   1392c:	str	r5, [sp, #12]
   13930:	str	r4, [sp, #16]
   13934:	str	r2, [sp, #20]
   13938:	str	lr, [sp, #24]
   1393c:	str	r7, [sp, #28]
   13940:	b	13988 <putchar_unlocked@plt+0x2960>
   13944:	movw	r1, #21167	; 0x52af
   13948:	movt	r1, #1
   1394c:	mov	r0, #0
   13950:	mov	r2, #5
   13954:	bl	10e60 <dcgettext@plt>
   13958:	mov	ip, r0
   1395c:	ldr	r3, [r7]
   13960:	ldmib	r7, {r0, r1, r6}
   13964:	ldr	r5, [r7, #16]
   13968:	ldr	r4, [r7, #20]
   1396c:	ldr	r2, [r7, #24]
   13970:	ldr	r7, [r7, #28]
   13974:	stm	sp, {r0, r1, r6}
   13978:	str	r5, [sp, #12]
   1397c:	str	r4, [sp, #16]
   13980:	str	r2, [sp, #20]
   13984:	str	r7, [sp, #24]
   13988:	mov	r0, r8
   1398c:	mov	r1, #1
   13990:	mov	r2, ip
   13994:	bl	10fa4 <__fprintf_chk@plt>
   13998:	sub	sp, fp, #24
   1399c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139a0:	push	{r4, sl, fp, lr}
   139a4:	add	fp, sp, #8
   139a8:	sub	sp, sp, #8
   139ac:	mov	lr, #0
   139b0:	ldr	ip, [fp, #8]
   139b4:	ldr	r4, [ip, lr, lsl #2]
   139b8:	add	lr, lr, #1
   139bc:	cmp	r4, #0
   139c0:	bne	139b4 <putchar_unlocked@plt+0x298c>
   139c4:	sub	r4, lr, #1
   139c8:	str	ip, [sp]
   139cc:	str	r4, [sp, #4]
   139d0:	bl	1366c <putchar_unlocked@plt+0x2644>
   139d4:	sub	sp, fp, #8
   139d8:	pop	{r4, sl, fp, pc}
   139dc:	push	{r4, r5, fp, lr}
   139e0:	add	fp, sp, #8
   139e4:	sub	sp, sp, #48	; 0x30
   139e8:	mov	ip, #0
   139ec:	ldr	r4, [fp, #8]
   139f0:	add	lr, sp, #8
   139f4:	ldr	r5, [r4]
   139f8:	str	r5, [lr, ip, lsl #2]
   139fc:	cmp	r5, #0
   13a00:	beq	13a14 <putchar_unlocked@plt+0x29ec>
   13a04:	add	ip, ip, #1
   13a08:	add	r4, r4, #4
   13a0c:	cmp	ip, #10
   13a10:	bcc	139f4 <putchar_unlocked@plt+0x29cc>
   13a14:	str	lr, [sp]
   13a18:	str	ip, [sp, #4]
   13a1c:	bl	1366c <putchar_unlocked@plt+0x2644>
   13a20:	sub	sp, fp, #8
   13a24:	pop	{r4, r5, fp, pc}
   13a28:	push	{fp, lr}
   13a2c:	mov	fp, sp
   13a30:	sub	sp, sp, #8
   13a34:	add	ip, fp, #8
   13a38:	str	ip, [sp, #4]
   13a3c:	str	ip, [sp]
   13a40:	bl	139dc <putchar_unlocked@plt+0x29b4>
   13a44:	mov	sp, fp
   13a48:	pop	{fp, pc}
   13a4c:	push	{fp, lr}
   13a50:	mov	fp, sp
   13a54:	movw	r0, #24900	; 0x6144
   13a58:	movt	r0, #2
   13a5c:	ldr	r1, [r0]
   13a60:	movw	r0, #20199	; 0x4ee7
   13a64:	movt	r0, #1
   13a68:	bl	10dd0 <fputs_unlocked@plt>
   13a6c:	movw	r1, #21327	; 0x534f
   13a70:	movt	r1, #1
   13a74:	mov	r0, #0
   13a78:	mov	r2, #5
   13a7c:	bl	10e60 <dcgettext@plt>
   13a80:	mov	r1, r0
   13a84:	movw	r2, #21347	; 0x5363
   13a88:	movt	r2, #1
   13a8c:	mov	r0, #1
   13a90:	bl	10f8c <__printf_chk@plt>
   13a94:	movw	r1, #21369	; 0x5379
   13a98:	movt	r1, #1
   13a9c:	mov	r0, #0
   13aa0:	mov	r2, #5
   13aa4:	bl	10e60 <dcgettext@plt>
   13aa8:	mov	r1, r0
   13aac:	movw	r2, #19757	; 0x4d2d
   13ab0:	movt	r2, #1
   13ab4:	movw	r3, #20008	; 0x4e28
   13ab8:	movt	r3, #1
   13abc:	mov	r0, #1
   13ac0:	bl	10f8c <__printf_chk@plt>
   13ac4:	movw	r1, #21389	; 0x538d
   13ac8:	movt	r1, #1
   13acc:	mov	r0, #0
   13ad0:	mov	r2, #5
   13ad4:	bl	10e60 <dcgettext@plt>
   13ad8:	mov	r1, r0
   13adc:	movw	r2, #21428	; 0x53b4
   13ae0:	movt	r2, #1
   13ae4:	mov	r0, #1
   13ae8:	pop	{fp, lr}
   13aec:	b	10f8c <__printf_chk@plt>
   13af0:	b	13af4 <putchar_unlocked@plt+0x2acc>
   13af4:	push	{r4, r5, r6, sl, fp, lr}
   13af8:	add	fp, sp, #16
   13afc:	mov	r4, r2
   13b00:	mov	r5, r1
   13b04:	mov	r6, r0
   13b08:	bl	14880 <putchar_unlocked@plt+0x3858>
   13b0c:	cmp	r0, #0
   13b10:	popne	{r4, r5, r6, sl, fp, pc}
   13b14:	cmp	r6, #0
   13b18:	beq	13b2c <putchar_unlocked@plt+0x2b04>
   13b1c:	cmp	r5, #0
   13b20:	cmpne	r4, #0
   13b24:	bne	13b2c <putchar_unlocked@plt+0x2b04>
   13b28:	pop	{r4, r5, r6, sl, fp, pc}
   13b2c:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13b30:	push	{fp, lr}
   13b34:	mov	fp, sp
   13b38:	bl	13fac <putchar_unlocked@plt+0x2f84>
   13b3c:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13b40:	pop	{fp, pc}
   13b44:	cmp	r0, #0
   13b48:	bxne	lr
   13b4c:	push	{fp, lr}
   13b50:	mov	fp, sp
   13b54:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13b58:	push	{fp, lr}
   13b5c:	mov	fp, sp
   13b60:	bl	145a4 <putchar_unlocked@plt+0x357c>
   13b64:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13b68:	pop	{fp, pc}
   13b6c:	b	13b30 <putchar_unlocked@plt+0x2b08>
   13b70:	push	{r4, r5, fp, lr}
   13b74:	add	fp, sp, #8
   13b78:	mov	r4, r1
   13b7c:	mov	r5, r0
   13b80:	bl	13fdc <putchar_unlocked@plt+0x2fb4>
   13b84:	cmp	r0, #0
   13b88:	popne	{r4, r5, fp, pc}
   13b8c:	cmp	r5, #0
   13b90:	beq	13ba0 <putchar_unlocked@plt+0x2b78>
   13b94:	cmp	r4, #0
   13b98:	bne	13ba0 <putchar_unlocked@plt+0x2b78>
   13b9c:	pop	{r4, r5, fp, pc}
   13ba0:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13ba4:	push	{fp, lr}
   13ba8:	mov	fp, sp
   13bac:	bl	145a8 <putchar_unlocked@plt+0x3580>
   13bb0:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13bb4:	pop	{fp, pc}
   13bb8:	push	{fp, lr}
   13bbc:	mov	fp, sp
   13bc0:	bl	145b8 <putchar_unlocked@plt+0x3590>
   13bc4:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13bc8:	pop	{fp, pc}
   13bcc:	push	{fp, lr}
   13bd0:	mov	fp, sp
   13bd4:	mov	r2, r1
   13bd8:	mov	r1, r0
   13bdc:	mov	r0, #0
   13be0:	bl	13af4 <putchar_unlocked@plt+0x2acc>
   13be4:	pop	{fp, pc}
   13be8:	mov	r2, r1
   13bec:	mov	r1, r0
   13bf0:	mov	r0, #0
   13bf4:	b	13bb8 <putchar_unlocked@plt+0x2b90>
   13bf8:	mov	r2, #1
   13bfc:	b	13c00 <putchar_unlocked@plt+0x2bd8>
   13c00:	push	{r4, r5, fp, lr}
   13c04:	add	fp, sp, #8
   13c08:	mov	r4, r1
   13c0c:	ldr	r5, [r1]
   13c10:	cmp	r0, #0
   13c14:	beq	13c2c <putchar_unlocked@plt+0x2c04>
   13c18:	mov	r1, #1
   13c1c:	add	r1, r1, r5, lsr #1
   13c20:	adds	r5, r5, r1
   13c24:	bcc	13c44 <putchar_unlocked@plt+0x2c1c>
   13c28:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13c2c:	cmp	r5, #0
   13c30:	bne	13c44 <putchar_unlocked@plt+0x2c1c>
   13c34:	mov	r1, #64	; 0x40
   13c38:	udiv	r5, r1, r2
   13c3c:	cmp	r2, #64	; 0x40
   13c40:	addhi	r5, r5, #1
   13c44:	mov	r1, r5
   13c48:	bl	13af4 <putchar_unlocked@plt+0x2acc>
   13c4c:	str	r5, [r4]
   13c50:	pop	{r4, r5, fp, pc}
   13c54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c58:	add	fp, sp, #24
   13c5c:	mov	r8, r1
   13c60:	ldr	r6, [r1]
   13c64:	add	r1, r6, r6, asr #1
   13c68:	cmp	r1, r6
   13c6c:	mvnvs	r1, #-2147483648	; 0x80000000
   13c70:	cmp	r1, r3
   13c74:	mov	r5, r1
   13c78:	movgt	r5, r3
   13c7c:	cmn	r3, #1
   13c80:	movle	r5, r1
   13c84:	ldr	r4, [fp, #8]
   13c88:	cmn	r4, #1
   13c8c:	ble	13cb4 <putchar_unlocked@plt+0x2c8c>
   13c90:	cmp	r4, #0
   13c94:	beq	13d08 <putchar_unlocked@plt+0x2ce0>
   13c98:	cmn	r5, #1
   13c9c:	ble	13cdc <putchar_unlocked@plt+0x2cb4>
   13ca0:	mvn	r7, #-2147483648	; 0x80000000
   13ca4:	udiv	r1, r7, r4
   13ca8:	cmp	r1, r5
   13cac:	bge	13d08 <putchar_unlocked@plt+0x2ce0>
   13cb0:	b	13d18 <putchar_unlocked@plt+0x2cf0>
   13cb4:	cmn	r5, #1
   13cb8:	ble	13cf8 <putchar_unlocked@plt+0x2cd0>
   13cbc:	cmn	r4, #1
   13cc0:	beq	13d08 <putchar_unlocked@plt+0x2ce0>
   13cc4:	mov	r1, #-2147483648	; 0x80000000
   13cc8:	sdiv	r1, r1, r4
   13ccc:	mvn	r7, #-2147483648	; 0x80000000
   13cd0:	cmp	r1, r5
   13cd4:	bge	13d08 <putchar_unlocked@plt+0x2ce0>
   13cd8:	b	13d18 <putchar_unlocked@plt+0x2cf0>
   13cdc:	beq	13d08 <putchar_unlocked@plt+0x2ce0>
   13ce0:	mov	r1, #-2147483648	; 0x80000000
   13ce4:	sdiv	r1, r1, r5
   13ce8:	mvn	r7, #-2147483648	; 0x80000000
   13cec:	cmp	r1, r4
   13cf0:	bge	13d08 <putchar_unlocked@plt+0x2ce0>
   13cf4:	b	13d18 <putchar_unlocked@plt+0x2cf0>
   13cf8:	mvn	r7, #-2147483648	; 0x80000000
   13cfc:	sdiv	r1, r7, r4
   13d00:	cmp	r5, r1
   13d04:	blt	13d18 <putchar_unlocked@plt+0x2cf0>
   13d08:	mul	r1, r5, r4
   13d0c:	mov	r7, #64	; 0x40
   13d10:	cmp	r1, #63	; 0x3f
   13d14:	bgt	13d20 <putchar_unlocked@plt+0x2cf8>
   13d18:	sdiv	r5, r7, r4
   13d1c:	mul	r1, r5, r4
   13d20:	cmp	r0, #0
   13d24:	moveq	r7, #0
   13d28:	streq	r7, [r8]
   13d2c:	sub	r7, r5, r6
   13d30:	cmp	r7, r2
   13d34:	bge	13de0 <putchar_unlocked@plt+0x2db8>
   13d38:	add	r5, r6, r2
   13d3c:	mov	r1, #0
   13d40:	cmp	r5, r3
   13d44:	mov	r2, #0
   13d48:	movwgt	r2, #1
   13d4c:	cmn	r3, #1
   13d50:	movwgt	r1, #1
   13d54:	cmp	r5, r6
   13d58:	bvs	13dc8 <putchar_unlocked@plt+0x2da0>
   13d5c:	ands	r1, r1, r2
   13d60:	bne	13dc8 <putchar_unlocked@plt+0x2da0>
   13d64:	cmn	r4, #1
   13d68:	ble	13d90 <putchar_unlocked@plt+0x2d68>
   13d6c:	cmp	r4, #0
   13d70:	beq	13ddc <putchar_unlocked@plt+0x2db4>
   13d74:	cmn	r5, #1
   13d78:	ble	13db4 <putchar_unlocked@plt+0x2d8c>
   13d7c:	mvn	r1, #-2147483648	; 0x80000000
   13d80:	udiv	r1, r1, r4
   13d84:	cmp	r1, r5
   13d88:	bge	13ddc <putchar_unlocked@plt+0x2db4>
   13d8c:	b	13dc8 <putchar_unlocked@plt+0x2da0>
   13d90:	cmn	r5, #1
   13d94:	ble	13dcc <putchar_unlocked@plt+0x2da4>
   13d98:	cmn	r4, #1
   13d9c:	beq	13ddc <putchar_unlocked@plt+0x2db4>
   13da0:	mov	r1, #-2147483648	; 0x80000000
   13da4:	sdiv	r1, r1, r4
   13da8:	cmp	r1, r5
   13dac:	bge	13ddc <putchar_unlocked@plt+0x2db4>
   13db0:	b	13dc8 <putchar_unlocked@plt+0x2da0>
   13db4:	beq	13ddc <putchar_unlocked@plt+0x2db4>
   13db8:	mov	r1, #-2147483648	; 0x80000000
   13dbc:	sdiv	r1, r1, r5
   13dc0:	cmp	r1, r4
   13dc4:	bge	13ddc <putchar_unlocked@plt+0x2db4>
   13dc8:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13dcc:	mvn	r1, #-2147483648	; 0x80000000
   13dd0:	sdiv	r1, r1, r4
   13dd4:	cmp	r5, r1
   13dd8:	blt	13dc8 <putchar_unlocked@plt+0x2da0>
   13ddc:	mul	r1, r5, r4
   13de0:	bl	13b70 <putchar_unlocked@plt+0x2b48>
   13de4:	str	r5, [r8]
   13de8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13dec:	mov	r1, #1
   13df0:	b	13df4 <putchar_unlocked@plt+0x2dcc>
   13df4:	push	{fp, lr}
   13df8:	mov	fp, sp
   13dfc:	bl	13f58 <putchar_unlocked@plt+0x2f30>
   13e00:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13e04:	pop	{fp, pc}
   13e08:	mov	r1, #1
   13e0c:	b	13e10 <putchar_unlocked@plt+0x2de8>
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	bl	145b4 <putchar_unlocked@plt+0x358c>
   13e1c:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13e20:	pop	{fp, pc}
   13e24:	push	{r4, r5, r6, sl, fp, lr}
   13e28:	add	fp, sp, #16
   13e2c:	mov	r4, r1
   13e30:	mov	r5, r0
   13e34:	mov	r0, r1
   13e38:	bl	13b30 <putchar_unlocked@plt+0x2b08>
   13e3c:	mov	r6, r0
   13e40:	mov	r1, r5
   13e44:	mov	r2, r4
   13e48:	bl	10e3c <memcpy@plt>
   13e4c:	mov	r0, r6
   13e50:	pop	{r4, r5, r6, sl, fp, pc}
   13e54:	push	{r4, r5, r6, sl, fp, lr}
   13e58:	add	fp, sp, #16
   13e5c:	mov	r4, r1
   13e60:	mov	r5, r0
   13e64:	mov	r0, r1
   13e68:	bl	13b58 <putchar_unlocked@plt+0x2b30>
   13e6c:	mov	r6, r0
   13e70:	mov	r1, r5
   13e74:	mov	r2, r4
   13e78:	bl	10e3c <memcpy@plt>
   13e7c:	mov	r0, r6
   13e80:	pop	{r4, r5, r6, sl, fp, pc}
   13e84:	push	{r4, r5, r6, sl, fp, lr}
   13e88:	add	fp, sp, #16
   13e8c:	mov	r4, r1
   13e90:	mov	r5, r0
   13e94:	add	r0, r1, #1
   13e98:	bl	13b58 <putchar_unlocked@plt+0x2b30>
   13e9c:	mov	r6, r0
   13ea0:	mov	r0, #0
   13ea4:	strb	r0, [r6, r4]
   13ea8:	mov	r0, r6
   13eac:	mov	r1, r5
   13eb0:	mov	r2, r4
   13eb4:	bl	10e3c <memcpy@plt>
   13eb8:	mov	r0, r6
   13ebc:	pop	{r4, r5, r6, sl, fp, pc}
   13ec0:	push	{r4, sl, fp, lr}
   13ec4:	add	fp, sp, #8
   13ec8:	mov	r4, r0
   13ecc:	bl	10f44 <strlen@plt>
   13ed0:	add	r1, r0, #1
   13ed4:	mov	r0, r4
   13ed8:	pop	{r4, sl, fp, lr}
   13edc:	b	13e24 <putchar_unlocked@plt+0x2dfc>
   13ee0:	push	{fp, lr}
   13ee4:	mov	fp, sp
   13ee8:	movw	r0, #24812	; 0x60ec
   13eec:	movt	r0, #2
   13ef0:	ldr	r4, [r0]
   13ef4:	movw	r1, #21504	; 0x5400
   13ef8:	movt	r1, #1
   13efc:	mov	r0, #0
   13f00:	mov	r2, #5
   13f04:	bl	10e60 <dcgettext@plt>
   13f08:	mov	r3, r0
   13f0c:	movw	r2, #20463	; 0x4fef
   13f10:	movt	r2, #1
   13f14:	mov	r0, r4
   13f18:	mov	r1, #0
   13f1c:	bl	10ee4 <error@plt>
   13f20:	bl	11010 <abort@plt>
   13f24:	push	{r4, sl, fp, lr}
   13f28:	add	fp, sp, #8
   13f2c:	bl	14670 <putchar_unlocked@plt+0x3648>
   13f30:	mov	r4, r0
   13f34:	cmn	r0, #1
   13f38:	bne	13f4c <putchar_unlocked@plt+0x2f24>
   13f3c:	bl	10f50 <__errno_location@plt>
   13f40:	ldr	r0, [r0]
   13f44:	cmp	r0, #12
   13f48:	beq	13f54 <putchar_unlocked@plt+0x2f2c>
   13f4c:	mov	r0, r4
   13f50:	pop	{r4, sl, fp, pc}
   13f54:	bl	13ee0 <putchar_unlocked@plt+0x2eb8>
   13f58:	clz	r2, r1
   13f5c:	lsr	r2, r2, #5
   13f60:	clz	r3, r0
   13f64:	lsr	r3, r3, #5
   13f68:	orrs	r2, r3, r2
   13f6c:	movwne	r1, #1
   13f70:	movwne	r0, #1
   13f74:	cmp	r1, #0
   13f78:	beq	13fa8 <putchar_unlocked@plt+0x2f80>
   13f7c:	mvn	r2, #-2147483648	; 0x80000000
   13f80:	udiv	r2, r2, r1
   13f84:	cmp	r2, r0
   13f88:	bcs	13fa8 <putchar_unlocked@plt+0x2f80>
   13f8c:	push	{fp, lr}
   13f90:	mov	fp, sp
   13f94:	bl	10f50 <__errno_location@plt>
   13f98:	mov	r1, #12
   13f9c:	str	r1, [r0]
   13fa0:	mov	r0, #0
   13fa4:	pop	{fp, pc}
   13fa8:	b	10dc4 <calloc@plt>
   13fac:	cmp	r0, #0
   13fb0:	movweq	r0, #1
   13fb4:	cmn	r0, #1
   13fb8:	ble	13fc0 <putchar_unlocked@plt+0x2f98>
   13fbc:	b	10ef0 <malloc@plt>
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	bl	10f50 <__errno_location@plt>
   13fcc:	mov	r1, #12
   13fd0:	str	r1, [r0]
   13fd4:	mov	r0, #0
   13fd8:	pop	{fp, pc}
   13fdc:	push	{fp, lr}
   13fe0:	mov	fp, sp
   13fe4:	cmp	r0, #0
   13fe8:	beq	14004 <putchar_unlocked@plt+0x2fdc>
   13fec:	cmp	r1, #0
   13ff0:	beq	14010 <putchar_unlocked@plt+0x2fe8>
   13ff4:	cmn	r1, #1
   13ff8:	ble	1401c <putchar_unlocked@plt+0x2ff4>
   13ffc:	pop	{fp, lr}
   14000:	b	10e6c <realloc@plt>
   14004:	mov	r0, r1
   14008:	pop	{fp, lr}
   1400c:	b	13fac <putchar_unlocked@plt+0x2f84>
   14010:	bl	1199c <putchar_unlocked@plt+0x974>
   14014:	mov	r0, #0
   14018:	pop	{fp, pc}
   1401c:	bl	10f50 <__errno_location@plt>
   14020:	mov	r1, #12
   14024:	str	r1, [r0]
   14028:	mov	r0, #0
   1402c:	pop	{fp, pc}
   14030:	mov	r1, r0
   14034:	sub	r2, r0, #65	; 0x41
   14038:	mov	r0, #1
   1403c:	cmp	r2, #26
   14040:	subcs	r2, r1, #97	; 0x61
   14044:	cmpcs	r2, #26
   14048:	bcs	14050 <putchar_unlocked@plt+0x3028>
   1404c:	bx	lr
   14050:	sub	r1, r1, #48	; 0x30
   14054:	cmp	r1, #10
   14058:	movcs	r0, #0
   1405c:	bx	lr
   14060:	mov	r1, r0
   14064:	sub	r2, r0, #65	; 0x41
   14068:	mov	r0, #1
   1406c:	cmp	r2, #26
   14070:	subcs	r1, r1, #97	; 0x61
   14074:	cmpcs	r1, #26
   14078:	movcs	r0, #0
   1407c:	bx	lr
   14080:	mov	r1, #0
   14084:	cmp	r0, #128	; 0x80
   14088:	movwcc	r1, #1
   1408c:	mov	r0, r1
   14090:	bx	lr
   14094:	sub	r1, r0, #9
   14098:	clz	r1, r1
   1409c:	lsr	r1, r1, #5
   140a0:	sub	r0, r0, #32
   140a4:	clz	r0, r0
   140a8:	lsr	r0, r0, #5
   140ac:	orr	r0, r0, r1
   140b0:	bx	lr
   140b4:	mov	r1, r0
   140b8:	mov	r0, #1
   140bc:	cmp	r1, #32
   140c0:	bxcc	lr
   140c4:	cmp	r1, #127	; 0x7f
   140c8:	movne	r0, #0
   140cc:	bx	lr
   140d0:	sub	r1, r0, #48	; 0x30
   140d4:	mov	r0, #0
   140d8:	cmp	r1, #10
   140dc:	movwcc	r0, #1
   140e0:	bx	lr
   140e4:	sub	r1, r0, #33	; 0x21
   140e8:	mov	r0, #0
   140ec:	cmp	r1, #94	; 0x5e
   140f0:	movwcc	r0, #1
   140f4:	bx	lr
   140f8:	sub	r1, r0, #97	; 0x61
   140fc:	mov	r0, #0
   14100:	cmp	r1, #26
   14104:	movwcc	r0, #1
   14108:	bx	lr
   1410c:	sub	r1, r0, #32
   14110:	mov	r0, #0
   14114:	cmp	r1, #95	; 0x5f
   14118:	movwcc	r0, #1
   1411c:	bx	lr
   14120:	sub	r1, r0, #33	; 0x21
   14124:	cmp	r1, #93	; 0x5d
   14128:	bhi	142b4 <putchar_unlocked@plt+0x328c>
   1412c:	mov	r0, #1
   14130:	add	r2, pc, #0
   14134:	ldr	pc, [r2, r1, lsl #2]
   14138:			; <UNDEFINED> instruction: 0x000142b0
   1413c:			; <UNDEFINED> instruction: 0x000142b0
   14140:			; <UNDEFINED> instruction: 0x000142b0
   14144:			; <UNDEFINED> instruction: 0x000142b0
   14148:			; <UNDEFINED> instruction: 0x000142b0
   1414c:			; <UNDEFINED> instruction: 0x000142b0
   14150:			; <UNDEFINED> instruction: 0x000142b0
   14154:			; <UNDEFINED> instruction: 0x000142b0
   14158:			; <UNDEFINED> instruction: 0x000142b0
   1415c:			; <UNDEFINED> instruction: 0x000142b0
   14160:			; <UNDEFINED> instruction: 0x000142b0
   14164:			; <UNDEFINED> instruction: 0x000142b0
   14168:			; <UNDEFINED> instruction: 0x000142b0
   1416c:			; <UNDEFINED> instruction: 0x000142b0
   14170:			; <UNDEFINED> instruction: 0x000142b0
   14174:			; <UNDEFINED> instruction: 0x000142b4
   14178:			; <UNDEFINED> instruction: 0x000142b4
   1417c:			; <UNDEFINED> instruction: 0x000142b4
   14180:			; <UNDEFINED> instruction: 0x000142b4
   14184:			; <UNDEFINED> instruction: 0x000142b4
   14188:			; <UNDEFINED> instruction: 0x000142b4
   1418c:			; <UNDEFINED> instruction: 0x000142b4
   14190:			; <UNDEFINED> instruction: 0x000142b4
   14194:			; <UNDEFINED> instruction: 0x000142b4
   14198:			; <UNDEFINED> instruction: 0x000142b4
   1419c:			; <UNDEFINED> instruction: 0x000142b0
   141a0:			; <UNDEFINED> instruction: 0x000142b0
   141a4:			; <UNDEFINED> instruction: 0x000142b0
   141a8:			; <UNDEFINED> instruction: 0x000142b0
   141ac:			; <UNDEFINED> instruction: 0x000142b0
   141b0:			; <UNDEFINED> instruction: 0x000142b0
   141b4:			; <UNDEFINED> instruction: 0x000142b0
   141b8:			; <UNDEFINED> instruction: 0x000142b4
   141bc:			; <UNDEFINED> instruction: 0x000142b4
   141c0:			; <UNDEFINED> instruction: 0x000142b4
   141c4:			; <UNDEFINED> instruction: 0x000142b4
   141c8:			; <UNDEFINED> instruction: 0x000142b4
   141cc:			; <UNDEFINED> instruction: 0x000142b4
   141d0:			; <UNDEFINED> instruction: 0x000142b4
   141d4:			; <UNDEFINED> instruction: 0x000142b4
   141d8:			; <UNDEFINED> instruction: 0x000142b4
   141dc:			; <UNDEFINED> instruction: 0x000142b4
   141e0:			; <UNDEFINED> instruction: 0x000142b4
   141e4:			; <UNDEFINED> instruction: 0x000142b4
   141e8:			; <UNDEFINED> instruction: 0x000142b4
   141ec:			; <UNDEFINED> instruction: 0x000142b4
   141f0:			; <UNDEFINED> instruction: 0x000142b4
   141f4:			; <UNDEFINED> instruction: 0x000142b4
   141f8:			; <UNDEFINED> instruction: 0x000142b4
   141fc:			; <UNDEFINED> instruction: 0x000142b4
   14200:			; <UNDEFINED> instruction: 0x000142b4
   14204:			; <UNDEFINED> instruction: 0x000142b4
   14208:			; <UNDEFINED> instruction: 0x000142b4
   1420c:			; <UNDEFINED> instruction: 0x000142b4
   14210:			; <UNDEFINED> instruction: 0x000142b4
   14214:			; <UNDEFINED> instruction: 0x000142b4
   14218:			; <UNDEFINED> instruction: 0x000142b4
   1421c:			; <UNDEFINED> instruction: 0x000142b4
   14220:			; <UNDEFINED> instruction: 0x000142b0
   14224:			; <UNDEFINED> instruction: 0x000142b0
   14228:			; <UNDEFINED> instruction: 0x000142b0
   1422c:			; <UNDEFINED> instruction: 0x000142b0
   14230:			; <UNDEFINED> instruction: 0x000142b0
   14234:			; <UNDEFINED> instruction: 0x000142b0
   14238:			; <UNDEFINED> instruction: 0x000142b4
   1423c:			; <UNDEFINED> instruction: 0x000142b4
   14240:			; <UNDEFINED> instruction: 0x000142b4
   14244:			; <UNDEFINED> instruction: 0x000142b4
   14248:			; <UNDEFINED> instruction: 0x000142b4
   1424c:			; <UNDEFINED> instruction: 0x000142b4
   14250:			; <UNDEFINED> instruction: 0x000142b4
   14254:			; <UNDEFINED> instruction: 0x000142b4
   14258:			; <UNDEFINED> instruction: 0x000142b4
   1425c:			; <UNDEFINED> instruction: 0x000142b4
   14260:			; <UNDEFINED> instruction: 0x000142b4
   14264:			; <UNDEFINED> instruction: 0x000142b4
   14268:			; <UNDEFINED> instruction: 0x000142b4
   1426c:			; <UNDEFINED> instruction: 0x000142b4
   14270:			; <UNDEFINED> instruction: 0x000142b4
   14274:			; <UNDEFINED> instruction: 0x000142b4
   14278:			; <UNDEFINED> instruction: 0x000142b4
   1427c:			; <UNDEFINED> instruction: 0x000142b4
   14280:			; <UNDEFINED> instruction: 0x000142b4
   14284:			; <UNDEFINED> instruction: 0x000142b4
   14288:			; <UNDEFINED> instruction: 0x000142b4
   1428c:			; <UNDEFINED> instruction: 0x000142b4
   14290:			; <UNDEFINED> instruction: 0x000142b4
   14294:			; <UNDEFINED> instruction: 0x000142b4
   14298:			; <UNDEFINED> instruction: 0x000142b4
   1429c:			; <UNDEFINED> instruction: 0x000142b4
   142a0:			; <UNDEFINED> instruction: 0x000142b0
   142a4:			; <UNDEFINED> instruction: 0x000142b0
   142a8:			; <UNDEFINED> instruction: 0x000142b0
   142ac:			; <UNDEFINED> instruction: 0x000142b0
   142b0:	bx	lr
   142b4:	mov	r0, #0
   142b8:	bx	lr
   142bc:	sub	r0, r0, #9
   142c0:	cmp	r0, #23
   142c4:	movhi	r0, #0
   142c8:	bxhi	lr
   142cc:	bic	r0, r0, #-16777216	; 0xff000000
   142d0:	movw	r1, #31
   142d4:	movt	r1, #128	; 0x80
   142d8:	mov	r2, #1
   142dc:	and	r0, r2, r1, lsr r0
   142e0:	bx	lr
   142e4:	sub	r1, r0, #65	; 0x41
   142e8:	mov	r0, #0
   142ec:	cmp	r1, #26
   142f0:	movwcc	r0, #1
   142f4:	bx	lr
   142f8:	mov	r1, r0
   142fc:	sub	r2, r0, #48	; 0x30
   14300:	mov	r0, #1
   14304:	cmp	r2, #22
   14308:	bhi	14320 <putchar_unlocked@plt+0x32f8>
   1430c:	mov	ip, #1
   14310:	movw	r3, #1023	; 0x3ff
   14314:	movt	r3, #126	; 0x7e
   14318:	tst	r3, ip, lsl r2
   1431c:	bxne	lr
   14320:	sub	r1, r1, #97	; 0x61
   14324:	cmp	r1, #6
   14328:	movcs	r0, #0
   1432c:	bxcs	lr
   14330:	bx	lr
   14334:	sub	r1, r0, #65	; 0x41
   14338:	cmp	r1, #26
   1433c:	addcc	r0, r0, #32
   14340:	bx	lr
   14344:	sub	r1, r0, #97	; 0x61
   14348:	cmp	r1, #26
   1434c:	subcc	r0, r0, #32
   14350:	bx	lr
   14354:	push	{r4, r5, r6, sl, fp, lr}
   14358:	add	fp, sp, #16
   1435c:	mov	r4, r0
   14360:	bl	10ec0 <__fpending@plt>
   14364:	mov	r5, r0
   14368:	mov	r0, r4
   1436c:	bl	10ecc <ferror_unlocked@plt>
   14370:	mov	r6, r0
   14374:	mov	r0, r4
   14378:	bl	143dc <putchar_unlocked@plt+0x33b4>
   1437c:	cmp	r6, #0
   14380:	beq	143a0 <putchar_unlocked@plt+0x3378>
   14384:	mvn	r4, #0
   14388:	cmp	r0, #0
   1438c:	bne	143d4 <putchar_unlocked@plt+0x33ac>
   14390:	bl	10f50 <__errno_location@plt>
   14394:	mov	r1, #0
   14398:	str	r1, [r0]
   1439c:	b	143d4 <putchar_unlocked@plt+0x33ac>
   143a0:	cmp	r0, #0
   143a4:	mov	r4, r0
   143a8:	mvnne	r4, #0
   143ac:	cmp	r5, #0
   143b0:	bne	143d4 <putchar_unlocked@plt+0x33ac>
   143b4:	cmp	r0, #0
   143b8:	beq	143d4 <putchar_unlocked@plt+0x33ac>
   143bc:	bl	10f50 <__errno_location@plt>
   143c0:	ldr	r0, [r0]
   143c4:	subs	r4, r0, #9
   143c8:	mvnne	r4, #0
   143cc:	mov	r0, r4
   143d0:	pop	{r4, r5, r6, sl, fp, pc}
   143d4:	mov	r0, r4
   143d8:	pop	{r4, r5, r6, sl, fp, pc}
   143dc:	push	{r4, r5, fp, lr}
   143e0:	add	fp, sp, #8
   143e4:	sub	sp, sp, #8
   143e8:	mov	r4, r0
   143ec:	bl	10f98 <fileno@plt>
   143f0:	cmn	r0, #1
   143f4:	ble	1446c <putchar_unlocked@plt+0x3444>
   143f8:	mov	r0, r4
   143fc:	bl	10f08 <__freading@plt>
   14400:	cmp	r0, #0
   14404:	beq	14430 <putchar_unlocked@plt+0x3408>
   14408:	mov	r0, r4
   1440c:	bl	10f98 <fileno@plt>
   14410:	mov	r1, #1
   14414:	str	r1, [sp]
   14418:	mov	r2, #0
   1441c:	mov	r3, #0
   14420:	bl	10ea8 <lseek64@plt>
   14424:	and	r0, r0, r1
   14428:	cmn	r0, #1
   1442c:	beq	1446c <putchar_unlocked@plt+0x3444>
   14430:	mov	r0, r4
   14434:	bl	1447c <putchar_unlocked@plt+0x3454>
   14438:	cmp	r0, #0
   1443c:	beq	1446c <putchar_unlocked@plt+0x3444>
   14440:	bl	10f50 <__errno_location@plt>
   14444:	ldr	r5, [r0]
   14448:	mov	r0, r4
   1444c:	bl	10fb0 <fclose@plt>
   14450:	cmp	r5, #0
   14454:	beq	14464 <putchar_unlocked@plt+0x343c>
   14458:	bl	10f50 <__errno_location@plt>
   1445c:	str	r5, [r0]
   14460:	mvn	r0, #0
   14464:	sub	sp, fp, #8
   14468:	pop	{r4, r5, fp, pc}
   1446c:	mov	r0, r4
   14470:	sub	sp, fp, #8
   14474:	pop	{r4, r5, fp, lr}
   14478:	b	10fb0 <fclose@plt>
   1447c:	push	{r4, sl, fp, lr}
   14480:	add	fp, sp, #8
   14484:	mov	r4, r0
   14488:	cmp	r0, #0
   1448c:	beq	144a4 <putchar_unlocked@plt+0x347c>
   14490:	mov	r0, r4
   14494:	bl	10f08 <__freading@plt>
   14498:	cmp	r0, #0
   1449c:	movne	r0, r4
   144a0:	blne	144b0 <putchar_unlocked@plt+0x3488>
   144a4:	mov	r0, r4
   144a8:	pop	{r4, sl, fp, lr}
   144ac:	b	10e0c <fflush@plt>
   144b0:	ldrb	r1, [r0, #1]
   144b4:	tst	r1, #1
   144b8:	bxeq	lr
   144bc:	push	{fp, lr}
   144c0:	mov	fp, sp
   144c4:	sub	sp, sp, #8
   144c8:	mov	r1, #1
   144cc:	str	r1, [sp]
   144d0:	mov	r2, #0
   144d4:	mov	r3, #0
   144d8:	bl	144e4 <putchar_unlocked@plt+0x34bc>
   144dc:	mov	sp, fp
   144e0:	pop	{fp, pc}
   144e4:	push	{r4, r5, r6, r7, fp, lr}
   144e8:	add	fp, sp, #16
   144ec:	sub	sp, sp, #8
   144f0:	mov	r5, r3
   144f4:	mov	r6, r2
   144f8:	mov	r4, r0
   144fc:	ldr	r0, [r0, #4]
   14500:	ldr	r1, [r4, #8]
   14504:	cmp	r1, r0
   14508:	bne	14524 <putchar_unlocked@plt+0x34fc>
   1450c:	ldrd	r0, [r4, #16]
   14510:	cmp	r1, r0
   14514:	bne	14524 <putchar_unlocked@plt+0x34fc>
   14518:	ldr	r0, [r4, #36]	; 0x24
   1451c:	cmp	r0, #0
   14520:	beq	1453c <putchar_unlocked@plt+0x3514>
   14524:	mov	r0, r4
   14528:	mov	r2, r6
   1452c:	mov	r3, r5
   14530:	sub	sp, fp, #16
   14534:	pop	{r4, r5, r6, r7, fp, lr}
   14538:	b	10fbc <fseeko64@plt>
   1453c:	ldr	r7, [fp, #8]
   14540:	mov	r0, r4
   14544:	bl	10f98 <fileno@plt>
   14548:	str	r7, [sp]
   1454c:	mov	r2, r6
   14550:	mov	r3, r5
   14554:	bl	10ea8 <lseek64@plt>
   14558:	and	r2, r0, r1
   1455c:	cmn	r2, #1
   14560:	mvneq	r0, #0
   14564:	subeq	sp, fp, #16
   14568:	popeq	{r4, r5, r6, r7, fp, pc}
   1456c:	strd	r0, [r4, #80]	; 0x50
   14570:	ldr	r0, [r4]
   14574:	bic	r0, r0, #16
   14578:	str	r0, [r4]
   1457c:	mov	r0, #0
   14580:	sub	sp, fp, #16
   14584:	pop	{r4, r5, r6, r7, fp, pc}
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	bl	10f50 <__errno_location@plt>
   14594:	mov	r1, #12
   14598:	str	r1, [r0]
   1459c:	mov	r0, #0
   145a0:	pop	{fp, pc}
   145a4:	b	13fac <putchar_unlocked@plt+0x2f84>
   145a8:	cmp	r1, #0
   145ac:	orreq	r1, r1, #1
   145b0:	b	13fdc <putchar_unlocked@plt+0x2fb4>
   145b4:	b	13f58 <putchar_unlocked@plt+0x2f30>
   145b8:	clz	r3, r2
   145bc:	lsr	ip, r3, #5
   145c0:	clz	r3, r1
   145c4:	lsr	r3, r3, #5
   145c8:	orrs	r3, r3, ip
   145cc:	movwne	r1, #1
   145d0:	movwne	r2, #1
   145d4:	b	14880 <putchar_unlocked@plt+0x3858>
   145d8:	push	{fp, lr}
   145dc:	mov	fp, sp
   145e0:	mov	r0, #14
   145e4:	bl	10fe0 <nl_langinfo@plt>
   145e8:	movw	r1, #20200	; 0x4ee8
   145ec:	movt	r1, #1
   145f0:	cmp	r0, #0
   145f4:	movne	r1, r0
   145f8:	ldrb	r2, [r1]
   145fc:	movw	r0, #21521	; 0x5411
   14600:	movt	r0, #1
   14604:	cmp	r2, #0
   14608:	movne	r0, r1
   1460c:	pop	{fp, pc}
   14610:	push	{r4, r5, r6, r7, fp, lr}
   14614:	add	fp, sp, #16
   14618:	sub	sp, sp, #8
   1461c:	mov	r7, r2
   14620:	mov	r4, r1
   14624:	add	r5, sp, #4
   14628:	cmp	r0, #0
   1462c:	movne	r5, r0
   14630:	mov	r0, r5
   14634:	bl	10ed8 <mbrtowc@plt>
   14638:	mov	r6, r0
   1463c:	cmp	r7, #0
   14640:	beq	14664 <putchar_unlocked@plt+0x363c>
   14644:	cmn	r6, #2
   14648:	bcc	14664 <putchar_unlocked@plt+0x363c>
   1464c:	mov	r0, #0
   14650:	bl	148bc <putchar_unlocked@plt+0x3894>
   14654:	cmp	r0, #0
   14658:	ldrbeq	r0, [r4]
   1465c:	streq	r0, [r5]
   14660:	moveq	r6, #1
   14664:	mov	r0, r6
   14668:	sub	sp, fp, #16
   1466c:	pop	{r4, r5, r6, r7, fp, pc}
   14670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14674:	add	fp, sp, #28
   14678:	sub	sp, sp, #12
   1467c:	mov	r4, r2
   14680:	mov	sl, r1
   14684:	cmp	r0, #0
   14688:	beq	14720 <putchar_unlocked@plt+0x36f8>
   1468c:	mov	r7, r0
   14690:	mov	r0, #10
   14694:	str	r0, [sp, #8]
   14698:	mov	r0, #0
   1469c:	mov	r1, #10
   146a0:	bl	14850 <putchar_unlocked@plt+0x3828>
   146a4:	mvn	r9, #0
   146a8:	cmp	r0, #0
   146ac:	beq	14844 <putchar_unlocked@plt+0x381c>
   146b0:	mov	r5, r0
   146b4:	str	r4, [sp, #4]
   146b8:	add	r4, sp, #8
   146bc:	ldr	r8, [sp, #8]
   146c0:	mov	r0, r7
   146c4:	mov	r1, sl
   146c8:	mov	r2, r5
   146cc:	mov	r3, r4
   146d0:	bl	10f74 <getgrouplist@plt>
   146d4:	mov	r6, r0
   146d8:	cmn	r0, #1
   146dc:	bgt	146f0 <putchar_unlocked@plt+0x36c8>
   146e0:	ldr	r0, [sp, #8]
   146e4:	cmp	r8, r0
   146e8:	lsleq	r0, r0, #1
   146ec:	streq	r0, [sp, #8]
   146f0:	ldr	r1, [sp, #8]
   146f4:	mov	r0, r5
   146f8:	bl	14850 <putchar_unlocked@plt+0x3828>
   146fc:	cmp	r0, #0
   14700:	beq	147e8 <putchar_unlocked@plt+0x37c0>
   14704:	cmp	r6, #0
   14708:	mov	r5, r0
   1470c:	blt	146bc <putchar_unlocked@plt+0x3694>
   14710:	ldr	r1, [sp, #4]
   14714:	str	r0, [r1]
   14718:	ldr	r9, [sp, #8]
   1471c:	b	14844 <putchar_unlocked@plt+0x381c>
   14720:	mov	r0, #0
   14724:	mov	r1, #0
   14728:	bl	10fec <getgroups@plt>
   1472c:	str	r0, [sp, #8]
   14730:	cmn	r0, #1
   14734:	ble	147f4 <putchar_unlocked@plt+0x37cc>
   14738:	cmn	sl, #1
   1473c:	bne	14748 <putchar_unlocked@plt+0x3720>
   14740:	cmp	r0, #0
   14744:	bne	14750 <putchar_unlocked@plt+0x3728>
   14748:	add	r0, r0, #1
   1474c:	str	r0, [sp, #8]
   14750:	ldr	r1, [sp, #8]
   14754:	mov	r0, #0
   14758:	bl	14850 <putchar_unlocked@plt+0x3828>
   1475c:	mvn	r9, #0
   14760:	cmp	r0, #0
   14764:	beq	14844 <putchar_unlocked@plt+0x381c>
   14768:	mov	r7, r0
   1476c:	add	r1, sl, #1
   14770:	cmn	sl, #1
   14774:	movwne	r1, #1
   14778:	ldr	r0, [sp, #8]
   1477c:	sub	r0, r0, r1
   14780:	add	r1, r7, r1, lsl #2
   14784:	bl	10fec <getgroups@plt>
   14788:	cmn	r0, #1
   1478c:	ble	14834 <putchar_unlocked@plt+0x380c>
   14790:	cmn	sl, #1
   14794:	strne	sl, [r7]
   14798:	addne	r0, r0, #1
   1479c:	str	r7, [r4]
   147a0:	cmp	r0, #2
   147a4:	blt	14840 <putchar_unlocked@plt+0x3818>
   147a8:	add	r1, r7, r0, lsl #2
   147ac:	mov	r2, r7
   147b0:	ldr	r3, [r2], #4
   147b4:	mov	r9, r0
   147b8:	ldr	r0, [r2]
   147bc:	cmp	r0, r3
   147c0:	ldrne	r6, [r7]
   147c4:	cmpne	r0, r6
   147c8:	bne	147d4 <putchar_unlocked@plt+0x37ac>
   147cc:	sub	r9, r9, #1
   147d0:	b	147d8 <putchar_unlocked@plt+0x37b0>
   147d4:	str	r0, [r7, #4]!
   147d8:	add	r2, r2, #4
   147dc:	cmp	r2, r1
   147e0:	bcc	147b8 <putchar_unlocked@plt+0x3790>
   147e4:	b	14844 <putchar_unlocked@plt+0x381c>
   147e8:	mov	r0, r5
   147ec:	bl	1199c <putchar_unlocked@plt+0x974>
   147f0:	b	14844 <putchar_unlocked@plt+0x381c>
   147f4:	bl	10f50 <__errno_location@plt>
   147f8:	ldr	r0, [r0]
   147fc:	mvn	r9, #0
   14800:	cmp	r0, #38	; 0x26
   14804:	bne	14844 <putchar_unlocked@plt+0x381c>
   14808:	mov	r0, #0
   1480c:	mov	r1, #1
   14810:	bl	14850 <putchar_unlocked@plt+0x3828>
   14814:	cmp	r0, #0
   14818:	beq	14844 <putchar_unlocked@plt+0x381c>
   1481c:	str	r0, [r4]
   14820:	str	sl, [r0]
   14824:	add	r9, sl, #1
   14828:	cmn	sl, #1
   1482c:	movwne	r9, #1
   14830:	b	14844 <putchar_unlocked@plt+0x381c>
   14834:	mov	r0, r7
   14838:	bl	1199c <putchar_unlocked@plt+0x974>
   1483c:	b	14844 <putchar_unlocked@plt+0x381c>
   14840:	mov	r9, r0
   14844:	mov	r0, r9
   14848:	sub	sp, fp, #28
   1484c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14850:	push	{fp, lr}
   14854:	mov	fp, sp
   14858:	cmp	r1, #536870912	; 0x20000000
   1485c:	bcc	14874 <putchar_unlocked@plt+0x384c>
   14860:	bl	10f50 <__errno_location@plt>
   14864:	mov	r1, #12
   14868:	str	r1, [r0]
   1486c:	mov	r0, #0
   14870:	pop	{fp, pc}
   14874:	lsl	r1, r1, #2
   14878:	bl	13fdc <putchar_unlocked@plt+0x2fb4>
   1487c:	pop	{fp, pc}
   14880:	cmp	r2, #0
   14884:	beq	148b4 <putchar_unlocked@plt+0x388c>
   14888:	mvn	r3, #0
   1488c:	udiv	r3, r3, r2
   14890:	cmp	r3, r1
   14894:	bcs	148b4 <putchar_unlocked@plt+0x388c>
   14898:	push	{fp, lr}
   1489c:	mov	fp, sp
   148a0:	bl	10f50 <__errno_location@plt>
   148a4:	mov	r1, #12
   148a8:	str	r1, [r0]
   148ac:	mov	r0, #0
   148b0:	pop	{fp, pc}
   148b4:	mul	r1, r2, r1
   148b8:	b	13fdc <putchar_unlocked@plt+0x2fb4>
   148bc:	push	{r4, sl, fp, lr}
   148c0:	add	fp, sp, #8
   148c4:	sub	sp, sp, #264	; 0x108
   148c8:	add	r1, sp, #7
   148cc:	movw	r2, #257	; 0x101
   148d0:	bl	14920 <putchar_unlocked@plt+0x38f8>
   148d4:	mov	r4, #0
   148d8:	cmp	r0, #0
   148dc:	bne	14914 <putchar_unlocked@plt+0x38ec>
   148e0:	add	r0, sp, #7
   148e4:	movw	r1, #21527	; 0x5417
   148e8:	movt	r1, #1
   148ec:	bl	10df4 <strcmp@plt>
   148f0:	cmp	r0, #0
   148f4:	beq	14914 <putchar_unlocked@plt+0x38ec>
   148f8:	add	r0, sp, #7
   148fc:	movw	r1, #21529	; 0x5419
   14900:	movt	r1, #1
   14904:	bl	10df4 <strcmp@plt>
   14908:	mov	r4, r0
   1490c:	cmp	r0, #0
   14910:	movwne	r4, #1
   14914:	mov	r0, r4
   14918:	sub	sp, fp, #8
   1491c:	pop	{r4, sl, fp, pc}
   14920:	b	14924 <putchar_unlocked@plt+0x38fc>
   14924:	push	{r4, r5, r6, r7, fp, lr}
   14928:	add	fp, sp, #16
   1492c:	mov	r6, r2
   14930:	mov	r4, r1
   14934:	bl	149c0 <putchar_unlocked@plt+0x3998>
   14938:	cmp	r0, #0
   1493c:	beq	1496c <putchar_unlocked@plt+0x3944>
   14940:	mov	r7, r0
   14944:	bl	10f44 <strlen@plt>
   14948:	cmp	r0, r6
   1494c:	bcs	1498c <putchar_unlocked@plt+0x3964>
   14950:	add	r2, r0, #1
   14954:	mov	r0, r4
   14958:	mov	r1, r7
   1495c:	bl	10e3c <memcpy@plt>
   14960:	mov	r5, #0
   14964:	mov	r0, r5
   14968:	pop	{r4, r5, r6, r7, fp, pc}
   1496c:	mov	r5, #22
   14970:	cmp	r6, #0
   14974:	movne	r0, #0
   14978:	strbne	r0, [r4]
   1497c:	movne	r0, r5
   14980:	popne	{r4, r5, r6, r7, fp, pc}
   14984:	mov	r0, r5
   14988:	pop	{r4, r5, r6, r7, fp, pc}
   1498c:	mov	r5, #34	; 0x22
   14990:	cmp	r6, #0
   14994:	beq	149b4 <putchar_unlocked@plt+0x398c>
   14998:	sub	r6, r6, #1
   1499c:	mov	r0, r4
   149a0:	mov	r1, r7
   149a4:	mov	r2, r6
   149a8:	bl	10e3c <memcpy@plt>
   149ac:	mov	r0, #0
   149b0:	strb	r0, [r4, r6]
   149b4:	mov	r0, r5
   149b8:	pop	{r4, r5, r6, r7, fp, pc}
   149bc:	b	149c0 <putchar_unlocked@plt+0x3998>
   149c0:	mov	r1, #0
   149c4:	b	10fc8 <setlocale@plt>
   149c8:	cmp	r3, #0
   149cc:	cmpeq	r2, #0
   149d0:	bne	149e8 <putchar_unlocked@plt+0x39c0>
   149d4:	cmp	r1, #0
   149d8:	cmpeq	r0, #0
   149dc:	mvnne	r1, #0
   149e0:	mvnne	r0, #0
   149e4:	b	14a04 <putchar_unlocked@plt+0x39dc>
   149e8:	sub	sp, sp, #8
   149ec:	push	{sp, lr}
   149f0:	bl	14a14 <putchar_unlocked@plt+0x39ec>
   149f4:	ldr	lr, [sp, #4]
   149f8:	add	sp, sp, #8
   149fc:	pop	{r2, r3}
   14a00:	bx	lr
   14a04:	push	{r1, lr}
   14a08:	mov	r0, #8
   14a0c:	bl	10ddc <raise@plt>
   14a10:	pop	{r1, pc}
   14a14:	cmp	r1, r3
   14a18:	cmpeq	r0, r2
   14a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a20:	mov	r4, r0
   14a24:	movcc	r0, #0
   14a28:	mov	r5, r1
   14a2c:	ldr	lr, [sp, #36]	; 0x24
   14a30:	movcc	r1, r0
   14a34:	bcc	14b30 <putchar_unlocked@plt+0x3b08>
   14a38:	cmp	r3, #0
   14a3c:	clzeq	ip, r2
   14a40:	clzne	ip, r3
   14a44:	addeq	ip, ip, #32
   14a48:	cmp	r5, #0
   14a4c:	clzeq	r1, r4
   14a50:	addeq	r1, r1, #32
   14a54:	clzne	r1, r5
   14a58:	sub	ip, ip, r1
   14a5c:	sub	sl, ip, #32
   14a60:	lsl	r9, r3, ip
   14a64:	rsb	fp, ip, #32
   14a68:	orr	r9, r9, r2, lsl sl
   14a6c:	orr	r9, r9, r2, lsr fp
   14a70:	lsl	r8, r2, ip
   14a74:	cmp	r5, r9
   14a78:	cmpeq	r4, r8
   14a7c:	movcc	r0, #0
   14a80:	movcc	r1, r0
   14a84:	bcc	14aa0 <putchar_unlocked@plt+0x3a78>
   14a88:	mov	r0, #1
   14a8c:	subs	r4, r4, r8
   14a90:	lsl	r1, r0, sl
   14a94:	orr	r1, r1, r0, lsr fp
   14a98:	lsl	r0, r0, ip
   14a9c:	sbc	r5, r5, r9
   14aa0:	cmp	ip, #0
   14aa4:	beq	14b30 <putchar_unlocked@plt+0x3b08>
   14aa8:	lsr	r6, r8, #1
   14aac:	orr	r6, r6, r9, lsl #31
   14ab0:	lsr	r7, r9, #1
   14ab4:	mov	r2, ip
   14ab8:	b	14adc <putchar_unlocked@plt+0x3ab4>
   14abc:	subs	r3, r4, r6
   14ac0:	sbc	r8, r5, r7
   14ac4:	adds	r3, r3, r3
   14ac8:	adc	r8, r8, r8
   14acc:	adds	r4, r3, #1
   14ad0:	adc	r5, r8, #0
   14ad4:	subs	r2, r2, #1
   14ad8:	beq	14af8 <putchar_unlocked@plt+0x3ad0>
   14adc:	cmp	r5, r7
   14ae0:	cmpeq	r4, r6
   14ae4:	bcs	14abc <putchar_unlocked@plt+0x3a94>
   14ae8:	adds	r4, r4, r4
   14aec:	adc	r5, r5, r5
   14af0:	subs	r2, r2, #1
   14af4:	bne	14adc <putchar_unlocked@plt+0x3ab4>
   14af8:	lsr	r3, r4, ip
   14afc:	orr	r3, r3, r5, lsl fp
   14b00:	lsr	r2, r5, ip
   14b04:	orr	r3, r3, r5, lsr sl
   14b08:	adds	r0, r0, r4
   14b0c:	mov	r4, r3
   14b10:	lsl	r3, r2, ip
   14b14:	orr	r3, r3, r4, lsl sl
   14b18:	lsl	ip, r4, ip
   14b1c:	orr	r3, r3, r4, lsr fp
   14b20:	adc	r1, r1, r5
   14b24:	subs	r0, r0, ip
   14b28:	mov	r5, r2
   14b2c:	sbc	r1, r1, r3
   14b30:	cmp	lr, #0
   14b34:	strdne	r4, [lr]
   14b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b40:	mov	r7, r0
   14b44:	ldr	r6, [pc, #72]	; 14b94 <putchar_unlocked@plt+0x3b6c>
   14b48:	ldr	r5, [pc, #72]	; 14b98 <putchar_unlocked@plt+0x3b70>
   14b4c:	add	r6, pc, r6
   14b50:	add	r5, pc, r5
   14b54:	sub	r6, r6, r5
   14b58:	mov	r8, r1
   14b5c:	mov	r9, r2
   14b60:	bl	10da4 <calloc@plt-0x20>
   14b64:	asrs	r6, r6, #2
   14b68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b6c:	mov	r4, #0
   14b70:	add	r4, r4, #1
   14b74:	ldr	r3, [r5], #4
   14b78:	mov	r2, r9
   14b7c:	mov	r1, r8
   14b80:	mov	r0, r7
   14b84:	blx	r3
   14b88:	cmp	r6, r4
   14b8c:	bne	14b70 <putchar_unlocked@plt+0x3b48>
   14b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b94:			; <UNDEFINED> instruction: 0x000113b8
   14b98:			; <UNDEFINED> instruction: 0x000113b0
   14b9c:	bx	lr
   14ba0:	ldr	r3, [pc, #12]	; 14bb4 <putchar_unlocked@plt+0x3b8c>
   14ba4:	mov	r1, #0
   14ba8:	add	r3, pc, r3
   14bac:	ldr	r2, [r3]
   14bb0:	b	10f5c <__cxa_atexit@plt>
   14bb4:	andeq	r1, r1, r4, lsr r5

Disassembly of section .fini:

00014bb8 <.fini>:
   14bb8:	push	{r3, lr}
   14bbc:	pop	{r3, pc}
