
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00011090 <.init>:
   11090:	push	{r3, lr}
   11094:	bl	11404 <__errno_location@plt+0x48>
   11098:	pop	{r3, pc}

Disassembly of section .plt:

0001109c <open@plt-0x14>:
   1109c:	push	{lr}		; (str lr, [sp, #-4]!)
   110a0:	ldr	lr, [pc, #4]	; 110ac <open@plt-0x4>
   110a4:	add	lr, pc, lr
   110a8:	ldr	pc, [lr, #8]!
   110ac:	andeq	r2, r1, r4, asr pc

000110b0 <open@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #73728	; 0x12000
   110b8:	ldr	pc, [ip, #3924]!	; 0xf54

000110bc <sigemptyset@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #73728	; 0x12000
   110c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c8 <strerror@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #73728	; 0x12000
   110d0:	ldr	pc, [ip, #3908]!	; 0xf44

000110d4 <rb_get_type@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #73728	; 0x12000
   110dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e0 <zError@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #73728	; 0x12000
   110e8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #73728	; 0x12000
   110f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f8 <rb_event_addish@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #73728	; 0x12000
   11100:	ldr	pc, [ip, #3876]!	; 0xf24

00011104 <rb_ignore_errno@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #73728	; 0x12000
   1110c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011110 <rb_lib_version@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #73728	; 0x12000
   11118:	ldr	pc, [ip, #3860]!	; 0xf14

0001111c <inflateEnd@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #73728	; 0x12000
   11124:	ldr	pc, [ip, #3852]!	; 0xf0c

00011128 <__libc_start_main@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #73728	; 0x12000
   11130:	ldr	pc, [ip, #3844]!	; 0xf04

00011134 <rb_setselect@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #73728	; 0x12000
   1113c:	ldr	pc, [ip, #3836]!	; 0xefc

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #73728	; 0x12000
   11148:	ldr	pc, [ip, #3828]!	; 0xef4

0001114c <rb_ssl_handshake_count@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #73728	; 0x12000
   11154:	ldr	pc, [ip, #3820]!	; 0xeec

00011158 <rb_send_fd_buf@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #73728	; 0x12000
   11160:	ldr	pc, [ip, #3812]!	; 0xee4

00011164 <vsnprintf@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #73728	; 0x12000
   1116c:	ldr	pc, [ip, #3804]!	; 0xedc

00011170 <strncpy@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #73728	; 0x12000
   11178:	ldr	pc, [ip, #3796]!	; 0xed4

0001117c <getenv@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #73728	; 0x12000
   11184:	ldr	pc, [ip, #3788]!	; 0xecc

00011188 <deflate@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #73728	; 0x12000
   11190:	ldr	pc, [ip, #3780]!	; 0xec4

00011194 <deflateInit_@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #73728	; 0x12000
   1119c:	ldr	pc, [ip, #3772]!	; 0xebc

000111a0 <calloc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #73728	; 0x12000
   111a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111ac <rb_set_nb@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #73728	; 0x12000
   111b4:	ldr	pc, [ip, #3756]!	; 0xeac

000111b8 <memset@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #73728	; 0x12000
   111c0:	ldr	pc, [ip, #3748]!	; 0xea4

000111c4 <rb_strlcpy@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #73728	; 0x12000
   111cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d0 <rb_get_ssl_certfp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #73728	; 0x12000
   111d8:	ldr	pc, [ip, #3732]!	; 0xe94

000111dc <inflate@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #73728	; 0x12000
   111e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e8 <rb_init_rawbuffers@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #73728	; 0x12000
   111f0:	ldr	pc, [ip, #3716]!	; 0xe84

000111f4 <free@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #73728	; 0x12000
   111fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00011200 <rb_lib_loop@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #73728	; 0x12000
   11208:	ldr	pc, [ip, #3700]!	; 0xe74

0001120c <deflateEnd@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #73728	; 0x12000
   11214:	ldr	pc, [ip, #3692]!	; 0xe6c

00011218 <rb_read@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #73728	; 0x12000
   11220:	ldr	pc, [ip, #3684]!	; 0xe64

00011224 <rb_set_type@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #73728	; 0x12000
   1122c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011230 <strlen@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #73728	; 0x12000
   11238:	ldr	pc, [ip, #3668]!	; 0xe54

0001123c <rb_ssl_get_cipher@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #73728	; 0x12000
   11244:	ldr	pc, [ip, #3660]!	; 0xe4c

00011248 <memcpy@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #73728	; 0x12000
   11250:	ldr	pc, [ip, #3652]!	; 0xe44

00011254 <rb_close@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #73728	; 0x12000
   1125c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011260 <strtol@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #73728	; 0x12000
   11268:	ldr	pc, [ip, #3636]!	; 0xe34

0001126c <sigaddset@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #73728	; 0x12000
   11274:	ldr	pc, [ip, #3628]!	; 0xe2c

00011278 <strcpy@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #73728	; 0x12000
   11280:	ldr	pc, [ip, #3620]!	; 0xe24

00011284 <rb_ssl_clear_handshake_count@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #73728	; 0x12000
   1128c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011290 <rb_rawbuf_length@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #73728	; 0x12000
   11298:	ldr	pc, [ip, #3604]!	; 0xe14

0001129c <rb_free_rawbuffer@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #73728	; 0x12000
   112a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a8 <rb_get_ssl_strerror@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #73728	; 0x12000
   112b0:	ldr	pc, [ip, #3588]!	; 0xe04

000112b4 <close@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #73728	; 0x12000
   112bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c0 <fwrite@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #73728	; 0x12000
   112c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112cc <rb_init_prng@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #73728	; 0x12000
   112d4:	ldr	pc, [ip, #3564]!	; 0xdec

000112d8 <rb_outofmemory@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #73728	; 0x12000
   112e0:	ldr	pc, [ip, #3556]!	; 0xde4

000112e4 <rb_supports_ssl@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #73728	; 0x12000
   112ec:	ldr	pc, [ip, #3548]!	; 0xddc

000112f0 <sigaction@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #73728	; 0x12000
   112f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112fc <rb_ssl_start_connected@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #73728	; 0x12000
   11304:	ldr	pc, [ip, #3532]!	; 0xdcc

00011308 <rb_lib_init@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #73728	; 0x12000
   11310:	ldr	pc, [ip, #3524]!	; 0xdc4

00011314 <rb_new_rawbuffer@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #73728	; 0x12000
   1131c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011320 <rb_open@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #73728	; 0x12000
   11328:	ldr	pc, [ip, #3508]!	; 0xdb4

0001132c <inflateInit_@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #73728	; 0x12000
   11334:	ldr	pc, [ip, #3500]!	; 0xdac

00011338 <rb_recv_fd_buf@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #73728	; 0x12000
   11340:	ldr	pc, [ip, #3492]!	; 0xda4

00011344 <rb_ssl_start_accepted@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #73728	; 0x12000
   1134c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011350 <dup2@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #73728	; 0x12000
   11358:	ldr	pc, [ip, #3476]!	; 0xd94

0001135c <rb_event_add@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #73728	; 0x12000
   11364:	ldr	pc, [ip, #3468]!	; 0xd8c

00011368 <snprintf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #73728	; 0x12000
   11370:	ldr	pc, [ip, #3460]!	; 0xd84

00011374 <strncmp@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #73728	; 0x12000
   1137c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011380 <getrlimit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #73728	; 0x12000
   11388:	ldr	pc, [ip, #3444]!	; 0xd74

0001138c <rb_rawbuf_append@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #73728	; 0x12000
   11394:	ldr	pc, [ip, #3436]!	; 0xd6c

00011398 <rb_rawbuf_flush@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #73728	; 0x12000
   113a0:	ldr	pc, [ip, #3428]!	; 0xd64

000113a4 <rb_setup_ssl_server@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #73728	; 0x12000
   113ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000113b0 <exit@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #73728	; 0x12000
   113b8:	ldr	pc, [ip, #3412]!	; 0xd54

000113bc <__errno_location@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #73728	; 0x12000
   113c4:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000113c8 <.text>:
   113c8:	mov	fp, #0
   113cc:	mov	lr, #0
   113d0:	pop	{r1}		; (ldr r1, [sp], #4)
   113d4:	mov	r2, sp
   113d8:	push	{r2}		; (str r2, [sp, #-4]!)
   113dc:	push	{r0}		; (str r0, [sp, #-4]!)
   113e0:	ldr	ip, [pc, #16]	; 113f8 <__errno_location@plt+0x3c>
   113e4:	push	{ip}		; (str ip, [sp, #-4]!)
   113e8:	ldr	r0, [pc, #12]	; 113fc <__errno_location@plt+0x40>
   113ec:	ldr	r3, [pc, #12]	; 11400 <__errno_location@plt+0x44>
   113f0:	bl	11128 <__libc_start_main@plt>
   113f4:	bl	110ec <abort@plt>
   113f8:	andeq	r3, r1, r4, lsl ip
   113fc:			; <UNDEFINED> instruction: 0x000114b8
   11400:			; <UNDEFINED> instruction: 0x00013bb4
   11404:	ldr	r3, [pc, #20]	; 11420 <__errno_location@plt+0x64>
   11408:	ldr	r2, [pc, #20]	; 11424 <__errno_location@plt+0x68>
   1140c:	add	r3, pc, r3
   11410:	ldr	r2, [r3, r2]
   11414:	cmp	r2, #0
   11418:	bxeq	lr
   1141c:	b	11140 <__gmon_start__@plt>
   11420:	andeq	r2, r1, ip, ror #23
   11424:	andeq	r0, r0, r4, lsl r1
   11428:	ldr	r0, [pc, #24]	; 11448 <__errno_location@plt+0x8c>
   1142c:	ldr	r3, [pc, #24]	; 1144c <__errno_location@plt+0x90>
   11430:	cmp	r3, r0
   11434:	bxeq	lr
   11438:	ldr	r3, [pc, #16]	; 11450 <__errno_location@plt+0x94>
   1143c:	cmp	r3, #0
   11440:	bxeq	lr
   11444:	bx	r3
   11448:	andeq	r4, r2, r0, lsr #2
   1144c:	andeq	r4, r2, r0, lsr #2
   11450:	andeq	r0, r0, r0
   11454:	ldr	r0, [pc, #36]	; 11480 <__errno_location@plt+0xc4>
   11458:	ldr	r1, [pc, #36]	; 11484 <__errno_location@plt+0xc8>
   1145c:	sub	r1, r1, r0
   11460:	asr	r1, r1, #2
   11464:	add	r1, r1, r1, lsr #31
   11468:	asrs	r1, r1, #1
   1146c:	bxeq	lr
   11470:	ldr	r3, [pc, #16]	; 11488 <__errno_location@plt+0xcc>
   11474:	cmp	r3, #0
   11478:	bxeq	lr
   1147c:	bx	r3
   11480:	andeq	r4, r2, r0, lsr #2
   11484:	andeq	r4, r2, r0, lsr #2
   11488:	andeq	r0, r0, r0
   1148c:	push	{r4, lr}
   11490:	ldr	r4, [pc, #24]	; 114b0 <__errno_location@plt+0xf4>
   11494:	ldrb	r3, [r4]
   11498:	cmp	r3, #0
   1149c:	popne	{r4, pc}
   114a0:	bl	11428 <__errno_location@plt+0x6c>
   114a4:	mov	r3, #1
   114a8:	strb	r3, [r4]
   114ac:	pop	{r4, pc}
   114b0:	andeq	r4, r2, r4, lsr #2
   114b4:	b	11454 <__errno_location@plt+0x98>
   114b8:	push	{r4, r5, fp, lr}
   114bc:	add	fp, sp, #8
   114c0:	sub	sp, sp, #24
   114c4:	sub	sp, sp, #16384	; 0x4000
   114c8:	add	r9, sp, #16
   114cc:	mov	r0, #7
   114d0:	mov	r1, r9
   114d4:	bl	11380 <getrlimit@plt>
   114d8:	cmp	r0, #0
   114dc:	movw	r0, #15396	; 0x3c24
   114e0:	ldr	r6, [sp, #16]
   114e4:	movt	r0, #1
   114e8:	movwne	r6, #65535	; 0xffff
   114ec:	bl	1117c <getenv@plt>
   114f0:	mov	r5, r0
   114f4:	movw	r0, #15403	; 0x3c2b
   114f8:	movt	r0, #1
   114fc:	bl	1117c <getenv@plt>
   11500:	mov	r4, r0
   11504:	movw	r0, #15412	; 0x3c34
   11508:	movt	r0, #1
   1150c:	bl	1117c <getenv@plt>
   11510:	cmp	r5, #0
   11514:	beq	11528 <__errno_location@plt+0x16c>
   11518:	cmp	r4, #0
   1151c:	movne	r7, r0
   11520:	cmpne	r0, #0
   11524:	bne	11568 <__errno_location@plt+0x1ac>
   11528:	movw	r4, #16672	; 0x4120
   1152c:	movw	r0, #15421	; 0x3c3d
   11530:	mov	r1, #50	; 0x32
   11534:	mov	r2, #1
   11538:	movt	r4, #2
   1153c:	movt	r0, #1
   11540:	ldr	r3, [r4]
   11544:	bl	112c0 <fwrite@plt>
   11548:	ldr	r3, [r4]
   1154c:	movw	r0, #15472	; 0x3c70
   11550:	mov	r1, #49	; 0x31
   11554:	mov	r2, #1
   11558:	movt	r0, #1
   1155c:	bl	112c0 <fwrite@plt>
   11560:	mov	r0, #1
   11564:	bl	113b0 <exit@plt>
   11568:	mov	r0, r5
   1156c:	mov	r1, #0
   11570:	mov	r2, #10
   11574:	bl	11260 <strtol@plt>
   11578:	mov	r5, r0
   1157c:	mov	r0, r4
   11580:	mov	r1, #0
   11584:	mov	r2, #10
   11588:	bl	11260 <strtol@plt>
   1158c:	mov	r4, r0
   11590:	mov	r0, r7
   11594:	mov	r1, #0
   11598:	mov	r2, #10
   1159c:	bl	11260 <strtol@plt>
   115a0:	movw	r8, #40692	; 0x9ef4
   115a4:	cmp	r6, #4
   115a8:	movt	r8, #2
   115ac:	str	r0, [r8, #4]
   115b0:	blt	115f0 <__errno_location@plt+0x234>
   115b4:	mov	r7, #3
   115b8:	cmp	r5, r7
   115bc:	cmpne	r4, r7
   115c0:	bne	115dc <__errno_location@plt+0x220>
   115c4:	add	r7, r7, #1
   115c8:	cmp	r6, r7
   115cc:	beq	115f0 <__errno_location@plt+0x234>
   115d0:	cmp	r5, r7
   115d4:	cmpne	r4, r7
   115d8:	beq	115c4 <__errno_location@plt+0x208>
   115dc:	mov	r0, r7
   115e0:	bl	112b4 <close@plt>
   115e4:	add	r7, r7, #1
   115e8:	cmp	r6, r7
   115ec:	bne	115d0 <__errno_location@plt+0x214>
   115f0:	movw	r0, #15522	; 0x3ca2
   115f4:	mov	r1, #2
   115f8:	movt	r0, #1
   115fc:	bl	110b0 <open@plt>
   11600:	cmp	r0, #0
   11604:	bmi	11640 <__errno_location@plt+0x284>
   11608:	cmp	r5, #0
   1160c:	mov	r7, r0
   11610:	cmpne	r4, #0
   11614:	bne	11898 <__errno_location@plt+0x4dc>
   11618:	cmp	r5, #1
   1161c:	cmpne	r4, #1
   11620:	bne	118b0 <__errno_location@plt+0x4f4>
   11624:	cmp	r5, #2
   11628:	cmpne	r4, #2
   1162c:	bne	118c8 <__errno_location@plt+0x50c>
   11630:	cmp	r7, #3
   11634:	blt	11640 <__errno_location@plt+0x284>
   11638:	mov	r0, r7
   1163c:	bl	112b4 <close@plt>
   11640:	mov	r0, #1
   11644:	add	r7, r9, #4
   11648:	str	r0, [sp, #16]
   1164c:	mov	r0, #0
   11650:	str	r0, [sp, #148]	; 0x94
   11654:	mov	r0, r7
   11658:	bl	110bc <sigemptyset@plt>
   1165c:	mov	r0, r7
   11660:	mov	r1, #13
   11664:	bl	1126c <sigaddset@plt>
   11668:	mov	r0, r7
   1166c:	mov	r1, #14
   11670:	bl	1126c <sigaddset@plt>
   11674:	mov	r0, r7
   11678:	mov	r1, #5
   1167c:	bl	1126c <sigaddset@plt>
   11680:	mov	r0, r7
   11684:	mov	r1, #28
   11688:	bl	1126c <sigaddset@plt>
   1168c:	mov	r0, #28
   11690:	mov	r1, r9
   11694:	mov	r2, #0
   11698:	bl	112f0 <sigaction@plt>
   1169c:	mov	r0, #13
   116a0:	mov	r1, r9
   116a4:	mov	r2, #0
   116a8:	bl	112f0 <sigaction@plt>
   116ac:	mov	r0, #5
   116b0:	mov	r1, r9
   116b4:	mov	r2, #0
   116b8:	bl	112f0 <sigaction@plt>
   116bc:	movw	r0, #15280	; 0x3bb0
   116c0:	mov	r1, r9
   116c4:	mov	r2, #0
   116c8:	movt	r0, #1
   116cc:	str	r0, [sp, #16]
   116d0:	mov	r0, #14
   116d4:	bl	112f0 <sigaction@plt>
   116d8:	mov	r0, #4096	; 0x1000
   116dc:	mov	r1, #1024	; 0x400
   116e0:	mov	r2, #0
   116e4:	mov	r3, #0
   116e8:	str	r6, [sp]
   116ec:	str	r1, [sp, #4]
   116f0:	str	r0, [sp, #8]
   116f4:	mov	r0, #0
   116f8:	mov	r1, #0
   116fc:	bl	11308 <rb_lib_init@plt>
   11700:	mov	r0, #1024	; 0x400
   11704:	bl	111e8 <rb_init_rawbuffers@plt>
   11708:	mov	r0, #0
   1170c:	mov	r1, #1
   11710:	bl	112cc <rb_init_prng@plt>
   11714:	bl	112e4 <rb_supports_ssl@plt>
   11718:	cmp	r0, #0
   1171c:	mov	r1, #48	; 0x30
   11720:	movwne	r0, #1
   11724:	strb	r0, [r8]
   11728:	mov	r0, #1
   1172c:	bl	111a0 <calloc@plt>
   11730:	cmp	r0, #0
   11734:	beq	11894 <__errno_location@plt+0x4d8>
   11738:	movw	r2, #15532	; 0x3cac
   1173c:	str	r0, [r8, #8]
   11740:	mov	r0, r5
   11744:	mov	r1, #4
   11748:	movt	r2, #1
   1174c:	bl	11320 <rb_open@plt>
   11750:	ldr	r1, [r8, #8]
   11754:	movw	r2, #15552	; 0x3cc0
   11758:	movt	r2, #1
   1175c:	str	r0, [r1, #16]
   11760:	mov	r0, r4
   11764:	mov	r1, #8
   11768:	bl	11320 <rb_open@plt>
   1176c:	ldr	r1, [r8, #8]
   11770:	str	r0, [r1, #20]
   11774:	ldr	r0, [r1, #16]
   11778:	bl	111ac <rb_set_nb@plt>
   1177c:	ldr	r0, [r8, #8]
   11780:	ldr	r0, [r0, #20]
   11784:	bl	111ac <rb_set_nb@plt>
   11788:	movw	r0, #15562	; 0x3cca
   1178c:	movw	r1, #6628	; 0x19e4
   11790:	mov	r2, #0
   11794:	mov	r3, #10
   11798:	movt	r0, #1
   1179c:	movt	r1, #1
   117a0:	bl	110f8 <rb_event_addish@plt>
   117a4:	movw	r0, #15579	; 0x3cdb
   117a8:	movw	r1, #6768	; 0x1a70
   117ac:	mov	r2, #0
   117b0:	mov	r3, #10
   117b4:	movt	r0, #1
   117b8:	movt	r1, #1
   117bc:	bl	1135c <rb_event_add@plt>
   117c0:	ldr	r0, [r8, #8]
   117c4:	add	r5, sp, #16
   117c8:	ldr	r4, [r0, #20]
   117cc:	mov	r0, r4
   117d0:	mov	r1, r5
   117d4:	mov	r2, #16384	; 0x4000
   117d8:	bl	11218 <rb_read@plt>
   117dc:	cmp	r0, #0
   117e0:	bgt	117cc <__errno_location@plt+0x410>
   117e4:	beq	117fc <__errno_location@plt+0x440>
   117e8:	bl	113bc <__errno_location@plt>
   117ec:	ldr	r0, [r0]
   117f0:	bl	11104 <rb_ignore_errno@plt>
   117f4:	cmp	r0, #0
   117f8:	bne	11804 <__errno_location@plt+0x448>
   117fc:	mov	r0, #0
   11800:	bl	113b0 <exit@plt>
   11804:	movw	r2, #6928	; 0x1b10
   11808:	mov	r0, r4
   1180c:	mov	r1, #1
   11810:	mov	r3, #0
   11814:	movt	r2, #1
   11818:	bl	11134 <rb_setselect@plt>
   1181c:	ldr	r1, [r8, #8]
   11820:	ldr	r0, [r1, #16]
   11824:	bl	11b7c <__errno_location@plt+0x7c0>
   11828:	ldr	r4, [r8, #8]
   1182c:	orr	r6, r5, #1
   11830:	mov	r1, #0
   11834:	mov	r2, #255	; 0xff
   11838:	mov	r0, r6
   1183c:	bl	111b8 <memset@plt>
   11840:	mov	r0, #86	; 0x56
   11844:	strb	r0, [sp, #16]
   11848:	bl	11110 <rb_lib_version@plt>
   1184c:	mov	r1, r0
   11850:	mov	r0, r6
   11854:	mov	r2, #254	; 0xfe
   11858:	bl	11170 <strncpy@plt>
   1185c:	mov	r0, r5
   11860:	bl	11230 <strlen@plt>
   11864:	mov	r6, r0
   11868:	mov	r0, #1
   1186c:	mov	r1, #40	; 0x28
   11870:	bl	111a0 <calloc@plt>
   11874:	cmp	r0, #0
   11878:	beq	11894 <__errno_location@plt+0x4d8>
   1187c:	mov	r5, r0
   11880:	mov	r0, #1
   11884:	mov	r1, r6
   11888:	bl	111a0 <calloc@plt>
   1188c:	cmp	r0, #0
   11890:	bne	118e0 <__errno_location@plt+0x524>
   11894:	bl	112d8 <rb_outofmemory@plt>
   11898:	mov	r0, r7
   1189c:	mov	r1, #0
   118a0:	bl	11350 <dup2@plt>
   118a4:	cmp	r5, #1
   118a8:	cmpne	r4, #1
   118ac:	beq	11624 <__errno_location@plt+0x268>
   118b0:	mov	r0, r7
   118b4:	mov	r1, #1
   118b8:	bl	11350 <dup2@plt>
   118bc:	cmp	r5, #2
   118c0:	cmpne	r4, #2
   118c4:	beq	11630 <__errno_location@plt+0x274>
   118c8:	mov	r0, r7
   118cc:	mov	r1, #2
   118d0:	bl	11350 <dup2@plt>
   118d4:	cmp	r7, #3
   118d8:	bge	11638 <__errno_location@plt+0x27c>
   118dc:	b	11640 <__errno_location@plt+0x284>
   118e0:	add	r1, sp, #16
   118e4:	mov	r2, r6
   118e8:	str	r0, [r5, #12]
   118ec:	str	r6, [r5, #16]
   118f0:	bl	11248 <memcpy@plt>
   118f4:	str	r5, [r5]
   118f8:	ldr	r0, [r4, #40]	; 0x28
   118fc:	cmp	r0, #0
   11900:	str	r0, [r5, #4]
   11904:	bne	1191c <__errno_location@plt+0x560>
   11908:	mov	r0, r4
   1190c:	ldr	r1, [r0, #36]!	; 0x24
   11910:	cmp	r1, #0
   11914:	streq	r5, [r0]
   11918:	b	11924 <__errno_location@plt+0x568>
   1191c:	add	r0, r0, #8
   11920:	str	r5, [r0]
   11924:	str	r5, [r4, #40]	; 0x28
   11928:	ldr	r1, [r4, #44]	; 0x2c
   1192c:	ldr	r0, [r4, #16]
   11930:	add	r1, r1, #1
   11934:	str	r1, [r4, #44]	; 0x2c
   11938:	mov	r1, r4
   1193c:	bl	12d4c <__errno_location@plt+0x1990>
   11940:	ldrb	r0, [r8]
   11944:	cmp	r0, #0
   11948:	bne	119dc <__errno_location@plt+0x620>
   1194c:	ldr	r4, [r8, #8]
   11950:	mov	r0, #1
   11954:	mov	r1, #40	; 0x28
   11958:	bl	111a0 <calloc@plt>
   1195c:	cmp	r0, #0
   11960:	beq	11894 <__errno_location@plt+0x4d8>
   11964:	mov	r5, r0
   11968:	mov	r0, #1
   1196c:	mov	r1, #1
   11970:	mov	r6, #1
   11974:	bl	111a0 <calloc@plt>
   11978:	cmp	r0, #0
   1197c:	beq	11894 <__errno_location@plt+0x4d8>
   11980:	mov	r1, #78	; 0x4e
   11984:	str	r0, [r5, #12]
   11988:	str	r6, [r5, #16]
   1198c:	str	r5, [r5]
   11990:	strb	r1, [r0]
   11994:	ldr	r0, [r4, #40]	; 0x28
   11998:	cmp	r0, #0
   1199c:	str	r0, [r5, #4]
   119a0:	bne	119b8 <__errno_location@plt+0x5fc>
   119a4:	mov	r0, r4
   119a8:	ldr	r1, [r0, #36]!	; 0x24
   119ac:	cmp	r1, #0
   119b0:	streq	r5, [r0]
   119b4:	b	119c0 <__errno_location@plt+0x604>
   119b8:	add	r0, r0, #8
   119bc:	str	r5, [r0]
   119c0:	str	r5, [r4, #40]	; 0x28
   119c4:	ldr	r1, [r4, #44]	; 0x2c
   119c8:	ldr	r0, [r4, #16]
   119cc:	add	r1, r1, #1
   119d0:	str	r1, [r4, #44]	; 0x2c
   119d4:	mov	r1, r4
   119d8:	bl	12d4c <__errno_location@plt+0x1990>
   119dc:	mov	r0, #0
   119e0:	bl	11200 <rb_lib_loop@plt>
   119e4:	push	{r4, r5, r6, r7, fp, lr}
   119e8:	add	fp, sp, #16
   119ec:	movw	r6, #16680	; 0x4128
   119f0:	movt	r6, #2
   119f4:	ldr	r7, [r6]
   119f8:	cmp	r7, #0
   119fc:	bne	11a14 <__errno_location@plt+0x658>
   11a00:	b	11a60 <__errno_location@plt+0x6a4>
   11a04:	mov	r0, r4
   11a08:	bl	111f4 <free@plt>
   11a0c:	cmp	r7, #0
   11a10:	beq	11a60 <__errno_location@plt+0x6a4>
   11a14:	ldr	r4, [r7]
   11a18:	ldr	r7, [r7, #8]
   11a1c:	ldr	r0, [r4, #16]
   11a20:	bl	1129c <rb_free_rawbuffer@plt>
   11a24:	ldr	r0, [r4, #20]
   11a28:	bl	1129c <rb_free_rawbuffer@plt>
   11a2c:	ldrb	r0, [r4, #72]	; 0x48
   11a30:	tst	r0, #2
   11a34:	beq	11a04 <__errno_location@plt+0x648>
   11a38:	ldr	r5, [r4, #76]	; 0x4c
   11a3c:	mov	r0, r5
   11a40:	bl	1111c <inflateEnd@plt>
   11a44:	add	r0, r5, #56	; 0x38
   11a48:	bl	1120c <deflateEnd@plt>
   11a4c:	cmp	r5, #0
   11a50:	beq	11a04 <__errno_location@plt+0x648>
   11a54:	mov	r0, r5
   11a58:	bl	111f4 <free@plt>
   11a5c:	b	11a04 <__errno_location@plt+0x648>
   11a60:	mov	r0, #0
   11a64:	str	r0, [r6]
   11a68:	str	r0, [r6, #4]
   11a6c:	pop	{r4, r5, r6, r7, fp, pc}
   11a70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a74:	add	fp, sp, #24
   11a78:	movw	r8, #16692	; 0x4134
   11a7c:	movw	r4, #15601	; 0x3cf1
   11a80:	mov	r6, #0
   11a84:	movt	r8, #2
   11a88:	movt	r4, #1
   11a8c:	add	r0, r6, r6, lsl #1
   11a90:	ldr	r7, [r8, r0, lsl #2]
   11a94:	cmp	r7, #0
   11a98:	bne	11acc <__errno_location@plt+0x710>
   11a9c:	add	r6, r6, #1
   11aa0:	cmp	r6, #2000	; 0x7d0
   11aa4:	beq	11b0c <__errno_location@plt+0x750>
   11aa8:	add	r0, r6, r6, lsl #1
   11aac:	ldr	r7, [r8, r0, lsl #2]
   11ab0:	cmp	r7, #0
   11ab4:	bne	11acc <__errno_location@plt+0x710>
   11ab8:	b	11a9c <__errno_location@plt+0x6e0>
   11abc:	ldr	r0, [r5, #28]
   11ac0:	bl	11284 <rb_ssl_clear_handshake_count@plt>
   11ac4:	cmp	r7, #0
   11ac8:	beq	11a9c <__errno_location@plt+0x6e0>
   11acc:	ldr	r5, [r7]
   11ad0:	ldr	r7, [r7, #8]
   11ad4:	ldrb	r0, [r5, #72]	; 0x48
   11ad8:	tst	r0, #1
   11adc:	beq	11ac4 <__errno_location@plt+0x708>
   11ae0:	ldr	r0, [r5, #28]
   11ae4:	bl	1114c <rb_ssl_handshake_count@plt>
   11ae8:	cmp	r0, #3
   11aec:	bcc	11abc <__errno_location@plt+0x700>
   11af0:	mov	r0, r5
   11af4:	mov	r1, #1
   11af8:	mov	r2, r4
   11afc:	bl	12a18 <__errno_location@plt+0x165c>
   11b00:	cmp	r7, #0
   11b04:	bne	11acc <__errno_location@plt+0x710>
   11b08:	b	11a9c <__errno_location@plt+0x6e0>
   11b0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b10:	push	{r4, r5, r6, r7, fp, lr}
   11b14:	add	fp, sp, #16
   11b18:	sub	sp, sp, #16384	; 0x4000
   11b1c:	mov	r4, r0
   11b20:	mov	r5, sp
   11b24:	mov	r0, r4
   11b28:	mov	r1, r5
   11b2c:	mov	r2, #16384	; 0x4000
   11b30:	bl	11218 <rb_read@plt>
   11b34:	cmp	r0, #0
   11b38:	bgt	11b24 <__errno_location@plt+0x768>
   11b3c:	beq	11b74 <__errno_location@plt+0x7b8>
   11b40:	bl	113bc <__errno_location@plt>
   11b44:	ldr	r0, [r0]
   11b48:	bl	11104 <rb_ignore_errno@plt>
   11b4c:	cmp	r0, #0
   11b50:	beq	11b74 <__errno_location@plt+0x7b8>
   11b54:	movw	r2, #6928	; 0x1b10
   11b58:	mov	r0, r4
   11b5c:	mov	r1, #1
   11b60:	mov	r3, #0
   11b64:	movt	r2, #1
   11b68:	bl	11134 <rb_setselect@plt>
   11b6c:	sub	sp, fp, #16
   11b70:	pop	{r4, r5, r6, r7, fp, pc}
   11b74:	mov	r0, #0
   11b78:	bl	113b0 <exit@plt>
   11b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b80:	add	fp, sp, #28
   11b84:	sub	sp, sp, #4
   11b88:	vpush	{d8-d9}
   11b8c:	sub	sp, sp, #576	; 0x240
   11b90:	mov	r4, r1
   11b94:	mov	r0, #1
   11b98:	mov	r1, #40	; 0x28
   11b9c:	bl	111a0 <calloc@plt>
   11ba0:	cmp	r0, #0
   11ba4:	beq	12a0c <__errno_location@plt+0x1650>
   11ba8:	mov	r5, r0
   11bac:	add	r0, r4, #24
   11bb0:	mov	r8, #16384	; 0x4000
   11bb4:	mov	r7, #4
   11bb8:	mov	r9, #0
   11bbc:	str	r0, [sp, #52]	; 0x34
   11bc0:	b	11be4 <__errno_location@plt+0x828>
   11bc4:	mov	r0, #0
   11bc8:	str	r0, [r5, #36]	; 0x24
   11bcc:	mov	r0, #1
   11bd0:	mov	r1, #40	; 0x28
   11bd4:	bl	111a0 <calloc@plt>
   11bd8:	mov	r5, r0
   11bdc:	cmp	r0, #0
   11be0:	beq	12a0c <__errno_location@plt+0x1650>
   11be4:	mov	r0, #1
   11be8:	mov	r1, #16384	; 0x4000
   11bec:	bl	111a0 <calloc@plt>
   11bf0:	cmp	r0, #0
   11bf4:	beq	12a0c <__errno_location@plt+0x1650>
   11bf8:	str	r0, [r5, #12]
   11bfc:	str	r8, [r5, #16]
   11c00:	mov	r1, r0
   11c04:	add	r3, r5, #20
   11c08:	mov	r2, #16384	; 0x4000
   11c0c:	ldr	r0, [r4, #16]
   11c10:	str	r7, [sp]
   11c14:	bl	11338 <rb_recv_fd_buf@plt>
   11c18:	mov	r6, r0
   11c1c:	cmp	r0, #0
   11c20:	ble	11cb8 <__errno_location@plt+0x8fc>
   11c24:	str	r6, [r5, #16]
   11c28:	ldr	r0, [r4, #28]
   11c2c:	str	r5, [r5]
   11c30:	cmp	r0, #0
   11c34:	stmib	r5, {r0, r9}
   11c38:	beq	11c48 <__errno_location@plt+0x88c>
   11c3c:	add	r0, r0, #8
   11c40:	str	r5, [r0]
   11c44:	b	11c58 <__errno_location@plt+0x89c>
   11c48:	ldr	r0, [sp, #52]	; 0x34
   11c4c:	ldr	r0, [r0]
   11c50:	cmp	r0, #0
   11c54:	beq	11cb0 <__errno_location@plt+0x8f4>
   11c58:	str	r5, [r4, #28]
   11c5c:	ldr	r0, [r4, #32]
   11c60:	add	r0, r0, #1
   11c64:	str	r0, [r4, #32]
   11c68:	ldr	r0, [r5, #20]
   11c6c:	cmp	r0, #0
   11c70:	beq	11bc4 <__errno_location@plt+0x808>
   11c74:	ldr	r0, [r5, #24]
   11c78:	cmp	r0, #0
   11c7c:	beq	11ca0 <__errno_location@plt+0x8e4>
   11c80:	ldr	r0, [r5, #28]
   11c84:	cmp	r0, #0
   11c88:	beq	11ca8 <__errno_location@plt+0x8ec>
   11c8c:	ldr	r0, [r5, #32]
   11c90:	cmp	r0, #0
   11c94:	mov	r0, #4
   11c98:	movweq	r0, #3
   11c9c:	b	11bc8 <__errno_location@plt+0x80c>
   11ca0:	mov	r0, #1
   11ca4:	b	11bc8 <__errno_location@plt+0x80c>
   11ca8:	mov	r0, #2
   11cac:	b	11bc8 <__errno_location@plt+0x80c>
   11cb0:	ldr	r0, [sp, #52]	; 0x34
   11cb4:	b	11c40 <__errno_location@plt+0x884>
   11cb8:	ldr	r0, [r5, #12]
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cc8 <__errno_location@plt+0x90c>
   11cc4:	bl	111f4 <free@plt>
   11cc8:	mov	r0, r5
   11ccc:	bl	111f4 <free@plt>
   11cd0:	cmp	r6, #0
   11cd4:	beq	12a10 <__errno_location@plt+0x1654>
   11cd8:	bl	113bc <__errno_location@plt>
   11cdc:	ldr	r0, [r0]
   11ce0:	bl	11104 <rb_ignore_errno@plt>
   11ce4:	cmp	r0, #0
   11ce8:	beq	12a10 <__errno_location@plt+0x1654>
   11cec:	ldr	r0, [sp, #52]	; 0x34
   11cf0:	ldr	r7, [r0]
   11cf4:	cmp	r7, #0
   11cf8:	beq	129e4 <__errno_location@plt+0x1628>
   11cfc:	vmov.i32	q4, #0	; 0x00000000
   11d00:	add	r0, r4, #36	; 0x24
   11d04:	mov	r9, #0
   11d08:	str	r0, [sp, #36]	; 0x24
   11d0c:	ldr	r8, [r7]
   11d10:	ldr	sl, [r7, #8]
   11d14:	ldr	r0, [r8, #12]
   11d18:	ldrb	r1, [r0]
   11d1c:	sub	r1, r1, #65	; 0x41
   11d20:	cmp	r1, #25
   11d24:	bhi	12788 <__errno_location@plt+0x13cc>
   11d28:	add	r2, pc, #0
   11d2c:	ldr	pc, [r2, r1, lsl #2]
   11d30:	muleq	r1, r8, sp
   11d34:	andeq	r2, r1, r8, lsl #15
   11d38:	andeq	r1, r1, r8, lsr #31
   11d3c:	andeq	r2, r1, r8, lsl #15
   11d40:	andeq	r2, r1, r8, lsl #15
   11d44:	andeq	r1, r1, r8, ror lr
   11d48:	andeq	r2, r1, r8, lsl #15
   11d4c:	andeq	r2, r1, r8, lsl #15
   11d50:	andeq	r2, r1, r8, lsl #15
   11d54:	andeq	r2, r1, r8, lsl #15
   11d58:	andeq	r2, r1, ip, ror r0
   11d5c:	andeq	r2, r1, r8, lsl #15
   11d60:	andeq	r2, r1, r8, lsl #15
   11d64:	andeq	r2, r1, r8, lsl #15
   11d68:	andeq	r2, r1, r8, lsl #15
   11d6c:	andeq	r2, r1, r8, lsl #15
   11d70:	andeq	r2, r1, r8, lsl #15
   11d74:	andeq	r2, r1, r8, lsl #15
   11d78:	andeq	r2, r1, r0, ror #2
   11d7c:	andeq	r2, r1, r8, lsl #15
   11d80:	andeq	r2, r1, r8, lsl #15
   11d84:	andeq	r2, r1, r8, lsl #15
   11d88:	andeq	r2, r1, r8, lsl #15
   11d8c:	andeq	r2, r1, r8, lsl #15
   11d90:	andeq	r2, r1, r8, lsl #15
   11d94:	andeq	r1, r1, r8, lsr #29
   11d98:	ldr	r0, [r8, #36]	; 0x24
   11d9c:	cmp	r0, #2
   11da0:	bne	122f0 <__errno_location@plt+0xf34>
   11da4:	ldr	r0, [r8, #16]
   11da8:	cmp	r0, #5
   11dac:	bne	122f8 <__errno_location@plt+0xf3c>
   11db0:	movw	r0, #40692	; 0x9ef4
   11db4:	str	r7, [sp, #44]	; 0x2c
   11db8:	ldr	r7, [r8, #20]
   11dbc:	ldr	r5, [r8, #24]
   11dc0:	mov	r1, #80	; 0x50
   11dc4:	movt	r0, #2
   11dc8:	ldrb	r6, [r0]
   11dcc:	mov	r0, #1
   11dd0:	bl	111a0 <calloc@plt>
   11dd4:	mov	r9, r0
   11dd8:	cmp	r6, #0
   11ddc:	beq	1264c <__errno_location@plt+0x1290>
   11de0:	cmp	r9, #0
   11de4:	beq	12a0c <__errno_location@plt+0x1650>
   11de8:	str	r4, [r9, #12]
   11dec:	bl	11314 <rb_new_rawbuffer@plt>
   11df0:	str	r0, [r9, #16]
   11df4:	bl	11314 <rb_new_rawbuffer@plt>
   11df8:	str	r0, [r9, #20]
   11dfc:	mvn	r0, #0
   11e00:	str	r0, [r9, #24]
   11e04:	mov	r0, r7
   11e08:	str	r7, [r9, #28]
   11e0c:	str	r5, [r9, #32]
   11e10:	bl	111ac <rb_set_nb@plt>
   11e14:	mov	r0, r5
   11e18:	bl	111ac <rb_set_nb@plt>
   11e1c:	ldr	r0, [r8, #12]
   11e20:	movw	r1, #19923	; 0x4dd3
   11e24:	movw	r6, #16692	; 0x4134
   11e28:	mov	r3, #0
   11e2c:	movt	r1, #4194	; 0x1062
   11e30:	movt	r6, #2
   11e34:	ldr	r0, [r0, #1]
   11e38:	umull	r1, r2, r0, r1
   11e3c:	str	r0, [r9, #24]
   11e40:	str	r9, [r9]
   11e44:	str	r3, [r9, #4]
   11e48:	lsr	r1, r2, #7
   11e4c:	mov	r2, #2000	; 0x7d0
   11e50:	mls	r0, r1, r2, r0
   11e54:	mov	r1, r6
   11e58:	add	r0, r0, r0, lsl #1
   11e5c:	ldr	r2, [r1, r0, lsl #2]!
   11e60:	cmp	r2, #0
   11e64:	str	r2, [r9, #8]
   11e68:	beq	12810 <__errno_location@plt+0x1454>
   11e6c:	add	r2, r2, #4
   11e70:	str	r9, [r2]
   11e74:	b	12820 <__errno_location@plt+0x1464>
   11e78:	ldr	r1, [r8, #16]
   11e7c:	cmp	r1, #5
   11e80:	bne	12294 <__errno_location@plt+0xed8>
   11e84:	ldr	r0, [r0, #1]
   11e88:	movw	r1, #40692	; 0x9ef4
   11e8c:	movt	r1, #2
   11e90:	str	r0, [r1, #12]
   11e94:	ldr	r0, [r7, #8]
   11e98:	ldr	r1, [r7, #4]
   11e9c:	cmp	r0, #0
   11ea0:	bne	12798 <__errno_location@plt+0x13dc>
   11ea4:	b	12984 <__errno_location@plt+0x15c8>
   11ea8:	ldr	r0, [r8, #36]	; 0x24
   11eac:	cmp	r0, #2
   11eb0:	bne	122c4 <__errno_location@plt+0xf08>
   11eb4:	ldr	r0, [r8, #16]
   11eb8:	cmp	r0, #6
   11ebc:	bcc	122cc <__errno_location@plt+0xf10>
   11ec0:	ldr	r6, [r8, #20]
   11ec4:	ldr	r5, [r8, #24]
   11ec8:	mov	r0, #1
   11ecc:	mov	r1, #80	; 0x50
   11ed0:	str	r7, [sp, #44]	; 0x2c
   11ed4:	bl	111a0 <calloc@plt>
   11ed8:	cmp	r0, #0
   11edc:	beq	12a0c <__errno_location@plt+0x1650>
   11ee0:	mov	r7, r0
   11ee4:	str	r4, [r0, #12]
   11ee8:	bl	11314 <rb_new_rawbuffer@plt>
   11eec:	str	r0, [r7, #16]
   11ef0:	bl	11314 <rb_new_rawbuffer@plt>
   11ef4:	str	r0, [r7, #20]
   11ef8:	mvn	r0, #0
   11efc:	str	r0, [r7, #24]
   11f00:	mov	r0, r6
   11f04:	str	r6, [r7, #28]
   11f08:	str	r5, [r7, #32]
   11f0c:	bl	111ac <rb_set_nb@plt>
   11f10:	mov	r0, r5
   11f14:	bl	111ac <rb_set_nb@plt>
   11f18:	ldr	r0, [r7, #28]
   11f1c:	bl	110d4 <rb_get_type@plt>
   11f20:	cmp	r0, #64	; 0x40
   11f24:	bne	11f38 <__errno_location@plt+0xb7c>
   11f28:	ldr	r0, [r7, #28]
   11f2c:	mov	r1, #4
   11f30:	bl	11224 <rb_set_type@plt>
   11f34:	ldr	r5, [r7, #32]
   11f38:	mov	r0, r5
   11f3c:	bl	110d4 <rb_get_type@plt>
   11f40:	cmp	r0, #64	; 0x40
   11f44:	bne	11f54 <__errno_location@plt+0xb98>
   11f48:	mov	r0, r5
   11f4c:	mov	r1, #4
   11f50:	bl	11224 <rb_set_type@plt>
   11f54:	ldr	r5, [r8, #12]
   11f58:	movw	r1, #19923	; 0x4dd3
   11f5c:	movw	r6, #16692	; 0x4134
   11f60:	movt	r1, #4194	; 0x1062
   11f64:	movt	r6, #2
   11f68:	ldr	r0, [r5, #1]
   11f6c:	umull	r1, r2, r0, r1
   11f70:	str	r0, [r7, #24]
   11f74:	stm	r7, {r7, r9}
   11f78:	lsr	r1, r2, #7
   11f7c:	mov	r2, #2000	; 0x7d0
   11f80:	mls	r0, r1, r2, r0
   11f84:	mov	r1, r6
   11f88:	add	r0, r0, r0, lsl #1
   11f8c:	ldr	r2, [r1, r0, lsl #2]!
   11f90:	cmp	r2, #0
   11f94:	str	r2, [r7, #8]
   11f98:	beq	12534 <__errno_location@plt+0x1178>
   11f9c:	add	r2, r2, #4
   11fa0:	str	r7, [r2]
   11fa4:	b	12544 <__errno_location@plt+0x1188>
   11fa8:	ldr	r0, [r8, #16]
   11fac:	cmp	r0, #5
   11fb0:	bne	1231c <__errno_location@plt+0xf60>
   11fb4:	movw	r0, #40692	; 0x9ef4
   11fb8:	ldr	r9, [r8, #20]
   11fbc:	ldr	r6, [r8, #24]
   11fc0:	mov	r1, #80	; 0x50
   11fc4:	str	r7, [sp, #44]	; 0x2c
   11fc8:	movt	r0, #2
   11fcc:	ldrb	r5, [r0]
   11fd0:	mov	r0, #1
   11fd4:	bl	111a0 <calloc@plt>
   11fd8:	mov	r7, r0
   11fdc:	cmp	r5, #0
   11fe0:	beq	12404 <__errno_location@plt+0x1048>
   11fe4:	cmp	r7, #0
   11fe8:	beq	12a0c <__errno_location@plt+0x1650>
   11fec:	str	r4, [r7, #12]
   11ff0:	bl	11314 <rb_new_rawbuffer@plt>
   11ff4:	str	r0, [r7, #16]
   11ff8:	bl	11314 <rb_new_rawbuffer@plt>
   11ffc:	str	r0, [r7, #20]
   12000:	mvn	r0, #0
   12004:	str	r0, [r7, #24]
   12008:	mov	r0, r9
   1200c:	str	r9, [r7, #28]
   12010:	str	r6, [r7, #32]
   12014:	bl	111ac <rb_set_nb@plt>
   12018:	mov	r0, r6
   1201c:	bl	111ac <rb_set_nb@plt>
   12020:	ldr	r0, [r8, #12]
   12024:	movw	r1, #19923	; 0x4dd3
   12028:	movw	r6, #16692	; 0x4134
   1202c:	mov	r3, #0
   12030:	movt	r1, #4194	; 0x1062
   12034:	movt	r6, #2
   12038:	ldr	r0, [r0, #1]
   1203c:	umull	r1, r2, r0, r1
   12040:	str	r0, [r7, #24]
   12044:	str	r7, [r7]
   12048:	str	r3, [r7, #4]
   1204c:	lsr	r1, r2, #7
   12050:	mov	r2, #2000	; 0x7d0
   12054:	mls	r0, r1, r2, r0
   12058:	mov	r1, r6
   1205c:	add	r0, r0, r0, lsl #1
   12060:	ldr	r2, [r1, r0, lsl #2]!
   12064:	cmp	r2, #0
   12068:	str	r2, [r7, #8]
   1206c:	beq	1249c <__errno_location@plt+0x10e0>
   12070:	add	r2, r2, #4
   12074:	str	r7, [r2]
   12078:	b	124ac <__errno_location@plt+0x10f0>
   1207c:	movw	r1, #40692	; 0x9ef4
   12080:	movt	r1, #2
   12084:	ldrb	r1, [r1]
   12088:	cmp	r1, #0
   1208c:	beq	1234c <__errno_location@plt+0xf90>
   12090:	add	r5, r0, #2
   12094:	mov	r0, r5
   12098:	bl	11230 <strlen@plt>
   1209c:	add	r0, r0, r5
   120a0:	add	r6, r0, #1
   120a4:	mov	r0, r6
   120a8:	bl	11230 <strlen@plt>
   120ac:	add	r1, r0, r6
   120b0:	str	r0, [sp, #40]	; 0x28
   120b4:	str	r7, [sp, #44]	; 0x2c
   120b8:	add	r7, r1, #1
   120bc:	mov	r0, r7
   120c0:	bl	11230 <strlen@plt>
   120c4:	str	sl, [sp, #48]	; 0x30
   120c8:	mov	sl, r0
   120cc:	add	r0, r0, r7
   120d0:	add	r9, r0, #1
   120d4:	mov	r0, r9
   120d8:	bl	11230 <strlen@plt>
   120dc:	cmp	r0, #0
   120e0:	moveq	r9, r0
   120e4:	ldr	r0, [sp, #40]	; 0x28
   120e8:	cmp	sl, #0
   120ec:	moveq	r7, sl
   120f0:	ldr	sl, [sp, #48]	; 0x30
   120f4:	mov	r3, r9
   120f8:	mov	r9, #0
   120fc:	mov	r2, r7
   12100:	ldr	r7, [sp, #44]	; 0x2c
   12104:	cmp	r0, #0
   12108:	mov	r0, r5
   1210c:	moveq	r6, r5
   12110:	mov	r1, r6
   12114:	bl	113a4 <rb_setup_ssl_server@plt>
   12118:	cmp	r0, #0
   1211c:	bne	12788 <__errno_location@plt+0x13cc>
   12120:	mov	r0, #1
   12124:	mov	r1, #40	; 0x28
   12128:	bl	111a0 <calloc@plt>
   1212c:	cmp	r0, #0
   12130:	beq	12a0c <__errno_location@plt+0x1650>
   12134:	mov	r5, r0
   12138:	mov	r0, #1
   1213c:	mov	r1, #1
   12140:	bl	111a0 <calloc@plt>
   12144:	cmp	r0, #0
   12148:	beq	12a0c <__errno_location@plt+0x1650>
   1214c:	mov	r1, #1
   12150:	str	r0, [r5, #12]
   12154:	str	r1, [r5, #16]
   12158:	mov	r1, #73	; 0x49
   1215c:	b	12924 <__errno_location@plt+0x1568>
   12160:	ldr	r1, [r0, #1]
   12164:	movw	r2, #19923	; 0x4dd3
   12168:	str	sl, [sp, #48]	; 0x30
   1216c:	mov	sl, r7
   12170:	movt	r2, #4194	; 0x1062
   12174:	umull	r2, r3, r1, r2
   12178:	lsr	r2, r3, #7
   1217c:	mov	r3, #2000	; 0x7d0
   12180:	mls	r2, r2, r3, r1
   12184:	movw	r3, #16692	; 0x4134
   12188:	movt	r3, #2
   1218c:	add	r2, r2, r2, lsl #1
   12190:	ldr	r2, [r3, r2, lsl #2]
   12194:	cmp	r2, #0
   12198:	bne	121ac <__errno_location@plt+0xdf0>
   1219c:	b	12780 <__errno_location@plt+0x13c4>
   121a0:	ldr	r2, [r2, #8]
   121a4:	cmp	r2, #0
   121a8:	beq	12780 <__errno_location@plt+0x13c4>
   121ac:	ldr	r3, [r2]
   121b0:	ldr	r7, [r3, #24]
   121b4:	cmp	r7, r1
   121b8:	bne	121a0 <__errno_location@plt+0xde4>
   121bc:	ldrb	r7, [r3, #72]	; 0x48
   121c0:	tst	r7, #8
   121c4:	bne	121a0 <__errno_location@plt+0xde4>
   121c8:	add	r2, r3, #56	; 0x38
   121cc:	add	r5, r3, #40	; 0x28
   121d0:	add	r1, r3, #48	; 0x30
   121d4:	add	r3, r3, #64	; 0x40
   121d8:	ldrd	r6, [r3]
   121dc:	ldm	r1, {r1, r3}
   121e0:	ldm	r2, {r2, r9}
   121e4:	ldm	r5, {ip, lr}
   121e8:	stm	sp, {r6, r7}
   121ec:	str	r1, [sp, #8]
   121f0:	add	r1, sp, #16
   121f4:	str	r3, [sp, #12]
   121f8:	add	r6, sp, #56	; 0x38
   121fc:	add	r3, r0, #5
   12200:	stm	r1, {r2, r9, ip, lr}
   12204:	movw	r2, #15880	; 0x3e08
   12208:	mov	r0, r6
   1220c:	mov	r1, #512	; 0x200
   12210:	movt	r2, #1
   12214:	bl	11368 <snprintf@plt>
   12218:	vst1.64	{d8-d9}, [r5]!
   1221c:	mov	r0, r6
   12220:	vst1.64	{d8-d9}, [r5]
   12224:	bl	11230 <strlen@plt>
   12228:	mov	r6, r0
   1222c:	mov	r0, #1
   12230:	mov	r1, #40	; 0x28
   12234:	bl	111a0 <calloc@plt>
   12238:	cmp	r0, #0
   1223c:	beq	12a0c <__errno_location@plt+0x1650>
   12240:	add	r6, r6, #1
   12244:	mov	r5, r0
   12248:	mov	r0, #1
   1224c:	mov	r1, r6
   12250:	bl	111a0 <calloc@plt>
   12254:	cmp	r0, #0
   12258:	beq	12a0c <__errno_location@plt+0x1650>
   1225c:	add	r1, sp, #56	; 0x38
   12260:	mov	r2, r6
   12264:	str	r0, [r5, #12]
   12268:	str	r6, [r5, #16]
   1226c:	bl	11248 <memcpy@plt>
   12270:	ldr	r0, [r4, #40]	; 0x28
   12274:	mov	r9, #0
   12278:	str	r5, [r5]
   1227c:	cmp	r0, #0
   12280:	str	r0, [r5, #4]
   12284:	beq	12754 <__errno_location@plt+0x1398>
   12288:	add	r0, r0, #8
   1228c:	str	r5, [r0]
   12290:	b	12764 <__errno_location@plt+0x13a8>
   12294:	ldr	r0, [r8, #36]	; 0x24
   12298:	cmp	r0, #1
   1229c:	blt	12788 <__errno_location@plt+0x13cc>
   122a0:	add	r5, r8, #20
   122a4:	mov	r6, #0
   122a8:	ldr	r0, [r5, r6, lsl #2]
   122ac:	bl	11254 <rb_close@plt>
   122b0:	ldr	r0, [r8, #36]	; 0x24
   122b4:	add	r6, r6, #1
   122b8:	cmp	r6, r0
   122bc:	blt	122a8 <__errno_location@plt+0xeec>
   122c0:	b	12788 <__errno_location@plt+0x13cc>
   122c4:	cmp	r0, #1
   122c8:	blt	12788 <__errno_location@plt+0x13cc>
   122cc:	add	r5, r8, #20
   122d0:	mov	r6, #0
   122d4:	ldr	r0, [r5, r6, lsl #2]
   122d8:	bl	11254 <rb_close@plt>
   122dc:	ldr	r0, [r8, #36]	; 0x24
   122e0:	add	r6, r6, #1
   122e4:	cmp	r6, r0
   122e8:	blt	122d4 <__errno_location@plt+0xf18>
   122ec:	b	12788 <__errno_location@plt+0x13cc>
   122f0:	cmp	r0, #1
   122f4:	blt	12788 <__errno_location@plt+0x13cc>
   122f8:	add	r5, r8, #20
   122fc:	mov	r6, #0
   12300:	ldr	r0, [r5, r6, lsl #2]
   12304:	bl	11254 <rb_close@plt>
   12308:	ldr	r0, [r8, #36]	; 0x24
   1230c:	add	r6, r6, #1
   12310:	cmp	r6, r0
   12314:	blt	12300 <__errno_location@plt+0xf44>
   12318:	b	12788 <__errno_location@plt+0x13cc>
   1231c:	ldr	r0, [r8, #36]	; 0x24
   12320:	cmp	r0, #1
   12324:	blt	12788 <__errno_location@plt+0x13cc>
   12328:	add	r5, r8, #20
   1232c:	mov	r6, #0
   12330:	ldr	r0, [r5, r6, lsl #2]
   12334:	bl	11254 <rb_close@plt>
   12338:	ldr	r0, [r8, #36]	; 0x24
   1233c:	add	r6, r6, #1
   12340:	cmp	r6, r0
   12344:	blt	12330 <__errno_location@plt+0xf74>
   12348:	b	12788 <__errno_location@plt+0x13cc>
   1234c:	cmp	r8, #0
   12350:	beq	12724 <__errno_location@plt+0x1368>
   12354:	str	sl, [sp, #48]	; 0x30
   12358:	mov	sl, r7
   1235c:	ldr	r7, [r8, #20]
   12360:	ldr	r6, [r8, #24]
   12364:	mov	r0, #1
   12368:	mov	r1, #80	; 0x50
   1236c:	bl	111a0 <calloc@plt>
   12370:	cmp	r0, #0
   12374:	beq	12a0c <__errno_location@plt+0x1650>
   12378:	mov	r5, r0
   1237c:	str	r4, [r0, #12]
   12380:	bl	11314 <rb_new_rawbuffer@plt>
   12384:	str	r0, [r5, #16]
   12388:	bl	11314 <rb_new_rawbuffer@plt>
   1238c:	str	r0, [r5, #20]
   12390:	mvn	r0, #0
   12394:	str	r0, [r5, #24]
   12398:	mov	r0, r7
   1239c:	str	r7, [r5, #28]
   123a0:	str	r6, [r5, #32]
   123a4:	bl	111ac <rb_set_nb@plt>
   123a8:	mov	r0, r6
   123ac:	bl	111ac <rb_set_nb@plt>
   123b0:	ldr	r0, [r8, #12]
   123b4:	movw	r1, #19923	; 0x4dd3
   123b8:	movw	r7, #16692	; 0x4134
   123bc:	movt	r1, #4194	; 0x1062
   123c0:	movt	r7, #2
   123c4:	ldr	r0, [r0, #1]
   123c8:	umull	r1, r2, r0, r1
   123cc:	str	r0, [r5, #24]
   123d0:	stm	r5, {r5, r9}
   123d4:	lsr	r1, r2, #7
   123d8:	mov	r2, #2000	; 0x7d0
   123dc:	mls	r0, r1, r2, r0
   123e0:	mov	r1, r7
   123e4:	add	r0, r0, r0, lsl #1
   123e8:	ldr	r2, [r1, r0, lsl #2]!
   123ec:	cmp	r2, #0
   123f0:	str	r2, [r5, #8]
   123f4:	beq	126e4 <__errno_location@plt+0x1328>
   123f8:	add	r2, r2, #4
   123fc:	str	r5, [r2]
   12400:	b	126f4 <__errno_location@plt+0x1338>
   12404:	cmp	r7, #0
   12408:	beq	12a0c <__errno_location@plt+0x1650>
   1240c:	str	r4, [r7, #12]
   12410:	bl	11314 <rb_new_rawbuffer@plt>
   12414:	str	r0, [r7, #16]
   12418:	bl	11314 <rb_new_rawbuffer@plt>
   1241c:	str	r0, [r7, #20]
   12420:	mvn	r0, #0
   12424:	str	r0, [r7, #24]
   12428:	mov	r0, r9
   1242c:	str	r9, [r7, #28]
   12430:	str	r6, [r7, #32]
   12434:	bl	111ac <rb_set_nb@plt>
   12438:	mov	r0, r6
   1243c:	bl	111ac <rb_set_nb@plt>
   12440:	ldr	r0, [r8, #12]
   12444:	movw	r1, #19923	; 0x4dd3
   12448:	movw	r6, #16692	; 0x4134
   1244c:	mov	r9, #0
   12450:	movt	r1, #4194	; 0x1062
   12454:	movt	r6, #2
   12458:	ldr	r0, [r0, #1]
   1245c:	umull	r1, r2, r0, r1
   12460:	str	r0, [r7, #24]
   12464:	str	r7, [r7]
   12468:	str	r9, [r7, #4]
   1246c:	lsr	r1, r2, #7
   12470:	mov	r2, #2000	; 0x7d0
   12474:	mls	r0, r1, r2, r0
   12478:	mov	r1, r6
   1247c:	add	r0, r0, r0, lsl #1
   12480:	ldr	r2, [r1, r0, lsl #2]!
   12484:	cmp	r2, #0
   12488:	str	r2, [r7, #8]
   1248c:	beq	127a4 <__errno_location@plt+0x13e8>
   12490:	add	r2, r2, #4
   12494:	str	r7, [r2]
   12498:	b	127b4 <__errno_location@plt+0x13f8>
   1249c:	add	r2, r6, r0, lsl #2
   124a0:	ldr	r3, [r2, #4]!
   124a4:	cmp	r3, #0
   124a8:	streq	r7, [r2]
   124ac:	add	r0, r6, r0, lsl #2
   124b0:	str	r7, [r1]
   124b4:	ldr	r1, [r0, #8]
   124b8:	add	r1, r1, #1
   124bc:	str	r1, [r0, #8]
   124c0:	mov	r0, #1
   124c4:	strb	r0, [r7, #72]	; 0x48
   124c8:	mov	r0, r9
   124cc:	bl	110d4 <rb_get_type@plt>
   124d0:	cmp	r0, #64	; 0x40
   124d4:	bne	124e4 <__errno_location@plt+0x1128>
   124d8:	ldr	r0, [r7, #28]
   124dc:	mov	r1, #4
   124e0:	bl	11224 <rb_set_type@plt>
   124e4:	ldr	r0, [r7, #32]
   124e8:	bl	110d4 <rb_get_type@plt>
   124ec:	cmp	r0, #64	; 0x40
   124f0:	mov	r9, #0
   124f4:	bne	12504 <__errno_location@plt+0x1148>
   124f8:	ldr	r0, [r7, #32]
   124fc:	mov	r1, #4
   12500:	bl	11224 <rb_set_type@plt>
   12504:	ldr	r0, [r8, #20]
   12508:	movw	r1, #14608	; 0x3910
   1250c:	mov	r2, r7
   12510:	mov	r3, #10
   12514:	movt	r1, #1
   12518:	bl	112fc <rb_ssl_start_connected@plt>
   1251c:	ldr	r7, [sp, #44]	; 0x2c
   12520:	ldr	r0, [r7, #8]
   12524:	ldr	r1, [r7, #4]
   12528:	cmp	r0, #0
   1252c:	bne	12798 <__errno_location@plt+0x13dc>
   12530:	b	12984 <__errno_location@plt+0x15c8>
   12534:	add	r2, r6, r0, lsl #2
   12538:	ldr	r3, [r2, #4]!
   1253c:	cmp	r3, #0
   12540:	streq	r7, [r2]
   12544:	add	r0, r6, r0, lsl #2
   12548:	str	r7, [r1]
   1254c:	str	sl, [sp, #48]	; 0x30
   12550:	mov	sl, r5
   12554:	ldr	r1, [r0, #8]
   12558:	add	r1, r1, #1
   1255c:	str	r1, [r0, #8]
   12560:	ldrb	r0, [r7, #72]	; 0x48
   12564:	mov	r1, #112	; 0x70
   12568:	ldrb	r5, [r5, #5]
   1256c:	ldr	r9, [r8, #16]
   12570:	orr	r0, r0, #2
   12574:	strb	r0, [r7, #72]	; 0x48
   12578:	mov	r0, #1
   1257c:	bl	111a0 <calloc@plt>
   12580:	cmp	r0, #0
   12584:	beq	12a0c <__errno_location@plt+0x1650>
   12588:	mov	r6, r0
   1258c:	sub	r0, r9, #6
   12590:	movw	r9, #15264	; 0x3ba0
   12594:	movw	r1, #15905	; 0x3e21
   12598:	mov	r2, #56	; 0x38
   1259c:	str	r0, [sp, #40]	; 0x28
   125a0:	mov	r0, #1
   125a4:	movt	r9, #1
   125a8:	movt	r1, #1
   125ac:	str	r6, [r7, #76]	; 0x4c
   125b0:	str	r0, [r6, #44]	; 0x2c
   125b4:	movw	r0, #15232	; 0x3b80
   125b8:	movt	r0, #1
   125bc:	str	r0, [r6, #32]
   125c0:	mov	r0, r6
   125c4:	str	r9, [r6, #36]	; 0x24
   125c8:	bl	1132c <inflateInit_@plt>
   125cc:	mov	r0, #1
   125d0:	cmp	r5, #9
   125d4:	movw	r2, #15905	; 0x3e21
   125d8:	mov	r3, #56	; 0x38
   125dc:	str	r0, [r6, #100]	; 0x64
   125e0:	movw	r0, #15232	; 0x3b80
   125e4:	movwhi	r5, #255	; 0xff
   125e8:	movt	r2, #1
   125ec:	movt	r0, #1
   125f0:	mov	r1, r5
   125f4:	str	r0, [r6, #88]	; 0x58
   125f8:	mov	r0, #0
   125fc:	str	r9, [r6, #92]	; 0x5c
   12600:	str	r0, [r6, #76]	; 0x4c
   12604:	str	r0, [r6, #64]	; 0x40
   12608:	ldr	r0, [r7, #76]	; 0x4c
   1260c:	add	r0, r0, #56	; 0x38
   12610:	bl	11194 <deflateInit_@plt>
   12614:	ldr	r2, [sp, #40]	; 0x28
   12618:	cmp	r2, #0
   1261c:	addne	r1, sl, #6
   12620:	movne	r0, r7
   12624:	blne	13718 <__errno_location@plt+0x235c>
   12628:	ldr	r0, [r7, #28]
   1262c:	mov	r1, r7
   12630:	bl	13174 <__errno_location@plt+0x1db8>
   12634:	ldr	r0, [r7, #32]
   12638:	mov	r1, r7
   1263c:	bl	1333c <__errno_location@plt+0x1f80>
   12640:	ldr	r7, [sp, #44]	; 0x2c
   12644:	mov	r9, #0
   12648:	b	12784 <__errno_location@plt+0x13c8>
   1264c:	cmp	r9, #0
   12650:	beq	12a0c <__errno_location@plt+0x1650>
   12654:	str	r4, [r9, #12]
   12658:	bl	11314 <rb_new_rawbuffer@plt>
   1265c:	str	r0, [r9, #16]
   12660:	bl	11314 <rb_new_rawbuffer@plt>
   12664:	str	r0, [r9, #20]
   12668:	mvn	r0, #0
   1266c:	str	r0, [r9, #24]
   12670:	mov	r0, r7
   12674:	str	r7, [r9, #28]
   12678:	str	r5, [r9, #32]
   1267c:	bl	111ac <rb_set_nb@plt>
   12680:	mov	r0, r5
   12684:	bl	111ac <rb_set_nb@plt>
   12688:	ldr	r0, [r8, #12]
   1268c:	movw	r1, #19923	; 0x4dd3
   12690:	movw	r7, #16692	; 0x4134
   12694:	mov	r3, #0
   12698:	movt	r1, #4194	; 0x1062
   1269c:	movt	r7, #2
   126a0:	ldr	r0, [r0, #1]
   126a4:	umull	r1, r2, r0, r1
   126a8:	str	r0, [r9, #24]
   126ac:	str	r9, [r9]
   126b0:	str	r3, [r9, #4]
   126b4:	lsr	r1, r2, #7
   126b8:	mov	r2, #2000	; 0x7d0
   126bc:	mls	r0, r1, r2, r0
   126c0:	mov	r1, r7
   126c4:	add	r0, r0, r0, lsl #1
   126c8:	ldr	r2, [r1, r0, lsl #2]!
   126cc:	cmp	r2, #0
   126d0:	str	r2, [r9, #8]
   126d4:	beq	128a8 <__errno_location@plt+0x14ec>
   126d8:	add	r2, r2, #4
   126dc:	str	r9, [r2]
   126e0:	b	128b8 <__errno_location@plt+0x14fc>
   126e4:	add	r2, r7, r0, lsl #2
   126e8:	ldr	r3, [r2, #4]!
   126ec:	cmp	r3, #0
   126f0:	streq	r5, [r2]
   126f4:	add	r0, r7, r0, lsl #2
   126f8:	str	r5, [r1]
   126fc:	movw	r2, #15912	; 0x3e28
   12700:	movt	r2, #1
   12704:	ldr	r1, [r0, #8]
   12708:	add	r1, r1, #1
   1270c:	str	r1, [r0, #8]
   12710:	mov	r0, r5
   12714:	mov	r1, #1
   12718:	bl	12a18 <__errno_location@plt+0x165c>
   1271c:	mov	r7, sl
   12720:	ldr	sl, [sp, #48]	; 0x30
   12724:	mov	r0, #1
   12728:	mov	r1, #40	; 0x28
   1272c:	bl	111a0 <calloc@plt>
   12730:	cmp	r0, #0
   12734:	beq	12a0c <__errno_location@plt+0x1650>
   12738:	mov	r5, r0
   1273c:	mov	r0, #1
   12740:	mov	r1, #1
   12744:	bl	111a0 <calloc@plt>
   12748:	cmp	r0, #0
   1274c:	bne	12914 <__errno_location@plt+0x1558>
   12750:	b	12a0c <__errno_location@plt+0x1650>
   12754:	ldr	r0, [sp, #36]	; 0x24
   12758:	ldr	r0, [r0]
   1275c:	cmp	r0, #0
   12760:	beq	129dc <__errno_location@plt+0x1620>
   12764:	str	r5, [r4, #40]	; 0x28
   12768:	ldr	r1, [r4, #44]	; 0x2c
   1276c:	ldr	r0, [r4, #16]
   12770:	add	r1, r1, #1
   12774:	str	r1, [r4, #44]	; 0x2c
   12778:	mov	r1, r4
   1277c:	bl	12d4c <__errno_location@plt+0x1990>
   12780:	mov	r7, sl
   12784:	ldr	sl, [sp, #48]	; 0x30
   12788:	ldr	r0, [r7, #8]
   1278c:	ldr	r1, [r7, #4]
   12790:	cmp	r0, #0
   12794:	beq	12984 <__errno_location@plt+0x15c8>
   12798:	str	r1, [r0, #4]
   1279c:	ldr	r1, [r7, #4]
   127a0:	b	12988 <__errno_location@plt+0x15cc>
   127a4:	add	r2, r6, r0, lsl #2
   127a8:	ldr	r3, [r2, #4]!
   127ac:	cmp	r3, #0
   127b0:	streq	r7, [r2]
   127b4:	add	r0, r6, r0, lsl #2
   127b8:	str	r7, [r1]
   127bc:	movw	r2, #15912	; 0x3e28
   127c0:	movt	r2, #1
   127c4:	ldr	r1, [r0, #8]
   127c8:	add	r1, r1, #1
   127cc:	str	r1, [r0, #8]
   127d0:	mov	r0, r7
   127d4:	mov	r1, #1
   127d8:	bl	12a18 <__errno_location@plt+0x165c>
   127dc:	mov	r0, #1
   127e0:	mov	r1, #40	; 0x28
   127e4:	bl	111a0 <calloc@plt>
   127e8:	cmp	r0, #0
   127ec:	beq	12a0c <__errno_location@plt+0x1650>
   127f0:	mov	r5, r0
   127f4:	mov	r0, #1
   127f8:	mov	r1, #1
   127fc:	bl	111a0 <calloc@plt>
   12800:	ldr	r7, [sp, #44]	; 0x2c
   12804:	cmp	r0, #0
   12808:	bne	12914 <__errno_location@plt+0x1558>
   1280c:	b	12a0c <__errno_location@plt+0x1650>
   12810:	add	r2, r6, r0, lsl #2
   12814:	ldr	r3, [r2, #4]!
   12818:	cmp	r3, #0
   1281c:	streq	r9, [r2]
   12820:	add	r0, r6, r0, lsl #2
   12824:	str	r9, [r1]
   12828:	ldr	r1, [r0, #8]
   1282c:	add	r1, r1, #1
   12830:	str	r1, [r0, #8]
   12834:	mov	r0, #1
   12838:	strb	r0, [r9, #72]	; 0x48
   1283c:	mov	r0, r7
   12840:	bl	110d4 <rb_get_type@plt>
   12844:	tst	r0, #64	; 0x40
   12848:	beq	12858 <__errno_location@plt+0x149c>
   1284c:	ldr	r0, [r9, #28]
   12850:	mov	r1, #4
   12854:	bl	11224 <rb_set_type@plt>
   12858:	ldr	r0, [r9, #32]
   1285c:	bl	110d4 <rb_get_type@plt>
   12860:	ldr	r7, [sp, #44]	; 0x2c
   12864:	cmp	r0, #64	; 0x40
   12868:	bne	12878 <__errno_location@plt+0x14bc>
   1286c:	ldr	r0, [r9, #32]
   12870:	mov	r1, #4
   12874:	bl	11224 <rb_set_type@plt>
   12878:	ldr	r0, [r8, #20]
   1287c:	movw	r1, #11940	; 0x2ea4
   12880:	mov	r2, r9
   12884:	mov	r3, #10
   12888:	movt	r1, #1
   1288c:	bl	11344 <rb_ssl_start_accepted@plt>
   12890:	mov	r9, #0
   12894:	ldr	r0, [r7, #8]
   12898:	ldr	r1, [r7, #4]
   1289c:	cmp	r0, #0
   128a0:	bne	12798 <__errno_location@plt+0x13dc>
   128a4:	b	12984 <__errno_location@plt+0x15c8>
   128a8:	add	r2, r7, r0, lsl #2
   128ac:	ldr	r3, [r2, #4]!
   128b0:	cmp	r3, #0
   128b4:	streq	r9, [r2]
   128b8:	add	r0, r7, r0, lsl #2
   128bc:	str	r9, [r1]
   128c0:	movw	r2, #15912	; 0x3e28
   128c4:	movt	r2, #1
   128c8:	ldr	r1, [r0, #8]
   128cc:	add	r1, r1, #1
   128d0:	str	r1, [r0, #8]
   128d4:	mov	r0, r9
   128d8:	mov	r1, #1
   128dc:	bl	12a18 <__errno_location@plt+0x165c>
   128e0:	mov	r0, #1
   128e4:	mov	r1, #40	; 0x28
   128e8:	bl	111a0 <calloc@plt>
   128ec:	cmp	r0, #0
   128f0:	beq	12a0c <__errno_location@plt+0x1650>
   128f4:	mov	r5, r0
   128f8:	mov	r0, #1
   128fc:	mov	r1, #1
   12900:	bl	111a0 <calloc@plt>
   12904:	ldr	r7, [sp, #44]	; 0x2c
   12908:	cmp	r0, #0
   1290c:	mov	r9, #0
   12910:	beq	12a0c <__errno_location@plt+0x1650>
   12914:	mov	r1, #1
   12918:	str	r0, [r5, #12]
   1291c:	str	r1, [r5, #16]
   12920:	mov	r1, #78	; 0x4e
   12924:	strb	r1, [r0]
   12928:	ldr	r0, [r4, #40]	; 0x28
   1292c:	str	r5, [r5]
   12930:	cmp	r0, #0
   12934:	str	r0, [r5, #4]
   12938:	beq	12948 <__errno_location@plt+0x158c>
   1293c:	add	r0, r0, #8
   12940:	str	r5, [r0]
   12944:	b	12958 <__errno_location@plt+0x159c>
   12948:	ldr	r0, [sp, #36]	; 0x24
   1294c:	ldr	r0, [r0]
   12950:	cmp	r0, #0
   12954:	beq	129d4 <__errno_location@plt+0x1618>
   12958:	str	r5, [r4, #40]	; 0x28
   1295c:	ldr	r1, [r4, #44]	; 0x2c
   12960:	ldr	r0, [r4, #16]
   12964:	add	r1, r1, #1
   12968:	str	r1, [r4, #44]	; 0x2c
   1296c:	mov	r1, r4
   12970:	bl	12d4c <__errno_location@plt+0x1990>
   12974:	ldr	r0, [r7, #8]
   12978:	ldr	r1, [r7, #4]
   1297c:	cmp	r0, #0
   12980:	bne	12798 <__errno_location@plt+0x13dc>
   12984:	str	r1, [r4, #28]
   12988:	cmp	r1, #0
   1298c:	ldr	r2, [sp, #52]	; 0x34
   12990:	addne	r2, r1, #8
   12994:	str	r0, [r2]
   12998:	str	r9, [r7, #4]
   1299c:	str	r9, [r7, #8]
   129a0:	ldr	r0, [r4, #32]
   129a4:	sub	r0, r0, #1
   129a8:	str	r0, [r4, #32]
   129ac:	ldr	r0, [r8, #12]
   129b0:	cmp	r0, #0
   129b4:	beq	129bc <__errno_location@plt+0x1600>
   129b8:	bl	111f4 <free@plt>
   129bc:	mov	r0, r8
   129c0:	bl	111f4 <free@plt>
   129c4:	cmp	sl, #0
   129c8:	mov	r7, sl
   129cc:	bne	11d0c <__errno_location@plt+0x950>
   129d0:	b	129e4 <__errno_location@plt+0x1628>
   129d4:	ldr	r0, [sp, #36]	; 0x24
   129d8:	b	12940 <__errno_location@plt+0x1584>
   129dc:	ldr	r0, [sp, #36]	; 0x24
   129e0:	b	1228c <__errno_location@plt+0xed0>
   129e4:	ldr	r0, [r4, #16]
   129e8:	movw	r2, #7036	; 0x1b7c
   129ec:	mov	r1, #1
   129f0:	mov	r3, r4
   129f4:	movt	r2, #1
   129f8:	sub	sp, fp, #48	; 0x30
   129fc:	vpop	{d8-d9}
   12a00:	add	sp, sp, #4
   12a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a08:	b	11134 <rb_setselect@plt>
   12a0c:	bl	112d8 <rb_outofmemory@plt>
   12a10:	mov	r0, #0
   12a14:	bl	113b0 <exit@plt>
   12a18:	sub	sp, sp, #4
   12a1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a20:	add	fp, sp, #24
   12a24:	sub	sp, sp, #388	; 0x184
   12a28:	str	r3, [fp, #8]
   12a2c:	mov	r4, r0
   12a30:	ldrb	r0, [r0, #72]	; 0x48
   12a34:	tst	r0, #8
   12a38:	bne	12c2c <__errno_location@plt+0x1870>
   12a3c:	mov	r6, r1
   12a40:	ldr	r0, [r4, #16]
   12a44:	ldr	r1, [r4, #28]
   12a48:	mov	r7, r2
   12a4c:	bl	11398 <rb_rawbuf_flush@plt>
   12a50:	ldr	r0, [r4, #20]
   12a54:	ldr	r1, [r4, #32]
   12a58:	bl	11398 <rb_rawbuf_flush@plt>
   12a5c:	ldr	r0, [r4, #28]
   12a60:	bl	11254 <rb_close@plt>
   12a64:	ldrb	r0, [r4, #72]	; 0x48
   12a68:	orr	r1, r0, #8
   12a6c:	tst	r0, #64	; 0x40
   12a70:	strb	r1, [r4, #72]	; 0x48
   12a74:	bne	12aec <__errno_location@plt+0x1730>
   12a78:	ldr	r2, [r4, #24]
   12a7c:	movw	r3, #19923	; 0x4dd3
   12a80:	ldr	r0, [r4, #8]
   12a84:	ldr	r1, [r4, #4]
   12a88:	movt	r3, #4194	; 0x1062
   12a8c:	umull	r3, r5, r2, r3
   12a90:	cmp	r0, #0
   12a94:	lsr	r3, r5, #7
   12a98:	mov	r5, #2000	; 0x7d0
   12a9c:	mls	r2, r3, r5, r2
   12aa0:	movw	r3, #16692	; 0x4134
   12aa4:	movt	r3, #2
   12aa8:	add	r2, r2, r2, lsl #1
   12aac:	add	r2, r3, r2, lsl #2
   12ab0:	beq	12ac0 <__errno_location@plt+0x1704>
   12ab4:	str	r1, [r0, #4]
   12ab8:	ldr	r1, [r4, #4]
   12abc:	b	12ac4 <__errno_location@plt+0x1708>
   12ac0:	str	r1, [r2, #4]
   12ac4:	cmp	r1, #0
   12ac8:	mov	r3, r2
   12acc:	addne	r3, r1, #8
   12ad0:	str	r0, [r3]
   12ad4:	mov	r0, #0
   12ad8:	str	r0, [r4, #4]
   12adc:	str	r0, [r4, #8]
   12ae0:	ldr	r0, [r2, #8]
   12ae4:	sub	r0, r0, #1
   12ae8:	str	r0, [r2, #8]
   12aec:	ldr	r0, [r4, #32]
   12af0:	cmp	r6, #0
   12af4:	cmpne	r7, #0
   12af8:	bne	12b30 <__errno_location@plt+0x1774>
   12afc:	bl	11254 <rb_close@plt>
   12b00:	mov	r0, #0
   12b04:	str	r0, [r4, #4]
   12b08:	movw	r0, #16680	; 0x4128
   12b0c:	str	r4, [r4]
   12b10:	movt	r0, #2
   12b14:	ldr	r1, [r0]
   12b18:	cmp	r1, #0
   12b1c:	str	r1, [r4, #8]
   12b20:	beq	12c0c <__errno_location@plt+0x1850>
   12b24:	add	r1, r1, #4
   12b28:	str	r4, [r1]
   12b2c:	b	12c1c <__errno_location@plt+0x1860>
   12b30:	movw	r2, #11388	; 0x2c7c
   12b34:	mov	r1, #1
   12b38:	mov	r3, r4
   12b3c:	movt	r2, #1
   12b40:	bl	11134 <rb_setselect@plt>
   12b44:	ldr	r0, [r4, #32]
   12b48:	mov	r1, #2
   12b4c:	mov	r2, #0
   12b50:	mov	r3, #0
   12b54:	bl	11134 <rb_setselect@plt>
   12b58:	sub	r6, fp, #156	; 0x9c
   12b5c:	add	r3, fp, #8
   12b60:	mov	r1, #128	; 0x80
   12b64:	mov	r2, r7
   12b68:	mov	r0, r6
   12b6c:	str	r3, [fp, #-28]	; 0xffffffe4
   12b70:	bl	11164 <vsnprintf@plt>
   12b74:	mov	r0, #68	; 0x44
   12b78:	mov	r1, r6
   12b7c:	mov	r2, #251	; 0xfb
   12b80:	strb	r0, [sp]
   12b84:	ldr	r0, [r4, #24]
   12b88:	str	r0, [sp, #1]
   12b8c:	mov	r0, sp
   12b90:	orr	r0, r0, #5
   12b94:	bl	111c4 <rb_strlcpy@plt>
   12b98:	mov	r0, r6
   12b9c:	bl	11230 <strlen@plt>
   12ba0:	ldr	r4, [r4, #12]
   12ba4:	mov	r6, r0
   12ba8:	mov	r0, #1
   12bac:	mov	r1, #40	; 0x28
   12bb0:	bl	111a0 <calloc@plt>
   12bb4:	cmp	r0, #0
   12bb8:	beq	12c78 <__errno_location@plt+0x18bc>
   12bbc:	add	r6, r6, #6
   12bc0:	mov	r5, r0
   12bc4:	mov	r0, #1
   12bc8:	mov	r1, r6
   12bcc:	bl	111a0 <calloc@plt>
   12bd0:	cmp	r0, #0
   12bd4:	beq	12c78 <__errno_location@plt+0x18bc>
   12bd8:	mov	r1, sp
   12bdc:	mov	r2, r6
   12be0:	str	r0, [r5, #12]
   12be4:	str	r6, [r5, #16]
   12be8:	bl	11248 <memcpy@plt>
   12bec:	str	r5, [r5]
   12bf0:	ldr	r0, [r4, #40]	; 0x28
   12bf4:	cmp	r0, #0
   12bf8:	str	r0, [r5, #4]
   12bfc:	beq	12c3c <__errno_location@plt+0x1880>
   12c00:	add	r0, r0, #8
   12c04:	str	r5, [r0]
   12c08:	b	12c4c <__errno_location@plt+0x1890>
   12c0c:	mov	r1, r0
   12c10:	ldr	r2, [r1, #4]!
   12c14:	cmp	r2, #0
   12c18:	streq	r4, [r1]
   12c1c:	str	r4, [r0]
   12c20:	ldr	r1, [r0, #8]
   12c24:	add	r1, r1, #1
   12c28:	str	r1, [r0, #8]
   12c2c:	sub	sp, fp, #24
   12c30:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c34:	add	sp, sp, #4
   12c38:	bx	lr
   12c3c:	mov	r0, r4
   12c40:	ldr	r1, [r0, #36]!	; 0x24
   12c44:	cmp	r1, #0
   12c48:	streq	r5, [r0]
   12c4c:	str	r5, [r4, #40]	; 0x28
   12c50:	ldr	r1, [r4, #44]	; 0x2c
   12c54:	ldr	r0, [r4, #16]
   12c58:	add	r1, r1, #1
   12c5c:	str	r1, [r4, #44]	; 0x2c
   12c60:	mov	r1, r4
   12c64:	bl	12d4c <__errno_location@plt+0x1990>
   12c68:	sub	sp, fp, #24
   12c6c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c70:	add	sp, sp, #4
   12c74:	bx	lr
   12c78:	bl	112d8 <rb_outofmemory@plt>
   12c7c:	push	{r4, r5, r6, r7, fp, lr}
   12c80:	add	fp, sp, #16
   12c84:	sub	sp, sp, #16384	; 0x4000
   12c88:	cmp	r1, #0
   12c8c:	beq	12ce4 <__errno_location@plt+0x1928>
   12c90:	mov	r4, r1
   12c94:	mov	r5, sp
   12c98:	ldr	r0, [r4, #32]
   12c9c:	mov	r1, r5
   12ca0:	mov	r2, #16384	; 0x4000
   12ca4:	bl	11218 <rb_read@plt>
   12ca8:	cmp	r0, #0
   12cac:	beq	12cec <__errno_location@plt+0x1930>
   12cb0:	cmn	r0, #1
   12cb4:	bgt	12c98 <__errno_location@plt+0x18dc>
   12cb8:	bl	113bc <__errno_location@plt>
   12cbc:	ldr	r0, [r0]
   12cc0:	bl	11104 <rb_ignore_errno@plt>
   12cc4:	cmp	r0, #0
   12cc8:	beq	12cec <__errno_location@plt+0x1930>
   12ccc:	ldr	r0, [r4, #32]
   12cd0:	movw	r2, #11388	; 0x2c7c
   12cd4:	mov	r1, #1
   12cd8:	mov	r3, r4
   12cdc:	movt	r2, #1
   12ce0:	bl	11134 <rb_setselect@plt>
   12ce4:	sub	sp, fp, #16
   12ce8:	pop	{r4, r5, r6, r7, fp, pc}
   12cec:	ldr	r0, [r4, #32]
   12cf0:	bl	11254 <rb_close@plt>
   12cf4:	mov	r0, #0
   12cf8:	str	r0, [r4, #4]
   12cfc:	movw	r0, #16680	; 0x4128
   12d00:	str	r4, [r4]
   12d04:	movt	r0, #2
   12d08:	ldr	r1, [r0]
   12d0c:	cmp	r1, #0
   12d10:	str	r1, [r4, #8]
   12d14:	beq	12d24 <__errno_location@plt+0x1968>
   12d18:	add	r1, r1, #4
   12d1c:	str	r4, [r1]
   12d20:	b	12d34 <__errno_location@plt+0x1978>
   12d24:	mov	r1, r0
   12d28:	ldr	r2, [r1, #4]!
   12d2c:	cmp	r2, #0
   12d30:	streq	r4, [r1]
   12d34:	str	r4, [r0]
   12d38:	ldr	r1, [r0, #8]
   12d3c:	add	r1, r1, #1
   12d40:	str	r1, [r0, #8]
   12d44:	sub	sp, fp, #16
   12d48:	pop	{r4, r5, r6, r7, fp, pc}
   12d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d50:	add	fp, sp, #28
   12d54:	sub	sp, sp, #12
   12d58:	mov	r0, r1
   12d5c:	mov	r8, r1
   12d60:	ldr	r9, [r0, #36]!	; 0x24
   12d64:	str	r0, [sp, #8]
   12d68:	cmp	r9, #0
   12d6c:	bne	12da8 <__errno_location@plt+0x19ec>
   12d70:	ldr	r0, [r8, #44]	; 0x2c
   12d74:	cmp	r0, #0
   12d78:	beq	12e9c <__errno_location@plt+0x1ae0>
   12d7c:	ldr	r0, [r8, #16]
   12d80:	movw	r2, #11596	; 0x2d4c
   12d84:	mov	r1, #2
   12d88:	mov	r3, r8
   12d8c:	movt	r2, #1
   12d90:	sub	sp, fp, #28
   12d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d98:	b	11134 <rb_setselect@plt>
   12d9c:	cmp	sl, #0
   12da0:	mov	r9, sl
   12da4:	beq	12d70 <__errno_location@plt+0x19b4>
   12da8:	ldr	r5, [r9]
   12dac:	movw	r7, #40692	; 0x9ef4
   12db0:	ldr	r0, [r8, #16]
   12db4:	ldr	sl, [r9, #8]
   12db8:	movt	r7, #2
   12dbc:	ldr	r7, [r7, #4]
   12dc0:	ldr	r1, [r5, #16]
   12dc4:	ldr	r3, [r5, #12]
   12dc8:	ldr	r2, [r5, #36]	; 0x24
   12dcc:	stm	sp, {r1, r7}
   12dd0:	add	r7, r5, #20
   12dd4:	mov	r1, r7
   12dd8:	bl	11158 <rb_send_fd_buf@plt>
   12ddc:	mov	r6, r0
   12de0:	cmp	r0, #1
   12de4:	blt	12e70 <__errno_location@plt+0x1ab4>
   12de8:	ldr	r0, [r9, #8]
   12dec:	ldr	r1, [r9, #4]
   12df0:	cmp	r0, #0
   12df4:	beq	12e04 <__errno_location@plt+0x1a48>
   12df8:	str	r1, [r0, #4]
   12dfc:	ldr	r1, [r9, #4]
   12e00:	b	12e08 <__errno_location@plt+0x1a4c>
   12e04:	str	r1, [r8, #40]	; 0x28
   12e08:	cmp	r1, #0
   12e0c:	ldr	r2, [sp, #8]
   12e10:	addne	r2, r1, #8
   12e14:	str	r0, [r2]
   12e18:	mov	r0, #0
   12e1c:	str	r0, [r9, #4]
   12e20:	str	r0, [r9, #8]
   12e24:	ldr	r0, [r8, #44]	; 0x2c
   12e28:	sub	r0, r0, #1
   12e2c:	str	r0, [r8, #44]	; 0x2c
   12e30:	ldr	r0, [r5, #36]	; 0x24
   12e34:	cmp	r0, #1
   12e38:	blt	12e58 <__errno_location@plt+0x1a9c>
   12e3c:	mov	r4, #0
   12e40:	ldr	r0, [r7, r4, lsl #2]
   12e44:	bl	11254 <rb_close@plt>
   12e48:	ldr	r0, [r5, #36]	; 0x24
   12e4c:	add	r4, r4, #1
   12e50:	cmp	r4, r0
   12e54:	blt	12e40 <__errno_location@plt+0x1a84>
   12e58:	ldr	r0, [r5, #12]
   12e5c:	cmp	r0, #0
   12e60:	beq	12e68 <__errno_location@plt+0x1aac>
   12e64:	bl	111f4 <free@plt>
   12e68:	mov	r0, r5
   12e6c:	bl	111f4 <free@plt>
   12e70:	cmp	r6, #0
   12e74:	beq	12e94 <__errno_location@plt+0x1ad8>
   12e78:	cmn	r6, #1
   12e7c:	bgt	12d9c <__errno_location@plt+0x19e0>
   12e80:	bl	113bc <__errno_location@plt>
   12e84:	ldr	r0, [r0]
   12e88:	bl	11104 <rb_ignore_errno@plt>
   12e8c:	cmp	r0, #0
   12e90:	bne	12d9c <__errno_location@plt+0x19e0>
   12e94:	mov	r0, #0
   12e98:	bl	113b0 <exit@plt>
   12e9c:	sub	sp, fp, #28
   12ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ea4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ea8:	add	fp, sp, #24
   12eac:	sub	sp, sp, #768	; 0x300
   12eb0:	ldr	r4, [fp, #8]
   12eb4:	cmp	r1, #0
   12eb8:	beq	12ed4 <__errno_location@plt+0x1b18>
   12ebc:	mov	r0, r4
   12ec0:	mov	r1, #0
   12ec4:	mov	r2, #0
   12ec8:	sub	sp, fp, #24
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ed0:	b	12a18 <__errno_location@plt+0x165c>
   12ed4:	ldrb	r0, [r4, #72]	; 0x48
   12ed8:	tst	r0, #1
   12edc:	beq	12fc4 <__errno_location@plt+0x1c08>
   12ee0:	ldr	r0, [r4, #28]
   12ee4:	bl	1123c <rb_ssl_get_cipher@plt>
   12ee8:	cmp	r0, #0
   12eec:	beq	12fc4 <__errno_location@plt+0x1c08>
   12ef0:	mov	r5, sp
   12ef4:	mov	r1, r0
   12ef8:	mov	r2, #256	; 0x100
   12efc:	mov	r0, r5
   12f00:	bl	111c4 <rb_strlcpy@plt>
   12f04:	mov	r0, #67	; 0x43
   12f08:	mov	r1, r5
   12f0c:	strb	r0, [sp, #256]	; 0x100
   12f10:	ldr	r0, [r4, #24]
   12f14:	str	r0, [sp, #257]	; 0x101
   12f18:	add	r0, sp, #256	; 0x100
   12f1c:	orr	r0, r0, #5
   12f20:	bl	11278 <strcpy@plt>
   12f24:	mov	r0, r5
   12f28:	bl	11230 <strlen@plt>
   12f2c:	ldr	r5, [r4, #12]
   12f30:	mov	r7, r0
   12f34:	mov	r0, #1
   12f38:	mov	r1, #40	; 0x28
   12f3c:	bl	111a0 <calloc@plt>
   12f40:	cmp	r0, #0
   12f44:	beq	130c8 <__errno_location@plt+0x1d0c>
   12f48:	add	r7, r7, #6
   12f4c:	mov	r6, r0
   12f50:	mov	r0, #1
   12f54:	mov	r1, r7
   12f58:	bl	111a0 <calloc@plt>
   12f5c:	cmp	r0, #0
   12f60:	beq	130c8 <__errno_location@plt+0x1d0c>
   12f64:	add	r1, sp, #256	; 0x100
   12f68:	mov	r2, r7
   12f6c:	str	r0, [r6, #12]
   12f70:	str	r7, [r6, #16]
   12f74:	bl	11248 <memcpy@plt>
   12f78:	str	r6, [r6]
   12f7c:	ldr	r0, [r5, #40]	; 0x28
   12f80:	cmp	r0, #0
   12f84:	str	r0, [r6, #4]
   12f88:	beq	12f98 <__errno_location@plt+0x1bdc>
   12f8c:	add	r0, r0, #8
   12f90:	str	r6, [r0]
   12f94:	b	12fa8 <__errno_location@plt+0x1bec>
   12f98:	mov	r0, r5
   12f9c:	ldr	r1, [r0, #36]!	; 0x24
   12fa0:	cmp	r1, #0
   12fa4:	streq	r6, [r0]
   12fa8:	str	r6, [r5, #40]	; 0x28
   12fac:	ldr	r1, [r5, #44]	; 0x2c
   12fb0:	ldr	r0, [r5, #16]
   12fb4:	add	r1, r1, #1
   12fb8:	str	r1, [r5, #44]	; 0x2c
   12fbc:	mov	r1, r5
   12fc0:	bl	12d4c <__errno_location@plt+0x1990>
   12fc4:	movw	r5, #40692	; 0x9ef4
   12fc8:	ldr	r0, [r4, #28]
   12fcc:	add	r1, sp, #256	; 0x100
   12fd0:	movt	r5, #2
   12fd4:	add	r1, r1, #13
   12fd8:	ldr	r2, [r5, #12]
   12fdc:	bl	111d0 <rb_get_ssl_certfp@plt>
   12fe0:	cmp	r0, #0
   12fe4:	beq	1309c <__errno_location@plt+0x1ce0>
   12fe8:	mov	r7, r0
   12fec:	mov	r0, #70	; 0x46
   12ff0:	ldr	r1, [r5, #12]
   12ff4:	strb	r0, [sp, #256]	; 0x100
   12ff8:	ldr	r0, [r4, #24]
   12ffc:	str	r7, [sp, #265]	; 0x109
   13000:	str	r1, [sp, #261]	; 0x105
   13004:	mov	r1, #40	; 0x28
   13008:	str	r0, [sp, #257]	; 0x101
   1300c:	mov	r0, #1
   13010:	ldr	r5, [r4, #12]
   13014:	bl	111a0 <calloc@plt>
   13018:	cmp	r0, #0
   1301c:	beq	130c8 <__errno_location@plt+0x1d0c>
   13020:	add	r7, r7, #13
   13024:	mov	r6, r0
   13028:	mov	r0, #1
   1302c:	mov	r1, r7
   13030:	bl	111a0 <calloc@plt>
   13034:	cmp	r0, #0
   13038:	beq	130c8 <__errno_location@plt+0x1d0c>
   1303c:	add	r1, sp, #256	; 0x100
   13040:	mov	r2, r7
   13044:	str	r0, [r6, #12]
   13048:	str	r7, [r6, #16]
   1304c:	bl	11248 <memcpy@plt>
   13050:	str	r6, [r6]
   13054:	ldr	r0, [r5, #40]	; 0x28
   13058:	cmp	r0, #0
   1305c:	str	r0, [r6, #4]
   13060:	beq	13070 <__errno_location@plt+0x1cb4>
   13064:	add	r0, r0, #8
   13068:	str	r6, [r0]
   1306c:	b	13080 <__errno_location@plt+0x1cc4>
   13070:	mov	r0, r5
   13074:	ldr	r1, [r0, #36]!	; 0x24
   13078:	cmp	r1, #0
   1307c:	streq	r6, [r0]
   13080:	str	r6, [r5, #40]	; 0x28
   13084:	ldr	r1, [r5, #44]	; 0x2c
   13088:	ldr	r0, [r5, #16]
   1308c:	add	r1, r1, #1
   13090:	str	r1, [r5, #44]	; 0x2c
   13094:	mov	r1, r5
   13098:	bl	12d4c <__errno_location@plt+0x1990>
   1309c:	ldr	r0, [r4, #12]
   130a0:	ldr	r1, [r4, #24]
   130a4:	bl	130cc <__errno_location@plt+0x1d10>
   130a8:	ldr	r0, [r4, #28]
   130ac:	mov	r1, r4
   130b0:	bl	13174 <__errno_location@plt+0x1db8>
   130b4:	ldr	r0, [r4, #32]
   130b8:	mov	r1, r4
   130bc:	bl	1333c <__errno_location@plt+0x1f80>
   130c0:	sub	sp, fp, #24
   130c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130c8:	bl	112d8 <rb_outofmemory@plt>
   130cc:	push	{r4, r5, r6, r7, fp, lr}
   130d0:	add	fp, sp, #16
   130d4:	mov	r6, r1
   130d8:	mov	r4, r0
   130dc:	mov	r0, #1
   130e0:	mov	r1, #40	; 0x28
   130e4:	bl	111a0 <calloc@plt>
   130e8:	cmp	r0, #0
   130ec:	beq	13170 <__errno_location@plt+0x1db4>
   130f0:	mov	r5, r0
   130f4:	mov	r0, #1
   130f8:	mov	r1, #5
   130fc:	mov	r7, #5
   13100:	bl	111a0 <calloc@plt>
   13104:	cmp	r0, #0
   13108:	beq	13170 <__errno_location@plt+0x1db4>
   1310c:	mov	r1, #79	; 0x4f
   13110:	str	r0, [r5, #12]
   13114:	str	r6, [r0, #1]
   13118:	str	r7, [r5, #16]
   1311c:	strb	r1, [r0]
   13120:	ldr	r0, [r4, #40]	; 0x28
   13124:	str	r5, [r5]
   13128:	cmp	r0, #0
   1312c:	str	r0, [r5, #4]
   13130:	beq	13140 <__errno_location@plt+0x1d84>
   13134:	add	r0, r0, #8
   13138:	str	r5, [r0]
   1313c:	b	13150 <__errno_location@plt+0x1d94>
   13140:	mov	r0, r4
   13144:	ldr	r1, [r0, #36]!	; 0x24
   13148:	cmp	r1, #0
   1314c:	streq	r5, [r0]
   13150:	str	r5, [r4, #40]	; 0x28
   13154:	ldr	r1, [r4, #44]	; 0x2c
   13158:	ldr	r0, [r4, #16]
   1315c:	add	r1, r1, #1
   13160:	str	r1, [r4, #44]	; 0x2c
   13164:	mov	r1, r4
   13168:	pop	{r4, r5, r6, r7, fp, lr}
   1316c:	b	12d4c <__errno_location@plt+0x1990>
   13170:	bl	112d8 <rb_outofmemory@plt>
   13174:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13178:	add	fp, sp, #24
   1317c:	sub	sp, sp, #16384	; 0x4000
   13180:	cmp	r1, #0
   13184:	beq	13254 <__errno_location@plt+0x1e98>
   13188:	ldrb	r0, [r1, #72]	; 0x48
   1318c:	mov	r4, r1
   13190:	tst	r0, #8
   13194:	bne	13254 <__errno_location@plt+0x1e98>
   13198:	tst	r0, #32
   1319c:	beq	131c0 <__errno_location@plt+0x1e04>
   131a0:	and	r0, r0, #223	; 0xdf
   131a4:	mov	r1, r4
   131a8:	strb	r0, [r4, #72]	; 0x48
   131ac:	ldr	r0, [r4, #28]
   131b0:	bl	1348c <__errno_location@plt+0x20d0>
   131b4:	ldrb	r0, [r4, #72]	; 0x48
   131b8:	tst	r0, #8
   131bc:	bne	13254 <__errno_location@plt+0x1e98>
   131c0:	tst	r0, #8
   131c4:	bne	13254 <__errno_location@plt+0x1e98>
   131c8:	add	r7, r4, #48	; 0x30
   131cc:	mov	r5, sp
   131d0:	b	131f0 <__errno_location@plt+0x1e34>
   131d4:	mov	r0, r4
   131d8:	mov	r1, r5
   131dc:	mov	r2, r6
   131e0:	bl	13718 <__errno_location@plt+0x235c>
   131e4:	ldrb	r0, [r4, #72]	; 0x48
   131e8:	tst	r0, #8
   131ec:	bne	13254 <__errno_location@plt+0x1e98>
   131f0:	ldr	r0, [r4, #28]
   131f4:	mov	r1, r5
   131f8:	mov	r2, #16384	; 0x4000
   131fc:	bl	11218 <rb_read@plt>
   13200:	cmp	r0, #0
   13204:	beq	1325c <__errno_location@plt+0x1ea0>
   13208:	mov	r6, r0
   1320c:	cmn	r0, #1
   13210:	ble	13270 <__errno_location@plt+0x1eb4>
   13214:	ldrd	r0, [r7]
   13218:	adds	r0, r0, r6
   1321c:	adc	r1, r1, r6, asr #31
   13220:	strd	r0, [r7]
   13224:	ldrb	r0, [r4, #72]	; 0x48
   13228:	tst	r0, #2
   1322c:	bne	131d4 <__errno_location@plt+0x1e18>
   13230:	tst	r0, #8
   13234:	bne	131e4 <__errno_location@plt+0x1e28>
   13238:	ldr	r0, [r4, #20]
   1323c:	mov	r1, r5
   13240:	mov	r2, r6
   13244:	bl	1138c <rb_rawbuf_append@plt>
   13248:	ldrb	r0, [r4, #72]	; 0x48
   1324c:	tst	r0, #8
   13250:	beq	131f0 <__errno_location@plt+0x1e34>
   13254:	sub	sp, fp, #24
   13258:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1325c:	movw	r2, #15755	; 0x3d8b
   13260:	movw	r3, #15651	; 0x3d23
   13264:	movt	r2, #1
   13268:	movt	r3, #1
   1326c:	b	13328 <__errno_location@plt+0x1f6c>
   13270:	bl	113bc <__errno_location@plt>
   13274:	mov	r5, r0
   13278:	ldr	r0, [r0]
   1327c:	bl	11104 <rb_ignore_errno@plt>
   13280:	cmp	r0, #0
   13284:	beq	132cc <__errno_location@plt+0x1f10>
   13288:	ldr	r0, [r4, #28]
   1328c:	cmn	r6, #4
   13290:	bne	132ec <__errno_location@plt+0x1f30>
   13294:	mov	r1, #1
   13298:	mov	r2, #0
   1329c:	mov	r3, #0
   132a0:	bl	11134 <rb_setselect@plt>
   132a4:	ldr	r0, [r4, #28]
   132a8:	movw	r2, #12660	; 0x3174
   132ac:	mov	r1, #2
   132b0:	mov	r3, r4
   132b4:	movt	r2, #1
   132b8:	bl	11134 <rb_setselect@plt>
   132bc:	ldrb	r0, [r4, #72]	; 0x48
   132c0:	orr	r0, r0, #32
   132c4:	strb	r0, [r4, #72]	; 0x48
   132c8:	b	13300 <__errno_location@plt+0x1f44>
   132cc:	cmn	r6, #2
   132d0:	bne	13314 <__errno_location@plt+0x1f58>
   132d4:	ldrb	r0, [r4, #72]	; 0x48
   132d8:	ands	r0, r0, #1
   132dc:	beq	13314 <__errno_location@plt+0x1f58>
   132e0:	ldr	r0, [r4, #28]
   132e4:	bl	112a8 <rb_get_ssl_strerror@plt>
   132e8:	b	1331c <__errno_location@plt+0x1f60>
   132ec:	movw	r2, #12660	; 0x3174
   132f0:	mov	r1, #1
   132f4:	mov	r3, r4
   132f8:	movt	r2, #1
   132fc:	bl	11134 <rb_setselect@plt>
   13300:	ldr	r0, [r4, #32]
   13304:	mov	r1, r4
   13308:	bl	1364c <__errno_location@plt+0x2290>
   1330c:	sub	sp, fp, #24
   13310:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13314:	ldr	r0, [r5]
   13318:	bl	110c8 <strerror@plt>
   1331c:	movw	r2, #15620	; 0x3d04
   13320:	mov	r3, r0
   13324:	movt	r2, #1
   13328:	mov	r0, r4
   1332c:	mov	r1, #1
   13330:	bl	12a18 <__errno_location@plt+0x165c>
   13334:	sub	sp, fp, #24
   13338:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1333c:	push	{r4, r5, r6, sl, fp, lr}
   13340:	add	fp, sp, #16
   13344:	sub	sp, sp, #16384	; 0x4000
   13348:	cmp	r1, #0
   1334c:	beq	1339c <__errno_location@plt+0x1fe0>
   13350:	ldrb	r0, [r1, #72]	; 0x48
   13354:	mov	r4, r1
   13358:	tst	r0, #8
   1335c:	bne	1339c <__errno_location@plt+0x1fe0>
   13360:	ldr	r0, [r4, #16]
   13364:	bl	11290 <rb_rawbuf_length@plt>
   13368:	cmp	r0, #4096	; 0x1000
   1336c:	blt	133a4 <__errno_location@plt+0x1fe8>
   13370:	ldrb	r0, [r4, #72]	; 0x48
   13374:	mov	r1, #1
   13378:	mov	r2, #0
   1337c:	mov	r3, #0
   13380:	orr	r0, r0, #4
   13384:	strb	r0, [r4, #72]	; 0x48
   13388:	ldr	r0, [r4, #32]
   1338c:	bl	11134 <rb_setselect@plt>
   13390:	ldr	r0, [r4, #28]
   13394:	mov	r1, r4
   13398:	bl	1348c <__errno_location@plt+0x20d0>
   1339c:	sub	sp, fp, #16
   133a0:	pop	{r4, r5, r6, sl, fp, pc}
   133a4:	add	r6, r4, #56	; 0x38
   133a8:	mov	r5, sp
   133ac:	ldrb	r0, [r4, #72]	; 0x48
   133b0:	tst	r0, #8
   133b4:	bne	1339c <__errno_location@plt+0x1fe0>
   133b8:	ldr	r0, [r4, #32]
   133bc:	mov	r1, r5
   133c0:	mov	r2, #16384	; 0x4000
   133c4:	bl	11218 <rb_read@plt>
   133c8:	cmp	r0, #0
   133cc:	beq	13474 <__errno_location@plt+0x20b8>
   133d0:	mov	r2, r0
   133d4:	cmn	r0, #1
   133d8:	ble	13448 <__errno_location@plt+0x208c>
   133dc:	ldrd	r0, [r6]
   133e0:	adds	r0, r0, r2
   133e4:	adc	r1, r1, r2, asr #31
   133e8:	strd	r0, [r6]
   133ec:	ldrb	r0, [r4, #72]	; 0x48
   133f0:	tst	r0, #2
   133f4:	bne	1341c <__errno_location@plt+0x2060>
   133f8:	tst	r0, #8
   133fc:	bne	13428 <__errno_location@plt+0x206c>
   13400:	ldr	r0, [r4, #16]
   13404:	mov	r1, r5
   13408:	bl	1138c <rb_rawbuf_append@plt>
   1340c:	ldrb	r0, [r4, #72]	; 0x48
   13410:	tst	r0, #8
   13414:	beq	13434 <__errno_location@plt+0x2078>
   13418:	b	1339c <__errno_location@plt+0x1fe0>
   1341c:	mov	r0, r4
   13420:	mov	r1, r5
   13424:	bl	13848 <__errno_location@plt+0x248c>
   13428:	ldrb	r0, [r4, #72]	; 0x48
   1342c:	tst	r0, #8
   13430:	bne	1339c <__errno_location@plt+0x1fe0>
   13434:	ldr	r0, [r4, #16]
   13438:	bl	11290 <rb_rawbuf_length@plt>
   1343c:	cmp	r0, #4096	; 0x1000
   13440:	blt	133ac <__errno_location@plt+0x1ff0>
   13444:	b	13370 <__errno_location@plt+0x1fb4>
   13448:	bl	113bc <__errno_location@plt>
   1344c:	ldr	r0, [r0]
   13450:	bl	11104 <rb_ignore_errno@plt>
   13454:	cmp	r0, #0
   13458:	beq	13474 <__errno_location@plt+0x20b8>
   1345c:	ldr	r0, [r4, #32]
   13460:	movw	r2, #13116	; 0x333c
   13464:	mov	r1, #1
   13468:	mov	r3, r4
   1346c:	movt	r2, #1
   13470:	b	1338c <__errno_location@plt+0x1fd0>
   13474:	mov	r0, r4
   13478:	mov	r1, #0
   1347c:	mov	r2, #0
   13480:	bl	12a18 <__errno_location@plt+0x165c>
   13484:	sub	sp, fp, #16
   13488:	pop	{r4, r5, r6, sl, fp, pc}
   1348c:	push	{r4, r5, r6, r7, fp, lr}
   13490:	add	fp, sp, #16
   13494:	mov	r5, r0
   13498:	ldrb	r0, [r1, #72]	; 0x48
   1349c:	tst	r0, #8
   134a0:	bne	1362c <__errno_location@plt+0x2270>
   134a4:	mov	r4, r1
   134a8:	tst	r0, #16
   134ac:	beq	134d0 <__errno_location@plt+0x2114>
   134b0:	and	r0, r0, #239	; 0xef
   134b4:	mov	r1, r4
   134b8:	strb	r0, [r4, #72]	; 0x48
   134bc:	ldr	r0, [r4, #28]
   134c0:	bl	13174 <__errno_location@plt+0x1db8>
   134c4:	ldrb	r0, [r4, #72]	; 0x48
   134c8:	tst	r0, #8
   134cc:	bne	1362c <__errno_location@plt+0x2270>
   134d0:	ldr	r0, [r4, #16]
   134d4:	mov	r1, r5
   134d8:	bl	11398 <rb_rawbuf_flush@plt>
   134dc:	mov	r6, r0
   134e0:	cmp	r0, #1
   134e4:	blt	13514 <__errno_location@plt+0x2158>
   134e8:	add	r7, r4, #40	; 0x28
   134ec:	ldrd	r0, [r7]
   134f0:	adds	r0, r0, r6
   134f4:	adc	r1, r1, r6, asr #31
   134f8:	strd	r0, [r7]
   134fc:	mov	r1, r5
   13500:	ldr	r0, [r4, #16]
   13504:	bl	11398 <rb_rawbuf_flush@plt>
   13508:	mov	r6, r0
   1350c:	cmp	r0, #0
   13510:	bgt	134ec <__errno_location@plt+0x2130>
   13514:	cmp	r6, #0
   13518:	beq	13588 <__errno_location@plt+0x21cc>
   1351c:	bl	113bc <__errno_location@plt>
   13520:	mov	r5, r0
   13524:	ldr	r0, [r0]
   13528:	bl	11104 <rb_ignore_errno@plt>
   1352c:	cmp	r0, #0
   13530:	beq	135b8 <__errno_location@plt+0x21fc>
   13534:	ldr	r0, [r4, #16]
   13538:	bl	11290 <rb_rawbuf_length@plt>
   1353c:	cmp	r0, #1
   13540:	blt	135f0 <__errno_location@plt+0x2234>
   13544:	ldr	r0, [r4, #28]
   13548:	movw	r2, #13452	; 0x348c
   1354c:	cmn	r6, #3
   13550:	movt	r2, #1
   13554:	bne	13604 <__errno_location@plt+0x2248>
   13558:	mov	r1, #1
   1355c:	mov	r3, r4
   13560:	bl	11134 <rb_setselect@plt>
   13564:	ldr	r0, [r4, #28]
   13568:	mov	r1, #2
   1356c:	mov	r2, #0
   13570:	mov	r3, #0
   13574:	bl	11134 <rb_setselect@plt>
   13578:	ldrb	r0, [r4, #72]	; 0x48
   1357c:	orr	r0, r0, #16
   13580:	strb	r0, [r4, #72]	; 0x48
   13584:	b	13610 <__errno_location@plt+0x2254>
   13588:	movw	r2, #15755	; 0x3d8b
   1358c:	movw	r3, #15651	; 0x3d23
   13590:	mov	r0, r4
   13594:	mov	r1, #1
   13598:	movt	r2, #1
   1359c:	movt	r3, #1
   135a0:	bl	12a18 <__errno_location@plt+0x165c>
   135a4:	bl	113bc <__errno_location@plt>
   135a8:	mov	r5, r0
   135ac:	ldr	r0, [r5]
   135b0:	bl	110c8 <strerror@plt>
   135b4:	b	135d4 <__errno_location@plt+0x2218>
   135b8:	cmn	r6, #2
   135bc:	bne	135ac <__errno_location@plt+0x21f0>
   135c0:	ldrb	r0, [r4, #72]	; 0x48
   135c4:	ands	r0, r0, #1
   135c8:	beq	135ac <__errno_location@plt+0x21f0>
   135cc:	ldr	r0, [r4, #28]
   135d0:	bl	112a8 <rb_get_ssl_strerror@plt>
   135d4:	movw	r2, #15635	; 0x3d13
   135d8:	mov	r3, r0
   135dc:	mov	r0, r4
   135e0:	mov	r1, #1
   135e4:	movt	r2, #1
   135e8:	pop	{r4, r5, r6, r7, fp, lr}
   135ec:	b	12a18 <__errno_location@plt+0x165c>
   135f0:	ldr	r0, [r4, #28]
   135f4:	mov	r1, #2
   135f8:	mov	r2, #0
   135fc:	mov	r3, #0
   13600:	b	1360c <__errno_location@plt+0x2250>
   13604:	mov	r1, #2
   13608:	mov	r3, r4
   1360c:	bl	11134 <rb_setselect@plt>
   13610:	ldrb	r0, [r4, #72]	; 0x48
   13614:	tst	r0, #4
   13618:	popeq	{r4, r5, r6, r7, fp, pc}
   1361c:	ldr	r0, [r4, #16]
   13620:	bl	11290 <rb_rawbuf_length@plt>
   13624:	cmp	r0, #0
   13628:	beq	13630 <__errno_location@plt+0x2274>
   1362c:	pop	{r4, r5, r6, r7, fp, pc}
   13630:	ldrb	r0, [r4, #72]	; 0x48
   13634:	mov	r1, r4
   13638:	and	r0, r0, #251	; 0xfb
   1363c:	strb	r0, [r4, #72]	; 0x48
   13640:	ldr	r0, [r4, #32]
   13644:	pop	{r4, r5, r6, r7, fp, lr}
   13648:	b	1333c <__errno_location@plt+0x1f80>
   1364c:	push	{r4, r5, r6, sl, fp, lr}
   13650:	add	fp, sp, #16
   13654:	mov	r5, r0
   13658:	ldrb	r0, [r1, #72]	; 0x48
   1365c:	tst	r0, #8
   13660:	popne	{r4, r5, r6, sl, fp, pc}
   13664:	ldr	r0, [r1, #20]
   13668:	mov	r4, r1
   1366c:	mov	r1, r5
   13670:	bl	11398 <rb_rawbuf_flush@plt>
   13674:	cmp	r0, #1
   13678:	blt	136a4 <__errno_location@plt+0x22e8>
   1367c:	add	r6, r4, #64	; 0x40
   13680:	ldrd	r2, [r6]
   13684:	mov	r1, r5
   13688:	adds	r2, r2, r0
   1368c:	adc	r3, r3, r0, asr #31
   13690:	strd	r2, [r6]
   13694:	ldr	r0, [r4, #20]
   13698:	bl	11398 <rb_rawbuf_flush@plt>
   1369c:	cmp	r0, #0
   136a0:	bgt	13680 <__errno_location@plt+0x22c4>
   136a4:	cmp	r0, #0
   136a8:	beq	136f0 <__errno_location@plt+0x2334>
   136ac:	bl	113bc <__errno_location@plt>
   136b0:	ldr	r0, [r0]
   136b4:	bl	11104 <rb_ignore_errno@plt>
   136b8:	cmp	r0, #0
   136bc:	beq	136f0 <__errno_location@plt+0x2334>
   136c0:	ldr	r0, [r4, #20]
   136c4:	bl	11290 <rb_rawbuf_length@plt>
   136c8:	mov	r1, r0
   136cc:	ldr	r0, [r4, #32]
   136d0:	cmp	r1, #1
   136d4:	blt	13704 <__errno_location@plt+0x2348>
   136d8:	movw	r2, #13900	; 0x364c
   136dc:	mov	r1, #2
   136e0:	mov	r3, r4
   136e4:	movt	r2, #1
   136e8:	pop	{r4, r5, r6, sl, fp, lr}
   136ec:	b	11134 <rb_setselect@plt>
   136f0:	mov	r0, r4
   136f4:	mov	r1, #0
   136f8:	mov	r2, #0
   136fc:	pop	{r4, r5, r6, sl, fp, lr}
   13700:	b	12a18 <__errno_location@plt+0x165c>
   13704:	mov	r1, #2
   13708:	mov	r2, #0
   1370c:	mov	r3, #0
   13710:	pop	{r4, r5, r6, sl, fp, lr}
   13714:	b	11134 <rb_setselect@plt>
   13718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1371c:	add	fp, sp, #24
   13720:	sub	sp, sp, #16384	; 0x4000
   13724:	mov	r4, r0
   13728:	ldr	r0, [r0, #76]	; 0x4c
   1372c:	mov	r6, sp
   13730:	mov	r5, #16384	; 0x4000
   13734:	cmp	r2, #0
   13738:	str	r6, [r0, #12]
   1373c:	str	r5, [r0, #16]
   13740:	stm	r0, {r1, r2}
   13744:	beq	13824 <__errno_location@plt+0x2468>
   13748:	mov	r8, r1
   1374c:	mov	r1, #0
   13750:	bl	111dc <inflate@plt>
   13754:	cmp	r0, #0
   13758:	beq	13780 <__errno_location@plt+0x23c4>
   1375c:	b	137bc <__errno_location@plt+0x2400>
   13760:	cmp	r1, #0
   13764:	str	r6, [r0, #12]
   13768:	str	r5, [r0, #16]
   1376c:	beq	13824 <__errno_location@plt+0x2468>
   13770:	mov	r1, #0
   13774:	bl	111dc <inflate@plt>
   13778:	cmp	r0, #0
   1377c:	bne	137bc <__errno_location@plt+0x2400>
   13780:	ldr	r0, [r4, #76]	; 0x4c
   13784:	ldr	r2, [r0, #16]
   13788:	ldr	r1, [r0, #4]
   1378c:	rsb	r2, r2, #16384	; 0x4000
   13790:	cmp	r1, #0
   13794:	beq	13804 <__errno_location@plt+0x2448>
   13798:	ldrb	r3, [r4, #72]	; 0x48
   1379c:	tst	r3, #8
   137a0:	bne	13760 <__errno_location@plt+0x23a4>
   137a4:	ldr	r0, [r4, #20]
   137a8:	mov	r1, r6
   137ac:	bl	1138c <rb_rawbuf_append@plt>
   137b0:	ldr	r0, [r4, #76]	; 0x4c
   137b4:	ldr	r1, [r0, #4]
   137b8:	b	13760 <__errno_location@plt+0x23a4>
   137bc:	mov	r7, r0
   137c0:	movw	r0, #15685	; 0x3d45
   137c4:	mov	r1, r8
   137c8:	mov	r2, #6
   137cc:	movt	r0, #1
   137d0:	bl	11374 <strncmp@plt>
   137d4:	cmp	r0, #0
   137d8:	beq	1382c <__errno_location@plt+0x2470>
   137dc:	mov	r0, r7
   137e0:	bl	110e0 <zError@plt>
   137e4:	movw	r2, #15720	; 0x3d68
   137e8:	mov	r3, r0
   137ec:	mov	r0, r4
   137f0:	mov	r1, #1
   137f4:	movt	r2, #1
   137f8:	bl	12a18 <__errno_location@plt+0x165c>
   137fc:	sub	sp, fp, #24
   13800:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13804:	cmp	r2, #0
   13808:	beq	13824 <__errno_location@plt+0x2468>
   1380c:	ldrb	r0, [r4, #72]	; 0x48
   13810:	tst	r0, #8
   13814:	bne	13824 <__errno_location@plt+0x2468>
   13818:	ldr	r0, [r4, #20]
   1381c:	mov	r1, sp
   13820:	bl	1138c <rb_rawbuf_append@plt>
   13824:	sub	sp, fp, #24
   13828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1382c:	movw	r2, #15692	; 0x3d4c
   13830:	mov	r0, r4
   13834:	mov	r1, #1
   13838:	movt	r2, #1
   1383c:	bl	12a18 <__errno_location@plt+0x165c>
   13840:	sub	sp, fp, #24
   13844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13848:	push	{r4, r5, r6, r7, fp, lr}
   1384c:	add	fp, sp, #16
   13850:	sub	sp, sp, #16384	; 0x4000
   13854:	ldr	r5, [r0, #76]	; 0x4c
   13858:	mov	r4, r0
   1385c:	mov	r3, sp
   13860:	mov	r0, #16384	; 0x4000
   13864:	str	r3, [r5, #68]	; 0x44
   13868:	str	r0, [r5, #72]	; 0x48
   1386c:	mov	r0, r5
   13870:	str	r2, [r5, #60]	; 0x3c
   13874:	str	r1, [r0, #56]!	; 0x38
   13878:	mov	r1, #2
   1387c:	bl	11188 <deflate@plt>
   13880:	cmp	r0, #0
   13884:	beq	138ac <__errno_location@plt+0x24f0>
   13888:	bl	110e0 <zError@plt>
   1388c:	movw	r2, #15739	; 0x3d7b
   13890:	mov	r3, r0
   13894:	mov	r0, r4
   13898:	mov	r1, #1
   1389c:	movt	r2, #1
   138a0:	bl	12a18 <__errno_location@plt+0x165c>
   138a4:	sub	sp, fp, #16
   138a8:	pop	{r4, r5, r6, r7, fp, pc}
   138ac:	ldr	r1, [r5, #72]	; 0x48
   138b0:	cmp	r1, #0
   138b4:	beq	138d0 <__errno_location@plt+0x2514>
   138b8:	ldr	r0, [r5, #60]	; 0x3c
   138bc:	cmp	r0, #0
   138c0:	beq	138ec <__errno_location@plt+0x2530>
   138c4:	movw	r2, #15797	; 0x3db5
   138c8:	movt	r2, #1
   138cc:	b	138d8 <__errno_location@plt+0x251c>
   138d0:	movw	r2, #15758	; 0x3d8e
   138d4:	movt	r2, #1
   138d8:	mov	r0, r4
   138dc:	mov	r1, #1
   138e0:	bl	12a18 <__errno_location@plt+0x165c>
   138e4:	sub	sp, fp, #16
   138e8:	pop	{r4, r5, r6, r7, fp, pc}
   138ec:	ldrb	r0, [r4, #72]	; 0x48
   138f0:	tst	r0, #8
   138f4:	bne	13908 <__errno_location@plt+0x254c>
   138f8:	ldr	r0, [r4, #16]
   138fc:	rsb	r2, r1, #16384	; 0x4000
   13900:	mov	r1, sp
   13904:	bl	1138c <rb_rawbuf_append@plt>
   13908:	sub	sp, fp, #16
   1390c:	pop	{r4, r5, r6, r7, fp, pc}
   13910:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13914:	add	fp, sp, #24
   13918:	sub	sp, sp, #768	; 0x300
   1391c:	mov	r4, r2
   13920:	cmp	r1, #6
   13924:	beq	13a08 <__errno_location@plt+0x264c>
   13928:	cmp	r1, #3
   1392c:	beq	139fc <__errno_location@plt+0x2640>
   13930:	cmp	r1, #0
   13934:	bne	13a30 <__errno_location@plt+0x2674>
   13938:	ldrb	r0, [r4, #72]	; 0x48
   1393c:	tst	r0, #1
   13940:	beq	13a78 <__errno_location@plt+0x26bc>
   13944:	ldr	r0, [r4, #28]
   13948:	bl	1123c <rb_ssl_get_cipher@plt>
   1394c:	cmp	r0, #0
   13950:	beq	13a78 <__errno_location@plt+0x26bc>
   13954:	mov	r5, sp
   13958:	mov	r1, r0
   1395c:	mov	r2, #256	; 0x100
   13960:	mov	r0, r5
   13964:	bl	111c4 <rb_strlcpy@plt>
   13968:	mov	r0, #67	; 0x43
   1396c:	mov	r1, r5
   13970:	strb	r0, [sp, #256]	; 0x100
   13974:	ldr	r0, [r4, #24]
   13978:	str	r0, [sp, #257]	; 0x101
   1397c:	add	r0, sp, #256	; 0x100
   13980:	orr	r0, r0, #5
   13984:	bl	11278 <strcpy@plt>
   13988:	mov	r0, r5
   1398c:	bl	11230 <strlen@plt>
   13990:	ldr	r5, [r4, #12]
   13994:	mov	r7, r0
   13998:	mov	r0, #1
   1399c:	mov	r1, #40	; 0x28
   139a0:	bl	111a0 <calloc@plt>
   139a4:	cmp	r0, #0
   139a8:	beq	13b7c <__errno_location@plt+0x27c0>
   139ac:	add	r7, r7, #6
   139b0:	mov	r6, r0
   139b4:	mov	r0, #1
   139b8:	mov	r1, r7
   139bc:	bl	111a0 <calloc@plt>
   139c0:	cmp	r0, #0
   139c4:	beq	13b7c <__errno_location@plt+0x27c0>
   139c8:	add	r1, sp, #256	; 0x100
   139cc:	mov	r2, r7
   139d0:	str	r0, [r6, #12]
   139d4:	str	r7, [r6, #16]
   139d8:	bl	11248 <memcpy@plt>
   139dc:	str	r6, [r6]
   139e0:	ldr	r0, [r5, #40]	; 0x28
   139e4:	cmp	r0, #0
   139e8:	str	r0, [r6, #4]
   139ec:	beq	13a4c <__errno_location@plt+0x2690>
   139f0:	add	r0, r0, #8
   139f4:	str	r6, [r0]
   139f8:	b	13a5c <__errno_location@plt+0x26a0>
   139fc:	movw	r2, #15835	; 0x3ddb
   13a00:	movt	r2, #1
   13a04:	b	13a38 <__errno_location@plt+0x267c>
   13a08:	ldr	r0, [r4, #28]
   13a0c:	bl	112a8 <rb_get_ssl_strerror@plt>
   13a10:	movw	r2, #15755	; 0x3d8b
   13a14:	mov	r3, r0
   13a18:	mov	r0, r4
   13a1c:	mov	r1, #1
   13a20:	movt	r2, #1
   13a24:	sub	sp, fp, #24
   13a28:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a2c:	b	12a18 <__errno_location@plt+0x165c>
   13a30:	movw	r2, #15859	; 0x3df3
   13a34:	movt	r2, #1
   13a38:	mov	r0, r4
   13a3c:	mov	r1, #1
   13a40:	sub	sp, fp, #24
   13a44:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a48:	b	12a18 <__errno_location@plt+0x165c>
   13a4c:	mov	r0, r5
   13a50:	ldr	r1, [r0, #36]!	; 0x24
   13a54:	cmp	r1, #0
   13a58:	streq	r6, [r0]
   13a5c:	str	r6, [r5, #40]	; 0x28
   13a60:	ldr	r1, [r5, #44]	; 0x2c
   13a64:	ldr	r0, [r5, #16]
   13a68:	add	r1, r1, #1
   13a6c:	str	r1, [r5, #44]	; 0x2c
   13a70:	mov	r1, r5
   13a74:	bl	12d4c <__errno_location@plt+0x1990>
   13a78:	movw	r5, #40692	; 0x9ef4
   13a7c:	ldr	r0, [r4, #28]
   13a80:	add	r1, sp, #256	; 0x100
   13a84:	movt	r5, #2
   13a88:	add	r1, r1, #13
   13a8c:	ldr	r2, [r5, #12]
   13a90:	bl	111d0 <rb_get_ssl_certfp@plt>
   13a94:	cmp	r0, #0
   13a98:	beq	13b50 <__errno_location@plt+0x2794>
   13a9c:	mov	r7, r0
   13aa0:	mov	r0, #70	; 0x46
   13aa4:	ldr	r1, [r5, #12]
   13aa8:	strb	r0, [sp, #256]	; 0x100
   13aac:	ldr	r0, [r4, #24]
   13ab0:	str	r7, [sp, #265]	; 0x109
   13ab4:	str	r1, [sp, #261]	; 0x105
   13ab8:	mov	r1, #40	; 0x28
   13abc:	str	r0, [sp, #257]	; 0x101
   13ac0:	mov	r0, #1
   13ac4:	ldr	r5, [r4, #12]
   13ac8:	bl	111a0 <calloc@plt>
   13acc:	cmp	r0, #0
   13ad0:	beq	13b7c <__errno_location@plt+0x27c0>
   13ad4:	add	r7, r7, #13
   13ad8:	mov	r6, r0
   13adc:	mov	r0, #1
   13ae0:	mov	r1, r7
   13ae4:	bl	111a0 <calloc@plt>
   13ae8:	cmp	r0, #0
   13aec:	beq	13b7c <__errno_location@plt+0x27c0>
   13af0:	add	r1, sp, #256	; 0x100
   13af4:	mov	r2, r7
   13af8:	str	r0, [r6, #12]
   13afc:	str	r7, [r6, #16]
   13b00:	bl	11248 <memcpy@plt>
   13b04:	str	r6, [r6]
   13b08:	ldr	r0, [r5, #40]	; 0x28
   13b0c:	cmp	r0, #0
   13b10:	str	r0, [r6, #4]
   13b14:	beq	13b24 <__errno_location@plt+0x2768>
   13b18:	add	r0, r0, #8
   13b1c:	str	r6, [r0]
   13b20:	b	13b34 <__errno_location@plt+0x2778>
   13b24:	mov	r0, r5
   13b28:	ldr	r1, [r0, #36]!	; 0x24
   13b2c:	cmp	r1, #0
   13b30:	streq	r6, [r0]
   13b34:	str	r6, [r5, #40]	; 0x28
   13b38:	ldr	r1, [r5, #44]	; 0x2c
   13b3c:	ldr	r0, [r5, #16]
   13b40:	add	r1, r1, #1
   13b44:	str	r1, [r5, #44]	; 0x2c
   13b48:	mov	r1, r5
   13b4c:	bl	12d4c <__errno_location@plt+0x1990>
   13b50:	ldr	r0, [r4, #12]
   13b54:	ldr	r1, [r4, #24]
   13b58:	bl	130cc <__errno_location@plt+0x1d10>
   13b5c:	ldr	r0, [r4, #28]
   13b60:	mov	r1, r4
   13b64:	bl	13174 <__errno_location@plt+0x1db8>
   13b68:	ldr	r0, [r4, #32]
   13b6c:	mov	r1, r4
   13b70:	bl	1333c <__errno_location@plt+0x1f80>
   13b74:	sub	sp, fp, #24
   13b78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b7c:	bl	112d8 <rb_outofmemory@plt>
   13b80:	push	{fp, lr}
   13b84:	mov	fp, sp
   13b88:	mul	r1, r2, r1
   13b8c:	mov	r0, #1
   13b90:	bl	111a0 <calloc@plt>
   13b94:	cmp	r0, #0
   13b98:	popne	{fp, pc}
   13b9c:	bl	112d8 <rb_outofmemory@plt>
   13ba0:	cmp	r1, #0
   13ba4:	bxeq	lr
   13ba8:	mov	r0, r1
   13bac:	b	111f4 <free@plt>
   13bb0:	bx	lr
   13bb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bb8:	mov	r7, r0
   13bbc:	ldr	r6, [pc, #72]	; 13c0c <__errno_location@plt+0x2850>
   13bc0:	ldr	r5, [pc, #72]	; 13c10 <__errno_location@plt+0x2854>
   13bc4:	add	r6, pc, r6
   13bc8:	add	r5, pc, r5
   13bcc:	sub	r6, r6, r5
   13bd0:	mov	r8, r1
   13bd4:	mov	r9, r2
   13bd8:	bl	11090 <open@plt-0x20>
   13bdc:	asrs	r6, r6, #2
   13be0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13be4:	mov	r4, #0
   13be8:	add	r4, r4, #1
   13bec:	ldr	r3, [r5], #4
   13bf0:	mov	r2, r9
   13bf4:	mov	r1, r8
   13bf8:	mov	r0, r7
   13bfc:	blx	r3
   13c00:	cmp	r6, r4
   13c04:	bne	13be8 <__errno_location@plt+0x282c>
   13c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c0c:	andeq	r0, r1, r0, lsr #6
   13c10:	andeq	r0, r1, r8, lsl r3
   13c14:	bx	lr

Disassembly of section .fini:

00013c18 <.fini>:
   13c18:	push	{r3, lr}
   13c1c:	pop	{r3, pc}
