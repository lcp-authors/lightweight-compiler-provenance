
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	1116c <_start@@Base+0x3c>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x000121bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <strcmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <printf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <__isoc99_fscanf@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <fopen@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <free@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <realloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <strcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <puts@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <malloc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <__libc_start_main@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <__gmon_start__@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <strlen@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <setvbuf@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <putchar@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <fclose@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #73728	; 0x12000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <atoi@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #73728	; 0x12000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <getline@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #73728	; 0x12000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <abort@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #73728	; 0x12000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

Disassembly of section .text:

00010f2c <main@@Base>:
   10f2c:	ldr	r0, [pc, #460]	; 11100 <main@@Base+0x1d4>
   10f30:	mov	r3, #0
   10f34:	mov	r2, #2
   10f38:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f3c:	mov	r1, r3
   10f40:	sub	sp, sp, #36	; 0x24
   10f44:	ldr	r0, [r0]
   10f48:	bl	10ee4 <setvbuf@plt>
   10f4c:	ldr	r1, [pc, #432]	; 11104 <main@@Base+0x1d8>
   10f50:	ldr	r0, [pc, #432]	; 11108 <main@@Base+0x1dc>
   10f54:	bl	10e78 <fopen@plt>
   10f58:	mov	r7, r0
   10f5c:	bl	11ea8 <lista_nova@@Base>
   10f60:	mov	r3, #0
   10f64:	mov	r4, r0
   10f68:	mov	r5, r3
   10f6c:	str	r3, [sp, #4]
   10f70:	str	r3, [sp, #8]
   10f74:	mov	r2, r7
   10f78:	add	r1, sp, #8
   10f7c:	add	r0, sp, #4
   10f80:	bl	10f14 <getline@plt>
   10f84:	cmn	r0, #1
   10f88:	bne	11078 <main@@Base+0x14c>
   10f8c:	ldr	r0, [sp, #4]
   10f90:	bl	10e84 <free@plt>
   10f94:	mov	r0, r7
   10f98:	ldr	r9, [pc, #364]	; 1110c <main@@Base+0x1e0>
   10f9c:	bl	10efc <fclose@plt>
   10fa0:	ldr	r1, [pc, #360]	; 11110 <main@@Base+0x1e4>
   10fa4:	mov	r0, r4
   10fa8:	bl	113e8 <carrega_rotas@@Base>
   10fac:	mov	r7, r0
   10fb0:	ldr	r0, [pc, #348]	; 11114 <main@@Base+0x1e8>
   10fb4:	bl	10ea8 <puts@plt>
   10fb8:	ldr	r1, [pc, #324]	; 11104 <main@@Base+0x1d8>
   10fbc:	ldr	r0, [pc, #340]	; 11118 <main@@Base+0x1ec>
   10fc0:	bl	10e78 <fopen@plt>
   10fc4:	mov	r8, r0
   10fc8:	bl	11ea8 <lista_nova@@Base>
   10fcc:	mov	r6, r0
   10fd0:	bl	11ea8 <lista_nova@@Base>
   10fd4:	mov	r5, r0
   10fd8:	add	r3, sp, #20
   10fdc:	add	r2, sp, #12
   10fe0:	mov	r1, r9
   10fe4:	mov	r0, r8
   10fe8:	bl	10e6c <__isoc99_fscanf@plt>
   10fec:	cmp	r0, #2
   10ff0:	beq	110a0 <main@@Base+0x174>
   10ff4:	mov	r3, #5
   10ff8:	mov	r2, r4
   10ffc:	mov	r1, r5
   11000:	mov	r0, r6
   11004:	bl	11220 <proximas_n_chegadas@@Base>
   11008:	cmp	r0, #1
   1100c:	beq	11018 <main@@Base+0xec>
   11010:	ldr	r0, [pc, #260]	; 1111c <main@@Base+0x1f0>
   11014:	bl	10ea8 <puts@plt>
   11018:	mov	r0, r6
   1101c:	bl	11ecc <lista_apaga@@Base>
   11020:	mov	r0, r5
   11024:	bl	11ecc <lista_apaga@@Base>
   11028:	mov	r0, r8
   1102c:	bl	10efc <fclose@plt>
   11030:	ldr	r0, [pc, #232]	; 11120 <main@@Base+0x1f4>
   11034:	bl	10ea8 <puts@plt>
   11038:	ldr	r2, [pc, #228]	; 11124 <main@@Base+0x1f8>
   1103c:	mov	r1, r4
   11040:	mov	r0, r7
   11044:	bl	11330 <pesquisa_destinos@@Base>
   11048:	subs	r6, r0, #0
   1104c:	bne	110c4 <main@@Base+0x198>
   11050:	ldr	r1, [pc, #204]	; 11124 <main@@Base+0x1f8>
   11054:	ldr	r0, [pc, #204]	; 11128 <main@@Base+0x1fc>
   11058:	bl	10e60 <printf@plt>
   1105c:	mov	r0, r7
   11060:	bl	1150c <grafo_apaga@@Base>
   11064:	mov	r0, r4
   11068:	bl	11ecc <lista_apaga@@Base>
   1106c:	mov	r0, #0
   11070:	add	sp, sp, #36	; 0x24
   11074:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11078:	ldr	r6, [sp, #4]
   1107c:	mov	r0, r6
   11080:	bl	10ed8 <strlen@plt>
   11084:	add	r0, r6, r0
   11088:	mov	r2, #0
   1108c:	strb	r5, [r0, #-1]
   11090:	mov	r0, r4
   11094:	ldr	r1, [sp, #4]
   11098:	bl	11f30 <lista_insere@@Base>
   1109c:	b	10f74 <main@@Base+0x48>
   110a0:	add	r1, sp, #12
   110a4:	mov	r2, #0
   110a8:	mov	r0, r6
   110ac:	bl	11f30 <lista_insere@@Base>
   110b0:	mov	r2, #0
   110b4:	add	r1, sp, #20
   110b8:	mov	r0, r5
   110bc:	bl	11f30 <lista_insere@@Base>
   110c0:	b	10fd8 <main@@Base+0xac>
   110c4:	bl	11f08 <lista_tamanho@@Base>
   110c8:	mov	r2, r0
   110cc:	ldr	r1, [pc, #80]	; 11124 <main@@Base+0x1f8>
   110d0:	ldr	r0, [pc, #84]	; 1112c <main@@Base+0x200>
   110d4:	bl	10e60 <printf@plt>
   110d8:	ldr	r5, [r6]
   110dc:	cmp	r5, #0
   110e0:	bne	110f0 <main@@Base+0x1c4>
   110e4:	mov	r0, r6
   110e8:	bl	11ecc <lista_apaga@@Base>
   110ec:	b	1105c <main@@Base+0x130>
   110f0:	ldr	r0, [r5]
   110f4:	bl	10ea8 <puts@plt>
   110f8:	ldr	r5, [r5, #4]
   110fc:	b	110dc <main@@Base+0x1b0>
   11100:	andeq	r3, r2, r4, rrx
   11104:			; <UNDEFINED> instruction: 0x000124b6
   11108:	strdeq	r2, [r1], -r8
   1110c:	andeq	r2, r1, pc, lsr #10
   11110:	andeq	r2, r1, r7, lsl #10
   11114:	andeq	r2, r1, r1, lsl r5
   11118:	andeq	r2, r1, r2, lsr #10
   1111c:	andeq	r2, r1, r5, lsr r5
   11120:	andeq	r2, r1, pc, asr #10
   11124:	andeq	r2, r1, r1, ror #10
   11128:	andeq	r2, r1, ip, ror #10
   1112c:	muleq	r1, r1, r5

00011130 <_start@@Base>:
   11130:	mov	fp, #0
   11134:	mov	lr, #0
   11138:	pop	{r1}		; (ldr r1, [sp], #4)
   1113c:	mov	r2, sp
   11140:	push	{r2}		; (str r2, [sp, #-4]!)
   11144:	push	{r0}		; (str r0, [sp, #-4]!)
   11148:	ldr	ip, [pc, #16]	; 11160 <_start@@Base+0x30>
   1114c:	push	{ip}		; (str ip, [sp, #-4]!)
   11150:	ldr	r0, [pc, #12]	; 11164 <_start@@Base+0x34>
   11154:	ldr	r3, [pc, #12]	; 11168 <_start@@Base+0x38>
   11158:	bl	10ec0 <__libc_start_main@plt>
   1115c:	bl	10f20 <abort@plt>
   11160:	muleq	r1, ip, r4
   11164:	andeq	r0, r1, ip, lsr #30
   11168:	andeq	r2, r1, ip, lsr r4
   1116c:	ldr	r3, [pc, #20]	; 11188 <_start@@Base+0x58>
   11170:	ldr	r2, [pc, #20]	; 1118c <_start@@Base+0x5c>
   11174:	add	r3, pc, r3
   11178:	ldr	r2, [r3, r2]
   1117c:	cmp	r2, #0
   11180:	bxeq	lr
   11184:	b	10ecc <__gmon_start__@plt>
   11188:	andeq	r1, r1, r4, lsl #29
   1118c:	andeq	r0, r0, r8, asr r0
   11190:	ldr	r0, [pc, #24]	; 111b0 <_start@@Base+0x80>
   11194:	ldr	r3, [pc, #24]	; 111b4 <_start@@Base+0x84>
   11198:	cmp	r3, r0
   1119c:	bxeq	lr
   111a0:	ldr	r3, [pc, #16]	; 111b8 <_start@@Base+0x88>
   111a4:	cmp	r3, #0
   111a8:	bxeq	lr
   111ac:	bx	r3
   111b0:	andeq	r3, r2, r4, rrx
   111b4:	andeq	r3, r2, r4, rrx
   111b8:	andeq	r0, r0, r0
   111bc:	ldr	r0, [pc, #36]	; 111e8 <_start@@Base+0xb8>
   111c0:	ldr	r1, [pc, #36]	; 111ec <_start@@Base+0xbc>
   111c4:	sub	r1, r1, r0
   111c8:	asr	r1, r1, #2
   111cc:	add	r1, r1, r1, lsr #31
   111d0:	asrs	r1, r1, #1
   111d4:	bxeq	lr
   111d8:	ldr	r3, [pc, #16]	; 111f0 <_start@@Base+0xc0>
   111dc:	cmp	r3, #0
   111e0:	bxeq	lr
   111e4:	bx	r3
   111e8:	andeq	r3, r2, r4, rrx
   111ec:	andeq	r3, r2, r4, rrx
   111f0:	andeq	r0, r0, r0
   111f4:	push	{r4, lr}
   111f8:	ldr	r4, [pc, #24]	; 11218 <_start@@Base+0xe8>
   111fc:	ldrb	r3, [r4]
   11200:	cmp	r3, #0
   11204:	popne	{r4, pc}
   11208:	bl	11190 <_start@@Base+0x60>
   1120c:	mov	r3, #1
   11210:	strb	r3, [r4]
   11214:	pop	{r4, pc}
   11218:	andeq	r3, r2, r8, rrx
   1121c:	b	111bc <_start@@Base+0x8c>

00011220 <proximas_n_chegadas@@Base>:
   11220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11224:	mov	r9, r0
   11228:	mov	sl, r1
   1122c:	mov	r7, r2
   11230:	mov	r8, r3
   11234:	ldr	r4, [r2]
   11238:	ldr	r0, [r2, #8]
   1123c:	lsl	r0, r0, #2
   11240:	bl	10eb4 <malloc@plt>
   11244:	mov	r5, r0
   11248:	sub	r6, r0, #4
   1124c:	cmp	r4, #0
   11250:	bne	112a4 <proximas_n_chegadas@@Base+0x84>
   11254:	ldr	r0, [r9, #8]
   11258:	bl	11b10 <heap_nova@@Base>
   1125c:	ldr	r4, [r9]
   11260:	mov	r6, r0
   11264:	ldr	r9, [sl]
   11268:	cmp	r4, #0
   1126c:	bne	112c0 <proximas_n_chegadas@@Base+0xa0>
   11270:	ldr	r3, [r7, #8]
   11274:	cmp	r3, r4
   11278:	bgt	112f0 <proximas_n_chegadas@@Base+0xd0>
   1127c:	ldr	r7, [pc, #168]	; 1132c <proximas_n_chegadas@@Base+0x10c>
   11280:	mov	r0, r5
   11284:	mov	r4, #0
   11288:	bl	10e84 <free@plt>
   1128c:	cmp	r4, r8
   11290:	blt	11300 <proximas_n_chegadas@@Base+0xe0>
   11294:	mov	r0, r6
   11298:	bl	11b60 <heap_apaga@@Base>
   1129c:	mov	r0, #1
   112a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a4:	mov	r0, #200	; 0xc8
   112a8:	bl	10eb4 <malloc@plt>
   112ac:	str	r0, [r6, #4]!
   112b0:	ldr	r1, [r4]
   112b4:	bl	10e9c <strcpy@plt>
   112b8:	ldr	r4, [r4, #4]
   112bc:	b	1124c <proximas_n_chegadas@@Base+0x2c>
   112c0:	ldr	r0, [r9]
   112c4:	bl	10f08 <atoi@plt>
   112c8:	mov	sl, r0
   112cc:	ldr	r0, [r4]
   112d0:	bl	10f08 <atoi@plt>
   112d4:	mov	r2, r0
   112d8:	mov	r0, r6
   112dc:	ldr	r1, [r5, sl, lsl #2]
   112e0:	bl	11cfc <heap_insere@@Base>
   112e4:	ldr	r4, [r4, #4]
   112e8:	ldr	r9, [r9, #4]
   112ec:	b	11268 <proximas_n_chegadas@@Base+0x48>
   112f0:	ldr	r0, [r5, r4, lsl #2]
   112f4:	add	r4, r4, #1
   112f8:	bl	10e84 <free@plt>
   112fc:	b	11270 <proximas_n_chegadas@@Base+0x50>
   11300:	mov	r0, r6
   11304:	add	r4, r4, #1
   11308:	bl	11d88 <heap_remove@@Base>
   1130c:	mov	r5, r0
   11310:	mov	r2, r0
   11314:	mov	r1, r4
   11318:	mov	r0, r7
   1131c:	bl	10e60 <printf@plt>
   11320:	mov	r0, r5
   11324:	bl	10e84 <free@plt>
   11328:	b	1128c <proximas_n_chegadas@@Base+0x6c>
   1132c:	andeq	r2, r1, ip, lsr #9

00011330 <pesquisa_destinos@@Base>:
   11330:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11334:	mov	r9, r1
   11338:	mov	r6, r0
   1133c:	mov	r7, r2
   11340:	mov	r5, #0
   11344:	bl	11ea8 <lista_nova@@Base>
   11348:	ldr	r4, [r9]
   1134c:	mov	r8, r0
   11350:	cmp	r4, #0
   11354:	bne	11388 <pesquisa_destinos@@Base+0x58>
   11358:	mov	r1, r5
   1135c:	mov	r0, r6
   11360:	bl	11768 <v_sucessores@@Base>
   11364:	mov	r5, r0
   11368:	mov	r4, #0
   1136c:	ldr	r3, [r5]
   11370:	cmp	r3, r4
   11374:	bgt	113a8 <pesquisa_destinos@@Base+0x78>
   11378:	mov	r0, r5
   1137c:	bl	121f8 <vetor_apaga@@Base>
   11380:	mov	r0, r8
   11384:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11388:	mov	r1, r7
   1138c:	ldr	r0, [r4]
   11390:	bl	10e54 <strcmp@plt>
   11394:	cmp	r0, #0
   11398:	beq	11358 <pesquisa_destinos@@Base+0x28>
   1139c:	add	r5, r5, #1
   113a0:	ldr	r4, [r4, #4]
   113a4:	b	11350 <pesquisa_destinos@@Base+0x20>
   113a8:	ldr	r6, [r9]
   113ac:	mov	r7, #0
   113b0:	mov	r1, r4
   113b4:	mov	r0, r5
   113b8:	bl	1225c <vetor_elemento@@Base>
   113bc:	cmp	r0, r7
   113c0:	bgt	113dc <pesquisa_destinos@@Base+0xac>
   113c4:	mov	r2, #0
   113c8:	mov	r0, r8
   113cc:	ldr	r1, [r6]
   113d0:	add	r4, r4, #1
   113d4:	bl	11f30 <lista_insere@@Base>
   113d8:	b	1136c <pesquisa_destinos@@Base+0x3c>
   113dc:	add	r7, r7, #1
   113e0:	ldr	r6, [r6, #4]
   113e4:	b	113b0 <pesquisa_destinos@@Base+0x80>

000113e8 <carrega_rotas@@Base>:
   113e8:	push	{r0, r1, r4, r5, r6, lr}
   113ec:	subs	r4, r1, #0
   113f0:	beq	1141c <carrega_rotas@@Base+0x34>
   113f4:	mov	r6, r0
   113f8:	mov	r0, r4
   113fc:	ldr	r1, [pc, #128]	; 11484 <carrega_rotas@@Base+0x9c>
   11400:	bl	10e78 <fopen@plt>
   11404:	subs	r5, r0, #0
   11408:	bne	11428 <carrega_rotas@@Base+0x40>
   1140c:	mov	r1, r4
   11410:	ldr	r0, [pc, #112]	; 11488 <carrega_rotas@@Base+0xa0>
   11414:	mov	r4, r5
   11418:	bl	10e60 <printf@plt>
   1141c:	mov	r0, r4
   11420:	add	sp, sp, #8
   11424:	pop	{r4, r5, r6, pc}
   11428:	mov	r0, r6
   1142c:	bl	11f08 <lista_tamanho@@Base>
   11430:	mov	r1, #0
   11434:	bl	114b8 <grafo_novo@@Base>
   11438:	subs	r4, r0, #0
   1143c:	ldrne	r6, [pc, #72]	; 1148c <carrega_rotas@@Base+0xa4>
   11440:	bne	1145c <carrega_rotas@@Base+0x74>
   11444:	ldr	r0, [pc, #68]	; 11490 <carrega_rotas@@Base+0xa8>
   11448:	bl	10ea8 <puts@plt>
   1144c:	b	1141c <carrega_rotas@@Base+0x34>
   11450:	mov	r0, r4
   11454:	ldm	sp, {r1, r2}
   11458:	bl	11664 <grafo_adiciona@@Base>
   1145c:	add	r3, sp, #4
   11460:	mov	r2, sp
   11464:	mov	r1, r6
   11468:	mov	r0, r5
   1146c:	bl	10e6c <__isoc99_fscanf@plt>
   11470:	cmp	r0, #2
   11474:	beq	11450 <carrega_rotas@@Base+0x68>
   11478:	mov	r0, r5
   1147c:	bl	10efc <fclose@plt>
   11480:	b	1141c <carrega_rotas@@Base+0x34>
   11484:			; <UNDEFINED> instruction: 0x000124b6
   11488:			; <UNDEFINED> instruction: 0x000124b8
   1148c:	strdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   11490:	ldrdeq	r2, [r1], -r9

00011494 <cria_no@@Base>:
   11494:	push	{r4, lr}
   11498:	mov	r4, r0
   1149c:	mov	r0, #8
   114a0:	bl	10eb4 <malloc@plt>
   114a4:	cmp	r0, #0
   114a8:	movne	r3, #0
   114ac:	strne	r4, [r0]
   114b0:	strne	r3, [r0, #4]
   114b4:	pop	{r4, pc}

000114b8 <grafo_novo@@Base>:
   114b8:	push	{r4, r5, r6, lr}
   114bc:	mov	r5, r0
   114c0:	mov	r0, #12
   114c4:	mov	r6, r1
   114c8:	bl	10eb4 <malloc@plt>
   114cc:	subs	r4, r0, #0
   114d0:	beq	11504 <grafo_novo@@Base+0x4c>
   114d4:	mov	r0, r5
   114d8:	mov	r1, #8
   114dc:	str	r6, [r4]
   114e0:	str	r5, [r4, #4]
   114e4:	bl	10e48 <calloc@plt>
   114e8:	cmp	r0, #0
   114ec:	mov	r5, r0
   114f0:	str	r0, [r4, #8]
   114f4:	bne	11504 <grafo_novo@@Base+0x4c>
   114f8:	mov	r0, r4
   114fc:	mov	r4, r5
   11500:	bl	10e84 <free@plt>
   11504:	mov	r0, r4
   11508:	pop	{r4, r5, r6, pc}

0001150c <grafo_apaga@@Base>:
   1150c:	push	{r4, r5, r6, lr}
   11510:	subs	r4, r0, #0
   11514:	popeq	{r4, r5, r6, pc}
   11518:	ldr	r3, [r4, #8]
   1151c:	cmp	r3, #0
   11520:	movne	r5, #0
   11524:	bne	11558 <grafo_apaga@@Base+0x4c>
   11528:	mov	r0, r4
   1152c:	pop	{r4, r5, r6, lr}
   11530:	b	10e84 <free@plt>
   11534:	ldr	r2, [r0, #4]
   11538:	str	r2, [r3, #4]
   1153c:	bl	10e84 <free@plt>
   11540:	ldr	r3, [r4, #8]
   11544:	add	r3, r3, r6
   11548:	ldr	r0, [r3, #4]
   1154c:	cmp	r0, #0
   11550:	bne	11534 <grafo_apaga@@Base+0x28>
   11554:	add	r5, r5, #1
   11558:	ldr	r3, [r4, #4]
   1155c:	cmp	r3, r5
   11560:	lslgt	r6, r5, #3
   11564:	bgt	11540 <grafo_apaga@@Base+0x34>
   11568:	ldr	r0, [r4, #8]
   1156c:	bl	10e84 <free@plt>
   11570:	b	11528 <grafo_apaga@@Base+0x1c>

00011574 <grafo_remove@@Base>:
   11574:	push	{r4, r5, r6, lr}
   11578:	subs	r6, r0, #0
   1157c:	popeq	{r4, r5, r6, pc}
   11580:	ldr	ip, [r6, #8]
   11584:	add	ip, ip, r1, lsl #3
   11588:	ldr	r0, [ip, #4]
   1158c:	cmp	r0, #0
   11590:	popeq	{r4, r5, r6, pc}
   11594:	mov	r5, r2
   11598:	mov	r4, r1
   1159c:	ldrd	r2, [r0]
   115a0:	cmp	r2, r5
   115a4:	streq	r3, [ip, #4]
   115a8:	beq	115c8 <grafo_remove@@Base+0x54>
   115ac:	cmp	r3, #0
   115b0:	beq	115cc <grafo_remove@@Base+0x58>
   115b4:	ldm	r3, {r1, r2}
   115b8:	cmp	r1, r5
   115bc:	bne	11618 <grafo_remove@@Base+0xa4>
   115c0:	str	r2, [r0, #4]
   115c4:	mov	r0, r3
   115c8:	bl	10e84 <free@plt>
   115cc:	ldr	r3, [r6]
   115d0:	cmp	r3, #0
   115d4:	popne	{r4, r5, r6, pc}
   115d8:	ldr	r2, [r6, #8]
   115dc:	add	r5, r2, r5, lsl #3
   115e0:	ldr	r0, [r5, #4]
   115e4:	ldrd	r2, [r0]
   115e8:	cmp	r2, r4
   115ec:	streq	r3, [r5, #4]
   115f0:	beq	11610 <grafo_remove@@Base+0x9c>
   115f4:	cmp	r3, #0
   115f8:	popeq	{r4, r5, r6, pc}
   115fc:	ldm	r3, {r1, r2}
   11600:	cmp	r1, r4
   11604:	bne	11624 <grafo_remove@@Base+0xb0>
   11608:	str	r2, [r0, #4]
   1160c:	mov	r0, r3
   11610:	pop	{r4, r5, r6, lr}
   11614:	b	10e84 <free@plt>
   11618:	mov	r0, r3
   1161c:	mov	r3, r2
   11620:	b	115ac <grafo_remove@@Base+0x38>
   11624:	mov	r0, r3
   11628:	mov	r3, r2
   1162c:	b	115f4 <grafo_remove@@Base+0x80>

00011630 <grafo_aresta@@Base>:
   11630:	cmp	r0, #0
   11634:	ldrne	r3, [r0, #8]
   11638:	addne	r3, r3, r1, lsl #3
   1163c:	ldrne	r0, [r3, #4]
   11640:	bxeq	lr
   11644:	cmp	r0, #0
   11648:	bxeq	lr
   1164c:	ldr	r3, [r0]
   11650:	cmp	r3, r2
   11654:	ldrne	r0, [r0, #4]
   11658:	bne	11644 <grafo_aresta@@Base+0x14>
   1165c:	mov	r0, #1
   11660:	bx	lr

00011664 <grafo_adiciona@@Base>:
   11664:	push	{r4, r5, r6, lr}
   11668:	subs	r6, r0, #0
   1166c:	popeq	{r4, r5, r6, pc}
   11670:	bl	11630 <grafo_aresta@@Base>
   11674:	cmp	r0, #0
   11678:	popne	{r4, r5, r6, pc}
   1167c:	mov	r0, r2
   11680:	mov	r5, r1
   11684:	mov	r4, r2
   11688:	bl	11494 <cria_no@@Base>
   1168c:	ldr	r3, [r6, #8]
   11690:	add	r2, r3, r5, lsl #3
   11694:	ldr	r1, [r2, #4]
   11698:	str	r1, [r0, #4]
   1169c:	str	r0, [r2, #4]
   116a0:	ldr	r2, [r3, r5, lsl #3]
   116a4:	add	r2, r2, #1
   116a8:	str	r2, [r3, r5, lsl #3]
   116ac:	ldr	r3, [r6]
   116b0:	cmp	r3, #0
   116b4:	popne	{r4, r5, r6, pc}
   116b8:	mov	r0, r5
   116bc:	bl	11494 <cria_no@@Base>
   116c0:	ldr	r3, [r6, #8]
   116c4:	add	r2, r3, r4, lsl #3
   116c8:	ldr	r1, [r2, #4]
   116cc:	str	r1, [r0, #4]
   116d0:	str	r0, [r2, #4]
   116d4:	ldr	r2, [r3, r4, lsl #3]
   116d8:	add	r2, r2, #1
   116dc:	str	r2, [r3, r4, lsl #3]
   116e0:	pop	{r4, r5, r6, pc}

000116e4 <grafo_imprime@@Base>:
   116e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116e8:	mov	r6, r0
   116ec:	mov	r4, #0
   116f0:	ldr	r7, [pc, #100]	; 1175c <grafo_imprime@@Base+0x78>
   116f4:	ldr	r8, [pc, #100]	; 11760 <grafo_imprime@@Base+0x7c>
   116f8:	ldr	r9, [pc, #100]	; 11764 <grafo_imprime@@Base+0x80>
   116fc:	ldr	r3, [r6, #4]
   11700:	cmp	r3, r4
   11704:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   11708:	mov	r1, r4
   1170c:	mov	r0, r7
   11710:	ldr	r3, [r6, #8]
   11714:	add	r3, r3, r4, lsl #3
   11718:	ldr	r5, [r3, #4]
   1171c:	bl	10e60 <printf@plt>
   11720:	cmp	r5, #0
   11724:	bne	11738 <grafo_imprime@@Base+0x54>
   11728:	mov	r0, #10
   1172c:	add	r4, r4, #1
   11730:	bl	10ef0 <putchar@plt>
   11734:	b	116fc <grafo_imprime@@Base+0x18>
   11738:	ldr	r1, [r5]
   1173c:	mov	r0, r8
   11740:	bl	10e60 <printf@plt>
   11744:	ldr	r5, [r5, #4]
   11748:	cmp	r5, #0
   1174c:	beq	11728 <grafo_imprime@@Base+0x44>
   11750:	mov	r0, r9
   11754:	ldr	r1, [r5]
   11758:	b	11740 <grafo_imprime@@Base+0x5c>
   1175c:			; <UNDEFINED> instruction: 0x000125b7
   11760:	strdeq	r2, [r1], -r5
   11764:			; <UNDEFINED> instruction: 0x000125bc

00011768 <v_sucessores@@Base>:
   11768:	cmp	r0, #0
   1176c:	push	{r4, r5, r6, r7, r8, lr}
   11770:	lsrne	r4, r1, #31
   11774:	moveq	r4, #1
   11778:	cmp	r4, #0
   1177c:	movne	r7, #0
   11780:	bne	117b0 <v_sucessores@@Base+0x48>
   11784:	ldr	r3, [r0, #4]
   11788:	cmp	r3, r1
   1178c:	movle	r7, r4
   11790:	ble	117b0 <v_sucessores@@Base+0x48>
   11794:	mov	r5, r0
   11798:	mov	r6, r1
   1179c:	bl	121d4 <vetor_novo@@Base>
   117a0:	mov	r7, r0
   117a4:	ldr	r3, [r5, #4]
   117a8:	cmp	r3, r4
   117ac:	bgt	117b8 <v_sucessores@@Base+0x50>
   117b0:	mov	r0, r7
   117b4:	pop	{r4, r5, r6, r7, r8, pc}
   117b8:	mov	r2, r4
   117bc:	mov	r1, r6
   117c0:	mov	r0, r5
   117c4:	bl	11630 <grafo_aresta@@Base>
   117c8:	cmp	r0, #0
   117cc:	beq	117e0 <v_sucessores@@Base+0x78>
   117d0:	mvn	r2, #0
   117d4:	mov	r1, r4
   117d8:	mov	r0, r7
   117dc:	bl	12290 <vetor_insere@@Base>
   117e0:	add	r4, r4, #1
   117e4:	b	117a4 <v_sucessores@@Base+0x3c>

000117e8 <v_antecessores@@Base>:
   117e8:	cmp	r0, #0
   117ec:	push	{r4, r5, r6, r7, r8, lr}
   117f0:	lsrne	r4, r1, #31
   117f4:	moveq	r4, #1
   117f8:	cmp	r4, #0
   117fc:	movne	r7, #0
   11800:	bne	11830 <v_antecessores@@Base+0x48>
   11804:	ldr	r3, [r0, #4]
   11808:	cmp	r3, r1
   1180c:	movle	r7, r4
   11810:	ble	11830 <v_antecessores@@Base+0x48>
   11814:	mov	r5, r0
   11818:	mov	r6, r1
   1181c:	bl	121d4 <vetor_novo@@Base>
   11820:	mov	r7, r0
   11824:	ldr	r3, [r5, #4]
   11828:	cmp	r3, r4
   1182c:	bgt	11838 <v_antecessores@@Base+0x50>
   11830:	mov	r0, r7
   11834:	pop	{r4, r5, r6, r7, r8, pc}
   11838:	mov	r2, r6
   1183c:	mov	r1, r4
   11840:	mov	r0, r5
   11844:	bl	11630 <grafo_aresta@@Base>
   11848:	cmp	r0, #0
   1184c:	beq	1185c <v_antecessores@@Base+0x74>
   11850:	mvn	r2, #0
   11854:	mov	r0, r7
   11858:	bl	12290 <vetor_insere@@Base>
   1185c:	add	r4, r4, #1
   11860:	b	11824 <v_antecessores@@Base+0x3c>

00011864 <dfs_helper@@Base>:
   11864:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11868:	ldr	r5, [sp, #40]	; 0x28
   1186c:	ldr	r4, [r5, r1, lsl #2]
   11870:	cmp	r4, #0
   11874:	movne	r0, #0
   11878:	bne	118f0 <dfs_helper@@Base+0x8c>
   1187c:	cmp	r1, r2
   11880:	str	r3, [r5, r1, lsl #2]
   11884:	moveq	r0, r3
   11888:	beq	118f0 <dfs_helper@@Base+0x8c>
   1188c:	mov	r7, r2
   11890:	mov	r6, r1
   11894:	mov	r8, r0
   11898:	add	r9, r3, #1
   1189c:	ldr	r3, [r8, #4]
   118a0:	cmp	r3, r4
   118a4:	movle	r0, #0
   118a8:	strle	r0, [r5, r6, lsl #2]
   118ac:	ble	118f0 <dfs_helper@@Base+0x8c>
   118b0:	mov	r2, r4
   118b4:	mov	r1, r6
   118b8:	mov	r0, r8
   118bc:	bl	11630 <grafo_aresta@@Base>
   118c0:	cmp	r0, #0
   118c4:	bne	118d0 <dfs_helper@@Base+0x6c>
   118c8:	add	r4, r4, #1
   118cc:	b	1189c <dfs_helper@@Base+0x38>
   118d0:	mov	r3, r9
   118d4:	mov	r2, r7
   118d8:	str	r5, [sp]
   118dc:	mov	r1, r4
   118e0:	mov	r0, r8
   118e4:	bl	11864 <dfs_helper@@Base>
   118e8:	cmp	r0, #0
   118ec:	beq	118c8 <dfs_helper@@Base+0x64>
   118f0:	add	sp, sp, #12
   118f4:	pop	{r4, r5, r6, r7, r8, r9, pc}

000118f8 <grafo_dfs@@Base>:
   118f8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   118fc:	subs	r4, r0, #0
   11900:	beq	11950 <grafo_dfs@@Base+0x58>
   11904:	mov	r6, r1
   11908:	mov	r1, #4
   1190c:	ldr	r0, [r4, #4]
   11910:	mov	r7, r2
   11914:	mov	r8, r3
   11918:	bl	10e48 <calloc@plt>
   1191c:	mov	r5, r0
   11920:	mov	r1, r6
   11924:	mov	r3, #1
   11928:	mov	r2, r7
   1192c:	mov	r0, r4
   11930:	str	r5, [sp]
   11934:	bl	11864 <dfs_helper@@Base>
   11938:	subs	r6, r0, #0
   1193c:	bne	1195c <grafo_dfs@@Base+0x64>
   11940:	mov	r4, r6
   11944:	mov	r0, r5
   11948:	bl	10e84 <free@plt>
   1194c:	str	r6, [r8]
   11950:	mov	r0, r4
   11954:	add	sp, sp, #8
   11958:	pop	{r4, r5, r6, r7, r8, pc}
   1195c:	mov	r1, #4
   11960:	bl	10e48 <calloc@plt>
   11964:	mov	r7, r0
   11968:	mov	r2, #1
   1196c:	sub	r0, r0, #4
   11970:	sub	r3, r2, #1
   11974:	cmp	r6, r3
   11978:	ble	119ac <grafo_dfs@@Base+0xb4>
   1197c:	mov	r3, #0
   11980:	ldr	r1, [r4, #4]
   11984:	b	1198c <grafo_dfs@@Base+0x94>
   11988:	add	r3, r3, #1
   1198c:	cmp	r1, r3
   11990:	ble	119a4 <grafo_dfs@@Base+0xac>
   11994:	ldr	ip, [r5, r3, lsl #2]
   11998:	cmp	ip, r2
   1199c:	bne	11988 <grafo_dfs@@Base+0x90>
   119a0:	str	r3, [r0, r2, lsl #2]
   119a4:	add	r2, r2, #1
   119a8:	b	11970 <grafo_dfs@@Base+0x78>
   119ac:	mov	r0, r5
   119b0:	str	r6, [r8]
   119b4:	mov	r4, r7
   119b8:	bl	10e84 <free@plt>
   119bc:	b	11950 <grafo_dfs@@Base+0x58>

000119c0 <grafo_bfs@@Base>:
   119c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119c4:	subs	r9, r0, #0
   119c8:	str	r3, [sp]
   119cc:	beq	11af8 <grafo_bfs@@Base+0x138>
   119d0:	ldr	r5, [r9, #4]
   119d4:	mov	r6, r1
   119d8:	mov	r1, #4
   119dc:	mov	sl, r2
   119e0:	mov	r0, r5
   119e4:	bl	10e48 <calloc@plt>
   119e8:	mov	r4, r0
   119ec:	mov	r1, #4
   119f0:	mov	r0, r5
   119f4:	bl	10e48 <calloc@plt>
   119f8:	mov	fp, r0
   119fc:	mov	r3, #0
   11a00:	mvn	r2, #0
   11a04:	cmp	r5, r3
   11a08:	bgt	11a5c <grafo_bfs@@Base+0x9c>
   11a0c:	mov	r7, #1
   11a10:	str	r6, [r4, r6, lsl #2]
   11a14:	str	r6, [fp]
   11a18:	mov	r6, #0
   11a1c:	ldr	r3, [fp, r6, lsl #2]
   11a20:	add	r6, r6, #1
   11a24:	mov	r8, #0
   11a28:	sdiv	r2, r6, r5
   11a2c:	mls	r6, r5, r2, r6
   11a30:	cmp	r5, r8
   11a34:	bgt	11a68 <grafo_bfs@@Base+0xa8>
   11a38:	cmp	r7, r6
   11a3c:	bne	11a1c <grafo_bfs@@Base+0x5c>
   11a40:	ldr	r3, [r4, sl, lsl #2]
   11a44:	cmp	r3, #0
   11a48:	movlt	r6, #0
   11a4c:	blt	11ae0 <grafo_bfs@@Base+0x120>
   11a50:	mov	r3, sl
   11a54:	mov	r6, #1
   11a58:	b	11ab8 <grafo_bfs@@Base+0xf8>
   11a5c:	str	r2, [r4, r3, lsl #2]
   11a60:	add	r3, r3, #1
   11a64:	b	11a04 <grafo_bfs@@Base+0x44>
   11a68:	mov	r1, r3
   11a6c:	mov	r2, r8
   11a70:	str	r3, [sp, #4]
   11a74:	mov	r0, r9
   11a78:	bl	11630 <grafo_aresta@@Base>
   11a7c:	cmp	r0, #0
   11a80:	ldr	r3, [sp, #4]
   11a84:	beq	11aa8 <grafo_bfs@@Base+0xe8>
   11a88:	ldr	r2, [r4, r8, lsl #2]
   11a8c:	cmn	r2, #1
   11a90:	bne	11aa8 <grafo_bfs@@Base+0xe8>
   11a94:	str	r8, [fp, r7, lsl #2]
   11a98:	add	r7, r7, #1
   11a9c:	str	r3, [r4, r8, lsl #2]
   11aa0:	sdiv	r2, r7, r5
   11aa4:	mls	r7, r5, r2, r7
   11aa8:	add	r8, r8, #1
   11aac:	b	11a30 <grafo_bfs@@Base+0x70>
   11ab0:	add	r6, r6, #1
   11ab4:	mov	r3, r2
   11ab8:	ldr	r2, [r4, r3, lsl #2]
   11abc:	cmp	r2, r3
   11ac0:	bne	11ab0 <grafo_bfs@@Base+0xf0>
   11ac4:	lsl	r5, r6, #2
   11ac8:	mov	r0, r5
   11acc:	bl	10eb4 <malloc@plt>
   11ad0:	mov	r9, r0
   11ad4:	add	r0, r0, r5
   11ad8:	cmp	r9, r0
   11adc:	bne	11b04 <grafo_bfs@@Base+0x144>
   11ae0:	mov	r0, fp
   11ae4:	bl	10e84 <free@plt>
   11ae8:	mov	r0, r4
   11aec:	bl	10e84 <free@plt>
   11af0:	ldr	r3, [sp]
   11af4:	str	r6, [r3]
   11af8:	mov	r0, r9
   11afc:	add	sp, sp, #12
   11b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b04:	str	sl, [r0, #-4]!
   11b08:	ldr	sl, [r4, sl, lsl #2]
   11b0c:	b	11ad8 <grafo_bfs@@Base+0x118>

00011b10 <heap_nova@@Base>:
   11b10:	push	{r4, r5, r6, lr}
   11b14:	mov	r5, r0
   11b18:	mov	r0, #12
   11b1c:	bl	10eb4 <malloc@plt>
   11b20:	subs	r4, r0, #0
   11b24:	beq	11b58 <heap_nova@@Base+0x48>
   11b28:	mov	r3, #0
   11b2c:	mov	r0, r5
   11b30:	mov	r1, #4
   11b34:	stm	r4, {r3, r5}
   11b38:	bl	10e48 <calloc@plt>
   11b3c:	cmp	r0, #0
   11b40:	mov	r5, r0
   11b44:	str	r0, [r4, #8]
   11b48:	bne	11b58 <heap_nova@@Base+0x48>
   11b4c:	mov	r0, r4
   11b50:	mov	r4, r5
   11b54:	bl	10e84 <free@plt>
   11b58:	mov	r0, r4
   11b5c:	pop	{r4, r5, r6, pc}

00011b60 <heap_apaga@@Base>:
   11b60:	push	{r4, r5, r6, lr}
   11b64:	subs	r4, r0, #0
   11b68:	movne	r5, #0
   11b6c:	movne	r6, r5
   11b70:	popeq	{r4, r5, r6, pc}
   11b74:	ldr	r3, [r4]
   11b78:	ldr	r0, [r4, #8]
   11b7c:	cmp	r3, r5
   11b80:	bgt	11b94 <heap_apaga@@Base+0x34>
   11b84:	bl	10e84 <free@plt>
   11b88:	mov	r0, r4
   11b8c:	pop	{r4, r5, r6, lr}
   11b90:	b	10e84 <free@plt>
   11b94:	ldr	r3, [r0, r5, lsl #2]
   11b98:	ldr	r0, [r3, #4]
   11b9c:	bl	10e84 <free@plt>
   11ba0:	ldr	r3, [r4, #8]
   11ba4:	ldr	r0, [r3, r5, lsl #2]
   11ba8:	bl	10e84 <free@plt>
   11bac:	ldr	r3, [r4, #8]
   11bb0:	str	r6, [r3, r5, lsl #2]
   11bb4:	add	r5, r5, #1
   11bb8:	b	11b74 <heap_apaga@@Base+0x14>

00011bbc <elemento_cria@@Base>:
   11bbc:	push	{r4, r5, r6, r7, r8, lr}
   11bc0:	mov	r7, r0
   11bc4:	mov	r0, #8
   11bc8:	mov	r6, r1
   11bcc:	bl	10eb4 <malloc@plt>
   11bd0:	subs	r4, r0, #0
   11bd4:	beq	11c08 <elemento_cria@@Base+0x4c>
   11bd8:	mov	r0, r6
   11bdc:	bl	10ed8 <strlen@plt>
   11be0:	mov	r1, #1
   11be4:	add	r0, r0, r1
   11be8:	bl	10e48 <calloc@plt>
   11bec:	cmp	r0, #0
   11bf0:	mov	r5, r0
   11bf4:	str	r0, [r4, #4]
   11bf8:	bne	11c10 <elemento_cria@@Base+0x54>
   11bfc:	mov	r0, r4
   11c00:	mov	r4, r5
   11c04:	bl	10e84 <free@plt>
   11c08:	mov	r0, r4
   11c0c:	pop	{r4, r5, r6, r7, r8, pc}
   11c10:	mov	r1, r6
   11c14:	bl	10e9c <strcpy@plt>
   11c18:	str	r7, [r4]
   11c1c:	b	11c08 <elemento_cria@@Base+0x4c>

00011c20 <mostraHeap@@Base>:
   11c20:	ldr	r3, [r0]
   11c24:	cmp	r3, r1
   11c28:	bgt	11ca8 <mostraHeap@@Base+0x88>
   11c2c:	mov	r0, #10
   11c30:	b	11ca4 <mostraHeap@@Base+0x84>
   11c34:	sub	r3, r3, #1
   11c38:	add	r7, r7, #1
   11c3c:	asr	r3, r3, #1
   11c40:	cmp	r3, #0
   11c44:	bgt	11c34 <mostraHeap@@Base+0x14>
   11c48:	ldr	sl, [pc, #120]	; 11cc8 <mostraHeap@@Base+0xa8>
   11c4c:	lsl	r8, r1, #1
   11c50:	mov	r6, r1
   11c54:	add	r9, r7, r7, lsl #1
   11c58:	mov	r5, #0
   11c5c:	mov	r4, r0
   11c60:	add	r1, r8, #1
   11c64:	bl	11c20 <mostraHeap@@Base>
   11c68:	cmp	r9, r5
   11c6c:	bne	11cb8 <mostraHeap@@Base+0x98>
   11c70:	ldr	r3, [r4, #8]
   11c74:	ldr	r0, [pc, #80]	; 11ccc <mostraHeap@@Base+0xac>
   11c78:	ldr	r3, [r3, r6, lsl #2]
   11c7c:	ldr	r2, [r3]
   11c80:	ldr	r1, [r3, #4]
   11c84:	bl	10e60 <printf@plt>
   11c88:	add	r1, r8, #2
   11c8c:	mov	r0, r4
   11c90:	bl	11c20 <mostraHeap@@Base>
   11c94:	cmp	r7, #0
   11c98:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ca0:	mov	r0, #10
   11ca4:	b	10ef0 <putchar@plt>
   11ca8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cac:	mov	r3, r1
   11cb0:	mov	r7, #0
   11cb4:	b	11c40 <mostraHeap@@Base+0x20>
   11cb8:	mov	r0, sl
   11cbc:	add	r5, r5, #1
   11cc0:	bl	10e60 <printf@plt>
   11cc4:	b	11c68 <mostraHeap@@Base+0x48>
   11cc8:	andeq	r2, r1, r1, asr #11
   11ccc:	andeq	r2, r1, r7, asr #11

00011cd0 <menor_que@@Base>:
   11cd0:	cmp	r1, #0
   11cd4:	cmpne	r0, #0
   11cd8:	beq	11cf4 <menor_que@@Base+0x24>
   11cdc:	ldr	r0, [r0]
   11ce0:	ldr	r3, [r1]
   11ce4:	cmp	r0, r3
   11ce8:	movge	r0, #0
   11cec:	movlt	r0, #1
   11cf0:	bx	lr
   11cf4:	mov	r0, #0
   11cf8:	bx	lr

00011cfc <heap_insere@@Base>:
   11cfc:	push	{r4, r5, r6, r7, r8, lr}
   11d00:	mov	r4, r0
   11d04:	ldr	r0, [r0]
   11d08:	ldr	r3, [r4, #4]
   11d0c:	cmp	r0, r3
   11d10:	blt	11d1c <heap_insere@@Base+0x20>
   11d14:	mov	r0, #0
   11d18:	pop	{r4, r5, r6, r7, r8, pc}
   11d1c:	mov	r0, r2
   11d20:	bl	11bbc <elemento_cria@@Base>
   11d24:	cmp	r0, #0
   11d28:	beq	11d14 <heap_insere@@Base+0x18>
   11d2c:	ldr	r2, [r4]
   11d30:	ldr	r5, [r4, #8]
   11d34:	add	r3, r2, #1
   11d38:	str	r0, [r5, r2, lsl #2]
   11d3c:	str	r3, [r4]
   11d40:	cmp	r2, #0
   11d44:	beq	11d74 <heap_insere@@Base+0x78>
   11d48:	lsl	r7, r2, #2
   11d4c:	ldr	r4, [r5, r2, lsl #2]
   11d50:	sub	r2, r2, #1
   11d54:	add	r2, r2, r2, lsr #31
   11d58:	asr	r2, r2, #1
   11d5c:	ldr	r6, [r5, r2, lsl #2]
   11d60:	mov	r0, r4
   11d64:	mov	r1, r6
   11d68:	bl	11cd0 <menor_que@@Base>
   11d6c:	cmp	r0, #0
   11d70:	bne	11d7c <heap_insere@@Base+0x80>
   11d74:	mov	r0, #1
   11d78:	pop	{r4, r5, r6, r7, r8, pc}
   11d7c:	str	r4, [r5, r2, lsl #2]
   11d80:	str	r6, [r5, r7]
   11d84:	b	11d40 <heap_insere@@Base+0x44>

00011d88 <heap_remove@@Base>:
   11d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d8c:	subs	r4, r0, #0
   11d90:	beq	11e3c <heap_remove@@Base+0xb4>
   11d94:	ldr	r3, [r4]
   11d98:	cmp	r3, #0
   11d9c:	ble	11e3c <heap_remove@@Base+0xb4>
   11da0:	ldr	r3, [r4, #8]
   11da4:	mov	r5, #0
   11da8:	ldr	r0, [r3]
   11dac:	ldr	r9, [r0, #4]
   11db0:	bl	10e84 <free@plt>
   11db4:	ldr	r6, [r4]
   11db8:	ldr	r2, [r4, #8]
   11dbc:	sub	r6, r6, #1
   11dc0:	ldr	r3, [r2, r6, lsl #2]
   11dc4:	str	r6, [r4]
   11dc8:	str	r3, [r2]
   11dcc:	str	r5, [r2, r6, lsl #2]
   11dd0:	lsl	r8, r5, #1
   11dd4:	add	r7, r8, #1
   11dd8:	cmp	r6, r7
   11ddc:	bgt	11de8 <heap_remove@@Base+0x60>
   11de0:	mov	r0, r9
   11de4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11de8:	add	r8, r8, #2
   11dec:	cmp	r6, r8
   11df0:	ble	11e10 <heap_remove@@Base+0x88>
   11df4:	add	r3, r5, #1
   11df8:	add	r1, r2, r3, lsl #3
   11dfc:	ldr	r0, [r2, r3, lsl #3]
   11e00:	ldr	r1, [r1, #-4]
   11e04:	bl	11cd0 <menor_que@@Base>
   11e08:	cmp	r0, #0
   11e0c:	movne	r7, r8
   11e10:	ldr	r4, [r2, r7, lsl #2]
   11e14:	ldr	r8, [r2, r5, lsl #2]
   11e18:	mov	r0, r4
   11e1c:	mov	r1, r8
   11e20:	bl	11cd0 <menor_que@@Base>
   11e24:	cmp	r0, #0
   11e28:	beq	11de0 <heap_remove@@Base+0x58>
   11e2c:	str	r8, [r2, r7, lsl #2]
   11e30:	str	r4, [r2, r5, lsl #2]
   11e34:	mov	r5, r7
   11e38:	b	11dd0 <heap_remove@@Base+0x48>
   11e3c:	mov	r9, #0
   11e40:	b	11de0 <heap_remove@@Base+0x58>

00011e44 <novo_str@@Base>:
   11e44:	push	{r4, r5, r6, r7, r8, lr}
   11e48:	mov	r7, r0
   11e4c:	mov	r0, #12
   11e50:	bl	10eb4 <malloc@plt>
   11e54:	subs	r4, r0, #0
   11e58:	beq	11e8c <novo_str@@Base+0x48>
   11e5c:	mov	r0, r7
   11e60:	mov	r6, #0
   11e64:	bl	10ed8 <strlen@plt>
   11e68:	add	r0, r0, #1
   11e6c:	bl	10eb4 <malloc@plt>
   11e70:	cmp	r0, #0
   11e74:	mov	r5, r0
   11e78:	str	r0, [r4]
   11e7c:	bne	11e94 <novo_str@@Base+0x50>
   11e80:	mov	r0, r4
   11e84:	mov	r4, r5
   11e88:	bl	10e84 <free@plt>
   11e8c:	mov	r0, r4
   11e90:	pop	{r4, r5, r6, r7, r8, pc}
   11e94:	mov	r1, r7
   11e98:	bl	10e9c <strcpy@plt>
   11e9c:	str	r6, [r4, #4]
   11ea0:	str	r6, [r4, #8]
   11ea4:	b	11e8c <novo_str@@Base+0x48>

00011ea8 <lista_nova@@Base>:
   11ea8:	push	{r4, lr}
   11eac:	mov	r0, #12
   11eb0:	bl	10eb4 <malloc@plt>
   11eb4:	cmp	r0, #0
   11eb8:	movne	r3, #0
   11ebc:	strne	r3, [r0]
   11ec0:	strne	r3, [r0, #4]
   11ec4:	strne	r3, [r0, #8]
   11ec8:	pop	{r4, pc}

00011ecc <lista_apaga@@Base>:
   11ecc:	push	{r4, r5, r6, lr}
   11ed0:	subs	r5, r0, #0
   11ed4:	popeq	{r4, r5, r6, pc}
   11ed8:	ldr	r4, [r5]
   11edc:	cmp	r4, #0
   11ee0:	bne	11ef0 <lista_apaga@@Base+0x24>
   11ee4:	mov	r0, r5
   11ee8:	pop	{r4, r5, r6, lr}
   11eec:	b	10e84 <free@plt>
   11ef0:	ldm	r4, {r0, r3}
   11ef4:	str	r3, [r5]
   11ef8:	bl	10e84 <free@plt>
   11efc:	mov	r0, r4
   11f00:	bl	10e84 <free@plt>
   11f04:	b	11ed8 <lista_apaga@@Base+0xc>

00011f08 <lista_tamanho@@Base>:
   11f08:	cmp	r0, #0
   11f0c:	ldrne	r0, [r0, #8]
   11f10:	mvneq	r0, #0
   11f14:	bx	lr

00011f18 <lista_inicio@@Base>:
   11f18:	cmp	r0, #0
   11f1c:	ldrne	r0, [r0]
   11f20:	bx	lr

00011f24 <lista_fim@@Base>:
   11f24:	cmp	r0, #0
   11f28:	ldrne	r0, [r0, #4]
   11f2c:	bx	lr

00011f30 <lista_insere@@Base>:
   11f30:	cmp	r1, #0
   11f34:	cmpne	r0, #0
   11f38:	bne	11f4c <lista_insere@@Base+0x1c>
   11f3c:	mov	r0, #0
   11f40:	bx	lr
   11f44:	mov	r0, #0
   11f48:	pop	{r4, r5, r6, pc}
   11f4c:	push	{r4, r5, r6, lr}
   11f50:	mov	r4, r0
   11f54:	mov	r0, r1
   11f58:	mov	r5, r2
   11f5c:	bl	11e44 <novo_str@@Base>
   11f60:	cmp	r0, #0
   11f64:	beq	11f44 <lista_insere@@Base+0x14>
   11f68:	ldr	r3, [r4, #8]
   11f6c:	cmp	r5, #0
   11f70:	add	r3, r3, #1
   11f74:	str	r3, [r4, #8]
   11f78:	ldr	r3, [r4]
   11f7c:	bne	11fa0 <lista_insere@@Base+0x70>
   11f80:	cmp	r3, #0
   11f84:	streq	r0, [r4, #4]
   11f88:	beq	11fb0 <lista_insere@@Base+0x80>
   11f8c:	ldr	r3, [r4, #4]
   11f90:	str	r3, [r0, #8]
   11f94:	str	r0, [r3, #4]
   11f98:	str	r0, [r4, #4]
   11f9c:	pop	{r4, r5, r6, pc}
   11fa0:	cmp	r5, r3
   11fa4:	bne	11fb8 <lista_insere@@Base+0x88>
   11fa8:	str	r5, [r0, #4]
   11fac:	str	r0, [r5, #8]
   11fb0:	str	r0, [r4]
   11fb4:	pop	{r4, r5, r6, pc}
   11fb8:	ldr	r3, [r5, #8]
   11fbc:	str	r5, [r0, #4]
   11fc0:	str	r3, [r0, #8]
   11fc4:	ldr	r3, [r5, #8]
   11fc8:	str	r0, [r3, #4]
   11fcc:	str	r0, [r5, #8]
   11fd0:	pop	{r4, r5, r6, pc}

00011fd4 <lista_remove@@Base>:
   11fd4:	cmp	r1, #0
   11fd8:	cmpne	r0, #0
   11fdc:	push	{r4, r5, r6, lr}
   11fe0:	moveq	r5, #0
   11fe4:	beq	1202c <lista_remove@@Base+0x58>
   11fe8:	mov	r4, r1
   11fec:	ldr	r3, [r0, #8]
   11ff0:	ldr	r2, [r1, #4]
   11ff4:	sub	r3, r3, #1
   11ff8:	str	r3, [r0, #8]
   11ffc:	ldr	r3, [r1, #8]
   12000:	cmp	r3, #0
   12004:	strne	r2, [r3, #4]
   12008:	ldr	r5, [r1, #4]
   1200c:	streq	r2, [r0]
   12010:	cmp	r5, #0
   12014:	streq	r3, [r0, #4]
   12018:	strne	r3, [r5, #8]
   1201c:	ldr	r0, [r1]
   12020:	bl	10e84 <free@plt>
   12024:	mov	r0, r4
   12028:	bl	10e84 <free@plt>
   1202c:	mov	r0, r5
   12030:	pop	{r4, r5, r6, pc}

00012034 <lista_pesquisa@@Base>:
   12034:	push	{r4, r5, r6, lr}
   12038:	clz	r4, r1
   1203c:	cmp	r0, #0
   12040:	lsr	r4, r4, #5
   12044:	moveq	r4, #1
   12048:	cmp	r4, #0
   1204c:	movne	r4, #0
   12050:	bne	120b4 <lista_pesquisa@@Base+0x80>
   12054:	cmp	r2, #1
   12058:	bhi	120b4 <lista_pesquisa@@Base+0x80>
   1205c:	cmp	r2, #0
   12060:	mov	r5, r1
   12064:	ldreq	r4, [r0]
   12068:	beq	120ac <lista_pesquisa@@Base+0x78>
   1206c:	ldr	r4, [r0, #4]
   12070:	cmp	r4, #0
   12074:	beq	120b4 <lista_pesquisa@@Base+0x80>
   12078:	mov	r1, r5
   1207c:	ldr	r0, [r4]
   12080:	bl	10e54 <strcmp@plt>
   12084:	cmp	r0, #0
   12088:	beq	120b4 <lista_pesquisa@@Base+0x80>
   1208c:	ldr	r4, [r4, #8]
   12090:	b	12070 <lista_pesquisa@@Base+0x3c>
   12094:	mov	r1, r5
   12098:	ldr	r0, [r4]
   1209c:	bl	10e54 <strcmp@plt>
   120a0:	cmp	r0, #0
   120a4:	beq	120b4 <lista_pesquisa@@Base+0x80>
   120a8:	ldr	r4, [r4, #4]
   120ac:	cmp	r4, #0
   120b0:	bne	12094 <lista_pesquisa@@Base+0x60>
   120b4:	mov	r0, r4
   120b8:	pop	{r4, r5, r6, pc}

000120bc <lista_ordena@@Base>:
   120bc:	cmp	r0, #0
   120c0:	beq	12138 <lista_ordena@@Base+0x7c>
   120c4:	ldr	r3, [r0, #8]
   120c8:	cmp	r3, #0
   120cc:	bne	120d8 <lista_ordena@@Base+0x1c>
   120d0:	mov	r0, #0
   120d4:	bx	lr
   120d8:	push	{r4, r5, r6, r7, r8, lr}
   120dc:	ldr	r4, [r0]
   120e0:	ldr	r7, [r4, #4]
   120e4:	cmp	r7, #0
   120e8:	bne	120f4 <lista_ordena@@Base+0x38>
   120ec:	mov	r0, #0
   120f0:	pop	{r4, r5, r6, r7, r8, pc}
   120f4:	mov	r5, r4
   120f8:	mov	r6, r7
   120fc:	ldr	r1, [r5]
   12100:	ldr	r0, [r6]
   12104:	bl	10e54 <strcmp@plt>
   12108:	cmp	r0, #0
   1210c:	movlt	r5, r6
   12110:	ldr	r6, [r6, #4]
   12114:	cmp	r6, #0
   12118:	bne	120fc <lista_ordena@@Base+0x40>
   1211c:	cmp	r4, r5
   12120:	ldrne	r3, [r4]
   12124:	ldrne	r2, [r5]
   12128:	strne	r2, [r4]
   1212c:	mov	r4, r7
   12130:	strne	r3, [r5]
   12134:	b	120e0 <lista_ordena@@Base+0x24>
   12138:	mvn	r0, #0
   1213c:	bx	lr

00012140 <lista_inverte@@Base>:
   12140:	subs	r3, r0, #0
   12144:	beq	121c4 <lista_inverte@@Base+0x84>
   12148:	ldr	r1, [r3, #8]
   1214c:	cmp	r1, #1
   12150:	ble	121cc <lista_inverte@@Base+0x8c>
   12154:	ldr	r2, [r3]
   12158:	mov	ip, #0
   1215c:	sub	r0, r1, #2
   12160:	push	{r4, lr}
   12164:	ldr	r2, [r2, #4]
   12168:	cmp	r0, ip
   1216c:	ldr	r1, [r3]
   12170:	bgt	1219c <lista_inverte@@Base+0x5c>
   12174:	mov	r0, #0
   12178:	ldr	r2, [r3, #4]
   1217c:	ldr	ip, [r2, #8]
   12180:	str	ip, [r3, #4]
   12184:	str	r0, [ip, #4]
   12188:	str	r1, [r2, #4]
   1218c:	str	r0, [r2, #8]
   12190:	str	r2, [r1, #8]
   12194:	str	r2, [r3]
   12198:	pop	{r4, pc}
   1219c:	ldr	lr, [r2, #4]
   121a0:	add	ip, ip, #1
   121a4:	ldr	r4, [r2, #8]
   121a8:	str	lr, [r4, #4]
   121ac:	str	r4, [lr, #8]
   121b0:	str	r1, [r2, #4]
   121b4:	str	r2, [r1, #8]
   121b8:	str	r2, [r3]
   121bc:	mov	r2, lr
   121c0:	b	12168 <lista_inverte@@Base+0x28>
   121c4:	mvn	r0, #0
   121c8:	bx	lr
   121cc:	mov	r0, #0
   121d0:	bx	lr

000121d4 <vetor_novo@@Base>:
   121d4:	push	{r4, lr}
   121d8:	mov	r0, #12
   121dc:	bl	10eb4 <malloc@plt>
   121e0:	cmp	r0, #0
   121e4:	movne	r3, #0
   121e8:	strne	r3, [r0]
   121ec:	strne	r3, [r0, #4]
   121f0:	strne	r3, [r0, #8]
   121f4:	pop	{r4, pc}

000121f8 <vetor_apaga@@Base>:
   121f8:	push	{r4, lr}
   121fc:	subs	r4, r0, #0
   12200:	popeq	{r4, pc}
   12204:	ldr	r0, [r4, #8]
   12208:	bl	10e84 <free@plt>
   1220c:	mov	r0, r4
   12210:	pop	{r4, lr}
   12214:	b	10e84 <free@plt>

00012218 <vetor_atribui@@Base>:
   12218:	cmp	r0, #0
   1221c:	lsrne	r3, r1, #31
   12220:	moveq	r3, #1
   12224:	cmp	r3, #0
   12228:	bne	12240 <vetor_atribui@@Base+0x28>
   1222c:	ldr	r3, [r0]
   12230:	cmp	r3, r1
   12234:	ldrgt	r3, [r0, #8]
   12238:	strgt	r2, [r3, r1, lsl #2]
   1223c:	bgt	12244 <vetor_atribui@@Base+0x2c>
   12240:	mvn	r1, #0
   12244:	mov	r0, r1
   12248:	bx	lr

0001224c <vetor_tamanho@@Base>:
   1224c:	cmp	r0, #0
   12250:	ldrne	r0, [r0]
   12254:	mvneq	r0, #0
   12258:	bx	lr

0001225c <vetor_elemento@@Base>:
   1225c:	cmp	r0, #0
   12260:	lsrne	r3, r1, #31
   12264:	moveq	r3, #1
   12268:	cmp	r3, #0
   1226c:	bne	12288 <vetor_elemento@@Base+0x2c>
   12270:	ldr	r3, [r0]
   12274:	cmp	r3, r1
   12278:	ble	12288 <vetor_elemento@@Base+0x2c>
   1227c:	ldr	r3, [r0, #8]
   12280:	ldr	r0, [r3, r1, lsl #2]
   12284:	bx	lr
   12288:	mov	r0, #-2147483648	; 0x80000000
   1228c:	bx	lr

00012290 <vetor_insere@@Base>:
   12290:	cmn	r2, #1
   12294:	push	{r4, r5, r6, lr}
   12298:	movge	r3, #0
   1229c:	movlt	r3, #1
   122a0:	cmp	r0, #0
   122a4:	moveq	r3, #1
   122a8:	cmp	r3, #0
   122ac:	beq	122bc <vetor_insere@@Base+0x2c>
   122b0:	mvn	r4, #0
   122b4:	mov	r0, r4
   122b8:	pop	{r4, r5, r6, pc}
   122bc:	mov	r6, r1
   122c0:	ldr	r1, [r0]
   122c4:	mov	r4, r2
   122c8:	mov	r5, r0
   122cc:	cmp	r1, r2
   122d0:	blt	122b0 <vetor_insere@@Base+0x20>
   122d4:	ldr	r3, [r0, #4]
   122d8:	cmn	r2, #1
   122dc:	moveq	r4, r1
   122e0:	cmp	r1, r3
   122e4:	beq	1230c <vetor_insere@@Base+0x7c>
   122e8:	ldr	r2, [r5]
   122ec:	ldr	r1, [r5, #8]
   122f0:	sub	r3, r2, #1
   122f4:	cmp	r4, r3
   122f8:	ble	12338 <vetor_insere@@Base+0xa8>
   122fc:	add	r2, r2, #1
   12300:	str	r6, [r1, r4, lsl #2]
   12304:	str	r2, [r5]
   12308:	b	122b4 <vetor_insere@@Base+0x24>
   1230c:	cmp	r1, #0
   12310:	ldr	r0, [r0, #8]
   12314:	lslne	r1, r1, #1
   12318:	moveq	r1, #1
   1231c:	str	r1, [r5, #4]
   12320:	lsl	r1, r1, #2
   12324:	bl	10e90 <realloc@plt>
   12328:	cmp	r0, #0
   1232c:	str	r0, [r5, #8]
   12330:	bne	122e8 <vetor_insere@@Base+0x58>
   12334:	b	122b0 <vetor_insere@@Base+0x20>
   12338:	ldr	ip, [r1, r3, lsl #2]
   1233c:	add	r0, r1, r3, lsl #2
   12340:	sub	r3, r3, #1
   12344:	str	ip, [r0, #4]
   12348:	b	122f4 <vetor_insere@@Base+0x64>

0001234c <vetor_remove@@Base>:
   1234c:	cmp	r0, #0
   12350:	lsrne	r3, r1, #31
   12354:	moveq	r3, #1
   12358:	cmp	r3, #0
   1235c:	bne	1239c <vetor_remove@@Base+0x50>
   12360:	ldr	r3, [r0]
   12364:	cmp	r3, r1
   12368:	ble	1239c <vetor_remove@@Base+0x50>
   1236c:	add	r1, r1, #1
   12370:	cmp	r3, r1
   12374:	bne	12388 <vetor_remove@@Base+0x3c>
   12378:	sub	r3, r3, #1
   1237c:	str	r3, [r0]
   12380:	mov	r0, #0
   12384:	bx	lr
   12388:	ldr	r2, [r0, #8]
   1238c:	ldr	ip, [r2, r1, lsl #2]
   12390:	add	r2, r2, r1, lsl #2
   12394:	str	ip, [r2, #-4]
   12398:	b	1236c <vetor_remove@@Base+0x20>
   1239c:	mvn	r0, #0
   123a0:	bx	lr

000123a4 <vetor_pesquisa@@Base>:
   123a4:	subs	r3, r0, #0
   123a8:	movne	r0, #0
   123ac:	ldrne	r2, [r3]
   123b0:	bne	123d0 <vetor_pesquisa@@Base+0x2c>
   123b4:	mvn	r0, #0
   123b8:	bx	lr
   123bc:	ldr	ip, [r3, #8]
   123c0:	ldr	ip, [ip, r0, lsl #2]
   123c4:	cmp	ip, r1
   123c8:	bxeq	lr
   123cc:	add	r0, r0, #1
   123d0:	cmp	r2, r0
   123d4:	bgt	123bc <vetor_pesquisa@@Base+0x18>
   123d8:	b	123b4 <vetor_pesquisa@@Base+0x10>

000123dc <vetor_ordena@@Base>:
   123dc:	cmp	r0, #0
   123e0:	beq	12434 <vetor_ordena@@Base+0x58>
   123e4:	push	{r4, r5, lr}
   123e8:	mov	r3, #1
   123ec:	ldr	r5, [r0]
   123f0:	cmp	r5, r3
   123f4:	bgt	12400 <vetor_ordena@@Base+0x24>
   123f8:	mov	r0, #0
   123fc:	pop	{r4, r5, pc}
   12400:	ldr	r1, [r0, #8]
   12404:	mov	r2, r3
   12408:	ldr	lr, [r1, r3, lsl #2]
   1240c:	add	ip, r1, r3, lsl #2
   12410:	ldr	r4, [ip, #-4]
   12414:	cmp	r4, lr
   12418:	ble	12428 <vetor_ordena@@Base+0x4c>
   1241c:	subs	r2, r2, #1
   12420:	str	r4, [ip], #-4
   12424:	bne	12410 <vetor_ordena@@Base+0x34>
   12428:	add	r3, r3, #1
   1242c:	str	lr, [r1, r2, lsl #2]
   12430:	b	123f0 <vetor_ordena@@Base+0x14>
   12434:	mvn	r0, #0
   12438:	bx	lr

0001243c <__libc_csu_init@@Base>:
   1243c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12440:	mov	r7, r0
   12444:	ldr	r6, [pc, #72]	; 12494 <__libc_csu_init@@Base+0x58>
   12448:	ldr	r5, [pc, #72]	; 12498 <__libc_csu_init@@Base+0x5c>
   1244c:	add	r6, pc, r6
   12450:	add	r5, pc, r5
   12454:	sub	r6, r6, r5
   12458:	mov	r8, r1
   1245c:	mov	r9, r2
   12460:	bl	10e28 <calloc@plt-0x20>
   12464:	asrs	r6, r6, #2
   12468:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1246c:	mov	r4, #0
   12470:	add	r4, r4, #1
   12474:	ldr	r3, [r5], #4
   12478:	mov	r2, r9
   1247c:	mov	r1, r8
   12480:	mov	r0, r7
   12484:	blx	r3
   12488:	cmp	r6, r4
   1248c:	bne	12470 <__libc_csu_init@@Base+0x34>
   12490:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12494:	andeq	r0, r1, r0, asr #21
   12498:			; <UNDEFINED> instruction: 0x00010ab8

0001249c <__libc_csu_fini@@Base>:
   1249c:	bx	lr

Disassembly of section .fini:

000124a0 <.fini>:
   124a0:	push	{r3, lr}
   124a4:	pop	{r3, pc}
