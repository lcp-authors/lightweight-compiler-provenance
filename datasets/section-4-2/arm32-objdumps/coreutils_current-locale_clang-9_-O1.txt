
../repos/coreutils/gnulib-tests/current-locale:     file format elf32-littlearm


Disassembly of section .init:

00010348 <.init>:
   10348:	push	{r3, lr}
   1034c:	bl	103ec <abort@plt+0x48>
   10350:	pop	{r3, pc}

Disassembly of section .plt:

00010354 <getenv@plt-0x14>:
   10354:	push	{lr}		; (str lr, [sp, #-4]!)
   10358:	ldr	lr, [pc, #4]	; 10364 <getenv@plt-0x4>
   1035c:	add	lr, pc, lr
   10360:	ldr	pc, [lr, #8]!
   10364:	muleq	r1, ip, ip

00010368 <getenv@plt>:
   10368:	add	ip, pc, #0, 12
   1036c:	add	ip, ip, #16, 20	; 0x10000
   10370:	ldr	pc, [ip, #3228]!	; 0xc9c

00010374 <__libc_start_main@plt>:
   10374:	add	ip, pc, #0, 12
   10378:	add	ip, ip, #16, 20	; 0x10000
   1037c:	ldr	pc, [ip, #3220]!	; 0xc94

00010380 <__gmon_start__@plt>:
   10380:	add	ip, pc, #0, 12
   10384:	add	ip, ip, #16, 20	; 0x10000
   10388:	ldr	pc, [ip, #3212]!	; 0xc8c

0001038c <__printf_chk@plt>:
   1038c:	add	ip, pc, #0, 12
   10390:	add	ip, ip, #16, 20	; 0x10000
   10394:	ldr	pc, [ip, #3204]!	; 0xc84

00010398 <setlocale@plt>:
   10398:	add	ip, pc, #0, 12
   1039c:	add	ip, ip, #16, 20	; 0x10000
   103a0:	ldr	pc, [ip, #3196]!	; 0xc7c

000103a4 <abort@plt>:
   103a4:	add	ip, pc, #0, 12
   103a8:	add	ip, ip, #16, 20	; 0x10000
   103ac:	ldr	pc, [ip, #3188]!	; 0xc74

Disassembly of section .text:

000103b0 <.text>:
   103b0:	mov	fp, #0
   103b4:	mov	lr, #0
   103b8:	pop	{r1}		; (ldr r1, [sp], #4)
   103bc:	mov	r2, sp
   103c0:	push	{r2}		; (str r2, [sp, #-4]!)
   103c4:	push	{r0}		; (str r0, [sp, #-4]!)
   103c8:	ldr	ip, [pc, #16]	; 103e0 <abort@plt+0x3c>
   103cc:	push	{ip}		; (str ip, [sp, #-4]!)
   103d0:	ldr	r0, [pc, #12]	; 103e4 <abort@plt+0x40>
   103d4:	ldr	r3, [pc, #12]	; 103e8 <abort@plt+0x44>
   103d8:	bl	10374 <__libc_start_main@plt>
   103dc:	bl	103a4 <abort@plt>
   103e0:	andeq	r0, r1, r4, asr #13
   103e4:	andeq	r0, r1, r0, lsr #9
   103e8:	andeq	r0, r1, r4, ror #12
   103ec:	ldr	r3, [pc, #20]	; 10408 <abort@plt+0x64>
   103f0:	ldr	r2, [pc, #20]	; 1040c <abort@plt+0x68>
   103f4:	add	r3, pc, r3
   103f8:	ldr	r2, [r3, r2]
   103fc:	cmp	r2, #0
   10400:	bxeq	lr
   10404:	b	10380 <__gmon_start__@plt>
   10408:	andeq	r0, r1, r4, lsl #24
   1040c:	andeq	r0, r0, r4, lsr #32
   10410:	ldr	r0, [pc, #24]	; 10430 <abort@plt+0x8c>
   10414:	ldr	r3, [pc, #24]	; 10434 <abort@plt+0x90>
   10418:	cmp	r3, r0
   1041c:	bxeq	lr
   10420:	ldr	r3, [pc, #16]	; 10438 <abort@plt+0x94>
   10424:	cmp	r3, #0
   10428:	bxeq	lr
   1042c:	bx	r3
   10430:	andeq	r1, r2, r0, lsr r0
   10434:	andeq	r1, r2, r0, lsr r0
   10438:	andeq	r0, r0, r0
   1043c:	ldr	r0, [pc, #36]	; 10468 <abort@plt+0xc4>
   10440:	ldr	r1, [pc, #36]	; 1046c <abort@plt+0xc8>
   10444:	sub	r1, r1, r0
   10448:	asr	r1, r1, #2
   1044c:	add	r1, r1, r1, lsr #31
   10450:	asrs	r1, r1, #1
   10454:	bxeq	lr
   10458:	ldr	r3, [pc, #16]	; 10470 <abort@plt+0xcc>
   1045c:	cmp	r3, #0
   10460:	bxeq	lr
   10464:	bx	r3
   10468:	andeq	r1, r2, r0, lsr r0
   1046c:	andeq	r1, r2, r0, lsr r0
   10470:	andeq	r0, r0, r0
   10474:	push	{r4, lr}
   10478:	ldr	r4, [pc, #24]	; 10498 <abort@plt+0xf4>
   1047c:	ldrb	r3, [r4]
   10480:	cmp	r3, #0
   10484:	popne	{r4, pc}
   10488:	bl	10410 <abort@plt+0x6c>
   1048c:	mov	r3, #1
   10490:	strb	r3, [r4]
   10494:	pop	{r4, pc}
   10498:	andeq	r1, r2, r0, lsr r0
   1049c:	b	1043c <abort@plt+0x98>
   104a0:	push	{fp, lr}
   104a4:	mov	fp, sp
   104a8:	movw	r1, #1932	; 0x78c
   104ac:	movt	r1, #1
   104b0:	mov	r0, #6
   104b4:	bl	10398 <setlocale@plt>
   104b8:	movw	r0, #1757	; 0x6dd
   104bc:	movt	r0, #1
   104c0:	bl	105c0 <abort@plt+0x21c>
   104c4:	mov	r2, r0
   104c8:	movw	r1, #1748	; 0x6d4
   104cc:	movt	r1, #1
   104d0:	mov	r0, #1
   104d4:	bl	1038c <__printf_chk@plt>
   104d8:	movw	r1, #1762	; 0x6e2
   104dc:	movt	r1, #1
   104e0:	mov	r0, #0
   104e4:	bl	105e0 <abort@plt+0x23c>
   104e8:	movw	r1, #1771	; 0x6eb
   104ec:	movt	r1, #1
   104f0:	mov	r0, #1
   104f4:	bl	105e0 <abort@plt+0x23c>
   104f8:	movw	r1, #1782	; 0x6f6
   104fc:	movt	r1, #1
   10500:	mov	r0, #2
   10504:	bl	105e0 <abort@plt+0x23c>
   10508:	movw	r1, #1790	; 0x6fe
   1050c:	movt	r1, #1
   10510:	mov	r0, #3
   10514:	bl	105e0 <abort@plt+0x23c>
   10518:	movw	r1, #1801	; 0x709
   1051c:	movt	r1, #1
   10520:	mov	r0, #4
   10524:	bl	105e0 <abort@plt+0x23c>
   10528:	movw	r1, #1813	; 0x715
   1052c:	movt	r1, #1
   10530:	mov	r0, #5
   10534:	bl	105e0 <abort@plt+0x23c>
   10538:	movw	r1, #1825	; 0x721
   1053c:	movt	r1, #1
   10540:	mov	r0, #7
   10544:	bl	105e0 <abort@plt+0x23c>
   10548:	movw	r1, #1834	; 0x72a
   1054c:	movt	r1, #1
   10550:	mov	r0, #8
   10554:	bl	105e0 <abort@plt+0x23c>
   10558:	movw	r1, #1842	; 0x732
   1055c:	movt	r1, #1
   10560:	mov	r0, #9
   10564:	bl	105e0 <abort@plt+0x23c>
   10568:	movw	r1, #1853	; 0x73d
   1056c:	movt	r1, #1
   10570:	mov	r0, #10
   10574:	bl	105e0 <abort@plt+0x23c>
   10578:	movw	r1, #1866	; 0x74a
   1057c:	movt	r1, #1
   10580:	mov	r0, #11
   10584:	bl	105e0 <abort@plt+0x23c>
   10588:	movw	r1, #1881	; 0x759
   1058c:	movt	r1, #1
   10590:	mov	r0, #12
   10594:	bl	105e0 <abort@plt+0x23c>
   10598:	movw	r0, #1910	; 0x776
   1059c:	movt	r0, #1
   105a0:	bl	105c0 <abort@plt+0x21c>
   105a4:	mov	r2, r0
   105a8:	movw	r1, #1899	; 0x76b
   105ac:	movt	r1, #1
   105b0:	mov	r0, #1
   105b4:	bl	1038c <__printf_chk@plt>
   105b8:	mov	r0, #0
   105bc:	pop	{fp, pc}
   105c0:	push	{fp, lr}
   105c4:	mov	fp, sp
   105c8:	bl	10368 <getenv@plt>
   105cc:	movw	r1, #1932	; 0x78c
   105d0:	movt	r1, #1
   105d4:	cmp	r0, #0
   105d8:	moveq	r0, r1
   105dc:	pop	{fp, pc}
   105e0:	push	{r4, r5, r6, sl, fp, lr}
   105e4:	add	fp, sp, #16
   105e8:	mov	r4, r1
   105ec:	mov	r5, r0
   105f0:	mov	r0, r1
   105f4:	bl	105c0 <abort@plt+0x21c>
   105f8:	mov	r6, r0
   105fc:	ldrb	r0, [r0]
   10600:	cmp	r0, #0
   10604:	beq	10620 <abort@plt+0x27c>
   10608:	movw	r0, #1910	; 0x776
   1060c:	movt	r0, #1
   10610:	bl	105c0 <abort@plt+0x21c>
   10614:	ldrb	r0, [r0]
   10618:	cmp	r0, #0
   1061c:	beq	10648 <abort@plt+0x2a4>
   10620:	mov	r0, r5
   10624:	mov	r1, #0
   10628:	bl	10398 <setlocale@plt>
   1062c:	mov	r3, r0
   10630:	movw	r1, #1924	; 0x784
   10634:	movt	r1, #1
   10638:	mov	r0, #1
   1063c:	mov	r2, r4
   10640:	pop	{r4, r5, r6, sl, fp, lr}
   10644:	b	1038c <__printf_chk@plt>
   10648:	movw	r1, #1917	; 0x77d
   1064c:	movt	r1, #1
   10650:	mov	r0, #1
   10654:	mov	r2, r4
   10658:	mov	r3, r6
   1065c:	pop	{r4, r5, r6, sl, fp, lr}
   10660:	b	1038c <__printf_chk@plt>
   10664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10668:	mov	r7, r0
   1066c:	ldr	r6, [pc, #72]	; 106bc <abort@plt+0x318>
   10670:	ldr	r5, [pc, #72]	; 106c0 <abort@plt+0x31c>
   10674:	add	r6, pc, r6
   10678:	add	r5, pc, r5
   1067c:	sub	r6, r6, r5
   10680:	mov	r8, r1
   10684:	mov	r9, r2
   10688:	bl	10348 <getenv@plt-0x20>
   1068c:	asrs	r6, r6, #2
   10690:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10694:	mov	r4, #0
   10698:	add	r4, r4, #1
   1069c:	ldr	r3, [r5], #4
   106a0:	mov	r2, r9
   106a4:	mov	r1, r8
   106a8:	mov	r0, r7
   106ac:	blx	r3
   106b0:	cmp	r6, r4
   106b4:	bne	10698 <abort@plt+0x2f4>
   106b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   106bc:	muleq	r1, r0, r8
   106c0:	andeq	r0, r1, r8, lsl #17
   106c4:	bx	lr

Disassembly of section .fini:

000106c8 <.fini>:
   106c8:	push	{r3, lr}
   106cc:	pop	{r3, pc}
