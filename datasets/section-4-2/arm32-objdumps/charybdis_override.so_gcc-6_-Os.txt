
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000678 <_init>:
 678:	push	{r3, lr}
 67c:	bl	764 <call_weak_fn>
 680:	pop	{r3, pc}

Disassembly of section .plt:

00000684 <.plt>:
 684:	push	{lr}		; (str lr, [sp, #-4]!)
 688:	ldr	lr, [pc, #4]	; 694 <.plt+0x10>
 68c:	add	lr, pc, lr
 690:	ldr	pc, [lr, #8]!
 694:	.word	0x0001196c

00000698 <calloc@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2412]!	; 0x96c

000006a4 <rb_current_time@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2404]!	; 0x964

000006b0 <rb_event_add@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2396]!	; 0x95c

000006bc <__cxa_finalize@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2388]!	; 0x954

000006c8 <rb_event_delete@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2380]!	; 0x94c

000006d4 <free@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2372]!	; 0x944

000006e0 <rb_outofmemory@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2364]!	; 0x93c

000006ec <user_mode@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2356]!	; 0x934

000006f8 <sendto_realops_snomask@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2348]!	; 0x92c

00000704 <find_umode_slot@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2340]!	; 0x924

00000710 <get_oper_name@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2332]!	; 0x91c

0000071c <__gmon_start__@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2324]!	; 0x914

00000728 <get_channel_access@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2316]!	; 0x90c

00000734 <sendto_one_notice@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2308]!	; 0x904

00000740 <privilegeset_in_set@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2300]!	; 0x8fc

0000074c <__assert_fail@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2292]!	; 0x8f4

00000758 <construct_umodebuf@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2284]!	; 0x8ec

Disassembly of section .text:

00000764 <call_weak_fn>:
     764:	ldr	r3, [pc, #20]	; 780 <call_weak_fn+0x1c>
     768:	ldr	r2, [pc, #20]	; 784 <call_weak_fn+0x20>
     76c:	add	r3, pc, r3
     770:	ldr	r2, [r3, r2]
     774:	cmp	r2, #0
     778:	bxeq	lr
     77c:	b	71c <__gmon_start__@plt>
     780:	.word	0x0001188c
     784:	.word	0x00000064

00000788 <deregister_tm_clones>:
     788:	ldr	r3, [pc, #52]	; 7c4 <deregister_tm_clones+0x3c>
     78c:	ldr	r0, [pc, #52]	; 7c8 <deregister_tm_clones+0x40>
     790:	add	r3, pc, r3
     794:	add	r0, pc, r0
     798:	add	r3, r3, #3
     79c:	sub	r3, r3, r0
     7a0:	cmp	r3, #6
     7a4:	ldr	r3, [pc, #32]	; 7cc <deregister_tm_clones+0x44>
     7a8:	add	r3, pc, r3
     7ac:	bxls	lr
     7b0:	ldr	r2, [pc, #24]	; 7d0 <deregister_tm_clones+0x48>
     7b4:	ldr	r3, [r3, r2]
     7b8:	cmp	r3, #0
     7bc:	bxeq	lr
     7c0:	bx	r3
     7c4:	.word	0x0001195c
     7c8:	.word	0x00011958
     7cc:	.word	0x00011850
     7d0:	.word	0x00000058

000007d4 <register_tm_clones>:
     7d4:	ldr	r1, [pc, #56]	; 814 <register_tm_clones+0x40>
     7d8:	ldr	r0, [pc, #56]	; 818 <register_tm_clones+0x44>
     7dc:	add	r1, pc, r1
     7e0:	add	r0, pc, r0
     7e4:	sub	r1, r1, r0
     7e8:	ldr	r3, [pc, #44]	; 81c <register_tm_clones+0x48>
     7ec:	asr	r1, r1, #2
     7f0:	add	r3, pc, r3
     7f4:	add	r1, r1, r1, lsr #31
     7f8:	asrs	r1, r1, #1
     7fc:	bxeq	lr
     800:	ldr	r2, [pc, #24]	; 820 <register_tm_clones+0x4c>
     804:	ldr	r3, [r3, r2]
     808:	cmp	r3, #0
     80c:	bxeq	lr
     810:	bx	r3
     814:	.word	0x00011910
     818:	.word	0x0001190c
     81c:	.word	0x00011808
     820:	.word	0x00000070

00000824 <__do_global_dtors_aux>:
     824:	ldr	r3, [pc, #76]	; 878 <__do_global_dtors_aux+0x54>
     828:	ldr	r2, [pc, #76]	; 87c <__do_global_dtors_aux+0x58>
     82c:	add	r3, pc, r3
     830:	add	r2, pc, r2
     834:	ldrb	r3, [r3]
     838:	cmp	r3, #0
     83c:	bxne	lr
     840:	ldr	r3, [pc, #56]	; 880 <__do_global_dtors_aux+0x5c>
     844:	push	{r4, lr}
     848:	ldr	r3, [r2, r3]
     84c:	cmp	r3, #0
     850:	beq	860 <__do_global_dtors_aux+0x3c>
     854:	ldr	r3, [pc, #40]	; 884 <__do_global_dtors_aux+0x60>
     858:	ldr	r0, [pc, r3]
     85c:	bl	6bc <__cxa_finalize@plt>
     860:	bl	788 <deregister_tm_clones>
     864:	ldr	r3, [pc, #28]	; 888 <__do_global_dtors_aux+0x64>
     868:	mov	r2, #1
     86c:	add	r3, pc, r3
     870:	strb	r2, [r3]
     874:	pop	{r4, pc}
     878:	.word	0x000118c0
     87c:	.word	0x000117c8
     880:	.word	0x00000050
     884:	.word	0x00011814
     888:	.word	0x00011880

0000088c <frame_dummy>:
     88c:	ldr	r0, [pc, #56]	; 8cc <frame_dummy+0x40>
     890:	ldr	r3, [pc, #56]	; 8d0 <frame_dummy+0x44>
     894:	add	r0, pc, r0
     898:	ldr	r2, [r0]
     89c:	add	r3, pc, r3
     8a0:	cmp	r2, #0
     8a4:	bne	8ac <frame_dummy+0x20>
     8a8:	b	7d4 <register_tm_clones>
     8ac:	ldr	r2, [pc, #32]	; 8d4 <frame_dummy+0x48>
     8b0:	ldr	r3, [r3, r2]
     8b4:	cmp	r3, #0
     8b8:	beq	8a8 <frame_dummy+0x1c>
     8bc:	push	{r4, lr}
     8c0:	blx	r3
     8c4:	pop	{r4, lr}
     8c8:	b	7d4 <register_tm_clones>
     8cc:	.word	0x00011660
     8d0:	.word	0x0001175c
     8d4:	.word	0x00000068

000008d8 <expire_override_deadlines>:
     8d8:	ldr	r3, [pc, #140]	; 96c <expire_override_deadlines+0x94>
     8dc:	ldr	r2, [pc, #140]	; 970 <expire_override_deadlines+0x98>
     8e0:	add	r3, pc, r3
     8e4:	ldr	r3, [r3, r2]
     8e8:	ldr	r3, [r3]
     8ec:	cmp	r3, #0
     8f0:	bxeq	lr
     8f4:	push	{r4, r5, r6, r7, r8, r9, lr}
     8f8:	sub	sp, sp, #20
     8fc:	ldr	r6, [pc, #112]	; 974 <expire_override_deadlines+0x9c>
     900:	ldr	r4, [r3, #8]
     904:	add	r6, pc, r6
     908:	mov	r7, #0
     90c:	mov	r8, sp
     910:	ldr	r5, [r3]
     914:	ldr	r9, [r5, #16]
     918:	bl	6a4 <rb_current_time@plt>
     91c:	cmp	r9, r0
     920:	bgt	964 <expire_override_deadlines+0x8c>
     924:	ldr	r9, [r5, #16]
     928:	bl	6a4 <rb_current_time@plt>
     92c:	cmp	r9, r0
     930:	bge	954 <expire_override_deadlines+0x7c>
     934:	ldr	r1, [r5, #12]
     938:	mov	r2, #3
     93c:	add	r3, r1, #88	; 0x58
     940:	str	r3, [sp]
     944:	stmib	sp, {r3, r6, r7}
     948:	mov	r0, r1
     94c:	mov	r3, r8
     950:	bl	6ec <user_mode@plt>
     954:	cmp	r4, #0
     958:	movne	r3, r4
     95c:	ldrne	r4, [r4, #8]
     960:	bne	910 <expire_override_deadlines+0x38>
     964:	add	sp, sp, #20
     968:	pop	{r4, r5, r6, r7, r8, r9, pc}
     96c:	.word	0x00011718
     970:	.word	0x00000054
     974:	.word	0x00000777

00000978 <rb_dlinkDelete.constprop.7>:
     978:	ldr	r3, [pc, #116]	; 9f4 <rb_dlinkDelete.constprop.7+0x7c>
     97c:	cmp	r0, #0
     980:	add	r3, pc, r3
     984:	bne	9ac <rb_dlinkDelete.constprop.7+0x34>
     988:	ldr	r3, [pc, #104]	; 9f8 <rb_dlinkDelete.constprop.7+0x80>
     98c:	ldr	r1, [pc, #104]	; 9fc <rb_dlinkDelete.constprop.7+0x84>
     990:	ldr	r0, [pc, #104]	; a00 <rb_dlinkDelete.constprop.7+0x88>
     994:	push	{r4, lr}
     998:	add	r3, pc, r3
     99c:	mov	r2, #235	; 0xeb
     9a0:	add	r1, pc, r1
     9a4:	add	r0, pc, r0
     9a8:	bl	74c <__assert_fail@plt>
     9ac:	ldr	ip, [pc, #80]	; a04 <rb_dlinkDelete.constprop.7+0x8c>
     9b0:	ldr	r2, [r0, #8]
     9b4:	ldr	r1, [r0, #4]
     9b8:	ldr	r3, [r3, ip]
     9bc:	cmp	r2, #0
     9c0:	strne	r1, [r2, #4]
     9c4:	streq	r1, [r3, #4]
     9c8:	ldr	r1, [r0, #4]
     9cc:	cmp	r1, #0
     9d0:	strne	r2, [r1, #8]
     9d4:	streq	r2, [r3]
     9d8:	mov	r2, #0
     9dc:	str	r2, [r0, #4]
     9e0:	str	r2, [r0, #8]
     9e4:	ldr	r2, [r3, #8]
     9e8:	sub	r2, r2, #1
     9ec:	str	r2, [r3, #8]
     9f0:	bx	lr
     9f4:	.word	0x00011678
     9f8:	.word	0x00000670
     9fc:	.word	0x000006de
     a00:	.word	0x000006f6
     a04:	.word	0x00000054

00000a08 <update_session_deadline.constprop.5>:
     a08:	ldr	r3, [pc, #164]	; ab4 <update_session_deadline.constprop.5+0xac>
     a0c:	ldr	r2, [pc, #164]	; ab8 <update_session_deadline.constprop.5+0xb0>
     a10:	add	r3, pc, r3
     a14:	push	{r4, r5, r6, lr}
     a18:	mov	r6, r0
     a1c:	ldr	r5, [r3, r2]
     a20:	ldr	r3, [r5]
     a24:	cmp	r3, #0
     a28:	bne	a48 <update_session_deadline.constprop.5+0x40>
     a2c:	mov	r1, #20
     a30:	mov	r0, #1
     a34:	bl	698 <calloc@plt>
     a38:	subs	r4, r0, #0
     a3c:	strne	r6, [r4, #12]
     a40:	bne	a5c <update_session_deadline.constprop.5+0x54>
     a44:	bl	6e0 <rb_outofmemory@plt>
     a48:	ldr	r4, [r3]
     a4c:	ldr	r2, [r4, #12]
     a50:	cmp	r2, r6
     a54:	ldrne	r3, [r3, #8]
     a58:	bne	a24 <update_session_deadline.constprop.5+0x1c>
     a5c:	bl	6a4 <rb_current_time@plt>
     a60:	add	r0, r0, #1792	; 0x700
     a64:	add	r0, r0, #8
     a68:	str	r0, [r4, #16]
     a6c:	mov	r0, r4
     a70:	bl	978 <rb_dlinkDelete.constprop.7>
     a74:	mov	r3, #0
     a78:	str	r3, [r4, #4]
     a7c:	ldr	r3, [r5]
     a80:	str	r4, [r4]
     a84:	cmp	r3, #0
     a88:	str	r3, [r4, #8]
     a8c:	strne	r4, [r3, #4]
     a90:	bne	aa0 <update_session_deadline.constprop.5+0x98>
     a94:	ldr	r3, [r5, #4]
     a98:	cmp	r3, #0
     a9c:	streq	r4, [r5, #4]
     aa0:	ldr	r3, [r5, #8]
     aa4:	str	r4, [r5]
     aa8:	add	r3, r3, #1
     aac:	str	r3, [r5, #8]
     ab0:	pop	{r4, r5, r6, pc}
     ab4:	.word	0x000115e8
     ab8:	.word	0x00000054

00000abc <_modinit>:
     abc:	push	{r4, r5, r6, lr}
     ac0:	bl	704 <find_umode_slot@plt>
     ac4:	ldr	r5, [pc, #140]	; b58 <_modinit+0x9c>
     ac8:	ldr	r3, [pc, #140]	; b5c <_modinit+0xa0>
     acc:	add	r5, pc, r5
     ad0:	ldr	r6, [r5, r3]
     ad4:	str	r0, [r6, #448]	; 0x1c0
     ad8:	bl	758 <construct_umodebuf@plt>
     adc:	ldr	r3, [pc, #124]	; b60 <_modinit+0xa4>
     ae0:	ldr	r3, [r5, r3]
     ae4:	ldr	r4, [r3]
     ae8:	cmp	r4, #0
     aec:	bne	b20 <_modinit+0x64>
     af0:	ldr	r1, [pc, #108]	; b64 <_modinit+0xa8>
     af4:	ldr	r0, [pc, #108]	; b68 <_modinit+0xac>
     af8:	mov	r3, #60	; 0x3c
     afc:	mov	r2, r4
     b00:	add	r1, pc, r1
     b04:	add	r0, pc, r0
     b08:	bl	6b0 <rb_event_add@plt>
     b0c:	ldr	r3, [pc, #88]	; b6c <_modinit+0xb0>
     b10:	ldr	r3, [r5, r3]
     b14:	str	r0, [r3]
     b18:	mov	r0, r4
     b1c:	pop	{r4, r5, r6, pc}
     b20:	ldr	r0, [r4]
     b24:	ldrh	r3, [r0, #80]	; 0x50
     b28:	cmp	r3, #64	; 0x40
     b2c:	bne	b50 <_modinit+0x94>
     b30:	ldr	r3, [r0, #24]
     b34:	cmp	r3, #0
     b38:	beq	b50 <_modinit+0x94>
     b3c:	ldr	r2, [r0, #56]	; 0x38
     b40:	ldr	r3, [r6, #448]	; 0x1c0
     b44:	tst	r2, r3
     b48:	beq	b50 <_modinit+0x94>
     b4c:	bl	a08 <update_session_deadline.constprop.5>
     b50:	ldr	r4, [r4, #8]
     b54:	b	ae8 <_modinit+0x2c>
     b58:	.word	0x0001152c
     b5c:	.word	0x00000060
     b60:	.word	0x0000006c
     b64:	.word	0xfffffdd0
     b68:	.word	0x000005a0
     b6c:	.word	0x0000005c

00000b70 <check_umode_change>:
     b70:	push	{r4, r5, r6, r7, r8, lr}
     b74:	ldr	r4, [r0]
     b78:	ldr	r2, [pc, #276]	; c94 <check_umode_change+0x124>
     b7c:	ldrd	r6, [r4, #64]	; 0x40
     b80:	mov	r7, #0
     b84:	add	r2, pc, r2
     b88:	and	r6, r6, #8192	; 0x2000
     b8c:	orrs	r3, r6, r7
     b90:	popeq	{r4, r5, r6, r7, r8, pc}
     b94:	ldrh	r3, [r4, #80]	; 0x50
     b98:	cmp	r3, #64	; 0x40
     b9c:	popne	{r4, r5, r6, r7, r8, pc}
     ba0:	ldr	r5, [r0, #4]
     ba4:	ldr	r3, [pc, #236]	; c98 <check_umode_change+0x128>
     ba8:	tst	r5, #4096	; 0x1000
     bac:	ldr	r6, [r2, r3]
     bb0:	beq	bc8 <check_umode_change+0x58>
     bb4:	ldr	r3, [r4, #56]	; 0x38
     bb8:	tst	r3, #4096	; 0x1000
     bbc:	ldreq	r1, [r6, #448]	; 0x1c0
     bc0:	biceq	r3, r3, r1
     bc4:	streq	r3, [r4, #56]	; 0x38
     bc8:	ldr	r1, [r4, #56]	; 0x38
     bcc:	ldr	r3, [r6, #448]	; 0x1c0
     bd0:	eor	r5, r5, r1
     bd4:	tst	r1, r3
     bd8:	and	r5, r5, r3
     bdc:	beq	c44 <check_umode_change+0xd4>
     be0:	ldr	r3, [r4, #24]
     be4:	cmp	r3, #0
     be8:	bne	c10 <check_umode_change+0xa0>
     bec:	ldr	r1, [pc, #168]	; c9c <check_umode_change+0x12c>
     bf0:	mov	r0, r4
     bf4:	add	r1, pc, r1
     bf8:	bl	734 <sendto_one_notice@plt>
     bfc:	ldr	r2, [r6, #448]	; 0x1c0
     c00:	ldr	r3, [r4, #56]	; 0x38
     c04:	bic	r3, r3, r2
     c08:	str	r3, [r4, #56]	; 0x38
     c0c:	pop	{r4, r5, r6, r7, r8, pc}
     c10:	ldr	r0, [r3, #36]	; 0x24
     c14:	cmp	r0, #0
     c18:	beq	bec <check_umode_change+0x7c>
     c1c:	ldr	r1, [pc, #124]	; ca0 <check_umode_change+0x130>
     c20:	add	r1, pc, r1
     c24:	bl	740 <privilegeset_in_set@plt>
     c28:	cmp	r0, #0
     c2c:	beq	bec <check_umode_change+0x7c>
     c30:	cmp	r5, #0
     c34:	popeq	{r4, r5, r6, r7, r8, pc}
     c38:	mov	r0, r4
     c3c:	pop	{r4, r5, r6, r7, r8, lr}
     c40:	b	a08 <update_session_deadline.constprop.5>
     c44:	cmp	r5, #0
     c48:	popeq	{r4, r5, r6, r7, r8, pc}
     c4c:	ldr	r3, [pc, #80]	; ca4 <check_umode_change+0x134>
     c50:	ldr	r3, [r2, r3]
     c54:	ldr	r0, [r3]
     c58:	cmp	r0, #0
     c5c:	popeq	{r4, r5, r6, r7, r8, pc}
     c60:	ldr	r5, [r0, #8]
     c64:	ldr	r6, [r0]
     c68:	ldr	r3, [r6, #12]
     c6c:	cmp	r4, r3
     c70:	bne	c80 <check_umode_change+0x110>
     c74:	bl	978 <rb_dlinkDelete.constprop.7>
     c78:	mov	r0, r6
     c7c:	bl	6d4 <free@plt>
     c80:	cmp	r5, #0
     c84:	popeq	{r4, r5, r6, r7, r8, pc}
     c88:	mov	r0, r5
     c8c:	ldr	r5, [r5, #8]
     c90:	b	c64 <check_umode_change+0xf4>
     c94:	.word	0x00011474
     c98:	.word	0x00000060
     c9c:	.word	0x000004ca
     ca0:	.word	0x000004cb
     ca4:	.word	0x00000054

00000ca8 <hack_can_kick>:
     ca8:	mov	r3, #0
     cac:	push	{r0, r1, r2, r4, r5, lr}
     cb0:	mov	r4, r0
     cb4:	str	r3, [sp]
     cb8:	ldr	r3, [r0, #20]
     cbc:	ldm	r0, {r0, r1, r2}
     cc0:	bl	728 <get_channel_access@plt>
     cc4:	ldr	r5, [pc, #104]	; d34 <hack_can_kick+0x8c>
     cc8:	add	r5, pc, r5
     ccc:	cmp	r0, #4
     cd0:	bne	d2c <hack_can_kick+0x84>
     cd4:	ldr	r3, [pc, #92]	; d38 <hack_can_kick+0x90>
     cd8:	ldr	r0, [r4]
     cdc:	ldr	r3, [r5, r3]
     ce0:	ldr	r2, [r0, #56]	; 0x38
     ce4:	ldr	r3, [r3, #448]	; 0x1c0
     ce8:	tst	r2, r3
     cec:	beq	d2c <hack_can_kick+0x84>
     cf0:	bl	a08 <update_session_deadline.constprop.5>
     cf4:	ldr	r0, [r4]
     cf8:	bl	710 <get_oper_name@plt>
     cfc:	ldr	r3, [r4, #12]
     d00:	ldr	r2, [pc, #52]	; d3c <hack_can_kick+0x94>
     d04:	add	r3, r3, #88	; 0x58
     d08:	str	r3, [sp, #4]
     d0c:	ldr	r3, [r4, #4]
     d10:	mov	r1, #256	; 0x100
     d14:	add	r2, pc, r2
     d18:	ldr	r3, [r3, #236]	; 0xec
     d1c:	str	r3, [sp]
     d20:	mov	r3, r0
     d24:	mov	r0, r1
     d28:	bl	6f8 <sendto_realops_snomask@plt>
     d2c:	add	sp, sp, #12
     d30:	pop	{r4, r5, pc}
     d34:	.word	0x00011330
     d38:	.word	0x00000060
     d3c:	.word	0x000003e5

00000d40 <hack_channel_access>:
     d40:	ldr	r2, [r0, #20]
     d44:	ldr	r3, [pc, #140]	; dd8 <hack_channel_access+0x98>
     d48:	cmp	r2, #0
     d4c:	add	r3, pc, r3
     d50:	bxeq	lr
     d54:	ldr	r2, [r0, #16]
     d58:	push	{r0, r1, r4, lr}
     d5c:	cmp	r2, #2
     d60:	mov	r4, r0
     d64:	beq	dd0 <hack_channel_access+0x90>
     d68:	ldr	r2, [pc, #108]	; ddc <hack_channel_access+0x9c>
     d6c:	ldr	r0, [r0]
     d70:	ldr	r3, [r3, r2]
     d74:	ldr	r2, [r0, #56]	; 0x38
     d78:	ldr	r3, [r3, #448]	; 0x1c0
     d7c:	tst	r2, r3
     d80:	beq	dd0 <hack_channel_access+0x90>
     d84:	bl	a08 <update_session_deadline.constprop.5>
     d88:	mov	r3, #4
     d8c:	str	r3, [r4, #16]
     d90:	ldr	r3, [r4, #24]
     d94:	cmp	r3, #0
     d98:	beq	dd0 <hack_channel_access+0x90>
     d9c:	ldr	r0, [r4]
     da0:	bl	710 <get_oper_name@plt>
     da4:	ldr	r3, [r4, #24]
     da8:	ldr	r2, [pc, #48]	; de0 <hack_channel_access+0xa0>
     dac:	str	r3, [sp, #4]
     db0:	ldr	r3, [r4, #4]
     db4:	mov	r1, #256	; 0x100
     db8:	add	r2, pc, r2
     dbc:	ldr	r3, [r3, #236]	; 0xec
     dc0:	str	r3, [sp]
     dc4:	mov	r3, r0
     dc8:	mov	r0, r1
     dcc:	bl	6f8 <sendto_realops_snomask@plt>
     dd0:	add	sp, sp, #8
     dd4:	pop	{r4, pc}
     dd8:	.word	0x000112ac
     ddc:	.word	0x00000060
     de0:	.word	0x0000036b

00000de4 <hack_can_join>:
     de4:	ldr	r2, [r0, #8]
     de8:	ldr	r3, [pc, #108]	; e5c <hack_can_join+0x78>
     dec:	cmp	r2, #0
     df0:	add	r3, pc, r3
     df4:	bxeq	lr
     df8:	ldr	r2, [pc, #96]	; e60 <hack_can_join+0x7c>
     dfc:	push	{r0, r1, r4, lr}
     e00:	mov	r4, r0
     e04:	ldr	r3, [r3, r2]
     e08:	ldr	r0, [r0]
     e0c:	ldr	r3, [r3, #448]	; 0x1c0
     e10:	ldr	r2, [r0, #56]	; 0x38
     e14:	tst	r2, r3
     e18:	beq	e54 <hack_can_join+0x70>
     e1c:	bl	a08 <update_session_deadline.constprop.5>
     e20:	mov	r3, #0
     e24:	str	r3, [r4, #8]
     e28:	ldr	r0, [r4]
     e2c:	bl	710 <get_oper_name@plt>
     e30:	ldr	r3, [r4, #4]
     e34:	ldr	r2, [pc, #40]	; e64 <hack_can_join+0x80>
     e38:	mov	r1, #256	; 0x100
     e3c:	ldr	r3, [r3, #236]	; 0xec
     e40:	add	r2, pc, r2
     e44:	str	r3, [sp]
     e48:	mov	r3, r0
     e4c:	mov	r0, r1
     e50:	bl	6f8 <sendto_realops_snomask@plt>
     e54:	add	sp, sp, #8
     e58:	pop	{r4, pc}
     e5c:	.word	0x00011208
     e60:	.word	0x00000060
     e64:	.word	0x00000315

00000e68 <hack_can_send>:
     e68:	ldr	r3, [r0, #20]
     e6c:	push	{r0, r1, r2, r4, r5, lr}
     e70:	cmp	r3, #0
     e74:	ldr	r2, [pc, #152]	; f14 <hack_can_send+0xac>
     e78:	add	r2, pc, r2
     e7c:	beq	f0c <hack_can_send+0xa4>
     e80:	ldr	r3, [r0, #16]
     e84:	sub	r3, r3, #1
     e88:	cmp	r3, #1
     e8c:	bls	f0c <hack_can_send+0xa4>
     e90:	ldr	r1, [pc, #128]	; f18 <hack_can_send+0xb0>
     e94:	ldr	r3, [r0]
     e98:	ldr	r2, [r2, r1]
     e9c:	ldr	r1, [r3, #56]	; 0x38
     ea0:	ldr	r2, [r2, #448]	; 0x1c0
     ea4:	tst	r1, r2
     ea8:	beq	f0c <hack_can_send+0xa4>
     eac:	ldrd	r4, [r3, #64]	; 0x40
     eb0:	mov	r2, #1
     eb4:	mov	r5, #0
     eb8:	and	r4, r4, #8192	; 0x2000
     ebc:	str	r2, [r0, #16]
     ec0:	orrs	r2, r4, r5
     ec4:	beq	f0c <hack_can_send+0xa4>
     ec8:	ldrh	r2, [r3, #80]	; 0x50
     ecc:	cmp	r2, #64	; 0x40
     ed0:	bne	f0c <hack_can_send+0xa4>
     ed4:	mov	r4, r0
     ed8:	mov	r0, r3
     edc:	bl	a08 <update_session_deadline.constprop.5>
     ee0:	ldr	r0, [r4]
     ee4:	bl	710 <get_oper_name@plt>
     ee8:	ldr	r3, [r4, #4]
     eec:	ldr	r2, [pc, #40]	; f1c <hack_can_send+0xb4>
     ef0:	mov	r1, #256	; 0x100
     ef4:	ldr	r3, [r3, #236]	; 0xec
     ef8:	add	r2, pc, r2
     efc:	str	r3, [sp]
     f00:	mov	r3, r0
     f04:	mov	r0, r1
     f08:	bl	6f8 <sendto_realops_snomask@plt>
     f0c:	add	sp, sp, #12
     f10:	pop	{r4, r5, pc}
     f14:	.word	0x00011180
     f18:	.word	0x00000060
     f1c:	.word	0x0000028a

00000f20 <_moddeinit>:
     f20:	push	{r4, r5, r6, lr}
     f24:	mov	r2, #0
     f28:	ldr	r6, [pc, #104]	; f98 <_moddeinit+0x78>
     f2c:	ldr	r3, [pc, #104]	; f9c <_moddeinit+0x7c>
     f30:	add	r6, pc, r6
     f34:	ldr	r3, [r6, r3]
     f38:	str	r2, [r3, #448]	; 0x1c0
     f3c:	bl	758 <construct_umodebuf@plt>
     f40:	ldr	r3, [pc, #88]	; fa0 <_moddeinit+0x80>
     f44:	ldr	r3, [r6, r3]
     f48:	ldr	r4, [r3]
     f4c:	cmp	r4, #0
     f50:	ldrne	r5, [r4, #8]
     f54:	bne	f6c <_moddeinit+0x4c>
     f58:	ldr	r3, [pc, #68]	; fa4 <_moddeinit+0x84>
     f5c:	ldr	r3, [r6, r3]
     f60:	pop	{r4, r5, r6, lr}
     f64:	ldr	r0, [r3]
     f68:	b	6c8 <rb_event_delete@plt>
     f6c:	mov	r0, r4
     f70:	bl	978 <rb_dlinkDelete.constprop.7>
     f74:	ldr	r0, [r4]
     f78:	cmp	r0, #0
     f7c:	beq	f84 <_moddeinit+0x64>
     f80:	bl	6d4 <free@plt>
     f84:	cmp	r5, #0
     f88:	beq	f58 <_moddeinit+0x38>
     f8c:	mov	r4, r5
     f90:	ldr	r5, [r5, #8]
     f94:	b	f6c <_moddeinit+0x4c>
     f98:	.word	0x000110c8
     f9c:	.word	0x00000060
     fa0:	.word	0x00000054
     fa4:	.word	0x0000005c

00000fa8 <handle_client_exit>:
     fa8:	ldr	r3, [pc, #80]	; 1000 <handle_client_exit+0x58>
     fac:	ldr	r2, [pc, #80]	; 1004 <handle_client_exit+0x5c>
     fb0:	add	r3, pc, r3
     fb4:	push	{r4, r5, r6, lr}
     fb8:	ldr	r3, [r3, r2]
     fbc:	ldr	r6, [r0, #4]
     fc0:	ldr	r0, [r3]
     fc4:	cmp	r0, #0
     fc8:	popeq	{r4, r5, r6, pc}
     fcc:	ldr	r4, [r0, #8]
     fd0:	ldr	r5, [r0]
     fd4:	ldr	r3, [r5, #12]
     fd8:	cmp	r6, r3
     fdc:	bne	fec <handle_client_exit+0x44>
     fe0:	bl	978 <rb_dlinkDelete.constprop.7>
     fe4:	mov	r0, r5
     fe8:	bl	6d4 <free@plt>
     fec:	cmp	r4, #0
     ff0:	popeq	{r4, r5, r6, pc}
     ff4:	mov	r0, r4
     ff8:	ldr	r4, [r4, #8]
     ffc:	b	fd0 <handle_client_exit+0x28>
    1000:	.word	0x00011048
    1004:	.word	0x00000054

Disassembly of section .fini:

00001008 <_fini>:
    1008:	push	{r3, lr}
    100c:	pop	{r3, pc}
