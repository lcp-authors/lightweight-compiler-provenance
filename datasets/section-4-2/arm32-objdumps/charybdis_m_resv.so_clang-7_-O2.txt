
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000d10 <_init>:
 d10:	push	{r3, lr}
 d14:	bl	f1c <call_weak_fn>
 d18:	pop	{r3, pc}

Disassembly of section .plt:

00000d1c <.plt>:
 d1c:	push	{lr}		; (str lr, [sp, #-4]!)
 d20:	ldr	lr, [pc, #4]	; d2c <.plt+0x10>
 d24:	add	lr, pc, lr
 d28:	ldr	pc, [lr, #8]!
 d2c:	.word	0x000122d4

00000d30 <propagate_generic@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #724]!	; 0x2d4

00000d3c <make_conf@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #716]!	; 0x2cc

00000d48 <rb_current_time@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #708]!	; 0x2c4

00000d54 <add_to_resv_hash@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #700]!	; 0x2bc

00000d60 <sendto_match_servs@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #692]!	; 0x2b4

00000d6c <__cxa_finalize@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #684]!	; 0x2ac

00000d78 <strtol@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #676]!	; 0x2a4

00000d84 <sendto_one@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #668]!	; 0x29c

00000d90 <replace_old_ban@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #660]!	; 0x294

00000d9c <rb_outofmemory@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #652]!	; 0x28c

00000da8 <resv_nick_fnc@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #644]!	; 0x284

00000db4 <operhash_delete@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #636]!	; 0x27c

00000dc0 <sendto_realops_snomask@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #628]!	; 0x274

00000dcc <bandb_add@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #620]!	; 0x26c

00000dd8 <resv_chan_forcepart@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #612]!	; 0x264

00000de4 <deactivate_conf@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #604]!	; 0x25c

00000df0 <get_oper_name@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #596]!	; 0x254

00000dfc <rb_free_rb_dlink_node@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #588]!	; 0x24c

00000e08 <cluster_generic@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #580]!	; 0x244

00000e14 <operhash_add@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #572]!	; 0x23c

00000e20 <strcpy@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #564]!	; 0x234

00000e2c <sendto_server@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #556]!	; 0x22c

00000e38 <malloc@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #548]!	; 0x224

00000e44 <__gmon_start__@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #540]!	; 0x21c

00000e50 <free_conf@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #532]!	; 0x214

00000e5c <rb_make_rb_dlink_node@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #524]!	; 0x20c

00000e68 <strlen@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #516]!	; 0x204

00000e74 <ilog@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #508]!	; 0x1fc

00000e80 <match@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #500]!	; 0x1f4

00000e8c <del_from_resv_hash@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #492]!	; 0x1ec

00000e98 <find_nick_resv_mask@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea4 <valid_temp_time@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #476]!	; 0x1dc

00000eb0 <sendto_one_notice@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #468]!	; 0x1d4

00000ebc <bandb_del@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #73728	; 0x12000
 ec4:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec8 <valid_wild_card_simple@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #73728	; 0x12000
 ed0:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed4 <find_shared_conf@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #73728	; 0x12000
 edc:	ldr	pc, [ip, #444]!	; 0x1bc

00000ee0 <privilegeset_in_set@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #73728	; 0x12000
 ee8:	ldr	pc, [ip, #436]!	; 0x1b4

00000eec <hash_find_resv@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #73728	; 0x12000
 ef4:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef8 <irccmp@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #73728	; 0x12000
 f00:	ldr	pc, [ip, #420]!	; 0x1a4

00000f04 <clean_resv_nick@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #73728	; 0x12000
 f0c:	ldr	pc, [ip, #412]!	; 0x19c

00000f10 <__assert_fail@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #73728	; 0x12000
 f18:	ldr	pc, [ip, #404]!	; 0x194

Disassembly of section .text:

00000f1c <call_weak_fn>:
     f1c:	ldr	r3, [pc, #20]	; f38 <call_weak_fn+0x1c>
     f20:	ldr	r2, [pc, #20]	; f3c <call_weak_fn+0x20>
     f24:	add	r3, pc, r3
     f28:	ldr	r2, [r3, r2]
     f2c:	cmp	r2, #0
     f30:	bxeq	lr
     f34:	b	e44 <__gmon_start__@plt>
     f38:	.word	0x000120d4
     f3c:	.word	0x000000cc

00000f40 <deregister_tm_clones>:
     f40:	ldr	r0, [pc, #44]	; f74 <deregister_tm_clones+0x34>
     f44:	ldr	r3, [pc, #44]	; f78 <deregister_tm_clones+0x38>
     f48:	add	r0, pc, r0
     f4c:	add	r3, pc, r3
     f50:	cmp	r3, r0
     f54:	ldr	r3, [pc, #32]	; f7c <deregister_tm_clones+0x3c>
     f58:	add	r3, pc, r3
     f5c:	bxeq	lr
     f60:	ldr	r2, [pc, #24]	; f80 <deregister_tm_clones+0x40>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	bxeq	lr
     f70:	bx	r3
     f74:	.word	0x00012258
     f78:	.word	0x00012254
     f7c:	.word	0x000120a0
     f80:	.word	0x000000b4

00000f84 <register_tm_clones>:
     f84:	ldr	r0, [pc, #56]	; fc4 <register_tm_clones+0x40>
     f88:	ldr	r3, [pc, #56]	; fc8 <register_tm_clones+0x44>
     f8c:	add	r0, pc, r0
     f90:	add	r3, pc, r3
     f94:	sub	r1, r3, r0
     f98:	ldr	r3, [pc, #44]	; fcc <register_tm_clones+0x48>
     f9c:	asr	r1, r1, #2
     fa0:	add	r3, pc, r3
     fa4:	add	r1, r1, r1, lsr #31
     fa8:	asrs	r1, r1, #1
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #24]	; fd0 <register_tm_clones+0x4c>
     fb4:	ldr	r3, [r3, r2]
     fb8:	cmp	r3, #0
     fbc:	bxeq	lr
     fc0:	bx	r3
     fc4:	.word	0x00012214
     fc8:	.word	0x00012210
     fcc:	.word	0x00012058
     fd0:	.word	0x000000d8

00000fd4 <__do_global_dtors_aux>:
     fd4:	ldr	r3, [pc, #76]	; 1028 <__do_global_dtors_aux+0x54>
     fd8:	ldr	r2, [pc, #76]	; 102c <__do_global_dtors_aux+0x58>
     fdc:	add	r3, pc, r3
     fe0:	add	r2, pc, r2
     fe4:	ldrb	r3, [r3]
     fe8:	cmp	r3, #0
     fec:	bxne	lr
     ff0:	ldr	r3, [pc, #56]	; 1030 <__do_global_dtors_aux+0x5c>
     ff4:	push	{r4, lr}
     ff8:	ldr	r3, [r2, r3]
     ffc:	cmp	r3, #0
    1000:	beq	1010 <__do_global_dtors_aux+0x3c>
    1004:	ldr	r3, [pc, #40]	; 1034 <__do_global_dtors_aux+0x60>
    1008:	ldr	r0, [pc, r3]
    100c:	bl	d6c <__cxa_finalize@plt>
    1010:	bl	f40 <deregister_tm_clones>
    1014:	ldr	r3, [pc, #28]	; 1038 <__do_global_dtors_aux+0x64>
    1018:	mov	r2, #1
    101c:	add	r3, pc, r3
    1020:	strb	r2, [r3]
    1024:	pop	{r4, pc}
    1028:	.word	0x000121c4
    102c:	.word	0x00012018
    1030:	.word	0x000000b0
    1034:	.word	0x000120d8
    1038:	.word	0x00012184

0000103c <frame_dummy>:
    103c:	b	f84 <register_tm_clones>

00001040 <ms_resv>:
    1040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1044:	add	fp, sp, #28
    1048:	sub	sp, sp, #20
    104c:	ldr	r9, [pc, #184]	; 110c <ms_resv+0xcc>
    1050:	ldr	r8, [fp, #8]
    1054:	mov	r4, r2
    1058:	mov	r3, #0
    105c:	mov	sl, #0
    1060:	ldr	r9, [pc, r9]
    1064:	ldr	r2, [r9]
    1068:	ldmib	r8, {r5, r6, r7}
    106c:	ldr	r0, [pc, #156]	; 1110 <ms_resv+0xd0>
    1070:	add	r0, pc, r0
    1074:	mov	r1, r5
    1078:	stm	sp, {r0, r5, r6, r7}
    107c:	mov	r0, r4
    1080:	bl	d60 <sendto_match_servs@plt>
    1084:	ldr	r3, [r9]
    1088:	ldr	r0, [pc, #132]	; 1114 <ms_resv+0xd4>
    108c:	mov	r1, r5
    1090:	ldr	r0, [pc, r0]
    1094:	ldr	r2, [r0]
    1098:	ldr	r0, [pc, #120]	; 1118 <ms_resv+0xd8>
    109c:	add	r0, pc, r0
    10a0:	stm	sp, {r0, r5, sl}
    10a4:	mov	r0, r4
    10a8:	str	r6, [sp, #12]
    10ac:	str	r7, [sp, #16]
    10b0:	bl	d60 <sendto_match_servs@plt>
    10b4:	ldr	r0, [r8, #4]
    10b8:	ldr	r1, [pc, #92]	; 111c <ms_resv+0xdc>
    10bc:	ldr	r1, [pc, r1]
    10c0:	add	r1, r1, #88	; 0x58
    10c4:	bl	e80 <match@plt>
    10c8:	cmp	r0, #0
    10cc:	beq	1104 <ms_resv+0xc4>
    10d0:	ldrh	r0, [r4, #80]	; 0x50
    10d4:	cmp	r0, #64	; 0x40
    10d8:	bne	1104 <ms_resv+0xc4>
    10dc:	ldr	r0, [r4, #24]
    10e0:	cmp	r0, #0
    10e4:	beq	1104 <ms_resv+0xc4>
    10e8:	ldr	r1, [r8, #8]
    10ec:	ldr	r2, [r8, #12]
    10f0:	mov	r0, #0
    10f4:	mov	r3, #0
    10f8:	str	r0, [sp]
    10fc:	mov	r0, r4
    1100:	bl	1808 <parse_resv>
    1104:	sub	sp, fp, #28
    1108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    110c:	.word	0x00012058
    1110:	.word	0x000015ca
    1114:	.word	0x00012048
    1118:	.word	0x000015ad
    111c:	.word	0x00012018

00001120 <me_resv>:
    1120:	push	{r4, r5, r6, r7, fp, lr}
    1124:	add	fp, sp, #16
    1128:	sub	sp, sp, #8
    112c:	ldrh	r0, [r2, #80]	; 0x50
    1130:	cmp	r0, #64	; 0x40
    1134:	bne	117c <me_resv+0x5c>
    1138:	ldr	r0, [r2, #24]
    113c:	mov	r4, r2
    1140:	cmp	r0, #0
    1144:	beq	117c <me_resv+0x5c>
    1148:	ldr	r1, [fp, #8]
    114c:	mov	r2, #10
    1150:	mov	r7, #0
    1154:	ldmib	r1, {r0, r5}
    1158:	ldr	r6, [r1, #16]
    115c:	mov	r1, #0
    1160:	bl	d78 <strtol@plt>
    1164:	mov	r3, r0
    1168:	mov	r0, r4
    116c:	mov	r1, r5
    1170:	mov	r2, r6
    1174:	str	r7, [sp]
    1178:	bl	1808 <parse_resv>
    117c:	sub	sp, fp, #16
    1180:	pop	{r4, r5, r6, r7, fp, pc}

00001184 <mo_resv>:
    1184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1188:	add	fp, sp, #28
    118c:	sub	sp, sp, #36	; 0x24
    1190:	ldr	r0, [r2, #24]
    1194:	mov	r4, r2
    1198:	cmp	r0, #0
    119c:	ldrne	r0, [r0, #36]	; 0x24
    11a0:	cmpne	r0, #0
    11a4:	bne	11dc <mo_resv+0x58>
    11a8:	ldr	r0, [pc, #856]	; 1508 <mo_resv+0x384>
    11ac:	add	r0, pc, r0
    11b0:	str	r0, [sp]
    11b4:	add	r3, r4, #88	; 0x58
    11b8:	ldr	r0, [pc, #844]	; 150c <mo_resv+0x388>
    11bc:	ldr	r0, [pc, r0]
    11c0:	ldr	r1, [pc, #840]	; 1510 <mo_resv+0x38c>
    11c4:	add	r2, r0, #88	; 0x58
    11c8:	add	r1, pc, r1
    11cc:	mov	r0, r4
    11d0:	bl	d84 <sendto_one@plt>
    11d4:	sub	sp, fp, #28
    11d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11dc:	ldr	r1, [pc, #796]	; 1500 <mo_resv+0x37c>
    11e0:	mov	r7, r3
    11e4:	ldr	r1, [pc, r1]
    11e8:	ldr	r6, [fp, #8]
    11ec:	ldr	r5, [r1, #324]	; 0x144
    11f0:	ldr	r1, [pc, #780]	; 1504 <mo_resv+0x380>
    11f4:	add	r1, pc, r1
    11f8:	bl	ee0 <privilegeset_in_set@plt>
    11fc:	cmp	r0, #0
    1200:	beq	11a8 <mo_resv+0x24>
    1204:	ldr	r0, [r6, #4]
    1208:	str	r5, [sp, #32]
    120c:	bl	ea4 <valid_temp_time@plt>
    1210:	cmn	r0, #1
    1214:	mov	r8, #1
    1218:	mov	r5, r0
    121c:	mov	r0, #0
    1220:	mov	r1, #0
    1224:	movwgt	r8, #2
    1228:	str	r0, [sp, #28]
    122c:	movle	r5, r1
    1230:	ldr	r0, [r6, r8, lsl #2]
    1234:	add	sl, r8, #3
    1238:	add	r9, r8, #1
    123c:	cmp	sl, r7
    1240:	str	r0, [sp, #24]
    1244:	bgt	1260 <mo_resv+0xdc>
    1248:	ldr	r0, [r6, r9, lsl #2]
    124c:	ldr	r1, [pc, #704]	; 1514 <mo_resv+0x390>
    1250:	add	r1, pc, r1
    1254:	bl	ef8 <irccmp@plt>
    1258:	cmp	r0, #0
    125c:	beq	12a4 <mo_resv+0x120>
    1260:	cmp	r9, r7
    1264:	bge	127c <mo_resv+0xf8>
    1268:	ldr	r8, [r6, r9, lsl #2]
    126c:	cmp	r8, #0
    1270:	ldrbne	r0, [r8]
    1274:	cmpne	r0, #0
    1278:	bne	12c4 <mo_resv+0x140>
    127c:	ldr	r0, [pc, #668]	; 1520 <mo_resv+0x39c>
    1280:	add	r3, r4, #88	; 0x58
    1284:	add	r0, pc, r0
    1288:	str	r0, [sp]
    128c:	ldr	r0, [pc, #656]	; 1524 <mo_resv+0x3a0>
    1290:	ldr	r0, [pc, r0]
    1294:	ldr	r1, [pc, #652]	; 1528 <mo_resv+0x3a4>
    1298:	add	r2, r0, #88	; 0x58
    129c:	add	r1, pc, r1
    12a0:	b	11cc <mo_resv+0x48>
    12a4:	ldr	r0, [r4, #24]
    12a8:	cmp	r0, #0
    12ac:	ldrne	r0, [r0, #36]	; 0x24
    12b0:	cmpne	r0, #0
    12b4:	bne	13f8 <mo_resv+0x274>
    12b8:	ldr	r0, [pc, #604]	; 151c <mo_resv+0x398>
    12bc:	add	r0, pc, r0
    12c0:	b	11b0 <mo_resv+0x2c>
    12c4:	ldr	r7, [sp, #28]
    12c8:	cmp	r7, #0
    12cc:	beq	1310 <mo_resv+0x18c>
    12d0:	cmp	r5, #0
    12d4:	beq	1430 <mo_resv+0x2ac>
    12d8:	ldr	r0, [pc, #604]	; 153c <mo_resv+0x3b8>
    12dc:	mov	r1, r7
    12e0:	mov	r3, #0
    12e4:	ldr	r0, [pc, r0]
    12e8:	ldr	r2, [r0]
    12ec:	ldr	r0, [pc, #588]	; 1540 <mo_resv+0x3bc>
    12f0:	add	r0, pc, r0
    12f4:	stm	sp, {r0, r7}
    12f8:	str	r5, [sp, #8]
    12fc:	mov	r0, r4
    1300:	ldr	r9, [sp, #24]
    1304:	str	r8, [sp, #16]
    1308:	str	r9, [sp, #12]
    130c:	b	1494 <mo_resv+0x310>
    1310:	ldr	r0, [sp, #32]
    1314:	ldr	r9, [sp, #24]
    1318:	cmp	r0, #0
    131c:	bne	14b4 <mo_resv+0x330>
    1320:	ldr	r0, [pc, #544]	; 1548 <mo_resv+0x3c4>
    1324:	ldr	r0, [pc, r0]
    1328:	ldr	r1, [r0, #8]
    132c:	cmp	r1, #0
    1330:	beq	14b4 <mo_resv+0x330>
    1334:	ldr	r6, [r0]
    1338:	ldr	r0, [sp, #32]
    133c:	cmp	r6, #0
    1340:	beq	14e0 <mo_resv+0x35c>
    1344:	ldr	sl, [pc, #512]	; 154c <mo_resv+0x3c8>
    1348:	ldr	sl, [pc, sl]
    134c:	ldr	r7, [r6]
    1350:	cmp	r5, #0
    1354:	ldr	r0, [r7, #12]
    1358:	beq	1388 <mo_resv+0x204>
    135c:	tst	r0, #128	; 0x80
    1360:	beq	13e8 <mo_resv+0x264>
    1364:	ldr	r2, [sl]
    1368:	ldr	r1, [r7, #8]
    136c:	ldr	r0, [pc, #492]	; 1560 <mo_resv+0x3dc>
    1370:	mov	r3, #0
    1374:	add	r0, pc, r0
    1378:	stm	sp, {r0, r1, r5, r9}
    137c:	mov	r0, r4
    1380:	str	r8, [sp, #16]
    1384:	b	13e4 <mo_resv+0x260>
    1388:	tst	r0, #256	; 0x100
    138c:	beq	13e8 <mo_resv+0x264>
    1390:	ldr	r0, [pc, #440]	; 1550 <mo_resv+0x3cc>
    1394:	mov	r3, #0
    1398:	ldr	r0, [pc, r0]
    139c:	ldr	r1, [r7, #8]
    13a0:	ldr	r2, [r0]
    13a4:	ldr	r0, [pc, #424]	; 1554 <mo_resv+0x3d0>
    13a8:	add	r0, pc, r0
    13ac:	stm	sp, {r0, r1, r9}
    13b0:	mov	r0, r4
    13b4:	str	r8, [sp, #12]
    13b8:	bl	d60 <sendto_match_servs@plt>
    13bc:	ldr	r0, [pc, #404]	; 1558 <mo_resv+0x3d4>
    13c0:	ldr	r0, [pc, r0]
    13c4:	ldr	r2, [sl]
    13c8:	ldr	r1, [r7, #8]
    13cc:	ldr	r3, [r0]
    13d0:	ldr	r0, [pc, #388]	; 155c <mo_resv+0x3d8>
    13d4:	add	r0, pc, r0
    13d8:	stm	sp, {r0, r1, r9}
    13dc:	str	r8, [sp, #12]
    13e0:	mov	r0, r4
    13e4:	bl	d60 <sendto_match_servs@plt>
    13e8:	ldr	r6, [r6, #8]
    13ec:	cmp	r6, #0
    13f0:	bne	134c <mo_resv+0x1c8>
    13f4:	b	14b4 <mo_resv+0x330>
    13f8:	ldr	r1, [pc, #280]	; 1518 <mo_resv+0x394>
    13fc:	add	r1, pc, r1
    1400:	bl	ee0 <privilegeset_in_set@plt>
    1404:	cmp	r0, #0
    1408:	beq	12b8 <mo_resv+0x134>
    140c:	add	r0, r6, r8, lsl #2
    1410:	mov	r9, sl
    1414:	ldr	r0, [r0, #8]
    1418:	str	r0, [sp, #28]
    141c:	mov	r0, #0
    1420:	str	r0, [sp, #32]
    1424:	cmp	r9, r7
    1428:	blt	1268 <mo_resv+0xe4>
    142c:	b	127c <mo_resv+0xf8>
    1430:	ldr	r6, [pc, #244]	; 152c <mo_resv+0x3a8>
    1434:	mov	r1, r7
    1438:	mov	r3, #0
    143c:	mov	sl, #0
    1440:	ldr	r6, [pc, r6]
    1444:	ldr	r2, [r6]
    1448:	ldr	r0, [pc, #224]	; 1530 <mo_resv+0x3ac>
    144c:	add	r0, pc, r0
    1450:	stm	sp, {r0, r7}
    1454:	mov	r0, r4
    1458:	ldr	r9, [sp, #24]
    145c:	str	r8, [sp, #12]
    1460:	str	r9, [sp, #8]
    1464:	bl	d60 <sendto_match_servs@plt>
    1468:	ldr	r3, [r6]
    146c:	ldr	r0, [pc, #192]	; 1534 <mo_resv+0x3b0>
    1470:	mov	r1, r7
    1474:	ldr	r0, [pc, r0]
    1478:	ldr	r2, [r0]
    147c:	ldr	r0, [pc, #180]	; 1538 <mo_resv+0x3b4>
    1480:	add	r0, pc, r0
    1484:	stm	sp, {r0, r7, sl}
    1488:	str	r9, [sp, #12]
    148c:	str	r8, [sp, #16]
    1490:	mov	r0, r4
    1494:	bl	d60 <sendto_match_servs@plt>
    1498:	ldr	r0, [pc, #164]	; 1544 <mo_resv+0x3c0>
    149c:	ldr	r0, [pc, r0]
    14a0:	add	r1, r0, #88	; 0x58
    14a4:	mov	r0, r7
    14a8:	bl	e80 <match@plt>
    14ac:	cmp	r0, #0
    14b0:	beq	14f8 <mo_resv+0x374>
    14b4:	ldr	r0, [sp, #32]
    14b8:	cmp	r5, #0
    14bc:	bne	14e0 <mo_resv+0x35c>
    14c0:	cmp	r0, #0
    14c4:	beq	14e0 <mo_resv+0x35c>
    14c8:	ldr	r1, [pc, #148]	; 1564 <mo_resv+0x3e0>
    14cc:	mov	r0, r4
    14d0:	add	r1, pc, r1
    14d4:	sub	sp, fp, #28
    14d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14dc:	b	eb0 <sendto_one_notice@plt>
    14e0:	str	r0, [sp]
    14e4:	mov	r0, r4
    14e8:	mov	r1, r9
    14ec:	mov	r2, r8
    14f0:	mov	r3, r5
    14f4:	bl	1808 <parse_resv>
    14f8:	sub	sp, fp, #28
    14fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1500:	.word	0x00011ef8
    1504:	.word	0x000013bb
    1508:	.word	0x00001658
    150c:	.word	0x00011f18
    1510:	.word	0x000013f1
    1514:	.word	0x00001390
    1518:	.word	0x000011e7
    151c:	.word	0x0000132c
    1520:	.word	0x00001326
    1524:	.word	0x00011e44
    1528:	.word	0x00001356
    152c:	.word	0x00011c78
    1530:	.word	0x000011ee
    1534:	.word	0x00011c64
    1538:	.word	0x000011c9
    153c:	.word	0x00011df4
    1540:	.word	0x00001359
    1544:	.word	0x00011c38
    1548:	.word	0x00011da4
    154c:	.word	0x00011d90
    1550:	.word	0x00011d20
    1554:	.word	0x00001292
    1558:	.word	0x00011cf8
    155c:	.word	0x0000128f
    1560:	.word	0x000012d5
    1564:	.word	0x00001147

00001568 <ms_unresv>:
    1568:	push	{r4, r5, fp, lr}
    156c:	add	fp, sp, #8
    1570:	sub	sp, sp, #8
    1574:	ldr	r0, [pc, #172]	; 1628 <ms_unresv+0xc0>
    1578:	mov	r4, r2
    157c:	ldr	r0, [pc, r0]
    1580:	ldr	r5, [fp, #8]
    1584:	ldr	r3, [r0]
    1588:	ldr	r2, [r5, #4]
    158c:	ldr	r0, [r5, #8]
    1590:	ldr	r1, [pc, #148]	; 162c <ms_unresv+0xc4>
    1594:	add	r1, pc, r1
    1598:	str	r0, [sp, #4]
    159c:	mov	r0, r4
    15a0:	str	r1, [sp]
    15a4:	ldr	r1, [pc, #132]	; 1630 <ms_unresv+0xc8>
    15a8:	add	r1, pc, r1
    15ac:	bl	d30 <propagate_generic@plt>
    15b0:	ldr	r0, [r5, #4]
    15b4:	ldr	r1, [pc, #120]	; 1634 <ms_unresv+0xcc>
    15b8:	ldr	r1, [pc, r1]
    15bc:	add	r1, r1, #88	; 0x58
    15c0:	bl	e80 <match@plt>
    15c4:	cmp	r0, #0
    15c8:	beq	1620 <ms_unresv+0xb8>
    15cc:	ldrh	r0, [r4, #80]	; 0x50
    15d0:	cmp	r0, #64	; 0x40
    15d4:	bne	1620 <ms_unresv+0xb8>
    15d8:	ldr	r0, [r4, #24]
    15dc:	cmp	r0, #0
    15e0:	beq	1620 <ms_unresv+0xb8>
    15e4:	ldr	r2, [r4, #32]
    15e8:	ldr	r5, [r5, #8]
    15ec:	add	r0, r4, #152	; 0x98
    15f0:	add	r1, r4, #163	; 0xa3
    15f4:	mov	r3, #512	; 0x200
    15f8:	add	r2, r2, #88	; 0x58
    15fc:	bl	ed4 <find_shared_conf@plt>
    1600:	cmp	r0, #0
    1604:	beq	1620 <ms_unresv+0xb8>
    1608:	mov	r0, r4
    160c:	mov	r1, r5
    1610:	mov	r2, #0
    1614:	sub	sp, fp, #8
    1618:	pop	{r4, r5, fp, lr}
    161c:	b	2074 <remove_resv>
    1620:	sub	sp, fp, #8
    1624:	pop	{r4, r5, fp, pc}
    1628:	.word	0x00011b3c
    162c:	.word	0x0000112d
    1630:	.word	0x00001000
    1634:	.word	0x00011b1c

00001638 <me_unresv>:
    1638:	push	{r4, r5, fp, lr}
    163c:	add	fp, sp, #8
    1640:	ldrh	r0, [r2, #80]	; 0x50
    1644:	cmp	r0, #64	; 0x40
    1648:	bne	1698 <me_unresv+0x60>
    164c:	ldr	r0, [r2, #24]
    1650:	mov	r4, r2
    1654:	cmp	r0, #0
    1658:	popeq	{r4, r5, fp, pc}
    165c:	ldr	r0, [fp, #8]
    1660:	ldr	r2, [r4, #32]
    1664:	add	r1, r4, #163	; 0xa3
    1668:	mov	r3, #512	; 0x200
    166c:	ldr	r5, [r0, #4]
    1670:	add	r0, r4, #152	; 0x98
    1674:	add	r2, r2, #88	; 0x58
    1678:	bl	ed4 <find_shared_conf@plt>
    167c:	cmp	r0, #0
    1680:	beq	1698 <me_unresv+0x60>
    1684:	mov	r0, r4
    1688:	mov	r1, r5
    168c:	mov	r2, #0
    1690:	pop	{r4, r5, fp, lr}
    1694:	b	2074 <remove_resv>
    1698:	pop	{r4, r5, fp, pc}

0000169c <mo_unresv>:
    169c:	push	{r4, r5, r6, r7, fp, lr}
    16a0:	add	fp, sp, #16
    16a4:	sub	sp, sp, #8
    16a8:	ldr	r0, [r2, #24]
    16ac:	mov	r4, r2
    16b0:	cmp	r0, #0
    16b4:	ldrne	r0, [r0, #36]	; 0x24
    16b8:	cmpne	r0, #0
    16bc:	bne	16f4 <mo_unresv+0x58>
    16c0:	ldr	r0, [pc, #280]	; 17e0 <mo_unresv+0x144>
    16c4:	add	r0, pc, r0
    16c8:	str	r0, [sp]
    16cc:	add	r3, r4, #88	; 0x58
    16d0:	ldr	r0, [pc, #268]	; 17e4 <mo_unresv+0x148>
    16d4:	ldr	r0, [pc, r0]
    16d8:	ldr	r1, [pc, #264]	; 17e8 <mo_unresv+0x14c>
    16dc:	add	r2, r0, #88	; 0x58
    16e0:	add	r1, pc, r1
    16e4:	mov	r0, r4
    16e8:	bl	d84 <sendto_one@plt>
    16ec:	sub	sp, fp, #16
    16f0:	pop	{r4, r5, r6, r7, fp, pc}
    16f4:	ldr	r7, [fp, #8]
    16f8:	ldr	r1, [pc, #220]	; 17dc <mo_unresv+0x140>
    16fc:	mov	r6, r3
    1700:	add	r1, pc, r1
    1704:	bl	ee0 <privilegeset_in_set@plt>
    1708:	cmp	r0, #0
    170c:	beq	16c0 <mo_unresv+0x24>
    1710:	mov	r5, #1
    1714:	cmp	r6, #4
    1718:	bne	1734 <mo_unresv+0x98>
    171c:	ldr	r0, [r7, #8]
    1720:	ldr	r1, [pc, #196]	; 17ec <mo_unresv+0x150>
    1724:	add	r1, pc, r1
    1728:	bl	ef8 <irccmp@plt>
    172c:	cmp	r0, #0
    1730:	beq	174c <mo_unresv+0xb0>
    1734:	ldr	r1, [r7, #4]
    1738:	mov	r0, r4
    173c:	mov	r2, r5
    1740:	sub	sp, fp, #16
    1744:	pop	{r4, r5, r6, r7, fp, lr}
    1748:	b	2074 <remove_resv>
    174c:	ldr	r0, [r4, #24]
    1750:	cmp	r0, #0
    1754:	ldrne	r0, [r0, #36]	; 0x24
    1758:	cmpne	r0, #0
    175c:	bne	176c <mo_unresv+0xd0>
    1760:	ldr	r0, [pc, #140]	; 17f4 <mo_unresv+0x158>
    1764:	add	r0, pc, r0
    1768:	b	16c8 <mo_unresv+0x2c>
    176c:	ldr	r1, [pc, #124]	; 17f0 <mo_unresv+0x154>
    1770:	add	r1, pc, r1
    1774:	bl	ee0 <privilegeset_in_set@plt>
    1778:	cmp	r0, #0
    177c:	beq	1760 <mo_unresv+0xc4>
    1780:	ldr	r0, [pc, #112]	; 17f8 <mo_unresv+0x15c>
    1784:	ldr	r0, [pc, r0]
    1788:	ldr	r2, [r7, #12]
    178c:	ldr	r3, [r0]
    1790:	ldr	r0, [r7, #4]
    1794:	ldr	r1, [pc, #96]	; 17fc <mo_unresv+0x160>
    1798:	add	r1, pc, r1
    179c:	str	r0, [sp, #4]
    17a0:	mov	r0, r4
    17a4:	str	r1, [sp]
    17a8:	ldr	r1, [pc, #80]	; 1800 <mo_unresv+0x164>
    17ac:	add	r1, pc, r1
    17b0:	bl	d30 <propagate_generic@plt>
    17b4:	ldr	r0, [r7, #12]
    17b8:	ldr	r1, [pc, #68]	; 1804 <mo_unresv+0x168>
    17bc:	ldr	r1, [pc, r1]
    17c0:	add	r1, r1, #88	; 0x58
    17c4:	bl	e80 <match@plt>
    17c8:	mov	r5, #0
    17cc:	cmp	r0, #0
    17d0:	subeq	sp, fp, #16
    17d4:	popeq	{r4, r5, r6, r7, fp, pc}
    17d8:	b	1734 <mo_unresv+0x98>
    17dc:	.word	0x00000eaf
    17e0:	.word	0x00001140
    17e4:	.word	0x00011a00
    17e8:	.word	0x00000ed9
    17ec:	.word	0x00000ebc
    17f0:	.word	0x00000e73
    17f4:	.word	0x00000e84
    17f8:	.word	0x00011934
    17fc:	.word	0x00000f29
    1800:	.word	0x00000dfc
    1804:	.word	0x00011918

00001808 <parse_resv>:
    1808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    180c:	add	fp, sp, #28
    1810:	sub	sp, sp, #28
    1814:	mov	r5, r0
    1818:	ldrb	r0, [r0, #65]	; 0x41
    181c:	ldr	r4, [fp, #8]
    1820:	mov	r9, r3
    1824:	mov	sl, r2
    1828:	mov	r6, r1
    182c:	tst	r0, #32
    1830:	beq	1840 <parse_resv+0x38>
    1834:	ldrh	r0, [r5, #80]	; 0x50
    1838:	cmp	r0, #64	; 0x40
    183c:	beq	186c <parse_resv+0x64>
    1840:	ldr	r2, [r5, #32]
    1844:	mov	r3, #256	; 0x100
    1848:	cmp	r9, #0
    184c:	add	r0, r5, #152	; 0x98
    1850:	add	r1, r5, #163	; 0xa3
    1854:	movwgt	r3, #128	; 0x80
    1858:	add	r2, r2, #88	; 0x58
    185c:	bl	ed4 <find_shared_conf@plt>
    1860:	cmp	r0, #0
    1864:	subeq	sp, fp, #28
    1868:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    186c:	cmp	r6, #0
    1870:	beq	1890 <parse_resv+0x88>
    1874:	ldrb	r0, [r6]
    1878:	ldr	r1, [pc, #1888]	; 1fe0 <parse_resv+0x7d8>
    187c:	ldr	r1, [pc, r1]
    1880:	add	r0, r1, r0, lsl #2
    1884:	ldrb	r0, [r0, #1]
    1888:	tst	r0, #2
    188c:	bne	18dc <parse_resv+0xd4>
    1890:	mov	r0, r6
    1894:	bl	f04 <clean_resv_nick@plt>
    1898:	cmp	r0, #0
    189c:	beq	18f8 <parse_resv+0xf0>
    18a0:	mov	r0, r6
    18a4:	bl	e68 <strlen@plt>
    18a8:	cmp	r0, #65	; 0x41
    18ac:	bcs	1914 <parse_resv+0x10c>
    18b0:	mov	r0, r6
    18b4:	bl	ec8 <valid_wild_card_simple@plt>
    18b8:	cmp	r0, #0
    18bc:	beq	1930 <parse_resv+0x128>
    18c0:	mov	r0, r6
    18c4:	bl	e98 <find_nick_resv_mask@plt>
    18c8:	cmp	r0, #0
    18cc:	beq	1a34 <parse_resv+0x22c>
    18d0:	ldr	r1, [pc, #1872]	; 2028 <parse_resv+0x820>
    18d4:	add	r1, pc, r1
    18d8:	b	191c <parse_resv+0x114>
    18dc:	mov	r0, r6
    18e0:	bl	eec <hash_find_resv@plt>
    18e4:	cmp	r0, #0
    18e8:	beq	1904 <parse_resv+0xfc>
    18ec:	ldr	r1, [pc, #1776]	; 1fe4 <parse_resv+0x7dc>
    18f0:	add	r1, pc, r1
    18f4:	b	191c <parse_resv+0x114>
    18f8:	ldr	r1, [pc, #1892]	; 2064 <parse_resv+0x85c>
    18fc:	add	r1, pc, r1
    1900:	b	191c <parse_resv+0x114>
    1904:	mov	r0, r6
    1908:	bl	e68 <strlen@plt>
    190c:	cmp	r0, #201	; 0xc9
    1910:	bcc	194c <parse_resv+0x144>
    1914:	ldr	r1, [pc, #1740]	; 1fe8 <parse_resv+0x7e0>
    1918:	add	r1, pc, r1
    191c:	mov	r0, r5
    1920:	mov	r2, r6
    1924:	sub	sp, fp, #28
    1928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    192c:	b	eb0 <sendto_one_notice@plt>
    1930:	ldr	r0, [pc, #1768]	; 2020 <parse_resv+0x818>
    1934:	ldr	r0, [pc, r0]
    1938:	ldr	r2, [r0, #240]	; 0xf0
    193c:	ldr	r1, [pc, #1760]	; 2024 <parse_resv+0x81c>
    1940:	mov	r0, r5
    1944:	add	r1, pc, r1
    1948:	b	1924 <parse_resv+0x11c>
    194c:	bl	d3c <make_conf@plt>
    1950:	mov	r8, r0
    1954:	mov	r0, #256	; 0x100
    1958:	str	r0, [r8]
    195c:	mov	r0, #0
    1960:	str	r0, [r8, #32]
    1964:	bl	d48 <rb_current_time@plt>
    1968:	str	r0, [r8, #40]	; 0x28
    196c:	mov	r0, r6
    1970:	bl	e68 <strlen@plt>
    1974:	add	r0, r0, #1
    1978:	bl	e38 <malloc@plt>
    197c:	cmp	r0, #0
    1980:	beq	1fbc <parse_resv+0x7b4>
    1984:	mov	r1, r6
    1988:	mov	r7, r0
    198c:	bl	e20 <strcpy@plt>
    1990:	mov	r0, sl
    1994:	str	r7, [r8, #16]
    1998:	bl	e68 <strlen@plt>
    199c:	add	r0, r0, #1
    19a0:	bl	e38 <malloc@plt>
    19a4:	cmp	r0, #0
    19a8:	beq	1fbc <parse_resv+0x7b4>
    19ac:	mov	r1, sl
    19b0:	mov	r7, r0
    19b4:	bl	e20 <strcpy@plt>
    19b8:	mov	r0, r5
    19bc:	str	r7, [r8, #20]
    19c0:	bl	df0 <get_oper_name@plt>
    19c4:	bl	e14 <operhash_add@plt>
    19c8:	cmp	r4, #0
    19cc:	str	r0, [r8, #12]
    19d0:	beq	1b1c <parse_resv+0x314>
    19d4:	ldr	r0, [r8, #4]
    19d8:	orr	r0, r0, #8912896	; 0x880000
    19dc:	str	r0, [r8, #4]
    19e0:	bl	d48 <rb_current_time@plt>
    19e4:	add	r0, r0, r9
    19e8:	str	r0, [r8, #36]	; 0x24
    19ec:	str	r0, [r8, #44]	; 0x2c
    19f0:	mov	r0, r8
    19f4:	bl	d90 <replace_old_ban@plt>
    19f8:	bl	e5c <rb_make_rb_dlink_node@plt>
    19fc:	cmp	r0, #0
    1a00:	beq	1fc0 <parse_resv+0x7b8>
    1a04:	mov	r1, #0
    1a08:	str	r1, [r0, #4]
    1a0c:	str	r8, [r0]
    1a10:	ldr	r1, [pc, #1492]	; 1fec <parse_resv+0x7e4>
    1a14:	ldr	r1, [pc, r1]
    1a18:	ldr	r2, [r1]
    1a1c:	cmp	r2, #0
    1a20:	str	r2, [r0, #8]
    1a24:	beq	1c2c <parse_resv+0x424>
    1a28:	add	r2, r2, #4
    1a2c:	str	r0, [r2]
    1a30:	b	1c3c <parse_resv+0x434>
    1a34:	bl	d3c <make_conf@plt>
    1a38:	mov	r8, r0
    1a3c:	mov	r0, #512	; 0x200
    1a40:	str	r0, [r8]
    1a44:	mov	r0, #0
    1a48:	str	r0, [r8, #32]
    1a4c:	bl	d48 <rb_current_time@plt>
    1a50:	str	r0, [r8, #40]	; 0x28
    1a54:	mov	r0, r6
    1a58:	bl	e68 <strlen@plt>
    1a5c:	add	r0, r0, #1
    1a60:	bl	e38 <malloc@plt>
    1a64:	cmp	r0, #0
    1a68:	beq	1fbc <parse_resv+0x7b4>
    1a6c:	mov	r1, r6
    1a70:	mov	r7, r0
    1a74:	bl	e20 <strcpy@plt>
    1a78:	mov	r0, sl
    1a7c:	str	r7, [r8, #16]
    1a80:	bl	e68 <strlen@plt>
    1a84:	add	r0, r0, #1
    1a88:	bl	e38 <malloc@plt>
    1a8c:	cmp	r0, #0
    1a90:	beq	1fbc <parse_resv+0x7b4>
    1a94:	mov	r1, sl
    1a98:	mov	r7, r0
    1a9c:	bl	e20 <strcpy@plt>
    1aa0:	mov	r0, r5
    1aa4:	str	r7, [r8, #20]
    1aa8:	bl	df0 <get_oper_name@plt>
    1aac:	bl	e14 <operhash_add@plt>
    1ab0:	cmp	r4, #0
    1ab4:	str	r0, [r8, #12]
    1ab8:	beq	1ba4 <parse_resv+0x39c>
    1abc:	ldr	r0, [r8, #4]
    1ac0:	orr	r0, r0, #8912896	; 0x880000
    1ac4:	str	r0, [r8, #4]
    1ac8:	bl	d48 <rb_current_time@plt>
    1acc:	add	r0, r0, r9
    1ad0:	str	r0, [r8, #36]	; 0x24
    1ad4:	str	r0, [r8, #44]	; 0x2c
    1ad8:	mov	r0, r8
    1adc:	bl	d90 <replace_old_ban@plt>
    1ae0:	bl	e5c <rb_make_rb_dlink_node@plt>
    1ae4:	cmp	r0, #0
    1ae8:	beq	1fc0 <parse_resv+0x7b8>
    1aec:	mov	r1, #0
    1af0:	str	r1, [r0, #4]
    1af4:	str	r8, [r0]
    1af8:	ldr	r1, [pc, #1324]	; 202c <parse_resv+0x824>
    1afc:	ldr	r1, [pc, r1]
    1b00:	ldr	r2, [r1]
    1b04:	cmp	r2, #0
    1b08:	str	r2, [r0, #8]
    1b0c:	beq	1d48 <parse_resv+0x540>
    1b10:	add	r2, r2, #4
    1b14:	str	r0, [r2]
    1b18:	b	1d58 <parse_resv+0x550>
    1b1c:	cmp	r9, #1
    1b20:	blt	1eb4 <parse_resv+0x6ac>
    1b24:	bl	d48 <rb_current_time@plt>
    1b28:	add	r0, r0, r9
    1b2c:	str	r0, [r8, #36]	; 0x24
    1b30:	mov	r0, r5
    1b34:	bl	df0 <get_oper_name@plt>
    1b38:	mov	r3, r0
    1b3c:	movw	r0, #34953	; 0x8889
    1b40:	movt	r0, #34952	; 0x8888
    1b44:	umull	r0, r1, r9, r0
    1b48:	lsr	r4, r1, #5
    1b4c:	mov	r0, #256	; 0x100
    1b50:	mov	r1, #0
    1b54:	stm	sp, {r4, r6, sl}
    1b58:	ldr	r2, [pc, #1192]	; 2008 <parse_resv+0x800>
    1b5c:	add	r2, pc, r2
    1b60:	bl	dc0 <sendto_realops_snomask@plt>
    1b64:	mov	r0, r5
    1b68:	bl	df0 <get_oper_name@plt>
    1b6c:	stm	sp, {r6, sl}
    1b70:	mov	r2, r0
    1b74:	mov	r0, #7
    1b78:	mov	r3, r4
    1b7c:	ldr	r1, [pc, #1160]	; 200c <parse_resv+0x804>
    1b80:	add	r1, pc, r1
    1b84:	bl	e74 <ilog@plt>
    1b88:	ldr	r1, [pc, #1152]	; 2010 <parse_resv+0x808>
    1b8c:	mov	r0, r5
    1b90:	mov	r2, r4
    1b94:	mov	r3, r6
    1b98:	add	r1, pc, r1
    1b9c:	bl	eb0 <sendto_one_notice@plt>
    1ba0:	b	1d24 <parse_resv+0x51c>
    1ba4:	cmp	r9, #1
    1ba8:	blt	1f38 <parse_resv+0x730>
    1bac:	bl	d48 <rb_current_time@plt>
    1bb0:	add	r0, r0, r9
    1bb4:	str	r0, [r8, #36]	; 0x24
    1bb8:	mov	r0, r5
    1bbc:	bl	df0 <get_oper_name@plt>
    1bc0:	mov	r3, r0
    1bc4:	movw	r0, #34953	; 0x8889
    1bc8:	movt	r0, #34952	; 0x8888
    1bcc:	umull	r0, r1, r9, r0
    1bd0:	lsr	r4, r1, #5
    1bd4:	mov	r0, #256	; 0x100
    1bd8:	mov	r1, #0
    1bdc:	stm	sp, {r4, r6, sl}
    1be0:	ldr	r2, [pc, #1120]	; 2048 <parse_resv+0x840>
    1be4:	add	r2, pc, r2
    1be8:	bl	dc0 <sendto_realops_snomask@plt>
    1bec:	mov	r0, r5
    1bf0:	bl	df0 <get_oper_name@plt>
    1bf4:	stm	sp, {r6, sl}
    1bf8:	mov	r2, r0
    1bfc:	mov	r0, #7
    1c00:	mov	r3, r4
    1c04:	ldr	r1, [pc, #1088]	; 204c <parse_resv+0x844>
    1c08:	add	r1, pc, r1
    1c0c:	bl	e74 <ilog@plt>
    1c10:	ldr	r1, [pc, #1080]	; 2050 <parse_resv+0x848>
    1c14:	mov	r0, r5
    1c18:	mov	r2, r4
    1c1c:	mov	r3, r6
    1c20:	add	r1, pc, r1
    1c24:	bl	eb0 <sendto_one_notice@plt>
    1c28:	b	1e40 <parse_resv+0x638>
    1c2c:	mov	r2, r1
    1c30:	ldr	r3, [r2, #4]!
    1c34:	cmp	r3, #0
    1c38:	streq	r0, [r2]
    1c3c:	str	r0, [r1]
    1c40:	ldr	r0, [r1, #8]
    1c44:	add	r0, r0, #1
    1c48:	str	r0, [r1, #8]
    1c4c:	mov	r0, r5
    1c50:	bl	df0 <get_oper_name@plt>
    1c54:	mov	r3, r0
    1c58:	movw	r0, #34953	; 0x8889
    1c5c:	movt	r0, #34952	; 0x8888
    1c60:	smmla	r0, r9, r0, r9
    1c64:	asr	r1, r0, #5
    1c68:	add	r4, r1, r0, lsr #31
    1c6c:	mov	r0, #256	; 0x100
    1c70:	mov	r1, #0
    1c74:	stm	sp, {r4, r6, sl}
    1c78:	ldr	r2, [pc, #880]	; 1ff0 <parse_resv+0x7e8>
    1c7c:	add	r2, pc, r2
    1c80:	bl	dc0 <sendto_realops_snomask@plt>
    1c84:	mov	r0, r5
    1c88:	bl	df0 <get_oper_name@plt>
    1c8c:	stm	sp, {r6, sl}
    1c90:	mov	r2, r0
    1c94:	mov	r0, #7
    1c98:	mov	r3, r4
    1c9c:	ldr	r1, [pc, #848]	; 1ff4 <parse_resv+0x7ec>
    1ca0:	add	r1, pc, r1
    1ca4:	bl	e74 <ilog@plt>
    1ca8:	ldr	r1, [pc, #840]	; 1ff8 <parse_resv+0x7f0>
    1cac:	mov	r0, r5
    1cb0:	mov	r2, r4
    1cb4:	mov	r3, r6
    1cb8:	add	r1, pc, r1
    1cbc:	bl	eb0 <sendto_one_notice@plt>
    1cc0:	ldr	r0, [pc, #820]	; 1ffc <parse_resv+0x7f4>
    1cc4:	add	r5, r5, #396	; 0x18c
    1cc8:	ldr	r0, [pc, r0]
    1ccc:	ldr	r0, [r0]
    1cd0:	ldr	r1, [pc, #808]	; 2000 <parse_resv+0x7f8>
    1cd4:	ldr	r1, [pc, r1]
    1cd8:	ldr	r2, [r8, #16]
    1cdc:	ldr	r3, [r8, #36]	; 0x24
    1ce0:	ldr	r7, [r8, #40]	; 0x28
    1ce4:	ldr	r6, [r8, #44]	; 0x2c
    1ce8:	ldr	r1, [r1]
    1cec:	ldr	r4, [pc, #784]	; 2004 <parse_resv+0x7fc>
    1cf0:	sub	r6, r6, r7
    1cf4:	sub	r3, r3, r7
    1cf8:	add	r4, pc, r4
    1cfc:	stm	sp, {r4, r5}
    1d00:	str	r2, [sp, #8]
    1d04:	add	r2, sp, #16
    1d08:	str	r7, [sp, #12]
    1d0c:	stm	r2, {r3, r6, sl}
    1d10:	orr	r2, r0, r1
    1d14:	mov	r0, #0
    1d18:	mov	r1, #0
    1d1c:	mov	r3, #0
    1d20:	bl	e2c <sendto_server@plt>
    1d24:	ldr	r0, [r8, #16]
    1d28:	mov	r1, r8
    1d2c:	bl	d54 <add_to_resv_hash@plt>
    1d30:	ldr	r0, [r8, #16]
    1d34:	ldr	r1, [r8, #20]
    1d38:	mov	r2, r9
    1d3c:	sub	sp, fp, #28
    1d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d44:	b	dd8 <resv_chan_forcepart@plt>
    1d48:	mov	r2, r1
    1d4c:	ldr	r3, [r2, #4]!
    1d50:	cmp	r3, #0
    1d54:	streq	r0, [r2]
    1d58:	str	r0, [r1]
    1d5c:	ldr	r0, [r1, #8]
    1d60:	add	r0, r0, #1
    1d64:	str	r0, [r1, #8]
    1d68:	mov	r0, r5
    1d6c:	bl	df0 <get_oper_name@plt>
    1d70:	mov	r3, r0
    1d74:	movw	r0, #34953	; 0x8889
    1d78:	movt	r0, #34952	; 0x8888
    1d7c:	smmla	r0, r9, r0, r9
    1d80:	asr	r1, r0, #5
    1d84:	add	r4, r1, r0, lsr #31
    1d88:	mov	r0, #256	; 0x100
    1d8c:	mov	r1, #0
    1d90:	stm	sp, {r4, r6, sl}
    1d94:	ldr	r2, [pc, #660]	; 2030 <parse_resv+0x828>
    1d98:	add	r2, pc, r2
    1d9c:	bl	dc0 <sendto_realops_snomask@plt>
    1da0:	mov	r0, r5
    1da4:	bl	df0 <get_oper_name@plt>
    1da8:	stm	sp, {r6, sl}
    1dac:	mov	r2, r0
    1db0:	mov	r0, #7
    1db4:	mov	r3, r4
    1db8:	ldr	r1, [pc, #628]	; 2034 <parse_resv+0x82c>
    1dbc:	add	r1, pc, r1
    1dc0:	bl	e74 <ilog@plt>
    1dc4:	ldr	r1, [pc, #620]	; 2038 <parse_resv+0x830>
    1dc8:	mov	r0, r5
    1dcc:	mov	r2, r4
    1dd0:	mov	r3, r6
    1dd4:	add	r1, pc, r1
    1dd8:	bl	eb0 <sendto_one_notice@plt>
    1ddc:	ldr	r0, [pc, #600]	; 203c <parse_resv+0x834>
    1de0:	add	r5, r5, #396	; 0x18c
    1de4:	ldr	r0, [pc, r0]
    1de8:	ldr	r0, [r0]
    1dec:	ldr	r1, [pc, #588]	; 2040 <parse_resv+0x838>
    1df0:	ldr	r1, [pc, r1]
    1df4:	ldr	r2, [r8, #16]
    1df8:	ldr	r3, [r8, #36]	; 0x24
    1dfc:	ldr	r7, [r8, #40]	; 0x28
    1e00:	ldr	r6, [r8, #44]	; 0x2c
    1e04:	ldr	r1, [r1]
    1e08:	ldr	r4, [pc, #564]	; 2044 <parse_resv+0x83c>
    1e0c:	sub	r6, r6, r7
    1e10:	sub	r3, r3, r7
    1e14:	add	r4, pc, r4
    1e18:	stm	sp, {r4, r5}
    1e1c:	str	r2, [sp, #8]
    1e20:	add	r2, sp, #16
    1e24:	str	r7, [sp, #12]
    1e28:	stm	r2, {r3, r6, sl}
    1e2c:	orr	r2, r0, r1
    1e30:	mov	r0, #0
    1e34:	mov	r1, #0
    1e38:	mov	r3, #0
    1e3c:	bl	e2c <sendto_server@plt>
    1e40:	bl	e5c <rb_make_rb_dlink_node@plt>
    1e44:	cmp	r0, #0
    1e48:	beq	1fc0 <parse_resv+0x7b8>
    1e4c:	mov	r1, #0
    1e50:	str	r1, [r0, #4]
    1e54:	str	r8, [r0]
    1e58:	ldr	r1, [pc, #512]	; 2060 <parse_resv+0x858>
    1e5c:	ldr	r1, [pc, r1]
    1e60:	ldr	r2, [r1]
    1e64:	cmp	r2, #0
    1e68:	str	r2, [r0, #8]
    1e6c:	beq	1e7c <parse_resv+0x674>
    1e70:	add	r2, r2, #4
    1e74:	str	r0, [r2]
    1e78:	b	1e8c <parse_resv+0x684>
    1e7c:	mov	r2, r1
    1e80:	ldr	r3, [r2, #4]!
    1e84:	cmp	r3, #0
    1e88:	streq	r0, [r2]
    1e8c:	str	r0, [r1]
    1e90:	mov	r2, r9
    1e94:	ldr	r0, [r1, #8]
    1e98:	add	r0, r0, #1
    1e9c:	str	r0, [r1, #8]
    1ea0:	ldr	r0, [r8, #16]
    1ea4:	ldr	r1, [r8, #20]
    1ea8:	sub	sp, fp, #28
    1eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1eb0:	b	da8 <resv_nick_fnc@plt>
    1eb4:	mov	r0, r5
    1eb8:	bl	df0 <get_oper_name@plt>
    1ebc:	stm	sp, {r6, sl}
    1ec0:	mov	r3, r0
    1ec4:	mov	r0, #256	; 0x100
    1ec8:	mov	r1, #0
    1ecc:	mov	r4, #0
    1ed0:	ldr	r2, [pc, #316]	; 2014 <parse_resv+0x80c>
    1ed4:	add	r2, pc, r2
    1ed8:	bl	dc0 <sendto_realops_snomask@plt>
    1edc:	mov	r0, r5
    1ee0:	bl	df0 <get_oper_name@plt>
    1ee4:	str	sl, [sp]
    1ee8:	mov	r2, r0
    1eec:	mov	r0, #7
    1ef0:	mov	r3, r6
    1ef4:	ldr	r1, [pc, #284]	; 2018 <parse_resv+0x810>
    1ef8:	add	r1, pc, r1
    1efc:	bl	e74 <ilog@plt>
    1f00:	ldr	r1, [pc, #276]	; 201c <parse_resv+0x814>
    1f04:	mov	r0, r5
    1f08:	mov	r2, r6
    1f0c:	add	r1, pc, r1
    1f10:	bl	eb0 <sendto_one_notice@plt>
    1f14:	ldr	r0, [r8, #20]
    1f18:	ldr	r2, [r8, #16]
    1f1c:	mov	r1, r5
    1f20:	mov	r3, #0
    1f24:	stm	sp, {r0, r4}
    1f28:	mov	r0, #3
    1f2c:	str	r4, [sp, #8]
    1f30:	bl	dcc <bandb_add@plt>
    1f34:	b	1d24 <parse_resv+0x51c>
    1f38:	mov	r0, r5
    1f3c:	bl	df0 <get_oper_name@plt>
    1f40:	stm	sp, {r6, sl}
    1f44:	mov	r3, r0
    1f48:	mov	r0, #256	; 0x100
    1f4c:	mov	r1, #0
    1f50:	mov	r4, #0
    1f54:	ldr	r2, [pc, #248]	; 2054 <parse_resv+0x84c>
    1f58:	add	r2, pc, r2
    1f5c:	bl	dc0 <sendto_realops_snomask@plt>
    1f60:	mov	r0, r5
    1f64:	bl	df0 <get_oper_name@plt>
    1f68:	str	sl, [sp]
    1f6c:	mov	r2, r0
    1f70:	mov	r0, #7
    1f74:	mov	r3, r6
    1f78:	ldr	r1, [pc, #216]	; 2058 <parse_resv+0x850>
    1f7c:	add	r1, pc, r1
    1f80:	bl	e74 <ilog@plt>
    1f84:	ldr	r1, [pc, #208]	; 205c <parse_resv+0x854>
    1f88:	mov	r0, r5
    1f8c:	mov	r2, r6
    1f90:	add	r1, pc, r1
    1f94:	bl	eb0 <sendto_one_notice@plt>
    1f98:	ldr	r0, [r8, #20]
    1f9c:	ldr	r2, [r8, #16]
    1fa0:	mov	r1, r5
    1fa4:	mov	r3, #0
    1fa8:	stm	sp, {r0, r4}
    1fac:	mov	r0, #3
    1fb0:	str	r4, [sp, #8]
    1fb4:	bl	dcc <bandb_add@plt>
    1fb8:	b	1e40 <parse_resv+0x638>
    1fbc:	bl	d9c <rb_outofmemory@plt>
    1fc0:	ldr	r0, [pc, #160]	; 2068 <parse_resv+0x860>
    1fc4:	ldr	r1, [pc, #160]	; 206c <parse_resv+0x864>
    1fc8:	ldr	r3, [pc, #160]	; 2070 <parse_resv+0x868>
    1fcc:	mov	r2, #144	; 0x90
    1fd0:	add	r0, pc, r0
    1fd4:	add	r1, pc, r1
    1fd8:	add	r3, pc, r3
    1fdc:	bl	f10 <__assert_fail@plt>
    1fe0:	.word	0x00011850
    1fe4:	.word	0x00000d8c
    1fe8:	.word	0x00000d93
    1fec:	.word	0x000116a0
    1ff0:	.word	0x00000a48
    1ff4:	.word	0x00000a4f
    1ff8:	.word	0x00000a45
    1ffc:	.word	0x000113f8
    2000:	.word	0x000113e8
    2004:	.word	0x00000a25
    2008:	.word	0x00000be0
    200c:	.word	0x00000b6f
    2010:	.word	0x00000bd2
    2014:	.word	0x000008b9
    2018:	.word	0x000008b1
    201c:	.word	0x000008aa
    2020:	.word	0x000117a8
    2024:	.word	0x00000e83
    2028:	.word	0x00000f35
    202c:	.word	0x000115b8
    2030:	.word	0x0000092c
    2034:	.word	0x00000933
    2038:	.word	0x00000929
    203c:	.word	0x000112dc
    2040:	.word	0x000112cc
    2044:	.word	0x00000909
    2048:	.word	0x00000b58
    204c:	.word	0x00000ae7
    2050:	.word	0x00000b4a
    2054:	.word	0x00000835
    2058:	.word	0x0000082d
    205c:	.word	0x00000826
    2060:	.word	0x00011254
    2064:	.word	0x00000f39
    2068:	.word	0x000008e6
    206c:	.word	0x0000088b
    2070:	.word	0x000008a3

00002074 <remove_resv>:
    2074:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2078:	add	fp, sp, #24
    207c:	sub	sp, sp, #24
    2080:	mov	r5, r2
    2084:	mov	r6, r1
    2088:	mov	r8, r0
    208c:	cmp	r1, #0
    2090:	beq	20b0 <remove_resv+0x3c>
    2094:	ldrb	r0, [r6]
    2098:	ldr	r1, [pc, #1160]	; 2528 <remove_resv+0x4b4>
    209c:	ldr	r1, [pc, r1]
    20a0:	add	r0, r1, r0, lsl #2
    20a4:	ldrb	r0, [r0, #1]
    20a8:	tst	r0, #2
    20ac:	bne	213c <remove_resv+0xc8>
    20b0:	ldr	r9, [pc, #1200]	; 2568 <remove_resv+0x4f4>
    20b4:	ldr	r9, [pc, r9]
    20b8:	ldr	r7, [r9]
    20bc:	cmp	r7, #0
    20c0:	bne	20d4 <remove_resv+0x60>
    20c4:	b	22a4 <remove_resv+0x230>
    20c8:	ldr	r7, [r7, #8]
    20cc:	cmp	r7, #0
    20d0:	beq	22a4 <remove_resv+0x230>
    20d4:	ldr	r4, [r7]
    20d8:	mov	r1, r6
    20dc:	ldr	r0, [r4, #16]
    20e0:	bl	ef8 <irccmp@plt>
    20e4:	cmp	r0, #0
    20e8:	bne	20c8 <remove_resv+0x54>
    20ec:	cmp	r4, #0
    20f0:	beq	22a4 <remove_resv+0x230>
    20f4:	ldr	r0, [r4, #44]	; 0x2c
    20f8:	cmp	r0, #0
    20fc:	beq	23b8 <remove_resv+0x344>
    2100:	cmp	r5, #0
    2104:	beq	230c <remove_resv+0x298>
    2108:	ldr	r0, [pc, #1116]	; 256c <remove_resv+0x4f8>
    210c:	ldr	r0, [pc, r0]
    2110:	ldr	r7, [r0]
    2114:	cmp	r7, #0
    2118:	bne	212c <remove_resv+0xb8>
    211c:	b	2304 <remove_resv+0x290>
    2120:	ldr	r7, [r7, #8]
    2124:	cmp	r7, #0
    2128:	beq	2304 <remove_resv+0x290>
    212c:	ldr	r0, [r7]
    2130:	cmp	r0, r4
    2134:	bne	2120 <remove_resv+0xac>
    2138:	b	2194 <remove_resv+0x120>
    213c:	mov	r0, r6
    2140:	bl	eec <hash_find_resv@plt>
    2144:	cmp	r0, #0
    2148:	beq	22a4 <remove_resv+0x230>
    214c:	mov	r4, r0
    2150:	ldr	r0, [r0, #44]	; 0x2c
    2154:	cmp	r0, #0
    2158:	beq	2318 <remove_resv+0x2a4>
    215c:	cmp	r5, #0
    2160:	beq	230c <remove_resv+0x298>
    2164:	ldr	r0, [pc, #984]	; 2544 <remove_resv+0x4d0>
    2168:	ldr	r0, [pc, r0]
    216c:	ldr	r7, [r0]
    2170:	cmp	r7, #0
    2174:	bne	2188 <remove_resv+0x114>
    2178:	b	2304 <remove_resv+0x290>
    217c:	ldr	r7, [r7, #8]
    2180:	cmp	r7, #0
    2184:	beq	2304 <remove_resv+0x290>
    2188:	ldr	r0, [r7]
    218c:	cmp	r0, r4
    2190:	bne	217c <remove_resv+0x108>
    2194:	ldr	r1, [pc, #980]	; 2570 <remove_resv+0x4fc>
    2198:	mov	r0, r8
    219c:	mov	r2, r6
    21a0:	add	r1, pc, r1
    21a4:	bl	eb0 <sendto_one_notice@plt>
    21a8:	mov	r0, r8
    21ac:	bl	df0 <get_oper_name@plt>
    21b0:	str	r6, [sp]
    21b4:	mov	r3, r0
    21b8:	mov	r0, #256	; 0x100
    21bc:	mov	r1, #0
    21c0:	mov	r9, #0
    21c4:	ldr	r2, [pc, #936]	; 2574 <remove_resv+0x500>
    21c8:	add	r2, pc, r2
    21cc:	bl	dc0 <sendto_realops_snomask@plt>
    21d0:	mov	r0, r8
    21d4:	bl	df0 <get_oper_name@plt>
    21d8:	ldr	r1, [pc, #920]	; 2578 <remove_resv+0x504>
    21dc:	mov	r2, r0
    21e0:	mov	r0, #7
    21e4:	mov	r3, r6
    21e8:	add	r1, pc, r1
    21ec:	bl	e74 <ilog@plt>
    21f0:	bl	d48 <rb_current_time@plt>
    21f4:	ldr	r1, [r4, #40]	; 0x28
    21f8:	mov	r5, r0
    21fc:	ldr	r0, [r4, #12]
    2200:	mov	r2, r5
    2204:	cmp	r1, r5
    2208:	addge	r2, r1, #1
    220c:	str	r2, [r4, #36]	; 0x24
    2210:	str	r2, [r4, #40]	; 0x28
    2214:	bl	db4 <operhash_delete@plt>
    2218:	mov	r0, r8
    221c:	bl	df0 <get_oper_name@plt>
    2220:	bl	e14 <operhash_add@plt>
    2224:	str	r0, [r4, #12]
    2228:	add	r1, r8, #396	; 0x18c
    222c:	ldr	r0, [r4, #4]
    2230:	ldr	ip, [r4, #16]
    2234:	ldr	r2, [r4, #40]	; 0x28
    2238:	ldr	r3, [r4, #44]	; 0x2c
    223c:	orr	r0, r0, #8912896	; 0x880000
    2240:	sub	r3, r3, r2
    2244:	str	r0, [r4, #4]
    2248:	ldr	r0, [pc, #812]	; 257c <remove_resv+0x508>
    224c:	ldr	r0, [pc, r0]
    2250:	ldr	lr, [r0]
    2254:	ldr	r6, [pc, #804]	; 2580 <remove_resv+0x50c>
    2258:	ldr	r6, [pc, r6]
    225c:	ldr	r6, [r6]
    2260:	ldr	r0, [pc, #796]	; 2584 <remove_resv+0x510>
    2264:	add	r0, pc, r0
    2268:	stm	sp, {r0, r1, ip}
    226c:	str	r2, [sp, #12]
    2270:	str	r3, [sp, #20]
    2274:	orr	r2, lr, r6
    2278:	mov	r0, #0
    227c:	mov	r1, #0
    2280:	mov	r3, #0
    2284:	str	r9, [sp, #16]
    2288:	bl	e2c <sendto_server@plt>
    228c:	mov	r0, r4
    2290:	mov	r1, r7
    2294:	mov	r2, r5
    2298:	sub	sp, fp, #24
    229c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    22a0:	b	de4 <deactivate_conf@plt>
    22a4:	cmp	r5, #0
    22a8:	ldrne	r0, [pc, #636]	; 252c <remove_resv+0x4b8>
    22ac:	ldrne	r0, [pc, r0]
    22b0:	ldrne	r0, [r0, #8]
    22b4:	cmpne	r0, #0
    22b8:	beq	22e8 <remove_resv+0x274>
    22bc:	ldr	r0, [pc, #620]	; 2530 <remove_resv+0x4bc>
    22c0:	mov	r2, #512	; 0x200
    22c4:	ldr	r0, [pc, r0]
    22c8:	ldr	r3, [r0]
    22cc:	ldr	r0, [pc, #608]	; 2534 <remove_resv+0x4c0>
    22d0:	add	r0, pc, r0
    22d4:	stm	sp, {r0, r6}
    22d8:	mov	r0, r8
    22dc:	ldr	r1, [pc, #596]	; 2538 <remove_resv+0x4c4>
    22e0:	add	r1, pc, r1
    22e4:	bl	e08 <cluster_generic@plt>
    22e8:	ldr	r1, [pc, #588]	; 253c <remove_resv+0x4c8>
    22ec:	add	r1, pc, r1
    22f0:	mov	r0, r8
    22f4:	mov	r2, r6
    22f8:	sub	sp, fp, #24
    22fc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2300:	b	eb0 <sendto_one_notice@plt>
    2304:	sub	sp, fp, #24
    2308:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    230c:	ldr	r1, [pc, #556]	; 2540 <remove_resv+0x4cc>
    2310:	add	r1, pc, r1
    2314:	b	22f0 <remove_resv+0x27c>
    2318:	cmp	r5, #0
    231c:	ldrne	r0, [pc, #548]	; 2548 <remove_resv+0x4d4>
    2320:	ldrne	r0, [pc, r0]
    2324:	ldrne	r0, [r0, #8]
    2328:	cmpne	r0, #0
    232c:	beq	235c <remove_resv+0x2e8>
    2330:	ldr	r0, [pc, #532]	; 254c <remove_resv+0x4d8>
    2334:	mov	r2, #512	; 0x200
    2338:	ldr	r0, [pc, r0]
    233c:	ldr	r3, [r0]
    2340:	ldr	r0, [pc, #520]	; 2550 <remove_resv+0x4dc>
    2344:	add	r0, pc, r0
    2348:	stm	sp, {r0, r6}
    234c:	mov	r0, r8
    2350:	ldr	r1, [pc, #508]	; 2554 <remove_resv+0x4e0>
    2354:	add	r1, pc, r1
    2358:	bl	e08 <cluster_generic@plt>
    235c:	ldr	r1, [pc, #500]	; 2558 <remove_resv+0x4e4>
    2360:	mov	r0, r8
    2364:	mov	r2, r6
    2368:	add	r1, pc, r1
    236c:	bl	eb0 <sendto_one_notice@plt>
    2370:	mov	r0, r8
    2374:	bl	df0 <get_oper_name@plt>
    2378:	ldr	r1, [pc, #476]	; 255c <remove_resv+0x4e8>
    237c:	mov	r2, r0
    2380:	mov	r0, #7
    2384:	mov	r3, r6
    2388:	add	r1, pc, r1
    238c:	bl	e74 <ilog@plt>
    2390:	ldr	r0, [r4, #36]	; 0x24
    2394:	cmp	r0, #0
    2398:	beq	2458 <remove_resv+0x3e4>
    239c:	mov	r0, r8
    23a0:	bl	df0 <get_oper_name@plt>
    23a4:	str	r6, [sp]
    23a8:	mov	r3, r0
    23ac:	ldr	r2, [pc, #432]	; 2564 <remove_resv+0x4f0>
    23b0:	add	r2, pc, r2
    23b4:	b	2480 <remove_resv+0x40c>
    23b8:	cmp	r5, #0
    23bc:	ldrne	r0, [pc, #452]	; 2588 <remove_resv+0x514>
    23c0:	ldrne	r0, [pc, r0]
    23c4:	ldrne	r0, [r0, #8]
    23c8:	cmpne	r0, #0
    23cc:	beq	23fc <remove_resv+0x388>
    23d0:	ldr	r0, [pc, #436]	; 258c <remove_resv+0x518>
    23d4:	mov	r2, #512	; 0x200
    23d8:	ldr	r0, [pc, r0]
    23dc:	ldr	r3, [r0]
    23e0:	ldr	r0, [pc, #424]	; 2590 <remove_resv+0x51c>
    23e4:	add	r0, pc, r0
    23e8:	stm	sp, {r0, r6}
    23ec:	mov	r0, r8
    23f0:	ldr	r1, [pc, #412]	; 2594 <remove_resv+0x520>
    23f4:	add	r1, pc, r1
    23f8:	bl	e08 <cluster_generic@plt>
    23fc:	ldr	r1, [pc, #404]	; 2598 <remove_resv+0x524>
    2400:	mov	r0, r8
    2404:	mov	r2, r6
    2408:	add	r1, pc, r1
    240c:	bl	eb0 <sendto_one_notice@plt>
    2410:	mov	r0, r8
    2414:	bl	df0 <get_oper_name@plt>
    2418:	ldr	r1, [pc, #380]	; 259c <remove_resv+0x528>
    241c:	mov	r2, r0
    2420:	mov	r0, #7
    2424:	mov	r3, r6
    2428:	add	r1, pc, r1
    242c:	bl	e74 <ilog@plt>
    2430:	ldr	r0, [r4, #36]	; 0x24
    2434:	cmp	r0, #0
    2438:	beq	249c <remove_resv+0x428>
    243c:	mov	r0, r8
    2440:	bl	df0 <get_oper_name@plt>
    2444:	str	r6, [sp]
    2448:	mov	r3, r0
    244c:	ldr	r2, [pc, #336]	; 25a4 <remove_resv+0x530>
    2450:	add	r2, pc, r2
    2454:	b	24c4 <remove_resv+0x450>
    2458:	ldr	r1, [r4, #16]
    245c:	mov	r0, #3
    2460:	mov	r2, #0
    2464:	bl	ebc <bandb_del@plt>
    2468:	mov	r0, r8
    246c:	bl	df0 <get_oper_name@plt>
    2470:	str	r6, [sp]
    2474:	mov	r3, r0
    2478:	ldr	r2, [pc, #224]	; 2560 <remove_resv+0x4ec>
    247c:	add	r2, pc, r2
    2480:	mov	r0, #256	; 0x100
    2484:	mov	r1, #0
    2488:	bl	dc0 <sendto_realops_snomask@plt>
    248c:	mov	r0, r6
    2490:	mov	r1, r4
    2494:	bl	e8c <del_from_resv_hash@plt>
    2498:	b	2518 <remove_resv+0x4a4>
    249c:	ldr	r1, [r4, #16]
    24a0:	mov	r0, #3
    24a4:	mov	r2, #0
    24a8:	bl	ebc <bandb_del@plt>
    24ac:	mov	r0, r8
    24b0:	bl	df0 <get_oper_name@plt>
    24b4:	str	r6, [sp]
    24b8:	mov	r3, r0
    24bc:	ldr	r2, [pc, #220]	; 25a0 <remove_resv+0x52c>
    24c0:	add	r2, pc, r2
    24c4:	mov	r0, #256	; 0x100
    24c8:	mov	r1, #0
    24cc:	bl	dc0 <sendto_realops_snomask@plt>
    24d0:	ldr	r0, [r7, #8]
    24d4:	ldr	r1, [r7, #4]
    24d8:	mov	r2, r9
    24dc:	cmp	r0, #0
    24e0:	streq	r1, [r9, #4]
    24e4:	strne	r1, [r0, #4]
    24e8:	ldrne	r1, [r7, #4]
    24ec:	cmp	r1, #0
    24f0:	addne	r2, r1, #8
    24f4:	str	r0, [r2]
    24f8:	mov	r0, #0
    24fc:	str	r0, [r7, #4]
    2500:	str	r0, [r7, #8]
    2504:	ldr	r0, [r9, #8]
    2508:	sub	r0, r0, #1
    250c:	str	r0, [r9, #8]
    2510:	mov	r0, r7
    2514:	bl	dfc <rb_free_rb_dlink_node@plt>
    2518:	mov	r0, r4
    251c:	sub	sp, fp, #24
    2520:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2524:	b	e50 <free_conf@plt>
    2528:	.word	0x00011030
    252c:	.word	0x00010e1c
    2530:	.word	0x00010df4
    2534:	.word	0x000003f1
    2538:	.word	0x000002c8
    253c:	.word	0x000005d4
    2540:	.word	0x000005c0
    2544:	.word	0x00010f4c
    2548:	.word	0x00010da8
    254c:	.word	0x00010d80
    2550:	.word	0x0000037d
    2554:	.word	0x00000254
    2558:	.word	0x0000059a
    255c:	.word	0x000005bd
    2560:	.word	0x000004f0
    2564:	.word	0x000005de
    2568:	.word	0x00010ffc
    256c:	.word	0x00010fa8
    2570:	.word	0x00000762
    2574:	.word	0x00000754
    2578:	.word	0x0000075d
    257c:	.word	0x00010e74
    2580:	.word	0x00010e64
    2584:	.word	0x000006ea
    2588:	.word	0x00010d08
    258c:	.word	0x00010ce0
    2590:	.word	0x000002dd
    2594:	.word	0x000001b4
    2598:	.word	0x000004fa
    259c:	.word	0x0000051d
    25a0:	.word	0x000004ac
    25a4:	.word	0x0000053e

Disassembly of section .fini:

000025a8 <_fini>:
    25a8:	push	{r3, lr}
    25ac:	pop	{r3, pc}
