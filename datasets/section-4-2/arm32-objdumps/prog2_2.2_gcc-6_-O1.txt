
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106d0 <.init>:
   106d0:	push	{r3, lr}
   106d4:	bl	107c8 <_start@@Base+0x3c>
   106d8:	pop	{r3, pc}

Disassembly of section .plt:

000106dc <printf@plt-0x14>:
   106dc:	push	{lr}		; (str lr, [sp, #-4]!)
   106e0:	ldr	lr, [pc, #4]	; 106ec <printf@plt-0x4>
   106e4:	add	lr, pc, lr
   106e8:	ldr	pc, [lr, #8]!
   106ec:	andeq	r0, r1, r4, lsl r9

000106f0 <printf@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2324]!	; 0x914

000106fc <free@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2316]!	; 0x90c

00010708 <fgets@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2308]!	; 0x904

00010714 <realloc@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010720 <strcpy@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2292]!	; 0x8f4

0001072c <puts@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2284]!	; 0x8ec

00010738 <malloc@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2276]!	; 0x8e4

00010744 <__libc_start_main@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010750 <__gmon_start__@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2260]!	; 0x8d4

0001075c <strlen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2252]!	; 0x8cc

00010768 <__isoc99_scanf@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2244]!	; 0x8c4

00010774 <abort@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010780 <getc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2228]!	; 0x8b4

Disassembly of section .text:

0001078c <_start@@Base>:
   1078c:	mov	fp, #0
   10790:	mov	lr, #0
   10794:	pop	{r1}		; (ldr r1, [sp], #4)
   10798:	mov	r2, sp
   1079c:	push	{r2}		; (str r2, [sp, #-4]!)
   107a0:	push	{r0}		; (str r0, [sp, #-4]!)
   107a4:	ldr	ip, [pc, #16]	; 107bc <_start@@Base+0x30>
   107a8:	push	{ip}		; (str ip, [sp, #-4]!)
   107ac:	ldr	r0, [pc, #12]	; 107c0 <_start@@Base+0x34>
   107b0:	ldr	r3, [pc, #12]	; 107c4 <_start@@Base+0x38>
   107b4:	bl	10744 <__libc_start_main@plt>
   107b8:	bl	10774 <abort@plt>
   107bc:	andeq	r0, r1, r0, ror #20
   107c0:			; <UNDEFINED> instruction: 0x000108b4
   107c4:	andeq	r0, r1, r0, lsl #20
   107c8:	ldr	r3, [pc, #20]	; 107e4 <_start@@Base+0x58>
   107cc:	ldr	r2, [pc, #20]	; 107e8 <_start@@Base+0x5c>
   107d0:	add	r3, pc, r3
   107d4:	ldr	r2, [r3, r2]
   107d8:	cmp	r2, #0
   107dc:	bxeq	lr
   107e0:	b	10750 <__gmon_start__@plt>
   107e4:	andeq	r0, r1, r8, lsr #16
   107e8:	andeq	r0, r0, r0, asr #32
   107ec:	ldr	r3, [pc, #28]	; 10810 <_start@@Base+0x84>
   107f0:	ldr	r0, [pc, #28]	; 10814 <_start@@Base+0x88>
   107f4:	sub	r3, r3, r0
   107f8:	cmp	r3, #6
   107fc:	bxls	lr
   10800:	ldr	r3, [pc, #16]	; 10818 <_start@@Base+0x8c>
   10804:	cmp	r3, #0
   10808:	bxeq	lr
   1080c:	bx	r3
   10810:	andeq	r1, r2, pc, asr #32
   10814:	andeq	r1, r2, ip, asr #32
   10818:	andeq	r0, r0, r0
   1081c:	ldr	r1, [pc, #36]	; 10848 <_start@@Base+0xbc>
   10820:	ldr	r0, [pc, #36]	; 1084c <_start@@Base+0xc0>
   10824:	sub	r1, r1, r0
   10828:	asr	r1, r1, #2
   1082c:	add	r1, r1, r1, lsr #31
   10830:	asrs	r1, r1, #1
   10834:	bxeq	lr
   10838:	ldr	r3, [pc, #16]	; 10850 <_start@@Base+0xc4>
   1083c:	cmp	r3, #0
   10840:	bxeq	lr
   10844:	bx	r3
   10848:	andeq	r1, r2, ip, asr #32
   1084c:	andeq	r1, r2, ip, asr #32
   10850:	andeq	r0, r0, r0
   10854:	push	{r4, lr}
   10858:	ldr	r4, [pc, #24]	; 10878 <_start@@Base+0xec>
   1085c:	ldrb	r3, [r4]
   10860:	cmp	r3, #0
   10864:	popne	{r4, pc}
   10868:	bl	107ec <_start@@Base+0x60>
   1086c:	mov	r3, #1
   10870:	strb	r3, [r4]
   10874:	pop	{r4, pc}
   10878:	andeq	r1, r2, r4, asr r0
   1087c:	ldr	r0, [pc, #40]	; 108ac <_start@@Base+0x120>
   10880:	ldr	r3, [r0]
   10884:	cmp	r3, #0
   10888:	bne	10890 <_start@@Base+0x104>
   1088c:	b	1081c <_start@@Base+0x90>
   10890:	ldr	r3, [pc, #24]	; 108b0 <_start@@Base+0x124>
   10894:	cmp	r3, #0
   10898:	beq	1088c <_start@@Base+0x100>
   1089c:	push	{r4, lr}
   108a0:	blx	r3
   108a4:	pop	{r4, lr}
   108a8:	b	1081c <_start@@Base+0x90>
   108ac:	andeq	r0, r2, r4, lsl pc
   108b0:	andeq	r0, r0, r0

000108b4 <main@@Base>:
   108b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108b8:	sub	sp, sp, #92	; 0x5c
   108bc:	mov	r0, #12
   108c0:	bl	10738 <malloc@plt>
   108c4:	mov	r9, r0
   108c8:	mov	r3, #0
   108cc:	str	r3, [r0]
   108d0:	str	r3, [r0, #4]
   108d4:	str	r3, [r0, #8]
   108d8:	ldr	sl, [pc, #264]	; 109e8 <main@@Base+0x134>
   108dc:	ldr	r7, [pc, #264]	; 109ec <main@@Base+0x138>
   108e0:	ldr	r6, [pc, #264]	; 109f0 <main@@Base+0x13c>
   108e4:	ldr	r5, [pc, #264]	; 109f4 <main@@Base+0x140>
   108e8:	ldr	fp, [pc, #264]	; 109f8 <main@@Base+0x144>
   108ec:	b	10988 <main@@Base+0xd4>
   108f0:	mov	r1, r4
   108f4:	mov	r0, r7
   108f8:	bl	106f0 <printf@plt>
   108fc:	add	r1, sp, #4
   10900:	mov	r0, r6
   10904:	bl	10768 <__isoc99_scanf@plt>
   10908:	ldr	r0, [r5]
   1090c:	bl	10780 <getc@plt>
   10910:	ldr	r3, [sp, #4]
   10914:	cmp	r3, #3
   10918:	bhi	108f0 <main@@Base+0x3c>
   1091c:	cmp	r3, #0
   10920:	beq	109bc <main@@Base+0x108>
   10924:	mov	r0, fp
   10928:	bl	106f0 <printf@plt>
   1092c:	ldr	r2, [r5]
   10930:	mov	r1, #80	; 0x50
   10934:	add	r0, sp, #8
   10938:	bl	10708 <fgets@plt>
   1093c:	add	r0, sp, #8
   10940:	bl	1075c <strlen@plt>
   10944:	add	r3, sp, #88	; 0x58
   10948:	add	r0, r3, r0
   1094c:	mov	r3, #0
   10950:	strb	r3, [r0, #-81]	; 0xffffffaf
   10954:	ldr	r4, [sp, #4]
   10958:	sub	r4, r4, #-1073741823	; 0xc0000001
   1095c:	add	r0, sp, #8
   10960:	bl	1075c <strlen@plt>
   10964:	add	r1, r0, #1
   10968:	ldr	r0, [r9, r4, lsl #2]
   1096c:	bl	10714 <realloc@plt>
   10970:	str	r0, [r9, r4, lsl #2]
   10974:	ldr	r3, [sp, #4]
   10978:	sub	r3, r3, #-1073741823	; 0xc0000001
   1097c:	add	r1, sp, #8
   10980:	ldr	r0, [r9, r3, lsl #2]
   10984:	bl	10720 <strcpy@plt>
   10988:	sub	r8, r9, #4
   1098c:	mov	r4, #0
   10990:	add	r4, r4, #1
   10994:	mov	r1, r4
   10998:	mov	r0, sl
   1099c:	bl	106f0 <printf@plt>
   109a0:	ldr	r0, [r8, #4]!
   109a4:	cmp	r0, #0
   109a8:	ldreq	r0, [pc, #76]	; 109fc <main@@Base+0x148>
   109ac:	bl	1072c <puts@plt>
   109b0:	cmp	r4, #3
   109b4:	bne	10990 <main@@Base+0xdc>
   109b8:	b	108f0 <main@@Base+0x3c>
   109bc:	ldr	r0, [r9]
   109c0:	bl	106fc <free@plt>
   109c4:	ldr	r0, [r9, #4]
   109c8:	bl	106fc <free@plt>
   109cc:	ldr	r0, [r9, #8]
   109d0:	bl	106fc <free@plt>
   109d4:	mov	r0, r9
   109d8:	bl	106fc <free@plt>
   109dc:	mov	r0, #0
   109e0:	add	sp, sp, #92	; 0x5c
   109e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109e8:	andeq	r0, r1, r0, ror sl
   109ec:	andeq	r0, r1, r0, lsl #21
   109f0:	andeq	r0, r1, r4, lsr #21
   109f4:	andeq	r1, r2, r0, asr r0
   109f8:	andeq	r0, r1, r8, lsr #21
   109fc:	andeq	r0, r1, r8, ror sl

00010a00 <__libc_csu_init@@Base>:
   10a00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a04:	mov	r7, r0
   10a08:	ldr	r6, [pc, #72]	; 10a58 <__libc_csu_init@@Base+0x58>
   10a0c:	ldr	r5, [pc, #72]	; 10a5c <__libc_csu_init@@Base+0x5c>
   10a10:	add	r6, pc, r6
   10a14:	add	r5, pc, r5
   10a18:	sub	r6, r6, r5
   10a1c:	mov	r8, r1
   10a20:	mov	r9, r2
   10a24:	bl	106d0 <printf@plt-0x20>
   10a28:	asrs	r6, r6, #2
   10a2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a30:	mov	r4, #0
   10a34:	add	r4, r4, #1
   10a38:	ldr	r3, [r5], #4
   10a3c:	mov	r2, r9
   10a40:	mov	r1, r8
   10a44:	mov	r0, r7
   10a48:	blx	r3
   10a4c:	cmp	r6, r4
   10a50:	bne	10a34 <__libc_csu_init@@Base+0x34>
   10a54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a58:	strdeq	r0, [r1], -r8
   10a5c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00010a60 <__libc_csu_fini@@Base>:
   10a60:	bx	lr

Disassembly of section .fini:

00010a64 <.fini>:
   10a64:	push	{r3, lr}
   10a68:	pop	{r3, pc}
