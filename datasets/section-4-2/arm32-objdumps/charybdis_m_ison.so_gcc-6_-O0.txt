
../repos/charybdis/modules/.libs/m_ison.so:     file format elf32-littlearm


Disassembly of section .init:

000004d8 <_init>:
 4d8:	push	{r3, lr}
 4dc:	bl	564 <call_weak_fn>
 4e0:	pop	{r3, pc}

Disassembly of section .plt:

000004e4 <.plt>:
 4e4:	push	{lr}		; (str lr, [sp, #-4]!)
 4e8:	ldr	lr, [pc, #4]	; 4f4 <.plt+0x10>
 4ec:	add	lr, pc, lr
 4f0:	ldr	pc, [lr, #8]!
 4f4:	.word	0x00010b0c

000004f8 <__cxa_finalize@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2828]!	; 0xb0c

00000504 <sendto_one@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2820]!	; 0xb04

00000510 <memcpy@plt>:
 510:	add	ip, pc, #0, 12
 514:	add	ip, ip, #16, 20	; 0x10000
 518:	ldr	pc, [ip, #2812]!	; 0xafc

0000051c <strcpy@plt>:
 51c:	add	ip, pc, #0, 12
 520:	add	ip, ip, #16, 20	; 0x10000
 524:	ldr	pc, [ip, #2804]!	; 0xaf4

00000528 <__gmon_start__@plt>:
 528:	add	ip, pc, #0, 12
 52c:	add	ip, ip, #16, 20	; 0x10000
 530:	ldr	pc, [ip, #2796]!	; 0xaec

00000534 <strlen@plt>:
 534:	add	ip, pc, #0, 12
 538:	add	ip, ip, #16, 20	; 0x10000
 53c:	ldr	pc, [ip, #2788]!	; 0xae4

00000540 <rb_strtok_r@plt>:
 540:	add	ip, pc, #0, 12
 544:	add	ip, ip, #16, 20	; 0x10000
 548:	ldr	pc, [ip, #2780]!	; 0xadc

0000054c <sprintf@plt>:
 54c:	add	ip, pc, #0, 12
 550:	add	ip, ip, #16, 20	; 0x10000
 554:	ldr	pc, [ip, #2772]!	; 0xad4

00000558 <find_named_person@plt>:
 558:	add	ip, pc, #0, 12
 55c:	add	ip, ip, #16, 20	; 0x10000
 560:	ldr	pc, [ip, #2764]!	; 0xacc

Disassembly of section .text:

00000564 <call_weak_fn>:
 564:	ldr	r3, [pc, #20]	; 580 <call_weak_fn+0x1c>
 568:	ldr	r2, [pc, #20]	; 584 <call_weak_fn+0x20>
 56c:	add	r3, pc, r3
 570:	ldr	r2, [r3, r2]
 574:	cmp	r2, #0
 578:	bxeq	lr
 57c:	b	528 <__gmon_start__@plt>
 580:	.word	0x00010a8c
 584:	.word	0x00000038

00000588 <deregister_tm_clones>:
 588:	ldr	r3, [pc, #52]	; 5c4 <deregister_tm_clones+0x3c>
 58c:	ldr	r0, [pc, #52]	; 5c8 <deregister_tm_clones+0x40>
 590:	add	r3, pc, r3
 594:	add	r0, pc, r0
 598:	add	r3, r3, #3
 59c:	sub	r3, r3, r0
 5a0:	cmp	r3, #6
 5a4:	ldr	r3, [pc, #32]	; 5cc <deregister_tm_clones+0x44>
 5a8:	add	r3, pc, r3
 5ac:	bxls	lr
 5b0:	ldr	r2, [pc, #24]	; 5d0 <deregister_tm_clones+0x48>
 5b4:	ldr	r3, [r3, r2]
 5b8:	cmp	r3, #0
 5bc:	bxeq	lr
 5c0:	bx	r3
 5c4:	.word	0x00010b28
 5c8:	.word	0x00010b24
 5cc:	.word	0x00010a50
 5d0:	.word	0x00000034

000005d4 <register_tm_clones>:
 5d4:	ldr	r1, [pc, #56]	; 614 <register_tm_clones+0x40>
 5d8:	ldr	r0, [pc, #56]	; 618 <register_tm_clones+0x44>
 5dc:	add	r1, pc, r1
 5e0:	add	r0, pc, r0
 5e4:	sub	r1, r1, r0
 5e8:	ldr	r3, [pc, #44]	; 61c <register_tm_clones+0x48>
 5ec:	asr	r1, r1, #2
 5f0:	add	r3, pc, r3
 5f4:	add	r1, r1, r1, lsr #31
 5f8:	asrs	r1, r1, #1
 5fc:	bxeq	lr
 600:	ldr	r2, [pc, #24]	; 620 <register_tm_clones+0x4c>
 604:	ldr	r3, [r3, r2]
 608:	cmp	r3, #0
 60c:	bxeq	lr
 610:	bx	r3
 614:	.word	0x00010adc
 618:	.word	0x00010ad8
 61c:	.word	0x00010a08
 620:	.word	0x00000040

00000624 <__do_global_dtors_aux>:
 624:	ldr	r3, [pc, #76]	; 678 <__do_global_dtors_aux+0x54>
 628:	ldr	r2, [pc, #76]	; 67c <__do_global_dtors_aux+0x58>
 62c:	add	r3, pc, r3
 630:	add	r2, pc, r2
 634:	ldrb	r3, [r3]
 638:	cmp	r3, #0
 63c:	bxne	lr
 640:	ldr	r3, [pc, #56]	; 680 <__do_global_dtors_aux+0x5c>
 644:	push	{r4, lr}
 648:	ldr	r3, [r2, r3]
 64c:	cmp	r3, #0
 650:	beq	660 <__do_global_dtors_aux+0x3c>
 654:	ldr	r3, [pc, #40]	; 684 <__do_global_dtors_aux+0x60>
 658:	ldr	r0, [pc, r3]
 65c:	bl	4f8 <__cxa_finalize@plt>
 660:	bl	588 <deregister_tm_clones>
 664:	ldr	r3, [pc, #28]	; 688 <__do_global_dtors_aux+0x64>
 668:	mov	r2, #1
 66c:	add	r3, pc, r3
 670:	strb	r2, [r3]
 674:	pop	{r4, pc}
 678:	.word	0x00010a8c
 67c:	.word	0x000109c8
 680:	.word	0x00000030
 684:	.word	0x000109e8
 688:	.word	0x00010a4c

0000068c <frame_dummy>:
 68c:	ldr	r0, [pc, #56]	; 6cc <frame_dummy+0x40>
 690:	ldr	r3, [pc, #56]	; 6d0 <frame_dummy+0x44>
 694:	add	r0, pc, r0
 698:	ldr	r2, [r0]
 69c:	add	r3, pc, r3
 6a0:	cmp	r2, #0
 6a4:	bne	6ac <frame_dummy+0x20>
 6a8:	b	5d4 <register_tm_clones>
 6ac:	ldr	r2, [pc, #32]	; 6d4 <frame_dummy+0x48>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	beq	6a8 <frame_dummy+0x1c>
 6bc:	push	{r4, lr}
 6c0:	blx	r3
 6c4:	pop	{r4, lr}
 6c8:	b	5d4 <register_tm_clones>
 6cc:	.word	0x00010860
 6d0:	.word	0x0001095c
 6d4:	.word	0x0000003c

000006d8 <m_ison>:
 6d8:	push	{fp, lr}
 6dc:	add	fp, sp, #4
 6e0:	sub	sp, sp, #56	; 0x38
 6e4:	str	r0, [fp, #-48]	; 0xffffffd0
 6e8:	str	r1, [fp, #-52]	; 0xffffffcc
 6ec:	str	r2, [fp, #-56]	; 0xffffffc8
 6f0:	str	r3, [fp, #-60]	; 0xffffffc4
 6f4:	ldr	r1, [pc, #604]	; 958 <m_ison+0x280>
 6f8:	add	r1, pc, r1
 6fc:	mov	r3, #0
 700:	str	r3, [fp, #-20]	; 0xffffffec
 704:	ldr	r3, [pc, #592]	; 95c <m_ison+0x284>
 708:	add	r3, pc, r3
 70c:	str	r3, [fp, #-24]	; 0xffffffe8
 710:	ldr	r3, [pc, #584]	; 960 <m_ison+0x288>
 714:	add	r3, pc, r3
 718:	mov	r2, #0
 71c:	strb	r2, [r3]
 720:	ldr	r3, [fp, #-56]	; 0xffffffc8
 724:	add	r3, r3, #88	; 0x58
 728:	ldr	r2, [pc, #564]	; 964 <m_ison+0x28c>
 72c:	ldr	r2, [r1, r2]
 730:	add	r2, r2, #88	; 0x58
 734:	ldr	r1, [pc, #556]	; 968 <m_ison+0x290>
 738:	add	r1, pc, r1
 73c:	ldr	r0, [pc, #552]	; 96c <m_ison+0x294>
 740:	add	r0, pc, r0
 744:	bl	54c <sprintf@plt>
 748:	ldr	r3, [pc, #544]	; 970 <m_ison+0x298>
 74c:	add	r3, pc, r3
 750:	mov	r0, r3
 754:	bl	534 <strlen@plt>
 758:	mov	r3, r0
 75c:	str	r3, [fp, #-28]	; 0xffffffe4
 760:	ldr	r3, [fp, #-28]	; 0xffffffe4
 764:	ldr	r2, [pc, #520]	; 974 <m_ison+0x29c>
 768:	add	r2, pc, r2
 76c:	add	r3, r3, r2
 770:	str	r3, [fp, #-12]
 774:	mov	r3, #1
 778:	str	r3, [fp, #-16]
 77c:	b	8fc <m_ison+0x224>
 780:	ldr	r3, [fp, #-16]
 784:	lsl	r3, r3, #2
 788:	ldr	r2, [fp, #4]
 78c:	add	r3, r2, r3
 790:	ldr	r3, [r3]
 794:	mov	r0, r3
 798:	bl	534 <strlen@plt>
 79c:	mov	r3, r0
 7a0:	add	r3, r3, #1
 7a4:	add	r3, r3, #7
 7a8:	add	r3, r3, #7
 7ac:	lsr	r3, r3, #3
 7b0:	lsl	r3, r3, #3
 7b4:	sub	sp, sp, r3
 7b8:	mov	r3, sp
 7bc:	add	r3, r3, #7
 7c0:	lsr	r3, r3, #3
 7c4:	lsl	r3, r3, #3
 7c8:	str	r3, [fp, #-32]	; 0xffffffe0
 7cc:	ldr	r3, [fp, #-16]
 7d0:	lsl	r3, r3, #2
 7d4:	ldr	r2, [fp, #4]
 7d8:	add	r3, r2, r3
 7dc:	ldr	r3, [r3]
 7e0:	mov	r1, r3
 7e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 7e8:	bl	51c <strcpy@plt>
 7ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7f0:	str	r3, [fp, #-36]	; 0xffffffdc
 7f4:	sub	r3, fp, #44	; 0x2c
 7f8:	mov	r2, r3
 7fc:	ldr	r3, [pc, #372]	; 978 <m_ison+0x2a0>
 800:	add	r3, pc, r3
 804:	mov	r1, r3
 808:	ldr	r0, [fp, #-36]	; 0xffffffdc
 80c:	bl	540 <rb_strtok_r@plt>
 810:	str	r0, [fp, #-8]
 814:	b	8d8 <m_ison+0x200>
 818:	ldr	r0, [fp, #-8]
 81c:	bl	558 <find_named_person@plt>
 820:	str	r0, [fp, #-40]	; 0xffffffd8
 824:	ldr	r3, [fp, #-40]	; 0xffffffd8
 828:	cmp	r3, #0
 82c:	beq	8b8 <m_ison+0x1e0>
 830:	ldr	r3, [fp, #-40]	; 0xffffffd8
 834:	add	r3, r3, #88	; 0x58
 838:	mov	r0, r3
 83c:	bl	534 <strlen@plt>
 840:	mov	r3, r0
 844:	str	r3, [fp, #-28]	; 0xffffffe4
 848:	ldr	r3, [fp, #-28]	; 0xffffffe4
 84c:	add	r3, r3, #5
 850:	ldr	r2, [fp, #-12]
 854:	add	r2, r2, r3
 858:	ldr	r3, [pc, #284]	; 97c <m_ison+0x2a4>
 85c:	add	r3, pc, r3
 860:	add	r3, r3, #512	; 0x200
 864:	cmp	r2, r3
 868:	bcs	8ac <m_ison+0x1d4>
 86c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 870:	add	r3, r3, #88	; 0x58
 874:	ldr	r2, [fp, #-28]	; 0xffffffe4
 878:	mov	r1, r3
 87c:	ldr	r0, [fp, #-12]
 880:	bl	510 <memcpy@plt>
 884:	ldr	r3, [fp, #-28]	; 0xffffffe4
 888:	ldr	r2, [fp, #-12]
 88c:	add	r3, r2, r3
 890:	str	r3, [fp, #-12]
 894:	ldr	r3, [fp, #-12]
 898:	add	r2, r3, #1
 89c:	str	r2, [fp, #-12]
 8a0:	mov	r2, #32
 8a4:	strb	r2, [r3]
 8a8:	b	8b8 <m_ison+0x1e0>
 8ac:	mov	r3, #1
 8b0:	str	r3, [fp, #-20]	; 0xffffffec
 8b4:	b	8e4 <m_ison+0x20c>
 8b8:	sub	r3, fp, #44	; 0x2c
 8bc:	mov	r2, r3
 8c0:	ldr	r3, [pc, #184]	; 980 <m_ison+0x2a8>
 8c4:	add	r3, pc, r3
 8c8:	mov	r1, r3
 8cc:	mov	r0, #0
 8d0:	bl	540 <rb_strtok_r@plt>
 8d4:	str	r0, [fp, #-8]
 8d8:	ldr	r3, [fp, #-8]
 8dc:	cmp	r3, #0
 8e0:	bne	818 <m_ison+0x140>
 8e4:	ldr	r3, [fp, #-20]	; 0xffffffec
 8e8:	cmp	r3, #0
 8ec:	bne	910 <m_ison+0x238>
 8f0:	ldr	r3, [fp, #-16]
 8f4:	add	r3, r3, #1
 8f8:	str	r3, [fp, #-16]
 8fc:	ldr	r2, [fp, #-16]
 900:	ldr	r3, [fp, #-60]	; 0xffffffc4
 904:	cmp	r2, r3
 908:	blt	780 <m_ison+0xa8>
 90c:	b	914 <m_ison+0x23c>
 910:	nop			; (mov r0, r0)
 914:	ldr	r3, [fp, #-12]
 918:	mov	r2, #0
 91c:	strb	r2, [r3]
 920:	ldr	r3, [fp, #-24]	; 0xffffffe8
 924:	mov	r2, #0
 928:	strb	r2, [r3]
 92c:	ldr	r3, [pc, #80]	; 984 <m_ison+0x2ac>
 930:	add	r3, pc, r3
 934:	mov	r2, r3
 938:	ldr	r3, [pc, #72]	; 988 <m_ison+0x2b0>
 93c:	add	r3, pc, r3
 940:	mov	r1, r3
 944:	ldr	r0, [fp, #-56]	; 0xffffffc8
 948:	bl	504 <sendto_one@plt>
 94c:	nop			; (mov r0, r0)
 950:	sub	sp, fp, #4
 954:	pop	{fp, pc}
 958:	.word	0x00010900
 95c:	.word	0x00010bb4
 960:	.word	0x00010ba8
 964:	.word	0x00000044
 968:	.word	0x0000029c
 96c:	.word	0x0001097c
 970:	.word	0x00010970
 974:	.word	0x00010954
 978:	.word	0x000001e4
 97c:	.word	0x00010860
 980:	.word	0x00000120
 984:	.word	0x0001078c
 988:	.word	0x000000ac

Disassembly of section .fini:

0000098c <_fini>:
 98c:	push	{r3, lr}
 990:	pop	{r3, pc}
