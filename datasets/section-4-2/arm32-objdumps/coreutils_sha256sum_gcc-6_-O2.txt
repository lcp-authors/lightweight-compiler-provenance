
../repos/coreutils/src/sha256sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	12108 <dcngettext@plt+0x1118>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000192b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #102400	; 0x19000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #102400	; 0x19000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #102400	; 0x19000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #102400	; 0x19000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #102400	; 0x19000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #102400	; 0x19000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #102400	; 0x19000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #102400	; 0x19000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #102400	; 0x19000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #102400	; 0x19000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #102400	; 0x19000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #102400	; 0x19000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #102400	; 0x19000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #102400	; 0x19000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #102400	; 0x19000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #102400	; 0x19000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #102400	; 0x19000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #102400	; 0x19000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #102400	; 0x19000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #102400	; 0x19000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #102400	; 0x19000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #102400	; 0x19000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #102400	; 0x19000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #102400	; 0x19000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #102400	; 0x19000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11000:	mov	r6, r0
   11004:	sub	sp, sp, #196	; 0xc4
   11008:	ldr	r0, [r1]
   1100c:	mov	r5, r1
   11010:	bl	15654 <dcngettext@plt+0x4664>
   11014:	ldr	r1, [pc, #3952]	; 11f8c <dcngettext@plt+0xf9c>
   11018:	mov	r0, #6
   1101c:	bl	10f78 <setlocale@plt>
   11020:	ldr	r1, [pc, #3944]	; 11f90 <dcngettext@plt+0xfa0>
   11024:	ldr	r0, [pc, #3944]	; 11f94 <dcngettext@plt+0xfa4>
   11028:	bl	10fb4 <bindtextdomain@plt>
   1102c:	ldr	r0, [pc, #3936]	; 11f94 <dcngettext@plt+0xfa4>
   11030:	bl	10e1c <textdomain@plt>
   11034:	ldr	r0, [pc, #3932]	; 11f98 <dcngettext@plt+0xfa8>
   11038:	bl	18aec <dcngettext@plt+0x7afc>
   1103c:	ldr	r2, [pc, #3928]	; 11f9c <dcngettext@plt+0xfac>
   11040:	mov	r3, #0
   11044:	ldr	r8, [pc, #3924]	; 11fa0 <dcngettext@plt+0xfb0>
   11048:	ldr	r7, [pc, #3924]	; 11fa4 <dcngettext@plt+0xfb4>
   1104c:	ldr	r9, [pc, #3924]	; 11fa8 <dcngettext@plt+0xfb8>
   11050:	ldr	fp, [pc, #3924]	; 11fac <dcngettext@plt+0xfbc>
   11054:	ldr	r0, [r2]
   11058:	mov	r1, r3
   1105c:	mov	r2, #1
   11060:	mov	sl, #1
   11064:	mov	r4, r3
   11068:	str	r3, [sp, #40]	; 0x28
   1106c:	bl	10f0c <setvbuf@plt>
   11070:	mvn	r3, #0
   11074:	str	r4, [sp, #20]
   11078:	str	r3, [sp, #24]
   1107c:	mov	r4, #0
   11080:	str	r4, [sp]
   11084:	mov	r3, r8
   11088:	mov	r2, r7
   1108c:	mov	r1, r5
   11090:	mov	r0, r6
   11094:	bl	10eb8 <getopt_long@plt>
   11098:	cmn	r0, #1
   1109c:	beq	111f0 <dcngettext@plt+0x200>
   110a0:	cmp	r0, #119	; 0x77
   110a4:	beq	111e0 <dcngettext@plt+0x1f0>
   110a8:	ble	110e0 <dcngettext@plt+0xf0>
   110ac:	cmp	r0, fp
   110b0:	beq	111d0 <dcngettext@plt+0x1e0>
   110b4:	ble	1111c <dcngettext@plt+0x12c>
   110b8:	ldr	r3, [pc, #3824]	; 11fb0 <dcngettext@plt+0xfc0>
   110bc:	cmp	r0, r3
   110c0:	beq	111c8 <dcngettext@plt+0x1d8>
   110c4:	blt	11178 <dcngettext@plt+0x188>
   110c8:	cmp	r0, #260	; 0x104
   110cc:	bne	111c0 <dcngettext@plt+0x1d0>
   110d0:	mov	r3, #1
   110d4:	str	sl, [sp, #40]	; 0x28
   110d8:	str	r3, [sp, #24]
   110dc:	b	1107c <dcngettext@plt+0x8c>
   110e0:	cmp	r0, #98	; 0x62
   110e4:	beq	11194 <dcngettext@plt+0x1a4>
   110e8:	bgt	11104 <dcngettext@plt+0x114>
   110ec:	cmn	r0, #3
   110f0:	beq	1113c <dcngettext@plt+0x14c>
   110f4:	cmn	r0, #2
   110f8:	bne	111c0 <dcngettext@plt+0x1d0>
   110fc:	mov	r0, r4
   11100:	bl	12594 <dcngettext@plt+0x15a4>
   11104:	cmp	r0, #99	; 0x63
   11108:	beq	11134 <dcngettext@plt+0x144>
   1110c:	cmp	r0, #116	; 0x74
   11110:	bne	111c0 <dcngettext@plt+0x1d0>
   11114:	str	r4, [sp, #24]
   11118:	b	1107c <dcngettext@plt+0x8c>
   1111c:	cmp	r0, #122	; 0x7a
   11120:	beq	11188 <dcngettext@plt+0x198>
   11124:	cmp	r0, #256	; 0x100
   11128:	bne	111c0 <dcngettext@plt+0x1d0>
   1112c:	strb	sl, [r9, #5]
   11130:	b	1107c <dcngettext@plt+0x8c>
   11134:	str	sl, [sp, #20]
   11138:	b	1107c <dcngettext@plt+0x8c>
   1113c:	ldr	ip, [pc, #3696]	; 11fb4 <dcngettext@plt+0xfc4>
   11140:	ldr	r1, [pc, #3696]	; 11fb8 <dcngettext@plt+0xfc8>
   11144:	ldr	r3, [pc, #3696]	; 11fbc <dcngettext@plt+0xfcc>
   11148:	ldr	r0, [pc, #3660]	; 11f9c <dcngettext@plt+0xfac>
   1114c:	ldr	r2, [pc, #3692]	; 11fc0 <dcngettext@plt+0xfd0>
   11150:	str	r4, [sp, #12]
   11154:	ldr	r0, [r0]
   11158:	ldr	r3, [r3]
   1115c:	stmib	sp, {r1, ip}
   11160:	str	r2, [sp]
   11164:	ldr	r1, [pc, #3672]	; 11fc4 <dcngettext@plt+0xfd4>
   11168:	ldr	r2, [pc, #3672]	; 11fc8 <dcngettext@plt+0xfd8>
   1116c:	bl	1795c <dcngettext@plt+0x696c>
   11170:	mov	r0, r4
   11174:	bl	10ed0 <exit@plt>
   11178:	strb	r4, [r9, #6]
   1117c:	strb	r4, [r9, #7]
   11180:	strb	sl, [r9, #8]
   11184:	b	1107c <dcngettext@plt+0x8c>
   11188:	ldr	r3, [pc, #3644]	; 11fcc <dcngettext@plt+0xfdc>
   1118c:	strb	r4, [r3]
   11190:	b	1107c <dcngettext@plt+0x8c>
   11194:	mov	r3, #1
   11198:	str	r3, [sp, #24]
   1119c:	b	1107c <dcngettext@plt+0x8c>
   111a0:	ldr	r1, [pc, #3624]	; 11fd0 <dcngettext@plt+0xfe0>
   111a4:	mov	r2, #5
   111a8:	mov	r0, r4
   111ac:	bl	10e04 <dcgettext@plt>
   111b0:	mov	r1, r4
   111b4:	mov	r2, r0
   111b8:	mov	r0, r4
   111bc:	bl	10e70 <error@plt>
   111c0:	mov	r0, #1
   111c4:	bl	12594 <dcngettext@plt+0x15a4>
   111c8:	strb	sl, [r9, #9]
   111cc:	b	1107c <dcngettext@plt+0x8c>
   111d0:	strb	sl, [r9, #6]
   111d4:	strb	r4, [r9, #7]
   111d8:	strb	r4, [r9, #8]
   111dc:	b	1107c <dcngettext@plt+0x8c>
   111e0:	strb	r4, [r9, #6]
   111e4:	strb	sl, [r9, #7]
   111e8:	strb	r4, [r9, #8]
   111ec:	b	1107c <dcngettext@plt+0x8c>
   111f0:	ldr	r9, [pc, #3504]	; 11fa8 <dcngettext@plt+0xfb8>
   111f4:	ldr	r3, [sp, #24]
   111f8:	ldr	r7, [sp, #40]	; 0x28
   111fc:	cmp	r3, r4
   11200:	movne	r7, #0
   11204:	andeq	r7, r7, #1
   11208:	mov	r3, #66	; 0x42
   1120c:	str	r3, [r9, #12]
   11210:	cmp	r7, r4
   11214:	mov	r3, #64	; 0x40
   11218:	str	r3, [r9]
   1121c:	bne	111a0 <dcngettext@plt+0x1b0>
   11220:	ldr	r3, [pc, #3492]	; 11fcc <dcngettext@plt+0xfdc>
   11224:	ldrb	r4, [r3]
   11228:	ldr	r3, [sp, #20]
   1122c:	cmp	r4, #10
   11230:	moveq	r3, #0
   11234:	andne	r3, r3, #1
   11238:	cmp	r3, #0
   1123c:	mov	r4, r3
   11240:	movne	r2, #5
   11244:	ldrne	r1, [pc, #3464]	; 11fd4 <dcngettext@plt+0xfe4>
   11248:	bne	120ac <dcngettext@plt+0x10bc>
   1124c:	ldr	r2, [sp, #40]	; 0x28
   11250:	ldr	r3, [sp, #20]
   11254:	ands	r7, r3, r2
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3444]	; 11fd8 <dcngettext@plt+0xfe8>
   11260:	bne	111a8 <dcngettext@plt+0x1b8>
   11264:	ldr	r2, [sp, #24]
   11268:	ldr	r3, [sp, #20]
   1126c:	cmp	r2, #0
   11270:	movlt	r3, #0
   11274:	andge	r3, r3, #1
   11278:	cmp	r3, #0
   1127c:	movne	r2, #5
   11280:	ldrne	r1, [pc, #3412]	; 11fdc <dcngettext@plt+0xfec>
   11284:	bne	120ac <dcngettext@plt+0x10bc>
   11288:	ldrb	r3, [r9, #5]
   1128c:	ldr	r2, [sp, #20]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3388]	; 11fe0 <dcngettext@plt+0xff0>
   112a0:	beq	111a8 <dcngettext@plt+0x1b8>
   112a4:	ldrb	r3, [r9, #6]
   112a8:	ldr	r2, [sp, #20]
   112ac:	eor	r3, r3, #1
   112b0:	orrs	r4, r2, r3
   112b4:	moveq	r2, #5
   112b8:	ldreq	r1, [pc, #3364]	; 11fe4 <dcngettext@plt+0xff4>
   112bc:	beq	111a8 <dcngettext@plt+0x1b8>
   112c0:	ldrb	r3, [r9, #7]
   112c4:	ldr	r2, [sp, #20]
   112c8:	eor	r3, r3, #1
   112cc:	orrs	r4, r2, r3
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #3340]	; 11fe8 <dcngettext@plt+0xff8>
   112d8:	beq	111a8 <dcngettext@plt+0x1b8>
   112dc:	ldrb	r3, [r9, #8]
   112e0:	ldr	r2, [sp, #20]
   112e4:	eor	r3, r3, #1
   112e8:	orrs	r3, r2, r3
   112ec:	str	r3, [sp, #48]	; 0x30
   112f0:	moveq	r2, #5
   112f4:	ldreq	r1, [pc, #3312]	; 11fec <dcngettext@plt+0xffc>
   112f8:	moveq	r4, r3
   112fc:	beq	111a8 <dcngettext@plt+0x1b8>
   11300:	ldrb	r2, [r9, #9]
   11304:	ldr	r3, [sp, #20]
   11308:	eor	r3, r3, #1
   1130c:	ands	r3, r2, r3
   11310:	str	r3, [sp, #44]	; 0x2c
   11314:	bne	120a4 <dcngettext@plt+0x10b4>
   11318:	ldr	r3, [pc, #3280]	; 11ff0 <dcngettext@plt+0x1000>
   1131c:	ldr	r1, [sp, #24]
   11320:	ldr	r3, [r3]
   11324:	cmn	r1, #1
   11328:	mov	r2, r1
   1132c:	moveq	r2, #0
   11330:	str	r2, [sp, #24]
   11334:	cmp	r6, r3
   11338:	add	r2, r5, r6, lsl #2
   1133c:	str	r2, [sp, #64]	; 0x40
   11340:	addeq	r2, r2, #4
   11344:	streq	r2, [sp, #64]	; 0x40
   11348:	ldreq	r2, [pc, #3236]	; 11ff4 <dcngettext@plt+0x1004>
   1134c:	streq	r2, [r5, r3, lsl #2]
   11350:	ldr	r2, [sp, #24]
   11354:	add	r3, r5, r3, lsl #2
   11358:	cmp	r2, #0
   1135c:	movne	r2, #42	; 0x2a
   11360:	moveq	r2, #32
   11364:	str	r3, [sp, #28]
   11368:	uxtb	r3, r2
   1136c:	str	r2, [sp, #100]	; 0x64
   11370:	str	r3, [sp, #96]	; 0x60
   11374:	str	r9, [sp, #24]
   11378:	ldr	r3, [sp, #64]	; 0x40
   1137c:	ldr	r2, [sp, #28]
   11380:	cmp	r3, r2
   11384:	bls	11cec <dcngettext@plt+0xcfc>
   11388:	ldr	r3, [sp, #20]
   1138c:	cmp	r3, #0
   11390:	ldr	r3, [sp, #28]
   11394:	ldr	r5, [r3], #4
   11398:	str	r3, [sp, #28]
   1139c:	beq	117e4 <dcngettext@plt+0x7f4>
   113a0:	ldr	r1, [pc, #3148]	; 11ff4 <dcngettext@plt+0x1004>
   113a4:	mov	r0, r5
   113a8:	bl	10d8c <strcmp@plt>
   113ac:	subs	r3, r0, #0
   113b0:	str	r3, [sp, #52]	; 0x34
   113b4:	bne	11a24 <dcngettext@plt+0xa34>
   113b8:	ldr	ip, [sp, #24]
   113bc:	mov	r3, #1
   113c0:	mov	r2, #5
   113c4:	ldr	r1, [pc, #3116]	; 11ff8 <dcngettext@plt+0x1008>
   113c8:	strb	r3, [ip, #4]
   113cc:	bl	10e04 <dcgettext@plt>
   113d0:	ldr	r3, [pc, #3108]	; 11ffc <dcngettext@plt+0x100c>
   113d4:	ldr	fp, [r3]
   113d8:	str	r0, [sp, #68]	; 0x44
   113dc:	add	sl, sp, #192	; 0xc0
   113e0:	mov	r3, #0
   113e4:	mov	r0, #0
   113e8:	mov	r1, #0
   113ec:	str	r3, [sl, #-76]!	; 0xffffffb4
   113f0:	str	r3, [sp, #112]	; 0x70
   113f4:	ldr	r3, [sp, #44]	; 0x2c
   113f8:	strd	r0, [sp, #80]	; 0x50
   113fc:	strd	r0, [sp, #72]	; 0x48
   11400:	strd	r0, [sp, #32]
   11404:	str	r3, [sp, #92]	; 0x5c
   11408:	str	r3, [sp, #88]	; 0x58
   1140c:	mov	r8, #1
   11410:	mov	r9, #0
   11414:	b	11434 <dcngettext@plt+0x444>
   11418:	ldr	r3, [fp]
   1141c:	ands	r3, r3, #48	; 0x30
   11420:	bne	11804 <dcngettext@plt+0x814>
   11424:	adds	r8, r8, #1
   11428:	adc	r9, r9, #0
   1142c:	orrs	r2, r8, r9
   11430:	beq	11dd8 <dcngettext@plt+0xde8>
   11434:	mov	r3, fp
   11438:	mov	r2, #10
   1143c:	mov	r1, sl
   11440:	add	r0, sp, #112	; 0x70
   11444:	bl	10d80 <__getdelim@plt>
   11448:	subs	r4, r0, #0
   1144c:	ble	11804 <dcngettext@plt+0x814>
   11450:	ldr	r3, [sp, #112]	; 0x70
   11454:	ldrb	r2, [r3]
   11458:	cmp	r2, #35	; 0x23
   1145c:	beq	11418 <dcngettext@plt+0x428>
   11460:	add	r2, r3, r4
   11464:	ldrb	r0, [r2, #-1]
   11468:	cmp	r0, #10
   1146c:	subeq	r4, r4, #1
   11470:	cmp	r4, #0
   11474:	movle	r2, r4
   11478:	subgt	r2, r4, #1
   1147c:	ldrb	r0, [r3, r2]
   11480:	cmp	r0, #13
   11484:	subeq	r4, r4, #1
   11488:	cmp	r4, #0
   1148c:	beq	11418 <dcngettext@plt+0x428>
   11490:	mov	r6, #0
   11494:	strb	r6, [r3, r4]
   11498:	ldr	r7, [sp, #112]	; 0x70
   1149c:	ldrb	r2, [r7]
   114a0:	cmp	r2, #32
   114a4:	cmpne	r2, #9
   114a8:	moveq	r1, #1
   114ac:	movne	r1, #0
   114b0:	bne	11ce4 <dcngettext@plt+0xcf4>
   114b4:	mov	r1, r7
   114b8:	ldrb	r2, [r1, #1]!
   114bc:	add	r6, r6, #1
   114c0:	cmp	r2, #9
   114c4:	cmpne	r2, #32
   114c8:	beq	114b8 <dcngettext@plt+0x4c8>
   114cc:	cmp	r2, #92	; 0x5c
   114d0:	addeq	r6, r6, #1
   114d4:	ldreq	r3, [sp, #20]
   114d8:	ldrne	r3, [sp, #44]	; 0x2c
   114dc:	add	r5, r7, r6
   114e0:	mov	r0, r5
   114e4:	mov	r2, #6
   114e8:	ldr	r1, [pc, #2832]	; 12000 <dcngettext@plt+0x1010>
   114ec:	str	r3, [sp, #60]	; 0x3c
   114f0:	bl	10fcc <strncmp@plt>
   114f4:	cmp	r0, #0
   114f8:	bne	11650 <dcngettext@plt+0x660>
   114fc:	add	r2, r6, #6
   11500:	ldrb	r1, [r7, r2]
   11504:	cmp	r1, #32
   11508:	addeq	r2, r6, #7
   1150c:	ldrb	r1, [r7, r2]
   11510:	cmp	r1, #40	; 0x28
   11514:	bne	115e8 <dcngettext@plt+0x5f8>
   11518:	add	r1, r2, #1
   1151c:	subs	r4, r4, r1
   11520:	beq	115e8 <dcngettext@plt+0x5f8>
   11524:	add	r3, r7, r1
   11528:	sub	r4, r4, #1
   1152c:	str	r3, [sp, #56]	; 0x38
   11530:	add	r2, r3, r4
   11534:	b	1154c <dcngettext@plt+0x55c>
   11538:	mov	r5, r2
   1153c:	sub	r2, r2, #1
   11540:	ldrb	r0, [r5]
   11544:	cmp	r0, #41	; 0x29
   11548:	beq	1156c <dcngettext@plt+0x57c>
   1154c:	cmp	r3, r2
   11550:	sub	r4, r2, r3
   11554:	bne	11538 <dcngettext@plt+0x548>
   11558:	ldrb	r3, [r7, r1]
   1155c:	cmp	r3, #41	; 0x29
   11560:	bne	115e8 <dcngettext@plt+0x5f8>
   11564:	ldr	r5, [sp, #56]	; 0x38
   11568:	mov	r4, #0
   1156c:	ldr	r3, [sp, #60]	; 0x3c
   11570:	cmp	r3, #0
   11574:	bne	115d4 <dcngettext@plt+0x5e4>
   11578:	mov	r3, #0
   1157c:	add	r4, r4, #1
   11580:	strb	r3, [r5]
   11584:	ldr	r2, [sp, #56]	; 0x38
   11588:	b	11590 <dcngettext@plt+0x5a0>
   1158c:	add	r4, r4, #1
   11590:	ldrb	r3, [r2, r4]
   11594:	cmp	r3, #9
   11598:	cmpne	r3, #32
   1159c:	beq	1158c <dcngettext@plt+0x59c>
   115a0:	cmp	r3, #61	; 0x3d
   115a4:	bne	115e8 <dcngettext@plt+0x5f8>
   115a8:	ldr	r3, [sp, #56]	; 0x38
   115ac:	add	r4, r4, #1
   115b0:	add	r3, r3, r4
   115b4:	mov	r5, r3
   115b8:	ldrb	r2, [r3], #1
   115bc:	cmp	r2, #9
   115c0:	cmpne	r2, #32
   115c4:	beq	115b4 <dcngettext@plt+0x5c4>
   115c8:	mov	r0, r5
   115cc:	bl	122b0 <dcngettext@plt+0x12c0>
   115d0:	b	11710 <dcngettext@plt+0x720>
   115d4:	mov	r1, r4
   115d8:	ldr	r0, [sp, #56]	; 0x38
   115dc:	bl	121f4 <dcngettext@plt+0x1204>
   115e0:	cmp	r0, #0
   115e4:	bne	11578 <dcngettext@plt+0x588>
   115e8:	ldr	r3, [sp, #24]
   115ec:	ldrd	r0, [sp, #32]
   115f0:	ldrb	r3, [r3, #7]
   115f4:	adds	r0, r0, #1
   115f8:	adc	r1, r1, #0
   115fc:	cmp	r3, #0
   11600:	strd	r0, [sp, #32]
   11604:	beq	11418 <dcngettext@plt+0x428>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #2544]	; 12004 <dcngettext@plt+0x1014>
   11610:	mov	r0, #0
   11614:	bl	10e04 <dcgettext@plt>
   11618:	ldr	r2, [sp, #68]	; 0x44
   1161c:	mov	r1, #3
   11620:	mov	r4, r0
   11624:	mov	r0, #0
   11628:	bl	17390 <dcngettext@plt+0x63a0>
   1162c:	ldr	r3, [pc, #2508]	; 12000 <dcngettext@plt+0x1010>
   11630:	mov	r1, #0
   11634:	str	r3, [sp, #8]
   11638:	mov	r2, r4
   1163c:	strd	r8, [sp]
   11640:	mov	r3, r0
   11644:	mov	r0, r1
   11648:	bl	10e70 <error@plt>
   1164c:	b	11418 <dcngettext@plt+0x428>
   11650:	ldr	r3, [sp, #24]
   11654:	ldrb	r0, [r7, r6]
   11658:	sub	r1, r4, r6
   1165c:	ldr	r2, [r3, #12]
   11660:	cmp	r0, #92	; 0x5c
   11664:	addeq	r2, r2, #1
   11668:	cmp	r1, r2
   1166c:	bcc	115e8 <dcngettext@plt+0x5f8>
   11670:	ldr	r2, [r3]
   11674:	add	r6, r6, r2
   11678:	ldrb	r2, [r7, r6]
   1167c:	cmp	r2, #32
   11680:	cmpne	r2, #9
   11684:	movne	r2, #1
   11688:	moveq	r2, #0
   1168c:	bne	115e8 <dcngettext@plt+0x5f8>
   11690:	strb	r2, [r7, r6]
   11694:	mov	r0, r5
   11698:	bl	122b0 <dcngettext@plt+0x12c0>
   1169c:	cmp	r0, #0
   116a0:	beq	115e8 <dcngettext@plt+0x5f8>
   116a4:	add	r1, r6, #1
   116a8:	sub	r2, r4, r1
   116ac:	cmp	r2, #1
   116b0:	beq	116cc <dcngettext@plt+0x6dc>
   116b4:	ldrb	r2, [r7, r1]
   116b8:	cmp	r2, #32
   116bc:	cmpne	r2, #42	; 0x2a
   116c0:	movne	r2, #1
   116c4:	moveq	r2, #0
   116c8:	beq	11d44 <dcngettext@plt+0xd54>
   116cc:	ldr	r3, [pc, #2296]	; 11fcc <dcngettext@plt+0xfdc>
   116d0:	ldr	r2, [r3, #4]
   116d4:	cmp	r2, #0
   116d8:	movne	r2, #1
   116dc:	ldrne	r3, [pc, #2280]	; 11fcc <dcngettext@plt+0xfdc>
   116e0:	strne	r2, [r3, #4]
   116e4:	beq	115e8 <dcngettext@plt+0x5f8>
   116e8:	ldr	r3, [sp, #60]	; 0x3c
   116ec:	cmp	r3, #0
   116f0:	add	r3, r7, r1
   116f4:	str	r3, [sp, #56]	; 0x38
   116f8:	beq	11718 <dcngettext@plt+0x728>
   116fc:	sub	r1, r4, r1
   11700:	ldr	r0, [sp, #56]	; 0x38
   11704:	bl	121f4 <dcngettext@plt+0x1204>
   11708:	adds	r0, r0, #0
   1170c:	movne	r0, #1
   11710:	cmp	r0, #0
   11714:	beq	115e8 <dcngettext@plt+0x5f8>
   11718:	ldr	r3, [sp, #52]	; 0x34
   1171c:	cmp	r3, #0
   11720:	bne	11738 <dcngettext@plt+0x748>
   11724:	ldr	r1, [pc, #2248]	; 11ff4 <dcngettext@plt+0x1004>
   11728:	ldr	r0, [sp, #56]	; 0x38
   1172c:	bl	10d8c <strcmp@plt>
   11730:	cmp	r0, #0
   11734:	beq	115e8 <dcngettext@plt+0x5f8>
   11738:	ldr	r3, [sp, #24]
   1173c:	ldrb	r3, [r3, #6]
   11740:	cmp	r3, #0
   11744:	ldrne	r7, [sp, #44]	; 0x2c
   11748:	bne	11760 <dcngettext@plt+0x770>
   1174c:	mov	r1, #10
   11750:	ldr	r0, [sp, #56]	; 0x38
   11754:	bl	10ee8 <strchr@plt>
   11758:	adds	r7, r0, #0
   1175c:	movne	r7, #1
   11760:	add	r2, sp, #111	; 0x6f
   11764:	add	r1, sp, #156	; 0x9c
   11768:	ldr	r0, [sp, #56]	; 0x38
   1176c:	bl	12404 <dcngettext@plt+0x1414>
   11770:	and	r3, r7, #1
   11774:	str	r3, [sp, #60]	; 0x3c
   11778:	subs	r3, r0, #0
   1177c:	str	r3, [sp, #88]	; 0x58
   11780:	ldr	r3, [sp, #24]
   11784:	bne	11a70 <dcngettext@plt+0xa80>
   11788:	ldrd	r0, [sp, #72]	; 0x48
   1178c:	ldrb	r3, [r3, #6]
   11790:	adds	r0, r0, #1
   11794:	adc	r1, r1, #0
   11798:	cmp	r3, #0
   1179c:	strd	r0, [sp, #72]	; 0x48
   117a0:	bne	117d8 <dcngettext@plt+0x7e8>
   117a4:	cmp	r7, #0
   117a8:	bne	11d10 <dcngettext@plt+0xd20>
   117ac:	ldr	r1, [sp, #60]	; 0x3c
   117b0:	ldr	r0, [sp, #56]	; 0x38
   117b4:	bl	1230c <dcngettext@plt+0x131c>
   117b8:	ldr	r1, [pc, #2120]	; 12008 <dcngettext@plt+0x1018>
   117bc:	mov	r2, #5
   117c0:	mov	r0, #0
   117c4:	bl	10e04 <dcgettext@plt>
   117c8:	ldr	r1, [pc, #2108]	; 1200c <dcngettext@plt+0x101c>
   117cc:	mov	r2, r0
   117d0:	mov	r0, #1
   117d4:	bl	10f24 <__printf_chk@plt>
   117d8:	ldr	r3, [sp, #20]
   117dc:	str	r3, [sp, #88]	; 0x58
   117e0:	b	11418 <dcngettext@plt+0x428>
   117e4:	add	r2, sp, #156	; 0x9c
   117e8:	add	r1, sp, #120	; 0x78
   117ec:	mov	r0, r5
   117f0:	bl	12404 <dcngettext@plt+0x1414>
   117f4:	subs	r8, r0, #0
   117f8:	bne	11be0 <dcngettext@plt+0xbf0>
   117fc:	str	r8, [sp, #48]	; 0x30
   11800:	b	11378 <dcngettext@plt+0x388>
   11804:	ldr	r0, [sp, #112]	; 0x70
   11808:	bl	1555c <dcngettext@plt+0x456c>
   1180c:	ldr	r4, [fp]
   11810:	ldr	r3, [sp, #52]	; 0x34
   11814:	ands	r4, r4, #32
   11818:	mov	r0, fp
   1181c:	bne	11b7c <dcngettext@plt+0xb8c>
   11820:	cmp	r3, #0
   11824:	beq	11850 <dcngettext@plt+0x860>
   11828:	bl	153c4 <dcngettext@plt+0x43d4>
   1182c:	cmp	r0, #0
   11830:	beq	11854 <dcngettext@plt+0x864>
   11834:	bl	10ef4 <__errno_location@plt>
   11838:	ldr	r5, [r0]
   1183c:	cmp	r5, #0
   11840:	blt	11854 <dcngettext@plt+0x864>
   11844:	ldrne	r4, [pc, #1988]	; 12010 <dcngettext@plt+0x1020>
   11848:	bne	11ba0 <dcngettext@plt+0xbb0>
   1184c:	b	11b88 <dcngettext@plt+0xb98>
   11850:	bl	10f9c <clearerr_unlocked@plt>
   11854:	ldr	r3, [sp, #88]	; 0x58
   11858:	cmp	r3, #0
   1185c:	beq	11d98 <dcngettext@plt+0xda8>
   11860:	ldr	r3, [sp, #24]
   11864:	ldrb	r3, [r3, #6]
   11868:	cmp	r3, #0
   1186c:	bne	119dc <dcngettext@plt+0x9ec>
   11870:	ldrd	r0, [sp, #32]
   11874:	mov	r2, r0
   11878:	mov	r3, r1
   1187c:	orrs	r3, r2, r3
   11880:	beq	118e0 <dcngettext@plt+0x8f0>
   11884:	mov	r3, #0
   11888:	cmp	r1, r3
   1188c:	mvn	r2, #0
   11890:	cmpeq	r0, r2
   11894:	ldrls	r3, [sp, #32]
   11898:	bls	118b0 <dcngettext@plt+0x8c0>
   1189c:	ldr	r2, [pc, #1904]	; 12014 <dcngettext@plt+0x1024>
   118a0:	mov	r3, #0
   118a4:	bl	18914 <dcngettext@plt+0x7924>
   118a8:	add	r3, r2, #999424	; 0xf4000
   118ac:	add	r3, r3, #576	; 0x240
   118b0:	mov	r2, #5
   118b4:	str	r2, [sp]
   118b8:	ldr	r1, [pc, #1880]	; 12018 <dcngettext@plt+0x1028>
   118bc:	ldr	r2, [pc, #1880]	; 1201c <dcngettext@plt+0x102c>
   118c0:	mov	r0, #0
   118c4:	bl	10ff0 <dcngettext@plt>
   118c8:	ldrd	r2, [sp, #32]
   118cc:	mov	r1, #0
   118d0:	strd	r2, [sp]
   118d4:	mov	r2, r0
   118d8:	mov	r0, r1
   118dc:	bl	10e70 <error@plt>
   118e0:	ldrd	r0, [sp, #72]	; 0x48
   118e4:	mov	r2, r0
   118e8:	mov	r3, r1
   118ec:	orrs	r3, r2, r3
   118f0:	beq	11950 <dcngettext@plt+0x960>
   118f4:	mov	r3, #0
   118f8:	cmp	r1, r3
   118fc:	mvn	r2, #0
   11900:	cmpeq	r0, r2
   11904:	ldrls	r3, [sp, #72]	; 0x48
   11908:	bls	11920 <dcngettext@plt+0x930>
   1190c:	ldr	r2, [pc, #1792]	; 12014 <dcngettext@plt+0x1024>
   11910:	mov	r3, #0
   11914:	bl	18914 <dcngettext@plt+0x7924>
   11918:	add	r3, r2, #999424	; 0xf4000
   1191c:	add	r3, r3, #576	; 0x240
   11920:	mov	r2, #5
   11924:	str	r2, [sp]
   11928:	ldr	r1, [pc, #1776]	; 12020 <dcngettext@plt+0x1030>
   1192c:	ldr	r2, [pc, #1776]	; 12024 <dcngettext@plt+0x1034>
   11930:	mov	r0, #0
   11934:	bl	10ff0 <dcngettext@plt>
   11938:	ldrd	r2, [sp, #72]	; 0x48
   1193c:	mov	r1, #0
   11940:	strd	r2, [sp]
   11944:	mov	r2, r0
   11948:	mov	r0, r1
   1194c:	bl	10e70 <error@plt>
   11950:	ldrd	r0, [sp, #80]	; 0x50
   11954:	mov	r2, r0
   11958:	mov	r3, r1
   1195c:	orrs	r3, r2, r3
   11960:	beq	119c0 <dcngettext@plt+0x9d0>
   11964:	mov	r3, #0
   11968:	cmp	r1, r3
   1196c:	mvn	r2, #0
   11970:	cmpeq	r0, r2
   11974:	ldrls	r3, [sp, #80]	; 0x50
   11978:	bls	11990 <dcngettext@plt+0x9a0>
   1197c:	ldr	r2, [pc, #1680]	; 12014 <dcngettext@plt+0x1024>
   11980:	mov	r3, #0
   11984:	bl	18914 <dcngettext@plt+0x7924>
   11988:	add	r3, r2, #999424	; 0xf4000
   1198c:	add	r3, r3, #576	; 0x240
   11990:	mov	r2, #5
   11994:	str	r2, [sp]
   11998:	ldr	r1, [pc, #1672]	; 12028 <dcngettext@plt+0x1038>
   1199c:	ldr	r2, [pc, #1672]	; 1202c <dcngettext@plt+0x103c>
   119a0:	mov	r0, #0
   119a4:	bl	10ff0 <dcngettext@plt>
   119a8:	ldrd	r2, [sp, #80]	; 0x50
   119ac:	mov	r1, #0
   119b0:	strd	r2, [sp]
   119b4:	mov	r2, r0
   119b8:	mov	r0, r1
   119bc:	bl	10e70 <error@plt>
   119c0:	ldr	r3, [sp, #24]
   119c4:	ldrb	r5, [r3, #5]
   119c8:	ldr	r3, [sp, #92]	; 0x5c
   119cc:	eor	r5, r5, #1
   119d0:	orr	r5, r3, r5
   119d4:	ands	r5, r5, #255	; 0xff
   119d8:	beq	11f50 <dcngettext@plt+0xf60>
   119dc:	ldr	r3, [sp, #92]	; 0x5c
   119e0:	cmp	r3, #0
   119e4:	beq	11a1c <dcngettext@plt+0xa2c>
   119e8:	ldrd	r2, [sp, #72]	; 0x48
   119ec:	ldrd	r0, [sp, #80]	; 0x50
   119f0:	orr	r2, r2, r0
   119f4:	orr	r3, r3, r1
   119f8:	orrs	r3, r2, r3
   119fc:	bne	11a1c <dcngettext@plt+0xa2c>
   11a00:	ldr	r3, [sp, #24]
   11a04:	ldrb	r4, [r3, #9]
   11a08:	ldrd	r2, [sp, #32]
   11a0c:	eor	r4, r4, #1
   11a10:	mov	r1, r2
   11a14:	orrs	r3, r1, r3
   11a18:	orreq	r4, r4, #1
   11a1c:	and	r4, r4, #1
   11a20:	b	11bc8 <dcngettext@plt+0xbd8>
   11a24:	ldr	r1, [pc, #1540]	; 12030 <dcngettext@plt+0x1040>
   11a28:	mov	r0, r5
   11a2c:	bl	154c4 <dcngettext@plt+0x44d4>
   11a30:	subs	fp, r0, #0
   11a34:	strne	r5, [sp, #68]	; 0x44
   11a38:	bne	113dc <dcngettext@plt+0x3ec>
   11a3c:	bl	10ef4 <__errno_location@plt>
   11a40:	mov	r2, r5
   11a44:	mov	r1, #3
   11a48:	ldr	r4, [r0]
   11a4c:	mov	r0, fp
   11a50:	bl	17390 <dcngettext@plt+0x63a0>
   11a54:	mov	r1, r4
   11a58:	ldr	r2, [pc, #1456]	; 12010 <dcngettext@plt+0x1020>
   11a5c:	mov	r3, r0
   11a60:	mov	r0, fp
   11a64:	bl	10e70 <error@plt>
   11a68:	ldr	r4, [sp, #44]	; 0x2c
   11a6c:	b	11bc8 <dcngettext@plt+0xbd8>
   11a70:	ldrb	r3, [r3, #5]
   11a74:	cmp	r3, #0
   11a78:	beq	11a88 <dcngettext@plt+0xa98>
   11a7c:	ldrb	r3, [sp, #111]	; 0x6f
   11a80:	cmp	r3, #0
   11a84:	bne	117d8 <dcngettext@plt+0x7e8>
   11a88:	ldr	r3, [sp, #24]
   11a8c:	ldr	r3, [r3]
   11a90:	lsrs	r6, r3, #1
   11a94:	beq	11e14 <dcngettext@plt+0xe24>
   11a98:	bl	10ea0 <__ctype_tolower_loc@plt>
   11a9c:	mov	r4, #0
   11aa0:	mov	r2, r5
   11aa4:	add	r1, sp, #156	; 0x9c
   11aa8:	ldr	r0, [r0]
   11aac:	b	11ae0 <dcngettext@plt+0xaf0>
   11ab0:	ldr	lr, [pc, #1404]	; 12034 <dcngettext@plt+0x1044>
   11ab4:	and	r3, r3, #15
   11ab8:	ldrb	ip, [r2, #1]
   11abc:	add	r3, lr, r3
   11ac0:	ldrb	r3, [r3, #264]	; 0x108
   11ac4:	ldr	ip, [r0, ip, lsl #2]
   11ac8:	cmp	ip, r3
   11acc:	bne	11b00 <dcngettext@plt+0xb10>
   11ad0:	add	r4, r4, #1
   11ad4:	cmp	r6, r4
   11ad8:	add	r2, r2, #2
   11adc:	beq	11e14 <dcngettext@plt+0xe24>
   11ae0:	ldrb	r3, [r1], #1
   11ae4:	ldr	ip, [pc, #1352]	; 12034 <dcngettext@plt+0x1044>
   11ae8:	ldrb	lr, [r5, r4, lsl #1]
   11aec:	add	ip, ip, r3, lsr #4
   11af0:	ldrb	ip, [ip, #264]	; 0x108
   11af4:	ldr	lr, [r0, lr, lsl #2]
   11af8:	cmp	lr, ip
   11afc:	beq	11ab0 <dcngettext@plt+0xac0>
   11b00:	cmp	r6, r4
   11b04:	beq	11e14 <dcngettext@plt+0xe24>
   11b08:	ldr	r3, [sp, #24]
   11b0c:	ldrd	r0, [sp, #80]	; 0x50
   11b10:	ldrb	r3, [r3, #6]
   11b14:	adds	r0, r0, #1
   11b18:	adc	r1, r1, #0
   11b1c:	cmp	r3, #0
   11b20:	strd	r0, [sp, #80]	; 0x50
   11b24:	bne	117d8 <dcngettext@plt+0x7e8>
   11b28:	cmp	r7, #0
   11b2c:	beq	11f28 <dcngettext@plt+0xf38>
   11b30:	ldr	r3, [pc, #1124]	; 11f9c <dcngettext@plt+0xfac>
   11b34:	ldr	r0, [r3]
   11b38:	ldr	r3, [r0, #20]
   11b3c:	ldr	r2, [r0, #24]
   11b40:	cmp	r3, r2
   11b44:	addcc	r1, r3, #1
   11b48:	movcc	r2, #92	; 0x5c
   11b4c:	strcc	r1, [r0, #20]
   11b50:	strbcc	r2, [r3]
   11b54:	bcs	1208c <dcngettext@plt+0x109c>
   11b58:	ldr	r1, [sp, #60]	; 0x3c
   11b5c:	ldr	r0, [sp, #56]	; 0x38
   11b60:	bl	1230c <dcngettext@plt+0x131c>
   11b64:	cmp	r6, r4
   11b68:	beq	11e5c <dcngettext@plt+0xe6c>
   11b6c:	mov	r2, #5
   11b70:	ldr	r1, [pc, #1216]	; 12038 <dcngettext@plt+0x1048>
   11b74:	mov	r0, #0
   11b78:	b	117c4 <dcngettext@plt+0x7d4>
   11b7c:	cmp	r3, #0
   11b80:	beq	11bd8 <dcngettext@plt+0xbe8>
   11b84:	bl	153c4 <dcngettext@plt+0x43d4>
   11b88:	mov	r2, #5
   11b8c:	ldr	r1, [pc, #1192]	; 1203c <dcngettext@plt+0x104c>
   11b90:	mov	r0, #0
   11b94:	bl	10e04 <dcgettext@plt>
   11b98:	mov	r5, #0
   11b9c:	mov	r4, r0
   11ba0:	ldr	r2, [sp, #68]	; 0x44
   11ba4:	mov	r1, #3
   11ba8:	mov	r0, #0
   11bac:	bl	17390 <dcngettext@plt+0x63a0>
   11bb0:	mov	r2, r4
   11bb4:	mov	r1, r5
   11bb8:	mov	r3, r0
   11bbc:	mov	r0, #0
   11bc0:	bl	10e70 <error@plt>
   11bc4:	ldr	r4, [sp, #44]	; 0x2c
   11bc8:	ldr	r3, [sp, #48]	; 0x30
   11bcc:	and	r3, r3, r4
   11bd0:	str	r3, [sp, #48]	; 0x30
   11bd4:	b	11378 <dcngettext@plt+0x388>
   11bd8:	bl	10f9c <clearerr_unlocked@plt>
   11bdc:	b	11b88 <dcngettext@plt+0xb98>
   11be0:	ldr	r3, [pc, #996]	; 11fcc <dcngettext@plt+0xfdc>
   11be4:	ldrb	sl, [r3]
   11be8:	cmp	sl, #10
   11bec:	beq	11ee0 <dcngettext@plt+0xef0>
   11bf0:	ldr	r8, [sp, #20]
   11bf4:	ldr	r3, [sp, #40]	; 0x28
   11bf8:	cmp	r3, #0
   11bfc:	bne	11e78 <dcngettext@plt+0xe88>
   11c00:	ldr	r3, [sp, #24]
   11c04:	ldr	r3, [r3]
   11c08:	lsrs	r3, r3, #1
   11c0c:	beq	11c50 <dcngettext@plt+0xc60>
   11c10:	ldr	r7, [pc, #1064]	; 12040 <dcngettext@plt+0x1050>
   11c14:	add	fp, sp, #120	; 0x78
   11c18:	mov	r4, #0
   11c1c:	mov	r6, #1
   11c20:	ldrb	r2, [fp], #1
   11c24:	mov	r1, r7
   11c28:	mov	r0, r6
   11c2c:	bl	10f24 <__printf_chk@plt>
   11c30:	ldr	r3, [sp, #24]
   11c34:	add	r4, r4, #1
   11c38:	ldr	r3, [r3]
   11c3c:	cmp	r4, r3, lsr #1
   11c40:	bcc	11c20 <dcngettext@plt+0xc30>
   11c44:	ldr	r3, [sp, #40]	; 0x28
   11c48:	cmp	r3, #0
   11c4c:	bne	11cac <dcngettext@plt+0xcbc>
   11c50:	ldr	r3, [pc, #836]	; 11f9c <dcngettext@plt+0xfac>
   11c54:	ldr	r0, [r3]
   11c58:	ldr	r3, [r0, #20]
   11c5c:	ldr	r2, [r0, #24]
   11c60:	cmp	r3, r2
   11c64:	addcc	r1, r3, #1
   11c68:	movcc	r2, #32
   11c6c:	strcc	r1, [r0, #20]
   11c70:	strbcc	r2, [r3]
   11c74:	bcs	11f44 <dcngettext@plt+0xf54>
   11c78:	ldr	r3, [pc, #796]	; 11f9c <dcngettext@plt+0xfac>
   11c7c:	ldr	r0, [r3]
   11c80:	ldr	r2, [r0, #24]
   11c84:	ldr	r3, [r0, #20]
   11c88:	cmp	r3, r2
   11c8c:	addcc	r2, r3, #1
   11c90:	strcc	r2, [r0, #20]
   11c94:	ldrbcc	r2, [sp, #96]	; 0x60
   11c98:	strbcc	r2, [r3]
   11c9c:	bcs	11f38 <dcngettext@plt+0xf48>
   11ca0:	mov	r1, r8
   11ca4:	mov	r0, r5
   11ca8:	bl	1230c <dcngettext@plt+0x131c>
   11cac:	ldr	r3, [pc, #744]	; 11f9c <dcngettext@plt+0xfac>
   11cb0:	ldr	r0, [r3]
   11cb4:	ldr	r3, [r0, #20]
   11cb8:	ldr	r2, [r0, #24]
   11cbc:	cmp	r3, r2
   11cc0:	addcc	r2, r3, #1
   11cc4:	strcc	r2, [r0, #20]
   11cc8:	ldrcc	r8, [sp, #48]	; 0x30
   11ccc:	strbcc	sl, [r3]
   11cd0:	bcc	117fc <dcngettext@plt+0x80c>
   11cd4:	mov	r1, sl
   11cd8:	bl	10f6c <__overflow@plt>
   11cdc:	ldr	r8, [sp, #48]	; 0x30
   11ce0:	b	117fc <dcngettext@plt+0x80c>
   11ce4:	mov	r6, r1
   11ce8:	b	114cc <dcngettext@plt+0x4dc>
   11cec:	ldr	r9, [sp, #24]
   11cf0:	ldrb	r3, [r9, #4]
   11cf4:	cmp	r3, #0
   11cf8:	bne	11d5c <dcngettext@plt+0xd6c>
   11cfc:	ldr	r3, [sp, #48]	; 0x30
   11d00:	eor	r0, r3, #1
   11d04:	uxtb	r0, r0
   11d08:	add	sp, sp, #196	; 0xc4
   11d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d10:	ldr	r3, [pc, #644]	; 11f9c <dcngettext@plt+0xfac>
   11d14:	ldr	r0, [r3]
   11d18:	ldr	r3, [r0, #20]
   11d1c:	ldr	r2, [r0, #24]
   11d20:	cmp	r3, r2
   11d24:	addcc	r1, r3, #1
   11d28:	movcc	r2, #92	; 0x5c
   11d2c:	strcc	r1, [r0, #20]
   11d30:	strbcc	r2, [r3]
   11d34:	bcc	117ac <dcngettext@plt+0x7bc>
   11d38:	mov	r1, #92	; 0x5c
   11d3c:	bl	10f6c <__overflow@plt>
   11d40:	b	117ac <dcngettext@plt+0x7bc>
   11d44:	ldr	r3, [pc, #640]	; 11fcc <dcngettext@plt+0xfdc>
   11d48:	ldr	r0, [r3, #4]
   11d4c:	cmp	r0, #1
   11d50:	strne	r2, [r3, #4]
   11d54:	addne	r1, r6, #2
   11d58:	b	116e8 <dcngettext@plt+0x6f8>
   11d5c:	ldr	r3, [pc, #664]	; 11ffc <dcngettext@plt+0x100c>
   11d60:	ldr	r0, [r3]
   11d64:	bl	153c4 <dcngettext@plt+0x43d4>
   11d68:	cmn	r0, #1
   11d6c:	bne	11cfc <dcngettext@plt+0xd0c>
   11d70:	bl	10ef4 <__errno_location@plt>
   11d74:	mov	r2, #5
   11d78:	ldr	r1, [pc, #632]	; 11ff8 <dcngettext@plt+0x1008>
   11d7c:	ldr	r4, [r0]
   11d80:	mov	r0, #0
   11d84:	bl	10e04 <dcgettext@plt>
   11d88:	mov	r1, r4
   11d8c:	mov	r2, r0
   11d90:	mov	r0, #1
   11d94:	bl	10e70 <error@plt>
   11d98:	mov	r0, r3
   11d9c:	mov	r2, #5
   11da0:	ldr	r1, [pc, #668]	; 12044 <dcngettext@plt+0x1054>
   11da4:	mov	r6, r3
   11da8:	bl	10e04 <dcgettext@plt>
   11dac:	ldr	r2, [sp, #68]	; 0x44
   11db0:	mov	r1, #3
   11db4:	mov	r5, r0
   11db8:	mov	r0, r6
   11dbc:	bl	17390 <dcngettext@plt+0x63a0>
   11dc0:	mov	r2, r5
   11dc4:	mov	r1, r6
   11dc8:	mov	r3, r0
   11dcc:	mov	r0, r6
   11dd0:	bl	10e70 <error@plt>
   11dd4:	b	11a1c <dcngettext@plt+0xa2c>
   11dd8:	mov	r0, r3
   11ddc:	mov	r2, #5
   11de0:	ldr	r1, [pc, #608]	; 12048 <dcngettext@plt+0x1058>
   11de4:	mov	r4, r3
   11de8:	bl	10e04 <dcgettext@plt>
   11dec:	ldr	r2, [sp, #68]	; 0x44
   11df0:	mov	r1, #3
   11df4:	mov	r5, r0
   11df8:	mov	r0, r4
   11dfc:	bl	17390 <dcngettext@plt+0x63a0>
   11e00:	mov	r2, r5
   11e04:	mov	r1, r4
   11e08:	mov	r3, r0
   11e0c:	mov	r0, #1
   11e10:	bl	10e70 <error@plt>
   11e14:	ldr	r3, [sp, #24]
   11e18:	ldrb	r3, [r3, #6]
   11e1c:	cmp	r3, #0
   11e20:	str	r3, [sp, #92]	; 0x5c
   11e24:	bne	117d8 <dcngettext@plt+0x7e8>
   11e28:	ldr	r3, [sp, #24]
   11e2c:	mov	r4, r6
   11e30:	ldrb	r3, [r3, #8]
   11e34:	cmp	r3, #0
   11e38:	str	r3, [sp, #92]	; 0x5c
   11e3c:	bne	117d8 <dcngettext@plt+0x7e8>
   11e40:	cmp	r7, #0
   11e44:	bne	12098 <dcngettext@plt+0x10a8>
   11e48:	ldr	r1, [sp, #92]	; 0x5c
   11e4c:	ldr	r0, [sp, #56]	; 0x38
   11e50:	bl	1230c <dcngettext@plt+0x131c>
   11e54:	ldr	r3, [sp, #88]	; 0x58
   11e58:	str	r3, [sp, #92]	; 0x5c
   11e5c:	ldr	r3, [sp, #24]
   11e60:	ldrb	r0, [r3, #8]
   11e64:	cmp	r0, #0
   11e68:	bne	117d8 <dcngettext@plt+0x7e8>
   11e6c:	mov	r2, #5
   11e70:	ldr	r1, [pc, #468]	; 1204c <dcngettext@plt+0x105c>
   11e74:	b	117c4 <dcngettext@plt+0x7d4>
   11e78:	ldr	r3, [pc, #284]	; 11f9c <dcngettext@plt+0xfac>
   11e7c:	mov	r2, #6
   11e80:	mov	r1, #1
   11e84:	ldr	r3, [r3]
   11e88:	ldr	r0, [pc, #368]	; 12000 <dcngettext@plt+0x1010>
   11e8c:	bl	10de0 <fwrite_unlocked@plt>
   11e90:	ldr	r3, [pc, #260]	; 11f9c <dcngettext@plt+0xfac>
   11e94:	mov	r2, #2
   11e98:	mov	r1, #1
   11e9c:	ldr	r3, [r3]
   11ea0:	ldr	r0, [pc, #424]	; 12050 <dcngettext@plt+0x1060>
   11ea4:	bl	10de0 <fwrite_unlocked@plt>
   11ea8:	mov	r1, r8
   11eac:	mov	r0, r5
   11eb0:	bl	1230c <dcngettext@plt+0x131c>
   11eb4:	ldr	r3, [pc, #224]	; 11f9c <dcngettext@plt+0xfac>
   11eb8:	mov	r2, #4
   11ebc:	mov	r1, #1
   11ec0:	ldr	r3, [r3]
   11ec4:	ldr	r0, [pc, #392]	; 12054 <dcngettext@plt+0x1064>
   11ec8:	bl	10de0 <fwrite_unlocked@plt>
   11ecc:	ldr	r3, [sp, #24]
   11ed0:	ldr	r3, [r3]
   11ed4:	lsrs	r3, r3, #1
   11ed8:	bne	11c10 <dcngettext@plt+0xc20>
   11edc:	b	11cac <dcngettext@plt+0xcbc>
   11ee0:	mov	r1, #92	; 0x5c
   11ee4:	mov	r0, r5
   11ee8:	bl	10ee8 <strchr@plt>
   11eec:	cmp	r0, #0
   11ef0:	beq	12060 <dcngettext@plt+0x1070>
   11ef4:	ldr	r3, [pc, #160]	; 11f9c <dcngettext@plt+0xfac>
   11ef8:	ldr	r0, [r3]
   11efc:	ldr	r3, [r0, #20]
   11f00:	ldr	r2, [r0, #24]
   11f04:	cmp	r3, r2
   11f08:	addcc	r1, r3, #1
   11f0c:	movcc	r2, #92	; 0x5c
   11f10:	strcc	r1, [r0, #20]
   11f14:	strbcc	r2, [r3]
   11f18:	bcc	11bf4 <dcngettext@plt+0xc04>
   11f1c:	mov	r1, #92	; 0x5c
   11f20:	bl	10f6c <__overflow@plt>
   11f24:	b	11bf4 <dcngettext@plt+0xc04>
   11f28:	mov	r1, r7
   11f2c:	ldr	r0, [sp, #56]	; 0x38
   11f30:	bl	1230c <dcngettext@plt+0x131c>
   11f34:	b	11b6c <dcngettext@plt+0xb7c>
   11f38:	ldr	r1, [sp, #100]	; 0x64
   11f3c:	bl	10f6c <__overflow@plt>
   11f40:	b	11ca0 <dcngettext@plt+0xcb0>
   11f44:	mov	r1, #32
   11f48:	bl	10f6c <__overflow@plt>
   11f4c:	b	11c78 <dcngettext@plt+0xc88>
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #252]	; 12058 <dcngettext@plt+0x1068>
   11f58:	mov	r0, r5
   11f5c:	bl	10e04 <dcgettext@plt>
   11f60:	ldr	r2, [sp, #68]	; 0x44
   11f64:	mov	r1, #3
   11f68:	mov	r6, r0
   11f6c:	mov	r0, r5
   11f70:	bl	17390 <dcngettext@plt+0x63a0>
   11f74:	mov	r2, r6
   11f78:	mov	r1, r5
   11f7c:	mov	r3, r0
   11f80:	mov	r0, r5
   11f84:	bl	10e70 <error@plt>
   11f88:	b	11a1c <dcngettext@plt+0xa2c>
   11f8c:	andeq	r8, r1, r0, ror #27
   11f90:	strdeq	r9, [r1], -r8
   11f94:	andeq	r9, r1, r0, asr r2
   11f98:	muleq	r1, r4, r9
   11f9c:	andeq	sl, r2, ip, ror #2
   11fa0:	andeq	r8, r1, r8, asr #22
   11fa4:	andeq	r9, r1, r0, asr #6
   11fa8:	andeq	sl, r2, r4, ror r1
   11fac:	andeq	r0, r0, r1, lsl #2
   11fb0:	andeq	r0, r0, r3, lsl #2
   11fb4:	andeq	r9, r1, r0, lsl r3
   11fb8:	andeq	r9, r1, r0, lsr #6
   11fbc:	andeq	sl, r2, r4, lsl #2
   11fc0:	andeq	r9, r1, r0, lsr r3
   11fc4:	andeq	r8, r1, ip, lsr ip
   11fc8:	andeq	r9, r1, ip, asr #4
   11fcc:	strdeq	sl, [r2], -ip
   11fd0:	andeq	r9, r1, r8, asr #6
   11fd4:	andeq	r9, r1, ip, ror #6
   11fd8:	andeq	r9, r1, r8, lsr #7
   11fdc:	andeq	r9, r1, r4, ror #7
   11fe0:	andeq	r9, r1, r0, lsr r4
   11fe4:	andeq	r9, r1, r8, ror r4
   11fe8:			; <UNDEFINED> instruction: 0x000194b8
   11fec:	strdeq	r9, [r1], -r8
   11ff0:	andeq	sl, r2, r8, asr r1
   11ff4:	andeq	r8, r1, r4, lsr ip
   11ff8:	andeq	r9, r1, r8, ror r5
   11ffc:	andeq	sl, r2, r8, ror #2
   12000:			; <UNDEFINED> instruction: 0x00018cbc
   12004:	andeq	r9, r1, r4, lsr #11
   12008:	ldrdeq	r9, [r1], -r4
   1200c:	andeq	r9, r1, r8, ror #11
   12010:	andeq	r9, r1, r8, ror #16
   12014:	andeq	r4, pc, r0, asr #4
   12018:	andeq	r9, r1, ip, ror #12
   1201c:	andeq	r9, r1, ip, lsr r6
   12020:	andeq	r9, r1, r8, asr #13
   12024:	muleq	r1, r8, r6
   12028:	andeq	r9, r1, r4, lsr #14
   1202c:	strdeq	r9, [r1], -r4
   12030:	andeq	r8, r1, r8, lsr ip
   12034:	andeq	r8, r1, r0, lsl fp
   12038:	strdeq	r9, [r1], -r0
   1203c:	strdeq	r9, [r1], -ip
   12040:	andeq	r9, r1, ip, ror r7
   12044:	andeq	r9, r1, ip, lsl #12
   12048:	andeq	r9, r1, r8, lsl #11
   1204c:	strdeq	r9, [r1], -r8
   12050:	andeq	r9, r1, r0, ror r7
   12054:	andeq	r9, r1, r4, ror r7
   12058:	andeq	r9, r1, r4, asr r7
   1205c:	andeq	r9, r1, r8, lsr r5
   12060:	mov	r1, sl
   12064:	mov	r0, r5
   12068:	bl	10ee8 <strchr@plt>
   1206c:	cmp	r0, #0
   12070:	bne	11ef4 <dcngettext@plt+0xf04>
   12074:	mov	r1, #13
   12078:	mov	r0, r5
   1207c:	bl	10ee8 <strchr@plt>
   12080:	cmp	r0, #0
   12084:	bne	11ef4 <dcngettext@plt+0xf04>
   12088:	b	11bf0 <dcngettext@plt+0xc00>
   1208c:	mov	r1, #92	; 0x5c
   12090:	bl	10f6c <__overflow@plt>
   12094:	b	11b58 <dcngettext@plt+0xb68>
   12098:	ldr	r3, [sp, #88]	; 0x58
   1209c:	str	r3, [sp, #92]	; 0x5c
   120a0:	b	11b30 <dcngettext@plt+0xb40>
   120a4:	ldr	r1, [pc, #-80]	; 1205c <dcngettext@plt+0x106c>
   120a8:	mov	r2, #5
   120ac:	mov	r0, #0
   120b0:	bl	10e04 <dcgettext@plt>
   120b4:	mov	r1, #0
   120b8:	mov	r2, r0
   120bc:	mov	r0, r1
   120c0:	bl	10e70 <error@plt>
   120c4:	mov	r0, #1
   120c8:	bl	12594 <dcngettext@plt+0x15a4>
   120cc:	mov	fp, #0
   120d0:	mov	lr, #0
   120d4:	pop	{r1}		; (ldr r1, [sp], #4)
   120d8:	mov	r2, sp
   120dc:	push	{r2}		; (str r2, [sp, #-4]!)
   120e0:	push	{r0}		; (str r0, [sp, #-4]!)
   120e4:	ldr	ip, [pc, #16]	; 120fc <dcngettext@plt+0x110c>
   120e8:	push	{ip}		; (str ip, [sp, #-4]!)
   120ec:	ldr	r0, [pc, #12]	; 12100 <dcngettext@plt+0x1110>
   120f0:	ldr	r3, [pc, #12]	; 12104 <dcngettext@plt+0x1114>
   120f4:	bl	10e88 <__libc_start_main@plt>
   120f8:	bl	10fd8 <abort@plt>
   120fc:	andeq	r8, r1, r8, ror #21
   12100:	strdeq	r0, [r1], -ip
   12104:	andeq	r8, r1, r8, lsl #21
   12108:	ldr	r3, [pc, #20]	; 12124 <dcngettext@plt+0x1134>
   1210c:	ldr	r2, [pc, #20]	; 12128 <dcngettext@plt+0x1138>
   12110:	add	r3, pc, r3
   12114:	ldr	r2, [r3, r2]
   12118:	cmp	r2, #0
   1211c:	bxeq	lr
   12120:	b	10eac <__gmon_start__@plt>
   12124:	andeq	r7, r1, r8, ror #29
   12128:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1212c:	ldr	r3, [pc, #28]	; 12150 <dcngettext@plt+0x1160>
   12130:	ldr	r0, [pc, #28]	; 12154 <dcngettext@plt+0x1164>
   12134:	sub	r3, r3, r0
   12138:	cmp	r3, #6
   1213c:	bxls	lr
   12140:	ldr	r3, [pc, #16]	; 12158 <dcngettext@plt+0x1168>
   12144:	cmp	r3, #0
   12148:	bxeq	lr
   1214c:	bx	r3
   12150:	andeq	sl, r2, pc, asr #2
   12154:	andeq	sl, r2, ip, asr #2
   12158:	andeq	r0, r0, r0
   1215c:	ldr	r1, [pc, #36]	; 12188 <dcngettext@plt+0x1198>
   12160:	ldr	r0, [pc, #36]	; 1218c <dcngettext@plt+0x119c>
   12164:	sub	r1, r1, r0
   12168:	asr	r1, r1, #2
   1216c:	add	r1, r1, r1, lsr #31
   12170:	asrs	r1, r1, #1
   12174:	bxeq	lr
   12178:	ldr	r3, [pc, #16]	; 12190 <dcngettext@plt+0x11a0>
   1217c:	cmp	r3, #0
   12180:	bxeq	lr
   12184:	bx	r3
   12188:	andeq	sl, r2, ip, asr #2
   1218c:	andeq	sl, r2, ip, asr #2
   12190:	andeq	r0, r0, r0
   12194:	push	{r4, lr}
   12198:	ldr	r4, [pc, #24]	; 121b8 <dcngettext@plt+0x11c8>
   1219c:	ldrb	r3, [r4]
   121a0:	cmp	r3, #0
   121a4:	popne	{r4, pc}
   121a8:	bl	1212c <dcngettext@plt+0x113c>
   121ac:	mov	r3, #1
   121b0:	strb	r3, [r4]
   121b4:	pop	{r4, pc}
   121b8:	andeq	sl, r2, r0, ror r1
   121bc:	ldr	r0, [pc, #40]	; 121ec <dcngettext@plt+0x11fc>
   121c0:	ldr	r3, [r0]
   121c4:	cmp	r3, #0
   121c8:	bne	121d0 <dcngettext@plt+0x11e0>
   121cc:	b	1215c <dcngettext@plt+0x116c>
   121d0:	ldr	r3, [pc, #24]	; 121f0 <dcngettext@plt+0x1200>
   121d4:	cmp	r3, #0
   121d8:	beq	121cc <dcngettext@plt+0x11dc>
   121dc:	push	{r4, lr}
   121e0:	blx	r3
   121e4:	pop	{r4, lr}
   121e8:	b	1215c <dcngettext@plt+0x116c>
   121ec:	andeq	r9, r2, r4, lsl pc
   121f0:	andeq	r0, r0, r0
   121f4:	cmp	r1, #0
   121f8:	bxeq	lr
   121fc:	push	{r4, r5, r6, r7, lr}
   12200:	mov	ip, r0
   12204:	add	lr, r0, #1
   12208:	mov	r3, #0
   1220c:	sub	r4, r1, #1
   12210:	mov	r7, #10
   12214:	mov	r6, #13
   12218:	ldrb	r2, [r0, r3]
   1221c:	cmp	r2, #0
   12220:	beq	12254 <dcngettext@plt+0x1264>
   12224:	cmp	r2, #92	; 0x5c
   12228:	bne	1225c <dcngettext@plt+0x126c>
   1222c:	cmp	r4, r3
   12230:	beq	12254 <dcngettext@plt+0x1264>
   12234:	add	r3, r3, #1
   12238:	ldrb	r2, [r0, r3]
   1223c:	cmp	r2, #110	; 0x6e
   12240:	beq	122a4 <dcngettext@plt+0x12b4>
   12244:	cmp	r2, #114	; 0x72
   12248:	beq	1228c <dcngettext@plt+0x129c>
   1224c:	cmp	r2, #92	; 0x5c
   12250:	beq	12298 <dcngettext@plt+0x12a8>
   12254:	mov	r0, #0
   12258:	pop	{r4, r5, r6, r7, pc}
   1225c:	mov	r5, lr
   12260:	strb	r2, [ip]
   12264:	add	r3, r3, #1
   12268:	cmp	r1, r3
   1226c:	add	lr, lr, #1
   12270:	add	ip, ip, #1
   12274:	bhi	12218 <dcngettext@plt+0x1228>
   12278:	add	r1, r0, r1
   1227c:	cmp	r5, r1
   12280:	movcc	r3, #0
   12284:	strbcc	r3, [r5]
   12288:	pop	{r4, r5, r6, r7, pc}
   1228c:	strb	r6, [ip]
   12290:	mov	r5, lr
   12294:	b	12264 <dcngettext@plt+0x1274>
   12298:	strb	r2, [ip]
   1229c:	mov	r5, lr
   122a0:	b	12264 <dcngettext@plt+0x1274>
   122a4:	strb	r7, [ip]
   122a8:	mov	r5, lr
   122ac:	b	12264 <dcngettext@plt+0x1274>
   122b0:	ldr	r3, [pc, #80]	; 12308 <dcngettext@plt+0x1318>
   122b4:	push	{r4, r5, r6, lr}
   122b8:	mov	r5, r0
   122bc:	ldr	r4, [r3]
   122c0:	cmp	r4, #0
   122c4:	beq	122f8 <dcngettext@plt+0x1308>
   122c8:	bl	10ec4 <__ctype_b_loc@plt>
   122cc:	mov	r3, r5
   122d0:	add	r1, r5, r4
   122d4:	ldr	ip, [r0]
   122d8:	ldrb	r2, [r3], #1
   122dc:	mov	r5, r3
   122e0:	lsl	r2, r2, #1
   122e4:	ldrh	r0, [ip, r2]
   122e8:	ands	r0, r0, #4096	; 0x1000
   122ec:	popeq	{r4, r5, r6, pc}
   122f0:	cmp	r1, r3
   122f4:	bne	122d8 <dcngettext@plt+0x12e8>
   122f8:	ldrb	r0, [r5]
   122fc:	clz	r0, r0
   12300:	lsr	r0, r0, #5
   12304:	pop	{r4, r5, r6, pc}
   12308:	andeq	sl, r2, r4, ror r1
   1230c:	cmp	r1, #0
   12310:	beq	123dc <dcngettext@plt+0x13ec>
   12314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12318:	mov	r4, r0
   1231c:	ldrb	r1, [r0]
   12320:	cmp	r1, #0
   12324:	beq	123f0 <dcngettext@plt+0x1400>
   12328:	ldr	r5, [pc, #196]	; 123f4 <dcngettext@plt+0x1404>
   1232c:	ldr	sl, [pc, #196]	; 123f8 <dcngettext@plt+0x1408>
   12330:	ldr	r9, [pc, #196]	; 123fc <dcngettext@plt+0x140c>
   12334:	ldr	r8, [pc, #196]	; 12400 <dcngettext@plt+0x1410>
   12338:	mov	r7, #2
   1233c:	mov	r6, #1
   12340:	b	12380 <dcngettext@plt+0x1390>
   12344:	cmp	r1, #92	; 0x5c
   12348:	beq	123c4 <dcngettext@plt+0x13d4>
   1234c:	cmp	r1, #10
   12350:	beq	123ac <dcngettext@plt+0x13bc>
   12354:	ldr	r0, [r5]
   12358:	ldr	r3, [r0, #20]
   1235c:	ldr	r2, [r0, #24]
   12360:	add	ip, r3, #1
   12364:	cmp	r3, r2
   12368:	strcc	ip, [r0, #20]
   1236c:	strbcc	r1, [r3]
   12370:	bcs	123e8 <dcngettext@plt+0x13f8>
   12374:	ldrb	r1, [r4, #1]!
   12378:	cmp	r1, #0
   1237c:	beq	123a8 <dcngettext@plt+0x13b8>
   12380:	cmp	r1, #13
   12384:	bne	12344 <dcngettext@plt+0x1354>
   12388:	mov	r1, r6
   1238c:	ldr	r3, [r5]
   12390:	mov	r2, r7
   12394:	mov	r0, sl
   12398:	bl	10de0 <fwrite_unlocked@plt>
   1239c:	ldrb	r1, [r4, #1]!
   123a0:	cmp	r1, #0
   123a4:	bne	12380 <dcngettext@plt+0x1390>
   123a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ac:	ldr	r3, [r5]
   123b0:	mov	r2, r7
   123b4:	mov	r1, r6
   123b8:	mov	r0, r8
   123bc:	bl	10de0 <fwrite_unlocked@plt>
   123c0:	b	12374 <dcngettext@plt+0x1384>
   123c4:	ldr	r3, [r5]
   123c8:	mov	r2, r7
   123cc:	mov	r1, r6
   123d0:	mov	r0, r9
   123d4:	bl	10de0 <fwrite_unlocked@plt>
   123d8:	b	12374 <dcngettext@plt+0x1384>
   123dc:	ldr	r3, [pc, #16]	; 123f4 <dcngettext@plt+0x1404>
   123e0:	ldr	r1, [r3]
   123e4:	b	10d68 <fputs_unlocked@plt>
   123e8:	bl	10f6c <__overflow@plt>
   123ec:	b	12374 <dcngettext@plt+0x1384>
   123f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123f4:	andeq	sl, r2, ip, ror #2
   123f8:	andeq	r8, r1, ip, lsr #24
   123fc:	andeq	r8, r1, r0, lsr ip
   12400:	andeq	r8, r1, r8, lsr #24
   12404:	push	{r4, r5, r6, r7, r8, lr}
   12408:	mov	r4, r1
   1240c:	ldr	r1, [pc, #364]	; 12580 <dcngettext@plt+0x1590>
   12410:	mov	r5, r2
   12414:	mov	r6, r0
   12418:	bl	10d8c <strcmp@plt>
   1241c:	mov	r3, #0
   12420:	strb	r3, [r5]
   12424:	cmp	r0, r3
   12428:	bne	124d4 <dcngettext@plt+0x14e4>
   1242c:	ldr	r1, [pc, #336]	; 12584 <dcngettext@plt+0x1594>
   12430:	ldr	r3, [pc, #336]	; 12588 <dcngettext@plt+0x1598>
   12434:	mov	r2, #1
   12438:	ldr	r5, [r1]
   1243c:	mov	r1, #2
   12440:	mov	r0, r5
   12444:	strb	r2, [r3, #4]
   12448:	bl	15390 <dcngettext@plt+0x43a0>
   1244c:	mov	r1, r4
   12450:	mov	r0, r5
   12454:	bl	12b60 <dcngettext@plt+0x1b70>
   12458:	subs	r4, r0, #0
   1245c:	beq	12468 <dcngettext@plt+0x1478>
   12460:	bl	10ef4 <__errno_location@plt>
   12464:	ldr	r4, [r0]
   12468:	mov	r0, r5
   1246c:	bl	10f9c <clearerr_unlocked@plt>
   12470:	cmp	r4, #0
   12474:	bne	124a4 <dcngettext@plt+0x14b4>
   12478:	mov	r4, #1
   1247c:	mov	r0, r4
   12480:	pop	{r4, r5, r6, r7, r8, pc}
   12484:	bl	10ef4 <__errno_location@plt>
   12488:	ldr	r4, [r0]
   1248c:	mov	r0, r7
   12490:	bl	153c4 <dcngettext@plt+0x43d4>
   12494:	cmp	r0, #0
   12498:	beq	12470 <dcngettext@plt+0x1480>
   1249c:	cmp	r4, #0
   124a0:	beq	12514 <dcngettext@plt+0x1524>
   124a4:	mov	r2, r6
   124a8:	mov	r1, #3
   124ac:	mov	r0, #0
   124b0:	bl	17390 <dcngettext@plt+0x63a0>
   124b4:	mov	r1, r4
   124b8:	ldr	r2, [pc, #204]	; 1258c <dcngettext@plt+0x159c>
   124bc:	mov	r4, #0
   124c0:	mov	r3, r0
   124c4:	mov	r0, #0
   124c8:	bl	10e70 <error@plt>
   124cc:	mov	r0, r4
   124d0:	pop	{r4, r5, r6, r7, r8, pc}
   124d4:	ldr	r1, [pc, #180]	; 12590 <dcngettext@plt+0x15a0>
   124d8:	mov	r0, r6
   124dc:	bl	154c4 <dcngettext@plt+0x44d4>
   124e0:	subs	r7, r0, #0
   124e4:	beq	12520 <dcngettext@plt+0x1530>
   124e8:	mov	r1, #2
   124ec:	bl	15390 <dcngettext@plt+0x43a0>
   124f0:	mov	r1, r4
   124f4:	mov	r0, r7
   124f8:	bl	12b60 <dcngettext@plt+0x1b70>
   124fc:	cmp	r0, #0
   12500:	bne	12484 <dcngettext@plt+0x1494>
   12504:	mov	r0, r7
   12508:	bl	153c4 <dcngettext@plt+0x43d4>
   1250c:	cmp	r0, #0
   12510:	beq	12478 <dcngettext@plt+0x1488>
   12514:	bl	10ef4 <__errno_location@plt>
   12518:	ldr	r4, [r0]
   1251c:	b	12470 <dcngettext@plt+0x1480>
   12520:	ldr	r3, [pc, #96]	; 12588 <dcngettext@plt+0x1598>
   12524:	ldrb	r4, [r3, #5]
   12528:	cmp	r4, #0
   1252c:	beq	12574 <dcngettext@plt+0x1584>
   12530:	bl	10ef4 <__errno_location@plt>
   12534:	ldr	r7, [r0]
   12538:	cmp	r7, #2
   1253c:	moveq	r3, #1
   12540:	strbeq	r3, [r5]
   12544:	beq	1247c <dcngettext@plt+0x148c>
   12548:	mov	r2, r6
   1254c:	mov	r1, #3
   12550:	mov	r0, #0
   12554:	bl	17390 <dcngettext@plt+0x63a0>
   12558:	mov	r1, r7
   1255c:	ldr	r2, [pc, #40]	; 1258c <dcngettext@plt+0x159c>
   12560:	mov	r4, #0
   12564:	mov	r3, r0
   12568:	mov	r0, #0
   1256c:	bl	10e70 <error@plt>
   12570:	b	1247c <dcngettext@plt+0x148c>
   12574:	bl	10ef4 <__errno_location@plt>
   12578:	ldr	r7, [r0]
   1257c:	b	12548 <dcngettext@plt+0x1558>
   12580:	andeq	r8, r1, r4, lsr ip
   12584:	andeq	sl, r2, r8, ror #2
   12588:	andeq	sl, r2, r4, ror r1
   1258c:	andeq	r9, r1, r8, ror #16
   12590:	andeq	r8, r1, r8, lsr ip
   12594:	subs	r5, r0, #0
   12598:	push	{r7, lr}
   1259c:	sub	sp, sp, #56	; 0x38
   125a0:	beq	125dc <dcngettext@plt+0x15ec>
   125a4:	ldr	r3, [pc, #848]	; 128fc <dcngettext@plt+0x190c>
   125a8:	mov	r2, #5
   125ac:	ldr	r1, [pc, #844]	; 12900 <dcngettext@plt+0x1910>
   125b0:	mov	r0, #0
   125b4:	ldr	r4, [r3]
   125b8:	bl	10e04 <dcgettext@plt>
   125bc:	ldr	r3, [pc, #832]	; 12904 <dcngettext@plt+0x1914>
   125c0:	mov	r1, #1
   125c4:	ldr	r3, [r3]
   125c8:	mov	r2, r0
   125cc:	mov	r0, r4
   125d0:	bl	10f3c <__fprintf_chk@plt>
   125d4:	mov	r0, r5
   125d8:	bl	10ed0 <exit@plt>
   125dc:	mov	r2, #5
   125e0:	ldr	r1, [pc, #800]	; 12908 <dcngettext@plt+0x1918>
   125e4:	bl	10e04 <dcgettext@plt>
   125e8:	ldr	r3, [pc, #788]	; 12904 <dcngettext@plt+0x1914>
   125ec:	ldr	r7, [pc, #792]	; 1290c <dcngettext@plt+0x191c>
   125f0:	ldr	r4, [pc, #792]	; 12910 <dcngettext@plt+0x1920>
   125f4:	ldr	r2, [r3]
   125f8:	mov	r1, r0
   125fc:	mov	r0, #1
   12600:	bl	10f24 <__printf_chk@plt>
   12604:	mov	r2, #5
   12608:	ldr	r1, [pc, #772]	; 12914 <dcngettext@plt+0x1924>
   1260c:	mov	r0, r5
   12610:	bl	10e04 <dcgettext@plt>
   12614:	mov	r3, #256	; 0x100
   12618:	ldr	r2, [pc, #760]	; 12918 <dcngettext@plt+0x1928>
   1261c:	mov	r1, r0
   12620:	mov	r0, #1
   12624:	bl	10f24 <__printf_chk@plt>
   12628:	mov	r2, #5
   1262c:	ldr	r1, [pc, #744]	; 1291c <dcngettext@plt+0x192c>
   12630:	mov	r0, r5
   12634:	bl	10e04 <dcgettext@plt>
   12638:	ldr	r1, [r7]
   1263c:	bl	10d68 <fputs_unlocked@plt>
   12640:	mov	r2, #5
   12644:	ldr	r1, [pc, #724]	; 12920 <dcngettext@plt+0x1930>
   12648:	mov	r0, r5
   1264c:	bl	10e04 <dcgettext@plt>
   12650:	ldr	r1, [r7]
   12654:	bl	10d68 <fputs_unlocked@plt>
   12658:	mov	r2, #5
   1265c:	ldr	r1, [pc, #704]	; 12924 <dcngettext@plt+0x1934>
   12660:	mov	r0, r5
   12664:	bl	10e04 <dcgettext@plt>
   12668:	ldr	r1, [r7]
   1266c:	bl	10d68 <fputs_unlocked@plt>
   12670:	mov	r2, #5
   12674:	ldr	r1, [pc, #684]	; 12928 <dcngettext@plt+0x1938>
   12678:	mov	r0, r5
   1267c:	bl	10e04 <dcgettext@plt>
   12680:	ldr	r1, [r7]
   12684:	bl	10d68 <fputs_unlocked@plt>
   12688:	mov	r2, #5
   1268c:	ldr	r1, [pc, #664]	; 1292c <dcngettext@plt+0x193c>
   12690:	mov	r0, r5
   12694:	bl	10e04 <dcgettext@plt>
   12698:	ldr	r1, [r7]
   1269c:	bl	10d68 <fputs_unlocked@plt>
   126a0:	mov	r2, #5
   126a4:	ldr	r1, [pc, #644]	; 12930 <dcngettext@plt+0x1940>
   126a8:	mov	r0, r5
   126ac:	bl	10e04 <dcgettext@plt>
   126b0:	ldr	r1, [r7]
   126b4:	bl	10d68 <fputs_unlocked@plt>
   126b8:	mov	r2, #5
   126bc:	ldr	r1, [pc, #624]	; 12934 <dcngettext@plt+0x1944>
   126c0:	mov	r0, r5
   126c4:	bl	10e04 <dcgettext@plt>
   126c8:	ldr	r1, [r7]
   126cc:	bl	10d68 <fputs_unlocked@plt>
   126d0:	mov	r2, #5
   126d4:	ldr	r1, [pc, #604]	; 12938 <dcngettext@plt+0x1948>
   126d8:	mov	r0, r5
   126dc:	bl	10e04 <dcgettext@plt>
   126e0:	ldr	r1, [r7]
   126e4:	bl	10d68 <fputs_unlocked@plt>
   126e8:	mov	r2, #5
   126ec:	ldr	r1, [pc, #584]	; 1293c <dcngettext@plt+0x194c>
   126f0:	mov	r0, r5
   126f4:	bl	10e04 <dcgettext@plt>
   126f8:	ldr	r1, [r7]
   126fc:	bl	10d68 <fputs_unlocked@plt>
   12700:	mov	r2, #5
   12704:	ldr	r1, [pc, #564]	; 12940 <dcngettext@plt+0x1950>
   12708:	mov	r0, r5
   1270c:	bl	10e04 <dcgettext@plt>
   12710:	ldr	r2, [pc, #556]	; 12944 <dcngettext@plt+0x1954>
   12714:	mov	r1, r0
   12718:	mov	r0, #1
   1271c:	bl	10f24 <__printf_chk@plt>
   12720:	mov	r2, #5
   12724:	ldr	r1, [pc, #540]	; 12948 <dcngettext@plt+0x1958>
   12728:	mov	r0, r5
   1272c:	bl	10e04 <dcgettext@plt>
   12730:	ldr	r1, [r7]
   12734:	bl	10d68 <fputs_unlocked@plt>
   12738:	ldm	r4!, {r0, r1, r2, r3}
   1273c:	mov	lr, sp
   12740:	stmia	lr!, {r0, r1, r2, r3}
   12744:	ldm	r4!, {r0, r1, r2, r3}
   12748:	ldr	ip, [sp]
   1274c:	stmia	lr!, {r0, r1, r2, r3}
   12750:	cmp	ip, #0
   12754:	ldm	r4!, {r0, r1, r2, r3}
   12758:	stmia	lr!, {r0, r1, r2, r3}
   1275c:	ldm	r4, {r0, r1}
   12760:	moveq	r4, sp
   12764:	stm	lr, {r0, r1}
   12768:	beq	12798 <dcngettext@plt+0x17a8>
   1276c:	ldr	r6, [pc, #472]	; 1294c <dcngettext@plt+0x195c>
   12770:	mov	r4, sp
   12774:	b	12784 <dcngettext@plt+0x1794>
   12778:	ldr	ip, [r4, #8]!
   1277c:	cmp	ip, #0
   12780:	beq	12798 <dcngettext@plt+0x17a8>
   12784:	mov	r1, ip
   12788:	mov	r0, r6
   1278c:	bl	10d8c <strcmp@plt>
   12790:	cmp	r0, #0
   12794:	bne	12778 <dcngettext@plt+0x1788>
   12798:	ldr	r4, [r4, #4]
   1279c:	mov	r2, #5
   127a0:	cmp	r4, #0
   127a4:	ldr	r1, [pc, #420]	; 12950 <dcngettext@plt+0x1960>
   127a8:	beq	12850 <dcngettext@plt+0x1860>
   127ac:	mov	r0, #0
   127b0:	bl	10e04 <dcgettext@plt>
   127b4:	ldr	r3, [pc, #408]	; 12954 <dcngettext@plt+0x1964>
   127b8:	ldr	r2, [pc, #408]	; 12958 <dcngettext@plt+0x1968>
   127bc:	mov	r1, r0
   127c0:	mov	r0, #1
   127c4:	bl	10f24 <__printf_chk@plt>
   127c8:	mov	r1, #0
   127cc:	mov	r0, #5
   127d0:	bl	10f78 <setlocale@plt>
   127d4:	cmp	r0, #0
   127d8:	ldreq	r6, [pc, #364]	; 1294c <dcngettext@plt+0x195c>
   127dc:	beq	127f8 <dcngettext@plt+0x1808>
   127e0:	mov	r2, #3
   127e4:	ldr	r1, [pc, #368]	; 1295c <dcngettext@plt+0x196c>
   127e8:	bl	10fcc <strncmp@plt>
   127ec:	ldr	r6, [pc, #344]	; 1294c <dcngettext@plt+0x195c>
   127f0:	cmp	r0, #0
   127f4:	bne	128e0 <dcngettext@plt+0x18f0>
   127f8:	mov	r2, #5
   127fc:	ldr	r1, [pc, #348]	; 12960 <dcngettext@plt+0x1970>
   12800:	mov	r0, #0
   12804:	bl	10e04 <dcgettext@plt>
   12808:	ldr	r3, [pc, #316]	; 1294c <dcngettext@plt+0x195c>
   1280c:	ldr	r2, [pc, #320]	; 12954 <dcngettext@plt+0x1964>
   12810:	mov	r1, r0
   12814:	mov	r0, #1
   12818:	bl	10f24 <__printf_chk@plt>
   1281c:	mov	r2, #5
   12820:	ldr	r1, [pc, #316]	; 12964 <dcngettext@plt+0x1974>
   12824:	mov	r0, #0
   12828:	bl	10e04 <dcgettext@plt>
   1282c:	ldr	r2, [pc, #308]	; 12968 <dcngettext@plt+0x1978>
   12830:	cmp	r4, r6
   12834:	ldr	r3, [pc, #304]	; 1296c <dcngettext@plt+0x197c>
   12838:	movne	r3, r2
   1283c:	mov	r1, r0
   12840:	mov	r2, r4
   12844:	mov	r0, #1
   12848:	bl	10f24 <__printf_chk@plt>
   1284c:	b	125d4 <dcngettext@plt+0x15e4>
   12850:	mov	r0, r4
   12854:	bl	10e04 <dcgettext@plt>
   12858:	ldr	r3, [pc, #244]	; 12954 <dcngettext@plt+0x1964>
   1285c:	ldr	r2, [pc, #244]	; 12958 <dcngettext@plt+0x1968>
   12860:	mov	r1, r0
   12864:	mov	r0, #1
   12868:	bl	10f24 <__printf_chk@plt>
   1286c:	mov	r1, r4
   12870:	mov	r0, #5
   12874:	bl	10f78 <setlocale@plt>
   12878:	cmp	r0, #0
   1287c:	beq	12894 <dcngettext@plt+0x18a4>
   12880:	mov	r2, #3
   12884:	ldr	r1, [pc, #208]	; 1295c <dcngettext@plt+0x196c>
   12888:	bl	10fcc <strncmp@plt>
   1288c:	cmp	r0, #0
   12890:	bne	128d8 <dcngettext@plt+0x18e8>
   12894:	mov	r2, #5
   12898:	ldr	r1, [pc, #192]	; 12960 <dcngettext@plt+0x1970>
   1289c:	mov	r0, #0
   128a0:	bl	10e04 <dcgettext@plt>
   128a4:	ldr	r3, [pc, #160]	; 1294c <dcngettext@plt+0x195c>
   128a8:	ldr	r2, [pc, #164]	; 12954 <dcngettext@plt+0x1964>
   128ac:	mov	r4, r3
   128b0:	mov	r1, r0
   128b4:	mov	r0, #1
   128b8:	bl	10f24 <__printf_chk@plt>
   128bc:	ldr	r1, [pc, #160]	; 12964 <dcngettext@plt+0x1974>
   128c0:	mov	r2, #5
   128c4:	mov	r0, #0
   128c8:	bl	10e04 <dcgettext@plt>
   128cc:	ldr	r3, [pc, #152]	; 1296c <dcngettext@plt+0x197c>
   128d0:	mov	r1, r0
   128d4:	b	12840 <dcngettext@plt+0x1850>
   128d8:	ldr	r6, [pc, #108]	; 1294c <dcngettext@plt+0x195c>
   128dc:	mov	r4, r6
   128e0:	mov	r2, #5
   128e4:	ldr	r1, [pc, #132]	; 12970 <dcngettext@plt+0x1980>
   128e8:	mov	r0, #0
   128ec:	bl	10e04 <dcgettext@plt>
   128f0:	ldr	r1, [r7]
   128f4:	bl	10d68 <fputs_unlocked@plt>
   128f8:	b	127f8 <dcngettext@plt+0x1808>
   128fc:	andeq	sl, r2, r0, ror #2
   12900:	andeq	r8, r1, r8, asr #24
   12904:	andeq	sl, r2, ip, lsl #3
   12908:	andeq	r8, r1, r0, ror ip
   1290c:	andeq	sl, r2, ip, ror #2
   12910:	andeq	r8, r1, r0, lsl fp
   12914:	muleq	r1, r4, ip
   12918:			; <UNDEFINED> instruction: 0x00018cbc
   1291c:	andeq	r8, r1, r4, asr #25
   12920:	strdeq	r8, [r1], -ip
   12924:	andeq	r8, r1, ip, lsr #26
   12928:	andeq	r8, r1, r4, ror sp
   1292c:	andeq	r8, r1, ip, lsr #27
   12930:	andeq	r8, r1, r4, ror #27
   12934:	andeq	r8, r1, r4, ror #28
   12938:	andeq	r9, r1, ip, lsl r0
   1293c:	andeq	r9, r1, ip, asr #32
   12940:	andeq	r9, r1, r4, lsl #1
   12944:	strheq	r9, [r1], -r0
   12948:	strheq	r9, [r1], -ip
   1294c:	andeq	r8, r1, ip, lsr ip
   12950:	andeq	r9, r1, ip, lsl #4
   12954:	andeq	r9, r1, r4, lsr #4
   12958:	andeq	r9, r1, ip, asr #4
   1295c:	andeq	r9, r1, ip, asr r2
   12960:	andeq	r9, r1, r8, lsr #5
   12964:	andeq	r9, r1, r4, asr #5
   12968:	andeq	r8, r1, r0, ror #27
   1296c:	andeq	r9, r1, ip, lsl #15
   12970:	andeq	r9, r1, r0, ror #4
   12974:	ldr	r3, [pc, #4]	; 12980 <dcngettext@plt+0x1990>
   12978:	str	r0, [r3]
   1297c:	bx	lr
   12980:	andeq	sl, r2, r4, lsl #3
   12984:	ldr	r3, [pc, #4]	; 12990 <dcngettext@plt+0x19a0>
   12988:	strb	r0, [r3, #4]
   1298c:	bx	lr
   12990:	andeq	sl, r2, r4, lsl #3
   12994:	ldr	r3, [pc, #192]	; 12a5c <dcngettext@plt+0x1a6c>
   12998:	push	{r4, r5, r6, lr}
   1299c:	sub	sp, sp, #8
   129a0:	ldr	r0, [r3]
   129a4:	bl	180b0 <dcngettext@plt+0x70c0>
   129a8:	cmp	r0, #0
   129ac:	beq	129d0 <dcngettext@plt+0x19e0>
   129b0:	ldr	r4, [pc, #168]	; 12a60 <dcngettext@plt+0x1a70>
   129b4:	ldrb	r3, [r4, #4]
   129b8:	cmp	r3, #0
   129bc:	beq	129ec <dcngettext@plt+0x19fc>
   129c0:	bl	10ef4 <__errno_location@plt>
   129c4:	ldr	r3, [r0]
   129c8:	cmp	r3, #32
   129cc:	bne	129ec <dcngettext@plt+0x19fc>
   129d0:	ldr	r3, [pc, #140]	; 12a64 <dcngettext@plt+0x1a74>
   129d4:	ldr	r0, [r3]
   129d8:	bl	180b0 <dcngettext@plt+0x70c0>
   129dc:	cmp	r0, #0
   129e0:	bne	12a34 <dcngettext@plt+0x1a44>
   129e4:	add	sp, sp, #8
   129e8:	pop	{r4, r5, r6, pc}
   129ec:	mov	r2, #5
   129f0:	ldr	r1, [pc, #112]	; 12a68 <dcngettext@plt+0x1a78>
   129f4:	mov	r0, #0
   129f8:	bl	10e04 <dcgettext@plt>
   129fc:	ldr	r4, [r4]
   12a00:	cmp	r4, #0
   12a04:	mov	r5, r0
   12a08:	beq	12a40 <dcngettext@plt+0x1a50>
   12a0c:	bl	10ef4 <__errno_location@plt>
   12a10:	ldr	r6, [r0]
   12a14:	mov	r0, r4
   12a18:	bl	1737c <dcngettext@plt+0x638c>
   12a1c:	mov	r1, r6
   12a20:	str	r5, [sp]
   12a24:	ldr	r2, [pc, #64]	; 12a6c <dcngettext@plt+0x1a7c>
   12a28:	mov	r3, r0
   12a2c:	mov	r0, #0
   12a30:	bl	10e70 <error@plt>
   12a34:	ldr	r3, [pc, #52]	; 12a70 <dcngettext@plt+0x1a80>
   12a38:	ldr	r0, [r3]
   12a3c:	bl	10dbc <_exit@plt>
   12a40:	bl	10ef4 <__errno_location@plt>
   12a44:	mov	r3, r5
   12a48:	ldr	r2, [pc, #36]	; 12a74 <dcngettext@plt+0x1a84>
   12a4c:	ldr	r1, [r0]
   12a50:	mov	r0, r4
   12a54:	bl	10e70 <error@plt>
   12a58:	b	12a34 <dcngettext@plt+0x1a44>
   12a5c:	andeq	sl, r2, ip, ror #2
   12a60:	andeq	sl, r2, r4, lsl #3
   12a64:	andeq	sl, r2, r0, ror #2
   12a68:	andeq	r9, r1, r8, asr r8
   12a6c:	andeq	r9, r1, r4, ror #16
   12a70:	andeq	sl, r2, r8, lsl #2
   12a74:	andeq	r9, r1, r8, ror #16
   12a78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a7c:	mov	r5, r0
   12a80:	sub	sp, sp, #176	; 0xb0
   12a84:	ldr	r0, [pc, #208]	; 12b5c <dcngettext@plt+0x1b6c>
   12a88:	mov	r9, r1
   12a8c:	mov	r4, r2
   12a90:	mov	r8, r3
   12a94:	bl	18028 <dcngettext@plt+0x7038>
   12a98:	subs	r6, r0, #0
   12a9c:	moveq	r0, #1
   12aa0:	beq	12b10 <dcngettext@plt+0x1b20>
   12aa4:	add	r0, sp, #4
   12aa8:	blx	r4
   12aac:	mov	r7, #1
   12ab0:	mov	sl, #32768	; 0x8000
   12ab4:	mov	r4, #0
   12ab8:	b	12ad4 <dcngettext@plt+0x1ae4>
   12abc:	bl	10fc0 <fread_unlocked@plt>
   12ac0:	add	r4, r4, r0
   12ac4:	cmp	r4, #32768	; 0x8000
   12ac8:	beq	12b18 <dcngettext@plt+0x1b28>
   12acc:	cmp	r0, #0
   12ad0:	beq	12b2c <dcngettext@plt+0x1b3c>
   12ad4:	ldr	ip, [r5]
   12ad8:	rsb	r2, r4, #32768	; 0x8000
   12adc:	tst	ip, #16
   12ae0:	add	r0, r6, r4
   12ae4:	mov	r3, r5
   12ae8:	mov	r1, r7
   12aec:	beq	12abc <dcngettext@plt+0x1acc>
   12af0:	cmp	r4, #0
   12af4:	bne	12b48 <dcngettext@plt+0x1b58>
   12af8:	mov	r1, r9
   12afc:	add	r0, sp, #4
   12b00:	blx	r8
   12b04:	mov	r0, r6
   12b08:	bl	1555c <dcngettext@plt+0x456c>
   12b0c:	mov	r0, #0
   12b10:	add	sp, sp, #176	; 0xb0
   12b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b18:	add	r2, sp, #4
   12b1c:	mov	r1, sl
   12b20:	mov	r0, r6
   12b24:	bl	12cd0 <dcngettext@plt+0x1ce0>
   12b28:	b	12ab4 <dcngettext@plt+0x1ac4>
   12b2c:	ldr	r3, [r5]
   12b30:	tst	r3, #32
   12b34:	beq	12af0 <dcngettext@plt+0x1b00>
   12b38:	mov	r0, r6
   12b3c:	bl	1555c <dcngettext@plt+0x456c>
   12b40:	mov	r0, #1
   12b44:	b	12b10 <dcngettext@plt+0x1b20>
   12b48:	mov	r1, r4
   12b4c:	add	r2, sp, #4
   12b50:	mov	r0, r6
   12b54:	bl	1509c <dcngettext@plt+0x40ac>
   12b58:	b	12af8 <dcngettext@plt+0x1b08>
   12b5c:	andeq	r8, r0, r8, asr #32
   12b60:	ldr	r3, [pc, #4]	; 12b6c <dcngettext@plt+0x1b7c>
   12b64:	ldr	r2, [pc, #4]	; 12b70 <dcngettext@plt+0x1b80>
   12b68:	b	12a78 <dcngettext@plt+0x1a88>
   12b6c:	andeq	r5, r1, ip, asr r0
   12b70:	andeq	r2, r1, r8, lsl #23
   12b74:	ldr	r3, [pc, #4]	; 12b80 <dcngettext@plt+0x1b90>
   12b78:	ldr	r2, [pc, #4]	; 12b84 <dcngettext@plt+0x1b94>
   12b7c:	b	12a78 <dcngettext@plt+0x1a88>
   12b80:	andeq	r5, r1, ip, ror r0
   12b84:	andeq	r2, r1, r0, lsl #24
   12b88:	ldr	r2, [pc, #80]	; 12be0 <dcngettext@plt+0x1bf0>
   12b8c:	ldr	r3, [pc, #80]	; 12be4 <dcngettext@plt+0x1bf4>
   12b90:	push	{r4, r5, lr}
   12b94:	ldr	ip, [pc, #76]	; 12be8 <dcngettext@plt+0x1bf8>
   12b98:	ldr	r5, [pc, #76]	; 12bec <dcngettext@plt+0x1bfc>
   12b9c:	ldr	r4, [pc, #76]	; 12bf0 <dcngettext@plt+0x1c00>
   12ba0:	ldr	lr, [pc, #76]	; 12bf4 <dcngettext@plt+0x1c04>
   12ba4:	ldr	r1, [pc, #76]	; 12bf8 <dcngettext@plt+0x1c08>
   12ba8:	str	r2, [r0]
   12bac:	ldr	r2, [pc, #72]	; 12bfc <dcngettext@plt+0x1c0c>
   12bb0:	str	r3, [r0, #4]
   12bb4:	mov	r3, #0
   12bb8:	str	r5, [r0, #8]
   12bbc:	str	r4, [r0, #12]
   12bc0:	str	lr, [r0, #16]
   12bc4:	str	ip, [r0, #20]
   12bc8:	str	r1, [r0, #24]
   12bcc:	str	r2, [r0, #28]
   12bd0:	str	r3, [r0, #36]	; 0x24
   12bd4:	str	r3, [r0, #32]
   12bd8:	str	r3, [r0, #40]	; 0x28
   12bdc:	pop	{r4, r5, pc}
   12be0:	bvs	28c584 <stdout@@GLIBC_2.4+0x262418>
   12be4:	bllt	19fe600 <stdout@@GLIBC_2.4+0x19d4494>
   12be8:	blls	16ce20 <stdout@@GLIBC_2.4+0x142cb4>
   12bec:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   12bf0:	strbge	pc, [pc, #-1338]	; 126be <dcngettext@plt+0x16ce>	; <UNPREDICTABLE>
   12bf4:	tstpl	lr, pc, ror r2
   12bf8:	svcne	0x0083d9ab
   12bfc:	blpl	ff846068 <stdout@@GLIBC_2.4+0xff81befc>
   12c00:	ldr	r2, [pc, #80]	; 12c58 <dcngettext@plt+0x1c68>
   12c04:	ldr	r3, [pc, #80]	; 12c5c <dcngettext@plt+0x1c6c>
   12c08:	push	{r4, r5, lr}
   12c0c:	ldr	ip, [pc, #76]	; 12c60 <dcngettext@plt+0x1c70>
   12c10:	ldr	r5, [pc, #76]	; 12c64 <dcngettext@plt+0x1c74>
   12c14:	ldr	r4, [pc, #76]	; 12c68 <dcngettext@plt+0x1c78>
   12c18:	ldr	lr, [pc, #76]	; 12c6c <dcngettext@plt+0x1c7c>
   12c1c:	ldr	r1, [pc, #76]	; 12c70 <dcngettext@plt+0x1c80>
   12c20:	str	r2, [r0]
   12c24:	ldr	r2, [pc, #72]	; 12c74 <dcngettext@plt+0x1c84>
   12c28:	str	r3, [r0, #4]
   12c2c:	mov	r3, #0
   12c30:	str	r5, [r0, #8]
   12c34:	str	r4, [r0, #12]
   12c38:	str	lr, [r0, #16]
   12c3c:	str	ip, [r0, #20]
   12c40:	str	r1, [r0, #24]
   12c44:	str	r2, [r0, #28]
   12c48:	str	r3, [r0, #36]	; 0x24
   12c4c:	str	r3, [r0, #32]
   12c50:	str	r3, [r0, #40]	; 0x28
   12c54:	pop	{r4, r5, pc}
   12c58:	ldrdgt	r9, [r5, -r8]
   12c5c:	ldrbtcc	sp, [ip], -r7, lsl #10
   12c60:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   12c64:	rsbscc	sp, r0, r7, lsl sp
   12c68:			; <UNDEFINED> instruction: 0xf70e5939
   12c6c:			; <UNDEFINED> instruction: 0xffc00b31
   12c70:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   12c74:	cdplt	15, 15, cr4, cr10, cr4, {5}
   12c78:	push	{lr}		; (str lr, [sp, #-4]!)
   12c7c:	sub	r2, r0, #4
   12c80:	add	lr, r0, #28
   12c84:	mov	ip, r1
   12c88:	ldr	r3, [r2, #4]!
   12c8c:	rev	r3, r3
   12c90:	cmp	r2, lr
   12c94:	str	r3, [ip], #4
   12c98:	bne	12c88 <dcngettext@plt+0x1c98>
   12c9c:	mov	r0, r1
   12ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ca4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ca8:	sub	r2, r0, #4
   12cac:	add	lr, r0, #24
   12cb0:	mov	ip, r1
   12cb4:	ldr	r3, [r2, #4]!
   12cb8:	rev	r3, r3
   12cbc:	cmp	r2, lr
   12cc0:	str	r3, [ip], #4
   12cc4:	bne	12cb4 <dcngettext@plt+0x1cc4>
   12cc8:	mov	r0, r1
   12ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   12cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cd4:	sub	sp, sp, #188	; 0xbc
   12cd8:	ldr	r3, [r2, #32]
   12cdc:	mov	lr, r2
   12ce0:	str	r2, [sp, #116]	; 0x74
   12ce4:	bic	ip, r1, #3
   12ce8:	ldr	r2, [r2, #36]	; 0x24
   12cec:	add	r3, r1, r3
   12cf0:	add	ip, r0, ip
   12cf4:	cmp	r1, r3
   12cf8:	addhi	r2, r2, #1
   12cfc:	cmp	r0, ip
   12d00:	str	r2, [lr, #36]	; 0x24
   12d04:	str	r3, [lr, #32]
   12d08:	str	ip, [sp, #112]	; 0x70
   12d0c:	ldr	r9, [lr]
   12d10:	ldmib	lr, {r8, sl}
   12d14:	ldr	r6, [lr, #12]
   12d18:	ldr	fp, [lr, #16]
   12d1c:	ldr	r2, [lr, #20]
   12d20:	ldr	r7, [lr, #24]
   12d24:	ldr	r3, [lr, #28]
   12d28:	bcs	14fb0 <dcngettext@plt+0x3fc0>
   12d2c:	str	r0, [sp, #76]	; 0x4c
   12d30:	mov	r5, r8
   12d34:	mov	ip, r6
   12d38:	mov	r1, r2
   12d3c:	mov	r0, r3
   12d40:	str	r3, [sp, #108]	; 0x6c
   12d44:	str	r7, [sp, #104]	; 0x68
   12d48:	str	r2, [sp, #100]	; 0x64
   12d4c:	str	fp, [sp, #96]	; 0x60
   12d50:	str	r6, [sp, #92]	; 0x5c
   12d54:	str	sl, [sp, #88]	; 0x58
   12d58:	str	r8, [sp, #84]	; 0x54
   12d5c:	str	r9, [sp, #80]	; 0x50
   12d60:	ldr	r3, [sp, #76]	; 0x4c
   12d64:	add	lr, sp, #120	; 0x78
   12d68:	sub	r2, r3, #4
   12d6c:	add	r4, r3, #60	; 0x3c
   12d70:	ldr	r3, [r2, #4]!
   12d74:	rev	r3, r3
   12d78:	cmp	r4, r2
   12d7c:	str	r3, [lr], #4
   12d80:	bne	12d70 <dcngettext@plt+0x1d80>
   12d84:	ldr	r2, [sp, #120]	; 0x78
   12d88:	ldr	r4, [pc, #4088]	; 13d88 <dcngettext@plt+0x2d98>
   12d8c:	ror	r3, fp, #11
   12d90:	add	r4, r2, r4
   12d94:	eor	r3, r3, fp, ror #6
   12d98:	eor	lr, r1, r7
   12d9c:	orr	r6, r9, r5
   12da0:	eor	r3, r3, fp, ror #25
   12da4:	ror	r2, r9, #13
   12da8:	add	r0, r4, r0
   12dac:	and	r6, r6, sl
   12db0:	and	r4, r9, r5
   12db4:	and	lr, lr, fp
   12db8:	eor	r2, r2, r9, ror #2
   12dbc:	add	r0, r3, r0
   12dc0:	ldr	r3, [sp, #124]	; 0x7c
   12dc4:	eor	lr, lr, r7
   12dc8:	orr	r4, r6, r4
   12dcc:	eor	r2, r2, r9, ror #22
   12dd0:	add	r0, r0, lr
   12dd4:	add	r2, r2, r4
   12dd8:	add	r3, r3, #1895825408	; 0x71000000
   12ddc:	add	ip, r0, ip
   12de0:	add	r3, r3, #3620864	; 0x374000
   12de4:	add	r0, r2, r0
   12de8:	eor	r4, fp, r1
   12dec:	add	r3, r3, #1168	; 0x490
   12df0:	orr	r8, r0, r9
   12df4:	and	r4, r4, ip
   12df8:	ror	lr, ip, #11
   12dfc:	ror	r2, r0, #13
   12e00:	add	r3, r3, #1
   12e04:	eor	r4, r4, r1
   12e08:	and	r8, r8, r5
   12e0c:	add	r3, r3, r7
   12e10:	eor	lr, lr, ip, ror #6
   12e14:	and	r7, r0, r9
   12e18:	eor	r2, r2, r0, ror #2
   12e1c:	eor	lr, lr, ip, ror #25
   12e20:	eor	r2, r2, r0, ror #22
   12e24:	add	r3, r4, r3
   12e28:	orr	r7, r8, r7
   12e2c:	add	r3, r3, lr
   12e30:	add	r7, r2, r7
   12e34:	add	r6, r3, sl
   12e38:	ldr	r2, [sp, #128]	; 0x80
   12e3c:	add	r3, r7, r3
   12e40:	ldr	r7, [pc, #3908]	; 13d8c <dcngettext@plt+0x2d9c>
   12e44:	eor	lr, ip, fp
   12e48:	add	r7, r2, r7
   12e4c:	orr	r8, r0, r3
   12e50:	and	lr, lr, r6
   12e54:	ror	r4, r6, #11
   12e58:	ror	r2, r3, #13
   12e5c:	eor	lr, lr, fp
   12e60:	and	r8, r8, r9
   12e64:	add	r1, r7, r1
   12e68:	eor	r4, r4, r6, ror #6
   12e6c:	and	r7, r0, r3
   12e70:	eor	r2, r2, r3, ror #2
   12e74:	eor	r4, r4, r6, ror #25
   12e78:	orr	r7, r8, r7
   12e7c:	eor	r2, r2, r3, ror #22
   12e80:	add	r1, lr, r1
   12e84:	add	r1, r1, r4
   12e88:	add	lr, r2, r7
   12e8c:	add	r5, r1, r5
   12e90:	add	lr, lr, r1
   12e94:	ldr	r2, [sp, #132]	; 0x84
   12e98:	ldr	r8, [pc, #3824]	; 13d90 <dcngettext@plt+0x2da0>
   12e9c:	eor	r7, ip, r6
   12ea0:	add	r8, r2, r8
   12ea4:	orr	r1, r3, lr
   12ea8:	and	r7, r7, r5
   12eac:	ror	r4, r5, #11
   12eb0:	ror	r2, lr, #13
   12eb4:	eor	r7, r7, ip
   12eb8:	add	fp, r8, fp
   12ebc:	eor	r4, r4, r5, ror #6
   12ec0:	and	r8, r3, lr
   12ec4:	and	r1, r1, r0
   12ec8:	eor	r2, r2, lr, ror #2
   12ecc:	eor	r4, r4, r5, ror #25
   12ed0:	eor	r2, r2, lr, ror #22
   12ed4:	add	fp, r7, fp
   12ed8:	orr	r1, r1, r8
   12edc:	add	fp, fp, r4
   12ee0:	add	r1, r2, r1
   12ee4:	add	r1, r1, fp
   12ee8:	add	r2, fp, r9
   12eec:	ldr	r7, [sp, #136]	; 0x88
   12ef0:	ldr	sl, [pc, #3740]	; 13d94 <dcngettext@plt+0x2da4>
   12ef4:	eor	r4, r6, r5
   12ef8:	add	sl, r7, sl
   12efc:	orr	r8, lr, r1
   12f00:	and	r4, r4, r2
   12f04:	ror	r9, r2, #11
   12f08:	ror	r7, r1, #13
   12f0c:	eor	r4, r4, r6
   12f10:	add	ip, sl, ip
   12f14:	eor	r9, r9, r2, ror #6
   12f18:	and	sl, lr, r1
   12f1c:	and	r8, r8, r3
   12f20:	eor	r7, r7, r1, ror #2
   12f24:	eor	r9, r9, r2, ror #25
   12f28:	orr	r8, r8, sl
   12f2c:	add	ip, r4, ip
   12f30:	eor	r7, r7, r1, ror #22
   12f34:	add	ip, ip, r9
   12f38:	add	r7, r7, r8
   12f3c:	add	r4, r0, ip
   12f40:	ldr	sl, [pc, #3664]	; 13d98 <dcngettext@plt+0x2da8>
   12f44:	add	ip, r7, ip
   12f48:	ldr	r7, [sp, #140]	; 0x8c
   12f4c:	eor	r0, r5, r2
   12f50:	add	sl, r7, sl
   12f54:	orr	r8, r1, ip
   12f58:	and	r0, r0, r4
   12f5c:	ror	r9, r4, #11
   12f60:	ror	r7, ip, #13
   12f64:	eor	r0, r0, r5
   12f68:	add	r6, sl, r6
   12f6c:	eor	r9, r9, r4, ror #6
   12f70:	and	sl, r1, ip
   12f74:	and	r8, r8, lr
   12f78:	eor	r7, r7, ip, ror #2
   12f7c:	eor	r9, r9, r4, ror #25
   12f80:	orr	r8, r8, sl
   12f84:	eor	r7, r7, ip, ror #22
   12f88:	add	r6, r0, r6
   12f8c:	add	r6, r6, r9
   12f90:	add	r0, r7, r8
   12f94:	add	r0, r0, r6
   12f98:	add	r3, r3, r6
   12f9c:	ldr	r7, [sp, #144]	; 0x90
   12fa0:	ldr	sl, [pc, #3572]	; 13d9c <dcngettext@plt+0x2dac>
   12fa4:	eor	r6, r2, r4
   12fa8:	add	sl, r7, sl
   12fac:	orr	r8, ip, r0
   12fb0:	and	r6, r6, r3
   12fb4:	ror	r9, r3, #11
   12fb8:	ror	r7, r0, #13
   12fbc:	eor	r6, r6, r2
   12fc0:	add	r5, sl, r5
   12fc4:	eor	r9, r9, r3, ror #6
   12fc8:	and	sl, ip, r0
   12fcc:	and	r8, r8, r1
   12fd0:	eor	r7, r7, r0, ror #2
   12fd4:	eor	r9, r9, r3, ror #25
   12fd8:	orr	r8, r8, sl
   12fdc:	eor	r7, r7, r0, ror #22
   12fe0:	add	r5, r6, r5
   12fe4:	add	r5, r5, r9
   12fe8:	add	r6, r7, r8
   12fec:	add	r6, r6, r5
   12ff0:	add	lr, lr, r5
   12ff4:	ldr	r7, [sp, #148]	; 0x94
   12ff8:	ldr	r9, [pc, #3488]	; 13da0 <dcngettext@plt+0x2db0>
   12ffc:	eor	r5, r4, r3
   13000:	add	r9, r7, r9
   13004:	orr	r8, r0, r6
   13008:	and	r5, r5, lr
   1300c:	ror	sl, lr, #11
   13010:	ror	r7, r6, #13
   13014:	and	fp, r0, r6
   13018:	eor	r5, r5, r4
   1301c:	add	r2, r9, r2
   13020:	eor	sl, sl, lr, ror #6
   13024:	and	r8, r8, ip
   13028:	eor	r7, r7, r6, ror #2
   1302c:	eor	sl, sl, lr, ror #25
   13030:	orr	r8, r8, fp
   13034:	add	r2, r5, r2
   13038:	eor	r7, r7, r6, ror #22
   1303c:	add	r2, r2, sl
   13040:	add	r7, r7, r8
   13044:	add	r9, r7, r2
   13048:	add	r1, r1, r2
   1304c:	ldr	r5, [sp, #152]	; 0x98
   13050:	ldr	sl, [pc, #3404]	; 13da4 <dcngettext@plt+0x2db4>
   13054:	eor	r2, r3, lr
   13058:	add	sl, r5, sl
   1305c:	orr	r7, r6, r9
   13060:	and	r2, r2, r1
   13064:	ror	r8, r1, #11
   13068:	ror	r5, r9, #13
   1306c:	and	fp, r6, r9
   13070:	eor	r2, r2, r3
   13074:	add	r4, sl, r4
   13078:	eor	r8, r8, r1, ror #6
   1307c:	and	r7, r7, r0
   13080:	eor	r5, r5, r9, ror #2
   13084:	eor	r8, r8, r1, ror #25
   13088:	orr	r7, r7, fp
   1308c:	add	r4, r2, r4
   13090:	eor	r5, r5, r9, ror #22
   13094:	add	r4, r4, r8
   13098:	add	r5, r5, r7
   1309c:	add	sl, r5, r4
   130a0:	add	ip, ip, r4
   130a4:	ldr	r8, [pc, #3324]	; 13da8 <dcngettext@plt+0x2db8>
   130a8:	ldr	r4, [sp, #156]	; 0x9c
   130ac:	eor	r2, lr, r1
   130b0:	add	r8, r4, r8
   130b4:	orr	r5, r9, sl
   130b8:	and	r2, r2, ip
   130bc:	ror	r7, ip, #11
   130c0:	ror	r4, sl, #13
   130c4:	eor	r2, r2, lr
   130c8:	add	r3, r8, r3
   130cc:	eor	r7, r7, ip, ror #6
   130d0:	and	r8, r9, sl
   130d4:	and	r5, r5, r6
   130d8:	eor	r4, r4, sl, ror #2
   130dc:	eor	r7, r7, ip, ror #25
   130e0:	orr	r5, r5, r8
   130e4:	add	r3, r2, r3
   130e8:	eor	r4, r4, sl, ror #22
   130ec:	add	r3, r3, r7
   130f0:	add	r4, r4, r5
   130f4:	add	fp, r4, r3
   130f8:	add	r0, r0, r3
   130fc:	ldr	r2, [sp, #160]	; 0xa0
   13100:	ldr	r7, [pc, #3236]	; 13dac <dcngettext@plt+0x2dbc>
   13104:	eor	r3, r1, ip
   13108:	add	r7, r2, r7
   1310c:	orr	r4, sl, fp
   13110:	and	r3, r3, r0
   13114:	ror	r5, r0, #11
   13118:	ror	r2, fp, #13
   1311c:	eor	r3, r3, r1
   13120:	add	lr, r7, lr
   13124:	eor	r5, r5, r0, ror #6
   13128:	and	r7, sl, fp
   1312c:	and	r4, r4, r9
   13130:	eor	r2, r2, fp, ror #2
   13134:	eor	r5, r5, r0, ror #25
   13138:	orr	r4, r4, r7
   1313c:	add	lr, r3, lr
   13140:	eor	r2, r2, fp, ror #22
   13144:	add	lr, lr, r5
   13148:	add	r2, r2, r4
   1314c:	add	r6, r6, lr
   13150:	ldr	r7, [pc, #3160]	; 13db0 <dcngettext@plt+0x2dc0>
   13154:	add	lr, r2, lr
   13158:	ldr	r2, [sp, #164]	; 0xa4
   1315c:	eor	r3, ip, r0
   13160:	add	r7, r2, r7
   13164:	orr	r4, fp, lr
   13168:	and	r3, r3, r6
   1316c:	ror	r5, r6, #11
   13170:	ror	r2, lr, #13
   13174:	eor	r3, r3, ip
   13178:	add	r1, r7, r1
   1317c:	eor	r5, r5, r6, ror #6
   13180:	and	r7, fp, lr
   13184:	and	r4, r4, sl
   13188:	eor	r2, r2, lr, ror #2
   1318c:	eor	r5, r5, r6, ror #25
   13190:	orr	r4, r4, r7
   13194:	add	r1, r3, r1
   13198:	eor	r2, r2, lr, ror #22
   1319c:	add	r2, r2, r4
   131a0:	add	r1, r1, r5
   131a4:	add	r5, r9, r1
   131a8:	ldr	r8, [pc, #3076]	; 13db4 <dcngettext@plt+0x2dc4>
   131ac:	add	r1, r2, r1
   131b0:	ldr	r2, [sp, #168]	; 0xa8
   131b4:	eor	r3, r0, r6
   131b8:	add	r8, r2, r8
   131bc:	orr	r4, lr, r1
   131c0:	and	r3, r3, r5
   131c4:	ror	r7, r5, #11
   131c8:	ror	r2, r1, #13
   131cc:	eor	r3, r3, r0
   131d0:	add	ip, r8, ip
   131d4:	eor	r7, r7, r5, ror #6
   131d8:	and	r8, lr, r1
   131dc:	and	r4, r4, fp
   131e0:	eor	r2, r2, r1, ror #2
   131e4:	eor	r7, r7, r5, ror #25
   131e8:	eor	r2, r2, r1, ror #22
   131ec:	add	ip, r3, ip
   131f0:	orr	r4, r4, r8
   131f4:	add	ip, ip, r7
   131f8:	add	r4, r2, r4
   131fc:	ldr	r9, [pc, #2996]	; 13db8 <dcngettext@plt+0x2dc8>
   13200:	add	r2, sl, ip
   13204:	add	ip, r4, ip
   13208:	ldr	r4, [sp, #172]	; 0xac
   1320c:	eor	r3, r6, r5
   13210:	add	r9, r4, r9
   13214:	orr	r8, r1, ip
   13218:	and	r3, r3, r2
   1321c:	ror	r7, r2, #11
   13220:	ror	r4, ip, #13
   13224:	eor	r3, r3, r6
   13228:	add	r0, r9, r0
   1322c:	eor	r7, r7, r2, ror #6
   13230:	and	r9, r1, ip
   13234:	and	r8, r8, lr
   13238:	eor	r4, r4, ip, ror #2
   1323c:	eor	r7, r7, r2, ror #25
   13240:	eor	r4, r4, ip, ror #22
   13244:	add	r0, r3, r0
   13248:	orr	r8, r8, r9
   1324c:	add	r0, r0, r7
   13250:	add	r8, r4, r8
   13254:	add	r3, fp, r0
   13258:	ldr	r7, [pc, #2908]	; 13dbc <dcngettext@plt+0x2dcc>
   1325c:	add	r0, r8, r0
   13260:	ldr	r8, [sp, #176]	; 0xb0
   13264:	eor	r4, r5, r2
   13268:	add	r7, r8, r7
   1326c:	and	r4, r4, r3
   13270:	orr	r9, ip, r0
   13274:	eor	r4, r4, r5
   13278:	ror	r8, r3, #11
   1327c:	add	r6, r7, r6
   13280:	ror	r7, r0, #13
   13284:	eor	r8, r8, r3, ror #6
   13288:	and	r9, r9, r1
   1328c:	eor	r7, r7, r0, ror #2
   13290:	add	r6, r4, r6
   13294:	and	r4, ip, r0
   13298:	eor	r8, r8, r3, ror #25
   1329c:	orr	r9, r9, r4
   132a0:	eor	r7, r7, r0, ror #22
   132a4:	add	r6, r6, r8
   132a8:	add	r7, r7, r9
   132ac:	add	r7, r7, r6
   132b0:	add	lr, lr, r6
   132b4:	ldr	r9, [pc, #2820]	; 13dc0 <dcngettext@plt+0x2dd0>
   132b8:	ldr	r6, [sp, #180]	; 0xb4
   132bc:	eor	r4, r2, r3
   132c0:	add	r9, r6, r9
   132c4:	and	r4, r4, lr
   132c8:	ror	r8, lr, #11
   132cc:	add	r9, r9, r5
   132d0:	eor	r4, r4, r2
   132d4:	eor	r8, r8, lr, ror #6
   132d8:	orr	r5, r0, r7
   132dc:	eor	r8, r8, lr, ror #25
   132e0:	add	r4, r4, r9
   132e4:	add	r4, r4, r8
   132e8:	and	r5, r5, ip
   132ec:	ldr	sl, [sp, #156]	; 0x9c
   132f0:	and	r8, r0, r7
   132f4:	ldr	r9, [sp, #120]	; 0x78
   132f8:	orr	r8, r5, r8
   132fc:	ldr	r5, [sp, #176]	; 0xb0
   13300:	add	r9, r9, sl
   13304:	ror	r6, r7, #13
   13308:	ldr	sl, [sp, #176]	; 0xb0
   1330c:	eor	r6, r6, r7, ror #2
   13310:	eor	r6, r6, r7, ror #22
   13314:	ror	r5, r5, #19
   13318:	eor	r5, r5, sl, ror #17
   1331c:	add	r6, r6, r8
   13320:	ldr	r8, [sp, #124]	; 0x7c
   13324:	eor	r5, r5, sl, lsr #10
   13328:	ldr	sl, [sp, #124]	; 0x7c
   1332c:	ror	r8, r8, #18
   13330:	add	r1, r1, r4
   13334:	eor	r8, r8, sl, ror #7
   13338:	add	r5, r5, r9
   1333c:	eor	r8, r8, sl, lsr #3
   13340:	ldr	sl, [pc, #2684]	; 13dc4 <dcngettext@plt+0x2dd4>
   13344:	add	r6, r6, r4
   13348:	add	r4, r5, r8
   1334c:	eor	r8, r3, lr
   13350:	add	sl, r4, sl
   13354:	and	r8, r8, r1
   13358:	ror	r9, r1, #11
   1335c:	add	sl, sl, r2
   13360:	eor	r8, r8, r3
   13364:	eor	r9, r9, r1, ror #6
   13368:	eor	r9, r9, r1, ror #25
   1336c:	str	r4, [sp, #4]
   13370:	add	r8, r8, sl
   13374:	orr	r4, r7, r6
   13378:	add	r8, r8, r9
   1337c:	and	r4, r4, r0
   13380:	ldr	fp, [sp, #160]	; 0xa0
   13384:	and	r9, r7, r6
   13388:	ldr	sl, [sp, #124]	; 0x7c
   1338c:	orr	r9, r4, r9
   13390:	ldr	r4, [sp, #180]	; 0xb4
   13394:	add	sl, sl, fp
   13398:	ror	r2, r6, #13
   1339c:	ldr	fp, [sp, #180]	; 0xb4
   133a0:	eor	r2, r2, r6, ror #2
   133a4:	eor	r2, r2, r6, ror #22
   133a8:	ror	r4, r4, #19
   133ac:	eor	r4, r4, fp, ror #17
   133b0:	add	r2, r2, r9
   133b4:	ldr	r9, [sp, #128]	; 0x80
   133b8:	eor	r4, r4, fp, lsr #10
   133bc:	ldr	fp, [sp, #128]	; 0x80
   133c0:	ror	r9, r9, #18
   133c4:	add	r4, r4, sl
   133c8:	eor	r9, r9, fp, ror #7
   133cc:	eor	r9, r9, fp, lsr #3
   133d0:	ldr	fp, [pc, #2544]	; 13dc8 <dcngettext@plt+0x2dd8>
   133d4:	add	r2, r2, r8
   133d8:	add	r4, r4, r9
   133dc:	add	ip, ip, r8
   133e0:	eor	r8, lr, r1
   133e4:	add	fp, r4, fp
   133e8:	and	r8, r8, ip
   133ec:	add	fp, fp, r3
   133f0:	eor	r8, r8, lr
   133f4:	ldr	r5, [sp, #164]	; 0xa4
   133f8:	add	r8, r8, fp
   133fc:	ldr	fp, [sp, #128]	; 0x80
   13400:	ror	sl, ip, #11
   13404:	eor	sl, sl, ip, ror #6
   13408:	add	fp, fp, r5
   1340c:	ldr	r5, [sp, #132]	; 0x84
   13410:	orr	r9, r6, r2
   13414:	eor	sl, sl, ip, ror #25
   13418:	add	r8, r8, sl
   1341c:	and	r9, r9, r7
   13420:	and	sl, r6, r2
   13424:	orr	sl, r9, sl
   13428:	ror	r9, r5, #18
   1342c:	ror	r3, r2, #13
   13430:	eor	r9, r9, r5, ror #7
   13434:	ldr	r5, [sp, #4]
   13438:	eor	r3, r3, r2, ror #2
   1343c:	eor	r3, r3, r2, ror #22
   13440:	add	r3, r3, sl
   13444:	ror	sl, r5, #19
   13448:	ldr	r5, [sp, #132]	; 0x84
   1344c:	add	r3, r3, r8
   13450:	add	r0, r0, r8
   13454:	eor	r9, r9, r5, lsr #3
   13458:	ldr	r5, [sp, #4]
   1345c:	add	fp, r9, fp
   13460:	ldr	r9, [pc, #2404]	; 13dcc <dcngettext@plt+0x2ddc>
   13464:	eor	sl, sl, r5, ror #17
   13468:	eor	sl, sl, r5, lsr #10
   1346c:	add	r8, fp, sl
   13470:	mov	sl, r8
   13474:	eor	r8, r1, ip
   13478:	add	r9, sl, r9
   1347c:	and	r8, r8, r0
   13480:	add	lr, r9, lr
   13484:	eor	r8, r8, r1
   13488:	ldr	r5, [sp, #168]	; 0xa8
   1348c:	add	r8, r8, lr
   13490:	ldr	lr, [sp, #132]	; 0x84
   13494:	ror	fp, r0, #11
   13498:	add	lr, lr, r5
   1349c:	eor	fp, fp, r0, ror #6
   134a0:	ldr	r5, [sp, #136]	; 0x88
   134a4:	str	sl, [sp, #36]	; 0x24
   134a8:	eor	fp, fp, r0, ror #25
   134ac:	orr	sl, r2, r3
   134b0:	ror	r9, r3, #13
   134b4:	add	r8, r8, fp
   134b8:	and	sl, sl, r6
   134bc:	and	fp, r2, r3
   134c0:	eor	r9, r9, r3, ror #2
   134c4:	orr	fp, sl, fp
   134c8:	eor	r9, r9, r3, ror #22
   134cc:	ror	sl, r5, #18
   134d0:	add	r9, r9, fp
   134d4:	eor	sl, sl, r5, ror #7
   134d8:	ror	fp, r4, #19
   134dc:	eor	sl, sl, r5, lsr #3
   134e0:	eor	fp, fp, r4, ror #17
   134e4:	add	sl, sl, lr
   134e8:	eor	fp, fp, r4, lsr #10
   134ec:	add	r7, r7, r8
   134f0:	add	r5, r9, r8
   134f4:	ldr	lr, [pc, #2260]	; 13dd0 <dcngettext@plt+0x2de0>
   134f8:	add	r8, sl, fp
   134fc:	mov	fp, r8
   13500:	eor	r8, ip, r0
   13504:	add	lr, fp, lr
   13508:	and	r8, r8, r7
   1350c:	add	r1, lr, r1
   13510:	eor	r8, r8, ip
   13514:	add	r8, r8, r1
   13518:	ror	r1, r5, #13
   1351c:	eor	r1, r1, r5, ror #2
   13520:	mov	r9, r5
   13524:	str	fp, [sp, #40]	; 0x28
   13528:	orr	sl, r3, r5
   1352c:	ror	fp, r7, #11
   13530:	eor	r1, r1, r5, ror #22
   13534:	ldr	lr, [sp, #136]	; 0x88
   13538:	ldr	r5, [sp, #172]	; 0xac
   1353c:	eor	fp, fp, r7, ror #6
   13540:	eor	fp, fp, r7, ror #25
   13544:	add	lr, lr, r5
   13548:	ldr	r5, [sp, #140]	; 0x8c
   1354c:	str	r9, [sp, #12]
   13550:	add	r8, r8, fp
   13554:	and	fp, r3, r9
   13558:	ldr	r9, [sp, #36]	; 0x24
   1355c:	and	sl, sl, r2
   13560:	orr	fp, sl, fp
   13564:	ror	sl, r5, #18
   13568:	eor	sl, sl, r5, ror #7
   1356c:	add	r1, r1, fp
   13570:	ror	fp, r9, #19
   13574:	eor	sl, sl, r5, lsr #3
   13578:	eor	fp, fp, r9, ror #17
   1357c:	eor	fp, fp, r9, lsr #10
   13580:	add	sl, sl, lr
   13584:	add	r1, r1, r8
   13588:	add	r6, r6, r8
   1358c:	add	lr, sl, fp
   13590:	ldr	r8, [pc, #2108]	; 13dd4 <dcngettext@plt+0x2de4>
   13594:	mov	sl, lr
   13598:	eor	lr, r0, r7
   1359c:	str	sl, [sp, #44]	; 0x2c
   135a0:	add	r8, sl, r8
   135a4:	ldr	r5, [sp, #140]	; 0x8c
   135a8:	and	lr, lr, r6
   135ac:	ror	sl, r6, #11
   135b0:	ldr	fp, [sp, #176]	; 0xb0
   135b4:	ldr	r9, [sp, #12]
   135b8:	add	ip, r8, ip
   135bc:	eor	lr, lr, r0
   135c0:	eor	sl, sl, r6, ror #6
   135c4:	eor	sl, sl, r6, ror #25
   135c8:	add	fp, r5, fp
   135cc:	add	lr, lr, ip
   135d0:	ldr	r5, [sp, #144]	; 0x90
   135d4:	add	lr, lr, sl
   135d8:	orr	r8, r9, r1
   135dc:	and	sl, r9, r1
   135e0:	ror	ip, r1, #13
   135e4:	ldr	r9, [sp, #40]	; 0x28
   135e8:	and	r8, r8, r3
   135ec:	eor	ip, ip, r1, ror #2
   135f0:	orr	sl, r8, sl
   135f4:	eor	ip, ip, r1, ror #22
   135f8:	ror	r8, r5, #18
   135fc:	eor	r8, r8, r5, ror #7
   13600:	add	ip, ip, sl
   13604:	ror	sl, r9, #19
   13608:	eor	r8, r8, r5, lsr #3
   1360c:	eor	sl, sl, r9, ror #17
   13610:	eor	sl, sl, r9, lsr #10
   13614:	add	r8, r8, fp
   13618:	ldr	fp, [pc, #1976]	; 13dd8 <dcngettext@plt+0x2de8>
   1361c:	add	ip, ip, lr
   13620:	add	r8, r8, sl
   13624:	ldr	r5, [sp, #12]
   13628:	add	r2, r2, lr
   1362c:	str	r8, [sp, #48]	; 0x30
   13630:	add	fp, r8, fp
   13634:	orr	r8, r1, ip
   13638:	eor	lr, r7, r6
   1363c:	add	r0, fp, r0
   13640:	and	r8, r8, r5
   13644:	ldr	fp, [sp, #180]	; 0xb4
   13648:	ldr	r5, [sp, #144]	; 0x90
   1364c:	and	lr, lr, r2
   13650:	ror	sl, r2, #11
   13654:	eor	lr, lr, r7
   13658:	eor	sl, sl, r2, ror #6
   1365c:	add	fp, r5, fp
   13660:	ldr	r5, [sp, #148]	; 0x94
   13664:	ldr	r9, [sp, #44]	; 0x2c
   13668:	eor	sl, sl, r2, ror #25
   1366c:	add	lr, lr, r0
   13670:	ror	r0, ip, #13
   13674:	add	lr, lr, sl
   13678:	eor	r0, r0, ip, ror #2
   1367c:	and	sl, r1, ip
   13680:	orr	sl, r8, sl
   13684:	eor	r0, r0, ip, ror #22
   13688:	ror	r8, r5, #18
   1368c:	eor	r8, r8, r5, ror #7
   13690:	add	r0, r0, sl
   13694:	ror	sl, r9, #19
   13698:	eor	r8, r8, r5, lsr #3
   1369c:	eor	sl, sl, r9, ror #17
   136a0:	add	r3, r3, lr
   136a4:	ldr	r5, [sp, #152]	; 0x98
   136a8:	add	fp, r8, fp
   136ac:	eor	sl, sl, r9, lsr #10
   136b0:	ldr	r8, [pc, #1828]	; 13ddc <dcngettext@plt+0x2dec>
   136b4:	add	r0, r0, lr
   136b8:	add	sl, fp, sl
   136bc:	eor	lr, r6, r2
   136c0:	add	r8, sl, r8
   136c4:	and	lr, lr, r3
   136c8:	ror	fp, r3, #11
   136cc:	add	r7, r8, r7
   136d0:	eor	lr, lr, r6
   136d4:	eor	fp, fp, r3, ror #6
   136d8:	ror	r8, r5, #18
   136dc:	eor	fp, fp, r3, ror #25
   136e0:	str	sl, [sp, #8]
   136e4:	add	lr, lr, r7
   136e8:	orr	sl, ip, r0
   136ec:	eor	r8, r8, r5, ror #7
   136f0:	add	lr, lr, fp
   136f4:	and	sl, sl, r1
   136f8:	and	fp, ip, r0
   136fc:	eor	r8, r8, r5, lsr #3
   13700:	ldr	r5, [sp, #148]	; 0x94
   13704:	orr	sl, sl, fp
   13708:	ror	r7, r0, #13
   1370c:	ldr	fp, [sp, #48]	; 0x30
   13710:	add	r8, r8, r5
   13714:	eor	r7, r7, r0, ror #2
   13718:	ldr	r5, [sp, #12]
   1371c:	eor	r7, r7, r0, ror #22
   13720:	add	r9, r5, lr
   13724:	add	r7, r7, sl
   13728:	ldr	r5, [sp, #4]
   1372c:	ror	sl, fp, #19
   13730:	eor	sl, sl, fp, ror #17
   13734:	add	r7, r7, lr
   13738:	eor	sl, sl, fp, lsr #10
   1373c:	add	lr, r8, r5
   13740:	add	lr, sl, lr
   13744:	ldr	r8, [pc, #1684]	; 13de0 <dcngettext@plt+0x2df0>
   13748:	mov	sl, lr
   1374c:	eor	lr, r2, r3
   13750:	add	r8, sl, r8
   13754:	and	lr, lr, r9
   13758:	ror	fp, r9, #11
   1375c:	add	r6, r8, r6
   13760:	eor	lr, lr, r2
   13764:	eor	fp, fp, r9, ror #6
   13768:	orr	r8, r0, r7
   1376c:	eor	fp, fp, r9, ror #25
   13770:	add	lr, lr, r6
   13774:	ror	r6, r7, #13
   13778:	add	lr, lr, fp
   1377c:	and	r8, r8, ip
   13780:	and	fp, r0, r7
   13784:	eor	r6, r6, r7, ror #2
   13788:	orr	r8, r8, fp
   1378c:	str	sl, [sp, #12]
   13790:	eor	r6, r6, r7, ror #22
   13794:	ldr	r5, [sp, #156]	; 0x9c
   13798:	add	r6, r6, r8
   1379c:	ldr	r8, [sp, #8]
   137a0:	ror	sl, r5, #18
   137a4:	eor	sl, sl, r5, ror #7
   137a8:	ror	fp, r8, #19
   137ac:	eor	sl, sl, r5, lsr #3
   137b0:	eor	fp, fp, r8, ror #17
   137b4:	ldr	r5, [sp, #152]	; 0x98
   137b8:	add	r8, r1, lr
   137bc:	ldr	r1, [sp, #8]
   137c0:	add	sl, sl, r5
   137c4:	add	sl, sl, r4
   137c8:	eor	fp, fp, r1, lsr #10
   137cc:	add	r6, r6, lr
   137d0:	add	r1, fp, sl
   137d4:	ldr	lr, [pc, #1544]	; 13de4 <dcngettext@plt+0x2df4>
   137d8:	mov	fp, r1
   137dc:	eor	r1, r3, r9
   137e0:	str	fp, [sp, #16]
   137e4:	add	lr, fp, lr
   137e8:	and	r1, r1, r8
   137ec:	ror	fp, r8, #11
   137f0:	eor	r1, r1, r3
   137f4:	add	r2, lr, r2
   137f8:	eor	fp, fp, r8, ror #6
   137fc:	orr	sl, r7, r6
   13800:	eor	fp, fp, r8, ror #25
   13804:	add	r2, r1, r2
   13808:	ror	r1, r6, #13
   1380c:	add	r2, r2, fp
   13810:	and	sl, sl, r0
   13814:	and	fp, r7, r6
   13818:	eor	r1, r1, r6, ror #2
   1381c:	ldr	r5, [sp, #160]	; 0xa0
   13820:	orr	sl, sl, fp
   13824:	eor	r1, r1, r6, ror #22
   13828:	add	r1, r1, sl
   1382c:	ldr	sl, [sp, #12]
   13830:	ror	lr, r5, #18
   13834:	eor	lr, lr, r5, ror #7
   13838:	ror	fp, sl, #19
   1383c:	eor	lr, lr, r5, lsr #3
   13840:	eor	fp, fp, sl, ror #17
   13844:	ldr	r5, [sp, #156]	; 0x9c
   13848:	add	sl, ip, r2
   1384c:	ldr	ip, [sp, #12]
   13850:	add	r1, r1, r2
   13854:	ldr	r2, [sp, #36]	; 0x24
   13858:	add	lr, lr, r5
   1385c:	eor	fp, fp, ip, lsr #10
   13860:	add	lr, lr, r2
   13864:	add	r2, fp, lr
   13868:	ldr	ip, [pc, #1400]	; 13de8 <dcngettext@plt+0x2df8>
   1386c:	mov	lr, r2
   13870:	eor	r2, r9, r8
   13874:	add	ip, lr, ip
   13878:	and	r2, r2, sl
   1387c:	ror	fp, sl, #11
   13880:	eor	r2, r2, r9
   13884:	add	r3, ip, r3
   13888:	eor	fp, fp, sl, ror #6
   1388c:	str	lr, [sp, #64]	; 0x40
   13890:	eor	fp, fp, sl, ror #25
   13894:	orr	lr, r6, r1
   13898:	add	r3, r2, r3
   1389c:	ror	r2, r1, #13
   138a0:	add	r3, r3, fp
   138a4:	and	lr, lr, r7
   138a8:	and	fp, r6, r1
   138ac:	eor	r2, r2, r1, ror #2
   138b0:	orr	lr, lr, fp
   138b4:	eor	r2, r2, r1, ror #22
   138b8:	add	r2, r2, lr
   138bc:	ldr	lr, [sp, #16]
   138c0:	ldr	r5, [sp, #164]	; 0xa4
   138c4:	add	r2, r2, r3
   138c8:	ror	fp, lr, #19
   138cc:	ror	ip, r5, #18
   138d0:	eor	fp, fp, lr, ror #17
   138d4:	add	lr, r0, r3
   138d8:	ldr	r3, [sp, #16]
   138dc:	eor	ip, ip, r5, ror #7
   138e0:	eor	ip, ip, r5, lsr #3
   138e4:	ldr	r5, [sp, #160]	; 0xa0
   138e8:	eor	fp, fp, r3, lsr #10
   138ec:	ldr	r3, [sp, #40]	; 0x28
   138f0:	add	ip, ip, r5
   138f4:	add	r3, ip, r3
   138f8:	add	r0, fp, r3
   138fc:	ldr	ip, [pc, #1256]	; 13dec <dcngettext@plt+0x2dfc>
   13900:	mov	r3, r0
   13904:	eor	r0, r8, sl
   13908:	str	r3, [sp, #20]
   1390c:	add	ip, r3, ip
   13910:	and	r0, r0, lr
   13914:	ror	r3, lr, #11
   13918:	add	ip, ip, r9
   1391c:	eor	r0, r0, r8
   13920:	eor	r9, r3, lr, ror #6
   13924:	orr	fp, r1, r2
   13928:	eor	r9, r9, lr, ror #25
   1392c:	add	r0, r0, ip
   13930:	ror	r3, r2, #13
   13934:	add	r0, r0, r9
   13938:	and	fp, fp, r6
   1393c:	and	r9, r1, r2
   13940:	eor	r3, r3, r2, ror #2
   13944:	ldr	r5, [sp, #168]	; 0xa8
   13948:	orr	fp, fp, r9
   1394c:	eor	r3, r3, r2, ror #22
   13950:	add	r3, r3, fp
   13954:	ldr	fp, [sp, #64]	; 0x40
   13958:	ror	ip, r5, #18
   1395c:	eor	ip, ip, r5, ror #7
   13960:	ror	r9, fp, #19
   13964:	eor	r9, r9, fp, ror #17
   13968:	eor	ip, ip, r5, lsr #3
   1396c:	ldr	r5, [sp, #164]	; 0xa4
   13970:	add	r3, r3, r0
   13974:	add	r7, r7, r0
   13978:	eor	r0, r9, fp, lsr #10
   1397c:	ldr	r9, [sp, #44]	; 0x2c
   13980:	add	ip, ip, r5
   13984:	add	ip, ip, r9
   13988:	ldr	r9, [pc, #1120]	; 13df0 <dcngettext@plt+0x2e00>
   1398c:	add	ip, r0, ip
   13990:	eor	r0, sl, lr
   13994:	str	ip, [sp, #24]
   13998:	add	r9, ip, r9
   1399c:	and	r0, r0, r7
   139a0:	ror	ip, r7, #11
   139a4:	add	r9, r9, r8
   139a8:	eor	r0, r0, sl
   139ac:	eor	r8, ip, r7, ror #6
   139b0:	orr	fp, r2, r3
   139b4:	eor	r8, r8, r7, ror #25
   139b8:	add	r0, r0, r9
   139bc:	ldr	r5, [sp, #172]	; 0xac
   139c0:	add	r0, r0, r8
   139c4:	and	fp, fp, r1
   139c8:	and	r8, r2, r3
   139cc:	orr	fp, fp, r8
   139d0:	ror	ip, r3, #13
   139d4:	ldr	r8, [sp, #20]
   139d8:	eor	ip, ip, r3, ror #2
   139dc:	ror	r9, r5, #18
   139e0:	eor	ip, ip, r3, ror #22
   139e4:	eor	r9, r9, r5, ror #7
   139e8:	add	ip, ip, fp
   139ec:	ror	fp, r8, #19
   139f0:	eor	r9, r9, r5, lsr #3
   139f4:	eor	fp, fp, r8, ror #17
   139f8:	ldr	r5, [sp, #168]	; 0xa8
   139fc:	add	r8, r6, r0
   13a00:	ldr	r6, [sp, #20]
   13a04:	add	ip, ip, r0
   13a08:	ldr	r0, [sp, #48]	; 0x30
   13a0c:	add	r9, r9, r5
   13a10:	eor	fp, fp, r6, lsr #10
   13a14:	add	r9, r9, r0
   13a18:	add	r9, fp, r9
   13a1c:	ldr	r0, [pc, #976]	; 13df4 <dcngettext@plt+0x2e04>
   13a20:	mov	r6, r9
   13a24:	eor	r9, lr, r7
   13a28:	add	r0, r6, r0
   13a2c:	and	r9, r9, r8
   13a30:	ror	fp, r8, #11
   13a34:	add	sl, r0, sl
   13a38:	eor	r9, r9, lr
   13a3c:	eor	fp, fp, r8, ror #6
   13a40:	eor	fp, fp, r8, ror #25
   13a44:	str	r6, [sp, #28]
   13a48:	add	r9, r9, sl
   13a4c:	orr	r6, r3, ip
   13a50:	ror	r0, ip, #13
   13a54:	add	r9, r9, fp
   13a58:	and	r6, r6, r2
   13a5c:	and	fp, r3, ip
   13a60:	eor	r0, r0, ip, ror #2
   13a64:	orr	r6, r6, fp
   13a68:	eor	r0, r0, ip, ror #22
   13a6c:	add	r0, r0, r6
   13a70:	ldr	r6, [sp, #24]
   13a74:	ldr	r5, [sp, #176]	; 0xb0
   13a78:	add	r0, r0, r9
   13a7c:	ror	fp, r6, #19
   13a80:	ror	sl, r5, #18
   13a84:	eor	fp, fp, r6, ror #17
   13a88:	add	r6, r1, r9
   13a8c:	ldr	r1, [sp, #24]
   13a90:	eor	sl, sl, r5, ror #7
   13a94:	eor	sl, sl, r5, lsr #3
   13a98:	ldr	r5, [sp, #172]	; 0xac
   13a9c:	eor	fp, fp, r1, lsr #10
   13aa0:	ldr	r1, [sp, #8]
   13aa4:	add	sl, sl, r5
   13aa8:	add	sl, sl, r1
   13aac:	ldr	r9, [pc, #836]	; 13df8 <dcngettext@plt+0x2e08>
   13ab0:	add	sl, fp, sl
   13ab4:	eor	r1, r7, r8
   13ab8:	add	r9, sl, r9
   13abc:	and	r1, r1, r6
   13ac0:	ror	fp, r6, #11
   13ac4:	eor	r1, r1, r7
   13ac8:	add	lr, r9, lr
   13acc:	eor	fp, fp, r6, ror #6
   13ad0:	orr	r9, ip, r0
   13ad4:	eor	fp, fp, r6, ror #25
   13ad8:	add	lr, r1, lr
   13adc:	ror	r1, r0, #13
   13ae0:	add	lr, lr, fp
   13ae4:	and	r9, r9, r3
   13ae8:	and	fp, ip, r0
   13aec:	eor	r1, r1, r0, ror #2
   13af0:	ldr	r5, [sp, #180]	; 0xb4
   13af4:	orr	r9, r9, fp
   13af8:	eor	r1, r1, r0, ror #22
   13afc:	add	r1, r1, r9
   13b00:	ldr	r9, [sp, #28]
   13b04:	str	sl, [sp, #32]
   13b08:	ror	sl, r5, #18
   13b0c:	eor	sl, sl, r5, ror #7
   13b10:	ror	fp, r9, #19
   13b14:	eor	sl, sl, r5, lsr #3
   13b18:	eor	fp, fp, r9, ror #17
   13b1c:	ldr	r5, [sp, #176]	; 0xb0
   13b20:	add	r9, r2, lr
   13b24:	ldr	r2, [sp, #28]
   13b28:	add	r1, r1, lr
   13b2c:	ldr	lr, [sp, #12]
   13b30:	add	sl, sl, r5
   13b34:	eor	fp, fp, r2, lsr #10
   13b38:	add	sl, sl, lr
   13b3c:	add	lr, fp, sl
   13b40:	ldr	r2, [pc, #692]	; 13dfc <dcngettext@plt+0x2e0c>
   13b44:	mov	sl, lr
   13b48:	eor	lr, r8, r6
   13b4c:	add	r2, sl, r2
   13b50:	and	lr, lr, r9
   13b54:	ror	fp, r9, #11
   13b58:	add	r7, r2, r7
   13b5c:	eor	lr, lr, r8
   13b60:	eor	fp, fp, r9, ror #6
   13b64:	str	sl, [sp, #52]	; 0x34
   13b68:	eor	fp, fp, r9, ror #25
   13b6c:	orr	sl, r0, r1
   13b70:	add	lr, lr, r7
   13b74:	ror	r2, r1, #13
   13b78:	add	lr, lr, fp
   13b7c:	and	sl, sl, ip
   13b80:	and	fp, r0, r1
   13b84:	eor	r2, r2, r1, ror #2
   13b88:	ldr	r5, [sp, #4]
   13b8c:	orr	sl, sl, fp
   13b90:	eor	r2, r2, r1, ror #22
   13b94:	add	r2, r2, sl
   13b98:	ldr	sl, [sp, #32]
   13b9c:	ror	r7, r5, #18
   13ba0:	eor	r7, r7, r5, ror #7
   13ba4:	ror	fp, sl, #19
   13ba8:	add	r2, r2, lr
   13bac:	eor	r7, r7, r5, lsr #3
   13bb0:	eor	fp, fp, sl, ror #17
   13bb4:	ldr	r5, [sp, #180]	; 0xb4
   13bb8:	add	sl, r3, lr
   13bbc:	ldr	lr, [sp, #32]
   13bc0:	ldr	r3, [sp, #16]
   13bc4:	add	r7, r7, r5
   13bc8:	eor	fp, fp, lr, lsr #10
   13bcc:	add	r7, r7, r3
   13bd0:	ldr	r3, [pc, #552]	; 13e00 <dcngettext@plt+0x2e10>
   13bd4:	add	r7, fp, r7
   13bd8:	eor	lr, r6, r9
   13bdc:	add	r3, r7, r3
   13be0:	and	lr, lr, sl
   13be4:	ror	fp, sl, #11
   13be8:	add	r8, r3, r8
   13bec:	eor	lr, lr, r6
   13bf0:	eor	fp, fp, sl, ror #6
   13bf4:	orr	r3, r1, r2
   13bf8:	eor	fp, fp, sl, ror #25
   13bfc:	add	lr, lr, r8
   13c00:	add	lr, lr, fp
   13c04:	and	r3, r3, r0
   13c08:	and	fp, r1, r2
   13c0c:	str	r7, [sp, #56]	; 0x38
   13c10:	orr	r3, r3, fp
   13c14:	ror	r8, r2, #13
   13c18:	ldr	fp, [sp, #52]	; 0x34
   13c1c:	ror	r7, r4, #18
   13c20:	ldr	r5, [sp, #4]
   13c24:	eor	r8, r8, r2, ror #2
   13c28:	eor	r7, r7, r4, ror #7
   13c2c:	eor	r7, r7, r4, lsr #3
   13c30:	eor	r8, r8, r2, ror #22
   13c34:	add	r8, r8, r3
   13c38:	add	r5, r7, r5
   13c3c:	ror	r3, fp, #19
   13c40:	ldr	r7, [sp, #64]	; 0x40
   13c44:	eor	r3, r3, fp, ror #17
   13c48:	eor	r3, r3, fp, lsr #10
   13c4c:	add	r5, r5, r7
   13c50:	add	ip, ip, lr
   13c54:	add	r5, r3, r5
   13c58:	ldr	fp, [pc, #420]	; 13e04 <dcngettext@plt+0x2e14>
   13c5c:	add	lr, r8, lr
   13c60:	mov	r8, r5
   13c64:	eor	r5, r9, sl
   13c68:	str	r8, [sp, #4]
   13c6c:	add	fp, r8, fp
   13c70:	and	r5, r5, ip
   13c74:	ror	r8, ip, #11
   13c78:	eor	r5, r5, r9
   13c7c:	add	r6, fp, r6
   13c80:	eor	r8, r8, ip, ror #6
   13c84:	ldr	fp, [sp, #36]	; 0x24
   13c88:	orr	r3, r2, lr
   13c8c:	eor	r8, r8, ip, ror #25
   13c90:	add	r6, r5, r6
   13c94:	ror	r7, lr, #13
   13c98:	add	r6, r6, r8
   13c9c:	and	r3, r3, r1
   13ca0:	and	r8, r2, lr
   13ca4:	eor	r7, r7, lr, ror #2
   13ca8:	orr	r3, r3, r8
   13cac:	eor	r7, r7, lr, ror #22
   13cb0:	add	r7, r7, r3
   13cb4:	ror	r5, fp, #18
   13cb8:	ldr	r3, [sp, #56]	; 0x38
   13cbc:	eor	r5, r5, fp, ror #7
   13cc0:	eor	r5, r5, fp, lsr #3
   13cc4:	add	r4, r5, r4
   13cc8:	ror	fp, r3, #19
   13ccc:	ldr	r5, [sp, #20]
   13cd0:	eor	fp, fp, r3, ror #17
   13cd4:	eor	fp, fp, r3, lsr #10
   13cd8:	add	r4, r4, r5
   13cdc:	add	r0, r0, r6
   13ce0:	add	r4, fp, r4
   13ce4:	ldr	r3, [pc, #284]	; 13e08 <dcngettext@plt+0x2e18>
   13ce8:	mov	r5, r4
   13cec:	eor	r4, sl, ip
   13cf0:	add	r6, r7, r6
   13cf4:	add	r3, r5, r3
   13cf8:	and	r4, r4, r0
   13cfc:	ror	r7, r0, #11
   13d00:	eor	r4, r4, sl
   13d04:	add	r9, r3, r9
   13d08:	eor	r7, r7, r0, ror #6
   13d0c:	ldr	r8, [sp, #40]	; 0x28
   13d10:	orr	r3, lr, r6
   13d14:	eor	r7, r7, r0, ror #25
   13d18:	add	r9, r4, r9
   13d1c:	add	r9, r9, r7
   13d20:	and	r3, r3, r2
   13d24:	and	r7, lr, r6
   13d28:	orr	r3, r3, r7
   13d2c:	ldr	r7, [sp, #4]
   13d30:	ror	r4, r8, #18
   13d34:	eor	r4, r4, r8, ror #7
   13d38:	eor	r4, r4, r8, lsr #3
   13d3c:	ror	r8, r7, #19
   13d40:	ldr	fp, [sp, #36]	; 0x24
   13d44:	str	r5, [sp, #60]	; 0x3c
   13d48:	eor	r8, r8, r7, ror #17
   13d4c:	ror	r5, r6, #13
   13d50:	eor	r8, r8, r7, lsr #10
   13d54:	eor	r5, r5, r6, ror #2
   13d58:	ldr	r7, [sp, #24]
   13d5c:	eor	r5, r5, r6, ror #22
   13d60:	add	r4, r4, fp
   13d64:	add	r1, r1, r9
   13d68:	add	r5, r5, r3
   13d6c:	add	r4, r4, r7
   13d70:	ldr	r3, [pc, #148]	; 13e0c <dcngettext@plt+0x2e1c>
   13d74:	add	r9, r5, r9
   13d78:	add	r4, r8, r4
   13d7c:	eor	r5, ip, r0
   13d80:	and	r5, r5, r1
   13d84:	b	13e80 <dcngettext@plt+0x2e90>
   13d88:	addmi	r2, sl, #152, 30	; 0x260
   13d8c:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   13d90:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   13d94:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   13d98:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   13d9c:	eorsls	r8, pc, #164, 4	; 0x4000000a
   13da0:	blge	72b8fc <stdout@@GLIBC_2.4+0x701790>
   13da4:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   13da8:	addne	r5, r3, #1024	; 0x400
   13dac:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   13db0:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   13db4:	adcsvc	r5, lr, #116, 26	; 0x1d00
   13db8:	ldrshhi	fp, [lr], #30
   13dbc:	blls	ff715860 <stdout@@GLIBC_2.4+0xff6eb6f4>
   13dc0:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   13dc4:	ldr	r6, [fp], #2497	; 0x9c1
   13dc8:	svc	0x00be4786
   13dcc:	svceq	0x00c19dc6
   13dd0:	strcs	sl, [ip], #-460	; 0xfffffe34
   13dd4:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   13dd8:	bmi	1d35088 <stdout@@GLIBC_2.4+0x1d0af1c>
   13ddc:			; <UNDEFINED> instruction: 0x5cb0a9dc
   13de0:	usatvc	r8, #25, sl, asr #17
   13de4:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   13de8:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   13dec:	andlt	r2, r3, r8, asr #15
   13df0:	svclt	0x00597fc7
   13df4:			; <UNDEFINED> instruction: 0xc6e00bf3
   13df8:	strle	r9, [r7, #327]!	; 0x147
   13dfc:			; <UNDEFINED> instruction: 0x06ca6351
   13e00:	strtne	r2, [r9], #-2407	; 0xfffff699
   13e04:	ldrcs	r0, [r7, r5, lsl #21]!
   13e08:	mrccs	1, 0, r2, cr11, cr8, {1}
   13e0c:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   13e10:	teqpl	r8, #1216	; 0x4c0
   13e14:	strvs	r7, [sl, #-852]	; 0xfffffcac
   13e18:			; <UNDEFINED> instruction: 0x766a0abb
   13e1c:	bichi	ip, r2, lr, lsr #18
   13e20:	rsbsls	r2, r2, #34048	; 0x8500
   13e24:	adcsge	lr, pc, #10551296	; 0xa10000
   13e28:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   13e2c:	subgt	r8, fp, #112, 22	; 0x1c000
   13e30:	strbgt	r5, [ip, -r3, lsr #3]!
   13e34:	orrsle	lr, r2, r9, lsl r8
   13e38:	ldrle	r0, [r9], r4, lsr #12
   13e3c:	vst3.32	{d3,d5,d7}, [lr], r5
   13e40:	rsbne	sl, sl, r0, ror r0
   13e44:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   13e48:	cdpne	12, 3, cr6, cr7, cr8, {0}
   13e4c:	strbcs	r7, [r8, -ip, asr #14]
   13e50:	ldrtcc	fp, [r0], #3253	; 0xcb5
   13e54:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   13e58:	vfnmami.f32	s21, s16, s20
   13e5c:	blpl	fe7467a0 <stdout@@GLIBC_2.4+0xfe71c634>
   13e60:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   13e64:	strvc	r8, [pc], #750	; 13e6c <dcngettext@plt+0x2e7c>
   13e68:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   13e6c:	strbhi	r7, [r8], #2068	; 0x814
   13e70:	sfmhi	f0, 2, [r7], {8}
   13e74:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   13e78:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   13e7c:	mrclt	3, 7, sl, cr9, cr7, {7}
   13e80:	add	r3, r4, r3
   13e84:	ror	r8, r1, #11
   13e88:	add	r3, r3, sl
   13e8c:	eor	r8, r8, r1, ror #6
   13e90:	eor	sl, r5, ip
   13e94:	eor	r8, r8, r1, ror #25
   13e98:	str	r4, [sp, #36]	; 0x24
   13e9c:	add	r3, sl, r3
   13ea0:	orr	r4, r6, r9
   13ea4:	ror	r7, r9, #13
   13ea8:	ldr	sl, [sp, #44]	; 0x2c
   13eac:	add	r3, r3, r8
   13eb0:	and	r4, r4, lr
   13eb4:	and	r8, r6, r9
   13eb8:	eor	r7, r7, r9, ror #2
   13ebc:	orr	r4, r4, r8
   13ec0:	eor	r7, r7, r9, ror #22
   13ec4:	add	r7, r7, r4
   13ec8:	ldr	r4, [sp, #60]	; 0x3c
   13ecc:	ror	r5, sl, #18
   13ed0:	eor	r5, r5, sl, ror #7
   13ed4:	eor	r5, r5, sl, lsr #3
   13ed8:	ror	sl, r4, #19
   13edc:	ldr	r8, [sp, #40]	; 0x28
   13ee0:	eor	sl, sl, r4, ror #17
   13ee4:	eor	sl, sl, r4, lsr #10
   13ee8:	ldr	r4, [sp, #28]
   13eec:	add	r5, r5, r8
   13ef0:	add	r2, r2, r3
   13ef4:	add	r5, r5, r4
   13ef8:	ldr	r4, [pc, #-240]	; 13e10 <dcngettext@plt+0x2e20>
   13efc:	add	r8, sl, r5
   13f00:	eor	r5, r0, r1
   13f04:	add	r3, r7, r3
   13f08:	add	r4, r8, r4
   13f0c:	and	r5, r5, r2
   13f10:	ror	r7, r2, #11
   13f14:	eor	r5, r5, r0
   13f18:	add	ip, r4, ip
   13f1c:	eor	r7, r7, r2, ror #6
   13f20:	orr	r4, r9, r3
   13f24:	eor	r7, r7, r2, ror #25
   13f28:	add	ip, r5, ip
   13f2c:	str	r8, [sp, #68]	; 0x44
   13f30:	ldr	r8, [sp, #48]	; 0x30
   13f34:	add	ip, ip, r7
   13f38:	and	r4, r4, r6
   13f3c:	and	r7, r9, r3
   13f40:	ror	r5, r3, #13
   13f44:	orr	r4, r4, r7
   13f48:	eor	r5, r5, r3, ror #2
   13f4c:	ldr	r7, [sp, #36]	; 0x24
   13f50:	ror	fp, r8, #18
   13f54:	eor	r5, r5, r3, ror #22
   13f58:	ldr	sl, [sp, #44]	; 0x2c
   13f5c:	add	r5, r5, r4
   13f60:	eor	fp, fp, r8, ror #7
   13f64:	add	lr, lr, ip
   13f68:	eor	fp, fp, r8, lsr #3
   13f6c:	add	ip, r5, ip
   13f70:	ror	r4, r7, #19
   13f74:	ldr	r5, [sp, #32]
   13f78:	eor	r4, r4, r7, ror #17
   13f7c:	add	fp, fp, sl
   13f80:	eor	r4, r4, r7, lsr #10
   13f84:	add	fp, fp, r5
   13f88:	ldr	r8, [pc, #-380]	; 13e14 <dcngettext@plt+0x2e24>
   13f8c:	add	sl, r4, fp
   13f90:	eor	r5, r1, r2
   13f94:	add	r8, sl, r8
   13f98:	and	r5, r5, lr
   13f9c:	ror	r7, lr, #11
   13fa0:	eor	r5, r5, r1
   13fa4:	add	r0, r8, r0
   13fa8:	eor	r7, r7, lr, ror #6
   13fac:	orr	r4, r3, ip
   13fb0:	eor	r7, r7, lr, ror #25
   13fb4:	add	r0, r5, r0
   13fb8:	ror	r5, ip, #13
   13fbc:	ldr	fp, [sp, #8]
   13fc0:	add	r0, r0, r7
   13fc4:	and	r4, r4, r9
   13fc8:	and	r7, r3, ip
   13fcc:	eor	r5, r5, ip, ror #2
   13fd0:	orr	r4, r4, r7
   13fd4:	eor	r5, r5, ip, ror #22
   13fd8:	add	r5, r5, r4
   13fdc:	ldr	r4, [sp, #68]	; 0x44
   13fe0:	str	sl, [sp, #40]	; 0x28
   13fe4:	ror	sl, fp, #18
   13fe8:	eor	sl, sl, fp, ror #7
   13fec:	eor	sl, sl, fp, lsr #3
   13ff0:	ror	fp, r4, #19
   13ff4:	ldr	r8, [sp, #48]	; 0x30
   13ff8:	eor	fp, fp, r4, ror #17
   13ffc:	eor	fp, fp, r4, lsr #10
   14000:	ldr	r4, [sp, #52]	; 0x34
   14004:	add	sl, sl, r8
   14008:	add	r6, r6, r0
   1400c:	add	sl, sl, r4
   14010:	ldr	r4, [pc, #-512]	; 13e18 <dcngettext@plt+0x2e28>
   14014:	add	r0, r5, r0
   14018:	add	r8, fp, sl
   1401c:	eor	r5, r2, lr
   14020:	add	r4, r8, r4
   14024:	and	r5, r5, r6
   14028:	ror	r7, r6, #11
   1402c:	eor	r5, r5, r2
   14030:	add	r1, r4, r1
   14034:	eor	r7, r7, r6, ror #6
   14038:	str	r8, [sp, #44]	; 0x2c
   1403c:	orr	r4, ip, r0
   14040:	ldr	r8, [sp, #12]
   14044:	eor	r7, r7, r6, ror #25
   14048:	add	r1, r5, r1
   1404c:	ror	r5, r0, #13
   14050:	add	r1, r1, r7
   14054:	and	r4, r4, r3
   14058:	and	r7, ip, r0
   1405c:	eor	r5, r5, r0, ror #2
   14060:	eor	r5, r5, r0, ror #22
   14064:	orr	r4, r4, r7
   14068:	add	r4, r5, r4
   1406c:	ror	sl, r8, #18
   14070:	ldr	r5, [sp, #40]	; 0x28
   14074:	ldr	fp, [sp, #8]
   14078:	eor	sl, sl, r8, ror #7
   1407c:	eor	sl, sl, r8, lsr #3
   14080:	add	sl, sl, fp
   14084:	ror	r8, r5, #19
   14088:	ldr	fp, [sp, #56]	; 0x38
   1408c:	eor	r8, r8, r5, ror #17
   14090:	add	r9, r9, r1
   14094:	eor	r8, r8, r5, lsr #10
   14098:	add	r1, r4, r1
   1409c:	add	sl, sl, fp
   140a0:	ldr	r4, [pc, #-652]	; 13e1c <dcngettext@plt+0x2e2c>
   140a4:	add	sl, r8, sl
   140a8:	eor	r5, lr, r6
   140ac:	add	r4, sl, r4
   140b0:	and	r5, r5, r9
   140b4:	ror	r8, r9, #11
   140b8:	eor	r5, r5, lr
   140bc:	add	r2, r4, r2
   140c0:	eor	r8, r8, r9, ror #6
   140c4:	orr	r4, r0, r1
   140c8:	eor	r8, r8, r9, ror #25
   140cc:	add	r2, r5, r2
   140d0:	ror	r7, r1, #13
   140d4:	str	sl, [sp, #8]
   140d8:	add	r2, r2, r8
   140dc:	ldr	sl, [sp, #16]
   140e0:	and	r8, r0, r1
   140e4:	and	r4, r4, ip
   140e8:	eor	r7, r7, r1, ror #2
   140ec:	eor	r7, r7, r1, ror #22
   140f0:	orr	r4, r4, r8
   140f4:	add	r4, r7, r4
   140f8:	ldr	r7, [sp, #44]	; 0x2c
   140fc:	ror	r5, sl, #18
   14100:	ldr	r8, [sp, #12]
   14104:	eor	r5, r5, sl, ror #7
   14108:	add	r3, r3, r2
   1410c:	eor	r5, r5, sl, lsr #3
   14110:	add	r2, r4, r2
   14114:	ror	fp, r7, #19
   14118:	ldr	r4, [sp, #4]
   1411c:	add	sl, r5, r8
   14120:	eor	fp, fp, r7, ror #17
   14124:	add	r5, sl, r4
   14128:	eor	fp, fp, r7, lsr #10
   1412c:	ldr	r4, [pc, #-788]	; 13e20 <dcngettext@plt+0x2e30>
   14130:	add	r8, fp, r5
   14134:	eor	r5, r6, r9
   14138:	add	r4, r8, r4
   1413c:	and	r5, r5, r3
   14140:	ror	r7, r3, #11
   14144:	ldr	fp, [sp, #64]	; 0x40
   14148:	eor	r5, r5, r6
   1414c:	add	lr, r4, lr
   14150:	eor	r7, r7, r3, ror #6
   14154:	orr	r4, r1, r2
   14158:	eor	r7, r7, r3, ror #25
   1415c:	add	lr, r5, lr
   14160:	ror	r5, r2, #13
   14164:	add	lr, lr, r7
   14168:	and	r4, r4, r0
   1416c:	and	r7, r1, r2
   14170:	eor	r5, r5, r2, ror #2
   14174:	eor	r5, r5, r2, ror #22
   14178:	ror	sl, fp, #18
   1417c:	orr	r4, r4, r7
   14180:	ldr	r7, [sp, #8]
   14184:	add	r4, r5, r4
   14188:	eor	sl, sl, fp, ror #7
   1418c:	ldr	r5, [sp, #16]
   14190:	eor	sl, sl, fp, lsr #3
   14194:	str	r8, [sp, #12]
   14198:	add	sl, sl, r5
   1419c:	ror	r8, r7, #19
   141a0:	ldr	r5, [sp, #60]	; 0x3c
   141a4:	eor	r8, r8, r7, ror #17
   141a8:	add	ip, ip, lr
   141ac:	eor	r8, r8, r7, lsr #10
   141b0:	add	lr, r4, lr
   141b4:	add	sl, sl, r5
   141b8:	ldr	r4, [pc, #-924]	; 13e24 <dcngettext@plt+0x2e34>
   141bc:	add	sl, r8, sl
   141c0:	eor	r5, r9, r3
   141c4:	add	r4, sl, r4
   141c8:	and	r5, r5, ip
   141cc:	ror	r8, ip, #11
   141d0:	eor	r5, r5, r9
   141d4:	add	r6, r4, r6
   141d8:	eor	r8, r8, ip, ror #6
   141dc:	orr	r4, r2, lr
   141e0:	eor	r8, r8, ip, ror #25
   141e4:	add	r6, r5, r6
   141e8:	ror	r7, lr, #13
   141ec:	str	sl, [sp, #16]
   141f0:	add	r6, r6, r8
   141f4:	ldr	sl, [sp, #20]
   141f8:	and	r8, r2, lr
   141fc:	and	r4, r4, r1
   14200:	eor	r7, r7, lr, ror #2
   14204:	orr	r4, r4, r8
   14208:	eor	r7, r7, lr, ror #22
   1420c:	add	r7, r7, r4
   14210:	ldr	r4, [sp, #12]
   14214:	ror	r5, sl, #18
   14218:	eor	r5, r5, sl, ror #7
   1421c:	eor	r5, r5, sl, lsr #3
   14220:	ldr	r8, [sp, #36]	; 0x24
   14224:	ror	sl, r4, #19
   14228:	eor	sl, sl, r4, ror #17
   1422c:	add	fp, r5, fp
   14230:	eor	sl, sl, r4, lsr #10
   14234:	add	r5, fp, r8
   14238:	add	r0, r0, r6
   1423c:	add	r5, sl, r5
   14240:	ldr	r4, [pc, #-1056]	; 13e28 <dcngettext@plt+0x2e38>
   14244:	add	r6, r7, r6
   14248:	mov	r7, r5
   1424c:	eor	r5, r3, ip
   14250:	add	r4, r7, r4
   14254:	and	r5, r5, r0
   14258:	ror	r8, r0, #11
   1425c:	ldr	fp, [sp, #24]
   14260:	eor	r5, r5, r3
   14264:	add	r9, r4, r9
   14268:	eor	r8, r8, r0, ror #6
   1426c:	orr	r4, lr, r6
   14270:	eor	r8, r8, r0, ror #25
   14274:	str	r7, [sp, #48]	; 0x30
   14278:	add	r9, r5, r9
   1427c:	ror	r7, r6, #13
   14280:	add	r9, r9, r8
   14284:	and	r4, r4, r2
   14288:	and	r8, lr, r6
   1428c:	eor	r7, r7, r6, ror #2
   14290:	orr	r4, r4, r8
   14294:	ror	r5, fp, #18
   14298:	ldr	r8, [sp, #16]
   1429c:	eor	r7, r7, r6, ror #22
   142a0:	add	r7, r7, r4
   142a4:	eor	r5, r5, fp, ror #7
   142a8:	ldr	r4, [sp, #20]
   142ac:	eor	r5, r5, fp, lsr #3
   142b0:	add	fp, r5, r4
   142b4:	ror	sl, r8, #19
   142b8:	ldr	r5, [sp, #68]	; 0x44
   142bc:	eor	sl, sl, r8, ror #17
   142c0:	add	r1, r1, r9
   142c4:	add	r5, fp, r5
   142c8:	eor	sl, sl, r8, lsr #10
   142cc:	ldr	r8, [pc, #-1192]	; 13e2c <dcngettext@plt+0x2e3c>
   142d0:	add	sl, sl, r5
   142d4:	eor	r4, ip, r0
   142d8:	add	r9, r7, r9
   142dc:	add	r8, sl, r8
   142e0:	and	r4, r4, r1
   142e4:	ror	r7, r1, #11
   142e8:	eor	r4, r4, ip
   142ec:	add	r3, r8, r3
   142f0:	eor	r7, r7, r1, ror #6
   142f4:	str	sl, [sp, #20]
   142f8:	eor	r7, r7, r1, ror #25
   142fc:	orr	sl, r6, r9
   14300:	add	r3, r4, r3
   14304:	ror	r5, r9, #13
   14308:	add	r3, r3, r7
   1430c:	and	sl, sl, lr
   14310:	and	r7, r6, r9
   14314:	eor	r5, r5, r9, ror #2
   14318:	orr	sl, sl, r7
   1431c:	eor	r5, r5, r9, ror #22
   14320:	ldr	r8, [sp, #28]
   14324:	add	r5, r5, sl
   14328:	ldr	sl, [sp, #48]	; 0x30
   1432c:	ror	r4, r8, #18
   14330:	ldr	r7, [sp, #24]
   14334:	ror	fp, sl, #19
   14338:	eor	r4, r4, r8, ror #7
   1433c:	eor	fp, fp, sl, ror #17
   14340:	eor	fp, fp, sl, lsr #10
   14344:	eor	r4, r4, r8, lsr #3
   14348:	ldr	sl, [sp, #40]	; 0x28
   1434c:	add	r4, r4, r7
   14350:	add	r4, r4, sl
   14354:	add	r2, r2, r3
   14358:	add	r4, fp, r4
   1435c:	add	r3, r5, r3
   14360:	ldr	r5, [pc, #-1336]	; 13e30 <dcngettext@plt+0x2e40>
   14364:	mov	r7, r4
   14368:	eor	r4, r0, r1
   1436c:	str	r7, [sp, #64]	; 0x40
   14370:	add	r5, r7, r5
   14374:	and	r4, r4, r2
   14378:	ror	r7, r2, #11
   1437c:	eor	r4, r4, r0
   14380:	add	ip, r5, ip
   14384:	eor	r7, r7, r2, ror #6
   14388:	orr	sl, r9, r3
   1438c:	eor	r7, r7, r2, ror #25
   14390:	add	ip, r4, ip
   14394:	ror	r5, r3, #13
   14398:	add	ip, ip, r7
   1439c:	and	sl, sl, r6
   143a0:	and	r7, r9, r3
   143a4:	eor	r5, r5, r3, ror #2
   143a8:	orr	sl, sl, r7
   143ac:	eor	r5, r5, r3, ror #22
   143b0:	ldr	fp, [sp, #32]
   143b4:	add	r5, r5, sl
   143b8:	ldr	sl, [sp, #20]
   143bc:	ror	r4, fp, #18
   143c0:	ldr	r7, [sp, #28]
   143c4:	ror	r8, sl, #19
   143c8:	eor	r4, r4, fp, ror #7
   143cc:	eor	r8, r8, sl, ror #17
   143d0:	eor	r8, r8, sl, lsr #10
   143d4:	eor	r4, r4, fp, lsr #3
   143d8:	ldr	sl, [sp, #44]	; 0x2c
   143dc:	add	fp, r4, r7
   143e0:	add	r4, fp, sl
   143e4:	add	lr, lr, ip
   143e8:	add	r4, r8, r4
   143ec:	ldr	r7, [pc, #-1472]	; 13e34 <dcngettext@plt+0x2e44>
   143f0:	mov	r8, r4
   143f4:	eor	r4, r1, r2
   143f8:	add	ip, r5, ip
   143fc:	add	r7, r8, r7
   14400:	and	r4, r4, lr
   14404:	ror	r5, lr, #11
   14408:	eor	r4, r4, r1
   1440c:	add	r0, r7, r0
   14410:	eor	r5, r5, lr, ror #6
   14414:	str	r8, [sp, #72]	; 0x48
   14418:	eor	r5, r5, lr, ror #25
   1441c:	orr	r8, r3, ip
   14420:	add	r0, r4, r0
   14424:	ror	r4, ip, #13
   14428:	ldr	r7, [sp, #52]	; 0x34
   1442c:	add	r0, r0, r5
   14430:	and	r8, r8, r9
   14434:	and	r5, r3, ip
   14438:	eor	r4, r4, ip, ror #2
   1443c:	orr	r8, r8, r5
   14440:	eor	r4, r4, ip, ror #22
   14444:	add	r4, r4, r8
   14448:	ldr	r8, [sp, #64]	; 0x40
   1444c:	ror	sl, r7, #18
   14450:	ldr	r5, [sp, #32]
   14454:	eor	sl, sl, r7, ror #7
   14458:	add	r6, r6, r0
   1445c:	eor	sl, sl, r7, lsr #3
   14460:	add	r0, r4, r0
   14464:	ror	fp, r8, #19
   14468:	ldr	r4, [sp, #8]
   1446c:	eor	fp, fp, r8, ror #17
   14470:	add	sl, sl, r5
   14474:	eor	fp, fp, r8, lsr #10
   14478:	add	sl, sl, r4
   1447c:	ldr	r7, [pc, #-1612]	; 13e38 <dcngettext@plt+0x2e48>
   14480:	add	r5, fp, sl
   14484:	eor	r4, r2, lr
   14488:	str	r5, [sp, #24]
   1448c:	add	r7, r5, r7
   14490:	and	r4, r4, r6
   14494:	ror	r5, r6, #11
   14498:	eor	r4, r4, r2
   1449c:	add	r1, r7, r1
   144a0:	eor	r5, r5, r6, ror #6
   144a4:	orr	fp, ip, r0
   144a8:	eor	r5, r5, r6, ror #25
   144ac:	add	r1, r4, r1
   144b0:	ror	r4, r0, #13
   144b4:	ldr	r8, [sp, #56]	; 0x38
   144b8:	add	r1, r1, r5
   144bc:	and	fp, fp, r3
   144c0:	and	r5, ip, r0
   144c4:	eor	r4, r4, r0, ror #2
   144c8:	orr	fp, fp, r5
   144cc:	eor	r4, r4, r0, ror #22
   144d0:	add	r4, r4, fp
   144d4:	ldr	fp, [sp, #72]	; 0x48
   144d8:	ror	sl, r8, #18
   144dc:	ldr	r7, [sp, #52]	; 0x34
   144e0:	eor	sl, sl, r8, ror #7
   144e4:	add	r9, r9, r1
   144e8:	eor	sl, sl, r8, lsr #3
   144ec:	add	r1, r4, r1
   144f0:	ror	r5, fp, #19
   144f4:	ldr	r4, [sp, #12]
   144f8:	eor	r5, r5, fp, ror #17
   144fc:	add	sl, sl, r7
   14500:	eor	r5, r5, fp, lsr #10
   14504:	add	sl, sl, r4
   14508:	add	r4, r5, sl
   1450c:	ldr	r7, [pc, #-1752]	; 13e3c <dcngettext@plt+0x2e4c>
   14510:	mov	r8, r4
   14514:	eor	r4, lr, r6
   14518:	add	r7, r8, r7
   1451c:	and	r4, r4, r9
   14520:	ror	r5, r9, #11
   14524:	eor	r4, r4, lr
   14528:	add	r2, r7, r2
   1452c:	eor	r5, r5, r9, ror #6
   14530:	orr	sl, r0, r1
   14534:	eor	r5, r5, r9, ror #25
   14538:	add	r2, r4, r2
   1453c:	ldr	fp, [sp, #4]
   14540:	add	r2, r2, r5
   14544:	and	sl, sl, ip
   14548:	and	r5, r0, r1
   1454c:	orr	sl, sl, r5
   14550:	ldr	r5, [sp, #24]
   14554:	ror	r7, fp, #18
   14558:	str	r8, [sp, #28]
   1455c:	eor	r7, r7, fp, ror #7
   14560:	ror	r8, r5, #19
   14564:	ror	r4, r1, #13
   14568:	eor	r7, r7, fp, lsr #3
   1456c:	eor	r8, r8, r5, ror #17
   14570:	ldr	fp, [sp, #56]	; 0x38
   14574:	eor	r8, r8, r5, lsr #10
   14578:	eor	r4, r4, r1, ror #2
   1457c:	ldr	r5, [sp, #16]
   14580:	eor	r4, r4, r1, ror #22
   14584:	add	r7, r7, fp
   14588:	add	r3, r3, r2
   1458c:	add	r4, r4, sl
   14590:	add	r7, r7, r5
   14594:	ldr	r5, [pc, #-1884]	; 13e40 <dcngettext@plt+0x2e50>
   14598:	add	r2, r4, r2
   1459c:	add	r7, r8, r7
   145a0:	eor	r4, r6, r9
   145a4:	add	r5, r7, r5
   145a8:	str	r7, [sp, #32]
   145ac:	and	r4, r4, r3
   145b0:	ror	r7, r3, #11
   145b4:	eor	r4, r4, r6
   145b8:	add	lr, r5, lr
   145bc:	eor	r7, r7, r3, ror #6
   145c0:	orr	r8, r1, r2
   145c4:	eor	r7, r7, r3, ror #25
   145c8:	add	lr, r4, lr
   145cc:	ror	r4, r2, #13
   145d0:	ldr	sl, [sp, #60]	; 0x3c
   145d4:	add	lr, lr, r7
   145d8:	and	r8, r8, r0
   145dc:	and	r7, r1, r2
   145e0:	eor	r4, r4, r2, ror #2
   145e4:	orr	r8, r8, r7
   145e8:	eor	r4, r4, r2, ror #22
   145ec:	add	r4, r4, r8
   145f0:	ldr	r8, [sp, #28]
   145f4:	ror	r5, sl, #18
   145f8:	eor	r5, r5, sl, ror #7
   145fc:	eor	r5, r5, sl, lsr #3
   14600:	ror	sl, r8, #19
   14604:	ldr	fp, [sp, #4]
   14608:	eor	sl, sl, r8, ror #17
   1460c:	eor	sl, sl, r8, lsr #10
   14610:	ldr	r8, [sp, #48]	; 0x30
   14614:	add	r5, r5, fp
   14618:	add	ip, ip, lr
   1461c:	add	r5, r5, r8
   14620:	ldr	r8, [pc, #-2020]	; 13e44 <dcngettext@plt+0x2e54>
   14624:	add	lr, r4, lr
   14628:	add	fp, sl, r5
   1462c:	eor	r4, r9, r3
   14630:	add	r8, fp, r8
   14634:	and	r4, r4, ip
   14638:	ror	r7, ip, #11
   1463c:	eor	r4, r4, r9
   14640:	add	r6, r8, r6
   14644:	eor	r7, r7, ip, ror #6
   14648:	orr	r8, r2, lr
   1464c:	eor	r7, r7, ip, ror #25
   14650:	add	r6, r4, r6
   14654:	ror	r5, lr, #13
   14658:	add	r6, r6, r7
   1465c:	and	r8, r8, r1
   14660:	and	r7, r2, lr
   14664:	eor	r5, r5, lr, ror #2
   14668:	orr	r8, r8, r7
   1466c:	eor	r5, r5, lr, ror #22
   14670:	add	r5, r5, r8
   14674:	str	fp, [sp, #120]	; 0x78
   14678:	ldr	fp, [sp, #36]	; 0x24
   1467c:	ldr	r8, [sp, #32]
   14680:	ldr	r7, [sp, #60]	; 0x3c
   14684:	ror	r4, fp, #18
   14688:	ror	sl, r8, #19
   1468c:	eor	r4, r4, fp, ror #7
   14690:	eor	sl, sl, r8, ror #17
   14694:	eor	r4, r4, fp, lsr #3
   14698:	eor	sl, sl, r8, lsr #10
   1469c:	ldr	r8, [sp, #20]
   146a0:	add	fp, r4, r7
   146a4:	add	r4, fp, r8
   146a8:	add	sl, sl, r4
   146ac:	str	sl, [sp, #124]	; 0x7c
   146b0:	add	r0, r0, r6
   146b4:	ldr	r4, [sp, #124]	; 0x7c
   146b8:	ldr	r7, [pc, #-2168]	; 13e48 <dcngettext@plt+0x2e58>
   146bc:	eor	sl, r3, ip
   146c0:	add	r6, r5, r6
   146c4:	add	r7, r4, r7
   146c8:	and	sl, sl, r0
   146cc:	ror	r5, r0, #11
   146d0:	add	r9, r7, r9
   146d4:	eor	sl, sl, r3
   146d8:	eor	r5, r5, r0, ror #6
   146dc:	orr	r4, lr, r6
   146e0:	add	sl, sl, r9
   146e4:	eor	r5, r5, r0, ror #25
   146e8:	ldr	r9, [sp, #68]	; 0x44
   146ec:	add	r5, sl, r5
   146f0:	and	r4, r4, r2
   146f4:	and	sl, lr, r6
   146f8:	ror	r7, r6, #13
   146fc:	eor	r7, r7, r6, ror #2
   14700:	orr	sl, r4, sl
   14704:	ldr	r4, [sp, #120]	; 0x78
   14708:	eor	r7, r7, r6, ror #22
   1470c:	ror	r8, r9, #18
   14710:	ldr	fp, [sp, #36]	; 0x24
   14714:	eor	r8, r8, r9, ror #7
   14718:	add	sl, r7, sl
   1471c:	add	sl, sl, r5
   14720:	add	r1, r1, r5
   14724:	eor	r8, r8, r9, lsr #3
   14728:	ldr	r5, [sp, #64]	; 0x40
   1472c:	ror	r7, r4, #19
   14730:	eor	r7, r7, r4, ror #17
   14734:	add	r8, r8, fp
   14738:	add	r8, r8, r5
   1473c:	eor	r7, r7, r4, lsr #10
   14740:	add	r4, r7, r8
   14744:	str	r4, [sp, #128]	; 0x80
   14748:	ldr	fp, [sp, #128]	; 0x80
   1474c:	ldr	r5, [pc, #-2312]	; 13e4c <dcngettext@plt+0x2e5c>
   14750:	eor	r4, ip, r0
   14754:	add	r5, fp, r5
   14758:	ldr	fp, [sp, #40]	; 0x28
   1475c:	and	r4, r4, r1
   14760:	ror	r7, r1, #11
   14764:	eor	r4, r4, ip
   14768:	add	r3, r5, r3
   1476c:	eor	r7, r7, r1, ror #6
   14770:	ror	r5, fp, #18
   14774:	orr	r8, r6, sl
   14778:	eor	r7, r7, r1, ror #25
   1477c:	add	r3, r4, r3
   14780:	eor	r5, r5, fp, ror #7
   14784:	ror	r4, sl, #13
   14788:	add	r3, r3, r7
   1478c:	and	r8, r8, lr
   14790:	and	r7, r6, sl
   14794:	eor	r4, r4, sl, ror #2
   14798:	eor	r5, r5, fp, lsr #3
   1479c:	ldr	fp, [sp, #124]	; 0x7c
   147a0:	orr	r7, r8, r7
   147a4:	eor	r4, r4, sl, ror #22
   147a8:	add	r4, r4, r7
   147ac:	add	r4, r4, r3
   147b0:	add	r2, r2, r3
   147b4:	ror	r8, fp, #19
   147b8:	ldr	r3, [sp, #72]	; 0x48
   147bc:	eor	r8, r8, fp, ror #17
   147c0:	add	r5, r5, r9
   147c4:	eor	r8, r8, fp, lsr #10
   147c8:	add	r5, r5, r3
   147cc:	ldr	r7, [pc, #-2436]	; 13e50 <dcngettext@plt+0x2e60>
   147d0:	add	r9, r8, r5
   147d4:	eor	r8, r0, r1
   147d8:	add	r7, r9, r7
   147dc:	and	r8, r8, r2
   147e0:	ror	r3, r2, #11
   147e4:	add	ip, r7, ip
   147e8:	eor	r8, r8, r0
   147ec:	eor	r3, r3, r2, ror #6
   147f0:	orr	r5, sl, r4
   147f4:	add	r8, r8, ip
   147f8:	eor	r3, r3, r2, ror #25
   147fc:	ror	ip, r4, #13
   14800:	str	r9, [sp, #132]	; 0x84
   14804:	add	r3, r8, r3
   14808:	ldr	r9, [sp, #44]	; 0x2c
   1480c:	and	r5, r5, r6
   14810:	and	r8, sl, r4
   14814:	eor	ip, ip, r4, ror #2
   14818:	eor	ip, ip, r4, ror #22
   1481c:	orr	r8, r5, r8
   14820:	add	r8, ip, r8
   14824:	ldr	ip, [sp, #128]	; 0x80
   14828:	ldr	r7, [sp, #128]	; 0x80
   1482c:	ror	fp, r9, #18
   14830:	ldr	r5, [sp, #40]	; 0x28
   14834:	eor	fp, fp, r9, ror #7
   14838:	add	lr, lr, r3
   1483c:	add	r8, r8, r3
   14840:	eor	fp, fp, r9, lsr #3
   14844:	ldr	r3, [sp, #24]
   14848:	ror	ip, ip, #19
   1484c:	eor	ip, ip, r7, ror #17
   14850:	add	fp, fp, r5
   14854:	add	fp, fp, r3
   14858:	eor	ip, ip, r7, lsr #10
   1485c:	ldr	r7, [pc, #-2576]	; 13e54 <dcngettext@plt+0x2e64>
   14860:	add	ip, ip, fp
   14864:	eor	r3, r1, r2
   14868:	add	r7, ip, r7
   1486c:	and	r3, r3, lr
   14870:	ror	r5, lr, #11
   14874:	add	r0, r7, r0
   14878:	eor	r3, r3, r1
   1487c:	ldr	r7, [sp, #8]
   14880:	eor	r5, r5, lr, ror #6
   14884:	str	ip, [sp, #136]	; 0x88
   14888:	eor	r5, r5, lr, ror #25
   1488c:	orr	ip, r4, r8
   14890:	add	r3, r3, r0
   14894:	ror	fp, r8, #13
   14898:	add	r3, r3, r5
   1489c:	and	ip, ip, sl
   148a0:	and	r5, r4, r8
   148a4:	eor	fp, fp, r8, ror #2
   148a8:	orr	ip, ip, r5
   148ac:	ror	r0, r7, #18
   148b0:	eor	fp, fp, r8, ror #22
   148b4:	eor	r0, r0, r7, ror #7
   148b8:	add	fp, fp, ip
   148bc:	ldr	ip, [sp, #132]	; 0x84
   148c0:	eor	r0, r0, r7, lsr #3
   148c4:	add	r0, r0, r9
   148c8:	ldr	r9, [sp, #132]	; 0x84
   148cc:	ror	r5, ip, #19
   148d0:	eor	r5, r5, ip, ror #17
   148d4:	eor	r5, r5, r9, lsr #10
   148d8:	ldr	r9, [sp, #28]
   148dc:	add	ip, r6, r3
   148e0:	add	r0, r0, r9
   148e4:	add	r9, r5, r0
   148e8:	str	r9, [sp, #140]	; 0x8c
   148ec:	ldr	r0, [sp, #140]	; 0x8c
   148f0:	ldr	r6, [pc, #-2720]	; 13e58 <dcngettext@plt+0x2e68>
   148f4:	eor	r9, r2, lr
   148f8:	add	r6, r0, r6
   148fc:	add	fp, fp, r3
   14900:	add	r1, r6, r1
   14904:	and	r9, r9, ip
   14908:	ldr	r6, [sp, #12]
   1490c:	ror	r3, ip, #11
   14910:	eor	r9, r9, r2
   14914:	eor	r3, r3, ip, ror #6
   14918:	orr	r0, r8, fp
   1491c:	add	r9, r9, r1
   14920:	eor	r3, r3, ip, ror #25
   14924:	add	r3, r9, r3
   14928:	and	r0, r0, r4
   1492c:	and	r9, r8, fp
   14930:	ror	r1, r6, #18
   14934:	eor	r1, r1, r6, ror #7
   14938:	orr	r9, r0, r9
   1493c:	ldr	r0, [sp, #136]	; 0x88
   14940:	eor	r1, r1, r6, lsr #3
   14944:	ldr	r7, [sp, #8]
   14948:	ldr	r6, [sp, #136]	; 0x88
   1494c:	ror	r5, fp, #13
   14950:	eor	r5, r5, fp, ror #2
   14954:	add	r1, r1, r7
   14958:	ror	r0, r0, #19
   1495c:	ldr	r7, [sp, #32]
   14960:	eor	r5, r5, fp, ror #22
   14964:	eor	r0, r0, r6, ror #17
   14968:	add	sl, sl, r3
   1496c:	eor	r0, r0, r6, lsr #10
   14970:	add	r9, r5, r9
   14974:	add	r1, r1, r7
   14978:	ldr	r5, [pc, #-2852]	; 13e5c <dcngettext@plt+0x2e6c>
   1497c:	add	r1, r0, r1
   14980:	eor	r6, lr, ip
   14984:	add	r9, r9, r3
   14988:	add	r5, r1, r5
   1498c:	and	r6, r6, sl
   14990:	ror	r3, sl, #11
   14994:	add	r2, r5, r2
   14998:	eor	r6, r6, lr
   1499c:	eor	r3, r3, sl, ror #6
   149a0:	str	r1, [sp, #144]	; 0x90
   149a4:	add	r6, r6, r2
   149a8:	orr	r1, fp, r9
   149ac:	ror	r2, r9, #13
   149b0:	eor	r3, r3, sl, ror #25
   149b4:	add	r3, r6, r3
   149b8:	and	r1, r1, r8
   149bc:	and	r6, fp, r9
   149c0:	eor	r2, r2, r9, ror #2
   149c4:	eor	r2, r2, r9, ror #22
   149c8:	orr	r6, r1, r6
   149cc:	ldr	r0, [sp, #16]
   149d0:	add	r6, r2, r6
   149d4:	ldr	r2, [sp, #140]	; 0x8c
   149d8:	ldr	r1, [sp, #140]	; 0x8c
   149dc:	ror	r5, r0, #18
   149e0:	ror	r2, r2, #19
   149e4:	eor	r5, r5, r0, ror #7
   149e8:	eor	r2, r2, r1, ror #17
   149ec:	ldr	r1, [sp, #12]
   149f0:	eor	r5, r5, r0, lsr #3
   149f4:	add	r5, r5, r1
   149f8:	ldr	r1, [sp, #140]	; 0x8c
   149fc:	add	r7, r4, r3
   14a00:	ldr	r4, [pc, #-2984]	; 13e60 <dcngettext@plt+0x2e70>
   14a04:	eor	r2, r2, r1, lsr #10
   14a08:	ldr	r1, [sp, #120]	; 0x78
   14a0c:	add	r6, r6, r3
   14a10:	add	r5, r5, r1
   14a14:	add	r2, r2, r5
   14a18:	str	r2, [sp, #148]	; 0x94
   14a1c:	ldr	r1, [sp, #148]	; 0x94
   14a20:	eor	r2, ip, sl
   14a24:	ror	r3, r7, #11
   14a28:	add	r4, r1, r4
   14a2c:	and	r2, r2, r7
   14a30:	add	r4, r4, lr
   14a34:	eor	r2, r2, ip
   14a38:	eor	lr, r3, r7, ror #6
   14a3c:	orr	r0, r9, r6
   14a40:	eor	lr, lr, r7, ror #25
   14a44:	add	r2, r2, r4
   14a48:	ldr	r4, [sp, #48]	; 0x30
   14a4c:	add	r2, r2, lr
   14a50:	and	r0, r0, fp
   14a54:	and	lr, r9, r6
   14a58:	ror	r3, r6, #13
   14a5c:	orr	r0, r0, lr
   14a60:	eor	r3, r3, r6, ror #2
   14a64:	ldr	lr, [sp, #144]	; 0x90
   14a68:	ror	r1, r4, #18
   14a6c:	eor	r3, r3, r6, ror #22
   14a70:	ldr	r5, [sp, #16]
   14a74:	eor	r1, r1, r4, ror #7
   14a78:	add	r3, r3, r0
   14a7c:	add	r8, r8, r2
   14a80:	add	r3, r3, r2
   14a84:	eor	r1, r1, r4, lsr #3
   14a88:	ldr	r2, [sp, #124]	; 0x7c
   14a8c:	ror	r0, lr, #19
   14a90:	add	r1, r1, r5
   14a94:	eor	r0, r0, lr, ror #17
   14a98:	eor	r0, r0, lr, lsr #10
   14a9c:	add	r1, r1, r2
   14aa0:	add	r2, r0, r1
   14aa4:	str	r2, [sp, #152]	; 0x98
   14aa8:	ldr	r1, [sp, #152]	; 0x98
   14aac:	ldr	lr, [pc, #-3152]	; 13e64 <dcngettext@plt+0x2e74>
   14ab0:	eor	r2, sl, r7
   14ab4:	add	lr, r1, lr
   14ab8:	and	r2, r2, r8
   14abc:	add	ip, lr, ip
   14ac0:	eor	r2, r2, sl
   14ac4:	add	r2, r2, ip
   14ac8:	ldr	ip, [sp, #20]
   14acc:	ror	r1, r8, #11
   14ad0:	eor	r1, r1, r8, ror #6
   14ad4:	ror	r5, ip, #18
   14ad8:	eor	r5, r5, ip, ror #7
   14adc:	eor	r5, r5, ip, lsr #3
   14ae0:	orr	lr, r6, r3
   14ae4:	ror	r0, r3, #13
   14ae8:	eor	r1, r1, r8, ror #25
   14aec:	add	r5, r5, r4
   14af0:	ldr	r4, [sp, #148]	; 0x94
   14af4:	add	r1, r2, r1
   14af8:	and	lr, lr, r9
   14afc:	and	r2, r6, r3
   14b00:	eor	r0, r0, r3, ror #2
   14b04:	eor	r0, r0, r3, ror #22
   14b08:	orr	r2, lr, r2
   14b0c:	ror	ip, r4, #19
   14b10:	add	r2, r0, r2
   14b14:	ldr	r0, [sp, #128]	; 0x80
   14b18:	eor	ip, ip, r4, ror #17
   14b1c:	add	lr, fp, r1
   14b20:	add	r2, r2, r1
   14b24:	add	r5, r5, r0
   14b28:	eor	r1, ip, r4, lsr #10
   14b2c:	ldr	ip, [pc, #-3276]	; 13e68 <dcngettext@plt+0x2e78>
   14b30:	add	r0, r1, r5
   14b34:	add	ip, r0, ip
   14b38:	eor	r1, r7, r8
   14b3c:	add	ip, ip, sl
   14b40:	ldr	sl, [sp, #64]	; 0x40
   14b44:	str	r0, [sp, #156]	; 0x9c
   14b48:	and	r1, r1, lr
   14b4c:	ror	r0, lr, #11
   14b50:	eor	r1, r1, r7
   14b54:	eor	r0, r0, lr, ror #6
   14b58:	add	r1, r1, ip
   14b5c:	eor	r0, r0, lr, ror #25
   14b60:	ror	ip, sl, #18
   14b64:	add	r0, r1, r0
   14b68:	eor	ip, ip, sl, ror #7
   14b6c:	ldr	r1, [sp, #20]
   14b70:	orr	r4, r3, r2
   14b74:	ror	r5, r2, #13
   14b78:	eor	ip, ip, sl, lsr #3
   14b7c:	and	r4, r4, r6
   14b80:	eor	r5, r5, r2, ror #2
   14b84:	add	ip, ip, r1
   14b88:	and	r1, r3, r2
   14b8c:	eor	r5, r5, r2, ror #22
   14b90:	orr	r1, r4, r1
   14b94:	ldr	r4, [sp, #152]	; 0x98
   14b98:	add	r1, r5, r1
   14b9c:	ldr	r5, [sp, #152]	; 0x98
   14ba0:	add	r1, r1, r0
   14ba4:	add	r9, r9, r0
   14ba8:	ror	r4, r4, #19
   14bac:	ldr	r0, [sp, #132]	; 0x84
   14bb0:	eor	r4, r4, r5, ror #17
   14bb4:	add	ip, ip, r0
   14bb8:	eor	r0, r4, r5, lsr #10
   14bbc:	add	r0, r0, ip
   14bc0:	str	r0, [sp, #160]	; 0xa0
   14bc4:	ldr	ip, [sp, #160]	; 0xa0
   14bc8:	ldr	r4, [pc, #-3428]	; 13e6c <dcngettext@plt+0x2e7c>
   14bcc:	ldr	fp, [sp, #72]	; 0x48
   14bd0:	eor	r0, r8, lr
   14bd4:	add	r4, ip, r4
   14bd8:	and	r0, r0, r9
   14bdc:	ror	ip, r9, #11
   14be0:	add	r4, r4, r7
   14be4:	eor	r0, r0, r8
   14be8:	eor	ip, ip, r9, ror #6
   14bec:	orr	r5, r2, r1
   14bf0:	add	r0, r0, r4
   14bf4:	eor	ip, ip, r9, ror #25
   14bf8:	ror	r4, fp, #18
   14bfc:	add	ip, r0, ip
   14c00:	and	r5, r5, r3
   14c04:	and	r0, r2, r1
   14c08:	ror	r7, r1, #13
   14c0c:	eor	r4, r4, fp, ror #7
   14c10:	eor	r7, r7, r1, ror #2
   14c14:	eor	r4, r4, fp, lsr #3
   14c18:	orr	r0, r5, r0
   14c1c:	ldr	r5, [sp, #156]	; 0x9c
   14c20:	eor	r7, r7, r1, ror #22
   14c24:	add	r4, r4, sl
   14c28:	ldr	sl, [sp, #156]	; 0x9c
   14c2c:	add	r0, r7, r0
   14c30:	add	r0, r0, ip
   14c34:	add	r6, r6, ip
   14c38:	ror	r5, r5, #19
   14c3c:	ldr	ip, [sp, #136]	; 0x88
   14c40:	eor	r5, r5, sl, ror #17
   14c44:	add	r4, r4, ip
   14c48:	eor	ip, r5, sl, lsr #10
   14c4c:	add	ip, ip, r4
   14c50:	str	ip, [sp, #164]	; 0xa4
   14c54:	ldr	r4, [sp, #164]	; 0xa4
   14c58:	ldr	r5, [pc, #-3568]	; 13e70 <dcngettext@plt+0x2e80>
   14c5c:	eor	ip, lr, r9
   14c60:	add	r5, r4, r5
   14c64:	add	r5, r5, r8
   14c68:	ldr	r8, [sp, #24]
   14c6c:	and	ip, ip, r6
   14c70:	eor	ip, ip, lr
   14c74:	add	ip, ip, r5
   14c78:	ror	r5, r8, #18
   14c7c:	ror	r4, r6, #11
   14c80:	eor	r5, r5, r8, ror #7
   14c84:	eor	r4, r4, r6, ror #6
   14c88:	eor	r5, r5, r8, lsr #3
   14c8c:	orr	r7, r1, r0
   14c90:	ror	sl, r0, #13
   14c94:	eor	r4, r4, r6, ror #25
   14c98:	add	r5, r5, fp
   14c9c:	ldr	fp, [sp, #160]	; 0xa0
   14ca0:	add	r4, ip, r4
   14ca4:	and	r7, r7, r2
   14ca8:	and	ip, r1, r0
   14cac:	eor	sl, sl, r0, ror #2
   14cb0:	eor	sl, sl, r0, ror #22
   14cb4:	orr	ip, r7, ip
   14cb8:	add	ip, sl, ip
   14cbc:	ror	r7, fp, #19
   14cc0:	ldr	sl, [sp, #140]	; 0x8c
   14cc4:	eor	r7, r7, fp, ror #17
   14cc8:	add	r3, r3, r4
   14ccc:	add	r5, r5, sl
   14cd0:	eor	r8, r7, fp, lsr #10
   14cd4:	ldr	sl, [pc, #-3688]	; 13e74 <dcngettext@plt+0x2e84>
   14cd8:	add	ip, ip, r4
   14cdc:	add	r8, r8, r5
   14ce0:	ldr	fp, [sp, #28]
   14ce4:	eor	r4, r9, r6
   14ce8:	add	sl, r8, sl
   14cec:	and	r4, r4, r3
   14cf0:	ror	r5, r3, #11
   14cf4:	add	lr, sl, lr
   14cf8:	eor	r4, r4, r9
   14cfc:	eor	r5, r5, r3, ror #6
   14d00:	add	r4, r4, lr
   14d04:	eor	r5, r5, r3, ror #25
   14d08:	ror	lr, fp, #18
   14d0c:	add	r5, r4, r5
   14d10:	eor	lr, lr, fp, ror #7
   14d14:	ldr	r4, [sp, #24]
   14d18:	orr	r7, r0, ip
   14d1c:	ror	sl, ip, #13
   14d20:	eor	lr, lr, fp, lsr #3
   14d24:	and	r7, r7, r1
   14d28:	eor	sl, sl, ip, ror #2
   14d2c:	add	lr, lr, r4
   14d30:	and	r4, r0, ip
   14d34:	eor	sl, sl, ip, ror #22
   14d38:	orr	r4, r7, r4
   14d3c:	ldr	r7, [sp, #164]	; 0xa4
   14d40:	add	r4, sl, r4
   14d44:	ldr	sl, [sp, #164]	; 0xa4
   14d48:	ror	r7, r7, #19
   14d4c:	add	r2, r2, r5
   14d50:	eor	r7, r7, sl, ror #17
   14d54:	ldr	sl, [sp, #144]	; 0x90
   14d58:	add	r4, r4, r5
   14d5c:	add	lr, lr, sl
   14d60:	ldr	sl, [sp, #164]	; 0xa4
   14d64:	eor	r5, r6, r3
   14d68:	and	r5, r5, r2
   14d6c:	eor	r7, r7, sl, lsr #10
   14d70:	ldr	sl, [pc, #-3840]	; 13e78 <dcngettext@plt+0x2e88>
   14d74:	add	lr, lr, r7
   14d78:	str	lr, [sp, #172]	; 0xac
   14d7c:	add	sl, lr, sl
   14d80:	ldr	lr, [sp, #32]
   14d84:	ror	r7, r2, #11
   14d88:	add	r9, sl, r9
   14d8c:	eor	r5, r5, r6
   14d90:	eor	r7, r7, r2, ror #6
   14d94:	add	r5, r5, r9
   14d98:	eor	r7, r7, r2, ror #25
   14d9c:	ror	r9, lr, #18
   14da0:	add	r7, r5, r7
   14da4:	eor	r9, r9, lr, ror #7
   14da8:	ldr	r5, [sp, #28]
   14dac:	orr	sl, ip, r4
   14db0:	ror	fp, r4, #13
   14db4:	eor	r9, r9, lr, lsr #3
   14db8:	and	sl, sl, r0
   14dbc:	eor	fp, fp, r4, ror #2
   14dc0:	add	r9, r9, r5
   14dc4:	and	r5, ip, r4
   14dc8:	eor	fp, fp, r4, ror #22
   14dcc:	orr	r5, sl, r5
   14dd0:	add	r5, fp, r5
   14dd4:	add	r5, r5, r7
   14dd8:	add	r1, r1, r7
   14ddc:	ror	sl, r8, #19
   14de0:	ldr	r7, [sp, #148]	; 0x94
   14de4:	eor	sl, sl, r8, ror #17
   14de8:	add	r9, r9, r7
   14dec:	eor	sl, sl, r8, lsr #10
   14df0:	add	r7, r9, sl
   14df4:	str	r7, [sp, #176]	; 0xb0
   14df8:	ldr	r9, [sp, #176]	; 0xb0
   14dfc:	ldr	fp, [pc, #-3976]	; 13e7c <dcngettext@plt+0x2e8c>
   14e00:	eor	r7, r3, r2
   14e04:	add	fp, r9, fp
   14e08:	and	r7, r7, r1
   14e0c:	add	r6, fp, r6
   14e10:	eor	r7, r7, r3
   14e14:	add	r7, r7, r6
   14e18:	ldr	r6, [sp, #120]	; 0x78
   14e1c:	str	r7, [sp, #4]
   14e20:	ldr	r7, [sp, #120]	; 0x78
   14e24:	ror	r6, r6, #18
   14e28:	ror	r9, r1, #11
   14e2c:	eor	r6, r6, r7, ror #7
   14e30:	eor	r6, r6, r7, lsr #3
   14e34:	eor	r9, r9, r1, ror #6
   14e38:	ldr	r7, [sp, #4]
   14e3c:	add	r6, r6, lr
   14e40:	ldr	lr, [sp, #172]	; 0xac
   14e44:	orr	sl, r4, r5
   14e48:	eor	r9, r9, r1, ror #25
   14e4c:	add	r9, r7, r9
   14e50:	and	sl, sl, ip
   14e54:	and	r7, r4, r5
   14e58:	orr	r7, sl, r7
   14e5c:	ror	sl, lr, #19
   14e60:	eor	sl, sl, lr, ror #17
   14e64:	ldr	lr, [sp, #152]	; 0x98
   14e68:	ror	fp, r5, #13
   14e6c:	add	r6, r6, lr
   14e70:	ldr	lr, [sp, #172]	; 0xac
   14e74:	eor	fp, fp, r5, ror #2
   14e78:	eor	fp, fp, r5, ror #22
   14e7c:	add	r0, r0, r9
   14e80:	eor	sl, sl, lr, lsr #10
   14e84:	add	r7, fp, r7
   14e88:	ldr	fp, [pc, #296]	; 14fb8 <dcngettext@plt+0x3fc8>
   14e8c:	add	r6, r6, sl
   14e90:	eor	sl, r2, r1
   14e94:	add	r7, r7, r9
   14e98:	add	fp, r6, fp
   14e9c:	and	sl, sl, r0
   14ea0:	ror	r9, r0, #11
   14ea4:	eor	sl, sl, r2
   14ea8:	add	r3, fp, r3
   14eac:	eor	r9, r9, r0, ror #6
   14eb0:	orr	fp, r5, r7
   14eb4:	eor	r9, r9, r0, ror #25
   14eb8:	add	r3, sl, r3
   14ebc:	ror	sl, r7, #13
   14ec0:	add	r3, r3, r9
   14ec4:	and	fp, fp, r4
   14ec8:	and	r9, r5, r7
   14ecc:	eor	sl, sl, r7, ror #2
   14ed0:	eor	sl, sl, r7, ror #22
   14ed4:	orr	fp, fp, r9
   14ed8:	ldr	r9, [sp, #80]	; 0x50
   14edc:	ldr	lr, [sp, #76]	; 0x4c
   14ee0:	add	fp, sl, fp
   14ee4:	add	fp, fp, r9
   14ee8:	ldr	r9, [sp, #112]	; 0x70
   14eec:	add	lr, lr, #64	; 0x40
   14ef0:	str	lr, [sp, #76]	; 0x4c
   14ef4:	cmp	r9, lr
   14ef8:	ldr	lr, [sp, #108]	; 0x6c
   14efc:	add	ip, ip, r3
   14f00:	add	r2, lr, r2
   14f04:	ldr	lr, [sp, #92]	; 0x5c
   14f08:	str	r2, [sp, #108]	; 0x6c
   14f0c:	add	lr, lr, r4
   14f10:	ldr	r4, [sp, #104]	; 0x68
   14f14:	str	lr, [sp, #92]	; 0x5c
   14f18:	add	r1, r4, r1
   14f1c:	str	r1, [sp, #104]	; 0x68
   14f20:	ldr	r4, [sp, #88]	; 0x58
   14f24:	add	r3, fp, r3
   14f28:	add	r4, r4, r5
   14f2c:	ldr	r5, [sp, #100]	; 0x64
   14f30:	str	r3, [sp, #80]	; 0x50
   14f34:	add	r0, r5, r0
   14f38:	ldr	r5, [sp, #84]	; 0x54
   14f3c:	str	r6, [sp, #180]	; 0xb4
   14f40:	add	r5, r5, r7
   14f44:	mov	r6, r3
   14f48:	ldr	r7, [sp, #96]	; 0x60
   14f4c:	mov	r9, r3
   14f50:	ldr	r3, [sp, #116]	; 0x74
   14f54:	add	ip, r7, ip
   14f58:	str	r0, [sp, #100]	; 0x64
   14f5c:	str	ip, [sp, #96]	; 0x60
   14f60:	mov	fp, ip
   14f64:	str	ip, [r3, #16]
   14f68:	str	r0, [r3, #20]
   14f6c:	mov	ip, r0
   14f70:	mov	r0, r1
   14f74:	str	r1, [r3, #24]
   14f78:	mov	r7, r0
   14f7c:	mov	r1, ip
   14f80:	str	r4, [sp, #88]	; 0x58
   14f84:	str	r5, [sp, #84]	; 0x54
   14f88:	str	r8, [sp, #168]	; 0xa8
   14f8c:	str	r6, [r3]
   14f90:	str	r5, [r3, #4]
   14f94:	str	r4, [r3, #8]
   14f98:	str	lr, [r3, #12]
   14f9c:	str	r2, [r3, #28]
   14fa0:	mov	sl, r4
   14fa4:	mov	ip, lr
   14fa8:	mov	r0, r2
   14fac:	bhi	12d60 <dcngettext@plt+0x1d70>
   14fb0:	add	sp, sp, #188	; 0xbc
   14fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fb8:			; <UNDEFINED> instruction: 0xc67178f2
   14fbc:	push	{r4, r5, r6, lr}
   14fc0:	mov	r4, r0
   14fc4:	ldr	r0, [r0, #40]	; 0x28
   14fc8:	ldr	r3, [r4, #32]
   14fcc:	cmp	r0, #55	; 0x37
   14fd0:	add	r3, r0, r3
   14fd4:	movhi	r5, #128	; 0x80
   14fd8:	movls	r5, #64	; 0x40
   14fdc:	movhi	r2, #120	; 0x78
   14fe0:	movls	r2, #56	; 0x38
   14fe4:	movhi	ip, #31
   14fe8:	movls	ip, #15
   14fec:	movhi	lr, #30
   14ff0:	movls	lr, #14
   14ff4:	cmp	r0, r3
   14ff8:	str	r3, [r4, #32]
   14ffc:	ldrhi	r1, [r4, #36]	; 0x24
   15000:	ldrls	r6, [r4, #36]	; 0x24
   15004:	addhi	r6, r1, #1
   15008:	lsr	r1, r3, #29
   1500c:	add	lr, r4, lr, lsl #2
   15010:	add	ip, r4, ip, lsl #2
   15014:	orr	r1, r1, r6, lsl #3
   15018:	lsl	r3, r3, #3
   1501c:	strhi	r6, [r4, #36]	; 0x24
   15020:	rev	r1, r1
   15024:	add	r6, r4, #44	; 0x2c
   15028:	rev	r3, r3
   1502c:	str	r1, [lr, #44]	; 0x2c
   15030:	sub	r2, r2, r0
   15034:	ldr	r1, [pc, #28]	; 15058 <dcngettext@plt+0x4068>
   15038:	add	r0, r6, r0
   1503c:	str	r3, [ip, #44]	; 0x2c
   15040:	bl	10dc8 <memcpy@plt>
   15044:	mov	r2, r4
   15048:	mov	r1, r5
   1504c:	mov	r0, r6
   15050:	pop	{r4, r5, r6, lr}
   15054:	b	12cd0 <dcngettext@plt+0x1ce0>
   15058:	andeq	r9, r1, ip, ror #16
   1505c:	push	{r4, r5, r6, lr}
   15060:	mov	r5, r1
   15064:	mov	r4, r0
   15068:	bl	14fbc <dcngettext@plt+0x3fcc>
   1506c:	mov	r1, r5
   15070:	mov	r0, r4
   15074:	pop	{r4, r5, r6, lr}
   15078:	b	12c78 <dcngettext@plt+0x1c88>
   1507c:	push	{r4, r5, r6, lr}
   15080:	mov	r5, r1
   15084:	mov	r4, r0
   15088:	bl	14fbc <dcngettext@plt+0x3fcc>
   1508c:	mov	r1, r5
   15090:	mov	r0, r4
   15094:	pop	{r4, r5, r6, lr}
   15098:	b	12ca4 <dcngettext@plt+0x1cb4>
   1509c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150a0:	mov	r6, r2
   150a4:	ldr	r4, [r2, #40]	; 0x28
   150a8:	mov	r8, r0
   150ac:	cmp	r4, #0
   150b0:	mov	r5, r1
   150b4:	bne	151a4 <dcngettext@plt+0x41b4>
   150b8:	cmp	r5, #63	; 0x3f
   150bc:	bls	15194 <dcngettext@plt+0x41a4>
   150c0:	tst	r8, #3
   150c4:	beq	15178 <dcngettext@plt+0x4188>
   150c8:	cmp	r5, #64	; 0x40
   150cc:	add	r7, r6, #44	; 0x2c
   150d0:	beq	15150 <dcngettext@plt+0x4160>
   150d4:	mov	sl, r5
   150d8:	mov	r4, r8
   150dc:	mov	r9, #64	; 0x40
   150e0:	add	r2, r4, #64	; 0x40
   150e4:	mov	r3, r7
   150e8:	ldr	lr, [r4]
   150ec:	ldr	ip, [r4, #4]
   150f0:	ldr	r0, [r4, #8]
   150f4:	ldr	r1, [r4, #12]
   150f8:	add	r4, r4, #16
   150fc:	cmp	r4, r2
   15100:	str	lr, [r3]
   15104:	str	ip, [r3, #4]
   15108:	str	r0, [r3, #8]
   1510c:	str	r1, [r3, #12]
   15110:	add	r3, r3, #16
   15114:	bne	150e8 <dcngettext@plt+0x40f8>
   15118:	sub	sl, sl, #64	; 0x40
   1511c:	mov	r2, r6
   15120:	mov	r1, r9
   15124:	mov	r0, r7
   15128:	bl	12cd0 <dcngettext@plt+0x1ce0>
   1512c:	cmp	sl, #64	; 0x40
   15130:	bhi	150e0 <dcngettext@plt+0x40f0>
   15134:	sub	r3, r5, #65	; 0x41
   15138:	bic	r2, r3, #63	; 0x3f
   1513c:	mov	r3, r2
   15140:	sub	r5, r5, #64	; 0x40
   15144:	add	r2, r2, #64	; 0x40
   15148:	sub	r5, r5, r3
   1514c:	add	r8, r8, r2
   15150:	ldr	r4, [r6, #40]	; 0x28
   15154:	mov	r1, r8
   15158:	add	r0, r7, r4
   1515c:	mov	r2, r5
   15160:	add	r4, r4, r5
   15164:	bl	10dc8 <memcpy@plt>
   15168:	cmp	r4, #63	; 0x3f
   1516c:	bhi	151e4 <dcngettext@plt+0x41f4>
   15170:	str	r4, [r6, #40]	; 0x28
   15174:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15178:	bic	r4, r5, #63	; 0x3f
   1517c:	mov	r0, r8
   15180:	mov	r1, r4
   15184:	mov	r2, r6
   15188:	bl	12cd0 <dcngettext@plt+0x1ce0>
   1518c:	and	r5, r5, #63	; 0x3f
   15190:	add	r8, r8, r4
   15194:	cmp	r5, #0
   15198:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1519c:	add	r7, r6, #44	; 0x2c
   151a0:	b	15150 <dcngettext@plt+0x4160>
   151a4:	rsb	r7, r4, #128	; 0x80
   151a8:	cmp	r7, r1
   151ac:	movcs	r7, r1
   151b0:	add	r9, r2, #44	; 0x2c
   151b4:	mov	r1, r8
   151b8:	mov	r2, r7
   151bc:	add	r0, r9, r4
   151c0:	bl	10dc8 <memcpy@plt>
   151c4:	ldr	r1, [r6, #40]	; 0x28
   151c8:	add	r1, r7, r1
   151cc:	cmp	r1, #64	; 0x40
   151d0:	str	r1, [r6, #40]	; 0x28
   151d4:	bhi	15210 <dcngettext@plt+0x4220>
   151d8:	add	r8, r8, r7
   151dc:	sub	r5, r5, r7
   151e0:	b	150b8 <dcngettext@plt+0x40c8>
   151e4:	sub	r4, r4, #64	; 0x40
   151e8:	mov	r2, r6
   151ec:	mov	r1, #64	; 0x40
   151f0:	mov	r0, r7
   151f4:	bl	12cd0 <dcngettext@plt+0x1ce0>
   151f8:	mov	r0, r7
   151fc:	mov	r2, r4
   15200:	add	r1, r6, #108	; 0x6c
   15204:	bl	10dc8 <memcpy@plt>
   15208:	str	r4, [r6, #40]	; 0x28
   1520c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15210:	mov	r2, r6
   15214:	mov	r0, r9
   15218:	bic	r1, r1, #63	; 0x3f
   1521c:	bl	12cd0 <dcngettext@plt+0x1ce0>
   15220:	ldr	r2, [r6, #40]	; 0x28
   15224:	add	r1, r4, r7
   15228:	and	r2, r2, #63	; 0x3f
   1522c:	bic	r1, r1, #63	; 0x3f
   15230:	add	r1, r9, r1
   15234:	mov	r0, r9
   15238:	str	r2, [r6, #40]	; 0x28
   1523c:	bl	10dc8 <memcpy@plt>
   15240:	b	151d8 <dcngettext@plt+0x41e8>
   15244:	push	{r4, r5, r6, lr}
   15248:	sub	sp, sp, #176	; 0xb0
   1524c:	ldr	r3, [pc, #112]	; 152c4 <dcngettext@plt+0x42d4>
   15250:	ldr	lr, [pc, #112]	; 152c8 <dcngettext@plt+0x42d8>
   15254:	ldr	ip, [pc, #112]	; 152cc <dcngettext@plt+0x42dc>
   15258:	str	r3, [sp, #4]
   1525c:	ldr	r3, [pc, #108]	; 152d0 <dcngettext@plt+0x42e0>
   15260:	str	lr, [sp, #8]
   15264:	str	ip, [sp, #12]
   15268:	ldr	lr, [pc, #100]	; 152d4 <dcngettext@plt+0x42e4>
   1526c:	ldr	ip, [pc, #100]	; 152d8 <dcngettext@plt+0x42e8>
   15270:	ldr	r6, [pc, #100]	; 152dc <dcngettext@plt+0x42ec>
   15274:	ldr	r5, [pc, #100]	; 152e0 <dcngettext@plt+0x42f0>
   15278:	mov	r4, r2
   1527c:	str	r3, [sp, #24]
   15280:	add	r2, sp, #4
   15284:	mov	r3, #0
   15288:	str	lr, [sp, #28]
   1528c:	str	ip, [sp, #32]
   15290:	str	r3, [sp, #40]	; 0x28
   15294:	str	r3, [sp, #36]	; 0x24
   15298:	str	r3, [sp, #44]	; 0x2c
   1529c:	str	r6, [sp, #16]
   152a0:	str	r5, [sp, #20]
   152a4:	bl	1509c <dcngettext@plt+0x40ac>
   152a8:	add	r0, sp, #4
   152ac:	bl	14fbc <dcngettext@plt+0x3fcc>
   152b0:	mov	r1, r4
   152b4:	add	r0, sp, #4
   152b8:	bl	12c78 <dcngettext@plt+0x1c88>
   152bc:	add	sp, sp, #176	; 0xb0
   152c0:	pop	{r4, r5, r6, pc}
   152c4:	bvs	28ec68 <stdout@@GLIBC_2.4+0x264afc>
   152c8:	bllt	1a00ce4 <stdout@@GLIBC_2.4+0x19d6b78>
   152cc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   152d0:	blls	16f508 <stdout@@GLIBC_2.4+0x14539c>
   152d4:	svcne	0x0083d9ab
   152d8:	blpl	ff848744 <stdout@@GLIBC_2.4+0xff81e5d8>
   152dc:	strbge	pc, [pc, #-1338]	; 14daa <dcngettext@plt+0x3dba>	; <UNPREDICTABLE>
   152e0:	tstpl	lr, pc, ror r2
   152e4:	push	{r4, r5, r6, lr}
   152e8:	sub	sp, sp, #176	; 0xb0
   152ec:	ldr	r3, [pc, #112]	; 15364 <dcngettext@plt+0x4374>
   152f0:	ldr	lr, [pc, #112]	; 15368 <dcngettext@plt+0x4378>
   152f4:	ldr	ip, [pc, #112]	; 1536c <dcngettext@plt+0x437c>
   152f8:	str	r3, [sp, #4]
   152fc:	ldr	r3, [pc, #108]	; 15370 <dcngettext@plt+0x4380>
   15300:	str	lr, [sp, #8]
   15304:	str	ip, [sp, #12]
   15308:	ldr	lr, [pc, #100]	; 15374 <dcngettext@plt+0x4384>
   1530c:	ldr	ip, [pc, #100]	; 15378 <dcngettext@plt+0x4388>
   15310:	ldr	r6, [pc, #100]	; 1537c <dcngettext@plt+0x438c>
   15314:	ldr	r5, [pc, #100]	; 15380 <dcngettext@plt+0x4390>
   15318:	mov	r4, r2
   1531c:	str	r3, [sp, #24]
   15320:	add	r2, sp, #4
   15324:	mov	r3, #0
   15328:	str	lr, [sp, #28]
   1532c:	str	ip, [sp, #32]
   15330:	str	r3, [sp, #40]	; 0x28
   15334:	str	r3, [sp, #36]	; 0x24
   15338:	str	r3, [sp, #44]	; 0x2c
   1533c:	str	r6, [sp, #16]
   15340:	str	r5, [sp, #20]
   15344:	bl	1509c <dcngettext@plt+0x40ac>
   15348:	add	r0, sp, #4
   1534c:	bl	14fbc <dcngettext@plt+0x3fcc>
   15350:	mov	r1, r4
   15354:	add	r0, sp, #4
   15358:	bl	12ca4 <dcngettext@plt+0x1cb4>
   1535c:	add	sp, sp, #176	; 0xb0
   15360:	pop	{r4, r5, r6, pc}
   15364:	ldrdgt	r9, [r5, -r8]
   15368:	ldrbtcc	sp, [ip], -r7, lsl #10
   1536c:	rsbscc	sp, r0, r7, lsl sp
   15370:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   15374:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   15378:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1537c:			; <UNDEFINED> instruction: 0xf70e5939
   15380:			; <UNDEFINED> instruction: 0xffc00b31
   15384:	push	{r4, r5}
   15388:	pop	{r4, r5}
   1538c:	b	10d98 <posix_fadvise64@plt>
   15390:	cmp	r0, #0
   15394:	bxeq	lr
   15398:	push	{r4, lr}
   1539c:	sub	sp, sp, #16
   153a0:	mov	r4, r1
   153a4:	bl	10f30 <fileno@plt>
   153a8:	mov	r2, #0
   153ac:	mov	r3, #0
   153b0:	str	r4, [sp, #8]
   153b4:	strd	r2, [sp]
   153b8:	bl	10d98 <posix_fadvise64@plt>
   153bc:	add	sp, sp, #16
   153c0:	pop	{r4, pc}
   153c4:	push	{r4, r5, lr}
   153c8:	sub	sp, sp, #12
   153cc:	mov	r4, r0
   153d0:	bl	10f30 <fileno@plt>
   153d4:	cmp	r0, #0
   153d8:	mov	r0, r4
   153dc:	blt	15458 <dcngettext@plt+0x4468>
   153e0:	bl	10e94 <__freading@plt>
   153e4:	cmp	r0, #0
   153e8:	bne	15424 <dcngettext@plt+0x4434>
   153ec:	mov	r0, r4
   153f0:	bl	15464 <dcngettext@plt+0x4474>
   153f4:	cmp	r0, #0
   153f8:	beq	15454 <dcngettext@plt+0x4464>
   153fc:	bl	10ef4 <__errno_location@plt>
   15400:	mov	r5, r0
   15404:	mov	r0, r4
   15408:	ldr	r4, [r5]
   1540c:	bl	10f48 <fclose@plt>
   15410:	cmp	r4, #0
   15414:	mvnne	r0, #0
   15418:	strne	r4, [r5]
   1541c:	add	sp, sp, #12
   15420:	pop	{r4, r5, pc}
   15424:	mov	r0, r4
   15428:	bl	10f30 <fileno@plt>
   1542c:	mov	r3, #1
   15430:	str	r3, [sp]
   15434:	mov	r2, #0
   15438:	mov	r3, #0
   1543c:	bl	10e40 <lseek64@plt>
   15440:	mvn	r3, #0
   15444:	mvn	r2, #0
   15448:	cmp	r1, r3
   1544c:	cmpeq	r0, r2
   15450:	bne	153ec <dcngettext@plt+0x43fc>
   15454:	mov	r0, r4
   15458:	add	sp, sp, #12
   1545c:	pop	{r4, r5, lr}
   15460:	b	10f48 <fclose@plt>
   15464:	push	{r4, lr}
   15468:	subs	r4, r0, #0
   1546c:	sub	sp, sp, #8
   15470:	beq	1548c <dcngettext@plt+0x449c>
   15474:	bl	10e94 <__freading@plt>
   15478:	cmp	r0, #0
   1547c:	beq	1548c <dcngettext@plt+0x449c>
   15480:	ldr	r3, [r4]
   15484:	tst	r3, #256	; 0x100
   15488:	bne	1549c <dcngettext@plt+0x44ac>
   1548c:	mov	r0, r4
   15490:	add	sp, sp, #8
   15494:	pop	{r4, lr}
   15498:	b	10da4 <fflush@plt>
   1549c:	mov	r3, #1
   154a0:	str	r3, [sp]
   154a4:	mov	r2, #0
   154a8:	mov	r3, #0
   154ac:	mov	r0, r4
   154b0:	bl	155b4 <dcngettext@plt+0x45c4>
   154b4:	mov	r0, r4
   154b8:	add	sp, sp, #8
   154bc:	pop	{r4, lr}
   154c0:	b	10da4 <fflush@plt>
   154c4:	push	{r4, r5, r6, lr}
   154c8:	mov	r5, r1
   154cc:	bl	10fa8 <fopen64@plt>
   154d0:	subs	r4, r0, #0
   154d4:	beq	154e4 <dcngettext@plt+0x44f4>
   154d8:	bl	10f30 <fileno@plt>
   154dc:	cmp	r0, #2
   154e0:	bls	154ec <dcngettext@plt+0x44fc>
   154e4:	mov	r0, r4
   154e8:	pop	{r4, r5, r6, pc}
   154ec:	bl	1752c <dcngettext@plt+0x653c>
   154f0:	subs	r6, r0, #0
   154f4:	blt	1553c <dcngettext@plt+0x454c>
   154f8:	mov	r0, r4
   154fc:	bl	153c4 <dcngettext@plt+0x43d4>
   15500:	cmp	r0, #0
   15504:	bne	1551c <dcngettext@plt+0x452c>
   15508:	mov	r1, r5
   1550c:	mov	r0, r6
   15510:	bl	10d50 <fdopen@plt>
   15514:	subs	r4, r0, #0
   15518:	bne	154e4 <dcngettext@plt+0x44f4>
   1551c:	bl	10ef4 <__errno_location@plt>
   15520:	mov	r4, #0
   15524:	mov	r5, r0
   15528:	mov	r0, r6
   1552c:	ldr	r6, [r5]
   15530:	bl	10fe4 <close@plt>
   15534:	str	r6, [r5]
   15538:	b	154e4 <dcngettext@plt+0x44f4>
   1553c:	bl	10ef4 <__errno_location@plt>
   15540:	mov	r5, r0
   15544:	mov	r0, r4
   15548:	ldr	r6, [r5]
   1554c:	mov	r4, #0
   15550:	bl	153c4 <dcngettext@plt+0x43d4>
   15554:	str	r6, [r5]
   15558:	b	154e4 <dcngettext@plt+0x44f4>
   1555c:	push	{r4, r5, lr}
   15560:	sub	sp, sp, #12
   15564:	mov	r5, r0
   15568:	bl	10ef4 <__errno_location@plt>
   1556c:	mov	r2, #0
   15570:	mov	r4, r0
   15574:	ldr	r3, [r0]
   15578:	str	r2, [r4]
   1557c:	mov	r0, r5
   15580:	str	r3, [sp]
   15584:	str	r3, [sp, #4]
   15588:	bl	10db0 <free@plt>
   1558c:	ldr	r3, [r4]
   15590:	add	r2, sp, #8
   15594:	cmp	r3, #0
   15598:	moveq	r3, #4
   1559c:	movne	r3, #0
   155a0:	add	r3, r2, r3
   155a4:	ldr	r3, [r3, #-8]
   155a8:	str	r3, [r4]
   155ac:	add	sp, sp, #12
   155b0:	pop	{r4, r5, pc}
   155b4:	push	{r4, r5, r6, r7, r8, lr}
   155b8:	sub	sp, sp, #8
   155bc:	ldmib	r0, {ip, lr}
   155c0:	mov	r4, r0
   155c4:	ldr	r5, [sp, #32]
   155c8:	cmp	lr, ip
   155cc:	beq	155e4 <dcngettext@plt+0x45f4>
   155d0:	str	r5, [sp, #32]
   155d4:	mov	r0, r4
   155d8:	add	sp, sp, #8
   155dc:	pop	{r4, r5, r6, r7, r8, lr}
   155e0:	b	10f54 <fseeko64@plt>
   155e4:	ldr	lr, [r0, #20]
   155e8:	ldr	ip, [r0, #16]
   155ec:	cmp	lr, ip
   155f0:	bne	155d0 <dcngettext@plt+0x45e0>
   155f4:	ldr	r8, [r0, #36]	; 0x24
   155f8:	cmp	r8, #0
   155fc:	bne	155d0 <dcngettext@plt+0x45e0>
   15600:	mov	r6, r2
   15604:	mov	r7, r3
   15608:	bl	10f30 <fileno@plt>
   1560c:	mov	r2, r6
   15610:	mov	r3, r7
   15614:	str	r5, [sp]
   15618:	bl	10e40 <lseek64@plt>
   1561c:	mvn	r3, #0
   15620:	mvn	r2, #0
   15624:	cmp	r1, r3
   15628:	cmpeq	r0, r2
   1562c:	beq	1564c <dcngettext@plt+0x465c>
   15630:	ldr	r3, [r4]
   15634:	strd	r0, [r4, #80]	; 0x50
   15638:	mov	r0, r8
   1563c:	bic	r3, r3, #16
   15640:	str	r3, [r4]
   15644:	add	sp, sp, #8
   15648:	pop	{r4, r5, r6, r7, r8, pc}
   1564c:	mvn	r0, #0
   15650:	b	15644 <dcngettext@plt+0x4654>
   15654:	push	{r4, r5, r6, lr}
   15658:	subs	r4, r0, #0
   1565c:	beq	156d0 <dcngettext@plt+0x46e0>
   15660:	mov	r1, #47	; 0x2f
   15664:	bl	10f84 <strrchr@plt>
   15668:	subs	r5, r0, #0
   1566c:	beq	156bc <dcngettext@plt+0x46cc>
   15670:	add	r6, r5, #1
   15674:	sub	r3, r6, r4
   15678:	cmp	r3, #6
   1567c:	ble	156bc <dcngettext@plt+0x46cc>
   15680:	mov	r2, #7
   15684:	ldr	r1, [pc, #96]	; 156ec <dcngettext@plt+0x46fc>
   15688:	sub	r0, r5, #6
   1568c:	bl	10fcc <strncmp@plt>
   15690:	cmp	r0, #0
   15694:	bne	156bc <dcngettext@plt+0x46cc>
   15698:	mov	r2, #3
   1569c:	ldr	r1, [pc, #76]	; 156f0 <dcngettext@plt+0x4700>
   156a0:	mov	r0, r6
   156a4:	bl	10fcc <strncmp@plt>
   156a8:	cmp	r0, #0
   156ac:	movne	r4, r6
   156b0:	ldreq	r3, [pc, #60]	; 156f4 <dcngettext@plt+0x4704>
   156b4:	addeq	r4, r5, #4
   156b8:	streq	r4, [r3]
   156bc:	ldr	r2, [pc, #52]	; 156f8 <dcngettext@plt+0x4708>
   156c0:	ldr	r3, [pc, #52]	; 156fc <dcngettext@plt+0x470c>
   156c4:	str	r4, [r2]
   156c8:	str	r4, [r3]
   156cc:	pop	{r4, r5, r6, pc}
   156d0:	ldr	r3, [pc, #40]	; 15700 <dcngettext@plt+0x4710>
   156d4:	mov	r2, #55	; 0x37
   156d8:	mov	r1, #1
   156dc:	ldr	r3, [r3]
   156e0:	ldr	r0, [pc, #28]	; 15704 <dcngettext@plt+0x4714>
   156e4:	bl	10e34 <fwrite@plt>
   156e8:	bl	10fd8 <abort@plt>
   156ec:	andeq	r9, r1, r4, ror #17
   156f0:	andeq	r9, r1, ip, ror #17
   156f4:	andeq	sl, r2, r0, asr r1
   156f8:	andeq	sl, r2, ip, lsl #3
   156fc:	andeq	sl, r2, r4, asr r1
   15700:	andeq	sl, r2, r0, ror #2
   15704:	andeq	r9, r1, ip, lsr #17
   15708:	push	{r4, r5, r6, lr}
   1570c:	mov	r2, #48	; 0x30
   15710:	mov	r4, r1
   15714:	mov	r1, #0
   15718:	mov	r5, r0
   1571c:	bl	10f18 <memset@plt>
   15720:	cmp	r4, #10
   15724:	beq	15734 <dcngettext@plt+0x4744>
   15728:	str	r4, [r5]
   1572c:	mov	r0, r5
   15730:	pop	{r4, r5, r6, pc}
   15734:	bl	10fd8 <abort@plt>
   15738:	push	{r4, r5, r6, lr}
   1573c:	mov	r4, r0
   15740:	mov	r5, r1
   15744:	bl	18300 <dcngettext@plt+0x7310>
   15748:	ldrb	r3, [r0]
   1574c:	bic	r3, r3, #32
   15750:	cmp	r3, #85	; 0x55
   15754:	bne	157b4 <dcngettext@plt+0x47c4>
   15758:	ldrb	r3, [r0, #1]
   1575c:	bic	r3, r3, #32
   15760:	cmp	r3, #84	; 0x54
   15764:	bne	157f0 <dcngettext@plt+0x4800>
   15768:	ldrb	r3, [r0, #2]
   1576c:	bic	r3, r3, #32
   15770:	cmp	r3, #70	; 0x46
   15774:	bne	157f0 <dcngettext@plt+0x4800>
   15778:	ldrb	r3, [r0, #3]
   1577c:	cmp	r3, #45	; 0x2d
   15780:	bne	157f0 <dcngettext@plt+0x4800>
   15784:	ldrb	r3, [r0, #4]
   15788:	cmp	r3, #56	; 0x38
   1578c:	bne	157f0 <dcngettext@plt+0x4800>
   15790:	ldrb	r3, [r0, #5]
   15794:	cmp	r3, #0
   15798:	bne	157f0 <dcngettext@plt+0x4800>
   1579c:	ldrb	r2, [r4]
   157a0:	ldr	r3, [pc, #152]	; 15840 <dcngettext@plt+0x4850>
   157a4:	ldr	r0, [pc, #152]	; 15844 <dcngettext@plt+0x4854>
   157a8:	cmp	r2, #96	; 0x60
   157ac:	movne	r0, r3
   157b0:	pop	{r4, r5, r6, pc}
   157b4:	cmp	r3, #71	; 0x47
   157b8:	bne	157f0 <dcngettext@plt+0x4800>
   157bc:	ldrb	r3, [r0, #1]
   157c0:	bic	r3, r3, #32
   157c4:	cmp	r3, #66	; 0x42
   157c8:	bne	157f0 <dcngettext@plt+0x4800>
   157cc:	ldrb	r3, [r0, #2]
   157d0:	cmp	r3, #49	; 0x31
   157d4:	bne	157f0 <dcngettext@plt+0x4800>
   157d8:	ldrb	r3, [r0, #3]
   157dc:	cmp	r3, #56	; 0x38
   157e0:	bne	157f0 <dcngettext@plt+0x4800>
   157e4:	ldrb	r3, [r0, #4]
   157e8:	cmp	r3, #48	; 0x30
   157ec:	beq	15804 <dcngettext@plt+0x4814>
   157f0:	ldr	r3, [pc, #80]	; 15848 <dcngettext@plt+0x4858>
   157f4:	cmp	r5, #9
   157f8:	ldr	r0, [pc, #76]	; 1584c <dcngettext@plt+0x485c>
   157fc:	movne	r0, r3
   15800:	pop	{r4, r5, r6, pc}
   15804:	ldrb	r3, [r0, #5]
   15808:	cmp	r3, #51	; 0x33
   1580c:	bne	157f0 <dcngettext@plt+0x4800>
   15810:	ldrb	r3, [r0, #6]
   15814:	cmp	r3, #48	; 0x30
   15818:	bne	157f0 <dcngettext@plt+0x4800>
   1581c:	ldrb	r3, [r0, #7]
   15820:	cmp	r3, #0
   15824:	bne	157f0 <dcngettext@plt+0x4800>
   15828:	ldrb	r2, [r4]
   1582c:	ldr	r3, [pc, #28]	; 15850 <dcngettext@plt+0x4860>
   15830:	ldr	r0, [pc, #28]	; 15854 <dcngettext@plt+0x4864>
   15834:	cmp	r2, #96	; 0x60
   15838:	movne	r0, r3
   1583c:	pop	{r4, r5, r6, pc}
   15840:	andeq	r9, r1, r8, asr #18
   15844:	andeq	r9, r1, r4, asr #18
   15848:	andeq	r9, r1, r8, asr r9
   1584c:	andeq	r9, r1, r4, asr r9
   15850:	andeq	r9, r1, r0, asr r9
   15854:	andeq	r9, r1, ip, asr #18
   15858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1585c:	sub	sp, sp, #116	; 0x74
   15860:	mov	sl, r0
   15864:	str	r3, [sp, #24]
   15868:	mov	r3, #1
   1586c:	mov	r8, r1
   15870:	str	r2, [sp, #56]	; 0x38
   15874:	str	r3, [sp, #36]	; 0x24
   15878:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   1587c:	ldr	r3, [sp, #156]	; 0x9c
   15880:	mov	fp, r8
   15884:	mov	r2, #0
   15888:	lsr	r3, r3, #1
   1588c:	and	r3, r3, #1
   15890:	str	r2, [sp, #68]	; 0x44
   15894:	str	r3, [sp, #28]
   15898:	str	r2, [sp, #40]	; 0x28
   1589c:	str	r2, [sp, #44]	; 0x2c
   158a0:	str	r2, [sp, #52]	; 0x34
   158a4:	str	r2, [sp, #64]	; 0x40
   158a8:	str	r2, [sp, #72]	; 0x48
   158ac:	str	sl, [sp, #32]
   158b0:	str	r0, [sp, #76]	; 0x4c
   158b4:	ldr	r3, [sp, #152]	; 0x98
   158b8:	cmp	r3, #10
   158bc:	ldrls	pc, [pc, r3, lsl #2]
   158c0:	b	16a80 <dcngettext@plt+0x5a90>
   158c4:	strdeq	r5, [r1], -r0
   158c8:	ldrdeq	r5, [r1], -r8
   158cc:	strdeq	r5, [r1], -ip
   158d0:	andeq	r5, r1, r0, lsr #24
   158d4:	andeq	r5, r1, ip, asr #26
   158d8:	andeq	r5, r1, r0, lsr #26
   158dc:	strdeq	r5, [r1], -r8
   158e0:	andeq	r5, r1, r4, lsr ip
   158e4:	andeq	r5, r1, ip, asr #24
   158e8:	andeq	r5, r1, ip, asr #24
   158ec:	andeq	r5, r1, ip, asr #24
   158f0:	mov	r3, #0
   158f4:	mov	r7, r3
   158f8:	str	r3, [sp, #28]
   158fc:	ldr	r3, [sp, #44]	; 0x2c
   15900:	mov	sl, #0
   15904:	eor	r3, r3, #1
   15908:	str	r3, [sp, #60]	; 0x3c
   1590c:	ldr	r3, [sp, #24]
   15910:	cmn	r3, #1
   15914:	beq	15e78 <dcngettext@plt+0x4e88>
   15918:	ldr	r3, [sp, #24]
   1591c:	subs	r5, r3, sl
   15920:	movne	r5, #1
   15924:	cmp	r5, #0
   15928:	beq	15e90 <dcngettext@plt+0x4ea0>
   1592c:	ldr	r3, [sp, #152]	; 0x98
   15930:	ldr	r8, [sp, #44]	; 0x2c
   15934:	cmp	r3, #2
   15938:	moveq	r8, #0
   1593c:	andne	r8, r8, #1
   15940:	ldr	r3, [sp, #52]	; 0x34
   15944:	adds	r9, r3, #0
   15948:	movne	r9, #1
   1594c:	ands	r6, r9, r8
   15950:	beq	162f8 <dcngettext@plt+0x5308>
   15954:	ldr	r2, [sp, #52]	; 0x34
   15958:	ldr	r1, [sp, #24]
   1595c:	cmp	r2, #1
   15960:	mov	r3, r2
   15964:	movls	r3, #0
   15968:	movhi	r3, #1
   1596c:	cmn	r1, #1
   15970:	movne	r3, #0
   15974:	cmp	r3, #0
   15978:	add	r4, sl, r2
   1597c:	beq	1598c <dcngettext@plt+0x499c>
   15980:	ldr	r0, [sp, #56]	; 0x38
   15984:	bl	10edc <strlen@plt>
   15988:	str	r0, [sp, #24]
   1598c:	ldr	r3, [sp, #24]
   15990:	cmp	r3, r4
   15994:	ldr	r3, [sp, #56]	; 0x38
   15998:	add	r3, r3, sl
   1599c:	str	r3, [sp, #48]	; 0x30
   159a0:	bcc	16304 <dcngettext@plt+0x5314>
   159a4:	mov	r0, r3
   159a8:	ldr	r2, [sp, #52]	; 0x34
   159ac:	ldr	r1, [sp, #64]	; 0x40
   159b0:	bl	10dec <memcmp@plt>
   159b4:	cmp	r0, #0
   159b8:	bne	16304 <dcngettext@plt+0x5314>
   159bc:	ldr	r3, [sp, #28]
   159c0:	cmp	r3, #0
   159c4:	bne	16b80 <dcngettext@plt+0x5b90>
   159c8:	ldr	r3, [sp, #48]	; 0x30
   159cc:	ldrb	r4, [r3]
   159d0:	cmp	r4, #126	; 0x7e
   159d4:	ldrls	pc, [pc, r4, lsl #2]
   159d8:	b	16298 <dcngettext@plt+0x52a8>
   159dc:	strheq	r6, [r1], -ip
   159e0:	muleq	r1, r8, r2
   159e4:	muleq	r1, r8, r2
   159e8:	muleq	r1, r8, r2
   159ec:	muleq	r1, r8, r2
   159f0:	muleq	r1, r8, r2
   159f4:	muleq	r1, r8, r2
   159f8:	andeq	r6, r1, r0, lsr #1
   159fc:	andeq	r6, r1, r4, lsl #1
   15a00:	andeq	r6, r1, r0, lsl #5
   15a04:	andeq	r5, r1, r4, ror #31
   15a08:	andeq	r5, r1, r8, asr #31
   15a0c:	andeq	r6, r1, ip, asr r2
   15a10:	andeq	r6, r1, r8, lsr r2
   15a14:	muleq	r1, r8, r2
   15a18:	muleq	r1, r8, r2
   15a1c:	muleq	r1, r8, r2
   15a20:	muleq	r1, r8, r2
   15a24:	muleq	r1, r8, r2
   15a28:	muleq	r1, r8, r2
   15a2c:	muleq	r1, r8, r2
   15a30:	muleq	r1, r8, r2
   15a34:	muleq	r1, r8, r2
   15a38:	muleq	r1, r8, r2
   15a3c:	muleq	r1, r8, r2
   15a40:	muleq	r1, r8, r2
   15a44:	muleq	r1, r8, r2
   15a48:	muleq	r1, r8, r2
   15a4c:	muleq	r1, r8, r2
   15a50:	muleq	r1, r8, r2
   15a54:	muleq	r1, r8, r2
   15a58:	muleq	r1, r8, r2
   15a5c:	andeq	r6, r1, r8, ror r2
   15a60:	andeq	r6, r1, ip, lsr #3
   15a64:	andeq	r6, r1, ip, lsr #3
   15a68:			; <UNDEFINED> instruction: 0x00015dbc
   15a6c:	andeq	r6, r1, ip, lsr #3
   15a70:	andeq	r6, r1, r4, asr #4
   15a74:	andeq	r6, r1, ip, lsr #3
   15a78:	andeq	r6, r1, r8, lsl r2
   15a7c:	andeq	r6, r1, ip, lsr #3
   15a80:	andeq	r6, r1, ip, lsr #3
   15a84:	andeq	r6, r1, ip, lsr #3
   15a88:	andeq	r6, r1, r4, asr #4
   15a8c:	andeq	r6, r1, r4, asr #4
   15a90:	andeq	r6, r1, r4, asr #4
   15a94:	andeq	r6, r1, r4, asr #4
   15a98:	andeq	r6, r1, r4, asr #4
   15a9c:	andeq	r6, r1, r4, asr #4
   15aa0:	andeq	r6, r1, r4, asr #4
   15aa4:	andeq	r6, r1, r4, asr #4
   15aa8:	andeq	r6, r1, r4, asr #4
   15aac:	andeq	r6, r1, r4, asr #4
   15ab0:	andeq	r6, r1, r4, asr #4
   15ab4:	andeq	r6, r1, r4, asr #4
   15ab8:	andeq	r6, r1, r4, asr #4
   15abc:	andeq	r6, r1, r4, asr #4
   15ac0:	andeq	r6, r1, r4, asr #4
   15ac4:	andeq	r6, r1, r4, asr #4
   15ac8:	andeq	r6, r1, ip, lsr #3
   15acc:	andeq	r6, r1, ip, lsr #3
   15ad0:	andeq	r6, r1, ip, lsr #3
   15ad4:	andeq	r6, r1, ip, lsr #3
   15ad8:	andeq	r6, r1, r8, ror #3
   15adc:	muleq	r1, r8, r2
   15ae0:	andeq	r6, r1, r4, asr #4
   15ae4:	andeq	r6, r1, r4, asr #4
   15ae8:	andeq	r6, r1, r4, asr #4
   15aec:	andeq	r6, r1, r4, asr #4
   15af0:	andeq	r6, r1, r4, asr #4
   15af4:	andeq	r6, r1, r4, asr #4
   15af8:	andeq	r6, r1, r4, asr #4
   15afc:	andeq	r6, r1, r4, asr #4
   15b00:	andeq	r6, r1, r4, asr #4
   15b04:	andeq	r6, r1, r4, asr #4
   15b08:	andeq	r6, r1, r4, asr #4
   15b0c:	andeq	r6, r1, r4, asr #4
   15b10:	andeq	r6, r1, r4, asr #4
   15b14:	andeq	r6, r1, r4, asr #4
   15b18:	andeq	r6, r1, r4, asr #4
   15b1c:	andeq	r6, r1, r4, asr #4
   15b20:	andeq	r6, r1, r4, asr #4
   15b24:	andeq	r6, r1, r4, asr #4
   15b28:	andeq	r6, r1, r4, asr #4
   15b2c:	andeq	r6, r1, r4, asr #4
   15b30:	andeq	r6, r1, r4, asr #4
   15b34:	andeq	r6, r1, r4, asr #4
   15b38:	andeq	r6, r1, r4, asr #4
   15b3c:	andeq	r6, r1, r4, asr #4
   15b40:	andeq	r6, r1, r4, asr #4
   15b44:	andeq	r6, r1, r4, asr #4
   15b48:	andeq	r6, r1, ip, lsr #3
   15b4c:	andeq	r5, r1, r8, lsl #30
   15b50:	andeq	r6, r1, r4, asr #4
   15b54:	andeq	r6, r1, ip, lsr #3
   15b58:	andeq	r6, r1, r4, asr #4
   15b5c:	andeq	r6, r1, ip, lsr #3
   15b60:	andeq	r6, r1, r4, asr #4
   15b64:	andeq	r6, r1, r4, asr #4
   15b68:	andeq	r6, r1, r4, asr #4
   15b6c:	andeq	r6, r1, r4, asr #4
   15b70:	andeq	r6, r1, r4, asr #4
   15b74:	andeq	r6, r1, r4, asr #4
   15b78:	andeq	r6, r1, r4, asr #4
   15b7c:	andeq	r6, r1, r4, asr #4
   15b80:	andeq	r6, r1, r4, asr #4
   15b84:	andeq	r6, r1, r4, asr #4
   15b88:	andeq	r6, r1, r4, asr #4
   15b8c:	andeq	r6, r1, r4, asr #4
   15b90:	andeq	r6, r1, r4, asr #4
   15b94:	andeq	r6, r1, r4, asr #4
   15b98:	andeq	r6, r1, r4, asr #4
   15b9c:	andeq	r6, r1, r4, asr #4
   15ba0:	andeq	r6, r1, r4, asr #4
   15ba4:	andeq	r6, r1, r4, asr #4
   15ba8:	andeq	r6, r1, r4, asr #4
   15bac:	andeq	r6, r1, r4, asr #4
   15bb0:	andeq	r6, r1, r4, asr #4
   15bb4:	andeq	r6, r1, r4, asr #4
   15bb8:	andeq	r6, r1, r4, asr #4
   15bbc:	andeq	r6, r1, r4, asr #4
   15bc0:	andeq	r6, r1, r4, asr #4
   15bc4:	andeq	r6, r1, r4, asr #4
   15bc8:	muleq	r1, ip, sp
   15bcc:	andeq	r6, r1, ip, lsr #3
   15bd0:	muleq	r1, ip, sp
   15bd4:			; <UNDEFINED> instruction: 0x00015dbc
   15bd8:	mov	r3, #1
   15bdc:	str	r3, [sp, #28]
   15be0:	str	r3, [sp, #52]	; 0x34
   15be4:	ldr	r3, [pc, #4000]	; 16b8c <dcngettext@plt+0x5b9c>
   15be8:	mov	r7, #0
   15bec:	str	r3, [sp, #64]	; 0x40
   15bf0:	mov	r3, #2
   15bf4:	str	r3, [sp, #152]	; 0x98
   15bf8:	b	158fc <dcngettext@plt+0x490c>
   15bfc:	ldr	r3, [sp, #28]
   15c00:	cmp	r3, #0
   15c04:	beq	15d60 <dcngettext@plt+0x4d70>
   15c08:	mov	r3, #1
   15c0c:	str	r3, [sp, #52]	; 0x34
   15c10:	ldr	r3, [pc, #3956]	; 16b8c <dcngettext@plt+0x5b9c>
   15c14:	mov	r7, #0
   15c18:	str	r3, [sp, #64]	; 0x40
   15c1c:	b	158fc <dcngettext@plt+0x490c>
   15c20:	mov	r3, #1
   15c24:	str	r3, [sp, #44]	; 0x2c
   15c28:	str	r3, [sp, #52]	; 0x34
   15c2c:	str	r3, [sp, #28]
   15c30:	b	15be4 <dcngettext@plt+0x4bf4>
   15c34:	mov	r3, #0
   15c38:	str	r3, [sp, #28]
   15c3c:	mov	r3, #1
   15c40:	str	r3, [sp, #44]	; 0x2c
   15c44:	mov	r7, #0
   15c48:	b	158fc <dcngettext@plt+0x490c>
   15c4c:	ldr	r3, [sp, #152]	; 0x98
   15c50:	cmp	r3, #10
   15c54:	beq	15c98 <dcngettext@plt+0x4ca8>
   15c58:	mov	r2, #5
   15c5c:	ldr	r1, [pc, #3884]	; 16b90 <dcngettext@plt+0x5ba0>
   15c60:	mov	r0, #0
   15c64:	bl	10e04 <dcgettext@plt>
   15c68:	ldr	r2, [pc, #3872]	; 16b90 <dcngettext@plt+0x5ba0>
   15c6c:	cmp	r0, r2
   15c70:	str	r0, [sp, #164]	; 0xa4
   15c74:	beq	16c7c <dcngettext@plt+0x5c8c>
   15c78:	mov	r2, #5
   15c7c:	ldr	r1, [pc, #3848]	; 16b8c <dcngettext@plt+0x5b9c>
   15c80:	mov	r0, #0
   15c84:	bl	10e04 <dcgettext@plt>
   15c88:	ldr	r2, [pc, #3836]	; 16b8c <dcngettext@plt+0x5b9c>
   15c8c:	cmp	r0, r2
   15c90:	str	r0, [sp, #168]	; 0xa8
   15c94:	beq	16c6c <dcngettext@plt+0x5c7c>
   15c98:	ldr	r7, [sp, #28]
   15c9c:	cmp	r7, #0
   15ca0:	movne	r7, #0
   15ca4:	bne	15cd8 <dcngettext@plt+0x4ce8>
   15ca8:	ldr	r3, [sp, #164]	; 0xa4
   15cac:	ldrb	r3, [r3]
   15cb0:	cmp	r3, #0
   15cb4:	beq	16c8c <dcngettext@plt+0x5c9c>
   15cb8:	ldr	r2, [sp, #164]	; 0xa4
   15cbc:	ldr	r1, [sp, #32]
   15cc0:	cmp	fp, r7
   15cc4:	strbhi	r3, [r1, r7]
   15cc8:	ldrb	r3, [r2, #1]!
   15ccc:	add	r7, r7, #1
   15cd0:	cmp	r3, #0
   15cd4:	bne	15cc0 <dcngettext@plt+0x4cd0>
   15cd8:	ldr	r0, [sp, #168]	; 0xa8
   15cdc:	bl	10edc <strlen@plt>
   15ce0:	ldr	r3, [sp, #168]	; 0xa8
   15ce4:	str	r3, [sp, #64]	; 0x40
   15ce8:	mov	r3, #1
   15cec:	str	r3, [sp, #44]	; 0x2c
   15cf0:	str	r0, [sp, #52]	; 0x34
   15cf4:	b	158fc <dcngettext@plt+0x490c>
   15cf8:	mov	r3, #1
   15cfc:	str	r3, [sp, #44]	; 0x2c
   15d00:	str	r3, [sp, #52]	; 0x34
   15d04:	str	r3, [sp, #28]
   15d08:	ldr	r3, [pc, #3716]	; 16b94 <dcngettext@plt+0x5ba4>
   15d0c:	mov	r7, #0
   15d10:	str	r3, [sp, #64]	; 0x40
   15d14:	mov	r3, #5
   15d18:	str	r3, [sp, #152]	; 0x98
   15d1c:	b	158fc <dcngettext@plt+0x490c>
   15d20:	ldr	r3, [sp, #28]
   15d24:	cmp	r3, #0
   15d28:	beq	16a28 <dcngettext@plt+0x5a38>
   15d2c:	ldr	r3, [sp, #28]
   15d30:	mov	r7, #0
   15d34:	str	r3, [sp, #44]	; 0x2c
   15d38:	mov	r3, #1
   15d3c:	str	r3, [sp, #52]	; 0x34
   15d40:	ldr	r3, [pc, #3660]	; 16b94 <dcngettext@plt+0x5ba4>
   15d44:	str	r3, [sp, #64]	; 0x40
   15d48:	b	158fc <dcngettext@plt+0x490c>
   15d4c:	ldr	r3, [sp, #28]
   15d50:	cmp	r3, #0
   15d54:	mov	r3, #1
   15d58:	streq	r3, [sp, #44]	; 0x2c
   15d5c:	bne	15be0 <dcngettext@plt+0x4bf0>
   15d60:	cmp	fp, #0
   15d64:	beq	16a58 <dcngettext@plt+0x5a68>
   15d68:	ldr	r3, [sp, #32]
   15d6c:	mov	r2, #39	; 0x27
   15d70:	mov	r7, #1
   15d74:	strb	r2, [r3]
   15d78:	mov	r3, #0
   15d7c:	str	r3, [sp, #28]
   15d80:	mov	r3, #1
   15d84:	str	r3, [sp, #52]	; 0x34
   15d88:	ldr	r3, [pc, #3580]	; 16b8c <dcngettext@plt+0x5b9c>
   15d8c:	str	r3, [sp, #64]	; 0x40
   15d90:	mov	r3, #2
   15d94:	str	r3, [sp, #152]	; 0x98
   15d98:	b	158fc <dcngettext@plt+0x490c>
   15d9c:	ldr	r3, [sp, #24]
   15da0:	cmn	r3, #1
   15da4:	beq	169bc <dcngettext@plt+0x59cc>
   15da8:	ldr	r3, [sp, #24]
   15dac:	subs	r3, r3, #1
   15db0:	movne	r3, #1
   15db4:	cmp	r3, #0
   15db8:	bne	15dc4 <dcngettext@plt+0x4dd4>
   15dbc:	cmp	sl, #0
   15dc0:	beq	161b0 <dcngettext@plt+0x51c0>
   15dc4:	ldr	r3, [sp, #152]	; 0x98
   15dc8:	mov	r5, #0
   15dcc:	sub	r2, r3, #2
   15dd0:	mov	r8, r5
   15dd4:	clz	r2, r2
   15dd8:	lsr	r2, r2, #5
   15ddc:	ldr	r3, [sp, #60]	; 0x3c
   15de0:	ldr	r1, [sp, #28]
   15de4:	orr	r3, r2, r3
   15de8:	eor	r3, r3, #1
   15dec:	orr	r3, r1, r3
   15df0:	tst	r3, #255	; 0xff
   15df4:	bne	16520 <dcngettext@plt+0x5530>
   15df8:	cmp	r6, #0
   15dfc:	bne	15f4c <dcngettext@plt+0x4f5c>
   15e00:	ldr	r3, [sp, #40]	; 0x28
   15e04:	eor	r8, r8, #1
   15e08:	and	r8, r8, r3
   15e0c:	add	sl, sl, #1
   15e10:	uxtb	r6, r8
   15e14:	cmp	r6, #0
   15e18:	beq	15e4c <dcngettext@plt+0x4e5c>
   15e1c:	cmp	fp, r7
   15e20:	movhi	r2, #39	; 0x27
   15e24:	ldrhi	r3, [sp, #32]
   15e28:	strbhi	r2, [r3, r7]
   15e2c:	add	r3, r7, #1
   15e30:	cmp	fp, r3
   15e34:	movhi	r1, #39	; 0x27
   15e38:	ldrhi	r2, [sp, #32]
   15e3c:	add	r7, r7, #2
   15e40:	strbhi	r1, [r2, r3]
   15e44:	mov	r3, #0
   15e48:	str	r3, [sp, #40]	; 0x28
   15e4c:	cmp	r7, fp
   15e50:	ldrcc	r3, [sp, #32]
   15e54:	strbcc	r4, [r3, r7]
   15e58:	ldr	r3, [sp, #36]	; 0x24
   15e5c:	cmp	r5, #0
   15e60:	moveq	r3, #0
   15e64:	str	r3, [sp, #36]	; 0x24
   15e68:	ldr	r3, [sp, #24]
   15e6c:	add	r7, r7, #1
   15e70:	cmn	r3, #1
   15e74:	bne	15918 <dcngettext@plt+0x4928>
   15e78:	ldr	r3, [sp, #56]	; 0x38
   15e7c:	ldrb	r5, [r3, sl]
   15e80:	adds	r5, r5, #0
   15e84:	movne	r5, #1
   15e88:	cmp	r5, #0
   15e8c:	bne	1592c <dcngettext@plt+0x493c>
   15e90:	ldr	r3, [sp, #152]	; 0x98
   15e94:	ldr	r1, [sp, #28]
   15e98:	sub	r3, r3, #2
   15e9c:	clz	r3, r3
   15ea0:	lsr	r3, r3, #5
   15ea4:	and	r9, r1, r3
   15ea8:	cmp	r7, #0
   15eac:	movne	r2, #0
   15eb0:	andeq	r2, r9, #1
   15eb4:	cmp	r2, #0
   15eb8:	bne	16894 <dcngettext@plt+0x58a4>
   15ebc:	eor	r2, r1, #1
   15ec0:	ands	r3, r3, r2
   15ec4:	beq	16d50 <dcngettext@plt+0x5d60>
   15ec8:	ldr	r2, [sp, #68]	; 0x44
   15ecc:	cmp	r2, #0
   15ed0:	beq	16d3c <dcngettext@plt+0x5d4c>
   15ed4:	ldr	r3, [sp, #36]	; 0x24
   15ed8:	cmp	r3, #0
   15edc:	bne	16cf4 <dcngettext@plt+0x5d04>
   15ee0:	ldr	r2, [sp, #72]	; 0x48
   15ee4:	clz	r3, fp
   15ee8:	cmp	r2, #0
   15eec:	lsr	r3, r3, #5
   15ef0:	moveq	r3, #0
   15ef4:	cmp	r3, #0
   15ef8:	beq	16c94 <dcngettext@plt+0x5ca4>
   15efc:	str	r3, [sp, #68]	; 0x44
   15f00:	ldr	fp, [sp, #72]	; 0x48
   15f04:	b	158b4 <dcngettext@plt+0x48c4>
   15f08:	ldr	r3, [sp, #152]	; 0x98
   15f0c:	cmp	r3, #2
   15f10:	beq	16564 <dcngettext@plt+0x5574>
   15f14:	ldr	r3, [sp, #44]	; 0x2c
   15f18:	ldr	r2, [sp, #28]
   15f1c:	and	r2, r3, r2
   15f20:	ands	r2, r9, r2
   15f24:	bne	16570 <dcngettext@plt+0x5580>
   15f28:	mov	r4, #92	; 0x5c
   15f2c:	mov	r3, r4
   15f30:	ldr	r1, [sp, #44]	; 0x2c
   15f34:	cmp	r1, #0
   15f38:	moveq	r5, #0
   15f3c:	moveq	r8, r1
   15f40:	beq	15ddc <dcngettext@plt+0x4dec>
   15f44:	mov	r4, r3
   15f48:	mov	r5, #0
   15f4c:	ldr	r3, [sp, #28]
   15f50:	cmp	r3, #0
   15f54:	bne	16558 <dcngettext@plt+0x5568>
   15f58:	ldr	r3, [sp, #40]	; 0x28
   15f5c:	eor	r9, r3, #1
   15f60:	and	r9, r9, r2
   15f64:	ands	r9, r9, #255	; 0xff
   15f68:	beq	15fac <dcngettext@plt+0x4fbc>
   15f6c:	cmp	fp, r7
   15f70:	movhi	r2, #39	; 0x27
   15f74:	ldrhi	r3, [sp, #32]
   15f78:	str	r9, [sp, #40]	; 0x28
   15f7c:	strbhi	r2, [r3, r7]
   15f80:	add	r3, r7, #1
   15f84:	cmp	fp, r3
   15f88:	movhi	r1, #36	; 0x24
   15f8c:	ldrhi	r2, [sp, #32]
   15f90:	strbhi	r1, [r2, r3]
   15f94:	add	r3, r7, #2
   15f98:	cmp	fp, r3
   15f9c:	add	r7, r7, #3
   15fa0:	ldrhi	r2, [sp, #32]
   15fa4:	movhi	r1, #39	; 0x27
   15fa8:	strbhi	r1, [r2, r3]
   15fac:	cmp	fp, r7
   15fb0:	movhi	r2, #92	; 0x5c
   15fb4:	ldrhi	r3, [sp, #32]
   15fb8:	add	sl, sl, #1
   15fbc:	strbhi	r2, [r3, r7]
   15fc0:	add	r7, r7, #1
   15fc4:	b	15e4c <dcngettext@plt+0x4e5c>
   15fc8:	ldr	r3, [sp, #152]	; 0x98
   15fcc:	mov	r4, #11
   15fd0:	sub	r2, r3, #2
   15fd4:	mov	r3, #118	; 0x76
   15fd8:	clz	r2, r2
   15fdc:	lsr	r2, r2, #5
   15fe0:	b	15f30 <dcngettext@plt+0x4f40>
   15fe4:	mov	r4, #10
   15fe8:	mov	r3, #110	; 0x6e
   15fec:	ldr	r2, [sp, #152]	; 0x98
   15ff0:	ldr	r1, [sp, #28]
   15ff4:	sub	r2, r2, #2
   15ff8:	clz	r2, r2
   15ffc:	lsr	r2, r2, #5
   16000:	ands	r1, r1, r2
   16004:	beq	15f30 <dcngettext@plt+0x4f40>
   16008:	ldr	sl, [sp, #32]
   1600c:	mov	r8, fp
   16010:	mov	r2, r1
   16014:	mov	r3, #2
   16018:	str	r3, [sp, #152]	; 0x98
   1601c:	ldr	r9, [sp, #44]	; 0x2c
   16020:	ldr	r3, [sp, #152]	; 0x98
   16024:	and	r9, r9, r2
   16028:	tst	r9, #255	; 0xff
   1602c:	movne	r3, #4
   16030:	str	r3, [sp, #152]	; 0x98
   16034:	ldr	r3, [sp, #156]	; 0x9c
   16038:	mov	ip, #0
   1603c:	bic	r3, r3, #2
   16040:	str	r3, [sp, #4]
   16044:	ldr	r3, [sp, #168]	; 0xa8
   16048:	ldr	r2, [sp, #56]	; 0x38
   1604c:	str	r3, [sp, #16]
   16050:	ldr	r3, [sp, #164]	; 0xa4
   16054:	mov	r1, r8
   16058:	str	r3, [sp, #12]
   1605c:	ldr	r3, [sp, #152]	; 0x98
   16060:	mov	r0, sl
   16064:	str	r3, [sp]
   16068:	str	ip, [sp, #8]
   1606c:	ldr	r3, [sp, #24]
   16070:	bl	15858 <dcngettext@plt+0x4868>
   16074:	mov	fp, r0
   16078:	mov	r0, fp
   1607c:	add	sp, sp, #116	; 0x74
   16080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16084:	ldr	r3, [sp, #152]	; 0x98
   16088:	mov	r4, #8
   1608c:	sub	r2, r3, #2
   16090:	mov	r3, #98	; 0x62
   16094:	clz	r2, r2
   16098:	lsr	r2, r2, #5
   1609c:	b	15f30 <dcngettext@plt+0x4f40>
   160a0:	ldr	r3, [sp, #152]	; 0x98
   160a4:	mov	r4, #7
   160a8:	sub	r2, r3, #2
   160ac:	mov	r3, #97	; 0x61
   160b0:	clz	r2, r2
   160b4:	lsr	r2, r2, #5
   160b8:	b	15f30 <dcngettext@plt+0x4f40>
   160bc:	ldr	r3, [sp, #44]	; 0x2c
   160c0:	cmp	r3, #0
   160c4:	beq	168a8 <dcngettext@plt+0x58b8>
   160c8:	ldr	r3, [sp, #28]
   160cc:	cmp	r3, #0
   160d0:	bne	16b80 <dcngettext@plt+0x5b90>
   160d4:	ldr	r3, [sp, #152]	; 0x98
   160d8:	sub	r2, r3, #2
   160dc:	ldr	r3, [sp, #40]	; 0x28
   160e0:	clz	r2, r2
   160e4:	eor	r3, r3, #1
   160e8:	lsr	r2, r2, #5
   160ec:	ands	r3, r2, r3
   160f0:	moveq	r1, r7
   160f4:	beq	16138 <dcngettext@plt+0x5148>
   160f8:	cmp	fp, r7
   160fc:	movhi	r0, #39	; 0x27
   16100:	ldrhi	r1, [sp, #32]
   16104:	str	r3, [sp, #40]	; 0x28
   16108:	strbhi	r0, [r1, r7]
   1610c:	add	r1, r7, #1
   16110:	cmp	fp, r1
   16114:	movhi	ip, #36	; 0x24
   16118:	ldrhi	r0, [sp, #32]
   1611c:	strbhi	ip, [r0, r1]
   16120:	add	r1, r7, #2
   16124:	cmp	fp, r1
   16128:	movhi	ip, #39	; 0x27
   1612c:	ldrhi	r0, [sp, #32]
   16130:	strbhi	ip, [r0, r1]
   16134:	add	r1, r7, #3
   16138:	cmp	fp, r1
   1613c:	movhi	r0, #92	; 0x5c
   16140:	ldrhi	r3, [sp, #32]
   16144:	add	r7, r1, #1
   16148:	strbhi	r0, [r3, r1]
   1614c:	cmp	r8, #0
   16150:	beq	16a94 <dcngettext@plt+0x5aa4>
   16154:	ldr	r0, [sp, #24]
   16158:	add	r3, sl, #1
   1615c:	cmp	r3, r0
   16160:	bcs	169d0 <dcngettext@plt+0x59e0>
   16164:	ldr	r0, [sp, #56]	; 0x38
   16168:	ldrb	r3, [r0, r3]
   1616c:	sub	r3, r3, #48	; 0x30
   16170:	cmp	r3, #9
   16174:	bhi	169d0 <dcngettext@plt+0x59e0>
   16178:	cmp	fp, r7
   1617c:	movhi	r3, #48	; 0x30
   16180:	ldrhi	r0, [sp, #32]
   16184:	ldr	r5, [sp, #28]
   16188:	mov	r4, #48	; 0x30
   1618c:	strbhi	r3, [r0, r7]
   16190:	add	r3, r1, #2
   16194:	cmp	fp, r3
   16198:	movhi	r0, #48	; 0x30
   1619c:	ldrhi	ip, [sp, #32]
   161a0:	add	r7, r1, #3
   161a4:	strbhi	r0, [ip, r3]
   161a8:	b	15ddc <dcngettext@plt+0x4dec>
   161ac:	mov	r5, #0
   161b0:	ldr	r3, [sp, #152]	; 0x98
   161b4:	sub	r2, r3, #2
   161b8:	ldr	r3, [sp, #28]
   161bc:	clz	r2, r2
   161c0:	lsr	r2, r2, #5
   161c4:	ands	r8, r3, r2
   161c8:	beq	15ddc <dcngettext@plt+0x4dec>
   161cc:	mov	r3, r8
   161d0:	mov	r2, r3
   161d4:	mov	r3, #2
   161d8:	ldr	sl, [sp, #32]
   161dc:	mov	r8, fp
   161e0:	str	r3, [sp, #152]	; 0x98
   161e4:	b	1601c <dcngettext@plt+0x502c>
   161e8:	ldr	r3, [sp, #152]	; 0x98
   161ec:	cmp	r3, #2
   161f0:	beq	16914 <dcngettext@plt+0x5924>
   161f4:	cmp	r3, #5
   161f8:	beq	168d4 <dcngettext@plt+0x58e4>
   161fc:	mov	r5, #0
   16200:	sub	r2, r3, #2
   16204:	mov	r8, r5
   16208:	clz	r2, r2
   1620c:	mov	r4, #63	; 0x3f
   16210:	lsr	r2, r2, #5
   16214:	b	15ddc <dcngettext@plt+0x4dec>
   16218:	ldr	r3, [sp, #152]	; 0x98
   1621c:	cmp	r3, #2
   16220:	beq	16934 <dcngettext@plt+0x5944>
   16224:	mov	r2, #0
   16228:	str	r5, [sp, #68]	; 0x44
   1622c:	mov	r8, r2
   16230:	mov	r4, #39	; 0x27
   16234:	b	15ddc <dcngettext@plt+0x4dec>
   16238:	mov	r4, #13
   1623c:	mov	r3, #114	; 0x72
   16240:	b	15fec <dcngettext@plt+0x4ffc>
   16244:	ldr	r3, [sp, #152]	; 0x98
   16248:	mov	r8, #0
   1624c:	sub	r2, r3, #2
   16250:	clz	r2, r2
   16254:	lsr	r2, r2, #5
   16258:	b	15ddc <dcngettext@plt+0x4dec>
   1625c:	ldr	r3, [sp, #152]	; 0x98
   16260:	mov	r4, #12
   16264:	sub	r2, r3, #2
   16268:	mov	r3, #102	; 0x66
   1626c:	clz	r2, r2
   16270:	lsr	r2, r2, #5
   16274:	b	15f30 <dcngettext@plt+0x4f40>
   16278:	mov	r5, r6
   1627c:	b	161b0 <dcngettext@plt+0x51c0>
   16280:	ldr	r3, [sp, #152]	; 0x98
   16284:	sub	r2, r3, #2
   16288:	mov	r3, #116	; 0x74
   1628c:	clz	r2, r2
   16290:	lsr	r2, r2, #5
   16294:	b	15f30 <dcngettext@plt+0x4f40>
   16298:	ldr	r8, [sp, #76]	; 0x4c
   1629c:	cmp	r8, #1
   162a0:	bne	16750 <dcngettext@plt+0x5760>
   162a4:	bl	10ec4 <__ctype_b_loc@plt>
   162a8:	sxth	r3, r4
   162ac:	mov	ip, r8
   162b0:	lsl	r3, r3, #1
   162b4:	ldr	r2, [r0]
   162b8:	ldrh	r3, [r2, r3]
   162bc:	and	r3, r3, #16384	; 0x4000
   162c0:	cmp	r3, #0
   162c4:	movne	r5, #1
   162c8:	moveq	r5, #0
   162cc:	moveq	r3, #1
   162d0:	movne	r3, #0
   162d4:	ldr	r2, [sp, #44]	; 0x2c
   162d8:	and	r3, r3, r2
   162dc:	ands	r8, r3, #255	; 0xff
   162e0:	bne	165e4 <dcngettext@plt+0x55f4>
   162e4:	ldr	r3, [sp, #152]	; 0x98
   162e8:	sub	r2, r3, #2
   162ec:	clz	r2, r2
   162f0:	lsr	r2, r2, #5
   162f4:	b	15ddc <dcngettext@plt+0x4dec>
   162f8:	ldr	r3, [sp, #56]	; 0x38
   162fc:	add	r3, r3, sl
   16300:	str	r3, [sp, #48]	; 0x30
   16304:	ldr	r3, [sp, #48]	; 0x30
   16308:	mov	r6, #0
   1630c:	ldrb	r4, [r3]
   16310:	cmp	r4, #126	; 0x7e
   16314:	ldrls	pc, [pc, r4, lsl #2]
   16318:	b	16298 <dcngettext@plt+0x52a8>
   1631c:	strheq	r6, [r1], -ip
   16320:	muleq	r1, r8, r2
   16324:	muleq	r1, r8, r2
   16328:	muleq	r1, r8, r2
   1632c:	muleq	r1, r8, r2
   16330:	muleq	r1, r8, r2
   16334:	muleq	r1, r8, r2
   16338:	andeq	r6, r1, r0, lsr #1
   1633c:	andeq	r6, r1, r4, lsl #1
   16340:	andeq	r6, r1, r8, lsl r5
   16344:	andeq	r5, r1, r4, ror #31
   16348:	andeq	r5, r1, r8, asr #31
   1634c:	andeq	r6, r1, ip, asr r2
   16350:	andeq	r6, r1, r8, lsr r2
   16354:	muleq	r1, r8, r2
   16358:	muleq	r1, r8, r2
   1635c:	muleq	r1, r8, r2
   16360:	muleq	r1, r8, r2
   16364:	muleq	r1, r8, r2
   16368:	muleq	r1, r8, r2
   1636c:	muleq	r1, r8, r2
   16370:	muleq	r1, r8, r2
   16374:	muleq	r1, r8, r2
   16378:	muleq	r1, r8, r2
   1637c:	muleq	r1, r8, r2
   16380:	muleq	r1, r8, r2
   16384:	muleq	r1, r8, r2
   16388:	muleq	r1, r8, r2
   1638c:	muleq	r1, r8, r2
   16390:	muleq	r1, r8, r2
   16394:	muleq	r1, r8, r2
   16398:	muleq	r1, r8, r2
   1639c:			; <UNDEFINED> instruction: 0x000161b0
   163a0:	andeq	r6, r1, ip, lsr #3
   163a4:	andeq	r6, r1, ip, lsr #3
   163a8:			; <UNDEFINED> instruction: 0x00015dbc
   163ac:	andeq	r6, r1, ip, lsr #3
   163b0:	andeq	r6, r1, r4, asr #4
   163b4:	andeq	r6, r1, ip, lsr #3
   163b8:	andeq	r6, r1, r8, lsl r2
   163bc:	andeq	r6, r1, ip, lsr #3
   163c0:	andeq	r6, r1, ip, lsr #3
   163c4:	andeq	r6, r1, ip, lsr #3
   163c8:	andeq	r6, r1, r4, asr #4
   163cc:	andeq	r6, r1, r4, asr #4
   163d0:	andeq	r6, r1, r4, asr #4
   163d4:	andeq	r6, r1, r4, asr #4
   163d8:	andeq	r6, r1, r4, asr #4
   163dc:	andeq	r6, r1, r4, asr #4
   163e0:	andeq	r6, r1, r4, asr #4
   163e4:	andeq	r6, r1, r4, asr #4
   163e8:	andeq	r6, r1, r4, asr #4
   163ec:	andeq	r6, r1, r4, asr #4
   163f0:	andeq	r6, r1, r4, asr #4
   163f4:	andeq	r6, r1, r4, asr #4
   163f8:	andeq	r6, r1, r4, asr #4
   163fc:	andeq	r6, r1, r4, asr #4
   16400:	andeq	r6, r1, r4, asr #4
   16404:	andeq	r6, r1, r4, asr #4
   16408:	andeq	r6, r1, ip, lsr #3
   1640c:	andeq	r6, r1, ip, lsr #3
   16410:	andeq	r6, r1, ip, lsr #3
   16414:	andeq	r6, r1, ip, lsr #3
   16418:	andeq	r6, r1, r8, ror #3
   1641c:	muleq	r1, r8, r2
   16420:	andeq	r6, r1, r4, asr #4
   16424:	andeq	r6, r1, r4, asr #4
   16428:	andeq	r6, r1, r4, asr #4
   1642c:	andeq	r6, r1, r4, asr #4
   16430:	andeq	r6, r1, r4, asr #4
   16434:	andeq	r6, r1, r4, asr #4
   16438:	andeq	r6, r1, r4, asr #4
   1643c:	andeq	r6, r1, r4, asr #4
   16440:	andeq	r6, r1, r4, asr #4
   16444:	andeq	r6, r1, r4, asr #4
   16448:	andeq	r6, r1, r4, asr #4
   1644c:	andeq	r6, r1, r4, asr #4
   16450:	andeq	r6, r1, r4, asr #4
   16454:	andeq	r6, r1, r4, asr #4
   16458:	andeq	r6, r1, r4, asr #4
   1645c:	andeq	r6, r1, r4, asr #4
   16460:	andeq	r6, r1, r4, asr #4
   16464:	andeq	r6, r1, r4, asr #4
   16468:	andeq	r6, r1, r4, asr #4
   1646c:	andeq	r6, r1, r4, asr #4
   16470:	andeq	r6, r1, r4, asr #4
   16474:	andeq	r6, r1, r4, asr #4
   16478:	andeq	r6, r1, r4, asr #4
   1647c:	andeq	r6, r1, r4, asr #4
   16480:	andeq	r6, r1, r4, asr #4
   16484:	andeq	r6, r1, r4, asr #4
   16488:	andeq	r6, r1, ip, lsr #3
   1648c:	andeq	r5, r1, r8, lsl #30
   16490:	andeq	r6, r1, r4, asr #4
   16494:	andeq	r6, r1, ip, lsr #3
   16498:	andeq	r6, r1, r4, asr #4
   1649c:	andeq	r6, r1, ip, lsr #3
   164a0:	andeq	r6, r1, r4, asr #4
   164a4:	andeq	r6, r1, r4, asr #4
   164a8:	andeq	r6, r1, r4, asr #4
   164ac:	andeq	r6, r1, r4, asr #4
   164b0:	andeq	r6, r1, r4, asr #4
   164b4:	andeq	r6, r1, r4, asr #4
   164b8:	andeq	r6, r1, r4, asr #4
   164bc:	andeq	r6, r1, r4, asr #4
   164c0:	andeq	r6, r1, r4, asr #4
   164c4:	andeq	r6, r1, r4, asr #4
   164c8:	andeq	r6, r1, r4, asr #4
   164cc:	andeq	r6, r1, r4, asr #4
   164d0:	andeq	r6, r1, r4, asr #4
   164d4:	andeq	r6, r1, r4, asr #4
   164d8:	andeq	r6, r1, r4, asr #4
   164dc:	andeq	r6, r1, r4, asr #4
   164e0:	andeq	r6, r1, r4, asr #4
   164e4:	andeq	r6, r1, r4, asr #4
   164e8:	andeq	r6, r1, r4, asr #4
   164ec:	andeq	r6, r1, r4, asr #4
   164f0:	andeq	r6, r1, r4, asr #4
   164f4:	andeq	r6, r1, r4, asr #4
   164f8:	andeq	r6, r1, r4, asr #4
   164fc:	andeq	r6, r1, r4, asr #4
   16500:	andeq	r6, r1, r4, asr #4
   16504:	andeq	r6, r1, r4, asr #4
   16508:	muleq	r1, ip, sp
   1650c:	andeq	r6, r1, ip, lsr #3
   16510:	muleq	r1, ip, sp
   16514:			; <UNDEFINED> instruction: 0x00015dbc
   16518:	mov	r3, #116	; 0x74
   1651c:	b	15fec <dcngettext@plt+0x4ffc>
   16520:	ldr	r3, [sp, #160]	; 0xa0
   16524:	cmp	r3, #0
   16528:	beq	15df8 <dcngettext@plt+0x4e08>
   1652c:	lsr	r3, r4, #5
   16530:	ldr	r0, [sp, #160]	; 0xa0
   16534:	uxtb	r3, r3
   16538:	and	r1, r4, #31
   1653c:	ldr	r0, [r0, r3, lsl #2]
   16540:	lsr	r3, r0, r1
   16544:	tst	r3, #1
   16548:	beq	15df8 <dcngettext@plt+0x4e08>
   1654c:	ldr	r3, [sp, #28]
   16550:	cmp	r3, #0
   16554:	beq	15f58 <dcngettext@plt+0x4f68>
   16558:	ldr	sl, [sp, #32]
   1655c:	mov	r8, fp
   16560:	b	1601c <dcngettext@plt+0x502c>
   16564:	ldr	r3, [sp, #28]
   16568:	cmp	r3, #0
   1656c:	bne	16ac0 <dcngettext@plt+0x5ad0>
   16570:	add	sl, sl, #1
   16574:	ldr	r6, [sp, #40]	; 0x28
   16578:	mov	r5, #0
   1657c:	mov	r4, #92	; 0x5c
   16580:	b	15e14 <dcngettext@plt+0x4e24>
   16584:	cmp	r9, r8
   16588:	bne	167f8 <dcngettext@plt+0x5808>
   1658c:	ldr	r0, [sp, #100]	; 0x64
   16590:	bl	10e28 <iswprint@plt>
   16594:	add	r5, r5, r4
   16598:	cmp	r0, #0
   1659c:	add	r0, sp, #104	; 0x68
   165a0:	moveq	r6, #0
   165a4:	bl	10dd4 <mbsinit@plt>
   165a8:	cmp	r0, #0
   165ac:	beq	1678c <dcngettext@plt+0x579c>
   165b0:	mov	r2, r6
   165b4:	mov	ip, r5
   165b8:	eor	r5, r2, #1
   165bc:	ldr	r4, [sp, #80]	; 0x50
   165c0:	ldr	r6, [sp, #84]	; 0x54
   165c4:	ldr	r7, [sp, #88]	; 0x58
   165c8:	uxtb	r5, r5
   165cc:	cmp	ip, #1
   165d0:	bls	16ad0 <dcngettext@plt+0x5ae0>
   165d4:	ldr	r3, [sp, #44]	; 0x2c
   165d8:	and	r8, r3, r5
   165dc:	mov	r5, r2
   165e0:	uxtb	r8, r8
   165e4:	add	r2, sl, ip
   165e8:	ldr	r0, [sp, #48]	; 0x30
   165ec:	mov	r1, #0
   165f0:	str	r5, [sp, #48]	; 0x30
   165f4:	ldr	r9, [sp, #28]
   165f8:	ldr	ip, [sp, #40]	; 0x28
   165fc:	ldr	r3, [sp, #32]
   16600:	ldr	r5, [sp, #152]	; 0x98
   16604:	b	166c0 <dcngettext@plt+0x56d0>
   16608:	cmp	r9, #0
   1660c:	bne	169e4 <dcngettext@plt+0x59f4>
   16610:	eor	r1, ip, #1
   16614:	cmp	r5, #2
   16618:	movne	r1, #0
   1661c:	andeq	r1, r1, #1
   16620:	cmp	r1, #0
   16624:	beq	1665c <dcngettext@plt+0x566c>
   16628:	cmp	fp, r7
   1662c:	movhi	ip, #39	; 0x27
   16630:	strbhi	ip, [r3, r7]
   16634:	add	ip, r7, #1
   16638:	cmp	fp, ip
   1663c:	movhi	lr, #36	; 0x24
   16640:	strbhi	lr, [r3, ip]
   16644:	add	ip, r7, #2
   16648:	cmp	fp, ip
   1664c:	movhi	lr, #39	; 0x27
   16650:	strbhi	lr, [r3, ip]
   16654:	add	r7, r7, #3
   16658:	mov	ip, r1
   1665c:	cmp	fp, r7
   16660:	movhi	r1, #92	; 0x5c
   16664:	strbhi	r1, [r3, r7]
   16668:	add	r1, r7, #1
   1666c:	cmp	fp, r1
   16670:	lsrhi	lr, r4, #6
   16674:	addhi	lr, lr, #48	; 0x30
   16678:	strbhi	lr, [r3, r1]
   1667c:	add	lr, r7, #2
   16680:	cmp	fp, lr
   16684:	lsrhi	r1, r4, #3
   16688:	andhi	r1, r1, #7
   1668c:	addhi	r1, r1, #48	; 0x30
   16690:	add	sl, sl, #1
   16694:	strbhi	r1, [r3, lr]
   16698:	and	r4, r4, #7
   1669c:	cmp	r2, sl
   166a0:	add	r4, r4, #48	; 0x30
   166a4:	add	r7, r7, #3
   166a8:	bls	16a08 <dcngettext@plt+0x5a18>
   166ac:	mov	r1, r8
   166b0:	cmp	fp, r7
   166b4:	strbhi	r4, [r3, r7]
   166b8:	ldrb	r4, [r0, #1]!
   166bc:	add	r7, r7, #1
   166c0:	cmp	r8, #0
   166c4:	bne	16608 <dcngettext@plt+0x5618>
   166c8:	cmp	r6, #0
   166cc:	bne	1671c <dcngettext@plt+0x572c>
   166d0:	eor	r6, r1, #1
   166d4:	and	r6, r6, ip
   166d8:	add	sl, sl, #1
   166dc:	cmp	r2, sl
   166e0:	uxtb	r6, r6
   166e4:	bls	16744 <dcngettext@plt+0x5754>
   166e8:	cmp	r6, #0
   166ec:	beq	166b0 <dcngettext@plt+0x56c0>
   166f0:	cmp	fp, r7
   166f4:	movhi	ip, #39	; 0x27
   166f8:	strbhi	ip, [r3, r7]
   166fc:	add	ip, r7, #1
   16700:	cmp	fp, ip
   16704:	movhi	lr, #39	; 0x27
   16708:	strbhi	lr, [r3, ip]
   1670c:	add	r7, r7, #2
   16710:	mov	r6, r8
   16714:	mov	ip, r8
   16718:	b	166b0 <dcngettext@plt+0x56c0>
   1671c:	cmp	fp, r7
   16720:	eor	r6, r1, #1
   16724:	movhi	lr, #92	; 0x5c
   16728:	and	r6, r6, ip
   1672c:	add	sl, sl, #1
   16730:	strbhi	lr, [r3, r7]
   16734:	cmp	r2, sl
   16738:	add	r7, r7, #1
   1673c:	uxtb	r6, r6
   16740:	bhi	166e8 <dcngettext@plt+0x56f8>
   16744:	str	ip, [sp, #40]	; 0x28
   16748:	ldr	r5, [sp, #48]	; 0x30
   1674c:	b	15e14 <dcngettext@plt+0x4e24>
   16750:	ldr	r3, [sp, #24]
   16754:	cmn	r3, #1
   16758:	mov	r3, #0
   1675c:	str	r3, [sp, #104]	; 0x68
   16760:	str	r3, [sp, #108]	; 0x6c
   16764:	beq	16a84 <dcngettext@plt+0x5a94>
   16768:	mov	r2, r5
   1676c:	mov	r3, #0
   16770:	str	r7, [sp, #88]	; 0x58
   16774:	ldr	r7, [sp, #152]	; 0x98
   16778:	str	r5, [sp, #92]	; 0x5c
   1677c:	str	r6, [sp, #84]	; 0x54
   16780:	mov	r5, r3
   16784:	mov	r6, r2
   16788:	str	r4, [sp, #80]	; 0x50
   1678c:	ldr	r3, [sp, #56]	; 0x38
   16790:	add	r9, sl, r5
   16794:	add	r8, r3, r9
   16798:	ldr	r3, [sp, #24]
   1679c:	mov	r1, r8
   167a0:	sub	r2, r3, r9
   167a4:	add	r0, sp, #100	; 0x64
   167a8:	add	r3, sp, #104	; 0x68
   167ac:	bl	18334 <dcngettext@plt+0x7344>
   167b0:	subs	r4, r0, #0
   167b4:	beq	16b5c <dcngettext@plt+0x5b6c>
   167b8:	cmn	r4, #1
   167bc:	beq	16b3c <dcngettext@plt+0x5b4c>
   167c0:	cmn	r4, #2
   167c4:	beq	16adc <dcngettext@plt+0x5aec>
   167c8:	ldr	r2, [sp, #28]
   167cc:	cmp	r7, #2
   167d0:	movne	r2, #0
   167d4:	andeq	r2, r2, #1
   167d8:	cmp	r2, #0
   167dc:	beq	1658c <dcngettext@plt+0x559c>
   167e0:	cmp	r4, #1
   167e4:	beq	1658c <dcngettext@plt+0x559c>
   167e8:	sub	r3, r4, #1
   167ec:	add	r9, r3, r9
   167f0:	ldr	r3, [sp, #56]	; 0x38
   167f4:	add	r9, r3, r9
   167f8:	ldrb	r3, [r8, #1]!
   167fc:	sub	r3, r3, #91	; 0x5b
   16800:	cmp	r3, #33	; 0x21
   16804:	ldrls	pc, [pc, r3, lsl #2]
   16808:	b	16584 <dcngettext@plt+0x5594>
   1680c:	muleq	r1, r4, r8
   16810:	muleq	r1, r4, r8
   16814:	andeq	r6, r1, r4, lsl #11
   16818:	muleq	r1, r4, r8
   1681c:	andeq	r6, r1, r4, lsl #11
   16820:	muleq	r1, r4, r8
   16824:	andeq	r6, r1, r4, lsl #11
   16828:	andeq	r6, r1, r4, lsl #11
   1682c:	andeq	r6, r1, r4, lsl #11
   16830:	andeq	r6, r1, r4, lsl #11
   16834:	andeq	r6, r1, r4, lsl #11
   16838:	andeq	r6, r1, r4, lsl #11
   1683c:	andeq	r6, r1, r4, lsl #11
   16840:	andeq	r6, r1, r4, lsl #11
   16844:	andeq	r6, r1, r4, lsl #11
   16848:	andeq	r6, r1, r4, lsl #11
   1684c:	andeq	r6, r1, r4, lsl #11
   16850:	andeq	r6, r1, r4, lsl #11
   16854:	andeq	r6, r1, r4, lsl #11
   16858:	andeq	r6, r1, r4, lsl #11
   1685c:	andeq	r6, r1, r4, lsl #11
   16860:	andeq	r6, r1, r4, lsl #11
   16864:	andeq	r6, r1, r4, lsl #11
   16868:	andeq	r6, r1, r4, lsl #11
   1686c:	andeq	r6, r1, r4, lsl #11
   16870:	andeq	r6, r1, r4, lsl #11
   16874:	andeq	r6, r1, r4, lsl #11
   16878:	andeq	r6, r1, r4, lsl #11
   1687c:	andeq	r6, r1, r4, lsl #11
   16880:	andeq	r6, r1, r4, lsl #11
   16884:	andeq	r6, r1, r4, lsl #11
   16888:	andeq	r6, r1, r4, lsl #11
   1688c:	andeq	r6, r1, r4, lsl #11
   16890:	muleq	r1, r4, r8
   16894:	mov	r3, #2
   16898:	ldr	sl, [sp, #32]
   1689c:	mov	r8, fp
   168a0:	str	r3, [sp, #152]	; 0x98
   168a4:	b	1601c <dcngettext@plt+0x502c>
   168a8:	ldr	r3, [sp, #156]	; 0x9c
   168ac:	tst	r3, #1
   168b0:	bne	169dc <dcngettext@plt+0x59ec>
   168b4:	ldr	r3, [sp, #152]	; 0x98
   168b8:	ldr	r4, [sp, #44]	; 0x2c
   168bc:	sub	r2, r3, #2
   168c0:	mov	r5, #0
   168c4:	clz	r2, r2
   168c8:	mov	r8, r4
   168cc:	lsr	r2, r2, #5
   168d0:	b	15ddc <dcngettext@plt+0x4dec>
   168d4:	ldr	r3, [sp, #156]	; 0x9c
   168d8:	ands	r9, r3, #4
   168dc:	beq	16a14 <dcngettext@plt+0x5a24>
   168e0:	ldr	r2, [sp, #24]
   168e4:	add	r3, sl, #2
   168e8:	cmp	r3, r2
   168ec:	bcs	16900 <dcngettext@plt+0x5910>
   168f0:	ldr	r2, [sp, #48]	; 0x30
   168f4:	ldrb	r4, [r2, #1]
   168f8:	cmp	r4, #63	; 0x3f
   168fc:	beq	16b9c <dcngettext@plt+0x5bac>
   16900:	mov	r2, #0
   16904:	mov	r8, r2
   16908:	mov	r5, r2
   1690c:	mov	r4, #63	; 0x3f
   16910:	b	15ddc <dcngettext@plt+0x4dec>
   16914:	ldr	r3, [sp, #28]
   16918:	cmp	r3, #0
   1691c:	bne	16c40 <dcngettext@plt+0x5c50>
   16920:	mov	r2, r5
   16924:	mov	r8, r3
   16928:	mov	r5, #0
   1692c:	mov	r4, #63	; 0x3f
   16930:	b	15ddc <dcngettext@plt+0x4dec>
   16934:	ldr	r3, [sp, #28]
   16938:	cmp	r3, #0
   1693c:	bne	16c40 <dcngettext@plt+0x5c50>
   16940:	ldr	r2, [sp, #72]	; 0x48
   16944:	adds	r3, fp, #0
   16948:	movne	r3, #1
   1694c:	cmp	r2, #0
   16950:	movne	r3, #0
   16954:	cmp	r3, #0
   16958:	strne	fp, [sp, #72]	; 0x48
   1695c:	movne	fp, #0
   16960:	bne	1699c <dcngettext@plt+0x59ac>
   16964:	cmp	fp, r7
   16968:	movhi	r2, #39	; 0x27
   1696c:	ldrhi	r3, [sp, #32]
   16970:	strbhi	r2, [r3, r7]
   16974:	add	r3, r7, #1
   16978:	cmp	fp, r3
   1697c:	movhi	r1, #92	; 0x5c
   16980:	ldrhi	r2, [sp, #32]
   16984:	strbhi	r1, [r2, r3]
   16988:	add	r3, r7, #2
   1698c:	cmp	fp, r3
   16990:	movhi	r1, #39	; 0x27
   16994:	ldrhi	r2, [sp, #32]
   16998:	strbhi	r1, [r2, r3]
   1699c:	ldr	r3, [sp, #28]
   169a0:	add	r7, r7, #3
   169a4:	mov	r2, r5
   169a8:	mov	r8, r3
   169ac:	str	r5, [sp, #68]	; 0x44
   169b0:	str	r3, [sp, #40]	; 0x28
   169b4:	mov	r4, #39	; 0x27
   169b8:	b	15ddc <dcngettext@plt+0x4dec>
   169bc:	ldr	r3, [sp, #56]	; 0x38
   169c0:	ldrb	r3, [r3, #1]
   169c4:	adds	r3, r3, #0
   169c8:	movne	r3, #1
   169cc:	b	15db4 <dcngettext@plt+0x4dc4>
   169d0:	ldr	r5, [sp, #28]
   169d4:	mov	r4, #48	; 0x30
   169d8:	b	15ddc <dcngettext@plt+0x4dec>
   169dc:	add	sl, sl, #1
   169e0:	b	1590c <dcngettext@plt+0x491c>
   169e4:	mov	sl, r3
   169e8:	ldr	r3, [sp, #28]
   169ec:	mov	r8, fp
   169f0:	str	r3, [sp, #44]	; 0x2c
   169f4:	ldr	r3, [sp, #152]	; 0x98
   169f8:	sub	r2, r3, #2
   169fc:	clz	r2, r2
   16a00:	lsr	r2, r2, #5
   16a04:	b	1601c <dcngettext@plt+0x502c>
   16a08:	str	ip, [sp, #40]	; 0x28
   16a0c:	ldr	r5, [sp, #48]	; 0x30
   16a10:	b	15e4c <dcngettext@plt+0x4e5c>
   16a14:	mov	r2, r9
   16a18:	mov	r8, r9
   16a1c:	mov	r5, #0
   16a20:	mov	r4, #63	; 0x3f
   16a24:	b	15ddc <dcngettext@plt+0x4dec>
   16a28:	cmp	fp, #0
   16a2c:	beq	16aa4 <dcngettext@plt+0x5ab4>
   16a30:	ldr	r1, [sp, #32]
   16a34:	mov	r3, #34	; 0x22
   16a38:	mov	r2, #1
   16a3c:	strb	r3, [r1]
   16a40:	ldr	r3, [pc, #332]	; 16b94 <dcngettext@plt+0x5ba4>
   16a44:	str	r2, [sp, #52]	; 0x34
   16a48:	mov	r7, r2
   16a4c:	str	r2, [sp, #44]	; 0x2c
   16a50:	str	r3, [sp, #64]	; 0x40
   16a54:	b	158fc <dcngettext@plt+0x490c>
   16a58:	ldr	r3, [pc, #300]	; 16b8c <dcngettext@plt+0x5b9c>
   16a5c:	str	r3, [sp, #64]	; 0x40
   16a60:	mov	r3, #0
   16a64:	str	r3, [sp, #28]
   16a68:	mov	r3, #1
   16a6c:	str	r3, [sp, #52]	; 0x34
   16a70:	mov	r7, r3
   16a74:	mov	r3, #2
   16a78:	str	r3, [sp, #152]	; 0x98
   16a7c:	b	158fc <dcngettext@plt+0x490c>
   16a80:	bl	10fd8 <abort@plt>
   16a84:	ldr	r0, [sp, #56]	; 0x38
   16a88:	bl	10edc <strlen@plt>
   16a8c:	str	r0, [sp, #24]
   16a90:	b	16768 <dcngettext@plt+0x5778>
   16a94:	mov	r5, r8
   16a98:	mov	r4, #48	; 0x30
   16a9c:	ldr	r8, [sp, #44]	; 0x2c
   16aa0:	b	15ddc <dcngettext@plt+0x4dec>
   16aa4:	mov	r3, #1
   16aa8:	str	r3, [sp, #52]	; 0x34
   16aac:	mov	r7, r3
   16ab0:	str	r3, [sp, #44]	; 0x2c
   16ab4:	ldr	r3, [pc, #216]	; 16b94 <dcngettext@plt+0x5ba4>
   16ab8:	str	r3, [sp, #64]	; 0x40
   16abc:	b	158fc <dcngettext@plt+0x490c>
   16ac0:	ldr	sl, [sp, #32]
   16ac4:	mov	r8, fp
   16ac8:	mov	r2, r3
   16acc:	b	1601c <dcngettext@plt+0x502c>
   16ad0:	mov	r3, r5
   16ad4:	mov	r5, r2
   16ad8:	b	162d4 <dcngettext@plt+0x52e4>
   16adc:	ldr	r1, [sp, #24]
   16ae0:	mov	r2, r5
   16ae4:	cmp	r1, r9
   16ae8:	mov	ip, r5
   16aec:	ldr	r4, [sp, #80]	; 0x50
   16af0:	ldr	r5, [sp, #92]	; 0x5c
   16af4:	ldr	r6, [sp, #84]	; 0x54
   16af8:	ldr	r7, [sp, #88]	; 0x58
   16afc:	bls	16b30 <dcngettext@plt+0x5b40>
   16b00:	ldrb	r3, [r8]
   16b04:	cmp	r3, #0
   16b08:	bne	16b1c <dcngettext@plt+0x5b2c>
   16b0c:	b	16b34 <dcngettext@plt+0x5b44>
   16b10:	ldrb	r3, [r8, #1]!
   16b14:	cmp	r3, #0
   16b18:	beq	16c34 <dcngettext@plt+0x5c44>
   16b1c:	add	r2, r2, #1
   16b20:	add	r3, sl, r2
   16b24:	cmp	r1, r3
   16b28:	bhi	16b10 <dcngettext@plt+0x5b20>
   16b2c:	mov	ip, r2
   16b30:	mov	r3, #0
   16b34:	mov	r2, r3
   16b38:	b	165cc <dcngettext@plt+0x55dc>
   16b3c:	mov	r3, #0
   16b40:	mov	ip, r5
   16b44:	ldr	r4, [sp, #80]	; 0x50
   16b48:	ldr	r5, [sp, #92]	; 0x5c
   16b4c:	ldr	r6, [sp, #84]	; 0x54
   16b50:	ldr	r7, [sp, #88]	; 0x58
   16b54:	mov	r2, r3
   16b58:	b	165cc <dcngettext@plt+0x55dc>
   16b5c:	mov	r3, r6
   16b60:	mov	ip, r5
   16b64:	eor	r5, r3, #1
   16b68:	mov	r2, r6
   16b6c:	ldr	r4, [sp, #80]	; 0x50
   16b70:	ldr	r6, [sp, #84]	; 0x54
   16b74:	ldr	r7, [sp, #88]	; 0x58
   16b78:	uxtb	r5, r5
   16b7c:	b	165cc <dcngettext@plt+0x55dc>
   16b80:	ldr	sl, [sp, #32]
   16b84:	mov	r8, fp
   16b88:	b	169f0 <dcngettext@plt+0x5a00>
   16b8c:	andeq	r9, r1, r8, asr r9
   16b90:	andeq	r9, r1, ip, asr r9
   16b94:	andeq	r9, r1, r4, asr r9
   16b98:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   16b9c:	ldr	r2, [sp, #56]	; 0x38
   16ba0:	ldrb	r1, [r2, r3]
   16ba4:	sub	r2, r1, #33	; 0x21
   16ba8:	uxtb	r2, r2
   16bac:	cmp	r2, #29
   16bb0:	bhi	16c50 <dcngettext@plt+0x5c60>
   16bb4:	ldr	r0, [pc, #-36]	; 16b98 <dcngettext@plt+0x5ba8>
   16bb8:	mov	ip, #1
   16bbc:	ands	r2, r0, ip, lsl r2
   16bc0:	beq	16c60 <dcngettext@plt+0x5c70>
   16bc4:	ldr	r2, [sp, #28]
   16bc8:	cmp	r2, #0
   16bcc:	bne	16d60 <dcngettext@plt+0x5d70>
   16bd0:	cmp	fp, r7
   16bd4:	ldr	r8, [sp, #28]
   16bd8:	ldrhi	r2, [sp, #32]
   16bdc:	mov	sl, r3
   16be0:	mov	r5, r8
   16be4:	strbhi	r4, [r2, r7]
   16be8:	add	r2, r7, #1
   16bec:	cmp	fp, r2
   16bf0:	movhi	r0, #34	; 0x22
   16bf4:	ldrhi	ip, [sp, #32]
   16bf8:	mov	r4, r1
   16bfc:	strbhi	r0, [ip, r2]
   16c00:	add	r2, r7, #2
   16c04:	cmp	fp, r2
   16c08:	movhi	r0, #34	; 0x22
   16c0c:	ldrhi	ip, [sp, #32]
   16c10:	strbhi	r0, [ip, r2]
   16c14:	add	r2, r7, #3
   16c18:	cmp	fp, r2
   16c1c:	movhi	r0, #63	; 0x3f
   16c20:	ldrhi	ip, [sp, #32]
   16c24:	add	r7, r7, #4
   16c28:	strbhi	r0, [ip, r2]
   16c2c:	mov	r2, r8
   16c30:	b	15ddc <dcngettext@plt+0x4dec>
   16c34:	mov	ip, r2
   16c38:	mov	r2, r3
   16c3c:	b	165cc <dcngettext@plt+0x55dc>
   16c40:	ldr	sl, [sp, #32]
   16c44:	mov	r8, fp
   16c48:	ldr	r2, [sp, #28]
   16c4c:	b	1601c <dcngettext@plt+0x502c>
   16c50:	mov	r2, #0
   16c54:	mov	r8, r2
   16c58:	mov	r5, r2
   16c5c:	b	15ddc <dcngettext@plt+0x4dec>
   16c60:	mov	r8, r2
   16c64:	mov	r5, #0
   16c68:	b	15ddc <dcngettext@plt+0x4dec>
   16c6c:	ldr	r1, [sp, #152]	; 0x98
   16c70:	bl	15738 <dcngettext@plt+0x4748>
   16c74:	str	r0, [sp, #168]	; 0xa8
   16c78:	b	15c98 <dcngettext@plt+0x4ca8>
   16c7c:	ldr	r1, [sp, #152]	; 0x98
   16c80:	bl	15738 <dcngettext@plt+0x4748>
   16c84:	str	r0, [sp, #164]	; 0xa4
   16c88:	b	15c78 <dcngettext@plt+0x4c88>
   16c8c:	ldr	r7, [sp, #28]
   16c90:	b	15cd8 <dcngettext@plt+0x4ce8>
   16c94:	ldr	sl, [sp, #32]
   16c98:	ldr	r2, [sp, #68]	; 0x44
   16c9c:	mov	r8, fp
   16ca0:	mov	fp, r7
   16ca4:	ldr	r3, [sp, #64]	; 0x40
   16ca8:	cmp	r3, #0
   16cac:	moveq	r2, #0
   16cb0:	andne	r2, r2, #1
   16cb4:	cmp	r2, #0
   16cb8:	beq	16ce4 <dcngettext@plt+0x5cf4>
   16cbc:	mov	r2, r3
   16cc0:	ldrb	r3, [r3]
   16cc4:	cmp	r3, #0
   16cc8:	beq	16ce4 <dcngettext@plt+0x5cf4>
   16ccc:	cmp	r8, fp
   16cd0:	strbhi	r3, [sl, fp]
   16cd4:	ldrb	r3, [r2, #1]!
   16cd8:	add	fp, fp, #1
   16cdc:	cmp	r3, #0
   16ce0:	bne	16ccc <dcngettext@plt+0x5cdc>
   16ce4:	cmp	r8, fp
   16ce8:	movhi	r3, #0
   16cec:	strbhi	r3, [sl, fp]
   16cf0:	b	16078 <dcngettext@plt+0x5088>
   16cf4:	ldr	r3, [sp, #168]	; 0xa8
   16cf8:	ldr	sl, [sp, #32]
   16cfc:	str	r3, [sp, #16]
   16d00:	ldr	r3, [sp, #164]	; 0xa4
   16d04:	mov	ip, #5
   16d08:	str	r3, [sp, #12]
   16d0c:	ldr	r3, [sp, #160]	; 0xa0
   16d10:	ldr	r2, [sp, #56]	; 0x38
   16d14:	str	r3, [sp, #8]
   16d18:	ldr	r3, [sp, #156]	; 0x9c
   16d1c:	ldr	r1, [sp, #72]	; 0x48
   16d20:	str	r3, [sp, #4]
   16d24:	mov	r0, sl
   16d28:	ldr	r3, [sp, #24]
   16d2c:	str	ip, [sp]
   16d30:	bl	15858 <dcngettext@plt+0x4868>
   16d34:	mov	fp, r0
   16d38:	b	16078 <dcngettext@plt+0x5088>
   16d3c:	mov	r8, fp
   16d40:	ldr	sl, [sp, #32]
   16d44:	mov	fp, r7
   16d48:	mov	r2, r3
   16d4c:	b	16ca4 <dcngettext@plt+0x5cb4>
   16d50:	mov	r8, fp
   16d54:	ldr	sl, [sp, #32]
   16d58:	mov	fp, r7
   16d5c:	b	16ca4 <dcngettext@plt+0x5cb4>
   16d60:	ldr	sl, [sp, #32]
   16d64:	mov	r8, fp
   16d68:	b	16034 <dcngettext@plt+0x5044>
   16d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d70:	sub	sp, sp, #52	; 0x34
   16d74:	mov	r4, r0
   16d78:	mov	r5, r3
   16d7c:	mov	sl, r1
   16d80:	mov	fp, r2
   16d84:	bl	10ef4 <__errno_location@plt>
   16d88:	ldr	r7, [pc, #412]	; 16f2c <dcngettext@plt+0x5f3c>
   16d8c:	cmn	r4, #-2147483647	; 0x80000001
   16d90:	ldr	r6, [r7]
   16d94:	mov	r8, r0
   16d98:	movne	r0, #0
   16d9c:	moveq	r0, #1
   16da0:	ldr	r3, [r8]
   16da4:	orrs	r0, r0, r4, lsr #31
   16da8:	str	r3, [sp, #24]
   16dac:	bne	16f28 <dcngettext@plt+0x5f38>
   16db0:	ldr	r2, [r7, #4]
   16db4:	cmp	r4, r2
   16db8:	blt	16e18 <dcngettext@plt+0x5e28>
   16dbc:	add	r9, r7, #8
   16dc0:	cmp	r6, r9
   16dc4:	str	r2, [sp, #44]	; 0x2c
   16dc8:	beq	16ef8 <dcngettext@plt+0x5f08>
   16dcc:	mov	r3, #8
   16dd0:	sub	r2, r4, r2
   16dd4:	mov	r0, r6
   16dd8:	str	r3, [sp]
   16ddc:	add	r2, r2, #1
   16de0:	mvn	r3, #-2147483648	; 0x80000000
   16de4:	add	r1, sp, #44	; 0x2c
   16de8:	bl	17be4 <dcngettext@plt+0x6bf4>
   16dec:	mov	r6, r0
   16df0:	str	r0, [r7]
   16df4:	ldr	r0, [r7, #4]
   16df8:	ldr	r2, [sp, #44]	; 0x2c
   16dfc:	mov	r1, #0
   16e00:	sub	r2, r2, r0
   16e04:	add	r0, r6, r0, lsl #3
   16e08:	lsl	r2, r2, #3
   16e0c:	bl	10f18 <memset@plt>
   16e10:	ldr	r3, [sp, #44]	; 0x2c
   16e14:	str	r3, [r7, #4]
   16e18:	add	r3, r6, r4, lsl #3
   16e1c:	ldr	r1, [r5, #4]
   16e20:	ldr	r7, [r3, #4]
   16e24:	ldr	r9, [r6, r4, lsl #3]
   16e28:	ldr	r2, [r5, #40]	; 0x28
   16e2c:	ldr	ip, [r5, #44]	; 0x2c
   16e30:	add	r0, r5, #8
   16e34:	str	r3, [sp, #28]
   16e38:	ldr	r3, [r5]
   16e3c:	orr	r1, r1, #1
   16e40:	mov	lr, r0
   16e44:	str	r1, [sp, #32]
   16e48:	str	r0, [sp, #36]	; 0x24
   16e4c:	str	r1, [sp, #4]
   16e50:	str	r2, [sp, #12]
   16e54:	str	r3, [sp]
   16e58:	mov	r0, r7
   16e5c:	mov	r1, r9
   16e60:	str	ip, [sp, #16]
   16e64:	str	lr, [sp, #8]
   16e68:	mov	r3, fp
   16e6c:	mov	r2, sl
   16e70:	bl	15858 <dcngettext@plt+0x4868>
   16e74:	cmp	r9, r0
   16e78:	bhi	16ee4 <dcngettext@plt+0x5ef4>
   16e7c:	ldr	r3, [pc, #172]	; 16f30 <dcngettext@plt+0x5f40>
   16e80:	add	r9, r0, #1
   16e84:	cmp	r7, r3
   16e88:	str	r9, [r6, r4, lsl #3]
   16e8c:	beq	16e98 <dcngettext@plt+0x5ea8>
   16e90:	mov	r0, r7
   16e94:	bl	1555c <dcngettext@plt+0x456c>
   16e98:	mov	r0, r9
   16e9c:	bl	17a80 <dcngettext@plt+0x6a90>
   16ea0:	ldr	lr, [sp, #28]
   16ea4:	ldr	ip, [r5, #44]	; 0x2c
   16ea8:	ldr	r4, [r5, #40]	; 0x28
   16eac:	mov	r3, fp
   16eb0:	mov	r2, sl
   16eb4:	mov	r1, r9
   16eb8:	str	r0, [lr, #4]
   16ebc:	ldr	lr, [r5]
   16ec0:	ldr	r5, [sp, #36]	; 0x24
   16ec4:	str	ip, [sp, #16]
   16ec8:	str	r5, [sp, #8]
   16ecc:	ldr	r5, [sp, #32]
   16ed0:	str	r4, [sp, #12]
   16ed4:	str	r5, [sp, #4]
   16ed8:	str	lr, [sp]
   16edc:	mov	r7, r0
   16ee0:	bl	15858 <dcngettext@plt+0x4868>
   16ee4:	ldr	r3, [sp, #24]
   16ee8:	mov	r0, r7
   16eec:	str	r3, [r8]
   16ef0:	add	sp, sp, #52	; 0x34
   16ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ef8:	mov	r3, #8
   16efc:	sub	r2, r4, r2
   16f00:	str	r3, [sp]
   16f04:	add	r1, sp, #44	; 0x2c
   16f08:	add	r2, r2, #1
   16f0c:	mvn	r3, #-2147483648	; 0x80000000
   16f10:	bl	17be4 <dcngettext@plt+0x6bf4>
   16f14:	mov	r6, r0
   16f18:	ldm	r9, {r0, r1}
   16f1c:	str	r6, [r7]
   16f20:	stm	r6, {r0, r1}
   16f24:	b	16df4 <dcngettext@plt+0x5e04>
   16f28:	bl	10fd8 <abort@plt>
   16f2c:	andeq	sl, r2, ip, lsl #2
   16f30:	muleq	r2, r0, r1
   16f34:	push	{r4, r5, r6, lr}
   16f38:	mov	r5, r0
   16f3c:	bl	10ef4 <__errno_location@plt>
   16f40:	cmp	r5, #0
   16f44:	mov	r1, #48	; 0x30
   16f48:	mov	r4, r0
   16f4c:	ldr	r0, [pc, #16]	; 16f64 <dcngettext@plt+0x5f74>
   16f50:	ldr	r6, [r4]
   16f54:	movne	r0, r5
   16f58:	bl	17ee0 <dcngettext@plt+0x6ef0>
   16f5c:	str	r6, [r4]
   16f60:	pop	{r4, r5, r6, pc}
   16f64:	muleq	r2, r0, r2
   16f68:	ldr	r3, [pc, #12]	; 16f7c <dcngettext@plt+0x5f8c>
   16f6c:	cmp	r0, #0
   16f70:	moveq	r0, r3
   16f74:	ldr	r0, [r0]
   16f78:	bx	lr
   16f7c:	muleq	r2, r0, r2
   16f80:	ldr	r3, [pc, #12]	; 16f94 <dcngettext@plt+0x5fa4>
   16f84:	cmp	r0, #0
   16f88:	moveq	r0, r3
   16f8c:	str	r1, [r0]
   16f90:	bx	lr
   16f94:	muleq	r2, r0, r2
   16f98:	ldr	r3, [pc, #52]	; 16fd4 <dcngettext@plt+0x5fe4>
   16f9c:	cmp	r0, #0
   16fa0:	moveq	r0, r3
   16fa4:	add	r3, r0, #8
   16fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   16fac:	lsr	lr, r1, #5
   16fb0:	and	r1, r1, #31
   16fb4:	ldr	ip, [r3, lr, lsl #2]
   16fb8:	lsr	r0, ip, r1
   16fbc:	eor	r2, r2, r0
   16fc0:	and	r2, r2, #1
   16fc4:	and	r0, r0, #1
   16fc8:	eor	r1, ip, r2, lsl r1
   16fcc:	str	r1, [r3, lr, lsl #2]
   16fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd4:	muleq	r2, r0, r2
   16fd8:	ldr	r3, [pc, #16]	; 16ff0 <dcngettext@plt+0x6000>
   16fdc:	cmp	r0, #0
   16fe0:	movne	r3, r0
   16fe4:	ldr	r0, [r3, #4]
   16fe8:	str	r1, [r3, #4]
   16fec:	bx	lr
   16ff0:	muleq	r2, r0, r2
   16ff4:	ldr	r3, [pc, #44]	; 17028 <dcngettext@plt+0x6038>
   16ff8:	cmp	r0, #0
   16ffc:	moveq	r0, r3
   17000:	mov	ip, #10
   17004:	cmp	r2, #0
   17008:	cmpne	r1, #0
   1700c:	str	ip, [r0]
   17010:	beq	17020 <dcngettext@plt+0x6030>
   17014:	str	r1, [r0, #40]	; 0x28
   17018:	str	r2, [r0, #44]	; 0x2c
   1701c:	bx	lr
   17020:	push	{r4, lr}
   17024:	bl	10fd8 <abort@plt>
   17028:	muleq	r2, r0, r2
   1702c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17030:	sub	sp, sp, #24
   17034:	ldr	ip, [pc, #108]	; 170a8 <dcngettext@plt+0x60b8>
   17038:	ldr	r4, [sp, #56]	; 0x38
   1703c:	mov	r9, r2
   17040:	cmp	r4, #0
   17044:	moveq	r4, ip
   17048:	mov	sl, r3
   1704c:	mov	r7, r0
   17050:	mov	r8, r1
   17054:	bl	10ef4 <__errno_location@plt>
   17058:	ldr	r3, [r4, #44]	; 0x2c
   1705c:	mov	r1, r8
   17060:	ldr	r6, [r0]
   17064:	str	r3, [sp, #16]
   17068:	ldr	r2, [r4, #40]	; 0x28
   1706c:	add	r3, r4, #8
   17070:	str	r3, [sp, #8]
   17074:	str	r2, [sp, #12]
   17078:	ldr	r2, [r4, #4]
   1707c:	mov	r5, r0
   17080:	str	r2, [sp, #4]
   17084:	ldr	ip, [r4]
   17088:	mov	r3, sl
   1708c:	mov	r2, r9
   17090:	mov	r0, r7
   17094:	str	ip, [sp]
   17098:	bl	15858 <dcngettext@plt+0x4868>
   1709c:	str	r6, [r5]
   170a0:	add	sp, sp, #24
   170a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   170a8:	muleq	r2, r0, r2
   170ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170b0:	cmp	r3, #0
   170b4:	sub	sp, sp, #44	; 0x2c
   170b8:	ldr	r4, [pc, #192]	; 17180 <dcngettext@plt+0x6190>
   170bc:	mov	r6, r2
   170c0:	movne	r4, r3
   170c4:	mov	r9, r1
   170c8:	mov	r8, r0
   170cc:	bl	10ef4 <__errno_location@plt>
   170d0:	ldr	r3, [r4, #44]	; 0x2c
   170d4:	ldr	r5, [r4, #4]
   170d8:	add	sl, r4, #8
   170dc:	cmp	r6, #0
   170e0:	orreq	r5, r5, #1
   170e4:	mov	r1, #0
   170e8:	ldr	r2, [r0]
   170ec:	str	r3, [sp, #16]
   170f0:	ldr	r3, [r4, #40]	; 0x28
   170f4:	stmib	sp, {r5, sl}
   170f8:	str	r3, [sp, #12]
   170fc:	ldr	r3, [r4]
   17100:	mov	r7, r0
   17104:	str	r2, [sp, #28]
   17108:	str	r3, [sp]
   1710c:	mov	r2, r8
   17110:	mov	r3, r9
   17114:	mov	r0, r1
   17118:	bl	15858 <dcngettext@plt+0x4868>
   1711c:	add	r1, r0, #1
   17120:	mov	fp, r0
   17124:	mov	r0, r1
   17128:	str	r1, [sp, #36]	; 0x24
   1712c:	bl	17a80 <dcngettext@plt+0x6a90>
   17130:	ldr	r3, [r4, #44]	; 0x2c
   17134:	mov	r2, r8
   17138:	str	r3, [sp, #16]
   1713c:	ldr	r3, [r4, #40]	; 0x28
   17140:	str	r5, [sp, #4]
   17144:	str	r3, [sp, #12]
   17148:	str	sl, [sp, #8]
   1714c:	ldr	ip, [r4]
   17150:	ldr	r1, [sp, #36]	; 0x24
   17154:	mov	r3, r9
   17158:	str	ip, [sp]
   1715c:	str	r0, [sp, #32]
   17160:	bl	15858 <dcngettext@plt+0x4868>
   17164:	ldr	r2, [sp, #28]
   17168:	cmp	r6, #0
   1716c:	str	r2, [r7]
   17170:	ldr	r0, [sp, #32]
   17174:	strne	fp, [r6]
   17178:	add	sp, sp, #44	; 0x2c
   1717c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17180:	muleq	r2, r0, r2
   17184:	mov	r3, r2
   17188:	mov	r2, #0
   1718c:	b	170ac <dcngettext@plt+0x60bc>
   17190:	push	{r4, r5, r6, r7, r8, lr}
   17194:	ldr	r6, [pc, #116]	; 17210 <dcngettext@plt+0x6220>
   17198:	ldr	r3, [r6, #4]
   1719c:	ldr	r7, [r6]
   171a0:	cmp	r3, #1
   171a4:	movgt	r5, r7
   171a8:	movgt	r4, #1
   171ac:	ble	171cc <dcngettext@plt+0x61dc>
   171b0:	ldr	r0, [r5, #12]
   171b4:	bl	1555c <dcngettext@plt+0x456c>
   171b8:	ldr	r3, [r6, #4]
   171bc:	add	r4, r4, #1
   171c0:	cmp	r3, r4
   171c4:	add	r5, r5, #8
   171c8:	bgt	171b0 <dcngettext@plt+0x61c0>
   171cc:	ldr	r0, [r7, #4]
   171d0:	ldr	r4, [pc, #60]	; 17214 <dcngettext@plt+0x6224>
   171d4:	cmp	r0, r4
   171d8:	beq	171ec <dcngettext@plt+0x61fc>
   171dc:	bl	1555c <dcngettext@plt+0x456c>
   171e0:	mov	r3, #256	; 0x100
   171e4:	str	r4, [r6, #12]
   171e8:	str	r3, [r6, #8]
   171ec:	ldr	r4, [pc, #36]	; 17218 <dcngettext@plt+0x6228>
   171f0:	cmp	r7, r4
   171f4:	beq	17204 <dcngettext@plt+0x6214>
   171f8:	mov	r0, r7
   171fc:	bl	1555c <dcngettext@plt+0x456c>
   17200:	str	r4, [r6]
   17204:	mov	r3, #1
   17208:	str	r3, [r6, #4]
   1720c:	pop	{r4, r5, r6, r7, r8, pc}
   17210:	andeq	sl, r2, ip, lsl #2
   17214:	muleq	r2, r0, r1
   17218:	andeq	sl, r2, r4, lsl r1
   1721c:	ldr	r3, [pc, #4]	; 17228 <dcngettext@plt+0x6238>
   17220:	mvn	r2, #0
   17224:	b	16d6c <dcngettext@plt+0x5d7c>
   17228:	muleq	r2, r0, r2
   1722c:	ldr	r3, [pc]	; 17234 <dcngettext@plt+0x6244>
   17230:	b	16d6c <dcngettext@plt+0x5d7c>
   17234:	muleq	r2, r0, r2
   17238:	mov	r1, r0
   1723c:	ldr	r3, [pc, #8]	; 1724c <dcngettext@plt+0x625c>
   17240:	mvn	r2, #0
   17244:	mov	r0, #0
   17248:	b	16d6c <dcngettext@plt+0x5d7c>
   1724c:	muleq	r2, r0, r2
   17250:	mov	r2, r1
   17254:	ldr	r3, [pc, #8]	; 17264 <dcngettext@plt+0x6274>
   17258:	mov	r1, r0
   1725c:	mov	r0, #0
   17260:	b	16d6c <dcngettext@plt+0x5d7c>
   17264:	muleq	r2, r0, r2
   17268:	push	{r4, r5, lr}
   1726c:	sub	sp, sp, #52	; 0x34
   17270:	mov	r5, r2
   17274:	mov	r4, r0
   17278:	mov	r0, sp
   1727c:	bl	15708 <dcngettext@plt+0x4718>
   17280:	mov	r3, sp
   17284:	mov	r1, r5
   17288:	mov	r0, r4
   1728c:	mvn	r2, #0
   17290:	bl	16d6c <dcngettext@plt+0x5d7c>
   17294:	add	sp, sp, #52	; 0x34
   17298:	pop	{r4, r5, pc}
   1729c:	push	{r4, r5, r6, lr}
   172a0:	sub	sp, sp, #48	; 0x30
   172a4:	mov	r5, r2
   172a8:	mov	r6, r3
   172ac:	mov	r4, r0
   172b0:	mov	r0, sp
   172b4:	bl	15708 <dcngettext@plt+0x4718>
   172b8:	mov	r3, sp
   172bc:	mov	r2, r6
   172c0:	mov	r1, r5
   172c4:	mov	r0, r4
   172c8:	bl	16d6c <dcngettext@plt+0x5d7c>
   172cc:	add	sp, sp, #48	; 0x30
   172d0:	pop	{r4, r5, r6, pc}
   172d4:	mov	r2, r1
   172d8:	mov	r1, r0
   172dc:	mov	r0, #0
   172e0:	b	17268 <dcngettext@plt+0x6278>
   172e4:	mov	r3, r2
   172e8:	mov	r2, r1
   172ec:	mov	r1, r0
   172f0:	mov	r0, #0
   172f4:	b	1729c <dcngettext@plt+0x62ac>
   172f8:	push	{r4, r5, r6, r7, r8, lr}
   172fc:	mov	r7, r0
   17300:	ldr	lr, [pc, #100]	; 1736c <dcngettext@plt+0x637c>
   17304:	mov	r8, r1
   17308:	mov	r4, r2
   1730c:	ldm	lr!, {r0, r1, r2, r3}
   17310:	sub	sp, sp, #48	; 0x30
   17314:	mov	ip, sp
   17318:	lsr	r5, r4, #5
   1731c:	stmia	ip!, {r0, r1, r2, r3}
   17320:	add	r6, sp, #8
   17324:	ldm	lr!, {r0, r1, r2, r3}
   17328:	and	r4, r4, #31
   1732c:	stmia	ip!, {r0, r1, r2, r3}
   17330:	ldm	lr, {r0, r1, r2, r3}
   17334:	stm	ip, {r0, r1, r2, r3}
   17338:	mov	r2, r8
   1733c:	ldr	lr, [r6, r5, lsl #2]
   17340:	mov	r1, r7
   17344:	mov	r3, sp
   17348:	lsr	ip, lr, r4
   1734c:	eor	ip, ip, #1
   17350:	and	ip, ip, #1
   17354:	mov	r0, #0
   17358:	eor	r4, lr, ip, lsl r4
   1735c:	str	r4, [r6, r5, lsl #2]
   17360:	bl	16d6c <dcngettext@plt+0x5d7c>
   17364:	add	sp, sp, #48	; 0x30
   17368:	pop	{r4, r5, r6, r7, r8, pc}
   1736c:	muleq	r2, r0, r2
   17370:	mov	r2, r1
   17374:	mvn	r1, #0
   17378:	b	172f8 <dcngettext@plt+0x6308>
   1737c:	mov	r2, #58	; 0x3a
   17380:	mvn	r1, #0
   17384:	b	172f8 <dcngettext@plt+0x6308>
   17388:	mov	r2, #58	; 0x3a
   1738c:	b	172f8 <dcngettext@plt+0x6308>
   17390:	push	{r4, r5, r6, r7, lr}
   17394:	sub	sp, sp, #100	; 0x64
   17398:	mov	r6, r0
   1739c:	mov	r0, sp
   173a0:	mov	r7, r2
   173a4:	bl	15708 <dcngettext@plt+0x4718>
   173a8:	mov	ip, sp
   173ac:	add	lr, sp, #48	; 0x30
   173b0:	ldm	ip!, {r0, r1, r2, r3}
   173b4:	stmia	lr!, {r0, r1, r2, r3}
   173b8:	ldm	ip!, {r0, r1, r2, r3}
   173bc:	ldr	r5, [sp, #60]	; 0x3c
   173c0:	stmia	lr!, {r0, r1, r2, r3}
   173c4:	mvn	r4, r5
   173c8:	ldm	ip, {r0, r1, r2, r3}
   173cc:	and	ip, r4, #67108864	; 0x4000000
   173d0:	eor	ip, ip, r5
   173d4:	str	ip, [sp, #60]	; 0x3c
   173d8:	stm	lr, {r0, r1, r2, r3}
   173dc:	mov	r1, r7
   173e0:	mov	r0, r6
   173e4:	add	r3, sp, #48	; 0x30
   173e8:	mvn	r2, #0
   173ec:	bl	16d6c <dcngettext@plt+0x5d7c>
   173f0:	add	sp, sp, #100	; 0x64
   173f4:	pop	{r4, r5, r6, r7, pc}
   173f8:	push	{r4, r5, r6, r7, r8, lr}
   173fc:	mov	r5, r1
   17400:	ldr	lr, [pc, #100]	; 1746c <dcngettext@plt+0x647c>
   17404:	mov	r4, r2
   17408:	mov	r7, r0
   1740c:	mov	r8, r3
   17410:	ldm	lr!, {r0, r1, r2, r3}
   17414:	sub	sp, sp, #48	; 0x30
   17418:	mov	ip, sp
   1741c:	mov	r6, #10
   17420:	stmia	ip!, {r0, r1, r2, r3}
   17424:	cmp	r4, #0
   17428:	cmpne	r5, #0
   1742c:	ldm	lr!, {r0, r1, r2, r3}
   17430:	str	r6, [sp]
   17434:	stmia	ip!, {r0, r1, r2, r3}
   17438:	ldm	lr, {r0, r1, r2, r3}
   1743c:	stm	ip, {r0, r1, r2, r3}
   17440:	beq	17468 <dcngettext@plt+0x6478>
   17444:	mov	r3, sp
   17448:	mov	r1, r8
   1744c:	mov	r0, r7
   17450:	ldr	r2, [sp, #72]	; 0x48
   17454:	str	r5, [sp, #40]	; 0x28
   17458:	str	r4, [sp, #44]	; 0x2c
   1745c:	bl	16d6c <dcngettext@plt+0x5d7c>
   17460:	add	sp, sp, #48	; 0x30
   17464:	pop	{r4, r5, r6, r7, r8, pc}
   17468:	bl	10fd8 <abort@plt>
   1746c:	muleq	r2, r0, r2
   17470:	push	{lr}		; (str lr, [sp, #-4]!)
   17474:	sub	sp, sp, #12
   17478:	mvn	ip, #0
   1747c:	str	ip, [sp]
   17480:	bl	173f8 <dcngettext@plt+0x6408>
   17484:	add	sp, sp, #12
   17488:	pop	{pc}		; (ldr pc, [sp], #4)
   1748c:	push	{lr}		; (str lr, [sp, #-4]!)
   17490:	sub	sp, sp, #12
   17494:	mvn	ip, #0
   17498:	mov	r3, r2
   1749c:	str	ip, [sp]
   174a0:	mov	r2, r1
   174a4:	mov	r1, r0
   174a8:	mov	r0, #0
   174ac:	bl	173f8 <dcngettext@plt+0x6408>
   174b0:	add	sp, sp, #12
   174b4:	pop	{pc}		; (ldr pc, [sp], #4)
   174b8:	push	{lr}		; (str lr, [sp, #-4]!)
   174bc:	sub	sp, sp, #12
   174c0:	str	r3, [sp]
   174c4:	mov	r3, r2
   174c8:	mov	r2, r1
   174cc:	mov	r1, r0
   174d0:	mov	r0, #0
   174d4:	bl	173f8 <dcngettext@plt+0x6408>
   174d8:	add	sp, sp, #12
   174dc:	pop	{pc}		; (ldr pc, [sp], #4)
   174e0:	ldr	r3, [pc]	; 174e8 <dcngettext@plt+0x64f8>
   174e4:	b	16d6c <dcngettext@plt+0x5d7c>
   174e8:	andeq	sl, r2, ip, lsl r1
   174ec:	mov	r2, r1
   174f0:	ldr	r3, [pc, #8]	; 17500 <dcngettext@plt+0x6510>
   174f4:	mov	r1, r0
   174f8:	mov	r0, #0
   174fc:	b	16d6c <dcngettext@plt+0x5d7c>
   17500:	andeq	sl, r2, ip, lsl r1
   17504:	ldr	r3, [pc, #4]	; 17510 <dcngettext@plt+0x6520>
   17508:	mvn	r2, #0
   1750c:	b	16d6c <dcngettext@plt+0x5d7c>
   17510:	andeq	sl, r2, ip, lsl r1
   17514:	mov	r1, r0
   17518:	ldr	r3, [pc, #8]	; 17528 <dcngettext@plt+0x6538>
   1751c:	mvn	r2, #0
   17520:	mov	r0, #0
   17524:	b	16d6c <dcngettext@plt+0x5d7c>
   17528:	andeq	sl, r2, ip, lsl r1
   1752c:	mov	r2, #3
   17530:	mov	r1, #0
   17534:	b	1812c <dcngettext@plt+0x713c>
   17538:	push	{r4, r5, r6, lr}
   1753c:	sub	sp, sp, #32
   17540:	cmp	r1, #0
   17544:	mov	r4, r0
   17548:	ldr	r5, [sp, #48]	; 0x30
   1754c:	ldr	r6, [sp, #52]	; 0x34
   17550:	beq	17868 <dcngettext@plt+0x6878>
   17554:	stm	sp, {r2, r3}
   17558:	mov	r3, r1
   1755c:	ldr	r2, [pc, #808]	; 1788c <dcngettext@plt+0x689c>
   17560:	mov	r1, #1
   17564:	bl	10f3c <__fprintf_chk@plt>
   17568:	mov	r2, #5
   1756c:	ldr	r1, [pc, #796]	; 17890 <dcngettext@plt+0x68a0>
   17570:	mov	r0, #0
   17574:	bl	10e04 <dcgettext@plt>
   17578:	ldr	r3, [pc, #788]	; 17894 <dcngettext@plt+0x68a4>
   1757c:	ldr	r2, [pc, #788]	; 17898 <dcngettext@plt+0x68a8>
   17580:	str	r3, [sp]
   17584:	mov	r1, #1
   17588:	mov	r3, r0
   1758c:	mov	r0, r4
   17590:	bl	10f3c <__fprintf_chk@plt>
   17594:	mov	r1, r4
   17598:	mov	r0, #10
   1759c:	bl	10df8 <fputc_unlocked@plt>
   175a0:	mov	r2, #5
   175a4:	ldr	r1, [pc, #752]	; 1789c <dcngettext@plt+0x68ac>
   175a8:	mov	r0, #0
   175ac:	bl	10e04 <dcgettext@plt>
   175b0:	mov	r1, #1
   175b4:	ldr	r3, [pc, #740]	; 178a0 <dcngettext@plt+0x68b0>
   175b8:	mov	r2, r0
   175bc:	mov	r0, r4
   175c0:	bl	10f3c <__fprintf_chk@plt>
   175c4:	mov	r1, r4
   175c8:	mov	r0, #10
   175cc:	bl	10df8 <fputc_unlocked@plt>
   175d0:	cmp	r6, #9
   175d4:	ldrls	pc, [pc, r6, lsl #2]
   175d8:	b	17880 <dcngettext@plt+0x6890>
   175dc:	andeq	r7, r1, r0, ror #12
   175e0:	andeq	r7, r1, r8, ror #12
   175e4:	muleq	r1, r4, r6
   175e8:	andeq	r7, r1, r8, asr #13
   175ec:	andeq	r7, r1, r4, lsl #14
   175f0:	andeq	r7, r1, r0, asr #14
   175f4:	andeq	r7, r1, ip, ror r7
   175f8:	andeq	r7, r1, r0, asr #15
   175fc:	andeq	r7, r1, r0, lsl r8
   17600:	andeq	r7, r1, r4, lsl #12
   17604:	ldr	r1, [pc, #664]	; 178a4 <dcngettext@plt+0x68b4>
   17608:	mov	r2, #5
   1760c:	mov	r0, #0
   17610:	bl	10e04 <dcgettext@plt>
   17614:	ldr	ip, [r5, #32]
   17618:	ldr	r1, [r5, #28]
   1761c:	ldr	r2, [r5, #24]
   17620:	ldr	r3, [r5]
   17624:	ldr	r6, [r5, #20]
   17628:	str	ip, [sp, #28]
   1762c:	ldr	lr, [r5, #16]
   17630:	str	r1, [sp, #24]
   17634:	ldr	ip, [r5, #12]
   17638:	str	r2, [sp, #20]
   1763c:	ldr	r1, [r5, #8]
   17640:	ldr	r2, [r5, #4]
   17644:	str	r6, [sp, #16]
   17648:	stmib	sp, {r1, ip, lr}
   1764c:	mov	r1, #1
   17650:	str	r2, [sp]
   17654:	mov	r2, r0
   17658:	mov	r0, r4
   1765c:	bl	10f3c <__fprintf_chk@plt>
   17660:	add	sp, sp, #32
   17664:	pop	{r4, r5, r6, pc}
   17668:	mov	r2, #5
   1766c:	ldr	r1, [pc, #564]	; 178a8 <dcngettext@plt+0x68b8>
   17670:	mov	r0, #0
   17674:	bl	10e04 <dcgettext@plt>
   17678:	ldr	r3, [r5]
   1767c:	mov	r1, #1
   17680:	mov	r2, r0
   17684:	mov	r0, r4
   17688:	add	sp, sp, #32
   1768c:	pop	{r4, r5, r6, lr}
   17690:	b	10f3c <__fprintf_chk@plt>
   17694:	mov	r2, #5
   17698:	ldr	r1, [pc, #524]	; 178ac <dcngettext@plt+0x68bc>
   1769c:	mov	r0, #0
   176a0:	bl	10e04 <dcgettext@plt>
   176a4:	ldr	r2, [r5, #4]
   176a8:	ldr	r3, [r5]
   176ac:	mov	r1, #1
   176b0:	str	r2, [sp, #48]	; 0x30
   176b4:	mov	r2, r0
   176b8:	mov	r0, r4
   176bc:	add	sp, sp, #32
   176c0:	pop	{r4, r5, r6, lr}
   176c4:	b	10f3c <__fprintf_chk@plt>
   176c8:	mov	r2, #5
   176cc:	ldr	r1, [pc, #476]	; 178b0 <dcngettext@plt+0x68c0>
   176d0:	mov	r0, #0
   176d4:	bl	10e04 <dcgettext@plt>
   176d8:	ldr	r1, [r5, #8]
   176dc:	ldr	r2, [r5, #4]
   176e0:	ldr	r3, [r5]
   176e4:	str	r1, [sp, #52]	; 0x34
   176e8:	str	r2, [sp, #48]	; 0x30
   176ec:	mov	r1, #1
   176f0:	mov	r2, r0
   176f4:	mov	r0, r4
   176f8:	add	sp, sp, #32
   176fc:	pop	{r4, r5, r6, lr}
   17700:	b	10f3c <__fprintf_chk@plt>
   17704:	mov	r2, #5
   17708:	ldr	r1, [pc, #420]	; 178b4 <dcngettext@plt+0x68c4>
   1770c:	mov	r0, #0
   17710:	bl	10e04 <dcgettext@plt>
   17714:	ldr	r1, [r5, #8]
   17718:	ldr	ip, [r5, #12]
   1771c:	ldr	r2, [r5, #4]
   17720:	ldr	r3, [r5]
   17724:	stmib	sp, {r1, ip}
   17728:	str	r2, [sp]
   1772c:	mov	r1, #1
   17730:	mov	r2, r0
   17734:	mov	r0, r4
   17738:	bl	10f3c <__fprintf_chk@plt>
   1773c:	b	17660 <dcngettext@plt+0x6670>
   17740:	mov	r2, #5
   17744:	ldr	r1, [pc, #364]	; 178b8 <dcngettext@plt+0x68c8>
   17748:	mov	r0, #0
   1774c:	bl	10e04 <dcgettext@plt>
   17750:	add	r1, r5, #8
   17754:	ldr	r2, [r5, #4]
   17758:	ldm	r1, {r1, ip, lr}
   1775c:	ldr	r3, [r5]
   17760:	str	r2, [sp]
   17764:	stmib	sp, {r1, ip, lr}
   17768:	mov	r1, #1
   1776c:	mov	r2, r0
   17770:	mov	r0, r4
   17774:	bl	10f3c <__fprintf_chk@plt>
   17778:	b	17660 <dcngettext@plt+0x6670>
   1777c:	mov	r2, #5
   17780:	ldr	r1, [pc, #308]	; 178bc <dcngettext@plt+0x68cc>
   17784:	mov	r0, #0
   17788:	bl	10e04 <dcgettext@plt>
   1778c:	add	r1, r5, #8
   17790:	ldr	r2, [r5, #4]
   17794:	ldm	r1, {r1, ip, lr}
   17798:	ldr	r6, [r5, #20]
   1779c:	ldr	r3, [r5]
   177a0:	stmib	sp, {r1, ip, lr}
   177a4:	mov	r1, #1
   177a8:	str	r2, [sp]
   177ac:	str	r6, [sp, #16]
   177b0:	mov	r2, r0
   177b4:	mov	r0, r4
   177b8:	bl	10f3c <__fprintf_chk@plt>
   177bc:	b	17660 <dcngettext@plt+0x6670>
   177c0:	mov	r2, #5
   177c4:	ldr	r1, [pc, #244]	; 178c0 <dcngettext@plt+0x68d0>
   177c8:	mov	r0, #0
   177cc:	bl	10e04 <dcgettext@plt>
   177d0:	ldr	r2, [r5, #24]
   177d4:	ldr	r3, [r5]
   177d8:	ldr	r6, [r5, #20]
   177dc:	ldr	lr, [r5, #16]
   177e0:	ldr	ip, [r5, #12]
   177e4:	str	r2, [sp, #20]
   177e8:	ldr	r1, [r5, #8]
   177ec:	ldr	r2, [r5, #4]
   177f0:	str	r6, [sp, #16]
   177f4:	stmib	sp, {r1, ip, lr}
   177f8:	mov	r1, #1
   177fc:	str	r2, [sp]
   17800:	mov	r2, r0
   17804:	mov	r0, r4
   17808:	bl	10f3c <__fprintf_chk@plt>
   1780c:	b	17660 <dcngettext@plt+0x6670>
   17810:	mov	r2, #5
   17814:	ldr	r1, [pc, #168]	; 178c4 <dcngettext@plt+0x68d4>
   17818:	mov	r0, #0
   1781c:	bl	10e04 <dcgettext@plt>
   17820:	ldr	r1, [r5, #28]
   17824:	ldr	r2, [r5, #24]
   17828:	ldr	r3, [r5]
   1782c:	ldr	r6, [r5, #20]
   17830:	ldr	lr, [r5, #16]
   17834:	str	r1, [sp, #24]
   17838:	ldr	ip, [r5, #12]
   1783c:	str	r2, [sp, #20]
   17840:	ldr	r1, [r5, #8]
   17844:	ldr	r2, [r5, #4]
   17848:	str	r6, [sp, #16]
   1784c:	stmib	sp, {r1, ip, lr}
   17850:	mov	r1, #1
   17854:	str	r2, [sp]
   17858:	mov	r2, r0
   1785c:	mov	r0, r4
   17860:	bl	10f3c <__fprintf_chk@plt>
   17864:	b	17660 <dcngettext@plt+0x6670>
   17868:	str	r3, [sp]
   1786c:	mov	r1, #1
   17870:	mov	r3, r2
   17874:	ldr	r2, [pc, #76]	; 178c8 <dcngettext@plt+0x68d8>
   17878:	bl	10f3c <__fprintf_chk@plt>
   1787c:	b	17568 <dcngettext@plt+0x6578>
   17880:	mov	r2, #5
   17884:	ldr	r1, [pc, #64]	; 178cc <dcngettext@plt+0x68dc>
   17888:	b	1760c <dcngettext@plt+0x661c>
   1788c:	andeq	r9, r1, r8, asr #19
   17890:	ldrdeq	r9, [r1], -ip
   17894:	andeq	r0, r0, r6, ror #15
   17898:			; <UNDEFINED> instruction: 0x00019cb4
   1789c:	andeq	r9, r1, r0, ror #19
   178a0:	andeq	r9, r1, ip, lsl #21
   178a4:			; <UNDEFINED> instruction: 0x00019bbc
   178a8:			; <UNDEFINED> instruction: 0x00019ab0
   178ac:	andeq	r9, r1, r0, asr #21
   178b0:	ldrdeq	r9, [r1], -r8
   178b4:	strdeq	r9, [r1], -r4
   178b8:	andeq	r9, r1, r4, lsl fp
   178bc:	andeq	r9, r1, r8, lsr fp
   178c0:	andeq	r9, r1, r0, ror #22
   178c4:	andeq	r9, r1, ip, lsl #23
   178c8:	ldrdeq	r9, [r1], -r4
   178cc:	strdeq	r9, [r1], -r0
   178d0:	push	{r4, r5, lr}
   178d4:	sub	sp, sp, #12
   178d8:	ldr	r5, [sp, #24]
   178dc:	ldr	ip, [r5]
   178e0:	cmp	ip, #0
   178e4:	beq	17900 <dcngettext@plt+0x6910>
   178e8:	mov	lr, r5
   178ec:	mov	ip, #0
   178f0:	ldr	r4, [lr, #4]!
   178f4:	add	ip, ip, #1
   178f8:	cmp	r4, #0
   178fc:	bne	178f0 <dcngettext@plt+0x6900>
   17900:	stm	sp, {r5, ip}
   17904:	bl	17538 <dcngettext@plt+0x6548>
   17908:	add	sp, sp, #12
   1790c:	pop	{r4, r5, pc}
   17910:	push	{r4, r5, lr}
   17914:	sub	sp, sp, #52	; 0x34
   17918:	add	r5, sp, #4
   1791c:	ldr	r4, [sp, #64]	; 0x40
   17920:	mov	ip, #0
   17924:	sub	r4, r4, #4
   17928:	ldr	lr, [r4, #4]!
   1792c:	cmp	lr, #0
   17930:	str	lr, [r5, #4]!
   17934:	beq	17944 <dcngettext@plt+0x6954>
   17938:	add	ip, ip, #1
   1793c:	cmp	ip, #10
   17940:	bne	17928 <dcngettext@plt+0x6938>
   17944:	add	lr, sp, #8
   17948:	str	ip, [sp, #4]
   1794c:	str	lr, [sp]
   17950:	bl	17538 <dcngettext@plt+0x6548>
   17954:	add	sp, sp, #52	; 0x34
   17958:	pop	{r4, r5, pc}
   1795c:	push	{r3}		; (str r3, [sp, #-4]!)
   17960:	push	{r4, lr}
   17964:	sub	sp, sp, #60	; 0x3c
   17968:	add	lr, sp, #56	; 0x38
   1796c:	add	r3, sp, #72	; 0x48
   17970:	str	r3, [lr, #-44]!	; 0xffffffd4
   17974:	add	r4, sp, #68	; 0x44
   17978:	mov	r3, #0
   1797c:	ldr	ip, [r4, #4]!
   17980:	cmp	ip, #0
   17984:	str	ip, [lr, #4]!
   17988:	beq	17998 <dcngettext@plt+0x69a8>
   1798c:	add	r3, r3, #1
   17990:	cmp	r3, #10
   17994:	bne	1797c <dcngettext@plt+0x698c>
   17998:	add	ip, sp, #16
   1799c:	str	r3, [sp, #4]
   179a0:	str	ip, [sp]
   179a4:	ldr	r3, [sp, #68]	; 0x44
   179a8:	bl	17538 <dcngettext@plt+0x6548>
   179ac:	add	sp, sp, #60	; 0x3c
   179b0:	pop	{r4, lr}
   179b4:	add	sp, sp, #4
   179b8:	bx	lr
   179bc:	ldr	r3, [pc, #116]	; 17a38 <dcngettext@plt+0x6a48>
   179c0:	push	{r4, lr}
   179c4:	mov	r0, #10
   179c8:	ldr	r1, [r3]
   179cc:	bl	10df8 <fputc_unlocked@plt>
   179d0:	mov	r2, #5
   179d4:	ldr	r1, [pc, #96]	; 17a3c <dcngettext@plt+0x6a4c>
   179d8:	mov	r0, #0
   179dc:	bl	10e04 <dcgettext@plt>
   179e0:	ldr	r2, [pc, #88]	; 17a40 <dcngettext@plt+0x6a50>
   179e4:	mov	r1, r0
   179e8:	mov	r0, #1
   179ec:	bl	10f24 <__printf_chk@plt>
   179f0:	mov	r2, #5
   179f4:	ldr	r1, [pc, #72]	; 17a44 <dcngettext@plt+0x6a54>
   179f8:	mov	r0, #0
   179fc:	bl	10e04 <dcgettext@plt>
   17a00:	ldr	r3, [pc, #64]	; 17a48 <dcngettext@plt+0x6a58>
   17a04:	ldr	r2, [pc, #64]	; 17a4c <dcngettext@plt+0x6a5c>
   17a08:	mov	r1, r0
   17a0c:	mov	r0, #1
   17a10:	bl	10f24 <__printf_chk@plt>
   17a14:	mov	r2, #5
   17a18:	ldr	r1, [pc, #48]	; 17a50 <dcngettext@plt+0x6a60>
   17a1c:	mov	r0, #0
   17a20:	bl	10e04 <dcgettext@plt>
   17a24:	ldr	r2, [pc, #40]	; 17a54 <dcngettext@plt+0x6a64>
   17a28:	pop	{r4, lr}
   17a2c:	mov	r1, r0
   17a30:	mov	r0, #1
   17a34:	b	10f24 <__printf_chk@plt>
   17a38:	andeq	sl, r2, ip, ror #2
   17a3c:	andeq	r9, r1, ip, lsr #24
   17a40:	andeq	r9, r1, r0, asr #24
   17a44:	andeq	r9, r1, r8, asr ip
   17a48:	andeq	r9, r1, r4, lsr #4
   17a4c:	andeq	r9, r1, ip, asr #4
   17a50:	andeq	r9, r1, ip, ror #24
   17a54:	muleq	r1, r4, ip
   17a58:	push	{r4, lr}
   17a5c:	bl	18028 <dcngettext@plt+0x7038>
   17a60:	cmp	r0, #0
   17a64:	popne	{r4, pc}
   17a68:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17a6c:	push	{r4, lr}
   17a70:	bl	18028 <dcngettext@plt+0x7038>
   17a74:	cmp	r0, #0
   17a78:	popne	{r4, pc}
   17a7c:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17a80:	push	{r4, lr}
   17a84:	bl	18028 <dcngettext@plt+0x7038>
   17a88:	cmp	r0, #0
   17a8c:	popne	{r4, pc}
   17a90:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17a94:	push	{r4, r5, r6, lr}
   17a98:	mov	r5, r0
   17a9c:	mov	r4, r1
   17aa0:	bl	18054 <dcngettext@plt+0x7064>
   17aa4:	cmp	r0, #0
   17aa8:	popne	{r4, r5, r6, pc}
   17aac:	adds	r4, r4, #0
   17ab0:	movne	r4, #1
   17ab4:	cmp	r5, #0
   17ab8:	orreq	r4, r4, #1
   17abc:	cmp	r4, #0
   17ac0:	popeq	{r4, r5, r6, pc}
   17ac4:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17ac8:	push	{r4, lr}
   17acc:	cmp	r1, #0
   17ad0:	orreq	r1, r1, #1
   17ad4:	bl	18054 <dcngettext@plt+0x7064>
   17ad8:	cmp	r0, #0
   17adc:	popne	{r4, pc}
   17ae0:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17ae4:	push	{r4, r5, r6, lr}
   17ae8:	mov	r6, r0
   17aec:	mov	r5, r1
   17af0:	mov	r4, r2
   17af4:	bl	18388 <dcngettext@plt+0x7398>
   17af8:	cmp	r0, #0
   17afc:	popne	{r4, r5, r6, pc}
   17b00:	cmp	r6, #0
   17b04:	beq	17b14 <dcngettext@plt+0x6b24>
   17b08:	cmp	r5, #0
   17b0c:	cmpne	r4, #0
   17b10:	popeq	{r4, r5, r6, pc}
   17b14:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17b18:	b	17ae4 <dcngettext@plt+0x6af4>
   17b1c:	cmp	r2, #0
   17b20:	cmpne	r1, #0
   17b24:	moveq	r2, #1
   17b28:	moveq	r1, r2
   17b2c:	push	{r4, lr}
   17b30:	bl	18388 <dcngettext@plt+0x7398>
   17b34:	cmp	r0, #0
   17b38:	popne	{r4, pc}
   17b3c:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17b40:	mov	r2, r1
   17b44:	mov	r1, r0
   17b48:	mov	r0, #0
   17b4c:	b	17ae4 <dcngettext@plt+0x6af4>
   17b50:	mov	r2, r1
   17b54:	mov	r1, r0
   17b58:	mov	r0, #0
   17b5c:	b	17b1c <dcngettext@plt+0x6b2c>
   17b60:	push	{r4, r5, r6, lr}
   17b64:	subs	r6, r0, #0
   17b68:	sub	sp, sp, #8
   17b6c:	mov	r5, r1
   17b70:	ldr	r4, [r1]
   17b74:	beq	17bb0 <dcngettext@plt+0x6bc0>
   17b78:	lsr	r1, r4, #1
   17b7c:	add	r3, r1, #1
   17b80:	mvn	r3, r3
   17b84:	cmp	r4, r3
   17b88:	bhi	17bac <dcngettext@plt+0x6bbc>
   17b8c:	add	r4, r4, #1
   17b90:	add	r4, r4, r1
   17b94:	mov	r0, r6
   17b98:	mov	r1, r4
   17b9c:	bl	17ae4 <dcngettext@plt+0x6af4>
   17ba0:	str	r4, [r5]
   17ba4:	add	sp, sp, #8
   17ba8:	pop	{r4, r5, r6, pc}
   17bac:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17bb0:	cmp	r4, #0
   17bb4:	bne	17b94 <dcngettext@plt+0x6ba4>
   17bb8:	mov	r1, r2
   17bbc:	mov	r0, #64	; 0x40
   17bc0:	str	r2, [sp, #4]
   17bc4:	bl	184c8 <dcngettext@plt+0x74d8>
   17bc8:	ldr	r2, [sp, #4]
   17bcc:	cmp	r0, #0
   17bd0:	movne	r4, r0
   17bd4:	addeq	r4, r0, #1
   17bd8:	b	17b94 <dcngettext@plt+0x6ba4>
   17bdc:	mov	r2, #1
   17be0:	b	17b60 <dcngettext@plt+0x6b70>
   17be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17be8:	sub	sp, sp, #12
   17bec:	ldr	r6, [r1]
   17bf0:	mov	sl, r1
   17bf4:	mov	r9, r0
   17bf8:	asrs	r4, r6, #1
   17bfc:	mov	r5, r2
   17c00:	mov	fp, r3
   17c04:	ldr	r7, [sp, #48]	; 0x30
   17c08:	bmi	17d74 <dcngettext@plt+0x6d84>
   17c0c:	mvn	r3, #-2147483648	; 0x80000000
   17c10:	sub	r3, r3, r4
   17c14:	cmp	r6, r3
   17c18:	movle	r3, #0
   17c1c:	movgt	r3, #1
   17c20:	mvn	r8, fp
   17c24:	cmp	r3, #0
   17c28:	addeq	r4, r4, r6
   17c2c:	mvnne	r4, #-2147483648	; 0x80000000
   17c30:	lsr	r8, r8, #31
   17c34:	cmp	fp, r4
   17c38:	movge	r3, #0
   17c3c:	andlt	r3, r8, #1
   17c40:	cmp	r3, #0
   17c44:	beq	17d2c <dcngettext@plt+0x6d3c>
   17c48:	cmp	r7, #0
   17c4c:	blt	17dfc <dcngettext@plt+0x6e0c>
   17c50:	bne	17df4 <dcngettext@plt+0x6e04>
   17c54:	mov	r2, #64	; 0x40
   17c58:	mov	r1, r7
   17c5c:	mov	r0, r2
   17c60:	str	r2, [sp, #4]
   17c64:	bl	186d4 <dcngettext@plt+0x76e4>
   17c68:	ldr	r2, [sp, #4]
   17c6c:	mov	r1, r7
   17c70:	mov	r4, r0
   17c74:	mov	r0, r2
   17c78:	bl	188f4 <dcngettext@plt+0x7904>
   17c7c:	ldr	r2, [sp, #4]
   17c80:	sub	r1, r2, r1
   17c84:	cmp	r9, #0
   17c88:	sub	r3, r4, r6
   17c8c:	streq	r9, [sl]
   17c90:	cmp	r3, r5
   17c94:	bge	17d18 <dcngettext@plt+0x6d28>
   17c98:	cmp	r5, #0
   17c9c:	blt	17d88 <dcngettext@plt+0x6d98>
   17ca0:	cmp	r6, #0
   17ca4:	blt	17cc4 <dcngettext@plt+0x6cd4>
   17ca8:	mvn	r3, #-2147483648	; 0x80000000
   17cac:	sub	r3, r3, r5
   17cb0:	cmp	r6, r3
   17cb4:	movle	r3, #0
   17cb8:	movgt	r3, #1
   17cbc:	cmp	r3, #0
   17cc0:	bne	17e84 <dcngettext@plt+0x6e94>
   17cc4:	add	r5, r6, r5
   17cc8:	cmp	fp, r5
   17ccc:	movge	r8, #0
   17cd0:	andlt	r8, r8, #1
   17cd4:	cmp	r8, #0
   17cd8:	mov	r4, r5
   17cdc:	bne	17e84 <dcngettext@plt+0x6e94>
   17ce0:	cmp	r7, #0
   17ce4:	blt	17d9c <dcngettext@plt+0x6dac>
   17ce8:	beq	17d14 <dcngettext@plt+0x6d24>
   17cec:	cmp	r5, #0
   17cf0:	blt	17e44 <dcngettext@plt+0x6e54>
   17cf4:	mov	r1, r7
   17cf8:	mvn	r0, #-2147483648	; 0x80000000
   17cfc:	bl	186d4 <dcngettext@plt+0x76e4>
   17d00:	cmp	r5, r0
   17d04:	movle	r0, #0
   17d08:	movgt	r0, #1
   17d0c:	cmp	r0, #0
   17d10:	bne	17e84 <dcngettext@plt+0x6e94>
   17d14:	mul	r1, r5, r7
   17d18:	mov	r0, r9
   17d1c:	bl	17a94 <dcngettext@plt+0x6aa4>
   17d20:	str	r4, [sl]
   17d24:	add	sp, sp, #12
   17d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d2c:	cmp	r7, #0
   17d30:	blt	17dc8 <dcngettext@plt+0x6dd8>
   17d34:	beq	17c54 <dcngettext@plt+0x6c64>
   17d38:	cmp	r4, #0
   17d3c:	blt	17e04 <dcngettext@plt+0x6e14>
   17d40:	mov	r1, r7
   17d44:	mvn	r0, #-2147483648	; 0x80000000
   17d48:	bl	186d4 <dcngettext@plt+0x76e4>
   17d4c:	cmp	r0, r4
   17d50:	movge	r0, #0
   17d54:	movlt	r0, #1
   17d58:	cmp	r0, #0
   17d5c:	mvnne	r2, #-2147483648	; 0x80000000
   17d60:	bne	17c58 <dcngettext@plt+0x6c68>
   17d64:	mul	r1, r7, r4
   17d68:	cmp	r1, #63	; 0x3f
   17d6c:	bgt	17c84 <dcngettext@plt+0x6c94>
   17d70:	b	17c54 <dcngettext@plt+0x6c64>
   17d74:	rsb	r3, r4, #-2147483648	; 0x80000000
   17d78:	cmp	r6, r3
   17d7c:	movge	r3, #0
   17d80:	movlt	r3, #1
   17d84:	b	17c20 <dcngettext@plt+0x6c30>
   17d88:	rsb	r3, r5, #-2147483648	; 0x80000000
   17d8c:	cmp	r6, r3
   17d90:	movge	r3, #0
   17d94:	movlt	r3, #1
   17d98:	b	17cbc <dcngettext@plt+0x6ccc>
   17d9c:	cmp	r5, #0
   17da0:	blt	17e28 <dcngettext@plt+0x6e38>
   17da4:	cmn	r7, #1
   17da8:	beq	17d14 <dcngettext@plt+0x6d24>
   17dac:	mov	r1, r7
   17db0:	mov	r0, #-2147483648	; 0x80000000
   17db4:	bl	186d4 <dcngettext@plt+0x76e4>
   17db8:	cmp	r5, r0
   17dbc:	movle	r0, #0
   17dc0:	movgt	r0, #1
   17dc4:	b	17d0c <dcngettext@plt+0x6d1c>
   17dc8:	cmp	r4, #0
   17dcc:	blt	17e68 <dcngettext@plt+0x6e78>
   17dd0:	cmn	r7, #1
   17dd4:	beq	17d64 <dcngettext@plt+0x6d74>
   17dd8:	mov	r1, r7
   17ddc:	mov	r0, #-2147483648	; 0x80000000
   17de0:	bl	186d4 <dcngettext@plt+0x76e4>
   17de4:	cmp	r0, r4
   17de8:	movge	r0, #0
   17dec:	movlt	r0, #1
   17df0:	b	17d58 <dcngettext@plt+0x6d68>
   17df4:	mov	r4, fp
   17df8:	b	17d40 <dcngettext@plt+0x6d50>
   17dfc:	mov	r4, fp
   17e00:	b	17dd0 <dcngettext@plt+0x6de0>
   17e04:	cmn	r4, #1
   17e08:	beq	17d64 <dcngettext@plt+0x6d74>
   17e0c:	mov	r1, r4
   17e10:	mov	r0, #-2147483648	; 0x80000000
   17e14:	bl	186d4 <dcngettext@plt+0x76e4>
   17e18:	cmp	r7, r0
   17e1c:	movle	r0, #0
   17e20:	movgt	r0, #1
   17e24:	b	17d58 <dcngettext@plt+0x6d68>
   17e28:	mov	r1, r7
   17e2c:	mvn	r0, #-2147483648	; 0x80000000
   17e30:	bl	186d4 <dcngettext@plt+0x76e4>
   17e34:	cmp	r5, r0
   17e38:	movge	r0, #0
   17e3c:	movlt	r0, #1
   17e40:	b	17d0c <dcngettext@plt+0x6d1c>
   17e44:	cmn	r5, #1
   17e48:	beq	17d14 <dcngettext@plt+0x6d24>
   17e4c:	mov	r1, r5
   17e50:	mov	r0, #-2147483648	; 0x80000000
   17e54:	bl	186d4 <dcngettext@plt+0x76e4>
   17e58:	cmp	r7, r0
   17e5c:	movle	r0, #0
   17e60:	movgt	r0, #1
   17e64:	b	17d0c <dcngettext@plt+0x6d1c>
   17e68:	mov	r1, r7
   17e6c:	mvn	r0, #-2147483648	; 0x80000000
   17e70:	bl	186d4 <dcngettext@plt+0x76e4>
   17e74:	cmp	r0, r4
   17e78:	movle	r0, #0
   17e7c:	movgt	r0, #1
   17e80:	b	17d58 <dcngettext@plt+0x6d68>
   17e84:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17e88:	push	{r4, lr}
   17e8c:	mov	r1, #1
   17e90:	bl	17fe0 <dcngettext@plt+0x6ff0>
   17e94:	cmp	r0, #0
   17e98:	popne	{r4, pc}
   17e9c:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17ea0:	push	{r4, lr}
   17ea4:	mov	r1, #1
   17ea8:	bl	17fe0 <dcngettext@plt+0x6ff0>
   17eac:	cmp	r0, #0
   17eb0:	popne	{r4, pc}
   17eb4:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17eb8:	push	{r4, lr}
   17ebc:	bl	17fe0 <dcngettext@plt+0x6ff0>
   17ec0:	cmp	r0, #0
   17ec4:	popne	{r4, pc}
   17ec8:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17ecc:	push	{r4, lr}
   17ed0:	bl	17fe0 <dcngettext@plt+0x6ff0>
   17ed4:	cmp	r0, #0
   17ed8:	popne	{r4, pc}
   17edc:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17ee0:	push	{r4, r5, r6, lr}
   17ee4:	mov	r6, r0
   17ee8:	mov	r0, r1
   17eec:	mov	r4, r1
   17ef0:	bl	18028 <dcngettext@plt+0x7038>
   17ef4:	subs	r5, r0, #0
   17ef8:	beq	17f10 <dcngettext@plt+0x6f20>
   17efc:	mov	r2, r4
   17f00:	mov	r1, r6
   17f04:	bl	10dc8 <memcpy@plt>
   17f08:	mov	r0, r5
   17f0c:	pop	{r4, r5, r6, pc}
   17f10:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17f14:	push	{r4, r5, r6, lr}
   17f18:	mov	r6, r0
   17f1c:	mov	r0, r1
   17f20:	mov	r4, r1
   17f24:	bl	18028 <dcngettext@plt+0x7038>
   17f28:	subs	r5, r0, #0
   17f2c:	beq	17f44 <dcngettext@plt+0x6f54>
   17f30:	mov	r2, r4
   17f34:	mov	r1, r6
   17f38:	bl	10dc8 <memcpy@plt>
   17f3c:	mov	r0, r5
   17f40:	pop	{r4, r5, r6, pc}
   17f44:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17f48:	push	{r4, r5, r6, lr}
   17f4c:	mov	r6, r0
   17f50:	add	r0, r1, #1
   17f54:	mov	r4, r1
   17f58:	bl	18028 <dcngettext@plt+0x7038>
   17f5c:	subs	r5, r0, #0
   17f60:	beq	17f80 <dcngettext@plt+0x6f90>
   17f64:	mov	r3, #0
   17f68:	mov	r1, r6
   17f6c:	strb	r3, [r5, r4]
   17f70:	mov	r2, r4
   17f74:	bl	10dc8 <memcpy@plt>
   17f78:	mov	r0, r5
   17f7c:	pop	{r4, r5, r6, pc}
   17f80:	bl	17fa0 <dcngettext@plt+0x6fb0>
   17f84:	push	{r4, lr}
   17f88:	mov	r4, r0
   17f8c:	bl	10edc <strlen@plt>
   17f90:	add	r1, r0, #1
   17f94:	mov	r0, r4
   17f98:	pop	{r4, lr}
   17f9c:	b	17ee0 <dcngettext@plt+0x6ef0>
   17fa0:	ldr	r3, [pc, #44]	; 17fd4 <dcngettext@plt+0x6fe4>
   17fa4:	push	{r4, lr}
   17fa8:	mov	r2, #5
   17fac:	ldr	r1, [pc, #36]	; 17fd8 <dcngettext@plt+0x6fe8>
   17fb0:	mov	r0, #0
   17fb4:	ldr	r4, [r3]
   17fb8:	bl	10e04 <dcgettext@plt>
   17fbc:	ldr	r2, [pc, #24]	; 17fdc <dcngettext@plt+0x6fec>
   17fc0:	mov	r1, #0
   17fc4:	mov	r3, r0
   17fc8:	mov	r0, r4
   17fcc:	bl	10e70 <error@plt>
   17fd0:	bl	10fd8 <abort@plt>
   17fd4:	andeq	sl, r2, r8, lsl #2
   17fd8:	andeq	r9, r1, r4, ror #25
   17fdc:	andeq	r9, r1, r8, ror #16
   17fe0:	cmp	r1, #0
   17fe4:	cmpne	r0, #0
   17fe8:	moveq	r1, #1
   17fec:	moveq	r0, r1
   17ff0:	umull	r2, r3, r0, r1
   17ff4:	adds	r3, r3, #0
   17ff8:	movne	r3, #1
   17ffc:	cmp	r2, #0
   18000:	blt	18010 <dcngettext@plt+0x7020>
   18004:	cmp	r3, #0
   18008:	bne	18010 <dcngettext@plt+0x7020>
   1800c:	b	10d5c <calloc@plt>
   18010:	push	{r4, lr}
   18014:	bl	10ef4 <__errno_location@plt>
   18018:	mov	r3, #12
   1801c:	str	r3, [r0]
   18020:	mov	r0, #0
   18024:	pop	{r4, pc}
   18028:	cmp	r0, #0
   1802c:	moveq	r0, #1
   18030:	cmp	r0, #0
   18034:	blt	1803c <dcngettext@plt+0x704c>
   18038:	b	10e7c <malloc@plt>
   1803c:	push	{r4, lr}
   18040:	bl	10ef4 <__errno_location@plt>
   18044:	mov	r3, #12
   18048:	str	r3, [r0]
   1804c:	mov	r0, #0
   18050:	pop	{r4, pc}
   18054:	cmp	r0, #0
   18058:	beq	1807c <dcngettext@plt+0x708c>
   1805c:	cmp	r1, #0
   18060:	push	{lr}		; (str lr, [sp, #-4]!)
   18064:	sub	sp, sp, #12
   18068:	beq	18084 <dcngettext@plt+0x7094>
   1806c:	blt	1809c <dcngettext@plt+0x70ac>
   18070:	add	sp, sp, #12
   18074:	pop	{lr}		; (ldr lr, [sp], #4)
   18078:	b	10e10 <realloc@plt>
   1807c:	mov	r0, r1
   18080:	b	18028 <dcngettext@plt+0x7038>
   18084:	str	r1, [sp, #4]
   18088:	bl	1555c <dcngettext@plt+0x456c>
   1808c:	ldr	r3, [sp, #4]
   18090:	mov	r0, r3
   18094:	add	sp, sp, #12
   18098:	pop	{pc}		; (ldr pc, [sp], #4)
   1809c:	bl	10ef4 <__errno_location@plt>
   180a0:	mov	r2, #12
   180a4:	mov	r3, #0
   180a8:	str	r2, [r0]
   180ac:	b	18090 <dcngettext@plt+0x70a0>
   180b0:	push	{r4, r5, r6, lr}
   180b4:	mov	r4, r0
   180b8:	bl	10e58 <__fpending@plt>
   180bc:	ldr	r5, [r4]
   180c0:	and	r5, r5, #32
   180c4:	mov	r6, r0
   180c8:	mov	r0, r4
   180cc:	bl	153c4 <dcngettext@plt+0x43d4>
   180d0:	cmp	r5, #0
   180d4:	mov	r4, r0
   180d8:	bne	180f8 <dcngettext@plt+0x7108>
   180dc:	cmp	r0, #0
   180e0:	beq	180f0 <dcngettext@plt+0x7100>
   180e4:	cmp	r6, #0
   180e8:	beq	18114 <dcngettext@plt+0x7124>
   180ec:	mvn	r4, #0
   180f0:	mov	r0, r4
   180f4:	pop	{r4, r5, r6, pc}
   180f8:	cmp	r0, #0
   180fc:	bne	180ec <dcngettext@plt+0x70fc>
   18100:	bl	10ef4 <__errno_location@plt>
   18104:	str	r4, [r0]
   18108:	mvn	r4, #0
   1810c:	mov	r0, r4
   18110:	pop	{r4, r5, r6, pc}
   18114:	bl	10ef4 <__errno_location@plt>
   18118:	ldr	r4, [r0]
   1811c:	subs	r4, r4, #9
   18120:	mvnne	r4, #0
   18124:	mov	r0, r4
   18128:	pop	{r4, r5, r6, pc}
   1812c:	push	{r1, r2, r3}
   18130:	push	{r4, r5, r6, r7, lr}
   18134:	sub	sp, sp, #8
   18138:	add	r3, sp, #32
   1813c:	ldr	r1, [sp, #28]
   18140:	str	r3, [sp, #4]
   18144:	cmp	r1, #0
   18148:	beq	181e0 <dcngettext@plt+0x71f0>
   1814c:	ldr	r2, [pc, #412]	; 182f0 <dcngettext@plt+0x7300>
   18150:	mov	r5, r0
   18154:	cmp	r1, r2
   18158:	bne	181a4 <dcngettext@plt+0x71b4>
   1815c:	ldr	r6, [pc, #400]	; 182f4 <dcngettext@plt+0x7304>
   18160:	ldr	r7, [r3]
   18164:	add	r2, sp, #36	; 0x24
   18168:	ldr	r3, [r6]
   1816c:	str	r2, [sp, #4]
   18170:	cmp	r3, #0
   18174:	mov	r2, r7
   18178:	blt	182a4 <dcngettext@plt+0x72b4>
   1817c:	bl	10f60 <fcntl64@plt>
   18180:	subs	r4, r0, #0
   18184:	blt	18228 <dcngettext@plt+0x7238>
   18188:	mov	r3, #1
   1818c:	str	r3, [r6]
   18190:	mov	r0, r4
   18194:	add	sp, sp, #8
   18198:	pop	{r4, r5, r6, r7, lr}
   1819c:	add	sp, sp, #12
   181a0:	bx	lr
   181a4:	cmp	r1, #11
   181a8:	beq	181d0 <dcngettext@plt+0x71e0>
   181ac:	bgt	181f0 <dcngettext@plt+0x7200>
   181b0:	cmp	r1, #3
   181b4:	beq	181d0 <dcngettext@plt+0x71e0>
   181b8:	ble	182e4 <dcngettext@plt+0x72f4>
   181bc:	cmp	r1, #8
   181c0:	beq	18210 <dcngettext@plt+0x7220>
   181c4:	ble	18210 <dcngettext@plt+0x7220>
   181c8:	cmp	r1, #9
   181cc:	bne	18210 <dcngettext@plt+0x7220>
   181d0:	mov	r0, r5
   181d4:	bl	10f60 <fcntl64@plt>
   181d8:	mov	r4, r0
   181dc:	b	18190 <dcngettext@plt+0x71a0>
   181e0:	ldr	r2, [sp, #32]
   181e4:	bl	10f60 <fcntl64@plt>
   181e8:	mov	r4, r0
   181ec:	b	18190 <dcngettext@plt+0x71a0>
   181f0:	ldr	r3, [pc, #256]	; 182f8 <dcngettext@plt+0x7308>
   181f4:	cmp	r1, r3
   181f8:	bgt	182c4 <dcngettext@plt+0x72d4>
   181fc:	cmp	r1, r2
   18200:	bge	18210 <dcngettext@plt+0x7220>
   18204:	sub	r3, r3, #6
   18208:	cmp	r1, r3
   1820c:	beq	181d0 <dcngettext@plt+0x71e0>
   18210:	ldr	r3, [sp, #4]
   18214:	mov	r0, r5
   18218:	ldr	r2, [r3]
   1821c:	bl	10f60 <fcntl64@plt>
   18220:	mov	r4, r0
   18224:	b	18190 <dcngettext@plt+0x71a0>
   18228:	bl	10ef4 <__errno_location@plt>
   1822c:	ldr	r3, [r0]
   18230:	cmp	r3, #22
   18234:	bne	18188 <dcngettext@plt+0x7198>
   18238:	mov	r2, r7
   1823c:	mov	r0, r5
   18240:	mov	r1, #0
   18244:	bl	10f60 <fcntl64@plt>
   18248:	subs	r4, r0, #0
   1824c:	blt	18190 <dcngettext@plt+0x71a0>
   18250:	mvn	r3, #0
   18254:	str	r3, [r6]
   18258:	mov	r1, #1
   1825c:	mov	r0, r4
   18260:	bl	10f60 <fcntl64@plt>
   18264:	subs	r2, r0, #0
   18268:	blt	18284 <dcngettext@plt+0x7294>
   1826c:	orr	r2, r2, #1
   18270:	mov	r1, #2
   18274:	mov	r0, r4
   18278:	bl	10f60 <fcntl64@plt>
   1827c:	cmn	r0, #1
   18280:	bne	18190 <dcngettext@plt+0x71a0>
   18284:	bl	10ef4 <__errno_location@plt>
   18288:	mov	r5, r0
   1828c:	mov	r0, r4
   18290:	ldr	r6, [r5]
   18294:	mvn	r4, #0
   18298:	bl	10fe4 <close@plt>
   1829c:	str	r6, [r5]
   182a0:	b	18190 <dcngettext@plt+0x71a0>
   182a4:	mov	r1, #0
   182a8:	bl	10f60 <fcntl64@plt>
   182ac:	subs	r4, r0, #0
   182b0:	blt	18190 <dcngettext@plt+0x71a0>
   182b4:	ldr	r3, [r6]
   182b8:	cmn	r3, #1
   182bc:	beq	18258 <dcngettext@plt+0x7268>
   182c0:	b	18190 <dcngettext@plt+0x71a0>
   182c4:	ldr	r3, [pc, #48]	; 182fc <dcngettext@plt+0x730c>
   182c8:	cmp	r1, r3
   182cc:	beq	18210 <dcngettext@plt+0x7220>
   182d0:	blt	181d0 <dcngettext@plt+0x71e0>
   182d4:	add	r3, r3, #1
   182d8:	cmp	r1, r3
   182dc:	bne	18210 <dcngettext@plt+0x7220>
   182e0:	b	181d0 <dcngettext@plt+0x71e0>
   182e4:	cmp	r1, #1
   182e8:	bne	18210 <dcngettext@plt+0x7220>
   182ec:	b	181d0 <dcngettext@plt+0x71e0>
   182f0:	andeq	r0, r0, r6, lsl #8
   182f4:	andeq	sl, r2, r0, asr #5
   182f8:	andeq	r0, r0, r7, lsl #8
   182fc:	andeq	r0, r0, r9, lsl #8
   18300:	push	{r4, lr}
   18304:	mov	r0, #14
   18308:	bl	10f90 <nl_langinfo@plt>
   1830c:	cmp	r0, #0
   18310:	beq	18328 <dcngettext@plt+0x7338>
   18314:	ldrb	r2, [r0]
   18318:	ldr	r3, [pc, #16]	; 18330 <dcngettext@plt+0x7340>
   1831c:	cmp	r2, #0
   18320:	moveq	r0, r3
   18324:	pop	{r4, pc}
   18328:	ldr	r0, [pc]	; 18330 <dcngettext@plt+0x7340>
   1832c:	pop	{r4, pc}
   18330:	strdeq	r9, [r1], -r8
   18334:	push	{r4, r5, r6, r7, lr}
   18338:	subs	r6, r0, #0
   1833c:	sub	sp, sp, #12
   18340:	addeq	r6, sp, #4
   18344:	mov	r0, r6
   18348:	mov	r5, r2
   1834c:	mov	r7, r1
   18350:	bl	10e64 <mbrtowc@plt>
   18354:	cmp	r5, #0
   18358:	cmnne	r0, #3
   1835c:	mov	r4, r0
   18360:	bls	1837c <dcngettext@plt+0x738c>
   18364:	mov	r0, #0
   18368:	bl	183d4 <dcngettext@plt+0x73e4>
   1836c:	cmp	r0, #0
   18370:	moveq	r4, #1
   18374:	ldrbeq	r3, [r7]
   18378:	streq	r3, [r6]
   1837c:	mov	r0, r4
   18380:	add	sp, sp, #12
   18384:	pop	{r4, r5, r6, r7, pc}
   18388:	push	{r4, r5, r6, lr}
   1838c:	subs	r4, r2, #0
   18390:	mov	r6, r0
   18394:	mov	r5, r1
   18398:	beq	183c4 <dcngettext@plt+0x73d4>
   1839c:	mov	r1, r4
   183a0:	mvn	r0, #0
   183a4:	bl	184c8 <dcngettext@plt+0x74d8>
   183a8:	cmp	r0, r5
   183ac:	bcs	183c4 <dcngettext@plt+0x73d4>
   183b0:	bl	10ef4 <__errno_location@plt>
   183b4:	mov	r3, #12
   183b8:	str	r3, [r0]
   183bc:	mov	r0, #0
   183c0:	pop	{r4, r5, r6, pc}
   183c4:	mul	r1, r5, r4
   183c8:	mov	r0, r6
   183cc:	pop	{r4, r5, r6, lr}
   183d0:	b	18054 <dcngettext@plt+0x7064>
   183d4:	push	{lr}		; (str lr, [sp, #-4]!)
   183d8:	sub	sp, sp, #268	; 0x10c
   183dc:	add	r1, sp, #4
   183e0:	ldr	r2, [pc, #60]	; 18424 <dcngettext@plt+0x7434>
   183e4:	bl	18430 <dcngettext@plt+0x7440>
   183e8:	cmp	r0, #0
   183ec:	movne	r0, #0
   183f0:	bne	1841c <dcngettext@plt+0x742c>
   183f4:	ldr	r1, [pc, #44]	; 18428 <dcngettext@plt+0x7438>
   183f8:	add	r0, sp, #4
   183fc:	bl	10d8c <strcmp@plt>
   18400:	cmp	r0, #0
   18404:	beq	1841c <dcngettext@plt+0x742c>
   18408:	add	r0, sp, #4
   1840c:	ldr	r1, [pc, #24]	; 1842c <dcngettext@plt+0x743c>
   18410:	bl	10d8c <strcmp@plt>
   18414:	adds	r0, r0, #0
   18418:	movne	r0, #1
   1841c:	add	sp, sp, #268	; 0x10c
   18420:	pop	{pc}		; (ldr pc, [sp], #4)
   18424:	andeq	r0, r0, r1, lsl #2
   18428:	andeq	r9, r1, r0, lsl #26
   1842c:	andeq	r9, r1, r4, lsl #26
   18430:	push	{r4, r5, r6, lr}
   18434:	mov	r5, r1
   18438:	mov	r1, #0
   1843c:	mov	r4, r2
   18440:	bl	10f78 <setlocale@plt>
   18444:	subs	r6, r0, #0
   18448:	beq	184a4 <dcngettext@plt+0x74b4>
   1844c:	bl	10edc <strlen@plt>
   18450:	cmp	r4, r0
   18454:	bhi	1848c <dcngettext@plt+0x749c>
   18458:	cmp	r4, #0
   1845c:	bne	18468 <dcngettext@plt+0x7478>
   18460:	mov	r0, #34	; 0x22
   18464:	pop	{r4, r5, r6, pc}
   18468:	sub	r4, r4, #1
   1846c:	mov	r1, r6
   18470:	mov	r2, r4
   18474:	mov	r0, r5
   18478:	bl	10dc8 <memcpy@plt>
   1847c:	mov	r3, #0
   18480:	strb	r3, [r5, r4]
   18484:	mov	r0, #34	; 0x22
   18488:	pop	{r4, r5, r6, pc}
   1848c:	add	r2, r0, #1
   18490:	mov	r1, r6
   18494:	mov	r0, r5
   18498:	bl	10dc8 <memcpy@plt>
   1849c:	mov	r0, #0
   184a0:	pop	{r4, r5, r6, pc}
   184a4:	cmp	r4, #0
   184a8:	beq	184b8 <dcngettext@plt+0x74c8>
   184ac:	strb	r6, [r5]
   184b0:	mov	r0, #22
   184b4:	pop	{r4, r5, r6, pc}
   184b8:	mov	r0, #22
   184bc:	pop	{r4, r5, r6, pc}
   184c0:	mov	r1, #0
   184c4:	b	10f78 <setlocale@plt>
   184c8:	subs	r2, r1, #1
   184cc:	bxeq	lr
   184d0:	bcc	186a8 <dcngettext@plt+0x76b8>
   184d4:	cmp	r0, r1
   184d8:	bls	1868c <dcngettext@plt+0x769c>
   184dc:	tst	r1, r2
   184e0:	beq	18698 <dcngettext@plt+0x76a8>
   184e4:	clz	r3, r0
   184e8:	clz	r2, r1
   184ec:	sub	r3, r2, r3
   184f0:	rsbs	r3, r3, #31
   184f4:	addne	r3, r3, r3, lsl #1
   184f8:	mov	r2, #0
   184fc:	addne	pc, pc, r3, lsl #2
   18500:	nop			; (mov r0, r0)
   18504:	cmp	r0, r1, lsl #31
   18508:	adc	r2, r2, r2
   1850c:	subcs	r0, r0, r1, lsl #31
   18510:	cmp	r0, r1, lsl #30
   18514:	adc	r2, r2, r2
   18518:	subcs	r0, r0, r1, lsl #30
   1851c:	cmp	r0, r1, lsl #29
   18520:	adc	r2, r2, r2
   18524:	subcs	r0, r0, r1, lsl #29
   18528:	cmp	r0, r1, lsl #28
   1852c:	adc	r2, r2, r2
   18530:	subcs	r0, r0, r1, lsl #28
   18534:	cmp	r0, r1, lsl #27
   18538:	adc	r2, r2, r2
   1853c:	subcs	r0, r0, r1, lsl #27
   18540:	cmp	r0, r1, lsl #26
   18544:	adc	r2, r2, r2
   18548:	subcs	r0, r0, r1, lsl #26
   1854c:	cmp	r0, r1, lsl #25
   18550:	adc	r2, r2, r2
   18554:	subcs	r0, r0, r1, lsl #25
   18558:	cmp	r0, r1, lsl #24
   1855c:	adc	r2, r2, r2
   18560:	subcs	r0, r0, r1, lsl #24
   18564:	cmp	r0, r1, lsl #23
   18568:	adc	r2, r2, r2
   1856c:	subcs	r0, r0, r1, lsl #23
   18570:	cmp	r0, r1, lsl #22
   18574:	adc	r2, r2, r2
   18578:	subcs	r0, r0, r1, lsl #22
   1857c:	cmp	r0, r1, lsl #21
   18580:	adc	r2, r2, r2
   18584:	subcs	r0, r0, r1, lsl #21
   18588:	cmp	r0, r1, lsl #20
   1858c:	adc	r2, r2, r2
   18590:	subcs	r0, r0, r1, lsl #20
   18594:	cmp	r0, r1, lsl #19
   18598:	adc	r2, r2, r2
   1859c:	subcs	r0, r0, r1, lsl #19
   185a0:	cmp	r0, r1, lsl #18
   185a4:	adc	r2, r2, r2
   185a8:	subcs	r0, r0, r1, lsl #18
   185ac:	cmp	r0, r1, lsl #17
   185b0:	adc	r2, r2, r2
   185b4:	subcs	r0, r0, r1, lsl #17
   185b8:	cmp	r0, r1, lsl #16
   185bc:	adc	r2, r2, r2
   185c0:	subcs	r0, r0, r1, lsl #16
   185c4:	cmp	r0, r1, lsl #15
   185c8:	adc	r2, r2, r2
   185cc:	subcs	r0, r0, r1, lsl #15
   185d0:	cmp	r0, r1, lsl #14
   185d4:	adc	r2, r2, r2
   185d8:	subcs	r0, r0, r1, lsl #14
   185dc:	cmp	r0, r1, lsl #13
   185e0:	adc	r2, r2, r2
   185e4:	subcs	r0, r0, r1, lsl #13
   185e8:	cmp	r0, r1, lsl #12
   185ec:	adc	r2, r2, r2
   185f0:	subcs	r0, r0, r1, lsl #12
   185f4:	cmp	r0, r1, lsl #11
   185f8:	adc	r2, r2, r2
   185fc:	subcs	r0, r0, r1, lsl #11
   18600:	cmp	r0, r1, lsl #10
   18604:	adc	r2, r2, r2
   18608:	subcs	r0, r0, r1, lsl #10
   1860c:	cmp	r0, r1, lsl #9
   18610:	adc	r2, r2, r2
   18614:	subcs	r0, r0, r1, lsl #9
   18618:	cmp	r0, r1, lsl #8
   1861c:	adc	r2, r2, r2
   18620:	subcs	r0, r0, r1, lsl #8
   18624:	cmp	r0, r1, lsl #7
   18628:	adc	r2, r2, r2
   1862c:	subcs	r0, r0, r1, lsl #7
   18630:	cmp	r0, r1, lsl #6
   18634:	adc	r2, r2, r2
   18638:	subcs	r0, r0, r1, lsl #6
   1863c:	cmp	r0, r1, lsl #5
   18640:	adc	r2, r2, r2
   18644:	subcs	r0, r0, r1, lsl #5
   18648:	cmp	r0, r1, lsl #4
   1864c:	adc	r2, r2, r2
   18650:	subcs	r0, r0, r1, lsl #4
   18654:	cmp	r0, r1, lsl #3
   18658:	adc	r2, r2, r2
   1865c:	subcs	r0, r0, r1, lsl #3
   18660:	cmp	r0, r1, lsl #2
   18664:	adc	r2, r2, r2
   18668:	subcs	r0, r0, r1, lsl #2
   1866c:	cmp	r0, r1, lsl #1
   18670:	adc	r2, r2, r2
   18674:	subcs	r0, r0, r1, lsl #1
   18678:	cmp	r0, r1
   1867c:	adc	r2, r2, r2
   18680:	subcs	r0, r0, r1
   18684:	mov	r0, r2
   18688:	bx	lr
   1868c:	moveq	r0, #1
   18690:	movne	r0, #0
   18694:	bx	lr
   18698:	clz	r2, r1
   1869c:	rsb	r2, r2, #31
   186a0:	lsr	r0, r0, r2
   186a4:	bx	lr
   186a8:	cmp	r0, #0
   186ac:	mvnne	r0, #0
   186b0:	b	18950 <dcngettext@plt+0x7960>
   186b4:	cmp	r1, #0
   186b8:	beq	186a8 <dcngettext@plt+0x76b8>
   186bc:	push	{r0, r1, lr}
   186c0:	bl	184c8 <dcngettext@plt+0x74d8>
   186c4:	pop	{r1, r2, lr}
   186c8:	mul	r3, r2, r0
   186cc:	sub	r1, r1, r3
   186d0:	bx	lr
   186d4:	cmp	r1, #0
   186d8:	beq	188e4 <dcngettext@plt+0x78f4>
   186dc:	eor	ip, r0, r1
   186e0:	rsbmi	r1, r1, #0
   186e4:	subs	r2, r1, #1
   186e8:	beq	188b0 <dcngettext@plt+0x78c0>
   186ec:	movs	r3, r0
   186f0:	rsbmi	r3, r0, #0
   186f4:	cmp	r3, r1
   186f8:	bls	188bc <dcngettext@plt+0x78cc>
   186fc:	tst	r1, r2
   18700:	beq	188cc <dcngettext@plt+0x78dc>
   18704:	clz	r2, r3
   18708:	clz	r0, r1
   1870c:	sub	r2, r0, r2
   18710:	rsbs	r2, r2, #31
   18714:	addne	r2, r2, r2, lsl #1
   18718:	mov	r0, #0
   1871c:	addne	pc, pc, r2, lsl #2
   18720:	nop			; (mov r0, r0)
   18724:	cmp	r3, r1, lsl #31
   18728:	adc	r0, r0, r0
   1872c:	subcs	r3, r3, r1, lsl #31
   18730:	cmp	r3, r1, lsl #30
   18734:	adc	r0, r0, r0
   18738:	subcs	r3, r3, r1, lsl #30
   1873c:	cmp	r3, r1, lsl #29
   18740:	adc	r0, r0, r0
   18744:	subcs	r3, r3, r1, lsl #29
   18748:	cmp	r3, r1, lsl #28
   1874c:	adc	r0, r0, r0
   18750:	subcs	r3, r3, r1, lsl #28
   18754:	cmp	r3, r1, lsl #27
   18758:	adc	r0, r0, r0
   1875c:	subcs	r3, r3, r1, lsl #27
   18760:	cmp	r3, r1, lsl #26
   18764:	adc	r0, r0, r0
   18768:	subcs	r3, r3, r1, lsl #26
   1876c:	cmp	r3, r1, lsl #25
   18770:	adc	r0, r0, r0
   18774:	subcs	r3, r3, r1, lsl #25
   18778:	cmp	r3, r1, lsl #24
   1877c:	adc	r0, r0, r0
   18780:	subcs	r3, r3, r1, lsl #24
   18784:	cmp	r3, r1, lsl #23
   18788:	adc	r0, r0, r0
   1878c:	subcs	r3, r3, r1, lsl #23
   18790:	cmp	r3, r1, lsl #22
   18794:	adc	r0, r0, r0
   18798:	subcs	r3, r3, r1, lsl #22
   1879c:	cmp	r3, r1, lsl #21
   187a0:	adc	r0, r0, r0
   187a4:	subcs	r3, r3, r1, lsl #21
   187a8:	cmp	r3, r1, lsl #20
   187ac:	adc	r0, r0, r0
   187b0:	subcs	r3, r3, r1, lsl #20
   187b4:	cmp	r3, r1, lsl #19
   187b8:	adc	r0, r0, r0
   187bc:	subcs	r3, r3, r1, lsl #19
   187c0:	cmp	r3, r1, lsl #18
   187c4:	adc	r0, r0, r0
   187c8:	subcs	r3, r3, r1, lsl #18
   187cc:	cmp	r3, r1, lsl #17
   187d0:	adc	r0, r0, r0
   187d4:	subcs	r3, r3, r1, lsl #17
   187d8:	cmp	r3, r1, lsl #16
   187dc:	adc	r0, r0, r0
   187e0:	subcs	r3, r3, r1, lsl #16
   187e4:	cmp	r3, r1, lsl #15
   187e8:	adc	r0, r0, r0
   187ec:	subcs	r3, r3, r1, lsl #15
   187f0:	cmp	r3, r1, lsl #14
   187f4:	adc	r0, r0, r0
   187f8:	subcs	r3, r3, r1, lsl #14
   187fc:	cmp	r3, r1, lsl #13
   18800:	adc	r0, r0, r0
   18804:	subcs	r3, r3, r1, lsl #13
   18808:	cmp	r3, r1, lsl #12
   1880c:	adc	r0, r0, r0
   18810:	subcs	r3, r3, r1, lsl #12
   18814:	cmp	r3, r1, lsl #11
   18818:	adc	r0, r0, r0
   1881c:	subcs	r3, r3, r1, lsl #11
   18820:	cmp	r3, r1, lsl #10
   18824:	adc	r0, r0, r0
   18828:	subcs	r3, r3, r1, lsl #10
   1882c:	cmp	r3, r1, lsl #9
   18830:	adc	r0, r0, r0
   18834:	subcs	r3, r3, r1, lsl #9
   18838:	cmp	r3, r1, lsl #8
   1883c:	adc	r0, r0, r0
   18840:	subcs	r3, r3, r1, lsl #8
   18844:	cmp	r3, r1, lsl #7
   18848:	adc	r0, r0, r0
   1884c:	subcs	r3, r3, r1, lsl #7
   18850:	cmp	r3, r1, lsl #6
   18854:	adc	r0, r0, r0
   18858:	subcs	r3, r3, r1, lsl #6
   1885c:	cmp	r3, r1, lsl #5
   18860:	adc	r0, r0, r0
   18864:	subcs	r3, r3, r1, lsl #5
   18868:	cmp	r3, r1, lsl #4
   1886c:	adc	r0, r0, r0
   18870:	subcs	r3, r3, r1, lsl #4
   18874:	cmp	r3, r1, lsl #3
   18878:	adc	r0, r0, r0
   1887c:	subcs	r3, r3, r1, lsl #3
   18880:	cmp	r3, r1, lsl #2
   18884:	adc	r0, r0, r0
   18888:	subcs	r3, r3, r1, lsl #2
   1888c:	cmp	r3, r1, lsl #1
   18890:	adc	r0, r0, r0
   18894:	subcs	r3, r3, r1, lsl #1
   18898:	cmp	r3, r1
   1889c:	adc	r0, r0, r0
   188a0:	subcs	r3, r3, r1
   188a4:	cmp	ip, #0
   188a8:	rsbmi	r0, r0, #0
   188ac:	bx	lr
   188b0:	teq	ip, r0
   188b4:	rsbmi	r0, r0, #0
   188b8:	bx	lr
   188bc:	movcc	r0, #0
   188c0:	asreq	r0, ip, #31
   188c4:	orreq	r0, r0, #1
   188c8:	bx	lr
   188cc:	clz	r2, r1
   188d0:	rsb	r2, r2, #31
   188d4:	cmp	ip, #0
   188d8:	lsr	r0, r3, r2
   188dc:	rsbmi	r0, r0, #0
   188e0:	bx	lr
   188e4:	cmp	r0, #0
   188e8:	mvngt	r0, #-2147483648	; 0x80000000
   188ec:	movlt	r0, #-2147483648	; 0x80000000
   188f0:	b	18950 <dcngettext@plt+0x7960>
   188f4:	cmp	r1, #0
   188f8:	beq	188e4 <dcngettext@plt+0x78f4>
   188fc:	push	{r0, r1, lr}
   18900:	bl	186dc <dcngettext@plt+0x76ec>
   18904:	pop	{r1, r2, lr}
   18908:	mul	r3, r2, r0
   1890c:	sub	r1, r1, r3
   18910:	bx	lr
   18914:	cmp	r3, #0
   18918:	cmpeq	r2, #0
   1891c:	bne	18934 <dcngettext@plt+0x7944>
   18920:	cmp	r1, #0
   18924:	cmpeq	r0, #0
   18928:	mvnne	r1, #0
   1892c:	mvnne	r0, #0
   18930:	b	18950 <dcngettext@plt+0x7960>
   18934:	sub	sp, sp, #8
   18938:	push	{sp, lr}
   1893c:	bl	18960 <dcngettext@plt+0x7970>
   18940:	ldr	lr, [sp, #4]
   18944:	add	sp, sp, #8
   18948:	pop	{r2, r3}
   1894c:	bx	lr
   18950:	push	{r1, lr}
   18954:	mov	r0, #8
   18958:	bl	10d74 <raise@plt>
   1895c:	pop	{r1, pc}
   18960:	cmp	r1, r3
   18964:	push	{r4, r5, r6, r7, r8, r9, lr}
   18968:	cmpeq	r0, r2
   1896c:	mov	r4, r0
   18970:	mov	r5, r1
   18974:	ldr	r9, [sp, #28]
   18978:	movcc	r0, #0
   1897c:	movcc	r1, #0
   18980:	bcc	18a78 <dcngettext@plt+0x7a88>
   18984:	cmp	r3, #0
   18988:	clzeq	ip, r2
   1898c:	clzne	ip, r3
   18990:	addeq	ip, ip, #32
   18994:	cmp	r5, #0
   18998:	clzeq	r1, r4
   1899c:	addeq	r1, r1, #32
   189a0:	clzne	r1, r5
   189a4:	sub	ip, ip, r1
   189a8:	sub	lr, ip, #32
   189ac:	lsl	r7, r3, ip
   189b0:	rsb	r8, ip, #32
   189b4:	orr	r7, r7, r2, lsl lr
   189b8:	orr	r7, r7, r2, lsr r8
   189bc:	lsl	r6, r2, ip
   189c0:	cmp	r5, r7
   189c4:	cmpeq	r4, r6
   189c8:	movcc	r0, #0
   189cc:	movcc	r1, #0
   189d0:	bcc	189ec <dcngettext@plt+0x79fc>
   189d4:	mov	r3, #1
   189d8:	subs	r4, r4, r6
   189dc:	lsl	r1, r3, lr
   189e0:	lsl	r0, r3, ip
   189e4:	orr	r1, r1, r3, lsr r8
   189e8:	sbc	r5, r5, r7
   189ec:	cmp	ip, #0
   189f0:	beq	18a78 <dcngettext@plt+0x7a88>
   189f4:	lsrs	r3, r7, #1
   189f8:	rrx	r2, r6
   189fc:	mov	r6, ip
   18a00:	b	18a24 <dcngettext@plt+0x7a34>
   18a04:	subs	r4, r4, r2
   18a08:	sbc	r5, r5, r3
   18a0c:	adds	r4, r4, r4
   18a10:	adc	r5, r5, r5
   18a14:	adds	r4, r4, #1
   18a18:	adc	r5, r5, #0
   18a1c:	subs	r6, r6, #1
   18a20:	beq	18a40 <dcngettext@plt+0x7a50>
   18a24:	cmp	r5, r3
   18a28:	cmpeq	r4, r2
   18a2c:	bcs	18a04 <dcngettext@plt+0x7a14>
   18a30:	adds	r4, r4, r4
   18a34:	adc	r5, r5, r5
   18a38:	subs	r6, r6, #1
   18a3c:	bne	18a24 <dcngettext@plt+0x7a34>
   18a40:	lsr	r6, r4, ip
   18a44:	lsr	r7, r5, ip
   18a48:	orr	r6, r6, r5, lsl r8
   18a4c:	adds	r2, r0, r4
   18a50:	orr	r6, r6, r5, lsr lr
   18a54:	adc	r3, r1, r5
   18a58:	lsl	r1, r7, ip
   18a5c:	orr	r1, r1, r6, lsl lr
   18a60:	lsl	r0, r6, ip
   18a64:	orr	r1, r1, r6, lsr r8
   18a68:	subs	r0, r2, r0
   18a6c:	mov	r4, r6
   18a70:	mov	r5, r7
   18a74:	sbc	r1, r3, r1
   18a78:	cmp	r9, #0
   18a7c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   18a80:	strd	r4, [r9]
   18a84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18a88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18a8c:	mov	r7, r0
   18a90:	ldr	r6, [pc, #72]	; 18ae0 <dcngettext@plt+0x7af0>
   18a94:	ldr	r5, [pc, #72]	; 18ae4 <dcngettext@plt+0x7af4>
   18a98:	add	r6, pc, r6
   18a9c:	add	r5, pc, r5
   18aa0:	sub	r6, r6, r5
   18aa4:	mov	r8, r1
   18aa8:	mov	r9, r2
   18aac:	bl	10d30 <fdopen@plt-0x20>
   18ab0:	asrs	r6, r6, #2
   18ab4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ab8:	mov	r4, #0
   18abc:	add	r4, r4, #1
   18ac0:	ldr	r3, [r5], #4
   18ac4:	mov	r2, r9
   18ac8:	mov	r1, r8
   18acc:	mov	r0, r7
   18ad0:	blx	r3
   18ad4:	cmp	r6, r4
   18ad8:	bne	18abc <dcngettext@plt+0x7acc>
   18adc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ae0:	andeq	r1, r1, r0, ror r4
   18ae4:	andeq	r1, r1, r8, ror #8
   18ae8:	bx	lr
   18aec:	ldr	r3, [pc, #12]	; 18b00 <dcngettext@plt+0x7b10>
   18af0:	mov	r1, #0
   18af4:	add	r3, pc, r3
   18af8:	ldr	r2, [r3]
   18afc:	b	10f00 <__cxa_atexit@plt>
   18b00:	strdeq	r1, [r1], -ip

Disassembly of section .fini:

00018b04 <.fini>:
   18b04:	push	{r3, lr}
   18b08:	pop	{r3, pc}
