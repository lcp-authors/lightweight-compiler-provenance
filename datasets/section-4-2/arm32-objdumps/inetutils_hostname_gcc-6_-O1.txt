
../repos/inetutils/src/hostname:     file format elf32-littlearm


Disassembly of section .init:

00010f20 <.init>:
   10f20:	push	{r3, lr}
   10f24:	bl	11240 <__assert_fail@plt+0x48>
   10f28:	pop	{r3, pc}

Disassembly of section .plt:

00010f2c <calloc@plt-0x14>:
   10f2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f30:	ldr	lr, [pc, #4]	; 10f3c <calloc@plt-0x4>
   10f34:	add	lr, pc, lr
   10f38:	ldr	pc, [lr, #8]!
   10f3c:	andeq	r9, r1, r4, asr #1

00010f40 <calloc@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #102400	; 0x19000
   10f48:	ldr	pc, [ip, #196]!	; 0xc4

00010f4c <fputs_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #102400	; 0x19000
   10f54:	ldr	pc, [ip, #188]!	; 0xbc

00010f58 <raise@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #102400	; 0x19000
   10f60:	ldr	pc, [ip, #180]!	; 0xb4

00010f64 <__getdelim@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #102400	; 0x19000
   10f6c:	ldr	pc, [ip, #172]!	; 0xac

00010f70 <strcmp@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #102400	; 0x19000
   10f78:	ldr	pc, [ip, #164]!	; 0xa4

00010f7c <strtol@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #102400	; 0x19000
   10f84:	ldr	pc, [ip, #156]!	; 0x9c

00010f88 <printf@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #102400	; 0x19000
   10f90:	ldr	pc, [ip, #148]!	; 0x94

00010f94 <hstrerror@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #102400	; 0x19000
   10f9c:	ldr	pc, [ip, #140]!	; 0x8c

00010fa0 <memmove@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #102400	; 0x19000
   10fa8:	ldr	pc, [ip, #132]!	; 0x84

00010fac <strchrnul@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #102400	; 0x19000
   10fb4:	ldr	pc, [ip, #124]!	; 0x7c

00010fb8 <free@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #102400	; 0x19000
   10fc0:	ldr	pc, [ip, #116]!	; 0x74

00010fc4 <strndup@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #102400	; 0x19000
   10fcc:	ldr	pc, [ip, #108]!	; 0x6c

00010fd0 <memcpy@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #102400	; 0x19000
   10fd8:	ldr	pc, [ip, #100]!	; 0x64

00010fdc <fwrite_unlocked@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #102400	; 0x19000
   10fe4:	ldr	pc, [ip, #92]!	; 0x5c

00010fe8 <sleep@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #102400	; 0x19000
   10ff0:	ldr	pc, [ip, #84]!	; 0x54

00010ff4 <getdomainname@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #102400	; 0x19000
   10ffc:	ldr	pc, [ip, #76]!	; 0x4c

00011000 <strdup@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #68]!	; 0x44

0001100c <realloc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #102400	; 0x19000
   11014:	ldr	pc, [ip, #60]!	; 0x3c

00011018 <strcasecmp@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #102400	; 0x19000
   11020:	ldr	pc, [ip, #52]!	; 0x34

00011024 <funlockfile@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #102400	; 0x19000
   1102c:	ldr	pc, [ip, #44]!	; 0x2c

00011030 <fwrite@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #102400	; 0x19000
   11038:	ldr	pc, [ip, #36]!	; 0x24

0001103c <strcat@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #102400	; 0x19000
   11044:	ldr	pc, [ip, #28]!

00011048 <error@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #102400	; 0x19000
   11050:	ldr	pc, [ip, #20]!

00011054 <gethostname@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #102400	; 0x19000
   1105c:	ldr	pc, [ip, #12]!

00011060 <getenv@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #102400	; 0x19000
   11068:	ldr	pc, [ip, #4]!

0001106c <puts@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4092]!	; 0xffc

00011078 <malloc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4084]!	; 0xff4

00011084 <__libc_start_main@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4076]!	; 0xfec

00011090 <strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4068]!	; 0xfe4

0001109c <__h_errno_location@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #4060]!	; 0xfdc

000110a8 <sethostname@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #4052]!	; 0xfd4

000110b4 <__ctype_tolower_loc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #4044]!	; 0xfcc

000110c0 <__gmon_start__@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #4036]!	; 0xfc4

000110cc <mempcpy@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #4028]!	; 0xfbc

000110d8 <__ctype_b_loc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110e4 <exit@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #4012]!	; 0xfac

000110f0 <feof@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110fc <strlen@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3996]!	; 0xf9c

00011108 <strchr@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3988]!	; 0xf94

00011114 <fprintf@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3980]!	; 0xf8c

00011120 <__errno_location@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3972]!	; 0xf84

0001112c <strerror_r@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3964]!	; 0xf7c

00011138 <memset@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3956]!	; 0xf74

00011144 <memchr@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011150 <fclose@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3940]!	; 0xf64

0001115c <__overflow@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3932]!	; 0xf5c

00011168 <strrchr@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3924]!	; 0xf54

00011174 <vfprintf@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011180 <fputc@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3908]!	; 0xf44

0001118c <sscanf@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3900]!	; 0xf3c

00011198 <flockfile@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3892]!	; 0xf34

000111a4 <vsnprintf@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3884]!	; 0xf2c

000111b0 <fopen64@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3876]!	; 0xf24

000111bc <qsort@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3868]!	; 0xf1c

000111c8 <inet_ntop@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3860]!	; 0xf14

000111d4 <gethostbyname@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3852]!	; 0xf0c

000111e0 <strncmp@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3844]!	; 0xf04

000111ec <abort@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3836]!	; 0xefc

000111f8 <__assert_fail@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3828]!	; 0xef4

Disassembly of section .text:

00011204 <argp_parse@@Base-0xeb0>:
   11204:	mov	fp, #0
   11208:	mov	lr, #0
   1120c:	pop	{r1}		; (ldr r1, [sp], #4)
   11210:	mov	r2, sp
   11214:	push	{r2}		; (str r2, [sp, #-4]!)
   11218:	push	{r0}		; (str r0, [sp, #-4]!)
   1121c:	ldr	ip, [pc, #16]	; 11234 <__assert_fail@plt+0x3c>
   11220:	push	{ip}		; (str ip, [sp, #-4]!)
   11224:	ldr	r0, [pc, #12]	; 11238 <__assert_fail@plt+0x40>
   11228:	ldr	r3, [pc, #12]	; 1123c <__assert_fail@plt+0x44>
   1122c:	bl	11084 <__libc_start_main@plt>
   11230:	bl	111ec <abort@plt>
   11234:	andeq	r8, r1, r8, asr #10
   11238:	muleq	r1, ip, r4
   1123c:	andeq	r8, r1, r8, ror #9
   11240:	ldr	r3, [pc, #20]	; 1125c <__assert_fail@plt+0x64>
   11244:	ldr	r2, [pc, #20]	; 11260 <__assert_fail@plt+0x68>
   11248:	add	r3, pc, r3
   1124c:	ldr	r2, [r3, r2]
   11250:	cmp	r2, #0
   11254:	bxeq	lr
   11258:	b	110c0 <__gmon_start__@plt>
   1125c:			; <UNDEFINED> instruction: 0x00018db0
   11260:	strdeq	r0, [r0], -r8
   11264:	ldr	r3, [pc, #28]	; 11288 <__assert_fail@plt+0x90>
   11268:	ldr	r0, [pc, #28]	; 1128c <__assert_fail@plt+0x94>
   1126c:	sub	r3, r3, r0
   11270:	cmp	r3, #6
   11274:	bxls	lr
   11278:	ldr	r3, [pc, #16]	; 11290 <__assert_fail@plt+0x98>
   1127c:	cmp	r3, #0
   11280:	bxeq	lr
   11284:	bx	r3
   11288:	andeq	sl, r2, r7, asr r2
   1128c:	andeq	sl, r2, r4, asr r2
   11290:	andeq	r0, r0, r0
   11294:	ldr	r1, [pc, #36]	; 112c0 <__assert_fail@plt+0xc8>
   11298:	ldr	r0, [pc, #36]	; 112c4 <__assert_fail@plt+0xcc>
   1129c:	sub	r1, r1, r0
   112a0:	asr	r1, r1, #2
   112a4:	add	r1, r1, r1, lsr #31
   112a8:	asrs	r1, r1, #1
   112ac:	bxeq	lr
   112b0:	ldr	r3, [pc, #16]	; 112c8 <__assert_fail@plt+0xd0>
   112b4:	cmp	r3, #0
   112b8:	bxeq	lr
   112bc:	bx	r3
   112c0:	andeq	sl, r2, r4, asr r2
   112c4:	andeq	sl, r2, r4, asr r2
   112c8:	andeq	r0, r0, r0
   112cc:	push	{r4, lr}
   112d0:	ldr	r4, [pc, #24]	; 112f0 <__assert_fail@plt+0xf8>
   112d4:	ldrb	r3, [r4]
   112d8:	cmp	r3, #0
   112dc:	popne	{r4, pc}
   112e0:	bl	11264 <__assert_fail@plt+0x6c>
   112e4:	mov	r3, #1
   112e8:	strb	r3, [r4]
   112ec:	pop	{r4, pc}
   112f0:	andeq	sl, r2, r8, ror #4
   112f4:	ldr	r0, [pc, #40]	; 11324 <__assert_fail@plt+0x12c>
   112f8:	ldr	r3, [r0]
   112fc:	cmp	r3, #0
   11300:	bne	11308 <__assert_fail@plt+0x110>
   11304:	b	11294 <__assert_fail@plt+0x9c>
   11308:	ldr	r3, [pc, #24]	; 11328 <__assert_fail@plt+0x130>
   1130c:	cmp	r3, #0
   11310:	beq	11304 <__assert_fail@plt+0x10c>
   11314:	push	{r4, lr}
   11318:	blx	r3
   1131c:	pop	{r4, lr}
   11320:	b	11294 <__assert_fail@plt+0x9c>
   11324:	andeq	r9, r2, ip, lsl #30
   11328:	andeq	r0, r0, r0
   1132c:	push	{r4, lr}
   11330:	ldr	r4, [r2, #28]
   11334:	cmp	r0, #100	; 0x64
   11338:	beq	113d0 <__assert_fail@plt+0x1d8>
   1133c:	ble	11370 <__assert_fail@plt+0x178>
   11340:	cmp	r0, #105	; 0x69
   11344:	beq	11408 <__assert_fail@plt+0x210>
   11348:	ble	11390 <__assert_fail@plt+0x198>
   1134c:	cmp	r0, #115	; 0x73
   11350:	beq	11424 <__assert_fail@plt+0x22c>
   11354:	cmp	r0, #121	; 0x79
   11358:	bne	11388 <__assert_fail@plt+0x190>
   1135c:	ldr	r2, [pc, #292]	; 11488 <__assert_fail@plt+0x290>
   11360:	ldr	r3, [pc, #292]	; 1148c <__assert_fail@plt+0x294>
   11364:	str	r2, [r3]
   11368:	mov	r0, #0
   1136c:	pop	{r4, pc}
   11370:	cmp	r0, #70	; 0x46
   11374:	beq	113f0 <__assert_fail@plt+0x1f8>
   11378:	cmp	r0, #97	; 0x61
   1137c:	beq	113b4 <__assert_fail@plt+0x1bc>
   11380:	cmp	r0, #0
   11384:	beq	11444 <__assert_fail@plt+0x24c>
   11388:	mov	r0, #7
   1138c:	pop	{r4, pc}
   11390:	cmp	r0, #102	; 0x66
   11394:	bne	11388 <__assert_fail@plt+0x190>
   11398:	ldr	r2, [pc, #240]	; 11490 <__assert_fail@plt+0x298>
   1139c:	ldr	r3, [pc, #232]	; 1148c <__assert_fail@plt+0x294>
   113a0:	str	r2, [r3]
   113a4:	mov	r3, #1
   113a8:	strh	r3, [r4, #10]
   113ac:	mov	r0, #0
   113b0:	pop	{r4, pc}
   113b4:	ldr	r2, [pc, #212]	; 11490 <__assert_fail@plt+0x298>
   113b8:	ldr	r3, [pc, #204]	; 1148c <__assert_fail@plt+0x294>
   113bc:	str	r2, [r3]
   113c0:	mov	r3, #1
   113c4:	strh	r3, [r4, #8]
   113c8:	mov	r0, #0
   113cc:	pop	{r4, pc}
   113d0:	ldr	r2, [pc, #184]	; 11490 <__assert_fail@plt+0x298>
   113d4:	ldr	r3, [pc, #176]	; 1148c <__assert_fail@plt+0x294>
   113d8:	str	r2, [r3]
   113dc:	mov	r3, #1
   113e0:	strh	r3, [r4, #10]
   113e4:	strh	r3, [r4, #14]
   113e8:	mov	r0, #0
   113ec:	pop	{r4, pc}
   113f0:	ldr	r2, [pc, #156]	; 11494 <__assert_fail@plt+0x29c>
   113f4:	ldr	r3, [pc, #144]	; 1148c <__assert_fail@plt+0x294>
   113f8:	str	r2, [r3, #4]
   113fc:	str	r1, [r4]
   11400:	mov	r0, #0
   11404:	pop	{r4, pc}
   11408:	ldr	r2, [pc, #128]	; 11490 <__assert_fail@plt+0x298>
   1140c:	ldr	r3, [pc, #120]	; 1148c <__assert_fail@plt+0x294>
   11410:	str	r2, [r3]
   11414:	mov	r3, #1
   11418:	strh	r3, [r4, #12]
   1141c:	mov	r0, #0
   11420:	pop	{r4, pc}
   11424:	ldr	r2, [pc, #100]	; 11490 <__assert_fail@plt+0x298>
   11428:	ldr	r3, [pc, #92]	; 1148c <__assert_fail@plt+0x294>
   1142c:	str	r2, [r3]
   11430:	mov	r3, #1
   11434:	strh	r3, [r4, #10]
   11438:	strh	r3, [r4, #16]
   1143c:	mov	r0, #0
   11440:	pop	{r4, pc}
   11444:	mov	r0, r1
   11448:	ldr	r2, [pc, #68]	; 11494 <__assert_fail@plt+0x29c>
   1144c:	ldr	r3, [pc, #56]	; 1148c <__assert_fail@plt+0x294>
   11450:	str	r2, [r3, #4]
   11454:	bl	11000 <strdup@plt>
   11458:	str	r0, [r4, #4]
   1145c:	cmp	r0, #0
   11460:	beq	1146c <__assert_fail@plt+0x274>
   11464:	mov	r0, #0
   11468:	pop	{r4, pc}
   1146c:	bl	11120 <__errno_location@plt>
   11470:	ldr	r2, [pc, #32]	; 11498 <__assert_fail@plt+0x2a0>
   11474:	ldr	r1, [r0]
   11478:	mov	r0, #1
   1147c:	bl	11048 <error@plt>
   11480:	mov	r0, #0
   11484:	pop	{r4, pc}
   11488:	andeq	r3, r1, r0, ror #16
   1148c:	andeq	sl, r2, ip, ror #4
   11490:	andeq	r3, r1, r8, asr r9
   11494:	andeq	r1, r1, r8, lsr #1
   11498:	andeq	r8, r1, r4, lsl #11
   1149c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114a0:	sub	sp, sp, #52	; 0x34
   114a4:	mov	r8, r0
   114a8:	mov	r7, r1
   114ac:	ldr	r0, [r1]
   114b0:	bl	12db8 <argp_parse@@Base+0xd04>
   114b4:	add	r5, sp, #28
   114b8:	mov	r4, #0
   114bc:	str	r4, [sp, #28]
   114c0:	str	r4, [sp, #32]
   114c4:	str	r4, [sp, #36]	; 0x24
   114c8:	str	r4, [sp, #40]	; 0x28
   114cc:	str	r4, [sp, #44]	; 0x2c
   114d0:	ldr	r2, [pc, #1440]	; 11a78 <__assert_fail@plt+0x880>
   114d4:	ldr	r3, [pc, #1440]	; 11a7c <__assert_fail@plt+0x884>
   114d8:	str	r2, [r3]
   114dc:	ldr	r6, [pc, #1436]	; 11a80 <__assert_fail@plt+0x888>
   114e0:	mov	r1, r6
   114e4:	ldr	r0, [pc, #1432]	; 11a84 <__assert_fail@plt+0x88c>
   114e8:	bl	12bc0 <argp_parse@@Base+0xb0c>
   114ec:	str	r5, [sp, #4]
   114f0:	str	r4, [sp]
   114f4:	mov	r3, r4
   114f8:	mov	r2, r7
   114fc:	mov	r1, r8
   11500:	add	r0, r6, #8
   11504:	bl	120b4 <argp_parse@@Base>
   11508:	ldr	r3, [pc, #1400]	; 11a88 <__assert_fail@plt+0x890>
   1150c:	ldr	r3, [r3]
   11510:	cmp	r3, r4
   11514:	beq	1154c <__assert_fail@plt+0x354>
   11518:	ldr	r2, [pc, #1388]	; 11a8c <__assert_fail@plt+0x894>
   1151c:	ldr	r1, [pc, #1388]	; 11a90 <__assert_fail@plt+0x898>
   11520:	cmp	r3, r2
   11524:	cmpne	r3, r1
   11528:	beq	11568 <__assert_fail@plt+0x370>
   1152c:	ldr	r3, [pc, #1364]	; 11a88 <__assert_fail@plt+0x890>
   11530:	ldr	r2, [r3, #4]
   11534:	ldr	r3, [pc, #1368]	; 11a94 <__assert_fail@plt+0x89c>
   11538:	cmp	r2, r3
   1153c:	beq	11900 <__assert_fail@plt+0x708>
   11540:	mov	r0, #0
   11544:	add	sp, sp, #52	; 0x34
   11548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1154c:	ldr	r3, [pc, #1332]	; 11a88 <__assert_fail@plt+0x890>
   11550:	ldr	r3, [r3, #4]
   11554:	cmp	r3, r4
   11558:	bne	1152c <__assert_fail@plt+0x334>
   1155c:	ldr	r3, [pc, #1324]	; 11a90 <__assert_fail@plt+0x898>
   11560:	ldr	r2, [pc, #1312]	; 11a88 <__assert_fail@plt+0x890>
   11564:	str	r3, [r2]
   11568:	blx	r3
   1156c:	subs	r9, r0, #0
   11570:	beq	115c8 <__assert_fail@plt+0x3d0>
   11574:	ldrsh	r3, [sp, #36]	; 0x24
   11578:	cmp	r3, #1
   1157c:	beq	115e0 <__assert_fail@plt+0x3e8>
   11580:	ldrsh	r3, [sp, #38]	; 0x26
   11584:	cmp	r3, #1
   11588:	beq	1168c <__assert_fail@plt+0x494>
   1158c:	ldrsh	r3, [sp, #40]	; 0x28
   11590:	cmp	r3, #1
   11594:	beq	117ec <__assert_fail@plt+0x5f4>
   11598:	mov	r0, r9
   1159c:	bl	11000 <strdup@plt>
   115a0:	subs	r4, r0, #0
   115a4:	beq	118d8 <__assert_fail@plt+0x6e0>
   115a8:	ldrb	r3, [r4]
   115ac:	cmp	r3, #0
   115b0:	bne	118f4 <__assert_fail@plt+0x6fc>
   115b4:	mov	r0, r4
   115b8:	bl	12ca8 <argp_parse@@Base+0xbf4>
   115bc:	mov	r0, r9
   115c0:	bl	12ca8 <argp_parse@@Base+0xbf4>
   115c4:	b	11540 <__assert_fail@plt+0x348>
   115c8:	bl	11120 <__errno_location@plt>
   115cc:	ldr	r2, [pc, #1220]	; 11a98 <__assert_fail@plt+0x8a0>
   115d0:	ldr	r1, [r0]
   115d4:	mov	r0, #1
   115d8:	bl	11048 <error@plt>
   115dc:	b	11574 <__assert_fail@plt+0x37c>
   115e0:	mov	r0, #256	; 0x100
   115e4:	bl	13290 <argp_parse@@Base+0x11dc>
   115e8:	mov	r4, r0
   115ec:	mov	r3, #0
   115f0:	strb	r3, [r0]
   115f4:	mov	r0, r9
   115f8:	bl	111d4 <gethostbyname@plt>
   115fc:	subs	r8, r0, #0
   11600:	moveq	r3, #0
   11604:	strbeq	r3, [r4]
   11608:	beq	116d4 <__assert_fail@plt+0x4dc>
   1160c:	mov	r6, #0
   11610:	mov	sl, #256	; 0x100
   11614:	mov	r5, r6
   11618:	ldr	fp, [pc, #1148]	; 11a9c <__assert_fail@plt+0x8a4>
   1161c:	b	11644 <__assert_fail@plt+0x44c>
   11620:	ldr	r3, [r8, #4]
   11624:	ldr	r1, [r3, r6]
   11628:	mov	r0, r4
   1162c:	bl	1103c <strcat@plt>
   11630:	mov	r0, r4
   11634:	bl	110fc <strlen@plt>
   11638:	ldrh	r3, [fp]
   1163c:	strh	r3, [r4, r0]
   11640:	mov	r6, r7
   11644:	ldr	r3, [r8, #4]
   11648:	ldr	r0, [r3, r6]
   1164c:	cmp	r0, #0
   11650:	beq	116d4 <__assert_fail@plt+0x4dc>
   11654:	add	r7, r6, #4
   11658:	ldr	r3, [r3, r7]
   1165c:	cmp	r3, #0
   11660:	addne	r5, r5, #1
   11664:	bl	110fc <strlen@plt>
   11668:	add	r5, r5, r0
   1166c:	cmp	r5, sl
   11670:	bcc	11620 <__assert_fail@plt+0x428>
   11674:	lsl	sl, sl, #1
   11678:	mov	r1, sl
   1167c:	mov	r0, r4
   11680:	bl	132c4 <argp_parse@@Base+0x1210>
   11684:	mov	r4, r0
   11688:	b	11620 <__assert_fail@plt+0x428>
   1168c:	mov	r0, r9
   11690:	bl	111d4 <gethostbyname@plt>
   11694:	cmp	r0, #0
   11698:	moveq	r0, r9
   1169c:	ldrne	r0, [r0]
   116a0:	bl	11000 <strdup@plt>
   116a4:	mov	r4, r0
   116a8:	cmp	r0, #0
   116ac:	beq	116e0 <__assert_fail@plt+0x4e8>
   116b0:	ldrsh	r3, [sp, #42]	; 0x2a
   116b4:	cmp	r3, #1
   116b8:	beq	11710 <__assert_fail@plt+0x518>
   116bc:	ldrsh	r3, [sp, #44]	; 0x2c
   116c0:	cmp	r3, #1
   116c4:	beq	11710 <__assert_fail@plt+0x518>
   116c8:	ldrsh	r3, [sp, #44]	; 0x2c
   116cc:	cmp	r3, #1
   116d0:	beq	11798 <__assert_fail@plt+0x5a0>
   116d4:	cmp	r4, #0
   116d8:	bne	115a8 <__assert_fail@plt+0x3b0>
   116dc:	b	115b4 <__assert_fail@plt+0x3bc>
   116e0:	bl	11120 <__errno_location@plt>
   116e4:	ldr	r2, [pc, #948]	; 11aa0 <__assert_fail@plt+0x8a8>
   116e8:	ldr	r1, [r0]
   116ec:	mov	r0, #1
   116f0:	bl	11048 <error@plt>
   116f4:	ldrsh	r3, [sp, #42]	; 0x2a
   116f8:	cmp	r3, #1
   116fc:	beq	1173c <__assert_fail@plt+0x544>
   11700:	ldrsh	r3, [sp, #44]	; 0x2c
   11704:	cmp	r3, #1
   11708:	beq	1173c <__assert_fail@plt+0x544>
   1170c:	b	116c8 <__assert_fail@plt+0x4d0>
   11710:	ldrb	r3, [r4]
   11714:	cmp	r3, #40	; 0x28
   11718:	cmpne	r3, #0
   1171c:	beq	11734 <__assert_fail@plt+0x53c>
   11720:	mov	r0, r9
   11724:	bl	12ca8 <argp_parse@@Base+0xbf4>
   11728:	mov	r9, r4
   1172c:	mov	r4, #0
   11730:	b	1173c <__assert_fail@plt+0x544>
   11734:	cmp	r3, #40	; 0x28
   11738:	beq	11788 <__assert_fail@plt+0x590>
   1173c:	ldrsh	r3, [sp, #42]	; 0x2a
   11740:	cmp	r3, #1
   11744:	bne	116c8 <__assert_fail@plt+0x4d0>
   11748:	mov	r1, #46	; 0x2e
   1174c:	mov	r0, r9
   11750:	bl	11108 <strchr@plt>
   11754:	cmp	r0, #0
   11758:	ldreq	r0, [pc, #836]	; 11aa4 <__assert_fail@plt+0x8ac>
   1175c:	addne	r0, r0, #1
   11760:	bl	11000 <strdup@plt>
   11764:	mov	r4, r0
   11768:	cmp	r0, #0
   1176c:	bne	115a8 <__assert_fail@plt+0x3b0>
   11770:	bl	11120 <__errno_location@plt>
   11774:	ldr	r2, [pc, #804]	; 11aa0 <__assert_fail@plt+0x8a8>
   11778:	ldr	r1, [r0]
   1177c:	mov	r0, #1
   11780:	bl	11048 <error@plt>
   11784:	b	118ec <__assert_fail@plt+0x6f4>
   11788:	mov	r0, r4
   1178c:	bl	12ca8 <argp_parse@@Base+0xbf4>
   11790:	mov	r4, #0
   11794:	b	1173c <__assert_fail@plt+0x544>
   11798:	mov	r1, #46	; 0x2e
   1179c:	mov	r0, r9
   117a0:	bl	11108 <strchr@plt>
   117a4:	subs	r1, r0, #0
   117a8:	beq	117dc <__assert_fail@plt+0x5e4>
   117ac:	sub	r1, r1, r9
   117b0:	mov	r0, r9
   117b4:	bl	10fc4 <strndup@plt>
   117b8:	mov	r4, r0
   117bc:	cmp	r4, #0
   117c0:	bne	115a8 <__assert_fail@plt+0x3b0>
   117c4:	bl	11120 <__errno_location@plt>
   117c8:	ldr	r2, [pc, #720]	; 11aa0 <__assert_fail@plt+0x8a8>
   117cc:	ldr	r1, [r0]
   117d0:	mov	r0, #1
   117d4:	bl	11048 <error@plt>
   117d8:	b	118ec <__assert_fail@plt+0x6f4>
   117dc:	mov	r0, r9
   117e0:	bl	11000 <strdup@plt>
   117e4:	mov	r4, r0
   117e8:	b	117bc <__assert_fail@plt+0x5c4>
   117ec:	mov	r0, #256	; 0x100
   117f0:	bl	13290 <argp_parse@@Base+0x11dc>
   117f4:	mov	r4, r0
   117f8:	mov	r3, #0
   117fc:	strb	r3, [r0]
   11800:	mov	r0, r9
   11804:	bl	111d4 <gethostbyname@plt>
   11808:	subs	r7, r0, #0
   1180c:	beq	1189c <__assert_fail@plt+0x6a4>
   11810:	mov	r5, #0
   11814:	mov	r8, #256	; 0x100
   11818:	mov	r6, r5
   1181c:	mov	sl, #16
   11820:	ldr	fp, [pc, #628]	; 11a9c <__assert_fail@plt+0x8a4>
   11824:	ldr	r3, [r7, #16]
   11828:	ldr	r1, [r3, r5]
   1182c:	cmp	r1, #0
   11830:	beq	116d4 <__assert_fail@plt+0x4dc>
   11834:	mov	r3, sl
   11838:	add	r2, sp, #12
   1183c:	ldr	r0, [r7, #8]
   11840:	bl	111c8 <inet_ntop@plt>
   11844:	add	r5, r5, #4
   11848:	ldr	r3, [r7, #16]
   1184c:	ldr	r3, [r3, r5]
   11850:	cmp	r3, #0
   11854:	addne	r6, r6, #1
   11858:	add	r0, sp, #12
   1185c:	bl	110fc <strlen@plt>
   11860:	add	r6, r6, r0
   11864:	cmp	r6, r8
   11868:	bcs	118c0 <__assert_fail@plt+0x6c8>
   1186c:	add	r1, sp, #12
   11870:	mov	r0, r4
   11874:	bl	1103c <strcat@plt>
   11878:	ldr	r3, [r7, #16]
   1187c:	ldr	r3, [r3, r5]
   11880:	cmp	r3, #0
   11884:	beq	11824 <__assert_fail@plt+0x62c>
   11888:	mov	r0, r4
   1188c:	bl	110fc <strlen@plt>
   11890:	ldrh	r3, [fp]
   11894:	strh	r3, [r4, r0]
   11898:	b	11824 <__assert_fail@plt+0x62c>
   1189c:	bl	1109c <__h_errno_location@plt>
   118a0:	ldr	r0, [r0]
   118a4:	bl	10f94 <hstrerror@plt>
   118a8:	mov	r3, r0
   118ac:	ldr	r2, [pc, #500]	; 11aa8 <__assert_fail@plt+0x8b0>
   118b0:	mov	r1, #0
   118b4:	mov	r0, #1
   118b8:	bl	11048 <error@plt>
   118bc:	b	116d4 <__assert_fail@plt+0x4dc>
   118c0:	lsl	r8, r8, #1
   118c4:	mov	r1, r8
   118c8:	mov	r0, r4
   118cc:	bl	132c4 <argp_parse@@Base+0x1210>
   118d0:	mov	r4, r0
   118d4:	b	1186c <__assert_fail@plt+0x674>
   118d8:	bl	11120 <__errno_location@plt>
   118dc:	ldr	r2, [pc, #444]	; 11aa0 <__assert_fail@plt+0x8a8>
   118e0:	ldr	r1, [r0]
   118e4:	mov	r0, #1
   118e8:	bl	11048 <error@plt>
   118ec:	mov	r4, #0
   118f0:	b	115b4 <__assert_fail@plt+0x3bc>
   118f4:	mov	r0, r4
   118f8:	bl	1106c <puts@plt>
   118fc:	b	115b4 <__assert_fail@plt+0x3bc>
   11900:	ldr	r0, [sp, #28]
   11904:	cmp	r0, #0
   11908:	ldreq	r4, [sp, #32]
   1190c:	beq	11a0c <__assert_fail@plt+0x814>
   11910:	mov	r3, #0
   11914:	str	r3, [sp, #8]
   11918:	str	r3, [sp, #12]
   1191c:	ldr	r1, [pc, #392]	; 11aac <__assert_fail@plt+0x8b4>
   11920:	bl	111b0 <fopen64@plt>
   11924:	subs	r5, r0, #0
   11928:	beq	11950 <__assert_fail@plt+0x758>
   1192c:	bl	11120 <__errno_location@plt>
   11930:	mov	r7, r0
   11934:	mov	r3, #0
   11938:	str	r3, [r0]
   1193c:	ldr	sl, [pc, #364]	; 11ab0 <__assert_fail@plt+0x8b8>
   11940:	ldr	r9, [pc, #364]	; 11ab4 <__assert_fail@plt+0x8bc>
   11944:	ldr	r8, [pc, #364]	; 11ab8 <__assert_fail@plt+0x8c0>
   11948:	ldr	r6, [pc, #364]	; 11abc <__assert_fail@plt+0x8c4>
   1194c:	b	11998 <__assert_fail@plt+0x7a0>
   11950:	bl	11120 <__errno_location@plt>
   11954:	ldr	r2, [pc, #356]	; 11ac0 <__assert_fail@plt+0x8c8>
   11958:	ldr	r1, [r0]
   1195c:	mov	r0, #1
   11960:	bl	11048 <error@plt>
   11964:	b	1192c <__assert_fail@plt+0x734>
   11968:	ldr	r1, [r7]
   1196c:	cmp	r1, #0
   11970:	movne	r3, sl
   11974:	moveq	r3, r9
   11978:	mov	r2, r8
   1197c:	mov	r0, #1
   11980:	bl	11048 <error@plt>
   11984:	b	119b8 <__assert_fail@plt+0x7c0>
   11988:	mov	r0, r5
   1198c:	bl	110f0 <feof@plt>
   11990:	cmp	r0, #0
   11994:	bne	119f8 <__assert_fail@plt+0x800>
   11998:	mov	r3, r5
   1199c:	mov	r2, #10
   119a0:	add	r1, sp, #12
   119a4:	add	r0, sp, #8
   119a8:	bl	10f64 <__getdelim@plt>
   119ac:	mov	r4, r0
   119b0:	cmn	r0, #1
   119b4:	beq	11968 <__assert_fail@plt+0x770>
   119b8:	ldr	r3, [sp, #8]
   119bc:	ldrb	r3, [r3]
   119c0:	cmp	r3, #35	; 0x23
   119c4:	beq	11988 <__assert_fail@plt+0x790>
   119c8:	add	r0, r4, #1
   119cc:	bl	13290 <argp_parse@@Base+0x11dc>
   119d0:	mov	r4, r0
   119d4:	mov	r2, r0
   119d8:	mov	r1, r6
   119dc:	ldr	r0, [sp, #8]
   119e0:	bl	1118c <sscanf@plt>
   119e4:	cmp	r0, #1
   119e8:	beq	119fc <__assert_fail@plt+0x804>
   119ec:	mov	r0, r4
   119f0:	bl	12ca8 <argp_parse@@Base+0xbf4>
   119f4:	b	11988 <__assert_fail@plt+0x790>
   119f8:	mov	r4, #0
   119fc:	ldr	r0, [sp, #8]
   11a00:	bl	12ca8 <argp_parse@@Base+0xbf4>
   11a04:	mov	r0, r5
   11a08:	bl	11150 <fclose@plt>
   11a0c:	cmp	r4, #0
   11a10:	beq	11a48 <__assert_fail@plt+0x850>
   11a14:	mov	r0, r4
   11a18:	bl	110fc <strlen@plt>
   11a1c:	subs	r1, r0, #0
   11a20:	beq	11a48 <__assert_fail@plt+0x850>
   11a24:	ldr	r3, [pc, #92]	; 11a88 <__assert_fail@plt+0x890>
   11a28:	ldr	r3, [r3, #4]
   11a2c:	mov	r0, r4
   11a30:	blx	r3
   11a34:	cmn	r0, #1
   11a38:	beq	11a60 <__assert_fail@plt+0x868>
   11a3c:	mov	r0, r4
   11a40:	bl	12ca8 <argp_parse@@Base+0xbf4>
   11a44:	b	11540 <__assert_fail@plt+0x348>
   11a48:	ldr	r2, [pc, #116]	; 11ac4 <__assert_fail@plt+0x8cc>
   11a4c:	mov	r1, #0
   11a50:	mov	r0, #1
   11a54:	bl	11048 <error@plt>
   11a58:	mov	r1, #0
   11a5c:	b	11a24 <__assert_fail@plt+0x82c>
   11a60:	bl	11120 <__errno_location@plt>
   11a64:	ldr	r2, [pc, #92]	; 11ac8 <__assert_fail@plt+0x8d0>
   11a68:	ldr	r1, [r0]
   11a6c:	mov	r0, #1
   11a70:	bl	11048 <error@plt>
   11a74:	b	11a3c <__assert_fail@plt+0x844>
   11a78:	muleq	r1, r8, r5
   11a7c:	andeq	sl, r2, ip, lsr #5
   11a80:	andeq	sl, r2, r4, lsl #2
   11a84:			; <UNDEFINED> instruction: 0x000185b0
   11a88:	andeq	sl, r2, ip, ror #4
   11a8c:	andeq	r3, r1, r0, ror #16
   11a90:	andeq	r3, r1, r8, asr r9
   11a94:	andeq	r1, r1, r8, lsr #1
   11a98:			; <UNDEFINED> instruction: 0x000185bc
   11a9c:	ldrdeq	r8, [r1], -r4
   11aa0:	andeq	r8, r1, r4, lsl #11
   11aa4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11aa8:	andeq	r8, r1, r0, ror #11
   11aac:	andeq	r8, r1, r8, ror #30
   11ab0:	strdeq	r9, [r1], -r8
   11ab4:	andeq	r8, r1, ip, lsl #11
   11ab8:	strdeq	r8, [r1], -ip
   11abc:	andeq	r8, r1, r8, lsl #12
   11ac0:	strdeq	r8, [r1], -r4
   11ac4:	andeq	r8, r1, ip, lsl #12
   11ac8:	andeq	r8, r1, ip, lsl r6
   11acc:	ldr	ip, [r0]
   11ad0:	cmp	ip, #0
   11ad4:	beq	11b28 <__assert_fail@plt+0x930>
   11ad8:	push	{r4, r5, r6, lr}
   11adc:	mov	ip, r2
   11ae0:	mov	r5, r1
   11ae4:	mov	r4, r0
   11ae8:	ldr	r2, [r0, #32]
   11aec:	str	r2, [r1, #36]	; 0x24
   11af0:	ldr	r2, [r0, #24]
   11af4:	str	r2, [r1, #28]
   11af8:	ldr	r2, [r0, #28]
   11afc:	str	r2, [r1, #32]
   11b00:	ldr	r2, [r0, #12]
   11b04:	str	r2, [r1, #20]
   11b08:	ldr	r6, [r0]
   11b0c:	mov	r2, r1
   11b10:	mov	r1, r3
   11b14:	mov	r0, ip
   11b18:	blx	r6
   11b1c:	ldr	r3, [r5, #36]	; 0x24
   11b20:	str	r3, [r4, #32]
   11b24:	pop	{r4, r5, r6, pc}
   11b28:	mov	r0, #7
   11b2c:	bx	lr
   11b30:	push	{r4, r5, r6, lr}
   11b34:	ldr	r5, [r0, #16]
   11b38:	ldr	r3, [r0]
   11b3c:	cmp	r3, #0
   11b40:	beq	11b58 <__assert_fail@plt+0x960>
   11b44:	ldr	r2, [r1, #8]
   11b48:	add	r2, r2, #1
   11b4c:	str	r2, [r1, #8]
   11b50:	mov	r2, #0
   11b54:	b	11bac <__assert_fail@plt+0x9b4>
   11b58:	ldr	r3, [r0, #4]
   11b5c:	cmp	r3, #0
   11b60:	ldrne	r3, [r1, #8]
   11b64:	addne	r3, r3, #1
   11b68:	strne	r3, [r1, #8]
   11b6c:	cmp	r5, #0
   11b70:	popeq	{r4, r5, r6, pc}
   11b74:	ldr	r0, [r5]
   11b78:	cmp	r0, #0
   11b7c:	popeq	{r4, r5, r6, pc}
   11b80:	mov	r4, r1
   11b84:	mov	r1, r4
   11b88:	bl	11b30 <__assert_fail@plt+0x938>
   11b8c:	ldr	r3, [r4, #12]
   11b90:	add	r3, r3, #1
   11b94:	str	r3, [r4, #12]
   11b98:	ldr	r0, [r5, #16]!
   11b9c:	cmp	r0, #0
   11ba0:	bne	11b84 <__assert_fail@plt+0x98c>
   11ba4:	pop	{r4, r5, r6, pc}
   11ba8:	add	r2, r2, #1
   11bac:	add	r3, r3, #24
   11bb0:	ldr	r0, [r3, #-20]	; 0xffffffec
   11bb4:	cmp	r0, #0
   11bb8:	bne	11ba8 <__assert_fail@plt+0x9b0>
   11bbc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11bc0:	cmp	r0, #0
   11bc4:	bne	11ba8 <__assert_fail@plt+0x9b0>
   11bc8:	ldr	r0, [r3, #-8]
   11bcc:	cmp	r0, #0
   11bd0:	bne	11ba8 <__assert_fail@plt+0x9b0>
   11bd4:	ldr	r0, [r3, #-4]
   11bd8:	cmp	r0, #0
   11bdc:	bne	11ba8 <__assert_fail@plt+0x9b0>
   11be0:	add	r0, r2, r2, lsl #1
   11be4:	ldr	r3, [r1]
   11be8:	add	r3, r3, r0
   11bec:	str	r3, [r1]
   11bf0:	ldr	r3, [r1, #4]
   11bf4:	add	r2, r3, r2
   11bf8:	str	r2, [r1, #4]
   11bfc:	b	11b6c <__assert_fail@plt+0x974>
   11c00:	cmp	r0, #86	; 0x56
   11c04:	beq	11c10 <__assert_fail@plt+0xa18>
   11c08:	mov	r0, #7
   11c0c:	bx	lr
   11c10:	push	{r4, lr}
   11c14:	mov	r4, r2
   11c18:	ldr	r3, [pc, #100]	; 11c84 <__assert_fail@plt+0xa8c>
   11c1c:	ldr	r3, [r3]
   11c20:	cmp	r3, #0
   11c24:	beq	11c48 <__assert_fail@plt+0xa50>
   11c28:	mov	r1, r2
   11c2c:	ldr	r0, [r2, #48]	; 0x30
   11c30:	blx	r3
   11c34:	ldr	r3, [r4, #16]
   11c38:	tst	r3, #32
   11c3c:	beq	11c7c <__assert_fail@plt+0xa84>
   11c40:	mov	r0, #0
   11c44:	pop	{r4, pc}
   11c48:	ldr	r3, [pc, #56]	; 11c88 <__assert_fail@plt+0xa90>
   11c4c:	ldr	r2, [r3]
   11c50:	cmp	r2, #0
   11c54:	beq	11c68 <__assert_fail@plt+0xa70>
   11c58:	ldr	r1, [pc, #44]	; 11c8c <__assert_fail@plt+0xa94>
   11c5c:	ldr	r0, [r4, #48]	; 0x30
   11c60:	bl	11114 <fprintf@plt>
   11c64:	b	11c34 <__assert_fail@plt+0xa3c>
   11c68:	ldr	r2, [pc, #32]	; 11c90 <__assert_fail@plt+0xa98>
   11c6c:	ldr	r1, [pc, #32]	; 11c94 <__assert_fail@plt+0xa9c>
   11c70:	mov	r0, r4
   11c74:	bl	16ba0 <argp_error@@Base>
   11c78:	b	11c34 <__assert_fail@plt+0xa3c>
   11c7c:	mov	r0, #0
   11c80:	bl	110e4 <exit@plt>
   11c84:	andeq	sl, r2, r8, ror r2
   11c88:			; <UNDEFINED> instruction: 0x0002a2b0
   11c8c:	ldrdeq	r8, [r1], -ip
   11c90:	andeq	r8, r1, r0, asr #16
   11c94:	andeq	r8, r1, r8, lsl #12
   11c98:	push	{r4, r5, r6, lr}
   11c9c:	mov	r4, r2
   11ca0:	cmn	r0, #3
   11ca4:	beq	11d40 <__assert_fail@plt+0xb48>
   11ca8:	mov	r5, r1
   11cac:	ble	11cd8 <__assert_fail@plt+0xae0>
   11cb0:	cmn	r0, #2
   11cb4:	beq	11d58 <__assert_fail@plt+0xb60>
   11cb8:	cmp	r0, #63	; 0x3f
   11cbc:	bne	11d9c <__assert_fail@plt+0xba4>
   11cc0:	ldr	r2, [pc, #228]	; 11dac <__assert_fail@plt+0xbb4>
   11cc4:	ldr	r1, [r4, #48]	; 0x30
   11cc8:	mov	r0, r4
   11ccc:	bl	16ae4 <argp_state_help@@Base>
   11cd0:	mov	r0, #0
   11cd4:	pop	{r4, r5, r6, pc}
   11cd8:	cmn	r0, #4
   11cdc:	bne	11d9c <__assert_fail@plt+0xba4>
   11ce0:	mov	r2, #10
   11ce4:	mov	r1, #0
   11ce8:	ldr	r0, [pc, #192]	; 11db0 <__assert_fail@plt+0xbb8>
   11cec:	cmp	r5, r1
   11cf0:	movne	r0, r5
   11cf4:	bl	10f7c <strtol@plt>
   11cf8:	ldr	r3, [pc, #180]	; 11db4 <__assert_fail@plt+0xbbc>
   11cfc:	str	r0, [r3]
   11d00:	ldr	r2, [r3]
   11d04:	sub	r1, r2, #1
   11d08:	str	r1, [r3]
   11d0c:	cmp	r2, #0
   11d10:	ble	11da4 <__assert_fail@plt+0xbac>
   11d14:	mov	r5, #1
   11d18:	mov	r4, r3
   11d1c:	mov	r0, r5
   11d20:	bl	10fe8 <sleep@plt>
   11d24:	ldr	r3, [r4]
   11d28:	sub	r2, r3, #1
   11d2c:	str	r2, [r4]
   11d30:	cmp	r3, #0
   11d34:	bgt	11d1c <__assert_fail@plt+0xb24>
   11d38:	mov	r0, #0
   11d3c:	pop	{r4, r5, r6, pc}
   11d40:	ldr	r2, [pc, #112]	; 11db8 <__assert_fail@plt+0xbc0>
   11d44:	ldr	r1, [r4, #48]	; 0x30
   11d48:	mov	r0, r4
   11d4c:	bl	16ae4 <argp_state_help@@Base>
   11d50:	mov	r0, #0
   11d54:	pop	{r4, r5, r6, pc}
   11d58:	ldr	r3, [pc, #92]	; 11dbc <__assert_fail@plt+0xbc4>
   11d5c:	str	r1, [r3]
   11d60:	mov	r0, r1
   11d64:	bl	12be8 <argp_parse@@Base+0xb34>
   11d68:	str	r0, [r4, #40]	; 0x28
   11d6c:	ldr	r3, [pc, #76]	; 11dc0 <__assert_fail@plt+0xbc8>
   11d70:	str	r0, [r3]
   11d74:	ldr	r3, [r4, #16]
   11d78:	and	r3, r3, #3
   11d7c:	cmp	r3, #1
   11d80:	beq	11d8c <__assert_fail@plt+0xb94>
   11d84:	mov	r0, #0
   11d88:	pop	{r4, r5, r6, pc}
   11d8c:	ldr	r3, [r4, #8]
   11d90:	str	r5, [r3]
   11d94:	mov	r0, #0
   11d98:	pop	{r4, r5, r6, pc}
   11d9c:	mov	r0, #7
   11da0:	pop	{r4, r5, r6, pc}
   11da4:	mov	r0, #0
   11da8:	pop	{r4, r5, r6, pc}
   11dac:	andeq	r0, r0, sl, ror r2
   11db0:	andeq	r8, r1, r4, ror #16
   11db4:	andeq	sl, r2, r4, ror r2
   11db8:	andeq	r0, r0, r1, lsl #4
   11dbc:	andeq	sl, r2, ip, asr r2
   11dc0:	andeq	sl, r2, r8, asr r2
   11dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dc8:	sub	sp, sp, #36	; 0x24
   11dcc:	str	r0, [sp, #12]
   11dd0:	str	r1, [sp, #16]
   11dd4:	str	r2, [sp, #20]
   11dd8:	mov	r8, r3
   11ddc:	ldr	sl, [sp, #72]	; 0x48
   11de0:	ldr	r9, [r0]
   11de4:	ldr	r5, [r0, #16]
   11de8:	cmp	r9, #0
   11dec:	addne	r6, r9, #24
   11df0:	strne	r5, [sp, #28]
   11df4:	strne	r8, [sp, #24]
   11df8:	bne	11f04 <__assert_fail@plt+0xd0c>
   11dfc:	ldr	r3, [sp, #12]
   11e00:	ldr	r3, [r3, #4]
   11e04:	cmp	r3, #0
   11e08:	moveq	r0, r8
   11e0c:	moveq	r8, #0
   11e10:	beq	11e90 <__assert_fail@plt+0xc98>
   11e14:	ldr	r2, [sp, #12]
   11e18:	ldr	r3, [r2, #4]
   11e1c:	str	r3, [r8]
   11e20:	str	r2, [r8, #4]
   11e24:	ldr	r3, [sl, #4]
   11e28:	str	r3, [r8, #8]
   11e2c:	mov	r3, #0
   11e30:	str	r3, [r8, #12]
   11e34:	ldr	r2, [sp, #16]
   11e38:	str	r2, [r8, #16]
   11e3c:	ldr	r2, [sp, #20]
   11e40:	str	r2, [r8, #20]
   11e44:	str	r3, [r8, #24]
   11e48:	str	r3, [r8, #32]
   11e4c:	str	r3, [r8, #28]
   11e50:	cmp	r5, r3
   11e54:	beq	11e8c <__assert_fail@plt+0xc94>
   11e58:	ldr	r3, [r5]
   11e5c:	cmp	r3, #0
   11e60:	beq	120ac <__assert_fail@plt+0xeb4>
   11e64:	mov	r3, #0
   11e68:	add	r3, r3, #1
   11e6c:	ldr	r2, [r5, r3, lsl #4]
   11e70:	cmp	r2, #0
   11e74:	bne	11e68 <__assert_fail@plt+0xc70>
   11e78:	ldr	r2, [sl, #12]
   11e7c:	str	r2, [r8, #28]
   11e80:	ldr	r2, [sl, #12]
   11e84:	add	r3, r2, r3, lsl #2
   11e88:	str	r3, [sl, #12]
   11e8c:	add	r0, r8, #36	; 0x24
   11e90:	cmp	r5, #0
   11e94:	beq	11ed0 <__assert_fail@plt+0xcd8>
   11e98:	ldr	ip, [r5]
   11e9c:	cmp	ip, #0
   11ea0:	beq	11ed0 <__assert_fail@plt+0xcd8>
   11ea4:	mov	r2, #0
   11ea8:	add	r4, r2, #1
   11eac:	str	sl, [sp]
   11eb0:	mov	r3, r0
   11eb4:	mov	r1, r8
   11eb8:	mov	r0, ip
   11ebc:	bl	11dc4 <__assert_fail@plt+0xbcc>
   11ec0:	ldr	ip, [r5, r4, lsl #4]
   11ec4:	mov	r2, r4
   11ec8:	cmp	ip, #0
   11ecc:	bne	11ea8 <__assert_fail@plt+0xcb0>
   11ed0:	add	sp, sp, #36	; 0x24
   11ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ed8:	ldr	r0, [r4, #16]!
   11edc:	cmp	r0, #0
   11ee0:	beq	11fec <__assert_fail@plt+0xdf4>
   11ee4:	mov	r1, r7
   11ee8:	bl	10f70 <strcmp@plt>
   11eec:	cmp	r0, #0
   11ef0:	bne	11ed8 <__assert_fail@plt+0xce0>
   11ef4:	sub	r4, r4, fp
   11ef8:	cmn	r4, #15
   11efc:	blt	11fec <__assert_fail@plt+0xdf4>
   11f00:	add	r6, r6, #24
   11f04:	sub	r2, r6, #24
   11f08:	mov	r8, r6
   11f0c:	ldr	r4, [r6, #-20]	; 0xffffffec
   11f10:	cmp	r4, #0
   11f14:	bne	11f24 <__assert_fail@plt+0xd2c>
   11f18:	ldr	r3, [r6, #-24]	; 0xffffffe8
   11f1c:	cmp	r3, #0
   11f20:	beq	12088 <__assert_fail@plt+0xe90>
   11f24:	ldr	r3, [r8, #-12]
   11f28:	and	r1, r3, #4
   11f2c:	cmp	r1, #0
   11f30:	moveq	r9, r2
   11f34:	ldr	r5, [r9, #12]
   11f38:	ands	r5, r5, #8
   11f3c:	bne	11f00 <__assert_fail@plt+0xd08>
   11f40:	tst	r3, #8
   11f44:	bne	11fc8 <__assert_fail@plt+0xdd0>
   11f48:	sub	r3, r4, #1
   11f4c:	cmp	r3, #254	; 0xfe
   11f50:	bhi	11fc8 <__assert_fail@plt+0xdd0>
   11f54:	bl	110d8 <__ctype_b_loc@plt>
   11f58:	ldr	r3, [r0]
   11f5c:	lsl	r4, r4, #1
   11f60:	ldrh	r3, [r3, r4]
   11f64:	tst	r3, #16384	; 0x4000
   11f68:	beq	11fc8 <__assert_fail@plt+0xdd0>
   11f6c:	ldr	r3, [sl, #4]
   11f70:	add	r2, r3, #1
   11f74:	str	r2, [sl, #4]
   11f78:	ldr	r2, [r8, #-20]	; 0xffffffec
   11f7c:	strb	r2, [r3]
   11f80:	ldr	r3, [r9, #8]
   11f84:	cmp	r3, #0
   11f88:	beq	11fbc <__assert_fail@plt+0xdc4>
   11f8c:	ldr	r3, [sl, #4]
   11f90:	add	r2, r3, #1
   11f94:	str	r2, [sl, #4]
   11f98:	mov	r2, #58	; 0x3a
   11f9c:	strb	r2, [r3]
   11fa0:	ldr	r3, [r9, #12]
   11fa4:	tst	r3, #1
   11fa8:	ldrne	r3, [sl, #4]
   11fac:	addne	r2, r3, #1
   11fb0:	strne	r2, [sl, #4]
   11fb4:	movne	r2, #58	; 0x3a
   11fb8:	strbne	r2, [r3]
   11fbc:	ldr	r3, [sl, #4]
   11fc0:	mov	r2, #0
   11fc4:	strb	r2, [r3]
   11fc8:	ldr	r7, [r8, #-24]	; 0xffffffe8
   11fcc:	cmp	r7, #0
   11fd0:	beq	11f00 <__assert_fail@plt+0xd08>
   11fd4:	ldr	r3, [sl]
   11fd8:	ldr	fp, [r3, #8]
   11fdc:	ldr	r0, [fp]
   11fe0:	cmp	r0, #0
   11fe4:	movne	r4, fp
   11fe8:	bne	11ee4 <__assert_fail@plt+0xcec>
   11fec:	ldr	r3, [sl, #8]
   11ff0:	str	r7, [r3]
   11ff4:	ldr	r3, [sl, #8]
   11ff8:	ldr	r2, [r9, #8]
   11ffc:	cmp	r2, #0
   12000:	beq	12018 <__assert_fail@plt+0xe20>
   12004:	ldr	r5, [r9, #12]
   12008:	and	r5, r5, #1
   1200c:	cmp	r5, #0
   12010:	movne	r5, #2
   12014:	moveq	r5, #1
   12018:	str	r5, [r3, #4]
   1201c:	ldr	r3, [sl, #8]
   12020:	mov	r2, #0
   12024:	str	r2, [r3, #8]
   12028:	ldr	r1, [sl, #8]
   1202c:	ldr	r0, [r8, #-20]	; 0xffffffec
   12030:	cmp	r0, r2
   12034:	ldreq	r0, [r9, #4]
   12038:	bic	r0, r0, #-16777216	; 0xff000000
   1203c:	ldr	r3, [sl]
   12040:	ldr	r3, [r3, #48]	; 0x30
   12044:	ldr	r2, [sp, #24]
   12048:	sub	r3, r2, r3
   1204c:	asr	r3, r3, #2
   12050:	rsb	r2, r3, r3, lsl #3
   12054:	add	r2, r2, r2, lsl #6
   12058:	add	r2, r3, r2, lsl #3
   1205c:	rsb	r2, r2, r2, lsl #15
   12060:	add	r3, r3, r2, lsl #3
   12064:	add	r3, r3, #1
   12068:	add	r3, r0, r3, lsl #24
   1206c:	str	r3, [r1, #12]
   12070:	ldr	r3, [sl, #8]
   12074:	add	r2, r3, #16
   12078:	str	r2, [sl, #8]
   1207c:	mov	r2, #0
   12080:	str	r2, [r3, #16]
   12084:	b	11f00 <__assert_fail@plt+0xd08>
   12088:	ldr	r3, [r6, #-8]
   1208c:	cmp	r3, #0
   12090:	bne	11f24 <__assert_fail@plt+0xd2c>
   12094:	ldr	r3, [r6, #-4]
   12098:	cmp	r3, #0
   1209c:	bne	11f24 <__assert_fail@plt+0xd2c>
   120a0:	ldr	r5, [sp, #28]
   120a4:	ldr	r8, [sp, #24]
   120a8:	b	11e14 <__assert_fail@plt+0xc1c>
   120ac:	mov	r3, #0
   120b0:	b	11e78 <__assert_fail@plt+0xc80>

000120b4 <argp_parse@@Base>:
   120b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b8:	add	fp, sp, #32
   120bc:	sub	sp, sp, #220	; 0xdc
   120c0:	mov	r8, r0
   120c4:	str	r1, [fp, #-236]	; 0xffffff14
   120c8:	str	r2, [fp, #-232]	; 0xffffff18
   120cc:	mov	r6, r3
   120d0:	tst	r3, #1
   120d4:	bne	12104 <argp_parse@@Base+0x50>
   120d8:	ldr	r3, [pc, #2548]	; 12ad4 <argp_parse@@Base+0xa20>
   120dc:	ldr	r3, [r3]
   120e0:	cmp	r3, #0
   120e4:	moveq	r3, r2
   120e8:	ldreq	r2, [r3]
   120ec:	ldreq	r3, [pc, #2528]	; 12ad4 <argp_parse@@Base+0xa20>
   120f0:	streq	r2, [r3]
   120f4:	ldr	r3, [pc, #2524]	; 12ad8 <argp_parse@@Base+0xa24>
   120f8:	ldr	r3, [r3]
   120fc:	cmp	r3, #0
   12100:	beq	122f4 <argp_parse@@Base+0x240>
   12104:	tst	r6, #16
   12108:	beq	1230c <argp_parse@@Base+0x258>
   1210c:	mov	r2, #36	; 0x24
   12110:	mov	r1, #0
   12114:	sub	r0, fp, #196	; 0xc4
   12118:	bl	11138 <memset@plt>
   1211c:	ands	r3, r6, #4
   12120:	str	r3, [fp, #-240]	; 0xffffff10
   12124:	moveq	r3, #1
   12128:	movne	r3, #0
   1212c:	str	r3, [fp, #-228]	; 0xffffff1c
   12130:	mov	r3, #0
   12134:	str	r3, [fp, #-224]	; 0xffffff20
   12138:	str	r3, [fp, #-220]	; 0xffffff24
   1213c:	str	r3, [fp, #-216]	; 0xffffff28
   12140:	cmp	r8, r3
   12144:	beq	12154 <argp_parse@@Base+0xa0>
   12148:	sub	r1, fp, #228	; 0xe4
   1214c:	mov	r0, r8
   12150:	bl	11b30 <__assert_fail@plt+0x938>
   12154:	ldr	r4, [fp, #-220]	; 0xffffff24
   12158:	add	r4, r4, #1
   1215c:	add	r4, r4, r4, lsl #3
   12160:	lsl	r4, r4, #2
   12164:	ldr	r9, [fp, #-216]	; 0xffffff28
   12168:	lsl	r9, r9, #2
   1216c:	add	sl, r9, r4
   12170:	ldr	r5, [fp, #-224]	; 0xffffff20
   12174:	add	r5, r5, #1
   12178:	add	r5, sl, r5, lsl #4
   1217c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12180:	add	r0, r0, #1
   12184:	add	r0, r0, r5
   12188:	bl	13aa0 <argp_parse@@Base+0x19ec>
   1218c:	mov	r7, r0
   12190:	str	r0, [fp, #-40]	; 0xffffffd8
   12194:	cmp	r0, #0
   12198:	moveq	r4, #12
   1219c:	beq	12924 <argp_parse@@Base+0x870>
   121a0:	str	r0, [fp, #-112]	; 0xffffff90
   121a4:	add	r4, r0, r4
   121a8:	str	r4, [fp, #-104]	; 0xffffff98
   121ac:	add	r3, r0, sl
   121b0:	str	r3, [fp, #-244]	; 0xffffff0c
   121b4:	str	r3, [fp, #-152]	; 0xffffff68
   121b8:	add	sl, r0, r5
   121bc:	str	sl, [fp, #-156]	; 0xffffff64
   121c0:	mov	r3, #1
   121c4:	str	r3, [fp, #-196]	; 0xffffff3c
   121c8:	str	r3, [fp, #-192]	; 0xffffff40
   121cc:	sub	ip, fp, #148	; 0x94
   121d0:	sub	lr, fp, #196	; 0xc4
   121d4:	ldm	lr!, {r0, r1, r2, r3}
   121d8:	stmia	ip!, {r0, r1, r2, r3}
   121dc:	ldm	lr!, {r0, r1, r2, r3}
   121e0:	stmia	ip!, {r0, r1, r2, r3}
   121e4:	ldr	r3, [lr]
   121e8:	str	r3, [ip]
   121ec:	mov	r2, r9
   121f0:	mov	r1, #0
   121f4:	mov	r0, r4
   121f8:	bl	11138 <memset@plt>
   121fc:	sub	r3, fp, #160	; 0xa0
   12200:	str	r3, [fp, #-212]	; 0xffffff2c
   12204:	str	sl, [fp, #-208]	; 0xffffff30
   12208:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1220c:	str	r3, [fp, #-204]	; 0xffffff34
   12210:	str	r4, [fp, #-200]	; 0xffffff38
   12214:	tst	r6, #8
   12218:	beq	123a4 <argp_parse@@Base+0x2f0>
   1221c:	add	sl, sl, #1
   12220:	str	sl, [fp, #-208]	; 0xffffff30
   12224:	mov	r3, #45	; 0x2d
   12228:	strb	r3, [r7, r5]
   1222c:	mov	r3, #0
   12230:	ldr	r2, [fp, #-208]	; 0xffffff30
   12234:	strb	r3, [r2]
   12238:	ldr	r2, [fp, #-204]	; 0xffffff34
   1223c:	str	r3, [r2]
   12240:	str	r8, [fp, #-160]	; 0xffffff60
   12244:	cmp	r8, r3
   12248:	beq	123c0 <argp_parse@@Base+0x30c>
   1224c:	sub	r3, fp, #212	; 0xd4
   12250:	str	r3, [sp]
   12254:	ldr	r3, [fp, #-112]	; 0xffffff90
   12258:	mov	r2, #0
   1225c:	mov	r1, r2
   12260:	mov	r0, r8
   12264:	bl	11dc4 <__assert_fail@plt+0xbcc>
   12268:	str	r0, [fp, #-108]	; 0xffffff94
   1226c:	mov	r2, #56	; 0x38
   12270:	mov	r1, #0
   12274:	sub	r0, fp, #96	; 0x60
   12278:	bl	11138 <memset@plt>
   1227c:	ldr	r3, [fp, #-160]	; 0xffffff60
   12280:	str	r3, [fp, #-96]	; 0xffffffa0
   12284:	ldr	r3, [fp, #-236]	; 0xffffff14
   12288:	str	r3, [fp, #-92]	; 0xffffffa4
   1228c:	ldr	r3, [fp, #-232]	; 0xffffff18
   12290:	str	r3, [fp, #-88]	; 0xffffffa8
   12294:	str	r6, [fp, #-80]	; 0xffffffb0
   12298:	ldr	r3, [pc, #2108]	; 12adc <argp_parse@@Base+0xa28>
   1229c:	ldr	r3, [r3]
   122a0:	str	r3, [fp, #-52]	; 0xffffffcc
   122a4:	ldr	r3, [pc, #2100]	; 12ae0 <argp_parse@@Base+0xa2c>
   122a8:	ldr	r3, [r3]
   122ac:	str	r3, [fp, #-48]	; 0xffffffd0
   122b0:	sub	r3, fp, #160	; 0xa0
   122b4:	str	r3, [fp, #-44]	; 0xffffffd4
   122b8:	mov	r3, #1
   122bc:	str	r3, [fp, #-100]	; 0xffffff9c
   122c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   122c4:	ldr	r2, [fp, #-108]	; 0xffffff94
   122c8:	cmp	r3, r2
   122cc:	bcs	12458 <argp_parse@@Base+0x3a4>
   122d0:	ldr	r2, [fp, #8]
   122d4:	str	r2, [r3, #24]
   122d8:	ldr	r5, [fp, #-112]	; 0xffffff90
   122dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   122e0:	cmp	r5, r3
   122e4:	bcs	12464 <argp_parse@@Base+0x3b0>
   122e8:	ldr	r7, [pc, #2036]	; 12ae4 <argp_parse@@Base+0xa30>
   122ec:	mov	r6, #0
   122f0:	b	123fc <argp_parse@@Base+0x348>
   122f4:	ldr	r3, [fp, #-232]	; 0xffffff18
   122f8:	ldr	r0, [r3]
   122fc:	bl	12be8 <argp_parse@@Base+0xb34>
   12300:	ldr	r3, [pc, #2000]	; 12ad8 <argp_parse@@Base+0xa24>
   12304:	str	r0, [r3]
   12308:	b	12104 <argp_parse@@Base+0x50>
   1230c:	sub	sp, sp, #72	; 0x48
   12310:	add	r5, sp, #8
   12314:	sub	sp, sp, #40	; 0x28
   12318:	add	r4, sp, #8
   1231c:	mov	r1, #0
   12320:	str	r1, [r4]
   12324:	str	r1, [r4, #4]
   12328:	str	r1, [r4, #8]
   1232c:	str	r1, [r4, #12]
   12330:	str	r1, [r4, #20]
   12334:	str	r1, [r4, #24]
   12338:	str	r5, [r4, #16]
   1233c:	mov	r2, #64	; 0x40
   12340:	mov	r0, r5
   12344:	bl	11138 <memset@plt>
   12348:	cmp	r8, #0
   1234c:	addne	r3, r5, #16
   12350:	strne	r8, [r5]
   12354:	moveq	r3, r5
   12358:	ldr	r2, [pc, #1928]	; 12ae8 <argp_parse@@Base+0xa34>
   1235c:	str	r2, [r3]
   12360:	ldr	r2, [pc, #1924]	; 12aec <argp_parse@@Base+0xa38>
   12364:	ldr	r2, [r2]
   12368:	cmp	r2, #0
   1236c:	beq	1238c <argp_parse@@Base+0x2d8>
   12370:	add	r2, r3, #32
   12374:	ldr	r1, [pc, #1908]	; 12af0 <argp_parse@@Base+0xa3c>
   12378:	str	r1, [r3, #16]
   1237c:	mov	r3, #0
   12380:	str	r3, [r2]
   12384:	mov	r8, r4
   12388:	b	1210c <argp_parse@@Base+0x58>
   1238c:	ldr	r2, [pc, #1888]	; 12af4 <argp_parse@@Base+0xa40>
   12390:	ldr	r2, [r2]
   12394:	cmp	r2, #0
   12398:	addeq	r2, r3, #16
   1239c:	bne	12370 <argp_parse@@Base+0x2bc>
   123a0:	b	1237c <argp_parse@@Base+0x2c8>
   123a4:	ldr	r3, [fp, #-240]	; 0xffffff10
   123a8:	cmp	r3, #0
   123ac:	addne	sl, sl, #1
   123b0:	strne	sl, [fp, #-208]	; 0xffffff30
   123b4:	movne	r3, #43	; 0x2b
   123b8:	strbne	r3, [r7, r5]
   123bc:	b	1222c <argp_parse@@Base+0x178>
   123c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   123c4:	str	r3, [fp, #-108]	; 0xffffff94
   123c8:	b	1226c <argp_parse@@Base+0x1b8>
   123cc:	mov	r3, r6
   123d0:	mov	r2, r7
   123d4:	sub	r1, fp, #96	; 0x60
   123d8:	mov	r0, r5
   123dc:	bl	11acc <__assert_fail@plt+0x8d4>
   123e0:	add	r5, r5, #36	; 0x24
   123e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   123e8:	cmp	r5, r3
   123ec:	bcs	12448 <argp_parse@@Base+0x394>
   123f0:	cmp	r0, #7
   123f4:	cmpne	r0, #0
   123f8:	bne	12448 <argp_parse@@Base+0x394>
   123fc:	ldr	r3, [r5, #16]
   12400:	cmp	r3, #0
   12404:	ldrne	r2, [r5, #20]
   12408:	ldrne	r3, [r3, #28]
   1240c:	ldrne	r3, [r3, r2, lsl #2]
   12410:	strne	r3, [r5, #24]
   12414:	ldr	r3, [r5]
   12418:	cmp	r3, #0
   1241c:	bne	123cc <argp_parse@@Base+0x318>
   12420:	ldr	r3, [r5, #4]
   12424:	ldr	r3, [r3, #16]
   12428:	cmp	r3, #0
   1242c:	beq	123cc <argp_parse@@Base+0x318>
   12430:	ldr	r3, [r3]
   12434:	cmp	r3, #0
   12438:	ldrne	r3, [r5, #28]
   1243c:	ldrne	r2, [r5, #24]
   12440:	strne	r2, [r3]
   12444:	b	123cc <argp_parse@@Base+0x318>
   12448:	mov	r4, r0
   1244c:	cmp	r0, #7
   12450:	beq	12464 <argp_parse@@Base+0x3b0>
   12454:	b	1245c <argp_parse@@Base+0x3a8>
   12458:	mov	r4, #0
   1245c:	cmp	r4, #0
   12460:	bne	12924 <argp_parse@@Base+0x870>
   12464:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12468:	tst	r3, #2
   1246c:	moveq	r3, #1
   12470:	streq	r3, [fp, #-144]	; 0xffffff70
   12474:	beq	124a0 <argp_parse@@Base+0x3ec>
   12478:	mov	r2, #0
   1247c:	str	r2, [fp, #-144]	; 0xffffff70
   12480:	tst	r3, #1
   12484:	beq	124a0 <argp_parse@@Base+0x3ec>
   12488:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1248c:	sub	r3, r3, #4
   12490:	str	r3, [fp, #-88]	; 0xffffffa8
   12494:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12498:	add	r3, r3, #1
   1249c:	str	r3, [fp, #-92]	; 0xffffffa4
   124a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   124a4:	ldr	r2, [fp, #-232]	; 0xffffff18
   124a8:	cmp	r2, r3
   124ac:	beq	124cc <argp_parse@@Base+0x418>
   124b0:	ldr	r3, [pc, #1568]	; 12ad8 <argp_parse@@Base+0xa24>
   124b4:	ldr	r3, [r3]
   124b8:	str	r3, [fp, #-56]	; 0xffffffc8
   124bc:	mov	r6, #0
   124c0:	mov	sl, #1
   124c4:	mvn	r9, #0
   124c8:	b	1273c <argp_parse@@Base+0x688>
   124cc:	ldr	r0, [r2]
   124d0:	cmp	r0, #0
   124d4:	beq	124b0 <argp_parse@@Base+0x3fc>
   124d8:	bl	12be8 <argp_parse@@Base+0xb34>
   124dc:	str	r0, [fp, #-56]	; 0xffffffc8
   124e0:	b	124bc <argp_parse@@Base+0x408>
   124e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   124e8:	str	r3, [fp, #-148]	; 0xffffff6c
   124ec:	str	r9, [fp, #-140]	; 0xffffff74
   124f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   124f4:	tst	r3, #64	; 0x40
   124f8:	beq	125c4 <argp_parse@@Base+0x510>
   124fc:	sub	r3, fp, #148	; 0x94
   12500:	str	r3, [sp, #4]
   12504:	str	r6, [sp]
   12508:	ldr	r3, [fp, #-152]	; 0xffffff68
   1250c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12510:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12514:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12518:	bl	12d84 <argp_parse@@Base+0xcd0>
   1251c:	mov	r5, r0
   12520:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12524:	str	r4, [fp, #-84]	; 0xffffffac
   12528:	cmn	r5, #1
   1252c:	beq	125ec <argp_parse@@Base+0x538>
   12530:	cmp	r5, #63	; 0x3f
   12534:	beq	12618 <argp_parse@@Base+0x564>
   12538:	cmp	r5, #1
   1253c:	beq	12650 <argp_parse@@Base+0x59c>
   12540:	ldr	r4, [fp, #-136]	; 0xffffff78
   12544:	asrs	r3, r5, #24
   12548:	bne	126fc <argp_parse@@Base+0x648>
   1254c:	mov	r1, r5
   12550:	ldr	r0, [fp, #-156]	; 0xffffff64
   12554:	bl	11108 <strchr@plt>
   12558:	subs	r1, r0, #0
   1255c:	beq	125ac <argp_parse@@Base+0x4f8>
   12560:	ldr	r0, [fp, #-112]	; 0xffffff90
   12564:	ldr	r2, [fp, #-108]	; 0xffffff94
   12568:	cmp	r2, r0
   1256c:	bls	125ac <argp_parse@@Base+0x4f8>
   12570:	ldr	r3, [r0, #8]
   12574:	cmp	r1, r3
   12578:	bcc	12594 <argp_parse@@Base+0x4e0>
   1257c:	add	r0, r0, #36	; 0x24
   12580:	cmp	r2, r0
   12584:	bls	125ac <argp_parse@@Base+0x4f8>
   12588:	ldr	r3, [r0, #8]
   1258c:	cmp	r1, r3
   12590:	bcs	1257c <argp_parse@@Base+0x4c8>
   12594:	mov	r3, r4
   12598:	mov	r2, r5
   1259c:	sub	r1, fp, #96	; 0x60
   125a0:	bl	11acc <__assert_fail@plt+0x8d4>
   125a4:	cmp	r0, #7
   125a8:	bne	12734 <argp_parse@@Base+0x680>
   125ac:	ldr	r3, [pc, #1348]	; 12af8 <argp_parse@@Base+0xa44>
   125b0:	mov	r2, r5
   125b4:	ldr	r1, [pc, #1344]	; 12afc <argp_parse@@Base+0xa48>
   125b8:	sub	r0, fp, #96	; 0x60
   125bc:	bl	16ba0 <argp_error@@Base>
   125c0:	b	127dc <argp_parse@@Base+0x728>
   125c4:	sub	r3, fp, #148	; 0x94
   125c8:	str	r3, [sp, #4]
   125cc:	str	r6, [sp]
   125d0:	ldr	r3, [fp, #-152]	; 0xffffff68
   125d4:	ldr	r2, [fp, #-156]	; 0xffffff64
   125d8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   125dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   125e0:	bl	12d28 <argp_parse@@Base+0xc74>
   125e4:	mov	r5, r0
   125e8:	b	12520 <argp_parse@@Base+0x46c>
   125ec:	str	r6, [fp, #-100]	; 0xffffff9c
   125f0:	cmp	r4, #1
   125f4:	ble	12764 <argp_parse@@Base+0x6b0>
   125f8:	sub	r3, r4, #-1073741823	; 0xc0000001
   125fc:	ldr	r1, [pc, #1276]	; 12b00 <argp_parse@@Base+0xa4c>
   12600:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12604:	ldr	r0, [r2, r3, lsl #2]
   12608:	bl	10f70 <strcmp@plt>
   1260c:	cmp	r0, #0
   12610:	streq	r4, [fp, #-72]	; 0xffffffb8
   12614:	b	12764 <argp_parse@@Base+0x6b0>
   12618:	ldr	r3, [fp, #-140]	; 0xffffff74
   1261c:	cmn	r3, #1
   12620:	beq	12540 <argp_parse@@Base+0x48c>
   12624:	mov	r3, #0
   12628:	b	127ec <argp_parse@@Base+0x738>
   1262c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12630:	tst	r2, #4
   12634:	movne	r3, #1
   12638:	bne	127ec <argp_parse@@Base+0x738>
   1263c:	add	r2, r3, #1
   12640:	str	r2, [fp, #-84]	; 0xffffffac
   12644:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12648:	ldr	r3, [r2, r3, lsl #2]
   1264c:	str	r3, [fp, #-136]	; 0xffffff78
   12650:	ldr	r7, [fp, #-136]	; 0xffffff78
   12654:	ldr	r8, [fp, #-84]	; 0xffffffac
   12658:	sub	r8, r8, #1
   1265c:	str	r8, [fp, #-84]	; 0xffffffac
   12660:	ldr	r5, [fp, #-112]	; 0xffffff90
   12664:	ldr	r3, [fp, #-108]	; 0xffffff94
   12668:	cmp	r3, r5
   1266c:	bhi	126b8 <argp_parse@@Base+0x604>
   12670:	b	126f4 <argp_parse@@Base+0x640>
   12674:	ldr	r3, [fp, #-84]	; 0xffffffac
   12678:	sub	r3, r3, #1
   1267c:	str	r3, [fp, #-84]	; 0xffffffac
   12680:	mov	r3, r6
   12684:	ldr	r2, [pc, #1144]	; 12b04 <argp_parse@@Base+0xa50>
   12688:	sub	r1, fp, #96	; 0x60
   1268c:	mov	r0, r5
   12690:	bl	11acc <__assert_fail@plt+0x8d4>
   12694:	add	r5, r5, #36	; 0x24
   12698:	ldr	r3, [fp, #-108]	; 0xffffff94
   1269c:	cmp	r5, r3
   126a0:	movcs	r3, #0
   126a4:	movcc	r3, #1
   126a8:	cmp	r0, #7
   126ac:	movne	r3, #0
   126b0:	cmp	r3, #0
   126b4:	beq	12a98 <argp_parse@@Base+0x9e4>
   126b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   126bc:	add	r3, r3, #1
   126c0:	str	r3, [fp, #-84]	; 0xffffffac
   126c4:	mov	r3, r7
   126c8:	mov	r2, r6
   126cc:	sub	r1, fp, #96	; 0x60
   126d0:	mov	r0, r5
   126d4:	bl	11acc <__assert_fail@plt+0x8d4>
   126d8:	cmp	r0, #7
   126dc:	beq	12674 <argp_parse@@Base+0x5c0>
   126e0:	add	r5, r5, #36	; 0x24
   126e4:	cmp	r0, #0
   126e8:	beq	12aa8 <argp_parse@@Base+0x9f4>
   126ec:	cmp	r0, #7
   126f0:	bne	12734 <argp_parse@@Base+0x680>
   126f4:	mov	r5, #1
   126f8:	b	127dc <argp_parse@@Base+0x728>
   126fc:	ands	r1, r5, #8388608	; 0x800000
   12700:	movne	r1, #-16777216	; 0xff000000
   12704:	bic	r2, r5, #-16777216	; 0xff000000
   12708:	add	r0, r3, r3, lsl #3
   1270c:	lsl	r0, r0, #2
   12710:	sub	r0, r0, #36	; 0x24
   12714:	mov	r3, r4
   12718:	orr	r2, r2, r1
   1271c:	sub	r1, fp, #96	; 0x60
   12720:	ldr	ip, [fp, #-112]	; 0xffffff90
   12724:	add	r0, ip, r0
   12728:	bl	11acc <__assert_fail@plt+0x8d4>
   1272c:	cmp	r0, #7
   12730:	beq	1277c <argp_parse@@Base+0x6c8>
   12734:	cmp	r0, #0
   12738:	bne	1288c <argp_parse@@Base+0x7d8>
   1273c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12740:	cmp	r3, #0
   12744:	beq	12758 <argp_parse@@Base+0x6a4>
   12748:	ldr	r2, [fp, #-84]	; 0xffffffac
   1274c:	cmp	r3, r2
   12750:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12754:	ble	12764 <argp_parse@@Base+0x6b0>
   12758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1275c:	cmp	r3, #0
   12760:	bne	124e4 <argp_parse@@Base+0x430>
   12764:	ldr	r3, [fp, #-84]	; 0xffffffac
   12768:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1276c:	cmp	r3, r2
   12770:	blt	1262c <argp_parse@@Base+0x578>
   12774:	mov	r3, #1
   12778:	b	127ec <argp_parse@@Base+0x738>
   1277c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12780:	ldr	r2, [r3, #12]
   12784:	cmp	r2, r5
   12788:	beq	127bc <argp_parse@@Base+0x708>
   1278c:	ldr	r2, [r3]
   12790:	cmp	r2, #0
   12794:	beq	12884 <argp_parse@@Base+0x7d0>
   12798:	add	r3, r3, #16
   1279c:	ldr	r2, [r3, #12]
   127a0:	cmp	r2, r5
   127a4:	beq	127bc <argp_parse@@Base+0x708>
   127a8:	ldr	r2, [r3]
   127ac:	cmp	r2, #0
   127b0:	bne	12798 <argp_parse@@Base+0x6e4>
   127b4:	ldr	r2, [pc, #844]	; 12b08 <argp_parse@@Base+0xa54>
   127b8:	b	127cc <argp_parse@@Base+0x718>
   127bc:	ldr	r2, [r3]
   127c0:	ldr	r3, [pc, #832]	; 12b08 <argp_parse@@Base+0xa54>
   127c4:	cmp	r2, #0
   127c8:	moveq	r2, r3
   127cc:	ldr	r3, [pc, #804]	; 12af8 <argp_parse@@Base+0xa44>
   127d0:	ldr	r1, [pc, #820]	; 12b0c <argp_parse@@Base+0xa58>
   127d4:	sub	r0, fp, #96	; 0x60
   127d8:	bl	16ba0 <argp_error@@Base>
   127dc:	add	r5, r5, #1
   127e0:	bics	r3, r5, #2
   127e4:	moveq	r3, #1
   127e8:	movne	r3, #0
   127ec:	cmp	r3, #0
   127f0:	moveq	r4, #7
   127f4:	beq	12890 <argp_parse@@Base+0x7dc>
   127f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   127fc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12800:	cmp	r3, r2
   12804:	beq	12930 <argp_parse@@Base+0x87c>
   12808:	ldr	r2, [fp, #4]
   1280c:	cmp	r2, #0
   12810:	strne	r3, [r2]
   12814:	beq	12a2c <argp_parse@@Base+0x978>
   12818:	ldr	r5, [fp, #-108]	; 0xffffff94
   1281c:	sub	r5, r5, #36	; 0x24
   12820:	ldr	r3, [fp, #-112]	; 0xffffff90
   12824:	cmp	r5, r3
   12828:	bcc	12a68 <argp_parse@@Base+0x9b4>
   1282c:	ldr	r7, [pc, #732]	; 12b10 <argp_parse@@Base+0xa5c>
   12830:	mov	r6, #0
   12834:	mov	r3, r6
   12838:	mov	r2, r7
   1283c:	sub	r1, fp, #96	; 0x60
   12840:	mov	r0, r5
   12844:	bl	11acc <__assert_fail@plt+0x8d4>
   12848:	sub	r5, r5, #36	; 0x24
   1284c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12850:	cmp	r5, r3
   12854:	bcc	12864 <argp_parse@@Base+0x7b0>
   12858:	cmp	r0, #7
   1285c:	cmpne	r0, #0
   12860:	beq	12834 <argp_parse@@Base+0x780>
   12864:	mov	r4, r0
   12868:	cmp	r0, #7
   1286c:	moveq	r4, #0
   12870:	ldr	r5, [fp, #-108]	; 0xffffff94
   12874:	sub	r5, r5, #36	; 0x24
   12878:	cmp	r3, r5
   1287c:	bls	128e8 <argp_parse@@Base+0x834>
   12880:	b	1291c <argp_parse@@Base+0x868>
   12884:	ldr	r2, [pc, #636]	; 12b08 <argp_parse@@Base+0xa54>
   12888:	b	127cc <argp_parse@@Base+0x718>
   1288c:	mov	r4, r0
   12890:	cmp	r4, #7
   12894:	beq	12a50 <argp_parse@@Base+0x99c>
   12898:	ldr	r5, [fp, #-112]	; 0xffffff90
   1289c:	ldr	r3, [fp, #-108]	; 0xffffff94
   128a0:	cmp	r3, r5
   128a4:	bls	128d4 <argp_parse@@Base+0x820>
   128a8:	ldr	r7, [pc, #612]	; 12b14 <argp_parse@@Base+0xa60>
   128ac:	mov	r6, #0
   128b0:	mov	r3, r6
   128b4:	mov	r2, r7
   128b8:	sub	r1, fp, #96	; 0x60
   128bc:	mov	r0, r5
   128c0:	bl	11acc <__assert_fail@plt+0x8d4>
   128c4:	add	r5, r5, #36	; 0x24
   128c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   128cc:	cmp	r5, r3
   128d0:	bcc	128b0 <argp_parse@@Base+0x7fc>
   128d4:	ldr	r5, [fp, #-108]	; 0xffffff94
   128d8:	sub	r5, r5, #36	; 0x24
   128dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   128e0:	cmp	r3, r5
   128e4:	bhi	12914 <argp_parse@@Base+0x860>
   128e8:	ldr	r7, [pc, #552]	; 12b18 <argp_parse@@Base+0xa64>
   128ec:	mov	r6, #0
   128f0:	mov	r3, r6
   128f4:	mov	r2, r7
   128f8:	sub	r1, fp, #96	; 0x60
   128fc:	mov	r0, r5
   12900:	bl	11acc <__assert_fail@plt+0x8d4>
   12904:	sub	r5, r5, #36	; 0x24
   12908:	ldr	r3, [fp, #-112]	; 0xffffff90
   1290c:	cmp	r5, r3
   12910:	bcs	128f0 <argp_parse@@Base+0x83c>
   12914:	cmp	r4, #7
   12918:	moveq	r4, #22
   1291c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12920:	bl	12ca8 <argp_parse@@Base+0xbf4>
   12924:	mov	r0, r4
   12928:	sub	sp, fp, #32
   1292c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12930:	ldr	r6, [fp, #-112]	; 0xffffff90
   12934:	ldr	r5, [fp, #-108]	; 0xffffff94
   12938:	cmp	r6, r5
   1293c:	bcs	12a70 <argp_parse@@Base+0x9bc>
   12940:	mov	r4, #0
   12944:	ldr	r8, [pc, #464]	; 12b1c <argp_parse@@Base+0xa68>
   12948:	mov	r7, r4
   1294c:	mov	r0, r4
   12950:	b	12970 <argp_parse@@Base+0x8bc>
   12954:	add	r6, r6, #36	; 0x24
   12958:	ldr	r5, [fp, #-108]	; 0xffffff94
   1295c:	cmp	r6, r5
   12960:	bcs	1299c <argp_parse@@Base+0x8e8>
   12964:	cmp	r0, #7
   12968:	cmpne	r0, #0
   1296c:	bne	12994 <argp_parse@@Base+0x8e0>
   12970:	ldr	r3, [r6, #12]
   12974:	cmp	r3, #0
   12978:	bne	12954 <argp_parse@@Base+0x8a0>
   1297c:	mov	r3, r7
   12980:	mov	r2, r8
   12984:	sub	r1, fp, #96	; 0x60
   12988:	mov	r0, r6
   1298c:	bl	11acc <__assert_fail@plt+0x8d4>
   12990:	b	12954 <argp_parse@@Base+0x8a0>
   12994:	mov	r4, r0
   12998:	b	12a00 <argp_parse@@Base+0x94c>
   1299c:	mov	r4, r0
   129a0:	sub	r5, r5, #36	; 0x24
   129a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   129a8:	cmp	r3, r5
   129ac:	bhi	12a00 <argp_parse@@Base+0x94c>
   129b0:	cmp	r0, #0
   129b4:	cmpne	r0, #7
   129b8:	bne	12a00 <argp_parse@@Base+0x94c>
   129bc:	ldr	r7, [pc, #348]	; 12b20 <argp_parse@@Base+0xa6c>
   129c0:	mov	r6, #0
   129c4:	mov	r3, r6
   129c8:	mov	r2, r7
   129cc:	sub	r1, fp, #96	; 0x60
   129d0:	mov	r0, r5
   129d4:	bl	11acc <__assert_fail@plt+0x8d4>
   129d8:	sub	r5, r5, #36	; 0x24
   129dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   129e0:	cmp	r5, r3
   129e4:	bcc	129fc <argp_parse@@Base+0x948>
   129e8:	cmp	r0, #7
   129ec:	cmpne	r0, #0
   129f0:	beq	129c4 <argp_parse@@Base+0x910>
   129f4:	mov	r4, r0
   129f8:	b	12a00 <argp_parse@@Base+0x94c>
   129fc:	mov	r4, r0
   12a00:	cmp	r4, #7
   12a04:	beq	12a84 <argp_parse@@Base+0x9d0>
   12a08:	ldr	r3, [fp, #4]
   12a0c:	cmp	r3, #0
   12a10:	beq	12ac8 <argp_parse@@Base+0xa14>
   12a14:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a18:	ldr	r2, [fp, #4]
   12a1c:	str	r3, [r2]
   12a20:	cmp	r4, #0
   12a24:	beq	12818 <argp_parse@@Base+0x764>
   12a28:	b	12890 <argp_parse@@Base+0x7dc>
   12a2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a30:	tst	r3, #2
   12a34:	bne	12a50 <argp_parse@@Base+0x99c>
   12a38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a3c:	cmp	r0, #0
   12a40:	beq	12a50 <argp_parse@@Base+0x99c>
   12a44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12a48:	ldr	r1, [pc, #212]	; 12b24 <argp_parse@@Base+0xa70>
   12a4c:	bl	11114 <fprintf@plt>
   12a50:	mov	r2, #260	; 0x104
   12a54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a58:	sub	r0, fp, #96	; 0x60
   12a5c:	bl	16ae4 <argp_state_help@@Base>
   12a60:	mov	r4, #7
   12a64:	b	12898 <argp_parse@@Base+0x7e4>
   12a68:	mov	r4, #0
   12a6c:	b	12914 <argp_parse@@Base+0x860>
   12a70:	sub	r5, r5, #36	; 0x24
   12a74:	cmp	r6, r5
   12a78:	movhi	r4, #0
   12a7c:	bls	129bc <argp_parse@@Base+0x908>
   12a80:	b	12a08 <argp_parse@@Base+0x954>
   12a84:	ldr	r3, [fp, #4]
   12a88:	cmp	r3, #0
   12a8c:	movne	r4, #0
   12a90:	bne	12a14 <argp_parse@@Base+0x960>
   12a94:	b	12818 <argp_parse@@Base+0x764>
   12a98:	cmp	r0, #0
   12a9c:	bne	126ec <argp_parse@@Base+0x638>
   12aa0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12aa4:	str	r3, [fp, #-84]	; 0xffffffac
   12aa8:	ldr	r3, [fp, #-84]	; 0xffffffac
   12aac:	cmp	r8, r3
   12ab0:	sublt	r8, r3, r8
   12ab4:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   12ab8:	addlt	r8, r3, r8
   12abc:	strlt	r8, [r5, #-24]	; 0xffffffe8
   12ac0:	strge	sl, [fp, #-100]	; 0xffffff9c
   12ac4:	b	1273c <argp_parse@@Base+0x688>
   12ac8:	cmp	r4, #0
   12acc:	beq	12818 <argp_parse@@Base+0x764>
   12ad0:	b	12898 <argp_parse@@Base+0x7e4>
   12ad4:	andeq	sl, r2, ip, asr r2
   12ad8:	andeq	sl, r2, r8, asr r2
   12adc:	andeq	sl, r2, r0, ror #4
   12ae0:	andeq	sl, r2, r4, ror #4
   12ae4:	tsteq	r0, r3
   12ae8:	andeq	r8, r1, r8, lsr #14
   12aec:			; <UNDEFINED> instruction: 0x0002a2b0
   12af0:	andeq	r8, r1, r4, asr #14
   12af4:	andeq	sl, r2, r8, ror r2
   12af8:	andeq	r8, r1, r0, ror #14
   12afc:	andeq	r8, r1, r4, ror r8
   12b00:	andeq	r8, r1, r0, ror r8
   12b04:	tsteq	r0, r6
   12b08:	andeq	r8, r1, ip, ror #16
   12b0c:	andeq	r8, r1, ip, ror r8
   12b10:	tsteq	r0, r4
   12b14:	tsteq	r0, r5
   12b18:	tsteq	r0, r7
   12b1c:	tsteq	r0, r2
   12b20:	tsteq	r0, r1
   12b24:	andeq	r8, r1, r8, lsl #17
   12b28:	cmp	r1, #0
   12b2c:	beq	12b78 <argp_parse@@Base+0xac4>
   12b30:	ldr	r2, [r1, #52]	; 0x34
   12b34:	ldr	r3, [r2, #48]	; 0x30
   12b38:	ldr	r1, [r2, #52]	; 0x34
   12b3c:	cmp	r3, r1
   12b40:	bcs	12b80 <argp_parse@@Base+0xacc>
   12b44:	ldr	r2, [r3, #4]
   12b48:	cmp	r0, r2
   12b4c:	beq	12b68 <argp_parse@@Base+0xab4>
   12b50:	add	r3, r3, #36	; 0x24
   12b54:	cmp	r3, r1
   12b58:	bcs	12b70 <argp_parse@@Base+0xabc>
   12b5c:	ldr	r2, [r3, #4]
   12b60:	cmp	r2, r0
   12b64:	bne	12b50 <argp_parse@@Base+0xa9c>
   12b68:	ldr	r0, [r3, #24]
   12b6c:	bx	lr
   12b70:	mov	r0, #0
   12b74:	bx	lr
   12b78:	mov	r0, #0
   12b7c:	bx	lr
   12b80:	mov	r0, #0
   12b84:	bx	lr
   12b88:	push	{lr}		; (str lr, [sp, #-4]!)
   12b8c:	sub	sp, sp, #12
   12b90:	ldr	r3, [pc, #28]	; 12bb4 <argp_parse@@Base+0xb00>
   12b94:	ldr	r1, [r3]
   12b98:	ldr	r3, [r3, #4]
   12b9c:	str	r3, [sp]
   12ba0:	ldr	r3, [pc, #16]	; 12bb8 <argp_parse@@Base+0xb04>
   12ba4:	ldr	r2, [pc, #16]	; 12bbc <argp_parse@@Base+0xb08>
   12ba8:	bl	13168 <argp_parse@@Base+0x10b4>
   12bac:	add	sp, sp, #12
   12bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bb4:	andeq	sl, r2, ip, ror r2
   12bb8:	andeq	r8, r1, r0, ror r9
   12bbc:	andeq	r8, r1, r0, lsl #19
   12bc0:	ldr	r2, [pc, #20]	; 12bdc <argp_parse@@Base+0xb28>
   12bc4:	ldr	r3, [pc, #20]	; 12be0 <argp_parse@@Base+0xb2c>
   12bc8:	str	r2, [r3]
   12bcc:	ldr	r3, [pc, #16]	; 12be4 <argp_parse@@Base+0xb30>
   12bd0:	str	r0, [r3]
   12bd4:	str	r1, [r3, #4]
   12bd8:	bx	lr
   12bdc:	andeq	r2, r1, r8, lsl #23
   12be0:	andeq	sl, r2, r8, ror r2
   12be4:	andeq	sl, r2, ip, ror r2
   12be8:	ldrb	r3, [r0]
   12bec:	cmp	r3, #47	; 0x2f
   12bf0:	bne	12c00 <argp_parse@@Base+0xb4c>
   12bf4:	ldrb	r3, [r0, #1]!
   12bf8:	cmp	r3, #47	; 0x2f
   12bfc:	beq	12bf4 <argp_parse@@Base+0xb40>
   12c00:	ldrb	r2, [r0]
   12c04:	cmp	r2, #0
   12c08:	bxeq	lr
   12c0c:	push	{lr}		; (str lr, [sp, #-4]!)
   12c10:	mov	r1, r0
   12c14:	mov	r3, #0
   12c18:	mov	lr, #1
   12c1c:	mov	ip, r3
   12c20:	b	12c30 <argp_parse@@Base+0xb7c>
   12c24:	ldrb	r2, [r1, #1]!
   12c28:	cmp	r2, #0
   12c2c:	beq	12c4c <argp_parse@@Base+0xb98>
   12c30:	cmp	r2, #47	; 0x2f
   12c34:	moveq	r3, lr
   12c38:	beq	12c24 <argp_parse@@Base+0xb70>
   12c3c:	cmp	r3, #0
   12c40:	movne	r0, r1
   12c44:	movne	r3, ip
   12c48:	b	12c24 <argp_parse@@Base+0xb70>
   12c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c50:	push	{r4, lr}
   12c54:	mov	r4, r0
   12c58:	bl	110fc <strlen@plt>
   12c5c:	cmp	r0, #1
   12c60:	popls	{r4, pc}
   12c64:	sub	r3, r0, #1
   12c68:	add	r2, r4, r3
   12c6c:	ldrb	r1, [r4, r3]
   12c70:	cmp	r1, #47	; 0x2f
   12c74:	popne	{r4, pc}
   12c78:	cmp	r3, #1
   12c7c:	beq	12ca0 <argp_parse@@Base+0xbec>
   12c80:	sub	r0, r3, #1
   12c84:	ldrb	r1, [r2, #-1]!
   12c88:	cmp	r1, #47	; 0x2f
   12c8c:	beq	12c98 <argp_parse@@Base+0xbe4>
   12c90:	mov	r0, r3
   12c94:	pop	{r4, pc}
   12c98:	mov	r3, r0
   12c9c:	b	12c78 <argp_parse@@Base+0xbc4>
   12ca0:	mov	r0, #1
   12ca4:	pop	{r4, pc}
   12ca8:	push	{r4, r5, lr}
   12cac:	sub	sp, sp, #12
   12cb0:	mov	r5, r0
   12cb4:	bl	11120 <__errno_location@plt>
   12cb8:	mov	r4, r0
   12cbc:	ldr	r3, [r0]
   12cc0:	str	r3, [sp]
   12cc4:	str	r3, [sp, #4]
   12cc8:	mov	r3, #0
   12ccc:	str	r3, [r0]
   12cd0:	mov	r0, r5
   12cd4:	bl	10fb8 <free@plt>
   12cd8:	ldr	r3, [r4]
   12cdc:	cmp	r3, #0
   12ce0:	moveq	r3, #4
   12ce4:	movne	r3, #0
   12ce8:	add	r2, sp, #8
   12cec:	add	r3, r2, r3
   12cf0:	ldr	r3, [r3, #-8]
   12cf4:	str	r3, [r4]
   12cf8:	add	sp, sp, #12
   12cfc:	pop	{r4, r5, pc}
   12d00:	push	{lr}		; (str lr, [sp, #-4]!)
   12d04:	sub	sp, sp, #20
   12d08:	mov	ip, #0
   12d0c:	str	ip, [sp, #8]
   12d10:	str	ip, [sp, #4]
   12d14:	ldr	ip, [sp, #24]
   12d18:	str	ip, [sp]
   12d1c:	bl	1781c <argp_error@@Base+0xc7c>
   12d20:	add	sp, sp, #20
   12d24:	pop	{pc}		; (ldr pc, [sp], #4)
   12d28:	push	{lr}		; (str lr, [sp, #-4]!)
   12d2c:	sub	sp, sp, #20
   12d30:	mov	ip, #0
   12d34:	str	ip, [sp, #12]
   12d38:	ldr	lr, [sp, #28]
   12d3c:	str	lr, [sp, #8]
   12d40:	str	ip, [sp, #4]
   12d44:	ldr	ip, [sp, #24]
   12d48:	str	ip, [sp]
   12d4c:	bl	172a0 <argp_error@@Base+0x700>
   12d50:	add	sp, sp, #20
   12d54:	pop	{pc}		; (ldr pc, [sp], #4)
   12d58:	push	{lr}		; (str lr, [sp, #-4]!)
   12d5c:	sub	sp, sp, #20
   12d60:	mov	ip, #0
   12d64:	str	ip, [sp, #8]
   12d68:	mov	ip, #1
   12d6c:	str	ip, [sp, #4]
   12d70:	ldr	ip, [sp, #24]
   12d74:	str	ip, [sp]
   12d78:	bl	1781c <argp_error@@Base+0xc7c>
   12d7c:	add	sp, sp, #20
   12d80:	pop	{pc}		; (ldr pc, [sp], #4)
   12d84:	push	{lr}		; (str lr, [sp, #-4]!)
   12d88:	sub	sp, sp, #20
   12d8c:	mov	ip, #0
   12d90:	str	ip, [sp, #12]
   12d94:	ldr	ip, [sp, #28]
   12d98:	str	ip, [sp, #8]
   12d9c:	mov	ip, #1
   12da0:	str	ip, [sp, #4]
   12da4:	ldr	ip, [sp, #24]
   12da8:	str	ip, [sp]
   12dac:	bl	172a0 <argp_error@@Base+0x700>
   12db0:	add	sp, sp, #20
   12db4:	pop	{pc}		; (ldr pc, [sp], #4)
   12db8:	push	{r4, r5, r6, lr}
   12dbc:	subs	r4, r0, #0
   12dc0:	beq	12e38 <argp_parse@@Base+0xd84>
   12dc4:	mov	r1, #47	; 0x2f
   12dc8:	mov	r0, r4
   12dcc:	bl	11168 <strrchr@plt>
   12dd0:	cmp	r0, #0
   12dd4:	addne	r5, r0, #1
   12dd8:	moveq	r5, r4
   12ddc:	sub	r3, r5, r4
   12de0:	cmp	r3, #6
   12de4:	ble	12e24 <argp_parse@@Base+0xd70>
   12de8:	mov	r2, #7
   12dec:	ldr	r1, [pc, #96]	; 12e54 <argp_parse@@Base+0xda0>
   12df0:	sub	r0, r5, #7
   12df4:	bl	111e0 <strncmp@plt>
   12df8:	cmp	r0, #0
   12dfc:	bne	12e24 <argp_parse@@Base+0xd70>
   12e00:	mov	r2, #3
   12e04:	ldr	r1, [pc, #76]	; 12e58 <argp_parse@@Base+0xda4>
   12e08:	mov	r0, r5
   12e0c:	bl	111e0 <strncmp@plt>
   12e10:	cmp	r0, #0
   12e14:	addeq	r4, r5, #3
   12e18:	ldreq	r3, [pc, #60]	; 12e5c <argp_parse@@Base+0xda8>
   12e1c:	streq	r4, [r3]
   12e20:	movne	r4, r5
   12e24:	ldr	r3, [pc, #52]	; 12e60 <argp_parse@@Base+0xdac>
   12e28:	str	r4, [r3]
   12e2c:	ldr	r3, [pc, #48]	; 12e64 <argp_parse@@Base+0xdb0>
   12e30:	str	r4, [r3]
   12e34:	pop	{r4, r5, r6, pc}
   12e38:	ldr	r3, [pc, #40]	; 12e68 <argp_parse@@Base+0xdb4>
   12e3c:	ldr	r3, [r3]
   12e40:	mov	r2, #55	; 0x37
   12e44:	mov	r1, #1
   12e48:	ldr	r0, [pc, #28]	; 12e6c <argp_parse@@Base+0xdb8>
   12e4c:	bl	11030 <fwrite@plt>
   12e50:	bl	111ec <abort@plt>
   12e54:	andeq	r8, r1, r8, asr #19
   12e58:	ldrdeq	r8, [r1], -r0
   12e5c:	andeq	sl, r2, r8, asr r2
   12e60:	andeq	sl, r2, r4, lsl #5
   12e64:	andeq	sl, r2, ip, asr r2
   12e68:	andeq	sl, r2, r0, ror #4
   12e6c:	muleq	r1, r0, r9
   12e70:	push	{r4, r5, r6, lr}
   12e74:	sub	sp, sp, #32
   12e78:	mov	r4, r0
   12e7c:	ldr	r5, [sp, #48]	; 0x30
   12e80:	ldr	r6, [sp, #52]	; 0x34
   12e84:	cmp	r1, #0
   12e88:	beq	12f10 <argp_parse@@Base+0xe5c>
   12e8c:	str	r3, [sp]
   12e90:	mov	r3, r2
   12e94:	mov	r2, r1
   12e98:	ldr	r1, [pc, #644]	; 13124 <argp_parse@@Base+0x1070>
   12e9c:	bl	11114 <fprintf@plt>
   12ea0:	ldr	r3, [pc, #640]	; 13128 <argp_parse@@Base+0x1074>
   12ea4:	ldr	r2, [pc, #640]	; 1312c <argp_parse@@Base+0x1078>
   12ea8:	ldr	r1, [pc, #640]	; 13130 <argp_parse@@Base+0x107c>
   12eac:	mov	r0, r4
   12eb0:	bl	11114 <fprintf@plt>
   12eb4:	mov	r1, r4
   12eb8:	mov	r0, #10
   12ebc:	bl	11180 <fputc@plt>
   12ec0:	ldr	r2, [pc, #620]	; 13134 <argp_parse@@Base+0x1080>
   12ec4:	ldr	r1, [pc, #620]	; 13138 <argp_parse@@Base+0x1084>
   12ec8:	mov	r0, r4
   12ecc:	bl	11114 <fprintf@plt>
   12ed0:	mov	r1, r4
   12ed4:	mov	r0, #10
   12ed8:	bl	11180 <fputc@plt>
   12edc:	cmp	r6, #9
   12ee0:	ldrls	pc, [pc, r6, lsl #2]
   12ee4:	b	130d4 <argp_parse@@Base+0x1020>
   12ee8:	andeq	r2, r1, ip, lsr #30
   12eec:	andeq	r2, r1, ip, lsl pc
   12ef0:	andeq	r2, r1, r4, lsr pc
   12ef4:	andeq	r2, r1, ip, asr #30
   12ef8:	andeq	r2, r1, ip, ror #30
   12efc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12f00:	andeq	r2, r1, r4, asr #31
   12f04:	strdeq	r2, [r1], -ip
   12f08:	andeq	r3, r1, ip, lsr r0
   12f0c:	andeq	r3, r1, r4, lsl #1
   12f10:	ldr	r1, [pc, #548]	; 1313c <argp_parse@@Base+0x1088>
   12f14:	bl	11114 <fprintf@plt>
   12f18:	b	12ea0 <argp_parse@@Base+0xdec>
   12f1c:	ldr	r2, [r5]
   12f20:	ldr	r1, [pc, #536]	; 13140 <argp_parse@@Base+0x108c>
   12f24:	mov	r0, r4
   12f28:	bl	11114 <fprintf@plt>
   12f2c:	add	sp, sp, #32
   12f30:	pop	{r4, r5, r6, pc}
   12f34:	ldr	r3, [r5, #4]
   12f38:	ldr	r2, [r5]
   12f3c:	ldr	r1, [pc, #512]	; 13144 <argp_parse@@Base+0x1090>
   12f40:	mov	r0, r4
   12f44:	bl	11114 <fprintf@plt>
   12f48:	b	12f2c <argp_parse@@Base+0xe78>
   12f4c:	ldr	r3, [r5, #4]
   12f50:	ldr	r2, [r5]
   12f54:	ldr	r1, [r5, #8]
   12f58:	str	r1, [sp]
   12f5c:	ldr	r1, [pc, #484]	; 13148 <argp_parse@@Base+0x1094>
   12f60:	mov	r0, r4
   12f64:	bl	11114 <fprintf@plt>
   12f68:	b	12f2c <argp_parse@@Base+0xe78>
   12f6c:	ldr	r3, [r5, #4]
   12f70:	ldr	r2, [r5]
   12f74:	ldr	r1, [r5, #12]
   12f78:	str	r1, [sp, #4]
   12f7c:	ldr	r1, [r5, #8]
   12f80:	str	r1, [sp]
   12f84:	ldr	r1, [pc, #448]	; 1314c <argp_parse@@Base+0x1098>
   12f88:	mov	r0, r4
   12f8c:	bl	11114 <fprintf@plt>
   12f90:	b	12f2c <argp_parse@@Base+0xe78>
   12f94:	ldr	r3, [r5, #4]
   12f98:	ldr	r2, [r5]
   12f9c:	ldr	r1, [r5, #16]
   12fa0:	str	r1, [sp, #8]
   12fa4:	ldr	r1, [r5, #12]
   12fa8:	str	r1, [sp, #4]
   12fac:	ldr	r1, [r5, #8]
   12fb0:	str	r1, [sp]
   12fb4:	ldr	r1, [pc, #404]	; 13150 <argp_parse@@Base+0x109c>
   12fb8:	mov	r0, r4
   12fbc:	bl	11114 <fprintf@plt>
   12fc0:	b	12f2c <argp_parse@@Base+0xe78>
   12fc4:	ldr	r3, [r5, #4]
   12fc8:	ldr	r2, [r5]
   12fcc:	ldr	r1, [r5, #20]
   12fd0:	str	r1, [sp, #12]
   12fd4:	ldr	r1, [r5, #16]
   12fd8:	str	r1, [sp, #8]
   12fdc:	ldr	r1, [r5, #12]
   12fe0:	str	r1, [sp, #4]
   12fe4:	ldr	r1, [r5, #8]
   12fe8:	str	r1, [sp]
   12fec:	ldr	r1, [pc, #352]	; 13154 <argp_parse@@Base+0x10a0>
   12ff0:	mov	r0, r4
   12ff4:	bl	11114 <fprintf@plt>
   12ff8:	b	12f2c <argp_parse@@Base+0xe78>
   12ffc:	ldr	r3, [r5, #4]
   13000:	ldr	r2, [r5]
   13004:	ldr	r1, [r5, #24]
   13008:	str	r1, [sp, #16]
   1300c:	ldr	r1, [r5, #20]
   13010:	str	r1, [sp, #12]
   13014:	ldr	r1, [r5, #16]
   13018:	str	r1, [sp, #8]
   1301c:	ldr	r1, [r5, #12]
   13020:	str	r1, [sp, #4]
   13024:	ldr	r1, [r5, #8]
   13028:	str	r1, [sp]
   1302c:	ldr	r1, [pc, #292]	; 13158 <argp_parse@@Base+0x10a4>
   13030:	mov	r0, r4
   13034:	bl	11114 <fprintf@plt>
   13038:	b	12f2c <argp_parse@@Base+0xe78>
   1303c:	ldr	r3, [r5, #4]
   13040:	ldr	r2, [r5]
   13044:	ldr	r1, [r5, #28]
   13048:	str	r1, [sp, #20]
   1304c:	ldr	r1, [r5, #24]
   13050:	str	r1, [sp, #16]
   13054:	ldr	r1, [r5, #20]
   13058:	str	r1, [sp, #12]
   1305c:	ldr	r1, [r5, #16]
   13060:	str	r1, [sp, #8]
   13064:	ldr	r1, [r5, #12]
   13068:	str	r1, [sp, #4]
   1306c:	ldr	r1, [r5, #8]
   13070:	str	r1, [sp]
   13074:	ldr	r1, [pc, #224]	; 1315c <argp_parse@@Base+0x10a8>
   13078:	mov	r0, r4
   1307c:	bl	11114 <fprintf@plt>
   13080:	b	12f2c <argp_parse@@Base+0xe78>
   13084:	ldr	r3, [r5, #4]
   13088:	ldr	r2, [r5]
   1308c:	ldr	r1, [r5, #32]
   13090:	str	r1, [sp, #24]
   13094:	ldr	r1, [r5, #28]
   13098:	str	r1, [sp, #20]
   1309c:	ldr	r1, [r5, #24]
   130a0:	str	r1, [sp, #16]
   130a4:	ldr	r1, [r5, #20]
   130a8:	str	r1, [sp, #12]
   130ac:	ldr	r1, [r5, #16]
   130b0:	str	r1, [sp, #8]
   130b4:	ldr	r1, [r5, #12]
   130b8:	str	r1, [sp, #4]
   130bc:	ldr	r1, [r5, #8]
   130c0:	str	r1, [sp]
   130c4:	ldr	r1, [pc, #148]	; 13160 <argp_parse@@Base+0x10ac>
   130c8:	mov	r0, r4
   130cc:	bl	11114 <fprintf@plt>
   130d0:	b	12f2c <argp_parse@@Base+0xe78>
   130d4:	ldr	r3, [r5, #4]
   130d8:	ldr	r2, [r5]
   130dc:	ldr	r1, [r5, #32]
   130e0:	str	r1, [sp, #24]
   130e4:	ldr	r1, [r5, #28]
   130e8:	str	r1, [sp, #20]
   130ec:	ldr	r1, [r5, #24]
   130f0:	str	r1, [sp, #16]
   130f4:	ldr	r1, [r5, #20]
   130f8:	str	r1, [sp, #12]
   130fc:	ldr	r1, [r5, #16]
   13100:	str	r1, [sp, #8]
   13104:	ldr	r1, [r5, #12]
   13108:	str	r1, [sp, #4]
   1310c:	ldr	r1, [r5, #8]
   13110:	str	r1, [sp]
   13114:	ldr	r1, [pc, #72]	; 13164 <argp_parse@@Base+0x10b0>
   13118:	mov	r0, r4
   1311c:	bl	11114 <fprintf@plt>
   13120:	b	12f2c <argp_parse@@Base+0xe78>
   13124:	ldrdeq	r8, [r1], -r4
   13128:	andeq	r0, r0, r6, ror #15
   1312c:	andeq	r8, r1, r8, ror #19
   13130:	andeq	r8, r1, r8, ror #25
   13134:	andeq	r8, r1, ip, ror #19
   13138:	andeq	r8, r1, r0, lsl sl
   1313c:	andeq	r8, r1, r0, ror #19
   13140:			; <UNDEFINED> instruction: 0x00018abc
   13144:	andeq	r8, r1, ip, asr #21
   13148:	andeq	r8, r1, r4, ror #21
   1314c:	andeq	r8, r1, r0, lsl #22
   13150:	andeq	r8, r1, r0, lsr #22
   13154:	andeq	r8, r1, r4, asr #22
   13158:	andeq	r8, r1, ip, ror #22
   1315c:	muleq	r1, r8, fp
   13160:	andeq	r8, r1, r8, asr #23
   13164:	strdeq	r8, [r1], -ip
   13168:	push	{r4, r5, lr}
   1316c:	sub	sp, sp, #12
   13170:	ldr	r5, [sp, #24]
   13174:	ldr	ip, [r5]
   13178:	cmp	ip, #0
   1317c:	beq	131ac <argp_parse@@Base+0x10f8>
   13180:	mov	lr, r5
   13184:	mov	ip, #0
   13188:	add	ip, ip, #1
   1318c:	ldr	r4, [lr, #4]!
   13190:	cmp	r4, #0
   13194:	bne	13188 <argp_parse@@Base+0x10d4>
   13198:	str	ip, [sp, #4]
   1319c:	str	r5, [sp]
   131a0:	bl	12e70 <argp_parse@@Base+0xdbc>
   131a4:	add	sp, sp, #12
   131a8:	pop	{r4, r5, pc}
   131ac:	mov	ip, #0
   131b0:	b	13198 <argp_parse@@Base+0x10e4>
   131b4:	push	{r4, r5, lr}
   131b8:	sub	sp, sp, #52	; 0x34
   131bc:	ldr	r4, [sp, #64]	; 0x40
   131c0:	sub	r4, r4, #4
   131c4:	add	r5, sp, #4
   131c8:	mov	ip, #0
   131cc:	ldr	lr, [r4, #4]!
   131d0:	str	lr, [r5, #4]!
   131d4:	cmp	lr, #0
   131d8:	beq	131e8 <argp_parse@@Base+0x1134>
   131dc:	add	ip, ip, #1
   131e0:	cmp	ip, #10
   131e4:	bne	131cc <argp_parse@@Base+0x1118>
   131e8:	str	ip, [sp, #4]
   131ec:	add	ip, sp, #8
   131f0:	str	ip, [sp]
   131f4:	bl	12e70 <argp_parse@@Base+0xdbc>
   131f8:	add	sp, sp, #52	; 0x34
   131fc:	pop	{r4, r5, pc}
   13200:	push	{r3}		; (str r3, [sp, #-4]!)
   13204:	push	{lr}		; (str lr, [sp, #-4]!)
   13208:	sub	sp, sp, #16
   1320c:	add	r3, sp, #24
   13210:	str	r3, [sp, #12]
   13214:	str	r3, [sp]
   13218:	ldr	r3, [sp, #20]
   1321c:	bl	131b4 <argp_parse@@Base+0x1100>
   13220:	add	sp, sp, #16
   13224:	pop	{lr}		; (ldr lr, [sp], #4)
   13228:	add	sp, sp, #4
   1322c:	bx	lr
   13230:	push	{r4, lr}
   13234:	ldr	r3, [pc, #52]	; 13270 <argp_parse@@Base+0x11bc>
   13238:	ldr	r1, [r3]
   1323c:	mov	r0, #10
   13240:	bl	11180 <fputc@plt>
   13244:	ldr	r1, [pc, #40]	; 13274 <argp_parse@@Base+0x11c0>
   13248:	ldr	r0, [pc, #40]	; 13278 <argp_parse@@Base+0x11c4>
   1324c:	bl	10f88 <printf@plt>
   13250:	ldr	r2, [pc, #36]	; 1327c <argp_parse@@Base+0x11c8>
   13254:	ldr	r1, [pc, #36]	; 13280 <argp_parse@@Base+0x11cc>
   13258:	ldr	r0, [pc, #36]	; 13284 <argp_parse@@Base+0x11d0>
   1325c:	bl	10f88 <printf@plt>
   13260:	ldr	r1, [pc, #32]	; 13288 <argp_parse@@Base+0x11d4>
   13264:	ldr	r0, [pc, #32]	; 1328c <argp_parse@@Base+0x11d8>
   13268:	bl	10f88 <printf@plt>
   1326c:	pop	{r4, pc}
   13270:	andeq	sl, r2, r4, ror #4
   13274:	andeq	r8, r1, r8, lsr ip
   13278:	andeq	r8, r1, r0, asr ip
   1327c:	andeq	r8, r1, r4, ror #24
   13280:	andeq	r8, r1, r0, lsl #19
   13284:	andeq	r8, r1, ip, lsl #25
   13288:	andeq	r8, r1, r0, lsr #25
   1328c:	andeq	r8, r1, r0, asr #25
   13290:	push	{r4, lr}
   13294:	bl	13aa0 <argp_parse@@Base+0x19ec>
   13298:	cmp	r0, #0
   1329c:	popne	{r4, pc}
   132a0:	bl	13834 <argp_parse@@Base+0x1780>
   132a4:	push	{r4, lr}
   132a8:	bl	13aa0 <argp_parse@@Base+0x19ec>
   132ac:	cmp	r0, #0
   132b0:	popne	{r4, pc}
   132b4:	bl	13834 <argp_parse@@Base+0x1780>
   132b8:	push	{r4, lr}
   132bc:	bl	13290 <argp_parse@@Base+0x11dc>
   132c0:	pop	{r4, pc}
   132c4:	push	{r4, r5, r6, lr}
   132c8:	mov	r5, r0
   132cc:	mov	r4, r1
   132d0:	bl	13ad0 <argp_parse@@Base+0x1a1c>
   132d4:	cmp	r0, #0
   132d8:	popne	{r4, r5, r6, pc}
   132dc:	adds	r4, r4, #0
   132e0:	movne	r4, #1
   132e4:	cmp	r5, #0
   132e8:	orreq	r4, r4, #1
   132ec:	cmp	r4, #0
   132f0:	popeq	{r4, r5, r6, pc}
   132f4:	bl	13834 <argp_parse@@Base+0x1780>
   132f8:	push	{r4, lr}
   132fc:	cmp	r1, #0
   13300:	orreq	r1, r1, #1
   13304:	bl	13ad0 <argp_parse@@Base+0x1a1c>
   13308:	cmp	r0, #0
   1330c:	popne	{r4, pc}
   13310:	bl	13834 <argp_parse@@Base+0x1780>
   13314:	push	{r4, r5, r6, lr}
   13318:	mov	r6, r0
   1331c:	mov	r5, r1
   13320:	mov	r4, r2
   13324:	bl	178b4 <argp_error@@Base+0xd14>
   13328:	cmp	r0, #0
   1332c:	popne	{r4, r5, r6, pc}
   13330:	cmp	r6, #0
   13334:	beq	13344 <argp_parse@@Base+0x1290>
   13338:	cmp	r5, #0
   1333c:	cmpne	r4, #0
   13340:	popeq	{r4, r5, r6, pc}
   13344:	bl	13834 <argp_parse@@Base+0x1780>
   13348:	push	{r4, lr}
   1334c:	bl	13314 <argp_parse@@Base+0x1260>
   13350:	pop	{r4, pc}
   13354:	push	{r4, lr}
   13358:	mov	ip, r1
   1335c:	mov	r3, r2
   13360:	cmp	r2, #0
   13364:	cmpne	r1, #0
   13368:	moveq	r3, #1
   1336c:	moveq	ip, r3
   13370:	mov	r2, r3
   13374:	mov	r1, ip
   13378:	bl	178b4 <argp_error@@Base+0xd14>
   1337c:	cmp	r0, #0
   13380:	popne	{r4, pc}
   13384:	bl	13834 <argp_parse@@Base+0x1780>
   13388:	push	{r4, lr}
   1338c:	mov	r2, r1
   13390:	mov	r1, r0
   13394:	mov	r0, #0
   13398:	bl	13314 <argp_parse@@Base+0x1260>
   1339c:	pop	{r4, pc}
   133a0:	push	{r4, lr}
   133a4:	mov	r2, r1
   133a8:	mov	r1, r0
   133ac:	mov	r0, #0
   133b0:	bl	13354 <argp_parse@@Base+0x12a0>
   133b4:	pop	{r4, pc}
   133b8:	push	{r4, r5, r6, r7, r8, lr}
   133bc:	mov	r5, r1
   133c0:	mov	r6, r2
   133c4:	ldr	r4, [r1]
   133c8:	subs	r7, r0, #0
   133cc:	beq	133e8 <argp_parse@@Base+0x1334>
   133d0:	lsr	r2, r4, #1
   133d4:	add	r3, r2, #1
   133d8:	mvn	r3, r3
   133dc:	cmp	r4, r3
   133e0:	bls	1340c <argp_parse@@Base+0x1358>
   133e4:	bl	13834 <argp_parse@@Base+0x1780>
   133e8:	cmp	r4, #0
   133ec:	bne	13414 <argp_parse@@Base+0x1360>
   133f0:	mov	r1, r2
   133f4:	mov	r0, #64	; 0x40
   133f8:	bl	1808c <argp_error@@Base+0x14ec>
   133fc:	cmp	r0, #0
   13400:	movne	r4, r0
   13404:	addeq	r4, r0, #1
   13408:	b	13414 <argp_parse@@Base+0x1360>
   1340c:	add	r4, r4, #1
   13410:	add	r4, r4, r2
   13414:	mov	r2, r6
   13418:	mov	r1, r4
   1341c:	mov	r0, r7
   13420:	bl	13314 <argp_parse@@Base+0x1260>
   13424:	str	r4, [r5]
   13428:	pop	{r4, r5, r6, r7, r8, pc}
   1342c:	push	{r4, lr}
   13430:	mov	r2, #1
   13434:	bl	133b8 <argp_parse@@Base+0x1304>
   13438:	pop	{r4, pc}
   1343c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13440:	sub	sp, sp, #12
   13444:	mov	fp, r0
   13448:	mov	sl, r1
   1344c:	mov	r9, r2
   13450:	mov	r7, r3
   13454:	ldr	r6, [sp, #48]	; 0x30
   13458:	ldr	r5, [r1]
   1345c:	asrs	r4, r5, #1
   13460:	bmi	135bc <argp_parse@@Base+0x1508>
   13464:	cmp	r5, #0
   13468:	blt	135d0 <argp_parse@@Base+0x151c>
   1346c:	mvn	r3, #-2147483648	; 0x80000000
   13470:	sub	r3, r3, r4
   13474:	cmp	r5, r3
   13478:	movle	r3, #0
   1347c:	movgt	r3, #1
   13480:	cmp	r3, #0
   13484:	addeq	r4, r4, r5
   13488:	mvnne	r4, #-2147483648	; 0x80000000
   1348c:	mvn	r8, r7
   13490:	lsr	r8, r8, #31
   13494:	cmp	r7, r4
   13498:	movge	r3, #0
   1349c:	andlt	r3, r8, #1
   134a0:	cmp	r3, #0
   134a4:	movne	r4, r7
   134a8:	cmp	r6, #0
   134ac:	blt	135e4 <argp_parse@@Base+0x1530>
   134b0:	cmp	r6, #0
   134b4:	beq	13690 <argp_parse@@Base+0x15dc>
   134b8:	cmp	r4, #0
   134bc:	blt	13640 <argp_parse@@Base+0x158c>
   134c0:	mov	r1, r6
   134c4:	mvn	r0, #-2147483648	; 0x80000000
   134c8:	bl	18298 <argp_error@@Base+0x16f8>
   134cc:	cmp	r0, r4
   134d0:	movge	r0, #0
   134d4:	movlt	r0, #1
   134d8:	cmp	r0, #0
   134dc:	mvnne	r3, #-2147483648	; 0x80000000
   134e0:	strne	r3, [sp, #4]
   134e4:	beq	13678 <argp_parse@@Base+0x15c4>
   134e8:	mov	r1, r6
   134ec:	ldr	r0, [sp, #4]
   134f0:	bl	18298 <argp_error@@Base+0x16f8>
   134f4:	mov	r4, r0
   134f8:	mov	r1, r6
   134fc:	ldr	r0, [sp, #4]
   13500:	bl	184b8 <argp_error@@Base+0x1918>
   13504:	ldr	r3, [sp, #4]
   13508:	sub	r1, r3, r1
   1350c:	cmp	fp, #0
   13510:	moveq	r3, #0
   13514:	streq	r3, [sl]
   13518:	sub	r3, r4, r5
   1351c:	cmp	r3, r9
   13520:	bge	135a8 <argp_parse@@Base+0x14f4>
   13524:	cmp	r9, #0
   13528:	blt	1369c <argp_parse@@Base+0x15e8>
   1352c:	cmp	r5, #0
   13530:	blt	136b0 <argp_parse@@Base+0x15fc>
   13534:	mvn	r3, #-2147483648	; 0x80000000
   13538:	sub	r3, r3, r9
   1353c:	cmp	r5, r3
   13540:	movle	r3, #0
   13544:	movgt	r3, #1
   13548:	cmp	r3, #0
   1354c:	bne	13758 <argp_parse@@Base+0x16a4>
   13550:	add	r5, r5, r9
   13554:	mov	r4, r5
   13558:	cmp	r7, r5
   1355c:	movge	r7, #0
   13560:	andlt	r7, r8, #1
   13564:	cmp	r7, #0
   13568:	bne	13758 <argp_parse@@Base+0x16a4>
   1356c:	cmp	r6, #0
   13570:	blt	136c4 <argp_parse@@Base+0x1610>
   13574:	cmp	r6, #0
   13578:	beq	135a4 <argp_parse@@Base+0x14f0>
   1357c:	cmp	r5, #0
   13580:	blt	13720 <argp_parse@@Base+0x166c>
   13584:	mov	r1, r6
   13588:	mvn	r0, #-2147483648	; 0x80000000
   1358c:	bl	18298 <argp_error@@Base+0x16f8>
   13590:	cmp	r5, r0
   13594:	movle	r0, #0
   13598:	movgt	r0, #1
   1359c:	cmp	r0, #0
   135a0:	bne	13758 <argp_parse@@Base+0x16a4>
   135a4:	mul	r1, r5, r6
   135a8:	mov	r0, fp
   135ac:	bl	132c4 <argp_parse@@Base+0x1210>
   135b0:	str	r4, [sl]
   135b4:	add	sp, sp, #12
   135b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135bc:	rsb	r3, r4, #-2147483648	; 0x80000000
   135c0:	cmp	r5, r3
   135c4:	movge	r3, #0
   135c8:	movlt	r3, #1
   135cc:	b	13480 <argp_parse@@Base+0x13cc>
   135d0:	rsb	r3, r5, #-2147483648	; 0x80000000
   135d4:	cmp	r4, r3
   135d8:	movge	r3, #0
   135dc:	movlt	r3, #1
   135e0:	b	13480 <argp_parse@@Base+0x13cc>
   135e4:	cmp	r4, #0
   135e8:	blt	13610 <argp_parse@@Base+0x155c>
   135ec:	cmn	r6, #1
   135f0:	beq	1362c <argp_parse@@Base+0x1578>
   135f4:	mov	r1, r6
   135f8:	mov	r0, #-2147483648	; 0x80000000
   135fc:	bl	18298 <argp_error@@Base+0x16f8>
   13600:	cmp	r0, r4
   13604:	movge	r0, #0
   13608:	movlt	r0, #1
   1360c:	b	134d8 <argp_parse@@Base+0x1424>
   13610:	mov	r1, r6
   13614:	mvn	r0, #-2147483648	; 0x80000000
   13618:	bl	18298 <argp_error@@Base+0x16f8>
   1361c:	cmp	r0, r4
   13620:	movle	r0, #0
   13624:	movgt	r0, #1
   13628:	b	134d8 <argp_parse@@Base+0x1424>
   1362c:	add	r0, r4, #-2147483648	; 0x80000000
   13630:	cmp	r0, #0
   13634:	movle	r0, #0
   13638:	movgt	r0, #1
   1363c:	b	134d8 <argp_parse@@Base+0x1424>
   13640:	cmn	r4, #1
   13644:	beq	13664 <argp_parse@@Base+0x15b0>
   13648:	mov	r1, r4
   1364c:	mov	r0, #-2147483648	; 0x80000000
   13650:	bl	18298 <argp_error@@Base+0x16f8>
   13654:	cmp	r6, r0
   13658:	movle	r0, #0
   1365c:	movgt	r0, #1
   13660:	b	134d8 <argp_parse@@Base+0x1424>
   13664:	add	r0, r6, #-2147483648	; 0x80000000
   13668:	cmp	r0, #0
   1366c:	movle	r0, #0
   13670:	movgt	r0, #1
   13674:	b	134d8 <argp_parse@@Base+0x1424>
   13678:	mul	r1, r6, r4
   1367c:	cmp	r1, #63	; 0x3f
   13680:	movle	r3, #64	; 0x40
   13684:	strle	r3, [sp, #4]
   13688:	bgt	1350c <argp_parse@@Base+0x1458>
   1368c:	b	134e8 <argp_parse@@Base+0x1434>
   13690:	mov	r3, #64	; 0x40
   13694:	str	r3, [sp, #4]
   13698:	b	134e8 <argp_parse@@Base+0x1434>
   1369c:	rsb	r3, r9, #-2147483648	; 0x80000000
   136a0:	cmp	r5, r3
   136a4:	movge	r3, #0
   136a8:	movlt	r3, #1
   136ac:	b	13548 <argp_parse@@Base+0x1494>
   136b0:	rsb	r3, r5, #-2147483648	; 0x80000000
   136b4:	cmp	r9, r3
   136b8:	movge	r3, #0
   136bc:	movlt	r3, #1
   136c0:	b	13548 <argp_parse@@Base+0x1494>
   136c4:	cmp	r5, #0
   136c8:	blt	136f0 <argp_parse@@Base+0x163c>
   136cc:	cmn	r6, #1
   136d0:	beq	1370c <argp_parse@@Base+0x1658>
   136d4:	mov	r1, r6
   136d8:	mov	r0, #-2147483648	; 0x80000000
   136dc:	bl	18298 <argp_error@@Base+0x16f8>
   136e0:	cmp	r5, r0
   136e4:	movle	r0, #0
   136e8:	movgt	r0, #1
   136ec:	b	1359c <argp_parse@@Base+0x14e8>
   136f0:	mov	r1, r6
   136f4:	mvn	r0, #-2147483648	; 0x80000000
   136f8:	bl	18298 <argp_error@@Base+0x16f8>
   136fc:	cmp	r5, r0
   13700:	movge	r0, #0
   13704:	movlt	r0, #1
   13708:	b	1359c <argp_parse@@Base+0x14e8>
   1370c:	add	r0, r5, #-2147483648	; 0x80000000
   13710:	cmp	r0, #0
   13714:	movle	r0, #0
   13718:	movgt	r0, #1
   1371c:	b	1359c <argp_parse@@Base+0x14e8>
   13720:	cmn	r5, #1
   13724:	beq	13744 <argp_parse@@Base+0x1690>
   13728:	mov	r1, r5
   1372c:	mov	r0, #-2147483648	; 0x80000000
   13730:	bl	18298 <argp_error@@Base+0x16f8>
   13734:	cmp	r6, r0
   13738:	movle	r0, #0
   1373c:	movgt	r0, #1
   13740:	b	1359c <argp_parse@@Base+0x14e8>
   13744:	add	r0, r6, #-2147483648	; 0x80000000
   13748:	cmp	r0, #0
   1374c:	movle	r0, #0
   13750:	movgt	r0, #1
   13754:	b	1359c <argp_parse@@Base+0x14e8>
   13758:	bl	13834 <argp_parse@@Base+0x1780>
   1375c:	push	{r4, lr}
   13760:	bl	13a50 <argp_parse@@Base+0x199c>
   13764:	cmp	r0, #0
   13768:	popne	{r4, pc}
   1376c:	bl	13834 <argp_parse@@Base+0x1780>
   13770:	push	{r4, lr}
   13774:	mov	r1, #1
   13778:	bl	1375c <argp_parse@@Base+0x16a8>
   1377c:	pop	{r4, pc}
   13780:	push	{r4, lr}
   13784:	bl	13a50 <argp_parse@@Base+0x199c>
   13788:	cmp	r0, #0
   1378c:	popne	{r4, pc}
   13790:	bl	13834 <argp_parse@@Base+0x1780>
   13794:	push	{r4, lr}
   13798:	mov	r1, #1
   1379c:	bl	13780 <argp_parse@@Base+0x16cc>
   137a0:	pop	{r4, pc}
   137a4:	push	{r4, r5, r6, lr}
   137a8:	mov	r5, r0
   137ac:	mov	r4, r1
   137b0:	mov	r0, r1
   137b4:	bl	13290 <argp_parse@@Base+0x11dc>
   137b8:	mov	r2, r4
   137bc:	mov	r1, r5
   137c0:	bl	10fd0 <memcpy@plt>
   137c4:	pop	{r4, r5, r6, pc}
   137c8:	push	{r4, r5, r6, lr}
   137cc:	mov	r5, r0
   137d0:	mov	r4, r1
   137d4:	mov	r0, r1
   137d8:	bl	132a4 <argp_parse@@Base+0x11f0>
   137dc:	mov	r2, r4
   137e0:	mov	r1, r5
   137e4:	bl	10fd0 <memcpy@plt>
   137e8:	pop	{r4, r5, r6, pc}
   137ec:	push	{r4, r5, r6, lr}
   137f0:	mov	r5, r0
   137f4:	mov	r4, r1
   137f8:	add	r0, r1, #1
   137fc:	bl	132a4 <argp_parse@@Base+0x11f0>
   13800:	mov	r2, #0
   13804:	strb	r2, [r0, r4]
   13808:	mov	r2, r4
   1380c:	mov	r1, r5
   13810:	bl	10fd0 <memcpy@plt>
   13814:	pop	{r4, r5, r6, pc}
   13818:	push	{r4, lr}
   1381c:	mov	r4, r0
   13820:	bl	110fc <strlen@plt>
   13824:	add	r1, r0, #1
   13828:	mov	r0, r4
   1382c:	bl	137a4 <argp_parse@@Base+0x16f0>
   13830:	pop	{r4, pc}
   13834:	push	{r4, lr}
   13838:	ldr	r3, [pc, #20]	; 13854 <argp_parse@@Base+0x17a0>
   1383c:	ldr	r0, [r3]
   13840:	ldr	r3, [pc, #16]	; 13858 <argp_parse@@Base+0x17a4>
   13844:	ldr	r2, [pc, #16]	; 1385c <argp_parse@@Base+0x17a8>
   13848:	mov	r1, #0
   1384c:	bl	11048 <error@plt>
   13850:	bl	111ec <abort@plt>
   13854:	andeq	sl, r2, r0, asr #4
   13858:	andeq	r8, r1, r8, lsl sp
   1385c:	andeq	r8, r1, r8, lsl #12
   13860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13864:	sub	sp, sp, #116	; 0x74
   13868:	mov	r3, #100	; 0x64
   1386c:	str	r3, [sp, #8]
   13870:	bl	11120 <__errno_location@plt>
   13874:	mov	r5, r0
   13878:	mov	fp, #0
   1387c:	add	sl, sp, #12
   13880:	mov	r4, fp
   13884:	mov	r6, #1
   13888:	ldr	r7, [pc, #196]	; 13954 <argp_parse@@Base+0x18a0>
   1388c:	mvn	r8, #0
   13890:	b	13904 <argp_parse@@Base+0x1850>
   13894:	cmp	fp, #0
   13898:	bne	13948 <argp_parse@@Base+0x1894>
   1389c:	mov	r1, r0
   138a0:	mov	r0, sl
   138a4:	bl	137c8 <argp_parse@@Base+0x1714>
   138a8:	mov	fp, r0
   138ac:	b	13948 <argp_parse@@Base+0x1894>
   138b0:	mov	r0, fp
   138b4:	bl	12ca8 <argp_parse@@Base+0xbf4>
   138b8:	ldr	r2, [r5]
   138bc:	cmp	r2, #22
   138c0:	lsrls	r3, r7, r2
   138c4:	eorls	r3, r3, #1
   138c8:	andls	r3, r3, #1
   138cc:	movhi	r3, r6
   138d0:	cmp	r2, #36	; 0x24
   138d4:	moveq	r3, #0
   138d8:	andne	r3, r3, #1
   138dc:	cmp	r3, #0
   138e0:	bne	13944 <argp_parse@@Base+0x1890>
   138e4:	str	r6, [sp]
   138e8:	mov	r3, r8
   138ec:	mov	r2, r6
   138f0:	add	r1, sp, #8
   138f4:	mov	r0, r4
   138f8:	bl	1343c <argp_parse@@Base+0x1388>
   138fc:	mov	fp, r0
   13900:	mov	sl, r0
   13904:	ldr	r9, [sp, #8]
   13908:	sub	r9, r9, #1
   1390c:	strb	r4, [sl, r9]
   13910:	str	r4, [r5]
   13914:	mov	r1, r9
   13918:	mov	r0, sl
   1391c:	bl	10ff4 <getdomainname@plt>
   13920:	cmp	r0, #0
   13924:	bne	138b0 <argp_parse@@Base+0x17fc>
   13928:	mov	r0, sl
   1392c:	bl	110fc <strlen@plt>
   13930:	add	r0, r0, #1
   13934:	cmp	r9, r0
   13938:	bgt	13894 <argp_parse@@Base+0x17e0>
   1393c:	str	r4, [r5]
   13940:	b	138b0 <argp_parse@@Base+0x17fc>
   13944:	mov	fp, #0
   13948:	mov	r0, fp
   1394c:	add	sp, sp, #116	; 0x74
   13950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13954:	subeq	r1, r0, r1
   13958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1395c:	sub	sp, sp, #116	; 0x74
   13960:	mov	r3, #100	; 0x64
   13964:	str	r3, [sp, #8]
   13968:	bl	11120 <__errno_location@plt>
   1396c:	mov	r5, r0
   13970:	mov	fp, #0
   13974:	add	sl, sp, #12
   13978:	mov	r4, fp
   1397c:	mov	r6, #1
   13980:	ldr	r7, [pc, #196]	; 13a4c <argp_parse@@Base+0x1998>
   13984:	mvn	r8, #0
   13988:	b	139fc <argp_parse@@Base+0x1948>
   1398c:	cmp	fp, #0
   13990:	bne	13a40 <argp_parse@@Base+0x198c>
   13994:	mov	r1, r0
   13998:	mov	r0, sl
   1399c:	bl	137c8 <argp_parse@@Base+0x1714>
   139a0:	mov	fp, r0
   139a4:	b	13a40 <argp_parse@@Base+0x198c>
   139a8:	mov	r0, fp
   139ac:	bl	12ca8 <argp_parse@@Base+0xbf4>
   139b0:	ldr	r2, [r5]
   139b4:	cmp	r2, #22
   139b8:	lsrls	r3, r7, r2
   139bc:	eorls	r3, r3, #1
   139c0:	andls	r3, r3, #1
   139c4:	movhi	r3, r6
   139c8:	cmp	r2, #36	; 0x24
   139cc:	moveq	r3, #0
   139d0:	andne	r3, r3, #1
   139d4:	cmp	r3, #0
   139d8:	bne	13a3c <argp_parse@@Base+0x1988>
   139dc:	str	r6, [sp]
   139e0:	mov	r3, r8
   139e4:	mov	r2, r6
   139e8:	add	r1, sp, #8
   139ec:	mov	r0, r4
   139f0:	bl	1343c <argp_parse@@Base+0x1388>
   139f4:	mov	fp, r0
   139f8:	mov	sl, r0
   139fc:	ldr	r9, [sp, #8]
   13a00:	sub	r9, r9, #1
   13a04:	strb	r4, [sl, r9]
   13a08:	str	r4, [r5]
   13a0c:	mov	r1, r9
   13a10:	mov	r0, sl
   13a14:	bl	11054 <gethostname@plt>
   13a18:	cmp	r0, #0
   13a1c:	bne	139a8 <argp_parse@@Base+0x18f4>
   13a20:	mov	r0, sl
   13a24:	bl	110fc <strlen@plt>
   13a28:	add	r0, r0, #1
   13a2c:	cmp	r9, r0
   13a30:	bgt	1398c <argp_parse@@Base+0x18d8>
   13a34:	str	r4, [r5]
   13a38:	b	139a8 <argp_parse@@Base+0x18f4>
   13a3c:	mov	fp, #0
   13a40:	mov	r0, fp
   13a44:	add	sp, sp, #116	; 0x74
   13a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a4c:	subeq	r1, r0, r1
   13a50:	push	{r4, lr}
   13a54:	mov	r2, r0
   13a58:	mov	r3, r1
   13a5c:	cmp	r1, #0
   13a60:	cmpne	r0, #0
   13a64:	moveq	r3, #1
   13a68:	moveq	r2, r3
   13a6c:	umull	r0, r1, r2, r3
   13a70:	cmp	r0, #0
   13a74:	cmpge	r1, #0
   13a78:	bne	13a8c <argp_parse@@Base+0x19d8>
   13a7c:	mov	r1, r3
   13a80:	mov	r0, r2
   13a84:	bl	10f40 <calloc@plt>
   13a88:	pop	{r4, pc}
   13a8c:	bl	11120 <__errno_location@plt>
   13a90:	mov	r3, #12
   13a94:	str	r3, [r0]
   13a98:	mov	r0, #0
   13a9c:	pop	{r4, pc}
   13aa0:	push	{r4, lr}
   13aa4:	cmp	r0, #0
   13aa8:	moveq	r0, #1
   13aac:	cmp	r0, #0
   13ab0:	blt	13abc <argp_parse@@Base+0x1a08>
   13ab4:	bl	11078 <malloc@plt>
   13ab8:	pop	{r4, pc}
   13abc:	bl	11120 <__errno_location@plt>
   13ac0:	mov	r3, #12
   13ac4:	str	r3, [r0]
   13ac8:	mov	r0, #0
   13acc:	pop	{r4, pc}
   13ad0:	push	{r4, lr}
   13ad4:	cmp	r0, #0
   13ad8:	beq	13af4 <argp_parse@@Base+0x1a40>
   13adc:	cmp	r1, #0
   13ae0:	beq	13b00 <argp_parse@@Base+0x1a4c>
   13ae4:	cmp	r1, #0
   13ae8:	blt	13b0c <argp_parse@@Base+0x1a58>
   13aec:	bl	1100c <realloc@plt>
   13af0:	pop	{r4, pc}
   13af4:	mov	r0, r1
   13af8:	bl	13aa0 <argp_parse@@Base+0x19ec>
   13afc:	pop	{r4, pc}
   13b00:	bl	12ca8 <argp_parse@@Base+0xbf4>
   13b04:	mov	r0, #0
   13b08:	pop	{r4, pc}
   13b0c:	bl	11120 <__errno_location@plt>
   13b10:	mov	r3, #12
   13b14:	str	r3, [r0]
   13b18:	mov	r0, #0
   13b1c:	pop	{r4, pc}
   13b20:	ldr	r3, [r0]
   13b24:	ldr	r2, [r0, #4]
   13b28:	cmp	r2, #0
   13b2c:	beq	13b68 <argp_parse@@Base+0x1ab4>
   13b30:	add	r3, r3, #24
   13b34:	b	13b44 <argp_parse@@Base+0x1a90>
   13b38:	add	r3, r3, #24
   13b3c:	subs	r2, r2, #1
   13b40:	beq	13b60 <argp_parse@@Base+0x1aac>
   13b44:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13b48:	cmp	r0, #0
   13b4c:	beq	13b38 <argp_parse@@Base+0x1a84>
   13b50:	ldr	r1, [r3, #-12]
   13b54:	tst	r1, #2
   13b58:	bne	13b38 <argp_parse@@Base+0x1a84>
   13b5c:	bx	lr
   13b60:	mov	r0, #0
   13b64:	bx	lr
   13b68:	mov	r0, #0
   13b6c:	bx	lr
   13b70:	ldr	r2, [r0, #8]
   13b74:	cmp	r2, #0
   13b78:	beq	13b84 <argp_parse@@Base+0x1ad0>
   13b7c:	mov	r0, #0
   13b80:	bx	lr
   13b84:	ldr	r2, [r1, #8]
   13b88:	cmp	r2, #0
   13b8c:	bne	13b7c <argp_parse@@Base+0x1ac8>
   13b90:	ldr	r2, [r0, #12]
   13b94:	ldr	r1, [r1, #12]
   13b98:	orr	r2, r2, r1
   13b9c:	tst	r2, #16
   13ba0:	ldreq	r2, [r3]
   13ba4:	addeq	r1, r2, #1
   13ba8:	streq	r1, [r3]
   13bac:	ldreq	r3, [r0, #4]
   13bb0:	strbeq	r3, [r2]
   13bb4:	b	13b7c <argp_parse@@Base+0x1ac8>
   13bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bbc:	sub	sp, sp, #12
   13bc0:	ldr	r4, [r0]
   13bc4:	ldr	r9, [r0, #8]
   13bc8:	ldr	r5, [r0, #4]
   13bcc:	cmp	r5, #0
   13bd0:	beq	13c24 <argp_parse@@Base+0x1b70>
   13bd4:	str	r3, [sp, #4]
   13bd8:	str	r2, [sp]
   13bdc:	mov	fp, r1
   13be0:	mov	sl, r4
   13be4:	mov	r8, #0
   13be8:	b	13c64 <argp_parse@@Base+0x1bb0>
   13bec:	and	r3, r6, #4
   13bf0:	cmp	r3, #0
   13bf4:	moveq	sl, r4
   13bf8:	tst	r6, #2
   13bfc:	beq	13c08 <argp_parse@@Base+0x1b54>
   13c00:	add	r9, r9, #1
   13c04:	b	13c40 <argp_parse@@Base+0x1b8c>
   13c08:	ldr	r3, [sp, #4]
   13c0c:	ldr	r2, [sp]
   13c10:	mov	r1, sl
   13c14:	mov	r0, r4
   13c18:	blx	fp
   13c1c:	mov	r8, r0
   13c20:	b	13c00 <argp_parse@@Base+0x1b4c>
   13c24:	mov	r8, #0
   13c28:	mov	r0, r8
   13c2c:	add	sp, sp, #12
   13c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c34:	ldrb	r3, [r9]
   13c38:	cmp	r3, r7
   13c3c:	beq	13bec <argp_parse@@Base+0x1b38>
   13c40:	add	r4, r4, #24
   13c44:	subs	r5, r5, #1
   13c48:	movne	r3, #1
   13c4c:	moveq	r3, #0
   13c50:	cmp	r8, #0
   13c54:	movne	r3, #0
   13c58:	andeq	r3, r3, #1
   13c5c:	cmp	r3, #0
   13c60:	beq	13c28 <argp_parse@@Base+0x1b74>
   13c64:	ldr	r6, [r4, #12]
   13c68:	tst	r6, #8
   13c6c:	bne	13c40 <argp_parse@@Base+0x1b8c>
   13c70:	ldr	r7, [r4, #4]
   13c74:	sub	r3, r7, #1
   13c78:	cmp	r3, #254	; 0xfe
   13c7c:	bhi	13c40 <argp_parse@@Base+0x1b8c>
   13c80:	bl	110d8 <__ctype_b_loc@plt>
   13c84:	ldr	r2, [r0]
   13c88:	lsl	r3, r7, #1
   13c8c:	ldrh	r3, [r2, r3]
   13c90:	tst	r3, #16384	; 0x4000
   13c94:	bne	13c34 <argp_parse@@Base+0x1b80>
   13c98:	b	13c40 <argp_parse@@Base+0x1b8c>
   13c9c:	push	{r4, r5, r6, lr}
   13ca0:	ldr	r4, [r0, #12]
   13ca4:	ands	r4, r4, #8
   13ca8:	movne	r4, #0
   13cac:	bne	13cdc <argp_parse@@Base+0x1c28>
   13cb0:	ldr	r5, [r0, #4]
   13cb4:	sub	r3, r5, #1
   13cb8:	cmp	r3, #254	; 0xfe
   13cbc:	bhi	13cdc <argp_parse@@Base+0x1c28>
   13cc0:	bl	110d8 <__ctype_b_loc@plt>
   13cc4:	ldr	r2, [r0]
   13cc8:	lsl	r3, r5, #1
   13ccc:	ldrh	r3, [r2, r3]
   13cd0:	and	r3, r3, #16384	; 0x4000
   13cd4:	cmp	r3, #0
   13cd8:	movne	r4, r5
   13cdc:	mov	r0, r4
   13ce0:	pop	{r4, r5, r6, pc}
   13ce4:	push	{r4, lr}
   13ce8:	mov	r4, r0
   13cec:	bl	110d8 <__ctype_b_loc@plt>
   13cf0:	b	13cfc <argp_parse@@Base+0x1c48>
   13cf4:	add	r3, r3, #1
   13cf8:	str	r3, [r4]
   13cfc:	ldr	r3, [r4]
   13d00:	ldrb	r2, [r3]
   13d04:	ldr	ip, [r0]
   13d08:	lsl	r1, r2, #1
   13d0c:	ldrh	r1, [ip, r1]
   13d10:	tst	r1, #8192	; 0x2000
   13d14:	bne	13cf4 <argp_parse@@Base+0x1c40>
   13d18:	subs	ip, r2, #45	; 0x2d
   13d1c:	movne	ip, #1
   13d20:	cmp	r2, #0
   13d24:	beq	13d58 <argp_parse@@Base+0x1ca4>
   13d28:	tst	r1, #8
   13d2c:	bne	13d58 <argp_parse@@Base+0x1ca4>
   13d30:	add	r3, r3, #1
   13d34:	str	r3, [r4]
   13d38:	ldrb	r2, [r3]
   13d3c:	cmp	r2, #0
   13d40:	beq	13d58 <argp_parse@@Base+0x1ca4>
   13d44:	ldr	r1, [r0]
   13d48:	lsl	r2, r2, #1
   13d4c:	ldrh	r2, [r1, r2]
   13d50:	tst	r2, #8
   13d54:	beq	13d30 <argp_parse@@Base+0x1c7c>
   13d58:	mov	r0, ip
   13d5c:	pop	{r4, pc}
   13d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d64:	add	fp, sp, #32
   13d68:	sub	sp, sp, #12
   13d6c:	ldr	r5, [r0, #4]
   13d70:	cmp	r5, #0
   13d74:	bne	13d80 <argp_parse@@Base+0x1ccc>
   13d78:	sub	sp, fp, #32
   13d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d80:	mov	r9, r1
   13d84:	mov	r6, r0
   13d88:	ldr	r0, [r0, #8]
   13d8c:	bl	110fc <strlen@plt>
   13d90:	add	r3, r0, #15
   13d94:	bic	r3, r3, #7
   13d98:	sub	sp, sp, r3
   13d9c:	mov	sl, sp
   13da0:	sub	r7, fp, #36	; 0x24
   13da4:	str	sp, [r7, #-4]!
   13da8:	ldr	r4, [r6]
   13dac:	ldr	r8, [pc, #336]	; 13f04 <argp_parse@@Base+0x1e50>
   13db0:	ldr	r2, [r4, #20]
   13db4:	mov	r3, r7
   13db8:	ldr	r2, [r2, #24]
   13dbc:	mov	r1, r8
   13dc0:	mov	r0, r4
   13dc4:	bl	13bb8 <argp_parse@@Base+0x1b04>
   13dc8:	add	r4, r4, #28
   13dcc:	subs	r5, r5, #1
   13dd0:	bne	13db0 <argp_parse@@Base+0x1cfc>
   13dd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13dd8:	cmp	sl, r3
   13ddc:	bcc	13e34 <argp_parse@@Base+0x1d80>
   13de0:	ldr	r4, [r6]
   13de4:	ldr	r5, [r6, #4]
   13de8:	cmp	r5, #0
   13dec:	beq	13d78 <argp_parse@@Base+0x1cc4>
   13df0:	ldr	r7, [pc, #272]	; 13f08 <argp_parse@@Base+0x1e54>
   13df4:	ldr	r2, [r4, #20]
   13df8:	mov	r3, r9
   13dfc:	ldr	r2, [r2, #24]
   13e00:	mov	r1, r7
   13e04:	mov	r0, r4
   13e08:	bl	13bb8 <argp_parse@@Base+0x1b04>
   13e0c:	add	r4, r4, #28
   13e10:	subs	r5, r5, #1
   13e14:	bne	13df4 <argp_parse@@Base+0x1d40>
   13e18:	ldr	r7, [r6]
   13e1c:	ldr	r8, [r6, #4]
   13e20:	cmp	r8, #0
   13e24:	beq	13d78 <argp_parse@@Base+0x1cc4>
   13e28:	add	r7, r7, #28
   13e2c:	ldr	sl, [pc, #216]	; 13f0c <argp_parse@@Base+0x1e58>
   13e30:	b	13eec <argp_parse@@Base+0x1e38>
   13e34:	add	r2, r3, #1
   13e38:	str	r2, [fp, #-40]	; 0xffffffd8
   13e3c:	mov	r2, #0
   13e40:	strb	r2, [r3]
   13e44:	mov	r2, sl
   13e48:	ldr	r1, [pc, #192]	; 13f10 <argp_parse@@Base+0x1e5c>
   13e4c:	mov	r0, r9
   13e50:	bl	1800c <argp_error@@Base+0x146c>
   13e54:	b	13de0 <argp_parse@@Base+0x1d2c>
   13e58:	tst	r1, #16
   13e5c:	bne	13e80 <argp_parse@@Base+0x1dcc>
   13e60:	ldr	r3, [r6, #8]
   13e64:	cmp	r3, #0
   13e68:	beq	13ed0 <argp_parse@@Base+0x1e1c>
   13e6c:	tst	r1, #1
   13e70:	ldrne	r1, [pc, #156]	; 13f14 <argp_parse@@Base+0x1e60>
   13e74:	moveq	r1, sl
   13e78:	mov	r0, r9
   13e7c:	bl	1800c <argp_error@@Base+0x146c>
   13e80:	add	r4, r4, #24
   13e84:	subs	r5, r5, #1
   13e88:	beq	13ee0 <argp_parse@@Base+0x1e2c>
   13e8c:	ldr	r2, [r4]
   13e90:	cmp	r2, #0
   13e94:	beq	13e80 <argp_parse@@Base+0x1dcc>
   13e98:	ldr	r1, [r4, #12]
   13e9c:	and	r3, r1, #4
   13ea0:	cmp	r3, #0
   13ea4:	moveq	r6, r4
   13ea8:	tst	r1, #2
   13eac:	bne	13e80 <argp_parse@@Base+0x1dcc>
   13eb0:	ldr	r3, [r4, #8]
   13eb4:	ldr	r0, [r6, #12]
   13eb8:	orr	r1, r1, r0
   13ebc:	cmp	r3, #0
   13ec0:	beq	13e58 <argp_parse@@Base+0x1da4>
   13ec4:	tst	r1, #16
   13ec8:	beq	13e6c <argp_parse@@Base+0x1db8>
   13ecc:	b	13e80 <argp_parse@@Base+0x1dcc>
   13ed0:	ldr	r1, [pc, #64]	; 13f18 <argp_parse@@Base+0x1e64>
   13ed4:	mov	r0, r9
   13ed8:	bl	1800c <argp_error@@Base+0x146c>
   13edc:	b	13e80 <argp_parse@@Base+0x1dcc>
   13ee0:	add	r7, r7, #28
   13ee4:	subs	r8, r8, #1
   13ee8:	beq	13d78 <argp_parse@@Base+0x1cc4>
   13eec:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13ef0:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13ef4:	cmp	r5, #0
   13ef8:	beq	13ee0 <argp_parse@@Base+0x1e2c>
   13efc:	mov	r6, r4
   13f00:	b	13e8c <argp_parse@@Base+0x1dd8>
   13f04:	andeq	r3, r1, r0, ror fp
   13f08:			; <UNDEFINED> instruction: 0x000141b0
   13f0c:	andeq	r8, r1, ip, ror #27
   13f10:	ldrdeq	r8, [r1], -r4
   13f14:	ldrdeq	r8, [r1], -ip
   13f18:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13f1c:	push	{r4, r5, r6, lr}
   13f20:	mov	r5, r0
   13f24:	ldr	r0, [r0, #12]
   13f28:	cmp	r0, #0
   13f2c:	beq	13f44 <argp_parse@@Base+0x1e90>
   13f30:	ldr	r4, [r0, #24]
   13f34:	bl	12ca8 <argp_parse@@Base+0xbf4>
   13f38:	mov	r0, r4
   13f3c:	cmp	r4, #0
   13f40:	bne	13f30 <argp_parse@@Base+0x1e7c>
   13f44:	ldr	r3, [r5, #4]
   13f48:	cmp	r3, #0
   13f4c:	bne	13f5c <argp_parse@@Base+0x1ea8>
   13f50:	mov	r0, r5
   13f54:	bl	12ca8 <argp_parse@@Base+0xbf4>
   13f58:	pop	{r4, r5, r6, pc}
   13f5c:	ldr	r0, [r5]
   13f60:	bl	12ca8 <argp_parse@@Base+0xbf4>
   13f64:	ldr	r0, [r5, #8]
   13f68:	bl	12ca8 <argp_parse@@Base+0xbf4>
   13f6c:	b	13f50 <argp_parse@@Base+0x1e9c>
   13f70:	push	{r4, r5, r6, r7, r8, lr}
   13f74:	mov	r6, r1
   13f78:	ldr	r7, [r0]
   13f7c:	ldr	r3, [r0, #4]
   13f80:	sub	r8, r3, #1
   13f84:	cmp	r3, #0
   13f88:	bne	13fe4 <argp_parse@@Base+0x1f30>
   13f8c:	mov	r7, #0
   13f90:	b	13fcc <argp_parse@@Base+0x1f18>
   13f94:	sub	r5, r5, #1
   13f98:	add	r4, r4, #24
   13f9c:	cmn	r5, #1
   13fa0:	beq	13fd4 <argp_parse@@Base+0x1f20>
   13fa4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13fa8:	cmp	r0, #0
   13fac:	beq	13f94 <argp_parse@@Base+0x1ee0>
   13fb0:	ldr	r3, [r4, #-12]
   13fb4:	tst	r3, #2
   13fb8:	bne	13f94 <argp_parse@@Base+0x1ee0>
   13fbc:	mov	r1, r6
   13fc0:	bl	10f70 <strcmp@plt>
   13fc4:	cmp	r0, #0
   13fc8:	bne	13f94 <argp_parse@@Base+0x1ee0>
   13fcc:	mov	r0, r7
   13fd0:	pop	{r4, r5, r6, r7, r8, pc}
   13fd4:	add	r7, r7, #28
   13fd8:	sub	r8, r8, #1
   13fdc:	cmn	r8, #1
   13fe0:	beq	14000 <argp_parse@@Base+0x1f4c>
   13fe4:	ldr	r4, [r7]
   13fe8:	ldr	r3, [r7, #4]
   13fec:	sub	r5, r3, #1
   13ff0:	cmp	r3, #0
   13ff4:	beq	13fd4 <argp_parse@@Base+0x1f20>
   13ff8:	add	r4, r4, #24
   13ffc:	b	13fa4 <argp_parse@@Base+0x1ef0>
   14000:	mov	r7, #0
   14004:	b	13fcc <argp_parse@@Base+0x1f18>
   14008:	push	{r4, r5, r6, lr}
   1400c:	ldr	r4, [r0, #16]
   14010:	ldr	r0, [r0, #8]
   14014:	cmp	r0, #0
   14018:	moveq	r5, #0
   1401c:	beq	14030 <argp_parse@@Base+0x1f7c>
   14020:	mov	r1, #10
   14024:	bl	11108 <strchr@plt>
   14028:	adds	r5, r0, #0
   1402c:	movne	r5, #1
   14030:	cmp	r4, #0
   14034:	beq	14058 <argp_parse@@Base+0x1fa4>
   14038:	ldr	r0, [r4]
   1403c:	cmp	r0, #0
   14040:	beq	14058 <argp_parse@@Base+0x1fa4>
   14044:	bl	14008 <argp_parse@@Base+0x1f54>
   14048:	add	r5, r5, r0
   1404c:	ldr	r0, [r4, #16]!
   14050:	cmp	r0, #0
   14054:	bne	14044 <argp_parse@@Base+0x1f90>
   14058:	mov	r0, r5
   1405c:	pop	{r4, r5, r6, pc}
   14060:	push	{r4, r5, r6, r7, r8, lr}
   14064:	mov	r4, r0
   14068:	mov	r5, r1
   1406c:	ldr	r3, [r0, #28]
   14070:	ldr	r2, [r0, #24]
   14074:	sub	r3, r3, r2
   14078:	ldr	r2, [r0, #16]
   1407c:	cmp	r3, r2
   14080:	bhi	1409c <argp_parse@@Base+0x1fe8>
   14084:	ldr	r3, [r4, #20]
   14088:	cmp	r3, #0
   1408c:	subge	r5, r5, r3
   14090:	mov	r6, #32
   14094:	mov	r7, #1
   14098:	b	140b8 <argp_parse@@Base+0x2004>
   1409c:	bl	17978 <argp_error@@Base+0xdd8>
   140a0:	b	14084 <argp_parse@@Base+0x1fd0>
   140a4:	ldr	r3, [r4, #28]
   140a8:	add	r2, r3, #1
   140ac:	str	r2, [r4, #28]
   140b0:	strb	r6, [r3]
   140b4:	sub	r5, r5, #1
   140b8:	cmp	r5, #0
   140bc:	ble	140e8 <argp_parse@@Base+0x2034>
   140c0:	ldr	r2, [r4, #28]
   140c4:	ldr	r3, [r4, #32]
   140c8:	cmp	r2, r3
   140cc:	bcc	140a4 <argp_parse@@Base+0x1ff0>
   140d0:	mov	r1, r7
   140d4:	mov	r0, r4
   140d8:	bl	17f1c <argp_error@@Base+0x137c>
   140dc:	cmp	r0, #0
   140e0:	beq	140b4 <argp_parse@@Base+0x2000>
   140e4:	b	140a4 <argp_parse@@Base+0x1ff0>
   140e8:	pop	{r4, r5, r6, r7, r8, pc}
   140ec:	push	{r4, r5, r6, lr}
   140f0:	mov	r4, r0
   140f4:	mov	r5, r1
   140f8:	ldr	r3, [r0, #28]
   140fc:	ldr	r2, [r0, #24]
   14100:	sub	r3, r3, r2
   14104:	ldr	r2, [r0, #16]
   14108:	cmp	r3, r2
   1410c:	bhi	14150 <argp_parse@@Base+0x209c>
   14110:	ldr	r3, [r4, #20]
   14114:	cmp	r3, #0
   14118:	addge	r5, r5, r3
   1411c:	ldr	r3, [r4, #8]
   14120:	cmp	r5, r3
   14124:	bcc	14170 <argp_parse@@Base+0x20bc>
   14128:	ldr	r2, [r4, #28]
   1412c:	ldr	r3, [r4, #32]
   14130:	cmp	r2, r3
   14134:	bcs	14158 <argp_parse@@Base+0x20a4>
   14138:	ldr	r3, [r4, #28]
   1413c:	add	r2, r3, #1
   14140:	str	r2, [r4, #28]
   14144:	mov	r2, #10
   14148:	strb	r2, [r3]
   1414c:	pop	{r4, r5, r6, pc}
   14150:	bl	17978 <argp_error@@Base+0xdd8>
   14154:	b	14110 <argp_parse@@Base+0x205c>
   14158:	mov	r1, #1
   1415c:	mov	r0, r4
   14160:	bl	17f1c <argp_error@@Base+0x137c>
   14164:	cmp	r0, #0
   14168:	popeq	{r4, r5, r6, pc}
   1416c:	b	14138 <argp_parse@@Base+0x2084>
   14170:	ldr	r2, [r4, #28]
   14174:	ldr	r3, [r4, #32]
   14178:	cmp	r2, r3
   1417c:	bcs	14198 <argp_parse@@Base+0x20e4>
   14180:	ldr	r3, [r4, #28]
   14184:	add	r2, r3, #1
   14188:	str	r2, [r4, #28]
   1418c:	mov	r2, #32
   14190:	strb	r2, [r3]
   14194:	pop	{r4, r5, r6, pc}
   14198:	mov	r1, #1
   1419c:	mov	r0, r4
   141a0:	bl	17f1c <argp_error@@Base+0x137c>
   141a4:	cmp	r0, #0
   141a8:	bne	14180 <argp_parse@@Base+0x20cc>
   141ac:	pop	{r4, r5, r6, pc}
   141b0:	push	{r4, r5, r6, lr}
   141b4:	ldr	r5, [r0, #8]
   141b8:	ldr	r2, [r0, #12]
   141bc:	ldr	ip, [r1, #12]
   141c0:	orr	r2, r2, ip
   141c4:	cmp	r5, #0
   141c8:	beq	14214 <argp_parse@@Base+0x2160>
   141cc:	tst	r2, #16
   141d0:	bne	1420c <argp_parse@@Base+0x2158>
   141d4:	mov	r6, r3
   141d8:	mov	r4, r0
   141dc:	tst	r2, #1
   141e0:	bne	14224 <argp_parse@@Base+0x2170>
   141e4:	mov	r0, r5
   141e8:	bl	110fc <strlen@plt>
   141ec:	add	r1, r0, #6
   141f0:	mov	r0, r6
   141f4:	bl	140ec <argp_parse@@Base+0x2038>
   141f8:	mov	r3, r5
   141fc:	ldr	r2, [r4, #4]
   14200:	ldr	r1, [pc, #52]	; 1423c <argp_parse@@Base+0x2188>
   14204:	mov	r0, r6
   14208:	bl	1800c <argp_error@@Base+0x146c>
   1420c:	mov	r0, #0
   14210:	pop	{r4, r5, r6, pc}
   14214:	ldr	r5, [r1, #8]
   14218:	cmp	r5, #0
   1421c:	beq	1420c <argp_parse@@Base+0x2158>
   14220:	b	141cc <argp_parse@@Base+0x2118>
   14224:	mov	r3, r5
   14228:	ldr	r2, [r0, #4]
   1422c:	ldr	r1, [pc, #12]	; 14240 <argp_parse@@Base+0x218c>
   14230:	mov	r0, r6
   14234:	bl	1800c <argp_error@@Base+0x146c>
   14238:	b	1420c <argp_parse@@Base+0x2158>
   1423c:	andeq	r8, r1, ip, lsl #28
   14240:	andeq	r8, r1, r0, lsl #28
   14244:	push	{r4, r5, r6, lr}
   14248:	subs	r5, r2, #0
   1424c:	popeq	{r4, r5, r6, pc}
   14250:	ldr	ip, [r5, #20]
   14254:	cmp	ip, #0
   14258:	popeq	{r4, r5, r6, pc}
   1425c:	mov	r6, r1
   14260:	mov	r4, r0
   14264:	mov	r1, r3
   14268:	mov	r0, r5
   1426c:	bl	12b28 <argp_parse@@Base+0xa74>
   14270:	ldr	r3, [r5, #20]
   14274:	mov	r2, r0
   14278:	mov	r1, r4
   1427c:	mov	r0, r6
   14280:	blx	r3
   14284:	pop	{r4, r5, r6, pc}
   14288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1428c:	sub	sp, sp, #28
   14290:	str	r1, [sp, #16]
   14294:	mov	r8, r2
   14298:	mov	r4, r3
   1429c:	ldr	r5, [sp, #64]	; 0x40
   142a0:	ldr	r3, [r2]
   142a4:	mov	r6, r3
   142a8:	str	r3, [sp, #20]
   142ac:	ldr	sl, [r0, #16]
   142b0:	ldr	r2, [r0, #8]
   142b4:	mov	ip, r2
   142b8:	str	r2, [sp, #12]
   142bc:	mov	r3, r1
   142c0:	mov	r2, r0
   142c4:	ldr	r1, [pc, #424]	; 14474 <argp_parse@@Base+0x23c0>
   142c8:	mov	r0, ip
   142cc:	bl	14244 <argp_parse@@Base+0x2190>
   142d0:	subs	r3, r0, #0
   142d4:	str	r3, [sp, #8]
   142d8:	beq	14460 <argp_parse@@Base+0x23ac>
   142dc:	mov	r1, #10
   142e0:	mov	r0, r3
   142e4:	bl	10fac <strchrnul@plt>
   142e8:	mov	r7, r0
   142ec:	ldrb	r3, [r0]
   142f0:	cmp	r3, #0
   142f4:	beq	14430 <argp_parse@@Base+0x237c>
   142f8:	ldrb	fp, [r6]
   142fc:	cmp	fp, #0
   14300:	ble	14428 <argp_parse@@Base+0x2374>
   14304:	mov	r6, #0
   14308:	add	r9, r0, #1
   1430c:	mov	r1, #10
   14310:	mov	r0, r9
   14314:	bl	10fac <strchrnul@plt>
   14318:	add	r6, r6, #1
   1431c:	cmp	r6, fp
   14320:	bne	14308 <argp_parse@@Base+0x2254>
   14324:	mov	r7, r0
   14328:	ldr	r3, [r8]
   1432c:	add	r3, r3, #1
   14330:	str	r3, [r8]
   14334:	mov	fp, #1
   14338:	add	r1, r7, #1
   1433c:	sub	r1, r1, r9
   14340:	mov	r0, r5
   14344:	bl	140ec <argp_parse@@Base+0x2038>
   14348:	sub	r6, r7, r9
   1434c:	ldr	r3, [r5, #28]
   14350:	add	r3, r3, r6
   14354:	ldr	r2, [r5, #32]
   14358:	cmp	r2, r3
   1435c:	bcs	14374 <argp_parse@@Base+0x22c0>
   14360:	mov	r1, r6
   14364:	mov	r0, r5
   14368:	bl	17f1c <argp_error@@Base+0x137c>
   1436c:	cmp	r0, #0
   14370:	beq	14390 <argp_parse@@Base+0x22dc>
   14374:	mov	r2, r6
   14378:	mov	r1, r9
   1437c:	ldr	r0, [r5, #28]
   14380:	bl	10fd0 <memcpy@plt>
   14384:	ldr	r3, [r5, #28]
   14388:	add	r6, r3, r6
   1438c:	str	r6, [r5, #28]
   14390:	ldr	r3, [sp, #12]
   14394:	ldr	r2, [sp, #8]
   14398:	cmp	r3, r2
   1439c:	bne	1443c <argp_parse@@Base+0x2388>
   143a0:	cmp	sl, #0
   143a4:	beq	143e4 <argp_parse@@Base+0x2330>
   143a8:	ldr	r0, [sl]
   143ac:	cmp	r0, #0
   143b0:	beq	143e4 <argp_parse@@Base+0x2330>
   143b4:	mov	r3, r4
   143b8:	ldr	r4, [sp, #16]
   143bc:	str	r5, [sp]
   143c0:	mov	r2, r8
   143c4:	mov	r1, r4
   143c8:	bl	14288 <argp_parse@@Base+0x21d4>
   143cc:	clz	r3, r0
   143d0:	lsr	r3, r3, #5
   143d4:	ldr	r0, [sl, #16]!
   143d8:	cmp	r0, #0
   143dc:	bne	143bc <argp_parse@@Base+0x2308>
   143e0:	mov	r4, r3
   143e4:	cmp	r4, #0
   143e8:	moveq	fp, #0
   143ec:	andne	fp, fp, #1
   143f0:	cmp	fp, #0
   143f4:	beq	14418 <argp_parse@@Base+0x2364>
   143f8:	ldrb	r3, [r7]
   143fc:	cmp	r3, #0
   14400:	bne	14448 <argp_parse@@Base+0x2394>
   14404:	ldr	r2, [sp, #20]
   14408:	ldrb	r3, [r2]
   1440c:	cmp	r3, #0
   14410:	movne	r3, #0
   14414:	strbne	r3, [r2]
   14418:	clz	r0, r4
   1441c:	lsr	r0, r0, #5
   14420:	add	sp, sp, #28
   14424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14428:	ldr	r9, [sp, #8]
   1442c:	b	14328 <argp_parse@@Base+0x2274>
   14430:	ldr	r9, [sp, #8]
   14434:	mov	fp, #0
   14438:	b	14338 <argp_parse@@Base+0x2284>
   1443c:	mov	r0, r2
   14440:	bl	12ca8 <argp_parse@@Base+0xbf4>
   14444:	b	143a0 <argp_parse@@Base+0x22ec>
   14448:	ldr	r2, [sp, #20]
   1444c:	ldrb	r3, [r2]
   14450:	add	r3, r3, #1
   14454:	strb	r3, [r2]
   14458:	mov	r4, #0
   1445c:	b	14418 <argp_parse@@Base+0x2364>
   14460:	cmp	sl, #0
   14464:	beq	14418 <argp_parse@@Base+0x2364>
   14468:	ldr	r7, [sp, #8]
   1446c:	mov	fp, #0
   14470:	b	143a8 <argp_parse@@Base+0x22f4>
   14474:	andeq	r0, r0, #6
   14478:	push	{r4, r5, r6, r7, r8, lr}
   1447c:	mov	r7, r0
   14480:	mov	r4, r2
   14484:	ldr	r3, [r2, #16]
   14488:	mov	r2, r1
   1448c:	ldr	r1, [pc, #448]	; 14654 <argp_parse@@Base+0x25a0>
   14490:	bl	14244 <argp_parse@@Base+0x2190>
   14494:	subs	r5, r0, #0
   14498:	beq	145ec <argp_parse@@Base+0x2538>
   1449c:	ldrb	r3, [r5]
   144a0:	cmp	r3, #0
   144a4:	beq	145e0 <argp_parse@@Base+0x252c>
   144a8:	ldr	r3, [r4, #8]
   144ac:	ldr	r3, [r3]
   144b0:	cmp	r3, #0
   144b4:	beq	144e0 <argp_parse@@Base+0x242c>
   144b8:	ldr	r6, [r4, #4]
   144bc:	ldr	r2, [r6, #28]
   144c0:	ldr	r3, [r6, #32]
   144c4:	cmp	r2, r3
   144c8:	bcs	14600 <argp_parse@@Base+0x254c>
   144cc:	ldr	r3, [r6, #28]
   144d0:	add	r2, r3, #1
   144d4:	str	r2, [r6, #28]
   144d8:	mov	r2, #10
   144dc:	strb	r2, [r3]
   144e0:	ldr	r8, [pc, #368]	; 14658 <argp_parse@@Base+0x25a4>
   144e4:	ldr	r1, [r8, #24]
   144e8:	ldr	r0, [r4, #4]
   144ec:	bl	14060 <argp_parse@@Base+0x1fac>
   144f0:	ldr	r6, [r4, #4]
   144f4:	ldr	r8, [r8, #24]
   144f8:	ldr	r3, [r6, #28]
   144fc:	ldr	r2, [r6, #24]
   14500:	sub	r3, r3, r2
   14504:	ldr	r2, [r6, #16]
   14508:	cmp	r3, r2
   1450c:	bhi	14618 <argp_parse@@Base+0x2564>
   14510:	str	r8, [r6, #4]
   14514:	ldr	r6, [r4, #4]
   14518:	ldr	r3, [pc, #312]	; 14658 <argp_parse@@Base+0x25a4>
   1451c:	ldr	r8, [r3, #24]
   14520:	ldr	r3, [r6, #28]
   14524:	ldr	r2, [r6, #24]
   14528:	sub	r3, r3, r2
   1452c:	ldr	r2, [r6, #16]
   14530:	cmp	r3, r2
   14534:	bhi	14624 <argp_parse@@Base+0x2570>
   14538:	str	r8, [r6, #12]
   1453c:	mov	r0, r5
   14540:	bl	110fc <strlen@plt>
   14544:	subs	r8, r0, #0
   14548:	beq	14594 <argp_parse@@Base+0x24e0>
   1454c:	ldr	r6, [r4, #4]
   14550:	ldr	r3, [r6, #28]
   14554:	add	r3, r3, r8
   14558:	ldr	r2, [r6, #32]
   1455c:	cmp	r2, r3
   14560:	bcs	14578 <argp_parse@@Base+0x24c4>
   14564:	mov	r1, r8
   14568:	mov	r0, r6
   1456c:	bl	17f1c <argp_error@@Base+0x137c>
   14570:	cmp	r0, #0
   14574:	beq	14594 <argp_parse@@Base+0x24e0>
   14578:	mov	r2, r8
   1457c:	mov	r1, r5
   14580:	ldr	r0, [r6, #28]
   14584:	bl	10fd0 <memcpy@plt>
   14588:	ldr	r3, [r6, #28]
   1458c:	add	r8, r3, r8
   14590:	str	r8, [r6, #28]
   14594:	ldr	r6, [r4, #4]
   14598:	ldr	r3, [r6, #28]
   1459c:	ldr	r2, [r6, #24]
   145a0:	sub	r3, r3, r2
   145a4:	ldr	r2, [r6, #16]
   145a8:	cmp	r3, r2
   145ac:	bhi	14630 <argp_parse@@Base+0x257c>
   145b0:	mov	r3, #0
   145b4:	str	r3, [r6, #4]
   145b8:	ldr	r6, [r4, #4]
   145bc:	ldr	r2, [r6, #28]
   145c0:	ldr	r3, [r6, #32]
   145c4:	cmp	r2, r3
   145c8:	bcs	1463c <argp_parse@@Base+0x2588>
   145cc:	ldr	r3, [r6, #28]
   145d0:	add	r2, r3, #1
   145d4:	str	r2, [r6, #28]
   145d8:	mov	r2, #10
   145dc:	strb	r2, [r3]
   145e0:	ldr	r3, [r4, #8]
   145e4:	mov	r2, #1
   145e8:	str	r2, [r3, #4]
   145ec:	cmp	r7, r5
   145f0:	popeq	{r4, r5, r6, r7, r8, pc}
   145f4:	mov	r0, r5
   145f8:	bl	12ca8 <argp_parse@@Base+0xbf4>
   145fc:	pop	{r4, r5, r6, r7, r8, pc}
   14600:	mov	r1, #1
   14604:	mov	r0, r6
   14608:	bl	17f1c <argp_error@@Base+0x137c>
   1460c:	cmp	r0, #0
   14610:	beq	144e0 <argp_parse@@Base+0x242c>
   14614:	b	144cc <argp_parse@@Base+0x2418>
   14618:	mov	r0, r6
   1461c:	bl	17978 <argp_error@@Base+0xdd8>
   14620:	b	14510 <argp_parse@@Base+0x245c>
   14624:	mov	r0, r6
   14628:	bl	17978 <argp_error@@Base+0xdd8>
   1462c:	b	14538 <argp_parse@@Base+0x2484>
   14630:	mov	r0, r6
   14634:	bl	17978 <argp_error@@Base+0xdd8>
   14638:	b	145b0 <argp_parse@@Base+0x24fc>
   1463c:	mov	r1, #1
   14640:	mov	r0, r6
   14644:	bl	17f1c <argp_error@@Base+0x137c>
   14648:	cmp	r0, #0
   1464c:	beq	145e0 <argp_parse@@Base+0x252c>
   14650:	b	145cc <argp_parse@@Base+0x2518>
   14654:	andeq	r0, r0, #3
   14658:	andeq	sl, r2, r8, lsl r2
   1465c:	push	{r4, r5, r6, r7, r8, lr}
   14660:	mov	r6, r0
   14664:	mov	r4, r1
   14668:	ldr	r3, [r1, #12]
   1466c:	cmp	r3, #0
   14670:	beq	14790 <argp_parse@@Base+0x26dc>
   14674:	ldr	r3, [r1, #8]
   14678:	ldr	r7, [r3]
   1467c:	ldr	r2, [r1]
   14680:	ldr	r5, [r2, #16]
   14684:	ldr	r3, [r3, #4]
   14688:	cmp	r3, #0
   1468c:	cmpne	r7, #0
   14690:	beq	146cc <argp_parse@@Base+0x2618>
   14694:	ldr	r2, [r2, #12]
   14698:	ldr	r3, [r7, #12]
   1469c:	cmp	r2, r3
   146a0:	beq	146cc <argp_parse@@Base+0x2618>
   146a4:	ldr	r8, [r1, #4]
   146a8:	ldr	r2, [r8, #28]
   146ac:	ldr	r3, [r8, #32]
   146b0:	cmp	r2, r3
   146b4:	bcs	1476c <argp_parse@@Base+0x26b8>
   146b8:	ldr	r3, [r8, #28]
   146bc:	add	r2, r3, #1
   146c0:	str	r2, [r8, #28]
   146c4:	mov	r2, #10
   146c8:	strb	r2, [r3]
   146cc:	cmp	r5, #0
   146d0:	beq	14754 <argp_parse@@Base+0x26a0>
   146d4:	ldr	r0, [r5]
   146d8:	cmp	r0, #0
   146dc:	beq	14754 <argp_parse@@Base+0x26a0>
   146e0:	ldrb	r3, [r0]
   146e4:	cmp	r3, #0
   146e8:	beq	14754 <argp_parse@@Base+0x26a0>
   146ec:	cmp	r7, #0
   146f0:	beq	14720 <argp_parse@@Base+0x266c>
   146f4:	ldr	r3, [r7, #16]
   146f8:	cmp	r5, r3
   146fc:	beq	14754 <argp_parse@@Base+0x26a0>
   14700:	cmp	r3, #0
   14704:	beq	14720 <argp_parse@@Base+0x266c>
   14708:	ldr	r3, [r3, #12]
   1470c:	cmp	r3, #0
   14710:	cmpne	r5, r3
   14714:	bne	14708 <argp_parse@@Base+0x2654>
   14718:	cmp	r5, r3
   1471c:	beq	14754 <argp_parse@@Base+0x26a0>
   14720:	ldr	r3, [r4, #4]
   14724:	ldr	r7, [r3, #12]
   14728:	mov	r2, r4
   1472c:	ldr	r1, [r5, #16]
   14730:	bl	14478 <argp_parse@@Base+0x23c4>
   14734:	ldr	r5, [r4, #4]
   14738:	ldr	r3, [r5, #28]
   1473c:	ldr	r2, [r5, #24]
   14740:	sub	r3, r3, r2
   14744:	ldr	r2, [r5, #16]
   14748:	cmp	r3, r2
   1474c:	bhi	14784 <argp_parse@@Base+0x26d0>
   14750:	str	r7, [r5, #12]
   14754:	mov	r3, #0
   14758:	str	r3, [r4, #12]
   1475c:	mov	r1, r6
   14760:	ldr	r0, [r4, #4]
   14764:	bl	14060 <argp_parse@@Base+0x1fac>
   14768:	pop	{r4, r5, r6, r7, r8, pc}
   1476c:	mov	r1, #1
   14770:	mov	r0, r8
   14774:	bl	17f1c <argp_error@@Base+0x137c>
   14778:	cmp	r0, #0
   1477c:	beq	146cc <argp_parse@@Base+0x2618>
   14780:	b	146b8 <argp_parse@@Base+0x2604>
   14784:	mov	r0, r5
   14788:	bl	17978 <argp_error@@Base+0xdd8>
   1478c:	b	14750 <argp_parse@@Base+0x269c>
   14790:	ldr	r5, [r1, #4]
   14794:	ldr	r3, [r5, #28]
   14798:	add	r3, r3, #2
   1479c:	ldr	r2, [r5, #32]
   147a0:	cmp	r2, r3
   147a4:	bcs	147bc <argp_parse@@Base+0x2708>
   147a8:	mov	r1, #2
   147ac:	mov	r0, r5
   147b0:	bl	17f1c <argp_error@@Base+0x137c>
   147b4:	cmp	r0, #0
   147b8:	beq	1475c <argp_parse@@Base+0x26a8>
   147bc:	ldr	r3, [r5, #28]
   147c0:	ldr	r2, [pc, #20]	; 147dc <argp_parse@@Base+0x2728>
   147c4:	ldrh	r2, [r2]
   147c8:	strh	r2, [r3]
   147cc:	ldr	r3, [r5, #28]
   147d0:	add	r3, r3, #2
   147d4:	str	r3, [r5, #28]
   147d8:	b	1475c <argp_parse@@Base+0x26a8>
   147dc:	andeq	r8, r1, r8, lsl lr
   147e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147e4:	sub	sp, sp, #28
   147e8:	mov	fp, r0
   147ec:	str	r1, [sp, #8]
   147f0:	mov	r6, r2
   147f4:	mov	r8, r3
   147f8:	ldr	r7, [sp, #64]	; 0x40
   147fc:	ldr	r5, [sp, #68]	; 0x44
   14800:	ldr	r9, [r0, #12]
   14804:	ldr	r3, [r0, #16]
   14808:	str	r3, [sp, #16]
   1480c:	cmp	r9, #0
   14810:	beq	14c6c <argp_parse@@Base+0x2bb8>
   14814:	mov	r1, #11
   14818:	mov	r0, r9
   1481c:	bl	11108 <strchr@plt>
   14820:	cmp	r6, #0
   14824:	beq	14b1c <argp_parse@@Base+0x2a68>
   14828:	cmp	r0, #0
   1482c:	addne	r9, r0, #1
   14830:	beq	14c54 <argp_parse@@Base+0x2ba0>
   14834:	ldr	r3, [fp, #20]
   14838:	cmp	r3, #0
   1483c:	movne	sl, #0
   14840:	beq	14c5c <argp_parse@@Base+0x2ba8>
   14844:	ldr	r1, [sp, #8]
   14848:	mov	r0, fp
   1484c:	bl	12b28 <argp_parse@@Base+0xa74>
   14850:	str	r0, [sp, #12]
   14854:	ldr	r3, [fp, #20]
   14858:	ldr	r2, [pc, #1140]	; 14cd4 <argp_parse@@Base+0x2c20>
   1485c:	ldr	r0, [pc, #1140]	; 14cd8 <argp_parse@@Base+0x2c24>
   14860:	cmp	r6, #0
   14864:	moveq	r0, r2
   14868:	ldr	r2, [sp, #12]
   1486c:	mov	r1, r9
   14870:	blx	r3
   14874:	mov	r4, r0
   14878:	cmp	r4, #0
   1487c:	beq	14c0c <argp_parse@@Base+0x2b58>
   14880:	cmp	r8, #0
   14884:	beq	148ac <argp_parse@@Base+0x27f8>
   14888:	ldr	r2, [r5, #28]
   1488c:	ldr	r3, [r5, #32]
   14890:	cmp	r2, r3
   14894:	bcs	14b60 <argp_parse@@Base+0x2aac>
   14898:	ldr	r3, [r5, #28]
   1489c:	add	r2, r3, #1
   148a0:	str	r2, [r5, #28]
   148a4:	mov	r2, #10
   148a8:	strb	r2, [r3]
   148ac:	cmp	r4, r9
   148b0:	movne	r3, #0
   148b4:	moveq	r3, #1
   148b8:	cmp	sl, #0
   148bc:	moveq	r3, #0
   148c0:	cmp	r3, #0
   148c4:	beq	14b78 <argp_parse@@Base+0x2ac4>
   148c8:	ldr	r3, [r5, #28]
   148cc:	add	r3, r3, sl
   148d0:	ldr	r2, [r5, #32]
   148d4:	cmp	r2, r3
   148d8:	bcs	148f0 <argp_parse@@Base+0x283c>
   148dc:	mov	r1, sl
   148e0:	mov	r0, r5
   148e4:	bl	17f1c <argp_error@@Base+0x137c>
   148e8:	cmp	r0, #0
   148ec:	beq	1490c <argp_parse@@Base+0x2858>
   148f0:	mov	r2, sl
   148f4:	mov	r1, r9
   148f8:	ldr	r0, [r5, #28]
   148fc:	bl	10fd0 <memcpy@plt>
   14900:	ldr	r3, [r5, #28]
   14904:	add	r3, r3, sl
   14908:	str	r3, [r5, #28]
   1490c:	ldr	r3, [r5, #28]
   14910:	ldr	r2, [r5, #24]
   14914:	sub	r3, r3, r2
   14918:	ldr	r2, [r5, #16]
   1491c:	cmp	r3, r2
   14920:	bhi	14bd8 <argp_parse@@Base+0x2b24>
   14924:	ldr	r3, [r5, #20]
   14928:	bic	r3, r3, r3, asr #31
   1492c:	ldr	r2, [r5, #4]
   14930:	cmp	r2, r3
   14934:	bcs	1495c <argp_parse@@Base+0x28a8>
   14938:	ldr	r2, [r5, #28]
   1493c:	ldr	r3, [r5, #32]
   14940:	cmp	r2, r3
   14944:	bcs	14be4 <argp_parse@@Base+0x2b30>
   14948:	ldr	r3, [r5, #28]
   1494c:	add	r2, r3, #1
   14950:	str	r2, [r5, #28]
   14954:	mov	r2, #10
   14958:	strb	r2, [r3]
   1495c:	cmp	r4, r9
   14960:	moveq	r4, #1
   14964:	bne	14bfc <argp_parse@@Base+0x2b48>
   14968:	cmp	r9, #0
   1496c:	cmpne	sl, #0
   14970:	beq	14988 <argp_parse@@Base+0x28d4>
   14974:	ldr	r3, [fp, #20]
   14978:	cmp	r3, #0
   1497c:	beq	14a94 <argp_parse@@Base+0x29e0>
   14980:	mov	r0, r9
   14984:	bl	12ca8 <argp_parse@@Base+0xbf4>
   14988:	cmp	r6, #0
   1498c:	beq	14a94 <argp_parse@@Base+0x29e0>
   14990:	ldr	r3, [fp, #20]
   14994:	cmp	r3, #0
   14998:	beq	14a94 <argp_parse@@Base+0x29e0>
   1499c:	ldr	r2, [sp, #12]
   149a0:	mov	r1, #0
   149a4:	ldr	r0, [pc, #816]	; 14cdc <argp_parse@@Base+0x2c28>
   149a8:	blx	r3
   149ac:	subs	r9, r0, #0
   149b0:	beq	14a94 <argp_parse@@Base+0x29e0>
   149b4:	orrs	r3, r8, r4
   149b8:	beq	149e0 <argp_parse@@Base+0x292c>
   149bc:	ldr	r2, [r5, #28]
   149c0:	ldr	r3, [r5, #32]
   149c4:	cmp	r2, r3
   149c8:	bcs	14c14 <argp_parse@@Base+0x2b60>
   149cc:	ldr	r3, [r5, #28]
   149d0:	add	r2, r3, #1
   149d4:	str	r2, [r5, #28]
   149d8:	mov	r2, #10
   149dc:	strb	r2, [r3]
   149e0:	mov	r0, r9
   149e4:	bl	110fc <strlen@plt>
   149e8:	subs	r4, r0, #0
   149ec:	beq	14a34 <argp_parse@@Base+0x2980>
   149f0:	ldr	r3, [r5, #28]
   149f4:	add	r3, r3, r4
   149f8:	ldr	r2, [r5, #32]
   149fc:	cmp	r2, r3
   14a00:	bcs	14a18 <argp_parse@@Base+0x2964>
   14a04:	mov	r1, r4
   14a08:	mov	r0, r5
   14a0c:	bl	17f1c <argp_error@@Base+0x137c>
   14a10:	cmp	r0, #0
   14a14:	beq	14a34 <argp_parse@@Base+0x2980>
   14a18:	mov	r2, r4
   14a1c:	mov	r1, r9
   14a20:	ldr	r0, [r5, #28]
   14a24:	bl	10fd0 <memcpy@plt>
   14a28:	ldr	r3, [r5, #28]
   14a2c:	add	r4, r3, r4
   14a30:	str	r4, [r5, #28]
   14a34:	mov	r0, r9
   14a38:	bl	12ca8 <argp_parse@@Base+0xbf4>
   14a3c:	ldr	r3, [r5, #28]
   14a40:	ldr	r2, [r5, #24]
   14a44:	sub	r3, r3, r2
   14a48:	ldr	r2, [r5, #16]
   14a4c:	cmp	r3, r2
   14a50:	bhi	14c2c <argp_parse@@Base+0x2b78>
   14a54:	ldr	r3, [r5, #20]
   14a58:	bic	r3, r3, r3, asr #31
   14a5c:	ldr	r2, [r5, #4]
   14a60:	cmp	r2, r3
   14a64:	movcs	r4, #1
   14a68:	bcs	14a94 <argp_parse@@Base+0x29e0>
   14a6c:	ldr	r2, [r5, #28]
   14a70:	ldr	r3, [r5, #32]
   14a74:	cmp	r2, r3
   14a78:	bcs	14c38 <argp_parse@@Base+0x2b84>
   14a7c:	ldr	r3, [r5, #28]
   14a80:	add	r2, r3, #1
   14a84:	str	r2, [r5, #28]
   14a88:	mov	r2, #10
   14a8c:	strb	r2, [r3]
   14a90:	mov	r4, #1
   14a94:	ldr	r3, [sp, #16]
   14a98:	cmp	r3, #0
   14a9c:	beq	14b10 <argp_parse@@Base+0x2a5c>
   14aa0:	ldr	r0, [r3]
   14aa4:	cmp	r0, #0
   14aa8:	beq	14b10 <argp_parse@@Base+0x2a5c>
   14aac:	clz	r9, r7
   14ab0:	lsr	r9, r9, #5
   14ab4:	cmp	r7, #0
   14ab8:	cmpne	r4, #0
   14abc:	bne	14b10 <argp_parse@@Base+0x2a5c>
   14ac0:	mov	sl, r3
   14ac4:	ldr	fp, [sp, #8]
   14ac8:	orrs	r3, r8, r4
   14acc:	str	r5, [sp, #4]
   14ad0:	str	r7, [sp]
   14ad4:	movne	r3, #1
   14ad8:	moveq	r3, #0
   14adc:	mov	r2, r6
   14ae0:	mov	r1, fp
   14ae4:	bl	147e0 <argp_parse@@Base+0x272c>
   14ae8:	orr	r4, r4, r0
   14aec:	ldr	r0, [sl, #16]
   14af0:	cmp	r0, #0
   14af4:	beq	14b10 <argp_parse@@Base+0x2a5c>
   14af8:	add	sl, sl, #16
   14afc:	cmp	r4, #0
   14b00:	movne	r3, r9
   14b04:	orreq	r3, r9, #1
   14b08:	cmp	r3, #0
   14b0c:	bne	14ac8 <argp_parse@@Base+0x2a14>
   14b10:	mov	r0, r4
   14b14:	add	sp, sp, #28
   14b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b1c:	cmp	r0, #0
   14b20:	beq	14ca4 <argp_parse@@Base+0x2bf0>
   14b24:	sub	sl, r0, r9
   14b28:	ldr	r3, [fp, #20]
   14b2c:	cmp	r3, #0
   14b30:	beq	14b50 <argp_parse@@Base+0x2a9c>
   14b34:	cmp	sl, #0
   14b38:	beq	14844 <argp_parse@@Base+0x2790>
   14b3c:	mov	r1, sl
   14b40:	mov	r0, r9
   14b44:	bl	10fc4 <strndup@plt>
   14b48:	mov	r9, r0
   14b4c:	b	14844 <argp_parse@@Base+0x2790>
   14b50:	mov	r4, r9
   14b54:	mov	r3, #0
   14b58:	str	r3, [sp, #12]
   14b5c:	b	14880 <argp_parse@@Base+0x27cc>
   14b60:	mov	r1, #1
   14b64:	mov	r0, r5
   14b68:	bl	17f1c <argp_error@@Base+0x137c>
   14b6c:	cmp	r0, #0
   14b70:	beq	148ac <argp_parse@@Base+0x27f8>
   14b74:	b	14898 <argp_parse@@Base+0x27e4>
   14b78:	mov	r0, r4
   14b7c:	bl	110fc <strlen@plt>
   14b80:	subs	r3, r0, #0
   14b84:	mov	r1, r3
   14b88:	str	r3, [sp, #20]
   14b8c:	beq	1490c <argp_parse@@Base+0x2858>
   14b90:	ldr	r3, [r5, #28]
   14b94:	add	r3, r3, r1
   14b98:	ldr	r2, [r5, #32]
   14b9c:	cmp	r2, r3
   14ba0:	bcs	14bb4 <argp_parse@@Base+0x2b00>
   14ba4:	mov	r0, r5
   14ba8:	bl	17f1c <argp_error@@Base+0x137c>
   14bac:	cmp	r0, #0
   14bb0:	beq	1490c <argp_parse@@Base+0x2858>
   14bb4:	ldr	r2, [sp, #20]
   14bb8:	mov	r1, r4
   14bbc:	ldr	r0, [r5, #28]
   14bc0:	bl	10fd0 <memcpy@plt>
   14bc4:	ldr	r3, [r5, #28]
   14bc8:	ldr	r2, [sp, #20]
   14bcc:	add	r3, r3, r2
   14bd0:	str	r3, [r5, #28]
   14bd4:	b	1490c <argp_parse@@Base+0x2858>
   14bd8:	mov	r0, r5
   14bdc:	bl	17978 <argp_error@@Base+0xdd8>
   14be0:	b	14924 <argp_parse@@Base+0x2870>
   14be4:	mov	r1, #1
   14be8:	mov	r0, r5
   14bec:	bl	17f1c <argp_error@@Base+0x137c>
   14bf0:	cmp	r0, #0
   14bf4:	beq	1495c <argp_parse@@Base+0x28a8>
   14bf8:	b	14948 <argp_parse@@Base+0x2894>
   14bfc:	mov	r0, r4
   14c00:	bl	12ca8 <argp_parse@@Base+0xbf4>
   14c04:	mov	r4, #1
   14c08:	b	14968 <argp_parse@@Base+0x28b4>
   14c0c:	mov	r4, #0
   14c10:	b	14968 <argp_parse@@Base+0x28b4>
   14c14:	mov	r1, #1
   14c18:	mov	r0, r5
   14c1c:	bl	17f1c <argp_error@@Base+0x137c>
   14c20:	cmp	r0, #0
   14c24:	beq	149e0 <argp_parse@@Base+0x292c>
   14c28:	b	149cc <argp_parse@@Base+0x2918>
   14c2c:	mov	r0, r5
   14c30:	bl	17978 <argp_error@@Base+0xdd8>
   14c34:	b	14a54 <argp_parse@@Base+0x29a0>
   14c38:	mov	r1, #1
   14c3c:	mov	r0, r5
   14c40:	bl	17f1c <argp_error@@Base+0x137c>
   14c44:	cmp	r0, #0
   14c48:	moveq	r4, #1
   14c4c:	beq	14a94 <argp_parse@@Base+0x29e0>
   14c50:	b	14a7c <argp_parse@@Base+0x29c8>
   14c54:	mov	r9, #0
   14c58:	b	14834 <argp_parse@@Base+0x2780>
   14c5c:	mov	r4, r9
   14c60:	mov	sl, #0
   14c64:	str	sl, [sp, #12]
   14c68:	b	14878 <argp_parse@@Base+0x27c4>
   14c6c:	ldr	r3, [r0, #20]
   14c70:	cmp	r3, #0
   14c74:	movne	sl, #0
   14c78:	bne	14844 <argp_parse@@Base+0x2790>
   14c7c:	mov	r3, r9
   14c80:	cmp	r9, #0
   14c84:	moveq	r4, #0
   14c88:	streq	r4, [sp, #12]
   14c8c:	beq	14988 <argp_parse@@Base+0x28d4>
   14c90:	mov	r4, r9
   14c94:	mov	r9, r3
   14c98:	mov	sl, #0
   14c9c:	str	sl, [sp, #12]
   14ca0:	b	14880 <argp_parse@@Base+0x27cc>
   14ca4:	ldr	r3, [fp, #20]
   14ca8:	cmp	r3, #0
   14cac:	moveq	r3, r9
   14cb0:	beq	14c80 <argp_parse@@Base+0x2bcc>
   14cb4:	ldr	r1, [sp, #8]
   14cb8:	mov	r0, fp
   14cbc:	bl	12b28 <argp_parse@@Base+0xa74>
   14cc0:	str	r0, [sp, #12]
   14cc4:	ldr	r3, [fp, #20]
   14cc8:	mov	sl, #0
   14ccc:	ldr	r0, [pc]	; 14cd4 <argp_parse@@Base+0x2c20>
   14cd0:	b	14868 <argp_parse@@Base+0x27b4>
   14cd4:	andeq	r0, r0, #1
   14cd8:	andeq	r0, r0, #2
   14cdc:	andeq	r0, r0, #4
   14ce0:	ldr	r3, [r0, #12]
   14ce4:	ldr	r2, [r1, #12]
   14ce8:	cmp	r3, r2
   14cec:	beq	14d44 <argp_parse@@Base+0x2c90>
   14cf0:	push	{r4, r5, r6, lr}
   14cf4:	mov	r5, r1
   14cf8:	mov	r4, r0
   14cfc:	mov	r1, r2
   14d00:	mov	r0, r3
   14d04:	bl	14ce0 <argp_parse@@Base+0x2c2c>
   14d08:	subs	r3, r0, #0
   14d0c:	bne	14d3c <argp_parse@@Base+0x2c88>
   14d10:	ldr	r0, [r4, #8]
   14d14:	ldr	r3, [r5, #8]
   14d18:	mvn	r2, r3
   14d1c:	lsr	r2, r2, #31
   14d20:	cmp	r2, r0, lsr #31
   14d24:	subne	r3, r0, r3
   14d28:	subeq	r3, r3, r0
   14d2c:	cmp	r3, #0
   14d30:	ldreq	r3, [r5, #4]
   14d34:	ldreq	r0, [r4, #4]
   14d38:	subeq	r3, r3, r0
   14d3c:	mov	r0, r3
   14d40:	pop	{r4, r5, r6, pc}
   14d44:	ldr	r2, [r0, #8]
   14d48:	ldr	r3, [r1, #8]
   14d4c:	mvn	ip, r3
   14d50:	lsr	ip, ip, #31
   14d54:	cmp	ip, r2, lsr #31
   14d58:	subne	r3, r2, r3
   14d5c:	subeq	r3, r3, r2
   14d60:	cmp	r3, #0
   14d64:	ldreq	r3, [r1, #4]
   14d68:	ldreq	r0, [r0, #4]
   14d6c:	subeq	r3, r3, r0
   14d70:	mov	r0, r3
   14d74:	bx	lr
   14d78:	push	{r4, r5, r6, r7, r8, lr}
   14d7c:	sub	sp, sp, #8
   14d80:	ldr	lr, [r0, #16]
   14d84:	cmp	lr, #0
   14d88:	movne	r2, lr
   14d8c:	bne	14d9c <argp_parse@@Base+0x2ce8>
   14d90:	ldr	ip, [r0, #12]
   14d94:	b	14dac <argp_parse@@Base+0x2cf8>
   14d98:	mov	r2, r3
   14d9c:	ldr	r3, [r2, #12]
   14da0:	cmp	r3, #0
   14da4:	bne	14d98 <argp_parse@@Base+0x2ce4>
   14da8:	ldr	ip, [r2, #8]
   14dac:	ldr	r5, [r1, #16]
   14db0:	cmp	r5, #0
   14db4:	movne	r2, r5
   14db8:	bne	14dc8 <argp_parse@@Base+0x2d14>
   14dbc:	ldr	r4, [r1, #12]
   14dc0:	b	14dd8 <argp_parse@@Base+0x2d24>
   14dc4:	mov	r2, r3
   14dc8:	ldr	r3, [r2, #12]
   14dcc:	cmp	r3, #0
   14dd0:	bne	14dc4 <argp_parse@@Base+0x2d10>
   14dd4:	ldr	r4, [r2, #8]
   14dd8:	mvn	r3, r4
   14ddc:	lsr	r3, r3, #31
   14de0:	cmp	r3, ip, lsr #31
   14de4:	subne	r4, ip, r4
   14de8:	subeq	r4, r4, ip
   14dec:	cmp	r4, #0
   14df0:	bne	14e58 <argp_parse@@Base+0x2da4>
   14df4:	adds	r4, r5, #0
   14df8:	movne	r4, #1
   14dfc:	cmp	lr, #0
   14e00:	rsbeq	r4, r4, #0
   14e04:	rsbne	r4, r4, #1
   14e08:	cmp	r4, #0
   14e0c:	bne	14e58 <argp_parse@@Base+0x2da4>
   14e10:	mov	r6, r1
   14e14:	mov	r7, r0
   14e18:	cmp	lr, #0
   14e1c:	beq	14ea8 <argp_parse@@Base+0x2df4>
   14e20:	ldr	ip, [lr, #20]
   14e24:	ldr	r2, [r5, #20]
   14e28:	cmp	ip, r2
   14e2c:	ble	14e64 <argp_parse@@Base+0x2db0>
   14e30:	mov	r0, lr
   14e34:	ldr	r0, [r0, #12]
   14e38:	ldr	r3, [r0, #20]
   14e3c:	cmp	r2, r3
   14e40:	blt	14e34 <argp_parse@@Base+0x2d80>
   14e44:	mov	r1, r5
   14e48:	bl	14ce0 <argp_parse@@Base+0x2c2c>
   14e4c:	subs	r4, r0, #0
   14e50:	cmp	r0, #0
   14e54:	moveq	r4, #1
   14e58:	mov	r0, r4
   14e5c:	add	sp, sp, #8
   14e60:	pop	{r4, r5, r6, r7, r8, pc}
   14e64:	cmp	ip, r2
   14e68:	bge	14e94 <argp_parse@@Base+0x2de0>
   14e6c:	mov	r1, r5
   14e70:	ldr	r1, [r1, #12]
   14e74:	ldr	r3, [r1, #20]
   14e78:	cmp	ip, r3
   14e7c:	blt	14e70 <argp_parse@@Base+0x2dbc>
   14e80:	mov	r0, lr
   14e84:	bl	14ce0 <argp_parse@@Base+0x2c2c>
   14e88:	subs	r4, r0, #0
   14e8c:	mvneq	r4, #0
   14e90:	b	14e58 <argp_parse@@Base+0x2da4>
   14e94:	mov	r1, r5
   14e98:	mov	r0, lr
   14e9c:	bl	14ce0 <argp_parse@@Base+0x2c2c>
   14ea0:	subs	r4, r0, #0
   14ea4:	bne	14e58 <argp_parse@@Base+0x2da4>
   14ea8:	ldr	r3, [r7, #12]
   14eac:	ldr	r4, [r6, #12]
   14eb0:	mvn	r2, r4
   14eb4:	lsr	r2, r2, #31
   14eb8:	cmp	r2, r3, lsr #31
   14ebc:	subne	r4, r3, r4
   14ec0:	subeq	r4, r4, r3
   14ec4:	cmp	r4, #0
   14ec8:	bne	14e58 <argp_parse@@Base+0x2da4>
   14ecc:	mov	r0, r7
   14ed0:	bl	13b20 <argp_parse@@Base+0x1a6c>
   14ed4:	mov	r5, r0
   14ed8:	str	r0, [sp]
   14edc:	mov	r0, r6
   14ee0:	bl	13b20 <argp_parse@@Base+0x1a6c>
   14ee4:	str	r0, [sp, #4]
   14ee8:	ldr	r3, [r7]
   14eec:	ldr	r3, [r3, #12]
   14ef0:	adds	r5, r5, #0
   14ef4:	movne	r5, #1
   14ef8:	ands	r3, r5, r3, lsr #3
   14efc:	beq	15040 <argp_parse@@Base+0x2f8c>
   14f00:	mov	r0, sp
   14f04:	bl	13ce4 <argp_parse@@Base+0x1c30>
   14f08:	adds	r5, r0, #0
   14f0c:	movne	r5, #1
   14f10:	ldr	r3, [r6]
   14f14:	ldr	r0, [r3, #12]
   14f18:	ands	r0, r0, #8
   14f1c:	beq	14f3c <argp_parse@@Base+0x2e88>
   14f20:	ldr	r3, [sp, #4]
   14f24:	cmp	r3, #0
   14f28:	beq	15038 <argp_parse@@Base+0x2f84>
   14f2c:	add	r0, sp, #4
   14f30:	bl	13ce4 <argp_parse@@Base+0x1c30>
   14f34:	adds	r0, r0, #0
   14f38:	movne	r0, #1
   14f3c:	subs	r4, r5, r0
   14f40:	bne	14e58 <argp_parse@@Base+0x2da4>
   14f44:	ldr	r2, [r7, #20]
   14f48:	ldr	r4, [pc, #276]	; 15064 <argp_parse@@Base+0x2fb0>
   14f4c:	mov	r3, #0
   14f50:	ldr	r2, [r2, #24]
   14f54:	mov	r1, r4
   14f58:	mov	r0, r7
   14f5c:	bl	13bb8 <argp_parse@@Base+0x1b04>
   14f60:	mov	r5, r0
   14f64:	uxtb	r8, r0
   14f68:	ldr	r2, [r6, #20]
   14f6c:	mov	r3, #0
   14f70:	ldr	r2, [r2, #24]
   14f74:	mov	r1, r4
   14f78:	mov	r0, r6
   14f7c:	bl	13bb8 <argp_parse@@Base+0x1b04>
   14f80:	uxtb	r7, r0
   14f84:	cmp	r8, #0
   14f88:	movne	r5, r8
   14f8c:	bne	14fa0 <argp_parse@@Base+0x2eec>
   14f90:	ldr	r3, [sp]
   14f94:	cmp	r3, #0
   14f98:	ldrbne	r5, [r3]
   14f9c:	moveq	r5, #0
   14fa0:	cmp	r7, #0
   14fa4:	uxtbne	r6, r0
   14fa8:	bne	14fbc <argp_parse@@Base+0x2f08>
   14fac:	ldr	r3, [sp, #4]
   14fb0:	cmp	r3, #0
   14fb4:	ldrbne	r6, [r3]
   14fb8:	moveq	r6, #0
   14fbc:	bl	110b4 <__ctype_tolower_loc@plt>
   14fc0:	ldr	r3, [r0]
   14fc4:	ldr	r4, [r3, r5, lsl #2]
   14fc8:	ldr	r3, [r3, r6, lsl #2]
   14fcc:	subs	r4, r4, r3
   14fd0:	bne	14e58 <argp_parse@@Base+0x2da4>
   14fd4:	subs	r4, r6, r5
   14fd8:	bne	14e58 <argp_parse@@Base+0x2da4>
   14fdc:	adds	r4, r7, #0
   14fe0:	movne	r4, #1
   14fe4:	cmp	r8, #0
   14fe8:	rsbeq	r4, r4, #0
   14fec:	rsbne	r4, r4, #1
   14ff0:	cmp	r4, #0
   14ff4:	bne	14e58 <argp_parse@@Base+0x2da4>
   14ff8:	cmp	r8, #0
   14ffc:	bne	14e58 <argp_parse@@Base+0x2da4>
   15000:	ldr	r0, [sp]
   15004:	ldr	r1, [sp, #4]
   15008:	adds	r4, r1, #0
   1500c:	movne	r4, #1
   15010:	cmp	r0, #0
   15014:	rsbeq	r4, r4, #0
   15018:	rsbne	r4, r4, #1
   1501c:	cmp	r4, #0
   15020:	bne	14e58 <argp_parse@@Base+0x2da4>
   15024:	cmp	r0, #0
   15028:	beq	14e58 <argp_parse@@Base+0x2da4>
   1502c:	bl	11018 <strcasecmp@plt>
   15030:	mov	r4, r0
   15034:	b	14e58 <argp_parse@@Base+0x2da4>
   15038:	mov	r0, r4
   1503c:	b	14f3c <argp_parse@@Base+0x2e88>
   15040:	ldr	r3, [r6]
   15044:	ldr	r3, [r3, #12]
   15048:	tst	r3, #8
   1504c:	beq	14f44 <argp_parse@@Base+0x2e90>
   15050:	ldr	r3, [sp, #4]
   15054:	cmp	r3, #0
   15058:	movne	r5, r4
   1505c:	bne	14f2c <argp_parse@@Base+0x2e78>
   15060:	b	14f44 <argp_parse@@Base+0x2e90>
   15064:	muleq	r1, ip, ip
   15068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1506c:	sub	sp, sp, #52	; 0x34
   15070:	str	r0, [sp, #24]
   15074:	str	r1, [sp, #28]
   15078:	ldr	r2, [r0, #16]
   1507c:	str	r2, [sp, #8]
   15080:	ldr	r5, [r0]
   15084:	mov	r0, #16
   15088:	bl	13aa0 <argp_parse@@Base+0x19ec>
   1508c:	subs	fp, r0, #0
   15090:	beq	150c0 <argp_parse@@Base+0x300c>
   15094:	mov	r3, #0
   15098:	str	r3, [fp, #4]
   1509c:	str	r3, [fp, #12]
   150a0:	cmp	r5, r3
   150a4:	beq	15298 <argp_parse@@Base+0x31e4>
   150a8:	ldr	r4, [r5, #12]
   150ac:	ands	r4, r4, #4
   150b0:	bne	150d4 <argp_parse@@Base+0x3020>
   150b4:	add	r6, r5, #24
   150b8:	mov	r8, r3
   150bc:	b	150fc <argp_parse@@Base+0x3048>
   150c0:	ldr	r3, [pc, #1576]	; 156f0 <argp_parse@@Base+0x363c>
   150c4:	ldr	r2, [pc, #1576]	; 156f4 <argp_parse@@Base+0x3640>
   150c8:	ldr	r1, [pc, #1576]	; 156f8 <argp_parse@@Base+0x3644>
   150cc:	ldr	r0, [pc, #1576]	; 156fc <argp_parse@@Base+0x3648>
   150d0:	bl	111f8 <__assert_fail@plt>
   150d4:	ldr	r3, [pc, #1556]	; 156f0 <argp_parse@@Base+0x363c>
   150d8:	mov	r2, #460	; 0x1cc
   150dc:	ldr	r1, [pc, #1556]	; 156f8 <argp_parse@@Base+0x3644>
   150e0:	ldr	r0, [pc, #1560]	; 15700 <argp_parse@@Base+0x364c>
   150e4:	bl	111f8 <__assert_fail@plt>
   150e8:	ldr	r2, [fp, #4]
   150ec:	add	r2, r2, #1
   150f0:	str	r2, [fp, #4]
   150f4:	b	15124 <argp_parse@@Base+0x3070>
   150f8:	add	r6, r6, #24
   150fc:	mov	r3, r6
   15100:	ldr	r2, [r6, #-20]	; 0xffffffec
   15104:	cmp	r2, #0
   15108:	bne	15118 <argp_parse@@Base+0x3064>
   1510c:	ldr	r2, [r6, #-24]	; 0xffffffe8
   15110:	cmp	r2, #0
   15114:	beq	1515c <argp_parse@@Base+0x30a8>
   15118:	ldr	r2, [r3, #-12]
   1511c:	tst	r2, #4
   15120:	beq	150e8 <argp_parse@@Base+0x3034>
   15124:	ldr	r2, [r3, #-12]
   15128:	tst	r2, #8
   1512c:	bne	150f8 <argp_parse@@Base+0x3044>
   15130:	ldr	r7, [r3, #-20]	; 0xffffffec
   15134:	sub	r3, r7, #1
   15138:	cmp	r3, #254	; 0xfe
   1513c:	bhi	150f8 <argp_parse@@Base+0x3044>
   15140:	bl	110d8 <__ctype_b_loc@plt>
   15144:	ldr	r3, [r0]
   15148:	lsl	r7, r7, #1
   1514c:	ldrh	r3, [r3, r7]
   15150:	tst	r3, #16384	; 0x4000
   15154:	addne	r8, r8, #1
   15158:	b	150f8 <argp_parse@@Base+0x3044>
   1515c:	ldr	r2, [r6, #-8]
   15160:	cmp	r2, #0
   15164:	bne	15118 <argp_parse@@Base+0x3064>
   15168:	ldr	r2, [r6, #-4]
   1516c:	cmp	r2, #0
   15170:	bne	15118 <argp_parse@@Base+0x3064>
   15174:	ldr	r0, [fp, #4]
   15178:	rsb	r0, r0, r0, lsl #3
   1517c:	lsl	r0, r0, #2
   15180:	bl	13aa0 <argp_parse@@Base+0x19ec>
   15184:	str	r0, [fp]
   15188:	add	r0, r8, #1
   1518c:	bl	13aa0 <argp_parse@@Base+0x19ec>
   15190:	str	r0, [fp, #8]
   15194:	ldr	r8, [fp]
   15198:	cmp	r0, #0
   1519c:	cmpne	r8, #0
   151a0:	bne	151b8 <argp_parse@@Base+0x3104>
   151a4:	ldr	r3, [pc, #1348]	; 156f0 <argp_parse@@Base+0x363c>
   151a8:	ldr	r2, [pc, #1364]	; 15704 <argp_parse@@Base+0x3650>
   151ac:	ldr	r1, [pc, #1348]	; 156f8 <argp_parse@@Base+0x3644>
   151b0:	ldr	r0, [pc, #1360]	; 15708 <argp_parse@@Base+0x3654>
   151b4:	bl	111f8 <__assert_fail@plt>
   151b8:	ldr	r2, [fp, #4]
   151bc:	ldr	r3, [pc, #1352]	; 1570c <argp_parse@@Base+0x3658>
   151c0:	cmp	r2, r3
   151c4:	addls	r8, r8, #28
   151c8:	movls	r7, r0
   151cc:	movls	sl, #0
   151d0:	bls	1521c <argp_parse@@Base+0x3168>
   151d4:	ldr	r3, [pc, #1300]	; 156f0 <argp_parse@@Base+0x363c>
   151d8:	mov	r2, #476	; 0x1dc
   151dc:	ldr	r1, [pc, #1300]	; 156f8 <argp_parse@@Base+0x3644>
   151e0:	ldr	r0, [pc, #1320]	; 15710 <argp_parse@@Base+0x365c>
   151e4:	bl	111f8 <__assert_fail@plt>
   151e8:	ldr	r3, [r5, #4]
   151ec:	cmp	r3, #0
   151f0:	addeq	r9, r4, #1
   151f4:	movne	r9, r4
   151f8:	b	15260 <argp_parse@@Base+0x31ac>
   151fc:	ldr	r3, [r5, #16]
   15200:	cmp	r3, #0
   15204:	bne	1560c <argp_parse@@Base+0x3558>
   15208:	ldr	r3, [r5, #20]
   1520c:	cmp	r3, #0
   15210:	bne	1560c <argp_parse@@Base+0x3558>
   15214:	add	r8, r8, #28
   15218:	mov	r4, r9
   1521c:	ldr	r3, [r5, #4]
   15220:	cmp	r3, #0
   15224:	bne	15234 <argp_parse@@Base+0x3180>
   15228:	ldr	r3, [r5]
   1522c:	cmp	r3, #0
   15230:	beq	15278 <argp_parse@@Base+0x31c4>
   15234:	mov	r6, r8
   15238:	str	r5, [r8, #-28]	; 0xffffffe4
   1523c:	str	sl, [r8, #-24]	; 0xffffffe8
   15240:	str	r7, [r8, #-20]	; 0xffffffec
   15244:	ldr	r9, [r5, #20]
   15248:	cmp	r9, #0
   1524c:	bne	15260 <argp_parse@@Base+0x31ac>
   15250:	ldr	r3, [r5]
   15254:	cmp	r3, #0
   15258:	movne	r9, r4
   1525c:	beq	151e8 <argp_parse@@Base+0x3134>
   15260:	str	r9, [r6, #-16]
   15264:	ldr	r3, [sp, #28]
   15268:	str	r3, [r6, #-12]
   1526c:	ldr	r3, [sp, #24]
   15270:	str	r3, [r6, #-8]
   15274:	b	15618 <argp_parse@@Base+0x3564>
   15278:	ldr	r3, [r5, #16]
   1527c:	cmp	r3, #0
   15280:	bne	15234 <argp_parse@@Base+0x3180>
   15284:	ldr	r3, [r5, #20]
   15288:	cmp	r3, #0
   1528c:	bne	15234 <argp_parse@@Base+0x3180>
   15290:	mov	r3, #0
   15294:	strb	r3, [r7]
   15298:	ldr	r3, [sp, #8]
   1529c:	cmp	r3, #0
   152a0:	beq	155dc <argp_parse@@Base+0x3528>
   152a4:	ldr	r3, [r3]
   152a8:	cmp	r3, #0
   152ac:	beq	155dc <argp_parse@@Base+0x3528>
   152b0:	add	r3, fp, #12
   152b4:	str	r3, [sp, #44]	; 0x2c
   152b8:	str	fp, [sp, #20]
   152bc:	b	1534c <argp_parse@@Base+0x3298>
   152c0:	ldr	r1, [sp, #28]
   152c4:	b	153cc <argp_parse@@Base+0x3318>
   152c8:	mov	r2, r3
   152cc:	ldr	r3, [r2, #24]
   152d0:	cmp	r3, #0
   152d4:	bne	152c8 <argp_parse@@Base+0x3214>
   152d8:	add	r2, r2, #24
   152dc:	ldr	r1, [sp, #16]
   152e0:	ldr	r3, [r1, #12]
   152e4:	str	r3, [r2]
   152e8:	mov	r2, #0
   152ec:	str	r2, [r1, #12]
   152f0:	ldr	r3, [r1, #4]
   152f4:	cmp	r3, r2
   152f8:	beq	15330 <argp_parse@@Base+0x327c>
   152fc:	ldr	r0, [sp, #20]
   15300:	ldr	r2, [r0, #4]
   15304:	cmp	r2, #0
   15308:	bne	153f4 <argp_parse@@Base+0x3340>
   1530c:	str	r3, [r0, #4]
   15310:	mov	r2, r1
   15314:	ldr	r3, [r1]
   15318:	str	r3, [r0]
   1531c:	ldr	r3, [r2, #8]
   15320:	str	r3, [r0, #8]
   15324:	mov	r3, r2
   15328:	mov	r2, #0
   1532c:	str	r2, [r3, #4]
   15330:	ldr	r0, [sp, #16]
   15334:	bl	13f1c <argp_parse@@Base+0x1e68>
   15338:	ldr	r2, [sp, #8]
   1533c:	ldr	r3, [r2, #16]!
   15340:	str	r2, [sp, #8]
   15344:	cmp	r3, #0
   15348:	beq	155d8 <argp_parse@@Base+0x3524>
   1534c:	ldr	r3, [sp, #8]
   15350:	ldr	r4, [r3, #12]
   15354:	cmp	r4, #0
   15358:	bne	15368 <argp_parse@@Base+0x32b4>
   1535c:	ldr	r3, [r3, #8]
   15360:	cmp	r3, #0
   15364:	beq	152c0 <argp_parse@@Base+0x320c>
   15368:	ldr	r2, [sp, #8]
   1536c:	ldr	r5, [r2, #8]
   15370:	ldr	r7, [sp, #24]
   15374:	ldr	r3, [r7, #16]
   15378:	sub	r3, r2, r3
   1537c:	asr	r6, r3, #4
   15380:	mov	r0, #28
   15384:	bl	13aa0 <argp_parse@@Base+0x19ec>
   15388:	subs	r1, r0, #0
   1538c:	beq	153cc <argp_parse@@Base+0x3318>
   15390:	str	r4, [r1, #8]
   15394:	str	r5, [r1]
   15398:	str	r6, [r1, #4]
   1539c:	ldr	r3, [sp, #28]
   153a0:	str	r3, [r1, #12]
   153a4:	str	r7, [r1, #16]
   153a8:	cmp	r3, #0
   153ac:	ldrne	r3, [r3, #20]
   153b0:	addne	r3, r3, #1
   153b4:	moveq	r3, #0
   153b8:	str	r3, [r1, #20]
   153bc:	ldr	r2, [sp, #20]
   153c0:	ldr	r3, [r2, #12]
   153c4:	str	r3, [r1, #24]
   153c8:	str	r1, [r2, #12]
   153cc:	ldr	r3, [sp, #8]
   153d0:	ldr	r0, [r3]
   153d4:	bl	15068 <argp_parse@@Base+0x2fb4>
   153d8:	str	r0, [sp, #16]
   153dc:	ldr	r3, [sp, #20]
   153e0:	ldr	r2, [r3, #12]
   153e4:	cmp	r2, #0
   153e8:	ldreq	r2, [sp, #44]	; 0x2c
   153ec:	bne	152cc <argp_parse@@Base+0x3218>
   153f0:	b	152dc <argp_parse@@Base+0x3228>
   153f4:	add	r3, r3, r2
   153f8:	str	r3, [sp, #36]	; 0x24
   153fc:	rsb	r0, r3, r3, lsl #3
   15400:	lsl	r0, r0, #2
   15404:	bl	13aa0 <argp_parse@@Base+0x19ec>
   15408:	mov	r4, r0
   1540c:	str	r0, [sp, #32]
   15410:	ldr	r3, [sp, #20]
   15414:	ldr	r0, [r3, #8]
   15418:	bl	110fc <strlen@plt>
   1541c:	mov	r6, r0
   15420:	ldr	r3, [sp, #16]
   15424:	ldr	r0, [r3, #8]
   15428:	bl	110fc <strlen@plt>
   1542c:	add	r0, r6, r0
   15430:	add	r0, r0, #1
   15434:	bl	13aa0 <argp_parse@@Base+0x19ec>
   15438:	mov	sl, r0
   1543c:	cmp	r4, #0
   15440:	cmpne	r0, #0
   15444:	beq	15510 <argp_parse@@Base+0x345c>
   15448:	ldr	r3, [sp, #36]	; 0x24
   1544c:	ldr	r2, [pc, #696]	; 1570c <argp_parse@@Base+0x3658>
   15450:	cmp	r3, r2
   15454:	bhi	15524 <argp_parse@@Base+0x3470>
   15458:	ldr	r5, [sp, #20]
   1545c:	ldr	r2, [r5]
   15460:	mov	r1, r2
   15464:	str	r2, [sp, #40]	; 0x28
   15468:	ldr	r4, [r5, #4]
   1546c:	rsb	r7, r4, r4, lsl #3
   15470:	lsl	r7, r7, #2
   15474:	mov	r2, r7
   15478:	ldr	r8, [sp, #32]
   1547c:	mov	r0, r8
   15480:	bl	110cc <mempcpy@plt>
   15484:	ldr	r3, [sp, #16]
   15488:	ldr	r1, [r3, #4]
   1548c:	str	r1, [sp, #4]
   15490:	rsb	r2, r1, r1, lsl #3
   15494:	lsl	r2, r2, #2
   15498:	ldr	r1, [r3]
   1549c:	bl	10fd0 <memcpy@plt>
   154a0:	ldr	r5, [r5, #8]
   154a4:	mov	r2, r6
   154a8:	mov	r1, r5
   154ac:	mov	r0, sl
   154b0:	bl	10fd0 <memcpy@plt>
   154b4:	cmp	r4, #0
   154b8:	beq	15538 <argp_parse@@Base+0x3484>
   154bc:	mov	r2, r8
   154c0:	ldr	r3, [r2, #8]
   154c4:	sub	r3, r3, r5
   154c8:	add	r3, sl, r3
   154cc:	str	r3, [r2, #8]
   154d0:	add	r2, r2, #28
   154d4:	subs	r4, r4, #1
   154d8:	bne	154c0 <argp_parse@@Base+0x340c>
   154dc:	ldr	r3, [sp, #32]
   154e0:	add	r7, r3, r7
   154e4:	add	r3, sl, r6
   154e8:	str	r3, [sp, #12]
   154ec:	ldr	r2, [sp, #16]
   154f0:	ldr	r8, [r2, #8]
   154f4:	ldr	r2, [sp, #4]
   154f8:	cmp	r2, #0
   154fc:	beq	155a0 <argp_parse@@Base+0x34ec>
   15500:	add	r9, r7, #28
   15504:	mov	fp, r3
   15508:	sub	r7, r3, #1
   1550c:	b	15588 <argp_parse@@Base+0x34d4>
   15510:	ldr	r3, [pc, #508]	; 15714 <argp_parse@@Base+0x3660>
   15514:	ldr	r2, [pc, #508]	; 15718 <argp_parse@@Base+0x3664>
   15518:	ldr	r1, [pc, #472]	; 156f8 <argp_parse@@Base+0x3644>
   1551c:	ldr	r0, [pc, #504]	; 1571c <argp_parse@@Base+0x3668>
   15520:	bl	111f8 <__assert_fail@plt>
   15524:	ldr	r3, [pc, #488]	; 15714 <argp_parse@@Base+0x3660>
   15528:	mov	r2, #972	; 0x3cc
   1552c:	ldr	r1, [pc, #452]	; 156f8 <argp_parse@@Base+0x3644>
   15530:	ldr	r0, [pc, #488]	; 15720 <argp_parse@@Base+0x366c>
   15534:	bl	111f8 <__assert_fail@plt>
   15538:	ldr	r7, [sp, #32]
   1553c:	b	154e4 <argp_parse@@Base+0x3430>
   15540:	ldr	r3, [sp, #12]
   15544:	cmp	sl, r3
   15548:	bcs	156e0 <argp_parse@@Base+0x362c>
   1554c:	ldrb	r3, [sl]
   15550:	cmp	r3, r1
   15554:	beq	156e8 <argp_parse@@Base+0x3634>
   15558:	mov	r3, sl
   1555c:	cmp	r7, r3
   15560:	beq	156e0 <argp_parse@@Base+0x362c>
   15564:	ldrb	r2, [r3, #1]!
   15568:	cmp	r2, r1
   1556c:	bne	1555c <argp_parse@@Base+0x34a8>
   15570:	b	156e8 <argp_parse@@Base+0x3634>
   15574:	add	r9, r9, #28
   15578:	ldr	r3, [sp, #4]
   1557c:	subs	r3, r3, #1
   15580:	str	r3, [sp, #4]
   15584:	beq	155a4 <argp_parse@@Base+0x34f0>
   15588:	str	fp, [r9, #-20]	; 0xffffffec
   1558c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   15590:	ldr	r4, [r9, #-28]	; 0xffffffe4
   15594:	cmp	r5, #0
   15598:	bne	156a8 <argp_parse@@Base+0x35f4>
   1559c:	b	15574 <argp_parse@@Base+0x34c0>
   155a0:	ldr	fp, [sp, #12]
   155a4:	mov	r3, #0
   155a8:	strb	r3, [fp]
   155ac:	ldr	r0, [sp, #40]	; 0x28
   155b0:	bl	12ca8 <argp_parse@@Base+0xbf4>
   155b4:	ldr	r4, [sp, #20]
   155b8:	ldr	r0, [r4, #8]
   155bc:	bl	12ca8 <argp_parse@@Base+0xbf4>
   155c0:	ldr	r2, [sp, #32]
   155c4:	str	r2, [r4]
   155c8:	ldr	r2, [sp, #36]	; 0x24
   155cc:	str	r2, [r4, #4]
   155d0:	str	sl, [r4, #8]
   155d4:	b	15330 <argp_parse@@Base+0x327c>
   155d8:	ldr	fp, [sp, #20]
   155dc:	mov	r0, fp
   155e0:	add	sp, sp, #52	; 0x34
   155e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155e8:	strb	r4, [r7]
   155ec:	add	r7, r7, #1
   155f0:	add	r5, r5, #24
   155f4:	ldr	r3, [r5, #4]
   155f8:	cmp	r3, #0
   155fc:	bne	1560c <argp_parse@@Base+0x3558>
   15600:	ldr	r3, [r5]
   15604:	cmp	r3, #0
   15608:	beq	151fc <argp_parse@@Base+0x3148>
   1560c:	ldr	r3, [r5, #12]
   15610:	tst	r3, #4
   15614:	beq	15214 <argp_parse@@Base+0x3160>
   15618:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1561c:	add	r3, r3, #1
   15620:	str	r3, [r6, #-24]	; 0xffffffe8
   15624:	ldr	r3, [r5, #12]
   15628:	tst	r3, #8
   1562c:	bne	155f0 <argp_parse@@Base+0x353c>
   15630:	ldr	r4, [r5, #4]
   15634:	sub	r3, r4, #1
   15638:	cmp	r3, #254	; 0xfe
   1563c:	bhi	155f0 <argp_parse@@Base+0x353c>
   15640:	bl	110d8 <__ctype_b_loc@plt>
   15644:	ldr	r2, [r0]
   15648:	lsl	r3, r4, #1
   1564c:	ldrh	r3, [r2, r3]
   15650:	tst	r3, #16384	; 0x4000
   15654:	beq	155f0 <argp_parse@@Base+0x353c>
   15658:	uxtb	r4, r4
   1565c:	ldr	r3, [fp, #8]
   15660:	cmp	r3, r7
   15664:	bcs	155e8 <argp_parse@@Base+0x3534>
   15668:	ldrb	r2, [r3]
   1566c:	cmp	r2, r4
   15670:	beq	155f0 <argp_parse@@Base+0x353c>
   15674:	sub	r1, r7, #1
   15678:	cmp	r3, r1
   1567c:	beq	155e8 <argp_parse@@Base+0x3534>
   15680:	ldrb	r2, [r3, #1]!
   15684:	cmp	r2, r4
   15688:	bne	15678 <argp_parse@@Base+0x35c4>
   1568c:	b	155f0 <argp_parse@@Base+0x353c>
   15690:	ldrb	r1, [r8]
   15694:	cmp	r1, r6
   15698:	beq	15540 <argp_parse@@Base+0x348c>
   1569c:	add	r4, r4, #24
   156a0:	subs	r5, r5, #1
   156a4:	beq	15574 <argp_parse@@Base+0x34c0>
   156a8:	ldr	r3, [r4, #12]
   156ac:	tst	r3, #8
   156b0:	bne	1569c <argp_parse@@Base+0x35e8>
   156b4:	ldr	r6, [r4, #4]
   156b8:	sub	r3, r6, #1
   156bc:	cmp	r3, #254	; 0xfe
   156c0:	bhi	1569c <argp_parse@@Base+0x35e8>
   156c4:	bl	110d8 <__ctype_b_loc@plt>
   156c8:	ldr	r2, [r0]
   156cc:	lsl	r3, r6, #1
   156d0:	ldrh	r3, [r2, r3]
   156d4:	tst	r3, #16384	; 0x4000
   156d8:	bne	15690 <argp_parse@@Base+0x35dc>
   156dc:	b	1569c <argp_parse@@Base+0x35e8>
   156e0:	strb	r1, [fp]
   156e4:	add	fp, fp, #1
   156e8:	add	r8, r8, #1
   156ec:	b	1569c <argp_parse@@Base+0x35e8>
   156f0:	andeq	r8, r1, ip, lsr #26
   156f4:	andeq	r0, r0, r2, asr #3
   156f8:	andeq	r8, r1, ip, lsl lr
   156fc:	andeq	r8, r1, r8, lsr #28
   15700:	andeq	r8, r1, ip, lsr #28
   15704:	ldrdeq	r0, [r0], -sl
   15708:	andeq	r8, r1, ip, lsr lr
   1570c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15710:	andeq	r8, r1, r0, ror #28
   15714:	andeq	r8, r1, r8, lsr sp
   15718:	andeq	r0, r0, sl, asr #7
   1571c:	muleq	r1, ip, lr
   15720:			; <UNDEFINED> instruction: 0x00018eb8

00015724 <argp_failure@@Base>:
   15724:	push	{r3}		; (str r3, [sp, #-4]!)
   15728:	push	{r4, r5, r6, r7, lr}
   1572c:	sub	sp, sp, #200	; 0xc8
   15730:	mov	r7, r1
   15734:	mov	r6, r2
   15738:	subs	r5, r0, #0
   1573c:	beq	1588c <argp_failure@@Base+0x168>
   15740:	ldr	r3, [r5, #16]
   15744:	tst	r3, #2
   15748:	bne	1587c <argp_failure@@Base+0x158>
   1574c:	ldr	r4, [r5, #44]	; 0x2c
   15750:	cmp	r4, #0
   15754:	beq	1587c <argp_failure@@Base+0x158>
   15758:	mov	r0, r4
   1575c:	bl	11198 <flockfile@plt>
   15760:	ldr	r0, [r5, #40]	; 0x28
   15764:	mov	r1, r4
   15768:	bl	10f4c <fputs_unlocked@plt>
   1576c:	ldr	r3, [sp, #220]	; 0xdc
   15770:	cmp	r3, #0
   15774:	beq	157d0 <argp_failure@@Base+0xac>
   15778:	add	r3, sp, #224	; 0xe0
   1577c:	str	r3, [sp]
   15780:	ldr	r3, [r4, #20]
   15784:	ldr	r2, [r4, #24]
   15788:	cmp	r3, r2
   1578c:	addcc	r2, r3, #1
   15790:	strcc	r2, [r4, #20]
   15794:	movcc	r2, #58	; 0x3a
   15798:	strbcc	r2, [r3]
   1579c:	bcs	158b0 <argp_failure@@Base+0x18c>
   157a0:	ldr	r3, [r4, #20]
   157a4:	ldr	r2, [r4, #24]
   157a8:	cmp	r3, r2
   157ac:	addcc	r2, r3, #1
   157b0:	strcc	r2, [r4, #20]
   157b4:	movcc	r2, #32
   157b8:	strbcc	r2, [r3]
   157bc:	bcs	158c0 <argp_failure@@Base+0x19c>
   157c0:	ldr	r2, [sp]
   157c4:	ldr	r1, [sp, #220]	; 0xdc
   157c8:	mov	r0, r4
   157cc:	bl	11174 <vfprintf@plt>
   157d0:	cmp	r6, #0
   157d4:	beq	15838 <argp_failure@@Base+0x114>
   157d8:	ldr	r3, [r4, #20]
   157dc:	ldr	r2, [r4, #24]
   157e0:	cmp	r3, r2
   157e4:	addcc	r2, r3, #1
   157e8:	strcc	r2, [r4, #20]
   157ec:	movcc	r2, #58	; 0x3a
   157f0:	strbcc	r2, [r3]
   157f4:	bcs	158d0 <argp_failure@@Base+0x1ac>
   157f8:	ldr	r3, [r4, #20]
   157fc:	ldr	r2, [r4, #24]
   15800:	cmp	r3, r2
   15804:	addcc	r2, r3, #1
   15808:	strcc	r2, [r4, #20]
   1580c:	movcc	r2, #32
   15810:	strbcc	r2, [r3]
   15814:	bcs	158e0 <argp_failure@@Base+0x1bc>
   15818:	mov	r2, #200	; 0xc8
   1581c:	mov	r1, sp
   15820:	mov	r0, r6
   15824:	bl	1112c <strerror_r@plt>
   15828:	cmp	r0, #0
   1582c:	beq	158f0 <argp_failure@@Base+0x1cc>
   15830:	mov	r1, r4
   15834:	bl	10f4c <fputs_unlocked@plt>
   15838:	ldr	r3, [r4, #20]
   1583c:	ldr	r2, [r4, #24]
   15840:	cmp	r3, r2
   15844:	addcc	r2, r3, #1
   15848:	strcc	r2, [r4, #20]
   1584c:	movcc	r2, #10
   15850:	strbcc	r2, [r3]
   15854:	bcs	15908 <argp_failure@@Base+0x1e4>
   15858:	mov	r0, r4
   1585c:	bl	11024 <funlockfile@plt>
   15860:	cmp	r7, #0
   15864:	beq	1587c <argp_failure@@Base+0x158>
   15868:	cmp	r5, #0
   1586c:	beq	15918 <argp_failure@@Base+0x1f4>
   15870:	ldr	r3, [r5, #16]
   15874:	tst	r3, #32
   15878:	beq	15918 <argp_failure@@Base+0x1f4>
   1587c:	add	sp, sp, #200	; 0xc8
   15880:	pop	{r4, r5, r6, r7, lr}
   15884:	add	sp, sp, #4
   15888:	bx	lr
   1588c:	ldr	r3, [pc, #140]	; 15920 <argp_failure@@Base+0x1fc>
   15890:	ldr	r4, [r3]
   15894:	cmp	r4, #0
   15898:	beq	1587c <argp_failure@@Base+0x158>
   1589c:	mov	r0, r4
   158a0:	bl	11198 <flockfile@plt>
   158a4:	ldr	r3, [pc, #120]	; 15924 <argp_failure@@Base+0x200>
   158a8:	ldr	r0, [r3]
   158ac:	b	15764 <argp_failure@@Base+0x40>
   158b0:	mov	r1, #58	; 0x3a
   158b4:	mov	r0, r4
   158b8:	bl	1115c <__overflow@plt>
   158bc:	b	157a0 <argp_failure@@Base+0x7c>
   158c0:	mov	r1, #32
   158c4:	mov	r0, r4
   158c8:	bl	1115c <__overflow@plt>
   158cc:	b	157c0 <argp_failure@@Base+0x9c>
   158d0:	mov	r1, #58	; 0x3a
   158d4:	mov	r0, r4
   158d8:	bl	1115c <__overflow@plt>
   158dc:	b	157f8 <argp_failure@@Base+0xd4>
   158e0:	mov	r1, #32
   158e4:	mov	r0, r4
   158e8:	bl	1115c <__overflow@plt>
   158ec:	b	15818 <argp_failure@@Base+0xf4>
   158f0:	mov	r0, r6
   158f4:	bl	11090 <strerror@plt>
   158f8:	ldr	r3, [pc, #40]	; 15928 <argp_failure@@Base+0x204>
   158fc:	cmp	r0, #0
   15900:	moveq	r0, r3
   15904:	b	15830 <argp_failure@@Base+0x10c>
   15908:	mov	r1, #10
   1590c:	mov	r0, r4
   15910:	bl	1115c <__overflow@plt>
   15914:	b	15858 <argp_failure@@Base+0x134>
   15918:	mov	r0, r7
   1591c:	bl	110e4 <exit@plt>
   15920:	andeq	sl, r2, r0, ror #4
   15924:	andeq	sl, r2, r8, asr r2
   15928:	andeq	r8, r1, ip, ror #29
   1592c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15930:	add	fp, sp, #32
   15934:	sub	sp, sp, #108	; 0x6c
   15938:	str	r0, [fp, #-112]	; 0xffffff90
   1593c:	str	r1, [fp, #-100]	; 0xffffff9c
   15940:	str	r3, [fp, #-104]	; 0xffffff98
   15944:	subs	r3, r2, #0
   15948:	str	r3, [fp, #-132]	; 0xffffff7c
   1594c:	beq	169b8 <argp_failure@@Base+0x1294>
   15950:	mov	r0, r3
   15954:	bl	11198 <flockfile@plt>
   15958:	ldr	r3, [pc, #3772]	; 1681c <argp_failure@@Base+0x10f8>
   1595c:	ldr	r3, [r3, #36]	; 0x24
   15960:	str	r3, [fp, #-108]	; 0xffffff94
   15964:	cmp	r3, #0
   15968:	beq	15a40 <argp_failure@@Base+0x31c>
   1596c:	mov	r3, #0
   15970:	ldr	r2, [pc, #3748]	; 1681c <argp_failure@@Base+0x10f8>
   15974:	ldr	r2, [r2, #32]
   15978:	mov	r1, r3
   1597c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15980:	bl	17900 <argp_error@@Base+0xd60>
   15984:	subs	sl, r0, #0
   15988:	beq	15dec <argp_failure@@Base+0x6c8>
   1598c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15990:	tst	r3, #11
   15994:	moveq	r3, #0
   15998:	streq	r3, [fp, #-108]	; 0xffffff94
   1599c:	bne	15df8 <argp_failure@@Base+0x6d4>
   159a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   159a4:	tst	r3, #3
   159a8:	moveq	r4, #0
   159ac:	bne	15e7c <argp_failure@@Base+0x758>
   159b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   159b4:	tst	r3, #16
   159b8:	bne	16078 <argp_failure@@Base+0x954>
   159bc:	ldr	r3, [fp, #-104]	; 0xffffff98
   159c0:	tst	r3, #4
   159c4:	bne	160a0 <argp_failure@@Base+0x97c>
   159c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   159cc:	tst	r3, #8
   159d0:	beq	1692c <argp_failure@@Base+0x1208>
   159d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   159d8:	ldr	r3, [r3, #4]
   159dc:	cmp	r3, #0
   159e0:	beq	1692c <argp_failure@@Base+0x1208>
   159e4:	cmp	r4, #0
   159e8:	beq	15a10 <argp_failure@@Base+0x2ec>
   159ec:	ldr	r2, [sl, #28]
   159f0:	ldr	r3, [sl, #32]
   159f4:	cmp	r2, r3
   159f8:	bcs	160bc <argp_failure@@Base+0x998>
   159fc:	ldr	r3, [sl, #28]
   15a00:	add	r2, r3, #1
   15a04:	str	r2, [sl, #28]
   15a08:	mov	r2, #10
   15a0c:	strb	r2, [r3]
   15a10:	mov	r3, #0
   15a14:	str	r3, [fp, #-88]	; 0xffffffa8
   15a18:	str	r3, [fp, #-84]	; 0xffffffac
   15a1c:	str	r3, [fp, #-80]	; 0xffffffb0
   15a20:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a24:	ldr	r2, [r3]
   15a28:	str	r2, [fp, #-96]	; 0xffffffa0
   15a2c:	ldr	r3, [r3, #4]
   15a30:	str	r3, [fp, #-120]	; 0xffffff88
   15a34:	cmp	r3, #0
   15a38:	bne	164a4 <argp_failure@@Base+0xd80>
   15a3c:	b	16928 <argp_failure@@Base+0x1204>
   15a40:	ldr	r0, [pc, #3452]	; 167c4 <argp_failure@@Base+0x10a0>
   15a44:	bl	11060 <getenv@plt>
   15a48:	mov	r9, r0
   15a4c:	sub	ip, fp, #76	; 0x4c
   15a50:	ldr	lr, [pc, #3524]	; 1681c <argp_failure@@Base+0x10f8>
   15a54:	ldm	lr!, {r0, r1, r2, r3}
   15a58:	stmia	ip!, {r0, r1, r2, r3}
   15a5c:	ldm	lr!, {r0, r1, r2, r3}
   15a60:	stmia	ip!, {r0, r1, r2, r3}
   15a64:	ldm	lr, {r0, r1}
   15a68:	stm	ip, {r0, r1}
   15a6c:	cmp	r9, #0
   15a70:	ldrne	sl, [pc, #3408]	; 167c8 <argp_failure@@Base+0x10a4>
   15a74:	addne	r8, sl, #168	; 0xa8
   15a78:	bne	15d1c <argp_failure@@Base+0x5f8>
   15a7c:	b	1596c <argp_failure@@Base+0x248>
   15a80:	mov	r5, r3
   15a84:	mov	r9, r5
   15a88:	mov	r3, r5
   15a8c:	ldrb	r0, [r3], #1
   15a90:	lsl	r2, r0, #1
   15a94:	ldrh	r2, [r1, r2]
   15a98:	tst	r2, #8192	; 0x2000
   15a9c:	bne	15a80 <argp_failure@@Base+0x35c>
   15aa0:	tst	r2, #1024	; 0x400
   15aa4:	beq	15d14 <argp_failure@@Base+0x5f0>
   15aa8:	cmp	r0, #95	; 0x5f
   15aac:	cmpne	r0, #45	; 0x2d
   15ab0:	moveq	r3, #1
   15ab4:	movne	r3, #0
   15ab8:	lsl	r2, r2, #28
   15abc:	orrs	r3, r3, r2, lsr #31
   15ac0:	beq	16a3c <argp_failure@@Base+0x1318>
   15ac4:	mov	r4, r5
   15ac8:	ldrb	r3, [r4, #1]!
   15acc:	lsl	r2, r3, #1
   15ad0:	ldrh	r2, [r1, r2]
   15ad4:	lsl	r2, r2, #28
   15ad8:	cmp	r3, #95	; 0x5f
   15adc:	cmpne	r3, #45	; 0x2d
   15ae0:	moveq	r3, #1
   15ae4:	movne	r3, #0
   15ae8:	orrs	r3, r3, r2, lsr #31
   15aec:	bne	15ac8 <argp_failure@@Base+0x3a4>
   15af0:	sub	r5, r4, r5
   15af4:	ldrb	r3, [r4]
   15af8:	lsl	r2, r3, #1
   15afc:	ldrh	r2, [r1, r2]
   15b00:	tst	r2, #8192	; 0x2000
   15b04:	beq	15b1c <argp_failure@@Base+0x3f8>
   15b08:	ldrb	r3, [r4, #1]!
   15b0c:	lsl	r2, r3, #1
   15b10:	ldrh	r2, [r1, r2]
   15b14:	tst	r2, #8192	; 0x2000
   15b18:	bne	15b08 <argp_failure@@Base+0x3e4>
   15b1c:	cmp	r3, #44	; 0x2c
   15b20:	cmpne	r3, #0
   15b24:	beq	16a54 <argp_failure@@Base+0x1330>
   15b28:	cmp	r3, #61	; 0x3d
   15b2c:	beq	15b54 <argp_failure@@Base+0x430>
   15b30:	ldrb	r3, [r4]
   15b34:	lsl	r3, r3, #1
   15b38:	ldrh	r3, [r1, r3]
   15b3c:	tst	r3, #2048	; 0x800
   15b40:	bne	15bd4 <argp_failure@@Base+0x4b0>
   15b44:	ldr	r3, [fp, #-108]	; 0xffffff94
   15b48:	str	r3, [fp, #-96]	; 0xffffffa0
   15b4c:	str	r3, [fp, #-116]	; 0xffffff8c
   15b50:	b	16a68 <argp_failure@@Base+0x1344>
   15b54:	add	r2, r4, #1
   15b58:	ldrb	r3, [r4, #1]
   15b5c:	lsl	r3, r3, #1
   15b60:	ldrh	r3, [r1, r3]
   15b64:	tst	r3, #8192	; 0x2000
   15b68:	beq	16a4c <argp_failure@@Base+0x1328>
   15b6c:	ldrb	r3, [r2, #1]!
   15b70:	lsl	r3, r3, #1
   15b74:	ldrh	r3, [r1, r3]
   15b78:	tst	r3, #8192	; 0x2000
   15b7c:	bne	15b6c <argp_failure@@Base+0x448>
   15b80:	mov	r4, r2
   15b84:	b	15b30 <argp_failure@@Base+0x40c>
   15b88:	ldrb	r3, [r9, #1]
   15b8c:	cmp	r3, #111	; 0x6f
   15b90:	movne	r3, #1
   15b94:	strne	r3, [fp, #-96]	; 0xffffffa0
   15b98:	strne	r3, [fp, #-116]	; 0xffffff8c
   15b9c:	bne	16a68 <argp_failure@@Base+0x1344>
   15ba0:	ldrb	r3, [r9, #2]
   15ba4:	cmp	r3, #45	; 0x2d
   15ba8:	movne	r3, #1
   15bac:	strne	r3, [fp, #-96]	; 0xffffffa0
   15bb0:	strne	r3, [fp, #-116]	; 0xffffff8c
   15bb4:	bne	16a68 <argp_failure@@Base+0x1344>
   15bb8:	add	r9, r9, #3
   15bbc:	sub	r5, r5, #3
   15bc0:	ldr	r3, [fp, #-108]	; 0xffffff94
   15bc4:	str	r3, [fp, #-116]	; 0xffffff8c
   15bc8:	mov	r3, #1
   15bcc:	str	r3, [fp, #-96]	; 0xffffffa0
   15bd0:	b	16a68 <argp_failure@@Base+0x1344>
   15bd4:	mov	r2, #10
   15bd8:	mov	r1, #0
   15bdc:	mov	r0, r4
   15be0:	bl	10f7c <strtol@plt>
   15be4:	str	r0, [fp, #-116]	; 0xffffff8c
   15be8:	ldr	r2, [r6]
   15bec:	ldrb	r3, [r4]
   15bf0:	lsl	r3, r3, #1
   15bf4:	ldrh	r3, [r2, r3]
   15bf8:	tst	r3, #2048	; 0x800
   15bfc:	beq	15c14 <argp_failure@@Base+0x4f0>
   15c00:	ldrb	r3, [r4, #1]!
   15c04:	lsl	r3, r3, #1
   15c08:	ldrh	r3, [r2, r3]
   15c0c:	tst	r3, #2048	; 0x800
   15c10:	bne	15c00 <argp_failure@@Base+0x4dc>
   15c14:	ldrb	r3, [r4]
   15c18:	lsl	r3, r3, #1
   15c1c:	ldrh	r3, [r2, r3]
   15c20:	tst	r3, #8192	; 0x2000
   15c24:	beq	15c48 <argp_failure@@Base+0x524>
   15c28:	ldrb	r3, [r4, #1]!
   15c2c:	lsl	r3, r3, #1
   15c30:	ldrh	r3, [r2, r3]
   15c34:	tst	r3, #8192	; 0x2000
   15c38:	bne	15c28 <argp_failure@@Base+0x504>
   15c3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15c40:	str	r3, [fp, #-96]	; 0xffffffa0
   15c44:	b	16a68 <argp_failure@@Base+0x1344>
   15c48:	ldr	r3, [fp, #-108]	; 0xffffff94
   15c4c:	str	r3, [fp, #-96]	; 0xffffffa0
   15c50:	b	16a68 <argp_failure@@Base+0x1344>
   15c54:	str	r9, [sp, #4]
   15c58:	str	r7, [sp]
   15c5c:	ldr	r3, [pc, #2920]	; 167cc <argp_failure@@Base+0x10a8>
   15c60:	mov	r2, #0
   15c64:	mov	r1, r2
   15c68:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15c6c:	bl	15724 <argp_failure@@Base>
   15c70:	b	15cd8 <argp_failure@@Base+0x5b4>
   15c74:	add	r6, r6, #16
   15c78:	cmp	r6, r8
   15c7c:	beq	15cf4 <argp_failure@@Base+0x5d0>
   15c80:	mov	r0, r6
   15c84:	bl	110fc <strlen@plt>
   15c88:	mov	r7, r0
   15c8c:	cmp	r0, r5
   15c90:	bne	15c74 <argp_failure@@Base+0x550>
   15c94:	mov	r2, r5
   15c98:	mov	r1, r6
   15c9c:	mov	r0, r9
   15ca0:	bl	111e0 <strncmp@plt>
   15ca4:	cmp	r0, #0
   15ca8:	bne	15c74 <argp_failure@@Base+0x550>
   15cac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15cb0:	cmp	r3, #0
   15cb4:	beq	15cc4 <argp_failure@@Base+0x5a0>
   15cb8:	ldrb	r3, [r6, #14]
   15cbc:	cmp	r3, #0
   15cc0:	beq	15c54 <argp_failure@@Base+0x530>
   15cc4:	ldrb	r3, [r6, #15]
   15cc8:	sub	r2, fp, #36	; 0x24
   15ccc:	add	r3, r2, r3
   15cd0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15cd4:	str	r2, [r3, #-40]	; 0xffffffd8
   15cd8:	cmp	r6, r8
   15cdc:	beq	15cf4 <argp_failure@@Base+0x5d0>
   15ce0:	ldrb	r3, [r4]
   15ce4:	cmp	r3, #44	; 0x2c
   15ce8:	addeq	r9, r4, #1
   15cec:	movne	r9, r4
   15cf0:	b	15d1c <argp_failure@@Base+0x5f8>
   15cf4:	str	r9, [sp, #4]
   15cf8:	str	r5, [sp]
   15cfc:	ldr	r3, [pc, #2764]	; 167d0 <argp_failure@@Base+0x10ac>
   15d00:	mov	r2, #0
   15d04:	mov	r1, r2
   15d08:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15d0c:	bl	15724 <argp_failure@@Base>
   15d10:	b	15ce0 <argp_failure@@Base+0x5bc>
   15d14:	cmp	r0, #0
   15d18:	bne	15d3c <argp_failure@@Base+0x618>
   15d1c:	ldrb	r3, [r9]
   15d20:	cmp	r3, #0
   15d24:	beq	15d54 <argp_failure@@Base+0x630>
   15d28:	bl	110d8 <__ctype_b_loc@plt>
   15d2c:	mov	r6, r0
   15d30:	ldr	r1, [r0]
   15d34:	mov	r5, r9
   15d38:	b	15a84 <argp_failure@@Base+0x360>
   15d3c:	str	r5, [sp]
   15d40:	ldr	r3, [pc, #2700]	; 167d4 <argp_failure@@Base+0x10b0>
   15d44:	mov	r2, #0
   15d48:	mov	r1, r2
   15d4c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15d50:	bl	15724 <argp_failure@@Base>
   15d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d58:	ldr	r3, [pc, #2680]	; 167d8 <argp_failure@@Base+0x10b4>
   15d5c:	add	r1, r3, #144	; 0x90
   15d60:	add	r3, r3, #16
   15d64:	cmp	r3, r1
   15d68:	beq	15dbc <argp_failure@@Base+0x698>
   15d6c:	ldrb	r2, [r3, #14]
   15d70:	cmp	r2, #0
   15d74:	bne	15d60 <argp_failure@@Base+0x63c>
   15d78:	ldrb	r2, [r3, #15]
   15d7c:	cmp	r2, #32
   15d80:	beq	15d60 <argp_failure@@Base+0x63c>
   15d84:	sub	ip, fp, #36	; 0x24
   15d88:	add	r2, ip, r2
   15d8c:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15d90:	cmp	r2, r0
   15d94:	blt	15d60 <argp_failure@@Base+0x63c>
   15d98:	str	r3, [sp, #4]
   15d9c:	ldr	r3, [pc, #2616]	; 167dc <argp_failure@@Base+0x10b8>
   15da0:	str	r3, [sp]
   15da4:	ldr	r3, [pc, #2612]	; 167e0 <argp_failure@@Base+0x10bc>
   15da8:	mov	r2, #0
   15dac:	mov	r1, r2
   15db0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15db4:	bl	15724 <argp_failure@@Base>
   15db8:	b	1596c <argp_failure@@Base+0x248>
   15dbc:	ldr	r4, [pc, #2648]	; 1681c <argp_failure@@Base+0x10f8>
   15dc0:	mov	ip, r4
   15dc4:	sub	lr, fp, #76	; 0x4c
   15dc8:	ldm	lr!, {r0, r1, r2, r3}
   15dcc:	stmia	ip!, {r0, r1, r2, r3}
   15dd0:	ldm	lr!, {r0, r1, r2, r3}
   15dd4:	stmia	ip!, {r0, r1, r2, r3}
   15dd8:	ldm	lr, {r0, r1}
   15ddc:	stm	ip, {r0, r1}
   15de0:	mov	r3, #1
   15de4:	str	r3, [r4, #36]	; 0x24
   15de8:	b	1596c <argp_failure@@Base+0x248>
   15dec:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15df0:	bl	11024 <funlockfile@plt>
   15df4:	b	169b8 <argp_failure@@Base+0x1294>
   15df8:	mov	r1, #0
   15dfc:	ldr	r0, [fp, #-112]	; 0xffffff90
   15e00:	bl	15068 <argp_parse@@Base+0x2fb4>
   15e04:	str	r0, [fp, #-108]	; 0xffffff94
   15e08:	ldr	r1, [pc, #2516]	; 167e4 <argp_failure@@Base+0x10c0>
   15e0c:	bl	13f70 <argp_parse@@Base+0x1ebc>
   15e10:	cmp	r0, #0
   15e14:	mvnne	r3, #0
   15e18:	strne	r3, [r0, #12]
   15e1c:	ldr	r1, [pc, #2500]	; 167e8 <argp_failure@@Base+0x10c4>
   15e20:	ldr	r0, [fp, #-108]	; 0xffffff94
   15e24:	bl	13f70 <argp_parse@@Base+0x1ebc>
   15e28:	cmp	r0, #0
   15e2c:	mvnne	r3, #0
   15e30:	strne	r3, [r0, #12]
   15e34:	ldr	r0, [fp, #-108]	; 0xffffff94
   15e38:	ldr	r3, [r0, #4]
   15e3c:	cmp	r3, #0
   15e40:	beq	159a0 <argp_failure@@Base+0x27c>
   15e44:	ldr	r2, [r0]
   15e48:	mov	r3, #0
   15e4c:	str	r3, [r2, #24]
   15e50:	add	r3, r3, #1
   15e54:	add	r2, r2, #28
   15e58:	ldr	r1, [r0, #4]
   15e5c:	cmp	r3, r1
   15e60:	bcc	15e4c <argp_failure@@Base+0x728>
   15e64:	ldr	r3, [pc, #2432]	; 167ec <argp_failure@@Base+0x10c8>
   15e68:	mov	r2, #28
   15e6c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15e70:	ldr	r0, [r0]
   15e74:	bl	111bc <qsort@plt>
   15e78:	b	159a0 <argp_failure@@Base+0x27c>
   15e7c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15e80:	bl	14008 <argp_parse@@Base+0x1f54>
   15e84:	mov	r2, r0
   15e88:	add	r3, r0, #14
   15e8c:	bic	r3, r3, #7
   15e90:	sub	sp, sp, r3
   15e94:	add	r8, sp, #8
   15e98:	mov	r1, #0
   15e9c:	mov	r0, r8
   15ea0:	bl	11138 <memset@plt>
   15ea4:	mov	r5, #1
   15ea8:	ldr	r4, [pc, #2412]	; 1681c <argp_failure@@Base+0x10f8>
   15eac:	ldr	r9, [pc, #2364]	; 167f0 <argp_failure@@Base+0x10cc>
   15eb0:	str	r8, [fp, #-96]	; 0xffffffa0
   15eb4:	ldr	r8, [fp, #-104]	; 0xffffff98
   15eb8:	b	15f68 <argp_failure@@Base+0x844>
   15ebc:	mov	r0, sl
   15ec0:	bl	17978 <argp_error@@Base+0xdd8>
   15ec4:	b	15f84 <argp_failure@@Base+0x860>
   15ec8:	mov	r0, sl
   15ecc:	bl	17978 <argp_error@@Base+0xdd8>
   15ed0:	b	15fcc <argp_failure@@Base+0x8a8>
   15ed4:	mov	r1, sl
   15ed8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15edc:	bl	13d60 <argp_parse@@Base+0x1cac>
   15ee0:	orr	r8, r8, #2
   15ee4:	str	sl, [sp]
   15ee8:	mov	r3, #1
   15eec:	sub	r2, fp, #76	; 0x4c
   15ef0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15ef4:	ldr	r0, [fp, #-112]	; 0xffffff90
   15ef8:	bl	14288 <argp_parse@@Base+0x21d4>
   15efc:	mov	r6, r0
   15f00:	ldr	r3, [sl, #28]
   15f04:	ldr	r2, [sl, #24]
   15f08:	sub	r3, r3, r2
   15f0c:	ldr	r2, [sl, #16]
   15f10:	cmp	r3, r2
   15f14:	bhi	1603c <argp_failure@@Base+0x918>
   15f18:	str	r7, [sl, #12]
   15f1c:	ldr	r3, [sl, #28]
   15f20:	ldr	r2, [sl, #24]
   15f24:	sub	r3, r3, r2
   15f28:	ldr	r2, [sl, #16]
   15f2c:	cmp	r3, r2
   15f30:	bhi	16048 <argp_failure@@Base+0x924>
   15f34:	str	r5, [sl, #4]
   15f38:	ldr	r2, [sl, #28]
   15f3c:	ldr	r3, [sl, #32]
   15f40:	cmp	r2, r3
   15f44:	bcs	16054 <argp_failure@@Base+0x930>
   15f48:	ldr	r3, [sl, #28]
   15f4c:	add	r2, r3, #1
   15f50:	str	r2, [sl, #28]
   15f54:	mov	r2, #10
   15f58:	strb	r2, [r3]
   15f5c:	mov	r5, #0
   15f60:	cmp	r6, r5
   15f64:	beq	1606c <argp_failure@@Base+0x948>
   15f68:	ldr	r6, [r4, #28]
   15f6c:	ldr	r3, [sl, #28]
   15f70:	ldr	r2, [sl, #24]
   15f74:	sub	r3, r3, r2
   15f78:	ldr	r2, [sl, #16]
   15f7c:	cmp	r3, r2
   15f80:	bhi	15ebc <argp_failure@@Base+0x798>
   15f84:	ldr	r7, [sl, #12]
   15f88:	str	r6, [sl, #12]
   15f8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f90:	str	r3, [fp, #-76]	; 0xffffffb4
   15f94:	cmp	r5, #0
   15f98:	ldr	r3, [fp, #4]
   15f9c:	ldrne	r2, [pc, #2128]	; 167f4 <argp_failure@@Base+0x10d0>
   15fa0:	ldreq	r2, [pc, #2128]	; 167f8 <argp_failure@@Base+0x10d4>
   15fa4:	mov	r1, r9
   15fa8:	mov	r0, sl
   15fac:	bl	1800c <argp_error@@Base+0x146c>
   15fb0:	ldr	r6, [r4, #28]
   15fb4:	ldr	r3, [sl, #28]
   15fb8:	ldr	r2, [sl, #24]
   15fbc:	sub	r3, r3, r2
   15fc0:	ldr	r2, [sl, #16]
   15fc4:	cmp	r3, r2
   15fc8:	bhi	15ec8 <argp_failure@@Base+0x7a4>
   15fcc:	ldr	r5, [sl, #4]
   15fd0:	str	r6, [sl, #4]
   15fd4:	tst	r8, #2
   15fd8:	beq	15ed4 <argp_failure@@Base+0x7b0>
   15fdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   15fe0:	ldr	r3, [r3, #4]
   15fe4:	cmp	r3, #0
   15fe8:	beq	15ee4 <argp_failure@@Base+0x7c0>
   15fec:	ldr	r3, [sl, #28]
   15ff0:	add	r3, r3, #12
   15ff4:	ldr	r2, [sl, #32]
   15ff8:	cmp	r2, r3
   15ffc:	bcs	16014 <argp_failure@@Base+0x8f0>
   16000:	mov	r1, #12
   16004:	mov	r0, sl
   16008:	bl	17f1c <argp_error@@Base+0x137c>
   1600c:	cmp	r0, #0
   16010:	beq	15ee4 <argp_failure@@Base+0x7c0>
   16014:	ldr	ip, [sl, #28]
   16018:	ldr	r3, [pc, #2012]	; 167fc <argp_failure@@Base+0x10d8>
   1601c:	ldm	r3!, {r0, r1, r2}
   16020:	str	r0, [ip]
   16024:	str	r1, [ip, #4]
   16028:	str	r2, [ip, #8]
   1602c:	ldr	r3, [sl, #28]
   16030:	add	r3, r3, #12
   16034:	str	r3, [sl, #28]
   16038:	b	15ee4 <argp_failure@@Base+0x7c0>
   1603c:	mov	r0, sl
   16040:	bl	17978 <argp_error@@Base+0xdd8>
   16044:	b	15f18 <argp_failure@@Base+0x7f4>
   16048:	mov	r0, sl
   1604c:	bl	17978 <argp_error@@Base+0xdd8>
   16050:	b	15f34 <argp_failure@@Base+0x810>
   16054:	mov	r1, #1
   16058:	mov	r0, sl
   1605c:	bl	17f1c <argp_error@@Base+0x137c>
   16060:	cmp	r0, #0
   16064:	beq	15f5c <argp_failure@@Base+0x838>
   16068:	b	15f48 <argp_failure@@Base+0x824>
   1606c:	str	r8, [fp, #-104]	; 0xffffff98
   16070:	mov	r4, #1
   16074:	b	159b0 <argp_failure@@Base+0x28c>
   16078:	str	sl, [sp, #4]
   1607c:	mov	r3, #1
   16080:	str	r3, [sp]
   16084:	mov	r3, #0
   16088:	mov	r2, r3
   1608c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16090:	ldr	r0, [fp, #-112]	; 0xffffff90
   16094:	bl	147e0 <argp_parse@@Base+0x272c>
   16098:	orr	r4, r4, r0
   1609c:	b	159bc <argp_failure@@Base+0x298>
   160a0:	ldr	r3, [fp, #4]
   160a4:	mov	r2, r3
   160a8:	ldr	r1, [pc, #1872]	; 16800 <argp_failure@@Base+0x10dc>
   160ac:	mov	r0, sl
   160b0:	bl	1800c <argp_error@@Base+0x146c>
   160b4:	mov	r4, #1
   160b8:	b	159c8 <argp_failure@@Base+0x2a4>
   160bc:	mov	r1, #1
   160c0:	mov	r0, sl
   160c4:	bl	17f1c <argp_error@@Base+0x137c>
   160c8:	cmp	r0, #0
   160cc:	beq	15a10 <argp_failure@@Base+0x2ec>
   160d0:	b	159fc <argp_failure@@Base+0x2d8>
   160d4:	mov	r0, sl
   160d8:	bl	17978 <argp_error@@Base+0xdd8>
   160dc:	b	164c8 <argp_failure@@Base+0xda4>
   160e0:	add	r3, r3, #24
   160e4:	subs	r2, r2, #1
   160e8:	beq	1610c <argp_failure@@Base+0x9e8>
   160ec:	ldr	r1, [r3, #-24]	; 0xffffffe8
   160f0:	cmp	r1, #0
   160f4:	beq	160e0 <argp_failure@@Base+0x9bc>
   160f8:	ldr	r1, [r3, #-12]
   160fc:	tst	r1, #2
   16100:	bne	160e0 <argp_failure@@Base+0x9bc>
   16104:	mov	r3, #1
   16108:	str	r3, [fp, #-116]	; 0xffffff8c
   1610c:	ldr	r3, [pc, #1800]	; 1681c <argp_failure@@Base+0x10f8>
   16110:	ldr	r4, [r3, #8]
   16114:	ldr	r3, [sl, #28]
   16118:	ldr	r2, [sl, #24]
   1611c:	sub	r3, r3, r2
   16120:	ldr	r2, [sl, #16]
   16124:	cmp	r3, r2
   16128:	bhi	16148 <argp_failure@@Base+0xa24>
   1612c:	str	r4, [sl, #12]
   16130:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16134:	ldr	r5, [r3, #4]
   16138:	cmp	r5, #0
   1613c:	beq	16244 <argp_failure@@Base+0xb20>
   16140:	mov	r4, r8
   16144:	b	16a88 <argp_failure@@Base+0x1364>
   16148:	mov	r0, sl
   1614c:	bl	17978 <argp_error@@Base+0xdd8>
   16150:	b	1612c <argp_failure@@Base+0xa08>
   16154:	tst	r6, #2
   16158:	beq	16164 <argp_failure@@Base+0xa40>
   1615c:	add	r9, r9, #1
   16160:	b	16a7c <argp_failure@@Base+0x1358>
   16164:	sub	r1, fp, #76	; 0x4c
   16168:	ldr	r3, [pc, #1708]	; 1681c <argp_failure@@Base+0x10f8>
   1616c:	ldr	r0, [r3, #8]
   16170:	bl	1465c <argp_parse@@Base+0x25a8>
   16174:	ldr	r2, [sl, #28]
   16178:	ldr	r3, [sl, #32]
   1617c:	cmp	r2, r3
   16180:	bcs	16200 <argp_failure@@Base+0xadc>
   16184:	ldr	r3, [sl, #28]
   16188:	add	r2, r3, #1
   1618c:	str	r2, [sl, #28]
   16190:	mov	r2, #45	; 0x2d
   16194:	strb	r2, [r3]
   16198:	ldrb	r6, [r9]
   1619c:	ldr	r2, [sl, #28]
   161a0:	ldr	r3, [sl, #32]
   161a4:	cmp	r2, r3
   161a8:	bcs	16218 <argp_failure@@Base+0xaf4>
   161ac:	ldr	r3, [sl, #28]
   161b0:	add	r2, r3, #1
   161b4:	str	r2, [sl, #28]
   161b8:	strb	r6, [r3]
   161bc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   161c0:	cmp	r3, #0
   161c4:	beq	161d8 <argp_failure@@Base+0xab4>
   161c8:	ldr	r3, [pc, #1612]	; 1681c <argp_failure@@Base+0x10f8>
   161cc:	ldr	r3, [r3]
   161d0:	cmp	r3, #0
   161d4:	beq	16230 <argp_failure@@Base+0xb0c>
   161d8:	ldr	r2, [r8, #8]
   161dc:	cmp	r2, #0
   161e0:	beq	1615c <argp_failure@@Base+0xa38>
   161e4:	ldr	r3, [r8, #12]
   161e8:	tst	r3, #1
   161ec:	ldrne	r1, [pc, #1552]	; 16804 <argp_failure@@Base+0x10e0>
   161f0:	ldreq	r1, [pc, #1552]	; 16808 <argp_failure@@Base+0x10e4>
   161f4:	mov	r0, sl
   161f8:	bl	1800c <argp_error@@Base+0x146c>
   161fc:	b	1615c <argp_failure@@Base+0xa38>
   16200:	mov	r1, #1
   16204:	mov	r0, sl
   16208:	bl	17f1c <argp_error@@Base+0x137c>
   1620c:	cmp	r0, #0
   16210:	beq	16198 <argp_failure@@Base+0xa74>
   16214:	b	16184 <argp_failure@@Base+0xa60>
   16218:	mov	r1, #1
   1621c:	mov	r0, sl
   16220:	bl	17f1c <argp_error@@Base+0x137c>
   16224:	cmp	r0, #0
   16228:	beq	161bc <argp_failure@@Base+0xa98>
   1622c:	b	161ac <argp_failure@@Base+0xa88>
   16230:	ldr	r3, [r8, #8]
   16234:	cmp	r3, #0
   16238:	movne	r3, #1
   1623c:	strne	r3, [fp, #-80]	; 0xffffffb0
   16240:	b	1615c <argp_failure@@Base+0xa38>
   16244:	ldr	r3, [r8, #12]
   16248:	tst	r3, #8
   1624c:	beq	16328 <argp_failure@@Base+0xc04>
   16250:	ldr	r3, [pc, #1476]	; 1681c <argp_failure@@Base+0x10f8>
   16254:	ldr	r4, [r3, #16]
   16258:	ldr	r3, [sl, #28]
   1625c:	ldr	r2, [sl, #24]
   16260:	sub	r3, r3, r2
   16264:	ldr	r2, [sl, #16]
   16268:	cmp	r3, r2
   1626c:	bhi	1628c <argp_failure@@Base+0xb68>
   16270:	str	r4, [sl, #12]
   16274:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16278:	ldr	r5, [r3, #4]
   1627c:	cmp	r5, #0
   16280:	beq	163dc <argp_failure@@Base+0xcb8>
   16284:	add	r4, r8, #24
   16288:	b	162c0 <argp_failure@@Base+0xb9c>
   1628c:	mov	r0, sl
   16290:	bl	17978 <argp_error@@Base+0xdd8>
   16294:	b	16270 <argp_failure@@Base+0xb4c>
   16298:	mov	r2, r6
   1629c:	mov	r1, r7
   162a0:	ldr	r0, [sl, #28]
   162a4:	bl	10fd0 <memcpy@plt>
   162a8:	ldr	r3, [sl, #28]
   162ac:	add	r6, r3, r6
   162b0:	str	r6, [sl, #28]
   162b4:	add	r4, r4, #24
   162b8:	subs	r5, r5, #1
   162bc:	beq	163dc <argp_failure@@Base+0xcb8>
   162c0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   162c4:	cmp	r3, #0
   162c8:	beq	162b4 <argp_failure@@Base+0xb90>
   162cc:	ldr	r3, [r4, #-12]
   162d0:	tst	r3, #2
   162d4:	bne	162b4 <argp_failure@@Base+0xb90>
   162d8:	sub	r1, fp, #76	; 0x4c
   162dc:	ldr	r3, [pc, #1336]	; 1681c <argp_failure@@Base+0x10f8>
   162e0:	ldr	r0, [r3, #16]
   162e4:	bl	1465c <argp_parse@@Base+0x25a8>
   162e8:	ldr	r7, [r4, #-24]	; 0xffffffe8
   162ec:	mov	r0, r7
   162f0:	bl	110fc <strlen@plt>
   162f4:	subs	r6, r0, #0
   162f8:	beq	162b4 <argp_failure@@Base+0xb90>
   162fc:	ldr	r3, [sl, #28]
   16300:	add	r3, r3, r6
   16304:	ldr	r2, [sl, #32]
   16308:	cmp	r2, r3
   1630c:	bcs	16298 <argp_failure@@Base+0xb74>
   16310:	mov	r1, r6
   16314:	mov	r0, sl
   16318:	bl	17f1c <argp_error@@Base+0x137c>
   1631c:	cmp	r0, #0
   16320:	beq	162b4 <argp_failure@@Base+0xb90>
   16324:	b	16298 <argp_failure@@Base+0xb74>
   16328:	ldr	r3, [pc, #1260]	; 1681c <argp_failure@@Base+0x10f8>
   1632c:	ldr	r4, [r3, #12]
   16330:	ldr	r3, [sl, #28]
   16334:	ldr	r2, [sl, #24]
   16338:	sub	r3, r3, r2
   1633c:	ldr	r2, [sl, #16]
   16340:	cmp	r3, r2
   16344:	bhi	16364 <argp_failure@@Base+0xc40>
   16348:	str	r4, [sl, #12]
   1634c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16350:	ldr	r5, [r3, #4]
   16354:	cmp	r5, #0
   16358:	beq	163dc <argp_failure@@Base+0xcb8>
   1635c:	add	r4, r8, #24
   16360:	b	1637c <argp_failure@@Base+0xc58>
   16364:	mov	r0, sl
   16368:	bl	17978 <argp_error@@Base+0xdd8>
   1636c:	b	16348 <argp_failure@@Base+0xc24>
   16370:	add	r4, r4, #24
   16374:	subs	r5, r5, #1
   16378:	beq	163dc <argp_failure@@Base+0xcb8>
   1637c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16380:	cmp	r3, #0
   16384:	beq	16370 <argp_failure@@Base+0xc4c>
   16388:	ldr	r3, [r4, #-12]
   1638c:	tst	r3, #2
   16390:	bne	16370 <argp_failure@@Base+0xc4c>
   16394:	sub	r1, fp, #76	; 0x4c
   16398:	ldr	r3, [pc, #1148]	; 1681c <argp_failure@@Base+0x10f8>
   1639c:	ldr	r0, [r3, #12]
   163a0:	bl	1465c <argp_parse@@Base+0x25a8>
   163a4:	ldr	r2, [r4, #-24]	; 0xffffffe8
   163a8:	ldr	r1, [pc, #1116]	; 1680c <argp_failure@@Base+0x10e8>
   163ac:	mov	r0, sl
   163b0:	bl	1800c <argp_error@@Base+0x146c>
   163b4:	ldr	r2, [r8, #8]
   163b8:	cmp	r2, #0
   163bc:	beq	16370 <argp_failure@@Base+0xc4c>
   163c0:	ldr	r3, [r8, #12]
   163c4:	tst	r3, #1
   163c8:	ldrne	r1, [pc, #1088]	; 16810 <argp_failure@@Base+0x10ec>
   163cc:	ldreq	r1, [pc, #1088]	; 16814 <argp_failure@@Base+0x10f0>
   163d0:	mov	r0, sl
   163d4:	bl	1800c <argp_error@@Base+0x146c>
   163d8:	b	16370 <argp_failure@@Base+0xc4c>
   163dc:	ldr	r3, [sl, #28]
   163e0:	ldr	r2, [sl, #24]
   163e4:	sub	r3, r3, r2
   163e8:	ldr	r2, [sl, #16]
   163ec:	cmp	r3, r2
   163f0:	bhi	16530 <argp_failure@@Base+0xe0c>
   163f4:	mov	r3, #0
   163f8:	str	r3, [sl, #4]
   163fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16400:	cmp	r3, #0
   16404:	beq	16554 <argp_failure@@Base+0xe30>
   16408:	ldr	r3, [r8, #12]
   1640c:	tst	r3, #8
   16410:	bne	1643c <argp_failure@@Base+0xd18>
   16414:	ldr	r4, [r8, #4]
   16418:	sub	r3, r4, #1
   1641c:	cmp	r3, #254	; 0xfe
   16420:	bhi	1643c <argp_failure@@Base+0xd18>
   16424:	bl	110d8 <__ctype_b_loc@plt>
   16428:	ldr	r3, [r0]
   1642c:	lsl	r4, r4, #1
   16430:	ldrh	r3, [r3, r4]
   16434:	tst	r3, #16384	; 0x4000
   16438:	bne	16448 <argp_failure@@Base+0xd24>
   1643c:	ldr	r3, [r8]
   16440:	cmp	r3, #0
   16444:	beq	1653c <argp_failure@@Base+0xe18>
   16448:	ldr	r3, [sl, #28]
   1644c:	ldr	r2, [sl, #24]
   16450:	sub	r3, r3, r2
   16454:	ldr	r2, [sl, #16]
   16458:	cmp	r3, r2
   1645c:	bhi	167ac <argp_failure@@Base+0x1088>
   16460:	ldr	r3, [fp, #-124]	; 0xffffff84
   16464:	str	r3, [sl, #4]
   16468:	ldr	r3, [sl, #28]
   1646c:	ldr	r2, [sl, #24]
   16470:	sub	r3, r3, r2
   16474:	ldr	r2, [sl, #16]
   16478:	cmp	r3, r2
   1647c:	bhi	167b8 <argp_failure@@Base+0x1094>
   16480:	ldr	r3, [fp, #-128]	; 0xffffff80
   16484:	str	r3, [sl, #12]
   16488:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1648c:	add	r3, r3, #28
   16490:	str	r3, [fp, #-96]	; 0xffffffa0
   16494:	ldr	r3, [fp, #-120]	; 0xffffff88
   16498:	subs	r3, r3, #1
   1649c:	str	r3, [fp, #-120]	; 0xffffff88
   164a0:	beq	16830 <argp_failure@@Base+0x110c>
   164a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164a8:	ldr	r8, [r3]
   164ac:	ldr	r9, [r3, #8]
   164b0:	ldr	r3, [sl, #28]
   164b4:	ldr	r2, [sl, #24]
   164b8:	sub	r3, r3, r2
   164bc:	ldr	r2, [sl, #16]
   164c0:	cmp	r3, r2
   164c4:	bhi	160d4 <argp_failure@@Base+0x9b0>
   164c8:	ldr	r3, [sl, #4]
   164cc:	str	r3, [fp, #-124]	; 0xffffff84
   164d0:	mov	r3, #0
   164d4:	str	r3, [sl, #4]
   164d8:	ldr	r3, [sl, #12]
   164dc:	str	r3, [fp, #-128]	; 0xffffff80
   164e0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   164e4:	str	r2, [fp, #-76]	; 0xffffffb4
   164e8:	str	sl, [fp, #-72]	; 0xffffffb8
   164ec:	sub	r3, fp, #88	; 0x58
   164f0:	str	r3, [fp, #-68]	; 0xffffffbc
   164f4:	mov	r3, #1
   164f8:	str	r3, [fp, #-64]	; 0xffffffc0
   164fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16500:	str	r3, [fp, #-60]	; 0xffffffc4
   16504:	ldr	r3, [r8, #12]
   16508:	ands	r3, r3, #8
   1650c:	str	r3, [fp, #-116]	; 0xffffff8c
   16510:	movne	r3, #0
   16514:	strne	r3, [fp, #-116]	; 0xffffff8c
   16518:	bne	1610c <argp_failure@@Base+0x9e8>
   1651c:	ldr	r2, [r2, #4]
   16520:	cmp	r2, #0
   16524:	beq	1610c <argp_failure@@Base+0x9e8>
   16528:	add	r3, r8, #24
   1652c:	b	160ec <argp_failure@@Base+0x9c8>
   16530:	mov	r0, sl
   16534:	bl	17978 <argp_error@@Base+0xdd8>
   16538:	b	163f4 <argp_failure@@Base+0xcd0>
   1653c:	sub	r2, fp, #76	; 0x4c
   16540:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16544:	ldr	r1, [r3, #20]
   16548:	ldr	r0, [r8, #16]
   1654c:	bl	14478 <argp_parse@@Base+0x23c4>
   16550:	b	166ac <argp_failure@@Base+0xf88>
   16554:	ldr	r7, [r8, #16]
   16558:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1655c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16560:	ldr	r2, [r2, #20]
   16564:	ldr	r1, [r8, #4]
   16568:	mov	r0, r7
   1656c:	bl	14244 <argp_parse@@Base+0x2190>
   16570:	subs	r4, r0, #0
   16574:	beq	16668 <argp_failure@@Base+0xf44>
   16578:	ldrb	r3, [r4]
   1657c:	cmp	r3, #0
   16580:	beq	16660 <argp_failure@@Base+0xf3c>
   16584:	ldr	r3, [sl, #28]
   16588:	ldr	r2, [sl, #24]
   1658c:	sub	r3, r3, r2
   16590:	ldr	r2, [sl, #16]
   16594:	cmp	r3, r2
   16598:	bhi	166b8 <argp_failure@@Base+0xf94>
   1659c:	ldr	r5, [sl, #20]
   165a0:	bic	r5, r5, r5, asr #31
   165a4:	ldr	r3, [pc, #624]	; 1681c <argp_failure@@Base+0x10f8>
   165a8:	ldr	r6, [r3, #20]
   165ac:	str	r6, [sl, #4]
   165b0:	ldr	r3, [pc, #612]	; 1681c <argp_failure@@Base+0x10f8>
   165b4:	ldr	r6, [r3, #20]
   165b8:	ldr	r3, [sl, #28]
   165bc:	ldr	r2, [sl, #24]
   165c0:	sub	r3, r3, r2
   165c4:	ldr	r2, [sl, #16]
   165c8:	cmp	r3, r2
   165cc:	bhi	166f4 <argp_failure@@Base+0xfd0>
   165d0:	str	r6, [sl, #12]
   165d4:	ldr	r3, [pc, #576]	; 1681c <argp_failure@@Base+0x10f8>
   165d8:	ldr	r1, [r3, #20]
   165dc:	add	r3, r1, #3
   165e0:	cmp	r3, r5
   165e4:	bcs	16718 <argp_failure@@Base+0xff4>
   165e8:	ldr	r2, [sl, #28]
   165ec:	ldr	r3, [sl, #32]
   165f0:	cmp	r2, r3
   165f4:	bcs	16700 <argp_failure@@Base+0xfdc>
   165f8:	ldr	r3, [sl, #28]
   165fc:	add	r2, r3, #1
   16600:	str	r2, [sl, #28]
   16604:	mov	r2, #10
   16608:	strb	r2, [r3]
   1660c:	mov	r0, r4
   16610:	bl	110fc <strlen@plt>
   16614:	subs	r5, r0, #0
   16618:	beq	16660 <argp_failure@@Base+0xf3c>
   1661c:	ldr	r3, [sl, #28]
   16620:	add	r3, r3, r5
   16624:	ldr	r2, [sl, #32]
   16628:	cmp	r2, r3
   1662c:	bcs	16644 <argp_failure@@Base+0xf20>
   16630:	mov	r1, r5
   16634:	mov	r0, sl
   16638:	bl	17f1c <argp_error@@Base+0x137c>
   1663c:	cmp	r0, #0
   16640:	beq	16660 <argp_failure@@Base+0xf3c>
   16644:	mov	r2, r5
   16648:	mov	r1, r4
   1664c:	ldr	r0, [sl, #28]
   16650:	bl	10fd0 <memcpy@plt>
   16654:	ldr	r3, [sl, #28]
   16658:	add	r5, r3, r5
   1665c:	str	r5, [sl, #28]
   16660:	cmp	r7, r4
   16664:	bne	1677c <argp_failure@@Base+0x1058>
   16668:	ldr	r3, [sl, #28]
   1666c:	ldr	r2, [sl, #24]
   16670:	sub	r3, r3, r2
   16674:	ldr	r2, [sl, #16]
   16678:	cmp	r3, r2
   1667c:	bhi	16788 <argp_failure@@Base+0x1064>
   16680:	mov	r3, #0
   16684:	str	r3, [sl, #4]
   16688:	ldr	r2, [sl, #28]
   1668c:	ldr	r3, [sl, #32]
   16690:	cmp	r2, r3
   16694:	bcs	16794 <argp_failure@@Base+0x1070>
   16698:	ldr	r3, [sl, #28]
   1669c:	add	r2, r3, #1
   166a0:	str	r2, [sl, #28]
   166a4:	mov	r2, #10
   166a8:	strb	r2, [r3]
   166ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166b0:	str	r3, [fp, #-88]	; 0xffffffa8
   166b4:	b	16448 <argp_failure@@Base+0xd24>
   166b8:	mov	r0, sl
   166bc:	bl	17978 <argp_error@@Base+0xdd8>
   166c0:	ldr	r5, [sl, #20]
   166c4:	bic	r5, r5, r5, asr #31
   166c8:	ldr	r3, [pc, #332]	; 1681c <argp_failure@@Base+0x10f8>
   166cc:	ldr	r6, [r3, #20]
   166d0:	ldr	r3, [sl, #28]
   166d4:	ldr	r2, [sl, #24]
   166d8:	sub	r3, r3, r2
   166dc:	ldr	r2, [sl, #16]
   166e0:	cmp	r3, r2
   166e4:	bls	165ac <argp_failure@@Base+0xe88>
   166e8:	mov	r0, sl
   166ec:	bl	17978 <argp_error@@Base+0xdd8>
   166f0:	b	165ac <argp_failure@@Base+0xe88>
   166f4:	mov	r0, sl
   166f8:	bl	17978 <argp_error@@Base+0xdd8>
   166fc:	b	165d0 <argp_failure@@Base+0xeac>
   16700:	mov	r1, #1
   16704:	mov	r0, sl
   16708:	bl	17f1c <argp_error@@Base+0x137c>
   1670c:	cmp	r0, #0
   16710:	beq	1660c <argp_failure@@Base+0xee8>
   16714:	b	165f8 <argp_failure@@Base+0xed4>
   16718:	cmp	r1, r5
   1671c:	bhi	16770 <argp_failure@@Base+0x104c>
   16720:	ldr	r3, [sl, #28]
   16724:	add	r3, r3, #3
   16728:	ldr	r2, [sl, #32]
   1672c:	cmp	r2, r3
   16730:	bcs	16748 <argp_failure@@Base+0x1024>
   16734:	mov	r1, #3
   16738:	mov	r0, sl
   1673c:	bl	17f1c <argp_error@@Base+0x137c>
   16740:	cmp	r0, #0
   16744:	beq	1660c <argp_failure@@Base+0xee8>
   16748:	ldr	r3, [sl, #28]
   1674c:	ldr	r2, [pc, #196]	; 16818 <argp_failure@@Base+0x10f4>
   16750:	ldrh	r1, [r2]
   16754:	ldrb	r2, [r2, #2]
   16758:	strh	r1, [r3]
   1675c:	strb	r2, [r3, #2]
   16760:	ldr	r3, [sl, #28]
   16764:	add	r3, r3, #3
   16768:	str	r3, [sl, #28]
   1676c:	b	1660c <argp_failure@@Base+0xee8>
   16770:	mov	r0, sl
   16774:	bl	14060 <argp_parse@@Base+0x1fac>
   16778:	b	1660c <argp_failure@@Base+0xee8>
   1677c:	mov	r0, r4
   16780:	bl	12ca8 <argp_parse@@Base+0xbf4>
   16784:	b	16668 <argp_failure@@Base+0xf44>
   16788:	mov	r0, sl
   1678c:	bl	17978 <argp_error@@Base+0xdd8>
   16790:	b	16680 <argp_failure@@Base+0xf5c>
   16794:	mov	r1, #1
   16798:	mov	r0, sl
   1679c:	bl	17f1c <argp_error@@Base+0x137c>
   167a0:	cmp	r0, #0
   167a4:	beq	166ac <argp_failure@@Base+0xf88>
   167a8:	b	16698 <argp_failure@@Base+0xf74>
   167ac:	mov	r0, sl
   167b0:	bl	17978 <argp_error@@Base+0xdd8>
   167b4:	b	16460 <argp_failure@@Base+0xd3c>
   167b8:	mov	r0, sl
   167bc:	bl	17978 <argp_error@@Base+0xdd8>
   167c0:	b	16480 <argp_failure@@Base+0xd5c>
   167c4:	andeq	r8, r1, r4, lsl #30
   167c8:	andeq	r8, r1, ip, lsr #26
   167cc:	andeq	r8, r1, r4, lsl pc
   167d0:	andeq	r8, r1, r4, asr #30
   167d4:	andeq	r8, r1, ip, ror #30
   167d8:	andeq	r8, r1, r4, asr #26
   167dc:	andeq	r8, r1, r0, asr #31
   167e0:	andeq	r8, r1, ip, lsl #31
   167e4:	andeq	r8, r1, r8, asr #17
   167e8:	andeq	r8, r1, r8, lsr #17
   167ec:	andeq	r4, r1, r8, ror sp
   167f0:	ldrdeq	r8, [r1], -r0
   167f4:	andeq	r8, r1, r8, asr #31
   167f8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   167fc:	andeq	r8, r1, r0, ror #31
   16800:	strdeq	r8, [r1], -r0
   16804:	andeq	r9, r1, r8, lsr #32
   16808:	andeq	r8, r1, r8, ror r8
   1680c:	andeq	r9, r1, r0, lsr r0
   16810:	andeq	r9, r1, r8, lsr r0
   16814:	andeq	r9, r1, r0, asr #32
   16818:	andeq	r9, r1, r4, asr #32
   1681c:	andeq	sl, r2, r8, lsl r2
   16820:	andeq	r0, r0, #5
   16824:	andeq	r9, r1, r8, asr #32
   16828:	andeq	sl, r2, ip, lsr #5
   1682c:	strheq	r9, [r1], -ip
   16830:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16834:	cmp	r3, #0
   16838:	beq	16928 <argp_failure@@Base+0x1204>
   1683c:	ldr	r3, [pc, #-40]	; 1681c <argp_failure@@Base+0x10f8>
   16840:	ldr	r3, [r3, #4]
   16844:	cmp	r3, #0
   16848:	beq	16928 <argp_failure@@Base+0x1204>
   1684c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16850:	cmp	r3, #0
   16854:	ldrne	r2, [r3]
   16858:	moveq	r2, #0
   1685c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16860:	ldr	r1, [pc, #-72]	; 16820 <argp_failure@@Base+0x10fc>
   16864:	ldr	r0, [pc, #-72]	; 16824 <argp_failure@@Base+0x1100>
   16868:	bl	14244 <argp_parse@@Base+0x2190>
   1686c:	subs	r4, r0, #0
   16870:	beq	16928 <argp_failure@@Base+0x1204>
   16874:	ldrb	r3, [r4]
   16878:	cmp	r3, #0
   1687c:	beq	1691c <argp_failure@@Base+0x11f8>
   16880:	ldr	r2, [sl, #28]
   16884:	ldr	r3, [sl, #32]
   16888:	cmp	r2, r3
   1688c:	bcs	169c0 <argp_failure@@Base+0x129c>
   16890:	ldr	r3, [sl, #28]
   16894:	add	r2, r3, #1
   16898:	str	r2, [sl, #28]
   1689c:	mov	r2, #10
   168a0:	strb	r2, [r3]
   168a4:	mov	r0, r4
   168a8:	bl	110fc <strlen@plt>
   168ac:	subs	r5, r0, #0
   168b0:	beq	168f8 <argp_failure@@Base+0x11d4>
   168b4:	ldr	r3, [sl, #28]
   168b8:	add	r3, r3, r5
   168bc:	ldr	r2, [sl, #32]
   168c0:	cmp	r2, r3
   168c4:	bcs	168dc <argp_failure@@Base+0x11b8>
   168c8:	mov	r1, r5
   168cc:	mov	r0, sl
   168d0:	bl	17f1c <argp_error@@Base+0x137c>
   168d4:	cmp	r0, #0
   168d8:	beq	168f8 <argp_failure@@Base+0x11d4>
   168dc:	mov	r2, r5
   168e0:	mov	r1, r4
   168e4:	ldr	r0, [sl, #28]
   168e8:	bl	10fd0 <memcpy@plt>
   168ec:	ldr	r3, [sl, #28]
   168f0:	add	r5, r3, r5
   168f4:	str	r5, [sl, #28]
   168f8:	ldr	r2, [sl, #28]
   168fc:	ldr	r3, [sl, #32]
   16900:	cmp	r2, r3
   16904:	bcs	169d8 <argp_failure@@Base+0x12b4>
   16908:	ldr	r3, [sl, #28]
   1690c:	add	r2, r3, #1
   16910:	str	r2, [sl, #28]
   16914:	mov	r2, #10
   16918:	strb	r2, [r3]
   1691c:	ldr	r3, [pc, #-256]	; 16824 <argp_failure@@Base+0x1100>
   16920:	cmp	r4, r3
   16924:	bne	169f0 <argp_failure@@Base+0x12cc>
   16928:	mov	r4, #1
   1692c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16930:	tst	r3, #32
   16934:	bne	169fc <argp_failure@@Base+0x12d8>
   16938:	ldr	r3, [fp, #-104]	; 0xffffff98
   1693c:	tst	r3, #64	; 0x40
   16940:	beq	16994 <argp_failure@@Base+0x1270>
   16944:	ldr	r3, [pc, #-292]	; 16828 <argp_failure@@Base+0x1104>
   16948:	ldr	r3, [r3]
   1694c:	cmp	r3, #0
   16950:	beq	16994 <argp_failure@@Base+0x1270>
   16954:	cmp	r4, #0
   16958:	beq	16980 <argp_failure@@Base+0x125c>
   1695c:	ldr	r2, [sl, #28]
   16960:	ldr	r3, [sl, #32]
   16964:	cmp	r2, r3
   16968:	bcs	16a24 <argp_failure@@Base+0x1300>
   1696c:	ldr	r3, [sl, #28]
   16970:	add	r2, r3, #1
   16974:	str	r2, [sl, #28]
   16978:	mov	r2, #10
   1697c:	strb	r2, [r3]
   16980:	ldr	r3, [pc, #-352]	; 16828 <argp_failure@@Base+0x1104>
   16984:	ldr	r2, [r3]
   16988:	ldr	r1, [pc, #-356]	; 1682c <argp_failure@@Base+0x1108>
   1698c:	mov	r0, sl
   16990:	bl	1800c <argp_error@@Base+0x146c>
   16994:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16998:	bl	11024 <funlockfile@plt>
   1699c:	ldr	r3, [fp, #-108]	; 0xffffff94
   169a0:	cmp	r3, #0
   169a4:	beq	169b0 <argp_failure@@Base+0x128c>
   169a8:	mov	r0, r3
   169ac:	bl	13f1c <argp_parse@@Base+0x1e68>
   169b0:	mov	r0, sl
   169b4:	bl	17edc <argp_error@@Base+0x133c>
   169b8:	sub	sp, fp, #32
   169bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169c0:	mov	r1, #1
   169c4:	mov	r0, sl
   169c8:	bl	17f1c <argp_error@@Base+0x137c>
   169cc:	cmp	r0, #0
   169d0:	beq	168a4 <argp_failure@@Base+0x1180>
   169d4:	b	16890 <argp_failure@@Base+0x116c>
   169d8:	mov	r1, #1
   169dc:	mov	r0, sl
   169e0:	bl	17f1c <argp_error@@Base+0x137c>
   169e4:	cmp	r0, #0
   169e8:	beq	1691c <argp_failure@@Base+0x11f8>
   169ec:	b	16908 <argp_failure@@Base+0x11e4>
   169f0:	mov	r0, r4
   169f4:	bl	12ca8 <argp_parse@@Base+0xbf4>
   169f8:	b	16928 <argp_failure@@Base+0x1204>
   169fc:	str	sl, [sp, #4]
   16a00:	mov	r3, #0
   16a04:	str	r3, [sp]
   16a08:	mov	r3, r4
   16a0c:	mov	r2, #1
   16a10:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16a14:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a18:	bl	147e0 <argp_parse@@Base+0x272c>
   16a1c:	orr	r4, r4, r0
   16a20:	b	16938 <argp_failure@@Base+0x1214>
   16a24:	mov	r1, #1
   16a28:	mov	r0, sl
   16a2c:	bl	17f1c <argp_error@@Base+0x137c>
   16a30:	cmp	r0, #0
   16a34:	beq	16980 <argp_failure@@Base+0x125c>
   16a38:	b	1696c <argp_failure@@Base+0x1248>
   16a3c:	ldrb	r3, [r5]
   16a40:	mov	r4, r5
   16a44:	mov	r5, #0
   16a48:	b	15b1c <argp_failure@@Base+0x3f8>
   16a4c:	mov	r4, r2
   16a50:	b	15b30 <argp_failure@@Base+0x40c>
   16a54:	cmp	r0, #110	; 0x6e
   16a58:	beq	15b88 <argp_failure@@Base+0x464>
   16a5c:	mov	r3, #1
   16a60:	str	r3, [fp, #-96]	; 0xffffffa0
   16a64:	str	r3, [fp, #-116]	; 0xffffff8c
   16a68:	add	r6, sl, #24
   16a6c:	b	15c80 <argp_failure@@Base+0x55c>
   16a70:	ldrb	r3, [r9]
   16a74:	cmp	r7, r3
   16a78:	beq	16154 <argp_failure@@Base+0xa30>
   16a7c:	add	r4, r4, #24
   16a80:	subs	r5, r5, #1
   16a84:	beq	16244 <argp_failure@@Base+0xb20>
   16a88:	ldr	r6, [r4, #12]
   16a8c:	tst	r6, #8
   16a90:	bne	16a7c <argp_failure@@Base+0x1358>
   16a94:	ldr	r7, [r4, #4]
   16a98:	sub	r3, r7, #1
   16a9c:	cmp	r3, #254	; 0xfe
   16aa0:	bhi	16a7c <argp_failure@@Base+0x1358>
   16aa4:	bl	110d8 <__ctype_b_loc@plt>
   16aa8:	ldr	r2, [r0]
   16aac:	lsl	r3, r7, #1
   16ab0:	ldrh	r3, [r2, r3]
   16ab4:	tst	r3, #16384	; 0x4000
   16ab8:	bne	16a70 <argp_failure@@Base+0x134c>
   16abc:	b	16a7c <argp_failure@@Base+0x1358>

00016ac0 <argp_help@@Base>:
   16ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   16ac4:	sub	sp, sp, #12
   16ac8:	str	r3, [sp]
   16acc:	mov	r3, r2
   16ad0:	mov	r2, r1
   16ad4:	mov	r1, #0
   16ad8:	bl	1592c <argp_failure@@Base+0x208>
   16adc:	add	sp, sp, #12
   16ae0:	pop	{pc}		; (ldr pc, [sp], #4)

00016ae4 <argp_state_help@@Base>:
   16ae4:	push	{r4, r5, lr}
   16ae8:	sub	sp, sp, #12
   16aec:	mov	r5, r2
   16af0:	subs	r4, r0, #0
   16af4:	beq	16b58 <argp_state_help@@Base+0x74>
   16af8:	ldr	r3, [r4, #16]
   16afc:	tst	r3, #2
   16b00:	bne	16b50 <argp_state_help@@Base+0x6c>
   16b04:	cmp	r1, #0
   16b08:	beq	16b50 <argp_state_help@@Base+0x6c>
   16b0c:	ldr	r3, [r4, #16]
   16b10:	tst	r3, #64	; 0x40
   16b14:	orrne	r5, r5, #128	; 0x80
   16b18:	ldr	r0, [r4]
   16b1c:	ldr	r3, [r4, #40]	; 0x28
   16b20:	str	r3, [sp]
   16b24:	mov	r3, r5
   16b28:	mov	r2, r1
   16b2c:	mov	r1, r4
   16b30:	bl	1592c <argp_failure@@Base+0x208>
   16b34:	ldr	r3, [r4, #16]
   16b38:	tst	r3, #32
   16b3c:	bne	16b50 <argp_state_help@@Base+0x6c>
   16b40:	tst	r5, #256	; 0x100
   16b44:	bne	16b84 <argp_state_help@@Base+0xa0>
   16b48:	tst	r5, #512	; 0x200
   16b4c:	bne	16b90 <argp_state_help@@Base+0xac>
   16b50:	add	sp, sp, #12
   16b54:	pop	{r4, r5, pc}
   16b58:	cmp	r1, #0
   16b5c:	beq	16b50 <argp_state_help@@Base+0x6c>
   16b60:	ldr	r3, [pc, #48]	; 16b98 <argp_state_help@@Base+0xb4>
   16b64:	ldr	r3, [r3]
   16b68:	str	r3, [sp]
   16b6c:	mov	r3, r2
   16b70:	mov	r2, r1
   16b74:	mov	r1, #0
   16b78:	mov	r0, r1
   16b7c:	bl	1592c <argp_failure@@Base+0x208>
   16b80:	b	16b40 <argp_state_help@@Base+0x5c>
   16b84:	ldr	r3, [pc, #16]	; 16b9c <argp_state_help@@Base+0xb8>
   16b88:	ldr	r0, [r3]
   16b8c:	bl	110e4 <exit@plt>
   16b90:	mov	r0, #0
   16b94:	bl	110e4 <exit@plt>
   16b98:	andeq	sl, r2, r8, asr r2
   16b9c:	andeq	sl, r2, r0, asr r2

00016ba0 <argp_error@@Base>:
   16ba0:	push	{r1, r2, r3}
   16ba4:	push	{r4, r5, lr}
   16ba8:	sub	sp, sp, #8
   16bac:	subs	r5, r0, #0
   16bb0:	beq	16c80 <argp_error@@Base+0xe0>
   16bb4:	ldr	r3, [r5, #16]
   16bb8:	tst	r3, #2
   16bbc:	bne	16c70 <argp_error@@Base+0xd0>
   16bc0:	ldr	r4, [r5, #44]	; 0x2c
   16bc4:	cmp	r4, #0
   16bc8:	beq	16c70 <argp_error@@Base+0xd0>
   16bcc:	mov	r0, r4
   16bd0:	bl	11198 <flockfile@plt>
   16bd4:	add	r3, sp, #24
   16bd8:	str	r3, [sp, #4]
   16bdc:	ldr	r0, [r5, #40]	; 0x28
   16be0:	mov	r1, r4
   16be4:	bl	10f4c <fputs_unlocked@plt>
   16be8:	ldr	r3, [r4, #20]
   16bec:	ldr	r2, [r4, #24]
   16bf0:	cmp	r3, r2
   16bf4:	addcc	r2, r3, #1
   16bf8:	strcc	r2, [r4, #20]
   16bfc:	movcc	r2, #58	; 0x3a
   16c00:	strbcc	r2, [r3]
   16c04:	bcs	16cac <argp_error@@Base+0x10c>
   16c08:	ldr	r3, [r4, #20]
   16c0c:	ldr	r2, [r4, #24]
   16c10:	cmp	r3, r2
   16c14:	addcc	r2, r3, #1
   16c18:	strcc	r2, [r4, #20]
   16c1c:	movcc	r2, #32
   16c20:	strbcc	r2, [r3]
   16c24:	bcs	16cbc <argp_error@@Base+0x11c>
   16c28:	ldr	r2, [sp, #4]
   16c2c:	ldr	r1, [sp, #20]
   16c30:	mov	r0, r4
   16c34:	bl	11174 <vfprintf@plt>
   16c38:	ldr	r3, [r4, #20]
   16c3c:	ldr	r2, [r4, #24]
   16c40:	cmp	r3, r2
   16c44:	addcc	r2, r3, #1
   16c48:	strcc	r2, [r4, #20]
   16c4c:	movcc	r2, #10
   16c50:	strbcc	r2, [r3]
   16c54:	bcs	16ccc <argp_error@@Base+0x12c>
   16c58:	mov	r2, #260	; 0x104
   16c5c:	mov	r1, r4
   16c60:	mov	r0, r5
   16c64:	bl	16ae4 <argp_state_help@@Base>
   16c68:	mov	r0, r4
   16c6c:	bl	11024 <funlockfile@plt>
   16c70:	add	sp, sp, #8
   16c74:	pop	{r4, r5, lr}
   16c78:	add	sp, sp, #12
   16c7c:	bx	lr
   16c80:	ldr	r3, [pc, #84]	; 16cdc <argp_error@@Base+0x13c>
   16c84:	ldr	r4, [r3]
   16c88:	cmp	r4, #0
   16c8c:	beq	16c70 <argp_error@@Base+0xd0>
   16c90:	mov	r0, r4
   16c94:	bl	11198 <flockfile@plt>
   16c98:	add	r3, sp, #24
   16c9c:	str	r3, [sp, #4]
   16ca0:	ldr	r3, [pc, #56]	; 16ce0 <argp_error@@Base+0x140>
   16ca4:	ldr	r0, [r3]
   16ca8:	b	16be0 <argp_error@@Base+0x40>
   16cac:	mov	r1, #58	; 0x3a
   16cb0:	mov	r0, r4
   16cb4:	bl	1115c <__overflow@plt>
   16cb8:	b	16c08 <argp_error@@Base+0x68>
   16cbc:	mov	r1, #32
   16cc0:	mov	r0, r4
   16cc4:	bl	1115c <__overflow@plt>
   16cc8:	b	16c28 <argp_error@@Base+0x88>
   16ccc:	mov	r1, #10
   16cd0:	mov	r0, r4
   16cd4:	bl	1115c <__overflow@plt>
   16cd8:	b	16c58 <argp_error@@Base+0xb8>
   16cdc:	andeq	sl, r2, r0, ror #4
   16ce0:	andeq	sl, r2, r8, asr r2
   16ce4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ce8:	ldr	r4, [r1, #28]
   16cec:	ldr	r5, [r1, #32]
   16cf0:	ldr	r6, [r1]
   16cf4:	add	r7, r0, r5, lsl #2
   16cf8:	b	16d30 <argp_error@@Base+0x190>
   16cfc:	cmp	sl, #0
   16d00:	ble	16d2c <argp_error@@Base+0x18c>
   16d04:	add	r2, r0, r4, lsl #2
   16d08:	sub	r3, r6, sl
   16d0c:	add	r3, r0, r3, lsl #2
   16d10:	add	r8, r0, r6, lsl #2
   16d14:	ldr	ip, [r2]
   16d18:	ldr	lr, [r3]
   16d1c:	str	lr, [r2], #4
   16d20:	str	ip, [r3], #4
   16d24:	cmp	r3, r8
   16d28:	bne	16d14 <argp_error@@Base+0x174>
   16d2c:	sub	r6, r6, sl
   16d30:	cmp	r6, r5
   16d34:	movle	r3, #0
   16d38:	movgt	r3, #1
   16d3c:	cmp	r4, r5
   16d40:	movge	r3, #0
   16d44:	cmp	r3, #0
   16d48:	beq	16d94 <argp_error@@Base+0x1f4>
   16d4c:	sub	r9, r6, r5
   16d50:	sub	sl, r5, r4
   16d54:	cmp	r9, sl
   16d58:	bgt	16cfc <argp_error@@Base+0x15c>
   16d5c:	cmp	r9, #0
   16d60:	addgt	r3, r0, r4, lsl #2
   16d64:	addgt	r8, r9, r4
   16d68:	addgt	r8, r0, r8, lsl #2
   16d6c:	movgt	r2, r7
   16d70:	ble	16d8c <argp_error@@Base+0x1ec>
   16d74:	ldr	ip, [r3]
   16d78:	ldr	lr, [r2]
   16d7c:	str	lr, [r3], #4
   16d80:	str	ip, [r2], #4
   16d84:	cmp	r3, r8
   16d88:	bne	16d74 <argp_error@@Base+0x1d4>
   16d8c:	add	r4, r4, r9
   16d90:	b	16d30 <argp_error@@Base+0x190>
   16d94:	ldr	r0, [r1]
   16d98:	ldr	r3, [r1, #32]
   16d9c:	sub	r2, r0, r3
   16da0:	ldr	r3, [r1, #28]
   16da4:	add	r3, r3, r2
   16da8:	str	r3, [r1, #28]
   16dac:	str	r0, [r1, #32]
   16db0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16db8:	sub	sp, sp, #44	; 0x2c
   16dbc:	str	r0, [sp, #20]
   16dc0:	str	r1, [sp, #12]
   16dc4:	str	r2, [sp, #24]
   16dc8:	str	r3, [sp, #8]
   16dcc:	ldr	fp, [sp, #88]	; 0x58
   16dd0:	ldr	sl, [fp, #20]
   16dd4:	ldrb	r3, [sl]
   16dd8:	cmp	r3, #0
   16ddc:	cmpne	r3, #61	; 0x3d
   16de0:	beq	16e1c <argp_error@@Base+0x27c>
   16de4:	mov	r8, sl
   16de8:	ldrb	r3, [r8, #1]!
   16dec:	cmp	r3, #0
   16df0:	cmpne	r3, #61	; 0x3d
   16df4:	bne	16de8 <argp_error@@Base+0x248>
   16df8:	sub	r7, r8, sl
   16dfc:	ldr	r5, [sp, #8]
   16e00:	ldr	r3, [r5]
   16e04:	str	r3, [sp, #16]
   16e08:	cmp	r3, #0
   16e0c:	beq	17110 <argp_error@@Base+0x570>
   16e10:	mov	r4, r3
   16e14:	mov	r6, #0
   16e18:	b	16e34 <argp_error@@Base+0x294>
   16e1c:	mov	r8, sl
   16e20:	b	16df8 <argp_error@@Base+0x258>
   16e24:	add	r6, r6, #1
   16e28:	ldr	r4, [r5, #16]!
   16e2c:	cmp	r4, #0
   16e30:	beq	16e6c <argp_error@@Base+0x2cc>
   16e34:	mov	r9, r5
   16e38:	mov	r2, r7
   16e3c:	mov	r1, sl
   16e40:	mov	r0, r4
   16e44:	bl	111e0 <strncmp@plt>
   16e48:	cmp	r0, #0
   16e4c:	bne	16e24 <argp_error@@Base+0x284>
   16e50:	mov	r0, r4
   16e54:	bl	110fc <strlen@plt>
   16e58:	cmp	r7, r0
   16e5c:	bne	16e24 <argp_error@@Base+0x284>
   16e60:	cmp	r5, #0
   16e64:	strne	r6, [sp, #28]
   16e68:	bne	170c0 <argp_error@@Base+0x520>
   16e6c:	ldr	r4, [sp, #8]
   16e70:	mvn	r3, #0
   16e74:	str	r3, [sp, #28]
   16e78:	mov	sl, #0
   16e7c:	str	sl, [sp, #36]	; 0x24
   16e80:	mov	r5, sl
   16e84:	mov	r9, sl
   16e88:	str	r8, [sp, #32]
   16e8c:	mov	r8, sl
   16e90:	ldr	r0, [sp, #16]
   16e94:	b	16ee4 <argp_error@@Base+0x344>
   16e98:	ldr	r2, [r9, #8]
   16e9c:	ldr	r3, [r4, #8]
   16ea0:	cmp	r2, r3
   16ea4:	bne	16f1c <argp_error@@Base+0x37c>
   16ea8:	ldr	r2, [r9, #12]
   16eac:	ldr	r3, [r4, #12]
   16eb0:	cmp	r2, r3
   16eb4:	bne	16f1c <argp_error@@Base+0x37c>
   16eb8:	b	16ed4 <argp_error@@Base+0x334>
   16ebc:	cmp	r8, #0
   16ec0:	moveq	sl, #1
   16ec4:	beq	16ed4 <argp_error@@Base+0x334>
   16ec8:	mov	sl, #1
   16ecc:	mov	r3, #1
   16ed0:	strb	r3, [r8, r5]
   16ed4:	add	r5, r5, #1
   16ed8:	ldr	r0, [r4, #16]!
   16edc:	cmp	r0, #0
   16ee0:	beq	16f84 <argp_error@@Base+0x3e4>
   16ee4:	mov	r2, r7
   16ee8:	ldr	r1, [fp, #20]
   16eec:	bl	111e0 <strncmp@plt>
   16ef0:	cmp	r0, #0
   16ef4:	bne	16ed4 <argp_error@@Base+0x334>
   16ef8:	cmp	r9, #0
   16efc:	beq	16f70 <argp_error@@Base+0x3d0>
   16f00:	ldr	r3, [sp, #84]	; 0x54
   16f04:	cmp	r3, #0
   16f08:	bne	16f1c <argp_error@@Base+0x37c>
   16f0c:	ldr	r2, [r9, #4]
   16f10:	ldr	r3, [r4, #4]
   16f14:	cmp	r2, r3
   16f18:	beq	16e98 <argp_error@@Base+0x2f8>
   16f1c:	cmp	sl, #0
   16f20:	bne	16ed4 <argp_error@@Base+0x334>
   16f24:	ldr	r3, [sp, #92]	; 0x5c
   16f28:	cmp	r3, #0
   16f2c:	beq	16ebc <argp_error@@Base+0x31c>
   16f30:	cmp	r8, #0
   16f34:	bne	16ecc <argp_error@@Base+0x32c>
   16f38:	mov	r0, r6
   16f3c:	bl	13aa0 <argp_parse@@Base+0x19ec>
   16f40:	subs	r8, r0, #0
   16f44:	beq	16f7c <argp_error@@Base+0x3dc>
   16f48:	mov	r2, r6
   16f4c:	mov	r1, #0
   16f50:	mov	r0, r8
   16f54:	bl	11138 <memset@plt>
   16f58:	ldr	r3, [sp, #28]
   16f5c:	mov	r2, #1
   16f60:	strb	r2, [r8, r3]
   16f64:	mov	r3, #1
   16f68:	str	r3, [sp, #36]	; 0x24
   16f6c:	b	16ecc <argp_error@@Base+0x32c>
   16f70:	str	r5, [sp, #28]
   16f74:	mov	r9, r4
   16f78:	b	16ed4 <argp_error@@Base+0x334>
   16f7c:	mov	sl, #1
   16f80:	b	16ed4 <argp_error@@Base+0x334>
   16f84:	mov	r3, r8
   16f88:	str	r8, [sp, #16]
   16f8c:	ldr	r8, [sp, #32]
   16f90:	cmp	sl, #0
   16f94:	cmpeq	r3, #0
   16f98:	beq	170b8 <argp_error@@Base+0x518>
   16f9c:	ldr	r3, [sp, #92]	; 0x5c
   16fa0:	cmp	r3, #0
   16fa4:	beq	16fd4 <argp_error@@Base+0x434>
   16fa8:	cmp	sl, #0
   16fac:	beq	17010 <argp_error@@Base+0x470>
   16fb0:	ldr	r3, [sp, #12]
   16fb4:	ldr	r2, [r3]
   16fb8:	ldr	r3, [pc, #708]	; 17284 <argp_error@@Base+0x6e4>
   16fbc:	ldr	r0, [r3]
   16fc0:	ldr	r3, [fp, #20]
   16fc4:	str	r3, [sp]
   16fc8:	ldr	r3, [sp, #96]	; 0x60
   16fcc:	ldr	r1, [pc, #692]	; 17288 <argp_error@@Base+0x6e8>
   16fd0:	bl	11114 <fprintf@plt>
   16fd4:	ldr	r3, [sp, #36]	; 0x24
   16fd8:	cmp	r3, #0
   16fdc:	bne	170ac <argp_error@@Base+0x50c>
   16fe0:	ldr	r4, [fp, #20]
   16fe4:	mov	r0, r4
   16fe8:	bl	110fc <strlen@plt>
   16fec:	add	r0, r4, r0
   16ff0:	str	r0, [fp, #20]
   16ff4:	ldr	r3, [fp]
   16ff8:	add	r3, r3, #1
   16ffc:	str	r3, [fp]
   17000:	mov	r3, #0
   17004:	str	r3, [fp, #8]
   17008:	mov	r0, #63	; 0x3f
   1700c:	b	17204 <argp_error@@Base+0x664>
   17010:	ldr	r4, [pc, #620]	; 17284 <argp_error@@Base+0x6e4>
   17014:	ldr	r0, [r4]
   17018:	bl	11198 <flockfile@plt>
   1701c:	ldr	r3, [sp, #12]
   17020:	ldr	r2, [r3]
   17024:	ldr	r0, [r4]
   17028:	ldr	r3, [fp, #20]
   1702c:	str	r3, [sp]
   17030:	ldr	r3, [sp, #96]	; 0x60
   17034:	ldr	r1, [pc, #592]	; 1728c <argp_error@@Base+0x6ec>
   17038:	bl	11114 <fprintf@plt>
   1703c:	cmp	r6, #0
   17040:	ble	17090 <argp_error@@Base+0x4f0>
   17044:	ldr	r3, [sp, #16]
   17048:	mov	r4, r3
   1704c:	add	r6, r3, r6
   17050:	ldr	r7, [pc, #568]	; 17290 <argp_error@@Base+0x6f0>
   17054:	ldr	r5, [pc, #552]	; 17284 <argp_error@@Base+0x6e4>
   17058:	ldr	r8, [sp, #8]
   1705c:	b	1706c <argp_error@@Base+0x4cc>
   17060:	add	sl, sl, #1
   17064:	cmp	r4, r6
   17068:	beq	17090 <argp_error@@Base+0x4f0>
   1706c:	ldrb	r3, [r4], #1
   17070:	cmp	r3, #0
   17074:	beq	17060 <argp_error@@Base+0x4c0>
   17078:	ldr	r3, [r8, sl, lsl #4]
   1707c:	ldr	r2, [sp, #96]	; 0x60
   17080:	mov	r1, r7
   17084:	ldr	r0, [r5]
   17088:	bl	11114 <fprintf@plt>
   1708c:	b	17060 <argp_error@@Base+0x4c0>
   17090:	ldr	r4, [pc, #492]	; 17284 <argp_error@@Base+0x6e4>
   17094:	ldr	r1, [r4]
   17098:	mov	r0, #10
   1709c:	bl	11180 <fputc@plt>
   170a0:	ldr	r0, [r4]
   170a4:	bl	11024 <funlockfile@plt>
   170a8:	b	16fd4 <argp_error@@Base+0x434>
   170ac:	ldr	r0, [sp, #16]
   170b0:	bl	12ca8 <argp_parse@@Base+0xbf4>
   170b4:	b	16fe0 <argp_error@@Base+0x440>
   170b8:	cmp	r9, #0
   170bc:	beq	17110 <argp_error@@Base+0x570>
   170c0:	ldr	r2, [fp]
   170c4:	add	r3, r2, #1
   170c8:	str	r3, [fp]
   170cc:	mov	r1, #0
   170d0:	str	r1, [fp, #20]
   170d4:	ldrb	r1, [r8]
   170d8:	cmp	r1, #0
   170dc:	beq	171d0 <argp_error@@Base+0x630>
   170e0:	ldr	r3, [r9, #4]
   170e4:	cmp	r3, #0
   170e8:	addne	r8, r8, #1
   170ec:	strne	r8, [fp, #12]
   170f0:	bne	171dc <argp_error@@Base+0x63c>
   170f4:	ldr	r3, [sp, #92]	; 0x5c
   170f8:	cmp	r3, #0
   170fc:	bne	171a8 <argp_error@@Base+0x608>
   17100:	ldr	r3, [r9, #12]
   17104:	str	r3, [fp, #8]
   17108:	mov	r0, #63	; 0x3f
   1710c:	b	17204 <argp_error@@Base+0x664>
   17110:	ldr	r3, [sp, #84]	; 0x54
   17114:	cmp	r3, #0
   17118:	bne	17148 <argp_error@@Base+0x5a8>
   1711c:	ldr	r3, [sp, #92]	; 0x5c
   17120:	cmp	r3, #0
   17124:	bne	17180 <argp_error@@Base+0x5e0>
   17128:	mov	r2, #0
   1712c:	str	r2, [fp, #20]
   17130:	ldr	r3, [fp]
   17134:	add	r3, r3, #1
   17138:	str	r3, [fp]
   1713c:	str	r2, [fp, #8]
   17140:	mov	r0, #63	; 0x3f
   17144:	b	17204 <argp_error@@Base+0x664>
   17148:	ldr	r3, [fp]
   1714c:	ldr	r2, [sp, #12]
   17150:	ldr	r3, [r2, r3, lsl #2]
   17154:	ldrb	r3, [r3, #1]
   17158:	cmp	r3, #45	; 0x2d
   1715c:	beq	1711c <argp_error@@Base+0x57c>
   17160:	ldr	r3, [fp, #20]
   17164:	ldrb	r1, [r3]
   17168:	ldr	r0, [sp, #24]
   1716c:	bl	11108 <strchr@plt>
   17170:	cmp	r0, #0
   17174:	beq	1711c <argp_error@@Base+0x57c>
   17178:	mvn	r0, #0
   1717c:	b	17204 <argp_error@@Base+0x664>
   17180:	ldr	r3, [sp, #12]
   17184:	ldr	r2, [r3]
   17188:	ldr	r3, [pc, #244]	; 17284 <argp_error@@Base+0x6e4>
   1718c:	ldr	r0, [r3]
   17190:	ldr	r3, [fp, #20]
   17194:	str	r3, [sp]
   17198:	ldr	r3, [sp, #96]	; 0x60
   1719c:	ldr	r1, [pc, #240]	; 17294 <argp_error@@Base+0x6f4>
   171a0:	bl	11114 <fprintf@plt>
   171a4:	b	17128 <argp_error@@Base+0x588>
   171a8:	ldr	r3, [sp, #12]
   171ac:	ldr	r2, [r3]
   171b0:	ldr	r3, [pc, #204]	; 17284 <argp_error@@Base+0x6e4>
   171b4:	ldr	r0, [r3]
   171b8:	ldr	r3, [r9]
   171bc:	str	r3, [sp]
   171c0:	ldr	r3, [sp, #96]	; 0x60
   171c4:	ldr	r1, [pc, #204]	; 17298 <argp_error@@Base+0x6f8>
   171c8:	bl	11114 <fprintf@plt>
   171cc:	b	17100 <argp_error@@Base+0x560>
   171d0:	ldr	r1, [r9, #4]
   171d4:	cmp	r1, #1
   171d8:	beq	1720c <argp_error@@Base+0x66c>
   171dc:	ldr	r3, [sp, #80]	; 0x50
   171e0:	cmp	r3, #0
   171e4:	ldrne	r2, [sp, #28]
   171e8:	strne	r2, [r3]
   171ec:	ldr	r3, [r9, #8]
   171f0:	cmp	r3, #0
   171f4:	ldrne	r2, [r9, #12]
   171f8:	strne	r2, [r3]
   171fc:	movne	r0, #0
   17200:	ldreq	r0, [r9, #12]
   17204:	add	sp, sp, #44	; 0x2c
   17208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1720c:	ldr	r1, [sp, #20]
   17210:	cmp	r3, r1
   17214:	bge	17230 <argp_error@@Base+0x690>
   17218:	add	r2, r2, #2
   1721c:	str	r2, [fp]
   17220:	ldr	r2, [sp, #12]
   17224:	ldr	r3, [r2, r3, lsl #2]
   17228:	str	r3, [fp, #12]
   1722c:	b	171dc <argp_error@@Base+0x63c>
   17230:	ldr	r3, [sp, #92]	; 0x5c
   17234:	cmp	r3, #0
   17238:	bne	1725c <argp_error@@Base+0x6bc>
   1723c:	ldr	r3, [r9, #12]
   17240:	str	r3, [fp, #8]
   17244:	ldr	r3, [sp, #24]
   17248:	ldrb	r0, [r3]
   1724c:	cmp	r0, #58	; 0x3a
   17250:	moveq	r0, #58	; 0x3a
   17254:	movne	r0, #63	; 0x3f
   17258:	b	17204 <argp_error@@Base+0x664>
   1725c:	ldr	r3, [sp, #12]
   17260:	ldr	r2, [r3]
   17264:	ldr	r3, [pc, #24]	; 17284 <argp_error@@Base+0x6e4>
   17268:	ldr	r0, [r3]
   1726c:	ldr	r3, [r9]
   17270:	str	r3, [sp]
   17274:	ldr	r3, [sp, #96]	; 0x60
   17278:	ldr	r1, [pc, #28]	; 1729c <argp_error@@Base+0x6fc>
   1727c:	bl	11114 <fprintf@plt>
   17280:	b	1723c <argp_error@@Base+0x69c>
   17284:	andeq	sl, r2, r0, ror #4
   17288:	ldrdeq	r9, [r1], -r0
   1728c:	strdeq	r9, [r1], -r0
   17290:	andeq	r9, r1, r0, lsr #2
   17294:	andeq	r9, r1, r8, lsr #2
   17298:	andeq	r9, r1, r8, asr #2
   1729c:	andeq	r9, r1, r8, ror r1
   172a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172a4:	sub	sp, sp, #36	; 0x24
   172a8:	str	r3, [sp, #24]
   172ac:	ldr	r4, [sp, #80]	; 0x50
   172b0:	ldr	r8, [r4, #4]
   172b4:	subs	r5, r0, #0
   172b8:	ble	177c0 <argp_error@@Base+0xc20>
   172bc:	mov	r9, r1
   172c0:	mov	r6, r2
   172c4:	mov	r3, #0
   172c8:	str	r3, [r4, #12]
   172cc:	ldr	r3, [r4]
   172d0:	cmp	r3, #0
   172d4:	beq	172f8 <argp_error@@Base+0x758>
   172d8:	ldr	r3, [r4, #16]
   172dc:	cmp	r3, #0
   172e0:	beq	17300 <argp_error@@Base+0x760>
   172e4:	ldrb	r3, [r2]
   172e8:	sub	r3, r3, #43	; 0x2b
   172ec:	tst	r3, #253	; 0xfd
   172f0:	addeq	r6, r2, #1
   172f4:	b	1735c <argp_error@@Base+0x7bc>
   172f8:	mov	r3, #1
   172fc:	str	r3, [r4]
   17300:	ldr	r3, [r4]
   17304:	str	r3, [r4, #32]
   17308:	str	r3, [r4, #28]
   1730c:	mov	r3, #0
   17310:	str	r3, [r4, #20]
   17314:	ldrb	r3, [r6]
   17318:	cmp	r3, #45	; 0x2d
   1731c:	moveq	r3, #2
   17320:	streq	r3, [r4, #24]
   17324:	addeq	r6, r6, #1
   17328:	beq	17354 <argp_error@@Base+0x7b4>
   1732c:	cmp	r3, #43	; 0x2b
   17330:	moveq	r3, #0
   17334:	streq	r3, [r4, #24]
   17338:	addeq	r6, r6, #1
   1733c:	beq	17354 <argp_error@@Base+0x7b4>
   17340:	ldr	r3, [sp, #84]	; 0x54
   17344:	cmp	r3, #0
   17348:	beq	173f8 <argp_error@@Base+0x858>
   1734c:	mov	r3, #0
   17350:	str	r3, [r4, #24]
   17354:	mov	r3, #1
   17358:	str	r3, [r4, #16]
   1735c:	ldrb	r3, [r6]
   17360:	cmp	r3, #58	; 0x3a
   17364:	moveq	r8, #0
   17368:	ldr	r3, [r4, #20]
   1736c:	cmp	r3, #0
   17370:	beq	17380 <argp_error@@Base+0x7e0>
   17374:	ldrb	r3, [r3]
   17378:	cmp	r3, #0
   1737c:	bne	1750c <argp_error@@Base+0x96c>
   17380:	ldr	r3, [r4]
   17384:	ldr	r2, [r4, #32]
   17388:	cmp	r2, r3
   1738c:	strgt	r3, [r4, #32]
   17390:	ldr	r2, [r4, #28]
   17394:	cmp	r3, r2
   17398:	strlt	r3, [r4, #28]
   1739c:	ldr	r2, [r4, #24]
   173a0:	cmp	r2, #1
   173a4:	beq	17414 <argp_error@@Base+0x874>
   173a8:	ldr	r7, [r4]
   173ac:	cmp	r5, r7
   173b0:	beq	17498 <argp_error@@Base+0x8f8>
   173b4:	ldr	sl, [r9, r7, lsl #2]
   173b8:	ldr	r1, [pc, #1088]	; 17800 <argp_error@@Base+0xc60>
   173bc:	mov	r0, sl
   173c0:	bl	10f70 <strcmp@plt>
   173c4:	cmp	r0, #0
   173c8:	bne	177d0 <argp_error@@Base+0xc30>
   173cc:	add	r7, r7, #1
   173d0:	str	r7, [r4]
   173d4:	ldr	r2, [r4, #28]
   173d8:	ldr	r3, [r4, #32]
   173dc:	cmp	r7, r3
   173e0:	cmpne	r2, r3
   173e4:	beq	17488 <argp_error@@Base+0x8e8>
   173e8:	mov	r1, r4
   173ec:	mov	r0, r9
   173f0:	bl	16ce4 <argp_error@@Base+0x144>
   173f4:	b	17490 <argp_error@@Base+0x8f0>
   173f8:	ldr	r0, [pc, #1028]	; 17804 <argp_error@@Base+0xc64>
   173fc:	bl	11060 <getenv@plt>
   17400:	cmp	r0, #0
   17404:	bne	1734c <argp_error@@Base+0x7ac>
   17408:	mov	r3, #1
   1740c:	str	r3, [r4, #24]
   17410:	b	17354 <argp_error@@Base+0x7b4>
   17414:	ldr	r2, [r4, #32]
   17418:	ldr	r1, [r4, #28]
   1741c:	cmp	r1, r2
   17420:	cmpne	r3, r2
   17424:	beq	17438 <argp_error@@Base+0x898>
   17428:	mov	r1, r4
   1742c:	mov	r0, r9
   17430:	bl	16ce4 <argp_error@@Base+0x144>
   17434:	b	17440 <argp_error@@Base+0x8a0>
   17438:	cmp	r3, r2
   1743c:	strne	r3, [r4, #28]
   17440:	ldr	r3, [r4]
   17444:	cmp	r5, r3
   17448:	ble	17480 <argp_error@@Base+0x8e0>
   1744c:	add	r1, r9, r3, lsl #2
   17450:	b	17464 <argp_error@@Base+0x8c4>
   17454:	add	r3, r3, #1
   17458:	str	r3, [r4]
   1745c:	cmp	r5, r3
   17460:	beq	17480 <argp_error@@Base+0x8e0>
   17464:	ldr	r2, [r1], #4
   17468:	ldrb	r0, [r2]
   1746c:	cmp	r0, #45	; 0x2d
   17470:	bne	17454 <argp_error@@Base+0x8b4>
   17474:	ldrb	r2, [r2, #1]
   17478:	cmp	r2, #0
   1747c:	beq	17454 <argp_error@@Base+0x8b4>
   17480:	str	r3, [r4, #32]
   17484:	b	173a8 <argp_error@@Base+0x808>
   17488:	cmp	r2, r3
   1748c:	streq	r7, [r4, #28]
   17490:	str	r5, [r4, #32]
   17494:	str	r5, [r4]
   17498:	ldr	r3, [r4, #28]
   1749c:	ldr	r2, [r4, #32]
   174a0:	cmp	r3, r2
   174a4:	mvneq	r0, #0
   174a8:	strne	r3, [r4]
   174ac:	mvnne	r0, #0
   174b0:	b	17610 <argp_error@@Base+0xa70>
   174b4:	ldrb	r1, [sl, #1]
   174b8:	cmp	r1, #0
   174bc:	beq	177dc <argp_error@@Base+0xc3c>
   174c0:	ldr	r3, [sp, #24]
   174c4:	cmp	r3, #0
   174c8:	beq	174fc <argp_error@@Base+0x95c>
   174cc:	cmp	r1, #45	; 0x2d
   174d0:	beq	17574 <argp_error@@Base+0x9d4>
   174d4:	ldr	r3, [sp, #76]	; 0x4c
   174d8:	cmp	r3, #0
   174dc:	beq	174fc <argp_error@@Base+0x95c>
   174e0:	ldrb	r3, [sl, #2]
   174e4:	cmp	r3, #0
   174e8:	bne	175b4 <argp_error@@Base+0xa14>
   174ec:	mov	r0, r6
   174f0:	bl	11108 <strchr@plt>
   174f4:	cmp	r0, #0
   174f8:	beq	175b4 <argp_error@@Base+0xa14>
   174fc:	ldr	r3, [r4]
   17500:	ldr	r3, [r9, r3, lsl #2]
   17504:	add	r3, r3, #1
   17508:	str	r3, [r4, #20]
   1750c:	ldr	sl, [r4, #20]
   17510:	add	fp, sl, #1
   17514:	str	fp, [r4, #20]
   17518:	ldrb	r7, [sl]
   1751c:	str	r7, [sp, #28]
   17520:	mov	r1, r7
   17524:	mov	r0, r6
   17528:	bl	11108 <strchr@plt>
   1752c:	ldrb	r3, [sl, #1]
   17530:	cmp	r3, #0
   17534:	ldreq	r3, [r4]
   17538:	addeq	r3, r3, #1
   1753c:	streq	r3, [r4]
   17540:	sub	r3, r7, #58	; 0x3a
   17544:	uxtb	r3, r3
   17548:	cmp	r0, #0
   1754c:	cmpne	r3, #1
   17550:	bls	175fc <argp_error@@Base+0xa5c>
   17554:	ldrb	r3, [r0]
   17558:	cmp	r3, #87	; 0x57
   1755c:	beq	17634 <argp_error@@Base+0xa94>
   17560:	ldrb	r3, [r0, #1]
   17564:	cmp	r3, #58	; 0x3a
   17568:	beq	17700 <argp_error@@Base+0xb60>
   1756c:	mov	r0, r7
   17570:	b	17610 <argp_error@@Base+0xa70>
   17574:	add	sl, sl, #2
   17578:	str	sl, [r4, #20]
   1757c:	ldr	r3, [pc, #636]	; 17800 <argp_error@@Base+0xc60>
   17580:	str	r3, [sp, #16]
   17584:	str	r8, [sp, #12]
   17588:	str	r4, [sp, #8]
   1758c:	ldr	r3, [sp, #76]	; 0x4c
   17590:	str	r3, [sp, #4]
   17594:	ldr	r3, [sp, #72]	; 0x48
   17598:	str	r3, [sp]
   1759c:	ldr	r3, [sp, #24]
   175a0:	mov	r2, r6
   175a4:	mov	r1, r9
   175a8:	mov	r0, r5
   175ac:	bl	16db4 <argp_error@@Base+0x214>
   175b0:	b	17610 <argp_error@@Base+0xa70>
   175b4:	add	sl, sl, #1
   175b8:	str	sl, [r4, #20]
   175bc:	ldr	r3, [pc, #580]	; 17808 <argp_error@@Base+0xc68>
   175c0:	str	r3, [sp, #16]
   175c4:	str	r8, [sp, #12]
   175c8:	str	r4, [sp, #8]
   175cc:	ldr	r3, [sp, #76]	; 0x4c
   175d0:	str	r3, [sp, #4]
   175d4:	ldr	r3, [sp, #72]	; 0x48
   175d8:	str	r3, [sp]
   175dc:	ldr	r3, [sp, #24]
   175e0:	mov	r2, r6
   175e4:	mov	r1, r9
   175e8:	mov	r0, r5
   175ec:	bl	16db4 <argp_error@@Base+0x214>
   175f0:	cmn	r0, #1
   175f4:	bne	17610 <argp_error@@Base+0xa70>
   175f8:	b	174fc <argp_error@@Base+0x95c>
   175fc:	cmp	r8, #0
   17600:	bne	17618 <argp_error@@Base+0xa78>
   17604:	ldr	r3, [sp, #28]
   17608:	str	r3, [r4, #8]
   1760c:	mov	r0, #63	; 0x3f
   17610:	add	sp, sp, #36	; 0x24
   17614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17618:	ldr	r3, [sp, #28]
   1761c:	ldr	r2, [r9]
   17620:	ldr	r1, [pc, #484]	; 1780c <argp_error@@Base+0xc6c>
   17624:	ldr	r0, [pc, #484]	; 17810 <argp_error@@Base+0xc70>
   17628:	ldr	r0, [r0]
   1762c:	bl	11114 <fprintf@plt>
   17630:	b	17604 <argp_error@@Base+0xa64>
   17634:	ldrb	r3, [r0, #1]
   17638:	ldr	r2, [sp, #24]
   1763c:	cmp	r3, #59	; 0x3b
   17640:	movne	r3, #0
   17644:	moveq	r3, #1
   17648:	cmp	r2, #0
   1764c:	moveq	r3, #0
   17650:	cmp	r3, #0
   17654:	beq	17560 <argp_error@@Base+0x9c0>
   17658:	ldrb	r3, [sl, #1]
   1765c:	cmp	r3, #0
   17660:	strne	fp, [r4, #12]
   17664:	bne	1767c <argp_error@@Base+0xadc>
   17668:	ldr	r3, [r4]
   1766c:	cmp	r5, r3
   17670:	beq	176c0 <argp_error@@Base+0xb20>
   17674:	ldr	r3, [r9, r3, lsl #2]
   17678:	str	r3, [r4, #12]
   1767c:	ldr	r3, [r4, #12]
   17680:	str	r3, [r4, #20]
   17684:	mov	r3, #0
   17688:	str	r3, [r4, #12]
   1768c:	ldr	r2, [pc, #384]	; 17814 <argp_error@@Base+0xc74>
   17690:	str	r2, [sp, #16]
   17694:	str	r8, [sp, #12]
   17698:	str	r4, [sp, #8]
   1769c:	str	r3, [sp, #4]
   176a0:	ldr	r3, [sp, #72]	; 0x48
   176a4:	str	r3, [sp]
   176a8:	ldr	r3, [sp, #24]
   176ac:	mov	r2, r6
   176b0:	mov	r1, r9
   176b4:	mov	r0, r5
   176b8:	bl	16db4 <argp_error@@Base+0x214>
   176bc:	b	17610 <argp_error@@Base+0xa70>
   176c0:	cmp	r8, #0
   176c4:	bne	176e4 <argp_error@@Base+0xb44>
   176c8:	ldr	r3, [sp, #28]
   176cc:	str	r3, [r4, #8]
   176d0:	ldrb	r0, [r6]
   176d4:	cmp	r0, #58	; 0x3a
   176d8:	moveq	r0, #58	; 0x3a
   176dc:	movne	r0, #63	; 0x3f
   176e0:	b	17610 <argp_error@@Base+0xa70>
   176e4:	ldr	r3, [sp, #28]
   176e8:	ldr	r2, [r9]
   176ec:	ldr	r1, [pc, #292]	; 17818 <argp_error@@Base+0xc78>
   176f0:	ldr	r0, [pc, #280]	; 17810 <argp_error@@Base+0xc70>
   176f4:	ldr	r0, [r0]
   176f8:	bl	11114 <fprintf@plt>
   176fc:	b	176c8 <argp_error@@Base+0xb28>
   17700:	ldrb	r3, [r0, #2]
   17704:	cmp	r3, #58	; 0x3a
   17708:	beq	17734 <argp_error@@Base+0xb94>
   1770c:	ldrb	r3, [sl, #1]
   17710:	cmp	r3, #0
   17714:	beq	17760 <argp_error@@Base+0xbc0>
   17718:	str	fp, [r4, #12]
   1771c:	ldr	r3, [r4]
   17720:	add	r3, r3, #1
   17724:	str	r3, [r4]
   17728:	mov	r3, #0
   1772c:	str	r3, [r4, #20]
   17730:	b	1756c <argp_error@@Base+0x9cc>
   17734:	ldrb	r3, [sl, #1]
   17738:	cmp	r3, #0
   1773c:	strne	fp, [r4, #12]
   17740:	ldrne	r3, [r4]
   17744:	addne	r3, r3, #1
   17748:	strne	r3, [r4]
   1774c:	moveq	r3, #0
   17750:	streq	r3, [r4, #12]
   17754:	mov	r3, #0
   17758:	str	r3, [r4, #20]
   1775c:	b	1756c <argp_error@@Base+0x9cc>
   17760:	ldr	r3, [r4]
   17764:	cmp	r5, r3
   17768:	beq	17780 <argp_error@@Base+0xbe0>
   1776c:	add	r2, r3, #1
   17770:	str	r2, [r4]
   17774:	ldr	r3, [r9, r3, lsl #2]
   17778:	str	r3, [r4, #12]
   1777c:	b	17728 <argp_error@@Base+0xb88>
   17780:	cmp	r8, #0
   17784:	bne	177a4 <argp_error@@Base+0xc04>
   17788:	ldr	r3, [sp, #28]
   1778c:	str	r3, [r4, #8]
   17790:	ldrb	r7, [r6]
   17794:	cmp	r7, #58	; 0x3a
   17798:	moveq	r7, #58	; 0x3a
   1779c:	movne	r7, #63	; 0x3f
   177a0:	b	17728 <argp_error@@Base+0xb88>
   177a4:	ldr	r3, [sp, #28]
   177a8:	ldr	r2, [r9]
   177ac:	ldr	r1, [pc, #100]	; 17818 <argp_error@@Base+0xc78>
   177b0:	ldr	r0, [pc, #88]	; 17810 <argp_error@@Base+0xc70>
   177b4:	ldr	r0, [r0]
   177b8:	bl	11114 <fprintf@plt>
   177bc:	b	17788 <argp_error@@Base+0xbe8>
   177c0:	mvn	r0, #0
   177c4:	b	17610 <argp_error@@Base+0xa70>
   177c8:	mvn	r0, #0
   177cc:	b	17610 <argp_error@@Base+0xa70>
   177d0:	ldrb	r3, [sl]
   177d4:	cmp	r3, #45	; 0x2d
   177d8:	beq	174b4 <argp_error@@Base+0x914>
   177dc:	ldr	r3, [r4, #24]
   177e0:	cmp	r3, #0
   177e4:	beq	177c8 <argp_error@@Base+0xc28>
   177e8:	add	r3, r7, #1
   177ec:	str	r3, [r4]
   177f0:	ldr	r3, [r9, r7, lsl #2]
   177f4:	str	r3, [r4, #12]
   177f8:	mov	r0, #1
   177fc:	b	17610 <argp_error@@Base+0xa70>
   17800:	andeq	r8, r1, r0, ror r8
   17804:	andeq	r9, r1, r0, lsr #3
   17808:			; <UNDEFINED> instruction: 0x000191b0
   1780c:			; <UNDEFINED> instruction: 0x000191b4
   17810:	andeq	sl, r2, r0, ror #4
   17814:	strdeq	r9, [r1], -ip
   17818:	ldrdeq	r9, [r1], -r0
   1781c:	push	{r4, r5, lr}
   17820:	sub	sp, sp, #20
   17824:	ldr	r4, [pc, #84]	; 17880 <argp_error@@Base+0xce0>
   17828:	ldr	r5, [pc, #84]	; 17884 <argp_error@@Base+0xce4>
   1782c:	ldr	ip, [r5]
   17830:	str	ip, [r4]
   17834:	ldr	ip, [r5, #4]
   17838:	str	ip, [r4, #4]
   1783c:	ldr	ip, [sp, #40]	; 0x28
   17840:	str	ip, [sp, #12]
   17844:	str	r4, [sp, #8]
   17848:	ldr	ip, [sp, #36]	; 0x24
   1784c:	str	ip, [sp, #4]
   17850:	ldr	ip, [sp, #32]
   17854:	str	ip, [sp]
   17858:	bl	172a0 <argp_error@@Base+0x700>
   1785c:	ldr	r3, [r4]
   17860:	str	r3, [r5]
   17864:	ldr	r2, [r4, #12]
   17868:	ldr	r3, [pc, #24]	; 17888 <argp_error@@Base+0xce8>
   1786c:	str	r2, [r3]
   17870:	ldr	r3, [r4, #8]
   17874:	str	r3, [r5, #8]
   17878:	add	sp, sp, #20
   1787c:	pop	{r4, r5, pc}
   17880:	andeq	sl, r2, r8, lsl #5
   17884:	andeq	sl, r2, r4, asr #4
   17888:			; <UNDEFINED> instruction: 0x0002a2b4
   1788c:	push	{lr}		; (str lr, [sp, #-4]!)
   17890:	sub	sp, sp, #20
   17894:	mov	r3, #1
   17898:	str	r3, [sp, #8]
   1789c:	mov	r3, #0
   178a0:	str	r3, [sp, #4]
   178a4:	str	r3, [sp]
   178a8:	bl	1781c <argp_error@@Base+0xc7c>
   178ac:	add	sp, sp, #20
   178b0:	pop	{pc}		; (ldr pc, [sp], #4)
   178b4:	push	{r4, r5, r6, lr}
   178b8:	mov	r6, r0
   178bc:	mov	r5, r1
   178c0:	subs	r4, r2, #0
   178c4:	beq	178f0 <argp_error@@Base+0xd50>
   178c8:	mov	r1, r4
   178cc:	mvn	r0, #0
   178d0:	bl	1808c <argp_error@@Base+0x14ec>
   178d4:	cmp	r0, r5
   178d8:	bcs	178f0 <argp_error@@Base+0xd50>
   178dc:	bl	11120 <__errno_location@plt>
   178e0:	mov	r3, #12
   178e4:	str	r3, [r0]
   178e8:	mov	r0, #0
   178ec:	pop	{r4, r5, r6, pc}
   178f0:	mul	r1, r5, r4
   178f4:	mov	r0, r6
   178f8:	bl	13ad0 <argp_parse@@Base+0x1a1c>
   178fc:	pop	{r4, r5, r6, pc}
   17900:	push	{r4, r5, r6, r7, r8, lr}
   17904:	mov	r8, r0
   17908:	mov	r7, r1
   1790c:	mov	r6, r2
   17910:	mov	r5, r3
   17914:	mov	r0, #36	; 0x24
   17918:	bl	13aa0 <argp_parse@@Base+0x19ec>
   1791c:	subs	r4, r0, #0
   17920:	beq	17960 <argp_error@@Base+0xdc0>
   17924:	str	r8, [r4]
   17928:	str	r7, [r4, #4]
   1792c:	str	r6, [r4, #8]
   17930:	str	r5, [r4, #12]
   17934:	mov	r3, #0
   17938:	str	r3, [r4, #20]
   1793c:	str	r3, [r4, #16]
   17940:	mov	r0, #200	; 0xc8
   17944:	bl	13aa0 <argp_parse@@Base+0x19ec>
   17948:	str	r0, [r4, #24]
   1794c:	cmp	r0, #0
   17950:	strne	r0, [r4, #28]
   17954:	addne	r0, r0, #200	; 0xc8
   17958:	strne	r0, [r4, #32]
   1795c:	beq	17968 <argp_error@@Base+0xdc8>
   17960:	mov	r0, r4
   17964:	pop	{r4, r5, r6, r7, r8, pc}
   17968:	mov	r0, r4
   1796c:	bl	12ca8 <argp_parse@@Base+0xbf4>
   17970:	mov	r4, #0
   17974:	b	17960 <argp_error@@Base+0xdc0>
   17978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1797c:	sub	sp, sp, #20
   17980:	mov	r4, r0
   17984:	ldr	r2, [r0, #24]
   17988:	ldr	r3, [r0, #16]
   1798c:	add	r9, r2, r3
   17990:	mov	sl, #32
   17994:	b	17a40 <argp_error@@Base+0xea0>
   17998:	add	r5, r5, #1
   1799c:	cmp	r6, r5
   179a0:	beq	179d0 <argp_error@@Base+0xe30>
   179a4:	ldr	r0, [r4]
   179a8:	ldr	r3, [r0, #20]
   179ac:	ldr	r2, [r0, #24]
   179b0:	cmp	r3, r2
   179b4:	addcc	r2, r3, #1
   179b8:	strcc	r2, [r0, #20]
   179bc:	strbcc	sl, [r3]
   179c0:	bcc	17998 <argp_error@@Base+0xdf8>
   179c4:	mov	r1, sl
   179c8:	bl	1115c <__overflow@plt>
   179cc:	b	17998 <argp_error@@Base+0xdf8>
   179d0:	str	r6, [r4, #20]
   179d4:	ldr	fp, [r4, #28]
   179d8:	str	fp, [sp, #8]
   179dc:	str	r9, [sp, #4]
   179e0:	sub	r3, fp, r9
   179e4:	str	r3, [sp]
   179e8:	mov	r2, r3
   179ec:	mov	r1, #10
   179f0:	mov	r0, r9
   179f4:	bl	11144 <memchr@plt>
   179f8:	mov	r7, r0
   179fc:	ldr	r3, [r4, #20]
   17a00:	cmp	r3, #0
   17a04:	movlt	r3, #0
   17a08:	strlt	r3, [r4, #20]
   17a0c:	cmp	r7, #0
   17a10:	beq	17ab0 <argp_error@@Base+0xf10>
   17a14:	ldr	r0, [r4, #20]
   17a18:	mov	r5, r7
   17a1c:	ldr	r8, [r4, #8]
   17a20:	ldr	r3, [sp, #4]
   17a24:	sub	r3, r7, r3
   17a28:	add	r3, r3, r0
   17a2c:	cmp	r3, r8
   17a30:	bge	17b00 <argp_error@@Base+0xf60>
   17a34:	mov	r3, #0
   17a38:	str	r3, [r4, #20]
   17a3c:	add	r9, r7, #1
   17a40:	ldr	fp, [r4, #28]
   17a44:	cmp	r9, fp
   17a48:	bcs	17ae8 <argp_error@@Base+0xf48>
   17a4c:	ldr	r3, [r4, #20]
   17a50:	cmp	r3, #0
   17a54:	bne	179d4 <argp_error@@Base+0xe34>
   17a58:	ldr	r6, [r4, #4]
   17a5c:	cmp	r6, #0
   17a60:	beq	17eac <argp_error@@Base+0x130c>
   17a64:	add	r3, fp, r6
   17a68:	ldr	r2, [r4, #32]
   17a6c:	cmp	r2, r3
   17a70:	movls	r5, #0
   17a74:	bls	179a4 <argp_error@@Base+0xe04>
   17a78:	add	r5, r9, r6
   17a7c:	sub	r2, fp, r9
   17a80:	mov	r1, r9
   17a84:	mov	r0, r5
   17a88:	bl	10fa0 <memmove@plt>
   17a8c:	ldr	r3, [r4, #28]
   17a90:	add	r3, r3, r6
   17a94:	str	r3, [r4, #28]
   17a98:	mov	r2, r6
   17a9c:	mov	r1, sl
   17aa0:	mov	r0, r9
   17aa4:	bl	11138 <memset@plt>
   17aa8:	mov	r9, r5
   17aac:	b	179d0 <argp_error@@Base+0xe30>
   17ab0:	ldr	r3, [r4, #20]
   17ab4:	ldr	r2, [sp]
   17ab8:	add	r3, r2, r3
   17abc:	ldr	r6, [r4, #8]
   17ac0:	cmp	r3, r6
   17ac4:	bcc	17ae4 <argp_error@@Base+0xf44>
   17ac8:	sub	r6, r6, #1
   17acc:	ldr	r3, [r4, #12]
   17ad0:	str	r3, [sp, #12]
   17ad4:	cmp	r3, #0
   17ad8:	blt	17bf4 <argp_error@@Base+0x1054>
   17adc:	mov	r7, fp
   17ae0:	b	17b14 <argp_error@@Base+0xf74>
   17ae4:	str	r3, [r4, #20]
   17ae8:	ldr	r3, [r4, #28]
   17aec:	ldr	r2, [r4, #24]
   17af0:	sub	r3, r3, r2
   17af4:	str	r3, [r4, #16]
   17af8:	add	sp, sp, #20
   17afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b00:	sub	r6, r8, #1
   17b04:	ldr	r3, [r4, #12]
   17b08:	str	r3, [sp, #12]
   17b0c:	cmp	r3, #0
   17b10:	blt	17ba8 <argp_error@@Base+0x1008>
   17b14:	ldr	r5, [r4, #20]
   17b18:	rsb	r5, r5, #1
   17b1c:	add	r5, r5, r6
   17b20:	adds	r5, r9, r5
   17b24:	bcs	17ed4 <argp_error@@Base+0x1334>
   17b28:	bl	110d8 <__ctype_b_loc@plt>
   17b2c:	ldr	r0, [r0]
   17b30:	mov	r3, r5
   17b34:	mov	r1, r3
   17b38:	sub	r3, r3, #1
   17b3c:	ldrb	r2, [r1]
   17b40:	lsl	r2, r2, #1
   17b44:	ldrh	r2, [r0, r2]
   17b48:	tst	r2, #1
   17b4c:	bne	17c14 <argp_error@@Base+0x1074>
   17b50:	mov	r1, r3
   17b54:	cmp	r3, r9
   17b58:	bcs	17b34 <argp_error@@Base+0xf94>
   17b5c:	add	r6, r1, #1
   17b60:	cmp	r6, r9
   17b64:	bhi	17c50 <argp_error@@Base+0x10b0>
   17b68:	cmp	r5, r7
   17b6c:	bcs	17d00 <argp_error@@Base+0x1160>
   17b70:	add	r6, r5, #1
   17b74:	mov	r8, r7
   17b78:	mov	r5, r6
   17b7c:	cmp	r8, r6
   17b80:	beq	17d00 <argp_error@@Base+0x1160>
   17b84:	bl	110d8 <__ctype_b_loc@plt>
   17b88:	add	r6, r6, #1
   17b8c:	ldrb	r3, [r5]
   17b90:	ldr	r2, [r0]
   17b94:	lsl	r3, r3, #1
   17b98:	ldrh	r3, [r2, r3]
   17b9c:	tst	r3, #1
   17ba0:	beq	17b78 <argp_error@@Base+0xfd8>
   17ba4:	b	17d14 <argp_error@@Base+0x1174>
   17ba8:	cmp	fp, r7
   17bac:	bls	17bf4 <argp_error@@Base+0x1054>
   17bb0:	sub	r0, r6, r0
   17bb4:	ldr	r3, [sp, #8]
   17bb8:	sub	r2, r3, r7
   17bbc:	mov	r1, r7
   17bc0:	add	r0, r9, r0
   17bc4:	bl	10fa0 <memmove@plt>
   17bc8:	ldr	r3, [r4, #20]
   17bcc:	sub	r6, r6, r3
   17bd0:	add	r6, r9, r6
   17bd4:	sub	r5, r6, r7
   17bd8:	ldr	r3, [r4, #28]
   17bdc:	sub	r5, r3, r5
   17be0:	str	r5, [r4, #28]
   17be4:	mov	r3, #0
   17be8:	str	r3, [r4, #20]
   17bec:	add	r9, r9, r8
   17bf0:	b	17a40 <argp_error@@Base+0xea0>
   17bf4:	ldr	r3, [r4, #20]
   17bf8:	ldr	r2, [sp]
   17bfc:	add	r3, r2, r3
   17c00:	str	r3, [r4, #20]
   17c04:	sub	r3, r6, r3
   17c08:	add	r3, fp, r3
   17c0c:	str	r3, [r4, #28]
   17c10:	b	17ae8 <argp_error@@Base+0xf48>
   17c14:	add	r6, r1, #1
   17c18:	cmp	r6, r9
   17c1c:	bls	17b68 <argp_error@@Base+0xfc8>
   17c20:	cmp	r1, r9
   17c24:	bcc	17c50 <argp_error@@Base+0x10b0>
   17c28:	sub	ip, r9, #1
   17c2c:	mov	r1, r3
   17c30:	cmp	ip, r3
   17c34:	beq	17c50 <argp_error@@Base+0x10b0>
   17c38:	sub	r3, r3, #1
   17c3c:	ldrb	r2, [r1]
   17c40:	lsl	r2, r2, #1
   17c44:	ldrh	r2, [r0, r2]
   17c48:	tst	r2, #1
   17c4c:	bne	17c2c <argp_error@@Base+0x108c>
   17c50:	add	r5, r1, #1
   17c54:	ldr	r3, [sp]
   17c58:	add	r3, r3, #1
   17c5c:	add	r3, r9, r3
   17c60:	cmp	r6, r3
   17c64:	beq	17d38 <argp_error@@Base+0x1198>
   17c68:	add	r3, r5, #1
   17c6c:	sub	r3, r6, r3
   17c70:	ldr	r2, [sp, #12]
   17c74:	cmp	r3, r2
   17c78:	bge	17d50 <argp_error@@Base+0x11b0>
   17c7c:	cmp	r6, fp
   17c80:	bcs	17d50 <argp_error@@Base+0x11b0>
   17c84:	ldr	r3, [r4, #32]
   17c88:	ldr	r2, [sp, #8]
   17c8c:	sub	r3, r3, r2
   17c90:	ldr	r2, [sp, #12]
   17c94:	add	r2, r2, #1
   17c98:	cmp	r3, r2
   17c9c:	bgt	17d98 <argp_error@@Base+0x11f8>
   17ca0:	ldr	r0, [r4, #24]
   17ca4:	cmp	r5, r0
   17ca8:	bls	17cbc <argp_error@@Base+0x111c>
   17cac:	ldr	r3, [r4]
   17cb0:	sub	r2, r5, r0
   17cb4:	mov	r1, #1
   17cb8:	bl	10fdc <fwrite_unlocked@plt>
   17cbc:	ldr	r0, [r4]
   17cc0:	ldr	r3, [r0, #20]
   17cc4:	ldr	r2, [r0, #24]
   17cc8:	cmp	r3, r2
   17ccc:	addcc	r2, r3, #1
   17cd0:	strcc	r2, [r0, #20]
   17cd4:	movcc	r2, #10
   17cd8:	strbcc	r2, [r3]
   17cdc:	bcs	17de4 <argp_error@@Base+0x1244>
   17ce0:	ldr	r7, [r4, #24]
   17ce4:	ldr	r3, [sp, #4]
   17ce8:	sub	r3, r3, r7
   17cec:	ldr	r2, [sp]
   17cf0:	add	r3, r2, r3
   17cf4:	str	r3, [sp]
   17cf8:	mov	r9, r7
   17cfc:	b	17d60 <argp_error@@Base+0x11c0>
   17d00:	cmp	r5, r7
   17d04:	moveq	r3, #0
   17d08:	streq	r3, [r4, #20]
   17d0c:	addeq	r9, r7, #1
   17d10:	beq	17a40 <argp_error@@Base+0xea0>
   17d14:	bl	110d8 <__ctype_b_loc@plt>
   17d18:	ldr	r2, [r0]
   17d1c:	mov	r6, r5
   17d20:	ldrb	r3, [r6, #1]!
   17d24:	lsl	r3, r3, #1
   17d28:	ldrh	r3, [r2, r3]
   17d2c:	tst	r3, #1
   17d30:	bne	17d20 <argp_error@@Base+0x1180>
   17d34:	b	17c54 <argp_error@@Base+0x10b4>
   17d38:	ldr	r3, [r4, #32]
   17d3c:	sub	r3, r3, r5
   17d40:	ldr	r2, [sp, #12]
   17d44:	add	r2, r2, #1
   17d48:	cmp	r3, r2
   17d4c:	blt	17c7c <argp_error@@Base+0x10dc>
   17d50:	mov	r3, #10
   17d54:	strb	r3, [r5]
   17d58:	mov	r7, r9
   17d5c:	add	r9, r5, #1
   17d60:	mov	r8, r6
   17d64:	ldr	r3, [r4, #12]
   17d68:	sub	r2, r6, r9
   17d6c:	cmp	r2, r3
   17d70:	bge	17e00 <argp_error@@Base+0x1260>
   17d74:	ldr	r2, [sp]
   17d78:	add	r2, r2, #1
   17d7c:	add	r2, r7, r2
   17d80:	cmp	r6, r2
   17d84:	beq	17df0 <argp_error@@Base+0x1250>
   17d88:	cmp	r3, #0
   17d8c:	movgt	r5, #0
   17d90:	bgt	17e64 <argp_error@@Base+0x12c4>
   17d94:	b	17e24 <argp_error@@Base+0x1284>
   17d98:	ldr	r3, [sp, #8]
   17d9c:	sub	r7, r3, r6
   17da0:	mov	r0, r2
   17da4:	mov	r2, r7
   17da8:	mov	r1, r6
   17dac:	add	r0, r5, r0
   17db0:	bl	10fa0 <memmove@plt>
   17db4:	ldr	r6, [r4, #12]
   17db8:	add	r6, r6, #1
   17dbc:	add	r6, r5, r6
   17dc0:	add	r7, r6, r7
   17dc4:	ldr	r3, [sp, #4]
   17dc8:	sub	r3, r7, r3
   17dcc:	str	r3, [sp]
   17dd0:	mov	r3, #10
   17dd4:	strb	r3, [r5]
   17dd8:	mov	r7, r9
   17ddc:	add	r9, r5, #1
   17de0:	b	17d60 <argp_error@@Base+0x11c0>
   17de4:	mov	r1, #10
   17de8:	bl	1115c <__overflow@plt>
   17dec:	b	17ce0 <argp_error@@Base+0x1140>
   17df0:	ldr	r2, [r4, #32]
   17df4:	sub	r2, r2, r6
   17df8:	cmp	r3, r2
   17dfc:	bgt	17d88 <argp_error@@Base+0x11e8>
   17e00:	cmp	r3, #0
   17e04:	ble	17e24 <argp_error@@Base+0x1284>
   17e08:	mov	r3, r9
   17e0c:	strb	sl, [r3], #1
   17e10:	sub	r1, r3, r9
   17e14:	ldr	r2, [r4, #12]
   17e18:	cmp	r1, r2
   17e1c:	blt	17e0c <argp_error@@Base+0x126c>
   17e20:	mov	r9, r3
   17e24:	cmp	r9, r6
   17e28:	bcc	17e90 <argp_error@@Base+0x12f0>
   17e2c:	sub	r7, r8, r7
   17e30:	ldr	r3, [sp]
   17e34:	sub	r7, r3, r7
   17e38:	add	r7, r9, r7
   17e3c:	str	r7, [r4, #28]
   17e40:	ldr	r3, [r4, #12]
   17e44:	cmp	r3, #0
   17e48:	mvneq	r3, #0
   17e4c:	str	r3, [r4, #20]
   17e50:	b	17a40 <argp_error@@Base+0xea0>
   17e54:	add	r5, r5, #1
   17e58:	ldr	r3, [r4, #12]
   17e5c:	cmp	r3, r5
   17e60:	ble	17e24 <argp_error@@Base+0x1284>
   17e64:	ldr	r0, [r4]
   17e68:	ldr	r3, [r0, #20]
   17e6c:	ldr	r2, [r0, #24]
   17e70:	cmp	r3, r2
   17e74:	addcc	r2, r3, #1
   17e78:	strcc	r2, [r0, #20]
   17e7c:	strbcc	sl, [r3]
   17e80:	bcc	17e54 <argp_error@@Base+0x12b4>
   17e84:	mov	r1, sl
   17e88:	bl	1115c <__overflow@plt>
   17e8c:	b	17e54 <argp_error@@Base+0x12b4>
   17e90:	ldr	r3, [sp]
   17e94:	add	r2, r7, r3
   17e98:	sub	r2, r2, r8
   17e9c:	mov	r1, r6
   17ea0:	mov	r0, r9
   17ea4:	bl	10fa0 <memmove@plt>
   17ea8:	b	17e2c <argp_error@@Base+0x128c>
   17eac:	str	fp, [sp, #8]
   17eb0:	str	r9, [sp, #4]
   17eb4:	sub	r3, fp, r9
   17eb8:	str	r3, [sp]
   17ebc:	mov	r2, r3
   17ec0:	mov	r1, #10
   17ec4:	mov	r0, r9
   17ec8:	bl	11144 <memchr@plt>
   17ecc:	mov	r7, r0
   17ed0:	b	17a0c <argp_error@@Base+0xe6c>
   17ed4:	mov	r1, r5
   17ed8:	b	17b5c <argp_error@@Base+0xfbc>
   17edc:	push	{r4, lr}
   17ee0:	mov	r4, r0
   17ee4:	bl	17978 <argp_error@@Base+0xdd8>
   17ee8:	ldr	r2, [r4, #28]
   17eec:	ldr	r0, [r4, #24]
   17ef0:	cmp	r2, r0
   17ef4:	bls	17f08 <argp_error@@Base+0x1368>
   17ef8:	ldr	r3, [r4]
   17efc:	sub	r2, r2, r0
   17f00:	mov	r1, #1
   17f04:	bl	10fdc <fwrite_unlocked@plt>
   17f08:	ldr	r0, [r4, #24]
   17f0c:	bl	12ca8 <argp_parse@@Base+0xbf4>
   17f10:	mov	r0, r4
   17f14:	bl	12ca8 <argp_parse@@Base+0xbf4>
   17f18:	pop	{r4, pc}
   17f1c:	ldr	r3, [r0, #32]
   17f20:	ldr	r2, [r0, #28]
   17f24:	sub	r3, r3, r2
   17f28:	cmp	r3, r1
   17f2c:	bcc	17f38 <argp_error@@Base+0x1398>
   17f30:	mov	r0, #1
   17f34:	bx	lr
   17f38:	push	{r4, r5, r6, lr}
   17f3c:	mov	r5, r1
   17f40:	mov	r4, r0
   17f44:	bl	17978 <argp_error@@Base+0xdd8>
   17f48:	ldr	r0, [r4, #24]
   17f4c:	ldr	r2, [r4, #28]
   17f50:	ldr	r3, [r4]
   17f54:	sub	r2, r2, r0
   17f58:	mov	r1, #1
   17f5c:	bl	10fdc <fwrite_unlocked@plt>
   17f60:	ldr	r2, [r4, #28]
   17f64:	ldr	r3, [r4, #24]
   17f68:	sub	r1, r2, r3
   17f6c:	cmp	r0, r1
   17f70:	bne	17fb4 <argp_error@@Base+0x1414>
   17f74:	str	r3, [r4, #28]
   17f78:	mov	r2, #0
   17f7c:	str	r2, [r4, #16]
   17f80:	ldr	r1, [r4, #32]
   17f84:	sub	r1, r1, r3
   17f88:	cmp	r5, r1
   17f8c:	bls	17fac <argp_error@@Base+0x140c>
   17f90:	adds	r5, r5, r1
   17f94:	bcc	17fe0 <argp_error@@Base+0x1440>
   17f98:	bl	11120 <__errno_location@plt>
   17f9c:	mov	r3, #12
   17fa0:	str	r3, [r0]
   17fa4:	mov	r0, #0
   17fa8:	pop	{r4, r5, r6, pc}
   17fac:	mov	r0, #1
   17fb0:	pop	{r4, r5, r6, pc}
   17fb4:	sub	r2, r2, r0
   17fb8:	str	r2, [r4, #28]
   17fbc:	ldr	r1, [r4, #16]
   17fc0:	sub	r1, r1, r0
   17fc4:	str	r1, [r4, #16]
   17fc8:	sub	r2, r2, r3
   17fcc:	add	r1, r3, r0
   17fd0:	mov	r0, r3
   17fd4:	bl	10fa0 <memmove@plt>
   17fd8:	mov	r0, #0
   17fdc:	pop	{r4, r5, r6, pc}
   17fe0:	mov	r1, r5
   17fe4:	mov	r0, r3
   17fe8:	bl	13ad0 <argp_parse@@Base+0x1a1c>
   17fec:	cmp	r0, #0
   17ff0:	beq	17f98 <argp_error@@Base+0x13f8>
   17ff4:	str	r0, [r4, #24]
   17ff8:	add	r5, r0, r5
   17ffc:	str	r5, [r4, #32]
   18000:	str	r0, [r4, #28]
   18004:	mov	r0, #1
   18008:	pop	{r4, r5, r6, pc}
   1800c:	push	{r1, r2, r3}
   18010:	push	{r4, r5, r6, r7, lr}
   18014:	sub	sp, sp, #8
   18018:	mov	r5, r0
   1801c:	ldr	r7, [sp, #28]
   18020:	mov	r1, #150	; 0x96
   18024:	add	r6, sp, #32
   18028:	mov	r0, r5
   1802c:	bl	17f1c <argp_error@@Base+0x137c>
   18030:	cmp	r0, #0
   18034:	beq	18068 <argp_error@@Base+0x14c8>
   18038:	str	r6, [sp, #4]
   1803c:	ldr	r0, [r5, #28]
   18040:	ldr	r4, [r5, #32]
   18044:	sub	r4, r4, r0
   18048:	mov	r3, r6
   1804c:	mov	r2, r7
   18050:	mov	r1, r4
   18054:	bl	111a4 <vsnprintf@plt>
   18058:	cmp	r4, r0
   1805c:	bhi	18070 <argp_error@@Base+0x14d0>
   18060:	add	r1, r0, #1
   18064:	b	18028 <argp_error@@Base+0x1488>
   18068:	mvn	r0, #0
   1806c:	b	1807c <argp_error@@Base+0x14dc>
   18070:	ldr	r3, [r5, #28]
   18074:	add	r3, r3, r0
   18078:	str	r3, [r5, #28]
   1807c:	add	sp, sp, #8
   18080:	pop	{r4, r5, r6, r7, lr}
   18084:	add	sp, sp, #12
   18088:	bx	lr
   1808c:	subs	r2, r1, #1
   18090:	bxeq	lr
   18094:	bcc	1826c <argp_error@@Base+0x16cc>
   18098:	cmp	r0, r1
   1809c:	bls	18250 <argp_error@@Base+0x16b0>
   180a0:	tst	r1, r2
   180a4:	beq	1825c <argp_error@@Base+0x16bc>
   180a8:	clz	r3, r0
   180ac:	clz	r2, r1
   180b0:	sub	r3, r2, r3
   180b4:	rsbs	r3, r3, #31
   180b8:	addne	r3, r3, r3, lsl #1
   180bc:	mov	r2, #0
   180c0:	addne	pc, pc, r3, lsl #2
   180c4:	nop			; (mov r0, r0)
   180c8:	cmp	r0, r1, lsl #31
   180cc:	adc	r2, r2, r2
   180d0:	subcs	r0, r0, r1, lsl #31
   180d4:	cmp	r0, r1, lsl #30
   180d8:	adc	r2, r2, r2
   180dc:	subcs	r0, r0, r1, lsl #30
   180e0:	cmp	r0, r1, lsl #29
   180e4:	adc	r2, r2, r2
   180e8:	subcs	r0, r0, r1, lsl #29
   180ec:	cmp	r0, r1, lsl #28
   180f0:	adc	r2, r2, r2
   180f4:	subcs	r0, r0, r1, lsl #28
   180f8:	cmp	r0, r1, lsl #27
   180fc:	adc	r2, r2, r2
   18100:	subcs	r0, r0, r1, lsl #27
   18104:	cmp	r0, r1, lsl #26
   18108:	adc	r2, r2, r2
   1810c:	subcs	r0, r0, r1, lsl #26
   18110:	cmp	r0, r1, lsl #25
   18114:	adc	r2, r2, r2
   18118:	subcs	r0, r0, r1, lsl #25
   1811c:	cmp	r0, r1, lsl #24
   18120:	adc	r2, r2, r2
   18124:	subcs	r0, r0, r1, lsl #24
   18128:	cmp	r0, r1, lsl #23
   1812c:	adc	r2, r2, r2
   18130:	subcs	r0, r0, r1, lsl #23
   18134:	cmp	r0, r1, lsl #22
   18138:	adc	r2, r2, r2
   1813c:	subcs	r0, r0, r1, lsl #22
   18140:	cmp	r0, r1, lsl #21
   18144:	adc	r2, r2, r2
   18148:	subcs	r0, r0, r1, lsl #21
   1814c:	cmp	r0, r1, lsl #20
   18150:	adc	r2, r2, r2
   18154:	subcs	r0, r0, r1, lsl #20
   18158:	cmp	r0, r1, lsl #19
   1815c:	adc	r2, r2, r2
   18160:	subcs	r0, r0, r1, lsl #19
   18164:	cmp	r0, r1, lsl #18
   18168:	adc	r2, r2, r2
   1816c:	subcs	r0, r0, r1, lsl #18
   18170:	cmp	r0, r1, lsl #17
   18174:	adc	r2, r2, r2
   18178:	subcs	r0, r0, r1, lsl #17
   1817c:	cmp	r0, r1, lsl #16
   18180:	adc	r2, r2, r2
   18184:	subcs	r0, r0, r1, lsl #16
   18188:	cmp	r0, r1, lsl #15
   1818c:	adc	r2, r2, r2
   18190:	subcs	r0, r0, r1, lsl #15
   18194:	cmp	r0, r1, lsl #14
   18198:	adc	r2, r2, r2
   1819c:	subcs	r0, r0, r1, lsl #14
   181a0:	cmp	r0, r1, lsl #13
   181a4:	adc	r2, r2, r2
   181a8:	subcs	r0, r0, r1, lsl #13
   181ac:	cmp	r0, r1, lsl #12
   181b0:	adc	r2, r2, r2
   181b4:	subcs	r0, r0, r1, lsl #12
   181b8:	cmp	r0, r1, lsl #11
   181bc:	adc	r2, r2, r2
   181c0:	subcs	r0, r0, r1, lsl #11
   181c4:	cmp	r0, r1, lsl #10
   181c8:	adc	r2, r2, r2
   181cc:	subcs	r0, r0, r1, lsl #10
   181d0:	cmp	r0, r1, lsl #9
   181d4:	adc	r2, r2, r2
   181d8:	subcs	r0, r0, r1, lsl #9
   181dc:	cmp	r0, r1, lsl #8
   181e0:	adc	r2, r2, r2
   181e4:	subcs	r0, r0, r1, lsl #8
   181e8:	cmp	r0, r1, lsl #7
   181ec:	adc	r2, r2, r2
   181f0:	subcs	r0, r0, r1, lsl #7
   181f4:	cmp	r0, r1, lsl #6
   181f8:	adc	r2, r2, r2
   181fc:	subcs	r0, r0, r1, lsl #6
   18200:	cmp	r0, r1, lsl #5
   18204:	adc	r2, r2, r2
   18208:	subcs	r0, r0, r1, lsl #5
   1820c:	cmp	r0, r1, lsl #4
   18210:	adc	r2, r2, r2
   18214:	subcs	r0, r0, r1, lsl #4
   18218:	cmp	r0, r1, lsl #3
   1821c:	adc	r2, r2, r2
   18220:	subcs	r0, r0, r1, lsl #3
   18224:	cmp	r0, r1, lsl #2
   18228:	adc	r2, r2, r2
   1822c:	subcs	r0, r0, r1, lsl #2
   18230:	cmp	r0, r1, lsl #1
   18234:	adc	r2, r2, r2
   18238:	subcs	r0, r0, r1, lsl #1
   1823c:	cmp	r0, r1
   18240:	adc	r2, r2, r2
   18244:	subcs	r0, r0, r1
   18248:	mov	r0, r2
   1824c:	bx	lr
   18250:	moveq	r0, #1
   18254:	movne	r0, #0
   18258:	bx	lr
   1825c:	clz	r2, r1
   18260:	rsb	r2, r2, #31
   18264:	lsr	r0, r0, r2
   18268:	bx	lr
   1826c:	cmp	r0, #0
   18270:	mvnne	r0, #0
   18274:	b	184d8 <argp_error@@Base+0x1938>
   18278:	cmp	r1, #0
   1827c:	beq	1826c <argp_error@@Base+0x16cc>
   18280:	push	{r0, r1, lr}
   18284:	bl	1808c <argp_error@@Base+0x14ec>
   18288:	pop	{r1, r2, lr}
   1828c:	mul	r3, r2, r0
   18290:	sub	r1, r1, r3
   18294:	bx	lr
   18298:	cmp	r1, #0
   1829c:	beq	184a8 <argp_error@@Base+0x1908>
   182a0:	eor	ip, r0, r1
   182a4:	rsbmi	r1, r1, #0
   182a8:	subs	r2, r1, #1
   182ac:	beq	18474 <argp_error@@Base+0x18d4>
   182b0:	movs	r3, r0
   182b4:	rsbmi	r3, r0, #0
   182b8:	cmp	r3, r1
   182bc:	bls	18480 <argp_error@@Base+0x18e0>
   182c0:	tst	r1, r2
   182c4:	beq	18490 <argp_error@@Base+0x18f0>
   182c8:	clz	r2, r3
   182cc:	clz	r0, r1
   182d0:	sub	r2, r0, r2
   182d4:	rsbs	r2, r2, #31
   182d8:	addne	r2, r2, r2, lsl #1
   182dc:	mov	r0, #0
   182e0:	addne	pc, pc, r2, lsl #2
   182e4:	nop			; (mov r0, r0)
   182e8:	cmp	r3, r1, lsl #31
   182ec:	adc	r0, r0, r0
   182f0:	subcs	r3, r3, r1, lsl #31
   182f4:	cmp	r3, r1, lsl #30
   182f8:	adc	r0, r0, r0
   182fc:	subcs	r3, r3, r1, lsl #30
   18300:	cmp	r3, r1, lsl #29
   18304:	adc	r0, r0, r0
   18308:	subcs	r3, r3, r1, lsl #29
   1830c:	cmp	r3, r1, lsl #28
   18310:	adc	r0, r0, r0
   18314:	subcs	r3, r3, r1, lsl #28
   18318:	cmp	r3, r1, lsl #27
   1831c:	adc	r0, r0, r0
   18320:	subcs	r3, r3, r1, lsl #27
   18324:	cmp	r3, r1, lsl #26
   18328:	adc	r0, r0, r0
   1832c:	subcs	r3, r3, r1, lsl #26
   18330:	cmp	r3, r1, lsl #25
   18334:	adc	r0, r0, r0
   18338:	subcs	r3, r3, r1, lsl #25
   1833c:	cmp	r3, r1, lsl #24
   18340:	adc	r0, r0, r0
   18344:	subcs	r3, r3, r1, lsl #24
   18348:	cmp	r3, r1, lsl #23
   1834c:	adc	r0, r0, r0
   18350:	subcs	r3, r3, r1, lsl #23
   18354:	cmp	r3, r1, lsl #22
   18358:	adc	r0, r0, r0
   1835c:	subcs	r3, r3, r1, lsl #22
   18360:	cmp	r3, r1, lsl #21
   18364:	adc	r0, r0, r0
   18368:	subcs	r3, r3, r1, lsl #21
   1836c:	cmp	r3, r1, lsl #20
   18370:	adc	r0, r0, r0
   18374:	subcs	r3, r3, r1, lsl #20
   18378:	cmp	r3, r1, lsl #19
   1837c:	adc	r0, r0, r0
   18380:	subcs	r3, r3, r1, lsl #19
   18384:	cmp	r3, r1, lsl #18
   18388:	adc	r0, r0, r0
   1838c:	subcs	r3, r3, r1, lsl #18
   18390:	cmp	r3, r1, lsl #17
   18394:	adc	r0, r0, r0
   18398:	subcs	r3, r3, r1, lsl #17
   1839c:	cmp	r3, r1, lsl #16
   183a0:	adc	r0, r0, r0
   183a4:	subcs	r3, r3, r1, lsl #16
   183a8:	cmp	r3, r1, lsl #15
   183ac:	adc	r0, r0, r0
   183b0:	subcs	r3, r3, r1, lsl #15
   183b4:	cmp	r3, r1, lsl #14
   183b8:	adc	r0, r0, r0
   183bc:	subcs	r3, r3, r1, lsl #14
   183c0:	cmp	r3, r1, lsl #13
   183c4:	adc	r0, r0, r0
   183c8:	subcs	r3, r3, r1, lsl #13
   183cc:	cmp	r3, r1, lsl #12
   183d0:	adc	r0, r0, r0
   183d4:	subcs	r3, r3, r1, lsl #12
   183d8:	cmp	r3, r1, lsl #11
   183dc:	adc	r0, r0, r0
   183e0:	subcs	r3, r3, r1, lsl #11
   183e4:	cmp	r3, r1, lsl #10
   183e8:	adc	r0, r0, r0
   183ec:	subcs	r3, r3, r1, lsl #10
   183f0:	cmp	r3, r1, lsl #9
   183f4:	adc	r0, r0, r0
   183f8:	subcs	r3, r3, r1, lsl #9
   183fc:	cmp	r3, r1, lsl #8
   18400:	adc	r0, r0, r0
   18404:	subcs	r3, r3, r1, lsl #8
   18408:	cmp	r3, r1, lsl #7
   1840c:	adc	r0, r0, r0
   18410:	subcs	r3, r3, r1, lsl #7
   18414:	cmp	r3, r1, lsl #6
   18418:	adc	r0, r0, r0
   1841c:	subcs	r3, r3, r1, lsl #6
   18420:	cmp	r3, r1, lsl #5
   18424:	adc	r0, r0, r0
   18428:	subcs	r3, r3, r1, lsl #5
   1842c:	cmp	r3, r1, lsl #4
   18430:	adc	r0, r0, r0
   18434:	subcs	r3, r3, r1, lsl #4
   18438:	cmp	r3, r1, lsl #3
   1843c:	adc	r0, r0, r0
   18440:	subcs	r3, r3, r1, lsl #3
   18444:	cmp	r3, r1, lsl #2
   18448:	adc	r0, r0, r0
   1844c:	subcs	r3, r3, r1, lsl #2
   18450:	cmp	r3, r1, lsl #1
   18454:	adc	r0, r0, r0
   18458:	subcs	r3, r3, r1, lsl #1
   1845c:	cmp	r3, r1
   18460:	adc	r0, r0, r0
   18464:	subcs	r3, r3, r1
   18468:	cmp	ip, #0
   1846c:	rsbmi	r0, r0, #0
   18470:	bx	lr
   18474:	teq	ip, r0
   18478:	rsbmi	r0, r0, #0
   1847c:	bx	lr
   18480:	movcc	r0, #0
   18484:	asreq	r0, ip, #31
   18488:	orreq	r0, r0, #1
   1848c:	bx	lr
   18490:	clz	r2, r1
   18494:	rsb	r2, r2, #31
   18498:	cmp	ip, #0
   1849c:	lsr	r0, r3, r2
   184a0:	rsbmi	r0, r0, #0
   184a4:	bx	lr
   184a8:	cmp	r0, #0
   184ac:	mvngt	r0, #-2147483648	; 0x80000000
   184b0:	movlt	r0, #-2147483648	; 0x80000000
   184b4:	b	184d8 <argp_error@@Base+0x1938>
   184b8:	cmp	r1, #0
   184bc:	beq	184a8 <argp_error@@Base+0x1908>
   184c0:	push	{r0, r1, lr}
   184c4:	bl	182a0 <argp_error@@Base+0x1700>
   184c8:	pop	{r1, r2, lr}
   184cc:	mul	r3, r2, r0
   184d0:	sub	r1, r1, r3
   184d4:	bx	lr
   184d8:	push	{r1, lr}
   184dc:	mov	r0, #8
   184e0:	bl	10f58 <raise@plt>
   184e4:	pop	{r1, pc}
   184e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   184ec:	mov	r7, r0
   184f0:	ldr	r6, [pc, #72]	; 18540 <argp_error@@Base+0x19a0>
   184f4:	ldr	r5, [pc, #72]	; 18544 <argp_error@@Base+0x19a4>
   184f8:	add	r6, pc, r6
   184fc:	add	r5, pc, r5
   18500:	sub	r6, r6, r5
   18504:	mov	r8, r1
   18508:	mov	r9, r2
   1850c:	bl	10f20 <calloc@plt-0x20>
   18510:	asrs	r6, r6, #2
   18514:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18518:	mov	r4, #0
   1851c:	add	r4, r4, #1
   18520:	ldr	r3, [r5], #4
   18524:	mov	r2, r9
   18528:	mov	r1, r8
   1852c:	mov	r0, r7
   18530:	blx	r3
   18534:	cmp	r6, r4
   18538:	bne	1851c <argp_error@@Base+0x197c>
   1853c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18540:	andeq	r1, r1, r8, lsl #20
   18544:	andeq	r1, r1, r0, lsl #20
   18548:	bx	lr

Disassembly of section .fini:

0001854c <.fini>:
   1854c:	push	{r3, lr}
   18550:	pop	{r3, pc}
