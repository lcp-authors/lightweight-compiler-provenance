
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e40 <.init>:
   10e40:	push	{r3, lr}
   10e44:	bl	11124 <__mempcpy_chk@plt+0x48>
   10e48:	pop	{r3, pc}

Disassembly of section .plt:

00010e4c <calloc@plt-0x14>:
   10e4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e50:	ldr	lr, [pc, #4]	; 10e5c <calloc@plt-0x4>
   10e54:	add	lr, pc, lr
   10e58:	ldr	pc, [lr, #8]!
   10e5c:	andeq	r5, r1, r4, lsr #3

00010e60 <calloc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #420]!	; 0x1a4

00010e6c <fputs_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #412]!	; 0x19c

00010e78 <raise@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #404]!	; 0x194

00010e84 <strcmp@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #396]!	; 0x18c

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #388]!	; 0x184

00010e9c <free@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #380]!	; 0x17c

00010ea8 <clock_gettime@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #372]!	; 0x174

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #364]!	; 0x16c

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #356]!	; 0x164

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #348]!	; 0x15c

00010ed8 <memcmp@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #340]!	; 0x154

00010ee4 <dcgettext@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #332]!	; 0x14c

00010ef0 <realloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #324]!	; 0x144

00010efc <textdomain@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #316]!	; 0x13c

00010f08 <iswprint@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #308]!	; 0x134

00010f14 <lseek64@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #300]!	; 0x12c

00010f20 <__ctype_get_mb_cur_max@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #292]!	; 0x124

00010f2c <__fpending@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #284]!	; 0x11c

00010f38 <ferror_unlocked@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #276]!	; 0x114

00010f44 <mbrtowc@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #268]!	; 0x10c

00010f50 <error@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #260]!	; 0x104

00010f5c <open64@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #252]!	; 0xfc

00010f68 <getenv@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #244]!	; 0xf4

00010f74 <puts@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #236]!	; 0xec

00010f80 <malloc@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #228]!	; 0xe4

00010f8c <__libc_start_main@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #220]!	; 0xdc

00010f98 <__freading@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #212]!	; 0xd4

00010fa4 <__gmon_start__@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #204]!	; 0xcc

00010fb0 <getopt_long@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #196]!	; 0xc4

00010fbc <__ctype_b_loc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #188]!	; 0xbc

00010fc8 <exit@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #180]!	; 0xb4

00010fd4 <strlen@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #172]!	; 0xac

00010fe0 <__errno_location@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #164]!	; 0xa4

00010fec <__cxa_atexit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #156]!	; 0x9c

00010ff8 <mkdir@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #148]!	; 0x94

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #140]!	; 0x8c

00011010 <__printf_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #132]!	; 0x84

0001101c <fileno@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #124]!	; 0x7c

00011028 <__fprintf_chk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #116]!	; 0x74

00011034 <fclose@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #108]!	; 0x6c

00011040 <fseeko64@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #100]!	; 0x64

0001104c <setlocale@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #92]!	; 0x5c

00011058 <strrchr@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #84]!	; 0x54

00011064 <nl_langinfo@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #76]!	; 0x4c

00011070 <remove@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #68]!	; 0x44

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #60]!	; 0x3c

00011088 <getrandom@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #52]!	; 0x34

00011094 <fputs@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #44]!	; 0x2c

000110a0 <strncmp@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #36]!	; 0x24

000110ac <abort@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #28]!

000110b8 <close@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #20]!

000110c4 <__lxstat64@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #12]!

000110d0 <strspn@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4]!

000110dc <__mempcpy_chk@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4092]!	; 0xffc

Disassembly of section .text:

000110e8 <.text>:
   110e8:	mov	fp, #0
   110ec:	mov	lr, #0
   110f0:	pop	{r1}		; (ldr r1, [sp], #4)
   110f4:	mov	r2, sp
   110f8:	push	{r2}		; (str r2, [sp, #-4]!)
   110fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11100:	ldr	ip, [pc, #16]	; 11118 <__mempcpy_chk@plt+0x3c>
   11104:	push	{ip}		; (str ip, [sp, #-4]!)
   11108:	ldr	r0, [pc, #12]	; 1111c <__mempcpy_chk@plt+0x40>
   1110c:	ldr	r3, [pc, #12]	; 11120 <__mempcpy_chk@plt+0x44>
   11110:	bl	10f8c <__libc_start_main@plt>
   11114:	bl	110ac <abort@plt>
   11118:	andeq	r4, r1, ip, lsr ip
   1111c:	muleq	r1, r8, r4
   11120:	ldrdeq	r4, [r1], -ip
   11124:	ldr	r3, [pc, #20]	; 11140 <__mempcpy_chk@plt+0x64>
   11128:	ldr	r2, [pc, #20]	; 11144 <__mempcpy_chk@plt+0x68>
   1112c:	add	r3, pc, r3
   11130:	ldr	r2, [r3, r2]
   11134:	cmp	r2, #0
   11138:	bxeq	lr
   1113c:	b	10fa4 <__gmon_start__@plt>
   11140:	andeq	r4, r1, ip, asr #29
   11144:	andeq	r0, r0, r4, ror #1
   11148:	ldr	r0, [pc, #24]	; 11168 <__mempcpy_chk@plt+0x8c>
   1114c:	ldr	r3, [pc, #24]	; 1116c <__mempcpy_chk@plt+0x90>
   11150:	cmp	r3, r0
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0x94>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r6, r2, r8, lsr r1
   1116c:	andeq	r6, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	ldr	r0, [pc, #36]	; 111a0 <__mempcpy_chk@plt+0xc4>
   11178:	ldr	r1, [pc, #36]	; 111a4 <__mempcpy_chk@plt+0xc8>
   1117c:	sub	r1, r1, r0
   11180:	asr	r1, r1, #2
   11184:	add	r1, r1, r1, lsr #31
   11188:	asrs	r1, r1, #1
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <__mempcpy_chk@plt+0xcc>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r6, r2, r8, lsr r1
   111a4:	andeq	r6, r2, r8, lsr r1
   111a8:	andeq	r0, r0, r0
   111ac:	push	{r4, lr}
   111b0:	ldr	r4, [pc, #24]	; 111d0 <__mempcpy_chk@plt+0xf4>
   111b4:	ldrb	r3, [r4]
   111b8:	cmp	r3, #0
   111bc:	popne	{r4, pc}
   111c0:	bl	11148 <__mempcpy_chk@plt+0x6c>
   111c4:	mov	r3, #1
   111c8:	strb	r3, [r4]
   111cc:	pop	{r4, pc}
   111d0:	andeq	r6, r2, r4, asr r1
   111d4:	b	11174 <__mempcpy_chk@plt+0x98>
   111d8:	push	{fp, lr}
   111dc:	mov	fp, sp
   111e0:	sub	sp, sp, #56	; 0x38
   111e4:	mov	r8, r0
   111e8:	cmp	r0, #0
   111ec:	bne	11458 <__mempcpy_chk@plt+0x37c>
   111f0:	movw	r1, #19611	; 0x4c9b
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10ee4 <dcgettext@plt>
   11204:	mov	r1, r0
   11208:	movw	r0, #24928	; 0x6160
   1120c:	movt	r0, #2
   11210:	ldr	r2, [r0]
   11214:	mov	r0, #1
   11218:	bl	11010 <__printf_chk@plt>
   1121c:	movw	r1, #19645	; 0x4cbd
   11220:	mov	r0, #0
   11224:	mov	r2, #5
   11228:	movt	r1, #1
   1122c:	bl	10ee4 <dcgettext@plt>
   11230:	movw	r9, #24908	; 0x614c
   11234:	movt	r9, #2
   11238:	ldr	r1, [r9]
   1123c:	bl	10e6c <fputs_unlocked@plt>
   11240:	movw	r1, #19856	; 0x4d90
   11244:	mov	r0, #0
   11248:	mov	r2, #5
   1124c:	movt	r1, #1
   11250:	bl	10ee4 <dcgettext@plt>
   11254:	ldr	r1, [r9]
   11258:	bl	10e6c <fputs_unlocked@plt>
   1125c:	ldr	r1, [r9]
   11260:	movw	r0, #21714	; 0x54d2
   11264:	movt	r0, #1
   11268:	bl	10e6c <fputs_unlocked@plt>
   1126c:	movw	r1, #19930	; 0x4dda
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10ee4 <dcgettext@plt>
   11280:	ldr	r1, [r9]
   11284:	bl	10e6c <fputs_unlocked@plt>
   11288:	movw	r1, #20134	; 0x4ea6
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10ee4 <dcgettext@plt>
   1129c:	ldr	r1, [r9]
   112a0:	bl	10e6c <fputs_unlocked@plt>
   112a4:	movw	r1, #20290	; 0x4f42
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10ee4 <dcgettext@plt>
   112b8:	ldr	r1, [r9]
   112bc:	bl	10e6c <fputs_unlocked@plt>
   112c0:	movw	r1, #20653	; 0x50ad
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10ee4 <dcgettext@plt>
   112d4:	ldr	r1, [r9]
   112d8:	bl	10e6c <fputs_unlocked@plt>
   112dc:	movw	r1, #20878	; 0x518e
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10ee4 <dcgettext@plt>
   112f0:	ldr	r1, [r9]
   112f4:	bl	10e6c <fputs_unlocked@plt>
   112f8:	movw	r1, #20923	; 0x51bb
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	movt	r1, #1
   11308:	bl	10ee4 <dcgettext@plt>
   1130c:	ldr	r1, [r9]
   11310:	bl	10e6c <fputs_unlocked@plt>
   11314:	movw	r0, #21912	; 0x5598
   11318:	mov	r6, sp
   1131c:	movt	r0, #1
   11320:	mov	r1, r6
   11324:	ldm	r0!, {r2, r3, r4, r5}
   11328:	stmia	r1!, {r2, r3, r4, r5}
   1132c:	ldm	r0!, {r2, r3, r4, r5, r7}
   11330:	stmia	r1!, {r2, r3, r4, r5, r7}
   11334:	ldm	r0, {r2, r3, r4, r5, r7}
   11338:	stm	r1, {r2, r3, r4, r5, r7}
   1133c:	movw	r1, #21405	; 0x539d
   11340:	movw	r5, #20977	; 0x51f1
   11344:	movt	r1, #1
   11348:	movt	r5, #1
   1134c:	mov	r0, r5
   11350:	bl	10e84 <strcmp@plt>
   11354:	cmp	r0, #0
   11358:	ldrne	r1, [r6, #8]!
   1135c:	cmpne	r1, #0
   11360:	bne	1134c <__mempcpy_chk@plt+0x270>
   11364:	ldr	r6, [r6, #4]
   11368:	movw	r1, #21500	; 0x53fc
   1136c:	mov	r0, #0
   11370:	mov	r2, #5
   11374:	movt	r1, #1
   11378:	bl	10ee4 <dcgettext@plt>
   1137c:	movw	r2, #21016	; 0x5218
   11380:	movw	r3, #21523	; 0x5413
   11384:	mov	r1, r0
   11388:	mov	r0, #1
   1138c:	movt	r2, #1
   11390:	movt	r3, #1
   11394:	bl	11010 <__printf_chk@plt>
   11398:	cmp	r6, #0
   1139c:	mov	r0, #5
   113a0:	mov	r1, #0
   113a4:	moveq	r6, r5
   113a8:	bl	1104c <setlocale@plt>
   113ac:	cmp	r0, #0
   113b0:	beq	113e8 <__mempcpy_chk@plt+0x30c>
   113b4:	movw	r1, #21563	; 0x543b
   113b8:	mov	r2, #3
   113bc:	movt	r1, #1
   113c0:	bl	110a0 <strncmp@plt>
   113c4:	cmp	r0, #0
   113c8:	beq	113e8 <__mempcpy_chk@plt+0x30c>
   113cc:	movw	r1, #21567	; 0x543f
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10ee4 <dcgettext@plt>
   113e0:	ldr	r1, [r9]
   113e4:	bl	10e6c <fputs_unlocked@plt>
   113e8:	movw	r1, #21638	; 0x5486
   113ec:	mov	r0, #0
   113f0:	mov	r2, #5
   113f4:	movt	r1, #1
   113f8:	bl	10ee4 <dcgettext@plt>
   113fc:	movw	r2, #21523	; 0x5413
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	mov	r3, r5
   1140c:	movt	r2, #1
   11410:	bl	11010 <__printf_chk@plt>
   11414:	movw	r1, #21665	; 0x54a1
   11418:	mov	r0, #0
   1141c:	mov	r2, #5
   11420:	movt	r1, #1
   11424:	bl	10ee4 <dcgettext@plt>
   11428:	movw	r3, #21715	; 0x54d3
   1142c:	mov	r1, r0
   11430:	movw	r0, #21433	; 0x53b9
   11434:	cmp	r6, r5
   11438:	mov	r2, r6
   1143c:	movt	r0, #1
   11440:	movt	r3, #1
   11444:	moveq	r3, r0
   11448:	mov	r0, #1
   1144c:	bl	11010 <__printf_chk@plt>
   11450:	mov	r0, r8
   11454:	bl	10fc8 <exit@plt>
   11458:	movw	r0, #24904	; 0x6148
   1145c:	movw	r1, #19572	; 0x4c74
   11460:	mov	r2, #5
   11464:	movt	r0, #2
   11468:	movt	r1, #1
   1146c:	ldr	r5, [r0]
   11470:	mov	r0, #0
   11474:	bl	10ee4 <dcgettext@plt>
   11478:	mov	r2, r0
   1147c:	movw	r0, #24928	; 0x6160
   11480:	mov	r1, #1
   11484:	movt	r0, #2
   11488:	ldr	r3, [r0]
   1148c:	mov	r0, r5
   11490:	bl	11028 <__fprintf_chk@plt>
   11494:	b	11450 <__mempcpy_chk@plt+0x374>
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1149c:	add	fp, sp, #28
   114a0:	sub	sp, sp, #36	; 0x24
   114a4:	mov	r5, r0
   114a8:	ldr	r0, [r1]
   114ac:	mov	r4, r1
   114b0:	bl	12014 <__mempcpy_chk@plt+0xf38>
   114b4:	movw	r1, #21715	; 0x54d3
   114b8:	mov	r0, #6
   114bc:	movt	r1, #1
   114c0:	bl	1104c <setlocale@plt>
   114c4:	movw	r6, #21020	; 0x521c
   114c8:	movw	r1, #20984	; 0x51f8
   114cc:	movt	r6, #1
   114d0:	movt	r1, #1
   114d4:	mov	r0, r6
   114d8:	bl	1107c <bindtextdomain@plt>
   114dc:	mov	r0, r6
   114e0:	bl	10efc <textdomain@plt>
   114e4:	movw	r0, #6924	; 0x1b0c
   114e8:	movt	r0, #1
   114ec:	bl	14c40 <__mempcpy_chk@plt+0x3b64>
   114f0:	mov	r0, #0
   114f4:	movw	r8, #21008	; 0x5210
   114f8:	movw	r7, #21784	; 0x5518
   114fc:	mov	r1, #0
   11500:	mov	r6, #0
   11504:	mov	r9, #0
   11508:	str	r0, [sp, #24]
   1150c:	mov	r0, #0
   11510:	movt	r8, #1
   11514:	movt	r7, #1
   11518:	str	r1, [sp, #20]
   1151c:	str	r0, [sp, #16]
   11520:	mov	r0, #0
   11524:	str	r0, [sp, #28]
   11528:	mov	r0, #0
   1152c:	str	r0, [sp, #32]
   11530:	mov	r0, #0
   11534:	b	115c8 <__mempcpy_chk@plt+0x4ec>
   11538:	sub	r1, r0, #112	; 0x70
   1153c:	cmp	r1, #5
   11540:	bhi	1157c <__mempcpy_chk@plt+0x4a0>
   11544:	add	r2, pc, #4
   11548:	mov	r0, #1
   1154c:	ldr	pc, [r2, r1, lsl #2]
   11550:	andeq	r1, r1, r8, ror #10
   11554:	andeq	r1, r1, r8, asr #11
   11558:	andeq	r1, r1, r4, asr #21
   1155c:	andeq	r1, r1, r4, asr #21
   11560:	andeq	r1, r1, r8, lsr #11
   11564:			; <UNDEFINED> instruction: 0x000115bc
   11568:	movw	r0, #24912	; 0x6150
   1156c:	movt	r0, #2
   11570:	ldr	r0, [r0]
   11574:	str	r0, [sp, #20]
   11578:	b	115b0 <__mempcpy_chk@plt+0x4d4>
   1157c:	cmp	r0, #100	; 0x64
   11580:	bne	11590 <__mempcpy_chk@plt+0x4b4>
   11584:	mov	r0, #1
   11588:	str	r0, [sp, #24]
   1158c:	b	115c4 <__mempcpy_chk@plt+0x4e8>
   11590:	cmp	r0, #256	; 0x100
   11594:	bne	11ac4 <__mempcpy_chk@plt+0x9e8>
   11598:	movw	r0, #24912	; 0x6150
   1159c:	movt	r0, #2
   115a0:	ldr	r9, [r0]
   115a4:	b	115c4 <__mempcpy_chk@plt+0x4e8>
   115a8:	mov	r0, #1
   115ac:	str	r0, [sp, #16]
   115b0:	mov	r0, #1
   115b4:	str	r0, [sp, #32]
   115b8:	b	115c4 <__mempcpy_chk@plt+0x4e8>
   115bc:	mov	r0, #1
   115c0:	str	r0, [sp, #28]
   115c4:	mov	r0, sl
   115c8:	mov	sl, r0
   115cc:	mov	r0, r5
   115d0:	mov	r1, r4
   115d4:	mov	r2, r8
   115d8:	mov	r3, r7
   115dc:	str	r6, [sp]
   115e0:	bl	10fb0 <getopt_long@plt>
   115e4:	cmp	r0, #99	; 0x63
   115e8:	bgt	11538 <__mempcpy_chk@plt+0x45c>
   115ec:	cmn	r0, #2
   115f0:	ble	119ec <__mempcpy_chk@plt+0x910>
   115f4:	cmn	r0, #1
   115f8:	bne	11a04 <__mempcpy_chk@plt+0x928>
   115fc:	movw	r0, #24896	; 0x6140
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	sub	r1, r5, r0
   1160c:	cmp	r1, #2
   11610:	bcs	11aa0 <__mempcpy_chk@plt+0x9c4>
   11614:	cmp	r1, #0
   11618:	beq	11624 <__mempcpy_chk@plt+0x548>
   1161c:	ldr	r7, [r4, r0, lsl #2]
   11620:	b	11634 <__mempcpy_chk@plt+0x558>
   11624:	movw	r7, #21767	; 0x5507
   11628:	mov	r0, #1
   1162c:	movt	r7, #1
   11630:	str	r0, [sp, #32]
   11634:	cmp	r9, #0
   11638:	beq	116a0 <__mempcpy_chk@plt+0x5c4>
   1163c:	mov	r0, r7
   11640:	bl	10fd4 <strlen@plt>
   11644:	cmp	r0, #0
   11648:	beq	11a94 <__mempcpy_chk@plt+0x9b8>
   1164c:	mov	r5, r0
   11650:	add	r0, r7, r0
   11654:	ldrb	r0, [r0, #-1]
   11658:	cmp	r0, #88	; 0x58
   1165c:	bne	11a94 <__mempcpy_chk@plt+0x9b8>
   11660:	mov	r0, r9
   11664:	bl	10fd4 <strlen@plt>
   11668:	add	r6, r0, #1
   1166c:	mov	r8, r0
   11670:	add	r0, r6, r5
   11674:	bl	14364 <__mempcpy_chk@plt+0x3288>
   11678:	mov	r1, r7
   1167c:	mov	r2, r5
   11680:	mov	r4, r0
   11684:	bl	10ec0 <memcpy@plt>
   11688:	add	r7, r4, r5
   1168c:	mov	r1, r9
   11690:	mov	r2, r6
   11694:	mov	r0, r7
   11698:	bl	10ec0 <memcpy@plt>
   1169c:	b	116dc <__mempcpy_chk@plt+0x600>
   116a0:	mov	r0, r7
   116a4:	bl	14744 <__mempcpy_chk@plt+0x3668>
   116a8:	mov	r1, #88	; 0x58
   116ac:	mov	r4, r0
   116b0:	bl	11058 <strrchr@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116c4 <__mempcpy_chk@plt+0x5e8>
   116bc:	add	r7, r0, #1
   116c0:	b	116d0 <__mempcpy_chk@plt+0x5f4>
   116c4:	mov	r0, r4
   116c8:	bl	10fd4 <strlen@plt>
   116cc:	add	r7, r4, r0
   116d0:	mov	r0, r7
   116d4:	bl	10fd4 <strlen@plt>
   116d8:	mov	r8, r0
   116dc:	cmp	r8, #0
   116e0:	beq	116f4 <__mempcpy_chk@plt+0x618>
   116e4:	mov	r0, r7
   116e8:	bl	11b50 <__mempcpy_chk@plt+0xa74>
   116ec:	cmp	r0, r7
   116f0:	bne	11acc <__mempcpy_chk@plt+0x9f0>
   116f4:	subs	r0, r7, r4
   116f8:	beq	11a60 <__mempcpy_chk@plt+0x984>
   116fc:	sub	r0, r4, r7
   11700:	sub	r1, r7, #1
   11704:	mov	r5, #0
   11708:	ldrb	r2, [r1, -r5]
   1170c:	cmp	r2, #88	; 0x58
   11710:	bne	11720 <__mempcpy_chk@plt+0x644>
   11714:	add	r5, r5, #1
   11718:	adds	r2, r0, r5
   1171c:	bne	11708 <__mempcpy_chk@plt+0x62c>
   11720:	cmp	r5, #2
   11724:	bls	11a60 <__mempcpy_chk@plt+0x984>
   11728:	ldr	r0, [sp, #32]
   1172c:	tst	r0, #1
   11730:	beq	117a4 <__mempcpy_chk@plt+0x6c8>
   11734:	ldr	r0, [sp, #16]
   11738:	tst	r0, #1
   1173c:	beq	117ac <__mempcpy_chk@plt+0x6d0>
   11740:	movw	r0, #21189	; 0x52c5
   11744:	movt	r0, #1
   11748:	bl	10f68 <getenv@plt>
   1174c:	ldr	r1, [sp, #20]
   11750:	cmp	r0, #0
   11754:	beq	11768 <__mempcpy_chk@plt+0x68c>
   11758:	mov	r6, r0
   1175c:	ldrb	r0, [r0]
   11760:	cmp	r0, #0
   11764:	bne	11788 <__mempcpy_chk@plt+0x6ac>
   11768:	cmp	r1, #0
   1176c:	beq	11780 <__mempcpy_chk@plt+0x6a4>
   11770:	ldrb	r0, [r1]
   11774:	mov	r6, r1
   11778:	cmp	r0, #0
   1177c:	bne	11788 <__mempcpy_chk@plt+0x6ac>
   11780:	movw	r6, #21196	; 0x52cc
   11784:	movt	r6, #1
   11788:	mov	r0, r4
   1178c:	bl	11b50 <__mempcpy_chk@plt+0xa74>
   11790:	cmp	r0, r4
   11794:	beq	11800 <__mempcpy_chk@plt+0x724>
   11798:	movw	r1, #21201	; 0x52d1
   1179c:	movt	r1, #1
   117a0:	b	11a68 <__mempcpy_chk@plt+0x98c>
   117a4:	mov	r6, r4
   117a8:	b	1181c <__mempcpy_chk@plt+0x740>
   117ac:	ldr	r6, [sp, #20]
   117b0:	cmp	r6, #0
   117b4:	ldrbne	r0, [r6]
   117b8:	cmpne	r0, #0
   117bc:	bne	117f4 <__mempcpy_chk@plt+0x718>
   117c0:	movw	r0, #21189	; 0x52c5
   117c4:	movt	r0, #1
   117c8:	bl	10f68 <getenv@plt>
   117cc:	cmp	r0, #0
   117d0:	beq	117ec <__mempcpy_chk@plt+0x710>
   117d4:	ldrb	r1, [r0]
   117d8:	movw	r6, #21196	; 0x52cc
   117dc:	movt	r6, #1
   117e0:	cmp	r1, #0
   117e4:	movne	r6, r0
   117e8:	b	117f4 <__mempcpy_chk@plt+0x718>
   117ec:	movw	r6, #21196	; 0x52cc
   117f0:	movt	r6, #1
   117f4:	ldrb	r0, [r4]
   117f8:	cmp	r0, #47	; 0x2f
   117fc:	beq	11b00 <__mempcpy_chk@plt+0xa24>
   11800:	mov	r0, r6
   11804:	mov	r1, r4
   11808:	mov	r2, #0
   1180c:	bl	11e50 <__mempcpy_chk@plt+0xd74>
   11810:	mov	r6, r0
   11814:	mov	r0, r4
   11818:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   1181c:	mov	r0, r6
   11820:	bl	14744 <__mempcpy_chk@plt+0x3668>
   11824:	mov	r4, r0
   11828:	ldr	r0, [sp, #24]
   1182c:	tst	r0, #1
   11830:	beq	118b0 <__mempcpy_chk@plt+0x7d4>
   11834:	str	r5, [sp]
   11838:	ldr	r5, [sp, #28]
   1183c:	mov	r3, #1
   11840:	mov	r0, r4
   11844:	mov	r1, r8
   11848:	mov	r2, #0
   1184c:	mov	r7, #1
   11850:	tst	r5, #1
   11854:	movwne	r3, #2
   11858:	bl	13b50 <__mempcpy_chk@plt+0x2a74>
   1185c:	clz	r0, r0
   11860:	lsr	r0, r0, #5
   11864:	orr	r1, sl, r0
   11868:	tst	r1, #1
   1186c:	bne	11918 <__mempcpy_chk@plt+0x83c>
   11870:	bl	10fe0 <__errno_location@plt>
   11874:	ldr	r4, [r0]
   11878:	movw	r1, #21312	; 0x5340
   1187c:	mov	r0, #0
   11880:	mov	r2, #5
   11884:	movt	r1, #1
   11888:	bl	10ee4 <dcgettext@plt>
   1188c:	mov	r5, r0
   11890:	mov	r0, r6
   11894:	bl	13a18 <__mempcpy_chk@plt+0x293c>
   11898:	mov	r3, r0
   1189c:	mov	r0, #0
   118a0:	mov	r1, r4
   118a4:	mov	r2, r5
   118a8:	bl	10f50 <error@plt>
   118ac:	b	119e0 <__mempcpy_chk@plt+0x904>
   118b0:	str	r5, [sp]
   118b4:	ldr	r5, [sp, #28]
   118b8:	mov	r0, r4
   118bc:	mov	r1, r8
   118c0:	mov	r2, #0
   118c4:	ands	r3, r5, #1
   118c8:	movwne	r3, #2
   118cc:	bl	13b50 <__mempcpy_chk@plt+0x2a74>
   118d0:	cmp	r0, #0
   118d4:	blt	118f0 <__mempcpy_chk@plt+0x814>
   118d8:	tst	r5, #1
   118dc:	beq	11900 <__mempcpy_chk@plt+0x824>
   118e0:	mov	r0, r4
   118e4:	bl	10f74 <puts@plt>
   118e8:	mov	r7, #0
   118ec:	b	119e0 <__mempcpy_chk@plt+0x904>
   118f0:	mov	r7, #1
   118f4:	tst	sl, #1
   118f8:	beq	119a0 <__mempcpy_chk@plt+0x8c4>
   118fc:	b	119e0 <__mempcpy_chk@plt+0x904>
   11900:	bl	110b8 <close@plt>
   11904:	clz	r0, r0
   11908:	lsr	r0, r0, #5
   1190c:	orr	r1, sl, r0
   11910:	tst	r1, #1
   11914:	beq	119a0 <__mempcpy_chk@plt+0x8c4>
   11918:	mov	r7, #1
   1191c:	cmp	r0, #0
   11920:	beq	119e0 <__mempcpy_chk@plt+0x904>
   11924:	mov	r0, r4
   11928:	bl	10f74 <puts@plt>
   1192c:	mov	r7, #0
   11930:	tst	r5, #1
   11934:	bne	119e0 <__mempcpy_chk@plt+0x904>
   11938:	movw	r0, #24917	; 0x6155
   1193c:	mov	r1, #1
   11940:	movt	r0, #2
   11944:	strb	r1, [r0]
   11948:	movw	r0, #24908	; 0x614c
   1194c:	movt	r0, #2
   11950:	ldr	r0, [r0]
   11954:	bl	11bd0 <__mempcpy_chk@plt+0xaf4>
   11958:	cmp	r0, #0
   1195c:	beq	119e0 <__mempcpy_chk@plt+0x904>
   11960:	bl	10fe0 <__errno_location@plt>
   11964:	ldr	r5, [r0]
   11968:	mov	r0, r4
   1196c:	bl	11070 <remove@plt>
   11970:	tst	sl, #1
   11974:	bne	119dc <__mempcpy_chk@plt+0x900>
   11978:	movw	r1, #21393	; 0x5391
   1197c:	mov	r0, #0
   11980:	mov	r2, #5
   11984:	movt	r1, #1
   11988:	bl	10ee4 <dcgettext@plt>
   1198c:	mov	r2, r0
   11990:	mov	r0, #0
   11994:	mov	r1, r5
   11998:	bl	10f50 <error@plt>
   1199c:	b	119dc <__mempcpy_chk@plt+0x900>
   119a0:	bl	10fe0 <__errno_location@plt>
   119a4:	ldr	r4, [r0]
   119a8:	movw	r1, #21355	; 0x536b
   119ac:	mov	r0, #0
   119b0:	mov	r2, #5
   119b4:	movt	r1, #1
   119b8:	bl	10ee4 <dcgettext@plt>
   119bc:	mov	r5, r0
   119c0:	mov	r0, r6
   119c4:	bl	13a18 <__mempcpy_chk@plt+0x293c>
   119c8:	mov	r3, r0
   119cc:	mov	r0, #0
   119d0:	mov	r1, r4
   119d4:	mov	r2, r5
   119d8:	bl	10f50 <error@plt>
   119dc:	mov	r7, #1
   119e0:	mov	r0, r7
   119e4:	sub	sp, fp, #28
   119e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119ec:	cmn	r0, #3
   119f0:	beq	11a0c <__mempcpy_chk@plt+0x930>
   119f4:	cmn	r0, #2
   119f8:	bne	11ac4 <__mempcpy_chk@plt+0x9e8>
   119fc:	mov	r0, #0
   11a00:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11a04:	cmp	r0, #86	; 0x56
   11a08:	bne	11ac4 <__mempcpy_chk@plt+0x9e8>
   11a0c:	movw	r0, #24816	; 0x60f0
   11a10:	movw	r2, #21043	; 0x5233
   11a14:	mov	r1, #0
   11a18:	movw	r7, #21030	; 0x5226
   11a1c:	movt	r0, #2
   11a20:	movt	r2, #1
   11a24:	str	r1, [sp, #8]
   11a28:	movw	r1, #20977	; 0x51f1
   11a2c:	movt	r7, #1
   11a30:	ldr	r3, [r0]
   11a34:	movw	r0, #24908	; 0x614c
   11a38:	str	r2, [sp, #4]
   11a3c:	movw	r2, #21016	; 0x5218
   11a40:	movt	r1, #1
   11a44:	str	r7, [sp]
   11a48:	movt	r0, #2
   11a4c:	movt	r2, #1
   11a50:	ldr	r0, [r0]
   11a54:	bl	1422c <__mempcpy_chk@plt+0x3150>
   11a58:	mov	r0, #0
   11a5c:	bl	10fc8 <exit@plt>
   11a60:	movw	r1, #21162	; 0x52aa
   11a64:	movt	r1, #1
   11a68:	mov	r0, #0
   11a6c:	mov	r2, #5
   11a70:	bl	10ee4 <dcgettext@plt>
   11a74:	mov	r5, r0
   11a78:	mov	r0, r4
   11a7c:	bl	13a18 <__mempcpy_chk@plt+0x293c>
   11a80:	mov	r3, r0
   11a84:	mov	r0, #1
   11a88:	mov	r1, #0
   11a8c:	mov	r2, r5
   11a90:	bl	10f50 <error@plt>
   11a94:	movw	r1, #21073	; 0x5251
   11a98:	movt	r1, #1
   11a9c:	b	11ad4 <__mempcpy_chk@plt+0x9f8>
   11aa0:	movw	r1, #21054	; 0x523e
   11aa4:	mov	r0, #0
   11aa8:	mov	r2, #5
   11aac:	movt	r1, #1
   11ab0:	bl	10ee4 <dcgettext@plt>
   11ab4:	mov	r2, r0
   11ab8:	mov	r0, #0
   11abc:	mov	r1, #0
   11ac0:	bl	10f50 <error@plt>
   11ac4:	mov	r0, #1
   11ac8:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11acc:	movw	r1, #21114	; 0x527a
   11ad0:	movt	r1, #1
   11ad4:	mov	r0, #0
   11ad8:	mov	r2, #5
   11adc:	bl	10ee4 <dcgettext@plt>
   11ae0:	mov	r4, r0
   11ae4:	mov	r0, r7
   11ae8:	bl	13a18 <__mempcpy_chk@plt+0x293c>
   11aec:	mov	r3, r0
   11af0:	mov	r0, #1
   11af4:	mov	r1, #0
   11af8:	mov	r2, r4
   11afc:	bl	10f50 <error@plt>
   11b00:	movw	r1, #21252	; 0x5304
   11b04:	movt	r1, #1
   11b08:	b	11a68 <__mempcpy_chk@plt+0x98c>
   11b0c:	push	{fp, lr}
   11b10:	mov	fp, sp
   11b14:	movw	r0, #24917	; 0x6155
   11b18:	movt	r0, #2
   11b1c:	ldrb	r0, [r0]
   11b20:	cmp	r0, #0
   11b24:	beq	11b48 <__mempcpy_chk@plt+0xa6c>
   11b28:	movw	r0, #24904	; 0x6148
   11b2c:	movt	r0, #2
   11b30:	ldr	r0, [r0]
   11b34:	bl	11bd0 <__mempcpy_chk@plt+0xaf4>
   11b38:	cmp	r0, #0
   11b3c:	popeq	{fp, pc}
   11b40:	mov	r0, #1
   11b44:	bl	10eb4 <_exit@plt>
   11b48:	pop	{fp, lr}
   11b4c:	b	11c70 <__mempcpy_chk@plt+0xb94>
   11b50:	sub	r0, r0, #1
   11b54:	ldrb	r3, [r0, #1]!
   11b58:	cmp	r3, #47	; 0x2f
   11b5c:	beq	11b54 <__mempcpy_chk@plt+0xa78>
   11b60:	mov	r2, #0
   11b64:	mov	r1, r0
   11b68:	uxtb	r3, r3
   11b6c:	cmp	r3, #47	; 0x2f
   11b70:	beq	11b8c <__mempcpy_chk@plt+0xab0>
   11b74:	cmp	r3, #0
   11b78:	bxeq	lr
   11b7c:	tst	r2, #1
   11b80:	mov	r2, #0
   11b84:	movne	r0, r1
   11b88:	b	11b90 <__mempcpy_chk@plt+0xab4>
   11b8c:	mov	r2, #1
   11b90:	ldrb	r3, [r1, #1]!
   11b94:	b	11b68 <__mempcpy_chk@plt+0xa8c>
   11b98:	push	{r4, sl, fp, lr}
   11b9c:	add	fp, sp, #8
   11ba0:	mov	r4, r0
   11ba4:	bl	10fd4 <strlen@plt>
   11ba8:	mov	r1, r0
   11bac:	sub	r2, r4, #1
   11bb0:	mov	r0, r1
   11bb4:	cmp	r1, #2
   11bb8:	popcc	{r4, sl, fp, pc}
   11bbc:	ldrb	r3, [r2, r0]
   11bc0:	sub	r1, r0, #1
   11bc4:	cmp	r3, #47	; 0x2f
   11bc8:	beq	11bb0 <__mempcpy_chk@plt+0xad4>
   11bcc:	pop	{r4, sl, fp, pc}
   11bd0:	push	{r4, r5, r6, sl, fp, lr}
   11bd4:	add	fp, sp, #16
   11bd8:	mov	r4, r0
   11bdc:	bl	10f2c <__fpending@plt>
   11be0:	mov	r5, r0
   11be4:	mov	r0, r4
   11be8:	bl	10f38 <ferror_unlocked@plt>
   11bec:	mov	r6, r0
   11bf0:	mov	r0, r4
   11bf4:	bl	11d58 <__mempcpy_chk@plt+0xc7c>
   11bf8:	cmp	r6, #0
   11bfc:	beq	11c1c <__mempcpy_chk@plt+0xb40>
   11c00:	mvn	r4, #0
   11c04:	cmp	r0, #0
   11c08:	bne	11c48 <__mempcpy_chk@plt+0xb6c>
   11c0c:	bl	10fe0 <__errno_location@plt>
   11c10:	mov	r1, #0
   11c14:	str	r1, [r0]
   11c18:	b	11c48 <__mempcpy_chk@plt+0xb6c>
   11c1c:	cmp	r0, #0
   11c20:	mov	r4, r0
   11c24:	mvnne	r4, #0
   11c28:	cmp	r5, #0
   11c2c:	bne	11c48 <__mempcpy_chk@plt+0xb6c>
   11c30:	cmp	r0, #0
   11c34:	beq	11c48 <__mempcpy_chk@plt+0xb6c>
   11c38:	bl	10fe0 <__errno_location@plt>
   11c3c:	ldr	r0, [r0]
   11c40:	subs	r4, r0, #9
   11c44:	mvnne	r4, #0
   11c48:	mov	r0, r4
   11c4c:	pop	{r4, r5, r6, sl, fp, pc}
   11c50:	movw	r1, #24920	; 0x6158
   11c54:	movt	r1, #2
   11c58:	str	r0, [r1]
   11c5c:	bx	lr
   11c60:	movw	r1, #24924	; 0x615c
   11c64:	movt	r1, #2
   11c68:	strb	r0, [r1]
   11c6c:	bx	lr
   11c70:	push	{r4, r5, r6, sl, fp, lr}
   11c74:	add	fp, sp, #16
   11c78:	sub	sp, sp, #8
   11c7c:	movw	r0, #24908	; 0x614c
   11c80:	movt	r0, #2
   11c84:	ldr	r0, [r0]
   11c88:	bl	11bd0 <__mempcpy_chk@plt+0xaf4>
   11c8c:	cmp	r0, #0
   11c90:	beq	11cb8 <__mempcpy_chk@plt+0xbdc>
   11c94:	movw	r0, #24924	; 0x615c
   11c98:	movt	r0, #2
   11c9c:	ldrb	r0, [r0]
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cd8 <__mempcpy_chk@plt+0xbfc>
   11ca8:	bl	10fe0 <__errno_location@plt>
   11cac:	ldr	r0, [r0]
   11cb0:	cmp	r0, #32
   11cb4:	bne	11cd8 <__mempcpy_chk@plt+0xbfc>
   11cb8:	movw	r0, #24904	; 0x6148
   11cbc:	movt	r0, #2
   11cc0:	ldr	r0, [r0]
   11cc4:	bl	11bd0 <__mempcpy_chk@plt+0xaf4>
   11cc8:	cmp	r0, #0
   11ccc:	subeq	sp, fp, #16
   11cd0:	popeq	{r4, r5, r6, sl, fp, pc}
   11cd4:	b	11d48 <__mempcpy_chk@plt+0xc6c>
   11cd8:	movw	r1, #21393	; 0x5391
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	10ee4 <dcgettext@plt>
   11cec:	mov	r4, r0
   11cf0:	movw	r0, #24920	; 0x6158
   11cf4:	movt	r0, #2
   11cf8:	ldr	r6, [r0]
   11cfc:	bl	10fe0 <__errno_location@plt>
   11d00:	ldr	r5, [r0]
   11d04:	cmp	r6, #0
   11d08:	bne	11d24 <__mempcpy_chk@plt+0xc48>
   11d0c:	movw	r2, #21987	; 0x55e3
   11d10:	mov	r0, #0
   11d14:	mov	r1, r5
   11d18:	mov	r3, r4
   11d1c:	movt	r2, #1
   11d20:	b	11d44 <__mempcpy_chk@plt+0xc68>
   11d24:	mov	r0, r6
   11d28:	bl	137d8 <__mempcpy_chk@plt+0x26fc>
   11d2c:	movw	r2, #21983	; 0x55df
   11d30:	mov	r3, r0
   11d34:	str	r4, [sp]
   11d38:	mov	r0, #0
   11d3c:	mov	r1, r5
   11d40:	movt	r2, #1
   11d44:	bl	10f50 <error@plt>
   11d48:	movw	r0, #24820	; 0x60f4
   11d4c:	movt	r0, #2
   11d50:	ldr	r0, [r0]
   11d54:	bl	10eb4 <_exit@plt>
   11d58:	push	{r4, r5, r6, sl, fp, lr}
   11d5c:	add	fp, sp, #16
   11d60:	sub	sp, sp, #8
   11d64:	mov	r4, r0
   11d68:	bl	1101c <fileno@plt>
   11d6c:	cmn	r0, #1
   11d70:	ble	11de4 <__mempcpy_chk@plt+0xd08>
   11d74:	mov	r0, r4
   11d78:	bl	10f98 <__freading@plt>
   11d7c:	cmp	r0, #0
   11d80:	beq	11dac <__mempcpy_chk@plt+0xcd0>
   11d84:	mov	r0, r4
   11d88:	bl	1101c <fileno@plt>
   11d8c:	mov	r1, #1
   11d90:	mov	r2, #0
   11d94:	mov	r3, #0
   11d98:	str	r1, [sp]
   11d9c:	bl	10f14 <lseek64@plt>
   11da0:	and	r0, r0, r1
   11da4:	cmn	r0, #1
   11da8:	beq	11de4 <__mempcpy_chk@plt+0xd08>
   11dac:	mov	r0, r4
   11db0:	bl	11df4 <__mempcpy_chk@plt+0xd18>
   11db4:	cmp	r0, #0
   11db8:	beq	11de4 <__mempcpy_chk@plt+0xd08>
   11dbc:	bl	10fe0 <__errno_location@plt>
   11dc0:	ldr	r6, [r0]
   11dc4:	mov	r5, r0
   11dc8:	mov	r0, r4
   11dcc:	bl	11034 <fclose@plt>
   11dd0:	cmp	r6, #0
   11dd4:	strne	r6, [r5]
   11dd8:	mvnne	r0, #0
   11ddc:	sub	sp, fp, #16
   11de0:	pop	{r4, r5, r6, sl, fp, pc}
   11de4:	mov	r0, r4
   11de8:	sub	sp, fp, #16
   11dec:	pop	{r4, r5, r6, sl, fp, lr}
   11df0:	b	11034 <fclose@plt>
   11df4:	push	{r4, sl, fp, lr}
   11df8:	add	fp, sp, #8
   11dfc:	sub	sp, sp, #8
   11e00:	mov	r4, r0
   11e04:	cmp	r0, #0
   11e08:	beq	11e24 <__mempcpy_chk@plt+0xd48>
   11e0c:	mov	r0, r4
   11e10:	bl	10f98 <__freading@plt>
   11e14:	cmp	r0, #0
   11e18:	ldrbne	r0, [r4, #1]
   11e1c:	tstne	r0, #1
   11e20:	bne	11e34 <__mempcpy_chk@plt+0xd58>
   11e24:	mov	r0, r4
   11e28:	sub	sp, fp, #8
   11e2c:	pop	{r4, sl, fp, lr}
   11e30:	b	10e90 <fflush@plt>
   11e34:	mov	r0, #1
   11e38:	mov	r2, #0
   11e3c:	mov	r3, #0
   11e40:	str	r0, [sp]
   11e44:	mov	r0, r4
   11e48:	bl	11f70 <__mempcpy_chk@plt+0xe94>
   11e4c:	b	11e24 <__mempcpy_chk@plt+0xd48>
   11e50:	push	{fp, lr}
   11e54:	mov	fp, sp
   11e58:	bl	11e68 <__mempcpy_chk@plt+0xd8c>
   11e5c:	cmp	r0, #0
   11e60:	popne	{fp, pc}
   11e64:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   11e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e6c:	add	fp, sp, #28
   11e70:	push	{r2}		; (str r2, [sp, #-4]!)
   11e74:	mov	sl, r1
   11e78:	mov	r7, r0
   11e7c:	bl	11b50 <__mempcpy_chk@plt+0xa74>
   11e80:	sub	r4, r0, r7
   11e84:	bl	11b98 <__mempcpy_chk@plt+0xabc>
   11e88:	mov	r6, r0
   11e8c:	add	r5, r4, r0
   11e90:	mov	r0, sl
   11e94:	bl	10fd4 <strlen@plt>
   11e98:	mov	r9, r0
   11e9c:	cmp	r6, #0
   11ea0:	beq	11ec8 <__mempcpy_chk@plt+0xdec>
   11ea4:	add	r0, r7, r5
   11ea8:	mov	r4, #0
   11eac:	ldrb	r0, [r0, #-1]
   11eb0:	cmp	r0, #47	; 0x2f
   11eb4:	beq	11ed8 <__mempcpy_chk@plt+0xdfc>
   11eb8:	ldrb	r0, [sl]
   11ebc:	subs	r4, r0, #47	; 0x2f
   11ec0:	movwne	r4, #47	; 0x2f
   11ec4:	b	11ed8 <__mempcpy_chk@plt+0xdfc>
   11ec8:	ldrb	r0, [sl]
   11ecc:	mov	r4, #0
   11ed0:	cmp	r0, #47	; 0x2f
   11ed4:	movweq	r4, #46	; 0x2e
   11ed8:	uxtb	r8, r4
   11edc:	add	r0, r9, r5
   11ee0:	cmp	r8, #0
   11ee4:	movwne	r8, #1
   11ee8:	add	r0, r0, r8
   11eec:	add	r0, r0, #1
   11ef0:	bl	1481c <__mempcpy_chk@plt+0x3740>
   11ef4:	mov	r6, r0
   11ef8:	cmp	r0, #0
   11efc:	beq	11f3c <__mempcpy_chk@plt+0xe60>
   11f00:	mov	r0, r6
   11f04:	mov	r1, r7
   11f08:	mov	r2, r5
   11f0c:	mvn	r3, #0
   11f10:	bl	110dc <__mempcpy_chk@plt>
   11f14:	ldr	r1, [sp]
   11f18:	strb	r4, [r0], r8
   11f1c:	mov	r2, r9
   11f20:	mvn	r3, #0
   11f24:	cmp	r1, #0
   11f28:	strne	r0, [r1]
   11f2c:	mov	r1, sl
   11f30:	bl	110dc <__mempcpy_chk@plt>
   11f34:	mov	r1, #0
   11f38:	strb	r1, [r0]
   11f3c:	mov	r0, r6
   11f40:	sub	sp, fp, #28
   11f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f48:	push	{r4, r5, r6, sl, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	mov	r4, r0
   11f54:	bl	10fe0 <__errno_location@plt>
   11f58:	ldr	r6, [r0]
   11f5c:	mov	r5, r0
   11f60:	mov	r0, r4
   11f64:	bl	10e9c <free@plt>
   11f68:	str	r6, [r5]
   11f6c:	pop	{r4, r5, r6, sl, fp, pc}
   11f70:	push	{r4, r5, r6, r7, fp, lr}
   11f74:	add	fp, sp, #16
   11f78:	sub	sp, sp, #8
   11f7c:	mov	r4, r0
   11f80:	ldr	r0, [r0, #4]
   11f84:	mov	r5, r3
   11f88:	mov	r6, r2
   11f8c:	ldr	r1, [r4, #8]
   11f90:	cmp	r1, r0
   11f94:	bne	11fb0 <__mempcpy_chk@plt+0xed4>
   11f98:	ldrd	r0, [r4, #16]
   11f9c:	cmp	r1, r0
   11fa0:	bne	11fb0 <__mempcpy_chk@plt+0xed4>
   11fa4:	ldr	r0, [r4, #36]	; 0x24
   11fa8:	cmp	r0, #0
   11fac:	beq	11fc8 <__mempcpy_chk@plt+0xeec>
   11fb0:	mov	r0, r4
   11fb4:	mov	r2, r6
   11fb8:	mov	r3, r5
   11fbc:	sub	sp, fp, #16
   11fc0:	pop	{r4, r5, r6, r7, fp, lr}
   11fc4:	b	11040 <fseeko64@plt>
   11fc8:	ldr	r7, [fp, #8]
   11fcc:	mov	r0, r4
   11fd0:	bl	1101c <fileno@plt>
   11fd4:	mov	r2, r6
   11fd8:	mov	r3, r5
   11fdc:	str	r7, [sp]
   11fe0:	bl	10f14 <lseek64@plt>
   11fe4:	and	r2, r0, r1
   11fe8:	cmn	r2, #1
   11fec:	beq	12008 <__mempcpy_chk@plt+0xf2c>
   11ff0:	strd	r0, [r4, #80]	; 0x50
   11ff4:	ldr	r0, [r4]
   11ff8:	bic	r0, r0, #16
   11ffc:	str	r0, [r4]
   12000:	mov	r0, #0
   12004:	b	1200c <__mempcpy_chk@plt+0xf30>
   12008:	mvn	r0, #0
   1200c:	sub	sp, fp, #16
   12010:	pop	{r4, r5, r6, r7, fp, pc}
   12014:	push	{r4, r5, fp, lr}
   12018:	add	fp, sp, #8
   1201c:	cmp	r0, #0
   12020:	beq	120b4 <__mempcpy_chk@plt+0xfd8>
   12024:	mov	r1, #47	; 0x2f
   12028:	mov	r4, r0
   1202c:	bl	11058 <strrchr@plt>
   12030:	cmp	r0, #0
   12034:	mov	r5, r4
   12038:	addne	r5, r0, #1
   1203c:	sub	r0, r5, r4
   12040:	cmp	r0, #7
   12044:	blt	12098 <__mempcpy_chk@plt+0xfbc>
   12048:	movw	r1, #22046	; 0x561e
   1204c:	sub	r0, r5, #7
   12050:	mov	r2, #7
   12054:	movt	r1, #1
   12058:	bl	110a0 <strncmp@plt>
   1205c:	cmp	r0, #0
   12060:	bne	12098 <__mempcpy_chk@plt+0xfbc>
   12064:	movw	r1, #22054	; 0x5626
   12068:	mov	r0, r5
   1206c:	mov	r2, #3
   12070:	movt	r1, #1
   12074:	bl	110a0 <strncmp@plt>
   12078:	cmp	r0, #0
   1207c:	beq	12088 <__mempcpy_chk@plt+0xfac>
   12080:	mov	r4, r5
   12084:	b	12098 <__mempcpy_chk@plt+0xfbc>
   12088:	movw	r0, #24888	; 0x6138
   1208c:	add	r4, r5, #3
   12090:	movt	r0, #2
   12094:	str	r4, [r0]
   12098:	movw	r0, #24892	; 0x613c
   1209c:	movt	r0, #2
   120a0:	str	r4, [r0]
   120a4:	movw	r0, #24928	; 0x6160
   120a8:	movt	r0, #2
   120ac:	str	r4, [r0]
   120b0:	pop	{r4, r5, fp, pc}
   120b4:	movw	r0, #24904	; 0x6148
   120b8:	movt	r0, #2
   120bc:	ldr	r1, [r0]
   120c0:	movw	r0, #21990	; 0x55e6
   120c4:	movt	r0, #1
   120c8:	bl	11094 <fputs@plt>
   120cc:	bl	110ac <abort@plt>
   120d0:	push	{r4, r5, r6, sl, fp, lr}
   120d4:	add	fp, sp, #16
   120d8:	mov	r4, r0
   120dc:	movw	r0, #24936	; 0x6168
   120e0:	movt	r0, #2
   120e4:	cmp	r4, #0
   120e8:	moveq	r4, r0
   120ec:	bl	10fe0 <__errno_location@plt>
   120f0:	ldr	r6, [r0]
   120f4:	mov	r5, r0
   120f8:	mov	r0, r4
   120fc:	mov	r1, #48	; 0x30
   12100:	bl	14684 <__mempcpy_chk@plt+0x35a8>
   12104:	str	r6, [r5]
   12108:	pop	{r4, r5, r6, sl, fp, pc}
   1210c:	movw	r1, #24936	; 0x6168
   12110:	cmp	r0, #0
   12114:	movt	r1, #2
   12118:	movne	r1, r0
   1211c:	ldr	r0, [r1]
   12120:	bx	lr
   12124:	movw	r2, #24936	; 0x6168
   12128:	cmp	r0, #0
   1212c:	movt	r2, #2
   12130:	movne	r2, r0
   12134:	str	r1, [r2]
   12138:	bx	lr
   1213c:	movw	r3, #24936	; 0x6168
   12140:	cmp	r0, #0
   12144:	movt	r3, #2
   12148:	movne	r3, r0
   1214c:	ubfx	r0, r1, #5, #3
   12150:	and	r1, r1, #31
   12154:	add	r0, r3, r0, lsl #2
   12158:	ldr	r3, [r0, #8]
   1215c:	eor	r2, r2, r3, lsr r1
   12160:	and	r2, r2, #1
   12164:	eor	r2, r3, r2, lsl r1
   12168:	str	r2, [r0, #8]
   1216c:	mov	r0, #1
   12170:	and	r0, r0, r3, lsr r1
   12174:	bx	lr
   12178:	movw	r2, #24936	; 0x6168
   1217c:	cmp	r0, #0
   12180:	movt	r2, #2
   12184:	movne	r2, r0
   12188:	ldr	r0, [r2, #4]
   1218c:	str	r1, [r2, #4]
   12190:	bx	lr
   12194:	movw	r3, #24936	; 0x6168
   12198:	cmp	r0, #0
   1219c:	movt	r3, #2
   121a0:	movne	r3, r0
   121a4:	cmp	r1, #0
   121a8:	mov	r0, #10
   121ac:	cmpne	r2, #0
   121b0:	str	r0, [r3]
   121b4:	bne	121c4 <__mempcpy_chk@plt+0x10e8>
   121b8:	push	{fp, lr}
   121bc:	mov	fp, sp
   121c0:	bl	110ac <abort@plt>
   121c4:	str	r1, [r3, #40]	; 0x28
   121c8:	str	r2, [r3, #44]	; 0x2c
   121cc:	bx	lr
   121d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121d4:	add	fp, sp, #28
   121d8:	sub	sp, sp, #20
   121dc:	mov	r7, r0
   121e0:	ldr	r0, [fp, #8]
   121e4:	movw	r5, #24936	; 0x6168
   121e8:	mov	r8, r3
   121ec:	mov	r9, r2
   121f0:	mov	sl, r1
   121f4:	movt	r5, #2
   121f8:	cmp	r0, #0
   121fc:	movne	r5, r0
   12200:	bl	10fe0 <__errno_location@plt>
   12204:	mov	r4, r0
   12208:	ldm	r5, {r0, r1}
   1220c:	ldr	r2, [r5, #40]	; 0x28
   12210:	ldr	r3, [r5, #44]	; 0x2c
   12214:	add	r5, r5, #8
   12218:	ldr	r6, [r4]
   1221c:	stm	sp, {r0, r1, r5}
   12220:	str	r2, [sp, #12]
   12224:	str	r3, [sp, #16]
   12228:	mov	r0, r7
   1222c:	mov	r1, sl
   12230:	mov	r2, r9
   12234:	mov	r3, r8
   12238:	bl	12248 <__mempcpy_chk@plt+0x116c>
   1223c:	str	r6, [r4]
   12240:	sub	sp, fp, #28
   12244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1224c:	add	fp, sp, #28
   12250:	sub	sp, sp, #156	; 0x9c
   12254:	str	r0, [fp, #-56]	; 0xffffffc8
   12258:	ldr	r0, [fp, #12]
   1225c:	mov	r4, r1
   12260:	str	r3, [sp, #80]	; 0x50
   12264:	str	r2, [fp, #-84]	; 0xffffffac
   12268:	and	r1, r0, #4
   1226c:	str	r1, [sp, #24]
   12270:	and	r1, r0, #1
   12274:	str	r1, [sp, #28]
   12278:	ubfx	r7, r0, #1, #1
   1227c:	bl	10f20 <__ctype_get_mb_cur_max@plt>
   12280:	str	r0, [sp, #32]
   12284:	ldr	r0, [fp, #24]
   12288:	ldr	r9, [fp, #8]
   1228c:	mov	r2, #0
   12290:	mov	r1, #0
   12294:	mov	r5, #0
   12298:	str	r2, [sp, #52]	; 0x34
   1229c:	mov	r2, #1
   122a0:	str	r0, [sp, #72]	; 0x48
   122a4:	ldr	r0, [fp, #20]
   122a8:	str	r0, [sp, #64]	; 0x40
   122ac:	mov	r0, #0
   122b0:	str	r0, [sp, #92]	; 0x5c
   122b4:	mov	r0, #0
   122b8:	str	r0, [fp, #-76]	; 0xffffffb4
   122bc:	mov	r0, #0
   122c0:	cmp	r9, #10
   122c4:	str	r1, [sp, #68]	; 0x44
   122c8:	bhi	132c8 <__mempcpy_chk@plt+0x21ec>
   122cc:	add	r1, pc, #28
   122d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   122d4:	ldr	lr, [sp, #80]	; 0x50
   122d8:	mov	r6, r4
   122dc:	mov	r8, #0
   122e0:	mov	r3, #1
   122e4:	mov	sl, #0
   122e8:	mov	r4, r2
   122ec:	ldr	pc, [r1, r9, lsl #2]
   122f0:	andeq	r2, r1, r0, asr #7
   122f4:	strdeq	r2, [r1], -ip
   122f8:	ldrdeq	r2, [r1], -r0
   122fc:			; <UNDEFINED> instruction: 0x000123b8
   12300:	strdeq	r2, [r1], -r0
   12304:	andeq	r2, r1, r8, asr #8
   12308:	andeq	r2, r1, r0, ror #7
   1230c:	andeq	r2, r1, r8, lsr #9
   12310:	andeq	r2, r1, ip, lsl r3
   12314:	andeq	r2, r1, ip, lsl r3
   12318:	andeq	r2, r1, r4, asr #6
   1231c:	movw	r0, #22138	; 0x567a
   12320:	mov	r1, r9
   12324:	movt	r0, #1
   12328:	bl	13a30 <__mempcpy_chk@plt+0x2954>
   1232c:	str	r0, [sp, #64]	; 0x40
   12330:	movw	r0, #22140	; 0x567c
   12334:	mov	r1, r9
   12338:	movt	r0, #1
   1233c:	bl	13a30 <__mempcpy_chk@plt+0x2954>
   12340:	str	r0, [sp, #72]	; 0x48
   12344:	mov	r8, #0
   12348:	mov	sl, r7
   1234c:	tst	r7, #1
   12350:	str	r5, [fp, #-48]	; 0xffffffd0
   12354:	bne	12390 <__mempcpy_chk@plt+0x12b4>
   12358:	ldr	r0, [sp, #64]	; 0x40
   1235c:	ldrb	r0, [r0]
   12360:	cmp	r0, #0
   12364:	beq	12390 <__mempcpy_chk@plt+0x12b4>
   12368:	ldr	r1, [sp, #64]	; 0x40
   1236c:	mov	r8, #0
   12370:	add	r1, r1, #1
   12374:	cmp	r8, r6
   12378:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1237c:	strbcc	r0, [r2, r8]
   12380:	ldrb	r0, [r1, r8]
   12384:	add	r8, r8, #1
   12388:	cmp	r0, #0
   1238c:	bne	12374 <__mempcpy_chk@plt+0x1298>
   12390:	ldr	r7, [sp, #72]	; 0x48
   12394:	mov	r0, r7
   12398:	bl	10fd4 <strlen@plt>
   1239c:	ldr	ip, [fp, #-84]	; 0xffffffac
   123a0:	ldr	lr, [sp, #80]	; 0x50
   123a4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   123a8:	str	r0, [fp, #-76]	; 0xffffffb4
   123ac:	str	r7, [sp, #92]	; 0x5c
   123b0:	mov	r3, #1
   123b4:	b	124a8 <__mempcpy_chk@plt+0x13cc>
   123b8:	mov	r0, #1
   123bc:	b	123fc <__mempcpy_chk@plt+0x1320>
   123c0:	mov	r9, #0
   123c4:	mov	r8, #0
   123c8:	mov	r3, r0
   123cc:	b	124a4 <__mempcpy_chk@plt+0x13c8>
   123d0:	tst	r7, #1
   123d4:	bne	123fc <__mempcpy_chk@plt+0x1320>
   123d8:	mov	r3, r0
   123dc:	b	12424 <__mempcpy_chk@plt+0x1348>
   123e0:	mov	r0, #1
   123e4:	mov	r8, #0
   123e8:	mov	r9, #5
   123ec:	b	1245c <__mempcpy_chk@plt+0x1380>
   123f0:	mov	r3, #1
   123f4:	tst	r7, #1
   123f8:	beq	12424 <__mempcpy_chk@plt+0x1348>
   123fc:	mov	r1, #1
   12400:	mov	r8, #0
   12404:	mov	r9, #2
   12408:	mov	r3, r0
   1240c:	mov	sl, #1
   12410:	str	r1, [fp, #-76]	; 0xffffffb4
   12414:	movw	r1, #22140	; 0x567c
   12418:	movt	r1, #1
   1241c:	str	r1, [sp, #92]	; 0x5c
   12420:	b	124a8 <__mempcpy_chk@plt+0x13cc>
   12424:	cmp	r6, #0
   12428:	mov	r8, #1
   1242c:	mov	r9, #2
   12430:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12434:	movne	r0, #39	; 0x27
   12438:	strbne	r0, [r1]
   1243c:	movw	r0, #22140	; 0x567c
   12440:	movt	r0, #1
   12444:	b	12498 <__mempcpy_chk@plt+0x13bc>
   12448:	mov	r9, #5
   1244c:	tst	r7, #1
   12450:	beq	12478 <__mempcpy_chk@plt+0x139c>
   12454:	mov	r0, #1
   12458:	mov	r8, #0
   1245c:	str	r0, [fp, #-76]	; 0xffffffb4
   12460:	movw	r0, #22136	; 0x5678
   12464:	mov	r3, #1
   12468:	mov	sl, #1
   1246c:	movt	r0, #1
   12470:	str	r0, [sp, #92]	; 0x5c
   12474:	b	124a8 <__mempcpy_chk@plt+0x13cc>
   12478:	cmp	r6, #0
   1247c:	mov	r8, #1
   12480:	mov	r3, #1
   12484:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12488:	movne	r0, #34	; 0x22
   1248c:	strbne	r0, [r1]
   12490:	movw	r0, #22136	; 0x5678
   12494:	movt	r0, #1
   12498:	str	r0, [sp, #92]	; 0x5c
   1249c:	mov	r0, #1
   124a0:	str	r0, [fp, #-76]	; 0xffffffb4
   124a4:	mov	sl, #0
   124a8:	ldr	r0, [fp, #16]
   124ac:	mov	r7, #0
   124b0:	str	r9, [fp, #-64]	; 0xffffffc0
   124b4:	str	sl, [fp, #-72]	; 0xffffffb8
   124b8:	str	r3, [sp, #84]	; 0x54
   124bc:	cmp	r0, #0
   124c0:	movwne	r0, #1
   124c4:	and	r0, r0, sl
   124c8:	str	r0, [fp, #-88]	; 0xffffffa8
   124cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   124d0:	cmp	r0, #0
   124d4:	movwne	r0, #1
   124d8:	subs	r2, r9, #2
   124dc:	and	r1, r0, sl
   124e0:	str	r2, [fp, #-80]	; 0xffffffb0
   124e4:	and	r1, r3, r1
   124e8:	str	r1, [sp, #44]	; 0x2c
   124ec:	clz	r1, r2
   124f0:	lsr	r1, r1, #5
   124f4:	and	r1, r1, sl
   124f8:	str	r1, [sp, #56]	; 0x38
   124fc:	mov	r1, r2
   12500:	eor	r2, sl, #1
   12504:	movwne	r1, #1
   12508:	str	r2, [sp, #88]	; 0x58
   1250c:	orr	r2, r1, r2
   12510:	and	r1, r1, r3
   12514:	and	r0, r0, r1
   12518:	str	r2, [sp, #60]	; 0x3c
   1251c:	str	r1, [fp, #-68]	; 0xffffffbc
   12520:	str	r0, [fp, #-60]	; 0xffffffc4
   12524:	eor	r0, r3, #1
   12528:	str	r0, [sp, #48]	; 0x30
   1252c:	cmn	lr, #1
   12530:	beq	12540 <__mempcpy_chk@plt+0x1464>
   12534:	cmp	r7, lr
   12538:	bne	1254c <__mempcpy_chk@plt+0x1470>
   1253c:	b	130f8 <__mempcpy_chk@plt+0x201c>
   12540:	ldrb	r0, [ip, r7]
   12544:	cmp	r0, #0
   12548:	beq	13100 <__mempcpy_chk@plt+0x2024>
   1254c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12550:	mov	r9, #0
   12554:	str	r5, [fp, #-48]	; 0xffffffd0
   12558:	str	r6, [fp, #-52]	; 0xffffffcc
   1255c:	cmp	r0, #0
   12560:	beq	125a0 <__mempcpy_chk@plt+0x14c4>
   12564:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12568:	mov	r5, r4
   1256c:	add	r4, r7, r0
   12570:	cmp	r0, #2
   12574:	bcc	12590 <__mempcpy_chk@plt+0x14b4>
   12578:	cmn	lr, #1
   1257c:	bne	12590 <__mempcpy_chk@plt+0x14b4>
   12580:	mov	r0, ip
   12584:	bl	10fd4 <strlen@plt>
   12588:	ldr	ip, [fp, #-84]	; 0xffffffac
   1258c:	mov	lr, r0
   12590:	cmp	r4, lr
   12594:	bls	125a8 <__mempcpy_chk@plt+0x14cc>
   12598:	mov	r6, #0
   1259c:	b	125e8 <__mempcpy_chk@plt+0x150c>
   125a0:	mov	r6, #0
   125a4:	b	125ec <__mempcpy_chk@plt+0x1510>
   125a8:	ldr	r1, [sp, #92]	; 0x5c
   125ac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   125b0:	add	r0, ip, r7
   125b4:	mov	r4, lr
   125b8:	bl	10ed8 <memcmp@plt>
   125bc:	ldr	r2, [sp, #88]	; 0x58
   125c0:	cmp	r0, #0
   125c4:	mov	r1, r0
   125c8:	movwne	r1, #1
   125cc:	orr	r1, r1, r2
   125d0:	tst	r1, #1
   125d4:	beq	13194 <__mempcpy_chk@plt+0x20b8>
   125d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   125dc:	clz	r0, r0
   125e0:	mov	lr, r4
   125e4:	lsr	r6, r0, #5
   125e8:	mov	r4, r5
   125ec:	ldrb	r5, [ip, r7]
   125f0:	cmp	r5, #126	; 0x7e
   125f4:	bhi	129bc <__mempcpy_chk@plt+0x18e0>
   125f8:	add	r3, pc, #16
   125fc:	mov	sl, #1
   12600:	mov	r2, #110	; 0x6e
   12604:	mov	r0, #97	; 0x61
   12608:	mov	r1, #0
   1260c:	ldr	pc, [r3, r5, lsl #2]
   12610:	andeq	r2, r1, r0, lsr #17
   12614:			; <UNDEFINED> instruction: 0x000129bc
   12618:			; <UNDEFINED> instruction: 0x000129bc
   1261c:			; <UNDEFINED> instruction: 0x000129bc
   12620:			; <UNDEFINED> instruction: 0x000129bc
   12624:			; <UNDEFINED> instruction: 0x000129bc
   12628:			; <UNDEFINED> instruction: 0x000129bc
   1262c:	andeq	r2, r1, r0, ror #20
   12630:	andeq	r2, r1, r0, lsl #17
   12634:	andeq	r2, r1, r8, ror r8
   12638:	andeq	r2, r1, ip, lsl #17
   1263c:	andeq	r2, r1, r0, lsl r9
   12640:	andeq	r2, r1, r0, ror r8
   12644:	andeq	r2, r1, r8, lsl #17
   12648:			; <UNDEFINED> instruction: 0x000129bc
   1264c:			; <UNDEFINED> instruction: 0x000129bc
   12650:			; <UNDEFINED> instruction: 0x000129bc
   12654:			; <UNDEFINED> instruction: 0x000129bc
   12658:			; <UNDEFINED> instruction: 0x000129bc
   1265c:			; <UNDEFINED> instruction: 0x000129bc
   12660:			; <UNDEFINED> instruction: 0x000129bc
   12664:			; <UNDEFINED> instruction: 0x000129bc
   12668:			; <UNDEFINED> instruction: 0x000129bc
   1266c:			; <UNDEFINED> instruction: 0x000129bc
   12670:			; <UNDEFINED> instruction: 0x000129bc
   12674:			; <UNDEFINED> instruction: 0x000129bc
   12678:			; <UNDEFINED> instruction: 0x000129bc
   1267c:			; <UNDEFINED> instruction: 0x000129bc
   12680:			; <UNDEFINED> instruction: 0x000129bc
   12684:			; <UNDEFINED> instruction: 0x000129bc
   12688:			; <UNDEFINED> instruction: 0x000129bc
   1268c:			; <UNDEFINED> instruction: 0x000129bc
   12690:	andeq	r2, r1, r0, lsr #20
   12694:	andeq	r2, r1, r4, lsr #20
   12698:	andeq	r2, r1, r4, lsr #20
   1269c:	andeq	r2, r1, r0, lsr #16
   126a0:	andeq	r2, r1, r4, lsr #20
   126a4:	andeq	r2, r1, ip, lsl #16
   126a8:	andeq	r2, r1, r4, lsr #20
   126ac:	andeq	r2, r1, r8, lsl r9
   126b0:	andeq	r2, r1, r4, lsr #20
   126b4:	andeq	r2, r1, r4, lsr #20
   126b8:	andeq	r2, r1, r4, lsr #20
   126bc:	andeq	r2, r1, ip, lsl #16
   126c0:	andeq	r2, r1, ip, lsl #16
   126c4:	andeq	r2, r1, ip, lsl #16
   126c8:	andeq	r2, r1, ip, lsl #16
   126cc:	andeq	r2, r1, ip, lsl #16
   126d0:	andeq	r2, r1, ip, lsl #16
   126d4:	andeq	r2, r1, ip, lsl #16
   126d8:	andeq	r2, r1, ip, lsl #16
   126dc:	andeq	r2, r1, ip, lsl #16
   126e0:	andeq	r2, r1, ip, lsl #16
   126e4:	andeq	r2, r1, ip, lsl #16
   126e8:	andeq	r2, r1, ip, lsl #16
   126ec:	andeq	r2, r1, ip, lsl #16
   126f0:	andeq	r2, r1, ip, lsl #16
   126f4:	andeq	r2, r1, ip, lsl #16
   126f8:	andeq	r2, r1, ip, lsl #16
   126fc:	andeq	r2, r1, r4, lsr #20
   12700:	andeq	r2, r1, r4, lsr #20
   12704:	andeq	r2, r1, r4, lsr #20
   12708:	andeq	r2, r1, r4, lsr #20
   1270c:	andeq	r2, r1, r4, ror #17
   12710:			; <UNDEFINED> instruction: 0x000129bc
   12714:	andeq	r2, r1, ip, lsl #16
   12718:	andeq	r2, r1, ip, lsl #16
   1271c:	andeq	r2, r1, ip, lsl #16
   12720:	andeq	r2, r1, ip, lsl #16
   12724:	andeq	r2, r1, ip, lsl #16
   12728:	andeq	r2, r1, ip, lsl #16
   1272c:	andeq	r2, r1, ip, lsl #16
   12730:	andeq	r2, r1, ip, lsl #16
   12734:	andeq	r2, r1, ip, lsl #16
   12738:	andeq	r2, r1, ip, lsl #16
   1273c:	andeq	r2, r1, ip, lsl #16
   12740:	andeq	r2, r1, ip, lsl #16
   12744:	andeq	r2, r1, ip, lsl #16
   12748:	andeq	r2, r1, ip, lsl #16
   1274c:	andeq	r2, r1, ip, lsl #16
   12750:	andeq	r2, r1, ip, lsl #16
   12754:	andeq	r2, r1, ip, lsl #16
   12758:	andeq	r2, r1, ip, lsl #16
   1275c:	andeq	r2, r1, ip, lsl #16
   12760:	andeq	r2, r1, ip, lsl #16
   12764:	andeq	r2, r1, ip, lsl #16
   12768:	andeq	r2, r1, ip, lsl #16
   1276c:	andeq	r2, r1, ip, lsl #16
   12770:	andeq	r2, r1, ip, lsl #16
   12774:	andeq	r2, r1, ip, lsl #16
   12778:	andeq	r2, r1, ip, lsl #16
   1277c:	andeq	r2, r1, r4, lsr #20
   12780:	andeq	r2, r1, ip, asr #16
   12784:	andeq	r2, r1, ip, lsl #16
   12788:	andeq	r2, r1, r4, lsr #20
   1278c:	andeq	r2, r1, ip, lsl #16
   12790:	andeq	r2, r1, r4, lsr #20
   12794:	andeq	r2, r1, ip, lsl #16
   12798:	andeq	r2, r1, ip, lsl #16
   1279c:	andeq	r2, r1, ip, lsl #16
   127a0:	andeq	r2, r1, ip, lsl #16
   127a4:	andeq	r2, r1, ip, lsl #16
   127a8:	andeq	r2, r1, ip, lsl #16
   127ac:	andeq	r2, r1, ip, lsl #16
   127b0:	andeq	r2, r1, ip, lsl #16
   127b4:	andeq	r2, r1, ip, lsl #16
   127b8:	andeq	r2, r1, ip, lsl #16
   127bc:	andeq	r2, r1, ip, lsl #16
   127c0:	andeq	r2, r1, ip, lsl #16
   127c4:	andeq	r2, r1, ip, lsl #16
   127c8:	andeq	r2, r1, ip, lsl #16
   127cc:	andeq	r2, r1, ip, lsl #16
   127d0:	andeq	r2, r1, ip, lsl #16
   127d4:	andeq	r2, r1, ip, lsl #16
   127d8:	andeq	r2, r1, ip, lsl #16
   127dc:	andeq	r2, r1, ip, lsl #16
   127e0:	andeq	r2, r1, ip, lsl #16
   127e4:	andeq	r2, r1, ip, lsl #16
   127e8:	andeq	r2, r1, ip, lsl #16
   127ec:	andeq	r2, r1, ip, lsl #16
   127f0:	andeq	r2, r1, ip, lsl #16
   127f4:	andeq	r2, r1, ip, lsl #16
   127f8:	andeq	r2, r1, ip, lsl #16
   127fc:	andeq	r2, r1, r0, lsr r8
   12800:	andeq	r2, r1, r4, lsr #20
   12804:	andeq	r2, r1, r0, lsr r8
   12808:	andeq	r2, r1, r0, lsr #16
   1280c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12810:	cmp	r0, #0
   12814:	beq	12a74 <__mempcpy_chk@plt+0x1998>
   12818:	ldr	r0, [fp, #16]
   1281c:	b	12a78 <__mempcpy_chk@plt+0x199c>
   12820:	mov	sl, #0
   12824:	cmp	r7, #0
   12828:	bne	12c90 <__mempcpy_chk@plt+0x1bb4>
   1282c:	b	12a20 <__mempcpy_chk@plt+0x1944>
   12830:	mov	sl, #0
   12834:	cmn	lr, #1
   12838:	beq	12a0c <__mempcpy_chk@plt+0x1930>
   1283c:	cmp	r7, #0
   12840:	cmpeq	lr, #1
   12844:	bne	12c90 <__mempcpy_chk@plt+0x1bb4>
   12848:	b	12a20 <__mempcpy_chk@plt+0x1944>
   1284c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12850:	cmp	r0, #2
   12854:	bne	12a44 <__mempcpy_chk@plt+0x1968>
   12858:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1285c:	tst	r0, #1
   12860:	bne	131b0 <__mempcpy_chk@plt+0x20d4>
   12864:	mov	r9, #0
   12868:	mov	r0, #92	; 0x5c
   1286c:	b	12a58 <__mempcpy_chk@plt+0x197c>
   12870:	mov	r0, #102	; 0x66
   12874:	b	12a60 <__mempcpy_chk@plt+0x1984>
   12878:	mov	r2, #116	; 0x74
   1287c:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12880:	mov	r0, #98	; 0x62
   12884:	b	12a60 <__mempcpy_chk@plt+0x1984>
   12888:	mov	r2, #114	; 0x72
   1288c:	ldr	r0, [sp, #60]	; 0x3c
   12890:	tst	r0, #1
   12894:	mov	r0, r2
   12898:	bne	12a60 <__mempcpy_chk@plt+0x1984>
   1289c:	b	131b0 <__mempcpy_chk@plt+0x20d4>
   128a0:	ldr	r0, [sp, #84]	; 0x54
   128a4:	tst	r0, #1
   128a8:	beq	12b4c <__mempcpy_chk@plt+0x1a70>
   128ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   128b0:	tst	r0, #1
   128b4:	bne	132b8 <__mempcpy_chk@plt+0x21dc>
   128b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   128c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   128c4:	cmp	r0, #2
   128c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   128cc:	movwne	r0, #1
   128d0:	orr	r0, r0, r3
   128d4:	tst	r0, #1
   128d8:	beq	12fcc <__mempcpy_chk@plt+0x1ef0>
   128dc:	mov	r0, r8
   128e0:	b	1300c <__mempcpy_chk@plt+0x1f30>
   128e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128e8:	mov	r9, #0
   128ec:	mov	r5, #63	; 0x3f
   128f0:	cmp	r0, #5
   128f4:	beq	12c98 <__mempcpy_chk@plt+0x1bbc>
   128f8:	cmp	r0, #2
   128fc:	bne	12d58 <__mempcpy_chk@plt+0x1c7c>
   12900:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12904:	tst	r0, #1
   12908:	beq	12d5c <__mempcpy_chk@plt+0x1c80>
   1290c:	b	131b0 <__mempcpy_chk@plt+0x20d4>
   12910:	mov	r0, #118	; 0x76
   12914:	b	12a60 <__mempcpy_chk@plt+0x1984>
   12918:	mov	r0, #1
   1291c:	mov	r5, #39	; 0x27
   12920:	str	r0, [sp, #52]	; 0x34
   12924:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12928:	cmp	r0, #2
   1292c:	bne	129b4 <__mempcpy_chk@plt+0x18d8>
   12930:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12934:	tst	r0, #1
   12938:	bne	131b0 <__mempcpy_chk@plt+0x20d4>
   1293c:	ldr	r3, [sp, #68]	; 0x44
   12940:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12944:	mov	r9, #0
   12948:	clz	r1, r2
   1294c:	cmp	r3, #0
   12950:	mov	r0, r3
   12954:	movwne	r0, #1
   12958:	lsr	r1, r1, #5
   1295c:	orrs	r0, r0, r1
   12960:	moveq	r3, r2
   12964:	moveq	r2, r0
   12968:	cmp	r8, r2
   1296c:	str	r3, [sp, #68]	; 0x44
   12970:	str	r2, [fp, #-52]	; 0xffffffcc
   12974:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12978:	movcc	r0, #39	; 0x27
   1297c:	strbcc	r0, [r1, r8]
   12980:	add	r0, r8, #1
   12984:	cmp	r0, r2
   12988:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1298c:	movcc	r1, #92	; 0x5c
   12990:	strbcc	r1, [r3, r0]
   12994:	add	r0, r8, #2
   12998:	add	r8, r8, #3
   1299c:	cmp	r0, r2
   129a0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   129a4:	movcc	r1, #39	; 0x27
   129a8:	strbcc	r1, [r2, r0]
   129ac:	mov	r0, #0
   129b0:	str	r0, [fp, #-48]	; 0xffffffd0
   129b4:	mov	sl, #1
   129b8:	b	1280c <__mempcpy_chk@plt+0x1730>
   129bc:	ldr	r0, [sp, #32]
   129c0:	cmp	r0, #1
   129c4:	bne	12b70 <__mempcpy_chk@plt+0x1a94>
   129c8:	str	lr, [sp, #80]	; 0x50
   129cc:	bl	10fbc <__ctype_b_loc@plt>
   129d0:	ldr	r0, [r0]
   129d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   129d8:	mov	r1, #1
   129dc:	add	r0, r0, r5, lsl #1
   129e0:	ldrb	r0, [r0, #1]
   129e4:	ubfx	sl, r0, #6, #1
   129e8:	ldr	r0, [sp, #48]	; 0x30
   129ec:	mov	r2, r1
   129f0:	cmp	r1, #1
   129f4:	orr	r0, sl, r0
   129f8:	bhi	12d64 <__mempcpy_chk@plt+0x1c88>
   129fc:	tst	r0, #1
   12a00:	beq	12d64 <__mempcpy_chk@plt+0x1c88>
   12a04:	ldr	lr, [sp, #80]	; 0x50
   12a08:	b	1280c <__mempcpy_chk@plt+0x1730>
   12a0c:	cmp	r7, #0
   12a10:	bne	12c8c <__mempcpy_chk@plt+0x1bb0>
   12a14:	ldrb	r0, [ip, #1]
   12a18:	cmp	r0, #0
   12a1c:	bne	12c8c <__mempcpy_chk@plt+0x1bb0>
   12a20:	mov	r1, #1
   12a24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a28:	cmp	r0, #2
   12a2c:	bne	12a3c <__mempcpy_chk@plt+0x1960>
   12a30:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a34:	tst	r0, #1
   12a38:	bne	131b0 <__mempcpy_chk@plt+0x20d4>
   12a3c:	mov	sl, r1
   12a40:	b	1280c <__mempcpy_chk@plt+0x1730>
   12a44:	ldr	r1, [sp, #44]	; 0x2c
   12a48:	mov	r9, #0
   12a4c:	mov	r0, #92	; 0x5c
   12a50:	cmp	r1, #0
   12a54:	beq	12a60 <__mempcpy_chk@plt+0x1984>
   12a58:	mov	sl, #0
   12a5c:	b	12f78 <__mempcpy_chk@plt+0x1e9c>
   12a60:	ldr	r1, [sp, #84]	; 0x54
   12a64:	mov	sl, #0
   12a68:	mov	r9, #0
   12a6c:	tst	r1, #1
   12a70:	bne	12aac <__mempcpy_chk@plt+0x19d0>
   12a74:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12a78:	cmp	r0, #0
   12a7c:	mov	r0, r5
   12a80:	beq	12aa4 <__mempcpy_chk@plt+0x19c8>
   12a84:	ldr	r1, [fp, #16]
   12a88:	ubfx	r0, r5, #5, #3
   12a8c:	mov	r2, #1
   12a90:	ldr	r0, [r1, r0, lsl #2]
   12a94:	and	r1, r5, #31
   12a98:	tst	r0, r2, lsl r1
   12a9c:	mov	r0, r5
   12aa0:	bne	12aac <__mempcpy_chk@plt+0x19d0>
   12aa4:	cmp	r6, #0
   12aa8:	beq	12f78 <__mempcpy_chk@plt+0x1e9c>
   12aac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12ab0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12ab4:	tst	r1, #1
   12ab8:	bne	1318c <__mempcpy_chk@plt+0x20b0>
   12abc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12ac0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ac4:	cmp	r1, #2
   12ac8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12acc:	movwne	r1, #1
   12ad0:	orr	r1, r1, r5
   12ad4:	tst	r1, #1
   12ad8:	bne	12b1c <__mempcpy_chk@plt+0x1a40>
   12adc:	cmp	r8, r6
   12ae0:	mov	r5, #1
   12ae4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12ae8:	movcc	r1, #39	; 0x27
   12aec:	strbcc	r1, [r2, r8]
   12af0:	add	r1, r8, #1
   12af4:	cmp	r1, r6
   12af8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12afc:	movcc	r2, #36	; 0x24
   12b00:	strbcc	r2, [r3, r1]
   12b04:	add	r1, r8, #2
   12b08:	add	r8, r8, #3
   12b0c:	cmp	r1, r6
   12b10:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12b14:	movcc	r2, #39	; 0x27
   12b18:	strbcc	r2, [r3, r1]
   12b1c:	cmp	r8, r6
   12b20:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12b24:	movcc	r1, #92	; 0x5c
   12b28:	strbcc	r1, [r2, r8]
   12b2c:	add	r8, r8, #1
   12b30:	cmp	r8, r6
   12b34:	and	r4, r4, sl
   12b38:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12b3c:	strbcc	r0, [r1, r8]
   12b40:	add	r8, r8, #1
   12b44:	add	r7, r7, #1
   12b48:	b	1252c <__mempcpy_chk@plt+0x1450>
   12b4c:	ldr	r0, [sp, #28]
   12b50:	mov	sl, #0
   12b54:	mov	r9, #0
   12b58:	mov	r5, #0
   12b5c:	cmp	r0, #0
   12b60:	beq	12a74 <__mempcpy_chk@plt+0x1998>
   12b64:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12b68:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12b6c:	b	12b44 <__mempcpy_chk@plt+0x1a68>
   12b70:	mov	r0, #0
   12b74:	cmn	lr, #1
   12b78:	str	r6, [sp, #76]	; 0x4c
   12b7c:	str	r4, [sp, #20]
   12b80:	str	r0, [fp, #-36]	; 0xffffffdc
   12b84:	str	r0, [fp, #-40]	; 0xffffffd8
   12b88:	bne	12b9c <__mempcpy_chk@plt+0x1ac0>
   12b8c:	mov	r0, ip
   12b90:	bl	10fd4 <strlen@plt>
   12b94:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b98:	mov	lr, r0
   12b9c:	add	r0, ip, r7
   12ba0:	mov	sl, #1
   12ba4:	mov	r6, #0
   12ba8:	sub	r4, fp, #40	; 0x28
   12bac:	str	lr, [sp, #80]	; 0x50
   12bb0:	str	r0, [sp, #36]	; 0x24
   12bb4:	str	r6, [sp, #40]	; 0x28
   12bb8:	add	r6, r6, r7
   12bbc:	sub	r0, fp, #44	; 0x2c
   12bc0:	mov	r3, r4
   12bc4:	add	r1, ip, r6
   12bc8:	sub	r2, lr, r6
   12bcc:	bl	148d4 <__mempcpy_chk@plt+0x37f8>
   12bd0:	cmp	r0, #0
   12bd4:	beq	130e0 <__mempcpy_chk@plt+0x2004>
   12bd8:	cmn	r0, #1
   12bdc:	beq	130a0 <__mempcpy_chk@plt+0x1fc4>
   12be0:	ldr	lr, [sp, #80]	; 0x50
   12be4:	cmn	r0, #2
   12be8:	beq	130a8 <__mempcpy_chk@plt+0x1fcc>
   12bec:	ldr	r2, [sp, #56]	; 0x38
   12bf0:	cmp	r0, #2
   12bf4:	mov	r1, #0
   12bf8:	movwcc	r1, #1
   12bfc:	eor	r2, r2, #1
   12c00:	orrs	r1, r2, r1
   12c04:	bne	12c50 <__mempcpy_chk@plt+0x1b74>
   12c08:	ldr	r1, [sp, #40]	; 0x28
   12c0c:	ldr	r2, [sp, #36]	; 0x24
   12c10:	add	ip, r2, r1
   12c14:	mov	r2, #1
   12c18:	ldrb	r3, [ip, r2]
   12c1c:	sub	r6, r3, #94	; 0x5e
   12c20:	cmp	r6, #30
   12c24:	bhi	12c38 <__mempcpy_chk@plt+0x1b5c>
   12c28:	mov	r4, #1
   12c2c:	mov	r1, #1073741829	; 0x40000005
   12c30:	tst	r1, r4, lsl r6
   12c34:	bne	131ac <__mempcpy_chk@plt+0x20d0>
   12c38:	sub	r3, r3, #91	; 0x5b
   12c3c:	cmp	r3, #2
   12c40:	bcc	131ac <__mempcpy_chk@plt+0x20d0>
   12c44:	add	r2, r2, #1
   12c48:	cmp	r2, r0
   12c4c:	bcc	12c18 <__mempcpy_chk@plt+0x1b3c>
   12c50:	ldr	r6, [sp, #40]	; 0x28
   12c54:	add	r6, r0, r6
   12c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c5c:	bl	10f08 <iswprint@plt>
   12c60:	cmp	r0, #0
   12c64:	sub	r4, fp, #40	; 0x28
   12c68:	movwne	r0, #1
   12c6c:	and	sl, sl, r0
   12c70:	mov	r0, r4
   12c74:	bl	10ecc <mbsinit@plt>
   12c78:	ldr	lr, [sp, #80]	; 0x50
   12c7c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12c80:	cmp	r0, #0
   12c84:	beq	12bb4 <__mempcpy_chk@plt+0x1ad8>
   12c88:	b	130e8 <__mempcpy_chk@plt+0x200c>
   12c8c:	mvn	lr, #0
   12c90:	mov	r9, #0
   12c94:	b	1280c <__mempcpy_chk@plt+0x1730>
   12c98:	ldr	r0, [sp, #24]
   12c9c:	cmp	r0, #0
   12ca0:	beq	12d58 <__mempcpy_chk@plt+0x1c7c>
   12ca4:	add	r0, r7, #2
   12ca8:	cmp	r0, lr
   12cac:	bcs	12d58 <__mempcpy_chk@plt+0x1c7c>
   12cb0:	add	r1, ip, r7
   12cb4:	ldrb	r1, [r1, #1]
   12cb8:	cmp	r1, #63	; 0x3f
   12cbc:	bne	12d58 <__mempcpy_chk@plt+0x1c7c>
   12cc0:	ldrb	r5, [ip, r0]
   12cc4:	sub	r1, r5, #33	; 0x21
   12cc8:	cmp	r1, #29
   12ccc:	bhi	12d58 <__mempcpy_chk@plt+0x1c7c>
   12cd0:	movw	r3, #20929	; 0x51c1
   12cd4:	mov	r2, #1
   12cd8:	movt	r3, #14336	; 0x3800
   12cdc:	tst	r3, r2, lsl r1
   12ce0:	beq	12d58 <__mempcpy_chk@plt+0x1c7c>
   12ce4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12ce8:	tst	r1, #1
   12cec:	bne	132c0 <__mempcpy_chk@plt+0x21e4>
   12cf0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12cf4:	mov	r7, r0
   12cf8:	cmp	r8, r1
   12cfc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12d00:	movcc	r1, #63	; 0x3f
   12d04:	strbcc	r1, [r2, r8]
   12d08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12d0c:	add	r1, r8, #1
   12d10:	cmp	r1, r2
   12d14:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12d18:	movcc	r2, #34	; 0x22
   12d1c:	strbcc	r2, [r3, r1]
   12d20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12d24:	add	r1, r8, #2
   12d28:	cmp	r1, r2
   12d2c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12d30:	movcc	r2, #34	; 0x22
   12d34:	strbcc	r2, [r3, r1]
   12d38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12d3c:	add	r1, r8, #3
   12d40:	add	r8, r8, #4
   12d44:	cmp	r1, r2
   12d48:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12d4c:	movcc	r2, #63	; 0x3f
   12d50:	strbcc	r2, [r3, r1]
   12d54:	b	12d5c <__mempcpy_chk@plt+0x1c80>
   12d58:	mov	r5, #63	; 0x3f
   12d5c:	mov	sl, #0
   12d60:	b	1280c <__mempcpy_chk@plt+0x1730>
   12d64:	str	r0, [sp, #40]	; 0x28
   12d68:	add	r0, r2, r7
   12d6c:	str	r6, [sp, #76]	; 0x4c
   12d70:	add	r1, r7, #1
   12d74:	ldr	lr, [sp, #80]	; 0x50
   12d78:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12d7c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12d80:	mov	r3, #0
   12d84:	str	r0, [sp, #36]	; 0x24
   12d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12d8c:	b	12e20 <__mempcpy_chk@plt+0x1d44>
   12d90:	str	r0, [sp, #76]	; 0x4c
   12d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12d98:	cmp	r9, #0
   12d9c:	movwne	r9, #1
   12da0:	mvn	r7, r0
   12da4:	orr	r7, r7, r9
   12da8:	tst	r7, #1
   12dac:	bne	12dfc <__mempcpy_chk@plt+0x1d20>
   12db0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12db4:	cmp	r8, r6
   12db8:	bcs	12dd0 <__mempcpy_chk@plt+0x1cf4>
   12dbc:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12dc0:	mov	r2, r4
   12dc4:	mov	r4, #39	; 0x27
   12dc8:	strb	r4, [r7, r8]
   12dcc:	mov	r4, r2
   12dd0:	add	r7, r8, #1
   12dd4:	cmp	r7, r6
   12dd8:	bcs	12df0 <__mempcpy_chk@plt+0x1d14>
   12ddc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12de0:	mov	r2, r4
   12de4:	mov	r4, #39	; 0x27
   12de8:	strb	r4, [r0, r7]
   12dec:	mov	r4, r2
   12df0:	add	r8, r8, #2
   12df4:	mov	r0, #0
   12df8:	b	12e04 <__mempcpy_chk@plt+0x1d28>
   12dfc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12e00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12e04:	cmp	r8, r6
   12e08:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12e0c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12e10:	strbcc	r5, [r2, r8]
   12e14:	add	r8, r8, #1
   12e18:	ldrb	r5, [ip, r1]
   12e1c:	add	r1, r1, #1
   12e20:	ldr	r2, [sp, #40]	; 0x28
   12e24:	tst	r2, #1
   12e28:	beq	12e64 <__mempcpy_chk@plt+0x1d88>
   12e2c:	ldr	r2, [sp, #76]	; 0x4c
   12e30:	str	r0, [fp, #-48]	; 0xffffffd0
   12e34:	tst	r2, #1
   12e38:	beq	12e5c <__mempcpy_chk@plt+0x1d80>
   12e3c:	cmp	r8, r6
   12e40:	bcs	12e58 <__mempcpy_chk@plt+0x1d7c>
   12e44:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12e48:	mov	r2, r4
   12e4c:	mov	r4, #92	; 0x5c
   12e50:	strb	r4, [r6, r8]
   12e54:	mov	r4, r2
   12e58:	add	r8, r8, #1
   12e5c:	mov	r0, #0
   12e60:	b	12f58 <__mempcpy_chk@plt+0x1e7c>
   12e64:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e68:	tst	r2, #1
   12e6c:	bne	131b8 <__mempcpy_chk@plt+0x20dc>
   12e70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e74:	cmp	r7, #2
   12e78:	movwne	r3, #1
   12e7c:	orr	r3, r3, r0
   12e80:	tst	r3, #1
   12e84:	bne	12ee0 <__mempcpy_chk@plt+0x1e04>
   12e88:	cmp	r8, r6
   12e8c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12e90:	movcc	r3, #39	; 0x27
   12e94:	strbcc	r3, [r2, r8]
   12e98:	add	r3, r8, #1
   12e9c:	cmp	r3, r6
   12ea0:	bcs	12eb8 <__mempcpy_chk@plt+0x1ddc>
   12ea4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ea8:	mov	r7, r4
   12eac:	mov	r4, #36	; 0x24
   12eb0:	strb	r4, [r2, r3]
   12eb4:	mov	r4, r7
   12eb8:	add	r3, r8, #2
   12ebc:	cmp	r3, r6
   12ec0:	bcs	12ed8 <__mempcpy_chk@plt+0x1dfc>
   12ec4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ec8:	mov	r7, r4
   12ecc:	mov	r4, #39	; 0x27
   12ed0:	strb	r4, [r2, r3]
   12ed4:	mov	r4, r7
   12ed8:	add	r8, r8, #3
   12edc:	mov	r0, #1
   12ee0:	cmp	r8, r6
   12ee4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12ee8:	movcc	r3, #92	; 0x5c
   12eec:	strbcc	r3, [r2, r8]
   12ef0:	add	r3, r8, #1
   12ef4:	cmp	r3, r6
   12ef8:	bcs	12f18 <__mempcpy_chk@plt+0x1e3c>
   12efc:	mov	r2, r4
   12f00:	and	r7, r5, #192	; 0xc0
   12f04:	mov	r4, #48	; 0x30
   12f08:	orr	r7, r4, r7, lsr #6
   12f0c:	mov	r4, r2
   12f10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12f14:	strb	r7, [r2, r3]
   12f18:	add	r3, r8, #2
   12f1c:	cmp	r3, r6
   12f20:	bcs	12f40 <__mempcpy_chk@plt+0x1e64>
   12f24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12f28:	mov	r6, r4
   12f2c:	lsr	r7, r5, #3
   12f30:	mov	r4, #6
   12f34:	bfi	r7, r4, #3, #29
   12f38:	mov	r4, r6
   12f3c:	strb	r7, [r2, r3]
   12f40:	str	r0, [fp, #-48]	; 0xffffffd0
   12f44:	ldr	r0, [sp, #76]	; 0x4c
   12f48:	mov	r3, #6
   12f4c:	add	r8, r8, #3
   12f50:	bfi	r5, r3, #3, #29
   12f54:	mov	r3, #1
   12f58:	ldr	r2, [sp, #36]	; 0x24
   12f5c:	and	r9, r3, #1
   12f60:	cmp	r2, r1
   12f64:	bhi	12d90 <__mempcpy_chk@plt+0x1cb4>
   12f68:	cmp	r9, #0
   12f6c:	sub	r7, r1, #1
   12f70:	mov	r0, r5
   12f74:	movwne	r9, #1
   12f78:	cmp	r9, #0
   12f7c:	bne	12fc0 <__mempcpy_chk@plt+0x1ee4>
   12f80:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12f84:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12f88:	tst	r5, #1
   12f8c:	beq	12b30 <__mempcpy_chk@plt+0x1a54>
   12f90:	cmp	r8, r6
   12f94:	mov	r5, #0
   12f98:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12f9c:	movcc	r1, #39	; 0x27
   12fa0:	strbcc	r1, [r2, r8]
   12fa4:	add	r1, r8, #1
   12fa8:	add	r8, r8, #2
   12fac:	cmp	r1, r6
   12fb0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12fb4:	movcc	r2, #39	; 0x27
   12fb8:	strbcc	r2, [r3, r1]
   12fbc:	b	12b30 <__mempcpy_chk@plt+0x1a54>
   12fc0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12fc4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12fc8:	b	12b30 <__mempcpy_chk@plt+0x1a54>
   12fcc:	cmp	r8, r1
   12fd0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12fd4:	movcc	r0, #39	; 0x27
   12fd8:	strbcc	r0, [r2, r8]
   12fdc:	add	r0, r8, #1
   12fe0:	cmp	r0, r1
   12fe4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12fe8:	movcc	r2, #36	; 0x24
   12fec:	strbcc	r2, [r3, r0]
   12ff0:	add	r0, r8, #2
   12ff4:	cmp	r0, r1
   12ff8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12ffc:	movcc	r2, #39	; 0x27
   13000:	strbcc	r2, [r3, r0]
   13004:	add	r0, r8, #3
   13008:	mov	r3, #1
   1300c:	cmp	r0, r1
   13010:	add	r8, r0, #1
   13014:	str	r3, [fp, #-48]	; 0xffffffd0
   13018:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1301c:	movcc	r1, #92	; 0x5c
   13020:	strbcc	r1, [r2, r0]
   13024:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13028:	cmp	r1, #2
   1302c:	beq	13090 <__mempcpy_chk@plt+0x1fb4>
   13030:	add	r1, r7, #1
   13034:	mov	sl, #0
   13038:	mov	r9, #1
   1303c:	mov	r5, #48	; 0x30
   13040:	cmp	r1, lr
   13044:	bcs	1280c <__mempcpy_chk@plt+0x1730>
   13048:	ldrb	r1, [ip, r1]
   1304c:	sub	r1, r1, #48	; 0x30
   13050:	uxtb	r1, r1
   13054:	cmp	r1, #9
   13058:	bhi	1280c <__mempcpy_chk@plt+0x1730>
   1305c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13060:	cmp	r8, r1
   13064:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13068:	movcc	r1, #48	; 0x30
   1306c:	strbcc	r1, [r2, r8]
   13070:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13074:	add	r1, r0, #2
   13078:	add	r8, r0, #3
   1307c:	cmp	r1, r2
   13080:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13084:	movcc	r2, #48	; 0x30
   13088:	strbcc	r2, [r3, r1]
   1308c:	b	1280c <__mempcpy_chk@plt+0x1730>
   13090:	mov	r0, #48	; 0x30
   13094:	mov	r9, #1
   13098:	mov	sl, #0
   1309c:	b	12aa4 <__mempcpy_chk@plt+0x19c8>
   130a0:	mov	sl, #0
   130a4:	b	130e0 <__mempcpy_chk@plt+0x2004>
   130a8:	mov	sl, #0
   130ac:	cmp	lr, r6
   130b0:	bls	130e0 <__mempcpy_chk@plt+0x2004>
   130b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   130b8:	ldr	r6, [sp, #40]	; 0x28
   130bc:	ldr	r0, [sp, #36]	; 0x24
   130c0:	ldrb	r0, [r0, r6]
   130c4:	cmp	r0, #0
   130c8:	beq	130e8 <__mempcpy_chk@plt+0x200c>
   130cc:	add	r6, r6, #1
   130d0:	add	r0, r7, r6
   130d4:	cmp	r0, lr
   130d8:	bcc	130bc <__mempcpy_chk@plt+0x1fe0>
   130dc:	b	130e8 <__mempcpy_chk@plt+0x200c>
   130e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   130e4:	ldr	r6, [sp, #40]	; 0x28
   130e8:	mov	r1, r6
   130ec:	ldr	r4, [sp, #20]
   130f0:	ldr	r6, [sp, #76]	; 0x4c
   130f4:	b	129e8 <__mempcpy_chk@plt+0x190c>
   130f8:	mov	lr, r7
   130fc:	b	13104 <__mempcpy_chk@plt+0x2028>
   13100:	mvn	lr, #0
   13104:	ldr	r9, [fp, #-64]	; 0xffffffc0
   13108:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1310c:	eor	r0, r9, #2
   13110:	orr	r0, r0, r8
   13114:	clz	r0, r0
   13118:	lsr	r0, r0, #5
   1311c:	tst	r1, r0
   13120:	bne	1321c <__mempcpy_chk@plt+0x2140>
   13124:	mov	r0, r1
   13128:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1312c:	cmp	r9, #2
   13130:	movwne	r1, #1
   13134:	orr	r0, r0, r1
   13138:	tst	r0, #1
   1313c:	bne	1325c <__mempcpy_chk@plt+0x2180>
   13140:	ldr	r0, [sp, #52]	; 0x34
   13144:	ldr	r1, [sp, #68]	; 0x44
   13148:	str	lr, [sp, #80]	; 0x50
   1314c:	eor	r0, r0, #1
   13150:	tst	r0, #1
   13154:	bne	1325c <__mempcpy_chk@plt+0x2180>
   13158:	tst	r4, #1
   1315c:	bne	13224 <__mempcpy_chk@plt+0x2148>
   13160:	mov	r7, #0
   13164:	cmp	r1, #0
   13168:	beq	13254 <__mempcpy_chk@plt+0x2178>
   1316c:	ldr	r0, [sp, #84]	; 0x54
   13170:	mov	r3, #0
   13174:	cmp	r6, #0
   13178:	mov	r2, #0
   1317c:	mov	r4, r1
   13180:	str	r3, [fp, #-72]	; 0xffffffb8
   13184:	beq	122c0 <__mempcpy_chk@plt+0x11e4>
   13188:	b	1325c <__mempcpy_chk@plt+0x2180>
   1318c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13190:	b	131b8 <__mempcpy_chk@plt+0x20dc>
   13194:	ldr	ip, [fp, #-84]	; 0xffffffac
   13198:	mov	r2, #1
   1319c:	mov	lr, r4
   131a0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   131a4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   131a8:	b	131bc <__mempcpy_chk@plt+0x20e0>
   131ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   131b0:	mov	r7, #2
   131b4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   131b8:	ldr	r2, [sp, #84]	; 0x54
   131bc:	mov	r0, #0
   131c0:	ldr	r1, [fp, #12]
   131c4:	tst	r2, #1
   131c8:	mov	r2, r7
   131cc:	mov	r3, lr
   131d0:	str	r0, [sp, #8]
   131d4:	ldr	r0, [sp, #64]	; 0x40
   131d8:	movwne	r2, #4
   131dc:	cmp	r7, #2
   131e0:	movne	r2, r7
   131e4:	str	r2, [sp]
   131e8:	mov	r2, ip
   131ec:	bic	r1, r1, #2
   131f0:	str	r0, [sp, #12]
   131f4:	ldr	r0, [sp, #72]	; 0x48
   131f8:	str	r1, [sp, #4]
   131fc:	mov	r1, r6
   13200:	str	r0, [sp, #16]
   13204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13208:	bl	12248 <__mempcpy_chk@plt+0x116c>
   1320c:	mov	r8, r0
   13210:	mov	r0, r8
   13214:	sub	sp, fp, #28
   13218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1321c:	mov	r7, #2
   13220:	b	131b8 <__mempcpy_chk@plt+0x20dc>
   13224:	mov	r0, #5
   13228:	ldr	r2, [fp, #-84]	; 0xffffffac
   1322c:	ldr	r3, [sp, #80]	; 0x50
   13230:	str	r0, [sp]
   13234:	ldr	r0, [fp, #12]
   13238:	str	r0, [sp, #4]
   1323c:	ldr	r0, [fp, #16]
   13240:	str	r0, [sp, #8]
   13244:	ldr	r0, [sp, #64]	; 0x40
   13248:	str	r0, [sp, #12]
   1324c:	ldr	r0, [sp, #72]	; 0x48
   13250:	b	13200 <__mempcpy_chk@plt+0x2124>
   13254:	mov	r0, #0
   13258:	str	r0, [fp, #-72]	; 0xffffffb8
   1325c:	ldr	r1, [sp, #92]	; 0x5c
   13260:	cmp	r1, #0
   13264:	beq	132a4 <__mempcpy_chk@plt+0x21c8>
   13268:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1326c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13270:	tst	r0, #1
   13274:	bne	132a8 <__mempcpy_chk@plt+0x21cc>
   13278:	ldrb	r0, [r1]
   1327c:	cmp	r0, #0
   13280:	beq	132a8 <__mempcpy_chk@plt+0x21cc>
   13284:	add	r1, r1, #1
   13288:	cmp	r8, r6
   1328c:	strbcc	r0, [r2, r8]
   13290:	add	r8, r8, #1
   13294:	ldrb	r0, [r1], #1
   13298:	cmp	r0, #0
   1329c:	bne	13288 <__mempcpy_chk@plt+0x21ac>
   132a0:	b	132a8 <__mempcpy_chk@plt+0x21cc>
   132a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   132a8:	cmp	r8, r6
   132ac:	movcc	r0, #0
   132b0:	strbcc	r0, [r2, r8]
   132b4:	b	13210 <__mempcpy_chk@plt+0x2134>
   132b8:	mov	r2, #1
   132bc:	b	131a0 <__mempcpy_chk@plt+0x20c4>
   132c0:	mov	r7, #5
   132c4:	b	131b4 <__mempcpy_chk@plt+0x20d8>
   132c8:	bl	110ac <abort@plt>
   132cc:	mov	r3, r2
   132d0:	mov	r2, #0
   132d4:	b	132d8 <__mempcpy_chk@plt+0x21fc>
   132d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132dc:	add	fp, sp, #28
   132e0:	sub	sp, sp, #36	; 0x24
   132e4:	movw	r8, #24936	; 0x6168
   132e8:	cmp	r3, #0
   132ec:	mov	r4, r2
   132f0:	str	r2, [sp, #24]
   132f4:	mov	r5, r1
   132f8:	mov	r6, r0
   132fc:	str	r0, [sp, #20]
   13300:	movt	r8, #2
   13304:	movne	r8, r3
   13308:	bl	10fe0 <__errno_location@plt>
   1330c:	str	r0, [sp, #28]
   13310:	cmp	r4, #0
   13314:	add	sl, r8, #8
   13318:	ldm	r8, {r3, r9}
   1331c:	ldr	r7, [r0]
   13320:	ldr	r1, [r8, #40]	; 0x28
   13324:	ldr	r2, [r8, #44]	; 0x2c
   13328:	mov	r0, #0
   1332c:	orreq	r9, r9, #1
   13330:	str	r7, [sp, #32]
   13334:	mov	r7, r5
   13338:	stm	sp, {r3, r9, sl}
   1333c:	str	r1, [sp, #12]
   13340:	str	r2, [sp, #16]
   13344:	mov	r1, #0
   13348:	mov	r2, r6
   1334c:	mov	r3, r5
   13350:	bl	12248 <__mempcpy_chk@plt+0x116c>
   13354:	add	r4, r0, #1
   13358:	mov	r5, r0
   1335c:	mov	r0, r4
   13360:	bl	14364 <__mempcpy_chk@plt+0x3288>
   13364:	mov	r6, r0
   13368:	ldr	r0, [r8]
   1336c:	ldr	r2, [r8, #44]	; 0x2c
   13370:	ldr	r1, [r8, #40]	; 0x28
   13374:	mov	r3, r7
   13378:	stm	sp, {r0, r9, sl}
   1337c:	str	r2, [sp, #16]
   13380:	str	r1, [sp, #12]
   13384:	mov	r0, r6
   13388:	mov	r1, r4
   1338c:	ldr	r2, [sp, #20]
   13390:	bl	12248 <__mempcpy_chk@plt+0x116c>
   13394:	ldr	r0, [sp, #24]
   13398:	ldr	r1, [sp, #32]
   1339c:	ldr	r2, [sp, #28]
   133a0:	cmp	r0, #0
   133a4:	str	r1, [r2]
   133a8:	strne	r5, [r0]
   133ac:	mov	r0, r6
   133b0:	sub	sp, fp, #28
   133b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133bc:	add	fp, sp, #24
   133c0:	movw	r5, #24828	; 0x60fc
   133c4:	movw	r8, #24824	; 0x60f8
   133c8:	movt	r5, #2
   133cc:	movt	r8, #2
   133d0:	ldr	r0, [r5]
   133d4:	ldr	r4, [r8]
   133d8:	cmp	r0, #2
   133dc:	blt	13408 <__mempcpy_chk@plt+0x232c>
   133e0:	add	r7, r4, #12
   133e4:	mov	r6, #0
   133e8:	ldr	r0, [r7, r6, lsl #3]
   133ec:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   133f0:	ldr	r1, [r5]
   133f4:	add	r2, r6, #2
   133f8:	add	r0, r6, #1
   133fc:	mov	r6, r0
   13400:	cmp	r2, r1
   13404:	blt	133e8 <__mempcpy_chk@plt+0x230c>
   13408:	ldr	r0, [r4, #4]
   1340c:	movw	r7, #24984	; 0x6198
   13410:	movt	r7, #2
   13414:	cmp	r0, r7
   13418:	beq	13430 <__mempcpy_chk@plt+0x2354>
   1341c:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   13420:	movw	r0, #24832	; 0x6100
   13424:	mov	r6, #256	; 0x100
   13428:	movt	r0, #2
   1342c:	strd	r6, [r0]
   13430:	movw	r6, #24832	; 0x6100
   13434:	movt	r6, #2
   13438:	cmp	r4, r6
   1343c:	beq	1344c <__mempcpy_chk@plt+0x2370>
   13440:	mov	r0, r4
   13444:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   13448:	str	r6, [r8]
   1344c:	mov	r0, #1
   13450:	str	r0, [r5]
   13454:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13458:	movw	r3, #24936	; 0x6168
   1345c:	mvn	r2, #0
   13460:	movt	r3, #2
   13464:	b	13468 <__mempcpy_chk@plt+0x238c>
   13468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1346c:	add	fp, sp, #28
   13470:	sub	sp, sp, #44	; 0x2c
   13474:	mov	r7, r3
   13478:	str	r2, [sp, #36]	; 0x24
   1347c:	str	r1, [sp, #32]
   13480:	mov	r5, r0
   13484:	bl	10fe0 <__errno_location@plt>
   13488:	cmp	r5, #0
   1348c:	blt	135f8 <__mempcpy_chk@plt+0x251c>
   13490:	cmn	r5, #-2147483647	; 0x80000001
   13494:	beq	135f8 <__mempcpy_chk@plt+0x251c>
   13498:	movw	r8, #24828	; 0x60fc
   1349c:	movw	r4, #24824	; 0x60f8
   134a0:	str	r0, [sp, #28]
   134a4:	ldr	r0, [r0]
   134a8:	movt	r8, #2
   134ac:	movt	r4, #2
   134b0:	ldr	r1, [r8]
   134b4:	ldr	r6, [r4]
   134b8:	str	r0, [sp, #24]
   134bc:	cmp	r1, r5
   134c0:	ble	134cc <__mempcpy_chk@plt+0x23f0>
   134c4:	mov	sl, r6
   134c8:	b	13534 <__mempcpy_chk@plt+0x2458>
   134cc:	movw	r9, #24832	; 0x6100
   134d0:	mov	r0, #8
   134d4:	add	r2, r5, #1
   134d8:	str	r1, [fp, #-32]	; 0xffffffe0
   134dc:	mvn	r3, #-2147483648	; 0x80000000
   134e0:	movt	r9, #2
   134e4:	str	r0, [sp]
   134e8:	sub	r2, r2, r1
   134ec:	sub	r1, fp, #32
   134f0:	subs	r0, r6, r9
   134f4:	movne	r0, r6
   134f8:	bl	14494 <__mempcpy_chk@plt+0x33b8>
   134fc:	cmp	r6, r9
   13500:	mov	sl, r0
   13504:	str	r0, [r4]
   13508:	ldrdeq	r0, [r9]
   1350c:	stmeq	sl, {r0, r1}
   13510:	ldr	r1, [r8]
   13514:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13518:	add	r0, sl, r1, lsl #3
   1351c:	sub	r1, r2, r1
   13520:	lsl	r2, r1, #3
   13524:	mov	r1, #0
   13528:	bl	11004 <memset@plt>
   1352c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13530:	str	r0, [r8]
   13534:	mov	r9, sl
   13538:	ldr	r6, [r9, r5, lsl #3]!
   1353c:	ldr	r4, [r9, #4]!
   13540:	ldm	r7, {r0, r1}
   13544:	ldr	r2, [r7, #40]	; 0x28
   13548:	ldr	r3, [r7, #44]	; 0x2c
   1354c:	orr	r8, r1, #1
   13550:	add	r1, r7, #8
   13554:	stm	sp, {r0, r8}
   13558:	add	r0, sp, #8
   1355c:	str	r1, [sp, #20]
   13560:	stm	r0, {r1, r2, r3}
   13564:	mov	r0, r4
   13568:	mov	r1, r6
   1356c:	ldr	r2, [sp, #32]
   13570:	ldr	r3, [sp, #36]	; 0x24
   13574:	bl	12248 <__mempcpy_chk@plt+0x116c>
   13578:	cmp	r6, r0
   1357c:	bhi	135e0 <__mempcpy_chk@plt+0x2504>
   13580:	add	r6, r0, #1
   13584:	movw	r0, #24984	; 0x6198
   13588:	movt	r0, #2
   1358c:	str	r6, [sl, r5, lsl #3]
   13590:	cmp	r4, r0
   13594:	beq	135a0 <__mempcpy_chk@plt+0x24c4>
   13598:	mov	r0, r4
   1359c:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   135a0:	mov	r0, r6
   135a4:	bl	14364 <__mempcpy_chk@plt+0x3288>
   135a8:	str	r0, [r9]
   135ac:	mov	r4, r0
   135b0:	add	r3, sp, #8
   135b4:	ldr	r0, [r7]
   135b8:	ldr	r1, [r7, #40]	; 0x28
   135bc:	ldr	r2, [r7, #44]	; 0x2c
   135c0:	stm	sp, {r0, r8}
   135c4:	ldr	r0, [sp, #20]
   135c8:	stm	r3, {r0, r1, r2}
   135cc:	mov	r0, r4
   135d0:	mov	r1, r6
   135d4:	ldr	r2, [sp, #32]
   135d8:	ldr	r3, [sp, #36]	; 0x24
   135dc:	bl	12248 <__mempcpy_chk@plt+0x116c>
   135e0:	ldr	r0, [sp, #28]
   135e4:	ldr	r1, [sp, #24]
   135e8:	str	r1, [r0]
   135ec:	mov	r0, r4
   135f0:	sub	sp, fp, #28
   135f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f8:	bl	110ac <abort@plt>
   135fc:	movw	r3, #24936	; 0x6168
   13600:	movt	r3, #2
   13604:	b	13468 <__mempcpy_chk@plt+0x238c>
   13608:	movw	r3, #24936	; 0x6168
   1360c:	mov	r1, r0
   13610:	mov	r0, #0
   13614:	mvn	r2, #0
   13618:	movt	r3, #2
   1361c:	b	13468 <__mempcpy_chk@plt+0x238c>
   13620:	movw	r3, #24936	; 0x6168
   13624:	mov	r2, r1
   13628:	mov	r1, r0
   1362c:	mov	r0, #0
   13630:	movt	r3, #2
   13634:	b	13468 <__mempcpy_chk@plt+0x238c>
   13638:	push	{fp, lr}
   1363c:	mov	fp, sp
   13640:	sub	sp, sp, #48	; 0x30
   13644:	vmov.i32	q8, #0	; 0x00000000
   13648:	mov	ip, #32
   1364c:	mov	r3, sp
   13650:	mov	lr, r2
   13654:	cmp	r1, #10
   13658:	add	r2, r3, #16
   1365c:	vst1.64	{d16-d17}, [r3], ip
   13660:	vst1.64	{d16-d17}, [r3]
   13664:	vst1.64	{d16-d17}, [r2]
   13668:	beq	13688 <__mempcpy_chk@plt+0x25ac>
   1366c:	str	r1, [sp]
   13670:	mov	r3, sp
   13674:	mov	r1, lr
   13678:	mvn	r2, #0
   1367c:	bl	13468 <__mempcpy_chk@plt+0x238c>
   13680:	mov	sp, fp
   13684:	pop	{fp, pc}
   13688:	bl	110ac <abort@plt>
   1368c:	push	{r4, sl, fp, lr}
   13690:	add	fp, sp, #8
   13694:	sub	sp, sp, #48	; 0x30
   13698:	mov	ip, r3
   1369c:	mov	r3, sp
   136a0:	vmov.i32	q8, #0	; 0x00000000
   136a4:	mov	lr, #32
   136a8:	cmp	r1, #10
   136ac:	add	r4, r3, #16
   136b0:	vst1.64	{d16-d17}, [r3], lr
   136b4:	vst1.64	{d16-d17}, [r3]
   136b8:	vst1.64	{d16-d17}, [r4]
   136bc:	beq	136dc <__mempcpy_chk@plt+0x2600>
   136c0:	str	r1, [sp]
   136c4:	mov	r1, r2
   136c8:	mov	r3, sp
   136cc:	mov	r2, ip
   136d0:	bl	13468 <__mempcpy_chk@plt+0x238c>
   136d4:	sub	sp, fp, #8
   136d8:	pop	{r4, sl, fp, pc}
   136dc:	bl	110ac <abort@plt>
   136e0:	mov	r2, r1
   136e4:	mov	r1, r0
   136e8:	mov	r0, #0
   136ec:	b	13638 <__mempcpy_chk@plt+0x255c>
   136f0:	mov	r3, r2
   136f4:	mov	r2, r1
   136f8:	mov	r1, r0
   136fc:	mov	r0, #0
   13700:	b	1368c <__mempcpy_chk@plt+0x25b0>
   13704:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13708:	add	fp, sp, #24
   1370c:	sub	sp, sp, #48	; 0x30
   13710:	movw	r8, #24936	; 0x6168
   13714:	mov	lr, r0
   13718:	mov	r3, sp
   1371c:	mov	ip, r1
   13720:	movt	r8, #2
   13724:	mov	r1, r3
   13728:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   1372c:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13730:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13734:	stm	r1, {r0, r4, r5, r6, r7, r9}
   13738:	ubfx	r0, r2, #5, #3
   1373c:	and	r2, r2, #31
   13740:	mov	r4, #1
   13744:	add	r0, r3, r0, lsl #2
   13748:	ldr	r1, [r0, #8]
   1374c:	bic	r4, r4, r1, lsr r2
   13750:	eor	r1, r1, r4, lsl r2
   13754:	mov	r2, ip
   13758:	str	r1, [r0, #8]
   1375c:	mov	r0, #0
   13760:	mov	r1, lr
   13764:	bl	13468 <__mempcpy_chk@plt+0x238c>
   13768:	sub	sp, fp, #24
   1376c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13770:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13774:	add	fp, sp, #24
   13778:	sub	sp, sp, #48	; 0x30
   1377c:	movw	lr, #24936	; 0x6168
   13780:	mov	ip, r0
   13784:	mov	r3, sp
   13788:	movt	lr, #2
   1378c:	mov	r2, r3
   13790:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13794:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13798:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   1379c:	stm	r2, {r0, r4, r5, r6, r7, r8}
   137a0:	ubfx	r0, r1, #5, #3
   137a4:	and	r1, r1, #31
   137a8:	mov	r7, #1
   137ac:	add	r0, r3, r0, lsl #2
   137b0:	ldr	r2, [r0, #8]
   137b4:	bic	r7, r7, r2, lsr r1
   137b8:	eor	r1, r2, r7, lsl r1
   137bc:	mvn	r2, #0
   137c0:	str	r1, [r0, #8]
   137c4:	mov	r0, #0
   137c8:	mov	r1, ip
   137cc:	bl	13468 <__mempcpy_chk@plt+0x238c>
   137d0:	sub	sp, fp, #24
   137d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137d8:	push	{r4, r5, r6, r7, fp, lr}
   137dc:	add	fp, sp, #16
   137e0:	sub	sp, sp, #48	; 0x30
   137e4:	movw	lr, #24936	; 0x6168
   137e8:	mov	ip, r0
   137ec:	mov	r3, sp
   137f0:	movt	lr, #2
   137f4:	mov	r2, r3
   137f8:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   137fc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13800:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13804:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13808:	mov	r1, ip
   1380c:	mvn	r2, #0
   13810:	ldr	r0, [sp, #12]
   13814:	orr	r0, r0, #67108864	; 0x4000000
   13818:	str	r0, [sp, #12]
   1381c:	mov	r0, #0
   13820:	bl	13468 <__mempcpy_chk@plt+0x238c>
   13824:	sub	sp, fp, #16
   13828:	pop	{r4, r5, r6, r7, fp, pc}
   1382c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13830:	add	fp, sp, #24
   13834:	sub	sp, sp, #48	; 0x30
   13838:	movw	r8, #24936	; 0x6168
   1383c:	mov	ip, r1
   13840:	mov	lr, r0
   13844:	mov	r3, sp
   13848:	movt	r8, #2
   1384c:	mov	r2, r3
   13850:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13854:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13858:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1385c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13860:	mov	r1, lr
   13864:	mov	r2, ip
   13868:	ldr	r0, [sp, #12]
   1386c:	orr	r0, r0, #67108864	; 0x4000000
   13870:	str	r0, [sp, #12]
   13874:	mov	r0, #0
   13878:	bl	13468 <__mempcpy_chk@plt+0x238c>
   1387c:	sub	sp, fp, #24
   13880:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13884:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13888:	add	fp, sp, #24
   1388c:	sub	sp, sp, #96	; 0x60
   13890:	mov	lr, sp
   13894:	vmov.i32	q8, #0	; 0x00000000
   13898:	mov	ip, r2
   1389c:	cmp	r1, #10
   138a0:	add	r3, lr, #16
   138a4:	mov	r2, lr
   138a8:	vst1.64	{d16-d17}, [r3]
   138ac:	mov	r3, #28
   138b0:	vst1.64	{d16-d17}, [r2], r3
   138b4:	vst1.32	{d16-d17}, [r2]
   138b8:	beq	138f8 <__mempcpy_chk@plt+0x281c>
   138bc:	str	r1, [sp, #48]	; 0x30
   138c0:	add	r3, sp, #48	; 0x30
   138c4:	ldm	lr!, {r2, r4, r5, r6, r7}
   138c8:	add	r1, r3, #4
   138cc:	stmia	r1!, {r2, r4, r5, r6, r7}
   138d0:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   138d4:	stm	r1, {r2, r4, r5, r6, r7, r8}
   138d8:	mvn	r2, #0
   138dc:	ldr	r1, [sp, #60]	; 0x3c
   138e0:	orr	r1, r1, #67108864	; 0x4000000
   138e4:	str	r1, [sp, #60]	; 0x3c
   138e8:	mov	r1, ip
   138ec:	bl	13468 <__mempcpy_chk@plt+0x238c>
   138f0:	sub	sp, fp, #24
   138f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   138f8:	bl	110ac <abort@plt>
   138fc:	push	{fp, lr}
   13900:	mov	fp, sp
   13904:	sub	sp, sp, #8
   13908:	mvn	ip, #0
   1390c:	str	ip, [sp]
   13910:	bl	1391c <__mempcpy_chk@plt+0x2840>
   13914:	mov	sp, fp
   13918:	pop	{fp, pc}
   1391c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13920:	add	fp, sp, #24
   13924:	sub	sp, sp, #48	; 0x30
   13928:	movw	ip, #24936	; 0x6168
   1392c:	mov	lr, r3
   13930:	mov	r3, sp
   13934:	cmp	r1, #0
   13938:	movt	ip, #2
   1393c:	cmpne	r2, #0
   13940:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13944:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13948:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   1394c:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13950:	mov	r3, #10
   13954:	str	r3, [sp]
   13958:	bne	13960 <__mempcpy_chk@plt+0x2884>
   1395c:	bl	110ac <abort@plt>
   13960:	ldr	ip, [fp, #8]
   13964:	str	r2, [sp, #44]	; 0x2c
   13968:	str	r1, [sp, #40]	; 0x28
   1396c:	mov	r3, sp
   13970:	mov	r1, lr
   13974:	mov	r2, ip
   13978:	bl	13468 <__mempcpy_chk@plt+0x238c>
   1397c:	sub	sp, fp, #24
   13980:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	sub	sp, sp, #8
   13990:	mov	r3, r2
   13994:	mov	r2, r1
   13998:	mov	r1, r0
   1399c:	mvn	r0, #0
   139a0:	str	r0, [sp]
   139a4:	mov	r0, #0
   139a8:	bl	1391c <__mempcpy_chk@plt+0x2840>
   139ac:	mov	sp, fp
   139b0:	pop	{fp, pc}
   139b4:	push	{fp, lr}
   139b8:	mov	fp, sp
   139bc:	sub	sp, sp, #8
   139c0:	mov	ip, r2
   139c4:	mov	r2, r1
   139c8:	mov	r1, r0
   139cc:	str	r3, [sp]
   139d0:	mov	r0, #0
   139d4:	mov	r3, ip
   139d8:	bl	1391c <__mempcpy_chk@plt+0x2840>
   139dc:	mov	sp, fp
   139e0:	pop	{fp, pc}
   139e4:	movw	r3, #24840	; 0x6108
   139e8:	movt	r3, #2
   139ec:	b	13468 <__mempcpy_chk@plt+0x238c>
   139f0:	movw	r3, #24840	; 0x6108
   139f4:	mov	r2, r1
   139f8:	mov	r1, r0
   139fc:	mov	r0, #0
   13a00:	movt	r3, #2
   13a04:	b	13468 <__mempcpy_chk@plt+0x238c>
   13a08:	movw	r3, #24840	; 0x6108
   13a0c:	mvn	r2, #0
   13a10:	movt	r3, #2
   13a14:	b	13468 <__mempcpy_chk@plt+0x238c>
   13a18:	movw	r3, #24840	; 0x6108
   13a1c:	mov	r1, r0
   13a20:	mov	r0, #0
   13a24:	mvn	r2, #0
   13a28:	movt	r3, #2
   13a2c:	b	13468 <__mempcpy_chk@plt+0x238c>
   13a30:	push	{r4, r5, fp, lr}
   13a34:	add	fp, sp, #8
   13a38:	mov	r5, r0
   13a3c:	mov	r4, r1
   13a40:	mov	r0, #0
   13a44:	mov	r2, #5
   13a48:	mov	r1, r5
   13a4c:	bl	10ee4 <dcgettext@plt>
   13a50:	cmp	r0, r5
   13a54:	popne	{r4, r5, fp, pc}
   13a58:	bl	1489c <__mempcpy_chk@plt+0x37c0>
   13a5c:	ldrb	r1, [r0]
   13a60:	and	r1, r1, #223	; 0xdf
   13a64:	cmp	r1, #71	; 0x47
   13a68:	beq	13ad0 <__mempcpy_chk@plt+0x29f4>
   13a6c:	cmp	r1, #85	; 0x55
   13a70:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13a74:	ldrb	r1, [r0, #1]
   13a78:	and	r1, r1, #223	; 0xdf
   13a7c:	cmp	r1, #84	; 0x54
   13a80:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13a84:	ldrb	r1, [r0, #2]
   13a88:	and	r1, r1, #223	; 0xdf
   13a8c:	cmp	r1, #70	; 0x46
   13a90:	ldrbeq	r1, [r0, #3]
   13a94:	cmpeq	r1, #45	; 0x2d
   13a98:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13a9c:	ldrb	r1, [r0, #4]
   13aa0:	cmp	r1, #56	; 0x38
   13aa4:	ldrbeq	r0, [r0, #5]
   13aa8:	cmpeq	r0, #0
   13aac:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13ab0:	ldrb	r1, [r5]
   13ab4:	movw	r2, #22142	; 0x567e
   13ab8:	movw	r0, #22146	; 0x5682
   13abc:	movt	r2, #1
   13ac0:	movt	r0, #1
   13ac4:	cmp	r1, #96	; 0x60
   13ac8:	moveq	r0, r2
   13acc:	pop	{r4, r5, fp, pc}
   13ad0:	ldrb	r1, [r0, #1]
   13ad4:	and	r1, r1, #223	; 0xdf
   13ad8:	cmp	r1, #66	; 0x42
   13adc:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13ae0:	ldrb	r1, [r0, #2]
   13ae4:	cmp	r1, #49	; 0x31
   13ae8:	ldrbeq	r1, [r0, #3]
   13aec:	cmpeq	r1, #56	; 0x38
   13af0:	beq	13b10 <__mempcpy_chk@plt+0x2a34>
   13af4:	movw	r1, #22136	; 0x5678
   13af8:	movw	r0, #22140	; 0x567c
   13afc:	cmp	r4, #9
   13b00:	movt	r1, #1
   13b04:	movt	r0, #1
   13b08:	moveq	r0, r1
   13b0c:	pop	{r4, r5, fp, pc}
   13b10:	ldrb	r1, [r0, #4]
   13b14:	cmp	r1, #48	; 0x30
   13b18:	ldrbeq	r1, [r0, #5]
   13b1c:	cmpeq	r1, #51	; 0x33
   13b20:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13b24:	ldrb	r1, [r0, #6]
   13b28:	cmp	r1, #48	; 0x30
   13b2c:	ldrbeq	r0, [r0, #7]
   13b30:	cmpeq	r0, #0
   13b34:	bne	13af4 <__mempcpy_chk@plt+0x2a18>
   13b38:	ldrb	r1, [r5]
   13b3c:	movw	r2, #22150	; 0x5686
   13b40:	movw	r0, #22154	; 0x568a
   13b44:	movt	r2, #1
   13b48:	movt	r0, #1
   13b4c:	b	13ac4 <__mempcpy_chk@plt+0x29e8>
   13b50:	push	{fp, lr}
   13b54:	mov	fp, sp
   13b58:	sub	sp, sp, #8
   13b5c:	str	r2, [sp, #4]
   13b60:	ldr	r2, [fp, #8]
   13b64:	str	r2, [sp]
   13b68:	movw	r2, #22244	; 0x56e4
   13b6c:	movt	r2, #1
   13b70:	ldr	r3, [r2, r3, lsl #2]
   13b74:	add	r2, sp, #4
   13b78:	bl	13be8 <__mempcpy_chk@plt+0x2b0c>
   13b7c:	mov	sp, fp
   13b80:	pop	{fp, pc}
   13b84:	ldr	r1, [r1]
   13b88:	mov	r2, #384	; 0x180
   13b8c:	bic	r1, r1, #195	; 0xc3
   13b90:	orr	r1, r1, #194	; 0xc2
   13b94:	b	10f5c <open64@plt>
   13b98:	mov	r1, #448	; 0x1c0
   13b9c:	b	10ff8 <mkdir@plt>
   13ba0:	push	{r4, sl, fp, lr}
   13ba4:	add	fp, sp, #8
   13ba8:	sub	sp, sp, #104	; 0x68
   13bac:	mov	r1, sp
   13bb0:	bl	14c58 <__mempcpy_chk@plt+0x3b7c>
   13bb4:	mov	r4, r0
   13bb8:	bl	10fe0 <__errno_location@plt>
   13bbc:	cmp	r4, #0
   13bc0:	ldrne	r1, [r0]
   13bc4:	cmpne	r1, #75	; 0x4b
   13bc8:	bne	13bd4 <__mempcpy_chk@plt+0x2af8>
   13bcc:	mov	r1, #17
   13bd0:	str	r1, [r0]
   13bd4:	ldr	r0, [r0]
   13bd8:	subs	r0, r0, #2
   13bdc:	mvnne	r0, #0
   13be0:	sub	sp, fp, #8
   13be4:	pop	{r4, sl, fp, pc}
   13be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bec:	add	fp, sp, #28
   13bf0:	sub	sp, sp, #60	; 0x3c
   13bf4:	mov	r7, r3
   13bf8:	mov	r9, r2
   13bfc:	mov	r4, r1
   13c00:	mov	r6, r0
   13c04:	bl	10fe0 <__errno_location@plt>
   13c08:	str	r0, [sp, #20]
   13c0c:	ldr	sl, [r0]
   13c10:	mov	r0, #0
   13c14:	str	r0, [sp, #36]	; 0x24
   13c18:	add	r0, sp, #32
   13c1c:	lsr	r0, r0, #3
   13c20:	str	r0, [sp, #32]
   13c24:	ldr	r0, [fp, #8]
   13c28:	add	r5, r0, r4
   13c2c:	mov	r0, r6
   13c30:	bl	10fd4 <strlen@plt>
   13c34:	mvn	r8, #0
   13c38:	mov	r4, #22
   13c3c:	cmp	r0, r5
   13c40:	bcc	13e08 <__mempcpy_chk@plt+0x2d2c>
   13c44:	sub	r0, r0, r5
   13c48:	movw	r1, #21112	; 0x5278
   13c4c:	add	r5, r6, r0
   13c50:	movt	r1, #1
   13c54:	mov	r0, r5
   13c58:	bl	110d0 <strspn@plt>
   13c5c:	ldr	r1, [fp, #8]
   13c60:	cmp	r0, r1
   13c64:	bcc	13e08 <__mempcpy_chk@plt+0x2d2c>
   13c68:	movw	r0, #15264	; 0x3ba0
   13c6c:	movw	r4, #22256	; 0x56f0
   13c70:	str	r6, [sp, #8]
   13c74:	movw	r6, #45309	; 0xb0fd
   13c78:	str	sl, [sp, #4]
   13c7c:	str	r5, [sp, #28]
   13c80:	mov	sl, #0
   13c84:	mov	r2, #0
   13c88:	str	r7, [sp, #16]
   13c8c:	str	r9, [sp, #12]
   13c90:	movt	r0, #1
   13c94:	movt	r6, #34736	; 0x87b0
   13c98:	movt	r4, #1
   13c9c:	sub	r0, r7, r0
   13ca0:	clz	r0, r0
   13ca4:	lsr	r5, r0, #5
   13ca8:	cmp	r1, #0
   13cac:	str	r2, [sp, #24]
   13cb0:	beq	13dac <__mempcpy_chk@plt+0x2cd0>
   13cb4:	mov	r7, #0
   13cb8:	ldr	r8, [sp, #32]
   13cbc:	ldr	r9, [sp, #36]	; 0x24
   13cc0:	cmp	sl, #0
   13cc4:	bne	13d68 <__mempcpy_chk@plt+0x2c8c>
   13cc8:	movw	r4, #39131	; 0x98db
   13ccc:	sub	sl, fp, #40	; 0x28
   13cd0:	movt	r4, #62617	; 0xf499
   13cd4:	tst	r5, #1
   13cd8:	beq	13d00 <__mempcpy_chk@plt+0x2c24>
   13cdc:	mov	r0, sl
   13ce0:	mov	r1, #8
   13ce4:	mov	r2, #1
   13ce8:	bl	11088 <getrandom@plt>
   13cec:	cmp	r0, #8
   13cf0:	bne	13d00 <__mempcpy_chk@plt+0x2c24>
   13cf4:	ldr	r8, [fp, #-40]	; 0xffffffd8
   13cf8:	ldr	r9, [fp, #-36]	; 0xffffffdc
   13cfc:	b	13d3c <__mempcpy_chk@plt+0x2c60>
   13d00:	mov	r0, #1
   13d04:	add	r1, sp, #40	; 0x28
   13d08:	bl	10ea8 <clock_gettime@plt>
   13d0c:	ldr	r0, [sp, #44]	; 0x2c
   13d10:	movw	r5, #12006	; 0x2ee6
   13d14:	movt	r5, #10171	; 0x27bb
   13d18:	eor	r1, r8, r0
   13d1c:	eor	r0, r9, r0, asr #31
   13d20:	umull	r2, r3, r1, r6
   13d24:	mul	r0, r0, r6
   13d28:	mla	r1, r1, r5, r3
   13d2c:	movw	r3, #62253	; 0xf32d
   13d30:	movt	r3, #46340	; 0xb504
   13d34:	adds	r8, r2, r3
   13d38:	adc	r9, r1, r0
   13d3c:	movw	r0, #21503	; 0x53ff
   13d40:	mov	r5, #1
   13d44:	str	r8, [sp, #32]
   13d48:	str	r9, [sp, #36]	; 0x24
   13d4c:	movt	r0, #2727	; 0xaa7
   13d50:	subs	r0, r0, r8
   13d54:	sbcs	r0, r4, r9
   13d58:	bcc	13cd4 <__mempcpy_chk@plt+0x2bf8>
   13d5c:	movw	r4, #22256	; 0x56f0
   13d60:	mov	sl, #10
   13d64:	movt	r4, #1
   13d68:	mov	r0, r8
   13d6c:	mov	r1, r9
   13d70:	mov	r2, #62	; 0x3e
   13d74:	mov	r3, #0
   13d78:	bl	14a68 <__mempcpy_chk@plt+0x398c>
   13d7c:	rsb	r2, r0, r0, lsl #5
   13d80:	ldr	r3, [sp, #28]
   13d84:	sub	sl, sl, #1
   13d88:	sub	r2, r8, r2, lsl #1
   13d8c:	ldrb	r2, [r4, r2]
   13d90:	strb	r2, [r3, r7]
   13d94:	str	r0, [sp, #32]
   13d98:	ldr	r0, [fp, #8]
   13d9c:	add	r7, r7, #1
   13da0:	str	r1, [sp, #36]	; 0x24
   13da4:	cmp	r7, r0
   13da8:	bne	13cb8 <__mempcpy_chk@plt+0x2bdc>
   13dac:	ldr	r9, [sp, #12]
   13db0:	ldr	r0, [sp, #8]
   13db4:	ldr	r7, [sp, #16]
   13db8:	mov	r1, r9
   13dbc:	blx	r7
   13dc0:	cmn	r0, #1
   13dc4:	bgt	13e00 <__mempcpy_chk@plt+0x2d24>
   13dc8:	ldr	r0, [sp, #20]
   13dcc:	ldr	r0, [r0]
   13dd0:	cmp	r0, #17
   13dd4:	bne	13e1c <__mempcpy_chk@plt+0x2d40>
   13dd8:	ldr	r2, [sp, #24]
   13ddc:	ldr	r1, [fp, #8]
   13de0:	movw	r0, #41719	; 0xa2f7
   13de4:	movt	r0, #3
   13de8:	add	r2, r2, #1
   13dec:	cmp	r2, r0
   13df0:	bls	13ca8 <__mempcpy_chk@plt+0x2bcc>
   13df4:	mvn	r8, #0
   13df8:	mov	r4, #17
   13dfc:	b	13e08 <__mempcpy_chk@plt+0x2d2c>
   13e00:	ldr	r4, [sp, #4]
   13e04:	mov	r8, r0
   13e08:	ldr	r0, [sp, #20]
   13e0c:	str	r4, [r0]
   13e10:	mov	r0, r8
   13e14:	sub	sp, fp, #28
   13e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e1c:	mvn	r8, #0
   13e20:	b	13e10 <__mempcpy_chk@plt+0x2d34>
   13e24:	push	{fp, lr}
   13e28:	mov	fp, sp
   13e2c:	sub	sp, sp, #8
   13e30:	str	r2, [sp, #4]
   13e34:	mov	r2, #6
   13e38:	str	r2, [sp]
   13e3c:	movw	r2, #22244	; 0x56e4
   13e40:	movt	r2, #1
   13e44:	ldr	r3, [r2, r3, lsl #2]
   13e48:	add	r2, sp, #4
   13e4c:	bl	13be8 <__mempcpy_chk@plt+0x2b0c>
   13e50:	mov	sp, fp
   13e54:	pop	{fp, pc}
   13e58:	push	{fp, lr}
   13e5c:	mov	fp, sp
   13e60:	sub	sp, sp, #8
   13e64:	mov	ip, #6
   13e68:	str	ip, [sp]
   13e6c:	bl	13be8 <__mempcpy_chk@plt+0x2b0c>
   13e70:	mov	sp, fp
   13e74:	pop	{fp, pc}
   13e78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e7c:	add	fp, sp, #24
   13e80:	sub	sp, sp, #32
   13e84:	ldr	r6, [fp, #12]
   13e88:	ldr	r7, [fp, #8]
   13e8c:	mov	r4, r2
   13e90:	mov	r8, r0
   13e94:	cmp	r1, #0
   13e98:	beq	13ec0 <__mempcpy_chk@plt+0x2de4>
   13e9c:	movw	r2, #22319	; 0x572f
   13ea0:	mov	r5, r1
   13ea4:	str	r3, [sp, #4]
   13ea8:	str	r4, [sp]
   13eac:	mov	r0, r8
   13eb0:	mov	r1, #1
   13eb4:	movt	r2, #1
   13eb8:	mov	r3, r5
   13ebc:	b	13ed8 <__mempcpy_chk@plt+0x2dfc>
   13ec0:	movw	r2, #22331	; 0x573b
   13ec4:	str	r3, [sp]
   13ec8:	mov	r0, r8
   13ecc:	mov	r1, #1
   13ed0:	mov	r3, r4
   13ed4:	movt	r2, #1
   13ed8:	bl	11028 <__fprintf_chk@plt>
   13edc:	movw	r1, #22338	; 0x5742
   13ee0:	mov	r0, #0
   13ee4:	mov	r2, #5
   13ee8:	movt	r1, #1
   13eec:	bl	10ee4 <dcgettext@plt>
   13ef0:	movw	r2, #23056	; 0x5a10
   13ef4:	mov	r3, r0
   13ef8:	movw	r0, #2022	; 0x7e6
   13efc:	mov	r1, #1
   13f00:	str	r0, [sp]
   13f04:	movt	r2, #1
   13f08:	mov	r0, r8
   13f0c:	bl	11028 <__fprintf_chk@plt>
   13f10:	movw	r4, #21714	; 0x54d2
   13f14:	mov	r1, r8
   13f18:	movt	r4, #1
   13f1c:	mov	r0, r4
   13f20:	bl	10e6c <fputs_unlocked@plt>
   13f24:	movw	r1, #22342	; 0x5746
   13f28:	mov	r0, #0
   13f2c:	mov	r2, #5
   13f30:	movt	r1, #1
   13f34:	bl	10ee4 <dcgettext@plt>
   13f38:	movw	r3, #22513	; 0x57f1
   13f3c:	mov	r2, r0
   13f40:	mov	r0, r8
   13f44:	mov	r1, #1
   13f48:	movt	r3, #1
   13f4c:	bl	11028 <__fprintf_chk@plt>
   13f50:	mov	r0, r4
   13f54:	mov	r1, r8
   13f58:	bl	10e6c <fputs_unlocked@plt>
   13f5c:	cmp	r6, #9
   13f60:	bhi	13fc4 <__mempcpy_chk@plt+0x2ee8>
   13f64:	add	r0, pc, #0
   13f68:	ldr	pc, [r0, r6, lsl #2]
   13f6c:	muleq	r1, ip, r1
   13f70:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13f74:	ldrdeq	r3, [r1], -r0
   13f78:	strdeq	r3, [r1], -r8
   13f7c:	andeq	r4, r1, r0, lsr #32
   13f80:	andeq	r4, r1, r8, asr #32
   13f84:	andeq	r4, r1, r0, ror r0
   13f88:	andeq	r4, r1, r8, lsr #1
   13f8c:	andeq	r4, r1, r8, asr #2
   13f90:	strdeq	r4, [r1], -r0
   13f94:	movw	r1, #22547	; 0x5813
   13f98:	mov	r0, #0
   13f9c:	mov	r2, #5
   13fa0:	movt	r1, #1
   13fa4:	bl	10ee4 <dcgettext@plt>
   13fa8:	ldr	r3, [r7]
   13fac:	mov	r2, r0
   13fb0:	mov	r0, r8
   13fb4:	mov	r1, #1
   13fb8:	sub	sp, fp, #24
   13fbc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fc0:	b	11028 <__fprintf_chk@plt>
   13fc4:	movw	r1, #22866	; 0x5952
   13fc8:	movt	r1, #1
   13fcc:	b	140f8 <__mempcpy_chk@plt+0x301c>
   13fd0:	movw	r1, #22563	; 0x5823
   13fd4:	mov	r0, #0
   13fd8:	mov	r2, #5
   13fdc:	movt	r1, #1
   13fe0:	bl	10ee4 <dcgettext@plt>
   13fe4:	mov	r2, r0
   13fe8:	ldr	r3, [r7]
   13fec:	ldr	r0, [r7, #4]
   13ff0:	str	r0, [sp]
   13ff4:	b	140e4 <__mempcpy_chk@plt+0x3008>
   13ff8:	movw	r1, #22586	; 0x583a
   13ffc:	mov	r0, #0
   14000:	mov	r2, #5
   14004:	movt	r1, #1
   14008:	bl	10ee4 <dcgettext@plt>
   1400c:	ldr	r3, [r7]
   14010:	mov	r2, r0
   14014:	ldmib	r7, {r0, r1}
   14018:	stm	sp, {r0, r1}
   1401c:	b	140e4 <__mempcpy_chk@plt+0x3008>
   14020:	movw	r1, #22614	; 0x5856
   14024:	mov	r0, #0
   14028:	mov	r2, #5
   1402c:	movt	r1, #1
   14030:	bl	10ee4 <dcgettext@plt>
   14034:	ldr	r3, [r7]
   14038:	mov	r2, r0
   1403c:	ldmib	r7, {r0, r1, r7}
   14040:	stm	sp, {r0, r1, r7}
   14044:	b	140e4 <__mempcpy_chk@plt+0x3008>
   14048:	movw	r1, #22646	; 0x5876
   1404c:	mov	r0, #0
   14050:	mov	r2, #5
   14054:	movt	r1, #1
   14058:	bl	10ee4 <dcgettext@plt>
   1405c:	ldr	r3, [r7]
   14060:	mov	r2, r0
   14064:	ldmib	r7, {r0, r1, r6, r7}
   14068:	stm	sp, {r0, r1, r6, r7}
   1406c:	b	140e4 <__mempcpy_chk@plt+0x3008>
   14070:	movw	r1, #22682	; 0x589a
   14074:	mov	r0, #0
   14078:	mov	r2, #5
   1407c:	movt	r1, #1
   14080:	bl	10ee4 <dcgettext@plt>
   14084:	ldr	r3, [r7]
   14088:	mov	r2, r0
   1408c:	ldmib	r7, {r0, r1, r6}
   14090:	ldr	r5, [r7, #16]
   14094:	ldr	r7, [r7, #20]
   14098:	stm	sp, {r0, r1, r6}
   1409c:	str	r5, [sp, #12]
   140a0:	str	r7, [sp, #16]
   140a4:	b	140e4 <__mempcpy_chk@plt+0x3008>
   140a8:	movw	r1, #22722	; 0x58c2
   140ac:	mov	r0, #0
   140b0:	mov	r2, #5
   140b4:	movt	r1, #1
   140b8:	bl	10ee4 <dcgettext@plt>
   140bc:	ldr	r3, [r7]
   140c0:	mov	r2, r0
   140c4:	ldmib	r7, {r0, r1, r6}
   140c8:	ldr	r5, [r7, #16]
   140cc:	ldr	r4, [r7, #20]
   140d0:	ldr	r7, [r7, #24]
   140d4:	stm	sp, {r0, r1, r6}
   140d8:	str	r5, [sp, #12]
   140dc:	str	r4, [sp, #16]
   140e0:	str	r7, [sp, #20]
   140e4:	mov	r0, r8
   140e8:	mov	r1, #1
   140ec:	b	14198 <__mempcpy_chk@plt+0x30bc>
   140f0:	movw	r1, #22814	; 0x591e
   140f4:	movt	r1, #1
   140f8:	mov	r0, #0
   140fc:	mov	r2, #5
   14100:	bl	10ee4 <dcgettext@plt>
   14104:	mov	ip, r0
   14108:	ldr	r3, [r7]
   1410c:	ldr	r0, [r7, #4]
   14110:	ldr	r1, [r7, #8]
   14114:	ldr	r6, [r7, #12]
   14118:	ldr	r5, [r7, #16]
   1411c:	ldr	r4, [r7, #20]
   14120:	ldr	r2, [r7, #24]
   14124:	ldr	lr, [r7, #28]
   14128:	ldr	r7, [r7, #32]
   1412c:	stm	sp, {r0, r1, r6}
   14130:	str	r5, [sp, #12]
   14134:	str	r4, [sp, #16]
   14138:	str	r2, [sp, #20]
   1413c:	str	lr, [sp, #24]
   14140:	str	r7, [sp, #28]
   14144:	b	1418c <__mempcpy_chk@plt+0x30b0>
   14148:	movw	r1, #22766	; 0x58ee
   1414c:	mov	r0, #0
   14150:	mov	r2, #5
   14154:	movt	r1, #1
   14158:	bl	10ee4 <dcgettext@plt>
   1415c:	mov	ip, r0
   14160:	ldr	r3, [r7]
   14164:	ldmib	r7, {r0, r1, r6}
   14168:	ldr	r5, [r7, #16]
   1416c:	ldr	r4, [r7, #20]
   14170:	ldr	r2, [r7, #24]
   14174:	ldr	r7, [r7, #28]
   14178:	stm	sp, {r0, r1, r6}
   1417c:	str	r5, [sp, #12]
   14180:	str	r4, [sp, #16]
   14184:	str	r2, [sp, #20]
   14188:	str	r7, [sp, #24]
   1418c:	mov	r0, r8
   14190:	mov	r1, #1
   14194:	mov	r2, ip
   14198:	bl	11028 <__fprintf_chk@plt>
   1419c:	sub	sp, fp, #24
   141a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141a4:	push	{r4, sl, fp, lr}
   141a8:	add	fp, sp, #8
   141ac:	sub	sp, sp, #8
   141b0:	ldr	ip, [fp, #8]
   141b4:	mov	lr, #0
   141b8:	ldr	r4, [ip, lr, lsl #2]
   141bc:	add	lr, lr, #1
   141c0:	cmp	r4, #0
   141c4:	bne	141b8 <__mempcpy_chk@plt+0x30dc>
   141c8:	sub	r4, lr, #1
   141cc:	str	ip, [sp]
   141d0:	str	r4, [sp, #4]
   141d4:	bl	13e78 <__mempcpy_chk@plt+0x2d9c>
   141d8:	sub	sp, fp, #8
   141dc:	pop	{r4, sl, fp, pc}
   141e0:	push	{r4, r5, fp, lr}
   141e4:	add	fp, sp, #8
   141e8:	sub	sp, sp, #48	; 0x30
   141ec:	ldr	r4, [fp, #8]
   141f0:	mov	ip, #0
   141f4:	add	lr, sp, #8
   141f8:	ldr	r5, [r4]
   141fc:	cmp	r5, #0
   14200:	str	r5, [lr, ip, lsl #2]
   14204:	beq	14218 <__mempcpy_chk@plt+0x313c>
   14208:	add	ip, ip, #1
   1420c:	add	r4, r4, #4
   14210:	cmp	ip, #10
   14214:	bcc	141f8 <__mempcpy_chk@plt+0x311c>
   14218:	str	lr, [sp]
   1421c:	str	ip, [sp, #4]
   14220:	bl	13e78 <__mempcpy_chk@plt+0x2d9c>
   14224:	sub	sp, fp, #8
   14228:	pop	{r4, r5, fp, pc}
   1422c:	push	{fp, lr}
   14230:	mov	fp, sp
   14234:	sub	sp, sp, #8
   14238:	add	ip, fp, #8
   1423c:	str	ip, [sp, #4]
   14240:	str	ip, [sp]
   14244:	bl	141e0 <__mempcpy_chk@plt+0x3104>
   14248:	mov	sp, fp
   1424c:	pop	{fp, pc}
   14250:	push	{fp, lr}
   14254:	mov	fp, sp
   14258:	movw	r0, #24908	; 0x614c
   1425c:	movt	r0, #2
   14260:	ldr	r1, [r0]
   14264:	movw	r0, #21714	; 0x54d2
   14268:	movt	r0, #1
   1426c:	bl	10e6c <fputs_unlocked@plt>
   14270:	movw	r1, #22926	; 0x598e
   14274:	mov	r0, #0
   14278:	mov	r2, #5
   1427c:	movt	r1, #1
   14280:	bl	10ee4 <dcgettext@plt>
   14284:	movw	r2, #22946	; 0x59a2
   14288:	mov	r1, r0
   1428c:	mov	r0, #1
   14290:	movt	r2, #1
   14294:	bl	11010 <__printf_chk@plt>
   14298:	movw	r1, #22968	; 0x59b8
   1429c:	mov	r0, #0
   142a0:	mov	r2, #5
   142a4:	movt	r1, #1
   142a8:	bl	10ee4 <dcgettext@plt>
   142ac:	movw	r2, #21016	; 0x5218
   142b0:	movw	r3, #21523	; 0x5413
   142b4:	mov	r1, r0
   142b8:	mov	r0, #1
   142bc:	movt	r2, #1
   142c0:	movt	r3, #1
   142c4:	bl	11010 <__printf_chk@plt>
   142c8:	movw	r1, #22988	; 0x59cc
   142cc:	mov	r0, #0
   142d0:	mov	r2, #5
   142d4:	movt	r1, #1
   142d8:	bl	10ee4 <dcgettext@plt>
   142dc:	movw	r2, #23027	; 0x59f3
   142e0:	mov	r1, r0
   142e4:	mov	r0, #1
   142e8:	movt	r2, #1
   142ec:	pop	{fp, lr}
   142f0:	b	11010 <__printf_chk@plt>
   142f4:	b	142f8 <__mempcpy_chk@plt+0x321c>
   142f8:	push	{r4, r5, r6, sl, fp, lr}
   142fc:	add	fp, sp, #16
   14300:	mov	r4, r2
   14304:	mov	r5, r1
   14308:	mov	r6, r0
   1430c:	bl	14934 <__mempcpy_chk@plt+0x3858>
   14310:	cmp	r0, #0
   14314:	popne	{r4, r5, r6, sl, fp, pc}
   14318:	cmp	r6, #0
   1431c:	beq	14330 <__mempcpy_chk@plt+0x3254>
   14320:	cmp	r5, #0
   14324:	cmpne	r4, #0
   14328:	bne	14330 <__mempcpy_chk@plt+0x3254>
   1432c:	pop	{r4, r5, r6, sl, fp, pc}
   14330:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14334:	push	{fp, lr}
   14338:	mov	fp, sp
   1433c:	bl	1481c <__mempcpy_chk@plt+0x3740>
   14340:	cmp	r0, #0
   14344:	popne	{fp, pc}
   14348:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   1434c:	push	{fp, lr}
   14350:	mov	fp, sp
   14354:	bl	1481c <__mempcpy_chk@plt+0x3740>
   14358:	cmp	r0, #0
   1435c:	popne	{fp, pc}
   14360:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14364:	push	{fp, lr}
   14368:	mov	fp, sp
   1436c:	bl	1481c <__mempcpy_chk@plt+0x3740>
   14370:	cmp	r0, #0
   14374:	popne	{fp, pc}
   14378:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   1437c:	push	{r4, r5, fp, lr}
   14380:	add	fp, sp, #8
   14384:	mov	r4, r1
   14388:	mov	r5, r0
   1438c:	bl	1484c <__mempcpy_chk@plt+0x3770>
   14390:	cmp	r0, #0
   14394:	popne	{r4, r5, fp, pc}
   14398:	cmp	r5, #0
   1439c:	beq	143ac <__mempcpy_chk@plt+0x32d0>
   143a0:	cmp	r4, #0
   143a4:	bne	143ac <__mempcpy_chk@plt+0x32d0>
   143a8:	pop	{r4, r5, fp, pc}
   143ac:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   143b0:	push	{fp, lr}
   143b4:	mov	fp, sp
   143b8:	cmp	r1, #0
   143bc:	orreq	r1, r1, #1
   143c0:	bl	1484c <__mempcpy_chk@plt+0x3770>
   143c4:	cmp	r0, #0
   143c8:	popne	{fp, pc}
   143cc:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   143d0:	push	{fp, lr}
   143d4:	mov	fp, sp
   143d8:	clz	r3, r2
   143dc:	lsr	ip, r3, #5
   143e0:	clz	r3, r1
   143e4:	lsr	r3, r3, #5
   143e8:	orrs	r3, r3, ip
   143ec:	movwne	r1, #1
   143f0:	movwne	r2, #1
   143f4:	bl	14934 <__mempcpy_chk@plt+0x3858>
   143f8:	cmp	r0, #0
   143fc:	popne	{fp, pc}
   14400:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14404:	push	{fp, lr}
   14408:	mov	fp, sp
   1440c:	mov	r2, r1
   14410:	mov	r1, r0
   14414:	mov	r0, #0
   14418:	bl	14934 <__mempcpy_chk@plt+0x3858>
   1441c:	cmp	r0, #0
   14420:	popne	{fp, pc}
   14424:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14428:	mov	r2, r1
   1442c:	mov	r1, r0
   14430:	mov	r0, #0
   14434:	b	143d0 <__mempcpy_chk@plt+0x32f4>
   14438:	mov	r2, #1
   1443c:	b	14440 <__mempcpy_chk@plt+0x3364>
   14440:	push	{r4, r5, fp, lr}
   14444:	add	fp, sp, #8
   14448:	ldr	r5, [r1]
   1444c:	mov	r4, r1
   14450:	cmp	r0, #0
   14454:	beq	1446c <__mempcpy_chk@plt+0x3390>
   14458:	mov	r1, #1
   1445c:	add	r1, r1, r5, lsr #1
   14460:	adds	r5, r5, r1
   14464:	bcc	14484 <__mempcpy_chk@plt+0x33a8>
   14468:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   1446c:	cmp	r5, #0
   14470:	bne	14484 <__mempcpy_chk@plt+0x33a8>
   14474:	mov	r1, #64	; 0x40
   14478:	cmp	r2, #64	; 0x40
   1447c:	udiv	r5, r1, r2
   14480:	addhi	r5, r5, #1
   14484:	mov	r1, r5
   14488:	bl	142f8 <__mempcpy_chk@plt+0x321c>
   1448c:	str	r5, [r4]
   14490:	pop	{r4, r5, fp, pc}
   14494:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14498:	add	fp, sp, #24
   1449c:	ldr	r6, [r1]
   144a0:	mov	r8, r1
   144a4:	ldr	r4, [fp, #8]
   144a8:	add	r1, r6, r6, asr #1
   144ac:	cmp	r1, r6
   144b0:	mvnvs	r1, #-2147483648	; 0x80000000
   144b4:	cmp	r1, r3
   144b8:	mov	r5, r1
   144bc:	movgt	r5, r3
   144c0:	cmn	r3, #1
   144c4:	movle	r5, r1
   144c8:	cmn	r4, #1
   144cc:	ble	144ec <__mempcpy_chk@plt+0x3410>
   144d0:	cmp	r4, #0
   144d4:	beq	14540 <__mempcpy_chk@plt+0x3464>
   144d8:	cmn	r5, #1
   144dc:	ble	14514 <__mempcpy_chk@plt+0x3438>
   144e0:	mvn	r7, #-2147483648	; 0x80000000
   144e4:	udiv	r1, r7, r4
   144e8:	b	14508 <__mempcpy_chk@plt+0x342c>
   144ec:	cmn	r5, #1
   144f0:	ble	14530 <__mempcpy_chk@plt+0x3454>
   144f4:	cmn	r4, #1
   144f8:	beq	14540 <__mempcpy_chk@plt+0x3464>
   144fc:	mov	r1, #-2147483648	; 0x80000000
   14500:	mvn	r7, #-2147483648	; 0x80000000
   14504:	sdiv	r1, r1, r4
   14508:	cmp	r1, r5
   1450c:	bge	14540 <__mempcpy_chk@plt+0x3464>
   14510:	b	14550 <__mempcpy_chk@plt+0x3474>
   14514:	beq	14540 <__mempcpy_chk@plt+0x3464>
   14518:	mov	r1, #-2147483648	; 0x80000000
   1451c:	mvn	r7, #-2147483648	; 0x80000000
   14520:	sdiv	r1, r1, r5
   14524:	cmp	r1, r4
   14528:	bge	14540 <__mempcpy_chk@plt+0x3464>
   1452c:	b	14550 <__mempcpy_chk@plt+0x3474>
   14530:	mvn	r7, #-2147483648	; 0x80000000
   14534:	sdiv	r1, r7, r4
   14538:	cmp	r5, r1
   1453c:	blt	14550 <__mempcpy_chk@plt+0x3474>
   14540:	mul	r1, r5, r4
   14544:	mov	r7, #64	; 0x40
   14548:	cmp	r1, #63	; 0x3f
   1454c:	bgt	14558 <__mempcpy_chk@plt+0x347c>
   14550:	sdiv	r5, r7, r4
   14554:	mul	r1, r5, r4
   14558:	cmp	r0, #0
   1455c:	moveq	r7, #0
   14560:	streq	r7, [r8]
   14564:	sub	r7, r5, r6
   14568:	cmp	r7, r2
   1456c:	bge	14610 <__mempcpy_chk@plt+0x3534>
   14570:	add	r5, r6, r2
   14574:	mov	r2, #0
   14578:	mov	r1, #0
   1457c:	cmp	r5, r3
   14580:	movwgt	r2, #1
   14584:	cmn	r3, #1
   14588:	movwgt	r1, #1
   1458c:	cmp	r5, r6
   14590:	bvs	145f8 <__mempcpy_chk@plt+0x351c>
   14594:	ands	r1, r1, r2
   14598:	bne	145f8 <__mempcpy_chk@plt+0x351c>
   1459c:	cmn	r4, #1
   145a0:	ble	145c0 <__mempcpy_chk@plt+0x34e4>
   145a4:	cmp	r4, #0
   145a8:	beq	1460c <__mempcpy_chk@plt+0x3530>
   145ac:	cmn	r5, #1
   145b0:	ble	145e4 <__mempcpy_chk@plt+0x3508>
   145b4:	mvn	r1, #-2147483648	; 0x80000000
   145b8:	udiv	r1, r1, r4
   145bc:	b	145d8 <__mempcpy_chk@plt+0x34fc>
   145c0:	cmn	r5, #1
   145c4:	ble	145fc <__mempcpy_chk@plt+0x3520>
   145c8:	cmn	r4, #1
   145cc:	beq	1460c <__mempcpy_chk@plt+0x3530>
   145d0:	mov	r1, #-2147483648	; 0x80000000
   145d4:	sdiv	r1, r1, r4
   145d8:	cmp	r1, r5
   145dc:	bge	1460c <__mempcpy_chk@plt+0x3530>
   145e0:	b	145f8 <__mempcpy_chk@plt+0x351c>
   145e4:	beq	1460c <__mempcpy_chk@plt+0x3530>
   145e8:	mov	r1, #-2147483648	; 0x80000000
   145ec:	sdiv	r1, r1, r5
   145f0:	cmp	r1, r4
   145f4:	bge	1460c <__mempcpy_chk@plt+0x3530>
   145f8:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   145fc:	mvn	r1, #-2147483648	; 0x80000000
   14600:	sdiv	r1, r1, r4
   14604:	cmp	r5, r1
   14608:	blt	145f8 <__mempcpy_chk@plt+0x351c>
   1460c:	mul	r1, r5, r4
   14610:	bl	1437c <__mempcpy_chk@plt+0x32a0>
   14614:	str	r5, [r8]
   14618:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1461c:	push	{fp, lr}
   14620:	mov	fp, sp
   14624:	mov	r1, #1
   14628:	bl	147c8 <__mempcpy_chk@plt+0x36ec>
   1462c:	cmp	r0, #0
   14630:	popne	{fp, pc}
   14634:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14638:	push	{fp, lr}
   1463c:	mov	fp, sp
   14640:	bl	147c8 <__mempcpy_chk@plt+0x36ec>
   14644:	cmp	r0, #0
   14648:	popne	{fp, pc}
   1464c:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14650:	push	{fp, lr}
   14654:	mov	fp, sp
   14658:	mov	r1, #1
   1465c:	bl	147c8 <__mempcpy_chk@plt+0x36ec>
   14660:	cmp	r0, #0
   14664:	popne	{fp, pc}
   14668:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   1466c:	push	{fp, lr}
   14670:	mov	fp, sp
   14674:	bl	147c8 <__mempcpy_chk@plt+0x36ec>
   14678:	cmp	r0, #0
   1467c:	popne	{fp, pc}
   14680:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14684:	push	{r4, r5, r6, sl, fp, lr}
   14688:	add	fp, sp, #16
   1468c:	mov	r5, r0
   14690:	mov	r0, r1
   14694:	mov	r4, r1
   14698:	bl	1481c <__mempcpy_chk@plt+0x3740>
   1469c:	cmp	r0, #0
   146a0:	beq	146bc <__mempcpy_chk@plt+0x35e0>
   146a4:	mov	r1, r5
   146a8:	mov	r2, r4
   146ac:	mov	r6, r0
   146b0:	bl	10ec0 <memcpy@plt>
   146b4:	mov	r0, r6
   146b8:	pop	{r4, r5, r6, sl, fp, pc}
   146bc:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   146c0:	push	{r4, r5, r6, sl, fp, lr}
   146c4:	add	fp, sp, #16
   146c8:	mov	r5, r0
   146cc:	mov	r0, r1
   146d0:	mov	r4, r1
   146d4:	bl	1481c <__mempcpy_chk@plt+0x3740>
   146d8:	cmp	r0, #0
   146dc:	beq	146f8 <__mempcpy_chk@plt+0x361c>
   146e0:	mov	r1, r5
   146e4:	mov	r2, r4
   146e8:	mov	r6, r0
   146ec:	bl	10ec0 <memcpy@plt>
   146f0:	mov	r0, r6
   146f4:	pop	{r4, r5, r6, sl, fp, pc}
   146f8:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   146fc:	push	{r4, r5, r6, sl, fp, lr}
   14700:	add	fp, sp, #16
   14704:	mov	r5, r0
   14708:	add	r0, r1, #1
   1470c:	mov	r4, r1
   14710:	bl	1481c <__mempcpy_chk@plt+0x3740>
   14714:	cmp	r0, #0
   14718:	beq	14740 <__mempcpy_chk@plt+0x3664>
   1471c:	mov	r6, r0
   14720:	mov	r0, #0
   14724:	mov	r1, r5
   14728:	mov	r2, r4
   1472c:	strb	r0, [r6, r4]
   14730:	mov	r0, r6
   14734:	bl	10ec0 <memcpy@plt>
   14738:	mov	r0, r6
   1473c:	pop	{r4, r5, r6, sl, fp, pc}
   14740:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14744:	push	{r4, r5, r6, sl, fp, lr}
   14748:	add	fp, sp, #16
   1474c:	mov	r4, r0
   14750:	bl	10fd4 <strlen@plt>
   14754:	add	r5, r0, #1
   14758:	mov	r0, r5
   1475c:	bl	1481c <__mempcpy_chk@plt+0x3740>
   14760:	cmp	r0, #0
   14764:	beq	14780 <__mempcpy_chk@plt+0x36a4>
   14768:	mov	r1, r4
   1476c:	mov	r2, r5
   14770:	mov	r6, r0
   14774:	bl	10ec0 <memcpy@plt>
   14778:	mov	r0, r6
   1477c:	pop	{r4, r5, r6, sl, fp, pc}
   14780:	bl	14784 <__mempcpy_chk@plt+0x36a8>
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	movw	r0, #24820	; 0x60f4
   14790:	movw	r1, #23103	; 0x5a3f
   14794:	mov	r2, #5
   14798:	movt	r0, #2
   1479c:	movt	r1, #1
   147a0:	ldr	r4, [r0]
   147a4:	mov	r0, #0
   147a8:	bl	10ee4 <dcgettext@plt>
   147ac:	movw	r2, #21987	; 0x55e3
   147b0:	mov	r3, r0
   147b4:	mov	r0, r4
   147b8:	mov	r1, #0
   147bc:	movt	r2, #1
   147c0:	bl	10f50 <error@plt>
   147c4:	bl	110ac <abort@plt>
   147c8:	clz	r2, r1
   147cc:	clz	r3, r0
   147d0:	lsr	r2, r2, #5
   147d4:	lsr	r3, r3, #5
   147d8:	orrs	r2, r3, r2
   147dc:	movwne	r1, #1
   147e0:	movwne	r0, #1
   147e4:	cmp	r1, #0
   147e8:	beq	14818 <__mempcpy_chk@plt+0x373c>
   147ec:	mvn	r2, #-2147483648	; 0x80000000
   147f0:	udiv	r2, r2, r1
   147f4:	cmp	r2, r0
   147f8:	bcs	14818 <__mempcpy_chk@plt+0x373c>
   147fc:	push	{fp, lr}
   14800:	mov	fp, sp
   14804:	bl	10fe0 <__errno_location@plt>
   14808:	mov	r1, #12
   1480c:	str	r1, [r0]
   14810:	mov	r0, #0
   14814:	pop	{fp, pc}
   14818:	b	10e60 <calloc@plt>
   1481c:	cmp	r0, #0
   14820:	movweq	r0, #1
   14824:	cmn	r0, #1
   14828:	ble	14830 <__mempcpy_chk@plt+0x3754>
   1482c:	b	10f80 <malloc@plt>
   14830:	push	{fp, lr}
   14834:	mov	fp, sp
   14838:	bl	10fe0 <__errno_location@plt>
   1483c:	mov	r1, #12
   14840:	str	r1, [r0]
   14844:	mov	r0, #0
   14848:	pop	{fp, pc}
   1484c:	push	{fp, lr}
   14850:	mov	fp, sp
   14854:	cmp	r0, #0
   14858:	beq	14874 <__mempcpy_chk@plt+0x3798>
   1485c:	cmp	r1, #0
   14860:	beq	14880 <__mempcpy_chk@plt+0x37a4>
   14864:	cmn	r1, #1
   14868:	ble	14888 <__mempcpy_chk@plt+0x37ac>
   1486c:	pop	{fp, lr}
   14870:	b	10ef0 <realloc@plt>
   14874:	mov	r0, r1
   14878:	pop	{fp, lr}
   1487c:	b	1481c <__mempcpy_chk@plt+0x3740>
   14880:	bl	11f48 <__mempcpy_chk@plt+0xe6c>
   14884:	b	14894 <__mempcpy_chk@plt+0x37b8>
   14888:	bl	10fe0 <__errno_location@plt>
   1488c:	mov	r1, #12
   14890:	str	r1, [r0]
   14894:	mov	r0, #0
   14898:	pop	{fp, pc}
   1489c:	push	{fp, lr}
   148a0:	mov	fp, sp
   148a4:	mov	r0, #14
   148a8:	bl	11064 <nl_langinfo@plt>
   148ac:	movw	r1, #21715	; 0x54d3
   148b0:	cmp	r0, #0
   148b4:	movt	r1, #1
   148b8:	movne	r1, r0
   148bc:	movw	r0, #23120	; 0x5a50
   148c0:	ldrb	r2, [r1]
   148c4:	movt	r0, #1
   148c8:	cmp	r2, #0
   148cc:	movne	r0, r1
   148d0:	pop	{fp, pc}
   148d4:	push	{r4, r5, r6, r7, fp, lr}
   148d8:	add	fp, sp, #16
   148dc:	sub	sp, sp, #8
   148e0:	add	r5, sp, #4
   148e4:	cmp	r0, #0
   148e8:	mov	r7, r2
   148ec:	mov	r4, r1
   148f0:	movne	r5, r0
   148f4:	mov	r0, r5
   148f8:	bl	10f44 <mbrtowc@plt>
   148fc:	mov	r6, r0
   14900:	cmp	r7, #0
   14904:	beq	14928 <__mempcpy_chk@plt+0x384c>
   14908:	cmn	r6, #2
   1490c:	bcc	14928 <__mempcpy_chk@plt+0x384c>
   14910:	mov	r0, #0
   14914:	bl	14970 <__mempcpy_chk@plt+0x3894>
   14918:	cmp	r0, #0
   1491c:	ldrbeq	r0, [r4]
   14920:	moveq	r6, #1
   14924:	streq	r0, [r5]
   14928:	mov	r0, r6
   1492c:	sub	sp, fp, #16
   14930:	pop	{r4, r5, r6, r7, fp, pc}
   14934:	cmp	r2, #0
   14938:	beq	14968 <__mempcpy_chk@plt+0x388c>
   1493c:	mvn	r3, #0
   14940:	udiv	r3, r3, r2
   14944:	cmp	r3, r1
   14948:	bcs	14968 <__mempcpy_chk@plt+0x388c>
   1494c:	push	{fp, lr}
   14950:	mov	fp, sp
   14954:	bl	10fe0 <__errno_location@plt>
   14958:	mov	r1, #12
   1495c:	str	r1, [r0]
   14960:	mov	r0, #0
   14964:	pop	{fp, pc}
   14968:	mul	r1, r2, r1
   1496c:	b	1484c <__mempcpy_chk@plt+0x3770>
   14970:	push	{r4, sl, fp, lr}
   14974:	add	fp, sp, #8
   14978:	sub	sp, sp, #264	; 0x108
   1497c:	add	r1, sp, #7
   14980:	movw	r2, #257	; 0x101
   14984:	bl	149d4 <__mempcpy_chk@plt+0x38f8>
   14988:	mov	r4, #0
   1498c:	cmp	r0, #0
   14990:	bne	149c8 <__mempcpy_chk@plt+0x38ec>
   14994:	movw	r1, #23126	; 0x5a56
   14998:	add	r0, sp, #7
   1499c:	movt	r1, #1
   149a0:	bl	10e84 <strcmp@plt>
   149a4:	cmp	r0, #0
   149a8:	beq	149c8 <__mempcpy_chk@plt+0x38ec>
   149ac:	movw	r1, #23128	; 0x5a58
   149b0:	add	r0, sp, #7
   149b4:	movt	r1, #1
   149b8:	bl	10e84 <strcmp@plt>
   149bc:	mov	r4, r0
   149c0:	cmp	r0, #0
   149c4:	movwne	r4, #1
   149c8:	mov	r0, r4
   149cc:	sub	sp, fp, #8
   149d0:	pop	{r4, sl, fp, pc}
   149d4:	push	{r4, r5, r6, r7, fp, lr}
   149d8:	add	fp, sp, #16
   149dc:	mov	r4, r1
   149e0:	mov	r1, #0
   149e4:	mov	r6, r2
   149e8:	bl	1104c <setlocale@plt>
   149ec:	cmp	r0, #0
   149f0:	beq	14a1c <__mempcpy_chk@plt+0x3940>
   149f4:	mov	r7, r0
   149f8:	bl	10fd4 <strlen@plt>
   149fc:	cmp	r0, r6
   14a00:	bcs	14a30 <__mempcpy_chk@plt+0x3954>
   14a04:	add	r2, r0, #1
   14a08:	mov	r0, r4
   14a0c:	mov	r1, r7
   14a10:	bl	10ec0 <memcpy@plt>
   14a14:	mov	r5, #0
   14a18:	b	14a58 <__mempcpy_chk@plt+0x397c>
   14a1c:	cmp	r6, #0
   14a20:	mov	r5, #22
   14a24:	movne	r0, #0
   14a28:	strbne	r0, [r4]
   14a2c:	b	14a58 <__mempcpy_chk@plt+0x397c>
   14a30:	mov	r5, #34	; 0x22
   14a34:	cmp	r6, #0
   14a38:	beq	14a58 <__mempcpy_chk@plt+0x397c>
   14a3c:	sub	r6, r6, #1
   14a40:	mov	r0, r4
   14a44:	mov	r1, r7
   14a48:	mov	r2, r6
   14a4c:	bl	10ec0 <memcpy@plt>
   14a50:	mov	r0, #0
   14a54:	strb	r0, [r4, r6]
   14a58:	mov	r0, r5
   14a5c:	pop	{r4, r5, r6, r7, fp, pc}
   14a60:	mov	r1, #0
   14a64:	b	1104c <setlocale@plt>
   14a68:	cmp	r3, #0
   14a6c:	cmpeq	r2, #0
   14a70:	bne	14a88 <__mempcpy_chk@plt+0x39ac>
   14a74:	cmp	r1, #0
   14a78:	cmpeq	r0, #0
   14a7c:	mvnne	r1, #0
   14a80:	mvnne	r0, #0
   14a84:	b	14aa4 <__mempcpy_chk@plt+0x39c8>
   14a88:	sub	sp, sp, #8
   14a8c:	push	{sp, lr}
   14a90:	bl	14ab4 <__mempcpy_chk@plt+0x39d8>
   14a94:	ldr	lr, [sp, #4]
   14a98:	add	sp, sp, #8
   14a9c:	pop	{r2, r3}
   14aa0:	bx	lr
   14aa4:	push	{r1, lr}
   14aa8:	mov	r0, #8
   14aac:	bl	10e78 <raise@plt>
   14ab0:	pop	{r1, pc}
   14ab4:	cmp	r1, r3
   14ab8:	cmpeq	r0, r2
   14abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac0:	mov	r4, r0
   14ac4:	movcc	r0, #0
   14ac8:	mov	r5, r1
   14acc:	ldr	lr, [sp, #36]	; 0x24
   14ad0:	movcc	r1, r0
   14ad4:	bcc	14bd0 <__mempcpy_chk@plt+0x3af4>
   14ad8:	cmp	r3, #0
   14adc:	clzeq	ip, r2
   14ae0:	clzne	ip, r3
   14ae4:	addeq	ip, ip, #32
   14ae8:	cmp	r5, #0
   14aec:	clzeq	r1, r4
   14af0:	addeq	r1, r1, #32
   14af4:	clzne	r1, r5
   14af8:	sub	ip, ip, r1
   14afc:	sub	sl, ip, #32
   14b00:	lsl	r9, r3, ip
   14b04:	rsb	fp, ip, #32
   14b08:	orr	r9, r9, r2, lsl sl
   14b0c:	orr	r9, r9, r2, lsr fp
   14b10:	lsl	r8, r2, ip
   14b14:	cmp	r5, r9
   14b18:	cmpeq	r4, r8
   14b1c:	movcc	r0, #0
   14b20:	movcc	r1, r0
   14b24:	bcc	14b40 <__mempcpy_chk@plt+0x3a64>
   14b28:	mov	r0, #1
   14b2c:	subs	r4, r4, r8
   14b30:	lsl	r1, r0, sl
   14b34:	orr	r1, r1, r0, lsr fp
   14b38:	lsl	r0, r0, ip
   14b3c:	sbc	r5, r5, r9
   14b40:	cmp	ip, #0
   14b44:	beq	14bd0 <__mempcpy_chk@plt+0x3af4>
   14b48:	lsr	r6, r8, #1
   14b4c:	orr	r6, r6, r9, lsl #31
   14b50:	lsr	r7, r9, #1
   14b54:	mov	r2, ip
   14b58:	b	14b7c <__mempcpy_chk@plt+0x3aa0>
   14b5c:	subs	r3, r4, r6
   14b60:	sbc	r8, r5, r7
   14b64:	adds	r3, r3, r3
   14b68:	adc	r8, r8, r8
   14b6c:	adds	r4, r3, #1
   14b70:	adc	r5, r8, #0
   14b74:	subs	r2, r2, #1
   14b78:	beq	14b98 <__mempcpy_chk@plt+0x3abc>
   14b7c:	cmp	r5, r7
   14b80:	cmpeq	r4, r6
   14b84:	bcs	14b5c <__mempcpy_chk@plt+0x3a80>
   14b88:	adds	r4, r4, r4
   14b8c:	adc	r5, r5, r5
   14b90:	subs	r2, r2, #1
   14b94:	bne	14b7c <__mempcpy_chk@plt+0x3aa0>
   14b98:	lsr	r3, r4, ip
   14b9c:	orr	r3, r3, r5, lsl fp
   14ba0:	lsr	r2, r5, ip
   14ba4:	orr	r3, r3, r5, lsr sl
   14ba8:	adds	r0, r0, r4
   14bac:	mov	r4, r3
   14bb0:	lsl	r3, r2, ip
   14bb4:	orr	r3, r3, r4, lsl sl
   14bb8:	lsl	ip, r4, ip
   14bbc:	orr	r3, r3, r4, lsr fp
   14bc0:	adc	r1, r1, r5
   14bc4:	subs	r0, r0, ip
   14bc8:	mov	r5, r2
   14bcc:	sbc	r1, r1, r3
   14bd0:	cmp	lr, #0
   14bd4:	strdne	r4, [lr]
   14bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14be0:	mov	r7, r0
   14be4:	ldr	r6, [pc, #72]	; 14c34 <__mempcpy_chk@plt+0x3b58>
   14be8:	ldr	r5, [pc, #72]	; 14c38 <__mempcpy_chk@plt+0x3b5c>
   14bec:	add	r6, pc, r6
   14bf0:	add	r5, pc, r5
   14bf4:	sub	r6, r6, r5
   14bf8:	mov	r8, r1
   14bfc:	mov	r9, r2
   14c00:	bl	10e40 <calloc@plt-0x20>
   14c04:	asrs	r6, r6, #2
   14c08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c0c:	mov	r4, #0
   14c10:	add	r4, r4, #1
   14c14:	ldr	r3, [r5], #4
   14c18:	mov	r2, r9
   14c1c:	mov	r1, r8
   14c20:	mov	r0, r7
   14c24:	blx	r3
   14c28:	cmp	r6, r4
   14c2c:	bne	14c10 <__mempcpy_chk@plt+0x3b34>
   14c30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c34:	andeq	r1, r1, r8, lsl r3
   14c38:	andeq	r1, r1, r0, lsl r3
   14c3c:	bx	lr
   14c40:	ldr	r3, [pc, #12]	; 14c54 <__mempcpy_chk@plt+0x3b78>
   14c44:	mov	r1, #0
   14c48:	add	r3, pc, r3
   14c4c:	ldr	r2, [r3]
   14c50:	b	10fec <__cxa_atexit@plt>
   14c54:	muleq	r1, ip, r4
   14c58:	mov	r2, r1
   14c5c:	mov	r1, r0
   14c60:	mov	r0, #3
   14c64:	b	110c4 <__lxstat64@plt>

Disassembly of section .fini:

00014c68 <.fini>:
   14c68:	push	{r3, lr}
   14c6c:	pop	{r3, pc}
