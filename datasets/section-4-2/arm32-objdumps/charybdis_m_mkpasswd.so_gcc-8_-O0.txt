
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000588 <_init>:
 588:	push	{r3, lr}
 58c:	bl	65c <call_weak_fn>
 590:	pop	{r3, pc}

Disassembly of section .plt:

00000594 <.plt>:
 594:	push	{lr}		; (str lr, [sp, #-4]!)
 598:	ldr	lr, [pc, #4]	; 5a4 <.plt+0x10>
 59c:	add	lr, pc, lr
 5a0:	ldr	pc, [lr, #8]!
 5a4:	.word	0x00011a5c

000005a8 <rb_current_time@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #69632	; 0x11000
 5b0:	ldr	pc, [ip, #2652]!	; 0xa5c

000005b4 <__cxa_finalize@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #69632	; 0x11000
 5bc:	ldr	pc, [ip, #2644]!	; 0xa54

000005c0 <sendto_one@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #69632	; 0x11000
 5c8:	ldr	pc, [ip, #2636]!	; 0xa4c

000005cc <read@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #69632	; 0x11000
 5d4:	ldr	pc, [ip, #2628]!	; 0xa44

000005d8 <time@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #69632	; 0x11000
 5e0:	ldr	pc, [ip, #2620]!	; 0xa3c

000005e4 <rb_crypt@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #69632	; 0x11000
 5ec:	ldr	pc, [ip, #2612]!	; 0xa34

000005f0 <puts@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #69632	; 0x11000
 5f8:	ldr	pc, [ip, #2604]!	; 0xa2c

000005fc <__gmon_start__@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #69632	; 0x11000
 604:	ldr	pc, [ip, #2596]!	; 0xa24

00000608 <open@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #69632	; 0x11000
 610:	ldr	pc, [ip, #2588]!	; 0xa1c

00000614 <exit@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2580]!	; 0xa14

00000620 <srand@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2572]!	; 0xa0c

0000062c <rand@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2564]!	; 0xa04

00000638 <sendto_one_notice@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2556]!	; 0x9fc

00000644 <close@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2548]!	; 0x9f4

00000650 <irccmp@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2540]!	; 0x9ec

Disassembly of section .text:

0000065c <call_weak_fn>:
     65c:	ldr	r3, [pc, #20]	; 678 <call_weak_fn+0x1c>
     660:	ldr	r2, [pc, #20]	; 67c <call_weak_fn+0x20>
     664:	add	r3, pc, r3
     668:	ldr	r2, [r3, r2]
     66c:	cmp	r2, #0
     670:	bxeq	lr
     674:	b	5fc <__gmon_start__@plt>
     678:	.word	0x00011994
     67c:	.word	0x00000050

00000680 <deregister_tm_clones>:
     680:	ldr	r0, [pc, #44]	; 6b4 <deregister_tm_clones+0x34>
     684:	ldr	r3, [pc, #44]	; 6b8 <deregister_tm_clones+0x38>
     688:	add	r0, pc, r0
     68c:	add	r3, pc, r3
     690:	cmp	r3, r0
     694:	ldr	r3, [pc, #32]	; 6bc <deregister_tm_clones+0x3c>
     698:	add	r3, pc, r3
     69c:	bxeq	lr
     6a0:	ldr	r2, [pc, #24]	; 6c0 <deregister_tm_clones+0x40>
     6a4:	ldr	r3, [r3, r2]
     6a8:	cmp	r3, #0
     6ac:	bxeq	lr
     6b0:	bx	r3
     6b4:	.word	0x00011a8c
     6b8:	.word	0x00011a88
     6bc:	.word	0x00011960
     6c0:	.word	0x0000004c

000006c4 <register_tm_clones>:
     6c4:	ldr	r0, [pc, #56]	; 704 <register_tm_clones+0x40>
     6c8:	ldr	r3, [pc, #56]	; 708 <register_tm_clones+0x44>
     6cc:	add	r0, pc, r0
     6d0:	add	r3, pc, r3
     6d4:	sub	r1, r3, r0
     6d8:	ldr	r3, [pc, #44]	; 70c <register_tm_clones+0x48>
     6dc:	asr	r1, r1, #2
     6e0:	add	r3, pc, r3
     6e4:	add	r1, r1, r1, lsr #31
     6e8:	asrs	r1, r1, #1
     6ec:	bxeq	lr
     6f0:	ldr	r2, [pc, #24]	; 710 <register_tm_clones+0x4c>
     6f4:	ldr	r3, [r3, r2]
     6f8:	cmp	r3, #0
     6fc:	bxeq	lr
     700:	bx	r3
     704:	.word	0x00011a48
     708:	.word	0x00011a44
     70c:	.word	0x00011918
     710:	.word	0x00000054

00000714 <__do_global_dtors_aux>:
     714:	ldr	r3, [pc, #76]	; 768 <__do_global_dtors_aux+0x54>
     718:	ldr	r2, [pc, #76]	; 76c <__do_global_dtors_aux+0x58>
     71c:	add	r3, pc, r3
     720:	add	r2, pc, r2
     724:	ldrb	r3, [r3]
     728:	cmp	r3, #0
     72c:	bxne	lr
     730:	ldr	r3, [pc, #56]	; 770 <__do_global_dtors_aux+0x5c>
     734:	push	{r4, lr}
     738:	ldr	r3, [r2, r3]
     73c:	cmp	r3, #0
     740:	beq	750 <__do_global_dtors_aux+0x3c>
     744:	ldr	r3, [pc, #40]	; 774 <__do_global_dtors_aux+0x60>
     748:	ldr	r0, [pc, r3]
     74c:	bl	5b4 <__cxa_finalize@plt>
     750:	bl	680 <deregister_tm_clones>
     754:	ldr	r3, [pc, #28]	; 778 <__do_global_dtors_aux+0x64>
     758:	mov	r2, #1
     75c:	add	r3, pc, r3
     760:	strb	r2, [r3]
     764:	pop	{r4, pc}
     768:	.word	0x000119f8
     76c:	.word	0x000118d8
     770:	.word	0x00000048
     774:	.word	0x00011910
     778:	.word	0x000119b8

0000077c <frame_dummy>:
     77c:	b	6c4 <register_tm_clones>

00000780 <m_mkpasswd>:
     780:	strd	r4, [sp, #-16]!
     784:	str	fp, [sp, #8]
     788:	str	lr, [sp, #12]
     78c:	add	fp, sp, #12
     790:	sub	sp, sp, #48	; 0x30
     794:	str	r0, [fp, #-40]	; 0xffffffd8
     798:	str	r1, [fp, #-44]	; 0xffffffd4
     79c:	str	r2, [fp, #-48]	; 0xffffffd0
     7a0:	str	r3, [fp, #-52]	; 0xffffffcc
     7a4:	ldr	r4, [pc, #568]	; 9e4 <m_mkpasswd+0x264>
     7a8:	add	r4, pc, r4
     7ac:	ldr	r2, [pc, #564]	; 9e8 <m_mkpasswd+0x268>
     7b0:	add	r2, pc, r2
     7b4:	sub	r3, fp, #32
     7b8:	ldr	r1, [r2]
     7bc:	str	r1, [r3]
     7c0:	ldrh	r1, [r2, #4]
     7c4:	strh	r1, [r3, #4]
     7c8:	ldrb	r2, [r2, #6]
     7cc:	strb	r2, [r3, #6]
     7d0:	ldr	r3, [fp, #4]
     7d4:	add	r3, r3, #4
     7d8:	ldr	r3, [r3]
     7dc:	cmp	r3, #0
     7e0:	beq	7fc <m_mkpasswd+0x7c>
     7e4:	ldr	r3, [fp, #4]
     7e8:	add	r3, r3, #4
     7ec:	ldr	r3, [r3]
     7f0:	ldrb	r3, [r3]
     7f4:	cmp	r3, #0
     7f8:	bne	830 <m_mkpasswd+0xb0>
     7fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     800:	add	r3, r3, #88	; 0x58
     804:	ldr	r2, [pc, #480]	; 9ec <m_mkpasswd+0x26c>
     808:	add	r2, pc, r2
     80c:	str	r2, [sp]
     810:	ldr	r2, [pc, #472]	; 9f0 <m_mkpasswd+0x270>
     814:	ldr	r2, [r4, r2]
     818:	add	r2, r2, #88	; 0x58
     81c:	ldr	r1, [pc, #464]	; 9f4 <m_mkpasswd+0x274>
     820:	add	r1, pc, r1
     824:	ldr	r0, [fp, #-48]	; 0xffffffd0
     828:	bl	5c0 <sendto_one@plt>
     82c:	b	9d0 <m_mkpasswd+0x250>
     830:	ldr	r3, [fp, #-52]	; 0xffffffcc
     834:	cmp	r3, #2
     838:	bgt	848 <m_mkpasswd+0xc8>
     83c:	sub	r3, fp, #32
     840:	str	r3, [fp, #-20]	; 0xffffffec
     844:	b	854 <m_mkpasswd+0xd4>
     848:	ldr	r3, [fp, #4]
     84c:	ldr	r3, [r3, #8]
     850:	str	r3, [fp, #-20]	; 0xffffffec
     854:	ldr	r3, [pc, #412]	; 9f8 <m_mkpasswd+0x278>
     858:	ldr	r3, [r4, r3]
     85c:	ldr	r2, [r3, #184]	; 0xb8
     860:	ldr	r3, [pc, #404]	; 9fc <m_mkpasswd+0x27c>
     864:	add	r3, pc, r3
     868:	ldr	r3, [r3]
     86c:	add	r5, r2, r3
     870:	bl	5a8 <rb_current_time@plt>
     874:	mov	r3, r0
     878:	cmp	r5, r3
     87c:	ble	8b4 <m_mkpasswd+0x134>
     880:	ldr	r3, [fp, #-48]	; 0xffffffd0
     884:	add	r3, r3, #88	; 0x58
     888:	ldr	r2, [pc, #368]	; a00 <m_mkpasswd+0x280>
     88c:	add	r2, pc, r2
     890:	str	r2, [sp]
     894:	ldr	r2, [pc, #340]	; 9f0 <m_mkpasswd+0x270>
     898:	ldr	r2, [r4, r2]
     89c:	add	r2, r2, #88	; 0x58
     8a0:	ldr	r1, [pc, #348]	; a04 <m_mkpasswd+0x284>
     8a4:	add	r1, pc, r1
     8a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8ac:	bl	5c0 <sendto_one@plt>
     8b0:	b	9d0 <m_mkpasswd+0x250>
     8b4:	bl	5a8 <rb_current_time@plt>
     8b8:	mov	r2, r0
     8bc:	ldr	r3, [pc, #324]	; a08 <m_mkpasswd+0x288>
     8c0:	add	r3, pc, r3
     8c4:	str	r2, [r3]
     8c8:	ldr	r3, [pc, #316]	; a0c <m_mkpasswd+0x28c>
     8cc:	add	r3, pc, r3
     8d0:	mov	r1, r3
     8d4:	ldr	r0, [fp, #-20]	; 0xffffffec
     8d8:	bl	650 <irccmp@plt>
     8dc:	mov	r3, r0
     8e0:	cmp	r3, #0
     8e4:	bne	8f8 <m_mkpasswd+0x178>
     8e8:	mov	r0, #16
     8ec:	bl	d20 <make_sha256_salt>
     8f0:	str	r0, [fp, #-16]
     8f4:	b	970 <m_mkpasswd+0x1f0>
     8f8:	ldr	r3, [pc, #272]	; a10 <m_mkpasswd+0x290>
     8fc:	add	r3, pc, r3
     900:	mov	r1, r3
     904:	ldr	r0, [fp, #-20]	; 0xffffffec
     908:	bl	650 <irccmp@plt>
     90c:	mov	r3, r0
     910:	cmp	r3, #0
     914:	bne	928 <m_mkpasswd+0x1a8>
     918:	mov	r0, #16
     91c:	bl	e08 <make_sha512_salt>
     920:	str	r0, [fp, #-16]
     924:	b	970 <m_mkpasswd+0x1f0>
     928:	ldr	r3, [pc, #228]	; a14 <m_mkpasswd+0x294>
     92c:	add	r3, pc, r3
     930:	mov	r1, r3
     934:	ldr	r0, [fp, #-20]	; 0xffffffec
     938:	bl	650 <irccmp@plt>
     93c:	mov	r3, r0
     940:	cmp	r3, #0
     944:	bne	958 <m_mkpasswd+0x1d8>
     948:	mov	r0, #8
     94c:	bl	c38 <make_md5_salt>
     950:	str	r0, [fp, #-16]
     954:	b	970 <m_mkpasswd+0x1f0>
     958:	ldr	r3, [pc, #184]	; a18 <m_mkpasswd+0x298>
     95c:	add	r3, pc, r3
     960:	mov	r1, r3
     964:	ldr	r0, [fp, #-48]	; 0xffffffd0
     968:	bl	638 <sendto_one_notice@plt>
     96c:	b	9d0 <m_mkpasswd+0x250>
     970:	ldr	r3, [fp, #4]
     974:	add	r3, r3, #4
     978:	ldr	r3, [r3]
     97c:	ldr	r1, [fp, #-16]
     980:	mov	r0, r3
     984:	bl	5e4 <rb_crypt@plt>
     988:	str	r0, [fp, #-24]	; 0xffffffe8
     98c:	ldr	r3, [fp, #4]
     990:	add	r3, r3, #4
     994:	ldr	r2, [r3]
     998:	ldr	r3, [fp, #-24]	; 0xffffffe8
     99c:	cmp	r3, #0
     9a0:	beq	9ac <m_mkpasswd+0x22c>
     9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9a8:	b	9b4 <m_mkpasswd+0x234>
     9ac:	ldr	r3, [pc, #104]	; a1c <m_mkpasswd+0x29c>
     9b0:	add	r3, pc, r3
     9b4:	str	r3, [sp]
     9b8:	mov	r3, r2
     9bc:	ldr	r2, [fp, #-20]	; 0xffffffec
     9c0:	ldr	r1, [pc, #88]	; a20 <m_mkpasswd+0x2a0>
     9c4:	add	r1, pc, r1
     9c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     9cc:	bl	638 <sendto_one_notice@plt>
     9d0:	sub	sp, fp, #12
     9d4:	ldrd	r4, [sp]
     9d8:	ldr	fp, [sp, #8]
     9dc:	add	sp, sp, #12
     9e0:	pop	{pc}		; (ldr pc, [sp], #4)
     9e4:	.word	0x00011850
     9e8:	.word	0x000009c4
     9ec:	.word	0x000008c4
     9f0:	.word	0x00000058
     9f4:	.word	0x000008b8
     9f8:	.word	0x0000005c
     9fc:	.word	0x000118b4
     a00:	.word	0x00000840
     a04:	.word	0x0000085c
     a08:	.word	0x00011858
     a0c:	.word	0x000008a0
     a10:	.word	0x00000878
     a14:	.word	0x00000850
     a18:	.word	0x00000824
     a1c:	.word	0x0000080c
     a20:	.word	0x000007fc

00000a24 <mo_mkpasswd>:
     a24:	str	fp, [sp, #-8]!
     a28:	str	lr, [sp, #4]
     a2c:	add	fp, sp, #4
     a30:	sub	sp, sp, #48	; 0x30
     a34:	str	r0, [fp, #-32]	; 0xffffffe0
     a38:	str	r1, [fp, #-36]	; 0xffffffdc
     a3c:	str	r2, [fp, #-40]	; 0xffffffd8
     a40:	str	r3, [fp, #-44]	; 0xffffffd4
     a44:	ldr	r1, [pc, #448]	; c0c <mo_mkpasswd+0x1e8>
     a48:	add	r1, pc, r1
     a4c:	ldr	r2, [pc, #444]	; c10 <mo_mkpasswd+0x1ec>
     a50:	add	r2, pc, r2
     a54:	sub	r3, fp, #24
     a58:	ldr	r0, [r2]
     a5c:	str	r0, [r3]
     a60:	ldrh	r0, [r2, #4]
     a64:	strh	r0, [r3, #4]
     a68:	ldrb	r2, [r2, #6]
     a6c:	strb	r2, [r3, #6]
     a70:	ldr	r3, [fp, #4]
     a74:	add	r3, r3, #4
     a78:	ldr	r3, [r3]
     a7c:	cmp	r3, #0
     a80:	beq	a9c <mo_mkpasswd+0x78>
     a84:	ldr	r3, [fp, #4]
     a88:	add	r3, r3, #4
     a8c:	ldr	r3, [r3]
     a90:	ldrb	r3, [r3]
     a94:	cmp	r3, #0
     a98:	bne	ad0 <mo_mkpasswd+0xac>
     a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     aa0:	add	r3, r3, #88	; 0x58
     aa4:	ldr	r2, [pc, #360]	; c14 <mo_mkpasswd+0x1f0>
     aa8:	add	r2, pc, r2
     aac:	str	r2, [sp]
     ab0:	ldr	r2, [pc, #352]	; c18 <mo_mkpasswd+0x1f4>
     ab4:	ldr	r2, [r1, r2]
     ab8:	add	r2, r2, #88	; 0x58
     abc:	ldr	r1, [pc, #344]	; c1c <mo_mkpasswd+0x1f8>
     ac0:	add	r1, pc, r1
     ac4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ac8:	bl	5c0 <sendto_one@plt>
     acc:	b	bfc <mo_mkpasswd+0x1d8>
     ad0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ad4:	cmp	r3, #2
     ad8:	bgt	ae8 <mo_mkpasswd+0xc4>
     adc:	sub	r3, fp, #24
     ae0:	str	r3, [fp, #-12]
     ae4:	b	af4 <mo_mkpasswd+0xd0>
     ae8:	ldr	r3, [fp, #4]
     aec:	ldr	r3, [r3, #8]
     af0:	str	r3, [fp, #-12]
     af4:	ldr	r3, [pc, #292]	; c20 <mo_mkpasswd+0x1fc>
     af8:	add	r3, pc, r3
     afc:	mov	r1, r3
     b00:	ldr	r0, [fp, #-12]
     b04:	bl	650 <irccmp@plt>
     b08:	mov	r3, r0
     b0c:	cmp	r3, #0
     b10:	bne	b24 <mo_mkpasswd+0x100>
     b14:	mov	r0, #16
     b18:	bl	d20 <make_sha256_salt>
     b1c:	str	r0, [fp, #-8]
     b20:	b	b9c <mo_mkpasswd+0x178>
     b24:	ldr	r3, [pc, #248]	; c24 <mo_mkpasswd+0x200>
     b28:	add	r3, pc, r3
     b2c:	mov	r1, r3
     b30:	ldr	r0, [fp, #-12]
     b34:	bl	650 <irccmp@plt>
     b38:	mov	r3, r0
     b3c:	cmp	r3, #0
     b40:	bne	b54 <mo_mkpasswd+0x130>
     b44:	mov	r0, #16
     b48:	bl	e08 <make_sha512_salt>
     b4c:	str	r0, [fp, #-8]
     b50:	b	b9c <mo_mkpasswd+0x178>
     b54:	ldr	r3, [pc, #204]	; c28 <mo_mkpasswd+0x204>
     b58:	add	r3, pc, r3
     b5c:	mov	r1, r3
     b60:	ldr	r0, [fp, #-12]
     b64:	bl	650 <irccmp@plt>
     b68:	mov	r3, r0
     b6c:	cmp	r3, #0
     b70:	bne	b84 <mo_mkpasswd+0x160>
     b74:	mov	r0, #8
     b78:	bl	c38 <make_md5_salt>
     b7c:	str	r0, [fp, #-8]
     b80:	b	b9c <mo_mkpasswd+0x178>
     b84:	ldr	r3, [pc, #160]	; c2c <mo_mkpasswd+0x208>
     b88:	add	r3, pc, r3
     b8c:	mov	r1, r3
     b90:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b94:	bl	638 <sendto_one_notice@plt>
     b98:	b	bfc <mo_mkpasswd+0x1d8>
     b9c:	ldr	r3, [fp, #4]
     ba0:	add	r3, r3, #4
     ba4:	ldr	r3, [r3]
     ba8:	ldr	r1, [fp, #-8]
     bac:	mov	r0, r3
     bb0:	bl	5e4 <rb_crypt@plt>
     bb4:	str	r0, [fp, #-16]
     bb8:	ldr	r3, [fp, #4]
     bbc:	add	r3, r3, #4
     bc0:	ldr	r2, [r3]
     bc4:	ldr	r3, [fp, #-16]
     bc8:	cmp	r3, #0
     bcc:	beq	bd8 <mo_mkpasswd+0x1b4>
     bd0:	ldr	r3, [fp, #-16]
     bd4:	b	be0 <mo_mkpasswd+0x1bc>
     bd8:	ldr	r3, [pc, #80]	; c30 <mo_mkpasswd+0x20c>
     bdc:	add	r3, pc, r3
     be0:	str	r3, [sp]
     be4:	mov	r3, r2
     be8:	ldr	r2, [fp, #-12]
     bec:	ldr	r1, [pc, #64]	; c34 <mo_mkpasswd+0x210>
     bf0:	add	r1, pc, r1
     bf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     bf8:	bl	638 <sendto_one_notice@plt>
     bfc:	sub	sp, fp, #4
     c00:	ldr	fp, [sp]
     c04:	add	sp, sp, #4
     c08:	pop	{pc}		; (ldr pc, [sp], #4)
     c0c:	.word	0x000115b0
     c10:	.word	0x00000724
     c14:	.word	0x00000624
     c18:	.word	0x00000058
     c1c:	.word	0x00000618
     c20:	.word	0x00000674
     c24:	.word	0x0000064c
     c28:	.word	0x00000624
     c2c:	.word	0x000005f8
     c30:	.word	0x000005e0
     c34:	.word	0x000005d0

00000c38 <make_md5_salt>:
     c38:	str	fp, [sp, #-8]!
     c3c:	str	lr, [sp, #4]
     c40:	add	fp, sp, #4
     c44:	sub	sp, sp, #8
     c48:	str	r0, [fp, #-8]
     c4c:	ldr	r3, [fp, #-8]
     c50:	cmp	r3, #16
     c54:	ble	c70 <make_md5_salt+0x38>
     c58:	ldr	r3, [pc, #160]	; d00 <make_md5_salt+0xc8>
     c5c:	add	r3, pc, r3
     c60:	mov	r0, r3
     c64:	bl	5f0 <puts@plt>
     c68:	mov	r0, #0
     c6c:	bl	614 <exit@plt>
     c70:	ldr	r3, [pc, #140]	; d04 <make_md5_salt+0xcc>
     c74:	add	r3, pc, r3
     c78:	mov	r2, #36	; 0x24
     c7c:	strb	r2, [r3]
     c80:	ldr	r3, [pc, #128]	; d08 <make_md5_salt+0xd0>
     c84:	add	r3, pc, r3
     c88:	mov	r2, #49	; 0x31
     c8c:	strb	r2, [r3, #1]
     c90:	ldr	r3, [pc, #116]	; d0c <make_md5_salt+0xd4>
     c94:	add	r3, pc, r3
     c98:	mov	r2, #36	; 0x24
     c9c:	strb	r2, [r3, #2]
     ca0:	ldr	r1, [fp, #-8]
     ca4:	ldr	r3, [pc, #100]	; d10 <make_md5_salt+0xd8>
     ca8:	add	r3, pc, r3
     cac:	add	r0, r3, #3
     cb0:	bl	f94 <generate_random_salt>
     cb4:	ldr	r3, [fp, #-8]
     cb8:	add	r3, r3, #3
     cbc:	ldr	r2, [pc, #80]	; d14 <make_md5_salt+0xdc>
     cc0:	add	r2, pc, r2
     cc4:	mov	r1, #36	; 0x24
     cc8:	strb	r1, [r2, r3]
     ccc:	ldr	r3, [fp, #-8]
     cd0:	add	r3, r3, #4
     cd4:	ldr	r2, [pc, #60]	; d18 <make_md5_salt+0xe0>
     cd8:	add	r2, pc, r2
     cdc:	mov	r1, #0
     ce0:	strb	r1, [r2, r3]
     ce4:	ldr	r3, [pc, #48]	; d1c <make_md5_salt+0xe4>
     ce8:	add	r3, pc, r3
     cec:	mov	r0, r3
     cf0:	sub	sp, fp, #4
     cf4:	ldr	fp, [sp]
     cf8:	add	sp, sp, #4
     cfc:	pop	{pc}		; (ldr pc, [sp], #4)
     d00:	.word	0x0000057c
     d04:	.word	0x000114a8
     d08:	.word	0x00011498
     d0c:	.word	0x00011488
     d10:	.word	0x00011474
     d14:	.word	0x0001145c
     d18:	.word	0x00011444
     d1c:	.word	0x00011434

00000d20 <make_sha256_salt>:
     d20:	str	fp, [sp, #-8]!
     d24:	str	lr, [sp, #4]
     d28:	add	fp, sp, #4
     d2c:	sub	sp, sp, #8
     d30:	str	r0, [fp, #-8]
     d34:	ldr	r3, [fp, #-8]
     d38:	cmp	r3, #16
     d3c:	ble	d58 <make_sha256_salt+0x38>
     d40:	ldr	r3, [pc, #160]	; de8 <make_sha256_salt+0xc8>
     d44:	add	r3, pc, r3
     d48:	mov	r0, r3
     d4c:	bl	5f0 <puts@plt>
     d50:	mov	r0, #0
     d54:	bl	614 <exit@plt>
     d58:	ldr	r3, [pc, #140]	; dec <make_sha256_salt+0xcc>
     d5c:	add	r3, pc, r3
     d60:	mov	r2, #36	; 0x24
     d64:	strb	r2, [r3]
     d68:	ldr	r3, [pc, #128]	; df0 <make_sha256_salt+0xd0>
     d6c:	add	r3, pc, r3
     d70:	mov	r2, #53	; 0x35
     d74:	strb	r2, [r3, #1]
     d78:	ldr	r3, [pc, #116]	; df4 <make_sha256_salt+0xd4>
     d7c:	add	r3, pc, r3
     d80:	mov	r2, #36	; 0x24
     d84:	strb	r2, [r3, #2]
     d88:	ldr	r1, [fp, #-8]
     d8c:	ldr	r3, [pc, #100]	; df8 <make_sha256_salt+0xd8>
     d90:	add	r3, pc, r3
     d94:	add	r0, r3, #3
     d98:	bl	f94 <generate_random_salt>
     d9c:	ldr	r3, [fp, #-8]
     da0:	add	r3, r3, #3
     da4:	ldr	r2, [pc, #80]	; dfc <make_sha256_salt+0xdc>
     da8:	add	r2, pc, r2
     dac:	mov	r1, #36	; 0x24
     db0:	strb	r1, [r2, r3]
     db4:	ldr	r3, [fp, #-8]
     db8:	add	r3, r3, #4
     dbc:	ldr	r2, [pc, #60]	; e00 <make_sha256_salt+0xe0>
     dc0:	add	r2, pc, r2
     dc4:	mov	r1, #0
     dc8:	strb	r1, [r2, r3]
     dcc:	ldr	r3, [pc, #48]	; e04 <make_sha256_salt+0xe4>
     dd0:	add	r3, pc, r3
     dd4:	mov	r0, r3
     dd8:	sub	sp, fp, #4
     ddc:	ldr	fp, [sp]
     de0:	add	sp, sp, #4
     de4:	pop	{pc}		; (ldr pc, [sp], #4)
     de8:	.word	0x000004b0
     dec:	.word	0x000113d8
     df0:	.word	0x000113c8
     df4:	.word	0x000113b8
     df8:	.word	0x000113a4
     dfc:	.word	0x0001138c
     e00:	.word	0x00011374
     e04:	.word	0x00011364

00000e08 <make_sha512_salt>:
     e08:	str	fp, [sp, #-8]!
     e0c:	str	lr, [sp, #4]
     e10:	add	fp, sp, #4
     e14:	sub	sp, sp, #8
     e18:	str	r0, [fp, #-8]
     e1c:	ldr	r3, [fp, #-8]
     e20:	cmp	r3, #16
     e24:	ble	e40 <make_sha512_salt+0x38>
     e28:	ldr	r3, [pc, #160]	; ed0 <make_sha512_salt+0xc8>
     e2c:	add	r3, pc, r3
     e30:	mov	r0, r3
     e34:	bl	5f0 <puts@plt>
     e38:	mov	r0, #0
     e3c:	bl	614 <exit@plt>
     e40:	ldr	r3, [pc, #140]	; ed4 <make_sha512_salt+0xcc>
     e44:	add	r3, pc, r3
     e48:	mov	r2, #36	; 0x24
     e4c:	strb	r2, [r3]
     e50:	ldr	r3, [pc, #128]	; ed8 <make_sha512_salt+0xd0>
     e54:	add	r3, pc, r3
     e58:	mov	r2, #54	; 0x36
     e5c:	strb	r2, [r3, #1]
     e60:	ldr	r3, [pc, #116]	; edc <make_sha512_salt+0xd4>
     e64:	add	r3, pc, r3
     e68:	mov	r2, #36	; 0x24
     e6c:	strb	r2, [r3, #2]
     e70:	ldr	r1, [fp, #-8]
     e74:	ldr	r3, [pc, #100]	; ee0 <make_sha512_salt+0xd8>
     e78:	add	r3, pc, r3
     e7c:	add	r0, r3, #3
     e80:	bl	f94 <generate_random_salt>
     e84:	ldr	r3, [fp, #-8]
     e88:	add	r3, r3, #3
     e8c:	ldr	r2, [pc, #80]	; ee4 <make_sha512_salt+0xdc>
     e90:	add	r2, pc, r2
     e94:	mov	r1, #36	; 0x24
     e98:	strb	r1, [r2, r3]
     e9c:	ldr	r3, [fp, #-8]
     ea0:	add	r3, r3, #4
     ea4:	ldr	r2, [pc, #60]	; ee8 <make_sha512_salt+0xe0>
     ea8:	add	r2, pc, r2
     eac:	mov	r1, #0
     eb0:	strb	r1, [r2, r3]
     eb4:	ldr	r3, [pc, #48]	; eec <make_sha512_salt+0xe4>
     eb8:	add	r3, pc, r3
     ebc:	mov	r0, r3
     ec0:	sub	sp, fp, #4
     ec4:	ldr	fp, [sp]
     ec8:	add	sp, sp, #4
     ecc:	pop	{pc}		; (ldr pc, [sp], #4)
     ed0:	.word	0x000003e4
     ed4:	.word	0x00011308
     ed8:	.word	0x000112f8
     edc:	.word	0x000112e8
     ee0:	.word	0x000112d4
     ee4:	.word	0x000112bc
     ee8:	.word	0x000112a4
     eec:	.word	0x00011294

00000ef0 <generate_poor_salt>:
     ef0:	str	fp, [sp, #-8]!
     ef4:	str	lr, [sp, #4]
     ef8:	add	fp, sp, #4
     efc:	sub	sp, sp, #16
     f00:	str	r0, [fp, #-16]
     f04:	str	r1, [fp, #-20]	; 0xffffffec
     f08:	mov	r0, #0
     f0c:	bl	5d8 <time@plt>
     f10:	mov	r3, r0
     f14:	mov	r0, r3
     f18:	bl	620 <srand@plt>
     f1c:	mov	r3, #0
     f20:	str	r3, [fp, #-8]
     f24:	b	f68 <generate_poor_salt+0x78>
     f28:	bl	62c <rand@plt>
     f2c:	mov	r3, r0
     f30:	rsbs	r2, r3, #0
     f34:	and	r3, r3, #63	; 0x3f
     f38:	and	r2, r2, #63	; 0x3f
     f3c:	rsbpl	r3, r2, #0
     f40:	ldr	r2, [fp, #-8]
     f44:	ldr	r1, [fp, #-16]
     f48:	add	r2, r1, r2
     f4c:	ldr	r1, [pc, #60]	; f90 <generate_poor_salt+0xa0>
     f50:	add	r1, pc, r1
     f54:	ldrb	r3, [r1, r3]
     f58:	strb	r3, [r2]
     f5c:	ldr	r3, [fp, #-8]
     f60:	add	r3, r3, #1
     f64:	str	r3, [fp, #-8]
     f68:	ldr	r2, [fp, #-8]
     f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
     f70:	cmp	r2, r3
     f74:	blt	f28 <generate_poor_salt+0x38>
     f78:	ldr	r3, [fp, #-16]
     f7c:	mov	r0, r3
     f80:	sub	sp, fp, #4
     f84:	ldr	fp, [sp]
     f88:	add	sp, sp, #4
     f8c:	pop	{pc}		; (ldr pc, [sp], #4)
     f90:	.word	0x0001110c

00000f94 <generate_random_salt>:
     f94:	str	fp, [sp, #-8]!
     f98:	str	lr, [sp, #4]
     f9c:	add	fp, sp, #4
     fa0:	sub	sp, sp, #16
     fa4:	str	r0, [fp, #-16]
     fa8:	str	r1, [fp, #-20]	; 0xffffffec
     fac:	mov	r1, #0
     fb0:	ldr	r3, [pc, #228]	; 109c <generate_random_salt+0x108>
     fb4:	add	r3, pc, r3
     fb8:	mov	r0, r3
     fbc:	bl	608 <open@plt>
     fc0:	str	r0, [fp, #-12]
     fc4:	ldr	r3, [fp, #-12]
     fc8:	cmp	r3, #0
     fcc:	bge	fe4 <generate_random_salt+0x50>
     fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
     fd4:	ldr	r0, [fp, #-16]
     fd8:	bl	ef0 <generate_poor_salt>
     fdc:	mov	r3, r0
     fe0:	b	1088 <generate_random_salt+0xf4>
     fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
     fe8:	mov	r2, r3
     fec:	ldr	r1, [fp, #-16]
     ff0:	ldr	r0, [fp, #-12]
     ff4:	bl	5cc <read@plt>
     ff8:	mov	r2, r0
     ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1000:	cmp	r3, r2
    1004:	beq	1024 <generate_random_salt+0x90>
    1008:	ldr	r0, [fp, #-12]
    100c:	bl	644 <close@plt>
    1010:	ldr	r1, [fp, #-20]	; 0xffffffec
    1014:	ldr	r0, [fp, #-16]
    1018:	bl	ef0 <generate_poor_salt>
    101c:	mov	r3, r0
    1020:	b	1088 <generate_random_salt+0xf4>
    1024:	mov	r3, #0
    1028:	str	r3, [fp, #-8]
    102c:	b	106c <generate_random_salt+0xd8>
    1030:	ldr	r3, [fp, #-8]
    1034:	ldr	r2, [fp, #-16]
    1038:	add	r3, r2, r3
    103c:	ldrb	r3, [r3]
    1040:	and	r2, r3, #63	; 0x3f
    1044:	ldr	r3, [fp, #-8]
    1048:	ldr	r1, [fp, #-16]
    104c:	add	r3, r1, r3
    1050:	ldr	r1, [pc, #72]	; 10a0 <generate_random_salt+0x10c>
    1054:	add	r1, pc, r1
    1058:	ldrb	r2, [r1, r2]
    105c:	strb	r2, [r3]
    1060:	ldr	r3, [fp, #-8]
    1064:	add	r3, r3, #1
    1068:	str	r3, [fp, #-8]
    106c:	ldr	r2, [fp, #-8]
    1070:	ldr	r3, [fp, #-20]	; 0xffffffec
    1074:	cmp	r2, r3
    1078:	blt	1030 <generate_random_salt+0x9c>
    107c:	ldr	r0, [fp, #-12]
    1080:	bl	644 <close@plt>
    1084:	ldr	r3, [fp, #-16]
    1088:	mov	r0, r3
    108c:	sub	sp, fp, #4
    1090:	ldr	fp, [sp]
    1094:	add	sp, sp, #4
    1098:	pop	{pc}		; (ldr pc, [sp], #4)
    109c:	.word	0x00000278
    10a0:	.word	0x00011008

Disassembly of section .fini:

000010a4 <_fini>:
    10a4:	push	{r3, lr}
    10a8:	pop	{r3, pc}
